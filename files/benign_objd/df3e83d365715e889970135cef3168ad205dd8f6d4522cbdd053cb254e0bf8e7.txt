
df3e83d365715e889970135cef3168ad205dd8f6d4522cbdd053cb254e0bf8e7.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	lea    rax,[rip+0x6d5]        # 0x1400016e0
   14000100b:	test   rax,rax
   14000100e:	je     0x140001015
   140001010:	call   0x1400016e0
   140001015:	lea    rcx,[rip+0x8d84]        # 0x140009da0
   14000101c:	add    rsp,0x28
   140001020:	jmp    0x1400096c8
   140001025:	int3   
   140001026:	int3   
   140001027:	int3   
   140001028:	int3   
   140001029:	int3   
   14000102a:	int3   
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	lea    rcx,[rip+0xf76d]        # 0x1400107a8
   14000103b:	call   QWORD PTR [rip+0x92af]        # 0x14000a2f0
   140001041:	lea    rcx,[rip+0x8d88]        # 0x140009dd0
   140001048:	add    rsp,0x28
   14000104c:	jmp    0x1400096c8
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	sub    rsp,0x28
   140001064:	lea    rax,[rip+0x7645]        # 0x1400086b0
   14000106b:	test   rax,rax
   14000106e:	je     0x140001075
   140001070:	call   0x1400086b0
   140001075:	lea    rcx,[rip+0x8da4]        # 0x140009e20
   14000107c:	add    rsp,0x28
   140001080:	jmp    0x1400096c8
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	rex push rdi
   140001092:	sub    rsp,0x20
   140001096:	mov    rdi,QWORD PTR [rip+0xf74b]        # 0x1400107e8
   14000109d:	test   rdi,rdi
   1400010a0:	je     0x1400010f2
   1400010a2:	cmp    QWORD PTR [rip+0xf736],0x0        # 0x1400107e0
   1400010aa:	je     0x1400010d4
   1400010ac:	mov    rdi,QWORD PTR [rip+0xf73d]        # 0x1400107f0
   1400010b3:	mov    rcx,rdi
   1400010b6:	call   QWORD PTR [rip+0x941c]        # 0x14000a4d8
   1400010bc:	mov    rcx,QWORD PTR [rip+0xf71d]        # 0x1400107e0
   1400010c3:	call   rdi
   1400010c5:	and    QWORD PTR [rip+0xf713],0x0        # 0x1400107e0
   1400010cd:	mov    rdi,QWORD PTR [rip+0xf714]        # 0x1400107e8
   1400010d4:	mov    rcx,rdi
   1400010d7:	call   QWORD PTR [rip+0x93fb]        # 0x14000a4d8
   1400010dd:	lea    r9,[rip+0xf6fc]        # 0x1400107e0
   1400010e4:	xor    r8d,r8d
   1400010e7:	xor    edx,edx
   1400010e9:	lea    rcx,[rip+0xc5c8]        # 0x14000d6b8
   1400010f0:	call   rdi
   1400010f2:	lea    rcx,[rip+0x8d57]        # 0x140009e50
   1400010f9:	add    rsp,0x20
   1400010fd:	pop    rdi
   1400010fe:	jmp    0x1400096c8
   140001103:	int3   
   140001104:	int3   
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	sub    rsp,0x38
   140001114:	mov    rax,QWORD PTR [rip+0xeeed]        # 0x140010008
   14000111b:	xor    rax,rsp
   14000111e:	mov    QWORD PTR [rsp+0x28],rax
   140001123:	and    QWORD PTR [rsp+0x20],0x0
   140001129:	lea    r8,[rsp+0x20]
   14000112e:	lea    rdx,[rip+0xa553]        # 0x14000b688
   140001135:	mov    ecx,0x1
   14000113a:	call   QWORD PTR [rip+0x90a0]        # 0x14000a1e0
   140001140:	test   eax,eax
   140001142:	je     0x1400011f8
   140001148:	mov    rcx,QWORD PTR [rsp+0x20]
   14000114d:	test   rcx,rcx
   140001150:	je     0x1400011f8
   140001156:	lea    rdx,[rip+0xc50b]        # 0x14000d668
   14000115d:	call   QWORD PTR [rip+0x9055]        # 0x14000a1b8
   140001163:	mov    rcx,QWORD PTR [rsp+0x20]
   140001168:	lea    rdx,[rip+0xc511]        # 0x14000d680
   14000116f:	mov    QWORD PTR [rip+0xf672],rax        # 0x1400107e8
   140001176:	call   QWORD PTR [rip+0x903c]        # 0x14000a1b8
   14000117c:	mov    rcx,QWORD PTR [rsp+0x20]
   140001181:	lea    rdx,[rip+0xc510]        # 0x14000d698
   140001188:	mov    QWORD PTR [rip+0xf661],rax        # 0x1400107f0
   14000118f:	call   QWORD PTR [rip+0x9023]        # 0x14000a1b8
   140001195:	mov    rcx,QWORD PTR [rsp+0x20]
   14000119a:	lea    rdx,[rip+0xc507]        # 0x14000d6a8
   1400011a1:	mov    QWORD PTR [rip+0xf650],rax        # 0x1400107f8
   1400011a8:	call   QWORD PTR [rip+0x900a]        # 0x14000a1b8
   1400011ae:	cmp    QWORD PTR [rip+0xf632],0x0        # 0x1400107e8
   1400011b6:	mov    QWORD PTR [rip+0xf643],rax        # 0x140010800
   1400011bd:	je     0x1400011d8
   1400011bf:	cmp    QWORD PTR [rip+0xf629],0x0        # 0x1400107f0
   1400011c7:	je     0x1400011d8
   1400011c9:	cmp    QWORD PTR [rip+0xf627],0x0        # 0x1400107f8
   1400011d1:	je     0x1400011d8
   1400011d3:	test   rax,rax
   1400011d6:	jne    0x1400011f8
   1400011d8:	and    QWORD PTR [rip+0xf608],0x0        # 0x1400107e8
   1400011e0:	and    QWORD PTR [rip+0xf608],0x0        # 0x1400107f0
   1400011e8:	and    QWORD PTR [rip+0xf608],0x0        # 0x1400107f8
   1400011f0:	and    QWORD PTR [rip+0xf608],0x0        # 0x140010800
   1400011f8:	lea    rcx,[rip+0x8ca1]        # 0x140009ea0
   1400011ff:	call   0x1400096c8
   140001204:	mov    rcx,QWORD PTR [rsp+0x28]
   140001209:	xor    rcx,rsp
   14000120c:	call   0x140009600
   140001211:	add    rsp,0x38
   140001215:	ret    
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	int3   
   140001221:	int3   
   140001222:	int3   
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	mov    QWORD PTR [rsp+0x8],rbx
   140001235:	mov    QWORD PTR [rsp+0x10],rbp
   14000123a:	mov    QWORD PTR [rsp+0x18],rsi
   14000123f:	push   rdi
   140001240:	push   r14
   140001242:	push   r15
   140001244:	sub    rsp,0x20
   140001248:	xor    r15d,r15d
   14000124b:	mov    rbx,rdx
   14000124e:	mov    DWORD PTR [r8],r15d
   140001251:	mov    r14d,r15d
   140001254:	sub    ecx,0x4
   140001257:	je     0x14000129c
   140001259:	cmp    ecx,0x1
   14000125c:	je     0x140001267
   14000125e:	lea    eax,[r15+0x57]
   140001262:	jmp    0x14000133d
   140001267:	mov    rsi,r15
   14000126a:	mov    edi,r15d
   14000126d:	mov    bpl,r15b
   140001270:	cmp    WORD PTR [rdx+0x2a],r15w
   140001275:	jbe    0x1400012cd
   140001277:	movzx  eax,WORD PTR [rdx+0x2a]
   14000127b:	mov    rcx,QWORD PTR [rbx+0x30]
   14000127f:	dec    eax
   140001281:	cdq    
   140001282:	and    edx,0x1f
   140001285:	add    eax,edx
   140001287:	xor    edx,edx
   140001289:	sar    eax,0x5
   14000128c:	inc    eax
   14000128e:	movsxd r8,eax
   140001291:	shl    r8,0x2
   140001295:	call   0x140009c86
   14000129a:	jmp    0x1400012cd
   14000129c:	mov    rcx,r9
   14000129f:	call   QWORD PTR [rip+0x90b3]        # 0x14000a358
   1400012a5:	mov    rcx,rax
   1400012a8:	mov    rsi,rax
   1400012ab:	call   QWORD PTR [rip+0x909f]        # 0x14000a350
   1400012b1:	mov    rcx,rsi
   1400012b4:	mov    bpl,al
   1400012b7:	call   QWORD PTR [rip+0x90bb]        # 0x14000a378
   1400012bd:	mov    edi,eax
   1400012bf:	mov    r14d,0x1
   1400012c5:	or     eax,0xffffffff
   1400012c8:	test   edi,edi
   1400012ca:	cmove  edi,eax
   1400012cd:	mov    r9d,r15d
   1400012d0:	mov    QWORD PTR [rbx+0x8],rsi
   1400012d4:	mov    BYTE PTR [rbx+0x28],bpl
   1400012d8:	mov    DWORD PTR [rbx+0x20],edi
   1400012db:	mov    DWORD PTR [rbx+0x24],r14d
   1400012df:	cmp    r15w,WORD PTR [rbx+0x2a]
   1400012e4:	jae    0x14000133b
   1400012e6:	cmp    BYTE PTR [rip+0xf3e3],r15b        # 0x1400106d0
   1400012ed:	mov    rax,QWORD PTR [rbx+0x38]
   1400012f1:	mov    r10d,r9d
   1400012f4:	mov    rcx,QWORD PTR [rax+r10*8]
   1400012f8:	mov    rax,QWORD PTR [rbx+0x40]
   1400012fc:	mov    dl,BYTE PTR [r10+rax*1]
   140001300:	mov    al,BYTE PTR [rbx+0x28]
   140001303:	je     0x140001356
   140001305:	cmp    dl,al
   140001307:	jbe    0x14000130d
   140001309:	test   al,al
   14000130b:	jne    0x140001376
   14000130d:	test   ecx,ecx
   14000130f:	je     0x140001316
   140001311:	test   DWORD PTR [rbx+0x20],ecx
   140001314:	je     0x140001376
   140001316:	mov    r8,QWORD PTR [rbx+0x30]
   14000131a:	mov    ecx,r9d
   14000131d:	and    ecx,0x1f
   140001320:	shr    r10,0x5
   140001324:	mov    edx,0x1
   140001329:	shl    edx,cl
   14000132b:	or     DWORD PTR [r8+r10*4],edx
   14000132f:	movzx  eax,WORD PTR [rbx+0x2a]
   140001333:	inc    r9d
   140001336:	cmp    r9d,eax
   140001339:	jb     0x1400012e6
   14000133b:	xor    eax,eax
   14000133d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001342:	mov    rbp,QWORD PTR [rsp+0x48]
   140001347:	mov    rsi,QWORD PTR [rsp+0x50]
   14000134c:	add    rsp,0x20
   140001350:	pop    r15
   140001352:	pop    r14
   140001354:	pop    rdi
   140001355:	ret    
   140001356:	cmp    dl,al
   140001358:	jbe    0x14000135e
   14000135a:	test   al,al
   14000135c:	jne    0x140001376
   14000135e:	test   rcx,rcx
   140001361:	je     0x140001316
   140001363:	test   QWORD PTR [rbx+0x10],rcx
   140001367:	je     0x140001376
   140001369:	mov    rax,QWORD PTR [rbx+0x18]
   14000136d:	and    rax,rcx
   140001370:	cmp    rax,QWORD PTR [rbx+0x18]
   140001374:	je     0x140001316
   140001376:	mov    r8,QWORD PTR [rbx+0x30]
   14000137a:	mov    ecx,r9d
   14000137d:	and    ecx,0x1f
   140001380:	shr    r10,0x5
   140001384:	mov    edx,0x1
   140001389:	shl    edx,cl
   14000138b:	not    edx
   14000138d:	and    DWORD PTR [r8+r10*4],edx
   140001391:	jmp    0x14000132f
   140001393:	int3   
   140001394:	int3   
   140001395:	int3   
   140001396:	int3   
   140001397:	int3   
   140001398:	int3   
   140001399:	int3   
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013a5:	push   rdi
   1400013a6:	sub    rsp,0x20
   1400013aa:	mov    r10,QWORD PTR [rsp+0x60]
   1400013af:	xor    edi,edi
   1400013b1:	test   r10,r10
   1400013b4:	je     0x1400014c7
   1400013ba:	test   edx,edx
   1400013bc:	je     0x140001484
   1400013c2:	sub    edx,0x1
   1400013c5:	jne    0x1400014c7
   1400013cb:	mov    r11d,edi
   1400013ce:	mov    rax,QWORD PTR [rsp+0x50]
   1400013d3:	mov    QWORD PTR [r10+0x10],r9
   1400013d7:	lea    r9d,[rdi+0x1]
   1400013db:	mov    DWORD PTR [r10+0x24],r9d
   1400013df:	mov    BYTE PTR [r10+0x28],r8b
   1400013e3:	mov    QWORD PTR [r10+0x18],rax
   1400013e7:	cmp    di,WORD PTR [r10+0x2a]
   1400013ec:	jae    0x1400014c7
   1400013f2:	cmp    BYTE PTR [rip+0xf2d7],dil        # 0x1400106d0
   1400013f9:	mov    rax,QWORD PTR [r10+0x38]
   1400013fd:	mov    ebx,r11d
   140001400:	mov    rcx,QWORD PTR [rax+rbx*8]
   140001404:	mov    rax,QWORD PTR [r10+0x40]
   140001408:	mov    dl,BYTE PTR [rbx+rax*1]
   14000140b:	mov    al,BYTE PTR [r10+0x28]
   14000140f:	je     0x140001449
   140001411:	cmp    dl,al
   140001413:	jbe    0x140001419
   140001415:	test   al,al
   140001417:	jne    0x140001469
   140001419:	test   ecx,ecx
   14000141b:	je     0x140001423
   14000141d:	test   DWORD PTR [r10+0x20],ecx
   140001421:	je     0x140001469
   140001423:	mov    r8,QWORD PTR [r10+0x30]
   140001427:	mov    ecx,r11d
   14000142a:	and    ecx,0x1f
   14000142d:	shr    rbx,0x5
   140001431:	mov    edx,r9d
   140001434:	shl    edx,cl
   140001436:	or     DWORD PTR [r8+rbx*4],edx
   14000143a:	movzx  eax,WORD PTR [r10+0x2a]
   14000143f:	add    r11d,r9d
   140001442:	cmp    r11d,eax
   140001445:	jb     0x1400013f2
   140001447:	jmp    0x1400014c7
   140001449:	cmp    dl,al
   14000144b:	jbe    0x140001451
   14000144d:	test   al,al
   14000144f:	jne    0x140001469
   140001451:	test   rcx,rcx
   140001454:	je     0x140001423
   140001456:	test   QWORD PTR [r10+0x10],rcx
   14000145a:	je     0x140001469
   14000145c:	mov    rax,QWORD PTR [r10+0x18]
   140001460:	and    rax,rcx
   140001463:	cmp    rax,QWORD PTR [r10+0x18]
   140001467:	je     0x140001423
   140001469:	mov    r8,QWORD PTR [r10+0x30]
   14000146d:	mov    ecx,r11d
   140001470:	and    ecx,0x1f
   140001473:	shr    rbx,0x5
   140001477:	mov    edx,r9d
   14000147a:	shl    edx,cl
   14000147c:	not    edx
   14000147e:	and    DWORD PTR [r8+rbx*4],edx
   140001482:	jmp    0x14000143a
   140001484:	mov    DWORD PTR [r10+0x24],edi
   140001488:	mov    BYTE PTR [r10+0x28],dil
   14000148c:	mov    QWORD PTR [r10+0x10],rdi
   140001490:	mov    QWORD PTR [r10+0x18],rdi
   140001494:	cmp    WORD PTR [r10+0x2a],di
   140001499:	jbe    0x1400014c7
   14000149b:	movzx  eax,WORD PTR [r10+0x2a]
   1400014a0:	mov    r9d,0x1
   1400014a6:	mov    rcx,QWORD PTR [r10+0x30]
   1400014aa:	sub    eax,r9d
   1400014ad:	cdq    
   1400014ae:	and    edx,0x1f
   1400014b1:	add    eax,edx
   1400014b3:	xor    edx,edx
   1400014b5:	sar    eax,0x5
   1400014b8:	add    eax,r9d
   1400014bb:	movsxd r8,eax
   1400014be:	shl    r8,0x2
   1400014c2:	call   0x140009c86
   1400014c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014cc:	add    rsp,0x20
   1400014d0:	pop    rdi
   1400014d1:	ret    
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	rex push rbx
   1400014e2:	push   rbp
   1400014e3:	push   rsi
   1400014e4:	push   rdi
   1400014e5:	push   r12
   1400014e7:	push   r14
   1400014e9:	push   r15
   1400014eb:	sub    rsp,0x180
   1400014f2:	mov    rax,QWORD PTR [rip+0xeb0f]        # 0x140010008
   1400014f9:	xor    rax,rsp
   1400014fc:	mov    QWORD PTR [rsp+0x170],rax
   140001504:	xor    ebx,ebx
   140001506:	mov    r15,r9
   140001509:	mov    r14,r8
   14000150c:	mov    rbp,rdx
   14000150f:	mov    r12,rcx
   140001512:	test   r9,r9
   140001515:	jne    0x14000151f
   140001517:	lea    eax,[rbx+0x57]
   14000151a:	jmp    0x1400016b1
   14000151f:	cmp    QWORD PTR [r9],rbx
   140001522:	jne    0x1400016af
   140001528:	cmp    BYTE PTR [rip+0xf196],bl        # 0x1400106c4
   14000152e:	mov    esi,ebx
   140001530:	jne    0x140001621
   140001536:	lea    rcx,[rsp+0x50]
   14000153b:	mov    DWORD PTR [rsp+0x50],0x114
   140001543:	call   QWORD PTR [rip+0x8de7]        # 0x14000a330
   140001549:	test   eax,eax
   14000154b:	je     0x140001578
   14000154d:	mov    ecx,DWORD PTR [rsp+0x54]
   140001551:	cmp    ecx,0x6
   140001554:	setb   al
   140001557:	mov    BYTE PTR [rip+0xf173],al        # 0x1400106d0
   14000155d:	cmp    ecx,0x6
   140001560:	ja     0x14000156b
   140001562:	jne    0x140001570
   140001564:	cmp    DWORD PTR [rsp+0x58],0x1
   140001569:	jbe    0x140001570
   14000156b:	mov    esi,0x1
   140001570:	test   al,al
   140001572:	jne    0x140001618
   140001578:	lea    rcx,[rip+0x9059]        # 0x14000a5d8
   14000157f:	call   QWORD PTR [rip+0x8c3b]        # 0x14000a1c0
   140001585:	mov    rdi,rax
   140001588:	test   rax,rax
   14000158b:	jne    0x1400015a6
   14000158d:	test   esi,esi
   14000158f:	je     0x1400015ec
   140001591:	lea    rcx,[rip+0x9068]        # 0x14000a600
   140001598:	call   QWORD PTR [rip+0x8c22]        # 0x14000a1c0
   14000159e:	mov    rdi,rax
   1400015a1:	test   rax,rax
   1400015a4:	je     0x1400015ec
   1400015a6:	lea    rdx,[rip+0x90a3]        # 0x14000a650
   1400015ad:	mov    rcx,rdi
   1400015b0:	call   QWORD PTR [rip+0x8c02]        # 0x14000a1b8
   1400015b6:	mov    QWORD PTR [rip+0xf10b],rax        # 0x1400106c8
   1400015bd:	test   rax,rax
   1400015c0:	je     0x1400015ec
   1400015c2:	lea    rdx,[rip+0x9097]        # 0x14000a660
   1400015c9:	mov    rcx,rdi
   1400015cc:	call   QWORD PTR [rip+0x8be6]        # 0x14000a1b8
   1400015d2:	mov    QWORD PTR [rip+0xea8f],rax        # 0x140010068
   1400015d9:	test   rax,rax
   1400015dc:	jne    0x1400015f6
   1400015de:	lea    rax,[rip+0xfffffffffffffefb]        # 0x1400014e0
   1400015e5:	mov    QWORD PTR [rip+0xea7c],rax        # 0x140010068
   1400015ec:	mov    al,0x1
   1400015ee:	mov    BYTE PTR [rip+0xf0dc],al        # 0x1400106d0
   1400015f4:	jmp    0x140001618
   1400015f6:	lea    rdx,[rip+0x9073]        # 0x14000a670
   1400015fd:	mov    rcx,rdi
   140001600:	call   QWORD PTR [rip+0x8bb2]        # 0x14000a1b8
   140001606:	mov    QWORD PTR [rip+0xf0d3],rax        # 0x1400106e0
   14000160d:	test   rax,rax
   140001610:	je     0x1400015de
   140001612:	mov    al,BYTE PTR [rip+0xf0b8]        # 0x1400106d0
   140001618:	mov    BYTE PTR [rip+0xf0a5],0x1        # 0x1400106c4
   14000161f:	jmp    0x140001627
   140001621:	mov    al,BYTE PTR [rip+0xf0a9]        # 0x1400106d0
   140001627:	test   al,al
   140001629:	jne    0x140001659
   14000162b:	mov    rbx,QWORD PTR [rip+0xea36]        # 0x140010068
   140001632:	lea    rax,[rip+0xfffffffffffffd67]        # 0x1400013a0
   140001639:	test   rbp,rbp
   14000163c:	mov    rcx,rbx
   14000163f:	cmove  rbp,rax
   140001643:	call   QWORD PTR [rip+0x8e8f]        # 0x14000a4d8
   140001649:	mov    r9,r15
   14000164c:	mov    r8,r14
   14000164f:	mov    rdx,rbp
   140001652:	mov    rcx,r12
   140001655:	call   rbx
   140001657:	jmp    0x1400016ad
   140001659:	test   r14,r14
   14000165c:	jne    0x140001664
   14000165e:	lea    ebx,[r14+0x57]
   140001662:	jmp    0x1400016af
   140001664:	mov    QWORD PTR [rsp+0x38],r14
   140001669:	lea    rax,[rip+0xfffffffffffffbc0]        # 0x140001230
   140001670:	test   rbp,rbp
   140001673:	mov    QWORD PTR [rsp+0x30],rbx
   140001678:	mov    QWORD PTR [rsp+0x28],rbx
   14000167d:	mov    r9d,0x1
   140001683:	cmove  rbp,rax
   140001687:	mov    QWORD PTR [r15],r14
   14000168a:	lea    rax,[rsp+0x40]
   14000168f:	mov    QWORD PTR [rsp+0x40],r12
   140001694:	mov    rcx,rbp
   140001697:	mov    QWORD PTR [rsp+0x20],rax
   14000169c:	mov    r8,r12
   14000169f:	mov    QWORD PTR [rsp+0x48],rbx
   1400016a4:	mov    rdx,r14
   1400016a7:	call   QWORD PTR [rip+0x8cb3]        # 0x14000a360
   1400016ad:	mov    ebx,eax
   1400016af:	mov    eax,ebx
   1400016b1:	mov    rcx,QWORD PTR [rsp+0x170]
   1400016b9:	xor    rcx,rsp
   1400016bc:	call   0x140009600
   1400016c1:	add    rsp,0x180
   1400016c8:	pop    r15
   1400016ca:	pop    r14
   1400016cc:	pop    r12
   1400016ce:	pop    rdi
   1400016cf:	pop    rsi
   1400016d0:	pop    rbp
   1400016d1:	pop    rbx
   1400016d2:	ret    
   1400016d3:	int3   
   1400016d4:	int3   
   1400016d5:	int3   
   1400016d6:	int3   
   1400016d7:	int3   
   1400016d8:	int3   
   1400016d9:	int3   
   1400016da:	int3   
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016e5:	push   rdi
   1400016e6:	sub    rsp,0x180
   1400016ed:	mov    rax,QWORD PTR [rip+0xe914]        # 0x140010008
   1400016f4:	xor    rax,rsp
   1400016f7:	mov    QWORD PTR [rsp+0x170],rax
   1400016ff:	cmp    QWORD PTR [rip+0xefd1],0x0        # 0x1400106d8
   140001707:	jne    0x140001892
   14000170d:	xor    edi,edi
   14000170f:	cmp    BYTE PTR [rip+0xefae],dil        # 0x1400106c4
   140001716:	jne    0x140001807
   14000171c:	lea    rcx,[rsp+0x50]
   140001721:	mov    DWORD PTR [rsp+0x50],0x114
   140001729:	call   QWORD PTR [rip+0x8c01]        # 0x14000a330
   14000172f:	test   eax,eax
   140001731:	je     0x14000175e
   140001733:	mov    ecx,DWORD PTR [rsp+0x54]
   140001737:	cmp    ecx,0x6
   14000173a:	setb   al
   14000173d:	mov    BYTE PTR [rip+0xef8d],al        # 0x1400106d0
   140001743:	cmp    ecx,0x6
   140001746:	ja     0x140001751
   140001748:	jne    0x140001756
   14000174a:	cmp    DWORD PTR [rsp+0x58],0x1
   14000174f:	jbe    0x140001756
   140001751:	mov    edi,0x1
   140001756:	test   al,al
   140001758:	jne    0x1400017fe
   14000175e:	lea    rcx,[rip+0x8e73]        # 0x14000a5d8
   140001765:	call   QWORD PTR [rip+0x8a55]        # 0x14000a1c0
   14000176b:	mov    rbx,rax
   14000176e:	test   rax,rax
   140001771:	jne    0x14000178c
   140001773:	test   edi,edi
   140001775:	je     0x1400017d2
   140001777:	lea    rcx,[rip+0x8e82]        # 0x14000a600
   14000177e:	call   QWORD PTR [rip+0x8a3c]        # 0x14000a1c0
   140001784:	mov    rbx,rax
   140001787:	test   rax,rax
   14000178a:	je     0x1400017d2
   14000178c:	lea    rdx,[rip+0x8ebd]        # 0x14000a650
   140001793:	mov    rcx,rbx
   140001796:	call   QWORD PTR [rip+0x8a1c]        # 0x14000a1b8
   14000179c:	mov    QWORD PTR [rip+0xef25],rax        # 0x1400106c8
   1400017a3:	test   rax,rax
   1400017a6:	je     0x1400017d2
   1400017a8:	lea    rdx,[rip+0x8eb1]        # 0x14000a660
   1400017af:	mov    rcx,rbx
   1400017b2:	call   QWORD PTR [rip+0x8a00]        # 0x14000a1b8
   1400017b8:	mov    QWORD PTR [rip+0xe8a9],rax        # 0x140010068
   1400017bf:	test   rax,rax
   1400017c2:	jne    0x1400017dc
   1400017c4:	lea    rax,[rip+0xfffffffffffffd15]        # 0x1400014e0
   1400017cb:	mov    QWORD PTR [rip+0xe896],rax        # 0x140010068
   1400017d2:	mov    al,0x1
   1400017d4:	mov    BYTE PTR [rip+0xeef6],al        # 0x1400106d0
   1400017da:	jmp    0x1400017fe
   1400017dc:	lea    rdx,[rip+0x8e8d]        # 0x14000a670
   1400017e3:	mov    rcx,rbx
   1400017e6:	call   QWORD PTR [rip+0x89cc]        # 0x14000a1b8
   1400017ec:	mov    QWORD PTR [rip+0xeeed],rax        # 0x1400106e0
   1400017f3:	test   rax,rax
   1400017f6:	je     0x1400017c4
   1400017f8:	mov    al,BYTE PTR [rip+0xeed2]        # 0x1400106d0
   1400017fe:	mov    BYTE PTR [rip+0xeebf],0x1        # 0x1400106c4
   140001805:	jmp    0x14000180d
   140001807:	mov    al,BYTE PTR [rip+0xeec3]        # 0x1400106d0
   14000180d:	test   al,al
   14000180f:	jne    0x140001841
   140001811:	mov    rbx,QWORD PTR [rip+0xe850]        # 0x140010068
   140001818:	mov    rcx,rbx
   14000181b:	call   QWORD PTR [rip+0x8cb7]        # 0x14000a4d8
   140001821:	lea    r9,[rip+0xeeb0]        # 0x1400106d8
   140001828:	lea    r8,[rip+0xe7f1]        # 0x140010020
   14000182f:	lea    rdx,[rip+0xfffffffffffffb6a]        # 0x1400013a0
   140001836:	lea    rcx,[rip+0x8e53]        # 0x14000a690
   14000183d:	call   rbx
   14000183f:	jmp    0x140001892
   140001841:	and    QWORD PTR [rsp+0x48],0x0
   140001847:	lea    rdx,[rip+0xe7d2]        # 0x140010020
   14000184e:	mov    QWORD PTR [rsp+0x38],rdx
   140001853:	lea    rax,[rip+0x8e36]        # 0x14000a690
   14000185a:	and    QWORD PTR [rsp+0x30],0x0
   140001860:	lea    rcx,[rsp+0x40]
   140001865:	and    QWORD PTR [rsp+0x28],0x0
   14000186b:	mov    r9d,0x1
   140001871:	mov    QWORD PTR [rsp+0x20],rcx
   140001876:	mov    r8,rax
   140001879:	lea    rcx,[rip+0xfffffffffffff9b0]        # 0x140001230
   140001880:	mov    QWORD PTR [rip+0xee51],rdx        # 0x1400106d8
   140001887:	mov    QWORD PTR [rsp+0x40],rax
   14000188c:	call   QWORD PTR [rip+0x8ace]        # 0x14000a360
   140001892:	mov    rcx,QWORD PTR [rsp+0x170]
   14000189a:	xor    rcx,rsp
   14000189d:	call   0x140009600
   1400018a2:	mov    rbx,QWORD PTR [rsp+0x190]
   1400018aa:	add    rsp,0x180
   1400018b1:	pop    rdi
   1400018b2:	ret    
   1400018b3:	int3   
   1400018b4:	int3   
   1400018b5:	int3   
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400018ca:	push   rdi
   1400018cb:	sub    rsp,0x20
   1400018cf:	xor    esi,esi
   1400018d1:	cmp    BYTE PTR [rip+0xedec],sil        # 0x1400106c4
   1400018d8:	je     0x14000194d
   1400018da:	mov    rdi,QWORD PTR [rip+0xedf7]        # 0x1400106d8
   1400018e1:	test   rdi,rdi
   1400018e4:	je     0x14000194d
   1400018e6:	cmp    BYTE PTR [rip+0xede3],sil        # 0x1400106d0
   1400018ed:	jne    0x140001906
   1400018ef:	mov    rbx,QWORD PTR [rip+0xedea]        # 0x1400106e0
   1400018f6:	mov    rcx,rbx
   1400018f9:	call   QWORD PTR [rip+0x8bd9]        # 0x14000a4d8
   1400018ff:	mov    rcx,rdi
   140001902:	call   rbx
   140001904:	jmp    0x140001946
   140001906:	mov    rcx,QWORD PTR [rdi]
   140001909:	call   QWORD PTR [rip+0x8a59]        # 0x14000a368
   14000190f:	mov    DWORD PTR [rdi+0x20],esi
   140001912:	mov    BYTE PTR [rdi+0x28],sil
   140001916:	mov    QWORD PTR [rdi+0x8],rsi
   14000191a:	cmp    WORD PTR [rdi+0x2a],si
   14000191e:	jbe    0x140001943
   140001920:	movzx  eax,WORD PTR [rdi+0x2a]
   140001924:	mov    rcx,QWORD PTR [rdi+0x30]
   140001928:	dec    eax
   14000192a:	cdq    
   14000192b:	and    edx,0x1f
   14000192e:	add    eax,edx
   140001930:	xor    edx,edx
   140001932:	sar    eax,0x5
   140001935:	inc    eax
   140001937:	movsxd r8,eax
   14000193a:	shl    r8,0x2
   14000193e:	call   0x140009c86
   140001943:	mov    QWORD PTR [rdi],rsi
   140001946:	mov    QWORD PTR [rip+0xed8b],rsi        # 0x1400106d8
   14000194d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001952:	mov    rsi,QWORD PTR [rsp+0x38]
   140001957:	add    rsp,0x20
   14000195b:	pop    rdi
   14000195c:	ret    
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	int3   
   140001961:	int3   
   140001962:	int3   
   140001963:	int3   
   140001964:	mov    QWORD PTR [rsp+0x8],rbx
   140001969:	mov    QWORD PTR [rsp+0x10],rsi
   14000196e:	mov    QWORD PTR [rsp+0x20],rdi
   140001973:	push   rbp
   140001974:	push   r12
   140001976:	push   r13
   140001978:	push   r14
   14000197a:	push   r15
   14000197c:	sub    rsp,0xd0
   140001983:	lea    rbp,[rsp+0x60]
   140001988:	and    rbp,0xffffffffffffffc0
   14000198c:	movzx  r9d,WORD PTR [rip+0x9b04]        # 0x14000b498
   140001994:	xor    r12d,r12d
   140001997:	mov    rcx,QWORD PTR [rip+0xed3a]        # 0x1400106d8
   14000199e:	mov    rsi,r8
   1400019a1:	xorps  xmm0,xmm0
   1400019a4:	mov    QWORD PTR [rbp+0x10],r12
   1400019a8:	lea    r8,[rip+0x9ae9]        # 0x14000b498
   1400019af:	mov    DWORD PTR [rbp+0x0],r12d
   1400019b3:	lea    edx,[r12+0x2]
   1400019b8:	mov    r15d,r12d
   1400019bb:	movdqu XMMWORD PTR [rbp+0x18],xmm0
   1400019c0:	call   QWORD PTR [rip+0x89c2]        # 0x14000a388
   1400019c6:	lea    r13d,[r12+0x1]
   1400019cb:	test   BYTE PTR [rip+0xecee],r13b        # 0x1400106c0
   1400019d2:	je     0x1400019ea
   1400019d4:	mov    r9,rsi
   1400019d7:	lea    r8,[rip+0x8d02]        # 0x14000a6e0
   1400019de:	lea    rdx,[rip+0x8d53]        # 0x14000a738
   1400019e5:	call   0x140002b6c
   1400019ea:	lea    rcx,[rip+0xedb7]        # 0x1400107a8
   1400019f1:	call   QWORD PTR [rip+0x88f1]        # 0x14000a2e8
   1400019f7:	add    DWORD PTR [rip+0xed26],r13d        # 0x140010724
   1400019fe:	cmp    DWORD PTR [rip+0xeceb],r12d        # 0x1400106f0
   140001a05:	jne    0x140001abb
   140001a0b:	lea    rcx,[rip+0x9b36]        # 0x14000b548
   140001a12:	mov    QWORD PTR [rip+0xeccf],r12        # 0x1400106e8
   140001a19:	call   0x140003154
   140001a1e:	mov    rbx,rax
   140001a21:	test   rax,rax
   140001a24:	je     0x140001a2e
   140001a26:	mov    rcx,rax
   140001a29:	call   0x1400040f8
   140001a2e:	xor    r8d,r8d
   140001a31:	lea    rcx,[rip+0x9b48]        # 0x14000b580
   140001a38:	xor    edx,edx
   140001a3a:	call   QWORD PTR [rip+0x8788]        # 0x14000a1c8
   140001a40:	mov    QWORD PTR [rip+0xeca1],rax        # 0x1400106e8
   140001a47:	test   rax,rax
   140001a4a:	je     0x140001a8b
   140001a4c:	call   0x140002ce0
   140001a51:	test   eax,eax
   140001a53:	js     0x140001a84
   140001a55:	mov    rdi,QWORD PTR [rip+0xecbc]        # 0x140010718
   140001a5c:	test   rdi,rdi
   140001a5f:	je     0x140001a84
   140001a61:	mov    rcx,rdi
   140001a64:	call   QWORD PTR [rip+0x8a6e]        # 0x14000a4d8
   140001a6a:	mov    r8,rbx
   140001a6d:	mov    edx,0x300f000
   140001a72:	xor    ecx,ecx
   140001a74:	call   rdi
   140001a76:	mov    DWORD PTR [rip+0xec73],r13d        # 0x1400106f0
   140001a7d:	mov    DWORD PTR [rip+0xec9c],r13d        # 0x140010720
   140001a84:	mov    rax,QWORD PTR [rip+0xec5d]        # 0x1400106e8
   140001a8b:	cmp    DWORD PTR [rip+0xec5e],r12d        # 0x1400106f0
   140001a92:	jne    0x140001aa2
   140001a94:	test   rax,rax
   140001a97:	je     0x140001aa2
   140001a99:	mov    rcx,rax
   140001a9c:	call   QWORD PTR [rip+0x870e]        # 0x14000a1b0
   140001aa2:	test   rbx,rbx
   140001aa5:	je     0x140001abb
   140001aa7:	call   QWORD PTR [rip+0x86cb]        # 0x14000a178
   140001aad:	mov    r8,rbx
   140001ab0:	xor    edx,edx
   140001ab2:	mov    rcx,rax
   140001ab5:	call   QWORD PTR [rip+0x86b5]        # 0x14000a170
   140001abb:	lea    rcx,[rip+0xece6]        # 0x1400107a8
   140001ac2:	call   QWORD PTR [rip+0x8830]        # 0x14000a2f8
   140001ac8:	lea    rax,[rip+0xec79]        # 0x140010748
   140001acf:	lea    rdx,[rip+0xec7a]        # 0x140010750
   140001ad6:	test   rax,rax
   140001ad9:	je     0x140001afe
   140001adb:	mov    rax,QWORD PTR [rip+0xec6e]        # 0x140010750
   140001ae2:	lea    rcx,[rip+0xdd7]        # 0x1400028c0
   140001ae9:	test   rdx,rdx
   140001aec:	mov    QWORD PTR [rip+0xec55],rcx        # 0x140010748
   140001af3:	cmovne rax,rcx
   140001af7:	mov    QWORD PTR [rip+0xec52],rax        # 0x140010750
   140001afe:	test   rsi,rsi
   140001b01:	lea    r8,[rip+0x8c88]        # 0x14000a790
   140001b08:	lea    rdx,[rip+0x8c91]        # 0x14000a7a0
   140001b0f:	cmovne r8,rsi
   140001b13:	xor    ecx,ecx
   140001b15:	call   0x140002e20
   140001b1a:	mov    edx,r13d
   140001b1d:	call   0x1400050f0
   140001b22:	mov    ebx,eax
   140001b24:	test   eax,eax
   140001b26:	js     0x140001d28
   140001b2c:	xor    edx,edx
   140001b2e:	xor    ecx,ecx
   140001b30:	call   QWORD PTR [rip+0x8582]        # 0x14000a0b8
   140001b36:	mov    ebx,eax
   140001b38:	test   eax,eax
   140001b3a:	js     0x140001d28
   140001b40:	xor    edx,edx
   140001b42:	mov    DWORD PTR [rbp+0x30],r12d
   140001b46:	lea    rcx,[rbp+0x38]
   140001b4a:	lea    r8d,[rdx+0x38]
   140001b4e:	call   0x140009c86
   140001b53:	lea    rdx,[rip+0x8cc6]        # 0x14000a820
   140001b5a:	xor    ecx,ecx
   140001b5c:	call   0x140002e20
   140001b61:	mov    r14d,0x80070057
   140001b67:	test   rsi,rsi
   140001b6a:	je     0x140001b7c
   140001b6c:	lea    rdx,[rbp+0x18]
   140001b70:	mov    rcx,rsi
   140001b73:	call   0x1400025a0
   140001b78:	mov    ebx,eax
   140001b7a:	jmp    0x140001b7f
   140001b7c:	mov    ebx,r14d
   140001b7f:	test   ebx,ebx
   140001b81:	js     0x140001c6e
   140001b87:	mov    eax,DWORD PTR [rip+0xeb33]        # 0x1400106c0
   140001b8d:	lea    rdi,[rip+0x8b6c]        # 0x14000a700
   140001b94:	test   r13b,al
   140001b97:	je     0x140001bb5
   140001b99:	lea    r9,[rip+0x98d0]        # 0x14000b470
   140001ba0:	mov    r8,rdi
   140001ba3:	lea    rdx,[rip+0x8b46]        # 0x14000a6f0
   140001baa:	call   0x140002b6c
   140001baf:	mov    eax,DWORD PTR [rip+0xeb0b]        # 0x1400106c0
   140001bb5:	lea    rcx,[rbp+0x18]
   140001bb9:	test   rcx,rcx
   140001bbc:	je     0x140001bdd
   140001bbe:	lea    r8,[rbp+0x30]
   140001bc2:	lea    rdx,[rbp+0x0]
   140001bc6:	lea    rcx,[rbp+0x18]
   140001bca:	call   0x140001e9c
   140001bcf:	mov    r15d,DWORD PTR [rbp+0x0]
   140001bd3:	mov    ebx,eax
   140001bd5:	mov    eax,DWORD PTR [rip+0xeae5]        # 0x1400106c0
   140001bdb:	jmp    0x140001be0
   140001bdd:	mov    ebx,r14d
   140001be0:	test   ebx,ebx
   140001be2:	js     0x140001c1b
   140001be4:	test   r13b,al
   140001be7:	je     0x140001bfc
   140001be9:	mov    r9d,DWORD PTR [rbp+0x30]
   140001bed:	lea    rdx,[rip+0x8acc]        # 0x14000a6c0
   140001bf4:	mov    r8,rdi
   140001bf7:	call   0x140002aa8
   140001bfc:	cmp    DWORD PTR [rbp+0x30],r12d
   140001c00:	jl     0x140001c12
   140001c02:	lea    rdx,[rip+0x8c67]        # 0x14000a870
   140001c09:	xor    ecx,ecx
   140001c0b:	call   0x140002e20
   140001c10:	jmp    0x140001c44
   140001c12:	lea    rdx,[rip+0x8ca7]        # 0x14000a8c0
   140001c19:	jmp    0x140001c39
   140001c1b:	test   r13b,al
   140001c1e:	je     0x140001c32
   140001c20:	mov    r9d,ebx
   140001c23:	lea    rdx,[rip+0x8a86]        # 0x14000a6b0
   140001c2a:	mov    r8,rdi
   140001c2d:	call   0x140002aa8
   140001c32:	lea    rdx,[rip+0x8d07]        # 0x14000a940
   140001c39:	mov    r8d,ebx
   140001c3c:	mov    ecx,r13d
   140001c3f:	call   0x140002e20
   140001c44:	test   ebx,ebx
   140001c46:	js     0x140001c6e
   140001c48:	mov    eax,DWORD PTR [rbp+0x30]
   140001c4b:	test   eax,eax
   140001c4d:	jns    0x140001c6e
   140001c4f:	lea    rcx,[rbp+0x30]
   140001c53:	test   rcx,rcx
   140001c56:	je     0x140001c6c
   140001c58:	mov    rdx,QWORD PTR [rbp+0x18]
   140001c5c:	lea    r8,[rbp+0x10]
   140001c60:	lea    rcx,[rbp+0x30]
   140001c64:	call   0x140005fa4
   140001c69:	mov    eax,DWORD PTR [rbp+0x30]
   140001c6c:	mov    ebx,eax
   140001c6e:	lea    rcx,[rbp+0x30]
   140001c72:	call   QWORD PTR [rip+0x83b8]        # 0x14000a030
   140001c78:	call   QWORD PTR [rip+0x844a]        # 0x14000a0c8
   140001c7e:	test   ebx,ebx
   140001c80:	js     0x140001d28
   140001c86:	test   r15d,r15d
   140001c89:	jne    0x140001d24
   140001c8f:	test   BYTE PTR [rip+0xea2a],r13b        # 0x1400106c0
   140001c96:	mov    edi,r12d
   140001c99:	mov    DWORD PTR [rbp+0x8],r12d
   140001c9d:	mov    DWORD PTR [rbp+0x0],r12d
   140001ca1:	je     0x140001ca8
   140001ca3:	call   0x140002a20
   140001ca8:	lea    rsi,[rip+0x8d11]        # 0x14000a9c0
   140001caf:	mov    rcx,rsi
   140001cb2:	call   0x1400060ac
   140001cb7:	lea    rax,[rbp+0x0]
   140001cbb:	test   rax,rax
   140001cbe:	jne    0x140001cc5
   140001cc0:	mov    ebx,r14d
   140001cc3:	jmp    0x140001cd8
   140001cc5:	lea    rcx,[rbp+0x0]
   140001cc9:	call   0x14000237c
   140001cce:	cmp    DWORD PTR [rbp+0x0],r12d
   140001cd2:	mov    ebx,eax
   140001cd4:	cmovne r15d,r13d
   140001cd8:	test   rsi,rsi
   140001cdb:	je     0x140001cef
   140001cdd:	lea    rdx,[rbp+0x8]
   140001ce1:	mov    rcx,rsi
   140001ce4:	call   0x1400066d4
   140001ce9:	mov    edi,DWORD PTR [rbp+0x8]
   140001cec:	mov    r14d,eax
   140001cef:	test   r14d,r14d
   140001cf2:	js     0x140001d05
   140001cf4:	lea    r8,[rbp+0x8]
   140001cf8:	mov    DWORD PTR [rbp+0x8],edi
   140001cfb:	mov    ecx,0x1911
   140001d00:	call   0x140008e98
   140001d05:	test   BYTE PTR [rip+0xe9b4],r13b        # 0x1400106c0
   140001d0c:	je     0x140001d24
   140001d0e:	mov    r9d,ebx
   140001d11:	lea    r8,[rip+0x8988]        # 0x14000a6a0
   140001d18:	lea    rdx,[rip+0x89b1]        # 0x14000a6d0
   140001d1f:	call   0x140002aa8
   140001d24:	test   ebx,ebx
   140001d26:	jns    0x140001d3a
   140001d28:	cmp    DWORD PTR [rbp+0x24],r12d
   140001d2c:	jne    0x140001d37
   140001d2e:	mov    rdx,QWORD PTR [rbp+0x10]
   140001d32:	call   0x1400027d0
   140001d37:	mov    r15d,ebx
   140001d3a:	cmp    QWORD PTR [rbp+0x18],r12
   140001d3e:	je     0x140001d63
   140001d40:	call   QWORD PTR [rip+0x8432]        # 0x14000a178
   140001d46:	mov    r8,QWORD PTR [rbp+0x18]
   140001d4a:	xor    edx,edx
   140001d4c:	mov    rcx,rax
   140001d4f:	call   QWORD PTR [rip+0x841b]        # 0x14000a170
   140001d55:	mov    rcx,QWORD PTR [rbp+0x18]
   140001d59:	test   eax,eax
   140001d5b:	cmovne rcx,r12
   140001d5f:	mov    QWORD PTR [rbp+0x18],rcx
   140001d63:	cmp    QWORD PTR [rbp+0x10],r12
   140001d67:	je     0x140001d8c
   140001d69:	call   QWORD PTR [rip+0x8409]        # 0x14000a178
   140001d6f:	mov    r8,QWORD PTR [rbp+0x10]
   140001d73:	xor    edx,edx
   140001d75:	mov    rcx,rax
   140001d78:	call   QWORD PTR [rip+0x83f2]        # 0x14000a170
   140001d7e:	mov    rcx,QWORD PTR [rbp+0x10]
   140001d82:	test   eax,eax
   140001d84:	cmovne rcx,r12
   140001d88:	mov    QWORD PTR [rbp+0x10],rcx
   140001d8c:	test   BYTE PTR [rip+0xe92d],r13b        # 0x1400106c0
   140001d93:	je     0x140001dab
   140001d95:	mov    r9d,r15d
   140001d98:	lea    r8,[rip+0x8941]        # 0x14000a6e0
   140001d9f:	lea    rdx,[rip+0x896a]        # 0x14000a710
   140001da6:	call   0x140002aa8
   140001dab:	mov    r8d,r15d
   140001dae:	lea    rdx,[rip+0x8c2b]        # 0x14000a9e0
   140001db5:	xor    ecx,ecx
   140001db7:	call   0x140002e20
   140001dbc:	lea    rax,[rip+0xe985]        # 0x140010748
   140001dc3:	test   rax,rax
   140001dc6:	je     0x140001deb
   140001dc8:	mov    rax,QWORD PTR [rip+0xe981]        # 0x140010750
   140001dcf:	lea    rcx,[rip+0xe97a]        # 0x140010750
   140001dd6:	test   rcx,rcx
   140001dd9:	mov    QWORD PTR [rip+0xe968],r12        # 0x140010748
   140001de0:	cmovne rax,r12
   140001de4:	mov    QWORD PTR [rip+0xe965],rax        # 0x140010750
   140001deb:	lea    rcx,[rip+0xe9b6]        # 0x1400107a8
   140001df2:	call   QWORD PTR [rip+0x84f0]        # 0x14000a2e8
   140001df8:	mov    eax,DWORD PTR [rip+0xe926]        # 0x140010724
   140001dfe:	sub    eax,r13d
   140001e01:	cmp    DWORD PTR [rip+0xe8e8],r12d        # 0x1400106f0
   140001e08:	mov    DWORD PTR [rip+0xe916],eax        # 0x140010724
   140001e0e:	je     0x140001e62
   140001e10:	test   eax,eax
   140001e12:	jne    0x140001e62
   140001e14:	mov    rcx,QWORD PTR [rip+0xe8cd]        # 0x1400106e8
   140001e1b:	test   rcx,rcx
   140001e1e:	je     0x140001e62
   140001e20:	cmp    DWORD PTR [rip+0xe8f9],r12d        # 0x140010720
   140001e27:	je     0x140001e47
   140001e29:	mov    rbx,QWORD PTR [rip+0xe8e0]        # 0x140010710
   140001e30:	test   rbx,rbx
   140001e33:	je     0x140001e47
   140001e35:	mov    rcx,rbx
   140001e38:	call   QWORD PTR [rip+0x869a]        # 0x14000a4d8
   140001e3e:	call   rbx
   140001e40:	mov    rcx,QWORD PTR [rip+0xe8a1]        # 0x1400106e8
   140001e47:	call   QWORD PTR [rip+0x8363]        # 0x14000a1b0
   140001e4d:	mov    QWORD PTR [rip+0xe894],r12        # 0x1400106e8
   140001e54:	mov    DWORD PTR [rip+0xe895],r12d        # 0x1400106f0
   140001e5b:	mov    DWORD PTR [rip+0xe8be],r12d        # 0x140010720
   140001e62:	lea    rcx,[rip+0xe93f]        # 0x1400107a8
   140001e69:	call   QWORD PTR [rip+0x8489]        # 0x14000a2f8
   140001e6f:	mov    eax,r15d
   140001e72:	lea    r11,[rsp+0xd0]
   140001e7a:	mov    rbx,QWORD PTR [r11+0x30]
   140001e7e:	mov    rsi,QWORD PTR [r11+0x38]
   140001e82:	mov    rdi,QWORD PTR [r11+0x48]
   140001e86:	mov    rsp,r11
   140001e89:	pop    r15
   140001e8b:	pop    r14
   140001e8d:	pop    r13
   140001e8f:	pop    r12
   140001e91:	pop    rbp
   140001e92:	ret    
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	rex push rbp
   140001e9e:	push   rbx
   140001e9f:	push   rsi
   140001ea0:	push   rdi
   140001ea1:	push   r12
   140001ea3:	push   r13
   140001ea5:	push   r15
   140001ea7:	lea    rbp,[rsp-0x27]
   140001eac:	sub    rsp,0xa0
   140001eb3:	mov    rax,QWORD PTR [rip+0xe14e]        # 0x140010008
   140001eba:	xor    rax,rsp
   140001ebd:	mov    QWORD PTR [rbp+0x1f],rax
   140001ec1:	mov    rdi,rcx
   140001ec4:	mov    QWORD PTR [rbp-0x21],r8
   140001ec8:	xor    ebx,ebx
   140001eca:	lea    rcx,[rip+0x959f]        # 0x14000b470
   140001ed1:	mov    r15,r8
   140001ed4:	mov    QWORD PTR [rbp-0x31],rcx
   140001ed8:	mov    r13,rdx
   140001edb:	mov    esi,ebx
   140001edd:	mov    rax,QWORD PTR [rdi]
   140001ee0:	test   rax,rax
   140001ee3:	je     0x140001eee
   140001ee5:	cmp    bx,WORD PTR [rax]
   140001ee8:	je     0x140002352
   140001eee:	test   rdx,rdx
   140001ef1:	je     0x140002352
   140001ef7:	test   r8,r8
   140001efa:	je     0x140002352
   140001f00:	mov    DWORD PTR [rdx],ebx
   140001f02:	mov    r12,QWORD PTR [rdi]
   140001f05:	mov    QWORD PTR [rbp+0x7],r12
   140001f09:	mov    QWORD PTR [rdi],rbx
   140001f0c:	mov    DWORD PTR [rbp-0x29],0x1
   140001f13:	call   0x140005188
   140001f18:	test   eax,eax
   140001f1a:	je     0x140001f8f
   140001f1c:	lea    rax,[rbp-0x39]
   140001f20:	test   rax,rax
   140001f23:	je     0x140001f8f
   140001f25:	mov    rdx,rcx
   140001f28:	lea    r8,[rbp-0x29]
   140001f2c:	xor    ecx,ecx
   140001f2e:	call   0x14000568c
   140001f33:	mov    ebx,eax
   140001f35:	test   eax,eax
   140001f37:	js     0x140001f94
   140001f39:	mov    r9d,DWORD PTR [rbp-0x29]
   140001f3d:	cmp    r9d,0x6
   140001f41:	je     0x140001f55
   140001f43:	cmp    r9d,0x8
   140001f47:	je     0x140001f4e
   140001f49:	mov    esi,r9d
   140001f4c:	jmp    0x140001f94
   140001f4e:	mov    esi,0x9
   140001f53:	jmp    0x140001f5a
   140001f55:	mov    esi,0x7
   140001f5a:	lea    r8,[rip+0x950f]        # 0x14000b470
   140001f61:	mov    DWORD PTR [rsp+0x20],esi
   140001f65:	lea    rdx,[rip+0x9cc4]        # 0x14000bc30
   140001f6c:	xor    ecx,ecx
   140001f6e:	call   0x140002e20
   140001f73:	lea    r8,[rbp-0x39]
   140001f77:	mov    DWORD PTR [rbp-0x39],esi
   140001f7a:	lea    rdx,[rip+0x94ef]        # 0x14000b470
   140001f81:	mov    ecx,0x1
   140001f86:	call   0x14000568c
   140001f8b:	mov    ebx,eax
   140001f8d:	jmp    0x140001f94
   140001f8f:	mov    ebx,0x80070057
   140001f94:	test   ebx,ebx
   140001f96:	js     0x1400022ed
   140001f9c:	cmp    esi,0x9
   140001f9f:	je     0x1400022ed
   140001fa5:	cmp    esi,0x2
   140001fa8:	je     0x1400022ed
   140001fae:	mov    r8,QWORD PTR [rbp-0x31]
   140001fb2:	lea    rdx,[rip+0x8a77]        # 0x14000aa30
   140001fb9:	mov    r9d,esi
   140001fbc:	xor    ecx,ecx
   140001fbe:	call   0x140002e20
   140001fc3:	lea    rax,[rip+0x8b06]        # 0x14000aad0
   140001fca:	test   esi,esi
   140001fcc:	jne    0x140002000
   140001fce:	mov    QWORD PTR [rsp+0x30],r15
   140001fd3:	lea    r9,[rip+0x8aa6]        # 0x14000aa80
   140001fda:	mov    QWORD PTR [rsp+0x28],rdi
   140001fdf:	lea    r8d,[rsi+0x1]
   140001fe3:	and    QWORD PTR [rsp+0x20],0x0
   140001fe9:	lea    rdx,[rbp-0x31]
   140001fed:	mov    rcx,r12
   140001ff0:	call   QWORD PTR [rip+0x8092]        # 0x14000a088
   140001ff6:	mov    ebx,eax
   140001ff8:	xor    r12d,r12d
   140001ffb:	jmp    0x1400020a5
   140002000:	mov    rcx,rax
   140002003:	call   0x140003154
   140002008:	xor    r12d,r12d
   14000200b:	mov    QWORD PTR [rdi],rax
   14000200e:	test   rax,rax
   140002011:	je     0x140002075
   140002013:	mov    rcx,rax
   140002016:	call   0x140003a9c
   14000201b:	mov    r9,QWORD PTR [rdi]
   14000201e:	mov    r8,QWORD PTR [rbp-0x31]
   140002022:	cmp    eax,0x1
   140002025:	jne    0x140002037
   140002027:	lea    rdx,[rip+0x8ae2]        # 0x14000ab10
   14000202e:	xor    ecx,ecx
   140002030:	call   0x140002e20
   140002035:	jmp    0x1400020a5
   140002037:	lea    rdx,[rip+0x8b52]        # 0x14000ab90
   14000203e:	mov    ecx,0x1
   140002043:	call   0x140002e20
   140002048:	mov    rsi,QWORD PTR [rdi]
   14000204b:	mov    ebx,0x80070002
   140002050:	test   rsi,rsi
   140002053:	je     0x140002070
   140002055:	call   QWORD PTR [rip+0x811d]        # 0x14000a178
   14000205b:	mov    r8,rsi
   14000205e:	xor    edx,edx
   140002060:	mov    rcx,rax
   140002063:	call   QWORD PTR [rip+0x8107]        # 0x14000a170
   140002069:	test   eax,eax
   14000206b:	je     0x140002070
   14000206d:	mov    QWORD PTR [rdi],r12
   140002070:	mov    QWORD PTR [rdi],r12
   140002073:	jmp    0x1400020a5
   140002075:	call   QWORD PTR [rip+0x8075]        # 0x14000a0f0
   14000207b:	movzx  ecx,ax
   14000207e:	mov    esi,0x80070000
   140002083:	or     ecx,esi
   140002085:	test   eax,eax
   140002087:	cmovle ecx,eax
   14000208a:	test   ecx,ecx
   14000208c:	jns    0x1400020a0
   14000208e:	call   QWORD PTR [rip+0x805c]        # 0x14000a0f0
   140002094:	movzx  ebx,ax
   140002097:	or     ebx,esi
   140002099:	test   eax,eax
   14000209b:	cmovle ebx,eax
   14000209e:	jmp    0x1400020a5
   1400020a0:	mov    ebx,0x80004005
   1400020a5:	test   ebx,ebx
   1400020a7:	js     0x1400022ed
   1400020ad:	cmp    DWORD PTR [r15],r12d
   1400020b0:	jl     0x1400022ed
   1400020b6:	mov    r9,QWORD PTR [rdi]
   1400020b9:	test   r9,r9
   1400020bc:	je     0x1400022c0
   1400020c2:	mov    r8,QWORD PTR [rbp-0x31]
   1400020c6:	lea    rdx,[rip+0x8b73]        # 0x14000ac40
   1400020cd:	xor    ecx,ecx
   1400020cf:	call   0x140002e20
   1400020d4:	test   BYTE PTR [rip+0xe5e5],0x2        # 0x1400106c0
   1400020db:	je     0x1400020ee
   1400020dd:	mov    rax,QWORD PTR [rdi]
   1400020e0:	mov    r9,QWORD PTR [rbp-0x31]
   1400020e4:	mov    QWORD PTR [rsp+0x20],rax
   1400020e9:	call   0x1400028f4
   1400020ee:	mov    rcx,QWORD PTR [rdi]
   1400020f1:	call   0x140005270
   1400020f6:	test   eax,eax
   1400020f8:	lea    r8,[rip+0x89d1]        # 0x14000aad0
   1400020ff:	mov    ecx,r12d
   140002102:	lea    rdx,[rip+0x8ba7]        # 0x14000acb0
   140002109:	sets   cl
   14000210c:	mov    ebx,eax
   14000210e:	call   0x140002e20
   140002113:	test   ebx,ebx
   140002115:	js     0x1400022a6
   14000211b:	xor    eax,eax
   14000211d:	mov    DWORD PTR [rbp-0x39],r12d
   140002121:	and    DWORD PTR [rbp-0x19],eax
   140002124:	lea    rcx,[rbp-0x19]
   140002128:	mov    QWORD PTR [rbp-0x15],rax
   14000212c:	xor    r15d,r15d
   14000212f:	mov    QWORD PTR [rbp-0xd],rax
   140002133:	mov    QWORD PTR [rbp-0x5],rax
   140002137:	mov    DWORD PTR [rbp+0x3],eax
   14000213a:	lea    rax,[rip+0x8bbf]        # 0x14000ad00
   140002141:	mov    QWORD PTR [rbp-0x11],rax
   140002145:	mov    DWORD PTR [rbp-0x29],r15d
   140002149:	mov    DWORD PTR [rbp-0x15],0x1
   140002150:	call   QWORD PTR [rip+0x804a]        # 0x14000a1a0
   140002156:	mov    rsi,rax
   140002159:	cmp    rax,0xffffffffffffffff
   14000215d:	je     0x140002177
   14000215f:	xor    edx,edx
   140002161:	mov    rcx,rax
   140002164:	call   QWORD PTR [rip+0x802e]        # 0x14000a198
   14000216a:	lea    edx,[r15+0x1]
   14000216e:	mov    rcx,rsi
   140002171:	call   QWORD PTR [rip+0x8021]        # 0x14000a198
   140002177:	lea    rcx,[rip+0x8b92]        # 0x14000ad10
   14000217e:	call   0x1400060ac
   140002183:	lea    rax,[rip+0x8946]        # 0x14000aad0
   14000218a:	test   rax,rax
   14000218d:	je     0x1400021ab
   14000218f:	mov    r9,QWORD PTR [rbp-0x21]
   140002193:	lea    r8,[rbp-0x29]
   140002197:	mov    rdx,QWORD PTR [rbp-0x31]
   14000219b:	mov    rcx,rax
   14000219e:	call   0x140006bac
   1400021a3:	mov    r15d,DWORD PTR [rbp-0x29]
   1400021a7:	mov    ebx,eax
   1400021a9:	jmp    0x1400021b0
   1400021ab:	mov    ebx,0x80070057
   1400021b0:	test   ebx,ebx
   1400021b2:	js     0x1400021d2
   1400021b4:	mov    r8,QWORD PTR [rbp-0x31]
   1400021b8:	lea    rdx,[rip+0x8b71]        # 0x14000ad30
   1400021bf:	xor    ecx,ecx
   1400021c1:	call   0x140002e20
   1400021c6:	xor    eax,eax
   1400021c8:	test   r15d,r15d
   1400021cb:	setne  al
   1400021ce:	mov    DWORD PTR [r13+0x0],eax
   1400021d2:	lea    rcx,[rip+0x8b37]        # 0x14000ad10
   1400021d9:	test   rcx,rcx
   1400021dc:	je     0x1400021ed
   1400021de:	lea    rdx,[rbp-0x39]
   1400021e2:	call   0x1400066d4
   1400021e7:	mov    r12d,DWORD PTR [rbp-0x39]
   1400021eb:	jmp    0x1400021f2
   1400021ed:	mov    eax,0x80070057
   1400021f2:	test   eax,eax
   1400021f4:	js     0x140002208
   1400021f6:	lea    r8,[rbp-0x39]
   1400021fa:	mov    DWORD PTR [rbp-0x39],r12d
   1400021fe:	mov    ecx,0x18e4
   140002203:	call   0x140008e98
   140002208:	cmp    rsi,0xffffffffffffffff
   14000220c:	je     0x140002217
   14000220e:	mov    rcx,rsi
   140002211:	call   QWORD PTR [rip+0x7f41]        # 0x14000a158
   140002217:	xor    r12d,r12d
   14000221a:	test   ebx,ebx
   14000221c:	js     0x1400022a6
   140002222:	mov    rdx,QWORD PTR [rbp-0x31]
   140002226:	lea    r8,[rbp-0x39]
   14000222a:	xor    ecx,ecx
   14000222c:	mov    DWORD PTR [rbp-0x39],r12d
   140002230:	call   0x14000568c
   140002235:	mov    ebx,eax
   140002237:	test   eax,eax
   140002239:	js     0x1400022a6
   14000223b:	mov    eax,DWORD PTR [rbp-0x39]
   14000223e:	add    eax,0xfffffff8
   140002241:	cmp    eax,0x1
   140002244:	ja     0x1400022a2
   140002246:	mov    rcx,QWORD PTR [rdi]
   140002249:	mov    eax,r12d
   14000224c:	mov    DWORD PTR [rbp+0xf],eax
   14000224f:	mov    QWORD PTR [rbp+0x13],r12
   140002253:	test   rcx,rcx
   140002256:	je     0x140002270
   140002258:	mov    r9,QWORD PTR [rbp-0x21]
   14000225c:	lea    r8,[rbp+0xf]
   140002260:	mov    rdx,QWORD PTR [rbp-0x31]
   140002264:	call   0x140005bd4
   140002269:	mov    ebx,eax
   14000226b:	mov    eax,DWORD PTR [rbp+0xf]
   14000226e:	jmp    0x140002275
   140002270:	mov    ebx,0x80070057
   140002275:	test   ebx,ebx
   140002277:	js     0x1400022a6
   140002279:	cmp    eax,0x2
   14000227c:	jne    0x140002294
   14000227e:	call   0x140004f6c
   140002283:	mov    ebx,eax
   140002285:	neg    r15d
   140002288:	sbb    eax,eax
   14000228a:	and    eax,0xfffffffe
   14000228d:	add    eax,0x3
   140002290:	mov    DWORD PTR [r13+0x0],eax
   140002294:	cmp    DWORD PTR [rbp+0x13],0x1
   140002298:	jne    0x1400022a2
   14000229a:	mov    DWORD PTR [r13+0x0],0x2
   1400022a2:	test   ebx,ebx
   1400022a4:	jns    0x1400022ed
   1400022a6:	mov    r8,QWORD PTR [rbp-0x31]
   1400022aa:	lea    rdx,[rip+0x8adf]        # 0x14000ad90
   1400022b1:	mov    r9d,ebx
   1400022b4:	mov    ecx,0x1
   1400022b9:	call   0x140002e20
   1400022be:	jmp    0x1400022ed
   1400022c0:	mov    rdx,QWORD PTR [rbp-0x31]
   1400022c4:	lea    r8,[rbp-0x39]
   1400022c8:	mov    ecx,0x1
   1400022cd:	mov    DWORD PTR [rbp-0x39],0x2
   1400022d4:	call   0x14000568c
   1400022d9:	mov    r8,QWORD PTR [rbp-0x31]
   1400022dd:	lea    rdx,[rip+0x8b1c]        # 0x14000ae00
   1400022e4:	xor    ecx,ecx
   1400022e6:	mov    ebx,eax
   1400022e8:	call   0x140002e20
   1400022ed:	cmp    DWORD PTR [r13+0x0],0x1
   1400022f2:	jne    0x140002301
   1400022f4:	mov    r8,QWORD PTR [rbp-0x31]
   1400022f8:	lea    rdx,[rip+0x8b71]        # 0x14000ae70
   1400022ff:	jmp    0x14000232a
   140002301:	cmp    DWORD PTR [r13+0x0],0x2
   140002306:	jne    0x140002315
   140002308:	mov    r8,QWORD PTR [rbp-0x31]
   14000230c:	lea    rdx,[rip+0x8bbd]        # 0x14000aed0
   140002313:	jmp    0x14000232a
   140002315:	cmp    DWORD PTR [r13+0x0],0x3
   14000231a:	jne    0x140002331
   14000231c:	lea    r8,[rip+0x9135]        # 0x14000b458
   140002323:	lea    rdx,[rip+0x8c06]        # 0x14000af30
   14000232a:	xor    ecx,ecx
   14000232c:	call   0x140002e20
   140002331:	mov    rdi,QWORD PTR [rbp+0x7]
   140002335:	test   rdi,rdi
   140002338:	je     0x14000234e
   14000233a:	call   QWORD PTR [rip+0x7e38]        # 0x14000a178
   140002340:	mov    r8,rdi
   140002343:	xor    edx,edx
   140002345:	mov    rcx,rax
   140002348:	call   QWORD PTR [rip+0x7e22]        # 0x14000a170
   14000234e:	mov    eax,ebx
   140002350:	jmp    0x140002357
   140002352:	mov    eax,0x80070057
   140002357:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000235b:	xor    rcx,rsp
   14000235e:	call   0x140009600
   140002363:	add    rsp,0xa0
   14000236a:	pop    r15
   14000236c:	pop    r13
   14000236e:	pop    r12
   140002370:	pop    rdi
   140002371:	pop    rsi
   140002372:	pop    rbx
   140002373:	pop    rbp
   140002374:	ret    
   140002375:	int3   
   140002376:	int3   
   140002377:	int3   
   140002378:	int3   
   140002379:	int3   
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	mov    QWORD PTR [rsp+0x10],rbx
   140002381:	push   rsi
   140002382:	sub    rsp,0x30
   140002386:	and    DWORD PTR [rcx],0x0
   140002389:	mov    rbx,rcx
   14000238c:	lea    rcx,[rip+0x8c0d]        # 0x14000afa0
   140002393:	call   0x140003154
   140002398:	mov    rsi,rax
   14000239b:	test   rax,rax
   14000239e:	je     0x14000253c
   1400023a4:	and    DWORD PTR [rsp+0x40],0x0
   1400023a9:	lea    rdx,[rip+0x8c38]        # 0x14000afe8
   1400023b0:	mov    r8,rax
   1400023b3:	xor    ecx,ecx
   1400023b5:	call   0x140002e20
   1400023ba:	lea    r8,[rsp+0x40]
   1400023bf:	mov    rdx,rsi
   1400023c2:	call   0x140003c24
   1400023c7:	test   eax,eax
   1400023c9:	jne    0x14000240d
   1400023cb:	call   QWORD PTR [rip+0x7d1f]        # 0x14000a0f0
   1400023d1:	movzx  ecx,ax
   1400023d4:	or     ecx,0x80070000
   1400023da:	test   eax,eax
   1400023dc:	cmovle ecx,eax
   1400023df:	test   ecx,ecx
   1400023e1:	jns    0x1400023f9
   1400023e3:	call   QWORD PTR [rip+0x7d07]        # 0x14000a0f0
   1400023e9:	movzx  ebx,ax
   1400023ec:	or     ebx,0x80070000
   1400023f2:	test   eax,eax
   1400023f4:	cmovle ebx,eax
   1400023f7:	jmp    0x1400023fe
   1400023f9:	mov    ebx,0x80004005
   1400023fe:	mov    r8,rsi
   140002401:	lea    rdx,[rip+0x8c08]        # 0x14000b010
   140002408:	jmp    0x14000257d
   14000240d:	mov    ecx,DWORD PTR [rsp+0x40]
   140002411:	cmp    ecx,0xeb00
   140002417:	je     0x14000251a
   14000241d:	cmp    ecx,0xbc2
   140002423:	je     0x1400024f8
   140002429:	test   ecx,ecx
   14000242b:	je     0x14000250c
   140002431:	call   0x1400058ec
   140002436:	xor    ebx,ebx
   140002438:	lea    r8,[rip+0x8319]        # 0x14000a758
   14000243f:	xor    edx,edx
   140002441:	lea    ecx,[rbx+0x2]
   140002444:	call   QWORD PTR [rip+0x7ebe]        # 0x14000a308
   14000244a:	mov    rsi,rax
   14000244d:	test   rax,rax
   140002450:	je     0x14000247e
   140002452:	mov    rcx,rax
   140002455:	call   QWORD PTR [rip+0x7eb5]        # 0x14000a310
   14000245b:	test   eax,eax
   14000245d:	jne    0x140002473
   14000245f:	call   QWORD PTR [rip+0x7c8b]        # 0x14000a0f0
   140002465:	movzx  ebx,ax
   140002468:	or     ebx,0x80070000
   14000246e:	test   eax,eax
   140002470:	cmovle ebx,eax
   140002473:	mov    rcx,rsi
   140002476:	call   QWORD PTR [rip+0x7cdc]        # 0x14000a158
   14000247c:	jmp    0x140002492
   14000247e:	call   QWORD PTR [rip+0x7c6c]        # 0x14000a0f0
   140002484:	movzx  ebx,ax
   140002487:	or     ebx,0x80070000
   14000248d:	test   eax,eax
   14000248f:	cmovle ebx,eax
   140002492:	test   ebx,ebx
   140002494:	jns    0x1400024aa
   140002496:	mov    r8d,ebx
   140002499:	lea    rdx,[rip+0x8bc0]        # 0x14000b060
   1400024a0:	mov    ecx,0x1
   1400024a5:	call   0x140002e20
   1400024aa:	mov    r8d,DWORD PTR [rsp+0x40]
   1400024af:	lea    rdx,[rip+0x8c0a]        # 0x14000b0c0
   1400024b6:	mov    ecx,0x1
   1400024bb:	call   0x140002e20
   1400024c0:	mov    eax,DWORD PTR [rsp+0x40]
   1400024c4:	movzx  ebx,ax
   1400024c7:	or     ebx,0x80070000
   1400024cd:	test   eax,eax
   1400024cf:	cmovle ebx,eax
   1400024d2:	test   ebx,ebx
   1400024d4:	js     0x14000258a
   1400024da:	mov    r8d,ebx
   1400024dd:	lea    rdx,[rip+0x8c2c]        # 0x14000b110
   1400024e4:	mov    ecx,0x1
   1400024e9:	call   0x140002e20
   1400024ee:	mov    ebx,0x80004005
   1400024f3:	jmp    0x14000258a
   1400024f8:	lea    rdx,[rip+0x8d11]        # 0x14000b210
   1400024ff:	mov    DWORD PTR [rbx],0x1
   140002505:	xor    ecx,ecx
   140002507:	call   0x140002e20
   14000250c:	mov    edx,0x3
   140002511:	call   0x1400050f0
   140002516:	mov    ebx,eax
   140002518:	jmp    0x14000258a
   14000251a:	call   0x140004f6c
   14000251f:	call   0x140004dd0
   140002524:	lea    rdx,[rip+0x8c65]        # 0x14000b190
   14000252b:	mov    DWORD PTR [rbx],0x1
   140002531:	xor    ecx,ecx
   140002533:	call   0x140002e20
   140002538:	xor    edx,edx
   14000253a:	jmp    0x140002511
   14000253c:	call   QWORD PTR [rip+0x7bae]        # 0x14000a0f0
   140002542:	movzx  ecx,ax
   140002545:	or     ecx,0x80070000
   14000254b:	test   eax,eax
   14000254d:	cmovle ecx,eax
   140002550:	test   ecx,ecx
   140002552:	jns    0x14000256a
   140002554:	call   QWORD PTR [rip+0x7b96]        # 0x14000a0f0
   14000255a:	movzx  ebx,ax
   14000255d:	or     ebx,0x80070000
   140002563:	test   eax,eax
   140002565:	cmovle ebx,eax
   140002568:	jmp    0x14000256f
   14000256a:	mov    ebx,0x80004005
   14000256f:	lea    r8,[rip+0x8a2a]        # 0x14000afa0
   140002576:	lea    rdx,[rip+0x8cd3]        # 0x14000b250
   14000257d:	mov    r9d,ebx
   140002580:	mov    ecx,0x1
   140002585:	call   0x140002e20
   14000258a:	mov    eax,ebx
   14000258c:	mov    rbx,QWORD PTR [rsp+0x48]
   140002591:	add    rsp,0x30
   140002595:	pop    rsi
   140002596:	ret    
   140002597:	int3   
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400025a5:	mov    QWORD PTR [rsp+0x20],rsi
   1400025aa:	push   rbp
   1400025ab:	push   rdi
   1400025ac:	push   r12
   1400025ae:	push   r14
   1400025b0:	push   r15
   1400025b2:	mov    rbp,rsp
   1400025b5:	sub    rsp,0x50
   1400025b9:	mov    rax,QWORD PTR [rip+0xda48]        # 0x140010008
   1400025c0:	xor    rax,rsp
   1400025c3:	mov    QWORD PTR [rbp-0x8],rax
   1400025c7:	and    DWORD PTR [rbp-0x30],0x0
   1400025cb:	mov    rdi,rdx
   1400025ce:	mov    rsi,rcx
   1400025d1:	test   rdx,rdx
   1400025d4:	jne    0x1400025e0
   1400025d6:	mov    eax,0x80070057
   1400025db:	jmp    0x1400027a5
   1400025e0:	mov    r8,rcx
   1400025e3:	lea    rdx,[rip+0x8ce6]        # 0x14000b2d0
   1400025ea:	xor    ecx,ecx
   1400025ec:	call   0x140002e20
   1400025f1:	xor    eax,eax
   1400025f3:	mov    rdx,rdi
   1400025f6:	mov    QWORD PTR [rdi],rax
   1400025f9:	mov    rcx,rsi
   1400025fc:	mov    QWORD PTR [rdi+0x8],rax
   140002600:	call   QWORD PTR [rip+0x7a8a]        # 0x14000a090
   140002606:	mov    ebx,eax
   140002608:	cmp    eax,0x1
   14000260b:	jne    0x140002611
   14000260d:	and    QWORD PTR [rdi],0x0
   140002611:	mov    r8,QWORD PTR [rdi]
   140002614:	test   r8,r8
   140002617:	je     0x140002627
   140002619:	lea    rdx,[rip+0x8d10]        # 0x14000b330
   140002620:	xor    ecx,ecx
   140002622:	call   0x140002e20
   140002627:	lea    rdx,[rbp-0x30]
   14000262b:	mov    rcx,rsi
   14000262e:	call   QWORD PTR [rip+0x7d64]        # 0x14000a398
   140002634:	mov    rsi,rax
   140002637:	test   rax,rax
   14000263a:	je     0x140002719
   140002640:	mov    ecx,DWORD PTR [rip+0x8d42]        # 0x14000b388
   140002646:	xor    r14d,r14d
   140002649:	movsd  xmm0,QWORD PTR [rip+0x8d2f]        # 0x14000b380
   140002651:	mov    eax,DWORD PTR [rbp-0x30]
   140002654:	mov    DWORD PTR [rbp-0x20],ecx
   140002657:	movzx  ecx,WORD PTR [rip+0x8d2e]        # 0x14000b38c
   14000265e:	mov    WORD PTR [rbp-0x1c],cx
   140002662:	movsd  QWORD PTR [rbp-0x28],xmm0
   140002667:	test   eax,eax
   140002669:	jle    0x14000269f
   14000266b:	mov    r15,rsi
   14000266e:	test   ebx,ebx
   140002670:	js     0x14000269f
   140002672:	mov    rdx,QWORD PTR [r15]
   140002675:	lea    rcx,[rbp-0x28]
   140002679:	mov    r8d,0x7
   14000267f:	call   QWORD PTR [rip+0x7d53]        # 0x14000a3d8
   140002685:	test   eax,eax
   140002687:	jne    0x140002690
   140002689:	mov    DWORD PTR [rdi+0xc],0x1
   140002690:	mov    eax,DWORD PTR [rbp-0x30]
   140002693:	inc    r14d
   140002696:	add    r15,0x8
   14000269a:	cmp    r14d,eax
   14000269d:	jl     0x14000266e
   14000269f:	movups xmm0,XMMWORD PTR [rip+0x8cea]        # 0x14000b390
   1400026a6:	xor    r14d,r14d
   1400026a9:	xor    r15d,r15d
   1400026ac:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   1400026b1:	test   eax,eax
   1400026b3:	jle    0x1400026f9
   1400026b5:	mov    r12,rsi
   1400026b8:	test   ebx,ebx
   1400026ba:	js     0x140002750
   1400026c0:	mov    rdx,QWORD PTR [r12]
   1400026c4:	lea    rcx,[rbp-0x18]
   1400026c8:	mov    r8d,0x8
   1400026ce:	call   QWORD PTR [rip+0x7d04]        # 0x14000a3d8
   1400026d4:	test   eax,eax
   1400026d6:	jne    0x1400026ec
   1400026d8:	test   r14d,r14d
   1400026db:	jne    0x1400026e7
   1400026dd:	lea    r14d,[rax+0x1]
   1400026e1:	mov    DWORD PTR [rdi+0x8],r14d
   1400026e5:	jmp    0x1400026ec
   1400026e7:	mov    ebx,0x80070057
   1400026ec:	inc    r15d
   1400026ef:	add    r12,0x8
   1400026f3:	cmp    r15d,DWORD PTR [rbp-0x30]
   1400026f7:	jl     0x1400026b8
   1400026f9:	test   ebx,ebx
   1400026fb:	js     0x140002750
   1400026fd:	test   r14d,r14d
   140002700:	jne    0x14000274c
   140002702:	lea    rdx,[rip+0x8c97]        # 0x14000b3a0
   140002709:	mov    ebx,0x80070057
   14000270e:	lea    ecx,[r14+0x1]
   140002712:	call   0x140002e20
   140002717:	jmp    0x14000274c
   140002719:	call   QWORD PTR [rip+0x79d1]        # 0x14000a0f0
   14000271f:	movzx  ecx,ax
   140002722:	mov    r14d,0x80070000
   140002728:	or     ecx,r14d
   14000272b:	test   eax,eax
   14000272d:	cmovle ecx,eax
   140002730:	test   ecx,ecx
   140002732:	jns    0x140002747
   140002734:	call   QWORD PTR [rip+0x79b6]        # 0x14000a0f0
   14000273a:	movzx  ebx,ax
   14000273d:	or     ebx,r14d
   140002740:	test   eax,eax
   140002742:	cmovle ebx,eax
   140002745:	jmp    0x14000274c
   140002747:	mov    ebx,0x80004005
   14000274c:	test   ebx,ebx
   14000274e:	jns    0x140002764
   140002750:	mov    r8d,ebx
   140002753:	lea    rdx,[rip+0x8c96]        # 0x14000b3f0
   14000275a:	mov    ecx,0x1
   14000275f:	call   0x140002e20
   140002764:	test   rsi,rsi
   140002767:	je     0x140002772
   140002769:	mov    rcx,rsi
   14000276c:	call   QWORD PTR [rip+0x7a16]        # 0x14000a188
   140002772:	test   ebx,ebx
   140002774:	jns    0x1400027a3
   140002776:	mov    rsi,QWORD PTR [rdi]
   140002779:	test   rsi,rsi
   14000277c:	je     0x14000279a
   14000277e:	call   QWORD PTR [rip+0x79f4]        # 0x14000a178
   140002784:	mov    r8,rsi
   140002787:	xor    edx,edx
   140002789:	mov    rcx,rax
   14000278c:	call   QWORD PTR [rip+0x79de]        # 0x14000a170
   140002792:	test   eax,eax
   140002794:	je     0x14000279a
   140002796:	and    QWORD PTR [rdi],0x0
   14000279a:	xor    eax,eax
   14000279c:	mov    QWORD PTR [rdi],rax
   14000279f:	mov    QWORD PTR [rdi+0x8],rax
   1400027a3:	mov    eax,ebx
   1400027a5:	mov    rcx,QWORD PTR [rbp-0x8]
   1400027a9:	xor    rcx,rsp
   1400027ac:	call   0x140009600
   1400027b1:	lea    r11,[rsp+0x50]
   1400027b6:	mov    rbx,QWORD PTR [r11+0x40]
   1400027ba:	mov    rsi,QWORD PTR [r11+0x48]
   1400027be:	mov    rsp,r11
   1400027c1:	pop    r15
   1400027c3:	pop    r14
   1400027c5:	pop    r12
   1400027c7:	pop    rdi
   1400027c8:	pop    rbp
   1400027c9:	ret    
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	mov    rax,rsp
   1400027d3:	mov    QWORD PTR [rax+0x10],rbx
   1400027d7:	mov    QWORD PTR [rax+0x18],rsi
   1400027db:	mov    DWORD PTR [rax+0x8],ecx
   1400027de:	push   rdi
   1400027df:	sub    rsp,0x30
   1400027e3:	xor    esi,esi
   1400027e5:	lea    rcx,[rip+0x9a24]        # 0x14000c210
   1400027ec:	and    DWORD PTR [rax+0x8],esi
   1400027ef:	mov    rdi,rdx
   1400027f2:	call   0x140003154
   1400027f7:	mov    rbx,rax
   1400027fa:	test   rax,rax
   1400027fd:	je     0x140002849
   1400027ff:	mov    rcx,rax
   140002802:	call   0x140003a9c
   140002807:	cmp    eax,0x1
   14000280a:	jne    0x140002831
   14000280c:	lea    r8,[rsp+0x40]
   140002811:	mov    rdx,rbx
   140002814:	call   0x140003c24
   140002819:	cmp    eax,0x1
   14000281c:	jne    0x140002831
   14000281e:	mov    r8,rbx
   140002821:	lea    rdx,[rip+0x9a38]        # 0x14000c260
   140002828:	xor    ecx,ecx
   14000282a:	mov    esi,eax
   14000282c:	call   0x140002e20
   140002831:	call   QWORD PTR [rip+0x7941]        # 0x14000a178
   140002837:	mov    r8,rbx
   14000283a:	xor    edx,edx
   14000283c:	mov    rcx,rax
   14000283f:	call   QWORD PTR [rip+0x792b]        # 0x14000a170
   140002845:	test   esi,esi
   140002847:	jne    0x1400028a4
   140002849:	xor    ecx,ecx
   14000284b:	test   rdi,rdi
   14000284e:	je     0x14000288b
   140002850:	mov    edx,0x1f4
   140002855:	call   0x1400030e0
   14000285a:	mov    r9d,0x2010
   140002860:	mov    r8,rax
   140002863:	mov    rdx,rdi
   140002866:	xor    ecx,ecx
   140002868:	mov    rbx,rax
   14000286b:	call   0x1400031f4
   140002870:	test   rbx,rbx
   140002873:	je     0x1400028a4
   140002875:	call   QWORD PTR [rip+0x78fd]        # 0x14000a178
   14000287b:	mov    r8,rbx
   14000287e:	xor    edx,edx
   140002880:	mov    rcx,rax
   140002883:	call   QWORD PTR [rip+0x78e7]        # 0x14000a170
   140002889:	jmp    0x1400028a4
   14000288b:	mov    r9d,0x1f4
   140002891:	mov    DWORD PTR [rsp+0x20],0x2010
   140002899:	xor    edx,edx
   14000289b:	lea    r8d,[r9+0x1]
   14000289f:	call   0x1400033c8
   1400028a4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400028a9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400028ae:	add    rsp,0x30
   1400028b2:	pop    rdi
   1400028b3:	ret    
   1400028b4:	int3   
   1400028b5:	int3   
   1400028b6:	int3   
   1400028b7:	int3   
   1400028b8:	int3   
   1400028b9:	int3   
   1400028ba:	int3   
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	mov    r10,r8
   1400028c3:	mov    eax,ecx
   1400028c5:	cmp    ecx,0x2000000
   1400028cb:	je     0x1400028de
   1400028cd:	xor    edx,edx
   1400028cf:	mov    ecx,0x2
   1400028d4:	cmp    eax,0x3000000
   1400028d9:	cmovne ecx,edx
   1400028dc:	jmp    0x1400028e3
   1400028de:	mov    ecx,0x1
   1400028e3:	mov    r8,r9
   1400028e6:	mov    rdx,r10
   1400028e9:	jmp    0x140002e48
   1400028ee:	int3   
   1400028ef:	int3   
   1400028f0:	int3   
   1400028f1:	int3   
   1400028f2:	int3   
   1400028f3:	int3   
   1400028f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400028f9:	mov    QWORD PTR [rsp+0x10],rdi
   1400028fe:	push   rbp
   1400028ff:	mov    rbp,rsp
   140002902:	sub    rsp,0x80
   140002909:	mov    rax,QWORD PTR [rip+0xd6f8]        # 0x140010008
   140002910:	xor    rax,rsp
   140002913:	mov    QWORD PTR [rbp-0x10],rax
   140002917:	mov    rdi,QWORD PTR [rip+0xddba]        # 0x1400106d8
   14000291e:	or     rcx,0xffffffffffffffff
   140002922:	xor    r11d,r11d
   140002925:	mov    r8d,0xa
   14000292b:	test   r9,r9
   14000292e:	je     0x140002947
   140002930:	mov    rax,rcx
   140002933:	inc    rax
   140002936:	cmp    WORD PTR [r9+rax*2],r11w
   14000293b:	jne    0x140002933
   14000293d:	lea    r10d,[rax*2+0x2]
   140002945:	jmp    0x14000294a
   140002947:	mov    r10d,r8d
   14000294a:	test   r9,r9
   14000294d:	mov    DWORD PTR [rbp-0x28],r10d
   140002951:	lea    rdx,[rip+0x8b30]        # 0x14000b488
   140002958:	mov    DWORD PTR [rbp-0x24],r11d
   14000295c:	mov    rax,rdx
   14000295f:	cmovne rax,r9
   140002963:	mov    QWORD PTR [rbp-0x30],rax
   140002967:	mov    rax,QWORD PTR [rbp+0x30]
   14000296b:	test   rax,rax
   14000296e:	je     0x140002985
   140002970:	inc    rcx
   140002973:	cmp    WORD PTR [rax+rcx*2],r11w
   140002978:	jne    0x140002970
   14000297a:	lea    r8d,[rcx*2+0x2]
   140002982:	test   rax,rax
   140002985:	cmovne rdx,rax
   140002989:	mov    DWORD PTR [rbp-0x18],r8d
   14000298d:	cmp    BYTE PTR [rip+0xdd3c],r11b        # 0x1400106d0
   140002994:	mov    QWORD PTR [rbp-0x20],rdx
   140002998:	mov    DWORD PTR [rbp-0x14],r11d
   14000299c:	jne    0x1400029c6
   14000299e:	mov    rbx,QWORD PTR [rip+0xdd23]        # 0x1400106c8
   1400029a5:	mov    rcx,rbx
   1400029a8:	call   QWORD PTR [rip+0x7b2a]        # 0x14000a4d8
   1400029ae:	lea    r9,[rbp-0x30]
   1400029b2:	mov    r8d,0x2
   1400029b8:	lea    rdx,[rip+0x7cc1]        # 0x14000a680
   1400029bf:	mov    rcx,rdi
   1400029c2:	call   rbx
   1400029c4:	jmp    0x1400029f6
   1400029c6:	lea    rax,[rip+0x7d33]        # 0x14000a700
   1400029cd:	mov    DWORD PTR [rbp-0x34],0x1a0000
   1400029d4:	mov    QWORD PTR [rbp-0x48],rax
   1400029d8:	lea    rdx,[rbp-0x60]
   1400029dc:	mov    eax,0x50
   1400029e1:	mov    DWORD PTR [rbp-0x5c],0x400
   1400029e8:	mov    WORD PTR [rbp-0x60],ax
   1400029ec:	mov    rcx,QWORD PTR [rdi+0x8]
   1400029f0:	call   QWORD PTR [rip+0x797a]        # 0x14000a370
   1400029f6:	mov    rcx,QWORD PTR [rbp-0x10]
   1400029fa:	xor    rcx,rsp
   1400029fd:	call   0x140009600
   140002a02:	lea    r11,[rsp+0x80]
   140002a0a:	mov    rbx,QWORD PTR [r11+0x10]
   140002a0e:	mov    rdi,QWORD PTR [r11+0x18]
   140002a12:	mov    rsp,r11
   140002a15:	pop    rbp
   140002a16:	ret    
   140002a17:	int3   
   140002a18:	int3   
   140002a19:	int3   
   140002a1a:	int3   
   140002a1b:	int3   
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	mov    QWORD PTR [rsp+0x8],rbx
   140002a25:	push   rdi
   140002a26:	sub    rsp,0x50
   140002a2a:	mov    rdi,QWORD PTR [rip+0xdca7]        # 0x1400106d8
   140002a31:	xor    ecx,ecx
   140002a33:	cmp    BYTE PTR [rip+0xdc97],cl        # 0x1400106d0
   140002a39:	jne    0x140002a5f
   140002a3b:	mov    rbx,QWORD PTR [rip+0xdc86]        # 0x1400106c8
   140002a42:	mov    rcx,rbx
   140002a45:	call   QWORD PTR [rip+0x7a8d]        # 0x14000a4d8
   140002a4b:	xor    r9d,r9d
   140002a4e:	lea    rdx,[rip+0x7cf3]        # 0x14000a748
   140002a55:	xor    r8d,r8d
   140002a58:	mov    rcx,rdi
   140002a5b:	call   rbx
   140002a5d:	jmp    0x140002a94
   140002a5f:	mov    rcx,QWORD PTR [rdi+0x8]
   140002a63:	lea    rax,[rip+0x7c36]        # 0x14000a6a0
   140002a6a:	mov    QWORD PTR [rsp+0x38],rax
   140002a6f:	lea    rdx,[rsp+0x20]
   140002a74:	mov    eax,0x30
   140002a79:	mov    DWORD PTR [rsp+0x4c],0x1a0000
   140002a81:	mov    WORD PTR [rsp+0x20],ax
   140002a86:	mov    DWORD PTR [rsp+0x24],0x401
   140002a8e:	call   QWORD PTR [rip+0x78dc]        # 0x14000a370
   140002a94:	mov    rbx,QWORD PTR [rsp+0x60]
   140002a99:	add    rsp,0x50
   140002a9d:	pop    rdi
   140002a9e:	ret    
   140002a9f:	int3   
   140002aa0:	int3   
   140002aa1:	int3   
   140002aa2:	int3   
   140002aa3:	int3   
   140002aa4:	int3   
   140002aa5:	int3   
   140002aa6:	int3   
   140002aa7:	int3   
   140002aa8:	mov    QWORD PTR [rsp+0x8],rbx
   140002aad:	mov    DWORD PTR [rsp+0x20],r9d
   140002ab2:	push   rbp
   140002ab3:	push   rsi
   140002ab4:	push   rdi
   140002ab5:	mov    rbp,rsp
   140002ab8:	sub    rsp,0x70
   140002abc:	mov    rax,QWORD PTR [rip+0xd545]        # 0x140010008
   140002ac3:	xor    rax,rsp
   140002ac6:	mov    QWORD PTR [rbp-0x10],rax
   140002aca:	and    DWORD PTR [rbp-0x14],0x0
   140002ace:	lea    rax,[rbp+0x38]
   140002ad2:	cmp    BYTE PTR [rip+0xdbf7],0x0        # 0x1400106d0
   140002ad9:	mov    rdi,rdx
   140002adc:	mov    rsi,QWORD PTR [rip+0xdbf5]        # 0x1400106d8
   140002ae3:	mov    QWORD PTR [rbp-0x20],rax
   140002ae7:	mov    DWORD PTR [rbp-0x18],0x4
   140002aee:	jne    0x140002b14
   140002af0:	mov    rbx,QWORD PTR [rip+0xdbd1]        # 0x1400106c8
   140002af7:	mov    rcx,rbx
   140002afa:	call   QWORD PTR [rip+0x79d8]        # 0x14000a4d8
   140002b00:	lea    r9,[rbp-0x20]
   140002b04:	mov    r8d,0x1
   140002b0a:	mov    rdx,rdi
   140002b0d:	mov    rcx,rsi
   140002b10:	call   rbx
   140002b12:	jmp    0x140002b4a
   140002b14:	movzx  eax,BYTE PTR [rdx+0x2]
   140002b18:	mov    WORD PTR [rbp-0x4a],ax
   140002b1c:	mov    al,BYTE PTR [rdx+0x4]
   140002b1f:	mov    BYTE PTR [rbp-0x4b],al
   140002b22:	mov    al,BYTE PTR [rdx+0x5]
   140002b25:	lea    rdx,[rbp-0x50]
   140002b29:	mov    BYTE PTR [rbp-0x4c],al
   140002b2c:	mov    eax,0x40
   140002b31:	mov    WORD PTR [rbp-0x50],ax
   140002b35:	mov    QWORD PTR [rbp-0x38],r8
   140002b39:	mov    DWORD PTR [rbp-0x24],0x1a0000
   140002b40:	mov    rcx,QWORD PTR [rsi+0x8]
   140002b44:	call   QWORD PTR [rip+0x7826]        # 0x14000a370
   140002b4a:	mov    rcx,QWORD PTR [rbp-0x10]
   140002b4e:	xor    rcx,rsp
   140002b51:	call   0x140009600
   140002b56:	mov    rbx,QWORD PTR [rsp+0x90]
   140002b5e:	add    rsp,0x70
   140002b62:	pop    rdi
   140002b63:	pop    rsi
   140002b64:	pop    rbp
   140002b65:	ret    
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	mov    QWORD PTR [rsp+0x8],rbx
   140002b71:	mov    QWORD PTR [rsp+0x20],rsi
   140002b76:	push   rdi
   140002b77:	sub    rsp,0x70
   140002b7b:	mov    rax,QWORD PTR [rip+0xd486]        # 0x140010008
   140002b82:	xor    rax,rsp
   140002b85:	mov    QWORD PTR [rsp+0x60],rax
   140002b8a:	mov    rsi,QWORD PTR [rip+0xdb47]        # 0x1400106d8
   140002b91:	mov    rdi,rdx
   140002b94:	xor    edx,edx
   140002b96:	test   r9,r9
   140002b99:	je     0x140002bb2
   140002b9b:	or     rax,0xffffffffffffffff
   140002b9f:	inc    rax
   140002ba2:	cmp    WORD PTR [r9+rax*2],dx
   140002ba7:	jne    0x140002b9f
   140002ba9:	lea    ecx,[rax*2+0x2]
   140002bb0:	jmp    0x140002bb7
   140002bb2:	mov    ecx,0xa
   140002bb7:	test   r9,r9
   140002bba:	mov    DWORD PTR [rsp+0x58],ecx
   140002bbe:	lea    rax,[rip+0x88c3]        # 0x14000b488
   140002bc5:	mov    DWORD PTR [rsp+0x5c],edx
   140002bc9:	cmovne rax,r9
   140002bcd:	cmp    BYTE PTR [rip+0xdafd],dl        # 0x1400106d0
   140002bd3:	mov    QWORD PTR [rsp+0x50],rax
   140002bd8:	jne    0x140002bff
   140002bda:	mov    rbx,QWORD PTR [rip+0xdae7]        # 0x1400106c8
   140002be1:	mov    rcx,rbx
   140002be4:	call   QWORD PTR [rip+0x78ee]        # 0x14000a4d8
   140002bea:	lea    r9,[rsp+0x50]
   140002bef:	mov    r8d,0x1
   140002bf5:	mov    rdx,rdi
   140002bf8:	mov    rcx,rsi
   140002bfb:	call   rbx
   140002bfd:	jmp    0x140002c3c
   140002bff:	movzx  eax,BYTE PTR [rdi+0x2]
   140002c03:	lea    rdx,[rsp+0x20]
   140002c08:	mov    WORD PTR [rsp+0x26],ax
   140002c0d:	mov    al,BYTE PTR [rdi+0x4]
   140002c10:	mov    BYTE PTR [rsp+0x25],al
   140002c14:	mov    al,BYTE PTR [rdi+0x5]
   140002c17:	mov    BYTE PTR [rsp+0x24],al
   140002c1b:	mov    eax,0x40
   140002c20:	mov    WORD PTR [rsp+0x20],ax
   140002c25:	mov    QWORD PTR [rsp+0x38],r8
   140002c2a:	mov    DWORD PTR [rsp+0x4c],0x1a0000
   140002c32:	mov    rcx,QWORD PTR [rsi+0x8]
   140002c36:	call   QWORD PTR [rip+0x7734]        # 0x14000a370
   140002c3c:	mov    rcx,QWORD PTR [rsp+0x60]
   140002c41:	xor    rcx,rsp
   140002c44:	call   0x140009600
   140002c49:	lea    r11,[rsp+0x70]
   140002c4e:	mov    rbx,QWORD PTR [r11+0x10]
   140002c52:	mov    rsi,QWORD PTR [r11+0x28]
   140002c56:	mov    rsp,r11
   140002c59:	pop    rdi
   140002c5a:	ret    
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	int3   
   140002c61:	int3   
   140002c62:	int3   
   140002c63:	int3   
   140002c64:	mov    QWORD PTR [rsp+0x18],r8
   140002c69:	mov    QWORD PTR [rsp+0x20],r9
   140002c6e:	push   rbx
   140002c6f:	push   rsi
   140002c70:	push   rdi
   140002c71:	sub    rsp,0x20
   140002c75:	xor    edi,edi
   140002c77:	lea    rax,[rdx-0x1]
   140002c7b:	cmp    rax,0x7ffffffe
   140002c81:	mov    rsi,rcx
   140002c84:	mov    ecx,0x80070057
   140002c89:	cmova  edi,ecx
   140002c8c:	test   edi,edi
   140002c8e:	js     0x140002cc5
   140002c90:	lea    rbx,[rdx-0x1]
   140002c94:	mov    rcx,rsi
   140002c97:	mov    rdx,rbx
   140002c9a:	lea    r9,[rsp+0x58]
   140002c9f:	xor    edi,edi
   140002ca1:	call   QWORD PTR [rip+0x7721]        # 0x14000a3c8
   140002ca7:	test   eax,eax
   140002ca9:	js     0x140002cba
   140002cab:	cdqe   
   140002cad:	cmp    rax,rbx
   140002cb0:	ja     0x140002cba
   140002cb2:	jne    0x140002ccd
   140002cb4:	mov    BYTE PTR [rbx+rsi*1],dil
   140002cb8:	jmp    0x140002ccd
   140002cba:	mov    BYTE PTR [rbx+rsi*1],dil
   140002cbe:	mov    edi,0x8007007a
   140002cc3:	jmp    0x140002ccd
   140002cc5:	test   rdx,rdx
   140002cc8:	je     0x140002ccd
   140002cca:	mov    BYTE PTR [rsi],0x0
   140002ccd:	mov    eax,edi
   140002ccf:	add    rsp,0x20
   140002cd3:	pop    rdi
   140002cd4:	pop    rsi
   140002cd5:	pop    rbx
   140002cd6:	ret    
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	rex push rbx
   140002ce2:	sub    rsp,0x20
   140002ce6:	mov    rcx,QWORD PTR [rip+0xd9fb]        # 0x1400106e8
   140002ced:	xor    ebx,ebx
   140002cef:	test   rcx,rcx
   140002cf2:	je     0x140002ddd
   140002cf8:	lea    rdx,[rip+0x87b1]        # 0x14000b4b0
   140002cff:	call   QWORD PTR [rip+0x74b3]        # 0x14000a1b8
   140002d05:	mov    QWORD PTR [rip+0xda0c],rax        # 0x140010718
   140002d0c:	test   rax,rax
   140002d0f:	je     0x140002ddd
   140002d15:	mov    rcx,QWORD PTR [rip+0xd9cc]        # 0x1400106e8
   140002d1c:	lea    rdx,[rip+0x879d]        # 0x14000b4c0
   140002d23:	call   QWORD PTR [rip+0x748f]        # 0x14000a1b8
   140002d29:	mov    QWORD PTR [rip+0xd9e0],rax        # 0x140010710
   140002d30:	test   rax,rax
   140002d33:	je     0x140002ddd
   140002d39:	mov    rcx,QWORD PTR [rip+0xd9a8]        # 0x1400106e8
   140002d40:	lea    rdx,[rip+0x8791]        # 0x14000b4d8
   140002d47:	call   QWORD PTR [rip+0x746b]        # 0x14000a1b8
   140002d4d:	mov    QWORD PTR [rip+0xd9d4],rax        # 0x140010728
   140002d54:	test   rax,rax
   140002d57:	je     0x140002ddd
   140002d5d:	mov    rcx,QWORD PTR [rip+0xd984]        # 0x1400106e8
   140002d64:	lea    rdx,[rip+0x8785]        # 0x14000b4f0
   140002d6b:	call   QWORD PTR [rip+0x7447]        # 0x14000a1b8
   140002d71:	mov    QWORD PTR [rip+0xd988],rax        # 0x140010700
   140002d78:	test   rax,rax
   140002d7b:	je     0x140002ddd
   140002d7d:	mov    rcx,QWORD PTR [rip+0xd964]        # 0x1400106e8
   140002d84:	lea    rdx,[rip+0x877d]        # 0x14000b508
   140002d8b:	call   QWORD PTR [rip+0x7427]        # 0x14000a1b8
   140002d91:	mov    QWORD PTR [rip+0xd970],rax        # 0x140010708
   140002d98:	test   rax,rax
   140002d9b:	je     0x140002ddd
   140002d9d:	mov    rcx,QWORD PTR [rip+0xd944]        # 0x1400106e8
   140002da4:	lea    rdx,[rip+0x8775]        # 0x14000b520
   140002dab:	call   QWORD PTR [rip+0x7407]        # 0x14000a1b8
   140002db1:	mov    QWORD PTR [rip+0xd940],rax        # 0x1400106f8
   140002db8:	test   rax,rax
   140002dbb:	je     0x140002ddd
   140002dbd:	mov    rcx,QWORD PTR [rip+0xd924]        # 0x1400106e8
   140002dc4:	lea    rdx,[rip+0x876d]        # 0x14000b538
   140002dcb:	call   QWORD PTR [rip+0x73e7]        # 0x14000a1b8
   140002dd1:	mov    QWORD PTR [rip+0xd958],rax        # 0x140010730
   140002dd8:	test   rax,rax
   140002ddb:	jne    0x140002e10
   140002ddd:	call   QWORD PTR [rip+0x730d]        # 0x14000a0f0
   140002de3:	movzx  ecx,ax
   140002de6:	or     ecx,0x80070000
   140002dec:	test   eax,eax
   140002dee:	cmovle ecx,eax
   140002df1:	test   ecx,ecx
   140002df3:	jns    0x140002e0b
   140002df5:	call   QWORD PTR [rip+0x72f5]        # 0x14000a0f0
   140002dfb:	movzx  ebx,ax
   140002dfe:	or     ebx,0x80070000
   140002e04:	test   eax,eax
   140002e06:	cmovle ebx,eax
   140002e09:	jmp    0x140002e10
   140002e0b:	mov    ebx,0x80004005
   140002e10:	mov    eax,ebx
   140002e12:	add    rsp,0x20
   140002e16:	pop    rbx
   140002e17:	ret    
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    rax,rsp
   140002e23:	mov    QWORD PTR [rax+0x10],rdx
   140002e27:	mov    QWORD PTR [rax+0x18],r8
   140002e2b:	mov    QWORD PTR [rax+0x20],r9
   140002e2f:	sub    rsp,0x28
   140002e33:	lea    r8,[rax+0x18]
   140002e37:	call   0x140002e48
   140002e3c:	add    rsp,0x28
   140002e40:	ret    
   140002e41:	int3   
   140002e42:	int3   
   140002e43:	int3   
   140002e44:	int3   
   140002e45:	int3   
   140002e46:	int3   
   140002e47:	int3   
   140002e48:	test   rdx,rdx
   140002e4b:	je     0x140003058
   140002e51:	push   rbx
   140002e52:	push   rbp
   140002e53:	push   rsi
   140002e54:	push   rdi
   140002e55:	push   r12
   140002e57:	push   r14
   140002e59:	push   r15
   140002e5b:	sub    rsp,0x280
   140002e62:	mov    rax,QWORD PTR [rip+0xd19f]        # 0x140010008
   140002e69:	xor    rax,rsp
   140002e6c:	mov    QWORD PTR [rsp+0x270],rax
   140002e74:	xor    r12d,r12d
   140002e77:	mov    r15,r8
   140002e7a:	mov    rdi,rdx
   140002e7d:	mov    esi,ecx
   140002e7f:	test   r8,r8
   140002e82:	je     0x140003037
   140002e88:	xor    edx,edx
   140002e8a:	mov    DWORD PTR [rsp+0x60],r12d
   140002e8f:	mov    r8d,0x204
   140002e95:	lea    rcx,[rsp+0x64]
   140002e9a:	call   0x140009c86
   140002e9f:	mov    r8d,0x104
   140002ea5:	lea    rdx,[rsp+0x60]
   140002eaa:	xor    ecx,ecx
   140002eac:	lea    rbx,[rip+0x86ed]        # 0x14000b5a0
   140002eb3:	call   QWORD PTR [rip+0x731f]        # 0x14000a1d8
   140002eb9:	test   eax,eax
   140002ebb:	je     0x140002ee0
   140002ebd:	lea    edx,[r12+0x5c]
   140002ec2:	lea    rcx,[rsp+0x60]
   140002ec7:	call   QWORD PTR [rip+0x7503]        # 0x14000a3d0
   140002ecd:	mov    rbx,rax
   140002ed0:	test   rax,rax
   140002ed3:	je     0x140002edb
   140002ed5:	add    rbx,0x2
   140002ed9:	jmp    0x140002ee0
   140002edb:	lea    rbx,[rsp+0x60]
   140002ee0:	or     rax,0xffffffffffffffff
   140002ee4:	mov    rcx,rax
   140002ee7:	inc    rcx
   140002eea:	cmp    WORD PTR [rdi+rcx*2],r12w
   140002eef:	jne    0x140002ee7
   140002ef1:	lea    rdx,[rsp+0x60]
   140002ef6:	inc    rax
   140002ef9:	cmp    WORD PTR [rdx+rax*2],r12w
   140002efe:	jne    0x140002ef6
   140002f00:	lea    rbp,[rcx+rax*1]
   140002f04:	call   QWORD PTR [rip+0x726e]        # 0x14000a178
   140002f0a:	lea    r8,[rbp+0x4]
   140002f0e:	mov    edx,0x8
   140002f13:	mov    rcx,rax
   140002f16:	call   QWORD PTR [rip+0x724c]        # 0x14000a168
   140002f1c:	mov    r14,rax
   140002f1f:	test   rax,rax
   140002f22:	je     0x140003037
   140002f28:	mov    r9,rbx
   140002f2b:	mov    QWORD PTR [rsp+0x20],rdi
   140002f30:	lea    r8,[rip+0x8681]        # 0x14000b5b8
   140002f37:	mov    rcx,rax
   140002f3a:	lea    rdx,[rbp+0x4]
   140002f3e:	call   0x140002c64
   140002f43:	test   eax,eax
   140002f45:	js     0x140003023
   140002f4b:	mov    ecx,esi
   140002f4d:	test   esi,esi
   140002f4f:	je     0x140002f69
   140002f51:	sub    ecx,0x1
   140002f54:	je     0x140002f62
   140002f56:	cmp    ecx,0x1
   140002f59:	jne    0x140002f6e
   140002f5b:	mov    esi,0x3000000
   140002f60:	jmp    0x140002f6e
   140002f62:	mov    esi,0x2000000
   140002f67:	jmp    0x140002f6e
   140002f69:	mov    esi,0x4000000
   140002f6e:	cmp    QWORD PTR [rip+0xd78b],r12        # 0x140010700
   140002f75:	je     0x140003023
   140002f7b:	cmp    QWORD PTR [rip+0xd776],r12        # 0x1400106f8
   140002f82:	je     0x140003023
   140002f88:	cmp    QWORD PTR [rip+0xd7a1],r12        # 0x140010730
   140002f8f:	je     0x140003023
   140002f95:	call   QWORD PTR [rip+0x7155]        # 0x14000a0f0
   140002f9b:	mov    rbx,QWORD PTR [rip+0xd78e]        # 0x140010730
   140002fa2:	mov    ebp,eax
   140002fa4:	mov    rcx,rbx
   140002fa7:	call   QWORD PTR [rip+0x752b]        # 0x14000a4d8
   140002fad:	call   rbx
   140002faf:	mov    rbx,QWORD PTR [rip+0xd742]        # 0x1400106f8
   140002fb6:	mov    rdi,rax
   140002fb9:	mov    rcx,rbx
   140002fbc:	call   QWORD PTR [rip+0x7516]        # 0x14000a4d8
   140002fc2:	mov    r8,r15
   140002fc5:	mov    rdx,r14
   140002fc8:	mov    ecx,esi
   140002fca:	call   rbx
   140002fcc:	mov    rsi,QWORD PTR [rip+0xd72d]        # 0x140010700
   140002fd3:	mov    rbx,rax
   140002fd6:	mov    rcx,rsi
   140002fd9:	call   QWORD PTR [rip+0x74f9]        # 0x14000a4d8
   140002fdf:	mov    DWORD PTR [rsp+0x50],r12d
   140002fe4:	lea    rax,[rip+0x85d5]        # 0x14000b5c0
   140002feb:	mov    QWORD PTR [rsp+0x48],r12
   140002ff0:	lea    r8,[rip+0x864d]        # 0x14000b644
   140002ff7:	mov    DWORD PTR [rsp+0x40],ebp
   140002ffb:	xor    r9d,r9d
   140002ffe:	mov    QWORD PTR [rsp+0x38],rdi
   140003003:	xor    edx,edx
   140003005:	mov    QWORD PTR [rsp+0x30],rax
   14000300a:	mov    rcx,rbx
   14000300d:	lea    rax,[rip+0x85cc]        # 0x14000b5e0
   140003014:	mov    QWORD PTR [rsp+0x28],rax
   140003019:	mov    DWORD PTR [rsp+0x20],0x195
   140003021:	call   rsi
   140003023:	call   QWORD PTR [rip+0x714f]        # 0x14000a178
   140003029:	mov    r8,r14
   14000302c:	xor    edx,edx
   14000302e:	mov    rcx,rax
   140003031:	call   QWORD PTR [rip+0x7139]        # 0x14000a170
   140003037:	mov    rcx,QWORD PTR [rsp+0x270]
   14000303f:	xor    rcx,rsp
   140003042:	call   0x140009600
   140003047:	add    rsp,0x280
   14000304e:	pop    r15
   140003050:	pop    r14
   140003052:	pop    r12
   140003054:	pop    rdi
   140003055:	pop    rsi
   140003056:	pop    rbp
   140003057:	pop    rbx
   140003058:	ret    
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	int3   
   14000305d:	int3   
   14000305e:	int3   
   14000305f:	int3   
   140003060:	mov    QWORD PTR [rsp+0x18],r8
   140003065:	mov    QWORD PTR [rsp+0x20],r9
   14000306a:	push   rbx
   14000306b:	push   rbp
   14000306c:	push   rsi
   14000306d:	push   rdi
   14000306e:	sub    rsp,0x28
   140003072:	xor    ebp,ebp
   140003074:	lea    rax,[rdx-0x1]
   140003078:	cmp    rax,0x7ffffffe
   14000307e:	mov    rsi,rcx
   140003081:	mov    edi,ebp
   140003083:	mov    ecx,0x80070057
   140003088:	cmova  edi,ecx
   14000308b:	test   edi,edi
   14000308d:	js     0x1400030c4
   14000308f:	lea    rbx,[rdx-0x1]
   140003093:	mov    rcx,rsi
   140003096:	mov    rdx,rbx
   140003099:	lea    r9,[rsp+0x68]
   14000309e:	mov    edi,ebp
   1400030a0:	call   QWORD PTR [rip+0x731a]        # 0x14000a3c0
   1400030a6:	test   eax,eax
   1400030a8:	js     0x1400030b9
   1400030aa:	cdqe   
   1400030ac:	cmp    rax,rbx
   1400030af:	ja     0x1400030b9
   1400030b1:	jne    0x1400030cc
   1400030b3:	mov    WORD PTR [rsi+rbx*2],bp
   1400030b7:	jmp    0x1400030cc
   1400030b9:	mov    WORD PTR [rsi+rbx*2],bp
   1400030bd:	mov    edi,0x8007007a
   1400030c2:	jmp    0x1400030cc
   1400030c4:	test   rdx,rdx
   1400030c7:	je     0x1400030cc
   1400030c9:	mov    WORD PTR [rsi],bp
   1400030cc:	mov    eax,edi
   1400030ce:	add    rsp,0x28
   1400030d2:	pop    rdi
   1400030d3:	pop    rsi
   1400030d4:	pop    rbp
   1400030d5:	pop    rbx
   1400030d6:	ret    
   1400030d7:	int3   
   1400030d8:	int3   
   1400030d9:	int3   
   1400030da:	int3   
   1400030db:	int3   
   1400030dc:	int3   
   1400030dd:	int3   
   1400030de:	int3   
   1400030df:	int3   
   1400030e0:	rex push rbx
   1400030e2:	sub    rsp,0x20
   1400030e6:	xor    ebx,ebx
   1400030e8:	lea    r8,[rsp+0x48]
   1400030ed:	xor    r9d,r9d
   1400030f0:	mov    QWORD PTR [rsp+0x40],rbx
   1400030f5:	call   QWORD PTR [rip+0x70d5]        # 0x14000a1d0
   1400030fb:	test   eax,eax
   1400030fd:	je     0x140003144
   1400030ff:	mov    rcx,QWORD PTR [rsp+0x48]
   140003104:	lea    r9,[rsp+0x40]
   140003109:	mov    r8d,eax
   14000310c:	xor    edx,edx
   14000310e:	call   0x140004984
   140003113:	test   eax,eax
   140003115:	jns    0x14000313f
   140003117:	movzx  ecx,ax
   14000311a:	call   QWORD PTR [rip+0x6fc0]        # 0x14000a0e0
   140003120:	cmp    QWORD PTR [rsp+0x40],rbx
   140003125:	je     0x140003144
   140003127:	call   QWORD PTR [rip+0x704b]        # 0x14000a178
   14000312d:	mov    r8,QWORD PTR [rsp+0x40]
   140003132:	xor    edx,edx
   140003134:	mov    rcx,rax
   140003137:	call   QWORD PTR [rip+0x7033]        # 0x14000a170
   14000313d:	jmp    0x140003144
   14000313f:	mov    rbx,QWORD PTR [rsp+0x40]
   140003144:	mov    rax,rbx
   140003147:	add    rsp,0x20
   14000314b:	pop    rbx
   14000314c:	ret    
   14000314d:	int3   
   14000314e:	int3   
   14000314f:	int3   
   140003150:	int3   
   140003151:	int3   
   140003152:	int3   
   140003153:	int3   
   140003154:	mov    QWORD PTR [rsp+0x8],rbx
   140003159:	mov    QWORD PTR [rsp+0x10],rbp
   14000315e:	mov    QWORD PTR [rsp+0x18],rsi
   140003163:	push   rdi
   140003164:	sub    rsp,0x20
   140003168:	xor    ebp,ebp
   14000316a:	xor    r8d,r8d
   14000316d:	xor    edx,edx
   14000316f:	mov    ebx,ebp
   140003171:	mov    rsi,rcx
   140003174:	call   QWORD PTR [rip+0x7096]        # 0x14000a210
   14000317a:	mov    edi,eax
   14000317c:	test   eax,eax
   14000317e:	je     0x1400031d4
   140003180:	mov    ebx,edi
   140003182:	add    rbx,rbx
   140003185:	call   QWORD PTR [rip+0x6fed]        # 0x14000a178
   14000318b:	mov    r8,rbx
   14000318e:	lea    edx,[rbp+0x8]
   140003191:	mov    rcx,rax
   140003194:	call   QWORD PTR [rip+0x6fce]        # 0x14000a168
   14000319a:	mov    rbx,rax
   14000319d:	test   rax,rax
   1400031a0:	je     0x1400031d4
   1400031a2:	mov    r8d,edi
   1400031a5:	mov    rdx,rax
   1400031a8:	mov    rcx,rsi
   1400031ab:	call   QWORD PTR [rip+0x705f]        # 0x14000a210
   1400031b1:	test   eax,eax
   1400031b3:	je     0x1400031ba
   1400031b5:	cmp    bp,WORD PTR [rbx]
   1400031b8:	jne    0x1400031d4
   1400031ba:	call   QWORD PTR [rip+0x6fb8]        # 0x14000a178
   1400031c0:	mov    r8,rbx
   1400031c3:	xor    edx,edx
   1400031c5:	mov    rcx,rax
   1400031c8:	call   QWORD PTR [rip+0x6fa2]        # 0x14000a170
   1400031ce:	test   eax,eax
   1400031d0:	cmovne rbx,rbp
   1400031d4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400031d9:	mov    rax,rbx
   1400031dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400031e6:	add    rsp,0x20
   1400031ea:	pop    rdi
   1400031eb:	ret    
   1400031ec:	int3   
   1400031ed:	int3   
   1400031ee:	int3   
   1400031ef:	int3   
   1400031f0:	int3   
   1400031f1:	int3   
   1400031f2:	int3   
   1400031f3:	int3   
   1400031f4:	mov    DWORD PTR [rsp+0x20],r9d
   1400031f9:	sub    rsp,0x38
   1400031fd:	lea    rax,[rsp+0x60]
   140003202:	mov    QWORD PTR [rsp+0x20],rax
   140003207:	call   0x140003218
   14000320c:	add    rsp,0x38
   140003210:	ret    
   140003211:	int3   
   140003212:	int3   
   140003213:	int3   
   140003214:	int3   
   140003215:	int3   
   140003216:	int3   
   140003217:	int3   
   140003218:	mov    rax,rsp
   14000321b:	mov    QWORD PTR [rax+0x8],rbx
   14000321f:	mov    QWORD PTR [rax+0x10],rbp
   140003223:	mov    QWORD PTR [rax+0x20],rsi
   140003227:	mov    QWORD PTR [rax+0x18],r8
   14000322b:	push   rdi
   14000322c:	push   r12
   14000322e:	push   r13
   140003230:	push   r14
   140003232:	push   r15
   140003234:	sub    rsp,0x20
   140003238:	xor    edi,edi
   14000323a:	mov    r13d,r9d
   14000323d:	mov    r12,rdx
   140003240:	mov    r15,rcx
   140003243:	mov    r14d,edi
   140003246:	mov    ebx,edi
   140003248:	test   rdx,rdx
   14000324b:	je     0x1400033a3
   140003251:	add    r14d,0x400
   140003258:	test   rbx,rbx
   14000325b:	je     0x140003271
   14000325d:	call   QWORD PTR [rip+0x6f15]        # 0x14000a178
   140003263:	mov    r8,rbx
   140003266:	xor    edx,edx
   140003268:	mov    rcx,rax
   14000326b:	call   QWORD PTR [rip+0x6eff]        # 0x14000a170
   140003271:	mov    esi,r14d
   140003274:	lea    rbx,[r14+r14*1]
   140003278:	call   QWORD PTR [rip+0x6efa]        # 0x14000a178
   14000327e:	mov    r8,rbx
   140003281:	mov    edx,0x8
   140003286:	mov    rcx,rax
   140003289:	call   QWORD PTR [rip+0x6ed9]        # 0x14000a168
   14000328f:	mov    rbx,rax
   140003292:	test   rax,rax
   140003295:	je     0x1400032f3
   140003297:	mov    WORD PTR [rax],di
   14000329a:	mov    ebp,edi
   14000329c:	lea    rax,[r14-0x1]
   1400032a0:	mov    ecx,0x80070057
   1400032a5:	cmp    rax,0x7ffffffe
   1400032ab:	cmova  ebp,ecx
   1400032ae:	test   ebp,ebp
   1400032b0:	js     0x1400032e9
   1400032b2:	mov    r9,QWORD PTR [rsp+0x70]
   1400032b7:	dec    rsi
   1400032ba:	mov    rdx,rsi
   1400032bd:	mov    r8,r12
   1400032c0:	mov    rcx,rbx
   1400032c3:	mov    ebp,edi
   1400032c5:	call   QWORD PTR [rip+0x70f5]        # 0x14000a3c0
   1400032cb:	test   eax,eax
   1400032cd:	js     0x1400032de
   1400032cf:	cdqe   
   1400032d1:	cmp    rax,rsi
   1400032d4:	ja     0x1400032de
   1400032d6:	jne    0x1400032f8
   1400032d8:	mov    WORD PTR [rbx+rsi*2],di
   1400032dc:	jmp    0x1400032f8
   1400032de:	mov    WORD PTR [rbx+rsi*2],di
   1400032e2:	mov    ebp,0x8007007a
   1400032e7:	jmp    0x1400032f8
   1400032e9:	test   r14d,r14d
   1400032ec:	je     0x1400032f8
   1400032ee:	mov    WORD PTR [rbx],di
   1400032f1:	jmp    0x1400032f8
   1400032f3:	mov    ebp,0x80004005
   1400032f8:	cmp    ebp,0x8007007a
   1400032fe:	je     0x140003251
   140003304:	test   rbx,rbx
   140003307:	je     0x1400033a3
   14000330d:	xor    r8d,r8d
   140003310:	lea    rcx,[rip+0x8331]        # 0x14000b648
   140003317:	xor    edx,edx
   140003319:	call   QWORD PTR [rip+0x6ea9]        # 0x14000a1c8
   14000331f:	mov    rsi,rax
   140003322:	test   rax,rax
   140003325:	je     0x14000338f
   140003327:	lea    rdx,[rip+0x8332]        # 0x14000b660
   14000332e:	mov    rcx,rax
   140003331:	call   QWORD PTR [rip+0x6e81]        # 0x14000a1b8
   140003337:	lea    rdx,[rip+0x833a]        # 0x14000b678
   14000333e:	mov    rcx,rsi
   140003341:	mov    rbp,rax
   140003344:	call   QWORD PTR [rip+0x6e6e]        # 0x14000a1b8
   14000334a:	mov    r14,rax
   14000334d:	test   rbp,rbp
   140003350:	je     0x140003386
   140003352:	test   rax,rax
   140003355:	je     0x140003386
   140003357:	test   r15,r15
   14000335a:	jne    0x14000336a
   14000335c:	mov    rcx,rbp
   14000335f:	call   QWORD PTR [rip+0x7173]        # 0x14000a4d8
   140003365:	call   rbp
   140003367:	mov    r15,rax
   14000336a:	mov    rcx,r14
   14000336d:	call   QWORD PTR [rip+0x7165]        # 0x14000a4d8
   140003373:	mov    r8,QWORD PTR [rsp+0x60]
   140003378:	mov    r9d,r13d
   14000337b:	mov    rdx,rbx
   14000337e:	mov    rcx,r15
   140003381:	call   r14
   140003384:	mov    edi,eax
   140003386:	mov    rcx,rsi
   140003389:	call   QWORD PTR [rip+0x6e21]        # 0x14000a1b0
   14000338f:	call   QWORD PTR [rip+0x6de3]        # 0x14000a178
   140003395:	mov    r8,rbx
   140003398:	xor    edx,edx
   14000339a:	mov    rcx,rax
   14000339d:	call   QWORD PTR [rip+0x6dcd]        # 0x14000a170
   1400033a3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400033a8:	mov    eax,edi
   1400033aa:	mov    rbp,QWORD PTR [rsp+0x58]
   1400033af:	mov    rsi,QWORD PTR [rsp+0x68]
   1400033b4:	add    rsp,0x20
   1400033b8:	pop    r15
   1400033ba:	pop    r14
   1400033bc:	pop    r13
   1400033be:	pop    r12
   1400033c0:	pop    rdi
   1400033c1:	ret    
   1400033c2:	int3   
   1400033c3:	int3   
   1400033c4:	int3   
   1400033c5:	int3   
   1400033c6:	int3   
   1400033c7:	int3   
   1400033c8:	mov    rax,rsp
   1400033cb:	push   rbx
   1400033cc:	push   rbp
   1400033cd:	push   rsi
   1400033ce:	push   rdi
   1400033cf:	push   r12
   1400033d1:	push   r13
   1400033d3:	push   r14
   1400033d5:	push   r15
   1400033d7:	sub    rsp,0x38
   1400033db:	mov    r12d,DWORD PTR [rax+0x28]
   1400033df:	lea    r13,[rax+0x30]
   1400033e3:	xor    ebp,ebp
   1400033e5:	xor    edi,edi
   1400033e7:	xor    ebx,ebx
   1400033e9:	mov    esi,r9d
   1400033ec:	mov    r15,rdx
   1400033ef:	mov    r14,rcx
   1400033f2:	test   r8d,r8d
   1400033f5:	je     0x140003402
   1400033f7:	mov    edx,r8d
   1400033fa:	call   0x1400030e0
   1400033ff:	mov    rdi,rax
   140003402:	test   esi,esi
   140003404:	je     0x140003413
   140003406:	mov    edx,esi
   140003408:	mov    rcx,r14
   14000340b:	call   0x1400030e0
   140003410:	mov    rbx,rax
   140003413:	test   rdi,rdi
   140003416:	je     0x140003444
   140003418:	mov    r9d,r12d
   14000341b:	mov    QWORD PTR [rsp+0x20],r13
   140003420:	mov    r8,rbx
   140003423:	mov    rdx,rdi
   140003426:	mov    rcx,r15
   140003429:	call   0x140003218
   14000342e:	mov    ebp,eax
   140003430:	call   QWORD PTR [rip+0x6d42]        # 0x14000a178
   140003436:	mov    r8,rdi
   140003439:	xor    edx,edx
   14000343b:	mov    rcx,rax
   14000343e:	call   QWORD PTR [rip+0x6d2c]        # 0x14000a170
   140003444:	test   rbx,rbx
   140003447:	je     0x14000345d
   140003449:	call   QWORD PTR [rip+0x6d29]        # 0x14000a178
   14000344f:	mov    r8,rbx
   140003452:	xor    edx,edx
   140003454:	mov    rcx,rax
   140003457:	call   QWORD PTR [rip+0x6d13]        # 0x14000a170
   14000345d:	mov    eax,ebp
   14000345f:	add    rsp,0x38
   140003463:	pop    r15
   140003465:	pop    r14
   140003467:	pop    r13
   140003469:	pop    r12
   14000346b:	pop    rdi
   14000346c:	pop    rsi
   14000346d:	pop    rbp
   14000346e:	pop    rbx
   14000346f:	ret    
   140003470:	int3   
   140003471:	int3   
   140003472:	int3   
   140003473:	int3   
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	test   rcx,rcx
   14000347b:	je     0x140003506
   140003481:	mov    QWORD PTR [rsp+0x18],r8
   140003486:	mov    QWORD PTR [rsp+0x20],r9
   14000348b:	push   rbx
   14000348c:	push   rbp
   14000348d:	push   rsi
   14000348e:	push   rdi
   14000348f:	push   r14
   140003491:	sub    rsp,0x20
   140003495:	mov    rsi,QWORD PTR [rcx]
   140003498:	xor    r9d,r9d
   14000349b:	mov    rbp,r8
   14000349e:	test   rsi,rsi
   1400034a1:	je     0x1400034fc
   1400034a3:	mov    ecx,r9d
   1400034a6:	mov    eax,r9d
   1400034a9:	mov    edi,edx
   1400034ab:	mov    r8d,edx
   1400034ae:	and    edi,0x2000000
   1400034b4:	mov    r10d,edx
   1400034b7:	setne  cl
   1400034ba:	and    r8d,0x3000000
   1400034c1:	setne  al
   1400034c4:	add    ecx,eax
   1400034c6:	and    r10d,0x4000000
   1400034cd:	setne  r9b
   1400034d1:	add    ecx,r9d
   1400034d4:	je     0x1400034fc
   1400034d6:	or     edi,r8d
   1400034d9:	lea    r14,[rsp+0x68]
   1400034de:	or     edi,r10d
   1400034e1:	mov    rcx,rsi
   1400034e4:	mov    ebx,edi
   1400034e6:	not    ebx
   1400034e8:	and    ebx,edx
   1400034ea:	call   QWORD PTR [rip+0x6fe8]        # 0x14000a4d8
   1400034f0:	mov    r9,r14
   1400034f3:	mov    r8,rbp
   1400034f6:	mov    edx,ebx
   1400034f8:	mov    ecx,edi
   1400034fa:	call   rsi
   1400034fc:	add    rsp,0x20
   140003500:	pop    r14
   140003502:	pop    rdi
   140003503:	pop    rsi
   140003504:	pop    rbp
   140003505:	pop    rbx
   140003506:	ret    
   140003507:	int3   
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	mov    QWORD PTR [rsp+0x8],rbx
   140003515:	mov    QWORD PTR [rsp+0x10],rbp
   14000351a:	mov    QWORD PTR [rsp+0x18],rsi
   14000351f:	push   rdi
   140003520:	sub    rsp,0x30
   140003524:	xor    edi,edi
   140003526:	xor    ebx,ebx
   140003528:	mov    rbp,rdx
   14000352b:	test   rcx,rcx
   14000352e:	je     0x1400035da
   140003534:	test   rdx,rdx
   140003537:	je     0x1400035da
   14000353d:	xor    edx,edx
   14000353f:	call   0x140003eb0
   140003544:	mov    rsi,rax
   140003547:	test   rax,rax
   14000354a:	je     0x140003594
   14000354c:	xor    edx,edx
   14000354e:	mov    rcx,rbp
   140003551:	call   0x140003eb0
   140003556:	mov    rbx,rax
   140003559:	test   rax,rax
   14000355c:	je     0x140003594
   14000355e:	and    DWORD PTR [rsp+0x28],edi
   140003562:	xor    r9d,r9d
   140003565:	and    QWORD PTR [rsp+0x20],rdi
   14000356a:	xor    r8d,r8d
   14000356d:	mov    rdx,rax
   140003570:	mov    rcx,rsi
   140003573:	call   QWORD PTR [rip+0x6bcf]        # 0x14000a148
   140003579:	test   eax,eax
   14000357b:	je     0x140003594
   14000357d:	mov    edx,0x80
   140003582:	mov    rcx,rbx
   140003585:	call   QWORD PTR [rip+0x6ba5]        # 0x14000a130
   14000358b:	test   eax,eax
   14000358d:	je     0x140003594
   14000358f:	mov    edi,0x1
   140003594:	call   QWORD PTR [rip+0x6b56]        # 0x14000a0f0
   14000359a:	mov    ebp,eax
   14000359c:	test   rsi,rsi
   14000359f:	je     0x1400035b5
   1400035a1:	call   QWORD PTR [rip+0x6bd1]        # 0x14000a178
   1400035a7:	mov    r8,rsi
   1400035aa:	xor    edx,edx
   1400035ac:	mov    rcx,rax
   1400035af:	call   QWORD PTR [rip+0x6bbb]        # 0x14000a170
   1400035b5:	test   rbx,rbx
   1400035b8:	je     0x1400035ce
   1400035ba:	call   QWORD PTR [rip+0x6bb8]        # 0x14000a178
   1400035c0:	mov    r8,rbx
   1400035c3:	xor    edx,edx
   1400035c5:	mov    rcx,rax
   1400035c8:	call   QWORD PTR [rip+0x6ba2]        # 0x14000a170
   1400035ce:	mov    ecx,ebp
   1400035d0:	call   QWORD PTR [rip+0x6b0a]        # 0x14000a0e0
   1400035d6:	mov    eax,edi
   1400035d8:	jmp    0x1400035e7
   1400035da:	mov    ecx,0x57
   1400035df:	call   QWORD PTR [rip+0x6afb]        # 0x14000a0e0
   1400035e5:	xor    eax,eax
   1400035e7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400035ec:	mov    rbp,QWORD PTR [rsp+0x48]
   1400035f1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400035f6:	add    rsp,0x30
   1400035fa:	pop    rdi
   1400035fb:	ret    
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	int3   
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	mov    rax,rsp
   140003607:	mov    QWORD PTR [rax+0x10],rbx
   14000360b:	mov    QWORD PTR [rax+0x18],rsi
   14000360f:	mov    QWORD PTR [rax+0x20],rdi
   140003613:	push   rbp
   140003614:	push   r12
   140003616:	push   r13
   140003618:	push   r14
   14000361a:	push   r15
   14000361c:	lea    rbp,[rax-0xffd8]
   140003623:	mov    eax,0x100b0
   140003628:	call   0x140009cd0
   14000362d:	sub    rsp,rax
   140003630:	mov    rax,QWORD PTR [rip+0xc9d1]        # 0x140010008
   140003637:	xor    rax,rsp
   14000363a:	mov    QWORD PTR [rbp+0xffa0],rax
   140003641:	xor    r12d,r12d
   140003644:	lea    rdx,[rsp+0x48]
   140003649:	mov    r14d,r12d
   14000364c:	mov    QWORD PTR [rsp+0x48],r12
   140003651:	mov    esi,r12d
   140003654:	mov    rbx,rcx
   140003657:	call   0x140003eb0
   14000365c:	mov    rdi,rax
   14000365f:	test   rax,rax
   140003662:	je     0x1400039b7
   140003668:	mov    rcx,rax
   14000366b:	call   QWORD PTR [rip+0x6a97]        # 0x14000a108
   140003671:	mov    edx,0x2000
   140003676:	mov    rcx,rdi
   140003679:	mov    r15d,eax
   14000367c:	mov    DWORD PTR [rsp+0x54],eax
   140003680:	call   QWORD PTR [rip+0x6aaa]        # 0x14000a130
   140003686:	test   eax,eax
   140003688:	je     0x14000397c
   14000368e:	mov    QWORD PTR [rsp+0x30],r12
   140003693:	lea    r8d,[r12+0x7]
   140003698:	mov    DWORD PTR [rsp+0x28],0x2200000
   1400036a0:	xor    r9d,r9d
   1400036a3:	mov    edx,0x10000
   1400036a8:	mov    DWORD PTR [rsp+0x20],0x3
   1400036b0:	mov    rcx,rdi
   1400036b3:	call   QWORD PTR [rip+0x6a57]        # 0x14000a110
   1400036b9:	mov    r12,rax
   1400036bc:	cmp    rax,0xffffffffffffffff
   1400036c0:	je     0x14000396d
   1400036c6:	xor    ebx,ebx
   1400036c8:	mov    BYTE PTR [rsp+0x40],0x1
   1400036cd:	lea    rdx,[rsp+0x68]
   1400036d2:	mov    rcx,rax
   1400036d5:	mov    r13d,ebx
   1400036d8:	call   QWORD PTR [rip+0x6a4a]        # 0x14000a128
   1400036de:	test   eax,eax
   1400036e0:	je     0x1400038b6
   1400036e6:	cmp    DWORD PTR [rbp-0x70],0x1
   1400036ea:	jbe    0x1400038b6
   1400036f0:	cmp    QWORD PTR [rip+0xd041],rbx        # 0x140010738
   1400036f7:	je     0x140003705
   1400036f9:	mov    rax,QWORD PTR [rip+0xd040]        # 0x140010740
   140003700:	test   rax,rax
   140003703:	jne    0x140003753
   140003705:	lea    rcx,[rip+0x7f94]        # 0x14000b6a0
   14000370c:	call   QWORD PTR [rip+0x6aae]        # 0x14000a1c0
   140003712:	mov    rbx,rax
   140003715:	test   rax,rax
   140003718:	je     0x14000374a
   14000371a:	lea    rdx,[rip+0x7f9f]        # 0x14000b6c0
   140003721:	mov    rcx,rax
   140003724:	call   QWORD PTR [rip+0x6a8e]        # 0x14000a1b8
   14000372a:	lea    rdx,[rip+0x7fa7]        # 0x14000b6d8
   140003731:	mov    rcx,rbx
   140003734:	mov    QWORD PTR [rip+0xcffd],rax        # 0x140010738
   14000373b:	call   QWORD PTR [rip+0x6a77]        # 0x14000a1b8
   140003741:	mov    QWORD PTR [rip+0xcff8],rax        # 0x140010740
   140003748:	jmp    0x140003751
   14000374a:	mov    rax,QWORD PTR [rip+0xcfef]        # 0x140010740
   140003751:	xor    ebx,ebx
   140003753:	cmp    QWORD PTR [rip+0xcfde],rbx        # 0x140010738
   14000375a:	je     0x1400038b6
   140003760:	test   rax,rax
   140003763:	je     0x1400038b6
   140003769:	cmp    QWORD PTR [rsp+0x48],rbx
   14000376e:	je     0x1400038b6
   140003774:	xor    edx,edx
   140003776:	lea    rcx,[rbp-0x60]
   14000377a:	mov    r8d,0x10000
   140003780:	call   0x140009c86
   140003785:	xor    r9d,r9d
   140003788:	lea    r8,[rbp-0x60]
   14000378c:	mov    edx,0x8000
   140003791:	mov    rcx,rdi
   140003794:	call   QWORD PTR [rip+0x6966]        # 0x14000a100
   14000379a:	mov    DWORD PTR [rsp+0x48],eax
   14000379e:	test   eax,eax
   1400037a0:	je     0x140003891
   1400037a6:	cmp    WORD PTR [rbp-0x60],bx
   1400037aa:	je     0x140003891
   1400037b0:	cmp    WORD PTR [rbp-0x5e],0x3a
   1400037b5:	jne    0x140003891
   1400037bb:	lea    rcx,[rbp-0x60]
   1400037bf:	call   0x1400048c0
   1400037c4:	mov    r14,rax
   1400037c7:	test   rax,rax
   1400037ca:	je     0x14000386b
   1400037d0:	mov    rbx,QWORD PTR [rip+0xcf61]        # 0x140010738
   1400037d7:	mov    rcx,rbx
   1400037da:	mov    DWORD PTR [rsp+0x48],0x7ffc
   1400037e2:	call   QWORD PTR [rip+0x6cf0]        # 0x14000a4d8
   1400037e8:	lea    r9,[rbp-0x5c]
   1400037ec:	xor    edx,edx
   1400037ee:	lea    r8,[rsp+0x48]
   1400037f3:	mov    rcx,rdi
   1400037f6:	call   rbx
   1400037f8:	mov    r15,rax
   1400037fb:	cmp    rax,0xffffffffffffffff
   1400037ff:	je     0x14000384d
   140003801:	mov    rdx,r14
   140003804:	lea    rcx,[rbp-0x60]
   140003808:	call   QWORD PTR [rip+0x6baa]        # 0x14000a3b8
   14000380e:	test   eax,eax
   140003810:	jne    0x14000383e
   140003812:	mov    rbx,QWORD PTR [rip+0xcf27]        # 0x140010740
   140003819:	mov    rcx,rbx
   14000381c:	mov    DWORD PTR [rsp+0x48],0x7ffc
   140003824:	call   QWORD PTR [rip+0x6cae]        # 0x14000a4d8
   14000382a:	lea    r8,[rbp-0x5c]
   14000382e:	mov    rcx,r15
   140003831:	lea    rdx,[rsp+0x48]
   140003836:	call   rbx
   140003838:	test   eax,eax
   14000383a:	je     0x140003844
   14000383c:	jmp    0x140003801
   14000383e:	mov    r13d,0x1
   140003844:	mov    rcx,r15
   140003847:	call   QWORD PTR [rip+0x68d3]        # 0x14000a120
   14000384d:	call   QWORD PTR [rip+0x6925]        # 0x14000a178
   140003853:	mov    r8,r14
   140003856:	xor    edx,edx
   140003858:	mov    rcx,rax
   14000385b:	call   QWORD PTR [rip+0x690f]        # 0x14000a170
   140003861:	mov    r15d,DWORD PTR [rsp+0x54]
   140003866:	mov    r14d,esi
   140003869:	jmp    0x1400038b6
   14000386b:	call   QWORD PTR [rip+0x687f]        # 0x14000a0f0
   140003871:	lea    r8,[rip+0x7e78]        # 0x14000b6f0
   140003878:	mov    edx,0x3000000
   14000387d:	mov    r9d,eax
   140003880:	lea    rcx,[rip+0xcec1]        # 0x140010748
   140003887:	call   0x140003478
   14000388c:	mov    r14d,esi
   14000388f:	jmp    0x1400038b6
   140003891:	call   QWORD PTR [rip+0x6859]        # 0x14000a0f0
   140003897:	mov    r9,rdi
   14000389a:	lea    r8,[rip+0x7eef]        # 0x14000b790
   1400038a1:	lea    rcx,[rip+0xcea0]        # 0x140010748
   1400038a8:	mov    DWORD PTR [rsp+0x20],eax
   1400038ac:	mov    edx,0x3000000
   1400038b1:	call   0x140003478
   1400038b6:	mov    r9d,0x1
   1400038bc:	mov    DWORD PTR [rsp+0x20],0xd
   1400038c4:	lea    r8,[rsp+0x40]
   1400038c9:	mov    rcx,r12
   1400038cc:	lea    rdx,[rsp+0x58]
   1400038d1:	call   QWORD PTR [rip+0x6bf1]        # 0x14000a4c8
   1400038d7:	test   eax,eax
   1400038d9:	jns    0x1400038e7
   1400038db:	mov    ecx,eax
   1400038dd:	call   QWORD PTR [rip+0x6bdd]        # 0x14000a4c0
   1400038e3:	mov    esi,eax
   1400038e5:	jmp    0x1400038ed
   1400038e7:	mov    r14d,0x1
   1400038ed:	mov    rcx,r12
   1400038f0:	call   QWORD PTR [rip+0x6862]        # 0x14000a158
   1400038f6:	test   r13d,r13d
   1400038f9:	je     0x1400039a3
   1400038ff:	xor    edx,edx
   140003901:	lea    rcx,[rbp-0x60]
   140003905:	call   0x140003eb0
   14000390a:	mov    r12d,0x4000000
   140003910:	lea    r9,[rbp-0x60]
   140003914:	mov    edx,r12d
   140003917:	lea    r8,[rip+0x7ef2]        # 0x14000b810
   14000391e:	lea    rcx,[rip+0xce23]        # 0x140010748
   140003925:	mov    rbx,rax
   140003928:	call   0x140003478
   14000392d:	mov    r9,rbx
   140003930:	lea    r8,[rip+0x7f39]        # 0x14000b870
   140003937:	mov    edx,r12d
   14000393a:	lea    rcx,[rip+0xce07]        # 0x140010748
   140003941:	call   0x140003478
   140003946:	mov    edx,r15d
   140003949:	mov    rcx,rbx
   14000394c:	call   QWORD PTR [rip+0x67de]        # 0x14000a130
   140003952:	test   rbx,rbx
   140003955:	je     0x1400039a3
   140003957:	call   QWORD PTR [rip+0x681b]        # 0x14000a178
   14000395d:	mov    r8,rbx
   140003960:	xor    edx,edx
   140003962:	mov    rcx,rax
   140003965:	call   QWORD PTR [rip+0x6805]        # 0x14000a170
   14000396b:	jmp    0x1400039a3
   14000396d:	call   QWORD PTR [rip+0x677d]        # 0x14000a0f0
   140003973:	lea    r8,[rip+0x7f66]        # 0x14000b8e0
   14000397a:	jmp    0x140003989
   14000397c:	call   QWORD PTR [rip+0x676e]        # 0x14000a0f0
   140003982:	lea    r8,[rip+0x7fb7]        # 0x14000b940
   140003989:	mov    r9,rbx
   14000398c:	mov    DWORD PTR [rsp+0x20],eax
   140003990:	mov    edx,0x3000000
   140003995:	lea    rcx,[rip+0xcdac]        # 0x140010748
   14000399c:	mov    esi,eax
   14000399e:	call   0x140003478
   1400039a3:	call   QWORD PTR [rip+0x67cf]        # 0x14000a178
   1400039a9:	mov    r8,rdi
   1400039ac:	xor    edx,edx
   1400039ae:	mov    rcx,rax
   1400039b1:	call   QWORD PTR [rip+0x67b9]        # 0x14000a170
   1400039b7:	mov    ecx,esi
   1400039b9:	call   QWORD PTR [rip+0x6721]        # 0x14000a0e0
   1400039bf:	mov    eax,r14d
   1400039c2:	mov    rcx,QWORD PTR [rbp+0xffa0]
   1400039c9:	xor    rcx,rsp
   1400039cc:	call   0x140009600
   1400039d1:	lea    r11,[rsp+0x100b0]
   1400039d9:	mov    rbx,QWORD PTR [r11+0x38]
   1400039dd:	mov    rsi,QWORD PTR [r11+0x40]
   1400039e1:	mov    rdi,QWORD PTR [r11+0x48]
   1400039e5:	mov    rsp,r11
   1400039e8:	pop    r15
   1400039ea:	pop    r14
   1400039ec:	pop    r13
   1400039ee:	pop    r12
   1400039f0:	pop    rbp
   1400039f1:	ret    
   1400039f2:	int3   
   1400039f3:	int3   
   1400039f4:	int3   
   1400039f5:	int3   
   1400039f6:	int3   
   1400039f7:	int3   
   1400039f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400039fd:	mov    QWORD PTR [rsp+0x10],rsi
   140003a02:	push   rdi
   140003a03:	sub    rsp,0x20
   140003a07:	xor    ebx,ebx
   140003a09:	mov    edi,ebx
   140003a0b:	test   rcx,rcx
   140003a0e:	je     0x140003a78
   140003a10:	cmp    bx,WORD PTR [rcx]
   140003a13:	je     0x140003a78
   140003a15:	xor    edx,edx
   140003a17:	call   0x140003eb0
   140003a1c:	mov    rsi,rax
   140003a1f:	test   rax,rax
   140003a22:	je     0x140003a74
   140003a24:	mov    rcx,rax
   140003a27:	call   QWORD PTR [rip+0x66db]        # 0x14000a108
   140003a2d:	cmp    eax,0xffffffff
   140003a30:	je     0x140003a3b
   140003a32:	test   al,0x10
   140003a34:	je     0x140003a3b
   140003a36:	lea    edi,[rbx+0x1]
   140003a39:	jmp    0x140003a58
   140003a3b:	call   QWORD PTR [rip+0x66af]        # 0x14000a0f0
   140003a41:	test   eax,eax
   140003a43:	mov    ecx,0x10b
   140003a48:	cmove  eax,ecx
   140003a4b:	mov    ecx,0x3
   140003a50:	cmp    eax,0x2
   140003a53:	cmove  eax,ecx
   140003a56:	mov    ebx,eax
   140003a58:	call   QWORD PTR [rip+0x671a]        # 0x14000a178
   140003a5e:	mov    r8,rsi
   140003a61:	xor    edx,edx
   140003a63:	mov    rcx,rax
   140003a66:	call   QWORD PTR [rip+0x6704]        # 0x14000a170
   140003a6c:	mov    ecx,ebx
   140003a6e:	call   QWORD PTR [rip+0x666c]        # 0x14000a0e0
   140003a74:	mov    eax,edi
   140003a76:	jmp    0x140003a85
   140003a78:	mov    ecx,0x57
   140003a7d:	call   QWORD PTR [rip+0x665d]        # 0x14000a0e0
   140003a83:	xor    eax,eax
   140003a85:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a8a:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a8f:	add    rsp,0x20
   140003a93:	pop    rdi
   140003a94:	ret    
   140003a95:	int3   
   140003a96:	int3   
   140003a97:	int3   
   140003a98:	int3   
   140003a99:	int3   
   140003a9a:	int3   
   140003a9b:	int3   
   140003a9c:	mov    QWORD PTR [rsp+0x8],rbx
   140003aa1:	mov    QWORD PTR [rsp+0x10],rsi
   140003aa6:	push   rdi
   140003aa7:	sub    rsp,0x20
   140003aab:	xor    ebx,ebx
   140003aad:	mov    edi,ebx
   140003aaf:	test   rcx,rcx
   140003ab2:	je     0x140003b18
   140003ab4:	cmp    bx,WORD PTR [rcx]
   140003ab7:	je     0x140003b18
   140003ab9:	xor    edx,edx
   140003abb:	call   0x140003eb0
   140003ac0:	mov    rsi,rax
   140003ac3:	test   rax,rax
   140003ac6:	je     0x140003b04
   140003ac8:	mov    rcx,rax
   140003acb:	call   QWORD PTR [rip+0x6637]        # 0x14000a108
   140003ad1:	cmp    eax,0xffffffff
   140003ad4:	je     0x140003ae6
   140003ad6:	test   al,0x10
   140003ad8:	je     0x140003adf
   140003ada:	lea    edi,[rbx+0x2]
   140003add:	jmp    0x140003aee
   140003adf:	mov    ebx,0x1
   140003ae4:	jmp    0x140003aee
   140003ae6:	call   QWORD PTR [rip+0x6604]        # 0x14000a0f0
   140003aec:	mov    edi,eax
   140003aee:	call   QWORD PTR [rip+0x6684]        # 0x14000a178
   140003af4:	mov    r8,rsi
   140003af7:	xor    edx,edx
   140003af9:	mov    rcx,rax
   140003afc:	call   QWORD PTR [rip+0x666e]        # 0x14000a170
   140003b02:	jmp    0x140003b0c
   140003b04:	call   QWORD PTR [rip+0x65e6]        # 0x14000a0f0
   140003b0a:	mov    edi,eax
   140003b0c:	mov    ecx,edi
   140003b0e:	call   QWORD PTR [rip+0x65cc]        # 0x14000a0e0
   140003b14:	mov    eax,ebx
   140003b16:	jmp    0x140003b25
   140003b18:	mov    ecx,0x57
   140003b1d:	call   QWORD PTR [rip+0x65bd]        # 0x14000a0e0
   140003b23:	xor    eax,eax
   140003b25:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b2a:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b2f:	add    rsp,0x20
   140003b33:	pop    rdi
   140003b34:	ret    
   140003b35:	int3   
   140003b36:	int3   
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140003b41:	mov    QWORD PTR [rsp+0x10],rbp
   140003b46:	mov    QWORD PTR [rsp+0x18],rsi
   140003b4b:	push   rdi
   140003b4c:	sub    rsp,0x40
   140003b50:	xor    ebx,ebx
   140003b52:	mov    edi,ebx
   140003b54:	test   rcx,rcx
   140003b57:	je     0x140003bfb
   140003b5d:	cmp    bx,WORD PTR [rcx]
   140003b60:	je     0x140003bfb
   140003b66:	xor    edx,edx
   140003b68:	call   0x140003eb0
   140003b6d:	mov    rbp,rax
   140003b70:	test   rax,rax
   140003b73:	je     0x140003be7
   140003b75:	mov    QWORD PTR [rsp+0x30],rbx
   140003b7a:	xor    r9d,r9d
   140003b7d:	mov    DWORD PTR [rsp+0x28],0x80
   140003b85:	xor    r8d,r8d
   140003b88:	mov    edx,0xc0000000
   140003b8d:	mov    DWORD PTR [rsp+0x20],0x3
   140003b95:	mov    rcx,rax
   140003b98:	call   QWORD PTR [rip+0x6572]        # 0x14000a110
   140003b9e:	mov    rsi,rax
   140003ba1:	cmp    rax,0xffffffffffffffff
   140003ba5:	je     0x140003bc9
   140003ba7:	mov    rcx,rax
   140003baa:	call   QWORD PTR [rip+0x6568]        # 0x14000a118
   140003bb0:	mov    edi,eax
   140003bb2:	test   eax,eax
   140003bb4:	jne    0x140003bbe
   140003bb6:	call   QWORD PTR [rip+0x6534]        # 0x14000a0f0
   140003bbc:	mov    ebx,eax
   140003bbe:	mov    rcx,rsi
   140003bc1:	call   QWORD PTR [rip+0x6591]        # 0x14000a158
   140003bc7:	jmp    0x140003bd1
   140003bc9:	call   QWORD PTR [rip+0x6521]        # 0x14000a0f0
   140003bcf:	mov    ebx,eax
   140003bd1:	call   QWORD PTR [rip+0x65a1]        # 0x14000a178
   140003bd7:	mov    r8,rbp
   140003bda:	xor    edx,edx
   140003bdc:	mov    rcx,rax
   140003bdf:	call   QWORD PTR [rip+0x658b]        # 0x14000a170
   140003be5:	jmp    0x140003bef
   140003be7:	call   QWORD PTR [rip+0x6503]        # 0x14000a0f0
   140003bed:	mov    ebx,eax
   140003bef:	mov    ecx,ebx
   140003bf1:	call   QWORD PTR [rip+0x64e9]        # 0x14000a0e0
   140003bf7:	mov    eax,edi
   140003bf9:	jmp    0x140003c08
   140003bfb:	mov    ecx,0x57
   140003c00:	call   QWORD PTR [rip+0x64da]        # 0x14000a0e0
   140003c06:	xor    eax,eax
   140003c08:	mov    rbx,QWORD PTR [rsp+0x50]
   140003c0d:	mov    rbp,QWORD PTR [rsp+0x58]
   140003c12:	mov    rsi,QWORD PTR [rsp+0x60]
   140003c17:	add    rsp,0x40
   140003c1b:	pop    rdi
   140003c1c:	ret    
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	int3   
   140003c21:	int3   
   140003c22:	int3   
   140003c23:	int3   
   140003c24:	mov    rax,rsp
   140003c27:	mov    QWORD PTR [rax+0x10],rbx
   140003c2b:	mov    QWORD PTR [rax+0x18],rsi
   140003c2f:	mov    QWORD PTR [rax+0x20],rdi
   140003c33:	mov    QWORD PTR [rax+0x8],rcx
   140003c37:	push   rbp
   140003c38:	push   r13
   140003c3a:	push   r14
   140003c3c:	lea    rbp,[rax-0x4f]
   140003c40:	sub    rsp,0xe0
   140003c47:	xor    ebx,ebx
   140003c49:	xor    eax,eax
   140003c4b:	mov    QWORD PTR [rbp+0x57],rbx
   140003c4f:	mov    r14,r8
   140003c52:	mov    QWORD PTR [rbp-0x59],rbx
   140003c56:	mov    esi,ebx
   140003c58:	mov    QWORD PTR [rbp-0x51],rax
   140003c5c:	mov    QWORD PTR [rbp-0x49],rax
   140003c60:	test   rdx,rdx
   140003c63:	jne    0x140003c75
   140003c65:	lea    ecx,[rbx+0x57]
   140003c68:	call   QWORD PTR [rip+0x6472]        # 0x14000a0e0
   140003c6e:	xor    eax,eax
   140003c70:	jmp    0x140003e0f
   140003c75:	test   r8,r8
   140003c78:	je     0x140003c7d
   140003c7a:	mov    DWORD PTR [r8],ebx
   140003c7d:	lea    r8,[rip+0x7914]        # 0x14000b598
   140003c84:	mov    QWORD PTR [rsp+0x20],rdx
   140003c89:	mov    r9,r8
   140003c8c:	lea    rdx,[rip+0x7d35]        # 0x14000b9c8
   140003c93:	lea    rcx,[rbp+0x57]
   140003c97:	call   0x140004b20
   140003c9c:	mov    edi,eax
   140003c9e:	test   eax,eax
   140003ca0:	js     0x140003d9e
   140003ca6:	mov    rcx,QWORD PTR [rbp+0x57]
   140003caa:	call   0x140003154
   140003caf:	mov    rsi,rax
   140003cb2:	mov    r13d,0x80070000
   140003cb8:	test   rax,rax
   140003cbb:	je     0x140003cc2
   140003cbd:	cmp    bx,WORD PTR [rax]
   140003cc0:	jne    0x140003cf1
   140003cc2:	call   QWORD PTR [rip+0x6428]        # 0x14000a0f0
   140003cc8:	mov    ecx,eax
   140003cca:	movzx  eax,ax
   140003ccd:	or     eax,r13d
   140003cd0:	test   ecx,ecx
   140003cd2:	cmovle eax,ecx
   140003cd5:	test   eax,eax
   140003cd7:	jns    0x140003cec
   140003cd9:	call   QWORD PTR [rip+0x6411]        # 0x14000a0f0
   140003cdf:	movzx  edi,ax
   140003ce2:	or     edi,r13d
   140003ce5:	test   eax,eax
   140003ce7:	cmovle edi,eax
   140003cea:	jmp    0x140003cf1
   140003cec:	mov    edi,0x80004005
   140003cf1:	test   edi,edi
   140003cf3:	js     0x140003d9e
   140003cf9:	xor    edx,edx
   140003cfb:	lea    rcx,[rbp-0x39]
   140003cff:	lea    r8d,[rdx+0x68]
   140003d03:	call   0x140009c86
   140003d08:	lea    rax,[rbp-0x59]
   140003d0c:	mov    DWORD PTR [rbp-0x39],0x68
   140003d13:	mov    QWORD PTR [rsp+0x48],rax
   140003d18:	xor    r9d,r9d
   140003d1b:	lea    rax,[rbp-0x39]
   140003d1f:	xor    r8d,r8d
   140003d22:	mov    QWORD PTR [rsp+0x40],rax
   140003d27:	mov    rdx,rsi
   140003d2a:	mov    QWORD PTR [rsp+0x38],rbx
   140003d2f:	xor    ecx,ecx
   140003d31:	mov    QWORD PTR [rsp+0x30],rbx
   140003d36:	mov    DWORD PTR [rsp+0x28],0x10
   140003d3e:	mov    DWORD PTR [rsp+0x20],ebx
   140003d42:	call   QWORD PTR [rip+0x64e0]        # 0x14000a228
   140003d48:	test   eax,eax
   140003d4a:	jne    0x140003d7b
   140003d4c:	call   QWORD PTR [rip+0x639e]        # 0x14000a0f0
   140003d52:	mov    ecx,eax
   140003d54:	movzx  eax,ax
   140003d57:	or     eax,r13d
   140003d5a:	test   ecx,ecx
   140003d5c:	cmovle eax,ecx
   140003d5f:	test   eax,eax
   140003d61:	jns    0x140003d76
   140003d63:	call   QWORD PTR [rip+0x6387]        # 0x14000a0f0
   140003d69:	movzx  edi,ax
   140003d6c:	or     edi,r13d
   140003d6f:	test   eax,eax
   140003d71:	cmovle edi,eax
   140003d74:	jmp    0x140003d7b
   140003d76:	mov    edi,0x80004005
   140003d7b:	test   edi,edi
   140003d7d:	js     0x140003d9e
   140003d7f:	test   r14,r14
   140003d82:	je     0x140003d9e
   140003d84:	mov    rcx,QWORD PTR [rbp-0x59]
   140003d88:	or     edx,0xffffffff
   140003d8b:	call   QWORD PTR [rip+0x6587]        # 0x14000a318
   140003d91:	mov    rcx,QWORD PTR [rbp-0x59]
   140003d95:	mov    rdx,r14
   140003d98:	call   QWORD PTR [rip+0x64aa]        # 0x14000a248
   140003d9e:	mov    rcx,QWORD PTR [rbp-0x51]
   140003da2:	lea    rax,[rcx-0x1]
   140003da6:	cmp    rax,0xfffffffffffffffd
   140003daa:	ja     0x140003db2
   140003dac:	call   QWORD PTR [rip+0x63a6]        # 0x14000a158
   140003db2:	mov    rcx,QWORD PTR [rbp-0x59]
   140003db6:	lea    rax,[rcx-0x1]
   140003dba:	cmp    rax,0xfffffffffffffffd
   140003dbe:	ja     0x140003dc6
   140003dc0:	call   QWORD PTR [rip+0x6392]        # 0x14000a158
   140003dc6:	cmp    QWORD PTR [rbp+0x57],rbx
   140003dca:	je     0x140003de1
   140003dcc:	call   QWORD PTR [rip+0x63a6]        # 0x14000a178
   140003dd2:	mov    r8,QWORD PTR [rbp+0x57]
   140003dd6:	xor    edx,edx
   140003dd8:	mov    rcx,rax
   140003ddb:	call   QWORD PTR [rip+0x638f]        # 0x14000a170
   140003de1:	test   rsi,rsi
   140003de4:	je     0x140003dfa
   140003de6:	call   QWORD PTR [rip+0x638c]        # 0x14000a178
   140003dec:	mov    r8,rsi
   140003def:	xor    edx,edx
   140003df1:	mov    rcx,rax
   140003df4:	call   QWORD PTR [rip+0x6376]        # 0x14000a170
   140003dfa:	movzx  ecx,di
   140003dfd:	test   edi,edi
   140003dff:	cmovns ecx,ebx
   140003e02:	call   QWORD PTR [rip+0x62d8]        # 0x14000a0e0
   140003e08:	test   edi,edi
   140003e0a:	setns  bl
   140003e0d:	mov    eax,ebx
   140003e0f:	lea    r11,[rsp+0xe0]
   140003e17:	mov    rbx,QWORD PTR [r11+0x28]
   140003e1b:	mov    rsi,QWORD PTR [r11+0x30]
   140003e1f:	mov    rdi,QWORD PTR [r11+0x38]
   140003e23:	mov    rsp,r11
   140003e26:	pop    r14
   140003e28:	pop    r13
   140003e2a:	pop    rbp
   140003e2b:	ret    
   140003e2c:	int3   
   140003e2d:	int3   
   140003e2e:	int3   
   140003e2f:	int3   
   140003e30:	int3   
   140003e31:	int3   
   140003e32:	int3   
   140003e33:	int3   
   140003e34:	mov    QWORD PTR [rsp+0x8],rbx
   140003e39:	xor    ebx,ebx
   140003e3b:	lea    rax,[rdx-0x1]
   140003e3f:	mov    r10d,0x7ffffffe
   140003e45:	mov    r9d,ebx
   140003e48:	cmp    rax,r10
   140003e4b:	mov    r11d,0x80070057
   140003e51:	cmova  r9d,r11d
   140003e55:	test   r9d,r9d
   140003e58:	js     0x140003e99
   140003e5a:	mov    r9d,ebx
   140003e5d:	test   rdx,rdx
   140003e60:	je     0x140003e8d
   140003e62:	sub    r10,rdx
   140003e65:	sub    r8,rcx
   140003e68:	lea    rax,[r10+rdx*1]
   140003e6c:	test   rax,rax
   140003e6f:	je     0x140003e88
   140003e71:	movzx  eax,WORD PTR [r8+rcx*1]
   140003e76:	test   ax,ax
   140003e79:	je     0x140003e88
   140003e7b:	mov    WORD PTR [rcx],ax
   140003e7e:	add    rcx,0x2
   140003e82:	sub    rdx,0x1
   140003e86:	jne    0x140003e68
   140003e88:	test   rdx,rdx
   140003e8b:	jne    0x140003e9e
   140003e8d:	sub    rcx,0x2
   140003e91:	mov    r9d,0x8007007a
   140003e97:	jmp    0x140003e9e
   140003e99:	test   rdx,rdx
   140003e9c:	je     0x140003ea1
   140003e9e:	mov    WORD PTR [rcx],bx
   140003ea1:	mov    rbx,QWORD PTR [rsp+0x8]
   140003ea6:	mov    eax,r9d
   140003ea9:	ret    
   140003eaa:	int3   
   140003eab:	int3   
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	mov    QWORD PTR [rsp+0x18],rbx
   140003eb5:	push   rbp
   140003eb6:	push   rsi
   140003eb7:	push   rdi
   140003eb8:	push   r12
   140003eba:	push   r13
   140003ebc:	push   r14
   140003ebe:	push   r15
   140003ec0:	mov    rbp,rsp
   140003ec3:	sub    rsp,0x50
   140003ec7:	mov    rax,QWORD PTR [rip+0xc13a]        # 0x140010008
   140003ece:	xor    rax,rsp
   140003ed1:	mov    QWORD PTR [rbp-0x8],rax
   140003ed5:	movups xmm0,XMMWORD PTR [rip+0x7afc]        # 0x14000b9d8
   140003edc:	xor    r12d,r12d
   140003edf:	movabs rax,0x3f005c005c
   140003ee9:	mov    QWORD PTR [rbp-0x30],r12
   140003eed:	mov    rsi,rdx
   140003ef0:	mov    QWORD PTR [rbp-0x20],rax
   140003ef4:	mov    r15,rcx
   140003ef7:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140003efc:	test   rcx,rcx
   140003eff:	je     0x1400040c0
   140003f05:	cmp    r12w,WORD PTR [rcx]
   140003f09:	je     0x1400040c0
   140003f0f:	test   rdx,rdx
   140003f12:	je     0x140003f17
   140003f14:	mov    QWORD PTR [rdx],r12
   140003f17:	call   0x140004348
   140003f1c:	mov    r14,rax
   140003f1f:	mov    r13d,0x80070000
   140003f25:	test   rax,rax
   140003f28:	jne    0x140003f5b
   140003f2a:	call   QWORD PTR [rip+0x61c0]        # 0x14000a0f0
   140003f30:	movzx  ecx,ax
   140003f33:	or     ecx,r13d
   140003f36:	test   eax,eax
   140003f38:	cmovle ecx,eax
   140003f3b:	test   ecx,ecx
   140003f3d:	jns    0x140003f52
   140003f3f:	call   QWORD PTR [rip+0x61ab]        # 0x14000a0f0
   140003f45:	movzx  ebx,ax
   140003f48:	or     ebx,r13d
   140003f4b:	test   eax,eax
   140003f4d:	cmovle ebx,eax
   140003f50:	jmp    0x140003f57
   140003f52:	mov    ebx,0x80004005
   140003f57:	test   ebx,ebx
   140003f59:	js     0x140003fd8
   140003f5b:	or     rax,0xffffffffffffffff
   140003f5f:	inc    rax
   140003f62:	cmp    WORD PTR [r14+rax*2],r12w
   140003f67:	jne    0x140003f5f
   140003f69:	cmp    rax,0x104
   140003f6f:	jb     0x140004065
   140003f75:	mov    r8d,0x3
   140003f7b:	lea    rdx,[rbp-0x20]
   140003f7f:	mov    rcx,r14
   140003f82:	call   QWORD PTR [rip+0x6450]        # 0x14000a3d8
   140003f88:	test   eax,eax
   140003f8a:	je     0x140004065
   140003f90:	mov    r8d,0x7
   140003f96:	lea    rdx,[rbp-0x18]
   140003f9a:	mov    rcx,r14
   140003f9d:	call   QWORD PTR [rip+0x6435]        # 0x14000a3d8
   140003fa3:	test   eax,eax
   140003fa5:	je     0x140004065
   140003fab:	xor    r8d,r8d
   140003fae:	mov    DWORD PTR [rbp-0x28],r12d
   140003fb2:	lea    rdx,[rbp-0x28]
   140003fb6:	mov    rcx,r14
   140003fb9:	call   0x1400043f8
   140003fbe:	mov    ebx,eax
   140003fc0:	test   eax,eax
   140003fc2:	js     0x140003fd8
   140003fc4:	cmp    DWORD PTR [rbp-0x28],0x1
   140003fc8:	lea    rax,[rbp-0x30]
   140003fcc:	jne    0x14000402e
   140003fce:	test   rax,rax
   140003fd1:	jne    0x140004005
   140003fd3:	mov    ebx,0x80070057
   140003fd8:	mov    rdi,r12
   140003fdb:	test   r14,r14
   140003fde:	je     0x140003ff4
   140003fe0:	call   QWORD PTR [rip+0x6192]        # 0x14000a178
   140003fe6:	mov    r8,r14
   140003fe9:	xor    edx,edx
   140003feb:	mov    rcx,rax
   140003fee:	call   QWORD PTR [rip+0x617c]        # 0x14000a170
   140003ff4:	movzx  ecx,bx
   140003ff7:	call   QWORD PTR [rip+0x60e3]        # 0x14000a0e0
   140003ffd:	mov    rax,rdi
   140004000:	jmp    0x1400040cd
   140004005:	lea    rdx,[r14+0x2]
   140004009:	lea    r8,[rbp-0x30]
   14000400d:	lea    rcx,[rbp-0x18]
   140004011:	call   0x1400042ec
   140004016:	mov    ebx,eax
   140004018:	test   eax,eax
   14000401a:	js     0x140003fd8
   14000401c:	test   rsi,rsi
   14000401f:	je     0x140004058
   140004021:	mov    rdi,QWORD PTR [rbp-0x30]
   140004025:	lea    rax,[rdi+0x10]
   140004029:	mov    QWORD PTR [rsi],rax
   14000402c:	jmp    0x14000405c
   14000402e:	test   rax,rax
   140004031:	je     0x140003fd3
   140004033:	lea    r8,[rbp-0x30]
   140004037:	mov    rdx,r14
   14000403a:	lea    rcx,[rbp-0x20]
   14000403e:	call   0x1400042ec
   140004043:	mov    ebx,eax
   140004045:	test   eax,eax
   140004047:	js     0x140003fd8
   140004049:	test   rsi,rsi
   14000404c:	je     0x140004058
   14000404e:	mov    rdi,QWORD PTR [rbp-0x30]
   140004052:	lea    rax,[rdi+0x8]
   140004056:	jmp    0x140004029
   140004058:	mov    rdi,QWORD PTR [rbp-0x30]
   14000405c:	test   rdi,rdi
   14000405f:	jne    0x140003fdb
   140004065:	mov    rcx,r15
   140004068:	call   0x1400048c0
   14000406d:	mov    rdi,rax
   140004070:	test   rax,rax
   140004073:	je     0x14000407a
   140004075:	mov    ebx,r12d
   140004078:	jmp    0x1400040af
   14000407a:	call   QWORD PTR [rip+0x6070]        # 0x14000a0f0
   140004080:	movzx  ecx,ax
   140004083:	or     ecx,r13d
   140004086:	test   eax,eax
   140004088:	cmovle ecx,eax
   14000408b:	test   ecx,ecx
   14000408d:	jns    0x1400040a2
   14000408f:	call   QWORD PTR [rip+0x605b]        # 0x14000a0f0
   140004095:	movzx  ebx,ax
   140004098:	or     ebx,r13d
   14000409b:	test   eax,eax
   14000409d:	cmovle ebx,eax
   1400040a0:	jmp    0x1400040a7
   1400040a2:	mov    ebx,0x80004005
   1400040a7:	test   ebx,ebx
   1400040a9:	js     0x140003fd8
   1400040af:	test   rsi,rsi
   1400040b2:	je     0x140003fdb
   1400040b8:	mov    QWORD PTR [rsi],rdi
   1400040bb:	jmp    0x140003fdb
   1400040c0:	mov    ecx,0x57
   1400040c5:	call   QWORD PTR [rip+0x6015]        # 0x14000a0e0
   1400040cb:	xor    eax,eax
   1400040cd:	mov    rcx,QWORD PTR [rbp-0x8]
   1400040d1:	xor    rcx,rsp
   1400040d4:	call   0x140009600
   1400040d9:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400040e1:	add    rsp,0x50
   1400040e5:	pop    r15
   1400040e7:	pop    r14
   1400040e9:	pop    r13
   1400040eb:	pop    r12
   1400040ed:	pop    rdi
   1400040ee:	pop    rsi
   1400040ef:	pop    rbp
   1400040f0:	ret    
   1400040f1:	int3   
   1400040f2:	int3   
   1400040f3:	int3   
   1400040f4:	int3   
   1400040f5:	int3   
   1400040f6:	int3   
   1400040f7:	int3   
   1400040f8:	rex push rbx
   1400040fa:	push   rbp
   1400040fb:	push   rsi
   1400040fc:	push   rdi
   1400040fd:	push   r12
   1400040ff:	push   r14
   140004101:	push   r15
   140004103:	sub    rsp,0x30
   140004107:	xor    ebx,ebx
   140004109:	mov    r14,rcx
   14000410c:	mov    QWORD PTR [rsp+0x78],rbx
   140004111:	mov    ebp,ebx
   140004113:	lea    r12d,[rbx+0x1]
   140004117:	test   rcx,rcx
   14000411a:	je     0x1400042ca
   140004120:	cmp    bx,WORD PTR [rcx]
   140004123:	je     0x1400042ca
   140004129:	lea    rdx,[rsp+0x78]
   14000412e:	call   0x140003eb0
   140004133:	mov    rsi,rax
   140004136:	test   rax,rax
   140004139:	je     0x1400042b6
   14000413f:	lea    r8,[rsp+0x80]
   140004147:	mov    QWORD PTR [rsp+0x80],rbx
   14000414f:	lea    rdx,[rsp+0x70]
   140004154:	mov    DWORD PTR [rsp+0x70],ebx
   140004158:	mov    rcx,rax
   14000415b:	call   0x1400043f8
   140004160:	lea    r15d,[rbx+0x5c]
   140004164:	test   eax,eax
   140004166:	js     0x14000422a
   14000416c:	cmp    DWORD PTR [rsp+0x70],r12d
   140004171:	jne    0x1400041f7
   140004177:	mov    r15,QWORD PTR [rsp+0x80]
   14000417f:	or     rcx,0xffffffffffffffff
   140004183:	inc    rcx
   140004186:	cmp    WORD PTR [r15+rcx*2],bx
   14000418b:	jne    0x140004183
   14000418d:	mov    rax,QWORD PTR [rsp+0x78]
   140004192:	lea    rdi,[rax+rcx*2]
   140004196:	test   r15,r15
   140004199:	je     0x1400041af
   14000419b:	call   QWORD PTR [rip+0x5fd7]        # 0x14000a178
   1400041a1:	mov    r8,r15
   1400041a4:	xor    edx,edx
   1400041a6:	mov    rcx,rax
   1400041a9:	call   QWORD PTR [rip+0x5fc1]        # 0x14000a170
   1400041af:	mov    r15d,0x5c
   1400041b5:	cmp    r12d,0x1
   1400041b9:	jne    0x140004279
   1400041bf:	mov    edx,r15d
   1400041c2:	mov    rcx,rdi
   1400041c5:	call   QWORD PTR [rip+0x61e5]        # 0x14000a3b0
   1400041cb:	mov    rdi,rax
   1400041ce:	test   rax,rax
   1400041d1:	je     0x140004240
   1400041d3:	mov    rcx,rsi
   1400041d6:	mov    WORD PTR [rax],bx
   1400041d9:	call   0x1400039f8
   1400041de:	test   eax,eax
   1400041e0:	jne    0x1400041ed
   1400041e2:	xor    edx,edx
   1400041e4:	mov    rcx,rsi
   1400041e7:	call   QWORD PTR [rip+0x5f4b]        # 0x14000a138
   1400041ed:	mov    WORD PTR [rdi],r15w
   1400041f1:	add    rdi,0x2
   1400041f5:	jmp    0x1400041bf
   1400041f7:	mov    rdi,QWORD PTR [rsp+0x78]
   1400041fc:	movzx  ecx,WORD PTR [rdi]
   1400041ff:	lea    eax,[rcx-0x41]
   140004202:	cmp    ax,0x19
   140004206:	jbe    0x140004212
   140004208:	sub    cx,0x61
   14000420c:	cmp    cx,0x19
   140004210:	ja     0x1400041b5
   140004212:	mov    eax,0x3a
   140004217:	cmp    ax,WORD PTR [rdi+0x2]
   14000421b:	jne    0x1400041b5
   14000421d:	cmp    r15w,WORD PTR [rdi+0x4]
   140004222:	jne    0x1400041b5
   140004224:	add    rdi,0x8
   140004228:	jmp    0x1400041b5
   14000422a:	movzx  ecx,ax
   14000422d:	mov    r12d,ebx
   140004230:	call   QWORD PTR [rip+0x5eaa]        # 0x14000a0e0
   140004236:	mov    rdi,QWORD PTR [rsp+0x78]
   14000423b:	jmp    0x1400041b5
   140004240:	cmp    r12d,0x1
   140004244:	jne    0x140004279
   140004246:	mov    rcx,rsi
   140004249:	call   0x1400039f8
   14000424e:	cmp    eax,r12d
   140004251:	je     0x140004272
   140004253:	xor    edx,edx
   140004255:	mov    rcx,rsi
   140004258:	call   QWORD PTR [rip+0x5eda]        # 0x14000a138
   14000425e:	cmp    eax,r12d
   140004261:	je     0x140004272
   140004263:	call   QWORD PTR [rip+0x5e87]        # 0x14000a0f0
   140004269:	lea    r8,[rip+0x7780]        # 0x14000b9f0
   140004270:	jmp    0x140004286
   140004272:	mov    ebx,0x1
   140004277:	jmp    0x1400042a0
   140004279:	call   QWORD PTR [rip+0x5e71]        # 0x14000a0f0
   14000427f:	lea    r8,[rip+0x77ca]        # 0x14000ba50
   140004286:	mov    r9,r14
   140004289:	mov    DWORD PTR [rsp+0x20],eax
   14000428d:	mov    edx,0x3000000
   140004292:	lea    rcx,[rip+0xc4af]        # 0x140010748
   140004299:	mov    ebp,eax
   14000429b:	call   0x140003478
   1400042a0:	call   QWORD PTR [rip+0x5ed2]        # 0x14000a178
   1400042a6:	mov    r8,rsi
   1400042a9:	xor    edx,edx
   1400042ab:	mov    rcx,rax
   1400042ae:	call   QWORD PTR [rip+0x5ebc]        # 0x14000a170
   1400042b4:	jmp    0x1400042be
   1400042b6:	call   QWORD PTR [rip+0x5e34]        # 0x14000a0f0
   1400042bc:	mov    ebp,eax
   1400042be:	mov    ecx,ebp
   1400042c0:	call   QWORD PTR [rip+0x5e1a]        # 0x14000a0e0
   1400042c6:	mov    eax,ebx
   1400042c8:	jmp    0x1400042d7
   1400042ca:	mov    ecx,0x57
   1400042cf:	call   QWORD PTR [rip+0x5e0b]        # 0x14000a0e0
   1400042d5:	xor    eax,eax
   1400042d7:	add    rsp,0x30
   1400042db:	pop    r15
   1400042dd:	pop    r14
   1400042df:	pop    r12
   1400042e1:	pop    rdi
   1400042e2:	pop    rsi
   1400042e3:	pop    rbp
   1400042e4:	pop    rbx
   1400042e5:	ret    
   1400042e6:	int3   
   1400042e7:	int3   
   1400042e8:	int3   
   1400042e9:	int3   
   1400042ea:	int3   
   1400042eb:	int3   
   1400042ec:	rex push rbx
   1400042ee:	sub    rsp,0x20
   1400042f2:	mov    rbx,r8
   1400042f5:	call   0x140004c74
   1400042fa:	mov    QWORD PTR [rbx],rax
   1400042fd:	xor    ebx,ebx
   1400042ff:	test   rax,rax
   140004302:	jne    0x140004337
   140004304:	call   QWORD PTR [rip+0x5de6]        # 0x14000a0f0
   14000430a:	movzx  ecx,ax
   14000430d:	or     ecx,0x80070000
   140004313:	test   eax,eax
   140004315:	cmovle ecx,eax
   140004318:	test   ecx,ecx
   14000431a:	jns    0x140004332
   14000431c:	call   QWORD PTR [rip+0x5dce]        # 0x14000a0f0
   140004322:	movzx  ebx,ax
   140004325:	or     ebx,0x80070000
   14000432b:	test   eax,eax
   14000432d:	cmovle ebx,eax
   140004330:	jmp    0x140004337
   140004332:	mov    ebx,0x80004005
   140004337:	mov    eax,ebx
   140004339:	add    rsp,0x20
   14000433d:	pop    rbx
   14000433e:	ret    
   14000433f:	int3   
   140004340:	int3   
   140004341:	int3   
   140004342:	int3   
   140004343:	int3   
   140004344:	int3   
   140004345:	int3   
   140004346:	int3   
   140004347:	int3   
   140004348:	mov    QWORD PTR [rsp+0x8],rbx
   14000434d:	mov    QWORD PTR [rsp+0x10],rbp
   140004352:	mov    QWORD PTR [rsp+0x18],rsi
   140004357:	push   rdi
   140004358:	sub    rsp,0x20
   14000435c:	xor    edi,edi
   14000435e:	mov    rsi,rcx
   140004361:	mov    ebx,edi
   140004363:	test   rcx,rcx
   140004366:	je     0x1400043cd
   140004368:	cmp    di,WORD PTR [rcx]
   14000436b:	je     0x1400043cd
   14000436d:	xor    r9d,r9d
   140004370:	xor    r8d,r8d
   140004373:	xor    edx,edx
   140004375:	call   QWORD PTR [rip+0x5d85]        # 0x14000a100
   14000437b:	mov    ebp,eax
   14000437d:	test   eax,eax
   14000437f:	je     0x1400043b8
   140004381:	mov    ebx,ebp
   140004383:	add    rbx,rbx
   140004386:	call   QWORD PTR [rip+0x5dec]        # 0x14000a178
   14000438c:	mov    r8,rbx
   14000438f:	lea    edx,[rdi+0x8]
   140004392:	mov    rcx,rax
   140004395:	call   QWORD PTR [rip+0x5dcd]        # 0x14000a168
   14000439b:	mov    rbx,rax
   14000439e:	test   rax,rax
   1400043a1:	je     0x1400043c0
   1400043a3:	xor    r9d,r9d
   1400043a6:	mov    r8,rax
   1400043a9:	mov    edx,ebp
   1400043ab:	mov    rcx,rsi
   1400043ae:	call   QWORD PTR [rip+0x5d4c]        # 0x14000a100
   1400043b4:	test   eax,eax
   1400043b6:	jne    0x1400043c0
   1400043b8:	call   QWORD PTR [rip+0x5d32]        # 0x14000a0f0
   1400043be:	mov    edi,eax
   1400043c0:	mov    ecx,edi
   1400043c2:	call   QWORD PTR [rip+0x5d18]        # 0x14000a0e0
   1400043c8:	mov    rax,rbx
   1400043cb:	jmp    0x1400043da
   1400043cd:	mov    ecx,0x57
   1400043d2:	call   QWORD PTR [rip+0x5d08]        # 0x14000a0e0
   1400043d8:	xor    eax,eax
   1400043da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043df:	mov    rbp,QWORD PTR [rsp+0x38]
   1400043e4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400043e9:	add    rsp,0x20
   1400043ed:	pop    rdi
   1400043ee:	ret    
   1400043ef:	int3   
   1400043f0:	int3   
   1400043f1:	int3   
   1400043f2:	int3   
   1400043f3:	int3   
   1400043f4:	int3   
   1400043f5:	int3   
   1400043f6:	int3   
   1400043f7:	int3   
   1400043f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400043fd:	mov    QWORD PTR [rsp+0x18],rbp
   140004402:	mov    QWORD PTR [rsp+0x20],rsi
   140004407:	push   rdi
   140004408:	push   r14
   14000440a:	push   r15
   14000440c:	sub    rsp,0x20
   140004410:	xor    r15d,r15d
   140004413:	mov    rdi,r8
   140004416:	mov    r14,rdx
   140004419:	mov    rbx,rcx
   14000441c:	test   rcx,rcx
   14000441f:	jne    0x14000442b
   140004421:	mov    ebx,0x80070057
   140004426:	jmp    0x1400044fd
   14000442b:	lea    rdx,[rip+0x76a6]        # 0x14000bad8
   140004432:	call   0x140004ab0
   140004437:	test   eax,eax
   140004439:	je     0x1400044ea
   14000443f:	mov    edx,0x5c
   140004444:	lea    rcx,[rbx+0x4]
   140004448:	call   QWORD PTR [rip+0x5f62]        # 0x14000a3b0
   14000444e:	test   rax,rax
   140004451:	jne    0x14000445d
   140004453:	mov    ebx,0x8007000d
   140004458:	jmp    0x1400044fd
   14000445d:	mov    rsi,r15
   140004460:	mov    QWORD PTR [rsp+0x40],r15
   140004465:	or     rbp,0xffffffffffffffff
   140004469:	inc    rbp
   14000446c:	cmp    WORD PTR [rbx+rbp*2],r15w
   140004471:	jne    0x140004469
   140004473:	mov    edx,0x5c
   140004478:	lea    rcx,[rax+0x2]
   14000447c:	call   QWORD PTR [rip+0x5f2e]        # 0x14000a3b0
   140004482:	test   rax,rax
   140004485:	jne    0x14000448b
   140004487:	mov    eax,ebp
   140004489:	jmp    0x140004491
   14000448b:	sub    rax,rbx
   14000448e:	sar    rax,1
   140004491:	test   rdi,rdi
   140004494:	je     0x1400044b1
   140004496:	lea    r9,[rsp+0x40]
   14000449b:	mov    r8,rax
   14000449e:	xor    edx,edx
   1400044a0:	mov    rcx,rbx
   1400044a3:	call   0x140004984
   1400044a8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400044ad:	mov    ebx,eax
   1400044af:	jmp    0x1400044b4
   1400044b1:	mov    ebx,r15d
   1400044b4:	test   ebx,ebx
   1400044b6:	js     0x1400044cf
   1400044b8:	test   rdi,rdi
   1400044bb:	je     0x1400044c3
   1400044bd:	mov    QWORD PTR [rdi],rsi
   1400044c0:	mov    rsi,r15
   1400044c3:	test   r14,r14
   1400044c6:	je     0x1400044cf
   1400044c8:	mov    DWORD PTR [r14],0x1
   1400044cf:	test   rsi,rsi
   1400044d2:	je     0x1400044fd
   1400044d4:	call   QWORD PTR [rip+0x5c9e]        # 0x14000a178
   1400044da:	mov    r8,rsi
   1400044dd:	xor    edx,edx
   1400044df:	mov    rcx,rax
   1400044e2:	call   QWORD PTR [rip+0x5c88]        # 0x14000a170
   1400044e8:	jmp    0x1400044fd
   1400044ea:	mov    ebx,r15d
   1400044ed:	test   r14,r14
   1400044f0:	je     0x1400044f5
   1400044f2:	mov    DWORD PTR [r14],r15d
   1400044f5:	test   rdi,rdi
   1400044f8:	je     0x1400044fd
   1400044fa:	mov    QWORD PTR [rdi],r15
   1400044fd:	mov    rbp,QWORD PTR [rsp+0x50]
   140004502:	mov    eax,ebx
   140004504:	mov    rbx,QWORD PTR [rsp+0x48]
   140004509:	mov    rsi,QWORD PTR [rsp+0x58]
   14000450e:	add    rsp,0x20
   140004512:	pop    r15
   140004514:	pop    r14
   140004516:	pop    rdi
   140004517:	ret    
   140004518:	int3   
   140004519:	int3   
   14000451a:	int3   
   14000451b:	int3   
   14000451c:	int3   
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	mov    r11,rsp
   140004523:	mov    QWORD PTR [r11+0x10],rbx
   140004527:	mov    QWORD PTR [r11+0x18],rbp
   14000452b:	push   rsi
   14000452c:	push   rdi
   14000452d:	push   r14
   14000452f:	sub    rsp,0x60
   140004533:	xor    ebx,ebx
   140004535:	mov    ebp,r9d
   140004538:	mov    r14,r8
   14000453b:	test   rcx,rcx
   14000453e:	je     0x1400045f7
   140004544:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000454c:	test   rsi,rsi
   14000454f:	je     0x1400045f7
   140004555:	xor    r8d,r8d
   140004558:	test   rdx,rdx
   14000455b:	je     0x1400045cb
   14000455d:	lea    rax,[r11+0x8]
   140004561:	mov    QWORD PTR [r11-0x28],rbx
   140004565:	mov    QWORD PTR [r11-0x38],rax
   140004569:	lea    r9,[rip+0x7028]        # 0x14000b598
   140004570:	lea    rax,[r11-0x28]
   140004574:	mov    DWORD PTR [r11+0x8],ebx
   140004578:	mov    QWORD PTR [r11-0x40],rax
   14000457c:	mov    QWORD PTR [r11-0x48],rbx
   140004580:	mov    DWORD PTR [rsp+0x28],0x20006
   140004588:	mov    DWORD PTR [rsp+0x20],ebx
   14000458c:	call   QWORD PTR [rip+0x5cee]        # 0x14000a280
   140004592:	mov    edi,eax
   140004594:	test   eax,eax
   140004596:	jne    0x1400045e6
   140004598:	mov    eax,DWORD PTR [rsp+0xa8]
   14000459f:	mov    r9d,ebp
   1400045a2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400045a7:	xor    r8d,r8d
   1400045aa:	mov    DWORD PTR [rsp+0x28],eax
   1400045ae:	mov    rdx,r14
   1400045b1:	mov    QWORD PTR [rsp+0x20],rsi
   1400045b6:	call   QWORD PTR [rip+0x5cec]        # 0x14000a2a8
   1400045bc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400045c1:	mov    edi,eax
   1400045c3:	call   QWORD PTR [rip+0x5cd7]        # 0x14000a2a0
   1400045c9:	jmp    0x1400045e6
   1400045cb:	mov    eax,DWORD PTR [rsp+0xa8]
   1400045d2:	mov    rdx,r14
   1400045d5:	mov    DWORD PTR [rsp+0x28],eax
   1400045d9:	mov    QWORD PTR [rsp+0x20],rsi
   1400045de:	call   QWORD PTR [rip+0x5cc4]        # 0x14000a2a8
   1400045e4:	mov    edi,eax
   1400045e6:	mov    ecx,edi
   1400045e8:	call   QWORD PTR [rip+0x5af2]        # 0x14000a0e0
   1400045ee:	test   edi,edi
   1400045f0:	sete   bl
   1400045f3:	mov    eax,ebx
   1400045f5:	jmp    0x140004604
   1400045f7:	mov    ecx,0x57
   1400045fc:	call   QWORD PTR [rip+0x5ade]        # 0x14000a0e0
   140004602:	xor    eax,eax
   140004604:	lea    r11,[rsp+0x60]
   140004609:	mov    rbx,QWORD PTR [r11+0x28]
   14000460d:	mov    rbp,QWORD PTR [r11+0x30]
   140004611:	mov    rsp,r11
   140004614:	pop    r14
   140004616:	pop    rdi
   140004617:	pop    rsi
   140004618:	ret    
   140004619:	int3   
   14000461a:	int3   
   14000461b:	int3   
   14000461c:	int3   
   14000461d:	int3   
   14000461e:	int3   
   14000461f:	int3   
   140004620:	mov    r11,rsp
   140004623:	mov    QWORD PTR [r11+0x8],rbx
   140004627:	mov    QWORD PTR [r11+0x18],rsi
   14000462b:	push   rdi
   14000462c:	sub    rsp,0x30
   140004630:	xor    ebx,ebx
   140004632:	mov    rsi,r8
   140004635:	mov    QWORD PTR [r11+0x10],rbx
   140004639:	mov    rdi,rdx
   14000463c:	test   rdx,rdx
   14000463f:	je     0x140004668
   140004641:	lea    rax,[r11+0x10]
   140004645:	mov    r9d,0x20019
   14000464b:	xor    r8d,r8d
   14000464e:	mov    QWORD PTR [r11-0x18],rax
   140004652:	call   QWORD PTR [rip+0x5c20]        # 0x14000a278
   140004658:	test   eax,eax
   14000465a:	jne    0x1400046ac
   14000465c:	mov    rcx,QWORD PTR [rsp+0x48]
   140004661:	test   rcx,rcx
   140004664:	jne    0x14000466d
   140004666:	jmp    0x1400046ac
   140004668:	mov    QWORD PTR [rsp+0x48],rcx
   14000466d:	test   rsi,rsi
   140004670:	je     0x14000469a
   140004672:	mov    QWORD PTR [rsp+0x28],rbx
   140004677:	xor    r9d,r9d
   14000467a:	xor    r8d,r8d
   14000467d:	mov    QWORD PTR [rsp+0x20],rbx
   140004682:	mov    rdx,rsi
   140004685:	call   QWORD PTR [rip+0x5bfd]        # 0x14000a288
   14000468b:	mov    rcx,QWORD PTR [rsp+0x48]
   140004690:	mov    esi,ebx
   140004692:	test   eax,eax
   140004694:	sete   sil
   140004698:	jmp    0x14000469f
   14000469a:	mov    esi,0x1
   14000469f:	test   rdi,rdi
   1400046a2:	je     0x1400046aa
   1400046a4:	call   QWORD PTR [rip+0x5bf6]        # 0x14000a2a0
   1400046aa:	mov    ebx,esi
   1400046ac:	xor    ecx,ecx
   1400046ae:	call   QWORD PTR [rip+0x5a2c]        # 0x14000a0e0
   1400046b4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400046b9:	mov    eax,ebx
   1400046bb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400046c0:	add    rsp,0x30
   1400046c4:	pop    rdi
   1400046c5:	ret    
   1400046c6:	int3   
   1400046c7:	int3   
   1400046c8:	int3   
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400046d1:	mov    QWORD PTR [rsp+0x18],rdi
   1400046d6:	push   rbp
   1400046d7:	mov    rbp,rsp
   1400046da:	sub    rsp,0x40
   1400046de:	and    QWORD PTR [rbp-0x8],0x0
   1400046e3:	mov    rdi,r8
   1400046e6:	and    DWORD PTR [rbp+0x10],0x0
   1400046ea:	mov    rbx,rdx
   1400046ed:	and    DWORD PTR [rbp-0x10],0x0
   1400046f1:	mov    DWORD PTR [rbp+0x28],0x4
   1400046f8:	test   rcx,rcx
   1400046fb:	jne    0x14000470f
   1400046fd:	mov    ecx,0x57
   140004702:	call   QWORD PTR [rip+0x59d8]        # 0x14000a0e0
   140004708:	xor    eax,eax
   14000470a:	jmp    0x140004790
   14000470f:	test   rdx,rdx
   140004712:	je     0x14000473d
   140004714:	lea    rax,[rbp-0x8]
   140004718:	mov    r9d,0x20019
   14000471e:	xor    r8d,r8d
   140004721:	mov    QWORD PTR [rsp+0x20],rax
   140004726:	call   QWORD PTR [rip+0x5b4c]        # 0x14000a278
   14000472c:	test   eax,eax
   14000472e:	jne    0x140004739
   140004730:	mov    rcx,QWORD PTR [rbp-0x8]
   140004734:	test   rcx,rcx
   140004737:	jne    0x140004741
   140004739:	mov    ecx,eax
   14000473b:	jmp    0x140004702
   14000473d:	mov    QWORD PTR [rbp-0x8],rcx
   140004741:	lea    rax,[rbp+0x28]
   140004745:	xor    r8d,r8d
   140004748:	mov    QWORD PTR [rsp+0x28],rax
   14000474d:	lea    r9,[rbp-0x10]
   140004751:	lea    rax,[rbp+0x10]
   140004755:	mov    rdx,rdi
   140004758:	mov    QWORD PTR [rsp+0x20],rax
   14000475d:	call   QWORD PTR [rip+0x5b25]        # 0x14000a288
   140004763:	mov    edi,eax
   140004765:	test   eax,eax
   140004767:	jne    0x140004772
   140004769:	cmp    DWORD PTR [rbp+0x28],0x4
   14000476d:	je     0x140004776
   14000476f:	lea    edi,[rax+0xd]
   140004772:	and    DWORD PTR [rbp+0x10],0x0
   140004776:	test   rbx,rbx
   140004779:	je     0x140004785
   14000477b:	mov    rcx,QWORD PTR [rbp-0x8]
   14000477f:	call   QWORD PTR [rip+0x5b1b]        # 0x14000a2a0
   140004785:	mov    ecx,edi
   140004787:	call   QWORD PTR [rip+0x5953]        # 0x14000a0e0
   14000478d:	mov    eax,DWORD PTR [rbp+0x10]
   140004790:	mov    rbx,QWORD PTR [rsp+0x58]
   140004795:	mov    rdi,QWORD PTR [rsp+0x60]
   14000479a:	add    rsp,0x40
   14000479e:	pop    rbp
   14000479f:	ret    
   1400047a0:	int3   
   1400047a1:	int3   
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	sub    rsp,0x38
   1400047ac:	xor    r10d,r10d
   1400047af:	test   r9,r9
   1400047b2:	jne    0x1400047c2
   1400047b4:	lea    ecx,[r10+0x57]
   1400047b8:	call   QWORD PTR [rip+0x5922]        # 0x14000a0e0
   1400047be:	xor    eax,eax
   1400047c0:	jmp    0x1400047eb
   1400047c2:	or     rax,0xffffffffffffffff
   1400047c6:	inc    rax
   1400047c9:	cmp    WORD PTR [r9+rax*2],r10w
   1400047ce:	jne    0x1400047c6
   1400047d0:	lea    eax,[rax*2+0x2]
   1400047d7:	mov    DWORD PTR [rsp+0x28],eax
   1400047db:	mov    QWORD PTR [rsp+0x20],r9
   1400047e0:	mov    r9d,0x1
   1400047e6:	call   0x140004520
   1400047eb:	add    rsp,0x38
   1400047ef:	ret    
   1400047f0:	int3   
   1400047f1:	int3   
   1400047f2:	int3   
   1400047f3:	int3   
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	mov    r11,rsp
   1400047fb:	mov    QWORD PTR [r11+0x10],rbx
   1400047ff:	mov    QWORD PTR [r11+0x18],rbp
   140004803:	mov    QWORD PTR [r11+0x20],rsi
   140004807:	mov    QWORD PTR [r11+0x8],rcx
   14000480b:	push   rdi
   14000480c:	sub    rsp,0x30
   140004810:	xor    ebx,ebx
   140004812:	mov    ebp,r8d
   140004815:	mov    QWORD PTR [r11+0x8],rbx
   140004819:	mov    rsi,rdx
   14000481c:	test   rdx,rdx
   14000481f:	je     0x140004897
   140004821:	cmp    bx,WORD PTR [rdx]
   140004824:	je     0x140004897
   140004826:	mov    r9d,r8d
   140004829:	lea    rax,[r11+0x8]
   14000482d:	bts    r9d,0x19
   140004832:	mov    QWORD PTR [r11-0x18],rax
   140004836:	xor    r8d,r8d
   140004839:	mov    rcx,0xffffffff80000002
   140004840:	call   QWORD PTR [rip+0x5a32]        # 0x14000a278
   140004846:	mov    edi,eax
   140004848:	test   eax,eax
   14000484a:	jne    0x140004886
   14000484c:	mov    rcx,QWORD PTR [rsp+0x40]
   140004851:	xor    edx,edx
   140004853:	call   QWORD PTR [rip+0x5a3f]        # 0x14000a298
   140004859:	mov    rcx,QWORD PTR [rsp+0x40]
   14000485e:	mov    edi,eax
   140004860:	call   QWORD PTR [rip+0x5a3a]        # 0x14000a2a0
   140004866:	test   edi,edi
   140004868:	jne    0x140004886
   14000486a:	test   eax,eax
   14000486c:	jne    0x140004884
   14000486e:	xor    r9d,r9d
   140004871:	mov    r8d,ebp
   140004874:	mov    rdx,rsi
   140004877:	mov    rcx,0xffffffff80000002
   14000487e:	call   QWORD PTR [rip+0x59ec]        # 0x14000a270
   140004884:	mov    edi,eax
   140004886:	mov    ecx,edi
   140004888:	call   QWORD PTR [rip+0x5852]        # 0x14000a0e0
   14000488e:	test   edi,edi
   140004890:	sete   bl
   140004893:	mov    eax,ebx
   140004895:	jmp    0x1400048a4
   140004897:	mov    ecx,0x57
   14000489c:	call   QWORD PTR [rip+0x583e]        # 0x14000a0e0
   1400048a2:	xor    eax,eax
   1400048a4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400048a9:	mov    rbp,QWORD PTR [rsp+0x50]
   1400048ae:	mov    rsi,QWORD PTR [rsp+0x58]
   1400048b3:	add    rsp,0x30
   1400048b7:	pop    rdi
   1400048b8:	ret    
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400048ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400048cf:	push   rdi
   1400048d0:	sub    rsp,0x20
   1400048d4:	xor    ebp,ebp
   1400048d6:	mov    rbx,rcx
   1400048d9:	test   rcx,rcx
   1400048dc:	jne    0x1400048f2
   1400048de:	mov    rax,QWORD PTR gs:0x30
   1400048e7:	mov    DWORD PTR [rax+0x68],0x57
   1400048ee:	xor    eax,eax
   1400048f0:	jmp    0x140004967
   1400048f2:	or     rax,0xffffffffffffffff
   1400048f6:	inc    rax
   1400048f9:	cmp    WORD PTR [rcx+rax*2],bp
   1400048fd:	jne    0x1400048f6
   1400048ff:	mov    rcx,QWORD PTR gs:0x60
   140004908:	inc    eax
   14000490a:	mov    edx,0x8
   14000490f:	mov    esi,eax
   140004911:	mov    rcx,QWORD PTR [rcx+0x30]
   140004915:	lea    r8,[rax+rax*1]
   140004919:	call   QWORD PTR [rip+0x5b91]        # 0x14000a4b0
   14000491f:	mov    rdi,rax
   140004922:	test   rax,rax
   140004925:	je     0x140004964
   140004927:	mov    r8,rbx
   14000492a:	mov    edx,esi
   14000492c:	mov    rcx,rax
   14000492f:	call   0x140003e34
   140004934:	mov    ebx,eax
   140004936:	test   eax,eax
   140004938:	jns    0x140004964
   14000493a:	mov    rcx,QWORD PTR gs:0x60
   140004943:	mov    r8,rdi
   140004946:	xor    edx,edx
   140004948:	mov    rcx,QWORD PTR [rcx+0x30]
   14000494c:	call   QWORD PTR [rip+0x5b66]        # 0x14000a4b8
   140004952:	mov    rax,QWORD PTR gs:0x30
   14000495b:	mov    rdi,rbp
   14000495e:	movzx  ecx,bx
   140004961:	mov    DWORD PTR [rax+0x68],ecx
   140004964:	mov    rax,rdi
   140004967:	mov    rbx,QWORD PTR [rsp+0x30]
   14000496c:	mov    rbp,QWORD PTR [rsp+0x38]
   140004971:	mov    rsi,QWORD PTR [rsp+0x40]
   140004976:	add    rsp,0x20
   14000497a:	pop    rdi
   14000497b:	ret    
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	int3   
   140004981:	int3   
   140004982:	int3   
   140004983:	int3   
   140004984:	mov    QWORD PTR [rsp+0x8],rbx
   140004989:	mov    QWORD PTR [rsp+0x10],rbp
   14000498e:	mov    QWORD PTR [rsp+0x18],rsi
   140004993:	push   rdi
   140004994:	push   r14
   140004996:	push   r15
   140004998:	sub    rsp,0x20
   14000499c:	xor    ebp,ebp
   14000499e:	mov    r15,r9
   1400049a1:	mov    rbx,r8
   1400049a4:	mov    rsi,rdx
   1400049a7:	mov    r14,rcx
   1400049aa:	mov    edi,0x8007000e
   1400049af:	test   rcx,rcx
   1400049b2:	je     0x140004a8a
   1400049b8:	or     rax,0xffffffffffffffff
   1400049bc:	inc    rax
   1400049bf:	cmp    WORD PTR [rcx+rax*2],bp
   1400049c3:	jne    0x1400049bc
   1400049c5:	test   r9,r9
   1400049c8:	je     0x140004a8a
   1400049ce:	cmp    rbx,rdx
   1400049d1:	jb     0x140004a8a
   1400049d7:	cmp    rdx,rax
   1400049da:	ja     0x140004a8a
   1400049e0:	cmp    rbx,rax
   1400049e3:	ja     0x140004a8a
   1400049e9:	mov    rcx,QWORD PTR gs:0x60
   1400049f2:	sub    rbx,rdx
   1400049f5:	inc    rbx
   1400049f8:	mov    edx,0x8
   1400049fd:	mov    rcx,QWORD PTR [rcx+0x30]
   140004a01:	lea    r8,[rbx+rbx*1]
   140004a05:	call   QWORD PTR [rip+0x5aa5]        # 0x14000a4b0
   140004a0b:	mov    QWORD PTR [r15],rax
   140004a0e:	mov    rcx,rax
   140004a11:	test   rax,rax
   140004a14:	je     0x140004a86
   140004a16:	lea    rax,[rbx-0x1]
   140004a1a:	mov    r9d,0x7ffffffe
   140004a20:	cmp    rax,r9
   140004a23:	lea    r8,[rbx-0x1]
   140004a27:	mov    edi,ebp
   140004a29:	mov    edx,0x80070057
   140004a2e:	cmova  edi,edx
   140004a31:	test   edi,edi
   140004a33:	js     0x140004a7e
   140004a35:	cmp    r8,r9
   140004a38:	jbe    0x140004a3e
   140004a3a:	mov    edi,edx
   140004a3c:	jmp    0x140004a83
   140004a3e:	lea    rdx,[r14+rsi*2]
   140004a42:	mov    edi,ebp
   140004a44:	test   rbx,rbx
   140004a47:	je     0x140004a73
   140004a49:	sub    r8,rbx
   140004a4c:	sub    rdx,rcx
   140004a4f:	lea    rax,[r8+rbx*1]
   140004a53:	test   rax,rax
   140004a56:	je     0x140004a6e
   140004a58:	movzx  eax,WORD PTR [rdx+rcx*1]
   140004a5c:	test   ax,ax
   140004a5f:	je     0x140004a6e
   140004a61:	mov    WORD PTR [rcx],ax
   140004a64:	add    rcx,0x2
   140004a68:	sub    rbx,0x1
   140004a6c:	jne    0x140004a4f
   140004a6e:	test   rbx,rbx
   140004a71:	jne    0x140004a83
   140004a73:	sub    rcx,0x2
   140004a77:	mov    edi,0x8007007a
   140004a7c:	jmp    0x140004a83
   140004a7e:	test   rbx,rbx
   140004a81:	je     0x140004a86
   140004a83:	mov    WORD PTR [rcx],bp
   140004a86:	mov    eax,edi
   140004a88:	jmp    0x140004a8f
   140004a8a:	mov    eax,0x80070057
   140004a8f:	mov    rbx,QWORD PTR [rsp+0x40]
   140004a94:	mov    rbp,QWORD PTR [rsp+0x48]
   140004a99:	mov    rsi,QWORD PTR [rsp+0x50]
   140004a9e:	add    rsp,0x20
   140004aa2:	pop    r15
   140004aa4:	pop    r14
   140004aa6:	pop    rdi
   140004aa7:	ret    
   140004aa8:	int3   
   140004aa9:	int3   
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	int3   
   140004aad:	int3   
   140004aae:	int3   
   140004aaf:	int3   
   140004ab0:	rex push rbx
   140004ab2:	sub    rsp,0x20
   140004ab6:	xor    ebx,ebx
   140004ab8:	mov    r9,rcx
   140004abb:	test   rdx,rdx
   140004abe:	je     0x140004afd
   140004ac0:	test   rcx,rcx
   140004ac3:	je     0x140004afd
   140004ac5:	or     rax,0xffffffffffffffff
   140004ac9:	mov    r8,rax
   140004acc:	inc    r8
   140004acf:	cmp    WORD PTR [rdx+r8*2],bx
   140004ad4:	jne    0x140004acc
   140004ad6:	inc    rax
   140004ad9:	cmp    WORD PTR [rcx+rax*2],bx
   140004add:	jne    0x140004ad6
   140004adf:	cmp    r8,rax
   140004ae2:	mov    ecx,ebx
   140004ae4:	setbe  cl
   140004ae7:	test   ecx,ecx
   140004ae9:	je     0x140004b0f
   140004aeb:	mov    rcx,r9
   140004aee:	call   QWORD PTR [rip+0x58e4]        # 0x14000a3d8
   140004af4:	test   eax,eax
   140004af6:	mov    ecx,ebx
   140004af8:	sete   cl
   140004afb:	jmp    0x140004b0f
   140004afd:	mov    rax,QWORD PTR gs:0x30
   140004b06:	mov    ecx,ebx
   140004b08:	mov    DWORD PTR [rax+0x68],0x57
   140004b0f:	mov    eax,ecx
   140004b11:	add    rsp,0x20
   140004b15:	pop    rbx
   140004b16:	ret    
   140004b17:	int3   
   140004b18:	int3   
   140004b19:	int3   
   140004b1a:	int3   
   140004b1b:	int3   
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	mov    rax,rsp
   140004b23:	mov    QWORD PTR [rax+0x10],rdx
   140004b27:	mov    QWORD PTR [rax+0x18],r8
   140004b2b:	mov    QWORD PTR [rax+0x20],r9
   140004b2f:	push   rbx
   140004b30:	push   rbp
   140004b31:	push   rsi
   140004b32:	push   rdi
   140004b33:	push   r14
   140004b35:	push   r15
   140004b37:	sub    rsp,0x38
   140004b3b:	mov    rbp,rdx
   140004b3e:	xor    r15d,r15d
   140004b41:	lea    rdx,[rax+0x18]
   140004b45:	mov    r14,rcx
   140004b48:	mov    QWORD PTR [rax-0x48],rdx
   140004b4c:	test   rcx,rcx
   140004b4f:	je     0x140004c57
   140004b55:	test   rbp,rbp
   140004b58:	je     0x140004c57
   140004b5e:	mov    QWORD PTR [rcx],r15
   140004b61:	mov    rcx,rbp
   140004b64:	call   QWORD PTR [rip+0x5876]        # 0x14000a3e0
   140004b6a:	test   eax,eax
   140004b6c:	jns    0x140004b78
   140004b6e:	mov    ebx,0x80004005
   140004b73:	jmp    0x140004c5c
   140004b78:	lea    ecx,[rax+0x1]
   140004b7b:	cmp    ecx,eax
   140004b7d:	jb     0x140004c50
   140004b83:	mov    eax,ecx
   140004b85:	mov    ecx,0xffffffff
   140004b8a:	add    rax,rax
   140004b8d:	cmp    rax,rcx
   140004b90:	ja     0x140004c50
   140004b96:	mov    rcx,QWORD PTR gs:0x60
   140004b9f:	mov    edx,0x8
   140004ba4:	mov    r8d,eax
   140004ba7:	mov    ebx,r15d
   140004baa:	mov    esi,eax
   140004bac:	mov    rcx,QWORD PTR [rcx+0x30]
   140004bb0:	call   QWORD PTR [rip+0x58fa]        # 0x14000a4b0
   140004bb6:	mov    rdi,rax
   140004bb9:	mov    eax,0x8007000e
   140004bbe:	test   rdi,rdi
   140004bc1:	cmove  ebx,eax
   140004bc4:	test   ebx,ebx
   140004bc6:	js     0x140004c31
   140004bc8:	shr    rsi,1
   140004bcb:	mov    ebx,r15d
   140004bce:	mov    eax,0x80070057
   140004bd3:	lea    rcx,[rsi-0x1]
   140004bd7:	cmp    rcx,0x7ffffffe
   140004bde:	cmova  ebx,eax
   140004be1:	test   ebx,ebx
   140004be3:	js     0x140004c1f
   140004be5:	mov    r9,QWORD PTR [rsp+0x20]
   140004bea:	dec    rsi
   140004bed:	mov    rdx,rsi
   140004bf0:	mov    r8,rbp
   140004bf3:	mov    rcx,rdi
   140004bf6:	mov    ebx,r15d
   140004bf9:	call   QWORD PTR [rip+0x57c1]        # 0x14000a3c0
   140004bff:	test   eax,eax
   140004c01:	js     0x140004c13
   140004c03:	cdqe   
   140004c05:	cmp    rax,rsi
   140004c08:	ja     0x140004c13
   140004c0a:	jne    0x140004c28
   140004c0c:	mov    WORD PTR [rdi+rsi*2],r15w
   140004c11:	jmp    0x140004c28
   140004c13:	mov    WORD PTR [rdi+rsi*2],r15w
   140004c18:	mov    ebx,0x8007007a
   140004c1d:	jmp    0x140004c28
   140004c1f:	test   rsi,rsi
   140004c22:	je     0x140004c28
   140004c24:	mov    WORD PTR [rdi],r15w
   140004c28:	test   ebx,ebx
   140004c2a:	js     0x140004c31
   140004c2c:	mov    QWORD PTR [r14],rdi
   140004c2f:	jmp    0x140004c5c
   140004c31:	test   rdi,rdi
   140004c34:	je     0x140004c5c
   140004c36:	mov    rcx,QWORD PTR gs:0x60
   140004c3f:	mov    r8,rdi
   140004c42:	xor    edx,edx
   140004c44:	mov    rcx,QWORD PTR [rcx+0x30]
   140004c48:	call   QWORD PTR [rip+0x586a]        # 0x14000a4b8
   140004c4e:	jmp    0x140004c5c
   140004c50:	mov    ebx,0x80070216
   140004c55:	jmp    0x140004c5c
   140004c57:	mov    ebx,0x80070057
   140004c5c:	mov    eax,ebx
   140004c5e:	add    rsp,0x38
   140004c62:	pop    r15
   140004c64:	pop    r14
   140004c66:	pop    rdi
   140004c67:	pop    rsi
   140004c68:	pop    rbp
   140004c69:	pop    rbx
   140004c6a:	ret    
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	int3   
   140004c71:	int3   
   140004c72:	int3   
   140004c73:	int3   
   140004c74:	mov    QWORD PTR [rsp+0x8],rbx
   140004c79:	mov    QWORD PTR [rsp+0x10],rbp
   140004c7e:	mov    QWORD PTR [rsp+0x18],rsi
   140004c83:	push   rdi
   140004c84:	push   r14
   140004c86:	push   r15
   140004c88:	sub    rsp,0x30
   140004c8c:	xor    r15d,r15d
   140004c8f:	mov    rbx,rdx
   140004c92:	mov    rbp,rcx
   140004c95:	mov    edi,r15d
   140004c98:	test   rcx,rcx
   140004c9b:	je     0x140004d9d
   140004ca1:	test   rdx,rdx
   140004ca4:	je     0x140004d9d
   140004caa:	or     rdx,0xffffffffffffffff
   140004cae:	mov    r8,rdx
   140004cb1:	inc    r8
   140004cb4:	cmp    WORD PTR [rcx+r8*2],r15w
   140004cb9:	jne    0x140004cb1
   140004cbb:	inc    rdx
   140004cbe:	cmp    WORD PTR [rbx+rdx*2],r15w
   140004cc3:	jne    0x140004cbb
   140004cc5:	test   r8d,r8d
   140004cc8:	je     0x140004cf5
   140004cca:	lea    eax,[r8-0x1]
   140004cce:	mov    r9d,0x5c
   140004cd4:	cmp    r9w,WORD PTR [rcx+rax*2]
   140004cd9:	jne    0x140004ce9
   140004cdb:	cmp    r9w,WORD PTR [rbx]
   140004cdf:	jne    0x140004cf5
   140004ce1:	add    rbx,0x2
   140004ce5:	dec    edx
   140004ce7:	jmp    0x140004cf5
   140004ce9:	cmp    r9w,WORD PTR [rbx]
   140004ced:	mov    eax,0x1
   140004cf2:	cmovne edi,eax
   140004cf5:	lea    ecx,[r8+0x1]
   140004cf9:	lea    eax,[rdi+rdx*1]
   140004cfc:	mov    edx,0x8
   140004d01:	add    ecx,eax
   140004d03:	mov    r14d,ecx
   140004d06:	lea    r8,[rcx+rcx*1]
   140004d0a:	mov    rcx,QWORD PTR gs:0x60
   140004d13:	mov    rcx,QWORD PTR [rcx+0x30]
   140004d17:	call   QWORD PTR [rip+0x5793]        # 0x14000a4b0
   140004d1d:	mov    rsi,rax
   140004d20:	test   rax,rax
   140004d23:	je     0x140004dad
   140004d29:	lea    rcx,[rip+0x58a0]        # 0x14000a5d0
   140004d30:	mov    QWORD PTR [rsp+0x28],rbx
   140004d35:	test   edi,edi
   140004d37:	lea    rax,[rip+0x695e]        # 0x14000b69c
   140004d3e:	mov    r9,rbp
   140004d41:	lea    r8,[rip+0x6c80]        # 0x14000b9c8
   140004d48:	cmovne rax,rcx
   140004d4c:	mov    edx,r14d
   140004d4f:	mov    rcx,rsi
   140004d52:	mov    QWORD PTR [rsp+0x20],rax
   140004d57:	call   0x140003060
   140004d5c:	mov    ebx,eax
   140004d5e:	test   eax,eax
   140004d60:	jns    0x140004d8b
   140004d62:	mov    rcx,QWORD PTR gs:0x60
   140004d6b:	mov    r8,rsi
   140004d6e:	xor    edx,edx
   140004d70:	mov    rcx,QWORD PTR [rcx+0x30]
   140004d74:	call   QWORD PTR [rip+0x573e]        # 0x14000a4b8
   140004d7a:	mov    rax,QWORD PTR gs:0x30
   140004d83:	movzx  ecx,bx
   140004d86:	mov    DWORD PTR [rax+0x68],ecx
   140004d89:	jmp    0x140004dad
   140004d8b:	mov    rax,QWORD PTR gs:0x30
   140004d94:	mov    DWORD PTR [rax+0x68],r15d
   140004d98:	mov    rax,rsi
   140004d9b:	jmp    0x140004daf
   140004d9d:	mov    rax,QWORD PTR gs:0x30
   140004da6:	mov    DWORD PTR [rax+0x68],0x57
   140004dad:	xor    eax,eax
   140004daf:	mov    rbx,QWORD PTR [rsp+0x50]
   140004db4:	mov    rbp,QWORD PTR [rsp+0x58]
   140004db9:	mov    rsi,QWORD PTR [rsp+0x60]
   140004dbe:	add    rsp,0x30
   140004dc2:	pop    r15
   140004dc4:	pop    r14
   140004dc6:	pop    rdi
   140004dc7:	ret    
   140004dc8:	int3   
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    rax,rsp
   140004dd3:	mov    QWORD PTR [rax+0x20],rbx
   140004dd7:	mov    DWORD PTR [rax+0x8],ecx
   140004dda:	push   rdi
   140004ddb:	sub    rsp,0x50
   140004ddf:	mov    DWORD PTR [rax+0x8],0x1
   140004de6:	lea    rax,[rax+0x8]
   140004dea:	xor    ebx,ebx
   140004dec:	test   rax,rax
   140004def:	jne    0x140004dff
   140004df1:	lea    ecx,[rbx+0x57]
   140004df4:	call   QWORD PTR [rip+0x52e6]        # 0x14000a0e0
   140004dfa:	jmp    0x140004ec5
   140004dff:	lea    rdx,[rip+0x6d42]        # 0x14000bb48
   140004e06:	xor    r8d,r8d
   140004e09:	mov    rcx,0xffffffff80000002
   140004e10:	test   rdx,rdx
   140004e13:	je     0x140004e8d
   140004e15:	lea    rax,[rsp+0x68]
   140004e1a:	mov    QWORD PTR [rsp+0x70],rbx
   140004e1f:	mov    QWORD PTR [rsp+0x40],rax
   140004e24:	lea    r9,[rip+0x676d]        # 0x14000b598
   140004e2b:	lea    rax,[rsp+0x70]
   140004e30:	mov    DWORD PTR [rsp+0x68],ebx
   140004e34:	mov    QWORD PTR [rsp+0x38],rax
   140004e39:	mov    QWORD PTR [rsp+0x30],rbx
   140004e3e:	mov    DWORD PTR [rsp+0x28],0x20006
   140004e46:	mov    DWORD PTR [rsp+0x20],ebx
   140004e4a:	call   QWORD PTR [rip+0x5430]        # 0x14000a280
   140004e50:	mov    edi,eax
   140004e52:	test   eax,eax
   140004e54:	jne    0x140004eb1
   140004e56:	mov    rcx,QWORD PTR [rsp+0x70]
   140004e5b:	lea    r9d,[rax+0x4]
   140004e5f:	lea    rax,[rsp+0x60]
   140004e64:	mov    DWORD PTR [rsp+0x28],r9d
   140004e69:	xor    r8d,r8d
   140004e6c:	mov    QWORD PTR [rsp+0x20],rax
   140004e71:	lea    rdx,[rip+0x6cf0]        # 0x14000bb68
   140004e78:	call   QWORD PTR [rip+0x542a]        # 0x14000a2a8
   140004e7e:	mov    rcx,QWORD PTR [rsp+0x70]
   140004e83:	mov    edi,eax
   140004e85:	call   QWORD PTR [rip+0x5415]        # 0x14000a2a0
   140004e8b:	jmp    0x140004eb1
   140004e8d:	mov    r9d,0x4
   140004e93:	lea    rax,[rsp+0x60]
   140004e98:	mov    DWORD PTR [rsp+0x28],r9d
   140004e9d:	lea    rdx,[rip+0x6cc4]        # 0x14000bb68
   140004ea4:	mov    QWORD PTR [rsp+0x20],rax
   140004ea9:	call   QWORD PTR [rip+0x53f9]        # 0x14000a2a8
   140004eaf:	mov    edi,eax
   140004eb1:	mov    ecx,edi
   140004eb3:	call   QWORD PTR [rip+0x5227]        # 0x14000a0e0
   140004eb9:	test   edi,edi
   140004ebb:	mov    eax,ebx
   140004ebd:	sete   al
   140004ec0:	cmp    eax,0x1
   140004ec3:	je     0x140004ef7
   140004ec5:	call   QWORD PTR [rip+0x5225]        # 0x14000a0f0
   140004ecb:	mov    ecx,eax
   140004ecd:	mov    edi,0x80070000
   140004ed2:	movzx  eax,ax
   140004ed5:	or     eax,edi
   140004ed7:	test   ecx,ecx
   140004ed9:	cmovle eax,ecx
   140004edc:	test   eax,eax
   140004ede:	jns    0x140004ef2
   140004ee0:	call   QWORD PTR [rip+0x520a]        # 0x14000a0f0
   140004ee6:	movzx  ebx,ax
   140004ee9:	or     ebx,edi
   140004eeb:	test   eax,eax
   140004eed:	cmovle ebx,eax
   140004ef0:	jmp    0x140004ef7
   140004ef2:	mov    ebx,0x80004005
   140004ef7:	mov    eax,ebx
   140004ef9:	mov    rbx,QWORD PTR [rsp+0x78]
   140004efe:	add    rsp,0x50
   140004f02:	pop    rdi
   140004f03:	ret    
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	rex push rbx
   140004f0e:	sub    rsp,0x20
   140004f12:	mov    rbx,rcx
   140004f15:	lea    r8,[rip+0x6c7c]        # 0x14000bb98
   140004f1c:	mov    rcx,0xffffffff80000002
   140004f23:	lea    rdx,[rip+0x6c86]        # 0x14000bbb0
   140004f2a:	call   0x140004620
   140004f2f:	cmp    eax,0x1
   140004f32:	jne    0x140004f5a
   140004f34:	lea    r8,[rip+0x6c5d]        # 0x14000bb98
   140004f3b:	mov    rcx,0xffffffff80000002
   140004f42:	lea    rdx,[rip+0x6c67]        # 0x14000bbb0
   140004f49:	call   0x1400046cc
   140004f4e:	test   eax,eax
   140004f50:	je     0x140004f5a
   140004f52:	mov    DWORD PTR [rbx],0x1
   140004f58:	jmp    0x140004f5d
   140004f5a:	and    DWORD PTR [rbx],0x0
   140004f5d:	xor    eax,eax
   140004f5f:	add    rsp,0x20
   140004f63:	pop    rbx
   140004f64:	ret    
   140004f65:	int3   
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	int3   
   140004f69:	int3   
   140004f6a:	int3   
   140004f6b:	int3   
   140004f6c:	mov    DWORD PTR [rsp+0x8],ecx
   140004f70:	push   rbx
   140004f71:	sub    rsp,0x50
   140004f75:	lea    rax,[rsp+0x60]
   140004f7a:	mov    DWORD PTR [rsp+0x60],0x1
   140004f82:	test   rax,rax
   140004f85:	jne    0x140004fc2
   140004f87:	lea    ecx,[rax+0x57]
   140004f8a:	call   QWORD PTR [rip+0x5150]        # 0x14000a0e0
   140004f90:	call   QWORD PTR [rip+0x515a]        # 0x14000a0f0
   140004f96:	movzx  ecx,ax
   140004f99:	mov    ebx,0x80070000
   140004f9e:	or     ecx,ebx
   140004fa0:	test   eax,eax
   140004fa2:	cmovle ecx,eax
   140004fa5:	test   ecx,ecx
   140004fa7:	jns    0x140005097
   140004fad:	call   QWORD PTR [rip+0x513d]        # 0x14000a0f0
   140004fb3:	movzx  ecx,ax
   140004fb6:	or     ecx,ebx
   140004fb8:	test   eax,eax
   140004fba:	cmovle ecx,eax
   140004fbd:	jmp    0x14000509c
   140004fc2:	lea    rdx,[rip+0x6be7]        # 0x14000bbb0
   140004fc9:	xor    r8d,r8d
   140004fcc:	mov    rcx,0xffffffff80000002
   140004fd3:	test   rdx,rdx
   140004fd6:	je     0x140005052
   140004fd8:	and    QWORD PTR [rsp+0x70],r8
   140004fdd:	lea    rax,[rsp+0x68]
   140004fe2:	and    DWORD PTR [rsp+0x68],r8d
   140004fe7:	lea    r9,[rip+0x65aa]        # 0x14000b598
   140004fee:	mov    QWORD PTR [rsp+0x40],rax
   140004ff3:	lea    rax,[rsp+0x70]
   140004ff8:	mov    QWORD PTR [rsp+0x38],rax
   140004ffd:	and    QWORD PTR [rsp+0x30],r8
   140005002:	mov    DWORD PTR [rsp+0x28],0x20006
   14000500a:	and    DWORD PTR [rsp+0x20],r8d
   14000500f:	call   QWORD PTR [rip+0x526b]        # 0x14000a280
   140005015:	mov    ebx,eax
   140005017:	test   eax,eax
   140005019:	jne    0x140005076
   14000501b:	mov    rcx,QWORD PTR [rsp+0x70]
   140005020:	lea    r9d,[rax+0x4]
   140005024:	lea    rax,[rsp+0x60]
   140005029:	mov    DWORD PTR [rsp+0x28],r9d
   14000502e:	xor    r8d,r8d
   140005031:	mov    QWORD PTR [rsp+0x20],rax
   140005036:	lea    rdx,[rip+0x6b5b]        # 0x14000bb98
   14000503d:	call   QWORD PTR [rip+0x5265]        # 0x14000a2a8
   140005043:	mov    rcx,QWORD PTR [rsp+0x70]
   140005048:	mov    ebx,eax
   14000504a:	call   QWORD PTR [rip+0x5250]        # 0x14000a2a0
   140005050:	jmp    0x140005076
   140005052:	mov    r9d,0x4
   140005058:	lea    rax,[rsp+0x60]
   14000505d:	mov    DWORD PTR [rsp+0x28],r9d
   140005062:	lea    rdx,[rip+0x6b2f]        # 0x14000bb98
   140005069:	mov    QWORD PTR [rsp+0x20],rax
   14000506e:	call   QWORD PTR [rip+0x5234]        # 0x14000a2a8
   140005074:	mov    ebx,eax
   140005076:	mov    ecx,ebx
   140005078:	call   QWORD PTR [rip+0x5062]        # 0x14000a0e0
   14000507e:	xor    eax,eax
   140005080:	test   ebx,ebx
   140005082:	sete   al
   140005085:	cmp    eax,0x1
   140005088:	jne    0x140004f90
   14000508e:	call   0x140008934
   140005093:	mov    ecx,eax
   140005095:	jmp    0x14000509c
   140005097:	mov    ecx,0x80004005
   14000509c:	mov    eax,ecx
   14000509e:	add    rsp,0x50
   1400050a2:	pop    rbx
   1400050a3:	ret    
   1400050a4:	int3   
   1400050a5:	int3   
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	int3   
   1400050a9:	int3   
   1400050aa:	int3   
   1400050ab:	int3   
   1400050ac:	rex push rbx
   1400050ae:	sub    rsp,0x20
   1400050b2:	xor    eax,eax
   1400050b4:	mov    rbx,rdx
   1400050b7:	cmp    ax,WORD PTR [rcx]
   1400050ba:	je     0x1400050dd
   1400050bc:	test   rdx,rdx
   1400050bf:	je     0x1400050dd
   1400050c1:	mov    r8,rcx
   1400050c4:	lea    rdx,[rip+0x6b15]        # 0x14000bbe0
   1400050cb:	mov    rcx,0xffffffff80000002
   1400050d2:	call   0x1400046cc
   1400050d7:	mov    DWORD PTR [rbx],eax
   1400050d9:	xor    eax,eax
   1400050db:	jmp    0x1400050e2
   1400050dd:	mov    eax,0x80070057
   1400050e2:	add    rsp,0x20
   1400050e6:	pop    rbx
   1400050e7:	ret    
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	int3   
   1400050ed:	int3   
   1400050ee:	int3   
   1400050ef:	int3   
   1400050f0:	mov    rax,rsp
   1400050f3:	mov    QWORD PTR [rax+0x8],rcx
   1400050f7:	sub    rsp,0x38
   1400050fb:	lea    r8,[rip+0x56fe]        # 0x14000a800
   140005102:	test   r8,r8
   140005105:	je     0x140005173
   140005107:	mov    DWORD PTR [rax+0x8],edx
   14000510a:	lea    rax,[rax+0x8]
   14000510e:	mov    r9d,0x4
   140005114:	lea    rdx,[rip+0x6ac5]        # 0x14000bbe0
   14000511b:	mov    DWORD PTR [rax-0x18],r9d
   14000511f:	mov    rcx,0xffffffff80000002
   140005126:	mov    QWORD PTR [rsp+0x20],rax
   14000512b:	call   0x140004520
   140005130:	cmp    eax,0x1
   140005133:	jne    0x14000513e
   140005135:	call   0x140008934
   14000513a:	mov    ecx,eax
   14000513c:	jmp    0x140005178
   14000513e:	call   QWORD PTR [rip+0x4fac]        # 0x14000a0f0
   140005144:	movzx  ecx,ax
   140005147:	or     ecx,0x80070000
   14000514d:	test   eax,eax
   14000514f:	cmovle ecx,eax
   140005152:	test   ecx,ecx
   140005154:	jns    0x14000516c
   140005156:	call   QWORD PTR [rip+0x4f94]        # 0x14000a0f0
   14000515c:	movzx  ecx,ax
   14000515f:	or     ecx,0x80070000
   140005165:	test   eax,eax
   140005167:	cmovle ecx,eax
   14000516a:	jmp    0x140005178
   14000516c:	mov    ecx,0x80004005
   140005171:	jmp    0x140005178
   140005173:	mov    ecx,0x80070057
   140005178:	mov    eax,ecx
   14000517a:	add    rsp,0x38
   14000517e:	ret    
   14000517f:	int3   
   140005180:	int3   
   140005181:	int3   
   140005182:	int3   
   140005183:	int3   
   140005184:	int3   
   140005185:	int3   
   140005186:	int3   
   140005187:	int3   
   140005188:	mov    QWORD PTR [rsp+0x8],rbx
   14000518d:	mov    QWORD PTR [rsp+0x10],rsi
   140005192:	mov    QWORD PTR [rsp+0x18],rdi
   140005197:	xor    edi,edi
   140005199:	mov    eax,edi
   14000519b:	test   rcx,rcx
   14000519e:	je     0x1400051e6
   1400051a0:	cmp    di,WORD PTR [rcx]
   1400051a3:	je     0x1400051e6
   1400051a5:	mov    ebx,edi
   1400051a7:	lea    r9,[rip+0x722a]        # 0x14000c3d8
   1400051ae:	lea    esi,[rdi+0x1]
   1400051b1:	test   eax,eax
   1400051b3:	jne    0x1400051e6
   1400051b5:	mov    rdx,QWORD PTR [r9]
   1400051b8:	mov    r8,rcx
   1400051bb:	sub    r8,rdx
   1400051be:	movzx  r11d,WORD PTR [rdx]
   1400051c2:	movzx  r10d,WORD PTR [rdx+r8*1]
   1400051c7:	sub    r11d,r10d
   1400051ca:	jne    0x1400051d5
   1400051cc:	add    rdx,0x2
   1400051d0:	test   r10d,r10d
   1400051d3:	jne    0x1400051be
   1400051d5:	test   r11d,r11d
   1400051d8:	cmove  eax,esi
   1400051db:	add    ebx,esi
   1400051dd:	add    r9,0x10
   1400051e1:	cmp    ebx,0x7
   1400051e4:	jb     0x1400051b1
   1400051e6:	mov    rbx,QWORD PTR [rsp+0x8]
   1400051eb:	mov    rsi,QWORD PTR [rsp+0x10]
   1400051f0:	mov    rdi,QWORD PTR [rsp+0x18]
   1400051f5:	ret    
   1400051f6:	int3   
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	mov    QWORD PTR [rsp+0x8],rbx
   140005201:	mov    QWORD PTR [rsp+0x10],rdi
   140005206:	xor    eax,eax
   140005208:	mov    rbx,rdx
   14000520b:	mov    rdi,rcx
   14000520e:	test   rdx,rdx
   140005211:	je     0x14000525d
   140005213:	xor    r8d,r8d
   140005216:	lea    rcx,[rip+0x71b3]        # 0x14000c3d0
   14000521d:	cmp    eax,0x1
   140005220:	je     0x14000525d
   140005222:	mov    rdx,QWORD PTR [rcx+0x8]
   140005226:	mov    r10,rdi
   140005229:	sub    r10,rdx
   14000522c:	movzx  r9d,WORD PTR [rdx]
   140005230:	movzx  r11d,WORD PTR [rdx+r10*1]
   140005235:	sub    r9d,r11d
   140005238:	jne    0x140005243
   14000523a:	add    rdx,0x2
   14000523e:	test   r11d,r11d
   140005241:	jne    0x14000522c
   140005243:	test   r9d,r9d
   140005246:	jne    0x140005250
   140005248:	mov    eax,DWORD PTR [rcx]
   14000524a:	mov    DWORD PTR [rbx],eax
   14000524c:	lea    eax,[r9+0x1]
   140005250:	inc    r8d
   140005253:	add    rcx,0x10
   140005257:	cmp    r8d,0x7
   14000525b:	jb     0x14000521d
   14000525d:	mov    rbx,QWORD PTR [rsp+0x8]
   140005262:	mov    rdi,QWORD PTR [rsp+0x10]
   140005267:	ret    
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	mov    QWORD PTR [rsp+0x8],rbx
   140005275:	mov    QWORD PTR [rsp+0x10],rbp
   14000527a:	mov    QWORD PTR [rsp+0x18],rsi
   14000527f:	push   rdi
   140005280:	push   r12
   140005282:	push   r13
   140005284:	push   r14
   140005286:	push   r15
   140005288:	sub    rsp,0x30
   14000528c:	xor    r13d,r13d
   14000528f:	lea    r14,[rip+0x583a]        # 0x14000aad0
   140005296:	mov    rdi,rcx
   140005299:	mov    ebx,r13d
   14000529c:	test   r14,r14
   14000529f:	jne    0x1400052ab
   1400052a1:	mov    eax,0x80070057
   1400052a6:	jmp    0x140005668
   1400052ab:	mov    rcx,r14
   1400052ae:	call   0x140003154
   1400052b3:	mov    rsi,rax
   1400052b6:	test   rax,rax
   1400052b9:	je     0x140005620
   1400052bf:	test   rdi,rdi
   1400052c2:	jne    0x140005357
   1400052c8:	mov    r8,rax
   1400052cb:	lea    rdx,[rip+0x69de]        # 0x14000bcb0
   1400052d2:	xor    ecx,ecx
   1400052d4:	call   0x140002e20
   1400052d9:	mov    rcx,rsi
   1400052dc:	call   0x140003a9c
   1400052e1:	mov    edi,0x1
   1400052e6:	cmp    eax,edi
   1400052e8:	jne    0x140005339
   1400052ea:	mov    rcx,rsi
   1400052ed:	call   0x140003604
   1400052f2:	test   eax,eax
   1400052f4:	jne    0x140005339
   1400052f6:	call   QWORD PTR [rip+0x4df4]        # 0x14000a0f0
   1400052fc:	mov    ecx,eax
   1400052fe:	mov    ebp,0x80070000
   140005303:	movzx  eax,ax
   140005306:	or     eax,ebp
   140005308:	test   ecx,ecx
   14000530a:	cmovle eax,ecx
   14000530d:	test   eax,eax
   14000530f:	jns    0x140005323
   140005311:	call   QWORD PTR [rip+0x4dd9]        # 0x14000a0f0
   140005317:	movzx  ebx,ax
   14000531a:	or     ebx,ebp
   14000531c:	test   eax,eax
   14000531e:	cmovle ebx,eax
   140005321:	jmp    0x140005328
   140005323:	mov    ebx,0x80004005
   140005328:	lea    rdx,[rip+0x69e1]        # 0x14000bd10
   14000532f:	mov    r8,rsi
   140005332:	mov    ecx,edi
   140005334:	jmp    0x140005605
   140005339:	mov    rcx,rsi
   14000533c:	call   0x1400039f8
   140005341:	cmp    eax,edi
   140005343:	jne    0x14000560a
   140005349:	mov    ebx,0x80004005
   14000534e:	lea    rdx,[rip+0x6a0b]        # 0x14000bd60
   140005355:	jmp    0x14000532f
   140005357:	mov    rcx,rdi
   14000535a:	call   0x140003154
   14000535f:	mov    r14,rax
   140005362:	test   rax,rax
   140005365:	je     0x1400055c4
   14000536b:	mov    rcx,rax
   14000536e:	call   0x140003a9c
   140005373:	mov    edi,0x1
   140005378:	mov    r8,r14
   14000537b:	cmp    eax,edi
   14000537d:	jne    0x14000559b
   140005383:	mov    r9,rsi
   140005386:	lea    rdx,[rip+0x6a33]        # 0x14000bdc0
   14000538d:	xor    ecx,ecx
   14000538f:	call   0x140002e20
   140005394:	lea    r12d,[rdi+0x5b]
   140005398:	mov    rcx,rsi
   14000539b:	mov    edx,r12d
   14000539e:	call   QWORD PTR [rip+0x502c]        # 0x14000a3d0
   1400053a4:	mov    r15,rax
   1400053a7:	mov    ebp,0x80070000
   1400053ac:	test   rax,rax
   1400053af:	je     0x14000540b
   1400053b1:	mov    rcx,rsi
   1400053b4:	mov    WORD PTR [rax],r13w
   1400053b8:	call   0x1400040f8
   1400053bd:	test   eax,eax
   1400053bf:	jne    0x1400053ff
   1400053c1:	call   QWORD PTR [rip+0x4d29]        # 0x14000a0f0
   1400053c7:	mov    ecx,eax
   1400053c9:	movzx  eax,ax
   1400053cc:	or     eax,ebp
   1400053ce:	test   ecx,ecx
   1400053d0:	cmovle eax,ecx
   1400053d3:	test   eax,eax
   1400053d5:	jns    0x1400053e9
   1400053d7:	call   QWORD PTR [rip+0x4d13]        # 0x14000a0f0
   1400053dd:	movzx  ebx,ax
   1400053e0:	or     ebx,ebp
   1400053e2:	test   eax,eax
   1400053e4:	cmovle ebx,eax
   1400053e7:	jmp    0x1400053ee
   1400053e9:	mov    ebx,0x80004005
   1400053ee:	mov    r8,rsi
   1400053f1:	lea    rdx,[rip+0x6a48]        # 0x14000be40
   1400053f8:	mov    ecx,edi
   1400053fa:	call   0x140002e20
   1400053ff:	mov    WORD PTR [r15],r12w
   140005403:	test   ebx,ebx
   140005405:	js     0x1400055ae
   14000540b:	mov    rcx,r14
   14000540e:	call   0x140004348
   140005413:	mov    rcx,rsi
   140005416:	mov    r12,rax
   140005419:	call   0x140004348
   14000541e:	mov    r15,rax
   140005421:	test   r12,r12
   140005424:	je     0x14000552c
   14000542a:	test   rax,rax
   14000542d:	je     0x14000552c
   140005433:	or     r9d,0xffffffff
   140005437:	mov    r8,r12
   14000543a:	mov    DWORD PTR [rsp+0x28],r9d
   14000543f:	mov    edx,edi
   140005441:	mov    ecx,0x409
   140005446:	mov    QWORD PTR [rsp+0x20],rax
   14000544b:	call   QWORD PTR [rip+0x4e87]        # 0x14000a2d8
   140005451:	cmp    eax,0x2
   140005454:	jne    0x140005469
   140005456:	lea    rdx,[rip+0x6a43]        # 0x14000bea0
   14000545d:	xor    ecx,ecx
   14000545f:	call   0x140002e20
   140005464:	jmp    0x140005567
   140005469:	mov    rcx,rsi
   14000546c:	call   QWORD PTR [rip+0x4c96]        # 0x14000a108
   140005472:	cmp    eax,0xffffffff
   140005475:	je     0x1400054d2
   140005477:	mov    r8,rsi
   14000547a:	lea    rdx,[rip+0x6a9f]        # 0x14000bf20
   140005481:	xor    ecx,ecx
   140005483:	call   0x140002e20
   140005488:	mov    rcx,rsi
   14000548b:	call   0x140003604
   140005490:	test   eax,eax
   140005492:	jne    0x1400054d2
   140005494:	call   QWORD PTR [rip+0x4c56]        # 0x14000a0f0
   14000549a:	mov    ecx,eax
   14000549c:	movzx  eax,ax
   14000549f:	or     eax,ebp
   1400054a1:	test   ecx,ecx
   1400054a3:	cmovle eax,ecx
   1400054a6:	test   eax,eax
   1400054a8:	jns    0x1400054bc
   1400054aa:	call   QWORD PTR [rip+0x4c40]        # 0x14000a0f0
   1400054b0:	movzx  ebx,ax
   1400054b3:	or     ebx,ebp
   1400054b5:	test   eax,eax
   1400054b7:	cmovle ebx,eax
   1400054ba:	jmp    0x1400054c1
   1400054bc:	mov    ebx,0x80004005
   1400054c1:	mov    r8,rsi
   1400054c4:	lea    rdx,[rip+0x6ab5]        # 0x14000bf80
   1400054cb:	mov    ecx,edi
   1400054cd:	call   0x140002e20
   1400054d2:	test   ebx,ebx
   1400054d4:	js     0x140005567
   1400054da:	mov    rdx,rsi
   1400054dd:	mov    rcx,r14
   1400054e0:	call   0x140003510
   1400054e5:	test   eax,eax
   1400054e7:	jne    0x140005567
   1400054e9:	call   QWORD PTR [rip+0x4c01]        # 0x14000a0f0
   1400054ef:	mov    ecx,eax
   1400054f1:	movzx  eax,ax
   1400054f4:	or     eax,ebp
   1400054f6:	test   ecx,ecx
   1400054f8:	cmovle eax,ecx
   1400054fb:	test   eax,eax
   1400054fd:	jns    0x140005511
   1400054ff:	call   QWORD PTR [rip+0x4beb]        # 0x14000a0f0
   140005505:	movzx  ebx,ax
   140005508:	or     ebx,ebp
   14000550a:	test   eax,eax
   14000550c:	cmovle ebx,eax
   14000550f:	jmp    0x140005516
   140005511:	mov    ebx,0x80004005
   140005516:	mov    r9,rsi
   140005519:	lea    rdx,[rip+0x6ab0]        # 0x14000bfd0
   140005520:	mov    r8,r14
   140005523:	mov    ecx,edi
   140005525:	call   0x140002e20
   14000552a:	jmp    0x140005567
   14000552c:	call   QWORD PTR [rip+0x4bbe]        # 0x14000a0f0
   140005532:	mov    ecx,eax
   140005534:	movzx  eax,ax
   140005537:	or     eax,ebp
   140005539:	test   ecx,ecx
   14000553b:	cmovle eax,ecx
   14000553e:	test   eax,eax
   140005540:	jns    0x140005554
   140005542:	call   QWORD PTR [rip+0x4ba8]        # 0x14000a0f0
   140005548:	movzx  ebx,ax
   14000554b:	or     ebx,ebp
   14000554d:	test   eax,eax
   14000554f:	cmovle ebx,eax
   140005552:	jmp    0x140005559
   140005554:	mov    ebx,0x80004005
   140005559:	lea    rdx,[rip+0x6ac0]        # 0x14000c020
   140005560:	mov    ecx,edi
   140005562:	call   0x140002e20
   140005567:	test   r12,r12
   14000556a:	je     0x140005580
   14000556c:	call   QWORD PTR [rip+0x4c06]        # 0x14000a178
   140005572:	mov    r8,r12
   140005575:	xor    edx,edx
   140005577:	mov    rcx,rax
   14000557a:	call   QWORD PTR [rip+0x4bf0]        # 0x14000a170
   140005580:	test   r15,r15
   140005583:	je     0x1400055ae
   140005585:	call   QWORD PTR [rip+0x4bed]        # 0x14000a178
   14000558b:	mov    r8,r15
   14000558e:	xor    edx,edx
   140005590:	mov    rcx,rax
   140005593:	call   QWORD PTR [rip+0x4bd7]        # 0x14000a170
   140005599:	jmp    0x1400055ae
   14000559b:	lea    rdx,[rip+0x6b6e]        # 0x14000c110
   1400055a2:	mov    ecx,edi
   1400055a4:	mov    ebx,0x80070002
   1400055a9:	call   0x140002e20
   1400055ae:	call   QWORD PTR [rip+0x4bc4]        # 0x14000a178
   1400055b4:	mov    r8,r14
   1400055b7:	xor    edx,edx
   1400055b9:	mov    rcx,rax
   1400055bc:	call   QWORD PTR [rip+0x4bae]        # 0x14000a170
   1400055c2:	jmp    0x14000560a
   1400055c4:	call   QWORD PTR [rip+0x4b26]        # 0x14000a0f0
   1400055ca:	mov    ecx,eax
   1400055cc:	mov    ebp,0x80070000
   1400055d1:	movzx  eax,ax
   1400055d4:	or     eax,ebp
   1400055d6:	test   ecx,ecx
   1400055d8:	cmovle eax,ecx
   1400055db:	test   eax,eax
   1400055dd:	jns    0x1400055f1
   1400055df:	call   QWORD PTR [rip+0x4b0b]        # 0x14000a0f0
   1400055e5:	movzx  ebx,ax
   1400055e8:	or     ebx,ebp
   1400055ea:	test   eax,eax
   1400055ec:	cmovle ebx,eax
   1400055ef:	jmp    0x1400055f6
   1400055f1:	mov    ebx,0x80004005
   1400055f6:	mov    r8,rdi
   1400055f9:	lea    rdx,[rip+0x6ab0]        # 0x14000c0b0
   140005600:	mov    ecx,0x1
   140005605:	call   0x140002e20
   14000560a:	call   QWORD PTR [rip+0x4b68]        # 0x14000a178
   140005610:	mov    r8,rsi
   140005613:	xor    edx,edx
   140005615:	mov    rcx,rax
   140005618:	call   QWORD PTR [rip+0x4b52]        # 0x14000a170
   14000561e:	jmp    0x140005666
   140005620:	call   QWORD PTR [rip+0x4aca]        # 0x14000a0f0
   140005626:	mov    ecx,eax
   140005628:	mov    ebp,0x80070000
   14000562d:	movzx  eax,ax
   140005630:	or     eax,ebp
   140005632:	test   ecx,ecx
   140005634:	cmovle eax,ecx
   140005637:	test   eax,eax
   140005639:	jns    0x14000564d
   14000563b:	call   QWORD PTR [rip+0x4aaf]        # 0x14000a0f0
   140005641:	movzx  ebx,ax
   140005644:	or     ebx,ebp
   140005646:	test   eax,eax
   140005648:	cmovle ebx,eax
   14000564b:	jmp    0x140005652
   14000564d:	mov    ebx,0x80004005
   140005652:	mov    r8,r14
   140005655:	lea    rdx,[rip+0x6b14]        # 0x14000c170
   14000565c:	mov    ecx,0x1
   140005661:	call   0x140002e20
   140005666:	mov    eax,ebx
   140005668:	mov    rbx,QWORD PTR [rsp+0x60]
   14000566d:	mov    rbp,QWORD PTR [rsp+0x68]
   140005672:	mov    rsi,QWORD PTR [rsp+0x70]
   140005677:	add    rsp,0x30
   14000567b:	pop    r15
   14000567d:	pop    r14
   14000567f:	pop    r13
   140005681:	pop    r12
   140005683:	pop    rdi
   140005684:	ret    
   140005685:	int3   
   140005686:	int3   
   140005687:	int3   
   140005688:	int3   
   140005689:	int3   
   14000568a:	int3   
   14000568b:	int3   
   14000568c:	mov    QWORD PTR [rsp+0x8],rbx
   140005691:	push   rbp
   140005692:	push   rdi
   140005693:	push   r12
   140005695:	push   r14
   140005697:	push   r15
   140005699:	mov    rbp,rsp
   14000569c:	sub    rsp,0x60
   1400056a0:	xor    ebx,ebx
   1400056a2:	mov    r15,r8
   1400056a5:	mov    r12,rdx
   1400056a8:	mov    edi,ecx
   1400056aa:	test   r8,r8
   1400056ad:	je     0x1400058cb
   1400056b3:	mov    rcx,rdx
   1400056b6:	call   0x140005188
   1400056bb:	test   eax,eax
   1400056bd:	je     0x1400058cb
   1400056c3:	test   edi,edi
   1400056c5:	jne    0x1400057a7
   1400056cb:	mov    r8,rcx
   1400056ce:	lea    r14,[rip+0x6aeb]        # 0x14000c1c0
   1400056d5:	mov    rdi,0xffffffff80000002
   1400056dc:	mov    rdx,r14
   1400056df:	mov    rcx,rdi
   1400056e2:	call   0x140004620
   1400056e7:	cmp    eax,0x1
   1400056ea:	jne    0x140005790
   1400056f0:	mov    QWORD PTR [rbp-0x8],rbx
   1400056f4:	mov    DWORD PTR [rbp+0x40],ebx
   1400056f7:	mov    DWORD PTR [rbp+0x48],0x4
   1400056fe:	mov    DWORD PTR [rbp-0x10],ebx
   140005701:	test   r14,r14
   140005704:	je     0x14000573b
   140005706:	lea    rax,[rbp-0x8]
   14000570a:	mov    r9d,0x20019
   140005710:	xor    r8d,r8d
   140005713:	mov    QWORD PTR [rsp+0x20],rax
   140005718:	mov    rdx,r14
   14000571b:	mov    rcx,rdi
   14000571e:	call   QWORD PTR [rip+0x4b54]        # 0x14000a278
   140005724:	test   eax,eax
   140005726:	jne    0x140005731
   140005728:	mov    rdi,QWORD PTR [rbp-0x8]
   14000572c:	test   rdi,rdi
   14000572f:	jne    0x14000573f
   140005731:	mov    ecx,eax
   140005733:	call   QWORD PTR [rip+0x49a7]        # 0x14000a0e0
   140005739:	jmp    0x140005790
   14000573b:	mov    QWORD PTR [rbp-0x8],rdi
   14000573f:	lea    rax,[rbp+0x48]
   140005743:	xor    r8d,r8d
   140005746:	mov    QWORD PTR [rsp+0x28],rax
   14000574b:	lea    r9,[rbp-0x10]
   14000574f:	lea    rax,[rbp+0x40]
   140005753:	mov    rdx,r12
   140005756:	mov    rcx,rdi
   140005759:	mov    QWORD PTR [rsp+0x20],rax
   14000575e:	call   QWORD PTR [rip+0x4b24]        # 0x14000a288
   140005764:	mov    edi,eax
   140005766:	test   eax,eax
   140005768:	jne    0x140005773
   14000576a:	cmp    DWORD PTR [rbp+0x48],0x4
   14000576e:	je     0x140005776
   140005770:	lea    edi,[rax+0xd]
   140005773:	mov    DWORD PTR [rbp+0x40],ebx
   140005776:	test   r14,r14
   140005779:	je     0x140005785
   14000577b:	mov    rcx,QWORD PTR [rbp-0x8]
   14000577f:	call   QWORD PTR [rip+0x4b1b]        # 0x14000a2a0
   140005785:	mov    ecx,edi
   140005787:	call   QWORD PTR [rip+0x4953]        # 0x14000a0e0
   14000578d:	mov    ebx,DWORD PTR [rbp+0x40]
   140005790:	mov    DWORD PTR [r15],ebx
   140005793:	mov    eax,0x9
   140005798:	cmp    eax,ebx
   14000579a:	sbb    ebx,ebx
   14000579c:	and    ebx,0x8030000c
   1400057a2:	jmp    0x1400058c7
   1400057a7:	mov    ecx,DWORD PTR [r15]
   1400057aa:	mov    eax,0x9
   1400057af:	cmp    ecx,eax
   1400057b1:	ja     0x1400058c2
   1400057b7:	lea    rax,[rbp+0x40]
   1400057bb:	mov    DWORD PTR [rbp+0x40],ecx
   1400057be:	test   rax,rax
   1400057c1:	jne    0x1400057d1
   1400057c3:	lea    ecx,[rax+0x57]
   1400057c6:	call   QWORD PTR [rip+0x4914]        # 0x14000a0e0
   1400057cc:	jmp    0x140005890
   1400057d1:	lea    r14,[rip+0x69e8]        # 0x14000c1c0
   1400057d8:	xor    r8d,r8d
   1400057db:	mov    rcx,0xffffffff80000002
   1400057e2:	test   r14,r14
   1400057e5:	je     0x14000585a
   1400057e7:	lea    rax,[rbp+0x48]
   1400057eb:	mov    QWORD PTR [rbp-0x8],rbx
   1400057ef:	mov    QWORD PTR [rsp+0x40],rax
   1400057f4:	lea    r9,[rip+0x5d9d]        # 0x14000b598
   1400057fb:	lea    rax,[rbp-0x8]
   1400057ff:	mov    DWORD PTR [rbp+0x48],ebx
   140005802:	mov    QWORD PTR [rsp+0x38],rax
   140005807:	mov    rdx,r14
   14000580a:	mov    QWORD PTR [rsp+0x30],rbx
   14000580f:	mov    DWORD PTR [rsp+0x28],0x20006
   140005817:	mov    DWORD PTR [rsp+0x20],ebx
   14000581b:	call   QWORD PTR [rip+0x4a5f]        # 0x14000a280
   140005821:	mov    edi,eax
   140005823:	test   eax,eax
   140005825:	jne    0x14000587c
   140005827:	mov    rcx,QWORD PTR [rbp-0x8]
   14000582b:	lea    rax,[rbp+0x40]
   14000582f:	mov    DWORD PTR [rsp+0x28],0x4
   140005837:	lea    r9d,[rdi+0x4]
   14000583b:	xor    r8d,r8d
   14000583e:	mov    QWORD PTR [rsp+0x20],rax
   140005843:	mov    rdx,r12
   140005846:	call   QWORD PTR [rip+0x4a5c]        # 0x14000a2a8
   14000584c:	mov    rcx,QWORD PTR [rbp-0x8]
   140005850:	mov    edi,eax
   140005852:	call   QWORD PTR [rip+0x4a48]        # 0x14000a2a0
   140005858:	jmp    0x14000587c
   14000585a:	lea    rax,[rbp+0x40]
   14000585e:	mov    DWORD PTR [rsp+0x28],0x4
   140005866:	mov    r9d,0x4
   14000586c:	mov    QWORD PTR [rsp+0x20],rax
   140005871:	mov    rdx,r12
   140005874:	call   QWORD PTR [rip+0x4a2e]        # 0x14000a2a8
   14000587a:	mov    edi,eax
   14000587c:	mov    ecx,edi
   14000587e:	call   QWORD PTR [rip+0x485c]        # 0x14000a0e0
   140005884:	test   edi,edi
   140005886:	mov    eax,ebx
   140005888:	sete   al
   14000588b:	cmp    eax,0x1
   14000588e:	je     0x1400058c7
   140005890:	call   QWORD PTR [rip+0x485a]        # 0x14000a0f0
   140005896:	movzx  ecx,ax
   140005899:	mov    edi,0x80070000
   14000589e:	or     ecx,edi
   1400058a0:	test   eax,eax
   1400058a2:	cmovle ecx,eax
   1400058a5:	test   ecx,ecx
   1400058a7:	jns    0x1400058bb
   1400058a9:	call   QWORD PTR [rip+0x4841]        # 0x14000a0f0
   1400058af:	movzx  ebx,ax
   1400058b2:	or     ebx,edi
   1400058b4:	test   eax,eax
   1400058b6:	cmovle ebx,eax
   1400058b9:	jmp    0x1400058c7
   1400058bb:	mov    ebx,0x80004005
   1400058c0:	jmp    0x1400058c7
   1400058c2:	mov    ebx,0x80070057
   1400058c7:	mov    eax,ebx
   1400058c9:	jmp    0x1400058d0
   1400058cb:	mov    eax,0x80070057
   1400058d0:	mov    rbx,QWORD PTR [rsp+0x90]
   1400058d8:	add    rsp,0x60
   1400058dc:	pop    r15
   1400058de:	pop    r14
   1400058e0:	pop    r12
   1400058e2:	pop    rdi
   1400058e3:	pop    rbp
   1400058e4:	ret    
   1400058e5:	int3   
   1400058e6:	int3   
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	mov    QWORD PTR [rsp+0x20],rbx
   1400058f1:	push   rdi
   1400058f2:	sub    rsp,0x50
   1400058f6:	lea    rax,[rsp+0x60]
   1400058fb:	mov    DWORD PTR [rsp+0x60],ecx
   1400058ff:	xor    ebx,ebx
   140005901:	test   rax,rax
   140005904:	jne    0x140005914
   140005906:	lea    ecx,[rbx+0x57]
   140005909:	call   QWORD PTR [rip+0x47d1]        # 0x14000a0e0
   14000590f:	jmp    0x1400059da
   140005914:	lea    rdx,[rip+0x69b5]        # 0x14000c2d0
   14000591b:	xor    r8d,r8d
   14000591e:	mov    rcx,0xffffffff80000002
   140005925:	test   rdx,rdx
   140005928:	je     0x1400059a2
   14000592a:	lea    rax,[rsp+0x68]
   14000592f:	mov    QWORD PTR [rsp+0x70],rbx
   140005934:	mov    QWORD PTR [rsp+0x40],rax
   140005939:	lea    r9,[rip+0x5c58]        # 0x14000b598
   140005940:	lea    rax,[rsp+0x70]
   140005945:	mov    DWORD PTR [rsp+0x68],ebx
   140005949:	mov    QWORD PTR [rsp+0x38],rax
   14000594e:	mov    QWORD PTR [rsp+0x30],rbx
   140005953:	mov    DWORD PTR [rsp+0x28],0x20006
   14000595b:	mov    DWORD PTR [rsp+0x20],ebx
   14000595f:	call   QWORD PTR [rip+0x491b]        # 0x14000a280
   140005965:	mov    edi,eax
   140005967:	test   eax,eax
   140005969:	jne    0x1400059c6
   14000596b:	mov    rcx,QWORD PTR [rsp+0x70]
   140005970:	lea    r9d,[rax+0x4]
   140005974:	lea    rax,[rsp+0x60]
   140005979:	mov    DWORD PTR [rsp+0x28],r9d
   14000597e:	xor    r8d,r8d
   140005981:	mov    QWORD PTR [rsp+0x20],rax
   140005986:	lea    rdx,[rip+0x692b]        # 0x14000c2b8
   14000598d:	call   QWORD PTR [rip+0x4915]        # 0x14000a2a8
   140005993:	mov    rcx,QWORD PTR [rsp+0x70]
   140005998:	mov    edi,eax
   14000599a:	call   QWORD PTR [rip+0x4900]        # 0x14000a2a0
   1400059a0:	jmp    0x1400059c6
   1400059a2:	mov    r9d,0x4
   1400059a8:	lea    rax,[rsp+0x60]
   1400059ad:	mov    DWORD PTR [rsp+0x28],r9d
   1400059b2:	lea    rdx,[rip+0x68ff]        # 0x14000c2b8
   1400059b9:	mov    QWORD PTR [rsp+0x20],rax
   1400059be:	call   QWORD PTR [rip+0x48e4]        # 0x14000a2a8
   1400059c4:	mov    edi,eax
   1400059c6:	mov    ecx,edi
   1400059c8:	call   QWORD PTR [rip+0x4712]        # 0x14000a0e0
   1400059ce:	test   edi,edi
   1400059d0:	mov    eax,ebx
   1400059d2:	sete   al
   1400059d5:	cmp    eax,0x1
   1400059d8:	je     0x140005a0c
   1400059da:	call   QWORD PTR [rip+0x4710]        # 0x14000a0f0
   1400059e0:	mov    ecx,eax
   1400059e2:	mov    edi,0x80070000
   1400059e7:	movzx  eax,ax
   1400059ea:	or     eax,edi
   1400059ec:	test   ecx,ecx
   1400059ee:	cmovle eax,ecx
   1400059f1:	test   eax,eax
   1400059f3:	jns    0x140005a07
   1400059f5:	call   QWORD PTR [rip+0x46f5]        # 0x14000a0f0
   1400059fb:	movzx  ebx,ax
   1400059fe:	or     ebx,edi
   140005a00:	test   eax,eax
   140005a02:	cmovle ebx,eax
   140005a05:	jmp    0x140005a0c
   140005a07:	mov    ebx,0x80004005
   140005a0c:	mov    eax,ebx
   140005a0e:	mov    rbx,QWORD PTR [rsp+0x78]
   140005a13:	add    rsp,0x50
   140005a17:	pop    rdi
   140005a18:	ret    
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	int3   
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	mov    rax,rsp
   140005a23:	mov    QWORD PTR [rax+0x8],rbx
   140005a27:	mov    QWORD PTR [rax+0x10],rsi
   140005a2b:	mov    QWORD PTR [rax+0x18],rdi
   140005a2f:	push   rbp
   140005a30:	push   r12
   140005a32:	push   r13
   140005a34:	push   r14
   140005a36:	push   r15
   140005a38:	lea    rbp,[rax-0x4f]
   140005a3c:	sub    rsp,0xa0
   140005a43:	xor    ebx,ebx
   140005a45:	mov    r13,r8
   140005a48:	mov    r15,rdx
   140005a4b:	mov    QWORD PTR [rbp-0x39],rbx
   140005a4f:	mov    rsi,rcx
   140005a52:	xor    edx,edx
   140005a54:	lea    rcx,[rbp-0x31]
   140005a58:	mov    r12,r9
   140005a5b:	lea    r8d,[rbx+0x20]
   140005a5f:	call   0x140009c86
   140005a64:	mov    rdi,QWORD PTR [rbp+0x77]
   140005a68:	lea    r8,[rbp-0x39]
   140005a6c:	mov    rdx,r15
   140005a6f:	mov    rcx,rsi
   140005a72:	lea    r14,[rdi+0x4]
   140005a76:	mov    DWORD PTR [rdi],ebx
   140005a78:	mov    DWORD PTR [r14],ebx
   140005a7b:	mov    DWORD PTR [rdi+0x8],ebx
   140005a7e:	call   QWORD PTR [rip+0x45a4]        # 0x14000a028
   140005a84:	xor    ecx,ecx
   140005a86:	mov    ebx,eax
   140005a88:	test   eax,eax
   140005a8a:	js     0x140005ba8
   140005a90:	cmp    eax,0x1
   140005a93:	je     0x140005b9e
   140005a99:	lea    rax,[rbp+0x77]
   140005a9d:	mov    DWORD PTR [rbp+0x77],ecx
   140005aa0:	mov    QWORD PTR [rsp+0x38],rax
   140005aa5:	lea    r8,[rip+0x69a4]        # 0x14000c450
   140005aac:	mov    QWORD PTR [rsp+0x30],rcx
   140005ab1:	lea    rax,[rip+0x6dc0]        # 0x14000c878
   140005ab8:	mov    DWORD PTR [rsp+0x28],0x2
   140005ac0:	lea    rdx,[rbp-0x39]
   140005ac4:	mov    rcx,rsi
   140005ac7:	mov    QWORD PTR [rsp+0x20],rax
   140005acc:	xor    r9d,r9d
   140005acf:	call   QWORD PTR [rip+0x4573]        # 0x14000a048
   140005ad5:	xor    ecx,ecx
   140005ad7:	mov    ebx,eax
   140005ad9:	test   eax,eax
   140005adb:	js     0x140005b0a
   140005add:	mov    eax,DWORD PTR [rbp+0x77]
   140005ae0:	lea    r8,[rip+0x6979]        # 0x14000c460
   140005ae7:	mov    QWORD PTR [rsp+0x28],r14
   140005aec:	lea    rdx,[rbp-0x39]
   140005af0:	mov    QWORD PTR [rsp+0x20],rcx
   140005af5:	xor    r9d,r9d
   140005af8:	mov    rcx,rsi
   140005afb:	mov    DWORD PTR [rdi],eax
   140005afd:	call   QWORD PTR [rip+0x457d]        # 0x14000a080
   140005b03:	mov    ebx,eax
   140005b05:	jmp    0x140005b96
   140005b0a:	mov    edi,0x80300008
   140005b0f:	cmp    eax,edi
   140005b11:	jne    0x140005b98
   140005b17:	xor    edx,edx
   140005b19:	mov    DWORD PTR [rbp-0x11],ecx
   140005b1c:	lea    rcx,[rbp-0x9]
   140005b20:	lea    r8d,[rdx+0x30]
   140005b24:	call   0x140009c86
   140005b29:	lea    rdx,[rip+0x6920]        # 0x14000c450
   140005b30:	mov    QWORD PTR [rbp-0x1],r13
   140005b34:	mov    rcx,r15
   140005b37:	mov    QWORD PTR [rbp-0x9],r12
   140005b3b:	call   0x140004c74
   140005b40:	mov    rcx,QWORD PTR [rbp+0x7f]
   140005b44:	lea    r8,[rbp-0x11]
   140005b48:	mov    QWORD PTR [rbp+0x17],rax
   140005b4c:	mov    edx,edi
   140005b4e:	lea    rax,[rip+0x6933]        # 0x14000c488
   140005b55:	mov    QWORD PTR [rbp+0x7],rax
   140005b59:	lea    rax,[rip+0x6968]        # 0x14000c4c8
   140005b60:	mov    QWORD PTR [rbp+0xf],rax
   140005b64:	call   QWORD PTR [rip+0x452e]        # 0x14000a098
   140005b6a:	xor    ebx,ebx
   140005b6c:	lea    rdx,[rip+0x696d]        # 0x14000c4e0
   140005b73:	lea    ecx,[rbx+0x1]
   140005b76:	call   0x140002e20
   140005b7b:	cmp    QWORD PTR [rbp+0x17],rbx
   140005b7f:	je     0x140005b9e
   140005b81:	call   QWORD PTR [rip+0x45f1]        # 0x14000a178
   140005b87:	mov    r8,QWORD PTR [rbp+0x17]
   140005b8b:	xor    edx,edx
   140005b8d:	mov    rcx,rax
   140005b90:	call   QWORD PTR [rip+0x45da]        # 0x14000a170
   140005b96:	xor    ecx,ecx
   140005b98:	cmp    ebx,0x1
   140005b9b:	cmove  ebx,ecx
   140005b9e:	lea    rcx,[rbp-0x39]
   140005ba2:	call   QWORD PTR [rip+0x4500]        # 0x14000a0a8
   140005ba8:	lea    r11,[rsp+0xa0]
   140005bb0:	mov    eax,ebx
   140005bb2:	mov    rbx,QWORD PTR [r11+0x30]
   140005bb6:	mov    rsi,QWORD PTR [r11+0x38]
   140005bba:	mov    rdi,QWORD PTR [r11+0x40]
   140005bbe:	mov    rsp,r11
   140005bc1:	pop    r15
   140005bc3:	pop    r14
   140005bc5:	pop    r13
   140005bc7:	pop    r12
   140005bc9:	pop    rbp
   140005bca:	ret    
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	int3   
   140005bcf:	int3   
   140005bd0:	int3   
   140005bd1:	int3   
   140005bd2:	int3   
   140005bd3:	int3   
   140005bd4:	mov    QWORD PTR [rsp+0x10],rbx
   140005bd9:	mov    QWORD PTR [rsp+0x18],rsi
   140005bde:	mov    QWORD PTR [rsp+0x20],rdi
   140005be3:	push   rbp
   140005be4:	push   r12
   140005be6:	push   r13
   140005be8:	push   r14
   140005bea:	push   r15
   140005bec:	mov    rbp,rsp
   140005bef:	sub    rsp,0x40
   140005bf3:	xor    r14d,r14d
   140005bf6:	mov    r15,r9
   140005bf9:	mov    rdi,r8
   140005bfc:	mov    rsi,rdx
   140005bff:	mov    r13,rcx
   140005c02:	mov    QWORD PTR [rbp-0x10],r14
   140005c06:	mov    r12d,r14d
   140005c09:	mov    DWORD PTR [rbp+0x30],r14d
   140005c0d:	cmp    r14w,WORD PTR [rcx]
   140005c11:	je     0x140005d71
   140005c17:	mov    rcx,rdx
   140005c1a:	call   0x140005188
   140005c1f:	test   eax,eax
   140005c21:	je     0x140005d71
   140005c27:	test   rdi,rdi
   140005c2a:	je     0x140005d71
   140005c30:	test   r15,r15
   140005c33:	je     0x140005d71
   140005c39:	mov    QWORD PTR [rdi],r14
   140005c3c:	mov    DWORD PTR [rdi+0x8],r14d
   140005c40:	test   rcx,rcx
   140005c43:	je     0x140005c54
   140005c45:	lea    rdx,[rbp+0x30]
   140005c49:	call   0x1400051fc
   140005c4e:	mov    r12d,DWORD PTR [rbp+0x30]
   140005c52:	jmp    0x140005c57
   140005c54:	mov    eax,r14d
   140005c57:	cmp    eax,0x1
   140005c5a:	jne    0x140005d71
   140005c60:	mov    r8,r15
   140005c63:	lea    rcx,[rbp-0x10]
   140005c67:	mov    rdx,r13
   140005c6a:	call   QWORD PTR [rip+0x43c8]        # 0x14000a038
   140005c70:	mov    ebx,eax
   140005c72:	test   eax,eax
   140005c74:	js     0x140005d6d
   140005c7a:	cmp    DWORD PTR [r15],r14d
   140005c7d:	jl     0x140005d6d
   140005c83:	cmp    r12d,0x5
   140005c87:	jne    0x140005cf8
   140005c89:	and    QWORD PTR [rbp+0x30],r14
   140005c8d:	lea    rdx,[rip+0x68ec]        # 0x14000c580
   140005c94:	mov    r8,rsi
   140005c97:	lea    rcx,[rbp+0x30]
   140005c9b:	call   0x140004b20
   140005ca0:	mov    ebx,eax
   140005ca2:	test   eax,eax
   140005ca4:	js     0x140005d5a
   140005caa:	mov    r12,QWORD PTR [rbp+0x30]
   140005cae:	lea    rcx,[rbp-0x10]
   140005cb2:	mov    rdx,r12
   140005cb5:	mov    QWORD PTR [rsp+0x28],r15
   140005cba:	mov    r9,r13
   140005cbd:	mov    QWORD PTR [rsp+0x20],rdi
   140005cc2:	mov    r8,rsi
   140005cc5:	call   0x140005a20
   140005cca:	mov    ebx,eax
   140005ccc:	test   eax,eax
   140005cce:	js     0x140005cdf
   140005cd0:	mov    eax,0x1
   140005cd5:	cmp    ebx,eax
   140005cd7:	je     0x140005cdf
   140005cd9:	mov    r14d,eax
   140005cdc:	mov    DWORD PTR [rdi+0x8],eax
   140005cdf:	test   r12,r12
   140005ce2:	je     0x140005cf8
   140005ce4:	call   QWORD PTR [rip+0x448e]        # 0x14000a178
   140005cea:	mov    r8,r12
   140005ced:	xor    edx,edx
   140005cef:	mov    rcx,rax
   140005cf2:	call   QWORD PTR [rip+0x4478]        # 0x14000a170
   140005cf8:	test   ebx,ebx
   140005cfa:	js     0x140005d5a
   140005cfc:	test   r14d,r14d
   140005cff:	jne    0x140005d5a
   140005d01:	and    QWORD PTR [rbp+0x30],0x0
   140005d06:	lea    rdx,[rip+0x6953]        # 0x14000c660
   140005d0d:	mov    r8,rsi
   140005d10:	lea    rcx,[rbp+0x30]
   140005d14:	call   0x140004b20
   140005d19:	mov    ebx,eax
   140005d1b:	test   eax,eax
   140005d1d:	js     0x140005d5a
   140005d1f:	mov    QWORD PTR [rsp+0x28],r15
   140005d24:	lea    rcx,[rbp-0x10]
   140005d28:	mov    QWORD PTR [rsp+0x20],rdi
   140005d2d:	mov    r9,r13
   140005d30:	mov    rdi,QWORD PTR [rbp+0x30]
   140005d34:	mov    r8,rsi
   140005d37:	mov    rdx,rdi
   140005d3a:	call   0x140005a20
   140005d3f:	mov    ebx,eax
   140005d41:	test   rdi,rdi
   140005d44:	je     0x140005d5a
   140005d46:	call   QWORD PTR [rip+0x442c]        # 0x14000a178
   140005d4c:	mov    r8,rdi
   140005d4f:	xor    edx,edx
   140005d51:	mov    rcx,rax
   140005d54:	call   QWORD PTR [rip+0x4416]        # 0x14000a170
   140005d5a:	lea    rcx,[rbp-0x10]
   140005d5e:	call   QWORD PTR [rip+0x42dc]        # 0x14000a040
   140005d64:	test   eax,eax
   140005d66:	jns    0x140005d6d
   140005d68:	test   ebx,ebx
   140005d6a:	cmovns ebx,eax
   140005d6d:	mov    eax,ebx
   140005d6f:	jmp    0x140005d76
   140005d71:	mov    eax,0x80070057
   140005d76:	lea    r11,[rsp+0x40]
   140005d7b:	mov    rbx,QWORD PTR [r11+0x38]
   140005d7f:	mov    rsi,QWORD PTR [r11+0x40]
   140005d83:	mov    rdi,QWORD PTR [r11+0x48]
   140005d87:	mov    rsp,r11
   140005d8a:	pop    r15
   140005d8c:	pop    r14
   140005d8e:	pop    r13
   140005d90:	pop    r12
   140005d92:	pop    rbp
   140005d93:	ret    
   140005d94:	int3   
   140005d95:	int3   
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	mov    rax,rsp
   140005d9f:	mov    QWORD PTR [rax+0x10],rbx
   140005da3:	mov    QWORD PTR [rax+0x18],rbp
   140005da7:	push   rdi
   140005da8:	sub    rsp,0x50
   140005dac:	and    QWORD PTR [rax-0x38],0x0
   140005db1:	mov    rdi,rdx
   140005db4:	xor    edx,edx
   140005db6:	mov    rbp,rcx
   140005db9:	lea    rcx,[rax-0x30]
   140005dbd:	lea    r8d,[rdx+0x20]
   140005dc1:	call   0x140009c86
   140005dc6:	and    QWORD PTR [rsp+0x60],0x0
   140005dcc:	test   rbp,rbp
   140005dcf:	je     0x140005e69
   140005dd5:	mov    rcx,rdi
   140005dd8:	call   0x140005188
   140005ddd:	test   eax,eax
   140005ddf:	je     0x140005e69
   140005de5:	mov    r8,rdi
   140005de8:	lea    rdx,[rip+0x6949]        # 0x14000c738
   140005def:	lea    rcx,[rsp+0x60]
   140005df4:	call   0x140004b20
   140005df9:	mov    ebx,eax
   140005dfb:	test   eax,eax
   140005dfd:	js     0x140005e47
   140005dff:	mov    rdx,QWORD PTR [rsp+0x60]
   140005e04:	lea    r8,[rsp+0x20]
   140005e09:	mov    rcx,rbp
   140005e0c:	call   QWORD PTR [rip+0x4216]        # 0x14000a028
   140005e12:	mov    ebx,eax
   140005e14:	test   eax,eax
   140005e16:	js     0x140005e47
   140005e18:	cmp    eax,0x1
   140005e1b:	je     0x140005e47
   140005e1d:	lea    rcx,[rsp+0x20]
   140005e22:	call   QWORD PTR [rip+0x4280]        # 0x14000a0a8
   140005e28:	mov    rdx,rdi
   140005e2b:	mov    rcx,rbp
   140005e2e:	call   0x140005e84
   140005e33:	mov    ebx,eax
   140005e35:	test   eax,eax
   140005e37:	js     0x140005e47
   140005e39:	mov    rdx,rdi
   140005e3c:	mov    rcx,rbp
   140005e3f:	call   QWORD PTR [rip+0x420b]        # 0x14000a050
   140005e45:	mov    ebx,eax
   140005e47:	cmp    QWORD PTR [rsp+0x60],0x0
   140005e4d:	je     0x140005e65
   140005e4f:	call   QWORD PTR [rip+0x4323]        # 0x14000a178
   140005e55:	mov    r8,QWORD PTR [rsp+0x60]
   140005e5a:	xor    edx,edx
   140005e5c:	mov    rcx,rax
   140005e5f:	call   QWORD PTR [rip+0x430b]        # 0x14000a170
   140005e65:	mov    eax,ebx
   140005e67:	jmp    0x140005e6e
   140005e69:	mov    eax,0x80070057
   140005e6e:	mov    rbx,QWORD PTR [rsp+0x68]
   140005e73:	mov    rbp,QWORD PTR [rsp+0x70]
   140005e78:	add    rsp,0x50
   140005e7c:	pop    rdi
   140005e7d:	ret    
   140005e7e:	int3   
   140005e7f:	int3   
   140005e80:	int3   
   140005e81:	int3   
   140005e82:	int3   
   140005e83:	int3   
   140005e84:	mov    QWORD PTR [rsp+0x10],rbx
   140005e89:	push   rdi
   140005e8a:	sub    rsp,0x60
   140005e8e:	mov    rbx,rdx
   140005e91:	mov    rdi,rcx
   140005e94:	test   rcx,rcx
   140005e97:	je     0x140005f8d
   140005e9d:	mov    rcx,rdx
   140005ea0:	call   0x140005188
   140005ea5:	test   eax,eax
   140005ea7:	je     0x140005f8d
   140005ead:	mov    r8,rcx
   140005eb0:	lea    rdx,[rip+0x6881]        # 0x14000c738
   140005eb7:	lea    rcx,[rsp+0x70]
   140005ebc:	call   0x140004b20
   140005ec1:	mov    ebx,eax
   140005ec3:	test   eax,eax
   140005ec5:	js     0x140005f89
   140005ecb:	and    QWORD PTR [rsp+0x30],0x0
   140005ed1:	lea    rcx,[rsp+0x38]
   140005ed6:	xor    edx,edx
   140005ed8:	lea    r8d,[rdx+0x20]
   140005edc:	call   0x140009c86
   140005ee1:	mov    rdx,QWORD PTR [rsp+0x70]
   140005ee6:	lea    r8,[rsp+0x30]
   140005eeb:	mov    rcx,rdi
   140005eee:	call   QWORD PTR [rip+0x4134]        # 0x14000a028
   140005ef4:	mov    ebx,eax
   140005ef6:	test   eax,eax
   140005ef8:	js     0x140005f6b
   140005efa:	cmp    eax,0x1
   140005efd:	je     0x140005f6b
   140005eff:	mov    rcx,rdi
   140005f02:	call   QWORD PTR [rip+0x4150]        # 0x14000a058
   140005f08:	mov    ebx,eax
   140005f0a:	test   eax,eax
   140005f0c:	js     0x140005f60
   140005f0e:	lea    rax,[rip+0x68bb]        # 0x14000c7d0
   140005f15:	mov    r9d,0x3
   140005f1b:	lea    r8,[rip+0xa14e]        # 0x140010070
   140005f22:	mov    QWORD PTR [rsp+0x20],rax
   140005f27:	lea    rdx,[rsp+0x30]
   140005f2c:	mov    rcx,rdi
   140005f2f:	call   QWORD PTR [rip+0x412b]        # 0x14000a060
   140005f35:	lea    rcx,[rsp+0x30]
   140005f3a:	mov    ebx,eax
   140005f3c:	call   QWORD PTR [rip+0x4166]        # 0x14000a0a8
   140005f42:	test   ebx,ebx
   140005f44:	js     0x140005f55
   140005f46:	mov    rcx,rdi
   140005f49:	call   QWORD PTR [rip+0x4119]        # 0x14000a068
   140005f4f:	mov    ebx,eax
   140005f51:	test   eax,eax
   140005f53:	jns    0x140005f6b
   140005f55:	mov    rcx,rdi
   140005f58:	call   QWORD PTR [rip+0x4112]        # 0x14000a070
   140005f5e:	jmp    0x140005f6b
   140005f60:	lea    rcx,[rsp+0x30]
   140005f65:	call   QWORD PTR [rip+0x413d]        # 0x14000a0a8
   140005f6b:	cmp    QWORD PTR [rsp+0x70],0x0
   140005f71:	je     0x140005f89
   140005f73:	call   QWORD PTR [rip+0x41ff]        # 0x14000a178
   140005f79:	mov    r8,QWORD PTR [rsp+0x70]
   140005f7e:	xor    edx,edx
   140005f80:	mov    rcx,rax
   140005f83:	call   QWORD PTR [rip+0x41e7]        # 0x14000a170
   140005f89:	mov    eax,ebx
   140005f8b:	jmp    0x140005f92
   140005f8d:	mov    eax,0x80070057
   140005f92:	mov    rbx,QWORD PTR [rsp+0x78]
   140005f97:	add    rsp,0x60
   140005f9b:	pop    rdi
   140005f9c:	ret    
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	int3   
   140005fa1:	int3   
   140005fa2:	int3   
   140005fa3:	int3   
   140005fa4:	mov    QWORD PTR [rsp+0x8],rbx
   140005fa9:	mov    QWORD PTR [rsp+0x10],rbp
   140005fae:	mov    QWORD PTR [rsp+0x18],rsi
   140005fb3:	push   rdi
   140005fb4:	push   r14
   140005fb6:	push   r15
   140005fb8:	sub    rsp,0x20
   140005fbc:	xor    edi,edi
   140005fbe:	mov    rbp,r8
   140005fc1:	mov    r14,rdx
   140005fc4:	mov    r15,rcx
   140005fc7:	test   r8,r8
   140005fca:	jne    0x140005fd6
   140005fcc:	mov    eax,0x80070057
   140005fd1:	jmp    0x14000608a
   140005fd6:	lea    rcx,[rip+0x6833]        # 0x14000c810
   140005fdd:	call   0x140003154
   140005fe2:	mov    rsi,rax
   140005fe5:	test   rax,rax
   140005fe8:	je     0x140006031
   140005fea:	xor    edx,edx
   140005fec:	mov    rcx,rax
   140005fef:	lea    r8d,[rdx+0x8]
   140005ff3:	call   QWORD PTR [rip+0x41cf]        # 0x14000a1c8
   140005ff9:	mov    rdi,rax
   140005ffc:	test   rax,rax
   140005fff:	je     0x140006031
   140006001:	lea    rdx,[rip+0x6850]        # 0x14000c858
   140006008:	mov    rcx,rax
   14000600b:	call   QWORD PTR [rip+0x41a7]        # 0x14000a1b8
   140006011:	mov    rbx,rax
   140006014:	test   rax,rax
   140006017:	je     0x140006031
   140006019:	mov    rcx,rax
   14000601c:	call   QWORD PTR [rip+0x44b6]        # 0x14000a4d8
   140006022:	mov    r8,rbp
   140006025:	mov    rdx,r14
   140006028:	mov    rcx,r15
   14000602b:	call   rbx
   14000602d:	mov    ebx,eax
   14000602f:	jmp    0x140006061
   140006031:	call   QWORD PTR [rip+0x40b9]        # 0x14000a0f0
   140006037:	movzx  ecx,ax
   14000603a:	mov    ebp,0x80070000
   14000603f:	or     ecx,ebp
   140006041:	test   eax,eax
   140006043:	cmovle ecx,eax
   140006046:	test   ecx,ecx
   140006048:	jns    0x14000605c
   14000604a:	call   QWORD PTR [rip+0x40a0]        # 0x14000a0f0
   140006050:	movzx  ebx,ax
   140006053:	or     ebx,ebp
   140006055:	test   eax,eax
   140006057:	cmovle ebx,eax
   14000605a:	jmp    0x140006061
   14000605c:	mov    ebx,0x80004005
   140006061:	test   rdi,rdi
   140006064:	je     0x14000606f
   140006066:	mov    rcx,rdi
   140006069:	call   QWORD PTR [rip+0x4141]        # 0x14000a1b0
   14000606f:	test   rsi,rsi
   140006072:	je     0x140006088
   140006074:	call   QWORD PTR [rip+0x40fe]        # 0x14000a178
   14000607a:	mov    r8,rsi
   14000607d:	xor    edx,edx
   14000607f:	mov    rcx,rax
   140006082:	call   QWORD PTR [rip+0x40e8]        # 0x14000a170
   140006088:	mov    eax,ebx
   14000608a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000608f:	mov    rbp,QWORD PTR [rsp+0x48]
   140006094:	mov    rsi,QWORD PTR [rsp+0x50]
   140006099:	add    rsp,0x20
   14000609d:	pop    r15
   14000609f:	pop    r14
   1400060a1:	pop    rdi
   1400060a2:	ret    
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	rex push rbp
   1400060ae:	push   rbx
   1400060af:	push   rsi
   1400060b0:	push   rdi
   1400060b1:	push   r13
   1400060b3:	push   r14
   1400060b5:	mov    rbp,rsp
   1400060b8:	sub    rsp,0x58
   1400060bc:	xor    r13d,r13d
   1400060bf:	mov    rbx,rcx
   1400060c2:	mov    QWORD PTR [rbp+0x38],r13
   1400060c6:	mov    QWORD PTR [rbp+0x48],r13
   1400060ca:	test   rcx,rcx
   1400060cd:	je     0x1400066bb
   1400060d3:	cmp    r13w,WORD PTR [rcx]
   1400060d7:	je     0x1400066bb
   1400060dd:	lea    rcx,[rbp+0x48]
   1400060e1:	call   QWORD PTR [rip+0x4251]        # 0x14000a338
   1400060e7:	lea    rax,[rbp+0x38]
   1400060eb:	test   rax,rax
   1400060ee:	jne    0x1400060fa
   1400060f0:	mov    ebx,0x80070057
   1400060f5:	jmp    0x1400066b7
   1400060fa:	lea    r8,[rbp+0x38]
   1400060fe:	mov    rdx,rbx
   140006101:	lea    rcx,[rip+0x6790]        # 0x14000c898
   140006108:	call   0x1400042ec
   14000610d:	mov    rdi,QWORD PTR [rbp+0x38]
   140006111:	mov    ebx,eax
   140006113:	test   eax,eax
   140006115:	js     0x14000669e
   14000611b:	mov    r14,0xffffffff80000002
   140006122:	xor    r8d,r8d
   140006125:	mov    rcx,r14
   140006128:	mov    rdx,rdi
   14000612b:	call   0x140004620
   140006130:	test   eax,eax
   140006132:	lea    rax,[rbp+0x38]
   140006136:	jne    0x1400064c9
   14000613c:	mov    ecx,DWORD PTR [rbp+0x48]
   14000613f:	mov    DWORD PTR [rbp+0x38],ecx
   140006142:	test   rax,rax
   140006145:	jne    0x140006157
   140006147:	mov    ecx,0x57
   14000614c:	call   QWORD PTR [rip+0x3f8e]        # 0x14000a0e0
   140006152:	jmp    0x140006489
   140006157:	xor    r8d,r8d
   14000615a:	mov    esi,0x4
   14000615f:	mov    rcx,r14
   140006162:	test   rdi,rdi
   140006165:	je     0x1400061dd
   140006167:	lea    rax,[rbp+0x40]
   14000616b:	mov    QWORD PTR [rbp+0x50],r13
   14000616f:	mov    QWORD PTR [rsp+0x40],rax
   140006174:	lea    r9,[rip+0x541d]        # 0x14000b598
   14000617b:	lea    rax,[rbp+0x50]
   14000617f:	mov    DWORD PTR [rbp+0x40],r13d
   140006183:	mov    QWORD PTR [rsp+0x38],rax
   140006188:	mov    rdx,rdi
   14000618b:	mov    QWORD PTR [rsp+0x30],r13
   140006190:	mov    DWORD PTR [rsp+0x28],0x20006
   140006198:	mov    DWORD PTR [rsp+0x20],r13d
   14000619d:	call   QWORD PTR [rip+0x40dd]        # 0x14000a280
   1400061a3:	mov    r14d,eax
   1400061a6:	test   eax,eax
   1400061a8:	jne    0x1400061fd
   1400061aa:	mov    rcx,QWORD PTR [rbp+0x50]
   1400061ae:	lea    rax,[rbp+0x38]
   1400061b2:	mov    DWORD PTR [rsp+0x28],esi
   1400061b6:	lea    rdx,[rip+0x6703]        # 0x14000c8c0
   1400061bd:	mov    r9d,esi
   1400061c0:	mov    QWORD PTR [rsp+0x20],rax
   1400061c5:	xor    r8d,r8d
   1400061c8:	call   QWORD PTR [rip+0x40da]        # 0x14000a2a8
   1400061ce:	mov    rcx,QWORD PTR [rbp+0x50]
   1400061d2:	mov    r14d,eax
   1400061d5:	call   QWORD PTR [rip+0x40c5]        # 0x14000a2a0
   1400061db:	jmp    0x1400061fd
   1400061dd:	lea    rax,[rbp+0x38]
   1400061e1:	mov    DWORD PTR [rsp+0x28],esi
   1400061e5:	mov    r9d,esi
   1400061e8:	mov    QWORD PTR [rsp+0x20],rax
   1400061ed:	lea    rdx,[rip+0x66cc]        # 0x14000c8c0
   1400061f4:	call   QWORD PTR [rip+0x40ae]        # 0x14000a2a8
   1400061fa:	mov    r14d,eax
   1400061fd:	mov    ecx,r14d
   140006200:	call   QWORD PTR [rip+0x3eda]        # 0x14000a0e0
   140006206:	test   r14d,r14d
   140006209:	mov    eax,r13d
   14000620c:	sete   al
   14000620f:	test   eax,eax
   140006211:	je     0x140006489
   140006217:	mov    eax,DWORD PTR [rbp+0x4c]
   14000621a:	mov    DWORD PTR [rbp+0x38],eax
   14000621d:	lea    rax,[rbp+0x38]
   140006221:	test   rax,rax
   140006224:	je     0x140006147
   14000622a:	xor    r8d,r8d
   14000622d:	mov    rcx,0xffffffff80000002
   140006234:	test   rdi,rdi
   140006237:	je     0x1400062af
   140006239:	lea    rax,[rbp+0x40]
   14000623d:	mov    QWORD PTR [rbp+0x50],r13
   140006241:	mov    QWORD PTR [rsp+0x40],rax
   140006246:	lea    r9,[rip+0x534b]        # 0x14000b598
   14000624d:	lea    rax,[rbp+0x50]
   140006251:	mov    DWORD PTR [rbp+0x40],r13d
   140006255:	mov    QWORD PTR [rsp+0x38],rax
   14000625a:	mov    rdx,rdi
   14000625d:	mov    QWORD PTR [rsp+0x30],r13
   140006262:	mov    DWORD PTR [rsp+0x28],0x20006
   14000626a:	mov    DWORD PTR [rsp+0x20],r13d
   14000626f:	call   QWORD PTR [rip+0x400b]        # 0x14000a280
   140006275:	mov    r14d,eax
   140006278:	test   eax,eax
   14000627a:	jne    0x1400062cf
   14000627c:	mov    rcx,QWORD PTR [rbp+0x50]
   140006280:	lea    rax,[rbp+0x38]
   140006284:	mov    DWORD PTR [rsp+0x28],esi
   140006288:	lea    rdx,[rip+0x6649]        # 0x14000c8d8
   14000628f:	mov    r9d,esi
   140006292:	mov    QWORD PTR [rsp+0x20],rax
   140006297:	xor    r8d,r8d
   14000629a:	call   QWORD PTR [rip+0x4008]        # 0x14000a2a8
   1400062a0:	mov    rcx,QWORD PTR [rbp+0x50]
   1400062a4:	mov    r14d,eax
   1400062a7:	call   QWORD PTR [rip+0x3ff3]        # 0x14000a2a0
   1400062ad:	jmp    0x1400062cf
   1400062af:	lea    rax,[rbp+0x38]
   1400062b3:	mov    DWORD PTR [rsp+0x28],esi
   1400062b7:	mov    r9d,esi
   1400062ba:	mov    QWORD PTR [rsp+0x20],rax
   1400062bf:	lea    rdx,[rip+0x6612]        # 0x14000c8d8
   1400062c6:	call   QWORD PTR [rip+0x3fdc]        # 0x14000a2a8
   1400062cc:	mov    r14d,eax
   1400062cf:	mov    ecx,r14d
   1400062d2:	call   QWORD PTR [rip+0x3e08]        # 0x14000a0e0
   1400062d8:	test   r14d,r14d
   1400062db:	mov    eax,r13d
   1400062de:	sete   al
   1400062e1:	test   eax,eax
   1400062e3:	je     0x140006489
   1400062e9:	lea    rax,[rbp+0x38]
   1400062ed:	mov    DWORD PTR [rbp+0x38],r13d
   1400062f1:	test   rax,rax
   1400062f4:	je     0x140006147
   1400062fa:	xor    r8d,r8d
   1400062fd:	mov    rcx,0xffffffff80000002
   140006304:	test   rdi,rdi
   140006307:	je     0x14000637f
   140006309:	lea    rax,[rbp+0x40]
   14000630d:	mov    QWORD PTR [rbp+0x50],r13
   140006311:	mov    QWORD PTR [rsp+0x40],rax
   140006316:	lea    r9,[rip+0x527b]        # 0x14000b598
   14000631d:	lea    rax,[rbp+0x50]
   140006321:	mov    DWORD PTR [rbp+0x40],r13d
   140006325:	mov    QWORD PTR [rsp+0x38],rax
   14000632a:	mov    rdx,rdi
   14000632d:	mov    QWORD PTR [rsp+0x30],r13
   140006332:	mov    DWORD PTR [rsp+0x28],0x20006
   14000633a:	mov    DWORD PTR [rsp+0x20],r13d
   14000633f:	call   QWORD PTR [rip+0x3f3b]        # 0x14000a280
   140006345:	mov    r14d,eax
   140006348:	test   eax,eax
   14000634a:	jne    0x14000639f
   14000634c:	mov    rcx,QWORD PTR [rbp+0x50]
   140006350:	lea    rax,[rbp+0x38]
   140006354:	mov    DWORD PTR [rsp+0x28],esi
   140006358:	lea    rdx,[rip+0x6591]        # 0x14000c8f0
   14000635f:	mov    r9d,esi
   140006362:	mov    QWORD PTR [rsp+0x20],rax
   140006367:	xor    r8d,r8d
   14000636a:	call   QWORD PTR [rip+0x3f38]        # 0x14000a2a8
   140006370:	mov    rcx,QWORD PTR [rbp+0x50]
   140006374:	mov    r14d,eax
   140006377:	call   QWORD PTR [rip+0x3f23]        # 0x14000a2a0
   14000637d:	jmp    0x14000639f
   14000637f:	lea    rax,[rbp+0x38]
   140006383:	mov    DWORD PTR [rsp+0x28],esi
   140006387:	mov    r9d,esi
   14000638a:	mov    QWORD PTR [rsp+0x20],rax
   14000638f:	lea    rdx,[rip+0x655a]        # 0x14000c8f0
   140006396:	call   QWORD PTR [rip+0x3f0c]        # 0x14000a2a8
   14000639c:	mov    r14d,eax
   14000639f:	mov    ecx,r14d
   1400063a2:	call   QWORD PTR [rip+0x3d38]        # 0x14000a0e0
   1400063a8:	test   r14d,r14d
   1400063ab:	mov    eax,r13d
   1400063ae:	sete   al
   1400063b1:	test   eax,eax
   1400063b3:	je     0x140006489
   1400063b9:	lea    rax,[rbp+0x38]
   1400063bd:	mov    DWORD PTR [rbp+0x38],r13d
   1400063c1:	test   rax,rax
   1400063c4:	je     0x140006147
   1400063ca:	xor    r8d,r8d
   1400063cd:	mov    rcx,0xffffffff80000002
   1400063d4:	test   rdi,rdi
   1400063d7:	je     0x14000644f
   1400063d9:	lea    rax,[rbp+0x40]
   1400063dd:	mov    QWORD PTR [rbp+0x50],r13
   1400063e1:	mov    QWORD PTR [rsp+0x40],rax
   1400063e6:	lea    r9,[rip+0x51ab]        # 0x14000b598
   1400063ed:	lea    rax,[rbp+0x50]
   1400063f1:	mov    DWORD PTR [rbp+0x40],r13d
   1400063f5:	mov    QWORD PTR [rsp+0x38],rax
   1400063fa:	mov    rdx,rdi
   1400063fd:	mov    QWORD PTR [rsp+0x30],r13
   140006402:	mov    DWORD PTR [rsp+0x28],0x20006
   14000640a:	mov    DWORD PTR [rsp+0x20],r13d
   14000640f:	call   QWORD PTR [rip+0x3e6b]        # 0x14000a280
   140006415:	mov    r14d,eax
   140006418:	test   eax,eax
   14000641a:	jne    0x14000646f
   14000641c:	mov    rcx,QWORD PTR [rbp+0x50]
   140006420:	lea    rax,[rbp+0x38]
   140006424:	mov    DWORD PTR [rsp+0x28],esi
   140006428:	lea    rdx,[rip+0x64d1]        # 0x14000c900
   14000642f:	mov    r9d,esi
   140006432:	mov    QWORD PTR [rsp+0x20],rax
   140006437:	xor    r8d,r8d
   14000643a:	call   QWORD PTR [rip+0x3e68]        # 0x14000a2a8
   140006440:	mov    rcx,QWORD PTR [rbp+0x50]
   140006444:	mov    r14d,eax
   140006447:	call   QWORD PTR [rip+0x3e53]        # 0x14000a2a0
   14000644d:	jmp    0x14000646f
   14000644f:	lea    rax,[rbp+0x38]
   140006453:	mov    DWORD PTR [rsp+0x28],esi
   140006457:	mov    r9d,esi
   14000645a:	mov    QWORD PTR [rsp+0x20],rax
   14000645f:	lea    rdx,[rip+0x649a]        # 0x14000c900
   140006466:	call   QWORD PTR [rip+0x3e3c]        # 0x14000a2a8
   14000646c:	mov    r14d,eax
   14000646f:	mov    ecx,r14d
   140006472:	call   QWORD PTR [rip+0x3c68]        # 0x14000a0e0
   140006478:	test   r14d,r14d
   14000647b:	mov    eax,r13d
   14000647e:	sete   al
   140006481:	test   eax,eax
   140006483:	jne    0x14000669e
   140006489:	call   QWORD PTR [rip+0x3c61]        # 0x14000a0f0
   14000648f:	movzx  ecx,ax
   140006492:	mov    esi,0x80070000
   140006497:	or     ecx,esi
   140006499:	test   eax,eax
   14000649b:	cmovle ecx,eax
   14000649e:	test   ecx,ecx
   1400064a0:	jns    0x1400064b4
   1400064a2:	call   QWORD PTR [rip+0x3c48]        # 0x14000a0f0
   1400064a8:	movzx  ebx,ax
   1400064ab:	or     ebx,esi
   1400064ad:	test   eax,eax
   1400064af:	cmovle ebx,eax
   1400064b2:	jmp    0x1400064b9
   1400064b4:	mov    ebx,0x80004005
   1400064b9:	xor    r8d,r8d
   1400064bc:	mov    rdx,rdi
   1400064bf:	call   0x1400047f8
   1400064c4:	jmp    0x14000669e
   1400064c9:	mov    DWORD PTR [rbp+0x38],r13d
   1400064cd:	test   rax,rax
   1400064d0:	jne    0x1400064e2
   1400064d2:	mov    ecx,0x57
   1400064d7:	call   QWORD PTR [rip+0x3c03]        # 0x14000a0e0
   1400064dd:	jmp    0x14000666e
   1400064e2:	xor    r8d,r8d
   1400064e5:	mov    esi,0x4
   1400064ea:	mov    rcx,r14
   1400064ed:	test   rdi,rdi
   1400064f0:	je     0x140006568
   1400064f2:	lea    rax,[rbp+0x40]
   1400064f6:	mov    QWORD PTR [rbp+0x50],r13
   1400064fa:	mov    QWORD PTR [rsp+0x40],rax
   1400064ff:	lea    r9,[rip+0x5092]        # 0x14000b598
   140006506:	lea    rax,[rbp+0x50]
   14000650a:	mov    DWORD PTR [rbp+0x40],r13d
   14000650e:	mov    QWORD PTR [rsp+0x38],rax
   140006513:	mov    rdx,rdi
   140006516:	mov    QWORD PTR [rsp+0x30],r13
   14000651b:	mov    DWORD PTR [rsp+0x28],0x20006
   140006523:	mov    DWORD PTR [rsp+0x20],r13d
   140006528:	call   QWORD PTR [rip+0x3d52]        # 0x14000a280
   14000652e:	mov    r14d,eax
   140006531:	test   eax,eax
   140006533:	jne    0x140006588
   140006535:	mov    rcx,QWORD PTR [rbp+0x50]
   140006539:	lea    rax,[rbp+0x38]
   14000653d:	mov    DWORD PTR [rsp+0x28],esi
   140006541:	lea    rdx,[rip+0x63a8]        # 0x14000c8f0
   140006548:	mov    r9d,esi
   14000654b:	mov    QWORD PTR [rsp+0x20],rax
   140006550:	xor    r8d,r8d
   140006553:	call   QWORD PTR [rip+0x3d4f]        # 0x14000a2a8
   140006559:	mov    rcx,QWORD PTR [rbp+0x50]
   14000655d:	mov    r14d,eax
   140006560:	call   QWORD PTR [rip+0x3d3a]        # 0x14000a2a0
   140006566:	jmp    0x140006588
   140006568:	lea    rax,[rbp+0x38]
   14000656c:	mov    DWORD PTR [rsp+0x28],esi
   140006570:	mov    r9d,esi
   140006573:	mov    QWORD PTR [rsp+0x20],rax
   140006578:	lea    rdx,[rip+0x6371]        # 0x14000c8f0
   14000657f:	call   QWORD PTR [rip+0x3d23]        # 0x14000a2a8
   140006585:	mov    r14d,eax
   140006588:	mov    ecx,r14d
   14000658b:	call   QWORD PTR [rip+0x3b4f]        # 0x14000a0e0
   140006591:	test   r14d,r14d
   140006594:	mov    eax,r13d
   140006597:	sete   al
   14000659a:	test   eax,eax
   14000659c:	je     0x14000666e
   1400065a2:	lea    rax,[rbp+0x38]
   1400065a6:	mov    DWORD PTR [rbp+0x38],r13d
   1400065aa:	test   rax,rax
   1400065ad:	je     0x1400064d2
   1400065b3:	xor    r8d,r8d
   1400065b6:	mov    rcx,0xffffffff80000002
   1400065bd:	test   rdi,rdi
   1400065c0:	je     0x140006638
   1400065c2:	lea    rax,[rbp+0x40]
   1400065c6:	mov    QWORD PTR [rbp+0x50],r13
   1400065ca:	mov    QWORD PTR [rsp+0x40],rax
   1400065cf:	lea    r9,[rip+0x4fc2]        # 0x14000b598
   1400065d6:	lea    rax,[rbp+0x50]
   1400065da:	mov    DWORD PTR [rbp+0x40],r13d
   1400065de:	mov    QWORD PTR [rsp+0x38],rax
   1400065e3:	mov    rdx,rdi
   1400065e6:	mov    QWORD PTR [rsp+0x30],r13
   1400065eb:	mov    DWORD PTR [rsp+0x28],0x20006
   1400065f3:	mov    DWORD PTR [rsp+0x20],r13d
   1400065f8:	call   QWORD PTR [rip+0x3c82]        # 0x14000a280
   1400065fe:	mov    r14d,eax
   140006601:	test   eax,eax
   140006603:	jne    0x140006658
   140006605:	mov    rcx,QWORD PTR [rbp+0x50]
   140006609:	lea    rax,[rbp+0x38]
   14000660d:	mov    DWORD PTR [rsp+0x28],esi
   140006611:	lea    rdx,[rip+0x62e8]        # 0x14000c900
   140006618:	mov    r9d,esi
   14000661b:	mov    QWORD PTR [rsp+0x20],rax
   140006620:	xor    r8d,r8d
   140006623:	call   QWORD PTR [rip+0x3c7f]        # 0x14000a2a8
   140006629:	mov    rcx,QWORD PTR [rbp+0x50]
   14000662d:	mov    r14d,eax
   140006630:	call   QWORD PTR [rip+0x3c6a]        # 0x14000a2a0
   140006636:	jmp    0x140006658
   140006638:	lea    rax,[rbp+0x38]
   14000663c:	mov    DWORD PTR [rsp+0x28],esi
   140006640:	mov    r9d,esi
   140006643:	mov    QWORD PTR [rsp+0x20],rax
   140006648:	lea    rdx,[rip+0x62b1]        # 0x14000c900
   14000664f:	call   QWORD PTR [rip+0x3c53]        # 0x14000a2a8
   140006655:	mov    r14d,eax
   140006658:	mov    ecx,r14d
   14000665b:	call   QWORD PTR [rip+0x3a7f]        # 0x14000a0e0
   140006661:	test   r14d,r14d
   140006664:	mov    eax,r13d
   140006667:	sete   al
   14000666a:	test   eax,eax
   14000666c:	jne    0x14000669e
   14000666e:	call   QWORD PTR [rip+0x3a7c]        # 0x14000a0f0
   140006674:	movzx  ecx,ax
   140006677:	mov    esi,0x80070000
   14000667c:	or     ecx,esi
   14000667e:	test   eax,eax
   140006680:	cmovle ecx,eax
   140006683:	test   ecx,ecx
   140006685:	jns    0x140006699
   140006687:	call   QWORD PTR [rip+0x3a63]        # 0x14000a0f0
   14000668d:	movzx  ebx,ax
   140006690:	or     ebx,esi
   140006692:	test   eax,eax
   140006694:	cmovle ebx,eax
   140006697:	jmp    0x14000669e
   140006699:	mov    ebx,0x80004005
   14000669e:	test   rdi,rdi
   1400066a1:	je     0x1400066b7
   1400066a3:	call   QWORD PTR [rip+0x3acf]        # 0x14000a178
   1400066a9:	mov    r8,rdi
   1400066ac:	xor    edx,edx
   1400066ae:	mov    rcx,rax
   1400066b1:	call   QWORD PTR [rip+0x3ab9]        # 0x14000a170
   1400066b7:	mov    eax,ebx
   1400066b9:	jmp    0x1400066c0
   1400066bb:	mov    eax,0x80070057
   1400066c0:	add    rsp,0x58
   1400066c4:	pop    r14
   1400066c6:	pop    r13
   1400066c8:	pop    rdi
   1400066c9:	pop    rsi
   1400066ca:	pop    rbx
   1400066cb:	pop    rbp
   1400066cc:	ret    
   1400066cd:	int3   
   1400066ce:	int3   
   1400066cf:	int3   
   1400066d0:	int3   
   1400066d1:	int3   
   1400066d2:	int3   
   1400066d3:	int3   
   1400066d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400066d9:	push   rbp
   1400066da:	push   rsi
   1400066db:	push   rdi
   1400066dc:	push   r12
   1400066de:	push   r13
   1400066e0:	push   r14
   1400066e2:	push   r15
   1400066e4:	mov    rbp,rsp
   1400066e7:	sub    rsp,0x60
   1400066eb:	xor    r12d,r12d
   1400066ee:	mov    r15,rdx
   1400066f1:	mov    r14,rcx
   1400066f4:	mov    QWORD PTR [rbp+0x40],r12
   1400066f8:	cmp    r12w,WORD PTR [rcx]
   1400066fc:	jne    0x140006708
   1400066fe:	mov    eax,0x80070057
   140006703:	jmp    0x140006976
   140006708:	lea    rax,[rbp+0x40]
   14000670c:	test   rax,rax
   14000670f:	jne    0x14000671b
   140006711:	mov    ebx,0x80070057
   140006716:	jmp    0x140006974
   14000671b:	mov    rdx,rcx
   14000671e:	lea    r8,[rbp+0x40]
   140006722:	lea    rcx,[rip+0x616f]        # 0x14000c898
   140006729:	call   0x1400042ec
   14000672e:	mov    rdi,QWORD PTR [rbp+0x40]
   140006732:	mov    ebx,eax
   140006734:	test   eax,eax
   140006736:	js     0x14000695b
   14000673c:	mov    rsi,0xffffffff80000002
   140006743:	xor    r8d,r8d
   140006746:	mov    rcx,rsi
   140006749:	mov    rdx,rdi
   14000674c:	call   0x140004620
   140006751:	test   eax,eax
   140006753:	jne    0x14000675f
   140006755:	mov    ebx,0x80070057
   14000675a:	jmp    0x14000695b
   14000675f:	lea    rcx,[rbp+0x58]
   140006763:	mov    QWORD PTR [rbp+0x58],r12
   140006767:	call   QWORD PTR [rip+0x3bcb]        # 0x14000a338
   14000676d:	mov    eax,DWORD PTR [rbp+0x58]
   140006770:	mov    DWORD PTR [rbp+0x40],eax
   140006773:	lea    rax,[rbp+0x40]
   140006777:	test   rax,rax
   14000677a:	jne    0x14000678c
   14000677c:	mov    ecx,0x57
   140006781:	call   QWORD PTR [rip+0x3959]        # 0x14000a0e0
   140006787:	jmp    0x140006915
   14000678c:	xor    r8d,r8d
   14000678f:	mov    r13d,0x4
   140006795:	mov    rcx,rsi
   140006798:	test   rdi,rdi
   14000679b:	je     0x140006812
   14000679d:	lea    rax,[rbp+0x50]
   1400067a1:	mov    QWORD PTR [rbp-0x10],r12
   1400067a5:	mov    QWORD PTR [rsp+0x40],rax
   1400067aa:	lea    r9,[rip+0x4de7]        # 0x14000b598
   1400067b1:	lea    rax,[rbp-0x10]
   1400067b5:	mov    DWORD PTR [rbp+0x50],r12d
   1400067b9:	mov    QWORD PTR [rsp+0x38],rax
   1400067be:	mov    rdx,rdi
   1400067c1:	mov    QWORD PTR [rsp+0x30],r12
   1400067c6:	mov    DWORD PTR [rsp+0x28],0x20006
   1400067ce:	mov    DWORD PTR [rsp+0x20],r12d
   1400067d3:	call   QWORD PTR [rip+0x3aa7]        # 0x14000a280
   1400067d9:	mov    esi,eax
   1400067db:	test   eax,eax
   1400067dd:	jne    0x140006832
   1400067df:	mov    rcx,QWORD PTR [rbp-0x10]
   1400067e3:	lea    rax,[rbp+0x40]
   1400067e7:	mov    DWORD PTR [rsp+0x28],r13d
   1400067ec:	lea    rdx,[rip+0x60fd]        # 0x14000c8f0
   1400067f3:	mov    r9d,r13d
   1400067f6:	mov    QWORD PTR [rsp+0x20],rax
   1400067fb:	xor    r8d,r8d
   1400067fe:	call   QWORD PTR [rip+0x3aa4]        # 0x14000a2a8
   140006804:	mov    rcx,QWORD PTR [rbp-0x10]
   140006808:	mov    esi,eax
   14000680a:	call   QWORD PTR [rip+0x3a90]        # 0x14000a2a0
   140006810:	jmp    0x140006832
   140006812:	lea    rax,[rbp+0x40]
   140006816:	mov    DWORD PTR [rsp+0x28],r13d
   14000681b:	mov    r9d,r13d
   14000681e:	mov    QWORD PTR [rsp+0x20],rax
   140006823:	lea    rdx,[rip+0x60c6]        # 0x14000c8f0
   14000682a:	call   QWORD PTR [rip+0x3a78]        # 0x14000a2a8
   140006830:	mov    esi,eax
   140006832:	mov    ecx,esi
   140006834:	call   QWORD PTR [rip+0x38a6]        # 0x14000a0e0
   14000683a:	test   esi,esi
   14000683c:	mov    eax,r12d
   14000683f:	sete   al
   140006842:	test   eax,eax
   140006844:	je     0x140006915
   14000684a:	mov    eax,DWORD PTR [rbp+0x5c]
   14000684d:	mov    DWORD PTR [rbp+0x40],eax
   140006850:	lea    rax,[rbp+0x40]
   140006854:	test   rax,rax
   140006857:	je     0x14000677c
   14000685d:	xor    r8d,r8d
   140006860:	mov    rcx,0xffffffff80000002
   140006867:	test   rdi,rdi
   14000686a:	je     0x1400068e1
   14000686c:	lea    rax,[rbp+0x50]
   140006870:	mov    QWORD PTR [rbp-0x10],r12
   140006874:	mov    QWORD PTR [rsp+0x40],rax
   140006879:	lea    r9,[rip+0x4d18]        # 0x14000b598
   140006880:	lea    rax,[rbp-0x10]
   140006884:	mov    DWORD PTR [rbp+0x50],r12d
   140006888:	mov    QWORD PTR [rsp+0x38],rax
   14000688d:	mov    rdx,rdi
   140006890:	mov    QWORD PTR [rsp+0x30],r12
   140006895:	mov    DWORD PTR [rsp+0x28],0x20006
   14000689d:	mov    DWORD PTR [rsp+0x20],r12d
   1400068a2:	call   QWORD PTR [rip+0x39d8]        # 0x14000a280
   1400068a8:	mov    esi,eax
   1400068aa:	test   eax,eax
   1400068ac:	jne    0x140006901
   1400068ae:	mov    rcx,QWORD PTR [rbp-0x10]
   1400068b2:	lea    rax,[rbp+0x40]
   1400068b6:	mov    DWORD PTR [rsp+0x28],r13d
   1400068bb:	lea    rdx,[rip+0x603e]        # 0x14000c900
   1400068c2:	mov    r9d,r13d
   1400068c5:	mov    QWORD PTR [rsp+0x20],rax
   1400068ca:	xor    r8d,r8d
   1400068cd:	call   QWORD PTR [rip+0x39d5]        # 0x14000a2a8
   1400068d3:	mov    rcx,QWORD PTR [rbp-0x10]
   1400068d7:	mov    esi,eax
   1400068d9:	call   QWORD PTR [rip+0x39c1]        # 0x14000a2a0
   1400068df:	jmp    0x140006901
   1400068e1:	lea    rax,[rbp+0x40]
   1400068e5:	mov    DWORD PTR [rsp+0x28],r13d
   1400068ea:	mov    r9d,r13d
   1400068ed:	mov    QWORD PTR [rsp+0x20],rax
   1400068f2:	lea    rdx,[rip+0x6007]        # 0x14000c900
   1400068f9:	call   QWORD PTR [rip+0x39a9]        # 0x14000a2a8
   1400068ff:	mov    esi,eax
   140006901:	mov    ecx,esi
   140006903:	call   QWORD PTR [rip+0x37d7]        # 0x14000a0e0
   140006909:	test   esi,esi
   14000690b:	mov    eax,r12d
   14000690e:	sete   al
   140006911:	test   eax,eax
   140006913:	jne    0x140006945
   140006915:	call   QWORD PTR [rip+0x37d5]        # 0x14000a0f0
   14000691b:	movzx  ecx,ax
   14000691e:	mov    esi,0x80070000
   140006923:	or     ecx,esi
   140006925:	test   eax,eax
   140006927:	cmovle ecx,eax
   14000692a:	test   ecx,ecx
   14000692c:	jns    0x140006940
   14000692e:	call   QWORD PTR [rip+0x37bc]        # 0x14000a0f0
   140006934:	movzx  ebx,ax
   140006937:	or     ebx,esi
   140006939:	test   eax,eax
   14000693b:	cmovle ebx,eax
   14000693e:	jmp    0x140006945
   140006940:	mov    ebx,0x80004005
   140006945:	test   ebx,ebx
   140006947:	js     0x14000695b
   140006949:	test   r15,r15
   14000694c:	je     0x14000695b
   14000694e:	mov    rdx,r15
   140006951:	mov    rcx,r14
   140006954:	call   0x140006994
   140006959:	mov    ebx,eax
   14000695b:	test   rdi,rdi
   14000695e:	je     0x140006974
   140006960:	call   QWORD PTR [rip+0x3812]        # 0x14000a178
   140006966:	mov    r8,rdi
   140006969:	xor    edx,edx
   14000696b:	mov    rcx,rax
   14000696e:	call   QWORD PTR [rip+0x37fc]        # 0x14000a170
   140006974:	mov    eax,ebx
   140006976:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000697e:	add    rsp,0x60
   140006982:	pop    r15
   140006984:	pop    r14
   140006986:	pop    r13
   140006988:	pop    r12
   14000698a:	pop    rdi
   14000698b:	pop    rsi
   14000698c:	pop    rbp
   14000698d:	ret    
   14000698e:	int3   
   14000698f:	int3   
   140006990:	int3   
   140006991:	int3   
   140006992:	int3   
   140006993:	int3   
   140006994:	mov    QWORD PTR [rsp+0x10],rbx
   140006999:	push   rbp
   14000699a:	push   rsi
   14000699b:	push   r14
   14000699d:	mov    rbp,rsp
   1400069a0:	sub    rsp,0x40
   1400069a4:	xor    r14d,r14d
   1400069a7:	mov    DWORD PTR [rbp+0x20],0x4
   1400069ae:	mov    QWORD PTR [rbp+0x30],r14
   1400069b2:	mov    rsi,rdx
   1400069b5:	mov    QWORD PTR [rbp+0x38],r14
   1400069b9:	test   rcx,rcx
   1400069bc:	je     0x140006b91
   1400069c2:	cmp    r14w,WORD PTR [rcx]
   1400069c6:	je     0x140006b91
   1400069cc:	test   rdx,rdx
   1400069cf:	je     0x140006b91
   1400069d5:	lea    rax,[rbp+0x38]
   1400069d9:	test   rax,rax
   1400069dc:	jne    0x1400069e8
   1400069de:	mov    ebx,0x80070057
   1400069e3:	jmp    0x140006b8d
   1400069e8:	mov    rdx,rcx
   1400069eb:	lea    r8,[rbp+0x38]
   1400069ef:	lea    rcx,[rip+0x5ea2]        # 0x14000c898
   1400069f6:	call   0x1400042ec
   1400069fb:	mov    ebx,eax
   1400069fd:	test   eax,eax
   1400069ff:	js     0x140006b63
   140006a05:	mov    rdx,QWORD PTR [rbp+0x38]
   140006a09:	xor    r8d,r8d
   140006a0c:	mov    rcx,0xffffffff80000002
   140006a13:	call   0x140004620
   140006a18:	mov    ecx,ebx
   140006a1a:	test   eax,eax
   140006a1c:	mov    ebx,0x80070057
   140006a21:	cmove  ecx,ebx
   140006a24:	mov    ebx,ecx
   140006a26:	test   ecx,ecx
   140006a28:	js     0x140006b63
   140006a2e:	mov    rdx,QWORD PTR [rbp+0x38]
   140006a32:	lea    rax,[rbp+0x30]
   140006a36:	mov    r9d,0x20019
   140006a3c:	mov    QWORD PTR [rsp+0x20],rax
   140006a41:	xor    r8d,r8d
   140006a44:	mov    QWORD PTR [rbp-0x8],r14
   140006a48:	mov    rcx,0xffffffff80000002
   140006a4f:	mov    QWORD PTR [rbp-0x10],r14
   140006a53:	call   QWORD PTR [rip+0x381f]        # 0x14000a278
   140006a59:	test   eax,eax
   140006a5b:	jne    0x140006b19
   140006a61:	mov    rcx,QWORD PTR [rbp+0x30]
   140006a65:	lea    rax,[rbp+0x20]
   140006a69:	mov    QWORD PTR [rsp+0x28],rax
   140006a6e:	lea    rdx,[rip+0x5e4b]        # 0x14000c8c0
   140006a75:	lea    rax,[rbp-0x8]
   140006a79:	xor    r9d,r9d
   140006a7c:	xor    r8d,r8d
   140006a7f:	mov    QWORD PTR [rsp+0x20],rax
   140006a84:	call   QWORD PTR [rip+0x37fe]        # 0x14000a288
   140006a8a:	test   eax,eax
   140006a8c:	jne    0x140006b19
   140006a92:	mov    rcx,QWORD PTR [rbp+0x30]
   140006a96:	lea    rax,[rbp+0x20]
   140006a9a:	mov    QWORD PTR [rsp+0x28],rax
   140006a9f:	lea    rdx,[rip+0x5e32]        # 0x14000c8d8
   140006aa6:	lea    rax,[rbp-0x4]
   140006aaa:	xor    r9d,r9d
   140006aad:	xor    r8d,r8d
   140006ab0:	mov    QWORD PTR [rsp+0x20],rax
   140006ab5:	call   QWORD PTR [rip+0x37cd]        # 0x14000a288
   140006abb:	test   eax,eax
   140006abd:	jne    0x140006b19
   140006abf:	mov    rcx,QWORD PTR [rbp+0x30]
   140006ac3:	lea    rax,[rbp+0x20]
   140006ac7:	mov    QWORD PTR [rsp+0x28],rax
   140006acc:	lea    rdx,[rip+0x5e1d]        # 0x14000c8f0
   140006ad3:	lea    rax,[rbp-0x10]
   140006ad7:	xor    r9d,r9d
   140006ada:	xor    r8d,r8d
   140006add:	mov    QWORD PTR [rsp+0x20],rax
   140006ae2:	call   QWORD PTR [rip+0x37a0]        # 0x14000a288
   140006ae8:	test   eax,eax
   140006aea:	jne    0x140006b19
   140006aec:	mov    rcx,QWORD PTR [rbp+0x30]
   140006af0:	lea    rax,[rbp+0x20]
   140006af4:	mov    QWORD PTR [rsp+0x28],rax
   140006af9:	lea    rdx,[rip+0x5e00]        # 0x14000c900
   140006b00:	lea    rax,[rbp-0xc]
   140006b04:	xor    r9d,r9d
   140006b07:	xor    r8d,r8d
   140006b0a:	mov    QWORD PTR [rsp+0x20],rax
   140006b0f:	call   QWORD PTR [rip+0x3773]        # 0x14000a288
   140006b15:	test   eax,eax
   140006b17:	je     0x140006b27
   140006b19:	movzx  ebx,ax
   140006b1c:	or     ebx,0x80070000
   140006b22:	test   eax,eax
   140006b24:	cmovle ebx,eax
   140006b27:	mov    rcx,QWORD PTR [rbp-0x10]
   140006b2b:	mov    eax,0x8007139f
   140006b30:	test   rcx,rcx
   140006b33:	cmove  ebx,eax
   140006b36:	test   ebx,ebx
   140006b38:	js     0x140006b63
   140006b3a:	sub    rcx,QWORD PTR [rbp-0x8]
   140006b3e:	movabs rax,0x346dc5d63886594b
   140006b48:	mul    rcx
   140006b4b:	shr    rdx,0xb
   140006b4f:	mov    rax,rdx
   140006b52:	shr    rax,0x20
   140006b56:	test   eax,eax
   140006b58:	je     0x140006b61
   140006b5a:	mov    ebx,0x80070216
   140006b5f:	jmp    0x140006b63
   140006b61:	mov    DWORD PTR [rsi],edx
   140006b63:	mov    rcx,QWORD PTR [rbp+0x30]
   140006b67:	test   rcx,rcx
   140006b6a:	je     0x140006b72
   140006b6c:	call   QWORD PTR [rip+0x372e]        # 0x14000a2a0
   140006b72:	cmp    QWORD PTR [rbp+0x38],r14
   140006b76:	je     0x140006b8d
   140006b78:	call   QWORD PTR [rip+0x35fa]        # 0x14000a178
   140006b7e:	mov    r8,QWORD PTR [rbp+0x38]
   140006b82:	xor    edx,edx
   140006b84:	mov    rcx,rax
   140006b87:	call   QWORD PTR [rip+0x35e3]        # 0x14000a170
   140006b8d:	mov    eax,ebx
   140006b8f:	jmp    0x140006b96
   140006b91:	mov    eax,0x80070057
   140006b96:	mov    rbx,QWORD PTR [rsp+0x68]
   140006b9b:	add    rsp,0x40
   140006b9f:	pop    r14
   140006ba1:	pop    rsi
   140006ba2:	pop    rbp
   140006ba3:	ret    
   140006ba4:	int3   
   140006ba5:	int3   
   140006ba6:	int3   
   140006ba7:	int3   
   140006ba8:	int3   
   140006ba9:	int3   
   140006baa:	int3   
   140006bab:	int3   
   140006bac:	mov    rax,rsp
   140006baf:	mov    QWORD PTR [rax+0x10],rbx
   140006bb3:	mov    QWORD PTR [rax+0x18],rbp
   140006bb7:	mov    QWORD PTR [rax+0x20],rsi
   140006bbb:	push   rdi
   140006bbc:	push   r14
   140006bbe:	push   r15
   140006bc0:	sub    rsp,0x30
   140006bc4:	xor    r15d,r15d
   140006bc7:	mov    rdi,r9
   140006bca:	mov    rbp,r8
   140006bcd:	mov    r14,rdx
   140006bd0:	mov    rsi,rcx
   140006bd3:	mov    QWORD PTR [rax+0x8],r15
   140006bd7:	cmp    r15w,WORD PTR [rcx]
   140006bdb:	je     0x140006c54
   140006bdd:	mov    rcx,rdx
   140006be0:	call   0x140005188
   140006be5:	test   eax,eax
   140006be7:	je     0x140006c54
   140006be9:	test   rbp,rbp
   140006bec:	je     0x140006c54
   140006bee:	test   rdi,rdi
   140006bf1:	je     0x140006c54
   140006bf3:	mov    r8,rdi
   140006bf6:	lea    rcx,[rsp+0x50]
   140006bfb:	mov    rdx,rsi
   140006bfe:	call   QWORD PTR [rip+0x3434]        # 0x14000a038
   140006c04:	mov    ebx,eax
   140006c06:	test   eax,eax
   140006c08:	js     0x140006c50
   140006c0a:	cmp    DWORD PTR [rdi],r15d
   140006c0d:	jl     0x140006c50
   140006c0f:	mov    QWORD PTR [rsp+0x28],rdi
   140006c14:	lea    rcx,[rsp+0x50]
   140006c19:	mov    rdx,r14
   140006c1c:	mov    QWORD PTR [rsp+0x20],rbp
   140006c21:	call   0x140006c78
   140006c26:	mov    ebx,eax
   140006c28:	test   eax,eax
   140006c2a:	js     0x140006c3c
   140006c2c:	mov    rdx,rsi
   140006c2f:	lea    rcx,[rsp+0x50]
   140006c34:	call   QWORD PTR [rip+0x3466]        # 0x14000a0a0
   140006c3a:	mov    ebx,eax
   140006c3c:	lea    rcx,[rsp+0x50]
   140006c41:	call   QWORD PTR [rip+0x33f9]        # 0x14000a040
   140006c47:	test   ebx,ebx
   140006c49:	js     0x140006c50
   140006c4b:	test   eax,eax
   140006c4d:	cmovs  ebx,eax
   140006c50:	mov    eax,ebx
   140006c52:	jmp    0x140006c59
   140006c54:	mov    eax,0x80070057
   140006c59:	mov    rbx,QWORD PTR [rsp+0x58]
   140006c5e:	mov    rbp,QWORD PTR [rsp+0x60]
   140006c63:	mov    rsi,QWORD PTR [rsp+0x68]
   140006c68:	add    rsp,0x30
   140006c6c:	pop    r15
   140006c6e:	pop    r14
   140006c70:	pop    rdi
   140006c71:	ret    
   140006c72:	int3   
   140006c73:	int3   
   140006c74:	int3   
   140006c75:	int3   
   140006c76:	int3   
   140006c77:	int3   
   140006c78:	mov    rax,rsp
   140006c7b:	mov    QWORD PTR [rax+0x10],rbx
   140006c7f:	mov    QWORD PTR [rax+0x20],r9
   140006c83:	mov    QWORD PTR [rax+0x18],r8
   140006c87:	mov    QWORD PTR [rax+0x8],rcx
   140006c8b:	push   rbp
   140006c8c:	push   rsi
   140006c8d:	push   rdi
   140006c8e:	push   r12
   140006c90:	push   r13
   140006c92:	push   r14
   140006c94:	push   r15
   140006c96:	mov    rbp,rsp
   140006c99:	sub    rsp,0x70
   140006c9d:	xor    ebx,ebx
   140006c9f:	mov    DWORD PTR [rbp+0x50],0x1
   140006ca6:	mov    QWORD PTR [rbp-0x10],rbx
   140006caa:	mov    rsi,rdx
   140006cad:	mov    QWORD PTR [rbp-0x18],rbx
   140006cb1:	mov    r15d,ebx
   140006cb4:	mov    DWORD PTR [rbp-0x20],ebx
   140006cb7:	mov    r13d,ebx
   140006cba:	mov    DWORD PTR [rbp+0x58],ebx
   140006cbd:	test   rcx,rcx
   140006cc0:	je     0x1400070f1
   140006cc6:	mov    rcx,rdx
   140006cc9:	call   0x140005188
   140006cce:	test   eax,eax
   140006cd0:	je     0x1400070f1
   140006cd6:	mov    rax,QWORD PTR [rbp+0x60]
   140006cda:	test   rax,rax
   140006cdd:	je     0x1400070f1
   140006ce3:	mov    r12,QWORD PTR [rbp+0x68]
   140006ce7:	test   r12,r12
   140006cea:	je     0x1400070f1
   140006cf0:	mov    rdx,rcx
   140006cf3:	mov    DWORD PTR [rax],ebx
   140006cf5:	xor    ecx,ecx
   140006cf7:	lea    r8,[rbp+0x50]
   140006cfb:	call   0x14000568c
   140006d00:	mov    r14d,DWORD PTR [rbp+0x50]
   140006d04:	mov    edi,eax
   140006d06:	test   eax,eax
   140006d08:	js     0x140006d65
   140006d0a:	mov    r9d,r14d
   140006d0d:	lea    rdx,[rip+0x5c1c]        # 0x14000c930
   140006d14:	mov    r8,rsi
   140006d17:	xor    ecx,ecx
   140006d19:	call   0x140002e20
   140006d1e:	cmp    r14d,0x8
   140006d22:	ja     0x140006d45
   140006d24:	mov    eax,0x16a
   140006d29:	bt     eax,r14d
   140006d2d:	jae    0x140006d45
   140006d2f:	lea    rdx,[rip+0x5c4a]        # 0x14000c980
   140006d36:	mov    edi,0x8030000c
   140006d3b:	lea    ecx,[rbx+0x1]
   140006d3e:	call   0x140002e20
   140006d43:	jmp    0x140006d65
   140006d45:	cmp    r14d,0x4
   140006d49:	mov    eax,ebx
   140006d4b:	setge  r13b
   140006d4f:	cmp    r14d,0x7
   140006d53:	sete   al
   140006d56:	cmp    r14d,0x9
   140006d5a:	mov    DWORD PTR [rbp-0x20],eax
   140006d5d:	mov    eax,ebx
   140006d5f:	sete   al
   140006d62:	mov    DWORD PTR [rbp+0x58],eax
   140006d65:	test   r13d,r13d
   140006d68:	mov    ecx,ebx
   140006d6a:	mov    eax,ebx
   140006d6c:	mov    r13,0xffffffff80000002
   140006d73:	sete   cl
   140006d76:	test   edi,edi
   140006d78:	setns  al
   140006d7b:	test   eax,ecx
   140006d7d:	je     0x140006e9a
   140006d83:	lea    rdx,[rip+0x5c66]        # 0x14000c9f0
   140006d8a:	xor    ecx,ecx
   140006d8c:	call   0x140002e20
   140006d91:	lea    r8,[rbp+0x50]
   140006d95:	mov    DWORD PTR [rbp+0x50],0x3
   140006d9c:	mov    rdx,rsi
   140006d9f:	mov    ecx,0x1
   140006da4:	call   0x14000568c
   140006da9:	mov    edi,eax
   140006dab:	test   eax,eax
   140006dad:	js     0x140006e86
   140006db3:	call   0x140008068
   140006db8:	mov    edi,eax
   140006dba:	test   eax,eax
   140006dbc:	js     0x140006e86
   140006dc2:	xor    r8d,r8d
   140006dc5:	lea    rdx,[rip+0x6344]        # 0x14000d110
   140006dcc:	mov    rcx,r13
   140006dcf:	mov    edi,ebx
   140006dd1:	call   0x140004620
   140006dd6:	test   eax,eax
   140006dd8:	jne    0x140006e31
   140006dda:	mov    QWORD PTR [rsp+0x40],rbx
   140006ddf:	lea    rax,[rbp+0x50]
   140006de3:	mov    QWORD PTR [rsp+0x38],rax
   140006de8:	lea    rdx,[rip+0x6321]        # 0x14000d110
   140006def:	mov    QWORD PTR [rsp+0x30],rbx
   140006df4:	xor    r9d,r9d
   140006df7:	mov    DWORD PTR [rsp+0x28],0x2001f
   140006dff:	xor    r8d,r8d
   140006e02:	mov    rcx,r13
   140006e05:	mov    DWORD PTR [rsp+0x20],ebx
   140006e09:	mov    QWORD PTR [rbp+0x50],rbx
   140006e0d:	call   QWORD PTR [rip+0x346d]        # 0x14000a280
   140006e13:	test   eax,eax
   140006e15:	jne    0x140006e23
   140006e17:	mov    rcx,QWORD PTR [rbp+0x50]
   140006e1b:	call   QWORD PTR [rip+0x347f]        # 0x14000a2a0
   140006e21:	jmp    0x140006e35
   140006e23:	movzx  edi,ax
   140006e26:	or     edi,0x80070000
   140006e2c:	test   eax,eax
   140006e2e:	cmovle edi,eax
   140006e31:	test   edi,edi
   140006e33:	js     0x140006e86
   140006e35:	mov    rcx,QWORD PTR [rbp+0x40]
   140006e39:	lea    r9,[rbp-0x18]
   140006e3d:	lea    r8,[rbp-0x10]
   140006e41:	mov    QWORD PTR [rsp+0x20],r12
   140006e46:	mov    rdx,rsi
   140006e49:	call   0x140007114
   140006e4e:	mov    edi,eax
   140006e50:	test   eax,eax
   140006e52:	js     0x140006e82
   140006e54:	lea    rdx,[rip+0x5c05]        # 0x14000ca60
   140006e5b:	xor    ecx,ecx
   140006e5d:	call   0x140002e20
   140006e62:	lea    r8,[rbp+0x50]
   140006e66:	mov    DWORD PTR [rbp+0x50],0x4
   140006e6d:	mov    rdx,rsi
   140006e70:	mov    ecx,0x1
   140006e75:	call   0x14000568c
   140006e7a:	mov    r15,QWORD PTR [rbp-0x10]
   140006e7e:	mov    edi,eax
   140006e80:	jmp    0x140006e9a
   140006e82:	mov    r15,QWORD PTR [rbp-0x10]
   140006e86:	mov    r8d,edi
   140006e89:	lea    rdx,[rip+0x5c40]        # 0x14000cad0
   140006e90:	mov    ecx,0x1
   140006e95:	call   0x140002e20
   140006e9a:	test   edi,edi
   140006e9c:	js     0x140007025
   140006ea2:	cmp    DWORD PTR [r12],ebx
   140006ea6:	jl     0x140006ffe
   140006eac:	test   rsi,rsi
   140006eaf:	je     0x140006ee2
   140006eb1:	mov    rdx,rsi
   140006eb4:	lea    rcx,[rip+0x5485]        # 0x14000c340
   140006ebb:	call   0x140009c92
   140006ec0:	test   eax,eax
   140006ec2:	je     0x140006ed7
   140006ec4:	mov    rdx,rsi
   140006ec7:	lea    rcx,[rip+0x548a]        # 0x14000c358
   140006ece:	call   0x140009c92
   140006ed3:	test   eax,eax
   140006ed5:	jne    0x140006ee2
   140006ed7:	mov    eax,0x1
   140006edc:	lea    r14d,[rax+0x8]
   140006ee0:	jmp    0x140006ee5
   140006ee2:	mov    eax,DWORD PTR [rbp+0x58]
   140006ee5:	test   eax,eax
   140006ee7:	jne    0x140006ffe
   140006eed:	lea    r8,[rbp+0x58]
   140006ef1:	mov    DWORD PTR [rbp+0x58],0x5
   140006ef8:	mov    rdx,rsi
   140006efb:	lea    ecx,[rax+0x1]
   140006efe:	call   0x14000568c
   140006f03:	mov    edi,eax
   140006f05:	test   eax,eax
   140006f07:	js     0x140007025
   140006f0d:	mov    r8,rsi
   140006f10:	lea    rdx,[rip+0x5c29]        # 0x14000cb40
   140006f17:	xor    ecx,ecx
   140006f19:	call   0x140002e20
   140006f1e:	mov    r13,QWORD PTR [rbp-0x18]
   140006f22:	mov    r9,r15
   140006f25:	mov    r8d,DWORD PTR [rbp-0x20]
   140006f29:	mov    rdx,rsi
   140006f2c:	mov    rcx,QWORD PTR [rbp+0x40]
   140006f30:	mov    QWORD PTR [rsp+0x28],r12
   140006f35:	mov    QWORD PTR [rsp+0x20],r13
   140006f3a:	call   0x140007248
   140006f3f:	mov    edi,eax
   140006f41:	cmp    eax,0x2c1001
   140006f46:	jne    0x140006f6b
   140006f48:	lea    rdx,[rip+0x5c81]        # 0x14000cbd0
   140006f4f:	xor    ecx,ecx
   140006f51:	call   0x140002e20
   140006f56:	mov    rax,QWORD PTR [rbp+0x60]
   140006f5a:	mov    r14d,0x6
   140006f60:	mov    DWORD PTR [rax],0x1
   140006f66:	jmp    0x140007006
   140006f6b:	cmp    eax,0x2c1000
   140006f70:	jne    0x140006fb7
   140006f72:	lea    rdx,[rip+0x5d27]        # 0x14000cca0
   140006f79:	xor    ecx,ecx
   140006f7b:	call   0x140002e20
   140006f80:	mov    rax,QWORD PTR [rbp+0x60]
   140006f84:	mov    r14d,0x8
   140006f8a:	mov    DWORD PTR [rax],0x1
   140006f90:	mov    rcx,rsi
   140006f93:	call   0x140005188
   140006f98:	test   eax,eax
   140006f9a:	je     0x140006fd7
   140006f9c:	call   0x140008068
   140006fa1:	mov    edi,eax
   140006fa3:	test   eax,eax
   140006fa5:	js     0x140007002
   140006fa7:	mov    rcx,QWORD PTR [rbp+0x40]
   140006fab:	mov    rdx,rsi
   140006fae:	call   0x140005d9c
   140006fb3:	mov    edi,eax
   140006fb5:	jmp    0x140007002
   140006fb7:	test   eax,eax
   140006fb9:	js     0x140006fde
   140006fbb:	cmp    DWORD PTR [r12],ebx
   140006fbf:	jl     0x140006fde
   140006fc1:	lea    rdx,[rip+0x5d88]        # 0x14000cd50
   140006fc8:	xor    ecx,ecx
   140006fca:	mov    r14d,0x9
   140006fd0:	call   0x140002e20
   140006fd5:	jmp    0x140006f90
   140006fd7:	mov    edi,0x80070057
   140006fdc:	jmp    0x140007002
   140006fde:	mov    r9d,DWORD PTR [r12]
   140006fe2:	lea    rdx,[rip+0x5dc7]        # 0x14000cdb0
   140006fe9:	mov    r8d,eax
   140006fec:	mov    ecx,0x1
   140006ff1:	call   0x140002e20
   140006ff6:	mov    r14d,0x1
   140006ffc:	jmp    0x140007002
   140006ffe:	mov    r13,QWORD PTR [rbp-0x18]
   140007002:	test   edi,edi
   140007004:	js     0x140007029
   140007006:	cmp    DWORD PTR [r12],ebx
   14000700a:	jl     0x140007029
   14000700c:	lea    r8,[rbp+0x40]
   140007010:	mov    DWORD PTR [rbp+0x40],r14d
   140007014:	mov    rdx,rsi
   140007017:	mov    ecx,0x1
   14000701c:	call   0x14000568c
   140007021:	mov    edi,eax
   140007023:	jmp    0x140007052
   140007025:	mov    r13,QWORD PTR [rbp-0x18]
   140007029:	cmp    edi,0x8030000c
   14000702f:	je     0x140007052
   140007031:	lea    r8,[rbp+0x40]
   140007035:	mov    DWORD PTR [rbp+0x40],0x1
   14000703c:	mov    rdx,rsi
   14000703f:	mov    ecx,0x1
   140007044:	call   0x14000568c
   140007049:	test   eax,eax
   14000704b:	jns    0x140007052
   14000704d:	test   edi,edi
   14000704f:	cmovns edi,eax
   140007052:	test   r15,r15
   140007055:	je     0x140007077
   140007057:	test   r13,r13
   14000705a:	je     0x14000706e
   14000705c:	mov    rcx,QWORD PTR [r15+rbx*8]
   140007060:	call   QWORD PTR [rip+0x305a]        # 0x14000a0c0
   140007066:	inc    rbx
   140007069:	cmp    rbx,r13
   14000706c:	jb     0x14000705c
   14000706e:	mov    rcx,r15
   140007071:	call   QWORD PTR [rip+0x3049]        # 0x14000a0c0
   140007077:	mov    esi,0x4000000
   14000707c:	lea    r8,[rip+0x4a5d]        # 0x14000bae0
   140007083:	mov    edx,esi
   140007085:	lea    rcx,[rip+0x96bc]        # 0x140010748
   14000708c:	call   0x140003478
   140007091:	call   QWORD PTR [rip+0x32a9]        # 0x14000a340
   140007097:	mov    rcx,0xffffffff80000000
   14000709e:	mov    ebx,eax
   1400070a0:	call   QWORD PTR [rip+0x31ea]        # 0x14000a290
   1400070a6:	mov    rcx,0xffffffff80000001
   1400070ad:	call   QWORD PTR [rip+0x31dd]        # 0x14000a290
   1400070b3:	mov    rcx,0xffffffff80000002
   1400070ba:	call   QWORD PTR [rip+0x31d0]        # 0x14000a290
   1400070c0:	mov    rcx,0xffffffff80000003
   1400070c7:	call   QWORD PTR [rip+0x31c3]        # 0x14000a290
   1400070cd:	call   QWORD PTR [rip+0x326d]        # 0x14000a340
   1400070d3:	lea    r8,[rip+0x4a46]        # 0x14000bb20
   1400070da:	mov    edx,esi
   1400070dc:	sub    eax,ebx
   1400070de:	lea    rcx,[rip+0x9663]        # 0x140010748
   1400070e5:	mov    r9d,eax
   1400070e8:	call   0x140003478
   1400070ed:	mov    eax,edi
   1400070ef:	jmp    0x1400070f6
   1400070f1:	mov    eax,0x80070057
   1400070f6:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400070fe:	add    rsp,0x70
   140007102:	pop    r15
   140007104:	pop    r14
   140007106:	pop    r13
   140007108:	pop    r12
   14000710a:	pop    rdi
   14000710b:	pop    rsi
   14000710c:	pop    rbp
   14000710d:	ret    
   14000710e:	int3   
   14000710f:	int3   
   140007110:	int3   
   140007111:	int3   
   140007112:	int3   
   140007113:	int3   
   140007114:	mov    QWORD PTR [rsp+0x8],rbx
   140007119:	mov    QWORD PTR [rsp+0x18],rsi
   14000711e:	push   rbp
   14000711f:	push   rdi
   140007120:	push   r12
   140007122:	push   r14
   140007124:	push   r15
   140007126:	mov    rbp,rsp
   140007129:	sub    rsp,0x60
   14000712d:	xor    r12d,r12d
   140007130:	mov    r14,r9
   140007133:	mov    QWORD PTR [rbp-0x10],r12
   140007137:	mov    r15,r8
   14000713a:	mov    QWORD PTR [rbp-0x18],r12
   14000713e:	mov    rsi,rdx
   140007141:	mov    QWORD PTR [rbp+0x38],r12
   140007145:	mov    QWORD PTR [rbp-0x20],r12
   140007149:	test   rdx,rdx
   14000714c:	je     0x140007221
   140007152:	cmp    r12w,WORD PTR [rdx]
   140007156:	je     0x140007221
   14000715c:	mov    rbx,QWORD PTR [rbp+0x50]
   140007160:	test   rbx,rbx
   140007163:	je     0x140007221
   140007169:	lea    r8,[rbp-0x10]
   14000716d:	call   QWORD PTR [rip+0x2f05]        # 0x14000a078
   140007173:	mov    edi,eax
   140007175:	test   eax,eax
   140007177:	js     0x1400071ff
   14000717d:	lea    ecx,[r12+0x1]
   140007182:	cmp    eax,ecx
   140007184:	je     0x1400071ff
   140007186:	lea    rax,[rbp-0x20]
   14000718a:	xor    edx,edx
   14000718c:	mov    QWORD PTR [rsp+0x38],rax
   140007191:	lea    rax,[rbp+0x38]
   140007195:	mov    QWORD PTR [rsp+0x30],rax
   14000719a:	lea    rax,[rbp-0x18]
   14000719e:	mov    QWORD PTR [rsp+0x28],rax
   1400071a3:	call   0x140007644
   1400071a8:	mov    edi,eax
   1400071aa:	test   eax,eax
   1400071ac:	js     0x1400071ee
   1400071ae:	mov    r8,QWORD PTR [rbp-0x10]
   1400071b2:	mov    r9,rsi
   1400071b5:	mov    rdx,QWORD PTR [rbp-0x20]
   1400071b9:	mov    rcx,QWORD PTR [rbp+0x38]
   1400071bd:	mov    QWORD PTR [rsp+0x20],rbx
   1400071c2:	call   0x140007964
   1400071c7:	mov    edi,eax
   1400071c9:	test   eax,eax
   1400071cb:	js     0x1400071ee
   1400071cd:	cmp    DWORD PTR [rbx],r12d
   1400071d0:	jl     0x1400071ee
   1400071d2:	mov    rdx,QWORD PTR [rbp+0x38]
   1400071d6:	mov    r9,r15
   1400071d9:	mov    rcx,QWORD PTR [rbp-0x18]
   1400071dd:	mov    QWORD PTR [rsp+0x28],rbx
   1400071e2:	mov    QWORD PTR [rsp+0x20],r14
   1400071e7:	call   0x140007abc
   1400071ec:	mov    edi,eax
   1400071ee:	mov    r8,QWORD PTR [rbp-0x20]
   1400071f2:	mov    rdx,QWORD PTR [rbp+0x38]
   1400071f6:	mov    rcx,QWORD PTR [rbp-0x18]
   1400071fa:	call   0x1400078c4
   1400071ff:	mov    rsi,QWORD PTR [rbp-0x10]
   140007203:	test   rsi,rsi
   140007206:	je     0x14000721d
   140007208:	mov    rax,QWORD PTR [rsi]
   14000720b:	mov    rbx,QWORD PTR [rax+0x10]
   14000720f:	mov    rcx,rbx
   140007212:	call   QWORD PTR [rip+0x32c0]        # 0x14000a4d8
   140007218:	mov    rcx,rsi
   14000721b:	call   rbx
   14000721d:	mov    eax,edi
   14000721f:	jmp    0x140007226
   140007221:	mov    eax,0x80070057
   140007226:	lea    r11,[rsp+0x60]
   14000722b:	mov    rbx,QWORD PTR [r11+0x30]
   14000722f:	mov    rsi,QWORD PTR [r11+0x40]
   140007233:	mov    rsp,r11
   140007236:	pop    r15
   140007238:	pop    r14
   14000723a:	pop    r12
   14000723c:	pop    rdi
   14000723d:	pop    rbp
   14000723e:	ret    
   14000723f:	int3   
   140007240:	int3   
   140007241:	int3   
   140007242:	int3   
   140007243:	int3   
   140007244:	int3   
   140007245:	int3   
   140007246:	int3   
   140007247:	int3   
   140007248:	mov    QWORD PTR [rsp+0x8],rbx
   14000724d:	push   rbp
   14000724e:	push   rsi
   14000724f:	push   rdi
   140007250:	push   r12
   140007252:	push   r13
   140007254:	push   r14
   140007256:	push   r15
   140007258:	lea    rbp,[rsp-0x170]
   140007260:	sub    rsp,0x270
   140007267:	mov    rax,QWORD PTR [rip+0x8d9a]        # 0x140010008
   14000726e:	xor    rax,rsp
   140007271:	mov    QWORD PTR [rbp+0x160],rax
   140007278:	mov    rdi,QWORD PTR [rbp+0x1d8]
   14000727f:	mov    r15d,r8d
   140007282:	mov    r14,rdx
   140007285:	mov    QWORD PTR [rsp+0x38],rdi
   14000728a:	mov    rbx,rcx
   14000728d:	xor    esi,esi
   14000728f:	xor    edx,edx
   140007291:	mov    DWORD PTR [rsp+0x50],esi
   140007295:	mov    r8d,0x204
   14000729b:	lea    rcx,[rsp+0x54]
   1400072a0:	mov    r12d,esi
   1400072a3:	mov    r13,r9
   1400072a6:	call   0x140009c86
   1400072ab:	mov    DWORD PTR [rsp+0x30],esi
   1400072af:	test   rbx,rbx
   1400072b2:	je     0x14000760e
   1400072b8:	test   r14,r14
   1400072bb:	je     0x14000760e
   1400072c1:	cmp    si,WORD PTR [r14]
   1400072c5:	je     0x14000760e
   1400072cb:	test   rdi,rdi
   1400072ce:	je     0x14000760e
   1400072d4:	mov    rbx,QWORD PTR [rbp+0x1d0]
   1400072db:	test   r15d,r15d
   1400072de:	jne    0x1400072f4
   1400072e0:	test   r13,r13
   1400072e3:	je     0x1400072ea
   1400072e5:	test   rbx,rbx
   1400072e8:	jne    0x1400072f4
   1400072ea:	mov    eax,0x1
   1400072ef:	jmp    0x140007613
   1400072f4:	lea    rax,[rsp+0x40]
   1400072f9:	mov    esi,0x80070057
   1400072fe:	test   rax,rax
   140007301:	jne    0x14000735a
   140007303:	mov    edi,esi
   140007305:	mov    r15,QWORD PTR [rsp+0x38]
   14000730a:	xor    ebx,ebx
   14000730c:	cmp    DWORD PTR [r15],ebx
   14000730f:	jl     0x14000733a
   140007311:	cmp    edi,0x2c1001
   140007317:	jne    0x14000733a
   140007319:	lea    rax,[rsp+0x30]
   14000731e:	test   rax,rax
   140007321:	je     0x140007338
   140007323:	lea    rdx,[rsp+0x30]
   140007328:	mov    ecx,0x1
   14000732d:	call   0x140008168
   140007332:	mov    esi,eax
   140007334:	test   eax,eax
   140007336:	jns    0x14000733a
   140007338:	mov    edi,esi
   14000733a:	test   r12,r12
   14000733d:	je     0x140007353
   14000733f:	call   QWORD PTR [rip+0x2e33]        # 0x14000a178
   140007345:	mov    r8,r12
   140007348:	xor    edx,edx
   14000734a:	mov    rcx,rax
   14000734d:	call   QWORD PTR [rip+0x2e1d]        # 0x14000a170
   140007353:	mov    eax,edi
   140007355:	jmp    0x140007613
   14000735a:	lea    rcx,[rip+0x5e2f]        # 0x14000d190
   140007361:	call   0x140003154
   140007366:	mov    r12,rax
   140007369:	test   rax,rax
   14000736c:	jne    0x1400073a9
   14000736e:	call   QWORD PTR [rip+0x2d7c]        # 0x14000a0f0
   140007374:	movzx  ecx,ax
   140007377:	or     ecx,0x80070000
   14000737d:	test   eax,eax
   14000737f:	cmovle ecx,eax
   140007382:	test   ecx,ecx
   140007384:	jns    0x14000739c
   140007386:	call   QWORD PTR [rip+0x2d64]        # 0x14000a0f0
   14000738c:	movzx  edi,ax
   14000738f:	or     edi,0x80070000
   140007395:	test   eax,eax
   140007397:	cmovle edi,eax
   14000739a:	jmp    0x1400073a1
   14000739c:	mov    edi,0x80004005
   1400073a1:	test   edi,edi
   1400073a3:	js     0x140007305
   1400073a9:	lea    rax,[rip+0x5a90]        # 0x14000ce40
   1400073b0:	mov    r9,r12
   1400073b3:	mov    QWORD PTR [rsp+0x28],rax
   1400073b8:	lea    r8,[rip+0x5a89]        # 0x14000ce48
   1400073bf:	mov    edx,0x104
   1400073c4:	mov    QWORD PTR [rsp+0x20],r14
   1400073c9:	lea    rcx,[rsp+0x50]
   1400073ce:	call   0x140003060
   1400073d3:	mov    edi,eax
   1400073d5:	test   eax,eax
   1400073d7:	js     0x140007305
   1400073dd:	test   r15d,r15d
   1400073e0:	jne    0x1400074f0
   1400073e6:	xor    r15d,r15d
   1400073e9:	test   r13,r13
   1400073ec:	je     0x1400073f3
   1400073ee:	test   rbx,rbx
   1400073f1:	jne    0x1400073f5
   1400073f3:	mov    edi,esi
   1400073f5:	test   edi,edi
   1400073f7:	js     0x140007305
   1400073fd:	lea    rcx,[rsp+0x50]
   140007402:	call   0x140003a9c
   140007407:	cmp    eax,0x1
   14000740a:	jne    0x14000744d
   14000740c:	lea    rcx,[rsp+0x50]
   140007411:	call   0x140003604
   140007416:	test   eax,eax
   140007418:	jne    0x14000744d
   14000741a:	call   QWORD PTR [rip+0x2cd0]        # 0x14000a0f0
   140007420:	movzx  ecx,ax
   140007423:	or     ecx,0x80070000
   140007429:	test   eax,eax
   14000742b:	cmovle ecx,eax
   14000742e:	test   ecx,ecx
   140007430:	jns    0x140007448
   140007432:	call   QWORD PTR [rip+0x2cb8]        # 0x14000a0f0
   140007438:	movzx  edi,ax
   14000743b:	or     edi,0x80070000
   140007441:	test   eax,eax
   140007443:	cmovle edi,eax
   140007446:	jmp    0x14000744d
   140007448:	mov    edi,0x80004005
   14000744d:	test   edi,edi
   14000744f:	js     0x140007305
   140007455:	mov    rcx,r12
   140007458:	call   0x1400039f8
   14000745d:	test   eax,eax
   14000745f:	jne    0x1400074a0
   140007461:	mov    rcx,r12
   140007464:	call   0x1400040f8
   140007469:	test   eax,eax
   14000746b:	jne    0x1400074a0
   14000746d:	call   QWORD PTR [rip+0x2c7d]        # 0x14000a0f0
   140007473:	movzx  ecx,ax
   140007476:	or     ecx,0x80070000
   14000747c:	test   eax,eax
   14000747e:	cmovle ecx,eax
   140007481:	test   ecx,ecx
   140007483:	jns    0x14000749b
   140007485:	call   QWORD PTR [rip+0x2c65]        # 0x14000a0f0
   14000748b:	movzx  edi,ax
   14000748e:	or     edi,0x80070000
   140007494:	test   eax,eax
   140007496:	cmovle edi,eax
   140007499:	jmp    0x1400074a0
   14000749b:	mov    edi,0x80004005
   1400074a0:	test   edi,edi
   1400074a2:	js     0x140007305
   1400074a8:	cmp    r15w,WORD PTR [r14]
   1400074ac:	je     0x1400074ec
   1400074ae:	lea    rax,[rsp+0x50]
   1400074b3:	test   rax,rax
   1400074b6:	je     0x1400074ec
   1400074b8:	cmp    r15w,WORD PTR [rsp+0x50]
   1400074be:	je     0x1400074ec
   1400074c0:	test   r13,r13
   1400074c3:	je     0x1400074ec
   1400074c5:	test   rbx,rbx
   1400074c8:	je     0x1400074ec
   1400074ca:	lea    rax,[rsp+0x50]
   1400074cf:	xor    r9d,r9d
   1400074d2:	mov    QWORD PTR [rsp+0x28],rax
   1400074d7:	mov    r8,r14
   1400074da:	mov    edx,ebx
   1400074dc:	mov    QWORD PTR [rsp+0x20],r15
   1400074e1:	mov    rcx,r13
   1400074e4:	call   QWORD PTR [rip+0x2b16]        # 0x14000a000
   1400074ea:	jmp    0x14000754a
   1400074ec:	mov    edi,esi
   1400074ee:	jmp    0x14000754c
   1400074f0:	lea    rcx,[rsp+0x50]
   1400074f5:	call   0x140003a9c
   1400074fa:	test   eax,eax
   1400074fc:	jne    0x140007530
   1400074fe:	call   QWORD PTR [rip+0x2bec]        # 0x14000a0f0
   140007504:	movzx  ecx,ax
   140007507:	mov    ebx,0x80070000
   14000750c:	or     ecx,ebx
   14000750e:	test   eax,eax
   140007510:	cmovle ecx,eax
   140007513:	test   ecx,ecx
   140007515:	jns    0x140007529
   140007517:	call   QWORD PTR [rip+0x2bd3]        # 0x14000a0f0
   14000751d:	movzx  edi,ax
   140007520:	or     edi,ebx
   140007522:	test   eax,eax
   140007524:	cmovle edi,eax
   140007527:	jmp    0x14000754c
   140007529:	mov    edi,0x80004005
   14000752e:	jmp    0x14000754c
   140007530:	lea    rax,[rsp+0x30]
   140007535:	test   rax,rax
   140007538:	je     0x140007303
   14000753e:	lea    rdx,[rsp+0x30]
   140007543:	xor    ecx,ecx
   140007545:	call   0x140008168
   14000754a:	mov    edi,eax
   14000754c:	test   edi,edi
   14000754e:	js     0x140007305
   140007554:	mov    r15,QWORD PTR [rsp+0x38]
   140007559:	xor    ebx,ebx
   14000755b:	cmp    DWORD PTR [r15],ebx
   14000755e:	jl     0x14000733a
   140007564:	lea    rax,[rsp+0x50]
   140007569:	mov    QWORD PTR [rsp+0x40],rbx
   14000756e:	mov    DWORD PTR [rsp+0x38],ebx
   140007572:	test   rax,rax
   140007575:	je     0x140007607
   14000757b:	cmp    bx,WORD PTR [rsp+0x50]
   140007580:	je     0x140007607
   140007586:	lea    rax,[rsp+0x30]
   14000758b:	test   rax,rax
   14000758e:	je     0x140007607
   140007590:	lea    rax,[rsp+0x40]
   140007595:	xor    edx,edx
   140007597:	lea    r9,[rsp+0x30]
   14000759c:	mov    QWORD PTR [rsp+0x20],rax
   1400075a1:	lea    r8,[rsp+0x38]
   1400075a6:	lea    rcx,[rsp+0x50]
   1400075ab:	call   QWORD PTR [rip+0x2a57]        # 0x14000a008
   1400075b1:	mov    r14,QWORD PTR [rsp+0x40]
   1400075b6:	mov    edi,eax
   1400075b8:	cmp    eax,0x2c2000
   1400075bd:	jne    0x1400075e4
   1400075bf:	cmp    DWORD PTR [rsp+0x38],0x1
   1400075c4:	jne    0x1400075df
   1400075c6:	test   r14,r14
   1400075c9:	je     0x1400075df
   1400075cb:	mov    rdx,r15
   1400075ce:	mov    rcx,r14
   1400075d1:	call   0x140007ea0
   1400075d6:	mov    r14,QWORD PTR [rsp+0x40]
   1400075db:	mov    edi,eax
   1400075dd:	jmp    0x1400075e4
   1400075df:	mov    edi,0x80004005
   1400075e4:	test   r14,r14
   1400075e7:	je     0x14000730c
   1400075ed:	mov    rax,QWORD PTR [r14]
   1400075f0:	mov    rbx,QWORD PTR [rax+0x10]
   1400075f4:	mov    rcx,rbx
   1400075f7:	call   QWORD PTR [rip+0x2edb]        # 0x14000a4d8
   1400075fd:	mov    rcx,r14
   140007600:	call   rbx
   140007602:	jmp    0x14000730a
   140007607:	mov    edi,esi
   140007609:	jmp    0x14000730c
   14000760e:	mov    eax,0x80070057
   140007613:	mov    rcx,QWORD PTR [rbp+0x160]
   14000761a:	xor    rcx,rsp
   14000761d:	call   0x140009600
   140007622:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14000762a:	add    rsp,0x270
   140007631:	pop    r15
   140007633:	pop    r14
   140007635:	pop    r13
   140007637:	pop    r12
   140007639:	pop    rdi
   14000763a:	pop    rsi
   14000763b:	pop    rbp
   14000763c:	ret    
   14000763d:	int3   
   14000763e:	int3   
   14000763f:	int3   
   140007640:	int3   
   140007641:	int3   
   140007642:	int3   
   140007643:	int3   
   140007644:	mov    QWORD PTR [rsp+0x8],rbx
   140007649:	mov    QWORD PTR [rsp+0x10],rbp
   14000764e:	mov    QWORD PTR [rsp+0x18],rsi
   140007653:	push   rdi
   140007654:	push   r14
   140007656:	push   r15
   140007658:	sub    rsp,0x20
   14000765c:	mov    rsi,QWORD PTR [rsp+0x68]
   140007661:	mov    rdi,rdx
   140007664:	mov    ebx,ecx
   140007666:	test   rsi,rsi
   140007669:	je     0x140007794
   14000766f:	mov    r15,QWORD PTR [rsp+0x70]
   140007674:	test   r15,r15
   140007677:	je     0x140007794
   14000767d:	mov    r14,QWORD PTR [rsp+0x78]
   140007682:	test   r14,r14
   140007685:	je     0x140007794
   14000768b:	and    QWORD PTR [rsi],0x0
   14000768f:	mov    rcx,rsi
   140007692:	and    QWORD PTR [r15],0x0
   140007696:	and    QWORD PTR [r14],0x0
   14000769a:	call   0x140008394
   14000769f:	mov    ebp,eax
   1400076a1:	test   eax,eax
   1400076a3:	js     0x140007721
   1400076a5:	test   ebx,ebx
   1400076a7:	jne    0x1400076bd
   1400076a9:	mov    rcx,QWORD PTR [rsi]
   1400076ac:	mov    r9,r14
   1400076af:	mov    rdx,rdi
   1400076b2:	call   0x1400077b8
   1400076b7:	mov    ebp,eax
   1400076b9:	test   eax,eax
   1400076bb:	js     0x140007721
   1400076bd:	mov    rdi,QWORD PTR [rsi]
   1400076c0:	mov    rax,QWORD PTR [rdi]
   1400076c3:	mov    rbx,QWORD PTR [rax+0x40]
   1400076c7:	mov    rcx,rbx
   1400076ca:	call   QWORD PTR [rip+0x2e08]        # 0x14000a4d8
   1400076d0:	xor    edx,edx
   1400076d2:	mov    rcx,rdi
   1400076d5:	call   rbx
   1400076d7:	mov    ebp,eax
   1400076d9:	test   eax,eax
   1400076db:	js     0x140007721
   1400076dd:	mov    rdi,QWORD PTR [rsi]
   1400076e0:	mov    rax,QWORD PTR [rdi]
   1400076e3:	mov    rbx,QWORD PTR [rax+0x78]
   1400076e7:	mov    rcx,rbx
   1400076ea:	call   QWORD PTR [rip+0x2de8]        # 0x14000a4d8
   1400076f0:	mov    r9,r15
   1400076f3:	xor    r8d,r8d
   1400076f6:	xor    edx,edx
   1400076f8:	mov    rcx,rdi
   1400076fb:	call   rbx
   1400076fd:	mov    ebp,eax
   1400076ff:	test   eax,eax
   140007701:	jns    0x140007790
   140007707:	mov    rdi,QWORD PTR [rsi]
   14000770a:	mov    rax,QWORD PTR [rdi]
   14000770d:	mov    rbx,QWORD PTR [rax+0x48]
   140007711:	mov    rcx,rbx
   140007714:	call   QWORD PTR [rip+0x2dbe]        # 0x14000a4d8
   14000771a:	xor    edx,edx
   14000771c:	mov    rcx,rdi
   14000771f:	call   rbx
   140007721:	mov    rdi,QWORD PTR [rsi]
   140007724:	test   rdi,rdi
   140007727:	je     0x140007742
   140007729:	mov    rax,QWORD PTR [rdi]
   14000772c:	mov    rbx,QWORD PTR [rax+0x10]
   140007730:	mov    rcx,rbx
   140007733:	call   QWORD PTR [rip+0x2d9f]        # 0x14000a4d8
   140007739:	mov    rcx,rdi
   14000773c:	call   rbx
   14000773e:	and    QWORD PTR [rsi],0x0
   140007742:	and    QWORD PTR [rsi],0x0
   140007746:	mov    rdi,QWORD PTR [r15]
   140007749:	test   rdi,rdi
   14000774c:	je     0x140007767
   14000774e:	mov    rax,QWORD PTR [rdi]
   140007751:	mov    rbx,QWORD PTR [rax+0x10]
   140007755:	mov    rcx,rbx
   140007758:	call   QWORD PTR [rip+0x2d7a]        # 0x14000a4d8
   14000775e:	mov    rcx,rdi
   140007761:	call   rbx
   140007763:	and    QWORD PTR [r15],0x0
   140007767:	and    QWORD PTR [r15],0x0
   14000776b:	mov    rdi,QWORD PTR [r14]
   14000776e:	test   rdi,rdi
   140007771:	je     0x14000778c
   140007773:	mov    rax,QWORD PTR [rdi]
   140007776:	mov    rbx,QWORD PTR [rax+0x10]
   14000777a:	mov    rcx,rbx
   14000777d:	call   QWORD PTR [rip+0x2d55]        # 0x14000a4d8
   140007783:	mov    rcx,rdi
   140007786:	call   rbx
   140007788:	and    QWORD PTR [r14],0x0
   14000778c:	and    QWORD PTR [r14],0x0
   140007790:	mov    eax,ebp
   140007792:	jmp    0x140007799
   140007794:	mov    eax,0x80070057
   140007799:	mov    rbx,QWORD PTR [rsp+0x40]
   14000779e:	mov    rbp,QWORD PTR [rsp+0x48]
   1400077a3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400077a8:	add    rsp,0x20
   1400077ac:	pop    r15
   1400077ae:	pop    r14
   1400077b0:	pop    rdi
   1400077b1:	ret    
   1400077b2:	int3   
   1400077b3:	int3   
   1400077b4:	int3   
   1400077b5:	int3   
   1400077b6:	int3   
   1400077b7:	int3   
   1400077b8:	mov    rax,rsp
   1400077bb:	mov    QWORD PTR [rax+0x8],rbx
   1400077bf:	mov    QWORD PTR [rax+0x10],rbp
   1400077c3:	mov    QWORD PTR [rax+0x18],rsi
   1400077c7:	mov    QWORD PTR [rax+0x20],rdi
   1400077cb:	push   r14
   1400077cd:	sub    rsp,0x20
   1400077d1:	mov    rsi,r9
   1400077d4:	mov    rbp,rdx
   1400077d7:	mov    r14,rcx
   1400077da:	test   rcx,rcx
   1400077dd:	je     0x14000789d
   1400077e3:	test   r9,r9
   1400077e6:	je     0x14000789d
   1400077ec:	and    QWORD PTR [r9],0x0
   1400077f0:	mov    rax,QWORD PTR [rcx]
   1400077f3:	mov    rbx,QWORD PTR [rax+0x60]
   1400077f7:	mov    rcx,rbx
   1400077fa:	call   QWORD PTR [rip+0x2cd8]        # 0x14000a4d8
   140007800:	mov    rdx,rsi
   140007803:	mov    rcx,r14
   140007806:	call   rbx
   140007808:	mov    edi,eax
   14000780a:	test   eax,eax
   14000780c:	js     0x140007878
   14000780e:	mov    rdi,QWORD PTR [rsi]
   140007811:	mov    rax,QWORD PTR [rdi]
   140007814:	mov    rbx,QWORD PTR [rax+0x20]
   140007818:	mov    rcx,rbx
   14000781b:	call   QWORD PTR [rip+0x2cb7]        # 0x14000a4d8
   140007821:	mov    edx,0x1
   140007826:	mov    rcx,rdi
   140007829:	call   rbx
   14000782b:	mov    edi,eax
   14000782d:	test   eax,eax
   14000782f:	js     0x140007878
   140007831:	test   rbp,rbp
   140007834:	je     0x140007856
   140007836:	mov    rdi,QWORD PTR [rsi]
   140007839:	mov    rax,QWORD PTR [rdi]
   14000783c:	mov    rbx,QWORD PTR [rax+0xa0]
   140007843:	mov    rcx,rbx
   140007846:	call   QWORD PTR [rip+0x2c8c]        # 0x14000a4d8
   14000784c:	mov    rdx,rbp
   14000784f:	mov    rcx,rdi
   140007852:	call   rbx
   140007854:	mov    edi,eax
   140007856:	test   edi,edi
   140007858:	js     0x140007878
   14000785a:	mov    rax,QWORD PTR [r14]
   14000785d:	mov    rbx,QWORD PTR [rax+0x70]
   140007861:	mov    rcx,rbx
   140007864:	call   QWORD PTR [rip+0x2c6e]        # 0x14000a4d8
   14000786a:	mov    rdx,QWORD PTR [rsi]
   14000786d:	mov    rcx,r14
   140007870:	call   rbx
   140007872:	mov    edi,eax
   140007874:	test   eax,eax
   140007876:	jns    0x140007899
   140007878:	mov    r14,QWORD PTR [rsi]
   14000787b:	test   r14,r14
   14000787e:	je     0x140007899
   140007880:	mov    rax,QWORD PTR [r14]
   140007883:	mov    rbx,QWORD PTR [rax+0x10]
   140007887:	mov    rcx,rbx
   14000788a:	call   QWORD PTR [rip+0x2c48]        # 0x14000a4d8
   140007890:	mov    rcx,r14
   140007893:	call   rbx
   140007895:	and    QWORD PTR [rsi],0x0
   140007899:	mov    eax,edi
   14000789b:	jmp    0x1400078a2
   14000789d:	mov    eax,0x80070057
   1400078a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078a7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400078ac:	mov    rsi,QWORD PTR [rsp+0x40]
   1400078b1:	mov    rdi,QWORD PTR [rsp+0x48]
   1400078b6:	add    rsp,0x20
   1400078ba:	pop    r14
   1400078bc:	ret    
   1400078bd:	int3   
   1400078be:	int3   
   1400078bf:	int3   
   1400078c0:	int3   
   1400078c1:	int3   
   1400078c2:	int3   
   1400078c3:	int3   
   1400078c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400078c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400078ce:	mov    QWORD PTR [rsp+0x18],rdi
   1400078d3:	push   r14
   1400078d5:	sub    rsp,0x20
   1400078d9:	mov    rdi,r8
   1400078dc:	mov    rsi,rdx
   1400078df:	mov    r14,rcx
   1400078e2:	test   rcx,rcx
   1400078e5:	je     0x140007913
   1400078e7:	mov    rax,QWORD PTR [rcx]
   1400078ea:	mov    rbx,QWORD PTR [rax+0x48]
   1400078ee:	mov    rcx,rbx
   1400078f1:	call   QWORD PTR [rip+0x2be1]        # 0x14000a4d8
   1400078f7:	xor    edx,edx
   1400078f9:	mov    rcx,r14
   1400078fc:	call   rbx
   1400078fe:	mov    rax,QWORD PTR [r14]
   140007901:	mov    rbx,QWORD PTR [rax+0x10]
   140007905:	mov    rcx,rbx
   140007908:	call   QWORD PTR [rip+0x2bca]        # 0x14000a4d8
   14000790e:	mov    rcx,r14
   140007911:	call   rbx
   140007913:	test   rsi,rsi
   140007916:	je     0x14000792d
   140007918:	mov    rax,QWORD PTR [rsi]
   14000791b:	mov    rbx,QWORD PTR [rax+0x10]
   14000791f:	mov    rcx,rbx
   140007922:	call   QWORD PTR [rip+0x2bb0]        # 0x14000a4d8
   140007928:	mov    rcx,rsi
   14000792b:	call   rbx
   14000792d:	test   rdi,rdi
   140007930:	je     0x140007947
   140007932:	mov    rax,QWORD PTR [rdi]
   140007935:	mov    rbx,QWORD PTR [rax+0x10]
   140007939:	mov    rcx,rbx
   14000793c:	call   QWORD PTR [rip+0x2b96]        # 0x14000a4d8
   140007942:	mov    rcx,rdi
   140007945:	call   rbx
   140007947:	mov    rbx,QWORD PTR [rsp+0x30]
   14000794c:	mov    rsi,QWORD PTR [rsp+0x38]
   140007951:	mov    rdi,QWORD PTR [rsp+0x40]
   140007956:	add    rsp,0x20
   14000795a:	pop    r14
   14000795c:	ret    
   14000795d:	int3   
   14000795e:	int3   
   14000795f:	int3   
   140007960:	int3   
   140007961:	int3   
   140007962:	int3   
   140007963:	int3   
   140007964:	mov    rax,rsp
   140007967:	mov    QWORD PTR [rax+0x10],rbx
   14000796b:	mov    QWORD PTR [rax+0x18],rbp
   14000796f:	mov    QWORD PTR [rax+0x20],rsi
   140007973:	push   rdi
   140007974:	push   r14
   140007976:	push   r15
   140007978:	sub    rsp,0x40
   14000797c:	and    QWORD PTR [rax+0x8],0x0
   140007981:	mov    rbp,r9
   140007984:	and    QWORD PTR [rax-0x28],0x0
   140007989:	mov    rsi,r8
   14000798c:	mov    rdi,QWORD PTR [rsp+0x80]
   140007994:	mov    r15,rdx
   140007997:	mov    r14,rcx
   14000799a:	test   rcx,rcx
   14000799d:	je     0x140007a75
   1400079a3:	test   r8,r8
   1400079a6:	je     0x140007a75
   1400079ac:	test   r9,r9
   1400079af:	je     0x140007a75
   1400079b5:	test   rdi,rdi
   1400079b8:	je     0x140007a75
   1400079be:	mov    rax,QWORD PTR [rcx]
   1400079c1:	mov    rbx,QWORD PTR [rax+0x20]
   1400079c5:	mov    rcx,rbx
   1400079c8:	call   QWORD PTR [rip+0x2b0a]        # 0x14000a4d8
   1400079ce:	lea    rax,[rsp+0x30]
   1400079d3:	mov    r8,r15
   1400079d6:	lea    r9,[rsp+0x60]
   1400079db:	mov    QWORD PTR [rsp+0x20],rax
   1400079e0:	mov    rdx,rsi
   1400079e3:	mov    rcx,r14
   1400079e6:	call   rbx
   1400079e8:	mov    esi,eax
   1400079ea:	test   eax,eax
   1400079ec:	jns    0x140007a04
   1400079ee:	mov    r8d,eax
   1400079f1:	lea    rdx,[rip+0x54e8]        # 0x14000cee0
   1400079f8:	mov    ecx,0x1
   1400079fd:	call   0x140002e20
   140007a02:	jmp    0x140007a1b
   140007a04:	mov    rdx,QWORD PTR [rsp+0x30]
   140007a09:	mov    r9,rdi
   140007a0c:	mov    rcx,QWORD PTR [rsp+0x60]
   140007a11:	mov    r8,rbp
   140007a14:	call   0x140007ba8
   140007a19:	mov    esi,eax
   140007a1b:	mov    rcx,QWORD PTR [rsp+0x60]
   140007a20:	test   rcx,rcx
   140007a23:	je     0x140007a71
   140007a25:	mov    rax,QWORD PTR [rsp+0x30]
   140007a2a:	xor    edi,edi
   140007a2c:	test   rax,rax
   140007a2f:	je     0x140007a6b
   140007a31:	mov    r14,QWORD PTR [rcx+rdi*8]
   140007a35:	test   r14,r14
   140007a38:	je     0x140007a63
   140007a3a:	mov    rax,QWORD PTR [r14]
   140007a3d:	mov    rbx,QWORD PTR [rax+0x10]
   140007a41:	mov    rcx,rbx
   140007a44:	call   QWORD PTR [rip+0x2a8e]        # 0x14000a4d8
   140007a4a:	mov    rcx,r14
   140007a4d:	call   rbx
   140007a4f:	mov    rax,QWORD PTR [rsp+0x60]
   140007a54:	and    QWORD PTR [rax+rdi*8],0x0
   140007a59:	mov    rcx,QWORD PTR [rsp+0x60]
   140007a5e:	mov    rax,QWORD PTR [rsp+0x30]
   140007a63:	inc    rdi
   140007a66:	cmp    rdi,rax
   140007a69:	jb     0x140007a31
   140007a6b:	call   QWORD PTR [rip+0x264f]        # 0x14000a0c0
   140007a71:	mov    eax,esi
   140007a73:	jmp    0x140007a9b
   140007a75:	mov    r9,rdx
   140007a78:	mov    QWORD PTR [rsp+0x28],rdi
   140007a7d:	mov    QWORD PTR [rsp+0x20],r8
   140007a82:	lea    rdx,[rip+0x53d7]        # 0x14000ce60
   140007a89:	mov    r8,rcx
   140007a8c:	mov    ecx,0x1
   140007a91:	call   0x140002e20
   140007a96:	mov    eax,0x80070057
   140007a9b:	mov    rbx,QWORD PTR [rsp+0x68]
   140007aa0:	mov    rbp,QWORD PTR [rsp+0x70]
   140007aa5:	mov    rsi,QWORD PTR [rsp+0x78]
   140007aaa:	add    rsp,0x40
   140007aae:	pop    r15
   140007ab0:	pop    r14
   140007ab2:	pop    rdi
   140007ab3:	ret    
   140007ab4:	int3   
   140007ab5:	int3   
   140007ab6:	int3   
   140007ab7:	int3   
   140007ab8:	int3   
   140007ab9:	int3   
   140007aba:	int3   
   140007abb:	int3   
   140007abc:	mov    rax,rsp
   140007abf:	mov    QWORD PTR [rax+0x10],rbx
   140007ac3:	mov    QWORD PTR [rax+0x18],r8
   140007ac7:	push   rbp
   140007ac8:	push   rsi
   140007ac9:	push   rdi
   140007aca:	push   r14
   140007acc:	push   r15
   140007ace:	sub    rsp,0x20
   140007ad2:	xor    edi,edi
   140007ad4:	mov    r14,r9
   140007ad7:	mov    QWORD PTR [rax+0x18],rdi
   140007adb:	mov    rsi,rdx
   140007ade:	mov    QWORD PTR [rax+0x8],rdi
   140007ae2:	mov    r15,rcx
   140007ae5:	test   rcx,rcx
   140007ae8:	je     0x140007b8c
   140007aee:	test   rdx,rdx
   140007af1:	je     0x140007b8c
   140007af7:	cmp    QWORD PTR [rsp+0x78],rdi
   140007afc:	je     0x140007b8c
   140007b02:	mov    rax,QWORD PTR [rcx]
   140007b05:	mov    rbx,QWORD PTR [rax+0x88]
   140007b0c:	mov    rcx,rbx
   140007b0f:	call   QWORD PTR [rip+0x29c3]        # 0x14000a4d8
   140007b15:	lea    r9,[rsp+0x50]
   140007b1a:	mov    rdx,rsi
   140007b1d:	lea    r8,[rsp+0x60]
   140007b22:	mov    rcx,r15
   140007b25:	call   rbx
   140007b27:	mov    rsi,QWORD PTR [rsp+0x50]
   140007b2c:	mov    ebp,eax
   140007b2e:	test   eax,eax
   140007b30:	js     0x140007b5e
   140007b32:	mov    rcx,QWORD PTR [rsp+0x70]
   140007b37:	test   rcx,rcx
   140007b3a:	je     0x140007b3f
   140007b3c:	mov    QWORD PTR [rcx],rsi
   140007b3f:	test   r14,r14
   140007b42:	je     0x140007b5e
   140007b44:	mov    rax,QWORD PTR [rsp+0x60]
   140007b49:	mov    rbx,rdi
   140007b4c:	mov    QWORD PTR [r14],rax
   140007b4f:	mov    rsi,rdi
   140007b52:	mov    QWORD PTR [rsp+0x60],rbx
   140007b57:	mov    QWORD PTR [rsp+0x50],rdi
   140007b5c:	jmp    0x140007b63
   140007b5e:	mov    rbx,QWORD PTR [rsp+0x60]
   140007b63:	test   rbx,rbx
   140007b66:	je     0x140007b88
   140007b68:	test   rsi,rsi
   140007b6b:	je     0x140007b7f
   140007b6d:	mov    rcx,QWORD PTR [rbx+rdi*8]
   140007b71:	call   QWORD PTR [rip+0x2549]        # 0x14000a0c0
   140007b77:	inc    rdi
   140007b7a:	cmp    rdi,rsi
   140007b7d:	jb     0x140007b6d
   140007b7f:	mov    rcx,rbx
   140007b82:	call   QWORD PTR [rip+0x2538]        # 0x14000a0c0
   140007b88:	mov    eax,ebp
   140007b8a:	jmp    0x140007b91
   140007b8c:	mov    eax,0x80070057
   140007b91:	mov    rbx,QWORD PTR [rsp+0x58]
   140007b96:	add    rsp,0x20
   140007b9a:	pop    r15
   140007b9c:	pop    r14
   140007b9e:	pop    rdi
   140007b9f:	pop    rsi
   140007ba0:	pop    rbp
   140007ba1:	ret    
   140007ba2:	int3   
   140007ba3:	int3   
   140007ba4:	int3   
   140007ba5:	int3   
   140007ba6:	int3   
   140007ba7:	int3   
   140007ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140007bad:	mov    QWORD PTR [rsp+0x18],r8
   140007bb2:	push   rbp
   140007bb3:	push   rsi
   140007bb4:	push   rdi
   140007bb5:	push   r12
   140007bb7:	push   r13
   140007bb9:	push   r14
   140007bbb:	push   r15
   140007bbd:	mov    rbp,rsp
   140007bc0:	sub    rsp,0x80
   140007bc7:	xor    edi,edi
   140007bc9:	mov    r13,r9
   140007bcc:	mov    rax,r8
   140007bcf:	mov    r12,rdx
   140007bd2:	mov    r14,rcx
   140007bd5:	mov    ebx,edi
   140007bd7:	test   r9,r9
   140007bda:	je     0x140007e59
   140007be0:	test   rax,rax
   140007be3:	je     0x140007e59
   140007be9:	test   rcx,rcx
   140007bec:	je     0x140007e55
   140007bf2:	mov    esi,edi
   140007bf4:	test   rdx,rdx
   140007bf7:	je     0x140007e55
   140007bfd:	test   ebx,ebx
   140007bff:	js     0x140007e55
   140007c05:	xor    edx,edx
   140007c07:	mov    DWORD PTR [rbp+0x58],edi
   140007c0a:	lea    rcx,[rbp-0x38]
   140007c0e:	mov    DWORD PTR [rbp-0x50],edi
   140007c11:	mov    DWORD PTR [rbp-0x4c],edi
   140007c14:	mov    DWORD PTR [rbp-0x40],edi
   140007c17:	lea    r8d,[rdx+0x30]
   140007c1b:	call   0x140009c86
   140007c20:	mov    rdi,QWORD PTR [r14+rsi*8]
   140007c24:	mov    rax,QWORD PTR [rdi]
   140007c27:	mov    rbx,QWORD PTR [rax+0x20]
   140007c2b:	mov    rcx,rbx
   140007c2e:	call   QWORD PTR [rip+0x28a4]        # 0x14000a4d8
   140007c34:	lea    rdx,[rbp+0x58]
   140007c38:	mov    rcx,rdi
   140007c3b:	call   rbx
   140007c3d:	xor    edi,edi
   140007c3f:	mov    ebx,eax
   140007c41:	test   eax,eax
   140007c43:	js     0x140007e49
   140007c49:	mov    rdi,QWORD PTR [r14+rsi*8]
   140007c4d:	mov    rax,QWORD PTR [rdi]
   140007c50:	mov    rbx,QWORD PTR [rax+0x30]
   140007c54:	mov    rcx,rbx
   140007c57:	call   QWORD PTR [rip+0x287b]        # 0x14000a4d8
   140007c5d:	lea    rdx,[rbp-0x50]
   140007c61:	mov    rcx,rdi
   140007c64:	call   rbx
   140007c66:	xor    edi,edi
   140007c68:	mov    ebx,eax
   140007c6a:	test   eax,eax
   140007c6c:	js     0x140007e49
   140007c72:	mov    rdi,QWORD PTR [r14+rsi*8]
   140007c76:	mov    rax,QWORD PTR [rdi]
   140007c79:	mov    rbx,QWORD PTR [rax+0x38]
   140007c7d:	mov    rcx,rbx
   140007c80:	call   QWORD PTR [rip+0x2852]        # 0x14000a4d8
   140007c86:	lea    rdx,[rbp-0x4c]
   140007c8a:	mov    rcx,rdi
   140007c8d:	call   rbx
   140007c8f:	xor    edi,edi
   140007c91:	mov    ebx,eax
   140007c93:	test   eax,eax
   140007c95:	js     0x140007e49
   140007c9b:	mov    eax,DWORD PTR [rbp-0x50]
   140007c9e:	mov    r15d,edi
   140007ca1:	cmp    DWORD PTR [rbp+0x58],edi
   140007ca4:	mov    DWORD PTR [rbp-0x10],eax
   140007ca7:	mov    eax,DWORD PTR [rbp-0x4c]
   140007caa:	setge  r15b
   140007cae:	mov    DWORD PTR [rbp-0xc],eax
   140007cb1:	inc    r15d
   140007cb4:	mov    rax,QWORD PTR [rbp+0x50]
   140007cb8:	mov    QWORD PTR [rbp-0x48],rdi
   140007cbc:	mov    rdi,QWORD PTR [r14+rsi*8]
   140007cc0:	mov    QWORD PTR [rbp-0x30],rax
   140007cc4:	mov    rax,QWORD PTR [rdi]
   140007cc7:	mov    rbx,QWORD PTR [rax+0x40]
   140007ccb:	mov    rcx,rbx
   140007cce:	call   QWORD PTR [rip+0x2804]        # 0x14000a4d8
   140007cd4:	lea    rdx,[rbp-0x48]
   140007cd8:	mov    rcx,rdi
   140007cdb:	call   rbx
   140007cdd:	xor    edi,edi
   140007cdf:	mov    ebx,eax
   140007ce1:	test   eax,eax
   140007ce3:	js     0x140007e1e
   140007ce9:	mov    r8,QWORD PTR [rbp-0x48]
   140007ced:	test   r8,r8
   140007cf0:	je     0x140007d88
   140007cf6:	lea    rdx,[rip+0x5313]        # 0x14000d010
   140007cfd:	mov    ecx,r15d
   140007d00:	call   0x140002e20
   140007d05:	lea    rax,[rbp-0x28]
   140007d09:	test   rax,rax
   140007d0c:	je     0x140007d1b
   140007d0e:	mov    rcx,QWORD PTR [rbp-0x48]
   140007d12:	lea    rdx,[rbp-0x28]
   140007d16:	call   0x14000850c
   140007d1b:	mov    rbx,QWORD PTR [rbp-0x48]
   140007d1f:	lea    rax,[rbp-0x18]
   140007d23:	test   rax,rax
   140007d26:	je     0x140007d7b
   140007d28:	mov    QWORD PTR [rbp-0x18],rdi
   140007d2c:	test   rbx,rbx
   140007d2f:	je     0x140007d7b
   140007d31:	lea    rdx,[rip+0x5510]        # 0x14000d248
   140007d38:	mov    rcx,rbx
   140007d3b:	call   0x140004ab0
   140007d40:	cmp    eax,0x1
   140007d43:	jne    0x140007d77
   140007d45:	lea    rdx,[rbx+0x28]
   140007d49:	lea    rcx,[rbp-0x18]
   140007d4d:	call   0x140004b20
   140007d52:	test   eax,eax
   140007d54:	js     0x140007d77
   140007d56:	mov    rax,QWORD PTR [rbp-0x18]
   140007d5a:	cmp    di,WORD PTR [rax]
   140007d5d:	je     0x140007d77
   140007d5f:	mov    ecx,0x2f
   140007d64:	cmp    cx,WORD PTR [rax]
   140007d67:	jne    0x140007d71
   140007d69:	mov    ecx,0x5c
   140007d6e:	mov    WORD PTR [rax],cx
   140007d71:	add    rax,0x2
   140007d75:	jmp    0x140007d5a
   140007d77:	mov    rbx,QWORD PTR [rbp-0x48]
   140007d7b:	mov    rcx,rbx
   140007d7e:	call   QWORD PTR [rip+0x2294]        # 0x14000a018
   140007d84:	mov    QWORD PTR [rbp-0x48],rdi
   140007d88:	mov    rdi,QWORD PTR [r14+rsi*8]
   140007d8c:	mov    rax,QWORD PTR [rdi]
   140007d8f:	mov    rbx,QWORD PTR [rax+0x18]
   140007d93:	mov    rcx,rbx
   140007d96:	call   QWORD PTR [rip+0x273c]        # 0x14000a4d8
   140007d9c:	lea    rdx,[rbp-0x48]
   140007da0:	mov    rcx,rdi
   140007da3:	call   rbx
   140007da5:	xor    edi,edi
   140007da7:	mov    ebx,eax
   140007da9:	test   eax,eax
   140007dab:	js     0x140007e1e
   140007dad:	mov    r8,QWORD PTR [rbp-0x48]
   140007db1:	test   r8,r8
   140007db4:	je     0x140007dd3
   140007db6:	lea    rdx,[rip+0x52a3]        # 0x14000d060
   140007dbd:	mov    ecx,r15d
   140007dc0:	call   0x140002e20
   140007dc5:	mov    rcx,QWORD PTR [rbp-0x48]
   140007dc9:	call   QWORD PTR [rip+0x2249]        # 0x14000a018
   140007dcf:	mov    QWORD PTR [rbp-0x48],rdi
   140007dd3:	mov    rdi,QWORD PTR [r14+rsi*8]
   140007dd7:	mov    rax,QWORD PTR [rdi]
   140007dda:	mov    rbx,QWORD PTR [rax+0x28]
   140007dde:	mov    rcx,rbx
   140007de1:	call   QWORD PTR [rip+0x26f1]        # 0x14000a4d8
   140007de7:	lea    rdx,[rbp-0x48]
   140007deb:	mov    rcx,rdi
   140007dee:	call   rbx
   140007df0:	xor    edi,edi
   140007df2:	mov    ebx,eax
   140007df4:	test   eax,eax
   140007df6:	js     0x140007e1e
   140007df8:	mov    r8,QWORD PTR [rbp-0x48]
   140007dfc:	test   r8,r8
   140007dff:	je     0x140007e1e
   140007e01:	lea    rdx,[rip+0x52a8]        # 0x14000d0b0
   140007e08:	mov    ecx,r15d
   140007e0b:	call   0x140002e20
   140007e10:	mov    rcx,QWORD PTR [rbp-0x48]
   140007e14:	call   QWORD PTR [rip+0x21fe]        # 0x14000a018
   140007e1a:	mov    QWORD PTR [rbp-0x48],rdi
   140007e1e:	mov    edx,DWORD PTR [rbp+0x58]
   140007e21:	lea    r8,[rbp-0x40]
   140007e25:	mov    rcx,r13
   140007e28:	call   QWORD PTR [rip+0x226a]        # 0x14000a098
   140007e2e:	cmp    QWORD PTR [rbp-0x28],rdi
   140007e32:	je     0x140007e49
   140007e34:	call   QWORD PTR [rip+0x233e]        # 0x14000a178
   140007e3a:	mov    r8,QWORD PTR [rbp-0x28]
   140007e3e:	xor    edx,edx
   140007e40:	mov    rcx,rax
   140007e43:	call   QWORD PTR [rip+0x2327]        # 0x14000a170
   140007e49:	inc    rsi
   140007e4c:	cmp    rsi,r12
   140007e4f:	jb     0x140007bfd
   140007e55:	mov    eax,ebx
   140007e57:	jmp    0x140007e7f
   140007e59:	mov    QWORD PTR [rsp+0x28],r9
   140007e5e:	mov    r8,rcx
   140007e61:	mov    r9,rdx
   140007e64:	mov    QWORD PTR [rsp+0x20],rax
   140007e69:	lea    rdx,[rip+0x5100]        # 0x14000cf70
   140007e70:	mov    ecx,0x1
   140007e75:	call   0x140002e20
   140007e7a:	mov    eax,0x80070057
   140007e7f:	mov    rbx,QWORD PTR [rsp+0xc0]
   140007e87:	add    rsp,0x80
   140007e8e:	pop    r15
   140007e90:	pop    r14
   140007e92:	pop    r13
   140007e94:	pop    r12
   140007e96:	pop    rdi
   140007e97:	pop    rsi
   140007e98:	pop    rbp
   140007e99:	ret    
   140007e9a:	int3   
   140007e9b:	int3   
   140007e9c:	int3   
   140007e9d:	int3   
   140007e9e:	int3   
   140007e9f:	int3   
   140007ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140007ea5:	push   rbp
   140007ea6:	push   rsi
   140007ea7:	push   rdi
   140007ea8:	push   r12
   140007eaa:	push   r13
   140007eac:	push   r14
   140007eae:	push   r15
   140007eb0:	mov    rbp,rsp
   140007eb3:	sub    rsp,0x60
   140007eb7:	xor    r13d,r13d
   140007eba:	mov    r12,rdx
   140007ebd:	mov    DWORD PTR [rbp+0x40],r13d
   140007ec1:	mov    r14,rcx
   140007ec4:	test   rcx,rcx
   140007ec7:	je     0x140008044
   140007ecd:	test   rdx,rdx
   140007ed0:	je     0x140008044
   140007ed6:	mov    rax,QWORD PTR [rcx]
   140007ed9:	mov    rbx,QWORD PTR [rax+0x18]
   140007edd:	mov    rcx,rbx
   140007ee0:	call   QWORD PTR [rip+0x25f2]        # 0x14000a4d8
   140007ee6:	lea    rdx,[rbp+0x40]
   140007eea:	mov    rcx,r14
   140007eed:	call   rbx
   140007eef:	lea    r15d,[r13+0x1]
   140007ef3:	mov    esi,eax
   140007ef5:	test   eax,eax
   140007ef7:	js     0x140008040
   140007efd:	cmp    r15d,DWORD PTR [rbp+0x40]
   140007f01:	ja     0x140008040
   140007f07:	mov    rax,QWORD PTR [r14]
   140007f0a:	mov    QWORD PTR [rbp+0x58],r13
   140007f0e:	mov    DWORD PTR [rbp+0x50],r13d
   140007f12:	mov    rbx,QWORD PTR [rax+0x20]
   140007f16:	mov    rcx,rbx
   140007f19:	call   QWORD PTR [rip+0x25b9]        # 0x14000a4d8
   140007f1f:	lea    r8,[rbp+0x58]
   140007f23:	mov    edx,r15d
   140007f26:	mov    rcx,r14
   140007f29:	call   rbx
   140007f2b:	mov    esi,eax
   140007f2d:	test   eax,eax
   140007f2f:	js     0x140008017
   140007f35:	mov    rdi,QWORD PTR [rbp+0x58]
   140007f39:	test   rdi,rdi
   140007f3c:	je     0x140007f5f
   140007f3e:	mov    rax,QWORD PTR [rdi]
   140007f41:	mov    rbx,QWORD PTR [rax+0x40]
   140007f45:	mov    rcx,rbx
   140007f48:	call   QWORD PTR [rip+0x258a]        # 0x14000a4d8
   140007f4e:	lea    rdx,[rbp+0x50]
   140007f52:	mov    rcx,rdi
   140007f55:	call   rbx
   140007f57:	mov    rdi,QWORD PTR [rbp+0x58]
   140007f5b:	mov    esi,eax
   140007f5d:	jmp    0x140007f64
   140007f5f:	mov    esi,0x8007000d
   140007f64:	test   esi,esi
   140007f66:	js     0x14000801b
   140007f6c:	cmp    DWORD PTR [rbp+0x50],0x3
   140007f70:	jbe    0x14000801b
   140007f76:	xor    edx,edx
   140007f78:	mov    DWORD PTR [rbp-0x40],r13d
   140007f7c:	lea    rcx,[rbp-0x38]
   140007f80:	lea    r8d,[rdx+0x30]
   140007f84:	call   0x140009c86
   140007f89:	mov    rax,QWORD PTR [rdi]
   140007f8c:	mov    rbx,QWORD PTR [rax+0x28]
   140007f90:	mov    rcx,rbx
   140007f93:	call   QWORD PTR [rip+0x253f]        # 0x14000a4d8
   140007f99:	lea    rdx,[rbp-0x28]
   140007f9d:	mov    rcx,rdi
   140007fa0:	call   rbx
   140007fa2:	mov    esi,eax
   140007fa4:	test   eax,eax
   140007fa6:	js     0x140007ff5
   140007fa8:	mov    rdi,QWORD PTR [rbp+0x58]
   140007fac:	mov    rax,QWORD PTR [rdi]
   140007faf:	mov    rbx,QWORD PTR [rax+0x30]
   140007fb3:	mov    rcx,rbx
   140007fb6:	call   QWORD PTR [rip+0x251c]        # 0x14000a4d8
   140007fbc:	lea    rdx,[rbp-0x30]
   140007fc0:	mov    rcx,rdi
   140007fc3:	call   rbx
   140007fc5:	mov    esi,eax
   140007fc7:	test   eax,eax
   140007fc9:	js     0x140007ff5
   140007fcb:	mov    rcx,QWORD PTR [rbp-0x28]
   140007fcf:	mov    edx,0x2c
   140007fd4:	call   QWORD PTR [rip+0x23d6]        # 0x14000a3b0
   140007fda:	test   rax,rax
   140007fdd:	je     0x140007fe3
   140007fdf:	mov    WORD PTR [rax],r13w
   140007fe3:	lea    r8,[rbp-0x40]
   140007fe7:	mov    edx,0x8030000b
   140007fec:	mov    rcx,r12
   140007fef:	call   QWORD PTR [rip+0x20a3]        # 0x14000a098
   140007ff5:	mov    rcx,QWORD PTR [rbp-0x28]
   140007ff9:	test   rcx,rcx
   140007ffc:	je     0x140008008
   140007ffe:	call   QWORD PTR [rip+0x20bc]        # 0x14000a0c0
   140008004:	mov    QWORD PTR [rbp-0x28],r13
   140008008:	mov    rcx,QWORD PTR [rbp-0x30]
   14000800c:	test   rcx,rcx
   14000800f:	je     0x140008017
   140008011:	call   QWORD PTR [rip+0x20a9]        # 0x14000a0c0
   140008017:	mov    rdi,QWORD PTR [rbp+0x58]
   14000801b:	test   rdi,rdi
   14000801e:	je     0x140008035
   140008020:	mov    rax,QWORD PTR [rdi]
   140008023:	mov    rbx,QWORD PTR [rax+0x10]
   140008027:	mov    rcx,rbx
   14000802a:	call   QWORD PTR [rip+0x24a8]        # 0x14000a4d8
   140008030:	mov    rcx,rdi
   140008033:	call   rbx
   140008035:	inc    r15d
   140008038:	test   esi,esi
   14000803a:	jns    0x140007efd
   140008040:	mov    eax,esi
   140008042:	jmp    0x140008049
   140008044:	mov    eax,0x80070057
   140008049:	mov    rbx,QWORD PTR [rsp+0xa8]
   140008051:	add    rsp,0x60
   140008055:	pop    r15
   140008057:	pop    r14
   140008059:	pop    r13
   14000805b:	pop    r12
   14000805d:	pop    rdi
   14000805e:	pop    rsi
   14000805f:	pop    rbp
   140008060:	ret    
   140008061:	int3   
   140008062:	int3   
   140008063:	int3   
   140008064:	int3   
   140008065:	int3   
   140008066:	int3   
   140008067:	int3   
   140008068:	mov    QWORD PTR [rsp+0x10],rbx
   14000806d:	push   rsi
   14000806e:	sub    rsp,0x30
   140008072:	xor    ebx,ebx
   140008074:	lea    rdx,[rip+0x5095]        # 0x14000d110
   14000807b:	and    QWORD PTR [rsp+0x40],rbx
   140008080:	xor    r8d,r8d
   140008083:	mov    rcx,0xffffffff80000002
   14000808a:	call   0x140004620
   14000808f:	mov    esi,0x80070000
   140008094:	cmp    eax,0x1
   140008097:	jne    0x1400080db
   140008099:	xor    r8d,r8d
   14000809c:	lea    rdx,[rip+0x506d]        # 0x14000d110
   1400080a3:	call   0x1400047f8
   1400080a8:	test   eax,eax
   1400080aa:	jne    0x1400080db
   1400080ac:	call   QWORD PTR [rip+0x203e]        # 0x14000a0f0
   1400080b2:	movzx  ecx,ax
   1400080b5:	or     ecx,esi
   1400080b7:	test   eax,eax
   1400080b9:	cmovle ecx,eax
   1400080bc:	test   ecx,ecx
   1400080be:	jns    0x1400080d2
   1400080c0:	call   QWORD PTR [rip+0x202a]        # 0x14000a0f0
   1400080c6:	movzx  ebx,ax
   1400080c9:	or     ebx,esi
   1400080cb:	test   eax,eax
   1400080cd:	cmovle ebx,eax
   1400080d0:	jmp    0x1400080d7
   1400080d2:	mov    ebx,0x80004005
   1400080d7:	test   ebx,ebx
   1400080d9:	js     0x140008152
   1400080db:	lea    rax,[rsp+0x40]
   1400080e0:	mov    r9d,0x20219
   1400080e6:	xor    r8d,r8d
   1400080e9:	mov    QWORD PTR [rsp+0x20],rax
   1400080ee:	lea    rdx,[rip+0x501b]        # 0x14000d110
   1400080f5:	mov    rcx,0xffffffff80000002
   1400080fc:	call   QWORD PTR [rip+0x2176]        # 0x14000a278
   140008102:	test   eax,eax
   140008104:	jne    0x140008152
   140008106:	mov    r8d,0x200
   14000810c:	lea    rdx,[rip+0x4ffd]        # 0x14000d110
   140008113:	call   0x1400047f8
   140008118:	test   eax,eax
   14000811a:	jne    0x140008147
   14000811c:	call   QWORD PTR [rip+0x1fce]        # 0x14000a0f0
   140008122:	movzx  ecx,ax
   140008125:	or     ecx,esi
   140008127:	test   eax,eax
   140008129:	cmovle ecx,eax
   14000812c:	test   ecx,ecx
   14000812e:	jns    0x140008142
   140008130:	call   QWORD PTR [rip+0x1fba]        # 0x14000a0f0
   140008136:	movzx  ebx,ax
   140008139:	or     ebx,esi
   14000813b:	test   eax,eax
   14000813d:	cmovle ebx,eax
   140008140:	jmp    0x140008147
   140008142:	mov    ebx,0x80004005
   140008147:	mov    rcx,QWORD PTR [rsp+0x40]
   14000814c:	call   QWORD PTR [rip+0x214e]        # 0x14000a2a0
   140008152:	mov    eax,ebx
   140008154:	mov    rbx,QWORD PTR [rsp+0x48]
   140008159:	add    rsp,0x30
   14000815d:	pop    rsi
   14000815e:	ret    
   14000815f:	int3   
   140008160:	int3   
   140008161:	int3   
   140008162:	int3   
   140008163:	int3   
   140008164:	int3   
   140008165:	int3   
   140008166:	int3   
   140008167:	int3   
   140008168:	rex push rbp
   14000816a:	push   rbx
   14000816b:	push   rdi
   14000816c:	push   r14
   14000816e:	push   r15
   140008170:	mov    rbp,rsp
   140008173:	sub    rsp,0x60
   140008177:	mov    r15,rdx
   14000817a:	test   ecx,ecx
   14000817c:	jne    0x140008260
   140008182:	lea    rdi,[rip+0x4037]        # 0x14000c1c0
   140008189:	mov    rbx,0xffffffff80000002
   140008190:	mov    rdx,rdi
   140008193:	lea    r8,[rip+0x5036]        # 0x14000d1d0
   14000819a:	mov    rcx,rbx
   14000819d:	call   0x140004620
   1400081a2:	mov    r14d,eax
   1400081a5:	cmp    eax,0x1
   1400081a8:	jne    0x140008345
   1400081ae:	and    QWORD PTR [rbp-0x10],0x0
   1400081b3:	and    DWORD PTR [rbp+0x30],0x0
   1400081b7:	and    DWORD PTR [rbp+0x48],0x0
   1400081bb:	mov    DWORD PTR [rbp+0x40],0x4
   1400081c2:	test   rdi,rdi
   1400081c5:	je     0x1400081fe
   1400081c7:	lea    rax,[rbp-0x10]
   1400081cb:	mov    r9d,0x20019
   1400081d1:	xor    r8d,r8d
   1400081d4:	mov    QWORD PTR [rsp+0x20],rax
   1400081d9:	mov    rdx,rdi
   1400081dc:	mov    rcx,rbx
   1400081df:	call   QWORD PTR [rip+0x2093]        # 0x14000a278
   1400081e5:	test   eax,eax
   1400081e7:	jne    0x1400081f2
   1400081e9:	mov    rbx,QWORD PTR [rbp-0x10]
   1400081ed:	test   rbx,rbx
   1400081f0:	jne    0x140008202
   1400081f2:	mov    ecx,eax
   1400081f4:	call   QWORD PTR [rip+0x1ee6]        # 0x14000a0e0
   1400081fa:	xor    eax,eax
   1400081fc:	jmp    0x140008258
   1400081fe:	mov    QWORD PTR [rbp-0x10],rbx
   140008202:	lea    rax,[rbp+0x40]
   140008206:	xor    r8d,r8d
   140008209:	mov    QWORD PTR [rsp+0x28],rax
   14000820e:	lea    r9,[rbp+0x48]
   140008212:	lea    rax,[rbp+0x30]
   140008216:	mov    rcx,rbx
   140008219:	lea    rdx,[rip+0x4fb0]        # 0x14000d1d0
   140008220:	mov    QWORD PTR [rsp+0x20],rax
   140008225:	call   QWORD PTR [rip+0x205d]        # 0x14000a288
   14000822b:	mov    ebx,eax
   14000822d:	test   eax,eax
   14000822f:	jne    0x14000823a
   140008231:	cmp    DWORD PTR [rbp+0x40],0x4
   140008235:	je     0x14000823e
   140008237:	lea    ebx,[rax+0xd]
   14000823a:	and    DWORD PTR [rbp+0x30],0x0
   14000823e:	test   rdi,rdi
   140008241:	je     0x14000824d
   140008243:	mov    rcx,QWORD PTR [rbp-0x10]
   140008247:	call   QWORD PTR [rip+0x2053]        # 0x14000a2a0
   14000824d:	mov    ecx,ebx
   14000824f:	call   QWORD PTR [rip+0x1e8b]        # 0x14000a0e0
   140008255:	mov    eax,DWORD PTR [rbp+0x30]
   140008258:	mov    DWORD PTR [r15],eax
   14000825b:	jmp    0x140008345
   140008260:	mov    eax,DWORD PTR [rdx]
   140008262:	mov    DWORD PTR [rbp+0x30],eax
   140008265:	lea    rax,[rbp+0x30]
   140008269:	test   rax,rax
   14000826c:	jne    0x14000827f
   14000826e:	lea    ecx,[rax+0x57]
   140008271:	call   QWORD PTR [rip+0x1e69]        # 0x14000a0e0
   140008277:	xor    r14d,r14d
   14000827a:	jmp    0x140008345
   14000827f:	lea    rdi,[rip+0x3f3a]        # 0x14000c1c0
   140008286:	xor    r8d,r8d
   140008289:	mov    rcx,0xffffffff80000002
   140008290:	test   rdi,rdi
   140008293:	je     0x14000830e
   140008295:	and    QWORD PTR [rbp+0x48],r8
   140008299:	lea    rax,[rbp+0x40]
   14000829d:	and    DWORD PTR [rbp+0x40],r8d
   1400082a1:	lea    r9,[rip+0x32f0]        # 0x14000b598
   1400082a8:	mov    QWORD PTR [rsp+0x40],rax
   1400082ad:	mov    rdx,rdi
   1400082b0:	lea    rax,[rbp+0x48]
   1400082b4:	mov    QWORD PTR [rsp+0x38],rax
   1400082b9:	and    QWORD PTR [rsp+0x30],r8
   1400082be:	mov    DWORD PTR [rsp+0x28],0x20006
   1400082c6:	and    DWORD PTR [rsp+0x20],r8d
   1400082cb:	call   QWORD PTR [rip+0x1faf]        # 0x14000a280
   1400082d1:	mov    ebx,eax
   1400082d3:	test   eax,eax
   1400082d5:	jne    0x140008334
   1400082d7:	mov    rcx,QWORD PTR [rbp+0x48]
   1400082db:	lea    rax,[rbp+0x30]
   1400082df:	mov    DWORD PTR [rsp+0x28],0x4
   1400082e7:	lea    r9d,[rbx+0x4]
   1400082eb:	xor    r8d,r8d
   1400082ee:	mov    QWORD PTR [rsp+0x20],rax
   1400082f3:	lea    rdx,[rip+0x4ed6]        # 0x14000d1d0
   1400082fa:	call   QWORD PTR [rip+0x1fa8]        # 0x14000a2a8
   140008300:	mov    rcx,QWORD PTR [rbp+0x48]
   140008304:	mov    ebx,eax
   140008306:	call   QWORD PTR [rip+0x1f94]        # 0x14000a2a0
   14000830c:	jmp    0x140008334
   14000830e:	lea    rax,[rbp+0x30]
   140008312:	mov    DWORD PTR [rsp+0x28],0x4
   14000831a:	mov    r9d,0x4
   140008320:	mov    QWORD PTR [rsp+0x20],rax
   140008325:	lea    rdx,[rip+0x4ea4]        # 0x14000d1d0
   14000832c:	call   QWORD PTR [rip+0x1f76]        # 0x14000a2a8
   140008332:	mov    ebx,eax
   140008334:	mov    ecx,ebx
   140008336:	call   QWORD PTR [rip+0x1da4]        # 0x14000a0e0
   14000833c:	xor    r14d,r14d
   14000833f:	test   ebx,ebx
   140008341:	sete   r14b
   140008345:	test   r14d,r14d
   140008348:	jne    0x14000837c
   14000834a:	call   QWORD PTR [rip+0x1da0]        # 0x14000a0f0
   140008350:	movzx  ecx,ax
   140008353:	mov    ebx,0x80070000
   140008358:	or     ecx,ebx
   14000835a:	test   eax,eax
   14000835c:	cmovle ecx,eax
   14000835f:	test   ecx,ecx
   140008361:	jns    0x140008375
   140008363:	call   QWORD PTR [rip+0x1d87]        # 0x14000a0f0
   140008369:	movzx  ecx,ax
   14000836c:	or     ecx,ebx
   14000836e:	test   eax,eax
   140008370:	cmovle ecx,eax
   140008373:	jmp    0x14000837e
   140008375:	mov    ecx,0x80004005
   14000837a:	jmp    0x14000837e
   14000837c:	xor    ecx,ecx
   14000837e:	mov    eax,ecx
   140008380:	add    rsp,0x60
   140008384:	pop    r15
   140008386:	pop    r14
   140008388:	pop    rdi
   140008389:	pop    rbx
   14000838a:	pop    rbp
   14000838b:	ret    
   14000838c:	int3   
   14000838d:	int3   
   14000838e:	int3   
   14000838f:	int3   
   140008390:	int3   
   140008391:	int3   
   140008392:	int3   
   140008393:	int3   
   140008394:	mov    QWORD PTR [rsp+0x8],rbx
   140008399:	mov    QWORD PTR [rsp+0x18],rbp
   14000839e:	mov    QWORD PTR [rsp+0x20],rsi
   1400083a3:	push   rdi
   1400083a4:	sub    rsp,0x20
   1400083a8:	mov    eax,DWORD PTR [rip+0x8422]        # 0x1400107d0
   1400083ae:	mov    rbp,rcx
   1400083b1:	test   al,0x1
   1400083b3:	jne    0x1400083d2
   1400083b5:	or     eax,0x1
   1400083b8:	lea    rcx,[rip+0x1a31]        # 0x140009df0
   1400083bf:	mov    DWORD PTR [rip+0x840b],eax        # 0x1400107d0
   1400083c5:	and    QWORD PTR [rip+0x840b],0x0        # 0x1400107d8
   1400083cd:	call   0x1400096c8
   1400083d2:	cmp    DWORD PTR [rip+0x83b7],0x0        # 0x140010790
   1400083d9:	jne    0x14000841f
   1400083db:	lea    rcx,[rip+0x4e16]        # 0x14000d1f8
   1400083e2:	call   QWORD PTR [rip+0x1e08]        # 0x14000a1f0
   1400083e8:	mov    QWORD PTR [rip+0x8399],rax        # 0x140010788
   1400083ef:	mov    QWORD PTR [rip+0x83e2],rax        # 0x1400107d8
   1400083f6:	call   QWORD PTR [rip+0x1cf4]        # 0x14000a0f0
   1400083fc:	test   eax,eax
   1400083fe:	jne    0x140008407
   140008400:	mov    eax,0x1f
   140008405:	jmp    0x14000840d
   140008407:	call   QWORD PTR [rip+0x1ce3]        # 0x14000a0f0
   14000840d:	mov    DWORD PTR [rip+0x8371],eax        # 0x140010784
   140008413:	mov    DWORD PTR [rip+0x8373],0x1        # 0x140010790
   14000841d:	jmp    0x140008425
   14000841f:	mov    eax,DWORD PTR [rip+0x835f]        # 0x140010784
   140008425:	mov    rcx,QWORD PTR [rip+0x835c]        # 0x140010788
   14000842c:	test   rcx,rcx
   14000842f:	je     0x1400084df
   140008435:	lea    rdx,[rip+0x4ddc]        # 0x14000d218
   14000843c:	call   QWORD PTR [rip+0x1d76]        # 0x14000a1b8
   140008442:	mov    rbx,rax
   140008445:	test   rax,rax
   140008448:	je     0x1400084b2
   14000844a:	mov    rcx,rax
   14000844d:	call   QWORD PTR [rip+0x2085]        # 0x14000a4d8
   140008453:	lea    r8,[rsp+0x38]
   140008458:	lea    rdx,[rip+0x52f1]        # 0x14000d750
   14000845f:	lea    rcx,[rip+0x52da]        # 0x14000d740
   140008466:	call   rbx
   140008468:	mov    esi,eax
   14000846a:	test   eax,eax
   14000846c:	js     0x1400084ed
   14000846e:	mov    rdi,QWORD PTR [rsp+0x38]
   140008473:	mov    rax,QWORD PTR [rdi]
   140008476:	mov    rbx,QWORD PTR [rax+0x18]
   14000847a:	mov    rcx,rbx
   14000847d:	call   QWORD PTR [rip+0x2055]        # 0x14000a4d8
   140008483:	mov    r9,rbp
   140008486:	lea    r8,[rip+0x52a3]        # 0x14000d730
   14000848d:	xor    edx,edx
   14000848f:	mov    rcx,rdi
   140008492:	call   rbx
   140008494:	mov    rdi,QWORD PTR [rsp+0x38]
   140008499:	mov    esi,eax
   14000849b:	mov    rax,QWORD PTR [rdi]
   14000849e:	mov    rbx,QWORD PTR [rax+0x10]
   1400084a2:	mov    rcx,rbx
   1400084a5:	call   QWORD PTR [rip+0x202d]        # 0x14000a4d8
   1400084ab:	mov    rcx,rdi
   1400084ae:	call   rbx
   1400084b0:	jmp    0x1400084ed
   1400084b2:	call   QWORD PTR [rip+0x1c38]        # 0x14000a0f0
   1400084b8:	movzx  ecx,ax
   1400084bb:	mov    ebx,0x80070000
   1400084c0:	or     ecx,ebx
   1400084c2:	test   eax,eax
   1400084c4:	cmovle ecx,eax
   1400084c7:	test   ecx,ecx
   1400084c9:	jns    0x1400084d8
   1400084cb:	call   QWORD PTR [rip+0x1c1f]        # 0x14000a0f0
   1400084d1:	movzx  esi,ax
   1400084d4:	or     esi,ebx
   1400084d6:	jmp    0x1400084e8
   1400084d8:	mov    esi,0x80004005
   1400084dd:	jmp    0x1400084ed
   1400084df:	movzx  esi,ax
   1400084e2:	or     esi,0x80070000
   1400084e8:	test   eax,eax
   1400084ea:	cmovle esi,eax
   1400084ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084f2:	mov    eax,esi
   1400084f4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400084f9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400084fe:	add    rsp,0x20
   140008502:	pop    rdi
   140008503:	ret    
   140008504:	int3   
   140008505:	int3   
   140008506:	int3   
   140008507:	int3   
   140008508:	int3   
   140008509:	int3   
   14000850a:	int3   
   14000850b:	int3   
   14000850c:	mov    rax,rsp
   14000850f:	mov    QWORD PTR [rax+0x8],rbx
   140008513:	mov    QWORD PTR [rax+0x10],rbp
   140008517:	mov    QWORD PTR [rax+0x18],rsi
   14000851b:	mov    QWORD PTR [rax+0x20],rdi
   14000851f:	push   r12
   140008521:	push   r14
   140008523:	push   r15
   140008525:	sub    rsp,0x20
   140008529:	xor    r12d,r12d
   14000852c:	mov    r15,rdx
   14000852f:	mov    QWORD PTR [rdx],r12
   140008532:	mov    rbx,rcx
   140008535:	mov    edi,0x1
   14000853a:	test   rcx,rcx
   14000853d:	je     0x140008689
   140008543:	lea    rdx,[rip+0x4ce6]        # 0x14000d230
   14000854a:	call   0x140004ab0
   14000854f:	cmp    eax,edi
   140008551:	jne    0x140008689
   140008557:	or     rsi,0xffffffffffffffff
   14000855b:	inc    rsi
   14000855e:	cmp    WORD PTR [rbx+rsi*2],r12w
   140008563:	jne    0x14000855b
   140008565:	mov    edx,0x3f
   14000856a:	mov    rcx,rbx
   14000856d:	call   QWORD PTR [rip+0x1e3d]        # 0x14000a3b0
   140008573:	mov    rbp,rax
   140008576:	test   rax,rax
   140008579:	jne    0x14000859e
   14000857b:	cmp    esi,0x6
   14000857e:	jbe    0x140008689
   140008584:	lea    r8,[rbx+0xc]
   140008588:	mov    rcx,r15
   14000858b:	lea    rdx,[rip+0x4cae]        # 0x14000d240
   140008592:	call   0x140004b20
   140008597:	mov    edi,eax
   140008599:	jmp    0x140008689
   14000859e:	lea    r14,[rbx+0xc]
   1400085a2:	cmp    rax,r14
   1400085a5:	jbe    0x140008689
   1400085ab:	sub    rbp,rbx
   1400085ae:	sub    rbp,0xc
   1400085b2:	sar    rbp,1
   1400085b5:	add    ebp,edi
   1400085b7:	mov    esi,ebp
   1400085b9:	lea    rbx,[rbp*2+0x0]
   1400085c1:	call   QWORD PTR [rip+0x1bb1]        # 0x14000a178
   1400085c7:	mov    r8,rbx
   1400085ca:	mov    edx,0x8
   1400085cf:	mov    rcx,rax
   1400085d2:	call   QWORD PTR [rip+0x1b90]        # 0x14000a168
   1400085d8:	mov    QWORD PTR [r15],rax
   1400085db:	mov    rdx,rax
   1400085de:	test   rax,rax
   1400085e1:	je     0x140008659
   1400085e3:	lea    rcx,[rbp-0x1]
   1400085e7:	mov    r10d,0x7ffffffe
   1400085ed:	cmp    rcx,r10
   1400085f0:	lea    r9d,[rbp-0x1]
   1400085f4:	mov    r8d,r12d
   1400085f7:	mov    eax,0x80070057
   1400085fc:	cmova  r8d,eax
   140008600:	test   r8d,r8d
   140008603:	js     0x14000864c
   140008605:	cmp    r9,r10
   140008608:	jbe    0x14000860f
   14000860a:	mov    r8d,eax
   14000860d:	jmp    0x140008650
   14000860f:	mov    r8d,r12d
   140008612:	test   ebp,ebp
   140008614:	je     0x140008640
   140008616:	sub    r9,rsi
   140008619:	sub    r14,rdx
   14000861c:	lea    rax,[r9+rsi*1]
   140008620:	test   rax,rax
   140008623:	je     0x14000863b
   140008625:	movzx  eax,WORD PTR [r14+rdx*1]
   14000862a:	test   ax,ax
   14000862d:	je     0x14000863b
   14000862f:	mov    WORD PTR [rdx],ax
   140008632:	add    rdx,0x2
   140008636:	sub    rsi,rdi
   140008639:	jne    0x14000861c
   14000863b:	test   rsi,rsi
   14000863e:	jne    0x140008650
   140008640:	sub    rdx,0x2
   140008644:	mov    r8d,0x8007007a
   14000864a:	jmp    0x140008650
   14000864c:	test   ebp,ebp
   14000864e:	je     0x140008654
   140008650:	mov    WORD PTR [rdx],r12w
   140008654:	mov    edi,r8d
   140008657:	jmp    0x140008689
   140008659:	call   QWORD PTR [rip+0x1a91]        # 0x14000a0f0
   14000865f:	movzx  ecx,ax
   140008662:	mov    ebx,0x80070000
   140008667:	or     ecx,ebx
   140008669:	test   eax,eax
   14000866b:	cmovle ecx,eax
   14000866e:	test   ecx,ecx
   140008670:	jns    0x140008684
   140008672:	call   QWORD PTR [rip+0x1a78]        # 0x14000a0f0
   140008678:	movzx  edi,ax
   14000867b:	or     edi,ebx
   14000867d:	test   eax,eax
   14000867f:	cmovle edi,eax
   140008682:	jmp    0x140008689
   140008684:	mov    edi,0x80004005
   140008689:	mov    rbx,QWORD PTR [rsp+0x40]
   14000868e:	mov    eax,edi
   140008690:	mov    rdi,QWORD PTR [rsp+0x58]
   140008695:	mov    rbp,QWORD PTR [rsp+0x48]
   14000869a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000869f:	add    rsp,0x20
   1400086a3:	pop    r15
   1400086a5:	pop    r14
   1400086a7:	pop    r12
   1400086a9:	ret    
   1400086aa:	int3   
   1400086ab:	int3   
   1400086ac:	int3   
   1400086ad:	int3   
   1400086ae:	int3   
   1400086af:	int3   
   1400086b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400086b5:	push   rdi
   1400086b6:	sub    rsp,0x180
   1400086bd:	mov    rax,QWORD PTR [rip+0x7944]        # 0x140010008
   1400086c4:	xor    rax,rsp
   1400086c7:	mov    QWORD PTR [rsp+0x170],rax
   1400086cf:	cmp    QWORD PTR [rip+0x8081],0x0        # 0x140010758
   1400086d7:	jne    0x140008862
   1400086dd:	xor    edi,edi
   1400086df:	cmp    BYTE PTR [rip+0x7fde],dil        # 0x1400106c4
   1400086e6:	jne    0x1400087d7
   1400086ec:	lea    rcx,[rsp+0x50]
   1400086f1:	mov    DWORD PTR [rsp+0x50],0x114
   1400086f9:	call   QWORD PTR [rip+0x1c31]        # 0x14000a330
   1400086ff:	test   eax,eax
   140008701:	je     0x14000872e
   140008703:	mov    ecx,DWORD PTR [rsp+0x54]
   140008707:	cmp    ecx,0x6
   14000870a:	setb   al
   14000870d:	mov    BYTE PTR [rip+0x7fbd],al        # 0x1400106d0
   140008713:	cmp    ecx,0x6
   140008716:	ja     0x140008721
   140008718:	jne    0x140008726
   14000871a:	cmp    DWORD PTR [rsp+0x58],0x1
   14000871f:	jbe    0x140008726
   140008721:	mov    edi,0x1
   140008726:	test   al,al
   140008728:	jne    0x1400087ce
   14000872e:	lea    rcx,[rip+0x1ea3]        # 0x14000a5d8
   140008735:	call   QWORD PTR [rip+0x1a85]        # 0x14000a1c0
   14000873b:	mov    rbx,rax
   14000873e:	test   rax,rax
   140008741:	jne    0x14000875c
   140008743:	test   edi,edi
   140008745:	je     0x1400087a2
   140008747:	lea    rcx,[rip+0x1eb2]        # 0x14000a600
   14000874e:	call   QWORD PTR [rip+0x1a6c]        # 0x14000a1c0
   140008754:	mov    rbx,rax
   140008757:	test   rax,rax
   14000875a:	je     0x1400087a2
   14000875c:	lea    rdx,[rip+0x1eed]        # 0x14000a650
   140008763:	mov    rcx,rbx
   140008766:	call   QWORD PTR [rip+0x1a4c]        # 0x14000a1b8
   14000876c:	mov    QWORD PTR [rip+0x7f55],rax        # 0x1400106c8
   140008773:	test   rax,rax
   140008776:	je     0x1400087a2
   140008778:	lea    rdx,[rip+0x1ee1]        # 0x14000a660
   14000877f:	mov    rcx,rbx
   140008782:	call   QWORD PTR [rip+0x1a30]        # 0x14000a1b8
   140008788:	mov    QWORD PTR [rip+0x78d9],rax        # 0x140010068
   14000878f:	test   rax,rax
   140008792:	jne    0x1400087ac
   140008794:	lea    rax,[rip+0xffffffffffff8d45]        # 0x1400014e0
   14000879b:	mov    QWORD PTR [rip+0x78c6],rax        # 0x140010068
   1400087a2:	mov    al,0x1
   1400087a4:	mov    BYTE PTR [rip+0x7f26],al        # 0x1400106d0
   1400087aa:	jmp    0x1400087ce
   1400087ac:	lea    rdx,[rip+0x1ebd]        # 0x14000a670
   1400087b3:	mov    rcx,rbx
   1400087b6:	call   QWORD PTR [rip+0x19fc]        # 0x14000a1b8
   1400087bc:	mov    QWORD PTR [rip+0x7f1d],rax        # 0x1400106e0
   1400087c3:	test   rax,rax
   1400087c6:	je     0x140008794
   1400087c8:	mov    al,BYTE PTR [rip+0x7f02]        # 0x1400106d0
   1400087ce:	mov    BYTE PTR [rip+0x7eef],0x1        # 0x1400106c4
   1400087d5:	jmp    0x1400087dd
   1400087d7:	mov    al,BYTE PTR [rip+0x7ef3]        # 0x1400106d0
   1400087dd:	test   al,al
   1400087df:	jne    0x140008811
   1400087e1:	mov    rbx,QWORD PTR [rip+0x7880]        # 0x140010068
   1400087e8:	mov    rcx,rbx
   1400087eb:	call   QWORD PTR [rip+0x1ce7]        # 0x14000a4d8
   1400087f1:	lea    r9,[rip+0x7f60]        # 0x140010758
   1400087f8:	lea    r8,[rip+0x7891]        # 0x140010090
   1400087ff:	lea    rdx,[rip+0xffffffffffff8b9a]        # 0x1400013a0
   140008806:	lea    rcx,[rip+0x4a6b]        # 0x14000d278
   14000880d:	call   rbx
   14000880f:	jmp    0x140008862
   140008811:	and    QWORD PTR [rsp+0x48],0x0
   140008817:	lea    rdx,[rip+0x7872]        # 0x140010090
   14000881e:	mov    QWORD PTR [rsp+0x38],rdx
   140008823:	lea    rax,[rip+0x4a4e]        # 0x14000d278
   14000882a:	and    QWORD PTR [rsp+0x30],0x0
   140008830:	lea    rcx,[rsp+0x40]
   140008835:	and    QWORD PTR [rsp+0x28],0x0
   14000883b:	mov    r9d,0x1
   140008841:	mov    QWORD PTR [rsp+0x20],rcx
   140008846:	mov    r8,rax
   140008849:	lea    rcx,[rip+0xffffffffffff89e0]        # 0x140001230
   140008850:	mov    QWORD PTR [rip+0x7f01],rdx        # 0x140010758
   140008857:	mov    QWORD PTR [rsp+0x40],rax
   14000885c:	call   QWORD PTR [rip+0x1afe]        # 0x14000a360
   140008862:	mov    rcx,QWORD PTR [rsp+0x170]
   14000886a:	xor    rcx,rsp
   14000886d:	call   0x140009600
   140008872:	mov    rbx,QWORD PTR [rsp+0x190]
   14000887a:	add    rsp,0x180
   140008881:	pop    rdi
   140008882:	ret    
   140008883:	int3   
   140008884:	int3   
   140008885:	int3   
   140008886:	int3   
   140008887:	int3   
   140008888:	int3   
   140008889:	int3   
   14000888a:	int3   
   14000888b:	int3   
   14000888c:	int3   
   14000888d:	int3   
   14000888e:	int3   
   14000888f:	int3   
   140008890:	mov    QWORD PTR [rsp+0x8],rbx
   140008895:	mov    QWORD PTR [rsp+0x10],rsi
   14000889a:	push   rdi
   14000889b:	sub    rsp,0x20
   14000889f:	xor    esi,esi
   1400088a1:	cmp    BYTE PTR [rip+0x7e1c],sil        # 0x1400106c4
   1400088a8:	je     0x14000891d
   1400088aa:	mov    rdi,QWORD PTR [rip+0x7ea7]        # 0x140010758
   1400088b1:	test   rdi,rdi
   1400088b4:	je     0x14000891d
   1400088b6:	cmp    BYTE PTR [rip+0x7e13],sil        # 0x1400106d0
   1400088bd:	jne    0x1400088d6
   1400088bf:	mov    rbx,QWORD PTR [rip+0x7e1a]        # 0x1400106e0
   1400088c6:	mov    rcx,rbx
   1400088c9:	call   QWORD PTR [rip+0x1c09]        # 0x14000a4d8
   1400088cf:	mov    rcx,rdi
   1400088d2:	call   rbx
   1400088d4:	jmp    0x140008916
   1400088d6:	mov    rcx,QWORD PTR [rdi]
   1400088d9:	call   QWORD PTR [rip+0x1a89]        # 0x14000a368
   1400088df:	mov    DWORD PTR [rdi+0x20],esi
   1400088e2:	mov    BYTE PTR [rdi+0x28],sil
   1400088e6:	mov    QWORD PTR [rdi+0x8],rsi
   1400088ea:	cmp    WORD PTR [rdi+0x2a],si
   1400088ee:	jbe    0x140008913
   1400088f0:	movzx  eax,WORD PTR [rdi+0x2a]
   1400088f4:	mov    rcx,QWORD PTR [rdi+0x30]
   1400088f8:	dec    eax
   1400088fa:	cdq    
   1400088fb:	and    edx,0x1f
   1400088fe:	add    eax,edx
   140008900:	xor    edx,edx
   140008902:	sar    eax,0x5
   140008905:	inc    eax
   140008907:	movsxd r8,eax
   14000890a:	shl    r8,0x2
   14000890e:	call   0x140009c86
   140008913:	mov    QWORD PTR [rdi],rsi
   140008916:	mov    QWORD PTR [rip+0x7e3b],rsi        # 0x140010758
   14000891d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008922:	mov    rsi,QWORD PTR [rsp+0x38]
   140008927:	add    rsp,0x20
   14000892b:	pop    rdi
   14000892c:	ret    
   14000892d:	int3   
   14000892e:	int3   
   14000892f:	int3   
   140008930:	int3   
   140008931:	int3   
   140008932:	int3   
   140008933:	int3   
   140008934:	mov    rax,rsp
   140008937:	mov    QWORD PTR [rax+0x20],rbx
   14000893b:	mov    QWORD PTR [rax+0x18],r8
   14000893f:	mov    QWORD PTR [rax+0x10],rdx
   140008943:	mov    QWORD PTR [rax+0x8],rcx
   140008947:	push   rbp
   140008948:	push   rsi
   140008949:	push   rdi
   14000894a:	mov    rbp,rsp
   14000894d:	sub    rsp,0x30
   140008951:	and    DWORD PTR [rbp+0x28],0x0
   140008955:	lea    r8,[rip+0x493c]        # 0x14000d298
   14000895c:	and    QWORD PTR [rbp+0x20],0x0
   140008961:	lea    rdx,[rip+0x4958]        # 0x14000d2c0
   140008968:	mov    rcx,0xffffffff80000002
   14000896f:	lea    rbx,[rip+0x4992]        # 0x14000d308
   140008976:	call   0x1400046cc
   14000897b:	mov    esi,eax
   14000897d:	mov    edi,0x80070057
   140008982:	lea    rax,[rbp+0x28]
   140008986:	test   rax,rax
   140008989:	je     0x140008a40
   14000898f:	lea    rcx,[rbp+0x28]
   140008993:	call   0x140004f0c
   140008998:	test   eax,eax
   14000899a:	js     0x140008a40
   1400089a0:	xor    edx,edx
   1400089a2:	mov    DWORD PTR [rbp+0x30],edx
   1400089a5:	cmp    esi,0x4
   1400089a8:	je     0x140008a07
   1400089aa:	cmp    esi,0x7
   1400089ad:	jne    0x140008a40
   1400089b3:	mov    esi,DWORD PTR [rbp+0x28]
   1400089b6:	lea    rax,[rip+0x4a43]        # 0x14000d400
   1400089bd:	test   esi,esi
   1400089bf:	lea    rcx,[rip+0x1e3a]        # 0x14000a800
   1400089c6:	cmovne rcx,rax
   1400089ca:	test   rcx,rcx
   1400089cd:	je     0x1400089dd
   1400089cf:	lea    rdx,[rbp+0x30]
   1400089d3:	call   0x1400050ac
   1400089d8:	mov    edx,DWORD PTR [rbp+0x30]
   1400089db:	jmp    0x1400089df
   1400089dd:	mov    eax,edi
   1400089df:	test   eax,eax
   1400089e1:	js     0x140008a40
   1400089e3:	test   edx,edx
   1400089e5:	jne    0x1400089f9
   1400089e7:	lea    rbx,[rip+0x4a82]        # 0x14000d470
   1400089ee:	lea    rax,[rip+0x4a2b]        # 0x14000d420
   1400089f5:	test   esi,esi
   1400089f7:	jmp    0x140008a3c
   1400089f9:	cmp    edx,0x3
   1400089fc:	jne    0x140008a40
   1400089fe:	lea    rbx,[rip+0x4abb]        # 0x14000d4c0
   140008a05:	jmp    0x1400089ee
   140008a07:	lea    rcx,[rip+0x4932]        # 0x14000d340
   140008a0e:	test   rcx,rcx
   140008a11:	je     0x140008a21
   140008a13:	lea    rdx,[rbp+0x30]
   140008a17:	call   0x1400050ac
   140008a1c:	mov    edx,DWORD PTR [rbp+0x30]
   140008a1f:	jmp    0x140008a23
   140008a21:	mov    eax,edi
   140008a23:	test   eax,eax
   140008a25:	js     0x140008a40
   140008a27:	test   edx,edx
   140008a29:	jne    0x140008a40
   140008a2b:	cmp    DWORD PTR [rbp+0x28],edx
   140008a2e:	lea    rax,[rip+0x492b]        # 0x14000d360
   140008a35:	lea    rbx,[rip+0x4974]        # 0x14000d3b0
   140008a3c:	cmovne rbx,rax
   140008a40:	lea    rax,[rbp+0x20]
   140008a44:	test   rax,rax
   140008a47:	je     0x140008ab8
   140008a49:	lea    rcx,[rbp+0x20]
   140008a4d:	call   0x140008ad0
   140008a52:	mov    rsi,QWORD PTR [rbp+0x20]
   140008a56:	mov    edi,eax
   140008a58:	test   eax,eax
   140008a5a:	js     0x140008a9f
   140008a5c:	or     r9d,0xffffffff
   140008a60:	mov    r8,rsi
   140008a63:	mov    DWORD PTR [rsp+0x28],r9d
   140008a68:	mov    ecx,0x409
   140008a6d:	mov    QWORD PTR [rsp+0x20],rbx
   140008a72:	lea    edx,[r9+0x2]
   140008a76:	call   QWORD PTR [rip+0x185c]        # 0x14000a2d8
   140008a7c:	cmp    eax,0x2
   140008a7f:	je     0x140008a95
   140008a81:	mov    r9,rbx
   140008a84:	lea    rdx,[rip+0x4a65]        # 0x14000d4f0
   140008a8b:	mov    r8,rsi
   140008a8e:	xor    ecx,ecx
   140008a90:	call   0x140002e20
   140008a95:	mov    r8,rbx
   140008a98:	call   0x140008c78
   140008a9d:	mov    edi,eax
   140008a9f:	test   rsi,rsi
   140008aa2:	je     0x140008ab8
   140008aa4:	call   QWORD PTR [rip+0x16ce]        # 0x14000a178
   140008aaa:	mov    r8,rsi
   140008aad:	xor    edx,edx
   140008aaf:	mov    rcx,rax
   140008ab2:	call   QWORD PTR [rip+0x16b8]        # 0x14000a170
   140008ab8:	mov    eax,edi
   140008aba:	mov    rbx,QWORD PTR [rsp+0x68]
   140008abf:	add    rsp,0x30
   140008ac3:	pop    rdi
   140008ac4:	pop    rsi
   140008ac5:	pop    rbp
   140008ac6:	ret    
   140008ac7:	int3   
   140008ac8:	int3   
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	int3   
   140008acd:	int3   
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	mov    QWORD PTR [rsp+0x20],rbx
   140008ad5:	push   rbp
   140008ad6:	push   rsi
   140008ad7:	push   rdi
   140008ad8:	push   r14
   140008ada:	push   r15
   140008adc:	mov    rbp,rsp
   140008adf:	sub    rsp,0x30
   140008ae3:	xor    edi,edi
   140008ae5:	lea    r15,[rip+0x4ab4]        # 0x14000d5a0
   140008aec:	mov    QWORD PTR [rbp+0x40],rdi
   140008af0:	mov    r14,rcx
   140008af3:	mov    DWORD PTR [rbp+0x30],edi
   140008af6:	mov    ebx,edi
   140008af8:	mov    DWORD PTR [rbp+0x38],edi
   140008afb:	mov    rcx,0xffffffff80000002
   140008b02:	test   r15,r15
   140008b05:	je     0x140008b36
   140008b07:	lea    rax,[rbp+0x40]
   140008b0b:	mov    r9d,0x20019
   140008b11:	xor    r8d,r8d
   140008b14:	mov    QWORD PTR [rsp+0x20],rax
   140008b19:	mov    rdx,r15
   140008b1c:	call   QWORD PTR [rip+0x1756]        # 0x14000a278
   140008b22:	test   eax,eax
   140008b24:	jne    0x140008b2f
   140008b26:	mov    rcx,QWORD PTR [rbp+0x40]
   140008b2a:	test   rcx,rcx
   140008b2d:	jne    0x140008b3a
   140008b2f:	mov    ecx,eax
   140008b31:	jmp    0x140008c0b
   140008b36:	mov    QWORD PTR [rbp+0x40],rcx
   140008b3a:	lea    rax,[rbp+0x30]
   140008b3e:	xor    r8d,r8d
   140008b41:	mov    QWORD PTR [rsp+0x28],rax
   140008b46:	lea    r9,[rbp+0x38]
   140008b4a:	lea    rdx,[rip+0x4a2f]        # 0x14000d580
   140008b51:	mov    QWORD PTR [rsp+0x20],rdi
   140008b56:	call   QWORD PTR [rip+0x172c]        # 0x14000a288
   140008b5c:	mov    esi,eax
   140008b5e:	test   eax,eax
   140008b60:	jne    0x140008bfa
   140008b66:	mov    eax,DWORD PTR [rbp+0x38]
   140008b69:	dec    eax
   140008b6b:	cmp    eax,0x1
   140008b6e:	jbe    0x140008b7a
   140008b70:	mov    esi,0xd
   140008b75:	jmp    0x140008bfa
   140008b7a:	mov    ebx,DWORD PTR [rbp+0x30]
   140008b7d:	call   QWORD PTR [rip+0x15f5]        # 0x14000a178
   140008b83:	mov    r8d,ebx
   140008b86:	mov    edx,0x8
   140008b8b:	mov    rcx,rax
   140008b8e:	call   QWORD PTR [rip+0x15d4]        # 0x14000a168
   140008b94:	mov    rbx,rax
   140008b97:	test   rax,rax
   140008b9a:	je     0x140008bf2
   140008b9c:	mov    WORD PTR [rax],di
   140008b9f:	lea    rdx,[rip+0x49da]        # 0x14000d580
   140008ba6:	mov    rcx,QWORD PTR [rbp+0x40]
   140008baa:	lea    rax,[rbp+0x30]
   140008bae:	mov    QWORD PTR [rsp+0x28],rax
   140008bb3:	xor    r9d,r9d
   140008bb6:	xor    r8d,r8d
   140008bb9:	mov    QWORD PTR [rsp+0x20],rbx
   140008bbe:	call   QWORD PTR [rip+0x16c4]        # 0x14000a288
   140008bc4:	mov    esi,eax
   140008bc6:	test   eax,eax
   140008bc8:	jne    0x140008bd9
   140008bca:	mov    eax,DWORD PTR [rbp+0x38]
   140008bcd:	dec    eax
   140008bcf:	cmp    eax,0x1
   140008bd2:	jbe    0x140008bfa
   140008bd4:	mov    esi,0xd
   140008bd9:	call   QWORD PTR [rip+0x1599]        # 0x14000a178
   140008bdf:	mov    r8,rbx
   140008be2:	xor    edx,edx
   140008be4:	mov    rcx,rax
   140008be7:	call   QWORD PTR [rip+0x1583]        # 0x14000a170
   140008bed:	mov    rbx,rdi
   140008bf0:	jmp    0x140008bfa
   140008bf2:	call   QWORD PTR [rip+0x14f8]        # 0x14000a0f0
   140008bf8:	mov    esi,eax
   140008bfa:	test   r15,r15
   140008bfd:	je     0x140008c09
   140008bff:	mov    rcx,QWORD PTR [rbp+0x40]
   140008c03:	call   QWORD PTR [rip+0x1697]        # 0x14000a2a0
   140008c09:	mov    ecx,esi
   140008c0b:	call   QWORD PTR [rip+0x14cf]        # 0x14000a0e0
   140008c11:	mov    QWORD PTR [r14],rbx
   140008c14:	test   rbx,rbx
   140008c17:	jne    0x140008c5f
   140008c19:	lea    rcx,[rip+0x46e8]        # 0x14000d308
   140008c20:	call   0x1400048c0
   140008c25:	mov    QWORD PTR [r14],rax
   140008c28:	test   rax,rax
   140008c2b:	jne    0x140008c5f
   140008c2d:	call   QWORD PTR [rip+0x14bd]        # 0x14000a0f0
   140008c33:	mov    ecx,eax
   140008c35:	mov    ebx,0x80070000
   140008c3a:	movzx  eax,ax
   140008c3d:	or     eax,ebx
   140008c3f:	test   ecx,ecx
   140008c41:	cmovle eax,ecx
   140008c44:	test   eax,eax
   140008c46:	jns    0x140008c5a
   140008c48:	call   QWORD PTR [rip+0x14a2]        # 0x14000a0f0
   140008c4e:	movzx  edi,ax
   140008c51:	or     edi,ebx
   140008c53:	test   eax,eax
   140008c55:	cmovle edi,eax
   140008c58:	jmp    0x140008c5f
   140008c5a:	mov    edi,0x80004005
   140008c5f:	mov    eax,edi
   140008c61:	mov    rbx,QWORD PTR [rsp+0x78]
   140008c66:	add    rsp,0x30
   140008c6a:	pop    r15
   140008c6c:	pop    r14
   140008c6e:	pop    rdi
   140008c6f:	pop    rsi
   140008c70:	pop    rbp
   140008c71:	ret    
   140008c72:	int3   
   140008c73:	int3   
   140008c74:	int3   
   140008c75:	int3   
   140008c76:	int3   
   140008c77:	int3   
   140008c78:	mov    rax,rsp
   140008c7b:	mov    QWORD PTR [rax+0x8],rbx
   140008c7f:	mov    QWORD PTR [rax+0x10],rbp
   140008c83:	mov    QWORD PTR [rax+0x18],rsi
   140008c87:	mov    QWORD PTR [rax+0x20],rdi
   140008c8b:	push   r12
   140008c8d:	push   r14
   140008c8f:	push   r15
   140008c91:	sub    rsp,0x20
   140008c95:	xor    r15d,r15d
   140008c98:	mov    rbp,r8
   140008c9b:	mov    ebx,r15d
   140008c9e:	test   r8,r8
   140008ca1:	je     0x140008e6d
   140008ca7:	cmp    r15w,WORD PTR [r8]
   140008cab:	je     0x140008e6d
   140008cb1:	lea    rcx,[rip+0x4958]        # 0x14000d610
   140008cb8:	call   0x140003154
   140008cbd:	mov    r14,rax
   140008cc0:	mov    r12d,0x80070000
   140008cc6:	test   rax,rax
   140008cc9:	jne    0x140008d02
   140008ccb:	call   QWORD PTR [rip+0x141f]        # 0x14000a0f0
   140008cd1:	mov    ecx,eax
   140008cd3:	movzx  eax,ax
   140008cd6:	or     eax,r12d
   140008cd9:	test   ecx,ecx
   140008cdb:	cmovle eax,ecx
   140008cde:	test   eax,eax
   140008ce0:	jns    0x140008cf5
   140008ce2:	call   QWORD PTR [rip+0x1408]        # 0x14000a0f0
   140008ce8:	movzx  ebx,ax
   140008ceb:	or     ebx,r12d
   140008cee:	test   eax,eax
   140008cf0:	cmovle ebx,eax
   140008cf3:	jmp    0x140008cfa
   140008cf5:	mov    ebx,0x80004005
   140008cfa:	test   ebx,ebx
   140008cfc:	js     0x140008e69
   140008d02:	mov    r9,rbp
   140008d05:	lea    r8,[rip+0x4874]        # 0x14000d580
   140008d0c:	lea    rdx,[rip+0x488d]        # 0x14000d5a0
   140008d13:	mov    rcx,0xffffffff80000002
   140008d1a:	call   0x1400047a8
   140008d1f:	test   eax,eax
   140008d21:	jne    0x140008d52
   140008d23:	call   QWORD PTR [rip+0x13c7]        # 0x14000a0f0
   140008d29:	mov    ecx,eax
   140008d2b:	movzx  eax,ax
   140008d2e:	or     eax,r12d
   140008d31:	test   ecx,ecx
   140008d33:	cmovle eax,ecx
   140008d36:	test   eax,eax
   140008d38:	jns    0x140008d4d
   140008d3a:	call   QWORD PTR [rip+0x13b0]        # 0x14000a0f0
   140008d40:	movzx  ebx,ax
   140008d43:	or     ebx,r12d
   140008d46:	test   eax,eax
   140008d48:	cmovle ebx,eax
   140008d4b:	jmp    0x140008d52
   140008d4d:	mov    ebx,0x80004005
   140008d52:	test   ebx,ebx
   140008d54:	js     0x140008e50
   140008d5a:	lea    rdx,[rip+0x48c7]        # 0x14000d628
   140008d61:	mov    rcx,r14
   140008d64:	mov    rdi,r15
   140008d67:	call   0x140004c74
   140008d6c:	mov    rsi,rax
   140008d6f:	test   rax,rax
   140008d72:	je     0x140008def
   140008d74:	lea    rdx,[rip+0x48c5]        # 0x14000d640
   140008d7b:	mov    rcx,rax
   140008d7e:	call   0x140004c74
   140008d83:	mov    rdi,rax
   140008d86:	test   rax,rax
   140008d89:	je     0x140008def
   140008d8b:	mov    rcx,rsi
   140008d8e:	call   0x1400039f8
   140008d93:	test   eax,eax
   140008d95:	jne    0x140008da3
   140008d97:	mov    rcx,rsi
   140008d9a:	call   0x1400040f8
   140008d9f:	test   eax,eax
   140008da1:	je     0x140008def
   140008da3:	cmp    r15w,WORD PTR [rdi]
   140008da7:	je     0x140008de4
   140008da9:	lea    rcx,[rip+0x48a8]        # 0x14000d658
   140008db0:	test   rcx,rcx
   140008db3:	je     0x140008de4
   140008db5:	lea    rdx,[rip+0x47c4]        # 0x14000d580
   140008dbc:	test   rdx,rdx
   140008dbf:	jne    0x140008dc6
   140008dc1:	lea    ecx,[rdx+0x78]
   140008dc4:	jmp    0x140008de9
   140008dc6:	mov    r9,rdi
   140008dc9:	mov    r8,rbp
   140008dcc:	call   QWORD PTR [rip+0x142e]        # 0x14000a200
   140008dd2:	test   eax,eax
   140008dd4:	je     0x140008def
   140008dd6:	mov    rcx,rdi
   140008dd9:	call   0x140003b3c
   140008dde:	test   eax,eax
   140008de0:	jne    0x140008e1e
   140008de2:	jmp    0x140008def
   140008de4:	mov    ecx,0x57
   140008de9:	call   QWORD PTR [rip+0x12f1]        # 0x14000a0e0
   140008def:	call   QWORD PTR [rip+0x12fb]        # 0x14000a0f0
   140008df5:	mov    ecx,eax
   140008df7:	movzx  eax,ax
   140008dfa:	or     eax,r12d
   140008dfd:	test   ecx,ecx
   140008dff:	cmovle eax,ecx
   140008e02:	test   eax,eax
   140008e04:	jns    0x140008e19
   140008e06:	call   QWORD PTR [rip+0x12e4]        # 0x14000a0f0
   140008e0c:	movzx  ebx,ax
   140008e0f:	or     ebx,r12d
   140008e12:	test   eax,eax
   140008e14:	cmovle ebx,eax
   140008e17:	jmp    0x140008e1e
   140008e19:	mov    ebx,0x80004005
   140008e1e:	test   rdi,rdi
   140008e21:	je     0x140008e37
   140008e23:	call   QWORD PTR [rip+0x134f]        # 0x14000a178
   140008e29:	mov    r8,rdi
   140008e2c:	xor    edx,edx
   140008e2e:	mov    rcx,rax
   140008e31:	call   QWORD PTR [rip+0x1339]        # 0x14000a170
   140008e37:	test   rsi,rsi
   140008e3a:	je     0x140008e50
   140008e3c:	call   QWORD PTR [rip+0x1336]        # 0x14000a178
   140008e42:	mov    r8,rsi
   140008e45:	xor    edx,edx
   140008e47:	mov    rcx,rax
   140008e4a:	call   QWORD PTR [rip+0x1320]        # 0x14000a170
   140008e50:	test   r14,r14
   140008e53:	je     0x140008e69
   140008e55:	call   QWORD PTR [rip+0x131d]        # 0x14000a178
   140008e5b:	mov    r8,r14
   140008e5e:	xor    edx,edx
   140008e60:	mov    rcx,rax
   140008e63:	call   QWORD PTR [rip+0x1307]        # 0x14000a170
   140008e69:	mov    eax,ebx
   140008e6b:	jmp    0x140008e72
   140008e6d:	mov    eax,0x80070057
   140008e72:	mov    rbx,QWORD PTR [rsp+0x40]
   140008e77:	mov    rbp,QWORD PTR [rsp+0x48]
   140008e7c:	mov    rsi,QWORD PTR [rsp+0x50]
   140008e81:	mov    rdi,QWORD PTR [rsp+0x58]
   140008e86:	add    rsp,0x20
   140008e8a:	pop    r15
   140008e8c:	pop    r14
   140008e8e:	pop    r12
   140008e90:	ret    
   140008e91:	int3   
   140008e92:	int3   
   140008e93:	int3   
   140008e94:	int3   
   140008e95:	int3   
   140008e96:	int3   
   140008e97:	int3   
   140008e98:	mov    QWORD PTR [rsp+0x10],rbx
   140008e9d:	push   rbp
   140008e9e:	push   rsi
   140008e9f:	push   rdi
   140008ea0:	lea    rbp,[rsp-0xb0]
   140008ea8:	sub    rsp,0x1b0
   140008eaf:	mov    rax,QWORD PTR [rip+0x7152]        # 0x140010008
   140008eb6:	xor    rax,rsp
   140008eb9:	mov    QWORD PTR [rbp+0xa0],rax
   140008ec0:	xor    eax,eax
   140008ec2:	mov    DWORD PTR [rsp+0x40],ecx
   140008ec6:	xor    esi,esi
   140008ec8:	mov    QWORD PTR [rbp-0x66],rax
   140008ecc:	mov    rbx,r8
   140008ecf:	mov    QWORD PTR [rsp+0x60],rsi
   140008ed4:	xor    edx,edx
   140008ed6:	mov    QWORD PTR [rsp+0x58],rsi
   140008edb:	lea    rcx,[rbp-0x30]
   140008edf:	mov    QWORD PTR [rsp+0x50],rsi
   140008ee4:	lea    edi,[rsi+0x28]
   140008ee7:	mov    QWORD PTR [rsp+0x48],rsi
   140008eec:	mov    r8d,edi
   140008eef:	mov    WORD PTR [rbp-0x68],si
   140008ef3:	mov    DWORD PTR [rbp-0x5e],eax
   140008ef6:	mov    WORD PTR [rbp-0x5a],ax
   140008efa:	mov    WORD PTR [rbp-0x78],si
   140008efe:	mov    QWORD PTR [rbp-0x76],rax
   140008f02:	mov    DWORD PTR [rbp-0x6e],eax
   140008f05:	mov    WORD PTR [rbp-0x6a],ax
   140008f09:	mov    WORD PTR [rsp+0x68],si
   140008f0e:	mov    QWORD PTR [rsp+0x6a],rax
   140008f13:	mov    DWORD PTR [rsp+0x72],eax
   140008f17:	mov    WORD PTR [rsp+0x76],ax
   140008f1c:	mov    WORD PTR [rbp-0x58],si
   140008f20:	mov    QWORD PTR [rbp-0x56],rax
   140008f24:	mov    DWORD PTR [rbp-0x4e],eax
   140008f27:	mov    WORD PTR [rbp-0x4a],ax
   140008f2b:	mov    WORD PTR [rbp-0x48],si
   140008f2f:	mov    QWORD PTR [rbp-0x46],rax
   140008f33:	mov    DWORD PTR [rbp-0x3e],eax
   140008f36:	mov    WORD PTR [rbp-0x3a],ax
   140008f3a:	mov    WORD PTR [rsp+0x78],si
   140008f3f:	mov    QWORD PTR [rsp+0x7a],rax
   140008f44:	mov    DWORD PTR [rbp-0x7e],eax
   140008f47:	mov    WORD PTR [rbp-0x7a],ax
   140008f4b:	mov    DWORD PTR [rbp-0x38],esi
   140008f4e:	call   0x140009c86
   140008f53:	mov    r8d,edi
   140008f56:	mov    DWORD PTR [rbp-0x8],esi
   140008f59:	xor    edx,edx
   140008f5b:	lea    rcx,[rbp+0x0]
   140008f5f:	call   0x140009c86
   140008f64:	mov    r8d,edi
   140008f67:	mov    DWORD PTR [rbp+0x58],esi
   140008f6a:	xor    edx,edx
   140008f6c:	lea    rcx,[rbp+0x60]
   140008f70:	call   0x140009c86
   140008f75:	mov    r8d,edi
   140008f78:	mov    DWORD PTR [rbp+0x28],esi
   140008f7b:	xor    edx,edx
   140008f7d:	lea    rcx,[rbp+0x30]
   140008f81:	call   0x140009c86
   140008f86:	lea    rdx,[rip+0x474b]        # 0x14000d6d8
   140008f8d:	lea    rcx,[rbp-0x68]
   140008f91:	call   QWORD PTR [rip+0x1511]        # 0x14000a4a8
   140008f97:	lea    rdx,[rip+0x477a]        # 0x14000d718
   140008f9e:	lea    rcx,[rbp-0x78]
   140008fa2:	call   QWORD PTR [rip+0x1500]        # 0x14000a4a8
   140008fa8:	lea    rdx,[rip+0x4719]        # 0x14000d6c8
   140008faf:	lea    rcx,[rsp+0x68]
   140008fb4:	call   QWORD PTR [rip+0x14ee]        # 0x14000a4a8
   140008fba:	lea    rdx,[rip+0x3953]        # 0x14000c914
   140008fc1:	lea    rcx,[rbp-0x48]
   140008fc5:	call   QWORD PTR [rip+0x14dd]        # 0x14000a4a8
   140008fcb:	lea    rdx,[rip+0x394e]        # 0x14000c920
   140008fd2:	lea    rcx,[rsp+0x78]
   140008fd7:	call   QWORD PTR [rip+0x14cb]        # 0x14000a4a8
   140008fdd:	mov    QWORD PTR [rsp+0x30],rsi
   140008fe2:	lea    rax,[rbp-0x68]
   140008fe6:	xorps  xmm0,xmm0
   140008fe9:	mov    DWORD PTR [rsp+0x28],esi
   140008fed:	lea    edi,[rsi+0x30]
   140008ff0:	mov    QWORD PTR [rbp-0x28],rax
   140008ff4:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140008ff9:	mov    DWORD PTR [rbp-0x38],edi
   140008ffc:	lea    r8,[rbp-0x38]
   140009000:	mov    QWORD PTR [rbp-0x30],rsi
   140009004:	xor    r9d,r9d
   140009007:	mov    DWORD PTR [rbp-0x20],0x40
   14000900e:	mov    QWORD PTR [rsp+0x20],rsi
   140009013:	mov    edx,0xf003f
   140009018:	lea    rcx,[rsp+0x60]
   14000901d:	call   QWORD PTR [rip+0x147d]        # 0x14000a4a0
   140009023:	test   eax,eax
   140009025:	js     0x1400091ad
   14000902b:	mov    rax,QWORD PTR [rsp+0x60]
   140009030:	lea    r8,[rbp-0x8]
   140009034:	mov    QWORD PTR [rbp+0x0],rax
   140009038:	lea    rcx,[rsp+0x58]
   14000903d:	lea    rax,[rbp-0x78]
   140009041:	mov    QWORD PTR [rsp+0x30],rsi
   140009046:	xorps  xmm0,xmm0
   140009049:	mov    DWORD PTR [rsp+0x28],esi
   14000904d:	xor    r9d,r9d
   140009050:	mov    QWORD PTR [rbp+0x8],rax
   140009054:	mov    edx,0xf003f
   140009059:	mov    DWORD PTR [rbp-0x8],edi
   14000905c:	mov    DWORD PTR [rbp+0x10],0x40
   140009063:	movdqu XMMWORD PTR [rbp+0x18],xmm0
   140009068:	mov    QWORD PTR [rsp+0x20],rsi
   14000906d:	call   QWORD PTR [rip+0x142d]        # 0x14000a4a0
   140009073:	test   eax,eax
   140009075:	js     0x1400091ad
   14000907b:	mov    rax,QWORD PTR [rsp+0x58]
   140009080:	lea    r8,[rbp+0x58]
   140009084:	mov    QWORD PTR [rbp+0x60],rax
   140009088:	lea    rcx,[rsp+0x50]
   14000908d:	lea    rax,[rsp+0x68]
   140009092:	mov    QWORD PTR [rsp+0x30],rsi
   140009097:	xorps  xmm0,xmm0
   14000909a:	mov    DWORD PTR [rsp+0x28],esi
   14000909e:	xor    r9d,r9d
   1400090a1:	mov    QWORD PTR [rbp+0x68],rax
   1400090a5:	mov    edx,0xf003f
   1400090aa:	mov    DWORD PTR [rbp+0x58],edi
   1400090ad:	mov    DWORD PTR [rbp+0x70],0x40
   1400090b4:	movdqu XMMWORD PTR [rbp+0x78],xmm0
   1400090b9:	mov    QWORD PTR [rsp+0x20],rsi
   1400090be:	call   QWORD PTR [rip+0x13dc]        # 0x14000a4a0
   1400090c4:	test   eax,eax
   1400090c6:	js     0x1400091ad
   1400090cc:	mov    r9d,DWORD PTR [rsp+0x40]
   1400090d1:	lea    r8,[rip+0x4648]        # 0x14000d720
   1400090d8:	xor    eax,eax
   1400090da:	lea    edx,[rsi+0x9]
   1400090dd:	lea    rcx,[rbp+0x88]
   1400090e4:	mov    QWORD PTR [rbp+0x88],rax
   1400090eb:	mov    QWORD PTR [rbp+0x90],rax
   1400090f2:	mov    WORD PTR [rbp+0x98],ax
   1400090f9:	call   QWORD PTR [rip+0x12a9]        # 0x14000a3a8
   1400090ff:	test   eax,eax
   140009101:	jle    0x1400091ad
   140009107:	lea    rdx,[rbp+0x88]
   14000910e:	lea    rcx,[rbp-0x58]
   140009112:	call   QWORD PTR [rip+0x1390]        # 0x14000a4a8
   140009118:	mov    rax,QWORD PTR [rsp+0x50]
   14000911d:	lea    r8,[rbp+0x28]
   140009121:	mov    QWORD PTR [rbp+0x30],rax
   140009125:	lea    rcx,[rsp+0x48]
   14000912a:	lea    rax,[rbp-0x58]
   14000912e:	mov    QWORD PTR [rsp+0x30],rsi
   140009133:	xorps  xmm0,xmm0
   140009136:	mov    DWORD PTR [rsp+0x28],esi
   14000913a:	xor    r9d,r9d
   14000913d:	mov    QWORD PTR [rbp+0x38],rax
   140009141:	mov    edx,0xf003f
   140009146:	mov    DWORD PTR [rbp+0x28],edi
   140009149:	mov    DWORD PTR [rbp+0x40],0x40
   140009150:	movdqu XMMWORD PTR [rbp+0x48],xmm0
   140009155:	mov    QWORD PTR [rsp+0x20],rsi
   14000915a:	call   QWORD PTR [rip+0x1340]        # 0x14000a4a0
   140009160:	test   eax,eax
   140009162:	js     0x1400091ad
   140009164:	mov    rcx,QWORD PTR [rsp+0x48]
   140009169:	lea    edi,[rsi+0x4]
   14000916c:	lea    rax,[rsp+0x40]
   140009171:	mov    DWORD PTR [rsp+0x28],edi
   140009175:	mov    r9d,edi
   140009178:	mov    QWORD PTR [rsp+0x20],rax
   14000917d:	xor    r8d,r8d
   140009180:	lea    rdx,[rbp-0x48]
   140009184:	call   QWORD PTR [rip+0x1306]        # 0x14000a490
   14000918a:	test   eax,eax
   14000918c:	js     0x1400091ad
   14000918e:	mov    rcx,QWORD PTR [rsp+0x48]
   140009193:	lea    rdx,[rsp+0x78]
   140009198:	mov    DWORD PTR [rsp+0x28],edi
   14000919c:	mov    r9d,edi
   14000919f:	xor    r8d,r8d
   1400091a2:	mov    QWORD PTR [rsp+0x20],rbx
   1400091a7:	call   QWORD PTR [rip+0x12e3]        # 0x14000a490
   1400091ad:	mov    rcx,QWORD PTR [rsp+0x48]
   1400091b2:	test   rcx,rcx
   1400091b5:	je     0x1400091bd
   1400091b7:	call   QWORD PTR [rip+0x12db]        # 0x14000a498
   1400091bd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400091c2:	test   rcx,rcx
   1400091c5:	je     0x1400091cd
   1400091c7:	call   QWORD PTR [rip+0x12cb]        # 0x14000a498
   1400091cd:	mov    rcx,QWORD PTR [rsp+0x58]
   1400091d2:	test   rcx,rcx
   1400091d5:	je     0x1400091dd
   1400091d7:	call   QWORD PTR [rip+0x12bb]        # 0x14000a498
   1400091dd:	mov    rcx,QWORD PTR [rsp+0x60]
   1400091e2:	test   rcx,rcx
   1400091e5:	je     0x1400091ed
   1400091e7:	call   QWORD PTR [rip+0x12ab]        # 0x14000a498
   1400091ed:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400091f4:	xor    rcx,rsp
   1400091f7:	call   0x140009600
   1400091fc:	mov    rbx,QWORD PTR [rsp+0x1d8]
   140009204:	add    rsp,0x1b0
   14000920b:	pop    rdi
   14000920c:	pop    rsi
   14000920d:	pop    rbp
   14000920e:	ret    
   14000920f:	int3   
   140009210:	int3   
   140009211:	int3   
   140009212:	int3   
   140009213:	int3   
   140009214:	int3   
   140009215:	int3   
   140009216:	int3   
   140009217:	int3   
   140009218:	int3   
   140009219:	int3   
   14000921a:	int3   
   14000921b:	int3   
   14000921c:	int3   
   14000921d:	int3   
   14000921e:	int3   
   14000921f:	int3   
   140009220:	sub    rsp,0x28
   140009224:	mov    eax,0x5a4d
   140009229:	cmp    WORD PTR [rip+0xffffffffffff6dd0],ax        # 0x140000000
   140009230:	je     0x140009236
   140009232:	xor    eax,eax
   140009234:	jmp    0x140009285
   140009236:	movsxd rcx,DWORD PTR [rip+0xffffffffffff6dff]        # 0x14000003c
   14000923d:	lea    rax,[rip+0xffffffffffff6dbc]        # 0x140000000
   140009244:	add    rcx,rax
   140009247:	cmp    DWORD PTR [rcx],0x4550
   14000924d:	jne    0x140009232
   14000924f:	movzx  eax,WORD PTR [rcx+0x18]
   140009253:	cmp    eax,0x10b
   140009258:	je     0x140009274
   14000925a:	cmp    eax,0x20b
   14000925f:	jne    0x140009232
   140009261:	xor    eax,eax
   140009263:	cmp    DWORD PTR [rcx+0x84],0xe
   14000926a:	jbe    0x140009285
   14000926c:	cmp    DWORD PTR [rcx+0xf8],eax
   140009272:	jmp    0x140009282
   140009274:	xor    eax,eax
   140009276:	cmp    DWORD PTR [rcx+0x74],0xe
   14000927a:	jbe    0x140009285
   14000927c:	cmp    DWORD PTR [rcx+0xe8],eax
   140009282:	setne  al
   140009285:	mov    ecx,0x2
   14000928a:	mov    DWORD PTR [rip+0x6e90],eax        # 0x140010120
   140009290:	call   0x1400097b8
   140009295:	mov    ecx,eax
   140009297:	call   QWORD PTR [rip+0x11c3]        # 0x14000a460
   14000929d:	mov    rcx,QWORD PTR [rip+0x117c]        # 0x14000a420
   1400092a4:	or     rax,0xffffffffffffffff
   1400092a8:	mov    QWORD PTR [rip+0x7569],rax        # 0x140010818
   1400092af:	mov    QWORD PTR [rip+0x756a],rax        # 0x140010820
   1400092b6:	mov    eax,DWORD PTR [rip+0x6e78]        # 0x140010134
   1400092bc:	mov    DWORD PTR [rcx],eax
   1400092be:	mov    rcx,QWORD PTR [rip+0x1153]        # 0x14000a418
   1400092c5:	mov    eax,DWORD PTR [rip+0x6e5d]        # 0x140010128
   1400092cb:	mov    DWORD PTR [rcx],eax
   1400092cd:	call   0x140009810
   1400092d2:	cmp    DWORD PTR [rip+0x6d27],0x0        # 0x140010000
   1400092d9:	jne    0x1400092e8
   1400092db:	lea    rcx,[rip+0x52e]        # 0x140009810
   1400092e2:	call   QWORD PTR [rip+0x1158]        # 0x14000a440
   1400092e8:	xor    eax,eax
   1400092ea:	add    rsp,0x28
   1400092ee:	ret    
   1400092ef:	int3   
   1400092f0:	int3   
   1400092f1:	int3   
   1400092f2:	int3   
   1400092f3:	int3   
   1400092f4:	int3   
   1400092f5:	int3   
   1400092f6:	int3   
   1400092f7:	int3   
   1400092f8:	int3   
   1400092f9:	int3   
   1400092fa:	int3   
   1400092fb:	int3   
   1400092fc:	int3   
   1400092fd:	int3   
   1400092fe:	int3   
   1400092ff:	int3   
   140009300:	sub    rsp,0x38
   140009304:	mov    eax,DWORD PTR [rip+0x6e26]        # 0x140010130
   14000930a:	lea    r8,[rip+0x6e07]        # 0x140010118
   140009311:	mov    r9d,DWORD PTR [rip+0x6e14]        # 0x14001012c
   140009318:	lea    rdx,[rip+0x6df1]        # 0x140010110
   14000931f:	mov    DWORD PTR [rip+0x6dff],eax        # 0x140010124
   140009325:	lea    rcx,[rip+0x6ddc]        # 0x140010108
   14000932c:	lea    rax,[rip+0x6df1]        # 0x140010124
   140009333:	mov    QWORD PTR [rsp+0x20],rax
   140009338:	call   QWORD PTR [rip+0x112a]        # 0x14000a468
   14000933e:	mov    DWORD PTR [rip+0x6dc8],eax        # 0x14001010c
   140009344:	add    rsp,0x38
   140009348:	ret    
   140009349:	int3   
   14000934a:	int3   
   14000934b:	int3   
   14000934c:	int3   
   14000934d:	int3   
   14000934e:	int3   
   14000934f:	int3   
   140009350:	mov    QWORD PTR [rsp+0x8],rbx
   140009355:	mov    QWORD PTR [rsp+0x10],rsi
   14000935a:	mov    QWORD PTR [rsp+0x18],rdi
   14000935f:	push   r12
   140009361:	push   r14
   140009363:	push   r15
   140009365:	sub    rsp,0xb0
   14000936c:	xor    r15d,r15d
   14000936f:	mov    DWORD PTR [rsp+0x20],r15d
   140009374:	lea    rcx,[rsp+0x40]
   140009379:	call   QWORD PTR [rip+0xeb1]        # 0x14000a230
   14000937f:	nop
   140009380:	mov    rax,QWORD PTR gs:0x30
   140009389:	mov    rbx,QWORD PTR [rax+0x8]
   14000938d:	mov    r14d,r15d
   140009390:	xor    eax,eax
   140009392:	lock cmpxchg QWORD PTR [rip+0x746d],rbx        # 0x140010808
   14000939b:	je     0x1400093b9
   14000939d:	cmp    rax,rbx
   1400093a0:	jne    0x1400093ac
   1400093a2:	mov    edi,0x1
   1400093a7:	mov    r14d,edi
   1400093aa:	jmp    0x1400093be
   1400093ac:	mov    ecx,0x3e8
   1400093b1:	call   QWORD PTR [rip+0xf69]        # 0x14000a320
   1400093b7:	jmp    0x140009390
   1400093b9:	mov    edi,0x1
   1400093be:	mov    eax,DWORD PTR [rip+0x744c]        # 0x140010810
   1400093c4:	cmp    eax,edi
   1400093c6:	jne    0x1400093d6
   1400093c8:	mov    esi,0x1f
   1400093cd:	mov    ecx,esi
   1400093cf:	call   0x140009804
   1400093d4:	jmp    0x140009447
   1400093d6:	mov    eax,DWORD PTR [rip+0x7434]        # 0x140010810
   1400093dc:	test   eax,eax
   1400093de:	jne    0x14000943c
   1400093e0:	mov    DWORD PTR [rip+0x742a],edi        # 0x140010810
   1400093e6:	lea    r12,[rip+0x1153]        # 0x14000a540
   1400093ed:	lea    rbx,[rip+0x1134]        # 0x14000a528
   1400093f4:	mov    QWORD PTR [rsp+0x30],rbx
   1400093f9:	mov    eax,r15d
   1400093fc:	mov    DWORD PTR [rsp+0x24],eax
   140009400:	cmp    rbx,r12
   140009403:	jae    0x14000942e
   140009405:	test   eax,eax
   140009407:	jne    0x140009432
   140009409:	mov    rsi,QWORD PTR [rbx]
   14000940c:	test   rsi,rsi
   14000940f:	je     0x140009423
   140009411:	mov    rcx,rsi
   140009414:	mov    rax,QWORD PTR [rip+0x10bd]        # 0x14000a4d8
   14000941b:	call   rax
   14000941d:	call   rsi
   14000941f:	mov    DWORD PTR [rsp+0x24],eax
   140009423:	add    rbx,0x8
   140009427:	mov    QWORD PTR [rsp+0x30],rbx
   14000942c:	jmp    0x140009400
   14000942e:	test   eax,eax
   140009430:	je     0x140009442
   140009432:	mov    eax,0xff
   140009437:	jmp    0x1400095a3
   14000943c:	mov    DWORD PTR [rip+0x6cc2],edi        # 0x140010104
   140009442:	mov    esi,0x1f
   140009447:	mov    eax,DWORD PTR [rip+0x73c3]        # 0x140010810
   14000944d:	cmp    eax,edi
   14000944f:	jne    0x14000946e
   140009451:	lea    rdx,[rip+0x10c8]        # 0x14000a520
   140009458:	lea    rcx,[rip+0x1089]        # 0x14000a4e8
   14000945f:	call   0x1400099da
   140009464:	mov    DWORD PTR [rip+0x73a2],0x2        # 0x140010810
   14000946e:	test   r14d,r14d
   140009471:	jne    0x14000947d
   140009473:	mov    rax,r15
   140009476:	xchg   QWORD PTR [rip+0x738b],rax        # 0x140010808
   14000947d:	cmp    QWORD PTR [rip+0x73a4],r15        # 0x140010828
   140009484:	je     0x1400094b4
   140009486:	lea    rcx,[rip+0x739b]        # 0x140010828
   14000948d:	call   0x140009870
   140009492:	test   eax,eax
   140009494:	je     0x1400094b4
   140009496:	mov    rbx,QWORD PTR [rip+0x738b]        # 0x140010828
   14000949d:	mov    rcx,rbx
   1400094a0:	mov    rax,QWORD PTR [rip+0x1031]        # 0x14000a4d8
   1400094a7:	call   rax
   1400094a9:	xor    r8d,r8d
   1400094ac:	lea    edx,[r8+0x2]
   1400094b0:	xor    ecx,ecx
   1400094b2:	call   rbx
   1400094b4:	mov    rax,QWORD PTR [rip+0xf6d]        # 0x14000a428
   1400094bb:	mov    rdx,QWORD PTR [rax]
   1400094be:	test   rdx,rdx
   1400094c1:	jne    0x1400094cd
   1400094c3:	mov    eax,0xff
   1400094c8:	jmp    0x1400095a3
   1400094cd:	mov    QWORD PTR [rsp+0x28],rdx
   1400094d2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400094d6:	cmp    WORD PTR [rdx],0x20
   1400094da:	ja     0x140009554
   1400094dc:	cmp    WORD PTR [rdx],r15w
   1400094e0:	je     0x1400094e6
   1400094e2:	test   ecx,ecx
   1400094e4:	jne    0x140009554
   1400094e6:	movzx  eax,WORD PTR [rdx]
   1400094e9:	sub    ax,di
   1400094ec:	cmp    ax,si
   1400094ef:	ja     0x1400094fc
   1400094f1:	add    rdx,0x2
   1400094f5:	mov    QWORD PTR [rsp+0x28],rdx
   1400094fa:	jmp    0x1400094e6
   1400094fc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140009500:	movzx  eax,WORD PTR [rsp+0x80]
   140009508:	mov    r9d,0xa
   14000950e:	and    cl,dil
   140009511:	cmovne r9d,eax
   140009515:	mov    r8,rdx
   140009518:	xor    edx,edx
   14000951a:	lea    rcx,[rip+0xffffffffffff6adf]        # 0x140000000
   140009521:	call   0x140001964
   140009526:	mov    DWORD PTR [rip+0x6bd4],eax        # 0x140010100
   14000952c:	cmp    DWORD PTR [rip+0x6bed],r15d        # 0x140010120
   140009533:	jne    0x14000953d
   140009535:	mov    ecx,eax
   140009537:	call   QWORD PTR [rip+0xf1b]        # 0x14000a458
   14000953d:	cmp    DWORD PTR [rip+0x6bc0],r15d        # 0x140010104
   140009544:	jne    0x140009552
   140009546:	call   QWORD PTR [rip+0xefc]        # 0x14000a448
   14000954c:	mov    eax,DWORD PTR [rip+0x6bae]        # 0x140010100
   140009552:	jmp    0x1400095a3
   140009554:	cmp    WORD PTR [rdx],0x22
   140009558:	jne    0x140009568
   14000955a:	mov    eax,r15d
   14000955d:	test   ecx,ecx
   14000955f:	sete   al
   140009562:	mov    ecx,eax
   140009564:	mov    DWORD PTR [rsp+0x20],eax
   140009568:	add    rdx,0x2
   14000956c:	mov    QWORD PTR [rsp+0x28],rdx
   140009571:	jmp    0x1400094d6
   140009576:	mov    DWORD PTR [rip+0x6b84],eax        # 0x140010100
   14000957c:	cmp    DWORD PTR [rip+0x6b9d],0x0        # 0x140010120
   140009583:	jne    0x14000958e
   140009585:	mov    ecx,eax
   140009587:	call   QWORD PTR [rip+0xec3]        # 0x14000a450
   14000958d:	int3   
   14000958e:	cmp    DWORD PTR [rip+0x6b6f],0x0        # 0x140010104
   140009595:	jne    0x1400095a3
   140009597:	call   QWORD PTR [rip+0xeab]        # 0x14000a448
   14000959d:	mov    eax,DWORD PTR [rip+0x6b5d]        # 0x140010100
   1400095a3:	lea    r11,[rsp+0xb0]
   1400095ab:	mov    rbx,QWORD PTR [r11+0x20]
   1400095af:	mov    rsi,QWORD PTR [r11+0x28]
   1400095b3:	mov    rdi,QWORD PTR [r11+0x30]
   1400095b7:	mov    rsp,r11
   1400095ba:	pop    r15
   1400095bc:	pop    r14
   1400095be:	pop    r12
   1400095c0:	ret    
   1400095c1:	int3   
   1400095c2:	int3   
   1400095c3:	int3   
   1400095c4:	int3   
   1400095c5:	int3   
   1400095c6:	int3   
   1400095c7:	int3   
   1400095c8:	int3   
   1400095c9:	int3   
   1400095ca:	int3   
   1400095cb:	int3   
   1400095cc:	int3   
   1400095cd:	int3   
   1400095ce:	int3   
   1400095cf:	int3   
   1400095d0:	sub    rsp,0x28
   1400095d4:	call   0x140009904
   1400095d9:	add    rsp,0x28
   1400095dd:	jmp    0x140009350
   1400095e2:	int3   
   1400095e3:	int3   
   1400095e4:	int3   
   1400095e5:	int3   
   1400095e6:	int3   
   1400095e7:	int3   
   1400095e8:	int3   
   1400095e9:	int3   
   1400095ea:	int3   
   1400095eb:	int3   
   1400095ec:	int3   
   1400095ed:	int3   
   1400095ee:	int3   
   1400095ef:	int3   
   1400095f0:	int3   
   1400095f1:	int3   
   1400095f2:	int3   
   1400095f3:	int3   
   1400095f4:	int3   
   1400095f5:	int3   
   1400095f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009600:	cmp    rcx,QWORD PTR [rip+0x6a01]        # 0x140010008
   140009607:	jne    0x140009619
   140009609:	rol    rcx,0x10
   14000960d:	test   cx,0xffff
   140009612:	jne    0x140009615
   140009614:	ret    
   140009615:	ror    rcx,0x10
   140009619:	jmp    0x140009a50
   14000961e:	int3   
   14000961f:	int3   
   140009620:	int3   
   140009621:	int3   
   140009622:	int3   
   140009623:	int3   
   140009624:	mov    QWORD PTR [rsp+0x8],rbx
   140009629:	push   rdi
   14000962a:	sub    rsp,0x20
   14000962e:	mov    rdi,rcx
   140009631:	mov    rax,QWORD PTR [rip+0x71e8]        # 0x140010820
   140009638:	mov    QWORD PTR [rsp+0x38],rax
   14000963d:	cmp    rax,0xffffffffffffffff
   140009641:	jne    0x14000965a
   140009643:	mov    rbx,QWORD PTR [rip+0xdae]        # 0x14000a3f8
   14000964a:	mov    rcx,rbx
   14000964d:	call   QWORD PTR [rip+0xe85]        # 0x14000a4d8
   140009653:	mov    rcx,rdi
   140009656:	call   rbx
   140009658:	jmp    0x1400096b7
   14000965a:	mov    ecx,0x8
   14000965f:	call   0x140009bc8
   140009664:	nop
   140009665:	mov    rax,QWORD PTR [rip+0x71b4]        # 0x140010820
   14000966c:	mov    QWORD PTR [rsp+0x38],rax
   140009671:	mov    rax,QWORD PTR [rip+0x71a0]        # 0x140010818
   140009678:	mov    QWORD PTR [rsp+0x40],rax
   14000967d:	lea    r8,[rsp+0x40]
   140009682:	lea    rdx,[rsp+0x38]
   140009687:	mov    rcx,rdi
   14000968a:	call   0x140009be0
   14000968f:	mov    rbx,rax
   140009692:	mov    rdx,QWORD PTR [rsp+0x38]
   140009697:	mov    QWORD PTR [rip+0x7182],rdx        # 0x140010820
   14000969e:	mov    rdx,QWORD PTR [rsp+0x40]
   1400096a3:	mov    QWORD PTR [rip+0x716e],rdx        # 0x140010818
   1400096aa:	mov    ecx,0x8
   1400096af:	call   0x140009bd4
   1400096b4:	mov    rax,rbx
   1400096b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096bc:	add    rsp,0x20
   1400096c0:	pop    rdi
   1400096c1:	ret    
   1400096c2:	int3   
   1400096c3:	int3   
   1400096c4:	int3   
   1400096c5:	int3   
   1400096c6:	int3   
   1400096c7:	int3   
   1400096c8:	sub    rsp,0x28
   1400096cc:	call   0x140009624
   1400096d1:	neg    rax
   1400096d4:	sbb    eax,eax
   1400096d6:	neg    eax
   1400096d8:	dec    eax
   1400096da:	add    rsp,0x28
   1400096de:	ret    
   1400096df:	int3   
   1400096e0:	int3   
   1400096e1:	int3   
   1400096e2:	int3   
   1400096e3:	int3   
   1400096e4:	int3   
   1400096e5:	int3   
   1400096e6:	int3   
   1400096e7:	int3   
   1400096e8:	int3   
   1400096e9:	int3   
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	sub    rsp,0x28
   1400096f4:	mov    rax,QWORD PTR [rcx]
   1400096f7:	cmp    DWORD PTR [rax],0xe06d7363
   1400096fd:	jne    0x140009722
   1400096ff:	cmp    DWORD PTR [rax+0x18],0x4
   140009703:	jne    0x140009722
   140009705:	mov    ecx,DWORD PTR [rax+0x20]
   140009708:	lea    eax,[rcx-0x19930520]
   14000970e:	cmp    eax,0x2
   140009711:	jbe    0x14000971b
   140009713:	cmp    ecx,0x1994000
   140009719:	jne    0x140009722
   14000971b:	call   QWORD PTR [rip+0xccf]        # 0x14000a3f0
   140009721:	int3   
   140009722:	xor    eax,eax
   140009724:	add    rsp,0x28
   140009728:	ret    
   140009729:	int3   
   14000972a:	int3   
   14000972b:	int3   
   14000972c:	int3   
   14000972d:	int3   
   14000972e:	int3   
   14000972f:	int3   
   140009730:	sub    rsp,0x28
   140009734:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400096f0
   14000973b:	call   QWORD PTR [rip+0x997]        # 0x14000a0d8
   140009741:	xor    eax,eax
   140009743:	add    rsp,0x28
   140009747:	ret    
   140009748:	int3   
   140009749:	int3   
   14000974a:	int3   
   14000974b:	int3   
   14000974c:	int3   
   14000974d:	int3   
   14000974e:	jmp    QWORD PTR [rip+0xd24]        # 0x14000a478
   140009754:	int3   
   140009755:	int3   
   140009756:	int3   
   140009757:	int3   
   140009758:	int3   
   140009759:	int3   
   14000975a:	int3   
   14000975b:	int3   
   14000975c:	sub    rsp,0x18
   140009760:	xor    edx,edx
   140009762:	lea    rax,[rcx-0x1]
   140009766:	cmp    rax,0xfffffffffffffffd
   14000976a:	ja     0x1400097a8
   14000976c:	mov    eax,0x5a4d
   140009771:	cmp    WORD PTR [rcx],ax
   140009774:	jne    0x1400097a0
   140009776:	cmp    DWORD PTR [rcx+0x3c],edx
   140009779:	jl     0x1400097a0
   14000977b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140009782:	jae    0x1400097a0
   140009784:	movsxd rax,DWORD PTR [rcx+0x3c]
   140009788:	add    rax,rcx
   14000978b:	mov    QWORD PTR [rsp],rax
   14000978f:	cmp    DWORD PTR [rax],0x4550
   140009795:	cmovne rax,rdx
   140009799:	mov    rdx,rax
   14000979c:	mov    QWORD PTR [rsp],rax
   1400097a0:	jmp    0x1400097a8
   1400097a2:	xor    edx,edx
   1400097a4:	mov    QWORD PTR [rsp],rdx
   1400097a8:	mov    rax,rdx
   1400097ab:	add    rsp,0x18
   1400097af:	ret    
   1400097b0:	int3   
   1400097b1:	int3   
   1400097b2:	int3   
   1400097b3:	int3   
   1400097b4:	int3   
   1400097b5:	int3   
   1400097b6:	int3   
   1400097b7:	int3   
   1400097b8:	rex push rbx
   1400097ba:	sub    rsp,0x20
   1400097be:	mov    ebx,ecx
   1400097c0:	xor    ecx,ecx
   1400097c2:	call   QWORD PTR [rip+0x9f8]        # 0x14000a1c0
   1400097c8:	test   rax,rax
   1400097cb:	je     0x1400097f5
   1400097cd:	mov    rcx,rax
   1400097d0:	call   0x14000975c
   1400097d5:	test   rax,rax
   1400097d8:	je     0x1400097f5
   1400097da:	mov    ecx,0x2
   1400097df:	cmp    WORD PTR [rax+0x5c],cx
   1400097e3:	jne    0x1400097e9
   1400097e5:	mov    eax,ecx
   1400097e7:	jmp    0x1400097f7
   1400097e9:	cmp    WORD PTR [rax+0x5c],0x3
   1400097ee:	mov    eax,0x1
   1400097f3:	je     0x1400097f7
   1400097f5:	mov    eax,ebx
   1400097f7:	add    rsp,0x20
   1400097fb:	pop    rbx
   1400097fc:	ret    
   1400097fd:	int3   
   1400097fe:	int3   
   1400097ff:	int3   
   140009800:	int3   
   140009801:	int3   
   140009802:	int3   
   140009803:	int3   
   140009804:	jmp    QWORD PTR [rip+0xc66]        # 0x14000a470
   14000980a:	int3   
   14000980b:	int3   
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	xor    eax,eax
   140009812:	ret    
   140009813:	int3   
   140009814:	int3   
   140009815:	int3   
   140009816:	int3   
   140009817:	int3   
   140009818:	int3   
   140009819:	int3   
   14000981a:	int3   
   14000981b:	int3   
   14000981c:	int3   
   14000981d:	int3   
   14000981e:	int3   
   14000981f:	int3   
   140009820:	movsxd r8,DWORD PTR [rcx+0x3c]
   140009824:	xor    r9d,r9d
   140009827:	add    r8,rcx
   14000982a:	mov    r10,rdx
   14000982d:	movzx  eax,WORD PTR [r8+0x14]
   140009832:	movzx  r11d,WORD PTR [r8+0x6]
   140009837:	add    rax,0x18
   14000983b:	add    rax,r8
   14000983e:	test   r11d,r11d
   140009841:	je     0x140009861
   140009843:	mov    edx,DWORD PTR [rax+0xc]
   140009846:	cmp    r10,rdx
   140009849:	jb     0x140009855
   14000984b:	mov    ecx,DWORD PTR [rax+0x8]
   14000984e:	add    ecx,edx
   140009850:	cmp    r10,rcx
   140009853:	jb     0x140009863
   140009855:	inc    r9d
   140009858:	add    rax,0x28
   14000985c:	cmp    r9d,r11d
   14000985f:	jb     0x140009843
   140009861:	xor    eax,eax
   140009863:	ret    
   140009864:	int3   
   140009865:	int3   
   140009866:	int3   
   140009867:	int3   
   140009868:	int3   
   140009869:	int3   
   14000986a:	int3   
   14000986b:	int3   
   14000986c:	int3   
   14000986d:	int3   
   14000986e:	int3   
   14000986f:	int3   
   140009870:	mov    QWORD PTR [rsp+0x8],rbx
   140009875:	push   rdi
   140009876:	sub    rsp,0x20
   14000987a:	mov    rbx,rcx
   14000987d:	lea    rdi,[rip+0xffffffffffff677c]        # 0x140000000
   140009884:	mov    rcx,rdi
   140009887:	call   0x1400098d0
   14000988c:	test   eax,eax
   14000988e:	je     0x1400098b2
   140009890:	sub    rbx,rdi
   140009893:	mov    rdx,rbx
   140009896:	mov    rcx,rdi
   140009899:	call   0x140009820
   14000989e:	test   rax,rax
   1400098a1:	je     0x1400098b2
   1400098a3:	mov    eax,DWORD PTR [rax+0x24]
   1400098a6:	shr    eax,0x1f
   1400098a9:	not    eax
   1400098ab:	and    eax,0x1
   1400098ae:	jmp    0x1400098b2
   1400098b0:	xor    eax,eax
   1400098b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098b7:	add    rsp,0x20
   1400098bb:	pop    rdi
   1400098bc:	ret    
   1400098bd:	int3   
   1400098be:	int3   
   1400098bf:	int3   
   1400098c0:	int3   
   1400098c1:	int3   
   1400098c2:	int3   
   1400098c3:	int3   
   1400098c4:	int3   
   1400098c5:	int3   
   1400098c6:	int3   
   1400098c7:	int3   
   1400098c8:	int3   
   1400098c9:	int3   
   1400098ca:	int3   
   1400098cb:	int3   
   1400098cc:	int3   
   1400098cd:	int3   
   1400098ce:	int3   
   1400098cf:	int3   
   1400098d0:	mov    rax,rcx
   1400098d3:	mov    ecx,0x5a4d
   1400098d8:	cmp    WORD PTR [rax],cx
   1400098db:	je     0x1400098e0
   1400098dd:	xor    eax,eax
   1400098df:	ret    
   1400098e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400098e4:	add    rcx,rax
   1400098e7:	xor    eax,eax
   1400098e9:	cmp    DWORD PTR [rcx],0x4550
   1400098ef:	jne    0x1400098fd
   1400098f1:	mov    edx,0x20b
   1400098f6:	cmp    WORD PTR [rcx+0x18],dx
   1400098fa:	sete   al
   1400098fd:	ret    
   1400098fe:	int3   
   1400098ff:	int3   
   140009900:	int3   
   140009901:	int3   
   140009902:	int3   
   140009903:	int3   
   140009904:	mov    QWORD PTR [rsp+0x20],rbx
   140009909:	push   rbp
   14000990a:	mov    rbp,rsp
   14000990d:	sub    rsp,0x20
   140009911:	and    QWORD PTR [rbp+0x18],0x0
   140009916:	movabs rbx,0x2b992ddfa232
   140009920:	mov    rax,QWORD PTR [rip+0x66e1]        # 0x140010008
   140009927:	cmp    rax,rbx
   14000992a:	jne    0x1400099bf
   140009930:	lea    rcx,[rbp+0x18]
   140009934:	call   QWORD PTR [rip+0x9fe]        # 0x14000a338
   14000993a:	mov    rax,QWORD PTR [rbp+0x18]
   14000993e:	mov    QWORD PTR [rbp+0x10],rax
   140009942:	call   QWORD PTR [rip+0x8f0]        # 0x14000a238
   140009948:	mov    eax,eax
   14000994a:	xor    QWORD PTR [rbp+0x10],rax
   14000994e:	call   QWORD PTR [rip+0x8ec]        # 0x14000a240
   140009954:	mov    eax,eax
   140009956:	xor    QWORD PTR [rbp+0x10],rax
   14000995a:	call   QWORD PTR [rip+0x9e0]        # 0x14000a340
   140009960:	mov    eax,eax
   140009962:	shl    rax,0x18
   140009966:	xor    QWORD PTR [rbp+0x10],rax
   14000996a:	call   QWORD PTR [rip+0x9d0]        # 0x14000a340
   140009970:	mov    eax,eax
   140009972:	lea    rcx,[rbp+0x10]
   140009976:	xor    rax,QWORD PTR [rbp+0x10]
   14000997a:	xor    rax,rcx
   14000997d:	lea    rcx,[rbp+0x20]
   140009981:	mov    QWORD PTR [rbp+0x10],rax
   140009985:	call   QWORD PTR [rip+0x8d5]        # 0x14000a260
   14000998b:	mov    eax,DWORD PTR [rbp+0x20]
   14000998e:	movabs rcx,0xffffffffffff
   140009998:	shl    rax,0x20
   14000999c:	xor    rax,QWORD PTR [rbp+0x20]
   1400099a0:	xor    rax,QWORD PTR [rbp+0x10]
   1400099a4:	and    rax,rcx
   1400099a7:	movabs rcx,0x2b992ddfa233
   1400099b1:	cmp    rax,rbx
   1400099b4:	cmove  rax,rcx
   1400099b8:	mov    QWORD PTR [rip+0x6649],rax        # 0x140010008
   1400099bf:	mov    rbx,QWORD PTR [rsp+0x48]
   1400099c4:	not    rax
   1400099c7:	mov    QWORD PTR [rip+0x6642],rax        # 0x140010010
   1400099ce:	add    rsp,0x20
   1400099d2:	pop    rbp
   1400099d3:	ret    
   1400099d4:	int3   
   1400099d5:	int3   
   1400099d6:	int3   
   1400099d7:	int3   
   1400099d8:	int3   
   1400099d9:	int3   
   1400099da:	jmp    QWORD PTR [rip+0xa58]        # 0x14000a438
   1400099e0:	int3   
   1400099e1:	int3   
   1400099e2:	int3   
   1400099e3:	int3   
   1400099e4:	int3   
   1400099e5:	int3   
   1400099e6:	jmp    QWORD PTR [rip+0xa44]        # 0x14000a430
   1400099ec:	int3   
   1400099ed:	int3   
   1400099ee:	int3   
   1400099ef:	int3   
   1400099f0:	int3   
   1400099f1:	int3   
   1400099f2:	int3   
   1400099f3:	int3   
   1400099f4:	int3   
   1400099f5:	int3   
   1400099f6:	int3   
   1400099f7:	int3   
   1400099f8:	int3   
   1400099f9:	int3   
   1400099fa:	int3   
   1400099fb:	int3   
   1400099fc:	int3   
   1400099fd:	int3   
   1400099fe:	int3   
   1400099ff:	int3   
   140009a00:	ret    0x0
   140009a03:	int3   
   140009a04:	int3   
   140009a05:	int3   
   140009a06:	int3   
   140009a07:	int3   
   140009a08:	int3   
   140009a09:	int3   
   140009a0a:	int3   
   140009a0b:	int3   
   140009a0c:	rex push rbx
   140009a0e:	sub    rsp,0x20
   140009a12:	mov    rbx,rcx
   140009a15:	xor    ecx,ecx
   140009a17:	call   QWORD PTR [rip+0x6bb]        # 0x14000a0d8
   140009a1d:	mov    rcx,rbx
   140009a20:	call   QWORD PTR [rip+0x6c2]        # 0x14000a0e8
   140009a26:	call   QWORD PTR [rip+0x824]        # 0x14000a250
   140009a2c:	mov    rcx,rax
   140009a2f:	mov    edx,0xc0000409
   140009a34:	add    rsp,0x20
   140009a38:	pop    rbx
   140009a39:	rex.W jmp QWORD PTR [rip+0x7e0]        # 0x14000a220
   140009a40:	int3   
   140009a41:	int3   
   140009a42:	int3   
   140009a43:	int3   
   140009a44:	int3   
   140009a45:	int3   
   140009a46:	int3   
   140009a47:	int3   
   140009a48:	int3   
   140009a49:	int3   
   140009a4a:	int3   
   140009a4b:	int3   
   140009a4c:	int3   
   140009a4d:	int3   
   140009a4e:	int3   
   140009a4f:	int3   
   140009a50:	mov    QWORD PTR [rsp+0x8],rcx
   140009a55:	sub    rsp,0x88
   140009a5c:	lea    rcx,[rip+0x677d]        # 0x1400101e0
   140009a63:	call   QWORD PTR [rip+0x85f]        # 0x14000a2c8
   140009a69:	mov    rax,QWORD PTR [rip+0x6868]        # 0x1400102d8
   140009a70:	mov    QWORD PTR [rsp+0x48],rax
   140009a75:	xor    r8d,r8d
   140009a78:	lea    rdx,[rsp+0x50]
   140009a7d:	mov    rcx,QWORD PTR [rsp+0x48]
   140009a82:	call   QWORD PTR [rip+0x838]        # 0x14000a2c0
   140009a88:	mov    QWORD PTR [rsp+0x40],rax
   140009a8d:	cmp    QWORD PTR [rsp+0x40],0x0
   140009a93:	je     0x140009ad7
   140009a95:	mov    QWORD PTR [rsp+0x38],0x0
   140009a9e:	lea    rax,[rsp+0x58]
   140009aa3:	mov    QWORD PTR [rsp+0x30],rax
   140009aa8:	lea    rax,[rsp+0x60]
   140009aad:	mov    QWORD PTR [rsp+0x28],rax
   140009ab2:	lea    rax,[rip+0x6727]        # 0x1400101e0
   140009ab9:	mov    QWORD PTR [rsp+0x20],rax
   140009abe:	mov    r9,QWORD PTR [rsp+0x40]
   140009ac3:	mov    r8,QWORD PTR [rsp+0x48]
   140009ac8:	mov    rdx,QWORD PTR [rsp+0x50]
   140009acd:	xor    ecx,ecx
   140009acf:	call   QWORD PTR [rip+0x7e3]        # 0x14000a2b8
   140009ad5:	jmp    0x140009afa
   140009ad7:	mov    rax,QWORD PTR [rip+0x679a]        # 0x140010278
   140009ade:	mov    rax,QWORD PTR [rax]
   140009ae1:	mov    QWORD PTR [rip+0x67f0],rax        # 0x1400102d8
   140009ae8:	mov    rax,QWORD PTR [rip+0x6789]        # 0x140010278
   140009aef:	add    rax,0x8
   140009af3:	mov    QWORD PTR [rip+0x677e],rax        # 0x140010278
   140009afa:	mov    rax,QWORD PTR [rip+0x67d7]        # 0x1400102d8
   140009b01:	mov    QWORD PTR [rip+0x6648],rax        # 0x140010150
   140009b08:	mov    rax,QWORD PTR [rsp+0x90]
   140009b10:	mov    QWORD PTR [rip+0x6749],rax        # 0x140010260
   140009b17:	mov    DWORD PTR [rip+0x661f],0xc0000409        # 0x140010140
   140009b21:	mov    DWORD PTR [rip+0x6619],0x1        # 0x140010144
   140009b2b:	mov    DWORD PTR [rip+0x6623],0x3        # 0x140010158
   140009b35:	mov    eax,0x8
   140009b3a:	imul   rax,rax,0x0
   140009b3e:	lea    rcx,[rip+0x661b]        # 0x140010160
   140009b45:	mov    QWORD PTR [rcx+rax*1],0x2
   140009b4d:	mov    eax,0x8
   140009b52:	imul   rax,rax,0x1
   140009b56:	lea    rcx,[rip+0x6603]        # 0x140010160
   140009b5d:	mov    rdx,QWORD PTR [rip+0x64a4]        # 0x140010008
   140009b64:	mov    QWORD PTR [rcx+rax*1],rdx
   140009b68:	mov    eax,0x8
   140009b6d:	imul   rax,rax,0x2
   140009b71:	lea    rcx,[rip+0x65e8]        # 0x140010160
   140009b78:	mov    rdx,QWORD PTR [rip+0x6491]        # 0x140010010
   140009b7f:	mov    QWORD PTR [rcx+rax*1],rdx
   140009b83:	mov    eax,0x8
   140009b88:	imul   rax,rax,0x0
   140009b8c:	mov    rcx,QWORD PTR [rip+0x6475]        # 0x140010008
   140009b93:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140009b98:	mov    eax,0x8
   140009b9d:	imul   rax,rax,0x1
   140009ba1:	mov    rcx,QWORD PTR [rip+0x6468]        # 0x140010010
   140009ba8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140009bad:	lea    rcx,[rip+0xa0c]        # 0x14000a5c0
   140009bb4:	call   0x140009a0c
   140009bb9:	add    rsp,0x88
   140009bc0:	ret    
   140009bc1:	int3   
   140009bc2:	int3   
   140009bc3:	int3   
   140009bc4:	int3   
   140009bc5:	int3   
   140009bc6:	int3   
   140009bc7:	int3   
   140009bc8:	jmp    QWORD PTR [rip+0x842]        # 0x14000a410
   140009bce:	int3   
   140009bcf:	int3   
   140009bd0:	int3   
   140009bd1:	int3   
   140009bd2:	int3   
   140009bd3:	int3   
   140009bd4:	jmp    QWORD PTR [rip+0x82e]        # 0x14000a408
   140009bda:	int3   
   140009bdb:	int3   
   140009bdc:	int3   
   140009bdd:	int3   
   140009bde:	int3   
   140009bdf:	int3   
   140009be0:	jmp    QWORD PTR [rip+0x81a]        # 0x14000a400
   140009be6:	int3   
   140009be7:	int3   
   140009be8:	int3   
   140009be9:	int3   
   140009bea:	int3   
   140009beb:	int3   
   140009bec:	int3   
   140009bed:	int3   
   140009bee:	int3   
   140009bef:	int3   
   140009bf0:	int3   
   140009bf1:	int3   
   140009bf2:	int3   
   140009bf3:	int3   
   140009bf4:	int3   
   140009bf5:	int3   
   140009bf6:	int3   
   140009bf7:	int3   
   140009bf8:	sub    rsp,0x28
   140009bfc:	mov    r8,QWORD PTR [r9+0x38]
   140009c00:	mov    rcx,rdx
   140009c03:	mov    rdx,r9
   140009c06:	call   0x140009c1c
   140009c0b:	mov    eax,0x1
   140009c10:	add    rsp,0x28
   140009c14:	ret    
   140009c15:	int3   
   140009c16:	int3   
   140009c17:	int3   
   140009c18:	int3   
   140009c19:	int3   
   140009c1a:	int3   
   140009c1b:	int3   
   140009c1c:	rex push rbx
   140009c1e:	sub    rsp,0x20
   140009c22:	mov    r11d,DWORD PTR [r8]
   140009c25:	mov    rbx,rdx
   140009c28:	and    r11d,0xfffffff8
   140009c2c:	mov    r9,rcx
   140009c2f:	test   BYTE PTR [r8],0x4
   140009c33:	mov    r10,rcx
   140009c36:	je     0x140009c4b
   140009c38:	mov    eax,DWORD PTR [r8+0x8]
   140009c3c:	movsxd r10,DWORD PTR [r8+0x4]
   140009c40:	neg    eax
   140009c42:	add    r10,rcx
   140009c45:	movsxd rcx,eax
   140009c48:	and    r10,rcx
   140009c4b:	movsxd rax,r11d
   140009c4e:	mov    rdx,QWORD PTR [rax+r10*1]
   140009c52:	mov    rax,QWORD PTR [rbx+0x10]
   140009c56:	mov    ecx,DWORD PTR [rax+0x8]
   140009c59:	add    rcx,QWORD PTR [rbx+0x8]
   140009c5d:	test   BYTE PTR [rcx+0x3],0xf
   140009c61:	je     0x140009c6f
   140009c63:	movzx  eax,BYTE PTR [rcx+0x3]
   140009c67:	and    eax,0xfffffff0
   140009c6a:	cdqe   
   140009c6c:	add    r9,rax
   140009c6f:	xor    r9,rdx
   140009c72:	mov    rcx,r9
   140009c75:	add    rsp,0x20
   140009c79:	pop    rbx
   140009c7a:	jmp    0x140009600
   140009c7f:	int3   
   140009c80:	int3   
   140009c81:	int3   
   140009c82:	int3   
   140009c83:	int3   
   140009c84:	int3   
   140009c85:	int3   
   140009c86:	jmp    QWORD PTR [rip+0x75c]        # 0x14000a3e8
   140009c8c:	int3   
   140009c8d:	int3   
   140009c8e:	int3   
   140009c8f:	int3   
   140009c90:	int3   
   140009c91:	int3   
   140009c92:	jmp    QWORD PTR [rip+0x7e8]        # 0x14000a480
   140009c98:	int3   
   140009c99:	int3   
   140009c9a:	int3   
   140009c9b:	int3   
   140009c9c:	int3   
   140009c9d:	int3   
   140009c9e:	int3   
   140009c9f:	int3   
   140009ca0:	int3   
   140009ca1:	int3   
   140009ca2:	int3   
   140009ca3:	int3   
   140009ca4:	int3   
   140009ca5:	int3   
   140009ca6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009cb0:	jmp    rax
   140009cb2:	int3   
   140009cb3:	int3   
   140009cb4:	int3   
   140009cb5:	int3   
   140009cb6:	int3   
   140009cb7:	int3   
   140009cb8:	int3   
   140009cb9:	int3   
   140009cba:	int3   
   140009cbb:	int3   
   140009cbc:	int3   
   140009cbd:	int3   
   140009cbe:	int3   
   140009cbf:	int3   
   140009cc0:	int3   
   140009cc1:	int3   
   140009cc2:	int3   
   140009cc3:	int3   
   140009cc4:	int3   
   140009cc5:	int3   
   140009cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009cd0:	sub    rsp,0x10
   140009cd4:	mov    QWORD PTR [rsp],r10
   140009cd8:	mov    QWORD PTR [rsp+0x8],r11
   140009cdd:	xor    r11,r11
   140009ce0:	lea    r10,[rsp+0x18]
   140009ce5:	sub    r10,rax
   140009ce8:	cmovb  r10,r11
   140009cec:	mov    r11,QWORD PTR gs:0x10
   140009cf5:	cmp    r10,r11
   140009cf8:	jae    0x140009d0f
   140009cfa:	and    r10w,0xf000
   140009d00:	lea    r11,[r11-0x1000]
   140009d07:	test   BYTE PTR [r11],r11b
   140009d0a:	cmp    r10,r11
   140009d0d:	jne    0x140009d00
   140009d0f:	mov    r10,QWORD PTR [rsp]
   140009d13:	mov    r11,QWORD PTR [rsp+0x8]
   140009d18:	add    rsp,0x10
   140009d1c:	ret    
   140009d1d:	int3   
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	int3   
   140009d21:	int3   
   140009d22:	int3   
   140009d23:	int3   
   140009d24:	int3   
   140009d25:	int3   
   140009d26:	rex push rbp
   140009d28:	sub    rsp,0x20
   140009d2c:	mov    rbp,rdx
   140009d2f:	mov    rax,QWORD PTR [rcx]
   140009d32:	mov    rdx,rcx
   140009d35:	mov    ecx,DWORD PTR [rax]
   140009d37:	call   0x14000974e
   140009d3c:	nop
   140009d3d:	add    rsp,0x20
   140009d41:	pop    rbp
   140009d42:	ret    
   140009d43:	int3   
   140009d44:	int3   
   140009d45:	int3   
   140009d46:	int3   
   140009d47:	int3   
   140009d48:	int3   
   140009d49:	int3   
   140009d4a:	rex push rbp
   140009d4c:	sub    rsp,0x20
   140009d50:	mov    rbp,rdx
   140009d53:	mov    ecx,0x8
   140009d58:	call   0x140009bd4
   140009d5d:	nop
   140009d5e:	add    rsp,0x20
   140009d62:	pop    rbp
   140009d63:	ret    
   140009d64:	int3   
   140009d65:	int3   
   140009d66:	int3   
   140009d67:	int3   
   140009d68:	int3   
   140009d69:	int3   
   140009d6a:	int3   
   140009d6b:	int3   
   140009d6c:	int3   
   140009d6d:	int3   
   140009d6e:	int3   
   140009d6f:	int3   
   140009d70:	rex push rbp
   140009d72:	sub    rsp,0x20
   140009d76:	mov    rbp,rdx
   140009d79:	mov    rax,QWORD PTR [rcx]
   140009d7c:	xor    ecx,ecx
   140009d7e:	cmp    DWORD PTR [rax],0xc0000005
   140009d84:	sete   cl
   140009d87:	mov    eax,ecx
   140009d89:	add    rsp,0x20
   140009d8d:	pop    rbp
   140009d8e:	ret    
   140009d8f:	int3   
   140009d90:	int3   
   140009d91:	int3   
   140009d92:	int3   
   140009d93:	int3   
   140009d94:	int3   
   140009d95:	int3   
   140009d96:	int3   
   140009d97:	int3   
   140009d98:	int3   
   140009d99:	int3   
   140009d9a:	int3   
   140009d9b:	int3   
   140009d9c:	int3   
   140009d9d:	int3   
   140009d9e:	int3   
   140009d9f:	int3   
   140009da0:	rex push rbx
   140009da2:	sub    rsp,0x20
   140009da6:	mov    rbx,QWORD PTR [rip+0x632b]        # 0x1400100d8
   140009dad:	test   rbx,rbx
   140009db0:	je     0x140009dbd
   140009db2:	mov    rcx,rbx
   140009db5:	call   QWORD PTR [rip+0x71d]        # 0x14000a4d8
   140009dbb:	call   rbx
   140009dbd:	add    rsp,0x20
   140009dc1:	pop    rbx
   140009dc2:	ret    
   140009dc3:	int3   
   140009dc4:	int3   
   140009dc5:	int3   
   140009dc6:	int3   
   140009dc7:	int3   
   140009dc8:	int3   
   140009dc9:	int3   
   140009dca:	int3   
   140009dcb:	int3   
   140009dcc:	int3   
   140009dcd:	int3   
   140009dce:	int3   
   140009dcf:	int3   
   140009dd0:	lea    rcx,[rip+0x69d1]        # 0x1400107a8
   140009dd7:	rex.W jmp QWORD PTR [rip+0x522]        # 0x14000a300
   140009dde:	int3   
   140009ddf:	int3   
   140009de0:	int3   
   140009de1:	int3   
   140009de2:	int3   
   140009de3:	int3   
   140009de4:	int3   
   140009de5:	int3   
   140009de6:	int3   
   140009de7:	int3   
   140009de8:	int3   
   140009de9:	int3   
   140009dea:	int3   
   140009deb:	int3   
   140009dec:	int3   
   140009ded:	int3   
   140009dee:	int3   
   140009def:	int3   
   140009df0:	sub    rsp,0x28
   140009df4:	mov    rcx,QWORD PTR [rip+0x69dd]        # 0x1400107d8
   140009dfb:	test   rcx,rcx
   140009dfe:	je     0x140009e06
   140009e00:	call   QWORD PTR [rip+0x3aa]        # 0x14000a1b0
   140009e06:	add    rsp,0x28
   140009e0a:	ret    
   140009e0b:	int3   
   140009e0c:	int3   
   140009e0d:	int3   
   140009e0e:	int3   
   140009e0f:	int3   
   140009e10:	int3   
   140009e11:	int3   
   140009e12:	int3   
   140009e13:	int3   
   140009e14:	int3   
   140009e15:	int3   
   140009e16:	int3   
   140009e17:	int3   
   140009e18:	int3   
   140009e19:	int3   
   140009e1a:	int3   
   140009e1b:	int3   
   140009e1c:	int3   
   140009e1d:	int3   
   140009e1e:	int3   
   140009e1f:	int3   
   140009e20:	rex push rbx
   140009e22:	sub    rsp,0x20
   140009e26:	mov    rbx,QWORD PTR [rip+0x62b3]        # 0x1400100e0
   140009e2d:	test   rbx,rbx
   140009e30:	je     0x140009e3d
   140009e32:	mov    rcx,rbx
   140009e35:	call   QWORD PTR [rip+0x69d]        # 0x14000a4d8
   140009e3b:	call   rbx
   140009e3d:	add    rsp,0x20
   140009e41:	pop    rbx
   140009e42:	ret    
   140009e43:	int3   
   140009e44:	int3   
   140009e45:	int3   
   140009e46:	int3   
   140009e47:	int3   
   140009e48:	int3   
   140009e49:	int3   
   140009e4a:	int3   
   140009e4b:	int3   
   140009e4c:	int3   
   140009e4d:	int3   
   140009e4e:	int3   
   140009e4f:	int3   
   140009e50:	rex push rdi
   140009e52:	sub    rsp,0x20
   140009e56:	cmp    QWORD PTR [rip+0x698a],0x0        # 0x1400107e8
   140009e5e:	je     0x140009e8b
   140009e60:	cmp    QWORD PTR [rip+0x6978],0x0        # 0x1400107e0
   140009e68:	je     0x140009e8b
   140009e6a:	mov    rdi,QWORD PTR [rip+0x697f]        # 0x1400107f0
   140009e71:	mov    rcx,rdi
   140009e74:	call   QWORD PTR [rip+0x65e]        # 0x14000a4d8
   140009e7a:	mov    rcx,QWORD PTR [rip+0x695f]        # 0x1400107e0
   140009e81:	call   rdi
   140009e83:	and    QWORD PTR [rip+0x6955],0x0        # 0x1400107e0
   140009e8b:	add    rsp,0x20
   140009e8f:	pop    rdi
   140009e90:	ret    
   140009e91:	int3   
   140009e92:	int3   
   140009e93:	int3   
   140009e94:	int3   
   140009e95:	int3   
   140009e96:	int3   
   140009e97:	int3   
   140009e98:	int3   
   140009e99:	int3   
   140009e9a:	int3   
   140009e9b:	int3   
   140009e9c:	int3   
   140009e9d:	int3   
   140009e9e:	int3   
   140009e9f:	int3   
   140009ea0:	xor    eax,eax
   140009ea2:	mov    QWORD PTR [rip+0x693f],rax        # 0x1400107e8
   140009ea9:	mov    QWORD PTR [rip+0x6940],rax        # 0x1400107f0
   140009eb0:	mov    QWORD PTR [rip+0x6941],rax        # 0x1400107f8
   140009eb7:	mov    QWORD PTR [rip+0x6942],rax        # 0x140010800
   140009ebe:	ret    

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	movabs al,ds:0xb6000000000000ee
   14000a009:	out    dx,al
	...
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	(bad)  
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rax],0x0
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	sahf   
   14000a029:	repz add BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	cmp    ch,dh
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	sbb    dh,ah
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	ds hlt 
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    BYTE PTR [rax],al
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	mov    ah,0xf3
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	add    BYTE PTR [rax],al
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	ins    BYTE PTR es:[rdi],dx
   14000a051:	hlt    
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	add    BYTE PTR [rax],al
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	mov    ah,dh
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	add    BYTE PTR [rax],al
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	movabs ds:0xcc000000000000f4,al
   14000a069:	hlt    
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	add    BYTE PTR [rax],al
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	out    0xf4,al
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	add    BYTE PTR [rax],al
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	add    ch,dh
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	(bad)  
   14000a081:	repz add BYTE PTR [rax],al
   14000a084:	add    BYTE PTR [rax],al
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	push   rax
   14000a089:	out    dx,al
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	add    BYTE PTR [rax],al
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	je     0x14000a080
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	add    BYTE PTR [rax],al
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	lock xrelease add BYTE PTR [rax],al
   14000a09c:	add    BYTE PTR [rax],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	push   rsp
   14000a0a1:	hlt    
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	add    BYTE PTR [rax],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	(bad)  
   14000a0a9:	hlt    
	...
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	rex.R (bad) 
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	(bad)  
   14000a0c1:	icebp  
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	push   rsi
   14000a0c9:	(bad)  
	...
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	scas   al,BYTE PTR es:[rdi]
   14000a0d9:	(bad)  
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	(bad)  
   14000a0e1:	out    dx,eax
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	add    BYTE PTR [rax],al
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	jle    0x14000a0d5
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    BYTE PTR [rax],al
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	clc    
   14000a0f1:	jmp    0x14000a0f6
	...
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	sub    dh,al
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	rex.WR
   14000a109:	lock add BYTE PTR [rax],al
   14000a10c:	add    BYTE PTR [rax],al
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	(bad)  
   14000a111:	lock add BYTE PTR [rax],al
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	jo     0x14000a10a
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	test   al,dh
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	nop
   14000a129:	lock add BYTE PTR [rax],al
   14000a12c:	add    BYTE PTR [rax],al
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	scas   al,BYTE PTR es:[rdi]
   14000a131:	lock add BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	in     al,dx
   14000a139:	lock add BYTE PTR [rax],al
	...
   14000a148:	lock add BYTE PTR ds:[rax],al
	...
   14000a158:	fsubp  st(1),st
	...
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	rex.X out dx,eax
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax],al
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	push   0xea
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rdx+rbp*8+0x0],dh
	...
   14000a187:	add    BYTE PTR [rsi+0xea],al
	...
   14000a195:	add    BYTE PTR [rax],al
   14000a197:	add    ah,bh
   14000a199:	in     eax,dx
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	out    0xed,al
	...
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	xor    al,0xef
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	xchg   edx,eax
   14000a1b9:	jmp    0x14000a1be
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	rex jmp 0x14000a1c6
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	rex.WRX out dx,eax
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	add    BYTE PTR [rax],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	lock out dx,eax
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	xchg   esp,eax
   14000a1d9:	out    dx,eax
   14000a1da:	add    BYTE PTR [rax],al
   14000a1dc:	add    BYTE PTR [rax],al
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	mov    edx,0xf1
	...
   14000a1ed:	add    BYTE PTR [rax],al
   14000a1ef:	add    BYTE PTR [rdx+0xf1],ch
	...
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rsi-0xd],dl
	...
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	(bad)  
   14000a211:	lock add BYTE PTR [rax],al
	...
   14000a220:	scas   al,BYTE PTR es:[rdi]
   14000a221:	jmp    0x14000a223
   14000a223:	add    BYTE PTR [rax],al
   14000a225:	add    BYTE PTR [rax],al
   14000a227:	add    ah,al
   14000a229:	lock add BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	pushf  
   14000a231:	(bad)  
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	out    0xea,al
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	cld    
   14000a241:	(bad)  
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	(bad)  
   14000a249:	lock add BYTE PTR [rax],al
   14000a24c:	add    BYTE PTR [rax],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	(bad)  
   14000a251:	jmp    0x14000a253
	...
   14000a25f:	add    ah,cl
   14000a261:	(bad)  
	...
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	adc    dh,cl
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	add    BYTE PTR [rax],al
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	pop    rsp
   14000a279:	icebp  
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	add    BYTE PTR [rax],al
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	and    al,0xf1
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	add    BYTE PTR [rax],al
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	ss icebp 
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	add    BYTE PTR [rax],al
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	ins    BYTE PTR es:[rdi],dx
   14000a291:	icebp  
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    BYTE PTR [rax],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	rex.WX icebp 
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	add    BYTE PTR [rax],al
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	jp     0x14000a293
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	mov    cl,dh
	...
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	push   0xffffffffffffffeb
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	push   rax
   14000a2c1:	jmp    0x14000a2c3
   14000a2c3:	add    BYTE PTR [rax],al
   14000a2c5:	add    BYTE PTR [rax],al
   14000a2c7:	add    BYTE PTR [rbx+rbp*8],bh
	...
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	add    cl,dh
	...
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	stos   BYTE PTR es:[rdi],al
   14000a2e9:	out    dx,eax
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	add    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	(bad)  
   14000a2f1:	out    dx,eax
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	jl     0x14000a2e9
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	ret    0xef
   14000a303:	add    BYTE PTR [rax],al
   14000a305:	add    BYTE PTR [rax],al
   14000a307:	add    al,dl
   14000a309:	jmp    0x14000a30e
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	in     al,dx
   14000a311:	jmp    0x14000a316
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	(bad)  
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	add    BYTE PTR [rax],al
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	xchg   esp,eax
   14000a321:	(bad)  
	...
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	push   0xffffffffffffffe9
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	add    BYTE PTR [rax],al
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	adc    ch,bl
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    BYTE PTR [rax],al
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	sub    al,0xeb
	...
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a351:	jmp    0x14000a356
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	jp     0x14000a343
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	mov    edx,0xe9
   14000a365:	add    BYTE PTR [rax],al
   14000a367:	add    BYTE PTR [rax],cl
   14000a369:	(bad)  
   14000a36a:	add    BYTE PTR [rax],al
   14000a36c:	add    BYTE PTR [rax],al
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	ss (bad) 
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	push   rsp
   14000a379:	jmp    0x14000a37e
	...
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	and    dl,ch
	...
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	stos   BYTE PTR es:[rdi],al
   14000a399:	in     eax,dx
	...
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	es out dx,eax
   14000a3aa:	add    BYTE PTR [rax],al
   14000a3ac:	add    BYTE PTR [rax],al
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	(bad)  
   14000a3b1:	out    dx,eax
   14000a3b2:	add    BYTE PTR [rax],al
   14000a3b4:	add    BYTE PTR [rax],al
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	add    ch,bh
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    BYTE PTR [rax],al
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	hlt    
   14000a3c1:	out    dx,al
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	add    BYTE PTR [rax],al
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	out    0xee,al
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	add    BYTE PTR [rax],al
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	fsub   st(6),st
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	add    BYTE PTR [rax],al
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	cmp    al,ch
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	add    BYTE PTR [rax],al
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	sbb    bh,ch
   14000a3e2:	add    BYTE PTR [rax],al
   14000a3e4:	add    BYTE PTR [rax],al
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	es cmc 
   14000a3ea:	add    BYTE PTR [rax],al
   14000a3ec:	add    BYTE PTR [rax],al
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	sub    al,0xe9
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	add    BYTE PTR [rax],al
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	(bad)  
   14000a3f9:	jmp    0x14000a3fe
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	or     cl,ch
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	add    BYTE PTR [rax],al
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	(bad)  
   14000a409:	call   0x14000a40e
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	imul   al
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	add    BYTE PTR [rax],al
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	(bad)  
   14000a419:	call   0x14000a41e
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	loopne 0x14000a40a
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	add    BYTE PTR [rax],al
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	(bad)  
   14000a429:	call   0x14000a42e
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	mov    esi,0xe8
   14000a435:	add    BYTE PTR [rax],al
   14000a437:	add    BYTE PTR [rdx+0xe8],dh
   14000a43d:	add    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rsi+0xe8],bl
   14000a445:	add    BYTE PTR [rax],al
   14000a447:	add    BYTE PTR [rax+rbp*8+0x0],dl
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	mov    eax,gs
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	add    BYTE PTR [rax],al
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	test   al,ch
   14000a45a:	add    BYTE PTR [rax],al
   14000a45c:	add    BYTE PTR [rax],al
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	jb     0x14000a44a
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	add    BYTE PTR [rax],al
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	(bad)  
   14000a469:	call   0x14000a46e
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	push   rdx
   14000a471:	call   0x14000a476
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	rex.R call 0x14000a47e
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	xor    ch,dh
	...
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	cmp    al,0xf3
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	add    BYTE PTR [rax],al
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	xor    dh,bl
   14000a49a:	add    BYTE PTR [rax],al
   14000a49c:	add    BYTE PTR [rax],al
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	and    al,0xf3
   14000a4a2:	add    BYTE PTR [rax],al
   14000a4a4:	add    BYTE PTR [rax],al
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	or     al,0xf3
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	add    BYTE PTR [rax],al
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	cli    
   14000a4b1:	repnz add BYTE PTR [rax],al
   14000a4b4:	add    BYTE PTR [rax],al
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	in     al,dx
   14000a4b9:	repnz add BYTE PTR [rax],al
   14000a4bc:	add    BYTE PTR [rax],al
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	(bad)  
   14000a4c1:	repnz add BYTE PTR [rax],al
   14000a4c4:	add    BYTE PTR [rax],al
   14000a4c6:	add    BYTE PTR [rax],al
   14000a4c8:	mov    esp,0xf2
	...
   14000a4d9:	(bad)  
   14000a4da:	add    BYTE PTR [rax+0x1],al
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    BYTE PTR [rax+0x140009c],dh
	...
   14000a4f1:	xchg   ebx,eax
   14000a4f2:	add    BYTE PTR [rax+0x1],al
   14000a4f5:	add    BYTE PTR [rax],al
   14000a4f7:	add    BYTE PTR [rax],al
   14000a4f9:	adc    BYTE PTR [rax],al
   14000a4fb:	rex add DWORD PTR [rax],eax
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	xor    BYTE PTR [rax],dl
   14000a502:	add    BYTE PTR [rax+0x1],al
   14000a505:	add    BYTE PTR [rax],al
   14000a507:	add    BYTE PTR [rax+0x10],ah
   14000a50a:	add    BYTE PTR [rax+0x1],al
   14000a50d:	add    BYTE PTR [rax],al
   14000a50f:	add    BYTE PTR [rax],dl
   14000a511:	adc    DWORD PTR [rax],eax
   14000a513:	rex add DWORD PTR [rax],eax
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	nop
   14000a519:	adc    BYTE PTR [rax],al
   14000a51b:	rex add DWORD PTR [rax],eax
	...
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	and    BYTE PTR [rdx+0x14000],dl
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	xor    BYTE PTR [rdi+0x14000],dl
	...
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	add    BYTE PTR [rax],dl
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	xor    BYTE PTR [rax],dl
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	(bad)  
   14000a551:	adc    BYTE PTR [rax],al
   14000a553:	add    BYTE PTR [rax+0x10000010],dl
   14000a559:	adc    DWORD PTR [rax],eax
   14000a55b:	add    BYTE PTR [rax],dh
   14000a55d:	adc    al,BYTE PTR [rax]
   14000a55f:	add    BYTE PTR [rax-0x1fffffed],ah
   14000a565:	adc    al,0x0
   14000a567:	add    al,ah
   14000a569:	(bad)  
   14000a56a:	add    BYTE PTR [rax],al
   14000a56c:	rcr    BYTE PTR [rax],0x0
   14000a56f:	add    al,al
   14000a571:	sub    BYTE PTR [rax],al
   14000a573:	add    BYTE PTR [rax-0x6fffff7a],dh
   14000a579:	mov    BYTE PTR [rax],al
   14000a57b:	add    BYTE PTR [rax],ah
   14000a57d:	xchg   edx,eax
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	add    BYTE PTR [rbx-0x6a300000],dl
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	lock xchg esi,eax
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	xor    BYTE PTR [rdi-0x67f00000],dl
   14000a592:	add    BYTE PTR [rax],al
   14000a594:	add    BYTE PTR [rdx-0x65b00000],bl
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	movabs al,ds:0xf000009dd000009d
   14000a5a5:	popf   
   14000a5a6:	add    BYTE PTR [rax],al
   14000a5a8:	and    BYTE PTR [rsi-0x61b00000],bl
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	movabs al,ds:0x9e
   14000a5b9:	add    BYTE PTR [rax],al
   14000a5bb:	add    BYTE PTR [rax],al
   14000a5bd:	add    BYTE PTR [rax],al
   14000a5bf:	add    BYTE PTR [rax+0x1],al
   14000a5c2:	add    DWORD PTR [rax+0x1],eax
   14000a5c5:	add    BYTE PTR [rax],al
   14000a5c7:	add    al,ah
   14000a5c9:	add    DWORD PTR [rcx],eax
   14000a5cb:	rex add DWORD PTR [rax],eax
   14000a5ce:	add    BYTE PTR [rax],al
   14000a5d0:	pop    rsp
   14000a5d1:	add    BYTE PTR [rax],al
   14000a5d3:	add    BYTE PTR [rax],al
   14000a5d5:	add    BYTE PTR [rax],al
   14000a5d7:	add    BYTE PTR [rcx+0x0],ah
   14000a5da:	add    BYTE PTR fs:[rsi+0x0],dh
   14000a5de:	(bad)  
   14000a5df:	add    BYTE PTR [rax+0x0],dh
   14000a5e2:	imul   eax,DWORD PTR [rax],0x320033
   14000a5e8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000a5ed:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000a5fd:	add    BYTE PTR [rax],al
   14000a5ff:	add    BYTE PTR [rcx+0x0],ah
   14000a602:	jo     0x14000a604
   14000a604:	imul   eax,DWORD PTR [rax],0x6d002d
   14000a60a:	jae    0x14000a60c
   14000a60c:	sub    eax,0x69007700
   14000a611:	add    BYTE PTR [rsi+0x0],ch
   14000a614:	sub    eax,0x76006500
   14000a619:	add    BYTE PTR [rbp+0x0],ah
   14000a61c:	outs   dx,BYTE PTR ds:[rsi]
   14000a61d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a621:	add    BYTE PTR [rsi+0x0],ch
   14000a624:	add    BYTE PTR [eip+0x72007000],ch        # 0x1b201162b
   14000a62b:	add    BYTE PTR [rdi+0x0],ch
   14000a62e:	jbe    0x14000a630
   14000a630:	imul   eax,DWORD PTR [rax],0x650064
   14000a636:	jb     0x14000a638
   14000a638:	sub    eax,0x31006c00
   14000a63d:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00d743
   14000a643:	add    BYTE PTR [rax],dh
   14000a645:	add    BYTE PTR [rsi],ch
   14000a647:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000a64b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a64f:	add    BYTE PTR [rbp+0x76],al
   14000a652:	outs   dx,BYTE PTR gs:[rsi]
   14000a654:	je     0x14000a6ad
   14000a656:	jb     0x14000a6c1
   14000a658:	je     0x14000a6bf
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	add    BYTE PTR [rax],al
   14000a65e:	add    BYTE PTR [rax],al
   14000a660:	rex.RB jbe 0x14000a6c8
   14000a663:	outs   dx,BYTE PTR ds:[rsi]
   14000a664:	je     0x14000a6b8
   14000a666:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   14000a66f:	add    BYTE PTR [rbp+0x76],al
   14000a672:	outs   dx,BYTE PTR gs:[rsi]
   14000a674:	je     0x14000a6cb
   14000a676:	outs   dx,BYTE PTR ds:[rsi]
   14000a677:	jb     0x14000a6de
   14000a679:	imul   esi,DWORD PTR [ebx+0x74],0xd4007265
   14000a681:	(bad)  
   14000a682:	add    BYTE PTR [rax],dl
   14000a684:	add    al,0x0
   14000a686:	rol    BYTE PTR [rdi],1
   14000a688:	add    al,BYTE PTR [rax]
   14000a68a:	add    BYTE PTR [rax],al
   14000a68c:	add    BYTE PTR [rax],ah
   14000a68e:	add    BYTE PTR [rax+0x75ebc33e],al
   14000a694:	jo     0x14000a61c
   14000a696:	mov    dh,0x4e
   14000a698:	mov    ch,0x35
   14000a69a:	cmp    ebx,DWORD PTR [rbp-0x2dd4d95]
   14000a6a0:	(bad)  
   14000a6a1:	out    dx,eax
   14000a6a2:	fadd   DWORD PTR [rdx+0x4954fd94]
   14000a6a8:	xchg   edx,eax
   14000a6a9:	sub    al,0x54
   14000a6ab:	ret    
   14000a6ac:	fild   WORD PTR [rdx-0x4f]
   14000a6af:	in     eax,dx
   14000a6b0:	rol    DWORD PTR [rdi],cl
   14000a6b2:	add    BYTE PTR [rax],dl
   14000a6b4:	add    al,0x2
   14000a6b6:	rol    BYTE PTR [rdi],1
   14000a6b8:	add    DWORD PTR [rax],eax
   14000a6ba:	add    BYTE PTR [rax],al
   14000a6bc:	add    BYTE PTR [rax],ah
   14000a6be:	add    BYTE PTR [rax+0x100007d2],al
   14000a6c4:	add    al,0x2
   14000a6c6:	rol    BYTE PTR [rdi],1
   14000a6c8:	add    DWORD PTR [rax],eax
   14000a6ca:	add    BYTE PTR [rax],al
   14000a6cc:	add    BYTE PTR [rax],ah
   14000a6ce:	add    BYTE PTR [rax+0x10000bba],al
   14000a6d4:	add    al,0x2
   14000a6d6:	mov    eax,0x10b
   14000a6db:	add    BYTE PTR [rax],al
   14000a6dd:	and    BYTE PTR [rax],al
   14000a6df:	xor    BYTE PTR [rax],0x82
   14000a6e2:	pop    rsp
   14000a6e3:	mov    eax,0x4cdb44b8
   14000a6e8:	(bad)  
   14000a6e9:	push   rsp
   14000a6ea:	(bad)  
   14000a6eb:	movsxd ebx,edi
   14000a6ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a6ee:	mov    al,0x7f
   14000a6f0:	rol    DWORD PTR [rdi],1
   14000a6f2:	add    BYTE PTR [rax],dl
   14000a6f4:	add    al,0x1
   14000a6f6:	rol    BYTE PTR [rdi],1
   14000a6f8:	add    DWORD PTR [rax],eax
   14000a6fa:	add    BYTE PTR [rax],al
   14000a6fc:	add    BYTE PTR [rax],ah
   14000a6fe:	add    BYTE PTR [rax-0x2b42eb53],al
   14000a704:	and    ah,BYTE PTR [rbx]
   14000a706:	cdq    
   14000a707:	mov    r12d,0x46a0f976
   14000a70d:	mov    al,0xb0
   14000a70f:	(bad)  
   14000a710:	(bad)  
   14000a711:	add    eax,DWORD PTR [rax]
   14000a713:	adc    BYTE PTR [rdx+rax*1],al
   14000a716:	call   0x14000a81e
   14000a71b:	add    BYTE PTR [rax],al
   14000a71d:	and    BYTE PTR [rax],al
   14000a71f:	add    BYTE PTR [rsp+rax*1],0x0
   14000a723:	add    BYTE PTR [rax],al
   14000a725:	add    BYTE PTR [rax],al
   14000a727:	add    BYTE PTR [rcx],al
   14000a729:	add    BYTE PTR [rax],al
   14000a72b:	add    BYTE PTR [rax],al
   14000a72d:	and    BYTE PTR [rax],al
   14000a72f:	add    BYTE PTR [rdx],0x0
   14000a732:	add    BYTE PTR [rax],al
   14000a734:	add    BYTE PTR [rax],ah
   14000a736:	add    BYTE PTR [rax+0x100003e9],al
   14000a73c:	add    al,0x1
   14000a73e:	call   0x14000a846
   14000a743:	add    BYTE PTR [rax],al
   14000a745:	and    BYTE PTR [rax],al
   14000a747:	cmp    BYTE PTR [rcx+0x410000b],0x1
   14000a74e:	mov    eax,0x10b
   14000a753:	add    BYTE PTR [rax],al
   14000a755:	and    BYTE PTR [rax],al
   14000a757:	or     BYTE PTR [rdi+0x0],0x4f
   14000a75b:	add    BYTE PTR [rdx+0x0],al
   14000a75e:	add    BYTE PTR [r8+rax*1+0x72],r10b
   14000a763:	add    BYTE PTR [rcx+0x0],ah
   14000a766:	outs   dx,BYTE PTR ds:[rsi]
   14000a767:	add    BYTE PTR [rbx+0x0],dh
   14000a76a:	imul   eax,DWORD PTR [rax],0x690074
   14000a770:	outs   dx,DWORD PTR ds:[rsi]
   14000a771:	add    BYTE PTR [rsi+0x0],ch
   14000a774:	push   rbp
   14000a775:	add    BYTE PTR [rax+0x0],bl
   14000a778:	add    BYTE PTR [r14+0x0],r13b
   14000a77c:	add    BYTE PTR fs:[rbp+0x0],al
   14000a780:	jbe    0x14000a782
   14000a782:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a786:	je     0x14000a788
	...
   14000a790:	cmp    al,0x0
   14000a792:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a796:	jo     0x14000a798
   14000a798:	je     0x14000a79a
   14000a79a:	jns    0x14000a79c
   14000a79c:	add    BYTE PTR ds:[rax],al
   14000a79f:	add    BYTE PTR [rdi+0x0],cl
   14000a7a2:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000a7a6:	add    BYTE PTR [r8+rax*1+0x64],r9b
   14000a7ab:	add    BYTE PTR [rdx+0x0],dh
   14000a7ae:	add    BYTE PTR cs:[rbp+0x0],ah
   14000a7b2:	js     0x14000a7b4
   14000a7b4:	add    BYTE PTR gs:[rax],ah
   14000a7b7:	add    BYTE PTR [rax+rax*1+0x61],ch
   14000a7bb:	add    BYTE PTR [rbp+0x0],dh
   14000a7be:	outs   dx,BYTE PTR ds:[rsi]
   14000a7bf:	add    BYTE PTR [rbx+0x0],ah
   14000a7c2:	push   0x64006500
   14000a7c7:	add    BYTE PTR [rax],ah
   14000a7c9:	add    BYTE PTR [rdi+0x0],dh
   14000a7cc:	imul   eax,DWORD PTR [rax],0x680074
   14000a7d2:	and    BYTE PTR [rax],al
   14000a7d4:	movsxd eax,DWORD PTR [rax]
   14000a7d6:	outs   dx,DWORD PTR ds:[rsi]
   14000a7d7:	add    BYTE PTR [rbp+0x0],ch
   14000a7da:	ins    DWORD PTR es:[rdi],dx
   14000a7db:	add    BYTE PTR [rcx+0x0],ah
   14000a7de:	outs   dx,BYTE PTR ds:[rsi]
   14000a7df:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000a7e3:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000a7e7:	add    BYTE PTR [rsi+0x0],ch
   14000a7ea:	add    BYTE PTR gs:[rax],ah
   14000a7ed:	add    BYTE PTR [rbx+0x0],bl
   14000a7f0:	and    eax,0x5d007300
   14000a7f5:	add    BYTE PTR [rsi],ch
   14000a7f7:	add    BYTE PTR [rsi],ch
   14000a7f9:	add    BYTE PTR [rsi],ch
   14000a7fb:	add    BYTE PTR [rax],al
   14000a7fd:	add    BYTE PTR [rax],al
   14000a7ff:	add    BYTE PTR [rdi+0x0],ch
   14000a802:	outs   dx,DWORD PTR ds:[rsi]
   14000a803:	add    BYTE PTR [rdx+0x0],ah
   14000a806:	add    BYTE PTR gs:[rax+rax*1+0x64],ch
   14000a80b:	add    BYTE PTR [rdx+0x0],dh
   14000a80e:	add    BYTE PTR cs:[rbp+0x0],ah
   14000a812:	js     0x14000a814
   14000a814:	add    BYTE PTR gs:[rax],al
	...
   14000a81f:	add    BYTE PTR [rax+0x0],dl
   14000a822:	(bad)  
   14000a823:	add    BYTE PTR [rdx+0x0],dh
   14000a826:	jae    0x14000a828
   14000a828:	imul   eax,DWORD PTR [rax],0x67006e
   14000a82e:	and    BYTE PTR [rax],al
   14000a830:	movsxd eax,DWORD PTR [rax]
   14000a832:	outs   dx,DWORD PTR ds:[rsi]
   14000a833:	add    BYTE PTR [rbp+0x0],ch
   14000a836:	ins    DWORD PTR es:[rdi],dx
   14000a837:	add    BYTE PTR [rcx+0x0],ah
   14000a83a:	outs   dx,BYTE PTR ds:[rsi]
   14000a83b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000a83f:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000a843:	add    BYTE PTR [rsi+0x0],ch
   14000a846:	add    BYTE PTR gs:[rax],ah
   14000a849:	add    BYTE PTR [rcx+0x0],ah
   14000a84c:	jb     0x14000a84e
   14000a84e:	add    BYTE PTR [ebp+0x0],dh
   14000a852:	ins    DWORD PTR es:[rdi],dx
   14000a853:	add    BYTE PTR [rbp+0x0],ah
   14000a856:	outs   dx,BYTE PTR ds:[rsi]
   14000a857:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000a85b:	add    BYTE PTR [rsi],ch
   14000a85d:	add    BYTE PTR [rsi],ch
   14000a85f:	add    BYTE PTR [rsi],ch
	...
   14000a86d:	add    BYTE PTR [rax],al
   14000a86f:	add    BYTE PTR [rbx+0x0],dl
   14000a872:	jne    0x14000a874
   14000a874:	movsxd eax,DWORD PTR [rax]
   14000a876:	movsxd eax,DWORD PTR [rax]
   14000a878:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a87c:	jae    0x14000a87e
   14000a87e:	data16 add BYTE PTR [rbp+0x0],dh
   14000a882:	ins    BYTE PTR es:[rdi],dx
   14000a883:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000a887:	add    BYTE PTR [rax],ah
   14000a889:	add    BYTE PTR [rdx+0x0],dh
   14000a88c:	(bad)  
   14000a88d:	add    BYTE PTR [rsi+0x0],ch
   14000a890:	and    BYTE PTR [rax],al
   14000a892:	outs   dx,DWORD PTR ds:[rsi]
   14000a893:	add    BYTE PTR [rdi+0x0],ch
   14000a896:	(bad)  
   14000a897:	add    BYTE PTR [rbp+0x0],ah
   14000a89a:	push   rbx
   14000a89b:	add    BYTE PTR [rcx+0x0],bh
   14000a89e:	jae    0x14000a8a0
   14000a8a0:	je     0x14000a8a2
   14000a8a2:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a8a6:	and    BYTE PTR [rax],al
   14000a8a8:	jo     0x14000a8aa
   14000a8aa:	(bad)  
   14000a8ab:	add    BYTE PTR [rbx+0x0],dh
   14000a8ae:	jae    0x14000a8b0
   14000a8b0:	add    BYTE PTR cs:[rax],al
	...
   14000a8bf:	add    BYTE PTR [rbp+0x0],dl
   14000a8c2:	jae    0x14000a8c4
   14000a8c4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a8c8:	and    BYTE PTR [rax],al
   14000a8ca:	imul   eax,DWORD PTR [rax],0x70006e
   14000a8d0:	jne    0x14000a8d2
   14000a8d2:	je     0x14000a8d4
   14000a8d4:	and    BYTE PTR [rax],al
   14000a8d6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a8da:	jb     0x14000a8dc
   14000a8dc:	outs   dx,DWORD PTR ds:[rsi]
   14000a8dd:	add    BYTE PTR [rdx+0x0],dh
   14000a8e0:	and    BYTE PTR [rax],al
   14000a8e2:	ja     0x14000a8e4
   14000a8e4:	(bad)  
   14000a8e5:	add    BYTE PTR [rbx+0x0],dh
   14000a8e8:	and    BYTE PTR [rax],al
   14000a8ea:	add    BYTE PTR fs:[rbp+0x0],ah
   14000a8ee:	je     0x14000a8f0
   14000a8f0:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a8f4:	je     0x14000a8f6
   14000a8f6:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000a8fb:	add    BYTE PTR [rcx+0x0],ch
   14000a8fe:	outs   dx,BYTE PTR ds:[rsi]
   14000a8ff:	add    BYTE PTR [rax],ah
   14000a901:	add    BYTE PTR [rbp+0x0],dh
   14000a904:	outs   dx,BYTE PTR ds:[rsi]
   14000a905:	add    BYTE PTR [rcx+0x0],ah
   14000a908:	je     0x14000a90a
   14000a90a:	je     0x14000a90c
   14000a90c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a910:	add    BYTE PTR fs:[rax],ah
   14000a913:	add    BYTE PTR [rsi+0x0],ah
   14000a916:	imul   eax,DWORD PTR [rax],0x65006c
   14000a91c:	add    BYTE PTR cs:[rax],ah
   14000a91f:	add    BYTE PTR [rbp+0x0],al
   14000a922:	jb     0x14000a924
   14000a924:	jb     0x14000a926
   14000a926:	outs   dx,DWORD PTR ds:[rsi]
   14000a927:	add    BYTE PTR [rdx+0x0],dh
   14000a92a:	cmp    al,BYTE PTR [rax]
   14000a92c:	and    BYTE PTR [rax],al
   14000a92e:	pop    rbx
   14000a92f:	add    BYTE PTR [rax],dh
   14000a931:	add    BYTE PTR [rax+0x0],bh
   14000a934:	and    eax,0x5d005800
   14000a939:	add    BYTE PTR [rax],al
   14000a93b:	add    BYTE PTR [rax],al
   14000a93d:	add    BYTE PTR [rax],al
   14000a93f:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000a943:	add    BYTE PTR [rbp+0x0],ah
   14000a946:	jb     0x14000a948
   14000a948:	add    BYTE PTR gs:[rax],ah
   14000a94b:	add    BYTE PTR [rdi+0x0],dh
   14000a94e:	(bad)  
   14000a94f:	add    BYTE PTR [rbx+0x0],dh
   14000a952:	and    BYTE PTR [rax],al
   14000a954:	(bad)  
   14000a955:	add    BYTE PTR [rsi+0x0],ch
   14000a958:	and    BYTE PTR [rax],al
   14000a95a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a95e:	jb     0x14000a960
   14000a960:	outs   dx,DWORD PTR ds:[rsi]
   14000a961:	add    BYTE PTR [rdx+0x0],dh
   14000a964:	and    BYTE PTR [rax],al
   14000a966:	ja     0x14000a968
   14000a968:	push   0x6c006900
   14000a96d:	add    BYTE PTR [rbp+0x0],ah
   14000a970:	and    BYTE PTR [rax],al
   14000a972:	jo     0x14000a974
   14000a974:	jb     0x14000a976
   14000a976:	outs   dx,DWORD PTR ds:[rsi]
   14000a977:	add    BYTE PTR [rbx+0x0],ah
   14000a97a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a97e:	jae    0x14000a980
   14000a980:	imul   eax,DWORD PTR [rax],0x67006e
   14000a986:	and    BYTE PTR [rax],al
   14000a988:	outs   dx,DWORD PTR ds:[rsi]
   14000a989:	add    BYTE PTR [rdi+0x0],ch
   14000a98c:	(bad)  
   14000a98d:	add    BYTE PTR [rbp+0x0],ah
   14000a990:	push   rbx
   14000a991:	add    BYTE PTR [rcx+0x0],bh
   14000a994:	jae    0x14000a996
   14000a996:	je     0x14000a998
   14000a998:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a99c:	add    BYTE PTR cs:[rax],ah
   14000a99f:	add    BYTE PTR [rbp+0x0],al
   14000a9a2:	jb     0x14000a9a4
   14000a9a4:	jb     0x14000a9a6
   14000a9a6:	outs   dx,DWORD PTR ds:[rsi]
   14000a9a7:	add    BYTE PTR [rdx+0x0],dh
   14000a9aa:	cmp    al,BYTE PTR [rax]
   14000a9ac:	and    BYTE PTR [rax],al
   14000a9ae:	pop    rbx
   14000a9af:	add    BYTE PTR [rax],dh
   14000a9b1:	add    BYTE PTR [rax+0x0],bh
   14000a9b4:	and    eax,0x5d005800
   14000a9b9:	add    BYTE PTR [rax],al
   14000a9bb:	add    BYTE PTR [rax],al
   14000a9bd:	add    BYTE PTR [rax],al
   14000a9bf:	add    BYTE PTR [rdi+0x0],cl
   14000a9c2:	outs   dx,DWORD PTR ds:[rsi]
   14000a9c3:	add    BYTE PTR [rdx+0x0],ah
   14000a9c6:	add    BYTE PTR gs:[rbp+0x0],al
   14000a9ca:	js     0x14000a9cc
   14000a9cc:	add    BYTE PTR gs:[rax+0x0],dl
   14000a9d0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a9d4:	data16 add BYTE PTR [rax],al
	...
   14000a9df:	add    BYTE PTR [rdi+0x0],cl
   14000a9e2:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000a9e6:	add    BYTE PTR [r8+rax*1+0x64],r9b
   14000a9eb:	add    BYTE PTR [rdx+0x0],dh
   14000a9ee:	add    BYTE PTR cs:[rbp+0x0],ah
   14000a9f2:	js     0x14000a9f4
   14000a9f4:	add    BYTE PTR gs:[rax],ah
   14000a9f7:	add    BYTE PTR [rbp+0x0],ah
   14000a9fa:	js     0x14000a9fc
   14000a9fc:	imul   eax,DWORD PTR [rax],0x690074
   14000aa02:	outs   dx,BYTE PTR ds:[rsi]
   14000aa03:	add    BYTE PTR [rdi+0x0],ah
   14000aa06:	and    BYTE PTR [rax],al
   14000aa08:	ja     0x14000aa0a
   14000aa0a:	imul   eax,DWORD PTR [rax],0x680074
   14000aa10:	and    BYTE PTR [rax],al
   14000aa12:	movsxd eax,DWORD PTR [rax]
   14000aa14:	outs   dx,DWORD PTR ds:[rsi]
   14000aa15:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000aa19:	add    BYTE PTR [rax],ah
   14000aa1b:	add    BYTE PTR [rbx+0x0],bl
   14000aa1e:	xor    BYTE PTR [rax],al
   14000aa20:	js     0x14000aa22
   14000aa22:	and    eax,0x5d007800
   14000aa27:	add    BYTE PTR [rsi],ch
   14000aa29:	add    BYTE PTR [rsi],ch
   14000aa2b:	add    BYTE PTR [rsi],ch
   14000aa2d:	add    BYTE PTR [rax],al
   14000aa2f:	add    BYTE PTR [rbx+0x0],dl
   14000aa32:	je     0x14000aa34
   14000aa34:	(bad)  
   14000aa35:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000aa39:	add    BYTE PTR [rbx+0x0],dh
   14000aa3c:	and    BYTE PTR [rax],al
   14000aa3e:	data16 add BYTE PTR [rdi+0x0],ch
   14000aa42:	jb     0x14000aa44
   14000aa44:	and    BYTE PTR [rax],al
   14000aa46:	jne    0x14000aa48
   14000aa48:	outs   dx,BYTE PTR ds:[rsi]
   14000aa49:	add    BYTE PTR [rcx+0x0],ah
   14000aa4c:	je     0x14000aa4e
   14000aa4e:	je     0x14000aa50
   14000aa50:	add    BYTE PTR gs:[rsi+0x0],ch
   14000aa54:	add    BYTE PTR fs:[rax],ah
   14000aa57:	add    BYTE PTR [rax+0x0],dh
   14000aa5a:	(bad)  
   14000aa5b:	add    BYTE PTR [rbx+0x0],dh
   14000aa5e:	jae    0x14000aa60
   14000aa60:	and    BYTE PTR [rax],al
   14000aa62:	pop    rbx
   14000aa63:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d011d69
   14000aa69:	add    BYTE PTR [rax],ah
   14000aa6b:	add    BYTE PTR [rip+0x30002000],bh        # 0x17000ca71
   14000aa71:	add    BYTE PTR [rax+0x0],bh
   14000aa74:	and    eax,0x7800
   14000aa79:	add    BYTE PTR [rax],al
   14000aa7b:	add    BYTE PTR [rax],al
   14000aa7d:	add    BYTE PTR [rax],al
   14000aa7f:	add    BYTE PTR [rip+0x69007700],ah        # 0x1a9012185
   14000aa85:	add    BYTE PTR [rsi+0x0],ch
   14000aa88:	add    BYTE PTR fs:[rcx+0x0],ch
   14000aa8c:	jb     0x14000aa8e
   14000aa8e:	and    eax,0x73005c00
   14000aa93:	add    BYTE PTR [rcx+0x0],bh
   14000aa96:	jae    0x14000aa98
   14000aa98:	je     0x14000aa9a
   14000aa9a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000aa9e:	xor    eax,DWORD PTR [rax]
   14000aaa0:	xor    al,BYTE PTR [rax]
   14000aaa2:	pop    rsp
   14000aaa3:	add    BYTE PTR [rbx+0x0],dh
   14000aaa6:	jns    0x14000aaa8
   14000aaa8:	jae    0x14000aaaa
   14000aaaa:	jo     0x14000aaac
   14000aaac:	jb     0x14000aaae
   14000aaae:	add    BYTE PTR gs:[rax+0x0],dh
   14000aab2:	pop    rsp
   14000aab3:	add    BYTE PTR [rbx+0x0],dh
   14000aab6:	jns    0x14000aab8
   14000aab8:	jae    0x14000aaba
   14000aaba:	jo     0x14000aabc
   14000aabc:	jb     0x14000aabe
   14000aabe:	add    BYTE PTR gs:[rax+0x0],dh
   14000aac2:	add    BYTE PTR cs:[rbp+0x0],ah
   14000aac6:	js     0x14000aac8
   14000aac8:	add    BYTE PTR gs:[rax],al
   14000aacb:	add    BYTE PTR [rax],al
   14000aacd:	add    BYTE PTR [rax],al
   14000aacf:	add    BYTE PTR [rip+0x69007700],ah        # 0x1a90121d5
   14000aad5:	add    BYTE PTR [rsi+0x0],ch
   14000aad8:	add    BYTE PTR fs:[rcx+0x0],ch
   14000aadc:	jb     0x14000aade
   14000aade:	and    eax,0x70005c00
   14000aae3:	add    BYTE PTR [rcx+0x0],ah
   14000aae6:	outs   dx,BYTE PTR ds:[rsi]
   14000aae7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000aaeb:	add    BYTE PTR [rbp+0x0],ah
   14000aaee:	jb     0x14000aaf0
   14000aaf0:	pop    rsp
   14000aaf1:	add    BYTE PTR [rbp+0x0],dh
   14000aaf4:	outs   dx,BYTE PTR ds:[rsi]
   14000aaf5:	add    BYTE PTR [rcx+0x0],ah
   14000aaf8:	je     0x14000aafa
   14000aafa:	je     0x14000aafc
   14000aafc:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ab00:	add    BYTE PTR fs:[rsi],ch
   14000ab03:	add    BYTE PTR [rax+0x0],bh
   14000ab06:	ins    DWORD PTR es:[rdi],dx
   14000ab07:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000ab0b:	add    BYTE PTR [rax],al
   14000ab0d:	add    BYTE PTR [rax],al
   14000ab0f:	add    BYTE PTR [rcx+0x0],cl
   14000ab12:	outs   dx,BYTE PTR ds:[rsi]
   14000ab13:	add    BYTE PTR [rip+0x73007500],ch        # 0x1b3012019
   14000ab19:	add    BYTE PTR [rbp+0x0],ah
   14000ab1c:	and    BYTE PTR [rax],al
   14000ab1e:	movsxd eax,DWORD PTR [rax]
   14000ab20:	(bad)  
   14000ab21:	add    BYTE PTR [rbx+0x0],ah
   14000ab24:	push   0x64006500
   14000ab29:	add    BYTE PTR [rax],ah
   14000ab2b:	add    BYTE PTR [rbp+0x0],dh
   14000ab2e:	outs   dx,BYTE PTR ds:[rsi]
   14000ab2f:	add    BYTE PTR [rcx+0x0],ah
   14000ab32:	je     0x14000ab34
   14000ab34:	je     0x14000ab36
   14000ab36:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ab3a:	add    BYTE PTR fs:[rax],ah
   14000ab3d:	add    BYTE PTR [rsi+0x0],ah
   14000ab40:	imul   eax,DWORD PTR [rax],0x65006c
   14000ab46:	and    BYTE PTR [rax],al
   14000ab48:	data16 add BYTE PTR [rdi+0x0],ch
   14000ab4c:	jb     0x14000ab4e
   14000ab4e:	and    BYTE PTR [rax],al
   14000ab50:	pop    rbx
   14000ab51:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d011e57
   14000ab57:	add    BYTE PTR [rax],ah
   14000ab59:	add    BYTE PTR [rcx+0x0],ch
   14000ab5c:	jae    0x14000ab5e
   14000ab5e:	and    BYTE PTR [rax],al
   14000ab60:	jae    0x14000ab62
   14000ab62:	je     0x14000ab64
   14000ab64:	imul   eax,DWORD PTR [rax],0x6c006c
   14000ab6a:	and    BYTE PTR [rax],al
   14000ab6c:	jo     0x14000ab6e
   14000ab6e:	jb     0x14000ab70
   14000ab70:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ab74:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ab78:	je     0x14000ab7a
   14000ab7a:	and    BYTE PTR [rax],al
   14000ab7c:	(bad)  
   14000ab7d:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ab81:	add    BYTE PTR [rbx+0x0],bl
   14000ab84:	and    eax,0x5d007300
   14000ab89:	add    BYTE PTR [rsi],ch
   14000ab8b:	add    BYTE PTR [rax],al
   14000ab8d:	add    BYTE PTR [rax],al
   14000ab8f:	add    BYTE PTR [rdi+0x0],dl
   14000ab92:	add    BYTE PTR gs:[rdi],ah
   14000ab95:	add    BYTE PTR [rdx+0x0],dh
   14000ab98:	add    BYTE PTR gs:[rax],ah
   14000ab9b:	add    BYTE PTR [rcx+0x0],ch
   14000ab9e:	outs   dx,BYTE PTR ds:[rsi]
   14000ab9f:	add    BYTE PTR [rax],ah
   14000aba1:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000aba5:	add    BYTE PTR [rbp+0x0],ah
   14000aba8:	and    BYTE PTR [rax],al
   14000abaa:	ins    DWORD PTR es:[rdi],dx
   14000abab:	add    BYTE PTR [rcx+0x0],ch
   14000abae:	add    BYTE PTR fs:[rax+rax*1+0x6c],ah
   14000abb3:	add    BYTE PTR [rbp+0x0],ah
   14000abb6:	and    BYTE PTR [rax],al
   14000abb8:	outs   dx,DWORD PTR ds:[rsi]
   14000abb9:	add    BYTE PTR [rsi+0x0],ah
   14000abbc:	and    BYTE PTR [rax],al
   14000abbe:	pop    rbx
   14000abbf:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d011ec5
   14000abc5:	add    BYTE PTR [rax+rax*1],ch
   14000abc8:	and    BYTE PTR [rax],al
   14000abca:	(bad)  
   14000abcb:	add    BYTE PTR [rbp+0x0],dh
   14000abce:	je     0x14000abd0
   14000abd0:	and    BYTE PTR [rax],al
   14000abd2:	ja     0x14000abd4
   14000abd4:	add    BYTE PTR gs:[rax],ah
   14000abd7:	add    BYTE PTR [rbx+0x0],ah
   14000abda:	(bad)  
   14000abdb:	add    BYTE PTR [rsi+0x0],ch
   14000abde:	(bad)  
   14000abdf:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000abe3:	add    BYTE PTR [rsi+0x0],ah
   14000abe6:	imul   eax,DWORD PTR [rax],0x64006e
   14000abec:	and    BYTE PTR [rax],al
   14000abee:	je     0x14000abf0
   14000abf0:	push   0x20006500
   14000abf5:	add    BYTE PTR [rbx+0x0],ah
   14000abf8:	(bad)  
   14000abf9:	add    BYTE PTR [rbx+0x0],ah
   14000abfc:	push   0x64006500
   14000ac01:	add    BYTE PTR [rax],ah
   14000ac03:	add    BYTE PTR [rbp+0x0],dh
   14000ac06:	outs   dx,BYTE PTR ds:[rsi]
   14000ac07:	add    BYTE PTR [rcx+0x0],ah
   14000ac0a:	je     0x14000ac0c
   14000ac0c:	je     0x14000ac0e
   14000ac0e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ac12:	add    BYTE PTR fs:[rax],ah
   14000ac15:	add    BYTE PTR [rsi+0x0],ah
   14000ac18:	imul   eax,DWORD PTR [rax],0x65006c
   14000ac1e:	and    BYTE PTR [rax],al
   14000ac20:	(bad)  
   14000ac21:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ac25:	add    BYTE PTR [rbx+0x0],bl
   14000ac28:	and    eax,0x5d007300
   14000ac2d:	add    BYTE PTR [rsi],ch
	...
   14000ac3f:	add    BYTE PTR [rdx+0x0],dl
   14000ac42:	jne    0x14000ac44
   14000ac44:	outs   dx,BYTE PTR ds:[rsi]
   14000ac45:	add    BYTE PTR [rsi+0x0],ch
   14000ac48:	imul   eax,DWORD PTR [rax],0x67006e
   14000ac4e:	and    BYTE PTR [rax],al
   14000ac50:	and    eax,0x20007300
   14000ac55:	add    BYTE PTR [rax+0x0],dh
   14000ac58:	(bad)  
   14000ac59:	add    BYTE PTR [rbx+0x0],dh
   14000ac5c:	jae    0x14000ac5e
   14000ac5e:	and    BYTE PTR [rax],al
   14000ac60:	ja     0x14000ac62
   14000ac62:	imul   eax,DWORD PTR [rax],0x680074
   14000ac68:	and    BYTE PTR [rax],al
   14000ac6a:	add    BYTE PTR fs:[rcx+0x0],ch
   14000ac6e:	jae    0x14000ac70
   14000ac70:	movsxd eax,DWORD PTR [rax]
   14000ac72:	outs   dx,DWORD PTR ds:[rsi]
   14000ac73:	add    BYTE PTR [rsi+0x0],dh
   14000ac76:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ac7a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ac7f:	add    BYTE PTR [rbp+0x0],dh
   14000ac82:	outs   dx,BYTE PTR ds:[rsi]
   14000ac83:	add    BYTE PTR [rcx+0x0],ah
   14000ac86:	je     0x14000ac88
   14000ac88:	je     0x14000ac8a
   14000ac8a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ac8e:	add    BYTE PTR fs:[rax],ah
   14000ac91:	add    BYTE PTR [rsi+0x0],ah
   14000ac94:	imul   eax,DWORD PTR [rax],0x65006c
   14000ac9a:	and    BYTE PTR [rax],al
   14000ac9c:	pop    rbx
   14000ac9d:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d011fa3
   14000aca3:	add    BYTE PTR [rsi],ch
   14000aca5:	add    BYTE PTR [rsi],ch
   14000aca7:	add    BYTE PTR [rsi],ch
   14000aca9:	add    BYTE PTR [rax],al
   14000acab:	add    BYTE PTR [rax],al
   14000acad:	add    BYTE PTR [rax],al
   14000acaf:	add    BYTE PTR [rbx+0x0],al
   14000acb2:	(bad)  
   14000acb3:	add    BYTE PTR [rbx+0x0],ah
   14000acb6:	push   0x64006500
   14000acbb:	add    BYTE PTR [rax],ah
   14000acbd:	add    BYTE PTR [rbp+0x0],dh
   14000acc0:	outs   dx,BYTE PTR ds:[rsi]
   14000acc1:	add    BYTE PTR [rcx+0x0],ah
   14000acc4:	je     0x14000acc6
   14000acc6:	je     0x14000acc8
   14000acc8:	add    BYTE PTR gs:[rsi+0x0],ch
   14000accc:	add    BYTE PTR fs:[rax],ah
   14000accf:	add    BYTE PTR [rsi+0x0],ah
   14000acd2:	imul   eax,DWORD PTR [rax],0x65006c
   14000acd8:	sub    al,0x0
   14000acda:	and    BYTE PTR [rax],al
   14000acdc:	jb     0x14000acde
   14000acde:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000ace3:	add    BYTE PTR [rdx+0x0],dh
   14000ace6:	outs   dx,BYTE PTR ds:[rsi]
   14000ace7:	add    BYTE PTR [rbp+0x0],ah
   14000acea:	add    BYTE PTR fs:[rdx],bh
   14000aced:	add    BYTE PTR [rax],ah
   14000acef:	add    BYTE PTR [rbx+0x0],bl
   14000acf2:	and    eax,0x5d007300
	...
   14000acff:	add    BYTE PTR [rdi+0x0],cl
   14000ad02:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000ad06:	add    BYTE PTR [r8],r8b
   14000ad09:	add    BYTE PTR [rax],al
   14000ad0b:	add    BYTE PTR [rax],al
   14000ad0d:	add    BYTE PTR [rax],al
   14000ad0f:	add    BYTE PTR [rdi+0x0],cl
   14000ad12:	outs   dx,DWORD PTR ds:[rsi]
   14000ad13:	add    BYTE PTR [rdx+0x0],ah
   14000ad16:	add    BYTE PTR gs:[rbx+0x0],dl
   14000ad1a:	jns    0x14000ad1c
   14000ad1c:	jae    0x14000ad1e
   14000ad1e:	je     0x14000ad20
   14000ad20:	add    BYTE PTR gs:[rbp+0x0],ch
   14000ad24:	push   rax
   14000ad25:	add    BYTE PTR [rbp+0x0],ah
   14000ad28:	jb     0x14000ad2a
   14000ad2a:	data16 add BYTE PTR [rax],al
   14000ad2d:	add    BYTE PTR [rax],al
   14000ad2f:	add    BYTE PTR [rbx+0x0],dl
   14000ad32:	jne    0x14000ad34
   14000ad34:	movsxd eax,DWORD PTR [rax]
   14000ad36:	movsxd eax,DWORD PTR [rax]
   14000ad38:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ad3c:	jae    0x14000ad3e
   14000ad3e:	data16 add BYTE PTR [rbp+0x0],dh
   14000ad42:	ins    BYTE PTR es:[rdi],dx
   14000ad43:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000ad47:	add    BYTE PTR [rax],ah
   14000ad49:	add    BYTE PTR [rbx+0x0],ah
   14000ad4c:	outs   dx,DWORD PTR ds:[rsi]
   14000ad4d:	add    BYTE PTR [rbp+0x0],ch
   14000ad50:	jo     0x14000ad52
   14000ad52:	ins    BYTE PTR es:[rdi],dx
   14000ad53:	add    BYTE PTR [rbp+0x0],ah
   14000ad56:	je     0x14000ad58
   14000ad58:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ad5d:	add    BYTE PTR [rdx+0x0],dl
   14000ad60:	jne    0x14000ad62
   14000ad62:	outs   dx,BYTE PTR ds:[rsi]
   14000ad63:	add    BYTE PTR [rbx+0x0],dl
   14000ad66:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14000ad6a:	push   rax
   14000ad6b:	add    BYTE PTR [rcx+0x0],ah
   14000ad6e:	jae    0x14000ad70
   14000ad70:	jae    0x14000ad72
   14000ad72:	and    BYTE PTR [rax],al
   14000ad74:	data16 add BYTE PTR [rdi+0x0],ch
   14000ad78:	jb     0x14000ad7a
   14000ad7a:	and    BYTE PTR [rax],al
   14000ad7c:	and    eax,0x2e007300
	...
   14000ad8d:	add    BYTE PTR [rax],al
   14000ad8f:	add    BYTE PTR [rsi+0x0],al
   14000ad92:	(bad)  
   14000ad93:	add    BYTE PTR [rcx+0x0],ch
   14000ad96:	ins    BYTE PTR es:[rdi],dx
   14000ad97:	add    BYTE PTR [rbp+0x0],ah
   14000ad9a:	add    BYTE PTR fs:[rax],ah
   14000ad9d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000ada1:	add    BYTE PTR [rax],ah
   14000ada3:	add    BYTE PTR [rbx+0x0],ah
   14000ada6:	outs   dx,DWORD PTR ds:[rsi]
   14000ada7:	add    BYTE PTR [rbp+0x0],ch
   14000adaa:	jo     0x14000adac
   14000adac:	ins    BYTE PTR es:[rdi],dx
   14000adad:	add    BYTE PTR [rbp+0x0],ah
   14000adb0:	je     0x14000adb2
   14000adb2:	add    BYTE PTR gs:[rax],ah
   14000adb5:	add    BYTE PTR [rdx+0x0],dl
   14000adb8:	jne    0x14000adba
   14000adba:	outs   dx,BYTE PTR ds:[rsi]
   14000adbb:	add    BYTE PTR [rbx+0x0],dl
   14000adbe:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14000adc2:	push   rax
   14000adc3:	add    BYTE PTR [rcx+0x0],ah
   14000adc6:	jae    0x14000adc8
   14000adc8:	jae    0x14000adca
   14000adca:	and    BYTE PTR [rax],al
   14000adcc:	data16 add BYTE PTR [rdi+0x0],ch
   14000add0:	jb     0x14000add2
   14000add2:	and    BYTE PTR [rax],al
   14000add4:	and    eax,0x2e007300
   14000add9:	add    BYTE PTR [rax],ah
   14000addb:	add    BYTE PTR [rax],ah
   14000addd:	add    BYTE PTR [rbp+0x0],al
   14000ade0:	jb     0x14000ade2
   14000ade2:	jb     0x14000ade4
   14000ade4:	outs   dx,DWORD PTR ds:[rsi]
   14000ade5:	add    BYTE PTR [rdx+0x0],dh
   14000ade8:	cmp    al,BYTE PTR [rax]
   14000adea:	and    BYTE PTR [rax],al
   14000adec:	pop    rbx
   14000aded:	add    BYTE PTR [rax],dh
   14000adef:	add    BYTE PTR [rax+0x0],bh
   14000adf2:	and    eax,0x5d005800
	...
   14000adff:	add    BYTE PTR [rsi+0x0],al
   14000ae02:	outs   dx,DWORD PTR ds:[rsi]
   14000ae03:	add    BYTE PTR [rbp+0x0],dh
   14000ae06:	outs   dx,BYTE PTR ds:[rsi]
   14000ae07:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ae0b:	add    BYTE PTR [rsi+0x0],ch
   14000ae0e:	outs   dx,DWORD PTR ds:[rsi]
   14000ae0f:	add    BYTE PTR [rax],ah
   14000ae11:	add    BYTE PTR [rbp+0x0],dh
   14000ae14:	outs   dx,BYTE PTR ds:[rsi]
   14000ae15:	add    BYTE PTR [rcx+0x0],ah
   14000ae18:	je     0x14000ae1a
   14000ae1a:	je     0x14000ae1c
   14000ae1c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ae20:	add    BYTE PTR fs:[rax],ah
   14000ae23:	add    BYTE PTR [rsi+0x0],ah
   14000ae26:	imul   eax,DWORD PTR [rax],0x65006c
   14000ae2c:	and    BYTE PTR [rax],al
   14000ae2e:	data16 add BYTE PTR [rdi+0x0],ch
   14000ae32:	jb     0x14000ae34
   14000ae34:	and    BYTE PTR [rax],al
   14000ae36:	and    eax,0x20007300
   14000ae3b:	add    BYTE PTR [rax+0x0],dh
   14000ae3e:	(bad)  
   14000ae3f:	add    BYTE PTR [rbx+0x0],dh
   14000ae42:	jae    0x14000ae44
   14000ae44:	cmp    eax,DWORD PTR [rax]
   14000ae46:	and    BYTE PTR [rax],al
   14000ae48:	jae    0x14000ae4a
   14000ae4a:	imul   eax,DWORD PTR [rax],0x69
   14000ae4d:	add    BYTE PTR [rax+0x0],dh
   14000ae50:	jo     0x14000ae52
   14000ae52:	imul   eax,DWORD PTR [rax],0x67006e
   14000ae58:	and    BYTE PTR [rax],al
   14000ae5a:	jo     0x14000ae5c
   14000ae5c:	(bad)  
   14000ae5d:	add    BYTE PTR [rbx+0x0],dh
   14000ae60:	jae    0x14000ae62
   14000ae62:	add    BYTE PTR cs:[rax],al
	...
   14000ae6d:	add    BYTE PTR [rax],al
   14000ae6f:	add    BYTE PTR [rcx+0x0],al
   14000ae72:	and    BYTE PTR [rax],al
   14000ae74:	jb     0x14000ae76
   14000ae76:	add    BYTE PTR gs:[rdx+0x0],ah
   14000ae7a:	outs   dx,DWORD PTR ds:[rsi]
   14000ae7b:	add    BYTE PTR [rdi+0x0],ch
   14000ae7e:	je     0x14000ae80
   14000ae80:	and    BYTE PTR [rax],al
   14000ae82:	push   0x73006100
   14000ae87:	add    BYTE PTR [rax],ah
   14000ae89:	add    BYTE PTR [rdx+0x0],ah
   14000ae8c:	add    BYTE PTR gs:[rbp+0x0],ah
   14000ae90:	outs   dx,BYTE PTR ds:[rsi]
   14000ae91:	add    BYTE PTR [rax],ah
   14000ae93:	add    BYTE PTR [rdx+0x0],dh
   14000ae96:	add    BYTE PTR gs:[rcx+0x0],dh
   14000ae9a:	jne    0x14000ae9c
   14000ae9c:	add    BYTE PTR gs:[rbx+0x0],dh
   14000aea0:	je     0x14000aea2
   14000aea2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000aea7:	add    BYTE PTR [rsi+0x0],ah
   14000aeaa:	outs   dx,DWORD PTR ds:[rsi]
   14000aeab:	add    BYTE PTR [rdx+0x0],dh
   14000aeae:	and    BYTE PTR [rax],al
   14000aeb0:	and    eax,0x20007300
   14000aeb5:	add    BYTE PTR [rbp+0x0],dh
   14000aeb8:	outs   dx,BYTE PTR ds:[rsi]
   14000aeb9:	add    BYTE PTR [rcx+0x0],ah
   14000aebc:	je     0x14000aebe
   14000aebe:	je     0x14000aec0
   14000aec0:	add    BYTE PTR gs:[rsi+0x0],ch
   14000aec4:	add    BYTE PTR fs:[rsi],ch
	...
   14000aecf:	add    BYTE PTR [rcx+0x0],al
   14000aed2:	and    BYTE PTR [rax],al
   14000aed4:	jae    0x14000aed6
   14000aed6:	push   0x74007500
   14000aedb:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000aedf:	add    BYTE PTR [rdi+0x0],dh
   14000aee2:	outs   dx,BYTE PTR ds:[rsi]
   14000aee3:	add    BYTE PTR [rax],ah
   14000aee5:	add    BYTE PTR [rax+0x0],ch
   14000aee8:	(bad)  
   14000aee9:	add    BYTE PTR [rbx+0x0],dh
   14000aeec:	and    BYTE PTR [rax],al
   14000aeee:	(bad)  
   14000aeef:	add    BYTE PTR [rbp+0x0],ah
   14000aef2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000aef6:	and    BYTE PTR [rax],al
   14000aef8:	jb     0x14000aefa
   14000aefa:	add    BYTE PTR gs:[rcx+0x0],dh
   14000aefe:	jne    0x14000af00
   14000af00:	add    BYTE PTR gs:[rbx+0x0],dh
   14000af04:	je     0x14000af06
   14000af06:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000af0b:	add    BYTE PTR [rsi+0x0],ah
   14000af0e:	outs   dx,DWORD PTR ds:[rsi]
   14000af0f:	add    BYTE PTR [rdx+0x0],dh
   14000af12:	and    BYTE PTR [rax],al
   14000af14:	and    eax,0x20007300
   14000af19:	add    BYTE PTR [rbp+0x0],dh
   14000af1c:	outs   dx,BYTE PTR ds:[rsi]
   14000af1d:	add    BYTE PTR [rcx+0x0],ah
   14000af20:	je     0x14000af22
   14000af22:	je     0x14000af24
   14000af24:	add    BYTE PTR gs:[rsi+0x0],ch
   14000af28:	add    BYTE PTR fs:[rsi],ch
   14000af2b:	add    BYTE PTR [rax],al
   14000af2d:	add    BYTE PTR [rax],al
   14000af2f:	add    BYTE PTR [rbp+0x0],dl
   14000af32:	outs   dx,BYTE PTR ds:[rsi]
   14000af33:	add    BYTE PTR [rcx+0x0],ah
   14000af36:	je     0x14000af38
   14000af38:	je     0x14000af3a
   14000af3a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000af3e:	add    BYTE PTR fs:[rax],ah
   14000af41:	add    BYTE PTR [rdx+0x0],dl
   14000af44:	add    BYTE PTR gs:[rbx+0x0],dh
   14000af48:	add    BYTE PTR gs:[rcx+0x0],ah
   14000af4c:	ins    BYTE PTR es:[rdi],dx
   14000af4d:	add    BYTE PTR [rax],ah
   14000af4f:	add    BYTE PTR [rbx+0x0],dh
   14000af52:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000af57:	add    BYTE PTR [rcx+0x0],ch
   14000af5a:	outs   dx,BYTE PTR ds:[rsi]
   14000af5b:	add    BYTE PTR [rdi+0x0],ah
   14000af5e:	and    BYTE PTR [rax],al
   14000af60:	movsxd eax,DWORD PTR [rax]
   14000af62:	push   0x6e006100
   14000af67:	add    BYTE PTR [rdi+0x0],ah
   14000af6a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000af6f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000af73:	add    BYTE PTR [rbp+0x0],ah
   14000af76:	and    BYTE PTR [rax],al
   14000af78:	movsxd eax,DWORD PTR [rax]
   14000af7a:	jne    0x14000af7c
   14000af7c:	jb     0x14000af7e
   14000af7e:	jb     0x14000af80
   14000af80:	add    BYTE PTR gs:[rsi+0x0],ch
   14000af84:	je     0x14000af86
   14000af86:	and    BYTE PTR [rax],al
   14000af88:	jo     0x14000af8a
   14000af8a:	(bad)  
   14000af8b:	add    BYTE PTR [rbx+0x0],dh
   14000af8e:	jae    0x14000af90
   14000af90:	and    BYTE PTR [rax],al
   14000af92:	je     0x14000af94
   14000af94:	outs   dx,DWORD PTR ds:[rsi]
   14000af95:	add    BYTE PTR [rax],ah
   14000af97:	add    BYTE PTR [rip+0x7300],ah        # 0x14001229d
   14000af9d:	add    BYTE PTR [rax],al
   14000af9f:	add    BYTE PTR [rip+0x69007700],ah        # 0x1a90126a5
   14000afa5:	add    BYTE PTR [rsi+0x0],ch
   14000afa8:	add    BYTE PTR fs:[rcx+0x0],ch
   14000afac:	jb     0x14000afae
   14000afae:	and    eax,0x73005c00
   14000afb3:	add    BYTE PTR [rcx+0x0],bh
   14000afb6:	jae    0x14000afb8
   14000afb8:	je     0x14000afba
   14000afba:	add    BYTE PTR gs:[rbp+0x0],ch
   14000afbe:	xor    eax,DWORD PTR [rax]
   14000afc0:	xor    al,BYTE PTR [rax]
   14000afc2:	pop    rsp
   14000afc3:	add    BYTE PTR [rdi+0x0],ch
   14000afc6:	outs   dx,DWORD PTR ds:[rsi]
   14000afc7:	add    BYTE PTR [rdx+0x0],ah
   14000afca:	add    BYTE PTR gs:[rax+rax*1+0x6d],bl
   14000afcf:	add    BYTE PTR [rbx+0x0],dh
   14000afd2:	outs   dx,DWORD PTR ds:[rsi]
   14000afd3:	add    BYTE PTR [rdi+0x0],ch
   14000afd6:	(bad)  
   14000afd7:	add    BYTE PTR [rbp+0x0],ah
   14000afda:	add    BYTE PTR cs:[rbp+0x0],ah
   14000afde:	js     0x14000afe0
   14000afe0:	add    BYTE PTR gs:[rax],al
   14000afe3:	add    BYTE PTR [rax],al
   14000afe5:	add    BYTE PTR [rax],al
   14000afe7:	add    BYTE PTR [rax+rax*1+0x61],cl
   14000afeb:	add    BYTE PTR [rbp+0x0],dh
   14000afee:	outs   dx,BYTE PTR ds:[rsi]
   14000afef:	add    BYTE PTR [rbx+0x0],ah
   14000aff2:	push   0x6e006900
   14000aff7:	add    BYTE PTR [rdi+0x0],ah
   14000affa:	and    BYTE PTR [rax],al
   14000affc:	pop    rbx
   14000affd:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d012303
   14000b003:	add    BYTE PTR [rsi],ch
   14000b005:	add    BYTE PTR [rsi],ch
   14000b007:	add    BYTE PTR [rsi],ch
   14000b009:	add    BYTE PTR [rax],al
   14000b00b:	add    BYTE PTR [rax],al
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rsi+0x0],al
   14000b012:	(bad)  
   14000b013:	add    BYTE PTR [rcx+0x0],ch
   14000b016:	ins    BYTE PTR es:[rdi],dx
   14000b017:	add    BYTE PTR [rbp+0x0],ah
   14000b01a:	add    BYTE PTR fs:[rax],ah
   14000b01d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b021:	add    BYTE PTR [rax],ah
   14000b023:	add    BYTE PTR [rax+rax*1+0x61],ch
   14000b027:	add    BYTE PTR [rbp+0x0],dh
   14000b02a:	outs   dx,BYTE PTR ds:[rsi]
   14000b02b:	add    BYTE PTR [rbx+0x0],ah
   14000b02e:	push   0x5b002000
   14000b033:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d012339
   14000b039:	add    BYTE PTR [rbx],bh
   14000b03b:	add    BYTE PTR [rax],ah
   14000b03d:	add    BYTE PTR [rax+0x0],ch
   14000b040:	jb     0x14000b042
   14000b042:	and    BYTE PTR [rax],al
   14000b044:	cmp    eax,0x30002000
   14000b049:	add    BYTE PTR [rax+0x0],bh
   14000b04c:	and    eax,0x7800
	...
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    BYTE PTR [rsi+0x0],al
   14000b062:	(bad)  
   14000b063:	add    BYTE PTR [rcx+0x0],ch
   14000b066:	ins    BYTE PTR es:[rdi],dx
   14000b067:	add    BYTE PTR [rbp+0x0],ah
   14000b06a:	add    BYTE PTR fs:[rax],ah
   14000b06d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b071:	add    BYTE PTR [rax],ah
   14000b073:	add    BYTE PTR [rbp+0x0],ah
   14000b076:	outs   dx,BYTE PTR ds:[rsi]
   14000b077:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000b07b:	add    BYTE PTR [rdi+0x0],cl
   14000b07e:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000b082:	add    BYTE PTR [r8],r12b
   14000b085:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b089:	add    BYTE PTR [rcx+0x0],ah
   14000b08c:	outs   dx,BYTE PTR ds:[rsi]
   14000b08d:	add    BYTE PTR [rbx+0x0],dh
   14000b090:	imul   eax,DWORD PTR [rax],0x690074
   14000b096:	outs   dx,DWORD PTR ds:[rsi]
   14000b097:	add    BYTE PTR [rsi+0x0],ch
   14000b09a:	and    BYTE PTR [rax],al
   14000b09c:	push   rbp
   14000b09d:	add    BYTE PTR [rax+0x0],bl
   14000b0a0:	cmp    eax,DWORD PTR [rax]
   14000b0a2:	and    BYTE PTR [rax],al
   14000b0a4:	push   0x20007200
   14000b0a9:	add    BYTE PTR [rip+0x30002000],bh        # 0x17000d0af
   14000b0af:	add    BYTE PTR [rax+0x0],bh
   14000b0b2:	and    eax,0x7800
	...
   14000b0bf:	add    BYTE PTR [rdi+0x0],cl
   14000b0c2:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000b0c6:	add    BYTE PTR [r8],r12b
   14000b0c9:	add    BYTE PTR [rbp+0x0],dl
   14000b0cc:	rex.WB add BYTE PTR [r8],spl
   14000b0cf:	add    BYTE PTR [rsi+0x0],ah
   14000b0d2:	(bad)  
   14000b0d3:	add    BYTE PTR [rcx+0x0],ch
   14000b0d6:	ins    BYTE PTR es:[rdi],dx
   14000b0d7:	add    BYTE PTR [rbp+0x0],ah
   14000b0da:	add    BYTE PTR fs:[rax],ah
   14000b0dd:	add    BYTE PTR [rdi+0x0],dh
   14000b0e0:	imul   eax,DWORD PTR [rax],0x680074
   14000b0e6:	and    BYTE PTR [rax],al
   14000b0e8:	add    BYTE PTR gs:[rax+0x0],bh
   14000b0ec:	imul   eax,DWORD PTR [rax],0x200074
   14000b0f2:	movsxd eax,DWORD PTR [rax]
   14000b0f4:	outs   dx,DWORD PTR ds:[rsi]
   14000b0f5:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b0f9:	add    BYTE PTR [rax],ah
   14000b0fb:	add    BYTE PTR [rbx+0x0],bl
   14000b0fe:	xor    BYTE PTR [rax],al
   14000b100:	js     0x14000b102
   14000b102:	and    eax,0x5d007800
	...
   14000b10f:	add    BYTE PTR [rbx+0x0],al
   14000b112:	outs   dx,DWORD PTR ds:[rsi]
   14000b113:	add    BYTE PTR [rsi+0x0],ch
   14000b116:	jbe    0x14000b118
   14000b118:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b11c:	je     0x14000b11e
   14000b11e:	imul   eax,DWORD PTR [rax],0x67006e
   14000b124:	and    BYTE PTR [rax],al
   14000b126:	add    BYTE PTR gs:[rax+0x0],bh
   14000b12a:	imul   eax,DWORD PTR [rax],0x200074
   14000b130:	movsxd eax,DWORD PTR [rax]
   14000b132:	outs   dx,DWORD PTR ds:[rsi]
   14000b133:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b137:	add    BYTE PTR [rax],ah
   14000b139:	add    BYTE PTR [rax],dh
   14000b13b:	add    BYTE PTR [rax+0x0],bh
   14000b13e:	and    eax,0x38003000
   14000b143:	add    BYTE PTR [rax+0x0],bl
   14000b146:	and    BYTE PTR [rax],al
   14000b148:	je     0x14000b14a
   14000b14a:	outs   dx,DWORD PTR ds:[rsi]
   14000b14b:	add    BYTE PTR [rax],ah
   14000b14d:	add    BYTE PTR [rbp+0x0],al
   14000b150:	pop    rdi
   14000b151:	add    BYTE PTR [rsi+0x0],al
   14000b154:	add    BYTE PTR [r9+0x0],cl
   14000b158:	rex.WR add BYTE PTR [rax],r12b
   14000b15b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b15f:	add    BYTE PTR [rax],ah
   14000b161:	add    BYTE PTR [rbp+0x0],ah
   14000b164:	outs   dx,BYTE PTR ds:[rsi]
   14000b165:	add    BYTE PTR [rbx+0x0],dh
   14000b168:	jne    0x14000b16a
   14000b16a:	jb     0x14000b16c
   14000b16c:	add    BYTE PTR gs:[rax],ah
   14000b16f:	add    BYTE PTR [rsi+0x0],ah
   14000b172:	(bad)  
   14000b173:	add    BYTE PTR [rcx+0x0],ch
   14000b176:	ins    BYTE PTR es:[rdi],dx
   14000b177:	add    BYTE PTR [rbp+0x0],dh
   14000b17a:	jb     0x14000b17c
   14000b17c:	add    BYTE PTR gs:[rax],ah
   14000b17f:	add    BYTE PTR [rax+0x0],dh
   14000b182:	(bad)  
   14000b183:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000b187:	add    BYTE PTR [rsi],ch
   14000b189:	add    BYTE PTR [rax],al
   14000b18b:	add    BYTE PTR [rax],al
   14000b18d:	add    BYTE PTR [rax],al
   14000b18f:	add    BYTE PTR [rdi+0x0],cl
   14000b192:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000b196:	add    BYTE PTR [r8],r12b
   14000b199:	add    BYTE PTR [rbp+0x0],dl
   14000b19c:	rex.WB add BYTE PTR [r8],spl
   14000b19f:	add    BYTE PTR [rdx+0x0],dh
   14000b1a2:	add    BYTE PTR gs:[rcx+0x0],dh
   14000b1a6:	jne    0x14000b1a8
   14000b1a8:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b1ac:	je     0x14000b1ae
   14000b1ae:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000b1b3:	add    BYTE PTR [rcx+0x0],ah
   14000b1b6:	and    BYTE PTR [rax],al
   14000b1b8:	jae    0x14000b1ba
   14000b1ba:	ja     0x14000b1bc
   14000b1bc:	imul   eax,DWORD PTR [rax],0x630074
   14000b1c2:	push   0x69002000
   14000b1c7:	add    BYTE PTR [rsi+0x0],ch
   14000b1ca:	je     0x14000b1cc
   14000b1cc:	outs   dx,DWORD PTR ds:[rsi]
   14000b1cd:	add    BYTE PTR [rax],ah
   14000b1cf:	add    BYTE PTR [rcx+0x0],ah
   14000b1d2:	jne    0x14000b1d4
   14000b1d4:	add    BYTE PTR fs:[rcx+0x0],ch
   14000b1d8:	je     0x14000b1da
   14000b1da:	and    BYTE PTR [rax],al
   14000b1dc:	ins    DWORD PTR es:[rdi],dx
   14000b1dd:	add    BYTE PTR [rdi+0x0],ch
   14000b1e0:	add    BYTE PTR fs:[rbp+0x0],ah
   14000b1e4:	cmp    eax,DWORD PTR [rax]
   14000b1e6:	and    BYTE PTR [rax],al
   14000b1e8:	jb     0x14000b1ea
   14000b1ea:	add    BYTE PTR gs:[rdx+0x0],ah
   14000b1ee:	outs   dx,DWORD PTR ds:[rsi]
   14000b1ef:	add    BYTE PTR [rdi+0x0],ch
   14000b1f2:	je     0x14000b1f4
   14000b1f4:	and    BYTE PTR [rax],al
   14000b1f6:	jb     0x14000b1f8
   14000b1f8:	add    BYTE PTR gs:[rcx+0x0],dh
   14000b1fc:	jne    0x14000b1fe
   14000b1fe:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b202:	je     0x14000b204
   14000b204:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000b209:	add    BYTE PTR [rax],al
   14000b20b:	add    BYTE PTR [rax],al
   14000b20d:	add    BYTE PTR [rax],al
   14000b20f:	add    BYTE PTR [rdi+0x0],cl
   14000b212:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000b216:	add    BYTE PTR [r8],r12b
   14000b219:	add    BYTE PTR [rbp+0x0],dl
   14000b21c:	rex.WB add BYTE PTR [r8],spl
   14000b21f:	add    BYTE PTR [rdx+0x0],dh
   14000b222:	add    BYTE PTR gs:[rcx+0x0],dh
   14000b226:	jne    0x14000b228
   14000b228:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b22c:	je     0x14000b22e
   14000b22e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000b233:	add    BYTE PTR [rdx+0x0],dh
   14000b236:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b23a:	je     0x14000b23c
   14000b23c:	(bad)  
   14000b23d:	add    BYTE PTR [rdx+0x0],dh
   14000b240:	je     0x14000b242
	...
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14000b254:	imul   eax,DWORD PTR [rax],0x65006c
   14000b25a:	add    BYTE PTR fs:[rax],ah
   14000b25d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b261:	add    BYTE PTR [rax],ah
   14000b263:	add    BYTE PTR [rbp+0x0],ah
   14000b266:	js     0x14000b268
   14000b268:	jo     0x14000b26a
   14000b26a:	(bad)  
   14000b26b:	add    BYTE PTR [rsi+0x0],ch
   14000b26e:	add    BYTE PTR fs:[rax],ah
   14000b271:	add    BYTE PTR [rbp+0x0],ah
   14000b274:	outs   dx,BYTE PTR ds:[rsi]
   14000b275:	add    BYTE PTR [rsi+0x0],dh
   14000b278:	imul   eax,DWORD PTR [rax],0x6f0072
   14000b27e:	outs   dx,BYTE PTR ds:[rsi]
   14000b27f:	add    BYTE PTR [rbp+0x0],ch
   14000b282:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b286:	je     0x14000b288
   14000b288:	and    BYTE PTR [rax],al
   14000b28a:	jbe    0x14000b28c
   14000b28c:	(bad)  
   14000b28d:	add    BYTE PTR [rdx+0x0],dh
   14000b290:	imul   eax,DWORD PTR [rax],0x620061
   14000b296:	ins    BYTE PTR es:[rdi],dx
   14000b297:	add    BYTE PTR [rbp+0x0],ah
   14000b29a:	jae    0x14000b29c
   14000b29c:	and    BYTE PTR [rax],al
   14000b29e:	imul   eax,DWORD PTR [rax],0x20006e
   14000b2a4:	pop    rbx
   14000b2a5:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d0125ab
   14000b2ab:	add    BYTE PTR [rbx],bh
   14000b2ad:	add    BYTE PTR [rax],ah
   14000b2af:	add    BYTE PTR [rax+0x0],ch
   14000b2b2:	jb     0x14000b2b4
   14000b2b4:	and    BYTE PTR [rax],al
   14000b2b6:	cmp    eax,0x30002000
   14000b2bb:	add    BYTE PTR [rax+0x0],bh
   14000b2be:	and    eax,0x7800
	...
   14000b2cf:	add    BYTE PTR [rax+0x0],dl
   14000b2d2:	(bad)  
   14000b2d3:	add    BYTE PTR [rdx+0x0],dh
   14000b2d6:	jae    0x14000b2d8
   14000b2d8:	imul   eax,DWORD PTR [rax],0x67006e
   14000b2de:	and    BYTE PTR [rax],al
   14000b2e0:	je     0x14000b2e2
   14000b2e2:	push   0x20006500
   14000b2e7:	add    BYTE PTR [rsi+0x0],ah
   14000b2ea:	outs   dx,DWORD PTR ds:[rsi]
   14000b2eb:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000b2ef:	add    BYTE PTR [rdi+0x0],ch
   14000b2f2:	ja     0x14000b2f4
   14000b2f4:	imul   eax,DWORD PTR [rax],0x67006e
   14000b2fa:	and    BYTE PTR [rax],al
   14000b2fc:	movsxd eax,DWORD PTR [rax]
   14000b2fe:	outs   dx,DWORD PTR ds:[rsi]
   14000b2ff:	add    BYTE PTR [rbp+0x0],ch
   14000b302:	ins    DWORD PTR es:[rdi],dx
   14000b303:	add    BYTE PTR [rcx+0x0],ah
   14000b306:	outs   dx,BYTE PTR ds:[rsi]
   14000b307:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000b30b:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000b30f:	add    BYTE PTR [rsi+0x0],ch
   14000b312:	add    BYTE PTR gs:[rdx],bh
   14000b315:	add    BYTE PTR [rax],ah
   14000b317:	add    BYTE PTR [rbx+0x0],bl
   14000b31a:	and    eax,0x5d007300
	...
   14000b32f:	add    BYTE PTR [rbp+0x0],al
   14000b332:	js     0x14000b334
   14000b334:	jo     0x14000b336
   14000b336:	ins    BYTE PTR es:[rdi],dx
   14000b337:	add    BYTE PTR [rcx+0x0],ch
   14000b33a:	movsxd eax,DWORD PTR [rax]
   14000b33c:	imul   eax,DWORD PTR [rax],0x200074
   14000b342:	jne    0x14000b344
   14000b344:	outs   dx,BYTE PTR ds:[rsi]
   14000b345:	add    BYTE PTR [rcx+0x0],ah
   14000b348:	je     0x14000b34a
   14000b34a:	je     0x14000b34c
   14000b34c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b350:	add    BYTE PTR fs:[rax],ah
   14000b353:	add    BYTE PTR [rdi+0x0],dh
   14000b356:	(bad)  
   14000b357:	add    BYTE PTR [rbx+0x0],dh
   14000b35a:	and    BYTE PTR [rax],al
   14000b35c:	jb     0x14000b35e
   14000b35e:	add    BYTE PTR gs:[rcx+0x0],dh
   14000b362:	jne    0x14000b364
   14000b364:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b368:	je     0x14000b36a
   14000b36a:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
   14000b36f:	add    BYTE PTR [rax],ah
   14000b371:	add    BYTE PTR [rbx+0x0],bl
   14000b374:	and    eax,0x5d007300
   14000b379:	add    BYTE PTR [rax],al
   14000b37b:	add    BYTE PTR [rax],al
   14000b37d:	add    BYTE PTR [rax],al
   14000b37f:	add    BYTE PTR [rdi],ch
   14000b381:	add    BYTE PTR [rcx+0x0],dh
   14000b384:	jne    0x14000b386
   14000b386:	imul   eax,DWORD PTR [rax],0x740065
   14000b38c:	add    BYTE PTR [rax],al
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	(bad)  
   14000b391:	add    BYTE PTR [rbx+0x0],dh
   14000b394:	jns    0x14000b396
   14000b396:	jae    0x14000b398
   14000b398:	je     0x14000b39a
   14000b39a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	outs   dx,DWORD PTR ds:[rsi]
   14000b3a1:	add    BYTE PTR [rdi+0x0],ch
   14000b3a4:	(bad)  
   14000b3a5:	add    BYTE PTR [rbp+0x0],ah
   14000b3a8:	ins    BYTE PTR es:[rdi],dx
   14000b3a9:	add    BYTE PTR [rax+rax*1+0x72],ah
   14000b3ad:	add    BYTE PTR [rsi],ch
   14000b3af:	add    BYTE PTR [rbp+0x0],ah
   14000b3b2:	js     0x14000b3b4
   14000b3b4:	add    BYTE PTR gs:[rax],ah
   14000b3b7:	add    BYTE PTR [rbp+0x0],ch
   14000b3ba:	jne    0x14000b3bc
   14000b3bc:	jae    0x14000b3be
   14000b3be:	je     0x14000b3c0
   14000b3c0:	and    BYTE PTR [rax],al
   14000b3c2:	(bad)  
   14000b3c3:	add    BYTE PTR [rbp+0x0],ah
   14000b3c6:	and    BYTE PTR [rax],al
   14000b3c8:	movsxd eax,DWORD PTR [rax]
   14000b3ca:	(bad)  
   14000b3cb:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000b3cf:	add    BYTE PTR [rbp+0x0],ah
   14000b3d2:	add    BYTE PTR fs:[rax],ah
   14000b3d5:	add    BYTE PTR [rdi+0x0],dh
   14000b3d8:	imul   eax,DWORD PTR [rax],0x680074
   14000b3de:	and    BYTE PTR [rax],al
   14000b3e0:	(bad)  
   14000b3e1:	add    BYTE PTR [rbx+0x0],dh
   14000b3e4:	jns    0x14000b3e6
   14000b3e6:	jae    0x14000b3e8
   14000b3e8:	je     0x14000b3ea
   14000b3ea:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	push   rax
   14000b3f1:	add    BYTE PTR [rcx+0x0],ah
   14000b3f4:	jb     0x14000b3f6
   14000b3f6:	jae    0x14000b3f8
   14000b3f8:	imul   eax,DWORD PTR [rax],0x67006e
   14000b3fe:	and    BYTE PTR [rax],al
   14000b400:	je     0x14000b402
   14000b402:	push   0x20006500
   14000b407:	add    BYTE PTR [rbx+0x0],ah
   14000b40a:	outs   dx,DWORD PTR ds:[rsi]
   14000b40b:	add    BYTE PTR [rbp+0x0],ch
   14000b40e:	ins    DWORD PTR es:[rdi],dx
   14000b40f:	add    BYTE PTR [rcx+0x0],ah
   14000b412:	outs   dx,BYTE PTR ds:[rsi]
   14000b413:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000b417:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000b41b:	add    BYTE PTR [rsi+0x0],ch
   14000b41e:	add    BYTE PTR gs:[rax],ah
   14000b421:	add    BYTE PTR [rsi+0x0],ah
   14000b424:	(bad)  
   14000b425:	add    BYTE PTR [rcx+0x0],ch
   14000b428:	ins    BYTE PTR es:[rdi],dx
   14000b429:	add    BYTE PTR [rbp+0x0],ah
   14000b42c:	add    BYTE PTR fs:[rsi],ch
   14000b42f:	add    BYTE PTR [rax],ah
   14000b431:	add    BYTE PTR [rax],ah
   14000b433:	add    BYTE PTR [rbx+0x0],dl
   14000b436:	je     0x14000b438
   14000b438:	(bad)  
   14000b439:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000b43d:	add    BYTE PTR [rbx+0x0],dh
   14000b440:	cmp    al,BYTE PTR [rax]
   14000b442:	and    BYTE PTR [rax],al
   14000b444:	pop    rbx
   14000b445:	add    BYTE PTR [rax],dh
   14000b447:	add    BYTE PTR [rax+0x0],bh
   14000b44a:	and    eax,0x5d007800
	...
   14000b457:	add    BYTE PTR [rcx+0x0],ah
   14000b45a:	jne    0x14000b45c
   14000b45c:	add    BYTE PTR fs:[rcx+0x0],ch
   14000b460:	je     0x14000b462
   14000b462:	push   rbx
   14000b463:	add    BYTE PTR [rcx+0x0],bh
   14000b466:	jae    0x14000b468
   14000b468:	je     0x14000b46a
   14000b46a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	outs   dx,DWORD PTR ds:[rsi]
   14000b471:	add    BYTE PTR [rdi+0x0],ch
   14000b474:	(bad)  
   14000b475:	add    BYTE PTR [rbp+0x0],ah
   14000b478:	push   rbx
   14000b479:	add    BYTE PTR [rcx+0x0],bh
   14000b47c:	jae    0x14000b47e
   14000b47e:	je     0x14000b480
   14000b480:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b484:	add    BYTE PTR [rax],al
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000b48c:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   14000b491:	add    BYTE PTR [rax],al
   14000b493:	add    BYTE PTR [rax],al
   14000b495:	add    BYTE PTR [rax],al
   14000b497:	add    BYTE PTR [rsi],dl
   14000b499:	add    BYTE PTR [rax],al
   14000b49b:	adc    eax,DWORD PTR [rax]
   14000b49d:	add    DWORD PTR [rdx],ebx
   14000b49f:	jae    0x14000b4f1
   14000b4a1:	rex.WRXB iretq 
   14000b4a3:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   14000b4a9:	call   0xfa76b977
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	push   rdi
   14000b4b1:	fs jae 0x14000b507
   14000b4b4:	gs je  0x14000b52c
   14000b4b7:	jo     0x14000b505
   14000b4b9:	outs   dx,DWORD PTR ds:[rsi]
   14000b4ba:	rex.WB outs dx,BYTE PTR ds:[esi]
   14000b4bd:	imul   esi,DWORD PTR [rax+rax*1+0x57],0x65537364
   14000b4c5:	je     0x14000b53c
   14000b4c7:	jo     0x14000b515
   14000b4c9:	outs   dx,DWORD PTR ds:[rsi]
   14000b4ca:	addr32 rex.R
   14000b4cc:	gs jae 0x14000b543
   14000b4cf:	jb     0x14000b540
   14000b4d1:	jns    0x14000b4d3
   14000b4d3:	add    BYTE PTR [rax],al
   14000b4d5:	add    BYTE PTR [rax],al
   14000b4d7:	add    BYTE PTR [rdi+0x64],dl
   14000b4da:	jae    0x14000b52f
   14000b4dc:	gs je  0x14000b554
   14000b4df:	jo     0x14000b52d
   14000b4e1:	outs   dx,DWORD PTR ds:[rsi]
   14000b4e2:	addr32 rex.WRB
   14000b4e4:	gs jae 0x14000b55a
   14000b4e7:	(bad)  
   14000b4e8:	add    BYTE PTR gs:[r8d],al
   14000b4ed:	add    BYTE PTR [rax],al
   14000b4ef:	add    BYTE PTR [rdi+0x64],dl
   14000b4f2:	jae    0x14000b547
   14000b4f4:	gs je  0x14000b56c
   14000b4f7:	jo     0x14000b545
   14000b4f9:	outs   dx,DWORD PTR ds:[rsi]
   14000b4fa:	addr32 rex.WRB
   14000b4fc:	gs jae 0x14000b572
   14000b4ff:	(bad)  
   14000b500:	addr32 gs push rdi
   14000b503:	add    BYTE PTR [rax],al
   14000b505:	add    BYTE PTR [rax],al
   14000b507:	add    BYTE PTR [rbx+0x6f],al
   14000b50a:	outs   dx,BYTE PTR ds:[rsi]
   14000b50b:	jae    0x14000b581
   14000b50d:	jb     0x14000b584
   14000b50f:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14000b513:	jb     0x14000b589
   14000b515:	imul   esp,DWORD PTR [rcx+0x6c],0x5667734d
   14000b51c:	add    BYTE PTR [r8],al
   14000b51f:	add    BYTE PTR [rbx+0x6f],al
   14000b522:	outs   dx,BYTE PTR ds:[rsi]
   14000b523:	jae    0x14000b599
   14000b525:	jb     0x14000b59c
   14000b527:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14000b52b:	jb     0x14000b5a1
   14000b52d:	imul   esp,DWORD PTR [rcx+0x6c],0x5667734d
   14000b534:	push   rdi
   14000b535:	add    BYTE PTR [rax],al
   14000b537:	add    BYTE PTR [rbx+0x75],al
   14000b53a:	jb     0x14000b5ae
   14000b53c:	outs   dx,BYTE PTR gs:[rsi]
   14000b53e:	je     0x14000b589
   14000b540:	push   rax
   14000b541:	add    BYTE PTR [rax],al
   14000b543:	add    BYTE PTR [rax],al
   14000b545:	add    BYTE PTR [rax],al
   14000b547:	add    BYTE PTR [rip+0x69007700],ah        # 0x1a9012c4d
   14000b54d:	add    BYTE PTR [rsi+0x0],ch
   14000b550:	add    BYTE PTR fs:[rcx+0x0],ch
   14000b554:	jb     0x14000b556
   14000b556:	and    eax,0x50005c00
   14000b55b:	add    BYTE PTR [rcx+0x0],ah
   14000b55e:	outs   dx,BYTE PTR ds:[rsi]
   14000b55f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000b563:	add    BYTE PTR [rbp+0x0],ah
   14000b566:	jb     0x14000b568
   14000b568:	pop    rsp
   14000b569:	add    BYTE PTR [rbp+0x0],dl
   14000b56c:	outs   dx,BYTE PTR ds:[rsi]
   14000b56d:	add    BYTE PTR [rcx+0x0],ah
   14000b570:	je     0x14000b572
   14000b572:	je     0x14000b574
   14000b574:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b578:	add    BYTE PTR fs:[rdi+0x0],al
   14000b57c:	rex.XB add BYTE PTR [r8],al
   14000b57f:	add    BYTE PTR [rdi+0x0],dh
   14000b582:	add    BYTE PTR fs:[rbx+0x0],dh
   14000b586:	movsxd eax,DWORD PTR [rax]
   14000b588:	outs   dx,DWORD PTR ds:[rsi]
   14000b589:	add    BYTE PTR [rdx+0x0],dh
   14000b58c:	add    BYTE PTR gs:[rsi],ch
   14000b58f:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000b593:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000b59f:	add    BYTE PTR [rax+rax*1],bh
   14000b5a2:	jne    0x14000b5a4
   14000b5a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b5a5:	add    BYTE PTR [rbx+0x0],ch
   14000b5a8:	outs   dx,BYTE PTR ds:[rsi]
   14000b5a9:	add    BYTE PTR [rdi+0x0],ch
   14000b5ac:	ja     0x14000b5ae
   14000b5ae:	outs   dx,BYTE PTR ds:[rsi]
   14000b5af:	add    BYTE PTR [rsi],bh
   14000b5b1:	add    BYTE PTR [rax],al
   14000b5b3:	add    BYTE PTR [rax],al
   14000b5b5:	add    BYTE PTR [rax],al
   14000b5b7:	add    BYTE PTR [rbx+0x25],bl
   14000b5ba:	push   rbx
   14000b5bb:	pop    rbp
   14000b5bc:	and    BYTE PTR [rip+0x550053],ah        # 0x14055b615
   14000b5c2:	outs   dx,BYTE PTR ds:[rsi]
   14000b5c3:	add    BYTE PTR [rcx+0x0],ah
   14000b5c6:	je     0x14000b5c8
   14000b5c8:	je     0x14000b5ca
   14000b5ca:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b5ce:	add    BYTE PTR fs:[rax+rax*1+0x6f],cl
   14000b5d3:	add    BYTE PTR [rdi+0x0],ah
   14000b5d6:	push   rdi
   14000b5d7:	add    BYTE PTR [rsi+0x0],dl
   14000b5da:	add    BYTE PTR [rax],al
   14000b5dc:	add    BYTE PTR [rax],al
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	(bad)  
   14000b5e1:	add    BYTE PTR [rcx+0x0],ah
   14000b5e4:	jae    0x14000b5e6
   14000b5e6:	add    BYTE PTR gs:[rax+rax*1+0x6e],bl
   14000b5eb:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000b5ef:	add    BYTE PTR [rbp+0x0],ah
   14000b5f2:	je     0x14000b5f4
   14000b5f4:	jne    0x14000b5f6
   14000b5f6:	jo     0x14000b5f8
   14000b5f8:	pop    rsp
   14000b5f9:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000b5fd:	add    BYTE PTR [rdx+0x0],ah
   14000b600:	pop    rsp
   14000b601:	add    BYTE PTR [rbp+0x0],dh
   14000b604:	outs   dx,BYTE PTR ds:[rsi]
   14000b605:	add    BYTE PTR [rcx+0x0],ah
   14000b608:	je     0x14000b60a
   14000b60a:	je     0x14000b60c
   14000b60c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b610:	add    BYTE PTR fs:[rax+rax*1+0x6f],ch
   14000b615:	add    BYTE PTR [rdi+0x0],ah
   14000b618:	pop    rsp
   14000b619:	add    BYTE PTR [rbx+0x0],dh
   14000b61c:	jb     0x14000b61e
   14000b61e:	movsxd eax,DWORD PTR [rax]
   14000b620:	pop    rsp
   14000b621:	add    BYTE PTR [rbp+0x0],dh
   14000b624:	outs   dx,BYTE PTR ds:[rsi]
   14000b625:	add    BYTE PTR [rcx+0x0],ah
   14000b628:	je     0x14000b62a
   14000b62a:	je     0x14000b62c
   14000b62c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b630:	add    BYTE PTR fs:[rax+rax*1+0x6f],ch
   14000b635:	add    BYTE PTR [rdi+0x0],ah
   14000b638:	add    BYTE PTR cs:[rbx+0x0],ah
   14000b63c:	jo     0x14000b63e
   14000b63e:	jo     0x14000b640
   14000b640:	add    BYTE PTR [rax],al
   14000b642:	add    BYTE PTR [rax],al
   14000b644:	add    BYTE PTR [rax],r8b
   14000b647:	add    BYTE PTR [rbp+0x0],dh
   14000b64a:	jae    0x14000b64c
   14000b64c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b650:	xor    eax,DWORD PTR [rax]
   14000b652:	xor    al,BYTE PTR [rax]
   14000b654:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000b659:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b65d:	add    BYTE PTR [rax],al
   14000b65f:	add    BYTE PTR [rdi+0x65],al
   14000b662:	je     0x14000b6aa
   14000b664:	outs   dx,DWORD PTR ds:[rsi]
   14000b665:	jb     0x14000b6cc
   14000b667:	addr32 jb 0x14000b6d9
   14000b66a:	jne    0x14000b6da
   14000b66c:	fs push rdi
   14000b66e:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000b675:	add    BYTE PTR [rax],al
   14000b677:	add    BYTE PTR [rbp+0x65],cl
   14000b67a:	jae    0x14000b6ef
   14000b67c:	(bad)  
   14000b67d:	rex.X outs dx,DWORD PTR gs:[esi]
   14000b681:	js     0x14000b6da
   14000b683:	add    BYTE PTR [rax],al
   14000b685:	add    BYTE PTR [rax],al
   14000b687:	add    BYTE PTR [rsi+0x0],ch
   14000b68a:	je     0x14000b68c
   14000b68c:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   14000b691:	add    BYTE PTR [rsi],ch
   14000b693:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000b697:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b69b:	add    BYTE PTR [rax],al
   14000b69d:	add    BYTE PTR [rax],al
   14000b69f:	add    BYTE PTR [rbx+0x0],ch
   14000b6a2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b6a6:	outs   dx,BYTE PTR ds:[rsi]
   14000b6a7:	add    BYTE PTR [rbp+0x0],ah
   14000b6aa:	ins    BYTE PTR es:[rdi],dx
   14000b6ab:	add    BYTE PTR [rbx],dh
   14000b6ad:	add    BYTE PTR [rdx],dh
   14000b6af:	add    BYTE PTR [rsi],ch
   14000b6b1:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000b6b5:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b6b9:	add    BYTE PTR [rax],al
   14000b6bb:	add    BYTE PTR [rax],al
   14000b6bd:	add    BYTE PTR [rax],al
   14000b6bf:	add    BYTE PTR [rsi+0x69],al
   14000b6c2:	outs   dx,BYTE PTR ds:[rsi]
   14000b6c3:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   14000b6cc:	gs rex.WRX (bad) 
   14000b6cf:	ins    DWORD PTR es:[rdi],dx
   14000b6d0:	gs push rdi
   14000b6d2:	add    BYTE PTR [rax],al
   14000b6d4:	add    BYTE PTR [rax],al
   14000b6d6:	add    BYTE PTR [rax],al
   14000b6d8:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x7478654e
   14000b6e0:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x57656d61
   14000b6e9:	add    BYTE PTR [rax],al
   14000b6eb:	add    BYTE PTR [rax],al
   14000b6ed:	add    BYTE PTR [rax],al
   14000b6ef:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b6f3:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b6f7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b6fb:	add    BYTE PTR [rsi+0x0],al
   14000b6fe:	imul   eax,DWORD PTR [rax],0x65006c
   14000b704:	add    BYTE PTR [r8+0x0],r15b
   14000b708:	cmp    al,BYTE PTR [rax]
   14000b70a:	and    BYTE PTR [rax],al
   14000b70c:	push   rbp
   14000b70d:	add    BYTE PTR [rsi+0x0],ch
   14000b710:	(bad)  
   14000b711:	add    BYTE PTR [rdx+0x0],ah
   14000b714:	ins    BYTE PTR es:[rdi],dx
   14000b715:	add    BYTE PTR [rbp+0x0],ah
   14000b718:	and    BYTE PTR [rax],al
   14000b71a:	je     0x14000b71c
   14000b71c:	outs   dx,DWORD PTR ds:[rsi]
   14000b71d:	add    BYTE PTR [rax],ah
   14000b71f:	add    BYTE PTR [rcx+0x0],ah
   14000b722:	ins    BYTE PTR es:[rdi],dx
   14000b723:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000b727:	add    BYTE PTR [rbx+0x0],ah
   14000b72a:	(bad)  
   14000b72b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b72f:	add    BYTE PTR [rax],ah
   14000b731:	add    BYTE PTR [rbp+0x0],ch
   14000b734:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b738:	outs   dx,DWORD PTR ds:[rsi]
   14000b739:	add    BYTE PTR [rdx+0x0],dh
   14000b73c:	jns    0x14000b73e
   14000b73e:	and    BYTE PTR [rax],al
   14000b740:	data16 add BYTE PTR [rdi+0x0],ch
   14000b744:	jb     0x14000b746
   14000b746:	and    BYTE PTR [rax],al
   14000b748:	je     0x14000b74a
   14000b74a:	push   0x20006500
   14000b74f:	add    BYTE PTR [rsi+0x0],ah
   14000b752:	jne    0x14000b754
   14000b754:	ins    BYTE PTR es:[rdi],dx
   14000b755:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b759:	add    BYTE PTR [rax+0x0],dh
   14000b75c:	(bad)  
   14000b75d:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000b761:	add    BYTE PTR [rax],ah
   14000b763:	add    BYTE PTR [rsi+0x0],ch
   14000b766:	(bad)  
   14000b767:	add    BYTE PTR [rbp+0x0],ch
   14000b76a:	add    BYTE PTR gs:[rbx],bh
   14000b76d:	add    BYTE PTR [rax],ah
   14000b76f:	add    BYTE PTR [rdi+0x0],al
   14000b772:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000b776:	and    BYTE PTR [rax],al
   14000b778:	cmp    eax,0x30002000
   14000b77d:	add    BYTE PTR [rax+0x0],bh
   14000b780:	and    eax,0x7800
	...
   14000b78d:	add    BYTE PTR [rax],al
   14000b78f:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b793:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b797:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b79b:	add    BYTE PTR [rsi+0x0],al
   14000b79e:	imul   eax,DWORD PTR [rax],0x65006c
   14000b7a4:	add    BYTE PTR [r8+0x0],r15b
   14000b7a8:	cmp    al,BYTE PTR [rax]
   14000b7aa:	and    BYTE PTR [rax],al
   14000b7ac:	push   rbp
   14000b7ad:	add    BYTE PTR [rsi+0x0],ch
   14000b7b0:	(bad)  
   14000b7b1:	add    BYTE PTR [rdx+0x0],ah
   14000b7b4:	ins    BYTE PTR es:[rdi],dx
   14000b7b5:	add    BYTE PTR [rbp+0x0],ah
   14000b7b8:	and    BYTE PTR [rax],al
   14000b7ba:	je     0x14000b7bc
   14000b7bc:	outs   dx,DWORD PTR ds:[rsi]
   14000b7bd:	add    BYTE PTR [rax],ah
   14000b7bf:	add    BYTE PTR [rdi+0x0],ah
   14000b7c2:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14000b7c7:	add    BYTE PTR [rsi+0x0],ah
   14000b7ca:	jne    0x14000b7cc
   14000b7cc:	ins    BYTE PTR es:[rdi],dx
   14000b7cd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b7d1:	add    BYTE PTR [rax+0x0],dh
   14000b7d4:	(bad)  
   14000b7d5:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000b7d9:	add    BYTE PTR [rax],ah
   14000b7db:	add    BYTE PTR [rsi+0x0],ch
   14000b7de:	(bad)  
   14000b7df:	add    BYTE PTR [rbp+0x0],ch
   14000b7e2:	add    BYTE PTR gs:[rax],ah
   14000b7e5:	add    BYTE PTR [rdi+0x0],ch
   14000b7e8:	outs   dx,BYTE PTR ds:[rsi]
   14000b7e9:	add    BYTE PTR [rax],ah
   14000b7eb:	add    BYTE PTR [rbx+0x0],bl
   14000b7ee:	and    eax,0x5d007300
   14000b7f3:	add    BYTE PTR [rbx],bh
   14000b7f5:	add    BYTE PTR [rax],ah
   14000b7f7:	add    BYTE PTR [rdi+0x0],al
   14000b7fa:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000b7fe:	and    BYTE PTR [rax],al
   14000b800:	cmp    eax,0x30002000
   14000b805:	add    BYTE PTR [rax+0x0],bh
   14000b808:	and    eax,0x7800
   14000b80d:	add    BYTE PTR [rax],al
   14000b80f:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b813:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b817:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b81b:	add    BYTE PTR [rsi+0x0],al
   14000b81e:	imul   eax,DWORD PTR [rax],0x65006c
   14000b824:	add    BYTE PTR [r8+0x0],r15b
   14000b828:	cmp    al,BYTE PTR [rax]
   14000b82a:	and    BYTE PTR [rax],al
   14000b82c:	push   0x72006100
   14000b831:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000b835:	add    BYTE PTR [rcx+0x0],ch
   14000b838:	outs   dx,BYTE PTR ds:[rsi]
   14000b839:	add    BYTE PTR [rbx+0x0],ch
   14000b83c:	and    BYTE PTR [rax],al
   14000b83e:	add    BYTE PTR [ecx+0x0],ch
   14000b842:	jbe    0x14000b844
   14000b844:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b848:	and    BYTE PTR [rax],al
   14000b84a:	je     0x14000b84c
   14000b84c:	outs   dx,DWORD PTR ds:[rsi]
   14000b84d:	add    BYTE PTR [rax],ah
   14000b84f:	add    BYTE PTR [rbp+0x0],dh
   14000b852:	jae    0x14000b854
   14000b854:	and    BYTE PTR [rax],al
   14000b856:	imul   eax,DWORD PTR [rax],0x3a0073
   14000b85c:	and    BYTE PTR [rax],al
   14000b85e:	and    eax,0x7300
	...
   14000b86f:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b873:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b877:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b87b:	add    BYTE PTR [rsi+0x0],al
   14000b87e:	imul   eax,DWORD PTR [rax],0x65006c
   14000b884:	add    BYTE PTR [r8+0x0],r15b
   14000b888:	cmp    al,BYTE PTR [rax]
   14000b88a:	and    BYTE PTR [rax],al
   14000b88c:	push   rsp
   14000b88d:	add    BYTE PTR [rdx+0x0],dh
   14000b890:	jns    0x14000b892
   14000b892:	imul   eax,DWORD PTR [rax],0x67006e
   14000b898:	and    BYTE PTR [rax],al
   14000b89a:	je     0x14000b89c
   14000b89c:	outs   dx,DWORD PTR ds:[rsi]
   14000b89d:	add    BYTE PTR [rax],ah
   14000b89f:	add    BYTE PTR [rbx+0x0],dh
   14000b8a2:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14000b8a7:	add    BYTE PTR [rdx+0x0],ah
   14000b8aa:	(bad)  
   14000b8ab:	add    BYTE PTR [rbx+0x0],ah
   14000b8ae:	imul   eax,DWORD PTR [rax],0x20
   14000b8b1:	add    BYTE PTR [rcx+0x0],ah
   14000b8b4:	je     0x14000b8b6
   14000b8b6:	je     0x14000b8b8
   14000b8b8:	jb     0x14000b8ba
   14000b8ba:	imul   eax,DWORD PTR [rax],0x750062
   14000b8c0:	je     0x14000b8c2
   14000b8c2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b8c6:	and    BYTE PTR [rax],al
   14000b8c8:	outs   dx,DWORD PTR ds:[rsi]
   14000b8c9:	add    BYTE PTR [rsi+0x0],ch
   14000b8cc:	cmp    al,BYTE PTR [rax]
   14000b8ce:	and    BYTE PTR [rax],al
   14000b8d0:	and    eax,0x7300
	...
   14000b8dd:	add    BYTE PTR [rax],al
   14000b8df:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b8e3:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b8e7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b8eb:	add    BYTE PTR [rsi+0x0],al
   14000b8ee:	imul   eax,DWORD PTR [rax],0x65006c
   14000b8f4:	add    BYTE PTR [r8+0x0],r15b
   14000b8f8:	cmp    al,BYTE PTR [rax]
   14000b8fa:	and    BYTE PTR [rax],al
   14000b8fc:	push   rbp
   14000b8fd:	add    BYTE PTR [rsi+0x0],ch
   14000b900:	(bad)  
   14000b901:	add    BYTE PTR [rdx+0x0],ah
   14000b904:	ins    BYTE PTR es:[rdi],dx
   14000b905:	add    BYTE PTR [rbp+0x0],ah
   14000b908:	and    BYTE PTR [rax],al
   14000b90a:	je     0x14000b90c
   14000b90c:	outs   dx,DWORD PTR ds:[rsi]
   14000b90d:	add    BYTE PTR [rax],ah
   14000b90f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b913:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b917:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b91b:	add    BYTE PTR [rax],ah
   14000b91d:	add    BYTE PTR [rbx+0x0],bl
   14000b920:	and    eax,0x5d007300
   14000b925:	add    BYTE PTR [rbx],bh
   14000b927:	add    BYTE PTR [rax],ah
   14000b929:	add    BYTE PTR [rdi+0x0],al
   14000b92c:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000b930:	and    BYTE PTR [rax],al
   14000b932:	cmp    eax,0x30002000
   14000b937:	add    BYTE PTR [rax+0x0],bh
   14000b93a:	and    eax,0x7800
   14000b93f:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b943:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b947:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b94b:	add    BYTE PTR [rsi+0x0],al
   14000b94e:	imul   eax,DWORD PTR [rax],0x65006c
   14000b954:	add    BYTE PTR [r8+0x0],r15b
   14000b958:	cmp    al,BYTE PTR [rax]
   14000b95a:	and    BYTE PTR [rax],al
   14000b95c:	push   rbp
   14000b95d:	add    BYTE PTR [rsi+0x0],ch
   14000b960:	(bad)  
   14000b961:	add    BYTE PTR [rdx+0x0],ah
   14000b964:	ins    BYTE PTR es:[rdi],dx
   14000b965:	add    BYTE PTR [rbp+0x0],ah
   14000b968:	and    BYTE PTR [rax],al
   14000b96a:	je     0x14000b96c
   14000b96c:	outs   dx,DWORD PTR ds:[rsi]
   14000b96d:	add    BYTE PTR [rax],ah
   14000b96f:	add    BYTE PTR [rbx+0x0],ah
   14000b972:	ins    BYTE PTR es:[rdi],dx
   14000b973:	add    BYTE PTR [rbp+0x0],ah
   14000b976:	(bad)  
   14000b977:	add    BYTE PTR [rdx+0x0],dh
   14000b97a:	and    BYTE PTR [rax],al
   14000b97c:	outs   dx,DWORD PTR ds:[rsi]
   14000b97d:	add    BYTE PTR [rbp+0x0],dh
   14000b980:	je     0x14000b982
   14000b982:	and    BYTE PTR [rax],al
   14000b984:	(bad)  
   14000b985:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000b989:	add    BYTE PTR [rdx+0x0],dh
   14000b98c:	imul   eax,DWORD PTR [rax],0x750062
   14000b992:	je     0x14000b994
   14000b994:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b998:	and    BYTE PTR [rax],al
   14000b99a:	outs   dx,DWORD PTR ds:[rsi]
   14000b99b:	add    BYTE PTR [rsi+0x0],ch
   14000b99e:	and    BYTE PTR [rax],al
   14000b9a0:	pop    rbx
   14000b9a1:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d012ca7
   14000b9a7:	add    BYTE PTR [rbx],bh
   14000b9a9:	add    BYTE PTR [rax],ah
   14000b9ab:	add    BYTE PTR [rdi+0x0],al
   14000b9ae:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000b9b2:	and    BYTE PTR [rax],al
   14000b9b4:	cmp    eax,0x30002000
   14000b9b9:	add    BYTE PTR [rax+0x0],bh
   14000b9bc:	and    eax,0x7800
   14000b9c1:	add    BYTE PTR [rax],al
   14000b9c3:	add    BYTE PTR [rax],al
   14000b9c5:	add    BYTE PTR [rax],al
   14000b9c7:	add    BYTE PTR [rip+0x25007300],ah        # 0x165012ccd
   14000b9cd:	add    BYTE PTR [rbx+0x0],dh
   14000b9d0:	and    eax,0x7300
   14000b9d5:	add    BYTE PTR [rax],al
   14000b9d7:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000b9db:	add    BYTE PTR [rdi],bh
   14000b9dd:	add    BYTE PTR [rax+rax*1+0x55],bl
   14000b9e1:	add    BYTE PTR [rsi+0x0],cl
   14000b9e4:	rex.XB add BYTE PTR [r8],al
	...
   14000b9ef:	add    BYTE PTR [rbx+0x0],al
   14000b9f2:	jb     0x14000b9f4
   14000b9f4:	add    BYTE PTR gs:[rcx+0x0],ah
   14000b9f8:	je     0x14000b9fa
   14000b9fa:	add    BYTE PTR gs:[rax+0x0],dl
   14000b9fe:	(bad)  
   14000b9ff:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000ba03:	add    BYTE PTR [rdx],bh
   14000ba05:	add    BYTE PTR [rax],ah
   14000ba07:	add    BYTE PTR [rbp+0x0],dl
   14000ba0a:	outs   dx,BYTE PTR ds:[rsi]
   14000ba0b:	add    BYTE PTR [rcx+0x0],ah
   14000ba0e:	(bad)  
   14000ba0f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000ba13:	add    BYTE PTR [rax],ah
   14000ba15:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000ba19:	add    BYTE PTR [rax],ah
   14000ba1b:	add    BYTE PTR [rbx+0x0],ah
   14000ba1e:	jb     0x14000ba20
   14000ba20:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ba24:	je     0x14000ba26
   14000ba26:	add    BYTE PTR gs:[rax],ah
   14000ba29:	add    BYTE PTR [rbx+0x0],bl
   14000ba2c:	and    eax,0x5d007300
   14000ba31:	add    BYTE PTR [rbx],bh
   14000ba33:	add    BYTE PTR [rax],ah
   14000ba35:	add    BYTE PTR [rdi+0x0],al
   14000ba38:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000ba3c:	and    BYTE PTR [rax],al
   14000ba3e:	cmp    eax,0x30002000
   14000ba43:	add    BYTE PTR [rax+0x0],bh
   14000ba46:	and    eax,0x7800
   14000ba4b:	add    BYTE PTR [rax],al
   14000ba4d:	add    BYTE PTR [rax],al
   14000ba4f:	add    BYTE PTR [rbx+0x0],al
   14000ba52:	jb     0x14000ba54
   14000ba54:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ba58:	je     0x14000ba5a
   14000ba5a:	add    BYTE PTR gs:[rax+0x0],dl
   14000ba5e:	(bad)  
   14000ba5f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000ba63:	add    BYTE PTR [rdx],bh
   14000ba65:	add    BYTE PTR [rax],ah
   14000ba67:	add    BYTE PTR [rbp+0x0],dl
   14000ba6a:	outs   dx,BYTE PTR ds:[rsi]
   14000ba6b:	add    BYTE PTR [rcx+0x0],ah
   14000ba6e:	(bad)  
   14000ba6f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000ba73:	add    BYTE PTR [rax],ah
   14000ba75:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000ba79:	add    BYTE PTR [rax],ah
   14000ba7b:	add    BYTE PTR [rbx+0x0],ah
   14000ba7e:	jb     0x14000ba80
   14000ba80:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ba84:	je     0x14000ba86
   14000ba86:	add    BYTE PTR gs:[rax],ah
   14000ba89:	add    BYTE PTR [rax+0x0],dh
   14000ba8c:	(bad)  
   14000ba8d:	add    BYTE PTR [rdx+0x0],dh
   14000ba90:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ba94:	je     0x14000ba96
   14000ba96:	and    BYTE PTR [rax],al
   14000ba98:	add    BYTE PTR fs:[rcx+0x0],ch
   14000ba9c:	jb     0x14000ba9e
   14000ba9e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000baa2:	je     0x14000baa4
   14000baa4:	outs   dx,DWORD PTR ds:[rsi]
   14000baa5:	add    BYTE PTR [rdx+0x0],dh
   14000baa8:	jns    0x14000baaa
   14000baaa:	and    BYTE PTR [rax],al
   14000baac:	data16 add BYTE PTR [rdi+0x0],ch
   14000bab0:	jb     0x14000bab2
   14000bab2:	and    BYTE PTR [rax],al
   14000bab4:	pop    rbx
   14000bab5:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d012dbb
   14000babb:	add    BYTE PTR [rbx],bh
   14000babd:	add    BYTE PTR [rax],ah
   14000babf:	add    BYTE PTR [rdi+0x0],al
   14000bac2:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000bac6:	and    BYTE PTR [rax],al
   14000bac8:	cmp    eax,0x30002000
   14000bacd:	add    BYTE PTR [rax+0x0],bh
   14000bad0:	and    eax,0x7800
   14000bad5:	add    BYTE PTR [rax],al
   14000bad7:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000badb:	add    BYTE PTR [rax],al
   14000badd:	add    BYTE PTR [rax],al
   14000badf:	add    BYTE PTR [rsi+0x0],al
   14000bae2:	ins    BYTE PTR es:[rdi],dx
   14000bae3:	add    BYTE PTR [rbp+0x0],dh
   14000bae6:	jae    0x14000bae8
   14000bae8:	push   0x6e006900
   14000baed:	add    BYTE PTR [rdi+0x0],ah
   14000baf0:	and    BYTE PTR [rax],al
   14000baf2:	jb     0x14000baf4
   14000baf4:	add    BYTE PTR gs:[rdi+0x0],ah
   14000baf8:	imul   eax,DWORD PTR [rax],0x740073
   14000bafe:	jb     0x14000bb00
   14000bb00:	jns    0x14000bb02
   14000bb02:	and    BYTE PTR [rax],al
   14000bb04:	je     0x14000bb06
   14000bb06:	outs   dx,DWORD PTR ds:[rsi]
   14000bb07:	add    BYTE PTR [rax],ah
   14000bb09:	add    BYTE PTR [rax+rax*1+0x69],ah
   14000bb0d:	add    BYTE PTR [rbx+0x0],dh
   14000bb10:	imul   eax,DWORD PTR [rax],0x2e
   14000bb13:	add    BYTE PTR [rsi],ch
   14000bb15:	add    BYTE PTR [rsi],ch
	...
   14000bb1f:	add    BYTE PTR [rsi+0x0],al
   14000bb22:	ins    BYTE PTR es:[rdi],dx
   14000bb23:	add    BYTE PTR [rbp+0x0],dh
   14000bb26:	jae    0x14000bb28
   14000bb28:	push   0x74002000
   14000bb2d:	add    BYTE PTR [rdi+0x0],ch
   14000bb30:	outs   dx,DWORD PTR ds:[rsi]
   14000bb31:	add    BYTE PTR [rbx+0x0],ch
   14000bb34:	and    BYTE PTR [rax],al
   14000bb36:	and    eax,0x20007500
   14000bb3b:	add    BYTE PTR [rbp+0x0],ch
   14000bb3e:	jae    0x14000bb40
   14000bb40:	add    BYTE PTR cs:[rax],al
   14000bb43:	add    BYTE PTR [rax],al
   14000bb45:	add    BYTE PTR [rax],al
   14000bb47:	add    BYTE PTR [rbx+0x0],dl
   14000bb4a:	jns    0x14000bb4c
   14000bb4c:	jae    0x14000bb4e
   14000bb4e:	je     0x14000bb50
   14000bb50:	add    BYTE PTR gs:[rbp+0x0],ch
   14000bb54:	pop    rsp
   14000bb55:	add    BYTE PTR [rbx+0x0],dl
   14000bb58:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000bb5d:	add    BYTE PTR [rax+0x0],dh
	...
   14000bb68:	push   rbx
   14000bb69:	add    BYTE PTR [rbp+0x0],ah
   14000bb6c:	je     0x14000bb6e
   14000bb6e:	jne    0x14000bb70
   14000bb70:	jo     0x14000bb72
   14000bb72:	push   rbx
   14000bb73:	add    BYTE PTR [rax+0x0],ch
   14000bb76:	jne    0x14000bb78
   14000bb78:	je     0x14000bb7a
   14000bb7a:	add    BYTE PTR fs:[rdi+0x0],ch
   14000bb7e:	ja     0x14000bb80
   14000bb80:	outs   dx,BYTE PTR ds:[rsi]
   14000bb81:	add    BYTE PTR [rdx+0x0],dl
   14000bb84:	add    BYTE PTR gs:[rcx+0x0],dh
   14000bb88:	jne    0x14000bb8a
   14000bb8a:	imul   eax,DWORD PTR [rax],0x650072
   14000bb90:	add    BYTE PTR fs:[rax],al
   14000bb93:	add    BYTE PTR [rax],al
   14000bb95:	add    BYTE PTR [rax],al
   14000bb97:	add    BYTE PTR [rcx+0x0],al
   14000bb9a:	jne    0x14000bb9c
   14000bb9c:	add    BYTE PTR fs:[rcx+0x0],ch
   14000bba0:	je     0x14000bba2
   14000bba2:	rex.X add BYTE PTR [rdi+0x0],bpl
   14000bba6:	outs   dx,DWORD PTR ds:[rsi]
   14000bba7:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000bbab:	add    BYTE PTR [rax],al
   14000bbad:	add    BYTE PTR [rax],al
   14000bbaf:	add    BYTE PTR [rbx+0x0],dl
   14000bbb2:	jns    0x14000bbb4
   14000bbb4:	jae    0x14000bbb6
   14000bbb6:	je     0x14000bbb8
   14000bbb8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000bbbc:	pop    rsp
   14000bbbd:	add    BYTE PTR [rbx+0x0],dl
   14000bbc0:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000bbc5:	add    BYTE PTR [rax+0x0],dh
   14000bbc8:	pop    rsp
   14000bbc9:	add    BYTE PTR [rbx+0x0],dl
   14000bbcc:	je     0x14000bbce
   14000bbce:	(bad)  
   14000bbcf:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000bbd3:	add    BYTE PTR [rbx+0x0],dh
	...
   14000bbde:	add    BYTE PTR [rax],al
   14000bbe0:	push   rbx
   14000bbe1:	add    BYTE PTR [rcx+0x0],bh
   14000bbe4:	jae    0x14000bbe6
   14000bbe6:	je     0x14000bbe8
   14000bbe8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000bbec:	pop    rsp
   14000bbed:	add    BYTE PTR [rbx+0x0],dl
   14000bbf0:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000bbf5:	add    BYTE PTR [rax+0x0],dh
   14000bbf8:	pop    rsp
   14000bbf9:	add    BYTE PTR [rbx+0x0],dl
   14000bbfc:	je     0x14000bbfe
   14000bbfe:	(bad)  
   14000bbff:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000bc03:	add    BYTE PTR [rbx+0x0],dh
   14000bc06:	pop    rsp
   14000bc07:	add    BYTE PTR [rbx+0x0],al
   14000bc0a:	push   0x6c006900
   14000bc0f:	add    BYTE PTR [rax+rax*1+0x43],ah
   14000bc13:	add    BYTE PTR [rdi+0x0],ch
   14000bc16:	ins    DWORD PTR es:[rdi],dx
   14000bc17:	add    BYTE PTR [rax+0x0],dh
   14000bc1a:	ins    BYTE PTR es:[rdi],dx
   14000bc1b:	add    BYTE PTR [rbp+0x0],ah
   14000bc1e:	je     0x14000bc20
   14000bc20:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14000bc2e:	add    BYTE PTR [rax],al
   14000bc30:	push   rbp
   14000bc31:	add    BYTE PTR [rax+0x0],dh
   14000bc34:	add    BYTE PTR fs:[rcx+0x0],ah
   14000bc38:	je     0x14000bc3a
   14000bc3a:	imul   eax,DWORD PTR [rax],0x67006e
   14000bc40:	and    BYTE PTR [rax],al
   14000bc42:	jo     0x14000bc44
   14000bc44:	(bad)  
   14000bc45:	add    BYTE PTR [rbx+0x0],dh
   14000bc48:	jae    0x14000bc4a
   14000bc4a:	and    BYTE PTR [rax],al
   14000bc4c:	jae    0x14000bc4e
   14000bc4e:	je     0x14000bc50
   14000bc50:	(bad)  
   14000bc51:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000bc55:	add    BYTE PTR [rbx+0x0],dh
   14000bc58:	and    BYTE PTR [rax],al
   14000bc5a:	data16 add BYTE PTR [rdi+0x0],ch
   14000bc5e:	jb     0x14000bc60
   14000bc60:	and    BYTE PTR [rax],al
   14000bc62:	pop    rbx
   14000bc63:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d012f69
   14000bc69:	add    BYTE PTR [rax],ah
   14000bc6b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bc6f:	add    BYTE PTR [rax],ah
   14000bc71:	add    BYTE PTR [rdx+0x0],dh
   14000bc74:	add    BYTE PTR gs:[rsi+0x0],ah
   14000bc78:	ins    BYTE PTR es:[rdi],dx
   14000bc79:	add    BYTE PTR [rbp+0x0],ah
   14000bc7c:	movsxd eax,DWORD PTR [rax]
   14000bc7e:	je     0x14000bc80
   14000bc80:	and    BYTE PTR [rax],al
   14000bc82:	jb     0x14000bc84
   14000bc84:	add    BYTE PTR gs:[rdx+0x0],ah
   14000bc88:	outs   dx,DWORD PTR ds:[rsi]
   14000bc89:	add    BYTE PTR [rdi+0x0],ch
   14000bc8c:	je     0x14000bc8e
   14000bc8e:	cmp    al,BYTE PTR [rax]
   14000bc90:	and    BYTE PTR [rax],al
   14000bc92:	xor    BYTE PTR [rax],al
   14000bc94:	js     0x14000bc96
   14000bc96:	and    eax,0x20007800
   14000bc9b:	add    BYTE PTR [rip+0x3e002d00],ch        # 0x17e00e9a1
   14000bca1:	add    BYTE PTR [rax],ah
   14000bca3:	add    BYTE PTR [rax],dh
   14000bca5:	add    BYTE PTR [rax+0x0],bh
   14000bca8:	and    eax,0x7800
   14000bcad:	add    BYTE PTR [rax],al
   14000bcaf:	add    BYTE PTR [rax+rax*1+0x65],al
   14000bcb3:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bcb7:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000bcbb:	add    BYTE PTR [rsi+0x0],ch
   14000bcbe:	add    BYTE PTR [eax],ah
   14000bcc1:	add    BYTE PTR [rbx+0x0],ah
   14000bcc4:	(bad)  
   14000bcc5:	add    BYTE PTR [rbx+0x0],ah
   14000bcc8:	push   0x64006500
   14000bccd:	add    BYTE PTR [rax],ah
   14000bccf:	add    BYTE PTR [rbx+0x0],ah
   14000bcd2:	outs   dx,DWORD PTR ds:[rsi]
   14000bcd3:	add    BYTE PTR [rax+0x0],dh
   14000bcd6:	jns    0x14000bcd8
   14000bcd8:	and    BYTE PTR [rax],al
   14000bcda:	outs   dx,DWORD PTR ds:[rsi]
   14000bcdb:	add    BYTE PTR [rsi+0x0],ah
   14000bcde:	and    BYTE PTR [rax],al
   14000bce0:	jne    0x14000bce2
   14000bce2:	outs   dx,BYTE PTR ds:[rsi]
   14000bce3:	add    BYTE PTR [rcx+0x0],ah
   14000bce6:	je     0x14000bce8
   14000bce8:	je     0x14000bcea
   14000bcea:	add    BYTE PTR gs:[rsi+0x0],ch
   14000bcee:	add    BYTE PTR fs:[rax],ah
   14000bcf1:	add    BYTE PTR [rbx+0x0],dh
   14000bcf4:	je     0x14000bcf6
   14000bcf6:	outs   dx,DWORD PTR ds:[rsi]
   14000bcf7:	add    BYTE PTR [rdx+0x0],dh
   14000bcfa:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000bcff:	add    BYTE PTR [rcx+0x0],ah
   14000bd02:	je     0x14000bd04
   14000bd04:	and    BYTE PTR [rax],al
   14000bd06:	pop    rbx
   14000bd07:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d01300d
   14000bd0d:	add    BYTE PTR [rax],al
   14000bd0f:	add    BYTE PTR [rbp+0x0],dl
   14000bd12:	outs   dx,BYTE PTR ds:[rsi]
   14000bd13:	add    BYTE PTR [rcx+0x0],ah
   14000bd16:	(bad)  
   14000bd17:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bd1b:	add    BYTE PTR [rax],ah
   14000bd1d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bd21:	add    BYTE PTR [rax],ah
   14000bd23:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000bd27:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bd2b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000bd2f:	add    BYTE PTR [rax],ah
   14000bd31:	add    BYTE PTR [rbp+0x0],ah
   14000bd34:	js     0x14000bd36
   14000bd36:	imul   eax,DWORD PTR [rax],0x740073
   14000bd3c:	imul   eax,DWORD PTR [rax],0x67006e
   14000bd42:	and    BYTE PTR [rax],al
   14000bd44:	data16 add BYTE PTR [rcx+0x0],ch
   14000bd48:	ins    BYTE PTR es:[rdi],dx
   14000bd49:	add    BYTE PTR [rbp+0x0],ah
   14000bd4c:	and    BYTE PTR [rax],al
   14000bd4e:	(bad)  
   14000bd4f:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000bd53:	add    BYTE PTR [rbx+0x0],bl
   14000bd56:	and    eax,0x5d007300
   14000bd5b:	add    BYTE PTR [rax],al
   14000bd5d:	add    BYTE PTR [rax],al
   14000bd5f:	add    BYTE PTR [rbp+0x0],dl
   14000bd62:	outs   dx,BYTE PTR ds:[rsi]
   14000bd63:	add    BYTE PTR [rcx+0x0],ah
   14000bd66:	(bad)  
   14000bd67:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bd6b:	add    BYTE PTR [rax],ah
   14000bd6d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bd71:	add    BYTE PTR [rax],ah
   14000bd73:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000bd77:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bd7b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000bd7f:	add    BYTE PTR [rax],ah
   14000bd81:	add    BYTE PTR [rbp+0x0],ah
   14000bd84:	js     0x14000bd86
   14000bd86:	imul   eax,DWORD PTR [rax],0x740073
   14000bd8c:	imul   eax,DWORD PTR [rax],0x67006e
   14000bd92:	and    BYTE PTR [rax],al
   14000bd94:	add    BYTE PTR fs:[rcx+0x0],ch
   14000bd98:	jb     0x14000bd9a
   14000bd9a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000bd9e:	je     0x14000bda0
   14000bda0:	outs   dx,DWORD PTR ds:[rsi]
   14000bda1:	add    BYTE PTR [rdx+0x0],dh
   14000bda4:	jns    0x14000bda6
   14000bda6:	and    BYTE PTR [rax],al
   14000bda8:	pop    rbx
   14000bda9:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d0130af
	...
   14000bdbf:	add    BYTE PTR [rbx+0x0],al
   14000bdc2:	(bad)  
   14000bdc3:	add    BYTE PTR [rbx+0x0],ah
   14000bdc6:	push   0x6e006900
   14000bdcb:	add    BYTE PTR [rdi+0x0],ah
   14000bdce:	and    BYTE PTR [rax],al
   14000bdd0:	movsxd eax,DWORD PTR [rax]
   14000bdd2:	outs   dx,DWORD PTR ds:[rsi]
   14000bdd3:	add    BYTE PTR [rax+0x0],dh
   14000bdd6:	jns    0x14000bdd8
   14000bdd8:	and    BYTE PTR [rax],al
   14000bdda:	outs   dx,DWORD PTR ds:[rsi]
   14000bddb:	add    BYTE PTR [rsi+0x0],ah
   14000bdde:	and    BYTE PTR [rax],al
   14000bde0:	jne    0x14000bde2
   14000bde2:	outs   dx,BYTE PTR ds:[rsi]
   14000bde3:	add    BYTE PTR [rcx+0x0],ah
   14000bde6:	je     0x14000bde8
   14000bde8:	je     0x14000bdea
   14000bdea:	add    BYTE PTR gs:[rsi+0x0],ch
   14000bdee:	add    BYTE PTR fs:[rax],ah
   14000bdf1:	add    BYTE PTR [rsi+0x0],ah
   14000bdf4:	imul   eax,DWORD PTR [rax],0x65006c
   14000bdfa:	cmp    al,BYTE PTR [rax]
   14000bdfc:	and    BYTE PTR [rax],al
   14000bdfe:	pop    rbx
   14000bdff:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d013105
   14000be05:	add    BYTE PTR [rax],ah
   14000be07:	add    BYTE PTR [rip+0x20002d00],ch        # 0x16000eb0d
   14000be0d:	add    BYTE PTR [rbx+0x0],ah
   14000be10:	(bad)  
   14000be11:	add    BYTE PTR [rbx+0x0],ah
   14000be14:	push   0x64006500
   14000be19:	add    BYTE PTR [rax],ah
   14000be1b:	add    BYTE PTR [rcx+0x0],ah
   14000be1e:	je     0x14000be20
   14000be20:	and    BYTE PTR [rax],al
   14000be22:	sub    eax,0x3e002d00
   14000be27:	add    BYTE PTR [rax],ah
   14000be29:	add    BYTE PTR [rbx+0x0],bl
   14000be2c:	and    eax,0x5d007300
	...
   14000be3d:	add    BYTE PTR [rax],al
   14000be3f:	add    BYTE PTR [rbx+0x0],al
   14000be42:	outs   dx,DWORD PTR ds:[rsi]
   14000be43:	add    BYTE PTR [rbp+0x0],dh
   14000be46:	ins    BYTE PTR es:[rdi],dx
   14000be47:	add    BYTE PTR [rax+rax*1+0x6e],ah
   14000be4b:	add    BYTE PTR [rdi],ah
   14000be4d:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000be51:	add    BYTE PTR [rbx+0x0],ah
   14000be54:	jb     0x14000be56
   14000be56:	add    BYTE PTR gs:[rcx+0x0],ah
   14000be5a:	je     0x14000be5c
   14000be5c:	add    BYTE PTR gs:[rax],ah
   14000be5f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000be63:	add    BYTE PTR [rbx+0x0],dh
   14000be66:	je     0x14000be68
   14000be68:	imul   eax,DWORD PTR [rax],0x61006e
   14000be6e:	je     0x14000be70
   14000be70:	imul   eax,DWORD PTR [rax],0x6e006f
   14000be76:	and    BYTE PTR [rax],al
   14000be78:	add    BYTE PTR fs:[rcx+0x0],ch
   14000be7c:	jb     0x14000be7e
   14000be7e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000be82:	je     0x14000be84
   14000be84:	outs   dx,DWORD PTR ds:[rsi]
   14000be85:	add    BYTE PTR [rdx+0x0],dh
   14000be88:	jns    0x14000be8a
   14000be8a:	and    BYTE PTR [rax],al
   14000be8c:	pop    rbx
   14000be8d:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d013193
	...
   14000be9f:	add    BYTE PTR [rbx+0x0],dl
   14000bea2:	outs   dx,DWORD PTR ds:[rsi]
   14000bea3:	add    BYTE PTR [rbp+0x0],dh
   14000bea6:	jb     0x14000bea8
   14000bea8:	movsxd eax,DWORD PTR [rax]
   14000beaa:	add    BYTE PTR gs:[rax],ah
   14000bead:	add    BYTE PTR [rcx+0x0],ah
   14000beb0:	outs   dx,BYTE PTR ds:[rsi]
   14000beb1:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000beb5:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000beb9:	add    BYTE PTR [rbx+0x0],dh
   14000bebc:	je     0x14000bebe
   14000bebe:	imul   eax,DWORD PTR [rax],0x61006e
   14000bec4:	je     0x14000bec6
   14000bec6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000becc:	and    BYTE PTR [rax],al
   14000bece:	jo     0x14000bed0
   14000bed0:	(bad)  
   14000bed1:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000bed5:	add    BYTE PTR [rbx+0x0],dh
   14000bed8:	and    BYTE PTR [rax],al
   14000beda:	(bad)  
   14000bedb:	add    BYTE PTR [rdx+0x0],dh
   14000bede:	add    BYTE PTR gs:[rax],ah
   14000bee1:	add    BYTE PTR [rcx+0x0],ch
   14000bee4:	add    BYTE PTR fs:[rbp+0x0],ah
   14000bee8:	outs   dx,BYTE PTR ds:[rsi]
   14000bee9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000beed:	add    BYTE PTR [rbx+0x0],ah
   14000bef0:	(bad)  
   14000bef1:	add    BYTE PTR [rax+rax*1+0x3b],ch
   14000bef5:	add    BYTE PTR [rax],ah
   14000bef7:	add    BYTE PTR [rbx+0x0],dh
   14000befa:	imul   eax,DWORD PTR [rax],0x69
   14000befd:	add    BYTE PTR [rax+0x0],dh
   14000bf00:	jo     0x14000bf02
   14000bf02:	imul   eax,DWORD PTR [rax],0x67006e
   14000bf08:	and    BYTE PTR [rax],al
   14000bf0a:	data16 add BYTE PTR [rcx+0x0],ch
   14000bf0e:	ins    BYTE PTR es:[rdi],dx
   14000bf0f:	add    BYTE PTR [rbp+0x0],ah
   14000bf12:	and    BYTE PTR [rax],al
   14000bf14:	movsxd eax,DWORD PTR [rax]
   14000bf16:	outs   dx,DWORD PTR ds:[rsi]
   14000bf17:	add    BYTE PTR [rax+0x0],dh
   14000bf1a:	jns    0x14000bf1c
   14000bf1c:	add    BYTE PTR cs:[rax],al
   14000bf1f:	add    BYTE PTR [rsi+0x0],al
   14000bf22:	outs   dx,DWORD PTR ds:[rsi]
   14000bf23:	add    BYTE PTR [rbp+0x0],dh
   14000bf26:	outs   dx,BYTE PTR ds:[rsi]
   14000bf27:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000bf2b:	add    BYTE PTR [rbp+0x0],ah
   14000bf2e:	js     0x14000bf30
   14000bf30:	imul   eax,DWORD PTR [rax],0x740073
   14000bf36:	imul   eax,DWORD PTR [rax],0x67006e
   14000bf3c:	and    BYTE PTR [rax],al
   14000bf3e:	data16 add BYTE PTR [rcx+0x0],ch
   14000bf42:	ins    BYTE PTR es:[rdi],dx
   14000bf43:	add    BYTE PTR [rbp+0x0],ah
   14000bf46:	and    BYTE PTR [rax],al
   14000bf48:	(bad)  
   14000bf49:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000bf4d:	add    BYTE PTR [rbx+0x0],bl
   14000bf50:	and    eax,0x5d007300
   14000bf55:	add    BYTE PTR [rbx],bh
   14000bf57:	add    BYTE PTR [rax],ah
   14000bf59:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000bf5d:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bf61:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000bf65:	add    BYTE PTR [rsi+0x0],ch
   14000bf68:	add    BYTE PTR [eax],ah
   14000bf6b:	add    BYTE PTR [rcx+0x0],ch
   14000bf6e:	je     0x14000bf70
   14000bf70:	add    BYTE PTR cs:[rsi],ch
   14000bf73:	add    BYTE PTR [rsi],ch
	...
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    BYTE PTR [rbx+0x0],al
   14000bf82:	outs   dx,DWORD PTR ds:[rsi]
   14000bf83:	add    BYTE PTR [rbp+0x0],dh
   14000bf86:	ins    BYTE PTR es:[rdi],dx
   14000bf87:	add    BYTE PTR [rax+rax*1+0x6e],ah
   14000bf8b:	add    BYTE PTR [rdi],ah
   14000bf8d:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000bf91:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000bf95:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000bf99:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000bf9d:	add    BYTE PTR [rax],ah
   14000bf9f:	add    BYTE PTR [rbp+0x0],ah
   14000bfa2:	js     0x14000bfa4
   14000bfa4:	imul   eax,DWORD PTR [rax],0x740073
   14000bfaa:	imul   eax,DWORD PTR [rax],0x67006e
   14000bfb0:	and    BYTE PTR [rax],al
   14000bfb2:	data16 add BYTE PTR [rcx+0x0],ch
   14000bfb6:	ins    BYTE PTR es:[rdi],dx
   14000bfb7:	add    BYTE PTR [rbp+0x0],ah
   14000bfba:	and    BYTE PTR [rax],al
   14000bfbc:	pop    rbx
   14000bfbd:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d0132c3
	...
   14000bfcf:	add    BYTE PTR [rbx+0x0],al
   14000bfd2:	outs   dx,DWORD PTR ds:[rsi]
   14000bfd3:	add    BYTE PTR [rbp+0x0],dh
   14000bfd6:	ins    BYTE PTR es:[rdi],dx
   14000bfd7:	add    BYTE PTR [rax+rax*1+0x6e],ah
   14000bfdb:	add    BYTE PTR [rdi],ah
   14000bfdd:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000bfe1:	add    BYTE PTR [rbx+0x0],ah
   14000bfe4:	outs   dx,DWORD PTR ds:[rsi]
   14000bfe5:	add    BYTE PTR [rax+0x0],dh
   14000bfe8:	jns    0x14000bfea
   14000bfea:	and    BYTE PTR [rax],al
   14000bfec:	data16 add BYTE PTR [rcx+0x0],ch
   14000bff0:	ins    BYTE PTR es:[rdi],dx
   14000bff1:	add    BYTE PTR [rbp+0x0],ah
   14000bff4:	and    BYTE PTR [rax],al
   14000bff6:	data16 add BYTE PTR [rdx+0x0],dh
   14000bffa:	outs   dx,DWORD PTR ds:[rsi]
   14000bffb:	add    BYTE PTR [rbp+0x0],ch
   14000bffe:	and    BYTE PTR [rax],al
   14000c000:	pop    rbx
   14000c001:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d013307
   14000c007:	add    BYTE PTR [rax],ah
   14000c009:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c00d:	add    BYTE PTR [rax],ah
   14000c00f:	add    BYTE PTR [rbx+0x0],bl
   14000c012:	and    eax,0x5d007300
	...
   14000c01f:	add    BYTE PTR [rbx+0x0],al
   14000c022:	outs   dx,DWORD PTR ds:[rsi]
   14000c023:	add    BYTE PTR [rbp+0x0],dh
   14000c026:	ins    BYTE PTR es:[rdi],dx
   14000c027:	add    BYTE PTR [rax+rax*1+0x6e],ah
   14000c02b:	add    BYTE PTR [rdi],ah
   14000c02d:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000c031:	add    BYTE PTR [rsi+0x0],ah
   14000c034:	outs   dx,DWORD PTR ds:[rsi]
   14000c035:	add    BYTE PTR [rdx+0x0],dh
   14000c038:	ins    DWORD PTR es:[rdi],dx
   14000c039:	add    BYTE PTR [rax],ah
   14000c03b:	add    BYTE PTR [rbx+0x0],ah
   14000c03e:	(bad)  
   14000c03f:	add    BYTE PTR [rsi+0x0],ch
   14000c042:	outs   dx,DWORD PTR ds:[rsi]
   14000c043:	add    BYTE PTR [rsi+0x0],ch
   14000c046:	imul   eax,DWORD PTR [rax],0x610063
   14000c04c:	ins    BYTE PTR es:[rdi],dx
   14000c04d:	add    BYTE PTR [rax],ah
   14000c04f:	add    BYTE PTR [rax+0x0],dh
   14000c052:	(bad)  
   14000c053:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c057:	add    BYTE PTR [rax],ah
   14000c059:	add    BYTE PTR [rsi+0x0],ch
   14000c05c:	(bad)  
   14000c05d:	add    BYTE PTR [rbp+0x0],ch
   14000c060:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c064:	and    BYTE PTR [rax],al
   14000c066:	je     0x14000c068
   14000c068:	outs   dx,DWORD PTR ds:[rsi]
   14000c069:	add    BYTE PTR [rax],ah
   14000c06b:	add    BYTE PTR [rbx+0x0],dh
   14000c06e:	outs   dx,DWORD PTR ds:[rsi]
   14000c06f:	add    BYTE PTR [rbp+0x0],dh
   14000c072:	jb     0x14000c074
   14000c074:	movsxd eax,DWORD PTR [rax]
   14000c076:	add    BYTE PTR gs:[rax],ah
   14000c079:	add    BYTE PTR [rcx+0x0],ah
   14000c07c:	outs   dx,BYTE PTR ds:[rsi]
   14000c07d:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c081:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c085:	add    BYTE PTR [rbx+0x0],dh
   14000c088:	je     0x14000c08a
   14000c08a:	imul   eax,DWORD PTR [rax],0x61006e
   14000c090:	je     0x14000c092
   14000c092:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c098:	and    BYTE PTR [rax],al
   14000c09a:	data16 add BYTE PTR [rcx+0x0],ch
   14000c09e:	ins    BYTE PTR es:[rdi],dx
   14000c09f:	add    BYTE PTR [rbp+0x0],ah
   14000c0a2:	jae    0x14000c0a4
	...
   14000c0b0:	add    BYTE PTR [r10+0x0],r14b
   14000c0b4:	jb     0x14000c0b6
   14000c0b6:	outs   dx,DWORD PTR ds:[rsi]
   14000c0b7:	add    BYTE PTR [rdx+0x0],dh
   14000c0ba:	and    BYTE PTR [rax],al
   14000c0bc:	add    BYTE PTR gs:[rax+0x0],bh
   14000c0c0:	jo     0x14000c0c2
   14000c0c2:	(bad)  
   14000c0c3:	add    BYTE PTR [rsi+0x0],ch
   14000c0c6:	add    BYTE PTR fs:[rcx+0x0],ch
   14000c0ca:	outs   dx,BYTE PTR ds:[rsi]
   14000c0cb:	add    BYTE PTR [rdi+0x0],ah
   14000c0ce:	and    BYTE PTR [rax],al
   14000c0d0:	push   rbp
   14000c0d1:	add    BYTE PTR [rsi+0x0],ch
   14000c0d4:	(bad)  
   14000c0d5:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000c0d9:	add    BYTE PTR [rbp+0x0],ah
   14000c0dc:	outs   dx,BYTE PTR ds:[rsi]
   14000c0dd:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c0e1:	add    BYTE PTR [rbx+0x0],dh
   14000c0e4:	outs   dx,DWORD PTR ds:[rsi]
   14000c0e5:	add    BYTE PTR [rbp+0x0],dh
   14000c0e8:	jb     0x14000c0ea
   14000c0ea:	movsxd eax,DWORD PTR [rax]
   14000c0ec:	add    BYTE PTR gs:[rax],ah
   14000c0ef:	add    BYTE PTR [rax+0x0],dh
   14000c0f2:	(bad)  
   14000c0f3:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c0f7:	add    BYTE PTR [rax],ah
   14000c0f9:	add    BYTE PTR [rbx+0x0],bl
   14000c0fc:	and    eax,0x5d007300
	...
   14000c10d:	add    BYTE PTR [rax],al
   14000c10f:	add    BYTE PTR [rbx+0x0],dl
   14000c112:	jo     0x14000c114
   14000c114:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c118:	imul   eax,DWORD PTR [rax],0x690066
   14000c11e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000c123:	add    BYTE PTR [rbp+0x0],dh
   14000c126:	outs   dx,BYTE PTR ds:[rsi]
   14000c127:	add    BYTE PTR [rcx+0x0],ah
   14000c12a:	je     0x14000c12c
   14000c12c:	je     0x14000c12e
   14000c12e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c132:	add    BYTE PTR fs:[rax],ah
   14000c135:	add    BYTE PTR [rsi+0x0],ah
   14000c138:	imul   eax,DWORD PTR [rax],0x65006c
   14000c13e:	and    BYTE PTR [rax],al
   14000c140:	pop    rbx
   14000c141:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d013447
   14000c147:	add    BYTE PTR [rax],ah
   14000c149:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000c14d:	add    BYTE PTR [rbp+0x0],ah
   14000c150:	jae    0x14000c152
   14000c152:	and    BYTE PTR [rax],al
   14000c154:	outs   dx,BYTE PTR ds:[rsi]
   14000c155:	add    BYTE PTR [rdi+0x0],ch
   14000c158:	je     0x14000c15a
   14000c15a:	and    BYTE PTR [rax],al
   14000c15c:	add    BYTE PTR gs:[rax+0x0],bh
   14000c160:	imul   eax,DWORD PTR [rax],0x740073
	...
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	add    BYTE PTR [r10+0x0],r14b
   14000c174:	jb     0x14000c176
   14000c176:	outs   dx,DWORD PTR ds:[rsi]
   14000c177:	add    BYTE PTR [rdx+0x0],dh
   14000c17a:	and    BYTE PTR [rax],al
   14000c17c:	add    BYTE PTR gs:[rax+0x0],bh
   14000c180:	jo     0x14000c182
   14000c182:	(bad)  
   14000c183:	add    BYTE PTR [rsi+0x0],ch
   14000c186:	add    BYTE PTR fs:[rcx+0x0],ch
   14000c18a:	outs   dx,BYTE PTR ds:[rsi]
   14000c18b:	add    BYTE PTR [rdi+0x0],ah
   14000c18e:	and    BYTE PTR [rax],al
   14000c190:	push   rbp
   14000c191:	add    BYTE PTR [rsi+0x0],ch
   14000c194:	(bad)  
   14000c195:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000c199:	add    BYTE PTR [rbp+0x0],ah
   14000c19c:	outs   dx,BYTE PTR ds:[rsi]
   14000c19d:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c1a1:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c1a5:	add    BYTE PTR [rbx+0x0],dh
   14000c1a8:	je     0x14000c1aa
   14000c1aa:	and    BYTE PTR [rax],al
   14000c1ac:	jo     0x14000c1ae
   14000c1ae:	(bad)  
   14000c1af:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c1b3:	add    BYTE PTR [rax],ah
   14000c1b5:	add    BYTE PTR [rbx+0x0],bl
   14000c1b8:	and    eax,0x5d007300
   14000c1bd:	add    BYTE PTR [rax],al
   14000c1bf:	add    BYTE PTR [rbx+0x0],dl
   14000c1c2:	jns    0x14000c1c4
   14000c1c4:	jae    0x14000c1c6
   14000c1c6:	je     0x14000c1c8
   14000c1c8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c1cc:	pop    rsp
   14000c1cd:	add    BYTE PTR [rbx+0x0],dl
   14000c1d0:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000c1d5:	add    BYTE PTR [rax+0x0],dh
   14000c1d8:	pop    rsp
   14000c1d9:	add    BYTE PTR [rbx+0x0],dl
   14000c1dc:	je     0x14000c1de
   14000c1de:	(bad)  
   14000c1df:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000c1e3:	add    BYTE PTR [rbx+0x0],dh
   14000c1e6:	pop    rsp
   14000c1e7:	add    BYTE PTR [rbp+0x0],dl
   14000c1ea:	outs   dx,BYTE PTR ds:[rsi]
   14000c1eb:	add    BYTE PTR [rcx+0x0],ah
   14000c1ee:	je     0x14000c1f0
   14000c1f0:	je     0x14000c1f2
   14000c1f2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c1f6:	add    BYTE PTR fs:[rax+0x0],dl
   14000c1fa:	(bad)  
   14000c1fb:	add    BYTE PTR [rbx+0x0],dh
   14000c1fe:	jae    0x14000c200
   14000c200:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14000c210:	and    eax,0x69007700
   14000c215:	add    BYTE PTR [rsi+0x0],ch
   14000c218:	add    BYTE PTR fs:[rcx+0x0],ch
   14000c21c:	jb     0x14000c21e
   14000c21e:	and    eax,0x53005c00
   14000c223:	add    BYTE PTR [rbp+0x0],ah
   14000c226:	je     0x14000c228
   14000c228:	jne    0x14000c22a
   14000c22a:	jo     0x14000c22c
   14000c22c:	pop    rsp
   14000c22d:	add    BYTE PTR [rbx+0x0],dl
   14000c230:	movsxd eax,DWORD PTR [rax]
   14000c232:	jb     0x14000c234
   14000c234:	imul   eax,DWORD PTR [rax],0x740070
   14000c23a:	jae    0x14000c23c
   14000c23c:	pop    rsp
   14000c23d:	add    BYTE PTR [rbp+0x0],al
   14000c240:	jb     0x14000c242
   14000c242:	jb     0x14000c244
   14000c244:	outs   dx,DWORD PTR ds:[rsi]
   14000c245:	add    BYTE PTR [rdx+0x0],dh
   14000c248:	rex.W add BYTE PTR [rcx+0x0],spl
   14000c24c:	outs   dx,BYTE PTR ds:[rsi]
   14000c24d:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000c251:	add    BYTE PTR [rbp+0x0],ah
   14000c254:	jb     0x14000c256
   14000c256:	add    BYTE PTR cs:[rbx+0x0],ah
   14000c25a:	ins    DWORD PTR es:[rdi],dx
   14000c25b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000c25f:	add    BYTE PTR [rbx+0x0],al
   14000c262:	(bad)  
   14000c263:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000c267:	add    BYTE PTR [rbp+0x0],ah
   14000c26a:	add    BYTE PTR fs:[rax],ah
   14000c26d:	add    BYTE PTR [rbx+0x0],dh
   14000c270:	movsxd eax,DWORD PTR [rax]
   14000c272:	jb     0x14000c274
   14000c274:	imul   eax,DWORD PTR [rax],0x740070
   14000c27a:	and    BYTE PTR [rax],al
   14000c27c:	pop    rbx
   14000c27d:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d013583
   14000c283:	add    BYTE PTR [rax],ah
   14000c285:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c289:	add    BYTE PTR [rax],ah
   14000c28b:	add    BYTE PTR [rax+0x0],ch
   14000c28e:	(bad)  
   14000c28f:	add    BYTE PTR [rsi+0x0],ch
   14000c292:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000c297:	add    BYTE PTR [rax],ah
   14000c299:	add    BYTE PTR [rsi+0x0],ah
   14000c29c:	(bad)  
   14000c29d:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000c2a1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c2a5:	add    BYTE PTR [rbp+0x0],ah
   14000c2a8:	jb     0x14000c2aa
   14000c2aa:	jb     0x14000c2ac
   14000c2ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c2ad:	add    BYTE PTR [rdx+0x0],dh
	...
   14000c2b8:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14000c2bc:	rex.X add BYTE PTR [rbp+0x0],al
   14000c2c0:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14000c2c4:	imul   eax,DWORD PTR [rax],0x75006c
   14000c2ca:	jb     0x14000c2cc
   14000c2cc:	add    BYTE PTR gs:[rax],al
   14000c2cf:	add    BYTE PTR [rbx+0x0],dl
   14000c2d2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000c2d6:	push   rsp
   14000c2d7:	add    BYTE PTR [rdi+0x0],dl
   14000c2da:	add    BYTE PTR [r10+0x0],dl
   14000c2de:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14000c2e3:	add    BYTE PTR [rcx+0x0],ch
   14000c2e6:	movsxd eax,DWORD PTR [rax]
   14000c2e8:	jb     0x14000c2ea
   14000c2ea:	outs   dx,DWORD PTR ds:[rsi]
   14000c2eb:	add    BYTE PTR [rbx+0x0],dh
   14000c2ee:	outs   dx,DWORD PTR ds:[rsi]
   14000c2ef:	add    BYTE PTR [rsi+0x0],ah
   14000c2f2:	je     0x14000c2f4
   14000c2f4:	pop    rsp
   14000c2f5:	add    BYTE PTR [rdi+0x0],dl
   14000c2f8:	imul   eax,DWORD PTR [rax],0x64006e
   14000c2fe:	outs   dx,DWORD PTR ds:[rsi]
   14000c2ff:	add    BYTE PTR [rdi+0x0],dh
   14000c302:	jae    0x14000c304
   14000c304:	pop    rsp
   14000c305:	add    BYTE PTR [rbx+0x0],al
   14000c308:	jne    0x14000c30a
   14000c30a:	jb     0x14000c30c
   14000c30c:	jb     0x14000c30e
   14000c30e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c312:	je     0x14000c314
   14000c314:	push   rsi
   14000c315:	add    BYTE PTR [rbp+0x0],ah
   14000c318:	jb     0x14000c31a
   14000c31a:	jae    0x14000c31c
   14000c31c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c322:	pop    rsp
   14000c323:	add    BYTE PTR [rbx+0x0],dl
   14000c326:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000c32b:	add    BYTE PTR [rax+0x0],dh
   14000c32e:	pop    rsp
   14000c32f:	add    BYTE PTR [rdi+0x0],cl
   14000c332:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000c336:	add    BYTE PTR [r8],r8b
   14000c339:	add    BYTE PTR [rax],al
   14000c33b:	add    BYTE PTR [rax],al
   14000c33d:	add    BYTE PTR [rax],al
   14000c33f:	add    BYTE PTR [rdi+0x0],dh
   14000c342:	imul   eax,DWORD PTR [rax],0x64006e
   14000c348:	outs   dx,DWORD PTR ds:[rsi]
   14000c349:	add    BYTE PTR [rdi+0x0],dh
   14000c34c:	jae    0x14000c34e
   14000c34e:	push   rax
   14000c34f:	add    BYTE PTR [rbp+0x0],al
   14000c352:	add    BYTE PTR [rax],al
   14000c354:	add    BYTE PTR [rax],al
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	outs   dx,DWORD PTR ds:[rsi]
   14000c359:	add    BYTE PTR [rsi+0x0],ah
   14000c35c:	data16 add BYTE PTR [rax+rax*1+0x69],ch
   14000c361:	add    BYTE PTR [rsi+0x0],ch
   14000c364:	add    BYTE PTR gs:[rbx+0x0],dl
   14000c368:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c36c:	jbe    0x14000c36e
   14000c36e:	imul   eax,DWORD PTR [rax],0x690063
   14000c374:	outs   dx,BYTE PTR ds:[rsi]
   14000c375:	add    BYTE PTR [rdi+0x0],ah
	...
   14000c380:	add    BYTE PTR [ebp+0x0],ah
   14000c384:	outs   dx,BYTE PTR ds:[rsi]
   14000c385:	add    BYTE PTR [rbp+0x0],ah
   14000c388:	jb     0x14000c38a
   14000c38a:	(bad)  
   14000c38b:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c38f:	add    BYTE PTR [rdx+0x0],bh
   14000c392:	add    BYTE PTR gs:[rax],al
   14000c395:	add    BYTE PTR [rax],al
   14000c397:	add    BYTE PTR [rbx+0x0],dh
   14000c39a:	jo     0x14000c39c
   14000c39c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c3a0:	imul   eax,DWORD PTR [rax],0x6c0061
   14000c3a6:	imul   eax,DWORD PTR [rax],0x65007a
   14000c3ac:	add    BYTE PTR [rax],al
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	(bad)  
   14000c3b1:	add    BYTE PTR [rbp+0x0],dh
   14000c3b4:	add    BYTE PTR fs:[rcx+0x0],ch
   14000c3b8:	je     0x14000c3ba
   14000c3ba:	push   rbp
   14000c3bb:	add    BYTE PTR [rbx+0x0],dh
   14000c3be:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	rex ret 
   14000c3da:	add    BYTE PTR [rax+0x1],al
   14000c3dd:	add    BYTE PTR [rax],al
   14000c3df:	add    BYTE PTR [rcx],al
   14000c3e1:	add    BYTE PTR [rax],al
   14000c3e3:	add    BYTE PTR [rax],al
   14000c3e5:	add    BYTE PTR [rax],al
   14000c3e7:	add    BYTE PTR [rax-0x3d],bl
   14000c3ea:	add    BYTE PTR [rax+0x1],al
   14000c3ed:	add    BYTE PTR [rax],al
   14000c3ef:	add    BYTE PTR [rdx],al
   14000c3f1:	add    BYTE PTR [rax],al
   14000c3f3:	add    BYTE PTR [rax],al
   14000c3f5:	add    BYTE PTR [rax],al
   14000c3f7:	add    BYTE PTR [rax+0x14000c3],al
   14000c3fd:	add    BYTE PTR [rax],al
   14000c3ff:	add    BYTE PTR [rbx],al
   14000c401:	add    BYTE PTR [rax],al
   14000c403:	add    BYTE PTR [rax],al
   14000c405:	add    BYTE PTR [rax],al
   14000c407:	add    BYTE PTR [rax+0x14000c3],bl
   14000c40d:	add    BYTE PTR [rax],al
   14000c40f:	add    BYTE PTR [rax+rax*1],al
   14000c412:	add    BYTE PTR [rax],al
   14000c414:	add    BYTE PTR [rax],al
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	pop    rax
   14000c419:	mov    ah,0x0
   14000c41b:	rex add DWORD PTR [rax],eax
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	add    eax,0x0
   14000c425:	add    BYTE PTR [rax],al
   14000c427:	add    BYTE PTR [rax+0x14000c3],dh
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rsi],al
   14000c431:	add    BYTE PTR [rax],al
   14000c433:	add    BYTE PTR [rax],al
   14000c435:	add    BYTE PTR [rax],al
   14000c437:	add    BYTE PTR [rax-0x4c],dh
   14000c43a:	add    BYTE PTR [rax+0x1],al
   14000c43d:	add    BYTE PTR [rax],al
   14000c43f:	add    BYTE PTR [rcx+0x0],al
   14000c442:	jne    0x14000c444
   14000c444:	add    BYTE PTR fs:[rcx+0x0],ch
   14000c448:	je     0x14000c44a
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	add    BYTE PTR [rax],al
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000c454:	add    BYTE PTR fs:[rbp+0x0],ah
	...
   14000c460:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000c464:	jb     0x14000c466
   14000c466:	movsxd eax,DWORD PTR [rax]
   14000c468:	add    BYTE PTR gs:[rbx+0x0],dl
   14000c46c:	push   0x74007500
   14000c471:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000c475:	add    BYTE PTR [rdi+0x0],dh
   14000c478:	outs   dx,BYTE PTR ds:[rsi]
   14000c479:	add    BYTE PTR [rsi+0x0],cl
   14000c47c:	outs   dx,DWORD PTR ds:[rsi]
   14000c47d:	add    BYTE PTR [rdi+0x0],dh
	...
   14000c488:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c48c:	movsxd eax,DWORD PTR [rax]
   14000c48e:	jb     0x14000c490
   14000c490:	outs   dx,DWORD PTR ds:[rsi]
   14000c491:	add    BYTE PTR [rbx+0x0],dh
   14000c494:	outs   dx,DWORD PTR ds:[rsi]
   14000c495:	add    BYTE PTR [rsi+0x0],ah
   14000c498:	je     0x14000c49a
   14000c49a:	sub    eax,0x69005700
   14000c49f:	add    BYTE PTR [rsi+0x0],ch
   14000c4a2:	add    BYTE PTR fs:[rdi+0x0],ch
   14000c4a6:	ja     0x14000c4a8
   14000c4a8:	jae    0x14000c4aa
   14000c4aa:	sub    eax,0x65004400
   14000c4af:	add    BYTE PTR [rax+0x0],dh
   14000c4b2:	ins    BYTE PTR es:[rdi],dx
   14000c4b3:	add    BYTE PTR [rdi+0x0],ch
   14000c4b6:	jns    0x14000c4b8
   14000c4b8:	ins    DWORD PTR es:[rdi],dx
   14000c4b9:	add    BYTE PTR [rbp+0x0],ah
   14000c4bc:	outs   dx,BYTE PTR ds:[rsi]
   14000c4bd:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000c4c1:	add    BYTE PTR [rax],al
   14000c4c3:	add    BYTE PTR [rax],al
   14000c4c5:	add    BYTE PTR [rax],al
   14000c4c7:	add    BYTE PTR [rax+rax*1],bh
   14000c4ca:	push   rdx
   14000c4cb:	add    BYTE PTR [rbp+0x0],ah
   14000c4ce:	jae    0x14000c4d0
   14000c4d0:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c4d4:	ins    BYTE PTR es:[rdi],dx
   14000c4d5:	add    BYTE PTR [rsi],bh
	...
   14000c4df:	add    BYTE PTR [rax+0x0],dl
   14000c4e2:	jb     0x14000c4e4
   14000c4e4:	outs   dx,DWORD PTR ds:[rsi]
   14000c4e5:	add    BYTE PTR [rbx+0x0],ah
   14000c4e8:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c4ec:	jae    0x14000c4ee
   14000c4ee:	push   rdx
   14000c4ef:	add    BYTE PTR [rbp+0x0],ah
   14000c4f2:	jae    0x14000c4f4
   14000c4f4:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c4f8:	ins    BYTE PTR es:[rdi],dx
   14000c4f9:	add    BYTE PTR [rbx+0x0],dl
   14000c4fc:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000c501:	add    BYTE PTR [rcx+0x0],ch
   14000c504:	outs   dx,BYTE PTR ds:[rsi]
   14000c505:	add    BYTE PTR [rdi+0x0],ah
   14000c508:	cmp    al,BYTE PTR [rax]
   14000c50a:	and    BYTE PTR [rax],al
   14000c50c:	push   rdx
   14000c50d:	add    BYTE PTR [rbp+0x0],ah
   14000c510:	jae    0x14000c512
   14000c512:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c516:	ins    BYTE PTR es:[rdi],dx
   14000c517:	add    BYTE PTR [rax],ah
   14000c519:	add    BYTE PTR [rbp+0x0],ch
   14000c51c:	outs   dx,DWORD PTR ds:[rsi]
   14000c51d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c521:	add    BYTE PTR [rax],ah
   14000c523:	add    BYTE PTR [rbx+0x0],dh
   14000c526:	jo     0x14000c528
   14000c528:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c52c:	imul   eax,DWORD PTR [rax],0x690066
   14000c532:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000c537:	add    BYTE PTR [rcx+0x0],ch
   14000c53a:	outs   dx,BYTE PTR ds:[rsi]
   14000c53b:	add    BYTE PTR [rax],ah
   14000c53d:	add    BYTE PTR [rbp+0x0],dh
   14000c540:	outs   dx,BYTE PTR ds:[rsi]
   14000c541:	add    BYTE PTR [rcx+0x0],ah
   14000c544:	je     0x14000c546
   14000c546:	je     0x14000c548
   14000c548:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c54c:	add    BYTE PTR fs:[rax],ah
   14000c54f:	add    BYTE PTR [rsi+0x0],ah
   14000c552:	imul   eax,DWORD PTR [rax],0x65006c
   14000c558:	and    BYTE PTR [rax],al
   14000c55a:	imul   eax,DWORD PTR [rax],0x200073
   14000c560:	outs   dx,DWORD PTR ds:[rsi]
   14000c561:	add    BYTE PTR [rbp+0x0],dh
   14000c564:	je     0x14000c566
   14000c566:	and    BYTE PTR [rax],al
   14000c568:	outs   dx,DWORD PTR ds:[rsi]
   14000c569:	add    BYTE PTR [rsi+0x0],ah
   14000c56c:	and    BYTE PTR [rax],al
   14000c56e:	jb     0x14000c570
   14000c570:	(bad)  
   14000c571:	add    BYTE PTR [rsi+0x0],ch
   14000c574:	add    BYTE PTR [ebp+0x0],ah
	...
   14000c580:	jne    0x14000c582
   14000c582:	outs   dx,BYTE PTR ds:[rsi]
   14000c583:	add    BYTE PTR [rcx+0x0],ah
   14000c586:	je     0x14000c588
   14000c588:	je     0x14000c58a
   14000c58a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c58e:	add    BYTE PTR fs:[rax+rax*1+0x73],bl
   14000c593:	add    BYTE PTR [rbp+0x0],ah
   14000c596:	je     0x14000c598
   14000c598:	je     0x14000c59a
   14000c59a:	imul   eax,DWORD PTR [rax],0x67006e
   14000c5a0:	jae    0x14000c5a2
   14000c5a2:	pop    rbx
   14000c5a3:	add    BYTE PTR [rax+0x0],dh
   14000c5a6:	(bad)  
   14000c5a7:	add    BYTE PTR [rbx+0x0],dh
   14000c5aa:	jae    0x14000c5ac
   14000c5ac:	cmp    eax,0x73002500
   14000c5b1:	add    BYTE PTR [rbp+0x0],bl
   14000c5b4:	pop    rsp
   14000c5b5:	add    BYTE PTR [rbx+0x0],ah
   14000c5b8:	outs   dx,DWORD PTR ds:[rsi]
   14000c5b9:	add    BYTE PTR [rbp+0x0],ch
   14000c5bc:	jo     0x14000c5be
   14000c5be:	outs   dx,DWORD PTR ds:[rsi]
   14000c5bf:	add    BYTE PTR [rsi+0x0],ch
   14000c5c2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c5c6:	je     0x14000c5c8
   14000c5c8:	pop    rbx
   14000c5c9:	add    BYTE PTR [rsi+0x0],ch
   14000c5cc:	(bad)  
   14000c5cd:	add    BYTE PTR [rbp+0x0],ch
   14000c5d0:	add    BYTE PTR gs:[rip+0x69004d00],bh        # 0x1a90112d7
   14000c5d7:	add    BYTE PTR [rbx+0x0],ah
   14000c5da:	jb     0x14000c5dc
   14000c5dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c5dd:	add    BYTE PTR [rbx+0x0],dh
   14000c5e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e1:	add    BYTE PTR [rsi+0x0],ah
   14000c5e4:	je     0x14000c5e6
   14000c5e6:	sub    eax,0x69005700
   14000c5eb:	add    BYTE PTR [rsi+0x0],ch
   14000c5ee:	add    BYTE PTR fs:[rdi+0x0],ch
   14000c5f2:	ja     0x14000c5f4
   14000c5f4:	jae    0x14000c5f6
   14000c5f6:	sub    eax,0x65004400
   14000c5fb:	add    BYTE PTR [rax+0x0],dh
   14000c5fe:	ins    BYTE PTR es:[rdi],dx
   14000c5ff:	add    BYTE PTR [rdi+0x0],ch
   14000c602:	jns    0x14000c604
   14000c604:	ins    DWORD PTR es:[rdi],dx
   14000c605:	add    BYTE PTR [rbp+0x0],ah
   14000c608:	outs   dx,BYTE PTR ds:[rsi]
   14000c609:	add    BYTE PTR [rax+rax*1+0x5d],dh
   14000c60d:	add    BYTE PTR [rbx+0x0],bl
   14000c610:	jo     0x14000c612
   14000c612:	jb     0x14000c614
   14000c614:	outs   dx,DWORD PTR ds:[rsi]
   14000c615:	add    BYTE PTR [rbx+0x0],ah
   14000c618:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c61c:	jae    0x14000c61e
   14000c61e:	outs   dx,DWORD PTR ds:[rsi]
   14000c61f:	add    BYTE PTR [rdx+0x0],dh
   14000c622:	add    BYTE PTR [r10+0x0],sil
   14000c626:	movsxd eax,DWORD PTR [rax]
   14000c628:	push   0x74006900
   14000c62d:	add    BYTE PTR [rbp+0x0],ah
   14000c630:	movsxd eax,DWORD PTR [rax]
   14000c632:	je     0x14000c634
   14000c634:	jne    0x14000c636
   14000c636:	jb     0x14000c638
   14000c638:	add    BYTE PTR gs:[rip+0x6d006100],bh        # 0x1ad01273f
   14000c63f:	add    BYTE PTR [rax+rax*1+0x36],ah
   14000c643:	add    BYTE PTR [rax+rax*1],dh
   14000c646:	pop    rbp
   14000c647:	add    BYTE PTR [rax+rax*1+0x47],bl
   14000c64b:	add    BYTE PTR [rbp+0x0],ah
   14000c64e:	outs   dx,BYTE PTR ds:[rsi]
   14000c64f:	add    BYTE PTR [rbp+0x0],ah
   14000c652:	jb     0x14000c654
   14000c654:	(bad)  
   14000c655:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c659:	add    BYTE PTR [rdx+0x0],bh
   14000c65c:	add    BYTE PTR gs:[rax],al
   14000c65f:	add    BYTE PTR [rbp+0x0],dh
   14000c662:	outs   dx,BYTE PTR ds:[rsi]
   14000c663:	add    BYTE PTR [rcx+0x0],ah
   14000c666:	je     0x14000c668
   14000c668:	je     0x14000c66a
   14000c66a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c66e:	add    BYTE PTR fs:[rax+rax*1+0x73],bl
   14000c673:	add    BYTE PTR [rbp+0x0],ah
   14000c676:	je     0x14000c678
   14000c678:	je     0x14000c67a
   14000c67a:	imul   eax,DWORD PTR [rax],0x67006e
   14000c680:	jae    0x14000c682
   14000c682:	pop    rbx
   14000c683:	add    BYTE PTR [rax+0x0],dh
   14000c686:	(bad)  
   14000c687:	add    BYTE PTR [rbx+0x0],dh
   14000c68a:	jae    0x14000c68c
   14000c68c:	cmp    eax,0x73002500
   14000c691:	add    BYTE PTR [rbp+0x0],bl
   14000c694:	pop    rsp
   14000c695:	add    BYTE PTR [rbx+0x0],ah
   14000c698:	outs   dx,DWORD PTR ds:[rsi]
   14000c699:	add    BYTE PTR [rbp+0x0],ch
   14000c69c:	jo     0x14000c69e
   14000c69e:	outs   dx,DWORD PTR ds:[rsi]
   14000c69f:	add    BYTE PTR [rsi+0x0],ch
   14000c6a2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c6a6:	je     0x14000c6a8
   14000c6a8:	pop    rbx
   14000c6a9:	add    BYTE PTR [rsi+0x0],ch
   14000c6ac:	(bad)  
   14000c6ad:	add    BYTE PTR [rbp+0x0],ch
   14000c6b0:	add    BYTE PTR gs:[rip+0x69004d00],bh        # 0x1a90113b7
   14000c6b7:	add    BYTE PTR [rbx+0x0],ah
   14000c6ba:	jb     0x14000c6bc
   14000c6bc:	outs   dx,DWORD PTR ds:[rsi]
   14000c6bd:	add    BYTE PTR [rbx+0x0],dh
   14000c6c0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6c1:	add    BYTE PTR [rsi+0x0],ah
   14000c6c4:	je     0x14000c6c6
   14000c6c6:	sub    eax,0x69005700
   14000c6cb:	add    BYTE PTR [rsi+0x0],ch
   14000c6ce:	add    BYTE PTR fs:[rdi+0x0],ch
   14000c6d2:	ja     0x14000c6d4
   14000c6d4:	jae    0x14000c6d6
   14000c6d6:	sub    eax,0x65004400
   14000c6db:	add    BYTE PTR [rax+0x0],dh
   14000c6de:	ins    BYTE PTR es:[rdi],dx
   14000c6df:	add    BYTE PTR [rdi+0x0],ch
   14000c6e2:	jns    0x14000c6e4
   14000c6e4:	ins    DWORD PTR es:[rdi],dx
   14000c6e5:	add    BYTE PTR [rbp+0x0],ah
   14000c6e8:	outs   dx,BYTE PTR ds:[rsi]
   14000c6e9:	add    BYTE PTR [rax+rax*1+0x5d],dh
   14000c6ed:	add    BYTE PTR [rbx+0x0],bl
   14000c6f0:	jo     0x14000c6f2
   14000c6f2:	jb     0x14000c6f4
   14000c6f4:	outs   dx,DWORD PTR ds:[rsi]
   14000c6f5:	add    BYTE PTR [rbx+0x0],ah
   14000c6f8:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c6fc:	jae    0x14000c6fe
   14000c6fe:	outs   dx,DWORD PTR ds:[rsi]
   14000c6ff:	add    BYTE PTR [rdx+0x0],dh
   14000c702:	add    BYTE PTR [r10+0x0],sil
   14000c706:	movsxd eax,DWORD PTR [rax]
   14000c708:	push   0x74006900
   14000c70d:	add    BYTE PTR [rbp+0x0],ah
   14000c710:	movsxd eax,DWORD PTR [rax]
   14000c712:	je     0x14000c714
   14000c714:	jne    0x14000c716
   14000c716:	jb     0x14000c718
   14000c718:	add    BYTE PTR gs:[rip+0x6d006100],bh        # 0x1ad01281f
   14000c71f:	add    BYTE PTR [rax+rax*1+0x36],ah
   14000c723:	add    BYTE PTR [rax+rax*1],dh
   14000c726:	pop    rbp
   14000c727:	add    BYTE PTR [rax+rax*1+0x52],bl
   14000c72b:	add    BYTE PTR [rbp+0x0],ah
   14000c72e:	jae    0x14000c730
   14000c730:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c734:	ins    BYTE PTR es:[rdi],dx
   14000c735:	add    BYTE PTR [rax],al
   14000c737:	add    BYTE PTR [rbp+0x0],dh
   14000c73a:	outs   dx,BYTE PTR ds:[rsi]
   14000c73b:	add    BYTE PTR [rcx+0x0],ah
   14000c73e:	je     0x14000c740
   14000c740:	je     0x14000c742
   14000c742:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c746:	add    BYTE PTR fs:[rax+rax*1+0x73],bl
   14000c74b:	add    BYTE PTR [rbp+0x0],ah
   14000c74e:	je     0x14000c750
   14000c750:	je     0x14000c752
   14000c752:	imul   eax,DWORD PTR [rax],0x67006e
   14000c758:	jae    0x14000c75a
   14000c75a:	pop    rbx
   14000c75b:	add    BYTE PTR [rax+0x0],dh
   14000c75e:	(bad)  
   14000c75f:	add    BYTE PTR [rbx+0x0],dh
   14000c762:	jae    0x14000c764
   14000c764:	cmp    eax,0x73002500
   14000c769:	add    BYTE PTR [rbp+0x0],bl
   14000c76c:	add    BYTE PTR [rax],al
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	push   rax
   14000c771:	add    BYTE PTR [rcx+0x0],ah
   14000c774:	jae    0x14000c776
   14000c776:	jae    0x14000c778
   14000c778:	ja     0x14000c77a
   14000c77a:	outs   dx,DWORD PTR ds:[rsi]
   14000c77b:	add    BYTE PTR [rdx+0x0],dh
   14000c77e:	add    BYTE PTR fs:[rax],al
   14000c781:	add    BYTE PTR [rax],al
   14000c783:	add    BYTE PTR [rax],al
   14000c785:	add    BYTE PTR [rax],al
   14000c787:	add    BYTE PTR [rcx+0x0],al
   14000c78a:	add    BYTE PTR fs:[rbp+0x0],ch
   14000c78e:	imul   eax,DWORD PTR [rax],0x69006e
   14000c794:	jae    0x14000c796
   14000c796:	je     0x14000c798
   14000c798:	jb     0x14000c79a
   14000c79a:	(bad)  
   14000c79b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c79f:	add    BYTE PTR [rdx+0x0],dh
   14000c7a2:	push   rax
   14000c7a3:	add    BYTE PTR [rcx+0x0],ah
   14000c7a6:	jae    0x14000c7a8
   14000c7a8:	jae    0x14000c7aa
   14000c7aa:	ja     0x14000c7ac
   14000c7ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c7ad:	add    BYTE PTR [rdx+0x0],dh
   14000c7b0:	add    BYTE PTR fs:[rax],al
   14000c7b3:	add    BYTE PTR [rax],al
   14000c7b5:	add    BYTE PTR [rax],al
   14000c7b7:	add    BYTE PTR [rax+0x0],dl
   14000c7ba:	jb     0x14000c7bc
   14000c7bc:	outs   dx,DWORD PTR ds:[rsi]
   14000c7bd:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c7c1:	add    BYTE PTR [rbx+0x0],ah
   14000c7c4:	je     0x14000c7c6
   14000c7c6:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000c7ca:	jns    0x14000c7cc
   14000c7cc:	add    BYTE PTR [rax],al
   14000c7ce:	add    BYTE PTR [rax],al
   14000c7d0:	sub    al,BYTE PTR [rax]
   14000c7d2:	push   rbx
   14000c7d3:	add    BYTE PTR [rbp+0x0],al
   14000c7d6:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   14000c7da:	rex.WB add BYTE PTR [r8+rax*1+0x49],dl
   14000c7df:	add    BYTE PTR [rsi+0x0],dl
   14000c7e2:	add    BYTE PTR [r10],r13b
   14000c7e5:	add    BYTE PTR [rax+rax*1+0x41],al
   14000c7e9:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000c7ed:	add    BYTE PTR [rdx],ch
   14000c7ef:	add    BYTE PTR [rax+rax*1+0x45],al
   14000c7f3:	add    BYTE PTR [rax+rax*1+0x45],cl
   14000c7f7:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000c7fb:	add    BYTE PTR [rax+rax*1+0x2a],al
	...
   14000c80f:	add    BYTE PTR [rip+0x69007700],ah        # 0x1a9013f15
   14000c815:	add    BYTE PTR [rsi+0x0],ch
   14000c818:	add    BYTE PTR fs:[rcx+0x0],ch
   14000c81c:	jb     0x14000c81e
   14000c81e:	and    eax,0x73005c00
   14000c823:	add    BYTE PTR [rcx+0x0],bh
   14000c826:	jae    0x14000c828
   14000c828:	je     0x14000c82a
   14000c82a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c82e:	xor    eax,DWORD PTR [rax]
   14000c830:	xor    al,BYTE PTR [rax]
   14000c832:	pop    rsp
   14000c833:	add    BYTE PTR [rdi+0x0],ch
   14000c836:	outs   dx,DWORD PTR ds:[rsi]
   14000c837:	add    BYTE PTR [rdx+0x0],ah
   14000c83a:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14000c83f:	add    BYTE PTR [rcx+0x0],ch
   14000c842:	outs   dx,BYTE PTR ds:[rsi]
   14000c843:	add    BYTE PTR [rbx+0x0],dh
   14000c846:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000c84b:	add    BYTE PTR [rax+0x0],dh
   14000c84e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000c853:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c857:	add    BYTE PTR [rbp+0x6e],dl
   14000c85a:	(bad)  
   14000c85b:	je     0x14000c8d1
   14000c85d:	outs   dx,BYTE PTR gs:[rsi]
   14000c85f:	fs rex.RB jb 0x14000c8d5
   14000c863:	outs   dx,DWORD PTR ds:[rsi]
   14000c864:	jb     0x14000c8ac
   14000c866:	jb     0x14000c8d7
   14000c868:	ins    DWORD PTR es:[rdi],dx
   14000c869:	push   rdx
   14000c86a:	gs jae 0x14000c8e2
   14000c86d:	ins    BYTE PTR es:[rdi],dx
   14000c86e:	je     0x14000c8e3
	...
   14000c878:	rex (bad) 
   14000c87a:	add    BYTE PTR [rax+0x1],al
   14000c87d:	add    BYTE PTR [rax],al
   14000c87f:	add    BYTE PTR [rdx],al
   14000c881:	add    BYTE PTR [rax],al
   14000c883:	add    BYTE PTR [rcx],al
   14000c885:	add    BYTE PTR [rax],al
   14000c887:	add    BYTE PTR [rax],al
   14000c889:	lods   eax,DWORD PTR ds:[rsi]
   14000c88a:	add    BYTE PTR [rax+0x1],al
   14000c88d:	add    BYTE PTR [rax],al
   14000c88f:	add    BYTE PTR [rcx],al
   14000c891:	add    BYTE PTR [rax],al
   14000c893:	add    BYTE PTR [rcx],al
   14000c895:	add    BYTE PTR [rax],al
   14000c897:	add    BYTE PTR [rbx+0x0],dl
   14000c89a:	pop    rcx
   14000c89b:	add    BYTE PTR [rbx+0x0],dl
   14000c89e:	push   rsp
   14000c89f:	add    BYTE PTR [rbp+0x0],al
   14000c8a2:	rex.WRB add BYTE PTR [r8+rax*1+0x53],r11b
   14000c8a7:	add    BYTE PTR [rbp+0x0],ah
   14000c8aa:	je     0x14000c8ac
   14000c8ac:	jne    0x14000c8ae
   14000c8ae:	jo     0x14000c8b0
   14000c8b0:	pop    rsp
   14000c8b1:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000c8b5:	add    BYTE PTR [rbp+0x0],ch
   14000c8b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c8bc:	jae    0x14000c8be
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	push   rbx
   14000c8c1:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000c8c5:	add    BYTE PTR [rdx+0x0],dh
   14000c8c8:	je     0x14000c8ca
   14000c8ca:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000c8ce:	ja     0x14000c8d0
	...
   14000c8d8:	push   rbx
   14000c8d9:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000c8dd:	add    BYTE PTR [rdx+0x0],dh
   14000c8e0:	je     0x14000c8e2
   14000c8e2:	rex.W add BYTE PTR [rcx+0x0],bpl
   14000c8e6:	add    BYTE PTR [eax+0x0],ch
   14000c8ea:	add    BYTE PTR [rax],al
   14000c8ec:	add    BYTE PTR [rax],al
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	push   rbx
   14000c8f1:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c8f5:	add    BYTE PTR [rax+0x0],dh
   14000c8f8:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000c8fc:	ja     0x14000c8fe
   14000c8fe:	add    BYTE PTR [rax],al
   14000c900:	push   rbx
   14000c901:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c905:	add    BYTE PTR [rax+0x0],dh
   14000c908:	rex.W add BYTE PTR [rcx+0x0],bpl
   14000c90c:	add    BYTE PTR [eax+0x0],ch
   14000c910:	add    BYTE PTR [rax],al
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000c919:	add    BYTE PTR [rax],al
   14000c91b:	add    BYTE PTR [rax],al
   14000c91d:	add    BYTE PTR [rax],al
   14000c91f:	add    BYTE PTR [rsi+0x0],dl
   14000c922:	add    BYTE PTR [r8+rax*1+0x55],cl
   14000c927:	add    BYTE PTR [rbp+0x0],al
   14000c92a:	add    BYTE PTR [rax],al
   14000c92c:	add    BYTE PTR [rax],al
   14000c92e:	add    BYTE PTR [rax],al
   14000c930:	rex.XB add BYTE PTR [r13+0x0],sil
   14000c934:	jb     0x14000c936
   14000c936:	jb     0x14000c938
   14000c938:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c93c:	je     0x14000c93e
   14000c93e:	and    BYTE PTR [rax],al
   14000c940:	jo     0x14000c942
   14000c942:	(bad)  
   14000c943:	add    BYTE PTR [rbx+0x0],dh
   14000c946:	jae    0x14000c948
   14000c948:	and    BYTE PTR [rax],al
   14000c94a:	jae    0x14000c94c
   14000c94c:	je     0x14000c94e
   14000c94e:	(bad)  
   14000c94f:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000c953:	add    BYTE PTR [rbx+0x0],dh
   14000c956:	and    BYTE PTR [rax],al
   14000c958:	data16 add BYTE PTR [rdi+0x0],ch
   14000c95c:	jb     0x14000c95e
   14000c95e:	and    BYTE PTR [rax],al
   14000c960:	pop    rbx
   14000c961:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d013c67
   14000c967:	add    BYTE PTR [rax],ah
   14000c969:	add    BYTE PTR [rcx+0x0],ch
   14000c96c:	jae    0x14000c96e
   14000c96e:	and    BYTE PTR [rax],al
   14000c970:	pop    rbx
   14000c971:	add    BYTE PTR [rax],dh
   14000c973:	add    BYTE PTR [rax+0x0],bh
   14000c976:	and    eax,0x5d007800
   14000c97b:	add    BYTE PTR [rax],al
   14000c97d:	add    BYTE PTR [rax],al
   14000c97f:	add    BYTE PTR [rax+0x0],dl
   14000c982:	(bad)  
   14000c983:	add    BYTE PTR [rbx+0x0],dh
   14000c986:	jae    0x14000c988
   14000c988:	and    BYTE PTR [rax],al
   14000c98a:	push   0x73006100
   14000c98f:	add    BYTE PTR [rax],ah
   14000c991:	add    BYTE PTR [rsi+0x0],ah
   14000c994:	(bad)  
   14000c995:	add    BYTE PTR [rcx+0x0],ch
   14000c998:	ins    BYTE PTR es:[rdi],dx
   14000c999:	add    BYTE PTR [rbp+0x0],ah
   14000c99c:	add    BYTE PTR fs:[rax],ah
   14000c99f:	add    BYTE PTR [rbx+0x0],dh
   14000c9a2:	je     0x14000c9a4
   14000c9a4:	(bad)  
   14000c9a5:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000c9a9:	add    BYTE PTR [rbx+0x0],dh
   14000c9ac:	cmp    eax,DWORD PTR [rax]
   14000c9ae:	and    BYTE PTR [rax],al
   14000c9b0:	jae    0x14000c9b2
   14000c9b2:	jns    0x14000c9b4
   14000c9b4:	jae    0x14000c9b6
   14000c9b6:	je     0x14000c9b8
   14000c9b8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c9bc:	and    BYTE PTR [rax],al
   14000c9be:	imul   eax,DWORD PTR [rax],0x200073
   14000c9c4:	imul   eax,DWORD PTR [rax],0x20006e
   14000c9ca:	(bad)  
   14000c9cb:	add    BYTE PTR [rsi+0x0],ch
   14000c9ce:	and    BYTE PTR [rax],al
   14000c9d0:	imul   eax,DWORD PTR [rax],0x76006e
   14000c9d6:	(bad)  
   14000c9d7:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c9db:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c9df:	add    BYTE PTR [rbx+0x0],dh
   14000c9e2:	je     0x14000c9e4
   14000c9e4:	(bad)  
   14000c9e5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c9e9:	add    BYTE PTR [rsi],ch
   14000c9eb:	add    BYTE PTR [rax],al
   14000c9ed:	add    BYTE PTR [rax],al
   14000c9ef:	add    BYTE PTR [rcx+0x0],al
   14000c9f2:	jo     0x14000c9f4
   14000c9f4:	jo     0x14000c9f6
   14000c9f6:	ins    BYTE PTR es:[rdi],dx
   14000c9f7:	add    BYTE PTR [rcx+0x0],bh
   14000c9fa:	imul   eax,DWORD PTR [rax],0x67006e
   14000ca00:	and    BYTE PTR [rax],al
   14000ca02:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ca06:	je     0x14000ca08
   14000ca08:	(bad)  
   14000ca09:	add    BYTE PTR [rip+0x6e006f00],ch        # 0x1ae01390f
   14000ca0f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000ca13:	add    BYTE PTR [rax],ah
   14000ca15:	add    BYTE PTR [rbx+0x0],dh
   14000ca18:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000ca1d:	add    BYTE PTR [rcx+0x0],ch
   14000ca20:	outs   dx,BYTE PTR ds:[rsi]
   14000ca21:	add    BYTE PTR [rdi+0x0],ah
   14000ca24:	jae    0x14000ca26
   14000ca26:	and    BYTE PTR [rax],al
   14000ca28:	outs   dx,DWORD PTR ds:[rsi]
   14000ca29:	add    BYTE PTR [rsi+0x0],dh
   14000ca2c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ca30:	jb     0x14000ca32
   14000ca32:	imul   eax,DWORD PTR [rax],0x650064
   14000ca38:	jae    0x14000ca3a
   14000ca3a:	and    BYTE PTR [rax],al
   14000ca3c:	jne    0x14000ca3e
   14000ca3e:	jae    0x14000ca40
   14000ca40:	imul   eax,DWORD PTR [rax],0x67006e
   14000ca46:	and    BYTE PTR [rax],al
   14000ca48:	push   rbx
   14000ca49:	add    BYTE PTR [rbp+0x0],cl
   14000ca4c:	rex.WB add BYTE PTR [r14],bpl
   14000ca4f:	add    BYTE PTR [rsi],ch
   14000ca51:	add    BYTE PTR [rsi],ch
	...
   14000ca5f:	add    BYTE PTR [rbx+0x0],dl
   14000ca62:	jne    0x14000ca64
   14000ca64:	movsxd eax,DWORD PTR [rax]
   14000ca66:	movsxd eax,DWORD PTR [rax]
   14000ca68:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ca6c:	jae    0x14000ca6e
   14000ca6e:	data16 add BYTE PTR [rbp+0x0],dh
   14000ca72:	ins    BYTE PTR es:[rdi],dx
   14000ca73:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000ca77:	add    BYTE PTR [rax],ah
   14000ca79:	add    BYTE PTR [rcx+0x0],ah
   14000ca7c:	jo     0x14000ca7e
   14000ca7e:	jo     0x14000ca80
   14000ca80:	ins    BYTE PTR es:[rdi],dx
   14000ca81:	add    BYTE PTR [rcx+0x0],ch
   14000ca84:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ca89:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000ca8d:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000ca91:	add    BYTE PTR [rip+0x6e006f00],ch        # 0x1ae013997
   14000ca97:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000ca9b:	add    BYTE PTR [rax],ah
   14000ca9d:	add    BYTE PTR [rbx+0x0],dh
   14000caa0:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000caa5:	add    BYTE PTR [rcx+0x0],ch
   14000caa8:	outs   dx,BYTE PTR ds:[rsi]
   14000caa9:	add    BYTE PTR [rdi+0x0],ah
   14000caac:	jae    0x14000caae
   14000caae:	and    BYTE PTR [rax],al
   14000cab0:	outs   dx,DWORD PTR ds:[rsi]
   14000cab1:	add    BYTE PTR [rsi+0x0],dh
   14000cab4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cab8:	jb     0x14000caba
   14000caba:	imul   eax,DWORD PTR [rax],0x650064
   14000cac0:	jae    0x14000cac2
   14000cac2:	add    BYTE PTR cs:[rax],al
	...
   14000cacd:	add    BYTE PTR [rax],al
   14000cacf:	add    BYTE PTR [rsi+0x0],al
   14000cad2:	(bad)  
   14000cad3:	add    BYTE PTR [rcx+0x0],ch
   14000cad6:	ins    BYTE PTR es:[rdi],dx
   14000cad7:	add    BYTE PTR [rbp+0x0],ah
   14000cada:	add    BYTE PTR fs:[rax],ah
   14000cadd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000cae1:	add    BYTE PTR [rax],ah
   14000cae3:	add    BYTE PTR [rcx+0x0],ah
   14000cae6:	jo     0x14000cae8
   14000cae8:	jo     0x14000caea
   14000caea:	ins    BYTE PTR es:[rdi],dx
   14000caeb:	add    BYTE PTR [rcx+0x0],bh
   14000caee:	and    BYTE PTR [rax],al
   14000caf0:	add    BYTE PTR fs:[rcx+0x0],ah
   14000caf4:	je     0x14000caf6
   14000caf6:	(bad)  
   14000caf7:	add    BYTE PTR [rip+0x6e006f00],ch        # 0x1ae0139fd
   14000cafd:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000cb01:	add    BYTE PTR [rax],ah
   14000cb03:	add    BYTE PTR [rbx+0x0],dh
   14000cb06:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000cb0b:	add    BYTE PTR [rcx+0x0],ch
   14000cb0e:	outs   dx,BYTE PTR ds:[rsi]
   14000cb0f:	add    BYTE PTR [rdi+0x0],ah
   14000cb12:	jae    0x14000cb14
   14000cb14:	and    BYTE PTR [rax],al
   14000cb16:	outs   dx,DWORD PTR ds:[rsi]
   14000cb17:	add    BYTE PTR [rsi+0x0],dh
   14000cb1a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cb1e:	jb     0x14000cb20
   14000cb20:	imul   eax,DWORD PTR [rax],0x650064
   14000cb26:	jae    0x14000cb28
   14000cb28:	cmp    eax,DWORD PTR [rax]
   14000cb2a:	and    BYTE PTR [rax],al
   14000cb2c:	push   0x20007200
   14000cb31:	add    BYTE PTR [rip+0x30002000],bh        # 0x17000eb37
   14000cb37:	add    BYTE PTR [rax+0x0],bh
   14000cb3a:	and    eax,0x7800
   14000cb3f:	add    BYTE PTR [rbx+0x0],al
   14000cb42:	(bad)  
   14000cb43:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000cb47:	add    BYTE PTR [rcx+0x0],ch
   14000cb4a:	outs   dx,BYTE PTR ds:[rsi]
   14000cb4b:	add    BYTE PTR [rdi+0x0],ah
   14000cb4e:	and    BYTE PTR [rax],al
   14000cb50:	imul   eax,DWORD PTR [rax],0x74006e
   14000cb56:	outs   dx,DWORD PTR ds:[rsi]
   14000cb57:	add    BYTE PTR [rax],ah
   14000cb59:	add    BYTE PTR [rdx+0x0],dl
   14000cb5c:	jne    0x14000cb5e
   14000cb5e:	outs   dx,BYTE PTR ds:[rsi]
   14000cb5f:	add    BYTE PTR [rbx+0x0],dl
   14000cb62:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14000cb66:	add    BYTE PTR [r11+0x0],spl
   14000cb6a:	je     0x14000cb6c
   14000cb6c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000cb72:	push   rax
   14000cb73:	add    BYTE PTR [rcx+0x0],ah
   14000cb76:	jae    0x14000cb78
   14000cb78:	jae    0x14000cb7a
   14000cb7a:	and    BYTE PTR [rax],al
   14000cb7c:	je     0x14000cb7e
   14000cb7e:	outs   dx,DWORD PTR ds:[rsi]
   14000cb7f:	add    BYTE PTR [rax],ah
   14000cb81:	add    BYTE PTR [rbp+0x0],ah
   14000cb84:	js     0x14000cb86
   14000cb86:	add    BYTE PTR gs:[rbx+0x0],ah
   14000cb8a:	jne    0x14000cb8c
   14000cb8c:	je     0x14000cb8e
   14000cb8e:	add    BYTE PTR gs:[rax],ah
   14000cb91:	add    BYTE PTR [rbp+0x0],dh
   14000cb94:	outs   dx,BYTE PTR ds:[rsi]
   14000cb95:	add    BYTE PTR [rcx+0x0],ah
   14000cb98:	je     0x14000cb9a
   14000cb9a:	je     0x14000cb9c
   14000cb9c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cba0:	add    BYTE PTR fs:[rax],ah
   14000cba3:	add    BYTE PTR [rdi+0x0],al
   14000cba6:	rex.XB add BYTE PTR [r11+0x0],sil
   14000cbaa:	and    BYTE PTR [rax],al
   14000cbac:	data16 add BYTE PTR [rdi+0x0],ch
   14000cbb0:	jb     0x14000cbb2
   14000cbb2:	and    BYTE PTR [rax],al
   14000cbb4:	jo     0x14000cbb6
   14000cbb6:	(bad)  
   14000cbb7:	add    BYTE PTR [rbx+0x0],dh
   14000cbba:	jae    0x14000cbbc
   14000cbbc:	and    BYTE PTR [rax],al
   14000cbbe:	pop    rbx
   14000cbbf:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d013ec5
	...
   14000cbcd:	add    BYTE PTR [rax],al
   14000cbcf:	add    BYTE PTR [rcx+0x0],al
   14000cbd2:	outs   dx,BYTE PTR ds:[rsi]
   14000cbd3:	add    BYTE PTR [rax],ah
   14000cbd5:	add    BYTE PTR [rbp+0x0],dh
   14000cbd8:	outs   dx,BYTE PTR ds:[rsi]
   14000cbd9:	add    BYTE PTR [rcx+0x0],ah
   14000cbdc:	je     0x14000cbde
   14000cbde:	je     0x14000cbe0
   14000cbe0:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cbe4:	add    BYTE PTR fs:[rax],ah
   14000cbe7:	add    BYTE PTR [rdi+0x0],al
   14000cbea:	rex.XB add BYTE PTR [r8],spl
   14000cbed:	add    BYTE PTR [rdx+0x0],dh
   14000cbf0:	add    BYTE PTR gs:[rcx+0x0],dh
   14000cbf4:	jne    0x14000cbf6
   14000cbf6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000cbfa:	je     0x14000cbfc
   14000cbfc:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000cc01:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000cc05:	add    BYTE PTR [rcx+0x0],ah
   14000cc08:	je     0x14000cc0a
   14000cc0a:	and    BYTE PTR [rax],al
   14000cc0c:	imul   eax,DWORD PTR [rax],0x6d006d
   14000cc12:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   14000cc17:	add    BYTE PTR [rcx+0x0],ah
   14000cc1a:	je     0x14000cc1c
   14000cc1c:	add    BYTE PTR gs:[rax+rax*1+0x79],ch
   14000cc21:	add    BYTE PTR [rax],ah
   14000cc23:	add    BYTE PTR [rdx+0x0],dh
   14000cc26:	add    BYTE PTR gs:[rdx+0x0],ah
   14000cc2a:	outs   dx,DWORD PTR ds:[rsi]
   14000cc2b:	add    BYTE PTR [rdi+0x0],ch
   14000cc2e:	je     0x14000cc30
   14000cc30:	cmp    eax,DWORD PTR [rax]
   14000cc32:	and    BYTE PTR [rax],al
   14000cc34:	ja     0x14000cc36
   14000cc36:	add    BYTE PTR gs:[rax],ah
   14000cc39:	add    BYTE PTR [rdi+0x0],dh
   14000cc3c:	imul   eax,DWORD PTR [rax],0x6c006c
   14000cc42:	and    BYTE PTR [rax],al
   14000cc44:	jb     0x14000cc46
   14000cc46:	add    BYTE PTR gs:[rbx+0x0],dh
   14000cc4a:	jne    0x14000cc4c
   14000cc4c:	ins    DWORD PTR es:[rdi],dx
   14000cc4d:	add    BYTE PTR [rbp+0x0],ah
   14000cc50:	and    BYTE PTR [rax],al
   14000cc52:	jno    0x14000cc54
   14000cc54:	jne    0x14000cc56
   14000cc56:	add    BYTE PTR gs:[rbp+0x0],dh
   14000cc5a:	add    BYTE PTR gs:[rax],ah
   14000cc5d:	add    BYTE PTR [rbp+0x0],ah
   14000cc60:	js     0x14000cc62
   14000cc62:	add    BYTE PTR gs:[rbx+0x0],ah
   14000cc66:	jne    0x14000cc68
   14000cc68:	je     0x14000cc6a
   14000cc6a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000cc70:	and    BYTE PTR [rax],al
   14000cc72:	(bad)  
   14000cc73:	add    BYTE PTR [rsi+0x0],ah
   14000cc76:	je     0x14000cc78
   14000cc78:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cc7c:	and    BYTE PTR [rax],al
   14000cc7e:	jb     0x14000cc80
   14000cc80:	add    BYTE PTR gs:[rdx+0x0],ah
   14000cc84:	outs   dx,DWORD PTR ds:[rsi]
   14000cc85:	add    BYTE PTR [rdi+0x0],ch
   14000cc88:	je     0x14000cc8a
   14000cc8a:	imul   eax,DWORD PTR [rax],0x67006e
	...
   14000cca0:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000cca4:	add    BYTE PTR gs:[rax],ah
   14000cca7:	add    BYTE PTR [rdi+0x0],ch
   14000ccaa:	jb     0x14000ccac
   14000ccac:	and    BYTE PTR [rax],al
   14000ccae:	ins    DWORD PTR es:[rdi],dx
   14000ccaf:	add    BYTE PTR [rdi+0x0],ch
   14000ccb2:	jb     0x14000ccb4
   14000ccb4:	add    BYTE PTR gs:[rax],ah
   14000ccb7:	add    BYTE PTR [rbp+0x0],dh
   14000ccba:	outs   dx,BYTE PTR ds:[rsi]
   14000ccbb:	add    BYTE PTR [rcx+0x0],ah
   14000ccbe:	je     0x14000ccc0
   14000ccc0:	je     0x14000ccc2
   14000ccc2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ccc6:	add    BYTE PTR fs:[rax],ah
   14000ccc9:	add    BYTE PTR [rdi+0x0],al
   14000cccc:	rex.XB add BYTE PTR [r11+0x0],sil
   14000ccd0:	and    BYTE PTR [rax],al
   14000ccd2:	jb     0x14000ccd4
   14000ccd4:	add    BYTE PTR gs:[rcx+0x0],dh
   14000ccd8:	jne    0x14000ccda
   14000ccda:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ccde:	je     0x14000cce0
   14000cce0:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000cce5:	add    BYTE PTR [rcx+0x0],ah
   14000cce8:	and    BYTE PTR [rax],al
   14000ccea:	add    BYTE PTR fs:[rbp+0x0],ah
   14000ccee:	ins    BYTE PTR es:[rdi],dx
   14000ccef:	add    BYTE PTR [rcx+0x0],ah
   14000ccf2:	jns    0x14000ccf4
   14000ccf4:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ccf9:	add    BYTE PTR [rdx+0x0],dh
   14000ccfc:	add    BYTE PTR gs:[rdx+0x0],ah
   14000cd00:	outs   dx,DWORD PTR ds:[rsi]
   14000cd01:	add    BYTE PTR [rdi+0x0],ch
   14000cd04:	je     0x14000cd06
   14000cd06:	cmp    eax,DWORD PTR [rax]
   14000cd08:	and    BYTE PTR [rax],al
   14000cd0a:	ja     0x14000cd0c
   14000cd0c:	add    BYTE PTR gs:[rax],ah
   14000cd0f:	add    BYTE PTR [rdi+0x0],dh
   14000cd12:	imul   eax,DWORD PTR [rax],0x6c006c
   14000cd18:	and    BYTE PTR [rax],al
   14000cd1a:	jb     0x14000cd1c
   14000cd1c:	add    BYTE PTR gs:[rdx+0x0],ah
   14000cd20:	outs   dx,DWORD PTR ds:[rsi]
   14000cd21:	add    BYTE PTR [rdi+0x0],ch
   14000cd24:	je     0x14000cd26
   14000cd26:	and    BYTE PTR [rax],al
   14000cd28:	je     0x14000cd2a
   14000cd2a:	push   0x20006500
   14000cd2f:	add    BYTE PTR [rbx+0x0],ah
   14000cd32:	outs   dx,DWORD PTR ds:[rsi]
   14000cd33:	add    BYTE PTR [rbp+0x0],ch
   14000cd36:	jo     0x14000cd38
   14000cd38:	jne    0x14000cd3a
   14000cd3a:	je     0x14000cd3c
   14000cd3c:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14000cd50:	push   rbx
   14000cd51:	add    BYTE PTR [rbp+0x0],dh
   14000cd54:	movsxd eax,DWORD PTR [rax]
   14000cd56:	movsxd eax,DWORD PTR [rax]
   14000cd58:	add    BYTE PTR gs:[rbx+0x0],dh
   14000cd5c:	jae    0x14000cd5e
   14000cd5e:	data16 add BYTE PTR [rbp+0x0],dh
   14000cd62:	ins    BYTE PTR es:[rdi],dx
   14000cd63:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000cd67:	add    BYTE PTR [rax],ah
   14000cd69:	add    BYTE PTR [rbx+0x0],ah
   14000cd6c:	outs   dx,DWORD PTR ds:[rsi]
   14000cd6d:	add    BYTE PTR [rbp+0x0],ch
   14000cd70:	jo     0x14000cd72
   14000cd72:	ins    BYTE PTR es:[rdi],dx
   14000cd73:	add    BYTE PTR [rbp+0x0],ah
   14000cd76:	je     0x14000cd78
   14000cd78:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000cd7d:	add    BYTE PTR [rbp+0x0],ah
   14000cd80:	js     0x14000cd82
   14000cd82:	add    BYTE PTR gs:[rbx+0x0],ah
   14000cd86:	jne    0x14000cd88
   14000cd88:	je     0x14000cd8a
   14000cd8a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000cd90:	and    BYTE PTR [rax],al
   14000cd92:	outs   dx,DWORD PTR ds:[rsi]
   14000cd93:	add    BYTE PTR [rsi+0x0],ah
   14000cd96:	and    BYTE PTR [rax],al
   14000cd98:	rex.RXB add BYTE PTR [r11+0x0],r8b
   14000cd9c:	and    BYTE PTR [rax],al
   14000cd9e:	jno    0x14000cda0
   14000cda0:	jne    0x14000cda2
   14000cda2:	add    BYTE PTR gs:[rbp+0x0],dh
   14000cda6:	add    BYTE PTR gs:[rax],al
   14000cda9:	add    BYTE PTR [rax],al
   14000cdab:	add    BYTE PTR [rax],al
   14000cdad:	add    BYTE PTR [rax],al
   14000cdaf:	add    BYTE PTR [rbp+0x0],al
   14000cdb2:	js     0x14000cdb4
   14000cdb4:	add    BYTE PTR gs:[rbx+0x0],ah
   14000cdb8:	jne    0x14000cdba
   14000cdba:	je     0x14000cdbc
   14000cdbc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000cdc2:	and    BYTE PTR [rax],al
   14000cdc4:	outs   dx,DWORD PTR ds:[rsi]
   14000cdc5:	add    BYTE PTR [rsi+0x0],ah
   14000cdc8:	and    BYTE PTR [rax],al
   14000cdca:	jne    0x14000cdcc
   14000cdcc:	outs   dx,BYTE PTR ds:[rsi]
   14000cdcd:	add    BYTE PTR [rcx+0x0],ah
   14000cdd0:	je     0x14000cdd2
   14000cdd2:	je     0x14000cdd4
   14000cdd4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cdd8:	add    BYTE PTR fs:[rax],ah
   14000cddb:	add    BYTE PTR [rdi+0x0],al
   14000cdde:	rex.XB add BYTE PTR [r11+0x0],sil
   14000cde2:	and    BYTE PTR [rax],al
   14000cde4:	data16 add BYTE PTR [rcx+0x0],ah
   14000cde8:	imul   eax,DWORD PTR [rax],0x65006c
   14000cdee:	add    BYTE PTR fs:[rbx],bh
   14000cdf1:	add    BYTE PTR [rax],ah
   14000cdf3:	add    BYTE PTR [rax+0x0],ch
   14000cdf6:	jb     0x14000cdf8
   14000cdf8:	and    BYTE PTR [rax],al
   14000cdfa:	cmp    eax,0x30002000
   14000cdff:	add    BYTE PTR [rax+0x0],bh
   14000ce02:	and    eax,0x3b007800
   14000ce07:	add    BYTE PTR [rax],ah
   14000ce09:	add    BYTE PTR [rax+0x0],dh
   14000ce0c:	push   rdx
   14000ce0d:	add    BYTE PTR [rbp+0x0],ah
   14000ce10:	jae    0x14000ce12
   14000ce12:	jne    0x14000ce14
   14000ce14:	ins    BYTE PTR es:[rdi],dx
   14000ce15:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000ce19:	add    BYTE PTR [rip+0x68003e00],ch        # 0x1a8010c1f
   14000ce1f:	add    BYTE PTR [rdx+0x0],dh
   14000ce22:	push   rdx
   14000ce23:	add    BYTE PTR [rbp+0x0],ah
   14000ce26:	jae    0x14000ce28
   14000ce28:	jne    0x14000ce2a
   14000ce2a:	ins    BYTE PTR es:[rdi],dx
   14000ce2b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ce2f:	add    BYTE PTR [rip+0x30002000],bh        # 0x17000ee35
   14000ce35:	add    BYTE PTR [rax+0x0],bh
   14000ce38:	and    eax,0x7800
   14000ce3d:	add    BYTE PTR [rax],al
   14000ce3f:	add    BYTE PTR [rbp+0x0],dh
   14000ce42:	(bad)  
   14000ce43:	add    BYTE PTR [rcx+0x0],dh
   14000ce46:	add    BYTE PTR [rax],al
   14000ce48:	and    eax,0x5c007300
   14000ce4d:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e014153
   14000ce53:	add    BYTE PTR [rip+0x7300],ah        # 0x140014159
   14000ce59:	add    BYTE PTR [rax],al
   14000ce5b:	add    BYTE PTR [rax],al
   14000ce5d:	add    BYTE PTR [rax],al
   14000ce5f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000ce63:	add    BYTE PTR [rcx+0x0],ah
   14000ce66:	add    BYTE PTR fs:[rbx+0x0],dl
   14000ce6a:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14000ce6e:	push   rbx
   14000ce6f:	add    BYTE PTR [rbp+0x0],ah
   14000ce72:	je     0x14000ce74
   14000ce74:	je     0x14000ce76
   14000ce76:	imul   eax,DWORD PTR [rax],0x67006e
   14000ce7c:	jae    0x14000ce7e
   14000ce7e:	cmp    al,BYTE PTR [rax]
   14000ce80:	and    BYTE PTR [rax],al
   14000ce82:	data16 add BYTE PTR [rcx+0x0],ah
   14000ce86:	imul   eax,DWORD PTR [rax],0x69006c
   14000ce8c:	outs   dx,BYTE PTR ds:[rsi]
   14000ce8d:	add    BYTE PTR [rdi+0x0],ah
   14000ce90:	and    BYTE PTR [rax],al
   14000ce92:	outs   dx,DWORD PTR ds:[rsi]
   14000ce93:	add    BYTE PTR [rsi+0x0],ch
   14000ce96:	and    BYTE PTR [rax],al
   14000ce98:	imul   eax,DWORD PTR [rax],0x76006e
   14000ce9e:	(bad)  
   14000ce9f:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000cea3:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000cea7:	add    BYTE PTR [rax+0x0],dh
   14000ceaa:	(bad)  
   14000ceab:	add    BYTE PTR [rdx+0x0],dh
   14000ceae:	(bad)  
   14000ceaf:	add    BYTE PTR [rbp+0x0],ch
   14000ceb2:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14000ceb7:	add    BYTE PTR [rdx+0x0],dh
   14000ceba:	and    BYTE PTR [rax],al
   14000cebc:	and    eax,0x20007000
   14000cec1:	add    BYTE PTR [rip+0x20007000],ah        # 0x160013ec7
   14000cec7:	add    BYTE PTR [rip+0x20007000],ah        # 0x160013ecd
   14000cecd:	add    BYTE PTR [rip+0x7000],ah        # 0x140013ed3
	...
   14000cedf:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000cee3:	add    BYTE PTR [rcx+0x0],ah
   14000cee6:	add    BYTE PTR fs:[rbx+0x0],dl
   14000ceea:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14000ceee:	push   rbx
   14000ceef:	add    BYTE PTR [rbp+0x0],ah
   14000cef2:	je     0x14000cef4
   14000cef4:	je     0x14000cef6
   14000cef6:	imul   eax,DWORD PTR [rax],0x67006e
   14000cefc:	jae    0x14000cefe
   14000cefe:	cmp    al,BYTE PTR [rax]
   14000cf00:	and    BYTE PTR [rax],al
   14000cf02:	data16 add BYTE PTR [rcx+0x0],ah
   14000cf06:	imul   eax,DWORD PTR [rax],0x65006c
   14000cf0c:	add    BYTE PTR fs:[rax],ah
   14000cf0f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000cf13:	add    BYTE PTR [rax],ah
   14000cf15:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000cf19:	add    BYTE PTR [rbx+0x0],dh
   14000cf1c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000cf20:	imul   eax,DWORD PTR [rax],0x6c0061
   14000cf26:	imul   eax,DWORD PTR [rax],0x65007a
   14000cf2c:	and    BYTE PTR [rax],al
   14000cf2e:	jae    0x14000cf30
   14000cf30:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000cf35:	add    BYTE PTR [rcx+0x0],ch
   14000cf38:	outs   dx,BYTE PTR ds:[rsi]
   14000cf39:	add    BYTE PTR [rdi+0x0],ah
   14000cf3c:	jae    0x14000cf3e
   14000cf3e:	and    BYTE PTR [rax],al
   14000cf40:	jae    0x14000cf42
   14000cf42:	je     0x14000cf44
   14000cf44:	jb     0x14000cf46
   14000cf46:	add    BYTE PTR gs:[rcx+0x0],ah
   14000cf4a:	ins    DWORD PTR es:[rdi],dx
   14000cf4b:	add    BYTE PTR [rbx],bh
   14000cf4d:	add    BYTE PTR [rax],ah
   14000cf4f:	add    BYTE PTR [rbx+0x0],dh
   14000cf52:	je     0x14000cf54
   14000cf54:	(bad)  
   14000cf55:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000cf59:	add    BYTE PTR [rbx+0x0],dh
   14000cf5c:	and    BYTE PTR [rax],al
   14000cf5e:	xor    BYTE PTR [rax],al
   14000cf60:	js     0x14000cf62
   14000cf62:	and    eax,0x38003000
   14000cf67:	add    BYTE PTR [rax+0x0],bh
   14000cf6a:	add    BYTE PTR [rax],al
   14000cf6c:	add    BYTE PTR [rax],al
   14000cf6e:	add    BYTE PTR [rax],al
   14000cf70:	push   rbp
   14000cf71:	add    BYTE PTR [rsi+0x0],ch
   14000cf74:	(bad)  
   14000cf75:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000cf79:	add    BYTE PTR [rbp+0x0],ah
   14000cf7c:	outs   dx,BYTE PTR ds:[rsi]
   14000cf7d:	add    BYTE PTR [rax+rax*1+0x52],ah
   14000cf81:	add    BYTE PTR [rbp+0x0],ah
   14000cf84:	jae    0x14000cf86
   14000cf86:	jne    0x14000cf88
   14000cf88:	ins    BYTE PTR es:[rdi],dx
   14000cf89:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000cf8d:	add    BYTE PTR [rsi+0x0],al
   14000cf90:	jb     0x14000cf92
   14000cf92:	outs   dx,DWORD PTR ds:[rsi]
   14000cf93:	add    BYTE PTR [rbp+0x0],ch
   14000cf96:	push   rbx
   14000cf97:	add    BYTE PTR [rbp+0x0],cl
   14000cf9a:	rex.WB add BYTE PTR [r8+rax*1+0x61],al
   14000cf9f:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000cfa3:	add    BYTE PTR [rdx+0x0],dl
   14000cfa6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000cfaa:	jne    0x14000cfac
   14000cfac:	ins    BYTE PTR es:[rdi],dx
   14000cfad:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000cfb1:	add    BYTE PTR [rdx],bh
   14000cfb3:	add    BYTE PTR [rax],ah
   14000cfb5:	add    BYTE PTR [rsi+0x0],ah
   14000cfb8:	(bad)  
   14000cfb9:	add    BYTE PTR [rcx+0x0],ch
   14000cfbc:	ins    BYTE PTR es:[rdi],dx
   14000cfbd:	add    BYTE PTR [rcx+0x0],ch
   14000cfc0:	outs   dx,BYTE PTR ds:[rsi]
   14000cfc1:	add    BYTE PTR [rdi+0x0],ah
   14000cfc4:	and    BYTE PTR [rax],al
   14000cfc6:	imul   eax,DWORD PTR [rax],0x76006e
   14000cfcc:	(bad)  
   14000cfcd:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000cfd1:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000cfd5:	add    BYTE PTR [rax+0x0],dh
   14000cfd8:	(bad)  
   14000cfd9:	add    BYTE PTR [rdx+0x0],dh
   14000cfdc:	(bad)  
   14000cfdd:	add    BYTE PTR [rbp+0x0],ch
   14000cfe0:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14000cfe5:	add    BYTE PTR [rdx+0x0],dh
   14000cfe8:	and    BYTE PTR [rax],al
   14000cfea:	and    eax,0x20007000
   14000cfef:	add    BYTE PTR [rip+0x20007500],ah        # 0x1600144f5
   14000cff5:	add    BYTE PTR [rip+0x20007000],ah        # 0x160013ffb
   14000cffb:	add    BYTE PTR [rip+0x7000],ah        # 0x140014001
	...
   14000d00d:	add    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rbx+0x0],dl
   14000d012:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14000d016:	and    BYTE PTR [rax],al
   14000d018:	add    BYTE PTR fs:[rcx+0x0],ah
   14000d01c:	je     0x14000d01e
   14000d01e:	(bad)  
   14000d01f:	add    BYTE PTR [rax],ah
   14000d021:	add    BYTE PTR [rdx+0x0],dh
   14000d024:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d028:	jne    0x14000d02a
   14000d02a:	ins    BYTE PTR es:[rdi],dx
   14000d02b:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000d02f:	add    BYTE PTR [rax],ah
   14000d031:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d035:	add    BYTE PTR [rbp+0x0],ch
   14000d038:	jo     0x14000d03a
   14000d03a:	cmp    al,BYTE PTR [rax]
   14000d03c:	and    BYTE PTR [rax],al
   14000d03e:	push   rbx
   14000d03f:	add    BYTE PTR [rdi+0x0],ch
   14000d042:	jne    0x14000d044
   14000d044:	jb     0x14000d046
   14000d046:	movsxd eax,DWORD PTR [rax]
   14000d048:	add    BYTE PTR gs:[rax],ah
   14000d04b:	add    BYTE PTR [rip+0x25002000],bh        # 0x16500f051
   14000d051:	add    BYTE PTR [rbx+0x0],dh
	...
   14000d060:	push   rbx
   14000d061:	add    BYTE PTR [rbp+0x0],cl
   14000d064:	rex.WB add BYTE PTR [r8],spl
   14000d067:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000d06b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d06f:	add    BYTE PTR [rax],ah
   14000d071:	add    BYTE PTR [rdx+0x0],dh
   14000d074:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d078:	jne    0x14000d07a
   14000d07a:	ins    BYTE PTR es:[rdi],dx
   14000d07b:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000d07f:	add    BYTE PTR [rax],ah
   14000d081:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d085:	add    BYTE PTR [rbp+0x0],ch
   14000d088:	jo     0x14000d08a
   14000d08a:	cmp    al,BYTE PTR [rax]
   14000d08c:	and    BYTE PTR [rax],al
   14000d08e:	add    BYTE PTR [rbp+0x0],r12b
   14000d092:	jae    0x14000d094
   14000d094:	movsxd eax,DWORD PTR [rax]
   14000d096:	jb     0x14000d098
   14000d098:	imul   eax,DWORD PTR [rax],0x740070
   14000d09e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d0a4:	and    BYTE PTR [rax],al
   14000d0a6:	cmp    eax,0x25002000
   14000d0ab:	add    BYTE PTR [rbx+0x0],dh
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	push   rbx
   14000d0b1:	add    BYTE PTR [rbp+0x0],cl
   14000d0b4:	rex.WB add BYTE PTR [r8],spl
   14000d0b7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000d0bb:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d0bf:	add    BYTE PTR [rax],ah
   14000d0c1:	add    BYTE PTR [rdx+0x0],dh
   14000d0c4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d0c8:	jne    0x14000d0ca
   14000d0ca:	ins    BYTE PTR es:[rdi],dx
   14000d0cb:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000d0cf:	add    BYTE PTR [rax],ah
   14000d0d1:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d0d5:	add    BYTE PTR [rbp+0x0],ch
   14000d0d8:	jo     0x14000d0da
   14000d0da:	cmp    al,BYTE PTR [rax]
   14000d0dc:	and    BYTE PTR [rax],al
   14000d0de:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d0e2:	outs   dx,BYTE PTR ds:[rsi]
   14000d0e3:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d0e7:	add    BYTE PTR [rax+0x0],bh
   14000d0ea:	je     0x14000d0ec
   14000d0ec:	and    BYTE PTR [rax],al
   14000d0ee:	add    BYTE PTR fs:[rbp+0x0],ah
   14000d0f2:	jae    0x14000d0f4
   14000d0f4:	movsxd eax,DWORD PTR [rax]
   14000d0f6:	jb     0x14000d0f8
   14000d0f8:	imul   eax,DWORD PTR [rax],0x740070
   14000d0fe:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d104:	and    BYTE PTR [rax],al
   14000d106:	cmp    eax,0x25002000
   14000d10b:	add    BYTE PTR [rbx+0x0],dh
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	push   rbx
   14000d111:	add    BYTE PTR [rdi+0x0],cl
   14000d114:	add    BYTE PTR [rax+r8*1+0x57],r10b
   14000d119:	add    BYTE PTR [rcx+0x0],al
   14000d11c:	push   rdx
   14000d11d:	add    BYTE PTR [rbp+0x0],al
   14000d120:	pop    rsp
   14000d121:	add    BYTE PTR [rbp+0x0],cl
   14000d124:	imul   eax,DWORD PTR [rax],0x720063
   14000d12a:	outs   dx,DWORD PTR ds:[rsi]
   14000d12b:	add    BYTE PTR [rbx+0x0],dh
   14000d12e:	outs   dx,DWORD PTR ds:[rsi]
   14000d12f:	add    BYTE PTR [rsi+0x0],ah
   14000d132:	je     0x14000d134
   14000d134:	pop    rsp
   14000d135:	add    BYTE PTR [rdi+0x0],dl
   14000d138:	imul   eax,DWORD PTR [rax],0x64006e
   14000d13e:	outs   dx,DWORD PTR ds:[rsi]
   14000d13f:	add    BYTE PTR [rdi+0x0],dh
   14000d142:	jae    0x14000d144
   14000d144:	and    BYTE PTR [rax],al
   14000d146:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000d14b:	add    BYTE PTR [rbx+0x0],al
   14000d14e:	jne    0x14000d150
   14000d150:	jb     0x14000d152
   14000d152:	jb     0x14000d154
   14000d154:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d158:	je     0x14000d15a
   14000d15a:	push   rsi
   14000d15b:	add    BYTE PTR [rbp+0x0],ah
   14000d15e:	jb     0x14000d160
   14000d160:	jae    0x14000d162
   14000d162:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d168:	pop    rsp
   14000d169:	add    BYTE PTR [rbp+0x0],dl
   14000d16c:	outs   dx,BYTE PTR ds:[rsi]
   14000d16d:	add    BYTE PTR [rcx+0x0],ah
   14000d170:	je     0x14000d172
   14000d172:	je     0x14000d174
   14000d174:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d178:	add    BYTE PTR fs:[rbx+0x0],dl
   14000d17c:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000d181:	add    BYTE PTR [rcx+0x0],ch
   14000d184:	outs   dx,BYTE PTR ds:[rsi]
   14000d185:	add    BYTE PTR [rdi+0x0],ah
   14000d188:	jae    0x14000d18a
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	add    BYTE PTR [rax],al
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	and    eax,0x69007700
   14000d195:	add    BYTE PTR [rsi+0x0],ch
   14000d198:	add    BYTE PTR fs:[rcx+0x0],ch
   14000d19c:	jb     0x14000d19e
   14000d19e:	and    eax,0x70005c00
   14000d1a3:	add    BYTE PTR [rcx+0x0],ah
   14000d1a6:	outs   dx,BYTE PTR ds:[rsi]
   14000d1a7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000d1ab:	add    BYTE PTR [rbp+0x0],ah
   14000d1ae:	jb     0x14000d1b0
   14000d1b0:	pop    rsp
   14000d1b1:	add    BYTE PTR [rcx+0x0],ah
   14000d1b4:	movsxd eax,DWORD PTR [rax]
   14000d1b6:	je     0x14000d1b8
   14000d1b8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d1be:	jno    0x14000d1c0
   14000d1c0:	jne    0x14000d1c2
   14000d1c2:	add    BYTE PTR gs:[rbp+0x0],dh
   14000d1c6:	add    BYTE PTR gs:[rax],al
   14000d1c9:	add    BYTE PTR [rax],al
   14000d1cb:	add    BYTE PTR [rax],al
   14000d1cd:	add    BYTE PTR [rax],al
   14000d1cf:	add    BYTE PTR [rcx+0x0],al
   14000d1d2:	movsxd eax,DWORD PTR [rax]
   14000d1d4:	je     0x14000d1d6
   14000d1d6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d1dc:	push   rcx
   14000d1dd:	add    BYTE PTR [rbp+0x0],dh
   14000d1e0:	add    BYTE PTR gs:[rbp+0x0],dh
   14000d1e4:	add    BYTE PTR gs:[rbx+0x0],al
   14000d1e8:	outs   dx,DWORD PTR ds:[rsi]
   14000d1e9:	add    BYTE PTR [rdi+0x0],ch
   14000d1ec:	imul   eax,DWORD PTR [rax],0x69
   14000d1ef:	add    BYTE PTR [rbp+0x0],ah
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	add    BYTE PTR [rax],al
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	jae    0x14000d1fa
   14000d1fa:	ins    DWORD PTR es:[rdi],dx
   14000d1fb:	add    BYTE PTR [rcx+0x0],ch
   14000d1fe:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d202:	add    BYTE PTR [ecx+0x0],ch
   14000d206:	outs   dx,BYTE PTR ds:[rsi]
   14000d207:	add    BYTE PTR [rbp+0x0],ah
   14000d20a:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000d20f:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000d213:	add    BYTE PTR [rax],al
   14000d215:	add    BYTE PTR [rax],al
   14000d217:	add    BYTE PTR [rsp+rbp*2+0x6c],al
   14000d21b:	rex.RXB
   14000d21c:	gs je  0x14000d262
   14000d21f:	ins    BYTE PTR es:[rdi],dx
   14000d220:	(bad)  
   14000d221:	jae    0x14000d296
   14000d223:	rex.WRXB (bad) 
   14000d225:	push   0x65
   14000d227:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000d22b:	add    BYTE PTR [rax],al
   14000d22d:	add    BYTE PTR [rax],al
   14000d22f:	add    BYTE PTR [rdi+0x0],dh
   14000d232:	movsxd eax,DWORD PTR [rax]
   14000d234:	ins    DWORD PTR es:[rdi],dx
   14000d235:	add    BYTE PTR [rdx],bh
   14000d237:	add    BYTE PTR [rdi],ch
   14000d239:	add    BYTE PTR [rdi],ch
   14000d23b:	add    BYTE PTR [rax],al
   14000d23d:	add    BYTE PTR [rax],al
   14000d23f:	add    BYTE PTR [rip+0x7300],ah        # 0x140014545
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    BYTE PTR [rdi],ch
   14000d249:	add    BYTE PTR [rbx+0x0],dh
   14000d24c:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000d251:	add    BYTE PTR [rcx+0x0],ch
   14000d254:	outs   dx,BYTE PTR ds:[rsi]
   14000d255:	add    BYTE PTR [rdi+0x0],ah
   14000d258:	jae    0x14000d25a
   14000d25a:	(bad)  
   14000d25b:	add    BYTE PTR [rbx+0x0],ah
   14000d25e:	outs   dx,DWORD PTR ds:[rsi]
   14000d25f:	add    BYTE PTR [rbp+0x0],ch
   14000d262:	jo     0x14000d264
   14000d264:	outs   dx,DWORD PTR ds:[rsi]
   14000d265:	add    BYTE PTR [rsi+0x0],ch
   14000d268:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d26c:	je     0x14000d26e
   14000d26e:	(bad)  
	...
   14000d277:	add    dh,ah
   14000d279:	lahf   
   14000d27a:	fidivr DWORD PTR [rcx+0x4f3eae5f]
   14000d280:	mov    dl,0xfa
   14000d282:	mov    fs,WORD PTR [rdx+0x3c]
   14000d285:	adc    esp,ebx
   14000d287:	jne    0x14000d28d
   14000d289:	add    BYTE PTR [rax],al
   14000d28b:	add    BYTE PTR [rax],al
   14000d28d:	add    BYTE PTR [rax],al
   14000d28f:	add    BYTE PTR [rcx],al
   14000d291:	add    BYTE PTR [rax],al
   14000d293:	add    BYTE PTR [rax],al
   14000d295:	add    BYTE PTR [rax],al
   14000d297:	add    BYTE PTR [rdi+0x0],0x65
   14000d29b:	add    BYTE PTR [rsi+0x0],ch
   14000d29e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d2a2:	(bad)  
   14000d2a3:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000d2a7:	add    BYTE PTR [rdx+0x0],bh
   14000d2aa:	(bad)  
   14000d2ab:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d2af:	add    BYTE PTR [rdi+0x0],ch
   14000d2b2:	outs   dx,BYTE PTR ds:[rsi]
   14000d2b3:	add    BYTE PTR [rbx+0x0],dl
   14000d2b6:	je     0x14000d2b8
   14000d2b8:	(bad)  
   14000d2b9:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d2bd:	add    BYTE PTR [rax],al
   14000d2bf:	add    BYTE PTR [rbx+0x0],dl
   14000d2c2:	jns    0x14000d2c4
   14000d2c4:	jae    0x14000d2c6
   14000d2c6:	je     0x14000d2c8
   14000d2c8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000d2cc:	pop    rsp
   14000d2cd:	add    BYTE PTR [rbx+0x0],dl
   14000d2d0:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000d2d5:	add    BYTE PTR [rax+0x0],dh
   14000d2d8:	pop    rsp
   14000d2d9:	add    BYTE PTR [rbx+0x0],dl
   14000d2dc:	je     0x14000d2de
   14000d2de:	(bad)  
   14000d2df:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d2e3:	add    BYTE PTR [rbx+0x0],dh
   14000d2e6:	pop    rsp
   14000d2e7:	add    BYTE PTR [rbx+0x0],dl
   14000d2ea:	jns    0x14000d2ec
   14000d2ec:	jae    0x14000d2ee
   14000d2ee:	jo     0x14000d2f0
   14000d2f0:	jb     0x14000d2f2
   14000d2f2:	add    BYTE PTR gs:[rax+0x0],dh
   14000d2f6:	push   rbx
   14000d2f7:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d2fb:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000d2ff:	add    BYTE PTR [rbx+0x0],dh
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	add    BYTE PTR [rax],al
   14000d306:	add    BYTE PTR [rax],al
   14000d308:	rex.WB add BYTE PTR [r13+0x0],cl
   14000d30c:	add    BYTE PTR [r15+0x0],al
   14000d310:	add    BYTE PTR [r15+0x0],r11b
   14000d314:	push   rbx
   14000d315:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000d319:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000d31d:	add    BYTE PTR [rdi+0x0],bl
   14000d320:	push   rbp
   14000d321:	add    BYTE PTR [rsi+0x0],cl
   14000d324:	add    BYTE PTR [rbp+0x0],r8b
   14000d328:	push   rax
   14000d329:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000d32d:	add    BYTE PTR [rcx+0x0],bl
   14000d330:	add    BYTE PTR [r10+0x0],al
   14000d334:	rex.WR add BYTE PTR [rbp+0x0],r8b
	...
   14000d340:	jae    0x14000d342
   14000d342:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000d347:	add    BYTE PTR [rax+0x0],dh
   14000d34a:	add    BYTE PTR cs:[rbp+0x0],ah
   14000d34e:	js     0x14000d350
   14000d350:	add    BYTE PTR gs:[rax],al
	...
   14000d35f:	add    BYTE PTR [rcx+0x0],cl
   14000d362:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000d366:	rex.RXB add BYTE PTR [r13+0x0],r8b
   14000d36a:	pop    rdi
   14000d36b:	add    BYTE PTR [rbx+0x0],dl
   14000d36e:	push   rsp
   14000d36f:	add    BYTE PTR [rcx+0x0],al
   14000d372:	push   rsp
   14000d373:	add    BYTE PTR [rbp+0x0],al
   14000d376:	pop    rdi
   14000d377:	add    BYTE PTR [rdi+0x0],al
   14000d37a:	add    BYTE PTR [r14+0x0],r9b
   14000d37e:	add    BYTE PTR [r10+0x0],r10b
   14000d382:	add    BYTE PTR [r8+rax*1+0x49],cl
   14000d387:	add    BYTE PTR [rdx+0x0],bl
   14000d38a:	add    BYTE PTR [r15+0x0],r11b
   14000d38e:	push   rdx
   14000d38f:	add    BYTE PTR [rbp+0x0],al
   14000d392:	push   rbx
   14000d393:	add    BYTE PTR [rbp+0x0],al
   14000d396:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000d39b:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14000d39f:	add    BYTE PTR [rdi+0x0],bl
   14000d3a2:	add    BYTE PTR [r13+0x0],dl
   14000d3a6:	add    BYTE PTR [rcx+0x0],r9b
   14000d3aa:	push   rsp
   14000d3ab:	add    BYTE PTR [rax],al
   14000d3ad:	add    BYTE PTR [rax],al
   14000d3af:	add    BYTE PTR [rcx+0x0],cl
   14000d3b2:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000d3b6:	rex.RXB add BYTE PTR [r13+0x0],r8b
   14000d3ba:	pop    rdi
   14000d3bb:	add    BYTE PTR [rbx+0x0],dl
   14000d3be:	push   rsp
   14000d3bf:	add    BYTE PTR [rcx+0x0],al
   14000d3c2:	push   rsp
   14000d3c3:	add    BYTE PTR [rbp+0x0],al
   14000d3c6:	pop    rdi
   14000d3c7:	add    BYTE PTR [rdi+0x0],al
   14000d3ca:	add    BYTE PTR [r14+0x0],r9b
   14000d3ce:	add    BYTE PTR [r10+0x0],r10b
   14000d3d2:	add    BYTE PTR [r8+rax*1+0x49],cl
   14000d3d7:	add    BYTE PTR [rdx+0x0],bl
   14000d3da:	add    BYTE PTR [r15+0x0],r11b
   14000d3de:	push   rdx
   14000d3df:	add    BYTE PTR [rbp+0x0],al
   14000d3e2:	push   rbx
   14000d3e3:	add    BYTE PTR [rbp+0x0],al
   14000d3e6:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000d3eb:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14000d3ef:	add    BYTE PTR [rdi+0x0],bl
   14000d3f2:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14000d3f6:	rex.X add BYTE PTR [rbp+0x0],al
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	add    BYTE PTR [rax],al
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	(bad)  
   14000d401:	add    BYTE PTR [rbp+0x0],dh
   14000d404:	add    BYTE PTR fs:[rcx+0x0],ch
   14000d408:	je     0x14000d40a
   14000d40a:	add    BYTE PTR cs:[rbp+0x0],ah
   14000d40e:	js     0x14000d410
   14000d410:	add    BYTE PTR gs:[rax],al
	...
   14000d41f:	add    BYTE PTR [rcx+0x0],cl
   14000d422:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000d426:	rex.RXB add BYTE PTR [r13+0x0],r8b
   14000d42a:	pop    rdi
   14000d42b:	add    BYTE PTR [rbx+0x0],dl
   14000d42e:	push   rsp
   14000d42f:	add    BYTE PTR [rcx+0x0],al
   14000d432:	push   rsp
   14000d433:	add    BYTE PTR [rbp+0x0],al
   14000d436:	pop    rdi
   14000d437:	add    BYTE PTR [rbx+0x0],dl
   14000d43a:	push   rax
   14000d43b:	add    BYTE PTR [rbp+0x0],al
   14000d43e:	rex.XB add BYTE PTR [r9+0x0],cl
   14000d442:	add    BYTE PTR [r8+rax*1+0x49],cl
   14000d447:	add    BYTE PTR [rdx+0x0],bl
   14000d44a:	add    BYTE PTR [r15+0x0],r11b
   14000d44e:	push   rdx
   14000d44f:	add    BYTE PTR [rbp+0x0],al
   14000d452:	push   rbx
   14000d453:	add    BYTE PTR [rbp+0x0],al
   14000d456:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000d45b:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14000d45f:	add    BYTE PTR [rdi+0x0],bl
   14000d462:	add    BYTE PTR [r13+0x0],dl
   14000d466:	add    BYTE PTR [rcx+0x0],r9b
   14000d46a:	push   rsp
   14000d46b:	add    BYTE PTR [rax],al
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    BYTE PTR [rcx+0x0],cl
   14000d472:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000d476:	rex.RXB add BYTE PTR [r13+0x0],r8b
   14000d47a:	pop    rdi
   14000d47b:	add    BYTE PTR [rbx+0x0],dl
   14000d47e:	push   rsp
   14000d47f:	add    BYTE PTR [rcx+0x0],al
   14000d482:	push   rsp
   14000d483:	add    BYTE PTR [rbp+0x0],al
   14000d486:	pop    rdi
   14000d487:	add    BYTE PTR [rbx+0x0],dl
   14000d48a:	push   rax
   14000d48b:	add    BYTE PTR [rbp+0x0],al
   14000d48e:	rex.XB add BYTE PTR [r9+0x0],cl
   14000d492:	add    BYTE PTR [r8+rax*1+0x49],cl
   14000d497:	add    BYTE PTR [rdx+0x0],bl
   14000d49a:	add    BYTE PTR [r15+0x0],r11b
   14000d49e:	push   rdx
   14000d49f:	add    BYTE PTR [rbp+0x0],al
   14000d4a2:	push   rbx
   14000d4a3:	add    BYTE PTR [rbp+0x0],al
   14000d4a6:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000d4ab:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14000d4af:	add    BYTE PTR [rdi+0x0],bl
   14000d4b2:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14000d4b6:	rex.X add BYTE PTR [rbp+0x0],al
   14000d4ba:	add    BYTE PTR [rax],al
   14000d4bc:	add    BYTE PTR [rax],al
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	rex.WB add BYTE PTR [r13+0x0],cl
   14000d4c4:	add    BYTE PTR [r15+0x0],al
   14000d4c8:	add    BYTE PTR [r15+0x0],r11b
   14000d4cc:	push   rbx
   14000d4cd:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000d4d1:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000d4d5:	add    BYTE PTR [rdi+0x0],bl
   14000d4d8:	rex.XB add BYTE PTR [r15+0x0],cl
   14000d4dc:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000d4e0:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000d4e4:	push   rsp
   14000d4e5:	add    BYTE PTR [rbp+0x0],al
	...
   14000d4f0:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000d4f4:	movsxd eax,DWORD PTR [rax]
   14000d4f6:	push   0x73006500
   14000d4fb:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000d4ff:	add    BYTE PTR [rcx+0x0],ah
   14000d502:	je     0x14000d504
   14000d504:	add    BYTE PTR gs:[rbp+0x0],dl
   14000d508:	jo     0x14000d50a
   14000d50a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000d50e:	je     0x14000d510
   14000d510:	add    BYTE PTR gs:[rcx+0x0],cl
   14000d514:	ins    DWORD PTR es:[rdi],dx
   14000d515:	add    BYTE PTR [rcx+0x0],ah
   14000d518:	add    BYTE PTR [ebp+0x0],ah
   14000d51c:	push   rbx
   14000d51d:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d521:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d525:	add    BYTE PTR [rdx],bh
   14000d527:	add    BYTE PTR [rax],ah
   14000d529:	add    BYTE PTR [rbp+0x0],dl
   14000d52c:	jo     0x14000d52e
   14000d52e:	add    BYTE PTR fs:[rcx+0x0],ah
   14000d532:	je     0x14000d534
   14000d534:	imul   eax,DWORD PTR [rax],0x67006e
   14000d53a:	and    BYTE PTR [rax],al
   14000d53c:	imul   eax,DWORD PTR [rax],0x61006d
   14000d542:	add    BYTE PTR [ebp+0x0],ah
   14000d546:	and    BYTE PTR [rax],al
   14000d548:	jae    0x14000d54a
   14000d54a:	je     0x14000d54c
   14000d54c:	(bad)  
   14000d54d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d551:	add    BYTE PTR [rax],ah
   14000d553:	add    BYTE PTR [rsi+0x0],ah
   14000d556:	jb     0x14000d558
   14000d558:	outs   dx,DWORD PTR ds:[rsi]
   14000d559:	add    BYTE PTR [rbp+0x0],ch
   14000d55c:	and    BYTE PTR [rax],al
   14000d55e:	pop    rbx
   14000d55f:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d014865
   14000d565:	add    BYTE PTR [rax],ah
   14000d567:	add    BYTE PTR [rip+0x3e002d00],ch        # 0x17e01026d
   14000d56d:	add    BYTE PTR [rax],ah
   14000d56f:	add    BYTE PTR [rbx+0x0],bl
   14000d572:	and    eax,0x5d007300
	...
   14000d57f:	add    BYTE PTR [rcx+0x0],cl
   14000d582:	ins    DWORD PTR es:[rdi],dx
   14000d583:	add    BYTE PTR [rcx+0x0],ah
   14000d586:	add    BYTE PTR [ebp+0x0],ah
   14000d58a:	push   rbx
   14000d58b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d58f:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   14000d59f:	add    BYTE PTR [rbx+0x0],dl
   14000d5a2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000d5a6:	push   rsp
   14000d5a7:	add    BYTE PTR [rdi+0x0],dl
   14000d5aa:	add    BYTE PTR [r10+0x0],dl
   14000d5ae:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14000d5b3:	add    BYTE PTR [rcx+0x0],ch
   14000d5b6:	movsxd eax,DWORD PTR [rax]
   14000d5b8:	jb     0x14000d5ba
   14000d5ba:	outs   dx,DWORD PTR ds:[rsi]
   14000d5bb:	add    BYTE PTR [rbx+0x0],dh
   14000d5be:	outs   dx,DWORD PTR ds:[rsi]
   14000d5bf:	add    BYTE PTR [rsi+0x0],ah
   14000d5c2:	je     0x14000d5c4
   14000d5c4:	pop    rsp
   14000d5c5:	add    BYTE PTR [rdi+0x0],dl
   14000d5c8:	imul   eax,DWORD PTR [rax],0x64006e
   14000d5ce:	outs   dx,DWORD PTR ds:[rsi]
   14000d5cf:	add    BYTE PTR [rdi+0x0],dh
   14000d5d2:	jae    0x14000d5d4
   14000d5d4:	pop    rsp
   14000d5d5:	add    BYTE PTR [rbx+0x0],al
   14000d5d8:	jne    0x14000d5da
   14000d5da:	jb     0x14000d5dc
   14000d5dc:	jb     0x14000d5de
   14000d5de:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d5e2:	je     0x14000d5e4
   14000d5e4:	push   rsi
   14000d5e5:	add    BYTE PTR [rbp+0x0],ah
   14000d5e8:	jb     0x14000d5ea
   14000d5ea:	jae    0x14000d5ec
   14000d5ec:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d5f2:	pop    rsp
   14000d5f3:	add    BYTE PTR [rbx+0x0],dl
   14000d5f6:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000d5fb:	add    BYTE PTR [rax+0x0],dh
   14000d5fe:	pop    rsp
   14000d5ff:	add    BYTE PTR [rbx+0x0],dl
   14000d602:	je     0x14000d604
   14000d604:	(bad)  
   14000d605:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d609:	add    BYTE PTR [rax],al
   14000d60b:	add    BYTE PTR [rax],al
   14000d60d:	add    BYTE PTR [rax],al
   14000d60f:	add    BYTE PTR [rip+0x69007700],ah        # 0x1a9014d15
   14000d615:	add    BYTE PTR [rsi+0x0],ch
   14000d618:	add    BYTE PTR fs:[rcx+0x0],ch
   14000d61c:	jb     0x14000d61e
   14000d61e:	and    eax,0x0
   14000d623:	add    BYTE PTR [rax],al
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	add    BYTE PTR [rbx+0x0],dl
   14000d62a:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000d62f:	add    BYTE PTR [rax+0x0],dh
   14000d632:	pop    rsp
   14000d633:	add    BYTE PTR [rbx+0x0],dl
   14000d636:	je     0x14000d638
   14000d638:	(bad)  
   14000d639:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d63d:	add    BYTE PTR [rax],al
   14000d63f:	add    BYTE PTR [rbx+0x0],dl
   14000d642:	je     0x14000d644
   14000d644:	(bad)  
   14000d645:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d649:	add    BYTE PTR [rsi],ch
   14000d64b:	add    BYTE PTR [rcx+0x0],ch
   14000d64e:	outs   dx,BYTE PTR ds:[rsi]
   14000d64f:	add    BYTE PTR [rcx+0x0],ch
   14000d652:	add    BYTE PTR [rax],al
   14000d654:	add    BYTE PTR [rax],al
   14000d656:	add    BYTE PTR [rax],al
   14000d658:	push   rbx
   14000d659:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d65d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d661:	add    BYTE PTR [rax],al
   14000d663:	add    BYTE PTR [rax],al
   14000d665:	add    BYTE PTR [rax],al
   14000d667:	add    BYTE PTR [rbp+0x74],al
   14000d66a:	ja     0x14000d6b1
   14000d66c:	jbe    0x14000d6d3
   14000d66e:	outs   dx,BYTE PTR ds:[rsi]
   14000d66f:	je     0x14000d6c3
   14000d671:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   14000d67a:	add    BYTE PTR [rax],al
   14000d67c:	add    BYTE PTR [rax],al
   14000d67e:	add    BYTE PTR [rax],al
   14000d680:	rex.RB je 0x14000d6fa
   14000d683:	rex.RB jbe 0x14000d6eb
   14000d686:	outs   dx,BYTE PTR ds:[rsi]
   14000d687:	je     0x14000d6de
   14000d689:	outs   dx,BYTE PTR ds:[rsi]
   14000d68a:	jb     0x14000d6f1
   14000d68c:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   14000d694:	add    BYTE PTR [rax],al
   14000d696:	add    BYTE PTR [rax],al
   14000d698:	rex.RB je 0x14000d712
   14000d69b:	rex.RB jbe 0x14000d703
   14000d69e:	outs   dx,BYTE PTR ds:[rsi]
   14000d69f:	je     0x14000d6e6
   14000d6a1:	outs   dx,BYTE PTR ds:[rsi]
   14000d6a2:	(bad)  
   14000d6a3:	(bad)  
   14000d6a4:	ins    BYTE PTR es:[rdi],dx
   14000d6a5:	gs add BYTE PTR fs:[rbp+0x74],al
   14000d6aa:	ja     0x14000d6f1
   14000d6ac:	jbe    0x14000d713
   14000d6ae:	outs   dx,BYTE PTR ds:[rsi]
   14000d6af:	je     0x14000d708
   14000d6b1:	jb     0x14000d71c
   14000d6b3:	je     0x14000d71a
   14000d6b5:	add    BYTE PTR [rax],al
   14000d6b7:	add    BYTE PTR [rcx],bh
   14000d6b9:	jmp    0x15d9641b7
   14000d6be:	or     al,BYTE PTR [rbx-0x51]
   14000d6c1:	movabs ds:0x447de3defa2675,eax
   14000d6ca:	push   rdi
   14000d6cb:	add    BYTE PTR [rdi+0x0],cl
   14000d6ce:	push   rdx
   14000d6cf:	add    BYTE PTR [rax+rax*1+0x0],al
   14000d6d3:	add    BYTE PTR [rax],al
   14000d6d5:	add    BYTE PTR [rax],al
   14000d6d7:	add    BYTE PTR [rax+rax*1+0x52],bl
   14000d6db:	add    BYTE PTR [rbp+0x0],al
   14000d6de:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14000d6e2:	push   rbx
   14000d6e3:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000d6e7:	add    BYTE PTR [rcx+0x0],bl
   14000d6ea:	pop    rsp
   14000d6eb:	add    BYTE PTR [rbp+0x0],cl
   14000d6ee:	add    BYTE PTR [r11+0x0],al
   14000d6f2:	rex.W add BYTE PTR [rcx+0x0],cl
   14000d6f6:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000d6fa:	pop    rsp
   14000d6fb:	add    BYTE PTR [rbx+0x0],dl
   14000d6fe:	pop    rcx
   14000d6ff:	add    BYTE PTR [rbx+0x0],dl
   14000d702:	push   rsp
   14000d703:	add    BYTE PTR [rbp+0x0],al
   14000d706:	rex.WRB add BYTE PTR [r8+rax*1+0x53],r11b
   14000d70b:	add    BYTE PTR [rbp+0x0],al
   14000d70e:	push   rsp
   14000d70f:	add    BYTE PTR [rbp+0x0],dl
   14000d712:	push   rax
   14000d713:	add    BYTE PTR [rax],al
   14000d715:	add    BYTE PTR [rax],al
   14000d717:	add    BYTE PTR [rbx+0x0],dl
   14000d71a:	push   rcx
   14000d71b:	add    BYTE PTR [rbp+0x0],cl
   14000d71e:	add    BYTE PTR [rax],al
   14000d720:	and    eax,0x38003000
   14000d725:	add    BYTE PTR [rax+0x0],bh
	...
   14000d730:	mov    ecx,0xb39f7d7b
   14000d735:	and    dl,bl
   14000d737:	adc    DWORD PTR [rcx-0xecfff5b],eax
   14000d73d:	fs cs cmp al,0xb5
   14000d741:	jnp    0x14000d7c0
   14000d743:	lahf   
   14000d744:	mov    bl,0x20
   14000d746:	ficom  DWORD PTR [rcx]
   14000d748:	and    DWORD PTR [rbp+0x64f13000],0x13c2e
   14000d752:	add    BYTE PTR [rax],al
   14000d754:	add    BYTE PTR [rax],al
   14000d756:	add    BYTE PTR [rax],al
   14000d758:	rol    BYTE PTR [rax],0x0
   14000d75b:	add    BYTE PTR [rax],al
   14000d75d:	add    BYTE PTR [rax],al
   14000d75f:	rex.RX add BYTE PTR [rax],r8b
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	(bad)  
   14000d765:	icebp  
   14000d766:	(bad)  
   14000d767:	pop    rax
   14000d768:	add    BYTE PTR [rax],al
   14000d76a:	add    BYTE PTR [rax],al
   14000d76c:	add    al,BYTE PTR [rax]
   14000d76e:	add    BYTE PTR [rax],al
   14000d770:	and    al,0x0
   14000d772:	add    BYTE PTR [rax],al
   14000d774:	(bad)  
   14000d775:	fadd   DWORD PTR [rax]
   14000d777:	add    BYTE PTR [rax-0x34],ah
   14000d77a:	add    BYTE PTR [rax],al
   14000d77c:	add    BYTE PTR [rax],al
   14000d77e:	add    BYTE PTR [rax],al
   14000d780:	(bad)  
   14000d781:	icebp  
   14000d782:	(bad)  
   14000d783:	pop    rax
   14000d784:	add    BYTE PTR [rax],al
   14000d786:	add    BYTE PTR [rax],al
   14000d788:	or     eax,0x1c000000
   14000d78d:	add    al,BYTE PTR [rax]
   14000d78f:	add    BYTE PTR [rax-0x67ffff28],bl
   14000d795:	int3   
	...
   14000d7be:	add    BYTE PTR [rax],al
   14000d7c0:	movabs al,ds:0x0
	...
   14000d815:	add    BYTE PTR [rax],al
   14000d817:	add    BYTE PTR [rax],cl
   14000d819:	add    BYTE PTR [rcx],al
   14000d81b:	rex add DWORD PTR [rax],eax
	...
   14000d82e:	add    BYTE PTR [rax],al
   14000d830:	fsub   DWORD PTR [rax+rax*1+0x140]
   14000d837:	add    al,ah
   14000d839:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d83a:	add    BYTE PTR [rax+0x1],al
   14000d83d:	add    BYTE PTR [rax],al
   14000d83f:	add    BYTE PTR [rax-0x5b],cl
   14000d842:	add    BYTE PTR [rax+0x1],al
   14000d845:	add    BYTE PTR [rax],al
   14000d847:	add    BYTE PTR [rbx],bl
	...
   14000d851:	xor    eax,0x0
	...
   14000d85e:	add    BYTE PTR [rax],al
   14000d860:	push   rdx
   14000d861:	push   rbx
   14000d862:	rex.R push rbx
   14000d864:	sub    al,0x49
   14000d866:	rex.WRB (bad) 
   14000d868:	lea    ebx,[rbx+0x11]
   14000d86b:	rex.B pushf 
   14000d86d:	out    dx,eax
   14000d86e:	pop    rsp
   14000d86f:	loop   0x14000d8ab
   14000d871:	clc    
   14000d872:	rcl    BYTE PTR [rbp+0x1],0x0
   14000d876:	add    BYTE PTR [rax],al
   14000d878:	outs   dx,DWORD PTR ds:[rsi]
   14000d879:	outs   dx,DWORD PTR ds:[rsi]
   14000d87a:	(bad)  
   14000d87b:	gs ins BYTE PTR es:[rdi],dx
   14000d87d:	fs jb  0x14000d8ae
   14000d880:	jo     0x14000d8e6
   14000d882:	(bad)  
	...
   14000d897:	add    BYTE PTR [rdi+0x43],al
   14000d89a:	push   rsp
   14000d89b:	rex.WR add BYTE PTR [rax],r10b
   14000d89e:	add    BYTE PTR [rax],al
   14000d8a0:	(bad)  
   14000d8a1:	add    al,BYTE PTR [rax]
   14000d8a3:	add    BYTE PTR [rsi],ch
   14000d8a5:	je     0x14000d90c
   14000d8a7:	js     0x14000d91d
   14000d8a9:	and    al,0x64
   14000d8ab:	imul   eax,DWORD PTR [rax],0x20000000
   14000d8b1:	adc    al,BYTE PTR [rax]
   14000d8b3:	add    BYTE PTR [rax-0x76],bh
   14000d8b6:	add    BYTE PTR [rax],al
   14000d8b8:	cs je  0x14000d920
   14000d8bb:	js     0x14000d931
   14000d8bd:	and    al,0x6d
   14000d8bf:	outs   dx,BYTE PTR ds:[rsi]
   14000d8c0:	add    BYTE PTR [rax],al
   14000d8c2:	add    BYTE PTR [rax],al
   14000d8c4:	movabs al,ds:0x2e0000007d00009c
   14000d8cd:	je     0x14000d934
   14000d8cf:	js     0x14000d945
   14000d8d1:	and    al,0x6d
   14000d8d3:	outs   dx,BYTE PTR ds:[rsi]
   14000d8d4:	and    al,0x30
   14000d8d6:	xor    BYTE PTR [rax],al
   14000d8d8:	and    BYTE PTR [rbp+0x700000],bl
   14000d8de:	add    BYTE PTR [rax],al
   14000d8e0:	cs je  0x14000d948
   14000d8e3:	js     0x14000d959
   14000d8e5:	and    al,0x78
   14000d8e7:	add    BYTE PTR [rax+0x2f00009d],dl
   14000d8ed:	add    DWORD PTR [rax],eax
   14000d8ef:	add    BYTE PTR [rsi],ch
   14000d8f1:	je     0x14000d958
   14000d8f3:	js     0x14000d969
   14000d8f5:	and    al,0x79
   14000d8f7:	add    BYTE PTR fs:[rax],al
   14000d8fa:	add    BYTE PTR [rax],al
   14000d8fc:	add    BYTE PTR [rax+0x4d80000],ah
   14000d902:	add    BYTE PTR [rax],al
   14000d904:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000d90d:	add    BYTE PTR [rax],al
   14000d90f:	add    al,bl
   14000d911:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d912:	add    BYTE PTR [rax],al
   14000d914:	adc    BYTE PTR [rax],al
   14000d916:	add    BYTE PTR [rax],al
   14000d918:	xor    BYTE PTR cs:[rax],dh
   14000d91b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000d91e:	add    BYTE PTR [rax],al
   14000d920:	call   0x14800d9c9
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	add    BYTE PTR [rsi],ch
   14000d929:	rex.XB push r10
   14000d92b:	push   rsp
   14000d92c:	and    al,0x58
   14000d92e:	rex.XB
   14000d92f:	add    BYTE PTR [r8],al
   14000d932:	add    BYTE PTR [rax],al
   14000d934:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d936:	add    BYTE PTR [rax],al
   14000d938:	or     BYTE PTR [rax],al
   14000d93a:	add    BYTE PTR [rax],al
   14000d93c:	cs rex.XB push r10
   14000d93f:	push   rsp
   14000d940:	and    al,0x58
   14000d942:	rex.XB
   14000d943:	rex.B
   14000d944:	add    BYTE PTR [r8],al
   14000d947:	add    al,bh
   14000d949:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d94a:	add    BYTE PTR [rax],al
   14000d94c:	sub    BYTE PTR [rax],al
   14000d94e:	add    BYTE PTR [rax],al
   14000d950:	cs rex.XB push r10
   14000d953:	push   rsp
   14000d954:	and    al,0x58
   14000d956:	rex.XB push r13
   14000d958:	add    BYTE PTR [rax],al
   14000d95a:	add    BYTE PTR [rax],al
   14000d95c:	and    BYTE PTR [rbp+0x80000],ah
   14000d962:	add    BYTE PTR [rax],al
   14000d964:	cs rex.XB push r10
   14000d967:	push   rsp
   14000d968:	and    al,0x58
   14000d96a:	rex.XB pop r10
   14000d96c:	add    BYTE PTR [rax],al
   14000d96e:	add    BYTE PTR [rax],al
   14000d970:	sub    BYTE PTR [rbp+0x80000],ah
   14000d976:	add    BYTE PTR [rax],al
   14000d978:	cs rex.XB push r10
   14000d97b:	push   rsp
   14000d97c:	and    al,0x58
   14000d97e:	rex.WB
   14000d97f:	add    BYTE PTR [r8],al
   14000d982:	add    BYTE PTR [rax],al
   14000d984:	xor    BYTE PTR [rbp+0x80000],ah
   14000d98a:	add    BYTE PTR [rax],al
   14000d98c:	cs rex.XB push r10
   14000d98f:	push   rsp
   14000d990:	and    al,0x58
   14000d992:	rex.WB
   14000d993:	rex.B
   14000d994:	add    BYTE PTR [r8],al
   14000d997:	add    BYTE PTR [rax],bh
   14000d999:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d99a:	add    BYTE PTR [rax],al
   14000d99c:	or     BYTE PTR [rax],al
   14000d99e:	add    BYTE PTR [rax],al
   14000d9a0:	cs rex.XB push r10
   14000d9a3:	push   rsp
   14000d9a4:	and    al,0x58
   14000d9a6:	rex.WB pop r9
   14000d9a8:	add    BYTE PTR [rax],al
   14000d9aa:	add    BYTE PTR [rax],al
   14000d9ac:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d9ae:	add    BYTE PTR [rax],al
   14000d9b0:	or     BYTE PTR [rax],al
   14000d9b2:	add    BYTE PTR [rax],al
   14000d9b4:	cs rex.XB push r10
   14000d9b7:	push   rsp
   14000d9b8:	and    al,0x58
   14000d9ba:	rex.WB pop r10
   14000d9bc:	add    BYTE PTR [rax],al
   14000d9be:	add    BYTE PTR [rax],al
   14000d9c0:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d9c2:	add    BYTE PTR [rax],al
   14000d9c4:	ins    BYTE PTR es:[rdi],dx
   14000d9c5:	add    BYTE PTR [rax],al
   14000d9c7:	add    BYTE PTR [rsi],ch
   14000d9c9:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000d9d1:	add    BYTE PTR [rax],al
   14000d9d3:	add    al,al
   14000d9d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d9d6:	add    BYTE PTR [rax],al
   14000d9d8:	movabs al,ds:0x746164722e000032
   14000d9e1:	(bad)  
   14000d9e2:	add    BYTE PTR [rax],al
   14000d9e4:	(bad)  
   14000d9e5:	fadd   DWORD PTR [rax]
   14000d9e7:	add    BYTE PTR [rdx+rax*1+0x0],dl
   14000d9eb:	add    BYTE PTR [rsi],ch
   14000d9ed:	jb     0x14000da53
   14000d9ef:	(bad)  
   14000d9f0:	je     0x14000da53
   14000d9f2:	and    al,0x7a
   14000d9f4:	jp     0x14000da70
   14000d9f6:	fs (bad) 
   14000d9f8:	add    BYTE PTR [eax],al
   14000d9fb:	add    BYTE PTR [rax+0x780000da],bh
   14000da01:	(bad)  
   14000da02:	add    BYTE PTR [rax],al
   14000da04:	cs js  0x14000da6b
   14000da07:	(bad)  
   14000da08:	je     0x14000da6b
   14000da0a:	add    BYTE PTR [rax],al
   14000da0c:	xor    cl,ah
   14000da0e:	add    BYTE PTR [rax],al
   14000da10:	sbb    al,0x2
   14000da12:	add    BYTE PTR [rax],al
   14000da14:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000da1d:	add    BYTE PTR [rax],al
   14000da1f:	add    BYTE PTR [rbx+riz*8+0x0],cl
   14000da23:	add    BYTE PTR [rax+rax*1],dl
   14000da26:	add    BYTE PTR [rax],al
   14000da28:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000da31:	add    BYTE PTR [rax],al
   14000da33:	add    BYTE PTR [rax-0x1d],ah
   14000da36:	add    BYTE PTR [rax],al
   14000da38:	fadd   DWORD PTR [rax+rax*1]
   14000da3b:	add    BYTE PTR [rsi],ch
   14000da3d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000da45:	add    BYTE PTR [rax],al
   14000da47:	add    BYTE PTR [rax],bh
   14000da49:	call   0x14d02da4e
   14000da4e:	add    BYTE PTR [rax],al
   14000da50:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000da59:	add    BYTE PTR [rax],al
   14000da5b:	add    BYTE PTR [rax],al
   14000da5d:	add    BYTE PTR [rcx],al
   14000da5f:	add    al,dh
   14000da61:	add    BYTE PTR [rax],al
   14000da63:	add    BYTE PTR [rsi],ch
   14000da65:	fs (bad) 
   14000da67:	je     0x14000daca
   14000da69:	add    BYTE PTR [rax],al
   14000da6b:	add    BYTE PTR [rax],al
   14000da6d:	add    DWORD PTR [rcx],eax
   14000da6f:	add    BYTE PTR [rax],dh
   14000da71:	(bad)  
   14000da72:	add    BYTE PTR [rax],al
   14000da74:	cs (bad) 
   14000da77:	jae    0x14000da79
   14000da79:	add    BYTE PTR [rax],al
   14000da7b:	add    BYTE PTR [rax],al
   14000da7d:	adc    BYTE PTR [rcx],al
   14000da7f:	add    BYTE PTR [rbp+rax*1+0x0],bh
   14000da83:	add    BYTE PTR [rsi],ch
   14000da85:	jo     0x14000daeb
   14000da87:	(bad)  
   14000da88:	je     0x14000daeb
   14000da8a:	add    BYTE PTR [rax],al
   14000da8c:	add    BYTE PTR [rax],ah
   14000da8e:	add    DWORD PTR [rax],eax
   14000da90:	push   rsp
   14000da91:	add    DWORD PTR [rax],eax
   14000da93:	add    BYTE PTR [rsi],ch
   14000da95:	jb     0x14000db0a
   14000da97:	jb     0x14000dafc
   14000da99:	and    al,0x30
   14000da9b:	xor    DWORD PTR [rax],eax
   14000da9d:	add    BYTE PTR [rax],al
   14000da9f:	add    BYTE PTR [rax+0x21],ah
   14000daa2:	add    DWORD PTR [rax],eax
   14000daa4:	mov    al,0xf
   14000daa6:	add    BYTE PTR [rax],al
   14000daa8:	cs jb  0x14000db1e
   14000daab:	jb     0x14000db10
   14000daad:	and    al,0x30
   14000daaf:	xor    al,BYTE PTR [rax]
   14000dab1:	add    BYTE PTR [rax],al
   14000dab3:	add    BYTE PTR [rax],al
   14000dab5:	add    BYTE PTR [rax],al
   14000dab7:	add    BYTE PTR [rcx],al
   14000dab9:	sbb    BYTE PTR [rdx],cl
   14000dabb:	add    BYTE PTR [rax],bl
   14000dabd:	or     al,BYTE PTR fs:[rax]
   14000dac0:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000dac4:	sbb    BYTE PTR [rax+rcx*1],dh
   14000dac7:	add    BYTE PTR [rax],bl
   14000dac9:	xor    dl,BYTE PTR [rax+rsi*8]
   14000dacc:	adc    ah,al
   14000dace:	adc    BYTE PTR [rax+0x1],dh
   14000dad1:	or     al,BYTE PTR [rax+rax*1]
   14000dad4:	or     dh,BYTE PTR [rsi+rax*1]
   14000dad7:	add    BYTE PTR [rdx],cl
   14000dad9:	xor    al,BYTE PTR [rsi]
   14000dadb:	jo     0x14000daf6
   14000dadd:	and    al,0x9
   14000dadf:	add    BYTE PTR [rdx],dl
   14000dae1:	add    DWORD PTR [rax],esi
   14000dae3:	add    BYTE PTR [rbx],cl
   14000dae5:	lock or eax,esp
   14000dae8:	(bad)  
   14000dae9:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360df60
   14000daf0:	add    dh,BYTE PTR [rax]
   14000daf2:	add    BYTE PTR [rax],al
   14000daf4:	clc    
   14000daf5:	fwait
   14000daf6:	add    BYTE PTR [rax],al
   14000daf8:	jo     0x14000dafb
   14000dafa:	add    BYTE PTR [rax],al
   14000dafc:	sbb    DWORD PTR [rdi],ebx
   14000dafe:	add    eax,0x32340d00
   14000db03:	add    BYTE PTR [rip+0x6003001],cl        # 0x146010b0a
   14000db09:	jo     0x14000db0b
   14000db0b:	add    al,bh
   14000db0d:	fwait
   14000db0e:	add    BYTE PTR [rax],al
   14000db10:	jo     0x14000db13
   14000db12:	add    BYTE PTR [rax],al
   14000db14:	add    DWORD PTR [rdi],ecx
   14000db16:	(bad)  
   14000db17:	add    BYTE PTR [rdi],cl
   14000db19:	fs (bad) 
   14000db1b:	add    BYTE PTR [rdi],cl
   14000db1d:	xor    al,0x6
   14000db1f:	add    BYTE PTR [rdi],cl
   14000db21:	xor    cl,BYTE PTR [rbx]
   14000db23:	jo     0x14000db26
   14000db25:	add    al,0x1
   14000db27:	add    BYTE PTR [rdx+rax*2],al
   14000db2a:	add    BYTE PTR [rax],al
   14000db2c:	add    DWORD PTR [rsi],eax
   14000db2e:	add    al,BYTE PTR [rax]
   14000db30:	(bad)  
   14000db31:	xor    al,BYTE PTR [rdx]
   14000db33:	xor    BYTE PTR [rcx],al
   14000db35:	sub    BYTE PTR [rip+0x23741f00],cl        # 0x16374fa3b
   14000db3b:	add    BYTE PTR [rdi],bl
   14000db3d:	and    DWORD PTR fs:[rax],eax
   14000db40:	(bad)  
   14000db41:	xor    al,0x20
   14000db43:	add    BYTE PTR [rdi],bl
   14000db45:	add    DWORD PTR [rdx],ebx
   14000db47:	add    BYTE PTR [rax],bl
   14000db49:	lock (bad) 
   14000db4b:	loopne 0x14000db61
   14000db4d:	rcl    BYTE PTR [rdx],1
   14000db4f:	rcl    BYTE PTR [rax],0x50
   14000db52:	add    BYTE PTR [rax],al
   14000db54:	sbb    DWORD PTR [rip+0x1170009],esp        # 0x14117db63
   14000db5a:	adc    al,0x0
   14000db5c:	or     esi,eax
   14000db5e:	or     eax,edx
   14000db60:	(bad)  
   14000db61:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360dfd8
   14000db68:	add    dl,BYTE PTR [rax+0x0]
   14000db6b:	add    al,bh
   14000db6d:	fwait
   14000db6e:	add    BYTE PTR [rax],al
   14000db70:	cwde   
   14000db71:	add    BYTE PTR [rax],al
   14000db73:	add    BYTE PTR [rcx],al
   14000db75:	or     al,BYTE PTR [rax+rax*1]
   14000db78:	or     dh,BYTE PTR [rcx+rcx*1]
   14000db7b:	add    BYTE PTR [rdx],cl
   14000db7d:	push   rdx
   14000db7e:	(bad)  
   14000db7f:	(bad)  
   14000db80:	sbb    DWORD PTR [rdi],esp
   14000db82:	or     al,BYTE PTR [rax]
   14000db84:	sbb    DWORD PTR [rbx+rdx*1+0x0],esp
   14000db88:	sbb    DWORD PTR [rdx+rdx*1],esi
   14000db8b:	add    BYTE PTR [rcx],bl
   14000db8d:	xchg   edx,eax
   14000db8e:	adc    dh,al
   14000db90:	adc    al,ah
   14000db92:	(bad)  
   14000db93:	ror    BYTE PTR [rax+rsi*2],0xb
   14000db97:	push   rax
   14000db98:	clc    
   14000db99:	fwait
   14000db9a:	add    BYTE PTR [rax],al
   14000db9c:	rex.W add BYTE PTR [rax],al
   14000db9f:	add    BYTE PTR [rcx],al
   14000dba1:	adc    eax,DWORD PTR [rsi]
   14000dba3:	add    BYTE PTR [rbx],dl
   14000dba5:	or     al,BYTE PTR fs:[rax]
   14000dba8:	adc    esi,DWORD PTR [rcx+rcx*1]
   14000dbab:	add    BYTE PTR [rbx],dl
   14000dbad:	push   rdx
   14000dbae:	pshufw mm3,QWORD PTR [rcx],0x23
   14000dbb2:	(bad)  
   14000dbb3:	add    BYTE PTR [rip+0x15001374],dl        # 0x15500ef2d
   14000dbb9:	xor    al,0x12
   14000dbbb:	add    BYTE PTR [rip+0xfffffffff8500bf2],dl        # 0x13850e7b3
   14000dbc1:	fwait
   14000dbc2:	add    BYTE PTR [rax],al
   14000dbc4:	jo     0x14000dbc6
   14000dbc6:	add    BYTE PTR [rax],al
   14000dbc8:	add    DWORD PTR [rdx],ecx
   14000dbca:	add    al,0x0
   14000dbcc:	or     dh,BYTE PTR [rsp+rcx*1]
   14000dbcf:	add    BYTE PTR [rdx],cl
   14000dbd1:	xchg   edx,eax
   14000dbd2:	(bad)  
   14000dbd3:	jo     0x14000dbee
   14000dbd5:	and    al,BYTE PTR [rsi]
   14000dbd7:	add    BYTE PTR [rsp+rsi*1],dl
   14000dbda:	adc    al,BYTE PTR [rax]
   14000dbdc:	adc    al,0xd2
   14000dbde:	or     eax,0xb600c70
   14000dbe3:	push   rax
   14000dbe4:	clc    
   14000dbe5:	fwait
   14000dbe6:	add    BYTE PTR [rax],al
   14000dbe8:	(bad)  
   14000dbe9:	add    BYTE PTR [rax],al
   14000dbeb:	add    BYTE PTR [rcx],bl
   14000dbed:	(bad)  
   14000dbee:	(bad)  
   14000dbef:	add    BYTE PTR [rdi],cl
   14000dbf1:	adc    eax,DWORD PTR fs:[rax]
   14000dbf4:	sysenter 
   14000dbf6:	adc    BYTE PTR [rax],al
   14000dbf8:	psrld  mm1,QWORD PTR [rbx]
   14000dbfb:	jo     0x14000dbf5
   14000dbfd:	fwait
   14000dbfe:	add    BYTE PTR [rax],al
   14000dc00:	(bad)  
   14000dc01:	add    BYTE PTR [rax],al
   14000dc03:	add    BYTE PTR [rcx],al
   14000dc05:	adc    DWORD PTR [rax+rax*1],eax
   14000dc08:	adc    DWORD PTR [rdx],esi
   14000dc0a:	or     eax,0xb600c70
   14000dc0f:	xor    BYTE PTR [rcx],al
   14000dc11:	adc    eax,DWORD PTR [rcx]
   14000dc13:	add    BYTE PTR [rbx],dl
   14000dc15:	rex.X add BYTE PTR [rax],al
   14000dc18:	sbb    DWORD PTR [rcx+rcx*1],ebp
   14000dc1b:	add    BYTE PTR [rdx],bl
   14000dc1d:	add    DWORD PTR [rax+0x0],edx
   14000dc20:	adc    esi,eax
   14000dc22:	adc    eax,esp
   14000dc24:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b60e89b
   14000dc2b:	push   rax
   14000dc2c:	or     dh,BYTE PTR [rax]
   14000dc2e:	add    BYTE PTR [rax],al
   14000dc30:	clc    
   14000dc31:	fwait
   14000dc32:	add    BYTE PTR [rax],al
   14000dc34:	jo     0x14000dc38
   14000dc36:	add    BYTE PTR [rax],al
   14000dc38:	add    DWORD PTR [rdx],edx
   14000dc3a:	add    eax,0xe421200
   14000dc3f:	jo     0x14000dc4e
   14000dc41:	(bad)  
   14000dc42:	or     al,0x50
   14000dc44:	or     esi,DWORD PTR [rax]
   14000dc46:	add    BYTE PTR [rax],al
   14000dc48:	add    DWORD PTR [rax+rcx*1],edx
   14000dc4b:	add    BYTE PTR [rsp+riz*2],dl
   14000dc4e:	or     BYTE PTR [rax],al
   14000dc50:	adc    al,0x54
   14000dc52:	(bad)  
   14000dc53:	add    BYTE PTR [rsp+rsi*1],dl
   14000dc56:	(bad)  
   14000dc57:	add    BYTE PTR [rdx+rsi*1],dl
   14000dc5a:	adc    BYTE PTR [rax+0x1],dh
   14000dc5d:	or     DWORD PTR [rcx],eax
   14000dc5f:	add    BYTE PTR [rcx],cl
   14000dc61:	(bad)  
   14000dc62:	add    BYTE PTR [rax],al
   14000dc64:	add    DWORD PTR [rax],esp
   14000dc66:	or     al,0x0
   14000dc68:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   14000dc6c:	and    BYTE PTR [rbx+rcx*1+0x0],dl
   14000dc70:	and    BYTE PTR [rdx+rcx*1],dh
   14000dc73:	add    BYTE PTR [rax],ah
   14000dc75:	xor    bl,BYTE PTR [rax+rsi*8]
   14000dc78:	sbb    ah,al
   14000dc7a:	sbb    al,dl
   14000dc7c:	(bad)  
   14000dc7d:	rcl    BYTE PTR [rax+rsi*2],0x1
   14000dc81:	adc    ecx,DWORD PTR [rcx]
   14000dc83:	add    BYTE PTR [rbx],dl
   14000dc85:	(bad)  
   14000dc86:	(bad)  
   14000dc88:	or     eax,0x9d00be0
   14000dc8d:	rol    BYTE PTR [rdi],0x70
   14000dc90:	(bad)  
   14000dc91:	(bad)  
   14000dc92:	add    eax,0x300450
   14000dc97:	add    BYTE PTR [rcx],al
   14000dc99:	sbb    eax,0x321d0006
   14000dc9e:	sbb    eax,esp
   14000dca0:	(bad)  
   14000dca1:	jo     0x14000dcb9
   14000dca3:	(bad)  
   14000dca4:	adc    eax,0x1301450
   14000dca9:	adc    al,0x8
   14000dcab:	add    BYTE PTR [rsp+riz*2],dl
   14000dcae:	or     al,BYTE PTR [rax]
   14000dcb0:	adc    al,0x54
   14000dcb2:	or     DWORD PTR [rax],eax
   14000dcb4:	adc    al,0x34
   14000dcb6:	or     BYTE PTR [rax],al
   14000dcb8:	adc    al,0x52
   14000dcba:	adc    BYTE PTR [rax+0x19],dh
   14000dcbd:	cmp    eax,0x742c000d
   14000dcc2:	(bad)  
   14000dcc3:	and    BYTE PTR [rsp+riz*2],ch
   14000dcc6:	(bad)  
   14000dcc7:	and    BYTE PTR [rsp+rsi*1],ch
   14000dcca:	sbb    eax,0x16012c20
   14000dccf:	and    BYTE PTR [rax],bl
   14000dcd1:	lock (bad) 
   14000dcd3:	loopne 0x14000dce9
   14000dcd5:	rcl    BYTE PTR [rdx],1
   14000dcd7:	rcl    BYTE PTR [rax],0x50
   14000dcda:	add    BYTE PTR [rax],al
   14000dcdc:	clc    
   14000dcdd:	fwait
   14000dcde:	add    BYTE PTR [rax],al
   14000dce0:	movabs al,ds:0x1400081401000100
   14000dce9:	fs or  al,0x0
   14000dcec:	adc    al,0x54
   14000dcee:	or     eax,DWORD PTR [rax]
   14000dcf0:	adc    al,0x34
   14000dcf2:	or     al,BYTE PTR [rax]
   14000dcf4:	adc    al,0x72
   14000dcf6:	adc    BYTE PTR [rax+0x1],dh
   14000dcf9:	and    ecx,DWORD PTR [rbx]
   14000dcfb:	add    BYTE PTR [rbx],ah
   14000dcfd:	je     0x14000dd22
   14000dcff:	add    BYTE PTR [rbx],ah
   14000dd01:	and    al,BYTE PTR fs:[rax]
   14000dd04:	and    esi,DWORD PTR [rcx+riz*1]
   14000dd07:	add    BYTE PTR [rbx],ah
   14000dd09:	add    DWORD PTR [rax+rax*1],ebx
   14000dd0c:	sbb    al,ah
   14000dd0e:	(bad)  
   14000dd0f:	rcl    BYTE PTR [rax+rdx*2],1
   14000dd12:	add    BYTE PTR [rax],al
   14000dd14:	add    DWORD PTR [rip+0x34050002],eax        # 0x17405dd1c
   14000dd1a:	add    DWORD PTR [rax],eax
   14000dd1c:	sbb    DWORD PTR [rip+0x3417000a],esp        # 0x17417dd2c
   14000dd22:	adc    al,0x0
   14000dd24:	(bad)  
   14000dd25:	xchg   edx,eax
   14000dd26:	adc    al,dh
   14000dd28:	(bad)  
   14000dd29:	loopne 0x14000dd37
   14000dd2b:	ror    BYTE PTR [rdx],1
   14000dd2d:	ror    BYTE PTR [rax],0x70
   14000dd30:	(bad)  
   14000dd31:	(bad)  
   14000dd32:	(bad)  
   14000dd33:	push   rax
   14000dd34:	clc    
   14000dd35:	fwait
   14000dd36:	add    BYTE PTR [rax],al
   14000dd38:	rex.W add BYTE PTR [rax],al
   14000dd3b:	add    BYTE PTR [rcx],al
   14000dd3d:	invd   
   14000dd3f:	add    BYTE PTR [rdi],cl
   14000dd41:	push   rdx
   14000dd42:	or     esi,eax
   14000dd44:	or     eax,esp
   14000dd46:	(bad)  
   14000dd47:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360e1be
   14000dd4e:	add    dh,BYTE PTR [rax]
   14000dd50:	add    DWORD PTR [rax],ebx
   14000dd52:	or     al,BYTE PTR [rax]
   14000dd54:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   14000dd58:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000dd5c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000dd5f:	add    BYTE PTR [rax],bl
   14000dd61:	xor    dl,BYTE PTR [rax+rsi*8]
   14000dd64:	adc    ah,al
   14000dd66:	adc    BYTE PTR [rax+0x1],dh
   14000dd69:	adc    ecx,DWORD PTR [rax]
   14000dd6b:	add    BYTE PTR [rbx],dl
   14000dd6d:	push   rsp
   14000dd6e:	adc    al,BYTE PTR [rax]
   14000dd70:	adc    esi,DWORD PTR [rcx+rdx*1]
   14000dd73:	add    BYTE PTR [rbx],dl
   14000dd75:	mov    dl,0xf
   14000dd77:	loopne 0x14000dd86
   14000dd79:	jo     0x14000dd87
   14000dd7b:	(bad)  
   14000dd7c:	add    DWORD PTR [rax],edx
   14000dd7e:	(bad)  
   14000dd7f:	add    BYTE PTR [rax],dl
   14000dd81:	or     al,BYTE PTR fs:[rax]
   14000dd84:	adc    BYTE PTR [rax+rcx*1],dh
   14000dd87:	add    BYTE PTR [rax],dl
   14000dd89:	push   rdx
   14000dd8a:	or     al,0x70
   14000dd8c:	add    DWORD PTR [rdx],edx
   14000dd8e:	(bad)  
   14000dd8f:	add    BYTE PTR [rdx],dl
   14000dd91:	je     0x14000dd9f
   14000dd93:	add    BYTE PTR [rdx],dl
   14000dd95:	xor    al,0xb
   14000dd97:	add    BYTE PTR [rdx],dl
   14000dd99:	jb     0x14000dda6
   14000dd9b:	push   rax
   14000dd9c:	add    DWORD PTR [rcx+rax*1],eax
   14000dd9f:	add    BYTE PTR [rdx+riz*2],al
   14000dda2:	add    BYTE PTR [rax],al
   14000dda4:	add    DWORD PTR [rax],ebx
   14000dda6:	or     BYTE PTR [rax],al
   14000dda8:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   14000ddac:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000ddb0:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000ddb3:	add    BYTE PTR [rax],bl
   14000ddb5:	push   rdx
   14000ddb6:	adc    al,0x70
   14000ddb8:	add    DWORD PTR [rbx],ebx
   14000ddba:	(bad)  
   14000ddbb:	add    BYTE PTR [rbx],bl
   14000ddbd:	(bad)  
   14000ddbe:	(bad)  
   14000ddbf:	lock adc eax,0x127013e0
   14000ddc5:	(bad)  
   14000ddc6:	adc    DWORD PTR [rax+0x10],edx
   14000ddc9:	xor    BYTE PTR [rax],al
   14000ddcb:	add    BYTE PTR [rcx],al
   14000ddcd:	sbb    BYTE PTR [rdx],cl
   14000ddcf:	add    BYTE PTR [rax],bl
   14000ddd1:	fs or  al,0x0
   14000ddd4:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14000ddd8:	sbb    BYTE PTR [rdx+rcx*1],dh
   14000dddb:	add    BYTE PTR [rax],bl
   14000dddd:	push   rdx
   14000ddde:	adc    al,0xf0
   14000dde0:	adc    ah,al
   14000dde2:	adc    BYTE PTR [rax+0x1],dh
   14000dde5:	(bad)  
   14000dde7:	add    BYTE PTR [rdi],cl
   14000dde9:	xor    al,0xf
   14000ddeb:	add    BYTE PTR [rdi],cl
   14000dded:	xchg   edx,eax
   14000ddee:	or     esi,DWORD PTR [rax+0x1]
   14000ddf1:	or     DWORD PTR [rdx],eax
   14000ddf3:	add    BYTE PTR [rcx],cl
   14000ddf5:	xchg   edx,eax
   14000ddf6:	add    eax,0x10b0130
   14000ddfb:	add    BYTE PTR [rbx],cl
   14000ddfd:	(bad)  
   14000ddfe:	add    BYTE PTR [rax],al
   14000de00:	add    DWORD PTR [rdi],ecx
   14000de02:	(bad)  
   14000de03:	add    BYTE PTR [rdi],cl
   14000de05:	je     0x14000de0a
   14000de07:	add    BYTE PTR [rdx],cl
   14000de09:	add    al,BYTE PTR fs:[rax]
   14000de0c:	add    eax,0x1000134
   14000de11:	or     al,BYTE PTR [rax+rax*1]
   14000de14:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14000de18:	add    eax,0x1000134
   14000de1d:	sbb    al,0xc
   14000de1f:	add    BYTE PTR [rsp+riz*2],bl
   14000de22:	(bad)  
   14000de23:	add    BYTE PTR [rsp+rdx*2],bl
   14000de26:	or     eax,0xc341c00
   14000de2b:	add    BYTE PTR [rdx+rdx*2],bl
   14000de2e:	sbb    al,dh
   14000de30:	(bad)  
   14000de31:	loopne 0x14000de47
   14000de33:	rcl    BYTE PTR [rdx],1
   14000de35:	rcl    BYTE PTR [rax],0x70
   14000de38:	add    DWORD PTR [rax+rcx*1],edx
   14000de3b:	add    BYTE PTR [rsp+rsi*1],dl
   14000de3e:	adc    al,BYTE PTR [rax]
   14000de40:	adc    al,0xb2
   14000de42:	or     eax,0x9e00bf0
   14000de47:	rol    BYTE PTR [rdi],0x70
   14000de4a:	(bad)  
   14000de4b:	push   rax
   14000de4c:	add    DWORD PTR [rdx],ecx
   14000de4e:	add    al,0x0
   14000de50:	or     dh,BYTE PTR [rdi+rcx*1]
   14000de53:	add    BYTE PTR [rdx],cl
   14000de55:	xchg   edx,eax
   14000de56:	(bad)  
   14000de57:	jo     0x14000de5a
   14000de59:	and    ecx,DWORD PTR [rip+0x1c742300]        # 0x15c75015f
   14000de5f:	add    BYTE PTR [rbx],ah
   14000de61:	sbb    eax,DWORD PTR fs:[rax]
   14000de64:	and    esi,DWORD PTR [rdx+rbx*1]
   14000de67:	add    BYTE PTR [rbx],ah
   14000de69:	add    DWORD PTR [rax+rax*1],edx
   14000de6c:	sbb    al,dh
   14000de6e:	(bad)  
   14000de6f:	loopne 0x14000de85
   14000de71:	rcl    BYTE PTR [rdx],1
   14000de73:	rcl    BYTE PTR [rax],0x50
   14000de76:	add    BYTE PTR [rax],al
   14000de78:	add    DWORD PTR [rdi],ebx
   14000de7a:	or     al,0x0
   14000de7c:	(bad)  
   14000de7d:	je     0x14000de90
   14000de7f:	add    BYTE PTR [rdi],bl
   14000de81:	adc    BYTE PTR fs:[rax],al
   14000de84:	(bad)  
   14000de85:	xor    al,0xf
   14000de87:	add    BYTE PTR [rdi],bl
   14000de89:	jb     0x14000dea3
   14000de8b:	lock (bad) 
   14000de8d:	loopne 0x14000dea3
   14000de8f:	rcl    BYTE PTR [rdx],1
   14000de91:	rcl    BYTE PTR [rax],0x50
   14000de94:	add    DWORD PTR [rax],edx
   14000de96:	(bad)  
   14000de97:	add    BYTE PTR [rax],dl
   14000de99:	push   rsp
   14000de9a:	(bad)  
   14000de9b:	add    BYTE PTR [rax],dl
   14000de9d:	xor    al,0xd
   14000de9f:	add    BYTE PTR [rax],dl
   14000dea1:	xchg   edx,eax
   14000dea2:	or     al,0x70
   14000dea4:	add    DWORD PTR [rdx],ecx
   14000dea6:	add    al,0x0
   14000dea8:	or     dh,BYTE PTR [rdi+rcx*1]
   14000deab:	add    BYTE PTR [rdx],cl
   14000dead:	mov    dl,0x6
   14000deaf:	jo     0x14000deb2
   14000deb1:	adc    BYTE PTR [rdi],al
   14000deb3:	add    BYTE PTR [rax],dl
   14000deb5:	movabs ds:0x60047005d007e009,al
   14000debe:	add    esi,DWORD PTR [rax]
   14000dec0:	add    dl,BYTE PTR [rax+0x0]
   14000dec3:	add    BYTE PTR [rcx],al
   14000dec5:	(bad)  
   14000dec6:	or     al,BYTE PTR [rax]
   14000dec8:	(bad)  
   14000dec9:	xor    al,0x15
   14000decb:	add    BYTE PTR [rdi],dl
   14000decd:	mov    dl,0x10
   14000decf:	lock (bad) 
   14000ded1:	loopne 0x14000dedf
   14000ded3:	ror    BYTE PTR [rdx],1
   14000ded5:	ror    BYTE PTR [rax],0x70
   14000ded8:	(bad)  
   14000ded9:	(bad)  
   14000deda:	(bad)  
   14000dedb:	push   rax
   14000dedc:	add    DWORD PTR [rax],edx
   14000dede:	(bad)  
   14000dedf:	add    BYTE PTR [rax],dl
   14000dee1:	xor    al,0xd
   14000dee3:	add    BYTE PTR [rax],dl
   14000dee5:	jb     0x14000def0
   14000dee7:	loopne 0x14000def0
   14000dee9:	(bad)  
   14000deea:	(bad)  
   14000deeb:	push   rax
   14000deec:	add    DWORD PTR [rax],ebx
   14000deee:	or     al,BYTE PTR [rax]
   14000def0:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   14000def4:	sbb    BYTE PTR [rsp+rcx*1+0x0],dl
   14000def8:	sbb    BYTE PTR [rbx+rcx*1],dh
   14000defb:	add    BYTE PTR [rax],bl
   14000defd:	push   rdx
   14000defe:	adc    al,0xf0
   14000df00:	adc    ah,al
   14000df02:	adc    BYTE PTR [rax+0x1],dh
   14000df05:	and    eax,0x3425000a
   14000df0a:	(bad)  
   14000df0b:	add    BYTE PTR [rip+0x1cf01ed2],ah        # 0x15cf0fde3
   14000df11:	loopne 0x14000df2d
   14000df13:	rcr    BYTE PTR [rax],1
   14000df15:	rcl    BYTE PTR [rsi],0x70
   14000df18:	adc    eax,0x1501460
   14000df1d:	sbb    DWORD PTR [rdx],ecx
   14000df1f:	add    BYTE PTR [rcx],bl
   14000df21:	fs adc al,0x0
   14000df24:	sbb    DWORD PTR [rdx+rdx*1],esi
   14000df27:	add    BYTE PTR [rcx],bl
   14000df29:	mov    dl,0x12
   14000df2b:	lock adc al,ah
   14000df2e:	(bad)  
   14000df2f:	ror    BYTE PTR [rax+rsi*2],0xb
   14000df33:	push   rax
   14000df34:	sbb    DWORD PTR [rax],esi
   14000df36:	or     eax,DWORD PTR [rax]
   14000df38:	(bad)  
   14000df39:	xor    al,0x56
   14000df3b:	add    BYTE PTR [rdi],bl
   14000df3d:	add    DWORD PTR [rsi+0x0],ecx
   14000df40:	adc    al,dh
   14000df42:	(bad)  
   14000df43:	loopne 0x14000df51
   14000df45:	ror    BYTE PTR [rdx],1
   14000df47:	ror    BYTE PTR [rax],0x70
   14000df4a:	(bad)  
   14000df4b:	(bad)  
   14000df4c:	(bad)  
   14000df4d:	push   rax
   14000df4e:	add    BYTE PTR [rax],al
   14000df50:	clc    
   14000df51:	fwait
   14000df52:	add    BYTE PTR [rax],al
   14000df54:	(bad)  
   14000df55:	add    al,BYTE PTR [rax]
   14000df57:	add    BYTE PTR [rcx],al
   14000df59:	sbb    DWORD PTR [rdx],ecx
   14000df5b:	add    BYTE PTR [rcx],bl
   14000df5d:	je     0x14000df68
   14000df5f:	add    BYTE PTR [rcx],bl
   14000df61:	or     BYTE PTR fs:[rax],al
   14000df64:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000df68:	sbb    DWORD PTR [rsi+rax*1],esi
   14000df6b:	add    BYTE PTR [rcx],bl
   14000df6d:	xor    dl,BYTE PTR [rip+0x81501e0]        # 0x14815e153
   14000df73:	add    BYTE PTR [rip+0x15000874],dl        # 0x15500e7ed
   14000df79:	fs (bad) 
   14000df7b:	add    BYTE PTR [rip+0x15000634],dl        # 0x15500e5b5
   14000df81:	xor    dl,BYTE PTR [rcx]
   14000df83:	loopne 0x14000df86
   14000df85:	sbb    BYTE PTR [rdx],cl
   14000df87:	add    BYTE PTR [rax],bl
   14000df89:	ltr    WORD PTR fs:[rax]
   14000df8d:	push   rsp
   14000df8e:	(bad)  
   14000df8f:	add    BYTE PTR [rax],bl
   14000df91:	xor    al,0xd
   14000df93:	add    BYTE PTR [rax],bl
   14000df95:	jb     0x14000dfab
   14000df97:	lock adc ah,al
   14000df9a:	adc    BYTE PTR [rax+0x1],dh
   14000df9d:	(bad)  
   14000df9e:	or     BYTE PTR [rax],al
   14000dfa0:	(bad)  
   14000dfa1:	xor    al,0xb
   14000dfa3:	add    BYTE PTR [rsi],dl
   14000dfa5:	xor    dl,BYTE PTR [rdx]
   14000dfa7:	lock adc al,ah
   14000dfaa:	(bad)  
   14000dfab:	jo     0x14000dfba
   14000dfad:	(bad)  
   14000dfae:	or     al,0x50
   14000dfb0:	add    DWORD PTR [rdi],ebx
   14000dfb2:	or     al,BYTE PTR [rax]
   14000dfb4:	(bad)  
   14000dfb5:	xor    al,0x18
   14000dfb7:	add    BYTE PTR [rdi],bl
   14000dfb9:	repnz adc eax,0x11e013f0
   14000dfbf:	ror    BYTE PTR [rdi],1
   14000dfc1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b60ec38
   14000dfc8:	add    DWORD PTR [rdi],ecx
   14000dfca:	(bad)  
   14000dfcb:	add    BYTE PTR [rdi],cl
   14000dfcd:	mov    dl,0x8
   14000dfcf:	lock (bad) 
   14000dfd1:	loopne 0x14000dfd7
   14000dfd3:	jo     0x14000dfd8
   14000dfd5:	xor    BYTE PTR [rdx],al
   14000dfd7:	push   rax
   14000dfd8:	add    DWORD PTR [rax+rcx*1],edx
   14000dfdb:	add    BYTE PTR [rsp+riz*2],dl
   14000dfde:	or     DWORD PTR [rax],eax
   14000dfe0:	adc    al,0x54
   14000dfe2:	or     BYTE PTR [rax],al
   14000dfe4:	adc    al,0x34
   14000dfe6:	(bad)  
   14000dfe7:	add    BYTE PTR [rdx+rsi*1],dl
   14000dfea:	adc    BYTE PTR [rax+0x1],dh
   14000dfed:	sbb    eax,0x741d000c
   14000dff2:	or     eax,DWORD PTR [rax]
   14000dff4:	sbb    eax,0x1d000a64
   14000dff9:	push   rsp
   14000dffa:	or     DWORD PTR [rax],eax
   14000dffc:	sbb    eax,0x1d000834
   14000e001:	xor    bl,BYTE PTR [rcx]
   14000e003:	lock (bad) 
   14000e005:	loopne 0x14000e01c
   14000e007:	rol    BYTE PTR [rcx],0x1d
   14000e00a:	(bad)  
   14000e00b:	add    BYTE PTR [rip+0x1d000d34],bl        # 0x15d00ed45
   14000e011:	push   rdx
   14000e012:	(bad)  
   14000e013:	jo     0x14000e02a
   14000e015:	(bad)  
   14000e016:	adc    al,0x50
   14000e018:	add    DWORD PTR [rbx],edx
   14000e01a:	or     BYTE PTR [rax],al
   14000e01c:	adc    esi,DWORD PTR [rdi+rcx*1]
   14000e01f:	add    BYTE PTR [rbx],dl
   14000e021:	push   rdx
   14000e022:	or     al,0xf0
   14000e024:	or     ah,al
   14000e026:	or     BYTE PTR [rax+0x7],dh
   14000e029:	(bad)  
   14000e02a:	(bad)  
   14000e02b:	push   rax
   14000e02c:	add    DWORD PTR [rsi],eax
   14000e02e:	add    al,BYTE PTR [rax]
   14000e030:	(bad)  
   14000e031:	xor    al,BYTE PTR [rdx]
   14000e033:	jo     0x14000e04e
   14000e035:	adc    eax,DWORD PTR [rcx]
   14000e037:	add    BYTE PTR [rdx+riz*2],al
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	clc    
   14000e03d:	fwait
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	sub    BYTE PTR [rax],al
   14000e042:	add    BYTE PTR [rax],al
   14000e044:	sbb    DWORD PTR [rax],ebp
   14000e046:	(bad)  
   14000e047:	add    BYTE PTR [rdi],dl
   14000e049:	xor    al,0x3b
   14000e04b:	add    BYTE PTR [rdi],dl
   14000e04d:	add    DWORD PTR [rsi],esi
   14000e04f:	add    BYTE PTR [rax],cl
   14000e051:	jo     0x14000e05a
   14000e053:	(bad)  
   14000e054:	(bad)  
   14000e055:	push   rax
   14000e056:	add    BYTE PTR [rax],al
   14000e058:	clc    
   14000e059:	fwait
   14000e05a:	add    BYTE PTR [rax],al
   14000e05c:	movabs al,ds:0x1c000b1c09000001
   14000e065:	je     0x14000e083
   14000e067:	add    BYTE PTR [rsp+riz*2],bl
   14000e06a:	sbb    eax,DWORD PTR [rax]
   14000e06c:	sbb    al,0x34
   14000e06e:	sbb    al,BYTE PTR [rax]
   14000e070:	sbb    al,0x1
   14000e072:	(bad)  
   14000e073:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0f469
   14000e079:	rol    BYTE PTR [rax],0x0
   14000e07c:	out    0x99,al
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	add    DWORD PTR [rax],eax
   14000e082:	add    BYTE PTR [rax],al
   14000e084:	adc    BYTE PTR [rbx-0x6a8a0000],0x0
   14000e08b:	add    BYTE PTR [rsi],ah
   14000e08d:	popf   
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	jbe    0x14000e027
   14000e092:	add    BYTE PTR [rax],al
   14000e094:	add    BYTE PTR [rax],al
   14000e096:	add    BYTE PTR [rax],al
   14000e098:	add    DWORD PTR [rax],eax
   14000e09a:	add    BYTE PTR [rax],al
   14000e09c:	adc    DWORD PTR [rdx],ecx
   14000e09e:	add    al,0x0
   14000e0a0:	or     dh,BYTE PTR [rsi+rax*1]
   14000e0a3:	add    BYTE PTR [rdx],cl
   14000e0a5:	xor    al,BYTE PTR [rsi]
   14000e0a7:	jo     0x14000e08f
   14000e0a9:	cdq    
   14000e0aa:	add    BYTE PTR [rax],al
   14000e0ac:	add    DWORD PTR [rax],eax
   14000e0ae:	add    BYTE PTR [rax],al
   14000e0b0:	gs xchg esi,eax
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	stos   BYTE PTR es:[rdi],al
   14000e0b5:	xchg   esi,eax
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	rex.WX popf 
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	add    BYTE PTR [rax],al
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	add    DWORD PTR [rsi],eax
   14000e0c2:	add    al,BYTE PTR [rax]
   14000e0c4:	(bad)  
   14000e0c5:	xor    al,BYTE PTR [rdx]
   14000e0c7:	push   rax
   14000e0c8:	or     DWORD PTR [rcx+rax*1],eax
   14000e0cb:	add    BYTE PTR [rdx+riz*1],al
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	out    0x99,al
   14000e0d2:	add    BYTE PTR [rax],al
   14000e0d4:	add    DWORD PTR [rax],eax
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	ins    BYTE PTR es:[rdi],dx
   14000e0d9:	xchg   edi,eax
   14000e0da:	add    BYTE PTR [rax],al
   14000e0dc:	movabs ds:0xa200000001000097,al
   14000e0e5:	xchg   edi,eax
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	or     DWORD PTR [rdx],ecx
   14000e0ea:	add    al,0x0
   14000e0ec:	or     dh,BYTE PTR [rsi+rax*1]
   14000e0ef:	add    BYTE PTR [rdx],cl
   14000e0f1:	xor    al,BYTE PTR [rsi]
   14000e0f3:	jo     0x14000e0db
   14000e0f5:	cdq    
   14000e0f6:	add    BYTE PTR [rax],al
   14000e0f8:	add    DWORD PTR [rax],eax
   14000e0fa:	add    BYTE PTR [rax],al
   14000e0fc:	jge    0x14000e096
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	mov    al,0x98
   14000e102:	add    BYTE PTR [rax],al
   14000e104:	jo     0x14000e0a3
   14000e106:	add    BYTE PTR [rax],al
   14000e108:	mov    al,0x98
   14000e10a:	add    BYTE PTR [rax],al
   14000e10c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740de116
   14000e112:	or     DWORD PTR [rax],eax
   14000e114:	or     eax,0x1500632
   14000e119:	or     al,0x2
   14000e11b:	add    BYTE PTR [rcx+rax*1],cl
   14000e11e:	adc    DWORD PTR [rax],eax
   14000e120:	add    DWORD PTR [rax],eax
   14000e122:	add    BYTE PTR [rax],al
   14000e124:	add    BYTE PTR [rax],al
   14000e126:	add    BYTE PTR [rax],al
   14000e128:	add    DWORD PTR [rcx+rax*1],eax
   14000e12b:	add    BYTE PTR [rdx+rdx*1],al
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	or     bh,ah
	...
   14000e13a:	add    BYTE PTR [rax],al
   14000e13c:	and    cl,ch
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	test   al,0xa3
   14000e142:	add    BYTE PTR [rax],al
   14000e144:	adc    ch,ah
	...
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	ret    0xeb
   14000e153:	add    BYTE PTR [rax-0x4fffff5f],dh
   14000e159:	out    0x0,al
	...
   14000e163:	add    ah,ch
   14000e165:	jmp    0x14000e167
   14000e167:	add    BYTE PTR [rax-0x5d],dl
   14000e16a:	add    BYTE PTR [rax],al
   14000e16c:	nop
   14000e16d:	out    0x0,al
	...
   14000e177:	add    BYTE PTR [rsp+rbp*8],bl
   14000e17a:	add    BYTE PTR [rax],al
   14000e17c:	xor    BYTE PTR [rbx-0x19b80000],ah
	...
   14000e18a:	add    BYTE PTR [rax],al
   14000e18c:	in     al,dx
   14000e18e:	add    BYTE PTR [rax],al
   14000e190:	call   0xf800e237
   14000e195:	in     al,0x0
	...
   14000e19f:	add    BYTE PTR [rdx-0x14],ah
   14000e1a2:	add    BYTE PTR [rax],al
   14000e1a4:	pop    rax
   14000e1a5:	movabs eax,ds:0xe4380000
   14000e1ae:	add    BYTE PTR [rax],al
   14000e1b0:	add    BYTE PTR [rax],al
   14000e1b2:	add    BYTE PTR [rax],al
   14000e1b4:	test   ah,ch
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	fsub   DWORD PTR [rax-0x19180000]
	...
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	scas   al,BYTE PTR es:[rdi]
   14000e1c9:	in     al,dx
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	mov    BYTE PTR [rbx-0x1be80000],ah
	...
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	(bad)  
   14000e1dd:	in     al,dx
   14000e1de:	add    BYTE PTR [rax],al
   14000e1e0:	mov    eax,0xc80000a0
   14000e1e5:	in     al,0x0
	...
   14000e1ef:	add    dh,dh
   14000e1f1:	in     al,dx
   14000e1f2:	add    BYTE PTR [rax],al
   14000e1f4:	push   0xffffffffe80000a1
   14000e1f9:	in     al,0x0
	...
   14000e203:	add    BYTE PTR [rsi],dl
   14000e205:	in     eax,dx
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	mov    BYTE PTR [rcx-0x1a800000],ah
	...
   14000e216:	add    BYTE PTR [rax],al
   14000e218:	ss in  eax,dx
   14000e21a:	add    BYTE PTR [rax],al
   14000e21c:	and    BYTE PTR [rdx-0x1a400000],ah
	...
   14000e22a:	add    BYTE PTR [rax],al
   14000e22c:	(bad)  
   14000e22d:	in     eax,dx
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	(bad)  
   14000e231:	movabs ds:0xe6180000,al
   14000e23a:	add    BYTE PTR [rax],al
   14000e23c:	add    BYTE PTR [rax],al
   14000e23e:	add    BYTE PTR [rax],al
   14000e240:	test   ch,ch
   14000e242:	add    BYTE PTR [rax],al
   14000e244:	mov    eax,0xf80000a2
   14000e249:	out    0x0,al
	...
   14000e253:	add    al,al
   14000e255:	in     eax,dx
   14000e256:	add    BYTE PTR [rax],al
   14000e258:	cwde   
   14000e259:	movabs ds:0xe4f80000,eax
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	add    BYTE PTR [rax],al
   14000e266:	add    BYTE PTR [rax],al
   14000e268:	(bad)  
   14000e269:	out    dx,al
   14000e26a:	add    BYTE PTR [rax],al
   14000e26c:	cwde   
   14000e26d:	movabs eax,ds:0xe3880000
   14000e276:	add    BYTE PTR [rax],al
   14000e278:	add    BYTE PTR [rax],al
   14000e27a:	add    BYTE PTR [rax],al
   14000e27c:	xchg   edx,eax
   14000e27d:	out    dx,al
   14000e27e:	add    BYTE PTR [rax],al
   14000e280:	sub    BYTE PTR [rax-0x1ca00000],ah
	...
   14000e28e:	add    BYTE PTR [rax],al
   14000e290:	int3   
   14000e291:	out    dx,al
   14000e292:	add    BYTE PTR [rax],al
   14000e294:	add    BYTE PTR [rax-0x1a900000],ah
	...
   14000e2a2:	add    BYTE PTR [rax],al
   14000e2a4:	shl    cl,1
   14000e2a6:	add    BYTE PTR [rax],al
   14000e2a8:	adc    BYTE PTR [rdx-0x1ba00000],ah
	...
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	(bad)  
   14000e2b9:	icebp  
   14000e2ba:	add    BYTE PTR [rax],al
   14000e2bc:	add    BYTE PTR [rcx-0x1b580000],ah
	...
   14000e2ca:	add    BYTE PTR [rax],al
   14000e2cc:	(bad)  
   14000e2cd:	repnz add BYTE PTR [rax],al
   14000e2d0:	movabs rax,ds:0xe6380000
   14000e2da:	add    BYTE PTR [rax],al
   14000e2dc:	add    BYTE PTR [rax],al
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	repnz add BYTE PTR ds:[rax],al
   14000e2e4:	fsub   DWORD PTR [rdx-0x1a300000]
	...
   14000e2f2:	add    BYTE PTR [rax],al
   14000e2f4:	(bad)  
   14000e2f5:	repnz add BYTE PTR [rax],al
   14000e2f8:	jo     0x14000e29c
   14000e2fa:	add    BYTE PTR [rax],al
   14000e2fc:	js     0x14000e2e1
	...
   14000e306:	add    BYTE PTR [rax],al
   14000e308:	test   dl,dh
   14000e30a:	add    BYTE PTR [rax],al
   14000e30c:	sbb    BYTE PTR [rax-0x1ab00000],ah
	...
   14000e31a:	add    BYTE PTR [rax],al
   14000e31c:	xchg   edx,eax
   14000e31d:	repnz add BYTE PTR [rax],al
   14000e320:	lock movabs eax,ds:0xe7f00000
   14000e32a:	add    BYTE PTR [rax],al
   14000e32c:	add    BYTE PTR [rax],al
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	rex.WR
   14000e331:	repz add BYTE PTR [rax],al
   14000e334:	nop
   14000e335:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e336:	add    BYTE PTR [rax],al
   14000e338:	(bad)  
   14000e339:	in     eax,0x0
	...
   14000e343:	add    BYTE PTR [rbx+rsi*8+0x0],dh
   14000e347:	add    BYTE PTR [rax],al
   14000e349:	movabs ds:0x0,al
	...
   14000e35e:	add    BYTE PTR [rax],al
   14000e360:	movabs al,ds:0xb6000000000000ee
   14000e369:	out    dx,al
	...
   14000e376:	add    BYTE PTR [rax],al
   14000e378:	(bad)  
   14000e379:	add    BYTE PTR [rax],al
   14000e37b:	add    BYTE PTR [rax],al
   14000e37d:	add    BYTE PTR [rax],al
   14000e37f:	add    BYTE PTR [rax],0x0
   14000e382:	add    BYTE PTR [rax],al
   14000e384:	add    BYTE PTR [rax],al
   14000e386:	add    BYTE PTR [rax],al
   14000e388:	sahf   
   14000e389:	repz add BYTE PTR [rax],al
   14000e38c:	add    BYTE PTR [rax],al
   14000e38e:	add    BYTE PTR [rax],al
   14000e390:	cmp    ch,dh
   14000e392:	add    BYTE PTR [rax],al
   14000e394:	add    BYTE PTR [rax],al
   14000e396:	add    BYTE PTR [rax],al
   14000e398:	sbb    dh,ah
   14000e39a:	add    BYTE PTR [rax],al
   14000e39c:	add    BYTE PTR [rax],al
   14000e39e:	add    BYTE PTR [rax],al
   14000e3a0:	ds hlt 
   14000e3a2:	add    BYTE PTR [rax],al
   14000e3a4:	add    BYTE PTR [rax],al
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	mov    ah,0xf3
   14000e3aa:	add    BYTE PTR [rax],al
   14000e3ac:	add    BYTE PTR [rax],al
   14000e3ae:	add    BYTE PTR [rax],al
   14000e3b0:	ins    BYTE PTR es:[rdi],dx
   14000e3b1:	hlt    
   14000e3b2:	add    BYTE PTR [rax],al
   14000e3b4:	add    BYTE PTR [rax],al
   14000e3b6:	add    BYTE PTR [rax],al
   14000e3b8:	mov    ah,dh
   14000e3ba:	add    BYTE PTR [rax],al
   14000e3bc:	add    BYTE PTR [rax],al
   14000e3be:	add    BYTE PTR [rax],al
   14000e3c0:	movabs ds:0xcc000000000000f4,al
   14000e3c9:	hlt    
   14000e3ca:	add    BYTE PTR [rax],al
   14000e3cc:	add    BYTE PTR [rax],al
   14000e3ce:	add    BYTE PTR [rax],al
   14000e3d0:	out    0xf4,al
   14000e3d2:	add    BYTE PTR [rax],al
   14000e3d4:	add    BYTE PTR [rax],al
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	add    ch,dh
   14000e3da:	add    BYTE PTR [rax],al
   14000e3dc:	add    BYTE PTR [rax],al
   14000e3de:	add    BYTE PTR [rax],al
   14000e3e0:	(bad)  
   14000e3e1:	repz add BYTE PTR [rax],al
   14000e3e4:	add    BYTE PTR [rax],al
   14000e3e6:	add    BYTE PTR [rax],al
   14000e3e8:	push   rax
   14000e3e9:	out    dx,al
   14000e3ea:	add    BYTE PTR [rax],al
   14000e3ec:	add    BYTE PTR [rax],al
   14000e3ee:	add    BYTE PTR [rax],al
   14000e3f0:	je     0x14000e3e0
   14000e3f2:	add    BYTE PTR [rax],al
   14000e3f4:	add    BYTE PTR [rax],al
   14000e3f6:	add    BYTE PTR [rax],al
   14000e3f8:	lock xrelease add BYTE PTR [rax],al
   14000e3fc:	add    BYTE PTR [rax],al
   14000e3fe:	add    BYTE PTR [rax],al
   14000e400:	push   rsp
   14000e401:	hlt    
   14000e402:	add    BYTE PTR [rax],al
   14000e404:	add    BYTE PTR [rax],al
   14000e406:	add    BYTE PTR [rax],al
   14000e408:	(bad)  
   14000e409:	hlt    
	...
   14000e416:	add    BYTE PTR [rax],al
   14000e418:	rex.R (bad) 
   14000e41a:	add    BYTE PTR [rax],al
   14000e41c:	add    BYTE PTR [rax],al
   14000e41e:	add    BYTE PTR [rax],al
   14000e420:	(bad)  
   14000e421:	icebp  
   14000e422:	add    BYTE PTR [rax],al
   14000e424:	add    BYTE PTR [rax],al
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	push   rsi
   14000e429:	(bad)  
	...
   14000e436:	add    BYTE PTR [rax],al
   14000e438:	scas   al,BYTE PTR es:[rdi]
   14000e439:	(bad)  
   14000e43a:	add    BYTE PTR [rax],al
   14000e43c:	add    BYTE PTR [rax],al
   14000e43e:	add    BYTE PTR [rax],al
   14000e440:	(bad)  
   14000e441:	out    dx,eax
   14000e442:	add    BYTE PTR [rax],al
   14000e444:	add    BYTE PTR [rax],al
   14000e446:	add    BYTE PTR [rax],al
   14000e448:	jle    0x14000e435
   14000e44a:	add    BYTE PTR [rax],al
   14000e44c:	add    BYTE PTR [rax],al
   14000e44e:	add    BYTE PTR [rax],al
   14000e450:	clc    
   14000e451:	jmp    0x14000e456
	...
   14000e45e:	add    BYTE PTR [rax],al
   14000e460:	sub    dh,al
   14000e462:	add    BYTE PTR [rax],al
   14000e464:	add    BYTE PTR [rax],al
   14000e466:	add    BYTE PTR [rax],al
   14000e468:	rex.WR
   14000e469:	lock add BYTE PTR [rax],al
   14000e46c:	add    BYTE PTR [rax],al
   14000e46e:	add    BYTE PTR [rax],al
   14000e470:	(bad)  
   14000e471:	lock add BYTE PTR [rax],al
   14000e474:	add    BYTE PTR [rax],al
   14000e476:	add    BYTE PTR [rax],al
   14000e478:	jo     0x14000e46a
   14000e47a:	add    BYTE PTR [rax],al
   14000e47c:	add    BYTE PTR [rax],al
   14000e47e:	add    BYTE PTR [rax],al
   14000e480:	test   al,dh
   14000e482:	add    BYTE PTR [rax],al
   14000e484:	add    BYTE PTR [rax],al
   14000e486:	add    BYTE PTR [rax],al
   14000e488:	nop
   14000e489:	lock add BYTE PTR [rax],al
   14000e48c:	add    BYTE PTR [rax],al
   14000e48e:	add    BYTE PTR [rax],al
   14000e490:	scas   al,BYTE PTR es:[rdi]
   14000e491:	lock add BYTE PTR [rax],al
   14000e494:	add    BYTE PTR [rax],al
   14000e496:	add    BYTE PTR [rax],al
   14000e498:	in     al,dx
   14000e499:	lock add BYTE PTR [rax],al
	...
   14000e4a8:	lock add BYTE PTR ds:[rax],al
	...
   14000e4b8:	fsubp  st(1),st
	...
   14000e4c6:	add    BYTE PTR [rax],al
   14000e4c8:	rex.X out dx,eax
   14000e4ca:	add    BYTE PTR [rax],al
   14000e4cc:	add    BYTE PTR [rax],al
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	push   0xea
   14000e4d5:	add    BYTE PTR [rax],al
   14000e4d7:	add    BYTE PTR [rdx+rbp*8+0x0],dh
	...
   14000e4e7:	add    BYTE PTR [rsi+0xea],al
	...
   14000e4f5:	add    BYTE PTR [rax],al
   14000e4f7:	add    ah,bh
   14000e4f9:	in     eax,dx
   14000e4fa:	add    BYTE PTR [rax],al
   14000e4fc:	add    BYTE PTR [rax],al
   14000e4fe:	add    BYTE PTR [rax],al
   14000e500:	out    0xed,al
	...
   14000e50e:	add    BYTE PTR [rax],al
   14000e510:	xor    al,0xef
   14000e512:	add    BYTE PTR [rax],al
   14000e514:	add    BYTE PTR [rax],al
   14000e516:	add    BYTE PTR [rax],al
   14000e518:	xchg   edx,eax
   14000e519:	jmp    0x14000e51e
   14000e51e:	add    BYTE PTR [rax],al
   14000e520:	rex jmp 0x14000e526
   14000e526:	add    BYTE PTR [rax],al
   14000e528:	rex.WRX out dx,eax
   14000e52a:	add    BYTE PTR [rax],al
   14000e52c:	add    BYTE PTR [rax],al
   14000e52e:	add    BYTE PTR [rax],al
   14000e530:	lock out dx,eax
   14000e532:	add    BYTE PTR [rax],al
   14000e534:	add    BYTE PTR [rax],al
   14000e536:	add    BYTE PTR [rax],al
   14000e538:	xchg   esp,eax
   14000e539:	out    dx,eax
   14000e53a:	add    BYTE PTR [rax],al
   14000e53c:	add    BYTE PTR [rax],al
   14000e53e:	add    BYTE PTR [rax],al
   14000e540:	mov    edx,0xf1
	...
   14000e54d:	add    BYTE PTR [rax],al
   14000e54f:	add    BYTE PTR [rdx+0xf1],ch
	...
   14000e55d:	add    BYTE PTR [rax],al
   14000e55f:	add    BYTE PTR [rsi-0xd],dl
	...
   14000e56e:	add    BYTE PTR [rax],al
   14000e570:	(bad)  
   14000e571:	lock add BYTE PTR [rax],al
	...
   14000e580:	scas   al,BYTE PTR es:[rdi]
   14000e581:	jmp    0x14000e583
   14000e583:	add    BYTE PTR [rax],al
   14000e585:	add    BYTE PTR [rax],al
   14000e587:	add    ah,al
   14000e589:	lock add BYTE PTR [rax],al
   14000e58c:	add    BYTE PTR [rax],al
   14000e58e:	add    BYTE PTR [rax],al
   14000e590:	pushf  
   14000e591:	(bad)  
   14000e592:	add    BYTE PTR [rax],al
   14000e594:	add    BYTE PTR [rax],al
   14000e596:	add    BYTE PTR [rax],al
   14000e598:	out    0xea,al
   14000e59a:	add    BYTE PTR [rax],al
   14000e59c:	add    BYTE PTR [rax],al
   14000e59e:	add    BYTE PTR [rax],al
   14000e5a0:	cld    
   14000e5a1:	(bad)  
   14000e5a2:	add    BYTE PTR [rax],al
   14000e5a4:	add    BYTE PTR [rax],al
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	(bad)  
   14000e5a9:	lock add BYTE PTR [rax],al
   14000e5ac:	add    BYTE PTR [rax],al
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	(bad)  
   14000e5b1:	jmp    0x14000e5b3
	...
   14000e5bf:	add    ah,cl
   14000e5c1:	(bad)  
	...
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	adc    dh,cl
   14000e5d2:	add    BYTE PTR [rax],al
   14000e5d4:	add    BYTE PTR [rax],al
   14000e5d6:	add    BYTE PTR [rax],al
   14000e5d8:	pop    rsp
   14000e5d9:	icebp  
   14000e5da:	add    BYTE PTR [rax],al
   14000e5dc:	add    BYTE PTR [rax],al
   14000e5de:	add    BYTE PTR [rax],al
   14000e5e0:	and    al,0xf1
   14000e5e2:	add    BYTE PTR [rax],al
   14000e5e4:	add    BYTE PTR [rax],al
   14000e5e6:	add    BYTE PTR [rax],al
   14000e5e8:	ss icebp 
   14000e5ea:	add    BYTE PTR [rax],al
   14000e5ec:	add    BYTE PTR [rax],al
   14000e5ee:	add    BYTE PTR [rax],al
   14000e5f0:	ins    BYTE PTR es:[rdi],dx
   14000e5f1:	icebp  
   14000e5f2:	add    BYTE PTR [rax],al
   14000e5f4:	add    BYTE PTR [rax],al
   14000e5f6:	add    BYTE PTR [rax],al
   14000e5f8:	rex.WX icebp 
   14000e5fa:	add    BYTE PTR [rax],al
   14000e5fc:	add    BYTE PTR [rax],al
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	jp     0x14000e5f3
   14000e602:	add    BYTE PTR [rax],al
   14000e604:	add    BYTE PTR [rax],al
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	mov    cl,dh
	...
   14000e616:	add    BYTE PTR [rax],al
   14000e618:	push   0xffffffffffffffeb
   14000e61a:	add    BYTE PTR [rax],al
   14000e61c:	add    BYTE PTR [rax],al
   14000e61e:	add    BYTE PTR [rax],al
   14000e620:	push   rax
   14000e621:	jmp    0x14000e623
   14000e623:	add    BYTE PTR [rax],al
   14000e625:	add    BYTE PTR [rax],al
   14000e627:	add    BYTE PTR [rbx+rbp*8],bh
	...
   14000e636:	add    BYTE PTR [rax],al
   14000e638:	add    cl,dh
	...
   14000e646:	add    BYTE PTR [rax],al
   14000e648:	stos   BYTE PTR es:[rdi],al
   14000e649:	out    dx,eax
   14000e64a:	add    BYTE PTR [rax],al
   14000e64c:	add    BYTE PTR [rax],al
   14000e64e:	add    BYTE PTR [rax],al
   14000e650:	(bad)  
   14000e651:	out    dx,eax
   14000e652:	add    BYTE PTR [rax],al
   14000e654:	add    BYTE PTR [rax],al
   14000e656:	add    BYTE PTR [rax],al
   14000e658:	jl     0x14000e649
   14000e65a:	add    BYTE PTR [rax],al
   14000e65c:	add    BYTE PTR [rax],al
   14000e65e:	add    BYTE PTR [rax],al
   14000e660:	ret    0xef
   14000e663:	add    BYTE PTR [rax],al
   14000e665:	add    BYTE PTR [rax],al
   14000e667:	add    al,dl
   14000e669:	jmp    0x14000e66e
   14000e66e:	add    BYTE PTR [rax],al
   14000e670:	in     al,dx
   14000e671:	jmp    0x14000e676
   14000e676:	add    BYTE PTR [rax],al
   14000e678:	(bad)  
   14000e67a:	add    BYTE PTR [rax],al
   14000e67c:	add    BYTE PTR [rax],al
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	xchg   esp,eax
   14000e681:	(bad)  
	...
   14000e68e:	add    BYTE PTR [rax],al
   14000e690:	push   0xffffffffffffffe9
   14000e692:	add    BYTE PTR [rax],al
   14000e694:	add    BYTE PTR [rax],al
   14000e696:	add    BYTE PTR [rax],al
   14000e698:	adc    ch,bl
   14000e69a:	add    BYTE PTR [rax],al
   14000e69c:	add    BYTE PTR [rax],al
   14000e69e:	add    BYTE PTR [rax],al
   14000e6a0:	sub    al,0xeb
	...
   14000e6ae:	add    BYTE PTR [rax],al
   14000e6b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e6b1:	jmp    0x14000e6b6
   14000e6b6:	add    BYTE PTR [rax],al
   14000e6b8:	jp     0x14000e6a3
   14000e6ba:	add    BYTE PTR [rax],al
   14000e6bc:	add    BYTE PTR [rax],al
   14000e6be:	add    BYTE PTR [rax],al
   14000e6c0:	mov    edx,0xe9
   14000e6c5:	add    BYTE PTR [rax],al
   14000e6c7:	add    BYTE PTR [rax],cl
   14000e6c9:	(bad)  
   14000e6ca:	add    BYTE PTR [rax],al
   14000e6cc:	add    BYTE PTR [rax],al
   14000e6ce:	add    BYTE PTR [rax],al
   14000e6d0:	ss (bad) 
   14000e6d2:	add    BYTE PTR [rax],al
   14000e6d4:	add    BYTE PTR [rax],al
   14000e6d6:	add    BYTE PTR [rax],al
   14000e6d8:	push   rsp
   14000e6d9:	jmp    0x14000e6de
	...
   14000e6e6:	add    BYTE PTR [rax],al
   14000e6e8:	and    dl,ch
	...
   14000e6f6:	add    BYTE PTR [rax],al
   14000e6f8:	stos   BYTE PTR es:[rdi],al
   14000e6f9:	in     eax,dx
	...
   14000e706:	add    BYTE PTR [rax],al
   14000e708:	es out dx,eax
   14000e70a:	add    BYTE PTR [rax],al
   14000e70c:	add    BYTE PTR [rax],al
   14000e70e:	add    BYTE PTR [rax],al
   14000e710:	(bad)  
   14000e711:	out    dx,eax
   14000e712:	add    BYTE PTR [rax],al
   14000e714:	add    BYTE PTR [rax],al
   14000e716:	add    BYTE PTR [rax],al
   14000e718:	add    ch,bh
   14000e71a:	add    BYTE PTR [rax],al
   14000e71c:	add    BYTE PTR [rax],al
   14000e71e:	add    BYTE PTR [rax],al
   14000e720:	hlt    
   14000e721:	out    dx,al
   14000e722:	add    BYTE PTR [rax],al
   14000e724:	add    BYTE PTR [rax],al
   14000e726:	add    BYTE PTR [rax],al
   14000e728:	out    0xee,al
   14000e72a:	add    BYTE PTR [rax],al
   14000e72c:	add    BYTE PTR [rax],al
   14000e72e:	add    BYTE PTR [rax],al
   14000e730:	fsub   st(6),st
   14000e732:	add    BYTE PTR [rax],al
   14000e734:	add    BYTE PTR [rax],al
   14000e736:	add    BYTE PTR [rax],al
   14000e738:	cmp    al,ch
   14000e73a:	add    BYTE PTR [rax],al
   14000e73c:	add    BYTE PTR [rax],al
   14000e73e:	add    BYTE PTR [rax],al
   14000e740:	sbb    bh,ch
   14000e742:	add    BYTE PTR [rax],al
   14000e744:	add    BYTE PTR [rax],al
   14000e746:	add    BYTE PTR [rax],al
   14000e748:	es cmc 
   14000e74a:	add    BYTE PTR [rax],al
   14000e74c:	add    BYTE PTR [rax],al
   14000e74e:	add    BYTE PTR [rax],al
   14000e750:	sub    al,0xe9
   14000e752:	add    BYTE PTR [rax],al
   14000e754:	add    BYTE PTR [rax],al
   14000e756:	add    BYTE PTR [rax],al
   14000e758:	(bad)  
   14000e759:	jmp    0x14000e75e
   14000e75e:	add    BYTE PTR [rax],al
   14000e760:	or     cl,ch
   14000e762:	add    BYTE PTR [rax],al
   14000e764:	add    BYTE PTR [rax],al
   14000e766:	add    BYTE PTR [rax],al
   14000e768:	(bad)  
   14000e769:	call   0x14000e76e
   14000e76e:	add    BYTE PTR [rax],al
   14000e770:	imul   al
   14000e772:	add    BYTE PTR [rax],al
   14000e774:	add    BYTE PTR [rax],al
   14000e776:	add    BYTE PTR [rax],al
   14000e778:	(bad)  
   14000e779:	call   0x14000e77e
   14000e77e:	add    BYTE PTR [rax],al
   14000e780:	loopne 0x14000e76a
   14000e782:	add    BYTE PTR [rax],al
   14000e784:	add    BYTE PTR [rax],al
   14000e786:	add    BYTE PTR [rax],al
   14000e788:	(bad)  
   14000e789:	call   0x14000e78e
   14000e78e:	add    BYTE PTR [rax],al
   14000e790:	mov    esi,0xe8
   14000e795:	add    BYTE PTR [rax],al
   14000e797:	add    BYTE PTR [rdx+0xe8],dh
   14000e79d:	add    BYTE PTR [rax],al
   14000e79f:	add    BYTE PTR [rsi+0xe8],bl
   14000e7a5:	add    BYTE PTR [rax],al
   14000e7a7:	add    BYTE PTR [rax+rbp*8+0x0],dl
   14000e7ae:	add    BYTE PTR [rax],al
   14000e7b0:	mov    eax,gs
   14000e7b2:	add    BYTE PTR [rax],al
   14000e7b4:	add    BYTE PTR [rax],al
   14000e7b6:	add    BYTE PTR [rax],al
   14000e7b8:	test   al,ch
   14000e7ba:	add    BYTE PTR [rax],al
   14000e7bc:	add    BYTE PTR [rax],al
   14000e7be:	add    BYTE PTR [rax],al
   14000e7c0:	jb     0x14000e7aa
   14000e7c2:	add    BYTE PTR [rax],al
   14000e7c4:	add    BYTE PTR [rax],al
   14000e7c6:	add    BYTE PTR [rax],al
   14000e7c8:	(bad)  
   14000e7c9:	call   0x14000e7ce
   14000e7ce:	add    BYTE PTR [rax],al
   14000e7d0:	push   rdx
   14000e7d1:	call   0x14000e7d6
   14000e7d6:	add    BYTE PTR [rax],al
   14000e7d8:	rex.R call 0x14000e7de
   14000e7de:	add    BYTE PTR [rax],al
   14000e7e0:	xor    ch,dh
	...
   14000e7ee:	add    BYTE PTR [rax],al
   14000e7f0:	cmp    al,0xf3
   14000e7f2:	add    BYTE PTR [rax],al
   14000e7f4:	add    BYTE PTR [rax],al
   14000e7f6:	add    BYTE PTR [rax],al
   14000e7f8:	xor    dh,bl
   14000e7fa:	add    BYTE PTR [rax],al
   14000e7fc:	add    BYTE PTR [rax],al
   14000e7fe:	add    BYTE PTR [rax],al
   14000e800:	and    al,0xf3
   14000e802:	add    BYTE PTR [rax],al
   14000e804:	add    BYTE PTR [rax],al
   14000e806:	add    BYTE PTR [rax],al
   14000e808:	or     al,0xf3
   14000e80a:	add    BYTE PTR [rax],al
   14000e80c:	add    BYTE PTR [rax],al
   14000e80e:	add    BYTE PTR [rax],al
   14000e810:	cli    
   14000e811:	repnz add BYTE PTR [rax],al
   14000e814:	add    BYTE PTR [rax],al
   14000e816:	add    BYTE PTR [rax],al
   14000e818:	in     al,dx
   14000e819:	repnz add BYTE PTR [rax],al
   14000e81c:	add    BYTE PTR [rax],al
   14000e81e:	add    BYTE PTR [rax],al
   14000e820:	(bad)  
   14000e821:	repnz add BYTE PTR [rax],al
   14000e824:	add    BYTE PTR [rax],al
   14000e826:	add    BYTE PTR [rax],al
   14000e828:	mov    esp,0xf2
	...
   14000e835:	add    BYTE PTR [rax],al
   14000e837:	add    BYTE PTR [rbx+rax*1+0x7363775f],dl
   14000e83e:	outs   dx,BYTE PTR ds:[rsi]
   14000e83f:	imul   esp,DWORD PTR [rbx+0x6d],0x550070
   14000e846:	pop    rdi
   14000e847:	pop    rax
   14000e848:	movsxd esi,DWORD PTR [rax+0x74]
   14000e84b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000e854:	pop    rdi
   14000e855:	(bad)  
   14000e856:	ins    DWORD PTR es:[rdi],dx
   14000e857:	jae    0x14000e8c0
   14000e859:	pop    rdi
   14000e85a:	gs js  0x14000e8c6
   14000e85d:	je     0x14000e85f
   14000e85f:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000e865:	addr32 gs je 0x14000e8d6
   14000e869:	(bad)  
   14000e86a:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000e871:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000e877:	gs je  0x14000e8d9
   14000e87a:	(bad)  
   14000e87b:	jo     0x14000e8ed
   14000e87d:	pop    rdi
   14000e87e:	je     0x14000e8f9
   14000e880:	jo     0x14000e8e7
   14000e882:	add    BYTE PTR [rax],al
   14000e884:	xor    al,BYTE PTR [riz*2+0x746978]
   14000e88b:	add    BYTE PTR [rsi],cl
   14000e88d:	add    DWORD PTR [rdi+0x65],ebx
   14000e890:	js     0x14000e8fb
   14000e892:	je     0x14000e894
   14000e894:	rol    DWORD PTR [rax],0x5f
   14000e897:	movsxd esp,DWORD PTR [rbp+0x78]
   14000e89a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000e8a2:	jae    0x14000e909
   14000e8a4:	je     0x14000e91b
   14000e8a6:	jae    0x14000e90d
   14000e8a8:	jb     0x14000e917
   14000e8aa:	(bad)  
   14000e8ab:	je     0x14000e915
   14000e8ad:	gs jb  0x14000e922
   14000e8b0:	add    BYTE PTR [rax],al
   14000e8b2:	jge    0x14000e8b5
   14000e8b4:	pop    rdi
   14000e8b5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000e8bc:	ins    DWORD PTR es:[rdi],dx
   14000e8bd:	add    BYTE PTR [rdi+0x0],dl
   14000e8c0:	pop    rdi
   14000e8c1:	pop    rdi
   14000e8c2:	rex.XB pop r15
   14000e8c4:	jae    0x14000e936
   14000e8c6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000e8ca:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000e8d1:	ins    BYTE PTR es:[rdi],dx
   14000e8d2:	gs jb  0x14000e8d5
   14000e8d5:	add    BYTE PTR [rdx+0x63775f03],al
   14000e8db:	ins    DWORD PTR es:[rdi],dx
   14000e8dc:	fs ins BYTE PTR es:[rdi],dx
   14000e8de:	outs   dx,BYTE PTR ds:[rsi]
   14000e8df:	add    BYTE PTR [rdi],ah
   14000e8e1:	add    DWORD PTR [rdi+0x66],ebx
   14000e8e4:	ins    DWORD PTR es:[rdi],dx
   14000e8e5:	outs   dx,DWORD PTR ds:[rsi]
   14000e8e6:	fs add BYTE PTR gs:[rax],al
   14000e8ea:	rol    BYTE PTR [rax],cl
   14000e8ec:	pop    rdi
   14000e8ed:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e8f0:	ins    DWORD PTR es:[rdi],dx
   14000e8f1:	outs   dx,DWORD PTR ds:[rsi]
   14000e8f2:	fs add BYTE PTR gs:[rax],al
   14000e8f6:	out    0x1,al
   14000e8f8:	pop    rdi
   14000e8f9:	ins    BYTE PTR es:[rdi],dx
   14000e8fa:	outs   dx,DWORD PTR ds:[rsi]
   14000e8fb:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e8fe:	add    ebx,DWORD PTR [r15+0x75]
   14000e902:	outs   dx,BYTE PTR ds:[rsi]
   14000e903:	ins    BYTE PTR es:[rdi],dx
   14000e904:	outs   dx,DWORD PTR ds:[rsi]
   14000e905:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e908:	jnp    0x14000e90a
   14000e90a:	pop    rdi
   14000e90b:	pop    rdi
   14000e90c:	fs ins BYTE PTR es:[rdi],dx
   14000e90e:	ins    BYTE PTR es:[rdi],dx
   14000e90f:	outs   dx,DWORD PTR ds:[rsi]
   14000e910:	outs   dx,BYTE PTR ds:[rsi]
   14000e911:	gs js  0x14000e97d
   14000e914:	je     0x14000e916
   14000e916:	nop
   14000e917:	add    bl,BYTE PTR [rdi+0x6f]
   14000e91a:	outs   dx,BYTE PTR ds:[rsi]
   14000e91b:	gs js  0x14000e987
   14000e91e:	je     0x14000e920
   14000e920:	ins    DWORD PTR es:[rdi],dx
   14000e921:	jae    0x14000e999
   14000e923:	movsxd esi,DWORD PTR [rdx+0x74]
   14000e926:	cs fs ins BYTE PTR es:[rdi],dx
   14000e929:	ins    BYTE PTR es:[rdi],dx
   14000e92a:	add    BYTE PTR [rax],al
   14000e92c:	(bad)  
   14000e92d:	add    BYTE PTR [rdi],bh
   14000e92f:	je     0x14000e996
   14000e931:	jb     0x14000e9a0
   14000e933:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000e93a:	pop    rcx
   14000e93b:	pop    r8
   14000e93d:	pop    rax
   14000e93e:	pop    rdx
   14000e93f:	add    BYTE PTR [rbx],dl
   14000e941:	add    BYTE PTR [rdi+0x65],al
   14000e944:	je     0x14000e993
   14000e946:	outs   dx,DWORD PTR ds:[rsi]
   14000e947:	fs jne 0x14000e9b6
   14000e94a:	gs rex.W (bad) 
   14000e94d:	outs   dx,BYTE PTR ds:[rsi]
   14000e94e:	fs ins BYTE PTR es:[rdi],dx
   14000e950:	gs push rdi
   14000e952:	add    BYTE PTR [rax],al
   14000e954:	add    BYTE PTR [rax],al
   14000e956:	rex.RXB
   14000e957:	gs je  0x14000e9ae
   14000e95a:	jb     0x14000e9bd
   14000e95c:	movsxd esp,DWORD PTR [rbp+0x45]
   14000e95f:	outs   dx,BYTE PTR ds:[rsi]
   14000e960:	(bad)  
   14000e961:	(bad)  
   14000e962:	ins    BYTE PTR es:[rdi],dx
   14000e963:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000e966:	(bad)  
   14000e967:	addr32 jae 0x14000e96a
   14000e96a:	sbb    al,0x0
   14000e96c:	rex.RXB
   14000e96d:	gs je  0x14000e9c6
   14000e970:	gs jb  0x14000e9e6
   14000e973:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   14000e97a:	add    al,BYTE PTR [rax]
   14000e97c:	rex.RXB
   14000e97d:	gs je  0x14000e9d4
   14000e980:	jb     0x14000e9e3
   14000e982:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000e985:	outs   dx,DWORD PTR ds:[rsi]
   14000e986:	addr32 addr32 gs jb 0x14000e9d3
   14000e98b:	(bad)  
   14000e98c:	outs   dx,BYTE PTR ds:[rsi]
   14000e98d:	fs ins BYTE PTR es:[rdi],dx
   14000e98f:	add    BYTE PTR gs:[rax],al
   14000e992:	adc    al,0x0
   14000e994:	rex.RXB
   14000e995:	gs je  0x14000e9e8
   14000e998:	jb     0x14000ea09
   14000e99a:	movsxd eax,DWORD PTR [rcx+0x64]
   14000e99d:	fs jb  0x14000ea05
   14000e9a0:	jae    0x14000ea15
   14000e9a2:	add    BYTE PTR [rax],al
   14000e9a4:	add    DWORD PTR [rax],eax
   14000e9a6:	rex.RXB
   14000e9a7:	gs je  0x14000e9fe
   14000e9aa:	jb     0x14000ea0d
   14000e9ac:	movsxd esp,DWORD PTR [rbp+0x45]
   14000e9af:	outs   dx,BYTE PTR ds:[rsi]
   14000e9b0:	(bad)  
   14000e9b1:	(bad)  
   14000e9b2:	ins    BYTE PTR es:[rdi],dx
   14000e9b3:	gs rex.WR
   14000e9b5:	gs jbe 0x14000ea1d
   14000e9b8:	ins    BYTE PTR es:[rdi],dx
   14000e9b9:	add    BYTE PTR [rbx],al
   14000e9bb:	add    BYTE PTR [rdx+0x65],dl
   14000e9be:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000e9c6:	(bad)  
   14000e9c7:	movsxd esp,DWORD PTR [rbp+0x47]
   14000e9ca:	jne    0x14000ea35
   14000e9cc:	fs jae 0x14000ea26
   14000e9cf:	add    BYTE PTR [rdi],bl
   14000e9d1:	add    BYTE PTR [rdi+0x70],cl
   14000e9d4:	outs   dx,BYTE PTR gs:[rsi]
   14000e9d6:	rex.RB jbe 0x14000ea3e
   14000e9d9:	outs   dx,BYTE PTR ds:[rsi]
   14000e9da:	je     0x14000ea33
   14000e9dc:	add    BYTE PTR [rax],al
   14000e9de:	add    BYTE PTR [rax],al
   14000e9e0:	rex.XB ins BYTE PTR es:[rdi],dx
   14000e9e2:	outs   dx,DWORD PTR ds:[rsi]
   14000e9e3:	jae    0x14000ea4a
   14000e9e5:	rex.W (bad) 
   14000e9e7:	outs   dx,BYTE PTR ds:[rsi]
   14000e9e8:	fs ins BYTE PTR es:[rdi],dx
   14000e9ea:	add    BYTE PTR gs:[rcx],ch
   14000e9ed:	add    BYTE PTR [rbx+0x65],dl
   14000e9f0:	je     0x14000ea37
   14000e9f2:	jbe    0x14000ea59
   14000e9f4:	outs   dx,BYTE PTR ds:[rsi]
   14000e9f5:	je     0x14000e9f7
   14000e9f7:	add    BYTE PTR [rip+0x74654700],al        # 0x1b46630fd
   14000e9fd:	rex.WR (bad) 
   14000e9ff:	jae    0x14000ea75
   14000ea01:	rex.RB jb 0x14000ea76
   14000ea04:	outs   dx,DWORD PTR ds:[rsi]
   14000ea05:	jb     0x14000ea07
   14000ea07:	add    BYTE PTR [rdi],al
   14000ea09:	add    BYTE PTR [rbp+0x6e],dl
   14000ea0c:	jb     0x14000ea73
   14000ea0e:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000ea16:	(bad)  
   14000ea17:	movsxd esp,DWORD PTR [rbp+0x47]
   14000ea1a:	jne    0x14000ea85
   14000ea1c:	fs jae 0x14000ea1f
   14000ea1f:	add    BYTE PTR [rax+rax*1],al
   14000ea22:	rex.RB jbe 0x14000ea8a
   14000ea25:	outs   dx,BYTE PTR ds:[rsi]
   14000ea26:	je     0x14000ea7b
   14000ea28:	gs je  0x14000ea74
   14000ea2b:	outs   dx,BYTE PTR ds:[rsi]
   14000ea2c:	outs   dx,WORD PTR ds:[rsi]
   14000ea2e:	jb     0x14000ea9d
   14000ea30:	(bad)  
   14000ea31:	je     0x14000ea9c
   14000ea33:	outs   dx,DWORD PTR ds:[rsi]
   14000ea34:	outs   dx,BYTE PTR ds:[rsi]
   14000ea35:	add    BYTE PTR [rax+rax*1],al
   14000ea38:	push   rsp
   14000ea39:	jb     0x14000ea9c
   14000ea3b:	movsxd esp,DWORD PTR [rbp+0x45]
   14000ea3e:	jbe    0x14000eaa5
   14000ea40:	outs   dx,BYTE PTR ds:[rsi]
   14000ea41:	je     0x14000ea43
   14000ea43:	add    BYTE PTR [rsi],ah
   14000ea45:	add    BYTE PTR [rbx+0x6f],al
   14000ea48:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ea4a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ea52:	rex.RB js 0x14000ea55
   14000ea55:	add    BYTE PTR [rdx+0x0],al
   14000ea58:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ea5a:	push   rbp
   14000ea5b:	outs   dx,BYTE PTR ds:[rsi]
   14000ea5c:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000ea63:	imul   edi,DWORD PTR [rdx+0x65],0x60000
   14000ea6a:	rex.W
   14000ea6b:	gs (bad) 
   14000ea6d:	jo     0x14000eab5
   14000ea6f:	jb     0x14000ead6
   14000ea71:	add    BYTE PTR gs:[rax],al
   14000ea74:	add    BYTE PTR [rax],al
   14000ea76:	rex.RXB
   14000ea77:	gs je  0x14000eaca
   14000ea7a:	jb     0x14000eaeb
   14000ea7c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ea7f:	jae    0x14000eac9
   14000ea81:	gs (bad) 
   14000ea83:	jo     0x14000ea85
   14000ea85:	add    BYTE PTR [rcx],al
   14000ea87:	add    BYTE PTR [rdi+0x6c],al
   14000ea8a:	outs   dx,DWORD PTR ds:[rsi]
   14000ea8b:	(bad)
   14000ea90:	gs add BYTE PTR gs:[rax],al
   14000ea94:	sub    eax,0x656c5300
   14000ea99:	gs jo  0x14000ea9c
   14000ea9c:	and    BYTE PTR [rax],al
   14000ea9e:	rex.RXB
   14000ea9f:	gs je  0x14000eaf5
   14000eaa2:	je     0x14000eb05
   14000eaa4:	jb     0x14000eb1a
   14000eaa6:	jne    0x14000eb18
   14000eaa8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000eaaa:	outs   dx,WORD PTR ds:[rsi]
   14000eaac:	push   rdi
   14000eaad:	add    BYTE PTR [rdi],cl
   14000eaaf:	add    BYTE PTR [rbx+0x65],dl
   14000eab2:	je     0x14000eb09
   14000eab4:	outs   dx,BYTE PTR ds:[rsi]
   14000eab5:	push   0x6c646e61
   14000eaba:	gs fs rex.RB js 0x14000eb22
   14000eabf:	gs jo  0x14000eb36
   14000eac2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000eac9:	gs jb  0x14000eacc
   14000eacc:	add    BYTE PTR [rax],al
   14000eace:	push   rcx
   14000eacf:	jne    0x14000eb36
   14000ead1:	jb     0x14000eb4c
   14000ead3:	push   rax
   14000ead4:	gs jb  0x14000eb3d
   14000ead7:	outs   dx,DWORD PTR ds:[rsi]
   14000ead8:	jb     0x14000eb47
   14000eada:	(bad)  
   14000eadb:	outs   dx,BYTE PTR ds:[rsi]
   14000eadc:	movsxd esp,DWORD PTR [rbp+0x43]
   14000eadf:	outs   dx,DWORD PTR ds:[rsi]
   14000eae0:	jne    0x14000eb50
   14000eae2:	je     0x14000eb49
   14000eae4:	jb     0x14000eae6
   14000eae6:	or     eax,0x74654700
   14000eaeb:	rex.XB jne 0x14000eb60
   14000eaee:	jb     0x14000eb55
   14000eaf0:	outs   dx,BYTE PTR ds:[rsi]
   14000eaf1:	je     0x14000eb43
   14000eaf3:	jb     0x14000eb64
   14000eaf5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000eaf8:	jae    0x14000eb43
   14000eafa:	add    BYTE PTR fs:[rcx],dl
   14000eafd:	add    BYTE PTR [rdi+0x65],al
   14000eb00:	je     0x14000eb45
   14000eb02:	jne    0x14000eb76
   14000eb04:	jb     0x14000eb6b
   14000eb06:	outs   dx,BYTE PTR ds:[rsi]
   14000eb07:	je     0x14000eb5d
   14000eb09:	push   0x64616572
   14000eb0e:	rex.WB
   14000eb0f:	add    BYTE PTR fs:[rax],al
   14000eb12:	adc    al,0x0
   14000eb14:	rex.RXB
   14000eb15:	gs je  0x14000eb6b
   14000eb18:	jns    0x14000eb8d
   14000eb1a:	je     0x14000eb81
   14000eb1c:	ins    DWORD PTR es:[rdi],dx
   14000eb1d:	push   rsp
   14000eb1e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000eb25:	ins    BYTE PTR es:[rdi],dx
   14000eb26:	gs push rsp
   14000eb28:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000eb2f:	gs je  0x14000eb86
   14000eb32:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000eb39:	je     0x14000eb3b
   14000eb3b:	add    BYTE PTR [rdx],al
   14000eb3d:	add    BYTE PTR [rdx+0x74],dl
   14000eb40:	ins    BYTE PTR es:[rdi],dx
   14000eb41:	rex.XB (bad) 
   14000eb43:	jo     0x14000ebb9
   14000eb45:	jne    0x14000ebb9
   14000eb47:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000eb4a:	outs   dx,BYTE PTR ds:[rsi]
   14000eb4b:	je     0x14000ebb2
   14000eb4d:	js     0x14000ebc3
   14000eb4f:	add    BYTE PTR [rcx],cl
   14000eb51:	add    BYTE PTR [rdx+0x74],dl
   14000eb54:	ins    BYTE PTR es:[rdi],dx
   14000eb55:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000eb57:	outs   dx,DWORD PTR ds:[rsi]
   14000eb58:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000eb5c:	jne    0x14000ebcc
   14000eb5e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000eb62:	outs   dx,BYTE PTR ds:[rsi]
   14000eb63:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000eb65:	je     0x14000ebd9
   14000eb67:	jns    0x14000eb69
   14000eb69:	add    BYTE PTR [rdi],cl
   14000eb6b:	add    BYTE PTR [rdx+0x74],dl
   14000eb6e:	ins    BYTE PTR es:[rdi],dx
   14000eb6f:	push   rsi
   14000eb70:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000eb77:	outs   dx,BYTE PTR ds:[rsi]
   14000eb78:	ja     0x14000ebe3
   14000eb7a:	outs   dx,BYTE PTR ds:[rsi]
   14000eb7b:	add    BYTE PTR fs:[rax],al
   14000eb7e:	adc    DWORD PTR [rax],eax
   14000eb80:	push   rbp
   14000eb81:	outs   dx,BYTE PTR ds:[rsi]
   14000eb82:	push   0x6c646e61
   14000eb87:	gs fs rex.RB js 0x14000ebef
   14000eb8c:	gs jo  0x14000ec03
   14000eb8f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000eb96:	gs jb  0x14000eb99
   14000eb99:	add    BYTE PTR [rax+rax*1],cl
   14000eb9c:	rex.RXB
   14000eb9d:	gs je  0x14000ebe3
   14000eba0:	jne    0x14000ec14
   14000eba2:	jb     0x14000ec09
   14000eba4:	outs   dx,BYTE PTR ds:[rsi]
   14000eba5:	je     0x14000ebf7
   14000eba7:	jb     0x14000ec18
   14000eba9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ebac:	jae    0x14000ebae
   14000ebae:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000ebb3:	ins    DWORD PTR es:[rdi],dx
   14000ebb4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000ebbb:	outs   dx,DWORD PTR ds:[rsi]
   14000ebbc:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ebbf:	jae    0x14000ebc1
   14000ebc1:	add    BYTE PTR [rcx+0x70],ah
   14000ebc4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e5f3b
   14000ebce:	outs   dx,DWORD PTR ds:[rsi]
   14000ebcf:	jb     0x14000ec36
   14000ebd1:	sub    eax,0x7262696c
   14000ebd6:	(bad)  
   14000ebd7:	jb     0x14000ec52
   14000ebd9:	ins    BYTE PTR es:[rdi],dx
   14000ebda:	outs   dx,DWORD PTR ds:[rsi]
   14000ebdb:	(bad)  
   14000ebdc:	fs gs jb 0x14000ec0d
   14000ebe0:	ins    BYTE PTR es:[rdi],dx
   14000ebe1:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e311919
   14000ebe7:	fs ins BYTE PTR es:[rdi],dx
   14000ebe9:	ins    BYTE PTR es:[rdi],dx
   14000ebea:	add    BYTE PTR [rax],al
   14000ebec:	(bad)  
   14000ebed:	jo     0x14000ec58
   14000ebef:	sub    eax,0x772d736d
   14000ebf4:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   14000ebfb:	je     0x14000ec66
   14000ebfd:	outs   dx,BYTE PTR ds:[rsi]
   14000ebfe:	addr32 sub eax,0x73616c63
   14000ec04:	jae    0x14000ec6f
   14000ec06:	movsxd esi,DWORD PTR [rax+0x72]
   14000ec09:	outs   dx,DWORD PTR ds:[rsi]
   14000ec0a:	jbe    0x14000ec75
   14000ec0c:	fs gs jb 0x14000ec3d
   14000ec10:	ins    BYTE PTR es:[rdi],dx
   14000ec11:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e311948
   14000ec17:	fs ins BYTE PTR es:[rdi],dx
   14000ec19:	ins    BYTE PTR es:[rdi],dx
   14000ec1a:	add    BYTE PTR [rax],al
   14000ec1c:	(bad)  
   14000ec1d:	jo     0x14000ec88
   14000ec1f:	sub    eax,0x772d736d
   14000ec24:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ec2b:	sub    eax,0x69737973
   14000ec30:	outs   dx,BYTE PTR ds:[rsi]
   14000ec31:	outs   dx,WORD PTR ds:[rsi]
   14000ec33:	sub    eax,0x322d316c
   14000ec38:	sub    eax,0x6c642e31
   14000ec3d:	ins    BYTE PTR es:[rdi],dx
   14000ec3e:	add    BYTE PTR [rax],al
   14000ec40:	(bad)  
   14000ec41:	jo     0x14000ecac
   14000ec43:	sub    eax,0x772d736d
   14000ec48:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ec4f:	sub    eax,0x636e7973
   14000ec54:	push   0x2d316c2d
   14000ec59:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac651a8f
   14000ec5f:	ins    BYTE PTR es:[rdi],dx
   14000ec60:	add    BYTE PTR [rax],al
   14000ec62:	(bad)  
   14000ec63:	jo     0x14000ecce
   14000ec65:	sub    eax,0x772d736d
   14000ec6a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ec71:	sub    eax,0x646e6168
   14000ec76:	ins    BYTE PTR es:[rdi],dx
   14000ec77:	gs sub eax,0x312d316c
   14000ec7d:	sub    eax,0x6c642e30
   14000ec82:	ins    BYTE PTR es:[rdi],dx
   14000ec83:	add    BYTE PTR [rcx+0x70],ah
   14000ec86:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e5ffd
   14000ec90:	outs   dx,DWORD PTR ds:[rsi]
   14000ec91:	jb     0x14000ecf8
   14000ec93:	sub    eax,0x6f727265
   14000ec98:	jb     0x14000ed02
   14000ec9a:	(bad)  
   14000ec9b:	outs   dx,BYTE PTR ds:[rsi]
   14000ec9c:	fs ins BYTE PTR es:[rdi],dx
   14000ec9e:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000eca5:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac651adc
   14000ecab:	ins    BYTE PTR es:[rdi],dx
   14000ecac:	add    BYTE PTR [rax],al
   14000ecae:	(bad)  
   14000ecaf:	jo     0x14000ed1a
   14000ecb1:	sub    eax,0x772d736d
   14000ecb6:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   14000ecbd:	je     0x14000ed28
   14000ecbf:	outs   dx,BYTE PTR ds:[rsi]
   14000ecc0:	addr32 sub eax,0x766f7270
   14000ecc6:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000ecce:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac651b04
   14000ecd4:	ins    BYTE PTR es:[rdi],dx
   14000ecd5:	add    BYTE PTR [rcx+0x70],ah
   14000ecd8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e604f
   14000ece2:	outs   dx,DWORD PTR ds:[rsi]
   14000ece3:	jb     0x14000ed4a
   14000ece5:	sub    eax,0x2d6d6f63
   14000ecea:	ins    BYTE PTR es:[rdi],dx
   14000eceb:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e321a22
   14000ecf1:	fs ins BYTE PTR es:[rdi],dx
   14000ecf3:	ins    BYTE PTR es:[rdi],dx
   14000ecf4:	add    BYTE PTR [rax],al
   14000ecf6:	(bad)  
   14000ecf7:	jo     0x14000ed62
   14000ecf9:	sub    eax,0x772d736d
   14000ecfe:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ed05:	sub    eax,0x70616568
   14000ed0a:	sub    eax,0x322d316c
   14000ed0f:	sub    eax,0x6c642e30
   14000ed14:	ins    BYTE PTR es:[rdi],dx
   14000ed15:	add    BYTE PTR [rcx+0x70],ah
   14000ed18:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e608f
   14000ed22:	outs   dx,DWORD PTR ds:[rsi]
   14000ed23:	jb     0x14000ed8a
   14000ed25:	sub    eax,0x70616568
   14000ed2a:	sub    eax,0x312d326c
   14000ed2f:	sub    eax,0x6c642e30
   14000ed34:	ins    BYTE PTR es:[rdi],dx
   14000ed35:	add    BYTE PTR [rcx+0x70],ah
   14000ed38:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e60af
   14000ed42:	outs   dx,DWORD PTR ds:[rsi]
   14000ed43:	jb     0x14000edaa
   14000ed45:	sub    eax,0x636f7270
   14000ed4a:	gs jae 0x14000edc0
   14000ed4d:	je     0x14000edb7
   14000ed4f:	jb     0x14000edb6
   14000ed51:	(bad)  
   14000ed52:	fs jae 0x14000ed82
   14000ed55:	ins    BYTE PTR es:[rdi],dx
   14000ed56:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e331a8d
   14000ed5c:	fs ins BYTE PTR es:[rdi],dx
   14000ed5e:	ins    BYTE PTR es:[rdi],dx
   14000ed5f:	add    BYTE PTR [rcx+0x70],ah
   14000ed62:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e60d9
   14000ed6c:	outs   dx,DWORD PTR ds:[rsi]
   14000ed6d:	jb     0x14000edd4
   14000ed6f:	sub    eax,0x666f7270
   14000ed74:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000ed7c:	sub    eax,0x6c642e30
   14000ed81:	ins    BYTE PTR es:[rdi],dx
   14000ed82:	add    BYTE PTR [rax],al
   14000ed84:	(bad)  
   14000ed85:	jo     0x14000edf0
   14000ed87:	sub    eax,0x772d736d
   14000ed8c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ed93:	sub    eax,0x736c7472
   14000ed98:	jne    0x14000ee0a
   14000ed9a:	jo     0x14000ee0b
   14000ed9c:	jb     0x14000ee12
   14000ed9e:	sub    eax,0x322d316c
   14000eda3:	sub    eax,0x6c642e30
   14000eda8:	ins    BYTE PTR es:[rdi],dx
   14000eda9:	add    BYTE PTR [rax],al
   14000edab:	add    BYTE PTR [rbx+0x6f],al
   14000edae:	ins    DWORD PTR es:[rdi],dx
   14000edaf:	ins    DWORD PTR es:[rdi],dx
   14000edb0:	(bad)  
   14000edb1:	outs   dx,BYTE PTR ds:[rsi]
   14000edb2:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14000edbb:	addr32 jbe 0x14000ee15
   14000edbe:	add    BYTE PTR [rax],al
   14000edc0:	(bad)  
   14000edc1:	jo     0x14000ee2c
   14000edc3:	sub    eax,0x772d736d
   14000edc8:	imul   ebp,DWORD PTR [rsi+0x2d],0x6f636873
   14000edcf:	jb     0x14000ee36
   14000edd1:	sub    eax,0x6f73626f
   14000edd6:	ins    BYTE PTR es:[rdi],dx
   14000edd7:	gs je  0x14000ee3f
   14000edda:	sub    eax,0x312d316c
   14000eddf:	sub    eax,0x6c642e30
   14000ede4:	ins    BYTE PTR es:[rdi],dx
   14000ede5:	add    BYTE PTR [rax+rax*1],bh
   14000ede8:	push   rax
   14000ede9:	outs   dx,DWORD PTR ds:[rsi]
   14000edea:	ja     0x14000ee51
   14000edec:	jb     0x14000ee31
   14000edee:	jb     0x14000ee55
   14000edf0:	(bad)  
   14000edf1:	je     0x14000ee58
   14000edf3:	push   rdx
   14000edf4:	gs jno 0x14000ee6c
   14000edf7:	gs jae 0x14000ee6e
   14000edfa:	add    BYTE PTR [rax],al
   14000edfc:	cmp    eax,0x776f5000
   14000ee01:	gs jb  0x14000ee57
   14000ee04:	gs je  0x14000ee59
   14000ee07:	gs jno 0x14000ee7f
   14000ee0a:	gs jae 0x14000ee81
   14000ee0d:	add    BYTE PTR [rcx+0x70],ah
   14000ee10:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e6187
   14000ee1a:	outs   dx,DWORD PTR ds:[rsi]
   14000ee1b:	jb     0x14000ee82
   14000ee1d:	sub    eax,0x6e72656b
   14000ee22:	gs ins BYTE PTR es:[rdi],dx
   14000ee24:	xor    esi,DWORD PTR [rdx]
   14000ee26:	sub    eax,0x6167656c
   14000ee2b:	movsxd edi,DWORD PTR [rcx+0x2d]
   14000ee2e:	ins    BYTE PTR es:[rdi],dx
   14000ee2f:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e321b66
   14000ee35:	fs ins BYTE PTR es:[rdi],dx
   14000ee37:	ins    BYTE PTR es:[rdi],dx
   14000ee38:	add    BYTE PTR [rax],al
   14000ee3a:	add    BYTE PTR ds:[rbp+0x6e],dl
   14000ee3e:	(bad)  
   14000ee3f:	je     0x14000eeb5
   14000ee41:	outs   dx,BYTE PTR gs:[rsi]
   14000ee43:	fs rex.RX jb 0x14000eeac
   14000ee47:	gs push rdx
   14000ee49:	gs jae 0x14000eec1
   14000ee4c:	ins    BYTE PTR es:[rdi],dx
   14000ee4d:	je     0x14000eec2
   14000ee4f:	add    BYTE PTR [rdx],bh
   14000ee51:	add    BYTE PTR [rbp+0x6e],dl
   14000ee54:	(bad)  
   14000ee55:	je     0x14000eecb
   14000ee57:	outs   dx,BYTE PTR gs:[rsi]
   14000ee59:	rex.RX imul r13d,DWORD PTR fs:[rsi+0x64],0x77736e41
   14000ee62:	gs jb  0x14000eeab
   14000ee65:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x52687469
   14000ee6d:	gs jae 0x14000eee5
   14000ee70:	ins    BYTE PTR es:[rdi],dx
   14000ee71:	je     0x14000eee6
   14000ee73:	add    BYTE PTR [rbx],bh
   14000ee75:	add    BYTE PTR [rbp+0x6e],dl
   14000ee78:	(bad)  
   14000ee79:	je     0x14000eeef
   14000ee7b:	outs   dx,BYTE PTR gs:[rsi]
   14000ee7d:	rex.RX imul r13d,DWORD PTR fs:[rsi+0x64],0x656c6946
   14000ee86:	rex.RX jb 0x14000eef8
   14000ee89:	ins    DWORD PTR es:[rdi],dx
   14000ee8a:	rex.XB ins DWORD PTR es:[rdi],dx
   14000ee8c:	imul   r13,QWORD PTR fs:[rsi+0x65],0x414e5500
   14000ee95:	push   rsp
   14000ee96:	push   rsp
   14000ee97:	rex.RB
   14000ee98:	rex.WRX
   14000ee99:	rex.R
   14000ee9a:	cs rex.R
   14000ee9c:	rex.WR
   14000ee9d:	rex.WR add BYTE PTR [rax],r8b
   14000eea0:	add    BYTE PTR [rax],al
   14000eea2:	rex.RXB
   14000eea3:	outs   dx,BYTE PTR gs:[rsi]
   14000eea5:	gs jb  0x14000ef09
   14000eea8:	je     0x14000ef0f
   14000eeaa:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14000eeaf:	outs   dx,BYTE PTR ds:[rsi]
   14000eeb0:	push   rcx
   14000eeb1:	jne    0x14000ef18
   14000eeb3:	jne    0x14000ef1a
   14000eeb5:	add    BYTE PTR [rcx],al
   14000eeb7:	add    BYTE PTR [rax+0x72],dl
   14000eeba:	outs   dx,DWORD PTR ds:[rsi]
   14000eebb:	movsxd esp,DWORD PTR [rbp+0x73]
   14000eebe:	jae    0x14000ef01
   14000eec0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000eec4:	outs   dx,BYTE PTR ds:[rsi]
   14000eec5:	push   rcx
   14000eec6:	jne    0x14000ef2d
   14000eec8:	jne    0x14000ef2f
   14000eeca:	add    BYTE PTR [rax],al
   14000eecc:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14000eed1:	outs   dx,BYTE PTR ds:[rsi]
   14000eed2:	push   rcx
   14000eed3:	jne    0x14000ef3a
   14000eed5:	jne    0x14000ef3c
   14000eed7:	cs fs ins BYTE PTR es:[rdi],dx
   14000eeda:	ins    BYTE PTR es:[rdi],dx
   14000eedb:	add    BYTE PTR [rax],dl
   14000eedd:	add    eax,0x72736377
   14000eee2:	movsxd ebp,DWORD PTR [rax+0x72]
   14000eee5:	add    BYTE PTR [rbx+0x3],ah
   14000eee8:	pop    rdi
   14000eee9:	jbe    0x14000ef5e
   14000eeeb:	outs   dx,BYTE PTR ds:[rsi]
   14000eeec:	jo     0x14000ef60
   14000eeee:	imul   ebp,DWORD PTR [rsi+0x74],0x69000066
   14000eef5:	add    ebx,DWORD PTR [rdi+0x76]
   14000eef8:	jae    0x14000ef68
   14000eefa:	ja     0x14000ef6c
   14000eefc:	jb     0x14000ef67
   14000eefe:	outs   dx,BYTE PTR ds:[rsi]
   14000eeff:	je     0x14000ef67
   14000ef01:	add    BYTE PTR [rdx+0x63775f03],cl
   14000ef07:	jae    0x14000ef72
   14000ef09:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000ef0c:	add    BYTE PTR [rax],al
   14000ef0e:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a374528b
   14000ef14:	push   0x60000072
   14000ef19:	add    ebx,DWORD PTR [rdi+0x76]
   14000ef1c:	jae    0x14000ef81
   14000ef1e:	ja     0x14000ef90
   14000ef20:	jb     0x14000ef8b
   14000ef22:	outs   dx,BYTE PTR ds:[rsi]
   14000ef23:	je     0x14000ef8b
   14000ef25:	add    ah,bl
   14000ef27:	add    al,0x73
   14000ef29:	ja     0x14000ef9b
   14000ef2b:	jb     0x14000ef96
   14000ef2d:	outs   dx,BYTE PTR ds:[rsi]
   14000ef2e:	je     0x14000ef96
   14000ef30:	pop    rdi
   14000ef31:	jae    0x14000ef33
   14000ef33:	add    BYTE PTR [rbx],cl
   14000ef35:	add    BYTE PTR [rsi+0x72],al
   14000ef38:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000ef42:	add    al,BYTE PTR [rax]
   14000ef44:	rex.W
   14000ef45:	gs (bad) 
   14000ef47:	jo     0x14000ef8a
   14000ef49:	ins    BYTE PTR es:[rdi],dx
   14000ef4a:	ins    BYTE PTR es:[rdi],dx
   14000ef4b:	outs   dx,DWORD PTR ds:[rsi]
   14000ef4c:	movsxd eax,DWORD PTR [rax]
   14000ef4e:	(bad)  
   14000ef4f:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000ef53:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000ef5c:	js     0x14000efb5
   14000ef5e:	add    BYTE PTR [rax],al
   14000ef60:	sbb    BYTE PTR [rax],al
   14000ef62:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ef64:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ef6c:	rex.XB jb 0x14000efd8
   14000ef6f:	je     0x14000efda
   14000ef71:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ef74:	push   rbx
   14000ef75:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ef7a:	outs   dx,BYTE PTR ds:[rsi]
   14000ef7b:	add    BYTE PTR [rip+0x61654c00],bl        # 0x1a1663b81
   14000ef81:	jbe    0x14000efe8
   14000ef83:	rex.XB jb 0x14000efef
   14000ef86:	je     0x14000eff1
   14000ef88:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ef8b:	push   rbx
   14000ef8c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ef91:	outs   dx,BYTE PTR ds:[rsi]
   14000ef92:	add    BYTE PTR [rax],al
   14000ef94:	sldt   WORD PTR [rdi+0x65]
   14000ef98:	je     0x14000efe7
   14000ef9a:	outs   dx,DWORD PTR ds:[rsi]
   14000ef9b:	fs jne 0x14000f00a
   14000ef9e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000efa8:	add    BYTE PTR [rax],al
   14000efaa:	adc    DWORD PTR [rax],eax
   14000efac:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000efae:	je     0x14000f015
   14000efb0:	jb     0x14000eff5
   14000efb2:	jb     0x14000f01d
   14000efb4:	je     0x14000f01f
   14000efb6:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000efb9:	push   rbx
   14000efba:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000efbf:	outs   dx,BYTE PTR ds:[rsi]
   14000efc0:	add    BYTE PTR [rax],al
   14000efc2:	sldt   WORD PTR [rbp+riz*2+0x6c]
   14000efc7:	gs je  0x14000f02f
   14000efca:	rex.XB jb 0x14000f036
   14000efcd:	je     0x14000f038
   14000efcf:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000efd2:	push   rbx
   14000efd3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000efd8:	outs   dx,BYTE PTR ds:[rsi]
   14000efd9:	add    BYTE PTR [rsi],dh
   14000efdb:	add    BYTE PTR [rdi+0x61],dl
   14000efde:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000efe6:	ins    BYTE PTR es:[edi],dx
   14000efe8:	gs rex.WRXB (bad) 
   14000efeb:	push   0x65
   14000efed:	movsxd esi,DWORD PTR [rax+rax*1+0x1b]
   14000eff1:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000eff5:	fs push rbx
   14000eff7:	je     0x14000f06b
   14000eff9:	imul   ebp,DWORD PTR [rsi+0x67],0xd0057
   14000f000:	push   rbx
   14000f001:	gs je  0x14000f050
   14000f004:	(bad)  
   14000f005:	jae    0x14000f07b
   14000f007:	rex.RB jb 0x14000f07c
   14000f00a:	outs   dx,DWORD PTR ds:[rsi]
   14000f00b:	jb     0x14000f00d
   14000f00d:	add    BYTE PTR [rcx],al
   14000f00f:	add    BYTE PTR [rbp+0x78],al
   14000f012:	jo     0x14000f075
   14000f014:	outs   dx,BYTE PTR ds:[rsi]
   14000f015:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000f018:	jbe    0x14000f083
   14000f01a:	jb     0x14000f08b
   14000f01c:	outs   dx,BYTE PTR ds:[rsi]
   14000f01d:	ins    DWORD PTR es:[rdi],dx
   14000f01e:	outs   dx,BYTE PTR gs:[rsi]
   14000f020:	je     0x14000f075
   14000f022:	je     0x14000f096
   14000f024:	imul   ebp,DWORD PTR [rsi+0x67],0x33005773
   14000f02b:	add    BYTE PTR [rdi+0x65],al
   14000f02e:	je     0x14000f076
   14000f030:	jne    0x14000f09e
   14000f032:	ins    BYTE PTR es:[rdi],dx
   14000f033:	push   rax
   14000f034:	(bad)  
   14000f035:	je     0x14000f09f
   14000f037:	rex.WRX (bad) 
   14000f039:	ins    DWORD PTR es:[rdi],dx
   14000f03a:	gs push rdi
   14000f03c:	add    BYTE PTR [rax],al
   14000f03e:	add    DWORD PTR [rax],eax
   14000f040:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f042:	jo     0x14000f0bd
   14000f044:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x2a005778
   14000f04d:	add    BYTE PTR [rdi+0x65],al
   14000f050:	je     0x14000f098
   14000f052:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000f05a:	(bad)  
   14000f05b:	jne    0x14000f0d1
   14000f05d:	gs jae 0x14000f0b7
   14000f060:	add    BYTE PTR [rax],al
   14000f062:	(bad)  
   14000f063:	add    BYTE PTR [rbx+0x72],al
   14000f066:	gs (bad) 
   14000f068:	je     0x14000f0cf
   14000f06a:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x46001e00
   14000f073:	ins    BYTE PTR es:[rdi],dx
   14000f074:	jne    0x14000f0e9
   14000f076:	push   0x656c6946
   14000f07b:	rex.X jne 0x14000f0e4
   14000f07e:	data16 gs jb 0x14000f0f5
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	or     al,0x0
   14000f086:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x736f6c43
   14000f08e:	add    BYTE PTR gs:[rbx],ch
   14000f091:	add    BYTE PTR [rdi+0x65],al
   14000f094:	je     0x14000f0dc
   14000f096:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   14000f09e:	ins    DWORD PTR es:[rdi],dx
   14000f09f:	(bad)  
   14000f0a0:	je     0x14000f10b
   14000f0a2:	outs   dx,DWORD PTR ds:[rsi]
   14000f0a3:	outs   dx,BYTE PTR ds:[rsi]
   14000f0a4:	rex.X jns 0x14000f0ef
   14000f0a7:	(bad)  
   14000f0a8:	outs   dx,BYTE PTR ds:[rsi]
   14000f0a9:	fs ins BYTE PTR es:[rdi],dx
   14000f0ab:	add    BYTE PTR gs:[rax],al
   14000f0ae:	push   rax
   14000f0af:	add    BYTE PTR [rbx+0x65],dl
   14000f0b2:	je     0x14000f0fa
   14000f0b4:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000f0bc:	(bad)  
   14000f0bd:	jne    0x14000f133
   14000f0bf:	gs jae 0x14000f119
   14000f0c2:	add    BYTE PTR [rax],al
   14000f0c4:	add    eax,DWORD PTR [rax]
   14000f0c6:	rex.XB jb 0x14000f12e
   14000f0c9:	(bad)  
   14000f0ca:	je     0x14000f131
   14000f0cc:	push   rax
   14000f0cd:	jb     0x14000f13e
   14000f0cf:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f0d2:	jae    0x14000f12b
   14000f0d4:	add    BYTE PTR [rax],al
   14000f0d6:	adc    eax,DWORD PTR [rax]
   14000f0d8:	rex.RXB
   14000f0d9:	gs je  0x14000f121
   14000f0dc:	js     0x14000f147
   14000f0de:	je     0x14000f123
   14000f0e0:	outs   dx,DWORD PTR ds:[rsi]
   14000f0e1:	fs gs push rax
   14000f0e4:	jb     0x14000f155
   14000f0e6:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f0e9:	jae    0x14000f0eb
   14000f0eb:	add    BYTE PTR [rbx],al
   14000f0ed:	add    BYTE PTR [rbx+0x72],al
   14000f0f0:	gs (bad) 
   14000f0f2:	je     0x14000f159
   14000f0f4:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000f0fc:	jns    0x14000f155
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	add    al,BYTE PTR [rax]
   14000f102:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f104:	ins    DWORD PTR es:[rdi],dx
   14000f105:	jo     0x14000f168
   14000f107:	jb     0x14000f16e
   14000f109:	push   rbx
   14000f10a:	je     0x14000f17e
   14000f10c:	imul   ebp,DWORD PTR [rsi+0x67],0x5000057
   14000f113:	add    BYTE PTR [rdx+0x65],dl
   14000f116:	addr32 rex.R
   14000f118:	gs ins BYTE PTR es:[rdi],dx
   14000f11a:	gs je  0x14000f182
   14000f11d:	rex.WXB
   14000f11e:	gs jns 0x14000f166
   14000f121:	js     0x14000f17a
   14000f123:	add    BYTE PTR [rbx],al
   14000f125:	add    BYTE PTR [rdx+0x65],dl
   14000f128:	addr32 rex.XB jb 0x14000f191
   14000f12c:	(bad)  
   14000f12d:	je     0x14000f194
   14000f12f:	rex.WXB
   14000f130:	gs jns 0x14000f178
   14000f133:	js     0x14000f18c
   14000f135:	add    BYTE PTR [rbx],ah
   14000f137:	add    BYTE PTR [rdx+0x65],dl
   14000f13a:	addr32 push rcx
   14000f13c:	jne    0x14000f1a3
   14000f13e:	jb     0x14000f1b9
   14000f140:	push   rsi
   14000f141:	(bad)  
   14000f142:	ins    BYTE PTR es:[rdi],dx
   14000f143:	jne    0x14000f1aa
   14000f145:	rex.RB js 0x14000f19f
   14000f148:	add    BYTE PTR [rax],al
   14000f14a:	or     DWORD PTR [rax],eax
   14000f14c:	push   rdx
   14000f14d:	gs addr32 rex.R
   14000f150:	gs ins BYTE PTR es:[rdi],dx
   14000f152:	gs je  0x14000f1ba
   14000f155:	push   rsp
   14000f156:	jb     0x14000f1bd
   14000f158:	gs push rdi
   14000f15a:	add    BYTE PTR [rax],al
   14000f15c:	(bad)  
   14000f15d:	add    BYTE PTR [rdx+0x65],dl
   14000f160:	addr32 rex.WRXB jo 0x14000f1c9
   14000f164:	outs   dx,BYTE PTR ds:[rsi]
   14000f165:	rex.WXB
   14000f166:	gs jns 0x14000f1ae
   14000f169:	js     0x14000f1c2
   14000f16b:	add    BYTE PTR [rcx],dl
   14000f16d:	add    BYTE PTR [rdx+0x65],dl
   14000f170:	rex.RX ins BYTE PTR es:[edi],dx
   14000f173:	jne    0x14000f1e8
   14000f175:	push   0x79654b
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	push   rdx
   14000f17d:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000f181:	outs   dx,DWORD PTR ds:[rsi]
   14000f182:	jae    0x14000f1e9
   14000f184:	rex.WXB
   14000f185:	gs jns 0x14000f188
   14000f188:	sub    al,0x0
   14000f18a:	push   rdx
   14000f18b:	gs addr32 push rbx
   14000f18e:	gs je  0x14000f1e7
   14000f191:	(bad)  
   14000f192:	ins    BYTE PTR es:[rdi],dx
   14000f193:	jne    0x14000f1fa
   14000f195:	rex.RB js 0x14000f1ef
   14000f198:	add    BYTE PTR [rax],al
   14000f19a:	(bad)  
   14000f19b:	add    BYTE PTR [rbx+0x6f],al
   14000f19e:	push   rsp
   14000f19f:	(bad)  
   14000f1a0:	jae    0x14000f20d
   14000f1a2:	rex.WRB
   14000f1a3:	gs ins DWORD PTR es:[rdi],dx
   14000f1a5:	rex.RX jb 0x14000f20d
   14000f1a8:	add    BYTE PTR gs:[rax],bl
   14000f1ab:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000f1af:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000f1b8:	add    BYTE PTR [rax],al
   14000f1ba:	adc    al,BYTE PTR [rax]
   14000f1bc:	rex.RXB
   14000f1bd:	gs je  0x14000f20d
   14000f1c0:	outs   dx,DWORD PTR ds:[rsi]
   14000f1c1:	fs jne 0x14000f230
   14000f1c4:	gs rex.W (bad) 
   14000f1c7:	outs   dx,BYTE PTR ds:[rsi]
   14000f1c8:	fs ins BYTE PTR es:[rdi],dx
   14000f1ca:	gs rex.RB js 0x14000f225
   14000f1ce:	add    BYTE PTR [rax],al
   14000f1d0:	(bad)  
   14000f1d1:	jo     0x14000f23c
   14000f1d3:	sub    eax,0x772d736d
   14000f1d8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000f1df:	sub    eax,0x636f7270
   14000f1e4:	gs jae 0x14000f25a
   14000f1e7:	outs   dx,BYTE PTR gs:[rsi]
   14000f1e9:	jbe    0x14000f254
   14000f1eb:	jb     0x14000f25c
   14000f1ed:	outs   dx,BYTE PTR ds:[rsi]
   14000f1ee:	ins    DWORD PTR es:[rdi],dx
   14000f1ef:	outs   dx,BYTE PTR gs:[rsi]
   14000f1f1:	je     0x14000f220
   14000f1f3:	ins    BYTE PTR es:[rdi],dx
   14000f1f4:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e311f2c
   14000f1fa:	fs ins BYTE PTR es:[rdi],dx
   14000f1fc:	ins    BYTE PTR es:[rdi],dx
   14000f1fd:	add    BYTE PTR [rcx+0x70],ah
   14000f200:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e6577
   14000f20a:	outs   dx,DWORD PTR ds:[rsi]
   14000f20b:	jb     0x14000f272
   14000f20d:	sub    eax,0x656c6966
   14000f212:	sub    eax,0x322d316c
   14000f217:	sub    eax,0x6c642e31
   14000f21c:	ins    BYTE PTR es:[rdi],dx
   14000f21d:	add    BYTE PTR [rcx+0x70],ah
   14000f220:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e6597
   14000f22a:	outs   dx,DWORD PTR ds:[rsi]
   14000f22b:	jb     0x14000f292
   14000f22d:	sub    eax,0x656c6966
   14000f232:	sub    eax,0x312d326c
   14000f237:	sub    eax,0x6c642e31
   14000f23c:	ins    BYTE PTR es:[rdi],dx
   14000f23d:	add    BYTE PTR [rcx+0x70],ah
   14000f240:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e65b7
   14000f24a:	outs   dx,DWORD PTR ds:[rsi]
   14000f24b:	jb     0x14000f2b2
   14000f24d:	sub    eax,0x69727473
   14000f252:	outs   dx,BYTE PTR ds:[rsi]
   14000f253:	addr32 sub eax,0x312d316c
   14000f259:	sub    eax,0x6c642e30
   14000f25e:	ins    BYTE PTR es:[rdi],dx
   14000f25f:	add    BYTE PTR [rcx+0x70],ah
   14000f262:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e65d9
   14000f26c:	outs   dx,DWORD PTR ds:[rsi]
   14000f26d:	jb     0x14000f2d4
   14000f26f:	sub    eax,0x69676572
   14000f274:	jae    0x14000f2ea
   14000f276:	jb     0x14000f2f1
   14000f278:	sub    eax,0x312d316c
   14000f27d:	sub    eax,0x6c642e30
   14000f282:	ins    BYTE PTR es:[rdi],dx
   14000f283:	add    BYTE PTR [rdi+0x4c],cl
   14000f286:	rex.RB
   14000f287:	push   r13
   14000f289:	push   rsp
   14000f28a:	xor    esi,DWORD PTR [rdx]
   14000f28c:	cs fs ins BYTE PTR es:[rdi],dx
   14000f28f:	ins    BYTE PTR es:[rdi],dx
   14000f290:	add    BYTE PTR [rax],al
   14000f292:	(bad)  
   14000f293:	jo     0x14000f2fe
   14000f295:	sub    eax,0x772d736d
   14000f29a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000f2a1:	sub    eax,0x7262696c
   14000f2a6:	(bad)  
   14000f2a7:	jb     0x14000f322
   14000f2a9:	ins    BYTE PTR es:[rdi],dx
   14000f2aa:	outs   dx,DWORD PTR ds:[rsi]
   14000f2ab:	(bad)  
   14000f2ac:	fs gs jb 0x14000f2dd
   14000f2b0:	ins    BYTE PTR es:[rdi],dx
   14000f2b1:	xor    DWORD PTR [rip+0x2e312d32],ebp        # 0x16e321fe9
   14000f2b7:	fs ins BYTE PTR es:[rdi],dx
   14000f2b9:	ins    BYTE PTR es:[rdi],dx
   14000f2ba:	add    BYTE PTR [rax],al
   14000f2bc:	sbb    eax,0x53744e02
   14000f2c1:	gs je  0x14000f30d
   14000f2c4:	outs   dx,BYTE PTR ds:[rsi]
   14000f2c5:	outs   dx,WORD PTR ds:[rsi]
   14000f2c7:	jb     0x14000f336
   14000f2c9:	(bad)  
   14000f2ca:	je     0x14000f335
   14000f2cc:	outs   dx,DWORD PTR ds:[rsi]
   14000f2cd:	outs   dx,BYTE PTR ds:[rsi]
   14000f2ce:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x52048a00
   14000f2d7:	je     0x14000f345
   14000f2d9:	rex.WRX je 0x14000f32f
   14000f2dc:	je     0x14000f33f
   14000f2de:	je     0x14000f355
   14000f2e0:	jae    0x14000f336
   14000f2e2:	outs   dx,DWORD PTR ds:[rsi]
   14000f2e3:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000f2e5:	jae    0x14000f32c
   14000f2e7:	jb     0x14000f35b
   14000f2e9:	outs   dx,DWORD PTR ds:[rsi]
   14000f2ea:	jb     0x14000f2ec
   14000f2ec:	stos   DWORD PTR es:[rdi],eax
   14000f2ed:	add    edx,DWORD PTR [rdx+0x74]
   14000f2f0:	ins    BYTE PTR es:[rdi],dx
   14000f2f1:	rex.RX jb 0x14000f359
   14000f2f4:	gs rex.W
   14000f2f6:	gs (bad) 
   14000f2f8:	jo     0x14000f2fa
   14000f2fa:	stos   BYTE PTR es:[rdi],al
   14000f2fb:	add    dl,BYTE PTR [rdx+0x74]
   14000f2fe:	ins    BYTE PTR es:[rdi],dx
   14000f2ff:	rex.B ins BYTE PTR es:[rdi],dx
   14000f301:	ins    BYTE PTR es:[rdi],dx
   14000f302:	outs   dx,DWORD PTR ds:[rsi]
   14000f303:	movsxd esp,DWORD PTR [rcx+0x74]
   14000f306:	gs rex.W
   14000f308:	gs (bad) 
   14000f30a:	jo     0x14000f30c
   14000f30c:	(bad)  
   14000f30d:	add    al,0x52
   14000f30f:	je     0x14000f37d
   14000f311:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f313:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   14000f31b:	gs push rbx
   14000f31d:	je     0x14000f391
   14000f31f:	imul   ebp,DWORD PTR [rsi+0x67],0x1050000
   14000f326:	rex.WRX je 0x14000f36c
   14000f329:	jb     0x14000f390
   14000f32b:	(bad)  
   14000f32c:	je     0x14000f393
   14000f32e:	rex.WXB
   14000f32f:	gs jns 0x14000f332
   14000f332:	out    dx,al
   14000f333:	add    BYTE PTR [rsi+0x74],cl
   14000f336:	rex.XB ins BYTE PTR es:[rdi],dx
   14000f338:	outs   dx,DWORD PTR ds:[rsi]
   14000f339:	jae    0x14000f3a0
   14000f33b:	add    BYTE PTR [rip+0x53744e02],bh        # 0x193754143
   14000f341:	gs je  0x14000f39a
   14000f344:	(bad)  
   14000f345:	ins    BYTE PTR es:[rdi],dx
   14000f346:	jne    0x14000f3ad
   14000f348:	rex.WXB
   14000f349:	gs jns 0x14000f34c
   14000f34c:	outs   dx,BYTE PTR ds:[rsi]
   14000f34d:	je     0x14000f3b3
   14000f34f:	ins    BYTE PTR es:[rdi],dx
   14000f350:	ins    BYTE PTR es:[rdi],dx
   14000f351:	cs fs ins BYTE PTR es:[rdi],dx
   14000f354:	ins    BYTE PTR es:[rdi],dx
   14000f355:	add    BYTE PTR [rdi],cl
   14000f357:	add    BYTE PTR [rdi+0x72],dl
   14000f35a:	imul   esi,DWORD PTR [rbp+riz*2+0x50],0x61766972
   14000f362:	je     0x14000f3c9
   14000f364:	push   rax
   14000f365:	jb     0x14000f3d6
   14000f367:	imul   bp,WORD PTR [rbp+riz*2+0x53],0x7274
   14000f36e:	imul   ebp,DWORD PTR [rsi+0x67],0x61000057
   14000f375:	jo     0x14000f3e0
   14000f377:	sub    eax,0x772d736d
   14000f37c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000f383:	sub    eax,0x76697270
   14000f388:	(bad)  
   14000f389:	je     0x14000f3f0
   14000f38b:	jo     0x14000f3ff
   14000f38d:	outs   dx,DWORD PTR ds:[rsi]
   14000f38e:	imul   bp,WORD PTR [rbp+riz*2+0x2d],0x316c
   14000f395:	sub    eax,0x2e312d31
   14000f39a:	fs ins BYTE PTR es:[rdi],dx
   14000f39c:	ins    BYTE PTR es:[rdi],dx
   14000f39d:	add    BYTE PTR [rip+0x616e5500],ah        # 0x1a16f48a3
   14000f3a3:	je     0x14000f419
   14000f3a5:	outs   dx,BYTE PTR gs:[rsi]
   14000f3a7:	fs rex.XB je 0x14000f423
   14000f3ab:	rex.WRXB jo 0x14000f413
   14000f3ae:	outs   dx,BYTE PTR ds:[rsi]
   14000f3af:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000f3b1:	fs add BYTE PTR gs:[rax+rax*1],dl
   14000f3b6:	push   rbp
   14000f3b7:	outs   dx,BYTE PTR ds:[rsi]
   14000f3b8:	(bad)  
   14000f3b9:	je     0x14000f42f
   14000f3bb:	outs   dx,BYTE PTR gs:[rsi]
   14000f3bd:	fs rex.XB je 0x14000f439
   14000f3c1:	rex.RXB
   14000f3c2:	gs je  0x14000f40a
   14000f3c5:	outs   dx,BYTE PTR ds:[rsi]
   14000f3c6:	jne    0x14000f435
   14000f3c8:	push   rsi
   14000f3c9:	(bad)  
   14000f3ca:	ins    BYTE PTR es:[rdi],dx
   14000f3cb:	jne    0x14000f432
   14000f3cd:	rex.X jns 0x14000f41e
   14000f3d0:	outs   dx,DWORD PTR ds:[rsi]
   14000f3d1:	fs add BYTE PTR gs:[rax],bl
   14000f3d5:	add    BYTE PTR [rbp+0x6e],dl
   14000f3d8:	(bad)  
   14000f3d9:	je     0x14000f44f
   14000f3db:	outs   dx,BYTE PTR gs:[rsi]
   14000f3dd:	fs rex.XB je 0x14000f459
   14000f3e1:	rex.RXB
   14000f3e2:	gs je  0x14000f42b
   14000f3e5:	ins    BYTE PTR es:[rdi],dx
   14000f3e6:	(bad)  
   14000f3e7:	addr32 rex.X jns 0x14000f439
   14000f3eb:	outs   dx,DWORD PTR ds:[rsi]
   14000f3ec:	fs add BYTE PTR gs:[rax],al
   14000f3f0:	add    al,BYTE PTR [rax]
   14000f3f2:	push   rbp
   14000f3f3:	outs   dx,BYTE PTR ds:[rsi]
   14000f3f4:	(bad)  
   14000f3f5:	je     0x14000f46b
   14000f3f7:	outs   dx,BYTE PTR gs:[rsi]
   14000f3f9:	fs rex.B
   14000f3fb:	fs fs push rdx
   14000f3fe:	gs jae 0x14000f476
   14000f401:	ins    BYTE PTR es:[rdi],dx
   14000f402:	je     0x14000f477
   14000f404:	add    BYTE PTR [rax],al
   14000f406:	cmp    eax,0x616e5500
   14000f40b:	je     0x14000f481
   14000f40d:	outs   dx,BYTE PTR gs:[rsi]
   14000f40f:	fs rex.RX jb 0x14000f478
   14000f413:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14000f416:	fs add BYTE PTR gs:[rax],al
   14000f41a:	(bad)  
   14000f41b:	add    BYTE PTR [rbp+0x6e],dl
   14000f41e:	(bad)  
   14000f41f:	je     0x14000f495
   14000f421:	outs   dx,BYTE PTR gs:[rsi]
   14000f423:	fs rex.XB je 0x14000f49f
   14000f427:	rex.R
   14000f428:	gs jae 0x14000f490
   14000f42b:	jb     0x14000f496
   14000f42d:	(bad)  
   14000f42e:	ins    BYTE PTR es:[rdi],dx
   14000f42f:	imul   edi,DWORD PTR [rdx+0x65],0x68746957
   14000f436:	push   rdx
   14000f437:	gs jae 0x14000f4af
   14000f43a:	ins    BYTE PTR es:[rdi],dx
   14000f43b:	je     0x14000f4b0
   14000f43d:	add    BYTE PTR [rdi],al
   14000f43f:	add    BYTE PTR [rbp+0x6e],dl
   14000f442:	(bad)  
   14000f443:	je     0x14000f4b9
   14000f445:	outs   dx,BYTE PTR gs:[rsi]
   14000f447:	fs rex.XB je 0x14000f4c3
   14000f44b:	rex.XB ins BYTE PTR es:[rdi],dx
   14000f44d:	gs (bad) 
   14000f44f:	outs   dx,BYTE PTR ds:[rsi]
   14000f450:	jne    0x14000f4c2
   14000f452:	add    BYTE PTR [rax],al
   14000f454:	sub    al,0x0
   14000f456:	push   rbp
   14000f457:	outs   dx,BYTE PTR ds:[rsi]
   14000f458:	(bad)  
   14000f459:	je     0x14000f4cf
   14000f45b:	outs   dx,BYTE PTR gs:[rsi]
   14000f45d:	fs rex.XB je 0x14000f4d9
   14000f461:	push   rbx
   14000f462:	gs jb  0x14000f4ce
   14000f465:	(bad)  
   14000f466:	ins    BYTE PTR es:[rdi],dx
   14000f467:	imul   edi,DWORD PTR [rdx+0x65],0x470000
   14000f46e:	push   rbp
   14000f46f:	outs   dx,BYTE PTR ds:[rsi]
   14000f470:	(bad)  
   14000f471:	je     0x14000f4e7
   14000f473:	outs   dx,BYTE PTR gs:[rsi]
   14000f475:	fs rex.WRB (bad) 
   14000f478:	jb     0x14000f4e5
   14000f47a:	push   rax
   14000f47b:	(bad)  
   14000f47c:	jae    0x14000f4f1
   14000f47e:	push   rbp
   14000f47f:	jae    0x14000f4e6
   14000f481:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14000f484:	rex.XB je 0x14000f4ff
   14000f487:	add    BYTE PTR [rip+0x616e5500],al        # 0x1a16f498d
   14000f48d:	je     0x14000f503
   14000f48f:	outs   dx,BYTE PTR gs:[rsi]
   14000f491:	fs rex.XB je 0x14000f50d
   14000f495:	rex.X
   14000f496:	imul   ebp,DWORD PTR gs:[esi+0x4d],0x6669646f
   14000f49f:	jns    0x14000f4a1
   14000f4a1:	add    BYTE PTR [rdx],ch
   14000f4a3:	add    BYTE PTR [rbp+0x6e],dl
   14000f4a6:	(bad)  
   14000f4a7:	je     0x14000f51d
   14000f4a9:	outs   dx,BYTE PTR gs:[rsi]
   14000f4ab:	fs rex.XB je 0x14000f527
   14000f4af:	push   rdx
   14000f4b0:	gs jo  0x14000f51f
   14000f4b3:	(bad)  
   14000f4b4:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000f4b7:	(bad)  
   14000f4b8:	je     0x14000f51d
   14000f4ba:	push   0x6f4e6465
   14000f4bf:	fs gs jae 0x14000f51a
   14000f4c3:	imul   esi,DWORD PTR [rax+rbp*2+0x54],0x747865
   14000f4cb:	add    BYTE PTR [rax],cl
   14000f4cd:	add    BYTE PTR [rbp+0x6e],dl
   14000f4d0:	(bad)  
   14000f4d1:	je     0x14000f547
   14000f4d3:	outs   dx,BYTE PTR gs:[rsi]
   14000f4d5:	fs rex.XB je 0x14000f551
   14000f4d9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f4db:	ins    DWORD PTR es:[rdi],dx
   14000f4dc:	ins    DWORD PTR es:[rdi],dx
   14000f4dd:	imul   esi,DWORD PTR [rbp+rcx*2+0x6f],0x79666964
   14000f4e5:	add    BYTE PTR [rsi],al
   14000f4e7:	add    BYTE PTR [rbp+0x6e],dl
   14000f4ea:	(bad)  
   14000f4eb:	je     0x14000f561
   14000f4ed:	outs   dx,BYTE PTR gs:[rsi]
   14000f4ef:	fs rex.XB je 0x14000f56b
   14000f4f3:	rex.XB (bad) 
   14000f4f5:	outs   dx,BYTE PTR ds:[rsi]
   14000f4f6:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000f4f9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f4fb:	imul   esp,DWORD PTR fs:[rsi+0x79],0x55002d00
   14000f503:	outs   dx,BYTE PTR ds:[rsi]
   14000f504:	(bad)  
   14000f505:	je     0x14000f57b
   14000f507:	outs   dx,BYTE PTR gs:[rsi]
   14000f509:	fs rex.XB je 0x14000f585
   14000f50d:	push   rbx
   14000f50e:	gs jb  0x14000f57a
   14000f511:	(bad)  
   14000f512:	ins    BYTE PTR es:[rdi],dx
   14000f513:	imul   edi,DWORD PTR [rdx+0x65],0x74746553
   14000f51a:	imul   ebp,DWORD PTR [rsi+0x67],0x72745373
   14000f521:	gs (bad) 
   14000f523:	ins    DWORD PTR es:[rdi],dx
   14000f524:	add    BYTE PTR [rax],al
   14000f526:	xchg   esi,eax
   14000f527:	add    al,0x6d
   14000f529:	gs ins DWORD PTR es:[rdi],dx
   14000f52b:	jae    0x14000f592
   14000f52d:	je     0x14000f52f
   14000f52f:	add    BYTE PTR [rdx],al
   14000f531:	add    eax,0x63736377
   14000f536:	ins    DWORD PTR es:[rdi],dx
   14000f537:	jo     0x14000f539
	...

Disassembly of section .data:

0000000140010000 <.data>:
   140010000:	add    DWORD PTR [rax],eax
   140010002:	add    BYTE PTR [rax],al
   140010004:	add    BYTE PTR [rax],al
   140010006:	add    BYTE PTR [rax],al
   140010008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14001000e:	add    BYTE PTR [rax],al
   140010010:	int    0x5d
   140010012:	and    dl,dl
   140010014:	data16 (bad) 
   140010016:	(bad)  
   140010017:	inc    DWORD PTR [rax]
	...
   140010049:	add    BYTE PTR [rdx],al
   14001004b:	add    BYTE PTR [rax],al
   14001004d:	add    BYTE PTR [rax],al
   14001004f:	add    al,al
   140010051:	(bad)  
   140010052:	add    DWORD PTR [rax+0x1],eax
   140010055:	add    BYTE PTR [rax],al
   140010057:	add    BYTE PTR [rax],ch
   140010059:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001005a:	add    BYTE PTR [rax+0x1],al
   14001005d:	add    BYTE PTR [rax],al
   14001005f:	add    BYTE PTR [rax],ah
   140010061:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010062:	add    BYTE PTR [rax+0x1],al
   140010065:	add    BYTE PTR [rax],al
   140010067:	add    al,ah
   140010069:	adc    al,0x0
   14001006b:	rex add DWORD PTR [rax],eax
   14001006e:	add    BYTE PTR [rax],al
   140010070:	jo     0x140010039
   140010072:	add    BYTE PTR [rax+0x1],al
   140010075:	add    BYTE PTR [rax],al
   140010077:	add    BYTE PTR [rax+0x14000c7],cl
   14001007d:	add    BYTE PTR [rax],al
   14001007f:	add    BYTE PTR [rax+0x14000c7],bh
	...
   1400100b9:	add    BYTE PTR [rcx],al
   1400100bb:	add    BYTE PTR [rax],al
   1400100bd:	add    BYTE PTR [rax],al
   1400100bf:	add    BYTE PTR [rax+0x1400107],al
   1400100c5:	add    BYTE PTR [rax],al
   1400100c7:	add    BYTE PTR [rax+0x14000d2],dl
   1400100cd:	add    BYTE PTR [rax],al
   1400100cf:	add    BYTE PTR [rax+0x14000d2],cl
   1400100d5:	add    BYTE PTR [rax],al
   1400100d7:	add    al,al
   1400100d9:	sbb    BYTE PTR [rax],al
   1400100db:	rex add DWORD PTR [rax],eax
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	nop
   1400100e1:	mov    BYTE PTR [rax],al
   1400100e3:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

0000000140011000 <.pdata>:
   140011000:	add    BYTE PTR [rax],dl
   140011002:	add    BYTE PTR [rax],al
   140011004:	and    eax,0x24000010
   140011009:	fild   DWORD PTR [rax]
   14001100b:	add    BYTE PTR [rax],dh
   14001100d:	adc    BYTE PTR [rax],al
   14001100f:	add    BYTE PTR [rcx+0x10],dl
   140011012:	add    BYTE PTR [rax],al
   140011014:	and    al,0xdb
   140011016:	add    BYTE PTR [rax],al
   140011018:	(bad)  
   140011019:	adc    BYTE PTR [rax],al
   14001101b:	add    BYTE PTR [rbp+0x24000010],al
   140011021:	fild   DWORD PTR [rax]
   140011023:	add    BYTE PTR [rax+0x3000010],dl
   140011029:	adc    DWORD PTR [rax],eax
   14001102b:	add    BYTE PTR [rax+riz*8],ch
   14001102e:	add    BYTE PTR [rax],al
   140011030:	adc    BYTE PTR [rcx],dl
   140011032:	add    BYTE PTR [rax],al
   140011034:	(bad)  
   140011035:	adc    al,BYTE PTR [rax]
   140011037:	add    BYTE PTR [rax+riz*8],dh
   14001103a:	add    BYTE PTR [rax],al
   14001103c:	xor    BYTE PTR [rdx],dl
   14001103e:	add    BYTE PTR [rax],al
   140011040:	xchg   ebx,eax
   140011041:	adc    eax,DWORD PTR [rax]
   140011043:	add    BYTE PTR [rax-0x5fffff26],bh
   140011049:	adc    eax,DWORD PTR [rax]
   14001104b:	add    dl,dl
   14001104d:	adc    al,0x0
   14001104f:	add    al,dl
   140011051:	fiadd  DWORD PTR [rax]
   140011053:	add    al,ah
   140011055:	adc    al,0x0
   140011057:	add    bl,dl
   140011059:	(bad)  
   14001105a:	add    BYTE PTR [rax],al
   14001105c:	(bad)  
   14001105e:	add    BYTE PTR [rax],al
   140011060:	loopne 0x140011078
   140011062:	add    BYTE PTR [rax],al
   140011064:	mov    bl,0x18
   140011066:	add    BYTE PTR [rax],al
   140011068:	cld    
   140011069:	fiadd  DWORD PTR [rax]
   14001106b:	add    al,al
   14001106d:	sbb    BYTE PTR [rax],al
   14001106f:	add    BYTE PTR [rbp+0x19],bl
   140011072:	add    BYTE PTR [rax],al
   140011074:	adc    al,0xdb
   140011076:	add    BYTE PTR [rax],al
   140011078:	sbb    DWORD PTR fs:[rax],eax
   14001107b:	add    BYTE PTR [rbx+0x3400001e],dl
   140011081:	fild   DWORD PTR [rax]
   140011083:	add    BYTE PTR [rsi+rbx*1+0x23750000],bl
   14001108a:	add    BYTE PTR [rax],al
   14001108c:	push   rsp
   14001108d:	fild   DWORD PTR [rax]
   14001108f:	add    BYTE PTR [rbx+riz*1+0x0],bh
   140011093:	add    BYTE PTR [rdi+0x74000025],dl
   140011099:	fild   DWORD PTR [rax]
   14001109b:	add    BYTE PTR [rax-0x35ffffdb],ah
   1400110a1:	(bad)  
   1400110a2:	add    BYTE PTR [rax],al
   1400110a4:	sbb    bl,0x0
   1400110a7:	add    al,dl
   1400110a9:	(bad)  
   1400110aa:	add    BYTE PTR [rax],al
   1400110ac:	mov    ah,0x28
   1400110ae:	add    BYTE PTR [rax],al
   1400110b0:	movabs al,ds:0x17000028f40000db
   1400110b9:	sub    al,BYTE PTR [rax]
   1400110bb:	add    BYTE PTR [rax+0x200000db],dh
   1400110c1:	sub    al,BYTE PTR [rax]
   1400110c3:	add    BYTE PTR [rdi-0x37ffffd6],bl
   1400110c9:	fild   DWORD PTR [rax]
   1400110cb:	add    BYTE PTR [rax+0x6600002a],ch
   1400110d1:	sub    eax,DWORD PTR [rax]
   1400110d3:	add    ah,dl
   1400110d5:	fild   DWORD PTR [rax]
   1400110d7:	add    BYTE PTR [rbx+rbp*1+0x0],ch
   1400110db:	add    BYTE PTR [rbx+0x2c],bl
   1400110de:	add    BYTE PTR [rax],al
   1400110e0:	in     al,dx
   1400110e1:	fild   DWORD PTR [rax]
   1400110e3:	add    BYTE PTR [rsp+rbp*1+0x0],ah
   1400110e7:	add    bh,dl
   1400110e9:	sub    al,0x0
   1400110eb:	add    BYTE PTR [rsp+rbx*8],al
   1400110ee:	add    BYTE PTR [rax],al
   1400110f0:	loopne 0x14001111e
   1400110f2:	add    BYTE PTR [rax],al
   1400110f4:	sbb    BYTE PTR [rsi],ch
   1400110f6:	add    BYTE PTR [rax],al
   1400110f8:	sub    al,0xdb
   1400110fa:	add    BYTE PTR [rax],al
   1400110fc:	and    BYTE PTR [rsi],ch
   1400110fe:	add    BYTE PTR [rax],al
   140011100:	rex.B
   140011101:	add    BYTE PTR cs:[rax],al
   140011104:	adc    ah,bl
   140011106:	add    BYTE PTR [rax],al
   140011108:	rex.W
   140011109:	add    BYTE PTR cs:[rax],al
   14001110c:	pop    rcx
   14001110d:	xor    BYTE PTR [rax],al
   14001110f:	add    BYTE PTR [rax],bl
   140011111:	fadd   QWORD PTR [rax]
   140011113:	add    BYTE PTR [rax+0x30],ah
   140011116:	add    BYTE PTR [rax],al
   140011118:	xlat   BYTE PTR ds:[rbx]
   140011119:	xor    BYTE PTR [rax],al
   14001111b:	add    BYTE PTR [rax],bh
   14001111d:	fadd   QWORD PTR [rax]
   14001111f:	add    al,ah
   140011121:	xor    BYTE PTR [rax],al
   140011123:	add    BYTE PTR [rbp+0x31],cl
   140011126:	add    BYTE PTR [rax],al
   140011128:	sub    al,0xdb
   14001112a:	add    BYTE PTR [rax],al
   14001112c:	push   rsp
   14001112d:	xor    DWORD PTR [rax],eax
   14001112f:	add    ah,ch
   140011131:	xor    DWORD PTR [rax],eax
   140011133:	add    BYTE PTR [rax-0x24],cl
   140011136:	add    BYTE PTR [rax],al
   140011138:	hlt    
   140011139:	xor    DWORD PTR [rax],eax
   14001113b:	add    BYTE PTR [rcx],dl
   14001113d:	xor    al,BYTE PTR [rax]
   14001113f:	add    BYTE PTR [rsp+rbx*8+0x0],bl
   140011143:	add    BYTE PTR [rax],bl
   140011145:	xor    al,BYTE PTR [rax]
   140011147:	add    dl,al
   140011149:	xor    eax,DWORD PTR [rax]
   14001114b:	add    BYTE PTR [rsp+rbx*8+0x0],ah
   14001114f:	add    al,cl
   140011151:	xor    eax,DWORD PTR [rax]
   140011153:	add    BYTE PTR [rax+0x34],dh
   140011156:	add    BYTE PTR [rax],al
   140011158:	sbb    ah,0x0
   14001115b:	add    BYTE PTR [rax+0x34],bh
   14001115e:	add    BYTE PTR [rax],al
   140011160:	(bad)  
   140011161:	xor    eax,0xdc980000
   140011166:	add    BYTE PTR [rax],al
   140011168:	adc    BYTE PTR [rip+0x35fc0000],dh        # 0x175fd116e
   14001116e:	add    BYTE PTR [rax],al
   140011170:	test   al,0xdc
   140011172:	add    BYTE PTR [rax],al
   140011174:	add    al,0x36
   140011176:	add    BYTE PTR [rax],al
   140011178:	repnz cmp DWORD PTR [rax],eax
   14001117b:	add    BYTE PTR [rsp+rbx*8+0x39f80000],bh
   140011182:	add    BYTE PTR [rax],al
   140011184:	xchg   ebp,eax
   140011185:	cmp    al,BYTE PTR [rax]
   140011187:	add    BYTE PTR [rbx+rbx*8],dl
   14001118a:	add    BYTE PTR [rax],al
   14001118c:	pushf  
   14001118d:	cmp    al,BYTE PTR [rax]
   14001118f:	add    BYTE PTR [rip+0x1400003b],dh        # 0x1540111d0
   140011195:	fild   DWORD PTR [rax]
   140011197:	add    BYTE PTR [rbx+rdi*1],bh
   14001119a:	add    BYTE PTR [rax],al
   14001119c:	sbb    eax,0xe400003c
   1400111a1:	fadd   QWORD PTR [rax]
   1400111a3:	add    BYTE PTR [rsp+rdi*1],ah
   1400111a6:	add    BYTE PTR [rax],al
   1400111a8:	sub    al,0x3e
   1400111aa:	add    BYTE PTR [rax],al
   1400111ac:	clc    
   1400111ad:	fadd   QWORD PTR [rax]
   1400111af:	add    BYTE PTR [rsi+rdi*1],dh
   1400111b2:	add    BYTE PTR [rax],al
   1400111b4:	stos   BYTE PTR es:[rdi],al
   1400111b5:	add    BYTE PTR ds:[rax],al
   1400111b8:	adc    al,0xdd
   1400111ba:	add    BYTE PTR [rax],al
   1400111bc:	mov    al,0x3e
   1400111be:	add    BYTE PTR [rax],al
   1400111c0:	icebp  
   1400111c1:	add    BYTE PTR [rax],al
   1400111c4:	sbb    al,0xdd
   1400111c6:	add    BYTE PTR [rax],al
   1400111c8:	clc    
   1400111c9:	add    BYTE PTR [rax],al
   1400111cc:	out    0x42,al
   1400111ce:	add    BYTE PTR [rax],al
   1400111d0:	cmp    al,0xdd
   1400111d2:	add    BYTE PTR [rax],al
   1400111d4:	in     al,dx
   1400111d5:	rex.X add BYTE PTR [rax],al
   1400111d8:	(bad)  
   1400111d9:	rex.XB add BYTE PTR [r8],al
   1400111dc:	sub    al,0xdb
   1400111de:	add    BYTE PTR [rax],al
   1400111e0:	rex.W
   1400111e1:	rex.XB add BYTE PTR [r8],al
   1400111e4:	out    dx,eax
   1400111e5:	rex.XB add BYTE PTR [r8],al
   1400111e8:	rex.W fadd QWORD PTR [rax]
   1400111eb:	add    al,bh
   1400111ed:	rex.XB add BYTE PTR [r8],al
   1400111f0:	sbb    BYTE PTR [rbp+0x0],al
   1400111f3:	add    BYTE PTR [rax-0x23],dl
   1400111f6:	add    BYTE PTR [rax],al
   1400111f8:	and    BYTE PTR [rbp+0x0],al
   1400111fb:	add    BYTE PTR [rcx],bl
   1400111fd:	rex.RX add BYTE PTR [rax],r8b
   140011200:	push   0x200000dd
   140011205:	rex.RX add BYTE PTR [rax],r8b
   140011208:	mov    BYTE PTR [rsi+0x0],0x0
   14001120c:	jl     0x1400111eb
   14001120e:	add    BYTE PTR [rax],al
   140011210:	int3   
   140011211:	rex.RX add BYTE PTR [rax],r8b
   140011214:	movabs al,ds:0xa80000dd8c000047
   14001121d:	rex.RXB add BYTE PTR [r8],r8b
   140011220:	lock rex.RXB add BYTE PTR [r8],r8b
   140011224:	pushf  
   140011225:	fld    QWORD PTR [rax]
   140011227:	add    al,bh
   140011229:	rex.RXB add BYTE PTR [r8],r8b
   14001122c:	mov    ecx,0xa4000048
   140011231:	fld    QWORD PTR [rax]
   140011233:	add    al,al
   140011235:	rex.W add BYTE PTR [rax],al
   140011238:	jl     0x140011283
   14001123a:	add    BYTE PTR [rax],al
   14001123c:	rex.W fadd QWORD PTR [rax]
   14001123f:	add    BYTE PTR [rcx+rcx*2+0x4aa80000],al
   140011246:	add    BYTE PTR [rax],al
   140011248:	mov    eax,0xb00000da
   14001124d:	rex.WX add BYTE PTR [rax],al
   140011250:	(bad)  
   140011251:	rex.WXB add BYTE PTR [r8],al
   140011254:	sub    al,0xdb
   140011256:	add    BYTE PTR [rax],al
   140011258:	and    BYTE PTR [rbx+0x0],cl
   14001125b:	add    BYTE PTR [rbx+0x4c],ch
   14001125e:	add    BYTE PTR [rax],al
   140011260:	mov    eax,0x740000dd
   140011265:	rex.WR add BYTE PTR [rax],r8b
   140011268:	enter  0x4d,0x0
   14001126c:	int3   
   14001126d:	fld    QWORD PTR [rax]
   14001126f:	add    al,dl
   140011271:	rex.WRB add BYTE PTR [r8],r8b
   140011274:	add    al,0x4f
   140011276:	add    BYTE PTR [rax],al
   140011278:	in     al,0xdd
   14001127a:	add    BYTE PTR [rax],al
   14001127c:	or     al,0x4f
   14001127e:	add    BYTE PTR [rax],al
   140011280:	rex.WRXB add BYTE PTR gs:[r8],r8b
   140011284:	sub    al,0xdb
   140011286:	add    BYTE PTR [rax],al
   140011288:	ins    BYTE PTR es:[rdi],dx
   140011289:	rex.WRXB add BYTE PTR [r8],r8b
   14001128c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001128d:	push   rax
   14001128e:	add    BYTE PTR [rax],al
   140011290:	lock fld QWORD PTR [rax]
   140011293:	add    BYTE PTR [rax+rdx*2+0x50e80000],ch
   14001129a:	add    BYTE PTR [rax],al
   14001129c:	sub    al,0xdb
   14001129e:	add    BYTE PTR [rax],al
   1400112a0:	lock push rax
   1400112a2:	add    BYTE PTR [rax],al
   1400112a4:	jg     0x1400112f7
   1400112a6:	add    BYTE PTR [rax],al
   1400112a8:	clc    
   1400112a9:	fld    QWORD PTR [rax]
   1400112ab:	add    BYTE PTR [rax-0x9ffffaf],cl
   1400112b1:	push   rcx
   1400112b2:	add    BYTE PTR [rax],al
   1400112b4:	add    dh,bl
   1400112b6:	add    BYTE PTR [rax],al
   1400112b8:	cld    
   1400112b9:	push   rcx
   1400112ba:	add    BYTE PTR [rax],al
   1400112bc:	push   0x10000052
   1400112c1:	fiadd  WORD PTR [rax]
   1400112c3:	add    BYTE PTR [rax+0x52],dh
   1400112c6:	add    BYTE PTR [rax],al
   1400112c8:	test   DWORD PTR [rsi+0x0],edx
   1400112cb:	add    BYTE PTR [rsi+rbx*8],bl
   1400112ce:	add    BYTE PTR [rax],al
   1400112d0:	mov    WORD PTR [rsi+0x0],ss
   1400112d3:	add    ch,ah
   1400112d5:	pop    rax
   1400112d6:	add    BYTE PTR [rax],al
   1400112d8:	cmp    dh,bl
   1400112da:	add    BYTE PTR [rax],al
   1400112dc:	in     al,dx
   1400112dd:	pop    rax
   1400112de:	add    BYTE PTR [rax],al
   1400112e0:	sbb    DWORD PTR [rdx+0x0],ebx
   1400112e3:	add    BYTE PTR [rsi+rbx*8+0x0],cl
   1400112e7:	add    BYTE PTR [rax],ah
   1400112e9:	pop    rdx
   1400112ea:	add    BYTE PTR [rax],al
   1400112ec:	retf   
   1400112ed:	pop    rbx
   1400112ee:	add    BYTE PTR [rax],al
   1400112f0:	pop    rax
   1400112f1:	fiadd  WORD PTR [rax]
   1400112f3:	add    ah,dl
   1400112f5:	pop    rbx
   1400112f6:	add    BYTE PTR [rax],al
   1400112f8:	xchg   esp,eax
   1400112f9:	pop    rbp
   1400112fa:	add    BYTE PTR [rax],al
   1400112fc:	js     0x1400112dc
   1400112fe:	add    BYTE PTR [rax],al
   140011300:	pushf  
   140011301:	pop    rbp
   140011302:	add    BYTE PTR [rax],al
   140011304:	jle    0x140011364
   140011306:	add    BYTE PTR [rax],al
   140011308:	xchg   esp,eax
   140011309:	fiadd  WORD PTR [rax]
   14001130b:	add    BYTE PTR [rsi+rbx*2+0x5f9d0000],al
   140011312:	add    BYTE PTR [rax],al
   140011314:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011315:	fiadd  WORD PTR [rax]
   140011317:	add    BYTE PTR [rdi+rbx*2+0x60a30000],ah
   14001131e:	add    BYTE PTR [rax],al
   140011320:	mov    eax,0xac0000da
   140011325:	(bad)  
   140011326:	add    BYTE PTR [rax],al
   140011328:	int    0x66
   14001132a:	add    BYTE PTR [rax],al
   14001132c:	mov    al,0xde
   14001132e:	add    BYTE PTR [rax],al
   140011330:	(bad)  
   140011331:	data16 add BYTE PTR [rax],al
   140011334:	mov    gs,WORD PTR [rcx+0x0]
   140011337:	add    ah,al
   140011339:	fiadd  WORD PTR [rax]
   14001133b:	add    BYTE PTR [rcx+rbp*2+0x6ba40000],dl
   140011342:	add    BYTE PTR [rax],al
   140011344:	(bad)  
   140011346:	add    BYTE PTR [rax],al
   140011348:	lods   al,BYTE PTR ds:[rsi]
   140011349:	imul   eax,DWORD PTR [rax],0x0
   14001134c:	jb     0x1400113ba
   14001134e:	add    BYTE PTR [rax],al
   140011350:	in     al,dx
   140011351:	fiadd  WORD PTR [rax]
   140011353:	add    BYTE PTR [rax+0x6c],bh
   140011356:	add    BYTE PTR [rax],al
   140011358:	(bad)  
   140011359:	jno    0x14001135b
   14001135b:	add    BYTE PTR [rdi+rbx*8],al
   14001135e:	add    BYTE PTR [rax],al
   140011360:	adc    al,0x71
   140011362:	add    BYTE PTR [rax],al
   140011364:	(bad)  
   140011365:	jb     0x140011367
   140011367:	add    BYTE PTR [rdi+rbx*8],bl
   14001136a:	add    BYTE PTR [rax],al
   14001136c:	rex.W jb 0x14001136f
   14001136f:	add    BYTE PTR [rip+0x34000076],bh        # 0x1740113eb
   140011375:	fild   WORD PTR [rax]
   140011377:	add    BYTE PTR [rsi+rsi*2+0x0],al
   14001137b:	add    BYTE PTR [rdx-0x47ffff89],dh
   140011381:	fiadd  DWORD PTR [rax]
   140011383:	add    BYTE PTR [rax-0x42ffff89],bh
   140011389:	js     0x14001138b
   14001138b:	add    BYTE PTR [rax-0x21],bl
   14001138e:	add    BYTE PTR [rax],al
   140011390:	(bad)  
   140011391:	js     0x140011393
   140011393:	add    BYTE PTR [rbp+0x79],bl
   140011396:	add    BYTE PTR [rax],al
   140011398:	jo     0x140011379
   14001139a:	add    BYTE PTR [rax],al
   14001139c:	fs jns 0x14001139f
   14001139f:	add    BYTE PTR [rdx+rdi*2-0x207c0000],dh
   1400113a6:	add    BYTE PTR [rax],al
   1400113a8:	mov    esp,0xa200007a
   1400113ad:	jnp    0x1400113af
   1400113af:	add    BYTE PTR [rdi+rbx*8+0x7ba80000],bl
   1400113b6:	add    BYTE PTR [rax],al
   1400113b8:	(bad)  
   1400113b9:	jle    0x1400113bb
   1400113bb:	add    BYTE PTR [rax-0x5fffff21],dh
   1400113c1:	jle    0x1400113c3
   1400113c3:	add    BYTE PTR [rcx-0x80],ah
   1400113c6:	add    BYTE PTR [rax],al
   1400113c8:	(bad)  
   1400113c9:	fiadd  WORD PTR [rax]
   1400113cb:	add    BYTE PTR [rax-0x80],ch
   1400113ce:	add    BYTE PTR [rax],al
   1400113d0:	pop    rdi
   1400113d1:	add    DWORD PTR [rax],0xdb7400
   1400113d7:	add    BYTE PTR [rax-0x7f],ch
   1400113da:	add    BYTE PTR [rax],al
   1400113dc:	mov    WORD PTR [rbx-0x20380000],es
   1400113e2:	add    BYTE PTR [rax],al
   1400113e4:	xchg   esp,eax
   1400113e5:	add    DWORD PTR [rax],0x0
   1400113e8:	add    al,0x85
   1400113ea:	add    BYTE PTR [rax],al
   1400113ec:	fcomp  st(7)
   1400113ee:	add    BYTE PTR [rax],al
   1400113f0:	or     al,0x85
   1400113f2:	add    BYTE PTR [rax],al
   1400113f4:	stos   BYTE PTR es:[rdi],al
   1400113f5:	xchg   BYTE PTR [rax],al
   1400113f7:	add    ah,ch
   1400113f9:	fild   WORD PTR [rax]
   1400113fb:	add    BYTE PTR [rax-0x7cffff7a],dh
   140011401:	mov    BYTE PTR [rax],al
   140011403:	add    ah,bh
   140011405:	fiadd  DWORD PTR [rax]
   140011407:	add    BYTE PTR [rax+0x2d000088],dl
   14001140d:	mov    DWORD PTR [rax],eax
   14001140f:	add    BYTE PTR [rbx+rbx*8],dl
   140011412:	add    BYTE PTR [rax],al
   140011414:	xor    al,0x89
   140011416:	add    BYTE PTR [rax],al
   140011418:	(bad)  
   140011419:	mov    al,BYTE PTR [rax]
   14001141b:	add    BYTE PTR [rax],cl
   14001141d:	loopne 0x14001141f
   14001141f:	add    al,dl
   140011421:	mov    al,BYTE PTR [rax]
   140011423:	add    BYTE PTR [rdx-0x74],dh
   140011426:	add    BYTE PTR [rax],al
   140011428:	sbb    al,ah
   14001142a:	add    BYTE PTR [rax],al
   14001142c:	js     0x1400113ba
   14001142e:	add    BYTE PTR [rax],al
   140011430:	xchg   ecx,eax
   140011431:	mov    es,WORD PTR [rax]
   140011433:	add    ah,ch
   140011435:	fild   WORD PTR [rax]
   140011437:	add    BYTE PTR [rax+0xf00008e],bl
   14001143d:	xchg   edx,eax
   14001143e:	add    BYTE PTR [rax],al
   140011440:	rex.R loopne 0x140011443
   140011443:	add    BYTE PTR [rax],ah
   140011445:	xchg   edx,eax
   140011446:	add    BYTE PTR [rax],al
   140011448:	out    dx,eax
   140011449:	xchg   edx,eax
   14001144a:	add    BYTE PTR [rax],al
   14001144c:	and    al,0xdb
   14001144e:	add    BYTE PTR [rax],al
   140011450:	add    BYTE PTR [rbx-0x6cb70000],dl
   140011456:	add    BYTE PTR [rax],al
   140011458:	pushf  
   140011459:	fld    QWORD PTR [rax]
   14001145b:	add    BYTE PTR [rax-0x6d],dl
   14001145e:	add    BYTE PTR [rax],al
   140011460:	rcl    DWORD PTR [rbp-0x1fa00000],0x0
   140011467:	add    al,dl
   140011469:	xchg   ebp,eax
   14001146a:	add    BYTE PTR [rax],al
   14001146c:	loop   0x140011403
   14001146e:	add    BYTE PTR [rax],al
   140011470:	and    al,0xdb
   140011472:	add    BYTE PTR [rax],al
   140011474:	add    BYTE PTR [rsi-0x69e20000],dl
   14001147a:	add    BYTE PTR [rax],al
   14001147c:	cwde   
   14001147d:	loopne 0x14001147f
   14001147f:	add    BYTE PTR [rsi+rdx*4],ah
   140011482:	add    BYTE PTR [rax],al
   140011484:	ret    0x96
   140011487:	add    BYTE PTR [rax+riz*8-0x69380000],bl
   14001148e:	add    BYTE PTR [rax],al
   140011490:	fist   WORD PTR [rsi-0x24dc0000]
   140011496:	add    BYTE PTR [rax],al
   140011498:	lock xchg esi,eax
   14001149a:	add    BYTE PTR [rax],al
   14001149c:	sub    DWORD PTR [rdi-0x24dc0000],edx
   1400114a2:	add    BYTE PTR [rax],al
   1400114a4:	xor    BYTE PTR [rdi-0x68b80000],dl
   1400114aa:	add    BYTE PTR [rax],al
   1400114ac:	and    al,0xdb
   1400114ae:	add    BYTE PTR [rax],al
   1400114b0:	pop    rsp
   1400114b1:	xchg   edi,eax
   1400114b2:	add    BYTE PTR [rax],al
   1400114b4:	mov    al,0x97
   1400114b6:	add    BYTE PTR [rax],al
   1400114b8:	enter  0xe0,0x0
   1400114bc:	mov    eax,0xfd000097
   1400114c1:	xchg   edi,eax
   1400114c2:	add    BYTE PTR [rax],al
   1400114c4:	sub    al,0xdb
   1400114c6:	add    BYTE PTR [rax],al
   1400114c8:	jo     0x140011462
   1400114ca:	add    BYTE PTR [rax],al
   1400114cc:	mov    ebp,0xe8000098
   1400114d1:	loopne 0x1400114d3
   1400114d3:	add    BYTE PTR [rcx+rbx*4],al
   1400114d6:	add    BYTE PTR [rax],al
   1400114d8:	(bad)  
   1400114d9:	cdq    
   1400114da:	add    BYTE PTR [rax],al
   1400114dc:	or     al,0xe1
   1400114de:	add    BYTE PTR [rax],al
   1400114e0:	or     al,0x9a
   1400114e2:	add    BYTE PTR [rax],al
   1400114e4:	rex (bad) 
   1400114e6:	add    BYTE PTR [rax],al
   1400114e8:	sub    al,0xdb
   1400114ea:	add    BYTE PTR [rax],al
   1400114ec:	push   rax
   1400114ed:	(bad)  
   1400114ee:	add    BYTE PTR [rax],al
   1400114f0:	rcr    DWORD PTR [rbx-0x1ee80000],0x0
   1400114f7:	add    al,bh
   1400114f9:	fwait
   1400114fa:	add    BYTE PTR [rax],al
   1400114fc:	adc    eax,0x2400009c
   140011501:	fild   DWORD PTR [rax]
   140011503:	add    BYTE PTR [rsp+rbx*4],bl
   140011506:	add    BYTE PTR [rax],al
   140011508:	jg     0x1400114a6
   14001150a:	add    BYTE PTR [rax],al
   14001150c:	sub    al,0xdb
   14001150e:	add    BYTE PTR [rax],al
   140011510:	mov    al,0x9c
   140011512:	add    BYTE PTR [rax],al
   140011514:	mov    dl,0x9c
   140011516:	add    BYTE PTR [rax],al
   140011518:	and    cl,ah
   14001151a:	add    BYTE PTR [rax],al
   14001151c:	rcr    BYTE PTR [rax+rax*1+0x9d1d00],1
   140011523:	add    BYTE PTR [rax],ch
   140011525:	loope  0x140011527
   140011527:	add    BYTE PTR [rsi],ah
   140011529:	popf   
   14001152a:	add    BYTE PTR [rax],al
   14001152c:	rex.R popf 
   14001152e:	add    BYTE PTR [rax],al
   140011530:	shl    al,0x0
   140011533:	add    BYTE PTR [rdx-0x63],cl
   140011536:	add    BYTE PTR [rax],al
   140011538:	gs popf 
   14001153a:	add    BYTE PTR [rax],al
   14001153c:	shl    al,0x0
   14001153f:	add    BYTE PTR [rax-0x63],dh
   140011542:	add    BYTE PTR [rax],al
   140011544:	nop
   140011545:	popf   
   140011546:	add    BYTE PTR [rax],al
   140011548:	shl    al,0x0
   14001154b:	add    BYTE PTR [rax-0x3cffff63],ah
   140011551:	popf   
   140011552:	add    BYTE PTR [rax],al
   140011554:	sub    al,0xdb
   140011556:	add    BYTE PTR [rax],al
   140011558:	lock popf 
   14001155a:	add    BYTE PTR [rax],al
   14001155c:	or     ebx,DWORD PTR [rsi-0x24dc0000]
   140011562:	add    BYTE PTR [rax],al
   140011564:	and    BYTE PTR [rsi-0x61bd0000],bl
   14001156a:	add    BYTE PTR [rax],al
   14001156c:	sub    al,0xdb
   14001156e:	add    BYTE PTR [rax],al
   140011570:	push   rax
   140011571:	sahf   
   140011572:	add    BYTE PTR [rax],al
   140011574:	xchg   ecx,eax
   140011575:	sahf   
   140011576:	add    BYTE PTR [rax],al
   140011578:	sub    al,0xe0
	...

Disassembly of section .rsrc:

0000000140012000 <.rsrc>:
	...
   14001200c:	add    al,BYTE PTR [rax]
   14001200e:	add    al,BYTE PTR [rax]
   140012010:	add    QWORD PTR [rax],r8
   140012013:	xor    BYTE PTR [rax],0x0
   140012016:	add    BYTE PTR [rax-0x7ffffed0],al
   14001201c:	rex.W add BYTE PTR [rax],al
   14001201f:	adc    BYTE PTR [rax],0x0
   140012022:	add    BYTE PTR [rax],al
   140012024:	(bad)  
   140012025:	add    BYTE PTR [rax],al
   140012027:	sbb    BYTE PTR [rax],0x0
   14001202a:	add    BYTE PTR [rax],al
   14001202c:	js     0x14001202e
   14001202e:	add    BYTE PTR [rax+0x0],al
	...
   14001203c:	add    BYTE PTR [rax],al
   14001203e:	add    DWORD PTR [rax],eax
   140012040:	add    DWORD PTR [rax],eax
   140012042:	add    BYTE PTR [rax],al
   140012044:	nop
   140012045:	add    BYTE PTR [rax],al
   140012047:	add    BYTE PTR [rax],0x0
	...
   140012056:	add    DWORD PTR [rax],eax
   140012058:	add    DWORD PTR [rax],eax
   14001205a:	add    BYTE PTR [rax],al
   14001205c:	test   al,0x0
   14001205e:	add    BYTE PTR [rax+0x0],al
	...
   14001206c:	add    BYTE PTR [rax],al
   14001206e:	add    DWORD PTR [rax],eax
   140012070:	add    DWORD PTR [rax],eax
   140012072:	add    BYTE PTR [rax],al
   140012074:	rol    BYTE PTR [rax],0x0
   140012077:	add    BYTE PTR [rax],0x0
	...
   140012086:	add    DWORD PTR [rax],eax
   140012088:	add    DWORD PTR [rax],eax
   14001208a:	add    BYTE PTR [rax],al
   14001208c:	fadd   DWORD PTR [rax]
   14001208e:	add    BYTE PTR [rax+0x0],al
	...
   14001209c:	add    BYTE PTR [rax],al
   14001209e:	add    DWORD PTR [rax],eax
   1400120a0:	or     DWORD PTR [rax+rax*1],eax
   1400120a3:	add    al,dh
	...
   1400120b5:	add    BYTE PTR [rcx],al
   1400120b7:	add    BYTE PTR [rcx],cl
   1400120b9:	add    al,0x0
   1400120bb:	add    BYTE PTR [rax],al
   1400120bd:	add    DWORD PTR [rax],eax
	...
   1400120cb:	add    BYTE PTR [rax],al
   1400120cd:	add    BYTE PTR [rcx],al
   1400120cf:	add    BYTE PTR [rcx],cl
   1400120d1:	add    al,0x0
   1400120d3:	add    BYTE PTR [rax],dl
   1400120d5:	add    DWORD PTR [rax],eax
	...
   1400120e3:	add    BYTE PTR [rax],al
   1400120e5:	add    BYTE PTR [rcx],al
   1400120e7:	add    BYTE PTR [rcx],cl
   1400120e9:	add    al,0x0
   1400120eb:	add    BYTE PTR [rax],ah
   1400120ed:	add    DWORD PTR [rax],eax
   1400120ef:	add    BYTE PTR [rax],ah
   1400120f1:	xor    BYTE PTR [rcx],al
   1400120f3:	add    al,dh
	...
   1400120fd:	add    BYTE PTR [rax],al
   1400120ff:	add    BYTE PTR [rax+0x72000127],ch
   140012105:	or     BYTE PTR [rax],al
	...
   14001210f:	add    BYTE PTR [rax],ah
   140012111:	and    al,0x1
   140012113:	add    BYTE PTR [rbx+rax*1+0x0],al
   14001211a:	add    BYTE PTR [rax],al
   14001211c:	add    BYTE PTR [rax],al
   14001211e:	add    BYTE PTR [rax],al
   140012120:	(bad)  
   140012121:	and    DWORD PTR [rcx],eax
   140012123:	add    al,al
   140012125:	add    al,BYTE PTR [rax]
	...
   14001212f:	add    BYTE PTR [rip+0x45005700],cl        # 0x185017835
   140012135:	add    BYTE PTR [rsi+0x0],dl
   140012138:	push   rsp
   140012139:	add    BYTE PTR [rdi+0x0],bl
   14001213c:	push   rsp
   14001213d:	add    BYTE PTR [rbp+0x0],al
   140012140:	rex.WRB add BYTE PTR [r8+0x0],r10b
   140012144:	rex.WR add BYTE PTR [rcx+0x0],r8b
   140012148:	push   rsp
   140012149:	add    BYTE PTR [rbp+0x0],al
   14001214c:	add    eax,DWORD PTR [rax]
   14001214e:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140012152:	rex.WB add BYTE PTR [r8],al
	...
   14001215d:	add    BYTE PTR [rax],al
   14001215f:	add    BYTE PTR [rdi+rdi*1],bh
   140012162:	js     0x1400121d1
   140012164:	ins    BYTE PTR es:[rdi],dx
   140012165:	and    BYTE PTR [rsi+0x65],dh
   140012168:	jb     0x1400121dd
   14001216a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140012171:	xor    BYTE PTR [rdx],ah
   140012173:	and    BYTE PTR [rbp+0x6e],ah
   140012176:	movsxd ebp,DWORD PTR [rdi+0x64]
   140012179:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140012180:	rex.RX sub eax,0x73202238
   140012186:	je     0x1400121e9
   140012188:	outs   dx,BYTE PTR ds:[rsi]
   140012189:	fs (bad) 
   14001218b:	ins    BYTE PTR es:[rdi],dx
   14001218c:	outs   dx,DWORD PTR ds:[rsi]
   14001218d:	outs   dx,BYTE PTR ds:[rsi]
   14001218e:	gs cmp eax,0x73657922
   140012194:	and    bh,BYTE PTR [rdi]
   140012196:	ds or  eax,0x2d213c0a
   14001219c:	sub    eax,0x706f4320
   1400121a1:	jns    0x140012215
   1400121a3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400121aa:	sub    DWORD PTR [rax],esp
   1400121ac:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400121b4:	je     0x1400121d6
   1400121b6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400121b8:	jb     0x14001222a
   1400121ba:	outs   dx,DWORD PTR ds:[rsi]
   1400121bb:	jb     0x14001221e
   1400121bd:	je     0x140012228
   1400121bf:	outs   dx,DWORD PTR ds:[rsi]
   1400121c0:	outs   dx,BYTE PTR ds:[rsi]
   1400121c1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e5ff4
   1400121c7:	cmp    al,0x61
   1400121c9:	jae    0x14001223e
   1400121cb:	gs ins DWORD PTR es:[rdi],dx
   1400121cd:	(bad)  
   1400121ce:	ins    BYTE PTR es:[rdi],dx
   1400121cf:	jns    0x1400121f1
   1400121d1:	js     0x140012240
   1400121d3:	ins    BYTE PTR es:[rdi],dx
   1400121d4:	outs   dx,BYTE PTR ds:[rsi]
   1400121d5:	jae    0x140012214
   1400121d7:	and    dh,BYTE PTR [rbp+0x72]
   1400121da:	outs   dx,BYTE PTR ds:[rsi]
   1400121db:	cmp    dh,BYTE PTR [rbx+0x63]
   1400121de:	push   0x73616d65
   1400121e3:	sub    eax,0x7263696d
   1400121e8:	outs   dx,DWORD PTR ds:[rsi]
   1400121e9:	jae    0x14001225a
   1400121eb:	data16 je 0x14001221b
   1400121ee:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400121f1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400121f4:	ins    DWORD PTR es:[rdi],dx
   1400121f5:	cs jbe 0x140012229
   1400121f8:	and    ah,BYTE PTR [rax]
   1400121fa:	ins    DWORD PTR es:[rdi],dx
   1400121fb:	(bad)  
   1400121fc:	outs   dx,BYTE PTR ds:[rsi]
   1400121fd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140012204:	jb     0x140012279
   140012206:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001220d:	xor    BYTE PTR [rdx],ah
   14001220f:	ds or  eax,0x73613c0a
   140012215:	jae    0x14001227c
   140012217:	ins    DWORD PTR es:[rdi],dx
   140012218:	(bad)  
   140012219:	ins    BYTE PTR es:[rdi],dx
   14001221a:	jns    0x140012265
   14001221c:	fs outs dx,BYTE PTR gs:[rsi]
   14001221f:	je     0x14001228a
   140012221:	je     0x14001229c
   140012223:	or     eax,0x2020200a
   140012228:	and    BYTE PTR [rsi+0x65],dh
   14001222b:	jb     0x1400122a0
   14001222d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140012234:	xor    DWORD PTR [rsi],ebp
   140012236:	xor    BYTE PTR [rsi],ch
   140012238:	xor    BYTE PTR [rdx],ah
   14001223a:	or     eax,0x2020200a
   14001223f:	and    BYTE PTR [rax+0x72],dh
   140012242:	outs   dx,DWORD PTR ds:[rsi]
   140012243:	movsxd esp,DWORD PTR [rbp+0x73]
   140012246:	jae    0x1400122b7
   140012248:	jb     0x14001228b
   14001224a:	jb     0x1400122af
   14001224c:	push   0x63657469
   140012251:	je     0x1400122c8
   140012253:	jb     0x1400122ba
   140012255:	cmp    eax,0x646d6122
   14001225a:	ss xor al,0x22
   14001225d:	or     eax,0x2020200a
   140012262:	and    BYTE PTR [rsi+0x61],ch
   140012265:	ins    DWORD PTR es:[rdi],dx
   140012266:	gs cmp eax,0x63694d22
   14001226c:	jb     0x1400122dd
   14001226e:	jae    0x1400122df
   140012270:	data16 je 0x1400122a1
   140012273:	push   rdi
   140012274:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001227b:	push   rdi
   14001227c:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   140012283:	gs jo  0x1400122f2
   140012286:	outs   dx,DWORD PTR ds:[rsi]
   140012287:	jns    0x1400122f6
   140012289:	outs   dx,BYTE PTR gs:[rsi]
   14001228b:	je     0x1400122e0
   14001228d:	gs jb  0x140012306
   140012290:	imul   esp,DWORD PTR [rbx+0x65],0x614d2e73
   140012297:	outs   dx,BYTE PTR ds:[rsi]
   140012298:	(bad)  
   140012299:	gs ins DWORD PTR es:[edi],dx
   14001229c:	outs   dx,BYTE PTR gs:[rsi]
   14001229e:	je     0x1400122ce
   1400122a0:	rex.WRXB
   1400122a1:	rex.WRXB
   1400122a2:	rex.X
   1400122a3:	rex.RB
   1400122a4:	rex.WR
   1400122a5:	fs jb  0x1400122ca
   1400122a8:	or     eax,0x2020200a
   1400122ad:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400122b1:	gs cmp eax,0x6e697722
   1400122b7:	xor    esi,DWORD PTR [rdx]
   1400122b9:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f51c9
   1400122bf:	or     bh,BYTE PTR [rsp+riz*2]
   1400122c2:	gs jae 0x140012328
   1400122c5:	jb     0x140012330
   1400122c7:	jo     0x14001233d
   1400122c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   1400122d0:	outs   dx,DWORD PTR fs:[rsi]
   1400122d2:	ja     0x140012347
   1400122d4:	and    BYTE PTR [rdi+0x4f],cl
   1400122d7:	rex.X
   1400122d8:	and    BYTE PTR [r15+rbp*2+0x61],r9b
   1400122dd:	fs gs jb 0x14001231d
   1400122e1:	(bad)  
   1400122e2:	fs gs jae 0x140012349
   1400122e6:	jb     0x140012351
   1400122e8:	jo     0x14001235e
   1400122ea:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   1400122f1:	or     bh,BYTE PTR [rsp+rsi*2]
   1400122f4:	jb     0x14001236b
   1400122f6:	jae    0x14001236c
   1400122f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400122fa:	outs   dx,WORD PTR ds:[rsi]
   1400122fc:	and    BYTE PTR [rax+0x6d],bh
   1400122ff:	ins    BYTE PTR es:[rdi],dx
   140012300:	outs   dx,BYTE PTR ds:[rsi]
   140012301:	jae    0x140012340
   140012303:	and    dh,BYTE PTR [rbp+0x72]
   140012306:	outs   dx,BYTE PTR ds:[rsi]
   140012307:	cmp    dh,BYTE PTR [rbx+0x63]
   14001230a:	push   0x73616d65
   14001230f:	sub    eax,0x7263696d
   140012314:	outs   dx,DWORD PTR ds:[rsi]
   140012315:	jae    0x140012386
   140012317:	data16 je 0x140012347
   14001231a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001231d:	cmp    ah,BYTE PTR [rcx+0x73]
   140012320:	ins    DWORD PTR es:[rdi],dx
   140012321:	cs jbe 0x140012357
   140012324:	and    bh,BYTE PTR [rsi]
   140012326:	or     eax,0x2020200a
   14001232b:	and    BYTE PTR [rbx+rsi*2],bh
   14001232e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140012332:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001233a:	and    BYTE PTR [rax],ah
   14001233c:	and    BYTE PTR [rax],ah
   14001233e:	and    BYTE PTR [rax],ah
   140012340:	cmp    al,0x72
   140012342:	gs jno 0x1400123ba
   140012345:	gs jae 0x1400123bc
   140012348:	gs fs push rax
   14001234b:	jb     0x1400123b6
   14001234d:	jbe    0x1400123b8
   14001234f:	ins    BYTE PTR es:[rdi],dx
   140012350:	gs addr32 gs jae 0x140012393
   140012355:	or     eax,0x2020200a
   14001235a:	and    BYTE PTR [rax],ah
   14001235c:	and    BYTE PTR [rax],ah
   14001235e:	and    BYTE PTR [rax],ah
   140012360:	and    BYTE PTR [rax],ah
   140012362:	and    BYTE PTR [rdx+rsi*2],bh
   140012365:	gs jno 0x1400123dd
   140012368:	gs jae 0x1400123df
   14001236b:	gs fs rex.RB js 0x1400123d5
   140012370:	movsxd esi,DWORD PTR [rbp+0x74]
   140012373:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001237a:	ins    BYTE PTR es:[rdi],dx
   14001237b:	or     eax,0x2020200a
   140012380:	and    BYTE PTR [rax],ah
   140012382:	and    BYTE PTR [rax],ah
   140012384:	and    BYTE PTR [rax],ah
   140012386:	and    BYTE PTR [rax],ah
   140012388:	and    BYTE PTR [rax],ah
   14001238a:	and    BYTE PTR [rax],ah
   14001238c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140012390:	gs ins BYTE PTR es:[rdi],dx
   140012392:	cmp    eax,0x49736122
   140012397:	outs   dx,BYTE PTR ds:[rsi]
   140012398:	jbe    0x140012409
   14001239a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001239e:	or     eax,0x2020200a
   1400123a3:	and    BYTE PTR [rax],ah
   1400123a5:	and    BYTE PTR [rax],ah
   1400123a7:	and    BYTE PTR [rax],ah
   1400123a9:	and    BYTE PTR [rax],ah
   1400123ab:	and    BYTE PTR [rax],ah
   1400123ad:	and    BYTE PTR [rax],ah
   1400123af:	and    BYTE PTR [rbp+0x69],dh
   1400123b2:	movsxd esp,DWORD PTR [r11+0x65]
   1400123b6:	jae    0x14001242b
   1400123b8:	cmp    eax,0x6c616622
   1400123bd:	jae    0x140012424
   1400123bf:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602143cf
   1400123c5:	and    BYTE PTR [rax],ah
   1400123c7:	and    BYTE PTR [rax],ah
   1400123c9:	and    BYTE PTR [rax],ah
   1400123cb:	and    BYTE PTR [rax],ah
   1400123cd:	and    BYTE PTR [rdi],ch
   1400123cf:	ds or  eax,0x2020200a
   1400123d5:	and    BYTE PTR [rax],ah
   1400123d7:	and    BYTE PTR [rax],ah
   1400123d9:	and    BYTE PTR [rdi+rbp*1],bh
   1400123dc:	jb     0x140012443
   1400123de:	jno    0x140012455
   1400123e0:	gs jae 0x140012457
   1400123e3:	gs fs push rax
   1400123e6:	jb     0x140012451
   1400123e8:	jbe    0x140012453
   1400123ea:	ins    BYTE PTR es:[rdi],dx
   1400123eb:	gs addr32 gs jae 0x14001242e
   1400123f0:	or     eax,0x2020200a
   1400123f5:	and    BYTE PTR [rdi+rbp*1],bh
   1400123f8:	jae    0x14001245f
   1400123fa:	movsxd esi,DWORD PTR [rbp+0x72]
   1400123fd:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140012405:	je     0x140012479
   140012407:	jne    0x14001247c
   140012409:	je     0x140012454
   14001240b:	outs   dx,BYTE PTR ds:[rsi]
   14001240c:	outs   dx,WORD PTR ds:[rsi]
   14001240e:	ds or  eax,0x612f3c0a
   140012414:	jae    0x140012489
   140012416:	gs ins DWORD PTR es:[rdi],dx
   140012418:	(bad)  
   140012419:	ins    BYTE PTR es:[rdi],dx
   14001241a:	jns    0x14001245a
   14001241c:	or     eax,0x840a0d0a
   140012421:	add    esi,DWORD PTR [rax+rax*1]
   140012424:	add    BYTE PTR [rax],al
   140012426:	push   rsi
   140012427:	add    BYTE PTR [rbx+0x0],dl
   14001242a:	pop    rdi
   14001242b:	add    BYTE PTR [rsi+0x0],dl
   14001242e:	add    BYTE PTR [r10+0x0],r10b
   140012432:	push   rbx
   140012433:	add    BYTE PTR [rcx+0x0],cl
   140012436:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001243a:	pop    rdi
   14001243b:	add    BYTE PTR [rcx+0x0],cl
   14001243e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140012442:	rex.WRXB add BYTE PTR [r8],r8b
   140012445:	add    BYTE PTR [rax],al
   140012447:	add    BYTE PTR [rbp+0xfeef04],bh
   14001244d:	add    BYTE PTR [rcx],al
   14001244f:	add    BYTE PTR [rax],al
   140012451:	add    BYTE PTR [rdx],cl
   140012453:	add    BYTE PTR [rdx],dh
   140012455:	rex.XB add BYTE PTR [r8],bpl
   140012458:	add    BYTE PTR [rax],al
   14001245a:	or     al,BYTE PTR [rax]
   14001245c:	xor    al,BYTE PTR [rbx+0x0]
   14001245f:	sub    BYTE PTR [rdi],bh
   140012461:	add    BYTE PTR [rax],al
   140012463:	add    BYTE PTR [rax],al
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rax+rax*1],al
   14001246a:	add    al,0x0
   14001246c:	add    DWORD PTR [rax],eax
	...
   14001247a:	add    BYTE PTR [rax],al
   14001247c:	loop   0x140012480
   14001247e:	add    BYTE PTR [rax],al
   140012480:	add    DWORD PTR [rax],eax
   140012482:	push   rbx
   140012483:	add    BYTE PTR [rax+rax*1+0x72],dh
   140012487:	add    BYTE PTR [rcx+0x0],ch
   14001248a:	outs   dx,BYTE PTR ds:[rsi]
   14001248b:	add    BYTE PTR [rdi+0x0],ah
   14001248e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140012492:	ins    BYTE PTR es:[rdi],dx
   140012493:	add    BYTE PTR [rbp+0x0],ah
   140012496:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001249a:	data16 add BYTE PTR [rdi+0x0],ch
   14001249e:	add    BYTE PTR [rax],al
   1400124a0:	mov    esi,0x1000002
   1400124a5:	add    BYTE PTR [rax],dh
   1400124a7:	add    BYTE PTR [rax+rax*1],dh
   1400124aa:	xor    BYTE PTR [rax],al
   1400124ac:	cmp    DWORD PTR [rax],eax
   1400124ae:	xor    BYTE PTR [rax],al
   1400124b0:	xor    al,0x0
   1400124b2:	rex.X add BYTE PTR [rax],sil
   1400124b5:	add    BYTE PTR [rax],al
   1400124b7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400124bb:	add    BYTE PTR [rcx],al
   1400124bd:	add    BYTE PTR [rbx+0x0],al
   1400124c0:	outs   dx,DWORD PTR ds:[rsi]
   1400124c1:	add    BYTE PTR [rbp+0x0],ch
   1400124c4:	jo     0x1400124c6
   1400124c6:	(bad)  
   1400124c7:	add    BYTE PTR [rsi+0x0],ch
   1400124ca:	jns    0x1400124cc
   1400124cc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400124d0:	ins    DWORD PTR es:[rdi],dx
   1400124d1:	add    BYTE PTR [rbp+0x0],ah
   1400124d4:	add    BYTE PTR [rax],al
   1400124d6:	add    BYTE PTR [rax],al
   1400124d8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400124dc:	movsxd eax,DWORD PTR [rax]
   1400124de:	jb     0x1400124e0
   1400124e0:	outs   dx,DWORD PTR ds:[rsi]
   1400124e1:	add    BYTE PTR [rbx+0x0],dh
   1400124e4:	outs   dx,DWORD PTR ds:[rsi]
   1400124e5:	add    BYTE PTR [rsi+0x0],ah
   1400124e8:	je     0x1400124ea
   1400124ea:	and    BYTE PTR [rax],al
   1400124ec:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400124f0:	jb     0x1400124f2
   1400124f2:	jo     0x1400124f4
   1400124f4:	outs   dx,DWORD PTR ds:[rsi]
   1400124f5:	add    BYTE PTR [rdx+0x0],dh
   1400124f8:	(bad)  
   1400124f9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400124fd:	add    BYTE PTR [rdi+0x0],ch
   140012500:	outs   dx,BYTE PTR ds:[rsi]
   140012501:	add    BYTE PTR [rax],al
   140012503:	add    BYTE PTR [rax+0x0],al
   140012506:	or     al,0x0
   140012508:	add    DWORD PTR [rax],eax
   14001250a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001250e:	ins    BYTE PTR es:[rdi],dx
   14001250f:	add    BYTE PTR [rbp+0x0],ah
   140012512:	add    BYTE PTR [rbp+0x0],r12b
   140012516:	jae    0x140012518
   140012518:	movsxd eax,DWORD PTR [rax]
   14001251a:	jb     0x14001251c
   14001251c:	imul   eax,DWORD PTR [rax],0x740070
   140012522:	imul   eax,DWORD PTR [rax],0x6e006f
   140012528:	add    BYTE PTR [rax],al
   14001252a:	add    BYTE PTR [rax],al
   14001252c:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140012530:	rex.X add BYTE PTR [rbp+0x0],al
   140012534:	and    BYTE PTR [rax],al
   140012536:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14001253a:	(bad)  
   14001253b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001253f:	add    BYTE PTR [rdx+0x0],dh
   140012542:	add    BYTE PTR [rax],al
   140012544:	outs   dx,BYTE PTR ds:[rsi]
   140012545:	add    BYTE PTR [rdi],ah
   140012547:	add    BYTE PTR [rcx],al
   140012549:	add    BYTE PTR [rsi+0x0],al
   14001254c:	imul   eax,DWORD PTR [rax],0x65006c
   140012552:	push   rsi
   140012553:	add    BYTE PTR [rbp+0x0],ah
   140012556:	jb     0x140012558
   140012558:	jae    0x14001255a
   14001255a:	imul   eax,DWORD PTR [rax],0x6e006f
   140012560:	add    BYTE PTR [rax],al
   140012562:	add    BYTE PTR [rax],al
   140012564:	xor    DWORD PTR [rax],eax
   140012566:	xor    BYTE PTR [rax],al
   140012568:	add    BYTE PTR cs:[rax],dh
   14001256b:	add    BYTE PTR [rsi],ch
   14001256d:	add    BYTE PTR [rcx],dh
   14001256f:	add    BYTE PTR [rax],dh
   140012571:	add    BYTE PTR [rdx],dh
   140012573:	add    BYTE PTR [rax+rax*1],dh
   140012576:	xor    BYTE PTR [rax],al
   140012578:	add    BYTE PTR cs:[rcx],dh
   14001257b:	add    BYTE PTR [rdi],dh
   14001257d:	add    BYTE PTR [rdx],dh
   14001257f:	add    BYTE PTR [rax],dh
   140012581:	add    BYTE PTR [rdx],dh
   140012583:	add    BYTE PTR [rax],ah
   140012585:	add    BYTE PTR [rax],ch
   140012587:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001258b:	add    BYTE PTR [rcx],dh
   14001258d:	add    BYTE PTR [rdi+0x0],bl
   140012590:	jae    0x140012592
   140012592:	je     0x140012594
   140012594:	xor    DWORD PTR [rax],eax
   140012596:	add    BYTE PTR cs:[rcx],dh
   140012599:	add    BYTE PTR [rsi],dh
   14001259b:	add    BYTE PTR [rcx],dh
   14001259d:	add    BYTE PTR [rcx],dh
   14001259f:	add    BYTE PTR [rcx],dh
   1400125a1:	add    BYTE PTR [rax],bh
   1400125a3:	add    BYTE PTR [rip+0x38003100],ch        # 0x1780156a9
   1400125a9:	add    BYTE PTR [rbx],dh
   1400125ab:	add    BYTE PTR [rsi],dh
   1400125ad:	add    BYTE PTR [rcx],ch
   1400125af:	add    BYTE PTR [rax],al
   1400125b1:	add    BYTE PTR [rax],al
   1400125b3:	add    BYTE PTR [rax],bh
   1400125b5:	add    BYTE PTR [rax+rax*1],cl
   1400125b8:	add    DWORD PTR [rax],eax
   1400125ba:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400125be:	je     0x1400125c0
   1400125c0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400125c4:	outs   dx,BYTE PTR ds:[rsi]
   1400125c5:	add    BYTE PTR [rcx+0x0],ah
   1400125c8:	ins    BYTE PTR es:[rdi],dx
   1400125c9:	add    BYTE PTR [rsi+0x0],cl
   1400125cc:	(bad)  
   1400125cd:	add    BYTE PTR [rbp+0x0],ch
   1400125d0:	add    BYTE PTR gs:[rax],al
   1400125d3:	add    BYTE PTR [rdi+0x0],cl
   1400125d6:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   1400125da:	add    BYTE PTR [r8+rax*1+0x64],r9b
   1400125df:	add    BYTE PTR [rdx+0x0],dh
   1400125e2:	add    BYTE PTR cs:[rbp+0x0],ah
   1400125e6:	js     0x1400125e8
   1400125e8:	add    BYTE PTR gs:[rax],al
   1400125eb:	add    BYTE PTR [rax+0x1002e00],al
   1400125f1:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400125f5:	add    BYTE PTR [rdi+0x0],ah
   1400125f8:	(bad)  
   1400125f9:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400125fd:	add    BYTE PTR [rdi+0x0],ch
   140012600:	jo     0x140012602
   140012602:	jns    0x140012604
   140012604:	jb     0x140012606
   140012606:	imul   eax,DWORD PTR [rax],0x680067
   14001260c:	je     0x14001260e
   14001260e:	add    BYTE PTR [rax],al
   140012610:	test   eax,0x4d002000
   140012615:	add    BYTE PTR [rcx+0x0],ch
   140012618:	movsxd eax,DWORD PTR [rax]
   14001261a:	jb     0x14001261c
   14001261c:	outs   dx,DWORD PTR ds:[rsi]
   14001261d:	add    BYTE PTR [rbx+0x0],dh
   140012620:	outs   dx,DWORD PTR ds:[rsi]
   140012621:	add    BYTE PTR [rsi+0x0],ah
   140012624:	je     0x140012626
   140012626:	and    BYTE PTR [rax],al
   140012628:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001262c:	jb     0x14001262e
   14001262e:	jo     0x140012630
   140012630:	outs   dx,DWORD PTR ds:[rsi]
   140012631:	add    BYTE PTR [rdx+0x0],dh
   140012634:	(bad)  
   140012635:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012639:	add    BYTE PTR [rdi+0x0],ch
   14001263c:	outs   dx,BYTE PTR ds:[rsi]
   14001263d:	add    BYTE PTR [rsi],ch
   14001263f:	add    BYTE PTR [rax],ah
   140012641:	add    BYTE PTR [rcx+0x0],al
   140012644:	ins    BYTE PTR es:[rdi],dx
   140012645:	add    BYTE PTR [rax+rax*1+0x20],ch
   140012649:	add    BYTE PTR [rdx+0x0],dh
   14001264c:	imul   eax,DWORD PTR [rax],0x680067
   140012652:	je     0x140012654
   140012654:	jae    0x140012656
   140012656:	and    BYTE PTR [rax],al
   140012658:	jb     0x14001265a
   14001265a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001265e:	add    BYTE PTR gs:[rdx+0x0],dh
   140012662:	jbe    0x140012664
   140012664:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140012669:	add    BYTE PTR [rax],al
   14001266b:	add    BYTE PTR [rax+0x0],al
   14001266e:	or     al,0x0
   140012670:	add    DWORD PTR [rax],eax
   140012672:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140012676:	imul   eax,DWORD PTR [rax],0x690067
   14001267c:	outs   dx,BYTE PTR ds:[rsi]
   14001267d:	add    BYTE PTR [rcx+0x0],ah
   140012680:	ins    BYTE PTR es:[rdi],dx
   140012681:	add    BYTE PTR [rsi+0x0],al
   140012684:	imul   eax,DWORD PTR [rax],0x65006c
   14001268a:	outs   dx,BYTE PTR ds:[rsi]
   14001268b:	add    BYTE PTR [rcx+0x0],ah
   14001268e:	ins    DWORD PTR es:[rdi],dx
   14001268f:	add    BYTE PTR [rbp+0x0],ah
   140012692:	add    BYTE PTR [rax],al
   140012694:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140012698:	rex.X add BYTE PTR [rbp+0x0],al
   14001269c:	rex.WR add BYTE PTR [rax+rax*1+0x52],r8b
   1400126a1:	add    BYTE PTR [rsi],ch
   1400126a3:	add    BYTE PTR [rbp+0x0],al
   1400126a6:	pop    rax
   1400126a7:	add    BYTE PTR [rbp+0x0],al
   1400126aa:	add    BYTE PTR [rax],al
   1400126ac:	push   0x0
   1400126ae:	and    eax,0x50000100
   1400126b3:	add    BYTE PTR [rdx+0x0],dh
   1400126b6:	outs   dx,DWORD PTR ds:[rsi]
   1400126b7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400126bb:	add    BYTE PTR [rbx+0x0],ah
   1400126be:	je     0x1400126c0
   1400126c0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400126c4:	ins    DWORD PTR es:[rdi],dx
   1400126c5:	add    BYTE PTR [rbp+0x0],ah
   1400126c8:	add    BYTE PTR [rax],al
   1400126ca:	add    BYTE PTR [rax],al
   1400126cc:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400126d0:	movsxd eax,DWORD PTR [rax]
   1400126d2:	jb     0x1400126d4
   1400126d4:	outs   dx,DWORD PTR ds:[rsi]
   1400126d5:	add    BYTE PTR [rbx+0x0],dh
   1400126d8:	outs   dx,DWORD PTR ds:[rsi]
   1400126d9:	add    BYTE PTR [rsi+0x0],ah
   1400126dc:	je     0x1400126de
   1400126de:	scas   al,BYTE PTR es:[rdi]
   1400126df:	add    BYTE PTR [rax],ah
   1400126e1:	add    BYTE PTR [rdi+0x0],dl
   1400126e4:	imul   eax,DWORD PTR [rax],0x64006e
   1400126ea:	outs   dx,DWORD PTR ds:[rsi]
   1400126eb:	add    BYTE PTR [rdi+0x0],dh
   1400126ee:	jae    0x1400126f0
   1400126f0:	scas   al,BYTE PTR es:[rdi]
   1400126f1:	add    BYTE PTR [rax],ah
   1400126f3:	add    BYTE PTR [rdi+0x0],cl
   1400126f6:	jo     0x1400126f8
   1400126f8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400126fc:	(bad)  
   1400126fd:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012701:	add    BYTE PTR [rsi+0x0],ch
   140012704:	add    BYTE PTR [eax],ah
   140012707:	add    BYTE PTR [rbx+0x0],dl
   14001270a:	jns    0x14001270c
   14001270c:	jae    0x14001270e
   14001270e:	je     0x140012710
   140012710:	add    BYTE PTR gs:[rbp+0x0],ch
   140012714:	add    BYTE PTR [rax],al
   140012716:	add    BYTE PTR [rax],al
   140012718:	rex.RX add BYTE PTR [rcx],r10b
   14001271b:	add    BYTE PTR [rcx],al
   14001271d:	add    BYTE PTR [rax+0x0],dl
   140012720:	jb     0x140012722
   140012722:	outs   dx,DWORD PTR ds:[rsi]
   140012723:	add    BYTE PTR [rax+rax*1+0x75],ah
   140012727:	add    BYTE PTR [rbx+0x0],ah
   14001272a:	je     0x14001272c
   14001272c:	push   rsi
   14001272d:	add    BYTE PTR [rbp+0x0],ah
   140012730:	jb     0x140012732
   140012732:	jae    0x140012734
   140012734:	imul   eax,DWORD PTR [rax],0x6e006f
   14001273a:	add    BYTE PTR [rax],al
   14001273c:	xor    DWORD PTR [rax],eax
   14001273e:	xor    BYTE PTR [rax],al
   140012740:	add    BYTE PTR cs:[rax],dh
   140012743:	add    BYTE PTR [rsi],ch
   140012745:	add    BYTE PTR [rcx],dh
   140012747:	add    BYTE PTR [rax],dh
   140012749:	add    BYTE PTR [rdx],dh
   14001274b:	add    BYTE PTR [rax+rax*1],dh
   14001274e:	xor    BYTE PTR [rax],al
   140012750:	add    BYTE PTR cs:[rcx],dh
   140012753:	add    BYTE PTR [rdi],dh
   140012755:	add    BYTE PTR [rdx],dh
   140012757:	add    BYTE PTR [rax],dh
   140012759:	add    BYTE PTR [rdx],dh
   14001275b:	add    BYTE PTR [rax],al
   14001275d:	add    BYTE PTR [rax],al
   14001275f:	add    BYTE PTR [rax+rax*1+0x0],al
   140012763:	add    BYTE PTR [rcx],al
   140012765:	add    BYTE PTR [rsi+0x0],dl
   140012768:	(bad)  
   140012769:	add    BYTE PTR [rdx+0x0],dh
   14001276c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140012770:	ins    BYTE PTR es:[rdi],dx
   140012771:	add    BYTE PTR [rbp+0x0],ah
   140012774:	rex.WB add BYTE PTR [r14+0x0],bpl
   140012778:	data16 add BYTE PTR [rdi+0x0],ch
   14001277c:	add    BYTE PTR [rax],al
   14001277e:	add    BYTE PTR [rax],al
   140012780:	and    al,0x0
   140012782:	add    al,0x0
   140012784:	add    BYTE PTR [rax],al
   140012786:	push   rsp
   140012787:	add    BYTE PTR [rdx+0x0],dh
   14001278a:	(bad)  
   14001278b:	add    BYTE PTR [rsi+0x0],ch
   14001278e:	jae    0x140012790
   140012790:	ins    BYTE PTR es:[rdi],dx
   140012791:	add    BYTE PTR [rcx+0x0],ah
   140012794:	je     0x140012796
   140012796:	imul   eax,DWORD PTR [rax],0x6e006f
   14001279c:	add    BYTE PTR [rax],al
   14001279e:	add    BYTE PTR [rax],al
   1400127a0:	or     DWORD PTR [rax+rsi*4],eax
   1400127a3:	add    al,0x0
   1400127a5:	add    BYTE PTR [rax],al
   1400127a7:	add    BYTE PTR [rbx+0x52],al
   1400127aa:	rex.WB
   1400127ab:	rex.WRB jo 0x1400127b6
   1400127ae:	add    BYTE PTR [rax],al
   1400127b0:	add    eax,DWORD PTR [rax]
   1400127b2:	add    DWORD PTR [rax],eax
   1400127b4:	add    DWORD PTR [rax],eax
   1400127b6:	add    BYTE PTR [rax],al
   1400127b8:	ds ret 
   1400127ba:	jmp    0x140012831
   1400127bc:	jo     0x140012744
   1400127be:	mov    dh,0x4e
   1400127c0:	mov    ch,0x35
   1400127c2:	cmp    ebx,DWORD PTR [rbp-0x2dd4d95]
   1400127c8:	and    al,0x0
   1400127ca:	add    BYTE PTR [rax],al
   1400127cc:	push   rdi
   1400127cd:	rex.RB push r14
   1400127cf:	push   rsp
   1400127d0:	rex.WR or BYTE PTR [rax],r8b
   1400127d3:	add    BYTE PTR [rcx],al
   1400127d5:	add    BYTE PTR [rax],al
   1400127d7:	nop
   1400127d8:	(bad)  
   1400127d9:	add    BYTE PTR [rax],al
   1400127db:	add    BYTE PTR [rip+0xffffffff8c000000],al        # 0xcc0127e1
   1400127e1:	add    BYTE PTR [rax],al
   1400127e3:	add    BYTE PTR [rdi],al
   1400127e5:	add    BYTE PTR [rax],al
   1400127e7:	add    BYTE PTR [rcx+rax*1],dl
   1400127ea:	add    BYTE PTR [rax],al
   1400127ec:	add    al,BYTE PTR [rax]
   1400127ee:	add    BYTE PTR [rax],al
   1400127f0:	jo     0x1400127f6
   1400127f2:	add    BYTE PTR [rax],al
   1400127f4:	add    BYTE PTR [rax],al
   1400127f6:	add    BYTE PTR [rax],al
   1400127f8:	call   0x141012801
   1400127fd:	add    BYTE PTR [rax],al
   1400127ff:	add    BYTE PTR [rax],ch
   140012801:	add    eax,0x30000
   140012806:	add    BYTE PTR [rax],al
   140012808:	add    BYTE PTR [rsi],al
   14001280a:	add    BYTE PTR [rax],al
   14001280c:	add    al,0x0
   14001280e:	add    BYTE PTR [rax],al
   140012810:	movabs al,ds:0x6
	...
   140012831:	add    BYTE PTR [rax],al
   140012833:	add    BYTE PTR [rbx+0x48],al
   140012836:	rex.B
   140012837:	rex.WRX mov BYTE PTR [rax],r8b
   14001283a:	add    BYTE PTR [rax],al
   14001283c:	add    al,BYTE PTR [rax]
   14001283e:	add    BYTE PTR [rax],al
   140012840:	add    BYTE PTR [rax],al
   140012842:	add    BYTE PTR [rax],al
   140012844:	mov    eax,0x10000000
   140012849:	add    BYTE PTR [rax],al
   14001284b:	add    bh,bh
   14001284d:	(bad)  
   14001284e:	(bad)  
   14001284f:	inc    DWORD PTR [rcx]
   140012851:	add    BYTE PTR [rax],al
   140012853:	add    BYTE PTR [rcx+rax*1],al
   140012856:	add    BYTE PTR [rax],al
   140012858:	adc    DWORD PTR [rax],eax
   14001285a:	add    BYTE PTR [rax],al
   14001285c:	(bad)  
   14001285d:	(bad)  
   14001285e:	(bad)  
   14001285f:	dec    DWORD PTR [rax+rax*1+0x0]
   140012863:	add    BYTE PTR [rbp+0x0],cl
   140012866:	imul   eax,DWORD PTR [rax],0x720063
   14001286c:	outs   dx,DWORD PTR ds:[rsi]
   14001286d:	add    BYTE PTR [rbx+0x0],dh
   140012870:	outs   dx,DWORD PTR ds:[rsi]
   140012871:	add    BYTE PTR [rsi+0x0],ah
   140012874:	je     0x140012876
   140012876:	sub    eax,0x69005700
   14001287b:	add    BYTE PTR [rsi+0x0],ch
   14001287e:	add    BYTE PTR fs:[rdi+0x0],ch
   140012882:	ja     0x140012884
   140012884:	jae    0x140012886
   140012886:	sub    eax,0x6f004f00
   14001288b:	add    BYTE PTR [rdx+0x0],ah
   14001288e:	add    BYTE PTR gs:[rax+rax*1+0x64],cl
   140012893:	add    BYTE PTR [rdx+0x0],dh
   140012896:	(bad)  
   140012897:	add    BYTE PTR [rcx+0x0],al
   14001289a:	outs   dx,BYTE PTR ds:[rsi]
   14001289b:	add    BYTE PTR [rcx+0x0],ah
   14001289e:	ins    BYTE PTR es:[rdi],dx
   14001289f:	add    BYTE PTR [rcx+0x0],bh
   1400128a2:	je     0x1400128a4
   1400128a4:	imul   eax,DWORD PTR [rax],0x63
   1400128aa:	add    BYTE PTR [rax],al
   1400128ac:	adc    BYTE PTR [rax],al
   1400128ae:	add    BYTE PTR [rax],al
   1400128b0:	push   rbx
   1400128b1:	add    BYTE PTR [rbp+0x0],ah
   1400128b4:	je     0x1400128b6
   1400128b6:	jne    0x1400128b8
   1400128b8:	jo     0x1400128ba
   1400128ba:	add    BYTE PTR [rax],al
   1400128bc:	push   rsp
   1400128bd:	push   rsp
   1400128be:	rex.X
   1400128bf:	rex.WR pop rsp
   1400128c1:	add    eax,DWORD PTR [rax]
   1400128c3:	add    BYTE PTR [rax+rax*1],al
   1400128c6:	add    BYTE PTR [rax],al
   1400128c8:	push   rsp
   1400128c9:	rex.RB
   1400128ca:	rex.WRB push r8
   1400128cc:	enter  0x0,0x0
   1400128d0:	add    DWORD PTR [rax],eax
   1400128d2:	add    BYTE PTR [rax],al
   1400128d4:	add    DWORD PTR [rax],eax
   1400128d6:	add    BYTE PTR [rax],al
   1400128d8:	mov    eax,0x1000001
   1400128dd:	add    BYTE PTR [rax],al
   1400128df:	add    al,bl
   1400128e1:	movabs ds:0x4b9ba56777b91c2e,al
   1400128ea:	adc    ch,BYTE PTR [rsi]
   1400128ec:	xlat   BYTE PTR ds:[rbx]
   1400128ed:	and    BYTE PTR [rax+0x1010f36],al
   1400128f3:	add    BYTE PTR [rcx],al
   1400128f5:	(bad)  
   1400128f6:	jmp    QWORD PTR [rdx+0x0]
   1400128f9:	add    BYTE PTR [rax],al
   1400128fb:	rex.R (bad) 
   1400128fd:	or     DWORD PTR [rax],eax
   1400128ff:	add    BYTE PTR [r14+0x0],r14b
   140012903:	add    BYTE PTR gs:[rsi+0x0],ch
   140012907:	je     0x140012909
   140012909:	add    BYTE PTR [rcx+0x0],r12b
   14001290d:	je     0x14001290f
   14001290f:	(bad)  
   140012910:	add    BYTE PTR [rax],al
   140012912:	add    BYTE PTR [rdx],al
   140012914:	rex.B (bad) 
   140012916:	inc    DWORD PTR [rcx+0x0]
   140012919:	add    BYTE PTR [rax],al
   14001291b:	mov    ch,BYTE PTR [rdi+0x4]
   14001291e:	add    BYTE PTR [rax+rax*1+0x61],al
   140012922:	add    BYTE PTR [rax+rax*1+0x61],dh
   140012926:	add    BYTE PTR [rax],al
   140012928:	add    BYTE PTR [rcx],ch
   14001292a:	add    BYTE PTR [rax],al
   14001292c:	add    BYTE PTR [rsi],al
   14001292e:	rex.WXB xchg r13,rax
   140012930:	add    al,0x0
   140012932:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140012936:	ins    DWORD PTR es:[rdi],dx
   140012937:	add    BYTE PTR [rbp+0x0],ah
   14001293a:	add    BYTE PTR [rax],al
   14001293c:	add    eax,0x43000b01
   140012941:	add    BYTE PTR [rdi+0x0],ch
   140012944:	ins    DWORD PTR es:[rdi],dx
   140012945:	add    BYTE PTR [rbp+0x0],ch
   140012948:	(bad)  
   140012949:	add    BYTE PTR [rsi+0x0],ch
   14001294c:	add    BYTE PTR fs:[rax+rax*1+0x69],cl
   140012951:	add    BYTE PTR [rsi+0x0],ch
   140012954:	add    BYTE PTR gs:[rdx],al
   140012957:	or     eax,0x4010000
   14001295c:	add    al,0x0
   14001295e:	add    BYTE PTR [rax],al
   140012960:	add    BYTE PTR [rax],al
   140012962:	add    BYTE PTR [rax],al
   140012964:	add    DWORD PTR [rcx],eax
	...
   14001296e:	add    BYTE PTR [rax],al
   140012970:	int3   
   140012971:	add    DWORD PTR [rax],eax
   140012973:	add    BYTE PTR [rax+rax*1],bl
   140012976:	add    BYTE PTR [rax],al
   140012978:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001297c:	ins    DWORD PTR es:[rdi],dx
   14001297d:	add    BYTE PTR [rbp+0x0],ch
   140012980:	(bad)  
   140012981:	add    BYTE PTR [rsi+0x0],ch
   140012984:	add    BYTE PTR fs:[rax+rax*1+0x69],cl
   140012989:	add    BYTE PTR [rsi+0x0],ch
   14001298c:	add    BYTE PTR gs:[rax],al
   14001298f:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   140012993:	push   rax
   140012994:	rol    BYTE PTR [rax],0x0
   140012997:	add    BYTE PTR [rcx],al
   140012999:	add    BYTE PTR [rax],al
   14001299b:	add    BYTE PTR [rcx],al
   14001299d:	add    BYTE PTR [rax],al
   14001299f:	add    BYTE PTR [rdx+rax*1+0x0],bh
   1400129a3:	add    BYTE PTR [rcx],al
   1400129a5:	add    BYTE PTR [rax],al
   1400129a7:	add    al,bl
   1400129a9:	jo     0x1400129c1
   1400129ab:	mov    BYTE PTR [esp+edx*8-0x1b],dl
   1400129b0:	cmp    ecx,DWORD PTR [rdi-0x27]
   1400129b3:	repnz fmul DWORD PTR [rcx-0x6c]
   1400129b7:	je     0x1400129c8
   1400129b9:	add    DWORD PTR [rcx],eax
   1400129bb:	add    BYTE PTR [rcx],al
   1400129bd:	(bad)  
   1400129be:	call   FWORD PTR [rsi+0x0]
   1400129c1:	add    BYTE PTR [rax],al
   1400129c3:	rex.R (bad) 
   1400129c5:	or     DWORD PTR [rax],eax
   1400129c7:	add    BYTE PTR [r14+0x0],r14b
   1400129cb:	add    BYTE PTR gs:[rsi+0x0],ch
   1400129cf:	je     0x1400129d1
   1400129d1:	add    BYTE PTR [rcx+0x0],r12b
   1400129d5:	je     0x1400129d7
   1400129d7:	(bad)  
   1400129d8:	add    BYTE PTR [rax],al
   1400129da:	add    BYTE PTR [rdx],al
   1400129dc:	rex.B (bad) 
   1400129de:	(bad)  
   1400129df:	cmp    eax,0x8a000000
   1400129e4:	outs   dx,DWORD PTR ds:[rsi]
   1400129e5:	add    al,0x0
   1400129e7:	add    BYTE PTR [rcx+0x0],r12b
   1400129eb:	je     0x1400129ed
   1400129ed:	(bad)  
   1400129ee:	add    BYTE PTR [rax],al
   1400129f0:	add    BYTE PTR [rip+0x6000000],ah        # 0x1460129f6
   1400129f6:	rex.WXB xchg r13,rax
   1400129f8:	add    al,0x0
   1400129fa:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400129fe:	ins    DWORD PTR es:[rdi],dx
   1400129ff:	add    BYTE PTR [rbp+0x0],ah
   140012a02:	add    BYTE PTR [rax],al
   140012a04:	add    eax,0x45000901
   140012a09:	add    BYTE PTR [rdx+0x0],dh
   140012a0c:	jb     0x140012a0e
   140012a0e:	outs   dx,DWORD PTR ds:[rsi]
   140012a0f:	add    BYTE PTR [rdx+0x0],dh
   140012a12:	rex.XB add BYTE PTR [r15+0x0],bpl
   140012a16:	add    BYTE PTR fs:[rbp+0x0],ah
   140012a1a:	add    cl,BYTE PTR [rip+0x4080000]        # 0x144092a20
   140012a20:	add    al,0x0
   140012a22:	add    BYTE PTR [rax],al
   140012a24:	add    BYTE PTR [rax],al
   140012a26:	add    BYTE PTR [rax],al
   140012a28:	or     BYTE PTR [rax],cl
	...
   140012a32:	add    BYTE PTR [rax],al
   140012a34:	nop
   140012a35:	add    al,BYTE PTR [rax]
   140012a37:	add    BYTE PTR [rax],bl
   140012a39:	add    BYTE PTR [rax],al
   140012a3b:	add    BYTE PTR [rbp+0x0],al
   140012a3e:	jb     0x140012a40
   140012a40:	jb     0x140012a42
   140012a42:	outs   dx,DWORD PTR ds:[rsi]
   140012a43:	add    BYTE PTR [rdx+0x0],dh
   140012a46:	rex.XB add BYTE PTR [r15+0x0],bpl
   140012a4a:	add    BYTE PTR fs:[rbp+0x0],ah
   140012a4e:	add    BYTE PTR [rax],al
   140012a50:	push   rsp
   140012a51:	rex.RB
   140012a52:	rex.WRB push r8
   140012a54:	lods   al,BYTE PTR ds:[rsi]
   140012a55:	add    BYTE PTR [rax],al
   140012a57:	add    BYTE PTR [rcx],al
   140012a59:	add    BYTE PTR [rax],al
   140012a5b:	add    BYTE PTR [rcx],al
   140012a5d:	add    BYTE PTR [rax],al
   140012a5f:	add    BYTE PTR [rax],dh
   140012a61:	add    eax,DWORD PTR [rax]
   140012a63:	add    BYTE PTR [rcx],al
   140012a65:	add    BYTE PTR [rax],al
   140012a67:	add    BYTE PTR [rsi+0xd],ch
   140012a6a:	mov    WORD PTR [rcx+0x394ad11],cs
   140012a70:	pop    rbx
   140012a71:	rex.WRX mov sil,0x4f
   140012a74:	pop    rbx
   140012a75:	rex.R (bad) 
   140012a77:	call   0x140022b8b
   140012a7c:	add    edi,edi
   140012a7e:	call   QWORD PTR [rax+rax*1+0x0]
   140012a82:	add    BYTE PTR [rdx+rax*4+0x9],al
   140012a86:	add    BYTE PTR [rbp+0x0],al
   140012a89:	jbe    0x140012a8b
   140012a8b:	add    BYTE PTR gs:[rsi+0x0],ch
   140012a8f:	je     0x140012a91
   140012a91:	add    BYTE PTR [rcx+0x0],r12b
   140012a95:	je     0x140012a97
   140012a97:	(bad)  
   140012a98:	add    BYTE PTR [rax],al
   140012a9a:	add    BYTE PTR [rdx],al
   140012a9c:	rex.B (bad) 
   140012a9e:	push   QWORD PTR [rbx]
   140012aa0:	add    BYTE PTR [rax],al
   140012aa2:	add    BYTE PTR [rdx+0x4400046f],cl
   140012aa8:	add    BYTE PTR [rcx+0x0],ah
   140012aab:	je     0x140012aad
   140012aad:	(bad)  
   140012aae:	add    BYTE PTR [rax],al
   140012ab0:	add    BYTE PTR [rbx],bl
   140012ab2:	add    BYTE PTR [rax],al
   140012ab4:	add    BYTE PTR [rsi],al
   140012ab6:	rex.WXB xchg r13,rax
   140012ab8:	add    al,0x0
   140012aba:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140012abe:	ins    DWORD PTR es:[rdi],dx
   140012abf:	add    BYTE PTR [rbp+0x0],ah
   140012ac2:	add    BYTE PTR [rax],al
   140012ac4:	add    eax,0x50000401
   140012ac9:	add    BYTE PTR [rcx+0x0],ah
   140012acc:	jae    0x140012ace
   140012ace:	jae    0x140012ad0
   140012ad0:	add    cl,BYTE PTR [rip+0x4010000]        # 0x144022ad6
   140012ad6:	add    al,0x0
   140012ad8:	add    BYTE PTR [rax],al
   140012ada:	add    BYTE PTR [rax],al
   140012adc:	add    DWORD PTR [rcx],eax
	...
   140012ae6:	add    BYTE PTR [rax],al
   140012ae8:	add    r8d,DWORD PTR [rax]
   140012aeb:	add    BYTE PTR [rax],dl
   140012aed:	add    BYTE PTR [rax],al
   140012aef:	add    BYTE PTR [rax+0x0],dl
   140012af2:	(bad)  
   140012af3:	add    BYTE PTR [rbx+0x0],dh
   140012af6:	jae    0x140012af8
   140012af8:	add    BYTE PTR [rax],al
   140012afa:	add    BYTE PTR [rax],al
   140012afc:	push   rsp
   140012afd:	rex.RB
   140012afe:	rex.WRB push r8
   140012b00:	sbb    al,0x1
   140012b02:	add    BYTE PTR [rax],al
   140012b04:	add    al,BYTE PTR [rax]
   140012b06:	add    BYTE PTR [rax],al
   140012b08:	add    al,BYTE PTR [rax]
   140012b0a:	add    BYTE PTR [rax],al
   140012b0c:	and    BYTE PTR [rax+rax*1],al
   140012b0f:	add    BYTE PTR [rcx],al
   140012b11:	add    BYTE PTR [rax],al
   140012b13:	add    BYTE PTR [rax-0x21b1a01d],cl
   140012b19:	xchg   ebx,eax
   140012b1a:	out    dx,eax
   140012b1b:	stos   BYTE PTR es:[rdi],al
   140012b1c:	ror    BYTE PTR [rdi],cl
   140012b1e:	(bad)  [rcx+0x46]
   140012b21:	movabs ds:0xff010001010f43d1,eax
   140012b2a:	call   QWORD PTR [rsi+0x44000000]
   140012b30:	(bad)  
   140012b31:	or     DWORD PTR [rax],eax
   140012b33:	add    BYTE PTR [r14+0x0],r14b
   140012b37:	add    BYTE PTR gs:[rsi+0x0],ch
   140012b3b:	je     0x140012b3d
   140012b3d:	add    BYTE PTR [rcx+0x0],r12b
   140012b41:	je     0x140012b43
   140012b43:	(bad)  
   140012b44:	add    BYTE PTR [rax],al
   140012b46:	add    BYTE PTR [rdx],al
   140012b48:	rex.B (bad) 
   140012b4a:	push   QWORD PTR [rbx]
   140012b4c:	add    BYTE PTR [rax],al
   140012b4e:	add    BYTE PTR [rdx+0x4400046f],cl
   140012b54:	add    BYTE PTR [rcx+0x0],ah
   140012b57:	je     0x140012b59
   140012b59:	(bad)  
   140012b5a:	add    BYTE PTR [rax],al
   140012b5c:	add    BYTE PTR [rbx],bl
   140012b5e:	add    BYTE PTR [rax],al
   140012b60:	add    BYTE PTR [rsi],al
   140012b62:	rex.WXB xchg r13,rax
   140012b64:	add    al,0x0
   140012b66:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140012b6a:	ins    DWORD PTR es:[rdi],dx
   140012b6b:	add    BYTE PTR [rbp+0x0],ah
   140012b6e:	add    BYTE PTR [rax],al
   140012b70:	add    eax,0x50000401
   140012b75:	add    BYTE PTR [rcx+0x0],ah
   140012b78:	jae    0x140012b7a
   140012b7a:	jae    0x140012b7c
   140012b7c:	add    cl,BYTE PTR [rip+0x4010000]        # 0x144022b82
   140012b82:	rex.B (bad) 
   140012b84:	(bad)  
   140012b85:	cmp    eax,DWORD PTR [rax]
   140012b87:	add    BYTE PTR [rax],al
   140012b89:	mov    ch,BYTE PTR [rdi+0x4]
   140012b8c:	add    BYTE PTR [rax+rax*1+0x61],al
   140012b90:	add    BYTE PTR [rax+rax*1+0x61],dh
   140012b94:	add    BYTE PTR [rax],al
   140012b96:	add    BYTE PTR [rbx],ah
   140012b98:	add    BYTE PTR [rax],al
   140012b9a:	add    BYTE PTR [rsi],al
   140012b9c:	rex.WXB xchg r13,rax
   140012b9e:	add    al,0x0
   140012ba0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140012ba4:	ins    DWORD PTR es:[rdi],dx
   140012ba5:	add    BYTE PTR [rbp+0x0],ah
   140012ba8:	add    BYTE PTR [rax],al
   140012baa:	add    eax,0x46000801
   140012baf:	add    BYTE PTR [rcx+0x0],ch
   140012bb2:	ins    BYTE PTR es:[rdi],dx
   140012bb3:	add    BYTE PTR [rbp+0x0],ah
   140012bb6:	push   rax
   140012bb7:	add    BYTE PTR [rcx+0x0],ah
   140012bba:	je     0x140012bbc
   140012bbc:	push   0x10d0200
   140012bc1:	add    BYTE PTR [rcx],al
   140012bc3:	add    al,0x4
   140012bc5:	add    BYTE PTR [rax],al
   140012bc7:	add    BYTE PTR [rax],al
   140012bc9:	add    BYTE PTR [rax],al
   140012bcb:	add    BYTE PTR [rcx],al
   140012bcd:	add    DWORD PTR [rax],eax
	...
   140012bd7:	add    BYTE PTR [rax+0x4],cl
   140012bda:	add    BYTE PTR [rax],al
   140012bdc:	add    BYTE PTR [rax],al
   140012bde:	add    BYTE PTR [rax],al
   140012be0:	add    DWORD PTR [rcx],eax
	...
   140012bea:	add    BYTE PTR [rax],al
   140012bec:	pop    rax
   140012bed:	add    al,0x0
   140012bef:	add    BYTE PTR [rax],dl
   140012bf1:	add    BYTE PTR [rax],al
   140012bf3:	add    BYTE PTR [rax+0x0],dl
   140012bf6:	(bad)  
   140012bf7:	add    BYTE PTR [rbx+0x0],dh
   140012bfa:	jae    0x140012bfc
   140012bfc:	add    BYTE PTR [rax],al
   140012bfe:	add    BYTE PTR [rax],al
   140012c00:	sbb    BYTE PTR [rax],al
   140012c02:	add    BYTE PTR [rax],al
   140012c04:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140012c08:	ins    BYTE PTR es:[rdi],dx
   140012c09:	add    BYTE PTR [rbp+0x0],ah
   140012c0c:	push   rax
   140012c0d:	add    BYTE PTR [rcx+0x0],ah
   140012c10:	je     0x140012c12
   140012c12:	push   0x0
   140012c17:	add    BYTE PTR [rdi+0x50],cl
   140012c1a:	rex.XB
   140012c1b:	rex.WRXB js 0x140012c1e
   140012c1e:	add    BYTE PTR [rax],al
   140012c20:	add    eax,DWORD PTR [rax]
	...
   140012c2a:	add    BYTE PTR [rax],dh
   140012c2c:	movabs al,ds:0x100010000000004
   140012c35:	add    BYTE PTR [rax],al
   140012c37:	xor    BYTE PTR [rax+0x4],bh
   140012c3d:	add    BYTE PTR [rdx],al
   140012c3f:	add    BYTE PTR [rdx],al
   140012c41:	add    BYTE PTR [rax],al
   140012c43:	xor    al,dl
   140012c45:	add    al,0x0
   140012c47:	add    BYTE PTR [rax],bl
   140012c49:	add    BYTE PTR [rax],al
   140012c4b:	add    BYTE PTR [rdi+0x0],dh
   140012c4e:	imul   eax,DWORD PTR [rax],0x3a006e
   140012c54:	rex.WB add BYTE PTR [r14+0x0],bpl
   140012c58:	data16 add BYTE PTR [rdi+0x0],ch
   140012c5c:	add    BYTE PTR [rax],al
   140012c5e:	add    BYTE PTR [rax],al
   140012c60:	sbb    BYTE PTR [rax],al
   140012c62:	add    BYTE PTR [rax],al
   140012c64:	ja     0x140012c66
   140012c66:	imul   eax,DWORD PTR [rax],0x3a006e
   140012c6c:	push   rbx
   140012c6d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140012c71:	add    BYTE PTR [rdx+0x0],dh
   140012c74:	je     0x140012c76
   140012c76:	add    BYTE PTR [rax],al
   140012c78:	sbb    BYTE PTR [rax],al
   140012c7a:	add    BYTE PTR [rax],al
   140012c7c:	ja     0x140012c7e
   140012c7e:	imul   eax,DWORD PTR [rax],0x3a006e
   140012c84:	push   rbx
   140012c85:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140012c89:	add    BYTE PTR [rax+0x0],dh
   140012c8c:	add    BYTE PTR [rax],al
   140012c8e:	add    BYTE PTR [rax],al
   140012c90:	rex.WR
   140012c91:	rex.RB push r14
   140012c93:	rex.WR
   140012c94:	add    BYTE PTR [rax],al
   140012c97:	add    BYTE PTR [rcx],al
   140012c99:	add    BYTE PTR [rax],al
   140012c9b:	add    BYTE PTR [rax+rax*1],al
   140012c9e:	add    BYTE PTR [rax],al
   140012ca0:	add    al,0x0
   140012ca2:	add    BYTE PTR [rax+0x0],dl
   140012ca5:	add    eax,0x280000
   140012caa:	add    BYTE PTR [rax],al
   140012cac:	ja     0x140012cae
   140012cae:	imul   eax,DWORD PTR [rax],0x3a006e
   140012cb4:	rex.WB add BYTE PTR [r14+0x0],bpl
   140012cb8:	data16 add BYTE PTR [rdi+0x0],ch
   140012cbc:	jb     0x140012cbe
   140012cbe:	ins    DWORD PTR es:[rdi],dx
   140012cbf:	add    BYTE PTR [rcx+0x0],ah
   140012cc2:	je     0x140012cc4
   140012cc4:	imul   eax,DWORD PTR [rax],0x6e006f
   140012cca:	(bad)  
   140012ccb:	add    BYTE PTR [rax+rax*1+0x0],ch
   140012ccf:	add    BYTE PTR [rcx+rax*2+0x53],dl
   140012cd3:	rex.WXB fadd DWORD PTR [r8]
   140012cd6:	add    BYTE PTR [rax],al
   140012cd8:	add    eax,DWORD PTR [rax]
   140012cda:	add    BYTE PTR [rax],al
   140012cdc:	call   0x128012ce4
   140012ce1:	add    eax,DWORD PTR [rax]
   140012ce3:	jo     0x140012d15
   140012ce5:	(bad)  
   140012ce6:	pop    rsp
   140012ce7:	mov    eax,0x4cdb44b8
   140012cec:	(bad)  
   140012ced:	push   rsp
   140012cee:	(bad)  
   140012cef:	movsxd ebx,edi
   140012cf1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012cf2:	mov    al,0x7f
   140012cf4:	mov    BYTE PTR [rip+0x7d00000],al        # 0x147d12cfa
   140012cfa:	add    BYTE PTR [rax],al
   140012cfc:	rol    BYTE PTR [rdi],1
   140012cfe:	add    BYTE PTR [rax-0x53],dh
   140012d01:	adc    al,0xbd
   140012d03:	(bad)  
   140012d04:	and    ah,BYTE PTR [rbx]
   140012d06:	cdq    
   140012d07:	mov    r12d,0x46a0f976
   140012d0d:	mov    al,0xb0
   140012d0f:	(bad)  
   140012d10:	test   al,0x5
   140012d12:	add    BYTE PTR [rax],al
   140012d14:	mov    eax,0xb800000b
   140012d19:	or     eax,DWORD PTR [rax]
   140012d1b:	jo     0x140012d1c
   140012d1d:	out    dx,eax
   140012d1e:	fadd   DWORD PTR [rdx+0x4954fd94]
   140012d24:	xchg   edx,eax
   140012d25:	sub    al,0x54
   140012d27:	ret    
   140012d28:	fild   WORD PTR [rdx-0x4f]
   140012d2b:	in     eax,dx
   140012d2c:	loopne 0x140012d33
   140012d2e:	add    BYTE PTR [rax],al
   140012d30:	and    BYTE PTR [rax],al
   140012d32:	add    BYTE PTR [rax],al
   140012d34:	je     0x140012d36
   140012d36:	jae    0x140012d38
   140012d38:	imul   eax,DWORD PTR [rax],0x52
   140012d3b:	add    BYTE PTR [rbp+0x0],dh
   140012d3e:	outs   dx,BYTE PTR ds:[rsi]
   140012d3f:	add    BYTE PTR [rdi+0x0],cl
   140012d42:	outs   dx,DWORD PTR ds:[rsi]
   140012d43:	add    BYTE PTR [rdx+0x0],ah
   140012d46:	add    BYTE PTR gs:[rax+rax*1+0x64],cl
   140012d4b:	add    BYTE PTR [rdx+0x0],dh
   140012d4e:	add    BYTE PTR [rax],al
   140012d50:	cmp    BYTE PTR [rax],al
   140012d52:	add    BYTE PTR [rax],al
   140012d54:	je     0x140012d56
   140012d56:	jae    0x140012d58
   140012d58:	imul   eax,DWORD PTR [rax],0x4f
   140012d5b:	add    BYTE PTR [rdi+0x0],ch
   140012d5e:	(bad)  
   140012d5f:	add    BYTE PTR [rbp+0x0],ah
   140012d62:	rex.WR add BYTE PTR [rax+rax*1+0x72],r12b
   140012d67:	add    BYTE PTR [rax+0x0],dl
   140012d6a:	jb     0x140012d6c
   140012d6c:	outs   dx,DWORD PTR ds:[rsi]
   140012d6d:	add    BYTE PTR [rbx+0x0],ah
   140012d70:	add    BYTE PTR gs:[rbx+0x0],dh
   140012d74:	jae    0x140012d76
   140012d76:	push   rbp
   140012d77:	add    BYTE PTR [rsi+0x0],ch
   140012d7a:	(bad)  
   140012d7b:	add    BYTE PTR [rax+rax*1+0x74],dh
   140012d7f:	add    BYTE PTR [rbp+0x0],ah
   140012d82:	outs   dx,BYTE PTR ds:[rsi]
   140012d83:	add    BYTE PTR [rax+rax*1+0x0],ah
   140012d87:	add    BYTE PTR [rax],ah
   140012d89:	add    BYTE PTR [rax],al
   140012d8b:	add    BYTE PTR [rax+rax*1+0x73],dh
   140012d8f:	add    BYTE PTR [rbx+0x0],ch
   140012d92:	rex.WR add BYTE PTR [rcx+0x0],r12b
   140012d96:	jne    0x140012d98
   140012d98:	outs   dx,BYTE PTR ds:[rsi]
   140012d99:	add    BYTE PTR [rbx+0x0],ah
   140012d9c:	push   0x6f004f00
   140012da1:	add    BYTE PTR [rdx+0x0],ah
   140012da4:	add    BYTE PTR gs:[rax],al
   140012da7:	add    BYTE PTR [rbx+0x45],cl
   140012daa:	pop    rcx
   140012dab:	push   rdi
   140012dac:	movabs al,ds:0x100000003000000
   140012db5:	add    BYTE PTR [rax],al
   140012db7:	add    BYTE PTR [rax],al
   140012db9:	add    BYTE PTR [rax],al
   140012dbb:	add    BYTE PTR [rcx],al
   140012dbd:	add    BYTE PTR [rax],al
   140012dbf:	adc    BYTE PTR [rsi+rax*1],bh
   140012dc2:	add    BYTE PTR [rax],al
   140012dc4:	add    al,BYTE PTR [rax]
   140012dc6:	add    BYTE PTR [rax],al
   140012dc8:	add    BYTE PTR [rax],al
   140012dca:	add    BYTE PTR [rax],al
   140012dcc:	add    al,BYTE PTR [rax]
   140012dce:	add    BYTE PTR [rax],dl
   140012dd0:	(bad)  
   140012dd1:	(bad)  
   140012dd2:	add    BYTE PTR [rax],al
   140012dd4:	add    BYTE PTR [rax],al
   140012dd6:	add    BYTE PTR [rax],al
   140012dd8:	add    BYTE PTR [rax],ah
   140012dda:	add    BYTE PTR [rax],al
   140012ddc:	(bad)  
   140012ddd:	(bad)  
   140012dde:	(bad)  
   140012ddf:	inc    DWORD PTR [rax+0x24000006]
   140012de5:	add    BYTE PTR [rax],al
   140012de7:	add    BYTE PTR [rbx+0x0],ch
   140012dea:	add    BYTE PTR gs:[rcx+0x0],bh
   140012dee:	push   rax
   140012def:	add    BYTE PTR [rbp+0x0],ah
   140012df2:	jb     0x140012df4
   140012df4:	data16 add BYTE PTR [rdi+0x0],ch
   140012df8:	jb     0x140012dfa
   140012dfa:	ins    DWORD PTR es:[rdi],dx
   140012dfb:	add    BYTE PTR [rcx+0x0],ah
   140012dfe:	outs   dx,BYTE PTR ds:[rsi]
   140012dff:	add    BYTE PTR [rbx+0x0],ah
   140012e02:	add    BYTE PTR gs:[rax],al
   140012e05:	add    BYTE PTR [rax],al
   140012e07:	add    BYTE PTR [rax],ah
   140012e09:	add    BYTE PTR [rax],al
   140012e0b:	add    BYTE PTR [rbx+0x0],ch
   140012e0e:	add    BYTE PTR gs:[rcx+0x0],bh
   140012e12:	add    BYTE PTR [rcx+0x0],r13b
   140012e16:	(bad)  
   140012e17:	add    BYTE PTR [rdi+0x0],ah
   140012e1a:	outs   dx,BYTE PTR ds:[rsi]
   140012e1b:	add    BYTE PTR [rdi+0x0],ch
   140012e1e:	jae    0x140012e20
   140012e20:	je     0x140012e22
   140012e22:	imul   eax,DWORD PTR [rax],0x63
   140012e28:	and    BYTE PTR [rax],al
   140012e2a:	add    BYTE PTR [rax],al
   140012e2c:	ins    DWORD PTR es:[rdi],dx
   140012e2d:	add    BYTE PTR [rbx+0x0],dh
   140012e30:	cmp    al,BYTE PTR [rax]
   140012e32:	push   rsp
   140012e33:	add    BYTE PTR [rbp+0x0],ah
   140012e36:	ins    BYTE PTR es:[rdi],dx
   140012e37:	add    BYTE PTR [rbp+0x0],ah
   140012e3a:	ins    DWORD PTR es:[rdi],dx
   140012e3b:	add    BYTE PTR [rbp+0x0],ah
   140012e3e:	je     0x140012e40
   140012e40:	jb     0x140012e42
   140012e42:	jns    0x140012e44
   140012e44:	add    BYTE PTR [rax],al
   140012e46:	add    BYTE PTR [rax],al
   140012e48:	rex.RB push r14
   140012e4a:	rex.WRX push rsp
   140012e4c:	rol    BYTE PTR [rcx],1
   140012e4e:	add    BYTE PTR [rax],al
   140012e50:	or     BYTE PTR [rax],al
   140012e52:	add    BYTE PTR [rax],al
   140012e54:	add    BYTE PTR [rax],al
   140012e56:	add    BYTE PTR [rax],al
   140012e58:	jmp    0x144112e60
   140012e5d:	add    eax,ebp
   140012e5f:	add    eax,DWORD PTR [rcx]
   140012e61:	add    BYTE PTR [rax],al
   140012e63:	add    BYTE PTR [rax],al
   140012e65:	and    BYTE PTR [rax],al
   140012e67:	sub    cl,0x3
   140012e6a:	add    BYTE PTR [rax+0x120],dh
   140012e70:	mov    BYTE PTR [rax+rax*1],al
   140012e73:	add    ah,dh
   140012e75:	add    al,0x0
   140012e77:	add    BYTE PTR [rax*1+0x20000],dh
   140012e7e:	add    BYTE PTR [rax],al
   140012e80:	xor    BYTE PTR [rax],cl
   140012e82:	add    BYTE PTR [rax],al
   140012e84:	cwde   
   140012e85:	add    BYTE PTR [rax],al
   140012e87:	add    dl,ch
   140012e89:	add    eax,DWORD PTR [rax]
   140012e8b:	adc    BYTE PTR [rdx+rax*1],al
   140012e8e:	call   0x140012f96
   140012e93:	add    BYTE PTR [rax],al
   140012e95:	and    BYTE PTR [rax],al
   140012e97:	sub    dl,0x3
   140012e9a:	add    BYTE PTR [rax+0x1e8],dh
   140012ea0:	xchg   esp,eax
   140012ea1:	add    al,0x0
   140012ea3:	add    ah,dh
   140012ea5:	add    al,0x0
   140012ea7:	add    BYTE PTR [rax*1+0x20000],dh
   140012eae:	add    BYTE PTR [rax],al
   140012eb0:	cmp    BYTE PTR [rax],cl
   140012eb2:	add    BYTE PTR [rax],al
   140012eb4:	cwde   
   140012eb5:	add    BYTE PTR [rax],al
   140012eb7:	add    cl,dl
   140012eb9:	(bad)  
   140012eba:	add    BYTE PTR [rax],dl
   140012ebc:	add    al,0x1
   140012ebe:	rol    BYTE PTR [rdi],1
   140012ec0:	add    DWORD PTR [rax],eax
   140012ec2:	add    BYTE PTR [rax],al
   140012ec4:	add    BYTE PTR [rax],ah
   140012ec6:	add    BYTE PTR [rax-0x4ffff82f],al
   140012ecc:	test   al,0x2
   140012ece:	add    BYTE PTR [rax],al
   140012ed0:	mov    BYTE PTR [rax+rax*1],al
   140012ed3:	add    ah,dh
   140012ed5:	add    al,0x0
   140012ed7:	add    BYTE PTR [rax+0x5],dl
   140012eda:	add    BYTE PTR [rax],al
   140012edc:	add    al,BYTE PTR [rax]
   140012ede:	add    BYTE PTR [rax],al
   140012ee0:	or     BYTE PTR [rax],al
   140012ee3:	add    BYTE PTR [rax-0x2e000000],bl
   140012ee9:	(bad)  
   140012eea:	add    BYTE PTR [rax],dl
   140012eec:	add    al,0x2
   140012eee:	rol    BYTE PTR [rdi],1
   140012ef0:	add    DWORD PTR [rax],eax
   140012ef2:	add    BYTE PTR [rax],al
   140012ef4:	add    BYTE PTR [rax],ah
   140012ef6:	add    BYTE PTR [rax-0x4ffff82e],al
   140012efc:	call   0xd4012f02
   140012f01:	add    al,0x0
   140012f03:	add    ah,dh
   140012f05:	add    al,0x0
   140012f07:	add    BYTE PTR [rax+0x5],dl
   140012f0a:	add    BYTE PTR [rax],al
   140012f0c:	add    al,BYTE PTR [rax]
   140012f0e:	add    BYTE PTR [rax],al
   140012f10:	rex.W or BYTE PTR [rax],al
   140012f13:	add    BYTE PTR [rax-0x2d000000],bl
   140012f19:	(bad)  
   140012f1a:	add    BYTE PTR [rax],dl
   140012f1c:	add    al,0x2
   140012f1e:	rol    BYTE PTR [rdi],1
   140012f20:	add    DWORD PTR [rax],eax
   140012f22:	add    BYTE PTR [rax],al
   140012f24:	add    BYTE PTR [rax],ah
   140012f26:	add    BYTE PTR [rax-0x4ffff82d],al
   140012f2c:	call   0xd4012f32
   140012f31:	add    al,0x0
   140012f33:	add    ah,dh
   140012f35:	add    al,0x0
   140012f37:	add    BYTE PTR [rax+0x5],dl
   140012f3a:	add    BYTE PTR [rax],al
   140012f3c:	add    al,BYTE PTR [rax]
   140012f3e:	add    BYTE PTR [rax],al
   140012f40:	push   rax
   140012f41:	or     BYTE PTR [rax],al
   140012f43:	add    BYTE PTR [rax-0x2c000000],bl
   140012f49:	(bad)  
   140012f4a:	add    BYTE PTR [rax],dl
   140012f4c:	add    al,0x0
   140012f4e:	rol    BYTE PTR [rdi],1
   140012f50:	add    al,BYTE PTR [rax]
   140012f52:	add    BYTE PTR [rax],al
   140012f54:	add    BYTE PTR [rax],ah
   140012f56:	add    BYTE PTR [rax-0x4ffff82c],al
   140012f5c:	push   rsp
   140012f5d:	add    eax,DWORD PTR [rax]
   140012f5f:	add    BYTE PTR [rsp+rax*1+0x0],bh
   140012f63:	add    ah,dh
   140012f65:	add    al,0x0
   140012f67:	add    BYTE PTR [rax+0x5],dl
   140012f6a:	add    BYTE PTR [rax],al
   140012f6c:	add    al,BYTE PTR [rax]
   140012f6e:	add    BYTE PTR [rax],al
   140012f70:	pop    rax
   140012f71:	or     BYTE PTR [rax],al
   140012f73:	add    BYTE PTR [rax-0x47000000],bl
   140012f79:	or     eax,DWORD PTR [rax]
   140012f7b:	adc    BYTE PTR [rcx+rax*1],al
   140012f7e:	mov    eax,0x10b
   140012f83:	add    BYTE PTR [rax],al
   140012f85:	and    BYTE PTR [rax],al
   140012f87:	cmp    BYTE PTR [rcx+0xb0000b],0x0
   140012f8e:	add    BYTE PTR [rax],al
   140012f90:	mov    BYTE PTR [rax+rax*1],al
   140012f93:	add    ah,dh
   140012f95:	add    al,0x0
   140012f97:	add    BYTE PTR [rbp+rax*1+0x0],ch
   140012f9b:	add    BYTE PTR [rdx],al
   140012f9d:	add    BYTE PTR [rax],al
   140012f9f:	add    BYTE PTR [rax+0x8],ah
   140012fa2:	add    BYTE PTR [rax],al
   140012fa4:	cwde   
   140012fa5:	add    BYTE PTR [rax],al
   140012fa7:	add    BYTE PTR [rdx+0x410000b],bh
   140012fad:	add    bh,BYTE PTR [rax+0x10b]
   140012fb3:	add    BYTE PTR [rax],al
   140012fb5:	and    BYTE PTR [rax],al
   140012fb7:	cmp    BYTE PTR [rdx-0x174ffff5],0x1
   140012fbe:	add    BYTE PTR [rax],al
   140012fc0:	xchg   esp,eax
   140012fc1:	add    al,0x0
   140012fc3:	add    ah,dh
   140012fc5:	add    al,0x0
   140012fc7:	add    BYTE PTR [rbp+rax*1+0x0],ch
   140012fcb:	add    BYTE PTR [rdx],al
   140012fcd:	add    BYTE PTR [rax],al
   140012fcf:	add    BYTE PTR [rax+0x8],ch
   140012fd2:	add    BYTE PTR [rax],al
   140012fd4:	cwde   
   140012fd5:	add    BYTE PTR [rax],al
   140012fd7:	add    BYTE PTR [rsi+rax*1],cl
   140012fda:	add    BYTE PTR [rax],al
   140012fdc:	sub    al,0x6
   140012fde:	add    BYTE PTR [rax],al
   140012fe0:	or     al,0x6
   140012fe2:	add    BYTE PTR [rax],al
   140012fe4:	sub    al,0x6
   140012fe6:	add    BYTE PTR [rax],al
   140012fe8:	or     al,0x6
   140012fea:	add    BYTE PTR [rax],al
   140012fec:	sub    al,0x6
   140012fee:	add    BYTE PTR [rax],al
   140012ff0:	or     al,0x6
   140012ff2:	add    BYTE PTR [rax],al
   140012ff4:	sub    al,0x6
   140012ff6:	add    BYTE PTR [rax],al
   140012ff8:	or     al,0x6
   140012ffa:	add    BYTE PTR [rax],al
   140012ffc:	sub    al,0x6
   140012ffe:	add    BYTE PTR [rax],al
   140013000:	sbb    al,0x6
   140013002:	add    BYTE PTR [rax],al
   140013004:	sub    al,0x6
   140013006:	add    BYTE PTR [rax],al
   140013008:	or     al,0x6
   14001300a:	add    BYTE PTR [rax],al
   14001300c:	sub    al,0x6
   14001300e:	add    BYTE PTR [rax],al
   140013010:	or     al,0x6
   140013012:	add    BYTE PTR [rax],al
   140013014:	sub    al,0x6
	...
   14001301e:	add    BYTE PTR [rax],al
   140013020:	int    0xfe
   140013022:	int    0xfe
   140013024:	lock add BYTE PTR [rax],al
   140013027:	add    BYTE PTR [rax],al
   140013029:	add    BYTE PTR [rcx],al
   14001302b:	add    BYTE PTR [rax],al
   14001302d:	add    BYTE PTR [rax],al
   14001302f:	add    BYTE PTR [rcx],dl
   140013031:	add    BYTE PTR [rax],al
   140013033:	add    BYTE PTR [rax],al
   140013035:	add    BYTE PTR [rax],al
   140013037:	add    BYTE PTR [rdx],al
   140013039:	add    BYTE PTR [rax],al
   14001303b:	add    ah,dh
   14001303d:	mov    esp,0x7a6e70d
   140013042:	(bad)  
   140013043:	xchg   esi,eax
   140013044:	or     ah,BYTE PTR [rcx]
   140013046:	jo     0x14001305b
   140013048:	cwde   
   140013049:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001304a:	(bad)  
   14001304b:	xchg   edx,eax
   14001304c:	jge    0x140013009
   14001304e:	(bad)  
   14001304f:	pop    rsp
   140013050:	rex.RB test eax,0x8d364387
   140013056:	shr    BYTE PTR [rsi+rsi*2+0x1150be],cl
	...
   140013071:	add    BYTE PTR [rax],al
   140013073:	add    BYTE PTR [rax+0x2a000000],cl
   140013079:	add    BYTE PTR [rax],al
   14001307b:	add    BYTE PTR [rax+0x8000000],bh
   140013081:	add    BYTE PTR [rax],al
   140013083:	add    al,al
   140013085:	add    BYTE PTR [rax],al
   140013087:	add    BYTE PTR [rsi],cl
   140013089:	add    BYTE PTR [rax],al
   14001308b:	add    al,dl
   14001308d:	add    BYTE PTR [rax],al
   14001308f:	add    BYTE PTR [rax+rax*1],cl
	...
   14001309a:	add    BYTE PTR [rax],al
   14001309c:	loopne 0x14001309e
   14001309e:	add    BYTE PTR [rax],al
   1400130a0:	or     al,0x0
   1400130a2:	add    BYTE PTR [rax],al
   1400130a4:	add    BYTE PTR [rax],al
   1400130a6:	add    BYTE PTR [rax],al
   1400130a8:	push   rdi
   1400130a9:	add    BYTE PTR [rbp+0x0],al
   1400130ac:	push   rsi
   1400130ad:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400130b1:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400130b5:	add    BYTE PTR [rbp+0x0],cl
   1400130b8:	push   rax
   1400130b9:	add    BYTE PTR [rax+rax*1+0x41],cl
   1400130bd:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400130c1:	add    BYTE PTR [rax],al
   1400130c3:	add    BYTE PTR [rbp+0x0],cl
   1400130c6:	push   rbp
   1400130c7:	add    BYTE PTR [rcx+0x0],cl
	...
   1400130d6:	add    BYTE PTR [rax],al
   1400130d8:	adc    BYTE PTR [rax],al
   1400130da:	add    BYTE PTR [rax],al
   1400130dc:	sbb    BYTE PTR [rax],al
   1400130de:	add    BYTE PTR [rax],al
   1400130e0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400130e4:	rex.WB add BYTE PTR [r8],al
	...
   1400130ef:	add    BYTE PTR [rsi],al
   1400130f1:	add    BYTE PTR [rax],al
   1400130f3:	add    BYTE PTR [rbx],cl
   1400130f5:	add    BYTE PTR [rax],al
   1400130f7:	add    BYTE PTR [rax],dl
   1400130f9:	add    BYTE PTR [rax],al
   1400130fb:	add    BYTE PTR [rax],al
   1400130fd:	add    BYTE PTR [rax],al
   1400130ff:	add    BYTE PTR [rbp+0x0],ah
   140013102:	outs   dx,BYTE PTR ds:[rsi]
   140013103:	add    BYTE PTR [rip+0x53005500],ch        # 0x193018609
   140013109:	add    BYTE PTR [rax],al
   14001310b:	add    BYTE PTR [rax],al
   14001310d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140014000 <.reloc>:
   140014000:	add    BYTE PTR [rax+0x200000],ah
   140014006:	add    BYTE PTR [rax],al
   140014008:	fsub   DWORD PTR [rax+riz*8-0x75b0f5c]
   14001400f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014010:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140014016:	sbb    BYTE PTR [rbp-0x5ac75ad0],ah
   14001401c:	shl    BYTE PTR [rbp-0x3fff5a38],0x0
   140014023:	add    BYTE PTR [rax+rax*1],bl
   140014026:	add    BYTE PTR [rax],al
   140014028:	fsub   DWORD PTR [rbx-0x5c075c18]
   14001402e:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   140014035:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014036:	js     0x140013fe0
   140014038:	mov    BYTE PTR [rax-0x30000000],ch
   14001403e:	add    BYTE PTR [rax],al
   140014040:	adc    BYTE PTR [rax],al
   140014042:	add    BYTE PTR [rax],al
   140014044:	sbb    BYTE PTR [rax-0x57c757d0],ch
   14001404a:	test   al,0x0
   14001404d:	add    BYTE PTR [rcx],al
   14001404f:	add    BYTE PTR [rax],ah
   140014051:	add    BYTE PTR [rax],al
   140014053:	add    BYTE PTR [rax-0x60],dl
   140014056:	pop    rax
   140014057:	movabs al,ds:0xa078a070a068a060
   140014060:	and    BYTE PTR [rax-0x5f375f40],0xd0
   140014067:	.byte 0xa0
   140014068:	.byte 0xd8
   140014069:	.byte 0xa0
   14001406a:	loopne 0x14001400c
