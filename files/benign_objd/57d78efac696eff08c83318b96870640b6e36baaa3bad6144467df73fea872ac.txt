
57d78efac696eff08c83318b96870640b6e36baaa3bad6144467df73fea872ac.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	mov    QWORD PTR [rsp+0x10],rbp
   140001012:	push   rsi
   140001013:	push   rdi
   140001014:	push   r14
   140001016:	sub    rsp,0x40
   14000101a:	or     rbx,0xffffffffffffffff
   14000101e:	mov    rbp,rdx
   140001021:	xor    r14d,r14d
   140001024:	mov    rsi,rcx
   140001027:	inc    rbx
   14000102a:	cmp    WORD PTR [rdx+rbx*2],r14w
   14000102f:	jne    0x140001027
   140001031:	call   QWORD PTR [rip+0x6019]        # 0x140007050
   140001037:	btr    eax,0xf
   14000103b:	cmp    eax,0x2
   14000103e:	jne    0x14000106d
   140001040:	lea    rdx,[rsp+0x78]
   140001045:	mov    rcx,rsi
   140001048:	call   QWORD PTR [rip+0x5fba]        # 0x140007008
   14000104e:	test   eax,eax
   140001050:	je     0x14000106d
   140001052:	lea    r9,[rsp+0x70]
   140001057:	mov    QWORD PTR [rsp+0x20],r14
   14000105c:	mov    r8d,ebx
   14000105f:	mov    rdx,rbp
   140001062:	mov    rcx,rsi
   140001065:	call   QWORD PTR [rip+0x5f95]        # 0x140007000
   14000106b:	jmp    0x1400010cf
   14000106d:	mov    edx,ebx
   14000106f:	xor    ecx,ecx
   140001071:	add    rdx,rdx
   140001074:	call   QWORD PTR [rip+0x602e]        # 0x1400070a8
   14000107a:	mov    rdi,rax
   14000107d:	test   rax,rax
   140001080:	je     0x1400010cf
   140001082:	lea    ecx,[rbx+rbx*1]
   140001085:	mov    QWORD PTR [rsp+0x38],r14
   14000108a:	xor    edx,edx
   14000108c:	mov    QWORD PTR [rsp+0x30],r14
   140001091:	mov    DWORD PTR [rsp+0x28],ecx
   140001095:	mov    r9d,ebx
   140001098:	mov    r8,rbp
   14000109b:	mov    QWORD PTR [rsp+0x20],rax
   1400010a0:	lea    ecx,[rdx+0x1]
   1400010a3:	call   QWORD PTR [rip+0x6097]        # 0x140007140
   1400010a9:	test   eax,eax
   1400010ab:	je     0x1400010c6
   1400010ad:	lea    r9,[rsp+0x70]
   1400010b2:	mov    QWORD PTR [rsp+0x20],r14
   1400010b7:	mov    r8d,eax
   1400010ba:	mov    rdx,rdi
   1400010bd:	mov    rcx,rsi
   1400010c0:	call   QWORD PTR [rip+0x5faa]        # 0x140007070
   1400010c6:	mov    rcx,rdi
   1400010c9:	call   QWORD PTR [rip+0x5fd1]        # 0x1400070a0
   1400010cf:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010d4:	mov    rbp,QWORD PTR [rsp+0x68]
   1400010d9:	add    rsp,0x40
   1400010dd:	pop    r14
   1400010df:	pop    rdi
   1400010e0:	pop    rsi
   1400010e1:	ret    
   1400010e2:	int3   
   1400010e3:	int3   
   1400010e4:	int3   
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	rex push rbx
   1400010ea:	sub    rsp,0x250
   1400010f1:	mov    rax,QWORD PTR [rip+0x8f10]        # 0x14000a008
   1400010f8:	xor    rax,rsp
   1400010fb:	mov    QWORD PTR [rsp+0x240],rax
   140001103:	mov    rbx,QWORD PTR [rip+0x998e]        # 0x14000aa98
   14000110a:	lea    rax,[rip+0x6363]        # 0x140007474
   140001111:	movzx  r9d,dx
   140001115:	lea    r8,[rip+0x635c]        # 0x140007478
   14000111c:	mov    edx,0x106
   140001121:	mov    QWORD PTR [rsp+0x20],rax
   140001126:	lea    rcx,[rsp+0x30]
   14000112b:	call   QWORD PTR [rip+0x621f]        # 0x140007350
   140001131:	lea    rdx,[rsp+0x30]
   140001136:	mov    rcx,rbx
   140001139:	call   0x140001008
   14000113e:	mov    rcx,QWORD PTR [rsp+0x240]
   140001146:	xor    rcx,rsp
   140001149:	call   0x140005db0
   14000114e:	add    rsp,0x250
   140001155:	pop    rbx
   140001156:	ret    
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    DWORD PTR [rsp+0x18],r8d
   140001165:	mov    QWORD PTR [rsp+0x20],r9
   14000116a:	push   rbx
   14000116b:	push   rbp
   14000116c:	push   rsi
   14000116d:	push   rdi
   14000116e:	sub    rsp,0x58
   140001172:	mov    edi,r8d
   140001175:	mov    rbp,rdx
   140001178:	cmp    r8d,0x2715
   14000117f:	jne    0x140001192
   140001181:	inc    DWORD PTR [rip+0x9909]        # 0x14000aa90
   140001187:	test   cl,cl
   140001189:	jns    0x140001192
   14000118b:	xor    eax,eax
   14000118d:	jmp    0x140001250
   140001192:	mov    ecx,0x8000
   140001197:	call   QWORD PTR [rip+0x619b]        # 0x140007338
   14000119d:	mov    rbx,rax
   1400011a0:	test   rax,rax
   1400011a3:	jne    0x1400011ba
   1400011a5:	lea    rcx,[rip+0x62d4]        # 0x140007480
   1400011ac:	call   QWORD PTR [rip+0x60a6]        # 0x140007258
   1400011b2:	lea    eax,[rbx+0x8]
   1400011b5:	jmp    0x140001250
   1400011ba:	lea    rax,[rsp+0x98]
   1400011c2:	xor    r9d,r9d
   1400011c5:	mov    QWORD PTR [rsp+0x40],rax
   1400011ca:	mov    r8d,edi
   1400011cd:	lea    rax,[rsp+0x40]
   1400011d2:	xor    edx,edx
   1400011d4:	mov    QWORD PTR [rsp+0x30],rax
   1400011d9:	mov    ecx,0x800
   1400011de:	mov    DWORD PTR [rsp+0x28],0x4000
   1400011e6:	xor    esi,esi
   1400011e8:	mov    QWORD PTR [rsp+0x20],rbx
   1400011ed:	call   QWORD PTR [rip+0x5eed]        # 0x1400070e0
   1400011f3:	test   eax,eax
   1400011f5:	jne    0x140001234
   1400011f7:	mov    r8d,DWORD PTR [rsp+0x90]
   1400011ff:	lea    rax,[rsp+0x40]
   140001204:	mov    QWORD PTR [rsp+0x30],rax
   140001209:	xor    r9d,r9d
   14000120c:	mov    DWORD PTR [rsp+0x28],0x4000
   140001214:	xor    edx,edx
   140001216:	mov    ecx,0x1000
   14000121b:	mov    QWORD PTR [rsp+0x20],rbx
   140001220:	call   QWORD PTR [rip+0x5eba]        # 0x1400070e0
   140001226:	test   eax,eax
   140001228:	jne    0x140001234
   14000122a:	call   QWORD PTR [rip+0x5e00]        # 0x140007030
   140001230:	mov    esi,eax
   140001232:	jmp    0x14000123f
   140001234:	mov    rdx,rbx
   140001237:	mov    rcx,rbp
   14000123a:	call   0x140001008
   14000123f:	and    QWORD PTR [rsp+0x40],0x0
   140001245:	mov    rcx,rbx
   140001248:	call   QWORD PTR [rip+0x6072]        # 0x1400072c0
   14000124e:	mov    eax,esi
   140001250:	add    rsp,0x58
   140001254:	pop    rdi
   140001255:	pop    rsi
   140001256:	pop    rbp
   140001257:	pop    rbx
   140001258:	ret    
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	mov    QWORD PTR [rsp+0x8],rbx
   140001265:	mov    QWORD PTR [rsp+0x10],rsi
   14000126a:	push   rbp
   14000126b:	push   rdi
   14000126c:	push   r12
   14000126e:	push   r14
   140001270:	push   r15
   140001272:	lea    rbp,[rsp-0x37]
   140001277:	sub    rsp,0xb0
   14000127e:	mov    edi,r8d
   140001281:	lea    r9,[rbp-0x21]
   140001285:	mov    r14d,edx
   140001288:	or     r12,0xffffffffffffffff
   14000128c:	xor    r8d,r8d
   14000128f:	mov    QWORD PTR [rbp+0x7f],r12
   140001293:	lea    rdx,[rbp-0x41]
   140001297:	call   QWORD PTR [rip+0x610b]        # 0x1400073a8
   14000129d:	xor    r15d,r15d
   1400012a0:	test   al,al
   1400012a2:	jne    0x1400012b7
   1400012a4:	lea    ecx,[r12+0x4]
   1400012a9:	call   QWORD PTR [rip+0x5d79]        # 0x140007028
   1400012af:	mov    rax,r12
   1400012b2:	jmp    0x140001400
   1400012b7:	mov    rsi,QWORD PTR [rbp-0x39]
   1400012bb:	cmp    WORD PTR [rbp-0x21],r15w
   1400012c0:	je     0x1400012d1
   1400012c2:	movups xmm0,XMMWORD PTR [rbp-0x21]
   1400012c6:	mov    rax,QWORD PTR [rbp-0x11]
   1400012ca:	movdqu XMMWORD PTR [rbp-0x41],xmm0
   1400012cf:	jmp    0x1400012d8
   1400012d1:	mov    rax,r15
   1400012d4:	mov    QWORD PTR [rbp-0x11],rax
   1400012d8:	mov    edx,edi
   1400012da:	mov    QWORD PTR [rbp+0x7],rax
   1400012de:	shr    edx,1
   1400012e0:	lea    rax,[rbp-0x41]
   1400012e4:	not    edx
   1400012e6:	mov    DWORD PTR [rsp+0x28],0x200000
   1400012ee:	and    edx,0x80
   1400012f4:	mov    DWORD PTR [rbp-0x1],0x30
   1400012fb:	xorps  xmm0,xmm0
   1400012fe:	mov    DWORD PTR [rbp+0x17],0x40
   140001305:	or     edx,r14d
   140001308:	mov    QWORD PTR [rbp+0xf],rax
   14000130c:	lea    r9,[rbp-0x31]
   140001310:	mov    DWORD PTR [rsp+0x20],0x7
   140001318:	lea    r8,[rbp-0x1]
   14000131c:	lea    rcx,[rbp+0x7f]
   140001320:	movdqu XMMWORD PTR [rbp+0x1f],xmm0
   140001325:	call   QWORD PTR [rip+0x605d]        # 0x140007388
   14000132b:	mov    ebx,eax
   14000132d:	test   eax,eax
   14000132f:	js     0x1400013ca
   140001335:	bt     edi,0x8
   140001339:	jb     0x1400013ca
   14000133f:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001343:	lea    r8,[rbp-0x49]
   140001347:	mov    r9d,0x8
   14000134d:	mov    DWORD PTR [rsp+0x20],0x23
   140001355:	lea    rdx,[rbp-0x31]
   140001359:	call   QWORD PTR [rip+0x6051]        # 0x1400073b0
   14000135f:	mov    ebx,eax
   140001361:	test   eax,eax
   140001363:	jns    0x14000137c
   140001365:	cmp    eax,0xc000000d
   14000136a:	je     0x1400013ca
   14000136c:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001370:	call   QWORD PTR [rip+0x6022]        # 0x140007398
   140001376:	mov    QWORD PTR [rbp+0x7f],r12
   14000137a:	jmp    0x1400013ca
   14000137c:	test   DWORD PTR [rbp-0x49],0x400
   140001383:	je     0x1400013ca
   140001385:	cmp    DWORD PTR [rbp-0x45],0xa000000c
   14000138c:	jne    0x1400013ca
   14000138e:	mov    rcx,QWORD PTR [rbp+0x7f]
   140001392:	call   QWORD PTR [rip+0x6000]        # 0x140007398
   140001398:	lea    r9,[rbp-0x31]
   14000139c:	mov    DWORD PTR [rsp+0x28],r15d
   1400013a1:	lea    r8,[rbp-0x1]
   1400013a5:	mov    DWORD PTR [rsp+0x20],0x7
   1400013ad:	mov    edx,r14d
   1400013b0:	lea    rcx,[rbp+0x7f]
   1400013b4:	call   QWORD PTR [rip+0x5fce]        # 0x140007388
   1400013ba:	mov    ebx,eax
   1400013bc:	mov    rax,QWORD PTR [rbp+0x7f]
   1400013c0:	test   ebx,ebx
   1400013c2:	cmovs  rax,r12
   1400013c6:	mov    QWORD PTR [rbp+0x7f],rax
   1400013ca:	lea    rcx,[rbp-0x21]
   1400013ce:	call   QWORD PTR [rip+0x5fbc]        # 0x140007390
   1400013d4:	mov    rcx,QWORD PTR gs:0x60
   1400013dd:	mov    r8,rsi
   1400013e0:	xor    edx,edx
   1400013e2:	mov    rcx,QWORD PTR [rcx+0x30]
   1400013e6:	call   QWORD PTR [rip+0x5fd4]        # 0x1400073c0
   1400013ec:	mov    ecx,ebx
   1400013ee:	call   QWORD PTR [rip+0x5fac]        # 0x1400073a0
   1400013f4:	mov    ecx,eax
   1400013f6:	call   QWORD PTR [rip+0x5c2c]        # 0x140007028
   1400013fc:	mov    rax,QWORD PTR [rbp+0x7f]
   140001400:	lea    r11,[rsp+0xb0]
   140001408:	mov    rbx,QWORD PTR [r11+0x30]
   14000140c:	mov    rsi,QWORD PTR [r11+0x38]
   140001410:	mov    rsp,r11
   140001413:	pop    r15
   140001415:	pop    r14
   140001417:	pop    r12
   140001419:	pop    rdi
   14000141a:	pop    rbp
   14000141b:	ret    
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	int3   
   140001421:	int3   
   140001422:	int3   
   140001423:	int3   
   140001424:	mov    rax,rsp
   140001427:	mov    QWORD PTR [rax+0x8],rbx
   14000142b:	mov    QWORD PTR [rax+0x10],rbp
   14000142f:	mov    QWORD PTR [rax+0x18],rsi
   140001433:	mov    QWORD PTR [rax+0x20],rdi
   140001437:	push   r12
   140001439:	push   r14
   14000143b:	push   r15
   14000143d:	sub    rsp,0x20
   140001441:	mov    r12,rcx
   140001444:	mov    r14b,r9b
   140001447:	mov    rcx,r8
   14000144a:	mov    rdi,r8
   14000144d:	mov    r15d,edx
   140001450:	call   QWORD PTR [rip+0x5d2a]        # 0x140007180
   140001456:	mov    esi,eax
   140001458:	lea    ebp,[rsi+0x8]
   14000145b:	mov    ecx,ebp
   14000145d:	call   QWORD PTR [rip+0x5ed5]        # 0x140007338
   140001463:	mov    rbx,rax
   140001466:	test   rax,rax
   140001469:	jne    0x140001470
   14000146b:	lea    eax,[rbx+0x8]
   14000146e:	jmp    0x140001497
   140001470:	mov    BYTE PTR [rax],r15b
   140001473:	lea    rcx,[rbx+0x8]
   140001477:	mov    BYTE PTR [rax+0x1],r14b
   14000147b:	mov    r8,rsi
   14000147e:	mov    WORD PTR [rax+0x2],bp
   140001482:	mov    rdx,rdi
   140001485:	mov    eax,DWORD PTR [rsp+0x60]
   140001489:	mov    DWORD PTR [rbx+0x4],eax
   14000148c:	call   0x140006362
   140001491:	xor    eax,eax
   140001493:	mov    QWORD PTR [r12],rbx
   140001497:	mov    rbx,QWORD PTR [rsp+0x40]
   14000149c:	mov    rbp,QWORD PTR [rsp+0x48]
   1400014a1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400014a6:	mov    rdi,QWORD PTR [rsp+0x58]
   1400014ab:	add    rsp,0x20
   1400014af:	pop    r15
   1400014b1:	pop    r14
   1400014b3:	pop    r12
   1400014b5:	ret    
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400014c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400014c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400014cb:	push   rdi
   1400014cc:	push   r12
   1400014ce:	push   r13
   1400014d0:	push   r14
   1400014d2:	push   r15
   1400014d4:	sub    rsp,0x20
   1400014d8:	or     r13,0xffffffffffffffff
   1400014dc:	mov    r15,r8
   1400014df:	mov    rax,r13
   1400014e2:	xor    ebp,ebp
   1400014e4:	mov    r14,rdx
   1400014e7:	mov    rbx,rcx
   1400014ea:	inc    rax
   1400014ed:	cmp    WORD PTR [rcx+rax*2],bp
   1400014f1:	jne    0x1400014ea
   1400014f3:	test   rax,rax
   1400014f6:	jne    0x140001502
   1400014f8:	mov    eax,0x57
   1400014fd:	jmp    0x14000167f
   140001502:	mov    DWORD PTR [r8],ebp
   140001505:	lea    r12,[rip+0x8f84]        # 0x14000a490
   14000150c:	mov    BYTE PTR [rdx],bpl
   14000150f:	cmp    QWORD PTR [rip+0x8f7a],rbp        # 0x14000a490
   140001516:	mov    esi,ebp
   140001518:	mov    rdi,rbp
   14000151b:	je     0x140001551
   14000151d:	mov    rax,r12
   140001520:	mov    rdx,QWORD PTR [rax]
   140001523:	mov    rsi,r13
   140001526:	inc    rsi
   140001529:	cmp    WORD PTR [rdx+rsi*2],bp
   14000152d:	jne    0x140001526
   14000152f:	movsxd r8,esi
   140001532:	mov    rcx,rbx
   140001535:	call   QWORD PTR [rip+0x5d65]        # 0x1400072a0
   14000153b:	test   eax,eax
   14000153d:	je     0x140001551
   14000153f:	inc    rdi
   140001542:	mov    rax,rdi
   140001545:	shl    rax,0x4
   140001549:	add    rax,r12
   14000154c:	cmp    QWORD PTR [rax],rbp
   14000154f:	jne    0x140001520
   140001551:	add    rdi,rdi
   140001554:	cmp    QWORD PTR [r12+rdi*8],rbp
   140001558:	je     0x14000156b
   14000155a:	mov    al,BYTE PTR [r12+rdi*8+0x8]
   14000155f:	or     BYTE PTR [r14],al
   140001562:	movsxd rax,esi
   140001565:	lea    rbx,[rbx+rax*2]
   140001569:	jmp    0x14000150f
   14000156b:	cmp    WORD PTR [rbx],0x28
   14000156f:	jne    0x140001608
   140001575:	add    rbx,0x2
   140001579:	lea    rsi,[rip+0x8ab0]        # 0x14000a030
   140001580:	cmp    QWORD PTR [rip+0x8aa9],rbp        # 0x14000a030
   140001587:	mov    rdi,rbp
   14000158a:	je     0x1400015c0
   14000158c:	mov    rax,rsi
   14000158f:	mov    rdx,QWORD PTR [rax]
   140001592:	mov    rax,r13
   140001595:	inc    rax
   140001598:	cmp    WORD PTR [rdx+rax*2],bp
   14000159c:	jne    0x140001595
   14000159e:	movsxd r8,eax
   1400015a1:	mov    rcx,rbx
   1400015a4:	call   QWORD PTR [rip+0x5cf6]        # 0x1400072a0
   1400015aa:	test   eax,eax
   1400015ac:	je     0x1400015c0
   1400015ae:	inc    rdi
   1400015b1:	mov    rax,rdi
   1400015b4:	shl    rax,0x4
   1400015b8:	add    rax,rsi
   1400015bb:	cmp    QWORD PTR [rax],rbp
   1400015be:	jne    0x14000158f
   1400015c0:	add    rdi,rdi
   1400015c3:	mov    eax,DWORD PTR [rsi+rdi*8+0x8]
   1400015c7:	test   eax,eax
   1400015c9:	je     0x1400014f8
   1400015cf:	or     DWORD PTR [r15],eax
   1400015d2:	mov    rax,r13
   1400015d5:	mov    rcx,QWORD PTR [rsi+rdi*8]
   1400015d9:	inc    rax
   1400015dc:	cmp    WORD PTR [rcx+rax*2],bp
   1400015e0:	jne    0x1400015d9
   1400015e2:	lea    rbx,[rbx+rax*2]
   1400015e6:	movzx  eax,WORD PTR [rbx]
   1400015e9:	add    rbx,0x2
   1400015ed:	cmp    ax,0x29
   1400015f1:	je     0x1400015fe
   1400015f3:	cmp    ax,0x2c
   1400015f7:	je     0x140001580
   1400015f9:	jmp    0x1400014f8
   1400015fe:	cmp    WORD PTR [rbx],bp
   140001601:	je     0x14000167d
   140001603:	jmp    0x1400014f8
   140001608:	cmp    WORD PTR [rbx],bp
   14000160b:	je     0x14000167d
   14000160d:	lea    rsi,[rip+0x8bcc]        # 0x14000a1e0
   140001614:	cmp    QWORD PTR [rip+0x8bc5],rbp        # 0x14000a1e0
   14000161b:	mov    rdi,rbp
   14000161e:	je     0x140001652
   140001620:	mov    rax,rsi
   140001623:	mov    rdx,QWORD PTR [rax]
   140001626:	mov    r8,r13
   140001629:	inc    r8
   14000162c:	cmp    WORD PTR [rdx+r8*2],bp
   140001631:	jne    0x140001629
   140001633:	mov    rcx,rbx
   140001636:	call   QWORD PTR [rip+0x5c64]        # 0x1400072a0
   14000163c:	test   eax,eax
   14000163e:	je     0x140001652
   140001640:	inc    rdi
   140001643:	mov    rax,rdi
   140001646:	shl    rax,0x4
   14000164a:	add    rax,rsi
   14000164d:	cmp    QWORD PTR [rax],rbp
   140001650:	jne    0x140001623
   140001652:	add    rdi,rdi
   140001655:	mov    eax,DWORD PTR [rsi+rdi*8+0x8]
   140001659:	test   eax,eax
   14000165b:	je     0x1400014f8
   140001661:	or     DWORD PTR [r15],eax
   140001664:	mov    rax,r13
   140001667:	mov    rcx,QWORD PTR [rsi+rdi*8]
   14000166b:	inc    rax
   14000166e:	cmp    WORD PTR [rcx+rax*2],bp
   140001672:	jne    0x14000166b
   140001674:	lea    rbx,[rbx+rax*2]
   140001678:	cmp    WORD PTR [rbx],bp
   14000167b:	jne    0x140001614
   14000167d:	xor    eax,eax
   14000167f:	mov    rbx,QWORD PTR [rsp+0x50]
   140001684:	mov    rbp,QWORD PTR [rsp+0x58]
   140001689:	mov    rsi,QWORD PTR [rsp+0x60]
   14000168e:	add    rsp,0x20
   140001692:	pop    r15
   140001694:	pop    r14
   140001696:	pop    r13
   140001698:	pop    r12
   14000169a:	pop    rdi
   14000169b:	ret    
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	int3   
   1400016a1:	int3   
   1400016a2:	int3   
   1400016a3:	int3   
   1400016a4:	mov    rax,rsp
   1400016a7:	mov    QWORD PTR [rax+0x8],rbx
   1400016ab:	mov    QWORD PTR [rax+0x10],rbp
   1400016af:	mov    QWORD PTR [rax+0x18],rsi
   1400016b3:	mov    QWORD PTR [rax+0x20],rdi
   1400016b7:	push   r12
   1400016b9:	push   r14
   1400016bb:	push   r15
   1400016bd:	sub    rsp,0x20
   1400016c1:	xor    r12d,r12d
   1400016c4:	lea    rbx,[rdx+0x8]
   1400016c8:	mov    r15,r8
   1400016cb:	mov    rdi,rdx
   1400016ce:	mov    r14d,ecx
   1400016d1:	mov    rsi,rbx
   1400016d4:	mov    ebp,r12d
   1400016d7:	cmp    r12w,WORD PTR [rdx+0x4]
   1400016dc:	jae    0x140001733
   1400016de:	lea    rdx,[rsi+0x8]
   1400016e2:	mov    rcx,r15
   1400016e5:	call   QWORD PTR [rip+0x5ad5]        # 0x1400071c0
   1400016eb:	test   eax,eax
   1400016ed:	je     0x140001722
   1400016ef:	test   BYTE PTR [rsi+0x1],0x10
   1400016f3:	jne    0x140001722
   1400016f5:	test   r14b,0x10
   1400016f9:	je     0x140001700
   1400016fb:	cmp    BYTE PTR [rsi],r12b
   1400016fe:	je     0x14000170b
   140001700:	test   r14b,0x20
   140001704:	je     0x140001722
   140001706:	cmp    BYTE PTR [rsi],0x1
   140001709:	jne    0x140001722
   14000170b:	mov    edx,ebp
   14000170d:	mov    rcx,rdi
   140001710:	call   QWORD PTR [rip+0x5a82]        # 0x140007198
   140001716:	test   eax,eax
   140001718:	jne    0x14000172b
   14000171a:	call   QWORD PTR [rip+0x5910]        # 0x140007030
   140001720:	jmp    0x140001753
   140001722:	movzx  eax,WORD PTR [rsi+0x2]
   140001726:	inc    ebp
   140001728:	add    rsi,rax
   14000172b:	movzx  eax,WORD PTR [rdi+0x4]
   14000172f:	cmp    ebp,eax
   140001731:	jl     0x1400016de
   140001733:	movzx  eax,WORD PTR [rdi+0x4]
   140001737:	test   eax,eax
   140001739:	jle    0x14000174a
   14000173b:	mov    ecx,eax
   14000173d:	movzx  eax,WORD PTR [rbx+0x2]
   140001741:	add    rbx,rax
   140001744:	sub    rcx,0x1
   140001748:	jne    0x14000173d
   14000174a:	sub    bx,di
   14000174d:	mov    WORD PTR [rdi+0x2],bx
   140001751:	xor    eax,eax
   140001753:	mov    rbx,QWORD PTR [rsp+0x40]
   140001758:	mov    rbp,QWORD PTR [rsp+0x48]
   14000175d:	mov    rsi,QWORD PTR [rsp+0x50]
   140001762:	mov    rdi,QWORD PTR [rsp+0x58]
   140001767:	add    rsp,0x20
   14000176b:	pop    r15
   14000176d:	pop    r14
   14000176f:	pop    r12
   140001771:	ret    
   140001772:	int3   
   140001773:	int3   
   140001774:	int3   
   140001775:	int3   
   140001776:	int3   
   140001777:	int3   
   140001778:	mov    QWORD PTR [rsp+0x8],rbx
   14000177d:	mov    QWORD PTR [rsp+0x10],rbp
   140001782:	mov    QWORD PTR [rsp+0x18],rsi
   140001787:	push   rdi
   140001788:	push   r14
   14000178a:	push   r15
   14000178c:	sub    rsp,0x30
   140001790:	mov    rax,QWORD PTR [rcx]
   140001793:	xor    ebx,ebx
   140001795:	or     r15d,0xffffffff
   140001799:	mov    r14,rdx
   14000179c:	mov    rsi,rcx
   14000179f:	mov    ebp,ebx
   1400017a1:	lea    rdi,[rax+0x8]
   1400017a5:	cmp    bx,WORD PTR [rax+0x4]
   1400017a9:	jae    0x140001860
   1400017af:	cmp    r15d,0xffffffff
   1400017b3:	jne    0x1400017d1
   1400017b5:	mov    cl,BYTE PTR [rdi+0x1]
   1400017b8:	test   cl,0x10
   1400017bb:	jne    0x1400017ce
   1400017bd:	cmp    BYTE PTR [rdi],bl
   1400017bf:	je     0x1400017ce
   1400017c1:	mov    al,BYTE PTR [r14+0x18]
   1400017c5:	and    cl,0x3
   1400017c8:	and    al,0x3
   1400017ca:	cmp    cl,al
   1400017cc:	jb     0x1400017d1
   1400017ce:	mov    r15d,ebp
   1400017d1:	mov    al,BYTE PTR [rdi+0x1]
   1400017d4:	test   al,0x10
   1400017d6:	jne    0x140001848
   1400017d8:	cmp    al,BYTE PTR [r14+0x18]
   1400017dc:	jne    0x140001848
   1400017de:	cmp    BYTE PTR [rdi],bl
   1400017e0:	jne    0x140001848
   1400017e2:	mov    rcx,QWORD PTR [r14+0x10]
   1400017e6:	lea    rdx,[rdi+0x8]
   1400017ea:	call   QWORD PTR [rip+0x59d0]        # 0x1400071c0
   1400017f0:	test   eax,eax
   1400017f2:	je     0x140001848
   1400017f4:	mov    eax,DWORD PTR [r14+0x1c]
   1400017f8:	btr    eax,0x14
   1400017fc:	not    eax
   1400017fe:	and    DWORD PTR [rdi+0x4],eax
   140001801:	test   DWORD PTR [rdi+0x4],0xffefffff
   140001808:	jne    0x140001848
   14000180a:	mov    rcx,QWORD PTR [rsi]
   14000180d:	mov    edx,ebp
   14000180f:	call   QWORD PTR [rip+0x5983]        # 0x140007198
   140001815:	test   eax,eax
   140001817:	je     0x1400018b9
   14000181d:	mov    rdx,QWORD PTR [rsi]
   140001820:	movzx  eax,WORD PTR [rdx+0x4]
   140001824:	lea    rcx,[rdx+0x8]
   140001828:	test   eax,eax
   14000182a:	jle    0x14000183c
   14000182c:	mov    r8d,eax
   14000182f:	movzx  eax,WORD PTR [rcx+0x2]
   140001833:	add    rcx,rax
   140001836:	sub    r8,0x1
   14000183a:	jne    0x14000182f
   14000183c:	sub    cx,dx
   14000183f:	mov    WORD PTR [rdx+0x2],cx
   140001843:	jmp    0x1400017af
   140001848:	movzx  eax,WORD PTR [rdi+0x2]
   14000184c:	inc    ebp
   14000184e:	add    rdi,rax
   140001851:	mov    rax,QWORD PTR [rsi]
   140001854:	movzx  ecx,WORD PTR [rax+0x4]
   140001858:	cmp    ebp,ecx
   14000185a:	jl     0x1400017af
   140001860:	mov    rax,QWORD PTR [r14+0x20]
   140001864:	mov    rcx,QWORD PTR [rsi]
   140001867:	movzx  ebp,WORD PTR [rax+0x2]
   14000186b:	movzx  eax,WORD PTR [rcx+0x2]
   14000186f:	add    ebp,eax
   140001871:	mov    edx,ebp
   140001873:	call   QWORD PTR [rip+0x5ac7]        # 0x140007340
   140001879:	mov    rdi,rax
   14000187c:	cmp    ebp,0xffff
   140001882:	ja     0x1400018c9
   140001884:	test   rax,rax
   140001887:	je     0x1400018d8
   140001889:	mov    WORD PTR [rax+0x2],bp
   14000188d:	mov    r8d,r15d
   140001890:	mov    r9,QWORD PTR [r14+0x20]
   140001894:	mov    edx,0x2
   140001899:	movzx  ecx,WORD PTR [r9+0x2]
   14000189e:	mov    DWORD PTR [rsp+0x20],ecx
   1400018a2:	mov    rcx,rax
   1400018a5:	call   QWORD PTR [rip+0x58cd]        # 0x140007178
   1400018ab:	test   eax,eax
   1400018ad:	jne    0x1400018c1
   1400018af:	call   QWORD PTR [rip+0x577b]        # 0x140007030
   1400018b5:	mov    ebx,eax
   1400018b7:	jmp    0x1400018dd
   1400018b9:	call   QWORD PTR [rip+0x5771]        # 0x140007030
   1400018bf:	jmp    0x1400018e8
   1400018c1:	mov    QWORD PTR [rsi],rdi
   1400018c4:	mov    rdi,rbx
   1400018c7:	jmp    0x1400018dd
   1400018c9:	test   rax,rax
   1400018cc:	je     0x1400018d8
   1400018ce:	mov    QWORD PTR [rsi],rbx
   1400018d1:	mov    ebx,0x53c
   1400018d6:	jmp    0x1400018dd
   1400018d8:	mov    ebx,0x8
   1400018dd:	mov    rcx,rdi
   1400018e0:	call   QWORD PTR [rip+0x59da]        # 0x1400072c0
   1400018e6:	mov    eax,ebx
   1400018e8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400018ed:	mov    rbp,QWORD PTR [rsp+0x58]
   1400018f2:	mov    rsi,QWORD PTR [rsp+0x60]
   1400018f7:	add    rsp,0x30
   1400018fb:	pop    r15
   1400018fd:	pop    r14
   1400018ff:	pop    rdi
   140001900:	ret    
   140001901:	int3   
   140001902:	int3   
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	mov    QWORD PTR [rsp+0x8],rbx
   14000190d:	mov    QWORD PTR [rsp+0x10],rbp
   140001912:	mov    QWORD PTR [rsp+0x18],rsi
   140001917:	push   rdi
   140001918:	push   r14
   14000191a:	push   r15
   14000191c:	sub    rsp,0x30
   140001920:	mov    rax,QWORD PTR [rcx]
   140001923:	xor    ebx,ebx
   140001925:	or     r15d,0xffffffff
   140001929:	mov    rsi,rdx
   14000192c:	mov    r14,rcx
   14000192f:	mov    ebp,ebx
   140001931:	lea    rdi,[rax+0x8]
   140001935:	cmp    bx,WORD PTR [rax+0x4]
   140001939:	jae    0x1400019f6
   14000193f:	cmp    r15d,0xffffffff
   140001943:	jne    0x140001960
   140001945:	mov    cl,BYTE PTR [rdi+0x1]
   140001948:	test   cl,0x10
   14000194b:	jne    0x14000195d
   14000194d:	cmp    BYTE PTR [rdi],bl
   14000194f:	jne    0x140001960
   140001951:	mov    al,BYTE PTR [rsi+0x18]
   140001954:	and    cl,0x3
   140001957:	and    al,0x3
   140001959:	cmp    cl,al
   14000195b:	jb     0x140001960
   14000195d:	mov    r15d,ebp
   140001960:	mov    al,BYTE PTR [rdi+0x1]
   140001963:	test   al,0x10
   140001965:	jne    0x1400019de
   140001967:	cmp    al,BYTE PTR [rsi+0x18]
   14000196a:	jne    0x1400019de
   14000196c:	mov    rcx,QWORD PTR [rsi+0x10]
   140001970:	lea    rdx,[rdi+0x8]
   140001974:	call   QWORD PTR [rip+0x5846]        # 0x1400071c0
   14000197a:	test   eax,eax
   14000197c:	je     0x1400019de
   14000197e:	cmp    BYTE PTR [rdi],bl
   140001980:	je     0x140001a57
   140001986:	cmp    BYTE PTR [rdi],0x1
   140001989:	jne    0x1400019de
   14000198b:	mov    eax,DWORD PTR [rsi+0x1c]
   14000198e:	btr    eax,0x14
   140001992:	not    eax
   140001994:	and    DWORD PTR [rdi+0x4],eax
   140001997:	test   DWORD PTR [rdi+0x4],0xffefffff
   14000199e:	jne    0x1400019de
   1400019a0:	mov    rcx,QWORD PTR [r14]
   1400019a3:	mov    edx,ebp
   1400019a5:	call   QWORD PTR [rip+0x57ed]        # 0x140007198
   1400019ab:	test   eax,eax
   1400019ad:	je     0x140001a4f
   1400019b3:	mov    rdx,QWORD PTR [r14]
   1400019b6:	movzx  eax,WORD PTR [rdx+0x4]
   1400019ba:	lea    rcx,[rdx+0x8]
   1400019be:	test   eax,eax
   1400019c0:	jle    0x1400019d2
   1400019c2:	mov    r8d,eax
   1400019c5:	movzx  eax,WORD PTR [rcx+0x2]
   1400019c9:	add    rcx,rax
   1400019cc:	sub    r8,0x1
   1400019d0:	jne    0x1400019c5
   1400019d2:	sub    cx,dx
   1400019d5:	mov    WORD PTR [rdx+0x2],cx
   1400019d9:	jmp    0x14000193f
   1400019de:	movzx  eax,WORD PTR [rdi+0x2]
   1400019e2:	inc    ebp
   1400019e4:	add    rdi,rax
   1400019e7:	mov    rax,QWORD PTR [r14]
   1400019ea:	movzx  ecx,WORD PTR [rax+0x4]
   1400019ee:	cmp    ebp,ecx
   1400019f0:	jl     0x14000193f
   1400019f6:	mov    rcx,QWORD PTR [r14]
   1400019f9:	mov    rax,QWORD PTR [rsi+0x20]
   1400019fd:	movzx  ebp,WORD PTR [rcx+0x2]
   140001a01:	movzx  edx,WORD PTR [rax+0x2]
   140001a05:	add    ebp,edx
   140001a07:	mov    edx,ebp
   140001a09:	call   QWORD PTR [rip+0x5931]        # 0x140007340
   140001a0f:	mov    rdi,rax
   140001a12:	cmp    ebp,0xffff
   140001a18:	ja     0x140001a71
   140001a1a:	test   rax,rax
   140001a1d:	je     0x140001a80
   140001a1f:	mov    WORD PTR [rax+0x2],bp
   140001a23:	mov    r8d,r15d
   140001a26:	mov    r9,QWORD PTR [rsi+0x20]
   140001a2a:	mov    edx,0x2
   140001a2f:	movzx  ecx,WORD PTR [r9+0x2]
   140001a34:	mov    DWORD PTR [rsp+0x20],ecx
   140001a38:	mov    rcx,rax
   140001a3b:	call   QWORD PTR [rip+0x5737]        # 0x140007178
   140001a41:	test   eax,eax
   140001a43:	jne    0x140001a69
   140001a45:	call   QWORD PTR [rip+0x55e5]        # 0x140007030
   140001a4b:	mov    ebx,eax
   140001a4d:	jmp    0x140001a85
   140001a4f:	call   QWORD PTR [rip+0x55db]        # 0x140007030
   140001a55:	jmp    0x140001a90
   140001a57:	test   BYTE PTR [rsi],0x40
   140001a5a:	mov    eax,DWORD PTR [rsi+0x1c]
   140001a5d:	je     0x140001a64
   140001a5f:	mov    DWORD PTR [rdi+0x4],eax
   140001a62:	jmp    0x140001a8e
   140001a64:	or     DWORD PTR [rdi+0x4],eax
   140001a67:	jmp    0x140001a8e
   140001a69:	mov    QWORD PTR [r14],rdi
   140001a6c:	mov    rdi,rbx
   140001a6f:	jmp    0x140001a85
   140001a71:	test   rax,rax
   140001a74:	je     0x140001a80
   140001a76:	mov    QWORD PTR [r14],rbx
   140001a79:	mov    ebx,0x53c
   140001a7e:	jmp    0x140001a85
   140001a80:	mov    ebx,0x8
   140001a85:	mov    rcx,rdi
   140001a88:	call   QWORD PTR [rip+0x5832]        # 0x1400072c0
   140001a8e:	mov    eax,ebx
   140001a90:	mov    rbx,QWORD PTR [rsp+0x50]
   140001a95:	mov    rbp,QWORD PTR [rsp+0x58]
   140001a9a:	mov    rsi,QWORD PTR [rsp+0x60]
   140001a9f:	add    rsp,0x30
   140001aa3:	pop    r15
   140001aa5:	pop    r14
   140001aa7:	pop    rdi
   140001aa8:	ret    
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	mov    rax,rsp
   140001ab3:	mov    QWORD PTR [rax+0x8],rbx
   140001ab7:	mov    QWORD PTR [rax+0x10],rbp
   140001abb:	mov    QWORD PTR [rax+0x18],rsi
   140001abf:	mov    QWORD PTR [rax+0x20],rdi
   140001ac3:	push   r14
   140001ac5:	sub    rsp,0x30
   140001ac9:	mov    rax,QWORD PTR [rdx+0x20]
   140001acd:	mov    r14,rcx
   140001ad0:	mov    rbp,rdx
   140001ad3:	xor    ebx,ebx
   140001ad5:	movzx  esi,WORD PTR [rax+0x2]
   140001ad9:	add    esi,0x8
   140001adc:	mov    ecx,esi
   140001ade:	call   QWORD PTR [rip+0x5854]        # 0x140007338
   140001ae4:	mov    rdi,rax
   140001ae7:	cmp    esi,0xffff
   140001aed:	ja     0x140001b39
   140001aef:	test   rax,rax
   140001af2:	je     0x140001b43
   140001af4:	lea    r8d,[rbx+0x2]
   140001af8:	mov    edx,esi
   140001afa:	mov    rcx,rax
   140001afd:	call   QWORD PTR [rip+0x568d]        # 0x140007190
   140001b03:	test   eax,eax
   140001b05:	je     0x140001b27
   140001b07:	mov    r9,QWORD PTR [rbp+0x20]
   140001b0b:	lea    edx,[rbx+0x2]
   140001b0e:	xor    r8d,r8d
   140001b11:	mov    rcx,rdi
   140001b14:	movzx  eax,WORD PTR [r9+0x2]
   140001b19:	mov    DWORD PTR [rsp+0x20],eax
   140001b1d:	call   QWORD PTR [rip+0x5655]        # 0x140007178
   140001b23:	test   eax,eax
   140001b25:	jne    0x140001b31
   140001b27:	call   QWORD PTR [rip+0x5503]        # 0x140007030
   140001b2d:	mov    ebx,eax
   140001b2f:	jmp    0x140001b48
   140001b31:	mov    QWORD PTR [r14],rdi
   140001b34:	mov    rdi,rbx
   140001b37:	jmp    0x140001b48
   140001b39:	mov    ebx,0x53c
   140001b3e:	test   rax,rax
   140001b41:	jne    0x140001b48
   140001b43:	mov    ebx,0x8
   140001b48:	mov    rcx,rdi
   140001b4b:	call   QWORD PTR [rip+0x576f]        # 0x1400072c0
   140001b51:	mov    rbp,QWORD PTR [rsp+0x48]
   140001b56:	mov    eax,ebx
   140001b58:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b5d:	mov    rsi,QWORD PTR [rsp+0x50]
   140001b62:	mov    rdi,QWORD PTR [rsp+0x58]
   140001b67:	add    rsp,0x30
   140001b6b:	pop    r14
   140001b6d:	ret    
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	int3   
   140001b71:	int3   
   140001b72:	int3   
   140001b73:	int3   
   140001b74:	mov    rax,rsp
   140001b77:	mov    QWORD PTR [rax+0x8],rbx
   140001b7b:	mov    QWORD PTR [rax+0x10],rbp
   140001b7f:	mov    QWORD PTR [rax+0x18],rsi
   140001b83:	mov    QWORD PTR [rax+0x20],rdi
   140001b87:	push   r14
   140001b89:	sub    rsp,0x20
   140001b8d:	xor    r14d,r14d
   140001b90:	lea    rbx,[rcx+0x8]
   140001b94:	mov    rdi,rcx
   140001b97:	mov    rsi,rbx
   140001b9a:	mov    ebp,r14d
   140001b9d:	cmp    r14w,WORD PTR [rcx+0x4]
   140001ba2:	jae    0x140001bd2
   140001ba4:	test   BYTE PTR [rsi+0x1],0x10
   140001ba8:	je     0x140001bc1
   140001baa:	mov    edx,ebp
   140001bac:	mov    rcx,rdi
   140001baf:	call   QWORD PTR [rip+0x55e3]        # 0x140007198
   140001bb5:	test   eax,eax
   140001bb7:	jne    0x140001bca
   140001bb9:	call   QWORD PTR [rip+0x5471]        # 0x140007030
   140001bbf:	jmp    0x140001bf2
   140001bc1:	movzx  eax,WORD PTR [rsi+0x2]
   140001bc5:	inc    ebp
   140001bc7:	add    rsi,rax
   140001bca:	movzx  eax,WORD PTR [rdi+0x4]
   140001bce:	cmp    ebp,eax
   140001bd0:	jl     0x140001ba4
   140001bd2:	movzx  eax,WORD PTR [rdi+0x4]
   140001bd6:	test   eax,eax
   140001bd8:	jle    0x140001be9
   140001bda:	mov    ecx,eax
   140001bdc:	movzx  eax,WORD PTR [rbx+0x2]
   140001be0:	add    rbx,rax
   140001be3:	sub    rcx,0x1
   140001be7:	jne    0x140001bdc
   140001be9:	sub    bx,di
   140001bec:	mov    WORD PTR [rdi+0x2],bx
   140001bf0:	xor    eax,eax
   140001bf2:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bf7:	mov    rbp,QWORD PTR [rsp+0x38]
   140001bfc:	mov    rsi,QWORD PTR [rsp+0x40]
   140001c01:	mov    rdi,QWORD PTR [rsp+0x48]
   140001c06:	add    rsp,0x20
   140001c0a:	pop    r14
   140001c0c:	ret    
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	int3   
   140001c11:	int3   
   140001c12:	int3   
   140001c13:	int3   
   140001c14:	rex push rbx
   140001c16:	push   rbp
   140001c17:	push   rsi
   140001c18:	push   rdi
   140001c19:	push   r12
   140001c1b:	push   r14
   140001c1d:	push   r15
   140001c1f:	sub    rsp,0x270
   140001c26:	mov    rax,QWORD PTR [rip+0x83db]        # 0x14000a008
   140001c2d:	xor    rax,rsp
   140001c30:	mov    QWORD PTR [rsp+0x260],rax
   140001c38:	mov    rbx,QWORD PTR [rsp+0x2d8]
   140001c40:	xor    r12d,r12d
   140001c43:	mov    r15,QWORD PTR [rsp+0x2e0]
   140001c4b:	mov    r14,r9
   140001c4e:	mov    ebp,DWORD PTR [rsp+0x2e8]
   140001c55:	mov    esi,r8d
   140001c58:	mov    DWORD PTR [rsp+0x40],r12d
   140001c5d:	mov    rdi,rcx
   140001c60:	test   rbx,rbx
   140001c63:	je     0x140001c7c
   140001c65:	mov    rcx,rbx
   140001c68:	call   QWORD PTR [rip+0x5532]        # 0x1400071a0
   140001c6e:	test   eax,eax
   140001c70:	jne    0x140001c7c
   140001c72:	mov    eax,0x54f
   140001c77:	jmp    0x140001d1b
   140001c7c:	lea    rdx,[rsp+0x40]
   140001c81:	mov    ecx,esi
   140001c83:	call   QWORD PTR [rip+0x552f]        # 0x1400071b8
   140001c89:	mov    edx,DWORD PTR [rsp+0x40]
   140001c8d:	mov    r8d,ebp
   140001c90:	bts    edx,0x11
   140001c94:	mov    rcx,rdi
   140001c97:	call   0x140001260
   140001c9c:	mov    rdi,rax
   140001c9f:	cmp    rax,0xffffffffffffffff
   140001ca3:	jne    0x140001cad
   140001ca5:	call   QWORD PTR [rip+0x5385]        # 0x140007030
   140001cab:	jmp    0x140001d1b
   140001cad:	test   rbx,rbx
   140001cb0:	je     0x140001ceb
   140001cb2:	cmp    WORD PTR [rbx+0x4],r12w
   140001cb7:	jne    0x140001ceb
   140001cb9:	mov    r9d,0xc
   140001cbf:	lea    rdx,[rsp+0x50]
   140001cc4:	mov    r8d,0x104
   140001cca:	mov    rcx,rax
   140001ccd:	call   QWORD PTR [rip+0x5375]        # 0x140007048
   140001cd3:	dec    eax
   140001cd5:	cmp    eax,0x103
   140001cda:	ja     0x140001ceb
   140001cdc:	cmp    WORD PTR [rsp+0x52],r12w
   140001ce2:	jne    0x140001ceb
   140001ce4:	mov    ebx,0x272c
   140001ce9:	jmp    0x140001d10
   140001ceb:	mov    QWORD PTR [rsp+0x30],r15
   140001cf0:	mov    r9,r14
   140001cf3:	mov    QWORD PTR [rsp+0x28],rbx
   140001cf8:	mov    r8d,esi
   140001cfb:	mov    edx,0x1
   140001d00:	mov    QWORD PTR [rsp+0x20],r12
   140001d05:	mov    rcx,rdi
   140001d08:	call   QWORD PTR [rip+0x54fa]        # 0x140007208
   140001d0e:	mov    ebx,eax
   140001d10:	mov    rcx,rdi
   140001d13:	call   QWORD PTR [rip+0x5367]        # 0x140007080
   140001d19:	mov    eax,ebx
   140001d1b:	mov    rcx,QWORD PTR [rsp+0x260]
   140001d23:	xor    rcx,rsp
   140001d26:	call   0x140005db0
   140001d2b:	add    rsp,0x270
   140001d32:	pop    r15
   140001d34:	pop    r14
   140001d36:	pop    r12
   140001d38:	pop    rdi
   140001d39:	pop    rsi
   140001d3a:	pop    rbp
   140001d3b:	pop    rbx
   140001d3c:	ret    
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	int3   
   140001d41:	int3   
   140001d42:	int3   
   140001d43:	int3   
   140001d44:	mov    QWORD PTR [rsp+0x8],rbx
   140001d49:	push   rdi
   140001d4a:	sub    rsp,0x40
   140001d4e:	and    QWORD PTR [rdx],0x0
   140001d52:	mov    rbx,rdx
   140001d55:	mov    edx,0x20000
   140001d5a:	call   0x140001260
   140001d5f:	mov    rdi,rax
   140001d62:	cmp    rax,0xffffffffffffffff
   140001d66:	jne    0x140001d70
   140001d68:	call   QWORD PTR [rip+0x52c2]        # 0x140007030
   140001d6e:	jmp    0x140001daa
   140001d70:	mov    QWORD PTR [rsp+0x38],rbx
   140001d75:	xor    r9d,r9d
   140001d78:	and    QWORD PTR [rsp+0x30],0x0
   140001d7e:	mov    r8d,0x97
   140001d84:	and    QWORD PTR [rsp+0x28],0x0
   140001d8a:	mov    rcx,rax
   140001d8d:	and    QWORD PTR [rsp+0x20],0x0
   140001d93:	lea    edx,[r9+0x1]
   140001d97:	call   QWORD PTR [rip+0x5473]        # 0x140007210
   140001d9d:	mov    rcx,rdi
   140001da0:	mov    ebx,eax
   140001da2:	call   QWORD PTR [rip+0x52d8]        # 0x140007080
   140001da8:	mov    eax,ebx
   140001daa:	mov    rbx,QWORD PTR [rsp+0x50]
   140001daf:	add    rsp,0x40
   140001db3:	pop    rdi
   140001db4:	ret    
   140001db5:	int3   
   140001db6:	int3   
   140001db7:	int3   
   140001db8:	int3   
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	mov    QWORD PTR [rsp+0x8],rbx
   140001dc1:	push   rdi
   140001dc2:	sub    rsp,0x30
   140001dc6:	and    QWORD PTR [rdx],0x0
   140001dca:	mov    rdi,rdx
   140001dcd:	and    QWORD PTR [rsp+0x20],0x0
   140001dd3:	lea    rdx,[rsp+0x20]
   140001dd8:	call   0x140001d44
   140001ddd:	test   eax,eax
   140001ddf:	jne    0x140001e5d
   140001de1:	mov    rcx,QWORD PTR [rsp+0x20]
   140001de6:	lea    r9,[rsp+0x58]
   140001deb:	lea    r8,[rsp+0x28]
   140001df0:	lea    rdx,[rsp+0x48]
   140001df5:	call   QWORD PTR [rip+0x53b5]        # 0x1400071b0
   140001dfb:	test   eax,eax
   140001dfd:	jne    0x140001e16
   140001dff:	call   QWORD PTR [rip+0x522b]        # 0x140007030
   140001e05:	mov    rcx,QWORD PTR [rsp+0x20]
   140001e0a:	mov    ebx,eax
   140001e0c:	call   QWORD PTR [rip+0x528e]        # 0x1400070a0
   140001e12:	mov    eax,ebx
   140001e14:	jmp    0x140001e5d
   140001e16:	cmp    DWORD PTR [rsp+0x48],0x0
   140001e1b:	je     0x140001e50
   140001e1d:	mov    rbx,QWORD PTR [rsp+0x28]
   140001e22:	test   rbx,rbx
   140001e25:	je     0x140001e50
   140001e27:	movzx  ecx,WORD PTR [rbx+0x2]
   140001e2b:	call   QWORD PTR [rip+0x5507]        # 0x140007338
   140001e31:	mov    QWORD PTR [rdi],rax
   140001e34:	test   rax,rax
   140001e37:	jne    0x140001e40
   140001e39:	mov    eax,0x8
   140001e3e:	jmp    0x140001e5d
   140001e40:	movzx  r8d,WORD PTR [rbx+0x2]
   140001e45:	mov    rdx,rbx
   140001e48:	mov    rcx,rax
   140001e4b:	call   0x140006362
   140001e50:	mov    rcx,QWORD PTR [rsp+0x20]
   140001e55:	call   QWORD PTR [rip+0x5245]        # 0x1400070a0
   140001e5b:	xor    eax,eax
   140001e5d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e62:	add    rsp,0x30
   140001e66:	pop    rdi
   140001e67:	ret    
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	mov    rax,rsp
   140001e73:	mov    QWORD PTR [rax+0x8],rbx
   140001e77:	mov    QWORD PTR [rax+0x18],rsi
   140001e7b:	push   rdi
   140001e7c:	sub    rsp,0x30
   140001e80:	and    QWORD PTR [rdx],0x0
   140001e84:	mov    rsi,rdx
   140001e87:	and    QWORD PTR [rax-0x18],0x0
   140001e8c:	lea    rdx,[rax-0x18]
   140001e90:	call   0x140001d44
   140001e95:	test   eax,eax
   140001e97:	jne    0x140001f15
   140001e99:	mov    rcx,QWORD PTR [rsp+0x20]
   140001e9e:	lea    r9,[rsp+0x58]
   140001ea3:	lea    r8,[rsp+0x28]
   140001ea8:	lea    rdx,[rsp+0x48]
   140001ead:	call   QWORD PTR [rip+0x52f5]        # 0x1400071a8
   140001eb3:	test   eax,eax
   140001eb5:	jne    0x140001ece
   140001eb7:	call   QWORD PTR [rip+0x5173]        # 0x140007030
   140001ebd:	mov    rcx,QWORD PTR [rsp+0x20]
   140001ec2:	mov    ebx,eax
   140001ec4:	call   QWORD PTR [rip+0x51d6]        # 0x1400070a0
   140001eca:	mov    eax,ebx
   140001ecc:	jmp    0x140001f15
   140001ece:	cmp    DWORD PTR [rsp+0x48],0x0
   140001ed3:	je     0x140001f08
   140001ed5:	mov    rbx,QWORD PTR [rsp+0x28]
   140001eda:	test   rbx,rbx
   140001edd:	je     0x140001f08
   140001edf:	movzx  edi,WORD PTR [rbx+0x2]
   140001ee3:	mov    ecx,edi
   140001ee5:	call   QWORD PTR [rip+0x544d]        # 0x140007338
   140001eeb:	mov    QWORD PTR [rsi],rax
   140001eee:	test   rax,rax
   140001ef1:	jne    0x140001efa
   140001ef3:	mov    eax,0x8
   140001ef8:	jmp    0x140001f15
   140001efa:	mov    r8,rdi
   140001efd:	mov    rdx,rbx
   140001f00:	mov    rcx,rax
   140001f03:	call   0x140006362
   140001f08:	mov    rcx,QWORD PTR [rsp+0x20]
   140001f0d:	call   QWORD PTR [rip+0x518d]        # 0x1400070a0
   140001f13:	xor    eax,eax
   140001f15:	mov    rbx,QWORD PTR [rsp+0x40]
   140001f1a:	mov    rsi,QWORD PTR [rsp+0x50]
   140001f1f:	add    rsp,0x30
   140001f23:	pop    rdi
   140001f24:	ret    
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	mov    rax,rsp
   140001f2f:	mov    QWORD PTR [rax+0x8],rbx
   140001f33:	mov    QWORD PTR [rax+0x10],rsi
   140001f37:	mov    QWORD PTR [rax+0x18],rdi
   140001f3b:	mov    QWORD PTR [rax+0x20],r9
   140001f3f:	push   rbp
   140001f40:	push   r12
   140001f42:	push   r13
   140001f44:	push   r14
   140001f46:	push   r15
   140001f48:	mov    rbp,rsp
   140001f4b:	sub    rsp,0x30
   140001f4f:	mov    r12,r8
   140001f52:	mov    rsi,rdx
   140001f55:	xor    r8d,r8d
   140001f58:	mov    r15,rcx
   140001f5b:	mov    ebx,r8d
   140001f5e:	or     rax,0xffffffffffffffff
   140001f62:	inc    rax
   140001f65:	cmp    WORD PTR [rcx+rax*2],r8w
   140001f6a:	jne    0x140001f62
   140001f6c:	test   rax,rax
   140001f6f:	jne    0x140001f7b
   140001f71:	mov    eax,0x57
   140001f76:	jmp    0x1400020a9
   140001f7b:	mov    DWORD PTR [r9],r8d
   140001f7e:	lea    r13,[rip+0x850b]        # 0x14000a490
   140001f85:	mov    BYTE PTR [r12],r8b
   140001f89:	cmp    QWORD PTR [rip+0x8500],r8        # 0x14000a490
   140001f90:	mov    r14d,r8d
   140001f93:	mov    rdi,r8
   140001f96:	je     0x140001fd1
   140001f98:	mov    rax,r13
   140001f9b:	mov    rdx,QWORD PTR [rax]
   140001f9e:	or     r14,0xffffffffffffffff
   140001fa2:	inc    r14
   140001fa5:	cmp    WORD PTR [rdx+r14*2],r8w
   140001faa:	jne    0x140001fa2
   140001fac:	movsxd r8,r14d
   140001faf:	mov    rcx,r15
   140001fb2:	call   QWORD PTR [rip+0x52e8]        # 0x1400072a0
   140001fb8:	xor    r8d,r8d
   140001fbb:	test   eax,eax
   140001fbd:	je     0x140001fd1
   140001fbf:	inc    rdi
   140001fc2:	mov    rax,rdi
   140001fc5:	shl    rax,0x4
   140001fc9:	add    rax,r13
   140001fcc:	cmp    QWORD PTR [rax],r8
   140001fcf:	jne    0x140001f9b
   140001fd1:	add    rdi,rdi
   140001fd4:	cmp    QWORD PTR [r13+rdi*8+0x0],r8
   140001fd9:	je     0x140001fed
   140001fdb:	mov    al,BYTE PTR [r13+rdi*8+0x8]
   140001fe0:	or     BYTE PTR [r12],al
   140001fe4:	movsxd rax,r14d
   140001fe7:	lea    r15,[r15+rax*2]
   140001feb:	jmp    0x140001f89
   140001fed:	movzx  ecx,WORD PTR [r15]
   140001ff1:	mov    edx,0xffdf
   140001ff6:	lea    eax,[rcx-0x4c]
   140001ff9:	test   dx,ax
   140001ffc:	je     0x14000202b
   140001ffe:	lea    eax,[rcx-0x4d]
   140002001:	test   dx,ax
   140002004:	je     0x140002022
   140002006:	sub    cx,0x48
   14000200a:	test   dx,cx
   14000200d:	je     0x140002019
   14000200f:	mov    ebx,0x57
   140002014:	jmp    0x14000209b
   140002019:	lea    rcx,[rip+0x5584]        # 0x1400075a4
   140002020:	jmp    0x140002032
   140002022:	lea    rcx,[rip+0x5573]        # 0x14000759c
   140002029:	jmp    0x140002032
   14000202b:	lea    rcx,[rip+0x5562]        # 0x140007594
   140002032:	lea    rdx,[rbp-0x10]
   140002036:	mov    QWORD PTR [rbp-0x10],r8
   14000203a:	call   QWORD PTR [rip+0x51f0]        # 0x140007230
   140002040:	test   eax,eax
   140002042:	je     0x14000208d
   140002044:	mov    rcx,QWORD PTR [rbp-0x10]
   140002048:	call   QWORD PTR [rip+0x506a]        # 0x1400070b8
   14000204e:	mov    rcx,rax
   140002051:	call   QWORD PTR [rip+0x52e1]        # 0x140007338
   140002057:	mov    QWORD PTR [rsi],rax
   14000205a:	mov    rdi,rax
   14000205d:	test   rax,rax
   140002060:	je     0x140002088
   140002062:	mov    rcx,QWORD PTR [rbp-0x10]
   140002066:	call   QWORD PTR [rip+0x504c]        # 0x1400070b8
   14000206c:	mov    r8,QWORD PTR [rbp-0x10]
   140002070:	mov    rdx,rdi
   140002073:	mov    rcx,rax
   140002076:	call   QWORD PTR [rip+0x5154]        # 0x1400071d0
   14000207c:	mov    rcx,QWORD PTR [rbp-0x10]
   140002080:	call   QWORD PTR [rip+0x501a]        # 0x1400070a0
   140002086:	jmp    0x14000208d
   140002088:	mov    ebx,0x8
   14000208d:	cmp    QWORD PTR [rsi],0x0
   140002091:	jne    0x14000209b
   140002093:	call   QWORD PTR [rip+0x4f97]        # 0x140007030
   140002099:	mov    ebx,eax
   14000209b:	mov    r13,QWORD PTR [rbp+0x48]
   14000209f:	mov    eax,ebx
   1400020a1:	mov    DWORD PTR [r13+0x0],0x1
   1400020a9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400020ae:	mov    rsi,QWORD PTR [rsp+0x68]
   1400020b3:	mov    rdi,QWORD PTR [rsp+0x70]
   1400020b8:	add    rsp,0x30
   1400020bc:	pop    r15
   1400020be:	pop    r14
   1400020c0:	pop    r13
   1400020c2:	pop    r12
   1400020c4:	pop    rbp
   1400020c5:	ret    
   1400020c6:	int3   
   1400020c7:	int3   
   1400020c8:	int3   
   1400020c9:	int3   
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	mov    rax,rsp
   1400020cf:	mov    QWORD PTR [rax+0x8],rbx
   1400020d3:	mov    QWORD PTR [rax+0x10],rsi
   1400020d7:	push   rdi
   1400020d8:	push   r14
   1400020da:	push   r15
   1400020dc:	sub    rsp,0x60
   1400020e0:	mov    r15,rdx
   1400020e3:	mov    r14,rcx
   1400020e6:	and    DWORD PTR [rax+0x20],0x0
   1400020ea:	and    DWORD PTR [rax+0x18],0x0
   1400020ee:	xor    ebx,ebx
   1400020f0:	mov    DWORD PTR [rax-0x38],ebx
   1400020f3:	xor    esi,esi
   1400020f5:	mov    QWORD PTR [rax-0x28],rsi
   1400020f9:	xor    edi,edi
   1400020fb:	mov    QWORD PTR [rax-0x20],rdi
   1400020ff:	cmp    WORD PTR [rcx],0x2a
   140002103:	jne    0x1400021e0
   140002109:	and    QWORD PTR [rax-0x30],rdi
   14000210d:	add    rcx,0x2
   140002111:	lea    rdx,[rax-0x30]
   140002115:	call   QWORD PTR [rip+0x5115]        # 0x140007230
   14000211b:	test   eax,eax
   14000211d:	je     0x1400021d1
   140002123:	lea    rax,[rsp+0x44]
   140002128:	mov    QWORD PTR [rsp+0x30],rax
   14000212d:	lea    rax,[rsp+0x90]
   140002135:	mov    QWORD PTR [rsp+0x28],rax
   14000213a:	and    QWORD PTR [rsp+0x20],rdi
   14000213f:	lea    r9,[rsp+0x98]
   140002147:	xor    r8d,r8d
   14000214a:	mov    rdx,QWORD PTR [rsp+0x48]
   14000214f:	xor    ecx,ecx
   140002151:	call   QWORD PTR [rip+0x5091]        # 0x1400071e8
   140002157:	call   QWORD PTR [rip+0x4ed3]        # 0x140007030
   14000215d:	cmp    eax,0x7a
   140002160:	je     0x140002180
   140002162:	mov    rcx,QWORD PTR [rsp+0x48]
   140002167:	call   QWORD PTR [rip+0x524b]        # 0x1400073b8
   14000216d:	test   al,al
   14000216f:	jne    0x140002180
   140002171:	mov    rcx,QWORD PTR [rsp+0x48]
   140002176:	call   QWORD PTR [rip+0x524c]        # 0x1400073c8
   14000217c:	test   al,al
   14000217e:	je     0x1400021d1
   140002180:	mov    rcx,QWORD PTR [rsp+0x48]
   140002185:	call   QWORD PTR [rip+0x4f2d]        # 0x1400070b8
   14000218b:	mov    rcx,rax
   14000218e:	call   QWORD PTR [rip+0x51a4]        # 0x140007338
   140002194:	mov    r14,rax
   140002197:	mov    QWORD PTR [r15],rax
   14000219a:	test   rax,rax
   14000219d:	je     0x1400021c8
   14000219f:	mov    rcx,QWORD PTR [rsp+0x48]
   1400021a4:	call   QWORD PTR [rip+0x4f0e]        # 0x1400070b8
   1400021aa:	mov    rcx,rax
   1400021ad:	mov    r8,QWORD PTR [rsp+0x48]
   1400021b2:	mov    rdx,r14
   1400021b5:	call   QWORD PTR [rip+0x5015]        # 0x1400071d0
   1400021bb:	mov    rcx,QWORD PTR [rsp+0x48]
   1400021c0:	call   QWORD PTR [rip+0x4eda]        # 0x1400070a0
   1400021c6:	jmp    0x1400021d1
   1400021c8:	mov    ebx,0x8
   1400021cd:	mov    DWORD PTR [rsp+0x40],ebx
   1400021d1:	cmp    QWORD PTR [r15],0x0
   1400021d5:	jne    0x1400022b6
   1400021db:	jmp    0x14000229f
   1400021e0:	lea    rax,[rsp+0x44]
   1400021e5:	mov    QWORD PTR [rsp+0x30],rax
   1400021ea:	lea    rax,[rsp+0x90]
   1400021f2:	mov    QWORD PTR [rsp+0x28],rax
   1400021f7:	and    QWORD PTR [rsp+0x20],0x0
   1400021fd:	lea    r9,[rsp+0x98]
   140002205:	xor    r8d,r8d
   140002208:	mov    rdx,rcx
   14000220b:	xor    ecx,ecx
   14000220d:	call   QWORD PTR [rip+0x4fe5]        # 0x1400071f8
   140002213:	test   eax,eax
   140002215:	jne    0x1400022ad
   14000221b:	call   QWORD PTR [rip+0x4e0f]        # 0x140007030
   140002221:	cmp    eax,0x7a
   140002224:	jne    0x14000229f
   140002226:	mov    ecx,DWORD PTR [rsp+0x98]
   14000222d:	call   QWORD PTR [rip+0x5105]        # 0x140007338
   140002233:	mov    rsi,rax
   140002236:	mov    QWORD PTR [rsp+0x50],rax
   14000223b:	mov    ecx,DWORD PTR [rsp+0x90]
   140002242:	add    rcx,rcx
   140002245:	call   QWORD PTR [rip+0x50ed]        # 0x140007338
   14000224b:	mov    rdi,rax
   14000224e:	mov    QWORD PTR [rsp+0x58],rax
   140002253:	test   rsi,rsi
   140002256:	je     0x140002298
   140002258:	test   rax,rax
   14000225b:	je     0x140002298
   14000225d:	lea    rax,[rsp+0x44]
   140002262:	mov    QWORD PTR [rsp+0x30],rax
   140002267:	lea    rax,[rsp+0x90]
   14000226f:	mov    QWORD PTR [rsp+0x28],rax
   140002274:	mov    QWORD PTR [rsp+0x20],rdi
   140002279:	lea    r9,[rsp+0x98]
   140002281:	mov    r8,rsi
   140002284:	mov    rdx,r14
   140002287:	xor    ecx,ecx
   140002289:	call   QWORD PTR [rip+0x4f69]        # 0x1400071f8
   14000228f:	test   eax,eax
   140002291:	je     0x14000229f
   140002293:	mov    QWORD PTR [r15],rsi
   140002296:	jmp    0x1400022b6
   140002298:	mov    ebx,0x8
   14000229d:	jmp    0x1400022b2
   14000229f:	call   QWORD PTR [rip+0x4d8b]        # 0x140007030
   1400022a5:	mov    ebx,eax
   1400022a7:	mov    DWORD PTR [rsp+0x40],eax
   1400022ab:	jmp    0x1400022b6
   1400022ad:	mov    ebx,0x54f
   1400022b2:	mov    DWORD PTR [rsp+0x40],ebx
   1400022b6:	test   ebx,ebx
   1400022b8:	je     0x1400022c3
   1400022ba:	mov    rcx,rsi
   1400022bd:	call   QWORD PTR [rip+0x4ffd]        # 0x1400072c0
   1400022c3:	test   rdi,rdi
   1400022c6:	je     0x1400022d1
   1400022c8:	mov    rcx,rdi
   1400022cb:	call   QWORD PTR [rip+0x4fef]        # 0x1400072c0
   1400022d1:	mov    eax,ebx
   1400022d3:	lea    r11,[rsp+0x60]
   1400022d8:	mov    rbx,QWORD PTR [r11+0x20]
   1400022dc:	mov    rsi,QWORD PTR [r11+0x28]
   1400022e0:	mov    rsp,r11
   1400022e3:	pop    r15
   1400022e5:	pop    r14
   1400022e7:	pop    rdi
   1400022e8:	ret    
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	mov    r11,rsp
   1400022f3:	mov    QWORD PTR [r11+0x10],rdx
   1400022f7:	push   rbx
   1400022f8:	push   rsi
   1400022f9:	push   rdi
   1400022fa:	push   r12
   1400022fc:	push   r13
   1400022fe:	push   r14
   140002300:	push   r15
   140002302:	sub    rsp,0x60
   140002306:	mov    r15,rdx
   140002309:	mov    r13,rcx
   14000230c:	xor    r12d,r12d
   14000230f:	mov    r14d,r12d
   140002312:	mov    QWORD PTR [r11-0x48],r12
   140002316:	mov    DWORD PTR [r11+0x18],r12d
   14000231a:	mov    esi,r12d
   14000231d:	mov    QWORD PTR [r11-0x40],r12
   140002321:	mov    QWORD PTR [r11-0x50],r12
   140002325:	mov    DWORD PTR [r11+0x20],r12d
   140002329:	mov    ebx,r12d
   14000232c:	lea    rax,[r11-0x54]
   140002330:	mov    QWORD PTR [r11-0x68],rax
   140002334:	lea    rax,[r11+0x20]
   140002338:	mov    QWORD PTR [r11-0x70],rax
   14000233c:	mov    QWORD PTR [r11-0x78],r12
   140002340:	lea    r9,[r11+0x18]
   140002344:	xor    r8d,r8d
   140002347:	mov    rdx,rcx
   14000234a:	xor    ecx,ecx
   14000234c:	call   QWORD PTR [rip+0x4e96]        # 0x1400071e8
   140002352:	test   eax,eax
   140002354:	jne    0x14000249b
   14000235a:	call   QWORD PTR [rip+0x4cd0]        # 0x140007030
   140002360:	cmp    eax,0x7a
   140002363:	jne    0x1400023dd
   140002365:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000236c:	add    rcx,rcx
   14000236f:	call   QWORD PTR [rip+0x4fc3]        # 0x140007338
   140002375:	mov    r14,rax
   140002378:	mov    QWORD PTR [rsp+0x50],rax
   14000237d:	mov    ecx,DWORD PTR [rsp+0xb8]
   140002384:	add    rcx,rcx
   140002387:	call   QWORD PTR [rip+0x4fab]        # 0x140007338
   14000238d:	mov    rsi,rax
   140002390:	mov    QWORD PTR [rsp+0x58],rax
   140002395:	test   r14,r14
   140002398:	je     0x140002494
   14000239e:	test   rax,rax
   1400023a1:	je     0x140002494
   1400023a7:	lea    rax,[rsp+0x44]
   1400023ac:	mov    QWORD PTR [rsp+0x30],rax
   1400023b1:	lea    rax,[rsp+0xb8]
   1400023b9:	mov    QWORD PTR [rsp+0x28],rax
   1400023be:	mov    QWORD PTR [rsp+0x20],rsi
   1400023c3:	lea    r9,[rsp+0xb0]
   1400023cb:	mov    r8,r14
   1400023ce:	mov    rdx,r13
   1400023d1:	xor    ecx,ecx
   1400023d3:	call   QWORD PTR [rip+0x4e0f]        # 0x1400071e8
   1400023d9:	test   eax,eax
   1400023db:	jne    0x1400023ee
   1400023dd:	call   QWORD PTR [rip+0x4c4d]        # 0x140007030
   1400023e3:	mov    ebx,eax
   1400023e5:	mov    DWORD PTR [rsp+0x40],eax
   1400023e9:	jmp    0x1400024a4
   1400023ee:	or     rdi,0xffffffffffffffff
   1400023f2:	mov    rax,rdi
   1400023f5:	inc    rax
   1400023f8:	cmp    WORD PTR [rsi+rax*2],r12w
   1400023fd:	jne    0x1400023f5
   1400023ff:	mov    rcx,rdi
   140002402:	inc    rcx
   140002405:	cmp    WORD PTR [r14+rcx*2],r12w
   14000240a:	jne    0x140002402
   14000240c:	add    eax,ecx
   14000240e:	lea    eax,[rax*2+0x4]
   140002415:	mov    r15d,eax
   140002418:	mov    ecx,eax
   14000241a:	call   QWORD PTR [rip+0x4f18]        # 0x140007338
   140002420:	mov    r12,rax
   140002423:	xor    ecx,ecx
   140002425:	test   rax,rax
   140002428:	jne    0x140002434
   14000242a:	mov    ebx,0x8
   14000242f:	jmp    0x140002504
   140002434:	mov    rax,rdi
   140002437:	inc    rax
   14000243a:	cmp    WORD PTR [rsi+rax*2],cx
   14000243e:	jne    0x140002437
   140002440:	shr    r15,1
   140002443:	mov    rcx,r12
   140002446:	mov    rdx,r15
   140002449:	test   rax,rax
   14000244c:	je     0x14000247b
   14000244e:	mov    r8,rsi
   140002451:	call   QWORD PTR [rip+0x4e59]        # 0x1400072b0
   140002457:	lea    r8,[rip+0x5012]        # 0x140007470
   14000245e:	mov    rdx,r15
   140002461:	mov    rcx,r12
   140002464:	call   QWORD PTR [rip+0x4ede]        # 0x140007348
   14000246a:	mov    r8,r14
   14000246d:	mov    rdx,r15
   140002470:	mov    rcx,r12
   140002473:	call   QWORD PTR [rip+0x4ecf]        # 0x140007348
   140002479:	jmp    0x140002484
   14000247b:	mov    r8,r14
   14000247e:	call   QWORD PTR [rip+0x4e2c]        # 0x1400072b0
   140002484:	mov    r15,QWORD PTR [rsp+0xa8]
   14000248c:	mov    QWORD PTR [r15],r12
   14000248f:	xor    r12d,r12d
   140002492:	jmp    0x1400024a8
   140002494:	mov    ebx,0x8
   140002499:	jmp    0x1400024a0
   14000249b:	mov    ebx,0x54f
   1400024a0:	mov    DWORD PTR [rsp+0x40],ebx
   1400024a4:	or     rdi,0xffffffffffffffff
   1400024a8:	cmp    ebx,0x534
   1400024ae:	jne    0x140002508
   1400024b0:	lea    rdx,[rsp+0x48]
   1400024b5:	mov    rcx,r13
   1400024b8:	call   QWORD PTR [rip+0x4d62]        # 0x140007220
   1400024be:	test   eax,eax
   1400024c0:	je     0x140002508
   1400024c2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400024c7:	inc    rdi
   1400024ca:	cmp    WORD PTR [rbx+rdi*2],r12w
   1400024cf:	jne    0x1400024c7
   1400024d1:	inc    rdi
   1400024d4:	mov    DWORD PTR [rsp+0xb0],edi
   1400024db:	mov    edi,edi
   1400024dd:	lea    rcx,[rdi+rdi*1]
   1400024e1:	call   QWORD PTR [rip+0x4e51]        # 0x140007338
   1400024e7:	mov    QWORD PTR [r15],rax
   1400024ea:	test   rax,rax
   1400024ed:	je     0x14000242a
   1400024f3:	mov    r8,rbx
   1400024f6:	mov    edx,edi
   1400024f8:	mov    rcx,rax
   1400024fb:	call   QWORD PTR [rip+0x4daf]        # 0x1400072b0
   140002501:	mov    ebx,r12d
   140002504:	mov    DWORD PTR [rsp+0x40],ebx
   140002508:	mov    rcx,r14
   14000250b:	call   QWORD PTR [rip+0x4daf]        # 0x1400072c0
   140002511:	mov    rcx,rsi
   140002514:	call   QWORD PTR [rip+0x4da6]        # 0x1400072c0
   14000251a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000251f:	call   QWORD PTR [rip+0x4b7b]        # 0x1400070a0
   140002525:	mov    eax,ebx
   140002527:	add    rsp,0x60
   14000252b:	pop    r15
   14000252d:	pop    r14
   14000252f:	pop    r13
   140002531:	pop    r12
   140002533:	pop    rdi
   140002534:	pop    rsi
   140002535:	pop    rbx
   140002536:	ret    
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	rex push rbx
   140002542:	push   rsi
   140002543:	push   rdi
   140002544:	sub    rsp,0x50
   140002548:	mov    QWORD PTR [rsp+0x30],rsp
   14000254d:	mov    rbx,rcx
   140002550:	and    QWORD PTR [rsp+0x38],0x0
   140002556:	xor    edi,edi
   140002558:	mov    QWORD PTR [rsp+0x40],rdi
   14000255d:	call   QWORD PTR [rip+0x4bbd]        # 0x140007120
   140002563:	mov    rcx,rax
   140002566:	lea    r8,[rsp+0x80]
   14000256e:	lea    edx,[rdi+0x28]
   140002571:	call   QWORD PTR [rip+0x4b91]        # 0x140007108
   140002577:	test   eax,eax
   140002579:	jne    0x140002586
   14000257b:	call   QWORD PTR [rip+0x4aaf]        # 0x140007030
   140002581:	jmp    0x1400026ce
   140002586:	and    DWORD PTR [rsp+0x78],0x0
   14000258b:	lea    r8,[rsp+0x88]
   140002593:	mov    rdx,rbx
   140002596:	xor    ecx,ecx
   140002598:	call   QWORD PTR [rip+0x4c52]        # 0x1400071f0
   14000259e:	test   eax,eax
   1400025a0:	jne    0x1400025bf
   1400025a2:	lea    rdx,[rip+0xc]        # 0x1400025b5
   1400025a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400025ae:	call   0x140006356
   1400025b3:	nop
   1400025b4:	nop
   1400025b5:	mov    eax,0x54f
   1400025ba:	jmp    0x1400026ce
   1400025bf:	mov    edx,0x10
   1400025c4:	lea    ecx,[rdx-0xf]
   1400025c7:	call   QWORD PTR [rip+0x4ceb]        # 0x1400072b8
   1400025cd:	mov    rbx,rax
   1400025d0:	mov    QWORD PTR [rsp+0x38],rax
   1400025d5:	test   rax,rax
   1400025d8:	jne    0x1400025f7
   1400025da:	lea    rdx,[rip+0xc]        # 0x1400025ed
   1400025e1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400025e6:	call   0x140006356
   1400025eb:	nop
   1400025ec:	nop
   1400025ed:	mov    eax,0x8
   1400025f2:	jmp    0x1400026ce
   1400025f7:	mov    DWORD PTR [rax],0x1
   1400025fd:	mov    rax,QWORD PTR [rsp+0x88]
   140002605:	mov    QWORD PTR [rbx+0x4],rax
   140002609:	mov    DWORD PTR [rbx+0xc],0x2
   140002610:	lea    rax,[rsp+0x78]
   140002615:	mov    QWORD PTR [rsp+0x28],rax
   14000261a:	and    QWORD PTR [rsp+0x20],0x0
   140002620:	xor    r9d,r9d
   140002623:	mov    r8,rbx
   140002626:	xor    edx,edx
   140002628:	mov    rcx,QWORD PTR [rsp+0x80]
   140002630:	call   QWORD PTR [rip+0x4b52]        # 0x140007188
   140002636:	call   QWORD PTR [rip+0x49f4]        # 0x140007030
   14000263c:	call   QWORD PTR [rip+0x49ee]        # 0x140007030
   140002642:	mov    esi,eax
   140002644:	cmp    eax,0x7a
   140002647:	jne    0x1400026ac
   140002649:	mov    edx,DWORD PTR [rsp+0x78]
   14000264d:	lea    ecx,[rax-0x79]
   140002650:	call   QWORD PTR [rip+0x4c62]        # 0x1400072b8
   140002656:	mov    rdi,rax
   140002659:	mov    QWORD PTR [rsp+0x40],rax
   14000265e:	test   rax,rax
   140002661:	jne    0x14000267d
   140002663:	lea    rdx,[rip+0xc]        # 0x140002676
   14000266a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000266f:	call   0x140006356
   140002674:	nop
   140002675:	nop
   140002676:	mov    eax,0x8
   14000267b:	jmp    0x1400026ce
   14000267d:	lea    rax,[rsp+0x78]
   140002682:	mov    QWORD PTR [rsp+0x28],rax
   140002687:	mov    QWORD PTR [rsp+0x20],rdi
   14000268c:	mov    r9d,DWORD PTR [rsp+0x78]
   140002691:	mov    r8,rbx
   140002694:	xor    edx,edx
   140002696:	mov    rcx,QWORD PTR [rsp+0x80]
   14000269e:	call   QWORD PTR [rip+0x4ae4]        # 0x140007188
   1400026a4:	call   QWORD PTR [rip+0x4986]        # 0x140007030
   1400026aa:	mov    esi,eax
   1400026ac:	mov    rcx,QWORD PTR [rsp+0x80]
   1400026b4:	call   QWORD PTR [rip+0x49c6]        # 0x140007080
   1400026ba:	mov    rcx,rbx
   1400026bd:	call   QWORD PTR [rip+0x4bfd]        # 0x1400072c0
   1400026c3:	mov    rcx,rdi
   1400026c6:	call   QWORD PTR [rip+0x4bf4]        # 0x1400072c0
   1400026cc:	mov    eax,esi
   1400026ce:	add    rsp,0x50
   1400026d2:	pop    rdi
   1400026d3:	pop    rsi
   1400026d4:	pop    rbx
   1400026d5:	ret    
   1400026d6:	int3   
   1400026d7:	int3   
   1400026d8:	int3   
   1400026d9:	int3   
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	mov    rax,rsp
   1400026df:	mov    QWORD PTR [rax+0x8],rbx
   1400026e3:	mov    QWORD PTR [rax+0x10],rbp
   1400026e7:	mov    QWORD PTR [rax+0x18],rsi
   1400026eb:	mov    QWORD PTR [rax+0x20],rdi
   1400026ef:	push   r12
   1400026f1:	push   r14
   1400026f3:	push   r15
   1400026f5:	sub    rsp,0x20
   1400026f9:	mov    r15,rcx
   1400026fc:	mov    r14d,0x10
   140002702:	xor    r12d,r12d
   140002705:	mov    ebp,r12d
   140002708:	lea    ecx,[r14+0x10]
   14000270c:	call   QWORD PTR [rip+0x4c26]        # 0x140007338
   140002712:	mov    rdi,rax
   140002715:	test   rax,rax
   140002718:	jne    0x140002721
   14000271a:	xor    eax,eax
   14000271c:	jmp    0x1400027d4
   140002721:	mov    rsi,r12
   140002724:	mov    rcx,r15
   140002727:	call   QWORD PTR [rip+0x4b23]        # 0x140007250
   14000272d:	movzx  ebx,ax
   140002730:	mov    eax,DWORD PTR [rip+0x78ea]        # 0x14000a020
   140002736:	cmp    eax,0xffffffff
   140002739:	jne    0x14000276d
   14000273b:	mov    eax,0xfffe
   140002740:	cmp    bx,ax
   140002743:	jne    0x140002751
   140002745:	mov    DWORD PTR [rip+0x78d1],0x1        # 0x14000a020
   14000274f:	jmp    0x140002724
   140002751:	mov    eax,0xfeff
   140002756:	cmp    bx,ax
   140002759:	jne    0x140002764
   14000275b:	mov    DWORD PTR [rip+0x78be],r12d        # 0x14000a020
   140002762:	jmp    0x140002724
   140002764:	mov    eax,r12d
   140002767:	mov    DWORD PTR [rip+0x78b3],eax        # 0x14000a020
   14000276d:	test   eax,eax
   14000276f:	je     0x140002785
   140002771:	movzx  ecx,bx
   140002774:	movzx  eax,bx
   140002777:	shr    cx,0x8
   14000277b:	movzx  ebx,cx
   14000277e:	shl    ax,0x8
   140002782:	xor    bx,ax
   140002785:	cmp    bx,0xd
   140002789:	je     0x1400027c8
   14000278b:	mov    eax,0xffff
   140002790:	cmp    bx,ax
   140002793:	je     0x14000279b
   140002795:	cmp    bx,0xa
   140002799:	jne    0x14000279e
   14000279b:	mov    ebx,r12d
   14000279e:	cmp    ebp,r14d
   1400027a1:	jne    0x1400027be
   1400027a3:	add    r14d,0x10
   1400027a7:	mov    rcx,rdi
   1400027aa:	movsxd rdx,r14d
   1400027ad:	add    rdx,rdx
   1400027b0:	call   QWORD PTR [rip+0x4b8a]        # 0x140007340
   1400027b6:	test   rax,rax
   1400027b9:	je     0x1400027f3
   1400027bb:	mov    rdi,rax
   1400027be:	inc    ebp
   1400027c0:	mov    WORD PTR [rsi+rdi*1],bx
   1400027c4:	add    rsi,0x2
   1400027c8:	test   bx,bx
   1400027cb:	jne    0x140002724
   1400027d1:	mov    rax,rdi
   1400027d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400027d9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400027de:	mov    rsi,QWORD PTR [rsp+0x50]
   1400027e3:	mov    rdi,QWORD PTR [rsp+0x58]
   1400027e8:	add    rsp,0x20
   1400027ec:	pop    r15
   1400027ee:	pop    r14
   1400027f0:	pop    r12
   1400027f2:	ret    
   1400027f3:	mov    rcx,rdi
   1400027f6:	call   QWORD PTR [rip+0x4ac4]        # 0x1400072c0
   1400027fc:	jmp    0x14000271a
   140002801:	int3   
   140002802:	int3   
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	mov    rax,rsp
   14000280b:	mov    QWORD PTR [rax+0x8],rbx
   14000280f:	mov    QWORD PTR [rax+0x10],rsi
   140002813:	mov    QWORD PTR [rax+0x18],rdi
   140002817:	push   rbp
   140002818:	push   r14
   14000281a:	push   r15
   14000281c:	lea    rbp,[rax-0x598]
   140002823:	sub    rsp,0x680
   14000282a:	xor    r15d,r15d
   14000282d:	mov    edi,ecx
   14000282f:	mov    r8d,r15d
   140002832:	mov    DWORD PTR [rbp+0x250],r15d
   140002839:	mov    ebx,r15d
   14000283c:	mov    esi,r15d
   14000283f:	mov    DWORD PTR [rsp+0x20],ebx
   140002843:	mov    ecx,r15d
   140002846:	lea    r14d,[r15+0x1]
   14000284a:	cmp    dx,r14w
   14000284e:	sete   r8b
   140002852:	test   r8d,r8d
   140002855:	je     0x14000285b
   140002857:	bts    edi,0x14
   14000285b:	cmp    DWORD PTR [rip+0x824e],r15d        # 0x14000aab0
   140002862:	jne    0x140002ad3
   140002868:	cmp    dx,r14w
   14000286c:	jbe    0x140002924
   140002872:	cmp    dx,0x14
   140002876:	je     0x140002924
   14000287c:	cmp    dx,0x11
   140002880:	jne    0x140002ad3
   140002886:	test   r14b,dil
   140002889:	je     0x1400028ab
   14000288b:	lea    rax,[rip+0x5056]        # 0x1400078e8
   140002892:	mov    DWORD PTR [rbp+0x250],r14d
   140002899:	mov    ebx,r14d
   14000289c:	mov    QWORD PTR [rsp+0x28],rax
   1400028a1:	mov    DWORD PTR [rsp+0x20],ebx
   1400028a5:	mov    esi,r14d
   1400028a8:	mov    ecx,r14d
   1400028ab:	test   dil,0x2
   1400028af:	je     0x1400028e8
   1400028b1:	movsxd rax,esi
   1400028b4:	lea    rdx,[rip+0x504d]        # 0x140007908
   1400028bb:	mov    QWORD PTR [rbp+rax*8+0x258],rdx
   1400028c3:	mov    esi,DWORD PTR [rbp+0x250]
   1400028c9:	movsxd rax,ebx
   1400028cc:	add    esi,r14d
   1400028cf:	mov    DWORD PTR [rbp+0x250],esi
   1400028d5:	mov    QWORD PTR [rsp+rax*8+0x28],rdx
   1400028da:	mov    ebx,DWORD PTR [rsp+0x20]
   1400028de:	add    ebx,r14d
   1400028e1:	mov    DWORD PTR [rsp+0x20],ebx
   1400028e5:	or     ecx,0x2
   1400028e8:	test   dil,0x4
   1400028ec:	je     0x140002acf
   1400028f2:	movsxd rax,esi
   1400028f5:	lea    rdx,[rip+0x5030]        # 0x14000792c
   1400028fc:	mov    QWORD PTR [rbp+rax*8+0x258],rdx
   140002904:	mov    esi,DWORD PTR [rbp+0x250]
   14000290a:	movsxd rax,ebx
   14000290d:	add    esi,r14d
   140002910:	mov    QWORD PTR [rsp+rax*8+0x28],rdx
   140002915:	mov    ebx,DWORD PTR [rsp+0x20]
   140002919:	add    ebx,r14d
   14000291c:	or     ecx,0x4
   14000291f:	jmp    0x140002ac5
   140002924:	cmp    edi,0x1f01ff
   14000292a:	je     0x140002934
   14000292c:	cmp    edi,0x10000000
   140002932:	jne    0x140002965
   140002934:	lea    r8,[rip+0x4b5d]        # 0x140007498
   14000293b:	mov    DWORD PTR [rbp+0x250],r14d
   140002942:	test   dx,dx
   140002945:	lea    rax,[rip+0x500c]        # 0x140007958
   14000294c:	mov    ebx,r14d
   14000294f:	mov    esi,r14d
   140002952:	cmove  rax,r8
   140002956:	mov    DWORD PTR [rsp+0x20],ebx
   14000295a:	mov    QWORD PTR [rsp+0x28],rax
   14000295f:	mov    r8d,r15d
   140002962:	mov    edi,r15d
   140002965:	mov    edx,0x1301bf
   14000296a:	lea    r10,[rip+0x4b2b]        # 0x14000749c
   140002971:	mov    eax,edi
   140002973:	and    eax,edx
   140002975:	cmp    eax,edx
   140002977:	jne    0x1400029ac
   140002979:	movsxd rax,esi
   14000297c:	mov    QWORD PTR [rbp+rax*8+0x258],r10
   140002984:	mov    esi,DWORD PTR [rbp+0x250]
   14000298a:	movsxd rax,ebx
   14000298d:	add    esi,r14d
   140002990:	mov    DWORD PTR [rbp+0x250],esi
   140002996:	mov    QWORD PTR [rsp+rax*8+0x28],r10
   14000299b:	mov    ebx,DWORD PTR [rsp+0x20]
   14000299f:	add    ebx,r14d
   1400029a2:	mov    DWORD PTR [rsp+0x20],ebx
   1400029a6:	and    edi,0xffecfe40
   1400029ac:	mov    edx,0x1200a9
   1400029b1:	mov    eax,edi
   1400029b3:	and    eax,edx
   1400029b5:	cmp    eax,edx
   1400029b7:	jne    0x1400029c2
   1400029b9:	lea    rcx,[rip+0x4ae0]        # 0x1400074a0
   1400029c0:	jmp    0x1400029d6
   1400029c2:	mov    edx,0x120089
   1400029c7:	mov    eax,edi
   1400029c9:	and    eax,edx
   1400029cb:	cmp    eax,edx
   1400029cd:	jne    0x140002a05
   1400029cf:	lea    rcx,[rip+0x4ad2]        # 0x1400074a8
   1400029d6:	movsxd rax,esi
   1400029d9:	mov    QWORD PTR [rbp+rax*8+0x258],rcx
   1400029e1:	mov    esi,DWORD PTR [rbp+0x250]
   1400029e7:	movsxd rax,ebx
   1400029ea:	add    esi,r14d
   1400029ed:	mov    DWORD PTR [rbp+0x250],esi
   1400029f3:	mov    QWORD PTR [rsp+rax*8+0x28],rcx
   1400029f8:	mov    ecx,edx
   1400029fa:	mov    ebx,DWORD PTR [rsp+0x20]
   1400029fe:	add    ebx,r14d
   140002a01:	mov    DWORD PTR [rsp+0x20],ebx
   140002a05:	mov    r9d,0x100116
   140002a0b:	mov    eax,edi
   140002a0d:	and    eax,r9d
   140002a10:	cmp    eax,r9d
   140002a13:	jne    0x140002a4c
   140002a15:	movsxd rax,esi
   140002a18:	lea    rdx,[rip+0x4a8d]        # 0x1400074ac
   140002a1f:	mov    QWORD PTR [rbp+rax*8+0x258],rdx
   140002a27:	mov    esi,DWORD PTR [rbp+0x250]
   140002a2d:	movsxd rax,ebx
   140002a30:	add    esi,r14d
   140002a33:	mov    DWORD PTR [rbp+0x250],esi
   140002a39:	mov    QWORD PTR [rsp+rax*8+0x28],rdx
   140002a3e:	mov    ebx,DWORD PTR [rsp+0x20]
   140002a42:	add    ebx,r14d
   140002a45:	mov    DWORD PTR [rsp+0x20],ebx
   140002a49:	or     ecx,r9d
   140002a4c:	mov    edx,0xe0010000
   140002a51:	mov    eax,edi
   140002a53:	and    eax,edx
   140002a55:	cmp    eax,edx
   140002a57:	jne    0x140002a88
   140002a59:	movsxd rax,esi
   140002a5c:	mov    QWORD PTR [rbp+rax*8+0x258],r10
   140002a64:	mov    esi,DWORD PTR [rbp+0x250]
   140002a6a:	movsxd rax,ebx
   140002a6d:	add    esi,r14d
   140002a70:	mov    DWORD PTR [rbp+0x250],esi
   140002a76:	mov    QWORD PTR [rsp+rax*8+0x28],r10
   140002a7b:	mov    ebx,DWORD PTR [rsp+0x20]
   140002a7f:	add    ebx,r14d
   140002a82:	mov    DWORD PTR [rsp+0x20],ebx
   140002a86:	or     ecx,edx
   140002a88:	mov    r9d,0x110000
   140002a8e:	mov    eax,edi
   140002a90:	and    eax,r9d
   140002a93:	cmp    eax,r9d
   140002a96:	jne    0x140002acf
   140002a98:	movsxd rax,esi
   140002a9b:	lea    rdx,[rip+0x4a0e]        # 0x1400074b0
   140002aa2:	mov    QWORD PTR [rbp+rax*8+0x258],rdx
   140002aaa:	mov    esi,DWORD PTR [rbp+0x250]
   140002ab0:	movsxd rax,ebx
   140002ab3:	add    esi,r14d
   140002ab6:	mov    QWORD PTR [rsp+rax*8+0x28],rdx
   140002abb:	mov    ebx,DWORD PTR [rsp+0x20]
   140002abf:	add    ebx,r14d
   140002ac2:	or     ecx,r9d
   140002ac5:	mov    DWORD PTR [rbp+0x250],esi
   140002acb:	mov    DWORD PTR [rsp+0x20],ebx
   140002acf:	not    ecx
   140002ad1:	and    edi,ecx
   140002ad3:	test   r8d,r8d
   140002ad6:	je     0x140002aef
   140002ad8:	mov    rdx,QWORD PTR [rip+0x7fb9]        # 0x14000aa98
   140002adf:	xor    r9d,r9d
   140002ae2:	mov    r8d,0x271b
   140002ae8:	xor    ecx,ecx
   140002aea:	call   0x140001160
   140002aef:	test   edi,edi
   140002af1:	je     0x140002b4a
   140002af3:	lea    r8,[rip+0x775e]        # 0x14000a258
   140002afa:	mov    edx,DWORD PTR [r8-0x8]
   140002afe:	test   edx,edx
   140002b00:	je     0x140002b4a
   140002b02:	mov    eax,edx
   140002b04:	and    eax,edi
   140002b06:	cmp    eax,edx
   140002b08:	jne    0x140002b42
   140002b0a:	mov    rax,QWORD PTR [r8]
   140002b0d:	not    edx
   140002b0f:	movsxd rcx,esi
   140002b12:	mov    QWORD PTR [rbp+rcx*8+0x258],rax
   140002b1a:	mov    esi,DWORD PTR [rbp+0x250]
   140002b20:	mov    rax,QWORD PTR [r8+0x8]
   140002b24:	add    esi,r14d
   140002b27:	movsxd rcx,ebx
   140002b2a:	mov    DWORD PTR [rbp+0x250],esi
   140002b30:	mov    QWORD PTR [rsp+rcx*8+0x28],rax
   140002b35:	mov    ebx,DWORD PTR [rsp+0x20]
   140002b39:	add    ebx,r14d
   140002b3c:	mov    DWORD PTR [rsp+0x20],ebx
   140002b40:	and    edi,edx
   140002b42:	add    r8,0x18
   140002b46:	test   edi,edi
   140002b48:	jne    0x140002afa
   140002b4a:	test   ebx,ebx
   140002b4c:	je     0x140002bbc
   140002b4e:	mov    rcx,QWORD PTR [rip+0x7f43]        # 0x14000aa98
   140002b55:	lea    rdx,[rip+0x4e00]        # 0x14000795c
   140002b5c:	call   0x140001008
   140002b61:	mov    rdx,QWORD PTR [rsp+0x28]
   140002b66:	mov    rcx,QWORD PTR [rip+0x7f2b]        # 0x14000aa98
   140002b6d:	call   0x140001008
   140002b72:	cmp    ebx,r14d
   140002b75:	jle    0x140002ba9
   140002b77:	lea    rdi,[rsp+0x30]
   140002b7c:	dec    ebx
   140002b7e:	mov    rcx,QWORD PTR [rip+0x7f13]        # 0x14000aa98
   140002b85:	lea    rdx,[rip+0x4dd4]        # 0x140007960
   140002b8c:	call   0x140001008
   140002b91:	mov    rdx,QWORD PTR [rdi]
   140002b94:	mov    rcx,QWORD PTR [rip+0x7efd]        # 0x14000aa98
   140002b9b:	call   0x140001008
   140002ba0:	lea    rdi,[rdi+0x8]
   140002ba4:	sub    rbx,r14
   140002ba7:	jne    0x140002b7e
   140002ba9:	mov    rcx,QWORD PTR [rip+0x7ee8]        # 0x14000aa98
   140002bb0:	lea    rdx,[rip+0x4dad]        # 0x140007964
   140002bb7:	call   0x140001008
   140002bbc:	lea    r11,[rsp+0x680]
   140002bc4:	mov    rbx,QWORD PTR [r11+0x20]
   140002bc8:	mov    rsi,QWORD PTR [r11+0x28]
   140002bcc:	mov    rdi,QWORD PTR [r11+0x30]
   140002bd0:	mov    rsp,r11
   140002bd3:	pop    r15
   140002bd5:	pop    r14
   140002bd7:	pop    rbp
   140002bd8:	ret    
   140002bd9:	int3   
   140002bda:	int3   
   140002bdb:	int3   
   140002bdc:	int3   
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	mov    QWORD PTR [rsp+0x10],rbx
   140002be5:	push   rdi
   140002be6:	sub    rsp,0x20
   140002bea:	mov    rbx,rcx
   140002bed:	add    rcx,0x8
   140002bf1:	call   QWORD PTR [rip+0x45d1]        # 0x1400071c8
   140002bf7:	test   eax,eax
   140002bf9:	jne    0x140002c03
   140002bfb:	mov    r8d,0x539
   140002c01:	jmp    0x140002c4f
   140002c03:	and    QWORD PTR [rsp+0x30],0x0
   140002c09:	lea    rdx,[rsp+0x30]
   140002c0e:	lea    rcx,[rbx+0x8]
   140002c12:	call   0x1400022f0
   140002c17:	test   eax,eax
   140002c19:	jne    0x140002c4c
   140002c1b:	mov    rdx,QWORD PTR [rsp+0x30]
   140002c20:	mov    rcx,QWORD PTR [rip+0x7e71]        # 0x14000aa98
   140002c27:	call   0x140001008
   140002c2c:	mov    rcx,QWORD PTR [rip+0x7e65]        # 0x14000aa98
   140002c33:	lea    rdx,[rip+0x4d2e]        # 0x140007968
   140002c3a:	call   0x140001008
   140002c3f:	mov    rcx,QWORD PTR [rsp+0x30]
   140002c44:	call   QWORD PTR [rip+0x4676]        # 0x1400072c0
   140002c4a:	jmp    0x140002c5d
   140002c4c:	mov    r8d,eax
   140002c4f:	mov    rdx,QWORD PTR [rip+0x7e4a]        # 0x14000aaa0
   140002c56:	xor    ecx,ecx
   140002c58:	call   0x140001160
   140002c5d:	test   BYTE PTR [rbx+0x1],0x10
   140002c61:	je     0x140002c76
   140002c63:	mov    rcx,QWORD PTR [rip+0x7e2e]        # 0x14000aa98
   140002c6a:	lea    rdx,[rip+0x4cff]        # 0x140007970
   140002c71:	call   0x140001008
   140002c76:	test   BYTE PTR [rbx+0x1],0x1
   140002c7a:	je     0x140002c8f
   140002c7c:	mov    rcx,QWORD PTR [rip+0x7e15]        # 0x14000aa98
   140002c83:	lea    rdx,[rip+0x48ce]        # 0x140007558
   140002c8a:	call   0x140001008
   140002c8f:	test   BYTE PTR [rbx+0x1],0x2
   140002c93:	je     0x140002ca8
   140002c95:	mov    rcx,QWORD PTR [rip+0x7dfc]        # 0x14000aa98
   140002c9c:	lea    rdx,[rip+0x48c5]        # 0x140007568
   140002ca3:	call   0x140001008
   140002ca8:	test   BYTE PTR [rbx+0x1],0x4
   140002cac:	je     0x140002cc1
   140002cae:	mov    rcx,QWORD PTR [rip+0x7de3]        # 0x14000aa98
   140002cb5:	lea    rdx,[rip+0x48bc]        # 0x140007578
   140002cbc:	call   0x140001008
   140002cc1:	test   BYTE PTR [rbx+0x1],0x8
   140002cc5:	je     0x140002cda
   140002cc7:	mov    rcx,QWORD PTR [rip+0x7dca]        # 0x14000aa98
   140002cce:	lea    rdx,[rip+0x48b3]        # 0x140007588
   140002cd5:	call   0x140001008
   140002cda:	movzx  edx,BYTE PTR [rbx]
   140002cdd:	mov    ecx,DWORD PTR [rbx+0x4]
   140002ce0:	mov    rbx,QWORD PTR [rsp+0x38]
   140002ce5:	add    rsp,0x20
   140002ce9:	pop    rdi
   140002cea:	jmp    0x140002808
   140002cef:	int3   
   140002cf0:	int3   
   140002cf1:	int3   
   140002cf2:	int3   
   140002cf3:	int3   
   140002cf4:	int3   
   140002cf5:	int3   
   140002cf6:	int3   
   140002cf7:	int3   
   140002cf8:	rex push rbp
   140002cfa:	push   rbx
   140002cfb:	push   rsi
   140002cfc:	push   rdi
   140002cfd:	lea    rbp,[rsp-0x1d8]
   140002d05:	sub    rsp,0x2d8
   140002d0c:	mov    rax,QWORD PTR [rip+0x72f5]        # 0x14000a008
   140002d13:	xor    rax,rsp
   140002d16:	mov    QWORD PTR [rbp+0x1c0],rax
   140002d1d:	mov    rax,QWORD PTR [rbp+0x220]
   140002d24:	mov    rsi,rdx
   140002d27:	mov    QWORD PTR [rsp+0x60],rax
   140002d2c:	mov    edi,r8d
   140002d2f:	xor    eax,eax
   140002d31:	mov    QWORD PTR [rsp+0x68],rcx
   140002d36:	mov    rcx,rsi
   140002d39:	mov    QWORD PTR [rsp+0x58],r9
   140002d3e:	mov    DWORD PTR [rsp+0x38],eax
   140002d42:	lea    edx,[rax+0x5c]
   140002d45:	call   QWORD PTR [rip+0x451d]        # 0x140007268
   140002d4b:	mov    rbx,rax
   140002d4e:	test   rax,rax
   140002d51:	jne    0x140002d6c
   140002d53:	lea    edx,[rax+0x3a]
   140002d56:	mov    rcx,rsi
   140002d59:	call   QWORD PTR [rip+0x4509]        # 0x140007268
   140002d5f:	mov    rbx,rax
   140002d62:	test   rax,rax
   140002d65:	jne    0x140002d6c
   140002d67:	mov    rbx,rsi
   140002d6a:	jmp    0x140002d70
   140002d6c:	add    rbx,0x2
   140002d70:	mov    edx,0x3f
   140002d75:	mov    QWORD PTR [rsp+0x30],rbx
   140002d7a:	mov    rcx,rbx
   140002d7d:	call   QWORD PTR [rip+0x4515]        # 0x140007298
   140002d83:	test   rax,rax
   140002d86:	jne    0x140002f14
   140002d8c:	lea    edx,[rax+0x2a]
   140002d8f:	mov    rcx,rbx
   140002d92:	call   QWORD PTR [rip+0x44d0]        # 0x140007268
   140002d98:	test   rax,rax
   140002d9b:	jne    0x140002f14
   140002da1:	mov    rcx,rsi
   140002da4:	call   QWORD PTR [rip+0x4296]        # 0x140007040
   140002daa:	cmp    eax,0xffffffff
   140002dad:	jne    0x140002e1f
   140002daf:	call   QWORD PTR [rip+0x427b]        # 0x140007030
   140002db5:	mov    DWORD PTR [rsp+0x30],eax
   140002db9:	add    eax,0xfffffffe
   140002dbc:	cmp    eax,0x1
   140002dbf:	ja     0x140002dd2
   140002dc1:	test   dil,0x10
   140002dc5:	je     0x140002dd2
   140002dc7:	xor    ecx,ecx
   140002dc9:	mov    DWORD PTR [rsp+0x38],ecx
   140002dcd:	jmp    0x1400030a3
   140002dd2:	mov    rcx,QWORD PTR [rip+0x7cc7]        # 0x14000aaa0
   140002dd9:	mov    rdx,rsi
   140002ddc:	call   0x140001008
   140002de1:	mov    rcx,QWORD PTR [rip+0x7cb8]        # 0x14000aaa0
   140002de8:	lea    rdx,[rip+0x46a1]        # 0x140007490
   140002def:	call   0x140001008
   140002df4:	mov    ebx,DWORD PTR [rsp+0x30]
   140002df8:	mov    ecx,edi
   140002dfa:	mov    rdx,QWORD PTR [rip+0x7c9f]        # 0x14000aaa0
   140002e01:	mov    r8d,ebx
   140002e04:	call   0x140001160
   140002e09:	inc    DWORD PTR [rip+0x7c9d]        # 0x14000aaac
   140002e0f:	xor    eax,eax
   140002e11:	and    dil,0x20
   140002e15:	cmovne ebx,eax
   140002e18:	mov    eax,ebx
   140002e1a:	jmp    0x140003325
   140002e1f:	mov    rcx,QWORD PTR [rsp+0x58]
   140002e24:	and    eax,0x10
   140002e27:	mov    DWORD PTR [rsp+0x30],eax
   140002e2b:	call   QWORD PTR [rip+0x45a7]        # 0x1400073d8
   140002e31:	mov    rax,QWORD PTR [rsp+0x60]
   140002e36:	mov    r9d,edi
   140002e39:	mov    r8d,DWORD PTR [rsp+0x30]
   140002e3e:	mov    rcx,rsi
   140002e41:	mov    rdx,QWORD PTR [rsp+0x68]
   140002e46:	mov    QWORD PTR [rsp+0x20],rax
   140002e4b:	call   QWORD PTR [rsp+0x58]
   140002e4f:	xor    ecx,ecx
   140002e51:	mov    DWORD PTR [rsp+0x38],eax
   140002e55:	test   eax,eax
   140002e57:	jne    0x140003325
   140002e5d:	test   dil,0x10
   140002e61:	je     0x140003325
   140002e67:	cmp    DWORD PTR [rsp+0x30],ecx
   140002e6b:	je     0x1400030a3
   140002e71:	or     rax,0xffffffffffffffff
   140002e75:	inc    rax
   140002e78:	cmp    WORD PTR [rsi+rax*2],cx
   140002e7c:	jne    0x140002e75
   140002e7e:	add    eax,0x3
   140002e81:	cmp    eax,0x7fffffff
   140002e86:	ja     0x140003320
   140002e8c:	lea    rdx,[rax+rax*1]
   140002e90:	mov    QWORD PTR [rsp+0x50],rax
   140002e95:	call   QWORD PTR [rip+0x44a5]        # 0x140007340
   140002e9b:	mov    rbx,rax
   140002e9e:	test   rax,rax
   140002ea1:	je     0x140003320
   140002ea7:	mov    r8,rsi
   140002eaa:	mov    rcx,rax
   140002ead:	mov    rsi,QWORD PTR [rsp+0x50]
   140002eb2:	mov    rdx,rsi
   140002eb5:	call   QWORD PTR [rip+0x43f5]        # 0x1400072b0
   140002ebb:	or     rax,0xffffffffffffffff
   140002ebf:	xor    ecx,ecx
   140002ec1:	inc    rax
   140002ec4:	cmp    WORD PTR [rbx+rax*2],cx
   140002ec8:	jne    0x140002ec1
   140002eca:	mov    ecx,0x5c
   140002ecf:	lea    r8,[rip+0x4aa2]        # 0x140007978
   140002ed6:	cmp    WORD PTR [rbx+rax*2-0x2],cx
   140002edb:	mov    rdx,rsi
   140002ede:	mov    rcx,rbx
   140002ee1:	je     0x140002eea
   140002ee3:	lea    r8,[rip+0x4a92]        # 0x14000797c
   140002eea:	call   QWORD PTR [rip+0x4458]        # 0x140007348
   140002ef0:	mov    rax,QWORD PTR [rsp+0x60]
   140002ef5:	mov    r8d,edi
   140002ef8:	mov    r9,QWORD PTR [rsp+0x58]
   140002efd:	mov    rdx,rbx
   140002f00:	mov    rcx,QWORD PTR [rsp+0x68]
   140002f05:	mov    QWORD PTR [rsp+0x20],rax
   140002f0a:	call   0x140002cf8
   140002f0f:	jmp    0x140003325
   140002f14:	lea    rdx,[rsp+0x70]
   140002f19:	mov    rcx,rsi
   140002f1c:	call   QWORD PTR [rip+0x4136]        # 0x140007058
   140002f22:	mov    QWORD PTR [rsp+0x40],rax
   140002f27:	mov    rcx,rax
   140002f2a:	cmp    rax,0xffffffffffffffff
   140002f2e:	jne    0x140002f5b
   140002f30:	call   QWORD PTR [rip+0x40fa]        # 0x140007030
   140002f36:	mov    DWORD PTR [rsp+0x30],eax
   140002f3a:	add    eax,0xfffffffe
   140002f3d:	cmp    eax,0x1
   140002f40:	ja     0x140002dd2
   140002f46:	test   dil,0x10
   140002f4a:	je     0x140002dd2
   140002f50:	xor    eax,eax
   140002f52:	mov    DWORD PTR [rsp+0x38],eax
   140002f56:	jmp    0x140003099
   140002f5b:	movzx  edx,WORD PTR [rbp-0x64]
   140002f5f:	cmp    dx,WORD PTR [rip+0x4a1e]        # 0x140007984
   140002f66:	movzx  eax,WORD PTR [rbp-0x62]
   140002f6a:	jne    0x140002f79
   140002f6c:	cmp    ax,WORD PTR [rip+0x4a13]        # 0x140007986
   140002f73:	je     0x140003065
   140002f79:	cmp    dx,WORD PTR [rip+0x4a08]        # 0x140007988
   140002f80:	jne    0x140002f9c
   140002f82:	cmp    ax,WORD PTR [rip+0x4a01]        # 0x14000798a
   140002f89:	jne    0x140002f9c
   140002f8b:	movzx  eax,WORD PTR [rbp-0x60]
   140002f8f:	cmp    ax,WORD PTR [rip+0x49f6]        # 0x14000798c
   140002f96:	je     0x140003065
   140002f9c:	sub    rbx,rsi
   140002f9f:	lea    r8,[rbp-0x64]
   140002fa3:	sar    rbx,1
   140002fa6:	or     rax,0xffffffffffffffff
   140002faa:	xor    edx,edx
   140002fac:	inc    rax
   140002faf:	cmp    WORD PTR [r8+rax*2],dx
   140002fb4:	jne    0x140002fac
   140002fb6:	lea    edx,[rbx+0x1]
   140002fb9:	add    edx,eax
   140002fbb:	cmp    edx,0x7fffffff
   140002fc1:	ja     0x14000331a
   140002fc7:	mov    eax,edx
   140002fc9:	xor    ecx,ecx
   140002fcb:	add    rdx,rdx
   140002fce:	mov    QWORD PTR [rsp+0x50],rax
   140002fd3:	call   QWORD PTR [rip+0x4367]        # 0x140007340
   140002fd9:	mov    QWORD PTR [rsp+0x48],rax
   140002fde:	test   rax,rax
   140002fe1:	je     0x140003315
   140002fe7:	mov    rdx,QWORD PTR [rsp+0x50]
   140002fec:	mov    r9,rbx
   140002fef:	mov    r8,rsi
   140002ff2:	mov    rcx,rax
   140002ff5:	call   QWORD PTR [rip+0x42cd]        # 0x1400072c8
   140002ffb:	mov    rax,QWORD PTR [rsp+0x48]
   140003000:	lea    r8,[rbp-0x64]
   140003004:	mov    rdx,QWORD PTR [rsp+0x50]
   140003009:	sub    rdx,rbx
   14000300c:	lea    rcx,[rax+rbx*2]
   140003010:	call   QWORD PTR [rip+0x429a]        # 0x1400072b0
   140003016:	mov    ebx,DWORD PTR [rsp+0x70]
   14000301a:	mov    rcx,QWORD PTR [rsp+0x58]
   14000301f:	and    ebx,0x10
   140003022:	call   QWORD PTR [rip+0x43b0]        # 0x1400073d8
   140003028:	mov    rax,QWORD PTR [rsp+0x60]
   14000302d:	mov    r9d,edi
   140003030:	mov    rdx,QWORD PTR [rsp+0x68]
   140003035:	mov    r8d,ebx
   140003038:	mov    rcx,QWORD PTR [rsp+0x48]
   14000303d:	mov    QWORD PTR [rsp+0x20],rax
   140003042:	call   QWORD PTR [rsp+0x58]
   140003046:	mov    rcx,QWORD PTR [rsp+0x48]
   14000304b:	mov    ebx,eax
   14000304d:	mov    DWORD PTR [rsp+0x38],eax
   140003051:	call   QWORD PTR [rip+0x4269]        # 0x1400072c0
   140003057:	test   ebx,ebx
   140003059:	jne    0x14000307d
   14000305b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003060:	mov    rcx,QWORD PTR [rsp+0x40]
   140003065:	lea    rdx,[rsp+0x70]
   14000306a:	call   QWORD PTR [rip+0x3ff8]        # 0x140007068
   140003070:	mov    rcx,QWORD PTR [rsp+0x40]
   140003075:	test   eax,eax
   140003077:	jne    0x140002f5b
   14000307d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003082:	call   QWORD PTR [rip+0x3fd8]        # 0x140007060
   140003088:	mov    eax,DWORD PTR [rsp+0x38]
   14000308c:	test   eax,eax
   14000308e:	jne    0x140003325
   140003094:	mov    rbx,QWORD PTR [rsp+0x30]
   140003099:	test   dil,0x10
   14000309d:	je     0x140003325
   1400030a3:	mov    rax,rbx
   1400030a6:	sub    rax,rsi
   1400030a9:	sar    rax,1
   1400030ac:	mov    QWORD PTR [rsp+0x30],rax
   1400030b1:	add    rax,0x2
   1400030b5:	cmp    eax,0x7fffffff
   1400030ba:	ja     0x140003320
   1400030c0:	mov    edx,eax
   1400030c2:	xor    ecx,ecx
   1400030c4:	add    rdx,rdx
   1400030c7:	call   QWORD PTR [rip+0x4273]        # 0x140007340
   1400030cd:	mov    QWORD PTR [rsp+0x40],rax
   1400030d2:	test   rax,rax
   1400030d5:	je     0x140003320
   1400030db:	mov    rcx,QWORD PTR [rsp+0x30]
   1400030e0:	mov    r8,rsi
   1400030e3:	mov    r9,rcx
   1400030e6:	lea    rdx,[rcx+0x2]
   1400030ea:	mov    rcx,rax
   1400030ed:	call   QWORD PTR [rip+0x41d5]        # 0x1400072c8
   1400030f3:	mov    rax,QWORD PTR [rsp+0x30]
   1400030f8:	lea    r8,[rip+0x4879]        # 0x140007978
   1400030ff:	mov    rcx,QWORD PTR [rsp+0x40]
   140003104:	lea    rdx,[rax+0x2]
   140003108:	sub    rdx,rax
   14000310b:	lea    rcx,[rcx+rax*2]
   14000310f:	call   QWORD PTR [rip+0x419b]        # 0x1400072b0
   140003115:	mov    rcx,QWORD PTR [rsp+0x40]
   14000311a:	lea    rdx,[rsp+0x70]
   14000311f:	call   QWORD PTR [rip+0x3f33]        # 0x140007058
   140003125:	mov    QWORD PTR [rsp+0x50],rax
   14000312a:	cmp    rax,0xffffffffffffffff
   14000312e:	jne    0x140003181
   140003130:	call   QWORD PTR [rip+0x3efa]        # 0x140007030
   140003136:	mov    rdx,QWORD PTR [rsp+0x40]
   14000313b:	mov    ebx,eax
   14000313d:	mov    rcx,QWORD PTR [rip+0x795c]        # 0x14000aaa0
   140003144:	call   0x140001008
   140003149:	mov    rcx,QWORD PTR [rip+0x7950]        # 0x14000aaa0
   140003150:	lea    rdx,[rip+0x4339]        # 0x140007490
   140003157:	call   0x140001008
   14000315c:	mov    rdx,QWORD PTR [rip+0x793d]        # 0x14000aaa0
   140003163:	mov    r8d,ebx
   140003166:	mov    ecx,edi
   140003168:	call   0x140001160
   14000316d:	inc    DWORD PTR [rip+0x7939]        # 0x14000aaac
   140003173:	xor    eax,eax
   140003175:	and    dil,0x20
   140003179:	cmovne ebx,eax
   14000317c:	jmp    0x140003305
   140003181:	movzx  ecx,WORD PTR [rbp-0x64]
   140003185:	cmp    cx,WORD PTR [rip+0x47f8]        # 0x140007984
   14000318c:	movzx  eax,WORD PTR [rbp-0x62]
   140003190:	jne    0x14000319f
   140003192:	cmp    ax,WORD PTR [rip+0x47ed]        # 0x140007986
   140003199:	je     0x1400032bf
   14000319f:	cmp    cx,WORD PTR [rip+0x47e2]        # 0x140007988
   1400031a6:	jne    0x1400031c2
   1400031a8:	cmp    ax,WORD PTR [rip+0x47db]        # 0x14000798a
   1400031af:	jne    0x1400031c2
   1400031b1:	movzx  eax,WORD PTR [rbp-0x60]
   1400031b5:	cmp    ax,WORD PTR [rip+0x47d0]        # 0x14000798c
   1400031bc:	je     0x1400032bf
   1400031c2:	test   BYTE PTR [rsp+0x70],0x10
   1400031c7:	je     0x1400032bf
   1400031cd:	or     rdx,0xffffffffffffffff
   1400031d1:	xor    ecx,ecx
   1400031d3:	inc    rdx
   1400031d6:	cmp    WORD PTR [rbx+rdx*2],cx
   1400031da:	jne    0x1400031d3
   1400031dc:	lea    r8,[rbp-0x64]
   1400031e0:	or     rax,0xffffffffffffffff
   1400031e4:	inc    rax
   1400031e7:	cmp    WORD PTR [r8+rax*2],cx
   1400031ec:	jne    0x1400031e4
   1400031ee:	mov    rcx,QWORD PTR [rsp+0x30]
   1400031f3:	add    ecx,0x2
   1400031f6:	add    ecx,eax
   1400031f8:	add    ecx,edx
   1400031fa:	cmp    ecx,0x7fffffff
   140003200:	ja     0x1400032f5
   140003206:	mov    eax,ecx
   140003208:	lea    rdx,[rcx+rcx*1]
   14000320c:	xor    ecx,ecx
   14000320e:	mov    QWORD PTR [rsp+0x38],rax
   140003213:	call   QWORD PTR [rip+0x4127]        # 0x140007340
   140003219:	mov    QWORD PTR [rsp+0x48],rax
   14000321e:	test   rax,rax
   140003221:	je     0x1400032f5
   140003227:	mov    r9,QWORD PTR [rsp+0x30]
   14000322c:	mov    r8,rsi
   14000322f:	mov    rdx,QWORD PTR [rsp+0x38]
   140003234:	mov    rcx,rax
   140003237:	call   QWORD PTR [rip+0x408b]        # 0x1400072c8
   14000323d:	mov    rax,QWORD PTR [rsp+0x30]
   140003242:	lea    r8,[rbp-0x64]
   140003246:	mov    rcx,QWORD PTR [rsp+0x48]
   14000324b:	mov    rdx,QWORD PTR [rsp+0x38]
   140003250:	sub    rdx,rax
   140003253:	lea    rcx,[rcx+rax*2]
   140003257:	call   QWORD PTR [rip+0x4053]        # 0x1400072b0
   14000325d:	mov    rdx,QWORD PTR [rsp+0x38]
   140003262:	lea    r8,[rip+0x4207]        # 0x140007470
   140003269:	mov    rcx,QWORD PTR [rsp+0x48]
   14000326e:	call   QWORD PTR [rip+0x40d4]        # 0x140007348
   140003274:	mov    rdx,QWORD PTR [rsp+0x38]
   140003279:	mov    r8,rbx
   14000327c:	mov    rcx,QWORD PTR [rsp+0x48]
   140003281:	call   QWORD PTR [rip+0x40c1]        # 0x140007348
   140003287:	mov    rax,QWORD PTR [rsp+0x60]
   14000328c:	mov    r8d,edi
   14000328f:	mov    r9,QWORD PTR [rsp+0x58]
   140003294:	mov    rdx,QWORD PTR [rsp+0x48]
   140003299:	mov    rcx,QWORD PTR [rsp+0x68]
   14000329e:	mov    QWORD PTR [rsp+0x20],rax
   1400032a3:	call   0x140002cf8
   1400032a8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400032ad:	mov    DWORD PTR [rsp+0x38],eax
   1400032b1:	call   QWORD PTR [rip+0x4009]        # 0x1400072c0
   1400032b7:	xor    eax,eax
   1400032b9:	cmp    DWORD PTR [rsp+0x38],eax
   1400032bd:	jne    0x1400032d9
   1400032bf:	mov    rcx,QWORD PTR [rsp+0x50]
   1400032c4:	lea    rdx,[rsp+0x70]
   1400032c9:	call   QWORD PTR [rip+0x3d99]        # 0x140007068
   1400032cf:	xor    ecx,ecx
   1400032d1:	test   eax,eax
   1400032d3:	jne    0x140003181
   1400032d9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400032de:	call   QWORD PTR [rip+0x3d7c]        # 0x140007060
   1400032e4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400032e9:	call   QWORD PTR [rip+0x3fd1]        # 0x1400072c0
   1400032ef:	mov    eax,DWORD PTR [rsp+0x38]
   1400032f3:	jmp    0x140003325
   1400032f5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400032fa:	call   QWORD PTR [rip+0x3d60]        # 0x140007060
   140003300:	mov    ebx,0x8
   140003305:	mov    rcx,QWORD PTR [rsp+0x40]
   14000330a:	call   QWORD PTR [rip+0x3fb0]        # 0x1400072c0
   140003310:	jmp    0x140002e18
   140003315:	mov    rcx,QWORD PTR [rsp+0x40]
   14000331a:	call   QWORD PTR [rip+0x3d40]        # 0x140007060
   140003320:	mov    eax,0x8
   140003325:	mov    rcx,QWORD PTR [rbp+0x1c0]
   14000332c:	xor    rcx,rsp
   14000332f:	call   0x140005db0
   140003334:	add    rsp,0x2d8
   14000333b:	pop    rdi
   14000333c:	pop    rsi
   14000333d:	pop    rbx
   14000333e:	pop    rbp
   14000333f:	ret    
   140003340:	int3   
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	int3   
   140003347:	int3   
   140003348:	mov    rax,rsp
   14000334b:	mov    QWORD PTR [rax+0x18],r8
   14000334f:	mov    QWORD PTR [rax+0x20],r9
   140003353:	push   rbx
   140003354:	push   rbp
   140003355:	push   rsi
   140003356:	push   rdi
   140003357:	push   r14
   140003359:	push   r15
   14000335b:	sub    rsp,0x38
   14000335f:	mov    ebp,edx
   140003361:	lea    r15,[rax+0x20]
   140003365:	mov    edx,0x5c
   14000336a:	mov    rdi,rcx
   14000336d:	call   QWORD PTR [rip+0x3ef5]        # 0x140007268
   140003373:	xor    r14d,r14d
   140003376:	mov    rbx,rax
   140003379:	test   rax,rax
   14000337c:	jne    0x140003397
   14000337e:	lea    edx,[rax+0x3a]
   140003381:	mov    rcx,rdi
   140003384:	call   QWORD PTR [rip+0x3ede]        # 0x140007268
   14000338a:	mov    rbx,rax
   14000338d:	test   rax,rax
   140003390:	jne    0x140003397
   140003392:	mov    rbx,rdi
   140003395:	jmp    0x14000339b
   140003397:	add    rbx,0x2
   14000339b:	mov    rcx,rdi
   14000339e:	call   QWORD PTR [rip+0x3edc]        # 0x140007280
   1400033a4:	mov    rsi,rax
   1400033a7:	test   rax,rax
   1400033aa:	jne    0x1400033b1
   1400033ac:	lea    eax,[rsi+0x8]
   1400033af:	jmp    0x1400033e4
   1400033b1:	sub    rbx,rdi
   1400033b4:	mov    QWORD PTR [rsp+0x20],r15
   1400033b9:	sar    rbx,1
   1400033bc:	mov    r8d,ebp
   1400033bf:	mov    rdx,rdi
   1400033c2:	mov    rcx,rax
   1400033c5:	mov    WORD PTR [rax+rbx*2],r14w
   1400033ca:	mov    r9,QWORD PTR [rsp+0x80]
   1400033d2:	call   0x140002cf8
   1400033d7:	mov    rcx,rsi
   1400033da:	mov    ebx,eax
   1400033dc:	call   QWORD PTR [rip+0x3ede]        # 0x1400072c0
   1400033e2:	mov    eax,ebx
   1400033e4:	add    rsp,0x38
   1400033e8:	pop    r15
   1400033ea:	pop    r14
   1400033ec:	pop    rdi
   1400033ed:	pop    rsi
   1400033ee:	pop    rbp
   1400033ef:	pop    rbx
   1400033f0:	ret    
   1400033f1:	int3   
   1400033f2:	int3   
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    rax,rsp
   140003403:	mov    QWORD PTR [rax+0x8],rbx
   140003407:	mov    QWORD PTR [rax+0x10],rbp
   14000340b:	mov    QWORD PTR [rax+0x18],rsi
   14000340f:	mov    QWORD PTR [rax+0x20],rdi
   140003413:	push   r12
   140003415:	push   r14
   140003417:	push   r15
   140003419:	sub    rsp,0x30
   14000341d:	xor    r12d,r12d
   140003420:	lea    rdx,[rax-0x28]
   140003424:	mov    r8d,r9d
   140003427:	mov    QWORD PTR [rax-0x28],r12
   14000342b:	mov    r15d,r12d
   14000342e:	mov    edi,r9d
   140003431:	mov    rsi,rcx
   140003434:	call   0x140001dbc
   140003439:	mov    ebx,eax
   14000343b:	mov    rdx,rsi
   14000343e:	test   eax,eax
   140003440:	je     0x14000348c
   140003442:	mov    rcx,QWORD PTR [rip+0x7657]        # 0x14000aaa0
   140003449:	call   0x140001008
   14000344e:	mov    rcx,QWORD PTR [rip+0x764b]        # 0x14000aaa0
   140003455:	lea    rdx,[rip+0x4034]        # 0x140007490
   14000345c:	call   0x140001008
   140003461:	mov    rdx,QWORD PTR [rip+0x7638]        # 0x14000aaa0
   140003468:	mov    r8d,ebx
   14000346b:	mov    ecx,edi
   14000346d:	call   0x140001160
   140003472:	lea    ebp,[r12+0x1]
   140003477:	add    DWORD PTR [rip+0x762f],ebp        # 0x14000aaac
   14000347d:	and    dil,0x20
   140003481:	cmovne ebx,r12d
   140003485:	mov    eax,ebx
   140003487:	jmp    0x140003609
   14000348c:	mov    rcx,QWORD PTR [rip+0x7605]        # 0x14000aa98
   140003493:	call   0x140001008
   140003498:	mov    rcx,QWORD PTR [rip+0x75f9]        # 0x14000aa98
   14000349f:	lea    rdx,[rip+0x3fce]        # 0x140007474
   1400034a6:	call   0x140001008
   1400034ab:	mov    rbx,QWORD PTR [rsp+0x20]
   1400034b0:	mov    ebp,0x1
   1400034b5:	test   rbx,rbx
   1400034b8:	jne    0x1400034d3
   1400034ba:	mov    rdx,QWORD PTR [rip+0x75d7]        # 0x14000aa98
   1400034c1:	xor    r9d,r9d
   1400034c4:	mov    r8d,0x2720
   1400034ca:	mov    ecx,edi
   1400034cc:	call   0x140001160
   1400034d1:	jmp    0x140003525
   1400034d3:	lea    r14,[rbx+0x8]
   1400034d7:	jmp    0x14000351e
   1400034d9:	mov    rcx,r14
   1400034dc:	call   0x140002be0
   1400034e1:	mov    rcx,QWORD PTR [rip+0x75b0]        # 0x14000aa98
   1400034e8:	lea    rdx,[rip+0x44a1]        # 0x140007990
   1400034ef:	call   0x140001008
   1400034f4:	movzx  eax,WORD PTR [r14+0x2]
   1400034f9:	add    r15d,ebp
   1400034fc:	add    r14,rax
   1400034ff:	movzx  eax,WORD PTR [rbx+0x4]
   140003503:	cmp    r15d,eax
   140003506:	je     0x140003525
   140003508:	or     rax,0xffffffffffffffff
   14000350c:	inc    rax
   14000350f:	cmp    WORD PTR [rsi+rax*2],r12w
   140003514:	jne    0x14000350c
   140003516:	lea    edx,[rax+rbp*1]
   140003519:	call   0x1400010e8
   14000351e:	cmp    WORD PTR [rbx+0x4],r12w
   140003523:	jne    0x1400034d9
   140003525:	mov    rcx,rbx
   140003528:	call   QWORD PTR [rip+0x3d92]        # 0x1400072c0
   14000352e:	mov    r8d,edi
   140003531:	mov    QWORD PTR [rsp+0x20],r12
   140003536:	lea    rdx,[rsp+0x20]
   14000353b:	mov    rcx,rsi
   14000353e:	call   0x140001e70
   140003543:	mov    ebx,eax
   140003545:	test   eax,eax
   140003547:	je     0x140003581
   140003549:	mov    rcx,QWORD PTR [rip+0x7550]        # 0x14000aaa0
   140003550:	mov    rdx,rsi
   140003553:	call   0x140001008
   140003558:	mov    rcx,QWORD PTR [rip+0x7541]        # 0x14000aaa0
   14000355f:	lea    rdx,[rip+0x3f2a]        # 0x140007490
   140003566:	call   0x140001008
   14000356b:	mov    rdx,QWORD PTR [rip+0x752e]        # 0x14000aaa0
   140003572:	mov    r8d,ebx
   140003575:	mov    ecx,edi
   140003577:	call   0x140001160
   14000357c:	jmp    0x140003477
   140003581:	mov    rbx,QWORD PTR [rsp+0x20]
   140003586:	test   rbx,rbx
   140003589:	je     0x1400035e5
   14000358b:	movzx  eax,WORD PTR [rbx+0x4]
   14000358f:	test   ax,ax
   140003592:	je     0x1400035e5
   140003594:	lea    rdi,[rbx+0x8]
   140003598:	mov    r14d,r12d
   14000359b:	cmp    r12w,ax
   14000359f:	jae    0x1400035e5
   1400035a1:	or     rax,0xffffffffffffffff
   1400035a5:	inc    rax
   1400035a8:	cmp    WORD PTR [rsi+rax*2],r12w
   1400035ad:	jne    0x1400035a5
   1400035af:	lea    edx,[rax+rbp*1]
   1400035b2:	call   0x1400010e8
   1400035b7:	mov    rcx,rdi
   1400035ba:	call   0x140002be0
   1400035bf:	mov    rcx,QWORD PTR [rip+0x74d2]        # 0x14000aa98
   1400035c6:	lea    rdx,[rip+0x43c3]        # 0x140007990
   1400035cd:	call   0x140001008
   1400035d2:	movzx  eax,WORD PTR [rdi+0x2]
   1400035d6:	add    r14d,ebp
   1400035d9:	add    rdi,rax
   1400035dc:	movzx  eax,WORD PTR [rbx+0x4]
   1400035e0:	cmp    r14d,eax
   1400035e3:	jl     0x1400035a1
   1400035e5:	mov    rcx,rbx
   1400035e8:	call   QWORD PTR [rip+0x3cd2]        # 0x1400072c0
   1400035ee:	mov    rcx,QWORD PTR [rip+0x74a3]        # 0x14000aa98
   1400035f5:	lea    rdx,[rip+0x4394]        # 0x140007990
   1400035fc:	call   0x140001008
   140003601:	add    DWORD PTR [rip+0x7489],ebp        # 0x14000aa90
   140003607:	xor    eax,eax
   140003609:	mov    rbx,QWORD PTR [rsp+0x50]
   14000360e:	mov    rbp,QWORD PTR [rsp+0x58]
   140003613:	mov    rsi,QWORD PTR [rsp+0x60]
   140003618:	mov    rdi,QWORD PTR [rsp+0x68]
   14000361d:	add    rsp,0x30
   140003621:	pop    r15
   140003623:	pop    r14
   140003625:	pop    r12
   140003627:	ret    
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	mov    QWORD PTR [rsp+0x10],rbx
   140003635:	mov    QWORD PTR [rsp+0x18],rbp
   14000363a:	push   rsi
   14000363b:	push   rdi
   14000363c:	push   r14
   14000363e:	sub    rsp,0x40
   140003642:	mov    rbp,rdx
   140003645:	mov    r8d,r9d
   140003648:	lea    rdx,[rsp+0x30]
   14000364d:	mov    edi,r9d
   140003650:	mov    rsi,rcx
   140003653:	call   0x140001d44
   140003658:	xor    r14d,r14d
   14000365b:	mov    ebx,eax
   14000365d:	test   eax,eax
   14000365f:	jne    0x140003726
   140003665:	mov    rax,QWORD PTR [rsp+0x80]
   14000366d:	mov    rbx,QWORD PTR [rax]
   140003670:	or     rax,0xffffffffffffffff
   140003674:	inc    rax
   140003677:	cmp    WORD PTR [rbp+rax*2+0x0],r14w
   14000367d:	jne    0x140003674
   14000367f:	lea    rcx,[rsi+rax*2]
   140003683:	mov    rdx,rbx
   140003686:	call   QWORD PTR [rip+0x3bbc]        # 0x140007248
   14000368c:	mov    rdx,rbx
   14000368f:	lea    rcx,[rip+0x42fe]        # 0x140007994
   140003696:	call   QWORD PTR [rip+0x3bac]        # 0x140007248
   14000369c:	mov    rcx,QWORD PTR [rsp+0x30]
   1400036a1:	lea    r9,[rsp+0x60]
   1400036a6:	mov    edx,0x1
   1400036ab:	mov    QWORD PTR [rsp+0x60],r14
   1400036b0:	mov    QWORD PTR [rsp+0x20],r14
   1400036b5:	lea    r8d,[rdx+0x13]
   1400036b9:	call   QWORD PTR [rip+0x3b69]        # 0x140007228
   1400036bf:	test   eax,eax
   1400036c1:	je     0x1400036f1
   1400036c3:	mov    rcx,QWORD PTR [rsp+0x60]
   1400036c8:	mov    rdx,rbx
   1400036cb:	call   QWORD PTR [rip+0x3b77]        # 0x140007248
   1400036d1:	mov    rdx,rbx
   1400036d4:	lea    rcx,[rip+0x42b9]        # 0x140007994
   1400036db:	call   QWORD PTR [rip+0x3b67]        # 0x140007248
   1400036e1:	mov    rcx,QWORD PTR [rsp+0x60]
   1400036e6:	call   QWORD PTR [rip+0x39b4]        # 0x1400070a0
   1400036ec:	mov    ebx,r14d
   1400036ef:	jmp    0x1400036f9
   1400036f1:	call   QWORD PTR [rip+0x3939]        # 0x140007030
   1400036f7:	mov    ebx,eax
   1400036f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400036fe:	call   QWORD PTR [rip+0x399c]        # 0x1400070a0
   140003704:	test   ebx,ebx
   140003706:	jne    0x140003726
   140003708:	test   dil,dil
   14000370b:	js     0x140003767
   14000370d:	mov    rdx,QWORD PTR [rip+0x7384]        # 0x14000aa98
   140003714:	mov    r9,rsi
   140003717:	mov    r8d,0x2715
   14000371d:	mov    ecx,edi
   14000371f:	call   0x140001160
   140003724:	jmp    0x140003767
   140003726:	mov    rcx,QWORD PTR [rip+0x7373]        # 0x14000aaa0
   14000372d:	mov    rdx,rsi
   140003730:	call   0x140001008
   140003735:	mov    rcx,QWORD PTR [rip+0x7364]        # 0x14000aaa0
   14000373c:	lea    rdx,[rip+0x3d4d]        # 0x140007490
   140003743:	call   0x140001008
   140003748:	mov    rdx,QWORD PTR [rip+0x7351]        # 0x14000aaa0
   14000374f:	mov    r8d,ebx
   140003752:	mov    ecx,edi
   140003754:	call   0x140001160
   140003759:	inc    DWORD PTR [rip+0x734d]        # 0x14000aaac
   14000375f:	and    dil,0x20
   140003763:	cmovne ebx,r14d
   140003767:	mov    rbp,QWORD PTR [rsp+0x70]
   14000376c:	mov    eax,ebx
   14000376e:	mov    rbx,QWORD PTR [rsp+0x68]
   140003773:	add    rsp,0x40
   140003777:	pop    r14
   140003779:	pop    rdi
   14000377a:	pop    rsi
   14000377b:	ret    
   14000377c:	int3   
   14000377d:	int3   
   14000377e:	int3   
   14000377f:	int3   
   140003780:	int3   
   140003781:	int3   
   140003782:	int3   
   140003783:	int3   
   140003784:	mov    r11,rsp
   140003787:	mov    QWORD PTR [r11+0x8],rbx
   14000378b:	mov    QWORD PTR [r11+0x10],rsi
   14000378f:	mov    QWORD PTR [r11+0x18],rdi
   140003793:	mov    QWORD PTR [r11+0x20],r12
   140003797:	push   r13
   140003799:	push   r14
   14000379b:	push   r15
   14000379d:	sub    rsp,0xe0
   1400037a4:	mov    QWORD PTR [rsp+0x48],rsp
   1400037a9:	mov    edi,r9d
   1400037ac:	mov    r12,r8
   1400037af:	mov    r15,rdx
   1400037b2:	mov    rsi,rcx
   1400037b5:	xor    eax,eax
   1400037b7:	mov    QWORD PTR [rsp+0x58],rax
   1400037bc:	mov    QWORD PTR [r11-0x70],rax
   1400037c0:	mov    QWORD PTR [rsp+0x70],rax
   1400037c5:	mov    QWORD PTR [r11-0x48],rax
   1400037c9:	mov    QWORD PTR [r11-0x58],rax
   1400037cd:	or     rbx,0xffffffffffffffff
   1400037d1:	mov    r14,rbx
   1400037d4:	inc    r14
   1400037d7:	cmp    WORD PTR [rdx+r14*2],ax
   1400037dc:	jne    0x1400037d4
   1400037de:	call   0x1400026dc
   1400037e3:	mov    r13,rax
   1400037e6:	mov    QWORD PTR [rsp+0xb0],rax
   1400037ee:	xor    ecx,ecx
   1400037f0:	test   rax,rax
   1400037f3:	jne    0x14000384c
   1400037f5:	mov    rdx,r12
   1400037f8:	mov    rcx,QWORD PTR [rip+0x72a1]        # 0x14000aaa0
   1400037ff:	call   0x140001008
   140003804:	lea    rdx,[rip+0x3c85]        # 0x140007490
   14000380b:	mov    rcx,QWORD PTR [rip+0x728e]        # 0x14000aaa0
   140003812:	call   0x140001008
   140003817:	lea    r8d,[r13+0x8]
   14000381b:	mov    rdx,QWORD PTR [rip+0x727e]        # 0x14000aaa0
   140003822:	xor    ecx,ecx
   140003824:	call   0x140001160
   140003829:	inc    DWORD PTR [rip+0x727d]        # 0x14000aaac
   14000382f:	lea    rdx,[rip+0xc]        # 0x140003842
   140003836:	mov    rcx,QWORD PTR [rsp+0x48]
   14000383b:	call   0x140006356
   140003840:	nop
   140003841:	nop
   140003842:	mov    eax,0x8
   140003847:	jmp    0x140004043
   14000384c:	mov    rax,rbx
   14000384f:	inc    rax
   140003852:	cmp    WORD PTR [r13+rax*2+0x0],cx
   140003858:	jne    0x14000384f
   14000385a:	test   rax,rax
   14000385d:	jne    0x140003879
   14000385f:	lea    rdx,[rip+0xc]        # 0x140003872
   140003866:	mov    rcx,QWORD PTR [rsp+0x48]
   14000386b:	call   0x140006356
   140003870:	nop
   140003871:	nop
   140003872:	xor    eax,eax
   140003874:	jmp    0x140004043
   140003879:	mov    rcx,rsi
   14000387c:	call   0x1400026dc
   140003881:	mov    QWORD PTR [rsp+0x70],rax
   140003886:	test   rax,rax
   140003889:	jne    0x1400038e4
   14000388b:	mov    rdx,r12
   14000388e:	mov    rcx,QWORD PTR [rip+0x720b]        # 0x14000aaa0
   140003895:	call   0x140001008
   14000389a:	lea    rdx,[rip+0x3bef]        # 0x140007490
   1400038a1:	mov    rcx,QWORD PTR [rip+0x71f8]        # 0x14000aaa0
   1400038a8:	call   0x140001008
   1400038ad:	mov    r8d,0x8
   1400038b3:	mov    rdx,QWORD PTR [rip+0x71e6]        # 0x14000aaa0
   1400038ba:	xor    ecx,ecx
   1400038bc:	call   0x140001160
   1400038c1:	inc    DWORD PTR [rip+0x71e5]        # 0x14000aaac
   1400038c7:	lea    rdx,[rip+0xc]        # 0x1400038da
   1400038ce:	mov    rcx,QWORD PTR [rsp+0x48]
   1400038d3:	call   0x140006356
   1400038d8:	nop
   1400038d9:	nop
   1400038da:	mov    eax,0x8
   1400038df:	jmp    0x140004043
   1400038e4:	xor    r12d,r12d
   1400038e7:	inc    rbx
   1400038ea:	cmp    WORD PTR [r13+rbx*2+0x0],r12w
   1400038f0:	jne    0x1400038e7
   1400038f2:	add    ebx,r14d
   1400038f5:	lea    eax,[rbx*2+0x4]
   1400038fc:	mov    ebx,eax
   1400038fe:	mov    ecx,eax
   140003900:	call   QWORD PTR [rip+0x3a32]        # 0x140007338
   140003906:	mov    rsi,rax
   140003909:	mov    QWORD PTR [rsp+0x88],rax
   140003911:	test   rax,rax
   140003914:	jne    0x140003945
   140003916:	lea    r8d,[rax+0x8]
   14000391a:	mov    rdx,QWORD PTR [rip+0x717f]        # 0x14000aaa0
   140003921:	mov    ecx,edi
   140003923:	call   0x140001160
   140003928:	lea    rdx,[rip+0xc]        # 0x14000393b
   14000392f:	mov    rcx,QWORD PTR [rsp+0x48]
   140003934:	call   0x140006356
   140003939:	nop
   14000393a:	nop
   14000393b:	mov    eax,0x8
   140003940:	jmp    0x140004043
   140003945:	shr    rbx,1
   140003948:	mov    r8,r15
   14000394b:	mov    rdx,rbx
   14000394e:	mov    rcx,rax
   140003951:	call   QWORD PTR [rip+0x3959]        # 0x1400072b0
   140003957:	test   r14d,r14d
   14000395a:	je     0x1400039a2
   14000395c:	lea    eax,[r14-0x1]
   140003960:	movzx  eax,WORD PTR [r15+rax*2]
   140003965:	sub    ax,0x2f
   140003969:	cmp    ax,0x2d
   14000396d:	ja     0x14000397f
   14000396f:	movabs rcx,0x200000000801
   140003979:	bt     rcx,rax
   14000397d:	jb     0x1400039a2
   14000397f:	cmp    WORD PTR [r13+0x0],0x2f
   140003985:	je     0x1400039a2
   140003987:	cmp    WORD PTR [r13+0x0],0x5c
   14000398d:	je     0x1400039a2
   14000398f:	lea    r8,[rip+0x3ada]        # 0x140007470
   140003996:	mov    rdx,rbx
   140003999:	mov    rcx,rsi
   14000399c:	call   QWORD PTR [rip+0x39a6]        # 0x140007348
   1400039a2:	mov    r8,r13
   1400039a5:	mov    rdx,rbx
   1400039a8:	mov    rcx,rsi
   1400039ab:	call   QWORD PTR [rip+0x3997]        # 0x140007348
   1400039b1:	mov    rcx,rsi
   1400039b4:	call   QWORD PTR [rip+0x3686]        # 0x140007040
   1400039ba:	cmp    eax,0xffffffff
   1400039bd:	jne    0x140003a28
   1400039bf:	call   QWORD PTR [rip+0x366b]        # 0x140007030
   1400039c5:	mov    ebx,eax
   1400039c7:	mov    rdx,rsi
   1400039ca:	mov    rcx,QWORD PTR [rip+0x70cf]        # 0x14000aaa0
   1400039d1:	call   0x140001008
   1400039d6:	lea    rdx,[rip+0x3ab3]        # 0x140007490
   1400039dd:	mov    rcx,QWORD PTR [rip+0x70bc]        # 0x14000aaa0
   1400039e4:	call   0x140001008
   1400039e9:	mov    r8d,ebx
   1400039ec:	mov    rdx,QWORD PTR [rip+0x70ad]        # 0x14000aaa0
   1400039f3:	mov    ecx,edi
   1400039f5:	call   0x140001160
   1400039fa:	inc    DWORD PTR [rip+0x70ac]        # 0x14000aaac
   140003a00:	and    dil,0x20
   140003a04:	cmovne ebx,r12d
   140003a08:	mov    DWORD PTR [rsp+0x40],ebx
   140003a0c:	lea    rdx,[rip+0xc]        # 0x140003a1f
   140003a13:	mov    rcx,QWORD PTR [rsp+0x48]
   140003a18:	call   0x140006356
   140003a1d:	nop
   140003a1e:	nop
   140003a1f:	mov    eax,DWORD PTR [rsp+0x40]
   140003a23:	jmp    0x140004043
   140003a28:	mov    QWORD PTR [rsp+0x58],r12
   140003a2d:	xor    r9d,r9d
   140003a30:	lea    r8,[rsp+0x58]
   140003a35:	lea    edx,[r9+0x1]
   140003a39:	mov    rcx,QWORD PTR [rsp+0x70]
   140003a3e:	call   QWORD PTR [rip+0x37f4]        # 0x140007238
   140003a44:	test   eax,eax
   140003a46:	jne    0x140003a7f
   140003a48:	call   QWORD PTR [rip+0x35e2]        # 0x140007030
   140003a4e:	mov    DWORD PTR [rsp+0x40],eax
   140003a52:	mov    r8d,eax
   140003a55:	mov    rdx,QWORD PTR [rip+0x7044]        # 0x14000aaa0
   140003a5c:	mov    ecx,edi
   140003a5e:	call   0x140001160
   140003a63:	lea    rdx,[rip+0xc]        # 0x140003a76
   140003a6a:	mov    rcx,QWORD PTR [rsp+0x48]
   140003a6f:	call   0x140006356
   140003a74:	nop
   140003a75:	nop
   140003a76:	mov    eax,DWORD PTR [rsp+0x40]
   140003a7a:	jmp    0x140004043
   140003a7f:	mov    QWORD PTR [rsp+0x68],r12
   140003a84:	lea    r9,[rsp+0xc4]
   140003a8c:	lea    r8,[rsp+0x68]
   140003a91:	lea    rdx,[rsp+0xc8]
   140003a99:	mov    rcx,QWORD PTR [rsp+0x58]
   140003a9e:	call   QWORD PTR [rip+0x370c]        # 0x1400071b0
   140003aa4:	test   eax,eax
   140003aa6:	jne    0x140003adf
   140003aa8:	call   QWORD PTR [rip+0x3582]        # 0x140007030
   140003aae:	mov    DWORD PTR [rsp+0x40],eax
   140003ab2:	mov    r8d,eax
   140003ab5:	mov    rdx,QWORD PTR [rip+0x6fe4]        # 0x14000aaa0
   140003abc:	mov    ecx,edi
   140003abe:	call   0x140001160
   140003ac3:	lea    rdx,[rip+0xc]        # 0x140003ad6
   140003aca:	mov    rcx,QWORD PTR [rsp+0x48]
   140003acf:	call   0x140006356
   140003ad4:	nop
   140003ad5:	nop
   140003ad6:	mov    eax,DWORD PTR [rsp+0x40]
   140003ada:	jmp    0x140004043
   140003adf:	mov    WORD PTR [rsp+0x50],r12w
   140003ae5:	mov    DWORD PTR [rsp+0x80],r12d
   140003aed:	lea    r8,[rsp+0x80]
   140003af5:	lea    rdx,[rsp+0x50]
   140003afa:	mov    rcx,QWORD PTR [rsp+0x58]
   140003aff:	call   QWORD PTR [rip+0x36d3]        # 0x1400071d8
   140003b05:	test   eax,eax
   140003b07:	jne    0x140003b40
   140003b09:	call   QWORD PTR [rip+0x3521]        # 0x140007030
   140003b0f:	mov    DWORD PTR [rsp+0x40],eax
   140003b13:	mov    r8d,eax
   140003b16:	mov    rdx,QWORD PTR [rip+0x6f83]        # 0x14000aaa0
   140003b1d:	mov    ecx,edi
   140003b1f:	call   0x140001160
   140003b24:	lea    rdx,[rip+0xc]        # 0x140003b37
   140003b2b:	mov    rcx,QWORD PTR [rsp+0x48]
   140003b30:	call   0x140006356
   140003b35:	nop
   140003b36:	nop
   140003b37:	mov    eax,DWORD PTR [rsp+0x40]
   140003b3b:	jmp    0x140004043
   140003b40:	cmp    QWORD PTR [rsp+0x68],r12
   140003b45:	jne    0x140003b61
   140003b47:	lea    rdx,[rip+0xc]        # 0x140003b5a
   140003b4e:	mov    rcx,QWORD PTR [rsp+0x48]
   140003b53:	call   0x140006356
   140003b58:	nop
   140003b59:	nop
   140003b5a:	xor    eax,eax
   140003b5c:	jmp    0x140004043
   140003b61:	mov    QWORD PTR [rsp+0xb8],r12
   140003b69:	lea    r9,[rsp+0xcc]
   140003b71:	lea    r8,[rsp+0xb8]
   140003b79:	lea    rdx,[rsp+0xc0]
   140003b81:	mov    rcx,QWORD PTR [rsp+0x58]
   140003b86:	call   QWORD PTR [rip+0x361c]        # 0x1400071a8
   140003b8c:	test   eax,eax
   140003b8e:	jne    0x140003bc7
   140003b90:	call   QWORD PTR [rip+0x349a]        # 0x140007030
   140003b96:	mov    DWORD PTR [rsp+0x40],eax
   140003b9a:	mov    r8d,eax
   140003b9d:	mov    rdx,QWORD PTR [rip+0x6efc]        # 0x14000aaa0
   140003ba4:	mov    ecx,edi
   140003ba6:	call   0x140001160
   140003bab:	lea    rdx,[rip+0xc]        # 0x140003bbe
   140003bb2:	mov    rcx,QWORD PTR [rsp+0x48]
   140003bb7:	call   0x140006356
   140003bbc:	nop
   140003bbd:	nop
   140003bbe:	mov    eax,DWORD PTR [rsp+0x40]
   140003bc2:	jmp    0x140004043
   140003bc7:	mov    r12d,0x8
   140003bcd:	mov    rax,QWORD PTR [rsp+0x68]
   140003bd2:	lea    r14,[rax+0x8]
   140003bd6:	xor    edx,edx
   140003bd8:	mov    r15d,edx
   140003bdb:	mov    DWORD PTR [rsp+0xa8],edx
   140003be2:	mov    QWORD PTR [rsp+0x90],r14
   140003bea:	movzx  eax,WORD PTR [rax+0x4]
   140003bee:	cmp    r15d,eax
   140003bf1:	jge    0x140003cd4
   140003bf7:	lea    rax,[r14+0x8]
   140003bfb:	mov    QWORD PTR [rsp+0x60],rax
   140003c00:	mov    ebx,edx
   140003c02:	mov    DWORD PTR [rsp+0x98],edx
   140003c09:	mov    rdx,QWORD PTR [rsp+0x120]
   140003c11:	cmp    ebx,DWORD PTR [rdx]
   140003c13:	jge    0x140003c5b
   140003c15:	movsxd rcx,ebx
   140003c18:	mov    QWORD PTR [rsp+0x40],rcx
   140003c1d:	mov    rdx,QWORD PTR [rdx+rcx*8+0x8]
   140003c22:	mov    rcx,rax
   140003c25:	call   QWORD PTR [rip+0x3595]        # 0x1400071c0
   140003c2b:	test   eax,eax
   140003c2d:	je     0x140003c4c
   140003c2f:	mov    rax,QWORD PTR [rsp+0x40]
   140003c34:	mov    rcx,QWORD PTR [rsp+0x128]
   140003c3c:	mov    rax,QWORD PTR [rcx+rax*8+0x8]
   140003c41:	mov    QWORD PTR [rsp+0x60],rax
   140003c46:	lea    rax,[r14+0x8]
   140003c4a:	jmp    0x140003c5b
   140003c4c:	inc    ebx
   140003c4e:	mov    DWORD PTR [rsp+0x98],ebx
   140003c55:	lea    rax,[r14+0x8]
   140003c59:	jmp    0x140003c09
   140003c5b:	mov    rcx,rax
   140003c5e:	call   QWORD PTR [rip+0x351c]        # 0x140007180
   140003c64:	movzx  ebx,WORD PTR [r14+0x2]
   140003c69:	sub    ebx,eax
   140003c6b:	mov    rcx,QWORD PTR [rsp+0x60]
   140003c70:	call   QWORD PTR [rip+0x350a]        # 0x140007180
   140003c76:	add    eax,ebx
   140003c78:	lea    ecx,[rax+r12*1]
   140003c7c:	cmp    ecx,r12d
   140003c7f:	jb     0x140003ca3
   140003c81:	mov    r12d,ecx
   140003c84:	inc    r15d
   140003c87:	mov    DWORD PTR [rsp+0xa8],r15d
   140003c8f:	movzx  eax,WORD PTR [r14+0x2]
   140003c94:	add    r14,rax
   140003c97:	mov    rax,QWORD PTR [rsp+0x68]
   140003c9c:	xor    edx,edx
   140003c9e:	jmp    0x140003be2
   140003ca3:	mov    r8d,0x216
   140003ca9:	mov    rdx,QWORD PTR [rip+0x6df0]        # 0x14000aaa0
   140003cb0:	mov    ecx,edi
   140003cb2:	call   0x140001160
   140003cb7:	lea    rdx,[rip+0xc]        # 0x140003cca
   140003cbe:	mov    rcx,QWORD PTR [rsp+0x48]
   140003cc3:	call   0x140006356
   140003cc8:	nop
   140003cc9:	nop
   140003cca:	mov    eax,0x216
   140003ccf:	jmp    0x140004043
   140003cd4:	mov    ecx,r12d
   140003cd7:	call   QWORD PTR [rip+0x365b]        # 0x140007338
   140003cdd:	mov    r14,rax
   140003ce0:	mov    QWORD PTR [rsp+0xa0],rax
   140003ce8:	xor    r15d,r15d
   140003ceb:	test   rax,rax
   140003cee:	jne    0x140003d1f
   140003cf0:	lea    r8d,[rax+0x8]
   140003cf4:	mov    rdx,QWORD PTR [rip+0x6da5]        # 0x14000aaa0
   140003cfb:	mov    ecx,edi
   140003cfd:	call   0x140001160
   140003d02:	lea    rdx,[rip+0xc]        # 0x140003d15
   140003d09:	mov    rcx,QWORD PTR [rsp+0x48]
   140003d0e:	call   0x140006356
   140003d13:	nop
   140003d14:	nop
   140003d15:	mov    eax,0x8
   140003d1a:	jmp    0x140004043
   140003d1f:	mov    r8d,0x2
   140003d25:	mov    edx,r12d
   140003d28:	mov    rcx,rax
   140003d2b:	call   QWORD PTR [rip+0x345f]        # 0x140007190
   140003d31:	test   eax,eax
   140003d33:	jne    0x140003d6c
   140003d35:	call   QWORD PTR [rip+0x32f5]        # 0x140007030
   140003d3b:	mov    DWORD PTR [rsp+0x40],eax
   140003d3f:	mov    r8d,eax
   140003d42:	mov    rdx,QWORD PTR [rip+0x6d57]        # 0x14000aaa0
   140003d49:	mov    ecx,edi
   140003d4b:	call   0x140001160
   140003d50:	lea    rdx,[rip+0xc]        # 0x140003d63
   140003d57:	mov    rcx,QWORD PTR [rsp+0x48]
   140003d5c:	call   0x140006356
   140003d61:	nop
   140003d62:	nop
   140003d63:	mov    eax,DWORD PTR [rsp+0x40]
   140003d67:	jmp    0x140004043
   140003d6c:	mov    rax,QWORD PTR [rsp+0x68]
   140003d71:	lea    rbx,[rax+0x8]
   140003d75:	mov    r12d,r15d
   140003d78:	mov    DWORD PTR [rsp+0x78],r15d
   140003d7d:	mov    QWORD PTR [rsp+0x90],rbx
   140003d85:	movzx  eax,WORD PTR [rax+0x4]
   140003d89:	cmp    r12d,eax
   140003d8c:	jge    0x140003f3c
   140003d92:	mov    rcx,r15
   140003d95:	mov    QWORD PTR [rsp+0xd0],rcx
   140003d9d:	mov    DWORD PTR [rsp+0x7c],r15d
   140003da2:	lea    r8,[rbx+0x8]
   140003da6:	mov    rdx,QWORD PTR [rsp+0x120]
   140003dae:	cmp    r15d,DWORD PTR [rdx]
   140003db1:	jge    0x140003dee
   140003db3:	movsxd rax,r15d
   140003db6:	mov    QWORD PTR [rsp+0x40],rax
   140003dbb:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
   140003dc0:	mov    rcx,r8
   140003dc3:	call   QWORD PTR [rip+0x33f7]        # 0x1400071c0
   140003dc9:	test   eax,eax
   140003dcb:	je     0x140003de1
   140003dcd:	mov    rcx,QWORD PTR [rsp+0x40]
   140003dd2:	mov    rax,QWORD PTR [rsp+0x128]
   140003dda:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   140003ddf:	jmp    0x140003dee
   140003de1:	inc    r15d
   140003de4:	mov    rcx,QWORD PTR [rsp+0xd0]
   140003dec:	jmp    0x140003d9d
   140003dee:	xor    r15d,r15d
   140003df1:	test   rcx,rcx
   140003df4:	jne    0x140003e51
   140003df6:	movzx  eax,WORD PTR [rbx+0x2]
   140003dfa:	movzx  edx,BYTE PTR [r14]
   140003dfe:	mov    DWORD PTR [rsp+0x20],eax
   140003e02:	mov    r9,rbx
   140003e05:	or     r8d,0xffffffff
   140003e09:	mov    rcx,r14
   140003e0c:	call   QWORD PTR [rip+0x3366]        # 0x140007178
   140003e12:	test   eax,eax
   140003e14:	jne    0x140003f23
   140003e1a:	call   QWORD PTR [rip+0x3210]        # 0x140007030
   140003e20:	mov    DWORD PTR [rsp+0x40],eax
   140003e24:	mov    r8d,eax
   140003e27:	mov    rdx,QWORD PTR [rip+0x6c72]        # 0x14000aaa0
   140003e2e:	mov    ecx,edi
   140003e30:	call   0x140001160
   140003e35:	lea    rdx,[rip+0xc]        # 0x140003e48
   140003e3c:	mov    rcx,QWORD PTR [rsp+0x48]
   140003e41:	call   0x140006356
   140003e46:	nop
   140003e47:	nop
   140003e48:	mov    eax,DWORD PTR [rsp+0x40]
   140003e4c:	jmp    0x140004043
   140003e51:	mov    QWORD PTR [rsp+0x60],r15
   140003e56:	movzx  edx,BYTE PTR [rbx]
   140003e59:	mov    eax,DWORD PTR [rbx+0x4]
   140003e5c:	mov    DWORD PTR [rsp+0x20],eax
   140003e60:	xor    r9d,r9d
   140003e63:	mov    r8,rcx
   140003e66:	lea    rcx,[rsp+0x60]
   140003e6b:	call   0x140001424
   140003e70:	mov    DWORD PTR [rsp+0x40],eax
   140003e74:	test   eax,eax
   140003e76:	je     0x140003ea5
   140003e78:	mov    r8d,eax
   140003e7b:	mov    rdx,QWORD PTR [rip+0x6c1e]        # 0x14000aaa0
   140003e82:	mov    ecx,edi
   140003e84:	call   0x140001160
   140003e89:	lea    rdx,[rip+0xc]        # 0x140003e9c
   140003e90:	mov    rcx,QWORD PTR [rsp+0x48]
   140003e95:	call   0x140006356
   140003e9a:	nop
   140003e9b:	nop
   140003e9c:	mov    eax,DWORD PTR [rsp+0x40]
   140003ea0:	jmp    0x140004043
   140003ea5:	mov    r15,QWORD PTR [rsp+0x60]
   140003eaa:	movzx  eax,WORD PTR [r15+0x2]
   140003eaf:	movzx  edx,BYTE PTR [r14]
   140003eb3:	mov    DWORD PTR [rsp+0x20],eax
   140003eb7:	mov    r9,r15
   140003eba:	or     r8d,0xffffffff
   140003ebe:	mov    rcx,r14
   140003ec1:	call   QWORD PTR [rip+0x32b1]        # 0x140007178
   140003ec7:	test   eax,eax
   140003ec9:	jne    0x140003f12
   140003ecb:	call   QWORD PTR [rip+0x315f]        # 0x140007030
   140003ed1:	mov    DWORD PTR [rsp+0x40],eax
   140003ed5:	mov    r8d,eax
   140003ed8:	mov    rdx,QWORD PTR [rip+0x6bc1]        # 0x14000aaa0
   140003edf:	mov    ecx,edi
   140003ee1:	call   0x140001160
   140003ee6:	mov    rcx,r15
   140003ee9:	call   QWORD PTR [rip+0x33d1]        # 0x1400072c0
   140003eef:	xor    eax,eax
   140003ef1:	mov    QWORD PTR [rsp+0x60],rax
   140003ef6:	lea    rdx,[rip+0xc]        # 0x140003f09
   140003efd:	mov    rcx,QWORD PTR [rsp+0x48]
   140003f02:	call   0x140006356
   140003f07:	nop
   140003f08:	nop
   140003f09:	mov    eax,DWORD PTR [rsp+0x40]
   140003f0d:	jmp    0x140004043
   140003f12:	mov    rcx,r15
   140003f15:	call   QWORD PTR [rip+0x33a5]        # 0x1400072c0
   140003f1b:	xor    r15d,r15d
   140003f1e:	mov    QWORD PTR [rsp+0x60],r15
   140003f23:	inc    r12d
   140003f26:	mov    DWORD PTR [rsp+0x78],r12d
   140003f2b:	movzx  eax,WORD PTR [rbx+0x2]
   140003f2f:	add    rbx,rax
   140003f32:	mov    rax,QWORD PTR [rsp+0x68]
   140003f37:	jmp    0x140003d7d
   140003f3c:	movzx  eax,WORD PTR [rsp+0x50]
   140003f41:	mov    ecx,0x1000
   140003f46:	and    ax,cx
   140003f49:	neg    ax
   140003f4c:	sbb    r8d,r8d
   140003f4f:	and    r8d,0x60000000
   140003f56:	add    r8d,0x20000000
   140003f5d:	mov    rdx,QWORD PTR [rsp+0xb8]
   140003f65:	mov    rax,rdx
   140003f68:	neg    rax
   140003f6b:	sbb    ecx,ecx
   140003f6d:	and    ecx,0x10
   140003f70:	or     r8d,ecx
   140003f73:	or     r8d,0x4
   140003f77:	mov    DWORD PTR [rsp+0x38],edi
   140003f7b:	mov    QWORD PTR [rsp+0x30],rdx
   140003f80:	mov    QWORD PTR [rsp+0x28],r14
   140003f85:	xor    r9d,r9d
   140003f88:	mov    rcx,rsi
   140003f8b:	call   0x140001c14
   140003f90:	mov    ebx,eax
   140003f92:	test   eax,eax
   140003f94:	je     0x140003ff8
   140003f96:	mov    rdx,rsi
   140003f99:	mov    rcx,QWORD PTR [rip+0x6b00]        # 0x14000aaa0
   140003fa0:	call   0x140001008
   140003fa5:	lea    rdx,[rip+0x34e4]        # 0x140007490
   140003fac:	mov    rcx,QWORD PTR [rip+0x6aed]        # 0x14000aaa0
   140003fb3:	call   0x140001008
   140003fb8:	mov    r8d,ebx
   140003fbb:	mov    rdx,QWORD PTR [rip+0x6ade]        # 0x14000aaa0
   140003fc2:	mov    ecx,edi
   140003fc4:	call   0x140001160
   140003fc9:	inc    DWORD PTR [rip+0x6add]        # 0x14000aaac
   140003fcf:	and    dil,0x20
   140003fd3:	cmovne ebx,r15d
   140003fd7:	mov    DWORD PTR [rsp+0x40],ebx
   140003fdb:	test   ebx,ebx
   140003fdd:	je     0x140004010
   140003fdf:	lea    rdx,[rip+0xc]        # 0x140003ff2
   140003fe6:	mov    rcx,QWORD PTR [rsp+0x48]
   140003feb:	call   0x140006356
   140003ff0:	nop
   140003ff1:	nop
   140003ff2:	mov    eax,DWORD PTR [rsp+0x40]
   140003ff6:	jmp    0x140004043
   140003ff8:	mov    r9,rsi
   140003ffb:	mov    r8d,0x2715
   140004001:	mov    rdx,QWORD PTR [rip+0x6a90]        # 0x14000aa98
   140004008:	mov    ecx,edi
   14000400a:	call   0x140001160
   14000400f:	nop
   140004010:	mov    rcx,r14
   140004013:	call   QWORD PTR [rip+0x32a7]        # 0x1400072c0
   140004019:	mov    rcx,r13
   14000401c:	call   QWORD PTR [rip+0x329e]        # 0x1400072c0
   140004022:	mov    rcx,QWORD PTR [rsp+0x70]
   140004027:	call   QWORD PTR [rip+0x3293]        # 0x1400072c0
   14000402d:	mov    rcx,rsi
   140004030:	call   QWORD PTR [rip+0x328a]        # 0x1400072c0
   140004036:	mov    rcx,QWORD PTR [rsp+0x58]
   14000403b:	call   QWORD PTR [rip+0x305f]        # 0x1400070a0
   140004041:	xor    eax,eax
   140004043:	lea    r11,[rsp+0xe0]
   14000404b:	mov    rbx,QWORD PTR [r11+0x20]
   14000404f:	mov    rsi,QWORD PTR [r11+0x28]
   140004053:	mov    rdi,QWORD PTR [r11+0x30]
   140004057:	mov    r12,QWORD PTR [r11+0x38]
   14000405b:	mov    rsp,r11
   14000405e:	pop    r15
   140004060:	pop    r14
   140004062:	pop    r13
   140004064:	ret    
   140004065:	int3   
   140004066:	int3   
   140004067:	int3   
   140004068:	int3   
   140004069:	int3   
   14000406a:	int3   
   14000406b:	int3   
   14000406c:	mov    rax,rsp
   14000406f:	mov    QWORD PTR [rax+0x18],rbx
   140004073:	mov    DWORD PTR [rax+0x20],r9d
   140004077:	mov    QWORD PTR [rax+0x8],rcx
   14000407b:	push   rbp
   14000407c:	push   rsi
   14000407d:	push   rdi
   14000407e:	push   r12
   140004080:	push   r13
   140004082:	push   r14
   140004084:	push   r15
   140004086:	lea    rbp,[rax-0x5c8]
   14000408d:	sub    rsp,0x690
   140004094:	and    DWORD PTR [rsp+0x30],0x0
   140004099:	xor    ebx,ebx
   14000409b:	xor    edi,edi
   14000409d:	mov    DWORD PTR [rbp+0x260],ebx
   1400040a3:	mov    r14d,r9d
   1400040a6:	mov    r13,r8
   1400040a9:	mov    rsi,rdx
   1400040ac:	mov    r15,rcx
   1400040af:	cmp    DWORD PTR [rdx],ebx
   1400040b1:	jle    0x140004147
   1400040b7:	mov    r12,rdx
   1400040ba:	lea    r14,[r8+0x8]
   1400040be:	sub    r12,r8
   1400040c1:	mov    rcx,QWORD PTR [r12+r14*1]
   1400040c5:	lea    rdx,[rbp+0x5d8]
   1400040cc:	and    QWORD PTR [rbp+0x5d8],0x0
   1400040d4:	call   0x1400020cc
   1400040d9:	mov    r15d,eax
   1400040dc:	test   eax,eax
   1400040de:	jne    0x14000417a
   1400040e4:	movsxd rcx,DWORD PTR [rsp+0x30]
   1400040e9:	lea    rdx,[rbp+0x5d8]
   1400040f0:	mov    rax,QWORD PTR [rbp+0x5d8]
   1400040f7:	mov    QWORD PTR [rsp+rcx*8+0x38],rax
   1400040fc:	mov    rcx,QWORD PTR [r14]
   1400040ff:	inc    DWORD PTR [rsp+0x30]
   140004103:	call   0x1400020cc
   140004108:	mov    r15d,eax
   14000410b:	test   eax,eax
   14000410d:	jne    0x140004170
   14000410f:	mov    rax,QWORD PTR [rbp+0x5d8]
   140004116:	inc    edi
   140004118:	movsxd rcx,ebx
   14000411b:	add    r14,0x8
   14000411f:	mov    QWORD PTR [rbp+rcx*8+0x268],rax
   140004127:	mov    ebx,DWORD PTR [rbp+0x260]
   14000412d:	inc    ebx
   14000412f:	mov    DWORD PTR [rbp+0x260],ebx
   140004135:	cmp    edi,DWORD PTR [rsi]
   140004137:	jl     0x1400040c1
   140004139:	mov    r14d,DWORD PTR [rbp+0x5e8]
   140004140:	mov    r15,QWORD PTR [rbp+0x5d0]
   140004147:	lea    rcx,[rip+0x385a]        # 0x1400079a8
   14000414e:	call   0x140002540
   140004153:	mov    ebx,eax
   140004155:	test   eax,eax
   140004157:	je     0x1400041bd
   140004159:	mov    rdx,QWORD PTR [rip+0x6940]        # 0x14000aaa0
   140004160:	mov    r8d,eax
   140004163:	mov    ecx,r14d
   140004166:	call   0x140001160
   14000416b:	jmp    0x140004232
   140004170:	movsxd rdx,edi
   140004173:	mov    rdx,QWORD PTR [r13+rdx*8+0x8]
   140004178:	jmp    0x140004182
   14000417a:	movsxd rdx,edi
   14000417d:	mov    rdx,QWORD PTR [rsi+rdx*8+0x8]
   140004182:	mov    rcx,QWORD PTR [rip+0x6917]        # 0x14000aaa0
   140004189:	call   0x140001008
   14000418e:	mov    rcx,QWORD PTR [rip+0x690b]        # 0x14000aaa0
   140004195:	lea    rdx,[rip+0x32f4]        # 0x140007490
   14000419c:	call   0x140001008
   1400041a1:	mov    rdx,QWORD PTR [rip+0x68f8]        # 0x14000aaa0
   1400041a8:	mov    r8d,r15d
   1400041ab:	xor    ecx,ecx
   1400041ad:	call   0x140001160
   1400041b2:	inc    DWORD PTR [rip+0x68f4]        # 0x14000aaac
   1400041b8:	mov    eax,r15d
   1400041bb:	jmp    0x140004234
   1400041bd:	mov    rcx,QWORD PTR [rbp+0x5f0]
   1400041c4:	lea    rdx,[rip+0x3805]        # 0x1400079d0
   1400041cb:	call   QWORD PTR [rip+0x30bf]        # 0x140007290
   1400041d1:	mov    rdi,rax
   1400041d4:	test   rax,rax
   1400041d7:	jne    0x1400041e6
   1400041d9:	xor    ecx,ecx
   1400041db:	call   QWORD PTR [rip+0x3097]        # 0x140007278
   1400041e1:	lea    eax,[rdi+0x2]
   1400041e4:	jmp    0x140004234
   1400041e6:	mov    rcx,rax
   1400041e9:	jmp    0x14000421f
   1400041eb:	mov    r8,QWORD PTR [rbp+0x5f0]
   1400041f2:	lea    rax,[rbp+0x260]
   1400041f9:	mov    QWORD PTR [rsp+0x28],rax
   1400041fe:	mov    r9d,r14d
   140004201:	lea    rax,[rsp+0x30]
   140004206:	mov    rdx,r15
   140004209:	mov    rcx,rdi
   14000420c:	mov    QWORD PTR [rsp+0x20],rax
   140004211:	call   0x140003784
   140004216:	mov    ebx,eax
   140004218:	test   eax,eax
   14000421a:	jne    0x140004229
   14000421c:	mov    rcx,rdi
   14000421f:	call   QWORD PTR [rip+0x30db]        # 0x140007300
   140004225:	test   eax,eax
   140004227:	je     0x1400041eb
   140004229:	mov    rcx,rdi
   14000422c:	call   QWORD PTR [rip+0x3076]        # 0x1400072a8
   140004232:	mov    eax,ebx
   140004234:	mov    rbx,QWORD PTR [rsp+0x6e0]
   14000423c:	add    rsp,0x690
   140004243:	pop    r15
   140004245:	pop    r14
   140004247:	pop    r13
   140004249:	pop    r12
   14000424b:	pop    rdi
   14000424c:	pop    rsi
   14000424d:	pop    rbp
   14000424e:	ret    
   14000424f:	int3   
   140004250:	int3   
   140004251:	int3   
   140004252:	int3   
   140004253:	int3   
   140004254:	int3   
   140004255:	int3   
   140004256:	int3   
   140004257:	int3   
   140004258:	int3   
   140004259:	int3   
   14000425a:	int3   
   14000425b:	int3   
   14000425c:	int3   
   14000425d:	int3   
   14000425e:	int3   
   14000425f:	int3   
   140004260:	mov    r11,rsp
   140004263:	mov    QWORD PTR [r11+0x8],rbx
   140004267:	mov    QWORD PTR [r11+0x10],rbp
   14000426b:	mov    QWORD PTR [r11+0x18],rsi
   14000426f:	push   rdi
   140004270:	sub    rsp,0x40
   140004274:	mov    rax,QWORD PTR [rsp+0x70]
   140004279:	xor    ebp,ebp
   14000427b:	mov    DWORD PTR [r11-0x10],r9d
   14000427f:	mov    edi,r9d
   140004282:	mov    QWORD PTR [r11-0x18],rbp
   140004286:	mov    rsi,rcx
   140004289:	mov    QWORD PTR [r11-0x20],rbp
   14000428d:	mov    r9,QWORD PTR [rax]
   140004290:	lea    r8d,[rbp+0x1]
   140004294:	call   0x140001c14
   140004299:	mov    ebx,eax
   14000429b:	test   eax,eax
   14000429d:	je     0x1400042e1
   14000429f:	mov    rcx,QWORD PTR [rip+0x67fa]        # 0x14000aaa0
   1400042a6:	mov    rdx,rsi
   1400042a9:	call   0x140001008
   1400042ae:	mov    rcx,QWORD PTR [rip+0x67eb]        # 0x14000aaa0
   1400042b5:	lea    rdx,[rip+0x31d4]        # 0x140007490
   1400042bc:	call   0x140001008
   1400042c1:	mov    rdx,QWORD PTR [rip+0x67d8]        # 0x14000aaa0
   1400042c8:	mov    r8d,ebx
   1400042cb:	mov    ecx,edi
   1400042cd:	call   0x140001160
   1400042d2:	inc    DWORD PTR [rip+0x67d4]        # 0x14000aaac
   1400042d8:	and    dil,0x20
   1400042dc:	cmovne ebx,ebp
   1400042df:	jmp    0x1400042f8
   1400042e1:	mov    rdx,QWORD PTR [rip+0x67b0]        # 0x14000aa98
   1400042e8:	mov    r9,rsi
   1400042eb:	mov    r8d,0x2715
   1400042f1:	mov    ecx,edi
   1400042f3:	call   0x140001160
   1400042f8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400042fd:	mov    eax,ebx
   1400042ff:	mov    rbx,QWORD PTR [rsp+0x50]
   140004304:	mov    rsi,QWORD PTR [rsp+0x60]
   140004309:	add    rsp,0x40
   14000430d:	pop    rdi
   14000430e:	ret    
   14000430f:	int3   
   140004310:	int3   
   140004311:	int3   
   140004312:	int3   
   140004313:	int3   
   140004314:	int3   
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	int3   
   140004319:	int3   
   14000431a:	int3   
   14000431b:	int3   
   14000431c:	int3   
   14000431d:	int3   
   14000431e:	int3   
   14000431f:	int3   
   140004320:	mov    r11,rsp
   140004323:	mov    QWORD PTR [r11+0x8],rbx
   140004327:	mov    QWORD PTR [r11+0x10],rbp
   14000432b:	mov    QWORD PTR [r11+0x18],rsi
   14000432f:	mov    QWORD PTR [r11+0x20],rdi
   140004333:	push   r12
   140004335:	push   r14
   140004337:	push   r15
   140004339:	sub    rsp,0x20
   14000433d:	mov    rax,QWORD PTR [rsp+0x60]
   140004342:	lea    rdx,[r11+0x28]
   140004346:	xor    r12d,r12d
   140004349:	mov    r8d,r9d
   14000434c:	mov    ebp,r9d
   14000434f:	mov    QWORD PTR [r11+0x28],r12
   140004353:	mov    r14,rcx
   140004356:	mov    r15,QWORD PTR [rax]
   140004359:	call   0x140001dbc
   14000435e:	mov    ebx,eax
   140004360:	test   eax,eax
   140004362:	je     0x1400043a9
   140004364:	mov    rcx,QWORD PTR [rip+0x6735]        # 0x14000aaa0
   14000436b:	mov    rdx,r14
   14000436e:	call   0x140001008
   140004373:	mov    rcx,QWORD PTR [rip+0x6726]        # 0x14000aaa0
   14000437a:	lea    rdx,[rip+0x310f]        # 0x140007490
   140004381:	call   0x140001008
   140004386:	mov    rdx,QWORD PTR [rip+0x6713]        # 0x14000aaa0
   14000438d:	mov    r8d,ebx
   140004390:	mov    ecx,ebp
   140004392:	call   0x140001160
   140004397:	inc    DWORD PTR [rip+0x670f]        # 0x14000aaac
   14000439d:	and    bpl,0x20
   1400043a1:	cmovne ebx,r12d
   1400043a5:	mov    eax,ebx
   1400043a7:	jmp    0x140004414
   1400043a9:	inc    DWORD PTR [rip+0x66e1]        # 0x14000aa90
   1400043af:	mov    rbx,QWORD PTR [rsp+0x60]
   1400043b4:	test   rbx,rbx
   1400043b7:	je     0x140004412
   1400043b9:	lea    rdi,[rbx+0x8]
   1400043bd:	mov    esi,r12d
   1400043c0:	cmp    r12w,WORD PTR [rbx+0x4]
   1400043c5:	jae    0x140004409
   1400043c7:	lea    rdx,[rdi+0x8]
   1400043cb:	mov    rcx,r15
   1400043ce:	call   QWORD PTR [rip+0x2dec]        # 0x1400071c0
   1400043d4:	test   eax,eax
   1400043d6:	jne    0x1400043eb
   1400043d8:	movzx  eax,WORD PTR [rdi+0x2]
   1400043dc:	inc    esi
   1400043de:	add    rdi,rax
   1400043e1:	movzx  eax,WORD PTR [rbx+0x4]
   1400043e5:	cmp    esi,eax
   1400043e7:	jl     0x1400043c7
   1400043e9:	jmp    0x140004409
   1400043eb:	mov    rdx,QWORD PTR [rip+0x66a6]        # 0x14000aa98
   1400043f2:	mov    r9,r14
   1400043f5:	mov    r8d,0x2725
   1400043fb:	mov    ecx,ebp
   1400043fd:	call   0x140001160
   140004402:	mov    BYTE PTR [rip+0x669f],0x1        # 0x14000aaa8
   140004409:	mov    rcx,rbx
   14000440c:	call   QWORD PTR [rip+0x2eae]        # 0x1400072c0
   140004412:	xor    eax,eax
   140004414:	mov    rbx,QWORD PTR [rsp+0x40]
   140004419:	mov    rbp,QWORD PTR [rsp+0x48]
   14000441e:	mov    rsi,QWORD PTR [rsp+0x50]
   140004423:	mov    rdi,QWORD PTR [rsp+0x58]
   140004428:	add    rsp,0x20
   14000442c:	pop    r15
   14000442e:	pop    r14
   140004430:	pop    r12
   140004432:	ret    
   140004433:	int3   
   140004434:	int3   
   140004435:	int3   
   140004436:	int3   
   140004437:	int3   
   140004438:	int3   
   140004439:	int3   
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	mov    rax,rsp
   140004443:	mov    QWORD PTR [rax+0x8],rbx
   140004447:	mov    QWORD PTR [rax+0x10],rbp
   14000444b:	mov    QWORD PTR [rax+0x18],rsi
   14000444f:	push   rdi
   140004450:	sub    rsp,0x30
   140004454:	mov    r8d,r9d
   140004457:	lea    rdx,[rax-0x18]
   14000445b:	mov    esi,r9d
   14000445e:	mov    rbp,rcx
   140004461:	call   0x140001dbc
   140004466:	mov    edi,eax
   140004468:	mov    ebx,0x1
   14000446d:	test   eax,eax
   14000446f:	jne    0x140004546
   140004475:	mov    rdi,QWORD PTR [rsp+0x20]
   14000447a:	test   rdi,rdi
   14000447d:	je     0x1400044f5
   14000447f:	movzx  r11d,WORD PTR [rdi+0x4]
   140004484:	lea    rcx,[rdi+0x8]
   140004488:	xor    r8d,r8d
   14000448b:	xor    r9d,r9d
   14000448e:	xor    r10d,r10d
   140004491:	xor    edx,edx
   140004493:	test   r11d,r11d
   140004496:	je     0x1400044f5
   140004498:	test   BYTE PTR [rcx+0x1],0x10
   14000449c:	jne    0x1400044b6
   14000449e:	test   r10d,r10d
   1400044a1:	jne    0x1400044dc
   1400044a3:	cmp    BYTE PTR [rcx],bl
   1400044a5:	je     0x1400044b1
   1400044a7:	cmp    BYTE PTR [rcx],0xa
   1400044aa:	je     0x1400044b1
   1400044ac:	mov    r8d,ebx
   1400044af:	jmp    0x1400044cc
   1400044b1:	test   r8d,r8d
   1400044b4:	jmp    0x1400044ca
   1400044b6:	mov    r10d,ebx
   1400044b9:	cmp    BYTE PTR [rcx],bl
   1400044bb:	je     0x1400044c7
   1400044bd:	cmp    BYTE PTR [rcx],0xa
   1400044c0:	je     0x1400044c7
   1400044c2:	mov    r9d,ebx
   1400044c5:	jmp    0x1400044cc
   1400044c7:	test   r9d,r9d
   1400044ca:	jne    0x1400044dc
   1400044cc:	movzx  eax,WORD PTR [rcx+0x2]
   1400044d0:	add    edx,ebx
   1400044d2:	add    rcx,rax
   1400044d5:	cmp    edx,r11d
   1400044d8:	jb     0x140004498
   1400044da:	jmp    0x1400044f5
   1400044dc:	mov    rdx,QWORD PTR [rip+0x65b5]        # 0x14000aa98
   1400044e3:	mov    r9,rbp
   1400044e6:	mov    r8d,0x2721
   1400044ec:	mov    ecx,esi
   1400044ee:	call   0x140001160
   1400044f3:	xor    bl,bl
   1400044f5:	mov    rcx,rdi
   1400044f8:	call   QWORD PTR [rip+0x2ca2]        # 0x1400071a0
   1400044fe:	test   eax,eax
   140004500:	jne    0x14000451b
   140004502:	mov    rdx,QWORD PTR [rip+0x658f]        # 0x14000aa98
   140004509:	mov    r9,rbp
   14000450c:	mov    r8d,0x2722
   140004512:	mov    ecx,esi
   140004514:	call   0x140001160
   140004519:	xor    bl,bl
   14000451b:	test   bl,bl
   14000451d:	je     0x14000453b
   14000451f:	test   sil,sil
   140004522:	js     0x14000453b
   140004524:	mov    rdx,QWORD PTR [rip+0x656d]        # 0x14000aa98
   14000452b:	mov    r9,rbp
   14000452e:	mov    r8d,0x2715
   140004534:	mov    ecx,esi
   140004536:	call   0x140001160
   14000453b:	mov    rcx,rdi
   14000453e:	call   QWORD PTR [rip+0x2d7c]        # 0x1400072c0
   140004544:	jmp    0x14000457f
   140004546:	mov    rcx,QWORD PTR [rip+0x6553]        # 0x14000aaa0
   14000454d:	mov    rdx,rbp
   140004550:	call   0x140001008
   140004555:	mov    rcx,QWORD PTR [rip+0x6544]        # 0x14000aaa0
   14000455c:	lea    rdx,[rip+0x2f2d]        # 0x140007490
   140004563:	call   0x140001008
   140004568:	mov    rdx,QWORD PTR [rip+0x6531]        # 0x14000aaa0
   14000456f:	mov    r8d,edi
   140004572:	xor    ecx,ecx
   140004574:	call   0x140001160
   140004579:	add    DWORD PTR [rip+0x652d],ebx        # 0x14000aaac
   14000457f:	mov    rbx,QWORD PTR [rsp+0x40]
   140004584:	xor    eax,eax
   140004586:	mov    rbp,QWORD PTR [rsp+0x48]
   14000458b:	mov    rsi,QWORD PTR [rsp+0x50]
   140004590:	add    rsp,0x30
   140004594:	pop    rdi
   140004595:	ret    
   140004596:	int3   
   140004597:	int3   
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	mov    rax,rsp
   1400045a3:	mov    QWORD PTR [rax+0x8],rbx
   1400045a7:	mov    QWORD PTR [rax+0x10],rbp
   1400045ab:	mov    QWORD PTR [rax+0x18],rsi
   1400045af:	push   rdi
   1400045b0:	sub    rsp,0x50
   1400045b4:	mov    rsi,rcx
   1400045b7:	mov    QWORD PTR [rax-0x18],0x80002
   1400045bf:	lea    rcx,[rax-0x18]
   1400045c3:	mov    edi,r9d
   1400045c6:	xor    ebp,ebp
   1400045c8:	call   QWORD PTR [rip+0x2bd2]        # 0x1400071a0
   1400045ce:	test   eax,eax
   1400045d0:	jne    0x1400045dc
   1400045d2:	mov    eax,0x54f
   1400045d7:	jmp    0x140004661
   1400045dc:	mov    DWORD PTR [rsp+0x38],edi
   1400045e0:	lea    rax,[rsp+0x40]
   1400045e5:	mov    QWORD PTR [rsp+0x30],rbp
   1400045ea:	xor    r9d,r9d
   1400045ed:	mov    r8d,0x20000004
   1400045f3:	mov    QWORD PTR [rsp+0x28],rax
   1400045f8:	mov    rcx,rsi
   1400045fb:	call   0x140001c14
   140004600:	mov    ebx,eax
   140004602:	test   eax,eax
   140004604:	je     0x140004648
   140004606:	mov    rcx,QWORD PTR [rip+0x6493]        # 0x14000aaa0
   14000460d:	mov    rdx,rsi
   140004610:	call   0x140001008
   140004615:	mov    rcx,QWORD PTR [rip+0x6484]        # 0x14000aaa0
   14000461c:	lea    rdx,[rip+0x2e6d]        # 0x140007490
   140004623:	call   0x140001008
   140004628:	mov    rdx,QWORD PTR [rip+0x6471]        # 0x14000aaa0
   14000462f:	mov    r8d,ebx
   140004632:	mov    ecx,edi
   140004634:	call   0x140001160
   140004639:	inc    DWORD PTR [rip+0x646d]        # 0x14000aaac
   14000463f:	and    dil,0x20
   140004643:	cmovne ebx,ebp
   140004646:	jmp    0x14000465f
   140004648:	mov    rdx,QWORD PTR [rip+0x6449]        # 0x14000aa98
   14000464f:	mov    r9,rsi
   140004652:	mov    r8d,0x2715
   140004658:	mov    ecx,edi
   14000465a:	call   0x140001160
   14000465f:	mov    eax,ebx
   140004661:	mov    rbx,QWORD PTR [rsp+0x60]
   140004666:	mov    rbp,QWORD PTR [rsp+0x68]
   14000466b:	mov    rsi,QWORD PTR [rsp+0x70]
   140004670:	add    rsp,0x50
   140004674:	pop    rdi
   140004675:	ret    
   140004676:	int3   
   140004677:	int3   
   140004678:	int3   
   140004679:	int3   
   14000467a:	int3   
   14000467b:	int3   
   14000467c:	int3   
   14000467d:	int3   
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    r11,rsp
   140004683:	mov    QWORD PTR [r11+0x10],rbx
   140004687:	mov    QWORD PTR [r11+0x20],rsi
   14000468b:	mov    DWORD PTR [r11+0x18],r8d
   14000468f:	mov    QWORD PTR [r11+0x8],rcx
   140004693:	push   rdi
   140004694:	push   r12
   140004696:	push   r13
   140004698:	push   r14
   14000469a:	push   r15
   14000469c:	sub    rsp,0x60
   1400046a0:	mov    r15d,r9d
   1400046a3:	mov    rdi,rcx
   1400046a6:	mov    rax,QWORD PTR [rsp+0xb0]
   1400046ae:	mov    r14d,0x8
   1400046b4:	mov    r12,QWORD PTR [rax+r14*1-0x8]
   1400046b9:	xor    eax,eax
   1400046bb:	mov    QWORD PTR [r11+0x28],rax
   1400046bf:	mov    r13d,eax
   1400046c2:	mov    QWORD PTR [r11-0x38],rax
   1400046c6:	lea    esi,[rax+0x4]
   1400046c9:	mov    r8d,r9d
   1400046cc:	lea    rdx,[r11+0x28]
   1400046d0:	call   0x140001dbc
   1400046d5:	mov    ebx,eax
   1400046d7:	xor    r10d,r10d
   1400046da:	test   eax,eax
   1400046dc:	je     0x140004728
   1400046de:	mov    rdx,rdi
   1400046e1:	mov    rcx,QWORD PTR [rip+0x63b8]        # 0x14000aaa0
   1400046e8:	call   0x140001008
   1400046ed:	lea    rdx,[rip+0x2d9c]        # 0x140007490
   1400046f4:	mov    rcx,QWORD PTR [rip+0x63a5]        # 0x14000aaa0
   1400046fb:	call   0x140001008
   140004700:	mov    r8d,ebx
   140004703:	mov    rdx,QWORD PTR [rip+0x6396]        # 0x14000aaa0
   14000470a:	mov    ecx,r15d
   14000470d:	call   0x140001160
   140004712:	inc    DWORD PTR [rip+0x6394]        # 0x14000aaac
   140004718:	xor    eax,eax
   14000471a:	and    r15b,0x20
   14000471e:	cmovne ebx,eax
   140004721:	mov    eax,ebx
   140004723:	jmp    0x1400049d2
   140004728:	mov    rdi,QWORD PTR [rsp+0xb0]
   140004730:	test   rdi,rdi
   140004733:	jne    0x1400047ba
   140004739:	mov    rcx,r14
   14000473c:	call   QWORD PTR [rip+0x2bf6]        # 0x140007338
   140004742:	mov    rdi,rax
   140004745:	mov    QWORD PTR [rsp+0xb0],rax
   14000474d:	xor    eax,eax
   14000474f:	test   rdi,rdi
   140004752:	jne    0x1400047a5
   140004754:	mov    rdx,QWORD PTR [rsp+0x90]
   14000475c:	mov    rcx,QWORD PTR [rip+0x633d]        # 0x14000aaa0
   140004763:	call   0x140001008
   140004768:	lea    rdx,[rip+0x2d21]        # 0x140007490
   14000476f:	mov    rcx,QWORD PTR [rip+0x632a]        # 0x14000aaa0
   140004776:	call   0x140001008
   14000477b:	mov    r8d,r14d
   14000477e:	mov    rdx,QWORD PTR [rip+0x631b]        # 0x14000aaa0
   140004785:	mov    ecx,r15d
   140004788:	call   0x140001160
   14000478d:	inc    DWORD PTR [rip+0x6319]        # 0x14000aaac
   140004793:	xor    eax,eax
   140004795:	and    r15b,0x20
   140004799:	cmovne r14d,eax
   14000479d:	mov    eax,r14d
   1400047a0:	jmp    0x1400049d2
   1400047a5:	mov    r8d,0x2
   1400047ab:	mov    edx,r14d
   1400047ae:	mov    rcx,rdi
   1400047b1:	call   QWORD PTR [rip+0x29d9]        # 0x140007190
   1400047b7:	xor    r10d,r10d
   1400047ba:	mov    r14d,r10d
   1400047bd:	mov    DWORD PTR [rsp+0x48],r10d
   1400047c2:	cmp    r14d,DWORD PTR [r12]
   1400047c6:	jge    0x140004911
   1400047cc:	test   ebx,ebx
   1400047ce:	jne    0x14000494f
   1400047d4:	movsxd rax,r14d
   1400047d7:	lea    rdx,[rax+rax*4]
   1400047db:	lea    r8,[r12+0x8]
   1400047e0:	lea    r8,[r8+rdx*8]
   1400047e4:	mov    r9d,DWORD PTR [r8]
   1400047e7:	mov    ecx,r9d
   1400047ea:	and    ecx,0xf
   1400047ed:	sub    ecx,0x1
   1400047f0:	je     0x1400048d2
   1400047f6:	sub    ecx,0x1
   1400047f9:	je     0x1400048af
   1400047ff:	sub    ecx,0x1
   140004802:	je     0x140004896
   140004808:	sub    ecx,0x1
   14000480b:	je     0x140004869
   14000480d:	cmp    ecx,0x4
   140004810:	je     0x140004824
   140004812:	lea    rcx,[rip+0x31e7]        # 0x140007a00
   140004819:	call   QWORD PTR [rip+0x2a39]        # 0x140007258
   14000481f:	jmp    0x140004901
   140004824:	bt     r9d,0x8
   140004829:	jae    0x140004831
   14000482b:	bts    esi,0x1d
   14000482f:	jmp    0x14000483c
   140004831:	bt     r9d,0x9
   140004836:	jae    0x140004845
   140004838:	bts    esi,0x1f
   14000483c:	mov    DWORD PTR [rsp+0x44],esi
   140004840:	jmp    0x140004904
   140004845:	bt     r9d,0xa
   14000484a:	jae    0x140004904
   140004850:	bts    esi,0x1f
   140004854:	mov    DWORD PTR [rsp+0x44],esi
   140004858:	mov    rcx,rdi
   14000485b:	call   0x140001b74
   140004860:	mov    DWORD PTR [rsp+0x40],eax
   140004864:	jmp    0x1400048ff
   140004869:	cmp    DWORD PTR [rsp+0xa0],r10d
   140004871:	jne    0x14000487e
   140004873:	cmp    BYTE PTR [r12+rdx*8+0x20],r10b
   140004878:	jne    0x140004904
   14000487e:	mov    rdx,r8
   140004881:	lea    rcx,[rsp+0x50]
   140004886:	call   0x140001ab0
   14000488b:	mov    DWORD PTR [rsp+0x40],eax
   14000488f:	mov    r13,QWORD PTR [rsp+0x50]
   140004894:	jmp    0x1400048ff
   140004896:	and    r9d,0xff0
   14000489d:	mov    r8,QWORD PTR [r12+rdx*8+0x18]
   1400048a2:	mov    rdx,rdi
   1400048a5:	mov    ecx,r9d
   1400048a8:	call   0x1400016a4
   1400048ad:	jmp    0x140004860
   1400048af:	cmp    DWORD PTR [rsp+0xa0],r10d
   1400048b7:	jne    0x1400048c0
   1400048b9:	cmp    BYTE PTR [r12+rdx*8+0x20],r10b
   1400048be:	jne    0x140004904
   1400048c0:	mov    rdx,r8
   1400048c3:	lea    rcx,[rsp+0xb0]
   1400048cb:	call   0x140001778
   1400048d0:	jmp    0x1400048f3
   1400048d2:	cmp    DWORD PTR [rsp+0xa0],r10d
   1400048da:	jne    0x1400048e3
   1400048dc:	cmp    BYTE PTR [r12+rdx*8+0x20],r10b
   1400048e1:	jne    0x140004904
   1400048e3:	mov    rdx,r8
   1400048e6:	lea    rcx,[rsp+0xb0]
   1400048ee:	call   0x140001908
   1400048f3:	mov    DWORD PTR [rsp+0x40],eax
   1400048f7:	mov    rdi,QWORD PTR [rsp+0xb0]
   1400048ff:	mov    ebx,eax
   140004901:	xor    r10d,r10d
   140004904:	inc    r14d
   140004907:	mov    DWORD PTR [rsp+0x48],r14d
   14000490c:	jmp    0x1400047c2
   140004911:	test   ebx,ebx
   140004913:	jne    0x14000494f
   140004915:	mov    rax,r13
   140004918:	neg    rax
   14000491b:	sbb    r8d,r8d
   14000491e:	and    r8d,0x10
   140004922:	or     r8d,esi
   140004925:	mov    DWORD PTR [rsp+0x38],r15d
   14000492a:	mov    QWORD PTR [rsp+0x30],r13
   14000492f:	mov    QWORD PTR [rsp+0x28],rdi
   140004934:	xor    r9d,r9d
   140004937:	mov    rsi,QWORD PTR [rsp+0x90]
   14000493f:	mov    rcx,rsi
   140004942:	call   0x140001c14
   140004947:	mov    ebx,eax
   140004949:	mov    DWORD PTR [rsp+0x40],eax
   14000494d:	jmp    0x140004957
   14000494f:	mov    rsi,QWORD PTR [rsp+0x90]
   140004957:	mov    rcx,rdi
   14000495a:	call   QWORD PTR [rip+0x2960]        # 0x1400072c0
   140004960:	mov    rcx,r13
   140004963:	call   QWORD PTR [rip+0x2957]        # 0x1400072c0
   140004969:	xor    edi,edi
   14000496b:	test   ebx,ebx
   14000496d:	je     0x1400049b5
   14000496f:	mov    rdx,rsi
   140004972:	mov    rcx,QWORD PTR [rip+0x6127]        # 0x14000aaa0
   140004979:	call   0x140001008
   14000497e:	lea    rdx,[rip+0x2b0b]        # 0x140007490
   140004985:	mov    rcx,QWORD PTR [rip+0x6114]        # 0x14000aaa0
   14000498c:	call   0x140001008
   140004991:	mov    r8d,ebx
   140004994:	mov    rdx,QWORD PTR [rip+0x6105]        # 0x14000aaa0
   14000499b:	mov    ecx,r15d
   14000499e:	call   0x140001160
   1400049a3:	inc    DWORD PTR [rip+0x6103]        # 0x14000aaac
   1400049a9:	and    r15b,0x20
   1400049ad:	cmovne ebx,edi
   1400049b0:	jmp    0x140004721
   1400049b5:	mov    r9,rsi
   1400049b8:	mov    r8d,0x2715
   1400049be:	mov    rdx,QWORD PTR [rip+0x60d3]        # 0x14000aa98
   1400049c5:	mov    ecx,r15d
   1400049c8:	call   0x140001160
   1400049cd:	jmp    0x140004721
   1400049d2:	lea    r11,[rsp+0x60]
   1400049d7:	mov    rbx,QWORD PTR [r11+0x38]
   1400049db:	mov    rsi,QWORD PTR [r11+0x48]
   1400049df:	mov    rsp,r11
   1400049e2:	pop    r15
   1400049e4:	pop    r14
   1400049e6:	pop    r13
   1400049e8:	pop    r12
   1400049ea:	pop    rdi
   1400049eb:	ret    
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	int3   
   1400049f1:	int3   
   1400049f2:	int3   
   1400049f3:	int3   
   1400049f4:	mov    rax,rsp
   1400049f7:	mov    QWORD PTR [rax+0x10],rbx
   1400049fb:	mov    QWORD PTR [rax+0x18],rbp
   1400049ff:	mov    QWORD PTR [rax+0x20],rsi
   140004a03:	mov    QWORD PTR [rax+0x8],rcx
   140004a07:	push   rdi
   140004a08:	push   r12
   140004a0a:	push   r13
   140004a0c:	push   r14
   140004a0e:	push   r15
   140004a10:	sub    rsp,0x30
   140004a14:	xor    r12d,r12d
   140004a17:	mov    rbx,r8
   140004a1a:	mov    r13d,edx
   140004a1d:	mov    rax,rcx
   140004a20:	mov    ebp,r12d
   140004a23:	cmp    DWORD PTR [r8],r12d
   140004a26:	jle    0x140004c38
   140004a2c:	lea    rsi,[r8+0x24]
   140004a30:	lea    edx,[r12+0x3a]
   140004a35:	mov    ecx,DWORD PTR [rsi-0x1c]
   140004a38:	mov    rdi,QWORD PTR [rsi-0x14]
   140004a3c:	and    ecx,0xf
   140004a3f:	sub    ecx,0x1
   140004a42:	je     0x140004b9e
   140004a48:	sub    ecx,0x1
   140004a4b:	je     0x140004b3a
   140004a51:	sub    ecx,0x1
   140004a54:	je     0x140004b13
   140004a5a:	sub    ecx,0x1
   140004a5d:	je     0x140004a7a
   140004a5f:	cmp    ecx,0x4
   140004a62:	je     0x140004c25
   140004a68:	lea    rcx,[rip+0x2f91]        # 0x140007a00
   140004a6f:	call   QWORD PTR [rip+0x27e3]        # 0x140007258
   140004a75:	jmp    0x140004c20
   140004a7a:	movsxd rax,ebp
   140004a7d:	lea    r9,[rbx+0x24]
   140004a81:	lea    r8,[rbx+0x20]
   140004a85:	mov    rcx,rdi
   140004a88:	lea    rdx,[rbx+0x18]
   140004a8c:	lea    r15,[rax+rax*4]
   140004a90:	lea    r9,[r9+r15*8]
   140004a94:	lea    r8,[r8+r15*8]
   140004a98:	lea    rdx,[rdx+r15*8]
   140004a9c:	call   0x140001f2c
   140004aa1:	mov    r14d,eax
   140004aa4:	test   eax,eax
   140004aa6:	jne    0x140004ad2
   140004aa8:	mov    eax,DWORD PTR [rsi]
   140004aaa:	lea    rcx,[rbx+0x28]
   140004aae:	mov    r9b,BYTE PTR [rsi-0x4]
   140004ab2:	lea    rcx,[rcx+r15*8]
   140004ab6:	mov    r8,QWORD PTR [rsi-0xc]
   140004aba:	lea    edx,[r14+0x11]
   140004abe:	mov    DWORD PTR [rsp+0x20],eax
   140004ac2:	call   0x140001424
   140004ac7:	mov    r14d,eax
   140004aca:	test   eax,eax
   140004acc:	je     0x140004c20
   140004ad2:	mov    rcx,QWORD PTR [rip+0x5fc7]        # 0x14000aaa0
   140004ad9:	mov    rdx,rdi
   140004adc:	call   0x140001008
   140004ae1:	mov    rcx,QWORD PTR [rip+0x5fb8]        # 0x14000aaa0
   140004ae8:	lea    rdx,[rip+0x29a1]        # 0x140007490
   140004aef:	call   0x140001008
   140004af4:	mov    rdx,QWORD PTR [rip+0x5fa5]        # 0x14000aaa0
   140004afb:	mov    r8d,r14d
   140004afe:	xor    ecx,ecx
   140004b00:	call   0x140001160
   140004b05:	inc    DWORD PTR [rip+0x5fa1]        # 0x14000aaac
   140004b0b:	mov    eax,r14d
   140004b0e:	jmp    0x140004c4d
   140004b13:	movsxd rax,ebp
   140004b16:	mov    rcx,rdi
   140004b19:	lea    rdx,[rax*4+0x3]
   140004b21:	add    rdx,rax
   140004b24:	lea    rdx,[rbx+rdx*8]
   140004b28:	call   0x1400020cc
   140004b2d:	test   eax,eax
   140004b2f:	jne    0x140004c4d
   140004b35:	jmp    0x140004c20
   140004b3a:	mov    rcx,rdi
   140004b3d:	call   QWORD PTR [rip+0x2755]        # 0x140007298
   140004b43:	mov    r14,rax
   140004b46:	test   rax,rax
   140004b49:	je     0x140004cb1
   140004b4f:	movsxd rcx,ebp
   140004b52:	lea    rdx,[rbx+0x18]
   140004b56:	mov    WORD PTR [rax],r12w
   140004b5a:	lea    r12,[rcx+rcx*4]
   140004b5e:	mov    rcx,rdi
   140004b61:	lea    rdx,[rdx+r12*8]
   140004b65:	call   0x1400020cc
   140004b6a:	mov    r15d,eax
   140004b6d:	test   eax,eax
   140004b6f:	jne    0x140004c73
   140004b75:	lea    r8,[rbx+0x24]
   140004b79:	lea    rdx,[rbx+0x20]
   140004b7d:	lea    r8,[r8+r12*8]
   140004b81:	lea    rdx,[rdx+r12*8]
   140004b85:	lea    rcx,[r14+0x2]
   140004b89:	call   0x1400014bc
   140004b8e:	mov    r15d,eax
   140004b91:	test   eax,eax
   140004b93:	jne    0x140004c6a
   140004b99:	lea    edx,[rax+0x1]
   140004b9c:	jmp    0x140004bfb
   140004b9e:	mov    rcx,rdi
   140004ba1:	call   QWORD PTR [rip+0x26f1]        # 0x140007298
   140004ba7:	mov    r14,rax
   140004baa:	test   rax,rax
   140004bad:	je     0x140004cb1
   140004bb3:	movsxd rcx,ebp
   140004bb6:	lea    rdx,[rbx+0x18]
   140004bba:	mov    WORD PTR [rax],r12w
   140004bbe:	lea    r12,[rcx+rcx*4]
   140004bc2:	mov    rcx,rdi
   140004bc5:	lea    rdx,[rdx+r12*8]
   140004bc9:	call   0x1400020cc
   140004bce:	mov    r15d,eax
   140004bd1:	test   eax,eax
   140004bd3:	jne    0x140004c73
   140004bd9:	lea    r8,[rbx+0x24]
   140004bdd:	lea    rdx,[rbx+0x20]
   140004be1:	lea    r8,[r8+r12*8]
   140004be5:	lea    rdx,[rdx+r12*8]
   140004be9:	lea    rcx,[r14+0x2]
   140004bed:	call   0x1400014bc
   140004bf2:	mov    r15d,eax
   140004bf5:	test   eax,eax
   140004bf7:	jne    0x140004c6a
   140004bf9:	xor    edx,edx
   140004bfb:	mov    eax,DWORD PTR [rsi]
   140004bfd:	lea    rcx,[rbx+0x28]
   140004c01:	mov    r9b,BYTE PTR [rsi-0x4]
   140004c05:	lea    rcx,[rcx+r12*8]
   140004c09:	mov    r8,QWORD PTR [rsi-0xc]
   140004c0d:	mov    DWORD PTR [rsp+0x20],eax
   140004c11:	call   0x140001424
   140004c16:	xor    r12d,r12d
   140004c19:	mov    r15d,eax
   140004c1c:	test   eax,eax
   140004c1e:	jne    0x140004c6a
   140004c20:	mov    edx,0x3a
   140004c25:	inc    ebp
   140004c27:	add    rsi,0x28
   140004c2b:	cmp    ebp,DWORD PTR [rbx]
   140004c2d:	jl     0x140004a35
   140004c33:	mov    rax,QWORD PTR [rsp+0x60]
   140004c38:	mov    r9,rbx
   140004c3b:	lea    r8,[rip+0xfffffffffffffa3e]        # 0x140004680
   140004c42:	mov    edx,r13d
   140004c45:	mov    rcx,rax
   140004c48:	call   0x140003348
   140004c4d:	mov    rbx,QWORD PTR [rsp+0x68]
   140004c52:	mov    rbp,QWORD PTR [rsp+0x70]
   140004c57:	mov    rsi,QWORD PTR [rsp+0x78]
   140004c5c:	add    rsp,0x30
   140004c60:	pop    r15
   140004c62:	pop    r14
   140004c64:	pop    r13
   140004c66:	pop    r12
   140004c68:	pop    rdi
   140004c69:	ret    
   140004c6a:	mov    eax,0x3a
   140004c6f:	mov    WORD PTR [r14],ax
   140004c73:	mov    rcx,QWORD PTR [rip+0x5e26]        # 0x14000aaa0
   140004c7a:	mov    rdx,rdi
   140004c7d:	call   0x140001008
   140004c82:	mov    rcx,QWORD PTR [rip+0x5e17]        # 0x14000aaa0
   140004c89:	lea    rdx,[rip+0x2800]        # 0x140007490
   140004c90:	call   0x140001008
   140004c95:	mov    rdx,QWORD PTR [rip+0x5e04]        # 0x14000aaa0
   140004c9c:	mov    r8d,r15d
   140004c9f:	xor    ecx,ecx
   140004ca1:	call   0x140001160
   140004ca6:	inc    DWORD PTR [rip+0x5e00]        # 0x14000aaac
   140004cac:	mov    eax,r15d
   140004caf:	jmp    0x140004c4d
   140004cb1:	mov    eax,0x57
   140004cb6:	jmp    0x140004c4d
   140004cb8:	int3   
   140004cb9:	int3   
   140004cba:	int3   
   140004cbb:	int3   
   140004cbc:	int3   
   140004cbd:	int3   
   140004cbe:	int3   
   140004cbf:	int3   
   140004cc0:	mov    rax,rsp
   140004cc3:	mov    QWORD PTR [rax+0x8],rbx
   140004cc7:	mov    QWORD PTR [rax+0x18],rsi
   140004ccb:	mov    QWORD PTR [rax+0x20],rdi
   140004ccf:	push   rbp
   140004cd0:	push   r12
   140004cd2:	push   r13
   140004cd4:	push   r14
   140004cd6:	push   r15
   140004cd8:	lea    rbp,[rax-0x16c8]
   140004cdf:	mov    eax,0x17a0
   140004ce4:	call   0x1400063a0
   140004ce9:	sub    rsp,rax
   140004cec:	mov    rax,QWORD PTR [rip+0x5315]        # 0x14000a008
   140004cf3:	xor    rax,rsp
   140004cf6:	mov    QWORD PTR [rbp+0x1690],rax
   140004cfd:	xor    r14d,r14d
   140004d00:	mov    DWORD PTR [rsp+0x48],ecx
   140004d04:	mov    r13d,ecx
   140004d07:	mov    DWORD PTR [rsp+0x60],r14d
   140004d0c:	mov    ecx,0xfffffff5
   140004d11:	mov    DWORD PTR [rbp+0x290],r14d
   140004d18:	mov    r12d,r14d
   140004d1b:	mov    DWORD PTR [rbp+0x5c0],r14d
   140004d22:	mov    QWORD PTR [rsp+0x38],r14
   140004d27:	mov    rbx,rdx
   140004d2a:	mov    QWORD PTR [rsp+0x50],r14
   140004d2f:	call   QWORD PTR [rip+0x23bb]        # 0x1400070f0
   140004d35:	mov    ecx,0xfffffff4
   140004d3a:	mov    QWORD PTR [rip+0x5d57],rax        # 0x14000aa98
   140004d41:	call   QWORD PTR [rip+0x23a9]        # 0x1400070f0
   140004d47:	xor    r8d,r8d
   140004d4a:	xor    edx,edx
   140004d4c:	mov    ecx,0x100
   140004d51:	mov    QWORD PTR [rip+0x5d48],rax        # 0x14000aaa0
   140004d58:	call   QWORD PTR [rip+0x237a]        # 0x1400070d8
   140004d5e:	xor    r9d,r9d
   140004d61:	lea    edx,[r14+0x1]
   140004d65:	xor    r8d,r8d
   140004d68:	xor    ecx,ecx
   140004d6a:	call   QWORD PTR [rip+0x2320]        # 0x140007090
   140004d70:	cmp    r13d,0x2
   140004d74:	jge    0x140004d7e
   140004d76:	mov    r14d,0xa0
   140004d7c:	jmp    0x140004dbf
   140004d7e:	mov    rcx,QWORD PTR [rbx+0x8]
   140004d82:	lea    rdx,[rip+0x2c93]        # 0x140007a1c
   140004d89:	call   QWORD PTR [rip+0x2599]        # 0x140007328
   140004d8f:	test   eax,eax
   140004d91:	je     0x140004dbf
   140004d93:	mov    rax,QWORD PTR [rbx+0x8]
   140004d97:	mov    edi,r14d
   140004d9a:	mov    QWORD PTR [rsp+0x40],rax
   140004d9f:	cmp    WORD PTR [rax],0x2f
   140004da3:	jne    0x140004dde
   140004da5:	mov    rdx,QWORD PTR [rip+0x5cf4]        # 0x14000aaa0
   140004dac:	mov    r8d,0x272d
   140004db2:	xor    ecx,ecx
   140004db4:	call   0x140001160
   140004db9:	mov    r14d,0x57
   140004dbf:	mov    rdx,QWORD PTR [rip+0x5cd2]        # 0x14000aa98
   140004dc6:	xor    r9d,r9d
   140004dc9:	mov    r8d,0x2711
   140004dcf:	xor    ecx,ecx
   140004dd1:	call   0x140001160
   140004dd6:	mov    eax,r14d
   140004dd9:	jmp    0x140005a39
   140004dde:	mov    esi,0x2
   140004de3:	cmp    r13d,esi
   140004de6:	jle    0x1400056b2
   140004dec:	movsxd r15,esi
   140004def:	mov    r9,QWORD PTR [rbx+r15*8]
   140004df3:	cmp    WORD PTR [r9],0x2f
   140004df8:	jne    0x140005846
   140004dfe:	lea    rdx,[rip+0x2c23]        # 0x140007a28
   140004e05:	mov    rcx,r9
   140004e08:	call   QWORD PTR [rip+0x251a]        # 0x140007328
   140004e0e:	test   eax,eax
   140004e10:	jne    0x140004e1d
   140004e12:	inc    DWORD PTR [rip+0x5c98]        # 0x14000aab0
   140004e18:	jmp    0x1400056a7
   140004e1d:	mov    rcx,QWORD PTR [rbx+r15*8]
   140004e21:	lea    rdx,[rip+0x2c10]        # 0x140007a38
   140004e28:	call   QWORD PTR [rip+0x24fa]        # 0x140007328
   140004e2e:	test   eax,eax
   140004e30:	jne    0x140004e6e
   140004e32:	test   edi,0xff000000
   140004e38:	jne    0x14000583f
   140004e3e:	lea    ecx,[rsi+0x1]
   140004e41:	cmp    ecx,r13d
   140004e44:	je     0x14000583f
   140004e4a:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140004e4f:	cmp    WORD PTR [rax],0x2f
   140004e53:	je     0x14000583f
   140004e59:	bts    edi,0x1f
   140004e5d:	movsxd rsi,ecx
   140004e60:	mov    rax,QWORD PTR [rbx+rsi*8]
   140004e64:	mov    QWORD PTR [rsp+0x38],rax
   140004e69:	jmp    0x1400056a7
   140004e6e:	mov    rcx,QWORD PTR [rbx+r15*8]
   140004e72:	lea    rdx,[rip+0x2bcf]        # 0x140007a48
   140004e79:	call   QWORD PTR [rip+0x24a9]        # 0x140007328
   140004e7f:	test   eax,eax
   140004e81:	jne    0x140004ebf
   140004e83:	test   edi,0xff000000
   140004e89:	jne    0x14000583f
   140004e8f:	lea    ecx,[rsi+0x1]
   140004e92:	cmp    ecx,r13d
   140004e95:	je     0x14000583f
   140004e9b:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140004ea0:	cmp    WORD PTR [rax],0x2f
   140004ea4:	je     0x14000583f
   140004eaa:	bts    edi,0x1d
   140004eae:	movsxd rsi,ecx
   140004eb1:	mov    rax,QWORD PTR [rbx+rsi*8]
   140004eb5:	mov    QWORD PTR [rsp+0x50],rax
   140004eba:	jmp    0x1400056a7
   140004ebf:	mov    rcx,QWORD PTR [rbx+r15*8]
   140004ec3:	lea    rdx,[rip+0x2b96]        # 0x140007a60
   140004eca:	call   QWORD PTR [rip+0x2458]        # 0x140007328
   140004ed0:	test   eax,eax
   140004ed2:	jne    0x140004f01
   140004ed4:	test   edi,0xff000000
   140004eda:	jne    0x14000583f
   140004ee0:	lea    ecx,[rsi+0x1]
   140004ee3:	cmp    ecx,r13d
   140004ee6:	je     0x14000583f
   140004eec:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140004ef1:	cmp    WORD PTR [rax],0x2f
   140004ef5:	je     0x14000583f
   140004efb:	bts    edi,0x1b
   140004eff:	jmp    0x140004eae
   140004f01:	mov    rcx,QWORD PTR [rbx+r15*8]
   140004f05:	lea    rdx,[rip+0x2b6c]        # 0x140007a78
   140004f0c:	call   QWORD PTR [rip+0x2416]        # 0x140007328
   140004f12:	test   eax,eax
   140004f14:	jne    0x140004f2b
   140004f16:	test   edi,0xff000000
   140004f1c:	jne    0x14000583f
   140004f22:	bts    edi,0x19
   140004f26:	jmp    0x1400056a7
   140004f2b:	mov    rcx,QWORD PTR [rbx+r15*8]
   140004f2f:	lea    rdx,[rip+0x2b52]        # 0x140007a88
   140004f36:	call   QWORD PTR [rip+0x23ec]        # 0x140007328
   140004f3c:	test   eax,eax
   140004f3e:	jne    0x140004f55
   140004f40:	test   edi,0xff000000
   140004f46:	jne    0x14000583f
   140004f4c:	bts    edi,0x18
   140004f50:	jmp    0x1400056a7
   140004f55:	mov    rcx,QWORD PTR [rbx+r15*8]
   140004f59:	lea    rdx,[rip+0x2b38]        # 0x140007a98
   140004f60:	call   QWORD PTR [rip+0x23c2]        # 0x140007328
   140004f66:	test   eax,eax
   140004f68:	jne    0x140004f9a
   140004f6a:	test   edi,0xef000000
   140004f70:	jne    0x14000583f
   140004f76:	lea    ecx,[rsi+0x1]
   140004f79:	cmp    ecx,r13d
   140004f7c:	je     0x14000583f
   140004f82:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140004f87:	cmp    WORD PTR [rax],0x2f
   140004f8b:	je     0x14000583f
   140004f91:	bts    edi,0x1e
   140004f95:	jmp    0x140004e5d
   140004f9a:	mov    rcx,QWORD PTR [rbx+r15*8]
   140004f9e:	lea    rdx,[rip+0x2b0b]        # 0x140007ab0
   140004fa5:	call   QWORD PTR [rip+0x237d]        # 0x140007328
   140004fab:	test   eax,eax
   140004fad:	jne    0x140005046
   140004fb3:	test   edi,0xaf000000
   140004fb9:	jne    0x14000583f
   140004fbf:	lea    ecx,[rsi+0x1]
   140004fc2:	cmp    ecx,r13d
   140004fc5:	je     0x14000583f
   140004fcb:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140004fd0:	cmp    WORD PTR [rax],0x2f
   140004fd4:	je     0x14000583f
   140004fda:	lea    eax,[rsi+0x2]
   140004fdd:	cmp    eax,r13d
   140004fe0:	je     0x14000583f
   140004fe6:	mov    rax,QWORD PTR [rbx+r15*8+0x10]
   140004feb:	cmp    WORD PTR [rax],0x2f
   140004fef:	je     0x14000583f
   140004ff5:	movsxd rsi,ecx
   140004ff8:	bts    edi,0x1c
   140004ffc:	mov    eax,0x64
   140005001:	mov    rcx,QWORD PTR [rbx+rsi*8]
   140005005:	inc    esi
   140005007:	cmp    r12d,eax
   14000500a:	je     0x140005864
   140005010:	movsxd rax,r12d
   140005013:	mov    QWORD PTR [rsp+rax*8+0x68],rcx
   140005018:	movsxd rcx,DWORD PTR [rbp+0x290]
   14000501f:	mov    r12d,DWORD PTR [rsp+0x60]
   140005024:	inc    r12d
   140005027:	movsxd rax,esi
   14000502a:	mov    DWORD PTR [rsp+0x60],r12d
   14000502f:	mov    rax,QWORD PTR [rbx+rax*8]
   140005033:	mov    QWORD PTR [rbp+rcx*8+0x298],rax
   14000503b:	inc    DWORD PTR [rbp+0x290]
   140005041:	jmp    0x1400056a7
   140005046:	mov    rcx,QWORD PTR [rbx+r15*8]
   14000504a:	lea    rdx,[rip+0x2a77]        # 0x140007ac8
   140005051:	mov    r8d,0x6
   140005057:	call   QWORD PTR [rip+0x2243]        # 0x1400072a0
   14000505d:	test   eax,eax
   14000505f:	jne    0x1400051a2
   140005065:	test   edi,0xfb000000
   14000506b:	jne    0x14000583f
   140005071:	lea    r12d,[rsi+0x1]
   140005075:	cmp    r12d,r13d
   140005078:	je     0x14000583f
   14000507e:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140005083:	cmp    WORD PTR [rax],0x2f
   140005087:	je     0x14000583f
   14000508d:	mov    rcx,QWORD PTR [rbx+r15*8]
   140005091:	mov    edx,0x3a
   140005096:	bts    edi,0x1a
   14000509a:	call   QWORD PTR [rip+0x21f8]        # 0x140007298
   1400050a0:	test   rax,rax
   1400050a3:	jne    0x1400050ad
   1400050a5:	mov    r13d,0x81
   1400050ab:	jmp    0x1400050c9
   1400050ad:	movzx  eax,WORD PTR [rax+0x2]
   1400050b1:	mov    ecx,0xffdf
   1400050b6:	sub    ax,0x52
   1400050ba:	test   cx,ax
   1400050bd:	jne    0x14000583f
   1400050c3:	mov    r13d,0x41
   1400050c9:	lea    r15,[rbx+r15*8]
   1400050cd:	mov    eax,0x64
   1400050d2:	cmp    DWORD PTR [rbp+0x5c0],eax
   1400050d8:	je     0x14000583f
   1400050de:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400050e5:	add    r15,0x8
   1400050e9:	inc    esi
   1400050eb:	inc    r12d
   1400050ee:	lea    rcx,[rax+rax*4]
   1400050f2:	mov    DWORD PTR [rbp+rcx*8+0x5c8],r13d
   1400050fa:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005101:	mov    rcx,QWORD PTR [r15]
   140005104:	lea    rdx,[rax+rax*4]
   140005108:	mov    QWORD PTR [rbp+rdx*8+0x5d0],rcx
   140005110:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005117:	lea    rdx,[rax+rax*4]
   14000511b:	mov    QWORD PTR [rbp+rdx*8+0x5d8],r14
   140005123:	movsxd rax,DWORD PTR [rbp+0x5c0]
   14000512a:	lea    rdx,[rax+rax*4]
   14000512e:	mov    BYTE PTR [rbp+rdx*8+0x5e0],r14b
   140005136:	movsxd rax,DWORD PTR [rbp+0x5c0]
   14000513d:	lea    rdx,[rax+rax*4]
   140005141:	mov    DWORD PTR [rbp+rdx*8+0x5e4],r14d
   140005149:	mov    edx,0x3a
   14000514e:	inc    DWORD PTR [rbp+0x5c0]
   140005154:	call   QWORD PTR [rip+0x213e]        # 0x140007298
   14000515a:	test   rax,rax
   14000515d:	je     0x14000583f
   140005163:	lea    rcx,[rax+0x2]
   140005167:	lea    r8,[rsp+0x58]
   14000516c:	lea    rdx,[rsp+0x30]
   140005171:	call   0x1400014bc
   140005176:	test   eax,eax
   140005178:	jne    0x14000583f
   14000517e:	cmp    r12d,DWORD PTR [rsp+0x48]
   140005183:	je     0x140005193
   140005185:	mov    rax,QWORD PTR [r15+0x8]
   140005189:	cmp    WORD PTR [rax],0x2f
   14000518d:	jne    0x1400050cd
   140005193:	mov    r13d,DWORD PTR [rsp+0x48]
   140005198:	mov    r12d,DWORD PTR [rsp+0x60]
   14000519d:	jmp    0x1400056a7
   1400051a2:	mov    rcx,QWORD PTR [rbx+r15*8]
   1400051a6:	lea    rdx,[rip+0x292b]        # 0x140007ad8
   1400051ad:	mov    r8d,0x12
   1400051b3:	call   QWORD PTR [rip+0x20e7]        # 0x1400072a0
   1400051b9:	test   eax,eax
   1400051bb:	jne    0x1400052cf
   1400051c1:	test   edi,0xfb000000
   1400051c7:	jne    0x14000583f
   1400051cd:	lea    r12d,[rsi+0x1]
   1400051d1:	cmp    r12d,r13d
   1400051d4:	je     0x14000583f
   1400051da:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   1400051df:	cmp    WORD PTR [rax],0x2f
   1400051e3:	je     0x14000583f
   1400051e9:	mov    rcx,QWORD PTR [rbx+r15*8]
   1400051ed:	mov    edx,0x3a
   1400051f2:	bts    edi,0x1a
   1400051f6:	call   QWORD PTR [rip+0x209c]        # 0x140007298
   1400051fc:	test   rax,rax
   1400051ff:	jne    0x140005209
   140005201:	mov    r8d,0x84
   140005207:	jmp    0x140005225
   140005209:	movzx  eax,WORD PTR [rax+0x2]
   14000520d:	mov    ecx,0xffdf
   140005212:	sub    ax,0x52
   140005216:	test   cx,ax
   140005219:	jne    0x14000583f
   14000521f:	mov    r8d,0x44
   140005225:	mov    ecx,DWORD PTR [rbp+0x5c0]
   14000522b:	lea    rdx,[rbx+r15*8]
   14000522f:	mov    r10d,0x64
   140005235:	cmp    ecx,r10d
   140005238:	je     0x14000583f
   14000523e:	movsxd rax,ecx
   140005241:	add    rdx,0x8
   140005245:	inc    esi
   140005247:	inc    r12d
   14000524a:	lea    rcx,[rax+rax*4]
   14000524e:	mov    DWORD PTR [rbp+rcx*8+0x5c8],r8d
   140005256:	movsxd rax,DWORD PTR [rbp+0x5c0]
   14000525d:	lea    rcx,[rax+rax*4]
   140005261:	mov    rax,QWORD PTR [rdx]
   140005264:	mov    QWORD PTR [rbp+rcx*8+0x5d0],rax
   14000526c:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005273:	lea    rcx,[rax+rax*4]
   140005277:	mov    QWORD PTR [rbp+rcx*8+0x5d8],r14
   14000527f:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005286:	lea    rcx,[rax+rax*4]
   14000528a:	mov    BYTE PTR [rbp+rcx*8+0x5e0],r14b
   140005292:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005299:	lea    rcx,[rax+rax*4]
   14000529d:	mov    DWORD PTR [rbp+rcx*8+0x5e4],r14d
   1400052a5:	mov    ecx,DWORD PTR [rbp+0x5c0]
   1400052ab:	inc    ecx
   1400052ad:	mov    DWORD PTR [rbp+0x5c0],ecx
   1400052b3:	cmp    r12d,r13d
   1400052b6:	je     0x140005198
   1400052bc:	mov    rax,QWORD PTR [rdx+0x8]
   1400052c0:	cmp    WORD PTR [rax],0x2f
   1400052c4:	jne    0x140005235
   1400052ca:	jmp    0x140005198
   1400052cf:	mov    rcx,QWORD PTR [rbx+r15*8]
   1400052d3:	lea    rdx,[rip+0x2826]        # 0x140007b00
   1400052da:	call   QWORD PTR [rip+0x2048]        # 0x140007328
   1400052e0:	test   eax,eax
   1400052e2:	jne    0x1400053e8
   1400052e8:	test   edi,0xfb000000
   1400052ee:	jne    0x14000583f
   1400052f4:	lea    r12d,[rsi+0x1]
   1400052f8:	cmp    r12d,r13d
   1400052fb:	je     0x14000583f
   140005301:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140005306:	cmp    WORD PTR [rax],0x2f
   14000530a:	je     0x14000583f
   140005310:	bts    edi,0x1a
   140005314:	lea    r15,[rbx+r15*8]
   140005318:	mov    eax,0x64
   14000531d:	cmp    DWORD PTR [rbp+0x5c0],eax
   140005323:	je     0x14000583f
   140005329:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005330:	add    r15,0x8
   140005334:	inc    esi
   140005336:	inc    r12d
   140005339:	lea    rcx,[rax+rax*4]
   14000533d:	mov    DWORD PTR [rbp+rcx*8+0x5c8],0x2
   140005348:	movsxd rax,DWORD PTR [rbp+0x5c0]
   14000534f:	mov    rcx,QWORD PTR [r15]
   140005352:	lea    rdx,[rax+rax*4]
   140005356:	mov    QWORD PTR [rbp+rdx*8+0x5d0],rcx
   14000535e:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005365:	lea    rdx,[rax+rax*4]
   140005369:	mov    QWORD PTR [rbp+rdx*8+0x5d8],r14
   140005371:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005378:	lea    rdx,[rax+rax*4]
   14000537c:	mov    BYTE PTR [rbp+rdx*8+0x5e0],r14b
   140005384:	movsxd rax,DWORD PTR [rbp+0x5c0]
   14000538b:	lea    rdx,[rax+rax*4]
   14000538f:	mov    DWORD PTR [rbp+rdx*8+0x5e4],r14d
   140005397:	mov    edx,0x3a
   14000539c:	inc    DWORD PTR [rbp+0x5c0]
   1400053a2:	call   QWORD PTR [rip+0x1ef0]        # 0x140007298
   1400053a8:	test   rax,rax
   1400053ab:	je     0x14000583f
   1400053b1:	lea    rcx,[rax+0x2]
   1400053b5:	lea    r8,[rsp+0x58]
   1400053ba:	lea    rdx,[rsp+0x30]
   1400053bf:	call   0x1400014bc
   1400053c4:	test   eax,eax
   1400053c6:	jne    0x14000583f
   1400053cc:	cmp    r12d,r13d
   1400053cf:	je     0x140005198
   1400053d5:	mov    rax,QWORD PTR [r15+0x8]
   1400053d9:	cmp    WORD PTR [rax],0x2f
   1400053dd:	jne    0x140005318
   1400053e3:	jmp    0x140005198
   1400053e8:	mov    rcx,QWORD PTR [rbx+r15*8]
   1400053ec:	lea    rdx,[rip+0x271d]        # 0x140007b10
   1400053f3:	mov    r8d,0x7
   1400053f9:	call   QWORD PTR [rip+0x1ea1]        # 0x1400072a0
   1400053ff:	test   eax,eax
   140005401:	jne    0x140005513
   140005407:	test   edi,0xfb000000
   14000540d:	jne    0x14000583f
   140005413:	lea    r12d,[rsi+0x1]
   140005417:	cmp    r12d,r13d
   14000541a:	je     0x14000583f
   140005420:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   140005425:	cmp    WORD PTR [rax],0x2f
   140005429:	je     0x14000583f
   14000542f:	mov    rcx,QWORD PTR [rbx+r15*8]
   140005433:	mov    edx,0x3a
   140005438:	bts    edi,0x1a
   14000543c:	call   QWORD PTR [rip+0x1e56]        # 0x140007298
   140005442:	mov    r10d,0x64
   140005448:	test   rax,rax
   14000544b:	jne    0x140005452
   14000544d:	lea    edx,[rax+0x33]
   140005450:	jmp    0x140005470
   140005452:	cmp    WORD PTR [rax+0x2],0x67
   140005457:	jne    0x140005460
   140005459:	mov    edx,0x13
   14000545e:	jmp    0x140005470
   140005460:	cmp    WORD PTR [rax+0x2],r10w
   140005465:	jne    0x14000583f
   14000546b:	mov    edx,0x23
   140005470:	mov    ecx,DWORD PTR [rbp+0x5c0]
   140005476:	lea    r8,[rbx+r15*8]
   14000547a:	cmp    ecx,r10d
   14000547d:	je     0x14000583f
   140005483:	movsxd rax,ecx
   140005486:	add    r8,0x8
   14000548a:	inc    esi
   14000548c:	inc    r12d
   14000548f:	lea    rcx,[rax+rax*4]
   140005493:	mov    DWORD PTR [rbp+rcx*8+0x5c8],edx
   14000549a:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400054a1:	lea    rcx,[rax+rax*4]
   1400054a5:	mov    rax,QWORD PTR [r8]
   1400054a8:	mov    QWORD PTR [rbp+rcx*8+0x5d0],rax
   1400054b0:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400054b7:	lea    rcx,[rax+rax*4]
   1400054bb:	mov    QWORD PTR [rbp+rcx*8+0x5d8],r14
   1400054c3:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400054ca:	lea    rcx,[rax+rax*4]
   1400054ce:	mov    BYTE PTR [rbp+rcx*8+0x5e0],r14b
   1400054d6:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400054dd:	lea    rcx,[rax+rax*4]
   1400054e1:	mov    DWORD PTR [rbp+rcx*8+0x5e4],r14d
   1400054e9:	mov    ecx,DWORD PTR [rbp+0x5c0]
   1400054ef:	inc    ecx
   1400054f1:	mov    DWORD PTR [rbp+0x5c0],ecx
   1400054f7:	cmp    r12d,r13d
   1400054fa:	je     0x140005198
   140005500:	mov    rax,QWORD PTR [r8+0x8]
   140005504:	cmp    WORD PTR [rax],0x2f
   140005508:	jne    0x14000547a
   14000550e:	jmp    0x140005198
   140005513:	mov    rcx,QWORD PTR [rbx+r15*8]
   140005517:	lea    rdx,[rip+0x2602]        # 0x140007b20
   14000551e:	mov    r8d,0xc
   140005524:	call   QWORD PTR [rip+0x1d76]        # 0x1400072a0
   14000552a:	test   eax,eax
   14000552c:	jne    0x14000563b
   140005532:	test   edi,0xfb000000
   140005538:	jne    0x14000583f
   14000553e:	mov    rcx,QWORD PTR [rbx+r15*8]
   140005542:	lea    edx,[rax+0x3a]
   140005545:	bts    edi,0x1a
   140005549:	call   QWORD PTR [rip+0x1d49]        # 0x140007298
   14000554f:	test   rax,rax
   140005552:	je     0x14000583f
   140005558:	movzx  ecx,WORD PTR [rax+0x2]
   14000555c:	test   cx,cx
   14000555f:	je     0x14000583f
   140005565:	cmp    WORD PTR [rax+0x4],r14w
   14000556a:	jne    0x14000583f
   140005570:	lea    eax,[rcx-0x45]
   140005573:	mov    edx,0xffdf
   140005578:	test   dx,ax
   14000557b:	je     0x1400055a0
   14000557d:	lea    eax,[rcx-0x44]
   140005580:	test   dx,ax
   140005583:	je     0x140005599
   140005585:	sub    cx,0x52
   140005589:	test   dx,cx
   14000558c:	jne    0x14000583f
   140005592:	mov    edx,0x408
   140005597:	jmp    0x1400055a5
   140005599:	mov    edx,0x208
   14000559e:	jmp    0x1400055a5
   1400055a0:	mov    edx,0x108
   1400055a5:	mov    ecx,DWORD PTR [rbp+0x5c0]
   1400055ab:	mov    r10d,0x64
   1400055b1:	cmp    ecx,r10d
   1400055b4:	je     0x14000583f
   1400055ba:	movsxd rax,ecx
   1400055bd:	lea    rcx,[rax+rax*4]
   1400055c1:	mov    DWORD PTR [rbp+rcx*8+0x5c8],edx
   1400055c8:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400055cf:	lea    rcx,[rax+rax*4]
   1400055d3:	mov    QWORD PTR [rbp+rcx*8+0x5d0],r14
   1400055db:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400055e2:	lea    rcx,[rax+rax*4]
   1400055e6:	mov    QWORD PTR [rbp+rcx*8+0x5d8],r14
   1400055ee:	movsxd rax,DWORD PTR [rbp+0x5c0]
   1400055f5:	lea    rcx,[rax+rax*4]
   1400055f9:	mov    BYTE PTR [rbp+rcx*8+0x5e0],r14b
   140005601:	movsxd rax,DWORD PTR [rbp+0x5c0]
   140005608:	lea    rcx,[rax+rax*4]
   14000560c:	mov    DWORD PTR [rbp+rcx*8+0x5e4],r14d
   140005614:	lea    eax,[rsi+0x1]
   140005617:	mov    ecx,DWORD PTR [rbp+0x5c0]
   14000561d:	inc    ecx
   14000561f:	mov    DWORD PTR [rbp+0x5c0],ecx
   140005625:	cmp    eax,r13d
   140005628:	je     0x1400056a7
   14000562a:	mov    rax,QWORD PTR [rbx+r15*8+0x8]
   14000562f:	cmp    WORD PTR [rax],0x2f
   140005633:	jne    0x1400055b1
   140005639:	jmp    0x1400056a7
   14000563b:	mov    rcx,QWORD PTR [rbx+r15*8]
   14000563f:	lea    rdx,[rip+0x24f6]        # 0x140007b3c
   140005646:	call   QWORD PTR [rip+0x1cdc]        # 0x140007328
   14000564c:	test   eax,eax
   14000564e:	jne    0x140005655
   140005650:	or     edi,0x10
   140005653:	jmp    0x1400056a7
   140005655:	mov    rcx,QWORD PTR [rbx+r15*8]
   140005659:	lea    rdx,[rip+0x24e4]        # 0x140007b44
   140005660:	call   QWORD PTR [rip+0x1cc2]        # 0x140007328
   140005666:	test   eax,eax
   140005668:	jne    0x140005670
   14000566a:	bts    edi,0x7
   14000566e:	jmp    0x1400056a7
   140005670:	mov    rcx,QWORD PTR [rbx+r15*8]
   140005674:	lea    rdx,[rip+0x24d1]        # 0x140007b4c
   14000567b:	call   QWORD PTR [rip+0x1ca7]        # 0x140007328
   140005681:	test   eax,eax
   140005683:	jne    0x14000568b
   140005685:	bts    edi,0x8
   140005689:	jmp    0x1400056a7
   14000568b:	mov    rcx,QWORD PTR [rbx+r15*8]
   14000568f:	lea    rdx,[rip+0x24be]        # 0x140007b54
   140005696:	call   QWORD PTR [rip+0x1c8c]        # 0x140007328
   14000569c:	test   eax,eax
   14000569e:	jne    0x14000583f
   1400056a4:	or     edi,0x20
   1400056a7:	inc    esi
   1400056a9:	cmp    esi,r13d
   1400056ac:	jl     0x140004dec
   1400056b2:	cmp    DWORD PTR [rip+0x53f7],r14d        # 0x14000aab0
   1400056b9:	je     0x1400057c5
   1400056bf:	cmp    QWORD PTR [rip+0x496a],r14        # 0x14000a030
   1400056c6:	je     0x1400057c5
   1400056cc:	lea    rsi,[rip+0x496d]        # 0x14000a040
   1400056d3:	mov    r15,r14
   1400056d6:	mov    QWORD PTR [rsp+0x58],rsi
   1400056db:	lea    rax,[rip+0x494e]        # 0x14000a030
   1400056e2:	lea    rcx,[rip+0x4947]        # 0x14000a030
   1400056e9:	mov    r13,QWORD PTR [rax]
   1400056ec:	or     rax,0xffffffffffffffff
   1400056f0:	inc    rax
   1400056f3:	cmp    WORD PTR [r13+rax*2+0x0],r14w
   1400056f9:	jne    0x1400056f0
   1400056fb:	inc    r15
   1400056fe:	mov    r12,r15
   140005701:	mov    QWORD PTR [rsp+0x48],r15
   140005706:	cmp    QWORD PTR [rsi],r14
   140005709:	je     0x1400057a9
   14000570f:	mov    rbx,rsi
   140005712:	mov    r15d,eax
   140005715:	lea    rsi,[rip+0x4914]        # 0x14000a030
   14000571c:	mov    rdx,QWORD PTR [rbx]
   14000571f:	mov    r8,r15
   140005722:	mov    rcx,r13
   140005725:	call   QWORD PTR [rip+0x1b75]        # 0x1400072a0
   14000572b:	test   eax,eax
   14000572d:	jne    0x140005786
   14000572f:	mov    rcx,QWORD PTR [rip+0x536a]        # 0x14000aaa0
   140005736:	lea    rdx,[rip+0x2423]        # 0x140007b60
   14000573d:	call   0x140001008
   140005742:	mov    rcx,QWORD PTR [rip+0x5357]        # 0x14000aaa0
   140005749:	mov    rdx,r13
   14000574c:	call   0x140001008
   140005751:	mov    rcx,QWORD PTR [rip+0x5348]        # 0x14000aaa0
   140005758:	lea    rdx,[rip+0x1d15]        # 0x140007474
   14000575f:	call   0x140001008
   140005764:	mov    rdx,QWORD PTR [rbx]
   140005767:	mov    rcx,QWORD PTR [rip+0x5332]        # 0x14000aaa0
   14000576e:	call   0x140001008
   140005773:	mov    rcx,QWORD PTR [rip+0x5326]        # 0x14000aaa0
   14000577a:	lea    rdx,[rip+0x220f]        # 0x140007990
   140005781:	call   0x140001008
   140005786:	inc    r12
   140005789:	mov    rbx,r12
   14000578c:	shl    rbx,0x4
   140005790:	add    rbx,rsi
   140005793:	cmp    QWORD PTR [rbx],r14
   140005796:	jne    0x14000571c
   140005798:	mov    rsi,QWORD PTR [rsp+0x58]
   14000579d:	lea    rcx,[rip+0x488c]        # 0x14000a030
   1400057a4:	mov    r15,QWORD PTR [rsp+0x48]
   1400057a9:	add    rsi,0x10
   1400057ad:	mov    rax,r15
   1400057b0:	shl    rax,0x4
   1400057b4:	add    rax,rcx
   1400057b7:	mov    QWORD PTR [rsp+0x58],rsi
   1400057bc:	cmp    QWORD PTR [rax],r14
   1400057bf:	jne    0x1400056e9
   1400057c5:	mov    ecx,edi
   1400057c7:	and    ecx,0xff000000
   1400057cd:	je     0x1400059ca
   1400057d3:	cmp    ecx,0x1000000
   1400057d9:	je     0x1400059c1
   1400057df:	cmp    ecx,0x2000000
   1400057e5:	je     0x1400059b8
   1400057eb:	cmp    ecx,0x4000000
   1400057f1:	je     0x1400059a3
   1400057f7:	cmp    ecx,0x8000000
   1400057fd:	je     0x140005945
   140005803:	cmp    ecx,0x20000000
   140005809:	je     0x1400058e6
   14000580f:	lea    eax,[rcx-0x40000000]
   140005815:	test   eax,0xefffffff
   14000581a:	je     0x1400058be
   140005820:	cmp    ecx,0x80000000
   140005826:	je     0x14000586e
   140005828:	mov    edx,edi
   14000582a:	lea    rcx,[rip+0x2347]        # 0x140007b78
   140005831:	call   QWORD PTR [rip+0x1a21]        # 0x140007258
   140005837:	or     ebx,0xffffffff
   14000583a:	jmp    0x1400059df
   14000583f:	movsxd r9,esi
   140005842:	mov    r9,QWORD PTR [rbx+r9*8]
   140005846:	mov    rdx,QWORD PTR [rip+0x5253]        # 0x14000aaa0
   14000584d:	mov    r8d,0x2713
   140005853:	mov    ecx,edi
   140005855:	call   0x140001160
   14000585a:	mov    eax,0x57
   14000585f:	jmp    0x140005a39
   140005864:	mov    eax,0xa0
   140005869:	jmp    0x140005a39
   14000586e:	mov    rcx,QWORD PTR [rsp+0x38]
   140005873:	lea    rdx,[rip+0x2122]        # 0x14000799c
   14000587a:	call   QWORD PTR [rip+0x1a10]        # 0x140007290
   140005880:	mov    rsi,rax
   140005883:	test   rax,rax
   140005886:	jne    0x140005898
   140005888:	xor    ecx,ecx
   14000588a:	call   QWORD PTR [rip+0x19e8]        # 0x140007278
   140005890:	lea    ebx,[rsi+0x57]
   140005893:	jmp    0x1400059df
   140005898:	mov    rcx,QWORD PTR [rsp+0x40]
   14000589d:	lea    r8,[rip+0xffffffffffffdd8c]        # 0x140003630
   1400058a4:	mov    r9,rax
   1400058a7:	mov    edx,edi
   1400058a9:	call   0x140003348
   1400058ae:	mov    rcx,rsi
   1400058b1:	mov    ebx,eax
   1400058b3:	call   QWORD PTR [rip+0x19ef]        # 0x1400072a8
   1400058b9:	jmp    0x1400059df
   1400058be:	mov    rax,QWORD PTR [rsp+0x38]
   1400058c3:	lea    r8,[rbp+0x290]
   1400058ca:	mov    rcx,QWORD PTR [rsp+0x40]
   1400058cf:	lea    rdx,[rsp+0x60]
   1400058d4:	mov    r9d,edi
   1400058d7:	mov    QWORD PTR [rsp+0x20],rax
   1400058dc:	call   0x14000406c
   1400058e1:	jmp    0x1400059dd
   1400058e6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400058eb:	lea    rdx,[rsp+0x38]
   1400058f0:	mov    QWORD PTR [rsp+0x38],r14
   1400058f5:	call   0x1400020cc
   1400058fa:	mov    ebx,eax
   1400058fc:	test   eax,eax
   1400058fe:	je     0x14000590f
   140005900:	mov    rdx,QWORD PTR [rip+0x5199]        # 0x14000aaa0
   140005907:	mov    r8d,eax
   14000590a:	jmp    0x14000599a
   14000590f:	lea    rcx,[rip+0x20c2]        # 0x1400079d8
   140005916:	call   0x140002540
   14000591b:	mov    r9,QWORD PTR [rsp+0x38]
   140005920:	lea    r8,[rip+0xffffffffffffe939]        # 0x140004260
   140005927:	mov    rcx,QWORD PTR [rsp+0x40]
   14000592c:	mov    edx,edi
   14000592e:	call   0x140003348
   140005933:	mov    rcx,QWORD PTR [rsp+0x38]
   140005938:	mov    ebx,eax
   14000593a:	call   QWORD PTR [rip+0x1980]        # 0x1400072c0
   140005940:	jmp    0x1400059df
   140005945:	mov    rcx,QWORD PTR [rsp+0x50]
   14000594a:	lea    rdx,[rsp+0x38]
   14000594f:	mov    QWORD PTR [rsp+0x38],r14
   140005954:	call   0x1400020cc
   140005959:	mov    ebx,eax
   14000595b:	test   eax,eax
   14000595d:	jne    0x140005979
   14000595f:	mov    r9,QWORD PTR [rsp+0x38]
   140005964:	lea    r8,[rip+0xffffffffffffe9b5]        # 0x140004320
   14000596b:	mov    rcx,QWORD PTR [rsp+0x40]
   140005970:	mov    edx,edi
   140005972:	call   0x140003348
   140005977:	mov    ebx,eax
   140005979:	mov    rcx,QWORD PTR [rsp+0x38]
   14000597e:	call   QWORD PTR [rip+0x193c]        # 0x1400072c0
   140005984:	cmp    BYTE PTR [rip+0x511d],r14b        # 0x14000aaa8
   14000598b:	jne    0x1400059df
   14000598d:	mov    rdx,QWORD PTR [rip+0x5104]        # 0x14000aa98
   140005994:	mov    r8d,0x272a
   14000599a:	mov    ecx,edi
   14000599c:	call   0x140001160
   1400059a1:	jmp    0x1400059df
   1400059a3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400059a8:	lea    r8,[rbp+0x5c0]
   1400059af:	mov    edx,edi
   1400059b1:	call   0x1400049f4
   1400059b6:	jmp    0x1400059dd
   1400059b8:	lea    r8,[rip+0xffffffffffffea81]        # 0x140004440
   1400059bf:	jmp    0x1400059d1
   1400059c1:	lea    r8,[rip+0xffffffffffffebd8]        # 0x1400045a0
   1400059c8:	jmp    0x1400059d1
   1400059ca:	lea    r8,[rip+0xffffffffffffda2f]        # 0x140003400
   1400059d1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400059d6:	mov    edx,edi
   1400059d8:	call   0x140003348
   1400059dd:	mov    ebx,eax
   1400059df:	mov    ecx,DWORD PTR [rip+0x50ab]        # 0x14000aa90
   1400059e5:	lea    rdx,[rbp+0x1570]
   1400059ec:	mov    esi,0xa
   1400059f1:	mov    r8d,esi
   1400059f4:	call   QWORD PTR [rip+0x1876]        # 0x140007270
   1400059fa:	mov    ecx,DWORD PTR [rip+0x50ac]        # 0x14000aaac
   140005a00:	lea    rdx,[rbp+0x1600]
   140005a07:	mov    r8d,esi
   140005a0a:	call   QWORD PTR [rip+0x1860]        # 0x140007270
   140005a10:	mov    rdx,QWORD PTR [rip+0x5081]        # 0x14000aa98
   140005a17:	lea    rax,[rbp+0x1600]
   140005a1e:	lea    r9,[rbp+0x1570]
   140005a25:	mov    QWORD PTR [rsp+0x20],rax
   140005a2a:	mov    r8d,0x272b
   140005a30:	mov    ecx,edi
   140005a32:	call   0x140001160
   140005a37:	mov    eax,ebx
   140005a39:	mov    rcx,QWORD PTR [rbp+0x1690]
   140005a40:	xor    rcx,rsp
   140005a43:	call   0x140005db0
   140005a48:	lea    r11,[rsp+0x17a0]
   140005a50:	mov    rbx,QWORD PTR [r11+0x30]
   140005a54:	mov    rsi,QWORD PTR [r11+0x40]
   140005a58:	mov    rdi,QWORD PTR [r11+0x48]
   140005a5c:	mov    rsp,r11
   140005a5f:	pop    r15
   140005a61:	pop    r14
   140005a63:	pop    r13
   140005a65:	pop    r12
   140005a67:	pop    rbp
   140005a68:	ret    
   140005a69:	int3   
   140005a6a:	int3   
   140005a6b:	int3   
   140005a6c:	int3   
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	sub    rsp,0x28
   140005a74:	mov    eax,0x5a4d
   140005a79:	cmp    WORD PTR [rip+0xffffffffffffa580],ax        # 0x140000000
   140005a80:	je     0x140005a86
   140005a82:	xor    eax,eax
   140005a84:	jmp    0x140005ad5
   140005a86:	movsxd rcx,DWORD PTR [rip+0xffffffffffffa5af]        # 0x14000003c
   140005a8d:	lea    rax,[rip+0xffffffffffffa56c]        # 0x140000000
   140005a94:	add    rcx,rax
   140005a97:	cmp    DWORD PTR [rcx],0x4550
   140005a9d:	jne    0x140005a82
   140005a9f:	movzx  eax,WORD PTR [rcx+0x18]
   140005aa3:	cmp    eax,0x10b
   140005aa8:	je     0x140005ac4
   140005aaa:	cmp    eax,0x20b
   140005aaf:	jne    0x140005a82
   140005ab1:	xor    eax,eax
   140005ab3:	cmp    DWORD PTR [rcx+0x84],0xe
   140005aba:	jbe    0x140005ad5
   140005abc:	cmp    DWORD PTR [rcx+0xf8],eax
   140005ac2:	jmp    0x140005ad2
   140005ac4:	xor    eax,eax
   140005ac6:	cmp    DWORD PTR [rcx+0x74],0xe
   140005aca:	jbe    0x140005ad5
   140005acc:	cmp    DWORD PTR [rcx+0xe8],eax
   140005ad2:	setne  al
   140005ad5:	mov    ecx,0x1
   140005ada:	mov    DWORD PTR [rip+0x4a20],eax        # 0x14000a500
   140005ae0:	call   0x140005ea8
   140005ae5:	mov    ecx,eax
   140005ae7:	call   QWORD PTR [rip+0x1833]        # 0x140007320
   140005aed:	mov    rcx,QWORD PTR [rip+0x17ec]        # 0x1400072e0
   140005af4:	or     rax,0xffffffffffffffff
   140005af8:	mov    QWORD PTR [rip+0x4fb9],rax        # 0x14000aab8
   140005aff:	mov    QWORD PTR [rip+0x4fba],rax        # 0x14000aac0
   140005b06:	mov    eax,DWORD PTR [rip+0x4a08]        # 0x14000a514
   140005b0c:	mov    DWORD PTR [rcx],eax
   140005b0e:	mov    rcx,QWORD PTR [rip+0x17c3]        # 0x1400072d8
   140005b15:	mov    eax,DWORD PTR [rip+0x49ed]        # 0x14000a508
   140005b1b:	mov    DWORD PTR [rcx],eax
   140005b1d:	call   0x140005f00
   140005b22:	cmp    DWORD PTR [rip+0x44d7],0x0        # 0x14000a000
   140005b29:	jne    0x140005b38
   140005b2b:	lea    rcx,[rip+0x3ce]        # 0x140005f00
   140005b32:	call   QWORD PTR [rip+0x17c0]        # 0x1400072f8
   140005b38:	xor    eax,eax
   140005b3a:	add    rsp,0x28
   140005b3e:	ret    
   140005b3f:	int3   
   140005b40:	int3   
   140005b41:	int3   
   140005b42:	int3   
   140005b43:	int3   
   140005b44:	int3   
   140005b45:	int3   
   140005b46:	int3   
   140005b47:	int3   
   140005b48:	int3   
   140005b49:	int3   
   140005b4a:	int3   
   140005b4b:	int3   
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	sub    rsp,0x38
   140005b54:	mov    eax,DWORD PTR [rip+0x49b6]        # 0x14000a510
   140005b5a:	lea    r8,[rip+0x4997]        # 0x14000a4f8
   140005b61:	mov    r9d,DWORD PTR [rip+0x49a4]        # 0x14000a50c
   140005b68:	lea    rdx,[rip+0x4981]        # 0x14000a4f0
   140005b6f:	mov    DWORD PTR [rip+0x498f],eax        # 0x14000a504
   140005b75:	lea    rcx,[rip+0x496c]        # 0x14000a4e8
   140005b7c:	lea    rax,[rip+0x4981]        # 0x14000a504
   140005b83:	mov    QWORD PTR [rsp+0x20],rax
   140005b88:	call   QWORD PTR [rip+0x17a2]        # 0x140007330
   140005b8e:	mov    DWORD PTR [rip+0x4958],eax        # 0x14000a4ec
   140005b94:	add    rsp,0x38
   140005b98:	ret    
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	mov    rax,rsp
   140005ba3:	mov    QWORD PTR [rax+0x8],rbx
   140005ba7:	mov    QWORD PTR [rax+0x10],rsi
   140005bab:	mov    QWORD PTR [rax+0x18],rdi
   140005baf:	mov    QWORD PTR [rax+0x20],r12
   140005bb3:	push   r14
   140005bb5:	sub    rsp,0x30
   140005bb9:	mov    rax,QWORD PTR gs:0x30
   140005bc2:	mov    rbx,QWORD PTR [rax+0x8]
   140005bc6:	xor    r14d,r14d
   140005bc9:	xor    eax,eax
   140005bcb:	lock cmpxchg QWORD PTR [rip+0x4ef4],rbx        # 0x14000aac8
   140005bd4:	je     0x140005bf2
   140005bd6:	cmp    rax,rbx
   140005bd9:	jne    0x140005be5
   140005bdb:	mov    ebx,0x1
   140005be0:	mov    r14d,ebx
   140005be3:	jmp    0x140005bf7
   140005be5:	mov    ecx,0x3e8
   140005bea:	call   QWORD PTR [rip+0x1560]        # 0x140007150
   140005bf0:	jmp    0x140005bc9
   140005bf2:	mov    ebx,0x1
   140005bf7:	mov    eax,DWORD PTR [rip+0x4ed3]        # 0x14000aad0
   140005bfd:	cmp    eax,ebx
   140005bff:	jne    0x140005c0d
   140005c01:	mov    ecx,0x1f
   140005c06:	call   0x140005ef4
   140005c0b:	jmp    0x140005c76
   140005c0d:	mov    eax,DWORD PTR [rip+0x4ebd]        # 0x14000aad0
   140005c13:	test   eax,eax
   140005c15:	jne    0x140005c70
   140005c17:	mov    DWORD PTR [rip+0x4eb3],ebx        # 0x14000aad0
   140005c1d:	lea    r12,[rip+0x17f4]        # 0x140007418
   140005c24:	lea    rdi,[rip+0x17d5]        # 0x140007400
   140005c2b:	mov    QWORD PTR [rsp+0x28],rdi
   140005c30:	mov    DWORD PTR [rsp+0x20],eax
   140005c34:	cmp    rdi,r12
   140005c37:	jae    0x140005c62
   140005c39:	test   eax,eax
   140005c3b:	jne    0x140005c66
   140005c3d:	mov    rsi,QWORD PTR [rdi]
   140005c40:	test   rsi,rsi
   140005c43:	je     0x140005c57
   140005c45:	mov    rcx,rsi
   140005c48:	mov    rax,QWORD PTR [rip+0x1789]        # 0x1400073d8
   140005c4f:	call   rax
   140005c51:	call   rsi
   140005c53:	mov    DWORD PTR [rsp+0x20],eax
   140005c57:	add    rdi,0x8
   140005c5b:	mov    QWORD PTR [rsp+0x28],rdi
   140005c60:	jmp    0x140005c34
   140005c62:	test   eax,eax
   140005c64:	je     0x140005c76
   140005c66:	mov    eax,0xff
   140005c6b:	jmp    0x140005d57
   140005c70:	mov    DWORD PTR [rip+0x486e],ebx        # 0x14000a4e4
   140005c76:	mov    eax,DWORD PTR [rip+0x4e54]        # 0x14000aad0
   140005c7c:	cmp    eax,ebx
   140005c7e:	jne    0x140005c9d
   140005c80:	lea    rdx,[rip+0x1771]        # 0x1400073f8
   140005c87:	lea    rcx,[rip+0x175a]        # 0x1400073e8
   140005c8e:	call   0x1400060ca
   140005c93:	mov    DWORD PTR [rip+0x4e33],0x2        # 0x14000aad0
   140005c9d:	test   r14d,r14d
   140005ca0:	jne    0x140005cab
   140005ca2:	xor    eax,eax
   140005ca4:	xchg   QWORD PTR [rip+0x4e1d],rax        # 0x14000aac8
   140005cab:	cmp    QWORD PTR [rip+0x4e25],0x0        # 0x14000aad8
   140005cb3:	je     0x140005ce3
   140005cb5:	lea    rcx,[rip+0x4e1c]        # 0x14000aad8
   140005cbc:	call   0x140005f60
   140005cc1:	test   eax,eax
   140005cc3:	je     0x140005ce3
   140005cc5:	mov    rbx,QWORD PTR [rip+0x4e0c]        # 0x14000aad8
   140005ccc:	mov    rcx,rbx
   140005ccf:	mov    rax,QWORD PTR [rip+0x1702]        # 0x1400073d8
   140005cd6:	call   rax
   140005cd8:	xor    r8d,r8d
   140005cdb:	lea    edx,[r8+0x2]
   140005cdf:	xor    ecx,ecx
   140005ce1:	call   rbx
   140005ce3:	mov    r8,QWORD PTR [rip+0x480e]        # 0x14000a4f8
   140005cea:	mov    rdx,QWORD PTR [rip+0x47ff]        # 0x14000a4f0
   140005cf1:	mov    ecx,DWORD PTR [rip+0x47f1]        # 0x14000a4e8
   140005cf7:	call   0x140004cc0
   140005cfc:	mov    DWORD PTR [rip+0x47de],eax        # 0x14000a4e0
   140005d02:	cmp    DWORD PTR [rip+0x47f7],0x0        # 0x14000a500
   140005d09:	jne    0x140005d13
   140005d0b:	mov    ecx,eax
   140005d0d:	call   QWORD PTR [rip+0x1605]        # 0x140007318
   140005d13:	cmp    DWORD PTR [rip+0x47ca],0x0        # 0x14000a4e4
   140005d1a:	jne    0x140005d28
   140005d1c:	call   QWORD PTR [rip+0x15e6]        # 0x140007308
   140005d22:	mov    eax,DWORD PTR [rip+0x47b8]        # 0x14000a4e0
   140005d28:	jmp    0x140005d57
   140005d2a:	mov    DWORD PTR [rip+0x47b0],eax        # 0x14000a4e0
   140005d30:	cmp    DWORD PTR [rip+0x47c9],0x0        # 0x14000a500
   140005d37:	jne    0x140005d42
   140005d39:	mov    ecx,eax
   140005d3b:	call   QWORD PTR [rip+0x15cf]        # 0x140007310
   140005d41:	int3   
   140005d42:	cmp    DWORD PTR [rip+0x479b],0x0        # 0x14000a4e4
   140005d49:	jne    0x140005d57
   140005d4b:	call   QWORD PTR [rip+0x15b7]        # 0x140007308
   140005d51:	mov    eax,DWORD PTR [rip+0x4789]        # 0x14000a4e0
   140005d57:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d5c:	mov    rsi,QWORD PTR [rsp+0x48]
   140005d61:	mov    rdi,QWORD PTR [rsp+0x50]
   140005d66:	mov    r12,QWORD PTR [rsp+0x58]
   140005d6b:	add    rsp,0x30
   140005d6f:	pop    r14
   140005d71:	ret    
   140005d72:	int3   
   140005d73:	int3   
   140005d74:	int3   
   140005d75:	int3   
   140005d76:	int3   
   140005d77:	int3   
   140005d78:	int3   
   140005d79:	int3   
   140005d7a:	int3   
   140005d7b:	int3   
   140005d7c:	int3   
   140005d7d:	int3   
   140005d7e:	int3   
   140005d7f:	int3   
   140005d80:	sub    rsp,0x28
   140005d84:	call   0x140005ff4
   140005d89:	add    rsp,0x28
   140005d8d:	jmp    0x140005ba0
   140005d92:	int3   
   140005d93:	int3   
   140005d94:	int3   
   140005d95:	int3   
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	int3   
   140005da5:	int3   
   140005da6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005db0:	cmp    rcx,QWORD PTR [rip+0x4251]        # 0x14000a008
   140005db7:	jne    0x140005dc9
   140005db9:	rol    rcx,0x10
   140005dbd:	test   cx,0xffff
   140005dc2:	jne    0x140005dc5
   140005dc4:	ret    
   140005dc5:	ror    rcx,0x10
   140005dc9:	jmp    0x140006140
   140005dce:	int3   
   140005dcf:	int3   
   140005dd0:	int3   
   140005dd1:	int3   
   140005dd2:	int3   
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	sub    rsp,0x28
   140005de4:	mov    rax,QWORD PTR [rcx]
   140005de7:	cmp    DWORD PTR [rax],0xe06d7363
   140005ded:	jne    0x140005e12
   140005def:	cmp    DWORD PTR [rax+0x18],0x4
   140005df3:	jne    0x140005e12
   140005df5:	mov    ecx,DWORD PTR [rax+0x20]
   140005df8:	lea    eax,[rcx-0x19930520]
   140005dfe:	cmp    eax,0x2
   140005e01:	jbe    0x140005e0b
   140005e03:	cmp    ecx,0x1994000
   140005e09:	jne    0x140005e12
   140005e0b:	call   QWORD PTR [rip+0x14bf]        # 0x1400072d0
   140005e11:	int3   
   140005e12:	xor    eax,eax
   140005e14:	add    rsp,0x28
   140005e18:	ret    
   140005e19:	int3   
   140005e1a:	int3   
   140005e1b:	int3   
   140005e1c:	int3   
   140005e1d:	int3   
   140005e1e:	int3   
   140005e1f:	int3   
   140005e20:	sub    rsp,0x28
   140005e24:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005de0
   140005e2b:	call   QWORD PTR [rip+0x11ef]        # 0x140007020
   140005e31:	xor    eax,eax
   140005e33:	add    rsp,0x28
   140005e37:	ret    
   140005e38:	int3   
   140005e39:	int3   
   140005e3a:	int3   
   140005e3b:	int3   
   140005e3c:	int3   
   140005e3d:	int3   
   140005e3e:	jmp    QWORD PTR [rip+0x141c]        # 0x140007260
   140005e44:	int3   
   140005e45:	int3   
   140005e46:	int3   
   140005e47:	int3   
   140005e48:	int3   
   140005e49:	int3   
   140005e4a:	int3   
   140005e4b:	int3   
   140005e4c:	sub    rsp,0x18
   140005e50:	xor    edx,edx
   140005e52:	lea    rax,[rcx-0x1]
   140005e56:	cmp    rax,0xfffffffffffffffd
   140005e5a:	ja     0x140005e98
   140005e5c:	mov    eax,0x5a4d
   140005e61:	cmp    WORD PTR [rcx],ax
   140005e64:	jne    0x140005e90
   140005e66:	cmp    DWORD PTR [rcx+0x3c],edx
   140005e69:	jl     0x140005e90
   140005e6b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005e72:	jae    0x140005e90
   140005e74:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005e78:	add    rax,rcx
   140005e7b:	mov    QWORD PTR [rsp],rax
   140005e7f:	cmp    DWORD PTR [rax],0x4550
   140005e85:	cmovne rax,rdx
   140005e89:	mov    rdx,rax
   140005e8c:	mov    QWORD PTR [rsp],rax
   140005e90:	jmp    0x140005e98
   140005e92:	xor    edx,edx
   140005e94:	mov    QWORD PTR [rsp],rdx
   140005e98:	mov    rax,rdx
   140005e9b:	add    rsp,0x18
   140005e9f:	ret    
   140005ea0:	int3   
   140005ea1:	int3   
   140005ea2:	int3   
   140005ea3:	int3   
   140005ea4:	int3   
   140005ea5:	int3   
   140005ea6:	int3   
   140005ea7:	int3   
   140005ea8:	rex push rbx
   140005eaa:	sub    rsp,0x20
   140005eae:	mov    ebx,ecx
   140005eb0:	xor    ecx,ecx
   140005eb2:	call   QWORD PTR [rip+0x1210]        # 0x1400070c8
   140005eb8:	test   rax,rax
   140005ebb:	je     0x140005ee5
   140005ebd:	mov    rcx,rax
   140005ec0:	call   0x140005e4c
   140005ec5:	test   rax,rax
   140005ec8:	je     0x140005ee5
   140005eca:	mov    ecx,0x2
   140005ecf:	cmp    WORD PTR [rax+0x5c],cx
   140005ed3:	jne    0x140005ed9
   140005ed5:	mov    eax,ecx
   140005ed7:	jmp    0x140005ee7
   140005ed9:	cmp    WORD PTR [rax+0x5c],0x3
   140005ede:	mov    eax,0x1
   140005ee3:	je     0x140005ee7
   140005ee5:	mov    eax,ebx
   140005ee7:	add    rsp,0x20
   140005eeb:	pop    rbx
   140005eec:	ret    
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	int3   
   140005ef1:	int3   
   140005ef2:	int3   
   140005ef3:	int3   
   140005ef4:	jmp    QWORD PTR [rip+0x145e]        # 0x140007358
   140005efa:	int3   
   140005efb:	int3   
   140005efc:	int3   
   140005efd:	int3   
   140005efe:	int3   
   140005eff:	int3   
   140005f00:	xor    eax,eax
   140005f02:	ret    
   140005f03:	int3   
   140005f04:	int3   
   140005f05:	int3   
   140005f06:	int3   
   140005f07:	int3   
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005f14:	xor    r9d,r9d
   140005f17:	add    r8,rcx
   140005f1a:	mov    r10,rdx
   140005f1d:	movzx  eax,WORD PTR [r8+0x14]
   140005f22:	movzx  r11d,WORD PTR [r8+0x6]
   140005f27:	add    rax,0x18
   140005f2b:	add    rax,r8
   140005f2e:	test   r11d,r11d
   140005f31:	je     0x140005f51
   140005f33:	mov    edx,DWORD PTR [rax+0xc]
   140005f36:	cmp    r10,rdx
   140005f39:	jb     0x140005f45
   140005f3b:	mov    ecx,DWORD PTR [rax+0x8]
   140005f3e:	add    ecx,edx
   140005f40:	cmp    r10,rcx
   140005f43:	jb     0x140005f53
   140005f45:	inc    r9d
   140005f48:	add    rax,0x28
   140005f4c:	cmp    r9d,r11d
   140005f4f:	jb     0x140005f33
   140005f51:	xor    eax,eax
   140005f53:	ret    
   140005f54:	int3   
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	int3   
   140005f59:	int3   
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	mov    QWORD PTR [rsp+0x8],rbx
   140005f65:	push   rdi
   140005f66:	sub    rsp,0x20
   140005f6a:	mov    rbx,rcx
   140005f6d:	lea    rdi,[rip+0xffffffffffffa08c]        # 0x140000000
   140005f74:	mov    rcx,rdi
   140005f77:	call   0x140005fc0
   140005f7c:	test   eax,eax
   140005f7e:	je     0x140005fa2
   140005f80:	sub    rbx,rdi
   140005f83:	mov    rdx,rbx
   140005f86:	mov    rcx,rdi
   140005f89:	call   0x140005f10
   140005f8e:	test   rax,rax
   140005f91:	je     0x140005fa2
   140005f93:	mov    eax,DWORD PTR [rax+0x24]
   140005f96:	shr    eax,0x1f
   140005f99:	not    eax
   140005f9b:	and    eax,0x1
   140005f9e:	jmp    0x140005fa2
   140005fa0:	xor    eax,eax
   140005fa2:	mov    rbx,QWORD PTR [rsp+0x30]
   140005fa7:	add    rsp,0x20
   140005fab:	pop    rdi
   140005fac:	ret    
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	int3   
   140005fb1:	int3   
   140005fb2:	int3   
   140005fb3:	int3   
   140005fb4:	int3   
   140005fb5:	int3   
   140005fb6:	int3   
   140005fb7:	int3   
   140005fb8:	int3   
   140005fb9:	int3   
   140005fba:	int3   
   140005fbb:	int3   
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	mov    rax,rcx
   140005fc3:	mov    ecx,0x5a4d
   140005fc8:	cmp    WORD PTR [rax],cx
   140005fcb:	je     0x140005fd0
   140005fcd:	xor    eax,eax
   140005fcf:	ret    
   140005fd0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005fd4:	add    rcx,rax
   140005fd7:	xor    eax,eax
   140005fd9:	cmp    DWORD PTR [rcx],0x4550
   140005fdf:	jne    0x140005fed
   140005fe1:	mov    edx,0x20b
   140005fe6:	cmp    WORD PTR [rcx+0x18],dx
   140005fea:	sete   al
   140005fed:	ret    
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	int3   
   140005ff1:	int3   
   140005ff2:	int3   
   140005ff3:	int3   
   140005ff4:	mov    QWORD PTR [rsp+0x20],rbx
   140005ff9:	push   rbp
   140005ffa:	mov    rbp,rsp
   140005ffd:	sub    rsp,0x20
   140006001:	and    QWORD PTR [rbp+0x18],0x0
   140006006:	movabs rbx,0x2b992ddfa232
   140006010:	mov    rax,QWORD PTR [rip+0x3ff1]        # 0x14000a008
   140006017:	cmp    rax,rbx
   14000601a:	jne    0x1400060af
   140006020:	lea    rcx,[rbp+0x18]
   140006024:	call   QWORD PTR [rip+0x113e]        # 0x140007168
   14000602a:	mov    rax,QWORD PTR [rbp+0x18]
   14000602e:	mov    QWORD PTR [rbp+0x10],rax
   140006032:	call   QWORD PTR [rip+0x10d8]        # 0x140007110
   140006038:	mov    eax,eax
   14000603a:	xor    QWORD PTR [rbp+0x10],rax
   14000603e:	call   QWORD PTR [rip+0x10d4]        # 0x140007118
   140006044:	mov    eax,eax
   140006046:	xor    QWORD PTR [rbp+0x10],rax
   14000604a:	call   QWORD PTR [rip+0x1110]        # 0x140007160
   140006050:	mov    eax,eax
   140006052:	shl    rax,0x18
   140006056:	xor    QWORD PTR [rbp+0x10],rax
   14000605a:	call   QWORD PTR [rip+0x1100]        # 0x140007160
   140006060:	mov    eax,eax
   140006062:	lea    rcx,[rbp+0x10]
   140006066:	xor    rax,QWORD PTR [rbp+0x10]
   14000606a:	xor    rax,rcx
   14000606d:	lea    rcx,[rbp+0x20]
   140006071:	mov    QWORD PTR [rbp+0x10],rax
   140006075:	call   QWORD PTR [rip+0x10b5]        # 0x140007130
   14000607b:	mov    eax,DWORD PTR [rbp+0x20]
   14000607e:	movabs rcx,0xffffffffffff
   140006088:	shl    rax,0x20
   14000608c:	xor    rax,QWORD PTR [rbp+0x20]
   140006090:	xor    rax,QWORD PTR [rbp+0x10]
   140006094:	and    rax,rcx
   140006097:	movabs rcx,0x2b992ddfa233
   1400060a1:	cmp    rax,rbx
   1400060a4:	cmove  rax,rcx
   1400060a8:	mov    QWORD PTR [rip+0x3f59],rax        # 0x14000a008
   1400060af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400060b4:	not    rax
   1400060b7:	mov    QWORD PTR [rip+0x3f52],rax        # 0x14000a010
   1400060be:	add    rsp,0x20
   1400060c2:	pop    rbp
   1400060c3:	ret    
   1400060c4:	int3   
   1400060c5:	int3   
   1400060c6:	int3   
   1400060c7:	int3   
   1400060c8:	int3   
   1400060c9:	int3   
   1400060ca:	jmp    QWORD PTR [rip+0x1220]        # 0x1400072f0
   1400060d0:	int3   
   1400060d1:	int3   
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	int3   
   1400060d5:	int3   
   1400060d6:	jmp    QWORD PTR [rip+0x120c]        # 0x1400072e8
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	int3   
   1400060e1:	int3   
   1400060e2:	int3   
   1400060e3:	int3   
   1400060e4:	int3   
   1400060e5:	int3   
   1400060e6:	int3   
   1400060e7:	int3   
   1400060e8:	int3   
   1400060e9:	int3   
   1400060ea:	int3   
   1400060eb:	int3   
   1400060ec:	int3   
   1400060ed:	int3   
   1400060ee:	int3   
   1400060ef:	int3   
   1400060f0:	ret    0x0
   1400060f3:	int3   
   1400060f4:	int3   
   1400060f5:	int3   
   1400060f6:	int3   
   1400060f7:	int3   
   1400060f8:	int3   
   1400060f9:	int3   
   1400060fa:	int3   
   1400060fb:	int3   
   1400060fc:	rex push rbx
   1400060fe:	sub    rsp,0x20
   140006102:	mov    rbx,rcx
   140006105:	xor    ecx,ecx
   140006107:	call   QWORD PTR [rip+0xf13]        # 0x140007020
   14000610d:	mov    rcx,rbx
   140006110:	call   QWORD PTR [rip+0xf02]        # 0x140007018
   140006116:	call   QWORD PTR [rip+0x1004]        # 0x140007120
   14000611c:	mov    rcx,rax
   14000611f:	mov    edx,0xc0000409
   140006124:	add    rsp,0x20
   140006128:	pop    rbx
   140006129:	rex.W jmp QWORD PTR [rip+0xfd0]        # 0x140007100
   140006130:	int3   
   140006131:	int3   
   140006132:	int3   
   140006133:	int3   
   140006134:	int3   
   140006135:	int3   
   140006136:	int3   
   140006137:	int3   
   140006138:	int3   
   140006139:	int3   
   14000613a:	int3   
   14000613b:	int3   
   14000613c:	int3   
   14000613d:	int3   
   14000613e:	int3   
   14000613f:	int3   
   140006140:	mov    QWORD PTR [rsp+0x8],rcx
   140006145:	sub    rsp,0x88
   14000614c:	lea    rcx,[rip+0x446d]        # 0x14000a5c0
   140006153:	call   QWORD PTR [rip+0x1227]        # 0x140007380
   140006159:	mov    rax,QWORD PTR [rip+0x4558]        # 0x14000a6b8
   140006160:	mov    QWORD PTR [rsp+0x48],rax
   140006165:	xor    r8d,r8d
   140006168:	lea    rdx,[rsp+0x50]
   14000616d:	mov    rcx,QWORD PTR [rsp+0x48]
   140006172:	call   QWORD PTR [rip+0x1200]        # 0x140007378
   140006178:	mov    QWORD PTR [rsp+0x40],rax
   14000617d:	cmp    QWORD PTR [rsp+0x40],0x0
   140006183:	je     0x1400061c7
   140006185:	mov    QWORD PTR [rsp+0x38],0x0
   14000618e:	lea    rax,[rsp+0x58]
   140006193:	mov    QWORD PTR [rsp+0x30],rax
   140006198:	lea    rax,[rsp+0x60]
   14000619d:	mov    QWORD PTR [rsp+0x28],rax
   1400061a2:	lea    rax,[rip+0x4417]        # 0x14000a5c0
   1400061a9:	mov    QWORD PTR [rsp+0x20],rax
   1400061ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400061b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400061b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400061bd:	xor    ecx,ecx
   1400061bf:	call   QWORD PTR [rip+0x11ab]        # 0x140007370
   1400061c5:	jmp    0x1400061ea
   1400061c7:	mov    rax,QWORD PTR [rip+0x448a]        # 0x14000a658
   1400061ce:	mov    rax,QWORD PTR [rax]
   1400061d1:	mov    QWORD PTR [rip+0x44e0],rax        # 0x14000a6b8
   1400061d8:	mov    rax,QWORD PTR [rip+0x4479]        # 0x14000a658
   1400061df:	add    rax,0x8
   1400061e3:	mov    QWORD PTR [rip+0x446e],rax        # 0x14000a658
   1400061ea:	mov    rax,QWORD PTR [rip+0x44c7]        # 0x14000a6b8
   1400061f1:	mov    QWORD PTR [rip+0x4338],rax        # 0x14000a530
   1400061f8:	mov    rax,QWORD PTR [rsp+0x90]
   140006200:	mov    QWORD PTR [rip+0x4439],rax        # 0x14000a640
   140006207:	mov    DWORD PTR [rip+0x430f],0xc0000409        # 0x14000a520
   140006211:	mov    DWORD PTR [rip+0x4309],0x1        # 0x14000a524
   14000621b:	mov    DWORD PTR [rip+0x4313],0x3        # 0x14000a538
   140006225:	mov    eax,0x8
   14000622a:	imul   rax,rax,0x0
   14000622e:	lea    rcx,[rip+0x430b]        # 0x14000a540
   140006235:	mov    QWORD PTR [rcx+rax*1],0x2
   14000623d:	mov    eax,0x8
   140006242:	imul   rax,rax,0x1
   140006246:	lea    rcx,[rip+0x42f3]        # 0x14000a540
   14000624d:	mov    rdx,QWORD PTR [rip+0x3db4]        # 0x14000a008
   140006254:	mov    QWORD PTR [rcx+rax*1],rdx
   140006258:	mov    eax,0x8
   14000625d:	imul   rax,rax,0x2
   140006261:	lea    rcx,[rip+0x42d8]        # 0x14000a540
   140006268:	mov    rdx,QWORD PTR [rip+0x3da1]        # 0x14000a010
   14000626f:	mov    QWORD PTR [rcx+rax*1],rdx
   140006273:	mov    eax,0x8
   140006278:	imul   rax,rax,0x0
   14000627c:	mov    rcx,QWORD PTR [rip+0x3d85]        # 0x14000a008
   140006283:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006288:	mov    eax,0x8
   14000628d:	imul   rax,rax,0x1
   140006291:	mov    rcx,QWORD PTR [rip+0x3d78]        # 0x14000a010
   140006298:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000629d:	lea    rcx,[rip+0x11bc]        # 0x140007460
   1400062a4:	call   0x1400060fc
   1400062a9:	add    rsp,0x88
   1400062b0:	ret    
   1400062b1:	int3   
   1400062b2:	int3   
   1400062b3:	int3   
   1400062b4:	int3   
   1400062b5:	int3   
   1400062b6:	int3   
   1400062b7:	int3   
   1400062b8:	int3   
   1400062b9:	int3   
   1400062ba:	int3   
   1400062bb:	int3   
   1400062bc:	int3   
   1400062bd:	int3   
   1400062be:	int3   
   1400062bf:	int3   
   1400062c0:	int3   
   1400062c1:	int3   
   1400062c2:	int3   
   1400062c3:	int3   
   1400062c4:	int3   
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	sub    rsp,0x28
   1400062cc:	mov    r8,QWORD PTR [r9+0x38]
   1400062d0:	mov    rcx,rdx
   1400062d3:	mov    rdx,r9
   1400062d6:	call   0x1400062ec
   1400062db:	mov    eax,0x1
   1400062e0:	add    rsp,0x28
   1400062e4:	ret    
   1400062e5:	int3   
   1400062e6:	int3   
   1400062e7:	int3   
   1400062e8:	int3   
   1400062e9:	int3   
   1400062ea:	int3   
   1400062eb:	int3   
   1400062ec:	rex push rbx
   1400062ee:	sub    rsp,0x20
   1400062f2:	mov    r11d,DWORD PTR [r8]
   1400062f5:	mov    rbx,rdx
   1400062f8:	and    r11d,0xfffffff8
   1400062fc:	mov    r9,rcx
   1400062ff:	test   BYTE PTR [r8],0x4
   140006303:	mov    r10,rcx
   140006306:	je     0x14000631b
   140006308:	mov    eax,DWORD PTR [r8+0x8]
   14000630c:	movsxd r10,DWORD PTR [r8+0x4]
   140006310:	neg    eax
   140006312:	add    r10,rcx
   140006315:	movsxd rcx,eax
   140006318:	and    r10,rcx
   14000631b:	movsxd rax,r11d
   14000631e:	mov    rdx,QWORD PTR [rax+r10*1]
   140006322:	mov    rax,QWORD PTR [rbx+0x10]
   140006326:	mov    ecx,DWORD PTR [rax+0x8]
   140006329:	add    rcx,QWORD PTR [rbx+0x8]
   14000632d:	test   BYTE PTR [rcx+0x3],0xf
   140006331:	je     0x14000633f
   140006333:	movzx  eax,BYTE PTR [rcx+0x3]
   140006337:	and    eax,0xfffffff0
   14000633a:	cdqe   
   14000633c:	add    r9,rax
   14000633f:	xor    r9,rdx
   140006342:	mov    rcx,r9
   140006345:	add    rsp,0x20
   140006349:	pop    rbx
   14000634a:	jmp    0x140005db0
   14000634f:	int3   
   140006350:	int3   
   140006351:	int3   
   140006352:	int3   
   140006353:	int3   
   140006354:	int3   
   140006355:	int3   
   140006356:	jmp    QWORD PTR [rip+0xf2c]        # 0x140007288
   14000635c:	int3   
   14000635d:	int3   
   14000635e:	int3   
   14000635f:	int3   
   140006360:	int3   
   140006361:	int3   
   140006362:	jmp    QWORD PTR [rip+0xff8]        # 0x140007360
   140006368:	int3   
   140006369:	int3   
   14000636a:	int3   
   14000636b:	int3   
   14000636c:	int3   
   14000636d:	int3   
   14000636e:	int3   
   14000636f:	int3   
   140006370:	int3   
   140006371:	int3   
   140006372:	int3   
   140006373:	int3   
   140006374:	int3   
   140006375:	int3   
   140006376:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006380:	jmp    rax
   140006382:	int3   
   140006383:	int3   
   140006384:	int3   
   140006385:	int3   
   140006386:	int3   
   140006387:	int3   
   140006388:	int3   
   140006389:	int3   
   14000638a:	int3   
   14000638b:	int3   
   14000638c:	int3   
   14000638d:	int3   
   14000638e:	int3   
   14000638f:	int3   
   140006390:	int3   
   140006391:	int3   
   140006392:	int3   
   140006393:	int3   
   140006394:	int3   
   140006395:	int3   
   140006396:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400063a0:	sub    rsp,0x10
   1400063a4:	mov    QWORD PTR [rsp],r10
   1400063a8:	mov    QWORD PTR [rsp+0x8],r11
   1400063ad:	xor    r11,r11
   1400063b0:	lea    r10,[rsp+0x18]
   1400063b5:	sub    r10,rax
   1400063b8:	cmovb  r10,r11
   1400063bc:	mov    r11,QWORD PTR gs:0x10
   1400063c5:	cmp    r10,r11
   1400063c8:	jae    0x1400063df
   1400063ca:	and    r10w,0xf000
   1400063d0:	lea    r11,[r11-0x1000]
   1400063d7:	test   BYTE PTR [r11],r11b
   1400063da:	cmp    r10,r11
   1400063dd:	jne    0x1400063d0
   1400063df:	mov    r10,QWORD PTR [rsp]
   1400063e3:	mov    r11,QWORD PTR [rsp+0x8]
   1400063e8:	add    rsp,0x10
   1400063ec:	ret    
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	int3   
   1400063f1:	int3   
   1400063f2:	int3   
   1400063f3:	int3   
   1400063f4:	int3   
   1400063f5:	int3   
   1400063f6:	rex push rbp
   1400063f8:	sub    rsp,0x40
   1400063fc:	mov    rbp,rdx
   1400063ff:	cmp    DWORD PTR [rbp+0x40],0x0
   140006403:	je     0x140006410
   140006405:	mov    rcx,QWORD PTR [rbp+0x50]
   140006409:	call   QWORD PTR [rip+0xeb1]        # 0x1400072c0
   14000640f:	nop
   140006410:	mov    rcx,QWORD PTR [rbp+0x58]
   140006414:	test   rcx,rcx
   140006417:	je     0x140006420
   140006419:	call   QWORD PTR [rip+0xea1]        # 0x1400072c0
   14000641f:	nop
   140006420:	add    rsp,0x40
   140006424:	pop    rbp
   140006425:	ret    
   140006426:	int3   
   140006427:	int3   
   140006428:	int3   
   140006429:	int3   
   14000642a:	int3   
   14000642b:	int3   
   14000642c:	int3   
   14000642d:	rex push rbp
   14000642f:	sub    rsp,0x40
   140006433:	mov    rbp,rdx
   140006436:	mov    rcx,QWORD PTR [rbp+0x50]
   14000643a:	call   QWORD PTR [rip+0xe80]        # 0x1400072c0
   140006440:	mov    rcx,QWORD PTR [rbp+0x58]
   140006444:	call   QWORD PTR [rip+0xe76]        # 0x1400072c0
   14000644a:	mov    rcx,QWORD PTR [rbp+0x48]
   14000644e:	call   QWORD PTR [rip+0xc4c]        # 0x1400070a0
   140006454:	nop
   140006455:	add    rsp,0x40
   140006459:	pop    rbp
   14000645a:	ret    
   14000645b:	int3   
   14000645c:	int3   
   14000645d:	int3   
   14000645e:	int3   
   14000645f:	int3   
   140006460:	int3   
   140006461:	int3   
   140006462:	rex push rbp
   140006464:	sub    rsp,0x30
   140006468:	mov    rbp,rdx
   14000646b:	mov    rcx,QWORD PTR [rbp+0x80]
   140006472:	call   QWORD PTR [rip+0xc08]        # 0x140007080
   140006478:	mov    rcx,QWORD PTR [rbp+0x38]
   14000647c:	call   QWORD PTR [rip+0xe3e]        # 0x1400072c0
   140006482:	mov    rcx,QWORD PTR [rbp+0x40]
   140006486:	call   QWORD PTR [rip+0xe34]        # 0x1400072c0
   14000648c:	nop
   14000648d:	add    rsp,0x30
   140006491:	pop    rbp
   140006492:	ret    
   140006493:	int3   
   140006494:	int3   
   140006495:	int3   
   140006496:	int3   
   140006497:	int3   
   140006498:	int3   
   140006499:	int3   
   14000649a:	rex push rbp
   14000649c:	sub    rsp,0x40
   1400064a0:	mov    rbp,rdx
   1400064a3:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400064aa:	call   QWORD PTR [rip+0xe10]        # 0x1400072c0
   1400064b0:	and    QWORD PTR [rbp+0xa0],0x0
   1400064b8:	mov    rcx,QWORD PTR [rbp+0xb0]
   1400064bf:	call   QWORD PTR [rip+0xdfb]        # 0x1400072c0
   1400064c5:	and    QWORD PTR [rbp+0xb0],0x0
   1400064cd:	mov    rcx,QWORD PTR [rbp+0x70]
   1400064d1:	call   QWORD PTR [rip+0xde9]        # 0x1400072c0
   1400064d7:	and    QWORD PTR [rbp+0x70],0x0
   1400064dc:	mov    rcx,QWORD PTR [rbp+0x88]
   1400064e3:	call   QWORD PTR [rip+0xdd7]        # 0x1400072c0
   1400064e9:	and    QWORD PTR [rbp+0x88],0x0
   1400064f1:	mov    rcx,QWORD PTR [rbp+0x58]
   1400064f5:	call   QWORD PTR [rip+0xba5]        # 0x1400070a0
   1400064fb:	nop
   1400064fc:	add    rsp,0x40
   140006500:	pop    rbp
   140006501:	ret    
   140006502:	int3   
   140006503:	int3   
   140006504:	int3   
   140006505:	int3   
   140006506:	int3   
   140006507:	int3   
   140006508:	int3   
   140006509:	rex push rbp
   14000650b:	sub    rsp,0x40
   14000650f:	mov    rbp,rdx
   140006512:	mov    rcx,QWORD PTR [rbp+0xb0]
   140006519:	call   QWORD PTR [rip+0xda1]        # 0x1400072c0
   14000651f:	mov    rcx,QWORD PTR [rbp+0x50]
   140006523:	add    rsp,0x40
   140006527:	pop    rbp
   140006528:	rex.W jmp QWORD PTR [rip+0xd91]        # 0x1400072c0
   14000652f:	int3   
   140006530:	int3   
   140006531:	int3   
   140006532:	int3   
   140006533:	int3   
   140006534:	int3   
   140006535:	int3   
   140006536:	rex push rbp
   140006538:	sub    rsp,0x20
   14000653c:	mov    rbp,rdx
   14000653f:	mov    rax,QWORD PTR [rcx]
   140006542:	mov    rdx,rcx
   140006545:	mov    ecx,DWORD PTR [rax]
   140006547:	call   0x140005e3e
   14000654c:	nop
   14000654d:	add    rsp,0x20
   140006551:	pop    rbp
   140006552:	ret    
   140006553:	int3   
   140006554:	int3   
   140006555:	int3   
   140006556:	int3   
   140006557:	int3   
   140006558:	int3   
   140006559:	int3   
   14000655a:	int3   
   14000655b:	int3   
   14000655c:	int3   
   14000655d:	int3   
   14000655e:	int3   
   14000655f:	int3   
   140006560:	rex push rbp
   140006562:	sub    rsp,0x20
   140006566:	mov    rbp,rdx
   140006569:	mov    rax,QWORD PTR [rcx]
   14000656c:	xor    ecx,ecx
   14000656e:	cmp    DWORD PTR [rax],0xc0000005
   140006574:	sete   cl
   140006577:	mov    eax,ecx
   140006579:	add    rsp,0x20
   14000657d:	pop    rbp
   14000657e:	ret    
   14000657f:	int3   

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	push   0xffffffffffffff8d
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	add    BYTE PTR [rbp+0x0],cl
	...
   140007016:	add    BYTE PTR [rax],al
   140007018:	ss nop
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	add    BYTE PTR [rax],al
   14000701e:	add    BYTE PTR [rax],al
   140007020:	xchg   esp,eax
   140007021:	pop    QWORD PTR [rax]
   140007023:	add    BYTE PTR [rax],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    dh,ah
   140007029:	lea    eax,[rax]
   14000702b:	add    BYTE PTR [rax],al
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    dh,dl
   140007031:	lea    eax,[rax]
	...
   14000703f:	add    BYTE PTR [rbp+rcx*4+0x0],dl
   140007043:	add    BYTE PTR [rax],al
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rdx+0x8e],ch
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    BYTE PTR [rax],ah
   140007051:	mov    es,WORD PTR [rax]
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rsi-0x74],bl
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	(bad)  
   140007061:	mov    es,WORD PTR [rax]
   140007063:	add    BYTE PTR [rax],al
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    ah,bl
   140007069:	mov    es,WORD PTR [rax]
   14000706b:	add    BYTE PTR [rax],al
   14000706d:	add    BYTE PTR [rax],al
   14000706f:	add    BYTE PTR [rdx+0x8c],dh
	...
   14000707d:	add    BYTE PTR [rax],al
   14000707f:	add    BYTE PTR [rsi-0x71],dl
	...
   14000708e:	add    BYTE PTR [rax],al
   140007090:	(bad)  
   140007091:	mov    es,WORD PTR [rax]
	...
   14000709f:	add    BYTE PTR [rax+0x8f],al
   1400070a5:	add    BYTE PTR [rax],al
   1400070a7:	add    BYTE PTR [rdx],dl
   1400070a9:	mov    es,WORD PTR [rax]
	...
   1400070b7:	add    BYTE PTR [rdx],ch
   1400070b9:	xchg   ebx,eax
	...
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	mov    dl,0x8f
	...
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	mov    dh,0x8d
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	adc    cl,BYTE PTR [rbp+0x0]
	...
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400070f1:	lea    eax,[rax]
	...
   1400070ff:	add    BYTE PTR [rdx-0x70],dl
   140007102:	add    BYTE PTR [rax],al
   140007104:	add    BYTE PTR [rax],al
   140007106:	add    BYTE PTR [rax],al
   140007108:	rex.WX mov WORD PTR [rax],es
   14000710b:	add    BYTE PTR [rax],al
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    al,ah
   140007111:	pop    QWORD PTR [rax]
   140007113:	add    BYTE PTR [rax],al
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    dh,dh
   140007119:	pop    QWORD PTR [rax]
   14000711b:	add    BYTE PTR [rax],al
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    BYTE PTR [rsp+rcx*4+0x0],dl
	...
   14000712e:	add    BYTE PTR [rax],al
   140007130:	(bad)  
   140007131:	pop    QWORD PTR [rax]
	...
   14000713f:	add    dl,ch
   140007141:	mov    WORD PTR [rax],es
	...
   14000714f:	add    BYTE PTR [rdi+rcx*4+0x0],cl
	...
   14000715e:	add    BYTE PTR [rax],al
   140007160:	es nop
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	or     al,0x90
	...
   140007176:	add    BYTE PTR [rax],al
   140007178:	je     0x140007108
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	add    BYTE PTR [rax],al
   14000717e:	add    BYTE PTR [rax],al
   140007180:	(bad)  
   140007181:	mov    es,WORD PTR [rax]
   140007183:	add    BYTE PTR [rax],al
   140007185:	add    BYTE PTR [rax],al
   140007187:	add    ah,ch
   140007189:	mov    es,WORD PTR [rax]
   14000718b:	add    BYTE PTR [rax],al
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    dh,dh
   140007191:	lea    eax,[rax]
   140007193:	add    BYTE PTR [rax],al
   140007195:	add    BYTE PTR [rax],al
   140007197:	add    BYTE PTR [rax+0x8c],cl
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rsp+rcx*4],bh
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	jle    0x140007138
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	add    BYTE PTR [rax],al
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	pop    QWORD PTR fs:[rax]
   1400071b3:	add    BYTE PTR [rax],al
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    BYTE PTR [rax-0x74],dh
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	fimul  WORD PTR [rax+rax*1+0x0]
   1400071c7:	add    BYTE PTR [rsi-0x72],ah
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	add    BYTE PTR [rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	test   al,0x8c
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	add    BYTE PTR [rax],al
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	mov    esi,0x8c
	...
   1400071e5:	add    BYTE PTR [rax],al
   1400071e7:	add    BYTE PTR [rdx+0x8d],dl
   1400071ed:	add    BYTE PTR [rax],al
   1400071ef:	add    BYTE PTR [rdx-0x73],bh
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	lea    eax,ds:[rax]
	...
   140007207:	add    al,dh
   140007209:	xchg   edx,eax
   14000720a:	add    BYTE PTR [rax],al
   14000720c:	add    BYTE PTR [rax],al
   14000720e:	add    BYTE PTR [rax],al
   140007210:	ficom  WORD PTR [rdx+0x0]
	...
   14000721e:	add    BYTE PTR [rax],al
   140007220:	add    al,0x8f
   140007222:	add    BYTE PTR [rax],al
   140007224:	add    BYTE PTR [rax],al
   140007226:	add    BYTE PTR [rax],al
   140007228:	(bad)  
   140007229:	pop    QWORD PTR [rax]
   14000722b:	add    BYTE PTR [rax],al
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    BYTE PTR [rcx*4+0x0],ah
   140007236:	add    BYTE PTR [rax],al
   140007238:	mov    es,WORD PTR cs:[rax]
	...
   140007247:	add    BYTE PTR [rsi],ah
   140007249:	mov    al,BYTE PTR [rax]
   14000724b:	add    BYTE PTR [rax],al
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rdx+rcx*4],bl
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	adc    cl,BYTE PTR [rdx+0x0]
   14000725e:	add    BYTE PTR [rax],al
   140007260:	data16 mov al,BYTE PTR [rax]
   140007263:	add    BYTE PTR [rax],al
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rax],cl
   140007269:	mov    al,BYTE PTR [rax]
   14000726b:	add    BYTE PTR [rax],al
   14000726d:	add    BYTE PTR [rax],al
   14000726f:	add    dh,bh
   140007271:	mov    DWORD PTR [rax],eax
   140007273:	add    BYTE PTR [rax],al
   140007275:	add    BYTE PTR [rax],al
   140007277:	add    dl,dh
   140007279:	mov    DWORD PTR [rax],eax
   14000727b:	add    BYTE PTR [rax],al
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rdx+rcx*4+0x0],bl
   140007283:	add    BYTE PTR [rax],al
   140007285:	add    BYTE PTR [rax],al
   140007287:	add    BYTE PTR [rax-0x6d],ah
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rax],al
   14000728e:	add    BYTE PTR [rax],al
   140007290:	call   0x14000731e
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    BYTE PTR [rax+0x89],cl
   14000729d:	add    BYTE PTR [rax],al
   14000729f:	add    dl,dl
   1400072a1:	mov    DWORD PTR [rax],eax
   1400072a3:	add    BYTE PTR [rax],al
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    BYTE PTR [rdx-0x76],dl
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	rex.RX mov r8b,BYTE PTR [rax]
   1400072b3:	add    BYTE PTR [rax],al
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    al,cl
   1400072b9:	mov    DWORD PTR [rax],eax
   1400072bb:	add    BYTE PTR [rax],al
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    al,al
   1400072c1:	mov    DWORD PTR [rax],eax
   1400072c3:	add    BYTE PTR [rax],al
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    BYTE PTR [rcx+rcx*4+0x0],dh
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	sbb    cl,BYTE PTR [rbx+0x0]
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	add    cl,BYTE PTR [rbx+0x0]
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	clc    
   1400072e1:	mov    al,BYTE PTR [rax]
   1400072e3:	add    BYTE PTR [rax],al
   1400072e5:	add    BYTE PTR [rax],al
   1400072e7:	add    al,ah
   1400072e9:	mov    al,BYTE PTR [rax]
   1400072eb:	add    BYTE PTR [rax],al
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    ah,dl
   1400072f1:	mov    al,BYTE PTR [rax]
   1400072f3:	add    BYTE PTR [rax],al
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    al,al
   1400072f9:	mov    al,BYTE PTR [rax]
   1400072fb:	add    BYTE PTR [rax],al
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    BYTE PTR [rcx+rcx*4+0x0],ch
   140007306:	add    BYTE PTR [rax],al
   140007308:	mov    dh,0x8a
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	scas   al,BYTE PTR es:[rdi]
   140007311:	mov    al,BYTE PTR [rax]
   140007313:	add    BYTE PTR [rax],al
   140007315:	add    BYTE PTR [rax],al
   140007317:	add    BYTE PTR [rsi+0x8a],ah
   14000731d:	add    BYTE PTR [rax],al
   14000731f:	add    BYTE PTR [rdx+rcx*4+0x0],dl
   140007326:	add    BYTE PTR [rax],al
   140007328:	movabs al,ds:0x8200000000000089
   140007331:	mov    al,BYTE PTR [rax]
   140007333:	add    BYTE PTR [rax],al
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    dh,bl
   140007339:	mov    DWORD PTR [rax],eax
   14000733b:	add    BYTE PTR [rax],al
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    BYTE PTR [rdx+rcx*4],bh
   140007342:	add    BYTE PTR [rax],al
   140007344:	add    BYTE PTR [rax],al
   140007346:	add    BYTE PTR [rax],al
   140007348:	xor    BYTE PTR [rdx+0x0],cl
   14000734e:	add    BYTE PTR [rax],al
   140007350:	xchg   edx,eax
   140007351:	mov    DWORD PTR [rax],eax
   140007353:	add    BYTE PTR [rax],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   14000735b:	add    BYTE PTR [rax],al
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    BYTE PTR [rax-0x6d],dh
	...
   14000736e:	add    BYTE PTR [rax],al
   140007370:	(bad)  
   140007371:	mov    WORD PTR [rax],es
   140007373:	add    BYTE PTR [rax],al
   140007375:	add    BYTE PTR [rax],al
   140007377:	add    BYTE PTR [rsp+rcx*4],al
   14000737a:	add    BYTE PTR [rax],al
   14000737c:	add    BYTE PTR [rax],al
   14000737e:	add    BYTE PTR [rax],al
   140007380:	lock mov eax,DWORD PTR [rax]
   140007383:	add    BYTE PTR [rax],al
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    dl,ah
   140007389:	mov    eax,DWORD PTR [rax]
   14000738b:	add    BYTE PTR [rax],al
   14000738d:	add    BYTE PTR [rax],al
   14000738f:	add    al,cl
   140007391:	mov    eax,DWORD PTR [rax]
   140007393:	add    BYTE PTR [rax],al
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    BYTE PTR [rsi+0x8b],bh
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rsi+0x8b],ah
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rsi-0x75],bh
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	add    BYTE PTR [rax],al
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	mov    eax,DWORD PTR fs:[rax]
   1400073b3:	add    BYTE PTR [rax],al
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rdx-0x75],dl
   1400073ba:	add    BYTE PTR [rax],al
   1400073bc:	add    BYTE PTR [rax],al
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	mov    r8d,DWORD PTR [rax]
   1400073c3:	add    BYTE PTR [rax],al
   1400073c5:	add    BYTE PTR [rax],al
   1400073c7:	add    BYTE PTR [rsi],ch
   1400073c9:	mov    eax,DWORD PTR [rax]
	...
   1400073d7:	add    al,dh
   1400073d9:	(bad)  
   1400073da:	add    BYTE PTR [rax+0x1],al
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rax+0x1400063],al
	...
   1400073ed:	add    BYTE PTR [rax],al
   1400073ef:	add    BYTE PTR [rax+0x5b],dl
   1400073f2:	add    BYTE PTR [rax+0x1],al
	...
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rax+0x5a],dh
   14000740a:	add    BYTE PTR [rax+0x1],al
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rax],ah
   140007411:	pop    rsi
   140007412:	add    BYTE PTR [rax+0x1],al
	...
   140007421:	xor    al,0x0
   140007423:	add    BYTE PTR [rax],dh
   140007425:	add    BYTE PTR ss:[rax],al
   140007428:	(bad)  
   140007429:	rex.X add BYTE PTR [rax],al
   14000742c:	and    BYTE PTR [rbx+0x0],al
   14000742f:	add    BYTE PTR [rax+0x44],al
   140007432:	add    BYTE PTR [rax],al
   140007434:	movabs al,ds:0x7000004680000045
   14000743d:	pop    rdx
   14000743e:	add    BYTE PTR [rax],al
   140007440:	push   rax
   140007441:	pop    rbx
   140007442:	add    BYTE PTR [rax],al
   140007444:	sbb    BYTE PTR [rbp+0x0],0x0
   140007448:	loopne 0x1400074a7
   14000744a:	add    BYTE PTR [rax],al
   14000744c:	and    BYTE PTR [rsi+0x0],bl
   14000744f:	add    BYTE PTR [rax],al
   140007451:	pop    rdi
   140007452:	add    BYTE PTR [rax],al
   140007454:	lock (bad) 
   140007456:	add    BYTE PTR [rax],al
   140007458:	rex (bad) 
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	add    BYTE PTR [rax],al
   14000745e:	add    BYTE PTR [rax],al
   140007460:	and    BYTE PTR [rbp+0x14000],ah
   140007466:	add    BYTE PTR [rax],al
   140007468:	shl    BYTE PTR [rbp+0x14000],0x0
   14000746f:	add    BYTE PTR [rax+rax*1+0x0],bl
   140007473:	add    BYTE PTR [rax],ah
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rip+0x73002a00],ah        # 0x1b3009e7d
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    BYTE PTR [rdi+0x75],cl
   140007482:	je     0x1400074a4
   140007484:	outs   dx,DWORD PTR ds:[rsi]
   140007485:	data16 and BYTE PTR [rbp+0x65],ch
   140007489:	ins    DWORD PTR es:[rdi],dx
   14000748a:	outs   dx,DWORD PTR ds:[rsi]
   14000748b:	jb     0x140007506
   14000748d:	or     al,BYTE PTR [rax]
   14000748f:	add    BYTE PTR [rdx],bh
   140007491:	add    BYTE PTR [rax],ah
   140007493:	add    BYTE PTR [rax],al
   140007495:	add    BYTE PTR [rax],al
   140007497:	add    BYTE PTR [rsi+0x0],al
   14000749a:	add    BYTE PTR [rax],al
   14000749c:	rex.WRB add BYTE PTR [r8],r8b
   14000749f:	add    BYTE PTR [rdx+0x0],dl
   1400074a2:	pop    rax
   1400074a3:	add    BYTE PTR [rax],al
   1400074a5:	add    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rdx+0x0],dl
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	push   rdi
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rax+rax*1+0x0],al
   1400074b3:	add    BYTE PTR [rcx+0x0],al
   1400074b6:	push   rbx
   1400074b7:	add    BYTE PTR [rax],al
   1400074b9:	add    BYTE PTR [rax],al
   1400074bb:	add    BYTE PTR [rbp+0x0],cl
   1400074be:	add    BYTE PTR [r8],al
   1400074c1:	add    BYTE PTR [rax],al
   1400074c3:	add    BYTE PTR [rdi+0x0],al
   1400074c6:	push   rdx
   1400074c7:	add    BYTE PTR [rax],al
   1400074c9:	add    BYTE PTR [rax],al
   1400074cb:	add    BYTE PTR [rdi+0x0],al
   1400074ce:	push   rdi
   1400074cf:	add    BYTE PTR [rax],al
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    BYTE PTR [rdi+0x0],al
   1400074d6:	add    BYTE PTR [r8],r8b
   1400074d9:	add    BYTE PTR [rax],al
   1400074db:	add    BYTE PTR [rdi+0x0],al
   1400074de:	add    BYTE PTR [r8],al
   1400074e1:	add    BYTE PTR [rax],al
   1400074e3:	add    BYTE PTR [rdx+0x0],dl
   1400074e6:	add    BYTE PTR [rax],r8b
   1400074e9:	add    BYTE PTR [rax],al
   1400074eb:	add    BYTE PTR [rax],al
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rdi+0x0],dl
   1400074f2:	add    BYTE PTR [rcx+0x0],r8b
   1400074f6:	rex.XB add BYTE PTR [r8],al
   1400074f9:	add    BYTE PTR [rax],al
   1400074fb:	add    BYTE PTR [rdi+0x0],dl
   1400074fe:	add    BYTE PTR [rax],r8b
   140007501:	add    BYTE PTR [rax],al
   140007503:	add    BYTE PTR [rcx+0x0],al
   140007506:	add    BYTE PTR [rax],r8b
   140007509:	add    BYTE PTR [rax],al
   14000750b:	add    BYTE PTR [rax],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rdx+0x0],dl
   140007512:	add    BYTE PTR [r9+0x0],r8b
   140007516:	add    BYTE PTR [rax],al
   140007518:	push   rdi
   140007519:	add    BYTE PTR [rbp+0x0],al
   14000751c:	add    BYTE PTR [r8],al
   14000751f:	add    BYTE PTR [rax+0x0],bl
   140007522:	add    BYTE PTR [rax],al
   140007524:	add    BYTE PTR [rbx+0x0],r8b
   140007528:	add    BYTE PTR [rax],al
   14000752a:	add    BYTE PTR [rax],al
   14000752c:	push   rdx
   14000752d:	add    BYTE PTR [rcx+0x0],al
   140007530:	add    BYTE PTR [rax],al
   140007532:	add    BYTE PTR [rax],al
   140007534:	push   rdi
   140007535:	add    BYTE PTR [rcx+0x0],al
   140007538:	add    BYTE PTR [rax],al
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	add    BYTE PTR [rbp+0x0],r8b
   140007540:	add    BYTE PTR [rax],al
   140007542:	add    BYTE PTR [rax],al
   140007544:	push   rdx
   140007545:	add    BYTE PTR [rbx+0x0],ah
   140007548:	add    BYTE PTR [rax],al
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	push   rdi
   14000754d:	add    BYTE PTR [rdi+0x0],cl
   140007550:	add    BYTE PTR [rax],al
   140007552:	add    BYTE PTR [rax],al
   140007554:	push   rbx
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rax],ch
   140007559:	add    BYTE PTR [rdi+0x0],cl
   14000755c:	rex.WB add BYTE PTR [r9],bpl
	...
   140007567:	add    BYTE PTR [rax],ch
   140007569:	add    BYTE PTR [rbx+0x0],al
   14000756c:	rex.WB add BYTE PTR [r9],bpl
	...
   140007577:	add    BYTE PTR [rax],ch
   140007579:	add    BYTE PTR [rsi+0x0],cl
   14000757c:	push   rax
   14000757d:	add    BYTE PTR [rcx],ch
	...
   140007587:	add    BYTE PTR [rax],ch
   140007589:	add    BYTE PTR [rcx+0x0],cl
   14000758c:	rex.WRXB add BYTE PTR [r9],r13b
   14000758f:	add    BYTE PTR [rax],al
   140007591:	add    BYTE PTR [rax],al
   140007593:	add    BYTE PTR [rax+rax*1+0x57],cl
   140007597:	add    BYTE PTR [rax],al
   140007599:	add    BYTE PTR [rax],al
   14000759b:	add    BYTE PTR [rbp+0x0],cl
   14000759e:	add    BYTE PTR [r8],r8b
   1400075a1:	add    BYTE PTR [rax],al
   1400075a3:	add    BYTE PTR [rax+0x0],cl
   1400075a6:	rex.WB add BYTE PTR [r8],al
   1400075a9:	add    BYTE PTR [rax],al
   1400075ab:	add    BYTE PTR [rax],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rax+rax*1+0x45],al
   1400075b3:	add    BYTE PTR [rax+rax*1+0x45],cl
   1400075b7:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400075bb:	add    BYTE PTR [rax],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rdx+0x0],dl
   1400075c2:	add    BYTE PTR [r9+0x0],r8b
   1400075c6:	add    BYTE PTR [rdi+0x0],r11b
   1400075ca:	rex.XB add BYTE PTR [r15+0x0],cl
   1400075ce:	rex.WRX add BYTE PTR [rax+r8*1+0x52],r10b
   1400075d3:	add    BYTE PTR [rdi+0x0],cl
   1400075d6:	rex.WR add BYTE PTR [rax],r8b
   1400075d9:	add    BYTE PTR [rax],al
   1400075db:	add    BYTE PTR [rax],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rdi+0x0],dl
   1400075e2:	push   rdx
   1400075e3:	add    BYTE PTR [rcx+0x0],cl
   1400075e6:	push   rsp
   1400075e7:	add    BYTE PTR [rbp+0x0],al
   1400075ea:	pop    rdi
   1400075eb:	add    BYTE PTR [rax+rax*1+0x41],al
   1400075ef:	add    BYTE PTR [rbx+0x0],al
   1400075f2:	add    BYTE PTR [rax],al
   1400075f4:	add    BYTE PTR [rax],al
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	push   rdi
   1400075f9:	add    BYTE PTR [rdx+0x0],dl
   1400075fc:	rex.WB add BYTE PTR [r8+rax*1+0x45],dl
   140007601:	add    BYTE PTR [rdi+0x0],bl
   140007604:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   140007608:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000760c:	push   rdx
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rbx+0x0],dl
   140007612:	pop    rcx
   140007613:	add    BYTE PTR [rsi+0x0],cl
   140007616:	rex.XB add BYTE PTR [r8+0x0],cl
   14000761a:	push   rdx
   14000761b:	add    BYTE PTR [rdi+0x0],cl
   14000761e:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140007622:	pop    rdx
   140007623:	add    BYTE PTR [rbp+0x0],al
   140007626:	add    BYTE PTR [rax],al
   140007628:	add    BYTE PTR [r11+0x0],al
   14000762c:	rex.XB add BYTE PTR [r13+0x0],al
   140007630:	push   rbx
   140007631:	add    BYTE PTR [rbx+0x0],dl
   140007634:	pop    rdi
   140007635:	add    BYTE PTR [rbx+0x0],dl
   140007638:	pop    rcx
   140007639:	add    BYTE PTR [rbx+0x0],dl
   14000763c:	push   rsp
   14000763d:	add    BYTE PTR [rbp+0x0],al
   140007640:	rex.WRB add BYTE PTR [r15+0x0],r11b
   140007644:	push   rbx
   140007645:	add    BYTE PTR [rbp+0x0],al
   140007648:	rex.XB add BYTE PTR [r13+0x0],dl
   14000764c:	push   rdx
   14000764d:	add    BYTE PTR [rcx+0x0],cl
   140007650:	push   rsp
   140007651:	add    BYTE PTR [rcx+0x0],bl
   140007654:	add    BYTE PTR [rax],al
   140007656:	add    BYTE PTR [rax],al
   140007658:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000765c:	pop    rax
   14000765d:	add    BYTE PTR [rcx+0x0],cl
   140007660:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140007664:	rex.WRB add BYTE PTR [r15+0x0],r11b
   140007668:	add    BYTE PTR [r8+rax*1+0x4c],cl
   14000766d:	add    BYTE PTR [rdi+0x0],cl
   140007670:	push   rdi
   140007671:	add    BYTE PTR [rbp+0x0],al
   140007674:	add    BYTE PTR [rax],r8b
   140007677:	add    BYTE PTR [rdi+0x0],al
   14000767a:	add    BYTE PTR [r14+0x0],r9b
   14000767e:	add    BYTE PTR [r10+0x0],r10b
   140007682:	rex.WB add BYTE PTR [r11+0x0],al
   140007686:	pop    rdi
   140007687:	add    BYTE PTR [rdx+0x0],dl
   14000768a:	add    BYTE PTR [r9+0x0],r8b
   14000768e:	add    BYTE PTR [rax],r8b
   140007691:	add    BYTE PTR [rax],al
   140007693:	add    BYTE PTR [rax],al
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rdi+0x0],al
   14000769a:	add    BYTE PTR [r14+0x0],r9b
   14000769e:	add    BYTE PTR [r10+0x0],r10b
   1400076a2:	rex.WB add BYTE PTR [r11+0x0],al
   1400076a6:	pop    rdi
   1400076a7:	add    BYTE PTR [rdi+0x0],dl
   1400076aa:	push   rdx
   1400076ab:	add    BYTE PTR [rcx+0x0],cl
   1400076ae:	push   rsp
   1400076af:	add    BYTE PTR [rbp+0x0],al
   1400076b2:	add    BYTE PTR [rax],al
   1400076b4:	add    BYTE PTR [rax],al
   1400076b6:	add    BYTE PTR [rax],al
   1400076b8:	rex.RXB add BYTE PTR [r13+0x0],r8b
   1400076bc:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   1400076c0:	push   rdx
   1400076c1:	add    BYTE PTR [rcx+0x0],cl
   1400076c4:	rex.XB add BYTE PTR [r15+0x0],bl
   1400076c8:	add    BYTE PTR [r8+0x0],r11b
   1400076cc:	add    BYTE PTR [r11+0x0],r8b
   1400076d0:	push   rbp
   1400076d1:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rdi+0x0],al
   1400076da:	add    BYTE PTR [r14+0x0],r9b
   1400076de:	add    BYTE PTR [r10+0x0],r10b
   1400076e2:	rex.WB add BYTE PTR [r11+0x0],al
   1400076e6:	pop    rdi
   1400076e7:	add    BYTE PTR [rcx+0x0],al
   1400076ea:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   1400076ef:	add    BYTE PTR [rsi+0x0],al
   1400076f2:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   1400076f7:	add    BYTE PTR [rdi+0x0],bl
   1400076fa:	push   rdx
   1400076fb:	add    BYTE PTR [rbp+0x0],al
   1400076fe:	add    BYTE PTR [r8+rax*1+0x5f],al
   140007703:	add    BYTE PTR [rax+rax*1+0x41],al
   140007707:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000770b:	add    BYTE PTR [rdi],ch
   14000770d:	add    BYTE PTR [rsi+0x0],al
   140007710:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140007715:	add    BYTE PTR [rdi+0x0],bl
   140007718:	rex.WR add BYTE PTR [rcx+0x0],r9b
   14000771c:	push   rbx
   14000771d:	add    BYTE PTR [rax+rax*1+0x5f],dl
   140007721:	add    BYTE PTR [rax+rax*1+0x49],al
   140007725:	add    BYTE PTR [rdx+0x0],dl
   140007728:	add    BYTE PTR [r11+0x0],r8b
   14000772c:	push   rsp
   14000772d:	add    BYTE PTR [rdi+0x0],cl
   140007730:	push   rdx
   140007731:	add    BYTE PTR [rcx+0x0],bl
   140007734:	add    BYTE PTR [rax],al
   140007736:	add    BYTE PTR [rax],al
   140007738:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000773c:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140007740:	pop    rdi
   140007741:	add    BYTE PTR [rdi+0x0],dl
   140007744:	push   rdx
   140007745:	add    BYTE PTR [rcx+0x0],cl
   140007748:	push   rsp
   140007749:	add    BYTE PTR [rbp+0x0],al
   14000774c:	pop    rdi
   14000774d:	add    BYTE PTR [rax+rax*1+0x41],al
   140007751:	add    BYTE PTR [rax+rax*1+0x41],dl
   140007755:	add    BYTE PTR [rdi],ch
   140007757:	add    BYTE PTR [rsi+0x0],al
   14000775a:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   14000775f:	add    BYTE PTR [rdi+0x0],bl
   140007762:	add    BYTE PTR [r8+rax*1+0x44],al
   140007767:	add    BYTE PTR [rdi+0x0],bl
   14000776a:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000776e:	rex.WR add BYTE PTR [rbp+0x0],r8b
	...
   14000777e:	add    BYTE PTR [rax],al
   140007780:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140007784:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140007788:	pop    rdi
   140007789:	add    BYTE PTR [rcx+0x0],al
   14000778c:	push   rax
   14000778d:	add    BYTE PTR [rax+0x0],dl
   140007790:	add    BYTE PTR [r14+0x0],r9b
   140007794:	add    BYTE PTR [rdi+0x0],r11b
   140007798:	add    BYTE PTR [rcx+0x0],r8b
   14000779c:	push   rsp
   14000779d:	add    BYTE PTR [rcx+0x0],al
   1400077a0:	(bad)  
   1400077a1:	add    BYTE PTR [rsi+0x0],al
   1400077a4:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   1400077a9:	add    BYTE PTR [rdi+0x0],bl
   1400077ac:	add    BYTE PTR [r8+rax*1+0x44],al
   1400077b1:	add    BYTE PTR [rdi+0x0],bl
   1400077b4:	push   rbx
   1400077b5:	add    BYTE PTR [rbp+0x0],dl
   1400077b8:	add    BYTE PTR [rax+r8*1+0x49],al
   1400077bd:	add    BYTE PTR [rdx+0x0],dl
   1400077c0:	add    BYTE PTR [r11+0x0],r8b
   1400077c4:	push   rsp
   1400077c5:	add    BYTE PTR [rdi+0x0],cl
   1400077c8:	push   rdx
   1400077c9:	add    BYTE PTR [rcx+0x0],bl
   1400077cc:	add    BYTE PTR [rax],al
   1400077ce:	add    BYTE PTR [rax],al
   1400077d0:	rex.RX add BYTE PTR [rcx+0x0],r9b
   1400077d4:	rex.WR add BYTE PTR [rbp+0x0],r8b
   1400077d8:	pop    rdi
   1400077d9:	add    BYTE PTR [rdx+0x0],dl
   1400077dc:	add    BYTE PTR [r9+0x0],r8b
   1400077e0:	add    BYTE PTR [rdi+0x0],r11b
   1400077e4:	add    BYTE PTR [r9+0x0],r8b
	...
   1400077f0:	rex.RX add BYTE PTR [rcx+0x0],r9b
   1400077f4:	rex.WR add BYTE PTR [rbp+0x0],r8b
   1400077f8:	pop    rdi
   1400077f9:	add    BYTE PTR [rdi+0x0],dl
   1400077fc:	push   rdx
   1400077fd:	add    BYTE PTR [rcx+0x0],cl
   140007800:	push   rsp
   140007801:	add    BYTE PTR [rbp+0x0],al
   140007804:	pop    rdi
   140007805:	add    BYTE PTR [rbp+0x0],al
   140007808:	add    BYTE PTR [r8],al
   14000780b:	add    BYTE PTR [rax],al
   14000780d:	add    BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rsi+0x0],al
   140007812:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140007817:	add    BYTE PTR [rdi+0x0],bl
   14000781a:	add    BYTE PTR [r8+0x0],r11b
   14000781e:	add    BYTE PTR [r11+0x0],r8b
   140007822:	push   rbp
   140007823:	add    BYTE PTR [rax+rax*1+0x45],dl
   140007827:	add    BYTE PTR [rdi],ch
   140007829:	add    BYTE PTR [rsi+0x0],al
   14000782c:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140007831:	add    BYTE PTR [rdi+0x0],bl
   140007834:	push   rsp
   140007835:	add    BYTE PTR [rdx+0x0],dl
   140007838:	add    BYTE PTR [r14+0x0],dl
   14000783c:	add    BYTE PTR [r10+0x0],r10b
   140007840:	push   rbx
   140007841:	add    BYTE PTR [rbp+0x0],al
   140007844:	add    BYTE PTR [rax],al
   140007846:	add    BYTE PTR [rax],al
   140007848:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000784c:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140007850:	pop    rdi
   140007851:	add    BYTE PTR [rax+rax*1+0x45],al
   140007855:	add    BYTE PTR [rax+rax*1+0x45],cl
   140007859:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000785d:	add    BYTE PTR [rdi+0x0],bl
   140007860:	rex.XB add BYTE PTR [r8+0x0],cl
   140007864:	rex.WB add BYTE PTR [r8+rax*1+0x44],cl
   140007869:	add    BYTE PTR [rax],al
   14000786b:	add    BYTE PTR [rax],al
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    BYTE PTR [rsi+0x0],al
   140007872:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140007877:	add    BYTE PTR [rdi+0x0],bl
   14000787a:	push   rdx
   14000787b:	add    BYTE PTR [rbp+0x0],al
   14000787e:	add    BYTE PTR [r8+rax*1+0x5f],al
   140007883:	add    BYTE PTR [rcx+0x0],al
   140007886:	push   rsp
   140007887:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000788b:	add    BYTE PTR [rcx+0x0],cl
   14000788e:	rex.X add BYTE PTR [rbp+0x0],dl
   140007892:	push   rsp
   140007893:	add    BYTE PTR [rbp+0x0],al
   140007896:	push   rbx
	...
   14000789f:	add    BYTE PTR [rsi+0x0],al
   1400078a2:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   1400078a7:	add    BYTE PTR [rdi+0x0],bl
   1400078aa:	push   rdi
   1400078ab:	add    BYTE PTR [rdx+0x0],dl
   1400078ae:	rex.WB add BYTE PTR [r8+rax*1+0x45],dl
   1400078b3:	add    BYTE PTR [rdi+0x0],bl
   1400078b6:	add    BYTE PTR [r8+rax*1+0x54],dl
   1400078bb:	add    BYTE PTR [rdx+0x0],dl
   1400078be:	rex.WB add BYTE PTR [r10+0x0],al
   1400078c2:	push   rbp
   1400078c3:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400078c7:	add    BYTE PTR [rbx+0x0],dl
   1400078ca:	add    BYTE PTR [rax],al
   1400078cc:	add    BYTE PTR [rax],al
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   1400078d4:	pop    rdi
   1400078d5:	add    BYTE PTR [rdi+0x0],dl
   1400078d8:	push   rdx
   1400078d9:	add    BYTE PTR [rcx+0x0],cl
   1400078dc:	push   rsp
   1400078dd:	add    BYTE PTR [rbp+0x0],al
   1400078e0:	pop    rdi
   1400078e1:	add    BYTE PTR [rbp+0x0],dl
   1400078e4:	push   rax
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    BYTE PTR [rsi+0x0],cl
   1400078ea:	push   rdi
   1400078eb:	add    BYTE PTR [rax],al
   1400078ed:	add    BYTE PTR [rax],al
   1400078ef:	add    BYTE PTR [rsi+0x0],cl
   1400078f2:	rex.WRXB add BYTE PTR [r15+0x0],r11b
   1400078f6:	push   rdx
   1400078f7:	add    BYTE PTR [rbp+0x0],al
   1400078fa:	add    BYTE PTR [r8+rax*1+0x5f],al
   1400078ff:	add    BYTE PTR [rbp+0x0],dl
   140007902:	push   rax
   140007903:	add    BYTE PTR [rax],al
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rsi+0x0],cl
   14000790a:	push   rdx
   14000790b:	add    BYTE PTR [rax],al
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    BYTE PTR [rsi+0x0],cl
   140007912:	rex.WRXB add BYTE PTR [r15+0x0],r11b
   140007916:	add    BYTE PTR [r8+0x0],r11b
   14000791a:	add    BYTE PTR [r11+0x0],r8b
   14000791e:	push   rbp
   14000791f:	add    BYTE PTR [rax+rax*1+0x45],dl
   140007923:	add    BYTE PTR [rdi+0x0],bl
   140007926:	push   rbp
   140007927:	add    BYTE PTR [rax+0x0],dl
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	rex.WRX add BYTE PTR [rax+0x0],r11b
	...
   140007938:	rex.WB add BYTE PTR [r14+0x0],cl
   14000793c:	push   rsp
   14000793d:	add    BYTE PTR [rbp+0x0],al
   140007940:	push   rdx
   140007941:	add    BYTE PTR [rsi+0x0],cl
   140007944:	add    BYTE PTR [r8+rax*1+0x20],cl
   140007949:	add    BYTE PTR [rbp+0x0],al
   14000794c:	push   rdx
   14000794d:	add    BYTE PTR [rdx+0x0],dl
   140007950:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007954:	add    BYTE PTR [rax],al
   140007956:	add    BYTE PTR [rax],al
   140007958:	rex.WRX add BYTE PTR [rax],r8b
   14000795b:	add    BYTE PTR [rax],ch
   14000795d:	add    BYTE PTR [rax],al
   14000795f:	add    BYTE PTR [rax+rax*1],ch
   140007962:	add    BYTE PTR [rax],al
   140007964:	sub    DWORD PTR [rax],eax
   140007966:	add    BYTE PTR [rax],al
   140007968:	cmp    al,BYTE PTR [rax]
   14000796a:	add    BYTE PTR [rax],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax],al
   140007970:	sub    BYTE PTR [rax],al
   140007972:	rex.WB add BYTE PTR [r9],bpl
   140007975:	add    BYTE PTR [rax],al
   140007977:	add    BYTE PTR [rdx],ch
   140007979:	add    BYTE PTR [rax],al
   14000797b:	add    BYTE PTR [rax+rax*1+0x2a],bl
   14000797f:	add    BYTE PTR [rax],al
   140007981:	add    BYTE PTR [rax],al
   140007983:	add    BYTE PTR [rsi],ch
   140007985:	add    BYTE PTR [rax],al
   140007987:	add    BYTE PTR [rsi],ch
   140007989:	add    BYTE PTR [rsi],ch
   14000798b:	add    BYTE PTR [rax],al
   14000798d:	add    BYTE PTR [rax],al
   14000798f:	add    BYTE PTR [rdx],cl
   140007991:	add    BYTE PTR [rax],al
   140007993:	add    BYTE PTR [rip+0xa00],cl        # 0x140008399
   140007999:	add    BYTE PTR [rax],al
   14000799b:	add    BYTE PTR [rdi+0x0],dh
   14000799e:	(bad)  
	...
   1400079a7:	add    BYTE PTR [rbx+0x0],dl
   1400079aa:	add    BYTE PTR gs:[rbx+0x0],dl
   1400079ae:	add    BYTE PTR gs:[rbx+0x0],ah
   1400079b2:	jne    0x1400079b4
   1400079b4:	jb     0x1400079b6
   1400079b6:	imul   eax,DWORD PTR [rax],0x790074
   1400079bc:	push   rax
   1400079bd:	add    BYTE PTR [rdx+0x0],dh
   1400079c0:	imul   eax,DWORD PTR [rax],0x690076
   1400079c6:	ins    BYTE PTR es:[rdi],dx
   1400079c7:	add    BYTE PTR [rbp+0x0],ah
   1400079ca:	add    BYTE PTR [ebp+0x0],ah
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	jb     0x1400079d2
   1400079d2:	(bad)  
   1400079d3:	add    BYTE PTR [rax],al
   1400079d5:	add    BYTE PTR [rax],al
   1400079d7:	add    BYTE PTR [rbx+0x0],dl
   1400079da:	add    BYTE PTR gs:[rdx+0x0],dl
   1400079de:	add    BYTE PTR gs:[rbx+0x0],dh
   1400079e2:	je     0x1400079e4
   1400079e4:	outs   dx,DWORD PTR ds:[rsi]
   1400079e5:	add    BYTE PTR [rdx+0x0],dh
   1400079e8:	add    BYTE PTR gs:[rax+0x0],dl
   1400079ec:	jb     0x1400079ee
   1400079ee:	imul   eax,DWORD PTR [rax],0x690076
   1400079f4:	ins    BYTE PTR es:[rdi],dx
   1400079f5:	add    BYTE PTR [rbp+0x0],ah
   1400079f8:	add    BYTE PTR [ebp+0x0],ah
   1400079fc:	add    BYTE PTR [rax],al
   1400079fe:	add    BYTE PTR [rax],al
   140007a00:	rex.WB and BYTE PTR [r11+0x61],spl
   140007a04:	outs   dx,BYTE PTR ds:[rsi]
   140007a05:	(bad)  
   140007a06:	je     0x140007a28
   140007a08:	push   0x6c646e61
   140007a0d:	and    BYTE PTR gs:[rax+rbp*2+0x61],dh
   140007a12:	je     0x140007a34
   140007a14:	jns    0x140007a7b
   140007a16:	je     0x140007a22
   140007a18:	add    BYTE PTR [rax],al
   140007a1a:	add    BYTE PTR [rax],al
   140007a1c:	(bad)  
   140007a1d:	add    BYTE PTR [rdi],bh
	...
   140007a27:	add    BYTE PTR [rdi],ch
   140007a29:	add    BYTE PTR [rax+rax*1+0x62],ah
   140007a2d:	add    BYTE PTR [rdi+0x0],ah
	...
   140007a38:	(bad)  
   140007a39:	add    BYTE PTR [rbx+0x0],dh
   140007a3c:	(bad)  
   140007a3d:	add    BYTE PTR [rsi+0x0],dh
   140007a40:	add    BYTE PTR gs:[rax],al
   140007a43:	add    BYTE PTR [rax],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rdi],ch
   140007a49:	add    BYTE PTR [rbx+0x0],dh
   140007a4c:	add    BYTE PTR gs:[rax+rax*1+0x6f],dh
   140007a51:	add    BYTE PTR [rdi+0x0],dh
   140007a54:	outs   dx,BYTE PTR ds:[rsi]
   140007a55:	add    BYTE PTR [rbp+0x0],ah
   140007a58:	jb     0x140007a5a
   140007a5a:	add    BYTE PTR [rax],al
   140007a5c:	add    BYTE PTR [rax],al
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	(bad)  
   140007a61:	add    BYTE PTR [rsi+0x0],ah
   140007a64:	imul   eax,DWORD PTR [rax],0x64006e
   140007a6a:	jae    0x140007a6c
   140007a6c:	imul   eax,DWORD PTR [rax],0x64
   140007a72:	add    BYTE PTR [rax],al
   140007a74:	add    BYTE PTR [rax],al
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	(bad)  
   140007a79:	add    BYTE PTR [rsi+0x0],dh
   140007a7c:	add    BYTE PTR gs:[rdx+0x0],dh
   140007a80:	imul   eax,DWORD PTR [rax],0x790066
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	(bad)  
   140007a89:	add    BYTE PTR [rdx+0x0],dh
   140007a8c:	add    BYTE PTR gs:[rbx+0x0],dh
   140007a90:	add    BYTE PTR gs:[rax+rax*1+0x0],dh
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	add    BYTE PTR [rdi],ch
   140007a99:	add    BYTE PTR [rdx+0x0],dl
   140007a9c:	add    BYTE PTR gs:[rbx+0x0],dh
   140007aa0:	je     0x140007aa2
   140007aa2:	outs   dx,DWORD PTR ds:[rsi]
   140007aa3:	add    BYTE PTR [rdx+0x0],dh
   140007aa6:	add    BYTE PTR gs:[rax],al
   140007aa9:	add    BYTE PTR [rax],al
   140007aab:	add    BYTE PTR [rax],al
   140007aad:	add    BYTE PTR [rax],al
   140007aaf:	add    BYTE PTR [rdi],ch
   140007ab1:	add    BYTE PTR [rbx+0x0],dh
   140007ab4:	jne    0x140007ab6
   140007ab6:	(bad)  
   140007ab7:	add    BYTE PTR [rbx+0x0],dh
   140007aba:	je     0x140007abc
   140007abc:	imul   eax,DWORD PTR [rax],0x750074
   140007ac2:	je     0x140007ac4
   140007ac4:	add    BYTE PTR gs:[rax],al
   140007ac7:	add    BYTE PTR [rdi],ch
   140007ac9:	add    BYTE PTR [rdi+0x0],al
   140007acc:	jb     0x140007ace
   140007ace:	(bad)  
   140007acf:	add    BYTE PTR [rsi+0x0],ch
   140007ad2:	je     0x140007ad4
   140007ad4:	add    BYTE PTR [rax],al
   140007ad6:	add    BYTE PTR [rax],al
   140007ad8:	(bad)  
   140007ad9:	add    BYTE PTR [rbx+0x0],dl
   140007adc:	add    BYTE PTR gs:[rax+rax*1+0x69],dh
   140007ae1:	add    BYTE PTR [rsi+0x0],ch
   140007ae4:	je     0x140007ae6
   140007ae6:	add    BYTE PTR gs:[rdi+0x0],ah
   140007aea:	jb     0x140007aec
   140007aec:	imul   eax,DWORD PTR [rax],0x790074
   140007af2:	ins    BYTE PTR es:[rdi],dx
   140007af3:	add    BYTE PTR [rbp+0x0],ah
   140007af6:	jbe    0x140007af8
   140007af8:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140007afd:	add    BYTE PTR [rax],al
   140007aff:	add    BYTE PTR [rdi],ch
   140007b01:	add    BYTE PTR [rax+rax*1+0x65],al
   140007b05:	add    BYTE PTR [rsi+0x0],ch
   140007b08:	jns    0x140007b0a
   140007b0a:	add    BYTE PTR [rax],al
   140007b0c:	add    BYTE PTR [rax],al
   140007b0e:	add    BYTE PTR [rax],al
   140007b10:	(bad)  
   140007b11:	add    BYTE PTR [rdx+0x0],dl
   140007b14:	add    BYTE PTR gs:[rbp+0x0],ch
   140007b18:	outs   dx,DWORD PTR ds:[rsi]
   140007b19:	add    BYTE PTR [rsi+0x0],dh
   140007b1c:	add    BYTE PTR gs:[rax],al
   140007b1f:	add    BYTE PTR [rdi],ch
   140007b21:	add    BYTE PTR [rcx+0x0],cl
   140007b24:	outs   dx,BYTE PTR ds:[rsi]
   140007b25:	add    BYTE PTR [rax+0x0],ch
   140007b28:	add    BYTE PTR gs:[rdx+0x0],dh
   140007b2c:	imul   eax,DWORD PTR [rax],0x610074
   140007b32:	outs   dx,BYTE PTR ds:[rsi]
   140007b33:	add    BYTE PTR [rbx+0x0],ah
   140007b36:	add    BYTE PTR gs:[rax],al
   140007b39:	add    BYTE PTR [rax],al
   140007b3b:	add    BYTE PTR [rdi],ch
   140007b3d:	add    BYTE PTR [rax+rax*1+0x0],dl
   140007b41:	add    BYTE PTR [rax],al
   140007b43:	add    BYTE PTR [rdi],ch
   140007b45:	add    BYTE PTR [rcx+0x0],dl
   140007b48:	add    BYTE PTR [rax],al
   140007b4a:	add    BYTE PTR [rax],al
   140007b4c:	(bad)  
   140007b4d:	add    BYTE PTR [rax+rax*1+0x0],cl
   140007b51:	add    BYTE PTR [rax],al
   140007b53:	add    BYTE PTR [rdi],ch
   140007b55:	add    BYTE PTR [rbx+0x0],al
	...
   140007b60:	push   rax
   140007b61:	add    BYTE PTR [rdx+0x0],dh
   140007b64:	add    BYTE PTR gs:[rsi+0x0],ah
   140007b68:	imul   eax,DWORD PTR [rax],0x3a0078
   140007b6e:	and    BYTE PTR [rax],al
	...
   140007b78:	ja     0x140007be2
   140007b7a:	(bad)  
   140007b7b:	je     0x140007bbc
   140007b7d:	and    BYTE PTR [rax],ah
   140007b7f:	rex.RX ins BYTE PTR es:[rdi],dx
   140007b81:	(bad)  
   140007b82:	addr32 jae 0x140007ba5
   140007b85:	cmp    eax,0x3025203d
   140007b8a:	cmp    BYTE PTR [rax+0xa],bh
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rax],al
   140007b91:	add    BYTE PTR [rax],al
   140007b93:	add    BYTE PTR [rdi+0x559f38],bl
   140007b99:	add    BYTE PTR [rax],al
   140007b9b:	add    BYTE PTR [rdx],al
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    BYTE PTR [rbx],ah
   140007ba1:	add    BYTE PTR [rax],al
   140007ba3:	add    BYTE PTR [rax-0x6fffff84],dl
   140007ba9:	data16 add BYTE PTR [rax],al
   140007bac:	add    BYTE PTR [rax],al
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	lahf   
   140007bb1:	cmp    BYTE PTR [rdi+0x55],bl
   140007bb7:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x120007bbd
   140007bbd:	add    DWORD PTR [rax],eax
   140007bbf:	add    al,cl
   140007bc1:	jl     0x140007bc3
   140007bc3:	add    al,cl
   140007bc5:	data16 add BYTE PTR [rax],al
	...
   140007bf0:	movabs al,ds:0x0
	...
   140007c45:	add    BYTE PTR [rax],al
   140007c47:	add    BYTE PTR [rax],cl
   140007c49:	movabs al,ds:0x14000
	...
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	fdiv   DWORD PTR [rbx+0x0]
   140007c63:	rex add DWORD PTR [rax],eax
   140007c66:	add    BYTE PTR [rax],al
   140007c68:	loopne 0x140007cdd
   140007c6a:	add    BYTE PTR [rax+0x1],al
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rax],ah
   140007c71:	je     0x140007c73
   140007c73:	rex add DWORD PTR [rax],eax
   140007c76:	add    BYTE PTR [rax],al
   140007c78:	sldt   WORD PTR [rax]
   140007c7b:	add    BYTE PTR [rax],al
   140007c7d:	add    BYTE PTR [rax],al
   140007c7f:	add    BYTE PTR [rax],al
   140007c81:	xor    eax,0x0
	...
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	push   rdx
   140007c91:	push   rbx
   140007c92:	rex.R push rbx
   140007c94:	xchg   DWORD PTR [rbp+0x11],ecx
   140007c97:	pushf  
   140007c98:	(bad)  
   140007c99:	cs xor al,0x48
   140007c9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007c9d:	jbe    0x140007c86
   140007c9f:	fs imul edi,esi,0x1bf19
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	imul   esp,DWORD PTR [rbx+0x61],0x2e736c63
   140007caf:	jo     0x140007d15
   140007cb1:	(bad)  
	...
   140007cc6:	add    BYTE PTR [rax],al
   140007cc8:	rex.RXB
   140007cc9:	rex.XB push r12
   140007ccb:	rex.WR add BYTE PTR [rax],r10b
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	push   0x2e000053
   140007cd5:	je     0x140007d3c
   140007cd7:	js     0x140007d4d
   140007cd9:	and    al,0x6d
   140007cdb:	outs   dx,BYTE PTR ds:[rsi]
   140007cdc:	add    BYTE PTR [rax],al
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	jo     0x140007d45
   140007ce2:	add    BYTE PTR [rax],al
   140007ce4:	jge    0x140007ce6
   140007ce6:	add    BYTE PTR [rax],al
   140007ce8:	cs je  0x140007d50
   140007ceb:	js     0x140007d61
   140007ced:	and    al,0x6d
   140007cef:	outs   dx,BYTE PTR ds:[rsi]
   140007cf0:	and    al,0x30
   140007cf2:	xor    BYTE PTR [rax],al
   140007cf4:	lock movsxd eax,DWORD PTR [rax]
   140007cf7:	add    BYTE PTR [rax+0x2e000001],dl
   140007cfd:	je     0x140007d64
   140007cff:	js     0x140007d75
   140007d01:	and    al,0x78
   140007d03:	add    BYTE PTR [rax],al
   140007d05:	jo     0x140007d07
   140007d07:	add    al,bl
   140007d09:	add    eax,DWORD PTR [rax]
   140007d0b:	add    BYTE PTR [rsi],ch
   140007d0d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140007d15:	add    BYTE PTR [rax],al
   140007d17:	add    al,bl
   140007d19:	jae    0x140007d1b
   140007d1b:	add    BYTE PTR [rax],dl
   140007d1d:	add    BYTE PTR [rax],al
   140007d1f:	add    BYTE PTR [rsi],ch
   140007d21:	xor    BYTE PTR [rax],dh
   140007d23:	movsxd esp,DWORD PTR [rsi+0x67]
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	call   0x148007da0
   140007d2d:	add    BYTE PTR [rax],al
   140007d2f:	add    BYTE PTR [rsi],ch
   140007d31:	rex.XB push r10
   140007d33:	push   rsp
   140007d34:	and    al,0x58
   140007d36:	rex.XB
   140007d37:	add    BYTE PTR [r8],al
   140007d3a:	add    BYTE PTR [rax],al
   140007d3c:	lock jae 0x140007d3f
   140007d3f:	add    BYTE PTR [rax],cl
   140007d41:	add    BYTE PTR [rax],al
   140007d43:	add    BYTE PTR [rsi],ch
   140007d45:	rex.XB push r10
   140007d47:	push   rsp
   140007d48:	and    al,0x58
   140007d4a:	rex.XB
   140007d4b:	rex.B
   140007d4c:	add    BYTE PTR [r8],al
   140007d4f:	add    al,bh
   140007d51:	jae    0x140007d53
   140007d53:	add    BYTE PTR [rax],cl
   140007d55:	add    BYTE PTR [rax],al
   140007d57:	add    BYTE PTR [rsi],ch
   140007d59:	rex.XB push r10
   140007d5b:	push   rsp
   140007d5c:	and    al,0x58
   140007d5e:	rex.XB pop r10
   140007d60:	add    BYTE PTR [rax],al
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	add    BYTE PTR [rax+rax*1+0x0],dh
   140007d68:	or     BYTE PTR [rax],al
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	cs rex.XB push r10
   140007d6f:	push   rsp
   140007d70:	and    al,0x58
   140007d72:	rex.WB
   140007d73:	add    BYTE PTR [r8],al
   140007d76:	add    BYTE PTR [rax],al
   140007d78:	or     BYTE PTR [rax+rax*1+0x0],dh
   140007d7c:	or     BYTE PTR [rax],al
   140007d7e:	add    BYTE PTR [rax],al
   140007d80:	cs rex.XB push r10
   140007d83:	push   rsp
   140007d84:	and    al,0x58
   140007d86:	rex.WB
   140007d87:	rex.B
   140007d88:	add    BYTE PTR [r8],al
   140007d8b:	add    BYTE PTR [rax],dl
   140007d8d:	je     0x140007d8f
   140007d8f:	add    BYTE PTR [rax],cl
   140007d91:	add    BYTE PTR [rax],al
   140007d93:	add    BYTE PTR [rsi],ch
   140007d95:	rex.XB push r10
   140007d97:	push   rsp
   140007d98:	and    al,0x58
   140007d9a:	rex.WB pop r9
   140007d9c:	add    BYTE PTR [rax],al
   140007d9e:	add    BYTE PTR [rax],al
   140007da0:	sbb    BYTE PTR [rax+rax*1+0x0],dh
   140007da4:	or     BYTE PTR [rax],al
   140007da6:	add    BYTE PTR [rax],al
   140007da8:	cs rex.XB push r10
   140007dab:	push   rsp
   140007dac:	and    al,0x58
   140007dae:	rex.WB pop r10
   140007db0:	add    BYTE PTR [rax],al
   140007db2:	add    BYTE PTR [rax],al
   140007db4:	and    BYTE PTR [rax+rax*1+0x0],dh
   140007db8:	cmp    al,0x0
   140007dba:	add    BYTE PTR [rax],al
   140007dbc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140007dc5:	add    BYTE PTR [rax],al
   140007dc7:	add    BYTE PTR [rax+0x74],ah
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	xor    BYTE PTR [rax],cl
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	cs jb  0x140007e37
   140007dd3:	(bad)  
   140007dd4:	je     0x140007e37
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	nop
   140007dd9:	jl     0x140007ddb
   140007ddb:	add    BYTE PTR [rax],bl
   140007ddd:	add    al,BYTE PTR [rax]
   140007ddf:	add    BYTE PTR [rsi],ch
   140007de1:	jb     0x140007e47
   140007de3:	(bad)  
   140007de4:	je     0x140007e47
   140007de6:	and    al,0x7a
   140007de8:	jp     0x140007e64
   140007dea:	fs (bad) 
   140007dec:	add    BYTE PTR [eax],al
   140007def:	add    BYTE PTR [rax+0x5000007e],ch
   140007df5:	add    eax,0x782e0000
   140007dfa:	fs (bad) 
   140007dfc:	je     0x140007e5f
   140007dfe:	add    BYTE PTR [rax],al
   140007e00:	clc    
   140007e01:	add    DWORD PTR [rax],0x0
   140007e04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007e05:	add    DWORD PTR [rax],eax
   140007e07:	add    BYTE PTR [rsi],ch
   140007e09:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140007e11:	add    BYTE PTR [rax],al
   140007e13:	add    BYTE PTR [rbp+rax*4+0x140000],bl
   140007e1a:	add    BYTE PTR [rax],al
   140007e1c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007e25:	add    BYTE PTR [rax],al
   140007e27:	add    BYTE PTR [rax-0x27ffff7b],dh
   140007e2d:	add    eax,DWORD PTR [rax]
   140007e2f:	add    BYTE PTR [rsi],ch
   140007e31:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007e39:	add    BYTE PTR [rax],al
   140007e3b:	add    BYTE PTR [rax-0xdffff77],cl
   140007e41:	or     DWORD PTR [rax],eax
   140007e43:	add    BYTE PTR [rsi],ch
   140007e45:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140007e4d:	add    BYTE PTR [rax],al
   140007e4f:	add    BYTE PTR [rax],al
   140007e51:	movabs al,ds:0x642e000004e00000
   140007e5a:	(bad)  
   140007e5b:	je     0x140007ebe
   140007e5d:	add    BYTE PTR [rax],al
   140007e5f:	add    al,ah
   140007e61:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007e62:	add    BYTE PTR [rax],al
   140007e64:	add    BYTE PTR [rsi],al
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	cs (bad) 
   140007e6b:	jae    0x140007e6d
   140007e6d:	add    BYTE PTR [rax],al
   140007e6f:	add    BYTE PTR [rax],al
   140007e71:	mov    al,0x0
   140007e73:	add    ah,al
   140007e75:	add    al,BYTE PTR [rax]
   140007e77:	add    BYTE PTR [rsi],ch
   140007e79:	jo     0x140007edf
   140007e7b:	(bad)  
   140007e7c:	je     0x140007edf
   140007e7e:	add    BYTE PTR [rax],al
   140007e80:	add    al,al
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	lock add BYTE PTR [rax],al
   140007e87:	add    BYTE PTR [rsi],ch
   140007e89:	jb     0x140007efe
   140007e8b:	jb     0x140007ef0
   140007e8d:	and    al,0x30
   140007e8f:	xor    DWORD PTR [rax],eax
   140007e91:	add    BYTE PTR [rax],al
   140007e93:	add    al,dh
   140007e95:	rol    BYTE PTR [rax],0x0
   140007e98:	enter  0x6,0x0
   140007e9c:	cs jb  0x140007f12
   140007e9f:	jb     0x140007f04
   140007ea1:	and    al,0x30
   140007ea3:	xor    al,BYTE PTR [rax]
   140007ea5:	add    BYTE PTR [rax],al
   140007ea7:	add    BYTE PTR [rcx],al
   140007ea9:	adc    cl,BYTE PTR [rax]
   140007eab:	add    BYTE PTR [rdx],dl
   140007ead:	push   rsp
   140007eae:	or     eax,0xc341200
   140007eb3:	add    BYTE PTR [rdx],dl
   140007eb5:	jb     0x140007ec5
   140007eb7:	loopne 0x140007ec5
   140007eb9:	jo     0x140007ec6
   140007ebb:	(bad)  
   140007ebc:	sbb    DWORD PTR [rbx],ebx
   140007ebe:	add    eax,DWORD PTR [rax]
   140007ec0:	or     DWORD PTR [rcx],eax
   140007ec2:	rex.WX add BYTE PTR [rdx],al
   140007ec5:	xor    BYTE PTR [rax],al
   140007ec7:	add    al,cl
   140007ec9:	(bad)  
   140007eca:	add    BYTE PTR [rax],al
   140007ecc:	add    al,BYTE PTR [rax]
   140007ecf:	add    BYTE PTR [rcx],al
   140007ed1:	adc    al,BYTE PTR [rip+0xea21200]        # 0x14ea290d7
   140007ed7:	jo     0x140007ee6
   140007ed9:	(bad)  
   140007eda:	or     al,0x50
   140007edc:	or     esi,DWORD PTR [rax]
   140007ede:	add    BYTE PTR [rax],al
   140007ee0:	add    DWORD PTR [rsi],ebx
   140007ee2:	or     eax,DWORD PTR [rax]
   140007ee4:	(bad)  
   140007ee5:	fs sbb eax,0x1c341e00
   140007eeb:	add    BYTE PTR [rsi],bl
   140007eed:	add    DWORD PTR [rsi],edx
   140007eef:	add    BYTE PTR [rdx],dl
   140007ef1:	lock adc al,ah
   140007ef4:	(bad)  
   140007ef5:	ror    BYTE PTR [rax+rsi*2],0xb
   140007ef9:	push   rax
   140007efa:	add    BYTE PTR [rax],al
   140007efc:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d7f0e
   140007f02:	or     eax,DWORD PTR [rax]
   140007f04:	sbb    eax,0x1d000a64
   140007f09:	push   rsp
   140007f0a:	or     DWORD PTR [rax],eax
   140007f0c:	sbb    eax,0x1d000834
   140007f11:	xor    bl,BYTE PTR [rcx]
   140007f13:	lock (bad) 
   140007f15:	loopne 0x140007f2c
   140007f17:	rol    BYTE PTR [rcx],0x1c
   140007f1a:	or     al,0x0
   140007f1c:	sbb    al,0x64
   140007f1e:	or     al,0x0
   140007f20:	sbb    al,0x54
   140007f22:	or     eax,DWORD PTR [rax]
   140007f24:	sbb    al,0x34
   140007f26:	or     al,BYTE PTR [rax]
   140007f28:	sbb    al,0x32
   140007f2a:	sbb    al,dh
   140007f2c:	(bad)  
   140007f2d:	loopne 0x140007f43
   140007f2f:	rcl    BYTE PTR [rdx],1
   140007f31:	rcl    BYTE PTR [rax],0x70
   140007f34:	add    DWORD PTR [rax],ebx
   140007f36:	or     al,BYTE PTR [rax]
   140007f38:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   140007f3c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140007f40:	sbb    BYTE PTR [rdx+rcx*1],dh
   140007f43:	add    BYTE PTR [rax],bl
   140007f45:	push   rdx
   140007f46:	adc    al,0xf0
   140007f48:	adc    ah,al
   140007f4a:	adc    BYTE PTR [rax+0x1],dh
   140007f4d:	sbb    DWORD PTR [rdx],ecx
   140007f4f:	add    BYTE PTR [rcx],bl
   140007f51:	je     0x140007f5e
   140007f53:	add    BYTE PTR [rcx],bl
   140007f55:	or     al,BYTE PTR fs:[rax]
   140007f58:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140007f5c:	sbb    DWORD PTR [rax+rcx*1],esi
   140007f5f:	add    BYTE PTR [rcx],bl
   140007f61:	push   rdx
   140007f62:	adc    eax,0xa1901e0
   140007f67:	add    BYTE PTR [rcx],bl
   140007f69:	je     0x140007f74
   140007f6b:	add    BYTE PTR [rcx],bl
   140007f6d:	or     BYTE PTR fs:[rax],al
   140007f70:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140007f74:	sbb    DWORD PTR [rsi+rax*1],esi
   140007f77:	add    BYTE PTR [rcx],bl
   140007f79:	xor    dl,BYTE PTR [rip+0x92419e0]        # 0x14924995f
   140007f7f:	add    BYTE PTR [rdx],dl
   140007f81:	add    DWORD PTR [rsi+0x0],ecx
   140007f84:	or     esi,eax
   140007f86:	or     eax,esp
   140007f88:	(bad)  
   140007f89:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143608400
   140007f90:	add    dh,BYTE PTR [rax]
   140007f92:	add    BYTE PTR [rax],al
   140007f94:	enter  0x62,0x0
   140007f98:	(bad)  
   140007f99:	add    al,BYTE PTR [rax]
   140007f9b:	add    BYTE PTR [rcx],al
   140007f9d:	or     al,BYTE PTR [rax+rax*1]
   140007fa0:	or     dh,BYTE PTR [rdx+rcx*1]
   140007fa3:	add    BYTE PTR [rdx],cl
   140007fa5:	jb     0x140007fad
   140007fa7:	jo     0x140007faa
   140007fa9:	or     al,BYTE PTR [rax+rax*1]
   140007fac:	or     dh,BYTE PTR [rax+rcx*1]
   140007faf:	add    BYTE PTR [rdx],cl
   140007fb1:	push   rdx
   140007fb2:	(bad)  
   140007fb3:	jo     0x140007fb6
   140007fb5:	adc    BYTE PTR [rsi],al
   140007fb7:	add    BYTE PTR [rax],dl
   140007fb9:	or     al,BYTE PTR fs:[rax]
   140007fbc:	adc    BYTE PTR [rax+rcx*1],dh
   140007fbf:	add    BYTE PTR [rax],dl
   140007fc1:	push   rdx
   140007fc2:	or     al,0x70
   140007fc4:	add    DWORD PTR [rbx],esp
   140007fc6:	or     al,0x0
   140007fc8:	and    esi,DWORD PTR [rsi+rcx*1+0x0]
   140007fcc:	and    esp,DWORD PTR [rbp+rcx*1+0x0]
   140007fd0:	and    esi,DWORD PTR [rsp+rcx*1]
   140007fd3:	add    BYTE PTR [rbx],ah
   140007fd5:	push   rdx
   140007fd6:	sbb    al,0xf0
   140007fd8:	sbb    ah,al
   140007fda:	sbb    al,dl
   140007fdc:	(bad)  
   140007fdd:	rcl    BYTE PTR [rax+rdx*2],0x11
   140007fe1:	adc    al,0x8
   140007fe3:	add    BYTE PTR [rsp+riz*2],dl
   140007fe6:	adc    DWORD PTR [rax],eax
   140007fe8:	adc    al,0x34
   140007fea:	adc    BYTE PTR [rax],al
   140007fec:	adc    al,0xb2
   140007fee:	adc    al,dh
   140007ff0:	(bad)  
   140007ff1:	loopne 0x140007fff
   140007ff3:	jo     0x140007fcb
   140007ff5:	(bad)  
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	add    DWORD PTR [rax],eax
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	jmp    QWORD PTR [rax]
   140007ffe:	add    BYTE PTR [rax],al
   140008000:	mov    dh,0x22
   140008002:	add    BYTE PTR [rax],al
   140008004:	mul    BYTE PTR [rbx+0x0]
   140008007:	add    BYTE PTR [rax],al
   140008009:	add    BYTE PTR [rax],al
   14000800b:	add    BYTE PTR [rcx],al
   14000800d:	(bad)  
   14000800e:	add    al,BYTE PTR [rax]
   140008010:	(bad)  
   140008011:	jb     0x140008015
   140008013:	push   rax
   140008014:	adc    DWORD PTR [rsi],edx
   140008016:	or     BYTE PTR [rax],al
   140008018:	(bad)  
   140008019:	mov    dl,0x12
   14000801b:	lock adc al,ah
   14000801e:	(bad)  
   14000801f:	ror    BYTE PTR [rax+rax*8],1
   140008022:	or     dh,BYTE PTR [rax+0x9]
   140008025:	(bad)  
   140008026:	or     BYTE PTR [rax],dh
   140008028:	(bad)  
   140008029:	(bad)  
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    DWORD PTR [rax],eax
   14000802e:	add    BYTE PTR [rax],al
   140008030:	sub    al,0x23
   140008032:	add    BYTE PTR [rax],al
   140008034:	or     BYTE PTR [rip+0x642d0000],ah        # 0x1a42d803a
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	adc    DWORD PTR [rax],ecx
   140008042:	add    al,0x0
   140008044:	or     BYTE PTR [rdx+0x60037004],dl
   14000804a:	add    dh,BYTE PTR [rax]
   14000804c:	(bad)  
   14000804d:	(bad)  
   14000804e:	add    BYTE PTR [rax],al
   140008050:	add    al,0x0
   140008052:	add    BYTE PTR [rax],al
   140008054:	xchg   BYTE PTR [rip+0x25b40000],ah        # 0x165b4805a
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	(bad)  
   14000805d:	add    BYTE PTR fs:[rax],al
   140008060:	add    BYTE PTR [rax],al
   140008062:	add    BYTE PTR [rax],al
   140008064:	mov    edi,0xec000025
   140008069:	and    eax,0x64620000
   14000806e:	add    BYTE PTR [rax],al
   140008070:	add    BYTE PTR [rax],al
   140008072:	add    BYTE PTR [rax],al
   140008074:	mul    DWORD PTR [rip+0x26750000]        # 0x16675807a
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	(bad)  
   14000807d:	add    BYTE PTR fs:[rax],al
   140008080:	add    BYTE PTR [rax],al
   140008082:	add    BYTE PTR [rax],al
   140008084:	jge    0x1400080ac
   140008086:	add    BYTE PTR [rax],al
   140008088:	lods   al,BYTE PTR ds:[rsi]
   140008089:	add    BYTE PTR es:[rax],al
   14000808c:	(bad)  
   14000808d:	add    BYTE PTR fs:[rax],al
   140008090:	add    BYTE PTR [rax],al
   140008092:	add    BYTE PTR [rax],al
   140008094:	add    DWORD PTR [rsi],eax
   140008096:	add    al,BYTE PTR [rax]
   140008098:	(bad)  
   140008099:	push   rdx
   14000809a:	add    dl,BYTE PTR [rax+0x1]
   14000809d:	and    cl,BYTE PTR [rbx]
   14000809f:	add    BYTE PTR [rdx],ah
   1400080a1:	je     0x140008079
   1400080a3:	add    BYTE PTR [rdx],ah
   1400080a5:	fs (bad) 
   1400080a7:	add    BYTE PTR [rdx],ah
   1400080a9:	xor    al,0xd4
   1400080ab:	add    BYTE PTR [rdx],ah
   1400080ad:	add    eax,edx
   1400080af:	add    BYTE PTR [rax+rsi*8],dl
   1400080b2:	adc    ah,al
   1400080b4:	adc    BYTE PTR [rax+0x0],dl
   1400080b7:	add    BYTE PTR [rcx],al
   1400080b9:	or     al,BYTE PTR [rax+rax*1]
   1400080bc:	or     dh,BYTE PTR [rdi+rax*1]
   1400080bf:	add    BYTE PTR [rdx],cl
   1400080c1:	xor    al,BYTE PTR [rsi]
   1400080c3:	jo     0x1400080de
   1400080c5:	and    eax,0x1140006
   1400080ca:	pop    rbx
   1400080cb:	add    BYTE PTR [rip+0x3600470],al        # 0x143608541
   1400080d1:	xor    BYTE PTR [rdx],al
   1400080d3:	push   rax
   1400080d4:	enter  0x62,0x0
   1400080d8:	rol    BYTE PTR [rdx],0x0
   1400080db:	add    BYTE PTR [rcx],al
   1400080dd:	(bad)  
   1400080de:	(bad)  
   1400080df:	add    BYTE PTR [rdi],dl
   1400080e1:	(bad)  
   1400080e3:	lock adc eax,esp
   1400080e6:	pshufw mm1,QWORD PTR [rsi],0x60
   1400080ea:	or     eax,0x300c50
   1400080ef:	add    BYTE PTR [rcx],al
   1400080f1:	sbb    eax,0x741d000c
   1400080f6:	or     eax,0xc641d00
   1400080fb:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d008c55
   140008101:	xor    al,0xa
   140008103:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f09a5b
   140008109:	loopne 0x140008120
   14000810b:	rol    BYTE PTR [rcx],0x12
   14000810e:	or     BYTE PTR [rax],al
   140008110:	adc    dl,BYTE PTR [rsi+rcx*1+0x0]
   140008114:	adc    dh,BYTE PTR [rcx*1+0xe721200]
   14000811b:	loopne 0x140008129
   14000811d:	jo     0x14000812a
   14000811f:	(bad)  
   140008120:	adc    DWORD PTR [rax],esp
   140008122:	or     eax,0x23c42000
   140008127:	add    BYTE PTR [rax],ah
   140008129:	je     0x14000814d
   14000812b:	add    BYTE PTR [rax],ah
   14000812d:	and    DWORD PTR fs:[rax],eax
   140008130:	and    BYTE PTR [rax+riz*1],dh
   140008133:	add    BYTE PTR [rax],ah
   140008135:	add    DWORD PTR [rax+rax*1],ebx
   140008138:	sbb    eax,esi
   14000813a:	(bad)  
   14000813b:	loopne 0x140008152
   14000813d:	rol    BYTE PTR [rax],1
   14000813f:	add    dh,dl
   140008141:	(bad)  
   140008142:	add    BYTE PTR [rax],al
   140008144:	adc    al,BYTE PTR [rax]
   140008146:	add    BYTE PTR [rax],al
   140008148:	fidiv  WORD PTR [rdi]
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	cmp    BYTE PTR [r8],al
   14000814f:	add    BYTE PTR [rdx+0x64],bl
   140008155:	add    BYTE PTR [rax],al
   140008157:	add    BYTE PTR [rax+rdi*1+0x0],cl
   14000815b:	add    BYTE PTR [rcx+0x38],dh
   14000815e:	add    BYTE PTR [rax],al
   140008160:	(bad)  
   140008161:	add    BYTE PTR fs:[rax],al
   140008164:	add    BYTE PTR [rax],al
   140008166:	add    BYTE PTR [rax],al
   140008168:	jns    0x1400081a2
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	fnstcw WORD PTR [rax]
   14000816e:	add    BYTE PTR [rax],al
   140008170:	(bad)  
   140008171:	add    BYTE PTR fs:[rax],al
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax],al
   140008178:	in     al,0x38
   14000817a:	add    BYTE PTR [rax],al
   14000817c:	cmp    bh,BYTE PTR [rcx]
   14000817e:	add    BYTE PTR [rax],al
   140008180:	(bad)  
   140008181:	add    BYTE PTR fs:[rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	cmp    DWORD PTR [r8],r8d
   14000818b:	add    BYTE PTR [rsi],bl
   14000818d:	cmp    al,BYTE PTR [rax]
   14000818f:	add    BYTE PTR [rdx+0x64],bl
   140008195:	add    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rax],ch
   140008199:	cmp    al,BYTE PTR [rax]
   14000819b:	add    BYTE PTR [rbp+0x3a],dh
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	(bad)  
   1400081a1:	add    BYTE PTR fs:[rax],al
   1400081a4:	add    BYTE PTR [rax],al
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	jg     0x1400081e4
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	(bad)  
   1400081ad:	cmp    al,BYTE PTR [rax]
   1400081af:	add    BYTE PTR [rdx+0x64],bl
   1400081b5:	add    BYTE PTR [rax],al
   1400081b7:	add    bh,bl
   1400081b9:	cmp    al,BYTE PTR [rax]
   1400081bb:	add    BYTE PTR [rsi],dh
   1400081bd:	cmp    eax,DWORD PTR [rax]
   1400081bf:	add    BYTE PTR [rdx+0x64],bl
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rax+0x3b],al
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	pop    rcx
   1400081cd:	cmp    eax,DWORD PTR [rax]
   1400081cf:	add    BYTE PTR [rdx+0x64],bl
   1400081d5:	add    BYTE PTR [rax],al
   1400081d7:	add    BYTE PTR [rcx+0x3b],ah
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	mov    ebp,0x9a00003b
   1400081e1:	add    BYTE PTR fs:[rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	(bad)  
   1400081e9:	cmp    eax,DWORD PTR [rax]
   1400081eb:	add    cl,cl
   1400081ed:	cmp    al,0x0
   1400081ef:	add    BYTE PTR [rdx+0x64],bl
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    ah,dl
   1400081f9:	cmp    al,0x0
   1400081fb:	add    BYTE PTR [rdi*1+0x649a0000],dl
   140008202:	add    BYTE PTR [rax],al
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	(bad)  
   140008209:	cmp    eax,0x3d620000
   14000820e:	add    BYTE PTR [rax],al
   140008210:	(bad)  
   140008211:	add    BYTE PTR fs:[rax],al
   140008214:	add    BYTE PTR [rax],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	ins    BYTE PTR es:[rdi],dx
   140008219:	cmp    eax,0x3e470000
   14000821e:	add    BYTE PTR [rax],al
   140008220:	(bad)  
   140008221:	add    BYTE PTR fs:[rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	push   rcx
   140008229:	add    BYTE PTR ds:[rax],al
   14000822c:	fwait
   14000822d:	add    BYTE PTR ds:[rax],al
   140008230:	(bad)  
   140008231:	add    BYTE PTR fs:[rax],al
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax],al
   140008238:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008239:	add    BYTE PTR ds:[rax],al
   14000823c:	or     BYTE PTR [rdi],bh
   14000823e:	add    BYTE PTR [rax],al
   140008240:	(bad)  
   140008241:	add    BYTE PTR fs:[rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	adc    bh,BYTE PTR [rdi]
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	icebp  
   14000824d:	(bad)  
   14000824e:	add    BYTE PTR [rax],al
   140008250:	(bad)  
   140008251:	add    BYTE PTR fs:[rax],al
   140008254:	add    BYTE PTR [rax],al
   140008256:	add    BYTE PTR [rax],al
   140008258:	clc    
   140008259:	(bad)  
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	adc    BYTE PTR [rax+0x0],al
   14000825f:	add    BYTE PTR [rdx+0x64],bl
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rcx],al
   140008269:	sub    BYTE PTR [rbx],cl
   14000826b:	add    BYTE PTR [rax],ch
   14000826d:	xor    al,0xdc
   14000826f:	add    BYTE PTR [rax],ch
   140008271:	add    edx,edx
   140008273:	add    BYTE PTR [rdx],bl
   140008275:	lock sbb al,ah
   140008278:	(bad)  
   140008279:	rcl    BYTE PTR [rax+rax*8],1
   14000827c:	adc    dh,BYTE PTR [rax+0x11]
   14000827f:	(bad)  
   140008280:	adc    BYTE PTR [rax+0x0],dl
   140008283:	add    BYTE PTR [rcx],al
   140008285:	adc    al,0x8
   140008287:	add    BYTE PTR [rsp+riz*2],dl
   14000828a:	or     al,0x0
   14000828c:	adc    al,0x54
   14000828e:	or     eax,DWORD PTR [rax]
   140008290:	adc    al,0x34
   140008292:	or     al,BYTE PTR [rax]
   140008294:	adc    al,0x72
   140008296:	adc    BYTE PTR [rax+0x1],dh
   140008299:	adc    al,0x8
   14000829b:	add    BYTE PTR [rsp+riz*2],dl
   14000829e:	or     al,BYTE PTR [rax]
   1400082a0:	adc    al,0x54
   1400082a2:	or     DWORD PTR [rax],eax
   1400082a4:	adc    al,0x34
   1400082a6:	or     BYTE PTR [rax],al
   1400082a8:	adc    al,0x52
   1400082aa:	adc    BYTE PTR [rax+0x1],dh
   1400082ad:	adc    al,0x8
   1400082af:	add    BYTE PTR [rsp+riz*2],dl
   1400082b2:	(bad)  
   1400082b3:	add    BYTE PTR [rsp+rdx*2],dl
   1400082b6:	or     eax,0xc341400
   1400082bb:	add    BYTE PTR [rdx+rdx*4],dl
   1400082be:	adc    BYTE PTR [rax+0x11],dh
   1400082c1:	and    BYTE PTR [rdx],cl
   1400082c3:	add    BYTE PTR [rax],ah
   1400082c5:	fs adc eax,0x13342000
   1400082cb:	add    BYTE PTR [rax],ah
   1400082cd:	mov    dl,0x1c
   1400082cf:	lock sbb ah,al
   1400082d2:	sbb    al,dl
   1400082d4:	(bad)  
   1400082d5:	rcl    BYTE PTR [rax+rsi*2],0xd6
   1400082d9:	(bad)  
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    DWORD PTR [rax],eax
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	mov    edx,0x57000047
   1400082e5:	rex.WB add BYTE PTR [r8],al
   1400082e8:	or     DWORD PTR [rbp+0x0],esp
   1400082eb:	add    BYTE PTR [rax],al
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    BYTE PTR [rcx],al
   1400082f1:	and    BYTE PTR [rax+rax*1],cl
   1400082f4:	and    BYTE PTR [rdi+rcx*1+0x0],ah
   1400082f8:	and    BYTE PTR [rsi+rcx*1+0x0],dl
   1400082fc:	and    BYTE PTR [rcx*1+0x1c522000],dh
   140008303:	lock sbb ah,al
   140008306:	sbb    al,dl
   140008308:	(bad)  
   140008309:	rcl    BYTE PTR [rax+rsi*2],0x19
   14000830d:	cmp    eax,0x742c000d
   140008312:	std    
   140008313:	add    ch,BYTE PTR [rsp+riz*2]
   140008316:	cld    
   140008317:	add    ch,BYTE PTR [rsp+rsi*1]
   14000831a:	cli    
   14000831b:	add    ch,BYTE PTR [rcx+rax*1]
   14000831e:	hlt    
   14000831f:	add    bl,BYTE PTR [rax]
   140008321:	lock (bad) 
   140008323:	loopne 0x140008339
   140008325:	rcl    BYTE PTR [rdx],1
   140008327:	rcl    BYTE PTR [rax],0x50
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	enter  0x62,0x0
   140008330:	nop
   140008331:	(bad)  
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    DWORD PTR [rcx+rax*1],eax
   140008337:	add    BYTE PTR [rdx+riz*2],al
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	or     DWORD PTR [rcx],ebx
   14000833e:	or     al,BYTE PTR [rax]
   140008340:	sbb    esp,eax
   140008342:	or     eax,DWORD PTR [rax]
   140008344:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140008348:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000834c:	sbb    DWORD PTR [rax+rcx*1],esi
   14000834f:	add    BYTE PTR [rcx],bl
   140008351:	push   rdx
   140008352:	adc    eax,0x60d6e0
   140008357:	add    BYTE PTR [rcx],al
   140008359:	add    BYTE PTR [rax],al
   14000835b:	add    BYTE PTR [rcx+0x2a00005b],bh
   140008361:	pop    rbp
   140008362:	add    BYTE PTR [rax],al
   140008364:	ss add BYTE PTR gs:[rax],al
   140008368:	sub    bl,BYTE PTR [rbp+0x0]
   14000836b:	add    BYTE PTR [rax],al
   14000836d:	add    BYTE PTR [rax],al
   14000836f:	add    BYTE PTR [rcx],al
   140008371:	add    BYTE PTR [rax],al
   140008373:	add    BYTE PTR [rcx],cl
   140008375:	add    al,0x1
   140008377:	add    BYTE PTR [rdx+riz*1],al
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	(bad)  
   14000837d:	(bad)  
   14000837e:	add    BYTE PTR [rax],al
   140008380:	add    DWORD PTR [rax],eax
   140008382:	add    BYTE PTR [rax],al
   140008384:	pop    rsp
   140008385:	pop    rsi
   140008386:	add    BYTE PTR [rax],al
   140008388:	xchg   edx,eax
   140008389:	pop    rsi
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    DWORD PTR [rax],eax
   14000838e:	add    BYTE PTR [rax],al
   140008390:	xchg   edx,eax
   140008391:	pop    rsi
   140008392:	add    BYTE PTR [rax],al
   140008394:	or     DWORD PTR [rdx],ecx
   140008396:	add    al,0x0
   140008398:	or     dh,BYTE PTR [rsi+rax*1]
   14000839b:	add    BYTE PTR [rdx],cl
   14000839d:	xor    al,BYTE PTR [rsi]
   14000839f:	jo     0x140008377
   1400083a1:	(bad)  
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	add    DWORD PTR [rax],eax
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	ins    DWORD PTR es:[rdi],dx
   1400083a9:	pop    rdi
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	movabs al,ds:0xa00000656000005f
   1400083b5:	pop    rdi
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	add    DWORD PTR [rsi],eax
   1400083ba:	add    al,BYTE PTR [rax]
   1400083bc:	(bad)  
   1400083bd:	xor    al,BYTE PTR [rdx]
   1400083bf:	push   rax
   1400083c0:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d83ca
   1400083c6:	or     DWORD PTR [rax],eax
   1400083c8:	or     eax,0x1500632
   1400083cd:	or     al,0x2
   1400083cf:	add    BYTE PTR [rcx+rax*1],cl
   1400083d2:	adc    DWORD PTR [rax],eax
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	add    DWORD PTR [rax],eax
   1400083da:	add    BYTE PTR [rax],al
   1400083dc:	add    DWORD PTR [rsi],eax
   1400083de:	add    al,BYTE PTR [rax]
   1400083e0:	(bad)  
   1400083e1:	xor    al,BYTE PTR [rdx]
   1400083e3:	xor    BYTE PTR [rcx],al
   1400083e5:	add    al,0x1
   1400083e7:	add    BYTE PTR [rdx+rax*2],al
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	add    DWORD PTR [rcx+rax*1],eax
   1400083f3:	add    BYTE PTR [rdx+rdx*1],al
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	clc    
   1400083f9:	xchg   DWORD PTR [rax],eax
	...
   140008403:	add    BYTE PTR [rsi],cl
   140008405:	mov    eax,DWORD PTR [rax]
   140008407:	add    BYTE PTR [rax+0x72],cl
   14000840a:	add    BYTE PTR [rax],al
   14000840c:	and    BYTE PTR [rcx+0x0],cl
   140008412:	add    BYTE PTR [rax],al
   140008414:	add    BYTE PTR [rax],al
   140008416:	add    BYTE PTR [rax],al
   140008418:	xor    cl,BYTE PTR [rax+rax*1+0x737000]
   14000841f:	add    BYTE PTR [rax],ch
   140008421:	xchg   DWORD PTR [rax],eax
	...
   14000842b:	add    BYTE PTR [rsi-0x70],ah
   14000842e:	add    BYTE PTR [rax],al
   140008430:	js     0x1400084a3
   140008432:	add    BYTE PTR [rax],al
   140008434:	mov    al,0x86
	...
   14000843e:	add    BYTE PTR [rax],al
   140008440:	mov    dl,BYTE PTR [rax+0x71000000]
   140008446:	add    BYTE PTR [rax],al
   140008448:	lock test DWORD PTR [rax],eax
	...
   140008453:	add    BYTE PTR [rax+rdx*4+0x70400000],dh
   14000845a:	add    BYTE PTR [rax],al
   14000845c:	lock xchg BYTE PTR [rax],al
	...
   140008467:	add    ah,dl
   140008469:	nop
   14000846a:	add    BYTE PTR [rax],al
   14000846c:	rex jno 0x14000846f
   14000846f:	add    BYTE PTR [rax+0x85],dh
   140008475:	add    BYTE PTR [rax],al
   140008477:	add    BYTE PTR [rax],al
   140008479:	add    BYTE PTR [rax],al
   14000847b:	add    dh,dh
   14000847d:	nop
   14000847e:	add    BYTE PTR [rax],al
   140008480:	add    BYTE PTR [rax+0x0],dh
   140008483:	add    BYTE PTR [rax+0x86],cl
   140008489:	add    BYTE PTR [rax],al
   14000848b:	add    BYTE PTR [rax],al
   14000848d:	add    BYTE PTR [rax],al
   14000848f:	add    BYTE PTR [rdx],bl
   140008491:	xchg   ecx,eax
   140008492:	add    BYTE PTR [rax],al
   140008494:	fdiv   DWORD PTR [rax+0x0]
   140008497:	add    al,dl
   140008499:	xchg   DWORD PTR [rax],eax
	...
   1400084a3:	add    BYTE PTR [rdx-0x6f],al
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	and    BYTE PTR [rdx+0x0],dh
   1400084ab:	add    BYTE PTR [rax+0x87],bl
   1400084b1:	add    BYTE PTR [rax],al
   1400084b3:	add    BYTE PTR [rax],al
   1400084b5:	add    BYTE PTR [rax],al
   1400084b7:	add    BYTE PTR [rsi-0x6f],ah
   1400084ba:	add    BYTE PTR [rax],al
   1400084bc:	call   0xe0008532
   1400084c1:	xchg   BYTE PTR [rax],al
	...
   1400084cb:	add    BYTE PTR [rax-0xfffff6f],dl
   1400084d1:	jo     0x1400084d3
   1400084d3:	add    al,cl
   1400084d5:	test   DWORD PTR [rax],eax
	...
   1400084df:	add    BYTE PTR [rsi+0x18000091],bh
   1400084e5:	jo     0x1400084e7
   1400084e7:	add    BYTE PTR [rax-0x7a],dl
	...
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	call   0xe000858a
   1400084f9:	jo     0x1400084fb
   1400084fb:	add    BYTE PTR [rax-0x7a],al
	...
   140008506:	add    BYTE PTR [rax],al
   140008508:	or     BYTE PTR [rdx+0x70900000],dl
   14000850e:	add    BYTE PTR [rax],al
   140008510:	xor    BYTE PTR [rsi+0x0],al
   140008516:	add    BYTE PTR [rax],al
   140008518:	add    BYTE PTR [rax],al
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	sub    BYTE PTR [rdx+0x70800000],dl
   140008522:	add    BYTE PTR [rax],al
   140008524:	add    BYTE PTR [rdi+0x0],al
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	add    BYTE PTR [rax],al
   14000852e:	add    BYTE PTR [rax],al
   140008530:	rex.WX xchg rdx,rax
   140008532:	add    BYTE PTR [rax],al
   140008534:	push   rax
   140008535:	jno    0x140008537
   140008537:	add    BYTE PTR [rax-0x7a],bh
	...
   140008542:	add    BYTE PTR [rax],al
   140008544:	ins    BYTE PTR es:[rdi],dx
   140008545:	xchg   edx,eax
   140008546:	add    BYTE PTR [rax],al
   140008548:	enter  0x70,0x0
   14000854c:	loopne 0x1400084d4
	...
   140008556:	add    BYTE PTR [rax],al
   140008558:	xchg   esi,eax
   140008559:	xchg   edx,eax
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	xor    BYTE PTR [rcx+0x0],dh
   14000855f:	add    BYTE PTR [rax],dl
   140008561:	xchg   DWORD PTR [rax],eax
	...
   14000856b:	add    BYTE PTR [rdx+0x60000092],bh
   140008571:	jno    0x140008573
   140008573:	add    BYTE PTR [rax+0x87],bh
   140008579:	add    BYTE PTR [rax],al
   14000857b:	add    BYTE PTR [rax],al
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rdx],al
   140008581:	xchg   ebx,eax
   140008582:	add    BYTE PTR [rax],al
   140008584:	or     BYTE PTR [rdx+0x0],dh
   140008587:	add    BYTE PTR [rax-0x7a],ch
	...
   140008592:	add    BYTE PTR [rax],al
   140008594:	ss xchg ebx,eax
   140008596:	add    BYTE PTR [rax],al
   140008598:	mov    eax,0x70
	...
   1400085ad:	add    BYTE PTR [rax],al
   1400085af:	add    BYTE PTR [rdx-0x73],ch
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	add    BYTE PTR [rax],al
   1400085b6:	add    BYTE PTR [rax],al
   1400085b8:	add    BYTE PTR [rbp+0x0],cl
	...
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	ss nop
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	add    BYTE PTR [rax],al
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	xchg   esp,eax
   1400085d1:	pop    QWORD PTR [rax]
   1400085d3:	add    BYTE PTR [rax],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    dh,ah
   1400085d9:	lea    eax,[rax]
   1400085db:	add    BYTE PTR [rax],al
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    dh,dl
   1400085e1:	lea    eax,[rax]
	...
   1400085ef:	add    BYTE PTR [rbp+rcx*4+0x0],dl
   1400085f3:	add    BYTE PTR [rax],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    BYTE PTR [rdx+0x8e],ch
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    BYTE PTR [rax],ah
   140008601:	mov    es,WORD PTR [rax]
   140008603:	add    BYTE PTR [rax],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rsi-0x74],bl
   14000860a:	add    BYTE PTR [rax],al
   14000860c:	add    BYTE PTR [rax],al
   14000860e:	add    BYTE PTR [rax],al
   140008610:	(bad)  
   140008611:	mov    es,WORD PTR [rax]
   140008613:	add    BYTE PTR [rax],al
   140008615:	add    BYTE PTR [rax],al
   140008617:	add    ah,bl
   140008619:	mov    es,WORD PTR [rax]
   14000861b:	add    BYTE PTR [rax],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rdx+0x8c],dh
	...
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rsi-0x71],dl
	...
   14000863e:	add    BYTE PTR [rax],al
   140008640:	(bad)  
   140008641:	mov    es,WORD PTR [rax]
	...
   14000864f:	add    BYTE PTR [rax+0x8f],al
   140008655:	add    BYTE PTR [rax],al
   140008657:	add    BYTE PTR [rdx],dl
   140008659:	mov    es,WORD PTR [rax]
	...
   140008667:	add    BYTE PTR [rdx],ch
   140008669:	xchg   ebx,eax
	...
   140008676:	add    BYTE PTR [rax],al
   140008678:	mov    dl,0x8f
	...
   140008686:	add    BYTE PTR [rax],al
   140008688:	mov    dh,0x8d
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	add    BYTE PTR [rax],al
   14000868e:	add    BYTE PTR [rax],al
   140008690:	adc    cl,BYTE PTR [rbp+0x0]
	...
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400086a1:	lea    eax,[rax]
	...
   1400086af:	add    BYTE PTR [rdx-0x70],dl
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	add    BYTE PTR [rax],al
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	rex.WX mov WORD PTR [rax],es
   1400086bb:	add    BYTE PTR [rax],al
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    al,ah
   1400086c1:	pop    QWORD PTR [rax]
   1400086c3:	add    BYTE PTR [rax],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    dh,dh
   1400086c9:	pop    QWORD PTR [rax]
   1400086cb:	add    BYTE PTR [rax],al
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    BYTE PTR [rsp+rcx*4+0x0],dl
	...
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	(bad)  
   1400086e1:	pop    QWORD PTR [rax]
	...
   1400086ef:	add    dl,ch
   1400086f1:	mov    WORD PTR [rax],es
	...
   1400086ff:	add    BYTE PTR [rdi+rcx*4+0x0],cl
	...
   14000870e:	add    BYTE PTR [rax],al
   140008710:	es nop
   140008712:	add    BYTE PTR [rax],al
   140008714:	add    BYTE PTR [rax],al
   140008716:	add    BYTE PTR [rax],al
   140008718:	or     al,0x90
	...
   140008726:	add    BYTE PTR [rax],al
   140008728:	je     0x1400086b8
   14000872a:	add    BYTE PTR [rax],al
   14000872c:	add    BYTE PTR [rax],al
   14000872e:	add    BYTE PTR [rax],al
   140008730:	(bad)  
   140008731:	mov    es,WORD PTR [rax]
   140008733:	add    BYTE PTR [rax],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    ah,ch
   140008739:	mov    es,WORD PTR [rax]
   14000873b:	add    BYTE PTR [rax],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    dh,dh
   140008741:	lea    eax,[rax]
   140008743:	add    BYTE PTR [rax],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rax+0x8c],cl
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    BYTE PTR [rsp+rcx*4],bh
   140008752:	add    BYTE PTR [rax],al
   140008754:	add    BYTE PTR [rax],al
   140008756:	add    BYTE PTR [rax],al
   140008758:	jle    0x1400086e8
   14000875a:	add    BYTE PTR [rax],al
   14000875c:	add    BYTE PTR [rax],al
   14000875e:	add    BYTE PTR [rax],al
   140008760:	pop    QWORD PTR fs:[rax]
   140008763:	add    BYTE PTR [rax],al
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rax-0x74],dh
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	add    BYTE PTR [rax],al
   14000876e:	add    BYTE PTR [rax],al
   140008770:	fimul  WORD PTR [rax+rax*1+0x0]
   140008777:	add    BYTE PTR [rsi-0x72],ah
   14000877a:	add    BYTE PTR [rax],al
   14000877c:	add    BYTE PTR [rax],al
   14000877e:	add    BYTE PTR [rax],al
   140008780:	test   al,0x8c
   140008782:	add    BYTE PTR [rax],al
   140008784:	add    BYTE PTR [rax],al
   140008786:	add    BYTE PTR [rax],al
   140008788:	mov    esi,0x8c
	...
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rdx+0x8d],dl
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rdx-0x73],bh
   1400087a2:	add    BYTE PTR [rax],al
   1400087a4:	add    BYTE PTR [rax],al
   1400087a6:	add    BYTE PTR [rax],al
   1400087a8:	lea    eax,ds:[rax]
	...
   1400087b7:	add    al,dh
   1400087b9:	xchg   edx,eax
   1400087ba:	add    BYTE PTR [rax],al
   1400087bc:	add    BYTE PTR [rax],al
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	ficom  WORD PTR [rdx+0x0]
	...
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	add    al,0x8f
   1400087d2:	add    BYTE PTR [rax],al
   1400087d4:	add    BYTE PTR [rax],al
   1400087d6:	add    BYTE PTR [rax],al
   1400087d8:	(bad)  
   1400087d9:	pop    QWORD PTR [rax]
   1400087db:	add    BYTE PTR [rax],al
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rcx*4+0x0],ah
   1400087e6:	add    BYTE PTR [rax],al
   1400087e8:	mov    es,WORD PTR cs:[rax]
	...
   1400087f7:	add    BYTE PTR [rsi],ah
   1400087f9:	mov    al,BYTE PTR [rax]
   1400087fb:	add    BYTE PTR [rax],al
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rdx+rcx*4],bl
   140008802:	add    BYTE PTR [rax],al
   140008804:	add    BYTE PTR [rax],al
   140008806:	add    BYTE PTR [rax],al
   140008808:	adc    cl,BYTE PTR [rdx+0x0]
   14000880e:	add    BYTE PTR [rax],al
   140008810:	data16 mov al,BYTE PTR [rax]
   140008813:	add    BYTE PTR [rax],al
   140008815:	add    BYTE PTR [rax],al
   140008817:	add    BYTE PTR [rax],cl
   140008819:	mov    al,BYTE PTR [rax]
   14000881b:	add    BYTE PTR [rax],al
   14000881d:	add    BYTE PTR [rax],al
   14000881f:	add    dh,bh
   140008821:	mov    DWORD PTR [rax],eax
   140008823:	add    BYTE PTR [rax],al
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    dl,dh
   140008829:	mov    DWORD PTR [rax],eax
   14000882b:	add    BYTE PTR [rax],al
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rdx+rcx*4+0x0],bl
   140008833:	add    BYTE PTR [rax],al
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    BYTE PTR [rax-0x6d],ah
   14000883a:	add    BYTE PTR [rax],al
   14000883c:	add    BYTE PTR [rax],al
   14000883e:	add    BYTE PTR [rax],al
   140008840:	call   0x1400088ce
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rax+0x89],cl
   14000884d:	add    BYTE PTR [rax],al
   14000884f:	add    dl,dl
   140008851:	mov    DWORD PTR [rax],eax
   140008853:	add    BYTE PTR [rax],al
   140008855:	add    BYTE PTR [rax],al
   140008857:	add    BYTE PTR [rdx-0x76],dl
   14000885a:	add    BYTE PTR [rax],al
   14000885c:	add    BYTE PTR [rax],al
   14000885e:	add    BYTE PTR [rax],al
   140008860:	rex.RX mov r8b,BYTE PTR [rax]
   140008863:	add    BYTE PTR [rax],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    al,cl
   140008869:	mov    DWORD PTR [rax],eax
   14000886b:	add    BYTE PTR [rax],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    al,al
   140008871:	mov    DWORD PTR [rax],eax
   140008873:	add    BYTE PTR [rax],al
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rcx+rcx*4+0x0],dh
   14000887e:	add    BYTE PTR [rax],al
   140008880:	sbb    cl,BYTE PTR [rbx+0x0]
   140008886:	add    BYTE PTR [rax],al
   140008888:	add    cl,BYTE PTR [rbx+0x0]
   14000888e:	add    BYTE PTR [rax],al
   140008890:	clc    
   140008891:	mov    al,BYTE PTR [rax]
   140008893:	add    BYTE PTR [rax],al
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    al,ah
   140008899:	mov    al,BYTE PTR [rax]
   14000889b:	add    BYTE PTR [rax],al
   14000889d:	add    BYTE PTR [rax],al
   14000889f:	add    ah,dl
   1400088a1:	mov    al,BYTE PTR [rax]
   1400088a3:	add    BYTE PTR [rax],al
   1400088a5:	add    BYTE PTR [rax],al
   1400088a7:	add    al,al
   1400088a9:	mov    al,BYTE PTR [rax]
   1400088ab:	add    BYTE PTR [rax],al
   1400088ad:	add    BYTE PTR [rax],al
   1400088af:	add    BYTE PTR [rcx+rcx*4+0x0],ch
   1400088b6:	add    BYTE PTR [rax],al
   1400088b8:	mov    dh,0x8a
   1400088ba:	add    BYTE PTR [rax],al
   1400088bc:	add    BYTE PTR [rax],al
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	scas   al,BYTE PTR es:[rdi]
   1400088c1:	mov    al,BYTE PTR [rax]
   1400088c3:	add    BYTE PTR [rax],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    BYTE PTR [rsi+0x8a],ah
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    BYTE PTR [rdx+rcx*4+0x0],dl
   1400088d6:	add    BYTE PTR [rax],al
   1400088d8:	movabs al,ds:0x8200000000000089
   1400088e1:	mov    al,BYTE PTR [rax]
   1400088e3:	add    BYTE PTR [rax],al
   1400088e5:	add    BYTE PTR [rax],al
   1400088e7:	add    dh,bl
   1400088e9:	mov    DWORD PTR [rax],eax
   1400088eb:	add    BYTE PTR [rax],al
   1400088ed:	add    BYTE PTR [rax],al
   1400088ef:	add    BYTE PTR [rdx+rcx*4],bh
   1400088f2:	add    BYTE PTR [rax],al
   1400088f4:	add    BYTE PTR [rax],al
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	xor    BYTE PTR [rdx+0x0],cl
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	xchg   edx,eax
   140008901:	mov    DWORD PTR [rax],eax
   140008903:	add    BYTE PTR [rax],al
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   14000890b:	add    BYTE PTR [rax],al
   14000890d:	add    BYTE PTR [rax],al
   14000890f:	add    BYTE PTR [rax-0x6d],dh
	...
   14000891e:	add    BYTE PTR [rax],al
   140008920:	(bad)  
   140008921:	mov    WORD PTR [rax],es
   140008923:	add    BYTE PTR [rax],al
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    BYTE PTR [rsp+rcx*4],al
   14000892a:	add    BYTE PTR [rax],al
   14000892c:	add    BYTE PTR [rax],al
   14000892e:	add    BYTE PTR [rax],al
   140008930:	lock mov eax,DWORD PTR [rax]
   140008933:	add    BYTE PTR [rax],al
   140008935:	add    BYTE PTR [rax],al
   140008937:	add    dl,ah
   140008939:	mov    eax,DWORD PTR [rax]
   14000893b:	add    BYTE PTR [rax],al
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    al,cl
   140008941:	mov    eax,DWORD PTR [rax]
   140008943:	add    BYTE PTR [rax],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rsi+0x8b],bh
   14000894d:	add    BYTE PTR [rax],al
   14000894f:	add    BYTE PTR [rsi+0x8b],ah
   140008955:	add    BYTE PTR [rax],al
   140008957:	add    BYTE PTR [rsi-0x75],bh
   14000895a:	add    BYTE PTR [rax],al
   14000895c:	add    BYTE PTR [rax],al
   14000895e:	add    BYTE PTR [rax],al
   140008960:	mov    eax,DWORD PTR fs:[rax]
   140008963:	add    BYTE PTR [rax],al
   140008965:	add    BYTE PTR [rax],al
   140008967:	add    BYTE PTR [rdx-0x75],dl
   14000896a:	add    BYTE PTR [rax],al
   14000896c:	add    BYTE PTR [rax],al
   14000896e:	add    BYTE PTR [rax],al
   140008970:	mov    r8d,DWORD PTR [rax]
   140008973:	add    BYTE PTR [rax],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    BYTE PTR [rsi],ch
   140008979:	mov    eax,DWORD PTR [rax]
	...
   140008987:	add    BYTE PTR [rcx],al
   140008989:	add    eax,0x63736377
   14000898e:	push   0xffffffffdc000072
   140008993:	add    al,0x73
   140008995:	ja     0x140008a07
   140008997:	jb     0x140008a02
   140008999:	outs   dx,BYTE PTR ds:[rsi]
   14000899a:	je     0x140008a02
   14000899c:	pop    rdi
   14000899d:	jae    0x14000899f
   14000899f:	add    BYTE PTR [rdx+0x63775f03],cl
   1400089a5:	jae    0x140008a10
   1400089a7:	movsxd ebp,DWORD PTR [rbp+0x70]
   1400089aa:	add    BYTE PTR [rax],al
   1400089ac:	(bad)  
   1400089ad:	add    al,0x66
   1400089af:	outs   dx,DWORD PTR gs:[rsi]
   1400089b1:	data16 add BYTE PTR [rax],al
   1400089b4:	or     eax,0x73637705
   1400089b9:	outs   dx,BYTE PTR ds:[rsi]
   1400089ba:	movsxd esi,DWORD PTR [rax+0x79]
   1400089bd:	pop    rdi
   1400089be:	jae    0x1400089c0
   1400089c0:	rex.WR add al,0x66
   1400089c3:	jb     0x140008a2a
   1400089c5:	add    BYTE PTR gs:[rax],al
   1400089c8:	and    eax,0x6c616304
   1400089cd:	ins    BYTE PTR es:[rdi],dx
   1400089ce:	outs   dx,DWORD PTR ds:[rsi]
   1400089cf:	movsxd eax,DWORD PTR [rax]
   1400089d1:	add    BYTE PTR [rbx+rax*1+0x7363775f],dl
   1400089d8:	outs   dx,BYTE PTR ds:[rsi]
   1400089d9:	imul   esp,DWORD PTR [rbx+0x6d],0x4860070
   1400089e0:	ins    DWORD PTR es:[rdi],dx
   1400089e1:	(bad)  
   1400089e2:	ins    BYTE PTR es:[rdi],dx
   1400089e3:	ins    BYTE PTR es:[rdi],dx
   1400089e4:	outs   dx,DWORD PTR ds:[rsi]
   1400089e5:	movsxd eax,DWORD PTR [rax]
   1400089e7:	add    bl,al
   1400089e9:	add    ebx,DWORD PTR [rdi+0x77]
   1400089ec:	outs   dx,WORD PTR ds:[rsi]
   1400089ee:	jo     0x140008a55
   1400089f0:	outs   dx,BYTE PTR ds:[rsi]
   1400089f1:	add    cl,bl
   1400089f3:	add    ebx,DWORD PTR [rdi+0x77]
   1400089f6:	jo     0x140008a5d
   1400089f8:	jb     0x140008a6c
   1400089fa:	outs   dx,DWORD PTR ds:[rsi]
   1400089fb:	jb     0x1400089fd
   1400089fd:	add    BYTE PTR [rdx],bh
   1400089ff:	add    ebx,DWORD PTR [rdi+0x75]
   140008a02:	ins    BYTE PTR es:[rdi],dx
   140008a03:	je     0x140008a74
   140008a05:	ja     0x140008a07
   140008a07:	add    BYTE PTR [rax],dl
   140008a09:	add    eax,0x72736377
   140008a0e:	movsxd ebp,DWORD PTR [rax+0x72]
   140008a11:	add    BYTE PTR [rbp+0x69727004],bl
   140008a17:	outs   dx,BYTE PTR ds:[rsi]
   140008a18:	je     0x140008a80
   140008a1a:	add    BYTE PTR [rax],al
   140008a1c:	cmp    eax,0x65676604
   140008a21:	je     0x140008a9a
   140008a23:	movsxd eax,DWORD PTR [rax]
   140008a25:	add    BYTE PTR [rdx+0x4],cl
   140008a28:	data16 jo 0x140008aa0
   140008a2b:	je     0x140008aa4
   140008a2d:	jae    0x140008a2f
   140008a2f:	add    BYTE PTR [rax],al
   140008a31:	add    eax,0x63736377
   140008a36:	(bad)  
   140008a37:	je     0x140008a98
   140008a39:	jae    0x140008a3b
   140008a3b:	add    BYTE PTR [rcx+0x61657204],ch
   140008a41:	ins    BYTE PTR es:[rdi],dx
   140008a42:	ins    BYTE PTR es:[rdi],dx
   140008a43:	outs   dx,DWORD PTR ds:[rsi]
   140008a44:	movsxd eax,DWORD PTR [rax]
   140008a46:	add    eax,0x73637705
   140008a4b:	movsxd esi,DWORD PTR [rax+0x79]
   140008a4e:	pop    rdi
   140008a4f:	jae    0x140008a51
   140008a51:	add    BYTE PTR [rsi],dh
   140008a53:	add    al,0x66
   140008a55:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140008a59:	add    BYTE PTR gs:[rax],al
   140008a5c:	test   DWORD PTR [rbx],eax
   140008a5e:	pop    rdi
   140008a5f:	ja     0x140008ac4
   140008a61:	jae    0x140008ac7
   140008a63:	jne    0x140008ad5
   140008a65:	add    BYTE PTR [rbp+0x0],dl
   140008a68:	pop    rdi
   140008a69:	pop    rax
   140008a6a:	movsxd esi,DWORD PTR [rax+0x74]
   140008a6d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008a76:	pop    rdi
   140008a77:	(bad)  
   140008a78:	ins    DWORD PTR es:[rdi],dx
   140008a79:	jae    0x140008ae2
   140008a7b:	pop    rdi
   140008a7c:	gs js  0x140008ae8
   140008a7f:	je     0x140008a81
   140008a81:	add    BYTE PTR [rbp+0x775f5f00],bl
   140008a87:	addr32 gs je 0x140008af8
   140008a8b:	(bad)  
   140008a8c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008a93:	add    BYTE PTR [rsi+0x735f5f00],cl
   140008a99:	gs je  0x140008afb
   140008a9c:	(bad)  
   140008a9d:	jo     0x140008b0f
   140008a9f:	pop    rdi
   140008aa0:	je     0x140008b1b
   140008aa2:	jo     0x140008b09
   140008aa4:	add    BYTE PTR [rax],al
   140008aa6:	xor    al,BYTE PTR [riz*2+0x746978]
   140008aad:	add    BYTE PTR [rsi],cl
   140008aaf:	add    DWORD PTR [rdi+0x65],ebx
   140008ab2:	js     0x140008b1d
   140008ab4:	je     0x140008ab6
   140008ab6:	rol    DWORD PTR [rax],0x5f
   140008ab9:	movsxd esp,DWORD PTR [rbp+0x78]
   140008abc:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140008ac4:	jae    0x140008b2b
   140008ac6:	je     0x140008b3d
   140008ac8:	jae    0x140008b2f
   140008aca:	jb     0x140008b39
   140008acc:	(bad)  
   140008acd:	je     0x140008b37
   140008acf:	gs jb  0x140008b44
   140008ad2:	add    BYTE PTR [rax],al
   140008ad4:	jge    0x140008ad7
   140008ad6:	pop    rdi
   140008ad7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008ade:	ins    DWORD PTR es:[rdi],dx
   140008adf:	add    BYTE PTR [rdi+0x0],dl
   140008ae2:	pop    rdi
   140008ae3:	pop    rdi
   140008ae4:	rex.XB pop r15
   140008ae6:	jae    0x140008b58
   140008ae8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008aec:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008af3:	ins    BYTE PTR es:[rdi],dx
   140008af4:	gs jb  0x140008af7
   140008af7:	add    BYTE PTR [rdi],ah
   140008af9:	add    DWORD PTR [rdi+0x66],ebx
   140008afc:	ins    DWORD PTR es:[rdi],dx
   140008afd:	outs   dx,DWORD PTR ds:[rsi]
   140008afe:	fs add BYTE PTR gs:[rax],al
   140008b02:	rol    BYTE PTR [rax],cl
   140008b04:	pop    rdi
   140008b05:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008b08:	ins    DWORD PTR es:[rdi],dx
   140008b09:	outs   dx,DWORD PTR ds:[rsi]
   140008b0a:	fs add BYTE PTR gs:[rax],al
   140008b0e:	ins    DWORD PTR es:[rdi],dx
   140008b0f:	jae    0x140008b87
   140008b11:	movsxd esi,DWORD PTR [rdx+0x74]
   140008b14:	cs fs ins BYTE PTR es:[rdi],dx
   140008b17:	ins    BYTE PTR es:[rdi],dx
   140008b18:	add    BYTE PTR [rax],al
   140008b1a:	(bad)  
   140008b1b:	add    BYTE PTR [rdi],bh
   140008b1d:	je     0x140008b84
   140008b1f:	jb     0x140008b8e
   140008b21:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008b28:	pop    rcx
   140008b29:	pop    r8
   140008b2b:	pop    rax
   140008b2c:	pop    rdx
   140008b2d:	add    BYTE PTR [rsi+0x4],al
   140008b30:	push   rdx
   140008b31:	je     0x140008b9f
   140008b33:	rex.WB jae 0x140008b79
   140008b36:	(bad)  
   140008b37:	jo     0x140008b9a
   140008b39:	(bad)  
   140008b3a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x64695379
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	stos   DWORD PTR es:[rdi],eax
   140008b45:	add    edx,DWORD PTR [rdx+0x74]
   140008b48:	ins    BYTE PTR es:[rdi],dx
   140008b49:	rex.RX jb 0x140008bb1
   140008b4c:	gs rex.W
   140008b4e:	gs (bad) 
   140008b50:	jo     0x140008b52
   140008b52:	push   rcx
   140008b53:	add    al,0x52
   140008b55:	je     0x140008bc3
   140008b57:	rex.WB jae 0x140008baa
   140008b5a:	(bad)  
   140008b5b:	movsxd ebp,DWORD PTR [rbx+0x61]
   140008b5e:	addr32 gs push rbx
   140008b61:	imul   esp,DWORD PTR [rax+rax*1-0x4a],0x51744e01
   140008b69:	jne    0x140008bd0
   140008b6b:	jb     0x140008be6
   140008b6d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008b6f:	outs   dx,WORD PTR ds:[rsi]
   140008b71:	jb     0x140008be0
   140008b73:	(bad)  
   140008b74:	je     0x140008bdf
   140008b76:	outs   dx,DWORD PTR ds:[rsi]
   140008b77:	outs   dx,BYTE PTR ds:[rsi]
   140008b78:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x52035c00
   140008b81:	je     0x140008bef
   140008b83:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008b85:	jae    0x140008bd7
   140008b87:	(bad)  
   140008b88:	je     0x140008bf2
   140008b8a:	rex.WRX (bad) 
   140008b8c:	ins    DWORD PTR es:[rdi],dx
   140008b8d:	gs push rsp
   140008b8f:	outs   dx,DWORD PTR ds:[rsi]
   140008b90:	push   rdx
   140008b91:	gs ins BYTE PTR es:[rdi],dx
   140008b93:	(bad)  
   140008b94:	je     0x140008bff
   140008b96:	jbe    0x140008bfd
   140008b98:	rex.WRX je 0x140008beb
   140008b9b:	(bad)  
   140008b9c:	je     0x140008c06
   140008b9e:	rex.WRX (bad) 
   140008ba0:	ins    DWORD PTR es:[rdi],dx
   140008ba1:	gs pop rdi
   140008ba3:	push   rbp
   140008ba4:	add    BYTE PTR [rax],al
   140008ba6:	mov    al,BYTE PTR [rdx+rdx*2]
   140008ba9:	je     0x140008c17
   140008bab:	rex.WRX je 0x140008c01
   140008bae:	je     0x140008c11
   140008bb0:	je     0x140008c27
   140008bb2:	jae    0x140008c08
   140008bb4:	outs   dx,DWORD PTR ds:[rsi]
   140008bb5:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008bb7:	jae    0x140008bfe
   140008bb9:	jb     0x140008c2d
   140008bbb:	outs   dx,DWORD PTR ds:[rsi]
   140008bbc:	jb     0x140008bbe
   140008bbe:	out    dx,al
   140008bbf:	add    BYTE PTR [rsi+0x74],cl
   140008bc2:	rex.XB ins BYTE PTR es:[rdi],dx
   140008bc4:	outs   dx,DWORD PTR ds:[rsi]
   140008bc5:	jae    0x140008c2c
   140008bc7:	add    al,ah
   140008bc9:	add    al,0x52
   140008bcb:	je     0x140008c39
   140008bcd:	push   rdx
   140008bce:	gs ins BYTE PTR es:[rdi],dx
   140008bd0:	gs (bad) 
   140008bd2:	jae    0x140008c39
   140008bd4:	push   rdx
   140008bd5:	gs ins BYTE PTR es:[rdi],dx
   140008bd7:	(bad)  
   140008bd8:	je     0x140008c43
   140008bda:	jbe    0x140008c41
   140008bdc:	rex.WRX (bad) 
   140008bde:	ins    DWORD PTR es:[rdi],dx
   140008bdf:	add    BYTE PTR gs:[rax],al
   140008be2:	add    DWORD PTR [rcx],0x704f744e
   140008be8:	outs   dx,BYTE PTR gs:[rsi]
   140008bea:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x5202c600
   140008bf3:	je     0x140008c61
   140008bf5:	rex.XB (bad) 
   140008bf7:	jo     0x140008c6d
   140008bf9:	jne    0x140008c6d
   140008bfb:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140008bfe:	outs   dx,BYTE PTR ds:[rsi]
   140008bff:	je     0x140008c66
   140008c01:	js     0x140008c77
   140008c03:	add    BYTE PTR [rdi+0x4],dh
   140008c06:	push   rdx
   140008c07:	je     0x140008c75
   140008c09:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008c0b:	outs   dx,DWORD PTR ds:[rsi]
   140008c0c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140008c10:	jne    0x140008c80
   140008c12:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008c16:	outs   dx,BYTE PTR ds:[rsi]
   140008c17:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008c19:	je     0x140008c8d
   140008c1b:	jns    0x140008c1d
   140008c1d:	add    BYTE PTR [rbx+0x6c745205],cl
   140008c23:	push   rsi
   140008c24:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008c2b:	outs   dx,BYTE PTR ds:[rsi]
   140008c2c:	ja     0x140008c97
   140008c2e:	outs   dx,BYTE PTR ds:[rsi]
   140008c2f:	add    BYTE PTR fs:[rax],al
   140008c32:	outs   dx,BYTE PTR ds:[rsi]
   140008c33:	je     0x140008c99
   140008c35:	ins    BYTE PTR es:[rdi],dx
   140008c36:	ins    BYTE PTR es:[rdi],dx
   140008c37:	cs fs ins BYTE PTR es:[rdi],dx
   140008c3a:	ins    BYTE PTR es:[rdi],dx
   140008c3b:	add    BYTE PTR [rcx+0x0],cl
   140008c3e:	rex.WB jae 0x140008c97
   140008c41:	(bad)  
   140008c42:	ins    BYTE PTR es:[rdi],dx
   140008c43:	imul   esp,DWORD PTR [rcx+rax*2+0x63],0x3000006c
   140008c4b:	add    BYTE PTR [rdi+0x70],cl
   140008c4e:	outs   dx,BYTE PTR gs:[rsi]
   140008c50:	push   rax
   140008c51:	jb     0x140008cc2
   140008c53:	movsxd esp,DWORD PTR [rbp+0x73]
   140008c56:	jae    0x140008cac
   140008c58:	outs   dx,DWORD PTR ds:[rsi]
   140008c59:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140008c5d:	add    BYTE PTR [rax+rax*1],dl
   140008c60:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   140008c68:	je     0x140008cb0
   140008c6a:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x5e0000
   140008c72:	push   rbx
   140008c73:	gs je  0x140008cc9
   140008c76:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008c7a:	imul   esi,DWORD PTR [rcx+rdi*2+0x41],0x73656363
   140008c82:	jae    0x140008cd1
   140008c84:	(bad)  
   140008c85:	jae    0x140008cf2
   140008c87:	add    BYTE PTR [rax+rax*1],ah
   140008c8a:	rex.R
   140008c8b:	gs ins BYTE PTR es:[rdi],dx
   140008c8d:	gs je  0x140008cf5
   140008c90:	movsxd esp,DWORD PTR [r13+0x0]
   140008c94:	or     al,0x0
   140008c96:	rex.RXB
   140008c97:	gs je  0x140008cdd
   140008c9a:	jne    0x140008d0e
   140008c9c:	jb     0x140008d03
   140008c9e:	outs   dx,BYTE PTR ds:[rsi]
   140008c9f:	je     0x140008cf1
   140008ca1:	jb     0x140008d12
   140008ca3:	movsxd esp,DWORD PTR [rbp+0x73]
   140008ca6:	jae    0x140008ca8
   140008ca8:	(bad)  
   140008ca9:	add    BYTE PTR [rbx+0x6f],al
   140008cac:	jo     0x140008d27
   140008cae:	push   rbx
   140008caf:	imul   esp,DWORD PTR [rax+rax*1+0x59],0x69725700
   140008cb7:	je     0x140008d1e
   140008cb9:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65470035
   140008cc2:	je     0x140008d17
   140008cc4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008cc8:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140008cd0:	imul   esi,DWORD PTR [rax+0x74],0x6f43726f
   140008cd7:	outs   dx,BYTE PTR ds:[rsi]
   140008cd8:	je     0x140008d4c
   140008cda:	outs   dx,DWORD PTR ds:[rsi]
   140008cdb:	ins    BYTE PTR es:[rdi],dx
   140008cdc:	add    BYTE PTR [rax],al
   140008cde:	sub    al,BYTE PTR [rax]
   140008ce0:	rex.RB jno 0x140008d58
   140008ce3:	(bad)  
   140008ce4:	ins    BYTE PTR es:[rdi],dx
   140008ce5:	push   rbx
   140008ce6:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x69570007
   140008cee:	fs gs rex.XB push 0x6f547261
   140008cf6:	rex.WRB jne 0x140008d65
   140008cf9:	je     0x140008d64
   140008cfb:	rex.X jns 0x140008d72
   140008cfe:	add    BYTE PTR gs:[rdx],al
   140008d01:	add    BYTE PTR [rdi+0x65],al
   140008d04:	je     0x140008d49
   140008d06:	outs   dx,DWORD PTR ds:[rsi]
   140008d07:	outs   dx,BYTE PTR ds:[rsi]
   140008d08:	jae    0x140008d79
   140008d0a:	ins    BYTE PTR es:[rdi],dx
   140008d0b:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140008d0e:	fs add BYTE PTR gs:[rax],al
   140008d12:	or     BYTE PTR [rax],al
   140008d14:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140008d16:	jb     0x140008d85
   140008d18:	(bad)  
   140008d19:	je     0x140008d68
   140008d1b:	gs jae 0x140008d91
   140008d1e:	(bad)  
   140008d1f:	addr32 gs push rdi
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	add    eax,DWORD PTR [rax]
   140008d26:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008d28:	outs   dx,BYTE PTR ds:[rsi]
   140008d29:	jbe    0x140008d90
   140008d2b:	jb     0x140008da1
   140008d2d:	push   rbx
   140008d2e:	je     0x140008da2
   140008d30:	imul   ebp,DWORD PTR [rsi+0x67],0x54646953
   140008d37:	outs   dx,DWORD PTR ds:[rsi]
   140008d38:	push   rbx
   140008d39:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x4c000000
   140008d41:	outs   dx,DWORD PTR ds:[rsi]
   140008d42:	outs   dx,DWORD PTR ds:[rsi]
   140008d43:	imul   esi,DWORD PTR [rbp+0x70],0x41
   140008d47:	movsxd esp,DWORD PTR [rbx+0x6f]
   140008d4a:	jne    0x140008dba
   140008d4c:	je     0x140008d9c
   140008d4e:	(bad)  
   140008d4f:	ins    DWORD PTR es:[rdi],dx
   140008d50:	gs push rdi
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	sub    al,BYTE PTR [rax]
   140008d56:	rex.RXB
   140008d57:	gs je  0x140008da0
   140008d5a:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140008d62:	(bad)  
   140008d63:	jne    0x140008dd9
   140008d65:	gs jae 0x140008dbf
   140008d68:	add    BYTE PTR [rax],al
   140008d6a:	or     eax,0x69725700
   140008d6f:	je     0x140008dd6
   140008d71:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008d73:	outs   dx,BYTE PTR ds:[rsi]
   140008d74:	jae    0x140008de5
   140008d76:	ins    BYTE PTR es:[rdi],dx
   140008d77:	gs push rdi
   140008d79:	add    BYTE PTR [rax+rax*1],al
   140008d7c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008d7e:	outs   dx,DWORD PTR ds:[rsi]
   140008d7f:	imul   esi,DWORD PTR [rbp+0x70],0x50
   140008d83:	jb     0x140008dee
   140008d85:	jbe    0x140008df0
   140008d87:	ins    BYTE PTR es:[rdi],dx
   140008d88:	gs addr32 gs push rsi
   140008d8c:	(bad)  
   140008d8d:	ins    BYTE PTR es:[rdi],dx
   140008d8e:	jne    0x140008df5
   140008d90:	push   rdi
   140008d91:	add    BYTE PTR [rcx],al
   140008d93:	add    BYTE PTR [rdi+rbp*2+0x6f],cl
   140008d97:	imul   esi,DWORD PTR [rbp+0x70],0x41
   140008d9b:	movsxd esp,DWORD PTR [rbx+0x6f]
   140008d9e:	jne    0x140008e0e
   140008da0:	je     0x140008df5
   140008da2:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x6547000c
   140008daa:	je     0x140008dff
   140008dac:	je     0x140008e12
   140008dae:	rex.W (bad) 
   140008db0:	outs   dx,BYTE PTR ds:[rsi]
   140008db1:	fs ins BYTE PTR es:[rdi],dx
   140008db3:	add    BYTE PTR gs:[rax],al
   140008db6:	cmp    DWORD PTR [rax],eax
   140008db8:	push   rbx
   140008db9:	gs je  0x140008e10
   140008dbc:	push   0x64616572
   140008dc1:	push   rax
   140008dc2:	jb     0x140008e29
   140008dc4:	data16 gs jb 0x140008e3a
   140008dc8:	gs fs push rbp
   140008dcb:	rex.WB
   140008dcc:	rex.WR (bad) 
   140008dce:	outs   dx,BYTE PTR ds:[rsi]
   140008dcf:	addr32 jne 0x140008e33
   140008dd2:	addr32 gs jae 0x140008dd6
   140008dd6:	add    eax,0x74654700
   140008ddb:	rex.WR (bad) 
   140008ddd:	jae    0x140008e53
   140008ddf:	rex.RB jb 0x140008e54
   140008de2:	outs   dx,DWORD PTR ds:[rsi]
   140008de3:	jb     0x140008de5
   140008de5:	add    BYTE PTR [rip+0x74655300],cl        # 0x1b465e0eb
   140008deb:	rex.WR (bad) 
   140008ded:	jae    0x140008e63
   140008def:	rex.RB jb 0x140008e64
   140008df2:	outs   dx,DWORD PTR ds:[rsi]
   140008df3:	jb     0x140008df5
   140008df5:	add    BYTE PTR [rbp+0x0],al
   140008df8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008dfa:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008e02:	movsxd ebp,DWORD PTR [r8+rax*1+0xc]
   140008e07:	add    BYTE PTR [rsi+0x69],al
   140008e0a:	outs   dx,BYTE PTR ds:[rsi]
   140008e0b:	fs rex.XB ins BYTE PTR es:[rdi],dx
   140008e0e:	outs   dx,DWORD PTR ds:[rsi]
   140008e0f:	jae    0x140008e76
   140008e11:	add    BYTE PTR [rdx],al
   140008e13:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   140008e17:	(bad)  
   140008e18:	ins    BYTE PTR es:[rdi],dx
   140008e19:	rex.B ins BYTE PTR es:[rdi],dx
   140008e1b:	ins    BYTE PTR es:[rdi],dx
   140008e1c:	outs   dx,DWORD PTR ds:[rsi]
   140008e1d:	movsxd eax,DWORD PTR [rax]
   140008e1f:	add    BYTE PTR [rdi],ch
   140008e21:	add    BYTE PTR [rdi+0x65],al
   140008e24:	je     0x140008e6c
   140008e26:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140008e2e:	add    al,BYTE PTR [rax]
   140008e30:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008e32:	outs   dx,BYTE PTR ds:[rsi]
   140008e33:	jbe    0x140008e9a
   140008e35:	jb     0x140008eab
   140008e37:	push   rbx
   140008e38:	je     0x140008eac
   140008e3a:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   140008e41:	jb     0x140008eac
   140008e43:	je     0x140008ebe
   140008e45:	rex.R
   140008e46:	gs jae 0x140008eac
   140008e49:	jb     0x140008eb4
   140008e4b:	jo     0x140008ec1
   140008e4d:	outs   dx,DWORD PTR ds:[rsi]
   140008e4e:	jb     0x140008ea4
   140008e50:	outs   dx,DWORD PTR ds:[rsi]
   140008e51:	push   rbx
   140008e52:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008e56:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140008e5e:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   140008e65:	add    BYTE PTR [rbx+0x0],cl
   140008e68:	rex.WB jae 0x140008ec1
   140008e6b:	(bad)  
   140008e6c:	ins    BYTE PTR es:[rdi],dx
   140008e6d:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0xd000064
   140008e75:	add    BYTE PTR [rcx+0x64],al
   140008e78:	movsxd esp,DWORD PTR fs:[r13+0x0]
   140008e7d:	add    BYTE PTR [rbx],bh
   140008e7f:	add    BYTE PTR [rdi+0x65],al
   140008e82:	je     0x140008ed7
   140008e84:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008e88:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140008e90:	imul   esi,DWORD PTR [rax+0x74],0x6153726f
   140008e97:	movsxd ebp,DWORD PTR [rax+rax*1+0x33]
   140008e9b:	add    BYTE PTR [rdi+0x65],al
   140008e9e:	je     0x140008eec
   140008ea0:	outs   dx,BYTE PTR gs:[rsi]
   140008ea2:	addr32 je 0x140008f0d
   140008ea5:	push   rbx
   140008ea6:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x65470031
   140008eae:	je     0x140008ef6
   140008eb0:	imul   ebp,DWORD PTR [rsi+0x61],0x7461506c
   140008eb7:	push   0x656d614e
   140008ebc:	rex.X jns 0x140008f07
   140008ebf:	(bad)  
   140008ec0:	outs   dx,BYTE PTR ds:[rsi]
   140008ec1:	fs ins BYTE PTR es:[rdi],dx
   140008ec3:	gs push rdi
   140008ec5:	add    BYTE PTR [rdx],cl
   140008ec7:	add    BYTE PTR [rax+0x65],cl
   140008eca:	(bad)  
   140008ecb:	jo     0x140008f20
   140008ecd:	gs je  0x140008f19
   140008ed0:	outs   dx,BYTE PTR ds:[rsi]
   140008ed1:	outs   dx,WORD PTR ds:[rsi]
   140008ed3:	jb     0x140008f42
   140008ed5:	(bad)  
   140008ed6:	je     0x140008f41
   140008ed8:	outs   dx,DWORD PTR ds:[rsi]
   140008ed9:	outs   dx,BYTE PTR ds:[rsi]
   140008eda:	add    BYTE PTR [rax],al
   140008edc:	sbb    al,BYTE PTR [rax]
   140008ede:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x7478654e
   140008ee6:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x41001500
   140008eef:	fs push 0x75
   140008ef2:	jae    0x140008f68
   140008ef4:	push   rsp
   140008ef5:	outs   dx,DWORD PTR ds:[rsi]
   140008ef6:	imul   esp,DWORD PTR [rbp+0x6e],0x50
   140008efa:	jb     0x140008f65
   140008efc:	jbe    0x140008f67
   140008efe:	ins    BYTE PTR es:[rdi],dx
   140008eff:	gs addr32 gs jae 0x140008f04
   140008f04:	add    DWORD PTR [rax],eax
   140008f06:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008f08:	outs   dx,BYTE PTR ds:[rsi]
   140008f09:	jbe    0x140008f70
   140008f0b:	jb     0x140008f81
   140008f0d:	push   rbx
   140008f0e:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   140008f16:	outs   dx,BYTE PTR ds:[rsi]
   140008f17:	addr32 push rbx
   140008f19:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x43000000
   140008f21:	outs   dx,DWORD PTR ds:[rsi]
   140008f22:	outs   dx,BYTE PTR ds:[rsi]
   140008f23:	jbe    0x140008f8a
   140008f25:	jb     0x140008f9b
   140008f27:	push   rbx
   140008f28:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008f2c:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140008f34:	imul   esi,DWORD PTR [rax+0x74],0x6f54726f
   140008f3b:	push   rbx
   140008f3c:	je     0x140008fb0
   140008f3e:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   140008f45:	jb     0x140008fb0
   140008f47:	je     0x140008fc2
   140008f49:	rex.R
   140008f4a:	gs jae 0x140008fb0
   140008f4d:	jb     0x140008fb8
   140008f4f:	jo     0x140008fc5
   140008f51:	outs   dx,DWORD PTR ds:[rsi]
   140008f52:	jb     0x140008fab
   140008f54:	add    BYTE PTR [rax],al
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	rex.XB ins BYTE PTR es:[rdi],dx
   140008f5a:	outs   dx,DWORD PTR ds:[rsi]
   140008f5b:	jae    0x140008fc2
   140008f5d:	rex.W (bad) 
   140008f5f:	outs   dx,BYTE PTR ds:[rsi]
   140008f60:	fs ins BYTE PTR es:[rdi],dx
   140008f62:	add    BYTE PTR gs:[rsi],dh
   140008f65:	add    BYTE PTR [rdi+0x65],al
   140008f68:	je     0x140008fbd
   140008f6a:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008f6e:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140008f76:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   140008f7d:	movsxd ebp,DWORD PTR [rax+rax*1+0x3]
   140008f81:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   140008f85:	(bad)  
   140008f86:	ins    BYTE PTR es:[rdi],dx
   140008f87:	rex.RX jb 0x140008fef
   140008f8a:	add    BYTE PTR gs:[rip+0x656c5300],ch        # 0x1a56ce291
   140008f91:	gs jo  0x140008f94
   140008f94:	lldt   WORD PTR [rbx+0x65]
   140008f98:	je     0x140008fef
   140008f9a:	outs   dx,BYTE PTR ds:[rsi]
   140008f9b:	push   0x6c646e61
   140008fa0:	gs fs rex.RB js 0x140009008
   140008fa5:	gs jo  0x14000901c
   140008fa8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008faf:	gs jb  0x140008fb2
   140008fb2:	adc    eax,DWORD PTR [rax]
   140008fb4:	rex.RXB
   140008fb5:	gs je  0x140009005
   140008fb8:	outs   dx,DWORD PTR ds:[rsi]
   140008fb9:	fs jne 0x140009028
   140008fbc:	gs rex.W (bad) 
   140008fbf:	outs   dx,BYTE PTR ds:[rsi]
   140008fc0:	fs ins BYTE PTR es:[rdi],dx
   140008fc2:	gs push rdi
   140008fc4:	add    BYTE PTR [rax],al
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	push   rcx
   140008fc9:	jne    0x140009030
   140008fcb:	jb     0x140009046
   140008fcd:	push   rax
   140008fce:	gs jb  0x140009037
   140008fd1:	outs   dx,DWORD PTR ds:[rsi]
   140008fd2:	jb     0x140009041
   140008fd4:	(bad)  
   140008fd5:	outs   dx,BYTE PTR ds:[rsi]
   140008fd6:	movsxd esp,DWORD PTR [rbp+0x43]
   140008fd9:	outs   dx,DWORD PTR ds:[rsi]
   140008fda:	jne    0x14000904a
   140008fdc:	je     0x140009043
   140008fde:	jb     0x140008fe0
   140008fe0:	or     eax,0x74654700
   140008fe5:	rex.XB jne 0x14000905a
   140008fe8:	jb     0x14000904f
   140008fea:	outs   dx,BYTE PTR ds:[rsi]
   140008feb:	je     0x14000903d
   140008fed:	jb     0x14000905e
   140008fef:	movsxd esp,DWORD PTR [rbp+0x73]
   140008ff2:	jae    0x14000903d
   140008ff4:	add    BYTE PTR fs:[rcx],dl
   140008ff7:	add    BYTE PTR [rdi+0x65],al
   140008ffa:	je     0x14000903f
   140008ffc:	jne    0x140009070
   140008ffe:	jb     0x140009065
   140009000:	outs   dx,BYTE PTR ds:[rsi]
   140009001:	je     0x140009057
   140009003:	push   0x64616572
   140009008:	rex.WB
   140009009:	add    BYTE PTR fs:[rax],al
   14000900c:	adc    al,0x0
   14000900e:	rex.RXB
   14000900f:	gs je  0x140009065
   140009012:	jns    0x140009087
   140009014:	je     0x14000907b
   140009016:	ins    DWORD PTR es:[rdi],dx
   140009017:	push   rsp
   140009018:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000901f:	ins    BYTE PTR es:[rdi],dx
   140009020:	gs push rsp
   140009022:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140009029:	gs je  0x140009080
   14000902c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009033:	je     0x140009035
   140009035:	add    BYTE PTR [rcx],dl
   140009037:	add    BYTE PTR [rbp+0x6e],dl
   14000903a:	push   0x6c646e61
   14000903f:	gs fs rex.RB js 0x1400090a7
   140009044:	gs jo  0x1400090bb
   140009047:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000904e:	gs jb  0x140009051
   140009051:	add    BYTE PTR [rbx+0x0],cl
   140009054:	push   rsp
   140009055:	gs jb  0x1400090c5
   140009058:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000905f:	outs   dx,DWORD PTR ds:[rsi]
   140009060:	movsxd esp,DWORD PTR [rbp+0x73]
   140009063:	jae    0x140009065
   140009065:	add    BYTE PTR [rcx+0x70],ah
   140009068:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e03df
   140009072:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009076:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   14000907e:	sub    eax,0x322d316c
   140009083:	sub    eax,0x6c642e30
   140009088:	ins    BYTE PTR es:[rdi],dx
   140009089:	add    BYTE PTR [rcx+0x70],ah
   14000908c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0403
   140009096:	outs   dx,DWORD PTR ds:[rsi]
   140009097:	jb     0x1400090fe
   140009099:	sub    eax,0x636f7270
   14000909e:	gs jae 0x140009114
   1400090a1:	je     0x14000910b
   1400090a3:	jb     0x14000910a
   1400090a5:	(bad)  
   1400090a6:	fs jae 0x1400090d6
   1400090a9:	ins    BYTE PTR es:[rdi],dx
   1400090aa:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32bde1
   1400090b0:	fs ins BYTE PTR es:[rdi],dx
   1400090b2:	ins    BYTE PTR es:[rdi],dx
   1400090b3:	add    BYTE PTR [rcx+0x70],ah
   1400090b6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e042d
   1400090c0:	outs   dx,DWORD PTR ds:[rsi]
   1400090c1:	jb     0x140009128
   1400090c3:	sub    eax,0x656c6966
   1400090c8:	sub    eax,0x322d316c
   1400090cd:	sub    eax,0x6c642e31
   1400090d2:	ins    BYTE PTR es:[rdi],dx
   1400090d3:	add    BYTE PTR [rcx+0x70],ah
   1400090d6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e044d
   1400090e0:	outs   dx,DWORD PTR ds:[rsi]
   1400090e1:	jb     0x140009148
   1400090e3:	sub    eax,0x69727473
   1400090e8:	outs   dx,BYTE PTR ds:[rsi]
   1400090e9:	addr32 sub eax,0x312d316c
   1400090ef:	sub    eax,0x6c642e30
   1400090f4:	ins    BYTE PTR es:[rdi],dx
   1400090f5:	add    BYTE PTR [rcx+0x70],ah
   1400090f8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e046f
   140009102:	outs   dx,DWORD PTR ds:[rsi]
   140009103:	jb     0x14000916a
   140009105:	sub    eax,0x736e6f63
   14000910a:	outs   dx,DWORD PTR ds:[rsi]
   14000910b:	ins    BYTE PTR es:[rdi],dx
   14000910c:	gs sub eax,0x312d316c
   140009112:	sub    eax,0x6c642e30
   140009117:	ins    BYTE PTR es:[rdi],dx
   140009118:	add    BYTE PTR [rax],al
   14000911a:	(bad)  
   14000911b:	jo     0x140009186
   14000911d:	sub    eax,0x772d736d
   140009122:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009129:	sub    eax,0x61636f6c
   14000912e:	ins    BYTE PTR es:[rdi],dx
   14000912f:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140009136:	sub    eax,0x322d316c
   14000913b:	sub    eax,0x6c642e31
   140009140:	ins    BYTE PTR es:[rdi],dx
   140009141:	add    BYTE PTR [rcx+0x70],ah
   140009144:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e04bb
   14000914e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009152:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x6c646473
   14000915a:	sub    eax,0x312d316c
   14000915f:	sub    eax,0x6c642e30
   140009164:	ins    BYTE PTR es:[rdi],dx
   140009165:	add    BYTE PTR [rcx+0x70],ah
   140009168:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e04df
   140009172:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009176:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x6c61736c
   14000917e:	outs   dx,DWORD PTR ds:[rsi]
   14000917f:	outs   dx,DWORD PTR ds:[rsi]
   140009180:	imul   esi,DWORD PTR [rbp+0x70],0x2d
   140009184:	ins    BYTE PTR es:[rdi],dx
   140009185:	xor    ch,BYTE PTR [rip+0x2e312d31]        # 0x16e31bebc
   14000918b:	fs ins BYTE PTR es:[rdi],dx
   14000918d:	ins    BYTE PTR es:[rdi],dx
   14000918e:	add    BYTE PTR [rax],al
   140009190:	(bad)  
   140009191:	jo     0x1400091fc
   140009193:	sub    eax,0x772d736d
   140009198:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000919f:	sub    eax,0x636f7270
   1400091a4:	gs jae 0x14000921a
   1400091a7:	outs   dx,BYTE PTR gs:[rsi]
   1400091a9:	jbe    0x140009214
   1400091ab:	jb     0x14000921c
   1400091ad:	outs   dx,BYTE PTR ds:[rsi]
   1400091ae:	ins    DWORD PTR es:[rdi],dx
   1400091af:	outs   dx,BYTE PTR gs:[rsi]
   1400091b1:	je     0x1400091e0
   1400091b3:	ins    BYTE PTR es:[rdi],dx
   1400091b4:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30beec
   1400091ba:	fs ins BYTE PTR es:[rdi],dx
   1400091bc:	ins    BYTE PTR es:[rdi],dx
   1400091bd:	add    BYTE PTR [rcx+0x70],ah
   1400091c0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0537
   1400091ca:	outs   dx,DWORD PTR ds:[rsi]
   1400091cb:	jb     0x140009232
   1400091cd:	sub    eax,0x6f727265
   1400091d2:	jb     0x14000923c
   1400091d4:	(bad)  
   1400091d5:	outs   dx,BYTE PTR ds:[rsi]
   1400091d6:	fs ins BYTE PTR es:[rdi],dx
   1400091d8:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   1400091df:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c016
   1400091e5:	ins    BYTE PTR es:[rdi],dx
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	(bad)  
   1400091e9:	jo     0x140009254
   1400091eb:	sub    eax,0x772d736d
   1400091f0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400091f7:	sub    eax,0x70616568
   1400091fc:	sub    eax,0x312d326c
   140009201:	sub    eax,0x6c642e30
   140009206:	ins    BYTE PTR es:[rdi],dx
   140009207:	add    BYTE PTR [rcx+0x70],ah
   14000920a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0581
   140009214:	outs   dx,DWORD PTR ds:[rsi]
   140009215:	jb     0x14000927c
   140009217:	sub    eax,0x70616568
   14000921c:	sub    eax,0x322d316c
   140009221:	sub    eax,0x6c642e30
   140009226:	ins    BYTE PTR es:[rdi],dx
   140009227:	add    BYTE PTR [rcx+0x70],ah
   14000922a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e05a1
   140009234:	outs   dx,DWORD PTR ds:[rsi]
   140009235:	jb     0x14000929c
   140009237:	sub    eax,0x646e6168
   14000923c:	ins    BYTE PTR es:[rdi],dx
   14000923d:	gs sub eax,0x312d316c
   140009243:	sub    eax,0x6c642e30
   140009248:	ins    BYTE PTR es:[rdi],dx
   140009249:	add    BYTE PTR [rcx+0x70],ah
   14000924c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e05c3
   140009256:	outs   dx,DWORD PTR ds:[rsi]
   140009257:	jb     0x1400092be
   140009259:	sub    eax,0x636e7973
   14000925e:	push   0x2d316c2d
   140009263:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64c099
   140009269:	ins    BYTE PTR es:[rdi],dx
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	(bad)  
   14000926d:	jo     0x1400092d8
   14000926f:	sub    eax,0x772d736d
   140009274:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000927b:	sub    eax,0x7262696c
   140009280:	(bad)  
   140009281:	jb     0x1400092fc
   140009283:	ins    BYTE PTR es:[rdi],dx
   140009284:	outs   dx,DWORD PTR ds:[rsi]
   140009285:	(bad)  
   140009286:	fs gs jb 0x1400092b7
   14000928a:	ins    BYTE PTR es:[rdi],dx
   14000928b:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30bfc3
   140009291:	fs ins BYTE PTR es:[rdi],dx
   140009293:	ins    BYTE PTR es:[rdi],dx
   140009294:	add    BYTE PTR [rax],al
   140009296:	(bad)  
   140009297:	jo     0x140009302
   140009299:	sub    eax,0x772d736d
   14000929e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400092a5:	sub    eax,0x666f7270
   1400092aa:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   1400092b2:	sub    eax,0x6c642e30
   1400092b7:	ins    BYTE PTR es:[rdi],dx
   1400092b8:	add    BYTE PTR [rax],al
   1400092ba:	(bad)  
   1400092bb:	jo     0x140009326
   1400092bd:	sub    eax,0x772d736d
   1400092c2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400092c9:	sub    eax,0x69737973
   1400092ce:	outs   dx,BYTE PTR ds:[rsi]
   1400092cf:	outs   dx,WORD PTR ds:[rsi]
   1400092d1:	sub    eax,0x322d316c
   1400092d6:	sub    eax,0x6c642e31
   1400092db:	ins    BYTE PTR es:[rdi],dx
   1400092dc:	add    BYTE PTR [rax],al
   1400092de:	add    al,BYTE PTR [rax]
   1400092e0:	rex.RXB
   1400092e1:	gs je  0x140009337
   1400092e4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400092e8:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   1400092f0:	add    eax,0x74655300
   1400092f5:	push   rbx
   1400092f6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400092fa:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   140009302:	(bad)  
   140009303:	jo     0x14000936e
   140009305:	sub    eax,0x772d736d
   14000930a:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   140009311:	jb     0x14000937c
   140009313:	je     0x14000938e
   140009315:	sub    eax,0x766f7270
   14000931a:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   140009322:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64c158
   140009328:	ins    BYTE PTR es:[rdi],dx
   140009329:	add    BYTE PTR [rip+0x636f4c00],cl        # 0x1a36fdf2f
   14000932f:	(bad)  
   140009330:	ins    BYTE PTR es:[rdi],dx
   140009331:	push   rbx
   140009332:	imul   edi,DWORD PTR [rdx+0x65],0x69706100
   140009339:	sub    eax,0x772d736d
   14000933e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009345:	sub    eax,0x70616568
   14000934a:	sub    eax,0x6f73626f
   14000934f:	ins    BYTE PTR es:[rdi],dx
   140009350:	gs je  0x1400093b8
   140009353:	sub    eax,0x312d316c
   140009358:	sub    eax,0x6c642e30
   14000935d:	ins    BYTE PTR es:[rdi],dx
   14000935e:	add    BYTE PTR [rax],al
   140009360:	loope  0x140009363
   140009362:	pop    rdi
   140009363:	ins    BYTE PTR es:[rdi],dx
   140009364:	outs   dx,DWORD PTR ds:[rsi]
   140009365:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009368:	pop    rdi
   140009369:	jne    0x1400093d9
   14000936b:	ja     0x1400093d6
   14000936d:	outs   dx,BYTE PTR ds:[rsi]
   14000936e:	add    BYTE PTR fs:[rdx+0x6d656d04],dl
   140009375:	movsxd esi,DWORD PTR [rax+0x79]
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    bh,bh
   14000a021:	(bad)  
   14000a022:	(bad)  
   14000a023:	inc    DWORD PTR [rax]
	...
   14000a02d:	add    BYTE PTR [rax],al
   14000a02f:	add    BYTE PTR [rsp+rsi*2+0x14000],dh
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	add    BYTE PTR [rax],al
   14000a03a:	add    BYTE PTR [rcx],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	mov    esp,0x1400074
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    BYTE PTR [rax],al
   14000a049:	add    BYTE PTR [rax],al
   14000a04b:	add    al,BYTE PTR [rax]
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    ah,al
   14000a051:	je     0x14000a053
   14000a053:	rex add DWORD PTR [rax],eax
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	add    BYTE PTR [rax],al
   14000a05a:	add    BYTE PTR [rax+0x0],al
   14000a060:	int3   
   14000a061:	je     0x14000a063
   14000a063:	rex add DWORD PTR [rax],eax
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	add    BYTE PTR [rax],al
   14000a06a:	add    BYTE PTR [rax+0x0],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    ah,dl
   14000a071:	je     0x14000a073
   14000a073:	rex add DWORD PTR [rax],eax
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	add    BYTE PTR [rax],al
   14000a07a:	add    BYTE PTR [rax],ah
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	fdiv   QWORD PTR [rax+rax*1+0x40]
   14000a084:	add    DWORD PTR [rax],eax
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	add    BYTE PTR [rax],al
   14000a08a:	add    BYTE PTR [rax],dl
   14000a08c:	add    BYTE PTR [rax],al
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	in     al,0x74
   14000a092:	add    BYTE PTR [rax+0x1],al
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    BYTE PTR [rcx],al
   14000a099:	add    BYTE PTR [rax],al
   14000a09b:	add    BYTE PTR [rax],al
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    al,dh
   14000a0a1:	je     0x14000a0a3
   14000a0a3:	rex add DWORD PTR [rax],eax
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	add    BYTE PTR [rax],al
   14000a0aa:	add    al,0x0
   14000a0ac:	add    BYTE PTR [rax],al
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	cld    
   14000a0b1:	je     0x14000a0b3
   14000a0b3:	rex add DWORD PTR [rax],eax
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	add    al,BYTE PTR [rax]
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	add    al,0x75
   14000a0c2:	add    BYTE PTR [rax+0x1],al
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    BYTE PTR [rax+rax*1],al
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	adc    BYTE PTR [rbp+0x0],dh
   14000a0d3:	rex add DWORD PTR [rax],eax
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	or     BYTE PTR [rax],al
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	sbb    BYTE PTR [rbp+0x0],dh
   14000a0e3:	rex add DWORD PTR [rax],eax
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	adc    BYTE PTR [rax],al
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    BYTE PTR [rax],al
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	and    BYTE PTR [rbp+0x0],dh
   14000a0f3:	rex add DWORD PTR [rax],eax
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	and    BYTE PTR [rax],al
   14000a0fa:	add    BYTE PTR [rax],al
   14000a0fc:	add    BYTE PTR [rax],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	and    al,0x75
   14000a102:	add    BYTE PTR [rax+0x1],al
   14000a105:	add    BYTE PTR [rax],al
   14000a107:	add    BYTE PTR [rax+0x0],al
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	add    BYTE PTR [rax],al
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	sub    al,0x75
   14000a112:	add    BYTE PTR [rax+0x1],al
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    BYTE PTR [rax+0x0],al
   14000a11d:	add    BYTE PTR [rax],al
   14000a11f:	add    BYTE PTR [rsi*2+0x14000],dh
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	add    BYTE PTR [rcx],al
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	add    BYTE PTR [rax],al
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	cmp    al,0x75
   14000a132:	add    BYTE PTR [rax+0x1],al
   14000a135:	add    BYTE PTR [rax],al
   14000a137:	add    BYTE PTR [rax],al
   14000a139:	add    BYTE PTR [rcx],al
   14000a13b:	add    BYTE PTR [rax],al
   14000a13d:	add    BYTE PTR [rax],al
   14000a13f:	add    BYTE PTR [rbp+rsi*2+0x0],al
   14000a143:	rex add DWORD PTR [rax],eax
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	add    BYTE PTR [rax],al
   14000a14a:	add    al,BYTE PTR [rax]
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	rex.WR jne 0x14000a153
   14000a153:	rex add DWORD PTR [rax],eax
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	add    BYTE PTR [rax],al
   14000a15a:	or     BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	push   rsp
   14000a161:	jne    0x14000a163
   14000a163:	rex add DWORD PTR [rax],eax
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	add    BYTE PTR [rax],al
   14000a16a:	adc    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax],al
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	cwde   
   14000a171:	je     0x14000a173
   14000a173:	rex add DWORD PTR [rax],eax
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	inc    DWORD PTR [rcx]
   14000a17a:	(bad)  
   14000a17b:	add    BYTE PTR [rax],al
   14000a17d:	add    BYTE PTR [rax],al
   14000a17f:	add    BYTE PTR [rax+0x1400074],dh
   14000a185:	add    BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rax],al
   14000a189:	add    BYTE PTR [rcx],dl
   14000a18b:	add    BYTE PTR [rax],al
   14000a18d:	add    BYTE PTR [rax],al
   14000a18f:	add    BYTE PTR [rsp+rsi*2+0x14000],bl
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	mov    edi,0x1301
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rax+0x1400074],ah
   14000a1a5:	add    BYTE PTR [rax],al
   14000a1a7:	add    BYTE PTR [rcx+0x1200],ch
   14000a1ad:	add    BYTE PTR [rax],al
   14000a1af:	add    BYTE PTR [rax+0x1400074],ch
   14000a1b5:	add    BYTE PTR [rax],al
   14000a1b7:	add    BYTE PTR [rcx+0x1200],cl
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    BYTE PTR [rsp+rsi*2+0x14000],ch
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	(bad)  
   14000a1c9:	add    DWORD PTR [rax],edx
	...
   14000a1df:	add    BYTE PTR [rax+0x1400074],bl
   14000a1e5:	add    BYTE PTR [rax],al
   14000a1e7:	add    bh,bh
   14000a1e9:	add    DWORD PTR [rdi],ebx
   14000a1eb:	add    BYTE PTR [rax],al
   14000a1ed:	add    BYTE PTR [rax],al
   14000a1ef:	add    BYTE PTR [rsp+rsi*2+0x14000],bl
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	mov    edi,0x1301
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rax+0x1400074],ah
   14000a205:	add    BYTE PTR [rax],al
   14000a207:	add    BYTE PTR [rcx+0x1200],ch
   14000a20d:	add    BYTE PTR [rax],al
   14000a20f:	add    BYTE PTR [rax+0x1400074],ch
   14000a215:	add    BYTE PTR [rax],al
   14000a217:	add    BYTE PTR [rcx+0x1200],cl
   14000a21d:	add    BYTE PTR [rax],al
   14000a21f:	add    BYTE PTR [rsp+rsi*2+0x14000],ch
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	(bad)  
   14000a229:	add    DWORD PTR [rax],edx
   14000a22b:	add    BYTE PTR [rax],al
   14000a22d:	add    BYTE PTR [rax],al
   14000a22f:	add    BYTE PTR [rax+0x1400074],dh
   14000a235:	add    BYTE PTR [rax],al
   14000a237:	add    BYTE PTR [rax],al
   14000a239:	add    BYTE PTR [rcx],dl
	...
   14000a24f:	add    BYTE PTR [rax],al
   14000a251:	add    BYTE PTR [rcx],al
   14000a253:	add    BYTE PTR [rax],al
   14000a255:	add    BYTE PTR [rax],al
   14000a257:	add    BYTE PTR [rax+0x1400075],dh
   14000a25d:	add    BYTE PTR [rax],al
   14000a25f:	add    BYTE PTR [rsi*2+0x14000],bh
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	add    BYTE PTR [rax],al
   14000a26a:	add    al,BYTE PTR [rax]
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	shl    BYTE PTR [rbp+0x0],0x40
   14000a274:	add    DWORD PTR [rax],eax
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	rex.R jne 0x14000a27b
   14000a27b:	rex add DWORD PTR [rax],eax
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	add    BYTE PTR [rax],al
   14000a282:	add    al,0x0
   14000a284:	add    BYTE PTR [rax],al
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	loopne 0x14000a2ff
   14000a28a:	add    BYTE PTR [rax+0x1],al
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    al,dh
   14000a291:	je     0x14000a293
   14000a293:	rex add DWORD PTR [rax],eax
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	add    BYTE PTR [rax],al
   14000a29a:	or     BYTE PTR [rax],al
   14000a29c:	add    BYTE PTR [rax],al
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	clc    
   14000a2a1:	jne    0x14000a2a3
   14000a2a3:	rex add DWORD PTR [rax],eax
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	rex.WR jne 0x14000a2ab
   14000a2ab:	rex add DWORD PTR [rax],eax
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	add    BYTE PTR [rax],al
   14000a2b2:	adc    BYTE PTR [rax],al
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	adc    BYTE PTR [rsi+0x0],dh
   14000a2bb:	rex add DWORD PTR [rax],eax
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	push   rsp
   14000a2c1:	jne    0x14000a2c3
   14000a2c3:	rex add DWORD PTR [rax],eax
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	add    BYTE PTR [rax],al
   14000a2ca:	add    BYTE PTR [rcx],al
   14000a2cc:	add    BYTE PTR [rax],al
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	sub    BYTE PTR [rsi+0x0],dh
   14000a2d3:	rex add DWORD PTR [rax],eax
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	mov    ah,0x74
   14000a2da:	add    BYTE PTR [rax+0x1],al
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rax],al
   14000a2e1:	add    BYTE PTR [rax],al
   14000a2e3:	add    al,BYTE PTR [rax]
   14000a2e5:	add    BYTE PTR [rax],al
   14000a2e7:	add    BYTE PTR [rax+0x76],bl
   14000a2ea:	add    BYTE PTR [rax+0x1],al
   14000a2ed:	add    BYTE PTR [rax],al
   14000a2ef:	add    BYTE PTR [rsp+rsi*2+0x14000],bh
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	add    BYTE PTR [rax],al
   14000a2fa:	add    BYTE PTR [rax+0x0],al
   14000a300:	js     0x14000a378
   14000a302:	add    BYTE PTR [rax+0x1],al
   14000a305:	add    BYTE PTR [rax],al
   14000a307:	add    ah,al
   14000a309:	je     0x14000a30b
   14000a30b:	rex add DWORD PTR [rax],eax
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	add    BYTE PTR [rax],al
   14000a312:	add    BYTE PTR [rax+0x0],al
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    BYTE PTR [rax+0x1400076],bl
   14000a31d:	add    BYTE PTR [rax],al
   14000a31f:	add    ah,cl
   14000a321:	je     0x14000a323
   14000a323:	rex add DWORD PTR [rax],eax
   14000a326:	add    BYTE PTR [rax],al
   14000a328:	add    BYTE PTR [rax],al
   14000a32a:	add    BYTE PTR [rax],ah
   14000a32c:	add    BYTE PTR [rax],al
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	mov    eax,0x1400076
   14000a335:	add    BYTE PTR [rax],al
   14000a337:	add    ah,dl
   14000a339:	je     0x14000a33b
   14000a33b:	rex add DWORD PTR [rax],eax
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	add    BYTE PTR [rax],al
   14000a342:	add    BYTE PTR [rax],dl
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	fdiv   DWORD PTR [rsi+0x0]
   14000a34b:	rex add DWORD PTR [rax],eax
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	fdiv   QWORD PTR [rax+rax*1+0x40]
   14000a354:	add    DWORD PTR [rax],eax
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	add    DWORD PTR [rax],eax
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	lock jbe 0x14000a363
   14000a363:	rex add DWORD PTR [rax],eax
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	in     al,0x74
   14000a36a:	add    BYTE PTR [rax+0x1],al
   14000a36d:	add    BYTE PTR [rax],al
   14000a36f:	add    BYTE PTR [rdx],al
   14000a371:	add    BYTE PTR [rax],al
   14000a373:	add    BYTE PTR [rax],al
   14000a375:	add    BYTE PTR [rax],al
   14000a377:	add    BYTE PTR [rax],bh
   14000a379:	ja     0x14000a37b
   14000a37b:	rex add DWORD PTR [rax],eax
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	cld    
   14000a381:	je     0x14000a383
   14000a383:	rex add DWORD PTR [rax],eax
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	add    al,0x0
   14000a38a:	add    BYTE PTR [rax],al
   14000a38c:	add    BYTE PTR [rax],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	xor    BYTE PTR [rdi+0x0],0x40
   14000a394:	add    DWORD PTR [rax],eax
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	add    al,0x75
   14000a39a:	add    BYTE PTR [rax+0x1],al
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    BYTE PTR [rax],cl
   14000a3a1:	add    BYTE PTR [rax],al
   14000a3a3:	add    BYTE PTR [rax],al
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    al,dl
   14000a3a9:	ja     0x14000a3ab
   14000a3ab:	rex add DWORD PTR [rax],eax
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	adc    BYTE PTR [rbp+0x0],dh
   14000a3b3:	rex add DWORD PTR [rax],eax
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	adc    BYTE PTR [rax],al
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    BYTE PTR [rax],al
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	lock ja 0x14000a3c3
   14000a3c3:	rex add DWORD PTR [rax],eax
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	sbb    BYTE PTR [rbp+0x0],dh
   14000a3cb:	rex add DWORD PTR [rax],eax
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	and    BYTE PTR [rax],al
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	add    BYTE PTR [rax],al
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	adc    BYTE PTR [rax+0x0],bh
   14000a3db:	rex add DWORD PTR [rax],eax
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	and    BYTE PTR [rbp+0x0],dh
   14000a3e3:	rex add DWORD PTR [rax],eax
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	add    BYTE PTR [rax],al
   14000a3eb:	add    BYTE PTR [rax],al
   14000a3ed:	add    BYTE PTR [rax],al
   14000a3ef:	add    BYTE PTR [rax+0x78],cl
   14000a3f2:	add    BYTE PTR [rax+0x1],al
   14000a3f5:	add    BYTE PTR [rax],al
   14000a3f7:	add    BYTE PTR [rsi*2+0x14000],ah
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	add    BYTE PTR [rax],0x0
   14000a403:	add    BYTE PTR [rax],al
   14000a405:	add    BYTE PTR [rax],al
   14000a407:	add    BYTE PTR [rax+0x78],dh
   14000a40a:	add    BYTE PTR [rax+0x1],al
   14000a40d:	add    BYTE PTR [rax],al
   14000a40f:	add    BYTE PTR [rsi*2+0x14000],ch
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	add    BYTE PTR [rcx],al
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	add    BYTE PTR [rax],al
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	movabs al,ds:0x3400000001400078
   14000a429:	jne    0x14000a42b
   14000a42b:	rex add DWORD PTR [rax],eax
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	add    DWORD PTR [rax],eax
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	add    BYTE PTR [rax],al
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	sar    BYTE PTR [rax+0x0],1
   14000a43b:	rex add DWORD PTR [rax],eax
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	call   0x14140a4bd
   14000a445:	add    BYTE PTR [rax],al
   14000a447:	add    BYTE PTR [rdx],al
   14000a449:	add    BYTE PTR [rax],al
   14000a44b:	add    BYTE PTR [rax],al
   14000a44d:	add    BYTE PTR [rax],al
   14000a44f:	add    al,dh
   14000a451:	js     0x14000a453
   14000a453:	rex add DWORD PTR [rax],eax
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	or     BYTE PTR [rcx+0x0],bh
   14000a45b:	rex add DWORD PTR [rax],eax
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	add    al,0x0
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	add    BYTE PTR [rax],al
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	adc    BYTE PTR [rcx+0x0],bh
   14000a46b:	rex add DWORD PTR [rax],eax
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	sub    al,0x79
   14000a472:	add    BYTE PTR [rax+0x1],al
	...
   14000a47d:	add    BYTE PTR [rax],al
   14000a47f:	add    BYTE PTR [rax],bh
   14000a481:	jns    0x14000a483
   14000a483:	rex add DWORD PTR [rax],eax
	...
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	pop    rax
   14000a491:	jne    0x14000a493
   14000a493:	rex add DWORD PTR [rax],eax
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	add    DWORD PTR [rax],eax
   14000a49a:	add    BYTE PTR [rax],al
   14000a49c:	add    BYTE PTR [rax],al
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	push   0x1400075
   14000a4a5:	add    BYTE PTR [rax],al
   14000a4a7:	add    BYTE PTR [rdx],al
   14000a4a9:	add    BYTE PTR [rax],al
   14000a4ab:	add    BYTE PTR [rax],al
   14000a4ad:	add    BYTE PTR [rax],al
   14000a4af:	add    BYTE PTR [rax+0x75],bh
   14000a4b2:	add    BYTE PTR [rax+0x1],al
   14000a4b5:	add    BYTE PTR [rax],al
   14000a4b7:	add    BYTE PTR [rax+rax*1],al
   14000a4ba:	add    BYTE PTR [rax],al
   14000a4bc:	add    BYTE PTR [rax],al
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	mov    BYTE PTR [rbp+0x0],dh
   14000a4c3:	rex add DWORD PTR [rax],eax
   14000a4c6:	add    BYTE PTR [rax],al
   14000a4c8:	or     BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	loop   0x14000b016
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	test   al,0x7e
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	call   0x19700b021
   14000b011:	adc    DWORD PTR [rax],eax
   14000b013:	add    BYTE PTR [rsi+rdi*2+0x11600000],bh
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	pop    rcx
   14000b01d:	adc    al,BYTE PTR [rax]
   14000b01f:	add    al,dl
   14000b021:	jle    0x14000b023
   14000b023:	add    BYTE PTR [rax+0x12],ah
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	sbb    al,0x14
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	loopne 0x14000b0ac
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	and    al,0x14
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	mov    dh,0x14
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	cld    
   14000b039:	jle    0x14000b03b
   14000b03b:	add    BYTE PTR [rsp+rdx*1+0x169c0000],bh
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	sbb    BYTE PTR [rdi+0x0],bh
   14000b047:	add    BYTE PTR [rsi+rdx*1+0x17720000],ah
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	cld    
   14000b051:	jle    0x14000b053
   14000b053:	add    BYTE PTR [rax+0x17],bh
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	add    DWORD PTR [rcx],ebx
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	xor    al,0x7f
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	or     BYTE PTR [rcx],bl
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	test   eax,0x3400001a
   14000b069:	jg     0x14000b06b
   14000b06b:	add    BYTE PTR [rax+0x6e00001a],dh
   14000b071:	sbb    eax,DWORD PTR [rax]
   14000b073:	add    BYTE PTR [rdi+rdi*2+0x0],cl
   14000b077:	add    BYTE PTR [rbx+rbx*1+0x0],dh
   14000b07b:	add    BYTE PTR [rip+0x6400001c],cl        # 0x1a400b09d
   14000b081:	jg     0x14000b083
   14000b083:	add    BYTE PTR [rsp+rbx*1],dl
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	cmp    eax,0x7c00001d
   14000b08d:	jg     0x14000b08f
   14000b08f:	add    BYTE PTR [rbp+rbx*1+0x0],al
   14000b093:	add    BYTE PTR [rbp-0x63ffffe3],dh
   14000b099:	jg     0x14000b09b
   14000b09b:	add    BYTE PTR [rbp+rbx*1+0x1e680000],bh
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	test   al,0x7f
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	jo     0x14000b0c8
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	and    eax,0xb400001f
   14000b0b1:	jg     0x14000b0b3
   14000b0b3:	add    BYTE PTR [rdi+rbx*1],ch
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	(bad)  
   14000b0b9:	and    BYTE PTR [rax],al
   14000b0bb:	add    ah,al
   14000b0bd:	jg     0x14000b0bf
   14000b0bf:	add    ah,cl
   14000b0c1:	and    BYTE PTR [rax],al
   14000b0c3:	add    cl,ch
   14000b0c5:	and    al,BYTE PTR [rax]
   14000b0c7:	add    al,ah
   14000b0c9:	jg     0x14000b0cb
   14000b0cb:	add    al,dh
   14000b0cd:	and    al,BYTE PTR [rax]
   14000b0cf:	add    BYTE PTR [rdi],dh
   14000b0d1:	and    eax,0x80140000
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	rex and eax,0x26d60000
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	rex add BYTE PTR [rax],0x0
   14000b0e4:	fsub   QWORD PTR [rsi]
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	add    DWORD PTR [rax],ebp
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	cld    
   14000b0ed:	jle    0x14000b0ef
   14000b0ef:	add    BYTE PTR [rax],cl
   14000b0f1:	sub    BYTE PTR [rax],al
   14000b0f3:	add    cl,bl
   14000b0f5:	sub    eax,DWORD PTR [rax]
   14000b0f7:	add    BYTE PTR [rax+rax*4+0x2be00000],bl
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	out    dx,eax
   14000b101:	sub    al,0x0
   14000b103:	add    BYTE PTR [rax-0x7ffff80],bh
   14000b109:	sub    al,0x0
   14000b10b:	add    BYTE PTR [rax+0x33],al
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	(bad)  
   14000b111:	add    BYTE PTR [rax],0x0
   14000b114:	xor    rax,QWORD PTR [rax]
   14000b117:	add    cl,dh
   14000b119:	xor    eax,DWORD PTR [rax]
   14000b11b:	add    ah,bl
   14000b11d:	add    BYTE PTR [rax],0x0
   14000b120:	add    BYTE PTR [rax+rax*1],dh
   14000b123:	add    BYTE PTR [rax],ch
   14000b125:	add    BYTE PTR ss:[rax],al
   14000b128:	lock add BYTE PTR [rax],0x0
   14000b12c:	xor    BYTE PTR [rsi],dh
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	jl     0x14000b169
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	or     al,0x81
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	test   BYTE PTR [rdi],dh
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	add    BYTE PTR gs:[rax],al
   14000b140:	and    BYTE PTR [rcx+0x406c0000],al
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	rex.WRXB
   14000b149:	rex.X add BYTE PTR [rax],al
   14000b14c:	push   0x60000082
   14000b151:	rex.X add BYTE PTR [rax],al
   14000b154:	cmovae eax,DWORD PTR [rax]
   14000b157:	add    BYTE PTR [rdx+rax*4+0x43200000],al
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	xor    eax,DWORD PTR [rax+rax*1+0x0]
   14000b164:	cld    
   14000b165:	jle    0x14000b167
   14000b167:	add    BYTE PTR [rax+0x44],al
   14000b16a:	add    BYTE PTR [rax],al
   14000b16c:	xchg   esi,eax
   14000b16d:	add    BYTE PTR [r8],r8b
   14000b170:	cwde   
   14000b171:	(bad)  
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	movabs al,ds:0xac00004676000045
   14000b17d:	(bad)  
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	add    BYTE PTR [rsi+0x0],0x0
   14000b184:	in     al,dx
   14000b185:	rex.WB add BYTE PTR [r8],al
   14000b188:	rol    BYTE PTR [rdx+0x49f40000],0x0
   14000b18f:	add    BYTE PTR [rax-0xfffffb4],bh
   14000b195:	(bad)  
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	ror    BYTE PTR [rax+rax*1+0x0],0x69
   14000b19d:	pop    rdx
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	or     al,0x83
   14000b1a2:	add    BYTE PTR [rax],al
   14000b1a4:	jo     0x14000b200
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	(bad)  
   14000b1a9:	pop    rbx
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	in     al,0x83
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	push   rax
   14000b1b1:	pop    rbx
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	cdq    
   14000b1b5:	pop    rbx
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	xor    al,0x83
   14000b1ba:	add    BYTE PTR [rax],al
   14000b1bc:	movabs al,ds:0x3c00005d7200005b
   14000b1c5:	add    DWORD PTR [rax],0x0
   14000b1c8:	sbb    BYTE PTR [rbp+0x0],0x0
   14000b1cc:	xchg   edx,eax
   14000b1cd:	pop    rbp
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	in     al,0x83
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	mov    al,0x5d
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	(bad)  
   14000b1d9:	pop    rbp
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	jo     0x14000b161
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	loopne 0x14000b23f
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	sbb    DWORD PTR [rsi+0x0],ebx
   14000b1e7:	add    ah,ah
   14000b1e9:	add    DWORD PTR [rax],0x0
   14000b1ec:	and    BYTE PTR [rsi+0x0],bl
   14000b1ef:	add    BYTE PTR [rax],bh
   14000b1f1:	pop    rsi
   14000b1f2:	add    BYTE PTR [rax],al
   14000b1f4:	in     al,0x83
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	rex.WR pop rsi
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	movabs al,ds:0xa80000837400005e
   14000b205:	pop    rsi
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	in     eax,dx
   14000b209:	pop    rsi
   14000b20a:	add    BYTE PTR [rax],al
   14000b20c:	fadd   QWORD PTR [rbx+0x5f600000]
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	lods   eax,DWORD PTR ds:[rsi]
   14000b215:	pop    rdi
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	xchg   esp,eax
   14000b219:	add    DWORD PTR [rax],0x0
   14000b21c:	hlt    
   14000b21d:	pop    rdi
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	(bad)  
   14000b221:	(bad)  
   14000b222:	add    BYTE PTR [rax],al
   14000b224:	rol    BYTE PTR [rbx+0x60fc0000],0x0
   14000b22b:	add    BYTE PTR [rax],dh
   14000b22d:	(bad)  
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	fadd   QWORD PTR [rbx+0x61400000]
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	mov    cl,0x62
   14000b23a:	add    BYTE PTR [rax],al
   14000b23c:	int3   
   14000b23d:	add    DWORD PTR [rax],0x0
   14000b240:	enter  0x62,0x0
   14000b244:	in     eax,0x62
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	in     al,0x83
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	in     al,dx
   14000b24d:	(bad)  
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	rex.WRXB movsxd r8,DWORD PTR [r8]
   14000b253:	add    ah,bl
   14000b255:	add    DWORD PTR [rax],0x0
   14000b258:	and    BYTE PTR [rbx+0x0],0x0
   14000b25c:	(bad)  
   14000b25d:	movsxd eax,DWORD PTR [rax]
   14000b25f:	add    al,bl
   14000b261:	add    DWORD PTR [rax],0x0
   14000b264:	movabs al,ds:0xf0000063ed000063
   14000b26d:	add    DWORD PTR [rax],0x0
   14000b270:	mul    BYTE PTR [rbx+0x0]
   14000b273:	add    BYTE PTR [rdi],ah
   14000b275:	add    BYTE PTR fs:[rax],al
   14000b278:	or     al,0x80
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	sub    eax,0x5c000064
   14000b281:	add    BYTE PTR fs:[rax],al
   14000b284:	or     al,0x80
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	(bad)  
   14000b289:	add    BYTE PTR fs:[rax],al
   14000b28c:	xchg   esp,eax
   14000b28d:	add    BYTE PTR fs:[rax],al
   14000b290:	xchg   esp,eax
   14000b291:	add    BYTE PTR [rax],0x0
   14000b294:	(bad)  
   14000b295:	add    BYTE PTR fs:[rax],al
   14000b298:	add    esp,DWORD PTR [rbp+0x0]
   14000b29b:	add    BYTE PTR [rax+rax*4],cl
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	or     DWORD PTR [rbp+0x0],esp
   14000b2a3:	add    BYTE PTR [rax],dh
   14000b2a5:	add    BYTE PTR gs:[rax],al
   14000b2a8:	or     al,0x80
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	ss add BYTE PTR gs:[rax],al
   14000b2b0:	push   rsp
   14000b2b1:	add    BYTE PTR gs:[rax],al
   14000b2b4:	mov    eax,0x60000083
   14000b2b9:	add    BYTE PTR gs:[rax],al
   14000b2bc:	and    BYTE PTR [rbp+0x0],0x0
   14000b2c0:	.byte 0xb8
   14000b2c1:	add    DWORD PTR [rax],0x0

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	call   0x16880c015
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	adc    BYTE PTR [rax],0x0
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01f:	sbb    BYTE PTR [rax],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	pop    rax
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rax],0x0
	...
   14000c036:	add    DWORD PTR [rax],eax
   14000c038:	add    DWORD PTR [rax],eax
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	jo     0x14000c03e
   14000c03e:	add    BYTE PTR [rax+0x0],al
	...
   14000c04c:	add    BYTE PTR [rax],al
   14000c04e:	add    DWORD PTR [rax],eax
   14000c050:	add    DWORD PTR [rax],eax
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	mov    BYTE PTR [rax],al
   14000c056:	add    BYTE PTR [rax+0x0],al
	...
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    DWORD PTR [rax],eax
   14000c068:	add    DWORD PTR [rax],eax
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	movabs al,ds:0x800000
	...
   14000c07d:	add    BYTE PTR [rcx],al
   14000c07f:	add    BYTE PTR [rcx],cl
   14000c081:	add    al,0x0
   14000c083:	add    BYTE PTR [rax+0x0],bh
	...
   14000c095:	add    BYTE PTR [rcx],al
   14000c097:	add    BYTE PTR [rcx],cl
   14000c099:	add    al,0x0
   14000c09b:	add    al,cl
	...
   14000c0ad:	add    BYTE PTR [rcx],al
   14000c0af:	add    BYTE PTR [rcx],cl
   14000c0b1:	add    al,0x0
   14000c0b3:	add    al,bl
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    al,dh
   14000c0b9:	mov    BYTE PTR [rax],0x0
   14000c0bc:	enter  0x0,0x0
	...
   14000c0c8:	nop
   14000c0c9:	ret    
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	pop    rsp
   14000c0cd:	add    eax,DWORD PTR [rax]
	...
   14000c0d7:	add    al,dh
   14000c0d9:	rol    BYTE PTR [rax],0x0
   14000c0dc:	movabs al,ds:0x2
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    BYTE PTR [rbx],al
   14000c0e9:	add    BYTE PTR [rbp+0x0],cl
   14000c0ec:	push   rbp
   14000c0ed:	add    BYTE PTR [rcx+0x0],cl
   14000c0f0:	cmp    al,0x3f
   14000c0f2:	js     0x14000c161
   14000c0f4:	ins    BYTE PTR es:[rdi],dx
   14000c0f5:	and    BYTE PTR [rsi+0x65],dh
   14000c0f8:	jb     0x14000c16d
   14000c0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c101:	xor    BYTE PTR [rdx],ah
   14000c103:	and    BYTE PTR [rbp+0x6e],ah
   14000c106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c110:	rex.RX sub eax,0x73202238
   14000c116:	je     0x14000c179
   14000c118:	outs   dx,BYTE PTR ds:[rsi]
   14000c119:	fs (bad) 
   14000c11b:	ins    BYTE PTR es:[rdi],dx
   14000c11c:	outs   dx,DWORD PTR ds:[rsi]
   14000c11d:	outs   dx,BYTE PTR ds:[rsi]
   14000c11e:	gs cmp eax,0x73657922
   14000c124:	and    bh,BYTE PTR [rdi]
   14000c126:	ds or  eax,0x2d213c0a
   14000c12c:	sub    eax,0x706f4320
   14000c131:	jns    0x14000c1a5
   14000c133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c13a:	sub    DWORD PTR [rax],esp
   14000c13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c144:	je     0x14000c166
   14000c146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c148:	jb     0x14000c1ba
   14000c14a:	outs   dx,DWORD PTR ds:[rsi]
   14000c14b:	jb     0x14000c1ae
   14000c14d:	je     0x14000c1b8
   14000c14f:	outs   dx,DWORD PTR ds:[rsi]
   14000c150:	outs   dx,BYTE PTR ds:[rsi]
   14000c151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dff84
   14000c157:	cmp    al,0x61
   14000c159:	jae    0x14000c1ce
   14000c15b:	gs ins DWORD PTR es:[rdi],dx
   14000c15d:	(bad)  
   14000c15e:	ins    BYTE PTR es:[rdi],dx
   14000c15f:	jns    0x14000c181
   14000c161:	js     0x14000c1d0
   14000c163:	ins    BYTE PTR es:[rdi],dx
   14000c164:	outs   dx,BYTE PTR ds:[rsi]
   14000c165:	jae    0x14000c1a4
   14000c167:	and    dh,BYTE PTR [rbp+0x72]
   14000c16a:	outs   dx,BYTE PTR ds:[rsi]
   14000c16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c16e:	push   0x73616d65
   14000c173:	sub    eax,0x7263696d
   14000c178:	outs   dx,DWORD PTR ds:[rsi]
   14000c179:	jae    0x14000c1ea
   14000c17b:	data16 je 0x14000c1ab
   14000c17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c184:	ins    DWORD PTR es:[rdi],dx
   14000c185:	cs jbe 0x14000c1b9
   14000c188:	and    ah,BYTE PTR [rax]
   14000c18a:	ins    DWORD PTR es:[rdi],dx
   14000c18b:	(bad)  
   14000c18c:	outs   dx,BYTE PTR ds:[rsi]
   14000c18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c194:	jb     0x14000c209
   14000c196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c19d:	xor    BYTE PTR [rdx],ah
   14000c19f:	ds or  eax,0x73613c0a
   14000c1a5:	jae    0x14000c20c
   14000c1a7:	ins    DWORD PTR es:[rdi],dx
   14000c1a8:	(bad)  
   14000c1a9:	ins    BYTE PTR es:[rdi],dx
   14000c1aa:	jns    0x14000c1f5
   14000c1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000c1af:	je     0x14000c21a
   14000c1b1:	je     0x14000c22c
   14000c1b3:	or     eax,0x2020200a
   14000c1b8:	and    BYTE PTR [rsi+0x65],dh
   14000c1bb:	jb     0x14000c230
   14000c1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c1c4:	xor    DWORD PTR [rsi],ebp
   14000c1c6:	xor    BYTE PTR [rsi],ch
   14000c1c8:	xor    BYTE PTR [rdx],ah
   14000c1ca:	or     eax,0x2020200a
   14000c1cf:	and    BYTE PTR [rax+0x72],dh
   14000c1d2:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c1d6:	jae    0x14000c247
   14000c1d8:	jb     0x14000c21b
   14000c1da:	jb     0x14000c23f
   14000c1dc:	push   0x63657469
   14000c1e1:	je     0x14000c258
   14000c1e3:	jb     0x14000c24a
   14000c1e5:	cmp    eax,0x646d6122
   14000c1ea:	ss xor al,0x22
   14000c1ed:	or     eax,0x2020200a
   14000c1f2:	and    BYTE PTR [rsi+0x61],ch
   14000c1f5:	ins    DWORD PTR es:[rdi],dx
   14000c1f6:	gs cmp eax,0x63694d22
   14000c1fc:	jb     0x14000c26d
   14000c1fe:	jae    0x14000c26f
   14000c200:	data16 je 0x14000c231
   14000c203:	push   rdi
   14000c204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c20b:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x65747379
   14000c214:	ins    DWORD PTR es:[rdi],dx
   14000c215:	cs rex.WB
   14000c217:	rex.XB (bad) 
   14000c219:	movsxd ebp,DWORD PTR [rbx+rsi*2+0x22]
   14000c21d:	or     eax,0x2020200a
   14000c222:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c226:	gs cmp eax,0x6e697722
   14000c22c:	xor    esi,DWORD PTR [rdx]
   14000c22e:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ef13e
   14000c234:	or     bh,BYTE PTR [rsp+riz*2]
   14000c237:	gs jae 0x14000c29d
   14000c23a:	jb     0x14000c2a5
   14000c23c:	jo     0x14000c2b2
   14000c23e:	imul   ebp,DWORD PTR [rdi+0x6e],0x4143493e
   14000c245:	rex.XB
   14000c246:	rex.WR push rbx
   14000c248:	and    BYTE PTR [rbp+0x74],dl
   14000c24b:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x642f3c79
   14000c253:	gs jae 0x14000c2b9
   14000c256:	jb     0x14000c2c1
   14000c258:	jo     0x14000c2ce
   14000c25a:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000c261:	or     bh,BYTE PTR [rsp+rsi*2]
   14000c264:	jb     0x14000c2db
   14000c266:	jae    0x14000c2dc
   14000c268:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c26a:	outs   dx,WORD PTR ds:[rsi]
   14000c26c:	and    BYTE PTR [rax+0x6d],bh
   14000c26f:	ins    BYTE PTR es:[rdi],dx
   14000c270:	outs   dx,BYTE PTR ds:[rsi]
   14000c271:	jae    0x14000c2b0
   14000c273:	and    dh,BYTE PTR [rbp+0x72]
   14000c276:	outs   dx,BYTE PTR ds:[rsi]
   14000c277:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c27a:	push   0x73616d65
   14000c27f:	sub    eax,0x7263696d
   14000c284:	outs   dx,DWORD PTR ds:[rsi]
   14000c285:	jae    0x14000c2f6
   14000c287:	data16 je 0x14000c2b7
   14000c28a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c28d:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c290:	ins    DWORD PTR es:[rdi],dx
   14000c291:	cs jbe 0x14000c2c7
   14000c294:	and    bh,BYTE PTR [rsi]
   14000c296:	or     eax,0x2020200a
   14000c29b:	and    BYTE PTR [rbx+rsi*2],bh
   14000c29e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c2a2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c2aa:	and    BYTE PTR [rax],ah
   14000c2ac:	and    BYTE PTR [rax],ah
   14000c2ae:	and    BYTE PTR [rax],ah
   14000c2b0:	cmp    al,0x72
   14000c2b2:	gs jno 0x14000c32a
   14000c2b5:	gs jae 0x14000c32c
   14000c2b8:	gs fs push rax
   14000c2bb:	jb     0x14000c326
   14000c2bd:	jbe    0x14000c328
   14000c2bf:	ins    BYTE PTR es:[rdi],dx
   14000c2c0:	gs addr32 gs jae 0x14000c303
   14000c2c5:	or     eax,0x2020200a
   14000c2ca:	and    BYTE PTR [rax],ah
   14000c2cc:	and    BYTE PTR [rax],ah
   14000c2ce:	and    BYTE PTR [rax],ah
   14000c2d0:	and    BYTE PTR [rax],ah
   14000c2d2:	and    BYTE PTR [rdx+rsi*2],bh
   14000c2d5:	gs jno 0x14000c34d
   14000c2d8:	gs jae 0x14000c34f
   14000c2db:	gs fs rex.RB js 0x14000c345
   14000c2e0:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c2e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c2ea:	ins    BYTE PTR es:[rdi],dx
   14000c2eb:	or     eax,0x2020200a
   14000c2f0:	and    BYTE PTR [rax],ah
   14000c2f2:	and    BYTE PTR [rax],ah
   14000c2f4:	and    BYTE PTR [rax],ah
   14000c2f6:	and    BYTE PTR [rax],ah
   14000c2f8:	and    BYTE PTR [rax],ah
   14000c2fa:	and    BYTE PTR [rax],ah
   14000c2fc:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c300:	gs ins BYTE PTR es:[rdi],dx
   14000c302:	cmp    eax,0x49736122
   14000c307:	outs   dx,BYTE PTR ds:[rsi]
   14000c308:	jbe    0x14000c379
   14000c30a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c30e:	or     eax,0x2020200a
   14000c313:	and    BYTE PTR [rax],ah
   14000c315:	and    BYTE PTR [rax],ah
   14000c317:	and    BYTE PTR [rax],ah
   14000c319:	and    BYTE PTR [rax],ah
   14000c31b:	and    BYTE PTR [rax],ah
   14000c31d:	and    BYTE PTR [rax],ah
   14000c31f:	and    BYTE PTR [rbp+0x69],dh
   14000c322:	movsxd esp,DWORD PTR [r11+0x65]
   14000c326:	jae    0x14000c39b
   14000c328:	cmp    eax,0x6c616622
   14000c32d:	jae    0x14000c394
   14000c32f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e33f
   14000c335:	and    BYTE PTR [rax],ah
   14000c337:	and    BYTE PTR [rax],ah
   14000c339:	and    BYTE PTR [rax],ah
   14000c33b:	and    BYTE PTR [rax],ah
   14000c33d:	and    BYTE PTR [rdi],ch
   14000c33f:	ds or  eax,0x2020200a
   14000c345:	and    BYTE PTR [rax],ah
   14000c347:	and    BYTE PTR [rax],ah
   14000c349:	and    BYTE PTR [rdi+rbp*1],bh
   14000c34c:	jb     0x14000c3b3
   14000c34e:	jno    0x14000c3c5
   14000c350:	gs jae 0x14000c3c7
   14000c353:	gs fs push rax
   14000c356:	jb     0x14000c3c1
   14000c358:	jbe    0x14000c3c3
   14000c35a:	ins    BYTE PTR es:[rdi],dx
   14000c35b:	gs addr32 gs jae 0x14000c39e
   14000c360:	or     eax,0x2020200a
   14000c365:	and    BYTE PTR [rdi+rbp*1],bh
   14000c368:	jae    0x14000c3cf
   14000c36a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c36d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000c375:	je     0x14000c3e9
   14000c377:	jne    0x14000c3ec
   14000c379:	je     0x14000c3c4
   14000c37b:	outs   dx,BYTE PTR ds:[rsi]
   14000c37c:	outs   dx,WORD PTR ds:[rsi]
   14000c37e:	ds or  eax,0x612f3c0a
   14000c384:	jae    0x14000c3f9
   14000c386:	gs ins DWORD PTR es:[rdi],dx
   14000c388:	(bad)  
   14000c389:	ins    BYTE PTR es:[rdi],dx
   14000c38a:	jns    0x14000c3ca
   14000c38c:	or     eax,0x5c0a0d0a
   14000c391:	add    esi,DWORD PTR [rax+rax*1]
   14000c394:	add    BYTE PTR [rax],al
   14000c396:	push   rsi
   14000c397:	add    BYTE PTR [rbx+0x0],dl
   14000c39a:	pop    rdi
   14000c39b:	add    BYTE PTR [rsi+0x0],dl
   14000c39e:	add    BYTE PTR [r10+0x0],r10b
   14000c3a2:	push   rbx
   14000c3a3:	add    BYTE PTR [rcx+0x0],cl
   14000c3a6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c3aa:	pop    rdi
   14000c3ab:	add    BYTE PTR [rcx+0x0],cl
   14000c3ae:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c3b2:	rex.WRXB add BYTE PTR [r8],r8b
   14000c3b5:	add    BYTE PTR [rax],al
   14000c3b7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c3bd:	add    BYTE PTR [rcx],al
   14000c3bf:	add    BYTE PTR [rax],al
   14000c3c1:	add    BYTE PTR [rdx],cl
   14000c3c3:	add    BYTE PTR [rax],al
   14000c3c5:	add    BYTE PTR [rax],bpl
   14000c3c8:	add    BYTE PTR [rax],al
   14000c3ca:	or     al,BYTE PTR [rax]
   14000c3cc:	add    BYTE PTR [rax+0x0],al
   14000c3cf:	sub    BYTE PTR [rdi],bh
   14000c3d1:	add    BYTE PTR [rax],al
   14000c3d3:	add    BYTE PTR [rax],al
   14000c3d5:	add    BYTE PTR [rax],al
   14000c3d7:	add    BYTE PTR [rax+rax*1],al
   14000c3da:	add    al,0x0
   14000c3dc:	add    DWORD PTR [rax],eax
	...
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	mov    edx,0x1000002
   14000c3f1:	add    BYTE PTR [rbx+0x0],dl
   14000c3f4:	je     0x14000c3f6
   14000c3f6:	jb     0x14000c3f8
   14000c3f8:	imul   eax,DWORD PTR [rax],0x67006e
   14000c3fe:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c402:	ins    BYTE PTR es:[rdi],dx
   14000c403:	add    BYTE PTR [rbp+0x0],ah
   14000c406:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c40a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	xchg   esi,eax
   14000c411:	add    al,BYTE PTR [rax]
   14000c413:	add    BYTE PTR [rcx],al
   14000c415:	add    BYTE PTR [rax],dh
   14000c417:	add    BYTE PTR [rax+rax*1],dh
   14000c41a:	xor    BYTE PTR [rax],al
   14000c41c:	cmp    DWORD PTR [rax],eax
   14000c41e:	xor    BYTE PTR [rax],al
   14000c420:	xor    al,0x0
   14000c422:	rex.X add BYTE PTR [rax],sil
   14000c425:	add    BYTE PTR [rax],al
   14000c427:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c42b:	add    BYTE PTR [rcx],al
   14000c42d:	add    BYTE PTR [rbx+0x0],al
   14000c430:	outs   dx,DWORD PTR ds:[rsi]
   14000c431:	add    BYTE PTR [rbp+0x0],ch
   14000c434:	jo     0x14000c436
   14000c436:	(bad)  
   14000c437:	add    BYTE PTR [rsi+0x0],ch
   14000c43a:	jns    0x14000c43c
   14000c43c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c440:	ins    DWORD PTR es:[rdi],dx
   14000c441:	add    BYTE PTR [rbp+0x0],ah
   14000c444:	add    BYTE PTR [rax],al
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c44c:	movsxd eax,DWORD PTR [rax]
   14000c44e:	jb     0x14000c450
   14000c450:	outs   dx,DWORD PTR ds:[rsi]
   14000c451:	add    BYTE PTR [rbx+0x0],dh
   14000c454:	outs   dx,DWORD PTR ds:[rsi]
   14000c455:	add    BYTE PTR [rsi+0x0],ah
   14000c458:	je     0x14000c45a
   14000c45a:	and    BYTE PTR [rax],al
   14000c45c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c460:	jb     0x14000c462
   14000c462:	jo     0x14000c464
   14000c464:	outs   dx,DWORD PTR ds:[rsi]
   14000c465:	add    BYTE PTR [rdx+0x0],dh
   14000c468:	(bad)  
   14000c469:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c46d:	add    BYTE PTR [rdi+0x0],ch
   14000c470:	outs   dx,BYTE PTR ds:[rsi]
   14000c471:	add    BYTE PTR [rax],al
   14000c473:	add    BYTE PTR [rax],ch
   14000c475:	add    BYTE PTR [rax],al
   14000c477:	add    BYTE PTR [rcx],al
   14000c479:	add    BYTE PTR [rsi+0x0],al
   14000c47c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c482:	add    BYTE PTR [rbp+0x0],r12b
   14000c486:	jae    0x14000c488
   14000c488:	movsxd eax,DWORD PTR [rax]
   14000c48a:	jb     0x14000c48c
   14000c48c:	imul   eax,DWORD PTR [rax],0x740070
   14000c492:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c498:	add    BYTE PTR [rax],al
   14000c49a:	add    BYTE PTR [rax],al
   14000c49c:	data16 add BYTE PTR [rbx],ah
   14000c49f:	add    BYTE PTR [rcx],al
   14000c4a1:	add    BYTE PTR [rsi+0x0],al
   14000c4a4:	imul   eax,DWORD PTR [rax],0x65006c
   14000c4aa:	push   rsi
   14000c4ab:	add    BYTE PTR [rbp+0x0],ah
   14000c4ae:	jb     0x14000c4b0
   14000c4b0:	jae    0x14000c4b2
   14000c4b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c4b8:	add    BYTE PTR [rax],al
   14000c4ba:	add    BYTE PTR [rax],al
   14000c4bc:	xor    DWORD PTR [rax],eax
   14000c4be:	xor    BYTE PTR [rax],al
   14000c4c0:	add    BYTE PTR cs:[rax],dh
   14000c4c3:	add    BYTE PTR [rsi],ch
   14000c4c5:	add    BYTE PTR [rcx],dh
   14000c4c7:	add    BYTE PTR [rax],dh
   14000c4c9:	add    BYTE PTR [rdx],dh
   14000c4cb:	add    BYTE PTR [rax+rax*1],dh
   14000c4ce:	xor    BYTE PTR [rax],al
   14000c4d0:	add    BYTE PTR cs:[rcx],dh
   14000c4d3:	add    BYTE PTR [rsi],dh
   14000c4d5:	add    BYTE PTR [rbx],dh
   14000c4d7:	add    BYTE PTR [rax],bh
   14000c4d9:	add    BYTE PTR [rax+rax*1],dh
   14000c4dc:	and    BYTE PTR [rax],al
   14000c4de:	sub    BYTE PTR [rax],al
   14000c4e0:	je     0x14000c4e2
   14000c4e2:	push   0x2e003100
   14000c4e7:	add    BYTE PTR [rcx],dh
   14000c4e9:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f4ef
   14000c4ef:	add    BYTE PTR [rax],dh
   14000c4f1:	add    BYTE PTR [rcx],bh
   14000c4f3:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f5f9
   14000c4f9:	add    BYTE PTR [rax],dh
   14000c4fb:	add    BYTE PTR [rax],dh
   14000c4fd:	add    BYTE PTR [rcx],ch
   14000c4ff:	add    BYTE PTR [rax],al
   14000c501:	add    BYTE PTR [rax],al
   14000c503:	add    BYTE PTR [rsi],ch
   14000c505:	add    BYTE PTR [rdi],al
   14000c507:	add    BYTE PTR [rcx],al
   14000c509:	add    BYTE PTR [rcx+0x0],cl
   14000c50c:	outs   dx,BYTE PTR ds:[rsi]
   14000c50d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c511:	add    BYTE PTR [rdx+0x0],dh
   14000c514:	outs   dx,BYTE PTR ds:[rsi]
   14000c515:	add    BYTE PTR [rcx+0x0],ah
   14000c518:	ins    BYTE PTR es:[rdi],dx
   14000c519:	add    BYTE PTR [rsi+0x0],cl
   14000c51c:	(bad)  
   14000c51d:	add    BYTE PTR [rbp+0x0],ch
   14000c520:	add    BYTE PTR gs:[rax],al
   14000c523:	add    BYTE PTR [rcx+0x0],ch
   14000c526:	movsxd eax,DWORD PTR [rax]
   14000c528:	(bad)  
   14000c529:	add    BYTE PTR [rbx+0x0],ah
   14000c52c:	ins    BYTE PTR es:[rdi],dx
   14000c52d:	add    BYTE PTR [rbx+0x0],dh
   14000c530:	add    BYTE PTR [rax],al
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	add    BYTE PTR [rax],0x2e
   14000c537:	add    BYTE PTR [rcx],al
   14000c539:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c53d:	add    BYTE PTR [rdi+0x0],ah
   14000c540:	(bad)  
   14000c541:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c545:	add    BYTE PTR [rdi+0x0],ch
   14000c548:	jo     0x14000c54a
   14000c54a:	jns    0x14000c54c
   14000c54c:	jb     0x14000c54e
   14000c54e:	imul   eax,DWORD PTR [rax],0x680067
   14000c554:	je     0x14000c556
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	test   eax,0x4d002000
   14000c55d:	add    BYTE PTR [rcx+0x0],ch
   14000c560:	movsxd eax,DWORD PTR [rax]
   14000c562:	jb     0x14000c564
   14000c564:	outs   dx,DWORD PTR ds:[rsi]
   14000c565:	add    BYTE PTR [rbx+0x0],dh
   14000c568:	outs   dx,DWORD PTR ds:[rsi]
   14000c569:	add    BYTE PTR [rsi+0x0],ah
   14000c56c:	je     0x14000c56e
   14000c56e:	and    BYTE PTR [rax],al
   14000c570:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c574:	jb     0x14000c576
   14000c576:	jo     0x14000c578
   14000c578:	outs   dx,DWORD PTR ds:[rsi]
   14000c579:	add    BYTE PTR [rdx+0x0],dh
   14000c57c:	(bad)  
   14000c57d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c581:	add    BYTE PTR [rdi+0x0],ch
   14000c584:	outs   dx,BYTE PTR ds:[rsi]
   14000c585:	add    BYTE PTR [rsi],ch
   14000c587:	add    BYTE PTR [rax],ah
   14000c589:	add    BYTE PTR [rcx+0x0],al
   14000c58c:	ins    BYTE PTR es:[rdi],dx
   14000c58d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c591:	add    BYTE PTR [rdx+0x0],dh
   14000c594:	imul   eax,DWORD PTR [rax],0x680067
   14000c59a:	je     0x14000c59c
   14000c59c:	jae    0x14000c59e
   14000c59e:	and    BYTE PTR [rax],al
   14000c5a0:	jb     0x14000c5a2
   14000c5a2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c5a6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c5aa:	jbe    0x14000c5ac
   14000c5ac:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c5b1:	add    BYTE PTR [rax],al
   14000c5b3:	add    BYTE PTR [rsi],bh
   14000c5b5:	add    BYTE PTR [rbx],cl
   14000c5b7:	add    BYTE PTR [rcx],al
   14000c5b9:	add    BYTE PTR [rdi+0x0],cl
   14000c5bc:	jb     0x14000c5be
   14000c5be:	imul   eax,DWORD PTR [rax],0x690067
   14000c5c4:	outs   dx,BYTE PTR ds:[rsi]
   14000c5c5:	add    BYTE PTR [rcx+0x0],ah
   14000c5c8:	ins    BYTE PTR es:[rdi],dx
   14000c5c9:	add    BYTE PTR [rsi+0x0],al
   14000c5cc:	imul   eax,DWORD PTR [rax],0x65006c
   14000c5d2:	outs   dx,BYTE PTR ds:[rsi]
   14000c5d3:	add    BYTE PTR [rcx+0x0],ah
   14000c5d6:	ins    DWORD PTR es:[rdi],dx
   14000c5d7:	add    BYTE PTR [rbp+0x0],ah
   14000c5da:	add    BYTE PTR [rax],al
   14000c5dc:	imul   eax,DWORD PTR [rax],0x410043
   14000c5e2:	add    BYTE PTR [r8+r8*1+0x53],cl
   14000c5e7:	add    BYTE PTR [rsi],ch
   14000c5e9:	add    BYTE PTR [rbp+0x0],al
   14000c5ec:	pop    rax
   14000c5ed:	add    BYTE PTR [rbp+0x0],al
   14000c5f0:	add    BYTE PTR [rax],al
   14000c5f2:	add    BYTE PTR [rax],al
   14000c5f4:	push   0x0
   14000c5f6:	and    eax,0x50000100
   14000c5fb:	add    BYTE PTR [rdx+0x0],dh
   14000c5fe:	outs   dx,DWORD PTR ds:[rsi]
   14000c5ff:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c603:	add    BYTE PTR [rbx+0x0],ah
   14000c606:	je     0x14000c608
   14000c608:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c60c:	ins    DWORD PTR es:[rdi],dx
   14000c60d:	add    BYTE PTR [rbp+0x0],ah
   14000c610:	add    BYTE PTR [rax],al
   14000c612:	add    BYTE PTR [rax],al
   14000c614:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c618:	movsxd eax,DWORD PTR [rax]
   14000c61a:	jb     0x14000c61c
   14000c61c:	outs   dx,DWORD PTR ds:[rsi]
   14000c61d:	add    BYTE PTR [rbx+0x0],dh
   14000c620:	outs   dx,DWORD PTR ds:[rsi]
   14000c621:	add    BYTE PTR [rsi+0x0],ah
   14000c624:	je     0x14000c626
   14000c626:	scas   al,BYTE PTR es:[rdi]
   14000c627:	add    BYTE PTR [rax],ah
   14000c629:	add    BYTE PTR [rdi+0x0],dl
   14000c62c:	imul   eax,DWORD PTR [rax],0x64006e
   14000c632:	outs   dx,DWORD PTR ds:[rsi]
   14000c633:	add    BYTE PTR [rdi+0x0],dh
   14000c636:	jae    0x14000c638
   14000c638:	scas   al,BYTE PTR es:[rdi]
   14000c639:	add    BYTE PTR [rax],ah
   14000c63b:	add    BYTE PTR [rdi+0x0],cl
   14000c63e:	jo     0x14000c640
   14000c640:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c644:	(bad)  
   14000c645:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c649:	add    BYTE PTR [rsi+0x0],ch
   14000c64c:	add    BYTE PTR [eax],ah
   14000c64f:	add    BYTE PTR [rbx+0x0],dl
   14000c652:	jns    0x14000c654
   14000c654:	jae    0x14000c656
   14000c656:	je     0x14000c658
   14000c658:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c65c:	add    BYTE PTR [rax],al
   14000c65e:	add    BYTE PTR [rax],al
   14000c660:	rex.RX add BYTE PTR [rcx],r10b
   14000c663:	add    BYTE PTR [rcx],al
   14000c665:	add    BYTE PTR [rax+0x0],dl
   14000c668:	jb     0x14000c66a
   14000c66a:	outs   dx,DWORD PTR ds:[rsi]
   14000c66b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c66f:	add    BYTE PTR [rbx+0x0],ah
   14000c672:	je     0x14000c674
   14000c674:	push   rsi
   14000c675:	add    BYTE PTR [rbp+0x0],ah
   14000c678:	jb     0x14000c67a
   14000c67a:	jae    0x14000c67c
   14000c67c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c682:	add    BYTE PTR [rax],al
   14000c684:	xor    DWORD PTR [rax],eax
   14000c686:	xor    BYTE PTR [rax],al
   14000c688:	add    BYTE PTR cs:[rax],dh
   14000c68b:	add    BYTE PTR [rsi],ch
   14000c68d:	add    BYTE PTR [rcx],dh
   14000c68f:	add    BYTE PTR [rax],dh
   14000c691:	add    BYTE PTR [rdx],dh
   14000c693:	add    BYTE PTR [rax+rax*1],dh
   14000c696:	xor    BYTE PTR [rax],al
   14000c698:	add    BYTE PTR cs:[rcx],dh
   14000c69b:	add    BYTE PTR [rsi],dh
   14000c69d:	add    BYTE PTR [rbx],dh
   14000c69f:	add    BYTE PTR [rax],bh
   14000c6a1:	add    BYTE PTR [rax+rax*1],dh
   14000c6a4:	add    BYTE PTR [rax],al
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	add    BYTE PTR [rax],r8b
   14000c6ab:	add    BYTE PTR [rcx],al
   14000c6ad:	add    BYTE PTR [rsi+0x0],dl
   14000c6b0:	(bad)  
   14000c6b1:	add    BYTE PTR [rdx+0x0],dh
   14000c6b4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c6b8:	ins    BYTE PTR es:[rdi],dx
   14000c6b9:	add    BYTE PTR [rbp+0x0],ah
   14000c6bc:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c6c0:	data16 add BYTE PTR [rdi+0x0],ch
   14000c6c4:	add    BYTE PTR [rax],al
   14000c6c6:	add    BYTE PTR [rax],al
   14000c6c8:	and    al,0x0
   14000c6ca:	add    al,0x0
   14000c6cc:	add    BYTE PTR [rax],al
   14000c6ce:	push   rsp
   14000c6cf:	add    BYTE PTR [rdx+0x0],dh
   14000c6d2:	(bad)  
   14000c6d3:	add    BYTE PTR [rsi+0x0],ch
   14000c6d6:	jae    0x14000c6d8
   14000c6d8:	ins    BYTE PTR es:[rdi],dx
   14000c6d9:	add    BYTE PTR [rcx+0x0],ah
   14000c6dc:	je     0x14000c6de
   14000c6de:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c6e4:	add    BYTE PTR [rax],al
   14000c6e6:	add    BYTE PTR [rax],al
   14000c6e8:	or     DWORD PTR [rax+rsi*4],eax
   14000c6eb:	add    al,0x0
   14000c6ed:	add    BYTE PTR [rax],al
   14000c6ef:	add    ch,cl
   14000c6f1:	dec    ch
   14000c6f3:	dec    al
   14000c6f5:	add    BYTE PTR [rax],al
   14000c6f7:	add    BYTE PTR [rax],al
   14000c6f9:	add    BYTE PTR [rcx],al
   14000c6fb:	add    BYTE PTR [rax],al
   14000c6fd:	add    BYTE PTR [rax],al
   14000c6ff:	add    BYTE PTR [rcx],dl
   14000c701:	add    BYTE PTR [rax],al
   14000c703:	add    BYTE PTR [rax],al
   14000c705:	add    BYTE PTR [rax],al
   14000c707:	add    BYTE PTR [rdx],al
   14000c709:	add    BYTE PTR [rax],al
   14000c70b:	add    BYTE PTR [rcx+0x68a332e],dh
   14000c711:	out    dx,eax
   14000c712:	(bad)  
   14000c713:	mov    esi,0x1066ae08
   14000c718:	jno    0x14000c727
   14000c71a:	and    DWORD PTR [rax],esp
   14000c71c:	fs xchg edx,eax
   14000c71e:	(bad)  
   14000c71f:	sbb    eax,0xe13dcb57
   14000c724:	pop    rcx
   14000c725:	(bad)  
   14000c726:	cmp    edx,DWORD PTR [rax-0x331619db]
	...
   14000c744:	mov    BYTE PTR [rax],al
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	(bad)  
   14000c749:	add    BYTE PTR [rax],al
   14000c74b:	add    BYTE PTR [rax+0x8000000],bl
   14000c751:	add    BYTE PTR [rax],al
   14000c753:	add    BYTE PTR [rax+0xe000000],ah
   14000c759:	add    BYTE PTR [rax],al
   14000c75b:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000c769:	add    BYTE PTR [rax],al
   14000c76b:	add    BYTE PTR [rax+0xc000000],bh
   14000c771:	add    BYTE PTR [rax],al
   14000c773:	add    BYTE PTR [rax],al
   14000c775:	add    BYTE PTR [rax],al
   14000c777:	add    BYTE PTR [rbp+0x0],cl
   14000c77a:	push   rbp
   14000c77b:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c786:	add    BYTE PTR [rax],al
   14000c788:	adc    BYTE PTR [rax],al
   14000c78a:	add    BYTE PTR [rax],al
   14000c78c:	sbb    BYTE PTR [rax],al
   14000c78e:	add    BYTE PTR [rax],al
   14000c790:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c794:	rex.WB add BYTE PTR [r8],al
	...
   14000c79f:	add    BYTE PTR [rbx],cl
   14000c7a1:	add    BYTE PTR [rax],al
   14000c7a3:	add    BYTE PTR [rax],dl
   14000c7a5:	add    BYTE PTR [rax],al
   14000c7a7:	add    BYTE PTR [rbp+0x0],ah
   14000c7aa:	outs   dx,BYTE PTR ds:[rsi]
   14000c7ab:	add    BYTE PTR [rip+0x53005500],ch        # 0x193011cb1
   14000c7b1:	add    BYTE PTR [rax],al
   14000c7b3:	add    BYTE PTR [rax],al
   14000c7b5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],dh
   14000d003:	add    BYTE PTR [rax],ah
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    al,bl
   14000d009:	movabs ds:0xa410a408a3f0a3e0,eax
   14000d012:	(bad)  
   14000d013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d014:	push   0x60ac48a4
   14000d019:	lods   al,BYTE PTR ds:[rsi]
   14000d01a:	push   0xac70ac
   14000d01f:	add    BYTE PTR [rax],al
   14000d021:	movabs al,ds:0xa030000000b00000
   14000d02a:	movabs al,ds:0xa080a070a060a050
   14000d034:	nop
   14000d035:	movabs al,ds:0xa0d0a0c0a0b0a0a0
   14000d03e:	loopne 0x14000cfe0
   14000d040:	lock movabs al,ds:0xa130a120a110a100
   14000d04a:	rex movabs eax,ds:0xa180a170a160a150
   14000d054:	nop
   14000d055:	movabs eax,ds:0xa1e0a1c0a1b0a1a0
   14000d05e:	lock movabs eax,ds:0xa230a220a210a200
   14000d068:	pop    rax
   14000d069:	movabs ds:0xa288a278a270a260,al
   14000d072:	nop
   14000d073:	movabs ds:0xa2c0a2b8a2a8a2a0,al
   14000d07c:	shl    BYTE PTR [rdx-0x5d175d28],1
   14000d082:	lock movabs ds:0xa320a318a308a300,al
   14000d08c:	xor    BYTE PTR [rbx-0x5cb75cc8],ah
   14000d092:	push   rax
   14000d093:	movabs ds:0xa380a378a368a360,eax
   14000d09c:	nop
   14000d09d:	movabs ds:0xa3c0a3b0a3a8a398,eax
   14000d0a6:	enter  0xd8a3,0xa3
   14000d0aa:	loopne 0x14000d04f
   14000d0ac:	lock movabs ds:0xa420a410a408a3f8,eax
   14000d0b6:	sub    BYTE PTR [rax+rdi*1+0x50a440a4],ah
   14000d0bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0be:	pop    rax
   14000d0bf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0c0:	push   0xffffffff80a470a4
   14000d0c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0c6:	nop
   14000d0c7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0c8:	.byte 0xa0
   14000d0c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0ca:	mov    al,0xa4
   14000d0cc:	.byte 0xc0
   14000d0cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
