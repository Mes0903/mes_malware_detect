
238a9de495ddb87555913ec5d1f67bcc22b5d754b21b7ae9da3158461547da00.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	rex push rbx
   140001012:	sub    rsp,0x20
   140001016:	lea    rax,[rip+0x2273]        # 0x140003290
   14000101d:	mov    rbx,rcx
   140001020:	mov    QWORD PTR [rcx],rax
   140001023:	test   dl,0x1
   140001026:	je     0x14000102d
   140001028:	call   0x140002414
   14000102d:	mov    rax,rbx
   140001030:	add    rsp,0x20
   140001034:	pop    rbx
   140001035:	ret    
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	mov    QWORD PTR [rsp+0x8],rbx
   140001041:	push   rdi
   140001042:	sub    rsp,0x30
   140001046:	mov    rbx,rcx
   140001049:	movzx  edi,r8w
   14000104d:	xor    ecx,ecx
   14000104f:	call   QWORD PTR [rip+0x1fab]        # 0x140003000
   140001055:	lea    r9,[rip+0x34]        # 0x140001090
   14000105c:	mov    QWORD PTR [rsp+0x20],rbx
   140001061:	mov    rcx,rax
   140001064:	xor    r8d,r8d
   140001067:	mov    edx,edi
   140001069:	call   QWORD PTR [rip+0x20d9]        # 0x140003148
   14000106f:	mov    rbx,QWORD PTR [rsp+0x40]
   140001074:	cdqe   
   140001076:	add    rsp,0x30
   14000107a:	pop    rdi
   14000107b:	ret    
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    QWORD PTR [rsp+0x8],rbx
   140001095:	mov    QWORD PTR [rsp+0x18],rbp
   14000109a:	push   rsi
   14000109b:	push   rdi
   14000109c:	push   r12
   14000109e:	push   r14
   1400010a0:	push   r15
   1400010a2:	sub    rsp,0x20
   1400010a6:	mov    r12d,edx
   1400010a9:	mov    esi,0x1
   1400010ae:	mov    r14,r9
   1400010b1:	mov    rbp,r8
   1400010b4:	mov    r15,rcx
   1400010b7:	lea    ebx,[rsi+0xf]
   1400010ba:	mov    edx,ebx
   1400010bc:	call   QWORD PTR [rip+0x2026]        # 0x1400030e8
   1400010c2:	mov    r10d,r12d
   1400010c5:	mov    rdi,rax
   1400010c8:	sub    r10d,0x2
   1400010cc:	je     0x1400011d2
   1400010d2:	sub    r10d,0x3
   1400010d6:	je     0x1400011c6
   1400010dc:	sub    r10d,0x1f
   1400010e0:	je     0x1400011a9
   1400010e6:	sub    r10d,0x2a
   1400010ea:	je     0x14000119d
   1400010f0:	sub    r10d,0x5
   1400010f4:	je     0x14000117d
   1400010fa:	sub    r10d,0x28
   1400010fe:	je     0x14000117d
   140001100:	sub    r10d,0x95
   140001107:	je     0x140001138
   140001109:	cmp    r10d,esi
   14000110c:	je     0x140001115
   14000110e:	xor    esi,esi
   140001110:	jmp    0x1400011f1
   140001115:	mov    rax,QWORD PTR [rax]
   140001118:	mov    rbx,QWORD PTR [rax+0x18]
   14000111c:	mov    rcx,rbx
   14000111f:	call   QWORD PTR [rip+0x20cb]        # 0x1400031f0
   140001125:	mov    r8,r14
   140001128:	mov    rdx,rbp
   14000112b:	mov    rcx,rdi
   14000112e:	call   rbx
   140001130:	movzx  esi,al
   140001133:	jmp    0x1400011f1
   140001138:	mov    r8,r14
   14000113b:	mov    edx,ebx
   14000113d:	mov    rcx,r15
   140001140:	call   QWORD PTR [rip+0x1faa]        # 0x1400030f0
   140001146:	mov    rax,QWORD PTR [r14]
   140001149:	mov    QWORD PTR [r14+0x8],r15
   14000114d:	mov    BYTE PTR [rsp+0x58],sil
   140001152:	mov    rbx,QWORD PTR [rax+0x10]
   140001156:	mov    rcx,rbx
   140001159:	call   QWORD PTR [rip+0x2091]        # 0x1400031f0
   14000115f:	lea    rdx,[rsp+0x58]
   140001164:	mov    rcx,r14
   140001167:	call   rbx
   140001169:	movzx  esi,BYTE PTR [rsp+0x58]
   14000116e:	test   eax,eax
   140001170:	jns    0x1400011f1
   140001172:	mov    rcx,r15
   140001175:	call   QWORD PTR [rip+0x1f7d]        # 0x1400030f8
   14000117b:	jmp    0x1400011f1
   14000117d:	mov    rax,QWORD PTR [rax]
   140001180:	mov    rbx,QWORD PTR [rax+0x8]
   140001184:	mov    rcx,rbx
   140001187:	call   QWORD PTR [rip+0x2063]        # 0x1400031f0
   14000118d:	mov    r9,r14
   140001190:	mov    r8,rbp
   140001193:	mov    edx,r12d
   140001196:	mov    rcx,rdi
   140001199:	call   rbx
   14000119b:	jmp    0x1400011f1
   14000119d:	mov    rax,QWORD PTR [rax]
   1400011a0:	mov    rbx,QWORD PTR [rax+0x30]
   1400011a4:	jmp    0x14000111c
   1400011a9:	mov    rax,QWORD PTR [rax]
   1400011ac:	mov    rbx,QWORD PTR [rax+0x20]
   1400011b0:	mov    rcx,rbx
   1400011b3:	call   QWORD PTR [rip+0x2037]        # 0x1400031f0
   1400011b9:	mov    rdx,r14
   1400011bc:	mov    rcx,rdi
   1400011bf:	call   rbx
   1400011c1:	jmp    0x140001130
   1400011c6:	mov    rax,QWORD PTR [rax]
   1400011c9:	mov    rbx,QWORD PTR [rax+0x38]
   1400011cd:	jmp    0x14000111c
   1400011d2:	test   rax,rax
   1400011d5:	je     0x1400011f1
   1400011d7:	mov    rax,QWORD PTR [rax]
   1400011da:	mov    rbx,QWORD PTR [rax+0x50]
   1400011de:	mov    rcx,rbx
   1400011e1:	call   QWORD PTR [rip+0x2009]        # 0x1400031f0
   1400011e7:	mov    rcx,rdi
   1400011ea:	call   rbx
   1400011ec:	and    QWORD PTR [rdi+0x8],0x0
   1400011f1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400011f6:	mov    rbp,QWORD PTR [rsp+0x60]
   1400011fb:	movsxd rax,esi
   1400011fe:	add    rsp,0x20
   140001202:	pop    r15
   140001204:	pop    r14
   140001206:	pop    r12
   140001208:	pop    rdi
   140001209:	pop    rsi
   14000120a:	ret    
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	xor    al,al
   140001222:	ret    
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	ret    0x0
   140001233:	int3   
   140001234:	int3   
   140001235:	int3   
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	xor    eax,eax
   140001242:	ret    
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    al,0x1
   140001252:	ret    
   140001253:	int3   
   140001254:	int3   
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	mov    QWORD PTR [rsp+0x8],rbx
   140001261:	xor    ebx,ebx
   140001263:	lea    rax,[rdx-0x1]
   140001267:	mov    r10d,0x7ffffffe
   14000126d:	mov    r9d,ebx
   140001270:	cmp    rax,r10
   140001273:	mov    r11d,0x80070057
   140001279:	cmova  r9d,r11d
   14000127d:	test   r9d,r9d
   140001280:	js     0x1400012c1
   140001282:	mov    r9d,ebx
   140001285:	test   rdx,rdx
   140001288:	je     0x1400012b5
   14000128a:	sub    r10,rdx
   14000128d:	sub    r8,rcx
   140001290:	lea    rax,[r10+rdx*1]
   140001294:	test   rax,rax
   140001297:	je     0x1400012b0
   140001299:	movzx  eax,WORD PTR [r8+rcx*1]
   14000129e:	test   ax,ax
   1400012a1:	je     0x1400012b0
   1400012a3:	mov    WORD PTR [rcx],ax
   1400012a6:	add    rcx,0x2
   1400012aa:	sub    rdx,0x1
   1400012ae:	jne    0x140001290
   1400012b0:	test   rdx,rdx
   1400012b3:	jne    0x1400012c6
   1400012b5:	sub    rcx,0x2
   1400012b9:	mov    r9d,0x8007007a
   1400012bf:	jmp    0x1400012c6
   1400012c1:	test   rdx,rdx
   1400012c4:	je     0x1400012c9
   1400012c6:	mov    WORD PTR [rcx],bx
   1400012c9:	mov    rbx,QWORD PTR [rsp+0x8]
   1400012ce:	mov    eax,r9d
   1400012d1:	ret    
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400012dd:	mov    QWORD PTR [rsp+0x10],rdi
   1400012e2:	xor    edi,edi
   1400012e4:	lea    rax,[rdx-0x1]
   1400012e8:	cmp    rax,0x7ffffffe
   1400012ee:	mov    r10,rdx
   1400012f1:	mov    r9d,edi
   1400012f4:	mov    edx,0x80070057
   1400012f9:	cmova  r9d,edx
   1400012fd:	mov    rbx,r8
   140001300:	mov    r11,rcx
   140001303:	test   r9d,r9d
   140001306:	js     0x140001332
   140001308:	mov    rax,r10
   14000130b:	mov    r9d,edi
   14000130e:	test   r10,r10
   140001311:	je     0x14000132f
   140001313:	cmp    WORD PTR [rcx],di
   140001316:	je     0x140001322
   140001318:	add    rcx,0x2
   14000131c:	sub    rax,0x1
   140001320:	jne    0x140001313
   140001322:	test   rax,rax
   140001325:	je     0x14000132f
   140001327:	mov    r8,r10
   14000132a:	sub    r8,rax
   14000132d:	jmp    0x140001335
   14000132f:	mov    r9d,edx
   140001332:	mov    r8,rdi
   140001335:	test   r9d,r9d
   140001338:	js     0x14000138c
   14000133a:	mov    rdx,r10
   14000133d:	lea    rcx,[r11+r8*2]
   140001341:	mov    r9d,edi
   140001344:	sub    rdx,r8
   140001347:	je     0x14000137f
   140001349:	mov    rax,rdx
   14000134c:	sub    rax,r10
   14000134f:	lea    r10,[r8+0x7ffffffe]
   140001356:	add    r10,rax
   140001359:	sub    rbx,rcx
   14000135c:	test   r10,r10
   14000135f:	je     0x14000137a
   140001361:	movzx  eax,WORD PTR [rbx+rcx*1]
   140001365:	test   ax,ax
   140001368:	je     0x14000137a
   14000136a:	mov    WORD PTR [rcx],ax
   14000136d:	dec    r10
   140001370:	add    rcx,0x2
   140001374:	sub    rdx,0x1
   140001378:	jne    0x14000135c
   14000137a:	test   rdx,rdx
   14000137d:	jne    0x140001389
   14000137f:	sub    rcx,0x2
   140001383:	mov    r9d,0x8007007a
   140001389:	mov    WORD PTR [rcx],di
   14000138c:	mov    rbx,QWORD PTR [rsp+0x8]
   140001391:	mov    eax,r9d
   140001394:	mov    rdi,QWORD PTR [rsp+0x10]
   140001399:	ret    
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	mov    QWORD PTR [rsp+0x18],r8
   1400013a5:	mov    QWORD PTR [rsp+0x20],r9
   1400013aa:	push   rbx
   1400013ab:	push   rbp
   1400013ac:	push   rsi
   1400013ad:	push   rdi
   1400013ae:	sub    rsp,0x28
   1400013b2:	xor    ebp,ebp
   1400013b4:	lea    rax,[rdx-0x1]
   1400013b8:	cmp    rax,0x7ffffffe
   1400013be:	mov    rsi,rcx
   1400013c1:	mov    edi,ebp
   1400013c3:	mov    ecx,0x80070057
   1400013c8:	cmova  edi,ecx
   1400013cb:	test   edi,edi
   1400013cd:	js     0x140001404
   1400013cf:	lea    rbx,[rdx-0x1]
   1400013d3:	mov    rcx,rsi
   1400013d6:	mov    rdx,rbx
   1400013d9:	lea    r9,[rsp+0x68]
   1400013de:	mov    edi,ebp
   1400013e0:	call   QWORD PTR [rip+0x1de2]        # 0x1400031c8
   1400013e6:	test   eax,eax
   1400013e8:	js     0x1400013f9
   1400013ea:	cdqe   
   1400013ec:	cmp    rax,rbx
   1400013ef:	ja     0x1400013f9
   1400013f1:	jne    0x14000140c
   1400013f3:	mov    WORD PTR [rsi+rbx*2],bp
   1400013f7:	jmp    0x14000140c
   1400013f9:	mov    WORD PTR [rsi+rbx*2],bp
   1400013fd:	mov    edi,0x8007007a
   140001402:	jmp    0x14000140c
   140001404:	test   rdx,rdx
   140001407:	je     0x14000140c
   140001409:	mov    WORD PTR [rsi],bp
   14000140c:	mov    eax,edi
   14000140e:	add    rsp,0x28
   140001412:	pop    rdi
   140001413:	pop    rsi
   140001414:	pop    rbp
   140001415:	pop    rbx
   140001416:	ret    
   140001417:	int3   
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	mov    rax,rsp
   140001423:	mov    DWORD PTR [rax+0x8],ecx
   140001426:	mov    QWORD PTR [rax+0x10],rdx
   14000142a:	mov    QWORD PTR [rax+0x18],r8
   14000142e:	mov    QWORD PTR [rax+0x20],r9
   140001432:	push   rbp
   140001433:	push   rbx
   140001434:	lea    rbp,[rax-0x1e8]
   14000143b:	sub    rsp,0x2d8
   140001442:	mov    rax,QWORD PTR [rip+0x2bbf]        # 0x140004008
   140001449:	xor    rax,rsp
   14000144c:	mov    QWORD PTR [rbp+0x1c0],rax
   140001453:	movdqa xmm0,XMMWORD PTR [rip+0x1fe5]        # 0x140003440
   14000145b:	lea    rdx,[rbp+0x1f8]
   140001462:	xor    eax,eax
   140001464:	mov    QWORD PTR [rsp+0x38],rdx
   140001469:	mov    DWORD PTR [rsp+0x30],ecx
   14000146d:	lea    rbx,[rip+0x1e74]        # 0x1400032e8
   140001474:	lea    rcx,[rsp+0x40]
   140001479:	mov    QWORD PTR [rsp+0x48],rax
   14000147e:	mov    QWORD PTR [rsp+0x40],rbx
   140001483:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140001489:	mov    QWORD PTR [rsp+0x60],rax
   14000148e:	mov    QWORD PTR [rbp+0x1b0],rax
   140001495:	mov    WORD PTR [rsp+0x68],ax
   14000149a:	call   0x1400018e8
   14000149f:	mov    rcx,QWORD PTR [rsp+0x60]
   1400014a4:	mov    QWORD PTR [rsp+0x40],rbx
   1400014a9:	call   0x140002414
   1400014ae:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400014b5:	call   0x140002414
   1400014ba:	mov    rcx,QWORD PTR [rbp+0x1c0]
   1400014c1:	xor    rcx,rsp
   1400014c4:	call   0x1400027a0
   1400014c9:	add    rsp,0x2d8
   1400014d0:	pop    rbx
   1400014d1:	pop    rbp
   1400014d2:	ret    
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	mov    rax,rsp
   1400014df:	mov    QWORD PTR [rax+0x8],rbx
   1400014e3:	mov    QWORD PTR [rax+0x10],rsi
   1400014e7:	mov    QWORD PTR [rax+0x18],r15
   1400014eb:	push   rbp
   1400014ec:	lea    rbp,[rax-0x1158]
   1400014f3:	mov    eax,0x1250
   1400014f8:	call   0x140002d70
   1400014fd:	sub    rsp,rax
   140001500:	mov    rax,QWORD PTR [rip+0x2b01]        # 0x140004008
   140001507:	xor    rax,rsp
   14000150a:	mov    QWORD PTR [rbp+0x1140],rax
   140001511:	movdqa xmm0,XMMWORD PTR [rip+0x1f37]        # 0x140003450
   140001519:	lea    r15,[rip+0x1dc8]        # 0x1400032e8
   140001520:	xor    eax,eax
   140001522:	mov    QWORD PTR [rsp+0x20],r15
   140001527:	lea    r9,[rip+0x1e12]        # 0x140003340
   14000152e:	mov    QWORD PTR [rsp+0x28],rax
   140001533:	mov    r8d,0x7d0
   140001539:	mov    QWORD PTR [rsp+0x40],rax
   14000153e:	lea    rdx,[rbp+0x1a0]
   140001545:	mov    QWORD PTR [rbp+0x190],rax
   14000154c:	lea    ecx,[rax+0x6e]
   14000154f:	mov    WORD PTR [rsp+0x48],ax
   140001554:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000155a:	call   0x140001654
   14000155f:	lea    rcx,[rbp+0x1a0]
   140001566:	call   QWORD PTR [rip+0x1ab4]        # 0x140003020
   14000156c:	inc    eax
   14000156e:	mov    rsi,0xffffffffffffffff
   140001575:	movsxd rbx,eax
   140001578:	mov    eax,0x2
   14000157d:	mul    rbx
   140001580:	cmovo  rax,rsi
   140001584:	mov    rcx,rax
   140001587:	call   0x140002420
   14000158c:	lea    r8,[rbp+0x1a0]
   140001593:	mov    QWORD PTR [rsp+0x40],rax
   140001598:	mov    rdx,rbx
   14000159b:	mov    rcx,rax
   14000159e:	call   0x14000125c
   1400015a3:	lea    r9,[rip+0x1d96]        # 0x140003340
   1400015aa:	mov    r8d,0x7d0
   1400015b0:	lea    rdx,[rbp+0x1a0]
   1400015b7:	lea    ecx,[rsi+0x6e]
   1400015ba:	call   0x140001654
   1400015bf:	lea    rcx,[rbp+0x1a0]
   1400015c6:	call   QWORD PTR [rip+0x1a54]        # 0x140003020
   1400015cc:	inc    eax
   1400015ce:	movsxd rbx,eax
   1400015d1:	lea    eax,[rsi+0x3]
   1400015d4:	mul    rbx
   1400015d7:	cmovo  rax,rsi
   1400015db:	mov    rcx,rax
   1400015de:	call   0x140002420
   1400015e3:	lea    r8,[rbp+0x1a0]
   1400015ea:	mov    QWORD PTR [rbp+0x190],rax
   1400015f1:	mov    rdx,rbx
   1400015f4:	mov    rcx,rax
   1400015f7:	call   0x14000125c
   1400015fc:	lea    r8d,[rsi+0x71]
   140001600:	lea    rcx,[rsp+0x20]
   140001605:	call   0x14000103c
   14000160a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000160f:	mov    QWORD PTR [rsp+0x20],r15
   140001614:	call   0x140002414
   140001619:	mov    rcx,QWORD PTR [rbp+0x190]
   140001620:	call   0x140002414
   140001625:	mov    rcx,QWORD PTR [rbp+0x1140]
   14000162c:	xor    rcx,rsp
   14000162f:	call   0x1400027a0
   140001634:	lea    r11,[rsp+0x1250]
   14000163c:	mov    rbx,QWORD PTR [r11+0x10]
   140001640:	mov    rsi,QWORD PTR [r11+0x18]
   140001644:	mov    r15,QWORD PTR [r11+0x20]
   140001648:	mov    rsp,r11
   14000164b:	pop    rbp
   14000164c:	ret    
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	int3   
   140001651:	int3   
   140001652:	int3   
   140001653:	int3   
   140001654:	mov    QWORD PTR [rsp+0x8],rbx
   140001659:	mov    QWORD PTR [rsp+0x10],rbp
   14000165e:	mov    QWORD PTR [rsp+0x18],rsi
   140001663:	push   rdi
   140001664:	push   r14
   140001666:	push   r15
   140001668:	sub    rsp,0x20
   14000166c:	mov    ebx,ecx
   14000166e:	mov    r14d,r8d
   140001671:	xor    r15d,r15d
   140001674:	xor    ecx,ecx
   140001676:	mov    edi,r15d
   140001679:	mov    rbp,r9
   14000167c:	mov    rsi,rdx
   14000167f:	call   QWORD PTR [rip+0x197b]        # 0x140003000
   140001685:	mov    r9d,r14d
   140001688:	mov    r8,rsi
   14000168b:	mov    rcx,rax
   14000168e:	mov    edx,ebx
   140001690:	call   QWORD PTR [rip+0x1a72]        # 0x140003108
   140001696:	test   eax,eax
   140001698:	jne    0x1400016c7
   14000169a:	call   QWORD PTR [rip+0x1978]        # 0x140003018
   1400016a0:	movzx  edi,ax
   1400016a3:	or     edi,0x80070000
   1400016a9:	test   eax,eax
   1400016ab:	cmovle edi,eax
   1400016ae:	test   rbp,rbp
   1400016b1:	je     0x1400016c3
   1400016b3:	mov    edx,r14d
   1400016b6:	mov    r8,rbp
   1400016b9:	mov    rcx,rsi
   1400016bc:	call   0x14000125c
   1400016c1:	jmp    0x1400016c7
   1400016c3:	mov    WORD PTR [rsi],r15w
   1400016c7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400016cc:	mov    eax,edi
   1400016ce:	mov    rbp,QWORD PTR [rsp+0x48]
   1400016d3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400016d8:	add    rsp,0x20
   1400016dc:	pop    r15
   1400016de:	pop    r14
   1400016e0:	pop    rdi
   1400016e1:	ret    
   1400016e2:	int3   
   1400016e3:	int3   
   1400016e4:	int3   
   1400016e5:	int3   
   1400016e6:	int3   
   1400016e7:	int3   
   1400016e8:	mov    rax,rsp
   1400016eb:	mov    QWORD PTR [rax+0x10],rbx
   1400016ef:	mov    QWORD PTR [rax+0x18],rsi
   1400016f3:	mov    QWORD PTR [rax+0x20],r14
   1400016f7:	push   rbp
   1400016f8:	lea    rbp,[rax-0xae8]
   1400016ff:	sub    rsp,0xbe0
   140001706:	mov    rax,QWORD PTR [rip+0x28fb]        # 0x140004008
   14000170d:	xor    rax,rsp
   140001710:	mov    QWORD PTR [rbp+0xad0],rax
   140001717:	movdqa xmm0,XMMWORD PTR [rip+0x1d21]        # 0x140003440
   14000171f:	lea    rax,[rsp+0x40]
   140001724:	xor    ebx,ebx
   140001726:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   14000172c:	mov    QWORD PTR [rsp+0x30],rbx
   140001731:	lea    r14,[rip+0x1bb0]        # 0x1400032e8
   140001738:	mov    r8d,ecx
   14000173b:	mov    DWORD PTR [rsp+0x28],ebx
   14000173f:	xor    r9d,r9d
   140001742:	mov    QWORD PTR [rsp+0x20],rax
   140001747:	xor    edx,edx
   140001749:	mov    QWORD PTR [rsp+0x58],rbx
   14000174e:	mov    ecx,0x1100
   140001753:	mov    QWORD PTR [rsp+0x50],r14
   140001758:	mov    QWORD PTR [rsp+0x70],rbx
   14000175d:	mov    QWORD PTR [rbp+0x1c0],rbx
   140001764:	mov    WORD PTR [rsp+0x78],bx
   140001769:	mov    QWORD PTR [rsp+0x40],rbx
   14000176e:	call   QWORD PTR [rip+0x1894]        # 0x140003008
   140001774:	mov    ebx,0x122
   140001779:	lea    rcx,[rbp+0x1d0]
   140001780:	mov    edx,ebx
   140001782:	test   eax,eax
   140001784:	je     0x14000179d
   140001786:	mov    r8,QWORD PTR [rsp+0x40]
   14000178b:	call   0x14000125c
   140001790:	mov    rcx,QWORD PTR [rsp+0x40]
   140001795:	call   QWORD PTR [rip+0x1875]        # 0x140003010
   14000179b:	jmp    0x1400017a9
   14000179d:	lea    r8,[rip+0x1ba4]        # 0x140003348
   1400017a4:	call   0x14000125c
   1400017a9:	lea    r9,[rip+0x1bcc]        # 0x14000337c
   1400017b0:	mov    r8d,ebx
   1400017b3:	lea    rdx,[rbp+0x880]
   1400017ba:	mov    ecx,0x72
   1400017bf:	call   0x140001654
   1400017c4:	lea    r9,[rip+0x1b75]        # 0x140003340
   1400017cb:	mov    r8d,0x104
   1400017d1:	lea    rdx,[rbp+0x420]
   1400017d8:	mov    ecx,0x6d
   1400017dd:	call   0x140001654
   1400017e2:	lea    r9,[rbp+0x1d0]
   1400017e9:	mov    rdx,rbx
   1400017ec:	lea    r8,[rbp+0x880]
   1400017f3:	lea    rcx,[rbp+0x630]
   1400017fa:	call   0x1400013a0
   1400017ff:	movdqa xmm0,XMMWORD PTR [rip+0x1c39]        # 0x140003440
   140001807:	lea    rcx,[rbp+0x630]
   14000180e:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140001814:	call   QWORD PTR [rip+0x1806]        # 0x140003020
   14000181a:	inc    eax
   14000181c:	mov    rsi,0xffffffffffffffff
   140001823:	movsxd rbx,eax
   140001826:	mov    eax,0x2
   14000182b:	mul    rbx
   14000182e:	cmovo  rax,rsi
   140001832:	mov    rcx,rax
   140001835:	call   0x140002420
   14000183a:	lea    r8,[rbp+0x630]
   140001841:	mov    QWORD PTR [rsp+0x70],rax
   140001846:	mov    rdx,rbx
   140001849:	mov    rcx,rax
   14000184c:	call   0x14000125c
   140001851:	lea    rcx,[rbp+0x420]
   140001858:	call   QWORD PTR [rip+0x17c2]        # 0x140003020
   14000185e:	inc    eax
   140001860:	movsxd rbx,eax
   140001863:	lea    eax,[rsi+0x3]
   140001866:	mul    rbx
   140001869:	cmovo  rax,rsi
   14000186d:	mov    rcx,rax
   140001870:	call   0x140002420
   140001875:	lea    r8,[rbp+0x420]
   14000187c:	mov    QWORD PTR [rbp+0x1c0],rax
   140001883:	mov    rdx,rbx
   140001886:	mov    rcx,rax
   140001889:	call   0x14000125c
   14000188e:	lea    r8d,[rsi+0x6c]
   140001892:	lea    rcx,[rsp+0x50]
   140001897:	call   0x14000103c
   14000189c:	mov    rcx,QWORD PTR [rsp+0x70]
   1400018a1:	mov    QWORD PTR [rsp+0x50],r14
   1400018a6:	call   0x140002414
   1400018ab:	mov    rcx,QWORD PTR [rbp+0x1c0]
   1400018b2:	call   0x140002414
   1400018b7:	mov    rcx,QWORD PTR [rbp+0xad0]
   1400018be:	xor    rcx,rsp
   1400018c1:	call   0x1400027a0
   1400018c6:	lea    r11,[rsp+0xbe0]
   1400018ce:	mov    rbx,QWORD PTR [r11+0x18]
   1400018d2:	mov    rsi,QWORD PTR [r11+0x20]
   1400018d6:	mov    r14,QWORD PTR [r11+0x28]
   1400018da:	mov    rsp,r11
   1400018dd:	pop    rbp
   1400018de:	ret    
   1400018df:	int3   
   1400018e0:	int3   
   1400018e1:	int3   
   1400018e2:	int3   
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400018ed:	push   rdi
   1400018ee:	sub    rsp,0x270
   1400018f5:	mov    rax,QWORD PTR [rip+0x270c]        # 0x140004008
   1400018fc:	xor    rax,rsp
   1400018ff:	mov    QWORD PTR [rsp+0x260],rax
   140001907:	mov    rax,QWORD PTR [rsp+0x2b8]
   14000190f:	lea    r9,[rip+0x1a2a]        # 0x140003340
   140001916:	mov    rdi,rcx
   140001919:	mov    QWORD PTR [rcx+0x18],0x7f01
   140001921:	xor    ebx,ebx
   140001923:	mov    QWORD PTR [rsp+0x48],rax
   140001928:	mov    QWORD PTR [rcx+0x10],rbx
   14000192c:	lea    rdx,[rsp+0x50]
   140001931:	mov    ecx,DWORD PTR [rsp+0x2b0]
   140001938:	mov    r8d,0x104
   14000193e:	call   0x140001654
   140001943:	lea    rax,[rsp+0x48]
   140001948:	mov    QWORD PTR [rsp+0x40],rbx
   14000194d:	mov    QWORD PTR [rsp+0x30],rax
   140001952:	lea    rdx,[rsp+0x50]
   140001957:	lea    rax,[rsp+0x40]
   14000195c:	mov    DWORD PTR [rsp+0x28],ebx
   140001960:	xor    r9d,r9d
   140001963:	mov    QWORD PTR [rsp+0x20],rax
   140001968:	xor    r8d,r8d
   14000196b:	mov    ecx,0x500
   140001970:	call   QWORD PTR [rip+0x1692]        # 0x140003008
   140001976:	test   eax,eax
   140001978:	je     0x1400019c4
   14000197a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000197f:	call   QWORD PTR [rip+0x169b]        # 0x140003020
   140001985:	inc    eax
   140001987:	mov    rcx,0xffffffffffffffff
   14000198e:	movsxd rbx,eax
   140001991:	mov    eax,0x2
   140001996:	mul    rbx
   140001999:	cmovo  rax,rcx
   14000199d:	mov    rcx,rax
   1400019a0:	call   0x140002420
   1400019a5:	mov    r8,QWORD PTR [rsp+0x40]
   1400019aa:	mov    rdx,rbx
   1400019ad:	mov    rcx,rax
   1400019b0:	mov    QWORD PTR [rdi+0x20],rax
   1400019b4:	call   0x14000125c
   1400019b9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400019be:	call   QWORD PTR [rip+0x164c]        # 0x140003010
   1400019c4:	mov    r8d,0x6b
   1400019ca:	mov    rcx,rdi
   1400019cd:	call   0x14000103c
   1400019d2:	mov    rcx,QWORD PTR [rsp+0x260]
   1400019da:	xor    rcx,rsp
   1400019dd:	call   0x1400027a0
   1400019e2:	mov    rbx,QWORD PTR [rsp+0x288]
   1400019ea:	add    rsp,0x270
   1400019f1:	pop    rdi
   1400019f2:	ret    
   1400019f3:	int3   
   1400019f4:	int3   
   1400019f5:	int3   
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	mov    QWORD PTR [rsp+0x8],rbx
   140001a05:	mov    QWORD PTR [rsp+0x10],rsi
   140001a0a:	push   rdi
   140001a0b:	sub    rsp,0x30
   140001a0f:	mov    rdx,QWORD PTR [rcx+0x18]
   140001a13:	mov    rbx,rcx
   140001a16:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a1a:	call   QWORD PTR [rip+0x16f0]        # 0x140003110
   140001a20:	xor    esi,esi
   140001a22:	test   rax,rax
   140001a25:	je     0x140001a42
   140001a27:	mov    rcx,QWORD PTR [rbx+0x8]
   140001a2b:	lea    edx,[rsi+0x69]
   140001a2e:	mov    r9,rax
   140001a31:	mov    QWORD PTR [rsp+0x20],rsi
   140001a36:	mov    r8d,0x170
   140001a3c:	call   QWORD PTR [rip+0x16d6]        # 0x140003118
   140001a42:	mov    rcx,QWORD PTR [rbx+0x8]
   140001a46:	mov    edx,0x6a
   140001a4b:	call   QWORD PTR [rip+0x16d7]        # 0x140003128
   140001a51:	mov    rdx,QWORD PTR [rbx+0x20]
   140001a55:	mov    rcx,rax
   140001a58:	call   QWORD PTR [rip+0x16c2]        # 0x140003120
   140001a5e:	mov    rcx,QWORD PTR [rbx+0x8]
   140001a62:	cmp    WORD PTR [rbx+0x28],si
   140001a66:	je     0x140001a82
   140001a68:	mov    edx,0x68
   140001a6d:	call   QWORD PTR [rip+0x16b5]        # 0x140003128
   140001a73:	mov    rcx,rax
   140001a76:	lea    rdx,[rbx+0x28]
   140001a7a:	call   QWORD PTR [rip+0x16a0]        # 0x140003120
   140001a80:	jmp    0x140001ae1
   140001a82:	mov    edi,0x6c
   140001a87:	mov    edx,edi
   140001a89:	call   QWORD PTR [rip+0x1699]        # 0x140003128
   140001a8f:	mov    rcx,rax
   140001a92:	xor    edx,edx
   140001a94:	call   QWORD PTR [rip+0x1666]        # 0x140003100
   140001a9a:	mov    rcx,QWORD PTR [rbx+0x8]
   140001a9e:	lea    edx,[rdi-0x4]
   140001aa1:	call   QWORD PTR [rip+0x1681]        # 0x140003128
   140001aa7:	mov    rcx,rax
   140001aaa:	xor    edx,edx
   140001aac:	call   QWORD PTR [rip+0x164e]        # 0x140003100
   140001ab2:	mov    rcx,QWORD PTR [rbx+0x8]
   140001ab6:	mov    edx,edi
   140001ab8:	call   QWORD PTR [rip+0x166a]        # 0x140003128
   140001abe:	mov    rcx,rax
   140001ac1:	xor    edx,edx
   140001ac3:	call   QWORD PTR [rip+0x1677]        # 0x140003140
   140001ac9:	mov    rcx,QWORD PTR [rbx+0x8]
   140001acd:	lea    edx,[rdi-0x4]
   140001ad0:	call   QWORD PTR [rip+0x1652]        # 0x140003128
   140001ad6:	mov    rcx,rax
   140001ad9:	xor    edx,edx
   140001adb:	call   QWORD PTR [rip+0x165f]        # 0x140003140
   140001ae1:	mov    r9,QWORD PTR [rbx+0x270]
   140001ae8:	test   r9,r9
   140001aeb:	je     0x140001afe
   140001aed:	mov    rcx,QWORD PTR [rbx+0x8]
   140001af1:	xor    r8d,r8d
   140001af4:	lea    edx,[r8+0xc]
   140001af8:	call   QWORD PTR [rip+0x163a]        # 0x140003138
   140001afe:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b03:	xor    eax,eax
   140001b05:	mov    rsi,QWORD PTR [rsp+0x48]
   140001b0a:	add    rsp,0x30
   140001b0e:	pop    rdi
   140001b0f:	ret    
   140001b10:	int3   
   140001b11:	int3   
   140001b12:	int3   
   140001b13:	int3   
   140001b14:	int3   
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	rex push rbx
   140001b22:	sub    rsp,0x20
   140001b26:	xor    bl,bl
   140001b28:	cmp    dx,0x2
   140001b2c:	je     0x140001b32
   140001b2e:	mov    bl,0x1
   140001b30:	jmp    0x140001b3e
   140001b32:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b36:	xor    edx,edx
   140001b38:	call   QWORD PTR [rip+0x15f2]        # 0x140003130
   140001b3e:	mov    al,bl
   140001b40:	add    rsp,0x20
   140001b44:	pop    rbx
   140001b45:	ret    
   140001b46:	int3   
   140001b47:	int3   
   140001b48:	int3   
   140001b49:	int3   
   140001b4a:	int3   
   140001b4b:	int3   
   140001b4c:	int3   
   140001b4d:	int3   
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	mov    QWORD PTR [rsp+0x8],rbx
   140001b55:	push   rdi
   140001b56:	sub    rsp,0x20
   140001b5a:	lea    rax,[rip+0x1787]        # 0x1400032e8
   140001b61:	mov    rdi,rcx
   140001b64:	mov    QWORD PTR [rcx],rax
   140001b67:	mov    ebx,edx
   140001b69:	mov    rcx,QWORD PTR [rcx+0x20]
   140001b6d:	call   0x140002414
   140001b72:	mov    rcx,QWORD PTR [rdi+0x270]
   140001b79:	call   0x140002414
   140001b7e:	lea    rax,[rip+0x170b]        # 0x140003290
   140001b85:	mov    QWORD PTR [rdi],rax
   140001b88:	test   bl,0x1
   140001b8b:	je     0x140001b95
   140001b8d:	mov    rcx,rdi
   140001b90:	call   0x140002414
   140001b95:	mov    rax,rdi
   140001b98:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b9d:	add    rsp,0x20
   140001ba1:	pop    rdi
   140001ba2:	ret    
   140001ba3:	int3   
   140001ba4:	int3   
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	mov    rax,rsp
   140001baf:	mov    QWORD PTR [rax+0x10],rbx
   140001bb3:	mov    QWORD PTR [rax+0x18],rsi
   140001bb7:	mov    QWORD PTR [rax+0x20],rdi
   140001bbb:	push   rbp
   140001bbc:	push   r12
   140001bbe:	push   r13
   140001bc0:	push   r14
   140001bc2:	push   r15
   140001bc4:	lea    rbp,[rax-0x3b8]
   140001bcb:	sub    rsp,0x490
   140001bd2:	mov    rax,QWORD PTR [rip+0x242f]        # 0x140004008
   140001bd9:	xor    rax,rsp
   140001bdc:	mov    QWORD PTR [rbp+0x380],rax
   140001be3:	xor    r9d,r9d
   140001be6:	mov    DWORD PTR [rsp+0x48],ecx
   140001bea:	xor    r8d,r8d
   140001bed:	xor    ecx,ecx
   140001bef:	lea    ebx,[r9+0x1]
   140001bf3:	mov    edx,ebx
   140001bf5:	call   QWORD PTR [rip+0x142d]        # 0x140003028
   140001bfb:	xor    edx,edx
   140001bfd:	lea    rcx,[rbp+0x170]
   140001c04:	mov    r8d,0x20a
   140001c0a:	call   0x140002d36
   140001c0f:	mov    edx,0x104
   140001c14:	lea    rcx,[rbp+0x170]
   140001c1b:	call   QWORD PTR [rip+0x140f]        # 0x140003030
   140001c21:	mov    edx,eax
   140001c23:	lea    eax,[rdx-0x1]
   140001c26:	cmp    eax,0x102
   140001c2b:	ja     0x1400023d2
   140001c31:	lea    eax,[rdx-0x1]
   140001c34:	lea    r8d,[rbx+0x5b]
   140001c38:	cmp    WORD PTR [rbp+rax*2+0x170],r8w
   140001c41:	je     0x140001c4c
   140001c43:	mov    WORD PTR [rbp+rdx*2+0x170],r8w
   140001c4c:	xor    eax,eax
   140001c4e:	xor    esi,esi
   140001c50:	mov    QWORD PTR [rsp+0x50],rsi
   140001c55:	xor    r13d,r13d
   140001c58:	mov    QWORD PTR [rsp+0x58],rax
   140001c5d:	xor    r14d,r14d
   140001c60:	xor    r15d,r15d
   140001c63:	call   QWORD PTR [rip+0x13cf]        # 0x140003038
   140001c69:	mov    rcx,rax
   140001c6c:	lea    rdx,[rsp+0x48]
   140001c71:	call   QWORD PTR [rip+0x1449]        # 0x1400030c0
   140001c77:	mov    rdi,rax
   140001c7a:	test   rax,rax
   140001c7d:	jne    0x140001c90
   140001c7f:	mov    ecx,0x71
   140001c84:	call   0x140001420
   140001c89:	mov    eax,ebx
   140001c8b:	jmp    0x1400023de
   140001c90:	mov    eax,DWORD PTR [rsp+0x48]
   140001c94:	xor    edx,edx
   140001c96:	test   eax,eax
   140001c98:	jle    0x140001cac
   140001c9a:	mov    rcx,rdi
   140001c9d:	cmp    QWORD PTR [rcx],rsi
   140001ca0:	je     0x140001c7f
   140001ca2:	add    edx,ebx
   140001ca4:	add    rcx,0x8
   140001ca8:	cmp    edx,eax
   140001caa:	jl     0x140001c9d
   140001cac:	cmp    eax,0x2
   140001caf:	jne    0x140001d07
   140001cb1:	lea    rcx,[rip+0x1728]        # 0x1400033e0
   140001cb8:	call   QWORD PTR [rip+0x1362]        # 0x140003020
   140001cbe:	mov    rcx,QWORD PTR [rdi+0x8]
   140001cc2:	lea    rdx,[rip+0x1717]        # 0x1400033e0
   140001cc9:	mov    r8d,eax
   140001ccc:	call   QWORD PTR [rip+0x1406]        # 0x1400030d8
   140001cd2:	test   eax,eax
   140001cd4:	je     0x140001f58
   140001cda:	lea    rcx,[rip+0x16bf]        # 0x1400033a0
   140001ce1:	call   QWORD PTR [rip+0x1339]        # 0x140003020
   140001ce7:	mov    rcx,QWORD PTR [rdi+0x8]
   140001ceb:	lea    rdx,[rip+0x16ae]        # 0x1400033a0
   140001cf2:	mov    r8d,eax
   140001cf5:	call   QWORD PTR [rip+0x13dd]        # 0x1400030d8
   140001cfb:	test   eax,eax
   140001cfd:	je     0x140001f58
   140001d03:	mov    eax,DWORD PTR [rsp+0x48]
   140001d07:	xor    r12d,r12d
   140001d0a:	mov    DWORD PTR [rsp+0x40],ebx
   140001d0e:	cmp    eax,ebx
   140001d10:	jle    0x14000202f
   140001d16:	mov    rsi,rbx
   140001d19:	lea    rcx,[rip+0x16e0]        # 0x140003400
   140001d20:	call   QWORD PTR [rip+0x12fa]        # 0x140003020
   140001d26:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001d2a:	lea    rdx,[rip+0x16cf]        # 0x140003400
   140001d31:	mov    r8d,eax
   140001d34:	call   QWORD PTR [rip+0x139e]        # 0x1400030d8
   140001d3a:	test   eax,eax
   140001d3c:	je     0x140001fda
   140001d42:	lea    rcx,[rip+0x1677]        # 0x1400033c0
   140001d49:	call   QWORD PTR [rip+0x12d1]        # 0x140003020
   140001d4f:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001d53:	lea    rdx,[rip+0x1666]        # 0x1400033c0
   140001d5a:	mov    r8d,eax
   140001d5d:	call   QWORD PTR [rip+0x1375]        # 0x1400030d8
   140001d63:	test   eax,eax
   140001d65:	jne    0x140001d88
   140001d67:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001d6b:	call   QWORD PTR [rip+0x12af]        # 0x140003020
   140001d71:	lea    rcx,[rip+0x1688]        # 0x140003400
   140001d78:	mov    ebx,eax
   140001d7a:	call   QWORD PTR [rip+0x12a0]        # 0x140003020
   140001d80:	cmp    eax,ebx
   140001d82:	jl     0x140001fd6
   140001d88:	lea    rcx,[rip+0x1669]        # 0x1400033f8
   140001d8f:	call   QWORD PTR [rip+0x128b]        # 0x140003020
   140001d95:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001d99:	lea    rdx,[rip+0x1658]        # 0x1400033f8
   140001da0:	mov    r8d,eax
   140001da3:	call   QWORD PTR [rip+0x132f]        # 0x1400030d8
   140001da9:	test   eax,eax
   140001dab:	je     0x140001fbc
   140001db1:	lea    rcx,[rip+0x1600]        # 0x1400033b8
   140001db8:	call   QWORD PTR [rip+0x1262]        # 0x140003020
   140001dbe:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001dc2:	lea    rdx,[rip+0x15ef]        # 0x1400033b8
   140001dc9:	mov    r8d,eax
   140001dcc:	call   QWORD PTR [rip+0x1306]        # 0x1400030d8
   140001dd2:	test   eax,eax
   140001dd4:	jne    0x140001df7
   140001dd6:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001dda:	call   QWORD PTR [rip+0x1240]        # 0x140003020
   140001de0:	lea    rcx,[rip+0x1611]        # 0x1400033f8
   140001de7:	mov    ebx,eax
   140001de9:	call   QWORD PTR [rip+0x1231]        # 0x140003020
   140001def:	cmp    eax,ebx
   140001df1:	jl     0x140001fbc
   140001df7:	lea    rcx,[rip+0x15f2]        # 0x1400033f0
   140001dfe:	call   QWORD PTR [rip+0x121c]        # 0x140003020
   140001e04:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001e08:	lea    rdx,[rip+0x15e1]        # 0x1400033f0
   140001e0f:	mov    r8d,eax
   140001e12:	call   QWORD PTR [rip+0x12c0]        # 0x1400030d8
   140001e18:	test   eax,eax
   140001e1a:	je     0x140001fa2
   140001e20:	lea    rcx,[rip+0x1589]        # 0x1400033b0
   140001e27:	call   QWORD PTR [rip+0x11f3]        # 0x140003020
   140001e2d:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001e31:	lea    rdx,[rip+0x1578]        # 0x1400033b0
   140001e38:	mov    r8d,eax
   140001e3b:	call   QWORD PTR [rip+0x1297]        # 0x1400030d8
   140001e41:	test   eax,eax
   140001e43:	jne    0x140001e66
   140001e45:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001e49:	call   QWORD PTR [rip+0x11d1]        # 0x140003020
   140001e4f:	lea    rcx,[rip+0x159a]        # 0x1400033f0
   140001e56:	mov    ebx,eax
   140001e58:	call   QWORD PTR [rip+0x11c2]        # 0x140003020
   140001e5e:	cmp    eax,ebx
   140001e60:	jl     0x140001fa2
   140001e66:	lea    rcx,[rip+0x157b]        # 0x1400033e8
   140001e6d:	call   QWORD PTR [rip+0x11ad]        # 0x140003020
   140001e73:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001e77:	lea    rdx,[rip+0x156a]        # 0x1400033e8
   140001e7e:	mov    r8d,eax
   140001e81:	call   QWORD PTR [rip+0x1251]        # 0x1400030d8
   140001e87:	test   eax,eax
   140001e89:	je     0x140001f85
   140001e8f:	lea    rcx,[rip+0x1512]        # 0x1400033a8
   140001e96:	call   QWORD PTR [rip+0x1184]        # 0x140003020
   140001e9c:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001ea0:	lea    rdx,[rip+0x1501]        # 0x1400033a8
   140001ea7:	mov    r8d,eax
   140001eaa:	call   QWORD PTR [rip+0x1228]        # 0x1400030d8
   140001eb0:	test   eax,eax
   140001eb2:	jne    0x140001ed5
   140001eb4:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001eb8:	call   QWORD PTR [rip+0x1162]        # 0x140003020
   140001ebe:	lea    rcx,[rip+0x1523]        # 0x1400033e8
   140001ec5:	mov    ebx,eax
   140001ec7:	call   QWORD PTR [rip+0x1153]        # 0x140003020
   140001ecd:	cmp    eax,ebx
   140001ecf:	jl     0x140001f85
   140001ed5:	lea    rcx,[rip+0x152c]        # 0x140003408
   140001edc:	call   QWORD PTR [rip+0x113e]        # 0x140003020
   140001ee2:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001ee6:	lea    rdx,[rip+0x151b]        # 0x140003408
   140001eed:	mov    r8d,eax
   140001ef0:	call   QWORD PTR [rip+0x11e2]        # 0x1400030d8
   140001ef6:	test   eax,eax
   140001ef8:	je     0x140001f62
   140001efa:	lea    rcx,[rip+0x14c7]        # 0x1400033c8
   140001f01:	call   QWORD PTR [rip+0x1119]        # 0x140003020
   140001f07:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001f0b:	lea    rdx,[rip+0x14b6]        # 0x1400033c8
   140001f12:	mov    r8d,eax
   140001f15:	call   QWORD PTR [rip+0x11bd]        # 0x1400030d8
   140001f1b:	test   eax,eax
   140001f1d:	jne    0x140001f3c
   140001f1f:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140001f23:	call   QWORD PTR [rip+0x10f7]        # 0x140003020
   140001f29:	lea    rcx,[rip+0x14d8]        # 0x140003408
   140001f30:	mov    ebx,eax
   140001f32:	call   QWORD PTR [rip+0x10e8]        # 0x140003020
   140001f38:	cmp    eax,ebx
   140001f3a:	jl     0x140001f62
   140001f3c:	mov    ebx,DWORD PTR [rsp+0x40]
   140001f40:	cmp    rsi,0x1
   140001f44:	jne    0x140001ffa
   140001f4a:	mov    rax,QWORD PTR [rdi+0x8]
   140001f4e:	mov    QWORD PTR [rsp+0x50],rax
   140001f53:	jmp    0x140001ffa
   140001f58:	call   0x1400014dc
   140001f5d:	jmp    0x1400023dc
   140001f62:	lea    rcx,[rip+0x145f]        # 0x1400033c8
   140001f69:	call   QWORD PTR [rip+0x10b1]        # 0x140003020
   140001f6f:	movsxd rcx,eax
   140001f72:	mov    rax,QWORD PTR [rdi+rsi*8]
   140001f76:	lea    rax,[rax+rcx*2]
   140001f7a:	mov    QWORD PTR [rsp+0x50],rax
   140001f7f:	mov    ebx,DWORD PTR [rsp+0x40]
   140001f83:	jmp    0x140001ffa
   140001f85:	lea    rcx,[rip+0x145c]        # 0x1400033e8
   140001f8c:	call   QWORD PTR [rip+0x108e]        # 0x140003020
   140001f92:	movsxd rcx,eax
   140001f95:	mov    rax,QWORD PTR [rdi+rsi*8]
   140001f99:	lea    r15,[rax+rcx*2]
   140001f9d:	inc    r12d
   140001fa0:	jmp    0x140001f7f
   140001fa2:	lea    rcx,[rip+0x1447]        # 0x1400033f0
   140001fa9:	call   QWORD PTR [rip+0x1071]        # 0x140003020
   140001faf:	movsxd rcx,eax
   140001fb2:	mov    rax,QWORD PTR [rdi+rsi*8]
   140001fb6:	lea    r13,[rax+rcx*2]
   140001fba:	jmp    0x140001f9d
   140001fbc:	lea    rcx,[rip+0x1435]        # 0x1400033f8
   140001fc3:	call   QWORD PTR [rip+0x1057]        # 0x140003020
   140001fc9:	movsxd rcx,eax
   140001fcc:	mov    rax,QWORD PTR [rdi+rsi*8]
   140001fd0:	lea    r14,[rax+rcx*2]
   140001fd4:	jmp    0x140001f7f
   140001fd6:	mov    ebx,DWORD PTR [rsp+0x40]
   140001fda:	lea    rcx,[rip+0x141f]        # 0x140003400
   140001fe1:	call   QWORD PTR [rip+0x1039]        # 0x140003020
   140001fe7:	movsxd rcx,eax
   140001fea:	inc    r12d
   140001fed:	mov    rax,QWORD PTR [rdi+rsi*8]
   140001ff1:	lea    rax,[rax+rcx*2]
   140001ff5:	mov    QWORD PTR [rsp+0x58],rax
   140001ffa:	inc    ebx
   140001ffc:	inc    rsi
   140001fff:	mov    DWORD PTR [rsp+0x40],ebx
   140002003:	cmp    ebx,DWORD PTR [rsp+0x48]
   140002007:	jl     0x140001d19
   14000200d:	cmp    r12d,0x1
   140002011:	jg     0x140001f58
   140002017:	test   r14,r14
   14000201a:	je     0x14000202a
   14000201c:	test   r13,r13
   14000201f:	je     0x14000202a
   140002021:	test   r15,r15
   140002024:	jne    0x140001f58
   14000202a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000202f:	xor    edx,edx
   140002031:	lea    rcx,[rsp+0x60]
   140002036:	mov    r8d,0x208
   14000203c:	call   0x140002d36
   140002041:	mov    ebx,0x104
   140002046:	lea    r8,[rbp+0x170]
   14000204d:	mov    edx,ebx
   14000204f:	lea    rcx,[rsp+0x60]
   140002054:	call   0x14000125c
   140002059:	lea    r8,[rip+0x13c0]        # 0x140003420
   140002060:	mov    edx,ebx
   140002062:	lea    rcx,[rsp+0x60]
   140002067:	call   0x1400012d8
   14000206c:	and    QWORD PTR [rsp+0x30],0x0
   140002072:	lea    rcx,[rsp+0x60]
   140002077:	mov    r8d,0x3
   14000207d:	mov    DWORD PTR [rsp+0x28],0x80
   140002085:	xor    r9d,r9d
   140002088:	mov    DWORD PTR [rsp+0x20],r8d
   14000208d:	xor    edx,edx
   14000208f:	call   QWORD PTR [rip+0xfab]        # 0x140003040
   140002095:	or     rcx,0xffffffffffffffff
   140002099:	cmp    rax,rcx
   14000209c:	jne    0x1400020b2
   14000209e:	lea    rdx,[rsp+0x60]
   1400020a3:	mov    ecx,0x64
   1400020a8:	call   0x140001420
   1400020ad:	jmp    0x1400023dc
   1400020b2:	mov    rcx,rax
   1400020b5:	call   QWORD PTR [rip+0xf8d]        # 0x140003048
   1400020bb:	xor    ebx,ebx
   1400020bd:	test   rsi,rsi
   1400020c0:	je     0x1400020cd
   1400020c2:	mov    rcx,rsi
   1400020c5:	call   QWORD PTR [rip+0xf55]        # 0x140003020
   1400020cb:	mov    ebx,eax
   1400020cd:	mov    r12,QWORD PTR [rsp+0x58]
   1400020d2:	test   r12,r12
   1400020d5:	je     0x1400020e5
   1400020d7:	mov    rcx,r12
   1400020da:	call   QWORD PTR [rip+0xf40]        # 0x140003020
   1400020e0:	add    eax,0x4
   1400020e3:	add    ebx,eax
   1400020e5:	test   r13,r13
   1400020e8:	je     0x1400020f5
   1400020ea:	mov    rcx,r13
   1400020ed:	call   QWORD PTR [rip+0xf2d]        # 0x140003020
   1400020f3:	add    ebx,eax
   1400020f5:	test   r14,r14
   1400020f8:	je     0x140002105
   1400020fa:	mov    rcx,r14
   1400020fd:	call   QWORD PTR [rip+0xf1d]        # 0x140003020
   140002103:	add    ebx,eax
   140002105:	test   r15,r15
   140002108:	je     0x140002118
   14000210a:	mov    rcx,r15
   14000210d:	call   QWORD PTR [rip+0xf0d]        # 0x140003020
   140002113:	add    ebx,0x4
   140002116:	add    ebx,eax
   140002118:	add    ebx,0x22a
   14000211e:	mov    rcx,0xffffffffffffffff
   140002125:	movsxd rdi,ebx
   140002128:	mov    eax,0x2
   14000212d:	mul    rdi
   140002130:	cmovo  rax,rcx
   140002134:	mov    rcx,rax
   140002137:	call   0x140002420
   14000213c:	mov    rbx,rax
   14000213f:	test   rax,rax
   140002142:	je     0x1400023dc
   140002148:	xor    eax,eax
   14000214a:	mov    QWORD PTR [rbx],rax
   14000214d:	test   rsi,rsi
   140002150:	je     0x140002184
   140002152:	lea    r8,[rip+0x122b]        # 0x140003384
   140002159:	mov    rdx,rdi
   14000215c:	mov    rcx,rbx
   14000215f:	call   0x1400012d8
   140002164:	lea    r8,[rip+0x129d]        # 0x140003408
   14000216b:	mov    rdx,rdi
   14000216e:	mov    rcx,rbx
   140002171:	call   0x1400012d8
   140002176:	mov    r8,rsi
   140002179:	mov    rdx,rdi
   14000217c:	mov    rcx,rbx
   14000217f:	call   0x1400012d8
   140002184:	lea    rsi,[rip+0x11fd]        # 0x140003388
   14000218b:	test   r12,r12
   14000218e:	je     0x1400021de
   140002190:	lea    r8,[rip+0x11ed]        # 0x140003384
   140002197:	mov    rdx,rdi
   14000219a:	mov    rcx,rbx
   14000219d:	call   0x1400012d8
   1400021a2:	lea    r8,[rip+0x1257]        # 0x140003400
   1400021a9:	mov    rdx,rdi
   1400021ac:	mov    rcx,rbx
   1400021af:	call   0x1400012d8
   1400021b4:	mov    r8,rsi
   1400021b7:	mov    rdx,rdi
   1400021ba:	mov    rcx,rbx
   1400021bd:	call   0x1400012d8
   1400021c2:	mov    r8,r12
   1400021c5:	mov    rdx,rdi
   1400021c8:	mov    rcx,rbx
   1400021cb:	call   0x1400012d8
   1400021d0:	mov    r8,rsi
   1400021d3:	mov    rdx,rdi
   1400021d6:	mov    rcx,rbx
   1400021d9:	call   0x1400012d8
   1400021de:	lea    r12,[rip+0x119f]        # 0x140003384
   1400021e5:	test   r13,r13
   1400021e8:	je     0x140002287
   1400021ee:	mov    r8,r12
   1400021f1:	mov    rdx,rdi
   1400021f4:	mov    rcx,rbx
   1400021f7:	call   0x1400012d8
   1400021fc:	lea    r8,[rip+0x11ed]        # 0x1400033f0
   140002203:	mov    rdx,rdi
   140002206:	mov    rcx,rbx
   140002209:	call   0x1400012d8
   14000220e:	mov    r8,rsi
   140002211:	mov    rdx,rdi
   140002214:	mov    rcx,rbx
   140002217:	call   0x1400012d8
   14000221c:	mov    r8,r13
   14000221f:	mov    rdx,rdi
   140002222:	mov    rcx,rbx
   140002225:	call   0x1400012d8
   14000222a:	mov    r8,rsi
   14000222d:	mov    rdx,rdi
   140002230:	mov    rcx,rbx
   140002233:	call   0x1400012d8
   140002238:	test   r14,r14
   14000223b:	je     0x140002287
   14000223d:	mov    r8,r12
   140002240:	mov    rdx,rdi
   140002243:	mov    rcx,rbx
   140002246:	call   0x1400012d8
   14000224b:	lea    r8,[rip+0x11a6]        # 0x1400033f8
   140002252:	mov    rdx,rdi
   140002255:	mov    rcx,rbx
   140002258:	call   0x1400012d8
   14000225d:	mov    r8,rsi
   140002260:	mov    rdx,rdi
   140002263:	mov    rcx,rbx
   140002266:	call   0x1400012d8
   14000226b:	mov    r8,r14
   14000226e:	mov    rdx,rdi
   140002271:	mov    rcx,rbx
   140002274:	call   0x1400012d8
   140002279:	mov    r8,rsi
   14000227c:	mov    rdx,rdi
   14000227f:	mov    rcx,rbx
   140002282:	call   0x1400012d8
   140002287:	test   r15,r15
   14000228a:	je     0x14000232d
   140002290:	mov    r8,r12
   140002293:	mov    rdx,rdi
   140002296:	mov    rcx,rbx
   140002299:	call   0x1400012d8
   14000229e:	lea    r8,[rip+0x1143]        # 0x1400033e8
   1400022a5:	mov    rdx,rdi
   1400022a8:	mov    rcx,rbx
   1400022ab:	call   0x1400012d8
   1400022b0:	mov    r8,rsi
   1400022b3:	mov    rdx,rdi
   1400022b6:	mov    rcx,rbx
   1400022b9:	call   0x1400012d8
   1400022be:	mov    r8,r15
   1400022c1:	mov    rdx,rdi
   1400022c4:	mov    rcx,rbx
   1400022c7:	call   0x1400012d8
   1400022cc:	mov    r8,rsi
   1400022cf:	mov    rdx,rdi
   1400022d2:	mov    rcx,rbx
   1400022d5:	call   0x1400012d8
   1400022da:	test   r14,r14
   1400022dd:	je     0x140002386
   1400022e3:	mov    r8,r12
   1400022e6:	mov    rdx,rdi
   1400022e9:	mov    rcx,rbx
   1400022ec:	call   0x1400012d8
   1400022f1:	lea    r8,[rip+0x1100]        # 0x1400033f8
   1400022f8:	mov    rdx,rdi
   1400022fb:	mov    rcx,rbx
   1400022fe:	call   0x1400012d8
   140002303:	mov    r8,rsi
   140002306:	mov    rdx,rdi
   140002309:	mov    rcx,rbx
   14000230c:	call   0x1400012d8
   140002311:	mov    r8,r14
   140002314:	mov    rdx,rdi
   140002317:	mov    rcx,rbx
   14000231a:	call   0x1400012d8
   14000231f:	mov    r8,rsi
   140002322:	mov    rdx,rdi
   140002325:	mov    rcx,rbx
   140002328:	call   0x1400012d8
   14000232d:	test   r14,r14
   140002330:	je     0x140002386
   140002332:	test   r15,r15
   140002335:	jne    0x140002386
   140002337:	test   r13,r13
   14000233a:	jne    0x140002386
   14000233c:	mov    r8,r12
   14000233f:	mov    rdx,rdi
   140002342:	mov    rcx,rbx
   140002345:	call   0x1400012d8
   14000234a:	lea    r8,[rip+0x10a7]        # 0x1400033f8
   140002351:	mov    rdx,rdi
   140002354:	mov    rcx,rbx
   140002357:	call   0x1400012d8
   14000235c:	mov    r8,rsi
   14000235f:	mov    rdx,rdi
   140002362:	mov    rcx,rbx
   140002365:	call   0x1400012d8
   14000236a:	mov    r8,r14
   14000236d:	mov    rdx,rdi
   140002370:	mov    rcx,rbx
   140002373:	call   0x1400012d8
   140002378:	mov    r8,rsi
   14000237b:	mov    rdx,rdi
   14000237e:	mov    rcx,rbx
   140002381:	call   0x1400012d8
   140002386:	and    DWORD PTR [rsp+0x28],0x0
   14000238b:	lea    rax,[rip+0x100a]        # 0x14000339c
   140002392:	mov    r9,rbx
   140002395:	mov    QWORD PTR [rsp+0x20],rax
   14000239a:	lea    r8,[rsp+0x60]
   14000239f:	xor    ecx,ecx
   1400023a1:	lea    rdx,[rip+0xfe8]        # 0x140003390
   1400023a8:	call   QWORD PTR [rip+0xd1a]        # 0x1400030c8
   1400023ae:	cmp    rax,0x20
   1400023b2:	jg     0x1400023c8
   1400023b4:	call   QWORD PTR [rip+0xc5e]        # 0x140003018
   1400023ba:	cmp    eax,0x4c7
   1400023bf:	je     0x1400023c8
   1400023c1:	mov    ecx,eax
   1400023c3:	call   0x1400016e8
   1400023c8:	mov    rcx,rbx
   1400023cb:	call   0x140002414
   1400023d0:	jmp    0x1400023dc
   1400023d2:	mov    ecx,0x66
   1400023d7:	call   0x140001420
   1400023dc:	xor    eax,eax
   1400023de:	mov    rcx,QWORD PTR [rbp+0x380]
   1400023e5:	xor    rcx,rsp
   1400023e8:	call   0x1400027a0
   1400023ed:	lea    r11,[rsp+0x490]
   1400023f5:	mov    rbx,QWORD PTR [r11+0x38]
   1400023f9:	mov    rsi,QWORD PTR [r11+0x40]
   1400023fd:	mov    rdi,QWORD PTR [r11+0x48]
   140002401:	mov    rsp,r11
   140002404:	pop    r15
   140002406:	pop    r14
   140002408:	pop    r13
   14000240a:	pop    r12
   14000240c:	pop    rbp
   14000240d:	ret    
   14000240e:	int3   
   14000240f:	int3   
   140002410:	int3   
   140002411:	int3   
   140002412:	int3   
   140002413:	int3   
   140002414:	jmp    0x1400027c4
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	mov    QWORD PTR [rsp+0x8],rbx
   140002425:	push   rdi
   140002426:	sub    rsp,0x20
   14000242a:	mov    rdi,rcx
   14000242d:	jmp    0x14000243e
   14000242f:	mov    rcx,rdi
   140002432:	call   0x1400027dc
   140002437:	test   eax,eax
   140002439:	je     0x14000244b
   14000243b:	mov    rcx,rdi
   14000243e:	call   0x1400027d0
   140002443:	mov    rbx,rax
   140002446:	test   rax,rax
   140002449:	je     0x14000242f
   14000244b:	mov    rax,rbx
   14000244e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002453:	add    rsp,0x20
   140002457:	pop    rdi
   140002458:	ret    
   140002459:	int3   
   14000245a:	int3   
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	sub    rsp,0x28
   140002464:	mov    eax,0x5a4d
   140002469:	cmp    WORD PTR [rip+0xffffffffffffdb90],ax        # 0x140000000
   140002470:	je     0x140002476
   140002472:	xor    eax,eax
   140002474:	jmp    0x1400024c5
   140002476:	movsxd rcx,DWORD PTR [rip+0xffffffffffffdbbf]        # 0x14000003c
   14000247d:	lea    rax,[rip+0xffffffffffffdb7c]        # 0x140000000
   140002484:	add    rcx,rax
   140002487:	cmp    DWORD PTR [rcx],0x4550
   14000248d:	jne    0x140002472
   14000248f:	movzx  eax,WORD PTR [rcx+0x18]
   140002493:	cmp    eax,0x10b
   140002498:	je     0x1400024b4
   14000249a:	cmp    eax,0x20b
   14000249f:	jne    0x140002472
   1400024a1:	xor    eax,eax
   1400024a3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400024aa:	jbe    0x1400024c5
   1400024ac:	cmp    DWORD PTR [rcx+0xf8],eax
   1400024b2:	jmp    0x1400024c2
   1400024b4:	xor    eax,eax
   1400024b6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400024ba:	jbe    0x1400024c5
   1400024bc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400024c2:	setne  al
   1400024c5:	mov    ecx,0x1
   1400024ca:	mov    DWORD PTR [rip+0x1b70],eax        # 0x140004040
   1400024d0:	call   0x1400028b8
   1400024d5:	mov    ecx,eax
   1400024d7:	call   QWORD PTR [rip+0xcbb]        # 0x140003198
   1400024dd:	mov    rcx,QWORD PTR [rip+0xc7c]        # 0x140003160
   1400024e4:	or     rax,0xffffffffffffffff
   1400024e8:	mov    QWORD PTR [rip+0x20e9],rax        # 0x1400045d8
   1400024ef:	mov    QWORD PTR [rip+0x20ea],rax        # 0x1400045e0
   1400024f6:	mov    eax,DWORD PTR [rip+0x1b58]        # 0x140004054
   1400024fc:	mov    DWORD PTR [rcx],eax
   1400024fe:	mov    rcx,QWORD PTR [rip+0xc53]        # 0x140003158
   140002505:	mov    eax,DWORD PTR [rip+0x1b3d]        # 0x140004048
   14000250b:	mov    DWORD PTR [rcx],eax
   14000250d:	call   0x140001240
   140002512:	cmp    DWORD PTR [rip+0x1ae7],0x0        # 0x140004000
   140002519:	jne    0x140002528
   14000251b:	lea    rcx,[rip+0xffffffffffffed1e]        # 0x140001240
   140002522:	call   QWORD PTR [rip+0xc50]        # 0x140003178
   140002528:	xor    eax,eax
   14000252a:	add    rsp,0x28
   14000252e:	ret    
   14000252f:	int3   
   140002530:	int3   
   140002531:	int3   
   140002532:	int3   
   140002533:	int3   
   140002534:	int3   
   140002535:	int3   
   140002536:	int3   
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	sub    rsp,0x38
   140002544:	mov    eax,DWORD PTR [rip+0x1b06]        # 0x140004050
   14000254a:	lea    r8,[rip+0x1ae7]        # 0x140004038
   140002551:	mov    r9d,DWORD PTR [rip+0x1af4]        # 0x14000404c
   140002558:	lea    rdx,[rip+0x1ad1]        # 0x140004030
   14000255f:	mov    DWORD PTR [rip+0x1adf],eax        # 0x140004044
   140002565:	lea    rcx,[rip+0x1abc]        # 0x140004028
   14000256c:	lea    rax,[rip+0x1ad1]        # 0x140004044
   140002573:	mov    QWORD PTR [rsp+0x20],rax
   140002578:	call   QWORD PTR [rip+0xc22]        # 0x1400031a0
   14000257e:	mov    DWORD PTR [rip+0x1aa8],eax        # 0x14000402c
   140002584:	add    rsp,0x38
   140002588:	ret    
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    rax,rsp
   140002593:	mov    QWORD PTR [rax+0x8],rbx
   140002597:	mov    QWORD PTR [rax+0x10],rsi
   14000259b:	mov    QWORD PTR [rax+0x18],rdi
   14000259f:	mov    QWORD PTR [rax+0x20],r12
   1400025a3:	push   r14
   1400025a5:	sub    rsp,0x30
   1400025a9:	mov    rax,QWORD PTR gs:0x30
   1400025b2:	mov    rbx,QWORD PTR [rax+0x8]
   1400025b6:	xor    r14d,r14d
   1400025b9:	xor    eax,eax
   1400025bb:	lock cmpxchg QWORD PTR [rip+0x2024],rbx        # 0x1400045e8
   1400025c4:	je     0x1400025e2
   1400025c6:	cmp    rax,rbx
   1400025c9:	jne    0x1400025d5
   1400025cb:	mov    ebx,0x1
   1400025d0:	mov    r14d,ebx
   1400025d3:	jmp    0x1400025e7
   1400025d5:	mov    ecx,0x3e8
   1400025da:	call   QWORD PTR [rip+0xac8]        # 0x1400030a8
   1400025e0:	jmp    0x1400025b9
   1400025e2:	mov    ebx,0x1
   1400025e7:	mov    eax,DWORD PTR [rip+0x2003]        # 0x1400045f0
   1400025ed:	cmp    eax,ebx
   1400025ef:	jne    0x1400025fd
   1400025f1:	mov    ecx,0x1f
   1400025f6:	call   0x140002904
   1400025fb:	jmp    0x140002666
   1400025fd:	mov    eax,DWORD PTR [rip+0x1fed]        # 0x1400045f0
   140002603:	test   eax,eax
   140002605:	jne    0x140002660
   140002607:	mov    DWORD PTR [rip+0x1fe3],ebx        # 0x1400045f0
   14000260d:	lea    r12,[rip+0xc1c]        # 0x140003230
   140002614:	lea    rdi,[rip+0xbfd]        # 0x140003218
   14000261b:	mov    QWORD PTR [rsp+0x28],rdi
   140002620:	mov    DWORD PTR [rsp+0x20],eax
   140002624:	cmp    rdi,r12
   140002627:	jae    0x140002652
   140002629:	test   eax,eax
   14000262b:	jne    0x140002656
   14000262d:	mov    rsi,QWORD PTR [rdi]
   140002630:	test   rsi,rsi
   140002633:	je     0x140002647
   140002635:	mov    rcx,rsi
   140002638:	mov    rax,QWORD PTR [rip+0xbb1]        # 0x1400031f0
   14000263f:	call   rax
   140002641:	call   rsi
   140002643:	mov    DWORD PTR [rsp+0x20],eax
   140002647:	add    rdi,0x8
   14000264b:	mov    QWORD PTR [rsp+0x28],rdi
   140002650:	jmp    0x140002624
   140002652:	test   eax,eax
   140002654:	je     0x140002666
   140002656:	mov    eax,0xff
   14000265b:	jmp    0x140002747
   140002660:	mov    DWORD PTR [rip+0x19be],ebx        # 0x140004024
   140002666:	mov    eax,DWORD PTR [rip+0x1f84]        # 0x1400045f0
   14000266c:	cmp    eax,ebx
   14000266e:	jne    0x14000268d
   140002670:	lea    rdx,[rip+0xb99]        # 0x140003210
   140002677:	lea    rcx,[rip+0xb82]        # 0x140003200
   14000267e:	call   0x140002aca
   140002683:	mov    DWORD PTR [rip+0x1f63],0x2        # 0x1400045f0
   14000268d:	test   r14d,r14d
   140002690:	jne    0x14000269b
   140002692:	xor    eax,eax
   140002694:	xchg   QWORD PTR [rip+0x1f4d],rax        # 0x1400045e8
   14000269b:	cmp    QWORD PTR [rip+0x1f55],0x0        # 0x1400045f8
   1400026a3:	je     0x1400026d3
   1400026a5:	lea    rcx,[rip+0x1f4c]        # 0x1400045f8
   1400026ac:	call   0x140002960
   1400026b1:	test   eax,eax
   1400026b3:	je     0x1400026d3
   1400026b5:	mov    rbx,QWORD PTR [rip+0x1f3c]        # 0x1400045f8
   1400026bc:	mov    rcx,rbx
   1400026bf:	mov    rax,QWORD PTR [rip+0xb2a]        # 0x1400031f0
   1400026c6:	call   rax
   1400026c8:	xor    r8d,r8d
   1400026cb:	lea    edx,[r8+0x2]
   1400026cf:	xor    ecx,ecx
   1400026d1:	call   rbx
   1400026d3:	mov    r8,QWORD PTR [rip+0x195e]        # 0x140004038
   1400026da:	mov    rdx,QWORD PTR [rip+0x194f]        # 0x140004030
   1400026e1:	mov    ecx,DWORD PTR [rip+0x1941]        # 0x140004028
   1400026e7:	call   0x140001bac
   1400026ec:	mov    DWORD PTR [rip+0x192e],eax        # 0x140004020
   1400026f2:	cmp    DWORD PTR [rip+0x1947],0x0        # 0x140004040
   1400026f9:	jne    0x140002703
   1400026fb:	mov    ecx,eax
   1400026fd:	call   QWORD PTR [rip+0xa8d]        # 0x140003190
   140002703:	cmp    DWORD PTR [rip+0x191a],0x0        # 0x140004024
   14000270a:	jne    0x140002718
   14000270c:	call   QWORD PTR [rip+0xa6e]        # 0x140003180
   140002712:	mov    eax,DWORD PTR [rip+0x1908]        # 0x140004020
   140002718:	jmp    0x140002747
   14000271a:	mov    DWORD PTR [rip+0x1900],eax        # 0x140004020
   140002720:	cmp    DWORD PTR [rip+0x1919],0x0        # 0x140004040
   140002727:	jne    0x140002732
   140002729:	mov    ecx,eax
   14000272b:	call   QWORD PTR [rip+0xa57]        # 0x140003188
   140002731:	int3   
   140002732:	cmp    DWORD PTR [rip+0x18eb],0x0        # 0x140004024
   140002739:	jne    0x140002747
   14000273b:	call   QWORD PTR [rip+0xa3f]        # 0x140003180
   140002741:	mov    eax,DWORD PTR [rip+0x18d9]        # 0x140004020
   140002747:	mov    rbx,QWORD PTR [rsp+0x40]
   14000274c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002751:	mov    rdi,QWORD PTR [rsp+0x50]
   140002756:	mov    r12,QWORD PTR [rsp+0x58]
   14000275b:	add    rsp,0x30
   14000275f:	pop    r14
   140002761:	ret    
   140002762:	int3   
   140002763:	int3   
   140002764:	int3   
   140002765:	int3   
   140002766:	int3   
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	sub    rsp,0x28
   140002774:	call   0x1400029f4
   140002779:	add    rsp,0x28
   14000277d:	jmp    0x140002590
   140002782:	int3   
   140002783:	int3   
   140002784:	int3   
   140002785:	int3   
   140002786:	int3   
   140002787:	int3   
   140002788:	int3   
   140002789:	int3   
   14000278a:	int3   
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	int3   
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	int3   
   140002795:	int3   
   140002796:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400027a0:	cmp    rcx,QWORD PTR [rip+0x1861]        # 0x140004008
   1400027a7:	jne    0x1400027b9
   1400027a9:	rol    rcx,0x10
   1400027ad:	test   cx,0xffff
   1400027b2:	jne    0x1400027b5
   1400027b4:	ret    
   1400027b5:	ror    rcx,0x10
   1400027b9:	jmp    0x140002b20
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	int3   
   1400027c1:	int3   
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	jmp    QWORD PTR [rip+0x9f6]        # 0x1400031c0
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	jmp    QWORD PTR [rip+0x9e2]        # 0x1400031b8
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	jmp    QWORD PTR [rip+0x9ce]        # 0x1400031b0
   1400027e2:	int3   
   1400027e3:	int3   
   1400027e4:	int3   
   1400027e5:	int3   
   1400027e6:	int3   
   1400027e7:	int3   
   1400027e8:	int3   
   1400027e9:	int3   
   1400027ea:	int3   
   1400027eb:	int3   
   1400027ec:	int3   
   1400027ed:	int3   
   1400027ee:	int3   
   1400027ef:	int3   
   1400027f0:	sub    rsp,0x28
   1400027f4:	mov    rax,QWORD PTR [rcx]
   1400027f7:	cmp    DWORD PTR [rax],0xe06d7363
   1400027fd:	jne    0x140002822
   1400027ff:	cmp    DWORD PTR [rax+0x18],0x4
   140002803:	jne    0x140002822
   140002805:	mov    ecx,DWORD PTR [rax+0x20]
   140002808:	lea    eax,[rcx-0x19930520]
   14000280e:	cmp    eax,0x2
   140002811:	jbe    0x14000281b
   140002813:	cmp    ecx,0x1994000
   140002819:	jne    0x140002822
   14000281b:	call   QWORD PTR [rip+0x9af]        # 0x1400031d0
   140002821:	int3   
   140002822:	xor    eax,eax
   140002824:	add    rsp,0x28
   140002828:	ret    
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	sub    rsp,0x28
   140002834:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400027f0
   14000283b:	call   QWORD PTR [rip+0x85f]        # 0x1400030a0
   140002841:	xor    eax,eax
   140002843:	add    rsp,0x28
   140002847:	ret    
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	jmp    QWORD PTR [rip+0x954]        # 0x1400031a8
   140002854:	int3   
   140002855:	int3   
   140002856:	int3   
   140002857:	int3   
   140002858:	int3   
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	sub    rsp,0x18
   140002860:	xor    edx,edx
   140002862:	lea    rax,[rcx-0x1]
   140002866:	cmp    rax,0xfffffffffffffffd
   14000286a:	ja     0x1400028a8
   14000286c:	mov    eax,0x5a4d
   140002871:	cmp    WORD PTR [rcx],ax
   140002874:	jne    0x1400028a0
   140002876:	cmp    DWORD PTR [rcx+0x3c],edx
   140002879:	jl     0x1400028a0
   14000287b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140002882:	jae    0x1400028a0
   140002884:	movsxd rax,DWORD PTR [rcx+0x3c]
   140002888:	add    rax,rcx
   14000288b:	mov    QWORD PTR [rsp],rax
   14000288f:	cmp    DWORD PTR [rax],0x4550
   140002895:	cmovne rax,rdx
   140002899:	mov    rdx,rax
   14000289c:	mov    QWORD PTR [rsp],rax
   1400028a0:	jmp    0x1400028a8
   1400028a2:	xor    edx,edx
   1400028a4:	mov    QWORD PTR [rsp],rdx
   1400028a8:	mov    rax,rdx
   1400028ab:	add    rsp,0x18
   1400028af:	ret    
   1400028b0:	int3   
   1400028b1:	int3   
   1400028b2:	int3   
   1400028b3:	int3   
   1400028b4:	int3   
   1400028b5:	int3   
   1400028b6:	int3   
   1400028b7:	int3   
   1400028b8:	rex push rbx
   1400028ba:	sub    rsp,0x20
   1400028be:	mov    ebx,ecx
   1400028c0:	xor    ecx,ecx
   1400028c2:	call   QWORD PTR [rip+0x738]        # 0x140003000
   1400028c8:	test   rax,rax
   1400028cb:	je     0x1400028f5
   1400028cd:	mov    rcx,rax
   1400028d0:	call   0x14000285c
   1400028d5:	test   rax,rax
   1400028d8:	je     0x1400028f5
   1400028da:	mov    ecx,0x2
   1400028df:	cmp    WORD PTR [rax+0x5c],cx
   1400028e3:	jne    0x1400028e9
   1400028e5:	mov    eax,ecx
   1400028e7:	jmp    0x1400028f7
   1400028e9:	cmp    WORD PTR [rax+0x5c],0x3
   1400028ee:	mov    eax,0x1
   1400028f3:	je     0x1400028f7
   1400028f5:	mov    eax,ebx
   1400028f7:	add    rsp,0x20
   1400028fb:	pop    rbx
   1400028fc:	ret    
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	int3   
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	jmp    QWORD PTR [rip+0x8ce]        # 0x1400031d8
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	movsxd r8,DWORD PTR [rcx+0x3c]
   140002914:	xor    r9d,r9d
   140002917:	add    r8,rcx
   14000291a:	mov    r10,rdx
   14000291d:	movzx  eax,WORD PTR [r8+0x14]
   140002922:	movzx  r11d,WORD PTR [r8+0x6]
   140002927:	add    rax,0x18
   14000292b:	add    rax,r8
   14000292e:	test   r11d,r11d
   140002931:	je     0x140002951
   140002933:	mov    edx,DWORD PTR [rax+0xc]
   140002936:	cmp    r10,rdx
   140002939:	jb     0x140002945
   14000293b:	mov    ecx,DWORD PTR [rax+0x8]
   14000293e:	add    ecx,edx
   140002940:	cmp    r10,rcx
   140002943:	jb     0x140002953
   140002945:	inc    r9d
   140002948:	add    rax,0x28
   14000294c:	cmp    r9d,r11d
   14000294f:	jb     0x140002933
   140002951:	xor    eax,eax
   140002953:	ret    
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	mov    QWORD PTR [rsp+0x8],rbx
   140002965:	push   rdi
   140002966:	sub    rsp,0x20
   14000296a:	mov    rbx,rcx
   14000296d:	lea    rdi,[rip+0xffffffffffffd68c]        # 0x140000000
   140002974:	mov    rcx,rdi
   140002977:	call   0x1400029c0
   14000297c:	test   eax,eax
   14000297e:	je     0x1400029a2
   140002980:	sub    rbx,rdi
   140002983:	mov    rdx,rbx
   140002986:	mov    rcx,rdi
   140002989:	call   0x140002910
   14000298e:	test   rax,rax
   140002991:	je     0x1400029a2
   140002993:	mov    eax,DWORD PTR [rax+0x24]
   140002996:	shr    eax,0x1f
   140002999:	not    eax
   14000299b:	and    eax,0x1
   14000299e:	jmp    0x1400029a2
   1400029a0:	xor    eax,eax
   1400029a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029a7:	add    rsp,0x20
   1400029ab:	pop    rdi
   1400029ac:	ret    
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	int3   
   1400029b1:	int3   
   1400029b2:	int3   
   1400029b3:	int3   
   1400029b4:	int3   
   1400029b5:	int3   
   1400029b6:	int3   
   1400029b7:	int3   
   1400029b8:	int3   
   1400029b9:	int3   
   1400029ba:	int3   
   1400029bb:	int3   
   1400029bc:	int3   
   1400029bd:	int3   
   1400029be:	int3   
   1400029bf:	int3   
   1400029c0:	mov    rax,rcx
   1400029c3:	mov    ecx,0x5a4d
   1400029c8:	cmp    WORD PTR [rax],cx
   1400029cb:	je     0x1400029d0
   1400029cd:	xor    eax,eax
   1400029cf:	ret    
   1400029d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400029d4:	add    rcx,rax
   1400029d7:	xor    eax,eax
   1400029d9:	cmp    DWORD PTR [rcx],0x4550
   1400029df:	jne    0x1400029ed
   1400029e1:	mov    edx,0x20b
   1400029e6:	cmp    WORD PTR [rcx+0x18],dx
   1400029ea:	sete   al
   1400029ed:	ret    
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	int3   
   1400029f1:	int3   
   1400029f2:	int3   
   1400029f3:	int3   
   1400029f4:	mov    QWORD PTR [rsp+0x20],rbx
   1400029f9:	push   rbp
   1400029fa:	mov    rbp,rsp
   1400029fd:	sub    rsp,0x20
   140002a01:	and    QWORD PTR [rbp+0x18],0x0
   140002a06:	movabs rbx,0x2b992ddfa232
   140002a10:	mov    rax,QWORD PTR [rip+0x15f1]        # 0x140004008
   140002a17:	cmp    rax,rbx
   140002a1a:	jne    0x140002aaf
   140002a20:	lea    rcx,[rbp+0x18]
   140002a24:	call   QWORD PTR [rip+0x656]        # 0x140003080
   140002a2a:	mov    rax,QWORD PTR [rbp+0x18]
   140002a2e:	mov    QWORD PTR [rbp+0x10],rax
   140002a32:	call   QWORD PTR [rip+0x658]        # 0x140003090
   140002a38:	mov    eax,eax
   140002a3a:	xor    QWORD PTR [rbp+0x10],rax
   140002a3e:	call   QWORD PTR [rip+0x644]        # 0x140003088
   140002a44:	mov    eax,eax
   140002a46:	xor    QWORD PTR [rbp+0x10],rax
   140002a4a:	call   QWORD PTR [rip+0x628]        # 0x140003078
   140002a50:	mov    eax,eax
   140002a52:	shl    rax,0x18
   140002a56:	xor    QWORD PTR [rbp+0x10],rax
   140002a5a:	call   QWORD PTR [rip+0x618]        # 0x140003078
   140002a60:	mov    eax,eax
   140002a62:	lea    rcx,[rbp+0x10]
   140002a66:	xor    rax,QWORD PTR [rbp+0x10]
   140002a6a:	xor    rax,rcx
   140002a6d:	lea    rcx,[rbp+0x20]
   140002a71:	mov    QWORD PTR [rbp+0x10],rax
   140002a75:	call   QWORD PTR [rip+0x61d]        # 0x140003098
   140002a7b:	mov    eax,DWORD PTR [rbp+0x20]
   140002a7e:	movabs rcx,0xffffffffffff
   140002a88:	shl    rax,0x20
   140002a8c:	xor    rax,QWORD PTR [rbp+0x20]
   140002a90:	xor    rax,QWORD PTR [rbp+0x10]
   140002a94:	and    rax,rcx
   140002a97:	movabs rcx,0x2b992ddfa233
   140002aa1:	cmp    rax,rbx
   140002aa4:	cmove  rax,rcx
   140002aa8:	mov    QWORD PTR [rip+0x1559],rax        # 0x140004008
   140002aaf:	mov    rbx,QWORD PTR [rsp+0x48]
   140002ab4:	not    rax
   140002ab7:	mov    QWORD PTR [rip+0x1552],rax        # 0x140004010
   140002abe:	add    rsp,0x20
   140002ac2:	pop    rbp
   140002ac3:	ret    
   140002ac4:	int3   
   140002ac5:	int3   
   140002ac6:	int3   
   140002ac7:	int3   
   140002ac8:	int3   
   140002ac9:	int3   
   140002aca:	jmp    QWORD PTR [rip+0x6a0]        # 0x140003170
   140002ad0:	int3   
   140002ad1:	int3   
   140002ad2:	int3   
   140002ad3:	int3   
   140002ad4:	int3   
   140002ad5:	int3   
   140002ad6:	jmp    QWORD PTR [rip+0x68c]        # 0x140003168
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	int3   
   140002ae1:	int3   
   140002ae2:	int3   
   140002ae3:	int3   
   140002ae4:	rex push rbx
   140002ae6:	sub    rsp,0x20
   140002aea:	mov    rbx,rcx
   140002aed:	xor    ecx,ecx
   140002aef:	call   QWORD PTR [rip+0x5ab]        # 0x1400030a0
   140002af5:	mov    rcx,rbx
   140002af8:	call   QWORD PTR [rip+0x55a]        # 0x140003058
   140002afe:	call   QWORD PTR [rip+0x54c]        # 0x140003050
   140002b04:	mov    rcx,rax
   140002b07:	mov    edx,0xc0000409
   140002b0c:	add    rsp,0x20
   140002b10:	pop    rbx
   140002b11:	rex.W jmp QWORD PTR [rip+0x598]        # 0x1400030b0
   140002b18:	int3   
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	mov    QWORD PTR [rsp+0x8],rcx
   140002b25:	sub    rsp,0x88
   140002b2c:	lea    rcx,[rip+0x15cd]        # 0x140004100
   140002b33:	call   QWORD PTR [rip+0x537]        # 0x140003070
   140002b39:	mov    rax,QWORD PTR [rip+0x16b8]        # 0x1400041f8
   140002b40:	mov    QWORD PTR [rsp+0x48],rax
   140002b45:	xor    r8d,r8d
   140002b48:	lea    rdx,[rsp+0x50]
   140002b4d:	mov    rcx,QWORD PTR [rsp+0x48]
   140002b52:	call   QWORD PTR [rip+0x510]        # 0x140003068
   140002b58:	mov    QWORD PTR [rsp+0x40],rax
   140002b5d:	cmp    QWORD PTR [rsp+0x40],0x0
   140002b63:	je     0x140002ba7
   140002b65:	mov    QWORD PTR [rsp+0x38],0x0
   140002b6e:	lea    rax,[rsp+0x58]
   140002b73:	mov    QWORD PTR [rsp+0x30],rax
   140002b78:	lea    rax,[rsp+0x60]
   140002b7d:	mov    QWORD PTR [rsp+0x28],rax
   140002b82:	lea    rax,[rip+0x1577]        # 0x140004100
   140002b89:	mov    QWORD PTR [rsp+0x20],rax
   140002b8e:	mov    r9,QWORD PTR [rsp+0x40]
   140002b93:	mov    r8,QWORD PTR [rsp+0x48]
   140002b98:	mov    rdx,QWORD PTR [rsp+0x50]
   140002b9d:	xor    ecx,ecx
   140002b9f:	call   QWORD PTR [rip+0x4bb]        # 0x140003060
   140002ba5:	jmp    0x140002bca
   140002ba7:	mov    rax,QWORD PTR [rip+0x15ea]        # 0x140004198
   140002bae:	mov    rax,QWORD PTR [rax]
   140002bb1:	mov    QWORD PTR [rip+0x1640],rax        # 0x1400041f8
   140002bb8:	mov    rax,QWORD PTR [rip+0x15d9]        # 0x140004198
   140002bbf:	add    rax,0x8
   140002bc3:	mov    QWORD PTR [rip+0x15ce],rax        # 0x140004198
   140002bca:	mov    rax,QWORD PTR [rip+0x1627]        # 0x1400041f8
   140002bd1:	mov    QWORD PTR [rip+0x1498],rax        # 0x140004070
   140002bd8:	mov    rax,QWORD PTR [rsp+0x90]
   140002be0:	mov    QWORD PTR [rip+0x1599],rax        # 0x140004180
   140002be7:	mov    DWORD PTR [rip+0x146f],0xc0000409        # 0x140004060
   140002bf1:	mov    DWORD PTR [rip+0x1469],0x1        # 0x140004064
   140002bfb:	mov    DWORD PTR [rip+0x1473],0x3        # 0x140004078
   140002c05:	mov    eax,0x8
   140002c0a:	imul   rax,rax,0x0
   140002c0e:	lea    rcx,[rip+0x146b]        # 0x140004080
   140002c15:	mov    QWORD PTR [rcx+rax*1],0x2
   140002c1d:	mov    eax,0x8
   140002c22:	imul   rax,rax,0x1
   140002c26:	lea    rcx,[rip+0x1453]        # 0x140004080
   140002c2d:	mov    rdx,QWORD PTR [rip+0x13d4]        # 0x140004008
   140002c34:	mov    QWORD PTR [rcx+rax*1],rdx
   140002c38:	mov    eax,0x8
   140002c3d:	imul   rax,rax,0x2
   140002c41:	lea    rcx,[rip+0x1438]        # 0x140004080
   140002c48:	mov    rdx,QWORD PTR [rip+0x13c1]        # 0x140004010
   140002c4f:	mov    QWORD PTR [rcx+rax*1],rdx
   140002c53:	mov    eax,0x8
   140002c58:	imul   rax,rax,0x0
   140002c5c:	mov    rcx,QWORD PTR [rip+0x13a5]        # 0x140004008
   140002c63:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002c68:	mov    eax,0x8
   140002c6d:	imul   rax,rax,0x1
   140002c71:	mov    rcx,QWORD PTR [rip+0x1398]        # 0x140004010
   140002c78:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002c7d:	lea    rcx,[rip+0x5fc]        # 0x140003280
   140002c84:	call   0x140002ae4
   140002c89:	add    rsp,0x88
   140002c90:	ret    
   140002c91:	int3   
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	int3   
   140002ca1:	int3   
   140002ca2:	int3   
   140002ca3:	int3   
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	sub    rsp,0x28
   140002cac:	mov    r8,QWORD PTR [r9+0x38]
   140002cb0:	mov    rcx,rdx
   140002cb3:	mov    rdx,r9
   140002cb6:	call   0x140002ccc
   140002cbb:	mov    eax,0x1
   140002cc0:	add    rsp,0x28
   140002cc4:	ret    
   140002cc5:	int3   
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	rex push rbx
   140002cce:	sub    rsp,0x20
   140002cd2:	mov    r11d,DWORD PTR [r8]
   140002cd5:	mov    rbx,rdx
   140002cd8:	and    r11d,0xfffffff8
   140002cdc:	mov    r9,rcx
   140002cdf:	test   BYTE PTR [r8],0x4
   140002ce3:	mov    r10,rcx
   140002ce6:	je     0x140002cfb
   140002ce8:	mov    eax,DWORD PTR [r8+0x8]
   140002cec:	movsxd r10,DWORD PTR [r8+0x4]
   140002cf0:	neg    eax
   140002cf2:	add    r10,rcx
   140002cf5:	movsxd rcx,eax
   140002cf8:	and    r10,rcx
   140002cfb:	movsxd rax,r11d
   140002cfe:	mov    rdx,QWORD PTR [rax+r10*1]
   140002d02:	mov    rax,QWORD PTR [rbx+0x10]
   140002d06:	mov    ecx,DWORD PTR [rax+0x8]
   140002d09:	add    rcx,QWORD PTR [rbx+0x8]
   140002d0d:	test   BYTE PTR [rcx+0x3],0xf
   140002d11:	je     0x140002d1f
   140002d13:	movzx  eax,BYTE PTR [rcx+0x3]
   140002d17:	and    eax,0xfffffff0
   140002d1a:	cdqe   
   140002d1c:	add    r9,rax
   140002d1f:	xor    r9,rdx
   140002d22:	mov    rcx,r9
   140002d25:	add    rsp,0x20
   140002d29:	pop    rbx
   140002d2a:	jmp    0x1400027a0
   140002d2f:	int3   
   140002d30:	int3   
   140002d31:	int3   
   140002d32:	int3   
   140002d33:	int3   
   140002d34:	int3   
   140002d35:	int3   
   140002d36:	jmp    QWORD PTR [rip+0x4a4]        # 0x1400031e0
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	int3   
   140002d41:	int3   
   140002d42:	int3   
   140002d43:	int3   
   140002d44:	int3   
   140002d45:	int3   
   140002d46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002d50:	jmp    rax
   140002d52:	int3   
   140002d53:	int3   
   140002d54:	int3   
   140002d55:	int3   
   140002d56:	int3   
   140002d57:	int3   
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	int3   
   140002d61:	int3   
   140002d62:	int3   
   140002d63:	int3   
   140002d64:	int3   
   140002d65:	int3   
   140002d66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002d70:	sub    rsp,0x10
   140002d74:	mov    QWORD PTR [rsp],r10
   140002d78:	mov    QWORD PTR [rsp+0x8],r11
   140002d7d:	xor    r11,r11
   140002d80:	lea    r10,[rsp+0x18]
   140002d85:	sub    r10,rax
   140002d88:	cmovb  r10,r11
   140002d8c:	mov    r11,QWORD PTR gs:0x10
   140002d95:	cmp    r10,r11
   140002d98:	jae    0x140002daf
   140002d9a:	and    r10w,0xf000
   140002da0:	lea    r11,[r11-0x1000]
   140002da7:	test   BYTE PTR [r11],r11b
   140002daa:	cmp    r10,r11
   140002dad:	jne    0x140002da0
   140002daf:	mov    r10,QWORD PTR [rsp]
   140002db3:	mov    r11,QWORD PTR [rsp+0x8]
   140002db8:	add    rsp,0x10
   140002dbc:	ret    
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	int3   
   140002dc1:	int3   
   140002dc2:	int3   
   140002dc3:	int3   
   140002dc4:	int3   
   140002dc5:	int3   
   140002dc6:	rex push rbp
   140002dc8:	sub    rsp,0x20
   140002dcc:	mov    rbp,rdx
   140002dcf:	mov    rax,QWORD PTR [rcx]
   140002dd2:	mov    rdx,rcx
   140002dd5:	mov    ecx,DWORD PTR [rax]
   140002dd7:	call   0x14000284e
   140002ddc:	nop
   140002ddd:	add    rsp,0x20
   140002de1:	pop    rbp
   140002de2:	ret    
   140002de3:	int3   
   140002de4:	int3   
   140002de5:	int3   
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	rex push rbp
   140002df2:	sub    rsp,0x20
   140002df6:	mov    rbp,rdx
   140002df9:	mov    rax,QWORD PTR [rcx]
   140002dfc:	xor    ecx,ecx
   140002dfe:	cmp    DWORD PTR [rax],0xc0000005
   140002e04:	sete   cl
   140002e07:	mov    eax,ecx
   140002e09:	add    rsp,0x20
   140002e0d:	pop    rbp
   140002e0e:	ret    
   140002e0f:	int3   

Disassembly of section .rdata:

0000000140003000 <.rdata>:
   140003000:	mov    eax,0x3b
   140003005:	add    BYTE PTR [rax],al
   140003007:	add    ah,cl
   140003009:	cmp    eax,DWORD PTR [rax]
   14000300b:	add    BYTE PTR [rax],al
   14000300d:	add    BYTE PTR [rax],al
   14000300f:	add    dh,bl
   140003011:	cmp    eax,DWORD PTR [rax]
   140003013:	add    BYTE PTR [rax],al
   140003015:	add    BYTE PTR [rax],al
   140003017:	add    dl,ch
   140003019:	cmp    eax,DWORD PTR [rax]
   14000301b:	add    BYTE PTR [rax],al
   14000301d:	add    BYTE PTR [rax],al
   14000301f:	add    dl,bh
   140003021:	cmp    eax,DWORD PTR [rax]
   140003023:	add    BYTE PTR [rax],al
   140003025:	add    BYTE PTR [rax],al
   140003027:	add    BYTE PTR [rsi],al
   140003029:	cmp    al,0x0
   14000302b:	add    BYTE PTR [rax],al
   14000302d:	add    BYTE PTR [rax],al
   14000302f:	add    BYTE PTR [rsp+rdi*1],bl
   140003032:	add    BYTE PTR [rax],al
   140003034:	add    BYTE PTR [rax],al
   140003036:	add    BYTE PTR [rax],al
   140003038:	xor    bh,BYTE PTR [rax+rax*1]
   14000303b:	add    BYTE PTR [rax],al
   14000303d:	add    BYTE PTR [rax],al
   14000303f:	add    BYTE PTR [rsp+rdi*1+0x0],al
   140003043:	add    BYTE PTR [rax],al
   140003045:	add    BYTE PTR [rax],al
   140003047:	add    BYTE PTR [rdx+0x3c],dl
   14000304a:	add    BYTE PTR [rax],al
   14000304c:	add    BYTE PTR [rax],al
   14000304e:	add    BYTE PTR [rax],al
   140003050:	jle    0x140003091
   140003052:	add    BYTE PTR [rax],al
   140003054:	add    BYTE PTR [rax],al
   140003056:	add    BYTE PTR [rax],al
   140003058:	(bad)  
   140003059:	(bad)  
   14000305a:	add    BYTE PTR [rax],al
   14000305c:	add    BYTE PTR [rax],al
   14000305e:	add    BYTE PTR [rax],al
   140003060:	rex.WRX (bad) 
   140003062:	add    BYTE PTR [rax],al
   140003064:	add    BYTE PTR [rax],al
   140003066:	add    BYTE PTR [rax],al
   140003068:	xor    al,0x3f
   14000306a:	add    BYTE PTR [rax],al
   14000306c:	add    BYTE PTR [rax],al
   14000306e:	add    BYTE PTR [rax],al
   140003070:	and    BYTE PTR [rdi],bh
   140003072:	add    BYTE PTR [rax],al
   140003074:	add    BYTE PTR [rax],al
   140003076:	add    BYTE PTR [rax],al
   140003078:	adc    BYTE PTR [rdi],bh
   14000307a:	add    BYTE PTR [rax],al
   14000307c:	add    BYTE PTR [rax],al
   14000307e:	add    BYTE PTR [rax],al
   140003080:	idiv   BYTE PTR [rsi]
   140003082:	add    BYTE PTR [rax],al
   140003084:	add    BYTE PTR [rax],al
   140003086:	add    BYTE PTR [rax],al
   140003088:	loopne 0x1400030c8
   14000308a:	add    BYTE PTR [rax],al
   14000308c:	add    BYTE PTR [rax],al
   14000308e:	add    BYTE PTR [rax],al
   140003090:	retf   0x3e
   140003093:	add    BYTE PTR [rax],al
   140003095:	add    BYTE PTR [rax],al
   140003097:	add    BYTE PTR [rax+0x3e],dh
   14000309d:	add    BYTE PTR [rax],al
   14000309f:	add    BYTE PTR [rdx+0x3e],dl
   1400030a5:	add    BYTE PTR [rax],al
   1400030a7:	add    BYTE PTR [rdx+0x3e],cl
   1400030ad:	add    BYTE PTR [rax],al
   1400030af:	add    BYTE PTR [rdx+0x3f],dl
	...
   1400030bd:	add    BYTE PTR [rax],al
   1400030bf:	add    BYTE PTR [rax+0x3e],al
   1400030c2:	add    BYTE PTR [rax],al
   1400030c4:	add    BYTE PTR [rax],al
   1400030c6:	add    BYTE PTR [rax],al
   1400030c8:	push   rsi
   1400030c9:	add    BYTE PTR ds:[rax],al
	...
   1400030d8:	jb     0x140003118
	...
   1400030e6:	add    BYTE PTR [rax],al
   1400030e8:	cmp    BYTE PTR [rax+rax*1],0x0
   1400030ec:	add    BYTE PTR [rax],al
   1400030ee:	add    BYTE PTR [rax],al
   1400030f0:	xchg   esp,eax
   1400030f1:	cmp    al,0x0
   1400030f3:	add    BYTE PTR [rax],al
   1400030f5:	add    BYTE PTR [rax],al
   1400030f7:	add    BYTE PTR [rax+0x3c],ch
   1400030fd:	add    BYTE PTR [rax],al
   1400030ff:	add    BYTE PTR [rax],cl
   140003101:	cmp    eax,0x0
   140003106:	add    BYTE PTR [rax],al
   140003108:	mov    eax,0x3c
   14000310d:	add    BYTE PTR [rax],al
   14000310f:	add    dh,al
   140003111:	cmp    al,0x0
   140003113:	add    BYTE PTR [rax],al
   140003115:	add    BYTE PTR [rax],al
   140003117:	add    dl,dl
   140003119:	cmp    al,0x0
   14000311b:	add    BYTE PTR [rax],al
   14000311d:	add    BYTE PTR [rax],al
   14000311f:	add    al,ch
   140003121:	cmp    al,0x0
   140003123:	add    BYTE PTR [rax],al
   140003125:	add    BYTE PTR [rax],al
   140003127:	add    dl,bh
   140003129:	cmp    al,0x0
   14000312b:	add    BYTE PTR [rax],al
   14000312d:	add    BYTE PTR [rax],al
   14000312f:	add    BYTE PTR [rsi],dh
   140003131:	cmp    eax,0x0
   140003136:	add    BYTE PTR [rax],al
   140003138:	es cmp eax,0x0
   14000313e:	add    BYTE PTR [rax],al
   140003140:	sbb    BYTE PTR [rip+0x0],bh        # 0x140003146
   140003146:	add    BYTE PTR [rax],al
   140003148:	outs   dx,BYTE PTR ds:[rsi]
   140003149:	cmp    al,0x0
	...
   140003157:	add    BYTE PTR [rsi+rdi*1],dl
   14000315a:	add    BYTE PTR [rax],al
   14000315c:	add    BYTE PTR [rax],al
   14000315e:	add    BYTE PTR [rax],al
   140003160:	or     bh,BYTE PTR [rsi]
   140003162:	add    BYTE PTR [rax],al
   140003164:	add    BYTE PTR [rax],al
   140003166:	add    BYTE PTR [rax],al
   140003168:	repnz cmp eax,0x0
   14000316e:	add    BYTE PTR [rax],al
   140003170:	out    0x3d,al
   140003172:	add    BYTE PTR [rax],al
   140003174:	add    BYTE PTR [rax],al
   140003176:	add    BYTE PTR [rax],al
   140003178:	sar    BYTE PTR [rip+0x0],cl        # 0x14000317e
   14000317e:	add    BYTE PTR [rax],al
   140003180:	enter  0x3d,0x0
   140003184:	add    BYTE PTR [rax],al
   140003186:	add    BYTE PTR [rax],al
   140003188:	sar    BYTE PTR [rip+0x0],0x0        # 0x14000318f
   14000318f:	add    BYTE PTR [rax+0x3d],bh
   140003195:	add    BYTE PTR [rax],al
   140003197:	add    BYTE PTR [rsi+0x3d],ah
   14000319d:	add    BYTE PTR [rax],al
   14000319f:	add    BYTE PTR [rsi+0x3d],dl
   1400031a5:	add    BYTE PTR [rax],al
   1400031a7:	add    BYTE PTR [rdx+0x3d],bh
   1400031aa:	add    BYTE PTR [rax],al
   1400031ac:	add    BYTE PTR [rax],al
   1400031ae:	add    BYTE PTR [rax],al
   1400031b0:	outs   dx,BYTE PTR ds:[rsi]
   1400031b1:	cmp    eax,0x0
   1400031b6:	add    BYTE PTR [rax],al
   1400031b8:	fs cmp eax,0x0
   1400031be:	add    BYTE PTR [rax],al
   1400031c0:	pop    rsp
   1400031c1:	cmp    eax,0x0
   1400031c6:	add    BYTE PTR [rax],al
   1400031c8:	rex.WRX cmp rax,0x0
   1400031ce:	add    BYTE PTR [rax],al
   1400031d0:	sub    al,0x3e
   1400031d2:	add    BYTE PTR [rax],al
   1400031d4:	add    BYTE PTR [rax],al
   1400031d6:	add    BYTE PTR [rax],al
   1400031d8:	mov    BYTE PTR [rip+0x0],bh        # 0x1400031de
   1400031de:	add    BYTE PTR [rax],al
   1400031e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400031e1:	(bad)  
	...
   1400031ee:	add    BYTE PTR [rax],al
   1400031f0:	xor    BYTE PTR [rdx],dl
   1400031f2:	add    BYTE PTR [rax+0x1],al
   1400031f5:	add    BYTE PTR [rax],al
   1400031f7:	add    BYTE PTR [rax+0x2d],dl
   1400031fa:	add    BYTE PTR [rax+0x1],al
	...
   140003205:	add    BYTE PTR [rax],al
   140003207:	add    BYTE PTR [rax+0x25],al
   14000320a:	add    BYTE PTR [rax+0x1],al
	...
   14000321d:	add    BYTE PTR [rax],al
   14000321f:	add    BYTE PTR [rax+0x24],ah
   140003222:	add    BYTE PTR [rax+0x1],al
   140003225:	add    BYTE PTR [rax],al
   140003227:	add    BYTE PTR [rax],dh
   140003229:	sub    BYTE PTR [rax],al
   14000322b:	rex add DWORD PTR [rax],eax
	...
   140003236:	add    BYTE PTR [rax],al
   140003238:	adc    BYTE PTR [rax],dl
   14000323a:	add    BYTE PTR [rax],al
   14000323c:	nop
   14000323d:	adc    BYTE PTR [rax],al
   14000323f:	add    BYTE PTR [rax],ah
   140003241:	adc    al,BYTE PTR [rax]
   140003243:	add    BYTE PTR [rax],dh
   140003245:	adc    al,BYTE PTR [rax]
   140003247:	add    BYTE PTR [rax+0x12],al
   14000324a:	add    BYTE PTR [rax],al
   14000324c:	push   rax
   14000324d:	adc    al,BYTE PTR [rax]
   14000324f:	add    BYTE PTR [rax],al
   140003251:	sbb    al,BYTE PTR [rax]
   140003253:	add    BYTE PTR [rax],ah
   140003255:	sbb    eax,DWORD PTR [rax]
   140003257:	add    BYTE PTR [rax+0x1b],dl
   14000325a:	add    BYTE PTR [rax],al
   14000325c:	(bad)  
   14000325d:	and    al,0x0
   14000325f:	add    BYTE PTR [rax+0x25],al
   140003262:	add    BYTE PTR [rax],al
   140003264:	jo     0x14000328d
   140003266:	add    BYTE PTR [rax],al
   140003268:	lock (bad) 
   14000326a:	add    BYTE PTR [rax],al
   14000326c:	xor    BYTE PTR [rax],ch
   14000326e:	add    BYTE PTR [rax],al
   140003270:	and    BYTE PTR [rbx],ch
	...
   14000327e:	add    BYTE PTR [rax],al
   140003280:	(bad)  
   140003281:	add    BYTE PTR [rax+0x1],al
   140003285:	add    BYTE PTR [rax],al
   140003287:	add    BYTE PTR [rax],al
   140003289:	add    BYTE PTR [r8+0x1],al
   14000328d:	add    BYTE PTR [rax],al
   14000328f:	add    BYTE PTR [rax],dl
   140003291:	adc    BYTE PTR [rax],al
   140003293:	rex add DWORD PTR [rax],eax
   140003296:	add    BYTE PTR [rax],al
   140003298:	xor    BYTE PTR [rdx],dl
   14000329a:	add    BYTE PTR [rax+0x1],al
   14000329d:	add    BYTE PTR [rax],al
   14000329f:	add    BYTE PTR [rax+0x12],al
   1400032a2:	add    BYTE PTR [rax+0x1],al
   1400032a5:	add    BYTE PTR [rax],al
   1400032a7:	add    BYTE PTR [rax+0x12],dl
   1400032aa:	add    BYTE PTR [rax+0x1],al
   1400032ad:	add    BYTE PTR [rax],al
   1400032af:	add    BYTE PTR [rax+0x12],dl
   1400032b2:	add    BYTE PTR [rax+0x1],al
   1400032b5:	add    BYTE PTR [rax],al
   1400032b7:	add    BYTE PTR [rax+0x12],al
   1400032ba:	add    BYTE PTR [rax+0x1],al
   1400032bd:	add    BYTE PTR [rax],al
   1400032bf:	add    BYTE PTR [rax],ah
   1400032c1:	adc    al,BYTE PTR [rax]
   1400032c3:	rex add DWORD PTR [rax],eax
   1400032c6:	add    BYTE PTR [rax],al
   1400032c8:	push   rax
   1400032c9:	adc    al,BYTE PTR [rax]
   1400032cb:	rex add DWORD PTR [rax],eax
   1400032ce:	add    BYTE PTR [rax],al
   1400032d0:	xor    BYTE PTR [rdx],dl
   1400032d2:	add    BYTE PTR [rax+0x1],al
   1400032d5:	add    BYTE PTR [rax],al
   1400032d7:	add    BYTE PTR [rax],ah
   1400032d9:	adc    al,BYTE PTR [rax]
   1400032db:	rex add DWORD PTR [rax],eax
   1400032de:	add    BYTE PTR [rax],al
   1400032e0:	xor    BYTE PTR [rdx],dl
   1400032e2:	add    BYTE PTR [rax+0x1],al
   1400032e5:	add    BYTE PTR [rax],al
   1400032e7:	add    BYTE PTR [rax+0x1b],dl
   1400032ea:	add    BYTE PTR [rax+0x1],al
   1400032ed:	add    BYTE PTR [rax],al
   1400032ef:	add    BYTE PTR [rax],dh
   1400032f1:	adc    al,BYTE PTR [rax]
   1400032f3:	rex add DWORD PTR [rax],eax
   1400032f6:	add    BYTE PTR [rax],al
   1400032f8:	add    BYTE PTR [rdx],bl
   1400032fa:	add    BYTE PTR [rax+0x1],al
   1400032fd:	add    BYTE PTR [rax],al
   1400032ff:	add    BYTE PTR [rax],ah
   140003301:	sbb    eax,DWORD PTR [rax]
   140003303:	rex add DWORD PTR [rax],eax
   140003306:	add    BYTE PTR [rax],al
   140003308:	push   rax
   140003309:	adc    al,BYTE PTR [rax]
   14000330b:	rex add DWORD PTR [rax],eax
   14000330e:	add    BYTE PTR [rax],al
   140003310:	adc    al,BYTE PTR [rax]
   140003313:	rex add DWORD PTR [rax],eax
   140003316:	add    BYTE PTR [rax],al
   140003318:	and    BYTE PTR [rdx],dl
   14000331a:	add    BYTE PTR [rax+0x1],al
   14000331d:	add    BYTE PTR [rax],al
   14000331f:	add    BYTE PTR [rax+0x12],dl
   140003322:	add    BYTE PTR [rax+0x1],al
   140003325:	add    BYTE PTR [rax],al
   140003327:	add    BYTE PTR [rax],dh
   140003329:	adc    al,BYTE PTR [rax]
   14000332b:	rex add DWORD PTR [rax],eax
   14000332e:	add    BYTE PTR [rax],al
   140003330:	and    BYTE PTR [rdx],dl
   140003332:	add    BYTE PTR [rax+0x1],al
   140003335:	add    BYTE PTR [rax],al
   140003337:	add    BYTE PTR [rax],dh
   140003339:	adc    al,BYTE PTR [rax]
   14000333b:	rex add DWORD PTR [rax],eax
	...
   140003346:	add    BYTE PTR [rax],al
   140003348:	add    BYTE PTR [r10+0x0],r14b
   14000334c:	jb     0x14000334e
   14000334e:	outs   dx,DWORD PTR ds:[rsi]
   14000334f:	add    BYTE PTR [rdx+0x0],dh
   140003352:	and    BYTE PTR [rax],al
   140003354:	ins    DWORD PTR es:[rdi],dx
   140003355:	add    BYTE PTR [rbp+0x0],ah
   140003358:	jae    0x14000335a
   14000335a:	jae    0x14000335c
   14000335c:	(bad)  
   14000335d:	add    BYTE PTR [rdi+0x0],ah
   140003360:	add    BYTE PTR gs:[rax],ah
   140003363:	add    BYTE PTR [rsi+0x0],ch
   140003366:	outs   dx,DWORD PTR ds:[rsi]
   140003367:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000336b:	add    BYTE PTR [rsi+0x0],ah
   14000336e:	outs   dx,DWORD PTR ds:[rsi]
   14000336f:	add    BYTE PTR [rbp+0x0],dh
   140003372:	outs   dx,BYTE PTR ds:[rsi]
   140003373:	add    BYTE PTR [rax+rax*1+0x2e],ah
   140003377:	add    BYTE PTR [rax],al
   140003379:	add    BYTE PTR [rax],al
   14000337b:	add    BYTE PTR [rip+0x7300],ah        # 0x14000a681
   140003381:	add    BYTE PTR [rax],al
   140003383:	add    BYTE PTR [rax],ah
   140003385:	add    BYTE PTR [rax],al
   140003387:	add    BYTE PTR [rdx],ah
   140003389:	add    BYTE PTR [rax],al
   14000338b:	add    BYTE PTR [rax],al
   14000338d:	add    BYTE PTR [rax],al
   14000338f:	add    BYTE PTR [rdi+0x0],ch
   140003392:	jo     0x140003394
   140003394:	add    BYTE PTR gs:[rsi+0x0],ch
   140003398:	add    BYTE PTR [rax],al
   14000339a:	add    BYTE PTR [rax],al
   14000339c:	add    BYTE PTR cs:[rax],al
   14000339f:	add    BYTE PTR [rip+0x3f00],ch        # 0x1400072a5
   1400033a5:	add    BYTE PTR [rax],al
   1400033a7:	add    BYTE PTR [rip+0x3a006c00],ch        # 0x17a009fad
   1400033ad:	add    BYTE PTR [rax],al
   1400033af:	add    BYTE PTR [rip+0x3a006300],ch        # 0x17a0096b5
   1400033b5:	add    BYTE PTR [rax],al
   1400033b7:	add    BYTE PTR [rip+0x3a006600],ch        # 0x17a0099bd
   1400033bd:	add    BYTE PTR [rax],al
   1400033bf:	add    BYTE PTR [rip+0x3a007600],ch        # 0x17a00a9c5
   1400033c5:	add    BYTE PTR [rax],al
   1400033c7:	add    BYTE PTR [rip+0x4f004300],ch        # 0x18f0076cd
   1400033cd:	add    BYTE PTR [rbp+0x0],cl
   1400033d0:	push   rax
   1400033d1:	add    BYTE PTR [rbp+0x0],dl
   1400033d4:	push   rsp
   1400033d5:	add    BYTE PTR [rbp+0x0],al
   1400033d8:	push   rdx
   1400033d9:	add    BYTE PTR [rdx],bh
   1400033db:	add    BYTE PTR [rax],al
   1400033dd:	add    BYTE PTR [rax],al
   1400033df:	add    BYTE PTR [rdi],ch
   1400033e1:	add    BYTE PTR [rdi],bh
   1400033e3:	add    BYTE PTR [rax],al
   1400033e5:	add    BYTE PTR [rax],al
   1400033e7:	add    BYTE PTR [rdi],ch
   1400033e9:	add    BYTE PTR [rax+rax*1+0x3a],ch
   1400033ed:	add    BYTE PTR [rax],al
   1400033ef:	add    BYTE PTR [rdi],ch
   1400033f1:	add    BYTE PTR [rbx+0x0],ah
   1400033f4:	cmp    al,BYTE PTR [rax]
   1400033f6:	add    BYTE PTR [rax],al
   1400033f8:	(bad)  
   1400033f9:	add    BYTE PTR [rsi+0x0],ah
   1400033fc:	cmp    al,BYTE PTR [rax]
   1400033fe:	add    BYTE PTR [rax],al
   140003400:	(bad)  
   140003401:	add    BYTE PTR [rsi+0x0],dh
   140003404:	cmp    al,BYTE PTR [rax]
   140003406:	add    BYTE PTR [rax],al
   140003408:	(bad)  
   140003409:	add    BYTE PTR [rbx+0x0],al
   14000340c:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140003410:	push   rax
   140003411:	add    BYTE PTR [rbp+0x0],dl
   140003414:	push   rsp
   140003415:	add    BYTE PTR [rbp+0x0],al
   140003418:	push   rdx
   140003419:	add    BYTE PTR [rdx],bh
   14000341b:	add    BYTE PTR [rax],al
   14000341d:	add    BYTE PTR [rax],al
   14000341f:	add    BYTE PTR [rbp+0x0],ah
   140003422:	jbe    0x140003424
   140003424:	add    BYTE PTR gs:[rsi+0x0],ch
   140003428:	je     0x14000342a
   14000342a:	jbe    0x14000342c
   14000342c:	ja     0x14000342e
   14000342e:	jb     0x140003430
   140003430:	add    BYTE PTR cs:[rbp+0x0],ch
   140003434:	jae    0x140003436
   140003436:	movsxd eax,DWORD PTR [rax]
	...
   140003448:	add    DWORD PTR [rdi+0x0],edi
	...
   140003457:	add    BYTE PTR [rdi+rdi*2],al
	...
   140003462:	add    BYTE PTR [rax],al
   140003464:	push   rdx
   140003465:	cmp    DWORD PTR [rdi+0x55],ebx
   14000346b:	add    BYTE PTR [rdx],al
   14000346d:	add    BYTE PTR [rax],al
   14000346f:	add    BYTE PTR [rip+0x60000000],ah        # 0x1a0003475
   140003475:	xor    eax,0x29600000
   14000347a:	add    BYTE PTR [rax],al
   14000347c:	add    BYTE PTR [rax],al
   14000347e:	add    BYTE PTR [rax],al
   140003480:	push   rdx
   140003481:	cmp    DWORD PTR [rdi+0x55],ebx
   140003487:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x12000348d
   14000348d:	add    DWORD PTR [rax],eax
   14000348f:	add    BYTE PTR [rbp+rsi*1+0x299c0000],bl
	...
   1400034be:	add    BYTE PTR [rax],al
   1400034c0:	movabs al,ds:0x0
	...
   140003515:	add    BYTE PTR [rax],al
   140003517:	add    BYTE PTR [rax],cl
   140003519:	add    BYTE PTR [rax+0x1],al
	...
   14000352d:	add    BYTE PTR [rax],al
   14000352f:	add    al,dh
   140003531:	xor    DWORD PTR [rax],eax
   140003533:	rex add DWORD PTR [rax],eax
   140003536:	add    BYTE PTR [rax],al
   140003538:	clc    
   140003539:	xor    DWORD PTR [rax],eax
   14000353b:	rex add DWORD PTR [rax],eax
   14000353e:	add    BYTE PTR [rax],al
   140003540:	cmp    BYTE PTR [rdx],dh
   140003542:	add    BYTE PTR [rax+0x1],al
   140003545:	add    BYTE PTR [rax],al
   140003547:	add    BYTE PTR [rdi],cl
	...
   140003551:	xor    eax,0x0
	...
   14000355e:	add    BYTE PTR [rax],al
   140003560:	push   rdx
   140003561:	push   rbx
   140003562:	rex.R push rbx
   140003564:	cmp    al,0x6c
   140003566:	loop   0x140003528
   140003568:	scas   eax,DWORD PTR es:[rdi]
   140003569:	(bad)  
   14000356a:	cmp    BYTE PTR [rdi-0x59],al
   14000356d:	fmul   DWORD PTR [rcx]
   14000356f:	mov    BYTE PTR [rsi+0x11da251],dl
   140003575:	add    BYTE PTR [rax],al
   140003577:	add    BYTE PTR [rbp+0x76],ah
   14000357a:	outs   dx,BYTE PTR gs:[rsi]
   14000357c:	je     0x1400035f4
   14000357e:	ja     0x1400035f2
   140003580:	cs jo  0x1400035e7
   140003583:	(bad)  
	...
   14000359c:	rex.RXB
   14000359d:	rex.XB push r12
   14000359f:	rex.WR add BYTE PTR [rax],r10b
   1400035a2:	add    BYTE PTR [rax],al
   1400035a4:	cmp    al,0x1d
   1400035a6:	add    BYTE PTR [rax],al
   1400035a8:	cs je  0x140003610
   1400035ab:	js     0x140003621
   1400035ad:	and    al,0x6d
   1400035af:	outs   dx,BYTE PTR ds:[rsi]
   1400035b0:	add    BYTE PTR [rax],al
   1400035b2:	add    BYTE PTR [rax],al
   1400035b4:	rex sub eax,0x7d0000
   1400035ba:	add    BYTE PTR [rax],al
   1400035bc:	cs je  0x140003624
   1400035bf:	js     0x140003635
   1400035c1:	and    al,0x6d
   1400035c3:	outs   dx,BYTE PTR ds:[rsi]
   1400035c4:	and    al,0x30
   1400035c6:	xor    BYTE PTR [rax],al
   1400035c8:	shr    BYTE PTR [rip+0x500000],0x0        # 0x1405035cf
   1400035cf:	add    BYTE PTR [rsi],ch
   1400035d1:	je     0x140003638
   1400035d3:	js     0x140003649
   1400035d5:	and    al,0x78
   1400035d7:	add    BYTE PTR [rax],al
   1400035d9:	xor    BYTE PTR [rax],al
   1400035db:	add    al,dh
   1400035dd:	add    DWORD PTR [rax],eax
   1400035df:	add    BYTE PTR [rsi],ch
   1400035e1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400035e9:	add    BYTE PTR [rax],al
   1400035eb:	add    al,dh
   1400035ed:	xor    DWORD PTR [rax],eax
   1400035ef:	add    BYTE PTR [rax],dl
   1400035f1:	add    BYTE PTR [rax],al
   1400035f3:	add    BYTE PTR [rsi],ch
   1400035f5:	xor    BYTE PTR [rax],dh
   1400035f7:	movsxd esp,DWORD PTR [rsi+0x67]
   1400035fa:	add    BYTE PTR [rax],al
   1400035fc:	add    BYTE PTR [rdx],dh
   1400035fe:	add    BYTE PTR [rax],al
   140003600:	or     BYTE PTR [rax],al
   140003602:	add    BYTE PTR [rax],al
   140003604:	cs rex.XB push r10
   140003607:	push   rsp
   140003608:	and    al,0x58
   14000360a:	rex.XB
   14000360b:	add    BYTE PTR [r8],al
   14000360e:	add    BYTE PTR [rax],al
   140003610:	or     BYTE PTR [rdx],dh
   140003612:	add    BYTE PTR [rax],al
   140003614:	or     BYTE PTR [rax],al
   140003616:	add    BYTE PTR [rax],al
   140003618:	cs rex.XB push r10
   14000361b:	push   rsp
   14000361c:	and    al,0x58
   14000361e:	rex.XB
   14000361f:	rex.B
   140003620:	add    BYTE PTR [r8],al
   140003623:	add    BYTE PTR [rax],dl
   140003625:	xor    al,BYTE PTR [rax]
   140003627:	add    BYTE PTR [rax],cl
   140003629:	add    BYTE PTR [rax],al
   14000362b:	add    BYTE PTR [rsi],ch
   14000362d:	rex.XB push r10
   14000362f:	push   rsp
   140003630:	and    al,0x58
   140003632:	rex.XB pop r10
   140003634:	add    BYTE PTR [rax],al
   140003636:	add    BYTE PTR [rax],al
   140003638:	sbb    BYTE PTR [rdx],dh
   14000363a:	add    BYTE PTR [rax],al
   14000363c:	or     BYTE PTR [rax],al
   14000363e:	add    BYTE PTR [rax],al
   140003640:	cs rex.XB push r10
   140003643:	push   rsp
   140003644:	and    al,0x58
   140003646:	rex.WB
   140003647:	add    BYTE PTR [r8],al
   14000364a:	add    BYTE PTR [rax],al
   14000364c:	and    BYTE PTR [rdx],dh
   14000364e:	add    BYTE PTR [rax],al
   140003650:	or     BYTE PTR [rax],al
   140003652:	add    BYTE PTR [rax],al
   140003654:	cs rex.XB push r10
   140003657:	push   rsp
   140003658:	and    al,0x58
   14000365a:	rex.WB
   14000365b:	rex.B
   14000365c:	add    BYTE PTR [r8],al
   14000365f:	add    BYTE PTR [rax],ch
   140003661:	xor    al,BYTE PTR [rax]
   140003663:	add    BYTE PTR [rax],cl
   140003665:	add    BYTE PTR [rax],al
   140003667:	add    BYTE PTR [rsi],ch
   140003669:	rex.XB push r10
   14000366b:	push   rsp
   14000366c:	and    al,0x58
   14000366e:	rex.WB pop r9
   140003670:	add    BYTE PTR [rax],al
   140003672:	add    BYTE PTR [rax],al
   140003674:	xor    BYTE PTR [rdx],dh
   140003676:	add    BYTE PTR [rax],al
   140003678:	or     BYTE PTR [rax],al
   14000367a:	add    BYTE PTR [rax],al
   14000367c:	cs rex.XB push r10
   14000367f:	push   rsp
   140003680:	and    al,0x58
   140003682:	rex.WB pop r10
   140003684:	add    BYTE PTR [rax],al
   140003686:	add    BYTE PTR [rax],al
   140003688:	cmp    BYTE PTR [rdx],dh
   14000368a:	add    BYTE PTR [rax],al
   14000368c:	cmp    al,0x0
   14000368e:	add    BYTE PTR [rax],al
   140003690:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140003699:	add    BYTE PTR [rax],al
   14000369b:	add    BYTE PTR [rax-0x1fffffce],al
   1400036a1:	add    al,BYTE PTR [rax]
   1400036a3:	add    BYTE PTR [rsi],ch
   1400036a5:	jb     0x14000370b
   1400036a7:	(bad)  
   1400036a8:	je     0x14000370b
   1400036aa:	add    BYTE PTR [rax],al
   1400036ac:	(bad)  
   1400036ad:	xor    eax,0x21c0000
   1400036b2:	add    BYTE PTR [rax],al
   1400036b4:	cs jb  0x14000371b
   1400036b7:	(bad)  
   1400036b8:	je     0x14000371b
   1400036ba:	and    al,0x7a
   1400036bc:	jp     0x140003738
   1400036be:	fs (bad) 
   1400036c0:	add    BYTE PTR [eax],al
   1400036c3:	add    BYTE PTR [rax-0x2fffffc9],al
   1400036c9:	add    DWORD PTR [rax],eax
   1400036cb:	add    BYTE PTR [rsi],ch
   1400036cd:	js     0x140003733
   1400036cf:	(bad)  
   1400036d0:	je     0x140003733
   1400036d2:	add    BYTE PTR [rax],al
   1400036d4:	push   rax
   1400036d5:	cmp    DWORD PTR [rax],eax
   1400036d7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400036db:	add    BYTE PTR [rsi],ch
   1400036dd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400036e5:	add    BYTE PTR [rax],al
   1400036e7:	add    BYTE PTR [rcx+rdi*1+0x140000],dh
   1400036ee:	add    BYTE PTR [rax],al
   1400036f0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400036f9:	add    BYTE PTR [rax],al
   1400036fb:	add    al,cl
   1400036fd:	cmp    DWORD PTR [rax],eax
   1400036ff:	add    al,dh
   140003701:	add    DWORD PTR [rax],eax
   140003703:	add    BYTE PTR [rsi],ch
   140003705:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000370d:	add    BYTE PTR [rax],al
   14000370f:	add    BYTE PTR [rax-0x7ffffc5],bh
   140003715:	add    eax,DWORD PTR [rax]
   140003717:	add    BYTE PTR [rsi],ch
   140003719:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140003721:	add    BYTE PTR [rax],al
   140003723:	add    BYTE PTR [rax],al
   140003725:	add    BYTE PTR [rax],al
   140003728:	and    BYTE PTR [rax],al
   14000372a:	add    BYTE PTR [rax],al
   14000372c:	cs fs (bad) 
   14000372f:	je     0x140003792
   140003731:	add    BYTE PTR [rax],al
   140003733:	add    BYTE PTR [rax],ah
   140003735:	add    BYTE PTR [rax],al
   140003738:	loopne 0x14000373f
   14000373a:	add    BYTE PTR [rax],al
   14000373c:	cs (bad) 
   14000373f:	jae    0x140003741
   140003741:	add    BYTE PTR [rax],al
   140003743:	add    BYTE PTR [rax],al
   140003745:	push   rax
   140003746:	add    BYTE PTR [rax],al
   140003748:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003749:	add    DWORD PTR [rax],eax
   14000374b:	add    BYTE PTR [rsi],ch
   14000374d:	jo     0x1400037b3
   14000374f:	(bad)  
   140003750:	je     0x1400037b3
   140003752:	add    BYTE PTR [rax],al
   140003754:	add    BYTE PTR [rax+0x0],ah
   140003757:	add    al,al
   140003759:	add    eax,DWORD PTR [rax]
   14000375b:	add    BYTE PTR [rsi],ch
   14000375d:	jb     0x1400037d2
   14000375f:	jb     0x1400037c4
   140003761:	and    al,0x30
   140003763:	xor    DWORD PTR [rax],eax
   140003765:	add    BYTE PTR [rax],al
   140003767:	add    al,al
   140003769:	movsxd eax,DWORD PTR [rax]
   14000376b:	add    al,cl
   14000376d:	(bad)  
   14000376e:	add    DWORD PTR [rax],eax
   140003770:	cs jb  0x1400037e6
   140003773:	jb     0x1400037d8
   140003775:	and    al,0x30
   140003777:	xor    al,BYTE PTR [rax]
   140003779:	add    BYTE PTR [rax],al
   14000377b:	add    BYTE PTR [rax],al
   14000377d:	add    BYTE PTR [rax],al
   14000377f:	add    BYTE PTR [rcx],al
   140003781:	(bad)  
   140003782:	add    al,BYTE PTR [rax]
   140003784:	(bad)  
   140003785:	xor    al,BYTE PTR [rdx]
   140003787:	xor    BYTE PTR [rcx],al
   140003789:	or     al,BYTE PTR [rax+rax*1]
   14000378c:	or     dh,BYTE PTR [rax+rcx*1]
   14000378f:	add    BYTE PTR [rdx],cl
   140003791:	push   rdx
   140003792:	(bad)  
   140003793:	jo     0x140003796
   140003795:	(bad)  
   140003796:	or     al,BYTE PTR [rax]
   140003798:	(bad)  
   140003799:	push   rsp
   14000379a:	or     al,0x0
   14000379c:	(bad)  
   14000379d:	xor    al,0xa
   14000379f:	add    BYTE PTR [rsi],dl
   1400037a1:	xor    dl,BYTE PTR [rdx]
   1400037a3:	lock adc al,ah
   1400037a6:	(bad)  
   1400037a7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400037ab:	(bad)  
   1400037ac:	add    DWORD PTR [rip+0x34050002],eax        # 0x1740537b4
   1400037b2:	add    DWORD PTR [rax],eax
   1400037b4:	add    DWORD PTR [rdx],ecx
   1400037b6:	add    al,0x0
   1400037b8:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   1400037bc:	add    eax,0x1000134
   1400037c1:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e4249c7
   1400037c7:	jo     0x1400037d6
   1400037c9:	(bad)  
   1400037ca:	or     al,0x50
   1400037cc:	or     esi,DWORD PTR [rax]
   1400037ce:	add    BYTE PTR [rax],al
   1400037d0:	sbb    DWORD PTR [rbx],esi
   1400037d2:	add    al,0x0
   1400037d4:	and    al,BYTE PTR [rcx]
   1400037d6:	pop    rbx
   1400037d7:	add    BYTE PTR [rax+rsi*1],dl
   1400037da:	adc    edx,DWORD PTR [rax-0x58]
   1400037dd:	sub    al,0x0
   1400037df:	add    al,al
   1400037e1:	add    al,BYTE PTR [rax]
   1400037e3:	add    BYTE PTR [rcx],bl
   1400037e5:	xor    eax,0xf4240009
   1400037ea:	rex.WRX add r12b,BYTE PTR [rsp+r12*2]
   1400037ee:	rex.WRB add r12b,BYTE PTR [r12+rsi*1]
   1400037f2:	rex.WR add r12b,BYTE PTR [rcx+rax*1]
   1400037f6:	rex.WX add dl,BYTE PTR [rax]
   1400037f9:	push   rax
   1400037fa:	add    BYTE PTR [rax],al
   1400037fc:	test   al,0x2c
   1400037fe:	add    BYTE PTR [rax],al
   140003800:	adc    al,BYTE PTR [rax]
   140003803:	add    BYTE PTR [rcx],al
   140003805:	sbb    BYTE PTR [rdx],cl
   140003807:	add    BYTE PTR [rax],bl
   140003809:	or     al,BYTE PTR fs:[rax]
   14000380c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140003810:	sbb    BYTE PTR [rax+rcx*1],dh
   140003813:	add    BYTE PTR [rax],bl
   140003815:	xor    dl,BYTE PTR [rax+rsi*8]
   140003818:	adc    ah,al
   14000381a:	adc    BYTE PTR [rax+0x19],dh
   14000381d:	(bad)  
   14000381e:	or     DWORD PTR [rax],eax
   140003820:	(bad)  
   140003821:	in     al,0x81
   140003823:	add    DWORD PTR [rsi],ebx
   140003825:	add    BYTE PTR fs:[rcx],0x1e
   140003829:	xor    al,0x7f
   14000382b:	add    DWORD PTR [rsi],ebx
   14000382d:	add    DWORD PTR [rcx+rax*1+0x10],edi
   140003831:	push   rax
   140003832:	add    BYTE PTR [rax],al
   140003834:	test   al,0x2c
   140003836:	add    BYTE PTR [rax],al
   140003838:	ror    BYTE PTR [rbx],1
   14000383a:	add    BYTE PTR [rax],al
   14000383c:	sbb    DWORD PTR [rdi],ebx
   14000383e:	add    eax,0x51340d00
   140003843:	add    BYTE PTR [rip+0x6004e01],cl        # 0x14600864a
   140003849:	jo     0x14000384b
   14000384b:	add    BYTE PTR [rax+0x6000002c],ch
   140003851:	add    al,BYTE PTR [rax]
   140003853:	add    BYTE PTR [rcx],al
   140003855:	clts   
   140003857:	add    BYTE PTR [rdi],cl
   140003859:	or     DWORD PTR fs:[rax],eax
   14000385c:	sysenter 
   14000385e:	or     BYTE PTR [rax],al
   140003860:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140003863:	jo     0x140003866
   140003865:	or     al,BYTE PTR [rax+rax*1]
   140003868:	or     dh,BYTE PTR [rsi+rax*1]
   14000386b:	add    BYTE PTR [rdx],cl
   14000386d:	xor    al,BYTE PTR [rsi]
   14000386f:	jo     0x14000388a
   140003871:	(bad)  
   140003872:	or     eax,0x9b742600
   140003877:	add    BYTE PTR [rsi],ah
   140003879:	fs (bad) 
   14000387b:	add    BYTE PTR [rsi],ah
   14000387d:	xor    al,0x99
   14000387f:	add    BYTE PTR [rsi],ah
   140003881:	add    DWORD PTR [rdx+0x16f01800],edx
   140003887:	loopne 0x14000389d
   140003889:	rcl    BYTE PTR [rdx],1
   14000388b:	rcl    BYTE PTR [rax],0x50
   14000388e:	add    BYTE PTR [rax],al
   140003890:	test   al,0x2c
   140003892:	add    BYTE PTR [rax],al
   140003894:	add    BYTE PTR [rax+rax*1],0x0
   140003898:	add    DWORD PTR [rcx+rax*1],eax
   14000389b:	add    BYTE PTR [rdx+riz*2],al
   14000389e:	add    BYTE PTR [rax],al
   1400038a0:	or     DWORD PTR [rcx],ebx
   1400038a2:	or     al,BYTE PTR [rax]
   1400038a4:	sbb    esp,eax
   1400038a6:	or     eax,DWORD PTR [rax]
   1400038a8:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   1400038ac:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   1400038b0:	sbb    DWORD PTR [rax+rcx*1],esi
   1400038b3:	add    BYTE PTR [rcx],bl
   1400038b5:	push   rdx
   1400038b6:	adc    eax,0x2ad6e0
   1400038bb:	add    BYTE PTR [rcx],al
   1400038bd:	add    BYTE PTR [rax],al
   1400038bf:	add    BYTE PTR [rcx+0x1a000025],ch
   1400038c5:	(bad)  
   1400038c6:	add    BYTE PTR [rax],al
   1400038c8:	(bad)  
   1400038c9:	sub    eax,0x271a0000
   1400038ce:	add    BYTE PTR [rax],al
   1400038d0:	add    DWORD PTR [rax],eax
   1400038d2:	add    BYTE PTR [rax],al
   1400038d4:	or     DWORD PTR [rcx+rax*1],eax
   1400038d7:	add    BYTE PTR [rdx+riz*1],al
   1400038da:	add    BYTE PTR [rax],al
   1400038dc:	(bad)  
   1400038dd:	sub    al,BYTE PTR [rax]
   1400038df:	add    BYTE PTR [rcx],al
   1400038e1:	add    BYTE PTR [rax],al
   1400038e3:	add    BYTE PTR [rax+rbp*1+0x0],ch
   1400038e7:	add    BYTE PTR [rdx+0x1000028],ah
   1400038ed:	add    BYTE PTR [rax],al
   1400038ef:	add    BYTE PTR [rdx+0x9000028],ah
   1400038f5:	or     al,BYTE PTR [rax+rax*1]
   1400038f8:	or     dh,BYTE PTR [rsi+rax*1]
   1400038fb:	add    BYTE PTR [rdx],cl
   1400038fd:	xor    al,BYTE PTR [rsi]
   1400038ff:	jo     0x1400038d7
   140003901:	sub    al,BYTE PTR [rax]
   140003903:	add    BYTE PTR [rcx],al
   140003905:	add    BYTE PTR [rax],al
   140003907:	add    BYTE PTR [rbp+0x29],ch
   14000390a:	add    BYTE PTR [rax],al
   14000390c:	movabs al,ds:0xa000002df0000029
   140003915:	sub    DWORD PTR [rax],eax
   140003917:	add    BYTE PTR [rcx],al
   140003919:	(bad)  
   14000391a:	add    al,BYTE PTR [rax]
   14000391c:	(bad)  
   14000391d:	xor    al,BYTE PTR [rdx]
   14000391f:	push   rax
   140003920:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d392a
   140003926:	or     DWORD PTR [rax],eax
   140003928:	or     eax,0x1500632
   14000392d:	or     al,0x2
   14000392f:	add    BYTE PTR [rcx+rax*1],cl
   140003932:	adc    DWORD PTR [rax],eax
   140003934:	add    BYTE PTR [rax],al
   140003936:	add    BYTE PTR [rax],al
   140003938:	add    DWORD PTR [rax],eax
   14000393a:	add    BYTE PTR [rax],al
   14000393c:	add    DWORD PTR [rcx+rax*1],eax
   14000393f:	add    BYTE PTR [rdx+rax*2],al
   140003942:	add    BYTE PTR [rax],al
   140003944:	add    BYTE PTR [rax],al
   140003946:	add    BYTE PTR [rax],al
   140003948:	add    DWORD PTR [rcx+rax*1],eax
   14000394b:	add    BYTE PTR [rdx+rdx*1],al
   14000394e:	add    BYTE PTR [rax],al
   140003950:	enter  0x39,0x0
	...
   14000395c:	(bad)  
   14000395d:	cmp    al,0x0
   14000395f:	add    BYTE PTR [rax],al
   140003961:	xor    BYTE PTR [rax],al
   140003963:	add    BYTE PTR [rax+0x3a],dh
   140003969:	add    BYTE PTR [rax],al
   14000396b:	add    BYTE PTR [rax],al
   14000396d:	add    BYTE PTR [rax],al
   14000396f:	add    BYTE PTR [rdx+0x3d],al
   140003972:	add    BYTE PTR [rax],al
   140003974:	call   0x1600039a9
   140003979:	cmp    eax,DWORD PTR [rax]
	...
   140003983:	add    BYTE PTR [rax],ah
   140003985:	add    BYTE PTR ds:[rax],al
   140003988:	pop    rax
   140003989:	xor    DWORD PTR [rax],eax
   14000398b:	add    BYTE PTR [rax+0x3a],cl
   140003991:	add    BYTE PTR [rax],al
   140003993:	add    BYTE PTR [rax],al
   140003995:	add    BYTE PTR [rax],al
   140003997:	add    BYTE PTR [rsi+0x3e],ah
   14000399a:	add    BYTE PTR [rax],al
   14000399c:	shl    BYTE PTR [rax],0x0
   14000399f:	add    BYTE PTR [rax+0x3a],ah
   1400039a5:	add    BYTE PTR [rax],al
   1400039a7:	add    BYTE PTR [rax],al
   1400039a9:	add    BYTE PTR [rax],al
   1400039ab:	add    BYTE PTR [rsi+0x3e],bh
   1400039ae:	add    BYTE PTR [rax],al
   1400039b0:	fdiv   DWORD PTR [rax]
	...
   1400039c6:	add    BYTE PTR [rax],al
   1400039c8:	mov    eax,0x3b
   1400039cd:	add    BYTE PTR [rax],al
   1400039cf:	add    ah,cl
   1400039d1:	cmp    eax,DWORD PTR [rax]
   1400039d3:	add    BYTE PTR [rax],al
   1400039d5:	add    BYTE PTR [rax],al
   1400039d7:	add    dh,bl
   1400039d9:	cmp    eax,DWORD PTR [rax]
   1400039db:	add    BYTE PTR [rax],al
   1400039dd:	add    BYTE PTR [rax],al
   1400039df:	add    dl,ch
   1400039e1:	cmp    eax,DWORD PTR [rax]
   1400039e3:	add    BYTE PTR [rax],al
   1400039e5:	add    BYTE PTR [rax],al
   1400039e7:	add    dl,bh
   1400039e9:	cmp    eax,DWORD PTR [rax]
   1400039eb:	add    BYTE PTR [rax],al
   1400039ed:	add    BYTE PTR [rax],al
   1400039ef:	add    BYTE PTR [rsi],al
   1400039f1:	cmp    al,0x0
   1400039f3:	add    BYTE PTR [rax],al
   1400039f5:	add    BYTE PTR [rax],al
   1400039f7:	add    BYTE PTR [rsp+rdi*1],bl
   1400039fa:	add    BYTE PTR [rax],al
   1400039fc:	add    BYTE PTR [rax],al
   1400039fe:	add    BYTE PTR [rax],al
   140003a00:	xor    bh,BYTE PTR [rax+rax*1]
   140003a03:	add    BYTE PTR [rax],al
   140003a05:	add    BYTE PTR [rax],al
   140003a07:	add    BYTE PTR [rsp+rdi*1+0x0],al
   140003a0b:	add    BYTE PTR [rax],al
   140003a0d:	add    BYTE PTR [rax],al
   140003a0f:	add    BYTE PTR [rdx+0x3c],dl
   140003a12:	add    BYTE PTR [rax],al
   140003a14:	add    BYTE PTR [rax],al
   140003a16:	add    BYTE PTR [rax],al
   140003a18:	jle    0x140003a59
   140003a1a:	add    BYTE PTR [rax],al
   140003a1c:	add    BYTE PTR [rax],al
   140003a1e:	add    BYTE PTR [rax],al
   140003a20:	(bad)  
   140003a21:	(bad)  
   140003a22:	add    BYTE PTR [rax],al
   140003a24:	add    BYTE PTR [rax],al
   140003a26:	add    BYTE PTR [rax],al
   140003a28:	rex.WRX (bad) 
   140003a2a:	add    BYTE PTR [rax],al
   140003a2c:	add    BYTE PTR [rax],al
   140003a2e:	add    BYTE PTR [rax],al
   140003a30:	xor    al,0x3f
   140003a32:	add    BYTE PTR [rax],al
   140003a34:	add    BYTE PTR [rax],al
   140003a36:	add    BYTE PTR [rax],al
   140003a38:	and    BYTE PTR [rdi],bh
   140003a3a:	add    BYTE PTR [rax],al
   140003a3c:	add    BYTE PTR [rax],al
   140003a3e:	add    BYTE PTR [rax],al
   140003a40:	adc    BYTE PTR [rdi],bh
   140003a42:	add    BYTE PTR [rax],al
   140003a44:	add    BYTE PTR [rax],al
   140003a46:	add    BYTE PTR [rax],al
   140003a48:	idiv   BYTE PTR [rsi]
   140003a4a:	add    BYTE PTR [rax],al
   140003a4c:	add    BYTE PTR [rax],al
   140003a4e:	add    BYTE PTR [rax],al
   140003a50:	loopne 0x140003a90
   140003a52:	add    BYTE PTR [rax],al
   140003a54:	add    BYTE PTR [rax],al
   140003a56:	add    BYTE PTR [rax],al
   140003a58:	retf   0x3e
   140003a5b:	add    BYTE PTR [rax],al
   140003a5d:	add    BYTE PTR [rax],al
   140003a5f:	add    BYTE PTR [rax+0x3e],dh
   140003a65:	add    BYTE PTR [rax],al
   140003a67:	add    BYTE PTR [rdx+0x3e],dl
   140003a6d:	add    BYTE PTR [rax],al
   140003a6f:	add    BYTE PTR [rdx+0x3e],cl
   140003a75:	add    BYTE PTR [rax],al
   140003a77:	add    BYTE PTR [rdx+0x3f],dl
	...
   140003a85:	add    BYTE PTR [rax],al
   140003a87:	add    BYTE PTR [rax+0x3e],al
   140003a8a:	add    BYTE PTR [rax],al
   140003a8c:	add    BYTE PTR [rax],al
   140003a8e:	add    BYTE PTR [rax],al
   140003a90:	push   rsi
   140003a91:	add    BYTE PTR ds:[rax],al
	...
   140003aa0:	jb     0x140003ae0
	...
   140003aae:	add    BYTE PTR [rax],al
   140003ab0:	cmp    BYTE PTR [rax+rax*1],0x0
   140003ab4:	add    BYTE PTR [rax],al
   140003ab6:	add    BYTE PTR [rax],al
   140003ab8:	xchg   esp,eax
   140003ab9:	cmp    al,0x0
   140003abb:	add    BYTE PTR [rax],al
   140003abd:	add    BYTE PTR [rax],al
   140003abf:	add    BYTE PTR [rax+0x3c],ch
   140003ac5:	add    BYTE PTR [rax],al
   140003ac7:	add    BYTE PTR [rax],cl
   140003ac9:	cmp    eax,0x0
   140003ace:	add    BYTE PTR [rax],al
   140003ad0:	mov    eax,0x3c
   140003ad5:	add    BYTE PTR [rax],al
   140003ad7:	add    dh,al
   140003ad9:	cmp    al,0x0
   140003adb:	add    BYTE PTR [rax],al
   140003add:	add    BYTE PTR [rax],al
   140003adf:	add    dl,dl
   140003ae1:	cmp    al,0x0
   140003ae3:	add    BYTE PTR [rax],al
   140003ae5:	add    BYTE PTR [rax],al
   140003ae7:	add    al,ch
   140003ae9:	cmp    al,0x0
   140003aeb:	add    BYTE PTR [rax],al
   140003aed:	add    BYTE PTR [rax],al
   140003aef:	add    dl,bh
   140003af1:	cmp    al,0x0
   140003af3:	add    BYTE PTR [rax],al
   140003af5:	add    BYTE PTR [rax],al
   140003af7:	add    BYTE PTR [rsi],dh
   140003af9:	cmp    eax,0x0
   140003afe:	add    BYTE PTR [rax],al
   140003b00:	es cmp eax,0x0
   140003b06:	add    BYTE PTR [rax],al
   140003b08:	sbb    BYTE PTR [rip+0x0],bh        # 0x140003b0e
   140003b0e:	add    BYTE PTR [rax],al
   140003b10:	outs   dx,BYTE PTR ds:[rsi]
   140003b11:	cmp    al,0x0
	...
   140003b1f:	add    BYTE PTR [rsi+rdi*1],dl
   140003b22:	add    BYTE PTR [rax],al
   140003b24:	add    BYTE PTR [rax],al
   140003b26:	add    BYTE PTR [rax],al
   140003b28:	or     bh,BYTE PTR [rsi]
   140003b2a:	add    BYTE PTR [rax],al
   140003b2c:	add    BYTE PTR [rax],al
   140003b2e:	add    BYTE PTR [rax],al
   140003b30:	repnz cmp eax,0x0
   140003b36:	add    BYTE PTR [rax],al
   140003b38:	out    0x3d,al
   140003b3a:	add    BYTE PTR [rax],al
   140003b3c:	add    BYTE PTR [rax],al
   140003b3e:	add    BYTE PTR [rax],al
   140003b40:	sar    BYTE PTR [rip+0x0],cl        # 0x140003b46
   140003b46:	add    BYTE PTR [rax],al
   140003b48:	enter  0x3d,0x0
   140003b4c:	add    BYTE PTR [rax],al
   140003b4e:	add    BYTE PTR [rax],al
   140003b50:	sar    BYTE PTR [rip+0x0],0x0        # 0x140003b57
   140003b57:	add    BYTE PTR [rax+0x3d],bh
   140003b5d:	add    BYTE PTR [rax],al
   140003b5f:	add    BYTE PTR [rsi+0x3d],ah
   140003b65:	add    BYTE PTR [rax],al
   140003b67:	add    BYTE PTR [rsi+0x3d],dl
   140003b6d:	add    BYTE PTR [rax],al
   140003b6f:	add    BYTE PTR [rdx+0x3d],bh
   140003b72:	add    BYTE PTR [rax],al
   140003b74:	add    BYTE PTR [rax],al
   140003b76:	add    BYTE PTR [rax],al
   140003b78:	outs   dx,BYTE PTR ds:[rsi]
   140003b79:	cmp    eax,0x0
   140003b7e:	add    BYTE PTR [rax],al
   140003b80:	fs cmp eax,0x0
   140003b86:	add    BYTE PTR [rax],al
   140003b88:	pop    rsp
   140003b89:	cmp    eax,0x0
   140003b8e:	add    BYTE PTR [rax],al
   140003b90:	rex.WRX cmp rax,0x0
   140003b96:	add    BYTE PTR [rax],al
   140003b98:	sub    al,0x3e
   140003b9a:	add    BYTE PTR [rax],al
   140003b9c:	add    BYTE PTR [rax],al
   140003b9e:	add    BYTE PTR [rax],al
   140003ba0:	mov    BYTE PTR [rip+0x0],bh        # 0x140003ba6
   140003ba6:	add    BYTE PTR [rax],al
   140003ba8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140003ba9:	(bad)  
	...
   140003bb6:	add    BYTE PTR [rax],al
   140003bb8:	outs   dx,BYTE PTR ds:[rsi]
   140003bb9:	add    al,BYTE PTR [rdi+0x65]
   140003bbc:	je     0x140003c0b
   140003bbe:	outs   dx,DWORD PTR ds:[rsi]
   140003bbf:	fs jne 0x140003c2e
   140003bc2:	gs rex.W (bad) 
   140003bc5:	outs   dx,BYTE PTR ds:[rsi]
   140003bc6:	fs ins BYTE PTR es:[rdi],dx
   140003bc8:	gs push rdi
   140003bca:	add    BYTE PTR [rax],al
   140003bcc:	movabs al,ds:0x4d74616d726f4601
   140003bd5:	gs jae 0x140003c4b
   140003bd8:	(bad)  
   140003bd9:	addr32 gs push rdi
   140003bdc:	add    BYTE PTR [rax],al
   140003bde:	mov    ecx,0x636f4c03
   140003be3:	(bad)  
   140003be4:	ins    BYTE PTR es:[rdi],dx
   140003be5:	rex.RX jb 0x140003c4d
   140003be8:	add    BYTE PTR gs:[rdi+0x2],dl
   140003bec:	rex.RXB
   140003bed:	gs je  0x140003c3c
   140003bf0:	(bad)  
   140003bf1:	jae    0x140003c67
   140003bf3:	rex.RB jb 0x140003c68
   140003bf6:	outs   dx,DWORD PTR ds:[rsi]
   140003bf7:	jb     0x140003bf9
   140003bf9:	add    BYTE PTR [rsi],ch
   140003bfb:	(bad)  
   140003bfc:	ins    BYTE PTR es:[rdi],dx
   140003bfd:	jae    0x140003c73
   140003bff:	jb     0x140003c6d
   140003c01:	outs   dx,BYTE PTR gs:[rsi]
   140003c03:	push   rdi
   140003c04:	add    BYTE PTR [rax],al
   140003c06:	add    r9d,DWORD PTR [rax+0x65]
   140003c0a:	(bad)  
   140003c0b:	jo     0x140003c60
   140003c0d:	gs je  0x140003c59
   140003c10:	outs   dx,BYTE PTR ds:[rsi]
   140003c11:	outs   dx,WORD PTR ds:[rsi]
   140003c13:	jb     0x140003c82
   140003c15:	(bad)  
   140003c16:	je     0x140003c81
   140003c18:	outs   dx,DWORD PTR ds:[rsi]
   140003c19:	outs   dx,BYTE PTR ds:[rsi]
   140003c1a:	add    BYTE PTR [rax],al
   140003c1c:	xlat   BYTE PTR ds:[rbx]
   140003c1d:	add    al,BYTE PTR [rdi+0x65]
   140003c20:	je     0x140003c75
   140003c22:	jns    0x140003c97
   140003c24:	je     0x140003c8b
   140003c26:	ins    DWORD PTR es:[rdi],dx
   140003c27:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140003c2f:	jns    0x140003c88
   140003c31:	add    al,dl
   140003c33:	add    DWORD PTR [rdi+0x65],eax
   140003c36:	je     0x140003c7b
   140003c38:	outs   dx,DWORD PTR ds:[rsi]
   140003c39:	ins    DWORD PTR es:[rdi],dx
   140003c3a:	ins    DWORD PTR es:[rdi],dx
   140003c3b:	(bad)  
   140003c3c:	outs   dx,BYTE PTR ds:[rsi]
   140003c3d:	imul   r13,QWORD PTR fs:[rsi+0x65],0xc00057
   140003c46:	rex.XB jb 0x140003cae
   140003c49:	(bad)  
   140003c4a:	je     0x140003cb1
   140003c4c:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x43007d00
   140003c55:	ins    BYTE PTR es:[rdi],dx
   140003c56:	outs   dx,DWORD PTR ds:[rsi]
   140003c57:	jae    0x140003cbe
   140003c59:	rex.W (bad) 
   140003c5b:	outs   dx,BYTE PTR ds:[rsi]
   140003c5c:	fs ins BYTE PTR es:[rdi],dx
   140003c5e:	add    BYTE PTR gs:[rbx+0x45],cl
   140003c62:	push   rdx
   140003c63:	rex.WRX
   140003c64:	rex.RB
   140003c65:	xor    r14,QWORD PTR [rdx]
   140003c68:	cs fs ins BYTE PTR es:[rdi],dx
   140003c6b:	ins    BYTE PTR es:[rdi],dx
   140003c6c:	add    BYTE PTR [rax],al
   140003c6e:	mov    bl,0x0
   140003c70:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f42676f
   140003c78:	js     0x140003cca
   140003c7a:	(bad)  
   140003c7b:	jb     0x140003cde
   140003c7d:	ins    DWORD PTR es:[rdi],dx
   140003c7e:	push   rdi
   140003c7f:	add    ch,cl
   140003c81:	add    DWORD PTR [rdi+0x65],eax
   140003c84:	je     0x140003cdd
   140003c86:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140003c8d:	outs   dx,BYTE PTR ds:[rsi]
   140003c8e:	addr32 push rax
   140003c90:	je     0x140003d04
   140003c92:	push   rdi
   140003c93:	add    BYTE PTR [rax],bh
   140003c95:	add    edx,DWORD PTR [rbx+0x65]
   140003c98:	je     0x140003cf1
   140003c9a:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140003ca1:	outs   dx,BYTE PTR ds:[rsi]
   140003ca2:	addr32 push rax
   140003ca4:	je     0x140003d18
   140003ca6:	push   rdi
   140003ca7:	add    BYTE PTR [rsi+0x73654400],ch
   140003cad:	je     0x140003d21
   140003caf:	outs   dx,DWORD PTR ds:[rsi]
   140003cb0:	jns    0x140003d09
   140003cb2:	imul   ebp,DWORD PTR [rsi+0x64],0x4300776f
   140003cb9:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   140003cbd:	fs push rbx
   140003cbf:	je     0x140003d33
   140003cc1:	imul   ebp,DWORD PTR [rsi+0x67],0x2360057
   140003cc8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140003cca:	(bad)  
   140003ccb:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   140003cd0:	push   rdi
   140003cd1:	add    cl,bl
   140003cd3:	add    dl,BYTE PTR [rbx+0x65]
   140003cd6:	outs   dx,BYTE PTR ds:[rsi]
   140003cd7:	fs rex.R ins BYTE PTR es:[rdi],dx
   140003cda:	addr32 rex.WB je 0x140003d43
   140003cde:	ins    DWORD PTR es:[rdi],dx
   140003cdf:	rex.WRB
   140003ce0:	gs jae 0x140003d56
   140003ce3:	(bad)  
   140003ce4:	addr32 gs push rdi
   140003ce7:	add    BYTE PTR [rax+0x3],al
   140003cea:	push   rbx
   140003ceb:	gs je  0x140003d45
   140003cee:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   140003cf5:	js     0x140003d6b
   140003cf7:	push   rdi
   140003cf8:	add    BYTE PTR [rax],al
   140003cfa:	rex add DWORD PTR [rdi+0x65],eax
   140003cfe:	je     0x140003d44
   140003d00:	ins    BYTE PTR es:[rdi],dx
   140003d01:	addr32 rex.WB je 0x140003d6a
   140003d05:	ins    DWORD PTR es:[rdi],dx
   140003d06:	add    BYTE PTR [rax],al
   140003d08:	out    0x0,al
   140003d0a:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140003d0c:	(bad)  
   140003d0d:	(bad)  
   140003d0e:	ins    BYTE PTR es:[rdi],dx
   140003d0f:	gs push rdi
   140003d11:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140003d18:	add    r10,QWORD PTR [rbx+0x68]
   140003d1c:	outs   dx,DWORD PTR ds:[rsi]
   140003d1d:	ja     0x140003d76
   140003d1f:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140003d26:	loop   0x140003d2a
   140003d28:	push   rbx
   140003d29:	outs   dx,BYTE PTR gs:[rsi]
   140003d2b:	fs rex.WRB
   140003d2d:	gs jae 0x140003da3
   140003d30:	(bad)  
   140003d31:	addr32 gs push rdi
   140003d34:	add    BYTE PTR [rax],al
   140003d36:	jmp    0x1a46e823b
   140003d3b:	imul   r12d,DWORD PTR [rcx+0x6c],0x5500676f
   140003d43:	push   rbx
   140003d44:	rex.RB push r10
   140003d46:	xor    esi,DWORD PTR [rdx]
   140003d48:	cs fs ins BYTE PTR es:[rdi],dx
   140003d4b:	ins    BYTE PTR es:[rdi],dx
   140003d4c:	add    BYTE PTR [rax],al
   140003d4e:	imul   eax,DWORD PTR [rbx],0x6e73765f
   140003d54:	ja     0x140003dc6
   140003d56:	jb     0x140003dc1
   140003d58:	outs   dx,BYTE PTR ds:[rsi]
   140003d59:	je     0x140003dc1
   140003d5b:	add    BYTE PTR [rsp+rax*1+0x66],cl
   140003d5f:	jb     0x140003dc6
   140003d61:	add    BYTE PTR gs:[rax],al
   140003d64:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140003d6b:	movsxd eax,DWORD PTR [rax]
   140003d6d:	add    BYTE PTR [rdi+0x61635f00],bh
   140003d73:	ins    BYTE PTR es:[rdi],dx
   140003d74:	ins    BYTE PTR es:[rdi],dx
   140003d75:	outs   dx,BYTE PTR ds:[rsi]
   140003d76:	gs ja  0x140003de1
   140003d79:	add    BYTE PTR [rbp+0x0],dl
   140003d7c:	pop    rdi
   140003d7d:	pop    rax
   140003d7e:	movsxd esi,DWORD PTR [rax+0x74]
   140003d81:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140003d8a:	pop    rdi
   140003d8b:	(bad)  
   140003d8c:	ins    DWORD PTR es:[rdi],dx
   140003d8d:	jae    0x140003df6
   140003d8f:	pop    rdi
   140003d90:	gs js  0x140003dfc
   140003d93:	je     0x140003d95
   140003d95:	add    BYTE PTR [rdi+0x0],bh
   140003d98:	pop    rdi
   140003d99:	pop    rdi
   140003d9a:	addr32 gs je 0x140003e0b
   140003d9e:	(bad)  
   140003d9f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140003da6:	mov    es,WORD PTR [rax]
   140003da8:	pop    rdi
   140003da9:	pop    rdi
   140003daa:	jae    0x140003e11
   140003dac:	je     0x140003e0d
   140003dae:	(bad)  
   140003daf:	jo     0x140003e21
   140003db1:	pop    rdi
   140003db2:	je     0x140003e2d
   140003db4:	jo     0x140003e1b
   140003db6:	add    BYTE PTR [rax],al
   140003db8:	xor    al,BYTE PTR [riz*2+0x746978]
   140003dbf:	add    BYTE PTR [rsi],cl
   140003dc1:	add    DWORD PTR [rdi+0x65],ebx
   140003dc4:	js     0x140003e2f
   140003dc6:	je     0x140003dc8
   140003dc8:	rol    DWORD PTR [rax],0x5f
   140003dcb:	movsxd esp,DWORD PTR [rbp+0x78]
   140003dce:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140003dd6:	jae    0x140003e3d
   140003dd8:	je     0x140003e4f
   140003dda:	jae    0x140003e41
   140003ddc:	jb     0x140003e4b
   140003dde:	(bad)  
   140003ddf:	je     0x140003e49
   140003de1:	gs jb  0x140003e56
   140003de4:	add    BYTE PTR [rax],al
   140003de6:	jge    0x140003de9
   140003de8:	pop    rdi
   140003de9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140003df0:	ins    DWORD PTR es:[rdi],dx
   140003df1:	add    BYTE PTR [rdi+0x0],dl
   140003df4:	pop    rdi
   140003df5:	pop    rdi
   140003df6:	rex.XB pop r15
   140003df8:	jae    0x140003e6a
   140003dfa:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140003dfe:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140003e05:	ins    BYTE PTR es:[rdi],dx
   140003e06:	gs jb  0x140003e09
   140003e09:	add    BYTE PTR [rdi],ah
   140003e0b:	add    DWORD PTR [rdi+0x66],ebx
   140003e0e:	ins    DWORD PTR es:[rdi],dx
   140003e0f:	outs   dx,DWORD PTR ds:[rsi]
   140003e10:	fs add BYTE PTR gs:[rax],al
   140003e14:	rol    BYTE PTR [rax],cl
   140003e16:	pop    rdi
   140003e17:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140003e1a:	ins    DWORD PTR es:[rdi],dx
   140003e1b:	outs   dx,DWORD PTR ds:[rsi]
   140003e1c:	fs add BYTE PTR gs:[rax],al
   140003e20:	ins    DWORD PTR es:[rdi],dx
   140003e21:	jae    0x140003e99
   140003e23:	movsxd esi,DWORD PTR [rdx+0x74]
   140003e26:	cs fs ins BYTE PTR es:[rdi],dx
   140003e29:	ins    BYTE PTR es:[rdi],dx
   140003e2a:	add    BYTE PTR [rax],al
   140003e2c:	(bad)  
   140003e2d:	add    BYTE PTR [rdi],bh
   140003e2f:	je     0x140003e96
   140003e31:	jb     0x140003ea0
   140003e33:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140003e3a:	pop    rcx
   140003e3b:	pop    r8
   140003e3d:	pop    rax
   140003e3e:	pop    rdx
   140003e3f:	add    BYTE PTR [rdi],al
   140003e41:	add    BYTE PTR [rbx+0x6f],al
   140003e44:	ins    DWORD PTR es:[rdi],dx
   140003e45:	ins    DWORD PTR es:[rdi],dx
   140003e46:	(bad)  
   140003e47:	outs   dx,BYTE PTR ds:[rsi]
   140003e48:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   140003e51:	addr32 jbe 0x140003eab
   140003e54:	add    BYTE PTR [rax],al
   140003e56:	mov    dh,0x1
   140003e58:	push   rbx
   140003e59:	push   0x456c6c65
   140003e5e:	js     0x140003ec5
   140003e60:	movsxd esi,DWORD PTR [rbp+0x74]
   140003e63:	gs push rdi
   140003e65:	add    BYTE PTR [rbx+0x48],dl
   140003e68:	rex.RB
   140003e69:	rex.WR
   140003e6a:	xor    r14,QWORD PTR [rdx]
   140003e6d:	cs fs ins BYTE PTR es:[rdi],dx
   140003e70:	ins    BYTE PTR es:[rdi],dx
   140003e71:	add    BYTE PTR [rbx],ch
   140003e73:	add    DWORD PTR [rbx+0x74],edx
   140003e76:	jb     0x140003ebb
   140003e78:	ins    DWORD PTR es:[rdi],dx
   140003e79:	jo     0x140003ec9
   140003e7b:	rex.WB push r15
   140003e7d:	add    BYTE PTR [rbx+0x48],dl
   140003e80:	rex.WR push rdi
   140003e82:	push   r8
   140003e84:	rex.WB
   140003e85:	cs fs ins BYTE PTR es:[rdi],dx
   140003e88:	ins    BYTE PTR es:[rdi],dx
   140003e89:	add    BYTE PTR [rbp+0x5],ch
   140003e8c:	push   rbx
   140003e8d:	ins    BYTE PTR es:[rdi],dx
   140003e8e:	gs gs jo 0x140003e92
   140003e92:	pop    rsi
   140003e93:	add    eax,0x55746553
   140003e98:	outs   dx,BYTE PTR ds:[rsi]
   140003e99:	push   0x6c646e61
   140003e9e:	gs fs rex.RB js 0x140003f06
   140003ea3:	gs jo  0x140003f1a
   140003ea6:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003ead:	gs jb  0x140003eb0
   140003eb0:	ss add al,0x51
   140003eb3:	jne    0x140003f1a
   140003eb5:	jb     0x140003f30
   140003eb7:	push   rax
   140003eb8:	gs jb  0x140003f21
   140003ebb:	outs   dx,DWORD PTR ds:[rsi]
   140003ebc:	jb     0x140003f2b
   140003ebe:	(bad)  
   140003ebf:	outs   dx,BYTE PTR ds:[rsi]
   140003ec0:	movsxd esp,DWORD PTR [rbp+0x43]
   140003ec3:	outs   dx,DWORD PTR ds:[rsi]
   140003ec4:	jne    0x140003f34
   140003ec6:	je     0x140003f2d
   140003ec8:	jb     0x140003eca
   140003eca:	adc    DWORD PTR [rdx],eax
   140003ecc:	rex.RXB
   140003ecd:	gs je  0x140003f13
   140003ed0:	jne    0x140003f44
   140003ed2:	jb     0x140003f39
   140003ed4:	outs   dx,BYTE PTR ds:[rsi]
   140003ed5:	je     0x140003f27
   140003ed7:	jb     0x140003f48
   140003ed9:	movsxd esp,DWORD PTR [rbp+0x73]
   140003edc:	jae    0x140003f27
   140003ede:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b46585e7
   140003ee5:	rex.XB jne 0x140003f5a
   140003ee8:	jb     0x140003f4f
   140003eea:	outs   dx,BYTE PTR ds:[rsi]
   140003eeb:	je     0x140003f41
   140003eed:	push   0x64616572
   140003ef2:	rex.WB
   140003ef3:	add    BYTE PTR fs:[rax],al
   140003ef6:	loopne 0x140003efa
   140003ef8:	rex.RXB
   140003ef9:	gs je  0x140003f4f
   140003efc:	jns    0x140003f71
   140003efe:	je     0x140003f65
   140003f00:	ins    DWORD PTR es:[rdi],dx
   140003f01:	push   rsp
   140003f02:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140003f09:	ins    BYTE PTR es:[rdi],dx
   140003f0a:	gs push rsp
   140003f0c:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140003f13:	gs je  0x140003f6a
   140003f16:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140003f1d:	je     0x140003f1f
   140003f1f:	add    BYTE PTR [rdi+0x6c745204],dh
   140003f25:	rex.XB (bad) 
   140003f27:	jo     0x140003f9d
   140003f29:	jne    0x140003f9d
   140003f2b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140003f2e:	outs   dx,BYTE PTR ds:[rsi]
   140003f2f:	je     0x140003f96
   140003f31:	js     0x140003fa7
   140003f33:	add    BYTE PTR [rsi+0x6c745204],bh
   140003f39:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140003f3b:	outs   dx,DWORD PTR ds:[rsi]
   140003f3c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140003f40:	jne    0x140003fb0
   140003f42:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140003f46:	outs   dx,BYTE PTR ds:[rsi]
   140003f47:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140003f49:	je     0x140003fbd
   140003f4b:	jns    0x140003f4d
   140003f4d:	add    ch,al
   140003f4f:	add    al,0x52
   140003f51:	je     0x140003fbf
   140003f53:	push   rsi
   140003f54:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140003f5b:	outs   dx,BYTE PTR ds:[rsi]
   140003f5c:	ja     0x140003fc7
   140003f5e:	outs   dx,BYTE PTR ds:[rsi]
   140003f5f:	add    BYTE PTR fs:[rax],al
   140003f62:	sahf   
   140003f63:	add    eax,0x61686e55
   140003f68:	outs   dx,BYTE PTR ds:[rsi]
   140003f69:	fs ins BYTE PTR es:[rdi],dx
   140003f6b:	gs fs rex.RB js 0x140003fd3
   140003f70:	gs jo  0x140003fe7
   140003f73:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003f7a:	gs jb  0x140003f7d
   140003f7d:	add    BYTE PTR [rax],dl
   140003f7f:	add    al,BYTE PTR [rdi+0x65]
   140003f82:	je     0x140003fc7
   140003f84:	jne    0x140003ff8
   140003f86:	jb     0x140003fed
   140003f88:	outs   dx,BYTE PTR ds:[rsi]
   140003f89:	je     0x140003fdb
   140003f8b:	jb     0x140003ffc
   140003f8d:	movsxd esp,DWORD PTR [rbp+0x73]
   140003f90:	jae    0x140003f92
   140003f92:	jl     0x140003f99
   140003f94:	push   rsp
   140003f95:	gs jb  0x140004005
   140003f98:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140003f9f:	outs   dx,DWORD PTR ds:[rsi]
   140003fa0:	movsxd esp,DWORD PTR [rbp+0x73]
   140003fa3:	jae    0x140003fa5
   140003fa5:	add    BYTE PTR [rsi+0x6d656d04],dl
   140003fab:	jae    0x140004012
   140003fad:	je     0x140003faf
	...

Disassembly of section .data:

0000000140004000 <.data>:
   140004000:	add    DWORD PTR [rax],eax
   140004002:	add    BYTE PTR [rax],al
   140004004:	add    BYTE PTR [rax],al
   140004006:	add    BYTE PTR [rax],al
   140004008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000400e:	add    BYTE PTR [rax],al
   140004010:	int    0x5d
   140004012:	and    dl,dl
   140004014:	data16 (bad) 
   140004016:	(bad)  
   140004017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140005000 <.pdata>:
   140005000:	adc    BYTE PTR [rax],dl
   140005002:	add    BYTE PTR [rax],al
   140005004:	adc    BYTE PTR ss:[rax],al
   140005007:	add    BYTE PTR [rax+0x3c000037],al
   14000500d:	adc    BYTE PTR [rax],al
   14000500f:	add    BYTE PTR [rax+rdx*1+0x0],bh
   140005013:	add    BYTE PTR [rax-0x6fffffc9],cl
   140005019:	adc    BYTE PTR [rax],al
   14000501b:	add    BYTE PTR [rbx],cl
   14000501d:	adc    al,BYTE PTR [rax]
   14000501f:	add    BYTE PTR [rdi+rsi*1+0x125c0000],dl
   140005026:	add    BYTE PTR [rax],al
   140005028:	rcl    BYTE PTR [rdx],cl
   14000502a:	add    BYTE PTR [rax],al
   14000502c:	lods   al,BYTE PTR ds:[rsi]
   14000502d:	(bad)  
   14000502e:	add    BYTE PTR [rax],al
   140005030:	fcom   DWORD PTR [rdx]
   140005032:	add    BYTE PTR [rax],al
   140005034:	(bad)  
   140005035:	adc    eax,DWORD PTR [rax]
   140005037:	add    BYTE PTR [rdi+rsi*1+0x13a00000],dh
   14000503e:	add    BYTE PTR [rax],al
   140005040:	(bad)  
   140005041:	adc    al,0x0
   140005043:	add    al,al
   140005045:	(bad)  
   140005046:	add    BYTE PTR [rax],al
   140005048:	and    BYTE PTR [rax+rax*1],dl
   14000504b:	add    bl,dl
   14000504d:	adc    al,0x0
   14000504f:	add    al,dl
   140005051:	(bad)  
   140005052:	add    BYTE PTR [rax],al
   140005054:	fcom   QWORD PTR [rax+rax*1]
   140005057:	add    BYTE PTR [rbp+0x16],cl
   14000505a:	add    BYTE PTR [rax],al
   14000505c:	in     al,0x37
   14000505e:	add    BYTE PTR [rax],al
   140005060:	push   rsp
   140005061:	(bad)  
   140005062:	add    BYTE PTR [rax],al
   140005064:	loop   0x14000507c
   140005066:	add    BYTE PTR [rax],al
   140005068:	add    al,0x38
   14000506a:	add    BYTE PTR [rax],al
   14000506c:	call   0x11f005087
   140005071:	sbb    BYTE PTR [rax],al
   140005073:	add    BYTE PTR [rax+rdi*1],bl
   140005076:	add    BYTE PTR [rax],al
   140005078:	call   0x133005095
   14000507d:	sbb    DWORD PTR [rax],eax
   14000507f:	add    BYTE PTR [rax+rdi*1],bh
   140005082:	add    BYTE PTR [rax],al
   140005084:	add    BYTE PTR [rdx],bl
   140005086:	add    BYTE PTR [rax],al
   140005088:	adc    BYTE PTR [rbx],bl
   14000508a:	add    BYTE PTR [rax],al
   14000508c:	push   rsp
   14000508d:	cmp    BYTE PTR [rax],al
   14000508f:	add    BYTE PTR [rax],ah
   140005091:	sbb    eax,DWORD PTR [rax]
   140005093:	add    BYTE PTR [rsi+0x1b],al
   140005096:	add    BYTE PTR [rax],al
   140005098:	xor    BYTE PTR [rdi],0x0
   14000509b:	add    BYTE PTR [rax+0x1b],dl
   14000509e:	add    BYTE PTR [rax],al
   1400050a0:	movabs ds:0xac0000386400001b,eax
   1400050a9:	sbb    eax,DWORD PTR [rax]
   1400050ab:	add    BYTE PTR [rsi],cl
   1400050ad:	and    al,0x0
   1400050af:	add    BYTE PTR [rax+0x38],dh
   1400050b2:	add    BYTE PTR [rax],al
   1400050b4:	and    BYTE PTR [rax+rax*1],ah
   1400050b7:	add    BYTE PTR [rcx+0x24],bl
   1400050ba:	add    BYTE PTR [rax],al
   1400050bc:	cmp    BYTE PTR fs:[rax],al
   1400050bf:	add    BYTE PTR [rax+0x24],ah
   1400050c2:	add    BYTE PTR [rax],al
   1400050c4:	(bad)  
   1400050c5:	and    eax,0x393c0000
   1400050ca:	add    BYTE PTR [rax],al
   1400050cc:	rex and eax,0x25890000
   1400050d2:	add    BYTE PTR [rax],al
   1400050d4:	cwde   
   1400050d5:	cmp    BYTE PTR [rax],al
   1400050d7:	add    BYTE PTR [rax+0x62000025],dl
   1400050dd:	(bad)  
   1400050de:	add    BYTE PTR [rax],al
   1400050e0:	movabs al,ds:0x8200002770000038
   1400050e9:	(bad)  
   1400050ea:	add    BYTE PTR [rax],al
   1400050ec:	cmp    al,0x39
   1400050ee:	add    BYTE PTR [rax],al
   1400050f0:	movabs al,ds:0xd0000027be000027
   1400050f9:	cmp    BYTE PTR [rax],al
   1400050fb:	add    al,dh
   1400050fd:	(bad)  
   1400050fe:	add    BYTE PTR [rax],al
   140005100:	sub    DWORD PTR [rax],ebp
   140005102:	add    BYTE PTR [rax],al
   140005104:	cmp    al,0x39
   140005106:	add    BYTE PTR [rax],al
   140005108:	xor    BYTE PTR [rax],ch
   14000510a:	add    BYTE PTR [rax],al
   14000510c:	rex.W sub BYTE PTR [rax],al
   14000510f:	add    BYTE PTR [rcx+rdi*1],bh
   140005112:	add    BYTE PTR [rax],al
   140005114:	pop    rsp
   140005115:	sub    BYTE PTR [rax],al
   140005117:	add    BYTE PTR [rax-0x2bffffd8],dh
   14000511d:	cmp    BYTE PTR [rax],al
   14000511f:	add    BYTE PTR [rax-0x2ffffd8],bh
   140005125:	sub    BYTE PTR [rax],al
   140005127:	add    BYTE PTR [rax+0x60000037],al
   14000512d:	sub    DWORD PTR [rax],eax
   14000512f:	add    BYTE PTR [rbp-0xbffffd7],ch
   140005135:	cmp    BYTE PTR [rax],al
   140005137:	add    ah,dh
   140005139:	sub    DWORD PTR [rax],eax
   14000513b:	add    ah,al
   14000513d:	sub    al,BYTE PTR [rax]
   14000513f:	add    BYTE PTR [rax],ah
   140005141:	cmp    DWORD PTR [rax],eax
   140005143:	add    ah,ah
   140005145:	sub    al,BYTE PTR [rax]
   140005147:	add    BYTE PTR [rax],bl
   140005149:	sub    eax,DWORD PTR [rax]
   14000514b:	add    BYTE PTR [rax+0x20000037],al
   140005151:	sub    eax,DWORD PTR [rax]
   140005153:	add    BYTE PTR [rcx+0x2c00002c],dl
   140005159:	cmp    DWORD PTR [rax],eax
   14000515b:	add    BYTE PTR [rax-0x3affffd4],ch
   140005161:	sub    al,0x0
   140005163:	add    BYTE PTR [rcx+rdi*1],bh
   140005166:	add    BYTE PTR [rax],al
   140005168:	int3   
   140005169:	sub    al,0x0
   14000516b:	add    BYTE PTR [rdi],ch
   14000516d:	sub    eax,0x37800000
   140005172:	add    BYTE PTR [rax],al
   140005174:	push   rax
   140005175:	sub    eax,0x2d520000
   14000517a:	add    BYTE PTR [rax],al
   14000517c:	cmp    BYTE PTR [rcx],bh
   14000517e:	add    BYTE PTR [rax],al
   140005180:	jo     0x1400051af
   140005182:	add    BYTE PTR [rax],al
   140005184:	mov    ebp,0x4800002d
   140005189:	cmp    DWORD PTR [rax],eax
   14000518b:	add    dh,al
   14000518d:	sub    eax,0x2de40000
   140005192:	add    BYTE PTR [rax],al
   140005194:	sbb    BYTE PTR [rcx],bh
   140005196:	add    BYTE PTR [rax],al
   140005198:	lock sub eax,0x2e100000
   14000519e:	add    BYTE PTR [rax],al
   1400051a0:	sbb    BYTE PTR [rcx],bh
	...

Disassembly of section .rsrc:

0000000140006000 <.rsrc>:
	...
   14000600c:	add    DWORD PTR [rax],eax
   14000600e:	add    al,0x0
   140006010:	mov    eax,0x38800003
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rbx],0x0
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	push   rax
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	or     BYTE PTR [rsi],0x0
   140006022:	add    BYTE PTR [rax],al
   140006024:	enter  0x0,0x80
   140006028:	adc    BYTE PTR [rax],al
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	loopne 0x14000602e
   14000602e:	add    BYTE PTR [rax+0x18],al
   140006034:	clc    
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    BYTE PTR [rax],0x0
	...
   140006046:	add    DWORD PTR [rax],eax
   140006048:	add    DWORD PTR [rax],eax
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	adc    BYTE PTR [rcx],al
   14000604e:	add    BYTE PTR [rax+0x0],al
	...
   14000605c:	add    BYTE PTR [rax],al
   14000605e:	or     eax,0x100
   140006063:	add    BYTE PTR [rax],ch
   140006065:	add    DWORD PTR [rax],eax
   140006067:	add    BYTE PTR [rdx],0x0
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	rex add DWORD PTR [rax],eax
   14000606f:	add    BYTE PTR [rbx],0x0
   140006072:	add    BYTE PTR [rax],al
   140006074:	pop    rax
   140006075:	add    DWORD PTR [rax],eax
   140006077:	add    BYTE PTR [rax+rax*1],0x0
   14000607b:	add    BYTE PTR [rax+0x1],dh
   14000607e:	add    BYTE PTR [rax+0x5],al
   140006084:	mov    BYTE PTR [rcx],al
   140006086:	add    BYTE PTR [rax+0x6],al
   14000608c:	movabs al,ds:0xb800000007800001
   140006095:	add    DWORD PTR [rax],eax
   140006097:	or     BYTE PTR [rax],0x0
   14000609a:	add    BYTE PTR [rax],al
   14000609c:	rol    BYTE PTR [rcx],1
   14000609e:	add    BYTE PTR [rax+0x9],al
   1400060a4:	call   0x14a8060aa
   1400060a9:	add    BYTE PTR [rax],al
   1400060ab:	add    BYTE PTR [rax],al
   1400060ad:	add    al,BYTE PTR [rax]
   1400060af:	or     BYTE PTR [rbx],0x0
   1400060b2:	add    BYTE PTR [rax],al
   1400060b4:	sbb    BYTE PTR [rdx],al
   1400060b6:	add    BYTE PTR [rax+0xc],al
   1400060bc:	xor    BYTE PTR [rdx],al
   1400060be:	add    BYTE PTR [rax+0xd],al
   1400060c4:	rex.W add al,BYTE PTR [rax]
   1400060c7:	add    BYTE PTR [rax],0x0
	...
   1400060d6:	add    DWORD PTR [rax],eax
   1400060d8:	add    BYTE PTR gs:[rax],al
   1400060db:	add    BYTE PTR [rax+0x2],ah
   1400060de:	add    BYTE PTR [rax+0x0],al
	...
   1400060ec:	add    BYTE PTR [rax],al
   1400060ee:	add    DWORD PTR [rax],eax
   1400060f0:	add    DWORD PTR [rax],eax
   1400060f2:	add    BYTE PTR [rax],al
   1400060f4:	js     0x1400060f8
   1400060f6:	add    BYTE PTR [rax+0x0],al
	...
   140006104:	add    BYTE PTR [rax],al
   140006106:	add    DWORD PTR [rax],eax
   140006108:	add    DWORD PTR [rax],eax
   14000610a:	add    BYTE PTR [rax],al
   14000610c:	nop
   14000610d:	add    al,BYTE PTR [rax]
   14000610f:	add    BYTE PTR [rax],0x0
	...
   14000611e:	add    DWORD PTR [rax],eax
   140006120:	or     DWORD PTR [rax+rax*1],eax
   140006123:	add    BYTE PTR [rax+0x2],ch
	...
   140006135:	add    BYTE PTR [rcx],al
   140006137:	add    BYTE PTR [rcx],cl
   140006139:	add    al,0x0
   14000613b:	add    BYTE PTR [rax+0x2],bh
	...
   14000614d:	add    BYTE PTR [rcx],al
   14000614f:	add    BYTE PTR [rcx],cl
   140006151:	add    al,0x0
   140006153:	add    al,cl
   140006155:	add    al,BYTE PTR [rax]
	...
   140006163:	add    BYTE PTR [rax],al
   140006165:	add    BYTE PTR [rcx],al
   140006167:	add    BYTE PTR [rcx],cl
   140006169:	add    al,0x0
   14000616b:	add    al,bl
   14000616d:	add    al,BYTE PTR [rax]
	...
   14000617b:	add    BYTE PTR [rax],al
   14000617d:	add    BYTE PTR [rcx],al
   14000617f:	add    BYTE PTR [rcx],cl
   140006181:	add    al,0x0
   140006183:	add    al,ch
   140006185:	add    al,BYTE PTR [rax]
	...
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rcx],al
   140006197:	add    BYTE PTR [rcx],cl
   140006199:	add    al,0x0
   14000619b:	add    al,bh
   14000619d:	add    al,BYTE PTR [rax]
	...
   1400061ab:	add    BYTE PTR [rax],al
   1400061ad:	add    BYTE PTR [rcx],al
   1400061af:	add    BYTE PTR [rcx],cl
   1400061b1:	add    al,0x0
   1400061b3:	add    BYTE PTR [rax],cl
   1400061b5:	add    eax,DWORD PTR [rax]
	...
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rcx],al
   1400061c7:	add    BYTE PTR [rcx],cl
   1400061c9:	add    al,0x0
   1400061cb:	add    BYTE PTR [rax],bl
   1400061cd:	add    eax,DWORD PTR [rax]
	...
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rcx],al
   1400061df:	add    BYTE PTR [rcx],cl
   1400061e1:	add    al,0x0
   1400061e3:	add    BYTE PTR [rax],ch
   1400061e5:	add    eax,DWORD PTR [rax]
	...
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rcx],al
   1400061f7:	add    BYTE PTR [rcx],cl
   1400061f9:	add    al,0x0
   1400061fb:	add    BYTE PTR [rax],bh
   1400061fd:	add    eax,DWORD PTR [rax]
	...
   14000620b:	add    BYTE PTR [rax],al
   14000620d:	add    BYTE PTR [rcx],al
   14000620f:	add    BYTE PTR [rcx],cl
   140006211:	add    al,0x0
   140006213:	add    BYTE PTR [rax+0x3],cl
	...
   140006226:	add    DWORD PTR [rax],eax
   140006228:	or     DWORD PTR [rax+rax*1],eax
   14000622b:	add    BYTE PTR [rax+0x3],bl
	...
   14000623e:	add    DWORD PTR [rax],eax
   140006240:	or     DWORD PTR [rax+rax*1],eax
   140006243:	add    BYTE PTR [rax+0x3],ch
	...
   140006256:	add    DWORD PTR [rax],eax
   140006258:	or     DWORD PTR [rax+rax*1],eax
   14000625b:	add    BYTE PTR [rax+0x3],bh
	...
   14000626e:	add    DWORD PTR [rax],eax
   140006270:	or     DWORD PTR [rax+rax*1],eax
   140006273:	add    BYTE PTR [rax+0x3],cl
	...
   140006285:	add    BYTE PTR [rcx],al
   140006287:	add    BYTE PTR [rcx],cl
   140006289:	add    al,0x0
   14000628b:	add    BYTE PTR [rax+0x3],bl
	...
   14000629d:	add    BYTE PTR [rcx],al
   14000629f:	add    BYTE PTR [rcx],cl
   1400062a1:	add    al,0x0
   1400062a3:	add    BYTE PTR [rax-0x57fffffd],ch
   1400062a9:	push   0x1
   1400062ab:	add    al,ah
	...
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rax+0x67],dh
   1400062ba:	add    BYTE PTR [rax],al
   1400062bc:	push   0x6
   1400062c1:	add    BYTE PTR [rax],al
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    al,bl
   1400062c9:	ins    DWORD PTR es:[rdi],dx
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	call   0x1400062d3
   1400062d1:	add    BYTE PTR [rax],al
   1400062d3:	add    BYTE PTR [rax],al
   1400062d5:	add    BYTE PTR [rax],al
   1400062d7:	add    al,al
   1400062d9:	jo     0x1400062db
   1400062db:	add    al,ch
   1400062dd:	add    DWORD PTR [rax],eax
	...
   1400062e7:	add    BYTE PTR [rax+0x28000072],ch
   1400062ed:	add    DWORD PTR [rax],eax
	...
   1400062f7:	add    al,dl
   1400062f9:	jae    0x1400062fb
   1400062fb:	add    BYTE PTR [rax+0xe],ch
   140006301:	add    BYTE PTR [rax],al
   140006303:	add    BYTE PTR [rax],al
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    BYTE PTR [rax-0x7e],bh
   14000630a:	add    BYTE PTR [rax],al
   14000630c:	test   al,0x8
	...
   140006316:	add    BYTE PTR [rax],al
   140006318:	and    BYTE PTR [rbx+0x6c80000],cl
	...
   140006326:	add    BYTE PTR [rax],al
   140006328:	call   0x1a80063be
   14000632d:	add    eax,0x0
   140006332:	add    BYTE PTR [rax],al
   140006334:	add    BYTE PTR [rax],al
   140006336:	add    BYTE PTR [rax],al
   140006338:	push   rax
   140006339:	xchg   edi,eax
   14000633a:	add    BYTE PTR [rax],al
   14000633c:	mov    dl,0x8a
	...
   140006346:	add    BYTE PTR [rax],al
   140006348:	or     BYTE PTR [rdx],ah
   14000634a:	add    DWORD PTR [rax],eax
   14000634c:	test   al,0x25
	...
   140006356:	add    BYTE PTR [rax],al
   140006358:	mov    al,0x47
   14000635a:	add    DWORD PTR [rax],eax
   14000635c:	test   al,0x10
	...
   140006366:	add    BYTE PTR [rax],al
   140006368:	pop    rax
   140006369:	pop    rax
   14000636a:	add    DWORD PTR [rax],eax
   14000636c:	mov    BYTE PTR [rcx],cl
	...
   140006376:	add    BYTE PTR [rax],al
   140006378:	loopne 0x1400063db
   14000637a:	add    DWORD PTR [rax],eax
   14000637c:	push   0x4
   140006381:	add    BYTE PTR [rax],al
   140006383:	add    BYTE PTR [rax],al
   140006385:	add    BYTE PTR [rax],al
   140006387:	add    BYTE PTR [rax+0x66],cl
   14000638a:	add    DWORD PTR [rax],eax
   14000638c:	mov    esp,0x0
   140006391:	add    BYTE PTR [rax],al
   140006393:	add    BYTE PTR [rax],al
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rax],cl
   140006399:	add    DWORD PTR [eax],eax
   14000639c:	movabs al,ds:0x3
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    al,al
   1400063a9:	movsxd eax,DWORD PTR [rax]
   1400063ab:	add    BYTE PTR [rax+0x3],dh
   1400063b1:	add    BYTE PTR [rax],al
   1400063b3:	add    BYTE PTR [rax],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    BYTE PTR [rbx],al
   1400063b9:	add    BYTE PTR [rbp+0x0],cl
   1400063bc:	push   rbp
   1400063bd:	add    BYTE PTR [rcx+0x0],cl
   1400063c0:	cmp    al,0x3f
   1400063c2:	js     0x140006431
   1400063c4:	ins    BYTE PTR es:[rdi],dx
   1400063c5:	and    BYTE PTR [rsi+0x65],dh
   1400063c8:	jb     0x14000643d
   1400063ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400063d1:	xor    BYTE PTR [rdx],ah
   1400063d3:	and    BYTE PTR [rbp+0x6e],ah
   1400063d6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400063d9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400063e0:	rex.RX sub eax,0x73202238
   1400063e6:	je     0x140006449
   1400063e8:	outs   dx,BYTE PTR ds:[rsi]
   1400063e9:	fs (bad) 
   1400063eb:	ins    BYTE PTR es:[rdi],dx
   1400063ec:	outs   dx,DWORD PTR ds:[rsi]
   1400063ed:	outs   dx,BYTE PTR ds:[rsi]
   1400063ee:	gs cmp eax,0x73657922
   1400063f4:	and    bh,BYTE PTR [rdi]
   1400063f6:	ds or  eax,0x2d213c0a
   1400063fc:	sub    eax,0x706f4320
   140006401:	jns    0x140006475
   140006403:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000640a:	sub    DWORD PTR [rax],esp
   14000640c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140006414:	je     0x140006436
   140006416:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006418:	jb     0x14000648a
   14000641a:	outs   dx,DWORD PTR ds:[rsi]
   14000641b:	jb     0x14000647e
   14000641d:	je     0x140006488
   14000641f:	outs   dx,DWORD PTR ds:[rsi]
   140006420:	outs   dx,BYTE PTR ds:[rsi]
   140006421:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0da254
   140006427:	cmp    al,0x61
   140006429:	jae    0x14000649e
   14000642b:	gs ins DWORD PTR es:[rdi],dx
   14000642d:	(bad)  
   14000642e:	ins    BYTE PTR es:[rdi],dx
   14000642f:	jns    0x140006451
   140006431:	js     0x1400064a0
   140006433:	ins    BYTE PTR es:[rdi],dx
   140006434:	outs   dx,BYTE PTR ds:[rsi]
   140006435:	jae    0x140006474
   140006437:	and    dh,BYTE PTR [rbp+0x72]
   14000643a:	outs   dx,BYTE PTR ds:[rsi]
   14000643b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000643e:	push   0x73616d65
   140006443:	sub    eax,0x7263696d
   140006448:	outs   dx,DWORD PTR ds:[rsi]
   140006449:	jae    0x1400064ba
   14000644b:	data16 je 0x14000647b
   14000644e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140006451:	cmp    ah,BYTE PTR [rcx+0x73]
   140006454:	ins    DWORD PTR es:[rdi],dx
   140006455:	cs jbe 0x140006489
   140006458:	and    ah,BYTE PTR [rax]
   14000645a:	and    BYTE PTR [rax+0x6d],bh
   14000645d:	ins    BYTE PTR es:[rdi],dx
   14000645e:	outs   dx,BYTE PTR ds:[rsi]
   14000645f:	jae    0x14000649b
   140006461:	(bad)  
   140006462:	jae    0x1400064d1
   140006464:	jbe    0x140006499
   140006466:	cmp    eax,0x6e727522
   14000646b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000646e:	push   0x73616d65
   140006473:	sub    eax,0x7263696d
   140006478:	outs   dx,DWORD PTR ds:[rsi]
   140006479:	jae    0x1400064ea
   14000647b:	data16 je 0x1400064ab
   14000647e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140006481:	cmp    ah,BYTE PTR [rcx+0x73]
   140006484:	ins    DWORD PTR es:[rdi],dx
   140006485:	cs jbe 0x1400064bb
   140006488:	and    ah,BYTE PTR [rax]
   14000648a:	ins    DWORD PTR es:[rdi],dx
   14000648b:	(bad)  
   14000648c:	outs   dx,BYTE PTR ds:[rsi]
   14000648d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140006494:	jb     0x140006509
   140006496:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000649d:	xor    BYTE PTR [rdx],ah
   14000649f:	ds or  eax,0x73613c0a
   1400064a5:	jae    0x14000650c
   1400064a7:	ins    DWORD PTR es:[rdi],dx
   1400064a8:	(bad)  
   1400064a9:	ins    BYTE PTR es:[rdi],dx
   1400064aa:	jns    0x1400064f5
   1400064ac:	fs outs dx,BYTE PTR gs:[rsi]
   1400064af:	je     0x14000651a
   1400064b1:	je     0x14000652c
   1400064b3:	or     eax,0x2020200a
   1400064b8:	and    BYTE PTR [rsi+0x65],dh
   1400064bb:	jb     0x140006530
   1400064bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400064c4:	xor    DWORD PTR [rsi],ebp
   1400064c6:	xor    BYTE PTR [rsi],ch
   1400064c8:	xor    BYTE PTR [rdx],ah
   1400064ca:	or     eax,0x2020200a
   1400064cf:	and    BYTE PTR [rax+0x72],dh
   1400064d2:	outs   dx,DWORD PTR ds:[rsi]
   1400064d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400064d6:	jae    0x140006547
   1400064d8:	jb     0x14000651b
   1400064da:	jb     0x14000653f
   1400064dc:	push   0x63657469
   1400064e1:	je     0x140006558
   1400064e3:	jb     0x14000654a
   1400064e5:	cmp    eax,0x646d6122
   1400064ea:	ss xor al,0x22
   1400064ed:	or     eax,0x2020200a
   1400064f2:	and    BYTE PTR [rsi+0x61],ch
   1400064f5:	ins    DWORD PTR es:[rdi],dx
   1400064f6:	gs cmp eax,0x63694d22
   1400064fc:	jb     0x14000656d
   1400064fe:	jae    0x14000656f
   140006500:	data16 je 0x140006531
   140006503:	push   rdi
   140006504:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000650b:	rex.RB jbe 0x140006573
   14000650e:	outs   dx,BYTE PTR ds:[rsi]
   14000650f:	je     0x14000657d
   140006511:	outs   dx,DWORD PTR ds:[rsi]
   140006512:	addr32 cs rex.RB jbe 0x14000657c
   140006517:	outs   dx,BYTE PTR ds:[rsi]
   140006518:	je     0x140006570
   14000651a:	ja     0x14000658e
   14000651c:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020852c
   140006522:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140006526:	gs cmp eax,0x6e697722
   14000652c:	xor    esi,DWORD PTR [rdx]
   14000652e:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3e943e
   140006534:	or     bh,BYTE PTR [rsp+riz*2]
   140006537:	gs jae 0x14000659d
   14000653a:	jb     0x1400065a5
   14000653c:	jo     0x1400065b2
   14000653e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576453e
   140006545:	outs   dx,BYTE PTR ds:[rsi]
   140006546:	je     0x140006568
   140006548:	push   rsi
   140006549:	imul   esp,DWORD PTR [rbp+0x77],0x53207265
   140006550:	outs   dx,BYTE PTR ds:[rsi]
   140006551:	(bad)  
   140006552:	jo     0x1400065bd
   140006554:	outs   dx,BYTE PTR ds:[rsi]
   140006555:	and    BYTE PTR [rcx+riz*2+0x75],cl
   140006559:	outs   dx,BYTE PTR ds:[rsi]
   14000655a:	movsxd ebp,DWORD PTR [rax+0x65]
   14000655d:	jb     0x14000659b
   14000655f:	(bad)  
   140006560:	fs gs jae 0x1400065c7
   140006564:	jb     0x1400065cf
   140006566:	jo     0x1400065dc
   140006568:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000656f:	or     bh,BYTE PTR [rsp+rsi*2]
   140006572:	jb     0x1400065e9
   140006574:	jae    0x1400065ea
   140006576:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006578:	outs   dx,WORD PTR ds:[rsi]
   14000657a:	and    BYTE PTR [rax+0x6d],bh
   14000657d:	ins    BYTE PTR es:[rdi],dx
   14000657e:	outs   dx,BYTE PTR ds:[rsi]
   14000657f:	jae    0x1400065be
   140006581:	and    dh,BYTE PTR [rbp+0x72]
   140006584:	outs   dx,BYTE PTR ds:[rsi]
   140006585:	cmp    dh,BYTE PTR [rbx+0x63]
   140006588:	push   0x73616d65
   14000658d:	sub    eax,0x7263696d
   140006592:	outs   dx,DWORD PTR ds:[rsi]
   140006593:	jae    0x140006604
   140006595:	data16 je 0x1400065c5
   140006598:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000659b:	cmp    ah,BYTE PTR [rcx+0x73]
   14000659e:	ins    DWORD PTR es:[rdi],dx
   14000659f:	cs jbe 0x1400065d5
   1400065a2:	and    bh,BYTE PTR [rsi]
   1400065a4:	or     eax,0x2020200a
   1400065a9:	and    BYTE PTR [rbx+rsi*2],bh
   1400065ac:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400065b0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400065b8:	and    BYTE PTR [rax],ah
   1400065ba:	and    BYTE PTR [rax],ah
   1400065bc:	and    BYTE PTR [rax],ah
   1400065be:	cmp    al,0x72
   1400065c0:	gs jno 0x140006638
   1400065c3:	gs jae 0x14000663a
   1400065c6:	gs fs push rax
   1400065c9:	jb     0x140006634
   1400065cb:	jbe    0x140006636
   1400065cd:	ins    BYTE PTR es:[rdi],dx
   1400065ce:	gs addr32 gs jae 0x140006611
   1400065d3:	or     eax,0x2020200a
   1400065d8:	and    BYTE PTR [rax],ah
   1400065da:	and    BYTE PTR [rax],ah
   1400065dc:	and    BYTE PTR [rax],ah
   1400065de:	and    BYTE PTR [rax],ah
   1400065e0:	and    BYTE PTR [rdx+rsi*2],bh
   1400065e3:	gs jno 0x14000665b
   1400065e6:	gs jae 0x14000665d
   1400065e9:	gs fs rex.RB js 0x140006653
   1400065ee:	movsxd esi,DWORD PTR [rbp+0x74]
   1400065f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400065f8:	ins    BYTE PTR es:[rdi],dx
   1400065f9:	or     eax,0x2020200a
   1400065fe:	and    BYTE PTR [rax],ah
   140006600:	and    BYTE PTR [rax],ah
   140006602:	and    BYTE PTR [rax],ah
   140006604:	and    BYTE PTR [rax],ah
   140006606:	and    BYTE PTR [rax],ah
   140006608:	and    BYTE PTR [rax],ah
   14000660a:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000660e:	gs ins BYTE PTR es:[rdi],dx
   140006610:	cmp    eax,0x67696822
   140006615:	push   0x41747365
   14000661a:	jbe    0x14000667d
   14000661c:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0xd22656c
   140006624:	or     ah,BYTE PTR [rax]
   140006626:	and    BYTE PTR [rax],ah
   140006628:	and    BYTE PTR [rax],ah
   14000662a:	and    BYTE PTR [rax],ah
   14000662c:	and    BYTE PTR [rax],ah
   14000662e:	and    BYTE PTR [rax],ah
   140006630:	and    BYTE PTR [rax],ah
   140006632:	and    BYTE PTR [rax],ah
   140006634:	and    BYTE PTR [rbp+0x69],dh
   140006637:	movsxd esp,DWORD PTR [r11+0x65]
   14000663b:	jae    0x1400066b0
   14000663d:	cmp    eax,0x6c616622
   140006642:	jae    0x1400066a9
   140006644:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160208654
   14000664a:	and    BYTE PTR [rax],ah
   14000664c:	and    BYTE PTR [rax],ah
   14000664e:	and    BYTE PTR [rax],ah
   140006650:	and    BYTE PTR [rax],ah
   140006652:	and    BYTE PTR [rdi],ch
   140006654:	ds or  eax,0x2020200a
   14000665a:	and    BYTE PTR [rax],ah
   14000665c:	and    BYTE PTR [rax],ah
   14000665e:	and    BYTE PTR [rdi+rbp*1],bh
   140006661:	jb     0x1400066c8
   140006663:	jno    0x1400066da
   140006665:	gs jae 0x1400066dc
   140006668:	gs fs push rax
   14000666b:	jb     0x1400066d6
   14000666d:	jbe    0x1400066d8
   14000666f:	ins    BYTE PTR es:[rdi],dx
   140006670:	gs addr32 gs jae 0x1400066b3
   140006675:	or     eax,0x2020200a
   14000667a:	and    BYTE PTR [rdi+rbp*1],bh
   14000667d:	jae    0x1400066e4
   14000667f:	movsxd esi,DWORD PTR [rbp+0x72]
   140006682:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000668a:	je     0x1400066fe
   14000668c:	jne    0x140006701
   14000668e:	je     0x1400066d9
   140006690:	outs   dx,BYTE PTR ds:[rsi]
   140006691:	outs   dx,WORD PTR ds:[rsi]
   140006693:	ds or  eax,0x73613c0a
   140006699:	ins    DWORD PTR es:[rdi],dx
   14000669a:	jbe    0x1400066cf
   14000669c:	cmp    ah,BYTE PTR [rcx+0x70]
   14000669f:	jo     0x14000670d
   1400066a1:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400066a8:	ds or  eax,0x2020200a
   1400066ae:	cmp    al,0x61
   1400066b0:	jae    0x14000671f
   1400066b2:	jbe    0x1400066e7
   1400066b4:	cmp    dh,BYTE PTR [rdi+0x69]
   1400066b7:	outs   dx,BYTE PTR ds:[rsi]
   1400066b8:	outs   dx,DWORD PTR fs:[rsi]
   1400066ba:	ja     0x14000672f
   1400066bc:	push   rbx
   1400066bd:	gs je  0x140006734
   1400066c0:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   1400066c7:	ins    BYTE PTR es:[rdi],dx
   1400066c8:	outs   dx,BYTE PTR ds:[rsi]
   1400066c9:	jae    0x140006708
   1400066cb:	and    ch,BYTE PTR [rax+0x74]
   1400066ce:	je     0x140006740
   1400066d0:	cmp    ch,BYTE PTR [rdi]
   1400066d2:	(bad)  
   1400066d3:	jae    0x140006738
   1400066d5:	push   0x73616d65
   1400066da:	cs ins DWORD PTR es:[rdi],dx
   1400066dc:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   1400066e3:	je     0x140006713
   1400066e5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400066e8:	(bad)  
   1400066e9:	push   rbx
   1400066ea:	rex.WRB
   1400066eb:	rex.WB (bad) 
   1400066ed:	xor    dh,BYTE PTR [rax]
   1400066ef:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae69be24
   1400066f5:	outs   dx,DWORD PTR fs:[rsi]
   1400066f7:	ja     0x14000676c
   1400066f9:	push   rbx
   1400066fa:	gs je  0x140006771
   1400066fd:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   140006704:	or     ah,BYTE PTR [rax]
   140006706:	and    BYTE PTR [rax],ah
   140006708:	and    BYTE PTR [rax],ah
   14000670a:	and    BYTE PTR [rax],ah
   14000670c:	and    BYTE PTR [rcx+riz*2],bh
   14000670f:	jne    0x140006785
   140006711:	outs   dx,DWORD PTR ds:[rsi]
   140006712:	rex.RB ins BYTE PTR es:[rdi],dx
   140006714:	gs jbe 0x140006778
   140006717:	je     0x14000677e
   140006719:	ds je  0x14000678e
   14000671c:	jne    0x140006783
   14000671e:	cmp    al,0x2f
   140006720:	(bad)  
   140006721:	jne    0x140006797
   140006723:	outs   dx,DWORD PTR ds:[rsi]
   140006724:	rex.RB ins BYTE PTR es:[rdi],dx
   140006726:	gs jbe 0x14000678a
   140006729:	je     0x140006790
   14000672b:	ds or  eax,0x2020200a
   140006731:	cmp    al,0x2f
   140006733:	(bad)  
   140006734:	jae    0x1400067a3
   140006736:	jbe    0x14000676b
   140006738:	cmp    dh,BYTE PTR [rdi+0x69]
   14000673b:	outs   dx,BYTE PTR ds:[rsi]
   14000673c:	outs   dx,DWORD PTR fs:[rsi]
   14000673e:	ja     0x1400067b3
   140006740:	push   rbx
   140006741:	gs je  0x1400067b8
   140006744:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000674b:	cmp    al,0x2f
   14000674d:	(bad)  
   14000674e:	jae    0x1400067bd
   140006750:	jbe    0x140006785
   140006752:	cmp    ah,BYTE PTR [rcx+0x70]
   140006755:	jo     0x1400067c3
   140006757:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000675e:	ds or  eax,0x612f3c0a
   140006764:	jae    0x1400067d9
   140006766:	gs ins DWORD PTR es:[rdi],dx
   140006768:	(bad)  
   140006769:	ins    BYTE PTR es:[rdi],dx
   14000676a:	jns    0x1400067aa
   14000676c:	or     eax,0x280a0d0a
   140006771:	add    BYTE PTR [rax],al
   140006773:	add    BYTE PTR [rax],dh
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rax+0x0],ah
   14000677a:	add    BYTE PTR [rax],al
   14000677c:	add    DWORD PTR [rax],eax
   14000677e:	add    al,0x0
   140006780:	add    BYTE PTR [rax],al
   140006782:	add    BYTE PTR [rax],al
   140006784:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000679c:	add    BYTE PTR [rax],al
   14000679e:	add    BYTE PTR [rax],0x0
   1400067a1:	add    BYTE PTR [rax],0x0
   1400067a4:	add    BYTE PTR [rax+0x800080],al
   1400067aa:	add    BYTE PTR [rax],al
   1400067ac:	add    BYTE PTR [rax],0x80
   1400067af:	add    BYTE PTR [rax-0x7fffff80],al
   1400067b5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400067bc:	add    BYTE PTR [rax],al
   1400067be:	inc    DWORD PTR [rax]
   1400067c0:	add    bh,bh
   1400067c2:	add    BYTE PTR [rax],al
   1400067c4:	add    bh,bh
   1400067c6:	inc    DWORD PTR [rax]
   1400067c8:	inc    DWORD PTR [rax]
   1400067ca:	add    BYTE PTR [rax],al
   1400067cc:	inc    DWORD PTR [rax]
   1400067ce:	inc    DWORD PTR [rax]
   1400067d0:	(bad)  
   1400067d1:	inc    DWORD PTR [rax]
   1400067d3:	add    bh,bh
   1400067d5:	(bad)  
   1400067d6:	inc    DWORD PTR [rax]
	...
   140006814:	add    BYTE PTR [rax],al
   140006816:	add    BYTE PTR [rdi+0x77],al
	...
   14000682c:	add    BYTE PTR [rdi+0x77],dh
   14000682f:	mov    BYTE PTR [rdi+0x70],al
	...
   140006841:	add    BYTE PTR [rax],cl
   140006843:	ja     0x1400068bc
   140006845:	mov    BYTE PTR [rax+0x70788888],cl
	...
   140006857:	add    BYTE PTR [rdi],al
   140006859:	ja     0x1400068d3
   14000685b:	mov    BYTE PTR [rax-0x77777778],cl
   140006861:	js     0x1400068da
	...
   14000686b:	add    BYTE PTR [rax],al
   14000686d:	add    BYTE PTR [rdi-0x77778789],al
   140006873:	mov    BYTE PTR [rax+0x78878888],cl
   140006879:	js     0x1400068f2
	...
   140006883:	add    BYTE PTR [rdi],al
   140006885:	ja     0x14000680f
   140006887:	mov    BYTE PTR [rax-0x77777778],cl
   14000688d:	ja     0x140006906
   14000688f:	ja     0x140006819
   140006891:	js     0x14000690a
	...
   14000689b:	add    BYTE PTR [rax-0x79],bh
   14000689e:	mov    BYTE PTR [rax+0x77888888],cl
   1400068a4:	ja     0x14000691d
   1400068a6:	mov    BYTE PTR [rax+0x777888],cl
	...
   1400068b4:	ja     0x14000692d
   1400068b6:	mov    BYTE PTR [rax+0x78777788],cl
   1400068bc:	mov    BYTE PTR [rax+0x78788888],cl
   1400068c2:	ja     0x1400068c4
   1400068c4:	add    BYTE PTR [rax],al
   1400068c6:	add    BYTE PTR [rax],al
   1400068c8:	add    BYTE PTR [rax],al
   1400068ca:	add    BYTE PTR [rdi],al
   1400068cc:	ja     0x140006945
   1400068ce:	xchg   DWORD PTR [rdi+0x77],esi
   1400068d1:	ja     0x140006948
   1400068d3:	ja     0x14000694d
   1400068d5:	xchg   DWORD PTR [rdi+0x77],esi
   1400068d8:	mov    BYTE PTR [rax+0x77],bh
	...
   1400068e3:	js     0x14000695d
   1400068e5:	ja     0x14000695e
   1400068e7:	mov    BYTE PTR [rdi+0x17111151],al
   1400068ed:	js     0x140006877
   1400068ef:	mov    BYTE PTR [rax+0x7778],cl
   1400068f5:	add    BYTE PTR [rax],al
   1400068f7:	add    BYTE PTR [rax],al
   1400068f9:	add    BYTE PTR [rax],al
   1400068fb:	xor    BYTE PTR [rdi+0x77],0x88
   1400068ff:	mov    BYTE PTR [rcx+0x19],dh
   140006902:	cdq    
   140006903:	cdq    
   140006904:	adc    DWORD PTR [rax-0x78],edi
   140006907:	mov    BYTE PTR [rax+0x7778],cl
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rax],al
   140006911:	add    BYTE PTR [rax],al
   140006913:	(bad)  
   140006914:	ja     0x14000698d
   140006916:	xchg   DWORD PTR [rdi+0x11],esi
   140006919:	jno    0x1400068b4
   14000691b:	(bad)  
   14000691c:	jno    0x140006935
   14000691e:	xchg   DWORD PTR [rdi+0x78],esi
   140006921:	js     0x14000699a
	...
   14000692b:	js     0x1400069a5
   14000692d:	ja     0x1400069a7
   14000692f:	jno    0x140006949
   140006931:	xchg   DWORD PTR [rcx],edx
   140006933:	(bad)
   140006937:	mov    BYTE PTR [rax+0x7778],cl
   14000693d:	add    BYTE PTR [rax],al
   14000693f:	add    BYTE PTR [rax],al
   140006941:	add    BYTE PTR [rax],al
   140006943:	xor    BYTE PTR [rdi+0x77],0x88
   140006947:	jno    0x140006961
   140006949:	push   QWORD PTR [rdi-0x8]
   14000694c:	cdq    
   14000694d:	adc    DWORD PTR [rax+0x77788888],ecx
	...
   14000695b:	(bad)  
   14000695c:	ja     0x1400069d5
   14000695e:	xchg   DWORD PTR [rcx+0x11],edx
   140006961:	jg     0x140006962
   140006963:	sbb    DWORD PTR [rcx+0x78778711],0x7778
   14000696d:	add    BYTE PTR [rax],al
   14000696f:	add    BYTE PTR [rax],al
   140006971:	add    BYTE PTR [rax],al
   140006973:	js     0x1400069ed
   140006975:	ja     0x1400068ff
   140006977:	adc    DWORD PTR [rcx],edx
   140006979:	sbb    bh,bh
   14000697b:	jno    0x140006996
   14000697d:	adc    DWORD PTR [rax-0x78877778],ecx
	...
   14000698b:	xor    BYTE PTR [rdi+0x77],0x88
   14000698f:	(bad)  
   140006990:	jns    0x140006a11
   140006992:	(bad)  
   140006993:	not    DWORD PTR [rcx]
   140006995:	(bad)  
   140006996:	mov    BYTE PTR [rax+0x877888],cl
   14000699c:	add    BYTE PTR [rax],al
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	add    BYTE PTR [rax],al
   1400069a2:	add    BYTE PTR [rdi],al
   1400069a4:	ja     0x140006a1d
   1400069a6:	mov    BYTE PTR [rdi+0x78],dh
   1400069a9:	push   QWORD PTR [rdi-0x1]
   1400069ac:	adc    DWORD PTR [rdi],0x78887788
   1400069b2:	xchg   DWORD PTR [rax],eax
   1400069b4:	add    BYTE PTR [rax],al
   1400069b6:	add    BYTE PTR [rax],al
   1400069b8:	add    BYTE PTR [rax],al
   1400069ba:	add    BYTE PTR [rax+0x78],bh
   1400069bd:	ja     0x140006947
   1400069bf:	jno    0x140006a39
   1400069c1:	div    DWORD PTR [rdi+0x78]
   1400069c4:	jno    0x1400069dd
   1400069c6:	mov    BYTE PTR [rax+0x877888],cl
   1400069cc:	add    BYTE PTR [rax],al
   1400069ce:	add    BYTE PTR [rax],al
   1400069d0:	add    BYTE PTR [rax],al
   1400069d2:	add    BYTE PTR [rax-0x7a778889],al
   1400069d8:	ja     0x140006961
   1400069da:	ja     0x140006a53
   1400069dc:	adc    DWORD PTR [rax-0x78],edi
   1400069df:	mov    BYTE PTR [rax+0x8778],cl
   1400069e5:	add    BYTE PTR [rax],al
   1400069e7:	add    BYTE PTR [rax],al
   1400069e9:	add    BYTE PTR [rax],al
   1400069eb:	(bad)  
   1400069ec:	ja     0x140006a65
   1400069ee:	mov    BYTE PTR [rdi+0x71777757],al
   1400069f4:	(bad)  
   1400069f5:	mov    BYTE PTR [rax-0x78877778],cl
	...
   140006a03:	js     0x140006a7d
   140006a05:	xchg   DWORD PTR [rax+0x11718788],ecx
   140006a0b:	(bad)  
   140006a0c:	js     0x140006996
   140006a0e:	mov    BYTE PTR [rax+0x877888],cl
   140006a14:	add    BYTE PTR [rax],al
   140006a16:	add    BYTE PTR [rax],al
   140006a18:	add    BYTE PTR [rax],al
   140006a1a:	add    BYTE PTR [rax-0x77777888],al
   140006a20:	mov    BYTE PTR [rdi+0x77],dh
   140006a23:	mov    BYTE PTR [rax-0x77777778],cl
   140006a29:	js     0x1400069b2
	...
   140006a33:	(bad)  
   140006a34:	ja     0x1400069bd
   140006a36:	mov    BYTE PTR [rax-0x77777778],cl
   140006a3c:	mov    BYTE PTR [rax+0x78888888],cl
   140006a42:	xchg   DWORD PTR [rax],eax
   140006a44:	add    BYTE PTR [rax],al
   140006a46:	add    BYTE PTR [rax],al
   140006a48:	add    BYTE PTR [rax],al
   140006a4a:	add    BYTE PTR [rax+0x78],bh
   140006a4d:	xchg   DWORD PTR [rax-0x77777778],ecx
   140006a53:	mov    BYTE PTR [rax-0x77777778],cl
   140006a59:	jg     0x1400069e2
	...
   140006a63:	cmp    BYTE PTR [rax-0x79],0x88
   140006a67:	mov    BYTE PTR [rax-0x77777778],cl
   140006a6d:	mov    BYTE PTR [rax-0x7880c789],cl
	...
   140006a7b:	(bad)  
   140006a7c:	ja     0x140006a05
   140006a7e:	mov    BYTE PTR [rax+0x33878888],cl
   140006a84:	xor    esi,DWORD PTR [rbx]
   140006a86:	mov    ebx,0x877f38bb
	...
   140006a93:	js     0x140006b0d
   140006a95:	xchg   DWORD PTR [rax-0x7c777778],ecx
   140006a9b:	mov    ebx,0xbbbb10bb
   140006aa0:	mov    BYTE PTR [rdi-0x79],bh
	...
   140006aab:	cmp    BYTE PTR [rax-0x79],0x88
   140006aaf:	mov    BYTE PTR [rax-0x44447778],cl
   140006ab5:	adc    edi,DWORD PTR [rbx-0x7880774d]
	...
   140006ac3:	(bad)  
   140006ac4:	ja     0x140006a4d
   140006ac6:	mov    BYTE PTR [rax+0x3b888888],cl
   140006acc:	mov    ebx,0x88b8bbb3
   140006ad1:	jg     0x140006a5a
	...
   140006adb:	js     0x140006b55
   140006add:	xchg   DWORD PTR [rax-0x77777778],ecx
   140006ae3:	mov    edi,DWORD PTR [rbx-0x77c74500]
   140006ae9:	jg     0x140006a72
	...
   140006af3:	cmp    BYTE PTR [rax-0x79],0x88
   140006af7:	mov    BYTE PTR [rax-0x447c7778],cl
   140006afd:	add    BYTE PTR [rbx-0x78807778],bh
	...
   140006b0b:	(bad)  
   140006b0c:	ja     0x140006a95
   140006b0e:	mov    BYTE PTR [rax-0x77777778],cl
   140006b14:	mov    ebx,0x8888b300
   140006b19:	jg     0x140006aa2
	...
   140006b23:	js     0x140006b9d
   140006b25:	xchg   DWORD PTR [rax-0x77777778],ecx
   140006b2b:	mov    BYTE PTR [rbx-0x45],bh
   140006b2e:	mov    eax,0x877f8888
	...
   140006b3b:	cmp    BYTE PTR [rax-0x79],0x88
   140006b3f:	mov    BYTE PTR [rax-0x7c777778],cl
   140006b45:	mov    ebx,0x7f888838
   140006b4a:	xchg   DWORD PTR [rax],eax
   140006b4c:	add    BYTE PTR [rax],al
   140006b4e:	add    BYTE PTR [rax],al
   140006b50:	add    BYTE PTR [rax],al
   140006b52:	add    BYTE PTR [rdi],al
   140006b54:	ja     0x140006add
   140006b56:	mov    BYTE PTR [rax-0x77777778],cl
   140006b5c:	mov    BYTE PTR [rbx+0x7f888888],bh
   140006b62:	xchg   DWORD PTR [rax],eax
   140006b64:	add    BYTE PTR [rax],al
   140006b66:	add    BYTE PTR [rax],al
   140006b68:	add    BYTE PTR [rax],al
   140006b6a:	add    BYTE PTR [rax+0x78],bh
   140006b6d:	xchg   eax,edi
   140006b6f:	mov    BYTE PTR [rax-0x77777778],cl
   140006b75:	(bad)  
   140006b76:	mov    BYTE PTR [rax+0x877f8f],cl
   140006b7c:	add    BYTE PTR [rax],al
   140006b7e:	add    BYTE PTR [rax],al
   140006b80:	add    BYTE PTR [rax],al
   140006b82:	add    BYTE PTR [rax-0x77777888],al
   140006b88:	mov    BYTE PTR [rax-0x77777778],cl
   140006b8e:	mov    BYTE PTR [rax+0x877f8f],cl
   140006b94:	add    BYTE PTR [rax],al
   140006b96:	add    BYTE PTR [rax],al
   140006b98:	add    BYTE PTR [rax],al
   140006b9a:	add    BYTE PTR [rdi],al
   140006b9c:	ja     0x140006b25
   140006b9e:	mov    al,bh
   140006ba0:	(bad)  
   140006ba1:	(bad)  
   140006ba2:	(bad)  
   140006ba3:	clc    
   140006ba4:	mov    BYTE PTR [rax+0x7f8f8888],cl
   140006baa:	xchg   DWORD PTR [rax],eax
   140006bac:	add    BYTE PTR [rax],al
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	add    BYTE PTR [rax],al
   140006bb2:	add    BYTE PTR [rax+0x78],bh
   140006bb5:	xchg   edi,edi
   140006bb7:	(bad)  
   140006bb8:	(bad)  
   140006bb9:	(bad)  
   140006bba:	clc    
   140006bbb:	mov    BYTE PTR [rax-0x70777778],cl
   140006bc1:	jg     0x140006b4a
	...
   140006bcb:	cmp    BYTE PTR [rax-0x79],0xff
   140006bcf:	(bad)  
   140006bd0:	(bad)  
   140006bd1:	dec    DWORD PTR [rax-0x70777778]
   140006bd7:	dec    DWORD PTR [rax+0x878f]
   140006bdd:	add    BYTE PTR [rax],al
   140006bdf:	add    BYTE PTR [rax],al
   140006be1:	add    BYTE PTR [rax],al
   140006be3:	(bad)  
   140006be4:	ja     0x140006b6d
   140006be6:	mov    al,bh
   140006be8:	(bad)  
   140006be9:	clc    
   140006bea:	dec    DWORD PTR [rax+0x77888888]
   140006bf0:	js     0x140006bf1
   140006bf2:	xchg   DWORD PTR [rax],eax
   140006bf4:	add    BYTE PTR [rax],al
   140006bf6:	add    BYTE PTR [rax],al
   140006bf8:	add    BYTE PTR [rax],al
   140006bfa:	add    BYTE PTR [rax+0x78],bh
   140006bfd:	xchg   DWORD PTR [rax+0x77888888],ecx
   140006c03:	js     0x140006b8d
   140006c05:	mov    al,bh
   140006c07:	(bad)  
   140006c08:	(bad)  
   140006c09:	inc    DWORD PTR [rdi+0x0]
   140006c0f:	add    BYTE PTR [rax],al
   140006c11:	add    BYTE PTR [rax],al
   140006c13:	xor    BYTE PTR [rdi+0x77],0x78
   140006c17:	mov    BYTE PTR [rdi-0x1],cl
   140006c1d:	dec    DWORD PTR [rax+0x70878888]
	...
   140006c2b:	(bad)  
   140006c2c:	js     0x140006bbd
   140006c2e:	(bad)  
   140006c2f:	dec    DWORD PTR [rax+0x77778888]
   140006c35:	ja     0x140006bbf
   140006c37:	mov    BYTE PTR [rax],al
	...
   140006c41:	add    BYTE PTR [rax],al
   140006c43:	add    BYTE PTR [rax+0x888877],cl
	...
   140006c55:	add    BYTE PTR [rax],al
   140006c57:	add    bh,bh
   140006c59:	(bad)  
   140006c5a:	(bad)  
   140006c5b:	(bad)  
   140006c5c:	(bad)  
   140006c5d:	inc    DWORD PTR [rax]
   140006c5f:	add    bh,bh
   140006c61:	(bad)  
   140006c62:	(bad)  
   140006c63:	(bad)  
   140006c64:	(bad)  
   140006c65:	inc    DWORD PTR [rax]
   140006c67:	add    bh,bh
   140006c69:	(bad)  
   140006c6a:	(bad)  
   140006c6b:	cld    
   140006c6c:	(bad)  
   140006c6d:	inc    DWORD PTR [rax]
   140006c6f:	add    bh,bh
   140006c71:	(bad)  
   140006c72:	inc    eax
   140006c74:	(bad)  
   140006c75:	inc    DWORD PTR [rax]
   140006c77:	add    bh,bh
   140006c79:	(bad)  
   140006c7a:	clc    
   140006c7b:	add    BYTE PTR [rdi],al
   140006c7d:	inc    DWORD PTR [rax]
   140006c7f:	add    bh,bh
   140006c81:	inc    DWORD PTR [rax+0xff0300]
   140006c87:	add    bh,bh
   140006c89:	lock add BYTE PTR [rax],al
   140006c8c:	add    edi,edi
   140006c8e:	add    BYTE PTR [rax],al
   140006c90:	inc    DWORD PTR [rax-0xfd0000]
   140006c96:	add    BYTE PTR [rax],al
   140006c98:	inc    DWORD PTR [rax]
   140006c9a:	add    BYTE PTR [rax],al
   140006c9c:	add    edi,edi
   140006c9e:	add    BYTE PTR [rax],al
   140006ca0:	inc    DWORD PTR [rax]
   140006ca2:	add    BYTE PTR [rax],al
   140006ca4:	add    edi,edi
   140006ca6:	add    BYTE PTR [rax],al
   140006ca8:	inc    BYTE PTR [rax]
   140006caa:	add    BYTE PTR [rax],al
   140006cac:	add    edi,edi
   140006cae:	add    BYTE PTR [rax],al
   140006cb0:	cld    
   140006cb1:	add    BYTE PTR [rax],al
   140006cb3:	add    BYTE PTR [rbx],al
   140006cb5:	inc    DWORD PTR [rax]
   140006cb7:	add    ch,bh
   140006cb9:	add    BYTE PTR [rax],al
   140006cbb:	add    BYTE PTR [rbx],al
   140006cbd:	inc    DWORD PTR [rax]
   140006cbf:	add    dh,bh
   140006cc1:	add    BYTE PTR [rax],al
   140006cc3:	add    BYTE PTR [rbx],al
   140006cc5:	inc    DWORD PTR [rax]
   140006cc7:	add    ah,bh
   140006cc9:	add    BYTE PTR [rax],al
   140006ccb:	add    BYTE PTR [rbx],al
   140006ccd:	inc    DWORD PTR [rax]
   140006ccf:	add    ch,bh
   140006cd1:	add    BYTE PTR [rax],al
   140006cd3:	add    BYTE PTR [rbx],al
   140006cd5:	inc    DWORD PTR [rax]
   140006cd7:	add    dh,bh
   140006cd9:	add    BYTE PTR [rax],al
   140006cdb:	add    BYTE PTR [rbx],al
   140006cdd:	inc    DWORD PTR [rax]
   140006cdf:	add    ah,bh
   140006ce1:	add    BYTE PTR [rax],al
   140006ce3:	add    BYTE PTR [rbx],al
   140006ce5:	inc    DWORD PTR [rax]
   140006ce7:	add    ch,bh
   140006ce9:	add    BYTE PTR [rax],al
   140006ceb:	add    BYTE PTR [rbx],al
   140006ced:	inc    DWORD PTR [rax]
   140006cef:	add    dh,bh
   140006cf1:	add    BYTE PTR [rax],al
   140006cf3:	add    BYTE PTR [rbx],al
   140006cf5:	inc    DWORD PTR [rax]
   140006cf7:	add    ah,bh
   140006cf9:	add    BYTE PTR [rax],al
   140006cfb:	add    BYTE PTR [rbx],al
   140006cfd:	inc    DWORD PTR [rax]
   140006cff:	add    ch,bh
   140006d01:	add    BYTE PTR [rax],al
   140006d03:	add    BYTE PTR [rbx],al
   140006d05:	inc    DWORD PTR [rax]
   140006d07:	add    dh,bh
   140006d09:	add    BYTE PTR [rax],al
   140006d0b:	add    BYTE PTR [rbx],al
   140006d0d:	inc    DWORD PTR [rax]
   140006d0f:	add    ah,bh
   140006d11:	add    BYTE PTR [rax],al
   140006d13:	add    BYTE PTR [rbx],al
   140006d15:	inc    DWORD PTR [rax]
   140006d17:	add    ch,bh
   140006d19:	add    BYTE PTR [rax],al
   140006d1b:	add    BYTE PTR [rbx],al
   140006d1d:	inc    DWORD PTR [rax]
   140006d1f:	add    dh,bh
   140006d21:	add    BYTE PTR [rax],al
   140006d23:	add    BYTE PTR [rbx],al
   140006d25:	inc    DWORD PTR [rax]
   140006d27:	add    ah,bh
   140006d29:	add    BYTE PTR [rax],al
   140006d2b:	add    BYTE PTR [rbx],al
   140006d2d:	inc    DWORD PTR [rax]
   140006d2f:	add    ch,bh
   140006d31:	add    BYTE PTR [rax],al
   140006d33:	add    BYTE PTR [rbx],al
   140006d35:	inc    DWORD PTR [rax]
   140006d37:	add    dh,bh
   140006d39:	add    BYTE PTR [rax],al
   140006d3b:	add    BYTE PTR [rbx],al
   140006d3d:	inc    DWORD PTR [rax]
   140006d3f:	add    ah,bh
   140006d41:	add    BYTE PTR [rax],al
   140006d43:	add    BYTE PTR [rbx],al
   140006d45:	inc    DWORD PTR [rax]
   140006d47:	add    ch,bh
   140006d49:	add    BYTE PTR [rax],al
   140006d4b:	add    BYTE PTR [rbx],al
   140006d4d:	inc    DWORD PTR [rax]
   140006d4f:	add    dh,bh
   140006d51:	add    BYTE PTR [rax],al
   140006d53:	add    BYTE PTR [rbx],al
   140006d55:	inc    DWORD PTR [rax]
   140006d57:	add    ah,bh
   140006d59:	add    BYTE PTR [rax],al
   140006d5b:	add    BYTE PTR [rbx],al
   140006d5d:	inc    DWORD PTR [rax]
   140006d5f:	add    ch,bh
   140006d61:	add    BYTE PTR [rax],al
   140006d63:	add    BYTE PTR [rbx],al
   140006d65:	inc    DWORD PTR [rax]
   140006d67:	add    dh,bh
   140006d69:	add    BYTE PTR [rax],al
   140006d6b:	add    BYTE PTR [rbx],al
   140006d6d:	inc    DWORD PTR [rax]
   140006d6f:	add    ah,bh
   140006d71:	add    BYTE PTR [rax],al
   140006d73:	add    BYTE PTR [rbx],al
   140006d75:	inc    DWORD PTR [rax]
   140006d77:	add    ch,bh
   140006d79:	add    BYTE PTR [rax],al
   140006d7b:	add    BYTE PTR [rbx],al
   140006d7d:	inc    DWORD PTR [rax]
   140006d7f:	add    dh,bh
   140006d81:	add    BYTE PTR [rax],al
   140006d83:	add    BYTE PTR [rbx],al
   140006d85:	inc    DWORD PTR [rax]
   140006d87:	add    ah,bh
   140006d89:	add    BYTE PTR [rax],al
   140006d8b:	add    BYTE PTR [rbx],al
   140006d8d:	inc    DWORD PTR [rax]
   140006d8f:	add    ch,bh
   140006d91:	add    BYTE PTR [rax],al
   140006d93:	add    BYTE PTR [rbx],al
   140006d95:	inc    DWORD PTR [rax]
   140006d97:	add    dh,bh
   140006d99:	add    BYTE PTR [rax],al
   140006d9b:	add    BYTE PTR [rbx],al
   140006d9d:	inc    DWORD PTR [rax]
   140006d9f:	add    ah,bh
   140006da1:	add    BYTE PTR [rax],al
   140006da3:	add    BYTE PTR [rbx],al
   140006da5:	inc    DWORD PTR [rax]
   140006da7:	add    ch,bh
   140006da9:	add    BYTE PTR [rax],al
   140006dab:	add    BYTE PTR [rbx],al
   140006dad:	inc    DWORD PTR [rax]
   140006daf:	add    dh,bh
   140006db1:	add    BYTE PTR [rax],al
   140006db3:	add    BYTE PTR [rbx],al
   140006db5:	inc    DWORD PTR [rax]
   140006db7:	add    ah,bh
   140006db9:	add    BYTE PTR [rax],al
   140006dbb:	add    BYTE PTR [rbx],al
   140006dbd:	inc    DWORD PTR [rax]
   140006dbf:	add    ch,bh
   140006dc1:	add    BYTE PTR [rax],al
   140006dc3:	add    BYTE PTR [rdi],al
   140006dc5:	inc    DWORD PTR [rax]
   140006dc7:	add    dh,bh
   140006dc9:	add    BYTE PTR [rax],al
   140006dcb:	add    bh,bh
   140006dcd:	inc    DWORD PTR [rax]
   140006dcf:	add    bh,bh
   140006dd1:	add    bh,bh
   140006dd3:	(bad)  
   140006dd4:	(bad)  
   140006dd5:	inc    DWORD PTR [rax]
   140006dd7:	add    BYTE PTR [rax],ch
   140006dd9:	add    BYTE PTR [rax],al
   140006ddb:	add    BYTE PTR [rax],ah
   140006ddd:	add    BYTE PTR [rax],al
   140006ddf:	add    BYTE PTR [rax+0x0],al
   140006de2:	add    BYTE PTR [rax],al
   140006de4:	add    DWORD PTR [rax],eax
   140006de6:	add    al,0x0
   140006de8:	add    BYTE PTR [rax],al
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	add    BYTE PTR [rdx],al
	...
   140006e06:	add    BYTE PTR [rax],0x0
   140006e09:	add    BYTE PTR [rax],0x0
   140006e0c:	add    BYTE PTR [rax+0x800080],al
   140006e12:	add    BYTE PTR [rax],al
   140006e14:	add    BYTE PTR [rax],0x80
   140006e17:	add    BYTE PTR [rax-0x7fffff80],al
   140006e1d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140006e24:	add    BYTE PTR [rax],al
   140006e26:	inc    DWORD PTR [rax]
   140006e28:	add    bh,bh
   140006e2a:	add    BYTE PTR [rax],al
   140006e2c:	add    bh,bh
   140006e2e:	inc    DWORD PTR [rax]
   140006e30:	inc    DWORD PTR [rax]
   140006e32:	add    BYTE PTR [rax],al
   140006e34:	inc    DWORD PTR [rax]
   140006e36:	inc    DWORD PTR [rax]
   140006e38:	(bad)  
   140006e39:	inc    DWORD PTR [rax]
   140006e3b:	add    bh,bh
   140006e3d:	(bad)  
   140006e3e:	inc    DWORD PTR [rax]
	...
   140006e58:	or     BYTE PTR [rdi+0x78],dh
   140006e5b:	jo     0x140006e5d
	...
   140006e65:	add    BYTE PTR [rdi-0x77778789],al
   140006e6b:	js     0x140006edd
   140006e6d:	add    BYTE PTR [rax],al
   140006e6f:	add    BYTE PTR [rax],al
   140006e71:	add    BYTE PTR [rax],al
   140006e73:	add    BYTE PTR [rdi-0x77777789],al
   140006e79:	mov    BYTE PTR [rax+0x7078],cl
   140006e7f:	add    BYTE PTR [rax],al
   140006e81:	add    BYTE PTR [rax],al
   140006e83:	ja     0x140006e0c
   140006e85:	mov    BYTE PTR [rax+0x78778888],cl
   140006e8b:	js     0x140006efd
   140006e8d:	add    BYTE PTR [rax],al
   140006e8f:	add    BYTE PTR [rax],al
   140006e91:	add    BYTE PTR [rdi],al
   140006e93:	ja     0x140006f0c
   140006e95:	mov    BYTE PTR [rdi-0x77888889],al
   140006e9b:	js     0x140006f0d
   140006e9d:	add    BYTE PTR [rax],al
   140006e9f:	add    BYTE PTR [rax],al
   140006ea1:	add    BYTE PTR [rax+0x77],bh
   140006ea4:	ja     0x140006f1d
   140006ea6:	ja     0x140006eb9
   140006ea8:	ja     0x140006e32
   140006eaa:	mov    BYTE PTR [rax+0x70],bh
   140006ead:	add    BYTE PTR [rax],al
   140006eaf:	add    BYTE PTR [rax],al
   140006eb1:	add    BYTE PTR [rax+0x51877777],al
   140006eb7:	adc    DWORD PTR [rcx],edx
   140006eb9:	ja     0x140006f33
   140006ebb:	js     0x140006f2d
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rax],al
   140006ec1:	add    BYTE PTR [rdi],al
   140006ec3:	ja     0x140006f3c
   140006ec5:	xchg   DWORD PTR [rdi],ebx
   140006ec7:	ja     0x140006eba
   140006ec9:	ja     0x140006e53
   140006ecb:	js     0x140006f3d
   140006ecd:	add    BYTE PTR [rax],al
   140006ecf:	add    BYTE PTR [rax],al
   140006ed1:	add    BYTE PTR [rax+0x78],bh
   140006ed4:	ja     0x140006f47
   140006ed6:	sbb    edi,edi
   140006ed8:	jno    0x140006ef2
   140006eda:	mov    BYTE PTR [rax+0x70],bh
   140006edd:	add    BYTE PTR [rax],al
   140006edf:	add    BYTE PTR [rax],al
   140006ee1:	add    BYTE PTR [rax+0x77817777],al
   140006ee7:	push   QWORD PTR [rcx+0x17]
   140006eea:	js     0x140006f64
   140006eec:	jo     0x140006eee
   140006eee:	add    BYTE PTR [rax],al
   140006ef0:	add    BYTE PTR [rax],al
   140006ef2:	(bad)  
   140006ef3:	ja     0x140006f6c
   140006ef5:	xchg   DWORD PTR [rdi+0x79],edi
   140006ef8:	icebp  
   140006ef9:	js     0x140006e83
   140006efb:	js     0x140006f6d
   140006efd:	add    BYTE PTR [rax],al
   140006eff:	add    BYTE PTR [rax],al
   140006f01:	add    BYTE PTR [rax+0x78],bh
   140006f04:	xchg   DWORD PTR [rdi-0x77ee8889],eax
   140006f0a:	mov    BYTE PTR [rax+0x70],bh
   140006f0d:	add    BYTE PTR [rax],al
   140006f0f:	add    BYTE PTR [rax],al
   140006f11:	add    BYTE PTR [rax-0x78777888],al
   140006f17:	adc    DWORD PTR [rax-0x78],edi
   140006f1a:	mov    BYTE PTR [rax+0x70],bh
   140006f1d:	add    BYTE PTR [rax],al
   140006f1f:	add    BYTE PTR [rax],al
   140006f21:	add    BYTE PTR [rdi],al
   140006f23:	ja     0x140006eac
   140006f25:	mov    BYTE PTR [rax-0x77777778],cl
   140006f2b:	js     0x140006f9d
   140006f2d:	add    BYTE PTR [rax],al
   140006f2f:	add    BYTE PTR [rax],al
   140006f31:	add    BYTE PTR [rax+0x78],bh
   140006f34:	xchg   DWORD PTR [rax-0x77777778],ecx
   140006f3a:	mov    BYTE PTR [rax+0x70],bh
   140006f3d:	add    BYTE PTR [rax],al
   140006f3f:	add    BYTE PTR [rax],al
   140006f41:	add    BYTE PTR [rax-0x78777888],al
   140006f47:	xor    esi,DWORD PTR [rbx]
   140006f49:	xor    edi,DWORD PTR [rax+0x78]
   140006f4c:	jo     0x140006f4e
   140006f4e:	add    BYTE PTR [rax],al
   140006f50:	add    BYTE PTR [rax],al
   140006f52:	(bad)  
   140006f53:	ja     0x140006edc
   140006f55:	mov    BYTE PTR [rbx+0x38bb30bb],al
   140006f5b:	js     0x140006fcd
   140006f5d:	add    BYTE PTR [rax],al
   140006f5f:	add    BYTE PTR [rax],al
   140006f61:	add    BYTE PTR [rax+0x78],bh
   140006f64:	xchg   DWORD PTR [rax-0x444c4478],ecx
   140006f6a:	js     0x140006fe4
   140006f6c:	jo     0x140006f6e
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	add    BYTE PTR [rax],al
   140006f72:	cmp    BYTE PTR [rax-0x79],0x88
   140006f76:	mov    BYTE PTR [rbx],bh
   140006f78:	xor    BYTE PTR [rbx+0x707f88],dh
   140006f7e:	add    BYTE PTR [rax],al
   140006f80:	add    BYTE PTR [rax],al
   140006f82:	(bad)  
   140006f83:	ja     0x140006f0c
   140006f85:	mov    BYTE PTR [rax-0x7748cf85],cl
   140006f8b:	jg     0x140006ffd
   140006f8d:	add    BYTE PTR [rax],al
   140006f8f:	add    BYTE PTR [rax],al
   140006f91:	add    BYTE PTR [rax+0x78],bh
   140006f94:	xchg   DWORD PTR [rax-0x47cc7478],ecx
   140006f9a:	mov    BYTE PTR [rdi+0x70],bh
   140006f9d:	add    BYTE PTR [rax],al
   140006f9f:	add    BYTE PTR [rax],al
   140006fa1:	add    BYTE PTR [rax-0x77777888],al
   140006fa7:	cmp    DWORD PTR [rbx+0x707f8878],0x0
   140006fae:	add    BYTE PTR [rax],al
   140006fb0:	add    BYTE PTR [rax],al
   140006fb2:	(bad)  
   140006fb3:	ja     0x140006f3c
   140006fb5:	mov    BYTE PTR [rax-0x7077cc78],cl
   140006fbb:	jg     0x14000702d
   140006fbd:	add    BYTE PTR [rax],al
   140006fbf:	add    BYTE PTR [rax],al
   140006fc1:	add    BYTE PTR [rax+0x78],bh
   140006fc4:	xchg   DWORD PTR [rax-0x77777778],ecx
   140006fca:	(bad)  
   140006fcb:	jg     0x14000703d
   140006fcd:	add    BYTE PTR [rax],al
   140006fcf:	add    BYTE PTR [rax],al
   140006fd1:	add    BYTE PTR [rax-0x77077888],al
   140006fd7:	mov    BYTE PTR [rax+0x707f8f88],cl
   140006fdd:	add    BYTE PTR [rax],al
   140006fdf:	add    BYTE PTR [rax],al
   140006fe1:	add    BYTE PTR [rdi],al
   140006fe3:	ja     0x140006f6c
   140006fe5:	clc    
   140006fe6:	mov    BYTE PTR [rax+0x7f888888],cl
   140006fec:	jo     0x140006fee
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	add    BYTE PTR [rax],al
   140006ff2:	js     0x14000706c
   140006ff4:	xchg   DWORD PTR [rax+0x77777788],ecx
   140006ffa:	js     0x140006ff4
   140006ffc:	jo     0x140006ffe
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	add    BYTE PTR [rax],al
   140007002:	xor    BYTE PTR [rdi+0x77],0x77
   140007006:	mov    BYTE PTR [rax-0x77070001],cl
   14000700c:	jo     0x14000700e
   14000700e:	add    BYTE PTR [rax],al
   140007010:	add    BYTE PTR [rax],al
   140007012:	(bad)  
   140007013:	js     0x140006fa4
   140007015:	mov    BYTE PTR [rax+0x77777787],cl
   14000701b:	js     0x14000701d
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rax],al
   140007021:	add    BYTE PTR [rax],al
   140007023:	xchg   DWORD PTR [rdi-0x78],esi
   140007026:	add    BYTE PTR [rax],0x0
	...
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    bh,bh
   140007041:	(bad)  
   140007042:	(bad)  
   140007043:	(bad)  
   140007044:	(bad)  
   140007045:	inc    DWORD PTR [rcx+0xf0ffff]
   14000704b:	jg     0x14000704c
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	jg     0x14000704d
   140007051:	add    BYTE PTR [rax],al
   140007053:	jg     0x14000704d
   140007055:	add    BYTE PTR [rax],al
   140007057:	jg     0x140007049
   140007059:	add    BYTE PTR [rax],al
   14000705b:	jg     0x140007051
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	jg     0x140007059
   140007061:	add    BYTE PTR [rax],al
   140007063:	jg     0x140007055
   140007065:	add    BYTE PTR [rax],al
   140007067:	jg     0x14000705d
   140007069:	add    BYTE PTR [rax],al
   14000706b:	jg     0x140007065
   14000706d:	add    BYTE PTR [rax],al
   14000706f:	jg     0x140007061
   140007071:	add    BYTE PTR [rax],al
   140007073:	jg     0x140007069
   140007075:	add    BYTE PTR [rax],al
   140007077:	jg     0x140007071
   140007079:	add    BYTE PTR [rax],al
   14000707b:	jg     0x14000706d
   14000707d:	add    BYTE PTR [rax],al
   14000707f:	jg     0x140007075
   140007081:	add    BYTE PTR [rax],al
   140007083:	jg     0x14000707d
   140007085:	add    BYTE PTR [rax],al
   140007087:	jg     0x140007079
   140007089:	add    BYTE PTR [rax],al
   14000708b:	jg     0x140007081
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	jg     0x140007089
   140007091:	add    BYTE PTR [rax],al
   140007093:	jg     0x140007085
   140007095:	add    BYTE PTR [rax],al
   140007097:	jg     0x14000708d
   140007099:	add    BYTE PTR [rax],al
   14000709b:	jg     0x140007095
   14000709d:	add    BYTE PTR [rax],al
   14000709f:	jg     0x140007091
   1400070a1:	add    BYTE PTR [rax],al
   1400070a3:	jg     0x140007099
   1400070a5:	add    BYTE PTR [rax],al
   1400070a7:	jg     0x1400070a1
   1400070a9:	add    BYTE PTR [rax],al
   1400070ab:	jg     0x14000709d
   1400070ad:	add    BYTE PTR [rax],al
   1400070af:	jg     0x1400070a5
   1400070b1:	add    BYTE PTR [rax],al
   1400070b3:	jg     0x1400070ad
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	(bad)  
   1400070b8:	cld    
   1400070b9:	(bad)  
   1400070ba:	(bad)  
   1400070bb:	(bad)  
   1400070bc:	(bad)  
   1400070bd:	(bad)  
   1400070be:	(bad)  
   1400070bf:	jmp    FWORD PTR [rax]
   1400070c1:	add    BYTE PTR [rax],al
   1400070c3:	add    BYTE PTR [rax],bl
   1400070c5:	add    BYTE PTR [rax],al
   1400070c7:	add    BYTE PTR [rax],dh
   1400070c9:	add    BYTE PTR [rax],al
   1400070cb:	add    BYTE PTR [rcx],al
   1400070cd:	add    BYTE PTR [rax+rax*1],al
   1400070d0:	add    BYTE PTR [rax],al
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	and    BYTE PTR [rcx],al
	...
   1400070ee:	add    BYTE PTR [rax],0x0
   1400070f1:	add    BYTE PTR [rax],0x0
   1400070f4:	add    BYTE PTR [rax+0x800080],al
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],0x80
   1400070ff:	add    BYTE PTR [rax-0x7fffff80],al
   140007105:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000710c:	add    BYTE PTR [rax],al
   14000710e:	inc    DWORD PTR [rax]
   140007110:	add    bh,bh
   140007112:	add    BYTE PTR [rax],al
   140007114:	add    bh,bh
   140007116:	inc    DWORD PTR [rax]
   140007118:	inc    DWORD PTR [rax]
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	inc    DWORD PTR [rax]
   14000711e:	inc    DWORD PTR [rax]
   140007120:	(bad)  
   140007121:	inc    DWORD PTR [rax]
   140007123:	add    bh,bh
   140007125:	(bad)  
   140007126:	inc    DWORD PTR [rax]
   140007128:	add    BYTE PTR [rax],al
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	add    BYTE PTR [rax],al
   14000712e:	or     BYTE PTR [rdi+0x77],dh
   140007131:	add    BYTE PTR [rax],al
   140007133:	add    BYTE PTR [rax],al
   140007135:	add    BYTE PTR [rax],al
   140007137:	add    BYTE PTR [rax],cl
   140007139:	ja     0x1400071b2
   14000713b:	mov    BYTE PTR [rdi+0x80],al
   140007141:	add    BYTE PTR [rax],cl
   140007143:	ja     0x1400071bc
   140007145:	mov    BYTE PTR [rax+0x878788],cl
   14000714b:	add    BYTE PTR [rax],al
   14000714d:	add    BYTE PTR [rdi-0x77777789],al
   140007153:	mov    BYTE PTR [rdi+0x87],al
   140007159:	add    BYTE PTR [rdi+0x77],dh
   14000715c:	jne    0x14000716f
   14000715e:	ja     0x1400071d8
   140007160:	xchg   DWORD PTR [rdi+0x7000000],eax
   140007166:	(bad)  
   140007167:	ja     0x140007180
   140007169:	sbb    DWORD PTR [rdi],edx
   14000716b:	mov    BYTE PTR [rdi+0x87],al
   140007171:	add    BYTE PTR [rdi+0x75],dh
   140007174:	js     0x1400071ee
   140007176:	jno    0x140007100
   140007178:	xchg   DWORD PTR [rdi+0x7000000],eax
   14000717e:	(bad)  
   14000717f:	jno    0x140007118
   140007181:	clc    
   140007182:	adc    DWORD PTR [rax+0x8787],ecx
   140007188:	add    BYTE PTR [rax],al
   14000718a:	ja     0x140007201
   14000718c:	js     0x140007116
   14000718e:	jno    0x140007118
   140007190:	xchg   DWORD PTR [rdi+0x7000000],eax
   140007196:	(bad)  
   140007197:	xchg   DWORD PTR [rax-0x69],edi
   14000719a:	ja     0x140007124
   14000719c:	xchg   DWORD PTR [rdi+0x0],eax
   1400071a2:	ja     0x14000712b
   1400071a4:	jne    0x1400071b7
   1400071a6:	js     0x140007130
   1400071a8:	xchg   DWORD PTR [rdi+0x7000000],eax
   1400071ae:	(bad)  
   1400071af:	xchg   DWORD PTR [rax-0x78777778],ecx
   1400071b5:	xchg   DWORD PTR [rax],eax
   1400071b7:	add    BYTE PTR [rax],al
   1400071b9:	add    BYTE PTR [rdi-0x79],dh
   1400071bc:	xchg   DWORD PTR [rbx],esi
   1400071be:	xor    esi,DWORD PTR [rbx]
   1400071c0:	ja     0x140007149
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rdi],al
   1400071c6:	(bad)  
   1400071c7:	xchg   DWORD PTR [rbx+0x37bb30bb],eax
   1400071cd:	xchg   DWORD PTR [rax],eax
   1400071cf:	add    BYTE PTR [rax],al
   1400071d1:	add    BYTE PTR [rdi-0x79],dh
   1400071d4:	mov    BYTE PTR [rbx-0x878444d],bh
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	add    BYTE PTR [rdi],al
   1400071de:	(bad)  
   1400071df:	xchg   DWORD PTR [rax-0x784ccfc5],ecx
   1400071e5:	test   DWORD PTR [rax],0x77000000
   1400071eb:	xchg   DWORD PTR [rax-0x7848cf85],ecx
   1400071f1:	test   DWORD PTR [rax],0x7070000
   1400071f7:	xchg   DWORD PTR [rax-0x847cc75],ecx
   1400071fd:	test   DWORD PTR [rax],0x77000000
   140007203:	xchg   eax,edi
   140007205:	xchg   DWORD PTR [rbx+0xf7f778],edi
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	(bad)  
   14000720e:	(bad)  
   14000720f:	xchg   eax,edi
   140007211:	mov    BYTE PTR [rbx],dh
   140007213:	mov    BYTE PTR [rdi+0xf7],al
   140007219:	add    BYTE PTR [rdi-0x78],dh
   14000721c:	clc    
   14000721d:	mov    BYTE PTR [rax+0xf77787],cl
   140007223:	add    BYTE PTR [rax],al
   140007225:	(bad)  
   140007226:	(bad)  
   140007227:	ja     0x1400072a0
   140007229:	ja     0x1400072a3
   14000722b:	mov    BYTE PTR [rax+0x87],cl
   140007231:	add    BYTE PTR [rdi+0x77],dh
   140007234:	(bad)
   140007238:	ja     0x1400072aa
   14000723a:	add    BYTE PTR [rax],al
   14000723c:	add    BYTE PTR [rax],al
   14000723e:	or     BYTE PTR [rdi+0x807777],al
   140007244:	add    BYTE PTR [rax],al
   140007246:	add    BYTE PTR [rax],al
   140007248:	(bad)  
   140007249:	clc    
   14000724a:	(bad)  
   14000724b:	add    bh,bh
   14000724d:	sbb    BYTE PTR [rdi],0x0
   140007250:	clc    
   140007251:	add    BYTE PTR [rdi],cl
   140007253:	add    al,dh
   140007255:	add    BYTE PTR [rdi],cl
   140007257:	add    al,dh
   140007259:	add    BYTE PTR [rdi],cl
   14000725b:	add    al,ch
   14000725d:	add    BYTE PTR [rdi],cl
   14000725f:	add    al,dh
   140007261:	add    BYTE PTR [rdi],cl
   140007263:	add    al,ch
   140007265:	add    BYTE PTR [rdi],cl
   140007267:	add    al,dh
   140007269:	add    BYTE PTR [rdi],cl
   14000726b:	add    al,ch
   14000726d:	add    BYTE PTR [rdi],cl
   14000726f:	add    al,dh
   140007271:	add    BYTE PTR [rdi],cl
   140007273:	add    al,ch
   140007275:	add    BYTE PTR [rdi],cl
   140007277:	add    al,dh
   140007279:	add    BYTE PTR [rdi],cl
   14000727b:	add    al,ch
   14000727d:	add    BYTE PTR [rdi],cl
   14000727f:	add    al,dh
   140007281:	add    BYTE PTR [rdi],cl
   140007283:	add    al,ch
   140007285:	add    BYTE PTR [rdi],cl
   140007287:	add    al,dh
   140007289:	add    BYTE PTR [rdi],cl
   14000728b:	add    al,ch
   14000728d:	add    BYTE PTR [rdi],cl
   14000728f:	add    al,dh
   140007291:	add    BYTE PTR [rdi],cl
   140007293:	add    al,ch
   140007295:	add    BYTE PTR [rdi],cl
   140007297:	add    al,dh
   140007299:	add    BYTE PTR [rdi],cl
   14000729b:	add    al,ch
   14000729d:	add    BYTE PTR [rdi],cl
   14000729f:	add    al,dh
   1400072a1:	add    BYTE PTR [rdi],bl
   1400072a3:	add    al,bh
   1400072a5:	(bad)  
   1400072a6:	inc    DWORD PTR [rax]
   1400072a8:	sub    BYTE PTR [rax],al
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	adc    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	and    BYTE PTR [rax],al
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    DWORD PTR [rax],eax
   1400072b6:	add    al,0x0
   1400072b8:	add    BYTE PTR [rax],al
   1400072ba:	add    BYTE PTR [rax],al
   1400072bc:	add    BYTE PTR [rax],0x0
	...
   1400072d3:	add    BYTE PTR [rax],al
   1400072d5:	add    BYTE PTR [rax+0x800000],al
   1400072db:	add    BYTE PTR [rax],al
   1400072dd:	add    BYTE PTR [rax+0x8000],0x0
   1400072e4:	add    BYTE PTR [rax],0x80
   1400072e7:	add    BYTE PTR [rax-0x7fffff80],al
   1400072ed:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400072f4:	add    BYTE PTR [rax],al
   1400072f6:	inc    DWORD PTR [rax]
   1400072f8:	add    bh,bh
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    bh,bh
   1400072fe:	inc    DWORD PTR [rax]
   140007300:	inc    DWORD PTR [rax]
   140007302:	add    BYTE PTR [rax],al
   140007304:	inc    DWORD PTR [rax]
   140007306:	inc    DWORD PTR [rax]
   140007308:	(bad)  
   140007309:	inc    DWORD PTR [rax]
   14000730b:	add    bh,bh
   14000730d:	(bad)  
   14000730e:	inc    DWORD PTR [rax]
   140007310:	add    BYTE PTR [rdi],al
   140007312:	ja     0x14000738b
   140007314:	ja     0x14000738d
   140007316:	ja     0x140007388
   140007318:	add    BYTE PTR [rdi+0x78],dh
   14000731b:	mov    BYTE PTR [rax+0x7708888],cl
   140007321:	(bad)  
   140007322:	ja     0x140007399
   140007324:	adc    DWORD PTR [rdi+0x77],esi
   140007327:	jo     0x140007329
   140007329:	ja     0x1400073a3
   14000732b:	ja     0x1400072b4
   14000732d:	js     0x1400072b7
   14000732f:	jo     0x140007338
   140007331:	(bad)  
   140007332:	ja     0x14000734b
   140007334:	not    DWORD PTR [rdi]
   140007336:	ja     0x1400073a8
   140007338:	add    BYTE PTR [rdi+0x78],dh
   14000733b:	js     0x1400073b4
   14000733d:	js     0x1400072c7
   14000733f:	jo     0x140007348
   140007341:	(bad)  
   140007342:	js     0x1400072cb
   140007344:	ja     0x1400072ce
   140007346:	mov    BYTE PTR [rax+0x0],dh
   140007349:	ja     0x1400073c3
   14000734b:	mov    BYTE PTR [rdi+0x7708878],al
   140007351:	(bad)  
   140007352:	mov    BYTE PTR [rdi+0x70383bbb],al
   140007358:	add    BYTE PTR [rdi-0x78],dh
   14000735b:	mov    BYTE PTR [rbx+0x770883b],bh
   140007361:	(bad)  
   140007362:	mov    BYTE PTR [rax+0x70883b7b],cl
   140007368:	add    BYTE PTR [rdi-0x78],dh
   14000736b:	mov    BYTE PTR [rbx+0x77088b7],cl
   140007371:	(bad)  
   140007372:	mov    BYTE PTR [rax+0x7088b888],cl
   140007378:	add    BYTE PTR [rdi-0x78],dh
   14000737b:	mov    BYTE PTR [rax+0x708888],cl
   140007381:	(bad)  
   140007382:	ja     0x1400073fb
   140007384:	ja     0x1400073fd
   140007386:	ja     0x1400073f8
	...
   140007390:	loopne 0x140007393
   140007392:	add    BYTE PTR [rax],al
   140007394:	rol    BYTE PTR [rcx],0x0
   140007397:	add    BYTE PTR [rax-0x3fffffff],ah
   14000739d:	add    DWORD PTR [rax],eax
   14000739f:	add    BYTE PTR [rax-0x3fffffff],ah
   1400073a5:	add    DWORD PTR [rax],eax
   1400073a7:	add    BYTE PTR [rax-0x3fffffff],ah
   1400073ad:	add    DWORD PTR [rax],eax
   1400073af:	add    BYTE PTR [rax-0x3fffffff],ah
   1400073b5:	add    DWORD PTR [rax],eax
   1400073b7:	add    BYTE PTR [rax-0x3fffffff],ah
   1400073bd:	add    DWORD PTR [rax],eax
   1400073bf:	add    BYTE PTR [rax-0x3fffffff],ah
   1400073c5:	add    DWORD PTR [rax],eax
   1400073c7:	add    al,ah
   1400073c9:	add    DWORD PTR [rax],eax
   1400073cb:	add    bh,bh
   1400073cd:	inc    DWORD PTR [rax]
   1400073cf:	add    BYTE PTR [rax],ch
   1400073d1:	add    BYTE PTR [rax],al
   1400073d3:	add    BYTE PTR [rax],dh
   1400073d5:	add    BYTE PTR [rax],al
   1400073d7:	add    BYTE PTR [rax+0x0],ah
   1400073da:	add    BYTE PTR [rax],al
   1400073dc:	add    DWORD PTR [rax],eax
   1400073de:	or     BYTE PTR [rax],al
   1400073e0:	add    BYTE PTR [rax],al
   1400073e2:	add    BYTE PTR [rax],al
   1400073e4:	add    BYTE PTR [rcx],cl
	...
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	add    BYTE PTR [rcx],al
   1400073f2:	add    BYTE PTR [rax],al
   1400073f4:	add    BYTE PTR [rcx],al
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	add    BYTE PTR [rax],al
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	or     ebx,DWORD PTR [rbx]
   1400073fe:	sbb    al,BYTE PTR [rax]
   140007400:	adc    DWORD PTR [rax],ebp
   140007402:	sub    DWORD PTR [rax],eax
   140007404:	add    al,0x30
   140007406:	(bad)  
   140007407:	add    BYTE PTR [rdi],al
   140007409:	cmp    al,BYTE PTR [rbp+0x0]
   14000740c:	adc    ecx,DWORD PTR [rbp+0x57]
   14000740f:	add    BYTE PTR [rsi+0x73],dh
   140007412:	jb     0x140007414
   140007414:	jg     0x140007493
   140007416:	jnp    0x140007418
   140007418:	xchg   DWORD PTR [rbp+0x52],ebx
   14000741b:	add    BYTE PTR [rsi-0x69ffa8a0],al
   140007421:	fs push rbx
   140007423:	add    BYTE PTR [rbx-0x69ffa699],dl
   140007429:	imul   ebx,DWORD PTR [rax+rax*1-0x67],0x9f005c6a
   140007431:	jno    0x140007490
   140007433:	add    BYTE PTR [rax-0x74ffa08d],ah
   140007439:	jb     0x1400074a8
   14000743b:	add    BYTE PTR [rdi-0x5dff9e90],bl
   140007441:	jae    0x1400074a6
   140007443:	add    BYTE PTR [rax+rdi*2+0x7aa50064],ah
   14000744a:	push   0x0
   14000744c:	stos   BYTE PTR es:[rdi],al
   14000744d:	jle    0x1400074ba
   14000744f:	add    BYTE PTR [rdx-0x54ff8c84],ah
   140007455:	sub    DWORD PTR [rdi+0x0],0x7380a5
   14000745c:	stos   DWORD PTR es:[rdi],eax
   14000745d:	xor    DWORD PTR [rax+rax*1-0x53],0xffffff87
   140007462:	jge    0x140007464
   140007464:	mov    bl,0x8b
   140007466:	jnp    0x140007468
   140007468:	mov    ah,0x93
   14000746a:	jle    0x14000746c
   14000746c:	mov    ecx,0xbd007a93
   140007471:	cdq    
   140007472:	jge    0x140007474
   140007474:	add    BYTE PTR [rax],al
   140007476:	(bad)  
   140007477:	add    BYTE PTR [rcx],al
   140007479:	add    DWORD PTR [rbp-0x61f3f300],ecx
   14000747f:	add    BYTE PTR [rdx],dl
   140007481:	adc    DWORD PTR [rbx-0x6ae5e300],edx
   140007487:	add    BYTE PTR [rax],ah
   140007489:	and    BYTE PTR [rax+rax*1+0x922025],cl
   140007490:	sub    esp,DWORD PTR [rip+0x333a0092]        # 0x1733a7528
   140007496:	fwait
   140007497:	add    BYTE PTR [rip+0x300a10d],cl        # 0x1430115aa
   14000749d:	add    ebp,DWORD PTR [rdi-0x55f2f300]
   1400074a3:	add    BYTE PTR [rip+0x1500a41b],bl        # 0x1550118c4
   1400074a9:	adc    eax,0x161800a8
   1400074ae:	stos   DWORD PTR es:[rdi],eax
   1400074af:	add    BYTE PTR [rbx],bl
   1400074b1:	sbb    ch,BYTE PTR [rbp-0x4bebeb00]
   1400074b7:	add    BYTE PTR [rax],bl
   1400074b9:	(bad)  
   1400074ba:	mov    ch,0x0
   1400074bc:	sbb    al,0x1c
   1400074be:	mov    bl,0x0
   1400074c0:	adc    edx,DWORD PTR [rbx]
   1400074c2:	mov    ecx,0xbc1f1f00
   1400074c7:	add    BYTE PTR [rax],ah
   1400074c9:	and    BYTE PTR [rdi-0x56d8d700],ch
   1400074cf:	add    BYTE PTR [rdi],ch
   1400074d1:	sub    al,0xaf
   1400074d3:	add    BYTE PTR [rsi],dh
   1400074d5:	xor    ebp,DWORD PTR [rax+rax*1+0xb32526]
   1400074dc:	sub    al,0x2b
   1400074de:	mov    bl,0x0
   1400074e0:	(bad)  
   1400074e1:	(bad)  
   1400074e2:	mov    ebx,0xba2d2d00
   1400074e7:	add    BYTE PTR [rax],dh
   1400074e9:	(bad)  
   1400074ea:	mov    ecx,0xb6333500
   1400074ef:	add    BYTE PTR [rdx],bh
   1400074f1:	ss mov al,0x0
   1400074f4:	cmp    DWORD PTR [rcx],edi
   1400074f6:	mov    dh,0x0
   1400074f8:	xor    al,0x34
   1400074fa:	mov    eax,0xba373800
   1400074ff:	add    BYTE PTR [rip+0x4800bb3c],bh        # 0x188013041
   140007505:	cmp    eax,0x39400090
   14000750a:	sahf   
   14000750b:	add    BYTE PTR [rbx+0x3b],al
   14000750e:	test   al,0x0
   140007510:	rex.R
   140007511:	ds mov bl,0x0
   140007514:	push   rdx
   140007515:	mov    r8b,BYTE PTR [rax]
   140007518:	rex.WRB
   140007519:	rex.X cdq 
   14000751b:	add    BYTE PTR [rsi+0x48],dl
   14000751e:	nop
   14000751f:	add    BYTE PTR [rbx+0x4c],bl
   140007522:	xchg   ecx,eax
   140007523:	add    BYTE PTR [rdx+0x5a],bl
   140007526:	sahf   
   140007527:	add    BYTE PTR [rsi+0x53],ah
   14000752a:	test   DWORD PTR [rax],eax
   14000752c:	push   0x6e009057
   140007531:	pop    rsp
   140007532:	xchg   ebx,eax
   140007533:	add    BYTE PTR [rbp+rdx*2-0x65],ah
   140007537:	add    BYTE PTR [rsi+0x63],dh
   14000753a:	nop
   14000753b:	add    BYTE PTR [rcx+rbp*2-0x6f],bh
   14000753f:	add    BYTE PTR [rbp+0x6b],bh
   140007542:	cwde   
   140007543:	add    BYTE PTR [rcx+0x41],cl
   140007546:	lods   al,BYTE PTR ds:[rsi]
   140007547:	add    BYTE PTR [rsp+rbx*2-0x5c],bl
   14000754b:	add    BYTE PTR [rsi+0x45],al
   14000754e:	mov    edi,0xbd4b4b00
   140007553:	add    BYTE PTR [rax+0x4b],dl
   140007556:	mov    eax,0xa45e6a00
   14000755b:	add    BYTE PTR [rcx+0x58],ah
   14000755e:	mov    bl,0x0
   140007560:	jne    0x1400075c7
   140007562:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007563:	add    BYTE PTR [rsi+0x7e],bh
   140007566:	scas   eax,DWORD PTR es:[rdi]
   140007567:	add    BYTE PTR [rsi],dl
   140007569:	(bad)  
   14000756a:	enter  0x1f00,0x20
   14000756e:	retf   
   14000756f:	add    BYTE PTR [rbx],ah
   140007571:	and    eax,edx
   140007573:	add    BYTE PTR [rdx],ah
   140007575:	and    cl,cl
   140007577:	add    BYTE PTR [rbx],bh
   140007579:	cmp    ecx,edx
   14000757b:	add    BYTE PTR [rcx+0x49],cl
   14000757e:	ret    
   14000757f:	add    BYTE PTR [rcx+0x59],bl
   140007582:	enter  0x5500,0x55
   140007586:	rol    DWORD PTR [rax],1
   140007588:	(bad)  
   14000758a:	retf   
   14000758b:	add    BYTE PTR [rsp+rdi*2-0x3b],bh
   14000758f:	add    BYTE PTR [rax+0x68],ch
   140007592:	(bad)  
   140007593:	add    BYTE PTR [rax+0x70],dh
   140007596:	(bad)  
   140007597:	add    BYTE PTR [rax-0x75ff7296],al
   14000759d:	jae    0x140007528
   14000759f:	add    BYTE PTR [rbp-0x7dff6085],cl
   1400075a5:	jae    0x140007556
   1400075a7:	add    BYTE PTR [rax+0xf00a27e],dl
   1400075ad:	cwde   
   1400075ae:	mov    esp,0xbd9e2000
   1400075b3:	add    BYTE PTR [rax],bh
   1400075b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400075b6:	mov    esp,0xbfab4800
   1400075bb:	add    BYTE PTR [rbp-0x57],dl
   1400075be:	mov    ecx,0xb8ac6900
   1400075c3:	add    BYTE PTR [rbp-0x4d],bh
   1400075c6:	mov    eax,0xc09d0f00
   1400075cb:	add    BYTE PTR [rdi],cl
   1400075cd:	movabs eax,ds:0xaf1800c8a71600c6
   1400075d6:	rol    DWORD PTR [rax],1
   1400075d8:	sbb    BYTE PTR [rbp-0x55d9ff28],dh
   1400075de:	mov    DWORD PTR [rax],0xc4ab35
   1400075e4:	sub    DWORD PTR [rcx+rcx*8-0x2841d900],esi
   1400075eb:	add    BYTE PTR [rdx],bl
   1400075ed:	mov    ebp,0xb04900e2
   1400075f2:	ret    
   1400075f3:	add    BYTE PTR [rdi-0x48],ah
   1400075f6:	mov    DWORD PTR [rax],0xddc62b
   1400075fc:	(bad)  
   1400075fd:	retf   
   1400075fe:	sti    
   1400075ff:	add    BYTE PTR [rsi],dl
   140007601:	fcos   
   140007603:	add    BYTE PTR [rdi],ah
   140007605:	retf   
   140007606:	jmp    0x12cd2a50b
   14000760b:	add    BYTE PTR [rip+0x2300ead4],dh        # 0x1630160e5
   140007611:	xlat   BYTE PTR ds:[rbx]
   140007612:	cld    
   140007613:	add    BYTE PTR [rcx],dh
   140007615:	fdivp  st(3),st
   140007617:	add    BYTE PTR [rip+0x2d00ffe3],bl        # 0x16d017600
   14000761d:	in     al,0xff
   14000761f:	add    BYTE PTR [rdx],bh
   140007621:	out    0xfd,eax
   140007623:	add    BYTE PTR [rbx-0x36],cl
   140007626:	int3   
   140007627:	add    BYTE PTR [rax-0x29],dl
   14000762a:	xlat   BYTE PTR ds:[rbx]
   14000762b:	add    BYTE PTR [rcx-0x17],al
   14000762e:	cli    
   14000762f:	add    BYTE PTR [rsi-0xe],al
   140007632:	inc    BYTE PTR [rax]
   140007634:	push   rdi
   140007635:	std    
   140007636:	inc    BYTE PTR [rax]
   140007638:	(bad)  
   140007639:	(bad)  
   14000763a:	inc    DWORD PTR [rax]
   14000763c:	(bad)  
   14000763d:	mov    WORD PTR [rdx-0x74756f00],cs
   140007643:	add    BYTE PTR [rbp-0x65ff617f],dl
   140007649:	cwde   
   14000764a:	xchg   ebp,eax
   14000764b:	add    BYTE PTR [rcx-0x50ff7a7c],ah
   140007651:	mov    eax,DWORD PTR [rcx-0x71795f00]
   140007657:	add    BYTE PTR [rbx-0x50ff7e73],dh
   14000765d:	xchg   ebx,eax
   14000765e:	mov    al,BYTE PTR [rax]
   140007660:	mov    ch,0x91
   140007662:	add    BYTE PTR [rax],0xb9
   140007665:	xchg   ebp,eax
   140007666:	test   DWORD PTR [rax],eax
   140007668:	mov    esp,0xb800819a
   14000766d:	xchg   esp,eax
   14000766e:	mov    al,BYTE PTR [rax]
   140007670:	mov    esp,0xa3008b9a
   140007675:	mov    BYTE PTR [rbp-0x62735d00],dl
   14000767b:	add    BYTE PTR [rdi-0x5dff666e],ah
   140007681:	sahf   
   140007682:	popf   
   140007683:	add    BYTE PTR [rbx-0x5aff6d65],bh
   140007689:	movabs al,ds:0x889b0097a0bd009e
   140007692:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007693:	add    BYTE PTR [rsp+rax*4-0x715cff48],al
   14000769a:	movabs eax,ds:0xb19aad00a49ab100
   1400076a3:	add    BYTE PTR [rbx-0x6aff4849],cl
   1400076a9:	mov    eax,0xa4a900b9
   1400076ae:	movabs ds:0xacb2ba00a7abb400,al
   1400076b7:	add    BYTE PTR [rcx-0x3eff4d4b],bh
   1400076bd:	popf   
   1400076be:	add    DWORD PTR [rax],0xffffffc2
   1400076c1:	lahf   
   1400076c2:	mov    DWORD PTR [rax],eax
   1400076c4:	ret    
   1400076c5:	movabs al,ds:0xa5c8008aa3c50086
   1400076ce:	mov    WORD PTR [rax],es
   1400076d0:	(bad)  
   1400076d1:	test   al,0x8e
   1400076d3:	add    cl,cl
   1400076d5:	test   eax,0xa5c5008f
   1400076da:	xchg   ebp,eax
   1400076db:	add    al,cl
   1400076dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400076de:	xchg   edx,eax
   1400076df:	add    bl,cl
   1400076e1:	stos   DWORD PTR es:[rdi],eax
   1400076e2:	xchg   edx,eax
   1400076e3:	add    cl,al
   1400076e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400076e6:	pushf  
   1400076e7:	add    dh,al
   1400076e9:	test   al,0x9a
   1400076eb:	add    cl,dl
   1400076ed:	lods   eax,DWORD PTR ds:[rsi]
   1400076ee:	xchg   esi,eax
   1400076ef:	add    ch,cl
   1400076f1:	mov    al,0x96
   1400076f3:	add    dh,cl
   1400076f5:	mov    cl,0x99
   1400076f7:	add    cl,dl
   1400076f9:	mov    bl,0x9c
   1400076fb:	add    dh,al
   1400076fd:	stos   DWORD PTR es:[rdi],eax
   1400076fe:	movabs ds:0xabb6cb00a8afc800,eax
   140007707:	add    dl,dl
   140007709:	mov    dh,0xa1
   14000770b:	add    al,bl
   14000770d:	mov    dh,0xa0
   14000770f:	add    ah,dl
   140007711:	mov    edx,0xbadb00a3
   140007716:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007717:	add    dh,dl
   140007719:	mov    esp,0xbeda00a9
   14000771e:	stos   BYTE PTR es:[rdi],al
   14000771f:	add    al,al
   140007721:	mov    dh,0xb0
   140007723:	add    cl,al
   140007725:	mov    edi,0xbdd400bd
   14000772a:	mov    cl,0x0
   14000772c:	loopne 0x1400076ed
   14000772e:	stos   BYTE PTR es:[rdi],al
   14000772f:	add    BYTE PTR [rbx-0x43ff403d],ch
   140007735:	ret    
   140007736:	mov    bh,0x0
   140007738:	fld    st(1)
   14000773a:	lods   al,BYTE PTR ds:[rsi]
   14000773b:	add    dh,cl
   14000773d:	(bad)  
   14000773e:	mov    bl,0x0
   140007740:	ret    0xbec0
   140007743:	add    bl,bl
   140007745:	(bad)  
   140007746:	mov    ah,0x0
   140007748:	loopne 0x140007710
   14000774a:	mov    ah,0x0
   14000774c:	loope  0x140007717
   14000774e:	mov    dh,0x0
   140007750:	jmp    0x120012e1f
   140007755:	int    0xba
   140007757:	add    dl,ch
   140007759:	int    0xba
   14000775b:	add    bl,ah
   14000775d:	sar    BYTE PTR [rbp-0x35717200],1
   140007763:	add    BYTE PTR [rcx-0x60ff257f],al
   140007769:	lahf   
   14000776a:	fild   DWORD PTR [rax]
   14000776c:	test   BYTE PTR [rdx+rax*8-0x29555600],bh
   140007773:	add    BYTE PTR [rbx-0x78ff294d],dh
   140007779:	xchg   ecx,ebp
   14000777b:	add    BYTE PTR [rdi-0x4aff0641],bh
   140007781:	retf   
   140007782:	enter  0xc500,0xc4
   140007786:	ret    0xc800
   140007789:	mov    ah,0x0
   14000778c:	ror    esp,0xc4
   14000778f:	add    dl,cl
   140007791:	enter  0xc6,0xc7
   140007795:	leave  
   140007796:	retf   
   140007797:	add    ch,cl
   140007799:	retf   
   14000779a:	leave  
   14000779b:	add    bl,dl
   14000779d:	int3   
   14000779e:	enter  0xdb00,0xd2
   1400077a2:	retf   
   1400077a3:	add    ah,dl
   1400077a5:	rcl    ebx,cl
   1400077a7:	add    ah,bl
   1400077a9:	(bad)  
   1400077aa:	rol    BYTE PTR [rax],cl
   1400077ac:	fcmovnu st,st(1)
   1400077ae:	xlat   BYTE PTR ds:[rbx]
   1400077af:	add    dh,bl
   1400077b1:	fstp   st(4)
   1400077b3:	add    cl,ch
   1400077b5:	xlat   BYTE PTR ds:[rbx]
   1400077b6:	enter  0xec00,0xdd
   1400077ba:	rol    DWORD PTR [rax],1
   1400077bc:	lock (bad) 
   1400077bf:	add    ch,ch
   1400077c1:	loope  0x140007797
   1400077c3:	add    al,dh
   1400077c5:	loope  0x14000779c
   1400077c7:	add    al,dh
   1400077c9:	lock fild WORD PTR [rax]
   1400077cc:	mov    edi,0xd9d800ec
   1400077d2:	in     al,dx
   1400077d3:	add    ch,al
   1400077d5:	(bad)  
   1400077d6:	icebp  
   1400077d7:	add    cl,ch
   1400077d9:	out    0xe5,eax
   1400077db:	add    dl,dh
   1400077dd:	out    dx,al
   1400077de:	in     eax,dx
   1400077df:	add    bh,dh
   1400077e1:	imul   ch
   1400077e3:	add    ch,ah
   1400077e5:	in     eax,0xfa
   1400077e7:	add    ch,dh
   1400077e9:	hlt    
   1400077ea:	repz add al,bh
   1400077ed:	div    ah
   1400077ef:	add    bl,bh
   1400077f1:	sti    
   1400077f2:	repz add bh,bh
   1400077f5:	(bad)  
   1400077f6:	inc    DWORD PTR [rax]
	...
   140007874:	add    BYTE PTR [rax],al
   140007876:	rcl    DWORD PTR [rsi+0x9d08],0x0
	...
   1400078a1:	add    BYTE PTR [rbp-0x61e7f4ef],bl
   1400078a7:	ror    cl,0x10
   1400078aa:	xchg   ecx,eax
	...
   1400078cb:	add    BYTE PTR [rax],al
   1400078cd:	mov    ebx,0x9a150a19
   1400078d2:	mov    ecx,0xbdc5c9c7
   1400078d7:	mov    bh,0xb3
   1400078d9:	leave  
   1400078da:	or     eax,0x91cb
	...
   1400078f7:	add    BYTE PTR [rax],al
   1400078f9:	cwde   
   1400078fa:	or     eax,0xc09e180f
   1400078ff:	int    0xc7
   140007901:	sar    BYTE PTR [rdx-0x4c4c4c4c],0xb3
   140007908:	mov    bh,0xd6
   14000790a:	or     eax,0x9da2cb
	...
   140007923:	add    BYTE PTR [rbx-0x65e8f5ec],ah
   140007929:	mov    edx,0xbdc5c7c7
   14000792e:	mov    bh,0xb3
   140007930:	mov    ah,0xb4
   140007932:	mov    ah,0xb4
   140007934:	mov    ah,0xb4
   140007936:	mov    bl,0x1e
   140007938:	(bad)  
   140007939:	(bad)  
   14000793a:	or     eax,0xda2cb
	...
   14000794f:	add    BYTE PTR [rax],al
   140007951:	or     DWORD PTR [rcx+rbx*1],ecx
   140007954:	mov    dl,0xc0
   140007956:	int    0xc7
   140007958:	mov    ebp,0xb3b3b7ba
   14000795d:	mov    bl,0xb4
   14000795f:	mov    ah,0xb4
   140007961:	mov    bl,0x9c
   140007963:	(bad)  
   140007964:	(bad)  
   140007965:	(bad)  
   140007966:	(bad)  
   140007967:	(bad)  
   140007968:	mov    bl,0xd6
   14000796a:	or     eax,0xda2cb
	...
   14000797f:	add    BYTE PTR [rsi-0x42f14243],dl
   140007985:	mov    bh,0xb3
   140007987:	mov    bl,0xb3
   140007989:	mov    ah,0xb7
   14000798b:	mov    ah,0xb3
   14000798d:	mov    bl,0x1e
   14000798f:	(bad)  
   140007990:	(bad)  
   140007991:	(bad)  
   140007992:	(bad)  
   140007993:	pushf  
   140007994:	mov    bl,0xb4
   140007996:	mov    bh,0xba
   140007998:	mov    edx,0xa2d20dd6
   14000799d:	or     eax,0x0
	...
   1400079ae:	add    BYTE PTR [rax],al
   1400079b0:	nop    DWORD PTR [rsi]
   1400079b3:	(bad)  
   1400079b4:	mov    ah,0xb7
   1400079b6:	mov    bh,0xb4
   1400079b8:	mov    bl,0xb3
   1400079ba:	(bad)  
   1400079bb:	(bad)  
   1400079bc:	(bad)  
   1400079bd:	(bad)  
   1400079be:	(bad)  
   1400079bf:	mov    bl,0xb3
   1400079c1:	mov    ah,0xba
   1400079c3:	mov    edx,0xb3b4b7ba
   1400079c8:	(bad)  
   1400079c9:	(bad)  
   1400079ca:	or     eax,0xda2d2
	...
   1400079df:	xchg   esp,eax
   1400079e0:	(bad)  
   1400079e1:	(bad)  
   1400079e2:	(bad)  
   1400079e3:	(bad)  
   1400079e4:	mov    bl,0x1e
   1400079e6:	(bad)  
   1400079e7:	(bad)  
   1400079e8:	(bad)  
   1400079e9:	sbb    al,0x95
   1400079eb:	push   0x5049434a
   1400079f0:	xchg   edi,eax
   1400079f1:	mov    dl,0xb3
   1400079f3:	pushf  
   1400079f4:	(bad)  
   1400079f5:	(bad)  
   1400079f6:	(bad)  
   1400079f7:	pushf  
   1400079f8:	mov    bl,0xd6
   1400079fa:	or     eax,0xda2e3
	...
   140007a0b:	add    BYTE PTR [rax],al
   140007a0d:	add    BYTE PTR [rdi+riz*8+0xe1ebf0d],dl
   140007a14:	(bad)  
   140007a15:	pushf  
   140007a16:	mov    bl,0xb4
   140007a18:	movabs ds:0x252b2d302e2b4452,eax
   140007a21:	rex.WR sbb al,0xb3
   140007a24:	mov    bl,0xb7
   140007a26:	mov    bh,0xba
   140007a28:	mov    edx,0xa2e30dd6
   140007a2d:	or     eax,0x0
	...
   140007a3e:	mov    al,0x0
   140007a40:	or     eax,0xba0e1e1e
   140007a45:	mov    edx,0x2e4fb4ba
   140007a4a:	(bad)  
   140007a4b:	pop    rsi
   140007a4c:	pop    rdi
   140007a4d:	pop    rdi
   140007a4e:	pop    rdi
   140007a4f:	pop    rsp
   140007a50:	(bad)  
   140007a51:	and    DWORD PTR [rbp-0x48],ecx
   140007a54:	mov    edx,0xb4b4baba
   140007a59:	(bad)  
   140007a5a:	or     eax,0xda2e3
	...
   140007a6f:	xchg   esp,eax
   140007a70:	(bad)  
   140007a71:	(bad)  
   140007a72:	(bad)  
   140007a73:	(bad)  
   140007a74:	mov    bl,0x1e
   140007a76:	(bad)  
   140007a77:	rex.WRX xor al,0x40
   140007a7a:	push   rsi
   140007a7b:	sub    BYTE PTR [rsi+0x5f],bl
   140007a7e:	xor    bl,bl
   140007a80:	movsxd esi,DWORD PTR [rdx]
   140007a82:	and    ebp,DWORD PTR [rcx-0x4d]
   140007a85:	pushf  
   140007a86:	(bad)  
   140007a87:	(bad)  
   140007a88:	pushf  
   140007a89:	(bad)  
   140007a8a:	or     eax,0xda2e4
	...
   140007a9b:	add    BYTE PTR [rax],al
   140007a9d:	add    BYTE PTR [rdi+riz*8+0xe1ebf0d],dl
   140007aa4:	pushf  
   140007aa5:	mov    bl,0x9f
   140007aa7:	ss cmp dl,bl
   140007aaa:	jmp    0x140007b00
   140007aac:	and    BYTE PTR [rdx],ch
   140007aae:	fdivp  st(6),st
   140007ab0:	fcomp  QWORD PTR [rbp+0x2c]
   140007ab3:	rex.RXB mov r11b,0xb4
   140007ab6:	mov    edx,0xdd6c0ba
   140007abb:	out    0xa2,al
   140007abd:	or     eax,0x0
	...
   140007ace:	mov    al,0x0
   140007ad0:	or     eax,0xc00e1e1e
   140007ad5:	mov    edx,0xda3b385a
   140007ada:	(bad)  
   140007adb:	hlt    
   140007adc:	rex.WXB pop r11
   140007ade:	(bad)  
   140007adf:	mul    DWORD PTR [rax+0x5e]
   140007ae2:	xor    BYTE PTR [rsi],ah
   140007ae4:	rol    al,0xbe
   140007ae7:	mov    edx,0xe80dd6b7
   140007aec:	movabs ds:0xd,al
	...
   140007afd:	add    BYTE PTR [rax],al
   140007aff:	xchg   esp,eax
   140007b00:	(bad)  
   140007b01:	(bad)  
   140007b02:	(bad)  
   140007b03:	(bad)  
   140007b04:	mov    ah,0x9c
   140007b06:	cmp    DWORD PTR [r8+rax*2],r15d
   140007b0a:	gs out dx,al
   140007b0c:	out    dx,al
   140007b0d:	hlt    
   140007b0e:	fidiv  WORD PTR [rax]
   140007b10:	pop    rsi
   140007b11:	pop    rsi
   140007b12:	xor    esp,DWORD PTR [rdx]
   140007b14:	mov    bl,0x9c
   140007b16:	(bad)  
   140007b17:	(bad)  
   140007b18:	pushf  
   140007b19:	(bad)  
   140007b1a:	or     eax,0xda2e8
	...
   140007b2b:	add    BYTE PTR [rax],al
   140007b2d:	add    BYTE PTR [rdi+riz*8+0xe1ebf0d],dl
   140007b34:	mov    edx,0x414239bf
   140007b39:	cmp    ebp,DWORD PTR [rcx]
   140007b3b:	(bad)  
   140007b3d:	(bad)  
   140007b3e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007b3f:	(bad)  
   140007b40:	sub    bl,BYTE PTR [rsi+0x30]
   140007b43:	and    esi,DWORD PTR [rdi+rsi*4-0x293f3f46]
   140007b4a:	or     eax,0xda4e8
	...
   140007b5b:	add    BYTE PTR [rax],al
   140007b5d:	add    BYTE PTR [rax+0x1e1e0d00],dh
   140007b63:	(bad)  
   140007b64:	mov    esi,0x60565639
   140007b6a:	addr32 sti 
   140007b6c:	idiv   al
   140007b6e:	clc    
   140007b6f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007b70:	and    al,0x3a
   140007b72:	cs rex.W rol al,0xc0
   140007b77:	mov    edi,0xe90dd6ba
   140007b7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007b7d:	or     eax,0x0
	...
   140007b8e:	add    BYTE PTR [rdi+rax*1-0x4bf1e1fa],dl
   140007b95:	mov    bl,0x53
   140007b97:	push   rsi
   140007b98:	fs loopne 0x140007b99
   140007b9b:	sti    
   140007b9c:	data16 fs stc 
   140007b9f:	(bad)  
   140007ba0:	fistp  QWORD PTR [rcx]
   140007ba2:	sub    edx,DWORD PTR [rcx-0x4c]
   140007ba5:	mov    bl,0x9c
   140007ba7:	pushf  
   140007ba8:	mov    bl,0xd6
   140007baa:	or     eax,0xda4eb
	...
   140007bbb:	add    BYTE PTR [rax],al
   140007bbd:	add    BYTE PTR [rdi+riz*8+0xe1ebf0d],dl
   140007bc4:	(bad)  
   140007bc5:	enter  0x426b,0x64
   140007bc9:	loope  0x140007bc6
   140007bcb:	(bad)  [rbx+0x61]
   140007bce:	addr32 cmc 
   140007bd0:	cmp    DWORD PTR [edi],esp
   140007bd3:	cdq    
   140007bd4:	mov    dh,0xba
   140007bd6:	rol    al,0xc4
   140007bd9:	(bad)  
   140007bda:	or     eax,0xda4eb
	...
   140007beb:	add    BYTE PTR [rax],al
   140007bed:	add    BYTE PTR [rax+0x1e1e0d00],dh
   140007bf3:	(bad)  
   140007bf4:	leave  
   140007bf5:	enter  0x46a9,0x56
   140007bf9:	data16 loopne 0x140007c60
   140007bfc:	fs movsxd esp,DWORD PTR fs:[rdx+0x3f]
   140007c01:	xor    eax,0xc6c6c6a6
   140007c06:	mov    dh,0xc0
   140007c09:	(bad)  
   140007c0a:	or     eax,0xdadeb
	...
   140007c1f:	xchg   esp,eax
   140007c20:	(bad)  
   140007c21:	(bad)  
   140007c22:	pushf  
   140007c23:	(bad)  
   140007c24:	mov    edx,0x4693b4b4
   140007c29:	push   rbp
   140007c2a:	(bad)  
   140007c2b:	fs fs fs push rsi
   140007c2f:	cmp    eax,0xc0c6a637
   140007c34:	mov    esi,0xbab7baba
   140007c39:	fmul   DWORD PTR [rip+0xdaded]        # 0x1400e2a2c
	...
   140007c4b:	add    BYTE PTR [rax],al
   140007c4d:	add    BYTE PTR [rdi+riz*8+0xfb3c60d],dl
   140007c54:	rcl    al,1
   140007c56:	rcl    al,1
   140007c58:	stos   BYTE PTR es:[rdi],al
   140007c59:	pop    rcx
   140007c5a:	push   rdi
   140007c5b:	rex.X
   140007c5c:	rex.X cmp eax,0xbaa1583e
   140007c62:	mov    edx,0xc6c0bfbe
   140007c67:	mov    dh,0xd8
   140007c6a:	or     eax,0xdaded
	...
   140007c7b:	add    BYTE PTR [rax],al
   140007c7d:	add    BYTE PTR [rax-0x4c4cf300],dh
   140007c83:	(bad)  
   140007c85:	rol    dh,1
   140007c87:	sar    BYTE PTR [rdi+0x6c6aa0bb],0xa8
   140007c8e:	mov    ebx,0xd0d0c6c4
   140007c93:	rcl    al,1
   140007c95:	rcl    al,1
   140007c97:	rcl    al,1
   140007c99:	fmul   DWORD PTR [rip+0xdaded]        # 0x1400e2a8c
	...
   140007caf:	xchg   esp,eax
   140007cb0:	(bad)  
   140007cb1:	(bad)  
   140007cb2:	mov    ah,0x13
   140007cb4:	mov    esi,0xc6c0bfba
   140007cb9:	enter  0xd0d0,0xd0
   140007cbd:	(bad)  
   140007cbe:	rcl    al,1
   140007cc0:	rcl    al,1
   140007cc2:	rol    dh,1
   140007cc4:	mov    al,0xbf
   140007cc7:	mov    edi,0xee0dd8be
   140007ccc:	lods   eax,DWORD PTR ds:[rsi]
   140007ccd:	or     eax,0x0
	...
   140007cde:	xchg   esp,eax
   140007cdf:	out    0xd,eax
   140007ce1:	shl    BYTE PTR [rsp+rdx*1-0x2a2a2a30],1
   140007ce8:	(bad)  
   140007ce9:	(bad)  
   140007cea:	rcl    al,1
   140007cec:	leave  
   140007ced:	mov    dh,0xc0
   140007cf0:	mov    edi,0xbfbfbebf
   140007cf5:	rol    dh,0xc6
   140007cf8:	(bad)  
   140007cf9:	fmul   DWORD PTR [rip+0xdaeee]        # 0x1400e2bed
	...
   140007d0b:	add    BYTE PTR [rax],al
   140007d0d:	add    BYTE PTR [rax-0x4545f300],dh
   140007d13:	adc    eax,0xc6c8d0d0
   140007d18:	(bad)  
   140007d19:	mov    edi,0xc0bfbfbf
   140007d1e:	mov    dh,0xc9
   140007d21:	ror    edi,1
   140007d23:	(bad)  
   140007d24:	lods   al,BYTE PTR ds:[rsi]
   140007d25:	jae    0x140007d99
   140007d27:	jno    0x140007d99
   140007d29:	fmul   DWORD PTR [rip+0xdaef8]        # 0x1400e2c27
	...
   140007d3f:	xchg   esp,eax
   140007d40:	(bad)  
   140007d41:	(bad)  
   140007d42:	mov    edx,0xc6bfc017
   140007d47:	(bad)  
   140007d48:	rcl    al,1
   140007d4a:	(bad)  
   140007d4b:	(bad)  
   140007d4c:	(bad)  
   140007d4d:	jle    0x140007dbe
   140007d4f:	outs   dx,BYTE PTR ds:[rsi]
   140007d50:	je     0x140007dc7
   140007d52:	jne    0x140007dc1
   140007d54:	js     0x140007dce
   140007d56:	jge    0x140007dd5
   140007d58:	jbe    0x140007d32
   140007d5a:	or     eax,0xdaef8
	...
   140007d6b:	add    BYTE PTR [rax],al
   140007d6d:	add    BYTE PTR [rdi+riz*8+0x19bfd016],dl
   140007d74:	(bad)  
   140007d76:	(bad)  
   140007d78:	(bad)  
   140007d79:	(bad)  
   140007d7a:	(bad)  
   140007d7b:	(bad)  
   140007d7c:	shl    BYTE PTR [rsi-0x7d],1
   140007d7f:	add    DWORD PTR [rcx-0x77fcfb7e],0x737d8686
   140007d89:	out    dx,eax
   140007d8a:	or     eax,0xdaef8
	...
   140007d9b:	add    BYTE PTR [rax],al
   140007d9d:	add    BYTE PTR [rax-0x3f40ea00],dh
   140007da3:	xchg   esi,eax
   140007da4:	rcl    al,1
   140007da6:	rcl    al,1
   140007da8:	enter  0xc6c6,0xc6
   140007dac:	enter  0x7d73,0x86
   140007db0:	xchg   BYTE PTR [rsi-0x7876fafc],al
   140007db6:	test   BYTE PTR [rcx-0x29],bh
   140007db9:	out    dx,eax
   140007dba:	or     eax,0xdaef4
	...
   140007dcf:	xchg   esp,eax
   140007dd0:	(bad)  
   140007dd1:	(bad)  
   140007dd2:	rcl    BYTE PTR [rsi-0x2b2f2f30],0xd7
   140007dd9:	(bad)  
   140007dda:	(bad)  
   140007ddc:	fldl2e 
   140007dde:	jp     0x140007d64
   140007de0:	mov    cl,BYTE PTR [rdx-0x71718484]
   140007de6:	jl     0x140007e5b
   140007de8:	(bad)  
   140007de9:	out    dx,eax
   140007dea:	or     eax,0xdaef8
	...
   140007dfb:	add    BYTE PTR [rax],al
   140007dfd:	add    BYTE PTR [rdi+riz*8-0x653f2fea],dl
   140007e04:	fcomp  st(0)
   140007e06:	fcomp  st(1)
   140007e08:	(bad)  
   140007e0a:	(bad)  
   140007e0b:	(bad)  
   140007e0c:	rcl    al,1
   140007e0e:	stos   DWORD PTR es:[rdi],eax
   140007e0f:	ja     0x140007d9f
   140007e11:	pop    QWORD PTR [rcx]
   140007e13:	add    DWORD PTR [rdi-0x2f2e8673],ecx
   140007e19:	out    dx,eax
   140007e1a:	or     eax,0xdaef8
	...
   140007e2b:	add    BYTE PTR [rax],al
   140007e2d:	add    BYTE PTR [rax-0x3b40ea00],dh
   140007e33:	pushf  
   140007e34:	(bad)  
   140007e35:	rcl    al,1
   140007e37:	rcl    al,1
   140007e39:	rcl    al,1
   140007e3b:	(bad)  
   140007e3c:	(bad)  
   140007e3d:	(bad)  
   140007e3e:	sar    DWORD PTR [rdx-0x7b],cl
   140007e41:	nop
   140007e42:	add    BYTE PTR [rax],al
   140007e44:	nop
   140007e45:	sbb    ch,0xd9
   140007e48:	(bad)  
   140007e4a:	or     eax,0xdaef8
	...
   140007e5f:	xchg   esp,eax
   140007e60:	(bad)  
   140007e61:	(bad)  
   140007e62:	(bad)  
   140007e63:	pushf  
   140007e64:	(bad)  
   140007e66:	(bad)  
   140007e68:	fsubr  st,st(7)
   140007e6a:	out    dx,eax
   140007e6b:	out    dx,eax
   140007e6c:	out    dx,eax
   140007e6d:	out    dx,eax
   140007e6e:	out    dx,eax
   140007e6f:	loop   0x140007ee8
   140007e71:	nop
   140007e72:	add    DWORD PTR [rdx],eax
   140007e74:	(bad)  
   140007e75:	jns    0x140007e4a
   140007e77:	rcl    al,1
   140007e79:	out    dx,eax
   140007e7a:	or     eax,0xdaff9
	...
   140007e8b:	add    BYTE PTR [rax],al
   140007e8d:	add    BYTE PTR [rbx+riz*8-0x63372fea],dl
   140007e94:	out    dx,eax
   140007e95:	out    dx,eax
   140007e96:	out    dx,eax
   140007e97:	out    dx,eax
   140007e98:	(bad)  
   140007e9a:	(bad)  
   140007e9c:	(bad)  
   140007e9d:	xlat   BYTE PTR ds:[rbx]
   140007e9e:	(bad)  
   140007e9f:	(bad)  
   140007ea0:	jo     0x140007e27
   140007ea2:	mov    ecx,DWORD PTR [rsp+rax*4-0x2b2b2f8d]
   140007ea9:	lock or eax,0xdaff9
	...
   140007ebb:	add    BYTE PTR [rax],al
   140007ebd:	add    BYTE PTR [rax-0x3740ea00],dh
   140007ec3:	pushf  
   140007ec4:	(bad)  
   140007ec5:	(bad)  
   140007ec6:	rcl    ah,1
   140007ec8:	(bad)  
   140007ec9:	(bad)  
   140007eca:	xlat   BYTE PTR ds:[rbx]
   140007ecb:	xlat   BYTE PTR ds:[rbx]
   140007ecc:	(bad)  
   140007ecd:	(bad)  
   140007ece:	(bad)  
   140007ed0:	in     eax,0x76
   140007ed2:	(bad)  
   140007ed3:	nop
   140007ed4:	jns    0x140007eaf
   140007ed6:	fcomp  st(0)
   140007ed8:	fdiv   st,st(0)
   140007eda:	or     eax,0xdaffc
	...
   140007eef:	xchg   esp,eax
   140007ef0:	(bad)  
   140007ef1:	(bad)  
   140007ef2:	enter  0xd89c,0xef
   140007ef6:	out    dx,eax
   140007ef7:	out    dx,eax
   140007ef8:	out    dx,eax
   140007ef9:	out    dx,eax
   140007efa:	lock lock lock out dx,eax
   140007efe:	out    dx,eax
   140007eff:	out    dx,eax
   140007f00:	out    dx,eax
   140007f01:	jg     0x140007e83
   140007f03:	sbb    ch,0xd9
   140007f06:	(bad)  
   140007f07:	(bad)  
   140007f08:	(bad)  
   140007f09:	lock or eax,0xdaffc
	...
   140007f1b:	add    BYTE PTR [rax],al
   140007f1d:	add    BYTE PTR [rdi+riz*8-0x63362fea],dl
   140007f24:	repnz lock lock out dx,eax
   140007f28:	(bad)  
   140007f2a:	(bad)  
   140007f2c:	(bad)  
   140007f2e:	(bad)  
   140007f2f:	(bad)  
   140007f30:	(bad)  
   140007f31:	iret   
   140007f32:	jp     0x140007fb2
   140007f34:	rcl    esp,1
   140007f36:	(bad)  
   140007f37:	(bad)  
   140007f38:	(bad)  
   140007f39:	icebp  
   140007f3a:	or     eax,0xdaffc
	...
   140007f4b:	add    BYTE PTR [rax],al
   140007f4d:	add    BYTE PTR [rax-0x2f40ea00],dh
   140007f53:	pushf  
   140007f54:	xlat   BYTE PTR ds:[rbx]
   140007f55:	xlat   BYTE PTR ds:[rbx]
   140007f56:	(bad)  
   140007f57:	xlat   BYTE PTR ds:[rbx]
   140007f58:	(bad)  
   140007f59:	(bad)  
   140007f5a:	(bad)  
   140007f5b:	(bad)  
   140007f5d:	(bad)  
   140007f5f:	(bad)  
   140007f61:	out    dx,eax
   140007f62:	out    dx,eax
   140007f63:	out    dx,eax
   140007f64:	fcomp  st(0)
   140007f66:	out    dx,eax
   140007f67:	out    dx,eax
   140007f68:	out    dx,eax
   140007f69:	icebp  
   140007f6a:	or     eax,0xdaffd
	...
   140007f7f:	xchg   esp,eax
   140007f80:	(bad)  
   140007f81:	(bad)  
   140007f82:	rcr    BYTE PTR [rdi+rbp*8-0xd0f0d10],1
   140007f89:	repnz repz repz repnz repnz repnz lock out dx,eax
   140007f91:	out    dx,eax
   140007f92:	out    dx,eax
   140007f93:	out    dx,eax
   140007f94:	out    dx,eax
   140007f95:	out    dx,eax
   140007f96:	out    dx,eax
   140007f97:	out    dx,eax
   140007f98:	out    dx,eax
   140007f99:	icebp  
   140007f9a:	or     eax,0xdaffd
	...
   140007fab:	add    BYTE PTR [rax],al
   140007fad:	add    BYTE PTR [rdi+riz*8-0x632f2fea],dl
   140007fb4:	repnz repnz repz repz repz repz repnz repnz repnz lock lock lock lock lock
   140007fc2:	out    dx,eax
   140007fc3:	out    dx,eax
   140007fc4:	out    dx,eax
   140007fc5:	out    dx,eax
   140007fc6:	out    dx,eax
   140007fc7:	out    dx,eax
   140007fc8:	out    dx,eax
   140007fc9:	icebp  
   140007fca:	or     eax,0xdaffe
	...
   140007fdb:	add    BYTE PTR [rax],al
   140007fdd:	add    BYTE PTR [rax-0x2f40ea00],dh
   140007fe3:	pushf  
   140007fe4:	repz repnz repnz repnz repnz repnz repnz repnz out dx,eax
   140007fed:	out    dx,eax
   140007fee:	lock lock out dx,eax
   140007ff1:	out    dx,eax
   140007ff2:	out    dx,eax
   140007ff3:	out    dx,eax
   140007ff4:	lock repz repz repnz out dx,eax
   140007ff9:	sahf   
   140007ffa:	mov    al,0xfe
   140007ffc:	scas   eax,DWORD PTR es:[rdi]
   140007ffd:	or     eax,0x0
	...
   14000800e:	add    BYTE PTR [rdi+rax*1-0x10632ffa],dl
   140008015:	lock repnz lock lock repnz repnz lock repz repz out dx,eax
   14000801f:	out    dx,eax
   140008020:	(bad)  
   140008022:	ror    al,1
   140008024:	mov    esp,0x9b9696b4
   140008029:	mov    al,0xf8
   14000802b:	(bad)  
   14000802c:	scas   eax,DWORD PTR es:[rdi]
   14000802d:	or     eax,0x0
	...
   14000803e:	xchg   esp,eax
   14000803f:	out    0x16,eax
   140008041:	rcl    al,1
   140008043:	pushf  
   140008044:	lock out dx,eax
   140008046:	(bad)  
   140008048:	int3   
   140008049:	enter  0xb8bc,0x96
   14000804d:	xchg   esi,eax
   14000804e:	fwait
   14000804f:	sahf   
   140008050:	ror    esp,1
   140008052:	(bad)  
   140008053:	(bad)  
   140008054:	clc    
   140008055:	in     eax,dx
   140008056:	clc    
   140008057:	cld    
   140008058:	(bad)  
   140008059:	(bad)  
   14000805a:	(bad)  
   14000805b:	cld    
   14000805c:	jmp    0x14000807b
	...
   14000806d:	add    BYTE PTR [rax-0x6964ea00],dh
   140008073:	xchg   esi,eax
   140008074:	fwait
   140008075:	mov    esp,0xf8ede9c3
   14000807a:	clc    
   14000807b:	clc    
   14000807c:	cld    
   14000807d:	(bad)  
   14000807e:	(bad)  
   14000807f:	(bad)  
   140008080:	(bad)  
   140008081:	cld    
   140008082:	clc    
   140008083:	stc    
   140008084:	out    dx,al
   140008085:	out    dx,al
   140008086:	in     al,dx
   140008087:	jmp    0x15aa43c4d
   14000808c:	sbb    al,BYTE PTR [rax]
	...
   14000809e:	add    BYTE PTR [rdi+rax*1-0x1011636],dl
   1400080a5:	cld    
   1400080a6:	stc    
   1400080a7:	clc    
   1400080a8:	in     al,dx
   1400080a9:	in     al,dx
   1400080aa:	jmp    0x14d9f2671
   1400080af:	or     eax,0x1a1a190d
   1400080b4:	movabs ds:0xc3bbbb,eax
	...
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    bl,ch
   1400080d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400080d2:	xchg   ecx,eax
   1400080d3:	xchg   esi,eax
   1400080d4:	movabs ds:0xc3bbbb,eax
	...
   1400080f5:	add    BYTE PTR [rax],al
   1400080f7:	add    bh,bh
   1400080f9:	(bad)  
   1400080fa:	(bad)  
   1400080fb:	(bad)  
   1400080fc:	(bad)  
   1400080fd:	inc    DWORD PTR [rax]
   1400080ff:	add    bh,bh
   140008101:	(bad)  
   140008102:	(bad)  
   140008103:	(bad)  
   140008104:	(bad)  
   140008105:	inc    DWORD PTR [rax]
   140008107:	add    bh,bh
   140008109:	(bad)  
   14000810a:	(bad)  
   14000810b:	cld    
   14000810c:	(bad)  
   14000810d:	inc    DWORD PTR [rax]
   14000810f:	add    bh,bh
   140008111:	(bad)  
   140008112:	inc    eax
   140008114:	(bad)  
   140008115:	inc    DWORD PTR [rax]
   140008117:	add    bh,bh
   140008119:	(bad)  
   14000811a:	clc    
   14000811b:	add    BYTE PTR [rdi],al
   14000811d:	inc    DWORD PTR [rax]
   14000811f:	add    bh,bh
   140008121:	inc    DWORD PTR [rax+0xff0300]
   140008127:	add    bh,bh
   140008129:	lock add BYTE PTR [rax],al
   14000812c:	add    edi,edi
   14000812e:	add    BYTE PTR [rax],al
   140008130:	inc    DWORD PTR [rax-0xfd0000]
   140008136:	add    BYTE PTR [rax],al
   140008138:	inc    DWORD PTR [rax]
   14000813a:	add    BYTE PTR [rax],al
   14000813c:	add    edi,edi
   14000813e:	add    BYTE PTR [rax],al
   140008140:	inc    DWORD PTR [rax]
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    edi,edi
   140008146:	add    BYTE PTR [rax],al
   140008148:	inc    BYTE PTR [rax]
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    edi,edi
   14000814e:	add    BYTE PTR [rax],al
   140008150:	cld    
   140008151:	add    BYTE PTR [rax],al
   140008153:	add    BYTE PTR [rbx],al
   140008155:	inc    DWORD PTR [rax]
   140008157:	add    ch,bh
   140008159:	add    BYTE PTR [rax],al
   14000815b:	add    BYTE PTR [rbx],al
   14000815d:	inc    DWORD PTR [rax]
   14000815f:	add    dh,bh
   140008161:	add    BYTE PTR [rax],al
   140008163:	add    BYTE PTR [rbx],al
   140008165:	inc    DWORD PTR [rax]
   140008167:	add    ah,bh
   140008169:	add    BYTE PTR [rax],al
   14000816b:	add    BYTE PTR [rbx],al
   14000816d:	inc    DWORD PTR [rax]
   14000816f:	add    ch,bh
   140008171:	add    BYTE PTR [rax],al
   140008173:	add    BYTE PTR [rbx],al
   140008175:	inc    DWORD PTR [rax]
   140008177:	add    dh,bh
   140008179:	add    BYTE PTR [rax],al
   14000817b:	add    BYTE PTR [rbx],al
   14000817d:	inc    DWORD PTR [rax]
   14000817f:	add    ah,bh
   140008181:	add    BYTE PTR [rax],al
   140008183:	add    BYTE PTR [rbx],al
   140008185:	inc    DWORD PTR [rax]
   140008187:	add    ch,bh
   140008189:	add    BYTE PTR [rax],al
   14000818b:	add    BYTE PTR [rbx],al
   14000818d:	inc    DWORD PTR [rax]
   14000818f:	add    dh,bh
   140008191:	add    BYTE PTR [rax],al
   140008193:	add    BYTE PTR [rbx],al
   140008195:	inc    DWORD PTR [rax]
   140008197:	add    ah,bh
   140008199:	add    BYTE PTR [rax],al
   14000819b:	add    BYTE PTR [rbx],al
   14000819d:	inc    DWORD PTR [rax]
   14000819f:	add    ch,bh
   1400081a1:	add    BYTE PTR [rax],al
   1400081a3:	add    BYTE PTR [rbx],al
   1400081a5:	inc    DWORD PTR [rax]
   1400081a7:	add    dh,bh
   1400081a9:	add    BYTE PTR [rax],al
   1400081ab:	add    BYTE PTR [rbx],al
   1400081ad:	inc    DWORD PTR [rax]
   1400081af:	add    ah,bh
   1400081b1:	add    BYTE PTR [rax],al
   1400081b3:	add    BYTE PTR [rbx],al
   1400081b5:	inc    DWORD PTR [rax]
   1400081b7:	add    ch,bh
   1400081b9:	add    BYTE PTR [rax],al
   1400081bb:	add    BYTE PTR [rbx],al
   1400081bd:	inc    DWORD PTR [rax]
   1400081bf:	add    dh,bh
   1400081c1:	add    BYTE PTR [rax],al
   1400081c3:	add    BYTE PTR [rbx],al
   1400081c5:	inc    DWORD PTR [rax]
   1400081c7:	add    ah,bh
   1400081c9:	add    BYTE PTR [rax],al
   1400081cb:	add    BYTE PTR [rbx],al
   1400081cd:	inc    DWORD PTR [rax]
   1400081cf:	add    ch,bh
   1400081d1:	add    BYTE PTR [rax],al
   1400081d3:	add    BYTE PTR [rbx],al
   1400081d5:	inc    DWORD PTR [rax]
   1400081d7:	add    dh,bh
   1400081d9:	add    BYTE PTR [rax],al
   1400081db:	add    BYTE PTR [rbx],al
   1400081dd:	inc    DWORD PTR [rax]
   1400081df:	add    ah,bh
   1400081e1:	add    BYTE PTR [rax],al
   1400081e3:	add    BYTE PTR [rbx],al
   1400081e5:	inc    DWORD PTR [rax]
   1400081e7:	add    ch,bh
   1400081e9:	add    BYTE PTR [rax],al
   1400081eb:	add    BYTE PTR [rbx],al
   1400081ed:	inc    DWORD PTR [rax]
   1400081ef:	add    dh,bh
   1400081f1:	add    BYTE PTR [rax],al
   1400081f3:	add    BYTE PTR [rbx],al
   1400081f5:	inc    DWORD PTR [rax]
   1400081f7:	add    ah,bh
   1400081f9:	add    BYTE PTR [rax],al
   1400081fb:	add    BYTE PTR [rbx],al
   1400081fd:	inc    DWORD PTR [rax]
   1400081ff:	add    ch,bh
   140008201:	add    BYTE PTR [rax],al
   140008203:	add    BYTE PTR [rbx],al
   140008205:	inc    DWORD PTR [rax]
   140008207:	add    dh,bh
   140008209:	add    BYTE PTR [rax],al
   14000820b:	add    BYTE PTR [rbx],al
   14000820d:	inc    DWORD PTR [rax]
   14000820f:	add    ah,bh
   140008211:	add    BYTE PTR [rax],al
   140008213:	add    BYTE PTR [rbx],al
   140008215:	inc    DWORD PTR [rax]
   140008217:	add    ch,bh
   140008219:	add    BYTE PTR [rax],al
   14000821b:	add    BYTE PTR [rbx],al
   14000821d:	inc    DWORD PTR [rax]
   14000821f:	add    dh,bh
   140008221:	add    BYTE PTR [rax],al
   140008223:	add    BYTE PTR [rbx],al
   140008225:	inc    DWORD PTR [rax]
   140008227:	add    ah,bh
   140008229:	add    BYTE PTR [rax],al
   14000822b:	add    BYTE PTR [rbx],al
   14000822d:	inc    DWORD PTR [rax]
   14000822f:	add    ch,bh
   140008231:	add    BYTE PTR [rax],al
   140008233:	add    BYTE PTR [rbx],al
   140008235:	inc    DWORD PTR [rax]
   140008237:	add    dh,bh
   140008239:	add    BYTE PTR [rax],al
   14000823b:	add    BYTE PTR [rbx],al
   14000823d:	inc    DWORD PTR [rax]
   14000823f:	add    ah,bh
   140008241:	add    BYTE PTR [rax],al
   140008243:	add    BYTE PTR [rbx],al
   140008245:	inc    DWORD PTR [rax]
   140008247:	add    ch,bh
   140008249:	add    BYTE PTR [rax],al
   14000824b:	add    BYTE PTR [rbx],al
   14000824d:	inc    DWORD PTR [rax]
   14000824f:	add    dh,bh
   140008251:	add    BYTE PTR [rax],al
   140008253:	add    BYTE PTR [rbx],al
   140008255:	inc    DWORD PTR [rax]
   140008257:	add    ah,bh
   140008259:	add    BYTE PTR [rax],al
   14000825b:	add    BYTE PTR [rbx],al
   14000825d:	inc    DWORD PTR [rax]
   14000825f:	add    ch,bh
   140008261:	add    BYTE PTR [rax],al
   140008263:	add    BYTE PTR [rdi],al
   140008265:	inc    DWORD PTR [rax]
   140008267:	add    dh,bh
   140008269:	add    BYTE PTR [rax],al
   14000826b:	add    bh,bh
   14000826d:	inc    DWORD PTR [rax]
   14000826f:	add    bh,bh
   140008271:	add    bh,bh
   140008273:	(bad)  
   140008274:	(bad)  
   140008275:	inc    DWORD PTR [rax]
   140008277:	add    BYTE PTR [rax],ch
   140008279:	add    BYTE PTR [rax],al
   14000827b:	add    BYTE PTR [rax],ah
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rax+0x0],al
   140008282:	add    BYTE PTR [rax],al
   140008284:	add    DWORD PTR [rax],eax
   140008286:	or     BYTE PTR [rax],al
   140008288:	add    BYTE PTR [rax],al
   14000828a:	add    BYTE PTR [rax],al
   14000828c:	add    BYTE PTR [rax+rax*1],al
	...
   140008297:	add    BYTE PTR [rax],al
   140008299:	add    DWORD PTR [rax],eax
   14000829b:	add    BYTE PTR [rax],al
   14000829d:	add    DWORD PTR [rax],eax
   14000829f:	add    BYTE PTR [rax],al
   1400082a1:	add    BYTE PTR [rax],al
   1400082a3:	add    BYTE PTR [rdx],al
   1400082a5:	add    al,0x4
   1400082a7:	add    BYTE PTR [rdi],al
   1400082a9:	adc    al,0x14
   1400082ab:	add    BYTE PTR [rbx],cl
   1400082ad:	and    BYTE PTR [rax],ah
   1400082af:	add    BYTE PTR [rsi+0x73],dh
   1400082b2:	jb     0x1400082b4
   1400082b4:	jg     0x140008333
   1400082b6:	jnp    0x1400082b8
   1400082b8:	mov    ah,BYTE PTR [rax+0x55]
   1400082bb:	add    BYTE PTR [rsi-0x66ffa79b],cl
   1400082c1:	push   0x5d
   1400082c3:	add    BYTE PTR [rdi-0x5fffa28f],bl
   1400082c9:	jb     0x140008329
   1400082cb:	add    BYTE PTR [rdi-0x67ff9f95],dl
   1400082d1:	outs   dx,BYTE PTR ds:[rsi]
   1400082d2:	(bad)  
   1400082d3:	add    BYTE PTR [rsi-0x75ff978d],bl
   1400082d9:	jne    0x14000834e
   1400082db:	add    BYTE PTR [rdx-0x71ff8785],al
   1400082e1:	jnp    0x14000835d
   1400082e3:	add    BYTE PTR [rbx-0x6fff8885],dl
   1400082e9:	jg     0x140008368
   1400082eb:	add    BYTE PTR [rdx-0x5dff9e8b],ah
   1400082f1:	jbe    0x14000835a
   1400082f3:	add    BYTE PTR [rbp-0x59ff9a87],ah
   1400082f9:	jl     0x140008362
   1400082fb:	add    BYTE PTR [rbp-0x57ff9085],ah
   140008301:	jle    0x14000836c
   140008303:	add    BYTE PTR [rdx-0x55ff8c84],ah
   140008309:	sub    DWORD PTR [rax+rax*1-0x54],0xa8006e83
   140008311:	(bad)  
   140008312:	jb     0x140008314
   140008314:	lods   eax,DWORD PTR ds:[rsi]
   140008315:	xchg   BYTE PTR [rcx+0x0],dh
   140008318:	test   al,0x80
   14000831a:	jne    0x14000831c
   14000831c:	scas   eax,DWORD PTR es:[rdi]
   14000831d:	mov    BYTE PTR [rbx+0x0],dh
   140008320:	movabs ds:0xad007d87ad007981,al
   140008329:	mov    BYTE PTR [rsi+0x0],bh
   14000832c:	mov    cl,0x8b
   14000832e:	jbe    0x140008330
   140008330:	mov    bl,0x8d
   140008332:	js     0x140008334
   140008334:	mov    ah,0x8f
   140008336:	jle    0x140008338
   140008338:	mov    ch,0x92
   14000833a:	jl     0x14000833c
   14000833c:	mov    eax,0xba007a91
   140008341:	xchg   ebp,eax
   140008342:	jns    0x140008344
   140008344:	mov    ecx,0xbc007e94
   140008349:	cdq    
   14000834a:	jle    0x14000834c
   14000834c:	mov    esi,0x24007f9c
   140008351:	and    BYTE PTR [rsi-0x68d6d100],dl
   140008357:	add    BYTE PTR [rdi],ah
   140008359:	and    bl,BYTE PTR [rcx-0x52e6e600]
   14000835f:	add    BYTE PTR [rdx],bl
   140008361:	sbb    dh,BYTE PTR [rax-0x58c7c100]
   140008367:	add    BYTE PTR [rdi],dh
   140008369:	xor    ch,BYTE PTR [rbx-0x51cbc700]
   14000836f:	add    BYTE PTR [rdx],ah
   140008371:	and    esi,DWORD PTR [rdx-0x4ed4d500]
   140008377:	add    BYTE PTR [rcx],ch
   140008379:	sub    BYTE PTR [rbp-0x46dddd00],dh
   14000837f:	add    BYTE PTR [rbx+riz*1],ah
   140008382:	mov    esi,0xbd272700
   140008387:	add    BYTE PTR [rdx],ch
   140008389:	sub    bh,BYTE PTR [rdx-0x4ac9c900]
   14000838f:	add    BYTE PTR [rbx],bh
   140008391:	(bad)  
   140008392:	mov    al,0x0
   140008394:	cmp    al,0x36
   140008396:	mov    dl,0x0
   140008398:	cmp    DWORD PTR [rax],edi
   14000839a:	mov    ebp,0xa8394000
   14000839f:	add    BYTE PTR [rbp+0x47],dl
   1400083a2:	mov    eax,DWORD PTR [rax]
   1400083a4:	pop    rbx
   1400083a5:	rex.WR xchg rdx,rax
   1400083a7:	add    BYTE PTR [rbx+0x4d],bl
   1400083aa:	xchg   esp,eax
   1400083ab:	add    BYTE PTR [rdi+rcx*2-0x6c],bl
   1400083af:	add    BYTE PTR [rax+0x41],cl
   1400083b2:	scas   eax,DWORD PTR es:[rdi]
   1400083b3:	add    BYTE PTR [rcx+0x49],cl
   1400083b6:	mov    ecx,0xba535300
   1400083bb:	add    BYTE PTR [rax+0x5b],ch
   1400083be:	movabs ds:0xaa606d00a55d6900,al
   1400083c7:	add    BYTE PTR [rdx+0x66],dh
   1400083ca:	mov    al,0x0
   1400083cc:	rex.RXB
   1400083cd:	rex.RX rol DWORD PTR [rax],0x48
   1400083d1:	rex.RXB rol DWORD PTR [r8],0x50
   1400083d5:	(bad)
   1400083d9:	push   rax
   1400083da:	ret    0x5700
   1400083dd:	push   rdi
   1400083de:	rol    DWORD PTR [rax],0x50
   1400083e1:	push   rax
   1400083e2:	mov    BYTE PTR [rax],0x58
   1400083e5:	pop    rax
   1400083e6:	mov    DWORD PTR [rax],0xcb5252
   1400083ec:	rex.WRX
   1400083ed:	rex.WRX fadd QWORD PTR [rax]
   1400083f0:	rex.RB
   1400083f1:	rex.RB in eax,0x0
   1400083f4:	fwait
   1400083f5:	jle    0x14000837a
   1400083f7:	add    BYTE PTR [rsi],bl
   1400083f9:	test   DWORD PTR [rax+rax*1+0xb79812],edx
   140008400:	and    bl,BYTE PTR [rbp-0x65dcff51]
   140008406:	mov    ch,0x0
   140008408:	(bad)  
   140008409:	sahf   
   14000840a:	mov    ch,0x0
   14000840c:	xor    bl,BYTE PTR [rsi-0x5cd2ff4b]
   140008412:	lods   eax,DWORD PTR ds:[rsi]
   140008413:	add    BYTE PTR [rbx],bh
   140008415:	movabs al,ds:0xa35700ae9e4400b3
   14000841e:	lods   eax,DWORD PTR ds:[rsi]
   14000841f:	add    BYTE PTR [rdx-0x5c],cl
   140008422:	mov    ch,0x0
   140008424:	(bad)  
   140008425:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008426:	mov    dl,0x0
   140008428:	ja     0x1400083d9
   14000842a:	mov    ah,0x0
   14000842c:	(bad)  
   14000842d:	test   eax,0xaa2000c4
   140008432:	(bad)  
   140008433:	add    BYTE PTR [rbx],ah
   140008435:	mov    ch,0xce
   140008437:	add    BYTE PTR [rbx],dh
   140008439:	mov    dh,0xc3
   14000843b:	add    BYTE PTR [rdi],ch
   14000843d:	retf   0xdf
   140008440:	and    eax,0x3a00e4c6
   140008445:	fucomp st(6)
   140008447:	add    BYTE PTR [rdx],ch
   140008449:	(bad)  
   14000844b:	add    BYTE PTR [rdx],bh
   14000844d:	fcomip st,st(1)
   14000844f:	add    BYTE PTR [rsi],ch
   140008451:	loope  0x140008450
   140008453:	add    BYTE PTR [rax+riz*8],bh
   140008456:	icebp  
   140008457:	add    BYTE PTR [rdx],bh
   140008459:	in     al,0xf8
   14000845b:	add    BYTE PTR [rdx-0x11],al
   14000845e:	inc    DWORD PTR [rax]
   140008460:	rex.RX
   140008461:	repnz inc BYTE PTR [rax]
   140008464:	popf   
   140008465:	(bad)  
   140008466:	mov    DWORD PTR [rax],eax
   140008468:	(bad)  
   140008469:	cwde   
   14000846a:	xchg   ebp,eax
   14000846b:	add    BYTE PTR [rbp+rcx*4-0x7a5fff7a],ah
   140008472:	mov    eax,DWORD PTR [rax]
   140008474:	mov    dl,0x8e
   140008476:	test   DWORD PTR [rax],eax
   140008478:	mov    bh,0x93
   14000847a:	(bad)  
   14000847b:	add    BYTE PTR [rsi-0x46ff7a6e],dh
   140008481:	xchg   edi,eax
   140008482:	add    DWORD PTR [rax],0x8298ba
   140008488:	mov    ebp,0xbe008298
   14000848d:	pushf  
   14000848e:	add    DWORD PTR [rax],0x849abe
   140008494:	mov    ecx,0xa6008896
   140008499:	mov    edx,DWORD PTR [rbx-0x67705600]
   14000849f:	add    BYTE PTR [rbp-0x56ff6c6b],ah
   1400084a5:	xchg   edx,eax
   1400084a6:	fwait
   1400084a7:	add    BYTE PTR [rsi-0x4cff606c],ch
   1400084ad:	pushf  
   1400084ae:	cwde   
   1400084af:	add    BYTE PTR [rbx-0x42ff625c],bh
   1400084b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400084b6:	lahf   
   1400084b7:	add    BYTE PTR [rsi-0x74ff6150],dh
   1400084bd:	mov    al,0xaf
   1400084bf:	add    BYTE PTR [rcx-0x61ff4649],dl
   1400084c5:	mov    ebx,0xa7ac00b9
   1400084ca:	test   eax,0xaca0b600
   1400084cf:	add    BYTE PTR [rbx-0x59ff544a],ch
   1400084d5:	mov    eax,0xb5b800b0
   1400084da:	mov    dl,0x0
   1400084dc:	rcr    BYTE PTR [rdx+rax*4-0x79614000],0x0
   1400084e4:	rcr    DWORD PTR [rsi-0x603dff76],0x8c
   1400084eb:	add    bl,al
   1400084ed:	movabs eax,ds:0xa2c50088a1c30087
   1400084f6:	mov    DWORD PTR [rax],eax
   1400084f8:	(bad)  
   1400084f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400084fa:	mov    eax,DWORD PTR [rax]
   1400084fc:	vpshufb ymm1,ymm14,ymm0
   140008501:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008502:	lea    eax,[rax]
   140008504:	leave  
   140008505:	test   al,0x8f
   140008507:	add    dh,al
   140008509:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000850a:	xchg   ecx,eax
   14000850b:	add    bl,cl
   14000850d:	stos   BYTE PTR es:[rdi],al
   14000850e:	xchg   ecx,eax
   14000850f:	add    ah,cl
   140008511:	stos   BYTE PTR es:[rdi],al
   140008512:	xchg   edx,eax
   140008513:	add    cl,cl
   140008515:	lods   al,BYTE PTR ds:[rsi]
   140008516:	xchg   edx,eax
   140008517:	add    al,cl
   140008519:	test   eax,0xa9cc0096
   14000851e:	xchg   ebp,eax
   14000851f:	add    dl,cl
   140008521:	scas   al,BYTE PTR es:[rdi]
   140008522:	xchg   esp,eax
   140008523:	add    ch,cl
   140008525:	lods   al,BYTE PTR ds:[rsi]
   140008526:	xchg   ebp,eax
   140008527:	add    cl,al
   140008529:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000852a:	pushf  
   14000852b:	add    dh,al
   14000852d:	test   al,0x9a
   14000852f:	add    bl,cl
   140008531:	lods   eax,DWORD PTR ds:[rsi]
   140008532:	(bad)  
   140008533:	add    bh,cl
   140008535:	lods   eax,DWORD PTR ds:[rsi]
   140008536:	fwait
   140008537:	add    al,cl
   140008539:	stos   DWORD PTR es:[rdi],eax
   14000853a:	popf   
   14000853b:	add    ch,cl
   14000853d:	mov    cl,0x97
   14000853f:	add    ch,cl
   140008541:	mov    cl,0x99
   140008543:	add    dh,cl
   140008545:	mov    ah,0x9b
   140008547:	add    ch,cl
   140008549:	mov    al,0x9e
   14000854b:	add    bh,cl
   14000854d:	mov    ah,0x9c
   14000854f:	add    al,dl
   140008551:	mov    cl,0x99
   140008553:	add    cl,dl
   140008555:	mov    ah,0x9d
   140008557:	add    ch,dl
   140008559:	mov    dh,0x9e
   14000855b:	add    bh,cl
   14000855d:	mov    bl,0xa1
   14000855f:	add    dh,al
   140008561:	mov    cl,0xab
   140008563:	add    cl,cl
   140008565:	mov    al,0xa9
   140008567:	add    dl,dl
   140008569:	mov    dh,0xa0
   14000856b:	add    dh,dl
   14000856d:	mov    ch,0xa0
   14000856f:	add    cl,dl
   140008571:	mov    ch,0xa4
   140008573:	add    dl,dl
   140008575:	mov    ecx,0xb8d300a1
   14000857a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000857b:	add    ah,dl
   14000857d:	mov    ecx,0xb8d900a4
   140008582:	movabs ds:0xabbbd500a6bcdc00,al
   14000858b:	add    al,bl
   14000858d:	mov    ebp,0xbede00aa
   140008592:	test   eax,0xbdbec100
   140008597:	add    dh,dl
   140008599:	mov    edi,0xbfd100b1
   14000859e:	mov    ebx,0xabc0d800
   1400085a3:	add    dl,bl
   1400085a5:	shr    DWORD PTR [rbp-0x513b2600],0x0
   1400085ac:	mov    cl,0xb4
   1400085af:	add    bl,al
   1400085b1:	sar    DWORD PTR [rdi-0x4e3f2800],0x0
   1400085b8:	fadd   st(3),st
   1400085ba:	mov    al,0x0
   1400085bc:	fcmovb st,st(4)
   1400085be:	mov    al,0x0
   1400085c0:	fadd   st(4),st
   1400085c2:	mov    cl,0x0
   1400085c4:	fmulp  st(1),st
   1400085c6:	mov    dh,0x0
   1400085c8:	(bad)  
   1400085c9:	ret    
   1400085ca:	mov    esi,0xaec3e300
   1400085cf:	add    ch,ah
   1400085d1:	(bad)
   1400085d4:	out    0xc8,eax
   1400085d6:	mov    bl,0x0
   1400085d8:	loope  0x1400085a3
   1400085da:	mov    dh,0x0
   1400085dc:	(bad)  
   1400085dd:	retf   0xb6
   1400085e0:	loopne 0x1400085ac
   1400085e2:	mov    eax,0xbdcee200
   1400085e7:	add    dl,ch
   1400085e9:	int    0xb9
   1400085eb:	add    bl,ch
   1400085ed:	iret   
   1400085ee:	mov    ebp,0xc1c3c500
   1400085f3:	add    ch,al
   1400085f5:	mov    dh,0x0
   1400085f8:	enter  0xc4c6,0x0
   1400085fc:	retf   
   1400085fd:	leave  
   1400085fe:	mov    DWORD PTR [rax],0xcbc9c7
   140008604:	leave  
   140008605:	retf   0xc9
   140008608:	(bad)  
   140008609:	int3   
   14000860a:	retf   0xcf00
   14000860d:	int    0xcf
   14000860f:	add    ch,dl
   140008611:	retf   
   140008612:	mov    DWORD PTR [rax],0xcfcfd4
   140008618:	rcl    al,cl
   14000861a:	(bad)  
   14000861b:	add    ch,dl
   14000861d:	rcl    ecx,cl
   14000861f:	add    cl,bl
   140008621:	rcl    eax,cl
   140008623:	add    cl,bl
   140008625:	xlat   BYTE PTR ds:[rbx]
   140008626:	(bad)  
   140008627:	add    ch,bl
   140008629:	fcmovu st,st(1)
   14000862b:	add    ch,ah
   14000862d:	rol    edx,cl
   14000862f:	add    dl,ch
   140008631:	rol    ebx,cl
   140008633:	add    ah,ch
   140008635:	rol    cl,cl
   140008637:	add    al,ch
   140008639:	xlat   BYTE PTR ds:[rbx]
   14000863a:	mov    DWORD PTR [rax],0xc4d4ed
   140008640:	jmp    0x12e014f1a
   140008645:	xlat   BYTE PTR ds:[rbx]
   140008646:	leave  
   140008647:	add    dl,ch
   140008649:	fxch   st(1)
   14000864b:	add    dh,ch
   14000864d:	fxch   st(3)
   14000864f:	add    bh,ch
   140008651:	fcmovne st,st(6)
   140008653:	add    bl,ch
   140008655:	fmul   st(4),st
   140008657:	add    ah,ch
   140008659:	(bad)  
   14000865b:	add    dh,ch
   14000865d:	fst    st(0)
   14000865f:	add    dh,ah
   140008661:	fstp   st(3)
   140008663:	add    dl,ah
   140008665:	(bad)  
   140008667:	add    al,dh
   140008669:	(bad)  
   14000866b:	add    dh,ch
   14000866d:	loope  0x140008642
   14000866f:	add    bl,ch
   140008671:	loope  0x140008652
   140008673:	add    ch,ah
   140008675:	jrcxz  0x140008658
   140008677:	add    dl,ch
   140008679:	in     al,0xe2
   14000867b:	add    dl,ah
   14000867d:	loop   0x14000866b
   14000867f:	add    ch,ch
   140008681:	jmp    0x14000866c
   140008683:	add    dl,dh
   140008685:	lock out dx,al
   140008687:	add    bl,ch
   140008689:	jmp    0x14000867e
   14000868b:	add    ah,ch
   14000868d:	in     al,dx
   14000868e:	stc    
   14000868f:	add    dh,dh
   140008691:	hlt    
   140008692:	repnz add cl,bh
   140008695:	div    ebp
   140008697:	add    cl,bh
   140008699:	cli    
   14000869a:	cli    
   14000869b:	add    bh,bh
   14000869d:	(bad)  
   14000869e:	inc    DWORD PTR [rax]
	...
   1400086d0:	add    BYTE PTR [rdi+rax*1+0x8921c06],al
	...
   1400086eb:	add    BYTE PTR [rax+riz*1-0x60daf3f9],al
   1400086f2:	mov    esp,0x8cfcbcf
   1400086f7:	mov    ebp,0x8
	...
   140008708:	test   BYTE PTR [rax],ah
   14000870a:	(bad)  
   14000870b:	adc    dl,BYTE PTR [rdx-0x4332334d]
   140008711:	mov    eax,0xcf999fac
   140008716:	or     BYTE PTR [rbp+0x8],bh
	...
   140008724:	add    BYTE PTR [rax],al
   140008726:	or     al,0x76
   140008728:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008729:	or     edi,ecx
   14000872b:	retf   
   14000872c:	mov    eax,0x99999fac
   140008731:	xchg   ebx,eax
   140008732:	(bad)
   140008736:	or     BYTE PTR [rbp+0x8],bh
	...
   140008744:	add    BYTE PTR [rdx+0x5],dh
   140008747:	add    al,0x27
   140008749:	or     DWORD PTR [rdi+0x2a8f9499],ebx
   14000874f:	(bad)  
   140008750:	(bad)  
   140008751:	(bad)  
   140008752:	sub    cl,BYTE PTR [rdi-0x42f7306c]
   140008758:	or     BYTE PTR [rax],al
	...
   140008762:	add    BYTE PTR [rax],al
   140008764:	jb     0x14000873e
   140008766:	or     BYTE PTR [rdi],ah
   140008768:	(bad)  
   140008769:	or     DWORD PTR [rdx],ebp
   14000876b:	(bad)  
   14000876c:	push   rbp
   14000876d:	rex.B
   14000876e:	cs sub al,0x41
   140008771:	jle    0x140008712
   140008773:	lahf   
   140008774:	lahf   
   140008775:	iret   
   140008776:	or     BYTE PTR [rbp+0x8],bh
	...
   140008784:	mov    es,WORD PTR [rax]
   140008786:	or     BYTE PTR [rdi],ah
   140008788:	(bad)  
   140008789:	or     DWORD PTR [rcx+0x39343f7f],ebx
   14000878f:	cmp    DWORD PTR [rax],esi
   140008791:	sub    eax,0xcf8f8f71
   140008796:	or     BYTE PTR [rbp+0x8],bh
	...
   1400087a4:	add    BYTE PTR [rdx+0x5],dh
   1400087a7:	add    al,0x27
   1400087a9:	or     DWORD PTR [rdi+0x46ff3647],ebx
   1400087af:	rex.RB cli 
   1400087b1:	(bad)  
   1400087b2:	rex (bad) 
   1400087b4:	xchg   esp,eax
   1400087b5:	iret   
   1400087b6:	or     BYTE PTR [rbp+0x8],bh
	...
   1400087c4:	jb     0x14000879e
   1400087c6:	or     ch,al
   1400087c8:	(bad)
   1400087cc:	ds push rbx
   1400087ce:	push   rdi
   1400087d0:	cmp    QWORD PTR [r12+r13*4],r13
   1400087d4:	lods   al,BYTE PTR ds:[rsi]
   1400087d5:	ror    BYTE PTR [rax],cl
   1400087d7:	(bad)  
   1400087d8:	or     BYTE PTR [rax],al
	...
   1400087e2:	add    BYTE PTR [rax],al
   1400087e4:	mov    es,WORD PTR [rax]
   1400087e6:	or     BYTE PTR [rdi+0x3cac138f],cl
   1400087ec:	rex.WRB
   1400087ed:	rex.WRXB (bad) 
   1400087ef:	dec    DWORD PTR [rdi+0x3a]
   1400087f2:	sub    al,0x2a
   1400087f4:	sub    dl,dl
   1400087f6:	or     ah,dl
   1400087f8:	or     BYTE PTR [rax],al
	...
   140008802:	add    BYTE PTR [rax],al
   140008804:	add    BYTE PTR [rdx+0x5],dh
   140008807:	add    al,0x8f
   140008809:	adc    esi,DWORD PTR [rdi+0x52ff4b49]
   14000880f:	push   rsp
   140008810:	sti    
   140008811:	ss rex.B cdq 
   140008814:	lods   al,BYTE PTR ds:[rsi]
   140008815:	ror    BYTE PTR [rax],cl
   140008817:	(bad)  
   140008818:	or     BYTE PTR [rax],al
	...
   140008822:	add    BYTE PTR [rax],al
   140008824:	jb     0x1400087fe
   140008826:	or     ch,al
   140008828:	xchg   edx,eax
   140008829:	adc    edx,DWORD PTR [rsp+rsi*2+0x4f514c44]
   140008830:	cmp    esi,DWORD PTR [rcx]
   140008832:	(bad)  
   140008833:	lods   al,BYTE PTR ds:[rsi]
   140008834:	lods   al,BYTE PTR ds:[rsi]
   140008835:	ror    BYTE PTR [rax],cl
   140008837:	xlat   BYTE PTR ds:[rbx]
   140008838:	or     BYTE PTR [rax],al
	...
   140008842:	add    BYTE PTR [rax],al
   140008844:	mov    es,WORD PTR [rax]
   140008846:	or     BYTE PTR [rdx-0x4343ea6c],dl
   14000884c:	mov    ecx,DWORD PTR [rdx+0x3c]
   14000884f:	xor    eax,DWORD PTR [rdi-0x7e]
   140008852:	lahf   
   140008853:	lahf   
   140008854:	lahf   
   140008855:	in     eax,0x8
   140008857:	fimul  DWORD PTR [rax]
	...
   140008865:	jb     0x14000886c
   140008867:	add    al,0x9a
   140008869:	adc    eax,0x9f9fa8b3
   14000886e:	lahf   
   14000886f:	lahf   
   140008870:	lahf   
   140008871:	test   al,0xac
   140008873:	mov    bl,0xb7
   140008875:	in     eax,0x8
   140008877:	fimul  WORD PTR [rax]
	...
   140008881:	add    BYTE PTR [rax],al
   140008883:	add    BYTE PTR [rdx-0x28],dh
   140008886:	sbb    ebp,eax
   140008888:	lahf   
   140008889:	sbb    BYTE PTR [rax-0x43485358],ch
   14000888f:	rol    ecx,0xc1
   140008892:	rol    ecx,0xc1
   140008895:	in     eax,0x8
   140008897:	fisttp WORD PTR [rax]
	...
   1400088a1:	add    BYTE PTR [rax],al
   1400088a3:	add    BYTE PTR [rsi-0x6060e700],cl
   1400088a9:	sbb    al,ch
   1400088ab:	vpunpcklbw ymm2,ymm7,YMMWORD PTR [rdi+0x57]
   1400088b0:	push   rdi
   1400088b1:	push   rdi
   1400088b2:	push   rdi
   1400088b3:	push   rdi
   1400088b4:	pop    rsi
   1400088b5:	in     eax,0x8
   1400088b7:	loope  0x1400088c1
	...
   1400088c5:	jb     0x1400088cc
   1400088c7:	add    al,0xa5
   1400088c9:	sbb    dh,BYTE PTR [rdi+0x6859a8a8]
   1400088cf:	push   0x56
   1400088d1:	add    BYTE PTR [rax+rbp*2+0x59],ch
   1400088d5:	jmp    0x140096ae2
	...
   1400088e2:	add    BYTE PTR [rax],al
   1400088e4:	jb     0x1400088ba
   1400088e6:	sbb    ebp,eax
   1400088e8:	test   al,0x1c
   1400088ea:	test   al,0xac
   1400088ec:	mov    bh,0x87
   1400088ee:	push   0x6c58676a
   1400088f3:	push   0xfffffffff108eb62
   1400088f8:	or     BYTE PTR [rax],al
	...
   140008902:	add    BYTE PTR [rax],al
   140008904:	mov    es,WORD PTR [rax]
   140008906:	sbb    DWORD PTR [rdi-0x2f32e051],ebp
   14000890c:	int    0xc3
   14000890e:	fs jo  0x14000896d
   140008911:	add    ebp,DWORD PTR [rdi+0x63]
   140008914:	xchg   bl,ch
   140008916:	or     ch,dh
   140008918:	or     BYTE PTR [rax],al
	...
   140008922:	add    BYTE PTR [rax],al
   140008924:	add    BYTE PTR [rdx+0x5],dh
   140008927:	add    al,0xb3
   140008929:	and    esi,DWORD PTR [rdi+0x5fa8a8ac]
   14000892f:	imul   ebx,DWORD PTR [rdx+rax*1+0x6e],0x61
   140008934:	shr    edi,0x8
   140008937:	test   BYTE PTR [rax],0x0
	...
   140008942:	add    BYTE PTR [rax],al
   140008944:	jb     0x14000891e
   140008946:	sbb    ebp,eax
   140008948:	mov    bh,0x25
   14000894a:	rol    ecx,0xc9
   14000894d:	ror    BYTE PTR [rax+0x655c6665],1
   140008953:	mov    eax,edx
   140008955:	out    dx,eax
   140008956:	or     al,bh
   140008958:	or     BYTE PTR [rax],al
	...
   140008962:	add    BYTE PTR [rax],al
   140008964:	mov    es,WORD PTR [rax]
   140008966:	sbb    DWORD PTR [rdx-0x2f2fd946],edi
   14000896c:	leave  
   14000896d:	rol    ecx,0x5d
   140008970:	imul   ebp,DWORD PTR [rbp+0x5e],0x8e9a8a8
   140008977:	clc    
   140008978:	or     BYTE PTR [rax],al
	...
   140008982:	add    BYTE PTR [rax],al
   140008984:	add    BYTE PTR [rdx+0x5],dh
   140008987:	add    al,0xba
   140008989:	(bad)  
   14000898a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000898b:	test   al,0xa8
   14000898d:	mov    bh,0xb7
   14000898f:	mov    WORD PTR [rbx+0x5a],ds
   140008992:	(bad)  
   140008993:	vpslld xmm1,xmm6,XMMWORD PTR [rax]
   140008997:	stc    
   140008998:	or     BYTE PTR [rax],al
	...
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	jb     0x14000897e
   1400089a6:	sbb    ebp,eax
   1400089a8:	mov    edx,0xe3e3d026
   1400089ad:	jrcxz  0x140008994
   1400089af:	jmp    0x14000899c
   1400089b1:	jmp    0x14000899e
   1400089b3:	jmp    0x1400089a0
   1400089b5:	repnz or ah,bh
   1400089b8:	or     BYTE PTR [rax],al
	...
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	mov    es,WORD PTR [rax]
   1400089c6:	sbb    ebp,eax
   1400089c8:	(bad)
   1400089cb:	jmp    0x1400089b8
   1400089cd:	jmp    0x1400089ba
   1400089cf:	jmp    0x1400089bc
   1400089d1:	jmp    0x1400089be
   1400089d3:	jmp    0x1400089c0
   1400089d5:	repnz or ah,bh
   1400089d8:	or     BYTE PTR [rax],al
	...
   1400089e2:	add    BYTE PTR [rax],al
   1400089e4:	add    BYTE PTR [rdx+0x5],dh
   1400089e7:	add    al,0xc5
   1400089e9:	js     0x1400089de
   1400089eb:	out    dx,eax
   1400089ec:	out    dx,eax
   1400089ed:	jmp    0x1400089da
   1400089ef:	jmp    0x1400089dc
   1400089f1:	jmp    0x1400089de
   1400089f3:	jmp    0x1400089e0
   1400089f5:	mov    edx,0x8fd1c
	...
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	jb     0x1400089de
   140008a06:	sbb    ebp,eax
   140008a08:	(bad)
   140008a0b:	mov    esi,0x767da3a5
   140008a10:	(bad)  
   140008a11:	(bad)  
   140008a12:	or     BYTE PTR [rsp+rbx*1],cl
   140008a15:	movabs ds:0x8e1f6,al
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	add    BYTE PTR [rax],al
   140008a22:	add    BYTE PTR [rax],al
   140008a24:	mov    es,WORD PTR [rax]
   140008a26:	or     eax,0x100b0813
   140008a2b:	or     BYTE PTR [rdx-0x70e2543],0xfc
   140008a32:	(bad)  
   140008a33:	push   rsi
   140008a35:	loop   0x140008a14
   140008a37:	retf   0x21
	...
   140008a42:	add    BYTE PTR [rax],al
   140008a44:	add    BYTE PTR [rdx+0xf],dh
   140008a47:	fdivr  st(1),st
   140008a49:	hlt    
   140008a4a:	retf   0xb0bf
   140008a4d:	add    DWORD PTR [rbx+0x8172222],0x8
   140008a54:	sbb    al,0x21
   140008a56:	jne    0x1400089fa
	...
   140008a64:	add    BYTE PTR [rax],al
   140008a66:	fidiv  DWORD PTR [rbx+0x11]
   140008a69:	(bad)  
   140008a6a:	movabs ds:0xb1a2,al
	...
   140008a9f:	add    bh,bh
   140008aa1:	(bad)  
   140008aa2:	(bad)  
   140008aa3:	(bad)  
   140008aa4:	(bad)  
   140008aa5:	inc    DWORD PTR [rcx+0xf0ffff]
   140008aab:	jg     0x140008aac
   140008aad:	add    BYTE PTR [rax],al
   140008aaf:	jg     0x140008aad
   140008ab1:	add    BYTE PTR [rax],al
   140008ab3:	jg     0x140008aad
   140008ab5:	add    BYTE PTR [rax],al
   140008ab7:	jg     0x140008aa9
   140008ab9:	add    BYTE PTR [rax],al
   140008abb:	jg     0x140008ab1
   140008abd:	add    BYTE PTR [rax],al
   140008abf:	jg     0x140008ab9
   140008ac1:	add    BYTE PTR [rax],al
   140008ac3:	jg     0x140008ab5
   140008ac5:	add    BYTE PTR [rax],al
   140008ac7:	jg     0x140008abd
   140008ac9:	add    BYTE PTR [rax],al
   140008acb:	jg     0x140008ac5
   140008acd:	add    BYTE PTR [rax],al
   140008acf:	jg     0x140008ac1
   140008ad1:	add    BYTE PTR [rax],al
   140008ad3:	jg     0x140008ac9
   140008ad5:	add    BYTE PTR [rax],al
   140008ad7:	jg     0x140008ad1
   140008ad9:	add    BYTE PTR [rax],al
   140008adb:	jg     0x140008acd
   140008add:	add    BYTE PTR [rax],al
   140008adf:	jg     0x140008ad5
   140008ae1:	add    BYTE PTR [rax],al
   140008ae3:	jg     0x140008add
   140008ae5:	add    BYTE PTR [rax],al
   140008ae7:	jg     0x140008ad9
   140008ae9:	add    BYTE PTR [rax],al
   140008aeb:	jg     0x140008ae1
   140008aed:	add    BYTE PTR [rax],al
   140008aef:	jg     0x140008ae9
   140008af1:	add    BYTE PTR [rax],al
   140008af3:	jg     0x140008ae5
   140008af5:	add    BYTE PTR [rax],al
   140008af7:	jg     0x140008aed
   140008af9:	add    BYTE PTR [rax],al
   140008afb:	jg     0x140008af5
   140008afd:	add    BYTE PTR [rax],al
   140008aff:	jg     0x140008af1
   140008b01:	add    BYTE PTR [rax],al
   140008b03:	jg     0x140008af9
   140008b05:	add    BYTE PTR [rax],al
   140008b07:	jg     0x140008b01
   140008b09:	add    BYTE PTR [rax],al
   140008b0b:	jg     0x140008afd
   140008b0d:	add    BYTE PTR [rax],al
   140008b0f:	jg     0x140008b05
   140008b11:	add    BYTE PTR [rax],al
   140008b13:	jg     0x140008b0d
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	(bad)  
   140008b18:	cld    
   140008b19:	(bad)  
   140008b1a:	(bad)  
   140008b1b:	(bad)  
   140008b1c:	(bad)  
   140008b1d:	(bad)  
   140008b1e:	(bad)  
   140008b1f:	jmp    FWORD PTR [rax]
   140008b21:	add    BYTE PTR [rax],al
   140008b23:	add    BYTE PTR [rax],bl
   140008b25:	add    BYTE PTR [rax],al
   140008b27:	add    BYTE PTR [rax],dh
   140008b29:	add    BYTE PTR [rax],al
   140008b2b:	add    BYTE PTR [rcx],al
   140008b2d:	add    BYTE PTR [rax],cl
   140008b2f:	add    BYTE PTR [rax],al
   140008b31:	add    BYTE PTR [rax],al
   140008b33:	add    BYTE PTR [rax+0x2],al
	...
   140008b3e:	add    BYTE PTR [rax],al
   140008b40:	add    BYTE PTR [rcx],al
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	add    BYTE PTR [rcx],al
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	add    BYTE PTR [rax],al
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	add    al,BYTE PTR [rsp+rax*1]
   140008b4f:	add    BYTE PTR [rdi],al
   140008b51:	adc    al,0x14
   140008b53:	add    BYTE PTR [rbx],cl
   140008b55:	and    BYTE PTR [rax],ah
   140008b57:	add    BYTE PTR [rax+0x58],bh
   140008b5a:	jne    0x140008b5c
   140008b5c:	push   0x6a
   140008b5e:	data16 add BYTE PTR [rbp-0x6bffa499],dl
   140008b65:	push   0x6a93005a
   140008b6a:	pop    rbp
   140008b6b:	add    BYTE PTR [rax-0x64ffa397],bl
   140008b71:	outs   dx,BYTE PTR ds:[rsi]
   140008b72:	pop    rsp
   140008b73:	add    BYTE PTR [rdi+rbp*2+0x7399005f],bl
   140008b7a:	data16 add BYTE PTR [rbp-0x66ff9a8e],bl
   140008b81:	je     0x140008bec
   140008b83:	add    BYTE PTR [rbx-0x63ff9088],bl
   140008b89:	js     0x140008bf8
   140008b8b:	add    BYTE PTR [rsi+rdi*2+0x78a50077],bl
   140008b92:	add    BYTE PTR gs:[rdi-0x5eff9783],ah
   140008b99:	jl     0x140008c0e
   140008b9b:	add    BYTE PTR [rdi+rdi*2+0x7fa10071],ah
   140008ba2:	je     0x140008ba4
   140008ba4:	stos   BYTE PTR es:[rdi],al
   140008ba5:	sub    DWORD PTR [rbp+0x0],0x6f84ad
   140008bac:	movabs al,ds:0xaf007583a6007781
   140008bb5:	mov    DWORD PTR [rbx+0x0],esi
   140008bb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008bb9:	(bad)  
   140008bba:	jns    0x140008bbc
   140008bbc:	lods   al,BYTE PTR ds:[rsi]
   140008bbd:	mov    BYTE PTR [rcx+0x0],bh
   140008bc0:	scas   eax,DWORD PTR es:[rdi]
   140008bc1:	mov    WORD PTR [rax+0x0],?
   140008bc4:	test   al,0x89
   140008bc6:	jg     0x140008bc8
   140008bc8:	mov    dl,0x8c
   140008bca:	ja     0x140008bcc
   140008bcc:	mov    ah,0x90
   140008bce:	jnp    0x140008bd0
   140008bd0:	mov    bl,0x93
   140008bd2:	jle    0x140008bd4
   140008bd4:	mov    bh,0x94
   140008bd6:	jge    0x140008bd8
   140008bd8:	mov    ecx,0xba007b92
   140008bdd:	xchg   esp,eax
   140008bde:	jle    0x140008be0
   140008be0:	mov    ebp,0x21007f9b
   140008be5:	(bad)  
   140008be6:	popf   
   140008be7:	add    BYTE PTR [rsi],ah
   140008be9:	and    bl,BYTE PTR [rdx-0x6bd4cd00]
   140008bef:	add    BYTE PTR [rbx],dl
   140008bf1:	adc    esp,DWORD PTR [rdx-0x48e2e300]
   140008bf7:	add    BYTE PTR [rsi],bl
   140008bf9:	(bad)  
   140008bfa:	mov    ecx,0xa1222500
   140008bff:	add    BYTE PTR [rsi],ch
   140008c01:	sub    eax,0x2e3300aa
   140008c06:	lods   al,BYTE PTR ds:[rsi]
   140008c07:	add    BYTE PTR [rax],bh
   140008c09:	xor    ebp,DWORD PTR [rdx-0x50c8c600]
   140008c0f:	add    BYTE PTR [rdi],dh
   140008c11:	xor    eax,0x364500b7
   140008c16:	xchg   ebp,eax
   140008c17:	add    BYTE PTR [rax+0x3f],cl
   140008c1a:	sahf   
   140008c1b:	add    BYTE PTR [rbx+0x38],al
   140008c1e:	movabs eax,ds:0x80557200b13f4500
   140008c27:	add    BYTE PTR [rsi+0x5f],ch
   140008c2a:	sahf   
   140008c2b:	add    BYTE PTR [rdi+0x62],dh
   140008c2e:	xchg   BYTE PTR [rax],al
   140008c30:	jp     0x140008c9b
   140008c32:	cdq    
   140008c33:	add    BYTE PTR [rcx+0x51],dl
   140008c36:	mov    esp,0xa4657100
   140008c3b:	add    BYTE PTR [rbx+rsi*1],dh
   140008c3e:	rol    BYTE PTR [rax],0x3c
   140008c41:	cmp    eax,ecx
   140008c43:	add    BYTE PTR [rdx],bh
   140008c45:	cmp    al,bh
   140008c47:	add    BYTE PTR [rbp+rcx*2-0x3f],cl
   140008c4b:	add    BYTE PTR [rcx+0x50],dl
   140008c4e:	ret    
   140008c4f:	add    BYTE PTR [rdx+0x52],dl
   140008c52:	mov    DWORD PTR [rax],0xc36a6a
   140008c58:	fs fs leave 
   140008c5b:	add    BYTE PTR [rdi+0x66],ah
   140008c5e:	int3   
   140008c5f:	add    BYTE PTR [rdx+0x69],ch
   140008c62:	int    0x0
   140008c64:	outs   dx,DWORD PTR ds:[rsi]
   140008c65:	outs   dx,DWORD PTR ds:[rsi]
   140008c66:	(bad)  
   140008c67:	add    BYTE PTR [rdx+0x72],dh
   140008c6a:	fild   WORD PTR [rax]
   140008c6c:	xchg   DWORD PTR [rax-0x56],edi
   140008c6f:	add    BYTE PTR [rsi],bl
   140008c71:	test   DWORD PTR [rax+rax*1+0xb79812],edx
   140008c78:	and    bl,BYTE PTR [rbp-0x64dbff51]
   140008c7e:	mov    ah,0x0
   140008c80:	and    eax,0x2d00b99e
   140008c85:	movabs ds:0xa23200ada42f00ad,al
   140008c8e:	mov    edx,0xbba43600
   140008c93:	add    BYTE PTR [rsi-0x5c],bl
   140008c96:	lods   eax,DWORD PTR ds:[rsi]
   140008c97:	add    BYTE PTR [rbx-0x5a],cl
   140008c9a:	mov    bh,0x0
   140008c9c:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008c9e:	mov    esp,0xbba94f00
   140008ca3:	add    BYTE PTR [rdx+rbp*4-0x43],cl
   140008ca7:	add    BYTE PTR [rcx-0x5b],bl
   140008caa:	mov    cl,0x0
   140008cac:	(bad)  
   140008cad:	test   eax,0xaa2100c4
   140008cb2:	(bad)  
   140008cb3:	add    BYTE PTR [rbx],ah
   140008cb5:	mov    ch,0xce
   140008cb7:	add    BYTE PTR [rsi*4-0x49ccff32],ah
   140008cbe:	ret    
   140008cbf:	add    BYTE PTR [rdi],ch
   140008cc1:	retf   0xdf
   140008cc4:	and    eax,0x3a00e4c6
   140008cc9:	fucomp st(6)
   140008ccb:	add    BYTE PTR [rdx],ch
   140008ccd:	(bad)  
   140008ccf:	add    BYTE PTR [rdx],bh
   140008cd1:	fcomip st,st(1)
   140008cd3:	add    BYTE PTR [rsi],ch
   140008cd5:	loope  0x140008cd4
   140008cd7:	add    BYTE PTR [rax+riz*8],bh
   140008cda:	icebp  
   140008cdb:	add    BYTE PTR [rdx],bh
   140008cdd:	in     al,0xf8
   140008cdf:	add    BYTE PTR [rdx-0x11],al
   140008ce2:	inc    DWORD PTR [rax]
   140008ce4:	rex.RX
   140008ce5:	repnz inc BYTE PTR [rax]
   140008ce8:	add    DWORD PTR [rcx-0x6765ff7f],0x89a80095
   140008cf2:	add    BYTE PTR [rax],0xaa
   140008cf5:	mov    es,WORD PTR [rbx-0x7a715300]
   140008cfb:	add    BYTE PTR [rsi-0x48ff766f],ch
   140008d01:	xchg   ebp,eax
   140008d02:	test   DWORD PTR [rax],eax
   140008d04:	mov    ecx,0xbc008196
   140008d09:	xchg   edi,eax
   140008d0a:	add    BYTE PTR [rax],0xb8
   140008d0d:	xchg   esp,eax
   140008d0e:	test   BYTE PTR [rax],al
   140008d10:	mov    edx,0xbf008298
   140008d15:	sahf   
   140008d16:	add    DWORD PTR [rax],0xffffffbf
   140008d19:	cdq    
   140008d1a:	test   BYTE PTR [rax],al
   140008d1c:	mov    ah,0x96
   140008d1e:	mov    BYTE PTR [rax],al
   140008d20:	mov    bl,0x96
   140008d22:	lea    eax,[rax]
   140008d24:	mov    edi,0xad008b9d
   140008d29:	fwait
   140008d2a:	cwde   
   140008d2b:	add    BYTE PTR [rbp-0x45ff625f],ch
   140008d31:	movabs al,ds:0xa5be009da3bb0094
   140008d3a:	sahf   
   140008d3b:	add    BYTE PTR [rdx-0x76ff5b79],bl
   140008d41:	scas   al,BYTE PTR es:[rdi]
   140008d42:	lods   eax,DWORD PTR ds:[rsi]
   140008d43:	add    BYTE PTR [rbx-0x4bff4f51],cl
   140008d49:	stos   BYTE PTR es:[rdi],al
   140008d4a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008d4b:	add    BYTE PTR [rdi-0x40ff5d57],bh
   140008d51:	stos   BYTE PTR es:[rdi],al
   140008d52:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008d53:	add    BYTE PTR [rsi-0x3eff4148],ch
   140008d59:	sahf   
   140008d5a:	mov    BYTE PTR [rax],al
   140008d5c:	(bad)  
   140008d5d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008d5e:	mov    DWORD PTR [rax],eax
   140008d60:	ret    
   140008d61:	movabs ds:0xaaca0091a5c6008d,al
   140008d6a:	xchg   ecx,eax
   140008d6b:	add    cl,cl
   140008d6d:	test   eax,0xafcb0096
   140008d72:	xchg   esi,eax
   140008d73:	add    ch,cl
   140008d75:	scas   al,BYTE PTR es:[rdi]
   140008d76:	(bad)  
   140008d77:	add    ah,cl
   140008d79:	mov    al,0x96
   140008d7b:	add    dh,cl
   140008d7d:	mov    dl,0x99
   140008d7f:	add    dh,cl
   140008d81:	mov    ah,0x9b
   140008d83:	add    dh,cl
   140008d85:	mov    dl,0x9d
   140008d87:	add    bh,cl
   140008d89:	mov    ah,0x9c
   140008d8b:	add    al,dl
   140008d8d:	mov    al,0x98
   140008d8f:	add    dl,dl
   140008d91:	mov    dl,0x9f
   140008d93:	add    cl,dl
   140008d95:	mov    ch,0x9d
   140008d97:	add    ch,dl
   140008d99:	mov    ah,0x9e
   140008d9b:	add    cl,al
   140008d9d:	stos   BYTE PTR es:[rdi],al
   140008d9e:	movabs ds:0xa0b6d200a0aec800,eax
   140008da7:	add    cl,dl
   140008da9:	mov    dh,0xa4
   140008dab:	add    dl,dl
   140008dad:	mov    eax,0xbdd500a1
   140008db2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008db3:	add    dl,bl
   140008db5:	mov    edx,0xb9d300a5
   140008dba:	test   al,0x0
   140008dbc:	xlat   BYTE PTR ds:[rbx]
   140008dbd:	mov    esi,0xbed600a9
   140008dc2:	lods   eax,DWORD PTR ds:[rsi]
   140008dc3:	add    bl,bl
   140008dc5:	mov    esi,0xbedd00a8
   140008dca:	stos   BYTE PTR es:[rdi],al
   140008dcb:	add    bl,cl
   140008dcd:	mov    eax,0xb9c900b2
   140008dd2:	mov    ah,0x0
   140008dd4:	sar    DWORD PTR [rdi-0x3f20ff43],0xaa
   140008ddb:	add    dl,bl
   140008ddd:	shr    DWORD PTR [rbp-0x403e3d00],0x0
   140008de4:	leave  
   140008de5:	(bad)  
   140008de6:	mov    eax,0xb3c1d400
   140008deb:	add    cl,bl
   140008ded:	shl    DWORD PTR [rcx-0x4e3a2400],0x0
   140008df4:	faddp  st(6),st
   140008df6:	mov    ah,0x0
   140008df8:	loopne 0x140008dba
   140008dfa:	stos   BYTE PTR es:[rdi],al
   140008dfb:	add    ah,ah
   140008dfd:	(bad)  
   140008dfe:	mov    cl,0x0
   140008e00:	loopne 0x140008dc8
   140008e02:	mov    ah,0x0
   140008e04:	loope  0x140008dd0
   140008e06:	mov    dh,0x0
   140008e08:	jmp    0x1230144d7
   140008e0d:	(bad)  
   140008e0e:	mov    esi,0xb9ccea00
   140008e13:	add    bl,ch
   140008e15:	iret   
   140008e16:	mov    esp,0xbed1eb00
   140008e1b:	add    BYTE PTR [rax-0x7fff2570],dl
   140008e21:	mov    edx,0xa3a300c3
   140008e26:	(bad)  
   140008e27:	add    BYTE PTR [rbx-0x70ff234c],dh
   140008e2d:	(bad)  
   140008e2e:	out    0x0,eax
   140008e30:	mov    esi,0xb900e7bf
   140008e35:	mov    ecx,0xc5a400f5
   140008e3a:	(bad)  
   140008e3b:	add    BYTE PTR [rbx+rcx*8-0x2f41ff38],dh
   140008e42:	retf   
   140008e43:	add    dh,al
   140008e45:	(bad)
   140008e49:	mov    ebp,0xc9cbce00
   140008e4f:	add    bl,dl
   140008e51:	mov    esp,0xcecfd100
   140008e57:	add    dl,bl
   140008e59:	int    0xc9
   140008e5b:	add    dl,dl
   140008e5d:	(bad)  
   140008e5e:	int3   
   140008e5f:	add    dh,dl
   140008e61:	(bad)  
   140008e62:	rol    BYTE PTR [rax],cl
   140008e64:	(bad)  
   140008e66:	rol    DWORD PTR [rax],1
   140008e68:	fcmovnu st,st(1)
   140008e6a:	(bad)  
   140008e6b:	add    bh,bl
   140008e6d:	(bad)  
   140008e6f:	add    ah,ch
   140008e71:	rol    cl,cl
   140008e73:	add    ah,ch
   140008e75:	(bad)  
   140008e76:	(bad)  
   140008e77:	add    bh,ah
   140008e79:	fmul   st,st(1)
   140008e7b:	add    bl,ch
   140008e7d:	fcmovne st,st(4)
   140008e7f:	add    ah,ch
   140008e81:	(bad)  
   140008e83:	add    dh,ch
   140008e85:	fst    st(0)
   140008e87:	add    al,dh
   140008e89:	(bad)  
   140008e8b:	add    al,dh
   140008e8d:	(bad)  
   140008e8f:	add    dh,ch
   140008e91:	loopne 0x140008e64
   140008e93:	add    bh,ah
   140008e95:	loopne 0x140008e76
   140008e97:	add    cl,dh
   140008e99:	in     al,0xd6
   140008e9b:	add    bl,dl
   140008e9d:	shl    ebp,cl
   140008e9f:	add    ah,ah
   140008ea1:	loop   0x140008e83
   140008ea3:	add    cl,ch
   140008ea5:	out    0xe5,al
   140008ea7:	add    ah,ch
   140008ea9:	jmp    0x140008e93
   140008eab:	add    cl,dh
   140008ead:	out    dx,al
   140008eae:	in     al,dx
   140008eaf:	add    ah,dh
   140008eb1:	icebp  
   140008eb2:	lock add bh,dh
   140008eb5:	cmc    
   140008eb6:	repz add cl,bh
   140008eb9:	clc    
   140008eba:	test   BYTE PTR [rax],0x0
	...
   140008f41:	add    BYTE PTR [rax],al
   140008f43:	add    bh,bh
   140008f45:	(bad)  
   140008f46:	inc    DWORD PTR [rax]
	...
   140008f54:	add    BYTE PTR [rbp+0x61d1010],dl
	...
   140008f66:	add    BYTE PTR [rax],al
   140008f68:	add    BYTE PTR [rbx+0x1c],bh
   140008f6b:	or     al,0xe
   140008f6d:	adc    eax,0x99b9277
   140008f72:	jns    0x140008f74
	...
   140008f7c:	add    BYTE PTR [rbx+0x1d],bh
   140008f7f:	(bad)  
   140008f80:	(bad)  
   140008f81:	outs   dx,BYTE PTR ds:[rsi]
   140008f82:	mov    esp,DWORD PTR [rax-0x64524f53]
   140008f88:	mov    al,0x9
   140008f8a:	movabs ds:0x9,eax
   140008f93:	add    BYTE PTR [rbx-0x5ff6e8f9],al
   140008f99:	lods   eax,DWORD PTR ds:[rsi]
   140008f9a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008f9b:	fwait
   140008f9c:	xchg   edx,eax
   140008f9d:	xchg   edx,eax
   140008f9e:	mov    BYTE PTR [rbp+0x9a309ac],al
	...
   140008fac:	push   0x7d092405
   140008fb1:	xor    al,0x27
   140008fb3:	sub    DWORD PTR [rcx],edi
   140008fb5:	and    ah,BYTE PTR [rsi]
   140008fb7:	jae    0x140008f69
   140008fb9:	or     DWORD PTR [rbx+0x9],esp
   140008fbf:	add    BYTE PTR [rax],al
   140008fc1:	add    BYTE PTR [rax],al
   140008fc3:	imul   eax,DWORD PTR [rax],0x31042409
   140008fc9:	sub    al,0x3e
   140008fcc:	cmp    dl,BYTE PTR cs:[rdi-0x5cf64f6e]
   140008fd3:	or     DWORD PTR [rax],eax
   140008fd5:	add    BYTE PTR [rax],al
   140008fd7:	add    BYTE PTR [rax],al
   140008fd9:	add    BYTE PTR [rax],al
   140008fdb:	add    BYTE PTR [rax+0x5],ch
   140008fde:	and    al,0x33
   140008fe0:	rex.X (bad) 
   140008fe2:	rex.XB mov r8d,0x8c902846
   140008fe8:	mov    dl,0x9
   140008fea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008feb:	or     DWORD PTR [rax],eax
   140008fed:	add    BYTE PTR [rax],al
   140008fef:	add    BYTE PTR [rax],al
   140008ff1:	add    BYTE PTR [rax],al
   140008ff3:	imul   eax,DWORD PTR [rax],0x3d2f2409
   140008ff9:	rex.W push QWORD PTR [rdi-0x6f77d5d5]
   140009000:	mov    dl,0x9
   140009002:	mov    edi,0x9
   140009007:	add    BYTE PTR [rax],al
   140009009:	add    BYTE PTR [rax],al
   14000900b:	add    BYTE PTR [rax+0x5],ch
   14000900e:	jo     0x140009045
   140009010:	rex.RB mov r10d,0x2d45bbb9
   140009016:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009018:	mov    dl,0x9
   14000901a:	ror    BYTE PTR [rcx],0x0
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rax],al
   140009021:	add    BYTE PTR [rax],al
   140009023:	imul   eax,DWORD PTR [rax],0x42377309
   140009029:	mov    ch,0x3e
   14000902b:	cmp    r15d,DWORD PTR [r15+r10*4]
   14000902f:	nop
   140009030:	mov    ah,0x9
   140009032:	ror    DWORD PTR [rcx],0x0
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rax],al
   140009039:	add    BYTE PTR [rax],al
   14000903b:	add    BYTE PTR [rax+0x5],ch
   14000903e:	test   BYTE PTR [rcx+rcx*2],cl
   140009041:	xor    dh,BYTE PTR ss:[rcx]
   140009044:	cmp    BYTE PTR [rdx-0x74],bh
   140009047:	nop
   140009048:	retf   0xc309
   14000904b:	or     DWORD PTR [rax],eax
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rax],al
   140009051:	add    BYTE PTR [rax],al
   140009053:	imul   eax,DWORD PTR [rax],0x90128515
   140009059:	xchg   edx,eax
   14000905a:	cdq    
   14000905b:	popf   
   14000905c:	stos   BYTE PTR es:[rdi],al
   14000905d:	stos   BYTE PTR es:[rdi],al
   14000905e:	stos   BYTE PTR es:[rdi],al
   14000905f:	lods   eax,DWORD PTR ds:[rsi]
   140009060:	retf   0xc609
   140009063:	or     DWORD PTR [rax],eax
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rax],al
   140009069:	add    BYTE PTR [rax],al
   14000906b:	add    BYTE PTR [rax+0x5],ch
   14000906e:	xchg   DWORD PTR [rbx],edx
   140009070:	scas   eax,DWORD PTR es:[rdi]
   140009071:	push   rsp
   140009072:	rex.WXB
   140009073:	rex.WXB
   140009074:	rex.WXB
   140009075:	rex.WXB
   140009076:	rex.WXB
   140009077:	rex.WXB push r14
   140009079:	or     eax,ecx
   14000907b:	or     DWORD PTR [rax],eax
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rax],al
   140009081:	add    BYTE PTR [rax],al
   140009083:	imul   eax,DWORD PTR [rax],0x97178815
   140009089:	rex.WRB pop r15
   14000908b:	(bad)  
   14000908c:	rex.WX add BYTE PTR [rbx+0x5f],spl
   140009090:	rex.WRX or rcx,r9
   140009093:	or     DWORD PTR [rax],eax
   140009095:	add    BYTE PTR [rax],al
   140009097:	add    BYTE PTR [rax],al
   140009099:	add    BYTE PTR [rax],al
   14000909b:	add    BYTE PTR [rax+0x5],ch
   14000909e:	mov    edx,DWORD PTR [rdi]
   1400090a0:	cdq    
   1400090a1:	jle    0x140009102
   1400090a3:	(bad)  
   1400090a4:	pop    rsi
   1400090a5:	movsxd r11,DWORD PTR [rdi-0x4a]
   1400090a9:	or     esi,edx
   1400090ab:	or     DWORD PTR [rax],eax
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    BYTE PTR [rax],al
   1400090b1:	add    BYTE PTR [rax],al
   1400090b3:	imul   eax,DWORD PTR [rax],0xb11b9015
   1400090b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400090ba:	pop    rdx
   1400090bb:	rex.WRXB add r12,QWORD PTR [r14d+0x59]
   1400090c0:	(bad)
   1400090c3:	or     DWORD PTR [rax],eax
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    BYTE PTR [rax],al
   1400090c9:	add    BYTE PTR [rax],al
   1400090cb:	add    BYTE PTR [rax+0x5],ch
   1400090ce:	xchg   edi,eax
   1400090cf:	and    BYTE PTR [rdx+0x4f6258a4],ch
   1400090d5:	add    ah,BYTE PTR [rbp+0x53]
   1400090d8:	iret   
   1400090d9:	or     eax,ebx
   1400090db:	or     DWORD PTR [rax],eax
   1400090dd:	add    BYTE PTR [rax],al
   1400090df:	add    BYTE PTR [rax],al
   1400090e1:	add    BYTE PTR [rax],al
   1400090e3:	imul   eax,DWORD PTR [rax],0x90229d15
   1400090e9:	cdq    
   1400090ea:	jg     0x140009148
   1400090ec:	pop    rbp
   1400090ed:	rex.WRXB pop r12
   1400090ef:	mov    esp,0x9d909d0
	...
   1400090fc:	push   0xffffffffd2229d05
   140009101:	iret   
   140009102:	iret   
   140009103:	push   rbp
   140009104:	(bad)  
   140009105:	fs push rsi
   140009107:	iret   
   140009108:	ror    BYTE PTR [rcx],1
   14000910a:	fimul  DWORD PTR [rcx]
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	add    BYTE PTR [rax],al
   140009112:	add    BYTE PTR [rcx+0x0],ch
   140009115:	adc    eax,0xcfd4709d
   14000911a:	iret   
   14000911b:	mov    esi,0xcfbd5252
   140009120:	iret   
   140009121:	or     edx,ebx
   140009123:	or     DWORD PTR [rax],eax
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    BYTE PTR [rax],al
   140009129:	add    BYTE PTR [rax],al
   14000912b:	add    BYTE PTR [rax+0x5],ch
   14000912e:	stos   BYTE PTR es:[rdi],al
   14000912f:	jae    0x140009103
   140009131:	iret   
   140009132:	iret   
   140009133:	iret   
   140009134:	int3   
   140009135:	test   al,0x96
   140009137:	jne    0x140009153
   140009139:	(bad)  
   14000913a:	fmul   QWORD PTR [rcx]
   14000913c:	add    BYTE PTR [rax],al
   14000913e:	add    BYTE PTR [rax],al
   140009140:	add    BYTE PTR [rax],al
   140009142:	add    BYTE PTR [rcx+0x0],ch
   140009145:	adc    eax,0x1a6b1d70
   14000914a:	imul   ebp,DWORD PTR [rbx+0x6d],0xffffff82
   14000914e:	movabs eax,ds:0x782c4c4c4
   140009157:	add    BYTE PTR [rax],al
   140009159:	add    BYTE PTR [rax],al
   14000915b:	add    BYTE PTR [rax+0x5],ch
   14000915e:	imul   edx,DWORD PTR [rax],0xffffffc7
   140009161:	rol    edx,cl
   140009163:	movabs eax,ds:0x6b1515101d757b
	...
   140009174:	add    BYTE PTR [rax+0xe151178],al
   14000917a:	sbb    al,0x6b
   14000917c:	jnp    0x14000917e
	...
   140009186:	add    BYTE PTR [rax],al
   140009188:	(bad)  
   140009189:	clc    
   14000918a:	(bad)  
   14000918b:	add    bh,bh
   14000918d:	sbb    BYTE PTR [rdi],0x0
   140009190:	clc    
   140009191:	add    BYTE PTR [rdi],cl
   140009193:	add    al,dh
   140009195:	add    BYTE PTR [rdi],cl
   140009197:	add    al,dh
   140009199:	add    BYTE PTR [rdi],cl
   14000919b:	add    al,ch
   14000919d:	add    BYTE PTR [rdi],cl
   14000919f:	add    al,dh
   1400091a1:	add    BYTE PTR [rdi],cl
   1400091a3:	add    al,ch
   1400091a5:	add    BYTE PTR [rdi],cl
   1400091a7:	add    al,dh
   1400091a9:	add    BYTE PTR [rdi],cl
   1400091ab:	add    al,ch
   1400091ad:	add    BYTE PTR [rdi],cl
   1400091af:	add    al,dh
   1400091b1:	add    BYTE PTR [rdi],cl
   1400091b3:	add    al,ch
   1400091b5:	add    BYTE PTR [rdi],cl
   1400091b7:	add    al,dh
   1400091b9:	add    BYTE PTR [rdi],cl
   1400091bb:	add    al,ch
   1400091bd:	add    BYTE PTR [rdi],cl
   1400091bf:	add    al,dh
   1400091c1:	add    BYTE PTR [rdi],cl
   1400091c3:	add    al,ch
   1400091c5:	add    BYTE PTR [rdi],cl
   1400091c7:	add    al,dh
   1400091c9:	add    BYTE PTR [rdi],cl
   1400091cb:	add    al,ch
   1400091cd:	add    BYTE PTR [rdi],cl
   1400091cf:	add    al,dh
   1400091d1:	add    BYTE PTR [rdi],cl
   1400091d3:	add    al,ch
   1400091d5:	add    BYTE PTR [rdi],cl
   1400091d7:	add    al,dh
   1400091d9:	add    BYTE PTR [rdi],cl
   1400091db:	add    al,ch
   1400091dd:	add    BYTE PTR [rdi],cl
   1400091df:	add    al,dh
   1400091e1:	add    BYTE PTR [rdi],bl
   1400091e3:	add    al,bh
   1400091e5:	(bad)  
   1400091e6:	inc    DWORD PTR [rax]
   1400091e8:	sub    BYTE PTR [rax],al
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	adc    BYTE PTR [rax],al
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	and    BYTE PTR [rax],al
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	add    DWORD PTR [rax],eax
   1400091f6:	or     BYTE PTR [rax],al
   1400091f8:	add    BYTE PTR [rax],al
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	add    BYTE PTR [rcx],al
	...
   140009206:	add    BYTE PTR [rax],al
   140009208:	add    BYTE PTR [rcx],al
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	add    BYTE PTR [rcx],al
   14000920e:	add    BYTE PTR [rax],al
   140009210:	add    BYTE PTR [rax],al
   140009212:	add    BYTE PTR [rax],al
   140009214:	sbb    BYTE PTR [rcx+0x4b],cl
   140009217:	add    BYTE PTR [rdx],dl
   140009219:	imul   eax,DWORD PTR gs:[rax],0x636366
   140009220:	jns    0x14000929b
   140009222:	jns    0x140009224
   140009224:	cdq    
   140009225:	push   0x5d
   140009227:	add    BYTE PTR [rbx-0x5dff8390],cl
   14000922d:	jl     0x1400092a2
   14000922f:	add    BYTE PTR [rsi-0x57ff927a],ch
   140009235:	(bad)  
   140009236:	jb     0x140009238
   140009238:	mov    cl,0x8a
   14000923a:	jno    0x14000923c
   14000923c:	mov    ch,0x8f
   14000923e:	jbe    0x140009240
   140009240:	mov    bh,0x92
   140009242:	jne    0x140009244
   140009244:	mov    eax,0xbb007a93
   140009249:	xchg   edi,eax
   14000924a:	jle    0x14000924c
   14000924c:	mov    esi,0x38007f9b
   140009251:	(bad)  
   140009252:	(bad)  
   140009253:	add    BYTE PTR [rax],bl
   140009255:	(bad)  
   140009256:	test   eax,0xa11e2100
   14000925b:	add    BYTE PTR [rip+0x4500af38],bh        # 0x185014199
   140009261:	cmp    al,0x9e
   140009263:	add    BYTE PTR [rsi+0x60],dh
   140009266:	fwait
   140009267:	add    BYTE PTR [rbp+0x41],al
   14000926a:	stos   BYTE PTR es:[rdi],al
   14000926b:	add    BYTE PTR [rbp+0x58],bl
   14000926e:	mov    eax,0xa8526400
   140009273:	add    BYTE PTR [rcx+0x64],bh
   140009276:	movabs eax,ds:0xc1757c00b3606600
   14000927f:	add    BYTE PTR [rdx+0x7a],bh
   140009282:	iret   
   140009283:	add    BYTE PTR [rbp+0x6d],ch
   140009286:	fld    DWORD PTR [rax]
   140009288:	ja     0x140009301
   14000928a:	(bad)  
   14000928b:	add    BYTE PTR [rsi+0x7f],bh
   14000928e:	(bad)  
   14000928f:	add    BYTE PTR [rcx+0x79],bh
   140009292:	fld    DWORD PTR [rax]
   140009294:	xchg   edi,eax
   140009295:	jp     0x140009217
   140009297:	add    BYTE PTR [rcx],ah
   140009299:	or     DWORD PTR [rax+rax*1+0xbea426],0xbd9b74
   1400092a4:	jl     0x140009242
   1400092a6:	mov    esi,0xb9ad5700
   1400092ab:	add    BYTE PTR [rax-0x56],dh
   1400092ae:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400092af:	add    BYTE PTR [rbx],ch
   1400092b1:	mov    edx,0xb63b00ce
   1400092b6:	int3   
   1400092b7:	add    BYTE PTR [rdx-0x4a],ah
   1400092ba:	(bad)  
   1400092bb:	add    BYTE PTR [rdi-0x47],ch
   1400092be:	rol    DWORD PTR [rax],0x68
   1400092c1:	mov    edx,0xbf7d00c6
   1400092c6:	mov    DWORD PTR [rax],0xd5c223
   1400092cc:	(bad)  
   1400092cd:	ret    
   1400092ce:	rol    BYTE PTR [rax],1
   1400092d0:	cmp    cl,al
   1400092d2:	(bad)  
   1400092d3:	add    BYTE PTR [rcx],bh
   1400092d5:	enter  0xd4,0x33
   1400092d9:	(bad)
   1400092dc:	(bad)  
   1400092dd:	int3   
   1400092de:	in     eax,0x0
   1400092e0:	(bad)  
   1400092e1:	(bad)  
   1400092e2:	in     al,dx
   1400092e3:	add    BYTE PTR [rdi],dh
   1400092e5:	fsubr  st,st(2)
   1400092e7:	add    BYTE PTR [rax],dh
   1400092e9:	xlat   BYTE PTR ds:[rbx]
   1400092ea:	lock add BYTE PTR [rcx-0x70ff7e7f],al
   1400092f1:	(bad)  
   1400092f2:	pop    QWORD PTR [rax]
   1400092f4:	(bad)  
   1400092f5:	cwde   
   1400092f6:	xchg   ebp,eax
   1400092f7:	add    BYTE PTR [rsi-0x48ff7d66],bh
   1400092fd:	fwait
   1400092fe:	nop
   1400092ff:	add    BYTE PTR [rsi-0x51ff7260],bh
   140009305:	scas   eax,DWORD PTR es:[rdi]
   140009306:	lahf   
   140009307:	add    cl,al
   140009309:	sahf   
   14000930a:	xchg   DWORD PTR [rax],eax
   14000930c:	(bad)
   140009310:	(bad)  
   140009311:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009312:	mov    WORD PTR [rax],es
   140009314:	enter  0x90a7,0x0
   140009318:	enter  0x92a8,0x0
   14000931c:	(bad)  
   14000931d:	mov    dl,0x99
   14000931f:	add    bh,cl
   140009321:	mov    ah,0x9b
   140009323:	add    BYTE PTR [rsi-0x7eff2b7a],al
   140009329:	sbb    ecx,0xc2a38300
   14000932f:	add    BYTE PTR [rcx-0x58ff3b42],cl
   140009335:	(bad)  
   140009336:	enter  0xbe00,0xce
   14000933a:	retf   0xc300
   14000933d:	(bad)  
   14000933e:	retf   0xd200
   140009341:	(bad)  
   140009342:	int3   
   140009343:	add    dl,ch
   140009345:	fmul   st(7),st
   140009347:	add    ah,ch
   140009349:	(bad)  
   14000934b:	add    bh,bl
   14000934d:	(bad)  
	...
   14000960b:	add    bh,bh
   14000960d:	(bad)  
   14000960e:	inc    DWORD PTR [rax]
   140009610:	add    BYTE PTR [rax],al
   140009612:	add    BYTE PTR [rip+0x5050505],al        # 0x145059b1d
   140009618:	add    eax,0x5050505
   14000961d:	add    eax,0x5
   140009622:	add    al,0x3
   140009624:	or     BYTE PTR [rsi+0x4e],cl
   140009627:	rex.WRX
   140009628:	rex.WRX
   140009629:	rex.WRX
   14000962a:	rex.WRX
   14000962b:	rex.WRX
   14000962c:	rex.WRX
   14000962d:	rex.WRX add rax,0x390000
   140009633:	add    eax,0x14210c0a
   140009638:	adc    DWORD PTR [rax],edx
   14000963a:	(bad)  
   14000963b:	or     al,0xc
   14000963d:	or     al,0x5
   14000963f:	add    BYTE PTR [rax],al
   140009641:	add    BYTE PTR [rdi],dh
   140009643:	add    ecx,DWORD PTR [rdx]
   140009645:	rex.WRX (bad) 
   140009647:	rex.RX
   140009648:	rex.RB sbb al,0x16
   14000964b:	rex.WRX
   14000964c:	rex.WRX
   14000964d:	rex.WRX add rax,0x390000
   140009653:	add    eax,0x20130f0a
   140009658:	rex.WRXB (bad) 
   14000965a:	adc    cl,BYTE PTR [rdi]
   14000965c:	(bad)          # 0x17700965d
   14000965d:	syscall 
   14000965f:	add    BYTE PTR [rax],al
   140009661:	add    BYTE PTR [rdi],dh
   140009663:	add    ecx,DWORD PTR [rip+0x1d451b4e]        # 0x15d45b1b7
   140009669:	(bad)  
   14000966a:	sbb    cl,BYTE PTR [rsi+0x4e]
   14000966d:	rex.WRX add rax,0x390000
   140009673:	add    eax,0x193b400d
   140009678:	sbb    BYTE PTR [rip+0x4040403c],dl        # 0x18040d6ba
   14000967e:	add    eax,0x4000000
   140009683:	add    edi,DWORD PTR [rdx]
   140009685:	rex.WRX
   140009686:	rex.WRX
   140009687:	rex.WXB
   140009688:	rex.RXB and eax,0x4e482b24
   14000968e:	add    eax,0x390000
   140009693:	(bad)  
   140009694:	ds rex.XB
   140009696:	rex.XB (bad) 
   140009698:	xor    ebp,DWORD PTR [rsi]
   14000969a:	add    dh,BYTE PTR [rbx+riz*1]
   14000969d:	rex.XB add eax,0x37000000
   1400096a3:	add    eax,DWORD PTR [rax+0x4e]
   1400096a6:	rex.WRX
   1400096a7:	rex.WR xor r14b,BYTE PTR [rip+0x4e2d3622]        # 0x18e2dccd0
   1400096ae:	add    eax,0x390000
   1400096b3:	(bad)  
   1400096b4:	rex
   1400096b5:	rex.XB
   1400096b6:	rex.XB
   1400096b7:	rex.XB
   1400096b8:	xor    DWORD PTR es:[rcx],eax
   1400096bb:	xor    BYTE PTR [rip+0x543],bh        # 0x140009c04
   1400096c1:	add    BYTE PTR [rdi],dh
   1400096c3:	add    eax,DWORD PTR [rcx+0x4e]
   1400096c6:	rex.WRX
   1400096c7:	rex.WRX
   1400096c8:	rex.WB sub BYTE PTR [r15],bpl
   1400096cb:	sub    cl,BYTE PTR [rsi+0x4e]
   1400096ce:	add    eax,0x390000
   1400096d3:	(bad)  
   1400096d4:	rex.X
   1400096d5:	rex.WRX
   1400096d6:	rex.WRX
   1400096d7:	rex.WRX
   1400096d8:	rex.WRX sub r13,QWORD PTR [rcx]
   1400096db:	rex.WX
   1400096dc:	rex.WRX
   1400096dd:	rex.WRX add rax,0x38000000
   1400096e3:	add    eax,DWORD PTR [rdx+0x4e]
   1400096e6:	rex.WRX
   1400096e7:	rex.WRX
   1400096e8:	rex.WRX
   1400096e9:	rex.WRX
   1400096ea:	rex.WRX
   1400096eb:	rex.WRX
   1400096ec:	rex.WRX
   1400096ed:	rex.WRX add rax,0x0
   1400096f3:	or     DWORD PTR [rcx],ecx
   1400096f5:	or     DWORD PTR [rcx],ecx
   1400096f7:	or     DWORD PTR [rcx],ecx
   1400096f9:	or     DWORD PTR [rcx],ecx
   1400096fb:	or     DWORD PTR [rcx],ecx
   1400096fd:	or     DWORD PTR [rcx],ecx
	...
   14000970f:	add    al,ah
   140009711:	add    DWORD PTR [rax],eax
   140009713:	add    al,al
   140009715:	add    DWORD PTR [rax],eax
   140009717:	add    BYTE PTR [rax-0x3fffffff],ah
   14000971d:	add    DWORD PTR [rax],eax
   14000971f:	add    BYTE PTR [rax-0x3fffffff],ah
   140009725:	add    DWORD PTR [rax],eax
   140009727:	add    BYTE PTR [rax-0x3fffffff],ah
   14000972d:	add    DWORD PTR [rax],eax
   14000972f:	add    BYTE PTR [rax-0x3fffffff],ah
   140009735:	add    DWORD PTR [rax],eax
   140009737:	add    BYTE PTR [rax-0x3fffffff],ah
   14000973d:	add    DWORD PTR [rax],eax
   14000973f:	add    BYTE PTR [rax-0x3fffffff],ah
   140009745:	add    DWORD PTR [rax],eax
   140009747:	add    al,ah
   140009749:	add    DWORD PTR [rax],eax
   14000974b:	add    bh,bh
   14000974d:	inc    DWORD PTR [rax]
   14000974f:	add    BYTE PTR [rcx+0xd474e50],cl
   140009755:	or     bl,BYTE PTR [rdx]
   140009757:	or     al,BYTE PTR [rax]
   140009759:	add    BYTE PTR [rax],al
   14000975b:	or     eax,0x52444849
   140009760:	add    BYTE PTR [rax],al
   140009762:	add    DWORD PTR [rax],eax
   140009764:	add    BYTE PTR [rax],al
   140009766:	add    DWORD PTR [rax],eax
   140009768:	or     BYTE PTR [rsi],al
   14000976a:	add    BYTE PTR [rax],al
   14000976c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140009770:	data16 add BYTE PTR [rax],al
   140009773:	and    BYTE PTR [rax],al
   140009775:	rex.WB
   140009776:	rex.R
   140009777:	push   r12
   140009779:	js     0x140009717
   14000977b:	in     al,dx
   14000977c:	mov    ebp,0xd965b479
   140009781:	pop    rbp
   140009782:	fcomip st,st(7)
   140009784:	fldenv [rdi-0x46]
   140009787:	repz fwait
   140009789:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000978a:	jp     0x1400097c1
   14000978c:	push   rdi
   14000978d:	push   rdi
   14000978e:	push   rdi
   14000978f:	rex.WRXB (bad) 
   140009791:	push   rcx
   140009792:	lods   eax,DWORD PTR ds:[rsi]
   140009793:	xchg   esi,eax
   140009794:	push   0x61300964
   140009799:	jo     0x14000974d
   14000979b:	adc    dl,BYTE PTR [rbx+0x6c7146d8]
   1400097a1:	adc    cl,BYTE PTR [rdi]
   1400097a3:	add    ch,BYTE PTR [rdi]
   1400097a5:	and    DWORD PTR [rbp-0x26],0x71
   1400097a9:	sbb    al,0xdb
   1400097ab:	rex.WB push r14
   1400097ad:	mov    dl,0x22
   1400097af:	xchg   DWORD PTR [rbp-0x40],eax
   1400097b2:	rex.R add cl,0x59
   1400097b6:	(bad)  
   1400097b7:	rol    dh,0xa0
   1400097ba:	add    r9d,DWORD PTR [r11]
   1400097bd:	and    edx,DWORD PTR [rax+0x1b6add40]
   1400097c3:	rex.WB
   1400097c4:	rex.RX
   1400097c5:	rex.B push 0x3d5bab56
   1400097cb:	push   rsp
   1400097cc:	push   rbp
   1400097cd:	ja     0x14000981c
   1400097cf:	scas   eax,DWORD PTR es:[rdi]
   1400097d0:	fisubr WORD PTR [rbx-0x30620c86]
   1400097d6:	mov    ah,0xf7
   1400097d8:	(bad)  
   1400097d9:	(bad)  
   1400097da:	addr32 mov eax,0x6eaf4ee7
   1400097e0:	jne    0x140009779
   1400097e2:	pop    rdx
   1400097e3:	out    0xbe,al
   1400097e5:	sti    
   1400097e6:	xchg   ebx,eax
   1400097e7:	stos   BYTE PTR es:[rdi],al
   1400097e8:	fistp  QWORD PTR [rbp-0x304c1319]
   1400097ee:	cmp    ebx,edi
   1400097f0:	out    dx,al
   1400097f1:	fbstp  TBYTE PTR [rdi-0x1]
   1400097f4:	out    0xd,al
   1400097f6:	adc    ebx,DWORD PTR [rdx+0x342684d0]
   1400097fc:	movabs eax,ds:0x84d09a1342684d09
   140009805:	es xor al,0xa1
   140009808:	or     DWORD PTR [rbp+0x68],ecx
   14000980b:	rex.X adc ebx,DWORD PTR [rdx+0x342684d0]
   140009812:	movabs eax,ds:0x84d09a1342684d09
   14000981b:	es xor al,0xa1
   14000981e:	or     DWORD PTR [rbp+0x68],ecx
   140009821:	rex.X adc ebx,DWORD PTR [rdx+0x342684d0]
   140009828:	movabs eax,ds:0x84d09a1342684d09
   140009831:	es xor al,0xa1
   140009834:	or     DWORD PTR [rbp+0x68],ecx
   140009837:	rex.X adc ebx,DWORD PTR [rdx+0x342684d0]
   14000983e:	movabs eax,ds:0x84d09a1342684d09
   140009847:	es xor al,0xa1
   14000984a:	or     DWORD PTR [rbp+0x68],ecx
   14000984d:	rex.X adc ebx,DWORD PTR [rdx+0x342684d0]
   140009854:	movabs eax,ds:0xfd9be24f9be84d09
   14000985d:	add    BYTE PTR [rdi+0x56],bh
   140009860:	call   0x11cf157e8
   140009865:	loop   0x14000981c
   140009867:	sub    ebx,DWORD PTR [rbx-0x48572441]
   14000986d:	fucomip st,st(1)
   14000986f:	mov    ecx,0xb7a8d5a1
   140009874:	inc    DWORD PTR [rax]
   140009876:	mov    eax,0x8b81540e
   14000987b:	or     BYTE PTR [rdi],0xbc
   14000987e:	adc    BYTE PTR [rdi],dh
   140009880:	(bad)  
   140009881:	(bad)  
   140009882:	mov    bl,0x4f
   140009884:	(bad)  
   140009885:	and    eax,0x3acf59bf
   14000988a:	movabs eax,ds:0x7e803800134a8d09
   140009893:	lock xchg esi,edi
   140009896:	(bad)  
   140009897:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140009899:	xor    al,0xf7
   14000989b:	xchg   edi,eax
   14000989c:	(bad)  
   14000989d:	jg     0x140009891
   14000989f:	cmp    edi,edi
   1400098a1:	stc    
   1400098a2:	test   DWORD PTR [rbx-0x15],ecx
   1400098a5:	iret   
   1400098a6:	in     al,0xa7
   1400098a8:	xchg   esi,eax
   1400098a9:	(bad)  
   1400098aa:	xchg   ebp,eax
   1400098ab:	shl    BYTE PTR [rbp-0x3d],cl
   1400098ae:	adc    bh,dh
   1400098b0:	or     BYTE PTR [rsi+riz*4],dh
   1400098b3:	push   0xffffffffffffffa1
   1400098b5:	fs enter 0xcd4e,0x78
   1400098ba:	pop    rcx
   1400098bb:	adc    DWORD PTR [rbp-0x25],0x6f
   1400098bf:	in     eax,0x34
   1400098c1:	pop    rdx
   1400098c2:	xlat   BYTE PTR ds:[rbx]
   1400098c3:	stos   DWORD PTR es:[rdi],eax
   1400098c4:	lods   eax,DWORD PTR ds:[rsi]
   1400098c5:	xchg   ebx,eax
   1400098c6:	imul   rbx,QWORD PTR [rdi+r10*8-0x41],0x46b20610
   1400098cf:	add    al,0x14
   1400098d1:	(bad)  
   1400098d2:	sbb    BYTE PTR [rbp-0x20],0x12
   1400098d6:	rol    BYTE PTR [rsi],1
   1400098d8:	pop    rsi
   1400098d9:	add    bh,BYTE PTR [rax-0xa]
   1400098dc:	jmp    0x10df55788
   1400098e1:	jnp    0x1400098a6
   1400098e3:	or     DWORD PTR [rip+0x343a76],ebx        # 0x14034d35f
   1400098e9:	lock movsxd edi,DWORD PTR [rdi]
   1400098ec:	(bad)  
   1400098ed:	push   rbx
   1400098ee:	(bad)  
   1400098f0:	repnz rex.WXB pop r15
   1400098f3:	sti    
   1400098f4:	repz ret 
   1400098f6:	(bad)  
   1400098f7:	(bad)  
   1400098f8:	fidivr DWORD PTR [rdi-0x6b802a03]
   1400098fe:	jl     0x1400098fe
   140009900:	rcr    DWORD PTR [rdi],0xfa
   140009903:	cmp    esp,DWORD PTR [rdi]
   140009905:	fcomip st,st(5)
   140009907:	in     al,0x9f
   140009909:	sti    
   14000990a:	pop    rdi
   14000990b:	adc    dl,ch
   14000990d:	std    
   14000990e:	rex.WXB or rcx,QWORD PTR [r11]
   140009911:	xchg   esp,eax
   140009912:	rex.WXB and rax,0xffffffff873b9dce
   140009918:	add    BYTE PTR [rcx+riz*2+0x6c344420],al
   14000991f:	fcmovnbe st,st(5)
   140009921:	add    BYTE PTR ss:[rbx+0x35],bh
   140009925:	(bad)  
   140009926:	lods   eax,DWORD PTR ds:[rsi]
   140009927:	(bad)  
   140009928:	scas   eax,DWORD PTR es:[rdi]
   140009929:	loope  0x14000990d
   14000992b:	sti    
   14000992c:	add    DWORD PTR [rbx-0x4b],edi
   14000992f:	(bad)  
   140009930:	(bad)  
   140009931:	jbe    0x140009930
   140009933:	(bad)  
   140009934:	imul   ebp,DWORD PTR [rbp+0x16210a4f],0x4adb54a4
   14000993e:	stos   BYTE PTR es:[rdi],al
   14000993f:	data16 adc BYTE PTR [rax-0x31],cl
   140009943:	jae    0x1400099c2
   140009945:	sbb    DWORD PTR [rdx+rdx*2],eax
   140009948:	(bad)  
   140009949:	fwait
   14000994a:	outs   dx,BYTE PTR ds:[rsi]
   14000994b:	rex.WB xchg BYTE PTR [r10+0x527dbd46],cl
   140009952:	sub    ecx,DWORD PTR [rbp-0x4d]
   140009955:	jmp    0x14c04de18
   14000995a:	xchg   edi,eax
   14000995b:	mov    BYTE PTR [rax+0x123d06e2],al
   140009961:	(bad)  
   140009962:	mov    bl,0x4f
   140009964:	(bad)  
   140009965:	cmc    
   140009966:	add    dl,BYTE PTR [rbx]
   140009968:	(bad)  
   140009969:	rcr    BYTE PTR [rip+0xffffffff8006b1a4],1        # 0xc0074b13
   14000996f:	(bad)  
   140009970:	sti    
   140009971:	icebp  
   140009972:	lahf   
   140009973:	cli    
   140009974:	outs   dx,BYTE PTR ds:[rsi]
   140009975:	(bad)  
   140009976:	lock jg 0x14000997b
   140009979:	loopne 0x140009919
   14000997b:	jae    0x1400099f4
   14000997d:	(bad)  
   14000997e:	xor    al,0x33
   140009980:	cmp    eax,DWORD PTR [rbx]
   140009982:	sar    dh,0xde
   140009985:	jle    0x140009961
   140009987:	data16 jrcxz 0x140009984
   14000998a:	sbb    al,BYTE PTR [rax]
   14000998c:	xchg   edi,eax
   14000998d:	cs mov ebp,0xd2fcc00e
   140009993:	or     ah,BYTE PTR [rdi+0x4e]
   140009996:	lahf   
   140009997:	ins    BYTE PTR es:[rdi],dx
   140009998:	int    0xcd
   14000999a:	iret   
   14000999b:	out    0x4f,eax
   14000999d:	popf   
   14000999e:	cmp    al,0x69
   1400099a0:	push   rsp
   1400099a1:	retf   0x8465
   1400099a4:	adc    BYTE PTR [rcx],ch
   1400099a6:	rcr    DWORD PTR [rbx],cl
   1400099a8:	xchg   BYTE PTR [rcx],al
   1400099aa:	adc    BYTE PTR [rdi],bl
   1400099ac:	add    edx,DWORD PTR [rax]
   1400099ae:	sbb    BYTE PTR [rdx-0x80],al
   1400099b1:	adc    cl,dl
   1400099b3:	(bad)  
   1400099b4:	div    BYTE PTR [rbp+rdx*1+0x485eda02]
   1400099bb:	mov    bl,0x1d
   1400099bd:	loopne 0x1400099b8
   1400099bf:	and    DWORD PTR [rbp+0x2a104fa6],esi
   1400099c5:	imul   bl
   1400099c7:	cs scas al,BYTE PTR es:[rdi]
   1400099c9:	(bad)  [rsi-0x49]
   1400099cc:	(bad)  
   1400099cd:	rex.RX imul r8d,ebp,0x6e
   1400099d1:	cmp    eax,0x5d1c18d2
   1400099d6:	rex.RXB sub r13d,r8d
   1400099d9:	outs   dx,BYTE PTR ds:[rsi]
   1400099da:	ret    
   1400099db:	jle    0x140009a3b
   1400099dd:	xchg   dl,dl
   1400099df:	imul   esi,DWORD PTR [rip+0xffffffffc20fc0bd],0xe3e5b769        # 0x102105aa6
   1400099e9:	jns    0x1400099ac
   1400099eb:	rex.WB fisttp WORD PTR [r11]
   1400099ee:	lock std 
   1400099f0:	lock stos DWORD PTR es:[rdi],eax
   1400099f2:	and    BYTE PTR [rdx+rax*1],0x86
   1400099f6:	sub    al,BYTE PTR [rbx]
   1400099f8:	and    al,0x8c
   1400099fa:	addr32 lahf 
   1400099fc:	jle    0x1400099e8
   1400099fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400099ff:	outs   dx,DWORD PTR ds:[rsi]
   140009a00:	(bad)  
   140009a01:	mov    eax,0x687c684e
   140009a06:	sub    al,0x1
   140009a08:	loopne 0x1400099e9
   140009a0a:	std    
   140009a0b:	out    dx,al
   140009a0c:	rex.RXB
   140009a0d:	rex.WXB sti 
   140009a0f:	mov    ch,0xda
   140009a11:	(bad)  
   140009a12:	xchg   ebp,eax
   140009a13:	sar    BYTE PTR [rdi],cl
   140009a15:	(bad)  
   140009a16:	cdq    
   140009a17:	xchg   BYTE PTR [rbp+0x3624b2bc],dh
   140009a1d:	outs   dx,DWORD PTR ds:[rsi]
   140009a1e:	outs   dx,BYTE PTR ds:[rsi]
   140009a1f:	repnz (bad) 
   140009a21:	retf   
   140009a22:	(bad)  
   140009a23:	add    dl,BYTE PTR [rax-0x51]
   140009a26:	(bad)  
   140009a27:	mov    edx,0x2dcccfda
   140009a2c:	repnz mov dh,0xfb
   140009a2f:	out    dx,eax
   140009a30:	(bad)  
   140009a31:	data16 outs dx,BYTE PTR ds:[rsi]
   140009a33:	(bad)  
   140009a34:	(bad)  [rcx-0x68]
   140009a37:	lahf   
   140009a38:	fwait
   140009a39:	movabs ds:0x30c0842c8ca52a5c,eax
   140009a42:	add    al,0x42
   140009a44:	je     0x1400099de
   140009a46:	(bad)  
   140009a47:	movabs eax,ds:0x622b4326db7a1c04
   140009a50:	(bad)  
   140009a51:	adc    BYTE PTR [rcx],dh
   140009a53:	sbb    BYTE PTR [rax],cl
   140009a55:	loop   0x140009a0d
   140009a57:	and    al,BYTE PTR [rcx]
   140009a59:	mov    cs,WORD PTR [rdi+rbx*1+0x8]
   140009a5d:	jbe    0x140009a09
   140009a5f:	sub    eax,0x5d34d2a4
   140009a64:	mov    DWORD PTR [rdi],ebx
   140009a66:	rex.W jbe 0x140009a5f
   140009a69:	sbb    esi,DWORD PTR [rdx+rbx*4]
   140009a6c:	sub    eax,0x6d16f56a
   140009a71:	pop    rdi
   140009a72:	shr    BYTE PTR [rdx+0x7b],cl
   140009a75:	mov    ah,0x7c
   140009a77:	and    DWORD PTR [rip+0x5f4f6d24],0xedbb4a56        # 0x19f5007a5
   140009a81:	mov    dh,0xe7
   140009a83:	retf   0x5950
   140009a86:	lea    eax,[rsi+0x3394952b]
   140009a8c:	cmc    
   140009a8d:	pop    rdx
   140009a8e:	sbb    esp,DWORD PTR [rbp-0x3c99360c]
   140009a94:	imul   r11d,DWORD PTR [r13+0x254318a8],0xffffff8c
   140009a9c:	addr32 lahf 
   140009a9e:	jle    0x140009a8a
   140009aa0:	loop   0x140009ad9
   140009aa2:	loop   0x140009b1b
   140009aa4:	cwde   
   140009aa5:	sar    BYTE PTR [rdi-0x6],1
   140009aa8:	xor    al,0x76
   140009aaa:	add    al,dh
   140009aac:	sti    
   140009aad:	jg     0x140009a9f
   140009aaf:	int3   
   140009ab0:	mov    dl,0x94
   140009ab2:	cli    
   140009ab3:	xlat   BYTE PTR ds:[rbx]
   140009ab4:	jae    0x140009a3b
   140009ab6:	ret    0xfa77
   140009ab9:	outs   dx,BYTE PTR ds:[rsi]
   140009aba:	imul   esi,ebx,0xffffff95
   140009abd:	push   rdi
   140009abe:	pop    rsi
   140009abf:	jge    0x140009ab2
   140009ac1:	cmc    
   140009ac2:	mov    esp,edi
   140009ac4:	iret   
   140009ac5:	mov    edx,0x4189d6ad
   140009aca:	in     eax,dx
   140009acb:	iret   
   140009acc:	pushf  
   140009acd:	mov    ebx,0xd7796f87
   140009ad2:	adc    ebp,DWORD PTR [rbp*1-0x4b4d4ed3]
   140009ad9:	rex.R mov ecx,0x4a40025c
   140009adf:	mov    DWORD PTR [rax],edx
   140009ae1:	(bad)  
   140009ae2:	xor    BYTE PTR [rcx+rdx*8],cl
   140009ae5:	pop    rdx
   140009ae6:	and    edx,DWORD PTR [rbp-0x2fed79be]
   140009aec:	push   0xc295a04
   140009af1:	shl    DWORD PTR [rsp+rcx*1],cl
   140009af4:	rex.XB and BYTE PTR [r11],cl
   140009af7:	add    al,0x0
   140009af9:	and    ah,BYTE PTR [rbp+0x7c]
   140009afc:	xor    al,BYTE PTR [rax]
   140009afe:	adc    DWORD PTR [rdi-0x7ffcefbe],ebx
   140009b04:	(bad)  
   140009b05:	fidiv  DWORD PTR fs:[rbx+rax*1+0x41]
   140009b0a:	(bad)  
   140009b0b:	and    BYTE PTR [rcx+rdx*1],cl
   140009b0e:	add    DWORD PTR [rdx-0x2605bbd0],ecx
   140009b14:	(bad)  
   140009b16:	sti    
   140009b17:	mov    ch,0x36
   140009b19:	movabs eax,ds:0xb5b14a9135ececd2
   140009b22:	xlat   BYTE PTR ds:[rbx]
   140009b23:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b24:	(bad)  [rdx-0x2e0aa24d]
   140009b2a:	xor    ah,BYTE PTR [rax-0x51]
   140009b2d:	test   eax,0x52941a50
   140009b32:	scas   eax,DWORD PTR es:[rdi]
   140009b33:	retf   
   140009b34:	push   rax
   140009b35:	sbb    DWORD PTR [rcx+0x10],eax
   140009b38:	outs   dx,BYTE PTR ds:[rsi]
   140009b39:	sti    
   140009b3a:	jle    0x140009ba4
   140009b3c:	mov    ebx,0xae7be06e
   140009b41:	lahf   
   140009b42:	ja     0x140009b1f
   140009b44:	shl    DWORD PTR [r13-0x3],1
   140009b48:	rex.X loopne 0x140009ad0
   140009b4b:	stos   DWORD PTR es:[rdi],eax
   140009b4c:	scas   al,BYTE PTR es:[rdi]
   140009b4d:	jmp    0x140009bb6
   140009b4f:	lea    ebx,[rax+0x3519102f]
   140009b55:	sti    
   140009b56:	and    al,0x8c
   140009b58:	addr32 lahf 
   140009b5a:	jle    0x140009b46
   140009b5c:	shl    BYTE PTR [rdi],cl
   140009b5e:	loopne 0x140009bc7
   140009b60:	fwait
   140009b61:	shl    BYTE PTR [rdi],1
   140009b63:	mov    esi,eax
   140009b65:	or     al,BYTE PTR [rax]
   140009b67:	ds cli 
   140009b69:	mov    cl,0x8f
   140009b6b:	(bad)  
   140009b6c:	mov    ecx,0x27bbffbe
   140009b71:	rex.WRX (bad) 
   140009b74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b75:	fld    TBYTE PTR [rsi+0x6d]
   140009b78:	cld    
   140009b79:	(bad)  
   140009b7a:	rex.WRXB jge 0x140009b6f
   140009b7d:	ret    0xb5da
   140009b80:	retf   
   140009b81:	out    dx,eax
   140009b82:	(bad)  
   140009b84:	(bad)  
   140009b86:	lock cmp eax,0xe79ecbf7
   140009b8c:	std    
   140009b8d:	(bad)  
   140009b8e:	mov    bl,0xcf
   140009b90:	repz rex.WB sbb BYTE PTR ds:[r15],0xfc
   140009b96:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009b97:	(bad)  
   140009b98:	dec    ah
   140009b9a:	(bad)  
   140009b9b:	rol    ebp,1
   140009b9d:	(bad)  
   140009b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   140009ba0:	repnz movabs ds:0xe5ccac5bcc51ca5c,al
   140009baa:	jo     0x140009bc8
   140009bac:	xchg   ebp,esp
   140009bae:	fnstcw WORD PTR [rbx+rdx*8]
   140009bb1:	in     eax,0x2
   140009bb3:	xchg   BYTE PTR [rcx+0x60],ah
   140009bb6:	(bad)  [rsi]
   140009bb8:	xchg   BYTE PTR [rcx+0x74],ah
   140009bbb:	mov    esi,edi
   140009bbd:	pop    rdx
   140009bbe:	imul   esp,DWORD PTR [rsp+rdx*4+0x3290a528],0x12
   140009bc6:	fst    QWORD PTR [rbp+0x10a52852]
   140009bcc:	xchg   BYTE PTR [rcx-0x59a70411],al
   140009bd2:	adc    eax,0x5a998b9d
   140009bd7:	sub    ebp,edx
   140009bd9:	and    eax,0x381742d
   140009bde:	mov    cl,0x84
   140009be0:	nop
   140009be1:	(bad)  
   140009be2:	jmp    0x140009b7a
   140009be4:	adc    al,0x44
   140009be6:	out    0x58,al
   140009be8:	and    bl,BYTE PTR [rbp+0x8]
   140009beb:	xchg   ecx,eax
   140009bec:	test   al,0x23
   140009bee:	sbb    eax,edx
   140009bf0:	xor    DWORD PTR [rdx],esi
   140009bf2:	std    
   140009bf3:	(bad)  
   140009bf4:	movsxd esp,DWORD PTR [rdx]
   140009bf6:	rex.R and al,0x55
   140009bf9:	add    al,0x81
   140009bfb:	(bad)  
   140009bfc:	mov    edi,0x2f5c6d1
   140009c01:	(bad)  
   140009c02:	rex.WRB lahf 
   140009c04:	fnstsw WORD PTR [rbp-0x70926583]
   140009c0a:	retf   
   140009c0b:	(bad)  
   140009c0c:	(bad)  
   140009c0d:	pop    rdi
   140009c0e:	add    ah,BYTE PTR [rsi+0x5a68b381]
   140009c14:	push   rdx
   140009c15:	test   eax,0x3994322b
   140009c1a:	iret   
   140009c1b:	or     ebp,DWORD PTR [rdi+0x36ce50cb]
   140009c21:	(bad)  
   140009c22:	in     eax,dx
   140009c23:	cmp    eax,0xbd42d529
   140009c28:	(bad)  
   140009c29:	(bad)  
   140009c2a:	push   rdx
   140009c2b:	stos   BYTE PTR es:[rdi],al
   140009c2c:	mov    ecx,0x925dd356
   140009c31:	push   rdx
   140009c32:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009c33:	rex.RX
   140009c34:	rex.WR (bad) 
   140009c36:	test   al,0x84
   140009c38:	icebp  
   140009c39:	in     al,dx
   140009c3a:	ror    DWORD PTR [rdi+0x5d],cl
   140009c3d:	inc    DWORD PTR [rsi-0x45ec2703]
   140009c43:	and    esi,DWORD PTR [rsi+rdx*2]
   140009c46:	add    al,dh
   140009c48:	mov    ebx,0x4fb1f7bf
   140009c4d:	lods   eax,DWORD PTR ds:[rsi]
   140009c4e:	sub    al,0x2f
   140009c50:	mov    edi,0x6e9e50b7
   140009c55:	jge    0x140009c53
   140009c57:	jrcxz  0x140009cd8
   140009c59:	js     0x140009c50
   140009c5b:	retf   0xe76b
   140009c5e:	out    dx,eax
   140009c5f:	fstp   st(1)
   140009c61:	(bad)  
   140009c63:	pop    rsp
   140009c64:	mov    ebx,0x30f1fad5
   140009c69:	or     al,0x9f
   140009c6b:	jnp    0x140009c53
   140009c6d:	cdq    
   140009c6e:	(bad)  
   140009c6f:	(bad)  
   140009c70:	and    DWORD PTR [rdx-0x2],esp
   140009c73:	mov    bh,0xdd
   140009c75:	jae    0x140009c73
   140009c77:	pop    rbx
   140009c78:	ja     0x140009c70
   140009c7a:	(bad)  [rdx+rbx*8-0x1fe451e2]
   140009c81:	mov    edx,0x80179e3e
   140009c86:	adc    BYTE PTR [rax],bh
   140009c88:	mov    cs,WORD PTR [rbp-0x7af5f59f]
   140009c8e:	sbb    al,0xc5
   140009c90:	(bad)  
   140009c91:	rex.XB mov r9b,0x94
   140009c94:	movabs ds:0x658e12d9f987452,eax
   140009c9d:	ja     0x140009c3e
   140009c9f:	(bad)  
   140009ca0:	(bad)  
   140009ca1:	adc    BYTE PTR [rsi],al
   140009ca3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009ca4:	push   rdi
   140009ca5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009ca6:	mov    al,0x2d
   140009ca8:	mov    bl,0x4b
   140009caa:	and    eax,0x84235ad0
   140009caf:	rex
   140009cb0:	rex.WX mov rsi,rdx
   140009cb3:	(bad)  
   140009cb4:	and    BYTE PTR [rax],cl
   140009cb6:	add    BYTE PTR [rax],cl
   140009cb8:	ret    
   140009cb9:	xor    BYTE PTR [rip+0x34681009],al        # 0x17468acc8
   140009cbf:	pop    rdx
   140009cc0:	imul   ecx,DWORD PTR [rbx+rax*8],0x85680340
   140009cc7:	adc    DWORD PTR [rbx-0x4ea69a7a],eax
   140009ccd:	sub    dl,cl
   140009ccf:	outs   dx,DWORD PTR ds:[rsi]
   140009cd0:	outs   dx,DWORD PTR ds:[rsi]
   140009cd1:	rex.W in eax,dx
   140009cd3:	(bad)  
   140009cd4:	rex.RX retf 0x3de2
   140009cd8:	rol    BYTE PTR [rdi+0x47],cl
   140009cdb:	xchg   edx,eax
   140009cdc:	call   0x18f1d8c7d
   140009ce1:	sub    bl,bh
   140009ce3:	cmp    ecx,edi
   140009ce5:	(bad)  
   140009ce6:	(bad)
   140009cea:	adc    ebp,DWORD PTR [rbp+0x52377360]
   140009cf0:	xchg   ebx,eax
   140009cf1:	ss mov dh,0xaa
   140009cf4:	mov    eax,0x66d506ed
   140009cf9:	mov    bh,ch
   140009cfb:	mov    ch,0x69
   140009cfd:	js     0x140009c81
   140009cff:	or     dl,BYTE PTR [rdx+rdx*8-0x6514a515]
   140009d07:	out    dx,eax
   140009d08:	add    eax,0x9aaa185e
   140009d0d:	fcomi  st,st(6)
   140009d0f:	or     ebx,DWORD PTR [rsi+0x2f3db7eb]
   140009d15:	cwde   
   140009d16:	imul   esi,DWORD PTR [rsi],0x3d
   140009d19:	rex.XB xchg BYTE PTR [r10-0x4f],sil
   140009d1d:	fnstenv [rax+0x17]
   140009d20:	call   0x13025ce3d
   140009d25:	(bad)  
   140009d26:	clc    
   140009d27:	jbe    0x140009da6
   140009d29:	adc    al,dh
   140009d2b:	mov    bl,0x4f
   140009d2d:	(bad)  
   140009d2e:	jne    0x140009d13
   140009d30:	(bad)  
   140009d31:	(bad)  
   140009d32:	out    dx,al
   140009d33:	adc    edi,DWORD PTR [rdx-0x1d]
   140009d36:	xor    al,0x36
   140009d38:	add    al,dh
   140009d3a:	xchg   ecx,eax
   140009d3b:	(bad)  
   140009d3d:	ret    
   140009d3e:	mov    edi,0x6ffe07e4
   140009d43:	mov    edi,0xaaef9deb
   140009d48:	cmp    eax,0xf91fdcfb
   140009d4d:	lahf   
   140009d4e:	(bad)  
   140009d4f:	in     al,dx
   140009d50:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009d51:	(bad)  
   140009d52:	sbb    cl,BYTE PTR [rbp-0x142ae01a]
   140009d58:	mov    ch,0xf
   140009d5a:	jl     0x140009d48
   140009d5c:	movabs ds:0xd3fe0fdda4f5ffbf,eax
   140009d65:	movq   QWORD PTR [rsi+0x7d6fa862],mm4
   140009d6c:	loopne 0x140009d0b
   140009d6e:	setae  BYTE PTR [rdi+0x2c]
   140009d72:	ins    BYTE PTR es:[rdi],dx
   140009d73:	(bad)  [rdi+riz*2]
   140009d76:	fwait
   140009d77:	cmp    BYTE PTR [rsi-0x5fa49c77],dh
   140009d7d:	adc    al,0xf5
   140009d7f:	xchg   BYTE PTR [rbx-0x5d],cl
   140009d82:	in     eax,0x52
   140009d84:	scas   eax,DWORD PTR es:[rdi]
   140009d85:	mov    ebx,0x669f5d34
   140009d8a:	ret    
   140009d8b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009d8c:	in     eax,dx
   140009d8d:	cli    
   140009d8e:	mov    ah,0x5a
   140009d90:	(bad)  
   140009d91:	mov    esi,0x796ed21f
   140009d96:	sub    al,0xcc
   140009d98:	xchg   ebp,eax
   140009d99:	cwde   
   140009d9a:	fwait
   140009d9b:	sub    eax,0xcdcc1083
   140009da0:	xchg   esp,eax
   140009da1:	mov    al,0x6d
   140009da3:	sbb    DWORD PTR [rcx-0x637add17],0xffffffc5
   140009daa:	in     al,dx
   140009dab:	je     0x140009d3e
   140009dad:	jl     0x140009d7d
   140009daf:	data16 jno 0x140009d60
   140009db2:	xor    rdi,rbp
   140009db5:	nop
   140009db6:	ja     0x140009e04
   140009db8:	ins    BYTE PTR es:[rdi],dx
   140009db9:	retf   
   140009dba:	add    al,0x22
   140009dbc:	adc    BYTE PTR [rax+0x4a],0xa5
   140009dc0:	push   rdx
   140009dc1:	test   dh,dl
   140009dc3:	cmp    al,BYTE PTR [rip+0x3c2c0487]        # 0x17c2ca250
   140009dc9:	iret   
   140009dca:	and    ecx,DWORD PTR [rax]
   140009dcc:	add    ch,BYTE PTR [rbx+rcx*8]
   140009dcf:	rex.WX add QWORD PTR [rip+0xffffffffaff88305],rsp        # 0xeff920db
   140009dd6:	(bad)  
   140009dd7:	cwde   
   140009dd8:	or     BYTE PTR [rcx],al
   140009dda:	mov    fs,ebx
   140009ddc:	(bad)  
   140009ddd:	outs   dx,DWORD PTR ds:[rsi]
   140009dde:	(bad)  
   140009ddf:	stos   DWORD PTR es:[rdi],eax
   140009de0:	(bad)  
   140009de1:	nop
   140009de2:	cmp    esi,ebx
   140009de4:	retf   
   140009de5:	lock fpatan 
   140009de8:	cmp    DWORD PTR [rsi+0x2f4403f7],0x55
   140009def:	sbb    ebp,DWORD PTR [rsi]
   140009df1:	scas   al,BYTE PTR es:[rdi]
   140009df2:	(bad)  
   140009df3:	shr    BYTE PTR [rax-0x7],cl
   140009df6:	mov    ah,0xda
   140009df8:	add    DWORD PTR [rip+0x6b6b602f],ebp        # 0x1ab6bfe2d
   140009dfe:	sbb    edi,DWORD PTR [rdi]
   140009e00:	(bad)  
   140009e01:	xchg   ecx,eax
   140009e02:	test   cl,dl
   140009e04:	nop
   140009e05:	(bad)  
   140009e06:	add    edi,esi
   140009e08:	add    edx,DWORD PTR [rdx+0x4a]
   140009e0b:	jne    0x140009e2b
   140009e0d:	(bad)  
   140009e0e:	shr    DWORD PTR [rsi+0x7b],1
   140009e11:	fistp  DWORD PTR [rdx-0x5d]
   140009e14:	(bad)  
   140009e15:	mov    ch,0x96
   140009e17:	test   eax,0x5af592a4
   140009e1c:	jnp    0x140009e54
   140009e1e:	or     BYTE PTR [rbp+0x2b796ed9],ah
   140009e24:	sbb    DWORD PTR [rdi],0x4dc032ce
   140009e2a:	retf   0x900
   140009e2d:	jrcxz  0x140009e08
   140009e2f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009e30:	lahf   
   140009e31:	fidivr DWORD PTR [rip+0x3426e1f0]        # 0x174278027
   140009e37:	xor    cl,BYTE PTR [rbp-0x2c3fff3]
   140009e3d:	pop    rbx
   140009e3e:	mov    edi,0xaeebbd53
   140009e43:	sar    DWORD PTR [rsi+0x3b],cl
   140009e46:	adc    BYTE PTR [rbx-0x202204e1],dh
   140009e4c:	(bad)  
   140009e4d:	outs   dx,DWORD PTR ds:[rsi]
   140009e4e:	(bad)  
   140009e50:	push   rax
   140009e51:	mov    ebx,0xf9ef3bbb
   140009e56:	fadd   DWORD PTR [rdi+0x7f]
   140009e59:	dec    DWORD PTR [rbx-0x1c008927]
   140009e5f:	(bad)  
   140009e60:	cli    
   140009e61:	imul   edi,DWORD PTR [rdx-0x12],0xffffffcc
   140009e65:	jmp    0x16db3996d
   140009e6a:	xchg   ebx,eax
   140009e6b:	mov    esp,0x69a6163
   140009e70:	test   DWORD PTR [rbp+rcx*4+0x58a0869],edi
   140009e77:	(bad)  
   140009e78:	push   rbx
   140009e79:	or     BYTE PTR [rsi+0x1c],cl
   140009e7c:	cdq    
   140009e7d:	data16 mov bh,0xda
   140009e80:	out    0xae,al
   140009e82:	adc    ecx,DWORD PTR [rbx]
   140009e84:	ins    BYTE PTR es:[rdi],dx
   140009e85:	out    dx,eax
   140009e86:	(bad)  
   140009e87:	push   rcx
   140009e88:	pop    rdx
   140009e89:	mov    cl,0xbb
   140009e8b:	pop    rbx
   140009e8c:	(bad)  
   140009e8d:	push   rsp
   140009e8e:	(bad)  
   140009e8f:	mov    ebp,0xa86106bd
   140009e94:	fsubr  DWORD PTR [rdi+0x49430936]
   140009e9a:	lods   eax,DWORD PTR ds:[rsi]
   140009e9b:	faddp  st(6),st
   140009e9d:	test   DWORD PTR [rbx-0x76],0x9cf91ca5
   140009ea4:	rex.XB mov r9b,0xe0
   140009ea7:	xor    BYTE PTR [rbp-0x32],dl
   140009eaa:	xchg   ebx,eax
   140009eab:	(bad)  
   140009eac:	cmp    ah,cl
   140009eae:	rex.WRB (bad) 
   140009eb0:	sub    dh,ah
   140009eb2:	sbb    eax,0x4c0ba666
   140009eb7:	xchg   ebp,eax
   140009eb8:	sbb    al,0x66
   140009eba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009ebb:	rex.WXB adc al,0x72
   140009ebe:	(bad)  
   140009ebf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009ec0:	rcr    DWORD PTR [rcx-0x43],1
   140009ec3:	adc    eax,DWORD PTR [rax-0x10]
   140009ec6:	jge    0x140009ee7
   140009ec8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009ec9:	adc    al,0x61
   140009ecb:	sbb    BYTE PTR [rdx],dl
   140009ecd:	xchg   BYTE PTR [rcx],ah
   140009ecf:	push   rdx
   140009ed0:	rex.WX (bad) 
   140009ed2:	and    BYTE PTR [rax+0x4a],al
   140009ed5:	movabs r11,0xd8e005811d6b46dd
   140009edf:	movabs eax,ss:0x818611a91db6d894
   140009ee9:	gs cdq 
   140009eeb:	cwde   
   140009eec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009eed:	mov    DWORD PTR [rbp-0x25],ebp
   140009ef0:	je     0x140009e9b
   140009ef2:	or     al,0x7d
   140009ef4:	mov    edi,0xf163a0fe
   140009ef9:	cdq    
   140009efa:	pop    rbx
   140009efb:	add    dl,al
   140009efd:	xor    dl,dl
   140009eff:	pop    rdx
   140009f00:	mov    bl,0xb5
   140009f02:	xlat   BYTE PTR ds:[rbx]
   140009f03:	add    ah,BYTE PTR [rax+0x7b]
   140009f06:	mov    edi,0xcd9ad285
   140009f0b:	popf   
   140009f0c:	sbb    bl,BYTE PTR [rsi-0x69215925]
   140009f12:	mov    eax,0xd0ed06ad
   140009f17:	ret    0x697
   140009f1a:	push   0x3b52a536
   140009f1f:	rex.WX test rax,0xffffffffda0edba6
   140009f25:	rex.WX sub QWORD PTR [rdi+0x4a396d5e],rdi
   140009f2c:	imul   ebx,DWORD PTR [rcx-0x23],0x6b
   140009f30:	(bad)  
   140009f31:	imul   esi,DWORD PTR [rax+0x55cdfb6b],0x31259522
   140009f3b:	(bad)  
   140009f3c:	adc    BYTE PTR ss:[rdi+0x19],0x22
   140009f41:	(bad)  
   140009f42:	cmp    al,0xfb
   140009f44:	hlt    
   140009f45:	push   rbx
   140009f46:	(bad)  
   140009f47:	(bad)  
   140009f48:	hlt    
   140009f49:	loopne 0x140009ed2
   140009f4b:	test   BYTE PTR [rdi+rbp*2+0x41dc03f6],ch
   140009f52:	(bad)  
   140009f53:	cmp    dh,BYTE PTR [rbx-0x6]
   140009f56:	hlt    
   140009f57:	fidiv  WORD PTR [rbx-0x1]
   140009f5a:	(bad)  
   140009f5b:	xchg   ebx,eax
   140009f5c:	out    0xd6,al
   140009f5e:	(bad)  
   140009f5f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009f60:	test   eax,0x5ec9fab5
   140009f65:	out    0x1f,al
   140009f67:	xchg   ebp,eax
   140009f68:	(bad)  
   140009f69:	push   rax
   140009f6a:	adc    al,BYTE PTR [rcx+rdx*4+0x6f5fbf6e]
   140009f71:	ja     0x140009f10
   140009f73:	xor    ecx,DWORD PTR [rip+0xfffffffffebe97cd]        # 0x13ebf3746
   140009f79:	cmp    cl,BYTE PTR [rbx-0x75]
   140009f7c:	rex.WRXB xchg r8,rax
   140009f7e:	sub    edi,DWORD PTR [rdx]
   140009f80:	cwde   
   140009f81:	xchg   BYTE PTR [rax+0x2ba4295c],ah
   140009f87:	je     0x140009feb
   140009f89:	mov    eax,0xbc063333
   140009f8e:	rex.RX ret 
   140009f90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f91:	in     eax,dx
   140009f92:	(bad)  
   140009f93:	xor    al,0x9a
   140009f95:	ins    DWORD PTR es:[rdi],dx
   140009f96:	(bad)  
   140009f98:	add    BYTE PTR [rsi-0x2d],0x65
   140009f9c:	in     eax,dx
   140009f9d:	rex.RX xchg ebp,eax
   140009f9f:	jbe    0x140009f7c
   140009fa1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009fa2:	fnstenv [rcx+rsi*8-0x4]
   140009fa6:	cmp    BYTE PTR [rdx-0x23],0xc5
   140009faa:	xor    al,0xd
   140009fac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009fad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009fae:	mov    ebx,DWORD PTR [rax-0x5a]
   140009fb1:	rcl    edx,0x7c
   140009fb4:	add    eax,0x96470421
   140009fb9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009fba:	xor    BYTE PTR [rcx+rax*8],cl
   140009fbd:	retf   0x34d2
   140009fc0:	cmp    ebx,ebx
   140009fc2:	fs jns 0x14000a026
   140009fc5:	(bad)  
   140009fc6:	(bad)  
   140009fc7:	or     al,0x4a
   140009fc9:	shl    BYTE PTR [rcx+0x4c],1
   140009fcc:	xlat   BYTE PTR ds:[rbx]
   140009fcd:	jne    0x140009fd0
   140009fcf:	push   rdx
   140009fd0:	rex
   140009fd1:	lock cmp al,0xf
   140009fd4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009fd5:	adc    al,0x9e
   140009fd7:	out    0xe1,eax
   140009fd9:	mov    ecx,0xc3cf3c6d
   140009fde:	idiv   DWORD PTR [rbp-0x4c]
   140009fe1:	(bad)  
   140009fe2:	cmp    BYTE PTR [rcx+0x658d681c],bh
   140009fe8:	fldcw  WORD PTR [rax-0x40]
   140009feb:	mov    dh,0xa3
   140009fed:	imul   esp,eax,0x65a60ed8
   140009ff3:	(bad)  
   140009ff4:	(bad)  [rsi]
   140009ff6:	xchg   esi,eax
   140009ff7:	xor    eax,0x2edc6a7c
   140009ffc:	sbb    ah,cl
   140009ffe:	rex.WRB in eax,0xbb
   14000a001:	(bad)  
   14000a002:	fidivr WORD PTR [rbx+0x72]
   14000a005:	jle    0x14000a067
   14000a007:	mov    ebx,0x352c1b96
   14000a00c:	fcmovnb st,st(1)
   14000a00e:	push   rdx
   14000a00f:	loop   0x14000a03f
   14000a011:	cmc    
   14000a012:	add    ecx,ecx
   14000a014:	int    0xad
   14000a016:	ins    DWORD PTR es:[rdi],dx
   14000a017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a018:	mov    ah,BYTE PTR [rsi+rcx*1]
   14000a01b:	sbb    DWORD PTR [rsi],eax
   14000a01d:	(bad)  
   14000a01e:	jge    0x14000a03b
   14000a020:	add    BYTE PTR [rbp-0x452d410c],ch
   14000a026:	sbb    BYTE PTR [rcx+riz*2],al
   14000a029:	xor    eax,0x9e7de5f0
   14000a02e:	(bad)  
   14000a02f:	push   rsp
   14000a030:	fst    QWORD PTR [rsi+0xbcf36f7]
   14000a036:	(bad)  
   14000a037:	int    0xa6
   14000a039:	mul    DWORD PTR [rbx+0x6e8417be]
   14000a03f:	fstp   TBYTE PTR [rdi]
   14000a041:	sti    
   14000a042:	fucomp st(7)
   14000a044:	sti    
   14000a045:	push   rax
   14000a046:	add    DWORD PTR [rbx],0x48c8b102
   14000a04c:	sbb    bh,cl
   14000a04e:	ds std 
   14000a050:	push   rsp
   14000a051:	rex.XB
   14000a052:	rex.XB
   14000a053:	rex.RX jrcxz 0x14000a05a
   14000a056:	add    ah,cl
   14000a058:	int    0xce
   14000a05a:	int3   
   14000a05b:	(bad)  
   14000a05c:	rex.RX imul r13d,DWORD PTR [rbp-0x72032cb3],0xffffffc1
   14000a064:	lods   eax,DWORD PTR ds:[rsi]
   14000a065:	hlt    
   14000a066:	fwait
   14000a067:	mov    esi,0x6998658f
   14000a06c:	(bad)  
   14000a06d:	movabs eax,ds:0x834d7f2203a93f8a
   14000a076:	(bad)  
   14000a077:	cmp    DWORD PTR [rdi-0x57],ecx
   14000a07a:	xchg   edx,eax
   14000a07b:	pop    rsp
   14000a07d:	stc    
   14000a07e:	mov    ebp,ss
   14000a080:	(bad)  
   14000a081:	std    
   14000a082:	mov    WORD PTR [rax],fs
   14000a084:	or     al,0x24
   14000a086:	(bad)  
   14000a087:	jp     0x14000a094
   14000a089:	fisttp WORD PTR [rdi]
   14000a08b:	fldcw  WORD PTR [rdi-0x6f7df74a]
   14000a091:	imul   ebx,DWORD PTR [rbx],0x55
   14000a094:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a095:	push   rdx
   14000a096:	jl     0x14000a081
   14000a098:	imul   edx,DWORD PTR [rdi+0x51],0x5a
   14000a09c:	mov    bl,0xbb
   14000a09e:	fild   DWORD PTR [rax+0x6b]
   14000a0a1:	int    0xd4
   14000a0a3:	je     0x14000a0b6
   14000a0a5:	(bad)  [rdx]
   14000a0a7:	cdq    
   14000a0a8:	lahf   
   14000a0a9:	sub    esp,DWORD PTR [rbx-0x65]
   14000a0ac:	mov    esi,DWORD PTR es:[rbx+0x65]
   14000a0b0:	bnd jns 0x14000a04e
   14000a0b3:	cdq    
   14000a0b4:	jmp    0x17ce673bb
   14000a0b9:	xchg   ebp,eax
   14000a0ba:	jb     0x14000a041
   14000a0bc:	xchg   ebp,eax
   14000a0bd:	fst    DWORD PTR [rdx+0xa]
   14000a0c0:	adc    al,0x9
   14000a0c2:	sub    QWORD PTR [r11+0x70],rdx
   14000a0c6:	push   0xffffffffdef9a3b7
   14000a0cb:	ins    BYTE PTR es:[rdi],dx
   14000a0cc:	rcr    DWORD PTR ss:[rdx-0x2d],1
   14000a0d0:	ins    BYTE PTR es:[rdi],dx
   14000a0d1:	or     BYTE PTR ss:[rdx+0x28dd700],al
   14000a0d8:	(bad)  
   14000a0d9:	rex.WR rol rsp,cl
   14000a0dc:	mov    dl,0x2d
   14000a0de:	shl    al,1
   14000a0e0:	in     al,0x1c
   14000a0e2:	mov    ah,0x52
   14000a0e4:	cmp    BYTE PTR [rcx-0x7af47678],bh
   14000a0ea:	cmp    al,0x20
   14000a0ec:	enter  0xf3e7,0x29
   14000a0f0:	clc    
   14000a0f1:	mov    ebp,0xe98571f9
   14000a0f6:	xchg   edx,eax
   14000a0f7:	add    eax,0xd9a58b25
   14000a0fc:	call   0xdea0983f
   14000a101:	sbb    eax,0xeaa776d8
   14000a106:	fisubr WORD PTR [rbx-0x1e40994b]
   14000a10c:	fst    QWORD PTR [rdi]
   14000a10e:	(bad)
   14000a112:	ds sahf 
   14000a114:	(bad)  
   14000a115:	shl    dh,1
   14000a117:	xor    eax,0x5f0366ad
   14000a11c:	pop    rcx
   14000a11d:	js     0x14000a0f1
   14000a11f:	add    al,0xa8
   14000a121:	sub    ah,BYTE PTR [rbp-0x59ad6b09]
   14000a127:	out    dx,eax
   14000a128:	test   DWORD PTR [rdx+0x4a],edx
   14000a12b:	jns    0x14000a17c
   14000a12d:	mov    bl,0xe1
   14000a12f:	outs   dx,BYTE PTR ds:[rsi]
   14000a130:	xchg   BYTE PTR [rcx+0x6b56ac7c],al
   14000a136:	in     eax,dx
   14000a137:	test   DWORD PTR [rcx-0x42992e06],esp
   14000a13d:	in     eax,dx
   14000a13e:	rex.WX test rax,0x7772001e
   14000a144:	in     al,0x45
   14000a146:	dec    BYTE PTR [rcx+rdx*8]
   14000a149:	fadd   DWORD PTR [rax]
   14000a14b:	mov    dl,0x2a
   14000a14e:	test   eax,0xfc777dd8
   14000a153:	clc    
   14000a154:	mov    esi,esp
   14000a156:	(bad)  
   14000a157:	stc    
   14000a158:	xchg   ecx,eax
   14000a159:	mov    edx,0x631d6948
   14000a15e:	rex.WRXB (bad) 
   14000a160:	add    cl,ch
   14000a162:	int3   
   14000a163:	movabs eax,ds:0x5b3d31ca50a1d15c
   14000a16c:	rex.WRX shl QWORD PTR [rcx],0x9
   14000a170:	xor    al,0x8a
   14000a172:	cwde   
   14000a173:	pop    rcx
   14000a174:	movsxd ebx,DWORD PTR [rdx]
   14000a176:	(bad)  
   14000a177:	cmp    edi,DWORD PTR [rbx-0x132b5b8b]
   14000a17d:	out    dx,al
   14000a17e:	(bad)  
   14000a17f:	or     DWORD PTR [rbx-0x3b],eax
   14000a182:	outs   dx,BYTE PTR ds:[rsi]
   14000a183:	lods   eax,DWORD PTR ds:[rsi]
   14000a184:	test   DWORD PTR [rdi+0x72fea75d],esi
   14000a18a:	sbb    ecx,edi
   14000a18c:	punpckhbw mm6,QWORD PTR [rsp+rbx*2]
   14000a190:	cmp    al,0x2f
   14000a192:	and    al,0x9f
   14000a194:	mov    bh,0x63
   14000a196:	and    esp,DWORD PTR [rsi-0x72]
   14000a199:	push   rdx
   14000a19a:	sub    DWORD PTR [rdi-0x5b],ecx
   14000a19d:	pushf  
   14000a19e:	movsxd esp,DWORD PTR [rsi-0x56]
   14000a1a1:	rex.W fidiv WORD PTR [rcx-0x3d65a6a8]
   14000a1a8:	mov    dl,0xc
   14000a1aa:	rex.WRX pushf 
   14000a1ac:	cmp    cl,bl
   14000a1ae:	(bad)  
   14000a1af:	adc    al,0x10
   14000a1b1:	test   eax,0xa7efbe1e
   14000a1b6:	movabs al,ds:0x6294a26cd9a294a0
   14000a1bf:	jnp    0x14000a22c
   14000a1c1:	or     eax,DWORD PTR [rax-0x6b714286]
   14000a1c7:	adc    al,bh
   14000a1c9:	jno    0x14000a1db
   14000a1cb:	ret    0xb2c0
   14000a1ce:	sub    eax,0x5a60610c
   14000a1d3:	mov    ss,WORD PTR es:[rbx+0xa0c30c3]
   14000a1da:	stc    
   14000a1db:	cmp    al,0x1a
   14000a1dd:	sub    BYTE PTR [rbp+0x3c6c774a],dl
   14000a1e3:	addr32 retf 0x2491
   14000a1e7:	xor    BYTE PTR [rbx-0x77],bl
   14000a1ea:	ins    BYTE PTR es:[rdi],dx
   14000a1eb:	and    BYTE PTR [rdi+0x1f],dh
   14000a1ee:	fwait
   14000a1ef:	(bad)  
   14000a1f0:	fmul   st,st(6)
   14000a1f2:	or     esp,esp
   14000a1f4:	je     0x14000a199
   14000a1f6:	adc    eax,0xa2a1074c
   14000a1fb:	(bad)  
   14000a1fc:	hlt    
   14000a1fd:	lock adc DWORD PTR [rax+0x10289dad],0x6c
   14000a205:	mov    bh,0xda
   14000a207:	rex.RX sub r9d,DWORD PTR [rcx+0x33]
   14000a20b:	int3   
   14000a20c:	(bad)
   14000a20f:	xchg   esp,esi
   14000a211:	mov    bl,0x4f
   14000a213:	(bad)  
   14000a214:	xor    eax,0x28f16a36
   14000a219:	xor    al,0x36
   14000a21b:	add    al,ah
   14000a21d:	sti    
   14000a21e:	jle    0x14000a1dd
   14000a220:	fnsave [rsi+0x2b]
   14000a223:	in     eax,0x99
   14000a225:	cmp    DWORD PTR [rsi-0x568a585a],esp
   14000a22b:	push   rsp
   14000a22c:	cld    
   14000a22d:	jle    0x14000a20f
   14000a22f:	sbb    edi,0xffffffb0
   14000a232:	sbb    ebp,edx
   14000a234:	out    dx,al
   14000a235:	pop    QWORD PTR [rdx-0x74]
   14000a238:	cs pop rbx
   14000a23a:	or     al,0x9f
   14000a23c:	(bad)  
   14000a23d:	sbb    ch,BYTE PTR [rbp+0x5062a913]
   14000a243:	outs   dx,DWORD PTR ds:[rsi]
   14000a244:	cmp    bh,BYTE PTR [rip+0x1c6ce66a]        # 0x15c6d88b4
   14000a24a:	ret    
   14000a24b:	loopne 0x14000a2b5
   14000a24d:	sub    DWORD PTR [rdi],ebx
   14000a24f:	xor    DWORD PTR [rdi-0x56],ebp
   14000a252:	jbe    0x14000a2c8
   14000a254:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a255:	or     dl,bl
   14000a257:	adc    BYTE PTR [rbx+rbx*4],dh
   14000a25a:	(bad)  
   14000a25b:	lods   eax,DWORD PTR ds:[rsi]
   14000a25c:	mov    dh,0x4f
   14000a25e:	movabs ds:0xcb9f5cb4fb6ed2e9,eax
   14000a267:	xlat   BYTE PTR ds:[rbx]
   14000a268:	ja     0x14000a2db
   14000a26a:	fld    QWORD PTR [rax-0x1dd1e83a]
   14000a270:	sti    
   14000a271:	and    ebp,esi
   14000a273:	jp     0x14000a290
   14000a275:	(bad)  
   14000a276:	or     BYTE PTR [rsi+0x67],ah
   14000a279:	retf   0x9638
   14000a27c:	shr    esp,0x5c
   14000a27f:	sbb    edi,eax
   14000a281:	xor    bl,BYTE PTR [rcx+0x5e]
   14000a284:	(bad)  
   14000a285:	ret    0xc34
   14000a288:	mov    gs,WORD PTR [rip+0xe18634f]        # 0x14e1905dd
   14000a28e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a28f:	(bad)  
   14000a290:	(bad)  
   14000a291:	(bad)  
   14000a292:	(bad)
   14000a295:	pop    rsi
   14000a296:	push   0x36
   14000a298:	fwait
   14000a299:	sub    QWORD PTR [rcx+0x5d],rsi
   14000a29d:	(bad)  
   14000a29e:	push   rbp
   14000a29f:	(bad)  
   14000a2a0:	pop    rdx
   14000a2a1:	lods   eax,DWORD PTR ds:[rsi]
   14000a2a2:	(bad)  
   14000a2a3:	mov    esi,0xbab373ef
   14000a2a8:	rex.WRXB sbb BYTE PTR [r14-0x6bae142c],r8b
   14000a2af:	movsxd esp,DWORD PTR [rcx-0x7ef7bfb0]
   14000a2b5:	fistp  DWORD PTR gs:[rax+0x3b6389a6]
   14000a2bc:	xchg   ecx,eax
   14000a2bd:	fisub  DWORD PTR [rcx-0x25]
   14000a2c0:	in     al,0x1c
   14000a2c2:	(bad)  
   14000a2c3:	ret    
   14000a2c4:	xor    al,0x29
   14000a2c6:	adc    al,0xa
   14000a2c8:	and    ecx,DWORD PTR [rsi-0x649b3e1a]
   14000a2ce:	and    al,BYTE PTR [rip+0xffffffffe0aa4489]        # 0x120aae75d
   14000a2d4:	je     0x14000a31d
   14000a2d6:	add    eax,0x2922b569
   14000a2db:	enter  0xbcf3,0xf8
   14000a2df:	enter  0x7e87,0xe9
   14000a2e3:	fldenv [rdi+0x77dbfa9f]
   14000a2e9:	in     al,0xe6
   14000a2eb:	jg     0x14000a2f3
   14000a2ed:	push   0xffffffffd5a0006c
   14000a2f2:	outs   dx,BYTE PTR ds:[rsi]
   14000a2f3:	jg     0x14000a2db
   14000a2f5:	fcmovbe st,st(5)
   14000a2f7:	rex.WXB (bad) 
   14000a2fa:	clc    
   14000a2fb:	movsxd ecx,DWORD PTR [rdi+0x2d7d7eb0]
   14000a301:	(bad)  
   14000a303:	(bad)  
   14000a305:	movabs eax,ds:0xffbfcdfb9fd9f99f
   14000a30e:	sbb    DWORD PTR [rdi],0xf76d9f39
   14000a314:	out    0x15,al
   14000a316:	sub    BYTE PTR [rsi+0x4a],0xfa
   14000a31a:	shl    DWORD PTR [rdi+0x20ceb1d1],cl
   14000a320:	rex out dx,eax
   14000a322:	jne    0x14000a2e1
   14000a324:	fbstp  TBYTE PTR [rbx]
   14000a326:	(bad)  
   14000a327:	(bad)  
   14000a328:	mov    esi,0x814a9767
   14000a32d:	(bad)  
   14000a32e:	test   eax,0x4b279ffa
   14000a333:	mov    ecx,0x297c8e62
   14000a338:	(bad)  
   14000a339:	and    DWORD PTR [rax-0xbbbfa9d],ecx
   14000a33f:	cmp    DWORD PTR [rsi-0x6adffbd6],edx
   14000a345:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a346:	pop    rdx
   14000a347:	ins    DWORD PTR es:[rdi],dx
   14000a348:	adc    DWORD PTR [rcx+riz*1-0x3db20485],eax
   14000a34f:	push   rax
   14000a350:	jno    0x14000a337
   14000a352:	cli    
   14000a353:	(bad)  
   14000a354:	rex.WX imul rdi,QWORD PTR [rsi],0x684b95ff
   14000a35b:	or     eax,0x940d7b7b
   14000a360:	ror    BYTE PTR [rdi+rcx*2-0x69],cl
   14000a364:	enter  0x4ce7,0x2a
   14000a368:	xchg   ebp,eax
   14000a369:	add    dl,BYTE PTR [rbp-0x46b571ae]
   14000a36f:	shl    BYTE PTR [rcx+rbp*1-0x39],0xec
   14000a374:	je     0x14000a307
   14000a376:	(bad)
   14000a37b:	and    dl,BYTE PTR [rbp-0x417818e]
   14000a381:	push   rdi
   14000a382:	stos   DWORD PTR es:[rdi],eax
   14000a383:	xchg   ecx,eax
   14000a384:	pop    rbp
   14000a385:	scas   al,BYTE PTR es:[rdi]
   14000a386:	push   rsi
   14000a387:	stos   DWORD PTR es:[rdi],eax
   14000a388:	and    DWORD PTR [rbp-0x1f972e5c],esp
   14000a38e:	jns    0x14000a3ae
   14000a390:	int    0x46
   14000a392:	popf   
   14000a393:	lods   eax,DWORD PTR ds:[rsi]
   14000a394:	push   rsi
   14000a395:	or     ecx,edi
   14000a397:	imul   DWORD PTR [rcx+0x35]
   14000a39a:	and    eax,DWORD PTR [rcx]
   14000a39c:	scas   al,BYTE PTR es:[rdi]
   14000a39d:	push   rsp
   14000a39e:	sub    ah,BYTE PTR [rcx]
   14000a3a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a3a1:	movabs ds:0xc30142850022a58,al
   14000a3aa:	xchg   ebx,eax
   14000a3ab:	jl     0x14000a3db
   14000a3ad:	xchg   DWORD PTR [rbp+0x59],esp
   14000a3b0:	fmul   DWORD PTR [rsi-0x237b0e6d]
   14000a3b6:	(bad)  
   14000a3b7:	stc    
   14000a3b8:	jle    0x14000a37a
   14000a3ba:	cli    
   14000a3bb:	mov    BYTE PTR [rsi],0x0
   14000a3be:	jnp    0x14000a37b
   14000a3c0:	mov    ebx,0x6fe01940
   14000a3c5:	add    DWORD PTR [rbx],edx
   14000a3c7:	add    al,bh
   14000a3c9:	mov    bl,0x46
   14000a3cb:	in     eax,dx
   14000a3cc:	push   rsi
   14000a3cd:	jmp    0x14000a3f6
   14000a3cf:	jmp    rsp
   14000a3d1:	jae    0x14000a432
   14000a3d3:	jp     0x14000a3cc
   14000a3d5:	jg     0x14000a3d4
   14000a3d7:	jge    0x14000a3b8
   14000a3d9:	push   rdi
   14000a3da:	jns    0x14000a3ce
   14000a3dc:	mov    DWORD PTR [rdi-0x581b013],eax
   14000a3e2:	mov    bl,0x4b
   14000a3e4:	rex.WX test rax,0x3fd3f97f
   14000a3ea:	repz (bad) 
   14000a3ec:	(bad)  
   14000a3ed:	(bad)  
   14000a3ee:	(bad)
   14000a3f1:	mov    ebp,0xfe6cd5a7
   14000a3f6:	push   rbp
   14000a3f7:	fcomip st,st(7)
   14000a3f9:	(bad)  
   14000a3fa:	cli    
   14000a3fb:	data16 (bad) 
   14000a3fd:	(bad)  
   14000a3fe:	nop
   14000a3ff:	jb     0x14000a46a
   14000a401:	(bad)  
   14000a402:	mov    bl,0xc6
   14000a404:	pushf  
   14000a405:	(bad)  
   14000a406:	jp     0x14000a396
   14000a408:	jmp    0x14000a3c8
   14000a40a:	push   rsi
   14000a40c:	not    DWORD PTR [rbx+0x22c930d0]
   14000a412:	push   rdx
   14000a413:	(bad)  
   14000a414:	xor    al,0x21
   14000a416:	or     BYTE PTR [rsp+rbp*1-0x33377c0d],0x5b
   14000a41e:	cmp    dl,al
   14000a420:	movabs eax,ds:0x2471770434c45538
   14000a429:	xchg   edx,eax
   14000a42a:	cs xor al,0x58
   14000a42d:	data16 movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a42f:	out    0x5b,eax
   14000a431:	xchg   cl,al
   14000a433:	pop    rsi
   14000a434:	mov    ch,0x19
   14000a436:	fldcw  WORD PTR [rcx]
   14000a438:	push   0xffffffffffffff91
   14000a43a:	mov    ebp,0xe2d6af62
   14000a43f:	out    0x76,al
   14000a441:	cmp    DWORD PTR [rdx+0x63],0xd
   14000a445:	iret   
   14000a446:	or     ebp,DWORD PTR [rax-0x4a]
   14000a449:	cmp    al,0xda
   14000a44b:	ins    DWORD PTR es:[rdi],dx
   14000a44c:	lahf   
   14000a44d:	rex.X in al,dx
   14000a44f:	cmc    
   14000a450:	jo     0x14000a46e
   14000a452:	mov    eax,ebp
   14000a454:	stc    
   14000a455:	xor    dh,BYTE PTR [rsi+0x5f34b265]
   14000a45b:	movabs eax,ds:0x9a53332d9b98b790
   14000a464:	(bad)  
   14000a465:	imul   esp,DWORD PTR [rcx-0x5b678bce],0x356ad494
   14000a46f:	add    dh,dh
   14000a471:	div    dh
   14000a473:	nop
   14000a474:	push   rdx
   14000a475:	mov    dl,0xbf
   14000a477:	pop    rdi
   14000a478:	rex.RB retf 0xad90
   14000a47c:	lods   eax,DWORD PTR ds:[rsi]
   14000a47d:	rex.WRB (bad) 
   14000a47f:	and    BYTE PTR [rax-0x746e952b],ah
   14000a485:	in     eax,dx
   14000a486:	adc    cl,BYTE PTR [rcx]
   14000a488:	xchg   rsp,rax
   14000a48a:	rex.WX
   14000a48b:	add    BYTE PTR gs:[rsi+0x67],ah
   14000a48f:	addr32 mov ebx,0x76dda1c0
   14000a495:	xor    ebp,ecx
   14000a497:	rex.W (bad) 
   14000a499:	pop    rcx
   14000a49a:	(bad)  
   14000a49c:	and    BYTE PTR [rdi-0x67745171],bl
   14000a4a2:	push   QWORD PTR [rax-0x2e]
   14000a4a5:	fadd   DWORD PTR [rax]
   14000a4a7:	ror    BYTE PTR [rdi+0x3f87e07e],0xf9
   14000a4ae:	sar    DWORD PTR [rdi],cl
   14000a4b0:	sti    
   14000a4b1:	repz mov edi,0x7c2fd9f2
   14000a4b7:	cmc    
   14000a4b8:	out    dx,eax
   14000a4b9:	mov    edi,0x89b791fd
   14000a4be:	out    dx,eax
   14000a4bf:	std    
   14000a4c0:	scas   al,BYTE PTR es:[rdi]
   14000a4c1:	mov    esp,0xfe3fe9fd
   14000a4c6:	xchg   ebx,eax
   14000a4c7:	out    dx,eax
   14000a4c8:	test   al,0xd6
   14000a4ca:	pop    rbx
   14000a4cb:	(bad)  
   14000a4cc:	iret   
   14000a4cd:	int    0xcd
   14000a4cf:	sbb    edx,DWORD PTR [rbp+0x5eae4aa9]
   14000a4d5:	lods   eax,DWORD PTR ds:[rsi]
   14000a4d6:	jge    0x14000a4dd
   14000a4d8:	int    0x6a
   14000a4da:	out    dx,eax
   14000a4db:	mov    ch,0x5a
   14000a4dd:	imul   esi,esi,0xffffffb7
   14000a4e0:	ss fcomp st(1)
   14000a4e3:	mov    eax,0x76f7d46
   14000a4e8:	retf   
   14000a4e9:	mov    dl,0x99
   14000a4eb:	(bad)  
   14000a4ec:	pop    rdi
   14000a4ed:	(bad)  
   14000a4ef:	call   0x17353ef3d
   14000a4f4:	fist   WORD PTR [rax-0x33be219]
   14000a4fa:	jge    0x14000a4c3
   14000a4fc:	xor    esp,edi
   14000a4fe:	(bad)  
   14000a4ff:	adc    al,0x30
   14000a501:	adc    al,BYTE PTR [rax+0x11]
   14000a504:	rex.XB cli 
   14000a506:	call   0x14c1a4f74
   14000a50b:	(bad)  
   14000a50c:	pop    rdx
   14000a50d:	rex.XB test al,0x15
   14000a510:	sbb    cl,BYTE PTR [rax+0x3afb9ea3]
   14000a516:	rol    DWORD PTR [rax],cl
   14000a518:	xchg   BYTE PTR [rcx+0x14b1cc5d],al
   14000a51e:	stos   DWORD PTR es:[rdi],eax
   14000a51f:	(bad)  
   14000a520:	add    dl,BYTE PTR [rdx-0x9]
   14000a523:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a524:	sbb    DWORD PTR [rdi],eax
   14000a526:	and    DWORD PTR [rcx],ebx
   14000a528:	xchg   al,al
   14000a52a:	jae    0x14000a5a9
   14000a52c:	sbb    dh,BYTE PTR [rcx-0x5c70adf6]
   14000a532:	adc    BYTE PTR [rdi],ch
   14000a534:	pop    rsp
   14000a535:	(bad)  [rcx-0x7d92e143]
   14000a53b:	push   rax
   14000a53c:	push   rdx
   14000a53d:	lods   eax,DWORD PTR ds:[rsi]
   14000a53e:	mov    dh,0x30
   14000a540:	or     eax,0x47cc2c1
   14000a545:	add    al,0xab
   14000a547:	retf   
   14000a548:	ror    DWORD PTR [rax],cl
   14000a54a:	and    DWORD PTR [rax+0x59],ebx
   14000a54d:	pushf  
   14000a54e:	and    ch,bh
   14000a550:	pop    rax
   14000a551:	int3   
   14000a552:	int    0x95
   14000a554:	cwde   
   14000a555:	lods   eax,DWORD PTR ds:[rsi]
   14000a556:	in     al,0x39
   14000a558:	jbe    0x14000a556
   14000a55a:	rex.R adc al,0xa7
   14000a55d:	xor    DWORD PTR [rsp+rbx*2+0x6ad5a5d7],eax
   14000a564:	adc    DWORD PTR [rcx+rax*1],eax
   14000a567:	sti    
   14000a568:	sti    
   14000a569:	sti    
   14000a56a:	test   BYTE PTR [rcx-0x7484989c],ah
   14000a570:	push   rax
   14000a571:	rex.WX xchg rsi,rax
   14000a573:	xchg   edi,eax
   14000a574:	push   rsi
   14000a575:	add    BYTE PTR [rax],dh
   14000a577:	rex.WR xor rbp,0xffffffffffffff8d
   14000a57b:	or     eax,0x4b32952a
   14000a580:	mov    ecx,DWORD PTR [rbx-0x54150544]
   14000a586:	int3   
   14000a587:	(bad)  
   14000a588:	int    0x71
   14000a58a:	jrcxz  0x14000a552
   14000a58c:	(bad)  
   14000a58d:	sub    ebp,DWORD PTR [rbx]
   14000a58f:	rex.RXB (bad) 
   14000a591:	sbb    ah,cl
   14000a593:	mov    cl,0xa5
   14000a595:	mov    cl,0x1
   14000a597:	add    BYTE PTR [rax],al
   14000a599:	xlat   BYTE PTR ds:[rbx]
   14000a59a:	ins    DWORD PTR es:[rdi],dx
   14000a59b:	call   QWORD PTR [rbx+0x62ff9f17]
   14000a5a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a5a2:	shr    DWORD PTR [rax-0x4],1
   14000a5a5:	int    0x6f
   14000a5a7:	std    
   14000a5a8:	xchg   esi,eax
   14000a5a9:	(bad)  
   14000a5aa:	clc    
   14000a5ab:	(bad)  
   14000a5ac:	inc    dl
   14000a5ae:	ja     0x14000a53b
   14000a5b0:	(bad)  
   14000a5b1:	pop    rdi
   14000a5b2:	ds pop rdi
   14000a5b4:	mov    eax,0x9706e379
   14000a5b9:	(bad)  
   14000a5ba:	pop    rdi
   14000a5bb:	mov    ebx,0x16d6af52
   14000a5c0:	(bad)  
   14000a5c1:	test   eax,0x1b5bfbb0
   14000a5c6:	ins    BYTE PTR es:[rdi],dx
   14000a5c7:	lods   eax,DWORD PTR ds:[rsi]
   14000a5c8:	pop    rbp
   14000a5c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a5ca:	xor    dh,BYTE PTR [rdi-0x7c]
   14000a5cd:	test   eax,0xfb9a55f9
   14000a5d2:	fwait
   14000a5d3:	xor    al,0xab
   14000a5d5:	jnp    0x14000a58b
   14000a5d7:	sbb    dh,BYTE PTR [rbp-0x72]
   14000a5da:	sahf   
   14000a5db:	cmp    edi,eax
   14000a5dd:	(bad)  
   14000a5de:	cld    
   14000a5df:	rol    BYTE PTR [rax-0x1b740a45],cl
   14000a5e5:	sbb    eax,0xefcb483a
   14000a5ea:	cmp    eax,0x8ff30070
   14000a5ef:	rex.X std 
   14000a5f1:	loop   0x14000a5b5
   14000a5f3:	lods   eax,DWORD PTR ds:[rsi]
   14000a5f4:	fwait
   14000a5f5:	(bad)  
   14000a5f6:	outs   dx,BYTE PTR ds:[rsi]
   14000a5f7:	xor    eax,0xedd56e4
   14000a5fc:	push   0x2a
   14000a5fe:	movsxd edi,DWORD PTR [rbx]
   14000a600:	rex.RB cwde 
   14000a602:	cmp    bh,BYTE PTR [rdi]
   14000a604:	hlt    
   14000a605:	movabs al,ds:0xccc382a99b39183f
   14000a60e:	jl     0x14000a615
   14000a610:	ret    
   14000a611:	mov    BYTE PTR [rdi+rcx*1+0x53],dl
   14000a615:	sbb    BYTE PTR [rcx+0x7f0e22cd],dl
   14000a61b:	(bad)  
   14000a61c:	rex.X mov bl,0xb7
   14000a61f:	xlat   BYTE PTR ds:[rbx]
   14000a620:	and    al,0x90
   14000a622:	mov    bl,ch
   14000a624:	popf   
   14000a625:	cmp    dl,BYTE PTR [rdx+0x69]
   14000a628:	pop    rsi
   14000a629:	pop    rdi
   14000a62a:	fild   DWORD PTR [rbx-0x56]
   14000a62d:	cmp    BYTE PTR [rsi-0x2a95d5be],ah
   14000a633:	(bad)  
   14000a634:	rex.WX sub QWORD PTR [rsi+0x1ce40aa6],rsp
   14000a63b:	mov    edi,ecx
   14000a63d:	cdq    
   14000a63e:	adc    bh,cl
   14000a640:	mov    esp,0x8154ecc3
   14000a645:	cdq    
   14000a646:	rex.WX adc QWORD PTR [rdx-0x2f],0x42b16561
   14000a64e:	movabs eax,ds:0xb739f4e5e59ee790
   14000a657:	mov    dh,0x77
   14000a659:	add    BYTE PTR [rax-0x17],bh
   14000a65c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a65d:	scas   eax,DWORD PTR es:[rdi]
   14000a65e:	mov    bl,0xbc
   14000a660:	mov    esp,0x159591c2
   14000a665:	outs   dx,BYTE PTR ss:[rsi]
   14000a667:	fsub   QWORD PTR [rax-0x484fd070]
   14000a66d:	mov    bh,0xcb
   14000a66f:	in     al,dx
   14000a670:	(bad)  
   14000a672:	rol    DWORD PTR [rbx],0x31
   14000a675:	out    0x34,al
   14000a677:	push   rsi
   14000a678:	add    al,dh
   14000a67a:	(bad)  
   14000a67b:	call   rcx
   14000a67d:	(bad)  
   14000a67e:	ins    BYTE PTR es:[rdi],dx
   14000a67f:	jg     0x14000a679
   14000a681:	jmp    0x116e1a165
   14000a686:	lea    esi,[rbp+0x13f67f6f]
   14000a68c:	(bad)  
   14000a68d:	ror    DWORD PTR [rdi],cl
   14000a68f:	cmp    eax,0x78ef2f70
   14000a694:	sti    
   14000a695:	movabs ds:0x3d5e97f5f52d5ab4,eax
   14000a69e:	mov    ecx,0x2fa1beb6
   14000a6a3:	pop    rdi
   14000a6a4:	mov    ecx,0xc145aa89
   14000a6a9:	xor    DWORD PTR [rsi+0x6e],edx
   14000a6ac:	or     ch,BYTE PTR [rbp-0x28]
   14000a6af:	in     al,dx
   14000a6b0:	ins    BYTE PTR es:[rdi],dx
   14000a6b1:	pop    rsp
   14000a6b2:	movabs ds:0x1df5da6cb4c15534,eax
   14000a6bb:	or     al,0xd3
   14000a6bd:	movabs ds:0xc222f4b8dcb3d34,al
   14000a6c6:	movsxd esp,DWORD PTR [rax]
   14000a6c8:	add    BYTE PTR [rax+0x484ff701],ch
   14000a6ce:	or     al,0xe1
   14000a6d0:	(bad)  
   14000a6d1:	(bad)  
   14000a6d2:	movabs ds:0xf2dffab68c7380e2,eax
   14000a6db:	(bad)  
   14000a6dc:	ffree  st(7)
   14000a6de:	push   rbx
   14000a6df:	icebp  
   14000a6e0:	call   QWORD PTR [rsi-0x63]
   14000a6e3:	(bad)  
   14000a6e4:	sbb    DWORD PTR [rdi],0x17bcd96f
   14000a6ea:	sub    al,0x94
   14000a6ec:	(bad)  
   14000a6ed:	sub    BYTE PTR [rcx],bh
   14000a6ef:	shl    bl,0xd1
   14000a6f2:	repz pop r8
   14000a6f5:	(bad)  
   14000a6f6:	mov    ecx,0x4291c19c
   14000a6fb:	(bad)  
   14000a6fc:	retf   
   14000a6fd:	xor    al,0x38
   14000a6ff:	jne    0x14000a77b
   14000a701:	mov    ecx,0x7fa476a3
   14000a706:	add    eax,0xe5e45ab5
   14000a70b:	test   al,0xc6
   14000a70d:	jg     0x14000a786
   14000a70f:	push   0x6d
   14000a711:	(bad)  
   14000a712:	imul   ebp,DWORD PTR ss:[rcx-0x4912e26],0xffffffb8
   14000a71a:	scas   al,BYTE PTR es:[rdi]
   14000a71b:	rex.WRXB
   14000a71c:	ds addr32 push rbx
   14000a71f:	sub    edi,esp
   14000a721:	stc    
   14000a722:	sahf   
   14000a723:	(bad)  
   14000a724:	xchg   edi,eax
   14000a725:	cmp    DWORD PTR [rdx-0xc],edi
   14000a728:	sub    bh,dh
   14000a72a:	(bad)  
   14000a72c:	add    BYTE PTR [rdi],ch
   14000a72e:	mov    ebp,0x629675f4
   14000a733:	imul   esp,DWORD PTR [rax+0x42],0x158d11
   14000a73a:	(bad)  
   14000a73b:	leave  
   14000a73c:	rex (bad) 
   14000a73e:	jle    0x14000a72c
   14000a740:	sbb    eax,0xfd7d3aef
   14000a745:	ficom  DWORD PTR [rbp-0xcc07023]
   14000a74b:	mov    WORD PTR [rbx-0x31af4b44],?
   14000a751:	in     eax,0x8b
   14000a753:	cmp    al,0xfa
   14000a755:	clc    
   14000a756:	mov    ebx,0xc7e3b1f4
   14000a75b:	ja     0x14000a77c
   14000a75d:	mov    eax,0xbdbf36af
   14000a762:	mov    bl,0xcb
   14000a764:	out    dx,al
   14000a765:	test   BYTE PTR [rbp-0x52],0xad
   14000a769:	mov    ebp,0xece4c688
   14000a76e:	stos   BYTE PTR es:[rdi],al
   14000a76f:	or     DWORD PTR [rdx],0x701148ab
   14000a775:	loop   0x14000a6ff
   14000a777:	fs jno 0x14000a7eb
   14000a77a:	add    ebx,edx
   14000a77c:	xor    cl,bh
   14000a77e:	mov    esp,0xd6c6e55e
   14000a783:	fsubrp st(0),st
   14000a785:	fwait
   14000a786:	sbb    eax,0xe1a15c0
   14000a78b:	mov    WORD PTR [rcx-0x2026662c],?
   14000a791:	stos   DWORD PTR es:[rdi],eax
   14000a792:	cvttps2dq xmm1,XMMWORD PTR [rcx+0x6f]
   14000a797:	neg    DWORD PTR [rcx]
   14000a799:	fiadd  WORD PTR [rax-0x4d]
   14000a79c:	sub    DWORD PTR [rdi],0x38
   14000a79f:	lock jge 0x14000a79d
   14000a7a2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a7a3:	cwde   
   14000a7a4:	push   rcx
   14000a7a5:	lock rex.RB hlt 
   14000a7a8:	jl     0x14000a7f9
   14000a7aa:	(bad)  
   14000a7ab:	scas   eax,DWORD PTR es:[rdi]
   14000a7ac:	(bad)  
   14000a7ad:	mov    WORD PTR [rbp+0x73],ss
   14000a7b0:	rcr    al,1
   14000a7b2:	cwde   
   14000a7b3:	cmp    DWORD PTR [rdi-0x6dd8da07],eax
   14000a7b9:	and    BYTE PTR [rdx+0x49],ah
   14000a7bc:	ret    0x6010
   14000a7bf:	or     BYTE PTR [rbx],ah
   14000a7c1:	xchg   esi,eax
   14000a7c2:	xor    bh,BYTE PTR [rdx]
   14000a7c4:	cmp    eax,0x9fd3faff
   14000a7c9:	out    0x2f,al
   14000a7cb:	jg     0x14000a7e4
   14000a7cd:	sbb    al,0x3d
   14000a7cf:	jp     0x14000a7e5
   14000a7d1:	cmp    al,dh
   14000a7d3:	cmp    DWORD PTR [esp+esi*1+0x4a100056],edx
   14000a7db:	stc    
   14000a7dc:	pop    rbx
   14000a7dd:	(bad)  
   14000a7de:	push   rsi
   14000a7df:	push   rdi
   14000a7e0:	lahf   
   14000a7e1:	int3   
   14000a7e2:	cmp    DWORD PTR [rsi-0x15],ecx
   14000a7e5:	(bad)  
   14000a7e6:	repz (bad) 
   14000a7e8:	ss scas eax,DWORD PTR es:[rdi]
   14000a7ea:	scas   eax,DWORD PTR es:[rdi]
   14000a7eb:	lods   eax,DWORD PTR ds:[rsi]
   14000a7ec:	fnstsw WORD PTR [rbx-0x17]
   14000a7ef:	cmc    
   14000a7f0:	xlat   BYTE PTR ds:[rbx]
   14000a7f1:	(bad)  
   14000a7f2:	rex.WR
   14000a7f3:	rex.WRXB
   14000a7f4:	rex.WRXB fucomi st,st(3)
   14000a7f7:	jmp    0x14000a814
   14000a7f9:	(bad)  
   14000a7fa:	mov    al,BYTE PTR [rbp+0x47e1f17c]
   14000a800:	(bad)  
   14000a801:	shl    DWORD PTR [rsi-0x426131d3],0x9b
   14000a808:	mov    ebx,0xa3bbeef
   14000a80d:	jbe    0x14000a7c0
   14000a80f:	lods   al,BYTE PTR ds:[rsi]
   14000a810:	pop    rax
   14000a811:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a812:	(bad)  
   14000a813:	call   0x19c9c35fe
   14000a818:	pop    rbp
   14000a819:	fbld   TBYTE PTR [rbx]
   14000a81b:	nop
   14000a81c:	movabs al,ds:0x4690d43123cac806
   14000a825:	mov    edx,0xf7774be7
   14000a82a:	movabs ds:0x1f34f07ddca303a8,eax
   14000a833:	data16 cld 
   14000a835:	mov    ebx,0xd9061de5
   14000a83a:	add    DWORD PTR [rsi],ecx
   14000a83c:	js     0x14000a7d8
   14000a83e:	push   rcx
   14000a83f:	cmp    eax,0x7b43bd22
   14000a844:	adc    dh,ch
   14000a846:	fs fwait
   14000a848:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000a84a:	nop
   14000a84b:	je     0x14000a850
   14000a84d:	(bad)
   14000a850:	cs rex.WRX adc rax,0xffffffffffdfebf9
   14000a857:	pop    rsi
   14000a858:	jle    0x14000a849
   14000a85a:	and    ebx,DWORD PTR [rdi-0x4202e01a]
   14000a860:	xchg   DWORD PTR [rdx],esp
   14000a862:	outs   dx,DWORD PTR ds:[rsi]
   14000a863:	leave  
   14000a864:	add    al,0x1
   14000a866:	mov    edx,0x20006c68
   14000a86b:	rex.WRX (bad) 
   14000a86d:	jp     0x14000a85e
   14000a86f:	shl    DWORD PTR [rbx-0x39],1
   14000a872:	imul   ecx,edi,0x3e
   14000a875:	test   DWORD PTR [rdi-0x2],0xbe5e17eb
   14000a87c:	(bad)  
   14000a87d:	rex.WB (bad) 
   14000a87f:	pop    rdx
   14000a880:	pop    rcx
   14000a881:	pop    rcx
   14000a882:	mov    ecx,0x5f4bcafc
   14000a887:	jg     0x14000a829
   14000a889:	push   rsp
   14000a88a:	test   eax,0x2ed7edfc
   14000a88f:	lods   eax,DWORD PTR ds:[rsi]
   14000a890:	mov    ebp,0x36c132df
   14000a895:	shl    DWORD PTR [rbx+rdi*1],0xe5
   14000a899:	mov    ebp,0x46bd4c92
   14000a89e:	and    ecx,edx
   14000a8a0:	(bad)  
   14000a8a1:	rcr    DWORD PTR [rdx],cl
   14000a8a3:	scas   al,BYTE PTR es:[rdi]
   14000a8a4:	pop    rsi
   14000a8a5:	ja     0x14000a8e0
   14000a8a7:	jle    0x14000a880
   14000a8a9:	and    bh,al
   14000a8ab:	rcr    DWORD PTR [rbx],0x73
   14000a8ae:	div    BYTE PTR es:[rdx]
   14000a8b1:	jg     0x14000a8aa
   14000a8b3:	shl    ecx,0xcc
   14000a8b6:	(bad)  
   14000a8b7:	pop    rax
   14000a8b8:	cmp    eax,0xdc55fe18
   14000a8bd:	adc    cl,BYTE PTR [rax-0x7a]
   14000a8c0:	or     esp,ebp
   14000a8c2:	rex.XB (bad) 
   14000a8c4:	mov    eax,0x95e034a3
   14000a8c9:	xchg   DWORD PTR [rbx-0x431f95ad],eax
   14000a8cf:	cmc    
   14000a8d0:	xor    ebp,0xffffffbe
   14000a8d3:	(bad)  
   14000a8d4:	push   rsi
   14000a8d5:	lods   eax,DWORD PTR ds:[rsi]
   14000a8d6:	(bad)
   14000a8d9:	shl    dh,0x76
   14000a8dc:	jne    0x14000a946
   14000a8de:	mov    es,ebx
   14000a8e0:	(bad)  
   14000a8e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a8e2:	mov    cl,0x1
   14000a8e4:	add    bh,dl
   14000a8e6:	ins    DWORD PTR es:[rdi],dx
   14000a8e7:	push   rdx
   14000a8e9:	pop    rbp
   14000a8ea:	ja     0x14000a889
   14000a8ec:	fidivr WORD PTR [rsi+0x7b31b6bc]
   14000a8f2:	loope  0x14000a889
   14000a8f4:	(bad)  
   14000a8f5:	jae    0x14000a895
   14000a8f7:	out    0xb7,eax
   14000a8f9:	jmp    0x14000a8f0
   14000a8fb:	(bad)  
   14000a8fd:	cld    
   14000a8fe:	mov    cl,0x8f
   14000a900:	(bad)  
   14000a901:	(bad)  
   14000a902:	xlat   BYTE PTR ds:[rbx]
   14000a903:	(bad)  
   14000a904:	not    cl
   14000a906:	fild   WORD PTR [rdi]
   14000a908:	clc    
   14000a909:	cmp    al,0xf0
   14000a90b:	stc    
   14000a90c:	jmp    rcx
   14000a90e:	out    dx,eax
   14000a90f:	cld    
   14000a910:	(bad)  
   14000a911:	sti    
   14000a912:	retf   
   14000a913:	mov    edx,ebx
   14000a915:	xor    al,0xbc
   14000a917:	sbb    ah,BYTE PTR [rcx-0x55]
   14000a91a:	or     DWORD PTR [rdx+rbx*8],0x56976df8
   14000a921:	xor    eax,DWORD PTR [rax+0x2b]
   14000a924:	lahf   
   14000a925:	jmp    0x116950f03
   14000a92a:	in     al,dx
   14000a92b:	in     eax,dx
   14000a92c:	ins    BYTE PTR es:[rdi],dx
   14000a92d:	push   rbx
   14000a92e:	cwde   
   14000a92f:	pop    rcx
   14000a930:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a931:	mov    eax,0x3f0dec70
   14000a936:	push   rbx
   14000a937:	and    ah,dh
   14000a939:	(bad)  
   14000a93a:	mov    esp,0x540ea2
   14000a93f:	cli    
   14000a940:	mov    edi,0xba4182df
   14000a945:	(bad)  
   14000a946:	lea    ebp,[rax-0x20]
   14000a949:	jmp    0x14000a8fe
   14000a94b:	push   rbp
   14000a94c:	sbb    al,0xc8
   14000a94e:	movsxd ebp,DWORD PTR [rdi+0x50]
   14000a951:	adc    bl,BYTE PTR [rdx]
   14000a953:	add    DWORD PTR [rsi-0x3c90ac66],0xd36d99c0
   14000a95d:	(bad)  
   14000a95e:	pop    rcx
   14000a95f:	mov    esp,0x67f6a005
   14000a964:	xchg   ebp,eax
   14000a965:	mov    BYTE PTR [rsi],0x0
   14000a968:	mov    eax,0xbb20648d
   14000a96d:	xor    BYTE PTR [rbp-0x4a5f5063],al
   14000a973:	add    ch,BYTE PTR [rbp-0xa25972f]
   14000a979:	sub    bh,bl
   14000a97b:	pop    rbx
   14000a97c:	fld    TBYTE PTR [rbp+rbp*2+0x6e]
   14000a980:	add    BYTE PTR [rax+0x421f6793],0x14
   14000a987:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a988:	cdq    
   14000a989:	pop    rbx
   14000a98a:	pop    rdx
   14000a98b:	in     al,dx
   14000a98c:	out    dx,eax
   14000a98d:	movabs al,ds:0x3f0dbb72b7697c7
   14000a996:	or     ebp,0xffffff82
   14000a999:	movabs ds:0x21408304ed43d1ea,eax
   14000a9a2:	stc    
   14000a9a3:	fucomi st,st(3)
   14000a9a5:	jne    0x14000a9b7
   14000a9a7:	fisttp QWORD PTR [rip+0xffffffff8095f586]        # 0xc0969f33
   14000a9ad:	(bad)
   14000a9b0:	cmp    eax,DWORD PTR [rax-0x56]
   14000a9b3:	cmp    BYTE PTR [rax-0x7700cdfa],al
   14000a9b9:	jbe    0x14000a985
   14000a9bb:	add    edi,DWORD PTR [rdx]
   14000a9bd:	popf   
   14000a9be:	ror    BYTE PTR [rax+0x30004e34],1
   14000a9c4:	push   rdx
   14000a9c5:	xor    dl,BYTE PTR [rax-0x47]
   14000a9c8:	xor    cl,BYTE PTR [rbx-0x57]
   14000a9cb:	xor    cl,BYTE PTR [rbp+0x18]
   14000a9ce:	(bad)  
   14000a9cf:	enter  0x4430,0xc9
   14000a9d3:	adc    BYTE PTR [rbp+0x599a515],ah
   14000a9d9:	out    0x8f,al
   14000a9db:	pushf  
   14000a9dc:	in     al,dx
   14000a9dd:	mov    ah,0x9b
   14000a9df:	(bad)  
   14000a9e0:	out    dx,al
   14000a9e1:	(bad)  
   14000a9e2:	mov    bh,al
   14000a9e4:	pop    rdi
   14000a9e5:	and    esi,esp
   14000a9e7:	xor    BYTE PTR [rbx+0x7f],bh
   14000a9ea:	ja     0x14000aa47
   14000a9ec:	and    DWORD PTR [rsi],eax
   14000a9ee:	lods   eax,DWORD PTR ds:[rsi]
   14000a9ef:	rex.X fld QWORD PTR [rdi]
   14000a9f2:	(bad)  
   14000a9f3:	rex.WX or bpl,BYTE PTR [rcx-0x2d]
   14000a9f7:	outs   dx,DWORD PTR ds:[rsi]
   14000a9f8:	loopne 0x14000a986
   14000a9fa:	(bad)  
   14000a9fb:	rcr    DWORD PTR [rbx],1
   14000a9fd:	rcr    BYTE PTR [rbx],1
   14000a9ff:	movsxd esi,DWORD PTR [rax]
   14000aa01:	(bad)  
   14000aa02:	(bad)  [rax+0x301048f5]
   14000aa08:	adc    al,0x7
   14000aa0a:	fnstsw ax
   14000aa0c:	stos   DWORD PTR es:[rdi],eax
   14000aa0d:	(bad)  
   14000aa0e:	cmp    al,0x44
   14000aa10:	sbb    eax,edx
   14000aa12:	sar    DWORD PTR [rdx],cl
   14000aa14:	add    eax,0x4a3e28c1
   14000aa19:	(bad)  
   14000aa1a:	push   0x9
   14000aa1c:	(bad)  
   14000aa1d:	ins    BYTE PTR es:[rdi],dx
   14000aa1e:	add    BYTE PTR [rax-0x2c],ah
   14000aa21:	fs and bl,cl
   14000aa24:	jbe    0x14000aa4e
   14000aa26:	xchg   esp,eax
   14000aa27:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000aa28:	out    dx,al
   14000aa29:	enter  0xf3d,0x8a
   14000aa2d:	add    al,0xe8
   14000aa2f:	(bad)  
   14000aa30:	rol    DWORD PTR [rdi],cl
   14000aa32:	vshufps ymm4,ymm0,YMMWORD PTR [rax+riz*2-0x451b550],0x81
   14000aa3c:	and    bh,BYTE PTR [rbx-0x7d]
   14000aa3f:	(bad)  [rcx-0x2f]
   14000aa42:	lea    ebp,[rdx+0x4]
   14000aa45:	in     al,dx
   14000aa46:	jle    0x14000a9f0
   14000aa48:	sahf   
   14000aa49:	rex.WRX (bad) 
   14000aa4b:	mov    edx,0xd11208e7
   14000aa50:	lods   eax,DWORD PTR ds:[rsi]
   14000aa51:	iret   
   14000aa52:	fistp  QWORD PTR [rcx+0x6e]
   14000aa55:	int3   
   14000aa56:	imul   BYTE PTR [rax+0x3b6b8ea4]
   14000aa5c:	(bad)  
   14000aa5d:	xchg   edx,eax
   14000aa5e:	push   rcx
   14000aa5f:	popf   
   14000aa60:	(bad)  
   14000aa61:	test   al,0x4a
   14000aa63:	shl    ecx,cl
   14000aa65:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aa66:	cmp    edx,DWORD PTR [rbx+0x9ff9c7]
   14000aa6c:	(bad)
   14000aa6f:	hlt    
   14000aa70:	and    al,0x3
   14000aa72:	jge    0x14000aa37
   14000aa74:	rex.W psubb mm0,QWORD PTR [rdi-0x31]
   14000aa79:	out    0x4e,eax
   14000aa7b:	jrcxz  0x14000aa75
   14000aa7d:	test   al,0xee
   14000aa7f:	pop    rbp
   14000aa80:	(bad)  
   14000aa81:	adc    bl,BYTE PTR [rcx+0x22]
   14000aa84:	cmp    edi,ebx
   14000aa86:	frstor [rcx-0x62ec8fe2]
   14000aa8c:	cld    
   14000aa8d:	jmp    0x14000aa48
   14000aa8f:	iret   
   14000aa90:	movabs al,ds:0x3a778b72cf018167
   14000aa99:	call   0xd6f02c60
   14000aa9e:	imul   ebp,DWORD PTR [rbp+rdx*8-0x17c6f880],0xd17b7a9d
   14000aaa9:	jp     0x14000aa8b
   14000aaab:	cmp    ebx,esp
   14000aaad:	mov    dl,0xd3
   14000aaaf:	add    DWORD PTR [rdi+0x75],edx
   14000aab2:	jge    0x14000aacf
   14000aab4:	add    eax,0x8d290ebc
   14000aab9:	or     eax,0x40c9c400
   14000aabe:	cmp    al,0xfe
   14000aac0:	fsub   DWORD PTR [rbx]
   14000aac2:	fdivr  st(7),st
   14000aac4:	rol    BYTE PTR [rbx-0x2f03b95f],0xcf
   14000aacb:	cld    
   14000aacc:	in     al,dx
   14000aacd:	iret   
   14000aace:	popf   
   14000aacf:	sti    
   14000aad0:	xchg   ah,bl
   14000aad2:	lods   al,BYTE PTR ds:[rsi]
   14000aad3:	lahf   
   14000aad4:	push   rdi
   14000aad5:	rol    DWORD PTR [rbx+rcx*1+0x66],1
   14000aad9:	cli    
   14000aada:	mov    ebp,0x71875987
   14000aadf:	xlat   BYTE PTR ds:[rbx]
   14000aae0:	mov    al,0x89
   14000aae2:	scas   al,BYTE PTR es:[rdi]
   14000aae3:	sti    
   14000aae4:	add    BYTE PTR [rbx-0x10],ah
   14000aae7:	jae    0x14000ab05
   14000aae9:	or     BYTE PTR [rcx+rbx*8],dl
   14000aaec:	addr32 jmp 0x14000ab50
   14000aaef:	scas   al,BYTE PTR es:[rdi]
   14000aaf0:	shl    BYTE PTR [rip+0x756ea1e4],0xf8        # 0x1b56f4cdc
   14000aaf8:	(bad)  
   14000aaf9:	ror    DWORD PTR [rax-0x24c5c2c4],cl
   14000aaff:	rex.RXB popf 
   14000ab01:	(bad)  
   14000ab02:	adc    DWORD PTR [rcx-0x3a42f91],0xffffff99
   14000ab09:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ab0a:	mov    cl,0x51
   14000ab0c:	add    DWORD PTR [rsi+0x4e],eax
   14000ab0f:	(bad)  
   14000ab10:	mov    edx,0x6f7fbf53
   14000ab15:	(bad)  
   14000ab16:	(bad)  
   14000ab17:	enter  0xf8f1,0xe0
   14000ab1b:	ins    DWORD PTR es:[rdi],dx
   14000ab1c:	scas   eax,DWORD PTR es:[rdi]
   14000ab1d:	(bad)  
   14000ab1e:	(bad)  
   14000ab1f:	pop    rbp
   14000ab20:	xor    BYTE PTR [rax+0x45],dh
   14000ab23:	sbb    esi,DWORD PTR [rsp+riz*4-0x1e927176]
   14000ab2a:	cmp    dh,0xf4
   14000ab2d:	movabs al,ds:0x71473bd7e07d6654
   14000ab36:	mov    DWORD PTR [rdi],0xdca327aa
   14000ab3c:	cmp    al,0x69
   14000ab3e:	xor    eax,DWORD PTR [rax+0xd]
   14000ab41:	cdq    
   14000ab42:	mov    al,0xfc
   14000ab44:	jo     0x14000ab60
   14000ab46:	sbb    ecx,DWORD PTR [rcx]
   14000ab48:	loopne 0x14000ab91
   14000ab4a:	(bad)  
   14000ab4b:	lock ret 
   14000ab4d:	lahf   
   14000ab4e:	lods   al,BYTE PTR ds:[rsi]
   14000ab4f:	push   rsi
   14000ab50:	imul   edi,DWORD PTR [rdi+0x7c2fd9f2],0xffffff95
   14000ab57:	and    eax,DWORD PTR [rdi+0x4f]
   14000ab5a:	mov    ebp,edi
   14000ab5c:	std    
   14000ab5d:	scas   al,BYTE PTR es:[rdi]
   14000ab5e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab5f:	mov    bh,0xcb
   14000ab61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ab62:	ret    0x8477
   14000ab65:	mov    dl,BYTE PTR [rdi-0x191919]
   14000ab6b:	(bad)  
   14000ab6c:	repnz xchg ecx,eax
   14000ab6e:	xchg   ebp,eax
   14000ab6f:	out    dx,eax
   14000ab70:	cdq    
   14000ab71:	cdq    
   14000ab72:	cdq    
   14000ab73:	mov    ebp,0xd04d7039
   14000ab78:	(bad)  
   14000ab79:	mov    ebp,0x3e2e75cd
   14000ab7e:	(bad)  
   14000ab7f:	cmp    DWORD PTR [rsi-0x1bc0560e],edi
   14000ab85:	test   edi,ecx
   14000ab87:	cmp    al,0xc7
   14000ab89:	xchg   ebp,eax
   14000ab8a:	xchg   edi,eax
   14000ab8b:	lahf   
   14000ab8c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ab8d:	pop    rcx
   14000ab8e:	fistp  DWORD PTR [rdi]
   14000ab90:	sar    BYTE PTR [rdx],1
   14000ab92:	movabs ds:0x15446679124f9aa4,al
   14000ab9b:	clc    
   14000ab9c:	mov    edx,0xf261f8d5
   14000aba1:	cli    
   14000aba2:	add    DWORD PTR [rbx+rcx*8-0x2b],esi
   14000aba6:	rex.WRX ja 0x14000ab63
   14000aba9:	cmp    dl,BYTE PTR [rax+0x1ae3e3f9]
   14000abaf:	popf   
   14000abb0:	(bad)  
   14000abb1:	scas   al,BYTE PTR es:[rdi]
   14000abb2:	adc    DWORD PTR [rsi+0x198c44d8],edx
   14000abb8:	hlt    
   14000abb9:	rex
   14000abba:	rex.XB out dx,eax
   14000abbc:	rcl    BYTE PTR [rcx],1
   14000abbe:	push   rsi
   14000abbf:	rex.RX (bad) 
   14000abc1:	lods   eax,DWORD PTR ds:[rsi]
   14000abc2:	out    dx,al
   14000abc3:	jrcxz  0x14000ac34
   14000abc5:	(bad)  
   14000abc6:	or     dl,BYTE PTR [rdi-0x76a13bfb]
   14000abcc:	push   0xffffffff80eb6340
   14000abd1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000abd2:	movabs ds:0x3252312356346c3,al
   14000abdb:	or     eax,0x4edbe378
   14000abe0:	(bad)  
   14000abe1:	rcr    BYTE PTR [rdx+0x2d3d6a9d],cl
   14000abe7:	mov    edi,0xf579c46d
   14000abec:	xchg   BYTE PTR [rcx+0x60],ah
   14000abef:	sbb    ah,BYTE PTR [rdx]
   14000abf1:	(bad)  
   14000abf2:	rex.WRB in eax,dx
   14000abf4:	fld    DWORD PTR [rbx]
   14000abf6:	and    BYTE PTR [rcx+0x7fa2ed34],bh
   14000abfc:	jbe    0x14000abdc
   14000abfe:	adc    ah,BYTE PTR [rdi]
   14000ac00:	xor    ah,BYTE PTR [rdi]
   14000ac02:	xchg   DWORD PTR [rip+0xffffffffd735f6cb],eax        # 0x11736a2d3
   14000ac08:	movabs ds:0x62174efe6583bb4,eax
   14000ac11:	popf   
   14000ac12:	out    dx,al
   14000ac13:	sti    
   14000ac14:	xor    cl,BYTE PTR [rdx+0x1c]
   14000ac17:	rex.X (bad) 
   14000ac19:	jmp    0x14000ac8c
   14000ac1b:	sub    esp,esi
   14000ac1d:	mov    edi,0x5777eb03
   14000ac22:	(bad)  
   14000ac23:	xchg   ebx,eax
   14000ac24:	mov    BYTE PTR [rax+0x158d2c],ah
   14000ac2a:	mov    WORD PTR [rsp+rcx*1-0x55d9068c],ss
   14000ac31:	mov    si,0x64a9
   14000ac35:	and    BYTE PTR [rip+0xfffffffff14a55cc],cl        # 0x1314b0207
   14000ac3b:	mov    es,WORD PTR [rcx+0x1a]
   14000ac3e:	test   eax,0xa94228a3
   14000ac43:	and    al,0x41
   14000ac45:	test   al,0x51
   14000ac47:	cmp    ch,BYTE PTR [rdx]
   14000ac49:	sti    
   14000ac4a:	lods   eax,DWORD PTR ds:[rsi]
   14000ac4b:	movabs ds:0xab14469818291d7a,eax
   14000ac54:	outs   dx,BYTE PTR ds:[rsi]
   14000ac55:	add    dx,0xd230
   14000ac5a:	lea    edi,[rdx+rsi*4]
   14000ac5d:	pop    rdx
   14000ac5e:	rex.R ret 0x831c
   14000ac62:	push   rsi
   14000ac63:	mov    bl,0xf4
   14000ac65:	movabs ds:0x187ef705abd3fe48,eax
   14000ac6e:	xchg   ecx,eax
   14000ac6f:	lea    ebp,[rsi-0x27]
   14000ac72:	push   0x5831cc90
   14000ac77:	cmc    
   14000ac78:	mov    eax,0xf244a915
   14000ac7d:	sbb    cl,ah
   14000ac7f:	mov    ?,WORD PTR [rdi+0x3bec56ed]
   14000ac85:	xlat   BYTE PTR ds:[rbx]
   14000ac86:	cmp    DWORD PTR [rbx],edi
   14000ac88:	(bad)  
   14000ac89:	jmp    FWORD PTR [rsi+0x1a]
   14000ac8c:	sub    eax,DWORD PTR [rax]
   14000ac8e:	mov    eax,0xada0649d
   14000ac93:	in     eax,dx
   14000ac94:	ins    DWORD PTR es:[rdi],dx
   14000ac95:	(bad)  
   14000ac96:	fisttp WORD PTR [rdx+rsi*1+0x10]
   14000ac9a:	xchg   ecx,eax
   14000ac9b:	sbb    ah,BYTE PTR [rax-0x67]
   14000ac9e:	add    cl,BYTE PTR [rbx-0x7617898]
   14000aca4:	jmp    FWORD PTR [rcx]
   14000aca6:	rex.RB movabs ds:0x30fd7fa541c18eb1,al
   14000acb0:	rex sub DWORD PTR [rip+0x1495db6d],ebx        # 0x154968824
   14000acb7:	add    cl,BYTE PTR [rcx+0x54]
   14000acba:	mov    al,BYTE PTR [rbp+rbp*4+0x30]
   14000acbe:	mov    WORD PTR [rax-0x6e],ds
   14000acc1:	xor    dl,dl
   14000acc3:	jrcxz  0x14000acae
   14000acc5:	inc    BYTE PTR [rbx-0x232f08a3]
   14000accb:	mov    dl,BYTE PTR [rdi+0x1881696e]
   14000acd1:	je     0x14000acd0
   14000acd3:	add    BYTE PTR [rbx],bl
   14000acd5:	rex mov edi,0xfa0f4399
   14000acdb:	sar    DWORD PTR [rdi-0xf],cl
   14000acde:	add    BYTE PTR [rdx],bh
   14000ace0:	cmp    dh,ch
   14000ace2:	movabs eax,ds:0x1cef2ded706debe7
   14000aceb:	(bad)  
   14000acec:	loope  0x14000ac89
   14000acee:	push   rsi
   14000acef:	cmp    eax,esi
   14000acf1:	test   dh,al
   14000acf3:	or     al,BYTE PTR [rax]
   14000acf5:	outs   dx,BYTE PTR ds:[rsi]
   14000acf6:	(bad)  
   14000acf7:	sbb    eax,ebp
   14000acf9:	(bad)  
   14000acfb:	mov    ebx,0x33eef7b8
   14000ad00:	outs   dx,DWORD PTR ds:[rsi]
   14000ad01:	sub    BYTE PTR [rcx],bl
   14000ad03:	test   al,0x57
   14000ad05:	out    0x4c,eax
   14000ad07:	psadbw mm6,QWORD PTR [rcx]
   14000ad0a:	push   rdx
   14000ad0b:	hlt    
   14000ad0c:	int    0x10
   14000ad0e:	add    al,bl
   14000ad10:	xor    al,0x11
   14000ad12:	mov    esi,edi
   14000ad14:	and    DWORD PTR [rdx+0x29c1245b],edi
   14000ad1a:	movabs eax,ds:0x106117b4424e71d2
   14000ad23:	xchg   BYTE PTR [rdx+rdx*2-0x2fce1159],al
   14000ad2a:	sbb    eax,0x8a062395
   14000ad2f:	mov    r9b,BYTE PTR [rax-0x40]
   14000ad33:	rex.X sbb BYTE PTR [rax+0x64],spl
   14000ad37:	nop
   14000ad38:	sub    BYTE PTR [rbp-0x16c1e7e0],dl
   14000ad3e:	rex.RXB
   14000ad3f:	test   DWORD PTR gs:[rsi-0x25],edi
   14000ad43:	ret    
   14000ad44:	loopne 0x14000ad39
   14000ad46:	(bad)  
   14000ad47:	icebp  
   14000ad48:	jmp    0x14000acf7
   14000ad4a:	test   DWORD PTR [rcx+rax*1+0x61aa3230],ecx
   14000ad51:	rex.B or al,0x3e
   14000ad54:	pushf  
   14000ad55:	std    
   14000ad56:	xchg   edx,eax
   14000ad57:	ins    BYTE PTR es:[rdi],dx
   14000ad58:	in     eax,dx
   14000ad59:	movabs eax,ss:0xc819376e0006c688
   14000ad63:	xor    cl,BYTE PTR [rip+0xffffffff9437932c]        # 0xd4384095
   14000ad69:	or     al,0x94
   14000ad6b:	mov    eax,0xeab6e99
   14000ad70:	and    BYTE PTR [rcx],bl
   14000ad72:	(bad)  
   14000ad73:	sbb    al,0x78
   14000ad75:	popf   
   14000ad76:	shl    BYTE PTR [rdx],0x4
   14000ad79:	ret    0xf78c
   14000ad7c:	sti    
   14000ad7d:	retf   
   14000ad7e:	pop    rsi
   14000ad7f:	sbb    bh,bh
   14000ad81:	push   rcx
   14000ad82:	icebp  
   14000ad83:	movs   DWORD PTR es:[rdi],DWORD PTR es:[rsi]
   14000ad85:	imul   rsp,QWORD PTR [rsp+r9*4+0x250fd79e],0x52
   14000ad8e:	and    eax,0x9a474512
   14000ad93:	enter  0x291a,0xcd
   14000ad97:	sbb    BYTE PTR [rax],ah
   14000ad99:	adc    bh,BYTE PTR [rbx]
   14000ad9b:	test   DWORD PTR [rcx+0x1e244db5],edx
   14000ada1:	adc    BYTE PTR [rsp+rdi*4],0x34
   14000ada5:	cli    
   14000ada6:	or     BYTE PTR [rdx],0xe7
   14000ada9:	ret    
   14000adaa:	and    dl,BYTE PTR [rcx+0x786ed7a]
   14000adb0:	lea    eax,[rbx]
   14000adb2:	rex.R jrcxz 0x14000ad90
   14000adb5:	(bad)  
   14000adb6:	adc    al,0x7
   14000adb8:	(bad)  
   14000adb9:	call   0x15883a7e6
   14000adbe:	fdiv   DWORD PTR [rdx]
   14000adc0:	sti    
   14000adc1:	cmp    eax,0xdd1c2a9b
   14000adc6:	bnd jo 0x14000ad4c
   14000adc9:	rcr    eax,0x0
   14000adcc:	shr    BYTE PTR [rax-0xfc0bf37],0x83
   14000add3:	(bad)  
   14000add4:	(bad)  
   14000add5:	(bad)  
   14000add6:	test   eax,0xaf4259e5
   14000addb:	rex.WRX fsubr DWORD PTR [rdx+0x2064e1bf]
   14000ade2:	jne    0x14000ada4
   14000ade4:	mov    esp,0x3823d039
   14000ade9:	cmp    BYTE PTR [rdx-0x56c9d868],0xf
   14000adf0:	mov    ebx,0x960614d6
   14000adf5:	add    DWORD PTR [rax-0x771ab9aa],ebx
   14000adfb:	add    al,0xea
   14000adfd:	(bad)
   14000ae01:	test   BYTE PTR [rbp+riz*1+0x8ed4889],cl
   14000ae08:	movabs ds:0x63dd6b55f4388058,eax
   14000ae11:	fwait
   14000ae12:	mov    ch,ch
   14000ae14:	adc    ah,BYTE PTR [rsi+0x49118181]
   14000ae1a:	sbb    cl,dh
   14000ae1c:	jns    0x14000ae3b
   14000ae1e:	out    dx,eax
   14000ae1f:	pop    rbx
   14000ae20:	rex
   14000ae21:	rex.RX adc r13b,cl
   14000ae24:	xchg   ebx,eax
   14000ae25:	jbe    0x14000adad
   14000ae27:	lods   al,BYTE PTR ds:[rsi]
   14000ae28:	(bad)  
   14000ae29:	mov    ebp,0x8a05464d
   14000ae2e:	in     al,dx
   14000ae2f:	stc    
   14000ae30:	shl    DWORD PTR [rip+0xffffffff8f541180],1        # 0xcf54bfb6
   14000ae36:	in     al,dx
   14000ae37:	mov    fs,WORD PTR ds:[rbx]
   14000ae3a:	idiv   DWORD PTR [rbx]
   14000ae3c:	mov    esi,0xc0003634
   14000ae41:	pop    rbx
   14000ae42:	cdq    
   14000ae43:	or     al,0x74
   14000ae45:	or     ebx,DWORD PTR [rdx]
   14000ae47:	xor    al,0xb1
   14000ae49:	(bad)  
   14000ae4a:	sbb    eax,0xe0a675bb
   14000ae4f:	loopne 0x14000ae14
   14000ae51:	cmp    dh,BYTE PTR [rbx-0x16d3889c]
   14000ae57:	pop    rcx
   14000ae58:	rex.XB xchg r15d,eax
   14000ae5a:	shl    BYTE PTR [rdx],0x4d
   14000ae5d:	ins    BYTE PTR es:[rdi],dx
   14000ae5e:	rex.WXB or al,0x5c
   14000ae61:	push   0x53
   14000ae63:	nop
   14000ae64:	rex.W and al,0xa
   14000ae67:	adc    eax,0x4a1f8601
   14000ae6c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ae6d:	(bad)  
   14000ae6e:	sbb    DWORD PTR [rsi],esi
   14000ae70:	mov    ch,0xea
   14000ae72:	xchg   esi,eax
   14000ae73:	es adc rbp,r13
   14000ae77:	rex.WXB cdqe 
   14000ae79:	xor    eax,0x45122660
   14000ae7e:	jbe    0x14000ae37
   14000ae80:	jrcxz  0x14000ae66
   14000ae82:	add    DWORD PTR [rbp-0x1a],esi
   14000ae85:	pop    rsi
   14000ae86:	add    ebx,DWORD PTR [rdi-0x53]
   14000ae89:	xlat   BYTE PTR ds:[rbx]
   14000ae8a:	mov    edx,0xb4694077
   14000ae8f:	xchg   ecx,eax
   14000ae90:	mov    dl,0x5
   14000ae92:	(bad)  
   14000ae93:	pop    rsp
   14000ae94:	(bad)  
   14000ae95:	movabs al,ds:0xa598713ee80558eb
   14000ae9e:	xor    BYTE PTR [rcx+0x2],0x80
   14000aea2:	adc    DWORD PTR [rbx+0x48eee681],edx
   14000aea8:	xor    dl,al
   14000aeaa:	xor    BYTE PTR [rcx+0x35],dh
   14000aead:	pop    rbp
   14000aeae:	mov    ch,0xc4
   14000aeb0:	push   0xffffffffbe834289
   14000aeb5:	fs push rdi
   14000aeb7:	mov    esi,0xe1cd4f5b
   14000aebc:	sub    eax,0x21f718d2
   14000aec1:	sub    al,BYTE PTR [rdi-0x6a69fbd7]
   14000aec7:	frstor [rdx-0x64]
   14000aeca:	(bad)  
   14000aecb:	mov    edi,0x322ca898
   14000aed0:	ss (bad) 
   14000aed2:	xchg   BYTE PTR [rdx-0x3b],cl
   14000aed5:	push   rdx
   14000aed6:	rex.RB add al,0x14
   14000aed9:	sub    rsi,QWORD PTR [rax+r11*1+0x60]
   14000aede:	mov    dh,0x77
   14000aee0:	icebp  
   14000aee1:	jl     0x14000af02
   14000aee3:	xchg   ecx,eax
   14000aee4:	stos   DWORD PTR es:[rdi],eax
   14000aee5:	(bad)  
   14000aee6:	xchg   ebp,eax
   14000aee7:	mov    bx,0x126c
   14000aeeb:	leave  
   14000aeec:	(bad)  
   14000aeed:	ret    
   14000aeee:	adc    BYTE PTR [rcx-0x5f916ebc],ch
   14000aef4:	and    BYTE PTR [rax-0x2389dd80],cl
   14000aefa:	(bad)  
   14000aefb:	clc    
   14000aefc:	sahf   
   14000aefd:	outs   dx,DWORD PTR ds:[rsi]
   14000aefe:	fimul  DWORD PTR [rax]
   14000af00:	cwde   
   14000af01:	rex.RB and r9b,0xad
   14000af05:	(bad)  
   14000af06:	and    ecx,DWORD PTR [rbp-0x6573fff3]
   14000af0c:	or     al,0x64
   14000af0e:	pop    rdx
   14000af0f:	ja     0x14000af31
   14000af11:	sbb    DWORD PTR [rax-0x15],ecx
   14000af14:	(bad)  
   14000af15:	or     DWORD PTR [rdi],0xffffff99
   14000af18:	mov    esp,0x72aad23
   14000af1d:	in     al,dx
   14000af1e:	shr    BYTE PTR es:[rbx],cl
   14000af21:	cmps   DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
   14000af23:	(bad)  
   14000af24:	(bad)  
   14000af25:	jne    0x14000af5a
   14000af27:	movabs al,ds:0xf4269627fd5c8c9
   14000af30:	enter  0xd187,0x74
   14000af34:	or     al,0x98
   14000af36:	xchg   esi,eax
   14000af37:	imul   esp,DWORD PTR [rcx],0x2db0ad2
   14000af3d:	lods   eax,DWORD PTR ds:[rsi]
   14000af3e:	rex.XB imul BYTE PTR [r14]
   14000af41:	jg     0x14000aed0
   14000af43:	ja     0x14000af02
   14000af45:	jrcxz  0x14000af34
   14000af47:	mov    esp,0x542bcaf2
   14000af4c:	sbb    edi,DWORD PTR [rbx]
   14000af4e:	xor    al,0xa4
   14000af50:	fs jp  0x14000afc1
   14000af53:	or     DWORD PTR [rbp+0x48c30fc6],ecx
   14000af59:	std    
   14000af5a:	nop
   14000af5b:	rex.WB and BYTE PTR [r10+0x309b89ee],dl
   14000af62:	xor    BYTE PTR [rbx+rax*1+0x53],cl
   14000af66:	je     0x14000af23
   14000af68:	lea    r8d,[rcx]
   14000af6b:	rol    BYTE PTR [rdx+rdi*8+0x5e],cl
   14000af6f:	mov    ebp,0xcd059d63
   14000af74:	xchg   ecx,eax
   14000af75:	rex.B movabs ds:0x47e39a317b704edb,al
   14000af7f:	movsxd eax,DWORD PTR [rbx]
   14000af81:	add    BYTE PTR [rdi-0x1b],ch
   14000af84:	(bad)  
   14000af85:	sbb    bpl,BYTE PTR [rax+0x6698dab5]
   14000af8c:	addr32 xchg ebp,eax
   14000af8e:	adc    esp,DWORD PTR [rdx+0x5d9755db]
   14000af94:	mov    esi,0xe9bb5787
   14000af99:	xchg   edi,eax
   14000af9a:	(bad)  
   14000af9b:	sti    
   14000af9c:	pop    rdx
   14000af9d:	or     cl,BYTE PTR [rsi]
   14000af9f:	cwde   
   14000afa0:	fstp   QWORD PTR [rcx]
   14000afa2:	out    0xc8,al
   14000afa4:	cld    
   14000afa5:	sbb    eax,0x40834a04
   14000afaa:	(bad)  
   14000afab:	adc    al,0xca
   14000afad:	jp     0x14000afe8
   14000afaf:	mov    dl,0x9f
   14000afb1:	pop    rbx
   14000afb2:	mov    ebx,0xcf7fdceb
   14000afb7:	fst    QWORD PTR [rdx+rcx*1]
   14000afba:	add    eax,0xf0e61616
   14000afbf:	jge    0x14000af50
   14000afc1:	pushf  
   14000afc2:	sbb    ebp,ebp
   14000afc4:	pushfw 
   14000afc6:	(bad)  
   14000afc7:	in     al,0xfb
   14000afc9:	je     0x14000b038
   14000afcb:	xchg   ebp,eax
   14000afcc:	mov    eax,0x2ec76543
   14000afd1:	adc    DWORD PTR [rdx-0x7b],ecx
   14000afd4:	scas   eax,DWORD PTR es:[rdi]
   14000afd5:	rex.X movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000afd7:	mov    ss,WORD PTR [rsi+rcx*4+0x64]
   14000afdb:	pushf  
   14000afdc:	cli    
   14000afdd:	loop   0x14000b005
   14000afdf:	loop   0x14000b052
   14000afe1:	mov    dh,0x32
   14000afe3:	rex.RX int3 
   14000afe5:	rex.R (bad) 
   14000afe7:	adc    BYTE PTR [rcx+0x45823bfe],bl
   14000afed:	neg    DWORD PTR [rbx]
   14000afef:	(bad)  
   14000aff0:	(bad)  
   14000aff1:	(bad)  
   14000aff2:	call   0x1043b79c2
   14000aff7:	xor    al,0x36
   14000aff9:	add    BYTE PTR [rax],dh
   14000affb:	(bad)  
   14000affc:	(bad)  
   14000affd:	rex ja 0x14000af84
   14000b000:	xor    al,0x58
   14000b002:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b003:	cdq    
   14000b004:	icebp  
   14000b005:	jmp    0x18f5d2435
   14000b00a:	(bad)  
   14000b00b:	xchg   edx,eax
   14000b00c:	or     esp,ebx
   14000b00e:	sub    eax,DWORD PTR [rsi]
   14000b010:	(bad)  
   14000b011:	cmp    dh,BYTE PTR [rbx+0x1c]
   14000b014:	xor    ah,bl
   14000b016:	push   rbx
   14000b017:	stc    
   14000b018:	and    ebx,DWORD PTR [rbx-0x75ba28f7]
   14000b01e:	rex.B
   14000b01f:	rex.RXB jnp 0x14000b041
   14000b022:	(bad)  
   14000b023:	rcr    edi,cl
   14000b025:	adc    BYTE PTR [rcx-0x5f10185c],cl
   14000b02b:	xchg   ebx,eax
   14000b02c:	mov    ebp,0xb861cbc6
   14000b031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b032:	rex.X (bad) 
   14000b034:	and    ch,BYTE PTR [rip+0xffffffff947e9f4e]        # 0xd47f4f88
   14000b03a:	(bad)  
   14000b03b:	std    
   14000b03c:	ror    edi,cl
   14000b03e:	loope  0x14000affa
   14000b040:	shl    esi,1
   14000b042:	pop    rdx
   14000b043:	mov    ch,0x9d
   14000b045:	rex.WRB ret 0x66a6
   14000b049:	icebp  
   14000b04a:	call   0x12ecbdc78
   14000b04f:	mov    ebx,0x2067b477
   14000b054:	adc    BYTE PTR [rbp+0x19d091a9],0x8
   14000b05b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b05c:	movabs ds:0x7e1ea89978c4aa20,eax
   14000b065:	sbb    BYTE PTR [rsi-0x54e2ae52],ah
   14000b06b:	xor    eax,0xc44db1d
   14000b070:	or     cl,cl
   14000b072:	pop    rax
   14000b073:	fwait
   14000b074:	mov    DWORD PTR [rbx+0x54],ecx
   14000b077:	or     al,0xde
   14000b079:	mov    ah,0x34
   14000b07b:	mov    ch,0x9f
   14000b07d:	sbb    al,0x72
   14000b07f:	(bad)  
   14000b080:	(bad)
   14000b084:	loopne 0x14000b033
   14000b086:	ficomp WORD PTR [rcx]
   14000b088:	test   al,0x90
   14000b08a:	jae    0x14000b09e
   14000b08c:	xor    eax,0x95aea536
   14000b091:	cs repz (bad) 
   14000b094:	(bad)  
   14000b095:	ror    BYTE PTR [rdx],0xad
   14000b098:	movabs ds:0x3bf88ecdc42d9df3,eax
   14000b0a1:	push   0x72ba0ae2
   14000b0a6:	xacquire xchg DWORD PTR [rbp-0x7ffcfcf1],eax
   14000b0ad:	(bad)  
   14000b0ae:	rex fild DWORD PTR [rcx-0x7b]
   14000b0b2:	icebp  
   14000b0b3:	(bad)  
   14000b0b4:	fcomp  DWORD PTR [rsi]
   14000b0b6:	(bad)  
   14000b0b7:	(bad)  
   14000b0b8:	or     eax,0xedad24a5
   14000b0bd:	stos   DWORD PTR es:[rdi],eax
   14000b0be:	mov    esp,0xb84789fb
   14000b0c3:	jle    0x14000b142
   14000b0c5:	popf   
   14000b0c6:	push   0x75
   14000b0c8:	(bad)  
   14000b0c9:	(bad)  [rsi-0x1e]
   14000b0cc:	in     eax,dx
   14000b0cd:	(bad)  
   14000b0ce:	add    eax,0x668b56d3
   14000b0d3:	movabs ds:0x4633019fa66a654e,eax
   14000b0dc:	retf   
   14000b0dd:	rex.WRX or r15b,BYTE PTR [rsi-0x2a]
   14000b0e1:	clc    
   14000b0e2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b0e3:	movsxd eax,DWORD PTR [rbx]
   14000b0e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b0e6:	shl    BYTE PTR [rsi],0x4d
   14000b0e9:	(bad)  
   14000b0ea:	cmp    BYTE PTR [rdx],0x80
   14000b0ed:	jmp    0x160057c0a
   14000b0f2:	xor    al,0x61
   14000b0f4:	and    cl,BYTE PTR [rbp-0x3c]
   14000b0f7:	push   0x47
   14000b0f9:	mov    dh,0xc8
   14000b0fb:	(bad)  
   14000b0fc:	retf   0xb154
   14000b0ff:	mov    DWORD PTR [rax+0x43cfa03a],0x363060c
   14000b109:	add    BYTE PTR [rbx-0x465bf312],ah
   14000b10f:	adc    edi,DWORD PTR [rbx]
   14000b111:	add    eax,DWORD PTR [rbp+0x2b]
   14000b114:	push   rbp
   14000b115:	hlt    
   14000b116:	mov    cl,0x9b
   14000b118:	test   eax,0x6ae2c404
   14000b11d:	(bad)  
   14000b11e:	(bad)  
   14000b11f:	mov    bh,0xf7
   14000b121:	pop    rsi
   14000b122:	sub    cl,BYTE PTR [rcx]
   14000b124:	and    DWORD PTR [rsi+0x44],ecx
   14000b127:	(bad)  
   14000b128:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b129:	and    al,BYTE PTR [rbx-0x2834159c]
   14000b12f:	xchg   ecx,eax
   14000b130:	or     ch,BYTE PTR [rsp+rcx*4]
   14000b133:	je     0x14000b0ba
   14000b135:	jmp    0x14000b0c9
   14000b137:	test   BYTE PTR es:[rax-0x5c],al
   14000b13b:	fwait
   14000b13c:	push   0x24
   14000b13e:	imul   rsp,QWORD PTR [r8+r8*1],0xffffffffef73f4eb
   14000b146:	adc    esi,DWORD PTR [rbx-0x10]
   14000b149:	stos   BYTE PTR es:[rdi],al
   14000b14a:	xlat   BYTE PTR ds:[rbx]
   14000b14b:	mov    cl,0x5e
   14000b14d:	(bad)  
   14000b14e:	push   0x5b6b7097
   14000b153:	pushf  
   14000b154:	cmp    al,0x32
   14000b156:	rex.RXB
   14000b157:	cs xchg edi,eax
   14000b159:	out    0xe2,eax
   14000b15b:	(bad)
   14000b15e:	enter  0x9e32,0x77
   14000b162:	test   dl,dl
   14000b164:	xchg   esp,eax
   14000b165:	(bad)  
   14000b166:	fcomp  QWORD PTR [rsi+riz*4-0x2e5824aa]
   14000b16d:	pop    rdx
   14000b16e:	movabs ds:0x91a58372e4e12850,eax
   14000b177:	adc    DWORD PTR [rbx+riz*4-0x22b3b623],ebp
   14000b17e:	and    al,0x74
   14000b180:	in     al,0xe
   14000b182:	xor    eax,0x1b3b032d
   14000b187:	jle    0x14000b1b2
   14000b189:	rex.R jb 0x14000b1fd
   14000b18c:	sub    al,0x4d
   14000b18e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b18f:	cmp    bl,BYTE PTR [rax-0x29]
   14000b192:	cmp    esi,DWORD PTR [rbx+rdi*2+0x26]
   14000b196:	(bad)  
   14000b197:	(bad)  
   14000b198:	repz ret 
   14000b19a:	sbb    BYTE PTR [rcx],al
   14000b19c:	add    BYTE PTR [rsi+rdx*4-0x2649bf4],cl
   14000b1a3:	(bad)  
   14000b1a4:	clc    
   14000b1a5:	in     eax,dx
   14000b1a6:	(bad)  
   14000b1a7:	add    edx,ecx
   14000b1a9:	mov    ch,0x9a
   14000b1ab:	or     eax,0x65c32ca2
   14000b1b0:	(bad)  
   14000b1b1:	and    BYTE PTR [rcx],dl
   14000b1b3:	jnp    0x14000b202
   14000b1b5:	rex.XB (bad) 
   14000b1b7:	sbb    DWORD PTR [rsi+0x3a],esp
   14000b1ba:	jns    0x14000b1cf
   14000b1bc:	cmp    BYTE PTR [r9+0x2eeb5aa0],bl
   14000b1c3:	sub    DWORD PTR [rdx],esp
   14000b1c5:	xchg   esp,eax
   14000b1c6:	adc    bh,BYTE PTR [rdi]
   14000b1c8:	or     BYTE PTR [rax+0x5813a552],dl
   14000b1ce:	and    al,0xdb
   14000b1d0:	xchg   BYTE PTR [rbx],cl
   14000b1d2:	xchg   ecx,eax
   14000b1d3:	rex.WX adc BYTE PTR [rbp+0x56232464],bl
   14000b1da:	(bad)  
   14000b1db:	mov    ch,bh
   14000b1dd:	clc    
   14000b1de:	sbb    eax,0xac63e83e
   14000b1e3:	lods   al,BYTE PTR ds:[rsi]
   14000b1e4:	adc    al,0x90
   14000b1e6:	rex.WRB (bad) 
   14000b1e8:	in     al,dx
   14000b1e9:	imul   esp,DWORD PTR [rdx],0xa83b0f43
   14000b1ef:	jb     0x14000b1df
   14000b1f1:	fcom   QWORD PTR [rbx+0x2bf2fcbc]
   14000b1f7:	clc    
   14000b1f8:	jle    0x14000b193
   14000b1fa:	imul   ebp,DWORD PTR [rbx-0x65],0x7c
   14000b1fe:	jmp    0x14000b1e3
   14000b200:	(bad)  
   14000b201:	rex.WB jne 0x14000b1f3
   14000b204:	mov    edi,0xc71fe441
   14000b209:	xor    al,0x5b
   14000b20b:	adc    al,0x75
   14000b20d:	sbb    edi,DWORD PTR [rdi]
   14000b20f:	lock mov al,0x6c
   14000b212:	sbb    edx,DWORD PTR [rdx]
   14000b214:	sub    DWORD PTR [rax+0x77],eax
   14000b217:	std    
   14000b218:	rex.WB fistp QWORD PTR [r9-0x20]
   14000b21c:	rex.XB mov r10d,gs
   14000b21f:	sti    
   14000b220:	rex.W push rsp
   14000b222:	(bad)  
   14000b223:	fnsave [rbp+0x34]
   14000b226:	and    eax,0x37e0c7a3
   14000b22b:	mov    esp,0x634bc38f
   14000b230:	add    eax,0x324a300
   14000b235:	pop    rbp
   14000b236:	mov    edx,0xbb55037c
   14000b23b:	cld    
   14000b23c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b23d:	xchg   ebx,eax
   14000b23e:	cmp    DWORD PTR [rdx+0x1b20dce6],0x3d68975d
   14000b248:	js     0x14000b28f
   14000b24a:	(bad)  
   14000b24b:	fs cdq 
   14000b24d:	lods   eax,DWORD PTR ds:[rsi]
   14000b24e:	rex.RXB xchg r10d,eax
   14000b250:	adc    BYTE PTR [rcx+0x3aeadf2f],cl
   14000b256:	stos   DWORD PTR es:[rdi],eax
   14000b257:	mov    ch,0x48
   14000b259:	push   rdi
   14000b25a:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b25c:	cmp    edi,ecx
   14000b25e:	add    eax,0xa10454a1
   14000b263:	(bad)  
   14000b264:	mov    edi,ebp
   14000b266:	cli    
   14000b267:	jmp    0xcee8da56
   14000b26c:	or     BYTE PTR [rcx*4-0x3b7cc342],dh
   14000b273:	cmp    esp,DWORD PTR [rdi-0x1728a978]
   14000b279:	ds mov ebp,0x6e68a120
   14000b27f:	pop    rbp
   14000b280:	in     eax,0x89
   14000b282:	xchg   edi,ebp
   14000b284:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b285:	push   rsi
   14000b286:	stos   DWORD PTR es:[rdi],eax
   14000b287:	mov    cl,0xb5
   14000b289:	mov    ch,0xc7
   14000b28b:	(bad)  
   14000b28c:	lea    edi,[rbx+rbp*4]
   14000b28f:	rex.WXB movabs r15,0xabd6ea8c7e0f03c7
   14000b299:	jl     0x14000b284
   14000b29b:	test   edi,ebx
   14000b29d:	(bad)  
   14000b29e:	push   0x6a
   14000b2a0:	sbb    ebp,0xaf360ddd
   14000b2a6:	mov    esp,0x1fbbd1cc
   14000b2ab:	(bad)
   14000b2ae:	(bad)  
   14000b2af:	fxch   st(3)
   14000b2b1:	jo     0x14000b256
   14000b2b3:	lods   al,BYTE PTR ds:[rsi]
   14000b2b4:	ret    
   14000b2b5:	mov    bh,0x18
   14000b2b7:	fcmovbe st,st(1)
   14000b2b9:	clc    
   14000b2ba:	mov    bh,0xf7
   14000b2bc:	push   rbp
   14000b2bd:	outs   dx,BYTE PTR ds:[rsi]
   14000b2be:	gs in  al,0x38
   14000b2c1:	rex.R xor al,0x56
   14000b2c4:	add    al,dh
   14000b2c6:	xchg   esi,eax
   14000b2c7:	add    ecx,DWORD PTR es:[rip+0xffffffff98b7859b]        # 0xd8b83869
   14000b2ce:	leave  
   14000b2cf:	ret    
   14000b2d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b2d1:	pushf  
   14000b2d2:	(bad)  
   14000b2d3:	clc    
   14000b2d4:	lods   eax,DWORD PTR ds:[rsi]
   14000b2d5:	cmp    edi,DWORD PTR [rax+rdi*4-0x25]
   14000b2d9:	jb     0x14000b273
   14000b2db:	fmul   DWORD PTR [rbx]
   14000b2dd:	ins    BYTE PTR es:[rdi],dx
   14000b2de:	rol    DWORD PTR [rax+rbx*8-0xc],cl
   14000b2e2:	pop    rbp
   14000b2e3:	(bad)  
   14000b2e4:	fldenv [rbx]
   14000b2e6:	and    bl,BYTE PTR [rip+0x447b539]        # 0x144486825
   14000b2ec:	jno    0x14000b2d6
   14000b2ee:	jo     0x14000b36c
   14000b2f0:	(bad)  
   14000b2f1:	call   0x1430a806c
   14000b2f6:	rcl    DWORD PTR [rbx*2+0x4014bc6],cl
   14000b2fd:	outs   dx,BYTE PTR ds:[rsi]
   14000b2fe:	popf   
   14000b2ff:	(bad)  
   14000b300:	stc    
   14000b301:	adc    cl,BYTE PTR [rbx]
   14000b303:	or     ecx,DWORD PTR [rbx]
   14000b305:	jl     0x14000b2e8
   14000b307:	or     ebx,DWORD PTR [rdi-0x5c]
   14000b30a:	fisubr WORD PTR [rax-0x33404820]
   14000b310:	jg     0x14000b308
   14000b312:	(bad)  
   14000b313:	jg     0x14000b318
   14000b315:	(bad)  
   14000b316:	jnp    0x1bb30e2e3
   14000b31c:	(bad)  
   14000b31d:	movabs ds:0x8612a850a55ff5b4,eax
   14000b326:	xor    eax,0x18bdf02
   14000b32b:	(bad)  
   14000b32c:	jl     0x14000b2f1
   14000b32e:	or     ebp,DWORD PTR [rbp-0x21]
   14000b331:	jne    0x14000b3a2
   14000b333:	movabs al,ds:0x63220fb7d591fea3
   14000b33c:	rex.WX movsxd rax,DWORD PTR [rip+0x32596f00]        # 0x1725a2243
   14000b343:	adc    BYTE PTR [rdi],al
   14000b345:	pop    rbx
   14000b346:	rol    DWORD PTR [rdi],cl
   14000b348:	sahf   
   14000b349:	xlat   BYTE PTR ds:[rbx]
   14000b34a:	and    eax,esp
   14000b34c:	mov    bl,0xc
   14000b34e:	add    ecx,DWORD PTR [rcx+0x75d1b88c]
   14000b354:	scas   al,BYTE PTR es:[rdi]
   14000b355:	(bad)  
   14000b356:	xchg   edx,eax
   14000b357:	ins    DWORD PTR es:[rdi],dx
   14000b358:	nop
   14000b359:	stos   DWORD PTR es:[rdi],eax
   14000b35a:	rex.WRXB sbb BYTE PTR [r10],r8b
   14000b35d:	(bad)  
   14000b35e:	xor    BYTE PTR [rcx+0x58],al
   14000b361:	popf   
   14000b362:	repz mov cl,0x71
   14000b365:	xor    DWORD PTR [rcx+0x37],edx
   14000b368:	ret    0xc58c
   14000b36b:	pop    rbp
   14000b36c:	retf   0x2404
   14000b36f:	push   rsp
   14000b370:	sbb    bh,BYTE PTR [rdx]
   14000b372:	mov    WORD PTR [rdx-0x21ca0aa8],ss
   14000b378:	std    
   14000b379:	out    0xdf,eax
   14000b37b:	ret    
   14000b37c:	(bad)  
   14000b37d:	stos   DWORD PTR es:[rdi],eax
   14000b37e:	push   rdi
   14000b37f:	imul   esi,DWORD PTR [rbp-0x105251d3],0x7e3be4f0
   14000b389:	xchg   ecx,eax
   14000b38a:	retf   0x136c
   14000b38d:	in     eax,0x47
   14000b38f:	jge    0x14000b36f
   14000b391:	jge    0x14000b362
   14000b393:	mov    edi,0x7cafabe6
   14000b398:	(bad)  
   14000b399:	push   rbx
   14000b39a:	ror    DWORD PTR [rbx],cl
   14000b39c:	mov    ah,0x5a
   14000b39e:	sub    eax,0x12fd5ed6
   14000b3a3:	addr32 (bad) 
   14000b3a5:	(bad)  
   14000b3a6:	push   rsi
   14000b3a7:	adc    r14b,BYTE PTR [rdi]
   14000b3aa:	sar    ebx,1
   14000b3ac:	(bad)  
   14000b3ad:	pop    rcx
   14000b3ae:	(bad)  
   14000b3af:	jg     0x14000b3b0
   14000b3b1:	retf   
   14000b3b2:	(bad)  
   14000b3b3:	iret   
   14000b3b4:	cmp    bh,BYTE PTR [rsp+rdx*8-0x6]
   14000b3b8:	mov    edx,0x7265a03b
   14000b3bd:	(bad)  
   14000b3be:	xor    al,0xcd
   14000b3c0:	(bad)  
   14000b3c1:	ret    
   14000b3c2:	lods   eax,DWORD PTR ds:[rsi]
   14000b3c3:	ds (bad) 
   14000b3c5:	xchg   edx,eax
   14000b3c6:	rcr    al,0x0
   14000b3c9:	shr    BYTE PTR [rax+0x5f1740c9],0x5f
   14000b3d0:	jnp    0x14000b391
   14000b3d2:	ins    DWORD PTR es:[rdi],dx
   14000b3d3:	mov    ebp,0x61a064c9
   14000b3d8:	and    ah,ch
   14000b3da:	sub    eax,0xc4cd56e8
   14000b3df:	and    ch,dh
   14000b3e1:	mov    ebx,0x54484b57
   14000b3e6:	mov    es,WORD PTR [rbx+0x46c4023c]
   14000b3ec:	mov    ah,0xec
   14000b3ee:	icebp  
   14000b3ef:	lods   al,BYTE PTR ds:[rsi]
   14000b3f0:	cmp    eax,0x68c3a322
   14000b3f5:	adc    ah,BYTE PTR [rbx-0x276c765b]
   14000b3fb:	shl    DWORD PTR [rdx-0x3d],cl
   14000b3fe:	xchg   r12d,eax
   14000b400:	retf   0xd21c
   14000b403:	fcmovu st,st(5)
   14000b405:	loopne 0x14000b3e5
   14000b407:	sti    
   14000b408:	(bad)  
   14000b409:	and    ah,BYTE PTR [rbp+0x16c6e364]
   14000b40f:	jmp    0x14000b448
   14000b411:	jae    0x14000b43f
   14000b413:	(bad)  
   14000b414:	jle    0x14000b398
   14000b416:	(bad)  
   14000b417:	fdivp  st(6),st
   14000b419:	add    eax,0xda520074
   14000b41e:	and    BYTE PTR [rax-0x12],ah
   14000b421:	call   0x13cb09a4b
   14000b426:	imul   esi,esi,0xfffffffd
   14000b429:	(bad)  
   14000b42a:	(bad)  
   14000b42b:	data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b42d:	mov    ah,bh
   14000b42f:	sti    
   14000b430:	in     al,dx
   14000b431:	ins    BYTE PTR es:[rdi],dx
   14000b432:	frstor [rsi+riz*2+0x7e]
   14000b436:	adc    ebx,ebx
   14000b438:	jbe    0x14000b49c
   14000b43a:	xlat   BYTE PTR ds:[rbx]
   14000b43b:	pop    rbp
   14000b43c:	(bad)  
   14000b43d:	es xchg edx,eax
   14000b43f:	mov    eax,0xa155baf4
   14000b444:	ficom  WORD PTR [rdi-0x6caaf7c6]
   14000b44a:	jno    0x14000b485
   14000b44c:	cmp    dl,ch
   14000b44e:	mov    dl,0xcb
   14000b450:	cs (bad) 
   14000b452:	call   0x1a626bb78
   14000b457:	sbb    eax,0x1b1a1e
   14000b45c:	sbb    BYTE PTR [rip+0xfffffffffbbfe819],dh        # 0x13bc09c7b
   14000b462:	fstp   TBYTE PTR [rdi]
   14000b464:	(bad)  
   14000b465:	(bad)  
   14000b466:	fldenv [rbx]
   14000b468:	ja     0x14000b48a
   14000b46a:	sbb    DWORD PTR [rax-0x36],ecx
   14000b46d:	pop    rax
   14000b46e:	cmp    al,0x16
   14000b470:	fld    QWORD PTR [rcx+0x2f]
   14000b473:	add    edx,DWORD PTR [rdi-0x4b]
   14000b476:	shr    DWORD PTR [rax-0x6850e7d1],1
   14000b47c:	(bad)  
   14000b47d:	xchg   esp,eax
   14000b47e:	mov    esi,0xe8ab2475
   14000b483:	data16 (bad) 
   14000b485:	(bad)  
   14000b486:	cs (bad) 
   14000b488:	xor    ebx,DWORD PTR [rbx-0x4a]
   14000b48b:	rex xchg eax,edx
   14000b48e:	sbb    eax,0x36e0426f
   14000b493:	sub    DWORD PTR [rax-0x63b1d8ca],ecx
   14000b499:	loopne 0x14000b497
   14000b49b:	stc    
   14000b49c:	repz xor al,0x1a
   14000b49f:	gs stos BYTE PTR es:[rdi],al
   14000b4a1:	sti    
   14000b4a2:	iret   
   14000b4a3:	repz push rdi
   14000b4a5:	(bad)  
   14000b4a6:	stos   DWORD PTR es:[rdi],eax
   14000b4a7:	pop    rdi
   14000b4a8:	rex.X or BYTE PTR [rbp+0x28],cl
   14000b4ac:	jrcxz  0x14000b4d7
   14000b4ae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b4af:	rex.WRB xchg r12,rax
   14000b4b1:	(bad)  
   14000b4b2:	cmp    DWORD PTR [rcx-0x1e],esi
   14000b4b5:	ret    
   14000b4b6:	xor    al,0xae
   14000b4b8:	dec    BYTE PTR [rip+0xffffffffea05f90a]        # 0x12a06adc8
   14000b4be:	test   DWORD PTR [rdx],edi
   14000b4c0:	push   rdi
   14000b4c1:	scas   eax,DWORD PTR es:[rdi]
   14000b4c2:	mov    esp,0x44114e0c
   14000b4c7:	adc    al,0x2b
   14000b4c9:	(bad)  
   14000b4ca:	je     0x14000b4c5
   14000b4cc:	in     eax,dx
   14000b4cd:	movabs ds:0x90522462766196cf,eax
   14000b4d6:	mov    BYTE PTR [rbx+0x433f4acd],bh
   14000b4dc:	pop    rsi
   14000b4dd:	(bad)  
   14000b4de:	jbe    0x14000b4bc
   14000b4e0:	js     0x14000b463
   14000b4e2:	or     al,0xf
   14000b4e4:	repz (bad) 
   14000b4e6:	fild   WORD PTR [rdi+0x63]
   14000b4e9:	add    eax,DWORD PTR [rax]
   14000b4eb:	mov    WORD PTR [rax-0xc865bf4],ds
   14000b4f1:	leave  
   14000b4f2:	rex pop rdx
   14000b4f4:	imul   esi,DWORD PTR [rsi-0x65],0xffffffad
   14000b4f8:	scas   al,BYTE PTR es:[rdi]
   14000b4f9:	enter  0x44b5,0x87
   14000b4fd:	ss or  eax,0xbb34cb03
   14000b503:	jl     0x14000b4ff
   14000b505:	imul   esp,eax,0x5bfae64f
   14000b50b:	mov    DWORD PTR [rdi+0x1ff2a5d],ebp
   14000b511:	mov    DWORD PTR [rdx],esi
   14000b513:	pop    rcx
   14000b514:	adc    dh,BYTE PTR [rdx+rcx*1-0x74]
   14000b518:	or     al,0xa5
   14000b51a:	add    DWORD PTR [rsi-0x35],eax
   14000b51d:	fisubr WORD PTR [rbx]
   14000b51f:	xchg   edx,eax
   14000b520:	nop
   14000b521:	es adc eax,0xdd57806
   14000b527:	sahf   
   14000b528:	js     0x14000b511
   14000b52a:	movabs ds:0x5eae2baf50ececec,eax
   14000b533:	imul   esi,edx,0xffffffd0
   14000b536:	jge    0x14000b557
   14000b538:	data16 icebp 
   14000b53a:	enter  0xa11e,0x6b
   14000b53e:	movabs ds:0xecc72480e01c45b5,eax
   14000b547:	repnz rex.WRB out 0x36,al
   14000b54b:	jle    0x14000b4eb
   14000b54d:	in     eax,dx
   14000b54e:	loopne 0x14000b5cf
   14000b550:	movsxd esp,DWORD PTR [rcx-0x5f]
   14000b553:	rex.B stos DWORD PTR es:[rdi],eax
   14000b555:	(bad)  
   14000b556:	es test al,0xed
   14000b559:	mov    dl,0x7c
   14000b55b:	hlt    
   14000b55c:	and    al,0xc2
   14000b55e:	xor    bl,ah
   14000b560:	push   0xffffffffeef91940
   14000b565:	xchg   ebp,eax
   14000b566:	and    cl,BYTE PTR [rax]
   14000b568:	add    bl,BYTE PTR [rdx-0x26]
   14000b56b:	rex.RXB sub r10d,DWORD PTR [r13+0x67546002]
   14000b572:	mov    cl,0x93
   14000b574:	popf   
   14000b575:	cwde   
   14000b576:	mov    eax,0x8a763b55
   14000b57b:	out    dx,al
   14000b57c:	sub    al,al
   14000b57e:	mov    gs,WORD PTR [rdx]
   14000b580:	xor    DWORD PTR [rax],ebx
   14000b582:	(bad)  
   14000b584:	in     al,0x29
   14000b586:	mov    BYTE PTR [rsi-0xd],bh
   14000b589:	mov    edi,?
   14000b58b:	out    0x20,al
   14000b58d:	ja     0x14000b572
   14000b58f:	(bad)  
   14000b590:	movabs al,ds:0x6fca8192d1800271
   14000b599:	jle    0x14000b602
   14000b59b:	and    BYTE PTR [rax+0x4a0ae9c5],al
   14000b5a1:	mov    r14b,0xe2
   14000b5a4:	rex.WRXB loop 0x14000b57a
   14000b5a7:	idiv   DWORD PTR [rbp+0x3f]
   14000b5aa:	(bad)  
   14000b5ab:	movabs eax,ds:0x249810866b513b
   14000b5b4:	(bad)  
   14000b5b5:	(bad)  
   14000b5b6:	sbb    ah,BYTE PTR [rsi+0x64]
   14000b5b9:	and    bl,cl
   14000b5bb:	(bad)  
   14000b5bc:	(bad)  
   14000b5bd:	test   BYTE PTR [rsi-0x6fedd18c],cl
   14000b5c3:	mov    eax,0x5bd9c98d
   14000b5c8:	iret   
   14000b5c9:	mov    bl,0x8b
   14000b5cb:	xor    ah,BYTE PTR [rdi]
   14000b5cd:	mov    dl,0xf1
   14000b5cf:	xor    eax,0xe0d3ed7d
   14000b5d4:	and    ecx,DWORD PTR [rbp-0x331e2721]
   14000b5da:	mov    cl,0x25
   14000b5dc:	mov    al,ch
   14000b5de:	and    dl,bh
   14000b5e0:	xlat   BYTE PTR ds:[rbx]
   14000b5e1:	(bad)  
   14000b5e2:	(bad)  
   14000b5e4:	je     0x14000b5ae
   14000b5e6:	fstp   DWORD PTR [rdi]
   14000b5e8:	jrcxz  0x14000b5b3
   14000b5ea:	(bad)  
   14000b5eb:	inc    BYTE PTR [rax]
   14000b5ed:	add    al,BYTE PTR [rcx]
   14000b5ef:	rol    BYTE PTR [rdx],cl
   14000b5f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b5f2:	rcr    eax,1
   14000b5f4:	shl    DWORD PTR [rbx+0x6a],1
   14000b5f7:	xchg   ebx,eax
   14000b5f8:	rcl    BYTE PTR [rbp+0x36fecd2c],0xcd
   14000b5ff:	cli    
   14000b600:	mov    db3,rax
   14000b603:	movabs al,ds:0xb1c475cee6e5d95c
   14000b60c:	push   rbx
   14000b60d:	or     al,al
   14000b60f:	ss int 0xc8
   14000b612:	push   0xfffffffff53bdc99
   14000b617:	fucomp st(3)
   14000b619:	(bad)  
   14000b61a:	ja     0x14000b64b
   14000b61c:	xor    ecx,DWORD PTR [rcx-0x7ab5eb9]
   14000b622:	jle    0x14000b636
   14000b624:	loopne 0x14000b639
   14000b626:	push   r11
   14000b628:	xor    al,0x54
   14000b62a:	pop    rcx
   14000b62b:	or     edx,eax
   14000b62d:	ror    BYTE PTR [rcx+rax*2+0x4e1f0937],0x13
   14000b635:	(bad)  
   14000b636:	jp     0x14000b616
   14000b638:	xor    ecx,DWORD PTR [rdx]
   14000b63a:	cmp    DWORD PTR [rsi],ebx
   14000b63c:	cmp    al,0x2e
   14000b63e:	xchg   DWORD PTR [rcx+0x460006c6],edx
   14000b644:	fistp  WORD PTR [rcx]
   14000b646:	enter  0x23be,0x3b
   14000b64a:	add    ebp,DWORD PTR [rcx+0x444a44cc]
   14000b650:	pop    rdx
   14000b651:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b652:	sub    esi,eax
   14000b654:	(bad)  
   14000b655:	(bad)  
   14000b656:	fmul   st,st(1)
   14000b658:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b659:	push   rsi
   14000b65a:	icebp  
   14000b65b:	fs xchg esi,eax
   14000b65d:	rex.WX loop 0x14000b665
   14000b660:	and    DWORD PTR [rcx-0x5f5f2c0e],esp
   14000b666:	sub    dh,ah
   14000b668:	(bad)  
   14000b669:	pop    rbx
   14000b66a:	mov    eax,0xfc0aecc3
   14000b66f:	leave  
   14000b670:	(bad)  
   14000b671:	out    dx,eax
   14000b672:	rex.W jne 0x14000b6ec
   14000b675:	(bad)  [rdi-0x37]
   14000b678:	mov    esi,0x81d9b4dd
   14000b67d:	lods   eax,DWORD PTR ds:[rsi]
   14000b67e:	jrcxz  0x14000b6e5
   14000b680:	cmp    ah,dh
   14000b682:	pop    rdx
   14000b683:	pop    rax
   14000b684:	(bad)  
   14000b685:	ds out 0xce,eax
   14000b688:	mov    ebp,0xebb5b587
   14000b68d:	push   rsp
   14000b68e:	sbb    edi,DWORD PTR [rcx]
   14000b690:	outs   dx,BYTE PTR ss:[rsi]
   14000b692:	pop    rsp
   14000b693:	loopne 0x14000b710
   14000b695:	mov    esi,0xcd3057ed
   14000b69a:	add    bl,dl
   14000b69c:	jae    0x14000b6de
   14000b69e:	and    eax,0x18010536
   14000b6a3:	push   0xffffffffb9932804
   14000b6a8:	and    edi,DWORD PTR [rbx-0x3bc12894]
   14000b6ae:	sahf   
   14000b6af:	cli    
   14000b6b0:	out    0xac,eax
   14000b6b2:	sub    al,0x57
   14000b6b4:	(bad)  
   14000b6b6:	(bad)  
   14000b6b8:	sar    cl,cl
   14000b6ba:	(bad)  
   14000b6bb:	cmp    DWORD PTR [rcx-0x29],esi
   14000b6be:	std    
   14000b6bf:	jno    0x14000b685
   14000b6c1:	(bad)  
   14000b6c2:	mul    BYTE PTR [rcx-0x46]
   14000b6c5:	lahf   
   14000b6c6:	(bad)  
   14000b6c7:	adc    BYTE PTR [rdx],al
   14000b6c9:	shl    DWORD PTR [rcx+rax*8],cl
   14000b6cc:	mov    dl,0xd2
   14000b6ce:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b6cf:	movabs al,ds:0x6bd9149ca9d236c4
   14000b6d8:	(bad)  
   14000b6d9:	sbb    BYTE PTR [rax],ch
   14000b6db:	rex.X test eax,0xda2882f0
   14000b6e1:	mov    dl,0x53
   14000b6e3:	adc    al,0x5
   14000b6e5:	test   BYTE PTR [rax],dh
   14000b6e7:	pop    rax
   14000b6e8:	popf   
   14000b6e9:	cs jne 0x14000b699
   14000b6ec:	lock mov edi,esp
   14000b6ef:	jrcxz  0x14000b767
   14000b6f1:	shl    DWORD PTR [rbp+0x5c],0x69
   14000b6f5:	ins    BYTE PTR es:[rdi],dx
   14000b6f6:	add    BYTE PTR [rax-0x1c],ah
   14000b6f9:	movabs al,fs:0x9668fac1eb9bf13b
   14000b703:	sub    DWORD PTR [rbx-0x6d772950],esp
   14000b709:	rex.WB ins DWORD PTR es:[rdi],dx
   14000b70b:	(bad)
   14000b70e:	or     dh,BYTE PTR [rsi+0x3b492413]
   14000b714:	imul   eax,eax,0x5eabc4f
   14000b71a:	movabs eax,ds:0x904d9f97947ed5c4
   14000b723:	rex.B movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b725:	loop   0x14000b6d7
   14000b727:	imul   eax,esi,0xaae27162
   14000b72d:	adc    ebx,ecx
   14000b72f:	movabs ds:0xc3016c83a873f1e4,al
   14000b738:	punpckhdq mm3,QWORD PTR [rcx]
   14000b73b:	loop   0x14000b714
   14000b73d:	(bad)  
   14000b73e:	jns    0x14000b722
   14000b740:	loope  0x14000b749
   14000b742:	imul   esi,DWORD PTR [rsi],0x1dbb49b
   14000b748:	scas   eax,DWORD PTR es:[rdi]
   14000b749:	pop    rdi
   14000b74a:	idiv   BYTE PTR [rcx+0x706fe4fb]
   14000b750:	cli    
   14000b751:	out    dx,al
   14000b752:	or     ebp,DWORD PTR [rdi+rbx*2+0x77]
   14000b756:	rcl    BYTE PTR [rdx-0x4f],1
   14000b759:	xor    BYTE PTR [rdi+0x20],ch
   14000b75c:	rex.WX (bad) 
   14000b75e:	cmp    dh,bh
   14000b760:	adc    DWORD PTR [rdx],eax
   14000b762:	or     eax,0x660c22a1
   14000b767:	cmp    BYTE PTR [rbp-0x6],bh
   14000b76a:	imul   DWORD PTR [rax-0x6cd00282]
   14000b770:	fwait
   14000b771:	mov    ecx,0x2df9f99f
   14000b776:	outs   dx,BYTE PTR ds:[rsi]
   14000b777:	ins    BYTE PTR es:[rdi],dx
   14000b778:	out    dx,eax
   14000b779:	mov    WORD PTR [rsi],cs
   14000b77b:	rex.WXB mov r9b,0x0
   14000b77e:	add    BYTE PTR [rax],ah
   14000b780:	add    BYTE PTR [rcx+0x44],cl
   14000b783:	push   r12
   14000b785:	jrcxz  0x14000b802
   14000b787:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   14000b789:	pop    rcx
   14000b78a:	sbb    dl,BYTE PTR [rax-0x2d4a62d6]
   14000b790:	cmc    
   14000b791:	sbb    BYTE PTR [rip+0x605a6c07],ch        # 0x1a05b239e
   14000b797:	(bad)  
   14000b798:	sub    edi,DWORD PTR [rsi-0x5bb7d6f3]
   14000b79e:	out    dx,eax
   14000b79f:	lods   eax,DWORD PTR ds:[rsi]
   14000b7a0:	mov    ebx,0xdefbb1c3
   14000b7a5:	rex.WRB test r11,0x1cb80949
   14000b7ac:	rex.RX sbb r11b,BYTE PTR [rbx]
   14000b7af:	add    BYTE PTR [rax],bl
   14000b7b1:	xor    eax,0xf11be819
   14000b7b6:	xor    ebp,ebx
   14000b7b8:	sahf   
   14000b7b9:	(bad)  
   14000b7ba:	rex.XB push r15
   14000b7bc:	fmul   st,st(4)
   14000b7be:	and    al,0x4b
   14000b7c0:	loop   0x14000b79e
   14000b7c2:	mov    ch,0x8e
   14000b7c4:	or     edi,DWORD PTR [rax+0x18]
   14000b7c7:	es mov dh,0x99
   14000b7ca:	or     edx,edi
   14000b7cc:	mov    DWORD PTR [rdi-0x358d9b43],edx
   14000b7d2:	int3   
   14000b7d3:	push   0x17
   14000b7d5:	sub    al,BYTE PTR [rbp+0x206905e7]
   14000b7db:	nop
   14000b7dc:	rex.RX ja 0x14000b7da
   14000b7df:	repnz push rbx
   14000b7e1:	cmp    eax,DWORD PTR [rax+rcx*4+0x4ba36775]
   14000b7e8:	and    al,0xd6
   14000b7ea:	cdq    
   14000b7eb:	out    0xc9,eax
   14000b7ed:	fcomp  st(0)
   14000b7ef:	push   rdx
   14000b7f0:	repnz (bad) 
   14000b7f2:	mov    ebx,0x98e74f2c
   14000b7f7:	fwait
   14000b7f8:	fwait
   14000b7f9:	jrcxz  0x14000b7f0
   14000b7fb:	rex.WXB xchg r15,rax
   14000b7fd:	mov    ecx,0xbbe0e5b1
   14000b802:	lahf   
   14000b803:	loop   0x14000b862
   14000b805:	out    dx,eax
   14000b806:	clc    
   14000b807:	or     BYTE PTR [rsi+0xb],bl
   14000b80a:	jle    0x14000b7f6
   14000b80c:	rex.XB (bad) 
   14000b80e:	pop    rdi
   14000b80f:	jge    0x14000b882
   14000b811:	mov    ch,BYTE PTR [rcx+0x39859b72]
   14000b817:	lahf   
   14000b818:	xchg   ebp,eax
   14000b819:	adc    eax,0x623d1c5
   14000b81e:	stos   DWORD PTR es:[rdi],eax
   14000b81f:	stos   DWORD PTR es:[rdi],eax
   14000b820:	es stos DWORD PTR es:[rdi],eax
   14000b822:	rex.RXB adc al,0x27
   14000b825:	(bad)  
   14000b826:	sbb    ecx,DWORD PTR [rdi+rdx*1-0x25]
   14000b82a:	int3   
   14000b82b:	in     eax,0x7e
   14000b82d:	xchg   ebx,eax
   14000b82e:	mov    edx,0x1e8e39fa
   14000b833:	cmp    eax,0x2eeeeece
   14000b838:	fwait
   14000b839:	xlat   BYTE PTR ds:[rbx]
   14000b83a:	(bad)  
   14000b83b:	jno    0x14000b829
   14000b83d:	hlt    
   14000b83e:	mov    ebp,0xd04f7698
   14000b843:	ret    0x6381
   14000b846:	cmp    eax,DWORD PTR [rdx+rbp*1]
   14000b849:	mov    dl,0x63
   14000b84b:	cmp    DWORD PTR [rsp+rbx*1],ebp
   14000b84e:	(bad)  [rbx+rsi*1]
   14000b851:	xlat   BYTE PTR ds:[rbx]
   14000b852:	rex.R in eax,dx
   14000b854:	and    bh,BYTE PTR gs:[rcx-0x7857a29b]
   14000b85b:	xchg   esp,eax
   14000b85c:	stc    
   14000b85d:	(bad)  
   14000b85e:	mov    WORD PTR [rax],es
   14000b860:	loopne 0x14000b80f
   14000b862:	rex.WR (bad) 
   14000b864:	rex.WX push rdi
   14000b866:	mov    WORD PTR [rsi+0x63],ds
   14000b869:	pop    rdx
   14000b86a:	xlat   BYTE PTR ds:[rbx]
   14000b86b:	cmp    al,0x3a
   14000b86d:	fsubr  st,st(3)
   14000b86f:	(bad)  
   14000b870:	push   rax
   14000b871:	(bad)  
   14000b872:	push   rax
   14000b873:	popf   
   14000b874:	mov    edx,es
   14000b876:	pop    rsi
   14000b877:	div    DWORD PTR [rdi-0x24d3f3d7]
   14000b87d:	and    BYTE PTR [rdi+0x67],ah
   14000b880:	(bad)  
   14000b881:	xchg   DWORD PTR [rbx+0x29],esp
   14000b884:	and    dl,ch
   14000b886:	popf   
   14000b887:	gs in  al,0xbf
   14000b88a:	sete   ah
   14000b88d:	or     eax,DWORD PTR [rdx-0x4db0254c]
   14000b893:	movsxd ebp,DWORD PTR [rdi-0x32d5e738]
   14000b899:	fmul   DWORD PTR [rsi]
   14000b89b:	(bad)  
   14000b89c:	cdq    
   14000b89d:	(bad)  
   14000b89e:	(bad)  
   14000b89f:	popf   
   14000b8a0:	retf   0xd23e
   14000b8a3:	outs   dx,DWORD PTR ds:[rsi]
   14000b8a4:	and    DWORD PTR [rbp+rdi*2+0x49e27c1e],edi
   14000b8ab:	jbe    0x14000b924
   14000b8ad:	div    eax
   14000b8af:	pop    rsp
   14000b8b0:	fwait
   14000b8b1:	rex.WXB xchg r15,rax
   14000b8b3:	xlat   BYTE PTR ds:[rbx]
   14000b8b4:	js     0x14000b89d
   14000b8b6:	rex.XB mov r15d,0x64d8b944
   14000b8bc:	jae    0x14000b91b
   14000b8be:	lock mov edi,DWORD PTR [rdi+0x7df7867a]
   14000b8c5:	push   rdi
   14000b8c7:	movabs eax,ds:0x3ac5f2f3afd71554
   14000b8d0:	pop    rdi
   14000b8d1:	jle    0x14000b874
   14000b8d3:	xchg   bh,ah
   14000b8d5:	(bad)  
   14000b8d6:	or     dl,al
   14000b8d8:	sub    cl,BYTE PTR [rdi-0x60728024]
   14000b8de:	cld    
   14000b8df:	addr32 mov bl,0x1c
   14000b8e2:	(bad)  
   14000b8e3:	icebp  
   14000b8e4:	or     al,0xaf
   14000b8e6:	pop    rsp
   14000b8e7:	stc    
   14000b8e8:	adc    al,0xf6
   14000b8ea:	(bad)  
   14000b8eb:	cmp    ebx,DWORD PTR [rax+0x3d]
   14000b8ee:	mov    dl,0xca
   14000b8f0:	imul   edx,DWORD PTR [rdi+0x1d6cd12f],0xffffffa7
   14000b8f7:	pop    rsp
   14000b8f8:	cdq    
   14000b8f9:	mov    dh,BYTE PTR [rbx+0x19]
   14000b8fc:	adc    dh,BYTE PTR [rsp+rbx*1+0x3d8980c2]
   14000b903:	loop   0x14000b91b
   14000b905:	add    DWORD PTR [rbx+rax*8],edx
   14000b908:	in     al,0x9c
   14000b90a:	ins    BYTE PTR es:[rdi],dx
   14000b90b:	adc    BYTE PTR [rbp-0x39],dl
   14000b90e:	(bad)  
   14000b90f:	jo     0x14000b8b1
   14000b911:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b912:	in     al,0xd0
   14000b914:	rcr    eax,1
   14000b916:	add    al,al
   14000b918:	test   al,0xc9
   14000b91a:	rex
   14000b91b:	repnz (bad) 
   14000b91d:	and    eax,0xba864503
   14000b922:	in     al,dx
   14000b923:	xchg   ecx,eax
   14000b924:	(bad)  
   14000b925:	ss rex.XB test eax,0x6a1ac963
   14000b92c:	loope  0x14000b91d
   14000b92e:	xor    eax,0xa4f87554
   14000b933:	movabs ds:0x2cb4c08430af66e3,eax
   14000b93c:	mov    ah,0x80
   14000b93e:	rex.X jp 0x14000b9b5
   14000b941:	sbb    BYTE PTR [rdx+0x4b0d8491],0x85
   14000b948:	sbb    eax,DWORD PTR [rax+rcx*2+0x39ecd325]
   14000b94f:	add    esp,DWORD PTR [rax+0x1e278371]
   14000b955:	cmp    BYTE PTR [rbx-0x45972ff0],al
   14000b95b:	pop    rsp
   14000b95c:	mov    ecx,0xf53f321e
   14000b961:	(bad)  
   14000b962:	fdiv   QWORD PTR [rbx-0x31]
   14000b965:	(bad)  
   14000b966:	or     ebx,ebx
   14000b968:	mov    bl,0x68
   14000b96a:	mov    ebp,0x858aeac7
   14000b96f:	gs push rsi
   14000b971:	sub    DWORD PTR [rsi+0x2a],edx
   14000b974:	sub    BYTE PTR [rbp+0x46],dl
   14000b977:	int    0xae
   14000b979:	movabs ds:0xfd1fe256a8a94094,al
   14000b982:	leave  
   14000b983:	push   rdi
   14000b984:	clc    
   14000b985:	retf   0x3e57
   14000b988:	(bad)  
   14000b989:	movabs ds:0xbde4d32fc62a698f,eax
   14000b992:	sbb    al,0x3b
   14000b994:	jbe    0x14000b928
   14000b996:	lea    ebx,[rbx]
   14000b998:	sbb    ebp,esp
   14000b99a:	fidivr WORD PTR [rax+0x3f70be4c]
   14000b9a0:	mov    dh,0xe3
   14000b9a2:	fcomp  QWORD PTR [rdx-0x14]
   14000b9a5:	push   rsi
   14000b9a6:	fld    QWORD PTR [rip+0xffffffff8515ba7c]        # 0xc5167428
   14000b9ac:	(bad)  
   14000b9ad:	sub    ebx,esi
   14000b9af:	mov    dh,BYTE PTR [rdx+0x519501de]
   14000b9b5:	fbld   TBYTE PTR [rsi]
   14000b9b7:	xor    BYTE PTR [rax],dh
   14000b9b9:	rex.RX add BYTE PTR [rax],r8b
   14000b9bc:	and    ebp,esi
   14000b9be:	or     al,0x64
   14000b9c0:	neg    BYTE PTR [rdi+0x77]
   14000b9c3:	mov    ebx,0x604940c9
   14000b9c8:	rex.WB
   14000b9c9:	(bad)
   14000b9cd:	rex.WRXB or r9,QWORD PTR [r13+0x7f]
   14000b9d1:	xchg   edx,eax
   14000b9d2:	jge    0x14000b98a
   14000b9d4:	xchg   ebx,eax
   14000b9d5:	mov    esi,0x246d9bc9
   14000b9da:	cmp    dh,bh
   14000b9dc:	sbb    dl,ah
   14000b9de:	std    
   14000b9df:	and    BYTE PTR [rcx],cl
   14000b9e1:	and    bh,dh
   14000b9e3:	pop    QWORD PTR [rdx+0x47]
   14000b9e6:	sbb    al,BYTE PTR [rax+rdx*8+0x4ca1d89d]
   14000b9ed:	outs   dx,BYTE PTR ds:[rsi]
   14000b9ee:	rex.B push 0x50
   14000b9f1:	mov    WORD PTR [rdi],ds
   14000b9f3:	ds leave 
   14000b9f5:	sub    esi,eax
   14000b9f7:	sbb    bh,BYTE PTR [rbx-0x6c]
   14000b9fa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b9fb:	jb     0x14000b999
   14000b9fd:	cmp    al,0x79
   14000b9ff:	xchg   edx,eax
   14000ba00:	fstp   st(5)
   14000ba02:	pop    rbp
   14000ba03:	stos   BYTE PTR es:[rdi],al
   14000ba04:	cmc    
   14000ba05:	and    bh,BYTE PTR [rbx+0x3b]
   14000ba08:	lahf   
   14000ba09:	jrcxz  0x14000ba3a
   14000ba0b:	cld    
   14000ba0c:	mov    ecx,0xc6c2c35f
   14000ba11:	push   rdi
   14000ba12:	add    eax,0x94235184
   14000ba17:	(bad)  
   14000ba18:	pop    rdx
   14000ba19:	sub    edi,0x7b
   14000ba1c:	or     BYTE PTR [rdx-0x9dcf02c],0xdf
   14000ba23:	sub    edi,DWORD PTR [rax]
   14000ba25:	mov    esi,0x1b6b679a
   14000ba2a:	rex.X ja 0x14000b9b7
   14000ba2d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ba2e:	mov    ecx,0xfd6ae53f
   14000ba33:	xchg   ebx,eax
   14000ba34:	mov    dl,cl
   14000ba36:	jnp    0x14000ba70
   14000ba38:	jne    0x14000ba24
   14000ba3a:	xor    al,0xcf
   14000ba3c:	jg     0x14000ba2b
   14000ba3e:	jns    0x14000ba02
   14000ba40:	movsxd esp,DWORD PTR [rdi-0x4f]
   14000ba43:	sub    al,0xb3
   14000ba45:	sub    edi,DWORD PTR [rsi+0x62]
   14000ba48:	fdiv   DWORD PTR [rax]
   14000ba4a:	fs pop rdi
   14000ba4c:	jae    0x14000ba1e
   14000ba4e:	fiadd  WORD PTR es:[rbx]
   14000ba51:	xor    al,BYTE PTR [rsi+0x3197f707]
   14000ba57:	sahf   
   14000ba58:	data16 xchg BYTE PTR gs:[rcx+0x2e],al
   14000ba5d:	fld    st(3)
   14000ba5f:	movsxd r14d,DWORD PTR [rbx-0x36bbdfc9]
   14000ba66:	rex
   14000ba67:	rex.RXB push r14
   14000ba69:	push   rdi
   14000ba6a:	(bad)  
   14000ba6b:	mov    eax,0xd2ed6375
   14000ba70:	mov    bl,0x9f
   14000ba72:	js     0x14000ba02
   14000ba74:	lea    ebx,[rbx-0x121c43c5]
   14000ba7a:	(bad)  
   14000ba7b:	repnz sbb eax,0xf55efedf
   14000ba81:	(bad)  
   14000ba82:	ja     0x14000ba42
   14000ba84:	jrcxz  0x14000ba6a
   14000ba86:	fistp  DWORD PTR [rdi+0x4ce8e278]
   14000ba8c:	jno    0x14000ba9d
   14000ba8e:	push   rbp
   14000ba8f:	mov    ebx,0x86bad18c
   14000ba94:	and    ebp,DWORD PTR [rbx-0x6c2a4528]
   14000ba9a:	or     al,0xb4
   14000ba9c:	fwait
   14000ba9d:	es add edx,ebp
   14000baa0:	mov    dh,0xae
   14000baa2:	mov    al,0x7e
   14000baa4:	stc    
   14000baa5:	loop   0x14000ba67
   14000baa7:	jnp    0x14000bace
   14000baa9:	scas   al,BYTE PTR es:[rdi]
   14000baaa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000baab:	je     0x14000baf4
   14000baad:	shl    BYTE PTR [rdx+rdx*4+0x65],0xfe
   14000bab2:	and    eax,0x609266aa
   14000bab7:	xlat   BYTE PTR ds:[rbx]
   14000bab8:	stc    
   14000bab9:	xchg   edi,eax
   14000baba:	in     al,dx
   14000babb:	(bad)  
   14000babc:	fld    TBYTE PTR [rcx-0x60]
   14000babf:	xor    ecx,DWORD PTR [rbp-0x19d9b14c]
   14000bac5:	or     BYTE PTR [rsi-0x45],0xfe
   14000bac9:	cmc    
   14000baca:	nop
   14000bacb:	es in  eax,dx
   14000bacd:	(bad)
   14000bad1:	popf   
   14000bad2:	jns    0x14000bada
   14000bad4:	rex.WRB pop r12
   14000bad6:	pop    rax
   14000bad7:	and    ecx,edx
   14000bad9:	add    ecx,DWORD PTR [rax-0x5e]
   14000badc:	(bad)  
   14000badd:	mov    ch,0x56
   14000badf:	call   0x11dace2b4
   14000bae4:	in     al,0xe1
   14000bae6:	(bad)  
   14000bae7:	(bad)  
   14000bae8:	shl    bl,0x7c
   14000baeb:	pop    rsp
   14000baec:	xlat   BYTE PTR ds:[rbx]
   14000baed:	out    0xe2,al
   14000baef:	(bad)
   14000baf2:	jae    0x14000bae6
   14000baf4:	push   rdi
   14000baf5:	cdq    
   14000baf6:	pop    rbx
   14000baf7:	pop    rsp
   14000baf8:	(bad)  
   14000baf9:	lock sub ebp,DWORD PTR [rax+0x6d]
   14000bafd:	movsxd ecx,DWORD PTR [rdx]
   14000baff:	(bad)  
   14000bb00:	movabs eax,ds:0x61fa7c8c94a34042
   14000bb09:	mov    bh,ch
   14000bb0b:	sti    
   14000bb0c:	js     0x14000baac
   14000bb0e:	sbb    edx,ebp
   14000bb10:	or     ebp,DWORD PTR [rax+0x35]
   14000bb13:	(bad)  
   14000bb15:	or     al,0xd8
   14000bb17:	fnsave [rcx]
   14000bb19:	rol    DWORD PTR [rdx+0x512ffbbc],0x58
   14000bb20:	sbb    al,0x3b
   14000bb22:	jbe    0x14000bab6
   14000bb24:	fstp   DWORD PTR [rcx-0x41d029e7]
   14000bb2a:	or     BYTE PTR [rdx],0x83
   14000bb2d:	out    dx,al
   14000bb2e:	repnz in al,0x7
   14000bb31:	nop
   14000bb32:	data16 xor bl,dh
   14000bb35:	(bad)  
   14000bb36:	out    0x6,eax
   14000bb38:	dec    bl
   14000bb3a:	test   al,0xf6
   14000bb3c:	(bad)  
   14000bb3e:	retf   0xad6
   14000bb41:	call   0x1657c2dba
   14000bb46:	faddp  st(7),st
   14000bb48:	mov    esi,eax
   14000bb4a:	rex.WX add dil,BYTE PTR [rax-0x55]
   14000bb4e:	xchg   edx,eax
   14000bb4f:	xor    DWORD PTR [rsi+rax*4+0x4d236aad],0x8cccb5bd
   14000bb5a:	(bad)  
   14000bb5b:	cmp    bl,BYTE PTR [rcx+0x344746d0]
   14000bb61:	sbb    BYTE PTR [rsi],dl
   14000bb63:	ins    BYTE PTR es:[rdi],dx
   14000bb64:	xchg   edx,eax
   14000bb65:	sub    DWORD PTR [rdx+0x1dce03d],esi
   14000bb6b:	stos   DWORD PTR es:[rdi],eax
   14000bb6c:	pop    rbx
   14000bb6d:	sub    bl,BYTE PTR [rcx-0x18]
   14000bb70:	scas   al,BYTE PTR es:[rdi]
   14000bb71:	mov    edi,ebx
   14000bb73:	sti    
   14000bb74:	cmp    esp,DWORD PTR [rax]
   14000bb76:	mov    ?,WORD PTR [rsi]
   14000bb78:	ins    DWORD PTR es:[rdi],dx
   14000bb79:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bb7a:	sub    ebx,r12d
   14000bb7d:	cli    
   14000bb7e:	(bad)  
   14000bb7f:	addr32 rex.WRXB sbb rax,0xffffffff86666665
   14000bb86:	rex.RX movabs ds:0x8f38f8db10f5d5cd,eax
   14000bb90:	fdivp  st(7),st
   14000bb92:	sbb    al,0x81
   14000bb94:	(bad)  
   14000bb95:	adc    DWORD PTR [rsi+0x5],0xffffff94
   14000bb99:	xor    al,0x31
   14000bb9b:	mov    cl,0xb1
   14000bb9d:	jae    0x14000bb3c
   14000bb9f:	lock jmp 0x13a54c3ad
   14000bba5:	pop    rbp
   14000bba6:	sbb    BYTE PTR [rdx],cl
   14000bba8:	(bad)  
   14000bba9:	or     BYTE PTR [rax-0x4572db2b],ch
   14000bbaf:	(bad)  
   14000bbb0:	xor    ah,BYTE PTR [rdi+0x2afa9998]
   14000bbb6:	sti    
   14000bbb7:	(bad)  
   14000bbb8:	(bad)  
   14000bbb9:	adc    BYTE PTR [rbp-0x11846301],al
   14000bbbf:	mov    ecx,0xc7f8ff87
   14000bbc4:	lahf   
   14000bbc5:	(bad)  
   14000bbc6:	mov    ebx,0x2705377e
   14000bbcb:	(bad)  
   14000bbcc:	mov    dh,0xad
   14000bbce:	enter  0x1116,0x47
   14000bbd2:	add    al,BYTE PTR [rsi-0x65]
   14000bbd5:	(bad)  
   14000bbd6:	je     0x14000bb5a
   14000bbd8:	jl     0x14000bc4e
   14000bbda:	cld    
   14000bbdb:	mov    al,0xb7
   14000bbdd:	(bad)
   14000bbe0:	lea    esi,[rbp-0x137ff912]
   14000bbe6:	mov    DWORD PTR [rsi+0x4743e980],ebx
   14000bbec:	movsxd eax,DWORD PTR [rip+0x32656f00]        # 0x172662af2
   14000bbf2:	shl    BYTE PTR [rcx+rsi*1+0x4f],1
   14000bbf6:	sbb    BYTE PTR [rdi-0x4c],al
   14000bbf9:	stc    
   14000bbfa:	xor    r12b,0xfc
   14000bbfe:	js     0x14000bc4f
   14000bc00:	ror    BYTE PTR [rax+0x1ab48ced],0x6e
   14000bc07:	(bad)  
   14000bc08:	xor    dl,al
   14000bc0a:	xor    cl,BYTE PTR [rbp+0x641e42ee]
   14000bc10:	hlt    
   14000bc11:	rol    DWORD PTR [rcx],1
   14000bc13:	mov    dh,0x80
   14000bc15:	(bad)  
   14000bc16:	stos   BYTE PTR es:[rdi],al
   14000bc17:	add    eax,0xd38fd1d0
   14000bc1c:	ret    
   14000bc1d:	add    ebx,DWORD PTR [rax+0x18f92464]
   14000bc23:	(bad)  
   14000bc24:	jbe    0x14000bc43
   14000bc26:	sub    ebp,DWORD PTR [rax-0x3c13098e]
   14000bc2c:	add    al,0x41
   14000bc2e:	rcr    dh,0xbe
   14000bc31:	(bad)
   14000bc34:	pop    rdi
   14000bc35:	loopne 0x14000bc06
   14000bc37:	cmp    eax,0x8d306ffc
   14000bc3c:	rex.X mov spl,0xfa
   14000bc3f:	sbb    eax,DWORD PTR [rsi]
   14000bc41:	sub    BYTE PTR [rbx],dl
   14000bc43:	and    DWORD PTR [rdx+rsi*8],ebp
   14000bc46:	mov    ecx,0xc30c7048
   14000bc4b:	and    BYTE PTR [rbp+0x76],bh
   14000bc4e:	adc    eax,0xc31e257
   14000bc53:	or     edx,DWORD PTR [rip+0xffffffff9e0d0806]        # 0xde0dc45f
   14000bc59:	outs   dx,DWORD PTR ds:[rsi]
   14000bc5a:	movabs al,ds:0x43e76e4731428b42
   14000bc63:	clc    
   14000bc64:	(bad)
   14000bc67:	(bad)  
   14000bc68:	mov    DWORD PTR [rbx+0x1afaba38],edi
   14000bc6e:	scas   eax,DWORD PTR es:[rdi]
   14000bc6f:	mov    ebp,0xbe4e45fc
   14000bc74:	in     eax,dx
   14000bc75:	pop    rbp
   14000bc76:	add    al,0x5a
   14000bc78:	(bad)
   14000bc7b:	xchg   edx,eax
   14000bc7c:	(bad)  
   14000bc7d:	jle    0x14000bc39
   14000bc7f:	scas   eax,DWORD PTR es:[rdi]
   14000bc80:	add    BYTE PTR [rdx+0x27],cl
   14000bc83:	movabs ss:0x12081d38d7790cbb,al
   14000bc8d:	fst    QWORD PTR [rdx]
   14000bc8f:	push   rbx
   14000bc90:	(bad)  
   14000bc91:	or     BYTE PTR [rsi+rdx*2],bl
   14000bc94:	(bad)  
   14000bc95:	(bad)
   14000bc99:	loopne 0x14000bc48
   14000bc9b:	rex.WR (bad) 
   14000bc9d:	rex.X
   14000bc9e:	rex.RXB sub r8b,BYTE PTR [r8-0x32]
   14000bca2:	mov    al,0xc8
   14000bca4:	cmc    
   14000bca5:	add    al,0xe9
   14000bca7:	rex.R (bad) 
   14000bca9:	jbe    0x14000bc52
   14000bcab:	scas   al,BYTE PTR es:[rdi]
   14000bcac:	pop    rbp
   14000bcad:	sub    BYTE PTR [rbx-0x75],ah
   14000bcb0:	mov    esp,0x9d765c4c
   14000bcb5:	enter  0xa4c0,0x88
   14000bcb9:	xchg   DWORD PTR [rbp-0x66],esp
   14000bcbc:	popf   
   14000bcbd:	pop    rdx
   14000bcbe:	jbe    0x14000bc46
   14000bcc0:	adc    ecx,0xd22261d5
   14000bcc6:	neg    BYTE PTR [rbx-0x52]
   14000bcc9:	cmp    cl,BYTE PTR [rax+rdx*8]
   14000bccc:	cmp    eax,0xb76f9385
   14000bcd1:	in     al,0x7f
   14000bcd3:	add    DWORD PTR [rdx],edi
   14000bcd5:	or     al,0xf1
   14000bcd7:	imul   ebx,DWORD PTR [rbx-0x44],0xffffffeb
   14000bcdb:	mov    cl,0x87
   14000bcdd:	mov    al,0x6d
   14000bcdf:	fwait
   14000bce0:	push   rsi
   14000bce1:	pop    rbx
   14000bce2:	repnz loop 0x14000bcb0
   14000bce5:	imul   ebx,DWORD PTR [rbx+rbx*2],0xfffffff8
   14000bce9:	xor    BYTE PTR [rdi-0x71],al
   14000bcec:	pop    rsp
   14000bced:	(bad)
   14000bcf0:	push   rax
   14000bcf1:	fiadd  DWORD PTR [rbx+rcx*2+0x3]
   14000bcf5:	mov    al,0x30
   14000bcf7:	mov    al,0x71
   14000bcf9:	(bad)  
   14000bcfa:	(bad)  
   14000bcfb:	pop    rsi
   14000bcfc:	adc    ah,dh
   14000bcfe:	add    eax,DWORD PTR [rax+0x29483965]
   14000bd04:	mov    cl,0x2d
   14000bd06:	adc    esp,DWORD PTR [rcx-0x6bf6bdfb]
   14000bd0c:	lods   al,BYTE PTR ds:[rsi]
   14000bd0d:	push   rax
   14000bd0e:	sub    DWORD PTR [rdi-0x20],ebx
   14000bd11:	out    0xcd,al
   14000bd13:	jg     0x14000bca2
   14000bd15:	cmp    bh,bl
   14000bd17:	adc    al,0xf
   14000bd19:	cmp    eax,0xd7d730f4
   14000bd1e:	lahf   
   14000bd1f:	rol    DWORD PTR [rcx+0x51],0x29
   14000bd23:	xchg   edi,eax
   14000bd24:	adc    DWORD PTR [rsi-0x42d256ef],eax
   14000bd2a:	push   rbp
   14000bd2b:	xchg   edx,eax
   14000bd2c:	loop   0x14000bcdf
   14000bd2e:	or     esp,DWORD PTR [rbp+0x26]
   14000bd31:	xor    edx,DWORD PTR [rcx]
   14000bd33:	cmp    ah,BYTE PTR [rcx-0x29]
   14000bd36:	xchg   sp,ax
   14000bd38:	rex.RXB xchg r8d,eax
   14000bd3a:	lea    ebp,[rsp+rsi*1-0x6cd4dd85]
   14000bd41:	fbstp  TBYTE PTR [rdx-0x18b81235]
   14000bd47:	jnp    0x14000bd28
   14000bd49:	out    0x43,eax
   14000bd4b:	rex.RX movsxd r8d,DWORD PTR [rbx]
   14000bd4e:	add    BYTE PTR [rbx-0x1042fcda],ah
   14000bd54:	outs   dx,DWORD PTR ds:[rsi]
   14000bd55:	cld    
   14000bd56:	fdivr  st,st(3)
   14000bd58:	(bad)  
   14000bd59:	mov    cs,ebp
   14000bd5b:	mov    edi,0x8ca064c9
   14000bd60:	test   al,0x9d
   14000bd62:	xchg   ah,ch
   14000bd64:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bd65:	xchg   ebx,edx
   14000bd67:	rex.WRB
   14000bd68:	rex.XB ins DWORD PTR es:[rdi],dx
   14000bd6a:	retf   
   14000bd6b:	sub    BYTE PTR [rax-0x3035aa98],0xa
   14000bd72:	popf   
   14000bd73:	rex.WRX hlt 
   14000bd75:	push   rax
   14000bd76:	rex.RX add cl,r12b
   14000bd79:	(bad)  
   14000bd7a:	movabs eax,ds:0x4cc3c055d82ae9c3
   14000bd83:	add    edi,DWORD PTR [rdi+0x4c]
   14000bd86:	xchg   edx,eax
   14000bd87:	movabs al,ds:0xbf67612451874e9f
   14000bd90:	cmp    ebx,ebp
   14000bd92:	not    DWORD PTR [rbx+rax*4-0x7ea5ffb7]
   14000bd99:	pop    rbx
   14000bd9a:	(bad)  [rcx+rdi*2-0x4a]
   14000bd9e:	sar    ah,0xfc
   14000bda1:	cmp    al,0x4a
   14000bda3:	push   0x2e
   14000bda5:	pop    rdi
   14000bda6:	or     ebp,DWORD PTR [rax-0x2b]
   14000bda9:	(bad)  
   14000bdaa:	sar    DWORD PTR [rbx-0x61],0xfc
   14000bdae:	rex.XB add dil,BYTE PTR [r15+0x1e]
   14000bdb2:	and    eax,0x36b46d
   14000bdb7:	adc    edx,DWORD PTR [rax+rax*8+0x38ac2c32]
   14000bdbe:	cld    
   14000bdbf:	pop    rdi
   14000bdc0:	rex.WX cqo 
   14000bdc2:	xor    bh,BYTE PTR [rsi+0x2]
   14000bdc5:	movabs al,ds:0x5231de40e380ae4e
   14000bdce:	fstp   DWORD PTR [rbx+0x4b]
   14000bdd1:	adc    DWORD PTR [rsi+rcx*1-0x5b9e06c7],0x1eacbbfc
   14000bddc:	cmp    eax,0xa7d399c5
   14000bde1:	cmp    bh,bh
   14000bde3:	loop   0x14000bd84
   14000bde5:	repnz sar BYTE PTR [rbx-0x4edcc42],0xe3
   14000bded:	xchg   DWORD PTR [rbp+0x0],ecx
   14000bdf0:	xor    DWORD PTR [rdi+0xc6a643c],ebx
   14000bdf6:	in     eax,dx
   14000bdf7:	mov    eax,0x4bc9133b
   14000bdfc:	rex.WX
   14000bdfd:	rex.WB and BYTE PTR [rip+0x51a4106e],spl        # 0x191a4ce72
   14000be04:	or     cl,0xf8
   14000be07:	and    eax,0xb9d1d9ea
   14000be0c:	rex.WX jl 0x14000be0c
   14000be0f:	loopne 0x14000bdf0
   14000be11:	out    dx,eax
   14000be12:	jo     0x14000bdaf
   14000be14:	add    bh,al
   14000be16:	or     BYTE PTR [rax],al
   14000be18:	js     0x14000be25
   14000be1a:	ja     0x14000be22
   14000be1c:	retf   0x282c
   14000be1f:	pop    rbp
   14000be20:	(bad)  
   14000be21:	jp     0x14000bdb8
   14000be23:	test   DWORD PTR [rdx+rdx*1+0x4a],ebp
   14000be27:	jbe    0x14000bdc7
   14000be29:	or     eax,0x6d47c8b6
   14000be2e:	rcr    BYTE PTR [rip+0x6c28c27b],cl        # 0x1ac2980af
   14000be34:	cmp    BYTE PTR [rdx+rcx*4-0x33b9ef8a],dl
   14000be3b:	xchg   esi,eax
   14000be3c:	rex.R (bad) 
   14000be3e:	xchg   ecx,eax
   14000be3f:	test   eax,0x72766813
   14000be44:	or     ecx,DWORD PTR [rsp+rcx*4+0x38749c88]
   14000be4b:	(bad)
   14000be4f:	pop    rdx
   14000be50:	cs jo  0x14000be64
   14000be53:	add    DWORD PTR [r15+0x1f],0x7d
   14000be58:	(bad)  
   14000be59:	movabs al,ds:0x1e25e5795e6bafd9
   14000be62:	cmp    dh,bl
   14000be64:	stos   DWORD PTR es:[rdi],eax
   14000be65:	adc    al,0xf3
   14000be67:	or     dl,bh
   14000be69:	sub    eax,0xc7c663a2
   14000be6e:	xor    BYTE PTR [rcx+0x52],dl
   14000be71:	movsxd edx,DWORD PTR [rax-0x325d8e3d]
   14000be77:	add    edi,DWORD PTR [rbp+0x3f]
   14000be7a:	and    BYTE PTR [rcx+0x3e492401],dh
   14000be80:	rex.WX sub sil,BYTE PTR [rdx+r10*4+0x253a051]
   14000be88:	jp     0x14000bee4
   14000be8a:	add    al,BYTE PTR [rbp-0x36]
   14000be8d:	(bad)
   14000be90:	mov    edi,0xef140bfe
   14000be95:	inc    BYTE PTR [rax]
   14000be97:	(bad)  
   14000be98:	cmp    eax,0xae5738f6
   14000be9d:	cld    
   14000be9e:	(bad)  
   14000be9f:	(bad)  
   14000bea0:	xlat   BYTE PTR ds:[rbx]
   14000bea1:	xlat   BYTE PTR ds:[rbx]
   14000bea2:	pop    rax
   14000bea3:	pop    rsp
   14000bea4:	cmp    DWORD PTR [rdx+0x62a67469],ecx
   14000beaa:	or     ah,BYTE PTR [rsi+0x22]
   14000bead:	push   rdx
   14000beae:	or     DWORD PTR [rdx-0x4e3f7bdc],esi
   14000beb4:	sub    eax,0x8b527a1c
   14000beb9:	jrcxz  0x14000bf32
   14000bebb:	push   rbp
   14000bebc:	sbb    DWORD PTR [rcx],ecx
   14000bebe:	and    dl,BYTE PTR [rdx+rsi*4+0x2353e877]
   14000bec5:	(bad)  
   14000bec6:	xchg   edi,eax
   14000bec7:	or     DWORD PTR [rax+rax*8-0x8],esp
   14000becb:	sbb    al,0x16
   14000becd:	sbb    ah,BYTE PTR [rdi]
   14000becf:	add    BYTE PTR [rax],bl
   14000bed1:	sub    DWORD PTR [rcx],ebx
   14000bed3:	test   al,0x78
   14000bed5:	(bad)  
   14000bed6:	xchg   edx,eax
   14000bed7:	cmp    DWORD PTR [rdx+0x26],0xdeef664b
   14000bede:	sahf   
   14000bedf:	jbe    0x14000be7e
   14000bee1:	pop    QWORD PTR [rbx]
   14000bee3:	or     esi,edx
   14000bee5:	movs   WORD PTR es:[rdi],WORD PTR ds:[rsi]
   14000bee7:	xchg   esp,ecx
   14000bee9:	and    eax,0x32c30206
   14000beee:	jno    0x14000bea2
   14000bef0:	rex.RB cmp al,0xb2
   14000bef3:	rex.B (bad) 
   14000bef5:	jmp    0x18a8515fe
   14000befa:	loop   0x14000bf63
   14000befc:	loop   0x14000bede
   14000befe:	xor    eax,0x59414a9d
   14000bf03:	cmc    
   14000bf04:	ret    0xcd32
   14000bf07:	mov    ah,0xba
   14000bf09:	rex.WRXB add al,0x10
   14000bf0c:	or     ch,BYTE PTR [rdi-0x8dc3e46]
   14000bf12:	popf   
   14000bf13:	(bad)
   14000bf16:	rex.X or DWORD PTR [rdi-0x5],ebx
   14000bf1a:	cli    
   14000bf1b:	es adc eax,0x7b3837f3
   14000bf21:	cld    
   14000bf22:	add    eax,0x4d09775c
   14000bf27:	adc    al,0xef
   14000bf29:	scas   eax,DWORD PTR es:[rdi]
   14000bf2a:	xor    eax,0x98258920
   14000bf2f:	cmp    al,0x8e
   14000bf31:	in     eax,0xc6
   14000bf33:	or     al,0xaf
   14000bf35:	nop
   14000bf36:	xor    cl,BYTE PTR [rax-0x67]
   14000bf39:	(bad)  
   14000bf3a:	fiadd  DWORD PTR [rsp+rax*2]
   14000bf3d:	movabs eax,ds:0x52056882a45404b5
   14000bf46:	adc    DWORD PTR [rax+riz*4],0xa
   14000bf4a:	mov    al,0xf7
   14000bf4c:	retf   
   14000bf4d:	push   0x5c58f7fd
   14000bf52:	pop    rdx
   14000bf53:	out    0xbe,al
   14000bf55:	sti    
   14000bf56:	out    dx,al
   14000bf57:	out    0x6b,eax
   14000bf59:	scas   eax,DWORD PTR es:[rdi]
   14000bf5a:	mov    esp,0xd1f2e2c2
   14000bf5f:	rol    ebx,0xd6
   14000bf62:	movabs ds:0x95bd6f9d790c779f,eax
   14000bf6b:	add    DWORD PTR [rbp-0x58f5d578],0xffffffe0
   14000bf72:	sbb    bl,BYTE PTR [rdi+0x70]
   14000bf75:	and    BYTE PTR [rbx+0x1f],bh
   14000bf78:	push   rdx
   14000bf79:	out    0x87,al
   14000bf7b:	xor    DWORD PTR [rdx],eax
   14000bf7d:	adc    cl,0x93
   14000bf80:	sbb    esi,0xdd40cefc
   14000bf86:	xchg   ebx,eax
   14000bf87:	jb     0x14000bf11
   14000bf89:	rcr    ch,1
   14000bf8b:	mov    DWORD PTR [esi],ebx
   14000bf8e:	outs   dx,BYTE PTR ds:[rsi]
   14000bf8f:	xchg   ecx,eax
   14000bf90:	iret   
   14000bf91:	sbb    dh,BYTE PTR [rdx+rdi*4-0xfa3e651]
   14000bf98:	push   rdx
   14000bf99:	sbb    BYTE PTR [rsi],al
   14000bf9b:	mov    fs,WORD PTR [rcx-0x20]
   14000bf9e:	fcomp  st(1)
   14000bfa0:	pop    rbp
   14000bfa1:	je     0x14000bfdd
   14000bfa3:	fwait
   14000bfa4:	jle    0x14000bf2c
   14000bfa6:	rex.WX
   14000bfa7:	rex.RX (bad) 
   14000bfa9:	ret    
   14000bfaa:	rex.WX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bfac:	mov    BYTE PTR ss:[rax],dh
   14000bfaf:	mov    cs,WORD PTR [rdx]
   14000bfb1:	test   BYTE PTR [rax-0x79],bl
   14000bfb4:	(bad)  
   14000bfb5:	(bad)  
   14000bfb6:	lods   al,BYTE PTR ds:[rsi]
   14000bfb7:	adc    al,0xc
   14000bfb9:	rex.WRX pushf 
   14000bfbb:	cmp    BYTE PTR [rcx-0x45],al
   14000bfbe:	in     eax,dx
   14000bfbf:	mov    bl,0xb6
   14000bfc1:	scas   al,BYTE PTR es:[rdi]
   14000bfc2:	mov    ecx,0xbe29feb9
   14000bfc7:	repz in eax,dx
   14000bfc9:	mov    edi,0x20b3d487
   14000bfce:	repz push rcx
   14000bfd0:	movabs eax,ds:0xc850e2c75b00990d
   14000bfd9:	jmp    0x14c20ce12
   14000bfde:	add    esp,DWORD PTR [rsp+rdx*4-0x7f95f50f]
   14000bfe5:	xor    BYTE PTR [rax+0x2a],dl
   14000bfe8:	mov    ah,al
   14000bfea:	jp     0x14000bf95
   14000bfec:	shl    DWORD PTR [rdx],1
   14000bfee:	xor    cl,BYTE PTR [rax+rbp*2+0x40a2d1a5]
   14000bff5:	test   eax,0xabea8174
   14000bffa:	push   QWORD PTR [rdi]
   14000bffc:	(bad)  
   14000bffd:	cmp    edi,0xffffff98
   14000c000:	rex.RXB (bad) 
   14000c002:	jge    0x14000bf90
   14000c004:	repz out 0x5f,eax
   14000c007:	loope  0x14000bfe3
   14000c009:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c00a:	repz sbb al,0x3f
   14000c00d:	jge    0x14000c046
   14000c00f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c010:	imul   esi,ebp,0xc743f7ae
   14000c016:	lods   al,BYTE PTR ds:[rsi]
   14000c017:	xor    eax,DWORD PTR [rsi+0x3]
   14000c01a:	mov    ?,ebp
   14000c01c:	pushf  
   14000c01d:	call   0x1b73e5291
   14000c022:	js     0x14000bfbd
   14000c024:	(bad)  
   14000c025:	(bad)  
   14000c026:	sub    BYTE PTR [rsi],cl
   14000c028:	and    BYTE PTR [rsi+0x6],cl
   14000c02b:	movabs ds:0x1defc4ee9fa81927,al
   14000c034:	sbb    edi,ebx
   14000c036:	(bad)  
   14000c037:	std    
   14000c038:	cmp    esi,eax
   14000c03a:	movabs ds:0x9f6cff1e3d14ff21,al
   14000c043:	add    ebp,DWORD PTR [rsi+0x48cb7b48]
   14000c049:	add    al,0x49
   14000c04b:	enter  0x46af,0x63
   14000c04f:	sbb    al,BYTE PTR [rsi]
   14000c051:	cmp    edi,eax
   14000c053:	movabs ds:0x2957322a5533cf94,al
   14000c05c:	mov    bl,0x38
   14000c05e:	push   rbp
   14000c05f:	(bad)  
   14000c060:	imul   esp,DWORD PTR [rsi-0x76],0x950aa985
   14000c067:	pushf  
   14000c068:	mov    DWORD PTR [rbx],edx
   14000c06a:	push   rsp
   14000c06b:	jns    0x14000c059
   14000c06d:	rol    DWORD PTR [rdi+0x8],1
   14000c070:	adc    DWORD PTR [rax-0x187d44a],0xffffff85
   14000c077:	(bad)  
   14000c078:	cmp    DWORD PTR [rdi+0x66e661fa],esi
   14000c07e:	imul   eax,DWORD PTR [rcx+rax*2],0x9
   14000c082:	lods   eax,DWORD PTR ds:[rsi]
   14000c083:	movsxd esp,esi
   14000c085:	xlat   BYTE PTR ds:[rbx]
   14000c086:	and    dl,BYTE PTR [rdx-0x3f3f6bfe]
   14000c08c:	rex.R (bad) 
   14000c08e:	nop
   14000c08f:	(bad)  
   14000c090:	rex.R div edx
   14000c093:	cmp    al,0x1f
   14000c095:	iret   
   14000c096:	repz or bl,al
   14000c099:	xor    BYTE PTR [rsi],al
   14000c09b:	or     al,0x1d
   14000c09e:	push   0x8531a5b
   14000c0a3:	je     0x14000c0bd
   14000c0a5:	(bad)
   14000c0a8:	sbb    eax,0x4b4109a2
   14000c0ad:	or     al,0xa3
   14000c0af:	rex.WR mov al,0xf9
   14000c0b2:	mov    eax,DWORD PTR [rcx+riz*2+0x19d9e99b]
   14000c0b9:	(bad)  
   14000c0ba:	jl     0x14000c0ac
   14000c0bc:	(bad)  
   14000c0bd:	mov    esp,0x9e046bdd
   14000c0c2:	(bad)  
   14000c0c3:	ins    DWORD PTR es:[rdi],dx
   14000c0c4:	rex.W (bad) 
   14000c0c7:	movabs ds:0xb9fc462263832f9d,al
   14000c0d0:	cli    
   14000c0d1:	sar    BYTE PTR [rax],0xf3
   14000c0d4:	fisttp WORD PTR [r14+0x4f]
   14000c0d8:	jrcxz  0x14000c121
   14000c0da:	movsxd eax,DWORD PTR [rbx]
   14000c0dc:	add    BYTE PTR [rcx+0x32],dh
   14000c0df:	adc    BYTE PTR [rdi-0x8f709c1],cl
   14000c0e5:	cmp    eax,0x11a860f0
   14000c0ea:	(bad)  
   14000c0eb:	hlt    
   14000c0ec:	xor    edi,DWORD PTR [rdi]
   14000c0ee:	sti    
   14000c0ef:	jae    0x14000c0d8
   14000c0f1:	jp     0x14000c0ce
   14000c0f3:	fstp   QWORD PTR [rcx]
   14000c0f5:	dec    BYTE PTR [rdi-0x2a]
   14000c0f8:	(bad)
   14000c0fc:	xor    BYTE PTR [rax+0x48],dh
   14000c0ff:	outs   dx,BYTE PTR ds:[rsi]
   14000c100:	fisubr WORD PTR [rbx]
   14000c102:	xor    BYTE PTR [rdx+riz*8],cl
   14000c105:	cli    
   14000c106:	int3   
   14000c107:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c108:	out    dx,eax
   14000c109:	cld    
   14000c10a:	outs   dx,DWORD PTR ds:[rsi]
   14000c10b:	add    BYTE PTR [rax],bh
   14000c10d:	fs rex (bad) 
   14000c110:	mov    ecx,0xa91cfb22
   14000c115:	outs   dx,BYTE PTR ds:[rsi]
   14000c116:	sahf   
   14000c117:	test   eax,0xc80427ef
   14000c11c:	(bad)  
   14000c11d:	(bad)  
   14000c11e:	out    0x4e,eax
   14000c120:	(bad)  
   14000c121:	movabs ds:0xf2f0bc7baf512a54,eax
   14000c12a:	cs xchg esi,eax
   14000c12c:	cld    
   14000c12d:	rex.XB out dx,al
   14000c12f:	cmp    esi,ebx
   14000c131:	gs cld 
   14000c133:	test   BYTE PTR [rdx+rdi*1],0x34
   14000c137:	push   rcx
   14000c138:	rex.WX movabs al,ds:0x9012d132af785115
   14000c142:	(bad)  
   14000c143:	sub    BYTE PTR [rcx+0x50c26a6d],al
   14000c149:	adc    DWORD PTR [rsi-0x6e033582],eax
   14000c14f:	and    DWORD PTR [rax],esi
   14000c151:	jp     0x14000c1a4
   14000c153:	retf   
   14000c154:	add    al,0xc3
   14000c156:	(bad)  
   14000c157:	movabs al,ds:0x4212504b400a8443
   14000c160:	mov    DWORD PTR [rcx+0x6ba54a1c],esp
   14000c166:	in     al,dx
   14000c167:	mov    ebp,0x107ff0
   14000c16c:	(bad)  
   14000c16d:	cmp    al,0xfc
   14000c16f:	or     BYTE PTR [rbp+0x47],al
   14000c172:	mov    al,0xb9
   14000c174:	jno    0x14000c10b
   14000c176:	and    BYTE PTR [rbx+rdi*8],cl
   14000c179:	clc    
   14000c17a:	mov    edi,0x2864867
   14000c17f:	rex.R fistp QWORD PTR [rdi+0x3f61a2f4]
   14000c186:	movabs ds:0x51b180b5587cfaee,al
   14000c18f:	add    DWORD PTR [rsi+0x4f],eax
   14000c192:	(bad)  
   14000c193:	mov    edx,0x86b4bf03
   14000c198:	xchg   esi,eax
   14000c199:	out    0xc7,eax
   14000c19b:	(bad)  
   14000c19c:	mov    bh,0xac
   14000c19e:	gs ds ds sbb eax,0x9ee9e187
   14000c1a6:	imul   eax,DWORD PTR [rsi],0x48
   14000c1a9:	repz fstp QWORD PTR [rdi-0x3b]
   14000c1ad:	jo     0x14000c224
   14000c1af:	loopne 0x14000c151
   14000c1b1:	out    0x8e,eax
   14000c1b3:	(bad)  
   14000c1b4:	adc    eax,0x59b58b86
   14000c1b9:	cmp    sil,BYTE PTR [r11+rbp*8-0x6c]
   14000c1be:	ins    DWORD PTR es:[rdi],dx
   14000c1bf:	leave  
   14000c1c0:	mov    ebp,0xa34bdef7
   14000c1c5:	shl    DWORD PTR [rbx+rsi*2+0x17],1
   14000c1c9:	scas   al,BYTE PTR es:[rdi]
   14000c1ca:	pop    rsi
   14000c1cb:	stc    
   14000c1cc:	movsxd edi,DWORD PTR [rsi-0x3e205e1d]
   14000c1d2:	adc    dh,BYTE PTR [rsi]
   14000c1d4:	pop    rsi
   14000c1d5:	call   0x158ab505a
   14000c1da:	rex.RB add eax,0x83db224f
   14000c1e0:	rol    BYTE PTR [rsi],1
   14000c1e2:	fimul  DWORD PTR [rax-0x3777bae8]
   14000c1e8:	rex sbb DWORD PTR [rbp+0x2b],ebp
   14000c1ec:	sar    DWORD PTR cs:[rsi-0x2e64c733],cl
   14000c1f3:	adc    BYTE PTR [rdx],bl
   14000c1f5:	fist   DWORD PTR [rax+0x2080c4e8]
   14000c1fb:	mov    esp,edx
   14000c1fd:	add    DWORD PTR [rbp-0x5cd3b730],esp
   14000c203:	rex.R fdivr st,st(0)
   14000c206:	adc    eax,0xfdaff6
   14000c20b:	or     eax,edi
   14000c20d:	(bad)  
   14000c20e:	loopne 0x14000c1e1
   14000c210:	rex.RXB (bad) 
   14000c212:	loope  0x14000c267
   14000c214:	lahf   
   14000c215:	stc    
   14000c216:	sub    al,0x33
   14000c218:	or     eax,DWORD PTR [rdi+0x28]
   14000c21b:	cdq    
   14000c21c:	xchg   ebp,eax
   14000c21d:	enter  0xc82d,0xad
   14000c221:	xlat   BYTE PTR ds:[rbx]
   14000c222:	stc    
   14000c223:	add    eax,DWORD PTR [rbx]
   14000c225:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c226:	xor    bh,BYTE PTR [rdi+0x7]
   14000c229:	rex.RX jmp QWORD PTR [rbp+0x3e34f7fd]
   14000c230:	fs xor al,0x36
   14000c233:	adc    al,al
   14000c235:	(bad)  
   14000c236:	jle    0x14000c218
   14000c238:	xchg   DWORD PTR [rdi],edi
   14000c23a:	pop    rcx
   14000c23b:	lods   eax,DWORD PTR ds:[rsi]
   14000c23c:	(bad)  
   14000c23d:	jle    0x14000c224
   14000c23f:	mov    bl,0x5f
   14000c241:	clc    
   14000c242:	sub    al,BYTE PTR [rdi-0x72]
   14000c245:	sahf   
   14000c246:	(bad)  
   14000c247:	(bad)  
   14000c249:	pop    rbp
   14000c24a:	fild   QWORD PTR [rsi-0x69]
   14000c24d:	rex.WXB test r15,rbp
   14000c250:	or     BYTE PTR [rip+0xffffffffcdcdcf2f],dl        # 0x10dce9185
   14000c256:	jmp    FWORD PTR [rbx-0x20d4dc1b]
   14000c25c:	xor    esi,DWORD PTR [rbx]
   14000c25e:	xor    edi,DWORD PTR [rbx+0x73]
   14000c261:	shl    BYTE PTR [rbp+0x36f66b5a],1
   14000c267:	xlat   BYTE PTR ds:[rbx]
   14000c268:	mov    ecx,0xf8e7fcf8
   14000c26d:	retf   0xfea7
   14000c270:	nop
   14000c271:	(bad)  
   14000c272:	ds repz sbb al,0x57
   14000c276:	pop    rsi
   14000c277:	jle    0x14000c217
   14000c279:	ins    WORD PTR es:[rdi],dx
   14000c27b:	jg     0x14000c265
   14000c27d:	std    
   14000c27e:	cmp    al,0x3f
   14000c280:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c281:	(bad)  
   14000c282:	je     0x14000c25d
   14000c284:	lods   eax,DWORD PTR ds:[rsi]
   14000c285:	ss fcomp st(2)
   14000c288:	stos   DWORD PTR es:[rdi],eax
   14000c289:	mov    cl,0xb5
   14000c28b:	push   rdi
   14000c28c:	addr32 mov bh,0xda
   14000c28f:	(bad)  
   14000c290:	mov    edi,0x7ae9a2de
   14000c295:	js     0x14000c288
   14000c297:	jbe    0x14000c2f9
   14000c299:	nop
   14000c29a:	lods   eax,DWORD PTR ds:[rsi]
   14000c29b:	adc    edi,0x5f
   14000c29e:	std    
   14000c29f:	(bad)  
   14000c2a0:	leave  
   14000c2a1:	rex.WRB
   14000c2a2:	rex.WXB push r14
   14000c2a4:	neg    esi
   14000c2a6:	rcr    ch,1
   14000c2a8:	mov    esi,0xd207015
   14000c2ad:	(bad)  
   14000c2ae:	(bad)  
   14000c2af:	clc    
   14000c2b0:	loop   0x14000c31e
   14000c2b2:	(bad)  
   14000c2b3:	out    dx,al
   14000c2b4:	fidivr WORD PTR [rdx+0x1c]
   14000c2b7:	out    dx,al
   14000c2b8:	jmp    0x14000c30c
   14000c2ba:	lods   eax,DWORD PTR ds:[rsi]
   14000c2bb:	add    eax,0x5785ed7c
   14000c2c0:	cmp    DWORD PTR [rbp+0x5958eff0],edi
   14000c2c6:	lods   al,BYTE PTR ds:[rsi]
   14000c2c7:	adc    DWORD PTR [rax+0x51b0b459],ebp
   14000c2cd:	fiadd  DWORD PTR [rax]
   14000c2cf:	imul   esp,DWORD PTR [rax+0x238c5454],0x7c388302
   14000c2d9:	pop    rax
   14000c2da:	sub    DWORD PTR [rcx-0x7a],0x71
   14000c2de:	ror    BYTE PTR [rdi+0x6c1c71c0],1
   14000c2e4:	fcmovnb st,st(6)
   14000c2e6:	mov    dh,0x6d
   14000c2e8:	sbb    al,0x27
   14000c2ea:	(bad)  
   14000c2eb:	mov    ebp,0xc71a9af
   14000c2f0:	lea    ebp,[rcx-0x7ed9573d]
   14000c2f6:	push   rsp
   14000c2f7:	push   0xffffffff8ca5a215
   14000c2fc:	add    BYTE PTR [rax+0x5b],0x18
   14000c300:	in     al,dx
   14000c301:	push   rax
   14000c302:	jg     0x14000c301
   14000c304:	jmp    QWORD PTR [rcx+0x7bee0ad]
   14000c30a:	faddp  st(6),st
   14000c30c:	fdiv   QWORD PTR [rbp+rax*4-0x43]
   14000c310:	int    0x6b
   14000c312:	push   0xfffffffffb2abaad
   14000c317:	and    al,0x35
   14000c319:	add    al,BYTE PTR [rdi-0xbe0a43]
   14000c31f:	xchg   BYTE PTR [rsi+0xf9c1651],cl
   14000c325:	mov    ecx,0x1236300a
   14000c32a:	add    BYTE PTR [rax+rdi*4+0x3780d033],cl
   14000c331:	mov    esi,0x80819ded
   14000c336:	cdq    
   14000c337:	jb     0x14000c36a
   14000c339:	adc    edi,esp
   14000c33b:	adc    edi,DWORD PTR [rcx-0x2cd6bd12]
   14000c341:	jg     0x14000c3a1
   14000c343:	adc    BYTE PTR [rdi],dl
   14000c345:	hlt    
   14000c346:	mov    BYTE PTR [rbx],cl
   14000c348:	jns    0x14000c370
   14000c34a:	test   DWORD PTR [rbx],edi
   14000c34c:	xchg   edx,eax
   14000c34d:	mov    al,0x61
   14000c34f:	retf   
   14000c350:	int3   
   14000c351:	(bad)  
   14000c352:	repz sub BYTE PTR [rsi+riz*8-0x22],0x81
   14000c358:	rol    BYTE PTR [rbx+0x1f],cl
   14000c35b:	(bad)
   14000c35e:	sti    
   14000c35f:	and    BYTE PTR [rbx],bh
   14000c361:	sbb    eax,0x26ed7e00
   14000c366:	(bad)  
   14000c367:	mov    gs,WORD PTR [rax+rsi*1]
   14000c36a:	(bad)  
   14000c36b:	(bad)  
   14000c36c:	(bad)  
   14000c36d:	out    0xe6,al
   14000c36f:	ss scas eax,DWORD PTR es:[rdi]
   14000c371:	pop    rbp
   14000c372:	push   rcx
   14000c373:	test   ch,ch
   14000c375:	out    0x78,eax
   14000c377:	hlt    
   14000c378:	xchg   ecx,eax
   14000c379:	rex.WRXB shr QWORD PTR [r10+0x58],cl
   14000c37d:	enter  0x3f60,0x32
   14000c381:	(bad)  
   14000c382:	rex.WB or BYTE PTR [r13-0x6bdf5ebc],spl
   14000c389:	sub    BYTE PTR [rcx+0x4c2d8051],ah
   14000c38f:	test   BYTE PTR [rcx-0x7f],ah
   14000c392:	fbld   TBYTE PTR [rax-0x1432457]
   14000c398:	cli    
   14000c399:	and    eax,0x162c5340
   14000c39e:	sub    DWORD PTR [rdi-0x6e346b35],edx
   14000c3a4:	iret   
   14000c3a5:	pop    rbp
   14000c3a6:	push   0x430a1085
   14000c3ab:	imul   edx,eax,0xfffffff1
   14000c3ae:	pop    rsi
   14000c3af:	jge    0x14000c3fb
   14000c3b1:	jbe    0x14000c38f
   14000c3b3:	scas   al,BYTE PTR es:[rdi]
   14000c3b4:	pop    rdx
   14000c3b5:	movsxd ecx,DWORD PTR [rdx-0x4814b1e4]
   14000c3bb:	imul   ebx,DWORD PTR [rdi+rdi*8+0x0],0xe61f47b3
   14000c3c3:	icebp  
   14000c3c4:	mov    bh,0x3f
   14000c3c6:	(bad)  
   14000c3c7:	(bad)  
   14000c3c8:	lahf   
   14000c3c9:	sti    
   14000c3ca:	add    al,0xba
   14000c3cc:	mov    eax,0xc058a140
   14000c3d1:	xor    ch,BYTE PTR [rbp-0x7d9aa734]
   14000c3d7:	jl     0x14000c3bb
   14000c3d9:	int    0x55
   14000c3db:	jne    0x14000c3cf
   14000c3dd:	out    dx,al
   14000c3de:	mov    edx,0xef74bc67
   14000c3e3:	pop    rbx
   14000c3e4:	neg    ebx
   14000c3e6:	add    dl,bh
   14000c3e8:	rex.RX out dx,eax
   14000c3ea:	mov    al,0xca
   14000c3ec:	dec    DWORD PTR [rcx+rbx*1+0x33b28c00]
   14000c3f3:	shr    BYTE PTR [rbx-0x51],1
   14000c3f6:	outs   dx,DWORD PTR ds:[rsi]
   14000c3f7:	fcom   QWORD PTR [rcx-0x295b7e63]
   14000c3fd:	pop    rbp
   14000c3fe:	and    ch,BYTE PTR [rax+0x265b6010]
   14000c404:	mov    ds,WORD PTR [rbp+0x44ebedf1]
   14000c40a:	(bad)  
   14000c40b:	rex.WRXB or r15b,BYTE PTR [r10+0x44]
   14000c40f:	add    DWORD PTR [rsi+rbx*4],ebp
   14000c412:	out    dx,eax
   14000c413:	ror    DWORD PTR [rbx+riz*4+0x336ba305],cl
   14000c41a:	xchg   ecx,eax
   14000c41b:	ins    DWORD PTR es:[rdi],dx
   14000c41c:	xor    DWORD PTR [rax],edi
   14000c41e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c41f:	(bad)  
   14000c420:	jle    0x14000c3d4
   14000c422:	mov    ch,0xed
   14000c424:	(bad)
   14000c429:	call   0x11e7278c7
   14000c42e:	jl     0x14000c487
   14000c430:	in     al,dx
   14000c431:	rex.B out 0xd9,al
   14000c434:	push   rsp
   14000c435:	loopne 0x14000c3d9
   14000c437:	fstp   TBYTE PTR [rbx-0x10d20fc4]
   14000c43d:	gs jnp 0x14000c4bb
   14000c440:	fwait
   14000c441:	lods   eax,DWORD PTR ds:[rsi]
   14000c442:	sbb    eax,0x3e178b83
   14000c447:	retf   
   14000c448:	cmp    ecx,DWORD PTR [rsi+0x63410afd]
   14000c44e:	popf   
   14000c44f:	and    BYTE PTR [rax],ch
   14000c451:	xor    DWORD PTR [rdx],0x9797ca2
   14000c457:	xor    ch,BYTE PTR [rip+0x68606a0d]        # 0x1a8612e6a
   14000c45d:	adc    esp,DWORD PTR [rbp+0x15e58821]
   14000c463:	movabs eax,ds:0x83b3bdb26fafd67c
   14000c46c:	or     al,0x3
   14000c46e:	retf   0x12e5
   14000c471:	in     eax,dx
   14000c472:	jbe    0x14000c40f
   14000c474:	jbe    0x14000c451
   14000c476:	gs jns 0x14000c472
   14000c479:	or     BYTE PTR [rcx+0x6dbb44db],al
   14000c47f:	(bad)  
   14000c480:	mov    dh,0x20
   14000c482:	mov    ah,0x2d
   14000c484:	movabs ds:0x81a402044068bf40,al
   14000c48d:	shl    BYTE PTR [rdx],0x67
   14000c490:	(bad)  
   14000c491:	test   eax,0x93bffcbd
   14000c496:	pop    rdi
   14000c497:	cld    
   14000c498:	or     BYTE PTR [rdi-0x63],dh
   14000c49b:	cmp    eax,0xbf57cacb
   14000c4a0:	rex.WR jne 0x14000c51a
   14000c4a3:	lea    ebx,[rcx-0x79ee8417]
   14000c4a9:	sbb    DWORD PTR [rdi+0x2],eax
   14000c4ac:	not    BYTE PTR [rsi+0x56301afa]
   14000c4b2:	imul   edx,DWORD PTR [rcx],0x64610356
   14000c4b8:	(bad)
   14000c4bd:	retf   
   14000c4be:	(bad)  
   14000c4bf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c4c0:	xchg   DWORD PTR [rbx+rax*1],edx
   14000c4c3:	(bad)  
   14000c4c4:	or     al,BYTE PTR [rax]
   14000c4c6:	fidiv  WORD PTR [rdx+0x3b12819d]
   14000c4cc:	push   rbx
   14000c4cd:	ret    0x3d97
   14000c4d0:	loop   0x14000c4f7
   14000c4d2:	(bad)  
   14000c4d3:	cli    
   14000c4d4:	imul   edi,DWORD PTR [rax+rbx*2-0x78],0xb6d8f428
   14000c4dc:	int3   
   14000c4dd:	rol    DWORD PTR [rcx-0x2c366c1],0x30
   14000c4e4:	or     al,0x71
   14000c4e6:	cmp    eax,0xed7d0999
   14000c4eb:	push   rsp
   14000c4ec:	cli    
   14000c4ed:	jmp    0xf6b4b9ea
   14000c4f2:	xchg   DWORD PTR [rax],edi
   14000c4f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c4f5:	xchg   edi,eax
   14000c4f6:	rex.WRX sub al,0x7d
   14000c4f9:	out    dx,eax
   14000c4fa:	pop    rsp
   14000c4fb:	(bad)  
   14000c4fc:	rex.WX loope 0x14000c4ec
   14000c4ff:	scas   eax,DWORD PTR es:[rdi]
   14000c500:	repz clc 
   14000c502:	ret    
   14000c503:	outs   dx,DWORD PTR ds:[rsi]
   14000c504:	ret    
   14000c505:	idiv   DWORD PTR [rbp-0x56]
   14000c508:	cmc    
   14000c509:	adc    BYTE PTR [rdi-0x174c1032],0x7c
   14000c510:	cwde   
   14000c511:	ror    DWORD PTR [rbx+0x2bd7017],cl
   14000c517:	pop    rdx
   14000c518:	sbb    esi,ecx
   14000c51a:	push   0x6a
   14000c51c:	movabs al,ds:0xa2501051002f1c45
   14000c525:	lahf   
   14000c526:	(bad)  
   14000c527:	sbb    ah,bl
   14000c529:	je     0x14000c4f0
   14000c52b:	ret    0x2c72
   14000c52e:	or     bh,cl
   14000c530:	cmp    al,0xbe
   14000c532:	fist   WORD PTR [rcx+0x3]
   14000c535:	pushf  
   14000c536:	pushf  
   14000c537:	add    eax,DWORD PTR [rdx-0x60]
   14000c53a:	mov    ah,0x1b
   14000c53c:	or     DWORD PTR [rsi+0x18],0x2e30fca0
   14000c543:	cmp    DWORD PTR [rsi],ebx
   14000c545:	or     eax,0x5051d098
   14000c54a:	xchg   ecx,eax
   14000c54b:	adc    BYTE PTR [rdx],bl
   14000c54d:	xchg   esp,eax
   14000c54e:	mov    DWORD PTR [rcx-0x1],ebx
   14000c551:	cmp    ch,ch
   14000c553:	int    0xaf
   14000c555:	(bad)  
   14000c556:	cs cmp eax,0x3e8fa3ca
   14000c55c:	(bad)  
   14000c55d:	xor    ebx,DWORD PTR [rdi+0x3dfc8e78]
   14000c563:	punpcklwd mm3,DWORD PTR [rbx-0x2ccb3dea]
   14000c56a:	sub    edx,0x3191f20a
   14000c570:	cwde   
   14000c571:	xchg   BYTE PTR [rdx],dl
   14000c573:	iret   
   14000c574:	rsqrtps xmm4,XMMWORD PTR [rbx]
   14000c577:	(bad)  
   14000c578:	hlt    
   14000c579:	xchg   DWORD PTR [rcx],ecx
   14000c57b:	ret    
   14000c57c:	je     0x14000c595
   14000c57e:	adc    BYTE PTR [rax-0x27],cl
   14000c581:	xchg   ebx,eax
   14000c582:	push   rdi
   14000c583:	cwde   
   14000c584:	rex.WX push rdi
   14000c586:	xchg   DWORD PTR [rbx],edx
   14000c588:	add    esi,eax
   14000c58a:	or     al,BYTE PTR [rax]
   14000c58c:	fisubr WORD PTR [rdx+0x26d4a064]
   14000c592:	jg     0x14000c5bf
   14000c594:	and    esi,DWORD PTR [rbx+0x5f]
   14000c597:	(bad)
   14000c59a:	cmp    BYTE PTR [rax+rbp*1-0x57],ah
   14000c59e:	repz xlat BYTE PTR ds:[rbx]
   14000c5a0:	test   eax,0x751d3f6
   14000c5a5:	push   rsp
   14000c5a6:	jbe    0x14000c56a
   14000c5a8:	rex.WXB test r11,rbp
   14000c5ab:	stc    
   14000c5ac:	push   rcx
   14000c5ad:	pop    rsi
   14000c5ae:	pop    r12
   14000c5b0:	and    DWORD PTR [rdi],esi
   14000c5b2:	mov    cl,0x2f
   14000c5b4:	je     0x14000c60c
   14000c5b6:	ret    
   14000c5b7:	rex.WR push rsp
   14000c5b9:	(bad)  
   14000c5ba:	ins    BYTE PTR es:[rdi],dx
   14000c5bb:	outs   dx,DWORD PTR ds:[rsi]
   14000c5bc:	lock (bad) 
   14000c5be:	cmp    ecx,esp
   14000c5c0:	adc    al,0xc
   14000c5c2:	out    0xe7,al
   14000c5c4:	out    0x59,eax
   14000c5c6:	pop    rdi
   14000c5c7:	pop    rdi
   14000c5c8:	out    0xda,eax
   14000c5ca:	int    0x2
   14000c5cc:	(bad)  
   14000c5cd:	in     eax,dx
   14000c5ce:	addr32 js 0x14000c5c8
   14000c5d1:	add    ebx,DWORD PTR [rdi]
   14000c5d3:	and    eax,0x4e501df0
   14000c5d8:	in     al,0xf6
   14000c5da:	adc    esp,DWORD PTR [rsp+rcx*4+0x4aa2bc9a]
   14000c5e1:	cdq    
   14000c5e2:	(bad)  
   14000c5e3:	jp     0x14000c658
   14000c5e5:	add    al,0x1c
   14000c5e7:	pop    rcx
   14000c5e8:	add    bl,dh
   14000c5ea:	xor    bl,BYTE PTR [rax]
   14000c5ec:	xchg   BYTE PTR [rcx+0x2e],cl
   14000c5ef:	xchg   edi,eax
   14000c5f0:	and    ebx,DWORD PTR [rdi+0x162c502f]
   14000c5f6:	sub    DWORD PTR [rbp+0x6042184a],edx
   14000c5fc:	or     DWORD PTR [rax+0x2800dae2],esi
   14000c602:	(bad)  [rcx+0x623093ec]
   14000c608:	adc    BYTE PTR [rsi+0x7c3796e0],ah
   14000c60e:	stos   BYTE PTR es:[rdi],al
   14000c60f:	iret   
   14000c610:	call   QWORD PTR [rbx]
   14000c612:	int3   
   14000c613:	outs   dx,DWORD PTR ds:[rsi]
   14000c614:	jnp    0x14000c59c
   14000c616:	adc    eax,edi
   14000c618:	rex.WRXB mov r10b,0xba
   14000c61b:	mov    dl,0xc4
   14000c61d:	vhsubps ymm2,ymm10,YMMWORD PTR [rsi-0x76c2f04d]
   14000c625:	(bad)  
   14000c626:	movabs ds:0x455e7c65047f7fc,eax
   14000c62f:	jg     0x14000c663
   14000c631:	sub    ebp,DWORD PTR [rcx+0x49]
   14000c634:	and    r11b,r8b
   14000c637:	and    DWORD PTR ds:[rax+0x62],0xffffff97
   14000c63c:	rex.WB jle 0x14000c5e3
   14000c63f:	mov    DWORD PTR [rdx],ecx
   14000c641:	xor    BYTE PTR [rsi],ah
   14000c643:	xor    al,0x6a
   14000c645:	xor    dl,al
   14000c647:	test   edi,edx
   14000c649:	scas   al,BYTE PTR es:[rdi]
   14000c64a:	mov    ebp,0x9bc5b1df
   14000c64f:	rex.WRX (bad) 
   14000c651:	rex.WX clc 
   14000c653:	pop    rbx
   14000c654:	rcl    DWORD PTR [rdi],1
   14000c656:	call   QWORD PTR [rdi-0x527c8b67]
   14000c65c:	push   rdi
   14000c65d:	xor    DWORD PTR [rsi+rsi*2-0x6b],0xffffffdc
   14000c662:	adc    al,0x10
   14000c664:	cdq    
   14000c665:	or     DWORD PTR [rcx],ebp
   14000c667:	test   al,al
   14000c669:	mov    cl,0x4c
   14000c66b:	loop   0x14000c5f4
   14000c66d:	lea    eax,[rcx+rbp*8]
   14000c670:	(bad)  
   14000c671:	mov    al,0xd7
   14000c673:	rex.WB cmp BYTE PTR [r10],cl
   14000c676:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c677:	ret    0x420f
   14000c67a:	ficomp DWORD PTR [rsi+0x26]
   14000c67d:	jno    0x14000c6c5
   14000c67f:	or     BYTE PTR [rdx+rcx*4],al
   14000c682:	(bad)  
   14000c683:	jmp    0x14000c68b
   14000c685:	idiv   DWORD PTR [rbp-0x49498e0d]
   14000c68b:	ss test eax,0x76bcf2b7
   14000c691:	loope  0x14000c6b8
   14000c693:	(bad)  
   14000c694:	pop    rdx
   14000c695:	stc    
   14000c696:	mov    bh,0x4c
   14000c698:	xchg   ebp,eax
   14000c699:	pop    rsp
   14000c69a:	pop    rsp
   14000c69b:	ja     0x14000c6b7
   14000c69d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c69e:	xor    ebx,ebx
   14000c6a0:	jbe    0x14000c64b
   14000c6a2:	(bad)  
   14000c6a3:	out    0xae,eax
   14000c6a5:	jp     0x14000c720
   14000c6a7:	and    dh,BYTE PTR [rsi]
   14000c6a9:	pop    rcx
   14000c6aa:	push   0x50
   14000c6ac:	push   rdx
   14000c6ad:	adc    DWORD PTR [rsi-0x2e4d34f6],eax
   14000c6b3:	pop    rdx
   14000c6b4:	(bad)  
   14000c6b5:	pop    rcx
   14000c6b6:	push   rsi
   14000c6b7:	or     BYTE PTR fs:[rsp+rbx*4-0x33fd43e8],dh
   14000c6bf:	clc    
   14000c6c0:	sbb    ah,BYTE PTR [rcx+0x43425922]
   14000c6c6:	in     al,0xd
   14000c6c8:	rex.W sti 
   14000c6ca:	mov    bl,ah
   14000c6cc:	mov    edx,es
   14000c6ce:	adc    BYTE PTR [rax+0x7b9167bd],cl
   14000c6d4:	pop    rdi
   14000c6d5:	(bad)  
   14000c6d6:	stos   DWORD PTR es:[rdi],eax
   14000c6d7:	cmp    al,0xcc
   14000c6d9:	rex.XB (bad) 
   14000c6dc:	int3   
   14000c6dd:	(bad)  
   14000c6de:	(bad)  
   14000c6df:	sahf   
   14000c6e0:	ret    
   14000c6e1:	ja     0x14000c740
   14000c6e3:	mov    WORD PTR [rdx+0x1],fs
   14000c6e6:	ret    
   14000c6e7:	call   0xc9d3a79b
   14000c6ec:	movabs al,ds:0x70a2a833fa341e4c
   14000c6f5:	mov    dh,0x59
   14000c6f7:	rex.WRXB (bad) 
   14000c6f9:	sbb    eax,0xcfe7624f
   14000c6fe:	movabs eax,ds:0xfe8193518001b1a3
   14000c707:	sar    BYTE PTR [rdi-0x1],cl
   14000c70a:	iret   
   14000c70b:	fidivr WORD PTR [rdi+0x4df16272]
   14000c711:	and    eax,0x6e8a7503
   14000c716:	call   0x199415219
   14000c71b:	mov    ebx,0x422281c0
   14000c720:	es pop rbx
   14000c722:	sub    eax,0x2fe93c7b
   14000c727:	rex.RX cwde 
   14000c729:	fdivp  st(4),st
   14000c72b:	cmc    
   14000c72c:	clc    
   14000c72d:	xchg   esi,eax
   14000c72e:	sub    DWORD PTR [rip+0xffffffffc95d4309],esp        # 0x1095e0a3d
   14000c734:	xor    esi,DWORD PTR [rcx]
   14000c736:	add    BYTE PTR [rax-0x53],cl
   14000c739:	jno    0x14000c7b2
   14000c73b:	scas   eax,DWORD PTR es:[rdi]
   14000c73c:	jb     0x14000c7a0
   14000c73e:	xor    eax,0x6ad461b2
   14000c743:	cs out 0x5f,eax
   14000c746:	xchg   DWORD PTR [rdx+0x5dee4dfa],esi
   14000c74c:	std    
   14000c74d:	sbb    ch,BYTE PTR [rsi+0x42c08e57]
   14000c753:	(bad)
   14000c756:	icebp  
   14000c757:	rex.WX popf 
   14000c759:	mov    al,ah
   14000c75b:	sbb    eax,0x79c28854
   14000c760:	jrcxz  0x14000c750
   14000c762:	jae    0x14000c6fa
   14000c764:	mov    bl,BYTE PTR [rsp+rax*4-0x18]
   14000c768:	sub    BYTE PTR [rsi],cl
   14000c76a:	and    BYTE PTR [rsi+0x8],cl
   14000c76d:	xor    ah,bl
   14000c76f:	sub    bh,BYTE PTR [rdi]
   14000c771:	(bad)  
   14000c772:	or     dl,bl
   14000c774:	add    BYTE PTR [rcx-0x7cbb09fc],dl
   14000c77a:	(bad)  
   14000c77b:	movabs eax,ds:0x9794a0c2d0425f74
   14000c784:	in     al,dx
   14000c785:	jg     0x14000c778
   14000c787:	(bad)  
   14000c788:	push   rax
   14000c789:	jns    0x14000c75a
   14000c78b:	(bad)  
   14000c78c:	pop    rcx
   14000c78d:	pop    rsi
   14000c78e:	cmp    edx,eax
   14000c790:	icebp  
   14000c791:	jrcxz  0x14000c75a
   14000c793:	mov    eax,0x39e7f2f2
   14000c798:	neg    eax
   14000c79a:	jnp    0x14000c7ab
   14000c79c:	pop    rsp
   14000c79d:	pushf  
   14000c79e:	(bad)  
   14000c79f:	xchg   BYTE PTR [rdi-0x6d],dl
   14000c7a2:	sbb    DWORD PTR [rbx],esi
   14000c7a4:	fst    QWORD PTR [rcx]
   14000c7a6:	out    dx,al
   14000c7a7:	punpckldq mm6,mm0
   14000c7aa:	xor    BYTE PTR cs:[rcx],bh
   14000c7ad:	fs xor al,0x36
   14000c7b0:	add    al,al
   14000c7b2:	pop    rbx
   14000c7b3:	cwde   
   14000c7b4:	or     al,0x4
   14000c7b6:	sbb    DWORD PTR [rbp-0xcf4bf01],edi
   14000c7bc:	jo     0x14000c7a8
   14000c7be:	fdiv   DWORD PTR [rcx+0x3d13ed33]
   14000c7c4:	sbb    DWORD PTR [rdx-0x57c58aa],edi
   14000c7ca:	int    0x4e
   14000c7cc:	pop    rsi
   14000c7cd:	shl    DWORD PTR [rbx-0x6f],1
   14000c7d0:	neg    BYTE PTR [rbx+0x67368c94]
   14000c7d6:	(bad)  
   14000c7d7:	mov    esp,0x371b1b8d
   14000c7dc:	mov    ecx,0xb5b22d59
   14000c7e1:	icebp  
   14000c7e2:	sbb    al,0xdf
   14000c7e4:	jne    0x14000c7dd
   14000c7e6:	rex.RXB ror r10b,1
   14000c7e9:	rex.X test DWORD PTR [rsi-0x14],esp
   14000c7ed:	out    0xcf,eax
   14000c7ef:	mov    bh,dl
   14000c7f1:	mov    cl,0x25
   14000c7f3:	push   rcx
   14000c7f4:	stos   DWORD PTR es:[rdi],eax
   14000c7f5:	test   al,0xc3
   14000c7f7:	js     0x14000c78c
   14000c7f9:	nop
   14000c7fa:	test   BYTE PTR [rcx-0x1f865ef3],al
   14000c800:	mov    esi,es
   14000c802:	cli    
   14000c803:	lods   al,BYTE PTR ds:[rsi]
   14000c804:	(bad)  
   14000c805:	xchg   ecx,eax
   14000c806:	(bad)  
   14000c807:	mov    bl,0x28
   14000c809:	test   eax,0x940a9428
   14000c80e:	or     cl,BYTE PTR [rsi]
   14000c810:	in     eax,0xa9
   14000c812:	sub    DWORD PTR [rdx+rdx*1-0xdcd0c1c],esp
   14000c819:	jl     0x14000c883
   14000c81b:	movabs ds:0xf0ecbe1928e2938e,al
   14000c824:	fwait
   14000c825:	xor    DWORD PTR [rax+0x1feec634],0x698ff543
   14000c82f:	(bad)  
   14000c830:	lahf   
   14000c831:	loopne 0x14000c7b4
   14000c833:	sti    
   14000c834:	out    dx,al
   14000c835:	movsxd edi,DWORD PTR [rbp-0x3]
   14000c838:	(bad)  
   14000c839:	mov    al,0xbb
   14000c83b:	mov    ch,0xc1
   14000c83d:	in     al,dx
   14000c83e:	ret    0xb44a
   14000c841:	stos   BYTE PTR es:[rdi],al
   14000c842:	bndldx bnd0,[rdi-0x422a1e9f]
   14000c849:	(bad)  
   14000c84a:	push   rdi
   14000c84b:	pop    QWORD PTR [rbp+rdx*4+0x1d]
   14000c84f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c850:	mov    DWORD PTR [rdx],ecx
   14000c852:	xor    BYTE PTR [rsi-0xc],al
   14000c855:	xchg   esi,eax
   14000c856:	and    eax,0x55d4c503
   14000c85b:	cwde   
   14000c85c:	movabs ds:0xc4cecde2549ce2c7,al
   14000c865:	je     0x14000c8cc
   14000c867:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000c869:	xchg   BYTE PTR [rcx-0x64144da],al
   14000c86f:	fwait
   14000c870:	cmp    DWORD PTR [rbp-0x58136624],edx
   14000c876:	cs xor eax,0x2a303537
   14000c87c:	cld    
   14000c87d:	std    
   14000c87e:	xor    eax,0x39db781e
   14000c883:	div    dh
   14000c885:	imul   BYTE PTR [rax-0x48]
   14000c888:	jo     0x14000c86b
   14000c88a:	ret    0x9ceb
   14000c88d:	fwait
   14000c88e:	std    
   14000c88f:	(bad)  
   14000c890:	sub    al,0x57
   14000c892:	mov    dh,0x69
   14000c894:	stc    
   14000c895:	xchg   ebp,eax
   14000c896:	cmp    ch,bh
   14000c898:	mov    eax,0xba207753
   14000c89d:	cs xchg esi,eax
   14000c89f:	rcl    ebx,cl
   14000c8a1:	mov    al,0xdc
   14000c8a3:	(bad)  
   14000c8a4:	cmp    DWORD PTR [rbp-0x3b0ebcfa],ecx
   14000c8aa:	fisttp DWORD PTR [rsi+rdi*4]
   14000c8ad:	in     eax,dx
   14000c8ae:	out    dx,al
   14000c8af:	rex.WRXB icebp 
   14000c8b1:	out    dx,eax
   14000c8b2:	ds pop rbp
   14000c8b4:	rcl    DWORD PTR [rbp+0x29b51a79],0x9a
   14000c8bb:	(bad)
   14000c8be:	jg     0x14000c8d5
   14000c8c0:	fcomi  st,st(0)
   14000c8c2:	cdq    
   14000c8c3:	retf   
   14000c8c4:	(bad)  
   14000c8c5:	push   rcx
   14000c8c6:	or     cl,BYTE PTR [rbx+riz*1]
   14000c8c9:	add    ebp,DWORD PTR [rax]
   14000c8cb:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c8cd:	fnsave [rsi+0x1e]
   14000c8d0:	xor    dh,BYTE PTR [rcx]
   14000c8d2:	(bad)  
   14000c8d3:	pop    rdx
   14000c8d4:	xchg   esp,eax
   14000c8d5:	rex.WX
   14000c8d6:	ds cmc 
   14000c8d8:	(bad)  
   14000c8d9:	dec    DWORD PTR [rdi+0x38]
   14000c8dc:	out    dx,eax
   14000c8dd:	(bad)  
   14000c8de:	cmp    al,0xd3
   14000c8e0:	xor    esi,DWORD PTR [rbx]
   14000c8e2:	sbb    al,0x3f
   14000c8e4:	jbe    0x14000c872
   14000c8e6:	mov    ch,0xeb
   14000c8e8:	out    0x99,eax
   14000c8ea:	popf   
   14000c8eb:	pop    rdi
   14000c8ec:	(bad)  
   14000c8ed:	xor    al,0x12
   14000c8ef:	mov    ebp,0x487fd203
   14000c8f4:	ja     0x14000c90e
   14000c8f6:	cmp    eax,0x76863856
   14000c8fb:	jno    0x14000c975
   14000c8fd:	fnstcw WORD PTR [rdi-0x74]
   14000c900:	add    BYTE PTR [rax-0x1c],ah
   14000c903:	fs and bl,dh
   14000c906:	int    0x27
   14000c908:	add    eax,DWORD PTR [rcx-0x6940949a]
   14000c90e:	leave  
   14000c90f:	cmp    esi,DWORD PTR [rdi]
   14000c911:	cmp    esp,DWORD PTR [rbp-0x3f]
   14000c914:	int3   
   14000c915:	(bad)  
   14000c916:	outs   dx,BYTE PTR ds:[rsi]
   14000c917:	ds test eax,0x515e8bf1
   14000c91d:	ds stc 
   14000c91f:	xor    edi,DWORD PTR [rdx+rbp*8-0xb]
   14000c923:	sub    eax,0x8b54436e
   14000c928:	mov    esi,0x2a04741e
   14000c92d:	rex.B jge 0x14000c8c3
   14000c930:	and    ecx,DWORD PTR [rbx]
   14000c932:	push   rbx
   14000c933:	adc    al,0x8b
   14000c935:	and    eax,0xe35b5eae
   14000c93a:	repnz mov edx,0x1feed83
   14000c940:	setge  ch
   14000c943:	add    bl,BYTE PTR [rsi-0x6e6addd4]
   14000c949:	rcl    BYTE PTR es:[rdx+0x2882d4ac],cl
   14000c950:	outs   dx,BYTE PTR ds:[rsi]
   14000c951:	movabs eax,ds:0xd07792642b3bf18b
   14000c95a:	outs   dx,BYTE PTR ds:[rsi]
   14000c95b:	or     esi,edi
   14000c95d:	loope  0x14000c96e
   14000c95f:	cmp    BYTE PTR [rdi+rbp*8+0x78bceabb],bh
   14000c966:	movabs eax,ds:0xcec2a9d8b6978bce
   14000c96f:	mov    esi,0xbde4a109
   14000c974:	outs   dx,DWORD PTR ds:[rsi]
   14000c975:	(bad)  
   14000c976:	xchg   ecx,eax
   14000c977:	add    DWORD PTR [rip+0xffffffff88cc24c9],esi        # 0xc8ccee46
   14000c97d:	cld    
   14000c97e:	and    al,0xfe
   14000c980:	add    eax,0x31d11a05
   14000c985:	mov    dl,bl
   14000c987:	es test esi,edx
   14000c98a:	(bad)  
   14000c98b:	imul   ebx,DWORD PTR [rbp-0x6],0xf7b1e465
   14000c992:	jno    0x14000c982
   14000c994:	sahf   
   14000c995:	jae    0x14000ca03
   14000c997:	ins    BYTE PTR es:[rdi],dx
   14000c998:	jl     0x14000c924
   14000c99a:	jmp    0x14000c9f3
   14000c99c:	pop    rdi
   14000c99d:	addr32 cmc 
   14000c99f:	(bad)  
   14000c9a0:	pop    rbp
   14000c9a1:	jge    0x14000c9f5
   14000c9a3:	rol    al,0xe0
   14000c9a6:	movabs al,ds:0xa4f33b7dc918ba61
   14000c9af:	shr    DWORD PTR [rdx],cl
   14000c9b1:	xchg   esi,eax
   14000c9b2:	(bad)  
   14000c9b3:	(bad)  
   14000c9b4:	sub    DWORD PTR [rdx],ecx
   14000c9b6:	mov    WORD PTR [rip+0x33bc8c00],cs        # 0x173bd55bc
   14000c9bc:	rcr    BYTE PTR [rip+0x7161ad20],1        # 0x1b16276e2
   14000c9c2:	stos   BYTE PTR es:[rdi],al
   14000c9c3:	adc    ah,ch
   14000c9c5:	in     eax,dx
   14000c9c6:	(bad)  
   14000c9c7:	(bad)  
   14000c9c8:	out    0x40,al
   14000c9ca:	xchg   BYTE PTR [rax-0xaac2042],bh
   14000c9d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c9d1:	xchg   ebx,eax
   14000c9d2:	xchg   edx,eax
   14000c9d3:	fwait
   14000c9d4:	lods   eax,DWORD PTR ds:[rsi]
   14000c9d5:	sbb    ebx,DWORD PTR [rax-0x72991b5c]
   14000c9db:	pop    rcx
   14000c9dc:	std    
   14000c9dd:	mov    WORD PTR [rax+rax*8-0x3],?
   14000c9e1:	xchg   esp,edi
   14000c9e3:	rex.WRB movabs r15,0x1f0799cdbda21e85
   14000c9ed:	out    0xc6,eax
   14000c9ef:	mov    BYTE PTR [rsi],0x7b
   14000c9f2:	cmc    
   14000c9f3:	cmp    al,0x37
   14000c9f5:	scas   al,BYTE PTR es:[rdi]
   14000c9f6:	(bad)  
   14000c9f7:	sub    edi,ebx
   14000c9f9:	jno    0x14000c9f5
   14000c9fb:	mov    bh,0x71
   14000c9fd:	sub    al,0x85
   14000c9ff:	(bad)  
   14000ca00:	cmp    bl,BYTE PTR [rax]
   14000ca02:	fs ret 0xd363
   14000ca06:	(bad)  
   14000ca07:	ds scas al,BYTE PTR es:[rdi]
   14000ca09:	jmp    0x14000c9a8
   14000ca0b:	scas   al,BYTE PTR es:[rdi]
   14000ca0c:	sahf   
   14000ca0d:	mov    cl,0x2a
   14000ca0f:	nop
   14000ca10:	add    al,BYTE PTR [rdx-0x4b8e7d76]
   14000ca16:	(bad)  
   14000ca17:	cmc    
   14000ca18:	movabs eax,ds:0x7d6f9091f7bc5b68
   14000ca21:	add    BYTE PTR [rdi+rbx*1],bh
   14000ca24:	cld    
   14000ca25:	shl    al,cl
   14000ca28:	and    eax,edx
   14000ca2a:	jns    0x14000ca9e
   14000ca2c:	ret    0x14c3
   14000ca2f:	sbb    eax,0x4604e800
   14000ca34:	(bad)  
   14000ca35:	rex.RX
   14000ca36:	rex.RX sbb eax,0x3c4a8101
   14000ca3c:	(bad)  
   14000ca3d:	ret    0x9841
   14000ca40:	cs pop rsp
   14000ca42:	(bad)  
   14000ca43:	jns    0x14000ca7d
   14000ca45:	stc    
   14000ca46:	xlat   BYTE PTR ds:[rbx]
   14000ca47:	sub    DWORD PTR [rbp-0x381c65a],edx
   14000ca4d:	cmp    BYTE PTR [rbx-0x65],ch
   14000ca50:	xlat   BYTE PTR ds:[rbx]
   14000ca51:	or     DWORD PTR [rbx-0x41b9e71d],eax
   14000ca57:	mov    edi,0x6301cfca
   14000ca5c:	(bad)  
   14000ca5d:	adc    eax,0x3b6d9d9a
   14000ca62:	cmp    BYTE PTR [rdi],ch
   14000ca64:	sti    
   14000ca65:	loopne 0x14000ca68
   14000ca67:	(bad)  
   14000ca68:	movsxd ebx,DWORD PTR [rdx]
   14000ca6a:	sbb    eax,DWORD PTR [rax]
   14000ca6c:	js     0x14000ca19
   14000ca6e:	ja     0x14000ca76
   14000ca70:	push   rdx
   14000ca71:	(bad)  
   14000ca72:	outs   dx,BYTE PTR ds:[rsi]
   14000ca73:	sub    ebx,ecx
   14000ca75:	shl    BYTE PTR [rdx+0x13533173],0x2f
   14000ca7c:	test   al,0x1a
   14000ca7e:	sub    DWORD PTR [rbp-0x66],esi
   14000ca81:	xchg   edx,eax
   14000ca82:	sub    esp,DWORD PTR [rbp-0x78]
   14000ca85:	out    0x77,eax
   14000ca87:	pop    rbx
   14000ca88:	out    0xd,eax
   14000ca8a:	rex.XB (bad) 
   14000ca8c:	in     eax,0xac
   14000ca8e:	xor    bh,cl
   14000ca90:	cli    
   14000ca91:	cdq    
   14000ca92:	jb     0x14000caea
   14000ca94:	popf   
   14000ca95:	or     bh,BYTE PTR [rdi]
   14000ca97:	std    
   14000ca98:	xor    ch,BYTE PTR [rdx-0x46]
   14000ca9b:	xor    BYTE PTR [rdi],cl
   14000ca9d:	jp     0x14000cacf
   14000ca9f:	add    esi,ebp
   14000caa1:	fidiv  WORD PTR [rip+0x5df776de]        # 0x19df84185
   14000caa7:	xor    al,0x1a
   14000caa9:	or     eax,0xd792ebf6
   14000caae:	cs in  eax,dx
   14000cab0:	jb     0x14000ca58
   14000cab2:	repnz mov ebx,0xc0df9f1c
   14000cab8:	or     ecx,DWORD PTR [rbx-0x60]
   14000cabb:	movabs ds:0xde289e04d21a9be2,eax
   14000cac4:	pop    rdi
   14000cac5:	(bad)  
   14000cac6:	fwait
   14000cac7:	xchg   edx,eax
   14000cac8:	stos   BYTE PTR es:[rdi],al
   14000cac9:	(bad)  
   14000caca:	rex.WRB loop 0x14000cada
   14000cacd:	push   rax
   14000cace:	rex.RB sub al,0x11
   14000cad1:	push   0xffffffffed060143
   14000cad6:	mov    dh,0xe6
   14000cad8:	mov    bh,0x3f
   14000cada:	ins    DWORD PTR es:[rdi],dx
   14000cadb:	repz loop 0x14000cad3
   14000cade:	jnp    0x14000cb39
   14000cae0:	pushf  
   14000cae1:	int    0x73
   14000cae3:	push   0xffffffffffffffc9
   14000cae5:	in     eax,0xcc
   14000cae7:	ret    0xee75
   14000caea:	pop    rdx
   14000caeb:	fiadd  DWORD PTR [rbx+0x8]
   14000caee:	xchg   edi,eax
   14000caef:	push   rax
   14000caf0:	rex.RX sahf 
   14000caf2:	(bad)  
   14000caf3:	movabs eax,ds:0x4cfe612eea3d5d23
   14000cafc:	lods   al,BYTE PTR ds:[rsi]
   14000cafd:	jg     0x14000caa1
   14000caff:	adc    eax,0x1d308169
   14000cb04:	or     ch,ch
   14000cb06:	scas   eax,DWORD PTR es:[rdi]
   14000cb07:	sar    DWORD PTR [rsi-0x2a37b40c],1
   14000cb0d:	(bad)  
   14000cb0e:	loopne 0x14000cadc
   14000cb10:	cdq    
   14000cb11:	xor    ebp,DWORD PTR [rdi+rbx*2-0x39193141]
   14000cb18:	xor    eax,0x8d3b1c8e
   14000cb1d:	jrcxz  0x14000cb57
   14000cb1f:	sbb    DWORD PTR [rip+0x3d30013e],ebx        # 0x17d30cc63
   14000cb25:	nop
   14000cb26:	jg     0x14000cae3
   14000cb28:	add    DWORD PTR [rdx-0x59],eax
   14000cb2b:	pop    rdx
   14000cb2c:	xchg   ecx,edx
   14000cb2e:	or     eax,DWORD PTR [rax]
   14000cb30:	adc    edx,DWORD PTR [rip+0xffffffffe4683c60]        # 0x124690796
   14000cb36:	movabs al,fs:0x2e3df349f76bf03b
   14000cb40:	and    eax,0x58530b88
   14000cb45:	es mov dh,0xb0
   14000cb48:	cli    
   14000cb49:	rol    DWORD PTR [rcx-0x17],0xae
   14000cb4d:	jl     0x14000cb4c
   14000cb4f:	mov    dh,0xef
   14000cb51:	addr32 mov dl,0xf5
   14000cb54:	and    bh,bh
   14000cb56:	jge    0x14000cb62
   14000cb58:	or     al,0x31
   14000cb5a:	rex.W mov BYTE PTR [rax-0x6c775196],dil
   14000cb61:	jae    0x14000cbd7
   14000cb63:	xchg   edx,eax
   14000cb64:	cmp    ah,dl
   14000cb66:	adc    esi,edx
   14000cb68:	sub    ebx,ebx
   14000cb6a:	xor    eax,0x33268ae6
   14000cb6f:	xor    esi,DWORD PTR [rbx]
   14000cb71:	mov    esp,0x6e65daf6
   14000cb76:	ins    BYTE PTR es:[rdi],dx
   14000cb77:	(bad)  
   14000cb78:	movabs al,ds:0xa487ffd8f1de09f1
   14000cb81:	add    bl,BYTE PTR [rax+0x19]
   14000cb84:	or     eax,0x3da1c55c
   14000cb89:	jno    0x14000cb65
   14000cb8b:	pop    rdi
   14000cb8c:	sbb    ah,BYTE PTR [rbp+0x44f22494]
   14000cb92:	sub    eax,0xc7dd1d0d
   14000cb97:	mov    bh,bl
   14000cb99:	mov    ebp,0xc4fc50d6
   14000cb9e:	scas   eax,DWORD PTR es:[rdi]
   14000cb9f:	or     ebx,DWORD PTR [rsi+0x6c41e17b]
   14000cba5:	(bad)  
   14000cba6:	sub    al,0xb3
   14000cba8:	rcl    ah,0xdc
   14000cbab:	sub    DWORD PTR [rsi+0x67],edx
   14000cbae:	mov    ?,ecx
   14000cbb0:	(bad)  
   14000cbb2:	jle    0x14000cb3a
   14000cbb4:	(bad)  
   14000cbb5:	iret   
   14000cbb6:	xor    eax,0x91592b98
   14000cbbb:	xchg   esp,eax
   14000cbbc:	movabs eax,ds:0x93f984a9d30ca940
   14000cbc5:	mov    eax,0x45b56203
   14000cbca:	add    BYTE PTR [rsi],ah
   14000cbcc:	xchg   ch,ch
   14000cbce:	movabs ds:0x9386bff1d60cfe2e,eax
   14000cbd7:	scas   eax,DWORD PTR es:[rdi]
   14000cbd8:	jo     0x14000cbce
   14000cbda:	clc    
   14000cbdb:	or     DWORD PTR [rsi-0x45],ebx
   14000cbde:	jb     0x14000cb69
   14000cbe0:	xor    eax,0x58a148bb
   14000cbe5:	ret    0xc788
   14000cbe8:	ret    
   14000cbe9:	rex.WX and rax,QWORD PTR [rcx]
   14000cbec:	cmp    ebx,DWORD PTR [rbx]
   14000cbee:	test   eax,0x7a821526
   14000cbf3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cbf4:	sub    ch,BYTE PTR [rbp-0x2b78a9cd]
   14000cbfa:	xor    eax,0xe349a8
   14000cbff:	cmp    BYTE PTR [rax+riz*1+0x30003630],bh
   14000cc06:	(bad)  
   14000cc07:	(bad)  
   14000cc08:	rex
   14000cc09:	rex.WRB hlt 
   14000cc0b:	fistp  WORD PTR [rcx]
   14000cc0e:	sub    BYTE PTR [rsi+0x71],bl
   14000cc11:	cli    
   14000cc12:	add    al,0xf7
   14000cc14:	inc    ch
   14000cc16:	in     eax,0x40
   14000cc18:	jo     0x14000cc8a
   14000cc1a:	test   ch,dl
   14000cc1c:	mov    ecx,0x438006e
   14000cc21:	xor    bl,dl
   14000cc23:	add    esi,DWORD PTR [rax]
   14000cc25:	fldenv [rsp+rsi*1]
   14000cc28:	add    al,BYTE PTR [rdi]
   14000cc2a:	rcr    BYTE PTR [rdx+rax*4-0x7c],cl
   14000cc2e:	add    DWORD PTR [rdx+0x25ad6190],edx
   14000cc34:	loope  0x14000cc34
   14000cc36:	xor    eax,0x23c779ee
   14000cc3b:	ins    BYTE PTR es:[rdi],dx
   14000cc3c:	ins    BYTE PTR es:[rdi],dx
   14000cc3d:	lods   al,BYTE PTR ds:[rsi]
   14000cc3e:	push   rbx
   14000cc3f:	ins    DWORD PTR es:[rdi],dx
   14000cc40:	in     eax,0x58
   14000cc42:	mov    ebx,0x76df3cf6
   14000cc47:	(bad)  
   14000cc48:	adc    edx,DWORD PTR [rbx+rcx*1-0x3c6f91f2]
   14000cc4f:	xor    BYTE PTR [rdx-0x2b],ah
   14000cc52:	rex.XB (bad) 
   14000cc54:	jnp    0x14000cc60
   14000cc56:	sbb    dh,BYTE PTR [rcx]
   14000cc58:	repz sbb ecx,DWORD PTR [rcx+0x55]
   14000cc5c:	add    al,BYTE PTR [rbp-0x76fdd930]
   14000cc62:	rex.X (bad) 
   14000cc64:	sub    BYTE PTR [rcx],cl
   14000cc66:	rex.WB rcl BYTE PTR [r9-0xc3b42ef],1
   14000cc6d:	(bad)  
   14000cc6e:	add    bh,dh
   14000cc70:	fisttp WORD PTR [rdi+0x43e8f12c]
   14000cc76:	(bad)  
   14000cc77:	lods   eax,DWORD PTR ds:[rsi]
   14000cc78:	lods   eax,DWORD PTR ds:[rsi]
   14000cc79:	rex.WR
   14000cc7a:	rex.WR
   14000cc7b:	rex.WRXB push r13
   14000cc7d:	and    BYTE PTR [rax+0x3e19c4f0],dh
   14000cc83:	repnz mov ch,0xf7
   14000cc86:	mov    dl,0x54
   14000cc88:	stc    
   14000cc89:	add    esp,esi
   14000cc8b:	iret   
   14000cc8c:	rex.RX sub r15d,DWORD PTR [rdi-0x13023ab6]
   14000cc93:	mov    eax,0x33a9208
   14000cc98:	rol    DWORD PTR fs:[rcx],0x81
   14000cc9c:	xor    BYTE PTR [rdx+0x14],dh
   14000cc9f:	in     al,0x45
   14000cca1:	cld    
   14000cca2:	retf   
   14000cca3:	mov    edi,0x37f2bb84
   14000cca8:	cmp    DWORD PTR [rbp-0x16],esi
   14000ccab:	cmp    bl,ch
   14000ccad:	xlat   BYTE PTR ds:[rbx]
   14000ccae:	scas   eax,DWORD PTR es:[rdi]
   14000ccaf:	(bad)  
   14000ccb0:	retf   0xd316
   14000ccb3:	(bad)
   14000ccb6:	int3   
   14000ccb7:	rex.WR movabs rsi,0x8a3ad20042d69845
   14000ccc1:	leave  
   14000ccc2:	mov    eax,0x19d9a658
   14000ccc7:	jg     0x14000cc9a
   14000ccc9:	outs   dx,DWORD PTR ds:[rsi]
   14000ccca:	add    ecx,DWORD PTR [rax+0x7f]
   14000cccd:	xchg   edx,eax
   14000ccce:	outs   dx,BYTE PTR ds:[rsi]
   14000cccf:	mov    bh,0xc4
   14000ccd1:	movabs eax,ds:0xc8192d180001b1a2
   14000ccda:	mov    cl,0xfb
   14000ccdc:	jne    0x14000cc9e
   14000ccde:	fcmovnu st,st(6)
   14000cce0:	sbb    DWORD PTR [rax],ecx
   14000cce2:	lea    esp,[rbx+rdx*1-0x4524ec00]
   14000cce9:	rcr    DWORD PTR [rcx],cl
   14000cceb:	xor    eax,0x7bd77ec8
   14000ccf0:	sub    al,0x9
   14000ccf2:	cld    
   14000ccf3:	jmp    0xc884d3fd
   14000ccf8:	repnz adc al,0x84
   14000ccfb:	rex.RB sub DWORD PTR [r10+rbx*1+0x40],0xb8c856a2
   14000cd04:	cwde   
   14000cd05:	push   0xffffffff8f239518
   14000cd0a:	jge    0x14000ccfc
   14000cd0c:	or     BYTE PTR [rcx-0x208c921d],al
   14000cd12:	leave  
   14000cd13:	movabs ds:0x6bab936eeec79e78,eax
   14000cd1c:	(bad)  
   14000cd1d:	(bad)  
   14000cd1e:	sub    edi,edi
   14000cd20:	sahf   
   14000cd21:	rex.RXB (bad) 
   14000cd23:	ins    BYTE PTR es:[rdi],dx
   14000cd24:	push   rbx
   14000cd25:	ja     0x14000cd8e
   14000cd27:	xor    DWORD PTR [rax+rcx*1-0x5fff4d97],ecx
   14000cd2e:	jrcxz  0x14000cd8a
   14000cd30:	(bad)  
   14000cd31:	pop    rdx
   14000cd32:	retf   0x10d8
   14000cd35:	sub    BYTE PTR [rbx+0x5e],ah
   14000cd38:	push   rax
   14000cd39:	adc    ebx,esi
   14000cd3b:	movsxd eax,DWORD PTR [rax+0x23098e8e]
   14000cd41:	jp     0x14000cd1b
   14000cd43:	cmc    
   14000cd44:	ins    DWORD PTR es:[rdi],dx
   14000cd45:	add    eax,0x90596152
   14000cd4a:	jae    0x14000cd18
   14000cd4c:	or     rax,0x560a4232
   14000cd52:	xchg   ebx,eax
   14000cd53:	repnz cld 
   14000cd55:	cmp    DWORD PTR [rsi+0x1e19fe7c],edi
   14000cd5b:	cmp    DWORD PTR [rbx-0x7f],ebp
   14000cd5e:	push   rdx
   14000cd5f:	or     BYTE PTR [rbx],ah
   14000cd61:	push   rcx
   14000cd62:	addr32 mov eax,ds
   14000cd65:	ins    DWORD PTR es:[rdi],dx
   14000cd66:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cd67:	rcr    edx,1
   14000cd69:	call   0x1897be526
   14000cd6e:	sbb    al,bl
   14000cd70:	jns    0x14000cdda
   14000cd72:	pop    rbp
   14000cd73:	cld    
   14000cd74:	imul   ebp,DWORD PTR [rbp+rdx*8-0x19a67e09],0x9c9389c4
   14000cd7f:	jg     0x14000cd6e
   14000cd81:	add    dh,BYTE PTR [rbx]
   14000cd83:	mov    eax,DWORD PTR [rdi-0x37]
   14000cd86:	cmp    ecx,DWORD PTR [rsi]
   14000cd88:	add    eax,0x4504eec7
   14000cd8d:	movabs gs:0xa403f5c1c14aa500,eax
   14000cd97:	repnz cmp ah,bl
   14000cd9a:	fwait
   14000cd9b:	cld    
   14000cd9c:	adc    edx,DWORD PTR ss:[rip+0xac68ba0]        # 0x14ac75943
   14000cda3:	add    BYTE PTR [rsi+0x49],al
   14000cda6:	(bad)  
   14000cda7:	mov    edx,0x81920778
   14000cdac:	cmp    dl,BYTE PTR [rsi-0x4]
   14000cdaf:	mov    esi,0x7ee7f143
   14000cdb4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cdb5:	cmp    eax,0x95de8102
   14000cdba:	xor    BYTE PTR [rsi+0x2c1c92db],ah
   14000cdc0:	sbb    al,0x5b
   14000cdc2:	or     al,0xc5
   14000cdc5:	mov    ebx,0xba2946e2
   14000cdca:	shr    BYTE PTR [rbx-0x6992f99d],cl
   14000cdd0:	xchg   edi,eax
   14000cdd1:	push   rdi
   14000cdd2:	cmp    bh,bh
   14000cdd4:	(bad)  
   14000cdd5:	stos   DWORD PTR es:[rdi],eax
   14000cdd6:	in     al,dx
   14000cdd7:	push   rsp
   14000cdd8:	sbb    eax,0x7cd3ed54
   14000cddd:	sti    
   14000cdde:	mov    bh,0xfc
   14000cde0:	or     DWORD PTR [rdx+0x6838420a],edx
   14000cde6:	and    esi,DWORD PTR [rcx+0x4c]
   14000cde9:	push   0x44
   14000cdeb:	push   rsp
   14000cdec:	out    0x7,al
   14000cdee:	test   BYTE PTR [rsi+0x6b],al
   14000cdf1:	mov    DWORD PTR [rax],edx
   14000cdf3:	sub    cl,dh
   14000cdf5:	xlat   BYTE PTR ds:[rbx]
   14000cdf6:	(bad)  
   14000cdf7:	push   rdi
   14000cdf8:	rex.XB and eax,0xb3886023
   14000cdfe:	clc    
   14000cdff:	mov    ah,0xd2
   14000ce01:	rex push rsp
   14000ce03:	in     al,dx
   14000ce04:	jae    0x14000cdc0
   14000ce06:	sbb    BYTE PTR [rax-0x66],ah
   14000ce09:	(bad)  
   14000ce0a:	lods   eax,DWORD PTR ds:[rsi]
   14000ce0b:	push   rsi
   14000ce0c:	cmp    ecx,edx
   14000ce0e:	fwait
   14000ce0f:	xor    BYTE PTR [rip+0xffffffffb632e5ca],ch        # 0xf633b3df
   14000ce15:	ins    DWORD PTR es:[rdi],dx
   14000ce16:	xchg   ecx,eax
   14000ce17:	retf   
   14000ce18:	cdq    
   14000ce19:	pushf  
   14000ce1a:	pop    rdi
   14000ce1b:	(bad)  
   14000ce1c:	mov    ds,ebx
   14000ce1e:	mov    edx,0x658a14c
   14000ce23:	add    DWORD PTR [rdx-0x18],eax
   14000ce26:	sub    ch,al
   14000ce28:	cmp    BYTE PTR [rcx+0xf],bh
   14000ce2b:	sub    DWORD PTR [rax-0x3dc4730d],ecx
   14000ce31:	rex.B cli 
   14000ce33:	mov    dl,0x2
   14000ce35:	mov    WORD PTR [rax*1+0x7ed6f0d6],?
   14000ce3c:	adc    esi,0x7563dfe2
   14000ce42:	cmc    
   14000ce43:	sub    BYTE PTR [rbx+0x6b],ch
   14000ce46:	xlat   BYTE PTR ds:[rbx]
   14000ce47:	fcomp  DWORD PTR [rsi+0x7f]
   14000ce4a:	popf   
   14000ce4b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ce4c:	adc    esp,edi
   14000ce4e:	mov    al,0x6d
   14000ce50:	(bad)  
   14000ce51:	mov    ch,0x49
   14000ce53:	and    al,0x64
   14000ce55:	or     BYTE PTR [rcx+0x6ce49b69],al
   14000ce5b:	sub    esi,esi
   14000ce5d:	cs push di
   14000ce60:	jp     0x14000cdff
   14000ce62:	add    ch,BYTE PTR [rcx+0x3f]
   14000ce65:	cmp    BYTE PTR [rdi+0x54],cl
   14000ce68:	xor    BYTE PTR [rcx+0x192cb7a1],0x8
   14000ce6f:	xchg   ah,cl
   14000ce71:	sbb    ch,bl
   14000ce73:	(bad)  
   14000ce74:	ret    
   14000ce75:	mov    edx,0xa45ff6ce
   14000ce7a:	movabs eax,ds:0xc49062ea2eeb7b6f
   14000ce83:	pop    rax
   14000ce84:	scas   eax,DWORD PTR es:[rdi]
   14000ce85:	adc    eax,DWORD PTR [rbx]
   14000ce87:	rex fisub DWORD PTR [rbx+0x58]
   14000ce8b:	mov    ebx,0x4e675dce
   14000ce90:	mov    dl,0x76
   14000ce92:	in     eax,dx
   14000ce93:	sbb    cl,ch
   14000ce95:	or     ax,bx
   14000ce98:	mov    ah,0x39
   14000ce9a:	mov    dh,0x92
   14000ce9c:	ret    
   14000ce9d:	xchg   esp,eax
   14000ce9e:	(bad)  
   14000ce9f:	push   rsi
   14000cea0:	cmp    eax,0x616b9720
   14000cea5:	ficom  DWORD PTR [rdx]
   14000cea7:	add    eax,DWORD PTR [rcx+0x5b5226d2]
   14000cead:	test   al,0xd0
   14000ceaf:	rex.X or DWORD PTR [rbx],ecx
   14000ceb2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ceb3:	lods   eax,DWORD PTR ds:[rsi]
   14000ceb4:	push   0x42153675
   14000ceb9:	imul   ecx,DWORD PTR [rbx*1+0x22468281],0x54
   14000cec1:	add    al,0xc
   14000cec3:	push   rcx
   14000cec4:	pop    rdx
   14000cec5:	scas   eax,DWORD PTR es:[rdi]
   14000cec6:	ret    0x7340
   14000cec9:	out    0x58,al
   14000cecb:	rol    BYTE PTR [rbx-0x9],0x9a
   14000cecf:	pop    rsp
   14000ced0:	(bad)  [rbx+rsi*2+0x64]
   14000ced4:	jns    0x14000ce67
   14000ced6:	mov    ecx,0xb97279f9
   14000cedb:	sbb    al,0x53
   14000cedd:	rcl    DWORD PTR [rbx+0x60],cl
   14000cee0:	adc    al,0xb1
   14000cee2:	or     DWORD PTR [rcx+0x4],ebp
   14000cee5:	jns    0x14000ce71
   14000cee7:	rex.RX
   14000cee8:	cs jp  0x14000cf52
   14000ceeb:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ceed:	rex.RX
   14000ceee:	rex.RX xor al,0x60
   14000cef1:	jmp    0x14000ce87
   14000cef3:	loope  0x14000cf3a
   14000cef5:	jbe    0x14000cf53
   14000cef7:	xor    dl,BYTE PTR [rcx]
   14000cef9:	jl     0x14000ceb4
   14000cefb:	(bad)  
   14000cefc:	test   DWORD PTR [rdx+0x531873fa],edi
   14000cf02:	jg     0x14000cf15
   14000cf04:	ins    DWORD PTR es:[rdi],dx
   14000cf05:	xchg   ebp,eax
   14000cf06:	cmp    BYTE PTR [rsi-0x14],dh
   14000cf09:	add    al,0xaf
   14000cf0b:	pop    rsi
   14000cf0c:	mov    eax,0xc5cfc708
   14000cf11:	cmp    edi,esp
   14000cf13:	sbb    al,BYTE PTR [rbx]
   14000cf15:	jb     0x14000cf44
   14000cf17:	loop   0x14000cf6a
   14000cf19:	(bad)  
   14000cf1a:	cmp    eax,0x101eff7e
   14000cf1f:	in     eax,dx
   14000cf20:	call   QWORD PTR [rcx]
   14000cf22:	(bad)  
   14000cf23:	scas   eax,DWORD PTR es:[rdi]
   14000cf24:	sbb    BYTE PTR [rax],dh
   14000cf26:	push   rsi
   14000cf27:	add    al,dh
   14000cf29:	(bad)  
   14000cf2a:	in     eax,dx
   14000cf2b:	or     al,0xa4
   14000cf2d:	movsxd ebx,DWORD PTR [rbp-0x46]
   14000cf30:	movsxd eax,DWORD PTR [rbx+rcx*8-0x1175f9ba]
   14000cf37:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cf38:	sbb    eax,0x1f0f8312
   14000cf3d:	adc    al,0xf
   14000cf3f:	and    BYTE PTR [rdx+0x47febc6c],dl
   14000cf45:	call   0x15b67ff34
   14000cf4a:	sbb    BYTE PTR [rsi+0x18041f85],al
   14000cf50:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cf51:	rex.WB leave 
   14000cf53:	push   0x43
   14000cf55:	out    dx,al
   14000cf56:	(bad)  
   14000cf58:	xchg   edi,esp
   14000cf5a:	or     ebp,DWORD PTR [rax-0x4efae51a]
   14000cf60:	rex.WRB (bad) 
   14000cf62:	scas   al,BYTE PTR es:[rdi]
   14000cf63:	push   rdx
   14000cf64:	retf   0x29d5
   14000cf67:	(bad)  
   14000cf68:	pop    rdx
   14000cf69:	xchg   esp,eax
   14000cf6a:	rex.WX (bad) 
   14000cf6c:	(bad)
   14000cf6f:	mov    cl,0xd0
   14000cf71:	es xchg edi,eax
   14000cf73:	or     esi,DWORD PTR [rax+0x546220cc]
   14000cf79:	or     al,0xb4
   14000cf7b:	xor    cl,BYTE PTR [rcx]
   14000cf7d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cf7e:	adc    esp,0x56
   14000cf81:	mov    ah,0x23
   14000cf83:	adc    BYTE PTR [rax+rbx*4+0x44],ah
   14000cf87:	icebp  
   14000cf88:	loopne 0x14000cfc3
   14000cf8a:	int    0x3f
   14000cf8c:	clc    
   14000cf8d:	(bad)  
   14000cf8e:	cmp    bh,BYTE PTR [rdi-0x9]
   14000cf91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   14000cf93:	fldcw  WORD PTR [rcx+rbx*8+0x66991d2c]
   14000cf9a:	jbe    0x14000cffd
   14000cf9c:	sbb    ebx,ecx
   14000cf9e:	sub    dh,BYTE PTR [rax+0xb3af5bb]
   14000cfa4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cfa5:	xor    eax,0x2c309730
   14000cfaa:	(bad)  
   14000cfab:	add    eax,0x67134329
   14000cfb0:	in     al,dx
   14000cfb1:	jmp    0x16baed144
   14000cfb6:	mul    DWORD PTR [rcx]
   14000cfb8:	rol    ebx,1
   14000cfba:	jne    0x14000cfa8
   14000cfbc:	and    eax,0x1ed51410
   14000cfc1:	int    0x2b
   14000cfc3:	(bad)  
   14000cfc4:	rex.WXB sti 
   14000cfc6:	int3   
   14000cfc7:	inc    ebp
   14000cfc9:	repnz ror BYTE PTR [rdx],cl
   14000cfcc:	imul   ebp,DWORD PTR [rbx-0x29],0xffffffb8
   14000cfd0:	repnz repnz xchg edi,eax
   14000cfd3:	cmp    BYTE PTR [rcx-0x11],bh
   14000cfd6:	movsxd ebx,eax
   14000cfd8:	jbe    0x14000d048
   14000cfda:	loopne 0x14000cf94
   14000cfdc:	call   0xe57c6c59
   14000cfe1:	mov    bl,0x54
   14000cfe3:	add    bl,BYTE PTR [rax]
   14000cfe5:	stos   BYTE PTR es:[rdi],al
   14000cfe6:	add    bl,BYTE PTR [rsi+rcx*2]
   14000cfe9:	add    al,0x18
   14000cfeb:	sbb    eax,DWORD PTR [rax]
   14000cfed:	js     0x14000d01a
   14000cfef:	xchg   ebx,eax
   14000cff0:	xor    DWORD PTR [rax+rsi*4],0x59626f5f
   14000cff7:	es mov dh,0x69
   14000cffa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cffb:	cmp    edi,esp
   14000cffd:	mov    BYTE PTR [rsi-0x2b52e13e],cl
   14000d003:	mov    ebp,0xe164a586
   14000d008:	ds call 0x15c1b4a53
   14000d00e:	push   rsp
   14000d00f:	scas   eax,DWORD PTR es:[rdi]
   14000d010:	pop    rsi
   14000d011:	jmp    0x14000cfa1
   14000d013:	push   rdx
   14000d014:	adc    DWORD PTR [rax+0x58],ecx
   14000d017:	pop    rdi
   14000d018:	mov    edi,0xc763b1ce
   14000d01d:	sub    DWORD PTR [rbp-0x3f596776],edx
   14000d023:	repz sub eax,0x23efb39a
   14000d029:	or     BYTE PTR [rip+0xfffffffff9e36bd2],dh        # 0x139e43c01
   14000d02f:	jne    0x14000d08b
   14000d031:	lods   eax,DWORD PTR ds:[rsi]
   14000d032:	jge    0x14000cfb8
   14000d034:	push   rdi
   14000d035:	rex.RB in eax,dx
   14000d037:	out    dx,eax
   14000d038:	and    BYTE PTR [rsi+0x2dfc30f6],dh
   14000d03e:	sub    al,0xb5
   14000d040:	rex.RB (bad) 
   14000d043:	and    DWORD PTR [rdi-0x4833ae55],ebx
   14000d049:	sub    BYTE PTR [rdx+rbx*2],dl
   14000d04c:	xchg   esp,eax
   14000d04d:	or     bh,BYTE PTR [rsi]
   14000d04f:	stc    
   14000d050:	rex.X xchg ebx,eax
   14000d052:	jl     0x14000d022
   14000d054:	vandnps ymm8,ymm9,YMMWORD PTR [rax+rdi*2]
   14000d059:	pop    rax
   14000d05a:	push   0xffffffff8145236d
   14000d05f:	mov    edi,0x2c053df2
   14000d064:	imul   edx,DWORD PTR [rdi-0x1b3981a1],0xffffffd5
   14000d06b:	or     edi,DWORD PTR [rsi]
   14000d06d:	sahf   
   14000d06e:	(bad)  [rsi-0x46]
   14000d071:	test   al,0x30
   14000d073:	stos   DWORD PTR es:[rdi],eax
   14000d074:	(bad)  
   14000d075:	out    0xfe,eax
   14000d077:	sti    
   14000d078:	ins    DWORD PTR es:[rdi],dx
   14000d079:	xchg   esp,eax
   14000d07a:	push   rcx
   14000d07b:	ror    dl,0x17
   14000d07e:	and    ecx,ebx
   14000d080:	lock rex.R
   14000d082:	rex.RXB pop r14
   14000d084:	xchg   DWORD PTR [rcx+rdx*2-0x70],ebp
   14000d088:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d089:	pop    rax
   14000d08a:	rex.W
   14000d08b:	fs js  0x14000d062
   14000d08e:	jmp    0x1418e797a
   14000d093:	xchg   BYTE PTR [rdx-0x7ef7072e],ah
   14000d099:	test   DWORD PTR [rbx-0x38eb197c],0xd5e71f8f
   14000d0a3:	or     edx,DWORD PTR [rdi]
   14000d0a5:	jrcxz  0x14000d086
   14000d0a7:	sub    ch,ah
   14000d0a9:	rex.WXB adc al,0xea
   14000d0ac:	sbb    ch,dh
   14000d0ae:	rex.RX xchg eax,eax
   14000d0b0:	test   al,0xd2
   14000d0b2:	imul   ecx,DWORD PTR [rsi],0x33
   14000d0b5:	sti    
   14000d0b6:	(bad)  
   14000d0b7:	adc    DWORD PTR [rax],eax
   14000d0b9:	mov    WORD PTR [rdx+0x7f7df40c],ds
   14000d0bf:	in     eax,dx
   14000d0c0:	sub    edi,0x3f
   14000d0c3:	jp     0x14000d13f
   14000d0c5:	jmp    0xe40dbe97
   14000d0ca:	xor    eax,0x86126996
   14000d0cf:	adc    dl,bh
   14000d0d1:	rex.WXB (bad) 
   14000d0d3:	jg     0x14000d149
   14000d0d5:	pop    rdx
   14000d0d6:	lods   al,BYTE PTR ds:[rsi]
   14000d0d7:	and    ch,BYTE PTR [rbx-0x7b]
   14000d0da:	ss rex.RB
   14000d0dc:	outs   dx,DWORD PTR es:[rsi]
   14000d0de:	(bad)  
   14000d0df:	mov    edx,0x1b828e38
   14000d0e4:	xor    ah,ch
   14000d0e6:	rex.RX cwde 
   14000d0e8:	mov    DWORD PTR [rdx],edi
   14000d0ea:	repz sub ecx,edi
   14000d0ed:	pop    rsp
   14000d0ee:	ins    DWORD PTR es:[rdi],dx
   14000d0ef:	rex.WB cmp al,0xcf
   14000d0f2:	out    0xf2,eax
   14000d0f4:	(bad)  
   14000d0f5:	iret   
   14000d0f6:	xor    bh,BYTE PTR [rbx]
   14000d0f8:	pop    rbp
   14000d0f9:	(bad)  
   14000d0fa:	mov    dl,0x6c
   14000d0fc:	retf   0x22c5
   14000d0ff:	mov    ecx,0xc7050efc
   14000d104:	and    DWORD PTR [rdi-0x34],edx
   14000d107:	and    ebp,DWORD PTR [rdx+riz*1-0xdf8653e]
   14000d10e:	test   BYTE PTR [rax],bh
   14000d110:	rex.W
   14000d111:	and    BYTE PTR gs:[rbx-0x7b],al
   14000d115:	or     bh,BYTE PTR [rsp+riz*2]
   14000d118:	shl    BYTE PTR [rax],1
   14000d11a:	jo     0x14000d187
   14000d11c:	in     al,dx
   14000d11d:	xor    al,0x77
   14000d11f:	push   rcx
   14000d120:	in     eax,dx
   14000d121:	ins    DWORD PTR es:[rdi],dx
   14000d122:	in     al,0xce
   14000d124:	rex.WRB jo 0x14000d196
   14000d127:	and    al,BYTE PTR [rdx+0x4dbd6c75]
   14000d12d:	(bad)  
   14000d12e:	fisub  DWORD PTR [rdi-0x33ae9070]
   14000d134:	mov    ebx,0x28a6a7e4
   14000d139:	adc    eax,0x3de17f25
   14000d13e:	jns    0x14000d12e
   14000d140:	cmp    DWORD PTR [rcx-0x1d],edx
   14000d143:	mov    ebp,DWORD PTR [rdi]
   14000d145:	out    dx,eax
   14000d146:	mov    al,0xdf
   14000d148:	cmp    BYTE PTR [rdi-0x18],cl
   14000d14b:	out    dx,al
   14000d14c:	jo     0x14000d140
   14000d14e:	rcr    DWORD PTR cs:[rbp-0x39],0x4f
   14000d153:	push   rdx
   14000d154:	sub    bl,dl
   14000d156:	or     BYTE PTR [rbx-0x6bf49e80],ah
   14000d15c:	mov    WORD PTR [rsi*2+0x5b984e86],cs
   14000d163:	movs   BYTE PTR es:[rdi],BYTE PTR gs:[rsi]
   14000d165:	add    BYTE PTR [rbp+0x15a15fe],dl
   14000d16b:	xor    dh,BYTE PTR [rsi]
   14000d16d:	push   rdx
   14000d16e:	rex.WX mov al,0x1d
   14000d171:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d172:	int3   
   14000d173:	ins    DWORD PTR es:[rdi],dx
   14000d174:	(bad)  
   14000d175:	push   rdi
   14000d176:	(bad)  
   14000d177:	(bad)  
   14000d178:	(bad)  
   14000d179:	test   eax,0x7e7e649f
   14000d17e:	sahf   
   14000d17f:	retf   0x6fa
   14000d182:	xlat   BYTE PTR ds:[rbx]
   14000d183:	pop    rsi
   14000d184:	stc    
   14000d185:	and    ah,BYTE PTR [rdi+0x6c57781e]
   14000d18b:	xchg   esp,eax
   14000d18c:	in     al,dx
   14000d18d:	(bad)  
   14000d18e:	mov    dh,0xde
   14000d190:	rex.W leave 
   14000d192:	and    al,0xf5
   14000d194:	sbb    BYTE PTR [rsi],ah
   14000d196:	sub    al,BYTE PTR [rax+0x2f]
   14000d199:	lea    ecx,[rip+0x326a3000]        # 0x1726b019f
   14000d19f:	nop
   14000d1a0:	(bad)  
   14000d1a1:	ja     0x14000d207
   14000d1a3:	addr32 mov al,ds:0xfe0a2e62
   14000d1a9:	rcr    DWORD PTR [rcx+0x2e4efddc],1
   14000d1af:	jp     0x14000d205
   14000d1b1:	test   al,0xa2
   14000d1b3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d1b4:	cmp    al,0x64
   14000d1b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1b7:	cs (bad) 
   14000d1b9:	push   rdx
   14000d1ba:	fmulp  st(2),st
   14000d1bc:	(bad)  
   14000d1bd:	clc    
   14000d1be:	scas   eax,DWORD PTR es:[rdi]
   14000d1bf:	or     eax,0xe83ea221
   14000d1c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d1c5:	clc    
   14000d1c6:	not    BYTE PTR [rdx-0x21]
   14000d1c9:	xchg   esp,eax
   14000d1ca:	sbb    eax,0x1ecc56a0
   14000d1cf:	mov    ebp,0x2efeea87
   14000d1d4:	(bad)  
   14000d1d5:	stos   BYTE PTR es:[rdi],al
   14000d1d6:	in     al,0xfc
   14000d1d8:	rex.WXB xchg r15,rax
   14000d1da:	test   eax,0x6136eed
   14000d1df:	sub    eax,0x39c8ad4c
   14000d1e4:	rcl    DWORD PTR es:[rbp+0x73730b22],cl
   14000d1eb:	int3   
   14000d1ec:	int3   
   14000d1ed:	(bad)  
   14000d1ee:	xor    BYTE PTR [rbp+0x29],dl
   14000d1f1:	push   rbx
   14000d1f2:	test   eax,0x8b172854
   14000d1f7:	adc    al,0xcb
   14000d1f9:	adc    eax,0xf265338a
   14000d1fe:	vpaddsb xmm11,xmm12,xmm4
   14000d202:	xor    DWORD PTR [rcx+rbx*4-0x1cf7f4b9],esi
   14000d209:	push   rax
   14000d20a:	(bad)  
   14000d20c:	push   rbp
   14000d20d:	test   dh,ch
   14000d20f:	(bad)  
   14000d210:	movsxd ecx,DWORD PTR [r11]
   14000d213:	scas   eax,DWORD PTR es:[rdi]
   14000d214:	mov    esi,0x26fd4ec9
   14000d219:	pop    rsi
   14000d21a:	jne    0x14000d229
   14000d21c:	mov    ecx,0xdee5137e
   14000d221:	rcl    BYTE PTR [rax-0x45],0x9c
   14000d225:	(bad)  
   14000d226:	fcmovnb st,st(5)
   14000d228:	cwde   
   14000d229:	imul   edx,DWORD PTR [rdx+0x2b902c2b],0x5a
   14000d230:	rex.WR xchg rdi,rax
   14000d232:	adc    eax,0xb1c2b2e5
   14000d237:	mov    dh,0xa2
   14000d239:	shl    BYTE PTR [rsi],0xc3
   14000d23c:	rex.R push 0x7
   14000d23f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d240:	popf   
   14000d241:	enter  0x90de,0xf1
   14000d245:	or     BYTE PTR [rax-0x7750e82c],cl
   14000d24b:	(bad)  
   14000d24c:	nop
   14000d24d:	retf   
   14000d24e:	mov    eax,0xd28cb83c
   14000d253:	mov    DWORD PTR [rbp-0x7d],ebp
   14000d256:	jmp    0x1476a7a45
   14000d25b:	scas   eax,DWORD PTR es:[rdi]
   14000d25c:	loope  0x14000d1e9
   14000d25e:	rex.RB push r14
   14000d260:	(bad)  
   14000d261:	sbb    al,0xa1
   14000d263:	stc    
   14000d264:	fiadd  DWORD PTR [rbp-0x16]
   14000d267:	(bad)  
   14000d268:	pop    rbp
   14000d269:	sub    dh,BYTE PTR [rbx]
   14000d26b:	repz popf 
   14000d26d:	adc    cl,ah
   14000d26f:	lods   al,BYTE PTR ds:[rsi]
   14000d270:	(bad)  
   14000d271:	(bad)  
   14000d272:	xchg   ebp,eax
   14000d273:	or     ah,dl
   14000d275:	cmp    eax,0x58867d86
   14000d27a:	jge    0x14000d234
   14000d27c:	xor    BYTE PTR gs:[rcx+0x2],0x80
   14000d281:	xchg   ecx,eax
   14000d282:	xchg   edx,eax
   14000d283:	or     DWORD PTR [rdx],0x28192077
   14000d289:	xchg   edx,eax
   14000d28a:	pop    rsi
   14000d28b:	movsxd esi,DWORD PTR [rcx]
   14000d28d:	(bad)  
   14000d28e:	push   rbx
   14000d28f:	ffree  st(3)
   14000d291:	adc    BYTE PTR [rdx],al
   14000d293:	ret    
   14000d294:	mov    dl,0x70
   14000d296:	sub    al,0xb
   14000d298:	xchg   ecx,eax
   14000d299:	retf   
   14000d29a:	xchg   ecx,eax
   14000d29b:	adc    al,0xf6
   14000d29d:	rex.W stos BYTE PTR es:[rdi],al
   14000d29f:	(bad)  
   14000d2a0:	and    al,0x2e
   14000d2a2:	stos   BYTE PTR es:[rdi],al
   14000d2a3:	mov    dh,0xef
   14000d2a5:	(bad)  
   14000d2a6:	pop    rbx
   14000d2a7:	jge    0x14000d26e
   14000d2a9:	xchg   ecx,eax
   14000d2aa:	icebp  
   14000d2ab:	jno    0x14000d25a
   14000d2ad:	rcl    BYTE PTR [rdx+rsi*2-0x78],0x77
   14000d2b2:	ret    0x6915
   14000d2b5:	cmp    DWORD PTR [rax+0x76a4380e],esi
   14000d2bb:	xor    dl,BYTE PTR [rdx+0x3b]
   14000d2be:	(bad)  
   14000d2bf:	sbb    dl,BYTE PTR [rax]
   14000d2c1:	push   rsp
   14000d2c2:	sub    BYTE PTR [rsi+0x2efc7a39],dl
   14000d2c8:	xchg   esi,eax
   14000d2c9:	push   rdi
   14000d2ca:	mov    es,WORD PTR [rdi-0x11]
   14000d2cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d2ce:	adc    al,0x4a
   14000d2d0:	rex.WB jl 0x14000d282
   14000d2d3:	rex.WRB movabs r13,0xdd5fd78f7566cbba
   14000d2dd:	movabs al,ds:0x9c920636bd23aadd
   14000d2e6:	ins    DWORD PTR es:[rdi],dx
   14000d2e7:	xor    bl,BYTE PTR [rbp+0x29]
   14000d2ea:	mov    cl,0xb2
   14000d2ec:	mov    dl,0xc4
   14000d2ee:	cld    
   14000d2ef:	cld    
   14000d2f0:	sbb    al,0x73
   14000d2f2:	mov    bl,0xb3
   14000d2f4:	rex.WR
   14000d2f5:	rex.WRXB iretq 
   14000d2f7:	xor    BYTE PTR [rbx],dh
   14000d2f9:	cmp    eax,0x14ccf4cd
   14000d2fe:	or     esi,DWORD PTR [rbx]
   14000d300:	or     edx,DWORD PTR [rdx+rcx*8+0x703cc0f3]
   14000d307:	(bad)  
   14000d308:	add    BYTE PTR [rcx-0x4],al
   14000d30b:	iret   
   14000d30c:	mul    DWORD PTR [rsi+rdi*2]
   14000d30f:	jae    0x14000d328
   14000d311:	mov    edi,0x6f7b45b6
   14000d316:	xchg   ebx,eax
   14000d317:	out    0xce,al
   14000d319:	(bad)  
   14000d31a:	int    0xdd
   14000d31c:	sbb    ebx,DWORD PTR [rbp+rbx*8-0x43]
   14000d320:	sbb    DWORD PTR [rdx-0x41],0xc9b6a989
   14000d327:	pop    rcx
   14000d328:	xor    eax,0x8526b98a
   14000d32d:	(bad)  
   14000d32e:	rex.WRXB mov r9b,0xe8
   14000d331:	push   rbx
   14000d332:	enter  0xc937,0xd9
   14000d336:	adc    dl,bl
   14000d338:	push   rdx
   14000d339:	or     BYTE PTR [rcx],dl
   14000d33b:	ins    DWORD PTR es:[rdi],dx
   14000d33c:	cmp    BYTE PTR [rdx-0x3f90938c],ch
   14000d342:	rex.RX imul r15d,DWORD PTR [rbx],0x56
   14000d346:	ins    DWORD PTR es:[rdi],dx
   14000d347:	adc    dh,bh
   14000d349:	data16 mov ds,WORD PTR [rcx]
   14000d34c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d34d:	rex.WX imul rsi,rbx,0x5f
   14000d351:	jo     0x14000d3b6
   14000d353:	jmp    0xdd9a6c7f
   14000d358:	gs stos BYTE PTR es:[rdi],al
   14000d35a:	push   rdx
   14000d35b:	movabs eax,ds:0x87d46ff12a35f376
   14000d364:	cdq    
   14000d365:	mov    ebp,0x3b10d79a
   14000d36a:	int3   
   14000d36b:	add    DWORD PTR [rdi+0x1b1a1a1c],edx
   14000d371:	add    BYTE PTR [rax],bl
   14000d373:	cmp    DWORD PTR [rcx],ebx
   14000d375:	enter  0x3ba,0xc9
   14000d379:	rex (bad) 
   14000d37b:	mov    ah,0x62
   14000d37d:	pop    rsi
   14000d37e:	mov    edi,0x17ad3f05
   14000d383:	(bad)  
   14000d384:	xor    eax,0x20d512f3
   14000d389:	ins    DWORD PTR es:[rdi],dx
   14000d38a:	sbb    eax,0xa52afb87
   14000d38f:	jrcxz  0x14000d319
   14000d391:	ror    BYTE PTR [rax],0x20
   14000d394:	and    bl,bh
   14000d396:	jle    0x14000d32c
   14000d398:	je     0x14000d36d
   14000d39a:	push   rcx
   14000d39b:	sub    DWORD PTR [rdx+0x5c666072],edx
   14000d3a1:	in     eax,dx
   14000d3a2:	(bad)  
   14000d3a3:	rex.W
   14000d3a4:	rex.XB pop r10
   14000d3a6:	rex.RB (bad) 
   14000d3a8:	adc    esp,DWORD PTR [rax-0x27]
   14000d3ab:	(bad)  
   14000d3ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d3ad:	movsxd edi,DWORD PTR gs:[rcx]
   14000d3b0:	(bad)  
   14000d3b1:	rex.WX retf 0xdc08
   14000d3b5:	push   rsp
   14000d3b6:	and    QWORD PTR [rdi-0x60],rbx
   14000d3ba:	push   rsp
   14000d3bb:	sub    dh,BYTE PTR [rbx+0x33a89cb8]
   14000d3c1:	push   rcx
   14000d3c2:	sbb    BYTE PTR [rcx-0x48a3bcf6],ah
   14000d3c8:	rex.WRB movabs r13,0xaed7e72eeaf5c7ba
   14000d3d2:	shr    BYTE PTR [rsi-0x43],1
   14000d3d5:	rex loopne 0x14000d38e
   14000d3d8:	xor    DWORD PTR [rbp+0x48],eax
   14000d3db:	and    DWORD PTR [rdi+0x33],esp
   14000d3de:	(bad)  
   14000d3df:	cmp    ecx,ebp
   14000d3e1:	retf   0xaca
   14000d3e4:	sub    ecx,ebx
   14000d3e6:	rex.WXB sub al,0x2c
   14000d3e9:	sub    al,0x30
   14000d3eb:	(bad)  
   14000d3ec:	(bad)  
   14000d3ed:	iret   
   14000d3ee:	(bad)  
   14000d3f0:	sub    al,0x53
   14000d3f2:	push   rbx
   14000d3f3:	ror    esp,cl
   14000d3f5:	xchg   esp,eax
   14000d3f6:	sub    edx,DWORD PTR [rax+0x45b9845b]
   14000d3fc:	cmp    BYTE PTR [rbp+0x7f],dh
   14000d3ff:	cli    
   14000d400:	scas   al,BYTE PTR es:[rdi]
   14000d401:	(bad)  
   14000d402:	shr    BYTE PTR [rax-0x79],1
   14000d405:	mov    ah,0xf6
   14000d407:	ja     0x14000d471
   14000d409:	in     eax,dx
   14000d40a:	outs   dx,BYTE PTR ds:[rsi]
   14000d40b:	rcr    eax,cl
   14000d40d:	frstor [rdi+riz*2-0x11]
   14000d411:	(bad)  
   14000d412:	xlat   BYTE PTR ds:[rbx]
   14000d413:	div    DWORD PTR [rdi]
   14000d415:	nop
   14000d416:	(bad)  
   14000d417:	(bad)  
   14000d418:	adc    esi,edi
   14000d41a:	rex.WRB sub al,0x76
   14000d41d:	leave  
   14000d41e:	pop    rbx
   14000d41f:	push   rbp
   14000d420:	mov    al,BYTE PTR [rbp+0x4042a536]
   14000d426:	mov    cl,0xe0
   14000d428:	push   rbx
   14000d429:	sub    al,0xb5
   14000d42b:	enter  0x3e39,0xa6
   14000d42f:	adc    DWORD PTR [rbp+0x2c],ebp
   14000d432:	movabs ds:0xe698955236d48584,al
   14000d43b:	retf   
   14000d43c:	xor    al,0xf5
   14000d43e:	rex.WXB mov r12b,0xf5
   14000d441:	jno    0x14000d3d1
   14000d443:	sbb    al,0x59
   14000d445:	movabs eax,ds:0x72b32ed7d722e171
   14000d44e:	in     al,dx
   14000d44f:	adc    al,0xb6
   14000d451:	gs ja  0x14000d443
   14000d454:	adc    ebx,DWORD PTR [rax-0x6eb899e8]
   14000d45a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d45b:	xchg   edx,eax
   14000d45c:	fucomip st,st(1)
   14000d45e:	nop
   14000d45f:	and    al,al
   14000d461:	fadd   DWORD PTR [rax]
   14000d463:	rcr    BYTE PTR [rbx-0x66],0xc
   14000d467:	rex.R
   14000d468:	addr32 mov esi,0xbdb50924
   14000d46e:	(bad)  
   14000d46f:	adc    eax,0xb77a9424
   14000d474:	xor    dl,BYTE PTR [rip+0xffffffffc1a9337c]        # 0x101aa07f6
   14000d47a:	push   rsi
   14000d47b:	in     al,dx
   14000d47c:	mov    eax,ecx
   14000d47e:	xchg   BYTE PTR [rbx+rbp*1],cl
   14000d481:	mov    edx,0x83f0a55
   14000d486:	xchg   ecx,eax
   14000d487:	pop    rsi
   14000d488:	ja     0x14000d43c
   14000d48a:	push   rcx
   14000d48b:	mov    edx,0x72a6707b
   14000d490:	scas   al,BYTE PTR es:[rdi]
   14000d491:	(bad)  
   14000d492:	mov    BYTE PTR [rax-0x7e9240c2],ch
   14000d498:	jbe    0x14000d47c
   14000d49a:	(bad)  
   14000d49b:	(bad)  
   14000d49c:	sub    bh,ch
   14000d49e:	stos   DWORD PTR es:[rdi],eax
   14000d49f:	jrcxz  0x14000d45b
   14000d4a1:	jp     0x14000d48b
   14000d4a3:	push   0xffffffffa15c9ed7
   14000d4a8:	movabs rcx,0x44f3f1e391f2c532
   14000d4b2:	sbb    dh,BYTE PTR [rax+rbx*1+0x6]
   14000d4b6:	js     0x14000d4a5
   14000d4b8:	(bad)  
   14000d4b9:	mov    ch,0xea
   14000d4bb:	cs xchg edi,eax
   14000d4bd:	ja     0x14000d4b5
   14000d4bf:	js     0x14000d4b2
   14000d4c1:	ror    bl,cl
   14000d4c3:	mov    eax,0xd7a11aad
   14000d4c8:	ret    0x5240
   14000d4cb:	sub    ah,ah
   14000d4cd:	pop    rax
   14000d4ce:	pushf  
   14000d4cf:	lahf   
   14000d4d0:	in     eax,0xc8
   14000d4d2:	xchg   ecx,eax
   14000d4d3:	push   rbp
   14000d4d4:	push   rsi
   14000d4d5:	push   rsi
   14000d4d6:	xchg   esi,eax
   14000d4d7:	pop    rcx
   14000d4d8:	pop    rax
   14000d4d9:	cwde   
   14000d4da:	addr32 jle 0x14000d54b
   14000d4dd:	sahf   
   14000d4de:	jmp    0xe7a73ecc
   14000d4e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4e4:	cdq    
   14000d4e5:	(bad)  
   14000d4e6:	xchg   ebp,eax
   14000d4e7:	cwde   
   14000d4e8:	(bad)  
   14000d4e9:	sub    al,0xc3
   14000d4eb:	xchg   ecx,eax
   14000d4ec:	gs loopne 0x14000d4f0
   14000d4ef:	jl     0x14000d491
   14000d4f1:	sbb    DWORD PTR [rax-0x4d],eax
   14000d4f4:	add    ebp,ebp
   14000d4f6:	pop    rdx
   14000d4f7:	fwait
   14000d4f8:	push   rsi
   14000d4f9:	ins    DWORD PTR es:[rdi],dx
   14000d4fa:	xchg   esi,edx
   14000d4fc:	fisub  WORD PTR [rsi]
   14000d4fe:	mov    ebx,0xd46e0dd5
   14000d503:	outs   dx,BYTE PTR ds:[rsi]
   14000d504:	and    BYTE PTR [rdi-0x24],ch
   14000d507:	add    BYTE PTR [rdi+0x13],ch
   14000d50a:	push   rbx
   14000d50b:	frstor [rdi+riz*2]
   14000d50e:	out    dx,al
   14000d50f:	push   rcx
   14000d510:	je     0x14000d52c
   14000d512:	adc    al,0x8b
   14000d514:	ins    DWORD PTR es:[rdi],dx
   14000d515:	rex.WX
   14000d516:	(bad)
   14000d51b:	imul   esi,DWORD PTR [rsi-0x79],0xd2cfdb9b
   14000d522:	pushf  
   14000d523:	stc    
   14000d524:	adc    DWORD PTR [rsi+0x6766152a],esp
   14000d52a:	addr32 (bad) 
   14000d52d:	mov    ebx,0x84a74dca
   14000d532:	popf   
   14000d533:	retf   
   14000d534:	rex.RXB (bad) 
   14000d536:	push   rsp
   14000d537:	sbb    al,0x3a
   14000d539:	ins    DWORD PTR es:[rdi],dx
   14000d53a:	pop    rdx
   14000d53b:	sbb    eax,0x43274a49
   14000d540:	cmp    eax,0xa89fe56c
   14000d545:	add    bl,ah
   14000d547:	and    esp,DWORD PTR [r15]
   14000d54a:	add    ebx,ebp
   14000d54c:	xchg   ecx,eax
   14000d54d:	fistp  WORD PTR [rcx+0x1f]
   14000d550:	lock lods eax,DWORD PTR ds:[rsi]
   14000d552:	out    0x58,eax
   14000d554:	rex.WRXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d556:	pop    rdi
   14000d557:	adc    dh,BYTE PTR [rcx]
   14000d559:	fdivr  DWORD PTR [rdi+0x1c066891]
   14000d55f:	(bad)  
   14000d560:	mov    al,BYTE PTR [rdx-0x34e3d3a5]
   14000d566:	rex.RX in al,0x48
   14000d569:	cmp    eax,0x114a9104
   14000d56e:	add    DWORD PTR [rbx+0x20],eax
   14000d571:	adc    eax,0xdd23e06e
   14000d576:	ins    BYTE PTR es:[rdi],dx
   14000d577:	(bad)  
   14000d578:	int3   
   14000d579:	rex.R push 0xffffffffffffffc8
   14000d57c:	jbe    0x15eae060c
   14000d583:	xchg   ebp,eax
   14000d584:	and    dh,BYTE PTR [rdx-0x1da75430]
   14000d58a:	rex ja 0x14000d510
   14000d58d:	rex.XB movabs eax,ds:0x48caad41995ca250
   14000d597:	pop    rsp
   14000d598:	pop    QWORD PTR [rcx+0x6e21942b]
   14000d59e:	mov    ebx,0x977f6d45
   14000d5a3:	mov    ebx,DWORD PTR [rbx-0x1d0a8345]
   14000d5a9:	repz js 0x14000d559
   14000d5ac:	sbb    dl,dl
   14000d5ae:	ja     0x14000d5e1
   14000d5b0:	je     0x14000d5b6
   14000d5b2:	(bad)  
   14000d5b3:	jae    0x14000d568
   14000d5b5:	xor    ebx,DWORD PTR [rdi*1-0x63a7b86]
   14000d5bc:	jns    0x14000d5a4
   14000d5be:	(bad)  
   14000d5bf:	out    0x99,al
   14000d5c1:	(bad)  
   14000d5c2:	(bad)  
   14000d5c3:	(bad)  
   14000d5c4:	push   0x6a
   14000d5c6:	(bad)  
   14000d5c7:	(bad)  
   14000d5c9:	sar    ah,0x74
   14000d5cc:	cdq    
   14000d5cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d5ce:	mov    ecx,0xa3a9e445
   14000d5d3:	clc    
   14000d5d4:	loope  0x14000d639
   14000d5d6:	xor    al,0x7d
   14000d5d8:	rex.WRB movabs r11,0xf1f73768b56ed015
   14000d5e2:	jmp    0x14000d59f
   14000d5e4:	in     al,dx
   14000d5e5:	xor    al,0x77
   14000d5e7:	fldcw  WORD PTR [rax+0x3676a36f]
   14000d5ed:	rcr    esi,1
   14000d5ef:	xchg   BYTE PTR es:[rdi-0x6d],bh
   14000d5f3:	stc    
   14000d5f4:	mov    ebx,0x41a087ef
   14000d5f9:	sub    BYTE PTR [rbx+rbp*4],ah
   14000d5fc:	stos   DWORD PTR es:[rdi],eax
   14000d5fd:	stos   DWORD PTR es:[rdi],eax
   14000d5fe:	ins    BYTE PTR es:[rdi],dx
   14000d5ff:	ins    DWORD PTR es:[rdi],dx
   14000d600:	cmp    eax,0xe9808e4f
   14000d605:	rcr    BYTE PTR [rdx+rax*8],cl
   14000d608:	int3   
   14000d609:	test   BYTE PTR [rax],cl
   14000d60b:	sti    
   14000d60c:	add    DWORD PTR [rip+0xffffffffe694a2e5],ebp        # 0x1269578f7
   14000d612:	fdiv   QWORD PTR [rcx+0x6fc06485]
   14000d618:	jrcxz  0x14000d631
   14000d61a:	cmp    eax,0x36343c
   14000d61f:	xor    dl,bh
   14000d621:	(bad)  
   14000d622:	rex ja 0x14000d5ad
   14000d625:	jp     0x14000d68e
   14000d627:	int3   
   14000d628:	add    DWORD PTR [rsi+0xecbdea7],ebx
   14000d62e:	pop    rdx
   14000d62f:	jno    0x14000d6ab
   14000d631:	push   rbp
   14000d632:	mov    ch,BYTE PTR [rax]
   14000d634:	add    ch,BYTE PTR [rdi]
   14000d636:	xchg   esi,eax
   14000d637:	xor    esi,DWORD PTR [rdx+0x20c306f6]
   14000d63d:	xlat   BYTE PTR ds:[rbx]
   14000d63e:	push   rbp
   14000d63f:	or     ch,BYTE PTR [rdx+rax*1]
   14000d642:	mov    bh,0xb4
   14000d644:	jb     0x14000d6b4
   14000d646:	sbb    BYTE PTR [rcx+0x4fc0ad15],ch
   14000d64c:	stos   DWORD PTR es:[rdi],eax
   14000d64d:	out    0x66,al
   14000d64f:	adc    ecx,DWORD PTR [rbp+0x11839b52]
   14000d655:	(bad)  
   14000d656:	sbb    eax,0xb36a5659
   14000d65b:	rol    ah,1
   14000d65d:	(bad)
   14000d660:	sti    
   14000d661:	rex.RB push r12
   14000d663:	repnz rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d666:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d667:	mov    edi,0xa1452b4
   14000d66c:	sub    dl,BYTE PTR gs:[rbx+0x33]
   14000d670:	sub    BYTE PTR [rbp+0x2a],dh
   14000d673:	jge    0x14000d675
   14000d675:	lods   eax,DWORD PTR ds:[rsi]
   14000d676:	adc    eax,0x6ed01061
   14000d67b:	xor    eax,0x38f6d469
   14000d680:	mov    edi,0x5f97c3b1
   14000d685:	jge    0x14000d698
   14000d687:	mov    bh,0x59
   14000d689:	rex.XB test DWORD PTR [r14],ebp
   14000d68c:	mov    dl,BYTE PTR es:[rdx-0x3f]
   14000d690:	(bad)  
   14000d691:	jle    0x14000d701
   14000d693:	xchg   esi,eax
   14000d694:	(bad)
   14000d697:	out    0xe6,al
   14000d699:	cwd    
   14000d69b:	cdq    
   14000d69c:	sahf   
   14000d69d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d69e:	push   rdx
   14000d69f:	sub    DWORD PTR [rbx+0x28],edx
   14000d6a2:	adc    al,0xc8
   14000d6a4:	out    0xa,eax
   14000d6a6:	rex.WR
   14000d6a7:	rex.WRB (bad) 
   14000d6a9:	adc    ebx,esi
   14000d6ab:	mov    eax,DWORD PTR [rdx+rbp*8+0x70349e28]
   14000d6b2:	jge    0x14000d6bc
   14000d6b4:	add    cl,BYTE PTR [rcx-0x45]
   14000d6b7:	frstor [rsi+0x298ebed9]
   14000d6bd:	stos   DWORD PTR es:[rdi],eax
   14000d6be:	sbb    BYTE PTR [rdx],ah
   14000d6c0:	rex.RXB scas al,BYTE PTR es:[rdi]
   14000d6c2:	push   rax
   14000d6c3:	(bad)  
   14000d6c4:	jp     0x14000d740
   14000d6c6:	sbb    ah,BYTE PTR [rcx+0x1ce1041a]
   14000d6cc:	rex.RB (bad) 
   14000d6ce:	mov    DWORD PTR [rdx+0x4d09a685],ecx
   14000d6d4:	(bad)  
   14000d6d6:	xchg   edx,eax
   14000d6d7:	mov    es,esp
   14000d6d9:	jbe    0x14000d69b
   14000d6db:	(bad)  
   14000d6dd:	or     BYTE PTR [rcx+0x6c],ch
   14000d6e0:	add    BYTE PTR [rax-0x2c],ah
   14000d6e3:	movabs al,fs:0x9ab9750324cee2aa
   14000d6ed:	(bad)  
   14000d6ee:	add    al,0xeb
   14000d6f0:	vpaddw ymm8,ymm10,YMMWORD PTR [rip+0xeff9228]        # 0x14f006921
   14000d6f9:	retf   0x4818
   14000d6fc:	sub    al,0x8
   14000d6fe:	imul   esi,DWORD PTR [rsi+0x50],0xe69179d7
   14000d705:	jmp    0x1507c7581
   14000d70a:	(bad)  
   14000d70b:	pop    rcx
   14000d70c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d70d:	sub    DWORD PTR [rbp+0x76],0x2a47904a
   14000d714:	outs   dx,BYTE PTR ds:[rsi]
   14000d715:	adc    ch,BYTE PTR [rdi]
   14000d717:	(bad)  
   14000d718:	rex.WB or rax,0x7b692841
   14000d71e:	shl    DWORD PTR [rax+0x17],0xa6
   14000d722:	rol    DWORD PTR [rcx],1
   14000d724:	mov    esi,ebx
   14000d726:	clc    
   14000d727:	(bad)  
   14000d728:	test   eax,0x382f4e14
   14000d72d:	(bad)  
   14000d72e:	in     eax,0xb6
   14000d730:	xchg   ebp,eax
   14000d731:	xchg   esp,eax
   14000d732:	xchg   esp,eax
   14000d733:	rex.WX push rbx
   14000d735:	int3   
   14000d736:	int3   
   14000d737:	(bad)  
   14000d738:	movabs ds:0x135ad07e09219f8e,eax
   14000d741:	(bad)  
   14000d742:	add    DWORD PTR [rsi-0x45],ebp
   14000d745:	rex.RB jne 0x14000d7b7
   14000d748:	rex.WXB fstp TBYTE PTR [r11-0x44]
   14000d74d:	js     0x14000d738
   14000d74f:	rex.X or al,0xe
   14000d752:	(bad)  
   14000d753:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d754:	nop
   14000d755:	adc    al,0x73
   14000d757:	(bad)  
   14000d758:	jae    0x14000d70d
   14000d75a:	shr    DWORD PTR [rsp+rbp*1],cl
   14000d75d:	int3   
   14000d75e:	xor    DWORD PTR [rbx],esi
   14000d760:	cmp    eax,0xa652a543
   14000d765:	push   rsp
   14000d766:	sub    dl,BYTE PTR [rcx+0x28]
   14000d769:	adc    al,0x99
   14000d76b:	(bad)  
   14000d76c:	xchg   edi,eax
   14000d76d:	enter  0xcecf,0x62
   14000d771:	sbb    DWORD PTR [rbx],ecx
   14000d773:	test   BYTE PTR [rdx+0x72],dl
   14000d776:	jrcxz  0x14000d73e
   14000d778:	rex.RX in al,0xc5
   14000d77b:	or     edx,ebx
   14000d77d:	mov    eax,0x628516ed
   14000d782:	or     DWORD PTR [rbp+0x3b492dea],ebx
   14000d788:	xor    eax,DWORD PTR [rax]
   14000d78a:	add    BYTE PTR [rax],ah
   14000d78c:	add    BYTE PTR [rcx+0x44],cl
   14000d78f:	push   r12
   14000d791:	repnz std 
   14000d793:	icebp  
   14000d794:	(bad)  
   14000d795:	jmp    0xd0033e92
   14000d79a:	shl    BYTE PTR [rbx-0x7d],cl
   14000d79d:	repnz mov DWORD PTR [rdi],ecx
   14000d7a0:	or     DWORD PTR [rbp-0x773ffff3],ecx
   14000d7a6:	cmp    eax,DWORD PTR [rbx]
   14000d7a8:	(bad)  [rcx-0x2cdadf9c]
   14000d7ae:	loopne 0x14000d74f
   14000d7b0:	ins    BYTE PTR es:[rdi],dx
   14000d7b1:	stos   BYTE PTR es:[rdi],al
   14000d7b2:	outs   dx,DWORD PTR ds:[rsi]
   14000d7b3:	outs   dx,BYTE PTR ds:[esi]
   14000d7b5:	or     eax,0xc1754436
   14000d7ba:	(bad)  
   14000d7bb:	push   rax
   14000d7bc:	test   eax,0x43e5de21
   14000d7c1:	or     BYTE PTR [rsi],0x7d
   14000d7c4:	xchg   esp,eax
   14000d7c5:	or     al,0x22
   14000d7c7:	sti    
   14000d7c8:	sub    BYTE PTR [rcx-0x7d],0x61
   14000d7cc:	(bad)  
   14000d7cd:	sub    esi,DWORD PTR [rbp-0x59]
   14000d7d0:	jne    0x14000d781
   14000d7d2:	imul   ebp,DWORD PTR [rbx],0x7d
   14000d7d5:	xchg   esi,eax
   14000d7d6:	call   0x14855b23f
   14000d7db:	sub    DWORD PTR [rbp+0x5b],0x99e776d8
   14000d7e2:	cmp    ebp,DWORD PTR [rdx]
   14000d7e4:	test   edx,ecx
   14000d7e6:	fld    DWORD PTR fs:[rip+0xffffffffc99ba534]        # 0x1099c7d21
   14000d7ed:	mov    dl,0x8b
   14000d7ef:	retf   0x2796
   14000d7f2:	xchg   al,cl
   14000d7f4:	je     0x14000d7bd
   14000d7f6:	sahf   
   14000d7f7:	fs fwait
   14000d7f9:	mov    bl,0x98
   14000d7fb:	mov    edx,edx
   14000d7fd:	jp     0x14000d806
   14000d7ff:	cmp    bl,dh
   14000d801:	mov    cl,0x38
   14000d803:	ficomp DWORD PTR [rsi+0x38]
   14000d806:	mov    dl,0x41
   14000d808:	(bad)  
   14000d809:	(bad)  
   14000d80a:	mov    DWORD PTR [rdx-0x4f],esp
   14000d80d:	int3   
   14000d80e:	(bad)  
   14000d80f:	hlt    
   14000d810:	pop    rsp
   14000d811:	add    al,0x1a
   14000d813:	mov    cl,0xe1
   14000d815:	rex.WRX
   14000d816:	gs and al,0x87
   14000d819:	(bad)  
   14000d81b:	(bad)  
   14000d81c:	push   rdi
   14000d81d:	div    dh
   14000d81f:	js     0x14000d80a
   14000d821:	retf   0xbc65
   14000d824:	jbe    0x14000d843
   14000d826:	sbb    eax,0xa686587a
   14000d82b:	pop    rsp
   14000d82c:	enter  0x30b3,0x3f
   14000d830:	ret    
   14000d831:	ret    0x12c2
   14000d834:	in     eax,0x72
   14000d836:	cdq    
   14000d837:	and    BYTE PTR [rax],cl
   14000d839:	test   eax,0x5986ad6
   14000d83e:	adc    edx,DWORD PTR [rbx+0x34]
   14000d841:	and    al,BYTE PTR [rbx+0x64]
   14000d844:	cld    
   14000d845:	mov    esi,0x33a1435d
   14000d84a:	cmp    al,0xe
   14000d84c:	sbb    rbp,rdx
   14000d84f:	addr32 enter 0x96fe,0x87
   14000d854:	xchg   edi,eax
   14000d855:	std    
   14000d856:	(bad)  
   14000d857:	or     al,0x0
   14000d859:	rex.RX
   14000d85a:	rex.WB (bad) 
   14000d85c:	mov    edx,0x499ddaf0
   14000d861:	(bad)  
   14000d862:	fisubr DWORD PTR [rbx+0x5ab162b7]
   14000d868:	ja     0x14000d817
   14000d86a:	pushf  
   14000d86b:	mov    dh,0x65
   14000d86d:	(bad)  
   14000d86e:	(bad)  
   14000d86f:	stos   DWORD PTR es:[rdi],eax
   14000d870:	imul   esp,DWORD PTR [rdi],0x6af06f95
   14000d876:	fisttp QWORD PTR [rbp-0x47e2e5f3]
   14000d87c:	or     bl,dl
   14000d87e:	rex.R mov bpl,0xf7
   14000d881:	push   rax
   14000d882:	jle    0x14000d88f
   14000d884:	add    ebx,DWORD PTR [rip+0x5002c2ad]        # 0x190039b37
   14000d88a:	add    DWORD PTR [rdx-0x37],ebx
   14000d88d:	enter  0x887d,0x1
   14000d891:	xchg   BYTE PTR [rip+0xffffffffe5610e66],al        # 0x12561e6fd
   14000d897:	rcl    DWORD PTR [rsi+0x3e],1
   14000d89a:	cli    
   14000d89b:	ins    BYTE PTR es:[rdi],dx
   14000d89c:	cmp    cl,BYTE PTR [rdx+rcx*8]
   14000d89f:	sub    al,0xca
   14000d8a1:	fisub  WORD PTR [rsi]
   14000d8a3:	lea    edx,[rdi+0x2e9679ef]
   14000d8a9:	(bad)  
   14000d8aa:	(bad)
   14000d8ad:	and    cl,BYTE PTR [rax-0x74]
   14000d8b0:	xchg   ecx,eax
   14000d8b1:	pop    rsi
   14000d8b2:	cwde   
   14000d8b3:	data16 and BYTE PTR [rdx],cl
   14000d8b6:	and    dh,BYTE PTR [rax-0x18]
   14000d8b9:	or     edi,DWORD PTR [rsi+0x32]
   14000d8bc:	or     al,0x6c
   14000d8be:	rol    DWORD PTR [rax],cl
   14000d8c0:	(bad)  
   14000d8c1:	(bad)  
   14000d8c2:	std    
   14000d8c3:	rex.R sub al,0xa6
   14000d8c6:	push   rsp
   14000d8c7:	(bad)  
   14000d8c8:	sbb    al,0x54
   14000d8ca:	out    0x73,eax
   14000d8cc:	(bad)  
   14000d8cd:	sbb    al,0xa6
   14000d8cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d8d0:	out    0x50,eax
   14000d8d2:	cmp    cl,dl
   14000d8d4:	and    cl,BYTE PTR [rsi+rbp*4+0xd]
   14000d8d8:	add    ebx,DWORD PTR [rdi+0x6d4ea366]
   14000d8de:	jg     0x14000d867
   14000d8e0:	repz sbb edi,DWORD PTR [rbx-0x4c]
   14000d8e4:	(bad)  
   14000d8e5:	jmp    0x14000d86b
   14000d8e7:	mov    esi,0x625cb94b
   14000d8ec:	(bad)  
   14000d8ed:	mov    ecx,0xa55954c2
   14000d8f2:	outs   dx,DWORD PTR ds:[rsi]
   14000d8f3:	xor    al,0x30
   14000d8f5:	scas   eax,DWORD PTR es:[rdi]
   14000d8f6:	and    dh,BYTE PTR [rbx]
   14000d8f8:	test   BYTE PTR [rbx+0x23],0x2b
   14000d8fc:	movaps XMMWORD PTR [rdx],xmm0
   14000d8ff:	mov    WORD PTR [rip+0xffffffffc955bc00],ss        # 0x109569505
   14000d905:	rex pop rdx
   14000d907:	ret    
   14000d908:	loop   0x14000d97e
   14000d90a:	add    eax,0x18483315
   14000d90f:	jmp    0x14000d8ed
   14000d911:	jle    0x14000d933
   14000d913:	imul   edi,DWORD PTR [rbx+0x3e],0xd0b68ca1
   14000d91a:	rex.WX stos BYTE PTR es:[rdi],al
   14000d91c:	(bad)  
   14000d91d:	fmul   DWORD PTR [rcx+0x768cda55]
   14000d923:	lods   al,BYTE PTR ds:[rsi]
   14000d924:	adc    DWORD PTR [rcx+0x5d],ecx
   14000d927:	cmp    al,0x88
   14000d929:	cwde   
   14000d92a:	mov    edx,0x5c0e87bd
   14000d92f:	repnz data16 and BYTE PTR [rbx+0x28],0xe6
   14000d935:	out    0x67,al
   14000d937:	mov    cl,0xec
   14000d939:	adc    bh,BYTE PTR [rcx]
   14000d93b:	(bad)  
   14000d93c:	movabs eax,ds:0xd713a5659632e5c
   14000d945:	ret    
   14000d946:	mov    BYTE PTR [rax+0x3cf10c22],bl
   14000d94c:	(bad)  
   14000d94d:	data16 mov bl,0x49
   14000d950:	mov    ch,0x5a
   14000d952:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d953:	push   rsi
   14000d954:	mov    ebx,0xe2e5b34e
   14000d959:	imul   ecx,DWORD PTR [rbx],0xffffffe1
   14000d95c:	xchg   esp,eax
   14000d95d:	mov    cl,0xa
   14000d95f:	rcr    eax,cl
   14000d961:	stc    
   14000d962:	rex.WX
   14000d963:	fs clc 
   14000d965:	sbb    esi,eax
   14000d967:	cld    
   14000d968:	jo     0x14000d9aa
   14000d96a:	push   rax
   14000d96b:	rex.WR out 0xb0,al
   14000d96e:	adc    BYTE PTR [rdx],ah
   14000d970:	or     bl,BYTE PTR [rdx+rbp*8-0x56]
   14000d974:	mov    ch,0x1f
   14000d976:	rex.WB cmp bl,r9b
   14000d979:	rex.WRB cmp BYTE PTR [r10],r10b
   14000d97c:	leave  
   14000d97d:	imul   edx,DWORD PTR [rip+0xfffffffff6a426c5],0x30701e86        # 0x136a5004d
   14000d988:	rex.WRB or al,0xcb
   14000d98b:	and    al,0xab
   14000d98d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d98e:	(bad)  
   14000d98f:	(bad)  
   14000d990:	jns    0x14000d9fc
   14000d992:	xchg   esp,eax
   14000d993:	mov    edi,?
   14000d995:	and    eax,0x484029d7
   14000d99a:	mov    al,ch
   14000d99c:	or     dh,BYTE PTR [rbx+0x69244bb3]
   14000d9a2:	int3   
   14000d9a3:	push   0x6806184d
   14000d9a8:	add    al,0xb9
   14000d9aa:	jl     0x14000d96a
   14000d9ac:	repz (bad) 
   14000d9ae:	add    edi,DWORD PTR [rax]
   14000d9b0:	cmp    ebx,ebp
   14000d9b2:	xchg   edx,eax
   14000d9b3:	sbb    eax,0xf3d9a994
   14000d9b8:	loope  0x14000da0a
   14000d9ba:	rcr    DWORD PTR [rax+0x1],1
   14000d9bd:	rcr    BYTE PTR [rbx-0x67],0xc
   14000d9c1:	xchg   esp,eax
   14000d9c2:	fst    st(7)
   14000d9c4:	iret   
   14000d9c5:	ss int 0x28
   14000d9c8:	clc    
   14000d9c9:	(bad)  
   14000d9ca:	push   rdx
   14000d9cb:	rex.WXB movabs r9,0xc0bc4a408c653ad2
   14000d9d5:	rex.WXB push r15
   14000d9d7:	(bad)  
   14000d9d8:	xlat   BYTE PTR fs:[rbx]
   14000d9da:	sahf   
   14000d9db:	pop    rsp
   14000d9dc:	mov    al,0x8f
   14000d9de:	movabs ds:0x59942f4c4a66165d,eax
   14000d9e7:	pop    rsp
   14000d9e8:	pop    rsp
   14000d9e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d9ea:	pop    rsp
   14000d9eb:	cs xchg ebx,eax
   14000d9ed:	retf   
   14000d9ee:	in     eax,0x70
   14000d9f0:	sbb    al,0x7
   14000d9f2:	xor    edx,esi
   14000d9f4:	mov    edi,0xb0c020fd
   14000d9f9:	sub    al,0x64
   14000d9fb:	sbb    BYTE PTR [rdx+0x189dd6],al
   14000da01:	and    edx,edx
   14000da03:	popf   
   14000da04:	outs   dx,BYTE PTR ds:[rsi]
   14000da05:	(bad)  
   14000da07:	ss mov ebx,0xedecbbbb
   14000da0d:	in     eax,dx
   14000da0e:	mov    cl,0xb5
   14000da10:	mov    ebp,0x375bd4b
   14000da15:	mov    bh,0xb9
   14000da17:	lea    ebx,[rbp+0x59]
   14000da1a:	ret    0xbb0
   14000da1d:	push   rcx
   14000da1e:	(bad)  
   14000da1f:	rex.WRX fistp WORD PTR [rbx-0x74]
   14000da23:	data16 mov ah,ch
   14000da26:	stos   BYTE PTR es:[rdi],al
   14000da27:	pop    rbp
   14000da28:	rcl    BYTE PTR [rbx],1
   14000da2a:	clc    
   14000da2b:	ficom  DWORD PTR fs:[rcx+0x7a]
   14000da2f:	jb     0x14000da9b
   14000da31:	jl     0x14000da7e
   14000da33:	add    bl,BYTE PTR [rdi+0x7ef9b932]
   14000da39:	adc    dl,dl
   14000da3b:	mov    bl,BYTE PTR [rbp-0x68]
   14000da3e:	jmp    0x1a0c197b8
   14000da43:	sbb    BYTE PTR [rax-0x54f7a5a],bl
   14000da49:	repz sub DWORD PTR [rdx],edx
   14000da4c:	ret    
   14000da4d:	movsxd edx,DWORD PTR [rdi]
   14000da4f:	cmp    BYTE PTR [rax-0x2cd39f2d],ah
   14000da55:	mov    dl,0x32
   14000da57:	jp     0x14000da27
   14000da59:	loopne 0x14000da14
   14000da5b:	xchg   ecx,eax
   14000da5c:	sbb    al,BYTE PTR [rbx+rdi*8]
   14000da5f:	clc    
   14000da60:	pop    rdi
   14000da61:	sete   dh
   14000da64:	(bad)  
   14000da65:	or     ecx,DWORD PTR [rbp-0x6573fff3]
   14000da6b:	or     al,0x74
   14000da6d:	(bad)  
   14000da6e:	mov    ch,0x6b
   14000da70:	out    dx,eax
   14000da71:	iret   
   14000da72:	fld    QWORD PTR [rcx+0x4b58a064]
   14000da78:	out    dx,eax
   14000da79:	sbb    al,0xd3
   14000da7b:	cmp    cl,BYTE PTR [rdx-0x5b3330bf]
   14000da81:	fs (bad) 
   14000da83:	shl    BYTE PTR [rdx],0xa4
   14000da86:	sub    esp,DWORD PTR [rdi-0x48bd82f6]
   14000da8c:	xchg   cl,ch
   14000da8e:	out    dx,eax
   14000da8f:	mov    bl,0xb2
   14000da91:	cmp    bl,al
   14000da93:	in     al,dx
   14000da94:	int3   
   14000da95:	xor    cl,bl
   14000da97:	retf   
   14000da98:	retf   
   14000da99:	jno    0x14000dad9
   14000da9b:	mov    ebp,0x789a698d
   14000daa0:	sahf   
   14000daa1:	xchg   ebx,ebp
   14000daa3:	jns    0x14000dacd
   14000daa5:	retf   
   14000daa6:	movabs ds:0xad510379bb536eda,al
   14000daaf:	adc    eax,DWORD PTR [rsi-0x5c68d5ff]
   14000dab5:	sbb    BYTE PTR gs:[rax+0xe38e14a],bh
   14000dabc:	mov    gs,WORD PTR [rcx+0x52]
   14000dabf:	leave  
   14000dac0:	out    0x29,eax
   14000dac2:	cmp    DWORD PTR [rsi],ecx
   14000dac4:	xor    esi,DWORD PTR [rbx]
   14000dac6:	xor    ecx,esp
   14000dac8:	iret   
   14000dac9:	iret   
   14000daca:	jae    0x14000dab6
   14000dacc:	push   rsp
   14000dacd:	movabs ds:0xae572b9b7b7b60d1,rax
   14000dad7:	shl    BYTE PTR [rax+0x25],1
   14000dada:	rex.RX jno 0x14000da5e
   14000dadd:	ret    0xb1dc
   14000dae0:	xchg   ecx,eax
   14000dae1:	fsub   QWORD PTR [rax+0x33e87659]
   14000dae7:	xor    dh,dh
   14000dae9:	jp     0x14000db14
   14000daeb:	adc    dl,BYTE PTR [rbp-0x14a59bbe]
   14000daf1:	pop    rsi
   14000daf2:	xchg   ebp,eax
   14000daf3:	and    bh,BYTE PTR [rsi-0x9]
   14000daf6:	js     0x14000db3d
   14000daf8:	rex.WRXB test QWORD PTR [r9-0x6c],0xffffffff94a4c491
   14000db00:	rex.X (bad) 
   14000db02:	pcmpgtd mm4,QWORD PTR [rsi+0x54]
   14000db06:	or     bl,bl
   14000db08:	rex.WX movabs ds:0x3cf4381060702322,al
   14000db12:	addr32 out dx,eax
   14000db14:	mov    dh,0x6b
   14000db16:	mov    esi,edi
   14000db18:	lahf   
   14000db19:	jp     0x14000db16
   14000db1b:	jne    0x14000daec
   14000db1d:	fiadd  WORD PTR [rax-0x6f0ba13d]
   14000db23:	rcr    al,1
   14000db25:	add    al,al
   14000db27:	test   al,0xc9
   14000db29:	rex jmp rbp
   14000db2c:	jg     0x14000db29
   14000db2e:	jg     0x14000daee
   14000db30:	inc    esp
   14000db32:	fxam   
   14000db34:	(bad)  
   14000db35:	xchg   edi,eax
   14000db36:	or     al,0x4
   14000db38:	pop    rbp
   14000db39:	jp     0x14000dba0
   14000db3b:	jp     0x14000db45
   14000db3d:	adc    bl,bl
   14000db3f:	pop    rbp
   14000db40:	out    0x98,eax
   14000db42:	(bad)  
   14000db43:	rex.WR push rcx
   14000db45:	in     eax,dx
   14000db46:	(bad)  
   14000db47:	xor    ah,bh
   14000db49:	cmp    eax,0x539a7366
   14000db4e:	ja     0x14000db2d
   14000db50:	(bad)
   14000db53:	adc    al,ch
   14000db55:	(bad)  
   14000db57:	(bad)  [rsi+0x5db04211]
   14000db5d:	stos   DWORD PTR es:[rdi],eax
   14000db5e:	loope  0x14000db4e
   14000db60:	out    dx,eax
   14000db61:	shr    DWORD PTR [rax+0x79bad9d7],cl
   14000db67:	xchg   ebx,eax
   14000db68:	lock loop 0x14000dbe4
   14000db6b:	jb     0x14000db44
   14000db6d:	scas   al,BYTE PTR es:[rdi]
   14000db6e:	and    ebx,DWORD PTR [rbx+0x2d]
   14000db71:	(bad)  
   14000db72:	pop    rdx
   14000db73:	or     eax,0x598fbab3
   14000db78:	lods   eax,DWORD PTR ds:[rsi]
   14000db79:	(bad)  
   14000db7a:	pop    rax
   14000db7b:	add    ah,BYTE PTR [rcx-0x1b]
   14000db7e:	test   al,0x57
   14000db80:	retf   0xb3f8
   14000db83:	jae    0x14000dbe1
   14000db85:	cdq    
   14000db86:	lahf   
   14000db87:	rex.RXB (bad) 
   14000db89:	iret   
   14000db8a:	push   rbx
   14000db8b:	cmp    al,0x76
   14000db8d:	mov    WORD PTR [rcx+0x161655d5],ds
   14000db93:	(bad)  
   14000db94:	cwde   
   14000db95:	sub    DWORD PTR [rbp+0x5dd77338],edx
   14000db9b:	lods   al,BYTE PTR ds:[rsi]
   14000db9c:	scas   al,BYTE PTR es:[rdi]
   14000db9d:	scas   al,BYTE PTR es:[rdi]
   14000db9e:	mov    dl,0xbe
   14000dba0:	mov    esi,0x1adadace
   14000dba5:	fwait
   14000dba6:	scas   eax,DWORD PTR es:[rdi]
   14000dba7:	jg     0x14000dbaa
   14000dba9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dbaa:	mov    dl,0x42
   14000dbac:	(bad)  
   14000dbad:	out    dx,al
   14000dbae:	pop    rax
   14000dbaf:	(bad)  
   14000dbb0:	js     0x14000dc2b
   14000dbb2:	fwait
   14000dbb3:	je     0x14000dc00
   14000dbb5:	test   eax,0xcf606b21
   14000dbba:	or     rax,0x683e8ea9
   14000dbc0:	jg     0x14000db81
   14000dbc2:	mov    esi,0xe6c88a5c
   14000dbc7:	loopne 0x14000db84
   14000dbc9:	add    DWORD PTR [rdx+0x66],edx
   14000dbcc:	retf   0x25a1
   14000dbcf:	sub    dl,BYTE PTR [rbp+0x12]
   14000dbd2:	adc    eax,0x9a926c99
   14000dbd7:	xchg   BYTE PTR [rdi+rsi*2+0x74],cl
   14000dbdb:	cld    
   14000dbdc:	ds jrcxz 0x14000db8a
   14000dbdf:	data16 loopne 0x14000dbd3
   14000dbe2:	in     al,dx
   14000dbe3:	fwait
   14000dbe4:	sbb    eax,0x1b1a46
   14000dbe9:	(bad)  
   14000dbea:	(bad)  
   14000dbeb:	fs and ch,cl
   14000dbee:	sbb    eax,0x312819d8
   14000dbf3:	sbb    ecx,DWORD PTR [rdi]
   14000dbf5:	(bad)  
   14000dbf6:	(bad)  
   14000dbf7:	xor    ch,BYTE PTR [rdx+0x65]
   14000dbfa:	and    ax,0xf775
   14000dbfe:	leave  
   14000dbff:	jmp    0x14000dc1b
   14000dc01:	(bad)  
   14000dc02:	(bad)  
   14000dc03:	cs mov al,0xb2
   14000dc06:	mov    dl,0xc2
   14000dc08:	in     al,dx
   14000dc09:	in     al,dx
   14000dc0a:	sub    al,0xf9
   14000dc0c:	jl     0x14000dc2c
   14000dc0e:	sub    DWORD PTR [rip+0xffffffffd5cbaefb],esp        # 0x115cc8b0f
   14000dc14:	or     edx,DWORD PTR [rdi]
   14000dc16:	push   0xffffffffecebfd7c
   14000dc1b:	pop    rdi
   14000dc1c:	mov    eax,0x17f5f388
   14000dc21:	cdq    
   14000dc22:	mov    ebx,0x58b09379
   14000dc27:	shr    BYTE PTR [rax-0x45],0x94
   14000dc2b:	(bad)  
   14000dc2c:	sub    eax,0x97202984
   14000dc31:	rex.RXB in eax,0x73
   14000dc34:	sub    BYTE PTR [rcx-0x17144837],ch
   14000dc3a:	int    0x9b
   14000dc3c:	push   0xca425f7
   14000dc41:	icebp  
   14000dc42:	add    r10,r15
   14000dc45:	leave  
   14000dc46:	push   rcx
   14000dc47:	pop    rbp
   14000dc48:	cwde   
   14000dc49:	out    0xfa,eax
   14000dc4b:	fnsave [rdi+0x23]
   14000dc4e:	out    dx,al
   14000dc4f:	jg     0x14000dbe1
   14000dc51:	test   ebx,edi
   14000dc53:	out    dx,eax
   14000dc54:	jrcxz  0x14000dc04
   14000dc56:	push   rbx
   14000dc57:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dc58:	cmp    BYTE PTR [rbx-0x9],bh
   14000dc5b:	(bad)  [rsp+rbp*4-0x2d168f54]
   14000dc62:	and    eax,0xa4dc6fae
   14000dc67:	mov    edx,0xf6614fb6
   14000dc6c:	sub    BYTE PTR [rcx-0x686f130e],bh
   14000dc72:	call   0xd2dd10ea
   14000dc77:	je     0x14000dc18
   14000dc79:	(bad)  [rdx]
   14000dc7b:	rcl    edi,cl
   14000dc7d:	(bad)  
   14000dc7e:	(bad)  
   14000dc80:	jnp    0x14000dc49
   14000dc82:	rex.WB jb 0x14000dcdb
   14000dc85:	neg    esi
   14000dc87:	fisttp WORD PTR [rdx-0x63]
   14000dc8a:	ret    
   14000dc8b:	in     al,0xd
   14000dc8d:	mov    bl,0x41
   14000dc8f:	cmp    ebx,DWORD PTR [rbx+0x2ad25693]
   14000dc95:	and    cl,BYTE PTR [rbx]
   14000dc97:	nop
   14000dc98:	shl    BYTE PTR [rdi+riz*2],0x6c
   14000dc9c:	mov    edi,0x5cc82f70
   14000dca1:	mov    edi,0x4d7ec646
   14000dca6:	rex.WRX mov BYTE PTR [rdx],0x83
   14000dcaa:	rex.W mov sil,0xc1
   14000dcad:	movsxd eax,DWORD PTR es:[rdx+rax*1]
   14000dcb1:	leave  
   14000dcb2:	scas   eax,DWORD PTR es:[rdi]
   14000dcb3:	mov    cl,0x2d
   14000dcb5:	shl    al,0xeb
   14000dcb8:	sub    edx,DWORD PTR [rax]
   14000dcba:	(bad)  
   14000dcbb:	ins    BYTE PTR es:[rdi],dx
   14000dcbc:	mov    WORD PTR [rax],ss
   14000dcbe:	adc    cl,dl
   14000dcc0:	(bad)  
   14000dcc1:	and    eax,0xb4936aed
   14000dcc6:	cmp    DWORD PTR [rsi+rbx*8+0x9],ecx
   14000dcca:	popf   
   14000dccb:	sub    edi,DWORD PTR [rdi+rsi*8]
   14000dcce:	(bad)
   14000dcd2:	pop    rbp
   14000dcd3:	cmp    eax,0x1b3bb3d3
   14000dcd8:	(bad)  
   14000dcd9:	shl    DWORD PTR [rdi+0x3f],cl
   14000dcdc:	mov    ebp,0x5d5d53d5
   14000dce1:	test   eax,0x739efceb
   14000dce6:	jle    0x14000dd0f
   14000dce8:	cmp    al,0x42
   14000dcea:	jb     0x14000dc86
   14000dcec:	jne    0x14000dce8
   14000dcee:	out    dx,al
   14000dcef:	xchg   DWORD PTR [rax],edx
   14000dcf1:	(bad)  
   14000dcf2:	leave  
   14000dcf3:	sbb    rax,0xffffffff8d0a5db1
   14000dcf9:	push   0xffffffffc2865c04
   14000dcfe:	ss sti 
   14000dd00:	fisttp QWORD PTR [rcx+0x3f]
   14000dd03:	popf   
   14000dd04:	je     0x14000dd6f
   14000dd06:	ret    
   14000dd07:	rex scas eax,DWORD PTR es:[rdi]
   14000dd09:	xchg   esp,eax
   14000dd0a:	stos   DWORD PTR es:[rdi],eax
   14000dd0b:	push   rcx
   14000dd0c:	or     al,bh
   14000dd0e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dd0f:	mov    al,0xc9
   14000dd11:	(bad)  
   14000dd12:	sub    dl,bh
   14000dd14:	movabs al,ds:0x12b0ad87e392f3d8
   14000dd1d:	in     eax,dx
   14000dd1e:	xor    BYTE PTR [rax],dh
   14000dd20:	pop    rdi
   14000dd21:	sub    dl,dl
   14000dd23:	rex.WX add al,dl
   14000dd26:	pop    rsp
   14000dd27:	xor    DWORD PTR [rax-0x4e],edx
   14000dd2a:	movsxd ebx,esi
   14000dd2c:	data16 (bad) 
   14000dd2e:	push   0xfffffffffffffff4
   14000dd30:	int3   
   14000dd31:	xlat   BYTE PTR ds:[rbx]
   14000dd32:	cmc    
   14000dd33:	pushf  
   14000dd34:	sub    BYTE PTR [rbx+rdx*4],cl
   14000dd37:	(bad)  
   14000dd38:	call   0xcab63be9
   14000dd3d:	mov    r10d,DWORD PTR [r14]
   14000dd40:	xchg   ecx,eax
   14000dd41:	rex.W and al,0x10
   14000dd44:	rex.X push rax
   14000dd46:	sub    BYTE PTR [rsi],dl
   14000dd48:	jns    0x14000dd40
   14000dd4a:	rol    BYTE PTR [rcx],0x46
   14000dd4d:	jg     0x14000dd40
   14000dd4f:	or     edi,DWORD PTR [rax-0x1e]
   14000dd52:	or     DWORD PTR [rdx+0x7],esp
   14000dd55:	(bad)  
   14000dd56:	mov    al,0x62
   14000dd58:	in     al,dx
   14000dd59:	adc    al,0x2c
   14000dd5b:	out    dx,al
   14000dd5c:	rex.XB
   14000dd5d:	rex.WX and al,0x89
   14000dd60:	pop    rdx
   14000dd61:	es and al,0x12
   14000dd64:	nop
   14000dd65:	(bad)  
   14000dd66:	fsub   DWORD PTR [rbx-0x14889a58]
   14000dd6c:	xchg   ecx,eax
   14000dd6d:	test   eax,eax
   14000dd6f:	mov    ch,BYTE PTR [rcx]
   14000dd71:	rex.W icebp 
   14000dd73:	add    al,0x16
   14000dd75:	jbe    0x14000dd2e
   14000dd77:	pop    rsi
   14000dd78:	(bad)
   14000dd7b:	pop    rdx
   14000dd7c:	es test eax,0x13ec9952
   14000dd82:	rex.WRXB xor BYTE PTR [r13+0x2e4e59f3],r14b
   14000dd89:	pop    rcx
   14000dd8a:	ret    0xdc9
   14000dd8d:	sbb    ebp,eax
   14000dd8f:	fidivr WORD PTR [rcx+rbx*4-0x4ca8546b]
   14000dd96:	gs retf 
   14000dd98:	(bad)  
   14000dd99:	cli    
   14000dd9a:	sti    
   14000dd9b:	sti    
   14000dd9c:	fnstcw WORD PTR [rbx-0x78d8d089]
   14000dda2:	lahf   
   14000dda3:	(bad)  
   14000dda4:	rcl    BYTE PTR [rdi+0x422ecb12],cl
   14000ddaa:	xchg   edx,eax
   14000ddab:	sbb    edx,DWORD PTR [rbx]
   14000ddad:	test   DWORD PTR [rcx+0x356c6dcb],eax
   14000ddb3:	int3   
   14000ddb4:	movabs al,ds:0x200fefb4941aa241
   14000ddbd:	nop
   14000ddbe:	fsubr  QWORD PTR [rcx-0x7e]
   14000ddc1:	mov    esp,0x8ff176b5
   14000ddc6:	lock ins DWORD PTR es:[rdi],dx
   14000ddc8:	loope  0x14000ddf0
   14000ddca:	pop    rdx
   14000ddcb:	or     esp,DWORD PTR [rcx+rbx*2]
   14000ddce:	rex.X xchg ebp,eax
   14000ddd0:	push   rsp
   14000ddd1:	and    bl,BYTE PTR [rdx+0x851d5ea]
   14000ddd7:	in     al,dx
   14000ddd8:	mov    dh,0xe6
   14000ddda:	xlat   BYTE PTR cs:[rbx]
   14000dddc:	(bad)  
   14000dddd:	cwde   
   14000ddde:	es add eax,0x72b42ec3
   14000dde4:	pop    rbp
   14000dde5:	mov    dh,BYTE PTR [rip+0xffffffffe2bdbb4b]        # 0x122be9936
   14000ddeb:	sub    eax,0xfe645bf0
   14000ddf0:	jae    0x14000dd8d
   14000ddf2:	stc    
   14000ddf3:	cld    
   14000ddf4:	pop    rbx
   14000ddf5:	pop    rcx
   14000ddf6:	pop    rdx
   14000ddf7:	(bad)  
   14000ddf8:	add    BYTE PTR [rdx-0x312df9d1],bl
   14000ddfe:	mov    eax,0x6b0dc818
   14000de03:	xor    eax,0x17853d1a
   14000de08:	js     0x14000de20
   14000de0a:	mov    ah,bh
   14000de0c:	adc    ch,bl
   14000de0e:	rol    QWORD PTR [r14-0x1217148b],0xed
   14000de16:	and    eax,0x2c528d1a
   14000de1b:	xchg   ebp,eax
   14000de1c:	sbb    BYTE PTR [rcx+rsi*2],bh
   14000de1f:	(bad)  
   14000de20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000de21:	(bad)  
   14000de22:	jg     0x14000de40
   14000de24:	jmp    0x1bd271d50
   14000de29:	hlt    
   14000de2a:	sub    BYTE PTR [rip+0x1da85393],bh        # 0x15da931c3
   14000de30:	sbb    eax,0x93b972b0
   14000de35:	mov    ebx,0x2ac9216f
   14000de3a:	rex.X xchg edx,eax
   14000de3c:	in     al,dx
   14000de3d:	xchg   BYTE PTR [rbp+0x35e5592e],bl
   14000de43:	add    DWORD PTR [rcx-0x621f05d],esi
   14000de49:	cmp    BYTE PTR [rcx],dh
   14000de4b:	jns    0x14000dea6
   14000de4d:	(bad)  
   14000de4e:	rex.W and BYTE PTR [rcx+0x79e8162a],dl
   14000de55:	loop   0x14000de60
   14000de57:	rex.RX lahf 
   14000de59:	js     0x14000dddf
   14000de5b:	jge    0x14000ddf8
   14000de5d:	cs out 0xc0,al
   14000de60:	mov    ch,0xd7
   14000de62:	mov    cl,0x71
   14000de64:	sti    
   14000de65:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000de66:	sub    al,0xeb
   14000de68:	in     eax,dx
   14000de69:	(bad)  gs:[rsi+0x7e39e98b]
   14000de70:	(bad)  
   14000de71:	popf   
   14000de72:	cmp    esi,DWORD PTR [rdi+0x32]
   14000de75:	cmp    DWORD PTR ds:[rsi+rsi*2-0x7],ecx
   14000de7a:	push   rsi
   14000de7b:	jnp    0x14000de41
   14000de7d:	hlt    
   14000de7e:	cdq    
   14000de7f:	rcr    BYTE PTR [rsi+0x2e],cl
   14000de82:	rex.B (bad) 
   14000de84:	lods   eax,DWORD PTR ds:[rsi]
   14000de85:	scas   eax,DWORD PTR es:[rdi]
   14000de86:	pop    rsi
   14000de87:	pop    rbx
   14000de88:	cmp    al,0x6b
   14000de8b:	sar    DWORD PTR [rbx-0x71f55ddb],0x2
   14000de92:	mov    ebx,0xc24fd262
   14000de97:	rex.WB div BYTE PTR [r13-0x48]
   14000de9b:	sub    edi,ebp
   14000de9d:	or     ch,al
   14000de9f:	stos   BYTE PTR es:[rdi],al
   14000dea0:	jle    0x14000de97
   14000dea2:	(bad)  
   14000dea3:	(bad)  
   14000dea4:	add    al,0x31
   14000dea6:	xor    ebp,ebx
   14000dea8:	scas   eax,DWORD PTR es:[rdi]
   14000dea9:	stc    
   14000deaa:	outs   dx,BYTE PTR ds:[rsi]
   14000deab:	mov    ebp,0xdd54b097
   14000deb0:	and    edi,0x82390452
   14000deb6:	rex.RX
   14000deb7:	rol    BYTE PTR cs:[rdx-0x4b],0x1
   14000debc:	pop    rdx
   14000debd:	(bad)  
   14000debe:	add    BYTE PTR [rdx-0x7065f9d2],bl
   14000dec4:	fistp  WORD PTR [rcx-0x20]
   14000dec7:	xchg   esp,eax
   14000dec8:	mov    dl,0x86
   14000deca:	sti    
   14000decb:	fwait
   14000decc:	sahf   
   14000decd:	pop    rcx
   14000dece:	pop    rcx
   14000decf:	sbb    BYTE PTR [rdx+0x7eb1613b],ah
   14000ded5:	in     eax,dx
   14000ded6:	sbb    cl,BYTE PTR [rdi-0x7]
   14000ded9:	(bad)  
   14000deda:	es es js 0x14000df5c
   14000dede:	xlat   BYTE PTR ds:[rbx]
   14000dedf:	cs sahf 
   14000dee1:	(bad)  
   14000dee2:	jmp    0x12f7e3836
   14000dee7:	(bad)  
   14000dee8:	rex.W stos BYTE PTR es:[rdi],al
   14000deea:	sub    cl,BYTE PTR [rcx+0x1]
   14000deed:	hlt    
   14000deee:	cmp    DWORD PTR [rcx],esp
   14000def0:	cs ret 
   14000def2:	mov    al,0x95
   14000def4:	ficom  WORD PTR [rbp+0x40]
   14000def7:	jnp    0x14000df13
   14000def9:	pop    rsi
   14000defa:	out    0x6f,eax
   14000defc:	mov    ebx,0xce1bf77
   14000df01:	xchg   esp,eax
   14000df02:	xchg   esi,eax
   14000df03:	xor    edi,DWORD PTR [rcx-0x59]
   14000df06:	or     BYTE PTR [rdi+rax*4-0x56e7d757],bl
   14000df0d:	xor    al,0xa4
   14000df0f:	xor    esi,esp
   14000df11:	jmp    0x12ff86a1c
   14000df16:	addr32 jl 0x14000dee0
   14000df19:	jrcxz  0x14000df07
   14000df1b:	fnstsw WORD PTR [rdx+0x31]
   14000df1e:	sti    
   14000df1f:	jg     0x14000df14
   14000df21:	ja     0x14000dedb
   14000df23:	cld    
   14000df24:	retf   0xe92b
   14000df27:	in     eax,dx
   14000df28:	jmp    0xeeac8a0e
   14000df2d:	(bad)  
   14000df2e:	out    dx,eax
   14000df2f:	fidivr WORD PTR [rbp+0x10ffde1c]
   14000df35:	rex.WX xlat BYTE PTR ds:[rbx]
   14000df37:	add    BYTE PTR [rdx+0x24],cl
   14000df3a:	jmp    0x1835805d4
   14000df3f:	xchg   edi,eax
   14000df40:	jbe    0x14000df37
   14000df42:	movabs eax,ds:0xfe10ed85e058492a
   14000df4b:	(bad)  
   14000df4c:	pop    rdi
   14000df4d:	xchg   edx,eax
   14000df4e:	out    dx,eax
   14000df4f:	sbb    al,0x70
   14000df51:	(bad)  
   14000df52:	(bad)  
   14000df53:	pop    rdx
   14000df54:	or     esi,DWORD PTR [rip+0xffffffffe430cf7f]        # 0x12431aed9
   14000df5a:	mov    edx,0x67f0d090
   14000df5f:	adc    cl,BYTE PTR [rsi+0x35c35073]
   14000df65:	cmp    bh,bl
   14000df67:	test   eax,0x9d500a62
   14000df6c:	add    al,0xc4
   14000df6e:	(bad)  
   14000df6f:	cmp    DWORD PTR [rax+riz*2-0x27],edi
   14000df73:	(bad)  
   14000df74:	rex.WRXB pop r10
   14000df76:	(bad)  
   14000df77:	add    dh,cl
   14000df79:	in     eax,0xcc
   14000df7b:	add    al,cl
   14000df7e:	call   0x101b06467
   14000df83:	xchg   edx,ebp
   14000df85:	sub    DWORD PTR [rdx-0x7a579ec3],ecx
   14000df8b:	pop    rcx
   14000df8c:	(bad)  
   14000df8d:	and    BYTE PTR [rcx-0x2e8aa6ec],ch
   14000df93:	pop    rdx
   14000df94:	jp     0x14000e010
   14000df96:	jp     0x14000df20
   14000df98:	rex.RX movabs ds:0x9ff9ff23c53a9f0c,eax
   14000dfa2:	rex.WR cld 
   14000dfa4:	out    0x4f,eax
   14000dfa6:	fdiv   DWORD PTR [rsi+0x6cb10f7b]
   14000dfac:	(bad)  
   14000dfad:	mov    gs,ebx
   14000dfaf:	rex.WXB xor al,r10b
   14000dfb2:	xor    BYTE PTR [rax+0x15],dh
   14000dfb5:	rex.RXB adc BYTE PTR [r15+0x43796fbb],0xb0
   14000dfbd:	lods   eax,DWORD PTR ds:[rsi]
   14000dfbe:	rex.B out dx,al
   14000dfc0:	rex.WR
   14000dfc1:	ds xchg esi,eax
   14000dfc3:	fs (bad) 
   14000dfc5:	in     al,dx
   14000dfc6:	jo     0x14000dff5
   14000dfc8:	add    ecx,DWORD PTR [rcx+0x8]
   14000dfcb:	iret   
   14000dfcc:	in     al,dx
   14000dfcd:	add    eax,0x12bea4df
   14000dfd2:	sbb    BYTE PTR [rip+0xffffffffbbbb443d],bh        # 0xfbbc2415
   14000dfd8:	fnstenv [rdx+rsi*8+0x4]
   14000dfdc:	jrcxz  0x14000e03d
   14000dfde:	stc    
   14000dfdf:	adc    cl,BYTE PTR [rdi-0x42f289c3]
   14000dfe5:	mov    edi,0xb35c6bf6
   14000dfea:	in     eax,dx
   14000dfeb:	(bad)  
   14000dfec:	mov    dh,0x6e
   14000dfee:	fisttp QWORD PTR [rdx-0x2f1d10d4]
   14000dff4:	mov    cl,0x7d
   14000dff6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dff7:	xchg   esi,eax
   14000dff8:	ins    BYTE PTR es:[rdi],dx
   14000dff9:	rex mov esi,edi
   14000dffc:	push   rax
   14000dffd:	xor    DWORD PTR [rip+0xffffffffbe49baca],ecx        # 0xfe4a9acd
   14000e003:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e004:	cmp    edi,DWORD PTR [rbp+0xb]
   14000e007:	in     al,dx
   14000e008:	xor    DWORD PTR [rcx-0x6a],ebx
   14000e00b:	popf   
   14000e00c:	leave  
   14000e00d:	rex.WRX cmp al,0x2
   14000e010:	rex.WRX mov cl,0x27
   14000e013:	sub    esi,DWORD PTR [rcx-0x72]
   14000e016:	push   rbp
   14000e017:	fwait
   14000e018:	or     DWORD PTR [rcx+0x6f],ebx
   14000e01b:	sub    eax,0x4e1eb234
   14000e020:	out    0xfe,eax
   14000e022:	xchg   DWORD PTR [rcx-0x3d],ecx
   14000e025:	out    0xaa,al
   14000e027:	ret    0x24f
   14000e02a:	(bad)  
   14000e02b:	jg     0x14000e083
   14000e02d:	mov    bl,0x5c
   14000e02f:	(bad)  
   14000e030:	shl    BYTE PTR [rdx],cl
   14000e032:	add    al,dl
   14000e034:	ins    BYTE PTR es:[rdi],dx
   14000e035:	xor    DWORD PTR [rax-0x3438b0c7],edx
   14000e03b:	and    al,0x53
   14000e03d:	mov    ds,edi
   14000e03f:	imul   edx,DWORD PTR [rax+0x28],0xf9fdaa97
   14000e046:	xchg   ecx,eax
   14000e047:	mov    BYTE PTR [rax+0x26],cl
   14000e04a:	(bad)  
   14000e04c:	sub    esi,edx
   14000e04e:	lods   eax,DWORD PTR ds:[rsi]
   14000e04f:	pop    rdi
   14000e050:	int    0x92
   14000e052:	and    eax,0xe3c7884b
   14000e057:	mov    WORD PTR [rdi+rcx*4-0x3e0340d],cs
   14000e05e:	add    bl,ah
   14000e060:	scas   al,BYTE PTR es:[rdi]
   14000e061:	mov    ebx,0x24e272d8
   14000e066:	jb     0x14000e0df
   14000e068:	push   rdi
   14000e069:	mov    ch,0x4c
   14000e06b:	push   rdi
   14000e06c:	sbb    BYTE PTR [rsi-0x59],bl
   14000e06f:	pop    rdi
   14000e070:	or     edi,DWORD PTR [rbx+0x7a]
   14000e073:	or     eax,DWORD PTR cs:[rcx-0x1eb4269c]
   14000e07a:	(bad)  
   14000e07b:	xlat   BYTE PTR ds:[rbx]
   14000e07c:	imul   esi,edx,0xffffffd8
   14000e07f:	sbb    eax,0x6e484077
   14000e084:	xor    cl,BYTE PTR [rip+0xffffffffe5b14fb8]        # 0x125b23042
   14000e08a:	and    esi,DWORD PTR [rbp+0x90905c]
   14000e090:	adc    DWORD PTR [rcx-0x30],ecx
   14000e093:	cdq    
   14000e094:	iret   
   14000e095:	and    ebp,edi
   14000e097:	cld    
   14000e098:	(bad)  
   14000e099:	xchg   BYTE PTR [rdi+0x46],al
   14000e09c:	mov    ecx,0x64af55ef
   14000e0a1:	repz adc eax,0xeb75b397
   14000e0a7:	push   rsi
   14000e0a8:	test   BYTE PTR [rax],dl
   14000e0aa:	sbb    al,0x39
   14000e0ac:	mov    cl,0x87
   14000e0ae:	rex.WX
   14000e0af:	adc    DWORD PTR fs:[rbx+0x2e],ecx
   14000e0b3:	pop    rdx
   14000e0b4:	rex.WRXB push r12
   14000e0b6:	jne    0x14000e0ff
   14000e0b8:	rex.WRX sti 
   14000e0ba:	cwde   
   14000e0bb:	outs   dx,BYTE PTR ds:[rsi]
   14000e0bc:	sub    DWORD PTR ds:[rsi-0x68],0xffffff94
   14000e0c1:	sub    dl,ch
   14000e0c3:	pushf  
   14000e0c4:	(bad)  
   14000e0c5:	ja     0x14000e049
   14000e0c7:	push   rsp
   14000e0c8:	(bad)  
   14000e0c9:	ins    BYTE PTR es:[rdi],dx
   14000e0ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e0cb:	stc    
   14000e0cc:	lods   al,BYTE PTR ds:[rsi]
   14000e0cd:	(bad)  
   14000e0ce:	test   eax,0x97e13b81
   14000e0d3:	rex.RX add r14d,edx
   14000e0d6:	mov    esp,0xf1404301
   14000e0db:	jmp    0x14000e130
   14000e0dd:	mov    bl,0xdd
   14000e0df:	cmp    al,0x80
   14000e0e1:	test   DWORD PTR [rcx+0x32d00],ecx
   14000e0e7:	int    0x16
   14000e0e9:	add    ecx,DWORD PTR [rbp+0x18bcce55]
   14000e0ef:	rex.W (bad) 
   14000e0f1:	xchg   edi,eax
   14000e0f2:	fadd   QWORD PTR [rsi+0x35]
   14000e0f5:	test   DWORD PTR [rax+0x24],ebx
   14000e0f8:	loop   0x14000e0ec
   14000e0fa:	(bad)  
   14000e0fb:	pop    rax
   14000e0fc:	ret    0x630e
   14000e0ff:	rol    QWORD PTR [r15+0x196abd59],cl
   14000e106:	stos   DWORD PTR es:[rdi],eax
   14000e107:	push   rsi
   14000e108:	lods   eax,DWORD PTR ds:[rsi]
   14000e109:	shl    DWORD PTR [rdx+r9*2],cl
   14000e10d:	in     eax,0x32
   14000e10f:	idiv   esi
   14000e111:	loopne 0x14000e11a
   14000e113:	rex.R push rbp
   14000e116:	mov    ebx,0x461d1eac
   14000e11b:	(bad)  
   14000e11c:	in     eax,dx
   14000e11d:	rex.B cwde 
   14000e11f:	jbe    0x14000e0e7
   14000e121:	pushf  
   14000e122:	and    eax,0xb71f8f2c
   14000e127:	jl     0x14000e18d
   14000e129:	xchg   ebp,eax
   14000e12a:	cmp    esi,edx
   14000e12c:	(bad)  
   14000e12e:	jae    0x14000e19d
   14000e130:	xchg   ebx,eax
   14000e131:	adc    ebx,ebx
   14000e133:	lea    esi,[rsi-0x40]
   14000e136:	rex.B (bad) 
   14000e138:	(bad)  
   14000e139:	cld    
   14000e13a:	xchg   edx,eax
   14000e13b:	std    
   14000e13c:	(bad)  [rdx-0x76]
   14000e13f:	mov    edi,0x120ebaa8
   14000e144:	imul   ah
   14000e146:	pop    rdi
   14000e147:	rex.X
   14000e148:	xor    al,BYTE PTR [rbp-0x69]
   14000e14c:	stos   BYTE PTR es:[rdi],al
   14000e14d:	adc    BYTE PTR [rdi-0x20],bh
   14000e150:	jle    0x14000e148
   14000e152:	popf   
   14000e153:	cmp    al,0x81
   14000e155:	mov    esp,eax
   14000e157:	imul   r10d,DWORD PTR [r15+0x73],0xffffffc9
   14000e15c:	and    eax,0x3c891097
   14000e161:	retf   
   14000e162:	icebp  
   14000e163:	movabs eax,ds:0x6b15e2c7d81d8e71
   14000e16c:	push   0xffffffffffffff94
   14000e16e:	ror    BYTE PTR [rbx],1
   14000e170:	fnstsw WORD PTR [rcx-0x1b]
   14000e173:	xchg   DWORD PTR [rsi+0x6a],esi
   14000e176:	scas   eax,DWORD PTR es:[rdi]
   14000e177:	pop    rbx
   14000e178:	rex.XB movabs al,ds:0x26aade418ae5269b
   14000e182:	cld    
   14000e183:	clc    
   14000e184:	fwait
   14000e185:	cdq    
   14000e186:	mov    eax,0x3b22852e
   14000e18b:	cmp    eax,0x14f3dd12
   14000e190:	(bad)  
   14000e191:	imul   ebp,DWORD PTR [rdx-0xe5b203],0xffffffd6
   14000e198:	jae    0x14000e19b
   14000e19a:	(bad)  
   14000e19b:	neg    DWORD PTR [rsi-0x48]
   14000e19e:	mov    ch,BYTE PTR [rdi+0x35]
   14000e1a1:	(bad)  
   14000e1a3:	ret    0xffd4
   14000e1a6:	(bad)  
   14000e1a7:	add    DWORD PTR [rax],eax
   14000e1a9:	push   0xffffffffc8a06672
   14000e1ae:	cdq    
   14000e1af:	(bad)  
   14000e1b0:	add    edi,DWORD PTR [rcx+0x4]
   14000e1b3:	lahf   
   14000e1b4:	jo     0x14000e1fd
   14000e1b6:	mov    ch,0xaa
   14000e1b8:	repz sub DWORD PTR [rbp-0x393217d9],edx
   14000e1bf:	pop    rax
   14000e1c0:	mov    edx,0xafd7a974
   14000e1c5:	out    dx,al
   14000e1c6:	xchg   DWORD PTR [rdi-0x23],esi
   14000e1c9:	rex.RB in al,dx
   14000e1cb:	(bad)  
   14000e1cd:	(bad)  
   14000e1ce:	in     eax,0xa3
   14000e1d0:	movabs ds:0xb62c7961841eee88,eax
   14000e1d9:	and    al,0xc0
   14000e1db:	xchg   esp,eax
   14000e1dc:	in     al,dx
   14000e1dd:	push   rcx
   14000e1de:	pop    rsi
   14000e1df:	or     BYTE PTR [rcx+0x76481865],al
   14000e1e5:	xchg   BYTE PTR [rdx+0x676b569d],dl
   14000e1eb:	adc    eax,0xbc1a9557
   14000e1f0:	out    dx,eax
   14000e1f1:	cli    
   14000e1f2:	rex.RXB push 0x2cb1181c
   14000e1f8:	retf   
   14000e1f9:	imul   ebp,edx,0x21
   14000e1fc:	sbb    al,0x12
   14000e1fe:	int3   
   14000e1ff:	mov    bl,0x6
   14000e201:	test   BYTE PTR [rip+0x69ae8486],al        # 0x1a9af668d
   14000e207:	add    rax,QWORD PTR [rbx]
   14000e20a:	ins    BYTE PTR es:[rdi],dx
   14000e20b:	cmp    dh,BYTE PTR [rdx-0x70]
   14000e20e:	jge    0x14000e1af
   14000e210:	cli    
   14000e211:	sub    esi,DWORD PTR [rsi-0x43]
   14000e214:	idiv   ebp
   14000e216:	rex.R movabs ds:0x41ed2488dc6e3651,eax
   14000e220:	pushf  
   14000e221:	sbb    al,0x65
   14000e223:	ins    BYTE PTR es:[rdi],dx
   14000e224:	call   0x13a8cbf61
   14000e229:	add    edx,DWORD PTR [rdi+0x2fa35ced]
   14000e22f:	fcmovnb st,st(6)
   14000e231:	rex.WRB fimul DWORD PTR [r9-0x2487e025]
   14000e238:	pop    rcx
   14000e239:	ds (bad) 
   14000e23b:	xor    BYTE PTR [rbx+rdi*1],cl
   14000e23e:	rex.WRB fdivr DWORD PTR [r15]
   14000e241:	(bad)
   14000e244:	retf   
   14000e245:	pop    rsi
   14000e246:	push   rdi
   14000e247:	gs rex.WRB cmc 
   14000e24a:	add    ebx,eax
   14000e24c:	fnstenv [rax-0x40a07be6]
   14000e252:	(bad)  
   14000e253:	test   al,0xa6
   14000e255:	(bad)  
   14000e256:	nop
   14000e257:	xchg   esi,eax
   14000e258:	add    al,BYTE PTR [rax-0x97e759a]
   14000e25e:	cmp    eax,0x8bcce277
   14000e263:	sub    edx,0x2ca879c4
   14000e269:	adc    ecx,ebp
   14000e26b:	cwde   
   14000e26c:	(bad)  
   14000e26d:	cmc    
   14000e26e:	shl    BYTE PTR [rsi],0x3a
   14000e271:	cmp    bh,BYTE PTR [rdx]
   14000e273:	nop
   14000e274:	gs cdq 
   14000e276:	lahf   
   14000e277:	jmp    rdx
   14000e279:	(bad)  
   14000e27a:	call   0xd581e1f6
   14000e27f:	and    esp,DWORD PTR [rbx]
   14000e281:	pop    rax
   14000e282:	popf   
   14000e283:	pop    rcx
   14000e284:	xor    ch,cl
   14000e286:	stos   BYTE PTR es:[rdi],al
   14000e287:	loop   0x14000e303
   14000e289:	fist   WORD PTR [rbp-0x4cecd350]
   14000e28f:	push   rax
   14000e290:	rex.R
   14000e291:	rex.WXB
   14000e292:	addr32 xor ch,dh
   14000e295:	or     ah,ch
   14000e297:	test   eax,0x6cd92229
   14000e29c:	xchg   ebp,eax
   14000e29d:	cld    
   14000e29e:	stos   DWORD PTR es:[rdi],eax
   14000e29f:	(bad)  
   14000e2a0:	(bad)  
   14000e2a1:	imul   ebx,DWORD PTR [rbx+0x15b612f8],0x92e8ad81
   14000e2ab:	and    al,0xd9
   14000e2ad:	(bad)  
   14000e2ae:	add    DWORD PTR [rbp+0x1c30a7d7],0x10c20428
   14000e2b8:	or     cl,cl
   14000e2ba:	rex.X pop rdi
   14000e2bc:	mov    dh,0x92
   14000e2be:	(bad)  
   14000e2bf:	movabs ds:0xcde8f24f9bf81c23,eax
   14000e2c8:	(bad)  
   14000e2c9:	loop   0x14000e2a5
   14000e2cb:	in     eax,dx
   14000e2cc:	fcmovnu st,st(1)
   14000e2ce:	mov    al,0x61
   14000e2d0:	add    edx,DWORD PTR [rbp-0x5ca72c36]
   14000e2d6:	rex.XB adc al,0xf2
   14000e2d9:	imul   edx,DWORD PTR [rdx],0xd5fd74c9
   14000e2df:	(bad)  
   14000e2e0:	gs add edx,esi
   14000e2e3:	add    eax,DWORD PTR [rbx+0x34444924]
   14000e2e9:	xchg   ebp,eax
   14000e2ea:	test   al,0xa6
   14000e2ec:	stc    
   14000e2ed:	and    cl,BYTE PTR [rbx]
   14000e2ef:	outs   dx,BYTE PTR ds:[rsi]
   14000e2f0:	mov    dh,BYTE PTR [rbx+rbx*4+0x2c5063ec]
   14000e2f7:	push   rdi
   14000e2f8:	enter  0xdd15,0x7e
   14000e2fc:	add    eax,0xbf13336e
   14000e301:	cmp    esp,DWORD PTR [rcx]
   14000e303:	jnp    0x14000e32e
   14000e305:	sar    DWORD PTR [rsi-0x55],1
   14000e308:	and    DWORD PTR [rsp+rcx*8-0x4e34d595],ecx
   14000e30f:	movabs eax,ds:0xe000a5a18130b001
   14000e318:	pushf  
   14000e319:	int    0xc
   14000e31b:	and    al,0xea
   14000e31d:	(bad)  
   14000e31e:	and    al,0x49
   14000e320:	add    dl,BYTE PTR [rcx+0x1a]
   14000e323:	movabs ds:0xaaaa1f5f5f4d2baf,eax
   14000e32c:	xor    dh,BYTE PTR [rsi]
   14000e32e:	ss (bad) 
   14000e330:	mov    bl,0x77
   14000e332:	inc    DWORD PTR [rax+0x421e0f4b]
   14000e338:	jno    0x14000e324
   14000e33a:	(bad)  
   14000e33b:	fstp   st(1)
   14000e33d:	mov    eax,0xc87d1b71
   14000e342:	adc    bl,BYTE PTR [rax]
   14000e344:	movs   DWORD PTR es:[rdi],DWORD PTR es:[rsi]
   14000e346:	push   rbx
   14000e347:	jrcxz  0x14000e3bd
   14000e349:	outs   dx,BYTE PTR ds:[rsi]
   14000e34a:	fxch   st(2)
   14000e34c:	repnz sbb ebp,DWORD PTR [rdi-0x5c]
   14000e350:	jrcxz  0x14000e31c
   14000e352:	stos   DWORD PTR es:[rdi],eax
   14000e353:	cmp    eax,edi
   14000e355:	cmc    
   14000e356:	scas   eax,DWORD PTR es:[rdi]
   14000e357:	jno    0x14000e349
   14000e359:	fbld   TBYTE PTR [rdx+rdx*8]
   14000e35d:	fisttp QWORD PTR [rbp-0x3de8cde5]
   14000e363:	rex.X mov dl,0x24
   14000e366:	sub    al,0x2c
   14000e368:	and    al,0xaa
   14000e36a:	mov    esi,0xcdfb357e
   14000e36f:	mov    dl,0x2d
   14000e371:	or     DWORD PTR [rbx+0x4],ecx
   14000e374:	rex (bad) 
   14000e376:	iret   
   14000e377:	pop    rdx
   14000e378:	adc    DWORD PTR [rdx-0x7bf41d35],edx
   14000e37e:	imul   edx,DWORD PTR [rdx-0x16],0x3a7fa4e8
   14000e385:	iret   
   14000e386:	mov    esi,0xfb897d2f
   14000e38b:	fdivp  st(1),st
   14000e38d:	rex.WRX scas al,BYTE PTR es:[rdi]
   14000e38f:	mov    edi,0x6f3672fc
   14000e394:	fmulp  st(4),st
   14000e396:	hlt    
   14000e397:	rex.XB (bad) 
   14000e39a:	push   0xfffffffffffffffc
   14000e39c:	jns    0x14000e3e2
   14000e39e:	(bad)  
   14000e39f:	pop    rbx
   14000e3a0:	sub    rbp,rbp
   14000e3a3:	(bad)  
   14000e3a4:	or     al,0x7e
   14000e3a6:	xor    DWORD PTR [rcx+riz*2],0x29
   14000e3aa:	nop
   14000e3ab:	lahf   
   14000e3ac:	jmp    0x14000e368
   14000e3ae:	adc    ecx,DWORD PTR [rcx]
   14000e3b0:	leave  
   14000e3b1:	lods   eax,DWORD PTR ds:[rsi]
   14000e3b2:	pop    rsi
   14000e3b3:	mov    ah,0x73
   14000e3b5:	sbb    al,0xdc
   14000e3b7:	adc    al,0x61
   14000e3b9:	fisttp QWORD PTR [rcx-0xa]
   14000e3bc:	sub    DWORD PTR [rsi-0x35517ed5],edx
   14000e3c2:	mov    dl,0x63
   14000e3c4:	xor    DWORD PTR [rax+0x4ee16b9e],ebp
   14000e3ca:	test   eax,0x752052ee
   14000e3cf:	rex.R and al,0x55
   14000e3d2:	ror    BYTE PTR [rax],1
   14000e3d4:	(bad)  
   14000e3d5:	addr32 push rcx
   14000e3d7:	fnsave [rax+0x1]
   14000e3da:	rex.WX
   14000e3db:	rex.WXB add r8,rax
   14000e3de:	mov    ecx,0xad0a062a
   14000e3e3:	cmp    BYTE PTR [rbx],dl
   14000e3e5:	movabs al,ds:0x8f1e206ff7f4d31a
   14000e3ee:	movsxd ebx,DWORD PTR [rcx+0x16]
   14000e3f1:	(bad)  
   14000e3f3:	(bad)  
   14000e3f4:	ja     0x14000e44e
   14000e3f6:	icebp  
   14000e3f7:	(bad)  
   14000e3f8:	xor    ebp,DWORD PTR [rax-0x66]
   14000e3fb:	mov    ah,BYTE PTR [rip+0x74c555cb]        # 0x1b4c639cc
   14000e401:	mul    DWORD PTR [rdx]
   14000e403:	add    al,0xc2
   14000e405:	mov    al,0x28
   14000e407:	lea    ecx,[rsi+0x75dd77d2]
   14000e40d:	lods   al,BYTE PTR ds:[rsi]
   14000e40e:	jns    0x14000e3d7
   14000e410:	cmp    ecx,DWORD PTR [rax-0x3ff8a454]
   14000e416:	retf   0xbeb7
   14000e419:	xchg   ebp,eax
   14000e41a:	retf   0x24e4
   14000e41d:	xchg   DWORD PTR [rsi-0x741dc209],edi
   14000e423:	cli    
   14000e424:	ins    BYTE PTR es:[rdi],dx
   14000e425:	xchg   ebp,eax
   14000e426:	mov    bh,0x1c
   14000e428:	faddp  st(0),st
   14000e42a:	fild   DWORD PTR [rbx-0x7165f1b3]
   14000e430:	fld    TBYTE PTR [rbp+r15*4+0x65]
   14000e435:	lahf   
   14000e436:	mov    bl,0x5b
   14000e438:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e439:	outs   dx,DWORD PTR ds:[rsi]
   14000e43a:	cmp    ch,BYTE PTR [rbp-0x4a]
   14000e43d:	adc    eax,0x371253d9
   14000e442:	jl     0x14000e4ab
   14000e444:	pop    rcx
   14000e445:	add    cl,BYTE PTR [rcx-0x68]
   14000e448:	pop    rax
   14000e449:	icebp  
   14000e44a:	sub    bl,cl
   14000e44c:	repz jns 0x14000e45d
   14000e44f:	std    
   14000e450:	std    
   14000e451:	fcomip st,st(3)
   14000e453:	call   0xcbd0c353
   14000e458:	mov    dh,0x5d
   14000e45a:	int3   
   14000e45b:	xchg   esi,eax
   14000e45c:	sub    eax,0x81e0785b
   14000e461:	(bad)  
   14000e462:	cdq    
   14000e463:	cmp    BYTE PTR [rcx-0x145a7171],dh
   14000e469:	imul   ebp,DWORD PTR [rsi-0x21f04e4b],0x1c
   14000e470:	xor    al,bl
   14000e472:	jmp    0x14000e45e
   14000e474:	lods   eax,DWORD PTR ds:[rsi]
   14000e475:	xchg   BYTE PTR [rdx-0x69],ch
   14000e478:	and    ebp,DWORD PTR [rbp+0x2a709dde]
   14000e47e:	cs jne 0x14000e454
   14000e481:	and    al,0x5f
   14000e483:	or     dl,BYTE PTR [rdx+0x4d7b290]
   14000e489:	rex.RB cmc 
   14000e48b:	jno    0x14000e49a
   14000e48d:	mov    ch,0xc0
   14000e48f:	(bad)  
   14000e490:	pop    rax
   14000e491:	ret    
   14000e492:	(bad)  
   14000e493:	jb     0x14000e4fd
   14000e495:	mov    al,0x65
   14000e497:	add    BYTE PTR [rax-0x425f9d27],ah
   14000e49d:	iret   
   14000e49e:	sbb    eax,0x391629bd
   14000e4a3:	mov    bl,0x62
   14000e4a5:	movabs al,ds:0x9a576f493cb9b250
   14000e4ae:	sahf   
   14000e4af:	sahf   
   14000e4b0:	(bad)  
   14000e4b1:	fs pop rcx
   14000e4b3:	out    0xf9,al
   14000e4b5:	add    eax,DWORD PTR [rdi]
   14000e4b7:	sbb    BYTE PTR [rcx-0x18],bh
   14000e4ba:	(bad)  
   14000e4bb:	cs sub esi,esp
   14000e4be:	adc    DWORD PTR [rcx+0x2ab693a8],edx
   14000e4c4:	mov    esp,0x793718a4
   14000e4c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e4ca:	jl     0x14000e4b6
   14000e4cc:	adc    al,0xcb
   14000e4ce:	jg     0x14000e4b7
   14000e4d0:	mov    bh,0x59
   14000e4d2:	jns    0x14000e4a7
   14000e4d4:	(bad)  
   14000e4d5:	movabs ds:0x318b1c81dd6ab2e,eax
   14000e4de:	out    dx,eax
   14000e4df:	jp     0x14000e4f8
   14000e4e1:	test   ecx,esi
   14000e4e3:	jno    0x14000e46b
   14000e4e5:	out    dx,al
   14000e4e6:	mov    ebp,0xa7674897
   14000e4eb:	std    
   14000e4ec:	jge    0x14000e4c5
   14000e4ee:	cli    
   14000e4ef:	nop
   14000e4f0:	test   BYTE PTR [rdi+0xe1d34f],dh
   14000e4f6:	in     al,dx
   14000e4f7:	mul    eax
   14000e4f9:	xchg   esi,eax
   14000e4fa:	sub    bl,BYTE PTR [rcx-0x46]
   14000e4fd:	mov    ?,WORD PTR [rax]
   14000e4ff:	or     al,0xe4
   14000e501:	je     0x14000e51d
   14000e503:	movsxd edi,DWORD PTR [rdx]
   14000e505:	xchg   DWORD PTR [rsi+0x29],ebx
   14000e508:	movabs ds:0x160bbb604f0e52a5,eax
   14000e511:	movabs eax,ss:0xe8e219192ce3c4a8
   14000e51b:	in     eax,dx
   14000e51c:	mov    bh,0xf1
   14000e51e:	in     al,dx
   14000e51f:	cmp    ebx,edi
   14000e521:	int    0xe6
   14000e523:	(bad)  
   14000e524:	stos   DWORD PTR es:[rdi],eax
   14000e525:	pop    rcx
   14000e526:	mov    bh,0x6e
   14000e528:	sub    eax,0x34f13e8f
   14000e52d:	xchg   ecx,eax
   14000e52e:	fs (bad) 
   14000e530:	mov    DWORD PTR [rdi+rcx*2-0xb],ebp
   14000e534:	pop    rdx
   14000e535:	out    0xcc,eax
   14000e537:	fmul   st(7),st
   14000e539:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e53a:	jl     0x14000e589
   14000e53c:	mov    edx,0x5442aa13
   14000e541:	push   rbp
   14000e542:	icebp  
   14000e543:	mov    bh,0x39
   14000e545:	jb     0x14000e4f2
   14000e547:	(bad)  
   14000e548:	fstp   QWORD PTR [rsi+0x5]
   14000e54b:	and    eax,0x952cc0dd
   14000e550:	cmp    eax,0x65914fa2
   14000e555:	(bad)  
   14000e556:	(bad)  
   14000e557:	pop    rdi
   14000e558:	(bad)  
   14000e559:	(bad)  
   14000e55a:	call   0x19e025c3d
   14000e55f:	loopne 0x14000e533
   14000e561:	ins    BYTE PTR es:[rdi],dx
   14000e562:	xor    eax,edx
   14000e564:	imul   edi,esi,0xffffff9f
   14000e567:	pop    rbx
   14000e568:	outs   dx,BYTE PTR ds:[rsi]
   14000e569:	sbb    bl,BYTE PTR [rax-0x41]
   14000e56c:	in     al,0x8c
   14000e56e:	mov    al,BYTE PTR [rcx-0x8254cc4]
   14000e574:	ror    BYTE PTR [rax-0x6b],1
   14000e577:	or     DWORD PTR [rdx],edi
   14000e579:	mov    dl,0x76
   14000e57b:	push   rbp
   14000e57c:	lahf   
   14000e57d:	and    eax,0xe1fd3f04
   14000e582:	(bad)  [rsp+rbx*1-0x4caafae3]
   14000e589:	(bad)  
   14000e58a:	rex.W xlat BYTE PTR ds:[rbx]
   14000e58c:	outs   dx,DWORD PTR ds:[rsi]
   14000e58d:	ja     0x14000e5e2
   14000e58f:	push   rdx
   14000e590:	add    eax,0x2c93d3e8
   14000e595:	jns    0x14000e58c
   14000e597:	stos   DWORD PTR es:[rdi],eax
   14000e598:	mov    ecx,0x476fede8
   14000e59d:	jmp    0xce3c8f90
   14000e5a2:	(bad)  
   14000e5a3:	(bad)  
   14000e5a4:	(bad)
   14000e5a7:	outs   dx,DWORD PTR ds:[rsi]
   14000e5a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e5a9:	cmp    BYTE PTR [rdx],bh
   14000e5ab:	(bad)  
   14000e5ac:	in     al,0x9e
   14000e5ae:	(bad)  [rax-0x37]
   14000e5b1:	and    al,0x42
   14000e5b3:	xchg   edx,eax
   14000e5b4:	xor    BYTE PTR [rbp-0x38fdb7b],al
   14000e5ba:	std    
   14000e5bb:	fidivr DWORD PTR [rcx]
   14000e5bd:	imul   DWORD PTR [rsi+rcx*2+0x52]
   14000e5c1:	ret    0x952c
   14000e5c4:	movabs al,ds:0xfefd7465d979265c
   14000e5cd:	out    dx,eax
   14000e5ce:	xchg   ebx,eax
   14000e5cf:	jmp    0x127f1c9bf
   14000e5d4:	(bad)  
   14000e5d5:	iret   
   14000e5d6:	lock and ecx,DWORD PTR [rdi-0x391112f0]
   14000e5dd:	mov    dl,0x4
   14000e5df:	ret    0x8e14
   14000e5e2:	jnp    0x14000e645
   14000e5e4:	lahf   
   14000e5e5:	pop    rbx
   14000e5e6:	and    al,0xdd
   14000e5e8:	rex.B iret 
   14000e5ea:	and    ecx,DWORD PTR [rdi+0x7faefbb2]
   14000e5f0:	(bad)  
   14000e5f1:	sti    
   14000e5f2:	(bad)  
   14000e5f3:	faddp  st(0),st
   14000e5f5:	mov    dl,BYTE PTR [rip+0x1c1c182b]        # 0x15c1cfe26
   14000e5fb:	in     al,0xf8
   14000e5fd:	rcr    BYTE PTR [rsi+0x12],1
   14000e600:	fldcw  WORD PTR [rsi-0x21]
   14000e603:	cdq    
   14000e604:	int    0x90
   14000e606:	add    DWORD PTR [rcx],ebx
   14000e608:	and    dh,BYTE PTR [rbx]
   14000e60a:	mov    bl,0xf6
   14000e60c:	jae    0x14000e683
   14000e60e:	(bad)  
   14000e60f:	push   0xffffffffffffffbf
   14000e611:	movsxd esi,edi
   14000e613:	xor    edx,DWORD PTR [rdx+rax*1-0x43]
   14000e617:	add    ch,ch
   14000e619:	jb     0x14000e688
   14000e61b:	ret    
   14000e61c:	xor    al,0x67
   14000e61e:	cmp    BYTE PTR [rdx+0x53],al
   14000e621:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e622:	shl    edx,1
   14000e624:	and    cl,bh
   14000e626:	mov    esi,0x32460bc9
   14000e62b:	add    ebp,DWORD PTR [rbx-0x71d8d6aa]
   14000e631:	sbb    al,0x54
   14000e633:	rex.RX
   14000e634:	rex.RX xchg BYTE PTR [rbx-0x61a0a7be],r12b
   14000e63b:	test   eax,0x5d9e2818
   14000e640:	rex.WX stos BYTE PTR es:[rdi],al
   14000e642:	ja     0x14000e671
   14000e644:	fldenv [rip+0xffffffffb819e95b]        # 0xf81acfa5
   14000e64a:	pushf  
   14000e64b:	fimul  WORD PTR [rbx+0x2f491136]
   14000e651:	movsxd esp,DWORD PTR [rax+rdi*2-0x6c]
   14000e655:	mov    cl,0xd1
   14000e657:	xor    DWORD PTR [rsi-0x21674151],edx
   14000e65d:	gs stos DWORD PTR es:[rdi],eax
   14000e65f:	ret    
   14000e660:	mov    eax,DWORD PTR [rcx-0x73469d80]
   14000e666:	imul   ebx,DWORD PTR [rax+0x54ff6c20],0x676742a3
   14000e670:	(bad)  
   14000e671:	xchg   edx,eax
   14000e672:	and    al,0x71
   14000e674:	jb     0x14000e6ee
   14000e676:	cwde   
   14000e677:	fdivr  QWORD PTR [rdi-0x4]
   14000e67a:	(bad)  
   14000e67b:	std    
   14000e67c:	xchg   ebp,eax
   14000e67d:	xchg   edx,eax
   14000e67e:	jrcxz  0x14000e677
   14000e680:	pop    rbx
   14000e681:	pop    rax
   14000e682:	fcomp  DWORD PTR [rbp+0x5872dd76]
   14000e688:	(bad)  
   14000e689:	pop    rdx
   14000e68a:	sbb    BYTE PTR [rdx-0x492499bf],bh
   14000e690:	push   rax
   14000e691:	in     eax,0xb7
   14000e693:	sub    al,0xbb
   14000e695:	rex.WRB push r14
   14000e697:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e698:	mov    edi,0xf91fad9f
   14000e69d:	xor    BYTE PTR [rcx+0x4a54a5fe],dh
   14000e6a3:	adc    eax,0x29dd95b
   14000e6a8:	sbb    DWORD PTR [rbx+0x58],ecx
   14000e6ab:	pop    rsi
   14000e6ac:	ja     0x14000e6cb
   14000e6ae:	loope  0x14000e666
   14000e6b0:	loopne 0x14000e644
   14000e6b2:	movabs al,ds:0xb86e644b16602f92
   14000e6bb:	sub    DWORD PTR [rsi+0x6305bcb7],0x23465aed
   14000e6c5:	adc    esi,edx
   14000e6c7:	jge    0x14000e6c5
   14000e6c9:	jrcxz  0x14000e72f
   14000e6cb:	(bad)  
   14000e6cc:	ins    DWORD PTR es:[rdi],dx
   14000e6cd:	movabs ds:0xc34e9979ce63630,al
   14000e6d6:	mov    ch,0xcf
   14000e6d8:	rex.RXB
   14000e6d9:	rex.W (bad) 
   14000e6db:	push   rsp
   14000e6dc:	fbld   TBYTE PTR [rdx]
   14000e6de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e6df:	cmp    ebp,edi
   14000e6e1:	in     al,0xf9
   14000e6e3:	popf   
   14000e6e4:	cmp    ecx,ecx
   14000e6e6:	in     eax,0x72
   14000e6e8:	ins    BYTE PTR es:[rdi],dx
   14000e6e9:	fidiv  DWORD PTR [rcx+rcx*4+0x3c4e2528]
   14000e6f0:	dec    DWORD PTR [rbx+rdx*8+0x7a7643e4]
   14000e6f7:	lock mov ebx,0xaffd377
   14000e6fd:	(bad)  
   14000e6fe:	xlat   BYTE PTR ds:[rbx]
   14000e6ff:	push   0x9
   14000e701:	jnp    0x14000e738
   14000e703:	xchg   esi,eax
   14000e704:	loopne 0x14000e6c4
   14000e706:	pop    rbp
   14000e707:	nop
   14000e708:	stos   DWORD PTR es:[rdi],eax
   14000e709:	fild   WORD PTR [rdi-0x2cb3f69b]
   14000e70f:	ins    DWORD PTR es:[rdi],dx
   14000e710:	(bad)  
   14000e711:	(bad)  
   14000e712:	outs   dx,DWORD PTR ds:[rsi]
   14000e713:	and    ecx,DWORD PTR [rbx+0x12]
   14000e716:	push   rcx
   14000e717:	rex.WRB stos QWORD PTR es:[rdi],rax
   14000e719:	mov    edx,0x6a1d335b
   14000e71e:	(bad)  
   14000e71f:	mov    bl,0x6f
   14000e721:	ins    DWORD PTR es:[rdi],dx
   14000e722:	imul   ebx,DWORD PTR [rcx],0x2b9a000b
   14000e728:	(bad)  
   14000e729:	rex.WX and al,0xce
   14000e72c:	mov    esp,0xa8084818
   14000e731:	sbb    BYTE PTR [rsi],al
   14000e733:	test   DWORD PTR [rdx+0x19],esi
   14000e736:	retf   
   14000e737:	mov    dl,0xd0
   14000e739:	lods   al,BYTE PTR ds:[rsi]
   14000e73a:	and    ch,BYTE PTR [rbx-0x45]
   14000e73d:	adc    esi,DWORD PTR [rbp+rsi*2+0x75]
   14000e741:	and    ebx,ecx
   14000e743:	xor    cl,BYTE PTR [rdi+0x3f]
   14000e746:	cli    
   14000e747:	sub    BYTE PTR [rbx-0x62],ch
   14000e74a:	fadd   QWORD PTR [rcx+0x6d8361b6]
   14000e750:	(bad)  
   14000e751:	pop    rbx
   14000e752:	(bad)  
   14000e753:	(bad)  
   14000e754:	mov    bh,0xdd
   14000e756:	test   BYTE PTR [rax+0x40],0x40
   14000e75a:	mov    DWORD PTR [rdi],esp
   14000e75c:	cmp    al,bh
   14000e75e:	in     eax,dx
   14000e75f:	outs   dx,DWORD PTR ds:[rsi]
   14000e760:	sar    ebp,cl
   14000e762:	repnz xchg edi,eax
   14000e764:	movabs ds:0x6bdf9e16fb3b7775,eax
   14000e76d:	pop    rdx
   14000e76e:	(bad)  
   14000e76f:	in     eax,0x5c
   14000e771:	mov    ?,eax
   14000e773:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e774:	rex.WRB pop r12
   14000e776:	cld    
   14000e777:	mov    cl,0x8f
   14000e779:	icebp  
   14000e77a:	fdivr  DWORD PTR [rbx-0x21]
   14000e77d:	(bad)  
   14000e77e:	xor    DWORD PTR [rip+0x5eaaa485],edi        # 0x19eab8c09
   14000e784:	(bad)  
   14000e785:	movabs al,ds:0xe4a85c749cb3ea1d
   14000e78e:	repnz sub BYTE PTR [rdx],dh
   14000e791:	je     0x14000e790
   14000e793:	out    dx,al
   14000e794:	imul   ecx,DWORD PTR [rcx-0x3],0xffffffd6
   14000e798:	outs   dx,DWORD PTR ds:[rsi]
   14000e799:	push   rcx
   14000e79a:	mov    es,WORD PTR [rsi-0x2f]
   14000e79d:	xchg   DWORD PTR [rsi+0x438b2d30],eax
   14000e7a3:	in     eax,0x32
   14000e7a5:	jmp    0x14000e7e5
   14000e7a7:	cld    
   14000e7a8:	(bad)  
   14000e7a9:	sahf   
   14000e7aa:	stc    
   14000e7ab:	repz seto BYTE PTR [rbx]
   14000e7af:	jb     0x14000e7c9
   14000e7b1:	and    eax,0x43887295
   14000e7b6:	sbb    al,0xb
   14000e7b8:	rex.RB (bad) 
   14000e7ba:	imul   ebx,DWORD PTR [rdx],0x9e09628b
   14000e7c0:	std    
   14000e7c1:	(bad)  
   14000e7c2:	lods   eax,DWORD PTR ds:[rsi]
   14000e7c3:	sub    al,0x5f
   14000e7c5:	mov    ebp,0xd76bb59a
   14000e7ca:	xor    dh,BYTE PTR [rax-0x2161dd16]
   14000e7d0:	std    
   14000e7d1:	cmp    al,0x27
   14000e7d3:	(bad)  
   14000e7d4:	(bad)  
   14000e7d5:	adc    DWORD PTR [rbp+0x6aa88827],ecx
   14000e7db:	lea    ebp,[rdi+0x4a03676d]
   14000e7e1:	(bad)  
   14000e7e2:	fadd   QWORD PTR [rbx+0x6c6a753a]
   14000e7e8:	add    cl,ah
   14000e7ea:	lahf   
   14000e7eb:	cmp    esp,DWORD PTR [rcx]
   14000e7ed:	test   DWORD PTR [rsi+rbx*1+0x6],esp
   14000e7f1:	fadd   st,st(0)
   14000e7f3:	sbb    DWORD PTR [rbp+0x61],esp
   14000e7f6:	rex.X
   14000e7f7:	rex retf 
   14000e7f9:	add    BYTE PTR [rax-0x4d],al
   14000e7fc:	(bad)
   14000e7ff:	jl     0x14000e7cd
   14000e801:	or     al,0x84
   14000e803:	and    BYTE PTR [rbx+0x40ef3a4c],bl
   14000e809:	rex.WR out 0x49,eax
   14000e80c:	cmp    dh,BYTE PTR [rbp-0x3]
   14000e80f:	xchg   BYTE PTR [rcx+0x70],ah
   14000e812:	lock (bad) 
   14000e814:	sti    
   14000e815:	pop    rcx
   14000e816:	lahf   
   14000e817:	leave  
   14000e818:	and    BYTE PTR [rbx+0x16],bl
   14000e81b:	adc    BYTE PTR es:[rax-0x303ada94],0xd8
   14000e823:	or     eax,DWORD PTR [rsp-0x778bc46f]
   14000e82a:	(bad)  
   14000e82b:	ds hlt 
   14000e82d:	and    DWORD PTR [rsi],ebp
   14000e82f:	std    
   14000e830:	(bad)  
   14000e831:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e832:	mov    BYTE PTR [rdx+rsi*1+0x18],ah
   14000e836:	xchg   ch,bl
   14000e838:	mov    al,0xd2
   14000e83a:	xor    BYTE PTR [rdi+riz*4],cl
   14000e83d:	and    DWORD PTR [rbp-0x73938eb7],0x7057e5cc
   14000e847:	icebp  
   14000e848:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14000e84a:	loope  0x14000e80d
   14000e84c:	(bad)  
   14000e84d:	sti    
   14000e84e:	xor    esi,DWORD PTR [rcx+riz*1]
   14000e851:	rex push rcx
   14000e853:	stos   BYTE PTR es:[rdi],al
   14000e854:	rex.WRB cmp BYTE PTR [r9],r8b
   14000e857:	(bad)  
   14000e858:	cdq    
   14000e859:	sbb    BYTE PTR [rbp-0x3ad5a5ee],ah
   14000e85f:	movabs ds:0x8a0ae2bd423fa3f,al
   14000e868:	call   0x1b6df4bd0
   14000e86d:	stc    
   14000e86e:	test   eax,0x74744e29
   14000e873:	mov    al,0xfe
   14000e875:	add    edi,DWORD PTR [rdi-0x32]
   14000e878:	mov    cs,WORD PTR [rdi]
   14000e87a:	jl     0x14000e87c
   14000e87c:	movabs ds:0x72dfc73b1456465c,eax
   14000e885:	pop    rbx
   14000e886:	ins    DWORD PTR es:[rdi],dx
   14000e887:	pop    rcx
   14000e888:	cwde   
   14000e889:	mov    ebp,0xb5db2cbd
   14000e88e:	xchg   ebx,eax
   14000e88f:	xchg   DWORD PTR [rsi-0xa],edi
   14000e892:	xor    edi,DWORD PTR [rdx]
   14000e894:	cmp    edi,DWORD PTR [rdx]
   14000e896:	pop    rax
   14000e897:	mov    cl,0x62
   14000e899:	add    eax,0xc41e0e07
   14000e89e:	test   al,0x8c
   14000e8a0:	adc    edi,ebp
   14000e8a2:	call   0x14a4d1fe7
   14000e8a7:	add    DWORD PTR [rdx],esp
   14000e8a9:	(bad)  
   14000e8aa:	rex.WXB clc 
   14000e8ac:	push   rcx
   14000e8ad:	ins    BYTE PTR es:[rdi],dx
   14000e8ae:	jo     0x14000e858
   14000e8b0:	add    eax,DWORD PTR [rsi]
   14000e8b2:	add    cl,BYTE PTR [rdx]
   14000e8b4:	pop    rcx
   14000e8b5:	std    
   14000e8b6:	in     eax,0xc2
   14000e8b8:	out    dx,eax
   14000e8b9:	lock mov esp,0x3f0d0cf2
   14000e8bf:	push   0xffffffffffffffe6
   14000e8c1:	jmp    0x14000e8f0
   14000e8c3:	sub    eax,0x3802e32d
   14000e8c8:	(bad)
   14000e8cb:	mov    al,BYTE PTR [rcx+0x7e1e6442]
   14000e8d1:	imul   edx,DWORD PTR [rcx+0x25],0x2165850d
   14000e8d8:	mov    esi,DWORD PTR [rdx+0x6a63d4d7]
   14000e8de:	push   0xffffffffffffff8a
   14000e8e0:	fcom   QWORD PTR [rbx]
   14000e8e2:	(bad)  
   14000e8e3:	movabs eax,ds:0xe6da6d831e9833a4
   14000e8ec:	mov    edx,0x42fb510
   14000e8f1:	push   rdx
   14000e8f2:	xor    al,0xca
   14000e8f4:	lock iret 
   14000e8f6:	jg     0x14000e8c6
   14000e8f8:	sar    DWORD PTR [rdi-0xd],cl
   14000e8fb:	(bad)  
   14000e8fc:	push   rsp
   14000e8fd:	sbb    al,0x2
   14000e8ff:	push   rdx
   14000e900:	xlat   BYTE PTR ds:[rbx]
   14000e901:	jne    0x14000e977
   14000e903:	pop    rbp
   14000e904:	(bad)  
   14000e905:	xor    BYTE PTR [rsp+rcx*1],cl
   14000e908:	ret    
   14000e909:	shl    BYTE PTR [rdx],0x4d
   14000e90c:	xchg   BYTE PTR [rsi-0x6d02dce3],cl
   14000e912:	xchg   edi,eax
   14000e913:	jo     0x14000e8fe
   14000e915:	(bad)  
   14000e916:	ds rex.RX (bad) 
   14000e919:	(bad)  
   14000e91a:	test   BYTE PTR [rip+0x1d274e10],cl        # 0x15d283730
   14000e920:	rex.XB xlat BYTE PTR ds:[rbx]
   14000e922:	test   eax,0xfa440a14
   14000e927:	cli    
   14000e928:	pop    rax
   14000e929:	cli    
   14000e92a:	sahf   
   14000e92b:	ja     0x14000e950
   14000e92d:	pop    rdi
   14000e92e:	jno    0x14000e935
   14000e930:	and    eax,0x9c9f40c3
   14000e935:	(bad)  
   14000e936:	adc    al,dl
   14000e938:	fist   DWORD PTR [rdi+0xc4c9a65]
   14000e93e:	or     eax,0x1168b131
   14000e943:	add    edi,DWORD PTR [rdi-0x6]
   14000e946:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e947:	cwde   
   14000e948:	and    BYTE PTR [rcx-0x66],0x58
   14000e94c:	xchg   BYTE PTR [rcx+0x4f],ch
   14000e94f:	and    eax,0xcb0c0966
   14000e954:	ret    0x75d2
   14000e957:	movabs ds:0xd0c0ff8ffd3256cb,al
   14000e960:	test   eax,0x14a95209
   14000e965:	jmp    0x14000e93d
   14000e967:	scas   al,BYTE PTR es:[rdi]
   14000e968:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e969:	cmp    BYTE PTR [rsi+0x18],dh
   14000e96c:	hlt    
   14000e96d:	or     bl,cl
   14000e96f:	fs xchg edx,eax
   14000e971:	out    dx,al
   14000e972:	rex.WR xchg BYTE PTR [rsi+0x1dbd2c8e],r15b
   14000e979:	pop    rcx
   14000e97a:	cmp    dl,BYTE PTR [rbx+0x49]
   14000e97d:	(bad)  
   14000e97f:	or     BYTE PTR [rdx+0x40],al
   14000e982:	movabs eax,ds:0x4989918e74d4e65c
   14000e98b:	xchg   BYTE PTR [rdi+0x4d],cl
   14000e98e:	xor    bh,BYTE PTR [rdx]
   14000e990:	cmp    ebp,eax
   14000e992:	fs scas al,BYTE PTR es:[rdi]
   14000e994:	rex movabs eax,ds:0xdb45a4ec4c374654
   14000e99e:	xchg   ebp,eax
   14000e99f:	nop
   14000e9a0:	mov    ebp,0xe66124a6
   14000e9a5:	jle    0x14000e92a
   14000e9a7:	pop    rbx
   14000e9a8:	(bad)  
   14000e9a9:	rex.RXB push r15
   14000e9ab:	movabs ds:0xd27e0d3732abe51a,al
   14000e9b4:	add    eax,0x32d29
   14000e9b9:	rex.WRX xor QWORD PTR [rax],r10
   14000e9bc:	xchg   edi,eax
   14000e9bd:	pop    rdi
   14000e9be:	jbe    0x14000e9c9
   14000e9c0:	sbb    esi,DWORD PTR [rdi]
   14000e9c2:	outs   dx,DWORD PTR ds:[rsi]
   14000e9c3:	xor    eax,0xbe5bd204
   14000e9c8:	(bad)
   14000e9cc:	or     ebp,DWORD PTR [rsi+0x37]
   14000e9cf:	pop    rdi
   14000e9d0:	(bad)  
   14000e9d1:	mov    ah,0x7f
   14000e9d3:	(bad)  
   14000e9d4:	or     ah,BYTE PTR [rsi]
   14000e9d6:	mov    DWORD PTR [rdx+rax*1+0x49],eax
   14000e9da:	xchg   edx,eax
   14000e9db:	cmp    BYTE PTR [rsi-0x4],bh
   14000e9de:	cmp    BYTE PTR [rcx+0x16214723],dh
   14000e9e4:	mov    ch,0x1
   14000e9e6:	ror    BYTE PTR [rip+0x2bc259d1],0xf3        # 0x16bc343be
   14000e9ed:	jne    0x14000ea16
   14000e9ef:	(bad)  
   14000e9f0:	xor    BYTE PTR [rip+0x2d09130b],ch        # 0x16d09fd01
   14000e9f6:	popf   
   14000e9f7:	out    0xf0,al
   14000e9f9:	mov    bh,0xbf
   14000e9fb:	int    0xee
   14000e9fd:	fld    TBYTE PTR [rsi-0xd]
   14000ea00:	jl     0x14000ea81
   14000ea02:	jnp    0x14000ea76
   14000ea04:	movnti DWORD PTR [rbx+0x5e],edx
   14000ea08:	rex.WB or BYTE PTR [r14],al
   14000ea0b:	imul   edi
   14000ea0d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ea0e:	jmp    0x14000ea47
   14000ea10:	jle    0x14000e995
   14000ea12:	int    0xef
   14000ea14:	jp     0x14000ea25
   14000ea16:	mov    ecx,0x4ddb21a1
   14000ea1b:	sub    BYTE PTR [rbp+0x52254a30],dl
   14000ea21:	pop    rbx
   14000ea22:	mov    dh,0xb0
   14000ea24:	in     al,0xe6
   14000ea26:	fwait
   14000ea27:	xor    edi,edx
   14000ea29:	outs   dx,DWORD PTR ds:[rsi]
   14000ea2a:	movabs al,ds:0x2c3edef3e4602854
   14000ea33:	(bad)  
   14000ea35:	mov    dl,0x2c
   14000ea37:	(bad)  
   14000ea38:	out    dx,eax
   14000ea39:	fisttp WORD PTR [rdi-0x9]
   14000ea3c:	outs   dx,DWORD PTR ds:[rsi]
   14000ea3d:	(bad)  
   14000ea3e:	es (bad) 
   14000ea41:	in     eax,0x54
   14000ea43:	rex.WX and rax,0xffffffffe721967b
   14000ea49:	jl     0x14000ea27
   14000ea4b:	es pushf 
   14000ea4d:	data16 xor al,0x4a
   14000ea50:	call   rax
   14000ea52:	or     BYTE PTR [rdi-0x1b780f03],cl
   14000ea58:	jae    0x14000ea93
   14000ea5a:	cli    
   14000ea5b:	sti    
   14000ea5c:	sti    
   14000ea5d:	rex.WB
   14000ea5e:	rex.R
   14000ea5f:	mov    dl,BYTE PTR fs:[rbx-0x76622ed9]
   14000ea66:	rex.RXB
   14000ea67:	rex.WRB (bad) 
   14000ea69:	fist   WORD PTR [rsi+0x64]
   14000ea6c:	test   DWORD PTR [rax+0x24],ebx
   14000ea6f:	rex.WX
   14000ea70:	or     BYTE PTR es:[rcx+rbp*8],cl
   14000ea74:	adc    al,0xf1
   14000ea76:	push   0x52824914
   14000ea7b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ea7c:	ret    0x2e44
   14000ea7f:	outs   dx,DWORD PTR ds:[rsi]
   14000ea80:	add    eax,ebx
   14000ea82:	test   BYTE PTR [rip+0x2b9130c],cl        # 0x142b9fd94
   14000ea88:	stc    
   14000ea89:	movabs ds:0xb4d3060239d60c0d,al
   14000ea92:	ret    
   14000ea93:	mov    DWORD PTR [rbx],esi
   14000ea95:	jmp    QWORD PTR [rdx-0x39a5b8f5]
   14000ea9b:	add    eax,0xa818b668
   14000eaa0:	cmp    al,0x1f
   14000eaa2:	(bad)  
   14000eaa3:	and    bl,0x80
   14000eaa6:	mov    ebx,0x922b544
   14000eaab:	str    WORD PTR [rsi-0x1db5c2e4]
   14000eab2:	(bad)  
   14000eab3:	xchg   esp,eax
   14000eab4:	popf   
   14000eab5:	repnz imul ecx,DWORD PTR [rcx-0x55d3a080],0x25
   14000eabd:	mov    ch,0xde
   14000eabf:	jle    0x14000eb2d
   14000eac1:	push   rdi
   14000eac2:	and    dh,dl
   14000eac4:	fld    st(5)
   14000eac6:	fisubr WORD PTR [rdi]
   14000eac8:	jge    0x14000eae3
   14000eaca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eacb:	mov    bl,0x93
   14000eacd:	xchg   ebp,eax
   14000eace:	(bad)  
   14000eacf:	fimul  WORD PTR [rax+0x676e3e31]
   14000ead5:	int    0x39
   14000ead7:	mov    ch,BYTE PTR [rbx-0x66]
   14000eada:	rex.W adc al,BYTE PTR es:[rdi-0x9]
   14000eadf:	in     eax,dx
   14000eae0:	movsxd esi,ecx
   14000eae2:	(bad)  
   14000eae3:	mov    esp,0x83a37581
   14000eae8:	cmp    al,0xfb
   14000eaea:	(bad)  
   14000eaeb:	scas   eax,DWORD PTR es:[rdi]
   14000eaec:	adc    edi,ebp
   14000eaee:	call   0x175ce6613
   14000eaf3:	hlt    
   14000eaf4:	std    
   14000eaf5:	icebp  
   14000eaf6:	(bad)  
   14000eaf7:	push   rbx
   14000eaf8:	mov    es,ebp
   14000eafa:	test   al,0x4c
   14000eafc:	cmp    QWORD PTR [r11+0x11b9e5b9],r12
   14000eb03:	out    dx,al
   14000eb04:	imul   DWORD PTR [rip+0xffffffffeba2a2cb]        # 0x12ba38dd5
   14000eb0a:	hlt    
   14000eb0b:	sub    al,0x5f
   14000eb0d:	(bad)  
   14000eb0e:	movabs eax,ds:0xd36429e9c992fe5f
   14000eb17:	add    al,ch
   14000eb19:	imul   ebx,ecx,0x6494dc21
   14000eb1f:	jnp    0x14000ead3
   14000eb21:	ud1    edi,DWORD PTR [rdi+0x7cbfd29f]
   14000eb28:	xchg   ebx,eax
   14000eb29:	jrcxz  0x14000eaea
   14000eb2b:	sti    
   14000eb2c:	mov    ebx,0x9cb1586c
   14000eb31:	mov    ebp,DWORD PTR [rsi]
   14000eb33:	pop    rdx
   14000eb34:	leave  
   14000eb35:	scas   al,BYTE PTR es:[rdi]
   14000eb36:	jge    0x14000eb3f
   14000eb38:	rex.WB cmc 
   14000eb3a:	scas   al,BYTE PTR es:[rdi]
   14000eb3b:	rex.R xchg esi,eax
   14000eb3d:	stos   DWORD PTR es:[rdi],eax
   14000eb3e:	movsxd eax,DWORD PTR [rdi+0x21d821c7]
   14000eb44:	or     BYTE PTR [rdi-0x43],ch
   14000eb47:	sub    al,0xc9
   14000eb49:	(bad)
   14000eb4d:	in     al,0xaf
   14000eb4f:	xchg   edi,eax
   14000eb50:	lock (bad) 
   14000eb52:	nop/reserved BYTE PTR [rsi]
   14000eb55:	gs mov ebp,0x9be4a142
   14000eb5b:	mov    ecx,0x722c2dc8
   14000eb60:	sub    ch,BYTE PTR [rdx*2-0x79b209bb]
   14000eb67:	pop    rdx
   14000eb68:	fwait
   14000eb69:	clc    
   14000eb6a:	push   rsp
   14000eb6b:	sub    esi,DWORD PTR [rbx+0x17712a74]
   14000eb71:	ds mov bh,0xa9
   14000eb74:	outs   dx,BYTE PTR ds:[rsi]
   14000eb75:	mov    bl,0xd3
   14000eb77:	sub    BYTE PTR [rax+0x7a],al
   14000eb7a:	movabs eax,ds:0x4340c5b34000cb4b
   14000eb83:	(bad)  
   14000eb86:	sbb    eax,ecx
   14000eb88:	sti    
   14000eb89:	movabs ds:0xbbaeec44882590bd,al
   14000eb92:	ret    
   14000eb93:	(bad)  
   14000eb94:	(bad)  
   14000eb95:	xchg   ebx,eax
   14000eb96:	xor    BYTE PTR [rbp+0xc],dh
   14000eb99:	and    DWORD PTR [rcx+rbx*4-0x4f5b9285],ebx
   14000eba0:	jrcxz  0x14000eb8f
   14000eba2:	(bad)  
   14000eba3:	and    bl,BYTE PTR [rdx+rax*2+0x2c0e071e]
   14000ebaa:	in     al,dx
   14000ebab:	test   BYTE PTR [rsi],bl
   14000ebad:	and    al,0x62
   14000ebaf:	cdq    
   14000ebb0:	or     al,0xcf
   14000ebb2:	jl     0x14000ebb0
   14000ebb4:	movsxd ebp,DWORD PTR [rax-0x430bc223]
   14000ebba:	cld    
   14000ebbb:	gs call 0x108f70ee4
   14000ebc1:	in     al,dx
   14000ebc2:	jo     0x14000ebc5
   14000ebc4:	out    dx,al
   14000ebc5:	je     0x14000ec24
   14000ebc7:	(bad)  
   14000ebc8:	(bad)  
   14000ebc9:	sbb    al,0x61
   14000ebcb:	(bad)
   14000ebce:	test   edx,eax
   14000ebd0:	shl    BYTE PTR [rax],1
   14000ebd2:	in     eax,0x48
   14000ebd4:	test   dh,ch
   14000ebd6:	sbb    ebp,DWORD PTR [rdi-0x5c]
   14000ebd9:	and    bl,cl
   14000ebdb:	sbb    BYTE PTR [rsi+0x269a6fc9],cl
   14000ebe1:	xchg   BYTE PTR [rcx-0x28],ah
   14000ebe4:	loope  0x14000ec16
   14000ebe6:	(bad)  
   14000ebe7:	add    BYTE PTR [rax],bl
   14000ebe9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ebea:	leave  
   14000ebeb:	movabs ds:0xdccf24f93dc9abd5,al
   14000ebf4:	jp     0x14000ec21
   14000ebf6:	(bad)  
   14000ebf7:	loope  0x14000ebbc
   14000ebf9:	hlt    
   14000ebfa:	je     0x14000ec72
   14000ebfc:	cmp    cl,BYTE PTR [rbp+0x36]
   14000ebff:	and    al,0x84
   14000ec01:	in     al,dx
   14000ec02:	adc    DWORD PTR fs:[rdx],edi
   14000ec05:	push   rcx
   14000ec06:	(bad)  
   14000ec07:	movabs eax,ds:0xf797ebb24d4ea469
   14000ec10:	xor    esi,DWORD PTR [rax+0x5b2cb5e8]
   14000ec16:	mov    dh,0x8c
   14000ec18:	cmp    eax,0x6a73f77b
   14000ec1d:	je     0x14000eba7
   14000ec1f:	sahf   
   14000ec20:	rex.RB
   14000ec21:	rex.WXB popf 
   14000ec23:	sahf   
   14000ec24:	or     BYTE PTR [rip+0xffffffffdeef8a6e],cl        # 0x11ef07698
   14000ec2a:	xchg   BYTE PTR [rcx],al
   14000ec2c:	sbb    DWORD PTR [rbp+0x48],0x45
   14000ec30:	sub    BYTE PTR [rax],dh
   14000ec32:	mov    eax,0x528503b5
   14000ec37:	leave  
   14000ec38:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ec3a:	jb     0x14000ec62
   14000ec3c:	(bad)  
   14000ec3d:	jno    0x14000ec51
   14000ec3f:	jge    0x14000ecad
   14000ec41:	jo     0x14000ebd3
   14000ec43:	jge    0x14000ec2a
   14000ec45:	xlat   BYTE PTR ds:[rbx]
   14000ec46:	(bad)  
   14000ec47:	xor    al,0x88
   14000ec49:	(bad)  
   14000ec4b:	jle    0x14000ec4c
   14000ec4d:	jns    0x14000ec84
   14000ec4f:	ds jmp 0x14000ebd7
   14000ec52:	and    ebp,DWORD PTR [rip+0xffffffffee700003]        # 0x12e70ec5b
   14000ec58:	mov    al,BYTE PTR [rcx-0x6916707c]
   14000ec5e:	mov    al,0x9
   14000ec60:	xor    BYTE PTR [rdi+0x3c9d2fb9],dl
   14000ec66:	rex.WB push r14
   14000ec68:	xchg   esi,eax
   14000ec69:	popf   
   14000ec6a:	(bad)  
   14000ec6b:	(bad)  
   14000ec6c:	scas   al,BYTE PTR es:[rdi]
   14000ec6d:	ret    0xc93b
   14000ec70:	mov    ebx,0x24af794e
   14000ec75:	or     DWORD PTR [rdi+rsi*4],ebp
   14000ec78:	xchg   ecx,eax
   14000ec79:	xchg   DWORD PTR [rbx],edx
   14000ec7b:	fbstp  TBYTE PTR [rsi+0x21550084]
   14000ec81:	xchg   edx,eax
   14000ec82:	rex.W
   14000ec83:	repnz (bad) 
   14000ec85:	(bad)  
   14000ec86:	(bad)  
   14000ec87:	enter  0xc5f6,0x8b
   14000ec8b:	mov    BYTE PTR [rdi+0x259ed5e],ch
   14000ec91:	mov    edx,0xbc267bae
   14000ec96:	pop    rsi
   14000ec97:	cs jae 0x14000ed16
   14000ec9a:	je     0x14000ec30
   14000ec9c:	(bad)
   14000ec9f:	or     esp,DWORD PTR [rbx+0x194c5353]
   14000eca5:	(bad)  
   14000eca6:	mov    ah,0x4
   14000eca9:	es (bad) 
   14000ecab:	add    BYTE PTR [rbp+0x269bf237],0x26
   14000ecb2:	mov    al,0x74
   14000ecb4:	int    0x1a
   14000ecb6:	xchg   bh,ch
   14000ecb8:	mov    edx,0x7e77dd8b
   14000ecbd:	or     esp,ebx
   14000ecbf:	shl    bl,0xf4
   14000ecc2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ecc3:	push   rdx
   14000ecc4:	pop    rax
   14000ecc5:	and    esp,DWORD PTR [rbx]
   14000ecc7:	or     BYTE PTR [rbp+0x45],al
   14000ecca:	push   rdx
   14000eccb:	adc    eax,0x39632c84
   14000ecd0:	adc    ecx,DWORD PTR [rax-0x369feda6]
   14000ecd6:	push   0xffffffffdfa314a9
   14000ecdb:	stc    
   14000ecdc:	adc    ebp,DWORD PTR ss:[rdi-0x574f282]
   14000ece3:	cli    
   14000ece4:	call   0xea65dbd2
   14000ece9:	xor    al,0x8a
   14000eceb:	movabs eax,ds:0x259bc6adf56aa1f7
   14000ecf4:	jmp    0x16106f293
   14000ecf9:	push   0x2b
   14000ecfb:	(bad)  
   14000ecfc:	jne    0x14000ecdb
   14000ecfe:	movabs al,ds:0xae48677403f6ae58
   14000ed07:	iret   
   14000ed08:	add    al,ah
   14000ed0a:	and    DWORD PTR [rax],esp
   14000ed0c:	ret    
   14000ed0d:	mov    ?,WORD PTR [rsi]
   14000ed0f:	sti    
   14000ed10:	stc    
   14000ed11:	sub    eax,0x296914
   14000ed16:	push   0xffffffffef6818a6
   14000ed1b:	(bad)  
   14000ed1c:	stc    
   14000ed1d:	sub    BYTE PTR [rsi],al
   14000ed1f:	mov    dl,0x15
   14000ed21:	push   rdi
   14000ed22:	xchg   edx,eax
   14000ed23:	jo     0x14000ed97
   14000ed25:	(bad)  
   14000ed26:	ins    DWORD PTR es:[rdi],dx
   14000ed27:	add    eax,0x72e48805
   14000ed2c:	rex.WRX mov dl,0x8e
   14000ed2f:	mov    ebp,0x7b47709d
   14000ed34:	loope  0x14000ecba
   14000ed36:	add    DWORD PTR [rcx+0x5efe82c3],esi
   14000ed3c:	sti    
   14000ed3d:	scas   al,BYTE PTR es:[rdi]
   14000ed3e:	xor    bl,BYTE PTR [rax+0x58]
   14000ed41:	movabs al,ds:0x5debbc4f32a548a9
   14000ed4a:	pop    rsp
   14000ed4b:	jp     0x14000ed48
   14000ed4d:	in     eax,dx
   14000ed4e:	enter  0x2cd9,0xc6
   14000ed52:	clc    
   14000ed53:	js     0x14000ed62
   14000ed55:	xor    DWORD PTR [rax+0x2e463aeb],ebp
   14000ed5b:	rex.RXB
   14000ed5c:	cs (bad) 
   14000ed5e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ed5f:	and    al,BYTE PTR [rdx*4-0xfd3ae2f]
   14000ed66:	adc    al,0xbe
   14000ed68:	data16 (bad) 
   14000ed6a:	xlat   BYTE PTR ds:[rbx]
   14000ed6b:	jne    0x14000ed01
   14000ed6d:	push   0x4b25de94
   14000ed72:	cmp    dl,bh
   14000ed74:	(bad)  
   14000ed75:	dec    eax
   14000ed77:	fisubr WORD PTR [rdi+0x7d]
   14000ed7a:	or     ebp,ebp
   14000ed7c:	(bad)  
   14000ed7d:	sub    DWORD PTR [rdx+0x1],edi
   14000ed80:	and    eax,0x7bfb397
   14000ed85:	or     BYTE PTR [rcx+0x46],bl
   14000ed88:	xchg   edx,eax
   14000ed89:	test   BYTE PTR gs:[rdx],ah
   14000ed8c:	and    edx,DWORD PTR [rdx*1-0x76eeeaac]
   14000ed93:	movabs eax,ds:0xf0d8e6eecf183364
   14000ed9c:	xor    bl,cl
   14000ed9e:	cli    
   14000ed9f:	jp     0x14000ed8a
   14000eda1:	out    dx,eax
   14000eda2:	out    dx,eax
   14000eda3:	addr32 call 0x1bbc52b92
   14000eda9:	xlat   BYTE PTR ds:[rbx]
   14000edaa:	movabs al,ds:0xdec86787dcfd5aa8
   14000edb3:	xchg   DWORD PTR [rcx],eax
   14000edb5:	and    DWORD PTR [rcx+rcx*8],0x44
   14000edb9:	xor    al,0x85
   14000edbb:	test   al,0x7
   14000edbd:	or     al,0xf6
   14000edbf:	std    
   14000edc0:	lods   al,BYTE PTR ds:[rsi]
   14000edc1:	(bad)  
   14000edc2:	(bad)  
   14000edc3:	sbb    BYTE PTR [rsi+0x61],dh
   14000edc6:	push   rcx
   14000edc7:	(bad)
   14000edca:	adc    BYTE PTR [rbx+0x1c588c1e],0x7e
   14000edd1:	(bad)  
   14000edd2:	mov    edx,0x176d2198
   14000edd7:	loopne 0x14000ed5e
   14000edd9:	cs out 0x6c,eax
   14000eddc:	data16 and BYTE PTR [rdi+0x69],ah
   14000ede0:	(bad)  
   14000ede1:	ret    0x5b6b
   14000ede4:	lods   eax,DWORD PTR ds:[rsi]
   14000ede5:	jmp    0x14000ee21
   14000ede7:	or     BYTE PTR [rdx+r12*2+0x11f84ec1],dl
   14000edef:	es pop rax
   14000edf1:	and    DWORD PTR [rdx+0x1c],0xb77e3cec
   14000edf8:	rex.RB sahf 
   14000edfa:	jo     0x14000ee44
   14000edfc:	rex.X iret 
   14000edfe:	scas   eax,DWORD PTR es:[rdi]
   14000edff:	jne    0x14000ee5b
   14000ee01:	or     DWORD PTR [rcx-0xf],0x30f0fa38
   14000ee08:	rex.WRXB std 
   14000ee0a:	jmp    0x1b3e2a0ae
   14000ee0f:	lahf   
   14000ee10:	rex.XB pop r13
   14000ee13:	sub    BYTE PTR [rbp+0x4d],cl
   14000ee16:	(bad)  
   14000ee17:	cwde   
   14000ee18:	test   BYTE PTR [rsi-0x72705f9f],0x39
   14000ee1f:	sti    
   14000ee20:	lods   al,BYTE PTR ds:[rsi]
   14000ee21:	(bad)  
   14000ee22:	stc    
   14000ee23:	sub    eax,0xa952a4d3
   14000ee28:	adc    bl,cl
   14000ee2a:	jmp    0xb5ba
   14000ee2e:	cmp    DWORD PTR [rbx+rbp*8-0x53],edi
   14000ee32:	sbb    al,0xf8
   14000ee34:	(bad)  
   14000ee35:	test   DWORD PTR [rcx-0x6b],0xd9b1644a
   14000ee3c:	pop    rdi
   14000ee3d:	jg     0x14000edc6
   14000ee3f:	jl     0x14000ee0a
   14000ee41:	mov    DWORD PTR [rax+0x8],ebp
   14000ee44:	add    eax,DWORD PTR [rdx*1-0x1358c519]
   14000ee4b:	(bad)  
   14000ee4c:	sub    eax,esp
   14000ee4e:	shr    BYTE PTR [rdi],1
   14000ee50:	(bad)  
   14000ee51:	loopne 0x14000ede5
   14000ee53:	xor    eax,0xefefe9ab
   14000ee58:	out    0x89,eax
   14000ee5a:	sbb    eax,0xe62a514f
   14000ee5f:	mov    DWORD PTR [rsi-0x1d],eax
   14000ee62:	rex.W
   14000ee63:	rex.WRX leave 
   14000ee65:	rep ins BYTE PTR es:[rdi],dx
   14000ee67:	jb     0x14000eedf
   14000ee69:	add    DWORD PTR [rcx-0x55],0xaeb50302
   14000ee70:	rex.R mov bl,0xb2
   14000ee73:	xor    bh,al
   14000ee75:	call   QWORD PTR [rsi]
   14000ee77:	add    eax,DWORD PTR [rax+0x10333773]
   14000ee7d:	sbb    al,0x1b
   14000ee7f:	(bad)  
   14000ee80:	ret    
   14000ee81:	ret    0xc066
   14000ee84:	cmp    edx,DWORD PTR [rdx-0x497f585a]
   14000ee8a:	cmc    
   14000ee8b:	out    dx,eax
   14000ee8c:	(bad)  
   14000ee8d:	in     eax,0xbb
   14000ee8f:	popf   
   14000ee90:	outs   dx,BYTE PTR ds:[rsi]
   14000ee91:	icebp  
   14000ee92:	(bad)  
   14000ee93:	sti    
   14000ee94:	cmp    edi,DWORD PTR [rdi+0x5b]
   14000ee97:	ret    0xd797
   14000ee9a:	(bad)  
   14000ee9b:	movsxd ecx,DWORD PTR [rdi+0x558ebab8]
   14000eea1:	sub    ah,BYTE PTR [rcx+0x4d]
   14000eea4:	rex.WRB (bad) 
   14000eea6:	mov    WORD PTR [rsi+0x39ee7f92],cs
   14000eeac:	sahf   
   14000eead:	jge    0x14000ee8a
   14000eeaf:	fistp  DWORD PTR [rcx-0x7]
   14000eeb2:	jmp    0x1669c9006
   14000eeb7:	xchg   esi,eax
   14000eeb8:	(bad)  
   14000eeb9:	(bad)  
   14000eeba:	shl    BYTE PTR [rip+0xffffffffbde72d05],0x4b        # 0xfde81bc6
   14000eec1:	(bad)  
   14000eec2:	mov    edx,0x972950e0
   14000eec7:	rex.WB (bad) 
   14000eec9:	pop    rsi
   14000eeca:	rex.WR stos BYTE PTR es:[rdi],al
   14000eecc:	push   rdx
   14000eecd:	loope  0x14000ee9f
   14000eecf:	xlat   BYTE PTR ds:[rbx]
   14000eed0:	mov    esi,0xdd77f3c6
   14000eed5:	rex.RB seto BYTE PTR [r14+rcx*8-0x21]
   14000eedb:	inc    eax
   14000eedd:	mov    ebx,0x101fbc9e
   14000eee2:	fadd   QWORD PTR [rcx]
   14000eee4:	push   rcx
   14000eee5:	jbe    0x14000eea5
   14000eee7:	jae    0x14000eed3
   14000eee9:	(bad)  
   14000eeea:	mov    esi,0xff8de94f
   14000eeef:	xchg   ebx,eax
   14000eef0:	and    r8b,BYTE PTR [rcx+0x3a]
   14000eef4:	cdq    
   14000eef5:	movabs al,ds:0xb5292074cac31852
   14000eefe:	cmp    al,0x40
   14000ef00:	fld    QWORD PTR [rbp+riz*4-0x4d]
   14000ef04:	enter  0x159,0x6
   14000ef08:	and    al,0x22
   14000ef0a:	stos   BYTE PTR es:[rdi],al
   14000ef0b:	out    0xcb,al
   14000ef0d:	add    al,0xf4
   14000ef0f:	out    0x5f,eax
   14000ef11:	(bad)  
   14000ef12:	(bad)  
   14000ef13:	(bad)  [rax-0x41]
   14000ef16:	or     eax,DWORD PTR [rbp+0x5a]
   14000ef19:	(bad)  
   14000ef1a:	add    BYTE PTR [rdx+0x723a062f],bl
   14000ef20:	push   rbx
   14000ef21:	sub    al,0x22
   14000ef23:	lahf   
   14000ef24:	jbe    0x14000ef57
   14000ef26:	nop
   14000ef27:	(bad)  
   14000ef28:	pop    rdx
   14000ef29:	pop    rax
   14000ef2a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ef2b:	rex.RB push r15
   14000ef2d:	ss jmp 0x14000ef7c
   14000ef30:	mov    ch,0x6d
   14000ef32:	(bad)  
   14000ef33:	xor    al,0x2e
   14000ef35:	(bad)  
   14000ef36:	push   rax
   14000ef37:	mov    DWORD PTR [rip+0xffffffff84855490],esp        # 0xc48643cd
   14000ef3d:	lock mov ch,0x9a
   14000ef40:	adc    cl,BYTE PTR [rsi+0x5]
   14000ef43:	lahf   
   14000ef44:	rex.XB add dil,BYTE PTR [r10+0x6cb2c7fb]
   14000ef4b:	(bad)
   14000ef4e:	int3   
   14000ef4f:	leave  
   14000ef50:	rex.WB int3 
   14000ef52:	test   eax,0x91918c29
   14000ef57:	push   0xffffffffffffffa6
   14000ef59:	and    BYTE PTR [rax],dh
   14000ef5b:	je     0x14000ef5c
   14000ef5d:	jge    0x14000efc7
   14000ef5f:	lahf   
   14000ef60:	stc    
   14000ef61:	or     al,0xdd
   14000ef63:	out    dx,eax
   14000ef64:	jp     0x14000efbd
   14000ef66:	xor    eax,0xd4c4202f
   14000ef6b:	ja     0x14000efe8
   14000ef6d:	neg    DWORD PTR [rcx-0x7a]
   14000ef70:	(bad)
   14000ef74:	mov    edx,0x139422e8
   14000ef79:	(bad)  
   14000ef7a:	fdivr  DWORD PTR [rdi-0x5]
   14000ef7d:	in     eax,dx
   14000ef7e:	sbb    al,0xb9
   14000ef80:	neg    DWORD PTR [rsi-0x6a]
   14000ef83:	add    BYTE PTR [rcx-0x56],dl
   14000ef86:	push   0xffffffffffffffe2
   14000ef88:	(bad)  
   14000ef89:	rex.XB or dil,BYTE PTR [r9+0x1f]
   14000ef8d:	(bad)  
   14000ef8e:	mov    ebp,0x99ea7008
   14000ef93:	popf   
   14000ef94:	rex.WR adc al,0xcb
   14000ef97:	sub    al,0xef
   14000ef99:	int3   
   14000ef9a:	xchg   edx,eax
   14000ef9b:	leave  
   14000ef9c:	cmp    BYTE PTR fs:[rdx+rsi*1],bh
   14000efa0:	mov    WORD PTR [rsi-0x54d6d813],ss
   14000efa6:	mov    esi,0x3545c429
   14000efab:	and    dl,BYTE PTR [rax]
   14000efad:	fadd   st,st(7)
   14000efaf:	stc    
   14000efb0:	add    eax,DWORD PTR [rsi+0x710ffb46]
   14000efb6:	add    DWORD PTR [rsi],edx
   14000efb8:	movabs al,ds:0xcaf40c5b34000cb4
   14000efc1:	(bad)  
   14000efc3:	lock imul r14,QWORD PTR [r15],0xfffffffffffffff6
   14000efc8:	iret   
   14000efc9:	mov    ecx,0x591ec818
   14000efce:	rex.WRB
   14000efcf:	es rex.WRX in eax,0xbc
   14000efd3:	cwde   
   14000efd4:	mov    esi,0x34c4492c
   14000efd9:	or     eax,0x2e7964a3
   14000efde:	adc    ch,0xd1
   14000efe1:	adc    r8d,r9d
   14000efe4:	cmp    cl,BYTE PTR [rdi]
   14000efe6:	movabs al,ds:0xccda0467676d5d89
   14000efef:	mov    edi,0x8408046d
   14000eff4:	stos   BYTE PTR es:[rdi],al
   14000eff5:	(bad)  
   14000eff6:	jmp    0x160e1c635
   14000effb:	(bad)  
   14000effc:	hlt    
   14000effd:	xor    al,0x56
   14000efff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f000:	push   rdx
   14000f001:	rex.XB pop r10
   14000f003:	jmp    0x1b42c3ae0
   14000f008:	sbb    eax,0x77465cb3
   14000f00d:	rex.WR jnp 0x14000f08f
   14000f010:	mov    BYTE PTR [rdi+0x5877ecc6],ch
   14000f016:	dec    DWORD PTR [rsi+0x7da41e9e]
   14000f01c:	sti    
   14000f01d:	fdivr  st,st(5)
   14000f01f:	mov    ch,0xaf
   14000f021:	xor    esi,esi
   14000f023:	(bad)  
   14000f024:	push   rbx
   14000f025:	sub    al,0xc3
   14000f027:	ss jrcxz 0x14000efad
   14000f02a:	push   rdx
   14000f02b:	in     eax,dx
   14000f02c:	imul   ebp,DWORD PTR [rdi+rbp*1-0x3],0x63
   14000f031:	mov    ecx,0x1501adf
   14000f036:	rex.WB (bad) 
   14000f038:	sbb    BYTE PTR [rbx],bl
   14000f03a:	(bad)  
   14000f03b:	out    0xa2,al
   14000f03d:	sahf   
   14000f03e:	cs jp  0x14000f0bb
   14000f041:	jp     0x14000f07b
   14000f043:	je     0x14000f0a7
   14000f045:	(bad)  
   14000f046:	push   rbx
   14000f047:	rcl    DWORD PTR [rbx-0x6c],cl
   14000f04a:	or     al,0x13
   14000f04c:	rex.WB stos BYTE PTR es:[rdi],al
   14000f04e:	popf   
   14000f04f:	and    eax,ebx
   14000f051:	ins    DWORD PTR es:[rdi],dx
   14000f052:	call   QWORD PTR [rbp-0x13]
   14000f055:	lock sar DWORD PTR [rax],cl
   14000f058:	jl     0x14000f0d1
   14000f05a:	test   BYTE PTR [rcx-0x6102365f],0xd9
   14000f061:	xlat   BYTE PTR ds:[rbx]
   14000f062:	pop    rdi
   14000f063:	mov    al,0xd2
   14000f065:	xor    al,BYTE PTR [rax]
   14000f067:	rex xchg ebx,eax
   14000f069:	xor    eax,DWORD PTR [rbx]
   14000f06b:	rcr    esp,0x67
   14000f06e:	(bad)  
   14000f06f:	xor    cl,BYTE PTR [rbp+0xb]
   14000f072:	mov    ebp,0x6eba3a2
   14000f077:	mov    edx,0x31a8051e
   14000f07c:	sub    eax,0x9720862b
   14000f081:	retf   
   14000f082:	(bad)  
   14000f083:	(bad)  
   14000f084:	fst    DWORD PTR es:[rip+0xffffffff952c182b]        # 0xd52d08b6
   14000f08b:	xor    DWORD PTR [rbp+0x6e5bba78],ebx
   14000f091:	jmp    0x14000f01f
   14000f093:	sti    
   14000f094:	jbe    0x14000f02e
   14000f096:	rex.WRB mov r14b,0x6b
   14000f099:	repz (bad) 
   14000f09d:	xchg   ebp,eax
   14000f09e:	loope  0x14000f101
   14000f0a0:	lods   al,BYTE PTR ds:[rsi]
   14000f0a1:	push   rdx
   14000f0a2:	test   eax,0xb1d6ad8e
   14000f0a7:	sub    eax,0x7f6fe580
   14000f0ac:	cmp    esi,ecx
   14000f0ae:	(bad)  
   14000f0b0:	sbb    eax,0xf8080ef2
   14000f0b5:	movsxd edi,edx
   14000f0b7:	xor    eax,0x9dfcefca
   14000f0bc:	call   0x1783615ad
   14000f0c1:	enter  0x3f2f,0xfc
   14000f0c5:	(bad)  
   14000f0c6:	int3   
   14000f0c7:	rcl    DWORD PTR [rcx-0x6],1
   14000f0ca:	mov    cl,0x95
   14000f0cc:	fistp  WORD PTR [rbp-0x25c02f35]
   14000f0d2:	sti    
   14000f0d3:	jne    0x14000f09b
   14000f0d5:	jge    0x14000f0c6
   14000f0d7:	(bad)  
   14000f0d8:	(bad)  
   14000f0d9:	(bad)  
   14000f0da:	sbb    al,0xdc
   14000f0dc:	cmc    
   14000f0dd:	xchg   ebx,eax
   14000f0de:	(bad)  
   14000f0df:	(bad)  
   14000f0e0:	and    DWORD PTR [rdi-0x27],ebp
   14000f0e3:	fs (bad) 
   14000f0e5:	cmp    al,0x91
   14000f0e7:	jbe    0x14000f07c
   14000f0e9:	mov    al,bh
   14000f0eb:	rex.W
   14000f0ec:	addr32 mov bl,0x20
   14000f0ef:	rex.WB faddp st(4),st
   14000f0f2:	sbb    al,0xba
   14000f0f4:	(bad)  
   14000f0f5:	jp     0x14000f15b
   14000f0f7:	pushf  
   14000f0f8:	(bad)  
   14000f0f9:	jl     0x14000f0a2
   14000f0fb:	cmp    ecx,esp
   14000f0fd:	cmp    edi,DWORD PTR [rbx-0x3a]
   14000f100:	(bad)  
   14000f101:	or     esi,ecx
   14000f103:	adc    DWORD PTR [rax],esi
   14000f105:	push   rsp
   14000f106:	xor    eax,DWORD PTR [rcx]
   14000f108:	sub    ebx,0xffffffdb
   14000f10b:	add    BYTE PTR cs:[rsi+rdx*1+0xc553400],dh
   14000f113:	adc    al,0x8b
   14000f115:	(bad)  
   14000f116:	pop    rdi
   14000f117:	or     al,0x24
   14000f119:	test   BYTE PTR [rax-0x51],al
   14000f11c:	call   0xe63b1b75
   14000f121:	push   rcx
   14000f122:	sbb    eax,0x8f0f8313
   14000f127:	and    DWORD PTR [rdx+rcx*1-0x7b],esp
   14000f12b:	add    ah,BYTE PTR [rbp-0x343a76ae]
   14000f131:	sti    
   14000f132:	cmp    DWORD PTR [rdx+0x29],edx
   14000f135:	movsxd ebx,DWORD PTR [rdx-0x574232b2]
   14000f13b:	adc    al,BYTE PTR [rax-0x7d4dfefe]
   14000f141:	gs call 0xd844345f
   14000f147:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f148:	rex.WRX fxch st(2)
   14000f14b:	rex.WXB push r13
   14000f14d:	cmp    DWORD PTR [rip+0x78d10060],eax        # 0x1b8d1f1b3
   14000f153:	pushf  
   14000f154:	in     eax,0x37
   14000f156:	fisttp WORD PTR [rdx+rdi*2-0x341b0a03]
   14000f15d:	mov    WORD PTR gs:[rsi+rdi*4-0x7a],?
   14000f162:	in     al,dx
   14000f163:	repz xbegin 0x14860d0c7
   14000f16a:	rcl    esp,0xc8
   14000f16d:	or     BYTE PTR [rbx],ch
   14000f16f:	(bad)  
   14000f170:	ins    BYTE PTR es:[rdi],dx
   14000f171:	(bad)  
   14000f172:	(bad)
   14000f175:	rex.WR fnsave [rdi+0x1f]
   14000f179:	adc    edx,ebp
   14000f17b:	rex.RXB ja 0x14000f1bd
   14000f17e:	adc    BYTE PTR [rax-0x43],al
   14000f181:	mov    dl,0xfb
   14000f183:	(bad)  
   14000f184:	(bad)  
   14000f185:	jno    0x14000f171
   14000f187:	icebp  
   14000f188:	test   DWORD PTR [rax-0xe],esp
   14000f18b:	stc    
   14000f18c:	std    
   14000f18d:	or     cl,dh
   14000f18f:	stos   DWORD PTR es:[rdi],eax
   14000f190:	and    al,0x93
   14000f192:	rex.WB test BYTE PTR [r13-0x28],spl
   14000f196:	sbb    DWORD PTR [rbx+0x45aa8e86],ecx
   14000f19c:	mov    BYTE PTR [rax+0x553dacf6],ch
   14000f1a2:	xor    cl,BYTE PTR [rsi]
   14000f1a4:	pop    rdi
   14000f1a5:	ret    0x418f
   14000f1a8:	pop    rcx
   14000f1a9:	(bad)  
   14000f1aa:	sub    BYTE PTR [rax],bh
   14000f1ac:	mov    ch,0xfa
   14000f1ae:	xchg   edx,eax
   14000f1af:	push   rsp
   14000f1b0:	in     eax,dx
   14000f1b1:	and    eax,0xb80ed6e8
   14000f1b6:	fnstsw WORD PTR [rbp+0x66]
   14000f1b9:	add    al,BYTE PTR [rsi-0x72bd7d47]
   14000f1bf:	add    al,0x2d
   14000f1c1:	(bad)  
   14000f1c2:	mov    dh,0xb
   14000f1c4:	add    BYTE PTR [rax+rdx*1+0x3177cc00],dh
   14000f1cb:	nop
   14000f1cc:	gs pop rdx
   14000f1ce:	push   rsp
   14000f1cf:	sub    bh,BYTE PTR [rdx]
   14000f1d1:	jp     0x14000f198
   14000f1d3:	push   0xffffffff88e6399c
   14000f1d8:	and    DWORD PTR [rdx+rcx*4],esi
   14000f1db:	(bad)
   14000f1de:	jl     0x14000f17e
   14000f1e0:	in     eax,0xcb
   14000f1e2:	xchg   esi,eax
   14000f1e3:	jae    0x14000f234
   14000f1e5:	addr32 (bad) 
   14000f1e7:	xchg   esi,eax
   14000f1e8:	imul   eax,DWORD PTR [rax+0x379d3733],0xd8a28d3f
   14000f1f2:	test   eax,0x604fc7bb
   14000f1f7:	in     al,0xa6
   14000f1f9:	imul   edi,esp,0x6d
   14000f1fc:	or     ebx,DWORD PTR [rbx-0x27]
   14000f1ff:	add    al,0x10
   14000f201:	out    dx,eax
   14000f202:	jmp    0x17f48b768
   14000f207:	mov    dh,BYTE PTR [rbp+0x7cf92b75]
   14000f20d:	(bad)  
   14000f20e:	mov    bl,0x50
   14000f210:	lock int3 
   14000f212:	sti    
   14000f213:	(bad)  
   14000f214:	clc    
   14000f215:	mov    esi,0xbc07f46f
   14000f21a:	in     eax,0x9e
   14000f21c:	rex.XB xchg r8d,ebx
   14000f21f:	hlt    
   14000f220:	loope  0x14000f231
   14000f222:	jae    0x14000f214
   14000f224:	jge    0x14000f215
   14000f226:	movsxd edi,DWORD PTR [rdi+rax*8+0xe]
   14000f22a:	adc    al,0xaa
   14000f22c:	and    edi,DWORD PTR [rsi+0x202e320b]
   14000f232:	add    al,0xfd
   14000f234:	jg     0x14000f20f
   14000f236:	mov    bh,0x8d
   14000f238:	test   DWORD PTR [rbp-0x7b],ebp
   14000f23b:	or     BYTE PTR [rsi+rbx*1+0x40],ch
   14000f23f:	(bad)  
   14000f240:	jno    0x14000f25e
   14000f242:	and    DWORD PTR [rbp+rbx*4+0x4c2c24f4],eax
   14000f249:	push   rbx
   14000f24a:	test   DWORD PTR [rsi-0x5b89a17],0x440c8c6e
   14000f254:	push   rbp
   14000f255:	xchg   ebp,eax
   14000f256:	cwde   
   14000f257:	push   rsi
   14000f258:	jne    0x14000f29a
   14000f25a:	push   0xffffffffffffffe2
   14000f25c:	cli    
   14000f25d:	xchg   BYTE PTR [rcx+0x49],cl
   14000f260:	xlat   BYTE PTR ds:[rbx]
   14000f261:	xor    DWORD PTR [rdx+0x25],ecx
   14000f264:	scas   eax,DWORD PTR es:[rdi]
   14000f265:	test   al,0x48
   14000f267:	test   eax,0xa2ec18b3
   14000f26c:	and    ch,BYTE PTR [rdi+0x1f99fd6]
   14000f272:	xchg   BYTE PTR [rsi+0x22],dh
   14000f275:	nop
   14000f276:	sub    eax,0xd00b532d
   14000f27b:	jl     0x14000f2ae
   14000f27d:	shr    ah,1
   14000f27f:	(bad)  
   14000f280:	sbb    BYTE PTR [rsi],ah
   14000f282:	(bad)
   14000f285:	rex.WX pop rcx
   14000f287:	andnps xmm7,XMMWORD PTR [rsi+0x2f]
   14000f28b:	xchg   ebp,eax
   14000f28c:	xlat   BYTE PTR ds:[rbx]
   14000f28d:	jns    0x14000f228
   14000f28f:	push   0xa
   14000f291:	pop    rbp
   14000f292:	xlat   BYTE PTR ds:[rbx]
   14000f293:	cdq    
   14000f294:	cwde   
   14000f295:	cwde   
   14000f296:	movabs al,ds:0x4bd04be2fd07a7a7
   14000f29f:	and    eax,0x13f4872c
   14000f2a4:	add    al,BYTE PTR [rsp+0x544a9663]
   14000f2ab:	mov    ds,WORD PTR [rdi]
   14000f2ad:	rex.XB iret 
   14000f2af:	rex.WRB jnp 0x14000f2ad
   14000f2b2:	jb     0x14000f249
   14000f2b4:	pop    rsi
   14000f2b5:	ja     0x14000f24d
   14000f2b7:	fxch   st(5)
   14000f2b9:	fwait
   14000f2ba:	pop    rcx
   14000f2bb:	cmc    
   14000f2bc:	(bad)  
   14000f2bd:	scas   eax,DWORD PTR es:[rdi]
   14000f2be:	movabs ds:0x142cc397314add6f,al
   14000f2c7:	mov    esp,0xe9a0fe9c
   14000f2cc:	out    dx,eax
   14000f2cd:	repnz (bad) 
   14000f2cf:	(bad)  
   14000f2d0:	(bad)  
   14000f2d1:	rex jle 0x14000f33e
   14000f2d4:	mov    ah,bh
   14000f2d6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f2d7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f2d8:	pop    rcx
   14000f2d9:	jne    0x14000f2a6
   14000f2db:	sub    eax,0xacae5624
   14000f2e0:	add    DWORD PTR [rdx],ebx
   14000f2e2:	xchg   edi,eax
   14000f2e3:	fnstenv [rdi-0x69]
   14000f2e6:	(bad)  
   14000f2e7:	xchg   edi,eax
   14000f2e8:	adc    bh,BYTE PTR [rax-0x51]
   14000f2eb:	add    al,0xd7
   14000f2ed:	rex.WRB out 0x50,eax
   14000f2f0:	push   rbp
   14000f2f1:	(bad)  
   14000f2f2:	add    rdx,QWORD PTR [r14]
   14000f2f5:	pop    rsi
   14000f2f6:	rex.WRB cmp r15,0x5e
   14000f2fa:	(bad)  
   14000f2fb:	fild   QWORD PTR [rbx]
   14000f2fd:	push   rcx
   14000f2fe:	add    edx,DWORD PTR [rdx+rax*2+0x8]
   14000f302:	scas   eax,DWORD PTR es:[rdi]
   14000f303:	push   rsi
   14000f304:	(bad)  
   14000f305:	popf   
   14000f306:	mov    bl,dl
   14000f308:	cdq    
   14000f309:	rex.WRX rcr rbx,1
   14000f30c:	xchg   ecx,eax
   14000f30d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f30e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f30f:	and    ecx,DWORD PTR [rbx-0x79]
   14000f312:	push   rbx
   14000f313:	cmp    eax,DWORD PTR [rax-0x7a8d3afc]
   14000f319:	push   rbx
   14000f31a:	mov    ecx,0xf8d1516a
   14000f31f:	(bad)  
   14000f320:	adc    al,0x53
   14000f322:	stc    
   14000f323:	add    ah,BYTE PTR [rbp-0x51493aae]
   14000f329:	test   BYTE PTR [rbp-0xd],bl
   14000f32c:	out    dx,eax
   14000f32d:	mul    BYTE PTR [rdi]
   14000f32f:	add    BYTE PTR [rbx],bl
   14000f331:	(bad)  
   14000f332:	cld    
   14000f333:	push   rax
   14000f335:	popf   
   14000f336:	push   rbx
   14000f337:	nop
   14000f338:	xchg   esi,eax
   14000f339:	ins    BYTE PTR es:[rdi],dx
   14000f33a:	mov    ebx,0xcb4b600
   14000f33f:	add    ah,cl
   14000f341:	rex.RXB xor DWORD PTR [r8-0x46b57df0],r10d
   14000f348:	rex.X mov cl,0x50
   14000f34b:	mov    dl,0x9b
   14000f34d:	jge    0x14000f31b
   14000f34f:	sub    ch,dl
   14000f351:	(bad)  
   14000f352:	ficom  WORD PTR [rax+0x250ae493]
   14000f358:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000f35a:	adc    ah,BYTE PTR [rsi-0x6d082d97]
   14000f360:	jmp    0x14000f2fa
   14000f362:	cmp    dh,BYTE PTR [rbp+0xa]
   14000f365:	addr32 rex.W mov spl,0x59
   14000f369:	jle    0x14000f33e
   14000f36b:	movabs al,ds:0x4c4c36ce6638fc72
   14000f374:	out    0x65,eax
   14000f376:	(bad)  
   14000f377:	sub    edi,DWORD PTR [rdi+0x7b5f7405]
   14000f37d:	sub    eax,0x34fe9ffd
   14000f382:	vdivss xmm1,xmm4,xmm2
   14000f386:	adc    edx,DWORD PTR [rbx]
   14000f388:	pop    rax
   14000f389:	in     eax,0x72
   14000f38b:	(bad)  
   14000f38c:	bnd jnp 0x14000f370
   14000f38f:	ds ret 
   14000f391:	movabs al,ds:0xf34d03ebec90a952
   14000f39a:	mov    BYTE PTR [rcx-0x9],al
   14000f39d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f39e:	stos   BYTE PTR es:[rdi],al
   14000f39f:	sub    dl,BYTE PTR [rbx+0x32704e27]
   14000f3a5:	xchg   ebp,eax
   14000f3a6:	(bad)  
   14000f3a7:	std    
   14000f3a8:	(bad)  
   14000f3a9:	sbb    DWORD PTR ds:[rdx+0x40167acd],0x9557d298
   14000f3b4:	fsubr  QWORD PTR [rsi]
   14000f3b6:	fist   WORD PTR [rbp+0x41006a91]
   14000f3bc:	jne    0x14000f37c
   14000f3be:	mov    esp,DWORD PTR [rcx+0x54]
   14000f3c1:	add    DWORD PTR [rax+0x8],eax
   14000f3c4:	sub    al,0xc3
   14000f3c6:	hlt    
   14000f3c7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f3c8:	cs jae 0x14000f42a
   14000f3cb:	(bad)  
   14000f3cc:	lock push rdi
   14000f3ce:	fdivr  DWORD PTR [rbp-0x7b9f4e52]
   14000f3d4:	rex xchg ecx,eax
   14000f3d6:	and    al,0x62
   14000f3d8:	adc    DWORD PTR [rbp+0x5741224c],ecx
   14000f3de:	es in  eax,dx
   14000f3e0:	add    DWORD PTR [rbx+0x36],eax
   14000f3e3:	xchg   ebp,eax
   14000f3e4:	and    al,0x1a
   14000f3e6:	mov    DWORD PTR [rax+0x9],esp
   14000f3e9:	enter  0xaafb,0xd
   14000f3ed:	rex.RXB
   14000f3ee:	rex.WRX
   14000f3ef:	rex.WRB jb 0x14000f45c
   14000f3f2:	push   0xffffffffffffff9a
   14000f3f4:	jmp    0xe5738575
   14000f3f9:	(bad)  
   14000f3fa:	gs pop rdx
   14000f3fc:	rex.WRX
   14000f3fd:	push   r9
   14000f3ff:	sub    eax,0xf9fc3430
   14000f404:	data16 cli 
   14000f406:	jnp    0x14000f389
   14000f408:	rex.W retf 
   14000f40a:	mov    eax,0x316cd00
   14000f40f:	in     eax,0x1b
   14000f411:	cld    
   14000f412:	rcl    BYTE PTR [rsi-0x14d6ae9b],1
   14000f418:	push   rsp
   14000f419:	retf   0x137a
   14000f41c:	rex.RXB adc r9d,r8d
   14000f41f:	rex.WRX (bad) 
   14000f421:	test   eax,0xd5550210
   14000f426:	sub    ah,ah
   14000f428:	sub    eax,0xb93cf9f2
   14000f42d:	pop    rsp
   14000f42e:	mov    cs,ebx
   14000f430:	pop    rsi
   14000f431:	repnz push rdx
   14000f433:	jle    0x14000f431
   14000f435:	push   rdi
   14000f436:	jg     0x14000f485
   14000f438:	pop    rdx
   14000f439:	sub    BYTE PTR [rcx+rbx*8],0x31
   14000f43d:	jg     0x14000f43c
   14000f43f:	call   0x104380095
   14000f444:	xchg   rbp,rax
   14000f446:	gs ja  0x14000f476
   14000f449:	add    BYTE PTR [rbp-0x51],0x78
   14000f44d:	add    eax,0x2f7defbd
   14000f452:	stc    
   14000f453:	pop    rax
   14000f454:	or     al,0x63
   14000f456:	ins    BYTE PTR es:[rdi],dx
   14000f457:	int3   
   14000f458:	cs retf 
   14000f45a:	jne    0x14000f4a2
   14000f45c:	jnp    0x14000f40d
   14000f45e:	mov    BYTE PTR [r9+0x2b],bpl
   14000f462:	pop    rsp
   14000f463:	vaddps xmm15,xmm9,XMMWORD PTR [rax+rsi*1]
   14000f468:	rex (bad) 
   14000f46a:	xchg   ecx,eax
   14000f46b:	rex.RXB mov r8b,0xb2
   14000f46e:	pop    rcx
   14000f46f:	rex.R sub al,0x86
   14000f472:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f473:	push   rdi
   14000f474:	iret   
   14000f475:	pop    rbx
   14000f476:	xchg   edx,eax
   14000f477:	and    al,0x62
   14000f479:	mov    cl,0x18
   14000f47b:	rex.XB jnp 0x14000f475
   14000f47e:	xchg   edx,eax
   14000f47f:	fdivr  QWORD PTR [rsi-0x2348f263]
   14000f485:	ret    0x77ce
   14000f488:	mov    edi,0xea3ba89b
   14000f48d:	rex.WB out dx,al
   14000f48f:	je     0x14000f4ef
   14000f491:	idiv   BYTE PTR [rax-0x340b5898]
   14000f497:	sahf   
   14000f498:	adc    cl,BYTE PTR [rax]
   14000f49a:	jnp    0x14000f4af
   14000f49c:	sub    al,0xec
   14000f49e:	sbb    al,BYTE PTR [rsi]
   14000f4a0:	rex.WXB xchg r10,rax
   14000f4a2:	ror    BYTE PTR [rbx+rdx*1+0x39],1
   14000f4a6:	(bad)  
   14000f4a8:	movabs al,ds:0x6b775a8936077cee
   14000f4b1:	ret    0x58ef
   14000f4b4:	add    esp,DWORD PTR [rbp-0x54]
   14000f4b7:	jmp    0x14000f4f0
   14000f4b9:	sbb    al,0x52
   14000f4bb:	lods   al,BYTE PTR ds:[rsi]
   14000f4bc:	movabs ds:0x705f956889bea93a,eax
   14000f4c5:	sbb    esp,DWORD PTR [rsi+0x176186e8]
   14000f4cb:	adc    eax,0x76af515
   14000f4d0:	(bad)  
   14000f4d1:	scas   eax,DWORD PTR es:[rdi]
   14000f4d2:	rex.WB test al,0xda
   14000f4d5:	clc    
   14000f4d6:	jl     0x14000f4b2
   14000f4d8:	cs add al,dl
   14000f4db:	rex.X (bad) 
   14000f4dd:	sar    BYTE PTR [rbx],0xdf
   14000f4e0:	(bad)  
   14000f4e1:	test   DWORD PTR [esi+ecx*2+0x4e],0xa3e0f1dd
   14000f4ea:	cmp    ebx,DWORD PTR [rax-0x2e]
   14000f4ed:	mov    edi,0x2bf57a4a
   14000f4f2:	scas   al,BYTE PTR es:[rdi]
   14000f4f3:	xlat   BYTE PTR ds:[rbx]
   14000f4f4:	push   rdx
   14000f4f5:	leave  
   14000f4f6:	clc    
   14000f4f7:	or     eax,0xaeeec586
   14000f4fc:	scas   al,BYTE PTR es:[rdi]
   14000f4fd:	out    dx,al
   14000f4fe:	scas   eax,DWORD PTR es:[rdi]
   14000f4ff:	(bad)  
   14000f500:	pop    rdx
   14000f501:	mov    dl,0xf8
   14000f503:	push   rbp
   14000f504:	sbb    eax,0x61439d1d
   14000f509:	(bad)  
   14000f50a:	mov    ch,0xa1
   14000f50c:	sbb    ecx,DWORD PTR [rdi+rbx*1]
   14000f50f:	(bad)  
   14000f510:	(bad)  
   14000f511:	mov    cl,0x7d
   14000f513:	cmp    edi,DWORD PTR [rax+0x7e]
   14000f516:	(bad)  
   14000f517:	(bad)  
   14000f518:	cmp    al,dh
   14000f51a:	int3   
   14000f51b:	movsxd ecx,DWORD PTR [rbx*1+0x21528e7e]
   14000f522:	xlat   BYTE PTR ds:[rbx]
   14000f523:	lock js 0x14000f509
   14000f526:	mov    ecx,0x952f93c
   14000f52b:	fnsave [rcx+rdx*1]
   14000f52e:	rex.W enter 0x4ef1,0xf2
   14000f533:	stc    
   14000f534:	cmp    al,0xe3
   14000f536:	jrcxz  0x14000f51b
   14000f538:	ins    BYTE PTR es:[rdi],dx
   14000f539:	pop    rdx
   14000f53a:	mov    edi,0x158adc9e
   14000f53f:	sbb    BYTE PTR [rbp+0x6324860a],dl
   14000f545:	mov    WORD PTR [rax+riz*4+0x61634f4f],cs
   14000f54c:	adc    edi,DWORD PTR [rsi+rcx*8+0x5c]
   14000f550:	(bad)  
   14000f551:	fidiv  WORD PTR [rdx-0x7]
   14000f554:	(bad)  
   14000f555:	cld    
   14000f556:	add    ebp,ebx
   14000f558:	out    dx,eax
   14000f559:	jns    0x14000f56a
   14000f55b:	cmp    DWORD PTR [rbp-0x5d],ecx
   14000f55e:	xor    dh,BYTE PTR [rdx]
   14000f560:	(bad)  
   14000f561:	shl    DWORD PTR [rax],1
   14000f563:	(bad)  
   14000f564:	outs   dx,DWORD PTR ds:[rsi]
   14000f565:	(bad)  
   14000f566:	xchg   BYTE PTR es:[rbp-0x4f],ah
   14000f56a:	fs int 0x1a
   14000f56d:	repnz mov edi,0xbfbb05f8
   14000f573:	repnz adc eax,0x4ff4ff72
   14000f579:	push   0xfffffffffd898aaa
   14000f57e:	loopne 0x14000f5ab
   14000f580:	mov    al,BYTE PTR [rdx-0x2d1f7b1e]
   14000f586:	jmp    0x12d771cbf
   14000f58b:	rex.X jle 0x14000f553
   14000f58e:	sub    ebx,DWORD PTR [rax-0x1]
   14000f591:	xchg   edi,eax
   14000f592:	jg     0x14000f5dd
   14000f594:	add    eax,0x6597c467
   14000f599:	fs leave 
   14000f59b:	sahf   
   14000f59c:	fisttp DWORD PTR [rdi-0x6f]
   14000f59f:	gs adc al,0xc9
   14000f5a2:	es loopne 0x14000f609
   14000f5a5:	pop    rcx
   14000f5a6:	rex.X xchg esi,eax
   14000f5a8:	push   r9
   14000f5aa:	and    al,0x64
   14000f5ac:	rex.WB
   14000f5ad:	xchg   r14d,eax
   14000f5af:	rex xchg ebp,eax
   14000f5b1:	rex xchg ecx,eax
   14000f5b3:	ins    BYTE PTR es:[rdi],dx
   14000f5b4:	mov    eax,DWORD PTR [rax+0x4a]
   14000f5b7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f5b8:	sar    BYTE PTR [rcx],0xe
   14000f5bb:	xchg   edx,eax
   14000f5bc:	in     al,dx
   14000f5bd:	mov    ah,0x3a
   14000f5bf:	mov    bl,0xea
   14000f5c1:	int3   
   14000f5c2:	out    dx,al
   14000f5c3:	push   rax
   14000f5c4:	imul   esp,DWORD PTR [rax+0x1a],0x202d6334
   14000f5cb:	rex.R (bad) 
   14000f5cd:	(bad)
   14000f5d0:	or     BYTE PTR [rbx+0x622428a6],al
   14000f5d6:	push   rcx
   14000f5d7:	cmp    dl,BYTE PTR [rdx+0x49]
   14000f5da:	mov    edx,0x3b7a19b3
   14000f5df:	cmp    ebp,eax
   14000f5e1:	(bad)  
   14000f5e2:	data16 rex.W (bad) 
   14000f5e5:	loop   0x14000f58f
   14000f5e7:	mov    cl,BYTE PTR [rdx-0x47530592]
   14000f5ed:	cmp    cl,dh
   14000f5ef:	outs   dx,DWORD PTR ds:[rsi]
   14000f5f0:	movabs eax,ds:0x5780000cb4ad7caa
   14000f5f9:	or     al,0x74
   14000f5fb:	(bad)  
   14000f5fc:	mov    ebp,0xba443ff7
   14000f601:	jae    0x14000f614
   14000f603:	mov    edi,0x4a579afe
   14000f608:	fld    TBYTE PTR [rsi]
   14000f60a:	ficomp WORD PTR [rdi+rbx*2]
   14000f60d:	mov    bh,0x6e
   14000f60f:	jne    0x14000f645
   14000f611:	cdq    
   14000f612:	sbb    rax,0xffffffff81637a06
   14000f618:	(bad)  
   14000f619:	and    BYTE PTR [rbx+0x37],al
   14000f61c:	sbb    BYTE PTR [rcx],bh
   14000f61e:	jns    0x14000f5bc
   14000f620:	test   eax,0xb3246391
   14000f625:	jge    0x14000f61b
   14000f627:	scas   eax,DWORD PTR es:[rdi]
   14000f628:	(bad)  [rdx-0x4a]
   14000f62b:	xor    ecx,DWORD PTR [rbp-0x179f63a2]
   14000f631:	enter  0xf241,0x53
   14000f635:	loope  0x14000f62a
   14000f637:	add    al,BYTE PTR [rbp+rsi*1+0x15]
   14000f63b:	fnsave [rax]
   14000f63d:	cdq    
   14000f63e:	retf   0x1817
   14000f641:	popf   
   14000f642:	pushf  
   14000f643:	loop   0x14000f63e
   14000f645:	adc    DWORD PTR [rbp+0x131ca989],ebx
   14000f64b:	adc    edx,DWORD PTR [rbx]
   14000f64d:	add    BYTE PTR [rbx+rdi*2-0x72361403],ch
   14000f654:	lea    esp,[rdx-0x6b]
   14000f657:	retf   
   14000f658:	push   rsp
   14000f659:	mov    dh,0x3c
   14000f65c:	gs (bad) 
   14000f65e:	mov    esp,0xb032fbfc
   14000f663:	hlt    
   14000f664:	cmc    
   14000f665:	scas   eax,DWORD PTR es:[rdi]
   14000f666:	and    esi,ebx
   14000f668:	out    0x37,al
   14000f66a:	push   rbx
   14000f66b:	push   rax
   14000f66c:	push   rbp
   14000f66d:	hlt    
   14000f66e:	icebp  
   14000f66f:	jno    0x14000f62c
   14000f671:	(bad)  
   14000f672:	ds shl ah,0x9b
   14000f676:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f677:	mov    DWORD PTR [rsi-0x39653715],ebp
   14000f67d:	xchg   edx,eax
   14000f67e:	adc    eax,0xf775382b
   14000f683:	fnstsw WORD PTR [rdi*8-0x6e3ed05b]
   14000f68a:	and    ebx,DWORD PTR [rax+0x79803c0f]
   14000f690:	test   DWORD PTR [rdi],0xa0091350
   14000f696:	or     al,BYTE PTR [rdx]
   14000f698:	(bad)  
   14000f699:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f69a:	movabs eax,ds:0x773b13966c991a6a
   14000f6a3:	sar    ch,cl
   14000f6a5:	(bad)  
   14000f6a6:	(bad)  
   14000f6a7:	mov    dl,0xf2
   14000f6a9:	jg     0x14000f6a8
   14000f6ab:	(bad)  
   14000f6ac:	sbb    eax,DWORD PTR [rsp+rbx*4]
   14000f6af:	sbb    al,0x6
   14000f6b1:	pop    rcx
   14000f6b2:	xchg   edx,eax
   14000f6b3:	push   rax
   14000f6b4:	pushf  
   14000f6b5:	cli    
   14000f6b6:	jnp    0x14000f67d
   14000f6b8:	stc    
   14000f6b9:	pop    rbx
   14000f6ba:	jbe    0x14000f719
   14000f6bc:	add    BYTE PTR [rcx],cl
   14000f6be:	push   rsp
   14000f6bf:	rex.WB
   14000f6c0:	rex.RX jno 0x14000f725
   14000f6c3:	cld    
   14000f6c4:	add    dl,BYTE PTR [rax+0x17]
   14000f6c7:	fstp   TBYTE PTR [rcx-0xb]
   14000f6ca:	pop    rsi
   14000f6cb:	out    0x5e,eax
   14000f6cd:	scas   eax,DWORD PTR es:[rdi]
   14000f6ce:	idiv   DWORD PTR [rax]
   14000f6d0:	test   DWORD PTR ds:[rsi],ecx
   14000f6d3:	call   rdi
   14000f6d5:	push   rax
   14000f6d6:	(bad)  
   14000f6d7:	add    al,0x85
   14000f6d9:	rex.RX outs dx,BYTE PTR ds:[rsi]
   14000f6db:	test   BYTE PTR [rax-0x5dde7e16],dh
   14000f6e1:	stos   BYTE PTR es:[rdi],al
   14000f6e2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f6e3:	loop   0x14000f716
   14000f6e5:	cmp    dl,BYTE PTR [rdx-0x37]
   14000f6e8:	cmp    ch,BYTE PTR [rsi]
   14000f6ea:	sar    bh,0xdd
   14000f6ed:	ror    BYTE PTR [rdx-0x3d27183a],0xd2
   14000f6f4:	push   rdx
   14000f6f5:	add    al,dh
   14000f6f7:	xor    edi,0x64b8b7bf
   14000f6fd:	jmp    0x14c9086d4
   14000f702:	(bad)  
   14000f703:	cmp    edi,eax
   14000f705:	xchg   ebx,eax
   14000f706:	(bad)  
   14000f707:	cld    
   14000f708:	(bad)  
   14000f709:	rex.WRX (bad) 
   14000f70b:	lea    esi,[rcx-0x3b]
   14000f70e:	test   BYTE PTR [rbx-0x47],0xe1
   14000f712:	cli    
   14000f713:	xchg   edi,eax
   14000f714:	pop    rax
   14000f715:	push   rdi
   14000f716:	pop    rbp
   14000f717:	jne    0x14000f6de
   14000f719:	retf   0x57ed
   14000f71c:	pop    rsi
   14000f71d:	fnstcw WORD PTR [rdi+0x6b015172]
   14000f723:	(bad)  
   14000f724:	adc    BYTE PTR [rdx-0x2],dl
   14000f727:	sub    BYTE PTR [rsi+rax*8-0x1bac75cf],dl
   14000f72e:	rex.WRXB or rax,0xffffffffc6818afa
   14000f734:	mov    ebp,0xf8c2a062
   14000f739:	add    DWORD PTR [rsi],esp
   14000f73b:	rex.RXB mov ss,r14d
   14000f73e:	sbb    eax,0x48b10047
   14000f743:	test   BYTE PTR [rdx+rbp*1+0x49],ch
   14000f747:	rex.WRXB
   14000f748:	ss rex.XB pop r15
   14000f74b:	addr32 (bad) 
   14000f74d:	std    
   14000f74e:	rex.WXB sti 
   14000f750:	sub    DWORD PTR [rax+riz*2+0x7a],edx
   14000f754:	jp     0x14000f6f0
   14000f756:	movabs eax,ds:0x923137a6fd5e21a1
   14000f75f:	iret   
   14000f760:	movabs eax,ds:0x7e7d54e48f61389f
   14000f769:	(bad)  
   14000f76a:	call   0x13412609e
   14000f76f:	je     0x14000f70b
   14000f771:	mov    ah,BYTE PTR [rbx-0x1b907904]
   14000f777:	ja     0x14000f7f6
   14000f779:	jg     0x14000f7d8
   14000f77b:	xlat   BYTE PTR ds:[rbx]
   14000f77c:	mov    DWORD PTR [rbp-0x4d],esp
   14000f77f:	hlt    
   14000f780:	fs mov bl,0x1c
   14000f783:	jmp    rsi
   14000f785:	(bad)  
   14000f786:	jns    0x14000f76e
   14000f788:	out    dx,eax
   14000f789:	call   FWORD PTR [rsi-0x42e7273c]
   14000f78f:	or     al,0x3b
   14000f792:	out    0x43,eax
   14000f794:	(bad)  
   14000f795:	add    BYTE PTR [rax],al
   14000f797:	and    BYTE PTR [rax],al
   14000f799:	rex.WB
   14000f79a:	rex.R
   14000f79b:	push   r12
   14000f79d:	sub    BYTE PTR [rdi+riz*8+0x5f],bh
   14000f7a1:	push   rcx
   14000f7a2:	(bad)  
   14000f7a3:	jp     0x14000f7ad
   14000f7a5:	xor    eax,0x73dbb19d
   14000f7aa:	test   eax,0xa2aaaa2a
   14000f7af:	imul   ebx,DWORD PTR [rdx],0x4e91a69a
   14000f7b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f7b6:	cmp    ecx,edi
   14000f7b8:	cld    
   14000f7b9:	rep lods al,BYTE PTR ds:[rsi]
   14000f7bb:	dec    al
   14000f7bd:	rex.RXB call 0x1940ed141
   14000f7c3:	test   BYTE PTR [rax-0x6f],al
   14000f7c6:	ins    BYTE PTR es:[rdi],dx
   14000f7c7:	adc    cl,BYTE PTR [rbp-0x6b]
   14000f7ca:	icebp  
   14000f7cb:	xchg   esp,eax
   14000f7cc:	pop    rdi
   14000f7cd:	xchg   ebx,eax
   14000f7ce:	fs jnp 0x14000f79b
   14000f7d1:	cs (bad) 
   14000f7d3:	adc    BYTE PTR [rcx+rcx*1],dl
   14000f7d6:	sbb    esp,DWORD PTR [rax]
   14000f7d8:	pushf  
   14000f7d9:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f7db:	scas   al,BYTE PTR es:[rdi]
   14000f7dc:	or     eax,0x996590eb
   14000f7e1:	jb     0x14000f79c
   14000f7e3:	mov    WORD PTR [rax-0x5a],es
   14000f7e6:	pop    rax
   14000f7e7:	test   eax,0x8f553860
   14000f7ec:	mov    dh,0x5
   14000f7ee:	and    DWORD PTR [rbx+0x3c],edi
   14000f7f1:	ret    0x119
   14000f7f4:	ret    
   14000f7f5:	sbb    al,0xac
   14000f7f7:	test   ecx,ebx
   14000f7f9:	clc    
   14000f7fa:	test   DWORD PTR [rsi-0x2e],eax
   14000f7fd:	jbe    0x14000f800
   14000f7ff:	ins    BYTE PTR es:[rdi],dx
   14000f800:	imul   ebx,DWORD PTR [rcx],0xa74e000e
   14000f806:	sbb    BYTE PTR [rax+0x37],ch
   14000f809:	icebp  
   14000f80a:	rcr    DWORD PTR [rcx+0x5f7a8819],cl
   14000f810:	push   rbp
   14000f811:	add    cl,ah
   14000f813:	push   0x63e3e30f
   14000f818:	fs mov bl,0x63
   14000f81b:	ins    BYTE PTR es:[rdi],dx
   14000f81c:	mov    edi,0x979422e8
   14000f821:	mov    ebp,0x7e8fdc8c
   14000f826:	in     al,dx
   14000f827:	vminss xmm6,xmm3,DWORD PTR [rcx+0x1f]
   14000f82c:	rex.WXB sbb QWORD PTR [r8],rdi
   14000f82f:	cli    
   14000f830:	std    
   14000f831:	out    dx,eax
   14000f832:	mov    bl,0x72
   14000f834:	sti    
   14000f835:	jbe    0x14000f7db
   14000f837:	lea    ebx,[rbx]
   14000f839:	xor    DWORD PTR [rdi-0x63],ecx
   14000f83c:	mov    dl,0x73
   14000f83e:	cld    
   14000f83f:	movabs eax,ds:0x52e963a152a3c0da
   14000f848:	loop   0x14000f843
   14000f84a:	mov    esp,0xf77fd39d
   14000f84f:	(bad)  
   14000f851:	add    ch,BYTE PTR [rcx]
   14000f853:	stos   BYTE PTR es:[rdi],al
   14000f854:	call   0x16ff9fa06
   14000f859:	jg     0x14000f7f4
   14000f85b:	je     0x14000f8c4
   14000f85d:	(bad)  
   14000f85e:	xchg   ecx,eax
   14000f85f:	sub    ebp,DWORD PTR [rdi+0x51e7ce44]
   14000f865:	sbb    eax,0x955557e5
   14000f86a:	rex.W and al,0x82
   14000f86d:	stos   BYTE PTR es:[rdi],al
   14000f86e:	stos   BYTE PTR es:[rdi],al
   14000f86f:	lea    r9,[rbp-0x604c124f]
   14000f876:	jrcxz  0x14000f801
   14000f878:	(bad)  
   14000f879:	mov    ebp,0x1d8ef289
   14000f87e:	push   0xffffffffdbaf394e
   14000f883:	push   rcx
   14000f884:	pop    rbx
   14000f885:	jb     0x14000f881
   14000f887:	add    bh,al
   14000f889:	xchg   ebx,eax
   14000f88a:	(bad)  
   14000f88b:	add    eax,0xf19f6980
   14000f890:	xchg   edx,eax
   14000f891:	xor    eax,0x8514516b
   14000f896:	test   eax,0x642c29a9
   14000f89b:	rex.WR
   14000f89c:	rex.WXB xor BYTE PTR [r13+0x28],dl
   14000f8a0:	push   rax
   14000f8a1:	xor    al,0xab
   14000f8a3:	and    DWORD PTR [rcx*2-0x5e5913af],edi
   14000f8aa:	mov    al,BYTE PTR [rdx-0x308934d6]
   14000f8b0:	add    BYTE PTR [rcx],cl
   14000f8b2:	iret   
   14000f8b3:	mov    WORD PTR [rdi+0x7aa5891b],gs
   14000f8b9:	(bad)  
   14000f8ba:	imul   ebx,DWORD PTR [rax],0xffffffd6
   14000f8bd:	cmp    eax,DWORD PTR [rbx+0x7e]
   14000f8c0:	movabs eax,ds:0x4b4a0fc4740b3be6
   14000f8c9:	add    DWORD PTR [rax+0x33],eax
   14000f8cc:	(bad)
   14000f8cf:	(bad)  
   14000f8d0:	fidiv  WORD PTR [rsi]
   14000f8d2:	(bad)  
   14000f8d3:	(bad)
   14000f8d6:	xchg   ecx,eax
   14000f8d7:	and    al,0x19
   14000f8d9:	rex.XB
   14000f8da:	xor    rbx,QWORD PTR [r13+0x6a6a641f]
   14000f8e1:	mov    al,bl
   14000f8e3:	xchg   DWORD PTR [rdi],ecx
   14000f8e5:	repz fistp DWORD PTR [rdi-0x388cb06]
   14000f8ec:	(bad)  
   14000f8ed:	(bad)  
   14000f8ee:	pop    rax
   14000f8ef:	mov    edi,DWORD PTR [rdi]
   14000f8f1:	sbb    al,0x65
   14000f8f3:	pop    rbx
   14000f8f4:	add    ch,BYTE PTR [rsi+0x39272654]
   14000f8fa:	cli    
   14000f8fb:	mov    ecx,0x83e4b1cf
   14000f900:	(bad)  
   14000f901:	and    edi,DWORD PTR [rdx+0x7a]
   14000f904:	xor    DWORD PTR [rip+0xc34d0a2],ebx        # 0x14c35c9ac
   14000f90a:	je     0x14000f8df
   14000f90c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f90d:	ja     0x14000f96f
   14000f90f:	add    BYTE PTR [rbx-0x21],ch
   14000f912:	ds jbe 0x14000f8f3
   14000f915:	jle    0x14000f952
   14000f917:	ret    
   14000f918:	(bad)  
   14000f919:	(bad)  
   14000f91a:	(bad)  
   14000f91b:	adc    ah,BYTE PTR [rax]
   14000f91d:	rex.WRX ins DWORD PTR es:[rdi],dx
   14000f91f:	fcomp  QWORD PTR [rsi-0x3e]
   14000f922:	add    DWORD PTR [rcx-0x377d81b1],eax
   14000f928:	out    0xbf,eax
   14000f92a:	rex.W jl 0x14000f8f8
   14000f92d:	data16 movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f92f:	pop    rsp
   14000f930:	(bad)  
   14000f931:	sub    eax,0x89122112
   14000f936:	movabs al,ds:0x1092450448911a69
   14000f93f:	cdq    
   14000f940:	or     al,0x97
   14000f942:	fdivr  QWORD PTR [rdx+0x2b]
   14000f945:	(bad)  
   14000f946:	mov    edi,0x47c8f5fe
   14000f94b:	(bad)  
   14000f94c:	and    bh,BYTE PTR [rbx]
   14000f94e:	xor    DWORD PTR [rdx-0x1f],edi
   14000f951:	(bad)  [rdi+0x24237be4]
   14000f957:	or     DWORD PTR [rbx-0x29],edx
   14000f95a:	xor    DWORD PTR [rip+0x196cb658],esp        # 0x1596dafb8
   14000f960:	xchg   edx,eax
   14000f961:	and    al,0x31
   14000f963:	cmp    BYTE PTR [rax],bh
   14000f965:	mov    BYTE PTR [rsi+rax*2-0x1658b717],ch
   14000f96c:	enter  0x1076,0x89
   14000f970:	(bad)  
   14000f973:	add    BYTE PTR [rsi],0xf9
   14000f976:	jb     0x14000f92d
   14000f978:	(bad)  
   14000f979:	test   al,0x2c
   14000f97b:	mov    ecx,0xf6ab8753
   14000f980:	mov    ah,0x5e
   14000f982:	(bad)  
   14000f983:	adc    al,0x61
   14000f985:	xlat   BYTE PTR ds:[rbx]
   14000f986:	xor    cl,BYTE PTR [rax]
   14000f988:	mov    es,esi
   14000f98a:	and    DWORD PTR [rax+0xc07a700],esp
   14000f990:	(bad)  
   14000f991:	pop    rbp
   14000f992:	(bad)  
   14000f993:	mov    fs,WORD PTR [rcx-0x2b]
   14000f996:	push   r9
   14000f998:	clc    
   14000f999:	rex.WRX pop rdx
   14000f99b:	pop    rsp
   14000f99c:	pop    rdx
   14000f99d:	(bad)  
   14000f99e:	add    BYTE PTR [rdx-0x4625f9d3],bl
   14000f9a4:	idiv   eax
   14000f9a6:	rex.WRB stos BYTE PTR es:[rdi],al
   14000f9a8:	movabs ds:0xadf503154d1b8e91,al
   14000f9b1:	or     BYTE PTR [rcx-0x7c1577e7],bl
   14000f9b7:	in     eax,0xf
   14000f9b9:	xor    eax,0x4a71a245
   14000f9be:	(bad)
   14000f9c1:	rex.RX
   14000f9c2:	rex.RX
   14000f9c3:	rex.WB
   14000f9c4:	es xchg ebx,eax
   14000f9c6:	pop    rsp
   14000f9c7:	jnp    0x14000f9b6
   14000f9c9:	mov    ch,0xa4
   14000f9cb:	pop    rsi
   14000f9cc:	jbe    0x14000fa0b
   14000f9ce:	adc    edi,edi
   14000f9d0:	jge    0x14000f9e1
   14000f9d2:	sub    DWORD PTR [rdi+0x1b],esp
   14000f9d5:	mov    edi,0x5c8fbbf2
   14000f9da:	out    dx,al
   14000f9db:	lock (bad) 
   14000f9dd:	rex.WRX jl 0x14000f9d1
   14000f9e0:	mov    esi,esp
   14000f9e2:	mov    esi,0x6888bde7
   14000f9e7:	adc    al,0xab
   14000f9e9:	push   rsp
   14000f9ea:	repnz enter 0xdcbe,0xc3
   14000f9ef:	btr    edi,esp
   14000f9f2:	mov    dh,0xdb
   14000f9f4:	enter  0x381d,0x40
   14000f9f8:	(bad)  
   14000f9f9:	jbe    0x14000fa3d
   14000f9fb:	mov    ss,WORD PTR [rax+rdi*2]
   14000f9fe:	mov    ecx,0x12d53d21
   14000fa03:	rex.WR jge 0x14000f9ea
   14000fa06:	ret    
   14000fa07:	rex.R (bad) 
   14000fa09:	(bad)  
   14000fa0a:	sub    esp,DWORD PTR [rdi+rdx*8-0x54]
   14000fa0e:	rex.RX jbe 0x14000fa51
   14000fa11:	and    BYTE PTR [rdx],bl
   14000fa13:	lea    edi,[rdx-0x12]
   14000fa16:	sub    BYTE PTR [rax],0x97
   14000fa19:	jmp    0x17653eed6
   14000fa1e:	jge    0x14000fa16
   14000fa20:	mov    bl,0xec
   14000fa22:	mov    ebp,0xd900ff1
   14000fa27:	sbb    eax,0x92105659
   14000fa2c:	adc    dl,BYTE PTR [rdx+0x37c8b6dd]
   14000fa33:	xlat   BYTE PTR ds:[rbx]
   14000fa34:	sahf   
   14000fa35:	and    eax,0xf28c55db
   14000fa3a:	push   rbp
   14000fa3b:	push   rdi
   14000fa3c:	rcl    BYTE PTR [rcx+0x6a813b1],1
   14000fa42:	(bad)  
   14000fa43:	(bad)  
   14000fa44:	xor    DWORD PTR [rbp-0x1eac55f8],esp
   14000fa4a:	sub    BYTE PTR [rbx+rcx*1],ch
   14000fa4d:	rex.RB xchg r10d,eax
   14000fa4f:	push   rax
   14000fa50:	xor    eax,0xdaa4788d
   14000fa55:	and    al,0xc4
   14000fa57:	adc    al,0xce
   14000fa59:	rex.R movabs al,ds:0x301f35845305980e
   14000fa63:	(bad)  
   14000fa64:	fs add bh,dl
   14000fa67:	rex.WXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fa69:	std    
   14000fa6a:	imul   ebx
   14000fa6c:	or     al,0x80
   14000fa6e:	and    DWORD PTR [rax-0x1048a3ee],ebx
   14000fa74:	test   DWORD PTR [rcx+0x3adff],ebp
   14000fa7a:	int    0x16
   14000fa7c:	add    edi,DWORD PTR [rbp+0x763ef7e2]
   14000fa82:	ror    DWORD PTR [rdx-0x75eb42ab],cl
   14000fa88:	rex.RB
   14000fa89:	rex.WR movabs rbp,0x852a15cbd1946580
   14000fa93:	test   eax,0x68a062ba
   14000fa98:	jbe    0x14000fabf
   14000fa9a:	shr    DWORD PTR [rax+rcx*8-0x3c],1
   14000fa9e:	and    BYTE PTR [rcx],ah
   14000faa0:	setbe  BYTE PTR [rip+0xffffffffc97ac412]        # 0x1097bbeb9
   14000faa7:	(bad)  
   14000faa8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000faa9:	cwde   
   14000faaa:	sahf   
   14000faab:	sahf   
   14000faac:	data16 xlat BYTE PTR ds:[rbx]
   14000faae:	scas   al,BYTE PTR es:[rdi]
   14000faaf:	pop    rbp
   14000fab0:	mov    esp,0xcaffdbf3
   14000fab5:	lahf   
   14000fab6:	div    esi
   14000fab8:	mov    dl,0x85
   14000faba:	pop    rdx
   14000fabb:	sub    eax,eax
   14000fabd:	call   QWORD PTR [rdx-0x4462767f]
   14000fac3:	push   rax
   14000fac4:	mov    esi,0x7f3275fe
   14000fac9:	repnz (bad) 
   14000facb:	pop    rax
   14000facc:	icebp  
   14000facd:	cmp    BYTE PTR [rbx-0x5],cl
   14000fad0:	xchg   edi,eax
   14000fad1:	xor    dh,BYTE PTR [rdx-0x29]
   14000fad4:	neg    ecx
   14000fad6:	jae    0x14000fabf
   14000fad8:	popf   
   14000fad9:	mov    BYTE PTR [rbx+0x7e9cbd27],dl
   14000fadf:	idiv   DWORD PTR [rbx]
   14000fae1:	scas   al,BYTE PTR es:[rdi]
   14000fae2:	loop   0x14000fac7
   14000fae4:	sub    eax,0x22056465
   14000fae9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000faea:	rex.WRX xor rsi,r15
   14000faed:	rcr    DWORD PTR [rbx+0x33e67e89],0xf4
   14000faf4:	lods   eax,DWORD PTR ds:[rsi]
   14000faf5:	pop    rbx
   14000faf6:	xchg   DWORD PTR [rdx+rbp*1-0x2b],ebx
   14000fafa:	pop    rax
   14000fafb:	add    ch,BYTE PTR [rdx+0x3ae9a0a2]
   14000fb01:	retf   
   14000fb02:	pop    rdi
   14000fb03:	sti    
   14000fb04:	pop    rdx
   14000fb05:	jbe    0x14000fae4
   14000fb07:	cld    
   14000fb08:	and    dil,r11b
   14000fb0b:	mul    DWORD PTR [rcx]
   14000fb0d:	rex.RXB in eax,dx
   14000fb0f:	pop    rsp
   14000fb10:	cmp    ebx,DWORD PTR [r8+rbp*1]
   14000fb14:	stc    
   14000fb15:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fb16:	call   0x184931331
   14000fb1b:	adc    eax,ebp
   14000fb1d:	jg     0x14000fafc
   14000fb1f:	inc    DWORD PTR [rax+0x55]
   14000fb22:	adc    al,0x4a
   14000fb24:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fb25:	adc    ah,bl
   14000fb27:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fb28:	es xor ch,ah
   14000fb2b:	rex.WRX
   14000fb2c:	fs push rbp
   14000fb2e:	add    eax,0x37b42087
   14000fb33:	(bad)  
   14000fb34:	and    BYTE PTR [rbp+rcx*2-0x2e],al
   14000fb38:	push   rcx
   14000fb39:	rex.R push rcx
   14000fb3b:	mov    BYTE PTR [rdx],ch
   14000fb3d:	mov    al,BYTE PTR [rdi+0x14da8294]
   14000fb43:	loope  0x14000fad7
   14000fb45:	scas   al,BYTE PTR es:[rdi]
   14000fb46:	xchg   ebx,eax
   14000fb47:	repz add ch,BYTE PTR gs:[rdx+0x2d635cb2]
   14000fb4f:	mov    eax,0xe7bb0333
   14000fb54:	jae    0x14000fb1c
   14000fb56:	outs   dx,BYTE PTR ds:[rsi]
   14000fb57:	test   bh,bh
   14000fb59:	pop    rsp
   14000fb5a:	fcmovnbe st,st(2)
   14000fb5c:	cmp    al,BYTE PTR [rax]
   14000fb5e:	mov    bl,0xc5
   14000fb61:	rex xchg edx,eax
   14000fb63:	test   BYTE PTR [rdx],bl
   14000fb65:	rex.WRB movabs ds:0x2a818b70ba081246,al
   14000fb6f:	test   DWORD PTR [rcx+rdi*4],edi
   14000fb72:	mov    DWORD PTR [rcx+0x46],ecx
   14000fb75:	mov    edi,0x2b458240
   14000fb7b:	mov    r12b,BYTE PTR cs:[rcx+r9*8]
   14000fb80:	je     0x14000fb56
   14000fb82:	test   DWORD PTR [rsp+rbp*4],0xfab95e7
   14000fb89:	fwait
   14000fb8a:	(bad)  
   14000fb8b:	lea    esi,[rbx]
   14000fb8d:	cmp    BYTE PTR [rbx+rdx*1],ah
   14000fb90:	sbb    ebx,DWORD PTR [rsi]
   14000fb92:	and    eax,0x6ab04891
   14000fb97:	(bad)  
   14000fb98:	adc    BYTE PTR [rdi+0x786fea7e],0xec
   14000fb9f:	iret   
   14000fba0:	(bad)  
   14000fba1:	ror    BYTE PTR [rdx-0x56],0xfe
   14000fba5:	mov    edi,0x6ee2bea0
   14000fbaa:	hlt    
   14000fbab:	add    DWORD PTR [rdi],0xc4934c30
   14000fbb1:	stos   DWORD PTR es:[rdi],eax
   14000fbb2:	pop    rsi
   14000fbb3:	(bad)
   14000fbb6:	(bad)  
   14000fbb7:	out    dx,eax
   14000fbb8:	sbb    al,0xfb
   14000fbba:	leave  
   14000fbbb:	rex.WRXB shl BYTE PTR [r14],1
   14000fbbe:	(bad)  
   14000fbbf:	jmp    0x19f60326a
   14000fbc4:	neg    BYTE PTR [rip+0xffffffff97fe7251]        # 0xd7ff6e1b
   14000fbca:	adc    eax,0x55919240
   14000fbcf:	sbb    ecx,edi
   14000fbd1:	loopne 0x14000fc14
   14000fbd3:	rex.RX outs dx,BYTE PTR ds:[rsi]
   14000fbd5:	mov    ecx,0x7caf8e85
   14000fbda:	test   DWORD PTR [rsi+0x74514ba5],ebp
   14000fbe0:	sbb    eax,0x3203e1d5
   14000fbe5:	popf   
   14000fbe6:	popf   
   14000fbe7:	nop
   14000fbe8:	rex.WX
   14000fbe9:	lock lock addr32 ds rex.XB (bad) 
   14000fbef:	lock and al,0x69
   14000fbf2:	push   rbp
   14000fbf3:	rex.RB xchg r9d,eax
   14000fbf5:	and    al,0x90
   14000fbf7:	popf   
   14000fbf8:	(bad)  
   14000fbf9:	pop    rdx
   14000fbfa:	xchg   esi,eax
   14000fbfb:	rex xchg edx,eax
   14000fbfd:	sbb    eax,0x51050f12
   14000fc02:	int3   
   14000fc03:	xor    ecx,DWORD PTR [rcx-0x1940503c]
   14000fc09:	xor    eax,0xe0caaaa8
   14000fc0e:	loopne 0x14000fc30
   14000fc10:	stc    
   14000fc11:	(bad)  
   14000fc12:	add    eax,0x91469d39
   14000fc17:	xchg   ebp,eax
   14000fc18:	(bad)  
   14000fc19:	out    0xa0,al
   14000fc1b:	mov    ch,0xf7
   14000fc1d:	(bad)  
   14000fc1e:	jns    0x14000fc0f
   14000fc20:	rex.RX or al,0x7c
   14000fc23:	or     dl,BYTE PTR [rdi]
   14000fc25:	xchg   esi,eax
   14000fc26:	and    ch,ah
   14000fc28:	rex.WRX sbb r13,rsi
   14000fc2b:	(bad)  
   14000fc2c:	repz xchg edi,eax
   14000fc2e:	sub    edx,DWORD PTR [rbp-0x4a814744]
   14000fc34:	outs   dx,BYTE PTR ds:[rsi]
   14000fc35:	rcr    BYTE PTR [rcx+0x23b65819],0x13
   14000fc3c:	int    0x58
   14000fc3e:	or     ecx,DWORD PTR [rbp+0xdbcd4]
   14000fc44:	mov    dh,0xb4
   14000fc46:	adc    al,BYTE PTR [rax]
   14000fc48:	xor    al,0x55
   14000fc4a:	or     al,0x14
   14000fc4c:	mov    DWORD PTR [rcx+rcx*4],esp
   14000fc4f:	and    eax,0xe1a69892
   14000fc54:	fs rcr cl,1
   14000fc57:	loope  0x14000fc0f
   14000fc59:	pop    rax
   14000fc5a:	sub    cl,BYTE PTR [rbx-0x5a]
   14000fc5d:	jnp    0x14000fbf0
   14000fc5f:	mov    bh,0xdd
   14000fc61:	ins    BYTE PTR es:[rdi],dx
   14000fc62:	cmc    
   14000fc63:	add    bh,dh
   14000fc65:	out    0xa7,eax
   14000fc67:	jbe    0x14000fc63
   14000fc69:	imul   eax,DWORD PTR [rcx-0x21],0xffffffca
   14000fc6d:	rex.WRB mov WORD PTR [r13-0x270b7584],ds
   14000fc74:	sbb    BYTE PTR [rbx+0x76],bh
   14000fc77:	out    dx,eax
   14000fc78:	out    0xf7,al
   14000fc7a:	(bad)  
   14000fc7c:	rex.WRX sahf 
   14000fc7e:	cld    
   14000fc7f:	out    dx,al
   14000fc80:	ja     0x14000fc9b
   14000fc82:	jnp    0x14000fc70
   14000fc84:	jno    0x14000fc38
   14000fc86:	ficom  WORD PTR [rsi-0xb]
   14000fc89:	rex.WR mov sil,0xa
   14000fc8c:	rex.WR cmp al,0xfc
   14000fc8f:	xor    BYTE PTR [rbx-0x5673c0f1],al
   14000fc95:	imul   eax,esp,0xb50c9d75
   14000fc9b:	stc    
   14000fc9c:	stc    
   14000fc9d:	(bad)  
   14000fc9e:	push   0x3d
   14000fca0:	sti    
   14000fca1:	fdiv   DWORD PTR [rsi-0x12]
   14000fca4:	sahf   
   14000fca5:	jmp    0x14000fcad
   14000fca7:	rex.W and BYTE PTR [rdx+0x3f4f98aa],0xcd
   14000fcaf:	loope  0x14000fc40
   14000fcb1:	jle    0x14000fc3f
   14000fcb3:	int3   
   14000fcb4:	(bad)  
   14000fcb5:	ds rex.WRXB mov r10b,0xa3
   14000fcb9:	add    ebx,ecx
   14000fcbb:	xor    al,0xc9
   14000fcbd:	div    dh
   14000fcbf:	push   rdx
   14000fcc0:	xchg   ecx,eax
   14000fcc1:	and    al,0xee
   14000fcc3:	dec    eax
   14000fcc5:	rex.RXB fcos 
   14000fcc8:	test   eax,0x52a4b14f
   14000fccd:	and    DWORD PTR [rdx-0x5f3586b6],edx
   14000fcd3:	add    dl,al
   14000fcd5:	popf   
   14000fcd6:	int3   
   14000fcd7:	add    dl,BYTE PTR [r9+r11*4]
   14000fcdb:	movabs ds:0x5d2ff4f5d9795165,al
   14000fce4:	mov    ah,BYTE PTR [rbp+0x59]
   14000fce7:	in     al,dx
   14000fce8:	fnstsw WORD PTR [rbx-0x6dfb2be9]
   14000fcee:	and    al,0xa3
   14000fcf0:	stos   BYTE PTR es:[rdi],al
   14000fcf1:	adc    DWORD PTR [rcx+rcx*2-0x52],esp
   14000fcf5:	xlat   BYTE PTR ds:[rbx]
   14000fcf6:	mov    dl,0x90
   14000fcf8:	shl    DWORD PTR [rdi],0x34
   14000fcfb:	or     al,0xe7
   14000fcfd:	mov    bl,0x16
   14000fcff:	add    BYTE PTR [rdi+rax*8],dh
   14000fd02:	sub    eax,0x82d67c90
   14000fd07:	fst    DWORD PTR gs:[rbx-0x79ac4581]
   14000fd0e:	(bad)  
   14000fd0f:	retf   0xaf65
   14000fd12:	xor    DWORD PTR [rax+0x14237012],0xffffffb7
   14000fd19:	jnp    0x14000fccb
   14000fd1b:	(bad)  
   14000fd1d:	fadd   QWORD PTR [rbx]
   14000fd1f:	jnp    0x14000fd77
   14000fd21:	mov    ah,BYTE PTR [rbp+0x3a]
   14000fd24:	sbb    eax,0x8211029b
   14000fd29:	add    eax,0x32d080a
   14000fd2e:	add    ch,cl
   14000fd30:	(bad)  
   14000fd31:	add    ecx,ecx
   14000fd33:	mov    cl,BYTE PTR [rdx+0x34]
   14000fd36:	xchg   esi,eax
   14000fd37:	or     al,0xfb
   14000fd39:	push   0xffffffff965a624e
   14000fd3e:	int    0x72
   14000fd40:	cmp    eax,DWORD PTR [rip+0x4b32553f]        # 0x18b335285
   14000fd46:	ret    0x4c34
   14000fd49:	hlt    
   14000fd4a:	rex.W (bad) 
   14000fd4c:	(bad)  
   14000fd4d:	rex.WRX (bad) 
   14000fd4f:	and    DWORD PTR [rbx-0x3f178d33],ebx
   14000fd55:	rex.B fdivrp st(6),st
   14000fd58:	int    0x6f
   14000fd5a:	repnz mov ebx,ecx
   14000fd5d:	(bad)  
   14000fd5e:	sub    DWORD PTR [r9+r9*2],r10d
   14000fd62:	rex
   14000fd63:	rex.WRB pop r14
   14000fd65:	sbb    BYTE PTR [rdi-0x5f],0x23
   14000fd69:	push   rsp
   14000fd6a:	jnp    0x14000fd6c
   14000fd6c:	sub    BYTE PTR [rsi+0x774ac3cf],bh
   14000fd72:	ror    DWORD PTR [rsi],0xbf
   14000fd75:	fnstcw WORD PTR [rdx]
   14000fd77:	push   0x1c57d2f7
   14000fd7c:	adc    edi,DWORD PTR [rsi]
   14000fd7e:	(bad)  
   14000fd7f:	shr    DWORD PTR [rax],1
   14000fd81:	std    
   14000fd82:	xlat   BYTE PTR ds:[rbx]
   14000fd83:	jg     0x14000fd37
   14000fd85:	call   QWORD PTR [rbx-0x30751b61]
   14000fd8b:	jg     0x14000fd2b
   14000fd8d:	(bad)  
   14000fd8e:	and    eax,0x753e984b
   14000fd93:	mov    bl,BYTE PTR [rdi+0xcddfbbd]
   14000fd99:	fnstsw WORD PTR [rcx+0x27]
   14000fd9c:	rex.WXB jne 0x14000fd3c
   14000fd9f:	out    dx,al
   14000fda0:	je     0x14000fdac
   14000fda2:	or     BYTE PTR [r11+0x721231ad],r15b
   14000fda9:	loopne 0x14000fdeb
   14000fdab:	xchg   BYTE PTR [rsi+0x5c28a233],ch
   14000fdb1:	cmc    
   14000fdb2:	fdivrp st(7),st
   14000fdb4:	fst    DWORD PTR [rcx-0x7c]
   14000fdb7:	test   eax,0x3a1e0e29
   14000fdbc:	rex.WR ror QWORD PTR [rdx-0x3797736f],1
   14000fdc3:	stos   BYTE PTR es:[rdi],al
   14000fdc4:	mov    cl,BYTE PTR [rax]
   14000fdc6:	shl    esi,1
   14000fdc8:	push   rax
   14000fdc9:	push   rdi
   14000fdca:	mov    ebp,0x56cefe09
   14000fdcf:	pop    rax
   14000fdd0:	push   rcx
   14000fdd1:	movsxd ebp,DWORD PTR [rip+0xb5b8448]        # 0x14b5c821f
   14000fdd7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fdd8:	or     ecx,DWORD PTR [rsi+rcx*1]
   14000fddb:	sub    ah,dl
   14000fddd:	xchg   ecx,eax
   14000fdde:	mov    cs,WORD PTR [rsi]
   14000fde0:	xor    BYTE PTR [rdi+rcx*1],al
   14000fde3:	in     al,0xe6
   14000fde5:	pop    rcx
   14000fde6:	or     BYTE PTR [rcx],ah
   14000fde8:	sub    BYTE PTR [rbx+rsi*8],dl
   14000fdeb:	je     0x14000fe61
   14000fded:	jbe    0x14000fdc3
   14000fdef:	popf   
   14000fdf0:	mov    DWORD PTR [rdx-0x6e],0xa7000196
   14000fdf7:	sbb    BYTE PTR [rax],ch
   14000fdf9:	sbb    eax,0xf8fa0628
   14000fdfe:	fnstcw WORD PTR [rax]
   14000fe00:	xchg   esi,eax
   14000fe01:	xor    BYTE PTR [rcx-0x6edc8635],bl
   14000fe08:	(bad)  
   14000fe09:	test   BYTE PTR [rsi-0x5a03d8cc],bh
   14000fe0f:	sub    BYTE PTR [rdx],cl
   14000fe11:	jmp    0xdd4d23c4
   14000fe16:	pushf  
   14000fe17:	in     al,0xd0
   14000fe19:	movabs eax,ds:0xc4dc6fd6091224c3
   14000fe22:	jmp    0x14000fe93
   14000fe24:	mov    ebp,0xe3bc1f95
   14000fe29:	popf   
   14000fe2a:	enter  0x1313,0x9e
   14000fe2e:	(bad)  
   14000fe2f:	lgs    edx,FWORD PTR [rsi-0x80]
   14000fe33:	rex.RB xchg r13d,eax
   14000fe35:	(bad)  
   14000fe36:	ret    
   14000fe37:	idiv   DWORD PTR [rcx-0x53]
   14000fe3a:	leave  
   14000fe3b:	outs   dx,DWORD PTR ds:[rsi]
   14000fe3c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fe3d:	out    dx,eax
   14000fe3e:	retf   0x7242
   14000fe41:	mov    eax,0x573c900
   14000fe46:	jo     0x14000feaa
   14000fe48:	cli    
   14000fe49:	rex.W adc bpl,BYTE PTR [rcx-0x401d7bb8]
   14000fe50:	cld    
   14000fe51:	or     ecx,DWORD PTR [rdi-0x3b]
   14000fe54:	movabs ds:0xdf1be6782beafcf4,al
   14000fe5d:	movabs al,ds:0x333a24972c3dcf7c
   14000fe66:	sbb    DWORD PTR [rcx+riz*1+0x6a],esp
   14000fe6a:	pop    rax
   14000fe6b:	rex.WR jnp 0x14000fe98
   14000fe6e:	(bad)  
   14000fe6f:	(bad)  
   14000fe70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fe71:	sub    DWORD PTR [rcx-0x68],ecx
   14000fe74:	test   DWORD PTR [rdx],eax
   14000fe76:	movabs ds:0xa635755fefc95d57,eax
   14000fe7f:	imul   esi,DWORD PTR [rdx-0x59c12091],0x99a215f2
   14000fe89:	adc    eax,0x55146a68
   14000fe8e:	push   rbp
   14000fe8f:	jmp    0x14000fef7
   14000fe91:	jmp    0x14000fe48
   14000fe93:	jmp    FWORD PTR [rdx+0x12]
   14000fe96:	adc    al,0xfc
   14000fe98:	(bad)  
   14000fe99:	adc    al,0xb8
   14000fe9b:	ficomp WORD PTR [rdx+0x5ac43bf]
   14000fea1:	xchg   edi,eax
   14000fea2:	je     0x14000fef0
   14000fea4:	clc    
   14000fea5:	rex.WB
   14000fea6:	rex.RXB retf 
   14000fea8:	ret    0xd370
   14000feab:	or     DWORD PTR [rbp-0x6d],0x62
   14000feaf:	mov    cl,0xd8
   14000feb1:	jbe    0x14000feb4
   14000feb3:	xchg   cx,ax
   14000feb5:	xchg   esi,eax
   14000feb6:	add    DWORD PTR [rax],eax
   14000feb8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000feb9:	sbb    al,ch
   14000febb:	(bad)  
   14000febc:	xchg   edi,eax
   14000febd:	pop    rdi
   14000febe:	jbe    0x14000fec9
   14000fec0:	(bad)  
   14000fec1:	mov    ds,WORD PTR [rdi]
   14000fec3:	xor    esp,DWORD PTR [rsi]
   14000fec5:	mov    BYTE PTR [rdi-0x21],0xf2
   14000fec9:	test   DWORD PTR [rdi],ebp
   14000fecb:	jle    0x14000fec6
   14000fecd:	cmp    ebp,edi
   14000fecf:	js     0x14000fecc
   14000fed1:	pop    rbx
   14000fed2:	test   ebp,0xf404c1fb
   14000fed8:	fs mov bl,0x36
   14000fedb:	movabs eax,ds:0xc152a94ebaa79ae5
   14000fee4:	mov    ah,0x2c
   14000fee6:	fstp   TBYTE PTR [rdx*4-0x1dd077dc]
   14000feed:	push   rsp
   14000feee:	icebp  
   14000feef:	or     BYTE PTR [rdi+0x1a261f0f],al
   14000fef5:	lea    esi,[rdx-0x13]
   14000fef8:	sbb    ebx,esi
   14000fefa:	imul   rbp,QWORD PTR [rdx-0x76],0xffffffffcdc5fc9f
   14000ff02:	hlt    
   14000ff03:	out    0x72,al
   14000ff05:	sahf   
   14000ff06:	cmp    DWORD PTR [rdi],ebx
   14000ff08:	lods   al,BYTE PTR ds:[rsi]
   14000ff09:	iret   
   14000ff0a:	ja     0x14000ff07
   14000ff0c:	add    ecx,DWORD PTR [rax-0x2c]
   14000ff0f:	(bad)  
   14000ff10:	(bad)  
   14000ff11:	mov    eax,0xc28e5b7f
   14000ff16:	mov    edx,0xef25eb4a
   14000ff1b:	cmp    BYTE PTR [rcx],bl
   14000ff1d:	jge    0x14000ff61
   14000ff1f:	and    BYTE PTR [rcx-0x5ea6e6d6],ch
   14000ff25:	js     0x14000ff22
   14000ff27:	sbb    eax,0x1dfb7b3c
   14000ff2c:	rex.R push rsp
   14000ff2e:	xchg   ebp,eax
   14000ff2f:	and    r11,QWORD PTR ds:[rip+0x3b9fd889]        # 0x17ba0d7c0
   14000ff37:	xor    eax,0xc1e4b201
   14000ff3c:	xchg   DWORD PTR [rbp+0x4c],edi
   14000ff3f:	rex.RB
   14000ff40:	sub    dl,BYTE PTR [r14]
   14000ff43:	cmp    DWORD PTR [rdx+0x4fe2f34e],ebx
   14000ff49:	jmp    FWORD PTR [rip+0x628244c9]        # 0x1a2834418
   14000ff4f:	mov    cl,0xc8
   14000ff51:	adc    ecx,DWORD PTR [rdi+0x3c]
   14000ff54:	rex.WB
   14000ff55:	rex.RB
   14000ff56:	rex.WX adc dl,BYTE PTR [rcx-0x5e74e5e0]
   14000ff5d:	enter  0xfd76,0x7f
   14000ff61:	popf   
   14000ff62:	xor    al,BYTE PTR [rbp+0x28187b68]
   14000ff68:	xor    al,0xd8
   14000ff6a:	mov    ah,0x29
   14000ff6c:	imul   eax,DWORD PTR [rcx],0x6c
   14000ff6f:	and    eax,0x110b5a0e
   14000ff74:	and    DWORD PTR [r10-0x1229c02a],r13d
   14000ff7b:	push   0xffffffffffffffc0
   14000ff7d:	jo     0x14000ffe8
   14000ff7f:	sbb    DWORD PTR [rax],eax
   14000ff81:	push   0x6a6818b6
   14000ff86:	sahf   
   14000ff87:	mov    fs,edi
   14000ff89:	adc    dl,BYTE PTR [rdx+rdx*4+0x53]
   14000ff8d:	ficomp DWORD PTR [rdx]
   14000ff8f:	mov    eax,DWORD PTR [rsp+rdi*1-0x7b]
   14000ff93:	xor    eax,0x52dd529d
   14000ff98:	add    eax,0x94292b86
   14000ff9d:	icebp  
   14000ff9e:	or     edx,esp
   14000ffa0:	rex.RXB (bad) 
   14000ffa2:	movabs ds:0x9898dbeb7eaf0a2a,al
   14000ffab:	cwde   
   14000ffac:	in     al,0xde
   14000ffae:	pop    rbx
   14000ffaf:	outs   dx,BYTE PTR ds:[rsi]
   14000ffb0:	(bad)  
   14000ffb1:	test   DWORD PTR [rdi-0x2],ebp
   14000ffb4:	jp     0x14001000d
   14000ffb6:	sar    ebp,1
   14000ffb8:	iret   
   14000ffb9:	mov    esi,0xbf0035df
   14000ffbe:	adc    eax,0xc2492320
   14000ffc3:	(bad)  
   14000ffc4:	je     0x140010011
   14000ffc6:	fidiv  WORD PTR [rdx+rbx*2-0xa]
   14000ffca:	ds and al,0x14
   14000ffcd:	(bad)  
   14000ffce:	sbb    BYTE PTR [rcx+rbx*4],dl
   14000ffd1:	push   rsp
   14000ffd2:	xor    cl,BYTE PTR [rcx+0x5a]
   14000ffd5:	xchg   edx,eax
   14000ffd6:	push   rax
   14000ffd7:	ror    BYTE PTR [rcx-0x32],0x91
   14000ffdb:	push   rax
   14000ffdc:	pushf  
   14000ffdd:	out    dx,eax
   14000ffde:	sub    dl,BYTE PTR [rdx+0x35]
   14000ffe1:	adc    DWORD PTR [rax+0x46],ecx
   14000ffe4:	mov    dl,0x4d
   14000ffe6:	mov    esi,DWORD PTR [rdx-0x67]
   14000ffe9:	movabs eax,ds:0xdb2e3fff5be28142
   14000fff2:	mov    esi,0x7830c31d
   14000fff7:	(bad)  
   14000fff8:	test   eax,0xc89918a7
   14000fffd:	xor    ebp,DWORD PTR [rcx+0x66]
   140010000:	mov    DWORD PTR [rsi+0x32a5482a],edx
   140010006:	xchg   BYTE PTR [rcx+rdx*1-0x51f4dd8f],ch
   14001000d:	cmp    esp,DWORD PTR [rdi+riz*8-0x4]
   140010011:	test   ah,cl
   140010013:	mov    esi,0x3804c0d3
   140010018:	(bad)  
   140010019:	(bad)  
   14001001a:	rex.X call 0x18062db91
   140010020:	movabs al,ds:0xa7268199d9a00085
   140010029:	ret    0x667
   14001002c:	retf   0x8e4d
   14001002f:	xor    DWORD PTR [rip+0x7a614236],esi        # 0x1ba62426b
   140010035:	adc    al,BYTE PTR [rbp+0x51]
   140010038:	rex.WB
   140010039:	data16 cmp cl,al
   14001003c:	imul   BYTE PTR [rsi]
   14001003e:	es xchg esi,eax
   140010040:	test   QWORD PTR [rip+0xffffffffc1fbeeae],rbx        # 0x101fceef5
   140010047:	lods   al,BYTE PTR ds:[rsi]
   140010048:	shr    BYTE PTR [rax+0x24],0x42
   14001004c:	xor    al,0x12
   14001004e:	and    DWORD PTR [rip+0xffffffffd27c328d],edx        # 0x1127d32e1
   140010054:	and    bh,BYTE PTR [rdx]
   140010056:	xor    al,0x6e
   140010058:	(bad)  
   140010059:	loope  0x14000ffdc
   14001005b:	sbb    edi,DWORD PTR [rdi]
   14001005d:	hlt    
   14001005e:	and    DWORD PTR [rsi],ecx
   140010060:	pushf  
   140010061:	cmp    dh,cl
   140010063:	shl    DWORD PTR [rdi-0x27326a82],cl
   140010069:	(bad)  
   14001006a:	(bad)  
   14001006b:	fistp  WORD PTR [rip+0xbbf1308]        # 0x14bc01379
   140010071:	and    BYTE PTR [rcx+0x21],ah
   140010074:	retf   
   140010075:	mov    dh,bl
   140010077:	mov    bh,0x5d
   140010079:	imul   BYTE PTR [rdx+0x13]
   14001007c:	xor    BYTE PTR [rsi-0x23889001],0x92
   140010083:	mov    esp,0x37097f7c
   140010088:	lods   eax,DWORD PTR ds:[rsi]
   140010089:	mov    bh,0xba
   14001008b:	(bad)  
   14001008c:	cs cmc 
   14001008e:	jne    0x1400100d0
   140010090:	ret    
   140010091:	mov    ch,0x4
   140010093:	pushf  
   140010094:	jrcxz  0x1400100ad
   140010096:	jb     0x1400100d1
   140010098:	mov    ds,WORD PTR [rbp+rdi*2+0x35]
   14001009c:	(bad)  
   14001009d:	(bad)  
   14001009e:	frstor [rdi+0x51]
   1400100a1:	test   BYTE PTR [rax+0x7c],ah
   1400100a4:	jl     0x140010042
   1400100a6:	rex.RXB (bad) 
   1400100a8:	jge    0x1400100b6
   1400100aa:	pop    rbp
   1400100ab:	rex.WX rcr rbx,1
   1400100ae:	fld    QWORD PTR [rdi+0x3c]
   1400100b1:	xchg   ebp,eax
   1400100b2:	and    eax,0x9624f12
   1400100b7:	sub    dl,bh
   1400100b9:	std    
   1400100ba:	outs   dx,DWORD PTR ds:[rsi]
   1400100bb:	pop    rcx
   1400100bc:	scas   al,BYTE PTR es:[rdi]
   1400100bd:	xchg   cl,dh
   1400100bf:	sbb    al,0x77
   1400100c1:	enter  0xa606,0xaa
   1400100c5:	xchg   ebp,eax
   1400100c6:	jo     0x140010076
   1400100c8:	lods   eax,DWORD PTR ds:[rsi]
   1400100c9:	add    eax,0x2eb1bc11
   1400100ce:	sub    DWORD PTR [rax-0x69],ebx
   1400100d1:	or     BYTE PTR [rax+rsi*1+0x65a5],dh
   1400100d8:	(bad)  
   1400100d9:	pushf  
   1400100da:	sbb    DWORD PTR [rax-0x55],ecx
   1400100dd:	jg     0x140010141
   1400100df:	jb     0x140010074
   1400100e1:	movsxd ecx,DWORD PTR [rsp+rcx*4+0xc]
   1400100e5:	rcl    ch,cl
   1400100e7:	mov    ebx,0x8b45ee88
   1400100ec:	leave  
   1400100ed:	rex.WRXB or al,0x53
   1400100f0:	int3   
   1400100f1:	rex.WRB xor BYTE PTR [r12+riz*4+0x48],r14b
   1400100f6:	iret   
   1400100f7:	shl    BYTE PTR [rbp+0x24],cl
   1400100fa:	xor    ebx,DWORD PTR [rbp+0x62685fb5]
   140010100:	mov    eax,0x8a5fc2f0
   140010105:	rex.X push rdi
   140010107:	fbstp  TBYTE PTR [rdx]
   140010109:	(bad)  
   14001010a:	(bad)  
   14001010b:	(bad)  [rbx+0x55409e69]
   140010111:	push   rbp
   140010112:	(bad)  
   140010113:	jns    0x1400100f9
   140010115:	adc    DWORD PTR [rsi],edi
   140010117:	repnz xchg ebp,eax
   140010119:	pop    rbx
   14001011a:	mov    ecx,0x7e66f363
   14001011f:	repnz (bad) 
   140010121:	mov    bh,0xb1
   140010123:	adc    al,0xe8
   140010125:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010126:	push   0xfffffffffffffffa
   140010128:	rex.XB in eax,dx
   14001012a:	repz sbb dh,BYTE PTR [rsp+rcx*1-0xa90bd90]
   140010132:	es mov esp,0xf6ceeca3
   140010138:	scas   al,BYTE PTR es:[rdi]
   140010139:	ret    0xce2b
   14001013c:	call   0xea134c6f
   140010141:	(bad)  
   140010142:	or     dh,BYTE PTR [rsi]
   140010144:	mul    DWORD PTR [rdi+0x22847638]
   14001014a:	sub    DWORD PTR [rcx-0x3cbca756],0x81b0d81c
   140010154:	stos   DWORD PTR es:[rdi],eax
   140010155:	outs   dx,BYTE PTR ds:[rsi]
   140010156:	mov    ebx,0x3150248d
   14001015b:	or     al,0xee
   14001015d:	mov    ebx,0x15f23eef
   140010162:	sbb    DWORD PTR [rcx],edx
   140010164:	int    0xda
   140010166:	and    al,0x6a
   140010168:	and    al,0x46
   14001016a:	xor    al,0x12
   14001016c:	xchg   r14d,eax
   14001016e:	adc    eax,0x30bcbcef
   140010173:	sahf   
   140010174:	(bad)  
   140010175:	movabs al,ds:0x4ddeb67e3decce1b
   14001017e:	clc    
   14001017f:	push   rcx
   140010180:	push   rbp
   140010181:	addr32 out 0x1e,al
   140010184:	(bad)  
   140010185:	(bad)  
   140010186:	js     0x1400101f6
   140010188:	lods   al,BYTE PTR ds:[rsi]
   140010189:	test   DWORD PTR [rax+0x4b],edx
   14001018c:	movabs eax,ds:0xf40ccccd0005ad2d
   140010195:	clc    
   140010196:	xor    esp,DWORD PTR [rdi]
   140010198:	mov    cl,0xa
   14001019a:	sub    DWORD PTR [rax],0xffffff8a
   14001019d:	mov    WORD PTR [rdx-0x66adbfdb],fs
   1400101a3:	sbb    bl,BYTE PTR [rbx]
   1400101a5:	movabs eax,ds:0x8391d0333f5933a3
   1400101ae:	mov    ecx,cs
   1400101b0:	push   rdx
   1400101b1:	cmp    eax,0x4060e000
   1400101b6:	loopne 0x1400101d9
   1400101b8:	or     ebx,DWORD PTR [rbx]
   1400101ba:	mov    WORD PTR [rcx+rcx*2],fs
   1400101bd:	rex.RX (bad) 
   1400101bf:	and    ch,BYTE PTR [rcx+rdi*4]
   1400101c2:	push   0xffffffffee0ec723
   1400101c7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400101c8:	cld    
   1400101c9:	in     al,dx
   1400101ca:	jle    0x140010182
   1400101cc:	ins    BYTE PTR es:[rdi],dx
   1400101cd:	mov    al,0x78
   1400101cf:	repnz leave 
   1400101d1:	(bad)  
   1400101d2:	jns    0x1400101c1
   1400101d4:	sbb    ebp,DWORD PTR [rdi-0x5c]
   1400101d7:	rex.WXB push r9
   1400101d9:	mov    ecx,0x29db8efb
   1400101de:	cmp    eax,0x847d18fa
   1400101e3:	sub    BYTE PTR [rbx+0x2e7b6e23],bh
   1400101e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1400101eb:	fiadd  WORD PTR [rsi+0x1cf7632]
   1400101f1:	add    eax,0x496856d9
   1400101f6:	fcomp  DWORD PTR [rbp+0x7a]
   1400101f9:	popf   
   1400101fa:	adc    bl,BYTE PTR [rsi-0x49]
   1400101fd:	rol    DWORD PTR [rdi+0x7f780fc7],1
   140010203:	xlat   BYTE PTR ds:[rbx]
   140010204:	add    al,BYTE PTR [rax-0x5e1bebb0]
   14001020a:	(bad)  
   14001020b:	sahf   
   14001020c:	pop    rbp
   14001020d:	mov    esp,0x7dcf8198
   140010212:	mov    gs,ebp
   140010214:	pop    rbx
   140010215:	mov    bh,0x32
   140010217:	ds ss (bad) 
   14001021a:	xchg   ebx,eax
   14001021b:	rex.WRXB
   14001021c:	ds leave 
   14001021e:	fsubrp st(7),st
   140010220:	rdpmc  
   140010222:	push   rsi
   140010223:	mov    WORD PTR [rbx-0x74ec7113],ss
   140010229:	(bad)  
   14001022a:	push   rcx
   14001022b:	and    esi,DWORD PTR [rsi+0x3e]
   14001022e:	(bad)  
   14001022f:	mov    al,0xd8
   140010231:	(bad)  
   140010232:	fbld   TBYTE PTR gs:[rbp+0x47b9cc58]
   140010239:	div    BYTE PTR [rbx+riz*8+0x5e]
   14001023d:	mov    dh,BYTE PTR [rax+0x58]
   140010240:	ins    BYTE PTR es:[rdi],dx
   140010241:	fisttp WORD PTR [rip+0x5ac05e1]        # 0x145ad0828
   140010247:	loope  0x1400101d8
   140010249:	loope  0x1400102c4
   14001024b:	xlat   BYTE PTR ds:[rbx]
   14001024c:	jge    0x1400101d4
   14001024e:	(bad)  
   14001024f:	(bad)  
   140010250:	(bad)  
   140010251:	jle    0x140010259
   140010253:	ret    
   140010254:	sub    BYTE PTR [rbp+0xe],0xe0
   140010258:	test   DWORD PTR [rdi],ebp
   14001025a:	jae    0x14001028b
   14001025c:	(bad)  
   14001025d:	jp     0x14001027d
   14001025f:	add    edx,0x8a8d15c6
   140010265:	add    esi,0xa8d23e39
   14001026b:	(bad)  
   14001026c:	and    BYTE PTR [rax],0x58
   14001026f:	test   DWORD PTR [rdx],esp
   140010271:	and    BYTE PTR [rbx+rdi*2-0x13],dl
   140010275:	(bad)  
   140010276:	cmp    cl,BYTE PTR [rdx]
   140010278:	rex.WXB push r15
   14001027a:	ins    DWORD PTR es:[rdi],dx
   14001027b:	(bad)  
   14001027c:	clc    
   14001027d:	call   0x1a27f20a0
   140010282:	(bad)  
   140010283:	(bad)  
   140010284:	(bad)  
   140010285:	mov    esp,DWORD PTR [rbx+rdx*8-0x7200d197]
   14001028c:	fbld   TBYTE PTR [rax-0x20]
   14001028f:	rex.RB (bad) 
   140010291:	loop   0x14001022e
   140010293:	out    dx,eax
   140010294:	js     0x14001029d
   140010296:	movsxd esi,edi
   140010298:	fisttp WORD PTR [rdi-0x69]
   14001029b:	(bad)  
   14001029c:	adc    BYTE PTR [rcx+0x47dde156],ah
   1400102a2:	push   rbx
   1400102a3:	mov    dl,0x77
   1400102a5:	out    0xf9,al
   1400102a7:	stc    
   1400102a8:	(bad)  
   1400102a9:	(bad)  
   1400102aa:	jge    0x140010275
   1400102ac:	or     DWORD PTR [rax],eax
   1400102ae:	cmp    BYTE PTR [rsi-0x41],bh
   1400102b1:	push   rbx
   1400102b2:	xchg   ebp,eax
   1400102b3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400102b4:	enter  0xa98e,0x2f
   1400102b8:	(bad)  
   1400102b9:	add    al,BYTE PTR [rax-0x343c027e]
   1400102bf:	xchg   edx,eax
   1400102c0:	mov    ebp,0xb1964b2f
   1400102c5:	xchg   BYTE PTR [rdi+0x619b3c79],al
   1400102cb:	fld    TBYTE PTR [rbp-0x49]
   1400102ce:	jno    0x1400102c9
   1400102d0:	stos   DWORD PTR es:[rdi],eax
   1400102d1:	pop    rsi
   1400102d2:	(bad)
   1400102d5:	add    al,0x87
   1400102d7:	(bad)  
   1400102d8:	sbb    eax,0x3e0f97e2
   1400102dd:	rex.WX sahf 
   1400102df:	or     al,0xc9
   1400102e1:	ins    BYTE PTR es:[rdi],dx
   1400102e2:	(bad)  
   1400102e3:	xchg   ecx,eax
   1400102e4:	push   0xffffffffe12c689c
   1400102e9:	mov    ecx,0xc477751f
   1400102ee:	mov    edi,DWORD PTR [rbp+0x427e92fb]
   1400102f4:	cmp    BYTE PTR [rdx],dl
   1400102f6:	retf   
   1400102f7:	(bad)  
   1400102f8:	ret    0xeb2b
   1400102fb:	cmp    bh,BYTE PTR [rcx+0x7f]
   1400102fe:	movabs al,es:0x1779a06ea6a7e13f
   140010308:	ret    0x67be
   14001030b:	outs   dx,BYTE PTR ds:[rsi]
   14001030c:	cs or  r15d,0xffffffdb
   140010311:	sbb    al,0x0
   140010313:	shl    BYTE PTR [rdx+0x0],1
   140010316:	jo     0x14001034e
   140010318:	data16 (bad) 
   14001031a:	(bad)  
   14001031b:	stc    
   14001031c:	ror    DWORD PTR [rax],0xf9
   14001031f:	xor    BYTE PTR [rax+rdi*2+0x53384848],ah
   140010326:	push   0xffffffffad967a09
   14001032b:	addr32 jb 0x140010352
   14001032e:	rcl    ebx,0x7b
   140010331:	(bad)  
   140010332:	push   rcx
   140010333:	sub    BYTE PTR [rax+rdi*4],dl
   140010336:	(bad)  
   140010337:	stos   BYTE PTR es:[rdi],al
   140010338:	stos   DWORD PTR es:[rdi],eax
   140010339:	pop    rax
   14001033a:	mov    ebx,0xf86f1d6e
   14001033f:	mov    ebx,0x2feee3bf
   140010344:	jl     0x1400102c7
   140010346:	test   eax,0xf288fd1f
   14001034b:	fcomp  DWORD PTR [rax]
   14001034d:	sbb    DWORD PTR [rcx],esp
   14001034f:	test   al,0x53
   140010351:	xor    esi,DWORD PTR [rdi+0x53fbceb0]
   140010357:	jbe    0x1400103ce
   140010359:	fbstp  TBYTE PTR [rcx]
   14001035b:	(bad)  
   14001035c:	popf   
   14001035d:	mov    dl,0x5c
   14001035f:	in     al,dx
   140010360:	rcr    ebp,1
   140010362:	mov    cs,WORD PTR [rsi]
   140010364:	add    al,0x7a
   140010366:	cld    
   140010367:	cmp    DWORD PTR [rax+riz*4],eax
   14001036a:	lods   al,BYTE PTR ds:[rsi]
   14001036b:	sub    cl,al
   14001036d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001036e:	and    DWORD PTR [rcx+0x58],0xec139318
   140010375:	pop    rdx
   140010376:	mov    bh,0x86
   140010378:	imul   ebp,DWORD PTR [rdi-0x41],0xffffff83
   14001037c:	mov    ch,0xbf
   14001037e:	jb     0x14001039d
   140010380:	stc    
   140010381:	jl     0x140010321
   140010383:	ret    
   140010384:	xchg   DWORD PTR [rdi],ecx
   140010386:	repz pop rdi
   140010388:	(bad)  
   140010389:	jge    0x14001039a
   14001038b:	rex.RB xchg r10d,eax
   14001038d:	cwde   
   14001038e:	rex.WX xchg rdx,rax
   140010390:	pop    rax
   140010391:	and    al,0x46
   140010393:	sub    al,0x9e
   140010395:	rex.X push rcx
   140010397:	xor    al,0x40
   140010399:	or     ch,BYTE PTR [rbp-0x6887977b]
   14001039f:	rex.X
   1400103a0:	ror    QWORD PTR [rax-0x4b2aed56],0x7a
   1400103a8:	(bad)  
   1400103a9:	ret    0x114d
   1400103ac:	cs (bad) 
   1400103ae:	mov    ebp,0x9bc501ba
   1400103b3:	outs   dx,DWORD PTR ds:[rsi]
   1400103b4:	rex ins DWORD PTR es:[rdi],dx
   1400103b6:	xchg   edx,eax
   1400103b7:	jo     0x140010425
   1400103b9:	lock fild DWORD PTR [rsi+rcx*8]
   1400103bd:	test   eax,0x42d2d
   1400103c2:	int    0x16
   1400103c4:	add    ebp,ebp
   1400103c6:	fdivr  DWORD PTR [rip+0x52675374]        # 0x192685740
   1400103cc:	outs   dx,DWORD PTR ds:[rsi]
   1400103cd:	jp     0x140010435
   1400103cf:	movabs al,ds:0xbc2d8d4ce12062f0
   1400103d8:	and    al,0x20
   1400103da:	jmp    QWORD PTR [rdi-0xb]
   1400103dd:	fwait
   1400103de:	cmp    ecx,DWORD PTR [rbx+rdi*4-0x76f6dd54]
   1400103e5:	je     0x1400103ce
   1400103e7:	push   rdx
   1400103e8:	repnz xchg ecx,eax
   1400103ea:	and    al,0x7
   1400103ec:	rex.WRXB (bad) 
   1400103ee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400103ef:	jo     0x1400103c0
   1400103f1:	iret   
   1400103f2:	pop    rcx
   1400103f3:	mov    bh,0x6e
   1400103f5:	sub    eax,0x15755c57
   1400103fa:	outs   dx,DWORD PTR ds:[rsi]
   1400103fb:	cli    
   1400103fc:	(bad)  
   1400103fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400103fe:	mov    eax,0xf96bdaff
   140010403:	scas   eax,DWORD PTR es:[rdi]
   140010404:	outs   dx,DWORD PTR ds:[rsi]
   140010405:	(bad)  
   140010406:	and    esp,DWORD PTR [rdi]
   140010408:	(bad)  
   140010409:	js     0x14001039b
   14001040b:	pop    rsi
   14001040c:	movabs al,ds:0x7ae0598e3e8cdf17
   140010415:	add    BYTE PTR [rax+0x76],cl
   140010418:	imul   esi,DWORD PTR [rdx],0x1c
   14001041b:	xor    cl,bh
   14001041d:	int    0x4
   14001041f:	xchg   esp,eax
   140010420:	rex.X int3 
   140010422:	jg     0x1400103bb
   140010424:	cld    
   140010425:	xchg   ebx,eax
   140010426:	adc    eax,0x9c8fd3bb
   14001042b:	retf   
   14001042c:	xor    DWORD PTR [rbp+0x28],ebx
   14001042f:	push   rax
   140010430:	jmp    0xcdc5e51d
   140010435:	(bad)  
   140010436:	repnz imul ebx,DWORD PTR [rdi-0x1a56c708],0x2b
   14001043e:	test   al,0x14
   140010440:	mov    ebp,esp
   140010442:	fidivr WORD PTR [rbp-0x42118465]
   140010448:	(bad)  
   140010449:	rcr    DWORD PTR [rax+rcx*4],1
   14001044c:	pop    rax
   14001044d:	xchg   BYTE PTR [rax-0x3e],bh
   140010450:	(bad)  
   140010451:	sahf   
   140010452:	mov    WORD PTR [rbx+riz*2+0x76],es
   140010456:	loop   0x1400103eb
   140010458:	call   rdx
   14001045a:	rex.X
   14001045b:	div    DWORD PTR cs:[rcx+rax*2-0x3f]
   140010460:	jae    0x140010483
   140010462:	movabs ds:0x11d4281f4c17b9d5,al
   14001046b:	mov    es,WORD PTR [rcx+0x6b]
   14001046e:	and    DWORD PTR [rax+rsi*2-0x2a1c2aec],ecx
   140010475:	sbb    al,0xbf
   140010477:	rex.WRB add r8b,BYTE PTR [r10]
   14001047a:	sub    eax,0x16cd0004
   14001047f:	add    edi,DWORD PTR [rbp+0x763f77fc]
   140010485:	xchg   ebx,eax
   140010486:	xor    al,0xb0
   140010488:	sbb    BYTE PTR [rbx-0x6ceebba8],dh
   14001048e:	xor    ecx,esi
   140010490:	or     al,0xd4
   140010492:	mov    al,0x18
   140010494:	or     BYTE PTR [rax],bl
   140010496:	fwait
   140010497:	cwde   
   140010498:	jo     0x1400104e0
   14001049a:	and    eax,0xe7b34d0d
   14001049f:	stos   DWORD PTR es:[rdi],eax
   1400104a0:	outs   dx,DWORD PTR ds:[rsi]
   1400104a1:	(bad)  
   1400104a2:	adc    al,0x64
   1400104a4:	rex.RB
   1400104a5:	mov    r8d,DWORD PTR [rax+r9*4-0x75]
   1400104aa:	adc    al,0xd3
   1400104ac:	xchg   ebp,eax
   1400104ad:	(bad)
   1400104b0:	cmp    al,0x44
   1400104b2:	rex.WB fild WORD PTR [r15-0x5f]
   1400104b6:	push   rax
   1400104b7:	(bad)  
   1400104b8:	(bad)  
   1400104b9:	(bad)  
   1400104ba:	adc    bh,0xfe
   1400104bd:	loope  0x1400104de
   1400104bf:	mov    dl,0xf5
   1400104c1:	(bad)  
   1400104c2:	stos   DWORD PTR es:[rdi],eax
   1400104c3:	jns    0x1400104a9
   1400104c5:	cmp    ebx,edi
   1400104c7:	(bad)  
   1400104c8:	iret   
   1400104c9:	or     DWORD PTR [rdi],0x70
   1400104cc:	loopne 0x14001046f
   1400104ce:	xchg   eax,ecx
   1400104d0:	xchg   esi,eax
   1400104d1:	retf   0x8064
   1400104d4:	mov    ah,0xeb
   1400104d6:	mov    bl,0xb
   1400104d8:	in     al,dx
   1400104d9:	clc    
   1400104da:	mov    edi,0x11fd2f64
   1400104df:	add    bl,bl
   1400104e1:	cld    
   1400104e2:	ja     0x140010524
   1400104e4:	ret    0x8d49
   1400104e7:	mov    ch,0x5d
   1400104e9:	(bad)  
   1400104ea:	sti    
   1400104eb:	xor    esi,DWORD PTR [rbp+0x6a]
   1400104ee:	mov    cl,cl
   1400104f0:	jb     0x14001048b
   1400104f2:	rex.WB
   1400104f3:	rex mov esi,0x7d8857f6
   1400104f9:	lock (bad) 
   1400104fb:	clc    
   1400104fc:	mov    ebp,0x86057d5f
   140010501:	imul   edx,DWORD PTR [rdx-0x62],0xc7f1e69e
   140010508:	(bad)  
   140010509:	out    0xb1,eax
   14001050b:	(bad)  
   14001050c:	sahf   
   14001050d:	out    0xe8,al
   14001050f:	push   0x72e77885
   140010514:	adc    al,0x55
   140010516:	and    eax,0x8d134f16
   14001051b:	and    eax,0x24251591
   140010520:	icebp  
   140010521:	(bad)  
   140010522:	(bad)
   140010526:	push   rax
   140010527:	or     ah,ch
   140010529:	and    BYTE PTR [rsp+rcx*8],ch
   14001052c:	push   0xfffffffffffffff9
   14001052e:	js     0x1400104b5
   140010530:	retf   0x842c
   140010533:	jrcxz  0x140010581
   140010535:	(bad)  
   140010536:	push   0x4b
   140010538:	or     eax,DWORD PTR [rcx]
   14001053a:	add    BYTE PTR [rbx-0x68],dh
   14001053d:	sbb    eax,ecx
   14001053f:	pop    rdi
   140010540:	or     al,0xa4
   140010542:	or     BYTE PTR [rcx-0x192fde2a],al
   140010548:	pop    rax
   140010549:	or     al,0x94
   14001054b:	rex.WRB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001054d:	stos   BYTE PTR es:[rdi],al
   14001054e:	punpcklbw mm0,mm5
   140010551:	sahf   
   140010552:	mov    cl,0xc7
   140010554:	rex.WRB
   140010555:	rex.XB push r13
   140010557:	push   rbp
   140010558:	(bad)  
   140010559:	enter  0xa00c,0x20
   14001055d:	sub    ecx,DWORD PTR [rdx]
   14001055f:	mov    cl,0xb8
   140010561:	in     eax,dx
   140010562:	rex.WXB (bad) 
   140010564:	and    dl,BYTE PTR [rcx-0x62]
   140010567:	(bad)  
   140010568:	cmp    al,0xc4
   14001056a:	xchg   ecx,eax
   14001056b:	xchg   ebx,eax
   14001056c:	rex.WRXB jae 0x140010563
   14001056f:	fmul   DWORD PTR [rcx-0x5a]
   140010572:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010573:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010574:	pop    rax
   140010575:	mov    cl,0x62
   140010577:	add    eax,0x7bcf7daf
   14001057c:	cmp    cl,bh
   14001057e:	cld    
   14001057f:	outs   dx,DWORD PTR ds:[rsi]
   140010580:	mov    bl,0xe3
   140010582:	ficomp WORD PTR [rdi+0x3f3dfcf3]
   140010588:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010589:	js     0x14001056b
   14001058b:	add    BYTE PTR [rbp-0x1bb7d8ed],ah
   140010591:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010593:	sub    al,0x8b
   140010595:	cwde   
   140010596:	imul   ebx,edx,0x76c97dd3
   14001059c:	fistp  QWORD PTR [rcx+rbx*2+0x51]
   1400105a0:	rex.B (bad) 
   1400105a2:	rex jbe 0x1400105ad
   1400105a5:	rex retf 
   1400105a7:	sub    r10b,BYTE PTR [rbp+0x54c08530]
   1400105ae:	push   rbp
   1400105af:	mov    ah,0x52
   1400105b1:	mov    DWORD PTR [rcx-0x2d],ecx
   1400105b4:	in     al,0x14
   1400105b6:	adc    BYTE PTR [rbx-0x23],bh
   1400105b9:	jmp    0x1400105a3
   1400105bb:	fstp   TBYTE PTR [rsi-0x42087e63]
   1400105c1:	(bad)  
   1400105c2:	ds (bad) 
   1400105c4:	(bad)  
   1400105c6:	(bad)  
   1400105c7:	test   eax,0x7a1e29a9
   1400105cc:	call   0x1bf3dfbf2
   1400105d1:	xchg   esp,eax
   1400105d2:	ret    
   1400105d3:	and    eax,DWORD PTR [rbp-0x4e]
   1400105d6:	mov    edx,DWORD PTR [rsi+0x21]
   1400105d9:	and    al,0x89
   1400105db:	js     0x14001060f
   1400105dd:	rex.WRB and r11b,BYTE PTR [r9+0x76da8b46]
   1400105e4:	rex.W pop rbp
   1400105e6:	rex.WRXB (bad) 
   1400105e8:	movsxd esi,DWORD PTR es:[rbx-0x73]
   1400105ec:	hlt    
   1400105ed:	in     eax,dx
   1400105ee:	je     0x14001059d
   1400105f0:	add    eax,0x489554d
   1400105f5:	pop    rsp
   1400105f6:	or     BYTE PTR [rdi-0x12286f4b],bh
   1400105fc:	movabs eax,es:0x40542e02483cd48d
   140010606:	push   0xffffffffae680025
   14001060b:	sbb    BYTE PTR [rax],ch
   14001060d:	cmp    bh,BYTE PTR [rdi]
   14001060f:	(bad)
   140010612:	sub    al,0x13
   140010614:	lea    eax,[rsi-0x77]
   140010617:	(bad)
   14001061a:	(bad)  
   14001061b:	push   0x3a
   14001061d:	add    eax,0x54a8f62b
   140010622:	or     dh,BYTE PTR [rsp+rax*8]
   140010625:	test   al,0xb5
   140010627:	adc    al,0x24
   140010629:	rex.WB and dl,BYTE PTR [r10]
   14001062c:	mov    DWORD PTR [rcx],esp
   14001062e:	addr32 fs (bad) 
   140010631:	mov    DWORD PTR [rcx+rdi*8],esp
   140010634:	leave  
   140010635:	jno    0x1400106ad
   140010637:	(bad)  
   140010638:	cmp    esp,eax
   14001063a:	mov    bl,0xfb
   14001063c:	mov    esi,0x7e81facf
   140010641:	mov    dh,0x6f
   140010643:	mov    edi,0x369bcd8c
   140010648:	mov    cl,0x72
   14001064a:	repz data16 rex.RX (bad) 
   14001064e:	out    0x1b,eax
   140010650:	sbb    BYTE PTR [rdx],bh
   140010652:	je     0x1400105dc
   140010654:	(bad)  
   140010656:	ffree  st(7)
   140010658:	icebp  
   140010659:	pop    rdi
   14001065a:	(bad)  
   14001065b:	xchg   edx,eax
   14001065c:	xchg   ebx,eax
   14001065d:	rex.WRXB in eax,dx
   14001065f:	rex cmp eax,0xb0c50279
   140010665:	rex.W pop rcx
   140010667:	(bad)  
   140010668:	jno    0x140010675
   14001066a:	loop   0x14001066e
   14001066c:	loop   0x140010603
   14001066e:	rex.WX jne 0x14001068f
   140010671:	rex.X in al,dx
   140010673:	(bad)  
   140010674:	push   rdi
   140010675:	pop    rbx
   140010676:	mov    ah,0x8
   140010678:	ret    
   140010679:	mov    dl,0x28
   14001067b:	ja     0x1400106f3
   14001067d:	xchg   ebx,eax
   14001067e:	stc    
   14001067f:	jg     0x140010660
   140010681:	(bad)  
   140010682:	mov    dh,0xcd
   140010684:	pop    rbx
   140010685:	rex.W pop rbp
   140010687:	jg     0x1400106c6
   140010689:	std    
   14001068a:	mov    ebp,0xceba18bd
   14001068f:	loopne 0x140010669
   140010691:	sbb    BYTE PTR [rbx-0x389d128a],bh
   140010697:	ror    edi,cl
   140010699:	xor    BYTE PTR [rcx-0x80],bl
   14001069c:	loope  0x1400106c7
   14001069e:	rex.B
   14001069f:	rex.RXB fild QWORD PTR [r10]
   1400106a2:	je     0x140010677
   1400106a4:	rex.R push rsi
   1400106a6:	movabs ds:0x86eaa22851810c14,eax
   1400106af:	lods   eax,DWORD PTR ds:[rsi]
   1400106b0:	je     0x1400106f0
   1400106b2:	jae    0x14001068f
   1400106b4:	sub    edi,DWORD PTR [rdx+0x36e89409]
   1400106ba:	or     ecx,DWORD PTR [rdx]
   1400106bc:	xor    BYTE PTR [rdi+0x15cb842e],bh
   1400106c2:	and    al,0xa2
   1400106c4:	mov    ch,0xd3
   1400106c6:	mov    bh,0x35
   1400106c8:	cli    
   1400106c9:	jle    0x140010726
   1400106cb:	pop    rdx
   1400106cc:	or     BYTE PTR [rax],al
   1400106ce:	(bad)  
   1400106cf:	(bad)  
   1400106d0:	(bad)  
   1400106d1:	shl    dh,cl
   1400106d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400106d4:	sbb    BYTE PTR [rax-0x1c883e1a],ch
   1400106da:	lock mov dl,0x4c
   1400106dd:	sub    al,0x1a
   1400106df:	and    eax,0xda8503ee
   1400106e4:	fdivr  DWORD PTR [rax+0x9]
   1400106e7:	sub    eax,DWORD PTR [rax]
   1400106e9:	or     ch,BYTE PTR [rdx+0x2a8912aa]
   1400106ef:	sub    BYTE PTR [rbp+0x3ba4488b],bl
   1400106f5:	test   eax,0x1d1c8a94
   1400106fa:	(bad)  
   1400106fb:	(bad)  
   1400106fc:	(bad)  
   1400106fd:	jge    0x14001070e
   1400106ff:	mov    bl,0x6f
   140010701:	fistp  QWORD PTR [rsi]
   140010703:	xchg   esi,eax
   140010704:	sub    eax,0xc0c0ce5f
   140010709:	add    BYTE PTR [rbx+0x2e],bl
   14001070c:	mov    ebx,0xbdae2b8c
   140010711:	xchg   esi,eax
   140010712:	jb     0x1400106cd
   140010714:	int3   
   140010715:	clc    
   140010716:	icebp  
   140010717:	jrcxz  0x140010765
   140010719:	sbb    eax,0xfed8c63b
   14001071e:	std    
   14001071f:	rex.WR (bad) 
   140010721:	cmp    al,al
   140010723:	(bad)  
   140010724:	icebp  
   140010725:	movsxd ecx,DWORD PTR [rsi+rcx*2+0x4c]
   140010729:	push   rax
   14001072a:	mov    ch,al
   14001072c:	adc    BYTE PTR [rdx+0x219d364a],ch
   140010732:	and    ecx,DWORD PTR [rcx+0x24]
   140010735:	adc    esi,DWORD PTR [rcx-0x5e]
   140010738:	xchg   edi,eax
   140010739:	pop    rdi
   14001073a:	rex.B xlat BYTE PTR ds:[rbx]
   14001073c:	fidiv  DWORD PTR [rbp+0x1dbed96c]
   140010742:	mov    ebp,0xce734254
   140010747:	ins    DWORD PTR es:[rdi],dx
   140010748:	(bad)  
   140010749:	(bad)  
   14001074a:	std    
   14001074b:	or     al,0xf
   14001074d:	psllq  mm7,mm0
   140010750:	adc    edi,DWORD PTR [rbx]
   140010752:	sbb    BYTE PTR [rsi],bl
   140010754:	lahf   
   140010755:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010756:	push   0xffffffff8d08a9c5
   14001075b:	scas   al,BYTE PTR es:[rdi]
   14001075c:	mov    esi,0x4aaa28a5
   140010761:	xor    dl,BYTE PTR [rbp-0x3248e5df]
   140010767:	jle    0x140010734
   140010769:	adc    bl,BYTE PTR [rsi+0x35]
   14001076c:	pop    rsi
   14001076d:	leave  
   14001076e:	ins    DWORD PTR es:[rdi],dx
   14001076f:	(bad)  
   140010770:	loope  0x140010746
   140010772:	out    dx,al
   140010773:	stos   DWORD PTR es:[rdi],eax
   140010774:	jle    0x1400107c6
   140010776:	lock xor esi,esi
   140010779:	(bad)  
   14001077a:	movabs al,ds:0x885d767d8a068992
   140010783:	(bad)  
   140010784:	rol    DWORD PTR [rbx],1
   140010786:	retf   
   140010787:	ss (bad) 
   140010789:	add    BYTE PTR [rax+rdx*1+0xc5d3400],dh
   140010790:	je     0x1400107c8
   140010792:	jle    0x14001080b
   140010794:	fild   WORD PTR [rbx]
   140010796:	(bad)  
   140010797:	add    al,0x5
   140010799:	mov    ecx,0x5db05049
   14001079e:	imul   ecx,DWORD PTR [rbx],0x4b
   1400107a1:	adc    BYTE PTR [rdx+0x7e48ca5a],0x82
   1400107a8:	or     edi,0xc
   1400107ab:	shl    DWORD PTR [rbx+0x70],1
   1400107ae:	test   BYTE PTR [rsi-0x46a78463],bh
   1400107b4:	jl     0x1400107df
   1400107b6:	add    eax,DWORD PTR [rbx]
   1400107b8:	stos   DWORD PTR es:[rdi],eax
   1400107b9:	call   0x10595c21d
   1400107be:	sub    edx,DWORD PTR [rdi-0x2e]
   1400107c1:	(bad)  
   1400107c2:	xor    BYTE PTR [rax],al
   1400107c4:	(bad)  
   1400107c5:	jle    0x140010838
   1400107c7:	int    0x65
   1400107c9:	jmp    0x190a65688
   1400107ce:	rol    BYTE PTR [rax],0x94
   1400107d1:	js     0x14001076f
   1400107d3:	mov    ah,0x53
   1400107d5:	sub    BYTE PTR [rbx+0xa],ah
   1400107d8:	mov    r9b,0x50
   1400107db:	rex xlat BYTE PTR ds:[rbx]
   1400107dd:	jne    0x14001077d
   1400107df:	jl     0x1400107cb
   1400107e1:	sub    DWORD PTR [rsi+0x76388686],eax
   1400107e7:	jb     0x140010771
   1400107e9:	cmp    eax,0x25a08ffb
   1400107ee:	cmp    dh,BYTE PTR [rax]
   1400107f0:	(bad)  
   1400107f1:	(bad)  
   1400107f2:	fs rex.WRB
   1400107f4:	es popf 
   1400107f6:	movabs ds:0xb3f0872912c4a245,rax
   140010800:	push   rbx
   140010801:	mov    ah,BYTE PTR [rcx+rbx*2+0x22]
   140010805:	out    dx,al
   140010806:	(bad)  
   140010807:	pop    rcx
   140010808:	popf   
   140010809:	clc    
   14001080a:	mov    esi,0x62b90d7b
   14001080f:	shr    DWORD PTR [rsi-0x7ae13f7f],1
   140010815:	cmp    eax,0xe926ae62
   14001081a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001081b:	shl    DWORD PTR [rsi+rbx*2-0x577a2699],0xcb
   140010823:	add    al,0xf4
   140010825:	(bad)  
   140010826:	mov    bh,0x1
   140010828:	add    BYTE PTR [rdx+0x8],bl
   14001082b:	add    dh,cl
   14001082d:	xor    DWORD PTR gs:[rax+0x53],edx
   140010831:	iret   
   140010832:	(bad)  
   140010833:	imul   eax,DWORD PTR [rdx+0x52acb942],0x45344012
   14001083d:	movabs ds:0x49f1f8c0a574c63b,al
   140010846:	neg    BYTE PTR [rsp+rbx*8]
   140010849:	rex.B in al,0xfe
   14001084c:	rex.RXB leave 
   14001084e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001084f:	movabs ds:0x9e8fafafa2edee2c,al
   140010858:	sahf   
   140010859:	(bad)  
   14001085a:	cmp    bh,BYTE PTR [rbx]
   14001085c:	cmp    ecx,ecx
   14001085e:	data16 mov bl,0xa4
   140010861:	shr    DWORD PTR [rcx+0x22],cl
   140010864:	xchg   ecx,eax
   140010865:	or     BYTE PTR [rdx-0x1837acd4],dl
   14001086b:	cdq    
   14001086c:	sbb    bl,BYTE PTR [rsp+rsi*4]
   14001086f:	mov    ebx,0x27061b0a
   140010874:	(bad)  
   140010875:	(bad)  
   140010876:	cmp    DWORD PTR [rax+rbp*8+0x10],edi
   14001087a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001087b:	mov    dl,0x4e
   14001087d:	fst    DWORD PTR [rax+rdi*1-0x75638d86]
   140010884:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010885:	nop
   140010886:	out    dx,al
   140010887:	pop    rsi
   140010888:	sub    DWORD PTR [rax+rbp*2+0x1a344028],0x23
   140010890:	sbb    dh,BYTE PTR [rdi+0x122d7e99]
   140010896:	mov    bl,0x9
   140010898:	rex.RB lahf 
   14001089a:	jbe    0x1400108f5
   14001089c:	rex.WRX mov ?,WORD PTR [rbp+0x1124b22b]
   1400108a3:	mov    eax,DWORD PTR [rax+rcx*4+0x47]
   1400108a7:	movabs ds:0x632e5e0fbf081ad5,eax
   1400108b0:	(bad)  
   1400108b1:	or     al,BYTE PTR [rax]
   1400108b3:	push   rbp
   1400108b4:	(bad)  
   1400108b5:	(bad)  
   1400108b6:	xchg   edi,eax
   1400108b7:	hlt    
   1400108b8:	xor    edx,DWORD PTR [rbx+0x4f]
   1400108bb:	shl    BYTE PTR [rbx-0x1b],0x42
   1400108bf:	add    al,0xd6
   1400108c1:	int3   
   1400108c2:	(bad)  
   1400108c3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400108c4:	(bad)  
   1400108c5:	xchg   esp,eax
   1400108c6:	xchg   esi,eax
   1400108c7:	add    DWORD PTR [rax+0x26818b66],eax
   1400108cd:	out    0xe9,al
   1400108cf:	js     0x140010892
   1400108d1:	(bad)  
   1400108d2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400108d3:	mov    DWORD PTR [rdi-0x52],esp
   1400108d6:	imul   edx,DWORD PTR [rax+0x20],0x2bd0c193
   1400108dd:	xchg   esp,eax
   1400108de:	sub    edx,DWORD PTR [rip+0xffffffffe502a54a]        # 0x12503ae2e
   1400108e4:	push   rdx
   1400108e5:	(bad)  
   1400108e6:	adc    eax,0x57ae82bd
   1400108eb:	sbb    BYTE PTR [rsi],ch
   1400108ed:	out    0x39,al
   1400108ef:	jp     0x140010951
   1400108f1:	sbb    ah,bl
   1400108f3:	fstp   DWORD PTR [rbp-0x6dc31a68]
   1400108f9:	push   rbp
   1400108fa:	movabs es:0xae83aba7a5113240,al
   140010904:	scas   al,BYTE PTR es:[rdi]
   140010905:	cs and dl,cl
   140010908:	sbb    BYTE PTR [rbp-0xe2e7a9e],al
   14001090e:	jno    0x140010896
   140010910:	rex.RXB (bad) 
   140010912:	leave  
   140010913:	cmp    ecx,DWORD PTR fs:[rax+0x174c3224]
   14001091a:	in     eax,dx
   14001091b:	repz rex.WR je 0x14001094b
   14001091f:	(bad)  
   140010920:	sbb    eax,0xdd84224b
   140010925:	cmp    al,0x24
   140010927:	sbb    cl,BYTE PTR [rbx+0x686345a3]
   14001092d:	pop    rdx
   14001092e:	(bad)  
   140010932:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010933:	scas   al,BYTE PTR es:[rdi]
   140010934:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010935:	scas   al,BYTE PTR es:[rdi]
   140010936:	(bad)  
   140010937:	(bad)  
   140010938:	xchg   esi,eax
   140010939:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001093a:	lahf   
   14001093b:	(bad)  
   14001093c:	mov    ecx,0xc617ce4c
   140010941:	stos   DWORD PTR es:[rdi],eax
   140010942:	imul   esp,esi,0x737628a1
   140010948:	adc    DWORD PTR [rcx],ebp
   14001094a:	fdivr  QWORD PTR [rdi+0x1050533f]
   140010950:	add    DWORD PTR [rdi],esp
   140010952:	movabs al,ds:0x844082f1dbac049e
   14001095b:	xchg   esi,eax
   14001095c:	add    DWORD PTR [rax+0x26818b66],eax
   140010962:	sbb    dl,BYTE PTR es:[rdi]
   140010965:	add    edx,DWORD PTR [rip+0x3e988727]        # 0x17e999092
   14001096b:	xor    eax,0xc46aaa86
   140010970:	sar    BYTE PTR [rbp+0x5031733],cl
   140010976:	rex.WRB retf 0x6790
   14001097a:	icebp  
   14001097b:	rex.WR
   14001097c:	rex
   14001097d:	push   r14
   14001097f:	xor    eax,0x2c4a8a62
   140010984:	sahf   
   140010985:	rex pop rax
   140010987:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   140010989:	pop    rsi
   14001098a:	movabs eax,ds:0x329529e42c512e5c
   140010993:	call   0x1842a981e
   140010998:	xor    eax,0x68c127fc
   14001099d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001099e:	(bad)  
   14001099f:	ror    cl,1
   1400109a1:	adc    dl,BYTE PTR [rdx-0x107b1ecb]
   1400109a7:	(bad)  
   1400109a8:	sar    DWORD PTR [rdi+0x5eba2361],cl
   1400109ae:	rex.B scas eax,DWORD PTR es:[rdi]
   1400109b0:	xchg   esp,eax
   1400109b1:	rex.WB ja 0x14001095e
   1400109b4:	test   al,0x6a
   1400109b6:	add    al,0x45
   1400109b8:	push   rbp
   1400109b9:	push   rcx
   1400109ba:	adc    al,0x95
   1400109bc:	rex.W xor al,0x86
   1400109bf:	stos   BYTE PTR es:[rdi],al
   1400109c0:	rex.RB push r9
   1400109c2:	push   rbp
   1400109c3:	or     eax,0xabdedfc9
   1400109c8:	ds leave 
   1400109ca:	mov    cl,0xe9
   1400109cc:	jmp    0x140010967
   1400109ce:	sub    eax,0xc61827e9
   1400109d3:	repz addr32 add dl,dh
   1400109d7:	je     0x1400109e9
   1400109d9:	(bad)  
   1400109da:	and    eax,0xabc36b1b
   1400109df:	loope  0x140010981
   1400109e1:	push   rax
   1400109e2:	jnp    0x14001098a
   1400109e4:	lea    esi,[rsi+0x805c598]
   1400109ea:	mov    ebx,0x840496d4
   1400109ef:	xchg   esi,eax
   1400109f0:	add    DWORD PTR [rax],eax
   1400109f2:	push   0xffffffffd7c818ae
   1400109f7:	pop    rax
   1400109f8:	(bad)  
   1400109f9:	adc    ecx,DWORD PTR [rbx-0x61]
   1400109fc:	es (bad) 
   1400109fe:	jle    0x140010982
   140010a00:	je     0x1400109d9
   140010a02:	adc    dh,BYTE PTR [rdx]
   140010a04:	fisttp QWORD PTR [rbx-0x43]
   140010a07:	(bad)  
   140010a08:	movabs al,ds:0xad0cad163a39e3b1
   140010a11:	add    eax,0xdaa765f0
   140010a16:	rol    BYTE PTR [rdx+rdx*2+0x60],cl
   140010a1a:	push   rbx
   140010a1b:	add    BYTE PTR [rax],0xde
   140010a1e:	mov    ds,ebp
   140010a20:	in     eax,dx
   140010a21:	and    eax,0x54564545
   140010a26:	mov    ah,0x58
   140010a28:	(bad)  
   140010a29:	push   rsp
   140010a2a:	mov    dh,0xb
   140010a2c:	(bad)  
   140010a2d:	pop    rcx
   140010a2e:	or     bl,cl
   140010a30:	(bad)  
   140010a31:	shr    BYTE PTR [rbx],1
   140010a33:	push   rsp
   140010a34:	sub    ah,BYTE PTR [rbp+0x2a]
   140010a37:	in     eax,0x12
   140010a39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a3a:	jb     0x1400109c5
   140010a3c:	xor    al,BYTE PTR [rax-0x7df44ee6]
   140010a42:	adc    al,0x5
   140010a44:	rex.WXB push r9
   140010a46:	sub    BYTE PTR [rsi+0x22b44e2b],dl
   140010a4c:	mov    DWORD PTR [rdx-0x19555797],esp
   140010a52:	add    DWORD PTR [rax+0x5301a8ac],eax
   140010a58:	fbstp  TBYTE PTR [rdi+0x11]
   140010a5b:	and    DWORD PTR [rcx-0x33],edi
   140010a5e:	lea    edx,[rdx-0x63]
   140010a61:	addr32 mov ebx,0x78c366ae
   140010a67:	lea    ecx,[rdx+0x3f098289]
   140010a6d:	mov    bl,0xf5
   140010a6f:	add    ecx,DWORD PTR [rax*1-0x309fdf7a]
   140010a76:	rex.WR add r14b,BYTE PTR [rsi]
   140010a79:	test   DWORD PTR [rbp+0x4d],esi
   140010a7c:	ins    BYTE PTR es:[rdi],dx
   140010a7d:	jae    0x140010a40
   140010a7f:	rex.WXB
   140010a80:	rex.WXB add QWORD PTR [r8+0x33],rax
   140010a84:	(bad)
   140010a87:	jge    0x140010a50
   140010a89:	rex.WB leave 
   140010a8b:	movabs ds:0x32a481a4ae42aaa8,eax
   140010a94:	jl     0x140010a88
   140010a96:	test   al,0x6f
   140010a98:	data16 and BYTE PTR [rdi+0x31],bl
   140010a9c:	rol    cl,1
   140010a9e:	popf   
   140010a9f:	cwde   
   140010aa0:	rex.X or eax,0xb9428005
   140010aa6:	fs mov bl,0xf8
   140010aa9:	ds jg  0x140010a82
   140010aac:	(bad)  
   140010aad:	rex.B cli 
   140010aaf:	or     bh,BYTE PTR ss:[rsi]
   140010ab2:	je     0x140010a84
   140010ab4:	push   rsp
   140010ab5:	add    DWORD PTR [rcx-0x63],edx
   140010ab8:	(bad)  
   140010ab9:	cmp    eax,0xaa9212e0
   140010abe:	adc    DWORD PTR [rcx+0x35],edx
   140010ac1:	and    dh,cl
   140010ac3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010ac4:	mov    bh,0x4e
   140010ac6:	xchg   esi,eax
   140010ac7:	and    al,0x2c
   140010ac9:	rol    esp,cl
   140010acb:	xor    BYTE PTR [rsp+rcx*1+0x43],dh
   140010acf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010ad0:	movabs ds:0x9055dffbb0c54eb,al
   140010ad9:	fst    DWORD PTR [rax+rsi*4+0xa089914]
   140010ae0:	mov    ch,BYTE PTR [rdx+rdi*1-0x26644254]
   140010ae7:	(bad)  
   140010ae8:	xchg   edx,eax
   140010ae9:	push   rdx
   140010aea:	cmp    eax,DWORD PTR [rdi-0x635f18ac]
   140010af0:	(bad)  
   140010af1:	sub    BYTE PTR [rax-0x1653005d],bh
   140010af7:	sar    esi,0x84
   140010afa:	(bad)  
   140010afb:	mov    DWORD PTR [rbp+0x68811868],0x58b3a6a0
   140010b05:	add    dh,bh
   140010b07:	(bad)  
   140010b08:	lods   al,BYTE PTR ds:[rsi]
   140010b09:	(bad)  
   140010b0a:	sbb    ecx,DWORD PTR [rdx+0x417c4b90]
   140010b10:	add    al,BYTE PTR [rdx+0x4b]
   140010b13:	add    eax,eax
   140010b15:	jmp    0x174ce0e30
   140010b1a:	xor    edx,DWORD PTR [rax-0x5d]
   140010b1d:	(bad)  
   140010b1e:	and    BYTE PTR [rbp+0x37],bl
   140010b21:	sub    DWORD PTR [rsi-0x69b5ae14],edx
   140010b27:	and    eax,0xdaf54554
   140010b2c:	(bad)  
   140010b2d:	(bad)  
   140010b2e:	nop
   140010b2f:	pop    rsp
   140010b30:	rol    DWORD PTR [rdi],0xed
   140010b33:	sub    al,0x81
   140010b35:	(bad)  
   140010b36:	adc    BYTE PTR [rdx],al
   140010b38:	shl    DWORD PTR [rcx],cl
   140010b3a:	xchg   edi,eax
   140010b3b:	adc    eax,0x45a2822d
   140010b40:	mov    BYTE PTR [rdi],ah
   140010b42:	stos   BYTE PTR es:[rdi],al
   140010b43:	movabs ds:0xecdb584776ecdfbb,eax
   140010b4c:	xchg   esi,eax
   140010b4d:	push   rcx
   140010b4e:	push   rbp
   140010b4f:	mov    edi,0x82017dd9
   140010b54:	(bad)  
   140010b55:	(bad)  
   140010b56:	cmp    eax,0xc8811038
   140010b5b:	sti    
   140010b5c:	and    dl,BYTE PTR [rax]
   140010b5e:	mov    dl,0xcf
   140010b60:	push   rdx
   140010b61:	jo     0x140010bdc
   140010b63:	test   DWORD PTR [rsi+0x5a],eax
   140010b66:	cmp    al,0xb
   140010b68:	add    BYTE PTR [rax],ch
   140010b6a:	(bad)  
   140010b6b:	push   rdi
   140010b6c:	fcom   QWORD PTR [rdi]
   140010b6e:	and    DWORD PTR [rbp-0x70],0x2c17823
   140010b75:	rex.X
   140010b76:	rex.WXB add r8,rax
   140010b79:	mov    ecx,0x26ca062c
   140010b7e:	xchg   ebx,eax
   140010b7f:	loopne 0x140010b65
   140010b81:	popf   
   140010b82:	fisttp DWORD PTR [rdx+0x59fcfba5]
   140010b88:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010b89:	fcom   QWORD PTR [rbp-0x53]
   140010b8c:	test   BYTE PTR [rdx],0xac
   140010b8f:	(bad)  
   140010b90:	lods   eax,DWORD PTR ds:[rsi]
   140010b91:	rex.WRB add r10b,0x3c
   140010b95:	lock or eax,esp
   140010b98:	xor    bh,dh
   140010b9a:	ds rex.WX pop rsp
   140010b9d:	jno    0x140010be6
   140010b9f:	fcom   DWORD PTR [rax]
   140010ba1:	push   rax
   140010ba2:	test   al,0xe8
   140010ba4:	cmp    al,BYTE PTR [rip+0xffffffff800f17cf]        # 0xc0102379
   140010baa:	(bad)  
   140010bab:	(bad)  
   140010bad:	(bad)  
   140010bae:	cmp    ecx,ebx
   140010bb0:	jae    0x140010bc0
   140010bb2:	or     al,BYTE PTR [rcx+0x924536b]
   140010bb8:	xor    eax,0xf849a912
   140010bbd:	icebp  
   140010bbe:	rex.RXB and BYTE PTR [r10],r9b
   140010bc1:	in     eax,0x32
   140010bc3:	xchg   esi,eax
   140010bc4:	imul   esp,DWORD PTR [rdx],0x6cac8d80
   140010bca:	mov    eax,0x76fe19df
   140010bcf:	jnp    0x140010b85
   140010bd1:	add    al,0x7b
   140010bd3:	mov    bh,0xb6
   140010bd5:	sbb    al,0x20
   140010bd7:	mov    ah,0xc
   140010bd9:	add    BYTE PTR [rbx+rbx*2],dh
   140010bdc:	or     al,0xb4
   140010bde:	call   QWORD PTR [ecx-0x6ae1d65]
   140010be5:	or     al,0x8b
   140010be7:	sub    esp,0x8fdbbad8
   140010bed:	rex.WRX xchg rcx,rax
   140010bef:	gs (bad) 
   140010bf1:	push   0xffffffffdebf9bcc
   140010bf6:	adc    dl,BYTE PTR [rbp-0x3b]
   140010bf9:	sub    dl,BYTE PTR [rsi+0x250ae4cb]
   140010bff:	add    al,0x2
   140010c01:	rex.RB xchg r9d,eax
   140010c03:	imul   esi,DWORD PTR [rdx+0x42821ae9],0x73
   140010c0a:	cli    
   140010c0b:	xor    al,0x2f
   140010c0d:	movabs al,ds:0xfc5f1a884141faa0
   140010c16:	(bad)  
   140010c17:	add    eax,0x35fb9c05
   140010c1c:	rex.WXB add al,0xc2
   140010c1f:	out    dx,al
   140010c20:	cmp    eax,0xb377ae10
   140010c25:	pop    rax
   140010c26:	add    BYTE PTR [rdx],bl
   140010c28:	push   rbp
   140010c29:	in     eax,0x17
   140010c2b:	xor    edi,0xb840173
   140010c31:	push   rdx
   140010c32:	jmp    0x14033df34
   140010c37:	shr    BYTE PTR [rcx+rsi*1-0x30],1
   140010c3b:	retf   
   140010c3c:	pop    rsi
   140010c3d:	sti    
   140010c3e:	rcr    DWORD PTR [rbx-0x3c1152aa],1
   140010c44:	or     al,0xcc
   140010c46:	or     al,0x54
   140010c48:	cs cdq 
   140010c4a:	(bad)  
   140010c4b:	pushf  
   140010c4c:	push   0xffffffffffffffba
   140010c4e:	sbb    BYTE PTR [rax],cl
   140010c50:	add    dl,BYTE PTR [rax-0x242013d1]
   140010c56:	jge    0x140010cd0
   140010c58:	pop    rbp
   140010c59:	(bad)
   140010c5c:	(bad)  
   140010c5d:	ins    BYTE PTR es:[rdi],dx
   140010c5e:	(bad)
   140010c61:	lods   eax,DWORD PTR ds:[rsi]
   140010c62:	gs rex.WR retf 
   140010c65:	mov    ah,0xdb
   140010c67:	js     0x140010c34
   140010c69:	mov    al,BYTE PTR [rbx-0x78]
   140010c6c:	mov    ecx,0xe6b577ac
   140010c71:	neg    DWORD PTR [rax+rax*4-0x7e]
   140010c75:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010c76:	rex.WR (bad) 
   140010c78:	jo     0x140010cca
   140010c7a:	cmp    BYTE PTR [rdx+0x17],0x42
   140010c7e:	or     bh,BYTE PTR [rsi+rax*1+0x60]
   140010c82:	sbb    BYTE PTR [rsi],ah
   140010c84:	mov    edx,0x6ec2006e
   140010c89:	fild   QWORD PTR [rsi+0x72bb611b]
   140010c8f:	fwait
   140010c90:	ss (bad) 
   140010c92:	(bad)  
   140010c93:	jae    0x140010ca3
   140010c95:	add    eax,DWORD PTR [rbx+0x36e08046]
   140010c9b:	js     0x140010d0f
   140010c9d:	xlat   BYTE PTR ds:[rbx]
   140010c9e:	(bad)  
   140010c9f:	pushf  
   140010ca0:	rex.WRX adc r10,QWORD PTR [rdi+0x65a44e73]
   140010ca7:	add    BYTE PTR [rax-0x4df9d32d],al
   140010cad:	and    rsi,QWORD PTR [r15+0x66]
   140010cb1:	movabs al,ds:0x45021000818aa68e
   140010cba:	lea    esp,[rdx-0x66]
   140010cbd:	xchg   ebp,eax
   140010cbe:	fcmovbe st,st(5)
   140010cc0:	xor    eax,0xdf24089b
   140010cc5:	sbb    dh,BYTE PTR [rdi]
   140010cc7:	sbb    al,0xe6
   140010cc9:	xor    bl,al
   140010ccb:	pop    rsi
   140010ccc:	outs   dx,DWORD PTR ds:[rsi]
   140010ccd:	jnp    0x140010cac
   140010ccf:	and    BYTE PTR [rdi+0x28],dl
   140010cd2:	jp     0x140010cf1
   140010cd4:	test   DWORD PTR [rbp+0x5],ebp
   140010cd7:	mov    ah,0xdd
   140010cd9:	(bad)  
   140010cda:	(bad)
   140010cdd:	(bad)  
   140010cde:	and    DWORD PTR [rcx],ebx
   140010ce0:	loope  0x140010ce4
   140010ce2:	add    BYTE PTR [rip+0xb9fa77f],al        # 0x14ba0b467
   140010ce8:	add    dl,BYTE PTR [rdx+rbx*1]
   140010ceb:	lods   eax,DWORD PTR ds:[rsi]
   140010cec:	lahf   
   140010ced:	push   rcx
   140010cee:	(bad)  
   140010cef:	movabs ds:0xc1016680041c0ad8,eax
   140010cf8:	in     eax,dx
   140010cf9:	out    0xe2,eax
   140010cfb:	mov    esi,0x822d60bf
   140010d00:	push   rsi
   140010d01:	add    al,BYTE PTR [rax-0x4b7e755a]
   140010d07:	jns    0x140010d33
   140010d09:	(bad)  
   140010d0a:	add    dh,BYTE PTR [rax]
   140010d0c:	lea    esi,[rdx-0x3]
   140010d0f:	retf   0x1a40
   140010d12:	pop    rdx
   140010d13:	popf   
   140010d14:	mov    esi,0x49075cfa
   140010d19:	xchg   edx,eax
   140010d1a:	stos   BYTE PTR es:[rdi],al
   140010d1b:	xchg   ebx,eax
   140010d1c:	pop    rsi
   140010d1d:	cmp    BYTE PTR [rdx+rax*4-0x29],bh
   140010d21:	data16 fdiv QWORD PTR [rax]
   140010d24:	sub    BYTE PTR [rbp+0x1dad50b],dl
   140010d2a:	mov    ch,0x36
   140010d2c:	fisubr WORD PTR ds:[rsp+riz*8+0x1]
   140010d31:	fisub  DWORD PTR [rax+0x4d697e10]
   140010d37:	add    eax,DWORD PTR [rax+0x367e95f]
   140010d3d:	test   BYTE PTR [rax+0x2ced44a5],dh
   140010d43:	jo     0x140010d7a
   140010d45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010d46:	shl    esp,1
   140010d48:	jmp    0x1596a42eb
   140010d4d:	add    BYTE PTR [rax-0x46],ch
   140010d50:	sbb    BYTE PTR [rax-0x62],cl
   140010d53:	lahf   
   140010d54:	(bad)  
   140010d55:	and    bh,dh
   140010d57:	xchg   edi,eax
   140010d58:	stos   DWORD PTR es:[rdi],eax
   140010d59:	jnp    0x140010d3b
   140010d5b:	(bad)  
   140010d5c:	enter  0x9d4d,0x9
   140010d60:	adc    al,0x64
   140010d62:	pop    rcx
   140010d63:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   140010d65:	sub    dh,dh
   140010d67:	sub    al,0xbb
   140010d69:	xor    eax,0x4541a324
   140010d6e:	(bad)  
   140010d6f:	sub    BYTE PTR [rdx+rcx*8+0x1f3a4cd5],dl
   140010d76:	sub    al,bh
   140010d78:	sbb    ebp,DWORD PTR [rbp+0xa]
   140010d7b:	sti    
   140010d7c:	mov    edi,0xabba03f0
   140010d81:	(bad)  
   140010d82:	xor    BYTE PTR [rdi-0x3f],al
   140010d85:	(bad)  [rbp+0x1d]
   140010d88:	sub    BYTE PTR [rax],bh
   140010d8a:	out    0x53,eax
   140010d8c:	add    ecx,DWORD PTR [rdx]
   140010d8e:	(bad)  
   140010d8f:	rex.R sbb eax,0xc2140be7
   140010d95:	(bad)  
   140010d96:	jrcxz  0x140010d4c
   140010d98:	add    DWORD PTR [rax-0x4f4fafe7],esp
   140010d9e:	(bad)  
   140010d9f:	(bad)  
   140010da0:	xchg   esi,eax
   140010da1:	test   eax,0xce308105
   140010da6:	loopne 0x140010d64
   140010da8:	rex.WX retf 
   140010daa:	add    al,al
   140010dac:	mov    ecx,0x2fc8199c
   140010db1:	(bad)  
   140010db2:	mov    edi,0x828319e2
   140010db7:	imul   esp,DWORD PTR [rcx],0xffffffd4
   140010dba:	nop
   140010dbb:	mov    WORD PTR [rcx-0x71],ss
   140010dbe:	cmc    
   140010dbf:	test   BYTE PTR [rdi-0x7a8d5a4c],0xbc
   140010dc6:	rex.WXB xor dil,r10b
   140010dc9:	movsxd esp,ebx
   140010dcb:	(bad)  
   140010dcc:	or     al,0x24
   140010dce:	movsxd ecx,eax
   140010dd0:	mov    DWORD PTR [rbx+0x2d3f1390],ecx
   140010dd6:	push   rax
   140010dd7:	adc    BYTE PTR [rbp-0x55ff31d7],dh
   140010ddd:	xor    esi,DWORD PTR [rip+0x2a141079]        # 0x16a151e5c
   140010de3:	xchg   BYTE PTR [rcx-0x47],al
   140010de6:	push   rdx
   140010de7:	cmp    DWORD PTR [rbx-0x34b72f60],ebp
   140010ded:	data16 rex.WB add al,0x9a
   140010df1:	sub    eax,DWORD PTR [rax]
   140010df3:	test   ch,bh
   140010df5:	ins    DWORD PTR es:[rdi],dx
   140010df6:	ss pop rax
   140010df8:	pop    rsi
   140010df9:	push   rax
   140010dfa:	fisttp QWORD PTR [rax+0x5b]
   140010dfd:	(bad)  
   140010dfe:	add    BYTE PTR [rdx-0x5065f9d3],bl
   140010e04:	mov    ebx,0x2f33812d
   140010e09:	(bad)  
   140010e0a:	jge    0x140010e42
   140010e0c:	pop    rdx
   140010e0d:	lock sbb BYTE PTR [rcx-0x6783eb76],ah
   140010e14:	rex.XB sub bl,BYTE PTR [r8-0x16]
   140010e18:	stc    
   140010e19:	test   BYTE PTR [rdx-0x345cdb88],ch
   140010e1f:	(bad)  
   140010e20:	mov    eax,0x7913ad23
   140010e25:	cwde   
   140010e26:	cs clc 
   140010e28:	rex.WB (bad) 
   140010e2a:	stos   BYTE PTR es:[rdi],al
   140010e2b:	push   rdx
   140010e2c:	push   rbp
   140010e2d:	push   rbx
   140010e2e:	imul   ebx,DWORD PTR [rbx+0x30338500],0xffffffb1
   140010e35:	out    0xa,eax
   140010e37:	or     bh,dh
   140010e39:	repz lahf 
   140010e3b:	or     DWORD PTR [rsp+rdx*1],edx
   140010e3e:	pop    rcx
   140010e3f:	test   ch,0x48
   140010e42:	fsub   QWORD PTR [rax+rbp*1]
   140010e45:	clc    
   140010e46:	rex.WRXB
   140010e47:	rex.RXB push r12
   140010e49:	iret   
   140010e4a:	imul   eax,DWORD PTR [rsi],0x86b2fb71
   140010e50:	(bad)  
   140010e51:	in     al,dx
   140010e52:	lea    eax,[rax]
   140010e54:	sar    edi,0x99
   140010e57:	jmp    0xc181d7d7
   140010e5c:	jge    0x140010e49
   140010e5e:	rex.WR fbstp TBYTE PTR [rdx-0xa]
   140010e62:	xchg   ebx,eax
   140010e63:	ds (bad) 
   140010e65:	push   rdx
   140010e66:	(bad)  
   140010e67:	mov    bh,0xf3
   140010e69:	or     edx,DWORD PTR [rsp+rbx*4+0x62]
   140010e6d:	movabs al,ds:0xa6dcae8bc63c64e9
   140010e76:	(bad)
   140010e79:	ds rex.WXB
   140010e7b:	lock xchg ebp,eax
   140010e7d:	iret   
   140010e7e:	jg     0x140010e61
   140010e80:	rex.WXB sub rcx,r15
   140010e83:	(bad)  
   140010e84:	icebp  
   140010e85:	rex.RX (bad) 
   140010e87:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010e88:	sbb    BYTE PTR [rbx+0x5f326498],bl
   140010e8e:	movabs al,ds:0x9a465eab6978ae54
   140010e97:	rex.WRXB (bad) 
   140010e99:	or     al,0x51
   140010e9b:	call   0xf587fc4f
   140010ea0:	cld    
   140010ea1:	scas   eax,DWORD PTR es:[rdi]
   140010ea2:	loopne 0x140010eca
   140010ea4:	adc    DWORD PTR [rdi-0x41e27bdb],0xa221c074
   140010eae:	stos   BYTE PTR es:[rdi],al
   140010eaf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010eb0:	loop   0x140010f23
   140010eb2:	cmp    dl,bl
   140010eb4:	imul   edi,DWORD PTR [rdx-0x4e],0x69533a59
   140010ebb:	loop   0x140010e4e
   140010ebd:	or     dl,al
   140010ebf:	(bad)  
   140010ec0:	jl     0x140010e73
   140010ec2:	(bad)  
   140010ec3:	fsub   st,st(4)
   140010ec5:	adc    al,0xa3
   140010ec7:	xchg   ebx,eax
   140010ec8:	push   rbx
   140010ec9:	rex.WR
   140010eca:	rex.WR
   140010ecb:	rex.WRXB xchg r11,rax
   140010ecd:	(bad)  
   140010ece:	adc    eax,0x81034dd1
   140010ed3:	cmp    eax,0x62ddb81d
   140010ed8:	rex.WR (bad) 
   140010eda:	stc    
   140010edb:	and    BYTE PTR [rdx+0x24696bc9],0xbe
   140010ee2:	imul   edx,DWORD PTR [rbx],0x4e
   140010ee5:	fcom   st(5)
   140010ee7:	mov    ah,0x2c
   140010ee9:	rex.WR out 0x5a,eax
   140010eec:	xor    eax,0x8f19234d
   140010ef1:	rcr    DWORD PTR [rcx-0x32622f37],cl
   140010ef7:	rcl    BYTE PTR [rbp-0x38756f37],cl
   140010efd:	push   rcx
   140010efe:	fs cdq 
   140010f00:	jb     0x140010ea7
   140010f02:	ret    0x2e64
   140010f05:	(bad)  
   140010f06:	fsub   st,st(4)
   140010f08:	and    al,0x63
   140010f0a:	xchg   ebx,eax
   140010f0b:	xchg   ebx,eax
   140010f0c:	rex.WR out 0x72,al
   140010f0f:	adc    al,0x4a
   140010f11:	gs or  al,0xd3
   140010f14:	add    al,BYTE PTR [rcx-0x15a9b2d]
   140010f1a:	fidiv  WORD PTR [rdi]
   140010f1c:	cmp    al,cl
   140010f1e:	add    BYTE PTR es:[rax],ah
   140010f21:	in     al,dx
   140010f22:	adc    eax,0xf7fe5e75
   140010f27:	(bad)  
   140010f28:	push   rdi
   140010f29:	sub    al,0xb0
   140010f2b:	hlt    
   140010f2c:	jg     0x140010f85
   140010f2e:	(bad)
   140010f31:	adc    eax,0xc3990c67
   140010f36:	fnstsw WORD PTR [rbx]
   140010f38:	sub    edx,edx
   140010f3a:	xor    dl,BYTE PTR [rsi]
   140010f3c:	rex and DWORD PTR [rdx-0x60],0xffffffeb
   140010f41:	jae    0x140010ec8
   140010f43:	shl    bh,cl
   140010f45:	repz fldcw WORD PTR ds:[rdi]
   140010f49:	jl     0x140010f6b
   140010f4b:	xchg   esi,eax
   140010f4c:	rex.W
   140010f4d:	ds hlt 
   140010f4f:	addr32 jg 0x140010f44
   140010f52:	out    0x50,al
   140010f54:	pop    rsi
   140010f55:	shr    BYTE PTR [rip+0xffffffffcccb9a06],0x40        # 0x10ccca962
   140010f5c:	fstp   st(1)
   140010f5e:	rex.WR push 0xffffffff866b8b41
   140010f64:	rex.RXB xor al,0xff
   140010f67:	mov    bl,ch
   140010f69:	test   DWORD PTR ds:[rbp+0x7f9804ad],0x2492413e
   140010f74:	movabs ds:0xde8c923308b10891,al
   140010f7d:	add    al,0xa7
   140010f7f:	pop    rdx
   140010f80:	mov    cl,ch
   140010f82:	sub    eax,0x18c922ce
   140010f87:	mov    eax,0x414b3ac6
   140010f8c:	xchg   edx,eax
   140010f8d:	shl    BYTE PTR [rbx+rdi*2],1
   140010f90:	cli    
   140010f91:	xor    DWORD PTR [rdi+0x214d67d9],esi
   140010f97:	push   rcx
   140010f98:	rcl    DWORD PTR [rsi-0x307602be],cl
   140010f9e:	add    al,BYTE PTR [rax]
   140010fa0:	outs   dx,BYTE PTR ds:[rsi]
   140010fa1:	and    dl,BYTE PTR [rax+0xd]
   140010fa4:	fmulp  st(6),st
   140010fa6:	mov    al,0xc
   140010fa8:	mov    bl,0xc
   140010faa:	pop    rsp
   140010fab:	rex.RB ja 0x140010ff5
   140010fae:	jg     0x140010fa7
   140010fb0:	gs add al,0xf6
   140010fb3:	jmp    0x1a2f4ba96
   140010fb8:	add    eax,0x40000cb4
   140010fbd:	push   0x73bc9031
   140010fc2:	idiv   DWORD PTR [rsi-0x79787935]
   140010fc8:	jle    0x140011002
   140010fca:	cmp    BYTE PTR [rdx+rdi*8],dh
   140010fcd:	jg     0x140010f8d
   140010fcf:	lock in eax,0xaf
   140010fd2:	jle    0x140010fc1
   140010fd4:	addr32 (bad) 
   140010fd6:	push   rbp
   140010fd7:	(bad)  
   140010fd8:	mov    esi,0x231c9b97
   140010fdd:	(bad)  
   140010fde:	jle    0x140010f62
   140010fe0:	mov    gs,esi
   140010fe2:	and    eax,0x40ccdcd
   140010fe7:	sahf   
   140010fe8:	mov    dl,0xdb
   140010fea:	mov    esi,0xf5cebdb9
   140010fef:	int    0x2b
   140010ff1:	mov    edx,0xf258be41
   140010ff6:	test   ebp,esi
   140010ff8:	fs xor al,0x55
   140010ffb:	jae    0x14001100f
   140010ffd:	and    ah,0x73
   140011000:	out    dx,al
   140011001:	cmp    al,BYTE PTR [rax]
   140011003:	loope  0x140011029
   140011005:	movabs ds:0xfa324b5b5a9bb9f3,eax
   14001100e:	rcr    DWORD PTR [rbx+0x39f86b6b],cl
   140011014:	fwait
   140011015:	xchg   ecx,eax
   140011016:	xchg   eax,eax
   140011018:	xor    eax,0x428299e
   14001101d:	sbb    DWORD PTR [rdi+0xce72ea],esi
   140011023:	adc    BYTE PTR [rsi],al
   140011025:	(bad)  
   140011026:	xor    eax,DWORD PTR [rcx]
   140011028:	or     DWORD PTR [rbx],0x66b35e00
   14001102e:	call   QWORD PTR [rip+0x2cc196fa]        # 0x16cc2a72e
   140011034:	ret    0x2a73
   140011037:	sub    eax,0x781f0005
   14001103c:	(bad)  
   14001103d:	jnp    0x140010fca
   14001103f:	jg     0x140011034
   140011041:	jmp    0xfedc8c05
   140011046:	fisttp QWORD PTR [rdi-0x61]
   140011049:	int3   
   14001104a:	rex.WRB
   14001104b:	rex.WRXB movabs r14,0x5fb62bb41bcde2ff
   140011055:	sub    cl,BYTE PTR [rbx]
   140011057:	and    DWORD PTR [rdx-0x71],esi
   14001105a:	cmp    eax,0x2775e3be
   14001105f:	(bad)  
   140011060:	xchg   DWORD PTR [rsi+0x6b],edi
   140011063:	jns    0x140011034
   140011065:	icebp  
   140011066:	mov    edx,0x938a8199
   14001106b:	rex.XB loope 0x140011033
   14001106e:	rex xor ecx,esp
   140011071:	or     al,0xe4
   140011073:	rex.WX mov al,0x1f
   140011076:	pop    rsi
   140011077:	xor    eax,0xc73f6634
   14001107c:	xchg   esi,eax
   14001107d:	stos   DWORD PTR es:[rdi],eax
   14001107e:	pop    rsp
   14001107f:	xchg   BYTE PTR [rcx-0x57],cl
   140011082:	sbb    al,0xa8
   140011084:	sbb    eax,0xfc196ad0
   140011089:	(bad)  
   14001108a:	and    cl,bl
   14001108c:	jl     0x1400110e7
   14001108e:	or     ecx,eax
   140011090:	jge    0x140011097
   140011092:	stc    
   140011093:	test   BYTE PTR [rcx],bl
   140011095:	rex.WB (bad) 
   140011097:	test   QWORD PTR [rcx+r9*8-0x56],rdi
   14001109c:	add    bl,BYTE PTR [rsi-0x63ef606d]
   1400110a2:	loop   0x14001108f
   1400110a4:	je     0x1400110c8
   1400110a6:	pop    fs
   1400110a8:	xlat   BYTE PTR ds:[rbx]
   1400110a9:	ror    DWORD PTR [rax+0x4e],cl
   1400110ac:	adc    edx,DWORD PTR [rdx+rbx*1]
   1400110af:	out    dx,eax
   1400110b0:	outs   dx,BYTE PTR ds:[rsi]
   1400110b1:	rex.RX popf 
   1400110b3:	repz xlat BYTE PTR ds:[rbx]
   1400110b5:	add    al,al
   1400110b7:	int3   
   1400110b8:	(bad)  
   1400110b9:	ror    al,1
   1400110bb:	sub    dl,BYTE PTR [rax+0x1]
   1400110be:	popf   
   1400110bf:	sub    al,BYTE PTR [rax]
   1400110c1:	adc    BYTE PTR [rdx+0x441346af],dh
   1400110c7:	lahf   
   1400110c8:	xor    ebp,DWORD PTR [rcx+0x29]
   1400110cb:	add    BYTE PTR [rax],al
   1400110cd:	clc    
   1400110ce:	sar    bl,0xdf
   1400110d1:	pop    rbx
   1400110d2:	add    BYTE PTR [rsi],bh
   1400110d4:	hlt    
   1400110d5:	mov    DWORD PTR [rdi-0x2],ecx
   1400110d8:	cmc    
   1400110d9:	add    edi,0xffffff8f
   1400110dc:	(bad)  
   1400110dd:	cli    
   1400110de:	call   0x12d9fcf85
   1400110e3:	cdq    
   1400110e4:	ins    BYTE PTR es:[rdi],dx
   1400110e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400110e6:	mov    ecx,0x6376db65
   1400110eb:	(bad)  
   1400110ec:	rol    al,0xf8
   1400110ef:	(bad)  
   1400110f0:	cmc    
   1400110f1:	movsxd ecx,DWORD PTR [rbx-0x65]
   1400110f4:	sub    eax,0x32b7ba06
   1400110f9:	(bad)  
   1400110fc:	sbb    DWORD PTR [rcx-0x51e7997f],0xffffff85
   140011103:	iret   
   140011104:	ins    BYTE PTR es:[rdi],dx
   140011105:	mov    dh,0xcd
   140011107:	jo     0x140011144
   140011109:	rex.RB (bad) 
   14001110b:	ins    DWORD PTR es:[rdi],dx
   14001110c:	jbe    0x14001116f
   14001110e:	cwde   
   14001110f:	xchg   esi,eax
   140011110:	(bad)  
   140011111:	pop    rdx
   140011112:	in     eax,0x8b
   140011114:	mov    gs,ebx
   140011116:	movabs al,ds:0x3ae373bac8ea4428
   14001111f:	mov    eax,0x42dfece7
   140011124:	push   rbx
   140011125:	ins    BYTE PTR es:[rdi],dx
   140011126:	rex.RB test DWORD PTR [r8+0x46],0x5cde9fcb
   14001112e:	shr    DWORD PTR [rax],0x14
   140011131:	add    DWORD PTR [rdx+0x706e6f4f],ebx
   140011137:	repnz sbb edx,DWORD PTR [edx+ebx*1]
   14001113c:	jg     0x1400111b5
   14001113e:	(bad)  
   14001113f:	cmp    eax,0x6701ab07
   140011144:	jp     0x140011125
   140011146:	enter  0x7032,0x9
   14001114a:	mov    edi,0xfefca46
   14001114f:	adc    eax,edx
   140011151:	jns    0x140011155
   140011153:	adc    DWORD PTR [rsi+0x3e570003],0xf8bfc1f4
   14001115d:	loope  0x1400111a6
   14001115f:	(bad)  
   140011160:	dec    cl
   140011162:	(bad)  
   140011163:	nop    DWORD PTR [rdx]
   140011166:	jb     0x140011105
   140011168:	pop    rsi
   140011169:	jns    0x140011159
   14001116b:	add    DWORD PTR [rdi],0xf
   14001116e:	(bad)  
   14001116f:	(bad)  
   140011170:	(bad)
   140011175:	sub    DWORD PTR [rsi],eax
   140011177:	xor    ah,BYTE PTR [rdi-0x63]
   14001117a:	sbb    eax,ecx
   14001117c:	(bad)  
   14001117d:	xor    eax,DWORD PTR [rdx]
   14001117f:	rex.X in eax,dx
   140011181:	or     BYTE PTR [rcx],bl
   140011183:	ss loop 0x1400111dc
   140011186:	rol    DWORD PTR [rbx+rcx*2+0x6ac08c81],cl
   14001118d:	(bad)  
   14001118e:	jo     0x140011133
   140011190:	fidivr WORD PTR [rdx-0x19]
   140011193:	mov    cl,BYTE PTR [rdi-0x10]
   140011196:	xor    bh,BYTE PTR [edx-0x2182535d]
   14001119d:	data16 int 0x79
   1400111a0:	jnp    0x140011183
   1400111a2:	rex.W int 0x29
   1400111a5:	(bad)  
   1400111a6:	popf   
   1400111a7:	rex.XB in al,0x1
   1400111aa:	(bad)  
   1400111ab:	add    ch,BYTE PTR [rax]
   1400111ad:	test   BYTE PTR [rdi+riz*2],bl
   1400111b0:	(bad)  
   1400111b1:	or     eax,0x198afc41
   1400111b6:	mov    dh,0x6c
   1400111b8:	add    al,0x8
   1400111ba:	jle    0x1400111af
   1400111bc:	(bad)  
   1400111be:	mov    ecx,0xa8b01f9f
   1400111c3:	(bad)  
   1400111c4:	rex fild DWORD PTR [rdx]
   1400111c7:	cwde   
   1400111c8:	outs   dx,DWORD PTR ds:[rsi]
   1400111c9:	stc    
   1400111ca:	enter  0x7e5f,0x70
   1400111ce:	adc    al,bh
   1400111d0:	out    dx,al
   1400111d1:	mov    ebx,0x1fbef3df
   1400111d6:	cmp    eax,0xcd99f3bb
   1400111db:	test   eax,0xbbcde64c
   1400111e0:	neg    DWORD PTR [rip+0xffffffffd6227379]        # 0x11623855f
   1400111e6:	pop    rsp
   1400111e7:	xor    eax,edx
   1400111e9:	rcl    BYTE PTR [rax-0x7e2d20b6],1
   1400111ef:	sar    BYTE PTR [rbp-0x31],1
   1400111f2:	(bad)  
   1400111f3:	scas   eax,DWORD PTR es:[rdi]
   1400111f4:	iret   
   1400111f5:	movabs ds:0x8ce1906bc1d74195,al
   1400111fe:	cli    
   1400111ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011200:	stos   DWORD PTR es:[rdi],eax
   140011201:	pop    rsp
   140011202:	mov    edx,0x6dd774af
   140011207:	movabs ds:0x17b9f9d4d0eb8b35,eax
   140011210:	pop    rcx
   140011211:	mov    bl,0xd1
   140011213:	sub    al,0xae
   140011215:	xor    ebx,0xffffff9d
   140011218:	data16 rex.WB (bad) 
   14001121b:	jb     0x1400111db
   14001121d:	mov    BYTE PTR [rip+0xfffffffffd9bd36a],ah        # 0x13d9ce58d
   140011223:	jae    0x140011223
   140011225:	mov    ecx,0x501d3d3b
   14001122a:	push   0x77c2101e
   14001122f:	fld    DWORD PTR [rbx+rdx*2-0x30]
   140011233:	mov    al,0x43
   140011235:	add    al,0x9
   140011237:	mov    ebx,0x9ae08046
   14001123c:	imul   esi
   14001123e:	imul   BYTE PTR [rsi+0x1e]
   140011241:	or     BYTE PTR [rcx-0x17118c53],0xef
   140011248:	out    0x7,eax
   14001124a:	ficom  DWORD PTR [rsi]
   14001124c:	rcr    cl,0x92
   14001124f:	iret   
   140011250:	jle    0x140011238
   140011252:	outs   dx,DWORD PTR ds:[rsi]
   140011253:	repz shl BYTE PTR [rbx-0x289c40],0xf6
   14001125b:	sub    eax,0x76bd5e6f
   140011260:	push   rcx
   140011261:	pop    rbp
   140011262:	xor    DWORD PTR [rax-0x5b],edx
   140011265:	xor    BYTE PTR [rbp+0x3b],dl
   140011268:	xor    edx,eax
   14001126a:	mov    DWORD PTR fs:[rax-0x4e],ebp
   14001126e:	jnp    0x140011236
   140011270:	(bad)  
   140011271:	and    BYTE PTR [rdi-0x30f5c8cc],bh
   140011277:	mov    esp,0xf075df91
   14001127c:	(bad)  
   14001127d:	outs   dx,BYTE PTR ds:[rsi]
   14001127e:	cmp    ah,BYTE PTR [rbp+rbx*2-0x2b]
   140011282:	(bad)  
   140011283:	(bad)  
   140011284:	popf   
   140011285:	in     al,0x9f
   140011287:	and    al,BYTE PTR [rdx]
   140011289:	push   0x14
   14001128b:	jmp    0x1400112e9
   14001128d:	mov    eax,0xcd7dc10e
   140011292:	rex.RX xor r11b,BYTE PTR [rdx-0x72]
   140011296:	sti    
   140011297:	push   rax
   140011298:	popf   
   140011299:	(bad)
   14001129c:	and    ebx,DWORD PTR [rcx]
   14001129e:	sbb    esp,DWORD PTR [rdi*8+0x210f2304]
   1400112a5:	(bad)  
   1400112a6:	jo     0x1400112ee
   1400112a8:	push   rsi
   1400112a9:	add    dh,BYTE PTR [rbx+0x6cd04002]
   1400112af:	outs   dx,DWORD PTR ds:[rsi]
   1400112b0:	mov    ah,0xeb
   1400112b2:	cdq    
   1400112b3:	add    cl,al
   1400112b5:	jge    0x1400112a6
   1400112b7:	repnz add DWORD PTR [rsi],esp
   1400112ba:	jbe    0x1400112c0
   1400112bc:	rex
   1400112bd:	es pop rsp
   1400112bf:	stc    
   1400112c0:	iret   
   1400112c1:	mov    ebp,DWORD PTR [rsp+rax*1]
   1400112c4:	add    BYTE PTR [rax-0x74724645],ch
   1400112ca:	cmp    DWORD PTR [rbx+rsi*1+0x3],0x58cc0ff5
   1400112d2:	or     al,0x24
   1400112d4:	mov    ebx,0x64f3564a
   1400112d9:	(bad)  
   1400112da:	in     al,dx
   1400112db:	xchg   DWORD PTR [edi+0x6a378dc2],ecx
   1400112e2:	rex.WR xor BYTE PTR [rsi-0x3f],r8b
   1400112e6:	mov    cl,0x12
   1400112e8:	or     al,0x67
   1400112ea:	mov    ah,0xd
   1400112ec:	mov    edx,0x4c7110e
   1400112f1:	(bad)  
   1400112f2:	(bad)  
   1400112f3:	scas   al,BYTE PTR es:[rdi]
   1400112f4:	rex.XB jo 0x140011356
   1400112f7:	or     eax,0xc58c649
   1400112fc:	(bad)  
   1400112fd:	adc    edx,eax
   1400112ff:	movsxd ebp,ebp
   140011301:	cmc    
   140011302:	lock hlt 
   140011304:	data16 gs jle 0x14001132a
   140011308:	jge    0x1000c1cb2
   14001130e:	xchg   ebp,eax
   14001130f:	loopne 0x14001136f
   140011311:	add    eax,DWORD PTR [edi+edi*8]
   140011315:	mov    ds,ebp
   140011317:	jns    0x140011372
   140011319:	in     eax,0x6
   14001131b:	scas   eax,DWORD PTR es:[rdi]
   14001131c:	and    BYTE PTR [rax],al
   14001131e:	pushf  
   14001131f:	jae    0x14001134c
   140011321:	(bad)  
   140011322:	and    DWORD PTR [rax],eax
   140011324:	add    al,bh
   140011326:	outs   dx,BYTE PTR ds:[rsi]
   140011327:	mov    ah,0x16
   140011329:	rex.WXB int 0x4b
   14001132c:	xor    eax,edx
   14001132e:	fs cs out dx,eax
   140011331:	xchg   ecx,eax
   140011332:	pop    rdi
   140011333:	mov    dh,BYTE PTR [rbx]
   140011335:	addr32 pop rsi
   140011337:	push   rax
   140011338:	shl    DWORD PTR [rsi+0x3],0x84
   14001133c:	cli    
   14001133d:	sub    eax,0x4828df66
   140011342:	xor    BYTE PTR [rsi-0x3],dl
   140011345:	jb     0x14001130e
   140011347:	jne    0x1400113b9
   140011349:	lods   al,BYTE PTR ds:[rsi]
   14001134a:	test   BYTE PTR [rdx-0x103ce72d],cl
   140011350:	cmp    al,BYTE PTR [rsp+rsi*4+0x5a]
   140011354:	idiv   BYTE PTR [rsi-0x22]
   140011357:	pop    rsp
   140011358:	(bad)  
   140011359:	sti    
   14001135a:	data16 fmul QWORD PTR fs:[rdi+0x300eb9f0]
   140011362:	xor    ecx,ecx
   140011364:	pop    rax
   140011365:	sub    dl,BYTE PTR [rdi-0x38]
   140011368:	cmp    ecx,DWORD PTR [rip+0x4645143d]        # 0x1864627ab
   14001136e:	push   rbx
   14001136f:	stos   BYTE PTR es:[rdi],al
   140011370:	jmp    0x1635e0642
   140011375:	rdpmc  
   140011377:	jge    0x1400113f1
   140011379:	jp     0x14001138d
   14001137b:	(bad)  
   14001137c:	(bad)  
   14001137d:	repz pop rbx
   14001137f:	add    bh,dh
   140011381:	iret   
   140011382:	pop    rbp
   140011383:	and    eax,0x237b2a0f
   140011388:	mul    DWORD PTR [rdx+0x659c02ed]
   14001138e:	xchg   ecx,eax
   14001138f:	adc    al,0x59
   140011391:	popf   
   140011392:	xchg   edi,eax
   140011393:	(bad)  
   140011394:	and    BYTE PTR [rbp-0x2d],cl
   140011397:	in     al,dx
   140011398:	loop   0x1400113b0
   14001139a:	rex.RXB leave 
   14001139c:	mov    esp,0x14d72004
   1400113a1:	xchg   edi,eax
   1400113a2:	in     eax,dx
   1400113a3:	fistp  QWORD PTR [rax-0x52]
   1400113a6:	push   rsi
   1400113a7:	rex.X std 
   1400113a9:	(bad)  
   1400113aa:	and    DWORD PTR [rbx],ebx
   1400113ac:	rex.WB mov r13b,0x1f
   1400113af:	fxch   st(5)
   1400113b1:	xor    esp,ebp
   1400113b3:	mov    edi,0xae2f6ed
   1400113b8:	icebp  
   1400113b9:	push   0xffffffffb2a875d0
   1400113be:	not    DWORD PTR [rdx]
   1400113c0:	(bad)  
   1400113c1:	out    dx,al
   1400113c2:	rex sahf 
   1400113c4:	(bad)  
   1400113c5:	popf   
   1400113c6:	mov    ebx,ebp
   1400113c8:	loopne 0x140011428
   1400113ca:	push   0xffffffffe77346cd
   1400113cf:	adc    esp,DWORD PTR [rdx]
   1400113d1:	(bad)  
   1400113d2:	push   rsi
   1400113d3:	rex.XB xor bl,BYTE PTR [r10+0x7a4e596]
   1400113da:	fwait
   1400113db:	adc    al,0x4a
   1400113dd:	scas   al,BYTE PTR es:[rdi]
   1400113de:	test   DWORD PTR [rbx-0x65],edx
   1400113e1:	fidivr WORD PTR [rbx+rbp*2]
   1400113e4:	in     al,0xc1
   1400113e6:	cmp    DWORD PTR [rdx+0x1d],ebp
   1400113e9:	int    0xd0
   1400113eb:	mov    esp,0xcc933005
   1400113f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400113f1:	mov    ah,0x41
   1400113f3:	xlat   BYTE PTR ds:[rbx]
   1400113f4:	and    BYTE PTR [rax-0x54b44302],bh
   1400113fa:	add    eax,DWORD PTR [rax-0x70]
   1400113fd:	int    0x9d
   1400113ff:	(bad)  
   140011400:	or     ebx,esi
   140011402:	iret   
   140011403:	sub    ecx,DWORD PTR [rsi+0x46]
   140011406:	movabs al,ds:0x12b473234289be1
   14001140f:	out    0x9f,al
   140011411:	(bad)  
   140011412:	or     al,0xcf
   140011414:	rex.WRB xor BYTE PTR [r13-0x40d382a7],r15b
   14001141b:	jmp    0x1400113bd
   14001141d:	add    eax,0xadcf8e4b
   140011422:	jmp    0x140011424
   140011424:	ds movabs eax,ds:0x72934c541868c911
   14001142f:	movabs eax,ds:0x206a5085ab1923e4
   140011438:	repnz adc BYTE PTR [rsi],ah
   14001143b:	repz add al,0x0
   14001143e:	(bad)  
   14001143f:	xchg   edi,eax
   140011440:	loop   0x1400114a9
   140011442:	sti    
   140011443:	std    
   140011444:	mov    DWORD PTR [rcx+0x61],eax
   140011447:	scas   eax,DWORD PTR es:[rdi]
   140011448:	rep lods eax,DWORD PTR cs:[rsi]
   14001144b:	(bad)  
   14001144c:	add    BYTE PTR [rcx-0x67],al
   14001144f:	(bad)  
   140011450:	adc    BYTE PTR [rax-0x54],ch
   140011453:	fs (bad) 
   140011455:	ror    ebx,1
   140011457:	stos   DWORD PTR es:[rdi],eax
   140011458:	mov    edi,DWORD PTR [rdi]
   14001145a:	(bad)  
   14001145b:	push   rsi
   14001145c:	rex.X (bad) 
   14001145e:	movabs ds:0x725610ebaa84dcf0,eax
   140011467:	sbb    al,0xec
   140011469:	imul   ebx,DWORD PTR [rax-0x2d],0x79
   14001146d:	(bad)  
   14001146e:	jo     0x14001146d
   140011470:	repz in eax,0x3a
   140011473:	add    al,0xf7
   140011475:	in     eax,0xf1
   140011477:	or     DWORD PTR [rsi-0x6e],edi
   14001147a:	xor    DWORD PTR [rdx],ebx
   14001147c:	and    eax,0x241e7cee
   140011481:	sbb    ebp,ebx
   140011483:	mov    edx,0xc287b70c
   140011488:	pop    rcx
   140011489:	xchg   esi,eax
   14001148a:	mov    al,0x91
   14001148c:	cmp    eax,0x4ac1fca8
   140011491:	shl    BYTE PTR [rax],0x50
   140011494:	cmp    BYTE PTR [rdi-0x4e],ch
   140011497:	rol    BYTE PTR [rax],1
   140011499:	add    BYTE PTR [rcx-0x4a],bl
   14001149c:	ds sahf 
   14001149e:	rex.W
   14001149f:	push   QWORD PTR es:[rdx+0x3e85cb90]
   1400114a6:	jl     0x1400114f5
   1400114a8:	rex.WXB sar r11b,1
   1400114ab:	ret    
   1400114ac:	push   rbp
   1400114ad:	mov    dl,0xea
   1400114af:	call   0x15096a7e9
   1400114b4:	and    al,0xec
   1400114b6:	stos   BYTE PTR es:[rdi],al
   1400114b7:	push   rsi
   1400114b8:	(bad)  
   1400114b9:	rex.R fdiv DWORD PTR [rcx+rbx*2+0x67]
   1400114be:	lea    esp,[rax+0x74]
   1400114c1:	mov    dh,0x9
   1400114c3:	rex.WXB imul rsi,QWORD PTR [r14-0x53],0xffffffffffffff84
   1400114c8:	rex.X mov ecx,0xd628598c
   1400114ce:	mov    ah,0x30
   1400114d0:	cmp    ebp,DWORD PTR [rbx-0x52]
   1400114d3:	add    ecx,esp
   1400114d5:	cmp    DWORD PTR [rcx+0x49],ebp
   1400114d8:	popf   
   1400114d9:	and    DWORD PTR [rsp+rbp*2-0x5c],0x160f35d
   1400114e1:	test   BYTE PTR [rcx],dh
   1400114e3:	(bad)  
   1400114e4:	dec    BYTE PTR [rax+rax*2+0x33]
   1400114e8:	lock xor bl,BYTE PTR [rdi+rdx*2+0x2bce0c10]
   1400114f0:	or     BYTE PTR [rax+rdi*1],ch
   1400114f3:	add    BYTE PTR [rax],bl
   1400114f5:	cmp    DWORD PTR [rcx-0x20],edi
   1400114f8:	jmp    0x1400114c1
   1400114fa:	cvtps2pi mm7,xmm1
   1400114fd:	retf   
   1400114fe:	gs stos DWORD PTR es:[rdi],eax
   140011500:	xchg   esi,eax
   140011501:	xchg   ebx,eax
   140011502:	iret   
   140011503:	xor    eax,0x426bf2c8
   140011508:	cmp    al,0xfd
   14001150a:	(bad)  
   14001150b:	sub    eax,0x2567df16
   140011510:	call   0x1b762228f
   140011515:	fisubr WORD PTR [rbp+0x1147df04]
   14001151b:	(bad)  
   14001151c:	jbe    0x140011527
   14001151e:	cld    
   14001151f:	mov    ecx,0xd6938609
   140011524:	pop    rsp
   140011525:	cs push rsp
   140011527:	or     ecx,DWORD PTR [rcx+0x6709b9fc]
   14001152d:	in     al,dx
   14001152e:	cmp    bh,BYTE PTR [rax-0x2e4ca4e9]
   140011534:	fdiv   st(0),st
   140011536:	add    al,0xa8
   140011538:	xchg   edx,eax
   140011539:	mov    WORD PTR [rbp+0x2d4b3d8e],cs
   14001153f:	shr    BYTE PTR [rdx+rdx*8-0x54],0xf2
   140011544:	sbb    eax,DWORD PTR [rcx-0x572a005b]
   14001154a:	mov    bh,0xe0
   14001154c:	cmp    DWORD PTR [rbp+0x2000485],edx
   140011552:	adc    BYTE PTR [rdi+0x4797f7fc],cl
   140011558:	ss pop rbp
   14001155a:	jb     0x140011521
   14001155c:	addr32 cmc 
   14001155e:	rex.WX in eax,0xdd
   140011561:	leave  
   140011562:	push   rsp
   140011563:	retf   0x492e
   140011566:	xor    eax,0x8ec30c0c
   14001156b:	or     ah,cl
   14001156d:	ins    DWORD PTR es:[rdi],dx
   14001156e:	ja     0x140011590
   140011570:	(bad)  
   140011571:	(bad)  
   140011572:	mov    al,0x8
   140011574:	jns    0x14001151e
   140011576:	addr32 mov dl,0x12
   140011579:	movabs ds:0xc12b3e811961e251,al
   140011582:	in     eax,dx
   140011583:	jne    0x140011574
   140011585:	mov    bh,0x12
   140011587:	rcr    BYTE PTR [rsi],0xe9
   14001158a:	sbb    bl,BYTE PTR [rsi]
   14001158c:	mov    dl,bh
   14001158e:	(bad)  
   14001158f:	push   0xffffffffffffffce
   140011591:	push   rsi
   140011592:	(bad)  
   140011593:	jge    0x140011557
   140011595:	xor    eax,0x4f9e09b9
   14001159a:	rex.WRX sar spl,0xd6
   14001159e:	cmc    
   14001159f:	adc    bh,dl
   1400115a1:	or     esi,DWORD PTR [r8]
   1400115a4:	div    DWORD PTR [rbx-0x185ef145]
   1400115aa:	jns    0x1400115e6
   1400115ac:	scas   al,BYTE PTR es:[rdi]
   1400115ad:	rex.XB movabs ds:0xfca824e6e074cdef,eax
   1400115b7:	(bad)  
   1400115b8:	popf   
   1400115b9:	cmp    ah,0x0
   1400115bc:	movabs al,ds:0x80196f38307e9607
   1400115c5:	scas   al,BYTE PTR es:[rdi]
   1400115c6:	sub    al,0x24
   1400115c8:	add    BYTE PTR [rax+0x45],dh
   1400115cb:	cld    
   1400115cc:	call   FWORD PTR [rdi-0x1782c87]
   1400115d2:	lock jge 0x1400115d4
   1400115d5:	jl     0x140011574
   1400115d7:	and    eax,0x324496c4
   1400115dc:	sbb    DWORD PTR [rbx-0x5b],ecx
   1400115df:	adc    edx,DWORD PTR [rdx+0x3c]
   1400115e2:	adc    DWORD PTR [rdi+0x53],eax
   1400115e5:	push   rbp
   1400115e6:	sub    al,0x61
   1400115e8:	(bad)  
   1400115e9:	(bad)  
   1400115ea:	imul   BYTE PTR [rdx+rdi*4-0x6ec9965a]
   1400115f1:	or     bl,BYTE PTR [rdi+rdi*4+0x41]
   1400115f5:	adc    BYTE PTR [rsi+riz*8],dl
   1400115f8:	(bad)  
   1400115f9:	and    eax,0xab023354
   1400115fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400115ff:	push   rdi
   140011600:	(bad)
   140011603:	(bad)  
   140011604:	sub    r12d,DWORD PTR [rcx+0x7377e31a]
   14001160b:	adc    eax,DWORD PTR [rsi+rax*4]
   14001160e:	sbb    DWORD PTR [rsi+rbp*8-0x5b],esp
   140011612:	(bad)  
   140011613:	xor    ch,cl
   140011615:	sub    cl,BYTE PTR [rcx+0x57]
   140011618:	out    dx,eax
   140011619:	cmp    al,BYTE PTR [rbp+rbx*4+0x9f099c2]
   140011620:	xor    ebx,DWORD PTR [rsi-0x29]
   140011623:	fsub   QWORD PTR [rax+rcx*4]
   140011626:	(bad)  
   140011627:	(bad)  
   140011628:	push   rdi
   140011629:	push   rax
   14001162a:	stc    
   14001162b:	or     eax,0xbc0f4bdf
   140011630:	cld    
   140011631:	retf   0x76df
   140011634:	add    esi,ecx
   140011636:	mov    dl,0x8
   140011638:	(bad)  
   140011639:	jrcxz  0x1400115f1
   14001163b:	add    dl,BYTE PTR [rax]
   14001163d:	push   rax
   14001163f:	mov    bh,0x6f
   140011641:	jl     0x14001166c
   140011643:	movabs al,ds:0x6cd62bfd8dcd7c5c
   14001164c:	jle    0x14001169f
   14001164e:	rex.WRXB (bad) 
   140011651:	(bad)  
   140011652:	sub    BYTE PTR [rcx+0x64c9c5c8],dl
   140011658:	movabs ds:0x95324280ab2ba3b3,al
   140011661:	mov    al,0x95
   140011663:	shl    BYTE PTR [rax],1
   140011665:	xor    DWORD PTR [rbx+rax*1-0x2d],ecx
   140011669:	or     al,0x6d
   14001166b:	and    ebp,ebx
   14001166d:	loopne 0x14001161f
   14001166f:	(bad)  
   140011670:	mov    edi,0x904ac0ce
   140011675:	gs loop 0x140011605
   140011678:	(bad)  
   140011679:	(bad)  
   14001167a:	(bad)  
   14001167b:	mov    al,0x12
   14001167d:	(bad)  
   14001167e:	or     bh,BYTE PTR [rbx-0xa]
   140011681:	or     DWORD PTR [rsi-0x3e],eax
   140011684:	jae    0x140011699
   140011686:	sbb    al,0x9f
   140011688:	jl     0x1400116c4
   14001168a:	pop    rdi
   14001168b:	cdq    
   14001168c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001168d:	shr    ecx,1
   14001168f:	cmp    al,0xba
   140011691:	(bad)  
   140011692:	xor    eax,0xa637ecab
   140011697:	imul   esp,DWORD PTR [rax+0x18],0xf4def386
   14001169e:	fmulp  st(7),st
   1400116a0:	and    cl,BYTE PTR [rbp-0xbb7c06c]
   1400116a6:	int    0xa4
   1400116a8:	cld    
   1400116a9:	(bad)  
   1400116aa:	cmc    
   1400116ab:	ins    DWORD PTR es:[rdi],dx
   1400116ac:	(bad)  
   1400116ad:	loopne 0x1400116cb
   1400116af:	rex.WXB
   1400116b0:	lock (bad) 
   1400116b2:	hlt    
   1400116b3:	sub    dh,BYTE PTR [rax-0x600f8162]
   1400116b9:	mov    ?,WORD PTR [rdi]
   1400116bb:	std    
   1400116bc:	and    bh,bh
   1400116be:	(bad)  
   1400116bf:	cld    
   1400116c0:	(bad)  
   1400116c1:	rex pop rsi
   1400116c3:	mov    esi,0x7d9d45e6
   1400116c8:	std    
   1400116c9:	pop    rbx
   1400116ca:	push   rsi
   1400116cb:	ins    DWORD PTR es:[rdi],dx
   1400116cc:	mov    esi,0xab37eaec
   1400116d1:	pop    rdx
   1400116d2:	hlt    
   1400116d3:	sbb    ah,BYTE PTR [rcx+rbp*2]
   1400116d6:	jno    0x140011702
   1400116d8:	popf   
   1400116d9:	push   rdx
   1400116da:	adc    cl,cl
   1400116dc:	mov    eax,0xe1e67714
   1400116e1:	shr    DWORD PTR [rbx],cl
   1400116e3:	(bad)  
   1400116e4:	xchg   ecx,eax
   1400116e5:	push   0xffffffffbcb4cb14
   1400116ea:	rex.R movabs ds:0x7610958e17a54999,al
   1400116f4:	mov    dh,0xa7
   1400116f6:	jrcxz  0x140011732
   1400116f8:	(bad)  
   1400116f9:	in     eax,0x26
   1400116fb:	add    al,0xd2
   1400116fd:	sbb    ebp,0xffffffb4
   140011700:	data16 jg 0x140011729
   140011703:	(bad)  
   140011704:	mov    al,0xa7
   140011706:	loope  0x140011721
   140011708:	mov    ebx,0xeda7610e
   14001170d:	mov    bl,0x38
   14001170f:	ret    0x8fac
   140011712:	sbb    DWORD PTR [rsi-0x3663402c],ebp
   140011718:	in     al,0xf
   14001171a:	sub    bh,BYTE PTR [rdi-0x41d4105]
   140011720:	lods   al,BYTE PTR ds:[rsi]
   140011721:	adc    DWORD PTR [rcx],ecx
   140011723:	js     0x1400116f3
   140011725:	rex.B (bad) 
   140011727:	movabs eax,ds:0xc32fe70fee2b8000
   140011730:	hlt    
   140011731:	and    esi,DWORD PTR [rax+0x7b9f474]
   140011737:	rex.RX (bad) 
   140011739:	ds test eax,0xdef7e3f8
   140011740:	mul    BYTE PTR [rax+riz*1]
   140011743:	(bad)  
   140011744:	push   rdx
   140011745:	cmp    eax,0xafad9ada
   14001174a:	(bad)  
   14001174b:	fdiv   DWORD PTR [rdx-0x7]
   14001174e:	scas   eax,DWORD PTR es:[rdi]
   14001174f:	mov    esp,0xde4f162e
   140011754:	jo     0x1400117a8
   140011756:	push   rbp
   140011757:	push   rsi
   140011758:	imul   BYTE PTR [rdi-0x6564e3a8]
   14001175e:	sub    BYTE PTR [rax-0x57],cl
   140011761:	rex.WR xchg rdx,rax
   140011763:	pop    rax
   140011764:	and    cl,BYTE PTR [rsi+0x54f69965]
   14001176a:	push   rsp
   14001176b:	xchg   esi,eax
   14001176c:	test   DWORD PTR [rbp+0x19],esp
   14001176f:	or     BYTE PTR [rbx],ch
   140011771:	jl     0x140011749
   140011773:	(bad)  
   140011775:	push   rbx
   140011776:	icebp  
   140011777:	push   QWORD PTR [rip+0xffffffff9cc0200b]        # 0xdcc13788
   14001177d:	lods   eax,DWORD PTR ds:[rsi]
   14001177e:	test   dl,cl
   140011780:	test   DWORD PTR [rsi+0x25],esp
   140011783:	clc    
   140011784:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011787:	xor    eax,0x6e09b9bb
   14001178c:	pop    rdx
   14001178d:	jae    0x14001175f
   14001178f:	jne    0x140011781
   140011791:	out    0x26,eax
   140011793:	pushf  
   140011794:	scas   al,BYTE PTR es:[rdi]
   140011795:	jmp    0x140011807
   140011797:	(bad)  
   140011798:	(bad)  
   140011799:	xor    eax,0xcfb257
   14001179e:	mov    eax,DWORD PTR [rbx]
   1400117a0:	xchg   DWORD PTR [rax],eax
   1400117a2:	add    BYTE PTR [rdx],cl
   1400117a4:	rex.WB
   1400117a5:	rex.WB
   1400117a6:	rex.R
   1400117a7:	push   r12
   1400117a9:	scas   eax,DWORD PTR es:[rdi]
   1400117aa:	lock mov bl,0xf9
   1400117ad:	(bad)  
   1400117ae:	out    0xdd,eax
   1400117b0:	cld    
   1400117b1:	xchg   DWORD PTR [rbp+0x1bae0001],eax
   1400117b7:	loopne 0x140011818
   1400117b9:	(bad)  
   1400117ba:	retf   
   1400117bb:	xor    ch,bl
   1400117bd:	mov    edi,0x729b6983
   1400117c2:	and    DWORD PTR [rdi],esi
   1400117c4:	stos   BYTE PTR es:[rdi],al
   1400117c5:	(bad)  
   1400117c6:	std    
   1400117c7:	loopne 0x140011808
   1400117c9:	cmp    eax,0xff83f4fb
   1400117ce:	je     0x1400117db
   1400117d0:	lock xor DWORD PTR [rax+0x5a],eax
   1400117d4:	mov    bh,0xed
   1400117d6:	xlat   BYTE PTR ds:[rbx]
   1400117d7:	xchg   edi,eax
   1400117d8:	lods   al,BYTE PTR ds:[rsi]
   1400117d9:	fnstenv [rbp+rdx*8+0x55]
   1400117dd:	mov    DWORD PTR [rdi+riz*8-0x2b],ecx
   1400117e1:	icebp  
   1400117e2:	rex.R
   1400117e3:	repnz repnz push rsp
   1400117e6:	es mov ebx,0xce99db3c
   1400117ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400117ed:	xor    ch,BYTE PTR [rcx]
   1400117ef:	xchg   edx,eax
   1400117f0:	test   eax,0xa7659634
   1400117f5:	sbb    DWORD PTR [rbx],ecx
   1400117f7:	(bad)  
   1400117f8:	cmp    DWORD PTR [rbx+0x31],ecx
   1400117fb:	addr32 sub eax,ecx
   1400117fe:	(bad)  
   1400117ff:	jmp    0x1400117f5
   140011801:	lods   eax,DWORD PTR ds:[rsi]
   140011802:	test   BYTE PTR [rax-0x17],ah
   140011805:	scas   al,BYTE PTR es:[rdi]
   140011806:	(bad)  
   140011807:	out    0xbf,eax
   140011809:	lods   al,BYTE PTR ds:[rsi]
   14001180b:	add    al,0xef
   14001180d:	pushf  
   14001180e:	cmp    eax,0x99fc1d7
   140011813:	mov    BYTE PTR [rdi-0x2ae79f65],dl
   140011819:	sub    al,0x46
   14001181b:	loope  0x1400117d6
   14001181d:	(bad)  
   14001181e:	(bad)  
   14001181f:	popf   
   140011820:	mov    bl,BYTE PTR [rdx+0x20e61d73]
   140011826:	mov    bl,0x91
   140011828:	jge    0x140011840
   14001182a:	mov    ch,0x2c
   14001182c:	jg     0x14001187e
   14001182e:	loope  0x1400117f3
   140011830:	rex.WR jg 0x140011832
   140011833:	call   0x11bfe4c57
   140011838:	rcr    BYTE PTR cs:[rcx-0x6c],0x46
   14001183d:	and    al,ah
   14001183f:	iret   
   140011840:	int    0x76
   140011842:	(bad)  
   140011843:	or     ebp,DWORD PTR [rsi+0x4064bff7]
   140011849:	(bad)  
   14001184b:	(bad)  
   14001184c:	fld    QWORD PTR [rdi-0x9]
   14001184f:	cmp    eax,0xe031f775
   140011854:	jg     0x140011859
   140011856:	jb     0x140011857
   140011858:	rcl    BYTE PTR [rbp-0x27],0xbe
   14001185c:	(bad)  
   14001185d:	sub    eax,0x5c3606ab
   140011862:	cld    
   140011863:	stos   DWORD PTR es:[rdi],eax
   140011864:	xchg   ecx,eax
   140011865:	js     0x140011859
   140011867:	(bad)  
   140011868:	xor    dh,BYTE PTR fs:[rbp-0x5c444c5f]
   14001186f:	sub    ebx,DWORD PTR [rcx+0x254a9149]
   140011875:	nop
   140011876:	adc    eax,0x4c1576d9
   14001187b:	ret    
   14001187c:	jbe    0x140011899
   14001187e:	test   BYTE PTR [rip+0xffffffff9f86d66a],dl        # 0xdf87eeee
   140011884:	mov    dh,0xff
   140011886:	scas   eax,DWORD PTR es:[rdi]
   140011887:	cmp    DWORD PTR [rax],eax
   140011889:	add    ch,BYTE PTR [rsi+0x146f6e19]
   14001188f:	in     al,dx
   140011890:	rex.B loopne 0x140011909
   140011893:	loope  0x140011842
   140011895:	sbb    BYTE PTR [rsi],al
   140011897:	mov    ecx,0x6cbc952
   14001189c:	mov    esp,0x6704ac20
   1400118a1:	cmp    edi,ebx
   1400118a3:	pushf  
   1400118a4:	ret    
   1400118a5:	rcr    DWORD PTR [rdx-0x6f56ab5],cl
   1400118ab:	movabs ds:0xb1d330eb93302f53,al
   1400118b4:	sbb    ecx,DWORD PTR [rbx-0x30]
   1400118b7:	fcomp  QWORD PTR [rdi+0x1c17d92b]
   1400118bd:	stc    
   1400118be:	ret    
   1400118bf:	loop   0x1400118c0
   1400118c1:	(bad)  
   1400118c2:	out    0x59,eax
   1400118c4:	stc    
   1400118c5:	(bad)  
   1400118c6:	loope  0x1400118c8
   1400118c8:	add    ah,dl
   1400118ca:	sub    bh,BYTE PTR [rdi+0x70]
   1400118cd:	popf   
   1400118ce:	sti    
   1400118cf:	sbb    BYTE PTR [rsi+0x25e99fbd],al
   1400118d5:	add    edx,edx
   1400118d7:	icebp  
   1400118d8:	add    ecx,DWORD PTR [rdi]
   1400118da:	(bad)  
   1400118db:	(bad)  
   1400118dc:	(bad)  
   1400118dd:	lock lock clc 
   1400118e0:	xchg   ebx,eax
   1400118e1:	div    ecx
   1400118e3:	add    al,0x8e
   1400118e5:	(bad)  [rax+0x562bf37a]
   1400118eb:	or     eax,0x25f4bc6c
   1400118f0:	icebp  
   1400118f1:	fs out 0xda,al
   1400118f4:	pop    rax
   1400118f5:	and    bh,BYTE PTR [rcx-0x126e24c7]
   1400118fb:	retf   0xa474
   1400118fe:	adc    ecx,ecx
   140011900:	rex.WR xchg rdx,rax
   140011902:	pop    rax
   140011903:	xor    al,0xe2
   140011905:	pop    rax
   140011906:	or     DWORD PTR [rsi-0x27669f7b],ecx
   14001190c:	leave  
   14001190d:	(bad)  
   14001190e:	addr32 out 0x36,al
   140011911:	xor    al,0x45
   140011913:	cs cli 
   140011915:	push   rsi
   140011916:	lahf   
   140011917:	xchg   esi,eax
   140011918:	xchg   ebp,eax
   140011919:	loopne 0x1400118b5
   14001191b:	loopne 0x140011921
   14001191d:	iret   
   14001191e:	cmc    
   14001191f:	sub    al,0x5a
   140011921:	or     DWORD PTR [rsi-0x41074241],edi
   140011927:	movsxd esp,DWORD PTR [rip+0xfffffffff39ad3f8]        # 0x1339bed25
   14001192d:	and    BYTE PTR ds:[rbx+0x53],dh
   140011931:	or     edi,0x40
   140011934:	(bad)  
   140011935:	retf   0xefef
   140011938:	out    dx,eax
   140011939:	(bad)  
   14001193a:	fwait
   14001193b:	mov    edi,0xfbf6661f
   140011940:	mov    DWORD PTR [rdi+0x73fe1ef3],edi
   140011946:	and    DWORD PTR gs:[rcx],eax
   140011949:	add    BYTE PTR [rbp+rdx*1-0x22],dl
   14001194d:	jge    0x14001199e
   14001194f:	loopne 0x1400119ce
   140011951:	and    esp,DWORD PTR [rax]
   140011953:	lock scas eax,DWORD PTR es:[rdi]
   140011955:	xchg   ebx,eax
   140011956:	add    bl,BYTE PTR [rdi-0x1b42d4f9]
   14001195c:	rex.X outs dx,BYTE PTR ds:[rsi]
   14001195e:	push   rsp
   14001195f:	jg     0x140011947
   140011961:	loope  0x14001199e
   140011963:	lahf   
   140011964:	jge    0x14001194c
   140011966:	loope  0x1400119a3
   140011968:	test   DWORD PTR [rax],0x9ad201b7
   14001196e:	sub    eax,0x76bc5aaf
   140011973:	jmp    0x1400119aa
   140011975:	xlat   BYTE PTR ds:[rbx]
   140011976:	cmp    edx,DWORD PTR fs:[rdi]
   140011979:	mov    ebp,0x6d8b1234
   14001197e:	rex.WX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011980:	xor    ebp,DWORD PTR [rbx]
   140011982:	mov    dl,0x9d
   140011984:	jmp    0x1649e4bd5
   140011989:	xchg   ebp,eax
   14001198a:	idiv   BYTE PTR [rcx-0x4ed2a9f3]
   140011990:	js     0x1400119e8
   140011992:	leave  
   140011993:	sbb    r11b,BYTE PTR [r8+0x9]
   140011997:	rex.WRX
   140011998:	rex.RX popf 
   14001199a:	mov    edi,0x2b6678dc
   14001199f:	rcr    ecx,0xdf
   1400119a2:	mov    ecx,0x73bc12b0
   1400119a7:	jbe    0x1400119e7
   1400119a9:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400119ab:	xor    eax,0xa09b9b53
   1400119b0:	sbb    esi,DWORD PTR [rbx-0x37]
   1400119b3:	jmp    0x14001195d
   1400119b5:	cmp    ecx,DWORD PTR [rbx+0x35df51b0]
   1400119bb:	sti    
   1400119bc:	addr32 push rbx
   1400119be:	(bad)  
   1400119bf:	fnstenv [rdx]
   1400119c1:	jmp    QWORD PTR [rsi-0x45]
   1400119c4:	loop   0x140011a39
   1400119c6:	or     ecx,DWORD PTR es:[rip+0xffffffff86f6a000]        # 0xc6f7b9cd
   1400119cd:	(bad)  
   1400119ce:	sub    eax,0x6136e082
   1400119d3:	and    al,ah
   1400119d5:	fst    QWORD PTR cs:[rdi-0x2bcfc2b7]
   1400119dc:	xchg   ebp,eax
   1400119dd:	jg     0x140011a1d
   1400119df:	mov    bh,0xf3
   1400119e1:	mov    edi,0xe3f9db9e
   1400119e7:	out    dx,eax
   1400119e8:	(bad)  
   1400119e9:	mov    ebx,0xc0ff520d
   1400119ee:	push   rbp
   1400119ef:	fnstenv [rbp-0x5a43a1a5]
   1400119f5:	stos   DWORD PTR es:[rdi],eax
   1400119f6:	scas   eax,DWORD PTR es:[rdi]
   1400119f7:	(bad)  
   1400119f8:	ficomp DWORD PTR [rax+0x22]
   1400119fb:	jge    0x140011a62
   1400119fd:	and    bl,BYTE PTR [rcx-0x222e2724]
   140011a03:	rcl    DWORD PTR [rbp-0x5b75b32],1
   140011a09:	fadd   QWORD PTR [rsi]
   140011a0b:	retf   
   140011a0c:	xor    al,0x3d
   140011a0e:	ds and esp,ecx
   140011a11:	iret   
   140011a12:	popf   
   140011a13:	stc    
   140011a14:	repnz (bad) 
   140011a16:	mov    WORD PTR [rsp+rcx*1-0x55],ds
   140011a1a:	sar    BYTE PTR [rbx-0x4f7b53e0],1
   140011a20:	jae    0x140011a18
   140011a22:	jge    0x140011a78
   140011a24:	add    eax,0xe777eab2
   140011a29:	push   0xffffffffd9299f6b
   140011a2e:	xlat   BYTE PTR ds:[rbx]
   140011a2f:	push   0xfffffffffc20bfe4
   140011a34:	jle    0x1400119f5
   140011a36:	sub    al,0x44
   140011a38:	add    al,dh
   140011a3a:	rex.WXB xor rsp,QWORD PTR [r8-0x20]
   140011a3e:	fild   QWORD PTR [rsi-0x1f7bfe7]
   140011a44:	sbb    eax,0xfc70c0a
   140011a49:	cmp    al,0x3c
   140011a4b:	jbe    0x140011a49
   140011a4d:	rol    bl,0xbf
   140011a50:	add    dh,ch
   140011a52:	movabs ds:0x675ccc9e2eb86dd6,eax
   140011a5b:	mov    ebx,0x4cae990d
   140011a60:	rex.RXB
   140011a61:	es xchg ecx,eax
   140011a63:	rex.WR (bad) 
   140011a65:	mov    ebp,eax
   140011a67:	and    ebx,DWORD PTR [rax-0x5a]
   140011a6a:	mov    DWORD PTR [rcx+0x1a],ebp
   140011a6d:	or     bl,cl
   140011a6f:	cmp    al,BYTE PTR [rbx]
   140011a71:	mov    bh,0xc1
   140011a73:	jg     0x140011a4f
   140011a75:	(bad)  
   140011a76:	leave  
   140011a77:	ss rex.XB
   140011a79:	cs pop rsi
   140011a7b:	rex.W push rsi
   140011a7d:	rex.X fadd DWORD PTR [rsi-0x2c39f7f3]
   140011a84:	(bad)  
   140011a85:	mov    al,0xa0
   140011a87:	scas   eax,DWORD PTR es:[rdi]
   140011a88:	ds push rdi
   140011a8a:	mov    dl,0x2f
   140011a8c:	mov    ebp,gs
   140011a8e:	test   DWORD PTR [rdi-0x63],0xbce0aec2
   140011a95:	enter  0x742,0x0
   140011a99:	mov    edi,0x67523d84
   140011a9e:	or     cl,BYTE PTR [rax]
   140011aa0:	(bad)  
   140011aa1:	div    DWORD PTR [rbx]
   140011aa3:	(bad)  
   140011aa4:	(bad)  
   140011aa5:	jrcxz  0x140011add
   140011aa7:	in     al,dx
   140011aa8:	jbe    0x140011a86
   140011aaa:	xchg   bl,bl
   140011aac:	mov    cl,0xdd
   140011aae:	xchg   BYTE PTR [rbp+0x6b],al
   140011ab1:	mov    bh,0x5c
   140011ab3:	jae    0x140011b2a
   140011ab5:	mov    dh,0x6b
   140011ab7:	shl    ebp,1
   140011ab9:	rcr    DWORD PTR [rax+0x7c],1
   140011abc:	pop    rbx
   140011abd:	and    bl,BYTE PTR [rbp+0x4ce9925e]
   140011ac3:	addr32 push rdx
   140011ac5:	jmp    0x10a55c3ee
   140011aca:	retf   
   140011acb:	pop    rdx
   140011acc:	hlt    
   140011acd:	add    BYTE PTR [rcx-0x15e48d7],ah
   140011ad3:	push   rdx
   140011ad4:	out    0xd5,eax
   140011ad6:	rex.WX mov al,0x2c
   140011ad9:	or     al,0xcb
   140011adb:	movabs ds:0xba109592cf94eba2,al
   140011ae4:	(bad)  
   140011ae5:	lods   al,BYTE PTR ds:[rsi]
   140011ae6:	sbb    ecx,ebp
   140011ae8:	rex.WB out dx,eax
   140011aea:	(bad)  
   140011aeb:	and    ebx,edi
   140011aed:	push   dx
   140011aef:	(bad)  
   140011af0:	fxch   st(0)
   140011af2:	mov    esi,0xa1f9420b
   140011af7:	or     eax,0x7cc93300
   140011afc:	add    eax,DWORD PTR [rdx+0x478a6cbb]
   140011b02:	movabs al,ds:0x7901dfe06ffc36ea
   140011b0b:	icebp  
   140011b0c:	mov    cl,BYTE PTR [rbx-0x2d]
   140011b0f:	jmp    0x140011ac8
   140011b11:	fnsave [rax-0xf]
   140011b14:	loop   0x140011b7b
   140011b16:	stos   DWORD PTR es:[rdi],eax
   140011b17:	pop    rdi
   140011b18:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011b19:	push   0x54c9add1
   140011b1e:	jb     0x140011b83
   140011b20:	mov    dh,0xab
   140011b22:	movabs ds:0x6591274a924e952b,eax
   140011b2b:	or     DWORD PTR [rbx-0x68],ecx
   140011b2e:	push   rbp
   140011b2f:	jb     0x140011b82
   140011b31:	cwde   
   140011b32:	and    dl,al
   140011b34:	xchg   esp,eax
   140011b35:	ins    BYTE PTR es:[rdi],dx
   140011b36:	out    0x4b,al
   140011b38:	lods   eax,DWORD PTR ds:[rsi]
   140011b39:	and    edx,DWORD PTR [rdi]
   140011b3b:	cdq    
   140011b3c:	mov    ebx,0xc5889095
   140011b41:	stos   BYTE PTR es:[rdi],al
   140011b42:	repz (bad) 
   140011b44:	jns    0x140011b84
   140011b46:	stc    
   140011b47:	cld    
   140011b48:	pop    rax
   140011b49:	or     ebp,esi
   140011b4b:	fadd   QWORD PTR [ebp+edx*4-0x642ac8d0]
   140011b53:	sub    DWORD PTR [rcx-0x7dfbf3d9],edi
   140011b59:	add    eax,0x2fb2413f
   140011b5e:	in     al,dx
   140011b5f:	rex.WR
   140011b60:	or     BYTE PTR cs:[rcx+0x3],ch
   140011b64:	rex
   140011b65:	repz ror ah,cl
   140011b68:	movhps QWORD PTR [rsi],xmm2
   140011b6b:	imul   ebx,DWORD PTR [rax-0xf9ee1c9],0xe0fa93c8
   140011b75:	xchg   ecx,eax
   140011b76:	(bad)  
   140011b77:	out    dx,eax
   140011b78:	(bad)
   140011b7b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011b7c:	js     0x140011b28
   140011b7e:	cmp    esi,DWORD PTR [rdx+0x2f2bf366]
   140011b84:	pop    rdx
   140011b85:	mov    edi,0x6957aaed
   140011b8a:	xchg   ecx,eax
   140011b8b:	clc    
   140011b8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011b8d:	sar    DWORD PTR [rax+0x62],1
   140011b90:	rex.WXB mov r14b,0x23
   140011b93:	mov    bl,0x38
   140011b95:	rcl    DWORD PTR [rcx+0x24e99351],cl
   140011b9b:	mov    cl,0x58
   140011b9d:	add    dl,bl
   140011b9f:	xor    ch,ch
   140011ba1:	in     al,0x24
   140011ba3:	shl    DWORD PTR [rbp+0x1b],cl
   140011ba6:	push   0xd384ac2
   140011bab:	jb     0x140011b7e
   140011bad:	jg     0x140011c14
   140011baf:	and    DWORD PTR [rbx+0x54],0x1afb07bb
   140011bb6:	test   DWORD PTR [rdx-0x15987c63],edi
   140011bbc:	xchg   edi,eax
   140011bbd:	xor    BYTE PTR [rdi-0x4ae33daa],cl
   140011bc3:	cs pop rax
   140011bc5:	leave  
   140011bc6:	(bad)  
   140011bc7:	fld    TBYTE PTR [rax-0x1066acc1]
   140011bcd:	add    eax,0xa5fbea37
   140011bd2:	or     eax,0x67266700
   140011bd7:	ret    
   140011bd8:	ins    DWORD PTR es:[rdi],dx
   140011bd9:	push   0xffffffffe628479a
   140011bde:	(bad)  
   140011bdf:	or     al,0x9f
   140011be1:	(bad)  [rax]
   140011be3:	jrcxz  0x140011b9f
   140011be5:	or     eax,0x55745f5b
   140011bea:	mov    dh,0xb3
   140011bec:	out    dx,eax
   140011bed:	xchg   BYTE PTR [rax+0x2c],cl
   140011bf0:	jbe    0x140011c3b
   140011bf2:	xor    dl,BYTE PTR [rbp-0x351263a2]
   140011bf8:	fcom   st(1)
   140011bfa:	xchg   BYTE PTR [rdx+rcx*1+0xb],dl
   140011bfe:	mov    ebx,0x36efd1fa
   140011c03:	int3   
   140011c04:	rex.RXB
   140011c05:	rex.WRX add r14b,BYTE PTR [rcx+r13*2]
   140011c09:	and    eax,0xa28a238
   140011c0e:	or     DWORD PTR [rdi+0x69],ebx
   140011c11:	mov    ah,0x35
   140011c13:	mov    edx,DWORD PTR [rbp+0x817ad50]
   140011c19:	fistp  WORD PTR [rdi-0x4d]
   140011c1c:	movabs al,ds:0xfbe266f547f8a4d0
   140011c25:	(bad)  
   140011c26:	adc    cl,ah
   140011c28:	add    eax,0x9235f649
   140011c2d:	ss add ah,cl
   140011c30:	scas   eax,DWORD PTR es:[rdi]
   140011c31:	pushf  
   140011c32:	push   rdi
   140011c33:	(bad)  
   140011c34:	add    ebx,ebx
   140011c36:	ins    DWORD PTR es:[rdi],dx
   140011c37:	cmp    dh,bh
   140011c39:	fmul   st(6),st
   140011c3b:	(bad)  
   140011c3c:	(bad)  
   140011c3d:	cmp    esi,DWORD PTR [rax+0x17]
   140011c40:	and    BYTE PTR [rip+0x66497e5e],ch        # 0x1a64a9aa4
   140011c46:	std    
   140011c47:	and    eax,0x68bcdb2f
   140011c4c:	fld    st(0)
   140011c4e:	sub    esp,DWORD PTR [rdx]
   140011c50:	xchg   ecx,eax
   140011c51:	clc    
   140011c52:	gs icebp 
   140011c54:	fs (bad) 
   140011c56:	jne    0x140011c0e
   140011c58:	xor    ebx,ebx
   140011c5a:	xchg   ebp,eax
   140011c5b:	retf   0x48a4
   140011c5e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011c5f:	xchg   ebx,eax
   140011c60:	sub    BYTE PTR [rdx+0x761a658c],cl
   140011c66:	call   0x14242263c
   140011c6b:	jae    0x140011c93
   140011c6d:	(bad)  
   140011c6e:	in     eax,dx
   140011c6f:	xor    eax,0xf68b93cd
   140011c74:	xor    DWORD PTR [rsi-0x4a],esp
   140011c77:	adc    bh,ah
   140011c79:	xchg   ebx,eax
   140011c7a:	scas   eax,DWORD PTR es:[rdi]
   140011c7b:	xchg   BYTE PTR [rcx+0x9],bl
   140011c7e:	stos   BYTE PTR es:[rdi],al
   140011c7f:	stos   BYTE PTR es:[rdi],al
   140011c80:	movabs ds:0xe6a69e03ec12b434,al
   140011c89:	int    0xc5
   140011c8b:	fistp  QWORD PTR [rdi+0x41]
   140011c8e:	nop
   140011c8f:	jge    0x140011c1e
   140011c91:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011c92:	or     eax,0xce576700
   140011c97:	adc    eax,0x1410d08f
   140011c9c:	(bad)  
   140011c9d:	(bad)  
   140011c9e:	out    dx,al
   140011c9f:	sbb    BYTE PTR [rbx],bl
   140011ca1:	cmp    al,0xba
   140011ca3:	jrcxz  0x140011d23
   140011ca5:	loopne 0x140011c3e
   140011ca7:	sub    BYTE PTR [rbp+rax*2+0x4bfaca12],0x7f
   140011caf:	imul   esi,ebp,0xffffff86
   140011cb2:	ins    DWORD PTR es:[rdi],dx
   140011cb3:	push   rdi
   140011cb4:	mov    edi,0x5e4f1a32
   140011cb9:	adc    ecx,DWORD PTR [rcx+0x3264d7c6]
   140011cbf:	test   eax,0x8ccee9c5
   140011cc4:	(bad)  
   140011cc5:	rex.WX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140011cc7:	mov    ch,al
   140011cc9:	adc    ebx,DWORD PTR [rax+0x68665481]
   140011ccf:	(bad)  
   140011cd0:	ins    DWORD PTR es:[rdi],dx
   140011cd1:	test   al,0xbf
   140011cd3:	(bad)  
   140011cd5:	jb     0x140011cf2
   140011cd7:	jl     0x140011cf8
   140011cd9:	add    eax,0xbe58a81b
   140011cde:	(bad)  
   140011cdf:	pop    rdi
   140011ce0:	scas   al,BYTE PTR es:[rdi]
   140011ce1:	xchg   ebp,eax
   140011ce2:	loopne 0x140011cda
   140011ce4:	pop    rsi
   140011ce5:	ins    BYTE PTR es:[rdi],dx
   140011ce6:	fs and eax,0xcf0d9684
   140011cec:	and    BYTE PTR [rbp-0x7b920f3e],ah
   140011cf2:	(bad)  
   140011cf3:	cli    
   140011cf4:	(bad)  
   140011cf5:	push   0xffffffffb491afb2
   140011cfa:	add    eax,esp
   140011cfc:	fmul   st(2),st
   140011cfe:	ftst   
   140011d00:	adc    DWORD PTR [rdx+0x8f2877f],eax
   140011d06:	jp     0x140011cad
   140011d08:	and    bh,ch
   140011d0a:	jl     0x140011d04
   140011d0c:	pop    rbx
   140011d0d:	iret   
   140011d0e:	out    dx,al
   140011d0f:	jl     0x140011d09
   140011d11:	pop    rbx
   140011d12:	jnp    0x140011c94
   140011d14:	(bad)  
   140011d15:	add    dh,dl
   140011d17:	(bad)  
   140011d18:	sub    eax,0x72dbeaaf
   140011d1d:	(bad)
   140011d20:	rex.R jrcxz 0x140011d0c
   140011d23:	sub    esp,DWORD PTR [rbx-0x565a074f]
   140011d29:	je     0x140011da5
   140011d2b:	pop    rcx
   140011d2c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011d2d:	ror    DWORD PTR [rsi],cl
   140011d2f:	(bad)  
   140011d30:	(bad)  
   140011d31:	sbb    r9d,DWORD PTR [rbx+rcx*1+0x61]
   140011d36:	sbb    DWORD PTR [rsi],ebx
   140011d38:	loope  0x140011db1
   140011d3a:	mov    dh,0xc9
   140011d3c:	cmp    BYTE PTR [r11+0x2b],r14b
   140011d40:	movabs eax,ds:0xfe9f91d34e199fba
   140011d49:	lock addr32 mov bh,0xdd
   140011d4d:	sti    
   140011d4e:	std    
   140011d4f:	mov    edi,0x4fa72afe
   140011d54:	not    BYTE PTR [rcx]
   140011d56:	mov    dl,0xbc
   140011d58:	movabs al,ds:0x8f2bce5fe7000da5
   140011d61:	add    al,cl
   140011d63:	mov    ds,ebx
   140011d65:	lock iret 
   140011d67:	rcr    BYTE PTR [rbp-0x453c91c8],0x6d
   140011d6e:	xlat   BYTE PTR ds:[rbx]
   140011d6f:	outs   dx,DWORD PTR ds:[rsi]
   140011d70:	pop    rcx
   140011d71:	mov    dl,0x7c
   140011d73:	int    0xcb
   140011d75:	push   rbp
   140011d76:	sub    eax,0x193c797e
   140011d7b:	(bad)  
   140011d7c:	call   0x18aee0869
   140011d81:	gs xchg edx,eax
   140011d83:	sahf   
   140011d84:	(bad)  [rax-0x79]
   140011d87:	(bad)  
   140011d88:	rex.WRB sub al,0xcb
   140011d8b:	rex.X cwde 
   140011d8d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011d8e:	ins    DWORD PTR es:[rdi],dx
   140011d8f:	xchg   BYTE PTR [rdi+0x7fc1b70d],bl
   140011d95:	jne    0x140011d6b
   140011d97:	pop    rbx
   140011d98:	or     DWORD PTR [rdx+0x48],ebx
   140011d9b:	fwait
   140011d9c:	xor    eax,0xb3438d7f
   140011da1:	mov    dl,0x7b
   140011da3:	xlat   BYTE PTR ds:[rbx]
   140011da4:	scas   al,BYTE PTR es:[rdi]
   140011da5:	mov    edi,0xdffbf7be
   140011daa:	clc    
   140011dab:	push   rdi
   140011dac:	pop    rdx
   140011dad:	xchg   esp,eax
   140011dae:	in     al,dx
   140011daf:	imul   esp,DWORD PTR [rbp*2-0x1b0f4800],0xffffffbc
   140011db7:	repz or BYTE PTR [rbx+0xf8c7747],al
   140011dbe:	(bad)  
   140011dbf:	fnsave [rcx+0x1f]
   140011dc2:	mov    dh,0xdb
   140011dc4:	and    BYTE PTR [rcx-0x6f],ch
   140011dc7:	test   BYTE PTR [rdx+0x5c6fdb6e],bh
   140011dcd:	mov    ah,0xf1
   140011dcf:	xchg   edx,eax
   140011dd0:	(bad)  
   140011dd1:	mov    ebp,0x5e489a26
   140011dd6:	lods   eax,DWORD PTR ds:[rsi]
   140011dd7:	rex.RB (bad) 
   140011dd9:	imul   esi,DWORD PTR [rdx+0x36e3b4d9],0x24
   140011de0:	mov    DWORD PTR [rsi],esp
   140011de2:	adc    dh,BYTE PTR [rbp-0x57]
   140011de5:	int3   
   140011de6:	xor    BYTE PTR [rdi],bh
   140011de8:	outs   dx,BYTE PTR ds:[rsi]
   140011de9:	add    ecx,esp
   140011deb:	rex.X
   140011dec:	fiadd  DWORD PTR cs:[rdi]
   140011def:	stos   BYTE PTR es:[rdi],al
   140011df0:	xchg   esi,eax
   140011df1:	rex.RX (bad) 
   140011df3:	lods   al,BYTE PTR ds:[rsi]
   140011df4:	test   BYTE PTR [rsi-0x39],al
   140011df7:	icebp  
   140011df8:	retf   
   140011df9:	loopne 0x140011d84
   140011dfb:	xchg   ebx,eax
   140011dfc:	jg     0x140011df3
   140011dfe:	ud0    esi,eax
   140011e01:	(bad)  
   140011e02:	out    dx,eax
   140011e03:	xor    bh,BYTE PTR [rbx+0x13]
   140011e06:	(bad)  
   140011e07:	(bad)  
   140011e08:	sub    al,0xd9
   140011e0a:	xlat   BYTE PTR ds:[rbx]
   140011e0b:	rex.W fiadd DWORD PTR [rax]
   140011e0e:	jo     0x140011df1
   140011e10:	retf   
   140011e11:	jns    0x140011dfa
   140011e13:	adc    esp,esi
   140011e15:	rex.WX
   140011e16:	rex.B fcomip st,st(5)
   140011e19:	call   0x1baf01495
   140011e1e:	hlt    
   140011e1f:	cmp    edi,ebx
   140011e21:	fdiv   QWORD PTR [rbp-0x55]
   140011e24:	ss (bad) 
   140011e27:	ja     0x140011e1a
   140011e29:	(bad)  
   140011e2a:	scas   eax,DWORD PTR es:[rdi]
   140011e2b:	jl     0x140011e86
   140011e2d:	sub    dl,bl
   140011e2f:	cmc    
   140011e30:	(bad)  
   140011e31:	rex.RB shl DWORD PTR [r14],cl
   140011e34:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011e35:	push   rdx
   140011e36:	mov    ds,ebx
   140011e38:	nop
   140011e39:	rex.WX xchg rdx,rax
   140011e3b:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140011e3d:	adc    BYTE PTR [rsi+0x3b16e0db],cl
   140011e43:	mov    ecx,0x75730909
   140011e48:	sbb    ebp,esp
   140011e4a:	xor    eax,0xcc256667
   140011e4f:	and    al,0x8f
   140011e51:	cmp    eax,0xdd5fc8f2
   140011e56:	jno    0x140011e1f
   140011e58:	xlat   BYTE PTR ds:[rbx]
   140011e59:	mov    edi,0x4769b54b
   140011e5e:	mov    bl,0x64
   140011e60:	fisttp WORD PTR [rbx]
   140011e62:	pop    rsi
   140011e63:	stc    
   140011e64:	movabs eax,ds:0x611e0f99442f000d
   140011e6d:	cs xchg esi,eax
   140011e6f:	rex.X push 0x3dc1d292
   140011e75:	(bad)  
   140011e76:	cmp    edi,DWORD PTR [rsi+0x70]
   140011e79:	iret   
   140011e7a:	iret   
   140011e7b:	(bad)  
   140011e7c:	sbb    eax,edi
   140011e7e:	(bad)  
   140011e7f:	rex pop rsi
   140011e81:	mov    esp,0xa5f492fc
   140011e86:	xlat   BYTE PTR ds:[rbx]
   140011e87:	(bad)  
   140011e88:	out    0xd5,al
   140011e8a:	cdq    
   140011e8b:	(bad)  
   140011e8c:	rex.RB push r15
   140011e8e:	imul   edx,DWORD PTR [rcx+0x3258f6f8],0xffffffb9
   140011e95:	fistp  DWORD PTR ds:[rcx-0x233c5b33]
   140011e9c:	(bad)  
   140011e9d:	(bad)  
   140011e9e:	push   rdx
   140011e9f:	jo     0x140011e8c
   140011ea1:	or     ecx,esi
   140011ea3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011ea4:	xchg   ebp,eax
   140011ea5:	ror    BYTE PTR [rax+0x3b],1
   140011ea8:	adc    eax,0xd1e8e555
   140011ead:	and    ebx,DWORD PTR [rdi+0x7f7e510c]
   140011eb3:	test   al,0xcf
   140011eb5:	cmc    
   140011eb6:	stc    
   140011eb7:	pop    rdi
   140011eb8:	lock fs pop rdi
   140011ebb:	and    ebp,DWORD PTR [rcx+0x3]
   140011ebe:	rex imul ecx,eax,0x79
   140011ec2:	out    0x11,eax
   140011ec4:	(bad)  
   140011ec5:	(bad)  
   140011ec6:	out    dx,al
   140011ec7:	sbb    bh,bh
   140011ec9:	shl    DWORD PTR [rdi-0x7e70389],1
   140011ecf:	or     DWORD PTR [rsi-0x4c],ecx
   140011ed2:	(bad)  
   140011ed3:	in     eax,dx
   140011ed4:	(bad)
   140011ed7:	push   0xffffffffffffffd3
   140011ed9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011eda:	mov    edi,0x2268aaf2
   140011edf:	jns    0x140011f2e
   140011ee1:	xor    al,0x96
   140011ee3:	fcomp  DWORD PTR [rax+0x33bb274a]
   140011ee9:	mov    ds,ebx
   140011eeb:	adc    BYTE PTR [rbx+0x46],cl
   140011eee:	imul   ebp,DWORD PTR [rsp+rax*1],0xffffffcb
   140011ef2:	jb     0x140011e96
   140011ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   140011ef6:	xchg   ecx,eax
   140011ef7:	xchg   ebx,eax
   140011ef8:	(bad)  
   140011ef9:	scas   eax,DWORD PTR es:[rdi]
   140011efa:	imul   eax,edx,0xb3c9f04a
   140011f00:	mov    ebx,0x8ee27e76
   140011f05:	fistp  DWORD PTR [rbx]
   140011f07:	sub    bh,BYTE PTR [rdi-0x35]
   140011f0a:	xchg   ecx,eax
   140011f0b:	jge    0x140011e9a
   140011f0d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011f0e:	or     eax,0xe729ad00
   140011f13:	popf   
   140011f14:	rex.RXB shr BYTE PTR [r11],1
   140011f17:	add    eax,0xbec7d9f9
   140011f1c:	mov    ebx,0xbec7d9e7
   140011f21:	mov    ebx,0x2012f80f
   140011f26:	scas   eax,DWORD PTR es:[rdi]
   140011f27:	fidiv  DWORD PTR [rax+0x43]
   140011f2a:	out    dx,eax
   140011f2b:	mov    dh,0xab
   140011f2d:	pop    rdi
   140011f2e:	jno    0x140011fad
   140011f30:	xor    dl,bl
   140011f32:	std    
   140011f33:	push   rdx
   140011f34:	pop    rcx
   140011f35:	(bad)  
   140011f36:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   140011f38:	rcr    BYTE PTR [rcx+0x74ced9e5],cl
   140011f3e:	fdiv   QWORD PTR [rsi+0x1b]
   140011f41:	xchg   edx,eax
   140011f42:	mov    DWORD PTR ss:[rdi+0x18],esp
   140011f46:	pop    rax
   140011f47:	ret    0x89b4
   140011f4a:	rex.RB out 0xd4,eax
   140011f4d:	(bad)  
   140011f4e:	jmp    0x140011f2d
   140011f50:	(bad)  
   140011f51:	mov    ebx,0x13cae095
   140011f56:	(bad)  
   140011f57:	cmp    eax,0xbfdbf1f6
   140011f5c:	jno    0x140011fb9
   140011f5e:	cwde   
   140011f5f:	repnz (bad) 
   140011f61:	stos   BYTE PTR es:[rdi],al
   140011f62:	in     al,0x7b
   140011f64:	rcl    DWORD PTR [rbx+0xda48d7d],0x0
   140011f6b:	or     eax,DWORD PTR [rbx-0x32]
   140011f6e:	cmp    ecx,DWORD PTR [rdi-0x63c91280]
   140011f74:	cmp    BYTE PTR [rax+0x27767e7],bh
   140011f7a:	fild   WORD PTR [rsi]
   140011f7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011f7d:	fisub  WORD PTR [rbp-0x4068ace5]
   140011f83:	clc    
   140011f84:	imul   DWORD PTR [rdi+0x7a5dece9]
   140011f8a:	sub    DWORD PTR [rdi+rax*2],0x36
   140011f8e:	(bad)  
   140011f8f:	xchg   ebx,eax
   140011f90:	test   eax,0x4cae99f5
   140011f95:	es popf 
   140011f97:	scas   al,BYTE PTR es:[rdi]
   140011f98:	jne    0x140011fb5
   140011f9a:	cld    
   140011f9b:	push   rsi
   140011f9c:	rex.X movabs ds:0xf9ee5b64bf678d59,eax
   140011fa6:	scas   eax,DWORD PTR es:[rdi]
   140011fa7:	lahf   
   140011fa8:	jl     0x140011fa6
   140011faa:	sbb    ebx,edi
   140011fac:	clc    
   140011fad:	fidivr DWORD PTR [rdi-0x2040432e]
   140011fb3:	mov    dl,0xca
   140011fb5:	(bad)  
   140011fb7:	add    BYTE PTR [rax-0x58],bl
   140011fba:	jb     0x140011fea
   140011fbc:	js     0x140011fc2
   140011fbe:	cmp    eax,esi
   140011fc0:	mov    esi,0x4e46140e
   140011fc5:	in     al,dx
   140011fc6:	ds cmc 
   140011fc8:	movabs ds:0xe5fab86dc6ac7f6f,eax
   140011fd1:	jg     0x140011f87
   140011fd3:	mov    ch,0xaf
   140011fd5:	jg     0x140011fb7
   140011fd7:	mov    edx,0x55732258
   140011fdc:	xor    al,0x16
   140011fde:	fist   WORD PTR [rdx+rcx*8-0x4d9ae95c]
   140011fe5:	imul   edx,DWORD PTR [rdx+0x64f124e9],0x892bd314
   140011fef:	jbe    0x140012069
   140011ff1:	add    al,0x70
   140011ff3:	jb     0x140012007
   140011ff5:	rex.R js 0x140011fa4
   140011ff8:	fbstp  TBYTE PTR [rdi-0x5202412]
   140011ffe:	(bad)  
   140011fff:	rex.RXB sbb eax,0xe9760fe5
   140012005:	ins    DWORD PTR es:[rdi],dx
   140012006:	jns    0x140011fba
   140012008:	scas   eax,DWORD PTR es:[rdi]
   140012009:	xchg   ecx,eax
   14001200a:	xor    al,0xb6
   14001200c:	xchg   ebx,eax
   14001200d:	fidiv  DWORD PTR [rdx-0x2613da30]
   140012013:	or     BYTE PTR [rsi+0x211e579b],ch
   140012019:	ins    BYTE PTR es:[rdi],dx
   14001201a:	jmp    0x12eda2dd8
   14001201f:	xchg   edi,eax
   140012020:	push   0x2c5b746a
   140012025:	cdq    
   140012026:	pop    rsp
   140012027:	(bad)  
   140012028:	rcr    DWORD PTR [rcx+0x49d32789],1
   14001202e:	xchg   edx,eax
   14001202f:	imul   edi,DWORD PTR [rbx-0x22],0x9dd0c306
   140012036:	fiadd  DWORD PTR [rsi]
   140012038:	push   rdi
   140012039:	outs   dx,DWORD PTR ds:[rsi]
   14001203a:	stos   DWORD PTR es:[rdi],eax
   14001203b:	outs   dx,BYTE PTR ds:[rsi]
   14001203c:	ret    
   14001203d:	out    0xd,al
   14001203f:	imul   edi,DWORD PTR [rcx-0x1d20740b],0xffffffa2
   140012046:	in     al,dx
   140012047:	dec    BYTE PTR [rdi+0x5f6bed7c]
   14001204d:	stc    
   14001204e:	(bad)  
   14001204f:	(bad)  
   140012050:	repz stc 
   140012052:	ret    
   140012053:	fidiv  DWORD PTR [rbp-0x41]
   140012056:	movabs al,ds:0x96d000da474f7ad2
   14001205f:	data16 gs ds add cl,al
   140012064:	(bad)  
   140012065:	(bad)  
   140012066:	mov    ah,0x40
   140012068:	movabs eax,ds:0xf77eebf6e4c6e977
   140012071:	(bad)  
   140012072:	scas   al,BYTE PTR es:[rdi]
   140012073:	mov    esi,0x24932f65
   140012078:	ins    DWORD PTR es:[rdi],dx
   140012079:	movsxd esp,DWORD PTR [rdx]
   14001207b:	xchg   ebp,eax
   14001207c:	pop    rsi
   14001207d:	lahf   
   14001207e:	jmp    0xc6d2f94f
   140012083:	push   rsp
   140012084:	add    al,BYTE PTR [rbp+0x55]
   140012087:	xor    BYTE PTR [rbp+0x3],cl
   14001208a:	rex.RB push r9
   14001208c:	pop    rcx
   14001208d:	mov    ch,0x7c
   14001208f:	xor    DWORD PTR [rdi-0x3],ebx
   140012092:	loop   0x14001204b
   140012094:	xor    ah,dh
   140012096:	test   eax,0xbff7fc2f
   14001209b:	jge    0x140012081
   14001209d:	rex.WXB push r12
   14001209f:	mov    ebx,0xfc3b04f9
   1400120a4:	mov    ah,0x3c
   1400120a6:	(bad)  
   1400120a8:	rex.W fiadd DWORD PTR [rax]
   1400120ab:	rcl    BYTE PTR [rsi+0x53395d3],1
   1400120b1:	add    al,0x77
   1400120b3:	cmp    DWORD PTR [rdi],edx
   1400120b5:	(bad)  
   1400120b6:	and    DWORD PTR [rsp+rbx*1],edx
   1400120b9:	scas   al,BYTE PTR es:[rdi]
   1400120ba:	jnp    0x140012089
   1400120bc:	fld    TBYTE PTR [rsi]
   1400120be:	pop    rsi
   1400120bf:	(bad)  
   1400120c0:	mov    edi,0x89a257e6
   1400120c5:	(bad)  
   1400120c6:	(bad)  
   1400120c7:	rcr    DWORD PTR [rax+0x7c],1
   1400120ca:	xchg   ebx,eax
   1400120cb:	movabs eax,ds:0x9c0f4708b1228b9b
   1400120d4:	shl    BYTE PTR [rsi+riz*4],0x3f
   1400120d8:	not    ebx
   1400120da:	out    dx,eax
   1400120db:	jge    0x1400120d5
   1400120dd:	repz (bad) 
   1400120df:	(bad)  
   1400120e0:	cmc    
   1400120e1:	ins    BYTE PTR es:[rdi],dx
   1400120e2:	rex.R hlt 
   1400120e4:	popf   
   1400120e5:	test   ecx,0xb4a5ce3a
   1400120eb:	add    DWORD PTR [rax-0x72da0cd3],esp
   1400120f1:	sahf   
   1400120f2:	and    eax,0xcdf78669
   1400120f7:	add    BYTE PTR [rdx],al
   1400120f9:	xor    al,0xe0
   1400120fb:	adc    BYTE PTR [rdx],bl
   1400120fd:	std    
   1400120fe:	cmp    eax,0x3de5e9b0
   140012103:	out    dx,al
   140012104:	rex.B (bad) 
   140012106:	cmp    al,0xfb
   140012108:	rcl    DWORD PTR [rcx],cl
   14001210a:	(bad)  
   14001210b:	jrcxz  0x140012105
   14001210d:	data16 (bad) 
   14001210f:	mov    ecx,0x30fdfc20
   140012114:	imul   eax,DWORD PTR [rbx],0xa6ce5b40
   14001211a:	pushf  
   14001211b:	imul   ebx,DWORD PTR [rsi],0x21
   14001211e:	mov    eax,0x742aa80f
   140012123:	adc    BYTE PTR [rdx+rax*8],al
   140012126:	rex.RX cld 
   140012128:	add    eax,0x6d0fca5
   14001212d:	xor    BYTE PTR [rsi+0x17395b9c],0x80
   140012134:	adc    BYTE PTR [rsi],ah
   140012136:	rex.B
   140012137:	rex.RB (bad) 
   14001213a:	rex.WRXB enter 0xe5b2,0xa5
   14001213f:	or     eax,0x9f396d00
   140012144:	xor    bl,BYTE PTR [rdi-0x628f9d3c]
   14001214a:	sub    edi,DWORD PTR [rsi-0x5b]
   14001214d:	outs   dx,BYTE PTR ds:[rsi]
   14001214e:	hlt    
   14001214f:	or     ch,BYTE PTR [rsi-0x49]
   140012152:	(bad)  
   140012153:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012154:	or     eax,0x90b96d00
   140012159:	fs cs cmp al,0x42
   14001215d:	cwde   
   14001215e:	mov    ecx,0x1005933f
   140012163:	pop    rsp
   140012164:	cs push 0xda577c5
   14001216a:	add    BYTE PTR [rbp-0x47],ch
   14001216d:	shl    BYTE PTR [rbp+0x2e],1
   140012170:	push   rsi
   140012171:	rex.X movabs ds:0x4e0b75b0fbc845ed,eax
   14001217b:	fiadd  DWORD PTR [rax]
   14001217d:	rcl    BYTE PTR [rsi+0x3349a17],1
   140012183:	or     BYTE PTR [rbp+0xbe8a824],cl
   140012189:	push   rsi
   14001218a:	icebp  
   14001218b:	pop    rbp
   14001218c:	imul   eax,DWORD PTR [rbx],0xe85e5b40
   140012192:	jb     0x1400121ce
   140012194:	iret   
   140012195:	lock (bad) 
   140012197:	push   rdi
   140012198:	cld    
   140012199:	mov    dh,0xb4
   14001219b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001219c:	sub    eax,0x5b4b696d
   1400121a1:	fcmovbe st,st(2)
   1400121a3:	xchg   esi,eax
   1400121a4:	mov    dh,0xb4
   1400121a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400121a7:	sub    eax,0x5b4b696d
   1400121ac:	fcmovbe st,st(2)
   1400121ae:	xchg   esi,eax
   1400121af:	mov    dh,0xb4
   1400121b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400121b2:	sub    eax,0x5b4b696d
   1400121b7:	fcmovbe st,st(2)
   1400121b9:	xchg   esi,eax
   1400121ba:	mov    dh,0xb4
   1400121bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400121bd:	sub    eax,0x5b4b696d
   1400121c2:	fcmovbe st,st(2)
   1400121c4:	xchg   esi,eax
   1400121c5:	mov    dh,0xb4
   1400121c7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400121c8:	sub    eax,0x5b4b696d
   1400121cd:	fcmovbe st,st(2)
   1400121cf:	xchg   esi,eax
   1400121d0:	mov    dh,0xb4
   1400121d2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400121d3:	sub    eax,0x5b4b696d
   1400121d8:	fcmovbe st,st(2)
   1400121da:	xchg   esi,eax
   1400121db:	mov    dh,0xb4
   1400121dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400121de:	sub    eax,0x5b4b696d
   1400121e3:	fcmovbe st,st(2)
   1400121e5:	xchg   esi,eax
   1400121e6:	mov    dh,0xb4
   1400121e8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400121e9:	sub    eax,0x5ffcbc17
   1400121ee:	mov    bl,0xe2
   1400121f0:	sub    DWORD PTR [rbx+0x1c9a2f87],eax
   1400121f6:	add    BYTE PTR [rax],al
   1400121f8:	add    BYTE PTR [rax],al
   1400121fa:	rex.WB
   1400121fb:	rex.RB
   1400121fc:	rex.WRX
   1400121fd:	rex.R scas al,BYTE PTR es:[rdi]
   1400121ff:	rex.X (bad) 
   140012201:	(bad)  
   140012202:	add    BYTE PTR [rax],al
   140012204:	add    BYTE PTR [rax],al
   140012206:	add    BYTE PTR [rax],al
   140012208:	sub    BYTE PTR [rax],al
   14001220a:	add    BYTE PTR [rax],al
   14001220c:	xor    BYTE PTR [rax],al
   14001220e:	add    BYTE PTR [rax],al
   140012210:	(bad)  
   140012211:	add    BYTE PTR [rax],al
   140012213:	add    BYTE PTR [rcx],al
   140012215:	add    BYTE PTR [rax],ah
   140012217:	add    BYTE PTR [rax],al
   140012219:	add    BYTE PTR [rax],al
   14001221b:	add    BYTE PTR [rax+0x25],al
	...
   14001241d:	add    BYTE PTR [rax],al
   14001241f:	add    BYTE PTR [rdi-0x70e4b8a8],cl
   140012425:	pop    rax
   140012426:	rex.RXB
   140012427:	rex.WR (bad) 
   140012429:	pop    rax
   14001242a:	rex.RXB or BYTE PTR [r15-0x794eb8a8],0x5b
   140012432:	push   rax
   140012433:	sti    
   140012434:	nop
   140012435:	pop    rcx
   140012436:	movabs ds:0x2c2618042c261804,rax
   140012440:	add    al,0x18
   140012442:	es (bad) 
   140012444:	add    BYTE PTR [rax],al
   140012446:	add    BYTE PTR [rax],al
   140012448:	add    BYTE PTR [rax],al
   14001244a:	add    BYTE PTR [rdx],al
	...
   1400124cc:	(bad)  
   1400124cd:	pop    rax
   1400124ce:	rex.RXB add eax,0x3747588f
   1400124d4:	(bad)  
   1400124d5:	pop    rax
   1400124d6:	rex.RXB ins BYTE PTR es:[rdi],dx
   1400124d8:	nop
   1400124d9:	pop    rcx
   1400124da:	movabs ds:0xfc586692dc485a90,rax
   1400124e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400124e5:	xor    BYTE PTR [rcx-0x3],0xbf
   1400124e9:	pushf  
   1400124ea:	mov    edi,edi
   1400124ec:	shl    BYTE PTR [rax-0x42240064],1
   1400124f2:	test   eax,0x6d728bff
   1400124f7:	call   QWORD PTR [rax+0x1aff8b8c]
   1400124fd:	and    ebp,DWORD PTR [rdx]
   1400124ff:	ins    DWORD PTR es:[rdi],dx
   140012500:	add    al,0x18
   140012502:	es sub al,0x0
   140012505:	add    DWORD PTR [rbx],eax
   140012507:	adc    DWORD PTR [rax],eax
   140012509:	add    BYTE PTR [rax],al
   14001250b:	(bad)  
	...
   14001257c:	(bad)  
   14001257d:	pop    rax
   14001257e:	rex.RXB (bad) 
   140012580:	(bad)  
   140012581:	pop    rax
   140012582:	rex.RXB
   140012583:	rex.WRXB (bad) 
   140012585:	pop    rcx
   140012586:	rex.RXB mov BYTE PTR [r9-0x6e3bb6a6],r10b
   14001258d:	pop    rsp
   14001258e:	rex.WX
   14001258f:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012591:	jne    0x1400125f5
   140012593:	out    dx,al
   140012594:	mov    bl,0x90
   140012596:	cmp    dh,0xc8
   140012599:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001259a:	xchg   edx,eax
   14001259b:	(bad)  
   14001259c:	fidivr DWORD PTR [rax-0x4221005d]
   1400125a2:	test   al,0xff
   1400125a4:	fdiv   DWORD PTR [rdi-0x512e0060]
   1400125aa:	xchg   edi,eax
   1400125ab:	dec    ebx
   1400125ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400125ae:	(bad)  
   1400125af:	inc    ebx
   1400125b1:	lahf   
   1400125b2:	xchg   bh,bh
   1400125b4:	fstp   TBYTE PTR [rbp+0x6a99ffa9]
   1400125ba:	pop    rbp
   1400125bb:	inc    ecx
   1400125bd:	mov    edi,0x7a7effbd
   1400125c2:	js     0x1400125a0
   1400125c4:	add    BYTE PTR [rax],al
   1400125c6:	add    BYTE PTR [rip+0x1d000000],bl        # 0x15d0125cc
   1400125cc:	add    BYTE PTR [rax],al
   1400125ce:	add    BYTE PTR [rsi],cl
   1400125d0:	add    BYTE PTR [rax],al
   1400125d2:	add    BYTE PTR [rbx],al
	...
   140012628:	(bad)  
   140012629:	pop    rax
   14001262a:	rex.RXB or BYTE PTR [r15-0x70c6b8a8],r9b
   140012631:	pop    rax
   140012632:	rex.RXB jo 0x1400125c6
   140012635:	pop    rdx
   140012636:	rex.WB mov r8b,0x91
   140012639:	pop    rbx
   14001263a:	rex.WB in al,0x9c
   14001263d:	push   0xffffffff81a5ef56
   140012642:	jae    0x140012641
   140012644:	mov    ebp,0xd4fe899a
   140012649:	mov    al,0x9a
   14001264b:	jmp    rax
   14001264d:	mov    edi,0xbadbffaa
   140012652:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012653:	call   rsp
   140012655:	mov    dl,0x9b
   140012657:	dec    esi
   140012659:	stos   DWORD PTR es:[rdi],eax
   14001265a:	xchg   ebx,eax
   14001265b:	inc    esi
   14001265d:	movabs ds:0x9cc1ff829bc1ff89,al
   140012666:	cmp    edi,0xffffffc3
   140012669:	sahf   
   14001266a:	test   edi,edi
   14001266c:	ret    0x849d
   14001266f:	dec    ecx
   140012671:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012672:	(bad)  
   140012673:	(bad)  
   140012674:	(bad)  
   140012675:	retf   
   140012676:	mov    bh,0xff
   140012678:	cdq    
   140012679:	push   0x5d
   14001267b:	inc    ecx
   14001267d:	mov    edi,0x9ea2ffbd
   140012682:	popf   
   140012683:	call   QWORD PTR [rax+0xa34859]
   140012689:	add    BYTE PTR [rax],al
   14001268b:	(bad)  
   14001268c:	add    BYTE PTR [rax],al
   14001268e:	add    BYTE PTR [rsi],ah
   140012690:	add    BYTE PTR [rax],al
   140012692:	add    BYTE PTR [rip+0x5000000],dl        # 0x145012698
	...
   1400126d8:	(bad)  
   1400126d9:	pop    rax
   1400126da:	rex.RXB and DWORD PTR [r15-0x6eacb8a8],r9d
   1400126e1:	pop    rdx
   1400126e2:	rex.WB cdqe 
   1400126e4:	xchg   ecx,eax
   1400126e5:	pop    rbx
   1400126e6:	rex.WX iretq 
   1400126e8:	xchg   edx,eax
   1400126e9:	pop    rbp
   1400126ea:	rex.WXB
   1400126eb:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400126ed:	jne    0x140012751
   1400126ef:	jmp    0x13e81b8a9
   1400126f4:	(bad)  
   1400126f5:	test   eax,0xb9dcff93
   1400126fa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400126fb:	(bad)  
   1400126fc:	fidivr WORD PTR [rbp-0x49270059]
   140012702:	movabs al,ds:0x8ea6caff97afd1ff
   14001270b:	inc    esp
   14001270d:	lahf   
   14001270e:	test   edi,edi
   140012710:	(bad)  
   140012711:	movabs ds:0xa3c7ff8ba3c7ff8a,eax
   14001271a:	mov    edi,edi
   14001271c:	(bad)  
   14001271d:	movabs ds:0xa2c7ff8ca3c7ff8c,eax
   140012726:	mov    bh,bh
   140012728:	ret    0x839d
   14001272b:	(bad)  
   14001272c:	mov    edi,0xbbff7f9a
   140012731:	xchg   edi,eax
   140012732:	jl     0x140012733
   140012734:	call   0xda00dd02
   140012739:	push   0x5d
   14001273b:	inc    ecx
   14001273d:	mov    edi,0x9ea2ffbd
   140012742:	popf   
   140012743:	call   FWORD PTR [rcx+0xff5d6a]
   140012749:	add    BYTE PTR [rax],al
   14001274b:	add    BYTE PTR cs:[rax],al
   14001274e:	add    BYTE PTR [rsi],ch
   140012750:	add    BYTE PTR [rax],al
   140012752:	add    BYTE PTR [rsi],ch
   140012754:	add    BYTE PTR [rax],al
   140012756:	add    BYTE PTR [rdx],bl
   140012758:	add    BYTE PTR [rax],al
   14001275a:	add    BYTE PTR [rcx],cl
   14001275c:	add    BYTE PTR [rax],al
   14001275e:	add    BYTE PTR [rax],cl
   140012760:	add    BYTE PTR [rax],al
   140012762:	add    BYTE PTR [rcx],al
	...
   140012790:	(bad)  
   140012791:	pop    rax
   140012792:	rex.RXB ins DWORD PTR es:[rdi],dx
   140012794:	sbb    DWORD PTR [rcx+0x50],0x5b6895f4
   14001279b:	cld    
   14001279c:	stos   DWORD PTR es:[rdi],eax
   14001279d:	test   BYTE PTR [rsi+rdi*8-0x3b],dh
   1400127a1:	lahf   
   1400127a2:	mov    bh,dh
   1400127a4:	(bad)  
   1400127a5:	mov    dl,0x9d
   1400127a7:	jmp    rax
   1400127a9:	mov    edi,0xbadbffaa
   1400127ae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400127af:	call   rcx
   1400127b1:	scas   eax,DWORD PTR es:[rdi]
   1400127b2:	xchg   esi,eax
   1400127b3:	dec    esp
   1400127b5:	test   al,0x90
   1400127b7:	dec    eax
   1400127b9:	movabs ds:0xa0c4ff87a0c5ff8b,eax
   1400127c2:	xchg   bh,bh
   1400127c4:	(bad)  
   1400127c5:	movabs al,ds:0xa2c6ff88a1c5ff87
   1400127ce:	mov    bh,bh
   1400127d0:	(bad)  
   1400127d1:	movabs ds:0x9abfff849ec2ff89,al
   1400127da:	cmp    bh,0xbc
   1400127dd:	xchg   edi,eax
   1400127de:	jl     0x1400127df
   1400127e0:	mov    ebx,0xbaff7a96
   1400127e5:	xchg   ebp,eax
   1400127e6:	jns    0x1400127e7
   1400127e8:	mov    ebx,0xbdff7b97
   1400127ed:	(bad)  
   1400127ee:	jge    0x1400127ef
   1400127f0:	rcr    BYTE PTR [rbp-0x3617007f],0xb5
   1400127f7:	call   FWORD PTR [rcx-0x3e00a296]
   1400127fd:	mov    edi,0x9ea2ffbd
   140012802:	popf   
   140012803:	call   FWORD PTR [rcx+0xff5d6a]
   140012809:	add    BYTE PTR [rax],al
   14001280b:	(bad)  
   14001280c:	add    BYTE PTR [rax],al
   14001280e:	add    BYTE PTR [rdi],bh
   140012810:	add    BYTE PTR [rax],al
   140012812:	add    BYTE PTR [rdi],bh
   140012814:	add    BYTE PTR [rax],al
   140012816:	add    BYTE PTR [rcx],dh
   140012818:	add    BYTE PTR [rax],al
   14001281a:	add    BYTE PTR [rbx],bl
   14001281c:	add    BYTE PTR [rax],al
   14001281e:	add    BYTE PTR [rdi],dl
   140012820:	add    BYTE PTR [rax],al
   140012822:	add    BYTE PTR [rdx],cl
   140012824:	add    BYTE PTR [rax],al
   140012826:	add    BYTE PTR [rbx],al
	...
   14001284c:	gs js  0x1400127d4
   14001284f:	(bad)  
   140012850:	mov    ah,0x8a
   140012852:	jp     0x140012853
   140012854:	shr    DWORD PTR [rbp-0x522e006a],1
   14001285a:	xchg   esi,eax
   14001285b:	call   FWORD PTR [rdi-0x2e00a28f]
   140012861:	lods   eax,DWORD PTR ds:[rsi]
   140012862:	xchg   esi,eax
   140012863:	dec    edx
   140012865:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012866:	(bad)  
   140012867:	inc    ebx
   140012869:	sahf   
   14001286a:	test   bh,bh
   14001286c:	ret    
   14001286d:	sahf   
   14001286e:	test   edi,edi
   140012870:	(bad)  
   140012871:	movabs al,ds:0xa4c8ff8aa3c7ff87
   14001287a:	mov    edi,edi
   14001287c:	(bad)  
   14001287d:	movabs ds:0x9cc1ff86a0c4ff8a,al
   140012886:	cmp    edi,0xffffffbe
   140012889:	cdq    
   14001288a:	jg     0x14001288b
   14001288c:	mov    esp,0xbaff7c98
   140012891:	xchg   edi,eax
   140012892:	jnp    0x140012893
   140012894:	mov    ebx,0xbdff7b97
   140012899:	cwde   
   14001289a:	jle    0x14001289b
   14001289c:	mov    edi,0xc2ff809c
   1400128a1:	lahf   
   1400128a2:	test   edi,edi
   1400128a4:	(bad)
   1400128a7:	dec    eax
   1400128a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400128aa:	mov    ?,edi
   1400128ac:	retf   0x90a8
   1400128af:	dec    edx
   1400128b1:	test   al,0x91
   1400128b3:	(bad)  
   1400128b4:	(bad)  
   1400128b5:	retf   
   1400128b6:	mov    bh,0xff
   1400128b8:	cdq    
   1400128b9:	push   0x5d
   1400128bb:	inc    edx
   1400128bd:	sar    BYTE PTR [rsi-0x62615d01],0xff
   1400128c4:	cdq    
   1400128c5:	push   0x5d
   1400128c7:	inc    DWORD PTR [rax]
   1400128c9:	add    BYTE PTR [rax],al
   1400128cb:	rex.XB add BYTE PTR [r8],al
   1400128ce:	add    BYTE PTR [rbx+0x0],al
   1400128d1:	add    BYTE PTR [rax],al
   1400128d3:	rex.XB add BYTE PTR [r8],al
   1400128d6:	add    BYTE PTR [rdx],bh
   1400128d8:	add    BYTE PTR [rax],al
   1400128da:	add    BYTE PTR [rbx],ch
   1400128dc:	add    BYTE PTR [rax],al
   1400128de:	add    BYTE PTR [rax+rax*1],ah
   1400128e1:	add    BYTE PTR [rax],al
   1400128e3:	(bad)  
   1400128e4:	add    BYTE PTR [rax],al
   1400128e6:	add    BYTE PTR [rcx],cl
   1400128e8:	add    BYTE PTR [rax],al
   1400128ea:	add    BYTE PTR [rbx],al
	...
   14001290c:	mov    bh,0xb4
   14001290e:	mov    cl,0x66
   140012910:	movabs ds:0xb8ff7a91b8ff6775,al
   140012919:	xchg   ecx,eax
   14001291a:	jp     0x14001291b
   14001291c:	lahf   
   14001291d:	jno    0x14001297c
   14001291f:	inc    edi
   140012921:	movabs ds:0xa4c8ff8ca5c9ff8b,eax
   14001292a:	mov    edi,?
   14001292c:	(bad)  
   14001292d:	movabs ds:0x9bc0ff859ec3ff89,al
   140012936:	cmp    edi,0xff7d98bd
   14001293c:	mov    ebx,0xbaff7b96
   140012941:	xchg   esi,eax
   140012942:	jp     0x140012943
   140012944:	mov    ebx,0xbdff7b97
   140012949:	cdq    
   14001294a:	jle    0x14001294b
   14001294c:	rcr    BYTE PTR [rsi-0x5e3c007e],0x87
   140012953:	inc    edi
   140012955:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012956:	mov    edi,?
   140012958:	leave  
   140012959:	test   al,0x90
   14001295b:	dec    edx
   14001295d:	test   al,0x91
   14001295f:	dec    edx
   140012961:	test   al,0x91
   140012963:	dec    eax
   140012965:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012966:	(bad)  
   140012967:	inc    ebx
   140012969:	movabs ds:0x9abeff839ec1ff88,al
   140012972:	jg     0x140012973
   140012974:	(bad)  
   140012975:	retf   
   140012976:	mov    bh,0xff
   140012978:	cdq    
   140012979:	push   0x5d
   14001297b:	inc    ebx
   14001297d:	sar    DWORD PTR [rdi-0x62615d01],0xff
   140012984:	cdq    
   140012985:	push   0x5d
   140012987:	inc    DWORD PTR [rax]
   140012989:	add    BYTE PTR [rax],al
   14001298b:	rex.XB add BYTE PTR [r8],al
   14001298e:	add    BYTE PTR [rbx+0x0],al
   140012991:	add    BYTE PTR [rax],al
   140012993:	rex.XB add BYTE PTR [r8],al
   140012996:	add    BYTE PTR [rbx],bh
   140012998:	add    BYTE PTR [rax],al
   14001299a:	add    BYTE PTR [rdi],ch
   14001299c:	add    BYTE PTR [rax],al
   14001299e:	add    BYTE PTR [rsi],ah
   1400129a0:	add    BYTE PTR [rax],al
   1400129a2:	add    BYTE PTR [rax+rax*1],bl
   1400129a5:	add    BYTE PTR [rax],al
   1400129a7:	adc    DWORD PTR [rax],eax
   1400129a9:	add    BYTE PTR [rax],al
   1400129ab:	add    eax,0x0
	...
   1400129c8:	ret    0xbcbf
   1400129cb:	pop    rdx
   1400129cc:	(bad)  
   1400129cd:	cwde   
   1400129ce:	xchg   ebp,eax
   1400129cf:	(bad)  
   1400129d0:	jg     0x140012a4f
   1400129d2:	jnp    0x1400129d3
   1400129d4:	jbe    0x140012a49
   1400129d6:	jb     0x1400129d7
   1400129d8:	mov    eax,0x9fff7a91
   1400129dd:	jno    0x140012a3c
   1400129df:	inc    ecx
   1400129e1:	popf   
   1400129e2:	test   bh,bh
   1400129e4:	mov    esi,0xbaff7d99
   1400129e9:	xchg   esi,eax
   1400129ea:	jp     0x1400129eb
   1400129ec:	mov    ecx,0xbaff7894
   1400129f1:	xchg   ebp,eax
   1400129f2:	jns    0x1400129f3
   1400129f4:	mov    dh,0x94
   1400129f6:	jge    0x1400129f7
   1400129f8:	movabs eax,ds:0x5bff8d6a80ff8584
   140012a01:	rex.WR xchg rcx,rax
   140012a03:	dec    DWORD PTR [rax+0x3d]
   140012a06:	nop
   140012a07:	call   QWORD PTR [rsi+0x48]
   140012a0a:	nop
   140012a0b:	push   QWORD PTR [rsi+0x63]
   140012a0e:	nop
   140012a0f:	jmp    QWORD PTR [rcx-0x3f00717a]
   140012a15:	lahf   
   140012a16:	mov    edi,edi
   140012a18:	rcr    DWORD PTR [rdi-0x6440007b],0x80
   140012a1f:	(bad)  
   140012a20:	mov    ebp,0xbcff7d9a
   140012a25:	cwde   
   140012a26:	jl     0x140012a27
   140012a28:	mov    esp,0xbeff7d99
   140012a2d:	fwait
   140012a2e:	cmp    bh,0xc1
   140012a31:	sahf   
   140012a32:	cmp    edi,0xffffffea
   140012a35:	retf   
   140012a36:	mov    bh,0xff
   140012a38:	cdq    
   140012a39:	push   0x5d
   140012a3b:	inc    esp
   140012a3d:	ret    0xffc0
   140012a40:	movabs ds:0xff5d6a99ff9d9e,al
   140012a49:	add    BYTE PTR [rax],al
   140012a4b:	add    BYTE PTR [r8],al
   140012a4e:	add    BYTE PTR [rcx+0x0],al
   140012a51:	add    BYTE PTR [rax],al
   140012a53:	add    BYTE PTR [r8],al
   140012a56:	add    BYTE PTR [rcx],bh
   140012a58:	add    BYTE PTR [rax],al
   140012a5a:	add    BYTE PTR [rsi],ch
   140012a5c:	add    BYTE PTR [rax],al
   140012a5e:	add    BYTE PTR [rip+0x1c000000],ah        # 0x15c012a64
   140012a64:	add    BYTE PTR [rax],al
   140012a66:	add    BYTE PTR [rdx],dl
   140012a68:	add    BYTE PTR [rax],al
   140012a6a:	add    BYTE PTR [rsi],al
	...
   140012a88:	(bad)  
   140012a89:	cwde   
   140012a8a:	xchg   ebp,eax
   140012a8b:	inc    edi
   140012a8d:	leave  
   140012a8e:	retf   
   140012a8f:	call   FWORD PTR [rcx-0x3000a296]
   140012a95:	mov    al,0x98
   140012a97:	(bad)  
   140012a98:	mov    eax,0x9fff7a91
   140012a9d:	jno    0x140012afc
   140012a9f:	(bad)  
   140012aa0:	mov    ebx,0xbdff7b97
   140012aa5:	fwait
   140012aa6:	cmp    bh,0xc3
   140012aa9:	movabs eax,ds:0x9ebeff8ba5c7ff86
   140012ab2:	xchg   edx,eax
   140012ab3:	(bad)  
   140012ab4:	jge    0x140012b21
   140012ab6:	cwde   
   140012ab7:	inc    DWORD PTR [rax+0x39]
   140012aba:	sahf   
   140012abb:	call   FWORD PTR [rdi]
   140012abd:	sbb    eax,0x1818ffa6
   140012ac2:	scas   eax,DWORD PTR es:[rdi]
   140012ac3:	call   FWORD PTR [rcx]
   140012ac5:	sbb    BYTE PTR [rbp-0x54e9e701],dh
   140012acb:	call   FWORD PTR [rdx]
   140012acd:	sbb    BYTE PTR [rax-0x6ddfda01],ah
   140012ad3:	jmp    QWORD PTR [rsi+0x53]
   140012ad6:	test   edi,edi
   140012ad8:	mov    bl,0x92
   140012ada:	jg     0x140012adb
   140012adc:	rcr    BYTE PTR [rcx+rax*4-0x795f3b01],0xff
   140012ae4:	enter  0x8aa5,0xff
   140012ae8:	retf   0x8fa9
   140012aeb:	dec    esp
   140012aed:	stos   BYTE PTR es:[rdi],al
   140012aee:	xchg   edx,eax
   140012aef:	dec    ebp
   140012af1:	lods   al,BYTE PTR ds:[rsi]
   140012af2:	xchg   esp,eax
   140012af3:	(bad)  
   140012af4:	(bad)  
   140012af5:	retf   
   140012af6:	mov    bh,0xff
   140012af8:	cdq    
   140012af9:	push   0x5d
   140012afb:	inc    ebp
   140012afd:	ret    
   140012afe:	sar    edi,0xa2
   140012b01:	sahf   
   140012b02:	popf   
   140012b03:	call   FWORD PTR [rcx+0xff5d6a]
   140012b09:	add    BYTE PTR [rax],al
   140012b0b:	cmp    eax,0x3d000000
   140012b10:	add    BYTE PTR [rax],al
   140012b12:	add    BYTE PTR [rip+0x36000000],bh        # 0x176012b18
   140012b18:	add    BYTE PTR [rax],al
   140012b1a:	add    BYTE PTR [rbx],ch
   140012b1c:	add    BYTE PTR [rax],al
   140012b1e:	add    BYTE PTR [rcx],ah
   140012b20:	add    BYTE PTR [rax],al
   140012b22:	add    BYTE PTR [rax],bl
   140012b24:	add    BYTE PTR [rax],al
   140012b26:	add    BYTE PTR [rip+0x4000000],cl        # 0x144012b2c
	...
   140012b48:	mov    eax,0xc2ffb2b5
   140012b4d:	mov    edi,0x6a9954bc
   140012b52:	pop    rbp
   140012b53:	(bad)  
   140012b54:	mov    eax,0xb8ff7a91
   140012b59:	xchg   ecx,eax
   140012b5a:	jp     0x140012b5b
   140012b5c:	lahf   
   140012b5d:	jno    0x140012bbc
   140012b5f:	dec    ebx
   140012b61:	test   eax,0xa9cbff91
   140012b66:	xchg   ecx,eax
   140012b67:	dec    ebx
   140012b69:	test   eax,0xa0c1ff91
   140012b6e:	(bad)  
   140012b6f:	jmp    QWORD PTR [rbp+rdx*2-0x65]
   140012b73:	call   FWORD PTR [rbx]
   140012b75:	sbb    DWORD PTR [rbx-0x4deceb01],ebp
   140012b7b:	jmp    QWORD PTR [rdx]
   140012b7d:	and    al,bl
   140012b7f:	jmp    QWORD PTR [rbx]
   140012b81:	and    cl,al
   140012b83:	jmp    QWORD PTR [rdx]
   140012b85:	and    eax,ecx
   140012b87:	jmp    QWORD PTR [rcx]
   140012b89:	and    edx,ecx
   140012b8b:	call   QWORD PTR [rsi]
   140012b8d:	(bad)  
   140012b8e:	enter  0x16ff,0x16
   140012b92:	mov    dh,0xff
   140012b94:	or     eax,0x68ff9e0c
   140012b99:	push   rdi
   140012b9a:	nop
   140012b9b:	inc    ebp
   140012b9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012b9e:	xchg   esp,eax
   140012b9f:	dec    esi
   140012ba1:	stos   DWORD PTR es:[rdi],eax
   140012ba2:	xchg   ebp,eax
   140012ba3:	dec    esp
   140012ba5:	stos   BYTE PTR es:[rdi],al
   140012ba6:	xchg   ebx,eax
   140012ba7:	dec    edx
   140012ba9:	test   eax,0xa5c7ff90
   140012bae:	mov    edi,edi
   140012bb0:	(bad)
   140012bb4:	(bad)  
   140012bb5:	retf   
   140012bb6:	mov    bh,0xff
   140012bb8:	cdq    
   140012bb9:	push   0x5d
   140012bbb:	inc    edi
   140012bbd:	(bad)
   140012bc0:	movabs ds:0xff5d6a99ff9d9e,al
   140012bc9:	add    BYTE PTR [rax],al
   140012bcb:	xor    DWORD PTR [rax],eax
   140012bcd:	add    BYTE PTR [rax],al
   140012bcf:	xor    DWORD PTR [rax],eax
   140012bd1:	add    BYTE PTR [rax],al
   140012bd3:	xor    DWORD PTR [rax],eax
   140012bd5:	add    BYTE PTR [rax],al
   140012bd7:	sub    eax,0x21000000
   140012bdc:	add    BYTE PTR [rax],al
   140012bde:	add    BYTE PTR [rax+rax*1],dl
   140012be1:	add    BYTE PTR [rax],al
   140012be3:	or     al,0x0
   140012be5:	add    BYTE PTR [rax],al
   140012be7:	add    eax,0x1000000
	...
   140012c08:	ret    0xbcbf
   140012c0b:	pop    rdx
   140012c0c:	(bad)  
   140012c0d:	cwde   
   140012c0e:	xchg   ebp,eax
   140012c0f:	(bad)  
   140012c10:	jg     0x140012c8f
   140012c12:	jnp    0x140012c13
   140012c14:	jbe    0x140012c89
   140012c16:	jb     0x140012c17
   140012c18:	mov    eax,0x9fff7a91
   140012c1d:	jno    0x140012c7c
   140012c1f:	inc    eax
   140012c21:	sahf   
   140012c22:	test   bh,bh
   140012c24:	mov    ebp,0xb9ff7e9a
   140012c29:	xchg   esi,eax
   140012c2a:	jnp    0x140012c2b
   140012c2c:	outs   dx,BYTE PTR ds:[rsi]
   140012c2d:	pop    rsp
   140012c2e:	xchg   ebx,eax
   140012c2f:	jmp    QWORD PTR [rax]
   140012c31:	and    BYTE PTR [rdi-0x46caca01],ch
   140012c37:	dec    DWORD PTR [rdx+0x4a]
   140012c3a:	mov    ebp,0xa10d0dff
   140012c3f:	jmp    QWORD PTR [rbx]
   140012c41:	and    eax,ecx
   140012c43:	jmp    QWORD PTR [rip+0x11ffcb25]        # 0x15200f76e
   140012c49:	adc    bh,BYTE PTR [rdx-0x277f7f01]
   140012c4f:	call   QWORD PTR [rbp+0x55]
   140012c52:	sar    edi,1
   140012c54:	adc    eax,0x1bffb915
   140012c59:	sbb    DWORD PTR [rdi-0x768c7501],edx
   140012c5f:	inc    eax
   140012c61:	lahf   
   140012c62:	test   bh,bh
   140012c64:	mov    esi,0xbcff809c
   140012c69:	cdq    
   140012c6a:	jge    0x140012c6b
   140012c6c:	mov    ebp,0xbfff7f9b
   140012c71:	sahf   
   140012c72:	cmp    edi,0xffffffea
   140012c75:	retf   
   140012c76:	mov    bh,0xff
   140012c78:	cdq    
   140012c79:	push   0x5d
   140012c7b:	dec    eax
   140012c7d:	mov    ah,0xff
   140012c80:	movabs ds:0xff5d6a99ff9d9e,al
   140012c89:	add    BYTE PTR [rax],al
   140012c8b:	sbb    DWORD PTR [rax],eax
   140012c8d:	add    BYTE PTR [rax],al
   140012c8f:	sbb    DWORD PTR [rax],eax
   140012c91:	add    BYTE PTR [rax],al
   140012c93:	sbb    DWORD PTR [rax],eax
   140012c95:	add    BYTE PTR [rax],al
   140012c97:	sbb    DWORD PTR [rax],eax
   140012c99:	add    BYTE PTR [rax],al
   140012c9b:	adc    DWORD PTR [rax],eax
   140012c9d:	add    BYTE PTR [rax],al
   140012c9f:	adc    DWORD PTR [rax],eax
   140012ca1:	add    BYTE PTR [rax],al
   140012ca3:	(bad)  
   140012ca4:	add    BYTE PTR [rax],al
   140012ca6:	add    BYTE PTR [rcx],al
	...
   140012cc8:	(bad)  
   140012cc9:	cwde   
   140012cca:	xchg   ebp,eax
   140012ccb:	inc    edi
   140012ccd:	leave  
   140012cce:	retf   
   140012ccf:	call   FWORD PTR [rcx-0x3000a296]
   140012cd5:	mov    al,0x98
   140012cd7:	(bad)  
   140012cd8:	mov    eax,0x9fff7a91
   140012cdd:	jno    0x140012d3c
   140012cdf:	(bad)  
   140012ce0:	mov    esi,0xc3ff809c
   140012ce5:	movabs al,ds:0x2c2fff9588a3ff86
   140012cee:	scas   eax,DWORD PTR es:[rdi]
   140012cef:	jmp    QWORD PTR [rsi]
   140012cf1:	and    eax,0x8e8effb5
   140012cf6:	enter  0xd2ff,0xd2
   140012cfa:	xlat   BYTE PTR ds:[rbx]
   140012cfb:	call   FWORD PTR [rsp+rbx*2-0x5c]
   140012cff:	inc    DWORD PTR [rcx]
   140012d01:	add    DWORD PTR [rbp-0x57f3f301],ecx
   140012d07:	jmp    FWORD PTR [rcx-0x4002357]
   140012d0d:	sti    
   140012d0e:	cli    
   140012d0f:	call   FWORD PTR [rdi+0x1fffdb9f]
   140012d15:	and    bl,cl
   140012d17:	call   QWORD PTR [rip+0x52ffa815]        # 0x19300d532
   140012d1d:	mov    r15b,dil
   140012d20:	ret    
   140012d21:	movabs ds:0xacccff8ca6c7ff85,al
   140012d2a:	xchg   ebx,eax
   140012d2b:	dec    esi
   140012d2d:	scas   al,BYTE PTR es:[rdi]
   140012d2e:	xchg   edi,eax
   140012d2f:	call   rax
   140012d31:	mov    al,0x99
   140012d33:	(bad)  
   140012d34:	(bad)  
   140012d35:	retf   
   140012d36:	mov    bh,0xff
   140012d38:	cdq    
   140012d39:	push   0x5d
   140012d3b:	dec    edx
   140012d3d:	enter  0xffc6,0xa2
   140012d41:	sahf   
   140012d42:	popf   
   140012d43:	call   FWORD PTR [rcx+0xff5d6a]
   140012d49:	add    BYTE PTR [rax],al
   140012d4b:	add    eax,0x5000000
   140012d50:	add    BYTE PTR [rax],al
   140012d52:	add    BYTE PTR [rip+0x5000000],al        # 0x145012d58
   140012d58:	add    BYTE PTR [rax],al
   140012d5a:	add    BYTE PTR [rbx],al
   140012d5c:	add    BYTE PTR [rax],al
   140012d5e:	add    BYTE PTR [rcx],al
	...
   140012d88:	mov    eax,0xc2ffb2b5
   140012d8d:	mov    edi,0x6a9954bc
   140012d92:	pop    rbp
   140012d93:	(bad)  
   140012d94:	mov    eax,0xb8ff7a91
   140012d99:	xchg   ecx,eax
   140012d9a:	jp     0x140012d9b
   140012d9c:	lahf   
   140012d9d:	jno    0x140012dfc
   140012d9f:	call   rcx
   140012da1:	mov    dl,0x9c
   140012da3:	dec    esi
   140012da5:	lods   eax,DWORD PTR ds:[rsi]
   140012da6:	xchg   ebp,eax
   140012da7:	push   QWORD PTR [rbp+0x65]
   140012daa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012dab:	jmp    QWORD PTR [rdi]
   140012dad:	es mov dl,0xff
   140012db0:	sub    al,0x2c
   140012db2:	mov    ecx,0xcc8f8fff
   140012db7:	(bad)  
   140012db8:	(bad)  
   140012db9:	(bad)  
   140012dba:	in     al,dx
   140012dbb:	(bad)  
   140012dbc:	in     al,dx
   140012dbd:	in     al,dx
   140012dbe:	loopne 0x140012dbf
   140012dc0:	pop    rdx
   140012dc1:	pop    rdx
   140012dc2:	sahf   
   140012dc3:	(bad)  
   140012dc4:	jle    0x140012e44
   140012dc6:	scas   eax,DWORD PTR es:[rdi]
   140012dc7:	(bad)  
   140012dc8:	(bad)  
   140012dc9:	(bad)  
   140012dca:	out    dx,eax
   140012dcb:	inc    ebp
   140012dcd:	(bad)  
   140012dce:	icebp  
   140012dcf:	(bad)  
   140012dd0:	cmp    edi,DWORD PTR [rbx]
   140012dd2:	retf   0x23ff
   140012dd5:	and    eax,esi
   140012dd7:	call   FWORD PTR [rax]
   140012dd9:	(bad)  
   140012dda:	mov    ch,0xff
   140012ddc:	sub    esp,DWORD PTR [rip+0xffffffffb1d1ff92]        # 0xf1d32d74
   140012de2:	cdq    
   140012de3:	call   rax
   140012de5:	mov    al,0x99
   140012de7:	dec    edi
   140012de9:	mov    al,0x97
   140012deb:	dec    esp
   140012ded:	lods   al,BYTE PTR ds:[rsi]
   140012dee:	xchg   ebx,eax
   140012def:	dec    edx
   140012df1:	stos   BYTE PTR es:[rdi],al
   140012df2:	(bad)  
   140012df3:	(bad)  
   140012df4:	(bad)  
   140012df5:	retf   
   140012df6:	mov    eax,0x5d6a99ff
   140012dfb:	dec    esp
   140012dfd:	retf   0xffc8
   140012e00:	movabs ds:0xff5d6a99ff9d9e,eax
	...
   140012e45:	add    BYTE PTR [rax],al
   140012e47:	add    dl,al
   140012e49:	mov    edi,0x989a5abc
   140012e4e:	xchg   ebp,eax
   140012e4f:	(bad)  
   140012e50:	jg     0x140012ecf
   140012e52:	jnp    0x140012e53
   140012e54:	jbe    0x140012ec9
   140012e56:	jb     0x140012e57
   140012e58:	mov    eax,0x9fff7a91
   140012e5d:	jno    0x140012ebc
   140012e5f:	inc    ebp
   140012e61:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012e62:	mov    ?,edi
   140012e64:	mov    edi,0x43ff839f
   140012e69:	cmp    ebp,DWORD PTR [rax-0x4bd3d201]
   140012e6f:	push   QWORD PTR [rax]
   140012e71:	(bad)  
   140012e72:	mov    ecx,0xb83333ff
   140012e77:	(bad)  
   140012e78:	jl     0x140012ef6
   140012e7a:	(bad)  
   140012e7d:	loop   0x140012e5c
   140012e7f:	jmp    rbp
   140012e81:	in     eax,0xdd
   140012e83:	push   rax
   140012e85:	lock (bad) 
   140012e88:	stos   DWORD PTR es:[rdi],eax
   140012e89:	stos   DWORD PTR es:[rdi],eax
   140012e8a:	sar    bh,1
   140012e8c:	(bad)  
   140012e8d:	(bad)  
   140012e8e:	mov    al,0xff
   140012e90:	es es ret 0x23ff
   140012e95:	and    eax,edx
   140012e97:	call   FWORD PTR [rdi]
   140012e99:	(bad)  
   140012e9a:	mov    esp,0x931112ff
   140012e9f:	inc    edx
   140012ea1:	movabs ds:0x9bbdff829dbfff86,al
   140012eaa:	jle    0x140012eab
   140012eac:	mov    ebp,0xbfff7f9b
   140012eb1:	sahf   
   140012eb2:	cmp    edi,0xffb8ccea
   140012eb8:	cdq    
   140012eb9:	push   0x5d
   140012ebb:	dec    ebp
   140012ebd:	retf   
   140012ebe:	leave  
   140012ebf:	jmp    QWORD PTR [rbx-0x66006161]
   140012ec5:	push   0x5d
   140012ec7:	inc    DWORD PTR [rax]
	...
   140012f05:	add    BYTE PTR [rax],al
   140012f07:	add    BYTE PTR [rdx-0x38006a68],bl
   140012f0d:	leave  
   140012f0e:	retf   
   140012f0f:	call   FWORD PTR [rcx-0x3000a296]
   140012f15:	mov    al,0x98
   140012f17:	(bad)  
   140012f18:	mov    eax,0x9fff7a91
   140012f1d:	jno    0x140012f7c
   140012f1f:	dec    ebx
   140012f21:	scas   al,BYTE PTR es:[rdi]
   140012f22:	xchg   esi,eax
   140012f23:	dec    ebp
   140012f25:	mov    al,0x9a
   140012f27:	jmp    FWORD PTR [rbx]
   140012f29:	sub    DWORD PTR [rbp-0x45c1c101],esi
   140012f2f:	(bad)  
   140012f30:	cmp    BYTE PTR [rdi],dh
   140012f32:	mov    edx,0xbc2e2eff
   140012f37:	inc    DWORD PTR [rbx]
   140012f39:	add    ebp,DWORD PTR [rdi-0x294c4c01]
   140012f3f:	(bad)  
   140012f40:	(bad)  
   140012f41:	push   rcx
   140012f43:	(bad)  
   140012f44:	(bad)  
   140012f45:	push   rbx
   140012f47:	inc    DWORD PTR [rsi+0xffba86]
   140012f4d:	add    BYTE PTR [rdx-0x53f1f101],al
   140012f53:	jmp    QWORD PTR [rip+0x1fffc025]        # 0x16000ef7e
   140012f59:	(bad)  
   140012f5a:	mov    dh,0xff
   140012f5c:	(bad)  
   140012f5d:	sbb    al,0x93
   140012f5f:	inc    ebp
   140012f61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012f62:	mov    edi,edi
   140012f64:	leave  
   140012f65:	test   eax,0xafceff8f
   140012f6a:	xchg   edi,eax
   140012f6b:	call   rcx
   140012f6d:	mov    dl,0x9a
   140012f6f:	call   rdx
   140012f71:	mov    bl,0x9d
   140012f73:	(bad)  
   140012f74:	(bad)  
   140012f75:	int3   
   140012f76:	mov    ecx,0x5d6a99ff
   140012f7b:	dec    edi
   140012f7d:	int    0xcb
   140012f7f:	jmp    QWORD PTR [rax+riz*4+0x6a99ff9e]
   140012f86:	pop    rbp
   140012f87:	inc    DWORD PTR [rax]
	...
   140012fc5:	add    BYTE PTR [rax],al
   140012fc7:	add    BYTE PTR [rax-0x3d004d4b],bh
   140012fcd:	mov    edi,0x6a9954bc
   140012fd2:	pop    rbp
   140012fd3:	(bad)  
   140012fd4:	mov    eax,0xb8ff7a91
   140012fd9:	xchg   ecx,eax
   140012fda:	jp     0x140012fdb
   140012fdc:	lahf   
   140012fdd:	jno    0x14001303c
   140012fdf:	(bad)  
   140012fe0:	fdivr  DWORD PTR [rdi+riz*4-0x5c462a01]
   140012fe7:	jmp    FWORD PTR [rip+0x4fffb42b]        # 0x19000e418
   140012fed:	rex.WRX sar rdi,0x4c
   140012ff1:	rex.WXB ret 0x41ff
   140012ff5:	rex enter 0x6dff,0x6d
   140012ffa:	fcos   
   140012ffc:	(bad)  
   140012ffd:	(bad)  
   140012ffe:	repz (bad) 
   140013000:	fcomp  st(1)
   140013002:	in     al,dx
   140013003:	(bad)  
   140013004:	call   0x1260112f0
   140013009:	in     eax,0xe0
   14001300b:	inc    DWORD PTR [rdx+0x20ffb682]
   140013011:	and    BYTE PTR [rdi+rdi*8-0x44d8d9],cl
   140013018:	(bad)  
   140013019:	(bad)  
   14001301a:	lods   eax,DWORD PTR ds:[rsi]
   14001301b:	dec    DWORD PTR [rbp+0x42]
   14001301e:	cdq    
   14001301f:	call   rsp
   140013021:	mov    ch,0x9f
   140013023:	call   rsp
   140013025:	mov    ch,0x9f
   140013027:	call   rbx
   140013029:	mov    ah,0x9e
   14001302b:	dec    edi
   14001302d:	mov    al,0x98
   14001302f:	dec    esp
   140013031:	lods   al,BYTE PTR ds:[rsi]
   140013032:	xchg   esp,eax
   140013033:	(bad)  
   140013034:	jmp    0x140013003
   140013036:	mov    edx,0x5d6a99ff
   14001303b:	call   rcx
   14001303d:	iret   
   14001303e:	int    0xff
   140013040:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013041:	movabs al,ds:0xff5d6a99ff9f
	...
   140013086:	add    BYTE PTR [rax],al
   140013088:	ret    0xbcbf
   14001308b:	pop    rdx
   14001308c:	(bad)  
   14001308d:	cwde   
   14001308e:	xchg   ebp,eax
   14001308f:	(bad)  
   140013090:	jg     0x14001310f
   140013092:	jnp    0x140013093
   140013094:	jbe    0x140013109
   140013096:	jb     0x140013097
   140013098:	mov    eax,0x9fff7a91
   14001309d:	jno    0x1400130fc
   14001309f:	inc    ebp
   1400130a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400130a2:	(bad)  
   1400130a3:	inc    eax
   1400130a5:	movabs al,ds:0x4a4affac4149ff86
   1400130ae:	sar    bh,0x5e
   1400130b1:	pop    rsi
   1400130b2:	leave  
   1400130b3:	dec    DWORD PTR [rbx-0x2001375]
   1400130b9:	std    
   1400130ba:	(bad)  
   1400130bb:	jmp    rsi
   1400130bd:	out    0xfd,al
   1400130bf:	jmp    FWORD PTR [rsp+rbp*2-0x2e]
   1400130c3:	call   FWORD PTR [rcx+0x59]
   1400130c6:	retf   
   1400130c7:	push   rcx
   1400130c9:	icebp  
   1400130ca:	jmp    0x130fb2ace
   1400130cf:	push   QWORD PTR [rsp+rsi*4+0x2c2cffd6]
   1400130d6:	mov    dl,0xff
   1400130d8:	(bad)  
   1400130d9:	(bad)  
   1400130da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400130db:	(bad)  
   1400130dc:	jl     0x140013147
   1400130de:	xchg   ecx,eax
   1400130df:	inc    esp
   1400130e1:	movabs ds:0x9cbeff839ec1ff88,eax
   1400130ea:	cmp    bh,0xbf
   1400130ed:	popf   
   1400130ee:	cmp    edi,0xff86a1c2
   1400130f4:	jmp    0x1400130c4
   1400130f6:	mov    ebx,0x5d6a99ff
   1400130fb:	call   rbx
   1400130fd:	ror    edi,1
   1400130ff:	jmp    QWORD PTR [rsi-0x6600605f]
   140013105:	push   0x5d
   140013107:	inc    DWORD PTR [rax]
	...
   140013145:	add    BYTE PTR [rax],al
   140013147:	add    BYTE PTR [rdx-0x38006a68],bl
   14001314d:	leave  
   14001314e:	retf   
   14001314f:	call   FWORD PTR [rcx-0x3000a296]
   140013155:	mov    al,0x98
   140013157:	(bad)  
   140013158:	mov    ecx,0x9fff7c93
   14001315d:	jno    0x1400131bc
   14001315f:	call   rbx
   140013161:	mov    eax,0xbcd7ffa3
   140013166:	test   al,0xff
   140013168:	(bad)  
   140013169:	jae    0x14001311a
   14001316b:	(bad)  
   14001316c:	cmp    eax,0x5effbc3d
   140013171:	pop    rbp
   140013172:	retf   0xbfff
   140013175:	mov    edi,0xe1e1fff9
   14001317a:	(bad)  
   14001317b:	inc    DWORD PTR [rbx+0x52ffdd82]
   140013181:	push   rax
   140013182:	leave  
   140013183:	dec    DWORD PTR [rdx+0x4a]
   140013186:	enter  0x70ff,0x71
   14001318a:	fdivr  st,st(7)
   14001318c:	mov    edi,0x7070ffec
   140013192:	(bad)  
   140013193:	jmp    FWORD PTR [rdi]
   140013195:	(bad)  
   140013196:	mov    ah,0xff
   140013198:	cmp    dh,BYTE PTR [rbx]
   14001319a:	fwait
   14001319b:	jmp    FWORD PTR [rdi-0x3800756d]
   1400131a1:	test   al,0x8e
   1400131a3:	dec    esp
   1400131a5:	scas   al,BYTE PTR es:[rdi]
   1400131a6:	xchg   ebp,eax
   1400131a7:	call   rax
   1400131a9:	mov    bl,0x9b
   1400131ab:	call   rdx
   1400131ad:	mov    ch,0x9e
   1400131af:	call   rsp
   1400131b1:	mov    dh,0xa0
   1400131b3:	(bad)  
   1400131b4:	jmp    0x140013184
   1400131b6:	mov    esp,0x5d6a99ff
   1400131bb:	call   rbp
   1400131bd:	rcl    ecx,cl
   1400131bf:	jmp    QWORD PTR [rdi-0x66005f5e]
   1400131c5:	push   0x5d
   1400131c7:	inc    DWORD PTR [rax]
	...
   140013205:	add    BYTE PTR [rax],al
   140013207:	add    BYTE PTR [rax-0x3d004d4b],bh
   14001320d:	mov    edi,0x6a9954bc
   140013212:	pop    rbp
   140013213:	(bad)  
   140013214:	mov    ebx,0xbbff7e95
   140013219:	xchg   ebp,eax
   14001321a:	jle    0x14001321b
   14001321c:	lahf   
   14001321d:	jno    0x14001327c
   14001321f:	(bad)  
   140013220:	fidivr DWORD PTR [rdi-0x43280055]
   140013226:	test   eax,0xa49ab1ff
   14001322b:	inc    DWORD PTR [rbp+0x3f]
   14001322e:	mov    dl,0xff
   140013230:	rex.WXB
   140013231:	rex.WX ret 
   140013233:	jmp    QWORD PTR [rax+0x60]
   140013236:	xlat   BYTE PTR ds:[rbx]
   140013237:	inc    DWORD PTR [rbx+0x5effe683]
   14001323d:	pop    rsi
   14001323e:	retf   
   14001323f:	jmp    QWORD PTR [rcx+0x60]
   140013242:	retf   
   140013243:	call   FWORD PTR [rbp+0x5d]
   140013246:	leave  
   140013247:	call   QWORD PTR [rdx+rdx*2-0x38]
   14001324b:	call   FWORD PTR [rax+0x56]
   14001324e:	(bad)  
   140013251:	cmp    DWORD PTR [rsi-0x56d8d601],esi
   140013257:	call   FWORD PTR [rsi-0x29005c76]
   14001325d:	mov    ebx,0xbad7ffa4
   140013262:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013263:	call   rsi
   140013265:	mov    edx,0xbad6ffa4
   14001326a:	movabs ds:0x9db5d2ffa1b9d6ff,eax
   140013273:	(bad)  
   140013274:	jmp    0x140013245
   140013276:	mov    ebp,0x5d6a99ff
   14001327b:	call   rdi
   14001327d:	(bad)  
   14001327e:	sar    edi,cl
   140013280:	test   al,0xa3
   140013282:	movabs eax,ds:0xff5d6a99ff
	...
   1400132c7:	add    dl,al
   1400132c9:	mov    edi,0x989a5abc
   1400132ce:	xchg   ebp,eax
   1400132cf:	(bad)  
   1400132d0:	jg     0x14001334f
   1400132d2:	jnp    0x1400132d3
   1400132d4:	jbe    0x140013349
   1400132d6:	jb     0x1400132d7
   1400132d8:	mov    ebp,0x9fff8198
   1400132dd:	jno    0x14001333c
   1400132df:	dec    ecx
   1400132e1:	lods   al,BYTE PTR ds:[rsi]
   1400132e2:	xchg   ebx,eax
   1400132e3:	inc    edx
   1400132e5:	movabs ds:0x8195ff8da6c5ff88,al
   1400132ee:	sahf   
   1400132ef:	inc    DWORD PTR [rbx+0x3e]
   1400132f2:	mov    ch,0xff
   1400132f4:	rex.RX
   1400132f5:	rex.RB mov r15d,0xc65556ff
   1400132fb:	jmp    QWORD PTR [rcx+0x61]
   1400132fe:	int3   
   1400132ff:	jmp    QWORD PTR [rsp+riz*2-0x35]
   140013303:	call   FWORD PTR [rbp+0x5e]
   140013306:	enter  0x4dff,0x4c
   14001330a:	mov    esi,0xb53637ff
   14001330f:	push   QWORD PTR [rsi]
   140013311:	xor    ebp,DWORD PTR [rdi+rdi*8-0x577868]
   140013318:	(bad)  
   140013319:	mov    eax,0xb4d0ffa1
   14001331e:	fwait
   14001331f:	dec    ebp
   140013321:	mov    al,0x97
   140013323:	dec    ebx
   140013325:	scas   al,BYTE PTR es:[rdi]
   140013326:	xchg   ebx,eax
   140013327:	dec    ecx
   140013329:	lods   al,BYTE PTR ds:[rsi]
   14001332a:	xchg   ecx,eax
   14001332b:	dec    eax
   14001332d:	stos   BYTE PTR es:[rdi],al
   14001332e:	(bad)  
   14001332f:	dec    edx
   140013331:	lods   al,BYTE PTR ds:[rsi]
   140013332:	xchg   ecx,eax
   140013333:	(bad)  
   140013334:	in     al,dx
   140013335:	sar    BYTE PTR [rdi+0x5d6a99ff],1
   14001333b:	(bad)  
   14001333c:	(bad)  
   14001333e:	(bad)  
   14001333f:	jmp    FWORD PTR [rcx-0x66005e5c]
   140013345:	push   0x5d
   140013347:	inc    DWORD PTR [rax]
	...
   140013385:	add    BYTE PTR [rax],al
   140013387:	add    BYTE PTR [rdx-0x38006a68],bl
   14001338d:	leave  
   14001338e:	retf   
   14001338f:	call   FWORD PTR [rcx-0x2900a296]
   140013395:	mov    ebx,0x9bc0ffa5
   14001339a:	test   bh,bh
   14001339c:	movabs al,ds:0xdbffaec1daff5f73
   1400133a5:	ret    
   1400133a6:	mov    al,0xff
   1400133a8:	fadd   st(4),st
   1400133aa:	mov    cl,0xff
   1400133ac:	ffree  st(4)
   1400133ae:	mov    dl,0xff
   1400133b0:	lods   eax,DWORD PTR ds:[rsi]
   1400133b1:	(bad)  
   1400133b2:	mov    cl,0xff
   1400133b4:	(bad)  
   1400133b5:	pop    rax
   1400133b6:	mov    bl,0xff
   1400133b8:	push   rax
   1400133b9:	rex.WXB movabs r8,0xbb3a3bffbc3e3fff
   1400133c3:	push   QWORD PTR [rbx]
   1400133c5:	xor    DWORD PTR [rdi-0x4fc9c501],esi
   1400133cb:	jmp    FWORD PTR [rdx+0x5e]
   1400133ce:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400133cf:	jmp    QWORD PTR [rdi-0x3600666e]
   1400133d5:	lods   eax,DWORD PTR ds:[rsi]
   1400133d6:	xchg   ebx,eax
   1400133d7:	dec    ebx
   1400133d9:	scas   al,BYTE PTR es:[rdi]
   1400133da:	xchg   ebp,eax
   1400133db:	dec    ebp
   1400133dd:	mov    cl,0x97
   1400133df:	dec    edi
   1400133e1:	mov    bl,0x9a
   1400133e3:	call   rcx
   1400133e5:	mov    dh,0x9e
   1400133e7:	call   rbx
   1400133e9:	mov    eax,0xbcd6ffa1
   1400133ee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400133ef:	call   rdi
   1400133f1:	mov    ebp,0xd1ecffa7
   1400133f6:	sar    bh,0x99
   1400133f9:	push   0x5d
   1400133fb:	(bad)  
   1400133fc:	fcmovnu st,st(1)
   1400133fe:	xlat   BYTE PTR ds:[rbx]
   1400133ff:	jmp    FWORD PTR [rbx-0x66005d5b]
   140013405:	push   0x5d
   140013407:	inc    DWORD PTR [rax]
	...
   140013445:	add    BYTE PTR [rax],al
   140013447:	add    BYTE PTR [rax-0x3d004d4b],bh
   14001344d:	mov    edi,0x6a9954bc
   140013452:	pop    rbp
   140013453:	inc    eax
   140013455:	fwait
   140013456:	test   bh,bh
   140013458:	ret    0x879f
   14001345b:	jmp    QWORD PTR [rdx-0x24009d8b]
   140013461:	(bad)  
   140013462:	mov    al,0xff
   140013464:	fld    st(1)
   140013466:	lods   al,BYTE PTR ds:[rsi]
   140013467:	call   rsp
   140013469:	mov    ebx,0xb6d0ffa5
   14001346e:	lahf   
   14001346f:	dec    esp
   140013471:	mov    dl,0x9b
   140013473:	inc    ecx
   140013475:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013476:	cdq    
   140013477:	jmp    QWORD PTR [rbx-0x72006274]
   14001347d:	jnp    0x14001341e
   14001347f:	call   QWORD PTR [rax-0x5c005d82]
   140013485:	mov    fs,WORD PTR [rcx-0x5d5b4401]
   14001348b:	dec    ebp
   14001348d:	mov    bl,0xa3
   14001348f:	call   rsi
   140013491:	mov    ebp,0xc0d9ffa6
   140013496:	stos   DWORD PTR es:[rdi],eax
   140013497:	(bad)  
   140013498:	fcmovnb st,st(1)
   14001349a:	lods   eax,DWORD PTR ds:[rsi]
   14001349b:	(bad)  
   14001349c:	fadd   st(2),st
   14001349e:	scas   al,BYTE PTR es:[rdi]
   14001349f:	(bad)  
   1400134a0:	ffree  st(3)
   1400134a2:	scas   eax,DWORD PTR es:[rdi]
   1400134a3:	(bad)  
   1400134a4:	ffree  st(4)
   1400134a6:	mov    al,0xff
   1400134a8:	fadd   st(3),st
   1400134aa:	scas   eax,DWORD PTR es:[rdi]
   1400134ab:	(bad)  
   1400134ac:	fcmovnb st,st(3)
   1400134ae:	lods   eax,DWORD PTR ds:[rsi]
   1400134af:	(bad)  
   1400134b0:	fcmovnb st,st(1)
   1400134b2:	lods   al,BYTE PTR ds:[rsi]
   1400134b3:	(bad)  
   1400134b4:	in     al,dx
   1400134b5:	rol    cl,cl
   1400134b7:	call   FWORD PTR [rcx-0x2200a296]
   1400134bd:	fcmovnu st,st(1)
   1400134bf:	jmp    FWORD PTR [rsi+riz*4+0x6a99ffa3]
   1400134c6:	pop    rbp
   1400134c7:	inc    DWORD PTR [rax]
	...
   140013505:	add    BYTE PTR [rax],al
   140013507:	add    dl,al
   140013509:	mov    edi,0x989a5abc
   14001350e:	xchg   ebp,eax
   14001350f:	(bad)  
   140013510:	jg     0x14001358f
   140013512:	jnp    0x140013513
   140013514:	jbe    0x140013589
   140013516:	jb     0x140013517
   140013518:	(bad)
   14001351b:	jmp    QWORD PTR [rax+rdi*2-0x4f33009c]
   140013522:	xchg   edi,eax
   140013523:	dec    ebx
   140013525:	scas   eax,DWORD PTR es:[rdi]
   140013526:	xchg   esi,eax
   140013527:	dec    esi
   140013529:	mov    bl,0x9a
   14001352b:	call   rcx
   14001352d:	mov    bh,0x9f
   14001352f:	call   rsp
   140013531:	mov    edx,0xbed7ffa4
   140013536:	test   al,0xff
   140013538:	fcmovnb st,st(2)
   14001353a:	scas   al,BYTE PTR es:[rdi]
   14001353b:	(bad)  
   14001353c:	faddp  st(6),st
   14001353e:	mov    bl,0xff
   140013540:	faddp  st(6),st
   140013542:	mov    ah,0xff
   140013544:	loopne 0x14001350c
   140013546:	mov    ah,0xff
   140013548:	ffreep st(7)
   14001354a:	mov    bl,0xff
   14001354c:	faddp  st(6),st
   14001354e:	mov    bl,0xff
   140013550:	ffree  st(5)
   140013552:	mov    cl,0xff
   140013554:	fcmovnb st,st(3)
   140013556:	scas   al,BYTE PTR es:[rdi]
   140013557:	(bad)  
   140013558:	fld    st(1)
   14001355a:	stos   DWORD PTR es:[rdi],eax
   14001355b:	call   rsi
   14001355d:	mov    esp,0xbad4ffa7
   140013562:	movabs ds:0x9bb5cfff9fb7d2ff,al
   14001356b:	dec    esi
   14001356d:	mov    dl,0x99
   14001356f:	dec    ebp
   140013571:	mov    cl,0x96
   140013573:	(bad)  
   140013574:	in     al,dx
   140013575:	rol    dl,cl
   140013577:	call   FWORD PTR [rcx-0x1f00a296]
   14001357d:	(bad)  
   14001357f:	jmp    FWORD PTR [rbp-0x66005b59]
   140013585:	push   0x5d
   140013587:	inc    DWORD PTR [rax]
	...
   1400135c5:	add    BYTE PTR [rax],al
   1400135c7:	add    BYTE PTR [rdx-0x38006a68],bl
   1400135cd:	leave  
   1400135ce:	retf   
   1400135cf:	call   FWORD PTR [rcx-0x2500a296]
   1400135d5:	shr    DWORD PTR [rbp-0x71593801],0xff
   1400135dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400135dd:	jnp    0x140013647
   1400135df:	(bad)  
   1400135e0:	ffree  st(7)
   1400135e2:	mov    bl,0xff
   1400135e4:	loopne 0x1400135af
   1400135e6:	mov    eax,0xb6cae1ff
   1400135eb:	jmp    rax
   1400135ed:	leave  
   1400135ee:	mov    eax,0xb6c9e1ff
   1400135f3:	(bad)  
   1400135f4:	fmulp  st(0),st
   1400135f6:	mov    ch,0xff
   1400135f8:	ffree  st(7)
   1400135fa:	mov    ah,0xff
   1400135fc:	fcmovnb st,st(4)
   1400135fe:	mov    cl,0xff
   140013600:	fdivr  DWORD PTR [rdi-0x432b0055]
   140013606:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013607:	call   rdx
   140013609:	mov    ecx,0xb6d0ffa0
   14001360e:	sahf   
   14001360f:	dec    edi
   140013611:	mov    ch,0x9c
   140013613:	dec    esi
   140013615:	mov    bl,0x9a
   140013617:	dec    esp
   140013619:	mov    al,0x96
   14001361b:	dec    ebp
   14001361d:	mov    dl,0x98
   14001361f:	dec    esi
   140013621:	mov    dl,0x99
   140013623:	call   rax
   140013625:	mov    ch,0x9c
   140013627:	call   rcx
   140013629:	mov    eax,0xbad3ffa0
   14001362e:	movabs ds:0xc4d4edffa6bdd7ff,al
   140013637:	call   FWORD PTR [rcx-0x1d00a296]
   14001363d:	loopne 0x14001361d
   14001363f:	jmp    FWORD PTR [rsi-0x66005a58]
   140013645:	push   0x5d
   140013647:	inc    DWORD PTR [rax]
	...
   140013685:	add    BYTE PTR [rax],al
   140013687:	add    BYTE PTR [rax-0x3d004d4b],bh
   14001368d:	mov    edi,0x6a9954bc
   140013692:	pop    rbp
   140013693:	dec    edx
   140013695:	test   eax,0xa9caff91
   14001369a:	xchg   ecx,eax
   14001369b:	jmp    FWORD PTR [rcx-0x22009481]
   1400136a1:	(bad)  
   1400136a2:	mov    ah,0xff
   1400136a4:	fcmovb st,st(2)
   1400136a6:	scas   al,BYTE PTR es:[rdi]
   1400136a7:	call   rsi
   1400136a9:	mov    esi,0xb9d3ffa9
   1400136ae:	movabs ds:0x9eb6ceffa0b7d0ff,eax
   1400136b7:	dec    esi
   1400136b9:	mov    ah,0x9c
   1400136bb:	dec    ebp
   1400136bd:	mov    dl,0x99
   1400136bf:	dec    edi
   1400136c1:	mov    ah,0x9b
   1400136c3:	call   rcx
   1400136c5:	mov    bh,0x9e
   1400136c7:	call   rbx
   1400136c9:	mov    ecx,0xbcd5ffa2
   1400136ce:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400136cf:	(bad)  
   1400136d0:	fdivr  DWORD PTR [rdi-0x40350057]
   1400136d6:	scas   eax,DWORD PTR es:[rdi]
   1400136d7:	(bad)  
   1400136d8:	mov    esp,0xabffb9c3
   1400136dd:	ret    
   1400136de:	mov    edi,0xb9b895ff
   1400136e3:	(bad)  
   1400136e4:	jg     0x140013699
   1400136e6:	mov    ecx,0xb8ac69ff
   1400136eb:	call   QWORD PTR [rbp-0x57]
   1400136ee:	mov    ecx,0xc1ad3fff
   1400136f3:	(bad)  
   1400136f4:	in     eax,dx
   1400136f5:	(bad)  
   1400136f6:	(bad)  
   1400136f9:	push   0x5d
   1400136fb:	jmp    rsp
   1400136fd:	loop   0x1400136df
   1400136ff:	push   QWORD PTR [rax-0x66005a57]
   140013705:	push   0x5d
   140013707:	inc    DWORD PTR [rax]
	...
   140013745:	add    BYTE PTR [rax],al
   140013747:	add    dl,al
   140013749:	mov    edi,0x989a5abc
   14001374e:	xchg   ebp,eax
   14001374f:	(bad)  
   140013750:	jg     0x1400137cf
   140013752:	jnp    0x140013753
   140013754:	jbe    0x1400137c9
   140013756:	jb     0x140013757
   140013758:	int3   
   140013759:	lods   eax,DWORD PTR ds:[rsi]
   14001375a:	xchg   ebp,eax
   14001375b:	jmp    FWORD PTR [rbx-0x2f00907e]
   140013761:	mov    bh,0x9f
   140013763:	dec    edi
   140013765:	mov    ah,0x9d
   140013767:	call   rdx
   140013769:	mov    ecx,0xbdd5ffa1
   14001376e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001376f:	(bad)  
   140013770:	fadd   st,st(0)
   140013772:	stos   DWORD PTR es:[rdi],eax
   140013773:	(bad)  
   140013774:	fcmovnb st,st(4)
   140013776:	mov    cl,0xff
   140013778:	fmulp  st(0),st
   14001377a:	mov    ah,0xff
   14001377c:	loope  0x14001374a
   14001377e:	mov    ecx,0xbbcce2ff
   140013783:	dec    DWORD PTR [rdx-0x50]
   140013786:	ret    
   140013787:	(bad)  
   140013788:	cmp    BYTE PTR [rsi-0x61df0044],ah
   14001378e:	mov    ebp,0xc09d0fff
   140013793:	dec    DWORD PTR [rdi]
   140013795:	movabs eax,ds:0x980fffc6a010ffc6
   14001379e:	mov    esp,0xd7b212ff
   1400137a3:	call   QWORD PTR [rbx]
   1400137a5:	mov    ch,0xdd
   1400137a7:	call   QWORD PTR [rip+0x1cffe5ba]        # 0x15d011d67
   1400137ad:	mov    esi,0xa916ffe2
   1400137b2:	retf   0xedff
   1400137b5:	(bad)  
   1400137b6:	(bad)  
   1400137b7:	call   FWORD PTR [rcx-0x1900a296]
   1400137bd:	in     al,0xe2
   1400137bf:	push   QWORD PTR [rcx-0x66005956]
   1400137c5:	push   0x5d
   1400137c7:	inc    DWORD PTR [rax]
	...
   140013805:	add    BYTE PTR [rax],al
   140013807:	add    BYTE PTR [rdx-0x38006a68],bl
   14001380d:	leave  
   14001380e:	retf   
   14001380f:	jmp    QWORD PTR [rdx-0x25008c84]
   140013815:	shr    DWORD PTR [rbp-0x674f3001],0xff
   14001381c:	scas   al,BYTE PTR es:[rdi]
   14001381d:	xchg   BYTE PTR [rbx-0x1],dh
   140013820:	in     al,0xd0
   140013822:	sar    bh,0xe5
   140013825:	rol    al,1
   140013827:	jmp    rsp
   140013829:	rol    al,1
   14001382b:	jmp    rbp
   14001382d:	rol    al,1
   14001382f:	jmp    rbx
   140013831:	iret   
   140013832:	mov    esi,0xbccee2ff
   140013837:	jmp    rax
   140013839:	retf   
   14001383a:	mov    ecx,0xb6c9dfff
   14001383f:	(bad)  
   140013840:	fcmovb st,st(5)
   140013842:	mov    cl,0xff
   140013844:	(bad)  
   140013845:	stos   BYTE PTR es:[rdi],al
   140013846:	retf   
   140013847:	jmp    QWORD PTR [rcx]
   140013849:	enter  0xffec,0x18
   14001384d:	int3   
   14001384e:	cli    
   14001384f:	call   QWORD PTR [rdx+rcx*8]
   140013852:	cld    
   140013853:	call   QWORD PTR [rsi]
   140013855:	fcos   
   140013857:	inc    DWORD PTR [rbx]
   140013859:	cmp    DWORD PTR [rdx-0x1],ecx
   14001385c:	add    al,0x30
   14001385e:	(bad)  
   14001385f:	call   FWORD PTR [rip+0x20ffffe3]        # 0x161013848
   140013865:	xlat   BYTE PTR ds:[rbx]
   140013866:	(bad)  
   140013867:	jmp    QWORD PTR [rip+0x1effffda]        # 0x15f013847
   14001386d:	mov    edi,0xb57fffe0
   140013872:	mov    eax,0xc8d6edff
   140013877:	call   FWORD PTR [rcx-0x1700a296]
   14001387d:	out    0xe4,al
   14001387f:	push   QWORD PTR [rdx-0x66005855]
   140013885:	push   0x5d
   140013887:	inc    DWORD PTR [rax]
	...
   1400138c5:	add    BYTE PTR [rax],al
   1400138c7:	add    BYTE PTR [rax-0x3d004d4b],bh
   1400138cd:	mov    edi,0x7ca254bc
   1400138d2:	jae    0x1400138d3
   1400138d4:	iret   
   1400138d5:	mov    al,0x98
   1400138d7:	call   rax
   1400138d9:	mov    dl,0x9c
   1400138db:	push   QWORD PTR [rdx-0x22008775]
   1400138e1:	(bad)  
   1400138e2:	mov    ah,0xff
   1400138e4:	fcmovb st,st(4)
   1400138e6:	scas   eax,DWORD PTR es:[rdi]
   1400138e7:	call   rdi
   1400138e9:	shr    DWORD PTR [rdi+rdi*8-0x563f2a],0xd5
   1400138f1:	mov    esi,0xbed5ffa8
   1400138f6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400138f7:	call   rbp
   1400138f9:	mov    ebp,0xbcd4ffa6
   1400138fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400138ff:	call   rsi
   140013901:	mov    esi,0xb378ffa8
   140013906:	mov    eax,0xdcbb1eff
   14001390b:	jmp    FWORD PTR [rax]
   14001390d:	(bad)  
   14001390e:	clc    
   14001390f:	jmp    QWORD PTR [rcx]
   140013911:	shl    edi,1
   140013913:	jmp    QWORD PTR [rcx]
   140013915:	fdivp  st(7),st
   140013917:	dec    DWORD PTR [rbx+rdi*1]
   14001391a:	call   QWORD PTR [r11]
   14001391d:	rex.WRB push r15
   14001391f:	jmp    FWORD PTR [rip+0x31ffffe4]        # 0x172013909
   140013925:	fdivp  st(3),st
   140013927:	jmp    FWORD PTR [rdi]
   140013929:	(bad)  
   14001392a:	out    dx,al
   14001392b:	jmp    FWORD PTR [rbx]
   14001392d:	stos   DWORD PTR es:[rdi],eax
   14001392e:	(bad)  
   140013931:	retf   
   140013932:	mov    esp,0xc9d7eeff
   140013937:	call   FWORD PTR [rcx-0x1500a296]
   14001393d:	call   0xecb53928
   140013942:	test   al,0xff
   140013944:	cdq    
   140013945:	push   0x5d
   140013947:	inc    DWORD PTR [rax]
	...
   140013985:	add    BYTE PTR [rax],al
   140013987:	add    dl,al
   140013989:	mov    edi,0x989a5abc
   14001398e:	xchg   ebp,eax
   14001398f:	(bad)  
   140013990:	jg     0x140013a0f
   140013992:	jnp    0x140013993
   140013994:	jbe    0x140013a09
   140013996:	jb     0x140013997
   140013998:	shl    DWORD PTR [rbx-0x704a0063],1
   14001399e:	jge    0x14001399f
   1400139a0:	xlat   BYTE PTR ds:[rbx]
   1400139a1:	shr    BYTE PTR [rdx-0x503b2601],0xff
   1400139a8:	fcmovnb st,st(6)
   1400139aa:	mov    dl,0xff
   1400139ac:	fmulp  st(2),st
   1400139ae:	mov    bh,0xff
   1400139b0:	(bad)  
   1400139b2:	mov    eax,0xbccee1ff
   1400139b7:	jmp    rsp
   1400139b9:	rol    al,cl
   1400139bb:	jmp    rsi
   1400139bd:	rol    edx,cl
   1400139bf:	jmp    rdi
   1400139c1:	rol    edx,cl
   1400139c3:	(bad)  
   1400139c4:	fcmovnbe st,st(1)
   1400139c6:	ret    
   1400139c7:	push   QWORD PTR [rsp+rbp*4]
   1400139ca:	(bad)  
   1400139cb:	jmp    FWORD PTR [rdi]
   1400139cd:	shr    edx,1
   1400139cf:	(bad)  
   1400139d0:	cmp    esp,esi
   1400139d2:	cld    
   1400139d3:	(bad)  
   1400139d4:	cmp    ecx,ebp
   1400139d6:	(bad)  
   1400139d7:	jmp    FWORD PTR [rbx]
   1400139d9:	mov    esi,0xb429ffd5
   1400139de:	leave  
   1400139df:	inc    DWORD PTR [rcx-0xf]
   1400139e2:	(bad)  
   1400139e3:	inc    DWORD PTR [rdx-0x12]
   1400139e6:	(bad)  
   1400139e7:	jmp    QWORD PTR [rsi+rdi*4]
   1400139ea:	fcos   
   1400139ec:	jl     0x1400139a0
   1400139ee:	mov    ch,0xff
   1400139f0:	(bad)  
   1400139f1:	mov    esi,0xd8eeffa6
   1400139f6:	retf   
   1400139f7:	call   FWORD PTR [rcx-0x1300a296]
   1400139fd:	(bad)  
   1400139fe:	call   0xe9aef002
   140013a03:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140013a45:	add    BYTE PTR [rax],al
   140013a47:	add    BYTE PTR [rdx-0x38006a68],bl
   140013a4d:	leave  
   140013a4e:	retf   
   140013a4f:	jmp    QWORD PTR [rdx-0x25008c84]
   140013a55:	shr    DWORD PTR [rbp-0x604a2d01],0xff
   140013a5c:	mov    bh,0x93
   140013a5e:	cmp    bh,0xe8
   140013a61:	(bad)  
   140013a62:	(bad)  
   140013a63:	(bad)  
   140013a64:	call   0x129010240
   140013a69:	(bad)  
   140013a6a:	(bad)  
   140013a6b:	jmp    rsi
   140013a6d:	rol    ebx,cl
   140013a6f:	jmp    rsp
   140013a71:	rol    eax,1
   140013a73:	jmp    rcx
   140013a75:	(bad)  
   140013a76:	mov    ebx,0xb8cce0ff
   140013a7b:	(bad)  
   140013a7c:	fmulp  st(1),st
   140013a7e:	mov    ch,0xff
   140013a80:	fadd   st(7),st
   140013a82:	mov    cl,0xff
   140013a84:	fcmovb st,st(5)
   140013a86:	mov    al,0xff
   140013a88:	mov    esi,DWORD PTR [rdi-0x4be00049]
   140013a8e:	sar    edi,1
   140013a90:	rex.WR
   140013a91:	repz std 
   140013a93:	call   QWORD PTR [rsi-0x1]
   140013a96:	(bad)  
   140013a97:	dec    DWORD PTR [rsi+rbx*1]
   140013a9a:	sbb    eax,0x171708ff
   140013a9f:	call   QWORD PTR [rdi+rdi*8-0x1]
   140013aa3:	inc    DWORD PTR [rax-0x1b]
   140013aa6:	cmc    
   140013aa7:	call   FWORD PTR [rdi]
   140013aa9:	test   al,0xc7
   140013aab:	dec    ebp
   140013aad:	ret    0xffb1
   140013ab0:	faddp  st(6),st
   140013ab2:	mov    dl,0xff
   140013ab4:	out    dx,al
   140013ab5:	fxch   st(4)
   140013ab7:	call   FWORD PTR [rcx-0x1100a296]
   140013abd:	in     al,dx
   140013abe:	(bad)  
   140013abf:	push   QWORD PTR [rsi-0x66005652]
   140013ac5:	push   0x5d
   140013ac7:	inc    DWORD PTR [rax]
	...
   140013b05:	add    BYTE PTR [rax],al
   140013b07:	add    BYTE PTR [rax-0x3d004d4b],bh
   140013b0d:	mov    edi,0x7ca254bc
   140013b12:	jae    0x140013b13
   140013b14:	iret   
   140013b15:	mov    al,0x98
   140013b17:	call   rbx
   140013b19:	mov    bh,0xa3
   140013b1b:	(bad)  
   140013b1c:	mov    edx,0xddff8298
   140013b21:	enter  0xffb4,0xd8
   140013b25:	ret    0xffab
   140013b28:	fadd   st,st(1)
   140013b2a:	stos   BYTE PTR es:[rdi],al
   140013b2b:	(bad)  
   140013b2c:	fld    st(2)
   140013b2e:	lods   al,BYTE PTR ds:[rsi]
   140013b2f:	(bad)  
   140013b30:	fld    st(4)
   140013b32:	scas   al,BYTE PTR es:[rdi]
   140013b33:	(bad)  
   140013b34:	fcmovnb st,st(6)
   140013b36:	mov    al,0xff
   140013b38:	fadd   st(7),st
   140013b3a:	mov    dl,0xff
   140013b3c:	fmul   st(0),st
   140013b3e:	mov    bl,0xff
   140013b40:	(bad)  
   140013b42:	mov    ch,0xff
   140013b44:	(bad)  
   140013b46:	mov    dh,0xff
   140013b48:	xlat   BYTE PTR ds:[rbx]
   140013b49:	leave  
   140013b4a:	mov    edx,0xc4a930ff
   140013b4f:	push   QWORD PTR [rip+0x62ffe7d3]        # 0x1a3012328
   140013b55:	(bad)  
   140013b56:	(bad)  
   140013b57:	inc    DWORD PTR [rbx]
   140013b59:	add    al,BYTE PTR [rcx]
   140013b5b:	inc    DWORD PTR [rax]
   140013b5d:	add    BYTE PTR [rax],al
   140013b5f:	call   FWORD PTR [rsi-0x1]
   140013b62:	(bad)  
   140013b63:	jmp    FWORD PTR [rax]
   140013b65:	ret    0xffdc
   140013b68:	xchg   BYTE PTR [rbx+rax*8-0x3e2d1901],bh
   140013b6f:	jmp    rsi
   140013b71:	rol    al,cl
   140013b73:	(bad)  
   140013b74:	out    dx,al
   140013b75:	fcmove st,st(5)
   140013b77:	call   FWORD PTR [rcx-0x1000a296]
   140013b7d:	in     eax,dx
   140013b7e:	jmp    0x140013b7f
   140013b80:	mov    bh,0xaf
   140013b82:	stos   BYTE PTR es:[rdi],al
   140013b83:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140013bc5:	add    BYTE PTR [rax],al
   140013bc7:	add    dl,al
   140013bc9:	mov    edi,0x989a5abc
   140013bce:	xchg   ebp,eax
   140013bcf:	(bad)  
   140013bd0:	jg     0x140013c4f
   140013bd2:	jnp    0x140013bd3
   140013bd4:	jbe    0x140013c49
   140013bd6:	jb     0x140013bd7
   140013bd8:	(bad)  
   140013bd9:	mov    ecx,0x98baffa5
   140013bde:	(bad)  
   140013bdf:	jmp    rsp
   140013be1:	rol    al,1
   140013be3:	jmp    rbp
   140013be5:	rol    ebx,cl
   140013be7:	jmp    rdi
   140013be9:	(bad)  
   140013bea:	(bad)  
   140013beb:	(bad)  
   140013bec:	call   0x1290104c7
   140013bf1:	(bad)  
   140013bf2:	(bad)  
   140013bf3:	(bad)  
   140013bf4:	call   0x12b0105d0
   140013bf9:	fxch   st(1)
   140013bfb:	(bad)  
   140013bfc:	jmp    0x12b0106da
   140013c01:	fxch   st(2)
   140013c03:	(bad)  
   140013c04:	jmp    0x140013bdf
   140013c06:	retf   0xeaff
   140013c09:	fxch   st(1)
   140013c0b:	push   QWORD PTR [rbp+0x18ffc8cb]
   140013c11:	scas   eax,DWORD PTR es:[rdi]
   140013c12:	sar    edi,1
   140013c14:	pop    rax
   140013c15:	std    
   140013c16:	(bad)  
   140013c17:	dec    DWORD PTR [rsi]
   140013c19:	sbb    al,0x1b
   140013c1b:	call   QWORD PTR [rcx]
   140013c1d:	sub    BYTE PTR [rcx],ch
   140013c1f:	call   QWORD PTR [rcx-0x9]
   140013c22:	std    
   140013c23:	jmp    QWORD PTR [rdx+rbp*4]
   140013c26:	enter  0xd7ff,0xc7
   140013c2a:	mov    bl,0xff
   140013c2c:	fcmovb st,st(6)
   140013c2e:	scas   eax,DWORD PTR es:[rdi]
   140013c2f:	(bad)  
   140013c30:	fcmovnb st,st(5)
   140013c32:	lods   eax,DWORD PTR ds:[rsi]
   140013c33:	(bad)  
   140013c34:	out    dx,eax
   140013c35:	fcmovne st,st(7)
   140013c37:	call   FWORD PTR [rcx-0xe00a296]
   140013c3d:	out    dx,eax
   140013c3e:	in     eax,dx
   140013c3f:	(bad)  
   140013c40:	mov    eax,0x99ffabb0
   140013c45:	push   0x5d
   140013c47:	inc    DWORD PTR [rax]
	...
   140013c85:	add    BYTE PTR [rax],al
   140013c87:	add    BYTE PTR [rdx-0x3a006a68],bl
   140013c8d:	mov    dh,0xff
   140013c90:	movabs ds:0xd6ffadc1daff737c,al
   140013c99:	mov    ebx,0x98baffa8
   140013c9e:	(bad)  
   140013c9f:	(bad)  
   140013ca0:	in     al,dx
   140013ca1:	fmul   st(6),st
   140013ca3:	(bad)  
   140013ca4:	jmp    0x140013c81
   140013ca6:	int3   
   140013ca7:	(bad)  
   140013ca8:	jmp    0x140013c85
   140013caa:	int3   
   140013cab:	(bad)  
   140013cac:	jmp    0x12701068a
   140013cb1:	(bad)  
   140013cb2:	(bad)  
   140013cb3:	jmp    rsp
   140013cb5:	(bad)  
   140013cb6:	ret    
   140013cb7:	jmp    rdx
   140013cb9:	sar    BYTE PTR [rbp-0x432f1d01],1
   140013cbf:	jmp    rax
   140013cc1:	int    0xba
   140013cc3:	(bad)  
   140013cc4:	(bad)  
   140013cc6:	mov    eax,0xb5cbddff
   140013ccb:	(bad)  
   140013ccc:	fcmove st,st(1)
   140013cce:	mov    dl,0xff
   140013cd0:	stos   QWORD PTR es:[rdi],rax
   140013cd2:	mov    edi,0xedd635ff
   140013cd7:	dec    DWORD PTR [rbx-0x36]
   140013cda:	int3   
   140013cdb:	call   QWORD PTR [rax-0x29]
   140013cde:	xlat   BYTE PTR ds:[rbx]
   140013cdf:	jmp    FWORD PTR [rip+0x7fffe7ce]        # 0x1c00124b3
   140013ce5:	mov    dh,0xba
   140013ce7:	(bad)  
   140013ce8:	fcmovnb st,st(7)
   140013cea:	mov    cl,0xff
   140013cec:	fmul   st(0),st
   140013cee:	mov    bl,0xff
   140013cf0:	fmulp  st(1),st
   140013cf2:	mov    bl,0xff
   140013cf4:	out    dx,eax
   140013cf5:	(bad)  
   140013cf7:	call   FWORD PTR [rcx-0xc00a296]
   140013cfd:	icebp  
   140013cfe:	out    dx,eax
   140013cff:	(bad)  
   140013d00:	mov    ecx,0x99ffabb1
   140013d05:	push   0x5d
   140013d07:	inc    DWORD PTR [rax]
	...
   140013d45:	add    BYTE PTR [rax],al
   140013d47:	add    BYTE PTR [rax-0x3d004d4b],bh
   140013d4d:	mov    edi,0x7ca254bc
   140013d52:	jae    0x140013d53
   140013d54:	iret   
   140013d55:	mov    al,0x98
   140013d57:	call   rsi
   140013d59:	mov    ebp,0x98baffab
   140013d5e:	(bad)  
   140013d5f:	(bad)  
   140013d60:	(bad)  
   140013d62:	mov    dh,0xff
   140013d64:	fmul   st(0),st
   140013d66:	mov    dl,0xff
   140013d68:	fcmovnb st,st(7)
   140013d6a:	mov    al,0xff
   140013d6c:	fcmovne st,st(0)
   140013d6e:	mov    dl,0xff
   140013d70:	(bad)  
   140013d72:	mov    ch,0xff
   140013d74:	fmulp  st(3),st
   140013d76:	mov    bh,0xff
   140013d78:	(bad)  
   140013d7a:	mov    ecx,0xb8ccdfff
   140013d7f:	jmp    rax
   140013d81:	(bad)  
   140013d82:	mov    ebx,0xbccfe1ff
   140013d87:	jmp    rdx
   140013d89:	sar    BYTE PTR [rbp-0x3e2d1b01],1
   140013d8f:	inc    ecx
   140013d91:	int3   
   140013d92:	(bad)  
   140013d93:	call   QWORD PTR [rdi]
   140013d95:	test   eax,0xff57ffca
   140013d9a:	(bad)  
   140013d9b:	call   FWORD PTR [rcx-0x1]
   140013d9e:	(bad)  
   140013d9f:	jmp    QWORD PTR [rip+0xffffffffe0ffc9aa]        # 0x12101074f
   140013da5:	(bad)  
   140013da6:	(bad)  
   140013da7:	(bad)  
   140013da8:	jmp    0x12a010484
   140013dad:	(bad)  
   140013dae:	(bad)  
   140013db1:	xlat   BYTE PTR ds:[rbx]
   140013db2:	(bad)  
   140013db5:	(bad)  
   140013db7:	call   FWORD PTR [rcx-0xb00a296]
   140013dbd:	repnz lock (bad) 
   140013dc0:	mov    edx,0x99ffacb1
   140013dc5:	push   0x5d
   140013dc7:	inc    DWORD PTR [rax]
	...
   140013e05:	add    BYTE PTR [rax],al
   140013e07:	add    dl,al
   140013e09:	mov    edi,0x989a5abc
   140013e0e:	xchg   ebp,eax
   140013e0f:	(bad)  
   140013e10:	jg     0x140013e8f
   140013e12:	jnp    0x140013e13
   140013e14:	jbe    0x140013e89
   140013e16:	jb     0x140013e17
   140013e18:	xlat   BYTE PTR ds:[rbx]
   140013e19:	mov    esi,0x98baffad
   140013e1e:	(bad)  
   140013e1f:	(bad)  
   140013e20:	call   0x12a0105fc
   140013e25:	fxch   st(1)
   140013e27:	(bad)  
   140013e28:	jmp    0x140013e05
   140013e2a:	(bad)  
   140013e2b:	(bad)  
   140013e2c:	jmp    0x140013e0a
   140013e2e:	iret   
   140013e2f:	(bad)  
   140013e30:	in     al,dx
   140013e31:	(bad)  
   140013e33:	(bad)  
   140013e34:	in     eax,dx
   140013e35:	(bad)  
   140013e37:	(bad)  
   140013e38:	out    dx,al
   140013e39:	(bad)  
   140013e3b:	(bad)  
   140013e3c:	out    dx,al
   140013e3d:	(bad)  
   140013e3f:	(bad)  
   140013e40:	out    dx,al
   140013e41:	(bad)  
   140013e43:	(bad)  
   140013e44:	in     eax,dx
   140013e45:	(bad)  
   140013e47:	(bad)  
   140013e48:	in     eax,dx
   140013e49:	(bad)  
   140013e4b:	(bad)  
   140013e4c:	in     al,dx
   140013e4d:	fcmovne st,st(6)
   140013e4f:	(bad)  
   140013e50:	in     al,dx
   140013e51:	fcmovne st,st(4)
   140013e53:	jmp    QWORD PTR [rdi-0x48]
   140013e56:	(bad)  
   140013e57:	jmp    FWORD PTR [rsi+rax*8]
   140013e5a:	fdivp  st(7),st
   140013e5c:	cs retf 
   140013e5e:	(bad)  
   140013e60:	(bad)  
   140013e61:	mov    esp,0xd0e2ffc2
   140013e66:	mov    ebp,0xbbcde1ff
   140013e6b:	jmp    rax
   140013e6d:	int    0xb8
   140013e6f:	jmp    rcx
   140013e71:	int    0xb9
   140013e73:	(bad)  
   140013e74:	out    dx,eax
   140013e75:	fst    st(2)
   140013e77:	call   FWORD PTR [rcx-0x900a296]
   140013e7d:	hlt    
   140013e7e:	repnz (bad) 
   140013e80:	mov    ebx,0x99ffacb2
   140013e85:	push   0x5d
   140013e87:	inc    DWORD PTR [rax]
	...
   140013ec5:	add    BYTE PTR [rax],al
   140013ec7:	add    BYTE PTR [rdx-0x38006a68],bl
   140013ecd:	leave  
   140013ece:	retf   
   140013ecf:	jmp    QWORD PTR [rdx-0x25008c84]
   140013ed5:	shr    DWORD PTR [rbp-0x51402701],0xff
   140013edc:	mov    edx,0xeeff8298
   140013ee1:	loopne 0x140013eb6
   140013ee3:	(bad)  
   140013ee4:	out    dx,al
   140013ee5:	(bad)  
   140013ee7:	(bad)  
   140013ee8:	jmp    0x140013ec8
   140013eea:	sar    bh,1
   140013eec:	(bad)  
   140013eed:	fmul   st(6),st
   140013eef:	jmp    rdi
   140013ef1:	xlat   BYTE PTR ds:[rbx]
   140013ef2:	(bad)  
   140013ef3:	jmp    rsi
   140013ef5:	xlat   BYTE PTR ds:[rbx]
   140013ef6:	(bad)  
   140013ef7:	jmp    rsi
   140013ef9:	(bad)  
   140013efa:	(bad)  
   140013efb:	jmp    rbp
   140013efd:	(bad)  
   140013efe:	ret    
   140013eff:	jmp    rsp
   140013f01:	rol    edx,cl
   140013f03:	jmp    rdx
   140013f05:	sar    BYTE PTR [rbp-0x43311e01],1
   140013f0b:	(bad)  
   140013f0c:	fmulp  st(4),st
   140013f0e:	mov    bh,0xff
   140013f10:	fmul   st(2),st
   140013f12:	mov    ch,0xff
   140013f14:	mov    ebp,0x33ffb6c3
   140013f19:	stos   DWORD PTR es:[rdi],eax
   140013f1a:	(bad)  
   140013f1d:	mov    cl,0xc4
   140013f1f:	dec    edi
   140013f21:	(bad)  
   140013f22:	mov    ch,0xff
   140013f24:	fmul   st(1),st
   140013f26:	mov    ch,0xff
   140013f28:	fmul   st(0),st
   140013f2a:	mov    bl,0xff
   140013f2c:	(bad)  
   140013f2e:	mov    ah,0xff
   140013f30:	fmulp  st(1),st
   140013f32:	mov    bl,0xff
   140013f34:	lock (bad) 
   140013f37:	call   FWORD PTR [rcx-0x800a296]
   140013f3d:	cmc    
   140013f3e:	repz (bad) 
   140013f40:	mov    ebx,0x99ffadb3
   140013f45:	push   0x5d
   140013f47:	inc    DWORD PTR [rax]
	...
   140013f85:	add    BYTE PTR [rax],al
   140013f87:	add    BYTE PTR [rax-0x3d004d4b],bh
   140013f8d:	mov    edi,0x7ca254bc
   140013f92:	jae    0x140013f93
   140013f94:	iret   
   140013f95:	mov    al,0x98
   140013f97:	(bad)  
   140013f98:	fadd   st,st(0)
   140013f9a:	mov    al,0xff
   140013f9c:	mov    edx,0xdfff8298
   140013fa1:	(bad)  
   140013fa2:	mov    edx,0xb8cbdeff
   140013fa7:	(bad)  
   140013fa8:	(bad)  
   140013faa:	mov    bh,0xff
   140013fac:	fmulp  st(4),st
   140013fae:	mov    eax,0xbbcee0ff
   140013fb3:	jmp    rax
   140013fb5:	iret   
   140013fb6:	mov    ebx,0xbccfe0ff
   140013fbb:	jmp    rcx
   140013fbd:	sar    DWORD PTR [rbp-0x422f1e01],1
   140013fc3:	jmp    rbx
   140013fc5:	rol    eax,cl
   140013fc7:	jmp    rsp
   140013fc9:	(bad)  
   140013fca:	ret    0xe6ff
   140013fcd:	(bad)  
   140013fce:	(bad)  
   140013fcf:	(bad)  
   140013fd0:	call   0x12a0106ad
   140013fd5:	fmul   st,st(0)
   140013fd7:	(bad)  
   140013fd8:	(bad)  
   140013fd9:	fxch   st(1)
   140013fdb:	(bad)  
   140013fdc:	jmp    0x1290107ba
   140013fe1:	xlat   BYTE PTR ds:[rbx]
   140013fe2:	(bad)  
   140013fe3:	(bad)  
   140013fe4:	call   0x1290107c0
   140013fe9:	fadd   st,st(7)
   140013feb:	(bad)  
   140013fec:	(bad)  
   140013fed:	fxch   st(0)
   140013fef:	(bad)  
   140013ff0:	jmp    0x140013fcc
   140013ff2:	leave  
   140013ff3:	push   rax
   140013ff5:	(bad)  
   140013ff7:	call   FWORD PTR [rcx-0x700a296]
   140013ffd:	div    ah
   140013fff:	(bad)  
   140014000:	mov    esp,0x99ffadb3
   140014005:	push   0x5d
   140014007:	inc    DWORD PTR [rax]
	...
   140014045:	add    BYTE PTR [rax],al
   140014047:	add    dl,al
   140014049:	mov    edi,0x989a5abc
   14001404e:	xchg   ebp,eax
   14001404f:	(bad)  
   140014050:	jg     0x1400140cf
   140014052:	jnp    0x140014053
   140014054:	jbe    0x1400140c9
   140014056:	jb     0x140014057
   140014058:	fld    st(1)
   14001405a:	mov    al,0xff
   14001405c:	mov    edx,0xecff8298
   140014061:	fmulp  st(7),st
   140014063:	(bad)  
   140014064:	in     al,dx
   140014065:	(bad)  
   140014067:	(bad)  
   140014068:	in     eax,dx
   140014069:	loopne 0x14001403d
   14001406b:	(bad)  
   14001406c:	out    dx,al
   14001406d:	(bad)  
   14001406f:	(bad)  
   140014070:	out    dx,al
   140014071:	loopne 0x140014045
   140014073:	(bad)  
   140014074:	out    dx,al
   140014075:	loopne 0x14001404b
   140014077:	push   rax
   140014079:	loope  0x140014050
   14001407b:	push   rax
   14001407d:	loop   0x140014055
   14001407f:	(bad)  
   140014080:	out    dx,eax
   140014081:	loop   0x140014058
   140014083:	(bad)  
   140014084:	out    dx,eax
   140014085:	loop   0x14001405b
   140014087:	(bad)  
   140014088:	out    dx,al
   140014089:	loopne 0x14001405d
   14001408b:	(bad)  
   14001408c:	in     eax,dx
   14001408d:	(bad)  
   14001408f:	(bad)  
   140014090:	in     eax,dx
   140014091:	fmulp  st(7),st
   140014093:	(bad)  
   140014094:	in     eax,dx
   140014095:	(bad)  
   140014097:	(bad)  
   140014098:	out    dx,al
   140014099:	fmulp  st(7),st
   14001409b:	(bad)  
   14001409c:	in     eax,dx
   14001409d:	(bad)  
   14001409f:	(bad)  
   1400140a0:	in     al,dx
   1400140a1:	fmul   st(4),st
   1400140a3:	(bad)  
   1400140a4:	in     al,dx
   1400140a5:	fmul   st(4),st
   1400140a7:	(bad)  
   1400140a8:	in     al,dx
   1400140a9:	fmul   st(4),st
   1400140ab:	(bad)  
   1400140ac:	in     al,dx
   1400140ad:	fmul   st(4),st
   1400140af:	(bad)  
   1400140b0:	in     al,dx
   1400140b1:	fmul   st(4),st
   1400140b3:	push   rax
   1400140b5:	(bad)  
   1400140b7:	call   FWORD PTR [rcx-0x600a296]
   1400140bd:	div    ebp
   1400140bf:	(bad)  
   1400140c0:	mov    esp,0x99ffadb3
   1400140c5:	push   0x5d
   1400140c7:	inc    DWORD PTR [rax]
	...
   140014105:	add    BYTE PTR [rax],al
   140014107:	add    BYTE PTR [rdx-0x38006a68],bl
   14001410d:	leave  
   14001410e:	retf   
   14001410f:	jmp    QWORD PTR [rdx-0x25008c84]
   140014115:	shr    DWORD PTR [rbp-0x4e3e2601],0xff
   14001411c:	mov    edx,0xefff8298
   140014121:	loop   0x1400140f9
   140014123:	(bad)  
   140014124:	out    dx,eax
   140014125:	loop   0x1400140fc
   140014127:	push   rax
   140014129:	jrcxz  0x140014102
   14001412b:	push   rcx
   14001412d:	jrcxz  0x140014106
   14001412f:	push   rax
   140014131:	jrcxz  0x14001410a
   140014133:	push   rax
   140014135:	loop   0x14001410d
   140014137:	(bad)  
   140014138:	out    dx,eax
   140014139:	loop   0x140014111
   14001413b:	(bad)  
   14001413c:	out    dx,eax
   14001413d:	loope  0x140014113
   14001413f:	(bad)  
   140014140:	out    dx,al
   140014141:	loope  0x140014116
   140014143:	(bad)  
   140014144:	in     eax,dx
   140014145:	(bad)  
   140014147:	(bad)  
   140014148:	in     eax,dx
   140014149:	(bad)  
   14001414b:	(bad)  
   14001414c:	in     eax,dx
   14001414d:	(bad)  
   14001414f:	(bad)  
   140014150:	in     eax,dx
   140014151:	(bad)  
   140014153:	(bad)  
   140014154:	in     eax,dx
   140014155:	(bad)  
   140014157:	(bad)  
   140014158:	in     al,dx
   140014159:	fmul   st(4),st
   14001415b:	(bad)  
   14001415c:	in     al,dx
   14001415d:	fmul   st(4),st
   14001415f:	(bad)  
   140014160:	in     al,dx
   140014161:	fmul   st(4),st
   140014163:	(bad)  
   140014164:	in     al,dx
   140014165:	fmul   st(4),st
   140014167:	(bad)  
   140014168:	in     al,dx
   140014169:	fmul   st(4),st
   14001416b:	(bad)  
   14001416c:	in     al,dx
   14001416d:	fmul   st(4),st
   14001416f:	(bad)  
   140014170:	in     al,dx
   140014171:	fmul   st(4),st
   140014173:	push   rax
   140014175:	(bad)  
   140014177:	call   FWORD PTR [rcx-0x500a296]
   14001417d:	clc    
   14001417e:	idiv   bh
   140014180:	mov    esp,0x99ffadb3
   140014185:	push   0x5d
   140014187:	inc    DWORD PTR [rax]
	...
   1400141c5:	add    BYTE PTR [rax],al
   1400141c7:	add    BYTE PTR [rax-0x3d004d4b],bh
   1400141cd:	mov    edi,0x7ca254bc
   1400141d2:	jae    0x1400141d3
   1400141d4:	iret   
   1400141d5:	mov    al,0x98
   1400141d7:	(bad)  
   1400141d8:	fld    st(1)
   1400141da:	mov    cl,0xff
   1400141dc:	mov    edx,0xf0ff8298
   1400141e1:	in     al,0xd7
   1400141e3:	(bad)  
   1400141e4:	out    dx,eax
   1400141e5:	loop   0x1400141bc
   1400141e7:	(bad)  
   1400141e8:	out    dx,eax
   1400141e9:	loope  0x1400141bf
   1400141eb:	(bad)  
   1400141ec:	out    dx,eax
   1400141ed:	loope  0x1400141c3
   1400141ef:	(bad)  
   1400141f0:	out    dx,eax
   1400141f1:	loope  0x1400141c7
   1400141f3:	(bad)  
   1400141f4:	out    dx,eax
   1400141f5:	loope  0x1400141cb
   1400141f7:	(bad)  
   1400141f8:	out    dx,eax
   1400141f9:	loope  0x1400141cf
   1400141fb:	(bad)  
   1400141fc:	out    dx,eax
   1400141fd:	loope  0x1400141d3
   1400141ff:	(bad)  
   140014200:	in     eax,dx
   140014201:	fmulp  st(7),st
   140014203:	(bad)  
   140014204:	jmp    0x1400141e2
   140014206:	int    0xff
   140014208:	in     eax,dx
   140014209:	(bad)  
   14001420b:	(bad)  
   14001420c:	in     eax,dx
   14001420d:	(bad)  
   14001420f:	(bad)  
   140014210:	in     al,dx
   140014211:	fmul   st(5),st
   140014213:	(bad)  
   140014214:	in     al,dx
   140014215:	(bad)  
   140014217:	(bad)  
   140014218:	in     eax,dx
   140014219:	(bad)  
   14001421b:	(bad)  
   14001421c:	out    dx,al
   14001421d:	fmulp  st(7),st
   14001421f:	(bad)  
   140014220:	out    dx,eax
   140014221:	(bad)  
   140014223:	push   rax
   140014225:	loopne 0x1400141fa
   140014227:	push   rax
   140014229:	loope  0x1400141ff
   14001422b:	(bad)  
   14001422c:	out    dx,eax
   14001422d:	loopne 0x140014201
   14001422f:	(bad)  
   140014230:	in     al,dx
   140014231:	fmul   st(6),st
   140014233:	(bad)  
   140014234:	mov    ebx,0xbfff8998
   140014239:	mov    bh,0xb7
   14001423b:	(bad)  
   14001423c:	cli    
   14001423d:	clc    
   14001423e:	idiv   bh
   140014240:	mov    esp,0x99ffadb3
   140014245:	push   0x5d
   140014247:	inc    DWORD PTR [rax]
	...
   140014285:	add    BYTE PTR [rax],al
   140014287:	add    dl,al
   140014289:	mov    edi,0x989a5abc
   14001428e:	xchg   ebp,eax
   14001428f:	(bad)  
   140014290:	jg     0x14001430f
   140014292:	jnp    0x140014293
   140014294:	jbe    0x140014309
   140014296:	jb     0x140014297
   140014298:	fld    st(1)
   14001429a:	mov    cl,0xff
   14001429c:	mov    edx,0xedff8298
   1400142a1:	fmulp  st(7),st
   1400142a3:	(bad)  
   1400142a4:	out    dx,al
   1400142a5:	(bad)  
   1400142a7:	(bad)  
   1400142a8:	out    dx,al
   1400142a9:	loopne 0x14001427c
   1400142ab:	(bad)  
   1400142ac:	out    dx,al
   1400142ad:	(bad)  
   1400142af:	(bad)  
   1400142b0:	out    dx,al
   1400142b1:	(bad)  
   1400142b3:	(bad)  
   1400142b4:	out    dx,eax
   1400142b5:	loopne 0x140014288
   1400142b7:	(bad)  
   1400142b8:	out    dx,eax
   1400142b9:	loopne 0x14001428d
   1400142bb:	(bad)  
   1400142bc:	in     eax,dx
   1400142bd:	(bad)  
   1400142bf:	push   rax
   1400142c1:	loope  0x140014297
   1400142c3:	push   rax
   1400142c5:	loope  0x14001429b
   1400142c7:	(bad)  
   1400142c8:	in     eax,dx
   1400142c9:	fmul   st(6),st
   1400142cb:	(bad)  
   1400142cc:	in     al,dx
   1400142cd:	fcmove st,st(4)
   1400142cf:	jmp    rbp
   1400142d1:	rol    edx,1
   1400142d3:	jmp    rdx
   1400142d5:	(bad)  
   1400142d6:	mov    edi,0xb1c1d9ff
   1400142db:	call   rsp
   1400142dd:	mov    ecx,0xa8c7ffaa
   1400142e2:	cwde   
   1400142e3:	inc    edx
   1400142e5:	movabs al,ds:0x8bb3ff7c8db4ff8f
   1400142ee:	jp     0x1400142ef
   1400142f0:	mov    edx,0xbfff8595
   1400142f5:	mov    bh,0xb7
   1400142f7:	(bad)  
   1400142f8:	out    dx,al
   1400142f9:	in     al,dx
   1400142fa:	(bad)  
   1400142fb:	(bad)  
   1400142fc:	sti    
   1400142fd:	cld    
   1400142fe:	cld    
   1400142ff:	(bad)  
   140014300:	mov    ebx,0x99ffacb2
   140014305:	push   0x5d
   140014307:	inc    DWORD PTR [rax]
	...
   140014345:	add    BYTE PTR [rax],al
   140014347:	add    BYTE PTR [rdx-0x38006a68],bl
   14001434d:	leave  
   14001434e:	retf   
   14001434f:	jmp    QWORD PTR [rdx-0x25008c84]
   140014355:	shr    DWORD PTR [rbp-0x4e3e2601],0xff
   14001435c:	mov    edx,0xeeff8298
   140014361:	(bad)  
   140014363:	(bad)  
   140014364:	in     eax,dx
   140014365:	fmul   st(7),st
   140014367:	jmp    rsi
   140014369:	rol    ch,cl
   14001436b:	jmp    rsp
   14001436d:	rol    dl,1
   14001436f:	(bad)  
   140014370:	fdivr  DWORD PTR [rdi-0x4128004f]
   140014376:	scas   eax,DWORD PTR es:[rdi]
   140014377:	inc    edi
   140014379:	test   al,0x99
   14001437b:	inc    ebp
   14001437d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001437e:	xchg   esi,eax
   14001437f:	push   QWORD PTR [rbp+rcx*4-0x744c0084]
   140014386:	jp     0x140014387
   140014388:	mov    ecx,0xbeff8696
   14001438d:	pushf  
   14001438e:	mov    ?,edi
   140014390:	iret   
   140014391:	mov    ecx,0xbbd0ffaf
   140014396:	mov    cl,0xff
   140014398:	(bad)  
   14001439a:	int    0xff
   14001439c:	(bad)  
   14001439e:	(bad)  
   14001439f:	jmp    rbp
   1400143a1:	in     eax,0xe5
   1400143a3:	(bad)  
   1400143a4:	(bad)  
   1400143a6:	(bad)  
   1400143a8:	in     eax,dx
   1400143a9:	in     eax,dx
   1400143aa:	in     eax,dx
   1400143ab:	push   rbx
   1400143ad:	repz repz (bad) 
   1400143b0:	sti    
   1400143b1:	sti    
   1400143b2:	sti    
   1400143b3:	(bad)  
   1400143b4:	(bad)  
   1400143b5:	(bad)  
   1400143b6:	(bad)  
   1400143b7:	(bad)  
   1400143b8:	sti    
   1400143b9:	cld    
   1400143ba:	cld    
   1400143bb:	push   rbp
   1400143bd:	repz bnd call rbp
   1400143c1:	retf   0xffc3
   1400143c4:	cdq    
   1400143c5:	push   0x5d
   1400143c7:	int3   
	...
   140014408:	mov    eax,0xc2ffb2b5
   14001440d:	mov    edi,0x7ca254bc
   140014412:	jae    0x140014413
   140014414:	mov    ebx,0xb4ff8596
   140014419:	lea    edi,[rbp-0x1]
   14001441c:	mov    bl,0x8b
   14001441e:	jp     0x14001441f
   140014420:	mov    ecx,0xc5ff8796
   140014425:	test   eax,0xb7ccff9e
   14001442a:	lods   eax,DWORD PTR ds:[rsi]
   14001442b:	call   rsi
   14001442d:	(bad)
   140014430:	(bad)  
   140014432:	sar    bh,1
   140014434:	loope  0x140014417
   140014436:	loope  0x140014437
   140014438:	in     al,0xe4
   14001443a:	in     al,0xff
   14001443c:	jmp    0x140014429
   14001443e:	jmp    0x14001443f
   140014440:	cmc    
   140014441:	cmc    
   140014442:	cmc    
   140014443:	(bad)  
   140014444:	stc    
   140014445:	stc    
   140014446:	stc    
   140014447:	(bad)  
   140014448:	(bad)  
   140014449:	(bad)  
   14001444a:	(bad)  
   14001444b:	(bad)  
   14001444c:	(bad)  
   14001444d:	(bad)  
   14001444e:	(bad)  
   14001444f:	(bad)  
   140014450:	cli    
   140014451:	cli    
   140014452:	cli    
   140014453:	push   rsi
   140014455:	div    dh
   140014457:	(bad)  
   140014458:	in     eax,dx
   140014459:	in     eax,dx
   14001445a:	in     eax,dx
   14001445b:	push   rcx
   14001445d:	jmp    0x140014448
   14001445f:	int    0xde
   140014461:	iret   
   140014462:	retf   0xd9b8
   140014465:	mov    ebx,0xa9b0c9a3
   14001446b:	mov    ?,WORD PTR [rbx-0x59676b64]
   140014471:	jge    0x1400144e5
   140014473:	movabs eax,ds:0xa85d6a99995d6a99
   14001447c:	cdq    
   14001447d:	push   0x5d
   14001447f:	int3   
   140014480:	cdq    
   140014481:	push   0x5d
   140014483:	int3   
   140014484:	cdq    
   140014485:	push   0x5d
   140014487:	xor    eax,DWORD PTR [rax]
	...
   1400144c5:	add    BYTE PTR [rax],al
   1400144c7:	add    dl,al
   1400144c9:	mov    edi,0x989a5abc
   1400144ce:	xchg   ebp,eax
   1400144cf:	(bad)  
   1400144d0:	jg     0x14001454f
   1400144d2:	jnp    0x1400144d3
   1400144d4:	shl    BYTE PTR [rsi-0x332b0050],0xc9
   1400144db:	(bad)  
   1400144dc:	(bad)  
   1400144dd:	(bad)  
   1400144de:	(bad)  
   1400144df:	(bad)  
   1400144e0:	(bad)  
   1400144e1:	(bad)  
   1400144e2:	(bad)  
   1400144e3:	push   rdi
   1400144e5:	hlt    
   1400144e6:	hlt    
   1400144e7:	push   rbx
   1400144e9:	lock out dx,eax
   1400144eb:	(bad)  
   1400144ec:	(bad)  
   1400144ed:	in     al,0xe2
   1400144ef:	jmp    rbx
   1400144f1:	xlat   BYTE PTR ds:[rbx]
   1400144f2:	(bad)  
   1400144f3:	(bad)  
   1400144f4:	fld    st(7)
   1400144f6:	ret    
   1400144f7:	int    0xcd
   1400144f9:	mov    ch,0xaf
   1400144fb:	leave  
   1400144fc:	shl    BYTE PTR [rbx-0x714e2265],0x84
   140014503:	(bad)  
   140014504:	stos   DWORD PTR es:[rdi],eax
   140014505:	test   DWORD PTR [rdx-0x2a],edi
   140014508:	cdq    
   140014509:	push   0x5d
   14001450b:	call   FWORD PTR [rcx-0x6600a296]
   140014511:	push   0x5d
   140014513:	call   FWORD PTR [rcx-0x662aa296]
   140014519:	push   0x5d
   14001451b:	int3   
   14001451c:	cdq    
   14001451d:	push   0x5d
   14001451f:	int3   
   140014520:	cdq    
   140014521:	push   0x5d
   140014523:	stos   DWORD PTR es:[rdi],eax
   140014524:	cdq    
   140014525:	push   0x5d
   140014527:	cdq    
   140014528:	cdq    
   140014529:	push   0x5d
   14001452b:	cdq    
   14001452c:	cdq    
   14001452d:	push   0x5d
   14001452f:	test   BYTE PTR [rcx-0x6699a296],bl
   140014535:	push   0x5d
   140014537:	cwd    
   140014539:	push   0x5d
   14001453b:	pop    rdx
   14001453c:	cdq    
   14001453d:	push   0x5d
   14001453f:	xor    ebx,DWORD PTR [rcx-0x77]
   140014542:	test   eax,0xb87e210c
   140014547:	add    eax,DWORD PTR [rax]
	...
   140014589:	add    BYTE PTR [rax],al
   14001458b:	add    dl,al
   14001458d:	mov    edi,0xbfc25abc
   140014592:	mov    esp,0xa0a2a4ae
   140014597:	call   QWORD PTR [rdx-0x62007478]
   14001459d:	jo     0x140014603
   14001459f:	(bad)  
   1400145a0:	cdq    
   1400145a1:	push   0x5d
   1400145a3:	scas   al,BYTE PTR es:[rdi]
   1400145a4:	cdq    
   1400145a5:	push   0x5d
   1400145a7:	cdq    
   1400145a8:	cdq    
   1400145a9:	push   0x5d
   1400145ab:	cdq    
   1400145ac:	cdq    
   1400145ad:	push   0x5d
   1400145af:	test   BYTE PTR [rcx-0x6699a296],bl
   1400145b5:	push   0x5d
   1400145b7:	cwd    
   1400145b9:	push   0x5d
   1400145bb:	pop    rbp
   1400145bc:	cdq    
   1400145bd:	push   0x5d
   1400145bf:	xor    ebx,DWORD PTR [rcx-0x66cca296]
   1400145c5:	push   0x5d
   1400145c7:	xor    eax,DWORD PTR [rax]
	...
   1400145d9:	add    BYTE PTR [rax],al
   1400145db:	add    BYTE PTR [rax-0x51],al
   1400145de:	out    0x2,al
   1400145e0:	ss stos BYTE PTR es:[rdi],al
   1400145e2:	in     al,0x1
   1400145e4:	sub    eax,0x2001dfa4
   1400145e9:	fild   DWORD PTR [rcx]
	...
   140014630:	(bad)  
   140014631:	(bad)  
   140014632:	(bad)  
   140014633:	(bad)  
   140014634:	(bad)  
   140014635:	inc    DWORD PTR [rax]
   140014637:	add    bh,bh
   140014639:	(bad)  
   14001463a:	(bad)  
   14001463b:	(bad)  
   14001463c:	(bad)  
   14001463d:	inc    DWORD PTR [rax]
   14001463f:	add    bh,bh
   140014641:	(bad)  
   140014642:	push   rax
   140014644:	add    eax,0xff0000ff
   140014649:	(bad)  
   14001464a:	inc    BYTE PTR [rax]
   14001464c:	add    edi,edi
   14001464e:	add    BYTE PTR [rax],al
   140014650:	(bad)  
   140014651:	jmp    rax
   140014653:	add    BYTE PTR [rax],al
   140014655:	jg     0x140014657
   140014657:	add    bh,bh
   140014659:	cld    
   14001465a:	add    BYTE PTR [rax],al
   14001465c:	add    BYTE PTR [rdi],bh
   14001465e:	add    BYTE PTR [rax],al
   140014660:	inc    eax
   140014662:	add    BYTE PTR [rax],al
   140014664:	add    BYTE PTR [rdi],al
   140014666:	add    BYTE PTR [rax],al
   140014668:	inc    DWORD PTR [rax]
   14001466a:	add    BYTE PTR [rax],al
   14001466c:	add    BYTE PTR [rbx],al
   14001466e:	add    BYTE PTR [rax],al
   140014670:	inc    BYTE PTR [rax]
   140014672:	add    BYTE PTR [rax],al
   140014674:	add    BYTE PTR [rcx],al
   140014676:	add    BYTE PTR [rax],al
   140014678:	inc    BYTE PTR [rax]
   14001467a:	add    BYTE PTR [rax],al
   14001467c:	add    BYTE PTR [rcx],al
   14001467e:	add    BYTE PTR [rax],al
   140014680:	cld    
   140014681:	add    BYTE PTR [rax],al
   140014683:	add    BYTE PTR [rax],al
   140014685:	add    DWORD PTR [rax],eax
   140014687:	add    ah,bh
   140014689:	add    BYTE PTR [rax],al
   14001468b:	add    BYTE PTR [rax],al
   14001468d:	add    DWORD PTR [rax],eax
   14001468f:	add    ah,bh
   140014691:	add    BYTE PTR [rax],al
   140014693:	add    BYTE PTR [rax],al
   140014695:	add    DWORD PTR [rax],eax
   140014697:	add    ah,bh
   140014699:	add    BYTE PTR [rax],al
   14001469b:	add    BYTE PTR [rax],al
   14001469d:	add    eax,DWORD PTR [rax]
   14001469f:	add    ah,bh
   1400146a1:	add    BYTE PTR [rax],al
   1400146a3:	add    BYTE PTR [rax],al
   1400146a5:	sldt   WORD PTR [rax]
   1400146a8:	cld    
   1400146a9:	add    BYTE PTR [rax],al
   1400146ab:	add    BYTE PTR [rbx],al
   1400146ad:	inc    DWORD PTR [rax]
   1400146af:	add    ah,bh
   1400146b1:	add    BYTE PTR [rax],al
   1400146b3:	add    BYTE PTR [rbx],al
   1400146b5:	inc    DWORD PTR [rax]
   1400146b7:	add    ah,bh
   1400146b9:	add    BYTE PTR [rax],al
   1400146bb:	add    BYTE PTR [rbx],al
   1400146bd:	inc    DWORD PTR [rax]
   1400146bf:	add    ah,bh
   1400146c1:	add    BYTE PTR [rax],al
   1400146c3:	add    BYTE PTR [rbx],al
   1400146c5:	inc    DWORD PTR [rax]
   1400146c7:	add    ah,bh
   1400146c9:	add    BYTE PTR [rax],al
   1400146cb:	add    BYTE PTR [rbx],al
   1400146cd:	inc    DWORD PTR [rax]
   1400146cf:	add    ah,bh
   1400146d1:	add    BYTE PTR [rax],al
   1400146d3:	add    BYTE PTR [rbx],al
   1400146d5:	inc    DWORD PTR [rax]
   1400146d7:	add    ah,bh
   1400146d9:	add    BYTE PTR [rax],al
   1400146db:	add    BYTE PTR [rbx],al
   1400146dd:	inc    DWORD PTR [rax]
   1400146df:	add    ah,bh
   1400146e1:	add    BYTE PTR [rax],al
   1400146e3:	add    BYTE PTR [rbx],al
   1400146e5:	inc    DWORD PTR [rax]
   1400146e7:	add    ah,bh
   1400146e9:	add    BYTE PTR [rax],al
   1400146eb:	add    BYTE PTR [rbx],al
   1400146ed:	inc    DWORD PTR [rax]
   1400146ef:	add    ah,bh
   1400146f1:	add    BYTE PTR [rax],al
   1400146f3:	add    BYTE PTR [rbx],al
   1400146f5:	inc    DWORD PTR [rax]
   1400146f7:	add    ah,bh
   1400146f9:	add    BYTE PTR [rax],al
   1400146fb:	add    BYTE PTR [rbx],al
   1400146fd:	inc    DWORD PTR [rax]
   1400146ff:	add    ah,bh
   140014701:	add    BYTE PTR [rax],al
   140014703:	add    BYTE PTR [rbx],al
   140014705:	inc    DWORD PTR [rax]
   140014707:	add    ah,bh
   140014709:	add    BYTE PTR [rax],al
   14001470b:	add    BYTE PTR [rbx],al
   14001470d:	inc    DWORD PTR [rax]
   14001470f:	add    ah,bh
   140014711:	add    BYTE PTR [rax],al
   140014713:	add    BYTE PTR [rbx],al
   140014715:	inc    DWORD PTR [rax]
   140014717:	add    ah,bh
   140014719:	add    BYTE PTR [rax],al
   14001471b:	add    BYTE PTR [rbx],al
   14001471d:	inc    DWORD PTR [rax]
   14001471f:	add    ah,bh
   140014721:	add    BYTE PTR [rax],al
   140014723:	add    BYTE PTR [rbx],al
   140014725:	inc    DWORD PTR [rax]
   140014727:	add    ah,bh
   140014729:	add    BYTE PTR [rax],al
   14001472b:	add    BYTE PTR [rbx],al
   14001472d:	inc    DWORD PTR [rax]
   14001472f:	add    ah,bh
   140014731:	add    BYTE PTR [rax],al
   140014733:	add    BYTE PTR [rbx],al
   140014735:	inc    DWORD PTR [rax]
   140014737:	add    ah,bh
   140014739:	add    BYTE PTR [rax],al
   14001473b:	add    BYTE PTR [rbx],al
   14001473d:	inc    DWORD PTR [rax]
   14001473f:	add    ah,bh
   140014741:	add    BYTE PTR [rax],al
   140014743:	add    BYTE PTR [rbx],al
   140014745:	inc    DWORD PTR [rax]
   140014747:	add    ah,bh
   140014749:	add    BYTE PTR [rax],al
   14001474b:	add    BYTE PTR [rbx],al
   14001474d:	inc    DWORD PTR [rax]
   14001474f:	add    ah,bh
   140014751:	add    BYTE PTR [rax],al
   140014753:	add    BYTE PTR [rbx],al
   140014755:	inc    DWORD PTR [rax]
   140014757:	add    ah,bh
   140014759:	add    BYTE PTR [rax],al
   14001475b:	add    BYTE PTR [rbx],al
   14001475d:	inc    DWORD PTR [rax]
   14001475f:	add    ah,bh
   140014761:	add    BYTE PTR [rax],al
   140014763:	add    BYTE PTR [rbx],al
   140014765:	inc    DWORD PTR [rax]
   140014767:	add    ah,bh
   140014769:	add    BYTE PTR [rax],al
   14001476b:	add    BYTE PTR [rbx],al
   14001476d:	inc    DWORD PTR [rax]
   14001476f:	add    ah,bh
   140014771:	add    BYTE PTR [rax],al
   140014773:	add    BYTE PTR [rbx],al
   140014775:	inc    DWORD PTR [rax]
   140014777:	add    ah,bh
   140014779:	add    BYTE PTR [rax],al
   14001477b:	add    BYTE PTR [rbx],al
   14001477d:	inc    DWORD PTR [rax]
   14001477f:	add    ah,bh
   140014781:	add    BYTE PTR [rax],al
   140014783:	add    BYTE PTR [rbx],al
   140014785:	inc    DWORD PTR [rax]
   140014787:	add    ah,bh
   140014789:	add    BYTE PTR [rax],al
   14001478b:	add    BYTE PTR [rbx],al
   14001478d:	inc    DWORD PTR [rax]
   14001478f:	add    ah,bh
   140014791:	add    BYTE PTR [rax],al
   140014793:	add    BYTE PTR [rbx],al
   140014795:	inc    DWORD PTR [rax]
   140014797:	add    ah,bh
   140014799:	add    BYTE PTR [rax],al
   14001479b:	add    BYTE PTR [rbx],al
   14001479d:	inc    DWORD PTR [rax]
   14001479f:	add    ah,bh
   1400147a1:	add    BYTE PTR [rax],al
   1400147a3:	add    BYTE PTR [rbx],al
   1400147a5:	inc    DWORD PTR [rax]
   1400147a7:	add    dh,bh
   1400147a9:	add    BYTE PTR [rbx],al
   1400147ab:	loope  0x1400147ac
   1400147ad:	inc    DWORD PTR [rax]
   1400147af:	add    BYTE PTR [rax],ch
   1400147b1:	add    BYTE PTR [rax],al
   1400147b3:	add    BYTE PTR [rax],ah
   1400147b5:	add    BYTE PTR [rax],al
   1400147b7:	add    BYTE PTR [rax+0x0],al
   1400147ba:	add    BYTE PTR [rax],al
   1400147bc:	add    DWORD PTR [rax],eax
   1400147be:	and    BYTE PTR [rax],al
   1400147c0:	add    BYTE PTR [rax],al
   1400147c2:	add    BYTE PTR [rax],al
   1400147c4:	adc    BYTE PTR [rax],0x0
	...
   140014823:	add    BYTE PTR [rax-0x77f9aca2],cl
   140014829:	pop    rsi
   14001482a:	push   rbx
   14001482b:	(bad)  
   14001482c:	mov    BYTE PTR [rsi+0x53],bl
   14001482f:	(bad)  
   140014830:	mov    BYTE PTR [rsi+0x53],bl
   140014833:	(bad)  
   140014834:	movhps QWORD PTR [rdi],xmm3
   140014837:	adc    cl,BYTE PTR [rip+0xf1c14]        # 0x140106451
   14001483d:	add    ecx,DWORD PTR [rax]
   14001483f:	add    DWORD PTR [rax],eax
	...
   140014891:	add    BYTE PTR [rax],al
   140014893:	add    BYTE PTR [rax-0x77e1aca2],cl
   140014899:	pop    rsi
   14001489a:	push   rbx
   14001489b:	push   rdi
   14001489c:	mov    BYTE PTR [rsi+0x53],bl
   14001489f:	nop
   1400148a0:	mov    fs,WORD PTR [rbp+0x58]
   1400148a3:	dec    DWORD PTR [rdx-0x5700aa9f]
   1400148a9:	(bad)  
   1400148aa:	jb     0x1400148ab
   1400148ac:	ret    0x8c9f
   1400148af:	call   FWORD PTR [rcx+0x30ff5d6a]
   1400148b5:	cmp    eax,DWORD PTR [rsi+0x70]
   1400148b8:	add    eax,0x3290505
   1400148bd:	add    eax,DWORD PTR [rbx]
   1400148bf:	(bad)  
   1400148c0:	add    BYTE PTR [rax],al
   1400148c2:	add    BYTE PTR [rdx],al
	...
   140014900:	mov    BYTE PTR [rsi+0x53],bl
   140014903:	and    DWORD PTR [rax-0x77a8aca2],ecx
   140014909:	pop    rsi
   14001490a:	push   rbx
   14001490b:	nop
   14001490c:	mov    BYTE PTR [rsi+0x53],bl
   14001490f:	(bad)  
   140014910:	mov    fs,WORD PTR [rbp+0x58]
   140014913:	call   FWORD PTR [rax-0x4b009d91]
   140014919:	(bad)  
   14001491a:	jle    0x14001491b
   14001491c:	int3   
   14001491d:	test   eax,0xbedeff95
   140014922:	test   eax,0xb7cbeaff
   140014927:	jmp    rbx
   140014929:	ret    
   14001492a:	scas   al,BYTE PTR es:[rdi]
   14001492b:	(bad)  
   14001492c:	(bad)  
   14001492d:	retf   
   14001492e:	mov    bh,0xff
   140014930:	cdq    
   140014931:	push   0x5d
   140014933:	inc    ecx
   140014935:	mov    edi,0x6a99ffbd
   14001493a:	pop    rbp
   14001493b:	call   FWORD PTR [rdx]
   14001493d:	sbb    bl,BYTE PTR [rdx]
   14001493f:	rex.XB add eax,0x290505
   140014945:	add    BYTE PTR [rax],al
   140014947:	or     al,0x0
   140014949:	add    BYTE PTR [rax],al
   14001494b:	add    al,0x0
   14001494d:	add    BYTE PTR [rax],al
   14001494f:	add    DWORD PTR [rax],eax
	...
   14001496d:	add    BYTE PTR [rax],al
   14001496f:	add    BYTE PTR [rax-0x77e4aca2],cl
   140014975:	pop    rsi
   140014976:	push   rbx
   140014977:	push   rsp
   140014978:	mov    BYTE PTR [rsi+0x53],bl
   14001497b:	lea    ecx,[rax-0x7639aca2]
   140014981:	pop    rdi
   140014982:	push   rsp
   140014983:	cld    
   140014984:	nop
   140014985:	jg     0x140014a04
   140014987:	inc    ecx
   140014989:	sahf   
   14001498a:	mov    bh,bh
   14001498c:	(bad)  
   14001498d:	mov    ch,0xa0
   14001498f:	jmp    rbp
   140014991:	(bad)
   140014994:	out    0xc8,eax
   140014996:	mov    bl,0xff
   140014998:	fistp  QWORD PTR [rdi-0x47260056]
   14001499e:	movabs ds:0x91aacbff9ab2d2ff,al
   1400149a7:	dec    ecx
   1400149a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400149aa:	mov    ?,edi
   1400149ac:	(bad)  
   1400149ad:	retf   
   1400149ae:	mov    bh,0xff
   1400149b0:	cdq    
   1400149b1:	push   0x5d
   1400149b3:	inc    ecx
   1400149b5:	mov    edi,0x6a99ffbd
   1400149ba:	pop    rbp
   1400149bb:	call   QWORD PTR [rip+0x1a551515]        # 0x15a565ed6
   1400149c1:	sbb    bl,BYTE PTR [rdx]
   1400149c3:	rex.XB add BYTE PTR [r8],al
   1400149c6:	add    BYTE PTR [rdi],ah
   1400149c8:	add    BYTE PTR [rax],al
   1400149ca:	add    BYTE PTR [rdx],bl
   1400149cc:	add    BYTE PTR [rax],al
   1400149ce:	add    BYTE PTR [rcx],cl
   1400149d0:	add    BYTE PTR [rax],al
   1400149d2:	add    BYTE PTR [rcx],al
	...
   1400149f0:	(bad)  
   1400149f1:	outs   dx,DWORD PTR ds:[rsi]
   1400149f2:	(bad)  
   1400149f3:	push   QWORD PTR [rdi-0x30007d6d]
   1400149f9:	lods   eax,DWORD PTR ds:[rsi]
   1400149fa:	fwait
   1400149fb:	call   FWORD PTR [rdi-0x1500a28f]
   140014a01:	retf   0xffb6
   140014a04:	jrcxz  0x1400149c9
   140014a06:	scas   al,BYTE PTR es:[rdi]
   140014a07:	(bad)  
   140014a08:	fdivr  QWORD PTR [rsi+riz*4-0x61492a01]
   140014a0f:	dec    edi
   140014a11:	lods   eax,DWORD PTR ds:[rsi]
   140014a12:	xchg   esi,eax
   140014a13:	dec    edx
   140014a15:	test   al,0x8f
   140014a17:	dec    eax
   140014a19:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014a1a:	(bad)  
   140014a1b:	inc    ebx
   140014a1d:	movabs eax,ds:0x99bdff829cc0ff87
   140014a26:	jle    0x140014a27
   140014a28:	mov    ebp,0xeaff7e9a
   140014a2d:	retf   
   140014a2e:	mov    bh,0xff
   140014a30:	cdq    
   140014a31:	push   0x5d
   140014a33:	inc    ecx
   140014a35:	mov    edi,0x6a99ffbd
   140014a3a:	pop    rbp
   140014a3b:	call   QWORD PTR [rsi]
   140014a3d:	(bad)  
   140014a3e:	(bad)  
   140014a3f:	push   rbp
   140014a40:	sbb    bl,BYTE PTR [rdx]
   140014a42:	sbb    al,BYTE PTR [rbx+0x0]
   140014a45:	add    BYTE PTR [rax],al
   140014a47:	xor    DWORD PTR [rax],eax
   140014a49:	add    BYTE PTR [rax],al
   140014a4b:	(bad)  
   140014a4c:	add    BYTE PTR [rax],al
   140014a4e:	add    BYTE PTR [rip+0x5000000],dl        # 0x145014a54
	...
   140014a68:	ret    0xbcbf
   140014a6b:	pop    rdx
   140014a6c:	(bad)  
   140014a6d:	cwde   
   140014a6e:	xchg   ebp,eax
   140014a6f:	(bad)  
   140014a70:	jg     0x140014aef
   140014a72:	jnp    0x140014a73
   140014a74:	jbe    0x140014ae9
   140014a76:	jb     0x140014a77
   140014a78:	mov    eax,0x9fff7a91
   140014a7d:	jno    0x140014adc
   140014a7f:	dec    esp
   140014a81:	stos   BYTE PTR es:[rdi],al
   140014a82:	xchg   edx,eax
   140014a83:	dec    eax
   140014a85:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014a86:	(bad)  
   140014a87:	inc    ebx
   140014a89:	movabs eax,ds:0x98bcff829cbfff88
   140014a92:	jge    0x140014a93
   140014a94:	mov    ebx,0xbaff7a96
   140014a99:	xchg   ebp,eax
   140014a9a:	jns    0x140014a9b
   140014a9c:	mov    ebx,0xbdff7b97
   140014aa1:	cdq    
   140014aa2:	jle    0x140014aa3
   140014aa4:	rcr    BYTE PTR [rdx+rax*4-0x765d3a01],0xff
   140014aac:	(bad)  
   140014aad:	retf   
   140014aae:	mov    bh,0xff
   140014ab0:	cdq    
   140014ab1:	push   0x5d
   140014ab3:	inc    ecx
   140014ab5:	mov    edi,0x6a99ffbd
   140014aba:	pop    rbp
   140014abb:	call   QWORD PTR [rdi]
   140014abd:	(bad)  
   140014abe:	(bad)  
   140014abf:	push   rcx
   140014ac0:	sbb    bl,BYTE PTR [rdx]
   140014ac2:	sbb    al,BYTE PTR [rbx+0x0]
   140014ac5:	add    BYTE PTR [rax],al
   140014ac7:	sub    eax,0x23000000
   140014acc:	add    BYTE PTR [rax],al
   140014ace:	add    BYTE PTR [rax+rax*1],dl
   140014ad1:	add    BYTE PTR [rax],al
   140014ad3:	add    eax,0x0
	...
   140014ae8:	(bad)  
   140014ae9:	cwde   
   140014aea:	xchg   ebp,eax
   140014aeb:	inc    edi
   140014aed:	leave  
   140014aee:	retf   
   140014aef:	call   FWORD PTR [rcx-0x4600a296]
   140014af5:	xchg   edx,eax
   140014af6:	jnp    0x140014af7
   140014af8:	mov    ecx,0x9fff7b92
   140014afd:	jno    0x140014b5c
   140014aff:	(bad)  
   140014b00:	mov    ebp,0xbaff7e9a
   140014b05:	xchg   ebp,eax
   140014b06:	jns    0x140014b07
   140014b08:	fwait
   140014b09:	jle    0x140014a8e
   140014b0b:	call   FWORD PTR [rbx+0x4c]
   140014b0e:	xchg   edx,eax
   140014b0f:	jmp    QWORD PTR [rdi]
   140014b11:	and    bl,BYTE PTR [rcx-0x69dfdb01]
   140014b17:	call   FWORD PTR [rbx+0x4d]
   140014b1a:	xchg   esp,eax
   140014b1b:	jmp    QWORD PTR [rsi-0x31006c75]
   140014b21:	lods   eax,DWORD PTR ds:[rsi]
   140014b22:	xchg   ebp,eax
   140014b23:	dec    ebp
   140014b25:	lods   al,BYTE PTR ds:[rsi]
   140014b26:	xchg   ebp,eax
   140014b27:	dec    esp
   140014b29:	stos   DWORD PTR es:[rdi],eax
   140014b2a:	xchg   ebx,eax
   140014b2b:	(bad)  
   140014b2c:	(bad)  
   140014b2d:	retf   
   140014b2e:	mov    bh,0xff
   140014b30:	cdq    
   140014b31:	push   0x5d
   140014b33:	inc    ecx
   140014b35:	mov    edi,0x6a99ffbd
   140014b3a:	pop    rbp
   140014b3b:	call   FWORD PTR [rdx]
   140014b3d:	sbb    bl,BYTE PTR [rdx]
   140014b3f:	rex.XB sbb bl,BYTE PTR [r10]
   140014b42:	sbb    al,BYTE PTR [rbx+0x0]
   140014b45:	add    BYTE PTR [rax],al
   140014b47:	(bad)  
   140014b48:	add    BYTE PTR [rax],al
   140014b4a:	add    BYTE PTR [rsi],dl
   140014b4c:	add    BYTE PTR [rax],al
   140014b4e:	add    BYTE PTR [rax],cl
   140014b50:	add    BYTE PTR [rax],al
   140014b52:	add    BYTE PTR [rcx],al
	...
   140014b68:	mov    eax,0xc2ffb2b5
   140014b6d:	mov    edi,0x6a9954bc
   140014b72:	pop    rbp
   140014b73:	(bad)  
   140014b74:	mov    ecx,0xbaff7b92
   140014b79:	xchg   esp,eax
   140014b7a:	jge    0x140014b7b
   140014b7c:	lahf   
   140014b7d:	jno    0x140014bdc
   140014b7f:	dec    ecx
   140014b81:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014b82:	(bad)  
   140014b83:	jmp    FWORD PTR [rdx+0x40ff988f]
   140014b89:	cmp    DWORD PTR [rax-0x4ddcdd01],ebp
   140014b8f:	jmp    QWORD PTR [rdi]
   140014b91:	(bad)  
   140014b92:	mov    ebp,0xbe2324ff
   140014b97:	call   FWORD PTR [rdx]
   140014b99:	sbb    dh,BYTE PTR [rax-0x68d6d001]
   140014b9f:	call   FWORD PTR [rbp-0x4000767e]
   140014ba5:	popf   
   140014ba6:	(bad)  
   140014ba7:	(bad)  
   140014ba8:	mov    esi,0xeaff809c
   140014bad:	retf   
   140014bae:	mov    bh,0xff
   140014bb0:	cdq    
   140014bb1:	push   0x5d
   140014bb3:	inc    ecx
   140014bb5:	mov    edi,0x6a99ffbd
   140014bba:	pop    rbp
   140014bbb:	call   QWORD PTR [rsp+rdx*1]
   140014bbe:	adc    al,0x28
   140014bc0:	add    BYTE PTR [rax],al
   140014bc2:	add    BYTE PTR [rdi],bl
   140014bc4:	add    BYTE PTR [rax],al
   140014bc6:	add    BYTE PTR [rsi],al
   140014bc8:	add    BYTE PTR [rax],al
   140014bca:	add    BYTE PTR [rdi],al
   140014bcc:	add    BYTE PTR [rax],al
   140014bce:	add    BYTE PTR [rcx],al
	...
   140014be8:	ret    0xbcbf
   140014beb:	pop    rdx
   140014bec:	(bad)  
   140014bed:	cwde   
   140014bee:	xchg   ebp,eax
   140014bef:	(bad)  
   140014bf0:	jg     0x140014c6f
   140014bf2:	jnp    0x140014bf3
   140014bf4:	jbe    0x140014c69
   140014bf6:	jb     0x140014bf7
   140014bf8:	mov    ebx,0x9fff7f96
   140014bfd:	jno    0x140014c5c
   140014bff:	dec    ebp
   140014c01:	lods   al,BYTE PTR ds:[rsi]
   140014c02:	xchg   esp,eax
   140014c03:	jmp    FWORD PTR [rax+0x5b]
   140014c06:	movabs ds:0xffffffffb52829ff,al
   140014c0f:	call   QWORD PTR [rbx+0x53]
   140014c12:	mov    edx,0xb94949ff
   140014c17:	(bad)  
   140014c18:	jmp    0x140014c05
   140014c1a:	repz call FWORD PTR [rdx]
   140014c1d:	sbb    DWORD PTR [rbp-0x74b8aa01],ebp
   140014c23:	inc    ecx
   140014c25:	lahf   
   140014c26:	test   edi,edi
   140014c28:	(bad)
   140014c2b:	(bad)  
   140014c2c:	(bad)  
   140014c2d:	retf   
   140014c2e:	mov    bh,0xff
   140014c30:	cdq    
   140014c31:	push   0x5d
   140014c33:	inc    ecx
   140014c35:	mov    edi,0x6a99ffbd
   140014c3a:	pop    rbp
   140014c3b:	jmp    QWORD PTR [rcx+0x61]
   140014c3e:	(bad)  
   140014c3f:	adc    esp,DWORD PTR [rcx+0x61]
   140014c42:	(bad)  
   140014c43:	adc    eax,DWORD PTR [rax]
	...
   140014c65:	add    BYTE PTR [rax],al
   140014c67:	add    BYTE PTR [rdx-0x38006a68],bl
   140014c6d:	leave  
   140014c6e:	retf   
   140014c6f:	call   FWORD PTR [rcx-0x2600a296]
   140014c75:	shl    DWORD PTR [rcx-0x7d674201],0xff
   140014c7c:	movabs al,ds:0x37ff7f9cbeff5e72
   140014c85:	xor    ch,BYTE PTR [rbx-0x42c7c601]
   140014c8b:	dec    DWORD PTR [rsi+0x4e]
   140014c8e:	fdiv   st(7),st
   140014c90:	(bad)  
   140014c91:	(bad)  
   140014c92:	(bad)  
   140014c93:	jmp    rdx
   140014c95:	loop   0x140014c83
   140014c97:	call   QWORD PTR [rdi+0x57]
   140014c9a:	sar    bh,0x23
   140014c9d:	and    bh,BYTE PTR [rcx-0x68deda01]
   140014ca3:	call   rcx
   140014ca5:	mov    cl,0x9a
   140014ca7:	call   rax
   140014ca9:	mov    cl,0x98
   140014cab:	(bad)  
   140014cac:	(bad)  
   140014cad:	int3   
   140014cae:	mov    eax,0x5d6a99ff
   140014cb3:	inc    ebx
   140014cb5:	sar    DWORD PTR [rdi+0x5d6a99ff],0xff
	...
   140014ce8:	mov    eax,0xc2ffb2b5
   140014ced:	mov    edi,0x6a9954bc
   140014cf2:	pop    rbp
   140014cf3:	(bad)  
   140014cf4:	mov    esi,0xbeff849a
   140014cf9:	(bad)  
   140014cfa:	test   bh,bh
   140014cfc:	movabs eax,ds:0x3bff9eb5d1ff6074
   140014d05:	(bad)  
   140014d06:	mov    al,0xff
   140014d08:	push   rax
   140014d09:	rex.WRXB (bad) 
   140014d0d:	push   rax
   140014d0e:	(bad)  
   140014d0f:	(bad)  
   140014d10:	(bad)  
   140014d11:	(bad)  
   140014d12:	(bad)  
   140014d13:	(bad)  
   140014d14:	(bad)  
   140014d15:	(bad)  
   140014d16:	(bad)  
   140014d17:	call   QWORD PTR [rdi+0x57]
   140014d1a:	ret    
   140014d1b:	jmp    FWORD PTR [rdx]
   140014d1d:	sub    bh,BYTE PTR [rdx-0x68deda01]
   140014d23:	(bad)  
   140014d24:	mov    ebp,0xbcff7f9b
   140014d29:	(bad)  
   140014d2a:	jle    0x140014d2b
   140014d2c:	jmp    0x140014cfb
   140014d2e:	mov    edx,0x5d6a99ff
   140014d33:	inc    ebp
   140014d35:	ret    
   140014d36:	sar    edi,0x99
   140014d39:	push   0x5d
   140014d3b:	inc    DWORD PTR [rax]
	...
   140014d65:	add    BYTE PTR [rax],al
   140014d67:	add    dl,al
   140014d69:	mov    edi,0x989a5abc
   140014d6e:	xchg   ebp,eax
   140014d6f:	(bad)  
   140014d70:	jg     0x140014def
   140014d72:	jnp    0x140014d73
   140014d74:	jbe    0x140014de9
   140014d76:	jb     0x140014d77
   140014d78:	rcr    BYTE PTR [rbp+0x75a2ff87],0x61
   140014d7f:	call   rbp
   140014d81:	mov    ecx,0x606dffa4
   140014d86:	stos   BYTE PTR es:[rdi],al
   140014d87:	inc    DWORD PTR [rdi+0x46]
   140014d8a:	sar    edi,0xff
   140014d8d:	(bad)  
   140014d8e:	(bad)  
   140014d8f:	call   QWORD PTR [rdx+0x52]
   140014d92:	retf   
   140014d93:	inc    DWORD PTR [rbp+0x45]
   140014d96:	in     eax,0xff
   140014d98:	in     al,dx
   140014d99:	in     al,dx
   140014d9a:	stc    
   140014d9b:	jmp    FWORD PTR [rbx]
   140014d9d:	sub    esi,DWORD PTR [rcx-0x6bb0a301]
   140014da3:	dec    eax
   140014da5:	test   eax,0xb1d0ff8f
   140014daa:	cwde   
   140014dab:	(bad)  
   140014dac:	jmp    0x140014d7c
   140014dae:	mov    ebx,0x5d6a99ff
   140014db3:	dec    eax
   140014db5:	mov    ah,0xff
   140014db8:	cdq    
   140014db9:	push   0x5d
   140014dbb:	inc    DWORD PTR [rax]
	...
   140014de5:	add    BYTE PTR [rax],al
   140014de7:	add    BYTE PTR [rdx-0x38006a68],bl
   140014ded:	leave  
   140014dee:	retf   
   140014def:	call   FWORD PTR [rcx-0x2600a296]
   140014df5:	shl    DWORD PTR [rcx-0x75603d01],0xff
   140014dfc:	movabs ds:0xa0ff8ba5c4ff6377,eax
   140014e05:	test   DWORD PTR [rbx-0x50beb701],ecx
   140014e0b:	dec    DWORD PTR [rax+0x47]
   140014e0e:	sar    edi,0x58
   140014e11:	pop    rax
   140014e12:	(bad)  
   140014e13:	call   QWORD PTR [rdx+0x50]
   140014e16:	ret    0x37ff
   140014e19:	ss mov ch,0xff
   140014e1c:	(bad)  
   140014e1d:	cmp    BYTE PTR [rdi-0x606b5101],ah
   140014e23:	call   rbx
   140014e25:	mov    ah,0x9e
   140014e27:	call   rbx
   140014e29:	mov    ah,0x9e
   140014e2b:	(bad)  
   140014e2c:	jmp    0x140014dfd
   140014e2e:	mov    ebp,0x5d6a99ff
   140014e33:	dec    ebx
   140014e35:	leave  
   140014e36:	(bad)  
   140014e37:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140014e65:	add    BYTE PTR [rax],al
   140014e67:	add    BYTE PTR [rax-0x3d004d4b],bh
   140014e6d:	mov    edi,0x6a9954bc
   140014e72:	pop    rbp
   140014e73:	inc    edx
   140014e75:	lahf   
   140014e76:	mov    bh,bh
   140014e78:	(bad)
   140014e7c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014e7d:	jns    0x140014ee4
   140014e7f:	(bad)  
   140014e80:	fdivr  DWORD PTR [rbp-0x41260056]
   140014e86:	stos   DWORD PTR es:[rdi],eax
   140014e87:	push   QWORD PTR [rsi+0x72ffaca0]
   140014e8d:	data16 mov al,0xff
   140014e90:	cmp    al,0x36
   140014e92:	mov    dl,0xff
   140014e94:	cmp    DWORD PTR [rsi+rbp*4],esi
   140014e97:	jmp    FWORD PTR [rcx+0x5d]
   140014e9a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014e9b:	jmp    FWORD PTR [rcx-0x3500646e]
   140014ea1:	lods   eax,DWORD PTR ds:[rsi]
   140014ea2:	xchg   esp,eax
   140014ea3:	dec    ecx
   140014ea5:	lods   eax,DWORD PTR ds:[rsi]
   140014ea6:	xchg   ebx,eax
   140014ea7:	dec    ecx
   140014ea9:	lods   al,BYTE PTR ds:[rsi]
   140014eaa:	xchg   edx,eax
   140014eab:	(bad)  
   140014eac:	in     al,dx
   140014ead:	rol    eax,1
   140014eaf:	call   FWORD PTR [rcx-0x3100a296]
   140014eb5:	int3   
   140014eb6:	retf   0x99ff
   140014eb9:	push   0x5d
   140014ebb:	inc    DWORD PTR [rax]
	...
   140014ee5:	add    BYTE PTR [rax],al
   140014ee7:	add    dl,al
   140014ee9:	mov    edi,0x989a5abc
   140014eee:	xchg   ebp,eax
   140014eef:	(bad)  
   140014ef0:	jg     0x140014f6f
   140014ef2:	jnp    0x140014ef3
   140014ef4:	jbe    0x140014f69
   140014ef6:	jb     0x140014ef7
   140014ef8:	(bad)  
   140014ef9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014efa:	xchg   ecx,eax
   140014efb:	jmp    QWORD PTR [rsi-0x2d009884]
   140014f01:	mov    dh,0xa0
   140014f03:	dec    ebp
   140014f05:	mov    dl,0x9a
   140014f07:	dec    ebx
   140014f09:	scas   eax,DWORD PTR es:[rdi]
   140014f0a:	xchg   esi,eax
   140014f0b:	dec    edx
   140014f0d:	scas   al,BYTE PTR es:[rdi]
   140014f0e:	xchg   esp,eax
   140014f0f:	dec    ecx
   140014f11:	lods   eax,DWORD PTR ds:[rsi]
   140014f12:	xchg   ebx,eax
   140014f13:	dec    edx
   140014f15:	scas   al,BYTE PTR es:[rdi]
   140014f16:	xchg   esp,eax
   140014f17:	dec    ebx
   140014f19:	scas   eax,DWORD PTR es:[rdi]
   140014f1a:	xchg   esi,eax
   140014f1b:	dec    ebp
   140014f1d:	mov    dl,0x99
   140014f1f:	call   rax
   140014f21:	mov    ah,0x9c
   140014f23:	call   rbx
   140014f25:	mov    bh,0xa1
   140014f27:	call   rsp
   140014f29:	mov    edx,0xd3ecffa4
   140014f2e:	ret    0x99ff
   140014f31:	push   0x5d
   140014f33:	call   rdx
   140014f35:	ror    dh,1
   140014f37:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140014f65:	add    BYTE PTR [rax],al
   140014f67:	add    BYTE PTR [rdx-0x38006a68],bl
   140014f6d:	leave  
   140014f6e:	retf   
   140014f6f:	jmp    QWORD PTR [rdx-0x26008c84]
   140014f75:	shl    DWORD PTR [rcx-0x6b573701],0xff
   140014f7c:	test   al,0x7e
   140014f7e:	imul   edi,edi,0xff9ab2cd
   140014f84:	(bad)  
   140014f85:	mov    dl,0x9a
   140014f87:	call   rax
   140014f89:	mov    dh,0x9f
   140014f8b:	call   rsp
   140014f8d:	mov    edx,0xbed8ffa5
   140014f92:	stos   DWORD PTR es:[rdi],eax
   140014f93:	(bad)  
   140014f94:	fld    st(0)
   140014f96:	lods   eax,DWORD PTR ds:[rsi]
   140014f97:	(bad)  
   140014f98:	fcmovnb st,st(1)
   140014f9a:	lods   eax,DWORD PTR ds:[rsi]
   140014f9b:	(bad)  
   140014f9c:	fcmovnb st,st(1)
   140014f9e:	lods   eax,DWORD PTR ds:[rsi]
   140014f9f:	(bad)  
   140014fa0:	fcmovnb st,st(2)
   140014fa2:	scas   al,BYTE PTR es:[rdi]
   140014fa3:	(bad)  
   140014fa4:	fcmovnb st,st(1)
   140014fa6:	lods   eax,DWORD PTR ds:[rsi]
   140014fa7:	(bad)  
   140014fa8:	fld    st(0)
   140014faa:	lods   al,BYTE PTR ds:[rsi]
   140014fab:	(bad)  
   140014fac:	in     eax,dx
   140014fad:	(bad)  
   140014fae:	(bad)  
   140014faf:	call   FWORD PTR [rcx-0x2a00a296]
   140014fb5:	rcl    ecx,cl
   140014fb7:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140014fe5:	add    BYTE PTR [rax],al
   140014fe7:	add    BYTE PTR [rax-0x3d004d4b],bh
   140014fed:	mov    edi,0x7ca254bc
   140014ff2:	jae    0x140014ff3
   140014ff4:	leave  
   140014ff5:	stos   BYTE PTR es:[rdi],al
   140014ff6:	xchg   edi,eax
   140014ff7:	dec    ecx
   140014ff9:	stos   BYTE PTR es:[rdi],al
   140014ffa:	xchg   edi,eax
   140014ffb:	jmp    FWORD PTR [rdx-0x2300937f]
   140015001:	(bad)  
   140015002:	mov    cl,0xff
   140015004:	ffree  st(4)
   140015006:	mov    dl,0xff
   140015008:	fadd   st(3),st
   14001500a:	mov    al,0xff
   14001500c:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001500e:	mov    ch,0xff
   140015010:	adc    bl,BYTE PTR [rax-0x67ed0049]
   140015016:	mov    bh,0xff
   140015018:	adc    bl,BYTE PTR [rax-0x67ed0049]
   14001501e:	mov    bh,0xff
   140015020:	adc    bl,BYTE PTR [rax-0x67ed0049]
   140015026:	mov    bh,0xff
   140015028:	rex.RB sahf 
   14001502a:	lods   eax,DWORD PTR ds:[rsi]
   14001502b:	(bad)  
   14001502c:	(bad)  
   14001502d:	rol    ebx,cl
   14001502f:	call   FWORD PTR [rcx-0x2600a296]
   140015035:	xlat   BYTE PTR ds:[rbx]
   140015036:	(bad)  
   140015037:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015065:	add    BYTE PTR [rax],al
   140015067:	add    dl,al
   140015069:	mov    edi,0x989a5abc
   14001506e:	xchg   ebp,eax
   14001506f:	(bad)  
   140015070:	jg     0x1400150ef
   140015072:	jnp    0x140015073
   140015074:	jbe    0x1400150e9
   140015076:	jb     0x140015077
   140015078:	retf   
   140015079:	lods   eax,DWORD PTR ds:[rsi]
   14001507a:	(bad)  
   14001507b:	jmp    FWORD PTR [rbx+rax*4-0x462d0092]
   140015082:	movabs ds:0x98b1ccff9cb4cfff,al
   14001508b:	jmp    QWORD PTR [rbx]
   14001508d:	(bad)  
   14001508e:	mov    ah,0xff
   140015090:	and    eax,0x2affe5c7
   140015095:	(bad)  
   140015097:	call   FWORD PTR [rsi]
   140015099:	test   DWORD PTR [rdi+rdi*8-0xfbfbfe],edx
   1400150a0:	cs loope 0x1400150a0
   1400150a3:	jmp    QWORD PTR [rip+0x23ffe4c6]        # 0x16401356f
   1400150a9:	fwait
   1400150aa:	mov    dh,0xff
   1400150ac:	out    dx,al
   1400150ad:	xlat   BYTE PTR ds:[rbx]
   1400150ae:	leave  
   1400150af:	call   FWORD PTR [rcx-0x2200a296]
   1400150b5:	fcmovnu st,st(1)
   1400150b7:	call   FWORD PTR [rcx+0xff5d6a]
	...
   1400150e5:	add    BYTE PTR [rax],al
   1400150e7:	add    BYTE PTR [rdx-0x3a006a68],bl
   1400150ed:	mov    dh,0xff
   1400150f0:	movabs ds:0xcdffb1c1d9ff737c,al
   1400150f9:	mov    al,0x9e
   1400150fb:	jmp    FWORD PTR [rbp-0x31008e7a]
   140015101:	mov    ah,0x9b
   140015103:	call   rax
   140015105:	mov    dh,0x9c
   140015107:	call   rbx
   140015109:	mov    ecx,0xb08bffa2
   14001510e:	scas   eax,DWORD PTR es:[rdi]
   14001510f:	jmp    QWORD PTR [rip+0x2affe5c7]        # 0x16b0136dc
   140015115:	(bad)  
   140015117:	jmp    FWORD PTR [rdi]
   140015119:	retf   0xffdf
   14001511c:	and    bl,BYTE PTR [rbp-0x1ed10051]
   140015122:	std    
   140015123:	jmp    QWORD PTR [rip+0x77ffe4c6]        # 0x1b80135ef
   140015129:	scas   eax,DWORD PTR es:[rdi]
   14001512a:	mov    ah,0xff
   14001512c:	out    dx,al
   14001512d:	fxch   st(3)
   14001512f:	call   FWORD PTR [rcx-0x1e00a296]
   140015135:	(bad)  
   140015137:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015165:	add    BYTE PTR [rax],al
   140015167:	add    BYTE PTR [rax-0x3d004d4b],bh
   14001516d:	mov    edi,0x7ca254bc
   140015172:	jae    0x140015173
   140015174:	iret   
   140015175:	mov    bl,0xa1
   140015177:	dec    edi
   140015179:	mov    bl,0xa1
   14001517b:	jmp    FWORD PTR [rdi-0x1e008c78]
   140015181:	retf   0xffb6
   140015184:	loopne 0x14001514f
   140015186:	mov    eax,0xb6c9e1ff
   14001518b:	inc    esi
   14001518d:	shl    DWORD PTR [rdi+rdi*8-0x3b55e0],0x46
   140015195:	repnz (bad) 
   140015197:	jmp    FWORD PTR [rip+0xbffada2]        # 0x14c00ff3f
   14001519d:	and    BYTE PTR [rax],ah
   14001519f:	inc    DWORD PTR [rdx-0x11]
   1400151a2:	(bad)  
   1400151a3:	call   FWORD PTR [rsi]
   1400151a5:	test   eax,0xb0b6ffc4
   1400151aa:	sahf   
   1400151ab:	(bad)  
   1400151ac:	out    dx,eax
   1400151ad:	fcmovne st,st(6)
   1400151af:	call   FWORD PTR [rcx-0x1a00a296]
   1400151b5:	jrcxz  0x140015198
   1400151b7:	call   FWORD PTR [rcx+0xff5d6a]
	...
   1400151e5:	add    BYTE PTR [rax],al
   1400151e7:	add    dl,al
   1400151e9:	mov    edi,0x989a5abc
   1400151ee:	xchg   ebp,eax
   1400151ef:	(bad)  
   1400151f0:	jg     0x14001526f
   1400151f2:	jnp    0x1400151f3
   1400151f4:	jbe    0x140015269
   1400151f6:	jb     0x1400151f7
   1400151f8:	shl    DWORD PTR [rbp-0x744e005c],1
   1400151fe:	jbe    0x1400151ff
   140015200:	sar    BYTE PTR [rax-0x4b2f005f],cl
   140015206:	pushf  
   140015207:	dec    esi
   140015209:	mov    dl,0x99
   14001520b:	dec    esi
   14001520d:	mov    bl,0x9a
   14001520f:	call   QWORD PTR [rdi-0x5d]
   140015212:	lods   eax,DWORD PTR ds:[rsi]
   140015213:	(bad)  
   140015214:	cmp    bl,bh
   140015216:	icebp  
   140015217:	jmp    FWORD PTR [rdi]
   140015219:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001521a:	lods   eax,DWORD PTR ds:[rsi]
   14001521b:	inc    DWORD PTR [rdi]
   14001521d:	adc    al,0x14
   14001521f:	(bad)  
   140015220:	cmp    ah,ah
   140015222:	clc    
   140015223:	jmp    QWORD PTR [rax-0x59]
   140015226:	mov    dl,0xff
   140015228:	fcmovnb st,st(3)
   14001522a:	scas   al,BYTE PTR es:[rdi]
   14001522b:	(bad)  
   14001522c:	out    dx,eax
   14001522d:	(bad)  
   14001522f:	call   FWORD PTR [rcx-0x1700a296]
   140015235:	out    0xe4,al
   140015237:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015265:	add    BYTE PTR [rax],al
   140015267:	add    BYTE PTR [rdx-0x38006a68],bl
   14001526d:	leave  
   14001526e:	retf   
   14001526f:	jmp    QWORD PTR [rdx-0x26008c84]
   140015275:	shl    DWORD PTR [rcx-0x58472c01],0xff
   14001527c:	mov    bl,0x8d
   14001527e:	js     0x14001527f
   140015280:	fcmovb st,st(4)
   140015282:	scas   al,BYTE PTR es:[rdi]
   140015283:	(bad)  
   140015284:	fcmovb st,st(4)
   140015286:	scas   eax,DWORD PTR es:[rdi]
   140015287:	(bad)  
   140015288:	fmulp  st(1),st
   14001528a:	mov    dh,0xff
   14001528c:	loopne 0x140015259
   14001528e:	mov    ecx,0xb9b791ff
   140015293:	jmp    QWORD PTR [rsi*4-0x49cc0032]
   14001529a:	ret    
   14001529b:	jmp    FWORD PTR [rip+0x23ffaea3]        # 0x164010144
   1400152a1:	mov    ch,0xce
   1400152a3:	call   FWORD PTR [rsi-0x1e004645]
   1400152a9:	retf   0xffb9
   1400152ac:	out    dx,eax
   1400152ad:	fst    st(1)
   1400152af:	call   FWORD PTR [rcx-0x1300a296]
   1400152b5:	(bad)  
   1400152b6:	call   0x19d6becba
   1400152bb:	inc    DWORD PTR [rax]
	...
   1400152e5:	add    BYTE PTR [rax],al
   1400152e7:	add    BYTE PTR [rax-0x3d004d4b],bh
   1400152ed:	mov    edi,0x7ca254bc
   1400152f2:	jae    0x1400152f3
   1400152f4:	(bad)  
   1400152f5:	mov    edx,0xbad4ffa9
   1400152fa:	test   eax,0x7a90b4ff
   1400152ff:	jmp    rbx
   140015301:	(bad)  
   140015302:	mov    esi,0xb8cae0ff
   140015307:	(bad)  
   140015308:	fmulp  st(1),st
   14001530a:	mov    dh,0xff
   14001530c:	fcmovb st,st(3)
   14001530e:	scas   al,BYTE PTR es:[rdi]
   14001530f:	(bad)  
   140015310:	fadd   st,st(0)
   140015312:	stos   DWORD PTR es:[rdi],eax
   140015313:	(bad)  
   140015314:	cmp    esp,DWORD PTR [rax-0x22c5004d]
   14001531a:	out    dx,al
   14001531b:	(bad)  
   14001531c:	cmp    al,0xe0
   14001531e:	icebp  
   14001531f:	inc    DWORD PTR [rdi+rbx*4-0x51]
   140015323:	dec    edi
   140015325:	mov    ah,0x9b
   140015327:	dec    ebp
   140015329:	mov    cl,0x98
   14001532b:	(bad)  
   14001532c:	jmp    0xda011c06
   140015331:	push   0x5d
   140015333:	(bad)  
   140015334:	out    dx,eax
   140015335:	in     eax,dx
   140015336:	jmp    0x140015337
   140015338:	cdq    
   140015339:	push   0x5d
   14001533b:	inc    DWORD PTR [rax]
	...
   140015365:	add    BYTE PTR [rax],al
   140015367:	add    dl,al
   140015369:	mov    edi,0x989a5abc
   14001536e:	xchg   ebp,eax
   14001536f:	(bad)  
   140015370:	jg     0x1400153ef
   140015372:	jnp    0x140015373
   140015374:	jbe    0x1400153e9
   140015376:	jb     0x140015377
   140015378:	(bad)  
   140015379:	mov    esp,0x94b8ffac
   14001537e:	jle    0x14001537f
   140015380:	int    0xb1
   140015382:	xchg   edi,eax
   140015383:	dec    edi
   140015385:	mov    ch,0x9b
   140015387:	dec    edi
   140015389:	mov    ah,0x9b
   14001538b:	call   rdx
   14001538d:	mov    ecx,0xbad3ffa1
   140015392:	movabs ds:0xb59e32ffabb6abff,al
   14001539b:	jmp    FWORD PTR [rdi]
   14001539d:	sahf   
   14001539e:	mov    ch,0xff
   1400153a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153a1:	mov    eax,0xc4daffb0
   1400153a6:	mov    al,0xff
   1400153a8:	(bad)  
   1400153aa:	mov    bh,0xff
   1400153ac:	lock (bad) 
   1400153af:	call   FWORD PTR [rcx-0xd00a296]
   1400153b5:	lock out dx,al
   1400153b7:	call   FWORD PTR [rcx+0xff5d6a]
	...
   1400153e5:	add    BYTE PTR [rax],al
   1400153e7:	add    BYTE PTR [rdx-0x38006a68],bl
   1400153ed:	leave  
   1400153ee:	retf   
   1400153ef:	jmp    QWORD PTR [rdx-0x26008c84]
   1400153f5:	shl    DWORD PTR [rcx-0x51412801],0xff
   1400153fc:	mov    bh,0x94
   1400153fe:	jle    0x1400153ff
   140015400:	loope  0x1400153d1
   140015402:	mov    ebp,0xc1d2e4ff
   140015407:	jmp    rbp
   140015409:	(bad)  
   14001540a:	ret    0xe6ff
   14001540d:	(bad)  
   14001540e:	ret    
   14001540f:	(bad)  
   140015410:	call   0x12a011bec
   140015415:	fmul   st,st(0)
   140015417:	(bad)  
   140015418:	(bad)  
   140015419:	fmul   st,st(0)
   14001541b:	(bad)  
   14001541c:	jmp    0x1400153f9
   14001541e:	retf   
   14001541f:	(bad)  
   140015420:	jmp    0x1400153fc
   140015422:	retf   0xebff
   140015425:	fcmovne st,st(3)
   140015427:	(bad)  
   140015428:	jmp    0x140015406
   14001542a:	int3   
   14001542b:	push   rax
   14001542d:	(bad)  
   14001542f:	call   FWORD PTR [rcx-0xa00a296]
   140015435:	repz icebp 
   140015437:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015465:	add    BYTE PTR [rax],al
   140015467:	add    BYTE PTR [rax-0x3d004d4b],bh
   14001546d:	mov    edi,0x7ca254bc
   140015472:	jae    0x140015473
   140015474:	fadd   st,st(0)
   140015476:	mov    al,0xff
   140015478:	fadd   st,st(0)
   14001547a:	mov    al,0xff
   14001547c:	mov    eax,0xeeff7f95
   140015481:	loopne 0x140015455
   140015483:	(bad)  
   140015484:	in     eax,dx
   140015485:	fmulp  st(7),st
   140015487:	(bad)  
   140015488:	in     eax,dx
   140015489:	fmulp  st(7),st
   14001548b:	(bad)  
   14001548c:	in     eax,dx
   14001548d:	fmulp  st(7),st
   14001548f:	(bad)  
   140015490:	in     eax,dx
   140015491:	fmulp  st(7),st
   140015493:	(bad)  
   140015494:	in     eax,dx
   140015495:	fmulp  st(7),st
   140015497:	(bad)  
   140015498:	in     eax,dx
   140015499:	fmulp  st(7),st
   14001549b:	(bad)  
   14001549c:	in     eax,dx
   14001549d:	fmulp  st(7),st
   14001549f:	(bad)  
   1400154a0:	in     eax,dx
   1400154a1:	fmulp  st(7),st
   1400154a3:	(bad)  
   1400154a4:	in     eax,dx
   1400154a5:	fmulp  st(7),st
   1400154a7:	(bad)  
   1400154a8:	in     eax,dx
   1400154a9:	fmulp  st(7),st
   1400154ab:	push   rax
   1400154ad:	(bad)  
   1400154af:	call   FWORD PTR [rcx-0x800a296]
   1400154b5:	cmc    
   1400154b6:	repz call FWORD PTR [rcx+0xff5d6a]
	...
   1400154e5:	add    BYTE PTR [rax],al
   1400154e7:	add    dl,al
   1400154e9:	mov    edi,0x989a5abc
   1400154ee:	xchg   ebp,eax
   1400154ef:	(bad)  
   1400154f0:	jg     0x14001556f
   1400154f2:	jnp    0x1400154f3
   1400154f4:	jbe    0x140015569
   1400154f6:	jb     0x1400154f7
   1400154f8:	fld    st(1)
   1400154fa:	mov    cl,0xff
   1400154fc:	mov    ecx,0xefff8197
   140015501:	loop   0x1400154d8
   140015503:	(bad)  
   140015504:	in     eax,dx
   140015505:	(bad)  
   140015507:	(bad)  
   140015508:	in     eax,dx
   140015509:	(bad)  
   14001550b:	(bad)  
   14001550c:	in     al,dx
   14001550d:	(bad)  
   14001550f:	(bad)  
   140015510:	in     al,dx
   140015511:	(bad)  
   140015513:	(bad)  
   140015514:	in     al,dx
   140015515:	(bad)  
   140015517:	(bad)  
   140015518:	in     al,dx
   140015519:	(bad)  
   14001551b:	(bad)  
   14001551c:	in     al,dx
   14001551d:	(bad)  
   14001551f:	(bad)  
   140015520:	in     al,dx
   140015521:	(bad)  
   140015523:	(bad)  
   140015524:	in     al,dx
   140015525:	(bad)  
   140015527:	(bad)  
   140015528:	jmp    0x115011f06
   14001552d:	mov    ebx,0x82a8ffab
   140015532:	jb     0x140015533
   140015534:	stc    
   140015535:	div    ebp
   140015537:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015565:	add    BYTE PTR [rax],al
   140015567:	add    BYTE PTR [rdx-0x38006a68],bl
   14001556d:	leave  
   14001556e:	retf   
   14001556f:	jmp    QWORD PTR [rdx-0x26008c84]
   140015575:	shl    DWORD PTR [rcx-0x4e3e2601],0xff
   14001557c:	mov    edx,0xd9ff8298
   140015581:	ret    0xffb3
   140015584:	(bad)  
   140015585:	mov    edi,0xabc8ffb1
   14001558a:	popf   
   14001558b:	inc    esi
   14001558d:	test   al,0x9a
   14001558f:	(bad)  
   140015590:	mov    ecx,0xb6ff8896
   140015595:	xchg   edx,eax
   140015596:	test   edi,edi
   140015598:	mov    DWORD PTR [rsi+0x76],esi
   14001559b:	dec    DWORD PTR [rsp+rsi*2+0x6a99ff71]
   1400155a2:	pop    rbp
   1400155a3:	call   FWORD PTR [rax-0x57009f94]
   1400155a9:	(bad)  
   1400155aa:	jb     0x1400155ab
   1400155ac:	ret    0x9ea6
   1400155af:	(bad)  
   1400155b0:	in     al,dx
   1400155b1:	in     al,0xe2
   1400155b3:	(bad)  
   1400155b4:	(bad)  
   1400155b6:	sar    bh,1
   1400155b8:	cdq    
   1400155b9:	push   0x5d
   1400155bb:	inc    DWORD PTR [rax]
	...
   1400155e5:	add    BYTE PTR [rax],al
   1400155e7:	add    BYTE PTR [rax-0x3d004d4b],bh
   1400155ed:	mov    edi,0x739e54bc
   1400155f2:	push   0x6776a2ff
   1400155f7:	call   FWORD PTR [rcx-0x6800a296]
   1400155fd:	imul   esp,DWORD PTR [rax-0x1],0xffffff8e
   140015601:	jnp    0x14001567d
   140015603:	jmp    QWORD PTR [rbp-0x53006c6b]
   140015609:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001560a:	test   eax,0xbebcc2ff
   14001560f:	dec    edi
   140015611:	int    0xcf
   140015613:	jmp    rbx
   140015615:	(bad)  
   140015617:	(bad)  
   140015618:	in     al,dx
   140015619:	(bad)  
   14001561a:	(bad)  
   14001561b:	push   rdi
   14001561d:	cmc    
   14001561e:	hlt    
   14001561f:	(bad)  
   140015620:	stc    
   140015621:	cli    
   140015622:	cli    
   140015623:	(bad)  
   140015624:	(bad)  
   140015625:	(bad)  
   140015626:	(bad)  
   140015627:	(bad)  
   140015628:	in     al,dx
   140015629:	in     al,0xe2
   14001562b:	(bad)  
   14001562c:	fcompp 
   14001562e:	fsin   
   140015630:	(bad)  
   140015631:	iret   
   140015632:	iret   
   140015633:	dec    al
   140015635:	scas   al,BYTE PTR es:[rdi]
   140015636:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015637:	mov    esp,0xcc5d6a99
	...
   140015668:	ret    0xbcbf
   14001566b:	pop    rdx
   14001566c:	(bad)  
   14001566d:	cwde   
   14001566e:	xchg   ebp,eax
   14001566f:	inc    DWORD PTR [rdx-0x2a008785]
   140015675:	retf   
   140015676:	(bad)  
   140015677:	jmp    rsi
   140015679:	fstp   st(3)
   14001567b:	(bad)  
   14001567c:	jmp    0x14001565f
   14001567e:	(bad)  
   140015680:	(bad)  
   140015681:	ret    
   140015682:	mov    esi,0xbbbfd1ff
   140015687:	inc    esi
   140015689:	mov    cl,0xab
   14001568b:	push   QWORD PTR [rbp-0x4e026763]
   140015691:	pushf  
   140015692:	cwde   
   140015693:	jmp    QWORD PTR [rbx-0x5d209287]
   140015699:	ja     0x140015706
   14001569b:	fistp  WORD PTR [rsi+rbp*2+0x6a99e761]
   1400156a2:	pop    rbp
   1400156a3:	call   FWORD PTR [rcx-0x6600a296]
   1400156a9:	push   0x5d
   1400156ab:	fcomp  DWORD PTR [rcx-0x6633a296]
   1400156b1:	push   0x5d
   1400156b3:	rcr    BYTE PTR [rcx-0x6666a296],0x6a
   1400156ba:	pop    rbp
   1400156bb:	sldt   WORD PTR [rax]
	...
   1400156ea:	add    BYTE PTR [rax],al
   1400156ec:	ret    0xbcbf
   1400156ef:	pop    rdx
   1400156f0:	mov    ebx,0xa4c9bbbc
   1400156f5:	lea    eax,[rsi+0x777b93ff]
   1400156fb:	dec    DWORD PTR [rcx-0x66008b8b]
   140015701:	push   0x5d
   140015703:	pushf  
   140015704:	cdq    
   140015705:	push   0x5d
   140015707:	cdq    
   140015708:	cdq    
   140015709:	push   0x5d
   14001570b:	xchg   DWORD PTR [rcx-0x6699a296],ebx
   140015711:	push   0x5d
   140015713:	cwd    
   140015715:	push   0x5d
   140015717:	cmp    al,0x99
   140015719:	push   0x5d
   14001571b:	xor    ebx,DWORD PTR [rcx+0x245d6a]
	...
   1400157d5:	add    BYTE PTR [rax],al
   1400157d7:	add    bh,bh
   1400157d9:	jmp    rax
   1400157db:	(bad)  
   1400157dc:	(bad)  
   1400157dd:	inc    BYTE PTR [rax]
   1400157df:	(bad)  
   1400157e0:	inc    eax
   1400157e2:	add    BYTE PTR [rbx],al
   1400157e4:	cld    
   1400157e5:	add    BYTE PTR [rax],al
   1400157e7:	add    esp,edi
   1400157e9:	add    BYTE PTR [rax],al
   1400157eb:	add    eax,esi
   1400157ed:	add    BYTE PTR [rax],al
   1400157ef:	add    eax,esi
   1400157f1:	add    BYTE PTR [rax],al
   1400157f3:	add    eax,esi
   1400157f5:	add    BYTE PTR [rax],al
   1400157f7:	add    esi,eax
   1400157f9:	add    BYTE PTR [rax],al
   1400157fb:	(bad)  
   1400157fc:	lock add BYTE PTR [rax],al
   1400157ff:	jg     0x1400157f1
   140015801:	add    BYTE PTR [rax],al
   140015803:	jg     0x1400157f5
   140015805:	add    BYTE PTR [rax],al
   140015807:	jg     0x1400157f9
   140015809:	add    BYTE PTR [rax],al
   14001580b:	jg     0x1400157fd
   14001580d:	add    BYTE PTR [rax],al
   14001580f:	jg     0x140015801
   140015811:	add    BYTE PTR [rax],al
   140015813:	jg     0x140015805
   140015815:	add    BYTE PTR [rax],al
   140015817:	jg     0x140015809
   140015819:	add    BYTE PTR [rax],al
   14001581b:	jg     0x14001580d
   14001581d:	add    BYTE PTR [rax],al
   14001581f:	jg     0x140015811
   140015821:	add    BYTE PTR [rax],al
   140015823:	jg     0x140015815
   140015825:	add    BYTE PTR [rax],al
   140015827:	jg     0x140015819
   140015829:	add    BYTE PTR [rax],al
   14001582b:	jg     0x14001581d
   14001582d:	add    BYTE PTR [rax],al
   14001582f:	jg     0x140015821
   140015831:	add    BYTE PTR [rax],al
   140015833:	jg     0x140015825
   140015835:	add    BYTE PTR [rax],al
   140015837:	jg     0x140015829
   140015839:	add    BYTE PTR [rax],al
   14001583b:	jg     0x14001582d
   14001583d:	add    BYTE PTR [rax],al
   14001583f:	jg     0x140015831
   140015841:	add    BYTE PTR [rax],al
   140015843:	jg     0x140015835
   140015845:	add    BYTE PTR [rax],al
   140015847:	jg     0x140015839
   140015849:	add    BYTE PTR [rax],al
   14001584b:	jg     0x14001583d
   14001584d:	add    BYTE PTR [rax],al
   14001584f:	jg     0x140015849
   140015851:	add    BYTE PTR [rdi],bh
   140015853:	(bad)  
   140015854:	(bad)  
   140015855:	(bad)  
   140015856:	(bad)  
   140015857:	jmp    FWORD PTR [rax]
   140015859:	add    BYTE PTR [rax],al
   14001585b:	add    BYTE PTR [rax],bl
   14001585d:	add    BYTE PTR [rax],al
   14001585f:	add    BYTE PTR [rax],dh
   140015861:	add    BYTE PTR [rax],al
   140015863:	add    BYTE PTR [rcx],al
   140015865:	add    BYTE PTR [rax],ah
   140015867:	add    BYTE PTR [rax],al
   140015869:	add    BYTE PTR [rax],al
   14001586b:	add    BYTE PTR [rax+0x9],ah
	...
   1400158a2:	add    BYTE PTR [rax],al
   1400158a4:	test   DWORD PTR [rbx+0x50],ebx
   1400158a7:	(bad)  
   1400158a8:	test   BYTE PTR [rdx+0x4f],bl
   1400158ab:	adc    al,BYTE PTR [rdi-0x77e1ada3]
   1400158b1:	pop    rsp
   1400158b2:	push   rdx
   1400158b3:	rex.WB mov fs,WORD PTR [r8+rbx*2-0x75]
   1400158b8:	xchg   ebx,eax
   1400158b9:	imul   ebx,DWORD PTR [rbp-0x1a],0xffffff96
   1400158bd:	outs   dx,DWORD PTR ds:[rsi]
   1400158be:	(bad)  
   1400158bf:	in     eax,dx
   1400158c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400158c1:	xor    DWORD PTR [rcx-0x10],0xff5b6795
	...
   1400158f8:	test   BYTE PTR [rdx+0x4f],bl
   1400158fb:	or     DWORD PTR [rbp-0x7de6afa5],eax
   140015901:	pop    rdx
   140015902:	push   rax
   140015903:	rex.WX mov spl,BYTE PTR [rdx+0x57]
   140015907:	xchg   esp,eax
   140015908:	(bad)  
   140015909:	pop    dx
   14001590b:	(bad)  
   14001590c:	xchg   esp,eax
   14001590d:	imul   ebx,DWORD PTR [rsi-0xf],0xffffff99
   140015911:	jno    0x140015977
   140015913:	clc    
   140015914:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015915:	jle    0x140015987
   140015917:	std    
   140015918:	mov    edi,0xd2ff8b9d
   14001591d:	mov    dl,0x9f
   14001591f:	(bad)  
   140015920:	fstp   TBYTE PTR [rdx+0x6998ffa7]
   140015926:	pop    rsp
   140015927:	jmp    FWORD PTR [rdx+0xf59a9e]
	...
   140015951:	add    BYTE PTR [rax],al
   140015953:	add    BYTE PTR [rbx-0x6a6aa598],dl
   140015959:	ins    DWORD PTR es:[rdi],dx
   14001595a:	(bad)  
   14001595b:	int    0x94
   14001595d:	imul   ebx,DWORD PTR [rcx-0x1],0xff6a7599
   140015964:	mov    bh,0x95
   140015966:	test   edi,edi
   140015968:	(bad)  
   140015969:	scas   al,BYTE PTR es:[rdi]
   14001596a:	fwait
   14001596b:	(bad)  
   14001596c:	fnstsw WORD PTR [rsi-0x38190056]
   140015972:	mov    bl,0xff
   140015974:	jmp    0x125011043
   140015979:	(bad)  
   14001597a:	mov    cl,0xff
   14001597c:	fstp   TBYTE PTR [rbx-0x3617005b]
   140015982:	mov    ch,0xff
   140015984:	cdq    
   140015985:	push   0x5d
   140015987:	inc    ecx
   140015989:	mov    edi,0x6a99ffbd
   14001598e:	pop    rbp
   14001598f:	inc    DWORD PTR [rax]
	...
   1400159ad:	add    BYTE PTR [rax],al
   1400159af:	add    BYTE PTR [rdi+rdi*2-0x77],ch
   1400159b3:	mov    WORD PTR [rbp-0x5500a498],ss
   1400159b9:	sub    DWORD PTR [rdi-0x1],0xffffff9b
   1400159bd:	outs   dx,BYTE PTR ds:[rsi]
   1400159be:	pop    rsp
   1400159bf:	(bad)  
   1400159c0:	fstp   TBYTE PTR [rsi-0x3a1b0058]
   1400159c6:	mov    cl,0xff
   1400159c8:	ffreep st(0)
   1400159ca:	stos   BYTE PTR es:[rdi],al
   1400159cb:	(bad)  
   1400159cc:	fidivr DWORD PTR [rdx-0x4b2a005c]
   1400159d2:	sahf   
   1400159d3:	call   rax
   1400159d5:	mov    al,0x98
   1400159d7:	dec    edx
   1400159d9:	stos   BYTE PTR es:[rdi],al
   1400159da:	xchg   ecx,eax
   1400159db:	inc    esp
   1400159dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400159de:	mov    edi,edi
   1400159e0:	loopne 0x1400159a2
   1400159e2:	stos   BYTE PTR es:[rdi],al
   1400159e3:	call   FWORD PTR [rcx-0x3e00a296]
   1400159e9:	mov    edi,0x6a99ffbd
   1400159ee:	pop    rbp
   1400159ef:	inc    DWORD PTR [rax]
	...
   140015a09:	add    BYTE PTR [rax],al
   140015a0b:	add    dl,al
   140015a0d:	mov    edi,0x81815abc
   140015a12:	cmp    edi,0xff666a6a
   140015a18:	mov    ecx,0x9cff7b92
   140015a1d:	outs   dx,DWORD PTR ds:[rsi]
   140015a1e:	pop    rdi
   140015a1f:	call   FWORD PTR [rdx+0x48ffa487]
   140015a25:	(bad)  
   140015a26:	sahf   
   140015a27:	jmp    QWORD PTR [rcx]
   140015a29:	(bad)  
   140015a2a:	popf   
   140015a2b:	push   QWORD PTR [rbx]
   140015a2d:	sub    edx,DWORD PTR [rdi+rdi*8-0x799d89]
   140015a34:	mov    bl,0x93
   140015a36:	jle    0x140015a37
   140015a38:	mov    ebp,0xbfff7f9b
   140015a3d:	sahf   
   140015a3e:	cmp    edi,0xffffffea
   140015a41:	retf   
   140015a42:	mov    bh,0xff
   140015a44:	cdq    
   140015a45:	push   0x5d
   140015a47:	inc    ecx
   140015a49:	mov    edi,0x6a99ffbd
   140015a4e:	pop    rbp
   140015a4f:	inc    DWORD PTR [rax]
	...
   140015a69:	add    BYTE PTR [rax],al
   140015a6b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140015a71:	mov    edi,0x6a995abc
   140015a76:	pop    rbp
   140015a77:	(bad)  
   140015a78:	mov    ecx,0x78ff7b92
   140015a7d:	pop    rax
   140015a7e:	jne    0x140015a7f
   140015a80:	cmp    dh,BYTE PTR [rdi]
   140015a82:	scas   eax,DWORD PTR es:[rdi]
   140015a83:	dec    DWORD PTR [rbp+rcx*2-0x3f]
   140015a87:	call   FWORD PTR [rsi]
   140015a89:	(bad)  
   140015a8a:	mov    ecx,0xc13b3cff
   140015a8f:	jmp    FWORD PTR [rsi]
   140015a91:	sub    eax,0x697affaa
   140015a96:	cdq    
   140015a97:	call   rbx
   140015a99:	mov    ch,0xa0
   140015a9b:	call   rbx
   140015a9d:	mov    ch,0x9f
   140015a9f:	(bad)  
   140015aa0:	(bad)  
   140015aa1:	retf   
   140015aa2:	mov    bh,0xff
   140015aa4:	cdq    
   140015aa5:	push   0x5d
   140015aa7:	inc    ecx
   140015aa9:	mov    edi,0x6a99ffbd
   140015aae:	pop    rbp
   140015aaf:	inc    DWORD PTR [rax]
	...
   140015ac9:	add    BYTE PTR [rax],al
   140015acb:	add    dl,al
   140015acd:	mov    edi,0x81815abc
   140015ad2:	cmp    edi,0xff666a6a
   140015ad8:	mov    ecx,0x45ff7b92
   140015add:	ss xchg ebp,eax
   140015adf:	call   QWORD PTR [rdx+0x52]
   140015ae2:	(bad)  
   140015ae3:	call   rbx
   140015ae5:	shl    ebp,cl
   140015ae7:	jmp    FWORD PTR [rdx+0x6a]
   140015aea:	ret    
   140015aeb:	push   QWORD PTR [rbx+0x6affdcb4]
   140015af1:	imul   ecx,ebp,0x9a2226ff
   140015af7:	dec    edi
   140015af9:	mov    bl,0x9c
   140015afb:	dec    esp
   140015afd:	mov    al,0x97
   140015aff:	(bad)  
   140015b00:	(bad)  
   140015b01:	int3   
   140015b02:	mov    eax,0x5d6a99ff
   140015b07:	inc    ebx
   140015b09:	sar    DWORD PTR [rdi+0x5d6a99ff],0xff
	...
   140015b2c:	(bad)  
   140015b2d:	cwde   
   140015b2e:	xchg   ebp,eax
   140015b2f:	inc    edx
   140015b31:	mov    edi,0x6a995abc
   140015b36:	pop    rbp
   140015b37:	(bad)  
   140015b38:	mov    edx,0x33ff7e94
   140015b3d:	lods   al,BYTE PTR cs:[rsi]
   140015b3f:	push   QWORD PTR [rbx+rsi*1]
   140015b42:	sar    bh,0x72
   140015b45:	jb     0x140015b26
   140015b47:	(bad)  
   140015b48:	(bad)  
   140015b49:	(bad)  
   140015b4a:	(bad)  
   140015b4b:	jmp    QWORD PTR [rbx+0x1dffd6a3]
   140015b51:	sbb    eax,0x1313ffb7
   140015b56:	movabs ds:0x99b2cdff96afcbff,al
   140015b5f:	(bad)  
   140015b60:	jmp    0x140015b2f
   140015b62:	mov    ebx,0x5d6a99ff
   140015b67:	inc    esi
   140015b69:	(bad)  
   140015b6d:	push   0x5d
   140015b6f:	inc    DWORD PTR [rax]
	...
   140015b89:	add    BYTE PTR [rax],al
   140015b8b:	add    dl,al
   140015b8d:	mov    edi,0x81815abc
   140015b92:	cmp    edi,0xff666a6a
   140015b98:	mov    esp,0x43ff8097
   140015b9d:	cmp    BYTE PTR [rcx-0x33999801],ah
   140015ba3:	(bad)  
   140015ba4:	mov    esi,0x8fffe7bf
   140015ba9:	(bad)  
   140015baa:	out    0xff,eax
   140015bac:	mov    ecx,0x64fff5b9
   140015bb1:	fs leave 
   140015bb3:	jmp    QWORD PTR [rip+0xffffffffdbffa122]        # 0x11c00fcdb
   140015bb9:	shr    DWORD PTR [rbp-0x523e2401],0xff
   140015bc0:	jmp    0x140015b91
   140015bc2:	mov    esp,0x5d6a99ff
   140015bc7:	dec    ecx
   140015bc9:	mov    ebp,0x5d6a99ff
   140015bcf:	inc    DWORD PTR [rax]
	...
   140015be9:	add    BYTE PTR [rax],al
   140015beb:	add    BYTE PTR [rdx-0x3d006a68],bl
   140015bf1:	mov    edi,0x6a995abc
   140015bf6:	pop    rbp
   140015bf7:	(bad)  
   140015bf8:	mov    edi,0x72ff8499
   140015bfd:	push   rbp
   140015bfe:	cmp    bh,0x51
   140015c01:	push   rax
   140015c02:	ret    
   140015c03:	call   QWORD PTR [rax+0x3affda90]
   140015c09:	cmp    al,bh
   140015c0b:	jmp    FWORD PTR [rdi+0x6f]
   140015c0e:	(bad)  
   140015c0f:	call   QWORD PTR [rcx+0x51]
   140015c12:	mov    esp,0xa46571ff
   140015c17:	call   rdx
   140015c19:	mov    bh,0xa2
   140015c1b:	dec    edi
   140015c1d:	mov    ah,0x9c
   140015c1f:	(bad)  
   140015c20:	jmp    0x140015bf3
   140015c22:	mov    esi,0x5d6a99ff
   140015c27:	dec    esi
   140015c29:	retf   
   140015c2a:	leave  
   140015c2b:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015c49:	add    BYTE PTR [rax],al
   140015c4b:	add    dl,al
   140015c4d:	mov    edi,0x81815abc
   140015c52:	cmp    edi,0xff666a6a
   140015c58:	rcr    DWORD PTR [rsi+0x729dff88],0x65
   140015c5f:	inc    DWORD PTR [rdi+0x45ffaa78]
   140015c65:	(bad)  
   140015c66:	mov    cl,0xff
   140015c68:	(bad)  
   140015c69:	xor    eax,0x3338ffb7
   140015c6e:	stos   BYTE PTR es:[rdi],al
   140015c6f:	jmp    FWORD PTR [rsi+0x5f]
   140015c72:	sahf   
   140015c73:	(bad)  
   140015c74:	mov    edx,0xccff94a0
   140015c79:	mov    al,0x96
   140015c7b:	dec    edi
   140015c7d:	mov    bl,0x9a
   140015c7f:	(bad)  
   140015c80:	in     al,dx
   140015c81:	rol    cl,cl
   140015c83:	call   FWORD PTR [rcx-0x2e00a296]
   140015c89:	iret   
   140015c8a:	(bad)  
   140015c8b:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015ca9:	add    BYTE PTR [rax],al
   140015cab:	add    BYTE PTR [rdx-0x3d006a68],bl
   140015cb1:	mov    edi,0x7ca25abc
   140015cb6:	jae    0x140015cb7
   140015cb8:	ret    
   140015cb9:	movabs ds:0xb4ceff6578a5ff8d,al
   140015cc2:	fwait
   140015cc3:	call   rax
   140015cc5:	mov    dh,0x9c
   140015cc7:	call   rbx
   140015cc9:	mov    ecx,0xbed7ffa2
   140015cce:	test   eax,0xb0c4dcff
   140015cd3:	(bad)  
   140015cd4:	faddp  st(6),st
   140015cd6:	mov    bl,0xff
   140015cd8:	faddp  st(6),st
   140015cda:	mov    ah,0xff
   140015cdc:	loopne 0x140015ca4
   140015cde:	mov    ah,0xff
   140015ce0:	in     al,dx
   140015ce1:	(bad)  
   140015ce2:	(bad)  
   140015ce3:	call   FWORD PTR [rcx-0x2900a296]
   140015ce9:	(bad)  
   140015cea:	sar    bh,cl
   140015cec:	cdq    
   140015ced:	push   0x5d
   140015cef:	inc    DWORD PTR [rax]
	...
   140015d09:	add    BYTE PTR [rax],al
   140015d0b:	add    dl,al
   140015d0d:	mov    edi,0x81815abc
   140015d12:	cmp    edi,0xff666a6a
   140015d18:	(bad)  
   140015d19:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015d1a:	xchg   ecx,eax
   140015d1b:	jmp    QWORD PTR [rdi-0x1e009783]
   140015d21:	retf   0xffb6
   140015d24:	rex.WXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015d26:	mov    bh,0xff
   140015d28:	adc    bl,BYTE PTR [rax-0x67ed0049]
   140015d2e:	mov    bh,0xff
   140015d30:	adc    bl,BYTE PTR [rax-0x67ed0049]
   140015d36:	mov    bh,0xff
   140015d38:	adc    bl,BYTE PTR [rax-0x67ed0049]
   140015d3e:	mov    bh,0xff
   140015d40:	rex.WRXB test rax,0x6a99ffbb
   140015d46:	pop    rbp
   140015d47:	(bad)  
   140015d48:	fcmovnu st,st(1)
   140015d4a:	(bad)  
   140015d4b:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015d69:	add    BYTE PTR [rax],al
   140015d6b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140015d71:	mov    edi,0x7ca25abc
   140015d76:	jae    0x140015d77
   140015d78:	leave  
   140015d79:	test   eax,0x80aaff96
   140015d7e:	ins    BYTE PTR es:[rdi],dx
   140015d7f:	call   rdx
   140015d81:	mov    bh,0xa0
   140015d83:	jmp    QWORD PTR [rbx+rbx*4]
   140015d86:	mov    ah,0xff
   140015d88:	and    eax,0x2affe5c7
   140015d8d:	(bad)  
   140015d8f:	call   FWORD PTR [rsi]
   140015d91:	test   DWORD PTR [rdi+rdi*8-0xfbfbfe],edx
   140015d98:	cs loope 0x140015d98
   140015d9b:	jmp    QWORD PTR [rip+0x25ffe4c6]        # 0x166014267
   140015da1:	sahf   
   140015da2:	mov    ecx,0x5d6a99ff
   140015da7:	(bad)  
   140015da8:	(bad)  
   140015daa:	fdiv   st(7),st
   140015dac:	cdq    
   140015dad:	push   0x5d
   140015daf:	inc    DWORD PTR [rax]
	...
   140015dc9:	add    BYTE PTR [rax],al
   140015dcb:	add    dl,al
   140015dcd:	mov    edi,0x81815abc
   140015dd2:	cmp    edi,0xff666a6a
   140015dd8:	int3   
   140015dd9:	scas   al,BYTE PTR es:[rdi]
   140015dda:	(bad)  
   140015ddb:	jmp    FWORD PTR [rbp-0x2a00907c]
   140015de1:	mov    ebp,0xae89ffa6
   140015de6:	lods   eax,DWORD PTR ds:[rsi]
   140015de7:	jmp    QWORD PTR [rip+0x2affe5c7]        # 0x16b0143b4
   140015ded:	(bad)  
   140015def:	jmp    FWORD PTR [rdi]
   140015df1:	retf   0xffdf
   140015df4:	and    bl,BYTE PTR [rbp-0x1ed10051]
   140015dfa:	std    
   140015dfb:	jmp    QWORD PTR [rip+0xffffffff80ffe4c6]        # 0xc10142c7
   140015e01:	mov    edx,0x6a99ffc3
   140015e06:	pop    rbp
   140015e07:	jmp    rsp
   140015e09:	loop   0x140015deb
   140015e0b:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015e29:	add    BYTE PTR [rax],al
   140015e2b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140015e31:	mov    edi,0x7ca25abc
   140015e36:	jae    0x140015e37
   140015e38:	(bad)  
   140015e39:	mov    dl,0x9f
   140015e3b:	jmp    FWORD PTR [rdi-0x1c008c77]
   140015e41:	(bad)  
   140015e42:	mov    esi,0xb8c4c9ff
   140015e47:	jmp    QWORD PTR [rcx]
   140015e49:	stos   BYTE PTR es:[rdi],al
   140015e4a:	(bad)  
   140015e4b:	inc    DWORD PTR [rsi-0xe]
   140015e4e:	(bad)  
   140015e4f:	jmp    FWORD PTR [rip+0xbffada2]        # 0x14c010bf7
   140015e55:	and    BYTE PTR [rax],ah
   140015e57:	inc    DWORD PTR [rdx-0x11]
   140015e5a:	(bad)  
   140015e5b:	call   FWORD PTR [rsi]
   140015e5d:	test   eax,0xd4d2ffc4
   140015e62:	int3   
   140015e63:	call   FWORD PTR [rcx-0x1600a296]
   140015e69:	out    0xe5,al
   140015e6b:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015e89:	add    BYTE PTR [rax],al
   140015e8b:	add    dl,al
   140015e8d:	mov    edi,0x81815abc
   140015e92:	cmp    edi,0xff666a6a
   140015e98:	shl    DWORD PTR [rsi-0x734d005c],1
   140015e9e:	ja     0x140015e9f
   140015ea0:	fadd   st(5),st
   140015ea2:	mov    cl,0xff
   140015ea4:	fld    st(1)
   140015ea6:	lods   eax,DWORD PTR ds:[rsi]
   140015ea7:	call   FWORD PTR [rcx-0x5b]
   140015eaa:	mov    cl,0xff
   140015eac:	cmp    bl,bh
   140015eae:	icebp  
   140015eaf:	jmp    FWORD PTR [rdi]
   140015eb1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015eb2:	lods   eax,DWORD PTR ds:[rsi]
   140015eb3:	inc    DWORD PTR [rdi]
   140015eb5:	adc    al,0x14
   140015eb7:	(bad)  
   140015eb8:	cmp    ah,ah
   140015eba:	clc    
   140015ebb:	call   FWORD PTR [rsi-0x5c]
   140015ebe:	lods   eax,DWORD PTR ds:[rsi]
   140015ebf:	(bad)  
   140015ec0:	out    dx,eax
   140015ec1:	fst    st(1)
   140015ec3:	call   FWORD PTR [rcx-0x1300a296]
   140015ec9:	jmp    0x140015eb3
   140015ecb:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015ee9:	add    BYTE PTR [rax],al
   140015eeb:	add    BYTE PTR [rdx-0x3d006a68],bl
   140015ef1:	mov    edi,0x7ca25abc
   140015ef6:	jae    0x140015ef7
   140015ef8:	sar    DWORD PTR [rcx-0x6f4b0058],cl
   140015efe:	jnp    0x140015eff
   140015f00:	iret   
   140015f01:	mov    ch,0x9c
   140015f03:	call   rdx
   140015f05:	mov    eax,0xaf8bffa1
   140015f0a:	mov    al,0xff
   140015f0c:	and    al,0xb5
   140015f0e:	(bad)  
   140015f0f:	push   QWORD PTR [rbx]
   140015f11:	mov    dh,0xc3
   140015f13:	jmp    FWORD PTR [rip+0x23ffaea3]        # 0x164010dbc
   140015f19:	mov    ch,0xce
   140015f1b:	jmp    QWORD PTR [rbp+rax*8-0x210f003c]
   140015f22:	sar    bh,cl
   140015f24:	cdq    
   140015f25:	push   0x5d
   140015f27:	push   rcx
   140015f29:	out    dx,al
   140015f2a:	in     al,dx
   140015f2b:	call   FWORD PTR [rcx+0xff5d6a]
	...
   140015f49:	add    BYTE PTR [rax],al
   140015f4b:	add    dl,al
   140015f4d:	mov    edi,0x81815abc
   140015f52:	cmp    edi,0xff666a6a
   140015f58:	(bad)  
   140015f59:	mov    ebp,0x94b7ffac
   140015f5e:	jge    0x140015f5f
   140015f60:	out    dx,al
   140015f61:	loopne 0x140015f35
   140015f63:	(bad)  
   140015f64:	in     eax,dx
   140015f65:	fmulp  st(7),st
   140015f67:	(bad)  
   140015f68:	in     eax,dx
   140015f69:	fmulp  st(7),st
   140015f6b:	inc    DWORD PTR [rax-0x59]
   140015f6e:	mov    esp,0xeedd3aff
   140015f73:	(bad)  
   140015f74:	cmp    al,0xe0
   140015f76:	icebp  
   140015f77:	dec    DWORD PTR [rdx+rbp*4-0x43]
   140015f7b:	(bad)  
   140015f7c:	in     eax,dx
   140015f7d:	fmulp  st(7),st
   140015f7f:	push   rax
   140015f81:	(bad)  
   140015f83:	call   FWORD PTR [rcx-0xb00a296]
   140015f89:	icebp  
   140015f8a:	lock call FWORD PTR [rcx+0xff5d6a]
	...
   140015fa9:	add    BYTE PTR [rax],al
   140015fab:	add    BYTE PTR [rdx-0x3d006a68],bl
   140015fb1:	mov    edi,0x7ca25abc
   140015fb6:	jae    0x140015fb7
   140015fb8:	xlat   BYTE PTR ds:[rbx]
   140015fb9:	mov    edi,0x96b9ffaf
   140015fbe:	cmp    edi,0xffd6e4f1
   140015fc4:	in     eax,dx
   140015fc5:	(bad)  
   140015fc7:	(bad)  
   140015fc8:	in     eax,dx
   140015fc9:	fmulp  st(7),st
   140015fcb:	(bad)  
   140015fcc:	mov    esi,0x36ffcbd0
   140015fd1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015fd2:	mov    ebx,0xbaa232ff
   140015fd7:	push   QWORD PTR [rbx+rcx*8-0x22130038]
   140015fde:	(bad)  
   140015fdf:	(bad)  
   140015fe0:	out    dx,al
   140015fe1:	(bad)  
   140015fe3:	call   FWORD PTR [rcx-0x800a296]
   140015fe9:	cmc    
   140015fea:	repz call FWORD PTR [rcx+0xff5d6a]
	...
   140016009:	add    BYTE PTR [rax],al
   14001600b:	add    dl,al
   14001600d:	mov    edi,0x81815abc
   140016012:	cmp    edi,0xff666a6a
   140016018:	fld    st(1)
   14001601a:	mov    cl,0xff
   14001601c:	mov    edx,0xefff8298
   140016021:	loopne 0x140015ff4
   140016023:	(bad)  
   140016024:	in     al,dx
   140016025:	(bad)  
   140016027:	(bad)  
   140016028:	in     al,dx
   140016029:	fmul   st(5),st
   14001602b:	(bad)  
   14001602c:	jmp    0x140016009
   14001602e:	int3   
   14001602f:	jmp    rdi
   140016031:	fmul   st,st(1)
   140016033:	call   rsp
   140016035:	shl    DWORD PTR [rbx-0x5f513701],0xff
   14001603c:	mov    ah,0x96
   14001603e:	mov    bh,bh
   140016040:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016041:	xor    DWORD PTR [rbp-0x1],0xffffff93
   140016045:	push   0x5d
   140016047:	(bad)  
   140016048:	stc    
   140016049:	clc    
   14001604a:	idiv   bh
   14001604c:	cdq    
   14001604d:	push   0x5d
   14001604f:	inc    DWORD PTR [rax]
	...
   140016069:	add    BYTE PTR [rax],al
   14001606b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140016071:	mov    edi,0x7ca25abc
   140016076:	jae    0x140016077
   140016078:	mov    eax,0xafff8494
   14001607d:	mov    WORD PTR [rax-0x1],?
   140016080:	stos   BYTE PTR es:[rdi],al
   140016081:	mov    es,WORD PTR [rbx+0x7781a0ff]
   140016087:	jmp    FWORD PTR [rax-0x56007f77]
   14001608d:	mov    DWORD PTR [rcx-0x766e5101],eax
   140016093:	(bad)  
   140016094:	mov    edi,0xcbffa5aa
   140016099:	mov    eax,0xcddbffb2
   14001609e:	leave  
   14001609f:	(bad)  
   1400160a0:	fcmove st,st(4)
   1400160a2:	enter  0xd9ff,0xce
   1400160a6:	retf   0xbeff
   1400160a9:	test   al,0xa1
   1400160ab:	sti    
   1400160ac:	xchg   ebp,eax
   1400160ad:	push   0xff5b
	...
   1400160ca:	add    BYTE PTR [rax],al
   1400160cc:	ret    0xbcbf
   1400160cf:	pop    rdx
   1400160d0:	add    DWORD PTR [rcx+0x6a6aff81],0x8eafff66
   1400160da:	test   edi,edi
   1400160dc:	fwait
   1400160dd:	js     0x14001614e
   1400160df:	(bad)  
   1400160e0:	(bad)  
   1400160e2:	sar    edi,1
   1400160e4:	out    0xe0,eax
   1400160e6:	(bad)  
   1400160e8:	rol    edi,cl
   1400160ea:	(bad)  
   1400160eb:	dec    ecx
   1400160ed:	mov    ecx,0xa5bdffb4
   1400160f2:	sahf   
   1400160f3:	sti    
   1400160f4:	mov    bl,0x96
   1400160f6:	(bad)  
   1400160f7:	(bad)  
   1400160f8:	test   al,0x89
   1400160fa:	jg     0x1400160fb
   1400160fc:	pushf  
   1400160fd:	js     0x14001616d
   1400160ff:	call   FWORD PTR [rsi-0x63068f86]
   140016105:	jns    0x140016175
   140016107:	repz cwde 
   140016109:	outs   dx,DWORD PTR ds:[rsi]
   14001610a:	fs leave 
   14001610c:	xchg   ebx,eax
   14001610d:	addr32 pop rbx
   14001610f:	jbe    0x140016111
	...
   14001612d:	add    BYTE PTR [rax],al
   14001612f:	add    dl,al
   140016131:	mov    edi,0xa5b05abc
   140016136:	movabs eax,ds:0x707797f69598aaef
   14001613f:	icebp  
   140016140:	xchg   esi,eax
   140016141:	outs   dx,BYTE PTR ds:[rsi]
   140016142:	(bad)
   140016147:	out    0x8f,al
   140016149:	gs pop rdx
   14001614b:	(bad)  
   14001614c:	(bad)  
   14001614d:	gs pop rcx
   14001614f:	mov    ecx,0x9355628e
   140016154:	mov    fs,WORD PTR [rcx+0x54]
   140016157:	jns    0x1400160e7
   140016159:	(bad)  
   14001615a:	push   rbx
   14001615b:	push   rcx
   14001615c:	xchg   ecx,eax
   14001615d:	pop    rdi
   14001615e:	push   rcx
   14001615f:	(bad)  
   140016160:	xchg   ebx,eax
   140016161:	(bad)  
   140016162:	push   rbx
   140016163:	and    eax,0x23546294
   140016168:	xchg   esi,eax
   140016169:	pop    ax
   14001616b:	adc    eax,DWORD PTR [rax]
	...
   14001617d:	add    BYTE PTR [rax],al
   14001617f:	add    bh,bh
   140016181:	cmp    BYTE PTR [rdi],0x0
   140016184:	cld    
   140016185:	add    BYTE PTR [rdi],bl
   140016187:	add    al,bh
   140016189:	add    BYTE PTR [rdi],cl
   14001618b:	add    al,dh
   14001618d:	add    BYTE PTR [rdi],cl
   14001618f:	add    al,ah
   140016191:	add    BYTE PTR [rdi],cl
   140016193:	add    al,ah
   140016195:	add    BYTE PTR [rdi],cl
   140016197:	add    al,ah
   140016199:	add    BYTE PTR [rdi],cl
   14001619b:	add    al,ah
   14001619d:	add    BYTE PTR [rdi],cl
   14001619f:	add    al,ah
   1400161a1:	add    BYTE PTR [rdi],cl
   1400161a3:	add    al,ah
   1400161a5:	add    BYTE PTR [rdi],cl
   1400161a7:	add    al,ah
   1400161a9:	add    BYTE PTR [rdi],cl
   1400161ab:	add    al,ah
   1400161ad:	add    BYTE PTR [rdi],cl
   1400161af:	add    al,ah
   1400161b1:	add    BYTE PTR [rdi],cl
   1400161b3:	add    al,ah
   1400161b5:	add    BYTE PTR [rdi],cl
   1400161b7:	add    al,ah
   1400161b9:	add    BYTE PTR [rdi],cl
   1400161bb:	add    al,ah
   1400161bd:	add    BYTE PTR [rdi],cl
   1400161bf:	add    al,ah
   1400161c1:	add    BYTE PTR [rdi],cl
   1400161c3:	add    al,ah
   1400161c5:	add    BYTE PTR [rdi],cl
   1400161c7:	add    al,ah
   1400161c9:	add    BYTE PTR [rdi],cl
   1400161cb:	add    al,ah
   1400161cd:	add    BYTE PTR [rdi],cl
   1400161cf:	add    al,ah
   1400161d1:	add    BYTE PTR [rdi],cl
   1400161d3:	add    al,ah
   1400161d5:	add    BYTE PTR [rdi],cl
   1400161d7:	add    al,ah
   1400161d9:	add    BYTE PTR [rdi],cl
   1400161db:	add    al,dh
   1400161dd:	add    BYTE PTR [rdi],bl
   1400161df:	add    BYTE PTR [rax],ch
   1400161e1:	add    BYTE PTR [rax],al
   1400161e3:	add    BYTE PTR [rax],dl
   1400161e5:	add    BYTE PTR [rax],al
   1400161e7:	add    BYTE PTR [rax],ah
   1400161e9:	add    BYTE PTR [rax],al
   1400161eb:	add    BYTE PTR [rcx],al
   1400161ed:	add    BYTE PTR [rax],ah
   1400161ef:	add    BYTE PTR [rax],al
   1400161f1:	add    BYTE PTR [rax],al
   1400161f3:	add    BYTE PTR [rax+0x4],al
	...
   140016212:	add    BYTE PTR [rax],al
   140016214:	cdq    
   140016215:	push   0x5d
   140016217:	call   FWORD PTR [rcx-0x6600a296]
   14001621d:	push   0x5d
   14001621f:	call   FWORD PTR [rcx-0x6600a296]
   140016225:	push   0x5d
   140016227:	call   FWORD PTR [rcx-0x6600a296]
   14001622d:	push   0x5d
   14001622f:	call   FWORD PTR [rcx-0x6600a296]
   140016235:	push   0x5d
   140016237:	call   FWORD PTR [rcx-0x6600a296]
   14001623d:	push   0x5d
   14001623f:	call   FWORD PTR [rcx+0xff5d6a]
   140016245:	add    BYTE PTR [rax],al
   140016247:	add    BYTE PTR [rax],al
   140016249:	add    BYTE PTR [rax],al
   14001624b:	add    dl,al
   14001624d:	mov    edi,0x79795abc
   140016252:	jns    0x140016253
   140016254:	movsxd sp,DWORD PTR [rbx-0x1]
   140016258:	scas   al,BYTE PTR es:[rdi]
   140016259:	xchg   BYTE PTR [rbp-0x1],ch
   14001625c:	in     eax,dx
   14001625d:	fmulp  st(7),st
   14001625f:	(bad)  
   140016260:	in     eax,dx
   140016261:	fmulp  st(7),st
   140016263:	(bad)  
   140016264:	in     eax,dx
   140016265:	fmulp  st(7),st
   140016267:	(bad)  
   140016268:	in     eax,dx
   140016269:	fmulp  st(7),st
   14001626b:	(bad)  
   14001626c:	in     eax,dx
   14001626d:	fmulp  st(7),st
   14001626f:	(bad)  
   140016270:	in     eax,dx
   140016271:	fmulp  st(7),st
   140016273:	(bad)  
   140016274:	in     eax,dx
   140016275:	fmulp  st(7),st
   140016277:	(bad)  
   140016278:	in     eax,dx
   140016279:	fmulp  st(7),st
   14001627b:	(bad)  
   14001627c:	in     al,dx
   14001627d:	(bad)  
   14001627f:	call   FWORD PTR [rcx+0xff5d6a]
   140016285:	add    BYTE PTR [rax],al
   140016287:	add    BYTE PTR [rax],al
   140016289:	add    BYTE PTR [rax],al
   14001628b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140016291:	mov    edi,0x6a995abc
   140016296:	pop    rbp
   140016297:	push   QWORD PTR [rax-0x48008f77]
   14001629d:	xchg   edx,eax
   14001629e:	jne    0x14001629f
   1400162a0:	xchg   edi,eax
   1400162a1:	jp     0x140016223
   1400162a3:	inc    DWORD PTR [rbp+0x3c]
   1400162a6:	sahf   
   1400162a7:	call   FWORD PTR [rax]
   1400162a9:	(bad)  
   1400162aa:	test   eax,0x9a2f38ff
   1400162af:	dec    DWORD PTR [rbx-0x48008390]
   1400162b5:	xchg   edx,eax
   1400162b6:	jne    0x1400162b7
   1400162b8:	mov    bh,0x92
   1400162ba:	jne    0x1400162bb
   1400162bc:	mov    bh,0x92
   1400162be:	jne    0x1400162bf
   1400162c0:	cdq    
   1400162c1:	push   0x5d
   1400162c3:	inc    DWORD PTR [rax]
   1400162c5:	add    BYTE PTR [rax],al
   1400162c7:	add    BYTE PTR [rax],al
   1400162c9:	add    BYTE PTR [rax],al
   1400162cb:	add    dl,al
   1400162cd:	mov    edi,0x81815abc
   1400162d2:	cmp    edi,0xff636366
   1400162d8:	mov    dl,0x8b
   1400162da:	jae    0x1400162db
   1400162dc:	in     eax,dx
   1400162dd:	fmulp  st(7),st
   1400162df:	call   FWORD PTR [rbp+0x58]
   1400162e2:	mov    eax,0xd98181ff
   1400162e7:	inc    DWORD PTR [rdi+0x7affd487]
   1400162ed:	jp     0x1400162be
   1400162ef:	inc    DWORD PTR [rbp+0x41]
   1400162f2:	stos   BYTE PTR es:[rdi],al
   1400162f3:	(bad)  
   1400162f4:	in     eax,dx
   1400162f5:	fmulp  st(7),st
   1400162f7:	(bad)  
   1400162f8:	in     eax,dx
   1400162f9:	fmulp  st(7),st
   1400162fb:	(bad)  
   1400162fc:	in     al,dx
   1400162fd:	(bad)  
   1400162ff:	call   FWORD PTR [rcx+0xff5d6a]
   140016305:	add    BYTE PTR [rax],al
   140016307:	add    BYTE PTR [rax],al
   140016309:	add    BYTE PTR [rax],al
   14001630b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140016311:	mov    edi,0x6a995abc
   140016316:	pop    rbp
   140016317:	push   QWORD PTR [rbp-0x41008971]
   14001631d:	fwait
   14001631e:	jg     0x14001631f
   140016320:	cmp    eax,0x79ffaf38
   140016325:	jns    0x140016300
   140016327:	(bad)  
   140016328:	(bad)  
   14001632a:	clc    
   14001632b:	(bad)  
   14001632c:	jle    0x1400163ad
   14001632e:	(bad)  
   14001632f:	jmp    QWORD PTR [rcx]
   140016331:	(bad)  
   140016332:	movabs eax,ds:0x7f9bbeff7f9bbeff
   14001633b:	(bad)  
   14001633c:	mov    esi,0x99ff7f9b
   140016341:	push   0x5d
   140016343:	inc    DWORD PTR [rax]
   140016345:	add    BYTE PTR [rax],al
   140016347:	add    BYTE PTR [rax],al
   140016349:	add    BYTE PTR [rax],al
   14001634b:	add    dl,al
   14001634d:	mov    edi,0x81815abc
   140016352:	cmp    edi,0xff636366
   140016358:	mov    eax,0xedff7a93
   14001635d:	fmulp  st(7),st
   14001635f:	(bad)  
   140016360:	jl     0x1400163d7
   140016362:	sar    edi,0x86
   140016365:	xchg   ch,dl
   140016367:	jmp    FWORD PTR [rbp+0x6d]
   14001636a:	fcos   
   14001636c:	ja     0x1400163e5
   14001636e:	(bad)  
   14001636f:	jmp    QWORD PTR [rsi+0x60]
   140016372:	mov    bl,0xff
   140016374:	in     eax,dx
   140016375:	fmulp  st(7),st
   140016377:	(bad)  
   140016378:	in     eax,dx
   140016379:	fmulp  st(7),st
   14001637b:	(bad)  
   14001637c:	in     al,dx
   14001637d:	(bad)  
   14001637f:	call   FWORD PTR [rcx+0xff5d6a]
   140016385:	add    BYTE PTR [rax],al
   140016387:	add    BYTE PTR [rax],al
   140016389:	add    BYTE PTR [rax],al
   14001638b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140016391:	mov    edi,0x6a995abc
   140016396:	pop    rbp
   140016397:	(bad)  
   140016398:	mov    ebx,0xc6ff7e97
   14001639d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001639e:	mov    edi,?
   1400163a0:	mov    bh,0x9b
   1400163a2:	nop
   1400163a3:	(bad)  
   1400163a4:	jns    0x14001640a
   1400163a6:	movabs eax,ds:0x9b6076ffa85264ff
   1400163af:	(bad)  
   1400163b0:	mov    esi,0xc6ff8da0
   1400163b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400163b6:	mov    edi,?
   1400163b8:	(bad)  
   1400163b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400163ba:	mov    edi,?
   1400163bc:	(bad)  
   1400163bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400163be:	mov    edi,?
   1400163c0:	cdq    
   1400163c1:	push   0x5d
   1400163c3:	inc    DWORD PTR [rax]
   1400163c5:	add    BYTE PTR [rax],al
   1400163c7:	add    BYTE PTR [rax],al
   1400163c9:	add    BYTE PTR [rax],al
   1400163cb:	add    dl,al
   1400163cd:	mov    edi,0x79795abc
   1400163d2:	jns    0x1400163d3
   1400163d4:	movsxd sp,DWORD PTR [rbx-0x1]
   1400163d8:	mov    esi,0xedff829a
   1400163dd:	fmulp  st(7),st
   1400163df:	(bad)  
   1400163e0:	in     eax,dx
   1400163e1:	fmulp  st(7),st
   1400163e3:	inc    ebx
   1400163e5:	(bad)  
   1400163e6:	retf   0x83ff
   1400163e9:	movabs ds:0x9b74ffbe9c7cffc2,eax
   1400163f2:	mov    ebp,0xc1b96fff
   1400163f7:	dec    DWORD PTR [rcx-0x13003b42]
   1400163fd:	(bad)  
   1400163ff:	call   FWORD PTR [rcx+0xff5d6a]
   140016405:	add    BYTE PTR [rax],al
   140016407:	add    BYTE PTR [rax],al
   140016409:	add    BYTE PTR [rax],al
   14001640b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140016411:	mov    edi,0x7ca25abc
   140016416:	jae    0x140016417
   140016418:	rcr    DWORD PTR [rsi-0x4d310079],0x99
   14001641f:	dec    esi
   140016421:	mov    dl,0x99
   140016423:	push   QWORD PTR [rax-0x56]
   140016426:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016427:	call   FWORD PTR [rdi]
   140016429:	int3   
   14001642a:	in     eax,0xff
   14001642c:	and    eax,edx
   14001642e:	(bad)  
   14001642f:	call   QWORD PTR [rdx]
   140016431:	gs imul edi,edi,0xffecce27
   140016438:	movs   BYTE PTR es:[rdi],BYTE PTR es:[rsi]
   14001643a:	mov    esi,0x99b2ceff
   14001643f:	call   FWORD PTR [rcx+0xff5d6a]
   140016445:	add    BYTE PTR [rax],al
   140016447:	add    BYTE PTR [rax],al
   140016449:	add    BYTE PTR [rax],al
   14001644b:	add    dl,al
   14001644d:	mov    edi,0x81815abc
   140016452:	cmp    edi,0xff636366
   140016458:	(bad)
   14001645c:	jmp    0x14001643a
   14001645e:	iret   
   14001645f:	(bad)  
   140016460:	in     eax,dx
   140016461:	fmulp  st(7),st
   140016463:	call   rdx
   140016465:	(bad)  
   140016466:	int3   
   140016467:	push   QWORD PTR [rbx]
   140016469:	(bad)
   14001646c:	(bad)  
   14001646d:	fsubr  st,st(2)
   14001646f:	jmp    QWORD PTR [rcx]
   140016471:	or     DWORD PTR [rdi+rdi*8-0xf28d0],0xffc7bf7d
   14001647c:	in     al,dx
   14001647d:	(bad)  
   14001647f:	call   FWORD PTR [rcx+0xff5d6a]
   140016485:	add    BYTE PTR [rax],al
   140016487:	add    BYTE PTR [rax],al
   140016489:	add    BYTE PTR [rax],al
   14001648b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140016491:	mov    edi,0x7ca25abc
   140016496:	jae    0x140016497
   140016498:	(bad)  
   140016499:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001649a:	(bad)  
   14001649b:	dec    esi
   14001649d:	mov    dl,0x99
   14001649f:	dec    esi
   1400164a1:	mov    dl,0x99
   1400164a3:	dec    esi
   1400164a5:	mov    dl,0x99
   1400164a7:	call   QWORD PTR [rdi-0x53]
   1400164aa:	mov    ecx,0xd4c839ff
   1400164af:	call   FWORD PTR [rax]
   1400164b1:	rex.WB
   1400164b2:	rex.WXB (bad) 
   1400164b4:	cmp    cl,al
   1400164b6:	(bad)  
   1400164b7:	jmp    FWORD PTR [rsi-0x30006051]
   1400164bd:	mov    ah,0x9b
   1400164bf:	call   FWORD PTR [rcx+0xff5d6a]
   1400164c5:	add    BYTE PTR [rax],al
   1400164c7:	add    BYTE PTR [rax],al
   1400164c9:	add    BYTE PTR [rax],al
   1400164cb:	add    dl,al
   1400164cd:	mov    edi,0x81815abc
   1400164d2:	cmp    edi,0xff636366
   1400164d8:	enter  0x90a7,0xff
   1400164dc:	in     eax,dx
   1400164dd:	fmulp  st(7),st
   1400164df:	(bad)  
   1400164e0:	in     eax,dx
   1400164e1:	fmulp  st(7),st
   1400164e3:	(bad)  
   1400164e4:	in     eax,dx
   1400164e5:	fmulp  st(7),st
   1400164e7:	jmp    QWORD PTR [rdi+0x2bffc8c7]
   1400164ed:	mov    edx,0xc337ffce
   1400164f2:	sar    bh,1
   1400164f4:	(bad)  
   1400164f5:	mov    dh,0xc4
   1400164f7:	(bad)  
   1400164f8:	jmp    0x12e0134da
   1400164fd:	fmulp  st(7),st
   1400164ff:	call   FWORD PTR [rcx+0xff5d6a]
   140016505:	add    BYTE PTR [rax],al
   140016507:	add    BYTE PTR [rax],al
   140016509:	add    BYTE PTR [rax],al
   14001650b:	add    BYTE PTR [rdx-0x3d006a68],bl
   140016511:	mov    edi,0x7ca25abc
   140016516:	jae    0x140016517
   140016518:	enter  0x92a8,0xff
   14001651c:	in     eax,dx
   14001651d:	fmulp  st(7),st
   14001651f:	(bad)  
   140016520:	in     eax,dx
   140016521:	fmulp  st(7),st
   140016523:	(bad)  
   140016524:	in     eax,dx
   140016525:	fmulp  st(7),st
   140016527:	(bad)  
   140016528:	(bad)  
   140016529:	(bad)  
   14001652b:	jmp    FWORD PTR [rax-0x46]
   14001652e:	(bad)  
   14001652f:	(bad)  
   140016530:	cmp    esi,DWORD PTR [rsi-0x31410034]
   140016536:	retf   0xedff
   140016539:	fmulp  st(7),st
   14001653b:	(bad)  
   14001653c:	in     eax,dx
   14001653d:	fmulp  st(7),st
   14001653f:	call   FWORD PTR [rcx+0xff5d6a]
   140016545:	add    BYTE PTR [rax],al
   140016547:	add    BYTE PTR [rax],al
   140016549:	add    BYTE PTR [rax],al
   14001654b:	add    dl,al
   14001654d:	mov    edi,0x8f8f5abc
   140016552:	(bad)  
   140016553:	jmp    QWORD PTR [rsi+0x63]
   140016556:	movsxd edi,edi
   140016558:	enter  0x92a8,0xff
   14001655c:	in     eax,dx
   14001655d:	fmulp  st(7),st
   14001655f:	(bad)  
   140016560:	in     eax,dx
   140016561:	fmulp  st(7),st
   140016563:	(bad)  
   140016564:	in     eax,dx
   140016565:	fmulp  st(7),st
   140016567:	(bad)  
   140016568:	in     eax,dx
   140016569:	fmulp  st(7),st
   14001656b:	(bad)  
   14001656c:	in     eax,dx
   14001656d:	fmulp  st(7),st
   14001656f:	(bad)  
   140016570:	in     eax,dx
   140016571:	fmulp  st(7),st
   140016573:	(bad)  
   140016574:	in     eax,dx
   140016575:	fmulp  st(7),st
   140016577:	(bad)  
   140016578:	in     eax,dx
   140016579:	fmulp  st(7),st
   14001657b:	(bad)  
   14001657c:	in     eax,dx
   14001657d:	fmulp  st(7),st
   14001657f:	call   FWORD PTR [rcx+0xff5d6a]
	...
   14001658d:	add    BYTE PTR [rax],al
   14001658f:	add    dl,al
   140016591:	mov    edi,0x82a85abc
   140016596:	jb     0x140016597
   140016598:	test   al,0x82
   14001659a:	jb     0x14001659b
   14001659c:	test   al,0x82
   14001659e:	jb     0x14001659f
   1400165a0:	test   al,0x82
   1400165a2:	jb     0x1400165a3
   1400165a4:	test   al,0x82
   1400165a6:	jb     0x1400165a7
   1400165a8:	test   al,0x82
   1400165aa:	jb     0x1400165ab
   1400165ac:	test   al,0x82
   1400165ae:	jb     0x1400165af
   1400165b0:	test   al,0x82
   1400165b2:	jb     0x1400165b3
   1400165b4:	test   al,0x82
   1400165b6:	jb     0x1400165b7
   1400165b8:	test   al,0x82
   1400165ba:	jb     0x1400165bb
   1400165bc:	test   al,0x82
   1400165be:	jb     0x1400165bf
   1400165c0:	test   al,0x82
   1400165c2:	jb     0x1400165c3
	...
   140016608:	loopne 0x14001660b
   14001660a:	add    BYTE PTR [rax],al
   14001660c:	add    BYTE PTR [rcx],0x0
   14001660f:	add    BYTE PTR [rax-0x7fffffff],al
   140016615:	add    DWORD PTR [rax],eax
   140016617:	add    BYTE PTR [rax-0x7fffffff],al
   14001661d:	add    DWORD PTR [rax],eax
   14001661f:	add    BYTE PTR [rax-0x7fffffff],al
   140016625:	add    DWORD PTR [rax],eax
   140016627:	add    BYTE PTR [rax-0x7fffffff],al
   14001662d:	add    DWORD PTR [rax],eax
   14001662f:	add    BYTE PTR [rax-0x7fffffff],al
   140016635:	add    DWORD PTR [rax],eax
   140016637:	add    BYTE PTR [rax-0x7fffffff],al
   14001663d:	add    DWORD PTR [rax],eax
   14001663f:	add    al,al
   140016641:	add    DWORD PTR [rax],eax
   140016643:	add    bh,bh
   140016645:	inc    DWORD PTR [rax]
   140016647:	add    BYTE PTR [rax],al
   140016649:	add    BYTE PTR [rcx],al
   14001664b:	add    BYTE PTR [rip+0x10303000],cl        # 0x150319651
   140016651:	add    BYTE PTR [rcx],al
   140016653:	add    BYTE PTR [rax+rax*1],al
   140016656:	push   0x1000006
   14001665b:	add    BYTE PTR [rax],ah
   14001665d:	and    BYTE PTR [rax],dl
   14001665f:	add    BYTE PTR [rcx],al
   140016661:	add    BYTE PTR [rax+rax*1],al
   140016664:	call   0x14201666b
   140016669:	add    BYTE PTR [rax],bl
   14001666b:	sbb    BYTE PTR [rax],dl
   14001666d:	add    BYTE PTR [rcx],al
   14001666f:	add    BYTE PTR [rax+rax*1],al
   140016672:	call   0x143016678
   140016677:	add    BYTE PTR [rax],dl
   140016679:	adc    BYTE PTR [rax],dl
   14001667b:	add    BYTE PTR [rcx],al
   14001667d:	add    BYTE PTR [rax+rax*1],al
   140016680:	sub    BYTE PTR [rcx],al
   140016682:	add    BYTE PTR [rax],al
   140016684:	add    al,0x0
   140016686:	xor    BYTE PTR [rax],dh
   140016688:	add    BYTE PTR [rax],al
   14001668a:	add    DWORD PTR [rax],eax
   14001668c:	or     BYTE PTR [rax],al
   14001668e:	test   al,0xe
   140016690:	add    BYTE PTR [rax],al
   140016692:	add    eax,0x202000
   140016697:	add    BYTE PTR [rcx],al
   140016699:	add    BYTE PTR [rax],cl
   14001669b:	add    BYTE PTR [rax+0x6000008],ch
   1400166a1:	add    BYTE PTR [rax],bl
   1400166a3:	sbb    BYTE PTR [rax],al
   1400166a5:	add    BYTE PTR [rcx],al
   1400166a7:	add    BYTE PTR [rax],cl
   1400166a9:	add    al,cl
   1400166ab:	(bad)  
   1400166ac:	add    BYTE PTR [rax],al
   1400166ae:	(bad)  
   1400166af:	add    BYTE PTR [rax],dl
   1400166b1:	adc    BYTE PTR [rax],al
   1400166b3:	add    BYTE PTR [rcx],al
   1400166b5:	add    BYTE PTR [rax],cl
   1400166b7:	add    BYTE PTR [rax+0x5],ch
   1400166ba:	add    BYTE PTR [rax],al
   1400166bc:	or     BYTE PTR [rax],al
   1400166be:	add    BYTE PTR [rax],al
   1400166c0:	add    BYTE PTR [rax],al
   1400166c2:	add    DWORD PTR [rax],eax
   1400166c4:	and    BYTE PTR [rax],al
   1400166c6:	mov    dl,0x8a
   1400166c8:	add    BYTE PTR [rax],al
   1400166ca:	or     DWORD PTR [rax],eax
   1400166cc:	xor    BYTE PTR [rax],dh
   1400166ce:	add    BYTE PTR [rax],al
   1400166d0:	add    DWORD PTR [rax],eax
   1400166d2:	and    BYTE PTR [rax],al
   1400166d4:	test   al,0x25
   1400166d6:	add    BYTE PTR [rax],al
   1400166d8:	or     al,BYTE PTR [rax]
   1400166da:	and    BYTE PTR [rax],ah
   1400166dc:	add    BYTE PTR [rax],al
   1400166de:	add    DWORD PTR [rax],eax
   1400166e0:	and    BYTE PTR [rax],al
   1400166e2:	test   al,0x10
   1400166e4:	add    BYTE PTR [rax],al
   1400166e6:	or     eax,DWORD PTR [rax]
   1400166e8:	sbb    BYTE PTR [rax],bl
   1400166ea:	add    BYTE PTR [rax],al
   1400166ec:	add    DWORD PTR [rax],eax
   1400166ee:	and    BYTE PTR [rax],al
   1400166f0:	mov    BYTE PTR [rcx],cl
   1400166f2:	add    BYTE PTR [rax],al
   1400166f4:	or     al,0x0
   1400166f6:	adc    BYTE PTR [rax],dl
   1400166f8:	add    BYTE PTR [rax],al
   1400166fa:	add    DWORD PTR [rax],eax
   1400166fc:	and    BYTE PTR [rax],al
   1400166fe:	push   0xd000004
   140016703:	add    BYTE PTR [rax],al
   140016705:	add    BYTE PTR [rax],al
   140016707:	add    BYTE PTR [rax+0x3403],ah
   14001670d:	add    BYTE PTR [rsi+0x0],dl
   140016710:	push   rbx
   140016711:	add    BYTE PTR [rdi+0x0],bl
   140016714:	push   rsi
   140016715:	add    BYTE PTR [rbp+0x0],al
   140016718:	push   rdx
   140016719:	add    BYTE PTR [rbx+0x0],dl
   14001671c:	rex.WB add BYTE PTR [r15+0x0],cl
   140016720:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140016724:	rex.WB add BYTE PTR [r14+0x0],cl
   140016728:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14001672c:	add    BYTE PTR [rax],al
   14001672e:	add    BYTE PTR [rax],al
   140016730:	mov    ebp,0xfeef04
   140016735:	add    BYTE PTR [rcx],al
   140016737:	add    BYTE PTR [rax],al
   140016739:	add    BYTE PTR [rdx],cl
   14001673b:	add    BYTE PTR [rax],al
   14001673d:	add    BYTE PTR [rax],bpl
   140016740:	add    BYTE PTR [rax],al
   140016742:	or     al,BYTE PTR [rax]
   140016744:	add    BYTE PTR [rax+0x0],al
   140016747:	sub    BYTE PTR [rdi],bh
   140016749:	add    BYTE PTR [rax],al
   14001674b:	add    BYTE PTR [rax],al
   14001674d:	add    BYTE PTR [rax],al
   14001674f:	add    BYTE PTR [rax+rax*1],al
   140016752:	add    al,0x0
   140016754:	add    DWORD PTR [rax],eax
	...
   140016762:	add    BYTE PTR [rax],al
   140016764:	inc    BYTE PTR [rdx]
   140016766:	add    BYTE PTR [rax],al
   140016768:	add    DWORD PTR [rax],eax
   14001676a:	push   rbx
   14001676b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001676f:	add    BYTE PTR [rcx+0x0],ch
   140016772:	outs   dx,BYTE PTR ds:[rsi]
   140016773:	add    BYTE PTR [rdi+0x0],ah
   140016776:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001677a:	ins    BYTE PTR es:[rdi],dx
   14001677b:	add    BYTE PTR [rbp+0x0],ah
   14001677e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140016782:	data16 add BYTE PTR [rdi+0x0],ch
   140016786:	add    BYTE PTR [rax],al
   140016788:	fiadd  DWORD PTR [rdx]
   14001678a:	add    BYTE PTR [rax],al
   14001678c:	add    DWORD PTR [rax],eax
   14001678e:	xor    BYTE PTR [rax],al
   140016790:	xor    al,0x0
   140016792:	xor    BYTE PTR [rax],al
   140016794:	cmp    DWORD PTR [rax],eax
   140016796:	xor    BYTE PTR [rax],al
   140016798:	xor    al,0x0
   14001679a:	rex.X add BYTE PTR [rax],sil
   14001679d:	add    BYTE PTR [rax],al
   14001679f:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400167a3:	add    BYTE PTR [rcx],al
   1400167a5:	add    BYTE PTR [rbx+0x0],al
   1400167a8:	outs   dx,DWORD PTR ds:[rsi]
   1400167a9:	add    BYTE PTR [rbp+0x0],ch
   1400167ac:	jo     0x1400167ae
   1400167ae:	(bad)  
   1400167af:	add    BYTE PTR [rsi+0x0],ch
   1400167b2:	jns    0x1400167b4
   1400167b4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400167b8:	ins    DWORD PTR es:[rdi],dx
   1400167b9:	add    BYTE PTR [rbp+0x0],ah
   1400167bc:	add    BYTE PTR [rax],al
   1400167be:	add    BYTE PTR [rax],al
   1400167c0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400167c4:	movsxd eax,DWORD PTR [rax]
   1400167c6:	jb     0x1400167c8
   1400167c8:	outs   dx,DWORD PTR ds:[rsi]
   1400167c9:	add    BYTE PTR [rbx+0x0],dh
   1400167cc:	outs   dx,DWORD PTR ds:[rsi]
   1400167cd:	add    BYTE PTR [rsi+0x0],ah
   1400167d0:	je     0x1400167d2
   1400167d2:	and    BYTE PTR [rax],al
   1400167d4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400167d8:	jb     0x1400167da
   1400167da:	jo     0x1400167dc
   1400167dc:	outs   dx,DWORD PTR ds:[rsi]
   1400167dd:	add    BYTE PTR [rdx+0x0],dh
   1400167e0:	(bad)  
   1400167e1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400167e5:	add    BYTE PTR [rdi+0x0],ch
   1400167e8:	outs   dx,BYTE PTR ds:[rsi]
   1400167e9:	add    BYTE PTR [rax],al
   1400167eb:	add    BYTE PTR [rdx+0x0],ah
   1400167ee:	sbb    eax,0x46000100
   1400167f3:	add    BYTE PTR [rcx+0x0],ch
   1400167f6:	ins    BYTE PTR es:[rdi],dx
   1400167f7:	add    BYTE PTR [rbp+0x0],ah
   1400167fa:	add    BYTE PTR [rbp+0x0],r12b
   1400167fe:	jae    0x140016800
   140016800:	movsxd eax,DWORD PTR [rax]
   140016802:	jb     0x140016804
   140016804:	imul   eax,DWORD PTR [rax],0x740070
   14001680a:	imul   eax,DWORD PTR [rax],0x6e006f
   140016810:	add    BYTE PTR [rax],al
   140016812:	add    BYTE PTR [rax],al
   140016814:	add    BYTE PTR [r14+0x0],r14b
   140016818:	add    BYTE PTR gs:[rsi+0x0],ch
   14001681c:	je     0x14001681e
   14001681e:	and    BYTE PTR [rax],al
   140016820:	push   rsi
   140016821:	add    BYTE PTR [rcx+0x0],ch
   140016824:	add    BYTE PTR gs:[rdi+0x0],dh
   140016828:	add    BYTE PTR gs:[rdx+0x0],dh
   14001682c:	and    BYTE PTR [rax],al
   14001682e:	push   rbx
   14001682f:	add    BYTE PTR [rsi+0x0],ch
   140016832:	(bad)  
   140016833:	add    BYTE PTR [rax+0x0],dh
   140016836:	imul   eax,DWORD PTR [rax],0x20006e
   14001683c:	rex.WR add BYTE PTR [rcx+0x0],r12b
   140016840:	jne    0x140016842
   140016842:	outs   dx,BYTE PTR ds:[rsi]
   140016843:	add    BYTE PTR [rbx+0x0],ah
   140016846:	push   0x72006500
   14001684b:	add    BYTE PTR [rax],al
   14001684d:	add    BYTE PTR [rax],al
   14001684f:	add    BYTE PTR [rsi+0x0],ah
   140016852:	and    eax,DWORD PTR [rax]
   140016854:	add    DWORD PTR [rax],eax
   140016856:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001685a:	ins    BYTE PTR es:[rdi],dx
   14001685b:	add    BYTE PTR [rbp+0x0],ah
   14001685e:	push   rsi
   14001685f:	add    BYTE PTR [rbp+0x0],ah
   140016862:	jb     0x140016864
   140016864:	jae    0x140016866
   140016866:	imul   eax,DWORD PTR [rax],0x6e006f
   14001686c:	add    BYTE PTR [rax],al
   14001686e:	add    BYTE PTR [rax],al
   140016870:	xor    DWORD PTR [rax],eax
   140016872:	xor    BYTE PTR [rax],al
   140016874:	add    BYTE PTR cs:[rax],dh
   140016877:	add    BYTE PTR [rsi],ch
   140016879:	add    BYTE PTR [rcx],dh
   14001687b:	add    BYTE PTR [rax],dh
   14001687d:	add    BYTE PTR [rdx],dh
   14001687f:	add    BYTE PTR [rax+rax*1],dh
   140016882:	xor    BYTE PTR [rax],al
   140016884:	add    BYTE PTR cs:[rcx],dh
   140016887:	add    BYTE PTR [rsi],dh
   140016889:	add    BYTE PTR [rbx],dh
   14001688b:	add    BYTE PTR [rax],bh
   14001688d:	add    BYTE PTR [rax+rax*1],dh
   140016890:	and    BYTE PTR [rax],al
   140016892:	sub    BYTE PTR [rax],al
   140016894:	je     0x140016896
   140016896:	push   0x2e003100
   14001689b:	add    BYTE PTR [rcx],dh
   14001689d:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770198a3
   1400168a3:	add    BYTE PTR [rax],dh
   1400168a5:	add    BYTE PTR [rcx],bh
   1400168a7:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770199ad
   1400168ad:	add    BYTE PTR [rax],dh
   1400168af:	add    BYTE PTR [rax],dh
   1400168b1:	add    BYTE PTR [rcx],ch
   1400168b3:	add    BYTE PTR [rax],al
   1400168b5:	add    BYTE PTR [rax],al
   1400168b7:	add    BYTE PTR [rdx],dh
   1400168b9:	add    BYTE PTR [rcx],cl
   1400168bb:	add    BYTE PTR [rcx],al
   1400168bd:	add    BYTE PTR [rcx+0x0],cl
   1400168c0:	outs   dx,BYTE PTR ds:[rsi]
   1400168c1:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400168c5:	add    BYTE PTR [rdx+0x0],dh
   1400168c8:	outs   dx,BYTE PTR ds:[rsi]
   1400168c9:	add    BYTE PTR [rcx+0x0],ah
   1400168cc:	ins    BYTE PTR es:[rdi],dx
   1400168cd:	add    BYTE PTR [rsi+0x0],cl
   1400168d0:	(bad)  
   1400168d1:	add    BYTE PTR [rbp+0x0],ch
   1400168d4:	add    BYTE PTR gs:[rax],al
   1400168d7:	add    BYTE PTR [rbp+0x0],ah
   1400168da:	jbe    0x1400168dc
   1400168dc:	add    BYTE PTR gs:[rsi+0x0],ch
   1400168e0:	je     0x1400168e2
   1400168e2:	jbe    0x1400168e4
   1400168e4:	ja     0x1400168e6
   1400168e6:	jb     0x1400168e8
   1400168e8:	add    BYTE PTR [rax],al
   1400168ea:	add    BYTE PTR [rax],al
   1400168ec:	add    BYTE PTR [rax],0x2e
   1400168ef:	add    BYTE PTR [rcx],al
   1400168f1:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400168f5:	add    BYTE PTR [rdi+0x0],ah
   1400168f8:	(bad)  
   1400168f9:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400168fd:	add    BYTE PTR [rdi+0x0],ch
   140016900:	jo     0x140016902
   140016902:	jns    0x140016904
   140016904:	jb     0x140016906
   140016906:	imul   eax,DWORD PTR [rax],0x680067
   14001690c:	je     0x14001690e
   14001690e:	add    BYTE PTR [rax],al
   140016910:	test   eax,0x4d002000
   140016915:	add    BYTE PTR [rcx+0x0],ch
   140016918:	movsxd eax,DWORD PTR [rax]
   14001691a:	jb     0x14001691c
   14001691c:	outs   dx,DWORD PTR ds:[rsi]
   14001691d:	add    BYTE PTR [rbx+0x0],dh
   140016920:	outs   dx,DWORD PTR ds:[rsi]
   140016921:	add    BYTE PTR [rsi+0x0],ah
   140016924:	je     0x140016926
   140016926:	and    BYTE PTR [rax],al
   140016928:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001692c:	jb     0x14001692e
   14001692e:	jo     0x140016930
   140016930:	outs   dx,DWORD PTR ds:[rsi]
   140016931:	add    BYTE PTR [rdx+0x0],dh
   140016934:	(bad)  
   140016935:	add    BYTE PTR [rax+rax*1+0x69],dh
   140016939:	add    BYTE PTR [rdi+0x0],ch
   14001693c:	outs   dx,BYTE PTR ds:[rsi]
   14001693d:	add    BYTE PTR [rsi],ch
   14001693f:	add    BYTE PTR [rax],ah
   140016941:	add    BYTE PTR [rcx+0x0],al
   140016944:	ins    BYTE PTR es:[rdi],dx
   140016945:	add    BYTE PTR [rax+rax*1+0x20],ch
   140016949:	add    BYTE PTR [rdx+0x0],dh
   14001694c:	imul   eax,DWORD PTR [rax],0x680067
   140016952:	je     0x140016954
   140016954:	jae    0x140016956
   140016956:	and    BYTE PTR [rax],al
   140016958:	jb     0x14001695a
   14001695a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001695e:	add    BYTE PTR gs:[rdx+0x0],dh
   140016962:	jbe    0x140016964
   140016964:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140016969:	add    BYTE PTR [rax],al
   14001696b:	add    BYTE PTR [rdx+0x0],al
   14001696e:	or     eax,0x4f000100
   140016973:	add    BYTE PTR [rdx+0x0],dh
   140016976:	imul   eax,DWORD PTR [rax],0x690067
   14001697c:	outs   dx,BYTE PTR ds:[rsi]
   14001697d:	add    BYTE PTR [rcx+0x0],ah
   140016980:	ins    BYTE PTR es:[rdi],dx
   140016981:	add    BYTE PTR [rsi+0x0],al
   140016984:	imul   eax,DWORD PTR [rax],0x65006c
   14001698a:	outs   dx,BYTE PTR ds:[rsi]
   14001698b:	add    BYTE PTR [rcx+0x0],ah
   14001698e:	ins    DWORD PTR es:[rdi],dx
   14001698f:	add    BYTE PTR [rbp+0x0],ah
   140016992:	add    BYTE PTR [rax],al
   140016994:	add    BYTE PTR gs:[rsi+0x0],dh
   140016998:	add    BYTE PTR gs:[rsi+0x0],ch
   14001699c:	je     0x14001699e
   14001699e:	jbe    0x1400169a0
   1400169a0:	ja     0x1400169a2
   1400169a2:	jb     0x1400169a4
   1400169a4:	add    BYTE PTR cs:[rbp+0x0],ah
   1400169a8:	js     0x1400169aa
   1400169aa:	add    BYTE PTR gs:[rax],al
   1400169ad:	add    BYTE PTR [rax],al
   1400169af:	add    BYTE PTR [rdx+0x0],ch
   1400169b2:	and    eax,0x50000100
   1400169b7:	add    BYTE PTR [rdx+0x0],dh
   1400169ba:	outs   dx,DWORD PTR ds:[rsi]
   1400169bb:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400169bf:	add    BYTE PTR [rbx+0x0],ah
   1400169c2:	je     0x1400169c4
   1400169c4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400169c8:	ins    DWORD PTR es:[rdi],dx
   1400169c9:	add    BYTE PTR [rbp+0x0],ah
   1400169cc:	add    BYTE PTR [rax],al
   1400169ce:	add    BYTE PTR [rax],al
   1400169d0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400169d4:	movsxd eax,DWORD PTR [rax]
   1400169d6:	jb     0x1400169d8
   1400169d8:	outs   dx,DWORD PTR ds:[rsi]
   1400169d9:	add    BYTE PTR [rbx+0x0],dh
   1400169dc:	outs   dx,DWORD PTR ds:[rsi]
   1400169dd:	add    BYTE PTR [rsi+0x0],ah
   1400169e0:	je     0x1400169e2
   1400169e2:	scas   al,BYTE PTR es:[rdi]
   1400169e3:	add    BYTE PTR [rax],ah
   1400169e5:	add    BYTE PTR [rdi+0x0],dl
   1400169e8:	imul   eax,DWORD PTR [rax],0x64006e
   1400169ee:	outs   dx,DWORD PTR ds:[rsi]
   1400169ef:	add    BYTE PTR [rdi+0x0],dh
   1400169f2:	jae    0x1400169f4
   1400169f4:	scas   al,BYTE PTR es:[rdi]
   1400169f5:	add    BYTE PTR [rax],ah
   1400169f7:	add    BYTE PTR [rdi+0x0],cl
   1400169fa:	jo     0x1400169fc
   1400169fc:	add    BYTE PTR gs:[rdx+0x0],dh
   140016a00:	(bad)  
   140016a01:	add    BYTE PTR [rax+rax*1+0x69],dh
   140016a05:	add    BYTE PTR [rsi+0x0],ch
   140016a08:	add    BYTE PTR [eax],ah
   140016a0b:	add    BYTE PTR [rbx+0x0],dl
   140016a0e:	jns    0x140016a10
   140016a10:	jae    0x140016a12
   140016a12:	je     0x140016a14
   140016a14:	add    BYTE PTR gs:[rbp+0x0],ch
   140016a18:	add    BYTE PTR [rax],al
   140016a1a:	add    BYTE PTR [rax],al
   140016a1c:	rex.RX add BYTE PTR [rcx],r10b
   140016a1f:	add    BYTE PTR [rcx],al
   140016a21:	add    BYTE PTR [rax+0x0],dl
   140016a24:	jb     0x140016a26
   140016a26:	outs   dx,DWORD PTR ds:[rsi]
   140016a27:	add    BYTE PTR [rax+rax*1+0x75],ah
   140016a2b:	add    BYTE PTR [rbx+0x0],ah
   140016a2e:	je     0x140016a30
   140016a30:	push   rsi
   140016a31:	add    BYTE PTR [rbp+0x0],ah
   140016a34:	jb     0x140016a36
   140016a36:	jae    0x140016a38
   140016a38:	imul   eax,DWORD PTR [rax],0x6e006f
   140016a3e:	add    BYTE PTR [rax],al
   140016a40:	xor    DWORD PTR [rax],eax
   140016a42:	xor    BYTE PTR [rax],al
   140016a44:	add    BYTE PTR cs:[rax],dh
   140016a47:	add    BYTE PTR [rsi],ch
   140016a49:	add    BYTE PTR [rcx],dh
   140016a4b:	add    BYTE PTR [rax],dh
   140016a4d:	add    BYTE PTR [rdx],dh
   140016a4f:	add    BYTE PTR [rax+rax*1],dh
   140016a52:	xor    BYTE PTR [rax],al
   140016a54:	add    BYTE PTR cs:[rcx],dh
   140016a57:	add    BYTE PTR [rsi],dh
   140016a59:	add    BYTE PTR [rbx],dh
   140016a5b:	add    BYTE PTR [rax],bh
   140016a5d:	add    BYTE PTR [rax+rax*1],dh
   140016a60:	add    BYTE PTR [rax],al
   140016a62:	add    BYTE PTR [rax],al
   140016a64:	add    BYTE PTR [rax],r8b
   140016a67:	add    BYTE PTR [rcx],al
   140016a69:	add    BYTE PTR [rsi+0x0],dl
   140016a6c:	(bad)  
   140016a6d:	add    BYTE PTR [rdx+0x0],dh
   140016a70:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140016a74:	ins    BYTE PTR es:[rdi],dx
   140016a75:	add    BYTE PTR [rbp+0x0],ah
   140016a78:	rex.WB add BYTE PTR [r14+0x0],bpl
   140016a7c:	data16 add BYTE PTR [rdi+0x0],ch
   140016a80:	add    BYTE PTR [rax],al
   140016a82:	add    BYTE PTR [rax],al
   140016a84:	and    al,0x0
   140016a86:	add    al,0x0
   140016a88:	add    BYTE PTR [rax],al
   140016a8a:	push   rsp
   140016a8b:	add    BYTE PTR [rdx+0x0],dh
   140016a8e:	(bad)  
   140016a8f:	add    BYTE PTR [rsi+0x0],ch
   140016a92:	jae    0x140016a94
   140016a94:	ins    BYTE PTR es:[rdi],dx
   140016a95:	add    BYTE PTR [rcx+0x0],ah
   140016a98:	je     0x140016a9a
   140016a9a:	imul   eax,DWORD PTR [rax],0x6e006f
   140016aa0:	add    BYTE PTR [rax],al
   140016aa2:	add    BYTE PTR [rax],al
   140016aa4:	or     DWORD PTR [rax+rsi*4],eax
   140016aa7:	add    al,0xcd
   140016aa9:	dec    ch
   140016aab:	(bad)  
   140016aac:	loopne 0x140016aae
   140016aae:	add    BYTE PTR [rax],al
   140016ab0:	add    BYTE PTR [rax],al
   140016ab2:	add    DWORD PTR [rax],eax
   140016ab4:	add    BYTE PTR [rax],al
   140016ab6:	add    BYTE PTR [rax],al
   140016ab8:	adc    DWORD PTR [rax],eax
   140016aba:	add    BYTE PTR [rax],al
   140016abc:	add    BYTE PTR [rax],al
   140016abe:	add    BYTE PTR [rax],al
   140016ac0:	add    al,BYTE PTR [rax]
   140016ac2:	add    BYTE PTR [rax],al
   140016ac4:	jno    0x140016aa1
   140016ac6:	repnz imul esi,DWORD PTR [rbp+0x275d41d7],0xffffffa9
   140016ace:	sbb    eax,0x897068f
   140016ad3:	and    DWORD PTR [rdx],esi
   140016ad5:	sbb    BYTE PTR [rdi+0x5b24d9fd],ah
   140016adb:	or     ebp,DWORD PTR [rbx+0x420c5a0b]
   140016ae1:	test   eax,0xc417
	...
   140016afa:	add    BYTE PTR [rax],al
   140016afc:	mov    BYTE PTR [rax],al
   140016afe:	add    BYTE PTR [rax],al
   140016b00:	(bad)  
   140016b01:	add    BYTE PTR [rax],al
   140016b03:	add    BYTE PTR [rax+0x10000000],bl
   140016b09:	add    BYTE PTR [rax],al
   140016b0b:	add    BYTE PTR [rax+0xe000000],ch
   140016b11:	add    BYTE PTR [rax],al
   140016b13:	add    BYTE PTR [rax+0x14000000],bh
	...
   140016b21:	add    BYTE PTR [rax],al
   140016b23:	add    al,dl
   140016b25:	add    BYTE PTR [rax],al
   140016b27:	add    BYTE PTR [rax+rax*1],cl
   140016b2a:	add    BYTE PTR [rax],al
   140016b2c:	add    BYTE PTR [rax],al
   140016b2e:	add    BYTE PTR [rax],al
   140016b30:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140016b34:	rex.WB add BYTE PTR [r8],al
	...
   140016b3f:	add    BYTE PTR [rbx],al
   140016b41:	add    BYTE PTR [rax],al
   140016b43:	add    BYTE PTR [rsi],cl
   140016b45:	add    BYTE PTR [rax],al
   140016b47:	add    BYTE PTR [rax],dl
   140016b49:	add    BYTE PTR [rax],al
   140016b4b:	add    BYTE PTR [rax],bl
   140016b4d:	add    BYTE PTR [rax],al
   140016b4f:	add    BYTE PTR [rbp+0x0],cl
   140016b52:	push   rbp
   140016b53:	add    BYTE PTR [rcx+0x0],cl
	...
   140016b5e:	add    BYTE PTR [rax],al
   140016b60:	add    eax,DWORD PTR [rax]
   140016b62:	add    BYTE PTR [rax],al
   140016b64:	add    eax,0x6000000
   140016b69:	add    BYTE PTR [rax],al
   140016b6b:	add    BYTE PTR [rsi],cl
   140016b6d:	add    BYTE PTR [rax],al
   140016b6f:	add    BYTE PTR [rax],dl
   140016b71:	add    BYTE PTR [rax],al
   140016b73:	add    BYTE PTR [rax],al
   140016b75:	add    BYTE PTR [rax],al
   140016b77:	add    BYTE PTR [rbp+0x0],ah
   140016b7a:	outs   dx,BYTE PTR ds:[rsi]
   140016b7b:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301c081
   140016b81:	add    BYTE PTR [rax],al
   140016b83:	add    BYTE PTR [rax],al
   140016b85:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140017000 <.reloc>:
   140017000:	add    BYTE PTR [rax],dh
   140017002:	add    BYTE PTR [rax],al
   140017004:	rex.WR add BYTE PTR [rax],r8b
   140017007:	add    al,dh
   140017009:	movabs eax,ds:0xa228a220a208a1f8
   140017012:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   140017019:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140017022:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   140017029:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   140017032:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   140017038:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14001703e:	xor    BYTE PTR [rbx-0x5ae75cc8],ah
   140017044:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
	...
