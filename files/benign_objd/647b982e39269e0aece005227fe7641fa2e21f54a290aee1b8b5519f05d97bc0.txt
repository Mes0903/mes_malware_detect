
647b982e39269e0aece005227fe7641fa2e21f54a290aee1b8b5519f05d97bc0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x5ed5]        # 0x406ef0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x5ed6]        # 0x406f00
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x5ed9]        # 0x406f10
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x5e9c]        # 0x406ee0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5d4f]        # 0x406da0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5e71]        # 0x406ed0
  40105f:	mov    DWORD PTR [rip+0x8fa3],edx        # 0x40a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x404b80
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x403b40
  401081:	mov    rdx,QWORD PTR [rip+0x5da8]        # 0x406e30
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x5d8e]        # 0x406e20
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x5df4]        # 0x406e90
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x5d2b]        # 0x406dd0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x403720
  4010af:	mov    rax,QWORD PTR [rip+0x5c9a]        # 0x406d50
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x404b80
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x28f9]        # 0x403a20
  401127:	call   0x403a10
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5d55]        # 0x406ec0
  40116b:	lea    r8,[rip+0x8ea6]        # 0x40a018
  401172:	lea    rdx,[rip+0x8ea7]        # 0x40a020
  401179:	lea    rcx,[rip+0x8ea8]        # 0x40a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x8e78],eax        # 0x40a000
  401188:	lea    rax,[rip+0x8e71]        # 0x40a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x5ce5]        # 0x406e80
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x404b98
  4011a3:	mov    DWORD PTR [rip+0x8e67],eax        # 0x40a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x5d0a]        # 0x406ed0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x5c0b]        # 0x406e00
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xa21a]        # 0x40b41c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x5be7]        # 0x406e10
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x8dba],0x1        # 0x40a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x5b2c]        # 0x406d90
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403d30
  40127d:	lea    rcx,[rip+0x304c]        # 0x4042d0
  401284:	call   QWORD PTR [rip+0xa18a]        # 0x40b414
  40128a:	mov    rdx,QWORD PTR [rip+0x5b5f]        # 0x406df0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4041e0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x404bc0
  4012a5:	call   0x403b20
  4012aa:	mov    rax,QWORD PTR [rip+0x5aef]        # 0x406da0
  4012b1:	mov    QWORD PTR [rip+0x9750],rax        # 0x40aa08
  4012b8:	mov    rax,QWORD PTR [rip+0x5b01]        # 0x406dc0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x96e9],rax        # 0x40aa00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3cca],eax        # 0x405000
  401336:	mov    r12d,DWORD PTR [rip+0x8ceb]        # 0x40a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404b10
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x8cc2]        # 0x40a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x404af0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404b10
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404b08
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x8c6a],rbp        # 0x40a020
  4013b6:	call   0x4036f0
  4013bb:	mov    rax,QWORD PTR [rip+0x59ee]        # 0x406db0
  4013c2:	mov    rdx,QWORD PTR [rip+0x8c4f]        # 0x40a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x8c59]        # 0x40a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x8c3c]        # 0x40a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x8c3d]        # 0x40a020
  4013e3:	call   0x404c90
  4013e8:	mov    ecx,DWORD PTR [rip+0x8c1a]        # 0x40a008
  4013ee:	mov    DWORD PTR [rip+0x8c18],eax        # 0x40a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x8c02]        # 0x40a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404b68
  40140b:	mov    eax,DWORD PTR [rip+0x8bfb]        # 0x40a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x59d9]        # 0x406e10
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404b70
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x59ed]        # 0x406e50
  401463:	mov    rcx,QWORD PTR [rip+0x59d6]        # 0x406e40
  40146a:	call   0x404b60
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x9f2b]        # 0x40b3c4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x59c9]        # 0x406e70
  4014a7:	mov    rcx,QWORD PTR [rip+0x59b2]        # 0x406e60
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x404b60
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x404b30
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x59f5]        # 0x406ed0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x403730
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x59c5]        # 0x406ed0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x403730
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	mov    rbx,rcx
  401539:	mov    rcx,QWORD PTR [rcx+0x8]
  40153d:	mov    rsi,rdx
  401540:	cmp    rcx,QWORD PTR [rbx+0x10]
  401544:	je     0x401560
  401546:	mov    rax,QWORD PTR [rbx]
  401549:	lea    rdx,[rcx+0x1]
  40154d:	mov    QWORD PTR [rbx+0x8],rdx
  401551:	mov    QWORD PTR [rax+rcx*8],rsi
  401555:	mov    rax,rbx
  401558:	add    rsp,0x28
  40155c:	pop    rbx
  40155d:	pop    rsi
  40155e:	ret    
  40155f:	nop
  401560:	lea    rdx,[rcx+rcx*1+0x1]
  401565:	mov    rcx,QWORD PTR [rbx]
  401568:	mov    QWORD PTR [rbx+0x10],rdx
  40156c:	shl    rdx,0x3
  401570:	call   0x4034e8
  401575:	mov    rcx,QWORD PTR [rbx+0x8]
  401579:	mov    QWORD PTR [rbx],rax
  40157c:	jmp    0x401549
  40157e:	xchg   ax,ax
  401580:	sub    ecx,0xa
  401583:	cmp    ecx,0x14
  401586:	ja     0x4015d0
  401588:	lea    rax,[rip+0x4a71]        # 0x406000
  40158f:	movsxd rcx,DWORD PTR [rax+rcx*4]
  401593:	add    rax,rcx
  401596:	jmp    rax
  401598:	nop    DWORD PTR [rax+rax*1+0x0]
  4015a0:	mov    rcx,QWORD PTR [rdx]
  4015a3:	jmp    0x404b20
  4015a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015b0:	mov    rcx,QWORD PTR [rdx]
  4015b3:	jmp    0x402c50
  4015b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	mov    rcx,QWORD PTR [rdx]
  4015c3:	jmp    0x402b90
  4015c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015d0:	repz ret 
  4015d2:	mov    rcx,QWORD PTR [rdx]
  4015d5:	jmp    0x402c20
  4015da:	nop    WORD PTR [rax+rax*1+0x0]
  4015e0:	mov    rcx,QWORD PTR [rdx]
  4015e3:	jmp    0x402bd0
  4015e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015f0:	push   r15
  4015f2:	push   r14
  4015f4:	push   r13
  4015f6:	push   r12
  4015f8:	push   rbp
  4015f9:	push   rdi
  4015fa:	push   rsi
  4015fb:	push   rbx
  4015fc:	sub    rsp,0x858
  401603:	xor    esi,esi
  401605:	mov    r14d,0xfffffffe
  40160b:	lea    rax,[rsp+0x80]
  401613:	lea    rbx,[rsp+0x210]
  40161b:	mov    QWORD PTR [rsp+0x8a0],rcx
  401623:	mov    QWORD PTR [rsp+0x20],0xc8
  40162c:	mov    DWORD PTR [rsp+0x3c],0x0
  401634:	mov    r12,rax
  401637:	mov    QWORD PTR [rsp+0x30],rax
  40163c:	mov    rbp,rax
  40163f:	lea    rax,[rsp+0x70]
  401644:	mov    QWORD PTR [rsp+0x28],rbx
  401649:	mov    QWORD PTR [rsp+0x48],rax
  40164e:	lea    rax,[rsp+0x6c]
  401653:	mov    QWORD PTR [rsp+0x58],rax
  401658:	mov    rax,QWORD PTR [rsp+0x20]
  40165d:	mov    WORD PTR [rbp+0x0],si
  401661:	add    rax,rax
  401664:	lea    rdx,[r12+rax*1-0x2]
  401669:	cmp    rbp,rdx
  40166c:	jb     0x40172c
  401672:	mov    rdi,rbp
  401675:	sub    rdi,r12
  401678:	sar    rdi,1
  40167b:	add    rdi,0x1
  40167f:	cmp    QWORD PTR [rsp+0x20],0x270f
  401688:	ja     0x401e3c
  40168e:	cmp    rax,0x2710
  401694:	mov    edx,0x2710
  401699:	cmovbe rdx,rax
  40169d:	lea    rax,[rdx+rdx*4]
  4016a1:	mov    r15,rdx
  4016a4:	mov    QWORD PTR [rsp+0x20],rdx
  4016a9:	lea    rcx,[rax+rax*1+0x7]
  4016ae:	call   0x403518
  4016b3:	test   rax,rax
  4016b6:	mov    r13,rax
  4016b9:	je     0x401e3c
  4016bf:	lea    rbx,[rdi+rdi*1]
  4016c3:	mov    rdx,r12
  4016c6:	mov    rcx,rax
  4016c9:	mov    QWORD PTR [rsp+0x50],rax
  4016ce:	shl    rdi,0x3
  4016d2:	mov    r8,rbx
  4016d5:	call   0x404b08
  4016da:	lea    rax,[r15+r15*1]
  4016de:	mov    rdx,QWORD PTR [rsp+0x28]
  4016e3:	lea    r15,[r13+r15*2+0x0]
  4016e8:	mov    r8,rdi
  4016eb:	mov    rcx,r15
  4016ee:	mov    QWORD PTR [rsp+0x40],rax
  4016f3:	call   0x404b08
  4016f8:	cmp    r12,QWORD PTR [rsp+0x30]
  4016fd:	je     0x401707
  4016ff:	mov    rcx,r12
  401702:	call   0x404b20
  401707:	mov    rax,QWORD PTR [rsp+0x40]
  40170c:	lea    rbp,[r13+rbx*1-0x2]
  401711:	lea    rbx,[r15+rdi*1-0x8]
  401716:	lea    rax,[r13+rax*1-0x2]
  40171b:	cmp    rbp,rax
  40171e:	jae    0x401e8f
  401724:	mov    QWORD PTR [rsp+0x28],r15
  401729:	mov    r12,r13
  40172c:	cmp    esi,0x7
  40172f:	je     0x401e85
  401735:	lea    r13,[rip+0x4b84]        # 0x4062c0
  40173c:	movsxd r15,esi
  40173f:	movsx  r9d,BYTE PTR [r13+r15*1+0x0]
  401745:	cmp    r9d,0xffffffec
  401749:	je     0x401880
  40174f:	cmp    r14d,0xfffffffe
  401753:	je     0x401a50
  401759:	test   r14d,r14d
  40175c:	jle    0x401a00
  401762:	cmp    r14d,0x10c
  401769:	mov    eax,0x2
  40176e:	jg     0x40177e
  401770:	lea    rdx,[rip+0x4b89]        # 0x406300
  401777:	movsxd rax,r14d
  40177a:	movzx  eax,BYTE PTR [rdx+rax*1]
  40177e:	add    r9d,eax
  401781:	cmp    r9d,0x37
  401785:	ja     0x40179e
  401787:	lea    rdx,[rip+0x4a32]        # 0x4061c0
  40178e:	movsxd r9,r9d
  401791:	movsx  edx,BYTE PTR [rdx+r9*1]
  401796:	cmp    edx,eax
  401798:	je     0x401a10
  40179e:	lea    rax,[rip+0x4adb]        # 0x406280
  4017a5:	movzx  edx,BYTE PTR [rax+r15*1]
  4017aa:	test   edx,edx
  4017ac:	jne    0x401890
  4017b2:	cmp    r14d,0x10c
  4017b9:	mov    ecx,0x2
  4017be:	jbe    0x4018f0
  4017c4:	mov    eax,DWORD PTR [rsp+0x3c]
  4017c8:	test   eax,eax
  4017ca:	je     0x40190a
  4017d0:	cmp    DWORD PTR [rsp+0x3c],0x3
  4017d5:	jne    0x40182a
  4017d7:	cmp    r14d,0x0
  4017db:	jle    0x4019b5
  4017e1:	mov    rdx,QWORD PTR [rsp+0x48]
  4017e6:	mov    r14d,0xfffffffe
  4017ec:	call   0x401580
  4017f1:	movsx  eax,BYTE PTR [r13+r15*1+0x0]
  4017f7:	cmp    eax,0xffffffec
  4017fa:	jne    0x401835
  4017fc:	nop    DWORD PTR [rax+0x0]
  401800:	cmp    rbp,r12
  401803:	je     0x401940
  401809:	lea    rax,[rip+0x4970]        # 0x406180
  401810:	mov    rdx,rbx
  401813:	sub    rbp,0x2
  401817:	sub    rbx,0x8
  40181b:	movzx  ecx,BYTE PTR [rax+r15*1]
  401820:	call   0x401580
  401825:	movsx  r15,WORD PTR [rbp+0x0]
  40182a:	movsx  eax,BYTE PTR [r13+r15*1+0x0]
  401830:	cmp    eax,0xffffffec
  401833:	je     0x401800
  401835:	add    eax,0x1
  401838:	cmp    eax,0x37
  40183b:	ja     0x401800
  40183d:	lea    rdx,[rip+0x497c]        # 0x4061c0
  401844:	cdqe   
  401846:	cmp    BYTE PTR [rdx+rax*1],0x1
  40184a:	jne    0x401800
  40184c:	lea    rdx,[rip+0x49ad]        # 0x406200
  401853:	movzx  esi,BYTE PTR [rdx+rax*1]
  401857:	test   esi,esi
  401859:	je     0x401800
  40185b:	mov    rdx,QWORD PTR [rsp+0x70]
  401860:	mov    rax,rbx
  401863:	mov    DWORD PTR [rsp+0x3c],0x3
  40186b:	add    rbx,0x8
  40186f:	mov    QWORD PTR [rax+0x8],rdx
  401873:	jmp    0x401a44
  401878:	nop    DWORD PTR [rax+rax*1+0x0]
  401880:	lea    rax,[rip+0x49f9]        # 0x406280
  401887:	movzx  edx,BYTE PTR [rax+r15*1]
  40188c:	test   edx,edx
  40188e:	je     0x4018d0
  401890:	lea    rax,[rip+0x4869]        # 0x406100
  401897:	movsxd r13,edx
  40189a:	sub    edx,0x4
  40189d:	movzx  ecx,BYTE PTR [rax+r13*1]
  4018a2:	mov    eax,0x1
  4018a7:	sub    eax,ecx
  4018a9:	cmp    edx,0xe
  4018ac:	mov    rsi,rcx
  4018af:	cdqe   
  4018b1:	mov    rdi,QWORD PTR [rbx+rax*8]
  4018b5:	ja     0x401e23
  4018bb:	lea    rax,[rip+0x47ea]        # 0x4060ac
  4018c2:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4018c6:	add    rax,rdx
  4018c9:	jmp    rax
  4018cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4018d0:	mov    ecx,0xfffffffe
  4018d5:	cmp    r14d,ecx
  4018d8:	je     0x4017c4
  4018de:	cmp    r14d,0x10c
  4018e5:	mov    ecx,0x2
  4018ea:	ja     0x4017c4
  4018f0:	lea    rdx,[rip+0x4a09]        # 0x406300
  4018f7:	movsxd rax,r14d
  4018fa:	movzx  ecx,BYTE PTR [rdx+rax*1]
  4018fe:	mov    eax,DWORD PTR [rsp+0x3c]
  401902:	test   eax,eax
  401904:	jne    0x4017d0
  40190a:	lea    rdx,[rip+0x4769]        # 0x40607a
  401911:	lea    rcx,[rip+0x476f]        # 0x406087
  401918:	call   0x403570
  40191d:	mov    rsi,rax
  401920:	call   QWORD PTR [rip+0x9b4e]        # 0x40b474
  401926:	lea    rdx,[rip+0x4768]        # 0x406095
  40192d:	lea    rcx,[rax+0x60]
  401931:	mov    r8,rsi
  401934:	call   0x403540
  401939:	jmp    0x40182a
  40193e:	xchg   ax,ax
  401940:	cmp    r14d,0xfffffffe
  401944:	mov    r13,rbp
  401947:	mov    esi,0x1
  40194c:	je     0x401990
  40194e:	cmp    r14d,0x10c
  401955:	mov    ecx,0x2
  40195a:	jbe    0x4019d0
  40195c:	lea    rdx,[rsp+0x70]
  401961:	call   0x401580
  401966:	cmp    r12,r13
  401969:	lea    rdi,[rip+0x4810]        # 0x406180
  401970:	je     0x401990
  401972:	movsx  rax,WORD PTR [r12]
  401977:	mov    rdx,rbx
  40197a:	sub    r12,0x2
  40197e:	sub    rbx,0x8
  401982:	movzx  ecx,BYTE PTR [rdi+rax*1]
  401986:	call   0x401580
  40198b:	cmp    r12,r13
  40198e:	jne    0x401972
  401990:	cmp    r13,QWORD PTR [rsp+0x30]
  401995:	je     0x40199f
  401997:	mov    rcx,r13
  40199a:	call   0x404b20
  40199f:	mov    eax,esi
  4019a1:	add    rsp,0x858
  4019a8:	pop    rbx
  4019a9:	pop    rsi
  4019aa:	pop    rdi
  4019ab:	pop    rbp
  4019ac:	pop    r12
  4019ae:	pop    r13
  4019b0:	pop    r14
  4019b2:	pop    r15
  4019b4:	ret    
  4019b5:	jne    0x40182a
  4019bb:	mov    r13,r12
  4019be:	mov    esi,0x1
  4019c3:	mov    r12,rbp
  4019c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019d0:	lea    rax,[rip+0x4929]        # 0x406300
  4019d7:	movsxd r14,r14d
  4019da:	movzx  ecx,BYTE PTR [rax+r14*1]
  4019df:	jmp    0x40195c
  4019e4:	mov    rax,QWORD PTR [rsp+0x8a0]
  4019ec:	test   r14d,r14d
  4019ef:	mov    QWORD PTR [rax],r8
  4019f2:	jg     0x401770
  4019f8:	nop    DWORD PTR [rax+rax*1+0x0]
  401a00:	xor    eax,eax
  401a02:	xor    r14d,r14d
  401a05:	jmp    0x40177e
  401a0a:	nop    WORD PTR [rax+rax*1+0x0]
  401a10:	lea    rax,[rip+0x47e9]        # 0x406200
  401a17:	movzx  esi,BYTE PTR [rax+r9*1]
  401a1c:	test   esi,esi
  401a1e:	je     0x401dbd
  401a24:	mov    eax,DWORD PTR [rsp+0x3c]
  401a28:	mov    r14d,0xfffffffe
  401a2e:	cmp    eax,0x1
  401a31:	adc    eax,0xffffffff
  401a34:	add    rbx,0x8
  401a38:	mov    DWORD PTR [rsp+0x3c],eax
  401a3c:	mov    rax,QWORD PTR [rsp+0x70]
  401a41:	mov    QWORD PTR [rbx],rax
  401a44:	add    rbp,0x2
  401a48:	jmp    0x401658
  401a4d:	nop    DWORD PTR [rax]
  401a50:	mov    rax,QWORD PTR [rsp+0x8a0]
  401a58:	mov    r10,QWORD PTR [rax]
  401a5b:	movzx  eax,BYTE PTR [r10]
  401a5f:	test   al,al
  401a61:	jne    0x401a80
  401a63:	jmp    0x401ddd
  401a68:	nop    DWORD PTR [rax+rax*1+0x0]
  401a70:	add    r10,0x1
  401a74:	movzx  eax,BYTE PTR [r10]
  401a78:	test   al,al
  401a7a:	je     0x401ddd
  401a80:	cmp    al,0x9
  401a82:	je     0x401a70
  401a84:	cmp    al,0x20
  401a86:	je     0x401a70
  401a88:	mov    rsi,QWORD PTR [rsp+0x8a0]
  401a90:	test   al,al
  401a92:	movzx  edx,BYTE PTR [r10]
  401a96:	mov    r8,QWORD PTR [rsi+0x8]
  401a9a:	js     0x401e9e
  401aa0:	mov    DWORD PTR [rsp+0x6c],edx
  401aa4:	lea    rsi,[rip+0x45a9]        # 0x406054
  401aab:	mov    ecx,0x3
  401ab0:	mov    rdi,r10
  401ab3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401ab5:	jne    0x401df2
  401abb:	mov    rax,QWORD PTR [rsp+0x8a0]
  401ac3:	add    r10,0x3
  401ac7:	mov    r14d,0x105
  401acd:	mov    QWORD PTR [rax],r10
  401ad0:	jmp    0x401770
  401ad5:	lea    rax,[rcx*8+0x0]
  401add:	lea    rdx,[rcx+rcx*1]
  401ae1:	mov    rdi,QWORD PTR [rbx]
  401ae4:	neg    rax
  401ae7:	neg    rdx
  401aea:	nop    WORD PTR [rax+rax*1+0x0]
  401af0:	add    rax,rbx
  401af3:	add    rbp,rdx
  401af6:	lea    rdx,[rip+0x4763]        # 0x406260
  401afd:	lea    rbx,[rax+0x8]
  401b01:	mov    QWORD PTR [rax+0x8],rdi
  401b05:	lea    rax,[rip+0x4634]        # 0x406140
  401b0c:	movzx  ecx,WORD PTR [rbp+0x0]
  401b10:	movzx  eax,BYTE PTR [rax+r13*1]
  401b15:	sub    eax,0x15
  401b18:	cdqe   
  401b1a:	movsx  r8d,BYTE PTR [rdx+rax*1]
  401b1f:	movsx  edx,cx
  401b22:	add    edx,r8d
  401b25:	cmp    edx,0x37
  401b28:	ja     0x401b44
  401b2a:	lea    r8,[rip+0x468f]        # 0x4061c0
  401b31:	movsxd rdx,edx
  401b34:	movsx  r8w,BYTE PTR [r8+rdx*1]
  401b3a:	cmp    cx,r8w
  401b3e:	je     0x401dcd
  401b44:	lea    rdx,[rip+0x46f5]        # 0x406240
  401b4b:	movsx  esi,BYTE PTR [rdx+rax*1]
  401b4f:	jmp    0x401a44
  401b54:	mov    r15,QWORD PTR [rbx]
  401b57:	mov    ecx,0x10
  401b5c:	call   0x4034f0
  401b61:	mov    rdi,rax
  401b64:	mov    QWORD PTR [rax],r15
  401b67:	lea    rax,[rsi*8+0x0]
  401b6f:	lea    rdx,[rsi+rsi*1]
  401b73:	mov    QWORD PTR [rdi+0x8],r15
  401b77:	neg    rax
  401b7a:	neg    rdx
  401b7d:	jmp    0x401af0
  401b82:	mov    rdi,QWORD PTR [rbx]
  401b85:	mov    ecx,0x18
  401b8a:	call   0x4034f0
  401b8f:	mov    DWORD PTR [rax],0x2
  401b95:	mov    ecx,0x18
  401b9a:	mov    r15,rax
  401b9d:	mov    QWORD PTR [rax+0x8],rdi
  401ba1:	mov    rdx,QWORD PTR [rbx-0x10]
  401ba5:	mov    QWORD PTR [rsp+0x40],rdx
  401baa:	call   0x4034f0
  401baf:	mov    rdi,rax
  401bb2:	mov    DWORD PTR [rax],0x0
  401bb8:	mov    rdx,QWORD PTR [rsp+0x40]
  401bbd:	mov    QWORD PTR [rdi+0x8],rdx
  401bc1:	lea    rax,[rsi*8+0x0]
  401bc9:	lea    rdx,[rsi+rsi*1]
  401bcd:	mov    QWORD PTR [rdi+0x10],r15
  401bd1:	neg    rax
  401bd4:	neg    rdx
  401bd7:	jmp    0x401af0
  401bdc:	mov    rdx,QWORD PTR [rbx-0x18]
  401be0:	mov    ecx,0x10
  401be5:	mov    r15,QWORD PTR [rbx-0x8]
  401be9:	mov    QWORD PTR [rsp+0x40],rdx
  401bee:	call   0x4034f0
  401bf3:	mov    rdx,QWORD PTR [rsp+0x40]
  401bf8:	mov    QWORD PTR [rax+0x8],r15
  401bfc:	mov    r8,rax
  401bff:	mov    QWORD PTR [rax],rdx
  401c02:	mov    rax,QWORD PTR [rsp+0x8a0]
  401c0a:	mov    r15,QWORD PTR [rax+0x10]
  401c0e:	mov    rdx,QWORD PTR [r15+0x8]
  401c12:	cmp    rdx,QWORD PTR [r15+0x10]
  401c16:	je     0x401eeb
  401c1c:	mov    rax,QWORD PTR [r15]
  401c1f:	lea    rcx,[rdx+0x1]
  401c23:	mov    QWORD PTR [r15+0x8],rcx
  401c27:	mov    QWORD PTR [rax+rdx*8],r8
  401c2b:	lea    rax,[rsi*8+0x0]
  401c33:	lea    rdx,[rsi+rsi*1]
  401c37:	neg    rax
  401c3a:	neg    rdx
  401c3d:	jmp    0x401af0
  401c42:	mov    rdx,QWORD PTR [rbx-0x10]
  401c46:	mov    ecx,0x18
  401c4b:	mov    r15,QWORD PTR [rbx]
  401c4e:	mov    QWORD PTR [rsp+0x40],rdx
  401c53:	call   0x4034f0
  401c58:	mov    rdx,QWORD PTR [rsp+0x40]
  401c5d:	mov    rdi,rax
  401c60:	mov    DWORD PTR [rax+0x8],0x1
  401c67:	mov    QWORD PTR [rax],rdx
  401c6a:	jmp    0x401bc1
  401c6f:	mov    r15d,DWORD PTR [rbx]
  401c72:	mov    ecx,0x8
  401c77:	call   0x4034f0
  401c7c:	lea    rdx,[rsi+rsi*1]
  401c80:	mov    rdi,rax
  401c83:	mov    DWORD PTR [rax+0x4],0x0
  401c8a:	mov    DWORD PTR [rax],r15d
  401c8d:	lea    rax,[rsi*8+0x0]
  401c95:	neg    rdx
  401c98:	neg    rax
  401c9b:	jmp    0x401af0
  401ca0:	mov    edx,DWORD PTR [rbx-0x10]
  401ca3:	mov    rax,QWORD PTR [rbx]
  401ca6:	mov    ecx,0x8
  401cab:	mov    r15d,DWORD PTR [rax+0x8]
  401caf:	mov    DWORD PTR [rsp+0x40],edx
  401cb3:	call   0x4034f0
  401cb8:	mov    edx,DWORD PTR [rsp+0x40]
  401cbc:	mov    rdi,rax
  401cbf:	mov    DWORD PTR [rax+0x4],r15d
  401cc3:	mov    DWORD PTR [rax],edx
  401cc5:	lea    rax,[rsi*8+0x0]
  401ccd:	lea    rdx,[rsi+rsi*1]
  401cd1:	neg    rax
  401cd4:	neg    rdx
  401cd7:	jmp    0x401af0
  401cdc:	mov    ecx,0x18
  401ce1:	call   0x4034f0
  401ce6:	mov    QWORD PTR [rax],0x0
  401ced:	mov    QWORD PTR [rax+0x8],0x0
  401cf5:	mov    rcx,rax
  401cf8:	mov    QWORD PTR [rax+0x10],0x0
  401d00:	mov    rdx,QWORD PTR [rbx]
  401d03:	call   0x401530
  401d08:	lea    rdx,[rsi+rsi*1]
  401d0c:	mov    rdi,rax
  401d0f:	lea    rax,[rsi*8+0x0]
  401d17:	neg    rdx
  401d1a:	neg    rax
  401d1d:	jmp    0x401af0
  401d22:	mov    rcx,QWORD PTR [rbx-0x10]
  401d26:	mov    rdx,QWORD PTR [rbx]
  401d29:	jmp    0x401d03
  401d2b:	mov    rdx,QWORD PTR [rbx-0x10]
  401d2f:	mov    ecx,0x10
  401d34:	mov    r15,QWORD PTR [rbx]
  401d37:	mov    QWORD PTR [rsp+0x40],rdx
  401d3c:	call   0x4034f0
  401d41:	mov    rdx,QWORD PTR [rsp+0x40]
  401d46:	mov    rdi,rax
  401d49:	mov    QWORD PTR [rax],rdx
  401d4c:	jmp    0x401b67
  401d51:	mov    rdx,QWORD PTR [rbx-0x10]
  401d55:	mov    ecx,0x18
  401d5a:	mov    r15,QWORD PTR [rbx]
  401d5d:	mov    QWORD PTR [rsp+0x40],rdx
  401d62:	call   0x4034f0
  401d67:	mov    rdi,rax
  401d6a:	mov    DWORD PTR [rax],0x1
  401d70:	jmp    0x401bb8
  401d75:	mov    ecx,0x18
  401d7a:	mov    r15,QWORD PTR [rbx]
  401d7d:	call   0x4034f0
  401d82:	mov    rdi,rax
  401d85:	mov    DWORD PTR [rax],0x2
  401d8b:	jmp    0x401b67
  401d90:	mov    rdx,QWORD PTR [rbx-0x10]
  401d94:	mov    ecx,0x18
  401d99:	mov    r15,QWORD PTR [rbx]
  401d9c:	mov    QWORD PTR [rsp+0x40],rdx
  401da1:	call   0x4034f0
  401da6:	mov    rdx,QWORD PTR [rsp+0x40]
  401dab:	mov    rdi,rax
  401dae:	mov    DWORD PTR [rax+0x8],0x0
  401db5:	mov    QWORD PTR [rax],rdx
  401db8:	jmp    0x401bc1
  401dbd:	mov    rdi,QWORD PTR [rbx+0x8]
  401dc1:	xor    edx,edx
  401dc3:	xor    eax,eax
  401dc5:	xor    r13d,r13d
  401dc8:	jmp    0x401af0
  401dcd:	lea    rax,[rip+0x442c]        # 0x406200
  401dd4:	movzx  esi,BYTE PTR [rax+rdx*1]
  401dd8:	jmp    0x401a44
  401ddd:	mov    rax,QWORD PTR [rsp+0x8a0]
  401de5:	xor    r14d,r14d
  401de8:	mov    QWORD PTR [rax],r10
  401deb:	xor    eax,eax
  401ded:	jmp    0x40177e
  401df2:	lea    rsi,[rip+0x425f]        # 0x406058
  401df9:	mov    ecx,0x2
  401dfe:	mov    rdi,r10
  401e01:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e03:	jne    0x401f1a
  401e09:	mov    rax,QWORD PTR [rsp+0x8a0]
  401e11:	add    r10,0x2
  401e15:	mov    r14d,0x104
  401e1b:	mov    QWORD PTR [rax],r10
  401e1e:	jmp    0x401770
  401e23:	lea    rax,[rsi*8+0x0]
  401e2b:	add    rsi,rsi
  401e2e:	neg    rsi
  401e31:	neg    rax
  401e34:	mov    rdx,rsi
  401e37:	jmp    0x401af0
  401e3c:	lea    rdx,[rip+0x4256]        # 0x406099
  401e43:	lea    rcx,[rip+0x423d]        # 0x406087
  401e4a:	mov    r13,r12
  401e4d:	mov    r12,rbp
  401e50:	call   0x403570
  401e55:	mov    rsi,rax
  401e58:	call   QWORD PTR [rip+0x9616]        # 0x40b474
  401e5e:	lea    rdx,[rip+0x4230]        # 0x406095
  401e65:	lea    rcx,[rax+0x60]
  401e69:	mov    r8,rsi
  401e6c:	mov    esi,0x2
  401e71:	call   0x403540
  401e76:	cmp    r14d,0xfffffffe
  401e7a:	jne    0x40194e
  401e80:	jmp    0x401966
  401e85:	mov    r13,r12
  401e88:	xor    esi,esi
  401e8a:	mov    r12,rbp
  401e8d:	jmp    0x401e76
  401e8f:	mov    r13,QWORD PTR [rsp+0x50]
  401e94:	mov    r12,rbp
  401e97:	mov    esi,0x1
  401e9c:	jmp    0x401e76
  401e9e:	mov    rcx,QWORD PTR [rsp+0x58]
  401ea3:	sub    r8,r10
  401ea6:	mov    rdx,r10
  401ea9:	mov    DWORD PTR [rsp+0x50],r9d
  401eae:	mov    QWORD PTR [rsp+0x40],r10
  401eb3:	call   0x4034f8
  401eb8:	cmp    DWORD PTR [rsp+0x6c],0x2026
  401ec0:	mov    r10,QWORD PTR [rsp+0x40]
  401ec5:	mov    r9d,DWORD PTR [rsp+0x50]
  401eca:	jne    0x401aa4
  401ed0:	cdqe   
  401ed2:	mov    r14d,0x105
  401ed8:	add    r10,rax
  401edb:	mov    rax,QWORD PTR [rsp+0x8a0]
  401ee3:	mov    QWORD PTR [rax],r10
  401ee6:	jmp    0x401770
  401eeb:	lea    rax,[rdx+rdx*1+0x1]
  401ef0:	mov    rcx,QWORD PTR [r15]
  401ef3:	mov    QWORD PTR [rsp+0x40],r8
  401ef8:	lea    rdx,[rax*8+0x0]
  401f00:	mov    QWORD PTR [r15+0x10],rax
  401f04:	call   0x4034e8
  401f09:	mov    rdx,QWORD PTR [r15+0x8]
  401f0d:	mov    QWORD PTR [r15],rax
  401f10:	mov    r8,QWORD PTR [rsp+0x40]
  401f15:	jmp    0x401c1f
  401f1a:	lea    rsi,[rip+0x413a]        # 0x40605b
  401f21:	mov    ecx,0x5
  401f26:	mov    rdi,r10
  401f29:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401f2b:	jne    0x401f47
  401f2d:	mov    rax,QWORD PTR [rsp+0x8a0]
  401f35:	add    r10,0x5
  401f39:	mov    r14d,0x106
  401f3f:	mov    QWORD PTR [rax],r10
  401f42:	jmp    0x401770
  401f47:	lea    rsi,[rip+0x4113]        # 0x406061
  401f4e:	mov    ecx,0x8
  401f53:	mov    rdi,r10
  401f56:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401f58:	jne    0x401f74
  401f5a:	mov    rax,QWORD PTR [rsp+0x8a0]
  401f62:	add    r10,0x8
  401f66:	mov    r14d,0x107
  401f6c:	mov    QWORD PTR [rax],r10
  401f6f:	jmp    0x401770
  401f74:	lea    rsi,[rip+0x40ef]        # 0x40606a
  401f7b:	mov    ecx,0x8
  401f80:	mov    rdi,r10
  401f83:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401f85:	jne    0x401fa1
  401f87:	mov    rax,QWORD PTR [rsp+0x8a0]
  401f8f:	add    r10,0x8
  401f93:	mov    r14d,0x108
  401f99:	mov    QWORD PTR [rax],r10
  401f9c:	jmp    0x401770
  401fa1:	movsx  r14d,BYTE PTR [r10]
  401fa5:	lea    r8,[r10+0x1]
  401fa9:	cmp    r14b,0x39
  401fad:	mov    eax,r14d
  401fb0:	jg     0x402055
  401fb6:	cmp    r14b,0x30
  401fba:	jge    0x401fec
  401fbc:	cmp    r14b,0x21
  401fc0:	jne    0x4019e4
  401fc6:	cmp    BYTE PTR [r10+0x1],0x3d
  401fcb:	mov    r14d,0x100
  401fd1:	jne    0x401fdc
  401fd3:	lea    r8,[r10+0x2]
  401fd7:	mov    r14w,0x21
  401fdc:	mov    rax,QWORD PTR [rsp+0x8a0]
  401fe4:	mov    QWORD PTR [rax],r8
  401fe7:	jmp    0x401770
  401fec:	movsx  eax,BYTE PTR [r10+0x1]
  401ff1:	sub    r14d,0x30
  401ff5:	lea    edx,[rax-0x30]
  401ff8:	cmp    dl,0x9
  401ffb:	ja     0x402016
  401ffd:	lea    edx,[r14+r14*4]
  402001:	add    r8,0x1
  402005:	lea    r14d,[rax+rdx*2-0x30]
  40200a:	movsx  eax,BYTE PTR [r8]
  40200e:	lea    edx,[rax-0x30]
  402011:	cmp    dl,0x9
  402014:	jbe    0x401ffd
  402016:	mov    ecx,0x18
  40201b:	mov    QWORD PTR [rsp+0x50],r8
  402020:	mov    DWORD PTR [rsp+0x40],r9d
  402025:	call   0x4034f0
  40202a:	mov    r8,QWORD PTR [rsp+0x50]
  40202f:	mov    QWORD PTR [rsp+0x70],rax
  402034:	mov    r9d,DWORD PTR [rsp+0x40]
  402039:	cmp    BYTE PTR [r8],0x2e
  40203d:	je     0x402139
  402043:	mov    DWORD PTR [rax+0x8],r14d
  402047:	mov    DWORD PTR [rax],0x0
  40204d:	mov    r14d,0x10a
  402053:	jmp    0x401fdc
  402055:	sub    eax,0x61
  402058:	cmp    al,0x19
  40205a:	ja     0x4019e4
  402060:	mov    rcx,QWORD PTR [rip+0x7fc9]        # 0x40a030
  402067:	mov    rdx,QWORD PTR [rip+0x7fca]        # 0x40a038
  40206e:	xor    edi,edi
  402070:	cmp    rdi,rdx
  402073:	jb     0x4020ab
  402075:	lea    rdx,[rdx+rdx*1+0xa]
  40207a:	mov    QWORD PTR [rsp+0x50],r8
  40207f:	mov    DWORD PTR [rsp+0x40],r9d
  402084:	mov    QWORD PTR [rip+0x7fad],rdx        # 0x40a038
  40208b:	call   0x4034e8
  402090:	mov    rdx,QWORD PTR [rip+0x7fa1]        # 0x40a038
  402097:	mov    r8,QWORD PTR [rsp+0x50]
  40209c:	mov    rcx,rax
  40209f:	mov    r9d,DWORD PTR [rsp+0x40]
  4020a4:	mov    QWORD PTR [rip+0x7f85],rax        # 0x40a030
  4020ab:	mov    BYTE PTR [rcx+rdi*1],r14b
  4020af:	movsx  r14d,BYTE PTR [r8]
  4020b3:	lea    rsi,[rdi+0x1]
  4020b7:	mov    eax,r14d
  4020ba:	sub    eax,0x61
  4020bd:	cmp    al,0x19
  4020bf:	ja     0x4020ca
  4020c1:	add    r8,0x1
  4020c5:	mov    rdi,rsi
  4020c8:	jmp    0x402070
  4020ca:	cmp    rdx,rsi
  4020cd:	mov    rax,rcx
  4020d0:	ja     0x4020fe
  4020d2:	lea    rdx,[rdx+rdx*1+0xa]
  4020d7:	mov    QWORD PTR [rsp+0x50],r8
  4020dc:	mov    DWORD PTR [rsp+0x40],r9d
  4020e1:	mov    QWORD PTR [rip+0x7f50],rdx        # 0x40a038
  4020e8:	call   0x4034e8
  4020ed:	mov    r8,QWORD PTR [rsp+0x50]
  4020f2:	mov    r9d,DWORD PTR [rsp+0x40]
  4020f7:	mov    QWORD PTR [rip+0x7f32],rax        # 0x40a030
  4020fe:	cmp    rsi,0x1
  402102:	mov    BYTE PTR [rax+rsi*1],0x0
  402106:	je     0x4021d8
  40210c:	lea    rdi,[rip+0x3f60]        # 0x406073
  402113:	mov    ecx,0x4
  402118:	mov    rsi,rax
  40211b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40211d:	jne    0x4021af
  402123:	mov    rax,QWORD PTR [rsp+0x8a0]
  40212b:	mov    r14d,0x102
  402131:	mov    QWORD PTR [rax],r8
  402134:	jmp    0x401770
  402139:	movsx  edx,BYTE PTR [r8+0x1]
  40213e:	lea    ecx,[rdx-0x30]
  402141:	cmp    cl,0x9
  402144:	ja     0x402043
  40214a:	pxor   xmm1,xmm1
  40214e:	add    r8,0x1
  402152:	xor    r10d,r10d
  402155:	mov    ecx,0xa
  40215a:	cvtsi2sd xmm1,r14
  40215f:	pxor   xmm0,xmm0
  402163:	sub    edx,0x30
  402166:	add    r8,0x1
  40216a:	pxor   xmm2,xmm2
  40216e:	add    r10d,0x1
  402172:	cvtsi2sd xmm0,edx
  402176:	movsx  edx,BYTE PTR [r8]
  40217a:	cvtsi2sd xmm2,ecx
  40217e:	lea    ecx,[rcx+rcx*4]
  402181:	add    ecx,ecx
  402183:	lea    r11d,[rdx-0x30]
  402187:	cmp    r11b,0x9
  40218b:	divsd  xmm0,xmm2
  40218f:	addsd  xmm1,xmm0
  402193:	jbe    0x40215f
  402195:	mov    DWORD PTR [rax],0x1
  40219b:	movsd  QWORD PTR [rax+0x8],xmm1
  4021a0:	mov    DWORD PTR [rax+0x10],r10d
  4021a4:	mov    r14d,0x10b
  4021aa:	jmp    0x401fdc
  4021af:	lea    rdi,[rip+0x3ec1]        # 0x406077
  4021b6:	mov    ecx,0x3
  4021bb:	mov    rsi,rax
  4021be:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4021c0:	jne    0x402213
  4021c2:	mov    rax,QWORD PTR [rsp+0x8a0]
  4021ca:	mov    r14d,0x103
  4021d0:	mov    QWORD PTR [rax],r8
  4021d3:	jmp    0x401770
  4021d8:	movzx  edi,BYTE PTR [rax]
  4021db:	lea    ecx,[rdi-0x66]
  4021de:	cmp    cl,0x11
  4021e1:	ja     0x40210c
  4021e7:	shl    rsi,cl
  4021ea:	test   esi,0x34109
  4021f0:	je     0x40210c
  4021f6:	mov    rsi,QWORD PTR [rsp+0x8a0]
  4021fe:	mov    r14d,0x10c
  402204:	mov    QWORD PTR [rsi],r8
  402207:	movsx  eax,BYTE PTR [rax]
  40220a:	mov    DWORD PTR [rsp+0x70],eax
  40220e:	jmp    0x401770
  402213:	mov    rcx,rax
  402216:	mov    QWORD PTR [rsp+0x50],r8
  40221b:	mov    DWORD PTR [rsp+0x40],r9d
  402220:	mov    r14d,0x109
  402226:	call   0x4034e0
  40222b:	mov    r9d,DWORD PTR [rsp+0x40]
  402230:	mov    QWORD PTR [rsp+0x70],rax
  402235:	mov    r8,QWORD PTR [rsp+0x50]
  40223a:	jmp    0x401fdc
  40223f:	nop
  402240:	push   rsi
  402241:	push   rbx
  402242:	sub    rsp,0x28
  402246:	mov    edx,DWORD PTR [rcx]
  402248:	cmp    edx,0x1
  40224b:	jbe    0x402265
  40224d:	xor    eax,eax
  40224f:	cmp    edx,0x2
  402252:	jne    0x40225e
  402254:	mov    rax,QWORD PTR [rcx+0x8]
  402258:	mov    rax,QWORD PTR [rax]
  40225b:	mov    eax,DWORD PTR [rax+0x4]
  40225e:	add    rsp,0x28
  402262:	pop    rbx
  402263:	pop    rsi
  402264:	ret    
  402265:	mov    rbx,rcx
  402268:	mov    rcx,QWORD PTR [rcx+0x8]
  40226c:	call   0x402240
  402271:	mov    rcx,QWORD PTR [rbx+0x10]
  402275:	mov    esi,eax
  402277:	call   0x402240
  40227c:	cmp    eax,esi
  40227e:	cmovl  eax,esi
  402281:	jmp    0x40225e
  402283:	nop    DWORD PTR [rax]
  402286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402290:	push   rsi
  402291:	push   rbx
  402292:	sub    rsp,0x28
  402296:	mov    edx,DWORD PTR [rcx]
  402298:	cmp    edx,0x1
  40229b:	jbe    0x402310
  40229d:	xor    eax,eax
  40229f:	cmp    edx,0x2
  4022a2:	je     0x4022b0
  4022a4:	add    rsp,0x28
  4022a8:	pop    rbx
  4022a9:	pop    rsi
  4022aa:	ret    
  4022ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4022b0:	mov    rax,QWORD PTR [rcx+0x8]
  4022b4:	mov    rdx,QWORD PTR [rax+0x10]
  4022b8:	mov    rax,QWORD PTR [rdx+0x8]
  4022bc:	test   rax,rax
  4022bf:	je     0x402331
  4022c1:	mov    rdx,QWORD PTR [rdx]
  4022c4:	lea    r9,[rdx+rax*8]
  4022c8:	xor    eax,eax
  4022ca:	jmp    0x4022e1
  4022cc:	nop    DWORD PTR [rax+0x0]
  4022d0:	mov    ecx,DWORD PTR [rcx+0x8]
  4022d3:	cmp    eax,ecx
  4022d5:	cmovl  eax,ecx
  4022d8:	add    rdx,0x8
  4022dc:	cmp    rdx,r9
  4022df:	je     0x4022a4
  4022e1:	mov    rcx,QWORD PTR [rdx]
  4022e4:	mov    rcx,QWORD PTR [rcx+0x8]
  4022e8:	mov    r8d,DWORD PTR [rcx]
  4022eb:	test   r8d,r8d
  4022ee:	je     0x4022d0
  4022f0:	cmp    r8d,0x1
  4022f4:	jne    0x4022d8
  4022f6:	pxor   xmm1,xmm1
  4022fa:	movsd  xmm0,QWORD PTR [rcx+0x8]
  4022ff:	cvtsi2sd xmm1,eax
  402303:	ucomisd xmm0,xmm1
  402307:	jbe    0x4022d8
  402309:	cvttsd2si eax,xmm0
  40230d:	jmp    0x4022d8
  40230f:	nop
  402310:	mov    rbx,rcx
  402313:	mov    rcx,QWORD PTR [rcx+0x8]
  402317:	call   0x402290
  40231c:	mov    rcx,QWORD PTR [rbx+0x10]
  402320:	mov    esi,eax
  402322:	call   0x402290
  402327:	cmp    eax,esi
  402329:	cmovl  eax,esi
  40232c:	jmp    0x4022a4
  402331:	xor    eax,eax
  402333:	jmp    0x4022a4
  402338:	nop    DWORD PTR [rax+rax*1+0x0]
  402340:	push   rsi
  402341:	push   rbx
  402342:	sub    rsp,0x28
  402346:	mov    rsi,rcx
  402349:	mov    ebx,edx
  40234b:	mov    edx,DWORD PTR [rsi]
  40234d:	test   edx,edx
  40234f:	je     0x4023d0
  402351:	cmp    edx,0x1
  402354:	je     0x4023f0
  40235a:	xor    eax,eax
  40235c:	cmp    edx,0x2
  40235f:	je     0x402370
  402361:	add    rsp,0x28
  402365:	pop    rbx
  402366:	pop    rsi
  402367:	ret    
  402368:	nop    DWORD PTR [rax+rax*1+0x0]
  402370:	mov    r10,QWORD PTR [rsi+0x8]
  402374:	mov    rax,QWORD PTR [r10]
  402377:	mov    esi,DWORD PTR [rax+0x4]
  40237a:	test   esi,esi
  40237c:	jle    0x402385
  40237e:	mov    eax,ebx
  402380:	cdq    
  402381:	idiv   esi
  402383:	mov    ebx,edx
  402385:	mov    rax,QWORD PTR [r10+0x10]
  402389:	mov    rdx,QWORD PTR [rax+0x8]
  40238d:	test   rdx,rdx
  402390:	je     0x4023be
  402392:	mov    r9,QWORD PTR [rax]
  402395:	xor    ecx,ecx
  402397:	nop    WORD PTR [rax+rax*1+0x0]
  4023a0:	mov    r8,QWORD PTR [r9+rcx*8]
  4023a4:	mov    rax,QWORD PTR [r8]
  4023a7:	cmp    ebx,DWORD PTR [rax+0x8]
  4023aa:	jl     0x4023b5
  4023ac:	mov    rax,QWORD PTR [r8+0x8]
  4023b0:	cmp    ebx,DWORD PTR [rax+0x8]
  4023b3:	jle    0x402405
  4023b5:	add    rcx,0x1
  4023b9:	cmp    rcx,rdx
  4023bc:	jne    0x4023a0
  4023be:	mov    eax,DWORD PTR [r10+0x8]
  4023c2:	test   eax,eax
  4023c4:	setne  al
  4023c7:	add    rsp,0x28
  4023cb:	pop    rbx
  4023cc:	pop    rsi
  4023cd:	ret    
  4023ce:	xchg   ax,ax
  4023d0:	mov    rcx,QWORD PTR [rsi+0x8]
  4023d4:	mov    edx,ebx
  4023d6:	call   0x402340
  4023db:	test   al,al
  4023dd:	je     0x402361
  4023df:	mov    rsi,QWORD PTR [rsi+0x10]
  4023e3:	jmp    0x40234b
  4023e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4023f0:	mov    rcx,QWORD PTR [rsi+0x8]
  4023f4:	mov    edx,ebx
  4023f6:	call   0x402340
  4023fb:	test   al,al
  4023fd:	jne    0x402361
  402403:	jmp    0x4023df
  402405:	mov    edx,DWORD PTR [r10+0x8]
  402409:	test   edx,edx
  40240b:	sete   al
  40240e:	jmp    0x402361
  402413:	nop    DWORD PTR [rax]
  402416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402420:	mov    rax,rcx
  402423:	mov    rcx,r8
  402426:	mov    r8d,DWORD PTR [rax+0x4]
  40242a:	test   r8d,r8d
  40242d:	je     0x402450
  40242f:	test   dl,dl
  402431:	lea    rax,[rip+0x4008]        # 0x406440
  402438:	lea    rdx,[rip+0x4009]        # 0x406448
  40243f:	cmovne rdx,rax
  402443:	jmp    0x403540
  402448:	nop    DWORD PTR [rax+rax*1+0x0]
  402450:	lea    rdx,[rip+0x3ff7]        # 0x40644e
  402457:	jmp    0x403540
  40245c:	nop    DWORD PTR [rax+0x0]
  402460:	push   r15
  402462:	push   r14
  402464:	push   r13
  402466:	push   r12
  402468:	push   rbp
  402469:	push   rdi
  40246a:	push   rsi
  40246b:	push   rbx
  40246c:	sub    rsp,0x28
  402470:	mov    rsi,rcx
  402473:	mov    ecx,DWORD PTR [rcx]
  402475:	mov    edi,edx
  402477:	mov    rbx,r9
  40247a:	mov    r12d,r8d
  40247d:	test   ecx,ecx
  40247f:	jne    0x4024d0
  402481:	cmp    edx,0x1
  402484:	je     0x402670
  40248a:	mov    rcx,QWORD PTR [rsi+0x8]
  40248e:	xor    r8d,r8d
  402491:	xor    edx,edx
  402493:	call   0x402460
  402498:	lea    rdx,[rip+0x3fc9]        # 0x406468
  40249f:	mov    rcx,rbx
  4024a2:	call   0x403540
  4024a7:	mov    rcx,QWORD PTR [rsi+0x10]
  4024ab:	mov    r9,rbx
  4024ae:	xor    r8d,r8d
  4024b1:	xor    edx,edx
  4024b3:	call   0x402460
  4024b8:	mov    eax,0x1
  4024bd:	add    rsp,0x28
  4024c1:	pop    rbx
  4024c2:	pop    rsi
  4024c3:	pop    rdi
  4024c4:	pop    rbp
  4024c5:	pop    r12
  4024c7:	pop    r13
  4024c9:	pop    r14
  4024cb:	pop    r15
  4024cd:	ret    
  4024ce:	xchg   ax,ax
  4024d0:	cmp    ecx,0x1
  4024d3:	je     0x402620
  4024d9:	xor    eax,eax
  4024db:	cmp    ecx,0x2
  4024de:	jne    0x4024bd
  4024e0:	mov    rsi,QWORD PTR [rsi+0x8]
  4024e4:	mov    eax,DWORD PTR [rsi+0x8]
  4024e7:	test   eax,eax
  4024e9:	mov    rax,QWORD PTR [rsi+0x10]
  4024ed:	jne    0x4026c2
  4024f3:	test   edx,edx
  4024f5:	jne    0x402971
  4024fb:	mov    rdx,QWORD PTR [rax+0x8]
  4024ff:	cmp    rdx,0x1
  402503:	jbe    0x402517
  402505:	mov    rdx,r9
  402508:	mov    cl,0x28
  40250a:	call   0x403538
  40250f:	mov    rax,QWORD PTR [rsi+0x10]
  402513:	mov    rdx,QWORD PTR [rax+0x8]
  402517:	test   rdx,rdx
  40251a:	je     0x4024b8
  40251c:	mov    rax,QWORD PTR [rax]
  40251f:	lea    r15,[rip+0x3f2a]        # 0x406450
  402526:	xor    ebp,ebp
  402528:	movzx  r14d,r12b
  40252c:	mov    r13,QWORD PTR [rax]
  40252f:	nop
  402530:	mov    rax,QWORD PTR [r13+0x0]
  402534:	mov    rdx,QWORD PTR [r13+0x8]
  402538:	mov    eax,DWORD PTR [rax+0x8]
  40253b:	cmp    eax,DWORD PTR [rdx+0x8]
  40253e:	je     0x4028b0
  402544:	test   eax,eax
  402546:	je     0x4027e0
  40254c:	cmp    edi,0x1
  40254f:	je     0x4029b0
  402555:	mov    rax,QWORD PTR [rsi+0x10]
  402559:	cmp    QWORD PTR [rax+0x8],0x1
  40255e:	jbe    0x40256d
  402560:	mov    rdx,rbx
  402563:	mov    ecx,0x28
  402568:	call   0x403538
  40256d:	mov    rcx,QWORD PTR [rsi]
  402570:	xor    edx,edx
  402572:	mov    r8,rbx
  402575:	call   0x402420
  40257a:	mov    rax,QWORD PTR [r13+0x0]
  40257e:	lea    rdx,[rip+0x3ef6]        # 0x40647b
  402585:	mov    rcx,rbx
  402588:	mov    r8d,DWORD PTR [rax+0x8]
  40258c:	call   0x403540
  402591:	lea    rdx,[rip+0x3ed0]        # 0x406468
  402598:	mov    rcx,rbx
  40259b:	call   0x403540
  4025a0:	mov    rcx,QWORD PTR [rsi]
  4025a3:	xor    edx,edx
  4025a5:	mov    r8,rbx
  4025a8:	call   0x402420
  4025ad:	mov    rax,QWORD PTR [r13+0x8]
  4025b1:	lea    rdx,[rip+0x3eba]        # 0x406472
  4025b8:	mov    rcx,rbx
  4025bb:	mov    r8d,DWORD PTR [rax+0x8]
  4025bf:	call   0x403540
  4025c4:	mov    rax,QWORD PTR [rsi+0x10]
  4025c8:	mov    rdx,QWORD PTR [rax+0x8]
  4025cc:	cmp    rdx,0x1
  4025d0:	jbe    0x4025e7
  4025d2:	mov    rdx,rbx
  4025d5:	mov    ecx,0x29
  4025da:	call   0x403538
  4025df:	mov    rax,QWORD PTR [rsi+0x10]
  4025e3:	mov    rdx,QWORD PTR [rax+0x8]
  4025e7:	add    rbp,0x1
  4025eb:	cmp    rbp,rdx
  4025ee:	jae    0x4029a0
  4025f4:	mov    rax,QWORD PTR [rax]
  4025f7:	test   rbp,rbp
  4025fa:	mov    r13,QWORD PTR [rax+rbp*8]
  4025fe:	je     0x402530
  402604:	lea    rdx,[rip+0x3e62]        # 0x40646d
  40260b:	mov    rcx,rbx
  40260e:	call   0x403540
  402613:	jmp    0x402530
  402618:	nop    DWORD PTR [rax+rax*1+0x0]
  402620:	test   edx,edx
  402622:	je     0x402930
  402628:	mov    rcx,QWORD PTR [rsi+0x8]
  40262c:	xor    r8d,r8d
  40262f:	mov    edx,0x1
  402634:	call   0x402460
  402639:	lea    rdx,[rip+0x3e2d]        # 0x40646d
  402640:	mov    rcx,rbx
  402643:	call   0x403540
  402648:	mov    rcx,QWORD PTR [rsi+0x10]
  40264c:	mov    r9,rbx
  40264f:	xor    r8d,r8d
  402652:	mov    edx,0x1
  402657:	call   0x402460
  40265c:	mov    eax,0x1
  402661:	jmp    0x4024bd
  402666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402670:	mov    rdx,r9
  402673:	mov    cl,0x28
  402675:	call   0x403538
  40267a:	mov    rcx,QWORD PTR [rsi+0x8]
  40267e:	mov    r9,rbx
  402681:	xor    r8d,r8d
  402684:	xor    edx,edx
  402686:	call   0x402460
  40268b:	lea    rdx,[rip+0x3dd6]        # 0x406468
  402692:	mov    rcx,rbx
  402695:	call   0x403540
  40269a:	mov    rcx,QWORD PTR [rsi+0x10]
  40269e:	mov    r9,rbx
  4026a1:	xor    r8d,r8d
  4026a4:	xor    edx,edx
  4026a6:	call   0x402460
  4026ab:	mov    rdx,rbx
  4026ae:	mov    ecx,0x29
  4026b3:	call   0x403538
  4026b8:	mov    eax,0x1
  4026bd:	jmp    0x4024bd
  4026c2:	cmp    edx,0x1
  4026c5:	je     0x402a19
  4026cb:	cmp    QWORD PTR [rax+0x8],0x0
  4026d0:	je     0x4024b8
  4026d6:	mov    rax,QWORD PTR [rax]
  4026d9:	lea    r15,[rip+0x3d7c]        # 0x40645c
  4026e0:	xor    ebp,ebp
  4026e2:	movzx  r14d,r12b
  4026e6:	mov    r13,QWORD PTR [rax]
  4026e9:	nop    DWORD PTR [rax+0x0]
  4026f0:	mov    rax,QWORD PTR [r13+0x0]
  4026f4:	mov    rdx,QWORD PTR [r13+0x8]
  4026f8:	mov    eax,DWORD PTR [rax+0x8]
  4026fb:	cmp    eax,DWORD PTR [rdx+0x8]
  4026fe:	je     0x4028f0
  402704:	test   eax,eax
  402706:	je     0x402811
  40270c:	test   edi,edi
  40270e:	je     0x402842
  402714:	mov    rax,QWORD PTR [rsi+0x10]
  402718:	cmp    QWORD PTR [rax+0x8],0x1
  40271d:	jbe    0x40272c
  40271f:	mov    rdx,rbx
  402722:	mov    ecx,0x28
  402727:	call   0x403538
  40272c:	mov    rcx,QWORD PTR [rsi]
  40272f:	xor    edx,edx
  402731:	mov    r8,rbx
  402734:	call   0x402420
  402739:	mov    rax,QWORD PTR [r13+0x0]
  40273d:	lea    rdx,[rip+0x3d3c]        # 0x406480
  402744:	mov    rcx,rbx
  402747:	mov    r8d,DWORD PTR [rax+0x8]
  40274b:	call   0x403540
  402750:	lea    rdx,[rip+0x3d16]        # 0x40646d
  402757:	mov    rcx,rbx
  40275a:	call   0x403540
  40275f:	mov    rcx,QWORD PTR [rsi]
  402762:	xor    edx,edx
  402764:	mov    r8,rbx
  402767:	call   0x402420
  40276c:	mov    rax,QWORD PTR [r13+0x8]
  402770:	lea    rdx,[rip+0x3d00]        # 0x406477
  402777:	mov    rcx,rbx
  40277a:	mov    r8d,DWORD PTR [rax+0x8]
  40277e:	call   0x403540
  402783:	mov    rax,QWORD PTR [rsi+0x10]
  402787:	mov    rdx,QWORD PTR [rax+0x8]
  40278b:	cmp    rdx,0x1
  40278f:	jbe    0x4027a6
  402791:	mov    rdx,rbx
  402794:	mov    ecx,0x29
  402799:	call   0x403538
  40279e:	mov    rax,QWORD PTR [rsi+0x10]
  4027a2:	mov    rdx,QWORD PTR [rax+0x8]
  4027a6:	add    rbp,0x1
  4027aa:	cmp    rbp,rdx
  4027ad:	jae    0x402981
  4027b3:	mov    rax,QWORD PTR [rax]
  4027b6:	test   rbp,rbp
  4027b9:	mov    r13,QWORD PTR [rax+rbp*8]
  4027bd:	je     0x4026f0
  4027c3:	lea    rdx,[rip+0x3c9e]        # 0x406468
  4027ca:	mov    rcx,rbx
  4027cd:	call   0x403540
  4027d2:	jmp    0x4026f0
  4027d7:	nop    WORD PTR [rax+rax*1+0x0]
  4027e0:	mov    rcx,QWORD PTR [rsi]
  4027e3:	mov    r8,rbx
  4027e6:	xor    edx,edx
  4027e8:	call   0x402420
  4027ed:	mov    rax,QWORD PTR [r13+0x8]
  4027f1:	lea    rdx,[rip+0x3c7a]        # 0x406472
  4027f8:	mov    r8d,DWORD PTR [rax+0x8]
  4027fc:	mov    rcx,rbx
  4027ff:	call   0x403540
  402804:	mov    rax,QWORD PTR [rsi+0x10]
  402808:	mov    rdx,QWORD PTR [rax+0x8]
  40280c:	jmp    0x4025e7
  402811:	mov    rcx,QWORD PTR [rsi]
  402814:	mov    r8,rbx
  402817:	xor    edx,edx
  402819:	call   0x402420
  40281e:	mov    rax,QWORD PTR [r13+0x8]
  402822:	lea    rdx,[rip+0x3c4e]        # 0x406477
  402829:	mov    r8d,DWORD PTR [rax+0x8]
  40282d:	mov    rcx,rbx
  402830:	call   0x403540
  402835:	mov    rax,QWORD PTR [rsi+0x10]
  402839:	mov    rdx,QWORD PTR [rax+0x8]
  40283d:	jmp    0x4027a6
  402842:	mov    rdx,rbx
  402845:	mov    ecx,0x28
  40284a:	call   0x403538
  40284f:	mov    rcx,QWORD PTR [rsi]
  402852:	mov    r8,rbx
  402855:	xor    edx,edx
  402857:	call   0x402420
  40285c:	mov    rax,QWORD PTR [r13+0x0]
  402860:	lea    rdx,[rip+0x3c19]        # 0x406480
  402867:	mov    rcx,rbx
  40286a:	mov    r8d,DWORD PTR [rax+0x8]
  40286e:	call   0x403540
  402873:	lea    rdx,[rip+0x3bf3]        # 0x40646d
  40287a:	mov    rcx,rbx
  40287d:	call   0x403540
  402882:	mov    rcx,QWORD PTR [rsi]
  402885:	mov    r8,rbx
  402888:	xor    edx,edx
  40288a:	call   0x402420
  40288f:	mov    rax,QWORD PTR [r13+0x8]
  402893:	lea    rdx,[rip+0x3bdd]        # 0x406477
  40289a:	mov    rcx,rbx
  40289d:	mov    r8d,DWORD PTR [rax+0x8]
  4028a1:	call   0x403540
  4028a6:	jmp    0x402791
  4028ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b0:	mov    rcx,QWORD PTR [rsi]
  4028b3:	mov    r8,rbx
  4028b6:	mov    edx,r14d
  4028b9:	call   0x402420
  4028be:	mov    rax,QWORD PTR [r13+0x0]
  4028c2:	test   r12b,r12b
  4028c5:	lea    rdx,[rip+0x3b8b]        # 0x406457
  4028cc:	mov    r8d,DWORD PTR [rax+0x8]
  4028d0:	je     0x4027fc
  4028d6:	mov    rax,QWORD PTR [rsi+0x10]
  4028da:	cmp    QWORD PTR [rax+0x8],0x1
  4028df:	cmove  rdx,r15
  4028e3:	jmp    0x4027fc
  4028e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	mov    rcx,QWORD PTR [rsi]
  4028f3:	mov    r8,rbx
  4028f6:	mov    edx,r14d
  4028f9:	call   0x402420
  4028fe:	mov    rax,QWORD PTR [r13+0x0]
  402902:	test   r12b,r12b
  402905:	lea    rdx,[rip+0x3b57]        # 0x406463
  40290c:	mov    r8d,DWORD PTR [rax+0x8]
  402910:	je     0x40282d
  402916:	mov    rax,QWORD PTR [rsi+0x10]
  40291a:	cmp    QWORD PTR [rax+0x8],0x1
  40291f:	cmove  rdx,r15
  402923:	jmp    0x40282d
  402928:	nop    DWORD PTR [rax+rax*1+0x0]
  402930:	mov    rdx,r9
  402933:	mov    cl,0x28
  402935:	call   0x403538
  40293a:	mov    rcx,QWORD PTR [rsi+0x8]
  40293e:	mov    r9,rbx
  402941:	xor    r8d,r8d
  402944:	mov    edx,0x1
  402949:	call   0x402460
  40294e:	lea    rdx,[rip+0x3b18]        # 0x40646d
  402955:	mov    rcx,rbx
  402958:	call   0x403540
  40295d:	mov    rcx,QWORD PTR [rsi+0x10]
  402961:	mov    r9,rbx
  402964:	xor    r8d,r8d
  402967:	mov    edx,0x1
  40296c:	jmp    0x4026a6
  402971:	cmp    QWORD PTR [rax+0x8],0x0
  402976:	jne    0x40251c
  40297c:	jmp    0x4024b8
  402981:	cmp    edi,0x1
  402984:	jne    0x4024b8
  40298a:	cmp    rdx,0x1
  40298e:	ja     0x4026ab
  402994:	jmp    0x4024b8
  402999:	nop    DWORD PTR [rax+0x0]
  4029a0:	test   edi,edi
  4029a2:	je     0x40298a
  4029a4:	jmp    0x4024b8
  4029a9:	nop    DWORD PTR [rax+0x0]
  4029b0:	mov    rdx,rbx
  4029b3:	mov    ecx,0x28
  4029b8:	call   0x403538
  4029bd:	mov    rcx,QWORD PTR [rsi]
  4029c0:	mov    r8,rbx
  4029c3:	xor    edx,edx
  4029c5:	call   0x402420
  4029ca:	mov    rax,QWORD PTR [r13+0x0]
  4029ce:	lea    rdx,[rip+0x3aa6]        # 0x40647b
  4029d5:	mov    rcx,rbx
  4029d8:	mov    r8d,DWORD PTR [rax+0x8]
  4029dc:	call   0x403540
  4029e1:	lea    rdx,[rip+0x3a80]        # 0x406468
  4029e8:	mov    rcx,rbx
  4029eb:	call   0x403540
  4029f0:	mov    rcx,QWORD PTR [rsi]
  4029f3:	mov    r8,rbx
  4029f6:	xor    edx,edx
  4029f8:	call   0x402420
  4029fd:	mov    rax,QWORD PTR [r13+0x8]
  402a01:	lea    rdx,[rip+0x3a6a]        # 0x406472
  402a08:	mov    rcx,rbx
  402a0b:	mov    r8d,DWORD PTR [rax+0x8]
  402a0f:	call   0x403540
  402a14:	jmp    0x4025d2
  402a19:	mov    rdx,QWORD PTR [rax+0x8]
  402a1d:	cmp    rdx,0x1
  402a21:	jbe    0x402a38
  402a23:	mov    rdx,r9
  402a26:	mov    ecx,0x28
  402a2b:	call   0x403538
  402a30:	mov    rax,QWORD PTR [rsi+0x10]
  402a34:	mov    rdx,QWORD PTR [rax+0x8]
  402a38:	test   rdx,rdx
  402a3b:	jne    0x4026d6
  402a41:	jmp    0x4024b8
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	push   rbx
  402a51:	sub    rsp,0x20
  402a55:	xor    eax,eax
  402a57:	cmp    DWORD PTR [rcx],0x2
  402a5a:	je     0x402a62
  402a5c:	add    rsp,0x20
  402a60:	pop    rbx
  402a61:	ret    
  402a62:	mov    rcx,QWORD PTR [rcx+0x8]
  402a66:	mov    r10d,DWORD PTR [rcx+0x8]
  402a6a:	test   r10d,r10d
  402a6d:	jne    0x402a5c
  402a6f:	mov    rcx,QWORD PTR [rcx+0x10]
  402a73:	mov    r11,QWORD PTR [rcx+0x8]
  402a77:	mov    rbx,QWORD PTR [rcx]
  402a7a:	test   r11,r11
  402a7d:	je     0x402b18
  402a83:	mov    rcx,QWORD PTR [rbx]
  402a86:	mov    r8,QWORD PTR [rcx]
  402a89:	mov    r9d,DWORD PTR [r8]
  402a8c:	test   r9d,r9d
  402a8f:	jne    0x402a5c
  402a91:	mov    r9,QWORD PTR [rcx+0x8]
  402a95:	mov    r10d,DWORD PTR [r9]
  402a98:	test   r10d,r10d
  402a9b:	jne    0x402a5c
  402a9d:	mov    r8d,DWORD PTR [r8+0x8]
  402aa1:	test   r8d,r8d
  402aa4:	jne    0x402a5c
  402aa6:	xor    eax,eax
  402aa8:	jmp    0x402ad3
  402aaa:	nop    WORD PTR [rax+rax*1+0x0]
  402ab0:	mov    r9,QWORD PTR [rbx+rax*8]
  402ab4:	mov    r10,QWORD PTR [r9]
  402ab7:	mov    ecx,DWORD PTR [r10]
  402aba:	test   ecx,ecx
  402abc:	jne    0x402b10
  402abe:	mov    r9,QWORD PTR [r9+0x8]
  402ac2:	mov    ecx,DWORD PTR [r9]
  402ac5:	test   ecx,ecx
  402ac7:	jne    0x402b10
  402ac9:	add    r8d,0x1
  402acd:	cmp    DWORD PTR [r10+0x8],r8d
  402ad1:	jne    0x402b10
  402ad3:	add    rax,0x1
  402ad7:	mov    r8d,DWORD PTR [r9+0x8]
  402adb:	cmp    rax,r11
  402ade:	jne    0x402ab0
  402ae0:	lea    rax,[rax*8-0x8]
  402ae8:	mov    rax,QWORD PTR [rbx+rax*1]
  402aec:	mov    rcx,rdx
  402aef:	lea    rdx,[rip+0x398e]        # 0x406484
  402af6:	mov    rax,QWORD PTR [rax+0x8]
  402afa:	mov    r8d,DWORD PTR [rax+0x8]
  402afe:	call   0x403540
  402b03:	mov    eax,0x1
  402b08:	jmp    0x402a5c
  402b0d:	nop    DWORD PTR [rax]
  402b10:	xor    eax,eax
  402b12:	add    rsp,0x20
  402b16:	pop    rbx
  402b17:	ret    
  402b18:	mov    rax,0xfffffffffffffff8
  402b1f:	jmp    0x402ae8
  402b21:	nop    DWORD PTR [rax+rax*1+0x0]
  402b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b30:	sub    rsp,0x28
  402b34:	xor    eax,eax
  402b36:	cmp    DWORD PTR [rcx],0x2
  402b39:	je     0x402b40
  402b3b:	add    rsp,0x28
  402b3f:	ret    
  402b40:	mov    rcx,QWORD PTR [rcx+0x8]
  402b44:	mov    r8d,DWORD PTR [rcx+0x8]
  402b48:	test   r8d,r8d
  402b4b:	jne    0x402b3b
  402b4d:	mov    rcx,QWORD PTR [rcx+0x10]
  402b51:	cmp    QWORD PTR [rcx+0x8],0x1
  402b56:	jne    0x402b3b
  402b58:	mov    rcx,QWORD PTR [rcx]
  402b5b:	mov    rcx,QWORD PTR [rcx]
  402b5e:	mov    r8,QWORD PTR [rcx]
  402b61:	cmp    r8,QWORD PTR [rcx+0x8]
  402b65:	jne    0x402b3b
  402b67:	mov    r8d,DWORD PTR [r8+0x8]
  402b6b:	mov    rcx,rdx
  402b6e:	lea    rdx,[rip+0x3933]        # 0x4064a8
  402b75:	call   0x403540
  402b7a:	mov    eax,0x1
  402b7f:	jmp    0x402b3b
  402b81:	nop    DWORD PTR [rax+rax*1+0x0]
  402b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b90:	push   rbx
  402b91:	sub    rsp,0x20
  402b95:	mov    rbx,rcx
  402b98:	mov    rcx,QWORD PTR [rcx]
  402b9b:	mov    rax,QWORD PTR [rbx+0x8]
  402b9f:	cmp    rcx,rax
  402ba2:	je     0x402bad
  402ba4:	call   0x404b20
  402ba9:	mov    rax,QWORD PTR [rbx+0x8]
  402bad:	mov    rcx,rax
  402bb0:	call   0x404b20
  402bb5:	mov    rcx,rbx
  402bb8:	add    rsp,0x20
  402bbc:	pop    rbx
  402bbd:	jmp    0x404b20
  402bc2:	nop    DWORD PTR [rax+0x0]
  402bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bd0:	push   rbx
  402bd1:	sub    rsp,0x20
  402bd5:	mov    rbx,rcx
  402bd8:	jmp    0x402bec
  402bda:	nop    WORD PTR [rax+rax*1+0x0]
  402be0:	mov    rdx,QWORD PTR [rbx]
  402be3:	mov    rcx,QWORD PTR [rdx+rax*8]
  402be7:	call   0x402b90
  402bec:	mov    rdx,QWORD PTR [rbx+0x8]
  402bf0:	lea    rax,[rdx-0x1]
  402bf4:	test   rdx,rdx
  402bf7:	mov    QWORD PTR [rbx+0x8],rax
  402bfb:	jne    0x402be0
  402bfd:	mov    rcx,QWORD PTR [rbx]
  402c00:	call   0x404b20
  402c05:	mov    rcx,rbx
  402c08:	add    rsp,0x20
  402c0c:	pop    rbx
  402c0d:	jmp    0x404b20
  402c12:	nop    DWORD PTR [rax+0x0]
  402c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c20:	push   rbx
  402c21:	sub    rsp,0x20
  402c25:	mov    rbx,rcx
  402c28:	mov    rcx,QWORD PTR [rcx]
  402c2b:	call   0x404b20
  402c30:	mov    rcx,QWORD PTR [rbx+0x10]
  402c34:	call   0x402bd0
  402c39:	mov    rcx,rbx
  402c3c:	add    rsp,0x20
  402c40:	pop    rbx
  402c41:	jmp    0x404b20
  402c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c50:	push   rbx
  402c51:	sub    rsp,0x20
  402c55:	mov    eax,DWORD PTR [rcx]
  402c57:	mov    rbx,rcx
  402c5a:	cmp    eax,0x1
  402c5d:	jbe    0x402c90
  402c5f:	cmp    eax,0x2
  402c62:	je     0x402c71
  402c64:	mov    rcx,rbx
  402c67:	add    rsp,0x20
  402c6b:	pop    rbx
  402c6c:	jmp    0x404b20
  402c71:	mov    rcx,QWORD PTR [rcx+0x8]
  402c75:	call   0x402c20
  402c7a:	mov    rcx,rbx
  402c7d:	add    rsp,0x20
  402c81:	pop    rbx
  402c82:	jmp    0x404b20
  402c87:	nop    WORD PTR [rax+rax*1+0x0]
  402c90:	mov    rcx,QWORD PTR [rcx+0x8]
  402c94:	call   0x402c50
  402c99:	mov    rcx,QWORD PTR [rbx+0x10]
  402c9d:	call   0x402c50
  402ca2:	jmp    0x402c64
  402ca4:	xchg   ax,ax
  402ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cb0:	push   rdi
  402cb1:	push   rsi
  402cb2:	push   rbx
  402cb3:	sub    rsp,0x20
  402cb7:	mov    eax,DWORD PTR [rcx]
  402cb9:	mov    rbx,rcx
  402cbc:	test   eax,eax
  402cbe:	je     0x402d70
  402cc4:	cmp    eax,0x1
  402cc7:	je     0x402fb0
  402ccd:	mov    rdi,QWORD PTR [rcx+0x8]
  402cd1:	mov    r8,QWORD PTR [rdi]
  402cd4:	mov    eax,DWORD PTR [r8]
  402cd7:	lea    ecx,[rax-0x66]
  402cda:	cmp    ecx,0x11
  402cdd:	ja     0x402d60
  402ce3:	mov    eax,0x1
  402ce8:	shl    rax,cl
  402ceb:	test   eax,0x34001
  402cf0:	je     0x402de0
  402cf6:	mov    rax,QWORD PTR [rdi+0x10]
  402cfa:	mov    r11,QWORD PTR [rax+0x8]
  402cfe:	test   r11,r11
  402d01:	je     0x402eed
  402d07:	pxor   xmm2,xmm2
  402d0b:	mov    r9d,DWORD PTR [rdi+0x8]
  402d0f:	mov    rsi,QWORD PTR [rax]
  402d12:	xor    eax,eax
  402d14:	movapd xmm3,xmm2
  402d18:	movapd xmm1,xmm2
  402d1c:	movapd xmm0,xmm2
  402d20:	test   r9d,r9d
  402d23:	mov    rdx,QWORD PTR [rsi+rax*8]
  402d27:	jne    0x402ea1
  402d2d:	mov    r8,QWORD PTR [rdx]
  402d30:	mov    r10d,DWORD PTR [r8]
  402d33:	test   r10d,r10d
  402d36:	jne    0x402f00
  402d3c:	mov    r10d,DWORD PTR [r8+0x8]
  402d40:	test   r10d,r10d
  402d43:	je     0x402f1c
  402d49:	mov    esi,0x4
  402d4e:	mov    rcx,rdi
  402d51:	call   0x402c20
  402d56:	mov    DWORD PTR [rbx],esi
  402d58:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	add    rsp,0x20
  402d64:	pop    rbx
  402d65:	pop    rsi
  402d66:	pop    rdi
  402d67:	ret    
  402d68:	nop    DWORD PTR [rax+rax*1+0x0]
  402d70:	mov    rcx,QWORD PTR [rcx+0x8]
  402d74:	call   0x402cb0
  402d79:	mov    rcx,QWORD PTR [rbx+0x10]
  402d7d:	call   0x402cb0
  402d82:	mov    rsi,QWORD PTR [rbx+0x8]
  402d86:	mov    eax,DWORD PTR [rsi]
  402d88:	cmp    eax,0x4
  402d8b:	je     0x402ff0
  402d91:	mov    rdi,QWORD PTR [rbx+0x10]
  402d95:	mov    edx,DWORD PTR [rdi]
  402d97:	cmp    edx,0x4
  402d9a:	je     0x402ff0
  402da0:	cmp    eax,0x3
  402da3:	je     0x402e70
  402da9:	cmp    edx,0x3
  402dac:	jne    0x402d60
  402dae:	mov    rcx,rdi
  402db1:	call   0x402c50
  402db6:	mov    rax,QWORD PTR [rbx+0x8]
  402dba:	mov    rcx,rsi
  402dbd:	mov    edx,DWORD PTR [rax]
  402dbf:	mov    DWORD PTR [rbx],edx
  402dc1:	mov    rdx,QWORD PTR [rax+0x10]
  402dc5:	mov    rax,QWORD PTR [rax+0x8]
  402dc9:	mov    QWORD PTR [rbx+0x10],rdx
  402dcd:	mov    QWORD PTR [rbx+0x8],rax
  402dd1:	add    rsp,0x20
  402dd5:	pop    rbx
  402dd6:	pop    rsi
  402dd7:	pop    rdi
  402dd8:	jmp    0x404b20
  402ddd:	nop    DWORD PTR [rax]
  402de0:	test   eax,0x108
  402de5:	je     0x402d60
  402deb:	mov    rax,QWORD PTR [rdi+0x10]
  402def:	mov    rdx,QWORD PTR [rax+0x8]
  402df3:	test   rdx,rdx
  402df6:	je     0x403010
  402dfc:	mov    rax,QWORD PTR [rax]
  402dff:	lea    r10,[rax+rdx*8]
  402e03:	jmp    0x402e1b
  402e05:	mov    rdx,QWORD PTR [rdx+0x8]
  402e09:	cmp    DWORD PTR [rdx],0x1
  402e0c:	je     0x402e58
  402e0e:	add    rax,0x8
  402e12:	cmp    rax,r10
  402e15:	je     0x403010
  402e1b:	mov    rdx,QWORD PTR [rax]
  402e1e:	mov    rcx,QWORD PTR [rdx]
  402e21:	cmp    DWORD PTR [rcx],0x1
  402e24:	jne    0x402e05
  402e26:	movsd  xmm0,QWORD PTR [rcx+0x8]
  402e2b:	mov    DWORD PTR [rcx],0x0
  402e31:	pxor   xmm1,xmm1
  402e35:	cvttsd2si r9d,xmm0
  402e3a:	cvtsi2sd xmm1,r9d
  402e3f:	ucomisd xmm0,xmm1
  402e43:	jp     0x402e47
  402e45:	je     0x402e4b
  402e47:	add    r9d,0x1
  402e4b:	mov    DWORD PTR [rcx+0x8],r9d
  402e4f:	mov    rdx,QWORD PTR [rdx+0x8]
  402e53:	cmp    DWORD PTR [rdx],0x1
  402e56:	jne    0x402e0e
  402e58:	cvttsd2si ecx,QWORD PTR [rdx+0x8]
  402e5d:	mov    DWORD PTR [rdx],0x0
  402e63:	mov    DWORD PTR [rdx+0x8],ecx
  402e66:	jmp    0x402e0e
  402e68:	nop    DWORD PTR [rax+rax*1+0x0]
  402e70:	cmp    edx,0x3
  402e73:	mov    rcx,rsi
  402e76:	je     0x403023
  402e7c:	call   0x402c50
  402e81:	mov    rax,QWORD PTR [rbx+0x10]
  402e85:	mov    rcx,rdi
  402e88:	mov    edx,DWORD PTR [rax]
  402e8a:	mov    DWORD PTR [rbx],edx
  402e8c:	mov    rdx,QWORD PTR [rax+0x10]
  402e90:	mov    rax,QWORD PTR [rax+0x8]
  402e94:	mov    QWORD PTR [rbx+0x10],rdx
  402e98:	mov    QWORD PTR [rbx+0x8],rax
  402e9c:	jmp    0x402dd1
  402ea1:	cmp    r9d,0x1
  402ea5:	jne    0x402ee0
  402ea7:	mov    r8,QWORD PTR [rdx]
  402eaa:	mov    ecx,DWORD PTR [r8]
  402ead:	test   ecx,ecx
  402eaf:	jne    0x402f60
  402eb5:	mov    ecx,DWORD PTR [r8+0x8]
  402eb9:	test   ecx,ecx
  402ebb:	je     0x402d49
  402ec1:	mov    rdx,QWORD PTR [rdx+0x8]
  402ec5:	mov    ecx,DWORD PTR [rdx]
  402ec7:	test   ecx,ecx
  402ec9:	jne    0x402f89
  402ecf:	mov    edx,DWORD PTR [rdx+0x8]
  402ed2:	test   edx,edx
  402ed4:	je     0x402d49
  402eda:	nop    WORD PTR [rax+rax*1+0x0]
  402ee0:	add    rax,0x1
  402ee4:	cmp    rax,r11
  402ee7:	jne    0x402d20
  402eed:	mov    esi,0x3
  402ef2:	jmp    0x402d4e
  402ef7:	nop    WORD PTR [rax+rax*1+0x0]
  402f00:	cmp    r10d,0x1
  402f04:	jne    0x402d49
  402f0a:	ucomisd xmm0,QWORD PTR [r8+0x8]
  402f10:	jp     0x402d49
  402f16:	jne    0x402d49
  402f1c:	mov    rdx,QWORD PTR [rdx+0x8]
  402f20:	mov    r8d,DWORD PTR [rdx]
  402f23:	test   r8d,r8d
  402f26:	jne    0x402f40
  402f28:	mov    r8d,DWORD PTR [rdx+0x8]
  402f2c:	test   r8d,r8d
  402f2f:	jne    0x402d49
  402f35:	jmp    0x402ee0
  402f37:	nop    WORD PTR [rax+rax*1+0x0]
  402f40:	cmp    r8d,0x1
  402f44:	jne    0x402d49
  402f4a:	ucomisd xmm1,QWORD PTR [rdx+0x8]
  402f4f:	jp     0x402d49
  402f55:	je     0x402ee0
  402f57:	jmp    0x402d49
  402f5c:	nop    DWORD PTR [rax+0x0]
  402f60:	cmp    ecx,0x1
  402f63:	jne    0x402ec1
  402f69:	ucomisd xmm3,QWORD PTR [r8+0x8]
  402f6f:	jp     0x402ec1
  402f75:	je     0x402d49
  402f7b:	mov    rdx,QWORD PTR [rdx+0x8]
  402f7f:	mov    ecx,DWORD PTR [rdx]
  402f81:	test   ecx,ecx
  402f83:	je     0x402ecf
  402f89:	cmp    ecx,0x1
  402f8c:	jne    0x402ee0
  402f92:	ucomisd xmm2,QWORD PTR [rdx+0x8]
  402f97:	jp     0x402ee0
  402f9d:	jne    0x402ee0
  402fa3:	jmp    0x402d49
  402fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fb0:	mov    rcx,QWORD PTR [rcx+0x8]
  402fb4:	call   0x402cb0
  402fb9:	mov    rcx,QWORD PTR [rbx+0x10]
  402fbd:	call   0x402cb0
  402fc2:	mov    rsi,QWORD PTR [rbx+0x8]
  402fc6:	mov    eax,DWORD PTR [rsi]
  402fc8:	cmp    eax,0x3
  402fcb:	je     0x403020
  402fcd:	mov    rdi,QWORD PTR [rbx+0x10]
  402fd1:	mov    edx,DWORD PTR [rdi]
  402fd3:	cmp    edx,0x3
  402fd6:	je     0x403020
  402fd8:	cmp    eax,0x4
  402fdb:	je     0x403040
  402fdd:	cmp    edx,0x4
  402fe0:	je     0x402dae
  402fe6:	add    rsp,0x20
  402fea:	pop    rbx
  402feb:	pop    rsi
  402fec:	pop    rdi
  402fed:	ret    
  402fee:	xchg   ax,ax
  402ff0:	mov    rcx,rsi
  402ff3:	call   0x402c50
  402ff8:	mov    rcx,QWORD PTR [rbx+0x10]
  402ffc:	call   0x402c50
  403001:	mov    DWORD PTR [rbx],0x4
  403007:	jmp    0x402d60
  40300c:	nop    DWORD PTR [rax+0x0]
  403010:	mov    DWORD PTR [r8],0x69
  403017:	jmp    0x402d60
  40301c:	nop    DWORD PTR [rax+0x0]
  403020:	mov    rcx,rsi
  403023:	call   0x402c50
  403028:	mov    rcx,QWORD PTR [rbx+0x10]
  40302c:	call   0x402c50
  403031:	mov    DWORD PTR [rbx],0x3
  403037:	jmp    0x402d60
  40303c:	nop    DWORD PTR [rax+0x0]
  403040:	cmp    edx,0x4
  403043:	mov    rcx,rsi
  403046:	jne    0x402e7c
  40304c:	call   0x402c50
  403051:	mov    rcx,QWORD PTR [rbx+0x10]
  403055:	call   0x402c50
  40305a:	mov    DWORD PTR [rbx],0x4
  403060:	jmp    0x402d60
  403065:	nop
  403066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403070:	push   rsi
  403071:	push   rbx
  403072:	sub    rsp,0x28
  403076:	mov    rsi,rcx
  403079:	jmp    0x4030a0
  40307b:	nop    DWORD PTR [rax+rax*1+0x0]
  403080:	mov    rdx,QWORD PTR [rsi]
  403083:	mov    rbx,QWORD PTR [rdx+rax*8]
  403087:	mov    rcx,QWORD PTR [rbx]
  40308a:	call   0x404b20
  40308f:	mov    rcx,QWORD PTR [rbx+0x8]
  403093:	call   0x402c50
  403098:	mov    rcx,rbx
  40309b:	call   0x404b20
  4030a0:	mov    rdx,QWORD PTR [rsi+0x8]
  4030a4:	lea    rax,[rdx-0x1]
  4030a8:	test   rdx,rdx
  4030ab:	mov    QWORD PTR [rsi+0x8],rax
  4030af:	jne    0x403080
  4030b1:	mov    rcx,QWORD PTR [rsi]
  4030b4:	call   0x404b20
  4030b9:	mov    rcx,rsi
  4030bc:	add    rsp,0x28
  4030c0:	pop    rbx
  4030c1:	pop    rsi
  4030c2:	jmp    0x404b20
  4030c7:	nop    WORD PTR [rax+rax*1+0x0]
  4030d0:	push   rsi
  4030d1:	push   rbx
  4030d2:	sub    rsp,0x48
  4030d6:	mov    rbx,rcx
  4030d9:	lea    rsi,[rsp+0x20]
  4030de:	mov    QWORD PTR [rsp+0x20],rcx
  4030e3:	mov    QWORD PTR [rsp+0x28],0x0
  4030ec:	mov    QWORD PTR [rsp+0x30],0x0
  4030f5:	call   0x404af0
  4030fa:	mov    ecx,0x18
  4030ff:	add    rax,rbx
  403102:	mov    QWORD PTR [rsp+0x28],rax
  403107:	call   0x4034f0
  40310c:	mov    rcx,rsi
  40310f:	mov    QWORD PTR [rsp+0x30],rax
  403114:	mov    QWORD PTR [rax],0x0
  40311b:	mov    QWORD PTR [rax+0x8],0x0
  403123:	mov    QWORD PTR [rax+0x10],0x0
  40312b:	call   0x4015f0
  403130:	test   eax,eax
  403132:	jne    0x403140
  403134:	mov    rax,QWORD PTR [rsp+0x30]
  403139:	add    rsp,0x48
  40313d:	pop    rbx
  40313e:	pop    rsi
  40313f:	ret    
  403140:	xor    eax,eax
  403142:	add    rsp,0x48
  403146:	pop    rbx
  403147:	pop    rsi
  403148:	ret    
  403149:	nop    DWORD PTR [rax+0x0]
  403150:	push   r15
  403152:	push   r14
  403154:	push   r13
  403156:	push   r12
  403158:	push   rbp
  403159:	push   rdi
  40315a:	push   rsi
  40315b:	push   rbx
  40315c:	sub    rsp,0x48
  403160:	xor    r13d,r13d
  403163:	cmp    QWORD PTR [rcx+0x8],0x0
  403168:	mov    rdi,rcx
  40316b:	mov    QWORD PTR [rsp+0x28],rdx
  403170:	je     0x4032c1
  403176:	xor    ebx,ebx
  403178:	nop    DWORD PTR [rax+rax*1+0x0]
  403180:	mov    rax,QWORD PTR [rdi]
  403183:	mov    rax,QWORD PTR [rax+rbx*8]
  403187:	add    rbx,0x1
  40318b:	mov    rcx,QWORD PTR [rax+0x8]
  40318f:	call   0x402cb0
  403194:	mov    r13,QWORD PTR [rdi+0x8]
  403198:	cmp    r13,rbx
  40319b:	ja     0x403180
  40319d:	test   r13,r13
  4031a0:	je     0x4034bf
  4031a6:	mov    r15,QWORD PTR [rdi]
  4031a9:	xor    ebx,ebx
  4031ab:	xor    esi,esi
  4031ad:	nop    DWORD PTR [rax]
  4031b0:	mov    rax,QWORD PTR [r15+rsi*8]
  4031b4:	mov    r14,QWORD PTR [rax+0x8]
  4031b8:	mov    rcx,r14
  4031bb:	call   0x402240
  4031c0:	mov    rcx,r14
  4031c3:	mov    ebp,eax
  4031c5:	call   0x402290
  4031ca:	cmp    ebp,ebx
  4031cc:	jle    0x4031d3
  4031ce:	cmp    ebp,eax
  4031d0:	cmovge ebx,ebp
  4031d3:	add    rsi,0x1
  4031d7:	cmp    rsi,r13
  4031da:	jne    0x4031b0
  4031dc:	test   ebx,ebx
  4031de:	jle    0x4032c1
  4031e4:	movsxd rsi,ebx
  4031e7:	mov    rcx,rsi
  4031ea:	call   0x4034f0
  4031ef:	xor    edx,edx
  4031f1:	mov    r8,rsi
  4031f4:	mov    rcx,rax
  4031f7:	mov    QWORD PTR [rsp+0x30],rax
  4031fc:	call   0x404b00
  403201:	mov    rax,QWORD PTR [rdi+0x8]
  403205:	test   rax,rax
  403208:	mov    QWORD PTR [rsp+0x38],rax
  40320d:	je     0x4034cb
  403213:	mov    r15,QWORD PTR [rdi]
  403216:	xor    ebp,ebp
  403218:	nop    DWORD PTR [rax+rax*1+0x0]
  403220:	mov    rax,QWORD PTR [r15+rbp*8]
  403224:	mov    r12,QWORD PTR [rsp+0x30]
  403229:	xor    r13d,r13d
  40322c:	mov    rsi,QWORD PTR [rax+0x8]
  403230:	mov    r14,r12
  403233:	add    r13d,0x1
  403237:	mov    rcx,rsi
  40323a:	mov    edx,r13d
  40323d:	call   0x402340
  403242:	test   al,al
  403244:	je     0x40324b
  403246:	mov    BYTE PTR [r12],0x1
  40324b:	add    r12,0x1
  40324f:	cmp    r13d,ebx
  403252:	jne    0x403233
  403254:	xor    eax,eax
  403256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403260:	cmp    BYTE PTR [r14],0x0
  403264:	je     0x4033f5
  40326a:	add    eax,0x1
  40326d:	add    r14,0x1
  403271:	cmp    eax,ebx
  403273:	jne    0x403260
  403275:	mov    rcx,QWORD PTR [rsp+0x30]
  40327a:	call   0x404b20
  40327f:	mov    r13,QWORD PTR [rdi+0x8]
  403283:	cmp    rbp,r13
  403286:	jae    0x4032c1
  403288:	nop    DWORD PTR [rax+rax*1+0x0]
  403290:	mov    rax,QWORD PTR [rdi]
  403293:	sub    r13,0x1
  403297:	mov    QWORD PTR [rdi+0x8],r13
  40329b:	mov    rbx,QWORD PTR [rax+r13*8]
  40329f:	mov    rcx,QWORD PTR [rbx]
  4032a2:	call   0x404b20
  4032a7:	mov    rcx,QWORD PTR [rbx+0x8]
  4032ab:	call   0x402c50
  4032b0:	mov    rcx,rbx
  4032b3:	call   0x404b20
  4032b8:	mov    r13,QWORD PTR [rdi+0x8]
  4032bc:	cmp    r13,rbp
  4032bf:	ja     0x403290
  4032c1:	test   r13,r13
  4032c4:	je     0x4034bf
  4032ca:	mov    rcx,QWORD PTR [rdi]
  4032cd:	mov    ebx,0x1
  4032d2:	lea    r8,[rcx+r13*8]
  4032d6:	mov    rax,rcx
  4032d9:	nop    DWORD PTR [rax+0x0]
  4032e0:	mov    rdx,QWORD PTR [rax]
  4032e3:	mov    rdx,QWORD PTR [rdx+0x8]
  4032e7:	mov    edx,DWORD PTR [rdx]
  4032e9:	sub    edx,0x3
  4032ec:	cmp    edx,0x2
  4032ef:	sbb    rbx,0xffffffffffffffff
  4032f3:	add    rax,0x8
  4032f7:	cmp    rax,r8
  4032fa:	jne    0x4032e0
  4032fc:	cmp    rbx,0x1
  403300:	je     0x4034bf
  403306:	cmp    rbx,0x2
  40330a:	je     0x403450
  403310:	mov    rcx,QWORD PTR [rsp+0x28]
  403315:	lea    rdx,[rip+0x31c2]        # 0x4064de
  40331c:	mov    r8,rbx
  40331f:	call   0x403540
  403324:	cmp    QWORD PTR [rdi+0x8],0x0
  403329:	je     0x40342f
  40332f:	mov    r9,QWORD PTR [rdi]
  403332:	xor    esi,esi
  403334:	cmp    rbx,0x2
  403338:	sete   sil
  40333c:	mov    r13d,0x1
  403342:	xor    r14d,r14d
  403345:	xor    ebp,ebp
  403347:	mov    ebx,0x1
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	mov    rax,QWORD PTR [r9+r14*8]
  403354:	mov    r9,QWORD PTR [rsp+0x28]
  403359:	mov    r8d,esi
  40335c:	mov    edx,0x4
  403361:	mov    rcx,QWORD PTR [rax+0x8]
  403365:	call   0x402460
  40336a:	test   al,al
  40336c:	mov    r8,QWORD PTR [rdi+0x8]
  403370:	je     0x4033e0
  403372:	cmp    r8,0x1
  403376:	jbe    0x4033e0
  403378:	cmp    r8,r13
  40337b:	jbe    0x403417
  403381:	mov    r9,QWORD PTR [rdi]
  403384:	mov    rax,r13
  403387:	xor    ecx,ecx
  403389:	nop    DWORD PTR [rax+0x0]
  403390:	mov    rdx,QWORD PTR [r9+rax*8]
  403394:	mov    rdx,QWORD PTR [rdx+0x8]
  403398:	mov    edx,DWORD PTR [rdx]
  40339a:	sub    edx,0x3
  40339d:	cmp    edx,0x2
  4033a0:	cmovae ecx,ebx
  4033a3:	add    rax,0x1
  4033a7:	cmp    rax,r8
  4033aa:	jne    0x403390
  4033ac:	test   cl,cl
  4033ae:	je     0x4033e8
  4033b0:	sub    r8,0x1
  4033b4:	cmp    r14,r8
  4033b7:	jae    0x4033e8
  4033b9:	mov    rcx,QWORD PTR [rsp+0x28]
  4033be:	lea    rdx,[rip+0x3130]        # 0x4064f5
  4033c5:	mov    r8,rbp
  4033c8:	lea    r15,[rbp+0x1]
  4033cc:	call   0x403540
  4033d1:	mov    r8,QWORD PTR [rdi+0x8]
  4033d5:	mov    rbp,r15
  4033d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4033e0:	cmp    r8,r13
  4033e3:	jbe    0x403411
  4033e5:	mov    r9,QWORD PTR [rdi]
  4033e8:	add    r14,0x1
  4033ec:	add    r13,0x1
  4033f0:	jmp    0x403350
  4033f5:	cmp    eax,ebx
  4033f7:	je     0x403275
  4033fd:	add    rbp,0x1
  403401:	cmp    rbp,QWORD PTR [rsp+0x38]
  403406:	jne    0x403220
  40340c:	jmp    0x403275
  403411:	cmp    r8,0x1
  403415:	jbe    0x40342f
  403417:	mov    rcx,QWORD PTR [rsp+0x28]
  40341c:	lea    r9,[rbp+0x1]
  403420:	lea    rdx,[rip+0x30d8]        # 0x4064ff
  403427:	mov    r8,rbp
  40342a:	call   0x403540
  40342f:	lea    rdx,[rip+0x30d6]        # 0x40650c
  403436:	mov    rcx,QWORD PTR [rsp+0x28]
  40343b:	add    rsp,0x48
  40343f:	pop    rbx
  403440:	pop    rsi
  403441:	pop    rdi
  403442:	pop    rbp
  403443:	pop    r12
  403445:	pop    r13
  403447:	pop    r14
  403449:	pop    r15
  40344b:	jmp    0x403540
  403450:	mov    rax,QWORD PTR [rcx]
  403453:	mov    rsi,QWORD PTR [rax+0x8]
  403457:	mov    eax,DWORD PTR [rsi]
  403459:	sub    eax,0x3
  40345c:	cmp    eax,0x1
  40345f:	ja     0x403487
  403461:	xor    eax,eax
  403463:	jmp    0x403477
  403465:	mov    rdx,QWORD PTR [rcx+rax*8]
  403469:	mov    rsi,QWORD PTR [rdx+0x8]
  40346d:	mov    edx,DWORD PTR [rsi]
  40346f:	sub    edx,0x3
  403472:	cmp    edx,0x1
  403475:	ja     0x403487
  403477:	add    rax,0x1
  40347b:	cmp    rax,r13
  40347e:	jne    0x403465
  403480:	mov    rax,QWORD PTR [r8]
  403483:	mov    rsi,QWORD PTR [rax+0x8]
  403487:	mov    r15,QWORD PTR [rsp+0x28]
  40348c:	mov    rcx,rsi
  40348f:	mov    rdx,r15
  403492:	call   0x402b30
  403497:	test   al,al
  403499:	jne    0x4034ae
  40349b:	mov    rdx,r15
  40349e:	mov    rcx,rsi
  4034a1:	call   0x402a50
  4034a6:	test   al,al
  4034a8:	je     0x403310
  4034ae:	add    rsp,0x48
  4034b2:	pop    rbx
  4034b3:	pop    rsi
  4034b4:	pop    rdi
  4034b5:	pop    rbp
  4034b6:	pop    r12
  4034b8:	pop    r13
  4034ba:	pop    r14
  4034bc:	pop    r15
  4034be:	ret    
  4034bf:	lea    rdx,[rip+0x3001]        # 0x4064c7
  4034c6:	jmp    0x403436
  4034cb:	xor    ebp,ebp
  4034cd:	jmp    0x403275
  4034d2:	nop
  4034d3:	nop
  4034d4:	nop
  4034d5:	nop
  4034d6:	nop
  4034d7:	nop
  4034d8:	nop
  4034d9:	nop
  4034da:	nop
  4034db:	nop
  4034dc:	nop
  4034dd:	nop
  4034de:	nop
  4034df:	nop
  4034e0:	jmp    QWORD PTR [rip+0x7e76]        # 0x40b35c
  4034e6:	nop
  4034e7:	nop
  4034e8:	jmp    QWORD PTR [rip+0x7e66]        # 0x40b354
  4034ee:	nop
  4034ef:	nop
  4034f0:	jmp    QWORD PTR [rip+0x7e56]        # 0x40b34c
  4034f6:	nop
  4034f7:	nop
  4034f8:	jmp    QWORD PTR [rip+0x7e46]        # 0x40b344
  4034fe:	nop
  4034ff:	nop
  403500:	jmp    QWORD PTR [rip+0x7e36]        # 0x40b33c
  403506:	nop
  403507:	nop
  403508:	jmp    QWORD PTR [rip+0x7e26]        # 0x40b334
  40350e:	nop
  40350f:	nop
  403510:	jmp    QWORD PTR [rip+0x7e16]        # 0x40b32c
  403516:	nop
  403517:	nop
  403518:	jmp    QWORD PTR [rip+0x7dfe]        # 0x40b31c
  40351e:	nop
  40351f:	nop
  403520:	jmp    QWORD PTR [rip+0x7dee]        # 0x40b314
  403526:	nop
  403527:	nop
  403528:	jmp    QWORD PTR [rip+0x7dde]        # 0x40b30c
  40352e:	nop
  40352f:	nop
  403530:	jmp    QWORD PTR [rip+0x7dce]        # 0x40b304
  403536:	nop
  403537:	nop
  403538:	jmp    QWORD PTR [rip+0x7dbe]        # 0x40b2fc
  40353e:	nop
  40353f:	nop
  403540:	jmp    QWORD PTR [rip+0x7dae]        # 0x40b2f4
  403546:	nop
  403547:	nop
  403548:	jmp    QWORD PTR [rip+0x7d9e]        # 0x40b2ec
  40354e:	nop
  40354f:	nop
  403550:	jmp    QWORD PTR [rip+0x7d86]        # 0x40b2dc
  403556:	nop
  403557:	nop
  403558:	jmp    QWORD PTR [rip+0x7d76]        # 0x40b2d4
  40355e:	nop
  40355f:	nop
  403560:	jmp    QWORD PTR [rip+0x7e1e]        # 0x40b384
  403566:	nop
  403567:	nop
  403568:	jmp    QWORD PTR [rip+0x7e0e]        # 0x40b37c
  40356e:	nop
  40356f:	nop
  403570:	jmp    QWORD PTR [rip+0x7dfe]        # 0x40b374
  403576:	nop
  403577:	nop
  403578:	jmp    QWORD PTR [rip+0x7dee]        # 0x40b36c
  40357e:	nop
  40357f:	nop
  403580:	push   rbx
  403581:	sub    rsp,0x30
  403585:	mov    rbx,rcx
  403588:	mov    rcx,QWORD PTR [rip+0x7481]        # 0x40aa10
  40358f:	call   0x403b30
  403594:	cmp    rax,0xffffffffffffffff
  403598:	mov    QWORD PTR [rsp+0x20],rax
  40359d:	je     0x403615
  40359f:	mov    ecx,0x8
  4035a4:	call   0x404b58
  4035a9:	mov    rcx,QWORD PTR [rip+0x7460]        # 0x40aa10
  4035b0:	call   0x403b30
  4035b5:	mov    rcx,QWORD PTR [rip+0x745c]        # 0x40aa18
  4035bc:	mov    QWORD PTR [rsp+0x20],rax
  4035c1:	call   0x403b30
  4035c6:	lea    rdx,[rsp+0x20]
  4035cb:	lea    r8,[rsp+0x28]
  4035d0:	mov    rcx,rbx
  4035d3:	mov    QWORD PTR [rsp+0x28],rax
  4035d8:	call   0x404ba0
  4035dd:	mov    rcx,QWORD PTR [rsp+0x20]
  4035e2:	mov    rbx,rax
  4035e5:	call   0x403b40
  4035ea:	mov    rcx,QWORD PTR [rsp+0x28]
  4035ef:	mov    QWORD PTR [rip+0x741a],rax        # 0x40aa10
  4035f6:	call   0x403b40
  4035fb:	mov    ecx,0x8
  403600:	mov    QWORD PTR [rip+0x7411],rax        # 0x40aa18
  403607:	call   0x404b48
  40360c:	mov    rax,rbx
  40360f:	add    rsp,0x30
  403613:	pop    rbx
  403614:	ret    
  403615:	mov    rax,QWORD PTR [rip+0x37c4]        # 0x406de0
  40361c:	mov    rcx,rbx
  40361f:	call   QWORD PTR [rax]
  403621:	add    rsp,0x30
  403625:	pop    rbx
  403626:	ret    
  403627:	nop    WORD PTR [rax+rax*1+0x0]
  403630:	sub    rsp,0x28
  403634:	call   0x403580
  403639:	test   rax,rax
  40363c:	sete   al
  40363f:	movzx  eax,al
  403642:	neg    eax
  403644:	add    rsp,0x28
  403648:	ret    
  403649:	nop
  40364a:	nop
  40364b:	nop
  40364c:	nop
  40364d:	nop
  40364e:	nop
  40364f:	nop
  403650:	sub    rsp,0x28
  403654:	mov    rax,QWORD PTR [rip+0x19b5]        # 0x405010
  40365b:	mov    rax,QWORD PTR [rax]
  40365e:	test   rax,rax
  403661:	je     0x403680
  403663:	call   rax
  403665:	mov    rax,QWORD PTR [rip+0x19a4]        # 0x405010
  40366c:	lea    rdx,[rax+0x8]
  403670:	mov    rax,QWORD PTR [rax+0x8]
  403674:	mov    QWORD PTR [rip+0x1995],rdx        # 0x405010
  40367b:	test   rax,rax
  40367e:	jne    0x403663
  403680:	add    rsp,0x28
  403684:	ret    
  403685:	nop
  403686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403690:	push   rsi
  403691:	push   rbx
  403692:	sub    rsp,0x28
  403696:	mov    rsi,QWORD PTR [rip+0x36c3]        # 0x406d60
  40369d:	mov    rax,QWORD PTR [rsi]
  4036a0:	cmp    eax,0xffffffff
  4036a3:	mov    ebx,eax
  4036a5:	je     0x4036d0
  4036a7:	test   ebx,ebx
  4036a9:	je     0x4036ba
  4036ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4036b0:	mov    eax,ebx
  4036b2:	call   QWORD PTR [rsi+rax*8]
  4036b5:	sub    ebx,0x1
  4036b8:	jne    0x4036b0
  4036ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x403650
  4036c1:	add    rsp,0x28
  4036c5:	pop    rbx
  4036c6:	pop    rsi
  4036c7:	jmp    0x403630
  4036cc:	nop    DWORD PTR [rax+0x0]
  4036d0:	xor    ebx,ebx
  4036d2:	jmp    0x4036d6
  4036d4:	mov    ebx,eax
  4036d6:	lea    edx,[rbx+0x1]
  4036d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4036de:	mov    rax,rdx
  4036e1:	jne    0x4036d4
  4036e3:	jmp    0x4036a7
  4036e5:	nop
  4036e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036f0:	mov    eax,DWORD PTR [rip+0x694a]        # 0x40a040
  4036f6:	test   eax,eax
  4036f8:	je     0x403700
  4036fa:	repz ret 
  4036fc:	nop    DWORD PTR [rax+0x0]
  403700:	mov    DWORD PTR [rip+0x6936],0x1        # 0x40a040
  40370a:	jmp    0x403690
  40370c:	nop
  40370d:	nop
  40370e:	nop
  40370f:	nop
  403710:	mov    rax,QWORD PTR [rip+0x7d65]        # 0x40b47c
  403717:	rex.W jmp rax
  40371a:	nop
  40371b:	nop
  40371c:	nop
  40371d:	nop
  40371e:	nop
  40371f:	nop
  403720:	xor    eax,eax
  403722:	ret    
  403723:	nop
  403724:	nop
  403725:	nop
  403726:	nop
  403727:	nop
  403728:	nop
  403729:	nop
  40372a:	nop
  40372b:	nop
  40372c:	nop
  40372d:	nop
  40372e:	nop
  40372f:	nop
  403730:	push   r12
  403732:	push   rbp
  403733:	push   rdi
  403734:	push   rsi
  403735:	push   rbx
  403736:	sub    rsp,0x40
  40373a:	mov    rbx,QWORD PTR [rip+0x192f]        # 0x405070
  403741:	movabs rax,0x2b992ddfa232
  40374b:	mov    QWORD PTR [rsp+0x20],0x0
  403754:	cmp    rbx,rax
  403757:	je     0x403770
  403759:	not    rbx
  40375c:	mov    QWORD PTR [rip+0x191d],rbx        # 0x405080
  403763:	add    rsp,0x40
  403767:	pop    rbx
  403768:	pop    rsi
  403769:	pop    rdi
  40376a:	pop    rbp
  40376b:	pop    r12
  40376d:	ret    
  40376e:	xchg   ax,ax
  403770:	lea    rcx,[rsp+0x20]
  403775:	call   QWORD PTR [rip+0x7c51]        # 0x40b3cc
  40377b:	mov    r12,QWORD PTR [rsp+0x20]
  403780:	call   QWORD PTR [rip+0x7c26]        # 0x40b3ac
  403786:	mov    ebp,eax
  403788:	call   QWORD PTR [rip+0x7c26]        # 0x40b3b4
  40378e:	mov    edi,eax
  403790:	call   QWORD PTR [rip+0x7c3e]        # 0x40b3d4
  403796:	lea    rcx,[rsp+0x30]
  40379b:	mov    esi,eax
  40379d:	call   QWORD PTR [rip+0x7c49]        # 0x40b3ec
  4037a3:	xor    r12,QWORD PTR [rsp+0x30]
  4037a8:	mov    edx,edi
  4037aa:	movabs rax,0xffffffffffff
  4037b4:	xor    rbp,r12
  4037b7:	mov    rdi,rbp
  4037ba:	xor    rdi,rdx
  4037bd:	mov    edx,esi
  4037bf:	xor    rdi,rdx
  4037c2:	mov    rsi,rdi
  4037c5:	and    rsi,rax
  4037c8:	cmp    rsi,rbx
  4037cb:	je     0x4037f0
  4037cd:	mov    rax,rsi
  4037d0:	not    rax
  4037d3:	mov    QWORD PTR [rip+0x1896],rsi        # 0x405070
  4037da:	mov    QWORD PTR [rip+0x189f],rax        # 0x405080
  4037e1:	add    rsp,0x40
  4037e5:	pop    rbx
  4037e6:	pop    rsi
  4037e7:	pop    rdi
  4037e8:	pop    rbp
  4037e9:	pop    r12
  4037eb:	ret    
  4037ec:	nop    DWORD PTR [rax+0x0]
  4037f0:	movabs rax,0xffffd466d2205dcc
  4037fa:	movabs rsi,0x2b992ddfa233
  403804:	jmp    0x4037d3
  403806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403810:	push   rbp
  403811:	push   rsi
  403812:	push   rbx
  403813:	mov    rbp,rsp
  403816:	sub    rsp,0x70
  40381a:	mov    rsi,rcx
  40381d:	lea    rcx,[rip+0x685c]        # 0x40a080
  403824:	call   QWORD PTR [rip+0x7bd2]        # 0x40b3fc
  40382a:	mov    rbx,QWORD PTR [rip+0x6947]        # 0x40a178
  403831:	xor    r8d,r8d
  403834:	lea    rdx,[rbp-0x28]
  403838:	mov    rcx,rbx
  40383b:	call   QWORD PTR [rip+0x7bc3]        # 0x40b404
  403841:	test   rax,rax
  403844:	mov    r9,rax
  403847:	je     0x4038f0
  40384d:	lea    rax,[rbp-0x20]
  403851:	mov    QWORD PTR [rsp+0x38],0x0
  40385a:	mov    r8,rbx
  40385d:	mov    rdx,QWORD PTR [rbp-0x28]
  403861:	xor    ecx,ecx
  403863:	mov    QWORD PTR [rsp+0x30],rax
  403868:	lea    rax,[rbp-0x18]
  40386c:	mov    QWORD PTR [rsp+0x28],rax
  403871:	lea    rax,[rip+0x6808]        # 0x40a080
  403878:	mov    QWORD PTR [rsp+0x20],rax
  40387d:	call   QWORD PTR [rip+0x7b89]        # 0x40b40c
  403883:	mov    rax,QWORD PTR [rip+0x68ee]        # 0x40a178
  40388a:	xor    ecx,ecx
  40388c:	mov    QWORD PTR [rip+0x686d],rsi        # 0x40a100
  403893:	mov    DWORD PTR [rip+0x6ce3],0xc0000409        # 0x40a580
  40389d:	mov    DWORD PTR [rip+0x6cdd],0x1        # 0x40a584
  4038a7:	mov    QWORD PTR [rip+0x6ce2],rax        # 0x40a590
  4038ae:	mov    rax,QWORD PTR [rip+0x17bb]        # 0x405070
  4038b5:	mov    QWORD PTR [rbp-0x10],rax
  4038b9:	mov    rax,QWORD PTR [rip+0x17c0]        # 0x405080
  4038c0:	mov    QWORD PTR [rbp-0x8],rax
  4038c4:	call   QWORD PTR [rip+0x7b4a]        # 0x40b414
  4038ca:	lea    rcx,[rip+0x31ef]        # 0x406ac0
  4038d1:	call   QWORD PTR [rip+0x7b5d]        # 0x40b434
  4038d7:	call   QWORD PTR [rip+0x7ac7]        # 0x40b3a4
  4038dd:	mov    edx,0xc0000409
  4038e2:	mov    rcx,rax
  4038e5:	call   QWORD PTR [rip+0x7b39]        # 0x40b424
  4038eb:	call   0x404b40
  4038f0:	mov    rax,QWORD PTR [rbp+0x18]
  4038f4:	mov    QWORD PTR [rip+0x687d],rax        # 0x40a178
  4038fb:	lea    rax,[rbp+0x8]
  4038ff:	mov    QWORD PTR [rip+0x6812],rax        # 0x40a118
  403906:	jmp    0x403883
  40390b:	nop
  40390c:	nop
  40390d:	nop
  40390e:	nop
  40390f:	nop
  403910:	sub    rsp,0x28
  403914:	test   edx,edx
  403916:	je     0x403930
  403918:	cmp    edx,0x3
  40391b:	je     0x403930
  40391d:	mov    eax,0x1
  403922:	add    rsp,0x28
  403926:	ret    
  403927:	nop    WORD PTR [rax+rax*1+0x0]
  403930:	call   0x404620
  403935:	mov    eax,0x1
  40393a:	add    rsp,0x28
  40393e:	ret    
  40393f:	nop
  403940:	push   rsi
  403941:	push   rbx
  403942:	sub    rsp,0x28
  403946:	mov    rax,QWORD PTR [rip+0x33f3]        # 0x406d40
  40394d:	cmp    DWORD PTR [rax],0x2
  403950:	je     0x403958
  403952:	mov    DWORD PTR [rax],0x2
  403958:	cmp    edx,0x2
  40395b:	je     0x403970
  40395d:	cmp    edx,0x1
  403960:	je     0x4039a2
  403962:	mov    eax,0x1
  403967:	add    rsp,0x28
  40396b:	pop    rbx
  40396c:	pop    rsi
  40396d:	ret    
  40396e:	xchg   ax,ax
  403970:	lea    rbx,[rip+0x86e9]        # 0x40c060
  403977:	lea    rsi,[rip+0x86e2]        # 0x40c060
  40397e:	cmp    rbx,rsi
  403981:	je     0x403962
  403983:	mov    rax,QWORD PTR [rbx]
  403986:	test   rax,rax
  403989:	je     0x40398d
  40398b:	call   rax
  40398d:	add    rbx,0x8
  403991:	cmp    rbx,rsi
  403994:	jne    0x403983
  403996:	mov    eax,0x1
  40399b:	add    rsp,0x28
  40399f:	pop    rbx
  4039a0:	pop    rsi
  4039a1:	ret    
  4039a2:	call   0x404620
  4039a7:	jmp    0x403962
  4039a9:	nop    DWORD PTR [rax+0x0]
  4039b0:	xor    eax,eax
  4039b2:	ret    
  4039b3:	nop
  4039b4:	nop
  4039b5:	nop
  4039b6:	nop
  4039b7:	nop
  4039b8:	nop
  4039b9:	nop
  4039ba:	nop
  4039bb:	nop
  4039bc:	nop
  4039bd:	nop
  4039be:	nop
  4039bf:	nop
  4039c0:	sub    rsp,0x58
  4039c4:	mov    rax,QWORD PTR [rip+0x6c95]        # 0x40a660
  4039cb:	test   rax,rax
  4039ce:	je     0x4039fc
  4039d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4039d9:	mov    DWORD PTR [rsp+0x20],ecx
  4039dd:	lea    rcx,[rsp+0x20]
  4039e2:	mov    QWORD PTR [rsp+0x28],rdx
  4039e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4039ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4039f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4039f9:	call   rax
  4039fb:	nop
  4039fc:	add    rsp,0x58
  403a00:	ret    
  403a01:	nop    DWORD PTR [rax+rax*1+0x0]
  403a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a10:	mov    QWORD PTR [rip+0x6c49],rcx        # 0x40a660
  403a17:	jmp    0x404b78
  403a1c:	nop    DWORD PTR [rax+0x0]
  403a20:	push   rsi
  403a21:	push   rbx
  403a22:	sub    rsp,0x78
  403a26:	movaps XMMWORD PTR [rsp+0x40],xmm6
  403a2b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  403a30:	movaps XMMWORD PTR [rsp+0x60],xmm8
  403a36:	cmp    DWORD PTR [rcx],0x6
  403a39:	ja     0x403b10
  403a3f:	mov    edx,DWORD PTR [rcx]
  403a41:	lea    rax,[rip+0x31bc]        # 0x406c04
  403a48:	movsxd rdx,DWORD PTR [rax+rdx*4]
  403a4c:	add    rax,rdx
  403a4f:	jmp    rax
  403a51:	lea    rbx,[rip+0x3088]        # 0x406ae0
  403a58:	nop    DWORD PTR [rax+rax*1+0x0]
  403a60:	movsd  xmm8,QWORD PTR [rcx+0x20]
  403a66:	mov    rsi,QWORD PTR [rcx+0x8]
  403a6a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  403a6f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403a74:	call   0x404b90
  403a79:	movsd  QWORD PTR [rsp+0x30],xmm8
  403a80:	lea    rcx,[rax+0x60]
  403a84:	lea    rdx,[rip+0x314d]        # 0x406bd8
  403a8b:	movsd  QWORD PTR [rsp+0x28],xmm7
  403a91:	mov    r9,rsi
  403a94:	mov    r8,rbx
  403a97:	movsd  QWORD PTR [rsp+0x20],xmm6
  403a9d:	call   0x404b28
  403aa2:	nop
  403aa3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  403aa8:	xor    eax,eax
  403aaa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  403aaf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  403ab5:	add    rsp,0x78
  403ab9:	pop    rbx
  403aba:	pop    rsi
  403abb:	ret    
  403abc:	nop    DWORD PTR [rax+0x0]
  403ac0:	lea    rbx,[rip+0x3038]        # 0x406aff
  403ac7:	jmp    0x403a60
  403ac9:	nop    DWORD PTR [rax+0x0]
  403ad0:	lea    rbx,[rip+0x3049]        # 0x406b20
  403ad7:	jmp    0x403a60
  403ad9:	nop    DWORD PTR [rax+0x0]
  403ae0:	lea    rbx,[rip+0x30a9]        # 0x406b90
  403ae7:	jmp    0x403a60
  403aec:	nop    DWORD PTR [rax+0x0]
  403af0:	lea    rbx,[rip+0x3071]        # 0x406b68
  403af7:	jmp    0x403a60
  403afc:	nop    DWORD PTR [rax+0x0]
  403b00:	lea    rbx,[rip+0x3039]        # 0x406b40
  403b07:	jmp    0x403a60
  403b0c:	nop    DWORD PTR [rax+0x0]
  403b10:	lea    rbx,[rip+0x30af]        # 0x406bc6
  403b17:	jmp    0x403a60
  403b1c:	nop
  403b1d:	nop
  403b1e:	nop
  403b1f:	nop
  403b20:	fninit 
  403b22:	ret    
  403b23:	nop
  403b24:	nop
  403b25:	nop
  403b26:	nop
  403b27:	nop
  403b28:	nop
  403b29:	nop
  403b2a:	nop
  403b2b:	nop
  403b2c:	nop
  403b2d:	nop
  403b2e:	nop
  403b2f:	nop
  403b30:	mov    rax,rcx
  403b33:	ret    
  403b34:	xchg   ax,ax
  403b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b40:	mov    rax,rcx
  403b43:	ret    
  403b44:	nop
  403b45:	nop
  403b46:	nop
  403b47:	nop
  403b48:	nop
  403b49:	nop
  403b4a:	nop
  403b4b:	nop
  403b4c:	nop
  403b4d:	nop
  403b4e:	nop
  403b4f:	nop
  403b50:	push   rsi
  403b51:	push   rbx
  403b52:	sub    rsp,0x38
  403b56:	lea    rax,[rsp+0x58]
  403b5b:	mov    rbx,rcx
  403b5e:	mov    QWORD PTR [rsp+0x58],rdx
  403b63:	mov    QWORD PTR [rsp+0x60],r8
  403b68:	mov    QWORD PTR [rsp+0x68],r9
  403b6d:	mov    QWORD PTR [rsp+0x28],rax
  403b72:	call   0x404b90
  403b77:	lea    rcx,[rip+0x30a2]        # 0x406c20
  403b7e:	lea    r9,[rax+0x60]
  403b82:	mov    r8d,0x1b
  403b88:	mov    edx,0x1
  403b8d:	call   0x404b18
  403b92:	mov    rsi,QWORD PTR [rsp+0x28]
  403b97:	call   0x404b90
  403b9c:	lea    rcx,[rax+0x60]
  403ba0:	mov    rdx,rbx
  403ba3:	mov    r8,rsi
  403ba6:	call   0x404ae0
  403bab:	call   0x404b40
  403bb0:	nop
  403bb1:	nop    DWORD PTR [rax+rax*1+0x0]
  403bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bc0:	push   r13
  403bc2:	push   r12
  403bc4:	push   rbp
  403bc5:	push   rdi
  403bc6:	push   rsi
  403bc7:	push   rbx
  403bc8:	sub    rsp,0x58
  403bcc:	movsxd rbp,DWORD PTR [rip+0x6ab1]        # 0x40a684
  403bd3:	mov    rbx,rcx
  403bd6:	mov    rsi,rdx
  403bd9:	mov    rdi,r8
  403bdc:	test   ebp,ebp
  403bde:	jle    0x403cda
  403be4:	mov    rax,QWORD PTR [rip+0x6a9d]        # 0x40a688
  403beb:	xor    r9d,r9d
  403bee:	add    rax,0x8
  403bf2:	mov    r10,QWORD PTR [rax]
  403bf5:	cmp    rbx,r10
  403bf8:	jb     0x403c0e
  403bfa:	mov    rdx,QWORD PTR [rax+0x8]
  403bfe:	mov    r11d,DWORD PTR [rdx+0x8]
  403c02:	add    r10,r11
  403c05:	cmp    rbx,r10
  403c08:	jb     0x403cc0
  403c0e:	add    r9d,0x1
  403c12:	add    rax,0x18
  403c16:	cmp    r9d,ebp
  403c19:	jne    0x403bf2
  403c1b:	mov    rcx,rbx
  403c1e:	call   0x404830
  403c23:	test   rax,rax
  403c26:	mov    r12,rax
  403c29:	je     0x403d12
  403c2f:	lea    rbp,[rbp+rbp*2+0x0]
  403c34:	shl    rbp,0x3
  403c38:	mov    r13,rbp
  403c3b:	add    r13,QWORD PTR [rip+0x6a46]        # 0x40a688
  403c42:	mov    QWORD PTR [r13+0x10],rax
  403c46:	mov    DWORD PTR [r13+0x0],0x0
  403c4e:	call   0x404950
  403c53:	mov    edx,DWORD PTR [r12+0xc]
  403c58:	mov    r8d,0x30
  403c5e:	add    rax,rdx
  403c61:	lea    rdx,[rsp+0x20]
  403c66:	mov    QWORD PTR [r13+0x8],rax
  403c6a:	mov    rax,QWORD PTR [rip+0x6a17]        # 0x40a688
  403c71:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403c76:	call   QWORD PTR [rip+0x77c8]        # 0x40b444
  403c7c:	test   rax,rax
  403c7f:	je     0x403cf5
  403c81:	mov    eax,DWORD PTR [rsp+0x44]
  403c85:	lea    edx,[rax-0x4]
  403c88:	and    edx,0xfffffffb
  403c8b:	je     0x403cb9
  403c8d:	sub    eax,0x40
  403c90:	and    eax,0xffffffbf
  403c93:	je     0x403cb9
  403c95:	mov    r9,rbp
  403c98:	add    r9,QWORD PTR [rip+0x69e9]        # 0x40a688
  403c9f:	mov    r8d,0x40
  403ca5:	mov    rdx,QWORD PTR [rsp+0x38]
  403caa:	mov    rcx,QWORD PTR [rsp+0x20]
  403caf:	call   QWORD PTR [rip+0x7787]        # 0x40b43c
  403cb5:	test   eax,eax
  403cb7:	je     0x403ce1
  403cb9:	add    DWORD PTR [rip+0x69c4],0x1        # 0x40a684
  403cc0:	mov    r8,rdi
  403cc3:	mov    rdx,rsi
  403cc6:	mov    rcx,rbx
  403cc9:	add    rsp,0x58
  403ccd:	pop    rbx
  403cce:	pop    rsi
  403ccf:	pop    rdi
  403cd0:	pop    rbp
  403cd1:	pop    r12
  403cd3:	pop    r13
  403cd5:	jmp    0x404b08
  403cda:	xor    ebp,ebp
  403cdc:	jmp    0x403c1b
  403ce1:	call   QWORD PTR [rip+0x76d5]        # 0x40b3bc
  403ce7:	lea    rcx,[rip+0x2faa]        # 0x406c98
  403cee:	mov    edx,eax
  403cf0:	call   0x403b50
  403cf5:	mov    rax,QWORD PTR [rip+0x698c]        # 0x40a688
  403cfc:	mov    edx,DWORD PTR [r12+0x8]
  403d01:	lea    rcx,[rip+0x2f58]        # 0x406c60
  403d08:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  403d0d:	call   0x403b50
  403d12:	lea    rcx,[rip+0x2f27]        # 0x406c40
  403d19:	mov    rdx,rbx
  403d1c:	call   0x403b50
  403d21:	nop
  403d22:	nop    DWORD PTR [rax+0x0]
  403d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d30:	push   rbp
  403d31:	push   r14
  403d33:	push   r13
  403d35:	push   r12
  403d37:	push   rdi
  403d38:	push   rsi
  403d39:	push   rbx
  403d3a:	mov    rbp,rsp
  403d3d:	sub    rsp,0x60
  403d41:	mov    ebx,DWORD PTR [rip+0x6939]        # 0x40a680
  403d47:	test   ebx,ebx
  403d49:	je     0x403d60
  403d4b:	mov    rsp,rbp
  403d4e:	pop    rbx
  403d4f:	pop    rsi
  403d50:	pop    rdi
  403d51:	pop    r12
  403d53:	pop    r13
  403d55:	pop    r14
  403d57:	pop    rbp
  403d58:	ret    
  403d59:	nop    DWORD PTR [rax+0x0]
  403d60:	mov    DWORD PTR [rip+0x6916],0x1        # 0x40a680
  403d6a:	call   0x404880
  403d6f:	cdqe   
  403d71:	lea    rax,[rax+rax*2]
  403d75:	lea    rax,[rax*8+0x1e]
  403d7d:	and    rax,0xfffffffffffffff0
  403d81:	call   0x404aa0
  403d86:	mov    rsi,QWORD PTR [rip+0x2fe3]        # 0x406d70
  403d8d:	mov    rbx,QWORD PTR [rip+0x2fec]        # 0x406d80
  403d94:	sub    rsp,rax
  403d97:	mov    DWORD PTR [rip+0x68e3],0x0        # 0x40a684
  403da1:	lea    rax,[rsp+0x20]
  403da6:	mov    QWORD PTR [rip+0x68db],rax        # 0x40a688
  403dad:	mov    rax,rsi
  403db0:	sub    rax,rbx
  403db3:	cmp    rax,0x7
  403db7:	jle    0x403d4b
  403db9:	cmp    rax,0xb
  403dbd:	jle    0x403de5
  403dbf:	mov    r11d,DWORD PTR [rbx]
  403dc2:	test   r11d,r11d
  403dc5:	jne    0x403f10
  403dcb:	mov    r10d,DWORD PTR [rbx+0x4]
  403dcf:	test   r10d,r10d
  403dd2:	jne    0x403f10
  403dd8:	mov    r9d,DWORD PTR [rbx+0x8]
  403ddc:	test   r9d,r9d
  403ddf:	jne    0x403dfc
  403de1:	add    rbx,0xc
  403de5:	mov    r8d,DWORD PTR [rbx]
  403de8:	test   r8d,r8d
  403deb:	jne    0x403f10
  403df1:	mov    ecx,DWORD PTR [rbx+0x4]
  403df4:	test   ecx,ecx
  403df6:	jne    0x403f10
  403dfc:	mov    edx,DWORD PTR [rbx+0x8]
  403dff:	cmp    edx,0x1
  403e02:	jne    0x40401c
  403e08:	add    rbx,0xc
  403e0c:	cmp    rbx,rsi
  403e0f:	jae    0x403d4b
  403e15:	mov    r12,QWORD PTR [rip+0x2f84]        # 0x406da0
  403e1c:	lea    r13,[rbp-0x30]
  403e20:	movabs r14,0xffffffff00000000
  403e2a:	mov    ecx,DWORD PTR [rbx+0x4]
  403e2d:	mov    eax,DWORD PTR [rbx]
  403e2f:	movzx  edx,BYTE PTR [rbx+0x8]
  403e33:	add    rax,r12
  403e36:	add    rcx,r12
  403e39:	cmp    edx,0x10
  403e3c:	mov    r8,QWORD PTR [rax]
  403e3f:	je     0x403f86
  403e45:	jbe    0x403f4d
  403e4b:	cmp    edx,0x20
  403e4e:	je     0x403fcf
  403e54:	cmp    edx,0x40
  403e57:	jne    0x403fbb
  403e5d:	sub    r8,rax
  403e60:	mov    rdx,r13
  403e63:	mov    rdi,r13
  403e66:	mov    rax,r8
  403e69:	add    rax,QWORD PTR [rcx]
  403e6c:	mov    r8d,0x8
  403e72:	mov    QWORD PTR [rbp-0x30],rax
  403e76:	call   0x403bc0
  403e7b:	add    rbx,0xc
  403e7f:	cmp    rbx,rsi
  403e82:	jb     0x403e2a
  403e84:	mov    eax,DWORD PTR [rip+0x67fa]        # 0x40a684
  403e8a:	xor    ebx,ebx
  403e8c:	xor    esi,esi
  403e8e:	test   eax,eax
  403e90:	jle    0x403d4b
  403e96:	mov    r14,QWORD PTR [rip+0x75a7]        # 0x40b444
  403e9d:	lea    r13,[rbp-0x34]
  403ea1:	mov    r12,QWORD PTR [rip+0x7594]        # 0x40b43c
  403ea8:	jmp    0x403ec3
  403eaa:	nop    WORD PTR [rax+rax*1+0x0]
  403eb0:	add    esi,0x1
  403eb3:	add    rbx,0x18
  403eb7:	cmp    esi,DWORD PTR [rip+0x67c7]        # 0x40a684
  403ebd:	jge    0x403d4b
  403ec3:	mov    rax,rbx
  403ec6:	add    rax,QWORD PTR [rip+0x67bb]        # 0x40a688
  403ecd:	mov    edx,DWORD PTR [rax]
  403ecf:	test   edx,edx
  403ed1:	je     0x403eb0
  403ed3:	mov    rcx,QWORD PTR [rax+0x8]
  403ed7:	mov    r8d,0x30
  403edd:	mov    rdx,rdi
  403ee0:	call   r14
  403ee3:	test   rax,rax
  403ee6:	je     0x403ffe
  403eec:	mov    rax,QWORD PTR [rip+0x6795]        # 0x40a688
  403ef3:	mov    r9,r13
  403ef6:	mov    rdx,QWORD PTR [rbp-0x18]
  403efa:	mov    rcx,QWORD PTR [rbp-0x30]
  403efe:	mov    r8d,DWORD PTR [rax+rbx*1]
  403f02:	call   r12
  403f05:	jmp    0x403eb0
  403f07:	nop    WORD PTR [rax+rax*1+0x0]
  403f10:	cmp    rbx,rsi
  403f13:	jae    0x403d4b
  403f19:	mov    r12,QWORD PTR [rip+0x2e80]        # 0x406da0
  403f20:	lea    rdi,[rbp-0x30]
  403f24:	mov    ecx,DWORD PTR [rbx+0x4]
  403f27:	mov    eax,DWORD PTR [rbx]
  403f29:	mov    r8d,0x4
  403f2f:	mov    rdx,rdi
  403f32:	add    rbx,0x8
  403f36:	add    rcx,r12
  403f39:	add    eax,DWORD PTR [rcx]
  403f3b:	mov    DWORD PTR [rbp-0x30],eax
  403f3e:	call   0x403bc0
  403f43:	cmp    rbx,rsi
  403f46:	jb     0x403f24
  403f48:	jmp    0x403e84
  403f4d:	cmp    edx,0x8
  403f50:	jne    0x403fbb
  403f52:	movzx  edx,BYTE PTR [rcx]
  403f55:	mov    rdi,r13
  403f58:	mov    r10,rdx
  403f5b:	or     r10,0xffffffffffffff00
  403f62:	test   dl,dl
  403f64:	cmovs  rdx,r10
  403f68:	sub    rdx,rax
  403f6b:	lea    rax,[r8+rdx*1]
  403f6f:	mov    r8d,0x1
  403f75:	mov    rdx,r13
  403f78:	mov    QWORD PTR [rbp-0x30],rax
  403f7c:	call   0x403bc0
  403f81:	jmp    0x403e7b
  403f86:	movzx  edx,WORD PTR [rcx]
  403f89:	mov    rdi,r13
  403f8c:	mov    r10,rdx
  403f8f:	or     r10,0xffffffffffff0000
  403f96:	test   dx,dx
  403f99:	cmovs  rdx,r10
  403f9d:	sub    rdx,rax
  403fa0:	lea    rax,[r8+rdx*1]
  403fa4:	mov    r8d,0x2
  403faa:	mov    rdx,r13
  403fad:	mov    QWORD PTR [rbp-0x30],rax
  403fb1:	call   0x403bc0
  403fb6:	jmp    0x403e7b
  403fbb:	lea    rcx,[rip+0x2d36]        # 0x406cf8
  403fc2:	mov    QWORD PTR [rbp-0x30],0x0
  403fca:	call   0x403b50
  403fcf:	mov    edx,DWORD PTR [rcx]
  403fd1:	mov    rdi,r13
  403fd4:	mov    r10,rdx
  403fd7:	or     r10,r14
  403fda:	test   edx,edx
  403fdc:	cmovs  rdx,r10
  403fe0:	sub    rdx,rax
  403fe3:	lea    rax,[r8+rdx*1]
  403fe7:	mov    r8d,0x4
  403fed:	mov    rdx,r13
  403ff0:	mov    QWORD PTR [rbp-0x30],rax
  403ff4:	call   0x403bc0
  403ff9:	jmp    0x403e7b
  403ffe:	add    rbx,QWORD PTR [rip+0x6683]        # 0x40a688
  404005:	lea    rcx,[rip+0x2c54]        # 0x406c60
  40400c:	mov    rax,QWORD PTR [rbx+0x10]
  404010:	mov    r8,QWORD PTR [rbx+0x8]
  404014:	mov    edx,DWORD PTR [rax+0x8]
  404017:	call   0x403b50
  40401c:	lea    rcx,[rip+0x2c9d]        # 0x406cc0
  404023:	call   0x403b50
  404028:	nop
  404029:	nop
  40402a:	nop
  40402b:	nop
  40402c:	nop
  40402d:	nop
  40402e:	nop
  40402f:	nop
  404030:	sub    rsp,0x28
  404034:	mov    eax,DWORD PTR [rcx]
  404036:	cmp    eax,0xc0000091
  40403b:	ja     0x4040a0
  40403d:	cmp    eax,0xc000008d
  404042:	jae    0x4040bf
  404044:	cmp    eax,0xc0000008
  404049:	je     0x404160
  40404f:	ja     0x404130
  404055:	cmp    eax,0x80000002
  40405a:	je     0x404160
  404060:	cmp    eax,0xc0000005
  404065:	jne    0x40413e
  40406b:	xor    edx,edx
  40406d:	mov    ecx,0xb
  404072:	call   0x404af8
  404077:	cmp    rax,0x1
  40407b:	je     0x4041c0
  404081:	test   rax,rax
  404084:	je     0x4041a0
  40408a:	mov    ecx,0xb
  40408f:	call   rax
  404091:	xor    eax,eax
  404093:	add    rsp,0x28
  404097:	ret    
  404098:	nop    DWORD PTR [rax+rax*1+0x0]
  4040a0:	cmp    eax,0xc0000094
  4040a5:	je     0x404170
  4040ab:	ja     0x4040f0
  4040ad:	cmp    eax,0xc0000092
  4040b2:	je     0x404160
  4040b8:	cmp    eax,0xc0000093
  4040bd:	jne    0x40413e
  4040bf:	xor    edx,edx
  4040c1:	mov    ecx,0x8
  4040c6:	call   0x404af8
  4040cb:	cmp    rax,0x1
  4040cf:	mov    rdx,rax
  4040d2:	je     0x404148
  4040d4:	test   rdx,rdx
  4040d7:	mov    eax,0x1
  4040dc:	je     0x404093
  4040de:	mov    ecx,0x8
  4040e3:	call   rdx
  4040e5:	xor    eax,eax
  4040e7:	add    rsp,0x28
  4040eb:	ret    
  4040ec:	nop    DWORD PTR [rax+0x0]
  4040f0:	cmp    eax,0xc0000095
  4040f5:	je     0x404160
  4040f7:	cmp    eax,0xc0000096
  4040fc:	jne    0x40413e
  4040fe:	xor    edx,edx
  404100:	mov    ecx,0x4
  404105:	call   0x404af8
  40410a:	cmp    rax,0x1
  40410e:	je     0x4041aa
  404114:	test   rax,rax
  404117:	je     0x4041a0
  40411d:	mov    ecx,0x4
  404122:	call   rax
  404124:	xor    eax,eax
  404126:	jmp    0x404093
  40412b:	nop    DWORD PTR [rax+rax*1+0x0]
  404130:	cmp    eax,0xc000001d
  404135:	je     0x4040fe
  404137:	cmp    eax,0xc000008c
  40413c:	je     0x404160
  40413e:	mov    eax,0x1
  404143:	add    rsp,0x28
  404147:	ret    
  404148:	mov    edx,0x1
  40414d:	mov    ecx,0x8
  404152:	call   0x404af8
  404157:	call   0x403b20
  40415c:	nop    DWORD PTR [rax+0x0]
  404160:	xor    eax,eax
  404162:	add    rsp,0x28
  404166:	ret    
  404167:	nop    WORD PTR [rax+rax*1+0x0]
  404170:	xor    edx,edx
  404172:	mov    ecx,0x8
  404177:	call   0x404af8
  40417c:	cmp    rax,0x1
  404180:	mov    rdx,rax
  404183:	jne    0x4040d4
  404189:	mov    edx,0x1
  40418e:	mov    ecx,0x8
  404193:	call   0x404af8
  404198:	xor    eax,eax
  40419a:	jmp    0x404093
  40419f:	nop
  4041a0:	mov    eax,0x4
  4041a5:	add    rsp,0x28
  4041a9:	ret    
  4041aa:	mov    edx,0x1
  4041af:	mov    ecx,0x4
  4041b4:	call   0x404af8
  4041b9:	xor    eax,eax
  4041bb:	jmp    0x404093
  4041c0:	mov    edx,0x1
  4041c5:	mov    ecx,0xb
  4041ca:	call   0x404af8
  4041cf:	xor    eax,eax
  4041d1:	jmp    0x404093
  4041d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041e0:	push   r12
  4041e2:	push   rbp
  4041e3:	push   rdi
  4041e4:	push   rsi
  4041e5:	push   rbx
  4041e6:	sub    rsp,0x20
  4041ea:	call   0x404950
  4041ef:	mov    rbp,rax
  4041f2:	mov    eax,DWORD PTR [rip+0x64d0]        # 0x40a6c8
  4041f8:	test   eax,eax
  4041fa:	jne    0x404221
  4041fc:	test   rbp,rbp
  4041ff:	je     0x404221
  404201:	lea    rcx,[rip+0x2b28]        # 0x406d30
  404208:	mov    DWORD PTR [rip+0x64b6],0x1        # 0x40a6c8
  404212:	call   0x404790
  404217:	test   rax,rax
  40421a:	je     0x404230
  40421c:	mov    eax,0x1
  404221:	add    rsp,0x20
  404225:	pop    rbx
  404226:	pop    rsi
  404227:	pop    rdi
  404228:	pop    rbp
  404229:	pop    r12
  40422b:	ret    
  40422c:	nop    DWORD PTR [rax+0x0]
  404230:	lea    rbx,[rip+0x65c9]        # 0x40a800
  404237:	mov    ecx,0x30
  40423c:	lea    rdx,[rip+0x64bd]        # 0x40a700
  404243:	lea    r12,[rip+0xfffffffffffffde6]        # 0x404030
  40424a:	xor    esi,esi
  40424c:	mov    rdi,rbx
  40424f:	rep stos QWORD PTR es:[rdi],rax
  404252:	mov    rdi,rdx
  404255:	sub    r12,rbp
  404258:	mov    cl,0x20
  40425a:	rep stos QWORD PTR es:[rdi],rax
  40425d:	mov    rdi,rdx
  404260:	jmp    0x404290
  404262:	mov    BYTE PTR [rdi],0x9
  404265:	mov    DWORD PTR [rdi+0x4],r12d
  404269:	add    rsi,0x1
  40426d:	mov    edx,DWORD PTR [rax+0xc]
  404270:	add    rbx,0xc
  404274:	mov    DWORD PTR [rbx-0xc],edx
  404277:	add    edx,DWORD PTR [rax+0x8]
  40427a:	mov    rax,rdi
  40427d:	sub    rax,rbp
  404280:	add    rdi,0x8
  404284:	mov    DWORD PTR [rbx-0x4],eax
  404287:	mov    DWORD PTR [rbx-0x8],edx
  40428a:	cmp    rsi,0x20
  40428e:	je     0x4042c5
  404290:	mov    rcx,rsi
  404293:	call   0x4048c0
  404298:	test   rax,rax
  40429b:	jne    0x404262
  40429d:	test   rsi,rsi
  4042a0:	je     0x40421c
  4042a6:	mov    edx,esi
  4042a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4042b0:	mov    r8,rbp
  4042b3:	lea    rcx,[rip+0x6546]        # 0x40a800
  4042ba:	call   QWORD PTR [rip+0x7134]        # 0x40b3f4
  4042c0:	jmp    0x40421c
  4042c5:	mov    edx,0x20
  4042ca:	jmp    0x4042b0
  4042cc:	nop    DWORD PTR [rax+0x0]
  4042d0:	push   rbx
  4042d1:	sub    rsp,0x20
  4042d5:	mov    rdx,QWORD PTR [rcx]
  4042d8:	mov    eax,DWORD PTR [rdx]
  4042da:	mov    r8d,eax
  4042dd:	and    r8d,0x20ffffff
  4042e4:	cmp    r8d,0x20474343
  4042eb:	je     0x4043f0
  4042f1:	cmp    eax,0xc0000091
  4042f6:	mov    rbx,rcx
  4042f9:	ja     0x404380
  4042ff:	cmp    eax,0xc000008d
  404304:	jae    0x404397
  40430a:	cmp    eax,0xc0000008
  40430f:	je     0x404343
  404311:	ja     0x404350
  404313:	cmp    eax,0x80000002
  404318:	je     0x404343
  40431a:	cmp    eax,0xc0000005
  40431f:	jne    0x404362
  404321:	xor    edx,edx
  404323:	mov    ecx,0xb
  404328:	call   0x404af8
  40432d:	cmp    rax,0x1
  404331:	je     0x404460
  404337:	test   rax,rax
  40433a:	je     0x404362
  40433c:	mov    ecx,0xb
  404341:	call   rax
  404343:	mov    eax,0xffffffff
  404348:	add    rsp,0x20
  40434c:	pop    rbx
  40434d:	ret    
  40434e:	xchg   ax,ax
  404350:	cmp    eax,0xc000001d
  404355:	je     0x404416
  40435b:	cmp    eax,0xc000008c
  404360:	je     0x404343
  404362:	mov    rax,QWORD PTR [rip+0x6357]        # 0x40a6c0
  404369:	test   rax,rax
  40436c:	je     0x404348
  40436e:	mov    rcx,rbx
  404371:	add    rsp,0x20
  404375:	pop    rbx
  404376:	rex.W jmp rax
  404379:	nop    DWORD PTR [rax+0x0]
  404380:	cmp    eax,0xc0000094
  404385:	je     0x4043c2
  404387:	ja     0x404400
  404389:	cmp    eax,0xc0000092
  40438e:	je     0x404343
  404390:	cmp    eax,0xc0000093
  404395:	jne    0x404362
  404397:	xor    edx,edx
  404399:	mov    ecx,0x8
  40439e:	call   0x404af8
  4043a3:	cmp    rax,0x1
  4043a7:	jne    0x4043d4
  4043a9:	mov    edx,0x1
  4043ae:	mov    ecx,0x8
  4043b3:	call   0x404af8
  4043b8:	call   0x403b20
  4043bd:	jmp    0x404343
  4043c2:	xor    edx,edx
  4043c4:	mov    ecx,0x8
  4043c9:	call   0x404af8
  4043ce:	cmp    rax,0x1
  4043d2:	je     0x404442
  4043d4:	test   rax,rax
  4043d7:	je     0x404362
  4043d9:	mov    ecx,0x8
  4043de:	call   rax
  4043e0:	mov    eax,0xffffffff
  4043e5:	jmp    0x404348
  4043ea:	nop    WORD PTR [rax+rax*1+0x0]
  4043f0:	test   BYTE PTR [rdx+0x4],0x1
  4043f4:	jne    0x4042f1
  4043fa:	jmp    0x404343
  4043ff:	nop
  404400:	cmp    eax,0xc0000095
  404405:	je     0x404343
  40440b:	cmp    eax,0xc0000096
  404410:	jne    0x404362
  404416:	xor    edx,edx
  404418:	mov    ecx,0x4
  40441d:	call   0x404af8
  404422:	cmp    rax,0x1
  404426:	je     0x404474
  404428:	test   rax,rax
  40442b:	je     0x404362
  404431:	mov    ecx,0x4
  404436:	call   rax
  404438:	mov    eax,0xffffffff
  40443d:	jmp    0x404348
  404442:	mov    edx,0x1
  404447:	mov    ecx,0x8
  40444c:	call   0x404af8
  404451:	jmp    0x404343
  404456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404460:	mov    edx,0x1
  404465:	mov    ecx,0xb
  40446a:	call   0x404af8
  40446f:	jmp    0x404343
  404474:	mov    edx,0x1
  404479:	mov    ecx,0x4
  40447e:	call   0x404af8
  404483:	jmp    0x404343
  404488:	nop
  404489:	nop
  40448a:	nop
  40448b:	nop
  40448c:	nop
  40448d:	nop
  40448e:	nop
  40448f:	nop
  404490:	push   rbp
  404491:	push   rdi
  404492:	push   rsi
  404493:	push   rbx
  404494:	sub    rsp,0x28
  404498:	lea    rcx,[rip+0x6501]        # 0x40a9a0
  40449f:	call   QWORD PTR [rip+0x6ef7]        # 0x40b39c
  4044a5:	mov    rbx,QWORD PTR [rip+0x64d4]        # 0x40a980
  4044ac:	test   rbx,rbx
  4044af:	je     0x4044e4
  4044b1:	mov    rbp,QWORD PTR [rip+0x6f74]        # 0x40b42c
  4044b8:	mov    rdi,QWORD PTR [rip+0x6efd]        # 0x40b3bc
  4044bf:	nop
  4044c0:	mov    ecx,DWORD PTR [rbx]
  4044c2:	call   rbp
  4044c4:	mov    rsi,rax
  4044c7:	call   rdi
  4044c9:	test   eax,eax
  4044cb:	jne    0x4044db
  4044cd:	test   rsi,rsi
  4044d0:	je     0x4044db
  4044d2:	mov    rax,QWORD PTR [rbx+0x8]
  4044d6:	mov    rcx,rsi
  4044d9:	call   rax
  4044db:	mov    rbx,QWORD PTR [rbx+0x10]
  4044df:	test   rbx,rbx
  4044e2:	jne    0x4044c0
  4044e4:	mov    rax,QWORD PTR [rip+0x6ef9]        # 0x40b3e4
  4044eb:	lea    rcx,[rip+0x64ae]        # 0x40a9a0
  4044f2:	add    rsp,0x28
  4044f6:	pop    rbx
  4044f7:	pop    rsi
  4044f8:	pop    rdi
  4044f9:	pop    rbp
  4044fa:	rex.W jmp rax
  4044fd:	nop    DWORD PTR [rax]
  404500:	push   rdi
  404501:	push   rsi
  404502:	push   rbx
  404503:	sub    rsp,0x20
  404507:	mov    eax,DWORD PTR [rip+0x647b]        # 0x40a988
  40450d:	test   eax,eax
  40450f:	jne    0x404520
  404511:	add    rsp,0x20
  404515:	pop    rbx
  404516:	pop    rsi
  404517:	pop    rdi
  404518:	ret    
  404519:	nop    DWORD PTR [rax+0x0]
  404520:	mov    rsi,rdx
  404523:	mov    edi,ecx
  404525:	mov    edx,0x18
  40452a:	mov    ecx,0x1
  40452f:	call   0x404b38
  404534:	test   rax,rax
  404537:	mov    rbx,rax
  40453a:	je     0x404578
  40453c:	mov    DWORD PTR [rax],edi
  40453e:	mov    QWORD PTR [rax+0x8],rsi
  404542:	lea    rcx,[rip+0x6457]        # 0x40a9a0
  404549:	call   QWORD PTR [rip+0x6e4d]        # 0x40b39c
  40454f:	mov    rax,QWORD PTR [rip+0x642a]        # 0x40a980
  404556:	lea    rcx,[rip+0x6443]        # 0x40a9a0
  40455d:	mov    QWORD PTR [rip+0x641c],rbx        # 0x40a980
  404564:	mov    QWORD PTR [rbx+0x10],rax
  404568:	call   QWORD PTR [rip+0x6e76]        # 0x40b3e4
  40456e:	xor    eax,eax
  404570:	add    rsp,0x20
  404574:	pop    rbx
  404575:	pop    rsi
  404576:	pop    rdi
  404577:	ret    
  404578:	mov    eax,0xffffffff
  40457d:	jmp    0x404511
  40457f:	nop
  404580:	push   rbx
  404581:	sub    rsp,0x20
  404585:	mov    eax,DWORD PTR [rip+0x63fd]        # 0x40a988
  40458b:	test   eax,eax
  40458d:	jne    0x4045a0
  40458f:	xor    eax,eax
  404591:	add    rsp,0x20
  404595:	pop    rbx
  404596:	ret    
  404597:	nop    WORD PTR [rax+rax*1+0x0]
  4045a0:	mov    ebx,ecx
  4045a2:	lea    rcx,[rip+0x63f7]        # 0x40a9a0
  4045a9:	call   QWORD PTR [rip+0x6ded]        # 0x40b39c
  4045af:	mov    rdx,QWORD PTR [rip+0x63ca]        # 0x40a980
  4045b6:	test   rdx,rdx
  4045b9:	je     0x4045d7
  4045bb:	mov    eax,DWORD PTR [rdx]
  4045bd:	cmp    eax,ebx
  4045bf:	jne    0x4045ce
  4045c1:	jmp    0x40460f
  4045c3:	mov    r8d,DWORD PTR [rax]
  4045c6:	cmp    r8d,ebx
  4045c9:	je     0x4045f0
  4045cb:	mov    rdx,rax
  4045ce:	mov    rax,QWORD PTR [rdx+0x10]
  4045d2:	test   rax,rax
  4045d5:	jne    0x4045c3
  4045d7:	lea    rcx,[rip+0x63c2]        # 0x40a9a0
  4045de:	call   QWORD PTR [rip+0x6e00]        # 0x40b3e4
  4045e4:	xor    eax,eax
  4045e6:	add    rsp,0x20
  4045ea:	pop    rbx
  4045eb:	ret    
  4045ec:	nop    DWORD PTR [rax+0x0]
  4045f0:	mov    rcx,rax
  4045f3:	mov    rax,QWORD PTR [rax+0x10]
  4045f7:	mov    QWORD PTR [rdx+0x10],rax
  4045fb:	call   0x404b20
  404600:	lea    rcx,[rip+0x6399]        # 0x40a9a0
  404607:	call   QWORD PTR [rip+0x6dd7]        # 0x40b3e4
  40460d:	jmp    0x4045e4
  40460f:	mov    rax,QWORD PTR [rdx+0x10]
  404613:	mov    rcx,rdx
  404616:	mov    QWORD PTR [rip+0x6363],rax        # 0x40a980
  40461d:	jmp    0x4045fb
  40461f:	nop
  404620:	push   rbx
  404621:	sub    rsp,0x20
  404625:	cmp    edx,0x1
  404628:	je     0x4046c0
  40462e:	jb     0x404660
  404630:	cmp    edx,0x2
  404633:	je     0x404650
  404635:	cmp    edx,0x3
  404638:	jne    0x404655
  40463a:	mov    eax,DWORD PTR [rip+0x6348]        # 0x40a988
  404640:	test   eax,eax
  404642:	je     0x404655
  404644:	call   0x404490
  404649:	jmp    0x404655
  40464b:	nop    DWORD PTR [rax+rax*1+0x0]
  404650:	call   0x403b20
  404655:	mov    eax,0x1
  40465a:	add    rsp,0x20
  40465e:	pop    rbx
  40465f:	ret    
  404660:	mov    eax,DWORD PTR [rip+0x6322]        # 0x40a988
  404666:	test   eax,eax
  404668:	jne    0x4046f0
  40466e:	mov    eax,DWORD PTR [rip+0x6314]        # 0x40a988
  404674:	cmp    eax,0x1
  404677:	jne    0x404655
  404679:	mov    rcx,QWORD PTR [rip+0x6300]        # 0x40a980
  404680:	test   rcx,rcx
  404683:	je     0x404696
  404685:	mov    rbx,QWORD PTR [rcx+0x10]
  404689:	call   0x404b20
  40468e:	test   rbx,rbx
  404691:	mov    rcx,rbx
  404694:	jne    0x404685
  404696:	lea    rcx,[rip+0x6303]        # 0x40a9a0
  40469d:	mov    QWORD PTR [rip+0x62d8],0x0        # 0x40a980
  4046a8:	mov    DWORD PTR [rip+0x62d6],0x0        # 0x40a988
  4046b2:	call   QWORD PTR [rip+0x6cdc]        # 0x40b394
  4046b8:	jmp    0x404655
  4046ba:	nop    WORD PTR [rax+rax*1+0x0]
  4046c0:	mov    eax,DWORD PTR [rip+0x62c2]        # 0x40a988
  4046c6:	test   eax,eax
  4046c8:	je     0x4046e0
  4046ca:	mov    eax,0x1
  4046cf:	mov    DWORD PTR [rip+0x62af],0x1        # 0x40a988
  4046d9:	add    rsp,0x20
  4046dd:	pop    rbx
  4046de:	ret    
  4046df:	nop
  4046e0:	lea    rcx,[rip+0x62b9]        # 0x40a9a0
  4046e7:	call   QWORD PTR [rip+0x6cef]        # 0x40b3dc
  4046ed:	jmp    0x4046ca
  4046ef:	nop
  4046f0:	call   0x404490
  4046f5:	jmp    0x40466e
  4046fa:	nop
  4046fb:	nop
  4046fc:	nop
  4046fd:	nop
  4046fe:	nop
  4046ff:	nop
  404700:	movsxd rax,DWORD PTR [rcx+0x3c]
  404704:	add    rcx,rax
  404707:	xor    eax,eax
  404709:	cmp    DWORD PTR [rcx],0x4550
  40470f:	je     0x404713
  404711:	repz ret 
  404713:	xor    eax,eax
  404715:	cmp    WORD PTR [rcx+0x18],0x20b
  40471b:	sete   al
  40471e:	ret    
  40471f:	nop
  404720:	cmp    WORD PTR [rcx],0x5a4d
  404725:	je     0x404730
  404727:	xor    eax,eax
  404729:	ret    
  40472a:	nop    WORD PTR [rax+rax*1+0x0]
  404730:	jmp    0x404700
  404732:	nop    DWORD PTR [rax+0x0]
  404736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404740:	movsxd rax,DWORD PTR [rcx+0x3c]
  404744:	add    rcx,rax
  404747:	movzx  eax,WORD PTR [rcx+0x14]
  40474b:	lea    rax,[rcx+rax*1+0x18]
  404750:	movzx  ecx,WORD PTR [rcx+0x6]
  404754:	test   ecx,ecx
  404756:	je     0x404781
  404758:	sub    ecx,0x1
  40475b:	lea    rcx,[rcx+rcx*4]
  40475f:	lea    r9,[rax+rcx*8+0x28]
  404764:	mov    r8d,DWORD PTR [rax+0xc]
  404768:	cmp    r8,rdx
  40476b:	mov    rcx,r8
  40476e:	ja     0x404778
  404770:	add    ecx,DWORD PTR [rax+0x8]
  404773:	cmp    rdx,rcx
  404776:	jb     0x404783
  404778:	add    rax,0x28
  40477c:	cmp    rax,r9
  40477f:	jne    0x404764
  404781:	xor    eax,eax
  404783:	repz ret 
  404785:	nop
  404786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404790:	push   rdi
  404791:	push   rsi
  404792:	push   rbx
  404793:	sub    rsp,0x20
  404797:	mov    rsi,rcx
  40479a:	call   0x404af0
  40479f:	cmp    rax,0x8
  4047a3:	ja     0x4047c0
  4047a5:	mov    rbx,QWORD PTR [rip+0x25f4]        # 0x406da0
  4047ac:	xor    edi,edi
  4047ae:	cmp    WORD PTR [rbx],0x5a4d
  4047b3:	je     0x4047d0
  4047b5:	mov    rax,rdi
  4047b8:	add    rsp,0x20
  4047bc:	pop    rbx
  4047bd:	pop    rsi
  4047be:	pop    rdi
  4047bf:	ret    
  4047c0:	xor    edi,edi
  4047c2:	mov    rax,rdi
  4047c5:	add    rsp,0x20
  4047c9:	pop    rbx
  4047ca:	pop    rsi
  4047cb:	pop    rdi
  4047cc:	ret    
  4047cd:	nop    DWORD PTR [rax]
  4047d0:	mov    rcx,rbx
  4047d3:	call   0x404700
  4047d8:	test   eax,eax
  4047da:	je     0x4047b5
  4047dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4047e0:	add    rdx,rbx
  4047e3:	movzx  eax,WORD PTR [rdx+0x14]
  4047e7:	lea    rbx,[rdx+rax*1+0x18]
  4047ec:	movzx  eax,WORD PTR [rdx+0x6]
  4047f0:	test   eax,eax
  4047f2:	je     0x4047b5
  4047f4:	sub    eax,0x1
  4047f7:	lea    rax,[rax+rax*4]
  4047fb:	lea    rdi,[rbx+rax*8+0x28]
  404800:	jmp    0x40480b
  404802:	add    rbx,0x28
  404806:	cmp    rbx,rdi
  404809:	je     0x4047c0
  40480b:	mov    r8d,0x8
  404811:	mov    rdx,rsi
  404814:	mov    rcx,rbx
  404817:	call   0x404ae8
  40481c:	test   eax,eax
  40481e:	jne    0x404802
  404820:	mov    rdi,rbx
  404823:	mov    rax,rdi
  404826:	add    rsp,0x20
  40482a:	pop    rbx
  40482b:	pop    rsi
  40482c:	pop    rdi
  40482d:	ret    
  40482e:	xchg   ax,ax
  404830:	push   rsi
  404831:	push   rbx
  404832:	sub    rsp,0x28
  404836:	mov    rbx,QWORD PTR [rip+0x2563]        # 0x406da0
  40483d:	cmp    WORD PTR [rbx],0x5a4d
  404842:	je     0x404850
  404844:	xor    eax,eax
  404846:	add    rsp,0x28
  40484a:	pop    rbx
  40484b:	pop    rsi
  40484c:	ret    
  40484d:	nop    DWORD PTR [rax]
  404850:	mov    rsi,rcx
  404853:	mov    rcx,rbx
  404856:	call   0x404700
  40485b:	test   eax,eax
  40485d:	je     0x404844
  40485f:	sub    rsi,rbx
  404862:	mov    rcx,rbx
  404865:	mov    rdx,rsi
  404868:	add    rsp,0x28
  40486c:	pop    rbx
  40486d:	pop    rsi
  40486e:	jmp    0x404740
  404873:	nop    DWORD PTR [rax]
  404876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404880:	push   rbx
  404881:	sub    rsp,0x20
  404885:	mov    rbx,QWORD PTR [rip+0x2514]        # 0x406da0
  40488c:	xor    eax,eax
  40488e:	cmp    WORD PTR [rbx],0x5a4d
  404893:	je     0x4048a0
  404895:	add    rsp,0x20
  404899:	pop    rbx
  40489a:	ret    
  40489b:	nop    DWORD PTR [rax+rax*1+0x0]
  4048a0:	mov    rcx,rbx
  4048a3:	call   0x404700
  4048a8:	test   eax,eax
  4048aa:	je     0x404895
  4048ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4048b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4048b5:	add    rsp,0x20
  4048b9:	pop    rbx
  4048ba:	ret    
  4048bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4048c0:	push   rdi
  4048c1:	push   rsi
  4048c2:	push   rbx
  4048c3:	sub    rsp,0x20
  4048c7:	mov    rsi,QWORD PTR [rip+0x24d2]        # 0x406da0
  4048ce:	xor    edi,edi
  4048d0:	mov    rbx,rcx
  4048d3:	cmp    WORD PTR [rsi],0x5a4d
  4048d8:	je     0x4048e5
  4048da:	mov    rax,rdi
  4048dd:	add    rsp,0x20
  4048e1:	pop    rbx
  4048e2:	pop    rsi
  4048e3:	pop    rdi
  4048e4:	ret    
  4048e5:	mov    rcx,rsi
  4048e8:	call   0x404700
  4048ed:	test   eax,eax
  4048ef:	je     0x4048da
  4048f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4048f5:	add    rsi,rax
  4048f8:	movzx  eax,WORD PTR [rsi+0x14]
  4048fc:	lea    rdx,[rsi+rax*1+0x18]
  404901:	movzx  eax,WORD PTR [rsi+0x6]
  404905:	test   eax,eax
  404907:	je     0x4048da
  404909:	sub    eax,0x1
  40490c:	lea    rax,[rax+rax*4]
  404910:	lea    rax,[rdx+rax*8+0x28]
  404915:	test   BYTE PTR [rdx+0x27],0x20
  404919:	je     0x404924
  40491b:	test   rbx,rbx
  40491e:	je     0x404940
  404920:	sub    rbx,0x1
  404924:	add    rdx,0x28
  404928:	cmp    rdx,rax
  40492b:	jne    0x404915
  40492d:	xor    edi,edi
  40492f:	mov    rax,rdi
  404932:	add    rsp,0x20
  404936:	pop    rbx
  404937:	pop    rsi
  404938:	pop    rdi
  404939:	ret    
  40493a:	nop    WORD PTR [rax+rax*1+0x0]
  404940:	mov    rdi,rdx
  404943:	mov    rax,rdi
  404946:	add    rsp,0x20
  40494a:	pop    rbx
  40494b:	pop    rsi
  40494c:	pop    rdi
  40494d:	ret    
  40494e:	xchg   ax,ax
  404950:	push   rsi
  404951:	push   rbx
  404952:	sub    rsp,0x28
  404956:	mov    rsi,QWORD PTR [rip+0x2443]        # 0x406da0
  40495d:	xor    ebx,ebx
  40495f:	cmp    WORD PTR [rsi],0x5a4d
  404964:	je     0x404970
  404966:	mov    rax,rbx
  404969:	add    rsp,0x28
  40496d:	pop    rbx
  40496e:	pop    rsi
  40496f:	ret    
  404970:	mov    rcx,rsi
  404973:	call   0x404700
  404978:	test   eax,eax
  40497a:	cmovne rbx,rsi
  40497e:	mov    rax,rbx
  404981:	add    rsp,0x28
  404985:	pop    rbx
  404986:	pop    rsi
  404987:	ret    
  404988:	nop    DWORD PTR [rax+rax*1+0x0]
  404990:	push   rsi
  404991:	push   rbx
  404992:	sub    rsp,0x28
  404996:	mov    rbx,QWORD PTR [rip+0x2403]        # 0x406da0
  40499d:	xor    eax,eax
  40499f:	cmp    WORD PTR [rbx],0x5a4d
  4049a4:	je     0x4049b0
  4049a6:	add    rsp,0x28
  4049aa:	pop    rbx
  4049ab:	pop    rsi
  4049ac:	ret    
  4049ad:	nop    DWORD PTR [rax]
  4049b0:	mov    rsi,rcx
  4049b3:	mov    rcx,rbx
  4049b6:	call   0x404700
  4049bb:	test   eax,eax
  4049bd:	je     0x4049a6
  4049bf:	sub    rsi,rbx
  4049c2:	mov    rcx,rbx
  4049c5:	mov    rdx,rsi
  4049c8:	call   0x404740
  4049cd:	test   rax,rax
  4049d0:	je     0x4049e1
  4049d2:	mov    eax,DWORD PTR [rax+0x24]
  4049d5:	not    eax
  4049d7:	shr    eax,0x1f
  4049da:	add    rsp,0x28
  4049de:	pop    rbx
  4049df:	pop    rsi
  4049e0:	ret    
  4049e1:	xor    eax,eax
  4049e3:	jmp    0x4049a6
  4049e5:	nop
  4049e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049f0:	push   rbp
  4049f1:	push   rdi
  4049f2:	push   rsi
  4049f3:	push   rbx
  4049f4:	sub    rsp,0x28
  4049f8:	mov    rdi,QWORD PTR [rip+0x23a1]        # 0x406da0
  4049ff:	xor    ebp,ebp
  404a01:	mov    esi,ecx
  404a03:	cmp    WORD PTR [rdi],0x5a4d
  404a08:	je     0x404a20
  404a0a:	mov    rax,rbp
  404a0d:	add    rsp,0x28
  404a11:	pop    rbx
  404a12:	pop    rsi
  404a13:	pop    rdi
  404a14:	pop    rbp
  404a15:	ret    
  404a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a20:	mov    rcx,rdi
  404a23:	call   0x404700
  404a28:	test   eax,eax
  404a2a:	je     0x404a0a
  404a2c:	movsxd rax,DWORD PTR [rdi+0x3c]
  404a30:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  404a37:	test   edx,edx
  404a39:	je     0x404a0a
  404a3b:	mov    ebx,edx
  404a3d:	mov    rcx,rdi
  404a40:	mov    rdx,rbx
  404a43:	call   0x404740
  404a48:	test   rax,rax
  404a4b:	je     0x404a0a
  404a4d:	add    rbx,rdi
  404a50:	mov    rdx,rbx
  404a53:	jne    0x404a67
  404a55:	jmp    0x404a0a
  404a57:	nop    WORD PTR [rax+rax*1+0x0]
  404a60:	sub    esi,0x1
  404a63:	add    rdx,0x14
  404a67:	mov    ecx,DWORD PTR [rdx+0x4]
  404a6a:	test   ecx,ecx
  404a6c:	jne    0x404a75
  404a6e:	mov    eax,DWORD PTR [rdx+0xc]
  404a71:	test   eax,eax
  404a73:	je     0x404a90
  404a75:	test   esi,esi
  404a77:	jg     0x404a60
  404a79:	mov    ebp,DWORD PTR [rdx+0xc]
  404a7c:	add    rbp,rdi
  404a7f:	mov    rax,rbp
  404a82:	add    rsp,0x28
  404a86:	pop    rbx
  404a87:	pop    rsi
  404a88:	pop    rdi
  404a89:	pop    rbp
  404a8a:	ret    
  404a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a90:	xor    ebp,ebp
  404a92:	mov    rax,rbp
  404a95:	add    rsp,0x28
  404a99:	pop    rbx
  404a9a:	pop    rsi
  404a9b:	pop    rdi
  404a9c:	pop    rbp
  404a9d:	ret    
  404a9e:	nop
  404a9f:	nop
  404aa0:	push   rcx
  404aa1:	push   rax
  404aa2:	cmp    rax,0x1000
  404aa8:	lea    rcx,[rsp+0x18]
  404aad:	jb     0x404ac8
  404aaf:	sub    rcx,0x1000
  404ab6:	or     QWORD PTR [rcx],0x0
  404aba:	sub    rax,0x1000
  404ac0:	cmp    rax,0x1000
  404ac6:	ja     0x404aaf
  404ac8:	sub    rcx,rax
  404acb:	or     QWORD PTR [rcx],0x0
  404acf:	pop    rax
  404ad0:	pop    rcx
  404ad1:	ret    
  404ad2:	nop
  404ad3:	nop
  404ad4:	nop
  404ad5:	nop
  404ad6:	nop
  404ad7:	nop
  404ad8:	nop
  404ad9:	nop
  404ada:	nop
  404adb:	nop
  404adc:	nop
  404add:	nop
  404ade:	nop
  404adf:	nop
  404ae0:	jmp    QWORD PTR [rip+0x6a4e]        # 0x40b534
  404ae6:	nop
  404ae7:	nop
  404ae8:	jmp    QWORD PTR [rip+0x6a3e]        # 0x40b52c
  404aee:	nop
  404aef:	nop
  404af0:	jmp    QWORD PTR [rip+0x6a2e]        # 0x40b524
  404af6:	nop
  404af7:	nop
  404af8:	jmp    QWORD PTR [rip+0x6a1e]        # 0x40b51c
  404afe:	nop
  404aff:	nop
  404b00:	jmp    QWORD PTR [rip+0x6a0e]        # 0x40b514
  404b06:	nop
  404b07:	nop
  404b08:	jmp    QWORD PTR [rip+0x69fe]        # 0x40b50c
  404b0e:	nop
  404b0f:	nop
  404b10:	jmp    QWORD PTR [rip+0x69ee]        # 0x40b504
  404b16:	nop
  404b17:	nop
  404b18:	jmp    QWORD PTR [rip+0x69de]        # 0x40b4fc
  404b1e:	nop
  404b1f:	nop
  404b20:	jmp    QWORD PTR [rip+0x69ce]        # 0x40b4f4
  404b26:	nop
  404b27:	nop
  404b28:	jmp    QWORD PTR [rip+0x69be]        # 0x40b4ec
  404b2e:	nop
  404b2f:	nop
  404b30:	jmp    QWORD PTR [rip+0x69ae]        # 0x40b4e4
  404b36:	nop
  404b37:	nop
  404b38:	jmp    QWORD PTR [rip+0x699e]        # 0x40b4dc
  404b3e:	nop
  404b3f:	nop
  404b40:	jmp    QWORD PTR [rip+0x698e]        # 0x40b4d4
  404b46:	nop
  404b47:	nop
  404b48:	jmp    QWORD PTR [rip+0x697e]        # 0x40b4cc
  404b4e:	nop
  404b4f:	nop
  404b50:	jmp    QWORD PTR [rip+0x696e]        # 0x40b4c4
  404b56:	nop
  404b57:	nop
  404b58:	jmp    QWORD PTR [rip+0x695e]        # 0x40b4bc
  404b5e:	nop
  404b5f:	nop
  404b60:	jmp    QWORD PTR [rip+0x694e]        # 0x40b4b4
  404b66:	nop
  404b67:	nop
  404b68:	jmp    QWORD PTR [rip+0x6936]        # 0x40b4a4
  404b6e:	nop
  404b6f:	nop
  404b70:	jmp    QWORD PTR [rip+0x6926]        # 0x40b49c
  404b76:	nop
  404b77:	nop
  404b78:	jmp    QWORD PTR [rip+0x690e]        # 0x40b48c
  404b7e:	nop
  404b7f:	nop
  404b80:	jmp    QWORD PTR [rip+0x68fe]        # 0x40b484
  404b86:	nop
  404b87:	nop
  404b88:	jmp    QWORD PTR [rip+0x68ee]        # 0x40b47c
  404b8e:	nop
  404b8f:	nop
  404b90:	jmp    QWORD PTR [rip+0x68de]        # 0x40b474
  404b96:	nop
  404b97:	nop
  404b98:	jmp    QWORD PTR [rip+0x68c6]        # 0x40b464
  404b9e:	nop
  404b9f:	nop
  404ba0:	jmp    QWORD PTR [rip+0x68b6]        # 0x40b45c
  404ba6:	nop
  404ba7:	nop
  404ba8:	jmp    QWORD PTR [rip+0x68a6]        # 0x40b454
  404bae:	nop
  404baf:	nop
  404bb0:	mov    rax,QWORD PTR [rip+0x5e39]        # 0x40a9f0
  404bb7:	ret    
  404bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  404bc0:	mov    rax,rcx
  404bc3:	xchg   QWORD PTR [rip+0x5e26],rax        # 0x40a9f0
  404bca:	ret    
  404bcb:	nop
  404bcc:	nop
  404bcd:	nop
  404bce:	nop
  404bcf:	nop
  404bd0:	jmp    QWORD PTR [rip+0x686e]        # 0x40b444
  404bd6:	nop
  404bd7:	nop
  404bd8:	jmp    QWORD PTR [rip+0x685e]        # 0x40b43c
  404bde:	nop
  404bdf:	nop
  404be0:	jmp    QWORD PTR [rip+0x684e]        # 0x40b434
  404be6:	nop
  404be7:	nop
  404be8:	jmp    QWORD PTR [rip+0x683e]        # 0x40b42c
  404bee:	nop
  404bef:	nop
  404bf0:	jmp    QWORD PTR [rip+0x682e]        # 0x40b424
  404bf6:	nop
  404bf7:	nop
  404bf8:	jmp    QWORD PTR [rip+0x681e]        # 0x40b41c
  404bfe:	nop
  404bff:	nop
  404c00:	jmp    QWORD PTR [rip+0x680e]        # 0x40b414
  404c06:	nop
  404c07:	nop
  404c08:	jmp    QWORD PTR [rip+0x67fe]        # 0x40b40c
  404c0e:	nop
  404c0f:	nop
  404c10:	jmp    QWORD PTR [rip+0x67ee]        # 0x40b404
  404c16:	nop
  404c17:	nop
  404c18:	jmp    QWORD PTR [rip+0x67de]        # 0x40b3fc
  404c1e:	nop
  404c1f:	nop
  404c20:	jmp    QWORD PTR [rip+0x67ce]        # 0x40b3f4
  404c26:	nop
  404c27:	nop
  404c28:	jmp    QWORD PTR [rip+0x67be]        # 0x40b3ec
  404c2e:	nop
  404c2f:	nop
  404c30:	jmp    QWORD PTR [rip+0x67ae]        # 0x40b3e4
  404c36:	nop
  404c37:	nop
  404c38:	jmp    QWORD PTR [rip+0x679e]        # 0x40b3dc
  404c3e:	nop
  404c3f:	nop
  404c40:	jmp    QWORD PTR [rip+0x678e]        # 0x40b3d4
  404c46:	nop
  404c47:	nop
  404c48:	jmp    QWORD PTR [rip+0x677e]        # 0x40b3cc
  404c4e:	nop
  404c4f:	nop
  404c50:	jmp    QWORD PTR [rip+0x676e]        # 0x40b3c4
  404c56:	nop
  404c57:	nop
  404c58:	jmp    QWORD PTR [rip+0x675e]        # 0x40b3bc
  404c5e:	nop
  404c5f:	nop
  404c60:	jmp    QWORD PTR [rip+0x674e]        # 0x40b3b4
  404c66:	nop
  404c67:	nop
  404c68:	jmp    QWORD PTR [rip+0x673e]        # 0x40b3ac
  404c6e:	nop
  404c6f:	nop
  404c70:	jmp    QWORD PTR [rip+0x672e]        # 0x40b3a4
  404c76:	nop
  404c77:	nop
  404c78:	jmp    QWORD PTR [rip+0x671e]        # 0x40b39c
  404c7e:	nop
  404c7f:	nop
  404c80:	jmp    QWORD PTR [rip+0x670e]        # 0x40b394
  404c86:	nop
  404c87:	nop
  404c88:	nop    DWORD PTR [rax+rax*1+0x0]
  404c90:	push   rbp
  404c91:	push   rdi
  404c92:	push   rsi
  404c93:	push   rbx
  404c94:	sub    rsp,0x48
  404c98:	xor    ebp,ebp
  404c9a:	xor    edi,edi
  404c9c:	mov    rbx,rdx
  404c9f:	mov    esi,ecx
  404ca1:	call   0x4036f0
  404ca6:	mov    rcx,QWORD PTR [rbx]
  404ca9:	call   0x403500
  404cae:	lea    rdx,[rip+0x188b]        # 0x406540
  404cb5:	xor    ecx,ecx
  404cb7:	call   0x403508
  404cbc:	lea    rdx,[rip+0x1885]        # 0x406548
  404cc3:	lea    rcx,[rip+0x18c7]        # 0x406591
  404cca:	call   0x403578
  404ccf:	lea    rdx,[rip+0x18ca]        # 0x4065a0
  404cd6:	lea    rcx,[rip+0x18f9]        # 0x4065d6
  404cdd:	call   0x403578
  404ce2:	lea    rcx,[rip+0x18a8]        # 0x406591
  404ce9:	call   0x403560
  404cee:	lea    r9,[rip+0x1d4b]        # 0x406a40
  404cf5:	lea    r8,[rip+0x1913]        # 0x40660f
  404cfc:	mov    QWORD PTR [rsp+0x20],0x0
  404d05:	mov    rdx,rbx
  404d08:	mov    ecx,esi
  404d0a:	call   0x403520
  404d0f:	cmp    eax,0xffffffff
  404d12:	je     0x404d7c
  404d14:	cmp    eax,0x56
  404d17:	je     0x404d30
  404d19:	jle    0x404d40
  404d1b:	cmp    eax,0x63
  404d1e:	je     0x404cee
  404d20:	cmp    eax,0x68
  404d23:	jne    0x404d44
  404d25:	mov    edi,0x1
  404d2a:	jmp    0x404cee
  404d2c:	nop    DWORD PTR [rax+0x0]
  404d30:	mov    ebp,0x1
  404d35:	jmp    0x404cee
  404d37:	nop    WORD PTR [rax+rax*1+0x0]
  404d40:	test   eax,eax
  404d42:	je     0x404cee
  404d44:	mov    rax,QWORD PTR [rip+0x6599]        # 0x40b2e4
  404d4b:	lea    rcx,[rip+0x1896]        # 0x4065e8
  404d52:	mov    rsi,QWORD PTR [rax]
  404d55:	call   0x403568
  404d5a:	mov    rbx,rax
  404d5d:	call   QWORD PTR [rip+0x6711]        # 0x40b474
  404d63:	lea    rcx,[rax+0x60]
  404d67:	mov    r8,rsi
  404d6a:	mov    rdx,rbx
  404d6d:	call   0x403540
  404d72:	mov    ecx,0x1
  404d77:	call   0x404b30
  404d7c:	test   bpl,bpl
  404d7f:	jne    0x404f5b
  404d85:	test   dil,dil
  404d88:	jne    0x404e7e
  404d8e:	mov    rax,QWORD PTR [rip+0x658f]        # 0x40b324
  404d95:	movsxd rax,DWORD PTR [rax]
  404d98:	lea    edx,[rax+0x2]
  404d9b:	cmp    edx,esi
  404d9d:	je     0x404e61
  404da3:	cmp    esi,eax
  404da5:	jne    0x404e12
  404da7:	mov    QWORD PTR [rsp+0x30],0x0
  404db0:	mov    QWORD PTR [rsp+0x38],0x0
  404db9:	lea    rdi,[rsp+0x38]
  404dbe:	mov    rbx,QWORD PTR [rip+0x66af]        # 0x40b474
  404dc5:	lea    rsi,[rsp+0x30]
  404dca:	jmp    0x404ddd
  404dcc:	nop    DWORD PTR [rax+0x0]
  404dd0:	call   0x4030d0
  404dd5:	test   rax,rax
  404dd8:	mov    rbp,rax
  404ddb:	jne    0x404e46
  404ddd:	call   rbx
  404ddf:	mov    rcx,rsi
  404de2:	mov    r8,rax
  404de5:	mov    rdx,rdi
  404de8:	call   0x403528
  404ded:	test   eax,eax
  404def:	mov    rcx,QWORD PTR [rsp+0x30]
  404df4:	js     0x404e3f
  404df6:	je     0x404dd0
  404df8:	movsxd rdx,eax
  404dfb:	cmp    BYTE PTR [rcx+rdx*1-0x1],0xa
  404e00:	jne    0x404dd0
  404e02:	sub    eax,0x1
  404e05:	cdqe   
  404e07:	mov    BYTE PTR [rcx+rax*1],0x0
  404e0b:	mov    rcx,QWORD PTR [rsp+0x30]
  404e10:	jmp    0x404dd0
  404e12:	mov    rbx,QWORD PTR [rbx+rax*8]
  404e16:	lea    rcx,[rip+0x1bf2]        # 0x406a0f
  404e1d:	call   0x403568
  404e22:	mov    r9,rbx
  404e25:	mov    r8,rax
  404e28:	xor    edx,edx
  404e2a:	mov    ecx,0x1
  404e2f:	call   0x403558
  404e34:	xor    eax,eax
  404e36:	add    rsp,0x48
  404e3a:	pop    rbx
  404e3b:	pop    rsi
  404e3c:	pop    rdi
  404e3d:	pop    rbp
  404e3e:	ret    
  404e3f:	call   0x404b20
  404e44:	jmp    0x404e34
  404e46:	call   rbx
  404e48:	lea    rdx,[rax+0x30]
  404e4c:	mov    rcx,rbp
  404e4f:	call   0x403150
  404e54:	mov    rcx,rbp
  404e57:	call   0x403070
  404e5c:	jmp    0x404ddd
  404e61:	lea    rcx,[rip+0x1b8b]        # 0x4069f3
  404e68:	call   0x403568
  404e6d:	xor    edx,edx
  404e6f:	mov    r8,rax
  404e72:	mov    ecx,0x1
  404e77:	call   0x403558
  404e7c:	jmp    0x404e34
  404e7e:	mov    rax,QWORD PTR [rip+0x645f]        # 0x40b2e4
  404e85:	lea    rcx,[rip+0x18bc]        # 0x406748
  404e8c:	mov    rbx,QWORD PTR [rax]
  404e8f:	call   0x403568
  404e94:	mov    rcx,rax
  404e97:	mov    rdx,rbx
  404e9a:	call   0x403510
  404e9f:	lea    rcx,[rip+0x18cb]        # 0x406771
  404ea6:	call   0x403510
  404eab:	lea    rcx,[rip+0x18c6]        # 0x406778
  404eb2:	call   0x403568
  404eb7:	mov    rcx,rax
  404eba:	call   0x403510
  404ebf:	lea    rcx,[rip+0x18ab]        # 0x406771
  404ec6:	call   0x403510
  404ecb:	lea    rcx,[rip+0x19b6]        # 0x406888
  404ed2:	call   0x403568
  404ed7:	mov    rcx,rax
  404eda:	call   0x403510
  404edf:	lea    rcx,[rip+0x188b]        # 0x406771
  404ee6:	call   0x403510
  404eeb:	lea    rcx,[rip+0x1a06]        # 0x4068f8
  404ef2:	call   0x403568
  404ef7:	mov    rcx,rax
  404efa:	call   0x403510
  404eff:	lea    rcx,[rip+0x1a3a]        # 0x406940
  404f06:	call   0x403568
  404f0b:	mov    rcx,rax
  404f0e:	call   0x403510
  404f13:	lea    rcx,[rip+0x1a66]        # 0x406980
  404f1a:	call   0x403568
  404f1f:	mov    rcx,rax
  404f22:	call   0x403510
  404f27:	lea    rcx,[rip+0x1843]        # 0x406771
  404f2e:	call   0x403510
  404f33:	call   QWORD PTR [rip+0x653b]        # 0x40b474
  404f39:	lea    rcx,[rip+0x1a88]        # 0x4069c8
  404f40:	mov    rbx,rax
  404f43:	call   0x403568
  404f48:	lea    rdx,[rbx+0x30]
  404f4c:	mov    rcx,rax
  404f4f:	call   0x403530
  404f54:	xor    ecx,ecx
  404f56:	call   0x404b30
  404f5b:	mov    rax,QWORD PTR [rip+0x6382]        # 0x40b2e4
  404f62:	mov    rcx,QWORD PTR [rax]
  404f65:	call   0x403550
  404f6a:	lea    r9,[rip+0x16a2]        # 0x406613
  404f71:	lea    r8,[rip+0x1619]        # 0x406591
  404f78:	lea    rcx,[rip+0x169d]        # 0x40661c
  404f7f:	mov    rdx,rax
  404f82:	call   0x403510
  404f87:	lea    rcx,[rip+0x16a2]        # 0x406630
  404f8e:	call   0x403568
  404f93:	lea    rdx,[rip+0x178e]        # 0x406728
  404f9a:	mov    rcx,rax
  404f9d:	call   0x403510
  404fa2:	lea    rcx,[rip+0x1784]        # 0x40672d
  404fa9:	call   0x403548
  404fae:	lea    rcx,[rip+0x1783]        # 0x406738
  404fb5:	mov    rbx,rax
  404fb8:	call   0x403568
  404fbd:	mov    rdx,rbx
  404fc0:	mov    rcx,rax
  404fc3:	call   0x403510
  404fc8:	xor    ecx,ecx
  404fca:	call   0x404b30
  404fcf:	nop
  404fd0:	(bad)  
  404fd1:	(bad)  
  404fd2:	(bad)  
  404fd3:	(bad)  
  404fd4:	(bad)  
  404fd5:	(bad)  
  404fd6:	(bad)  
  404fd7:	inc    DWORD PTR [rax]
  404fd9:	add    BYTE PTR [rax],al
  404fdb:	add    BYTE PTR [rax],al
  404fdd:	add    BYTE PTR [rax],al
  404fdf:	add    bh,bh
  404fe1:	(bad)  
  404fe2:	(bad)  
  404fe3:	(bad)  
  404fe4:	(bad)  
  404fe5:	(bad)  
  404fe6:	(bad)  
  404fe7:	inc    DWORD PTR [rax]
  404fe9:	add    BYTE PTR [rax],al
  404feb:	add    BYTE PTR [rax],al
  404fed:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405000 <.data>:
  405000:	or     al,BYTE PTR [rax]
	...
  40500e:	add    BYTE PTR [rax],al
  405010:	call   0x409064
	...
  40501d:	add    BYTE PTR [rax],al
  40501f:	add    bh,bh
  405021:	(bad)  
  405022:	(bad)  
  405023:	(bad)  
  405024:	(bad)  
  405025:	(bad)  
  405026:	(bad)  
  405027:	inc    DWORD PTR [rax]
  405029:	add    BYTE PTR [rax],al
  40502b:	add    BYTE PTR [rax],al
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    bh,bh
	...
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    BYTE PTR [rdx],al
	...
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    bh,bh
  405051:	(bad)  
  405052:	(bad)  
  405053:	inc    DWORD PTR [rax]
	...
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    BYTE PTR [rax+0x404b],dh
  405065:	add    BYTE PTR [rax],al
  405067:	add    al,al
  405069:	rex.WXB
  40506a:	add    BYTE PTR [rax],al
  40506d:	add    BYTE PTR [rax],al
  40506f:	add    BYTE PTR [rdx],dh
  405071:	movabs ds:0x2b992ddf,al
  40507a:	add    BYTE PTR [rax],al
  40507c:	add    BYTE PTR [rax],al
  40507e:	add    BYTE PTR [rax],al
  405080:	int    0x5d
  405082:	and    dl,dl
  405084:	data16 (bad) 
  405086:	(bad)  
  405087:	inc    DWORD PTR [rax]
  405089:	add    BYTE PTR [rax],al
  40508b:	add    BYTE PTR [rax],al
  40508d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	movabs al,ds:0xa0ffffb5a0ffffb5
  406009:	mov    ch,0xff
  40600b:	call   rax
  40600d:	mov    ch,0xff
  40600f:	call   rax
  406011:	mov    ch,0xff
  406013:	call   rax
  406015:	mov    ch,0xff
  406017:	call   rax
  406019:	mov    ch,0xff
  40601b:	call   rax
  40601d:	mov    ch,0xff
  40601f:	call   rax
  406021:	mov    ch,0xff
  406023:	call   rax
  406025:	mov    ch,0xff
  406027:	call   rax
  406029:	mov    ch,0xff
  40602b:	call   rax
  40602d:	mov    ch,0xff
  40602f:	call   rax
  406031:	mov    ch,0xff
  406033:	call   rax
  406035:	mov    ch,0xff
  406037:	push   QWORD PTR [rax-0x4f00004b]
  40603d:	mov    ch,0xff
  40603f:	call   rdx
  406041:	mov    ch,0xff
  406043:	jmp    QWORD PTR [rax-0x1f00004b]
  406049:	mov    ch,0xff
  40604b:	inc    eax
  40604d:	mov    ch,0xff
  40604f:	inc    eax
  406051:	mov    ch,0xff
  406053:	jmp    FWORD PTR [rsi]
  406055:	cs add BYTE PTR cs:[rsi],ch
  406059:	add    BYTE PTR cs:[rdi+0x74],ch
  40605d:	push   0x40007265
  406062:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  406069:	add    BYTE PTR [rax+0x64],al
  40606c:	movsxd ebp,DWORD PTR gs:[rcx+0x6d]
  406070:	(bad)  
  406071:	ins    BYTE PTR es:[rdi],dx
  406072:	add    BYTE PTR [rcx+0x6e],ah
  406075:	add    BYTE PTR fs:[rdi+0x72],ch
  406079:	add    BYTE PTR [rbx+0x79],dh
  40607c:	outs   dx,BYTE PTR ds:[rsi]
  40607d:	je     0x4060e0
  40607f:	js     0x4060a1
  406081:	gs jb  0x4060f6
  406084:	outs   dx,DWORD PTR ds:[rsi]
  406085:	jb     0x406087
  406087:	(bad)  
  406088:	imul   esi,DWORD PTR [rbx+0x6f],0x75722d6e
  40608f:	outs   dx,BYTE PTR ds:[rsi]
  406090:	je     0x4060fb
  406092:	ins    DWORD PTR es:[rdi],dx
  406093:	add    BYTE PTR gs:[rip+0x6d000a73],ah        # 0x6d406b0d
  40609a:	gs ins DWORD PTR es:[rdi],dx
  40609c:	outs   dx,DWORD PTR ds:[rsi]
  40609d:	jb     0x406118
  40609f:	and    BYTE PTR [rbp+0x78],ah
  4060a2:	push   0x74737561
  4060a7:	gs add BYTE PTR fs:[rax],al
  4060ab:	add    BYTE PTR [rax],dh
  4060ad:	mov    ebx,0xbd77ffff
  4060b2:	(bad)  
  4060b3:	jmp    FWORD PTR [rcx]
  4060b5:	mov    edx,0xbca5ffff
  4060ba:	(bad)  
  4060bb:	dec    ecx
  4060bd:	mov    esp,0xbad6ffff
  4060c2:	(bad)  
  4060c3:	jmp    rsp
  4060c5:	mov    esp,0xbb96ffff
  4060ca:	(bad)  
  4060cb:	inc    ebx
  4060cd:	mov    ebx,0xbbf4ffff
  4060d2:	(bad)  
  4060d3:	push   QWORD PTR [rax]
  4060d5:	mov    esp,0xbc76ffff
  4060da:	(bad)  
  4060db:	jmp    FWORD PTR [rcx]
  4060dd:	mov    edx,0xbaa8ffff
  4060e2:	(bad)  
  4060e3:	(bad)  
  4060e4:	jg     0x4060a2
  4060e6:	(bad)  
  4060e7:	inc    DWORD PTR [rax]
	...
  406101:	add    al,BYTE PTR [rcx]
  406103:	add    eax,DWORD PTR [rbx+rax*1]
  406106:	add    DWORD PTR [rbx],eax
  406108:	add    DWORD PTR [rbx],eax
  40610a:	add    eax,DWORD PTR [rbx]
  40610c:	add    DWORD PTR [rbx],eax
  40610e:	add    DWORD PTR [rbx],eax
  406110:	add    DWORD PTR [rcx],eax
  406112:	add    eax,DWORD PTR [rdx]
  406114:	add    BYTE PTR [rdx],al
  406116:	add    BYTE PTR [rdx],al
  406118:	add    al,BYTE PTR [rcx]
  40611a:	add    eax,DWORD PTR [rax]
  40611c:	add    al,BYTE PTR [rcx]
  40611e:	add    eax,DWORD PTR [rcx]
  406120:	add    eax,DWORD PTR [rax]
	...
  40613e:	add    BYTE PTR [rax],al
  406140:	add    BYTE PTR [rip+0x17171616],dl        # 0x1757775c
  406146:	sbb    BYTE PTR [rax],bl
  406148:	sbb    DWORD PTR [rcx],ebx
  40614a:	sbb    bl,BYTE PTR [rdx]
  40614c:	sbb    ebx,DWORD PTR [rbx]
  40614e:	sbb    al,0x1c
  406150:	sbb    eax,0x201f1e1d
  406155:	and    BYTE PTR [rcx],ah
  406157:	and    DWORD PTR [rdx],esp
  406159:	and    esp,DWORD PTR [rbx]
  40615b:	and    al,0x24
  40615d:	and    eax,0x252525
	...
  40617e:	add    BYTE PTR [rax],al
  406180:	add    BYTE PTR [rdi],al
  406182:	or     dl,BYTE PTR [rsi]
  406184:	(bad)  
  406185:	(bad)  
  406186:	str    WORD PTR [rsi]
  406189:	or     BYTE PTR [rdi],bl
  40618b:	and    BYTE PTR [rip+0x1b1a1918],cl        # 0x1b5a7aa9
  406191:	(bad)  
  406192:	or     ecx,DWORD PTR [rdx+riz*1]
  406195:	and    esp,DWORD PTR [rip+0x4122109]        # 0x45282a4
  40619b:	(bad)  
  40619c:	add    edx,DWORD PTR [rax]
  40619e:	adc    DWORD PTR [rsp+rdx*1],edx
  4061a1:	adc    esp,DWORD PTR [rdx+riz*1]
  4061a4:	or     ebx,DWORD PTR [rcx]
  4061a6:	sbb    cl,BYTE PTR [rbx]
  4061a8:	sbb    al,0x1d
  4061aa:	(bad)  
  4061ab:	sbb    al,0xb
  4061ad:	or     al,0x6
  4061af:	and    eax,0x1d0b1305
	...
  4061c0:	add    BYTE PTR [rsi],al
  4061c2:	or     ecx,DWORD PTR [rdi+rcx*1]
  4061c5:	add    al,0xb
  4061c7:	or     al,0xf
  4061c9:	or     BYTE PTR [rdi],al
  4061cb:	or     eax,0x100e0a08
  4061d0:	adc    DWORD PTR [rcx],ecx
  4061d2:	add    ecx,DWORD PTR [rdx+rdx*1]
  4061d5:	or     ecx,DWORD PTR [rbx]
  4061d7:	or     eax,DWORD PTR [rip+0x130b1414]        # 0x134b75f1
  4061dd:	or     BYTE PTR [rcx],dh
  4061df:	call   QWORD PTR [rbx]
  4061e1:	or     eax,0xffffffff
  4061e6:	(bad)  
  4061e7:	call   FWORD PTR [rdx]
  4061e9:	(bad)  
  4061ea:	(bad)  
  4061eb:	(bad)  
  4061ec:	call   FWORD PTR [rdi+rdx*1]
  4061ef:	call   FWORD PTR [rsi]
  4061f1:	(bad)  
  4061f2:	(bad)  
  4061f3:	(bad)  
  4061f4:	(bad)  
  4061f5:	(bad)  
  4061f6:	jmp    QWORD PTR [rcx]
	...
  406200:	(bad)  
  406201:	adc    dl,BYTE PTR cs:[rbx]
  406204:	add    eax,0x613121a
  406209:	or     DWORD PTR [rcx],eax
  40620b:	or     al,0x9
  40620d:	add    cl,BYTE PTR [rax]
  40620f:	sbb    eax,0x2d1c171e
  406214:	sbb    DWORD PTR [rdi+riz*1],esp
  406217:	sub    al,0x30
  406219:	(bad)  
  40621a:	and    BYTE PTR [rdx],dh
  40621c:	and    DWORD PTR [rcx],edx
  40621e:	xor    eax,DWORD PTR [rax]
  406220:	xor    DWORD PTR [rbx],ebx
  406222:	add    BYTE PTR [rax],al
  406224:	add    BYTE PTR [rax],al
  406226:	add    BYTE PTR [rax],al
  406228:	and    eax,0x0
  40622d:	and    eax,DWORD PTR es:[rax]
  406230:	sub    eax,DWORD PTR [rax]
  406232:	add    BYTE PTR [rax],al
  406234:	add    BYTE PTR [rax],al
  406236:	add    BYTE PTR [rdi],ch
	...
  406240:	inc    DWORD PTR [rbx]
  406242:	add    al,0xd
  406244:	(bad)  
  406245:	movups xmm5,XMMWORD PTR [rax]
  406248:	sub    DWORD PTR [rdx],ebp
  40624a:	or     cl,BYTE PTR [rbx]
  40624c:	sbb    BYTE PTR [rdx*1+0x1622],dl
	...
  40625f:	add    ah,ch
  406261:	in     al,dx
  406262:	adc    eax,0xec110eec
  406267:	adc    ch,ch
  406269:	in     al,dx
  40626a:	adc    al,0xec
  40626c:	in     al,dx
  40626d:	(bad)  
  40626e:	in     al,dx
  40626f:	in     al,dx
  406270:	(bad)  
	...
  406281:	add    BYTE PTR [rax],al
  406283:	add    BYTE PTR [rdx],al
  406285:	adc    al,0x0
  406287:	add    DWORD PTR [rax],eax
  406289:	add    BYTE PTR [rip+0x6140c16],al        # 0x6546ea5
  40628f:	or     BYTE PTR [rax],al
  406291:	add    ebx,DWORD PTR [rdi]
  406293:	sbb    eax,0x191b15
  406298:	adc    eax,DWORD PTR [rax]
  40629a:	add    BYTE PTR [rax+rax*1],al
  40629d:	add    BYTE PTR [rax],al
  40629f:	add    BYTE PTR [rax],al
  4062a1:	add    BYTE PTR [rax],bl
  4062a3:	(bad)  
  4062a4:	or     eax,0xa110907
  4062a9:	(bad)  
  4062aa:	adc    BYTE PTR [rbx],cl
  4062ac:	and    BYTE PTR [rsi],bl
  4062ae:	sbb    al,0x1a
  4062b0:	add    BYTE PTR [rax],al
  4062b2:	adc    cl,BYTE PTR [rdi]
	...
  4062c0:	add    esi,ebp
  4062c2:	stc    
  4062c3:	add    ah,ch
  4062c5:	add    al,0xfe
  4062c7:	in     al,dx
  4062c8:	add    esi,edi
  4062ca:	in     al,dx
  4062cb:	or     BYTE PTR [rdx],al
  4062cd:	add    DWORD PTR [rdi],ecx
  4062cf:	in     al,dx
  4062d0:	(bad)  
  4062d1:	in     al,dx
  4062d2:	add    eax,0xec09ec06
  4062d7:	imul   esp
  4062d9:	or     bh,dh
  4062db:	in     al,dx
  4062dc:	dec    BYTE PTR [rbx]
  4062de:	or     ecx,DWORD PTR [rdi+rax*1]
  4062e1:	sti    
  4062e2:	in     al,dx
  4062e3:	in     al,dx
  4062e4:	in     al,dx
  4062e5:	paddsb mm2,QWORD PTR [rbx]
  4062e8:	or     eax,0xec0decec
  4062ed:	in     al,dx
  4062ee:	in     al,dx
  4062ef:	in     al,dx
  4062f0:	adc    BYTE PTR [rbx],cl
  4062f2:	in     al,dx
  4062f3:	in     al,dx
	...
  406300:	add    BYTE PTR [rdx],al
  406302:	add    al,BYTE PTR [rdx]
  406304:	add    al,BYTE PTR [rdx]
  406306:	add    al,BYTE PTR [rdx]
  406308:	add    al,BYTE PTR [rdx]
  40630a:	add    al,BYTE PTR [rdx]
  40630c:	add    al,BYTE PTR [rdx]
  40630e:	add    al,BYTE PTR [rdx]
  406310:	add    al,BYTE PTR [rdx]
  406312:	add    al,BYTE PTR [rdx]
  406314:	add    al,BYTE PTR [rdx]
  406316:	add    al,BYTE PTR [rdx]
  406318:	add    al,BYTE PTR [rdx]
  40631a:	add    al,BYTE PTR [rdx]
  40631c:	add    al,BYTE PTR [rdx]
  40631e:	add    al,BYTE PTR [rdx]
  406320:	add    dl,BYTE PTR [rcx]
  406322:	add    al,BYTE PTR [rdx]
  406324:	add    dl,BYTE PTR [rdx]
  406326:	add    al,BYTE PTR [rdx]
  406328:	add    al,BYTE PTR [rdx]
  40632a:	add    al,BYTE PTR [rdx]
  40632c:	adc    eax,DWORD PTR [rdx]
  40632e:	add    al,BYTE PTR [rdx]
  406330:	add    al,BYTE PTR [rdx]
  406332:	add    al,BYTE PTR [rdx]
  406334:	add    al,BYTE PTR [rdx]
  406336:	add    al,BYTE PTR [rdx]
  406338:	add    al,BYTE PTR [rdx]
  40633a:	femms  
  40633c:	add    dl,BYTE PTR [rax]
  40633e:	add    al,BYTE PTR [rdx]
  406340:	add    al,BYTE PTR [rdx]
  406342:	add    al,BYTE PTR [rdx]
  406344:	add    al,BYTE PTR [rdx]
  406346:	add    al,BYTE PTR [rdx]
  406348:	add    al,BYTE PTR [rdx]
  40634a:	add    al,BYTE PTR [rdx]
  40634c:	add    al,BYTE PTR [rdx]
  40634e:	add    al,BYTE PTR [rdx]
  406350:	add    al,BYTE PTR [rdx]
  406352:	add    al,BYTE PTR [rdx]
  406354:	add    al,BYTE PTR [rdx]
  406356:	add    al,BYTE PTR [rdx]
  406358:	add    al,BYTE PTR [rdx]
  40635a:	add    al,BYTE PTR [rdx]
  40635c:	add    al,BYTE PTR [rdx]
  40635e:	add    al,BYTE PTR [rdx]
  406360:	add    al,BYTE PTR [rdx]
  406362:	add    al,BYTE PTR [rdx]
  406364:	add    al,BYTE PTR [rdx]
  406366:	add    al,BYTE PTR [rdx]
  406368:	add    al,BYTE PTR [rdx]
  40636a:	add    al,BYTE PTR [rdx]
  40636c:	add    al,BYTE PTR [rdx]
  40636e:	add    al,BYTE PTR [rdx]
  406370:	add    al,BYTE PTR [rdx]
  406372:	add    al,BYTE PTR [rdx]
  406374:	add    al,BYTE PTR [rdx]
  406376:	add    al,BYTE PTR [rdx]
  406378:	add    al,BYTE PTR [rdx]
  40637a:	add    al,BYTE PTR [rdx]
  40637c:	add    al,BYTE PTR [rdx]
  40637e:	adc    al,0x2
  406380:	add    al,BYTE PTR [rdx]
  406382:	add    al,BYTE PTR [rdx]
  406384:	add    al,BYTE PTR [rdx]
  406386:	add    al,BYTE PTR [rdx]
  406388:	add    al,BYTE PTR [rdx]
  40638a:	add    al,BYTE PTR [rdx]
  40638c:	add    al,BYTE PTR [rdx]
  40638e:	add    al,BYTE PTR [rdx]
  406390:	add    al,BYTE PTR [rdx]
  406392:	add    al,BYTE PTR [rdx]
  406394:	add    al,BYTE PTR [rdx]
  406396:	add    al,BYTE PTR [rdx]
  406398:	add    al,BYTE PTR [rdx]
  40639a:	add    al,BYTE PTR [rdx]
  40639c:	add    al,BYTE PTR [rdx]
  40639e:	add    al,BYTE PTR [rdx]
  4063a0:	add    al,BYTE PTR [rdx]
  4063a2:	add    al,BYTE PTR [rdx]
  4063a4:	add    al,BYTE PTR [rdx]
  4063a6:	add    al,BYTE PTR [rdx]
  4063a8:	add    al,BYTE PTR [rdx]
  4063aa:	add    al,BYTE PTR [rdx]
  4063ac:	add    al,BYTE PTR [rdx]
  4063ae:	add    al,BYTE PTR [rdx]
  4063b0:	add    al,BYTE PTR [rdx]
  4063b2:	add    al,BYTE PTR [rdx]
  4063b4:	add    al,BYTE PTR [rdx]
  4063b6:	add    al,BYTE PTR [rdx]
  4063b8:	add    al,BYTE PTR [rdx]
  4063ba:	add    al,BYTE PTR [rdx]
  4063bc:	add    al,BYTE PTR [rdx]
  4063be:	add    al,BYTE PTR [rdx]
  4063c0:	add    al,BYTE PTR [rdx]
  4063c2:	add    al,BYTE PTR [rdx]
  4063c4:	add    al,BYTE PTR [rdx]
  4063c6:	add    al,BYTE PTR [rdx]
  4063c8:	add    al,BYTE PTR [rdx]
  4063ca:	add    al,BYTE PTR [rdx]
  4063cc:	add    al,BYTE PTR [rdx]
  4063ce:	add    al,BYTE PTR [rdx]
  4063d0:	add    al,BYTE PTR [rdx]
  4063d2:	add    al,BYTE PTR [rdx]
  4063d4:	add    al,BYTE PTR [rdx]
  4063d6:	add    al,BYTE PTR [rdx]
  4063d8:	add    al,BYTE PTR [rdx]
  4063da:	add    al,BYTE PTR [rdx]
  4063dc:	add    al,BYTE PTR [rdx]
  4063de:	add    al,BYTE PTR [rdx]
  4063e0:	add    al,BYTE PTR [rdx]
  4063e2:	add    al,BYTE PTR [rdx]
  4063e4:	add    al,BYTE PTR [rdx]
  4063e6:	add    al,BYTE PTR [rdx]
  4063e8:	add    al,BYTE PTR [rdx]
  4063ea:	add    al,BYTE PTR [rdx]
  4063ec:	add    al,BYTE PTR [rdx]
  4063ee:	add    al,BYTE PTR [rdx]
  4063f0:	add    al,BYTE PTR [rdx]
  4063f2:	add    al,BYTE PTR [rdx]
  4063f4:	add    al,BYTE PTR [rdx]
  4063f6:	add    al,BYTE PTR [rdx]
  4063f8:	add    al,BYTE PTR [rdx]
  4063fa:	add    al,BYTE PTR [rdx]
  4063fc:	add    al,BYTE PTR [rdx]
  4063fe:	add    al,BYTE PTR [rdx]
  406400:	add    DWORD PTR [rdx],eax
  406402:	add    eax,DWORD PTR [rax*1+0x9080706]
  406409:	or     cl,BYTE PTR [rbx]
  40640b:	or     al,0xd
	...
  40643d:	add    BYTE PTR [rax],al
  40643f:	add    BYTE PTR [rsi+0x20],ch
  406442:	and    eax,0x64252025
  406447:	add    BYTE PTR [rsi+0x25],ch
  40644a:	and    eax,0x6e006425
  40644f:	add    BYTE PTR [rax],ah
  406451:	cmp    eax,0x6425203d
  406456:	add    BYTE PTR [rip+0x64253d],bh        # 0xa48999
  40645c:	and    BYTE PTR [rcx],ah
  40645e:	cmp    eax,0x642520
  406463:	and    DWORD PTR [rip+0x20006425],edi        # 0x2040c88e
  406469:	es and BYTE PTR es:[rax],al
  40646d:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  406471:	add    BYTE PTR [rdi*1+0x3e006425],bh
  406478:	and    eax,0x3d3e0064
  40647d:	and    eax,0x253c0064
  406482:	add    BYTE PTR fs:[rsi+0x70],ch
  406486:	ins    BYTE PTR es:[rdi],dx
  406487:	jne    0x4064fb
  406489:	(bad)  
  40648a:	ins    BYTE PTR es:[rdi],dx
  40648b:	jae    0x4064ca
  40648d:	xor    bh,BYTE PTR [rbx]
  40648f:	and    BYTE PTR [rax+0x6c],dh
  406492:	jne    0x406506
  406494:	(bad)  
  406495:	ins    BYTE PTR es:[rdi],dx
  406496:	cmp    eax,0x3e206e28
  40649b:	and    BYTE PTR [rip+0xa3b2964],ah        # 0xa7b8e05
  4064a1:	add    BYTE PTR [rax],al
  4064a3:	add    BYTE PTR [rax],al
  4064a5:	add    BYTE PTR [rax],al
  4064a7:	add    BYTE PTR [rsi+0x70],ch
  4064aa:	ins    BYTE PTR es:[rdi],dx
  4064ab:	jne    0x40651f
  4064ad:	(bad)  
  4064ae:	ins    BYTE PTR es:[rdi],dx
  4064af:	jae    0x4064ee
  4064b1:	xor    bh,BYTE PTR [rbx]
  4064b3:	and    BYTE PTR [rax+0x6c],dh
  4064b6:	jne    0x40652a
  4064b8:	(bad)  
  4064b9:	ins    BYTE PTR es:[rdi],dx
  4064ba:	cmp    eax,0x21206e28
  4064bf:	cmp    eax,0x29642520
  4064c4:	cmp    ecx,DWORD PTR [rdx]
  4064c6:	add    BYTE PTR [rsi+0x70],ch
  4064c9:	ins    BYTE PTR es:[rdi],dx
  4064ca:	jne    0x40653e
  4064cc:	(bad)  
  4064cd:	ins    BYTE PTR es:[rdi],dx
  4064ce:	jae    0x40650d
  4064d0:	xor    DWORD PTR [rbx],edi
  4064d2:	and    BYTE PTR [rax+0x6c],dh
  4064d5:	jne    0x406549
  4064d7:	(bad)  
  4064d8:	ins    BYTE PTR es:[rdi],dx
  4064d9:	cmp    eax,0xa3b30
  4064de:	outs   dx,BYTE PTR ds:[rsi]
  4064df:	jo     0x40654d
  4064e1:	jne    0x406555
  4064e3:	(bad)  
  4064e4:	ins    BYTE PTR es:[rdi],dx
  4064e5:	jae    0x406524
  4064e7:	and    eax,0x203b757a
  4064ec:	jo     0x40655a
  4064ee:	jne    0x406562
  4064f0:	(bad)  
  4064f1:	ins    BYTE PTR es:[rdi],dx
  4064f2:	cmp    eax,0x3f200028
  4064f7:	and    BYTE PTR [rip+0x3a20757a],ah        # 0x3a60da77
  4064fd:	and    BYTE PTR [rax],al
  4064ff:	and    BYTE PTR [rdi],bh
  406501:	and    BYTE PTR [rip+0x3a20757a],ah        # 0x3a60da81
  406507:	and    BYTE PTR [rip+0x2900757a],ah        # 0x2940da87
  40650d:	cmp    ecx,DWORD PTR [rdx]
	...
  406547:	add    BYTE PTR [rdi],ch
  406549:	jae    0x4065ae
  40654b:	jb     0x4065ae
  40654d:	je     0x4065b2
  40654f:	push   0x65776a2f
  406554:	(bad)  
  406555:	ins    DWORD PTR es:[rdi],dx
  406556:	js     0x4065bd
  406558:	sub    eax,0x6174636f
  40655d:	jbe    0x4065c4
  40655f:	(bad)  
  406560:	xor    al,0x2e
  406562:	xor    ch,BYTE PTR [rsi]
  406564:	xor    DWORD PTR [rdi],ebp
  406566:	ja     0x40659e
  406568:	xor    al,0x2d
  40656a:	xor    esi,DWORD PTR [rdx]
  40656c:	(bad)  
  40656d:	jne    0x4065e2
  40656f:	jb     0x4065a0
  406571:	js     0x4065ab
  406573:	ss pop rdi
  406575:	ss xor al,0x2d
  406578:	ja     0x4065b0
  40657a:	xor    al,0x2d
  40657c:	ins    DWORD PTR es:[rdi],dx
  40657d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  406584:	jae    0x4065ee
  406586:	(bad)  
  406587:	jb     0x4065ee
  406589:	(bad)  
  40658a:	ins    BYTE PTR es:[rdi],dx
  40658b:	outs   dx,DWORD PTR ds:[rsi]
  40658c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40658f:	add    BYTE PTR gs:[rdi+0x65],ah
  406593:	je     0x406609
  406595:	gs js  0x40660c
  406598:	sub    eax,0x6c6f6f74
  40659d:	jae    0x40659f
  40659f:	add    BYTE PTR [rdi],ch
  4065a1:	jae    0x406606
  4065a3:	jb     0x406606
  4065a5:	je     0x40660a
  4065a7:	push   0x65776a2f
  4065ac:	(bad)  
  4065ad:	ins    DWORD PTR es:[rdi],dx
  4065ae:	js     0x406615
  4065b0:	sub    eax,0x6174636f
  4065b5:	jbe    0x40661c
  4065b7:	(bad)  
  4065b8:	xor    al,0x2e
  4065ba:	xor    ch,BYTE PTR [rsi]
  4065bc:	xor    DWORD PTR [rdi],ebp
  4065be:	ja     0x4065f6
  4065c0:	xor    al,0x2d
  4065c2:	xor    esi,DWORD PTR [rdx]
  4065c4:	(bad)  
  4065c5:	jne    0x40663a
  4065c7:	jb     0x4065f8
  4065c9:	jae    0x406633
  4065cb:	(bad)  
  4065cc:	jb     0x406633
  4065ce:	(bad)  
  4065cf:	ins    BYTE PTR es:[rdi],dx
  4065d0:	outs   dx,DWORD PTR ds:[rsi]
  4065d1:	movsxd esp,DWORD PTR [rcx+0x6c]
  4065d4:	add    BYTE PTR gs:[rdx+0x69],ah
  4065d8:	jae    0x406649
  4065da:	outs   dx,BYTE PTR ds:[rsi]
  4065db:	sub    eax,0x746e7572
  4065e0:	imul   ebp,DWORD PTR [rbp+0x65],0x0
  4065e7:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  4065eb:	and    BYTE PTR [rdi],ah
  4065ed:	and    eax,0x2d2d2073
  4065f2:	push   0x27706c65
  4065f7:	and    BYTE PTR [rsi+0x6f],ah
  4065fa:	jb     0x40661c
  4065fc:	ins    DWORD PTR es:[rdi],dx
  4065fd:	outs   dx,DWORD PTR ds:[rsi]
  4065fe:	jb     0x406665
  406600:	and    BYTE PTR [rcx+0x6e],ch
  406603:	outs   dx,WORD PTR ds:[rsi]
  406605:	jb     0x406674
  406607:	(bad)  
  406608:	je     0x406673
  40660a:	outs   dx,DWORD PTR ds:[rsi]
  40660b:	outs   dx,BYTE PTR ds:[rsi]
  40660c:	or     al,BYTE PTR cs:[rax]
  40660f:	movsxd ebp,DWORD PTR [rax+0x56]
  406612:	add    BYTE PTR [rax],dh
  406614:	xor    DWORD PTR cs:[rcx],edi
  406617:	cs xor eax,0x2500312e
  40661d:	jae    0x40663f
  40661f:	sub    BYTE PTR [rdi+0x4e],al
  406622:	push   rbp
  406623:	and    BYTE PTR [rip+0x25202973],ah        # 0x25608f9c
  406629:	jae    0x406635
  40662b:	add    BYTE PTR [rax],al
  40662d:	add    BYTE PTR [rax],al
  40662f:	add    BYTE PTR [rbx+0x6f],al
  406632:	jo     0x4066ad
  406634:	jb     0x40669f
  406636:	addr32 push 0x43282074
  40663c:	sub    DWORD PTR [rax],esp
  40663e:	and    eax,0x72462073
  406643:	gs and BYTE PTR gs:[rbx+0x6f],dl
  406648:	data16 je 0x4066c2
  40664b:	(bad)  
  40664c:	jb     0x4066b3
  40664e:	and    BYTE PTR [rsi+0x6f],al
  406651:	jne    0x4066c1
  406653:	fs (bad) 
  406655:	je     0x4066c0
  406657:	outs   dx,DWORD PTR ds:[rsi]
  406658:	outs   dx,BYTE PTR ds:[rsi]
  406659:	sub    al,0x20
  40665b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40665d:	movsxd ebp,DWORD PTR [rsi]
  40665f:	or     cl,BYTE PTR [rcx+rbp*2+0x63]
  406663:	outs   dx,BYTE PTR gs:[rsi]
  406665:	jae    0x4066cc
  406667:	and    BYTE PTR [rdi+0x50],al
  40666a:	rex.WR jbe 0x4066a0
  40666d:	sub    edi,DWORD PTR [rdx]
  40666f:	and    BYTE PTR [rdi+0x4e],al
  406672:	push   rbp
  406673:	and    BYTE PTR [rdi+0x50],al
  406676:	rex.WR and BYTE PTR [rsi+0x65],r14b
  40667a:	jb     0x4066ef
  40667c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  406683:	jb     0x4066a5
  406685:	ins    BYTE PTR es:[rdi],dx
  406686:	(bad)  
  406687:	je     0x4066ee
  406689:	jb     0x4066ab
  40668b:	cmp    al,0x68
  40668d:	je     0x406703
  40668f:	jo     0x4066cb
  406691:	(bad)  
  406692:	(bad)  
  406693:	outs   dx,BYTE PTR ds:[esi]
  406695:	jne    0x4066c5
  406697:	outs   dx,DWORD PTR ds:[rsi]
  406698:	jb     0x406701
  40669a:	(bad)  
  40669b:	ins    BYTE PTR es:[rdi],dx
  40669c:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  4066a3:	(bad)  
  4066a4:	addr32 jo 0x406713
  4066a7:	cs push 0x3e6c6d74
  4066ad:	or     dl,BYTE PTR [rax+rbp*2+0x69]
  4066b1:	jae    0x4066d3
  4066b3:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  4066ba:	and    BYTE PTR [rbx+0x6f],dh
  4066bd:	data16 je 0x406737
  4066c0:	(bad)  
  4066c1:	jb     0x406728
  4066c3:	cmp    ah,BYTE PTR [rax]
  4066c5:	jns    0x406736
  4066c7:	jne    0x4066e9
  4066c9:	(bad)  
  4066ca:	jb     0x406731
  4066cc:	and    BYTE PTR [rsi+0x72],ah
  4066cf:	gs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4066d5:	movsxd ebp,DWORD PTR [rax+0x61]
  4066d8:	outs   dx,BYTE PTR ds:[rsi]
  4066d9:	and    BYTE PTR gs:[ecx+0x6e],ah
  4066de:	and    BYTE PTR fs:[rdx+0x65],dh
  4066e2:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4066ea:	je     0x406751
  4066ec:	and    BYTE PTR [rcx+0x74],ch
  4066ef:	or     dl,BYTE PTR cs:[rax+rbp*2+0x65]
  4066f4:	jb     0x40675b
  4066f6:	and    BYTE PTR [rcx+0x73],ch
  4066f9:	and    BYTE PTR [rsi+0x4f],cl
  4066fc:	and    BYTE PTR [rdi+0x41],dl
  4066ff:	push   rdx
  406700:	push   rdx
  406701:	rex.B
  406702:	rex.WRX push rsp
  406704:	pop    rcx
  406705:	sub    al,0x20
  406707:	je     0x406778
  406709:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40670d:	and    BYTE PTR [rbp+0x78],ah
  406710:	je     0x406777
  406712:	outs   dx,BYTE PTR ds:[rsi]
  406713:	je     0x406735
  406715:	jo     0x40677c
  406717:	jb     0x406786
  406719:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x79622064
  406721:	and    BYTE PTR [rcx+riz*2+0x77],ch
  406725:	or     al,BYTE PTR cs:[rax]
  406728:	xor    dh,BYTE PTR [rax]
  40672a:	xor    DWORD PTR [rip+0x69614400],esi        # 0x69a1ab30
  406730:	imul   ebp,DWORD PTR [rcx+0x20],0x55
  406734:	outs   dx,BYTE PTR gs:[rsi]
  406736:	outs   dx,DWORD PTR ds:[rsi]
  406737:	add    BYTE PTR [rdi+0x72],dl
  40673a:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x7962206e
  406742:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4a95bb
  406748:	push   rbp
  406749:	jae    0x4067ac
  40674b:	cmp    ah,BYTE PTR gs:[eax]
  40674f:	and    eax,0x4f5b2073
  406754:	push   rax
  406755:	push   rsp
  406756:	rex.WB
  406757:	rex.WRXB
  406758:	rex.WRX
  406759:	cs cs cs pop rbp
  40675d:	and    BYTE PTR [rbx+0x4c],bl
  406760:	rex.WRXB
  406761:	rex.XB
  406762:	rex.B
  406763:	rex.WR
  406764:	and    BYTE PTR [r10+0x55],r10b
  406768:	rex.WR
  406769:	rex.RB push r11
  40676b:	pop    rbp
  40676c:	cs cs or al,BYTE PTR cs:[rax]
  406771:	or     al,BYTE PTR [rax]
  406773:	add    BYTE PTR [rax],al
  406775:	add    BYTE PTR [rax],al
  406777:	add    BYTE PTR [rbp+0x78],al
  40677a:	je     0x4067ee
  40677c:	(bad)  
  40677d:	movsxd esi,DWORD PTR [rax+riz*1+0x6f]
  406781:	jb     0x4067a3
  406783:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406786:	jbe    0x4067ed
  406788:	jb     0x4067fe
  40678a:	and    BYTE PTR [rbp+0x6e],dl
  40678d:	imul   esp,DWORD PTR [rbx+0x6f],0x43206564
  406794:	rex.WR
  406795:	rex.R push rdx
  406797:	and    BYTE PTR [rax+0x6c],dh
  40679a:	jne    0x40680e
  40679c:	(bad)  
  40679d:	ins    BYTE PTR es:[rdi],dx
  40679e:	and    BYTE PTR [rdx+0x75],dh
  4067a1:	ins    BYTE PTR es:[rdi],dx
  4067a2:	gs jae 0x4067d3
  4067a5:	or     cl,BYTE PTR [rdx]
  4067a7:	rex.WB
  4067a8:	data16 and BYTE PTR [rdx+0x6f],ah
  4067ac:	je     0x406816
  4067ae:	and    BYTE PTR [rdi+rcx*2+0x43],cl
  4067b2:	rex.B
  4067b3:	rex.WR
  4067b4:	and    BYTE PTR [r9+0x6e],r12b
  4067b8:	and    BYTE PTR fs:[rdx+0x55],dl
  4067bc:	rex.WR
  4067bd:	rex.RB push r11
  4067bf:	and    BYTE PTR [rcx+0x72],ah
  4067c2:	and    BYTE PTR gs:[rbx+0x70],dh
  4067c6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4067ca:	imul   esp,DWORD PTR [rbp+0x64],0x7469202c
  4067d1:	and    BYTE PTR [rdx+0x65],dh
  4067d4:	(bad)  
  4067d5:	fs jae 0x4067f8
  4067d8:	rex.XB
  4067d9:	rex.WR
  4067da:	rex.R push rdx
  4067dc:	and    BYTE PTR [rax+0x6c],dh
  4067df:	jne    0x406853
  4067e1:	(bad)  
  4067e2:	ins    BYTE PTR es:[rdi],dx
  4067e3:	and    BYTE PTR [rdx+0x75],dh
  4067e6:	ins    BYTE PTR es:[rdi],dx
  4067e7:	gs jae 0x40680a
  4067ea:	outs   dx,WORD PTR ds:[rsi]
  4067ec:	jb     0x4067f8
  4067ee:	rex.WR
  4067ef:	rex.WRXB
  4067f0:	rex.XB
  4067f1:	rex.B
  4067f2:	rex.WR
  4067f3:	and    BYTE PTR [r14+0x72],r12b
  4067f7:	outs   dx,DWORD PTR ds:[rsi]
  4067f8:	ins    DWORD PTR es:[rdi],dx
  4067f9:	and    BYTE PTR [rdx+0x55],dl
  4067fc:	rex.WR
  4067fd:	rex.RB push r11
  4067ff:	and    BYTE PTR [rcx+0x6e],ah
  406802:	and    BYTE PTR fs:[rax+0x72],dh
  406806:	imul   ebp,DWORD PTR [rsi+0x74],0x65687420
  40680d:	ins    DWORD PTR es:[rdi],dx
  40680e:	and    BYTE PTR [rcx+0x6e],ch
  406811:	and    BYTE PTR [rcx+0x20],ah
  406814:	outs   dx,WORD PTR ds:[rsi]
  406816:	jb     0x406885
  406818:	and    BYTE PTR [rbx+0x75],dh
  40681b:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  406823:	outs   dx,DWORD PTR ds:[rsi]
  406824:	jb     0x406846
  406826:	addr32 gs je 0x40689e
  40682a:	gs js  0x4068a1
  40682d:	and    BYTE PTR [rbp+0x73],dh
  406830:	gs or  cl,BYTE PTR cs:[rcx+0x66]
  406835:	and    BYTE PTR [rsi+0x6f],ch
  406838:	and    BYTE PTR [rcx+0x72],ah
  40683b:	addr32 jne 0x4068ab
  40683e:	outs   dx,BYTE PTR gs:[rsi]
  406840:	je     0x406862
  406842:	imul   esi,DWORD PTR [rbx+0x20],0x65766967
  406849:	outs   dx,BYTE PTR ds:[rsi]
  40684a:	sub    al,0x20
  40684c:	imul   esi,DWORD PTR [rax+riz*1+0x72],0x73646165
  406854:	and    BYTE PTR [rbx+0x4c],al
  406857:	rex.R push rdx
  406859:	and    BYTE PTR [rax+0x6c],dh
  40685c:	jne    0x4068d0
  40685e:	(bad)  
  40685f:	ins    BYTE PTR es:[rdi],dx
  406860:	and    BYTE PTR [rdx+0x75],dh
  406863:	ins    BYTE PTR es:[rdi],dx
  406864:	gs jae 0x406887
  406867:	data16 jb 0x4068d9
  40686a:	ins    DWORD PTR es:[rdi],dx
  40686b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40686f:	and    BYTE PTR [rbx+0x74],dh
  406872:	(bad)  
  406873:	outs   dx,BYTE PTR ds:[rsi]
  406874:	fs (bad) 
  406876:	jb     0x4068dc
  406878:	and    BYTE PTR [rcx+0x6e],ch
  40687b:	jo     0x4068f2
  40687d:	je     0x4068ad
  40687f:	or     al,BYTE PTR [rax]
  406881:	add    BYTE PTR [rax],al
  406883:	add    BYTE PTR [rax],al
  406885:	add    BYTE PTR [rax],al
  406887:	add    BYTE PTR [rbp+0x61],cl
  40688a:	outs   dx,BYTE PTR ds:[rsi]
  40688b:	fs (bad) 
  40688d:	je     0x4068fe
  40688f:	jb     0x40690a
  406891:	and    BYTE PTR [rcx+0x72],ah
  406894:	addr32 jne 0x406904
  406897:	outs   dx,BYTE PTR gs:[rsi]
  406899:	je     0x40690e
  40689b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40689f:	ins    BYTE PTR es:[rdi],dx
  4068a0:	outs   dx,DWORD PTR ds:[rsi]
  4068a1:	outs   dx,BYTE PTR ds:[rsi]
  4068a2:	and    BYTE PTR [edi+0x70],ch
  4068a6:	je     0x406911
  4068a8:	outs   dx,DWORD PTR ds:[rsi]
  4068a9:	outs   dx,BYTE PTR ds:[rsi]
  4068aa:	jae    0x4068cc
  4068ac:	(bad)  
  4068ad:	jb     0x406914
  4068af:	and    BYTE PTR [rbp+0x61],ch
  4068b2:	outs   dx,BYTE PTR ds:[rsi]
  4068b3:	fs (bad) 
  4068b5:	je     0x406926
  4068b7:	jb     0x406932
  4068b9:	and    BYTE PTR [rsi+0x6f],ah
  4068bc:	jb     0x4068de
  4068be:	jae    0x406928
  4068c0:	outs   dx,DWORD PTR ds:[rsi]
  4068c1:	jb     0x406937
  4068c3:	and    BYTE PTR [rdi+0x70],ch
  4068c6:	je     0x406931
  4068c8:	outs   dx,DWORD PTR ds:[rsi]
  4068c9:	outs   dx,BYTE PTR ds:[rsi]
  4068ca:	jae    0x4068ec
  4068cc:	je     0x40693d
  4068ce:	outs   dx,DWORD PTR ds:[rsi]
  4068cf:	or     dl,BYTE PTR cs:[rbx+0x69]
  4068d3:	ins    DWORD PTR es:[rdi],dx
  4068d4:	imul   ebp,DWORD PTR [rcx+riz*2+0x72],0x6620796c
  4068dc:	outs   dx,DWORD PTR ds:[rsi]
  4068dd:	jb     0x4068ff
  4068df:	outs   dx,DWORD PTR ds:[rsi]
  4068e0:	jo     0x406956
  4068e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x61206c61
  4068e9:	jb     0x406952
  4068eb:	jne    0x40695a
  4068ed:	outs   dx,BYTE PTR gs:[rsi]
  4068ef:	je     0x406964
  4068f1:	or     al,BYTE PTR cs:[rax]
  4068f4:	add    BYTE PTR [rax],al
  4068f6:	add    BYTE PTR [rax],al
  4068f8:	and    BYTE PTR [rax],ah
  4068fa:	sub    eax,0x2d202c63
  4068ff:	sub    eax,0x72646c63
  406904:	and    BYTE PTR [rax],ah
  406906:	and    BYTE PTR [rax],ah
  406908:	and    BYTE PTR [rax],ah
  40690a:	and    BYTE PTR [rax],ah
  40690c:	and    BYTE PTR [rax],ah
  40690e:	and    BYTE PTR [rax],ah
  406910:	and    BYTE PTR [rax],ah
  406912:	and    BYTE PTR [rax],ah
  406914:	and    BYTE PTR [rax],ah
  406916:	jo     0x40698a
  406918:	imul   ebp,DWORD PTR [rsi+0x74],0x756c7020
  40691f:	jb     0x406982
  406921:	ins    BYTE PTR es:[rdi],dx
  406922:	and    BYTE PTR [rdx+0x75],dh
  406925:	ins    BYTE PTR es:[rdi],dx
  406926:	gs jae 0x406949
  406929:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  406930:	rex.XB
  406931:	rex.WR
  406932:	rex.R push rdx
  406934:	and    BYTE PTR [rsi+0x6f],ah
  406937:	jb     0x4069a6
  406939:	(bad)  
  40693a:	je     0x406946
  40693c:	add    BYTE PTR [rax],al
  40693e:	add    BYTE PTR [rax],al
  406940:	and    BYTE PTR [rax],ah
  406942:	sub    eax,0x2d202c68
  406947:	sub    eax,0x706c6568
  40694c:	and    BYTE PTR [rax],ah
  40694e:	and    BYTE PTR [rax],ah
  406950:	and    BYTE PTR [rax],ah
  406952:	and    BYTE PTR [rax],ah
  406954:	and    BYTE PTR [rax],ah
  406956:	and    BYTE PTR [rax],ah
  406958:	and    BYTE PTR [rax],ah
  40695a:	and    BYTE PTR [rax],ah
  40695c:	and    BYTE PTR [rax],ah
  40695e:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  406966:	je     0x4069d0
  406968:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  40696f:	and    BYTE PTR [rcx+0x6e],ah
  406972:	and    BYTE PTR fs:[rbp+0x78],ah
  406976:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  40697e:	add    BYTE PTR [rax],al
  406980:	and    BYTE PTR [rax],ah
  406982:	sub    eax,0x2d202c56
  406987:	sub    eax,0x73726576
  40698c:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  406993:	and    BYTE PTR [rax],ah
  406995:	and    BYTE PTR [rax],ah
  406997:	and    BYTE PTR [rax],ah
  406999:	and    BYTE PTR [rax],ah
  40699b:	and    BYTE PTR [rax],ah
  40699d:	and    BYTE PTR [rdi+0x75],ch
  4069a0:	je     0x406a12
  4069a2:	jne    0x406a18
  4069a4:	and    BYTE PTR [rsi+0x65],dh
  4069a7:	jb     0x406a1c
  4069a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  4069b0:	outs   dx,DWORD PTR ds:[rsi]
  4069b1:	jb     0x406a20
  4069b3:	(bad)  
  4069b4:	je     0x406a1f
  4069b6:	outs   dx,DWORD PTR ds:[rsi]
  4069b7:	outs   dx,BYTE PTR ds:[rsi]
  4069b8:	and    BYTE PTR [rcx+0x6e],ah
  4069bb:	and    BYTE PTR fs:[rbp+0x78],ah
  4069bf:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  4069c7:	add    BYTE PTR [rdx+0x65],dl
  4069ca:	jo     0x406a3b
  4069cc:	jb     0x406a42
  4069ce:	and    BYTE PTR [rdx+0x75],ah
  4069d1:	addr32 jae 0x4069f4
  4069d4:	je     0x406a45
  4069d6:	and    BYTE PTR [rdx+riz*2],bh
  4069d9:	jne    0x406a42
  4069db:	sub    eax,0x2d756e67
  4069e0:	addr32 gs je 0x406a58
  4069e4:	gs js  0x406a5b
  4069e7:	rex
  4069e8:	outs   dx,BYTE PTR ds:[esi]
  4069ea:	jne    0x406a1a
  4069ec:	outs   dx,DWORD PTR ds:[rsi]
  4069ed:	jb     0x406a56
  4069ef:	ds or  al,BYTE PTR cs:[rax]
  4069f3:	gs js  0x406a6a
  4069f6:	jb     0x406a59
  4069f8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4069fc:	outs   dx,BYTE PTR ds:[rsi]
  4069fd:	and    BYTE PTR [rcx+0x73],ch
  406a00:	and    BYTE PTR [rsi+0x6f],ch
  406a03:	je     0x406a25
  406a05:	jae    0x406a7c
  406a07:	jo     0x406a79
  406a09:	outs   dx,DWORD PTR ds:[rsi]
  406a0a:	jb     0x406a80
  406a0c:	gs add BYTE PTR fs:[rbp+0x78],ah
  406a11:	je     0x406a85
  406a13:	(bad)  
  406a14:	and    BYTE PTR [rdi+0x70],ch
  406a17:	gs jb  0x406a7b
  406a1a:	outs   dx,BYTE PTR ds:[rsi]
  406a1b:	and    BYTE PTR fs:[rip+0x6c630073],ah        # 0x6ca36a95
  406a22:	fs jb  0x406a25
  406a25:	push   0x706c65
  406a2a:	jbe    0x406a91
  406a2c:	jb     0x406aa1
  406a2e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
	...
  406a3d:	add    BYTE PTR [rax],al
  406a3f:	add    BYTE PTR [rax],ah
  406a41:	push   0x40
	...
  406a57:	add    BYTE PTR [rbx+0x0],ah
  406a5a:	add    BYTE PTR [rax],al
  406a5c:	add    BYTE PTR [rax],al
  406a5e:	add    BYTE PTR [rax],al
  406a60:	and    eax,0x406a
	...
  406a75:	add    BYTE PTR [rax],al
  406a77:	add    BYTE PTR [rax+0x0],ch
  406a7a:	add    BYTE PTR [rax],al
  406a7c:	add    BYTE PTR [rax],al
  406a7e:	add    BYTE PTR [rax],al
  406a80:	sub    ch,BYTE PTR [rdx+0x40]
	...
  406a97:	add    BYTE PTR [rsi+0x0],dl
	...
  406abe:	add    BYTE PTR [rax],al
  406ac0:	and    BYTE PTR [rbp+0x40],0x0
  406ac7:	add    BYTE PTR [rax+0x40a0],al
  406acd:	add    BYTE PTR [rax],al
  406acf:	add    BYTE PTR [rax+0x39],al
  406ad2:	add    BYTE PTR [rax],al
	...
  406add:	add    BYTE PTR [rax],al
  406adf:	add    BYTE PTR [rcx+0x72],al
  406ae2:	addr32 jne 0x406b52
  406ae5:	outs   dx,BYTE PTR gs:[rsi]
  406ae7:	je     0x406b09
  406ae9:	outs   dx,DWORD PTR fs:[rsi]
  406aeb:	ins    DWORD PTR es:[rdi],dx
  406aec:	(bad)  
  406aed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  406af4:	jb     0x406b16
  406af6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  406afa:	rex.B
  406afb:	rex.WB
  406afc:	rex.WRX sub QWORD PTR [rax],r8
  406aff:	rex.B jb 0x406b69
  406b02:	jne    0x406b71
  406b04:	outs   dx,BYTE PTR gs:[rsi]
  406b06:	je     0x406b28
  406b08:	jae    0x406b73
  406b0a:	outs   dx,BYTE PTR ds:[rsi]
  406b0b:	addr32 jne 0x406b7a
  406b0e:	(bad)  
  406b0f:	jb     0x406b7a
  406b11:	je     0x406b8c
  406b13:	and    BYTE PTR [rax],ch
  406b15:	push   rbx
  406b16:	rex.WB
  406b17:	rex.RXB
  406b18:	rex.WRX sub QWORD PTR [rax],r8
  406b1b:	add    BYTE PTR [rax],al
  406b1d:	add    BYTE PTR [rax],al
  406b1f:	add    BYTE PTR [rdi+0x76],cl
  406b22:	gs jb  0x406b8b
  406b25:	ins    BYTE PTR es:[rdi],dx
  406b26:	outs   dx,DWORD PTR ds:[rsi]
  406b27:	ja     0x406b49
  406b29:	jb     0x406b8c
  406b2b:	outs   dx,BYTE PTR ds:[rsi]
  406b2c:	and    BYTE PTR gs:[ebp+0x72],ah
  406b31:	jb     0x406ba2
  406b33:	jb     0x406b55
  406b35:	sub    BYTE PTR [rdi+0x56],cl
  406b38:	rex.RB push r10
  406b3a:	rex.RX
  406b3b:	rex.WR
  406b3c:	rex.WRXB push r15
  406b3e:	sub    DWORD PTR [rax],eax
  406b40:	push   rax
  406b41:	(bad)  
  406b42:	jb     0x406bb8
  406b44:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  406b4b:	jae    0x406b6d
  406b4d:	outs   dx,DWORD PTR ds:[rsi]
  406b4e:	data16 and BYTE PTR [rbx+0x69],dh
  406b52:	outs   dx,BYTE PTR ds:[esi]
  406b54:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406b5b:	and    BYTE PTR gs:[rax],ch
  406b5e:	push   rax
  406b5f:	rex.WR
  406b60:	rex.WRXB push r11
  406b62:	push   rbx
  406b63:	sub    DWORD PTR [rax],eax
  406b65:	add    BYTE PTR [rax],al
  406b67:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  406b6b:	(bad)  
  406b6c:	ins    BYTE PTR es:[rdi],dx
  406b6d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  406b71:	jae    0x406b93
  406b73:	outs   dx,DWORD PTR ds:[rsi]
  406b74:	data16 and BYTE PTR [rbx+0x69],dh
  406b78:	outs   dx,BYTE PTR ds:[esi]
  406b7a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406b81:	and    BYTE PTR gs:[rax],ch
  406b84:	push   rsp
  406b85:	rex.WR
  406b86:	rex.WRXB push r11
  406b88:	push   rbx
  406b89:	sub    DWORD PTR [rax],eax
  406b8b:	add    BYTE PTR [rax],al
  406b8d:	add    BYTE PTR [rax],al
  406b8f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  406b93:	and    BYTE PTR [rdx+0x65],dh
  406b96:	jae    0x406c0d
  406b98:	ins    BYTE PTR es:[rdi],dx
  406b99:	je     0x406bbb
  406b9b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  406ba2:	jae    0x406c11
  406ba4:	(bad)  
  406ba5:	ins    BYTE PTR es:[rdi],dx
  406ba6:	ins    BYTE PTR es:[rdi],dx
  406ba7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406bab:	(bad)  
  406bac:	and    BYTE PTR gs:[rdx+0x65],dh
  406bb0:	jo     0x406c24
  406bb2:	gs jae 0x406c1a
  406bb5:	outs   dx,BYTE PTR ds:[rsi]
  406bb6:	je     0x406c1d
  406bb8:	and    BYTE PTR fs:[rax],ch
  406bbb:	push   rbp
  406bbc:	rex.WRX
  406bbd:	rex.R
  406bbe:	rex.RB push r10
  406bc0:	rex.RX
  406bc1:	rex.WR
  406bc2:	rex.WRXB push r15
  406bc4:	sub    DWORD PTR [rax],eax
  406bc6:	push   rbp
  406bc7:	outs   dx,BYTE PTR ds:[rsi]
  406bc8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406bcc:	outs   dx,BYTE PTR ds:[rsi]
  406bcd:	and    BYTE PTR [rbp+0x72],ah
  406bd0:	jb     0x406c41
  406bd2:	jb     0x406bd4
  406bd4:	add    BYTE PTR [rax],al
  406bd6:	add    BYTE PTR [rax],al
  406bd8:	pop    rdi
  406bd9:	ins    DWORD PTR es:[rdi],dx
  406bda:	(bad)  
  406bdb:	je     0x406c45
  406bdd:	gs jb  0x406c52
  406be0:	sub    BYTE PTR [rcx],ch
  406be2:	cmp    ah,BYTE PTR [rax]
  406be4:	and    eax,0x6e692073
  406be9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67659462
  406bef:	sub    al,0x20
  406bf1:	and    eax,0x20202967
  406bf6:	sub    BYTE PTR [rdx+0x65],dh
  406bf9:	je     0x406c71
  406bfb:	(bad)  
  406bfc:	ins    BYTE PTR es:[rdi],dx
  406bfd:	cmp    eax,0xa296725
  406c02:	add    BYTE PTR [rax],al
  406c04:	or     al,0xcf
  406c06:	(bad)  
  406c07:	dec    DWORD PTR [rbp-0x32]
  406c0a:	(bad)  
  406c0b:	(bad)  
  406c0c:	mov    esp,0xccffffce
  406c11:	(bad)  
  406c12:	(bad)  
  406c13:	(bad)  
  406c14:	fmul   st(6),st
  406c16:	(bad)  
  406c17:	(bad)  
  406c18:	in     al,dx
  406c19:	(bad)  
  406c1a:	(bad)  
  406c1b:	(bad)  
  406c1c:	cld    
  406c1d:	(bad)  
  406c1e:	(bad)  
  406c1f:	dec    DWORD PTR [rbp+0x69]
  406c22:	outs   dx,BYTE PTR ds:[rsi]
  406c23:	addr32 ja 0x406c53
  406c26:	ja     0x406c5e
  406c28:	xor    al,0x20
  406c2a:	jb     0x406ca1
  406c2c:	outs   dx,BYTE PTR ds:[rsi]
  406c2d:	je     0x406c98
  406c2f:	ins    DWORD PTR es:[rdi],dx
  406c30:	and    BYTE PTR gs:[rsi+0x61],ah
  406c34:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  406c3c:	add    BYTE PTR [rax],al
  406c3e:	add    BYTE PTR [rax],al
  406c40:	rex.B
  406c41:	fs fs jb 0x406caa
  406c45:	jae    0x406cba
  406c47:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a88cbd
  406c4d:	jae    0x406c6f
  406c4f:	outs   dx,BYTE PTR ds:[rsi]
  406c50:	outs   dx,DWORD PTR ds:[rsi]
  406c51:	and    BYTE PTR [rcx+0x6d],ch
  406c54:	(bad)  
  406c55:	addr32 gs sub eax,0x74636573
  406c5c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406c63:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  406c6a:	jne    0x406cd1
  406c6c:	jb     0x406ce7
  406c6e:	and    BYTE PTR [rsi+0x61],ah
  406c71:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406c79:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a28ce3
  406c7f:	je     0x406ce6
  406c81:	jae    0x406ca3
  406c83:	(bad)  
  406c84:	je     0x406ca6
  406c86:	(bad)  
  406c87:	fs fs jb 0x406cf0
  406c8b:	jae    0x406d00
  406c8d:	and    BYTE PTR [rip+0x70],ah        # 0x406d03
  406c93:	add    BYTE PTR [rax],al
  406c95:	add    BYTE PTR [rax],al
  406c97:	add    BYTE PTR [rax],ah
  406c99:	and    BYTE PTR [rsi+0x69],dl
  406c9c:	jb     0x406d12
  406c9e:	jne    0x406d01
  406ca0:	ins    BYTE PTR es:[rdi],dx
  406ca1:	push   rax
  406ca2:	jb     0x406d13
  406ca4:	je     0x406d0b
  406ca6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  406caa:	(bad)  
  406cab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  406cb3:	push   0x646f6320
  406cb8:	and    BYTE PTR gs:[rax],dh
  406cbb:	js     0x406ce2
  406cbd:	js     0x406cbf
  406cbf:	add    BYTE PTR [rax],ah
  406cc1:	and    BYTE PTR [rbp+0x6e],dl
  406cc4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406cc8:	outs   dx,BYTE PTR ds:[rsi]
  406cc9:	and    BYTE PTR [rax+0x73],dh
  406ccc:	gs jne 0x406d33
  406ccf:	outs   dx,DWORD PTR ds:[rsi]
  406cd0:	and    BYTE PTR [rdx+0x65],dh
  406cd3:	ins    BYTE PTR es:[rdi],dx
  406cd4:	outs   dx,DWORD PTR ds:[rsi]
  406cd5:	movsxd esp,DWORD PTR [rcx+0x74]
  406cd8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  406cdf:	je     0x406d50
  406ce1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  406ce4:	and    BYTE PTR [rsi+0x65],dh
  406ce7:	jb     0x406d5c
  406ce9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  406cf0:	or     al,BYTE PTR [rax]
  406cf2:	add    BYTE PTR [rax],al
  406cf4:	add    BYTE PTR [rax],al
  406cf6:	add    BYTE PTR [rax],al
  406cf8:	and    BYTE PTR [rax],ah
  406cfa:	push   rbp
  406cfb:	outs   dx,BYTE PTR ds:[rsi]
  406cfc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406d00:	outs   dx,BYTE PTR ds:[rsi]
  406d01:	and    BYTE PTR [rax+0x73],dh
  406d04:	gs jne 0x406d6b
  406d07:	outs   dx,DWORD PTR ds:[rsi]
  406d08:	and    BYTE PTR [rdx+0x65],dh
  406d0b:	ins    BYTE PTR es:[rdi],dx
  406d0c:	outs   dx,DWORD PTR ds:[rsi]
  406d0d:	movsxd esp,DWORD PTR [rcx+0x74]
  406d10:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  406d17:	and    BYTE PTR [rbx+0x69],dh
  406d1a:	jp     0x406d81
  406d1c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a9b86
	...
  406d2e:	add    BYTE PTR [rax],al
  406d30:	cs jo  0x406d97
  406d33:	(bad)  
  406d34:	je     0x406d97
	...
  406d3e:	add    BYTE PTR [rax],al
  406d40:	rex push rax
  406d42:	add    BYTE PTR [rax],al
	...
  406d4d:	add    BYTE PTR [rax],al
  406d4f:	add    BYTE PTR [rax+0x50],dl
  406d52:	add    BYTE PTR [rax],al
	...
  406d5d:	add    BYTE PTR [rax],al
  406d5f:	add    al,dl
  406d61:	rex.WRXB
  406d62:	add    BYTE PTR [rax],al
	...
  406d6d:	add    BYTE PTR [rax],al
  406d6f:	add    al,al
  406d71:	jb     0x406db3
	...
  406d7f:	add    al,al
  406d81:	jb     0x406dc3
	...
  406d8f:	add    al,dl
  406d91:	push   0x40
	...
  406d9f:	add    BYTE PTR [rax],al
  406da1:	add    BYTE PTR [rax+0x0],al
	...
  406db0:	ins    BYTE PTR es:[rdi],dx
  406db1:	mov    ah,0x40
	...
  406dbf:	add    BYTE PTR [rsp+rsi*4+0x40],dl
	...
  406dce:	add    BYTE PTR [rax],al
  406dd0:	lods   al,BYTE PTR ds:[rsi]
  406dd1:	mov    ah,0x40
	...
  406ddf:	add    ah,al
  406de1:	mov    ah,0x40
	...
  406def:	add    al,al
  406df1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406df2:	add    BYTE PTR [rax],al
	...
  406dfd:	add    BYTE PTR [rax],al
  406dff:	add    BYTE PTR [rax],ch
  406e01:	stos   BYTE PTR es:[rdi],al
  406e02:	add    BYTE PTR [rax],al
	...
  406e0d:	add    BYTE PTR [rax],al
  406e0f:	add    BYTE PTR [rax],ah
  406e11:	stos   BYTE PTR es:[rdi],al
  406e12:	add    BYTE PTR [rax],al
	...
  406e1d:	add    BYTE PTR [rax],al
  406e1f:	add    BYTE PTR [rax],dl
  406e21:	stos   BYTE PTR es:[rdi],al
  406e22:	add    BYTE PTR [rax],al
	...
  406e2d:	add    BYTE PTR [rax],al
  406e2f:	add    BYTE PTR [rax],bl
  406e31:	stos   BYTE PTR es:[rdi],al
  406e32:	add    BYTE PTR [rax],al
	...
  406e41:	rol    BYTE PTR [rax+0x0],0x0
	...
  406e4d:	add    BYTE PTR [rax],al
  406e4f:	add    BYTE PTR [rax],dl
  406e51:	rol    BYTE PTR [rax+0x0],0x0
	...
  406e5d:	add    BYTE PTR [rax],al
  406e5f:	add    BYTE PTR [rax],bl
  406e61:	rol    BYTE PTR [rax+0x0],0x0
	...
  406e6d:	add    BYTE PTR [rax],al
  406e6f:	add    BYTE PTR [rax],dh
  406e71:	rol    BYTE PTR [rax+0x0],0x0
	...
  406e7d:	add    BYTE PTR [rax],al
  406e7f:	add    BYTE PTR [rax-0x60],dl
  406e82:	add    BYTE PTR [rax],al
	...
  406e8d:	add    BYTE PTR [rax],al
  406e8f:	add    BYTE PTR [rax+0x40a6],dl
	...
  406e9d:	add    BYTE PTR [rax],al
  406e9f:	add    al,dl
  406ea1:	rex.X
  406ea2:	add    BYTE PTR [rax],al
	...
  406ead:	add    BYTE PTR [rax],al
  406eaf:	add    BYTE PTR [rax],ah
  406eb1:	cmp    al,BYTE PTR [rax+0x0]
	...
  406ec0:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406ec2:	add    BYTE PTR [rax],al
	...
  406ecd:	add    BYTE PTR [rax],al
  406ecf:	add    BYTE PTR [rax-0x5a],dh
  406ed2:	add    BYTE PTR [rax],al
	...
  406edd:	add    BYTE PTR [rax],al
  406edf:	add    BYTE PTR [rax-0x60],ah
  406ee2:	add    BYTE PTR [rax],al
	...
  406eed:	add    BYTE PTR [rax],al
  406eef:	add    BYTE PTR [rax-0x5a],bl
  406ef2:	add    BYTE PTR [rax],al
	...
  406efd:	add    BYTE PTR [rax],al
  406eff:	add    BYTE PTR [rsi+riz*4+0x40],dl
	...
  406f0f:	add    BYTE PTR [rax-0x5a],dl
  406f12:	add    BYTE PTR [rax],al
	...
  406f1d:	add    BYTE PTR [rax],al
  406f1f:	add    BYTE PTR [rdi+0x43],al
  406f22:	rex.XB cmp spl,BYTE PTR [r8]
  406f25:	sub    BYTE PTR [rdi+0x4e],al
  406f28:	push   rbp
  406f29:	sub    DWORD PTR [rax],esp
  406f2b:	xor    al,0x2e
  406f2d:	cmp    DWORD PTR [rsi],ebp
  406f2f:	xor    al,0x0
	...
  406f3d:	add    BYTE PTR [rax],al
  406f3f:	add    BYTE PTR [rdi+0x43],al
  406f42:	rex.XB cmp spl,BYTE PTR [r8]
  406f45:	sub    BYTE PTR [rdi+0x4e],al
  406f48:	push   rbp
  406f49:	sub    DWORD PTR [rax],esp
  406f4b:	xor    al,0x2e
  406f4d:	cmp    DWORD PTR [rsi],ebp
  406f4f:	xor    al,0x0
	...
  406f5d:	add    BYTE PTR [rax],al
  406f5f:	add    BYTE PTR [rdi+0x43],al
  406f62:	rex.XB cmp spl,BYTE PTR [r8]
  406f65:	sub    BYTE PTR [rdi+0x4e],al
  406f68:	push   rbp
  406f69:	sub    DWORD PTR [rax],esp
  406f6b:	xor    al,0x2e
  406f6d:	cmp    DWORD PTR [rsi],ebp
  406f6f:	xor    al,0x0
	...
  406f7d:	add    BYTE PTR [rax],al
  406f7f:	add    BYTE PTR [rdi+0x43],al
  406f82:	rex.XB cmp spl,BYTE PTR [r8]
  406f85:	sub    BYTE PTR [rdi+0x4e],al
  406f88:	push   rbp
  406f89:	sub    DWORD PTR [rax],esp
  406f8b:	xor    al,0x2e
  406f8d:	cmp    DWORD PTR [rsi],ebp
  406f8f:	xor    al,0x0
	...
  406f9d:	add    BYTE PTR [rax],al
  406f9f:	add    BYTE PTR [rdi+0x43],al
  406fa2:	rex.XB cmp spl,BYTE PTR [r8]
  406fa5:	sub    BYTE PTR [rdi+0x4e],al
  406fa8:	push   rbp
  406fa9:	sub    DWORD PTR [rax],esp
  406fab:	xor    al,0x2e
  406fad:	cmp    DWORD PTR [rsi],ebp
  406faf:	xor    al,0x0
	...
  406fbd:	add    BYTE PTR [rax],al
  406fbf:	add    BYTE PTR [rdi+0x43],al
  406fc2:	rex.XB cmp spl,BYTE PTR [r8]
  406fc5:	sub    BYTE PTR [rdi+0x4e],al
  406fc8:	push   rbp
  406fc9:	sub    DWORD PTR [rax],esp
  406fcb:	xor    al,0x2e
  406fcd:	cmp    DWORD PTR [rsi],ebp
  406fcf:	xor    al,0x0
	...
  406fdd:	add    BYTE PTR [rax],al
  406fdf:	add    BYTE PTR [rdi+0x43],al
  406fe2:	rex.XB cmp spl,BYTE PTR [r8]
  406fe5:	sub    BYTE PTR [rdi+0x4e],al
  406fe8:	push   rbp
  406fe9:	sub    DWORD PTR [rax],esp
  406feb:	xor    al,0x2e
  406fed:	cmp    DWORD PTR [rsi],ebp
  406fef:	xor    al,0x0
	...
  406ffd:	add    BYTE PTR [rax],al
  406fff:	add    BYTE PTR [rdi+0x43],al
  407002:	rex.XB cmp spl,BYTE PTR [r8]
  407005:	sub    BYTE PTR [rdi+0x4e],al
  407008:	push   rbp
  407009:	sub    DWORD PTR [rax],esp
  40700b:	xor    al,0x2e
  40700d:	cmp    DWORD PTR [rsi],ebp
  40700f:	xor    al,0x0
	...
  40701d:	add    BYTE PTR [rax],al
  40701f:	add    BYTE PTR [rdi+0x43],al
  407022:	rex.XB cmp spl,BYTE PTR [r8]
  407025:	sub    BYTE PTR [rdi+0x4e],al
  407028:	push   rbp
  407029:	sub    DWORD PTR [rax],esp
  40702b:	xor    al,0x2e
  40702d:	cmp    DWORD PTR [rsi],ebp
  40702f:	xor    al,0x0
	...
  40703d:	add    BYTE PTR [rax],al
  40703f:	add    BYTE PTR [rdi+0x43],al
  407042:	rex.XB cmp spl,BYTE PTR [r8]
  407045:	sub    BYTE PTR [rdi+0x4e],al
  407048:	push   rbp
  407049:	sub    DWORD PTR [rax],esp
  40704b:	xor    al,0x2e
  40704d:	cmp    DWORD PTR [rsi],ebp
  40704f:	xor    al,0x0
	...
  40705d:	add    BYTE PTR [rax],al
  40705f:	add    BYTE PTR [rdi+0x43],al
  407062:	rex.XB cmp spl,BYTE PTR [r8]
  407065:	sub    BYTE PTR [rdi+0x4e],al
  407068:	push   rbp
  407069:	sub    DWORD PTR [rax],esp
  40706b:	xor    al,0x2e
  40706d:	cmp    DWORD PTR [rsi],ebp
  40706f:	xor    al,0x0
	...
  40707d:	add    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rdi+0x43],al
  407082:	rex.XB cmp spl,BYTE PTR [r8]
  407085:	sub    BYTE PTR [rdi+0x4e],al
  407088:	push   rbp
  407089:	sub    DWORD PTR [rax],esp
  40708b:	xor    al,0x2e
  40708d:	cmp    DWORD PTR [rsi],ebp
  40708f:	xor    al,0x0
	...
  40709d:	add    BYTE PTR [rax],al
  40709f:	add    BYTE PTR [rdi+0x43],al
  4070a2:	rex.XB cmp spl,BYTE PTR [r8]
  4070a5:	sub    BYTE PTR [rdi+0x4e],al
  4070a8:	push   rbp
  4070a9:	sub    DWORD PTR [rax],esp
  4070ab:	xor    al,0x2e
  4070ad:	cmp    DWORD PTR [rsi],ebp
  4070af:	xor    al,0x0
	...
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    BYTE PTR [rdi+0x43],al
  4070c2:	rex.XB cmp spl,BYTE PTR [r8]
  4070c5:	sub    BYTE PTR [rdi+0x4e],al
  4070c8:	push   rbp
  4070c9:	sub    DWORD PTR [rax],esp
  4070cb:	xor    al,0x2e
  4070cd:	cmp    DWORD PTR [rsi],ebp
  4070cf:	xor    al,0x0
	...
  4070dd:	add    BYTE PTR [rax],al
  4070df:	add    BYTE PTR [rdi+0x43],al
  4070e2:	rex.XB cmp spl,BYTE PTR [r8]
  4070e5:	sub    BYTE PTR [rdi+0x4e],al
  4070e8:	push   rbp
  4070e9:	sub    DWORD PTR [rax],esp
  4070eb:	xor    al,0x2e
  4070ed:	cmp    DWORD PTR [rsi],ebp
  4070ef:	xor    al,0x0
	...
  4070fd:	add    BYTE PTR [rax],al
  4070ff:	add    BYTE PTR [rdi+0x43],al
  407102:	rex.XB cmp spl,BYTE PTR [r8]
  407105:	sub    BYTE PTR [rdi+0x4e],al
  407108:	push   rbp
  407109:	sub    DWORD PTR [rax],esp
  40710b:	xor    al,0x2e
  40710d:	cmp    DWORD PTR [rsi],ebp
  40710f:	xor    al,0x0
	...
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rdi+0x43],al
  407122:	rex.XB cmp spl,BYTE PTR [r8]
  407125:	sub    BYTE PTR [rdi+0x4e],al
  407128:	push   rbp
  407129:	sub    DWORD PTR [rax],esp
  40712b:	xor    al,0x2e
  40712d:	cmp    DWORD PTR [rsi],ebp
  40712f:	xor    al,0x0
	...
  40713d:	add    BYTE PTR [rax],al
  40713f:	add    BYTE PTR [rdi+0x43],al
  407142:	rex.XB cmp spl,BYTE PTR [r8]
  407145:	sub    BYTE PTR [rdi+0x4e],al
  407148:	push   rbp
  407149:	sub    DWORD PTR [rax],esp
  40714b:	xor    al,0x2e
  40714d:	cmp    DWORD PTR [rsi],ebp
  40714f:	xor    al,0x0
	...
  40715d:	add    BYTE PTR [rax],al
  40715f:	add    BYTE PTR [rdi+0x43],al
  407162:	rex.XB cmp spl,BYTE PTR [r8]
  407165:	sub    BYTE PTR [rdi+0x4e],al
  407168:	push   rbp
  407169:	sub    DWORD PTR [rax],esp
  40716b:	xor    al,0x2e
  40716d:	cmp    DWORD PTR [rsi],ebp
  40716f:	xor    al,0x0
	...
  40717d:	add    BYTE PTR [rax],al
  40717f:	add    BYTE PTR [rdi+0x43],al
  407182:	rex.XB cmp spl,BYTE PTR [r8]
  407185:	sub    BYTE PTR [rdi+0x4e],al
  407188:	push   rbp
  407189:	sub    DWORD PTR [rax],esp
  40718b:	xor    al,0x2e
  40718d:	cmp    DWORD PTR [rsi],ebp
  40718f:	xor    al,0x0
	...
  40719d:	add    BYTE PTR [rax],al
  40719f:	add    BYTE PTR [rdi+0x43],al
  4071a2:	rex.XB cmp spl,BYTE PTR [r8]
  4071a5:	sub    BYTE PTR [rdi+0x4e],al
  4071a8:	push   rbp
  4071a9:	sub    DWORD PTR [rax],esp
  4071ab:	xor    al,0x2e
  4071ad:	cmp    DWORD PTR [rsi],ebp
  4071af:	xor    al,0x0
	...
  4071bd:	add    BYTE PTR [rax],al
  4071bf:	add    BYTE PTR [rdi+0x43],al
  4071c2:	rex.XB cmp spl,BYTE PTR [r8]
  4071c5:	sub    BYTE PTR [rdi+0x4e],al
  4071c8:	push   rbp
  4071c9:	sub    DWORD PTR [rax],esp
  4071cb:	xor    al,0x2e
  4071cd:	cmp    DWORD PTR [rsi],ebp
  4071cf:	xor    al,0x0
	...
  4071dd:	add    BYTE PTR [rax],al
  4071df:	add    BYTE PTR [rdi+0x43],al
  4071e2:	rex.XB cmp spl,BYTE PTR [r8]
  4071e5:	sub    BYTE PTR [rdi+0x4e],al
  4071e8:	push   rbp
  4071e9:	sub    DWORD PTR [rax],esp
  4071eb:	xor    al,0x2e
  4071ed:	cmp    DWORD PTR [rsi],ebp
  4071ef:	xor    al,0x0
	...
  4071fd:	add    BYTE PTR [rax],al
  4071ff:	add    BYTE PTR [rdi+0x43],al
  407202:	rex.XB cmp spl,BYTE PTR [r8]
  407205:	sub    BYTE PTR [rdi+0x4e],al
  407208:	push   rbp
  407209:	sub    DWORD PTR [rax],esp
  40720b:	xor    al,0x2e
  40720d:	cmp    DWORD PTR [rsi],ebp
  40720f:	xor    al,0x0
	...
  40721d:	add    BYTE PTR [rax],al
  40721f:	add    BYTE PTR [rdi+0x43],al
  407222:	rex.XB cmp spl,BYTE PTR [r8]
  407225:	sub    BYTE PTR [rdi+0x4e],al
  407228:	push   rbp
  407229:	sub    DWORD PTR [rax],esp
  40722b:	xor    al,0x2e
  40722d:	cmp    DWORD PTR [rsi],ebp
  40722f:	xor    al,0x0
	...
  40723d:	add    BYTE PTR [rax],al
  40723f:	add    BYTE PTR [rdi+0x43],al
  407242:	rex.XB cmp spl,BYTE PTR [r8]
  407245:	sub    BYTE PTR [rdi+0x4e],al
  407248:	push   rbp
  407249:	sub    DWORD PTR [rax],esp
  40724b:	xor    al,0x2e
  40724d:	cmp    DWORD PTR [rsi],ebp
  40724f:	xor    al,0x0
	...
  40725d:	add    BYTE PTR [rax],al
  40725f:	add    BYTE PTR [rdi+0x43],al
  407262:	rex.XB cmp spl,BYTE PTR [r8]
  407265:	sub    BYTE PTR [rdi+0x4e],al
  407268:	push   rbp
  407269:	sub    DWORD PTR [rax],esp
  40726b:	xor    al,0x2e
  40726d:	cmp    DWORD PTR [rsi],ebp
  40726f:	xor    al,0x0
	...
  40727d:	add    BYTE PTR [rax],al
  40727f:	add    BYTE PTR [rdi+0x43],al
  407282:	rex.XB cmp spl,BYTE PTR [r8]
  407285:	sub    BYTE PTR [rdi+0x4e],al
  407288:	push   rbp
  407289:	sub    DWORD PTR [rax],esp
  40728b:	xor    al,0x2e
  40728d:	cmp    DWORD PTR [rsi],ebp
  40728f:	xor    al,0x0
	...
  40729d:	add    BYTE PTR [rax],al
  40729f:	add    BYTE PTR [rdi+0x43],al
  4072a2:	rex.XB cmp spl,BYTE PTR [r8]
  4072a5:	sub    BYTE PTR [rdi+0x4e],al
  4072a8:	push   rbp
  4072a9:	sub    DWORD PTR [rax],esp
  4072ab:	xor    al,0x2e
  4072ad:	cmp    DWORD PTR [rsi],ebp
  4072af:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000408000 <.pdata>:
  408000:	add    BYTE PTR [rax],dl
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rax],edx
  408006:	add    BYTE PTR [rax],al
  408008:	add    BYTE PTR [rax+0x10100000],dl
  40800e:	add    BYTE PTR [rax],al
  408010:	push   rcx
  408011:	adc    DWORD PTR [rax],eax
  408013:	add    BYTE PTR [rax+rdx*4],al
  408016:	add    BYTE PTR [rax],al
  408018:	(bad)  
  408019:	adc    DWORD PTR [rax],eax
  40801b:	add    BYTE PTR [rsi+0xc000011],ch
  408021:	nop
  408022:	add    BYTE PTR [rax],al
  408024:	mov    al,0x11
  408026:	add    BYTE PTR [rax],al
  408028:	(bad)  
  408029:	adc    al,0x0
  40802b:	add    BYTE PTR [rax+rdx*4],dl
  40802e:	add    BYTE PTR [rax],al
  408030:	rcl    BYTE PTR [rax+rax*1],1
  408033:	add    dl,dh
  408035:	adc    al,0x0
  408037:	add    BYTE PTR [rax],ch
  408039:	nop
  40803a:	add    BYTE PTR [rax],al
  40803c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15628042
  408042:	add    BYTE PTR [rax],al
  408044:	rex.W nop
  408046:	add    BYTE PTR [rax],al
  408048:	xor    BYTE PTR [rip+0x157e0000],dl        # 0x15be804e
  40804e:	add    BYTE PTR [rax],al
  408050:	push   0xffffffff80000090
  408055:	adc    eax,0x15e80000
  40805a:	add    BYTE PTR [rax],al
  40805c:	je     0x407fee
  40805e:	add    BYTE PTR [rax],al
  408060:	lock adc eax,0x223f0000
  408066:	add    BYTE PTR [rax],al
  408068:	js     0x407ffa
  40806a:	add    BYTE PTR [rax],al
  40806c:	and    al,BYTE PTR [rax]
  40806f:	add    BYTE PTR [rbx-0x6fffffde],al
  408075:	nop
  408076:	add    BYTE PTR [rax],al
  408078:	nop
  408079:	and    al,BYTE PTR [rax]
  40807b:	add    BYTE PTR [rax],bh
  40807d:	and    eax,DWORD PTR [rax]
  40807f:	add    BYTE PTR [rax+rdx*4+0x23400000],bl
  408086:	add    BYTE PTR [rax],al
  408088:	adc    esp,DWORD PTR [rax+rax*1]
  40808b:	add    BYTE PTR [rax+0x20000090],ch
  408091:	and    al,0x0
  408093:	add    BYTE PTR [rsp+0x0],bl
  408097:	add    BYTE PTR [rax+rdx*4+0x24600000],dh
  40809e:	add    BYTE PTR [rax],al
  4080a0:	rex.RX sub r8b,BYTE PTR [rax]
  4080a3:	add    BYTE PTR [rax+0x50000090],bh
  4080a9:	sub    al,BYTE PTR [rax]
  4080ab:	add    BYTE PTR [rcx],ah
  4080ad:	sub    eax,DWORD PTR [rax]
  4080af:	add    al,dl
  4080b1:	nop
  4080b2:	add    BYTE PTR [rax],al
  4080b4:	xor    BYTE PTR [rbx],ch
  4080b6:	add    BYTE PTR [rax],al
  4080b8:	sub    DWORD PTR [rbx],0x90d80000
  4080be:	add    BYTE PTR [rax],al
  4080c0:	nop
  4080c1:	sub    eax,DWORD PTR [rax]
  4080c3:	add    dl,al
  4080c5:	sub    eax,DWORD PTR [rax]
  4080c7:	add    al,ah
  4080c9:	nop
  4080ca:	add    BYTE PTR [rax],al
  4080cc:	shr    BYTE PTR [rbx],1
  4080ce:	add    BYTE PTR [rax],al
  4080d0:	adc    ch,BYTE PTR [rax+rax*1]
  4080d3:	add    al,ch
  4080d5:	nop
  4080d6:	add    BYTE PTR [rax],al
  4080d8:	and    BYTE PTR [rax+rax*1],ch
  4080db:	add    BYTE PTR [rsi+0x2c],al
  4080de:	add    BYTE PTR [rax],al
  4080e0:	lock nop
  4080e2:	add    BYTE PTR [rax],al
  4080e4:	push   rax
  4080e5:	sub    al,0x0
  4080e7:	add    BYTE PTR [rsp+rbp*1-0x6f080000],ah
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	mov    al,0x2c
  4080f2:	add    BYTE PTR [rax],al
  4080f4:	xor    BYTE PTR gs:[rax],al
  4080f7:	add    BYTE PTR [rax],al
  4080f9:	xchg   ecx,eax
  4080fa:	add    BYTE PTR [rax],al
  4080fc:	jo     0x40812e
  4080fe:	add    BYTE PTR [rax],al
  408100:	(bad)  
  408101:	xor    BYTE PTR [rax],al
  408103:	add    BYTE PTR [rcx+rdx*4],cl
  408106:	add    BYTE PTR [rax],al
  408108:	shl    BYTE PTR [rax],1
  40810a:	add    BYTE PTR [rax],al
  40810c:	xor    QWORD PTR [r8],rax
  40810f:	add    BYTE PTR [rax],bl
  408111:	xchg   ecx,eax
  408112:	add    BYTE PTR [rax],al
  408114:	push   rax
  408115:	xor    DWORD PTR [rax],eax
  408117:	add    dl,dl
  408119:	xor    al,0x0
  40811b:	add    BYTE PTR [rcx+rdx*4],ah
  40811e:	add    BYTE PTR [rax],al
  408120:	xor    BYTE PTR [rip+0x36270000],0x0        # 0x36678127
  408127:	add    BYTE PTR [rcx+rdx*4+0x0],cl
  40812b:	add    BYTE PTR [rax],dh
  40812d:	add    BYTE PTR ss:[rax],al
  408130:	rex.WB
  408131:	add    BYTE PTR ss:[rax],al
  408134:	push   rsp
  408135:	xchg   ecx,eax
  408136:	add    BYTE PTR [rax],al
  408138:	push   rax
  408139:	add    BYTE PTR ss:[rax],al
  40813c:	test   DWORD PTR [rsi],esi
  40813e:	add    BYTE PTR [rax],al
  408140:	pop    rsp
  408141:	xchg   ecx,eax
  408142:	add    BYTE PTR [rax],al
  408144:	nop
  408145:	add    BYTE PTR ss:[rax],al
  408148:	in     eax,0x36
  40814a:	add    BYTE PTR [rax],al
  40814c:	fs xchg ecx,eax
  40814e:	add    BYTE PTR [rax],al
  408150:	lock add BYTE PTR ss:[rax],al
  408154:	or     al,0x37
  408156:	add    BYTE PTR [rax],al
  408158:	jo     0x4080eb
  40815a:	add    BYTE PTR [rax],al
  40815c:	adc    BYTE PTR [rdi],dh
  40815e:	add    BYTE PTR [rax],al
  408160:	sbb    dh,BYTE PTR [rdi]
  408162:	add    BYTE PTR [rax],al
  408164:	je     0x4080f7
  408166:	add    BYTE PTR [rax],al
  408168:	and    BYTE PTR [rdi],dh
  40816a:	add    BYTE PTR [rax],al
  40816c:	and    esi,DWORD PTR [rdi]
  40816e:	add    BYTE PTR [rax],al
  408170:	js     0x408103
  408172:	add    BYTE PTR [rax],al
  408174:	xor    BYTE PTR [rdi],dh
  408176:	add    BYTE PTR [rax],al
  408178:	(bad)  
  408179:	cmp    BYTE PTR [rax],al
  40817b:	add    BYTE PTR [rcx+rdx*4+0x0],bh
  40817f:	add    BYTE PTR [rax],dl
  408181:	cmp    BYTE PTR [rax],al
  408183:	add    BYTE PTR [rbx],cl
  408185:	cmp    DWORD PTR [rax],eax
  408187:	add    BYTE PTR [rcx+rdx*4+0x39100000],cl
  40818e:	add    BYTE PTR [rax],al
  408190:	(bad)  
  408191:	cmp    DWORD PTR [rax],eax
  408193:	add    BYTE PTR [rcx+rdx*4+0x39400000],bl
  40819a:	add    BYTE PTR [rax],al
  40819c:	test   eax,0xa4000039
  4081a1:	xchg   ecx,eax
  4081a2:	add    BYTE PTR [rax],al
  4081a4:	mov    al,0x39
  4081a6:	add    BYTE PTR [rax],al
  4081a8:	mov    bl,0x39
  4081aa:	add    BYTE PTR [rax],al
  4081ac:	mov    al,0x91
  4081ae:	add    BYTE PTR [rax],al
  4081b0:	sar    BYTE PTR [rcx],0x0
  4081b3:	add    BYTE PTR [rcx],al
  4081b5:	cmp    al,BYTE PTR [rax]
  4081b7:	add    BYTE PTR [rcx+rdx*4+0x3a100000],dh
  4081be:	add    BYTE PTR [rax],al
  4081c0:	sbb    al,0x3a
  4081c2:	add    BYTE PTR [rax],al
  4081c4:	mov    esp,0x20000091
  4081c9:	cmp    al,BYTE PTR [rax]
  4081cb:	add    BYTE PTR [rbx+rdi*1],bl
  4081ce:	add    BYTE PTR [rax],al
  4081d0:	rcl    BYTE PTR [rcx+0x3b200000],0x0
  4081d7:	add    BYTE PTR [rbx],ah
  4081d9:	cmp    eax,DWORD PTR [rax]
  4081db:	add    al,bl
  4081dd:	xchg   ecx,eax
  4081de:	add    BYTE PTR [rax],al
  4081e0:	xor    BYTE PTR [rbx],bh
  4081e2:	add    BYTE PTR [rax],al
  4081e4:	xor    al,0x3b
  4081e6:	add    BYTE PTR [rax],al
  4081e8:	fcom   QWORD PTR [rcx+0x3b400000]
  4081ee:	add    BYTE PTR [rax],al
  4081f0:	cmp    r8d,DWORD PTR [rax]
  4081f3:	add    al,ah
  4081f5:	xchg   ecx,eax
  4081f6:	add    BYTE PTR [rax],al
  4081f8:	push   rax
  4081f9:	cmp    eax,DWORD PTR [rax]
  4081fb:	add    BYTE PTR [rcx-0x1bffffc5],dh
  408201:	xchg   ecx,eax
  408202:	add    BYTE PTR [rax],al
  408204:	sar    BYTE PTR [rbx],0x0
  408207:	add    BYTE PTR [rdx],ah
  408209:	cmp    eax,0x91f00000
  40820e:	add    BYTE PTR [rax],al
  408210:	xor    BYTE PTR [rip+0x40290000],bh        # 0x40698216
  408216:	add    BYTE PTR [rax],al
  408218:	add    al,0x92
  40821a:	add    BYTE PTR [rax],al
  40821c:	xor    BYTE PTR [rax+0x0],al
  40821f:	add    dh,dl
  408221:	add    BYTE PTR [r8],al
  408224:	sbb    al,0x92
  408226:	add    BYTE PTR [rax],al
  408228:	loopne 0x40826b
  40822a:	add    BYTE PTR [rax],al
  40822c:	int3   
  40822d:	rex.X add BYTE PTR [rax],al
  408230:	and    al,0x92
  408232:	add    BYTE PTR [rax],al
  408234:	rol    BYTE PTR [rdx+0x0],1
  408237:	add    BYTE PTR [rax+0x34000044],cl
  40823d:	xchg   edx,eax
  40823e:	add    BYTE PTR [rax],al
  408240:	nop
  408241:	add    BYTE PTR [rax],r8b
  408244:	std    
  408245:	add    BYTE PTR [rax],r8b
  408248:	cmp    al,0x92
  40824a:	add    BYTE PTR [rax],al
  40824c:	add    BYTE PTR [rbp+0x0],al
  40824f:	add    BYTE PTR [rdi+0x45],bh
  408252:	add    BYTE PTR [rax],al
  408254:	rex.WR xchg rdx,rax
  408256:	add    BYTE PTR [rax],al
  408258:	add    BYTE PTR [rbp+0x0],0x0
  40825c:	(bad)  
  40825d:	rex.RX add BYTE PTR [rax],r8b
  408260:	pop    rax
  408261:	xchg   edx,eax
  408262:	add    BYTE PTR [rax],al
  408264:	and    BYTE PTR [rsi+0x0],al
  408267:	add    dl,bh
  408269:	rex.RX add BYTE PTR [rax],r8b
  40826c:	(bad)  
  40826d:	xchg   edx,eax
  40826e:	add    BYTE PTR [rax],al
  408270:	add    BYTE PTR [rdi+0x0],al
  408273:	add    BYTE PTR [rdi],bl
  408275:	rex.RXB add BYTE PTR [r8],r8b
  408278:	push   0x20000092
  40827d:	rex.RXB add BYTE PTR [r8],r8b
  408280:	xor    al,BYTE PTR [rdi+0x0]
  408283:	add    BYTE PTR [rdx+rdx*4+0x0],ch
  408287:	add    BYTE PTR [rax+0x47],al
  40828a:	add    BYTE PTR [rax],al
  40828c:	test   DWORD PTR [rdi+0x0],eax
  40828f:	add    BYTE PTR [rax-0x6e],dh
  408292:	add    BYTE PTR [rax],al
  408294:	nop
  408295:	rex.RXB add BYTE PTR [r8],r8b
  408298:	rex.W add BYTE PTR cs:[rax],al
  40829c:	je     0x408230
  40829e:	add    BYTE PTR [rax],al
  4082a0:	xor    BYTE PTR [rax+0x0],cl
  4082a3:	add    BYTE PTR [rbx+0x48],dh
  4082a6:	add    BYTE PTR [rax],al
  4082a8:	adc    BYTE PTR [rdx+0x48800000],0x0
  4082af:	add    BYTE PTR [rbx-0x73ffffb8],bh
  4082b5:	xchg   edx,eax
  4082b6:	add    BYTE PTR [rax],al
  4082b8:	ror    BYTE PTR [rax+0x0],0x0
  4082bc:	rex.WRX
  4082bd:	rex.WB add BYTE PTR [r8],al
  4082c0:	xchg   esp,eax
  4082c1:	xchg   edx,eax
  4082c2:	add    BYTE PTR [rax],al
  4082c4:	push   rax
  4082c5:	rex.WB add BYTE PTR [r8],al
  4082c8:	mov    BYTE PTR [rcx+0x0],cl
  4082cb:	add    BYTE PTR [rax-0x6fffff6e],ah
  4082d1:	rex.WB add BYTE PTR [r8],al
  4082d4:	in     eax,0x49
  4082d6:	add    BYTE PTR [rax],al
  4082d8:	lods   al,BYTE PTR ds:[rsi]
  4082d9:	xchg   edx,eax
  4082da:	add    BYTE PTR [rax],al
  4082dc:	lock rex.WB add BYTE PTR [r8],al
  4082e0:	sahf   
  4082e1:	rex.WX add BYTE PTR [rax],al
  4082e4:	mov    eax,0xb0000092
  4082e9:	rex.WXB add BYTE PTR [r8],al
  4082ec:	mov    eax,0xc800004b
  4082f1:	xchg   edx,eax
  4082f2:	add    BYTE PTR [rax],al
  4082f4:	ror    BYTE PTR [rbx+0x0],0x0
  4082f8:	retf   
  4082f9:	rex.WXB add BYTE PTR [r8],al
  4082fc:	int3   
  4082fd:	xchg   edx,eax
  4082fe:	add    BYTE PTR [rax],al
  408300:	nop
  408301:	rex.WR add BYTE PTR [rax],r8b
  408304:	ror    BYTE PTR [rdi+0x0],1
  408307:	add    BYTE PTR [rcx+rdx*4],bh
	...

Disassembly of section .xdata:

0000000000409000 <.xdata>:
  409000:	add    DWORD PTR [rax],eax
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rcx+rax*1],eax
  409007:	add    BYTE PTR [rdx+rax*2],al
  40900a:	add    BYTE PTR [rax],al
  40900c:	add    DWORD PTR [rcx+rax*1],eax
  40900f:	add    BYTE PTR [rdx+riz*2],al
  409012:	add    BYTE PTR [rax],al
  409014:	add    DWORD PTR [rdi],ecx
  409016:	or     BYTE PTR [rax],al
  409018:	lgdt   [rbx]
  40901b:	add    BYTE PTR [rax],cl
  40901d:	xor    BYTE PTR [rdi],al
  40901f:	(bad)  
  409020:	(bad)  
  409021:	jo     0x409028
  409023:	push   rax
  409024:	add    al,0xc0
  409026:	add    dl,al
  409028:	or     DWORD PTR [rcx+rax*1],eax
  40902b:	add    BYTE PTR [rdx+rax*2],al
  40902e:	add    BYTE PTR [rax],al
  409030:	test   al,0x4b
  409032:	add    BYTE PTR [rax],al
  409034:	add    DWORD PTR [rax],eax
  409036:	add    BYTE PTR [rax],al
  409038:	(bad)  
  409039:	adc    al,0x0
  40903b:	add    ah,ch
  40903d:	adc    al,0x0
  40903f:	add    al,dl
  409041:	rex.X add BYTE PTR [rax],al
  409044:	in     al,dx
  409045:	adc    al,0x0
  409047:	add    BYTE PTR [rcx],cl
  409049:	add    al,0x1
  40904b:	add    BYTE PTR [rdx+rax*2],al
  40904e:	add    BYTE PTR [rax],al
  409050:	test   al,0x4b
  409052:	add    BYTE PTR [rax],al
  409054:	add    DWORD PTR [rax],eax
  409056:	add    BYTE PTR [rax],al
  409058:	add    al,0x15
  40905a:	add    BYTE PTR [rax],al
  40905c:	sbb    al,0x15
  40905e:	add    BYTE PTR [rax],al
  409060:	rol    BYTE PTR [rdx+0x0],1
  409063:	add    BYTE PTR [rdx*1+0x6010000],bl
  40906a:	add    eax,DWORD PTR [rax]
  40906c:	(bad)  
  40906d:	rex.X add sil,BYTE PTR [rax]
  409070:	add    DWORD PTR [rax+0x0],esp
  409073:	add    BYTE PTR [rcx],al
  409075:	add    BYTE PTR [rax],al
  409077:	add    BYTE PTR [rcx],al
  409079:	adc    ecx,DWORD PTR [rdx]
  40907b:	add    BYTE PTR [rbx],dl
  40907d:	add    DWORD PTR [rbx],ecx
  40907f:	add    DWORD PTR [rax+rsi*1],ecx
  409082:	or     esp,DWORD PTR [rax+0xa]
  409085:	jo     0x409090
  409087:	push   rax
  409088:	or     al,al
  40908a:	(bad)  
  40908b:	rol    BYTE PTR [rax+riz*8],1
  40908e:	add    dh,al
  409090:	add    DWORD PTR [rsi],eax
  409092:	add    eax,DWORD PTR [rax]
  409094:	(bad)  
  409095:	rex.X add sil,BYTE PTR [rax]
  409098:	add    DWORD PTR [rax+0x0],esp
  40909b:	add    BYTE PTR [rcx],al
  40909d:	(bad)  
  40909e:	add    eax,DWORD PTR [rax]
  4090a0:	(bad)  
  4090a1:	rex.X add sil,BYTE PTR [rax]
  4090a4:	add    DWORD PTR [rax+0x0],esp
  4090a7:	add    BYTE PTR [rcx],al
  4090a9:	(bad)  
  4090aa:	add    eax,DWORD PTR [rax]
  4090ac:	(bad)  
  4090ad:	rex.X add sil,BYTE PTR [rax]
  4090b0:	add    DWORD PTR [rax+0x0],esp
  4090b3:	add    BYTE PTR [rcx],al
  4090b5:	add    BYTE PTR [rax],al
  4090b7:	add    BYTE PTR [rcx],al
  4090b9:	adc    BYTE PTR [rcx],cl
  4090bb:	add    BYTE PTR [rax],dl
  4090bd:	rex.X or al,0x30
  4090c0:	or     esp,DWORD PTR [rax+0xa]
  4090c3:	jo     0x4090ce
  4090c5:	push   rax
  4090c6:	or     al,al
  4090c8:	(bad)  
  4090c9:	rol    BYTE PTR [rax+riz*8],1
  4090cc:	add    dh,al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324590d8
  4090d6:	add    DWORD PTR [rax],esi
  4090d8:	add    DWORD PTR [rcx+rax*1],eax
  4090db:	add    BYTE PTR [rdx+rax*2],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324590e8
  4090e6:	add    DWORD PTR [rax],esi
  4090e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324590f0
  4090ee:	add    DWORD PTR [rax],esi
  4090f0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324590f8
  4090f6:	add    DWORD PTR [rax],esi
  4090f8:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459100
  4090fe:	add    DWORD PTR [rax],esi
  409100:	add    DWORD PTR [rdi],eax
  409102:	add    al,0x0
  409104:	(bad)  
  409105:	xor    al,BYTE PTR [rbx]
  409107:	xor    BYTE PTR [rdx],al
  409109:	(bad)  
  40910a:	add    DWORD PTR [rax+0x1],esi
  40910d:	(bad)  
  40910e:	add    eax,DWORD PTR [rax]
  409110:	(bad)  
  409111:	rex.X add sil,BYTE PTR [rax]
  409114:	add    DWORD PTR [rax+0x0],esp
  409117:	add    BYTE PTR [rcx],al
  409119:	(bad)  
  40911a:	add    eax,DWORD PTR [rax]
  40911c:	(bad)  
  40911d:	(bad)  
  40911e:	add    dh,BYTE PTR [rax]
  409120:	add    DWORD PTR [rax+0x0],esp
  409123:	add    BYTE PTR [rcx],al
  409125:	adc    BYTE PTR [rcx],cl
  409127:	add    BYTE PTR [rax],dl
  409129:	(bad)  
  40912a:	or     al,0x30
  40912c:	or     esp,DWORD PTR [rax+0xa]
  40912f:	jo     0x40913a
  409131:	push   rax
  409132:	or     al,al
  409134:	(bad)  
  409135:	rol    BYTE PTR [rax+riz*8],1
  409138:	add    dh,al
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    DWORD PTR [rax],ecx
  40913e:	add    eax,0x4820800
  409143:	xor    BYTE PTR [rbx],al
  409145:	(bad)  
  409146:	add    dh,BYTE PTR [rax+0x1]
  409149:	push   rax
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52459154
  409152:	add    DWORD PTR [rax],esi
  409154:	add    DWORD PTR [rcx+rax*1],eax
  409157:	add    BYTE PTR [rdx+rax*2],al
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    DWORD PTR [rcx+rax*1],eax
  40915f:	add    BYTE PTR [rdx+rax*2],al
  409162:	add    BYTE PTR [rax],al
  409164:	add    DWORD PTR [rsi],eax
  409166:	add    eax,DWORD PTR [rax]
  409168:	(bad)  
  409169:	rex.X add sil,BYTE PTR [rax]
  40916c:	add    DWORD PTR [rax+0x0],esp
  40916f:	add    BYTE PTR [rcx],al
  409171:	add    BYTE PTR [rax],al
  409173:	add    BYTE PTR [rcx],al
  409175:	add    BYTE PTR [rax],al
  409177:	add    BYTE PTR [rcx],al
  409179:	add    BYTE PTR [rax],al
  40917b:	add    BYTE PTR [rcx],al
  40917d:	or     al,BYTE PTR [rsi]
  40917f:	add    BYTE PTR [rdx],cl
  409181:	jb     0x409189
  409183:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b095e9
  409189:	push   rax
  40918a:	add    al,al
  40918c:	add    DWORD PTR [rdx],ecx
  40918e:	add    eax,0x6d20a05
  409193:	add    eax,DWORD PTR [rbx]
  409195:	xor    BYTE PTR [rdx],al
  409197:	(bad)  
  409198:	add    DWORD PTR [rax+0x0],edx
  40919b:	add    BYTE PTR [rcx],al
  40919d:	add    al,0x1
  40919f:	add    BYTE PTR [rdx+rax*2],al
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    DWORD PTR [rsi],eax
  4091a6:	add    eax,DWORD PTR [rax]
  4091a8:	(bad)  
  4091a9:	rex.X add sil,BYTE PTR [rax]
  4091ac:	add    DWORD PTR [rax+0x0],esp
  4091af:	add    BYTE PTR [rcx],al
  4091b1:	add    BYTE PTR [rax],al
  4091b3:	add    BYTE PTR [rcx],al
  4091b5:	add    al,0x1
  4091b7:	add    BYTE PTR [rdx+riz*4],al
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    DWORD PTR [rax],eax
  4091be:	add    BYTE PTR [rax],al
  4091c0:	add    DWORD PTR [rsi],edx
  4091c2:	or     DWORD PTR [rax],eax
  4091c4:	(bad)  
  4091c5:	mov    BYTE PTR [rsi],al
  4091c7:	add    BYTE PTR [rax],dl
  4091c9:	js     0x4091d0
  4091cb:	add    BYTE PTR [rbx],cl
  4091cd:	push   0xffffffffe2060004
  4091d2:	add    dh,BYTE PTR [rax]
  4091d4:	add    DWORD PTR [rax+0x0],esp
  4091d7:	add    BYTE PTR [rcx],al
  4091d9:	add    BYTE PTR [rax],al
  4091db:	add    BYTE PTR [rcx],al
  4091dd:	add    BYTE PTR [rax],al
  4091df:	add    BYTE PTR [rcx],al
  4091e1:	add    BYTE PTR [rax],al
  4091e3:	add    BYTE PTR [rcx],al
  4091e5:	(bad)  
  4091e6:	add    eax,DWORD PTR [rax]
  4091e8:	(bad)  
  4091e9:	(bad)  
  4091eb:	xor    BYTE PTR [rcx],al
  4091ed:	(bad)  
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	add    DWORD PTR [rdi+rax*1],ecx
  4091f3:	add    BYTE PTR [rdx+riz*4],cl
  4091f6:	or     BYTE PTR [rax],dh
  4091f8:	(bad)  
  4091f9:	(bad)  
  4091fa:	(bad)  
  4091fb:	jo     0x409202
  4091fd:	push   rax
  4091fe:	add    al,0xc0
  409200:	add    dl,al
  409202:	add    BYTE PTR [rax],al
  409204:	add    DWORD PTR [rcx],edx
  409206:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e441d
  40920c:	or     dh,BYTE PTR [rax]
  40920e:	or     DWORD PTR [rax+0x8],esp
  409211:	jo     0x40921a
  409213:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22095ea
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    DWORD PTR [rcx+rax*1],eax
  40921f:	add    BYTE PTR [rdx+rax*2],al
  409222:	add    BYTE PTR [rax],al
  409224:	add    DWORD PTR [rdx],ecx
  409226:	(bad)  
  409227:	add    BYTE PTR [rdx],cl
  409229:	xor    al,BYTE PTR [rsi]
  40922b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b09691
  409231:	push   rax
  409232:	add    al,al
  409234:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245923c
  40923a:	add    DWORD PTR [rax],esi
  40923c:	add    DWORD PTR [rax],ecx
  40923e:	add    eax,0x4420800
  409243:	xor    BYTE PTR [rbx],al
  409245:	(bad)  
  409246:	add    dh,BYTE PTR [rax+0x1]
  409249:	push   rax
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    DWORD PTR [rdi],eax
  40924e:	add    al,0x0
  409250:	(bad)  
  409251:	xor    al,BYTE PTR [rbx]
  409253:	xor    BYTE PTR [rdx],al
  409255:	(bad)  
  409256:	add    DWORD PTR [rax+0x1],esi
  409259:	add    eax,0x32050002
  40925e:	add    DWORD PTR [rax],esi
  409260:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459268
  409266:	add    DWORD PTR [rax],esi
  409268:	add    DWORD PTR [rax],eax
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    DWORD PTR [rax],eax
  40926e:	add    BYTE PTR [rax],al
  409270:	add    DWORD PTR [rax],eax
  409272:	add    BYTE PTR [rax],al
  409274:	add    DWORD PTR [rdi],eax
  409276:	add    al,0x0
  409278:	(bad)  
  409279:	xor    al,BYTE PTR [rbx]
  40927b:	xor    BYTE PTR [rdx],al
  40927d:	(bad)  
  40927e:	add    DWORD PTR [rax+0x1],esi
  409281:	(bad)  
  409282:	add    eax,DWORD PTR [rax]
  409284:	(bad)  
  409285:	rex.X add sil,BYTE PTR [rax]
  409288:	add    DWORD PTR [rax+0x0],esp
  40928b:	add    BYTE PTR [rcx],al
  40928d:	add    eax,0x32050002
  409292:	add    DWORD PTR [rax],esi
  409294:	add    DWORD PTR [rdi],eax
  409296:	add    al,0x0
  409298:	(bad)  
  409299:	xor    al,BYTE PTR [rbx]
  40929b:	xor    BYTE PTR [rdx],al
  40929d:	(bad)  
  40929e:	add    DWORD PTR [rax+0x1],esi
  4092a1:	(bad)  
  4092a2:	add    eax,DWORD PTR [rax]
  4092a4:	(bad)  
  4092a5:	rex.X add sil,BYTE PTR [rax]
  4092a8:	add    DWORD PTR [rax+0x0],esp
  4092ab:	add    BYTE PTR [rcx],al
  4092ad:	(bad)  
  4092ae:	add    eax,DWORD PTR [rax]
  4092b0:	(bad)  
  4092b1:	rex.X add sil,BYTE PTR [rax]
  4092b4:	add    DWORD PTR [rax+0x0],esp
  4092b7:	add    BYTE PTR [rcx],al
  4092b9:	or     BYTE PTR [rip+0x4420800],al        # 0x4829abf
  4092bf:	xor    BYTE PTR [rbx],al
  4092c1:	(bad)  
  4092c2:	add    dh,BYTE PTR [rax+0x1]
  4092c5:	push   rax
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	add    DWORD PTR [rax],eax
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040a000 <.bss>:
	...

Disassembly of section .idata:

000000000040b000 <.idata>:
  40b000:	fs mov al,0x0
	...
  40b00b:	add    BYTE PTR [rdx+rdi*4],dh
  40b00e:	add    BYTE PTR [rax],al
  40b010:	(bad)  
  40b011:	mov    dl,0x0
  40b013:	add    ah,bh
  40b015:	mov    al,0x0
	...
  40b01f:	add    BYTE PTR [rax-0x46],ah
  40b022:	add    BYTE PTR [rax],al
  40b024:	ins    BYTE PTR es:[rdi],dx
  40b025:	mov    bl,0x0
  40b027:	add    BYTE PTR [rcx+rsi*4],ah
	...
  40b032:	add    BYTE PTR [rax],al
  40b034:	int3   
  40b035:	mov    edx,0xb3940000
  40b03a:	add    BYTE PTR [rax],al
  40b03c:	in     al,0xb1
	...
  40b046:	add    BYTE PTR [rax],al
  40b048:	push   rax
  40b049:	mov    ebx,0xb4540000
	...
  40b062:	add    BYTE PTR [rax],al
  40b064:	rex.R mov bpl,0x0
  40b067:	add    BYTE PTR [rax],al
  40b069:	add    BYTE PTR [rax],al
  40b06b:	add    BYTE PTR [rbp+rsi*4+0x0],cl
  40b06f:	add    BYTE PTR [rax],al
  40b071:	add    BYTE PTR [rax],al
  40b073:	add    BYTE PTR [rbp+rsi*4+0x0],bl
  40b077:	add    BYTE PTR [rax],al
  40b079:	add    BYTE PTR [rax],al
  40b07b:	add    BYTE PTR [rbp+rsi*4+0x0],ch
  40b07f:	add    BYTE PTR [rax],al
  40b081:	add    BYTE PTR [rax],al
  40b083:	add    BYTE PTR [rbp+rsi*4+0x0],bh
  40b087:	add    BYTE PTR [rax],al
  40b089:	add    BYTE PTR [rax],al
  40b08b:	add    BYTE PTR [rbp+rsi*4+0x0],cl
  40b092:	add    BYTE PTR [rax],al
  40b094:	cwde   
  40b095:	mov    ch,0x0
  40b097:	add    BYTE PTR [rax],al
  40b099:	add    BYTE PTR [rax],al
  40b09b:	add    BYTE PTR [rbp+rsi*4+0x0],ah
  40b0a2:	add    BYTE PTR [rax],al
  40b0a4:	mov    ah,0xb5
  40b0a6:	add    BYTE PTR [rax],al
  40b0a8:	add    BYTE PTR [rax],al
  40b0aa:	add    BYTE PTR [rax],al
  40b0ac:	enter  0xb5,0x0
  40b0b0:	add    BYTE PTR [rax],al
  40b0b2:	add    BYTE PTR [rax],al
  40b0b4:	fdiv   DWORD PTR [rbp+0x0]
  40b0ba:	add    BYTE PTR [rax],al
  40b0bc:	call   0x40b176
  40b0c1:	add    BYTE PTR [rax],al
  40b0c3:	add    al,bh
  40b0c5:	mov    ch,0x0
  40b0c7:	add    BYTE PTR [rax],al
  40b0c9:	add    BYTE PTR [rax],al
  40b0cb:	add    BYTE PTR [rax],cl
  40b0cd:	mov    dh,0x0
  40b0cf:	add    BYTE PTR [rax],al
  40b0d1:	add    BYTE PTR [rax],al
  40b0d3:	add    BYTE PTR [rsi+rsi*4],bl
  40b0d6:	add    BYTE PTR [rax],al
  40b0d8:	add    BYTE PTR [rax],al
  40b0da:	add    BYTE PTR [rax],al
  40b0dc:	sub    al,0xb6
  40b0de:	add    BYTE PTR [rax],al
  40b0e0:	add    BYTE PTR [rax],al
  40b0e2:	add    BYTE PTR [rax],al
  40b0e4:	cmp    BYTE PTR [rsi+0x0],dh
  40b0ea:	add    BYTE PTR [rax],al
  40b0ec:	rex.R mov sil,0x0
	...
  40b0fb:	add    BYTE PTR [rax-0x4a],dl
  40b0fe:	add    BYTE PTR [rax],al
  40b100:	add    BYTE PTR [rax],al
  40b102:	add    BYTE PTR [rax],al
  40b104:	ins    BYTE PTR es:[rdi],dx
  40b105:	mov    dh,0x0
  40b107:	add    BYTE PTR [rax],al
  40b109:	add    BYTE PTR [rax],al
  40b10b:	add    BYTE PTR [rax+0xb6],al
  40b111:	add    BYTE PTR [rax],al
  40b113:	add    BYTE PTR [rsi+rsi*4+0x0],dl
	...
  40b122:	add    BYTE PTR [rax],al
  40b124:	lods   al,BYTE PTR ds:[rsi]
  40b125:	mov    dh,0x0
  40b127:	add    BYTE PTR [rax],al
  40b129:	add    BYTE PTR [rax],al
  40b12b:	add    ah,al
  40b12d:	mov    dh,0x0
  40b12f:	add    BYTE PTR [rax],al
  40b131:	add    BYTE PTR [rax],al
  40b133:	add    ah,bl
  40b135:	mov    dh,0x0
  40b137:	add    BYTE PTR [rax],al
  40b139:	add    BYTE PTR [rax],al
  40b13b:	add    al,dh
  40b13d:	mov    dh,0x0
  40b13f:	add    BYTE PTR [rax],al
  40b141:	add    BYTE PTR [rax],al
  40b143:	add    BYTE PTR [rsi],al
  40b145:	mov    bh,0x0
  40b147:	add    BYTE PTR [rax],al
  40b149:	add    BYTE PTR [rax],al
  40b14b:	add    BYTE PTR [rdi+rsi*4],bl
  40b14e:	add    BYTE PTR [rax],al
  40b150:	add    BYTE PTR [rax],al
  40b152:	add    BYTE PTR [rax],al
  40b154:	sub    al,0xb7
  40b156:	add    BYTE PTR [rax],al
  40b158:	add    BYTE PTR [rax],al
  40b15a:	add    BYTE PTR [rax],al
  40b15c:	ds mov bh,0x0
  40b15f:	add    BYTE PTR [rax],al
  40b161:	add    BYTE PTR [rax],al
  40b163:	add    BYTE PTR [rax-0x49],bl
  40b166:	add    BYTE PTR [rax],al
  40b168:	add    BYTE PTR [rax],al
  40b16a:	add    BYTE PTR [rax],al
  40b16c:	push   0xb7
  40b171:	add    BYTE PTR [rax],al
  40b173:	add    BYTE PTR [rdi+rsi*4+0x0],al
  40b17a:	add    BYTE PTR [rax],al
  40b17c:	pushf  
  40b17d:	mov    bh,0x0
  40b17f:	add    BYTE PTR [rax],al
  40b181:	add    BYTE PTR [rax],al
  40b183:	add    BYTE PTR [rsi+0xb7],dh
  40b189:	add    BYTE PTR [rax],al
  40b18b:	add    ah,cl
  40b18d:	mov    bh,0x0
  40b18f:	add    BYTE PTR [rax],al
  40b191:	add    BYTE PTR [rax],al
  40b193:	add    al,ah
  40b195:	mov    bh,0x0
  40b197:	add    BYTE PTR [rax],al
  40b199:	add    BYTE PTR [rax],al
  40b19b:	add    dl,bh
  40b19d:	mov    bh,0x0
  40b19f:	add    BYTE PTR [rax],al
  40b1a1:	add    BYTE PTR [rax],al
  40b1a3:	add    BYTE PTR [rsi],cl
  40b1a5:	mov    eax,0x0
  40b1aa:	add    BYTE PTR [rax],al
  40b1ac:	sub    al,0xb8
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	add    BYTE PTR [rax],al
  40b1b2:	add    BYTE PTR [rax],al
  40b1b4:	xor    al,0xb8
  40b1b6:	add    BYTE PTR [rax],al
  40b1b8:	add    BYTE PTR [rax],al
  40b1ba:	add    BYTE PTR [rax],al
  40b1bc:	movabs rax,0xb856000000000000
  40b1c6:	add    BYTE PTR [rax],al
  40b1c8:	add    BYTE PTR [rax],al
  40b1ca:	add    BYTE PTR [rax],al
  40b1cc:	jb     0x40b186
  40b1ce:	add    BYTE PTR [rax],al
  40b1d0:	add    BYTE PTR [rax],al
  40b1d2:	add    BYTE PTR [rax],al
  40b1d4:	test   BYTE PTR [rax+0x0],bh
	...
  40b1e2:	add    BYTE PTR [rax],al
  40b1e4:	xchg   esp,eax
  40b1e5:	mov    eax,0x0
  40b1ea:	add    BYTE PTR [rax],al
  40b1ec:	lods   al,BYTE PTR ds:[rsi]
  40b1ed:	mov    eax,0x0
  40b1f2:	add    BYTE PTR [rax],al
  40b1f4:	mov    edx,0xb8
  40b1f9:	add    BYTE PTR [rax],al
  40b1fb:	add    dl,cl
  40b1fd:	mov    eax,0x0
  40b202:	add    BYTE PTR [rax],al
  40b204:	(bad)  
  40b205:	mov    eax,0x0
  40b20a:	add    BYTE PTR [rax],al
  40b20c:	in     al,0xb8
  40b20e:	add    BYTE PTR [rax],al
  40b210:	add    BYTE PTR [rax],al
  40b212:	add    BYTE PTR [rax],al
  40b214:	hlt    
  40b215:	mov    eax,0x0
  40b21a:	add    BYTE PTR [rax],al
  40b21c:	(bad)  
  40b21d:	mov    ecx,0x0
  40b222:	add    BYTE PTR [rax],al
  40b224:	sbb    bh,BYTE PTR [rcx+0x0]
  40b22a:	add    BYTE PTR [rax],al
  40b22c:	and    al,0xb9
  40b22e:	add    BYTE PTR [rax],al
  40b230:	add    BYTE PTR [rax],al
  40b232:	add    BYTE PTR [rax],al
  40b234:	xor    bh,BYTE PTR [rcx+0x0]
  40b23a:	add    BYTE PTR [rax],al
  40b23c:	cmp    al,0xb9
  40b23e:	add    BYTE PTR [rax],al
  40b240:	add    BYTE PTR [rax],al
  40b242:	add    BYTE PTR [rax],al
  40b244:	rex.RX mov ecx,0x0
  40b24a:	add    BYTE PTR [rax],al
  40b24c:	push   rdx
  40b24d:	mov    ecx,0x0
  40b252:	add    BYTE PTR [rax],al
  40b254:	pop    rdx
  40b255:	mov    ecx,0x0
  40b25a:	add    BYTE PTR [rax],al
  40b25c:	fs mov ecx,0x0
  40b262:	add    BYTE PTR [rax],al
  40b264:	outs   dx,BYTE PTR ds:[rsi]
  40b265:	mov    ecx,0x0
  40b26a:	add    BYTE PTR [rax],al
  40b26c:	jbe    0x40b227
  40b26e:	add    BYTE PTR [rax],al
  40b270:	add    BYTE PTR [rax],al
  40b272:	add    BYTE PTR [rax],al
  40b274:	cmp    BYTE PTR [rcx+0x0],0x0
  40b27b:	add    BYTE PTR [rax+0xb9],cl
  40b281:	add    BYTE PTR [rax],al
  40b283:	add    BYTE PTR [rdx+0xb9],dl
  40b289:	add    BYTE PTR [rax],al
  40b28b:	add    BYTE PTR [rdx+0xb9],bl
  40b291:	add    BYTE PTR [rax],al
  40b293:	add    BYTE PTR [rcx+rdi*4+0x0],ah
  40b29a:	add    BYTE PTR [rax],al
  40b29c:	scas   al,BYTE PTR es:[rdi]
  40b29d:	mov    ecx,0x0
  40b2a2:	add    BYTE PTR [rax],al
  40b2a4:	mov    eax,0xb9
  40b2a9:	add    BYTE PTR [rax],al
  40b2ab:	add    dl,al
  40b2ad:	mov    ecx,0x0
  40b2b2:	add    BYTE PTR [rax],al
  40b2b4:	int3   
  40b2b5:	mov    ecx,0x0
  40b2ba:	add    BYTE PTR [rax],al
  40b2bc:	(bad)  
  40b2bd:	mov    ecx,0x0
  40b2c2:	add    BYTE PTR [rax],al
  40b2c4:	loopne 0x40b27f
	...
  40b2d2:	add    BYTE PTR [rax],al
  40b2d4:	rex.R mov bpl,0x0
  40b2d7:	add    BYTE PTR [rax],al
  40b2d9:	add    BYTE PTR [rax],al
  40b2db:	add    BYTE PTR [rbp+rsi*4+0x0],cl
  40b2df:	add    BYTE PTR [rax],al
  40b2e1:	add    BYTE PTR [rax],al
  40b2e3:	add    BYTE PTR [rbp+rsi*4+0x0],bl
  40b2e7:	add    BYTE PTR [rax],al
  40b2e9:	add    BYTE PTR [rax],al
  40b2eb:	add    BYTE PTR [rbp+rsi*4+0x0],ch
  40b2ef:	add    BYTE PTR [rax],al
  40b2f1:	add    BYTE PTR [rax],al
  40b2f3:	add    BYTE PTR [rbp+rsi*4+0x0],bh
  40b2f7:	add    BYTE PTR [rax],al
  40b2f9:	add    BYTE PTR [rax],al
  40b2fb:	add    BYTE PTR [rbp+rsi*4+0x0],cl
  40b302:	add    BYTE PTR [rax],al
  40b304:	cwde   
  40b305:	mov    ch,0x0
  40b307:	add    BYTE PTR [rax],al
  40b309:	add    BYTE PTR [rax],al
  40b30b:	add    BYTE PTR [rbp+rsi*4+0x0],ah
  40b312:	add    BYTE PTR [rax],al
  40b314:	mov    ah,0xb5
  40b316:	add    BYTE PTR [rax],al
  40b318:	add    BYTE PTR [rax],al
  40b31a:	add    BYTE PTR [rax],al
  40b31c:	enter  0xb5,0x0
  40b320:	add    BYTE PTR [rax],al
  40b322:	add    BYTE PTR [rax],al
  40b324:	fdiv   DWORD PTR [rbp+0x0]
  40b32a:	add    BYTE PTR [rax],al
  40b32c:	call   0x40b3e6
  40b331:	add    BYTE PTR [rax],al
  40b333:	add    al,bh
  40b335:	mov    ch,0x0
  40b337:	add    BYTE PTR [rax],al
  40b339:	add    BYTE PTR [rax],al
  40b33b:	add    BYTE PTR [rax],cl
  40b33d:	mov    dh,0x0
  40b33f:	add    BYTE PTR [rax],al
  40b341:	add    BYTE PTR [rax],al
  40b343:	add    BYTE PTR [rsi+rsi*4],bl
  40b346:	add    BYTE PTR [rax],al
  40b348:	add    BYTE PTR [rax],al
  40b34a:	add    BYTE PTR [rax],al
  40b34c:	sub    al,0xb6
  40b34e:	add    BYTE PTR [rax],al
  40b350:	add    BYTE PTR [rax],al
  40b352:	add    BYTE PTR [rax],al
  40b354:	cmp    BYTE PTR [rsi+0x0],dh
  40b35a:	add    BYTE PTR [rax],al
  40b35c:	rex.R mov sil,0x0
	...
  40b36b:	add    BYTE PTR [rax-0x4a],dl
  40b36e:	add    BYTE PTR [rax],al
  40b370:	add    BYTE PTR [rax],al
  40b372:	add    BYTE PTR [rax],al
  40b374:	ins    BYTE PTR es:[rdi],dx
  40b375:	mov    dh,0x0
  40b377:	add    BYTE PTR [rax],al
  40b379:	add    BYTE PTR [rax],al
  40b37b:	add    BYTE PTR [rax+0xb6],al
  40b381:	add    BYTE PTR [rax],al
  40b383:	add    BYTE PTR [rsi+rsi*4+0x0],dl
	...
  40b392:	add    BYTE PTR [rax],al
  40b394:	lods   al,BYTE PTR ds:[rsi]
  40b395:	mov    dh,0x0
  40b397:	add    BYTE PTR [rax],al
  40b399:	add    BYTE PTR [rax],al
  40b39b:	add    ah,al
  40b39d:	mov    dh,0x0
  40b39f:	add    BYTE PTR [rax],al
  40b3a1:	add    BYTE PTR [rax],al
  40b3a3:	add    ah,bl
  40b3a5:	mov    dh,0x0
  40b3a7:	add    BYTE PTR [rax],al
  40b3a9:	add    BYTE PTR [rax],al
  40b3ab:	add    al,dh
  40b3ad:	mov    dh,0x0
  40b3af:	add    BYTE PTR [rax],al
  40b3b1:	add    BYTE PTR [rax],al
  40b3b3:	add    BYTE PTR [rsi],al
  40b3b5:	mov    bh,0x0
  40b3b7:	add    BYTE PTR [rax],al
  40b3b9:	add    BYTE PTR [rax],al
  40b3bb:	add    BYTE PTR [rdi+rsi*4],bl
  40b3be:	add    BYTE PTR [rax],al
  40b3c0:	add    BYTE PTR [rax],al
  40b3c2:	add    BYTE PTR [rax],al
  40b3c4:	sub    al,0xb7
  40b3c6:	add    BYTE PTR [rax],al
  40b3c8:	add    BYTE PTR [rax],al
  40b3ca:	add    BYTE PTR [rax],al
  40b3cc:	ds mov bh,0x0
  40b3cf:	add    BYTE PTR [rax],al
  40b3d1:	add    BYTE PTR [rax],al
  40b3d3:	add    BYTE PTR [rax-0x49],bl
  40b3d6:	add    BYTE PTR [rax],al
  40b3d8:	add    BYTE PTR [rax],al
  40b3da:	add    BYTE PTR [rax],al
  40b3dc:	push   0xb7
  40b3e1:	add    BYTE PTR [rax],al
  40b3e3:	add    BYTE PTR [rdi+rsi*4+0x0],al
  40b3ea:	add    BYTE PTR [rax],al
  40b3ec:	pushf  
  40b3ed:	mov    bh,0x0
  40b3ef:	add    BYTE PTR [rax],al
  40b3f1:	add    BYTE PTR [rax],al
  40b3f3:	add    BYTE PTR [rsi+0xb7],dh
  40b3f9:	add    BYTE PTR [rax],al
  40b3fb:	add    ah,cl
  40b3fd:	mov    bh,0x0
  40b3ff:	add    BYTE PTR [rax],al
  40b401:	add    BYTE PTR [rax],al
  40b403:	add    al,ah
  40b405:	mov    bh,0x0
  40b407:	add    BYTE PTR [rax],al
  40b409:	add    BYTE PTR [rax],al
  40b40b:	add    dl,bh
  40b40d:	mov    bh,0x0
  40b40f:	add    BYTE PTR [rax],al
  40b411:	add    BYTE PTR [rax],al
  40b413:	add    BYTE PTR [rsi],cl
  40b415:	mov    eax,0x0
  40b41a:	add    BYTE PTR [rax],al
  40b41c:	sub    al,0xb8
  40b41e:	add    BYTE PTR [rax],al
  40b420:	add    BYTE PTR [rax],al
  40b422:	add    BYTE PTR [rax],al
  40b424:	xor    al,0xb8
  40b426:	add    BYTE PTR [rax],al
  40b428:	add    BYTE PTR [rax],al
  40b42a:	add    BYTE PTR [rax],al
  40b42c:	movabs rax,0xb856000000000000
  40b436:	add    BYTE PTR [rax],al
  40b438:	add    BYTE PTR [rax],al
  40b43a:	add    BYTE PTR [rax],al
  40b43c:	jb     0x40b3f6
  40b43e:	add    BYTE PTR [rax],al
  40b440:	add    BYTE PTR [rax],al
  40b442:	add    BYTE PTR [rax],al
  40b444:	test   BYTE PTR [rax+0x0],bh
	...
  40b452:	add    BYTE PTR [rax],al
  40b454:	xchg   esp,eax
  40b455:	mov    eax,0x0
  40b45a:	add    BYTE PTR [rax],al
  40b45c:	lods   al,BYTE PTR ds:[rsi]
  40b45d:	mov    eax,0x0
  40b462:	add    BYTE PTR [rax],al
  40b464:	mov    edx,0xb8
  40b469:	add    BYTE PTR [rax],al
  40b46b:	add    dl,cl
  40b46d:	mov    eax,0x0
  40b472:	add    BYTE PTR [rax],al
  40b474:	(bad)  
  40b475:	mov    eax,0x0
  40b47a:	add    BYTE PTR [rax],al
  40b47c:	in     al,0xb8
  40b47e:	add    BYTE PTR [rax],al
  40b480:	add    BYTE PTR [rax],al
  40b482:	add    BYTE PTR [rax],al
  40b484:	hlt    
  40b485:	mov    eax,0x0
  40b48a:	add    BYTE PTR [rax],al
  40b48c:	(bad)  
  40b48d:	mov    ecx,0x0
  40b492:	add    BYTE PTR [rax],al
  40b494:	sbb    bh,BYTE PTR [rcx+0x0]
  40b49a:	add    BYTE PTR [rax],al
  40b49c:	and    al,0xb9
  40b49e:	add    BYTE PTR [rax],al
  40b4a0:	add    BYTE PTR [rax],al
  40b4a2:	add    BYTE PTR [rax],al
  40b4a4:	xor    bh,BYTE PTR [rcx+0x0]
  40b4aa:	add    BYTE PTR [rax],al
  40b4ac:	cmp    al,0xb9
  40b4ae:	add    BYTE PTR [rax],al
  40b4b0:	add    BYTE PTR [rax],al
  40b4b2:	add    BYTE PTR [rax],al
  40b4b4:	rex.RX mov ecx,0x0
  40b4ba:	add    BYTE PTR [rax],al
  40b4bc:	push   rdx
  40b4bd:	mov    ecx,0x0
  40b4c2:	add    BYTE PTR [rax],al
  40b4c4:	pop    rdx
  40b4c5:	mov    ecx,0x0
  40b4ca:	add    BYTE PTR [rax],al
  40b4cc:	fs mov ecx,0x0
  40b4d2:	add    BYTE PTR [rax],al
  40b4d4:	outs   dx,BYTE PTR ds:[rsi]
  40b4d5:	mov    ecx,0x0
  40b4da:	add    BYTE PTR [rax],al
  40b4dc:	jbe    0x40b497
  40b4de:	add    BYTE PTR [rax],al
  40b4e0:	add    BYTE PTR [rax],al
  40b4e2:	add    BYTE PTR [rax],al
  40b4e4:	cmp    BYTE PTR [rcx+0x0],0x0
  40b4eb:	add    BYTE PTR [rax+0xb9],cl
  40b4f1:	add    BYTE PTR [rax],al
  40b4f3:	add    BYTE PTR [rdx+0xb9],dl
  40b4f9:	add    BYTE PTR [rax],al
  40b4fb:	add    BYTE PTR [rdx+0xb9],bl
  40b501:	add    BYTE PTR [rax],al
  40b503:	add    BYTE PTR [rcx+rdi*4+0x0],ah
  40b50a:	add    BYTE PTR [rax],al
  40b50c:	scas   al,BYTE PTR es:[rdi]
  40b50d:	mov    ecx,0x0
  40b512:	add    BYTE PTR [rax],al
  40b514:	mov    eax,0xb9
  40b519:	add    BYTE PTR [rax],al
  40b51b:	add    dl,al
  40b51d:	mov    ecx,0x0
  40b522:	add    BYTE PTR [rax],al
  40b524:	int3   
  40b525:	mov    ecx,0x0
  40b52a:	add    BYTE PTR [rax],al
  40b52c:	(bad)  
  40b52d:	mov    ecx,0x0
  40b532:	add    BYTE PTR [rax],al
  40b534:	loopne 0x40b4ef
	...
  40b542:	add    BYTE PTR [rax],al
  40b544:	add    DWORD PTR [rdx],eax
  40b546:	gs jb  0x40b5bb
  40b549:	outs   dx,DWORD PTR ds:[rsi]
  40b54a:	jb     0x40b54c
  40b54c:	jg     0x40b550
  40b54e:	outs   dx,BYTE PTR ds:[esi]
  40b550:	jne    0x40b5b1
  40b552:	(bad)  
  40b554:	jae    0x40b5bb
  40b556:	outs   dx,BYTE PTR ds:[rsi]
  40b557:	(bad)  
  40b558:	ins    DWORD PTR es:[rdi],dx
  40b559:	add    BYTE PTR gs:[rax],al
  40b55c:	fild   WORD PTR [rdx]
  40b55e:	jo     0x40b5d2
  40b560:	outs   dx,DWORD PTR ds:[rsi]
  40b561:	addr32 jb 0x40b5c5
  40b564:	ins    DWORD PTR es:[rdi],dx
  40b565:	pop    rdi
  40b566:	outs   dx,BYTE PTR ds:[rsi]
  40b567:	(bad)  
  40b568:	ins    DWORD PTR es:[rdi],dx
  40b569:	add    BYTE PTR gs:[rax],al
  40b56c:	loopne 0x40b570
  40b56e:	jo     0x40b5e2
  40b570:	outs   dx,DWORD PTR ds:[rsi]
  40b571:	jo     0x40b5d8
  40b573:	jb     0x40b5d4
  40b575:	outs   dx,BYTE PTR ds:[rsi]
  40b576:	(bad)  
  40b577:	ins    DWORD PTR es:[rdi],dx
  40b578:	add    BYTE PTR gs:[rax],al
  40b57b:	add    BYTE PTR [rdi],cl
  40b57d:	add    esi,DWORD PTR [rdx+0x70]
  40b580:	ins    BYTE PTR es:[rdi],dx
  40b581:	pop    rdi
  40b582:	data16 jo 0x40b5f7
  40b585:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40b58c:	adc    BYTE PTR [rbx],al
  40b58e:	jb     0x40b600
  40b590:	ins    BYTE PTR es:[rdi],dx
  40b591:	pop    rdi
  40b592:	data16 jo 0x40b60a
  40b595:	je     0x40b5fa
  40b597:	add    BYTE PTR [rcx],dl
  40b599:	add    esi,DWORD PTR [rdx+0x70]
  40b59c:	ins    BYTE PTR es:[rdi],dx
  40b59d:	pop    rdi
  40b59e:	data16 jo 0x40b616
  40b5a1:	je     0x40b616
  40b5a3:	add    BYTE PTR [rbx+rax*1],dl
  40b5a6:	jb     0x40b618
  40b5a8:	ins    BYTE PTR es:[rdi],dx
  40b5a9:	pop    rdi
  40b5aa:	addr32 gs je 0x40b61a
  40b5ae:	imul   ebp,DWORD PTR [rsi+0x65],0x17000000
  40b5b5:	add    esi,DWORD PTR [rdx+0x70]
  40b5b8:	ins    BYTE PTR es:[rdi],dx
  40b5b9:	pop    rdi
  40b5ba:	addr32 gs je 0x40b62d
  40b5be:	jo     0x40b634
  40b5c0:	pop    rdi
  40b5c1:	ins    BYTE PTR es:[rdi],dx
  40b5c2:	outs   dx,DWORD PTR ds:[rsi]
  40b5c3:	outs   dx,BYTE PTR ds:[rsi]
  40b5c4:	add    BYTE PTR [eax],al
  40b5c7:	add    BYTE PTR [rbx+rax*1],bl
  40b5ca:	jb     0x40b63c
  40b5cc:	ins    BYTE PTR es:[rdi],dx
  40b5cd:	pop    rdi
  40b5ce:	ins    DWORD PTR es:[rdi],dx
  40b5cf:	(bad)  
  40b5d0:	ins    BYTE PTR es:[rdi],dx
  40b5d1:	ins    BYTE PTR es:[rdi],dx
  40b5d2:	outs   dx,DWORD PTR ds:[rsi]
  40b5d3:	movsxd eax,DWORD PTR [rax]
  40b5d5:	add    BYTE PTR [rax],al
  40b5d7:	add    BYTE PTR [rbx+rax*1],ah
  40b5da:	jb     0x40b64c
  40b5dc:	ins    BYTE PTR es:[rdi],dx
  40b5dd:	pop    rdi
  40b5de:	outs   dx,DWORD PTR ds:[rsi]
  40b5df:	jo     0x40b655
  40b5e1:	imul   ebp,DWORD PTR [rsi+0x64],0x0
  40b5e8:	add    esi,DWORD PTR es:[rdx+0x70]
  40b5ec:	ins    BYTE PTR es:[rdi],dx
  40b5ed:	pop    rdi
  40b5ee:	jo     0x40b662
  40b5f0:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40b5f7:	add    BYTE PTR [rip+0x6c707203],ch        # 0x6cb12800
  40b5fd:	pop    rdi
  40b5fe:	jae    0x40b665
  40b600:	je     0x40b66e
  40b602:	outs   dx,DWORD PTR ds:[rsi]
  40b603:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b606:	add    BYTE PTR gs:[rbx+rax*1+0x73],al
  40b60b:	gs je  0x40b66d
  40b60e:	jo     0x40b682
  40b610:	outs   dx,DWORD PTR ds:[rsi]
  40b611:	addr32 jb 0x40b675
  40b614:	ins    DWORD PTR es:[rdi],dx
  40b615:	pop    rdi
  40b616:	outs   dx,BYTE PTR ds:[rsi]
  40b617:	(bad)  
  40b618:	ins    DWORD PTR es:[rdi],dx
  40b619:	add    BYTE PTR gs:[rax],al
  40b61c:	jne    0x40b621
  40b61e:	jne    0x40b658
  40b620:	pop    rdi
  40b621:	ins    DWORD PTR es:[rdi],dx
  40b622:	(bad)  
  40b623:	je     0x40b694
  40b625:	jne    0x40b68a
  40b627:	pop    rdi
  40b628:	(bad)  
  40b629:	jne    0x40b6a3
  40b62b:	add    BYTE PTR [rbx+0x616d7803],dl
  40b631:	ins    BYTE PTR es:[rdi],dx
  40b632:	ins    BYTE PTR es:[rdi],dx
  40b633:	outs   dx,DWORD PTR ds:[rsi]
  40b634:	movsxd eax,DWORD PTR [rax]
  40b636:	add    BYTE PTR [rax],al
  40b638:	mov    DWORD PTR [rsi],0x61657278
  40b63e:	ins    BYTE PTR es:[rdi],dx
  40b63f:	ins    BYTE PTR es:[rdi],dx
  40b640:	outs   dx,DWORD PTR ds:[rsi]
  40b641:	movsxd eax,DWORD PTR [rax]
  40b643:	add    ch,cl
  40b645:	(bad)  
  40b646:	js     0x40b6bb
  40b648:	je     0x40b6bc
  40b64a:	fs jne 0x40b6bd
  40b64d:	add    BYTE PTR [rax],al
  40b64f:	add    BYTE PTR [rsi],bl
  40b651:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40b655:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40b65c:	outs   dx,BYTE PTR ds:[rsi]
  40b65d:	fs je  0x40b6c5
  40b660:	js     0x40b6d6
  40b662:	outs   dx,DWORD PTR fs:[rsi]
  40b664:	ins    DWORD PTR es:[rdi],dx
  40b665:	(bad)  
  40b666:	imul   ebp,DWORD PTR [rsi+0x0],0x22000000
  40b66d:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40b671:	imul   ebp,DWORD PTR [rsi+0x74],0x67645f6c
  40b678:	gs je  0x40b6ef
  40b67b:	gs js  0x40b6f2
  40b67e:	add    BYTE PTR [rax],al
  40b680:	add    BYTE PTR es:[rcx+rbp*2+0x62],ch
  40b685:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  40b68c:	je     0x40b702
  40b68e:	gs js  0x40b705
  40b691:	add    BYTE PTR [rax],al
  40b693:	add    BYTE PTR [rbp+0x0],al
  40b696:	ins    BYTE PTR es:[rdi],dx
  40b697:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40b69e:	je     0x40b705
  40b6a0:	js     0x40b716
  40b6a2:	outs   dx,DWORD PTR fs:[rsi]
  40b6a4:	ins    DWORD PTR es:[rdi],dx
  40b6a5:	(bad)  
  40b6a6:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  40b6ad:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40b6b1:	gs je  0x40b719
  40b6b4:	rex.XB jb 0x40b720
  40b6b7:	je     0x40b722
  40b6b9:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b6bc:	push   rbx
  40b6bd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b6c2:	outs   dx,BYTE PTR ds:[rsi]
  40b6c3:	add    al,bh
  40b6c5:	add    BYTE PTR [rbp+0x6e],al
  40b6c8:	je     0x40b72f
  40b6ca:	jb     0x40b70f
  40b6cc:	jb     0x40b737
  40b6ce:	je     0x40b739
  40b6d0:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b6d3:	push   rbx
  40b6d4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b6d9:	outs   dx,BYTE PTR ds:[rsi]
  40b6da:	add    BYTE PTR [rax],al
  40b6dc:	int    0x1
  40b6de:	rex.RXB
  40b6df:	gs je  0x40b725
  40b6e2:	jne    0x40b756
  40b6e4:	jb     0x40b74b
  40b6e6:	outs   dx,BYTE PTR ds:[rsi]
  40b6e7:	je     0x40b739
  40b6e9:	jb     0x40b75a
  40b6eb:	movsxd esp,DWORD PTR [rbp+0x73]
  40b6ee:	jae    0x40b6f0
  40b6f0:	(bad)  
  40b6f1:	add    DWORD PTR [rdi+0x65],eax
  40b6f4:	je     0x40b739
  40b6f6:	jne    0x40b76a
  40b6f8:	jb     0x40b75f
  40b6fa:	outs   dx,BYTE PTR ds:[rsi]
  40b6fb:	je     0x40b74d
  40b6fd:	jb     0x40b76e
  40b6ff:	movsxd esp,DWORD PTR [rbp+0x73]
  40b702:	jae    0x40b74d
  40b704:	fs add dl,dl
  40b707:	add    DWORD PTR [rdi+0x65],eax
  40b70a:	je     0x40b74f
  40b70c:	jne    0x40b780
  40b70e:	jb     0x40b775
  40b710:	outs   dx,BYTE PTR ds:[rsi]
  40b711:	je     0x40b767
  40b713:	push   0x64616572
  40b718:	rex.WB
  40b719:	add    BYTE PTR fs:[rax],al
  40b71c:	adc    BYTE PTR [rdx],al
  40b71e:	rex.RXB
  40b71f:	gs je  0x40b76e
  40b722:	(bad)  
  40b723:	jae    0x40b799
  40b725:	rex.RB jb 0x40b79a
  40b728:	outs   dx,DWORD PTR ds:[rsi]
  40b729:	jb     0x40b72b
  40b72b:	add    BYTE PTR [rbx+0x2],dh
  40b72e:	rex.RXB
  40b72f:	gs je  0x40b785
  40b732:	je     0x40b795
  40b734:	jb     0x40b7aa
  40b736:	jne    0x40b7a8
  40b738:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40b73a:	outs   dx,WORD PTR ds:[rsi]
  40b73c:	add    BYTE PTR [r10+0x74654702],cl
  40b743:	push   rbx
  40b744:	jns    0x40b7b9
  40b746:	je     0x40b7ad
  40b748:	ins    DWORD PTR es:[rdi],dx
  40b749:	push   rsp
  40b74a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40b751:	ins    BYTE PTR es:[rdi],dx
  40b752:	gs push rsp
  40b754:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40b75b:	gs je  0x40b7b2
  40b75e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40b765:	je     0x40b767
  40b767:	add    cl,bh
  40b769:	add    cl,BYTE PTR [rcx+0x6e]
  40b76c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40b774:	rex.XB jb 0x40b7e0
  40b777:	je     0x40b7e2
  40b779:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b77c:	push   rbx
  40b77d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b782:	outs   dx,BYTE PTR ds:[rsi]
  40b783:	add    BYTE PTR [rbx+0x3],cl
  40b786:	rex.WR
  40b787:	gs (bad) 
  40b789:	jbe    0x40b7f0
  40b78b:	rex.XB jb 0x40b7f7
  40b78e:	je     0x40b7f9
  40b790:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b793:	push   rbx
  40b794:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b799:	outs   dx,BYTE PTR ds:[rsi]
  40b79a:	add    BYTE PTR [rax],al
  40b79c:	mov    ebx,0x65755103
  40b7a1:	jb     0x40b81c
  40b7a3:	push   rax
  40b7a4:	gs jb  0x40b80d
  40b7a7:	outs   dx,DWORD PTR ds:[rsi]
  40b7a8:	jb     0x40b817
  40b7aa:	(bad)  
  40b7ab:	outs   dx,BYTE PTR ds:[rsi]
  40b7ac:	movsxd esp,DWORD PTR [rbp+0x43]
  40b7af:	outs   dx,DWORD PTR ds:[rsi]
  40b7b0:	jne    0x40b820
  40b7b2:	je     0x40b819
  40b7b4:	jb     0x40b7b6
  40b7b6:	add    DWORD PTR [rdx+rdx*2],eax
  40b7b9:	je     0x40b827
  40b7bb:	rex.B
  40b7bc:	fs fs rex.RX jne 0x40b82f
  40b7c1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b7c5:	outs   dx,BYTE PTR ds:[rsi]
  40b7c6:	push   rsp
  40b7c7:	(bad)  
  40b7c8:	(bad)  
  40b7c9:	ins    BYTE PTR es:[rdi],dx
  40b7ca:	add    BYTE PTR gs:[rdx],al
  40b7cd:	add    al,0x52
  40b7cf:	je     0x40b83d
  40b7d1:	rex.XB (bad) 
  40b7d3:	jo     0x40b849
  40b7d5:	jne    0x40b849
  40b7d7:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40b7da:	outs   dx,BYTE PTR ds:[rsi]
  40b7db:	je     0x40b842
  40b7dd:	js     0x40b853
  40b7df:	add    BYTE PTR [rcx],cl
  40b7e1:	add    al,0x52
  40b7e3:	je     0x40b851
  40b7e5:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40b7e7:	outs   dx,DWORD PTR ds:[rsi]
  40b7e8:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40b7ec:	jne    0x40b85c
  40b7ee:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b7f2:	outs   dx,BYTE PTR ds:[rsi]
  40b7f3:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40b7f5:	je     0x40b869
  40b7f7:	jns    0x40b7f9
  40b7f9:	add    BYTE PTR [rax],dl
  40b7fb:	add    al,0x52
  40b7fd:	je     0x40b86b
  40b7ff:	push   rsi
  40b800:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40b807:	outs   dx,BYTE PTR ds:[rsi]
  40b808:	ja     0x40b873
  40b80a:	outs   dx,BYTE PTR ds:[rsi]
  40b80b:	add    BYTE PTR fs:[rax],al
  40b80e:	lahf   
  40b80f:	add    al,0x53
  40b811:	gs je  0x40b869
  40b814:	outs   dx,BYTE PTR ds:[rsi]
  40b815:	push   0x6c646e61
  40b81a:	gs fs rex.RB js 0x40b882
  40b81f:	gs jo  0x40b896
  40b822:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40b829:	gs jb  0x40b82c
  40b82c:	lods   al,BYTE PTR ds:[rsi]
  40b82d:	add    al,0x53
  40b82f:	ins    BYTE PTR es:[rdi],dx
  40b830:	gs gs jo 0x40b834
  40b834:	mov    edx,0x72655404
  40b839:	ins    DWORD PTR es:[rdi],dx
  40b83a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40b841:	outs   dx,DWORD PTR ds:[rsi]
  40b842:	movsxd esp,DWORD PTR [rbp+0x73]
  40b845:	jae    0x40b847
  40b847:	add    cl,al
  40b849:	add    al,0x54
  40b84b:	ins    BYTE PTR es:[rdi],dx
  40b84c:	jae    0x40b895
  40b84e:	gs je  0x40b8a7
  40b851:	(bad)  
  40b852:	ins    BYTE PTR es:[rdi],dx
  40b853:	jne    0x40b8ba
  40b855:	add    dh,cl
  40b857:	add    al,0x55
  40b859:	outs   dx,BYTE PTR ds:[rsi]
  40b85a:	push   0x6c646e61
  40b85f:	gs fs rex.RB js 0x40b8c7
  40b864:	gs jo  0x40b8db
  40b867:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40b86e:	gs jb  0x40b871
  40b871:	add    ah,ch
  40b873:	add    al,0x56
  40b875:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40b87c:	jb     0x40b8ed
  40b87e:	je     0x40b8e5
  40b880:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40b884:	out    dx,al
  40b885:	add    al,0x56
  40b887:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40b88e:	jne    0x40b8f5
  40b890:	jb     0x40b90b
  40b892:	add    BYTE PTR [rax],al
  40b894:	(bad)  
  40b895:	add    BYTE PTR [rdi+0x5f],bl
  40b898:	rex.XB pop r15
  40b89a:	jae    0x40b90c
  40b89c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b8a0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40b8a7:	ins    BYTE PTR es:[rdi],dx
  40b8a8:	gs jb  0x40b8ab
  40b8ab:	add    BYTE PTR [rsi+0x0],cl
  40b8ae:	pop    rdi
  40b8af:	pop    rdi
  40b8b0:	fs ins BYTE PTR es:[rdi],dx
  40b8b2:	ins    BYTE PTR es:[rdi],dx
  40b8b3:	outs   dx,DWORD PTR ds:[rsi]
  40b8b4:	outs   dx,BYTE PTR ds:[rsi]
  40b8b5:	gs js  0x40b921
  40b8b8:	je     0x40b8ba
  40b8ba:	push   rcx
  40b8bb:	add    BYTE PTR [rdi+0x5f],bl
  40b8be:	addr32 gs je 0x40b92f
  40b8c2:	(bad)  
  40b8c3:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40b8ca:	push   rdx
  40b8cb:	add    BYTE PTR [rdi+0x5f],bl
  40b8ce:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40b8d5:	add    BYTE PTR [rbx+0x0],dl
  40b8d8:	pop    rdi
  40b8d9:	pop    rdi
  40b8da:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40b8e1:	movsxd eax,DWORD PTR [rax]
  40b8e3:	add    BYTE PTR [rdx+0x0],bl
  40b8e6:	pop    rdi
  40b8e7:	pop    rdi
  40b8e8:	ins    BYTE PTR es:[rdi],dx
  40b8e9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40b8ec:	jbe    0x40b94d
  40b8ee:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40b8f5:	add    BYTE PTR [rdi+0x5f],bl
  40b8f8:	jae    0x40b95f
  40b8fa:	je     0x40b95b
  40b8fc:	(bad)  
  40b8fd:	jo     0x40b96f
  40b8ff:	pop    rdi
  40b900:	je     0x40b97b
  40b902:	jo     0x40b969
  40b904:	add    BYTE PTR [rax],al
  40b906:	(bad)  
  40b907:	add    BYTE PTR [rdi+0x5f],bl
  40b90a:	jae    0x40b971
  40b90c:	je     0x40b983
  40b90e:	jae    0x40b975
  40b910:	jb     0x40b97f
  40b912:	(bad)  
  40b913:	je     0x40b97d
  40b915:	gs jb  0x40b98a
  40b918:	add    BYTE PTR [rax],al
  40b91a:	jno    0x40b91c
  40b91c:	pop    rdi
  40b91d:	(bad)  
  40b91e:	movsxd ebp,DWORD PTR [rbp+0x64]
  40b921:	ins    BYTE PTR es:[rdi],dx
  40b922:	outs   dx,BYTE PTR ds:[rsi]
  40b923:	add    BYTE PTR [rax+0x0],bh
  40b926:	pop    rdi
  40b927:	(bad)  
  40b928:	ins    DWORD PTR es:[rdi],dx
  40b929:	jae    0x40b992
  40b92b:	pop    rdi
  40b92c:	gs js  0x40b998
  40b92f:	je     0x40b931
  40b931:	add    BYTE PTR [rdx+0x65635f00],cl
  40b937:	js     0x40b9a2
  40b939:	je     0x40b93b
  40b93b:	add    dl,bl
  40b93d:	add    BYTE PTR [rdi+0x66],bl
  40b940:	ins    DWORD PTR es:[rdi],dx
  40b941:	outs   dx,DWORD PTR ds:[rsi]
  40b942:	fs add BYTE PTR gs:[rax],al
  40b946:	sbb    al,BYTE PTR [rcx]
  40b948:	pop    rdi
  40b949:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40b950:	ins    DWORD PTR es:[rdi],dx
  40b951:	add    BYTE PTR [rax+0x6f6c5f01],al
  40b957:	movsxd ebp,DWORD PTR [rbx+0x0]
  40b95a:	and    eax,0x6e6f5f02
  40b95f:	gs js  0x40b9cb
  40b962:	je     0x40b964
  40b964:	(bad)
  40b968:	outs   dx,BYTE PTR ds:[rsi]
  40b969:	ins    BYTE PTR es:[rdi],dx
  40b96a:	outs   dx,DWORD PTR ds:[rsi]
  40b96b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40b96e:	jg     0x40b973
  40b970:	(bad)  
  40b971:	(bad)  
  40b972:	outs   dx,DWORD PTR ds:[rsi]
  40b973:	jb     0x40b9e9
  40b975:	add    BYTE PTR [rax+0x6c616303],dl
  40b97b:	ins    BYTE PTR es:[rdi],dx
  40b97c:	outs   dx,DWORD PTR ds:[rsi]
  40b97d:	movsxd eax,DWORD PTR [rax]
  40b97f:	add    BYTE PTR [rbp+0x69786503],bl
  40b985:	je     0x40b987
  40b987:	add    BYTE PTR [rax+0x72706603],dh
  40b98d:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40b994:	data16 jb 0x40b9fc
  40b997:	add    BYTE PTR gs:[rax],al
  40b99a:	ret    0x6603
  40b99d:	ja     0x40ba11
  40b99f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40b9a7:	(bad)  
  40b9a8:	ins    BYTE PTR es:[rdi],dx
  40b9a9:	ins    BYTE PTR es:[rdi],dx
  40b9aa:	outs   dx,DWORD PTR ds:[rsi]
  40b9ab:	movsxd eax,DWORD PTR [rax]
  40b9ad:	add    al,bh
  40b9af:	add    ebp,DWORD PTR [rbp+0x65]
  40b9b2:	ins    DWORD PTR es:[rdi],dx
  40b9b3:	movsxd esi,DWORD PTR [rax+0x79]
  40b9b6:	add    BYTE PTR [rax],al
  40b9b8:	cli    
  40b9b9:	add    ebp,DWORD PTR [rbp+0x65]
  40b9bc:	ins    DWORD PTR es:[rdi],dx
  40b9bd:	jae    0x40ba24
  40b9bf:	je     0x40b9c1
  40b9c1:	add    BYTE PTR [rsi],dl
  40b9c3:	add    al,0x73
  40b9c5:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40b9cc:	sub    eax,DWORD PTR [rbx+rsi*2]
  40b9cf:	je     0x40ba43
  40b9d1:	ins    BYTE PTR es:[rdi],dx
  40b9d2:	outs   dx,BYTE PTR gs:[rsi]
  40b9d4:	add    BYTE PTR [rax],al
  40b9d6:	cs add al,0x73
  40b9d9:	je     0x40ba4d
  40b9db:	outs   dx,BYTE PTR ds:[rsi]
  40b9dc:	movsxd ebp,DWORD PTR [rbp+0x70]
  40b9df:	add    BYTE PTR [rsi+0x4],cl
  40b9e2:	jbe    0x40ba4a
  40b9e4:	jo     0x40ba58
  40b9e6:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40b9ed:	mov    al,0x0
  40b9ef:	add    BYTE PTR [rax],al
  40b9f1:	mov    al,0x0
  40b9f3:	add    BYTE PTR [rax],al
  40b9f5:	mov    al,0x0
  40b9f7:	add    BYTE PTR [rax],al
  40b9f9:	mov    al,0x0
  40b9fb:	add    BYTE PTR [rax],al
  40b9fd:	mov    al,0x0
  40b9ff:	add    BYTE PTR [rax],al
  40ba01:	mov    al,0x0
  40ba03:	add    BYTE PTR [rax],al
  40ba05:	mov    al,0x0
  40ba07:	add    BYTE PTR [rax],al
  40ba09:	mov    al,0x0
  40ba0b:	add    BYTE PTR [rax],al
  40ba0d:	mov    al,0x0
  40ba0f:	add    BYTE PTR [rax],al
  40ba11:	mov    al,0x0
  40ba13:	add    BYTE PTR [rax],al
  40ba15:	mov    al,0x0
  40ba17:	add    BYTE PTR [rax],al
  40ba19:	mov    al,0x0
  40ba1b:	add    BYTE PTR [rax],al
  40ba1d:	mov    al,0x0
  40ba1f:	add    BYTE PTR [rax],al
  40ba21:	mov    al,0x0
  40ba23:	add    BYTE PTR [rax],al
  40ba25:	mov    al,0x0
  40ba27:	add    BYTE PTR [rax],al
  40ba29:	mov    al,0x0
  40ba2b:	add    BYTE PTR [rax],al
  40ba2d:	mov    al,0x0
  40ba2f:	add    BYTE PTR [rax],al
  40ba31:	mov    al,0x0
  40ba33:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40ba37:	addr32 gs je 0x40baaf
  40ba3b:	gs js  0x40bab2
  40ba3e:	ins    BYTE PTR es:[rdi],dx
  40ba3f:	imul   esp,DWORD PTR [rdx+0x2d],0x39312d30
  40ba46:	sub    eax,0x2e312d35
  40ba4b:	fs ins BYTE PTR es:[rdi],dx
  40ba4d:	ins    BYTE PTR es:[rdi],dx
  40ba4e:	add    BYTE PTR [rax],al
  40ba50:	adc    al,0xb0
  40ba52:	add    BYTE PTR [rax],al
  40ba54:	adc    al,0xb0
  40ba56:	add    BYTE PTR [rax],al
  40ba58:	adc    al,0xb0
  40ba5a:	add    BYTE PTR [rax],al
  40ba5c:	adc    al,0xb0
  40ba5e:	add    BYTE PTR [rax],al
  40ba60:	ins    BYTE PTR es:[rdi],dx
  40ba61:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  40ba68:	cmp    BYTE PTR [rsi],ch
  40ba6a:	fs ins BYTE PTR es:[rdi],dx
  40ba6c:	ins    BYTE PTR es:[rdi],dx
  40ba6d:	add    BYTE PTR [rax],al
  40ba6f:	add    BYTE PTR [rax],ch
  40ba71:	mov    al,0x0
  40ba73:	add    BYTE PTR [rax],ch
  40ba75:	mov    al,0x0
  40ba77:	add    BYTE PTR [rax],ch
  40ba79:	mov    al,0x0
  40ba7b:	add    BYTE PTR [rax],ch
  40ba7d:	mov    al,0x0
  40ba7f:	add    BYTE PTR [rax],ch
  40ba81:	mov    al,0x0
  40ba83:	add    BYTE PTR [rax],ch
  40ba85:	mov    al,0x0
  40ba87:	add    BYTE PTR [rax],ch
  40ba89:	mov    al,0x0
  40ba8b:	add    BYTE PTR [rax],ch
  40ba8d:	mov    al,0x0
  40ba8f:	add    BYTE PTR [rax],ch
  40ba91:	mov    al,0x0
  40ba93:	add    BYTE PTR [rax],ch
  40ba95:	mov    al,0x0
  40ba97:	add    BYTE PTR [rax],ch
  40ba99:	mov    al,0x0
  40ba9b:	add    BYTE PTR [rax],ch
  40ba9d:	mov    al,0x0
  40ba9f:	add    BYTE PTR [rax],ch
  40baa1:	mov    al,0x0
  40baa3:	add    BYTE PTR [rax],ch
  40baa5:	mov    al,0x0
  40baa7:	add    BYTE PTR [rax],ch
  40baa9:	mov    al,0x0
  40baab:	add    BYTE PTR [rax],ch
  40baad:	mov    al,0x0
  40baaf:	add    BYTE PTR [rax],ch
  40bab1:	mov    al,0x0
  40bab3:	add    BYTE PTR [rax],ch
  40bab5:	mov    al,0x0
  40bab7:	add    BYTE PTR [rax],ch
  40bab9:	mov    al,0x0
  40babb:	add    BYTE PTR [rax],ch
  40babd:	mov    al,0x0
  40babf:	add    BYTE PTR [rax],ch
  40bac1:	mov    al,0x0
  40bac3:	add    BYTE PTR [rax],ch
  40bac5:	mov    al,0x0
  40bac7:	add    BYTE PTR [rax],ch
  40bac9:	mov    al,0x0
  40bacb:	add    BYTE PTR [rbx+0x45],cl
  40bace:	push   rdx
  40bacf:	rex.WRX
  40bad0:	rex.RB
  40bad1:	xor    r14,QWORD PTR [rdx]
  40bad4:	cs fs ins BYTE PTR es:[rdi],dx
  40bad7:	ins    BYTE PTR es:[rdi],dx
  40bad8:	add    BYTE PTR [rax],al
  40bada:	add    BYTE PTR [rax],al
  40badc:	cmp    al,0xb0
  40bade:	add    BYTE PTR [rax],al
  40bae0:	cmp    al,0xb0
  40bae2:	add    BYTE PTR [rax],al
  40bae4:	cmp    al,0xb0
  40bae6:	add    BYTE PTR [rax],al
  40bae8:	cmp    al,0xb0
  40baea:	add    BYTE PTR [rax],al
  40baec:	cmp    al,0xb0
  40baee:	add    BYTE PTR [rax],al
  40baf0:	cmp    al,0xb0
  40baf2:	add    BYTE PTR [rax],al
  40baf4:	cmp    al,0xb0
  40baf6:	add    BYTE PTR [rax],al
  40baf8:	cmp    al,0xb0
  40bafa:	add    BYTE PTR [rax],al
  40bafc:	cmp    al,0xb0
  40bafe:	add    BYTE PTR [rax],al
  40bb00:	cmp    al,0xb0
  40bb02:	add    BYTE PTR [rax],al
  40bb04:	cmp    al,0xb0
  40bb06:	add    BYTE PTR [rax],al
  40bb08:	cmp    al,0xb0
  40bb0a:	add    BYTE PTR [rax],al
  40bb0c:	cmp    al,0xb0
  40bb0e:	add    BYTE PTR [rax],al
  40bb10:	cmp    al,0xb0
  40bb12:	add    BYTE PTR [rax],al
  40bb14:	cmp    al,0xb0
  40bb16:	add    BYTE PTR [rax],al
  40bb18:	cmp    al,0xb0
  40bb1a:	add    BYTE PTR [rax],al
  40bb1c:	cmp    al,0xb0
  40bb1e:	add    BYTE PTR [rax],al
  40bb20:	cmp    al,0xb0
  40bb22:	add    BYTE PTR [rax],al
  40bb24:	cmp    al,0xb0
  40bb26:	add    BYTE PTR [rax],al
  40bb28:	cmp    al,0xb0
  40bb2a:	add    BYTE PTR [rax],al
  40bb2c:	cmp    al,0xb0
  40bb2e:	add    BYTE PTR [rax],al
  40bb30:	cmp    al,0xb0
  40bb32:	add    BYTE PTR [rax],al
  40bb34:	cmp    al,0xb0
  40bb36:	add    BYTE PTR [rax],al
  40bb38:	cmp    al,0xb0
  40bb3a:	add    BYTE PTR [rax],al
  40bb3c:	cmp    al,0xb0
  40bb3e:	add    BYTE PTR [rax],al
  40bb40:	cmp    al,0xb0
  40bb42:	add    BYTE PTR [rax],al
  40bb44:	cmp    al,0xb0
  40bb46:	add    BYTE PTR [rax],al
  40bb48:	cmp    al,0xb0
  40bb4a:	add    BYTE PTR [rax],al
  40bb4c:	cmp    al,0xb0
  40bb4e:	add    BYTE PTR [rax],al
  40bb50:	ins    DWORD PTR es:[rdi],dx
  40bb51:	jae    0x40bbc9
  40bb53:	movsxd esi,DWORD PTR [rdx+0x74]
  40bb56:	cs fs ins BYTE PTR es:[rdi],dx
  40bb59:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040c000 <.CRT>:
	...
  40c008:	(bad)  
  40c009:	adc    DWORD PTR [rax+0x0],eax
	...
  40c020:	adc    BYTE PTR [rax],dl
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax],dl
  40c029:	(bad)  
  40c02a:	add    BYTE PTR [rax],al
	...
  40c03d:	add    BYTE PTR [rax],al
  40c03f:	add    BYTE PTR [rax+0x39],al
  40c042:	add    BYTE PTR [rax],al
  40c045:	add    BYTE PTR [rax],al
  40c047:	add    BYTE PTR [rax],dl
  40c049:	cmp    DWORD PTR [rax+0x0],eax
	...

Disassembly of section .tls:

000000000040d000 <.tls>:
	...
  40d020:	add    al,dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    BYTE PTR [rax-0x30],ah
  40d02a:	add    BYTE PTR [rax],al
  40d02d:	add    BYTE PTR [rax],al
  40d02f:	add    BYTE PTR [rsi+riz*4+0x40],bl
  40d033:	add    BYTE PTR [rax],al
  40d035:	add    BYTE PTR [rax],al
  40d037:	add    BYTE PTR [rax-0x40],al
  40d03a:	add    BYTE PTR [rax],al
	...

Disassembly of section .rsrc:

000000000040e000 <.rsrc>:
	...
  40e00c:	add    BYTE PTR [rax],al
  40e00e:	add    DWORD PTR [rax],eax
  40e010:	adc    BYTE PTR [rax],al
  40e012:	add    BYTE PTR [rax],al
  40e014:	sbb    BYTE PTR [rax],al
  40e016:	add    BYTE PTR [rax+0x0],al
	...
  40e024:	add    BYTE PTR [rax],al
  40e026:	add    DWORD PTR [rax],eax
  40e028:	add    DWORD PTR [rax],eax
  40e02a:	add    BYTE PTR [rax],al
  40e02c:	xor    BYTE PTR [rax],al
  40e02e:	add    BYTE PTR [rax+0x0],al
	...
  40e03c:	add    BYTE PTR [rax],al
  40e03e:	add    DWORD PTR [rax],eax
  40e040:	or     DWORD PTR [rax+rax*1],eax
  40e043:	add    BYTE PTR [rax+0x0],cl
  40e046:	add    BYTE PTR [rax],al
  40e048:	pop    rax
  40e049:	loopne 0x40e04b
  40e04b:	add    BYTE PTR [rax+0x5],cl
  40e051:	add    BYTE PTR [rax],al
  40e053:	add    BYTE PTR [rax],al
  40e055:	add    BYTE PTR [rax],al
  40e057:	add    BYTE PTR [rax+0x3405],cl
  40e05d:	add    BYTE PTR [rsi+0x0],dl
  40e060:	push   rbx
  40e061:	add    BYTE PTR [rdi+0x0],bl
  40e064:	push   rsi
  40e065:	add    BYTE PTR [rbp+0x0],al
  40e068:	push   rdx
  40e069:	add    BYTE PTR [rbx+0x0],dl
  40e06c:	rex.WB add BYTE PTR [r15+0x0],cl
  40e070:	rex.WRX add BYTE PTR [rdi+0x0],r11b
  40e074:	rex.WB add BYTE PTR [r14+0x0],cl
  40e078:	rex.RX add BYTE PTR [rdi+0x0],r9b
  40e07c:	add    BYTE PTR [rax],al
  40e07e:	add    BYTE PTR [rax],al
  40e080:	mov    ebp,0xfeef04
  40e085:	add    BYTE PTR [rcx],al
  40e087:	add    BYTE PTR [rbx],dl
  40e089:	add    BYTE PTR [rax],al
  40e08b:	add    BYTE PTR [rax],al
  40e08d:	add    BYTE PTR [rip+0x1300],al        # 0x40f393
  40e093:	add    BYTE PTR [rax],al
  40e095:	add    BYTE PTR [rip+0x3f00],al        # 0x411f9b
  40e09b:	add    BYTE PTR [rax],al
  40e09d:	add    BYTE PTR [rax],al
  40e09f:	add    BYTE PTR [rax+rax*1],al
  40e0a2:	add    DWORD PTR [rax],eax
  40e0a4:	add    DWORD PTR [rax],eax
	...
  40e0b2:	add    BYTE PTR [rax],al
  40e0b4:	out    0x4,al
  40e0b6:	add    BYTE PTR [rax],al
  40e0b8:	add    DWORD PTR [rax],eax
  40e0ba:	push   rbx
  40e0bb:	add    BYTE PTR [rax+rax*1+0x72],dh
  40e0bf:	add    BYTE PTR [rcx+0x0],ch
  40e0c2:	outs   dx,BYTE PTR ds:[rsi]
  40e0c3:	add    BYTE PTR [rdi+0x0],ah
  40e0c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40e0ca:	ins    BYTE PTR es:[rdi],dx
  40e0cb:	add    BYTE PTR [rbp+0x0],ah
  40e0ce:	rex.WB add BYTE PTR [r14+0x0],bpl
  40e0d2:	data16 add BYTE PTR [rdi+0x0],ch
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	ret    0x4
  40e0db:	add    BYTE PTR [rcx],al
  40e0dd:	add    BYTE PTR [rax],dh
  40e0df:	add    BYTE PTR [rax+rax*1],dh
  40e0e2:	xor    BYTE PTR [rax],al
  40e0e4:	cmp    DWORD PTR [rax],eax
  40e0e6:	xor    BYTE PTR [rax],al
  40e0e8:	xor    BYTE PTR [rax],al
  40e0ea:	xor    BYTE PTR [rax],al
  40e0ec:	xor    BYTE PTR [rax],al
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	sbb    al,0x2
  40e0f2:	add    al,BYTE PTR [rcx]
  40e0f4:	add    DWORD PTR [rax],eax
  40e0f6:	rex.XB add BYTE PTR [r15+0x0],bpl
  40e0fa:	ins    DWORD PTR es:[rdi],dx
  40e0fb:	add    BYTE PTR [rbp+0x0],ch
  40e0fe:	add    BYTE PTR gs:[rsi+0x0],ch
  40e102:	je     0x40e104
  40e104:	jae    0x40e106
  40e106:	add    BYTE PTR [rax],al
  40e108:	push   rsp
  40e109:	add    BYTE PTR [rax+0x0],ch
  40e10c:	imul   eax,DWORD PTR [rax],0x200073
  40e112:	jo     0x40e114
  40e114:	jb     0x40e116
  40e116:	outs   dx,DWORD PTR ds:[rsi]
  40e117:	add    BYTE PTR [rdi+0x0],ah
  40e11a:	jb     0x40e11c
  40e11c:	(bad)  
  40e11d:	add    BYTE PTR [rbp+0x0],ch
  40e120:	and    BYTE PTR [rax],al
  40e122:	imul   eax,DWORD PTR [rax],0x200073
  40e128:	data16 add BYTE PTR [rdx+0x0],dh
  40e12c:	add    BYTE PTR gs:[rbp+0x0],ah
  40e130:	and    BYTE PTR [rax],al
  40e132:	jae    0x40e134
  40e134:	outs   dx,DWORD PTR ds:[rsi]
  40e135:	add    BYTE PTR [rsi+0x0],ah
  40e138:	je     0x40e13a
  40e13a:	ja     0x40e13c
  40e13c:	(bad)  
  40e13d:	add    BYTE PTR [rdx+0x0],dh
  40e140:	add    BYTE PTR gs:[rdx],bh
  40e143:	add    BYTE PTR [rax],ah
  40e145:	add    BYTE PTR [rcx+0x0],bh
  40e148:	outs   dx,DWORD PTR ds:[rsi]
  40e149:	add    BYTE PTR [rbp+0x0],dh
  40e14c:	and    BYTE PTR [rax],al
  40e14e:	movsxd eax,DWORD PTR [rax]
  40e150:	(bad)  
  40e151:	add    BYTE PTR [rsi+0x0],ch
  40e154:	and    BYTE PTR [rax],al
  40e156:	jb     0x40e158
  40e158:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  40e15d:	add    BYTE PTR [rbx+0x0],dh
  40e160:	je     0x40e162
  40e162:	jb     0x40e164
  40e164:	imul   eax,DWORD PTR [rax],0x750062
  40e16a:	je     0x40e16c
  40e16c:	add    BYTE PTR gs:[rax],ah
  40e16f:	add    BYTE PTR [rcx+0x0],ch
  40e172:	je     0x40e174
  40e174:	and    BYTE PTR [rax],al
  40e176:	(bad)  
  40e177:	add    BYTE PTR [rsi+0x0],ch
  40e17a:	add    BYTE PTR fs:[rdi],ch
  40e17d:	add    BYTE PTR [rdi+0x0],ch
  40e180:	jb     0x40e182
  40e182:	and    BYTE PTR [rax],al
  40e184:	ins    DWORD PTR es:[rdi],dx
  40e185:	add    BYTE PTR [rdi+0x0],ch
  40e188:	add    BYTE PTR fs:[rcx+0x0],ch
  40e18c:	data16 add BYTE PTR [rcx+0x0],bh
  40e190:	and    BYTE PTR [rax],al
  40e192:	imul   eax,DWORD PTR [rax],0x200074
  40e198:	jne    0x40e19a
  40e19a:	outs   dx,BYTE PTR ds:[rsi]
  40e19b:	add    BYTE PTR [rax+rax*1+0x65],ah
  40e19f:	add    BYTE PTR [rdx+0x0],dh
  40e1a2:	and    BYTE PTR [rax],al
  40e1a4:	je     0x40e1a6
  40e1a6:	push   0x20006500
  40e1ab:	add    BYTE PTR [rax+rax*1+0x65],dh
  40e1af:	add    BYTE PTR [rdx+0x0],dh
  40e1b2:	ins    DWORD PTR es:[rdi],dx
  40e1b3:	add    BYTE PTR [rbx+0x0],dh
  40e1b6:	and    BYTE PTR [rax],al
  40e1b8:	outs   dx,DWORD PTR ds:[rsi]
  40e1b9:	add    BYTE PTR [rsi+0x0],ah
  40e1bc:	and    BYTE PTR [rax],al
  40e1be:	je     0x40e1c0
  40e1c0:	push   0x20006500
  40e1c5:	add    BYTE PTR [rdi+0x0],al
  40e1c8:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  40e1cc:	and    BYTE PTR [rax],al
  40e1ce:	rex.RXB add BYTE PTR [r13+0x0],r12b
  40e1d2:	outs   dx,BYTE PTR ds:[rsi]
  40e1d3:	add    BYTE PTR [rbp+0x0],ah
  40e1d6:	jb     0x40e1d8
  40e1d8:	(bad)  
  40e1d9:	add    BYTE PTR [rax+rax*1+0x20],ch
  40e1dd:	add    BYTE PTR [rax+0x0],dl
  40e1e0:	jne    0x40e1e2
  40e1e2:	(bad)  
  40e1e3:	add    BYTE PTR [rax+rax*1+0x69],ch
  40e1e7:	add    BYTE PTR [rbx+0x0],ah
  40e1ea:	and    BYTE PTR [rax],al
  40e1ec:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40e1f0:	movsxd eax,DWORD PTR [rax]
  40e1f2:	add    BYTE PTR gs:[rsi+0x0],ch
  40e1f6:	jae    0x40e1f8
  40e1f8:	add    BYTE PTR gs:[rsi],ch
  40e1fb:	add    BYTE PTR [rax],ah
  40e1fd:	add    BYTE PTR [rcx+0x0],bl
  40e200:	outs   dx,DWORD PTR ds:[rsi]
  40e201:	add    BYTE PTR [rbp+0x0],dh
  40e204:	and    BYTE PTR [rax],al
  40e206:	jae    0x40e208
  40e208:	push   0x75006f00
  40e20d:	add    BYTE PTR [rax+rax*1+0x64],ch
  40e211:	add    BYTE PTR [rax],ah
  40e213:	add    BYTE PTR [rax+0x0],ch
  40e216:	(bad)  
  40e217:	add    BYTE PTR [rsi+0x0],dh
  40e21a:	add    BYTE PTR gs:[rax],ah
  40e21d:	add    BYTE PTR [rdx+0x0],dh
  40e220:	add    BYTE PTR gs:[rbx+0x0],ah
  40e224:	add    BYTE PTR gs:[rcx+0x0],ch
  40e228:	jbe    0x40e22a
  40e22a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  40e22f:	add    BYTE PTR [rcx+0x0],ah
  40e232:	and    BYTE PTR [rax],al
  40e234:	movsxd eax,DWORD PTR [rax]
  40e236:	outs   dx,DWORD PTR ds:[rsi]
  40e237:	add    BYTE PTR [rax+0x0],dh
  40e23a:	jns    0x40e23c
  40e23c:	and    BYTE PTR [rax],al
  40e23e:	outs   dx,DWORD PTR ds:[rsi]
  40e23f:	add    BYTE PTR [rsi+0x0],ah
  40e242:	and    BYTE PTR [rax],al
  40e244:	je     0x40e246
  40e246:	push   0x20006500
  40e24b:	add    BYTE PTR [rdi+0x0],al
  40e24e:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  40e252:	and    BYTE PTR [rax],al
  40e254:	rex.RXB add BYTE PTR [r13+0x0],r12b
  40e258:	outs   dx,BYTE PTR ds:[rsi]
  40e259:	add    BYTE PTR [rbp+0x0],ah
  40e25c:	jb     0x40e25e
  40e25e:	(bad)  
  40e25f:	add    BYTE PTR [rax+rax*1+0x20],ch
  40e263:	add    BYTE PTR [rax+0x0],dl
  40e266:	jne    0x40e268
  40e268:	(bad)  
  40e269:	add    BYTE PTR [rax+rax*1+0x69],ch
  40e26d:	add    BYTE PTR [rbx+0x0],ah
  40e270:	and    BYTE PTR [rax],al
  40e272:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40e276:	movsxd eax,DWORD PTR [rax]
  40e278:	add    BYTE PTR gs:[rsi+0x0],ch
  40e27c:	jae    0x40e27e
  40e27e:	add    BYTE PTR gs:[rax],ah
  40e281:	add    BYTE PTR [rcx+0x0],ah
  40e284:	ins    BYTE PTR es:[rdi],dx
  40e285:	add    BYTE PTR [rdi+0x0],ch
  40e288:	outs   dx,BYTE PTR ds:[rsi]
  40e289:	add    BYTE PTR [rdi+0x0],ah
  40e28c:	and    BYTE PTR [rax],al
  40e28e:	ja     0x40e290
  40e290:	imul   eax,DWORD PTR [rax],0x680074
  40e296:	and    BYTE PTR [rax],al
  40e298:	je     0x40e29a
  40e29a:	push   0x73006900
  40e29f:	add    BYTE PTR [rax],ah
  40e2a1:	add    BYTE PTR [rax+0x0],dh
  40e2a4:	jb     0x40e2a6
  40e2a6:	outs   dx,DWORD PTR ds:[rsi]
  40e2a7:	add    BYTE PTR [rdi+0x0],ah
  40e2aa:	jb     0x40e2ac
  40e2ac:	(bad)  
  40e2ad:	add    BYTE PTR [rbp+0x0],ch
  40e2b0:	add    BYTE PTR cs:[rax],ah
  40e2b3:	add    BYTE PTR [rcx+0x0],cl
  40e2b6:	data16 add BYTE PTR [rax],ah
  40e2b9:	add    BYTE PTR [rsi+0x0],ch
  40e2bc:	outs   dx,DWORD PTR ds:[rsi]
  40e2bd:	add    BYTE PTR [rax+rax*1+0x2c],dh
  40e2c1:	add    BYTE PTR [rax],ah
  40e2c3:	add    BYTE PTR [rbx+0x0],dh
  40e2c6:	add    BYTE PTR gs:[rbp+0x0],ah
  40e2ca:	and    BYTE PTR [rax],al
  40e2cc:	cmp    al,0x0
  40e2ce:	push   0x74007400
  40e2d3:	add    BYTE PTR [rax+0x0],dh
  40e2d6:	cmp    al,BYTE PTR [rax]
  40e2d8:	(bad)  
  40e2d9:	add    BYTE PTR [rdi],ch
  40e2db:	add    BYTE PTR [rdi+0x0],dh
  40e2de:	ja     0x40e2e0
  40e2e0:	ja     0x40e2e2
  40e2e2:	add    BYTE PTR cs:[rdi+0x0],ah
  40e2e6:	outs   dx,BYTE PTR ds:[rsi]
  40e2e7:	add    BYTE PTR [rbp+0x0],dh
  40e2ea:	add    BYTE PTR cs:[rdi+0x0],ch
  40e2ee:	jb     0x40e2f0
  40e2f0:	add    BYTE PTR [edi],ch
  40e2f3:	add    BYTE PTR [rax+rax*1+0x69],ch
  40e2f7:	add    BYTE PTR [rbx+0x0],ah
  40e2fa:	add    BYTE PTR gs:[rsi+0x0],ch
  40e2fe:	jae    0x40e300
  40e300:	add    BYTE PTR gs:[rbx+0x0],dh
  40e304:	(bad)  
  40e305:	add    BYTE PTR [rsi],bh
  40e307:	add    BYTE PTR [rsi],ch
  40e309:	add    BYTE PTR [rax],al
  40e30b:	add    BYTE PTR [rdx+0x0],dl
  40e30e:	sbb    DWORD PTR [rax],eax
  40e310:	add    DWORD PTR [rax],eax
  40e312:	rex.XB add BYTE PTR [r15+0x0],bpl
  40e316:	ins    DWORD PTR es:[rdi],dx
  40e317:	add    BYTE PTR [rax+0x0],dh
  40e31a:	(bad)  
  40e31b:	add    BYTE PTR [rsi+0x0],ch
  40e31e:	jns    0x40e320
  40e320:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40e324:	ins    DWORD PTR es:[rdi],dx
  40e325:	add    BYTE PTR [rbp+0x0],ah
  40e328:	add    BYTE PTR [rax],al
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	rex.RX add BYTE PTR [rdx+0x0],r14b
  40e330:	add    BYTE PTR gs:[rbp+0x0],ah
  40e334:	and    BYTE PTR [rax],al
  40e336:	push   rbx
  40e337:	add    BYTE PTR [rdi+0x0],ch
  40e33a:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  40e33f:	add    BYTE PTR [rcx+0x0],ah
  40e342:	jb     0x40e344
  40e344:	add    BYTE PTR gs:[rax],ah
  40e347:	add    BYTE PTR [rsi+0x0],al
  40e34a:	outs   dx,DWORD PTR ds:[rsi]
  40e34b:	add    BYTE PTR [rbp+0x0],dh
  40e34e:	outs   dx,BYTE PTR ds:[rsi]
  40e34f:	add    BYTE PTR [rax+rax*1+0x61],ah
  40e353:	add    BYTE PTR [rax+rax*1+0x69],dh
  40e357:	add    BYTE PTR [rdi+0x0],ch
  40e35a:	outs   dx,BYTE PTR ds:[rsi]
  40e35b:	add    BYTE PTR [rax],al
  40e35d:	add    BYTE PTR [rax],al
  40e35f:	add    BYTE PTR [rax+rax*1+0x10042],ch
  40e366:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40e36a:	ins    BYTE PTR es:[rdi],dx
  40e36b:	add    BYTE PTR [rbp+0x0],ah
  40e36e:	add    BYTE PTR [rbp+0x0],r12b
  40e372:	jae    0x40e374
  40e374:	movsxd eax,DWORD PTR [rax]
  40e376:	jb     0x40e378
  40e378:	imul   eax,DWORD PTR [rax],0x740070
  40e37e:	imul   eax,DWORD PTR [rax],0x6e006f
  40e384:	add    BYTE PTR [rax],al
  40e386:	add    BYTE PTR [rax],al
  40e388:	rex.RXB add BYTE PTR [r8+0x0],r10b
  40e38c:	rex.WR add BYTE PTR [rbp+0x0],r12b
  40e390:	add    BYTE PTR fs:[rax],ah
  40e393:	add    BYTE PTR [rax+0x0],dh
  40e396:	jb     0x40e398
  40e398:	outs   dx,DWORD PTR ds:[rsi]
  40e399:	add    BYTE PTR [rdi+0x0],ah
  40e39c:	jb     0x40e39e
  40e39e:	(bad)  
  40e39f:	add    BYTE PTR [rbp+0x0],ch
  40e3a2:	and    BYTE PTR [rax],al
  40e3a4:	data16 add BYTE PTR [rdi+0x0],ch
  40e3a8:	jb     0x40e3aa
  40e3aa:	and    BYTE PTR [rax],al
  40e3ac:	push   rdi
  40e3ad:	add    BYTE PTR [rcx+0x0],ch
  40e3b0:	outs   dx,BYTE PTR ds:[rsi]
  40e3b1:	add    BYTE PTR [rax+rax*1+0x6f],ah
  40e3b5:	add    BYTE PTR [rdi+0x0],dh
  40e3b8:	jae    0x40e3ba
  40e3ba:	and    BYTE PTR [rax],al
  40e3bc:	rex.WRX add BYTE PTR [rax+r8*1+0x2f],r10b
  40e3c1:	add    BYTE PTR [rdx],dh
  40e3c3:	add    BYTE PTR [rax],dh
  40e3c5:	add    BYTE PTR [rax],dh
  40e3c7:	add    BYTE PTR [rax],dh
  40e3c9:	add    BYTE PTR [rdi],ch
  40e3cb:	add    BYTE PTR [rax+0x0],bl
  40e3ce:	push   rax
  40e3cf:	add    BYTE PTR [rdi],ch
  40e3d1:	add    BYTE PTR [rsi+0x0],dl
  40e3d4:	imul   eax,DWORD PTR [rax],0x740073
  40e3da:	(bad)  
  40e3db:	add    BYTE PTR [rdi],ch
  40e3dd:	add    BYTE PTR [rdi],dh
  40e3df:	add    BYTE PTR [rax],ah
  40e3e1:	add    BYTE PTR [rcx+0x0],ah
  40e3e4:	outs   dx,BYTE PTR ds:[rsi]
  40e3e5:	add    BYTE PTR [rax+rax*1+0x20],ah
  40e3e9:	add    BYTE PTR [rdi+0x0],dl
  40e3ec:	imul   eax,DWORD PTR [rax],0x64006e
  40e3f2:	outs   dx,DWORD PTR ds:[rsi]
  40e3f3:	add    BYTE PTR [rdi+0x0],dh
  40e3f6:	jae    0x40e3f8
  40e3f8:	and    BYTE PTR [rax],al
  40e3fa:	cmp    DWORD PTR [rax],eax
  40e3fc:	xor    eax,0x39002f00
  40e401:	add    BYTE PTR [rax],bh
  40e403:	add    BYTE PTR [rdi],ch
  40e405:	add    BYTE PTR [rbp+0x0],cl
  40e408:	add    BYTE PTR [r8],r8b
  40e40b:	add    BYTE PTR [rdx],dh
  40e40d:	add    BYTE PTR [rcx],cl
  40e40f:	add    BYTE PTR [rcx],al
  40e411:	add    BYTE PTR [rsi+0x0],al
  40e414:	imul   eax,DWORD PTR [rax],0x65006c
  40e41a:	push   rsi
  40e41b:	add    BYTE PTR [rbp+0x0],ah
  40e41e:	jb     0x40e420
  40e420:	jae    0x40e422
  40e422:	imul   eax,DWORD PTR [rax],0x6e006f
  40e428:	add    BYTE PTR [rax],al
  40e42a:	add    BYTE PTR [rax],al
  40e42c:	xor    BYTE PTR [rax],al
  40e42e:	add    BYTE PTR cs:[rcx],dh
  40e431:	add    BYTE PTR [rcx],bh
  40e433:	add    BYTE PTR [rsi],ch
  40e435:	add    BYTE PTR [rip+0x31002e00],dh        # 0x3141123b
  40e43b:	add    BYTE PTR [rax],al
  40e43d:	add    BYTE PTR [rax],al
  40e43f:	add    BYTE PTR [rax+rax*1],ch
  40e442:	(bad)  
  40e443:	add    BYTE PTR [rcx],al
  40e445:	add    BYTE PTR [rcx+0x0],cl
  40e448:	outs   dx,BYTE PTR ds:[rsi]
  40e449:	add    BYTE PTR [rax+rax*1+0x65],dh
  40e44d:	add    BYTE PTR [rdx+0x0],dh
  40e450:	outs   dx,BYTE PTR ds:[rsi]
  40e451:	add    BYTE PTR [rcx+0x0],ah
  40e454:	ins    BYTE PTR es:[rdi],dx
  40e455:	add    BYTE PTR [rsi+0x0],cl
  40e458:	(bad)  
  40e459:	add    BYTE PTR [rbp+0x0],ch
  40e45c:	add    BYTE PTR gs:[rax],al
  40e45f:	add    BYTE PTR [rdx],ch
  40e461:	add    BYTE PTR [rsi],ch
  40e463:	add    BYTE PTR [rbp+0x0],ah
  40e466:	js     0x40e468
  40e468:	add    BYTE PTR gs:[rax],al
  40e46b:	add    BYTE PTR [rax+rax*1+0x18],dl
  40e46f:	add    BYTE PTR [rcx],al
  40e471:	add    BYTE PTR [rax+rax*1+0x65],cl
  40e475:	add    BYTE PTR [rdi+0x0],ah
  40e478:	(bad)  
  40e479:	add    BYTE PTR [rax+rax*1+0x43],ch
  40e47d:	add    BYTE PTR [rdi+0x0],ch
  40e480:	jo     0x40e482
  40e482:	jns    0x40e484
  40e484:	jb     0x40e486
  40e486:	imul   eax,DWORD PTR [rax],0x680067
  40e48c:	je     0x40e48e
  40e48e:	add    BYTE PTR [rax],al
  40e490:	rex.XB add BYTE PTR [r15+0x0],bpl
  40e494:	jo     0x40e496
  40e496:	jns    0x40e498
  40e498:	jb     0x40e49a
  40e49a:	imul   eax,DWORD PTR [rax],0x680067
  40e4a0:	je     0x40e4a2
  40e4a2:	and    BYTE PTR [rax],al
  40e4a4:	sub    BYTE PTR [rax],al
  40e4a6:	rex.XB add BYTE PTR [r9],bpl
  40e4a9:	add    BYTE PTR [rax],ah
  40e4ab:	add    BYTE PTR [rcx],dh
  40e4ad:	add    BYTE PTR [rcx],bh
  40e4af:	add    BYTE PTR [rcx],bh
  40e4b1:	add    BYTE PTR [rip+0x32002d00],dh        # 0x324111b7
  40e4b7:	add    BYTE PTR [rax],dh
  40e4b9:	add    BYTE PTR [rcx],dh
  40e4bb:	add    BYTE PTR [rbx],dh
  40e4bd:	add    BYTE PTR [rax],al
  40e4bf:	add    BYTE PTR [rdx],ch
  40e4c1:	add    BYTE PTR [rcx],al
  40e4c3:	add    BYTE PTR [rcx],al
  40e4c5:	add    BYTE PTR [rax+rax*1+0x65],cl
  40e4c9:	add    BYTE PTR [rdi+0x0],ah
  40e4cc:	(bad)  
  40e4cd:	add    BYTE PTR [rax+rax*1+0x54],ch
  40e4d1:	add    BYTE PTR [rdx+0x0],dh
  40e4d4:	(bad)  
  40e4d5:	add    BYTE PTR [rax+rax*1+0x65],ah
  40e4d9:	add    BYTE PTR [rbp+0x0],ch
  40e4dc:	(bad)  
  40e4dd:	add    BYTE PTR [rdx+0x0],dh
  40e4e0:	imul   eax,DWORD PTR [rax],0x73
	...
  40e4eb:	add    BYTE PTR [rax+rax*1],dh
  40e4ee:	(bad)  
  40e4ef:	add    BYTE PTR [rcx],al
  40e4f1:	add    BYTE PTR [rdi+0x0],cl
  40e4f4:	jb     0x40e4f6
  40e4f6:	imul   eax,DWORD PTR [rax],0x690067
  40e4fc:	outs   dx,BYTE PTR ds:[rsi]
  40e4fd:	add    BYTE PTR [rcx+0x0],ah
  40e500:	ins    BYTE PTR es:[rdi],dx
  40e501:	add    BYTE PTR [rsi+0x0],al
  40e504:	imul   eax,DWORD PTR [rax],0x65006c
  40e50a:	outs   dx,BYTE PTR ds:[rsi]
  40e50b:	add    BYTE PTR [rcx+0x0],ah
  40e50e:	ins    DWORD PTR es:[rdi],dx
  40e50f:	add    BYTE PTR [rbp+0x0],ah
  40e512:	add    BYTE PTR [rax],al
  40e514:	sub    al,BYTE PTR [rax]
  40e516:	add    BYTE PTR cs:[rbp+0x0],ah
  40e51a:	js     0x40e51c
  40e51c:	add    BYTE PTR gs:[rax],al
  40e51f:	add    BYTE PTR [rax+rax*1+0x12],al
  40e523:	add    BYTE PTR [rcx],al
  40e525:	add    BYTE PTR [rax+0x0],dl
  40e528:	jb     0x40e52a
  40e52a:	outs   dx,DWORD PTR ds:[rsi]
  40e52b:	add    BYTE PTR [rax+rax*1+0x75],ah
  40e52f:	add    BYTE PTR [rbx+0x0],ah
  40e532:	je     0x40e534
  40e534:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40e538:	ins    DWORD PTR es:[rdi],dx
  40e539:	add    BYTE PTR [rbp+0x0],ah
  40e53c:	add    BYTE PTR [rax],al
  40e53e:	add    BYTE PTR [rax],al
  40e540:	add    BYTE PTR [ebp+0x0],ah
  40e544:	je     0x40e546
  40e546:	je     0x40e548
  40e548:	add    BYTE PTR gs:[rax+0x0],bh
  40e54c:	je     0x40e54e
  40e54e:	and    BYTE PTR [rax],al
  40e550:	jne    0x40e552
  40e552:	je     0x40e554
  40e554:	imul   eax,DWORD PTR [rax],0x69006c
  40e55a:	je     0x40e55c
  40e55c:	imul   eax,DWORD PTR [rax],0x730065
  40e562:	add    BYTE PTR [rax],al
  40e564:	add    BYTE PTR ss:[rcx],cl
  40e567:	add    BYTE PTR [rcx],al
  40e569:	add    BYTE PTR [rax+0x0],dl
  40e56c:	jb     0x40e56e
  40e56e:	outs   dx,DWORD PTR ds:[rsi]
  40e56f:	add    BYTE PTR [rax+rax*1+0x75],ah
  40e573:	add    BYTE PTR [rbx+0x0],ah
  40e576:	je     0x40e578
  40e578:	push   rsi
  40e579:	add    BYTE PTR [rbp+0x0],ah
  40e57c:	jb     0x40e57e
  40e57e:	jae    0x40e580
  40e580:	imul   eax,DWORD PTR [rax],0x6e006f
  40e586:	add    BYTE PTR [rax],al
  40e588:	xor    BYTE PTR [rax],al
  40e58a:	add    BYTE PTR cs:[rcx],dh
  40e58d:	add    BYTE PTR [rcx],bh
  40e58f:	add    BYTE PTR [rsi],ch
  40e591:	add    BYTE PTR [rip+0x31002e00],dh        # 0x31411397
  40e597:	add    BYTE PTR [rax],al
  40e599:	add    BYTE PTR [rax],al
  40e59b:	add    BYTE PTR [rax+rax*1+0x0],al
  40e59f:	add    BYTE PTR [rcx],al
  40e5a1:	add    BYTE PTR [rsi+0x0],dl
  40e5a4:	(bad)  
  40e5a5:	add    BYTE PTR [rdx+0x0],dh
  40e5a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40e5ac:	ins    BYTE PTR es:[rdi],dx
  40e5ad:	add    BYTE PTR [rbp+0x0],ah
  40e5b0:	rex.WB add BYTE PTR [r14+0x0],bpl
  40e5b4:	data16 add BYTE PTR [rdi+0x0],ch
  40e5b8:	add    BYTE PTR [rax],al
  40e5ba:	add    BYTE PTR [rax],al
  40e5bc:	and    al,0x0
  40e5be:	add    al,0x0
  40e5c0:	add    BYTE PTR [rax],al
  40e5c2:	push   rsp
  40e5c3:	add    BYTE PTR [rdx+0x0],dh
  40e5c6:	(bad)  
  40e5c7:	add    BYTE PTR [rsi+0x0],ch
  40e5ca:	jae    0x40e5cc
  40e5cc:	ins    BYTE PTR es:[rdi],dx
  40e5cd:	add    BYTE PTR [rcx+0x0],ah
  40e5d0:	je     0x40e5d2
  40e5d2:	imul   eax,DWORD PTR [rax],0x6e006f
  40e5d8:	add    BYTE PTR [rax],al
  40e5da:	add    BYTE PTR [rax],al
  40e5dc:	or     DWORD PTR [rax+rax*1],eax
	...
