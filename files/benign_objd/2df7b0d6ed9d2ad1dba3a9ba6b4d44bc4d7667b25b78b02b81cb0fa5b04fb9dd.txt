
2df7b0d6ed9d2ad1dba3a9ba6b4d44bc4d7667b25b78b02b81cb0fa5b04fb9dd.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xbe55]        # 0x40ce70
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xbe56]        # 0x40ce80
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xbe59]        # 0x40ce90
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xbe1c]        # 0x40ce60
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xbcaf]        # 0x40cd00
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xbdf1]        # 0x40ce50
  40105f:	mov    DWORD PTR [rip+0xefa3],edx        # 0x410008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x407ed0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401dd0
  401081:	mov    rdx,QWORD PTR [rip+0xbd08]        # 0x40cd90
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xbcee]        # 0x40cd80
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xbd74]        # 0x40ce10
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xbc8b]        # 0x40cd30
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4019b0
  4010af:	mov    rax,QWORD PTR [rip+0xbbda]        # 0x40cc90
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x407ed0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xb89]        # 0x401cb0
  401127:	call   0x401ca0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xbcd5]        # 0x40ce40
  40116b:	lea    r8,[rip+0xeea6]        # 0x410018
  401172:	lea    rdx,[rip+0xeea7]        # 0x410020
  401179:	lea    rcx,[rip+0xeea8]        # 0x410028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xee78],eax        # 0x410000
  401188:	lea    rax,[rip+0xee71]        # 0x410000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xbc65]        # 0x40ce00
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x407ee8
  4011a3:	mov    DWORD PTR [rip+0xee67],eax        # 0x410010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xbc8a]        # 0x40ce50
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xbb6b]        # 0x40cd60
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x110d2]        # 0x4122d4
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xbb47]        # 0x40cd70
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xedba],0x1        # 0x410004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xba7c]        # 0x40cce0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401fc0
  40127d:	lea    rcx,[rip+0x12dc]        # 0x402560
  401284:	call   QWORD PTR [rip+0x11042]        # 0x4122cc
  40128a:	mov    rdx,QWORD PTR [rip+0xbabf]        # 0x40cd50
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402470
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x407f10
  4012a5:	call   0x401db0
  4012aa:	mov    rax,QWORD PTR [rip+0xba4f]        # 0x40cd00
  4012b1:	mov    QWORD PTR [rip+0x101a0],rax        # 0x411458
  4012b8:	mov    rax,QWORD PTR [rip+0xba61]        # 0x40cd20
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x10139],rax        # 0x411450
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x9cca],eax        # 0x40b000
  401336:	mov    r12d,DWORD PTR [rip+0xeceb]        # 0x410028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x407e28
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xecc2]        # 0x410020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x407df0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x407e28
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x407e20
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xec6a],rbp        # 0x410020
  4013b6:	call   0x401980
  4013bb:	mov    rax,QWORD PTR [rip+0xb94e]        # 0x40cd10
  4013c2:	mov    rdx,QWORD PTR [rip+0xec4f]        # 0x410018
  4013c9:	mov    ecx,DWORD PTR [rip+0xec59]        # 0x410028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xec3c]        # 0x410018
  4013dc:	mov    rdx,QWORD PTR [rip+0xec3d]        # 0x410020
  4013e3:	call   0x407fe0
  4013e8:	mov    ecx,DWORD PTR [rip+0xec1a]        # 0x410008
  4013ee:	mov    DWORD PTR [rip+0xec18],eax        # 0x41000c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xec02]        # 0x410004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x407eb8
  40140b:	mov    eax,DWORD PTR [rip+0xebfb]        # 0x41000c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xb939]        # 0x40cd70
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x407ec0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xb96d]        # 0x40cdd0
  401463:	mov    rcx,QWORD PTR [rip+0xb956]        # 0x40cdc0
  40146a:	call   0x407ea8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x10de3]        # 0x41227c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xb949]        # 0x40cdf0
  4014a7:	mov    rcx,QWORD PTR [rip+0xb932]        # 0x40cde0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x407ea8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x407e58
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xb975]        # 0x40ce50
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4019c0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xb945]        # 0x40ce50
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4019c0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	movaps XMMWORD PTR [rsp+0x20],xmm6
  401539:	pxor   xmm1,xmm1
  40153d:	ucomisd xmm1,xmm0
  401541:	movapd xmm1,xmm0
  401545:	ja     0x401570
  401547:	addsd  xmm1,QWORD PTR [rip+0xaf41]        # 0x40c490
  40154f:	ucomisd xmm1,QWORD PTR [rip+0xaf49]        # 0x40c4a0
  401557:	ja     0x401586
  401559:	cvttsd2si eax,xmm1
  40155d:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  401562:	add    rsp,0x38
  401566:	ret    
  401567:	nop    WORD PTR [rax+rax*1+0x0]
  401570:	subsd  xmm1,QWORD PTR [rip+0xaf18]        # 0x40c490
  401578:	movsd  xmm2,QWORD PTR [rip+0xaf18]        # 0x40c498
  401580:	ucomisd xmm2,xmm1
  401584:	jbe    0x401559
  401586:	movapd xmm6,xmm0
  40158a:	call   QWORD PTR [rip+0x10d9c]        # 0x41232c
  401590:	movapd xmm2,xmm6
  401594:	lea    rcx,[rax+0x60]
  401598:	movq   r8,xmm6
  40159d:	lea    rdx,[rip+0xaa5c]        # 0x40c000
  4015a4:	call   0x407e50
  4015a9:	mov    ecx,0x1
  4015ae:	call   0x407e58
  4015b3:	nop
  4015b4:	xchg   ax,ax
  4015b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015c0:	sub    rsp,0x28
  4015c4:	mov    eax,DWORD PTR [rip+0xea6e]        # 0x410038
  4015ca:	addsd  xmm0,QWORD PTR [rip+0xea5e]        # 0x410030
  4015d2:	test   eax,eax
  4015d4:	jne    0x401600
  4015d6:	mov    rcx,QWORD PTR [rip+0xfe83]        # 0x411460
  4015dd:	movapd xmm2,xmm0
  4015e1:	movq   r8,xmm0
  4015e6:	lea    rdx,[rip+0xaa56]        # 0x40c043
  4015ed:	add    rsp,0x28
  4015f1:	jmp    0x407e50
  4015f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401600:	call   0x401530
  401605:	mov    rcx,QWORD PTR [rip+0xfe54]        # 0x411460
  40160c:	lea    rdx,[rip+0xaa2c]        # 0x40c03f
  401613:	mov    r8d,eax
  401616:	add    rsp,0x28
  40161a:	jmp    0x407e50
  40161f:	nop
  401620:	push   rbx
  401621:	sub    rsp,0x30
  401625:	movaps XMMWORD PTR [rsp+0x20],xmm6
  40162a:	mov    eax,DWORD PTR [rip+0xea08]        # 0x410038
  401630:	test   eax,eax
  401632:	jne    0x401673
  401634:	movsd  xmm2,QWORD PTR [rip+0xe9f4]        # 0x410030
  40163c:	mov    rcx,QWORD PTR [rip+0xfe1d]        # 0x411460
  401643:	lea    rdx,[rip+0xaa08]        # 0x40c052
  40164a:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  40164f:	addsd  xmm1,xmm2
  401653:	addsd  xmm0,xmm2
  401657:	movapd xmm3,xmm1
  40165b:	movq   r9,xmm1
  401660:	movapd xmm2,xmm0
  401664:	movq   r8,xmm0
  401669:	add    rsp,0x30
  40166d:	pop    rbx
  40166e:	jmp    0x407e50
  401673:	addsd  xmm1,QWORD PTR [rip+0xe9b5]        # 0x410030
  40167b:	movapd xmm6,xmm0
  40167f:	movapd xmm0,xmm1
  401683:	call   0x401530
  401688:	addsd  xmm6,QWORD PTR [rip+0xe9a0]        # 0x410030
  401690:	mov    ebx,eax
  401692:	movapd xmm0,xmm6
  401696:	call   0x401530
  40169b:	mov    rcx,QWORD PTR [rip+0xfdbe]        # 0x411460
  4016a2:	lea    rdx,[rip+0xa9a2]        # 0x40c04b
  4016a9:	mov    r8d,eax
  4016ac:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  4016b1:	mov    r9d,ebx
  4016b4:	add    rsp,0x30
  4016b8:	pop    rbx
  4016b9:	jmp    0x407e50
  4016be:	xchg   ax,ax
  4016c0:	push   rsi
  4016c1:	push   rbx
  4016c2:	sub    rsp,0x58
  4016c6:	movaps XMMWORD PTR [rsp+0x30],xmm6
  4016cb:	movaps XMMWORD PTR [rsp+0x40],xmm7
  4016d0:	movapd xmm6,xmm0
  4016d4:	mov    eax,DWORD PTR [rip+0xe95e]        # 0x410038
  4016da:	movapd xmm7,xmm1
  4016de:	test   eax,eax
  4016e0:	jne    0x401733
  4016e2:	movsd  xmm1,QWORD PTR [rip+0xe946]        # 0x410030
  4016ea:	mov    rcx,QWORD PTR [rip+0xfd6f]        # 0x411460
  4016f1:	lea    rdx,[rip+0xa973]        # 0x40c06b
  4016f8:	addsd  xmm7,xmm1
  4016fc:	addsd  xmm6,xmm1
  401700:	addsd  xmm1,xmm2
  401704:	movapd xmm3,xmm7
  401708:	movq   r9,xmm7
  40170d:	movapd xmm2,xmm6
  401711:	movq   r8,xmm6
  401716:	movsd  QWORD PTR [rsp+0x20],xmm1
  40171c:	call   0x407e50
  401721:	nop
  401722:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  401727:	movaps xmm7,XMMWORD PTR [rsp+0x40]
  40172c:	add    rsp,0x58
  401730:	pop    rbx
  401731:	pop    rsi
  401732:	ret    
  401733:	addsd  xmm2,QWORD PTR [rip+0xe8f5]        # 0x410030
  40173b:	movapd xmm0,xmm2
  40173f:	call   0x401530
  401744:	addsd  xmm7,QWORD PTR [rip+0xe8e4]        # 0x410030
  40174c:	mov    esi,eax
  40174e:	movapd xmm0,xmm7
  401752:	call   0x401530
  401757:	addsd  xmm6,QWORD PTR [rip+0xe8d1]        # 0x410030
  40175f:	mov    ebx,eax
  401761:	movapd xmm0,xmm6
  401765:	call   0x401530
  40176a:	mov    rcx,QWORD PTR [rip+0xfcef]        # 0x411460
  401771:	lea    rdx,[rip+0xa8e9]        # 0x40c061
  401778:	mov    r8d,eax
  40177b:	mov    DWORD PTR [rsp+0x20],esi
  40177f:	mov    r9d,ebx
  401782:	call   0x407e50
  401787:	jmp    0x401722
  401789:	nop    DWORD PTR [rax+0x0]
  401790:	mov    ecx,DWORD PTR [rip+0x98aa]        # 0x40b040
  401796:	mov    edx,0x834e0b5f
  40179b:	mov    eax,ecx
  40179d:	imul   edx
  40179f:	mov    eax,ecx
  4017a1:	sar    eax,0x1f
  4017a4:	add    edx,ecx
  4017a6:	sar    edx,0x10
  4017a9:	sub    edx,eax
  4017ab:	imul   eax,edx,0x1f31d
  4017b1:	imul   edx,edx,0xfffff4ec
  4017b7:	sub    ecx,eax
  4017b9:	imul   eax,ecx,0x41a7
  4017bf:	add    eax,edx
  4017c1:	test   eax,eax
  4017c3:	jg     0x4017ca
  4017c5:	add    eax,0x7fffffff
  4017ca:	mov    DWORD PTR [rip+0x9870],eax        # 0x40b040
  4017d0:	ret    
  4017d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4017d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017e0:	test   ecx,ecx
  4017e2:	jle    0x401800
  4017e4:	cmp    ecx,0x7fffffff
  4017ea:	mov    eax,0x7ffffffe
  4017ef:	cmove  ecx,eax
  4017f2:	mov    DWORD PTR [rip+0x9848],ecx        # 0x40b040
  4017f8:	ret    
  4017f9:	nop    DWORD PTR [rax+0x0]
  401800:	mov    DWORD PTR [rip+0x9836],0x1        # 0x40b040
  40180a:	ret    
  40180b:	nop
  40180c:	nop
  40180d:	nop
  40180e:	nop
  40180f:	nop
  401810:	push   rbx
  401811:	sub    rsp,0x30
  401815:	mov    rbx,rcx
  401818:	mov    rcx,QWORD PTR [rip+0xfc49]        # 0x411468
  40181f:	call   0x401dc0
  401824:	cmp    rax,0xffffffffffffffff
  401828:	mov    QWORD PTR [rsp+0x20],rax
  40182d:	je     0x4018a5
  40182f:	mov    ecx,0x8
  401834:	call   0x407ea0
  401839:	mov    rcx,QWORD PTR [rip+0xfc28]        # 0x411468
  401840:	call   0x401dc0
  401845:	mov    rcx,QWORD PTR [rip+0xfc24]        # 0x411470
  40184c:	mov    QWORD PTR [rsp+0x20],rax
  401851:	call   0x401dc0
  401856:	lea    rdx,[rsp+0x20]
  40185b:	lea    r8,[rsp+0x28]
  401860:	mov    rcx,rbx
  401863:	mov    QWORD PTR [rsp+0x28],rax
  401868:	call   0x407ef0
  40186d:	mov    rcx,QWORD PTR [rsp+0x20]
  401872:	mov    rbx,rax
  401875:	call   0x401dd0
  40187a:	mov    rcx,QWORD PTR [rsp+0x28]
  40187f:	mov    QWORD PTR [rip+0xfbe2],rax        # 0x411468
  401886:	call   0x401dd0
  40188b:	mov    ecx,0x8
  401890:	mov    QWORD PTR [rip+0xfbd9],rax        # 0x411470
  401897:	call   0x407e88
  40189c:	mov    rax,rbx
  40189f:	add    rsp,0x30
  4018a3:	pop    rbx
  4018a4:	ret    
  4018a5:	mov    rax,QWORD PTR [rip+0xb494]        # 0x40cd40
  4018ac:	mov    rcx,rbx
  4018af:	call   QWORD PTR [rax]
  4018b1:	add    rsp,0x30
  4018b5:	pop    rbx
  4018b6:	ret    
  4018b7:	nop    WORD PTR [rax+rax*1+0x0]
  4018c0:	sub    rsp,0x28
  4018c4:	call   0x401810
  4018c9:	test   rax,rax
  4018cc:	sete   al
  4018cf:	movzx  eax,al
  4018d2:	neg    eax
  4018d4:	add    rsp,0x28
  4018d8:	ret    
  4018d9:	nop
  4018da:	nop
  4018db:	nop
  4018dc:	nop
  4018dd:	nop
  4018de:	nop
  4018df:	nop
  4018e0:	sub    rsp,0x28
  4018e4:	mov    rax,QWORD PTR [rip+0x9d55]        # 0x40b640
  4018eb:	mov    rax,QWORD PTR [rax]
  4018ee:	test   rax,rax
  4018f1:	je     0x401910
  4018f3:	call   rax
  4018f5:	mov    rax,QWORD PTR [rip+0x9d44]        # 0x40b640
  4018fc:	lea    rdx,[rax+0x8]
  401900:	mov    rax,QWORD PTR [rax+0x8]
  401904:	mov    QWORD PTR [rip+0x9d35],rdx        # 0x40b640
  40190b:	test   rax,rax
  40190e:	jne    0x4018f3
  401910:	add    rsp,0x28
  401914:	ret    
  401915:	nop
  401916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401920:	push   rsi
  401921:	push   rbx
  401922:	sub    rsp,0x28
  401926:	mov    rsi,QWORD PTR [rip+0xb373]        # 0x40cca0
  40192d:	mov    rax,QWORD PTR [rsi]
  401930:	cmp    eax,0xffffffff
  401933:	mov    ebx,eax
  401935:	je     0x401960
  401937:	test   ebx,ebx
  401939:	je     0x40194a
  40193b:	nop    DWORD PTR [rax+rax*1+0x0]
  401940:	mov    eax,ebx
  401942:	call   QWORD PTR [rsi+rax*8]
  401945:	sub    ebx,0x1
  401948:	jne    0x401940
  40194a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4018e0
  401951:	add    rsp,0x28
  401955:	pop    rbx
  401956:	pop    rsi
  401957:	jmp    0x4018c0
  40195c:	nop    DWORD PTR [rax+0x0]
  401960:	xor    ebx,ebx
  401962:	jmp    0x401966
  401964:	mov    ebx,eax
  401966:	lea    edx,[rbx+0x1]
  401969:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40196e:	mov    rax,rdx
  401971:	jne    0x401964
  401973:	jmp    0x401937
  401975:	nop
  401976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401980:	mov    eax,DWORD PTR [rip+0xe6ba]        # 0x410040
  401986:	test   eax,eax
  401988:	je     0x401990
  40198a:	repz ret 
  40198c:	nop    DWORD PTR [rax+0x0]
  401990:	mov    DWORD PTR [rip+0xe6a6],0x1        # 0x410040
  40199a:	jmp    0x401920
  40199c:	nop
  40199d:	nop
  40199e:	nop
  40199f:	nop
  4019a0:	mov    rax,QWORD PTR [rip+0x1098d]        # 0x412334
  4019a7:	rex.W jmp rax
  4019aa:	nop
  4019ab:	nop
  4019ac:	nop
  4019ad:	nop
  4019ae:	nop
  4019af:	nop
  4019b0:	xor    eax,eax
  4019b2:	ret    
  4019b3:	nop
  4019b4:	nop
  4019b5:	nop
  4019b6:	nop
  4019b7:	nop
  4019b8:	nop
  4019b9:	nop
  4019ba:	nop
  4019bb:	nop
  4019bc:	nop
  4019bd:	nop
  4019be:	nop
  4019bf:	nop
  4019c0:	push   r12
  4019c2:	push   rbp
  4019c3:	push   rdi
  4019c4:	push   rsi
  4019c5:	push   rbx
  4019c6:	sub    rsp,0x40
  4019ca:	mov    rbx,QWORD PTR [rip+0x9cff]        # 0x40b6d0
  4019d1:	movabs rax,0x2b992ddfa232
  4019db:	mov    QWORD PTR [rsp+0x20],0x0
  4019e4:	cmp    rbx,rax
  4019e7:	je     0x401a00
  4019e9:	not    rbx
  4019ec:	mov    QWORD PTR [rip+0x9ced],rbx        # 0x40b6e0
  4019f3:	add    rsp,0x40
  4019f7:	pop    rbx
  4019f8:	pop    rsi
  4019f9:	pop    rdi
  4019fa:	pop    rbp
  4019fb:	pop    r12
  4019fd:	ret    
  4019fe:	xchg   ax,ax
  401a00:	lea    rcx,[rsp+0x20]
  401a05:	call   QWORD PTR [rip+0x10879]        # 0x412284
  401a0b:	mov    r12,QWORD PTR [rsp+0x20]
  401a10:	call   QWORD PTR [rip+0x1084e]        # 0x412264
  401a16:	mov    ebp,eax
  401a18:	call   QWORD PTR [rip+0x1084e]        # 0x41226c
  401a1e:	mov    edi,eax
  401a20:	call   QWORD PTR [rip+0x10866]        # 0x41228c
  401a26:	lea    rcx,[rsp+0x30]
  401a2b:	mov    esi,eax
  401a2d:	call   QWORD PTR [rip+0x10871]        # 0x4122a4
  401a33:	xor    r12,QWORD PTR [rsp+0x30]
  401a38:	mov    edx,edi
  401a3a:	movabs rax,0xffffffffffff
  401a44:	xor    rbp,r12
  401a47:	mov    rdi,rbp
  401a4a:	xor    rdi,rdx
  401a4d:	mov    edx,esi
  401a4f:	xor    rdi,rdx
  401a52:	mov    rsi,rdi
  401a55:	and    rsi,rax
  401a58:	cmp    rsi,rbx
  401a5b:	je     0x401a80
  401a5d:	mov    rax,rsi
  401a60:	not    rax
  401a63:	mov    QWORD PTR [rip+0x9c66],rsi        # 0x40b6d0
  401a6a:	mov    QWORD PTR [rip+0x9c6f],rax        # 0x40b6e0
  401a71:	add    rsp,0x40
  401a75:	pop    rbx
  401a76:	pop    rsi
  401a77:	pop    rdi
  401a78:	pop    rbp
  401a79:	pop    r12
  401a7b:	ret    
  401a7c:	nop    DWORD PTR [rax+0x0]
  401a80:	movabs rax,0xffffd466d2205dcc
  401a8a:	movabs rsi,0x2b992ddfa233
  401a94:	jmp    0x401a63
  401a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401aa0:	push   rbp
  401aa1:	push   rsi
  401aa2:	push   rbx
  401aa3:	mov    rbp,rsp
  401aa6:	sub    rsp,0x70
  401aaa:	mov    rsi,rcx
  401aad:	lea    rcx,[rip+0xe5cc]        # 0x410080
  401ab4:	call   QWORD PTR [rip+0x107fa]        # 0x4122b4
  401aba:	mov    rbx,QWORD PTR [rip+0xe6b7]        # 0x410178
  401ac1:	xor    r8d,r8d
  401ac4:	lea    rdx,[rbp-0x28]
  401ac8:	mov    rcx,rbx
  401acb:	call   QWORD PTR [rip+0x107eb]        # 0x4122bc
  401ad1:	test   rax,rax
  401ad4:	mov    r9,rax
  401ad7:	je     0x401b80
  401add:	lea    rax,[rbp-0x20]
  401ae1:	mov    QWORD PTR [rsp+0x38],0x0
  401aea:	mov    r8,rbx
  401aed:	mov    rdx,QWORD PTR [rbp-0x28]
  401af1:	xor    ecx,ecx
  401af3:	mov    QWORD PTR [rsp+0x30],rax
  401af8:	lea    rax,[rbp-0x18]
  401afc:	mov    QWORD PTR [rsp+0x28],rax
  401b01:	lea    rax,[rip+0xe578]        # 0x410080
  401b08:	mov    QWORD PTR [rsp+0x20],rax
  401b0d:	call   QWORD PTR [rip+0x107b1]        # 0x4122c4
  401b13:	mov    rax,QWORD PTR [rip+0xe65e]        # 0x410178
  401b1a:	xor    ecx,ecx
  401b1c:	mov    QWORD PTR [rip+0xe5dd],rsi        # 0x410100
  401b23:	mov    DWORD PTR [rip+0xea53],0xc0000409        # 0x410580
  401b2d:	mov    DWORD PTR [rip+0xea4d],0x1        # 0x410584
  401b37:	mov    QWORD PTR [rip+0xea52],rax        # 0x410590
  401b3e:	mov    rax,QWORD PTR [rip+0x9b8b]        # 0x40b6d0
  401b45:	mov    QWORD PTR [rbp-0x10],rax
  401b49:	mov    rax,QWORD PTR [rip+0x9b90]        # 0x40b6e0
  401b50:	mov    QWORD PTR [rbp-0x8],rax
  401b54:	call   QWORD PTR [rip+0x10772]        # 0x4122cc
  401b5a:	lea    rcx,[rip+0xa9af]        # 0x40c510
  401b61:	call   QWORD PTR [rip+0x10785]        # 0x4122ec
  401b67:	call   QWORD PTR [rip+0x106ef]        # 0x41225c
  401b6d:	mov    edx,0xc0000409
  401b72:	mov    rcx,rax
  401b75:	call   QWORD PTR [rip+0x10761]        # 0x4122dc
  401b7b:	call   0x407e80
  401b80:	mov    rax,QWORD PTR [rbp+0x18]
  401b84:	mov    QWORD PTR [rip+0xe5ed],rax        # 0x410178
  401b8b:	lea    rax,[rbp+0x8]
  401b8f:	mov    QWORD PTR [rip+0xe582],rax        # 0x410118
  401b96:	jmp    0x401b13
  401b9b:	nop
  401b9c:	nop
  401b9d:	nop
  401b9e:	nop
  401b9f:	nop
  401ba0:	sub    rsp,0x28
  401ba4:	test   edx,edx
  401ba6:	je     0x401bc0
  401ba8:	cmp    edx,0x3
  401bab:	je     0x401bc0
  401bad:	mov    eax,0x1
  401bb2:	add    rsp,0x28
  401bb6:	ret    
  401bb7:	nop    WORD PTR [rax+rax*1+0x0]
  401bc0:	call   0x4028b0
  401bc5:	mov    eax,0x1
  401bca:	add    rsp,0x28
  401bce:	ret    
  401bcf:	nop
  401bd0:	push   rsi
  401bd1:	push   rbx
  401bd2:	sub    rsp,0x28
  401bd6:	mov    rax,QWORD PTR [rip+0xb0a3]        # 0x40cc80
  401bdd:	cmp    DWORD PTR [rax],0x2
  401be0:	je     0x401be8
  401be2:	mov    DWORD PTR [rax],0x2
  401be8:	cmp    edx,0x2
  401beb:	je     0x401c00
  401bed:	cmp    edx,0x1
  401bf0:	je     0x401c32
  401bf2:	mov    eax,0x1
  401bf7:	add    rsp,0x28
  401bfb:	pop    rbx
  401bfc:	pop    rsi
  401bfd:	ret    
  401bfe:	xchg   ax,ax
  401c00:	lea    rbx,[rip+0x11459]        # 0x413060
  401c07:	lea    rsi,[rip+0x11452]        # 0x413060
  401c0e:	cmp    rbx,rsi
  401c11:	je     0x401bf2
  401c13:	mov    rax,QWORD PTR [rbx]
  401c16:	test   rax,rax
  401c19:	je     0x401c1d
  401c1b:	call   rax
  401c1d:	add    rbx,0x8
  401c21:	cmp    rbx,rsi
  401c24:	jne    0x401c13
  401c26:	mov    eax,0x1
  401c2b:	add    rsp,0x28
  401c2f:	pop    rbx
  401c30:	pop    rsi
  401c31:	ret    
  401c32:	call   0x4028b0
  401c37:	jmp    0x401bf2
  401c39:	nop    DWORD PTR [rax+0x0]
  401c40:	xor    eax,eax
  401c42:	ret    
  401c43:	nop
  401c44:	nop
  401c45:	nop
  401c46:	nop
  401c47:	nop
  401c48:	nop
  401c49:	nop
  401c4a:	nop
  401c4b:	nop
  401c4c:	nop
  401c4d:	nop
  401c4e:	nop
  401c4f:	nop
  401c50:	sub    rsp,0x58
  401c54:	mov    rax,QWORD PTR [rip+0xea05]        # 0x410660
  401c5b:	test   rax,rax
  401c5e:	je     0x401c8c
  401c60:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401c69:	mov    DWORD PTR [rsp+0x20],ecx
  401c6d:	lea    rcx,[rsp+0x20]
  401c72:	mov    QWORD PTR [rsp+0x28],rdx
  401c77:	movsd  QWORD PTR [rsp+0x30],xmm2
  401c7d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401c83:	movsd  QWORD PTR [rsp+0x40],xmm0
  401c89:	call   rax
  401c8b:	nop
  401c8c:	add    rsp,0x58
  401c90:	ret    
  401c91:	nop    DWORD PTR [rax+rax*1+0x0]
  401c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ca0:	mov    QWORD PTR [rip+0xe9b9],rcx        # 0x410660
  401ca7:	jmp    0x407ec8
  401cac:	nop    DWORD PTR [rax+0x0]
  401cb0:	push   rsi
  401cb1:	push   rbx
  401cb2:	sub    rsp,0x78
  401cb6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401cbb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401cc0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401cc6:	cmp    DWORD PTR [rcx],0x6
  401cc9:	ja     0x401da0
  401ccf:	mov    edx,DWORD PTR [rcx]
  401cd1:	lea    rax,[rip+0xa97c]        # 0x40c654
  401cd8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401cdc:	add    rax,rdx
  401cdf:	jmp    rax
  401ce1:	lea    rbx,[rip+0xa848]        # 0x40c530
  401ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cf0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401cf6:	mov    rsi,QWORD PTR [rcx+0x8]
  401cfa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401cff:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401d04:	call   0x407ee0
  401d09:	movsd  QWORD PTR [rsp+0x30],xmm8
  401d10:	lea    rcx,[rax+0x60]
  401d14:	lea    rdx,[rip+0xa90d]        # 0x40c628
  401d1b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401d21:	mov    r9,rsi
  401d24:	mov    r8,rbx
  401d27:	movsd  QWORD PTR [rsp+0x20],xmm6
  401d2d:	call   0x407e50
  401d32:	nop
  401d33:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401d38:	xor    eax,eax
  401d3a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401d3f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401d45:	add    rsp,0x78
  401d49:	pop    rbx
  401d4a:	pop    rsi
  401d4b:	ret    
  401d4c:	nop    DWORD PTR [rax+0x0]
  401d50:	lea    rbx,[rip+0xa7f8]        # 0x40c54f
  401d57:	jmp    0x401cf0
  401d59:	nop    DWORD PTR [rax+0x0]
  401d60:	lea    rbx,[rip+0xa809]        # 0x40c570
  401d67:	jmp    0x401cf0
  401d69:	nop    DWORD PTR [rax+0x0]
  401d70:	lea    rbx,[rip+0xa869]        # 0x40c5e0
  401d77:	jmp    0x401cf0
  401d7c:	nop    DWORD PTR [rax+0x0]
  401d80:	lea    rbx,[rip+0xa831]        # 0x40c5b8
  401d87:	jmp    0x401cf0
  401d8c:	nop    DWORD PTR [rax+0x0]
  401d90:	lea    rbx,[rip+0xa7f9]        # 0x40c590
  401d97:	jmp    0x401cf0
  401d9c:	nop    DWORD PTR [rax+0x0]
  401da0:	lea    rbx,[rip+0xa86f]        # 0x40c616
  401da7:	jmp    0x401cf0
  401dac:	nop
  401dad:	nop
  401dae:	nop
  401daf:	nop
  401db0:	fninit 
  401db2:	ret    
  401db3:	nop
  401db4:	nop
  401db5:	nop
  401db6:	nop
  401db7:	nop
  401db8:	nop
  401db9:	nop
  401dba:	nop
  401dbb:	nop
  401dbc:	nop
  401dbd:	nop
  401dbe:	nop
  401dbf:	nop
  401dc0:	mov    rax,rcx
  401dc3:	ret    
  401dc4:	xchg   ax,ax
  401dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dd0:	mov    rax,rcx
  401dd3:	ret    
  401dd4:	nop
  401dd5:	nop
  401dd6:	nop
  401dd7:	nop
  401dd8:	nop
  401dd9:	nop
  401dda:	nop
  401ddb:	nop
  401ddc:	nop
  401ddd:	nop
  401dde:	nop
  401ddf:	nop
  401de0:	push   rsi
  401de1:	push   rbx
  401de2:	sub    rsp,0x38
  401de6:	lea    rax,[rsp+0x58]
  401deb:	mov    rbx,rcx
  401dee:	mov    QWORD PTR [rsp+0x58],rdx
  401df3:	mov    QWORD PTR [rsp+0x60],r8
  401df8:	mov    QWORD PTR [rsp+0x68],r9
  401dfd:	mov    QWORD PTR [rsp+0x28],rax
  401e02:	call   0x407ee0
  401e07:	lea    rcx,[rip+0xa862]        # 0x40c670
  401e0e:	lea    r9,[rax+0x60]
  401e12:	mov    r8d,0x1b
  401e18:	mov    edx,0x1
  401e1d:	call   0x407e38
  401e22:	mov    rsi,QWORD PTR [rsp+0x28]
  401e27:	call   0x407ee0
  401e2c:	lea    rcx,[rax+0x60]
  401e30:	mov    rdx,rbx
  401e33:	mov    r8,rsi
  401e36:	call   0x407dd0
  401e3b:	call   0x407e80
  401e40:	nop
  401e41:	nop    DWORD PTR [rax+rax*1+0x0]
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	push   r13
  401e52:	push   r12
  401e54:	push   rbp
  401e55:	push   rdi
  401e56:	push   rsi
  401e57:	push   rbx
  401e58:	sub    rsp,0x58
  401e5c:	movsxd rbp,DWORD PTR [rip+0xe821]        # 0x410684
  401e63:	mov    rbx,rcx
  401e66:	mov    rsi,rdx
  401e69:	mov    rdi,r8
  401e6c:	test   ebp,ebp
  401e6e:	jle    0x401f6a
  401e74:	mov    rax,QWORD PTR [rip+0xe80d]        # 0x410688
  401e7b:	xor    r9d,r9d
  401e7e:	add    rax,0x8
  401e82:	mov    r10,QWORD PTR [rax]
  401e85:	cmp    rbx,r10
  401e88:	jb     0x401e9e
  401e8a:	mov    rdx,QWORD PTR [rax+0x8]
  401e8e:	mov    r11d,DWORD PTR [rdx+0x8]
  401e92:	add    r10,r11
  401e95:	cmp    rbx,r10
  401e98:	jb     0x401f50
  401e9e:	add    r9d,0x1
  401ea2:	add    rax,0x18
  401ea6:	cmp    r9d,ebp
  401ea9:	jne    0x401e82
  401eab:	mov    rcx,rbx
  401eae:	call   0x402ac0
  401eb3:	test   rax,rax
  401eb6:	mov    r12,rax
  401eb9:	je     0x401fa2
  401ebf:	lea    rbp,[rbp+rbp*2+0x0]
  401ec4:	shl    rbp,0x3
  401ec8:	mov    r13,rbp
  401ecb:	add    r13,QWORD PTR [rip+0xe7b6]        # 0x410688
  401ed2:	mov    QWORD PTR [r13+0x10],rax
  401ed6:	mov    DWORD PTR [r13+0x0],0x0
  401ede:	call   0x402be0
  401ee3:	mov    edx,DWORD PTR [r12+0xc]
  401ee8:	mov    r8d,0x30
  401eee:	add    rax,rdx
  401ef1:	lea    rdx,[rsp+0x20]
  401ef6:	mov    QWORD PTR [r13+0x8],rax
  401efa:	mov    rax,QWORD PTR [rip+0xe787]        # 0x410688
  401f01:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401f06:	call   QWORD PTR [rip+0x103f0]        # 0x4122fc
  401f0c:	test   rax,rax
  401f0f:	je     0x401f85
  401f11:	mov    eax,DWORD PTR [rsp+0x44]
  401f15:	lea    edx,[rax-0x4]
  401f18:	and    edx,0xfffffffb
  401f1b:	je     0x401f49
  401f1d:	sub    eax,0x40
  401f20:	and    eax,0xffffffbf
  401f23:	je     0x401f49
  401f25:	mov    r9,rbp
  401f28:	add    r9,QWORD PTR [rip+0xe759]        # 0x410688
  401f2f:	mov    r8d,0x40
  401f35:	mov    rdx,QWORD PTR [rsp+0x38]
  401f3a:	mov    rcx,QWORD PTR [rsp+0x20]
  401f3f:	call   QWORD PTR [rip+0x103af]        # 0x4122f4
  401f45:	test   eax,eax
  401f47:	je     0x401f71
  401f49:	add    DWORD PTR [rip+0xe734],0x1        # 0x410684
  401f50:	mov    r8,rdi
  401f53:	mov    rdx,rsi
  401f56:	mov    rcx,rbx
  401f59:	add    rsp,0x58
  401f5d:	pop    rbx
  401f5e:	pop    rsi
  401f5f:	pop    rdi
  401f60:	pop    rbp
  401f61:	pop    r12
  401f63:	pop    r13
  401f65:	jmp    0x407e20
  401f6a:	xor    ebp,ebp
  401f6c:	jmp    0x401eab
  401f71:	call   QWORD PTR [rip+0x102fd]        # 0x412274
  401f77:	lea    rcx,[rip+0xa76a]        # 0x40c6e8
  401f7e:	mov    edx,eax
  401f80:	call   0x401de0
  401f85:	mov    rax,QWORD PTR [rip+0xe6fc]        # 0x410688
  401f8c:	mov    edx,DWORD PTR [r12+0x8]
  401f91:	lea    rcx,[rip+0xa718]        # 0x40c6b0
  401f98:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401f9d:	call   0x401de0
  401fa2:	lea    rcx,[rip+0xa6e7]        # 0x40c690
  401fa9:	mov    rdx,rbx
  401fac:	call   0x401de0
  401fb1:	nop
  401fb2:	nop    DWORD PTR [rax+0x0]
  401fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fc0:	push   rbp
  401fc1:	push   r14
  401fc3:	push   r13
  401fc5:	push   r12
  401fc7:	push   rdi
  401fc8:	push   rsi
  401fc9:	push   rbx
  401fca:	mov    rbp,rsp
  401fcd:	sub    rsp,0x60
  401fd1:	mov    ebx,DWORD PTR [rip+0xe6a9]        # 0x410680
  401fd7:	test   ebx,ebx
  401fd9:	je     0x401ff0
  401fdb:	mov    rsp,rbp
  401fde:	pop    rbx
  401fdf:	pop    rsi
  401fe0:	pop    rdi
  401fe1:	pop    r12
  401fe3:	pop    r13
  401fe5:	pop    r14
  401fe7:	pop    rbp
  401fe8:	ret    
  401fe9:	nop    DWORD PTR [rax+0x0]
  401ff0:	mov    DWORD PTR [rip+0xe686],0x1        # 0x410680
  401ffa:	call   0x402b10
  401fff:	cdqe   
  402001:	lea    rax,[rax+rax*2]
  402005:	lea    rax,[rax*8+0x1e]
  40200d:	and    rax,0xfffffffffffffff0
  402011:	call   0x402d30
  402016:	mov    rsi,QWORD PTR [rip+0xac93]        # 0x40ccb0
  40201d:	mov    rbx,QWORD PTR [rip+0xac9c]        # 0x40ccc0
  402024:	sub    rsp,rax
  402027:	mov    DWORD PTR [rip+0xe653],0x0        # 0x410684
  402031:	lea    rax,[rsp+0x20]
  402036:	mov    QWORD PTR [rip+0xe64b],rax        # 0x410688
  40203d:	mov    rax,rsi
  402040:	sub    rax,rbx
  402043:	cmp    rax,0x7
  402047:	jle    0x401fdb
  402049:	cmp    rax,0xb
  40204d:	jle    0x402075
  40204f:	mov    r11d,DWORD PTR [rbx]
  402052:	test   r11d,r11d
  402055:	jne    0x4021a0
  40205b:	mov    r10d,DWORD PTR [rbx+0x4]
  40205f:	test   r10d,r10d
  402062:	jne    0x4021a0
  402068:	mov    r9d,DWORD PTR [rbx+0x8]
  40206c:	test   r9d,r9d
  40206f:	jne    0x40208c
  402071:	add    rbx,0xc
  402075:	mov    r8d,DWORD PTR [rbx]
  402078:	test   r8d,r8d
  40207b:	jne    0x4021a0
  402081:	mov    ecx,DWORD PTR [rbx+0x4]
  402084:	test   ecx,ecx
  402086:	jne    0x4021a0
  40208c:	mov    edx,DWORD PTR [rbx+0x8]
  40208f:	cmp    edx,0x1
  402092:	jne    0x4022ac
  402098:	add    rbx,0xc
  40209c:	cmp    rbx,rsi
  40209f:	jae    0x401fdb
  4020a5:	mov    r12,QWORD PTR [rip+0xac54]        # 0x40cd00
  4020ac:	lea    r13,[rbp-0x30]
  4020b0:	movabs r14,0xffffffff00000000
  4020ba:	mov    ecx,DWORD PTR [rbx+0x4]
  4020bd:	mov    eax,DWORD PTR [rbx]
  4020bf:	movzx  edx,BYTE PTR [rbx+0x8]
  4020c3:	add    rax,r12
  4020c6:	add    rcx,r12
  4020c9:	cmp    edx,0x10
  4020cc:	mov    r8,QWORD PTR [rax]
  4020cf:	je     0x402216
  4020d5:	jbe    0x4021dd
  4020db:	cmp    edx,0x20
  4020de:	je     0x40225f
  4020e4:	cmp    edx,0x40
  4020e7:	jne    0x40224b
  4020ed:	sub    r8,rax
  4020f0:	mov    rdx,r13
  4020f3:	mov    rdi,r13
  4020f6:	mov    rax,r8
  4020f9:	add    rax,QWORD PTR [rcx]
  4020fc:	mov    r8d,0x8
  402102:	mov    QWORD PTR [rbp-0x30],rax
  402106:	call   0x401e50
  40210b:	add    rbx,0xc
  40210f:	cmp    rbx,rsi
  402112:	jb     0x4020ba
  402114:	mov    eax,DWORD PTR [rip+0xe56a]        # 0x410684
  40211a:	xor    ebx,ebx
  40211c:	xor    esi,esi
  40211e:	test   eax,eax
  402120:	jle    0x401fdb
  402126:	mov    r14,QWORD PTR [rip+0x101cf]        # 0x4122fc
  40212d:	lea    r13,[rbp-0x34]
  402131:	mov    r12,QWORD PTR [rip+0x101bc]        # 0x4122f4
  402138:	jmp    0x402153
  40213a:	nop    WORD PTR [rax+rax*1+0x0]
  402140:	add    esi,0x1
  402143:	add    rbx,0x18
  402147:	cmp    esi,DWORD PTR [rip+0xe537]        # 0x410684
  40214d:	jge    0x401fdb
  402153:	mov    rax,rbx
  402156:	add    rax,QWORD PTR [rip+0xe52b]        # 0x410688
  40215d:	mov    edx,DWORD PTR [rax]
  40215f:	test   edx,edx
  402161:	je     0x402140
  402163:	mov    rcx,QWORD PTR [rax+0x8]
  402167:	mov    r8d,0x30
  40216d:	mov    rdx,rdi
  402170:	call   r14
  402173:	test   rax,rax
  402176:	je     0x40228e
  40217c:	mov    rax,QWORD PTR [rip+0xe505]        # 0x410688
  402183:	mov    r9,r13
  402186:	mov    rdx,QWORD PTR [rbp-0x18]
  40218a:	mov    rcx,QWORD PTR [rbp-0x30]
  40218e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402192:	call   r12
  402195:	jmp    0x402140
  402197:	nop    WORD PTR [rax+rax*1+0x0]
  4021a0:	cmp    rbx,rsi
  4021a3:	jae    0x401fdb
  4021a9:	mov    r12,QWORD PTR [rip+0xab50]        # 0x40cd00
  4021b0:	lea    rdi,[rbp-0x30]
  4021b4:	mov    ecx,DWORD PTR [rbx+0x4]
  4021b7:	mov    eax,DWORD PTR [rbx]
  4021b9:	mov    r8d,0x4
  4021bf:	mov    rdx,rdi
  4021c2:	add    rbx,0x8
  4021c6:	add    rcx,r12
  4021c9:	add    eax,DWORD PTR [rcx]
  4021cb:	mov    DWORD PTR [rbp-0x30],eax
  4021ce:	call   0x401e50
  4021d3:	cmp    rbx,rsi
  4021d6:	jb     0x4021b4
  4021d8:	jmp    0x402114
  4021dd:	cmp    edx,0x8
  4021e0:	jne    0x40224b
  4021e2:	movzx  edx,BYTE PTR [rcx]
  4021e5:	mov    rdi,r13
  4021e8:	mov    r10,rdx
  4021eb:	or     r10,0xffffffffffffff00
  4021f2:	test   dl,dl
  4021f4:	cmovs  rdx,r10
  4021f8:	sub    rdx,rax
  4021fb:	lea    rax,[r8+rdx*1]
  4021ff:	mov    r8d,0x1
  402205:	mov    rdx,r13
  402208:	mov    QWORD PTR [rbp-0x30],rax
  40220c:	call   0x401e50
  402211:	jmp    0x40210b
  402216:	movzx  edx,WORD PTR [rcx]
  402219:	mov    rdi,r13
  40221c:	mov    r10,rdx
  40221f:	or     r10,0xffffffffffff0000
  402226:	test   dx,dx
  402229:	cmovs  rdx,r10
  40222d:	sub    rdx,rax
  402230:	lea    rax,[r8+rdx*1]
  402234:	mov    r8d,0x2
  40223a:	mov    rdx,r13
  40223d:	mov    QWORD PTR [rbp-0x30],rax
  402241:	call   0x401e50
  402246:	jmp    0x40210b
  40224b:	lea    rcx,[rip+0xa4f6]        # 0x40c748
  402252:	mov    QWORD PTR [rbp-0x30],0x0
  40225a:	call   0x401de0
  40225f:	mov    edx,DWORD PTR [rcx]
  402261:	mov    rdi,r13
  402264:	mov    r10,rdx
  402267:	or     r10,r14
  40226a:	test   edx,edx
  40226c:	cmovs  rdx,r10
  402270:	sub    rdx,rax
  402273:	lea    rax,[r8+rdx*1]
  402277:	mov    r8d,0x4
  40227d:	mov    rdx,r13
  402280:	mov    QWORD PTR [rbp-0x30],rax
  402284:	call   0x401e50
  402289:	jmp    0x40210b
  40228e:	add    rbx,QWORD PTR [rip+0xe3f3]        # 0x410688
  402295:	lea    rcx,[rip+0xa414]        # 0x40c6b0
  40229c:	mov    rax,QWORD PTR [rbx+0x10]
  4022a0:	mov    r8,QWORD PTR [rbx+0x8]
  4022a4:	mov    edx,DWORD PTR [rax+0x8]
  4022a7:	call   0x401de0
  4022ac:	lea    rcx,[rip+0xa45d]        # 0x40c710
  4022b3:	call   0x401de0
  4022b8:	nop
  4022b9:	nop
  4022ba:	nop
  4022bb:	nop
  4022bc:	nop
  4022bd:	nop
  4022be:	nop
  4022bf:	nop
  4022c0:	sub    rsp,0x28
  4022c4:	mov    eax,DWORD PTR [rcx]
  4022c6:	cmp    eax,0xc0000091
  4022cb:	ja     0x402330
  4022cd:	cmp    eax,0xc000008d
  4022d2:	jae    0x40234f
  4022d4:	cmp    eax,0xc0000008
  4022d9:	je     0x4023f0
  4022df:	ja     0x4023c0
  4022e5:	cmp    eax,0x80000002
  4022ea:	je     0x4023f0
  4022f0:	cmp    eax,0xc0000005
  4022f5:	jne    0x4023ce
  4022fb:	xor    edx,edx
  4022fd:	mov    ecx,0xb
  402302:	call   0x407e10
  402307:	cmp    rax,0x1
  40230b:	je     0x402450
  402311:	test   rax,rax
  402314:	je     0x402430
  40231a:	mov    ecx,0xb
  40231f:	call   rax
  402321:	xor    eax,eax
  402323:	add    rsp,0x28
  402327:	ret    
  402328:	nop    DWORD PTR [rax+rax*1+0x0]
  402330:	cmp    eax,0xc0000094
  402335:	je     0x402400
  40233b:	ja     0x402380
  40233d:	cmp    eax,0xc0000092
  402342:	je     0x4023f0
  402348:	cmp    eax,0xc0000093
  40234d:	jne    0x4023ce
  40234f:	xor    edx,edx
  402351:	mov    ecx,0x8
  402356:	call   0x407e10
  40235b:	cmp    rax,0x1
  40235f:	mov    rdx,rax
  402362:	je     0x4023d8
  402364:	test   rdx,rdx
  402367:	mov    eax,0x1
  40236c:	je     0x402323
  40236e:	mov    ecx,0x8
  402373:	call   rdx
  402375:	xor    eax,eax
  402377:	add    rsp,0x28
  40237b:	ret    
  40237c:	nop    DWORD PTR [rax+0x0]
  402380:	cmp    eax,0xc0000095
  402385:	je     0x4023f0
  402387:	cmp    eax,0xc0000096
  40238c:	jne    0x4023ce
  40238e:	xor    edx,edx
  402390:	mov    ecx,0x4
  402395:	call   0x407e10
  40239a:	cmp    rax,0x1
  40239e:	je     0x40243a
  4023a4:	test   rax,rax
  4023a7:	je     0x402430
  4023ad:	mov    ecx,0x4
  4023b2:	call   rax
  4023b4:	xor    eax,eax
  4023b6:	jmp    0x402323
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4023c0:	cmp    eax,0xc000001d
  4023c5:	je     0x40238e
  4023c7:	cmp    eax,0xc000008c
  4023cc:	je     0x4023f0
  4023ce:	mov    eax,0x1
  4023d3:	add    rsp,0x28
  4023d7:	ret    
  4023d8:	mov    edx,0x1
  4023dd:	mov    ecx,0x8
  4023e2:	call   0x407e10
  4023e7:	call   0x401db0
  4023ec:	nop    DWORD PTR [rax+0x0]
  4023f0:	xor    eax,eax
  4023f2:	add    rsp,0x28
  4023f6:	ret    
  4023f7:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	xor    edx,edx
  402402:	mov    ecx,0x8
  402407:	call   0x407e10
  40240c:	cmp    rax,0x1
  402410:	mov    rdx,rax
  402413:	jne    0x402364
  402419:	mov    edx,0x1
  40241e:	mov    ecx,0x8
  402423:	call   0x407e10
  402428:	xor    eax,eax
  40242a:	jmp    0x402323
  40242f:	nop
  402430:	mov    eax,0x4
  402435:	add    rsp,0x28
  402439:	ret    
  40243a:	mov    edx,0x1
  40243f:	mov    ecx,0x4
  402444:	call   0x407e10
  402449:	xor    eax,eax
  40244b:	jmp    0x402323
  402450:	mov    edx,0x1
  402455:	mov    ecx,0xb
  40245a:	call   0x407e10
  40245f:	xor    eax,eax
  402461:	jmp    0x402323
  402466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402470:	push   r12
  402472:	push   rbp
  402473:	push   rdi
  402474:	push   rsi
  402475:	push   rbx
  402476:	sub    rsp,0x20
  40247a:	call   0x402be0
  40247f:	mov    rbp,rax
  402482:	mov    eax,DWORD PTR [rip+0xe240]        # 0x4106c8
  402488:	test   eax,eax
  40248a:	jne    0x4024b1
  40248c:	test   rbp,rbp
  40248f:	je     0x4024b1
  402491:	lea    rcx,[rip+0xa2e8]        # 0x40c780
  402498:	mov    DWORD PTR [rip+0xe226],0x1        # 0x4106c8
  4024a2:	call   0x402a20
  4024a7:	test   rax,rax
  4024aa:	je     0x4024c0
  4024ac:	mov    eax,0x1
  4024b1:	add    rsp,0x20
  4024b5:	pop    rbx
  4024b6:	pop    rsi
  4024b7:	pop    rdi
  4024b8:	pop    rbp
  4024b9:	pop    r12
  4024bb:	ret    
  4024bc:	nop    DWORD PTR [rax+0x0]
  4024c0:	lea    rbx,[rip+0xe339]        # 0x410800
  4024c7:	mov    ecx,0x30
  4024cc:	lea    rdx,[rip+0xe22d]        # 0x410700
  4024d3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4022c0
  4024da:	xor    esi,esi
  4024dc:	mov    rdi,rbx
  4024df:	rep stos QWORD PTR es:[rdi],rax
  4024e2:	mov    rdi,rdx
  4024e5:	sub    r12,rbp
  4024e8:	mov    cl,0x20
  4024ea:	rep stos QWORD PTR es:[rdi],rax
  4024ed:	mov    rdi,rdx
  4024f0:	jmp    0x402520
  4024f2:	mov    BYTE PTR [rdi],0x9
  4024f5:	mov    DWORD PTR [rdi+0x4],r12d
  4024f9:	add    rsi,0x1
  4024fd:	mov    edx,DWORD PTR [rax+0xc]
  402500:	add    rbx,0xc
  402504:	mov    DWORD PTR [rbx-0xc],edx
  402507:	add    edx,DWORD PTR [rax+0x8]
  40250a:	mov    rax,rdi
  40250d:	sub    rax,rbp
  402510:	add    rdi,0x8
  402514:	mov    DWORD PTR [rbx-0x4],eax
  402517:	mov    DWORD PTR [rbx-0x8],edx
  40251a:	cmp    rsi,0x20
  40251e:	je     0x402555
  402520:	mov    rcx,rsi
  402523:	call   0x402b50
  402528:	test   rax,rax
  40252b:	jne    0x4024f2
  40252d:	test   rsi,rsi
  402530:	je     0x4024ac
  402536:	mov    edx,esi
  402538:	nop    DWORD PTR [rax+rax*1+0x0]
  402540:	mov    r8,rbp
  402543:	lea    rcx,[rip+0xe2b6]        # 0x410800
  40254a:	call   QWORD PTR [rip+0xfd5c]        # 0x4122ac
  402550:	jmp    0x4024ac
  402555:	mov    edx,0x20
  40255a:	jmp    0x402540
  40255c:	nop    DWORD PTR [rax+0x0]
  402560:	push   rbx
  402561:	sub    rsp,0x20
  402565:	mov    rdx,QWORD PTR [rcx]
  402568:	mov    eax,DWORD PTR [rdx]
  40256a:	mov    r8d,eax
  40256d:	and    r8d,0x20ffffff
  402574:	cmp    r8d,0x20474343
  40257b:	je     0x402680
  402581:	cmp    eax,0xc0000091
  402586:	mov    rbx,rcx
  402589:	ja     0x402610
  40258f:	cmp    eax,0xc000008d
  402594:	jae    0x402627
  40259a:	cmp    eax,0xc0000008
  40259f:	je     0x4025d3
  4025a1:	ja     0x4025e0
  4025a3:	cmp    eax,0x80000002
  4025a8:	je     0x4025d3
  4025aa:	cmp    eax,0xc0000005
  4025af:	jne    0x4025f2
  4025b1:	xor    edx,edx
  4025b3:	mov    ecx,0xb
  4025b8:	call   0x407e10
  4025bd:	cmp    rax,0x1
  4025c1:	je     0x4026f0
  4025c7:	test   rax,rax
  4025ca:	je     0x4025f2
  4025cc:	mov    ecx,0xb
  4025d1:	call   rax
  4025d3:	mov    eax,0xffffffff
  4025d8:	add    rsp,0x20
  4025dc:	pop    rbx
  4025dd:	ret    
  4025de:	xchg   ax,ax
  4025e0:	cmp    eax,0xc000001d
  4025e5:	je     0x4026a6
  4025eb:	cmp    eax,0xc000008c
  4025f0:	je     0x4025d3
  4025f2:	mov    rax,QWORD PTR [rip+0xe0c7]        # 0x4106c0
  4025f9:	test   rax,rax
  4025fc:	je     0x4025d8
  4025fe:	mov    rcx,rbx
  402601:	add    rsp,0x20
  402605:	pop    rbx
  402606:	rex.W jmp rax
  402609:	nop    DWORD PTR [rax+0x0]
  402610:	cmp    eax,0xc0000094
  402615:	je     0x402652
  402617:	ja     0x402690
  402619:	cmp    eax,0xc0000092
  40261e:	je     0x4025d3
  402620:	cmp    eax,0xc0000093
  402625:	jne    0x4025f2
  402627:	xor    edx,edx
  402629:	mov    ecx,0x8
  40262e:	call   0x407e10
  402633:	cmp    rax,0x1
  402637:	jne    0x402664
  402639:	mov    edx,0x1
  40263e:	mov    ecx,0x8
  402643:	call   0x407e10
  402648:	call   0x401db0
  40264d:	jmp    0x4025d3
  402652:	xor    edx,edx
  402654:	mov    ecx,0x8
  402659:	call   0x407e10
  40265e:	cmp    rax,0x1
  402662:	je     0x4026d2
  402664:	test   rax,rax
  402667:	je     0x4025f2
  402669:	mov    ecx,0x8
  40266e:	call   rax
  402670:	mov    eax,0xffffffff
  402675:	jmp    0x4025d8
  40267a:	nop    WORD PTR [rax+rax*1+0x0]
  402680:	test   BYTE PTR [rdx+0x4],0x1
  402684:	jne    0x402581
  40268a:	jmp    0x4025d3
  40268f:	nop
  402690:	cmp    eax,0xc0000095
  402695:	je     0x4025d3
  40269b:	cmp    eax,0xc0000096
  4026a0:	jne    0x4025f2
  4026a6:	xor    edx,edx
  4026a8:	mov    ecx,0x4
  4026ad:	call   0x407e10
  4026b2:	cmp    rax,0x1
  4026b6:	je     0x402704
  4026b8:	test   rax,rax
  4026bb:	je     0x4025f2
  4026c1:	mov    ecx,0x4
  4026c6:	call   rax
  4026c8:	mov    eax,0xffffffff
  4026cd:	jmp    0x4025d8
  4026d2:	mov    edx,0x1
  4026d7:	mov    ecx,0x8
  4026dc:	call   0x407e10
  4026e1:	jmp    0x4025d3
  4026e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026f0:	mov    edx,0x1
  4026f5:	mov    ecx,0xb
  4026fa:	call   0x407e10
  4026ff:	jmp    0x4025d3
  402704:	mov    edx,0x1
  402709:	mov    ecx,0x4
  40270e:	call   0x407e10
  402713:	jmp    0x4025d3
  402718:	nop
  402719:	nop
  40271a:	nop
  40271b:	nop
  40271c:	nop
  40271d:	nop
  40271e:	nop
  40271f:	nop
  402720:	push   rbp
  402721:	push   rdi
  402722:	push   rsi
  402723:	push   rbx
  402724:	sub    rsp,0x28
  402728:	lea    rcx,[rip+0xe271]        # 0x4109a0
  40272f:	call   QWORD PTR [rip+0xfb1f]        # 0x412254
  402735:	mov    rbx,QWORD PTR [rip+0xe244]        # 0x410980
  40273c:	test   rbx,rbx
  40273f:	je     0x402774
  402741:	mov    rbp,QWORD PTR [rip+0xfb9c]        # 0x4122e4
  402748:	mov    rdi,QWORD PTR [rip+0xfb25]        # 0x412274
  40274f:	nop
  402750:	mov    ecx,DWORD PTR [rbx]
  402752:	call   rbp
  402754:	mov    rsi,rax
  402757:	call   rdi
  402759:	test   eax,eax
  40275b:	jne    0x40276b
  40275d:	test   rsi,rsi
  402760:	je     0x40276b
  402762:	mov    rax,QWORD PTR [rbx+0x8]
  402766:	mov    rcx,rsi
  402769:	call   rax
  40276b:	mov    rbx,QWORD PTR [rbx+0x10]
  40276f:	test   rbx,rbx
  402772:	jne    0x402750
  402774:	mov    rax,QWORD PTR [rip+0xfb21]        # 0x41229c
  40277b:	lea    rcx,[rip+0xe21e]        # 0x4109a0
  402782:	add    rsp,0x28
  402786:	pop    rbx
  402787:	pop    rsi
  402788:	pop    rdi
  402789:	pop    rbp
  40278a:	rex.W jmp rax
  40278d:	nop    DWORD PTR [rax]
  402790:	push   rdi
  402791:	push   rsi
  402792:	push   rbx
  402793:	sub    rsp,0x20
  402797:	mov    eax,DWORD PTR [rip+0xe1eb]        # 0x410988
  40279d:	test   eax,eax
  40279f:	jne    0x4027b0
  4027a1:	add    rsp,0x20
  4027a5:	pop    rbx
  4027a6:	pop    rsi
  4027a7:	pop    rdi
  4027a8:	ret    
  4027a9:	nop    DWORD PTR [rax+0x0]
  4027b0:	mov    rsi,rdx
  4027b3:	mov    edi,ecx
  4027b5:	mov    edx,0x18
  4027ba:	mov    ecx,0x1
  4027bf:	call   0x407e60
  4027c4:	test   rax,rax
  4027c7:	mov    rbx,rax
  4027ca:	je     0x402808
  4027cc:	mov    DWORD PTR [rax],edi
  4027ce:	mov    QWORD PTR [rax+0x8],rsi
  4027d2:	lea    rcx,[rip+0xe1c7]        # 0x4109a0
  4027d9:	call   QWORD PTR [rip+0xfa75]        # 0x412254
  4027df:	mov    rax,QWORD PTR [rip+0xe19a]        # 0x410980
  4027e6:	lea    rcx,[rip+0xe1b3]        # 0x4109a0
  4027ed:	mov    QWORD PTR [rip+0xe18c],rbx        # 0x410980
  4027f4:	mov    QWORD PTR [rbx+0x10],rax
  4027f8:	call   QWORD PTR [rip+0xfa9e]        # 0x41229c
  4027fe:	xor    eax,eax
  402800:	add    rsp,0x20
  402804:	pop    rbx
  402805:	pop    rsi
  402806:	pop    rdi
  402807:	ret    
  402808:	mov    eax,0xffffffff
  40280d:	jmp    0x4027a1
  40280f:	nop
  402810:	push   rbx
  402811:	sub    rsp,0x20
  402815:	mov    eax,DWORD PTR [rip+0xe16d]        # 0x410988
  40281b:	test   eax,eax
  40281d:	jne    0x402830
  40281f:	xor    eax,eax
  402821:	add    rsp,0x20
  402825:	pop    rbx
  402826:	ret    
  402827:	nop    WORD PTR [rax+rax*1+0x0]
  402830:	mov    ebx,ecx
  402832:	lea    rcx,[rip+0xe167]        # 0x4109a0
  402839:	call   QWORD PTR [rip+0xfa15]        # 0x412254
  40283f:	mov    rdx,QWORD PTR [rip+0xe13a]        # 0x410980
  402846:	test   rdx,rdx
  402849:	je     0x402867
  40284b:	mov    eax,DWORD PTR [rdx]
  40284d:	cmp    eax,ebx
  40284f:	jne    0x40285e
  402851:	jmp    0x40289f
  402853:	mov    r8d,DWORD PTR [rax]
  402856:	cmp    r8d,ebx
  402859:	je     0x402880
  40285b:	mov    rdx,rax
  40285e:	mov    rax,QWORD PTR [rdx+0x10]
  402862:	test   rax,rax
  402865:	jne    0x402853
  402867:	lea    rcx,[rip+0xe132]        # 0x4109a0
  40286e:	call   QWORD PTR [rip+0xfa28]        # 0x41229c
  402874:	xor    eax,eax
  402876:	add    rsp,0x20
  40287a:	pop    rbx
  40287b:	ret    
  40287c:	nop    DWORD PTR [rax+0x0]
  402880:	mov    rcx,rax
  402883:	mov    rax,QWORD PTR [rax+0x10]
  402887:	mov    QWORD PTR [rdx+0x10],rax
  40288b:	call   0x407e40
  402890:	lea    rcx,[rip+0xe109]        # 0x4109a0
  402897:	call   QWORD PTR [rip+0xf9ff]        # 0x41229c
  40289d:	jmp    0x402874
  40289f:	mov    rax,QWORD PTR [rdx+0x10]
  4028a3:	mov    rcx,rdx
  4028a6:	mov    QWORD PTR [rip+0xe0d3],rax        # 0x410980
  4028ad:	jmp    0x40288b
  4028af:	nop
  4028b0:	push   rbx
  4028b1:	sub    rsp,0x20
  4028b5:	cmp    edx,0x1
  4028b8:	je     0x402950
  4028be:	jb     0x4028f0
  4028c0:	cmp    edx,0x2
  4028c3:	je     0x4028e0
  4028c5:	cmp    edx,0x3
  4028c8:	jne    0x4028e5
  4028ca:	mov    eax,DWORD PTR [rip+0xe0b8]        # 0x410988
  4028d0:	test   eax,eax
  4028d2:	je     0x4028e5
  4028d4:	call   0x402720
  4028d9:	jmp    0x4028e5
  4028db:	nop    DWORD PTR [rax+rax*1+0x0]
  4028e0:	call   0x401db0
  4028e5:	mov    eax,0x1
  4028ea:	add    rsp,0x20
  4028ee:	pop    rbx
  4028ef:	ret    
  4028f0:	mov    eax,DWORD PTR [rip+0xe092]        # 0x410988
  4028f6:	test   eax,eax
  4028f8:	jne    0x402980
  4028fe:	mov    eax,DWORD PTR [rip+0xe084]        # 0x410988
  402904:	cmp    eax,0x1
  402907:	jne    0x4028e5
  402909:	mov    rcx,QWORD PTR [rip+0xe070]        # 0x410980
  402910:	test   rcx,rcx
  402913:	je     0x402926
  402915:	mov    rbx,QWORD PTR [rcx+0x10]
  402919:	call   0x407e40
  40291e:	test   rbx,rbx
  402921:	mov    rcx,rbx
  402924:	jne    0x402915
  402926:	lea    rcx,[rip+0xe073]        # 0x4109a0
  40292d:	mov    QWORD PTR [rip+0xe048],0x0        # 0x410980
  402938:	mov    DWORD PTR [rip+0xe046],0x0        # 0x410988
  402942:	call   QWORD PTR [rip+0xf904]        # 0x41224c
  402948:	jmp    0x4028e5
  40294a:	nop    WORD PTR [rax+rax*1+0x0]
  402950:	mov    eax,DWORD PTR [rip+0xe032]        # 0x410988
  402956:	test   eax,eax
  402958:	je     0x402970
  40295a:	mov    eax,0x1
  40295f:	mov    DWORD PTR [rip+0xe01f],0x1        # 0x410988
  402969:	add    rsp,0x20
  40296d:	pop    rbx
  40296e:	ret    
  40296f:	nop
  402970:	lea    rcx,[rip+0xe029]        # 0x4109a0
  402977:	call   QWORD PTR [rip+0xf917]        # 0x412294
  40297d:	jmp    0x40295a
  40297f:	nop
  402980:	call   0x402720
  402985:	jmp    0x4028fe
  40298a:	nop
  40298b:	nop
  40298c:	nop
  40298d:	nop
  40298e:	nop
  40298f:	nop
  402990:	movsxd rax,DWORD PTR [rcx+0x3c]
  402994:	add    rcx,rax
  402997:	xor    eax,eax
  402999:	cmp    DWORD PTR [rcx],0x4550
  40299f:	je     0x4029a3
  4029a1:	repz ret 
  4029a3:	xor    eax,eax
  4029a5:	cmp    WORD PTR [rcx+0x18],0x20b
  4029ab:	sete   al
  4029ae:	ret    
  4029af:	nop
  4029b0:	cmp    WORD PTR [rcx],0x5a4d
  4029b5:	je     0x4029c0
  4029b7:	xor    eax,eax
  4029b9:	ret    
  4029ba:	nop    WORD PTR [rax+rax*1+0x0]
  4029c0:	jmp    0x402990
  4029c2:	nop    DWORD PTR [rax+0x0]
  4029c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029d0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4029d4:	add    rcx,rax
  4029d7:	movzx  eax,WORD PTR [rcx+0x14]
  4029db:	lea    rax,[rcx+rax*1+0x18]
  4029e0:	movzx  ecx,WORD PTR [rcx+0x6]
  4029e4:	test   ecx,ecx
  4029e6:	je     0x402a11
  4029e8:	sub    ecx,0x1
  4029eb:	lea    rcx,[rcx+rcx*4]
  4029ef:	lea    r9,[rax+rcx*8+0x28]
  4029f4:	mov    r8d,DWORD PTR [rax+0xc]
  4029f8:	cmp    r8,rdx
  4029fb:	mov    rcx,r8
  4029fe:	ja     0x402a08
  402a00:	add    ecx,DWORD PTR [rax+0x8]
  402a03:	cmp    rdx,rcx
  402a06:	jb     0x402a13
  402a08:	add    rax,0x28
  402a0c:	cmp    rax,r9
  402a0f:	jne    0x4029f4
  402a11:	xor    eax,eax
  402a13:	repz ret 
  402a15:	nop
  402a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a20:	push   rdi
  402a21:	push   rsi
  402a22:	push   rbx
  402a23:	sub    rsp,0x20
  402a27:	mov    rsi,rcx
  402a2a:	call   0x407df0
  402a2f:	cmp    rax,0x8
  402a33:	ja     0x402a50
  402a35:	mov    rbx,QWORD PTR [rip+0xa2c4]        # 0x40cd00
  402a3c:	xor    edi,edi
  402a3e:	cmp    WORD PTR [rbx],0x5a4d
  402a43:	je     0x402a60
  402a45:	mov    rax,rdi
  402a48:	add    rsp,0x20
  402a4c:	pop    rbx
  402a4d:	pop    rsi
  402a4e:	pop    rdi
  402a4f:	ret    
  402a50:	xor    edi,edi
  402a52:	mov    rax,rdi
  402a55:	add    rsp,0x20
  402a59:	pop    rbx
  402a5a:	pop    rsi
  402a5b:	pop    rdi
  402a5c:	ret    
  402a5d:	nop    DWORD PTR [rax]
  402a60:	mov    rcx,rbx
  402a63:	call   0x402990
  402a68:	test   eax,eax
  402a6a:	je     0x402a45
  402a6c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402a70:	add    rdx,rbx
  402a73:	movzx  eax,WORD PTR [rdx+0x14]
  402a77:	lea    rbx,[rdx+rax*1+0x18]
  402a7c:	movzx  eax,WORD PTR [rdx+0x6]
  402a80:	test   eax,eax
  402a82:	je     0x402a45
  402a84:	sub    eax,0x1
  402a87:	lea    rax,[rax+rax*4]
  402a8b:	lea    rdi,[rbx+rax*8+0x28]
  402a90:	jmp    0x402a9b
  402a92:	add    rbx,0x28
  402a96:	cmp    rbx,rdi
  402a99:	je     0x402a50
  402a9b:	mov    r8d,0x8
  402aa1:	mov    rdx,rsi
  402aa4:	mov    rcx,rbx
  402aa7:	call   0x407de8
  402aac:	test   eax,eax
  402aae:	jne    0x402a92
  402ab0:	mov    rdi,rbx
  402ab3:	mov    rax,rdi
  402ab6:	add    rsp,0x20
  402aba:	pop    rbx
  402abb:	pop    rsi
  402abc:	pop    rdi
  402abd:	ret    
  402abe:	xchg   ax,ax
  402ac0:	push   rsi
  402ac1:	push   rbx
  402ac2:	sub    rsp,0x28
  402ac6:	mov    rbx,QWORD PTR [rip+0xa233]        # 0x40cd00
  402acd:	cmp    WORD PTR [rbx],0x5a4d
  402ad2:	je     0x402ae0
  402ad4:	xor    eax,eax
  402ad6:	add    rsp,0x28
  402ada:	pop    rbx
  402adb:	pop    rsi
  402adc:	ret    
  402add:	nop    DWORD PTR [rax]
  402ae0:	mov    rsi,rcx
  402ae3:	mov    rcx,rbx
  402ae6:	call   0x402990
  402aeb:	test   eax,eax
  402aed:	je     0x402ad4
  402aef:	sub    rsi,rbx
  402af2:	mov    rcx,rbx
  402af5:	mov    rdx,rsi
  402af8:	add    rsp,0x28
  402afc:	pop    rbx
  402afd:	pop    rsi
  402afe:	jmp    0x4029d0
  402b03:	nop    DWORD PTR [rax]
  402b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b10:	push   rbx
  402b11:	sub    rsp,0x20
  402b15:	mov    rbx,QWORD PTR [rip+0xa1e4]        # 0x40cd00
  402b1c:	xor    eax,eax
  402b1e:	cmp    WORD PTR [rbx],0x5a4d
  402b23:	je     0x402b30
  402b25:	add    rsp,0x20
  402b29:	pop    rbx
  402b2a:	ret    
  402b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b30:	mov    rcx,rbx
  402b33:	call   0x402990
  402b38:	test   eax,eax
  402b3a:	je     0x402b25
  402b3c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402b40:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402b45:	add    rsp,0x20
  402b49:	pop    rbx
  402b4a:	ret    
  402b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b50:	push   rdi
  402b51:	push   rsi
  402b52:	push   rbx
  402b53:	sub    rsp,0x20
  402b57:	mov    rsi,QWORD PTR [rip+0xa1a2]        # 0x40cd00
  402b5e:	xor    edi,edi
  402b60:	mov    rbx,rcx
  402b63:	cmp    WORD PTR [rsi],0x5a4d
  402b68:	je     0x402b75
  402b6a:	mov    rax,rdi
  402b6d:	add    rsp,0x20
  402b71:	pop    rbx
  402b72:	pop    rsi
  402b73:	pop    rdi
  402b74:	ret    
  402b75:	mov    rcx,rsi
  402b78:	call   0x402990
  402b7d:	test   eax,eax
  402b7f:	je     0x402b6a
  402b81:	movsxd rax,DWORD PTR [rsi+0x3c]
  402b85:	add    rsi,rax
  402b88:	movzx  eax,WORD PTR [rsi+0x14]
  402b8c:	lea    rdx,[rsi+rax*1+0x18]
  402b91:	movzx  eax,WORD PTR [rsi+0x6]
  402b95:	test   eax,eax
  402b97:	je     0x402b6a
  402b99:	sub    eax,0x1
  402b9c:	lea    rax,[rax+rax*4]
  402ba0:	lea    rax,[rdx+rax*8+0x28]
  402ba5:	test   BYTE PTR [rdx+0x27],0x20
  402ba9:	je     0x402bb4
  402bab:	test   rbx,rbx
  402bae:	je     0x402bd0
  402bb0:	sub    rbx,0x1
  402bb4:	add    rdx,0x28
  402bb8:	cmp    rdx,rax
  402bbb:	jne    0x402ba5
  402bbd:	xor    edi,edi
  402bbf:	mov    rax,rdi
  402bc2:	add    rsp,0x20
  402bc6:	pop    rbx
  402bc7:	pop    rsi
  402bc8:	pop    rdi
  402bc9:	ret    
  402bca:	nop    WORD PTR [rax+rax*1+0x0]
  402bd0:	mov    rdi,rdx
  402bd3:	mov    rax,rdi
  402bd6:	add    rsp,0x20
  402bda:	pop    rbx
  402bdb:	pop    rsi
  402bdc:	pop    rdi
  402bdd:	ret    
  402bde:	xchg   ax,ax
  402be0:	push   rsi
  402be1:	push   rbx
  402be2:	sub    rsp,0x28
  402be6:	mov    rsi,QWORD PTR [rip+0xa113]        # 0x40cd00
  402bed:	xor    ebx,ebx
  402bef:	cmp    WORD PTR [rsi],0x5a4d
  402bf4:	je     0x402c00
  402bf6:	mov    rax,rbx
  402bf9:	add    rsp,0x28
  402bfd:	pop    rbx
  402bfe:	pop    rsi
  402bff:	ret    
  402c00:	mov    rcx,rsi
  402c03:	call   0x402990
  402c08:	test   eax,eax
  402c0a:	cmovne rbx,rsi
  402c0e:	mov    rax,rbx
  402c11:	add    rsp,0x28
  402c15:	pop    rbx
  402c16:	pop    rsi
  402c17:	ret    
  402c18:	nop    DWORD PTR [rax+rax*1+0x0]
  402c20:	push   rsi
  402c21:	push   rbx
  402c22:	sub    rsp,0x28
  402c26:	mov    rbx,QWORD PTR [rip+0xa0d3]        # 0x40cd00
  402c2d:	xor    eax,eax
  402c2f:	cmp    WORD PTR [rbx],0x5a4d
  402c34:	je     0x402c40
  402c36:	add    rsp,0x28
  402c3a:	pop    rbx
  402c3b:	pop    rsi
  402c3c:	ret    
  402c3d:	nop    DWORD PTR [rax]
  402c40:	mov    rsi,rcx
  402c43:	mov    rcx,rbx
  402c46:	call   0x402990
  402c4b:	test   eax,eax
  402c4d:	je     0x402c36
  402c4f:	sub    rsi,rbx
  402c52:	mov    rcx,rbx
  402c55:	mov    rdx,rsi
  402c58:	call   0x4029d0
  402c5d:	test   rax,rax
  402c60:	je     0x402c71
  402c62:	mov    eax,DWORD PTR [rax+0x24]
  402c65:	not    eax
  402c67:	shr    eax,0x1f
  402c6a:	add    rsp,0x28
  402c6e:	pop    rbx
  402c6f:	pop    rsi
  402c70:	ret    
  402c71:	xor    eax,eax
  402c73:	jmp    0x402c36
  402c75:	nop
  402c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c80:	push   rbp
  402c81:	push   rdi
  402c82:	push   rsi
  402c83:	push   rbx
  402c84:	sub    rsp,0x28
  402c88:	mov    rdi,QWORD PTR [rip+0xa071]        # 0x40cd00
  402c8f:	xor    ebp,ebp
  402c91:	mov    esi,ecx
  402c93:	cmp    WORD PTR [rdi],0x5a4d
  402c98:	je     0x402cb0
  402c9a:	mov    rax,rbp
  402c9d:	add    rsp,0x28
  402ca1:	pop    rbx
  402ca2:	pop    rsi
  402ca3:	pop    rdi
  402ca4:	pop    rbp
  402ca5:	ret    
  402ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cb0:	mov    rcx,rdi
  402cb3:	call   0x402990
  402cb8:	test   eax,eax
  402cba:	je     0x402c9a
  402cbc:	movsxd rax,DWORD PTR [rdi+0x3c]
  402cc0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402cc7:	test   edx,edx
  402cc9:	je     0x402c9a
  402ccb:	mov    ebx,edx
  402ccd:	mov    rcx,rdi
  402cd0:	mov    rdx,rbx
  402cd3:	call   0x4029d0
  402cd8:	test   rax,rax
  402cdb:	je     0x402c9a
  402cdd:	add    rbx,rdi
  402ce0:	mov    rdx,rbx
  402ce3:	jne    0x402cf7
  402ce5:	jmp    0x402c9a
  402ce7:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	sub    esi,0x1
  402cf3:	add    rdx,0x14
  402cf7:	mov    ecx,DWORD PTR [rdx+0x4]
  402cfa:	test   ecx,ecx
  402cfc:	jne    0x402d05
  402cfe:	mov    eax,DWORD PTR [rdx+0xc]
  402d01:	test   eax,eax
  402d03:	je     0x402d20
  402d05:	test   esi,esi
  402d07:	jg     0x402cf0
  402d09:	mov    ebp,DWORD PTR [rdx+0xc]
  402d0c:	add    rbp,rdi
  402d0f:	mov    rax,rbp
  402d12:	add    rsp,0x28
  402d16:	pop    rbx
  402d17:	pop    rsi
  402d18:	pop    rdi
  402d19:	pop    rbp
  402d1a:	ret    
  402d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d20:	xor    ebp,ebp
  402d22:	mov    rax,rbp
  402d25:	add    rsp,0x28
  402d29:	pop    rbx
  402d2a:	pop    rsi
  402d2b:	pop    rdi
  402d2c:	pop    rbp
  402d2d:	ret    
  402d2e:	nop
  402d2f:	nop
  402d30:	push   rcx
  402d31:	push   rax
  402d32:	cmp    rax,0x1000
  402d38:	lea    rcx,[rsp+0x18]
  402d3d:	jb     0x402d58
  402d3f:	sub    rcx,0x1000
  402d46:	or     QWORD PTR [rcx],0x0
  402d4a:	sub    rax,0x1000
  402d50:	cmp    rax,0x1000
  402d56:	ja     0x402d3f
  402d58:	sub    rcx,rax
  402d5b:	or     QWORD PTR [rcx],0x0
  402d5f:	pop    rax
  402d60:	pop    rcx
  402d61:	ret    
  402d62:	nop
  402d63:	nop
  402d64:	nop
  402d65:	nop
  402d66:	nop
  402d67:	nop
  402d68:	nop
  402d69:	nop
  402d6a:	nop
  402d6b:	nop
  402d6c:	nop
  402d6d:	nop
  402d6e:	nop
  402d6f:	nop
  402d70:	push   rbx
  402d71:	sub    rsp,0x60
  402d75:	lea    r8,[rip+0x8904]        # 0x40b680
  402d7c:	lea    rax,[rsp+0x50]
  402d81:	lea    r9,[rsp+0x4c]
  402d86:	mov    QWORD PTR [rsp+0x20],rax
  402d8b:	call   0x404090
  402d90:	mov    edx,eax
  402d92:	and    edx,0x7
  402d95:	cmp    edx,0x6
  402d98:	ja     0x402dc5
  402d9a:	lea    rcx,[rip+0x99ef]        # 0x40c790
  402da1:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  402da5:	add    rcx,rdx
  402da8:	jmp    rcx
  402daa:	nop    WORD PTR [rax+rax*1+0x0]
  402db0:	mov    ebx,DWORD PTR [rsp+0x54]
  402db4:	mov    edx,DWORD PTR [rsp+0x50]
  402db8:	or     ebx,0x7ff00000
  402dbe:	shl    rbx,0x20
  402dc2:	or     rbx,rdx
  402dc5:	test   al,0x8
  402dc7:	je     0x402dde
  402dc9:	mov    rax,rbx
  402dcc:	mov    ebx,ebx
  402dce:	shr    rax,0x20
  402dd2:	or     eax,0x80000000
  402dd7:	shl    rax,0x20
  402ddb:	or     rbx,rax
  402dde:	mov    QWORD PTR [rsp+0x38],rbx
  402de3:	movsd  xmm0,QWORD PTR [rsp+0x38]
  402de9:	add    rsp,0x60
  402ded:	pop    rbx
  402dee:	ret    
  402def:	nop
  402df0:	movabs rbx,0x7ff8000000000000
  402dfa:	jmp    0x402dc5
  402dfc:	nop    DWORD PTR [rax+0x0]
  402e00:	xor    ebx,ebx
  402e02:	jmp    0x402dc5
  402e04:	mov    ebx,DWORD PTR [rsp+0x4c]
  402e08:	mov    edx,DWORD PTR [rsp+0x54]
  402e0c:	add    ebx,0x433
  402e12:	and    edx,0xffefffff
  402e18:	shl    ebx,0x14
  402e1b:	or     ebx,edx
  402e1d:	mov    edx,DWORD PTR [rsp+0x50]
  402e21:	shl    rbx,0x20
  402e25:	or     rbx,rdx
  402e28:	jmp    0x402dc5
  402e2a:	nop    WORD PTR [rax+rax*1+0x0]
  402e30:	mov    ebx,DWORD PTR [rsp+0x54]
  402e34:	mov    edx,DWORD PTR [rsp+0x50]
  402e38:	shl    rbx,0x20
  402e3c:	or     rbx,rdx
  402e3f:	jmp    0x402dc5
  402e41:	movabs rbx,0x7ff0000000000000
  402e4b:	jmp    0x402dc5
  402e50:	push   rbx
  402e51:	sub    rsp,0x10
  402e55:	movsd  QWORD PTR [rsp+0x8],xmm0
  402e5b:	mov    r9,QWORD PTR [rsp+0x8]
  402e60:	mov    rdx,r9
  402e63:	mov    r10d,r9d
  402e66:	shr    rdx,0x20
  402e6a:	mov    eax,edx
  402e6c:	mov    r11d,edx
  402e6f:	sar    eax,0x14
  402e72:	and    eax,0x7ff
  402e77:	lea    r8d,[rax-0x3ff]
  402e7e:	cmp    r8d,0x33
  402e82:	jle    0x402ea0
  402e84:	cmp    r8d,0x400
  402e8b:	je     0x402f65
  402e91:	add    rsp,0x10
  402e95:	pop    rbx
  402e96:	ret    
  402e97:	nop    WORD PTR [rax+rax*1+0x0]
  402ea0:	cmp    r8d,0x13
  402ea4:	jg     0x402f10
  402ea6:	test   r8d,r8d
  402ea9:	js     0x402f70
  402eaf:	mov    eax,0xfffff
  402eb4:	mov    ecx,r8d
  402eb7:	shr    eax,cl
  402eb9:	test   r9d,r9d
  402ebc:	jne    0x402ec2
  402ebe:	test   eax,edx
  402ec0:	je     0x402e91
  402ec2:	movsd  xmm1,QWORD PTR [rip+0x98e6]        # 0x40c7b0
  402eca:	xorpd  xmm2,xmm2
  402ece:	addsd  xmm1,xmm0
  402ed2:	ucomisd xmm2,xmm1
  402ed6:	jae    0x402e91
  402ed8:	xor    r9d,r9d
  402edb:	test   edx,edx
  402edd:	jns    0x402eeb
  402edf:	mov    r9d,0x100000
  402ee5:	mov    ecx,r8d
  402ee8:	sar    r9d,cl
  402eeb:	add    edx,r9d
  402eee:	not    eax
  402ef0:	and    eax,edx
  402ef2:	shl    rax,0x20
  402ef6:	mov    QWORD PTR [rsp+0x8],rax
  402efb:	movsd  xmm0,QWORD PTR [rsp+0x8]
  402f01:	add    rsp,0x10
  402f05:	pop    rbx
  402f06:	ret    
  402f07:	nop    WORD PTR [rax+rax*1+0x0]
  402f10:	lea    ecx,[rax-0x413]
  402f16:	mov    ebx,0xffffffff
  402f1b:	shr    ebx,cl
  402f1d:	test   ebx,r9d
  402f20:	je     0x402e91
  402f26:	movsd  xmm1,QWORD PTR [rip+0x9882]        # 0x40c7b0
  402f2e:	xorpd  xmm2,xmm2
  402f32:	addsd  xmm1,xmm0
  402f36:	ucomisd xmm2,xmm1
  402f3a:	jae    0x402e91
  402f40:	test   edx,edx
  402f42:	js     0x402fd0
  402f48:	not    ebx
  402f4a:	shl    r11,0x20
  402f4e:	and    r10d,ebx
  402f51:	or     r11,r10
  402f54:	mov    QWORD PTR [rsp+0x8],r11
  402f59:	movsd  xmm0,QWORD PTR [rsp+0x8]
  402f5f:	add    rsp,0x10
  402f63:	pop    rbx
  402f64:	ret    
  402f65:	addsd  xmm0,xmm0
  402f69:	add    rsp,0x10
  402f6d:	pop    rbx
  402f6e:	ret    
  402f6f:	nop
  402f70:	movsd  xmm2,QWORD PTR [rip+0x9838]        # 0x40c7b0
  402f78:	xorpd  xmm1,xmm1
  402f7c:	addsd  xmm2,xmm0
  402f80:	ucomisd xmm2,xmm1
  402f84:	jbe    0x402e91
  402f8a:	test   edx,edx
  402f8c:	js     0x402fa0
  402f8e:	movapd xmm0,xmm1
  402f92:	jmp    0x402e91
  402f97:	nop    WORD PTR [rax+rax*1+0x0]
  402fa0:	and    edx,0x7fffffff
  402fa6:	or     edx,r9d
  402fa9:	je     0x402e91
  402faf:	movabs rax,0xbff0000000000000
  402fb9:	mov    QWORD PTR [rsp+0x8],rax
  402fbe:	movsd  xmm0,QWORD PTR [rsp+0x8]
  402fc4:	jmp    0x402e91
  402fc9:	nop    DWORD PTR [rax+0x0]
  402fd0:	cmp    r8d,0x14
  402fd4:	je     0x402fef
  402fd6:	mov    ecx,0x433
  402fdb:	mov    r10d,0x1
  402fe1:	sub    ecx,eax
  402fe3:	shl    r10d,cl
  402fe6:	add    r10d,r9d
  402fe9:	jae    0x402f48
  402fef:	lea    r11d,[rdx+0x1]
  402ff3:	jmp    0x402f48
  402ff8:	nop
  402ff9:	nop
  402ffa:	nop
  402ffb:	nop
  402ffc:	nop
  402ffd:	nop
  402ffe:	nop
  402fff:	nop
  403000:	push   rbx
  403001:	sub    rsp,0x60
  403005:	movaps XMMWORD PTR [rsp+0x50],xmm6
  40300a:	movq   QWORD PTR [rsp+0x48],xmm0
  403010:	movq   rbx,xmm0
  403015:	mov    eax,DWORD PTR [rsp+0x4c]
  403019:	mov    edx,eax
  40301b:	and    eax,0x7ff00000
  403020:	and    edx,0xfffff
  403026:	or     edx,DWORD PTR [rsp+0x48]
  40302a:	mov    ecx,edx
  40302c:	or     ecx,eax
  40302e:	je     0x403080
  403030:	test   eax,eax
  403032:	jne    0x4030a0
  403034:	mov    rax,rbx
  403037:	shr    rax,0x20
  40303b:	test   eax,eax
  40303d:	js     0x4030c2
  403043:	mov    QWORD PTR [rsp+0x38],rbx
  403048:	movsd  xmm0,QWORD PTR [rip+0x9798]        # 0x40c7e8
  403050:	movsd  xmm1,QWORD PTR [rsp+0x38]
  403056:	ucomisd xmm1,xmm0
  40305a:	jp     0x40305e
  40305c:	je     0x403073
  40305e:	mov    QWORD PTR [rsp+0x38],rbx
  403063:	fld    QWORD PTR [rsp+0x38]
  403067:	fsqrt  
  403069:	fstp   QWORD PTR [rsp+0x38]
  40306d:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403073:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403078:	add    rsp,0x60
  40307c:	pop    rbx
  40307d:	ret    
  40307e:	xchg   ax,ax
  403080:	shr    rbx,0x20
  403084:	pxor   xmm0,xmm0
  403088:	test   ebx,ebx
  40308a:	jns    0x403073
  40308c:	movsd  xmm0,QWORD PTR [rip+0x9744]        # 0x40c7d8
  403094:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403099:	add    rsp,0x60
  40309d:	pop    rbx
  40309e:	ret    
  40309f:	nop
  4030a0:	cmp    eax,0x7ff00000
  4030a5:	jne    0x403034
  4030a7:	movq   rax,xmm0
  4030ac:	shr    rax,0x20
  4030b0:	test   edx,edx
  4030b2:	je     0x403110
  4030b4:	test   eax,eax
  4030b6:	js     0x4030c2
  4030b8:	movsd  xmm6,QWORD PTR [rip+0x9710]        # 0x40c7d0
  4030c0:	jmp    0x4030ca
  4030c2:	movsd  xmm6,QWORD PTR [rip+0x96fe]        # 0x40c7c8
  4030ca:	call   0x407eb0
  4030cf:	mov    QWORD PTR [rsp+0x38],rbx
  4030d4:	pxor   xmm3,xmm3
  4030d8:	mov    DWORD PTR [rax],0x21
  4030de:	movsd  xmm2,QWORD PTR [rsp+0x38]
  4030e4:	movsd  QWORD PTR [rsp+0x20],xmm6
  4030ea:	lea    rdx,[rip+0x96cf]        # 0x40c7c0
  4030f1:	mov    ecx,0x1
  4030f6:	call   0x401c50
  4030fb:	movapd xmm0,xmm6
  4030ff:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403104:	add    rsp,0x60
  403108:	pop    rbx
  403109:	ret    
  40310a:	nop    WORD PTR [rax+rax*1+0x0]
  403110:	test   eax,eax
  403112:	js     0x4030c2
  403114:	movsd  xmm0,QWORD PTR [rip+0x96c4]        # 0x40c7e0
  40311c:	jmp    0x403073
  403121:	nop
  403122:	nop
  403123:	nop
  403124:	nop
  403125:	nop
  403126:	nop
  403127:	nop
  403128:	nop
  403129:	nop
  40312a:	nop
  40312b:	nop
  40312c:	nop
  40312d:	nop
  40312e:	nop
  40312f:	nop
  403130:	push   rbx
  403131:	add    rsp,0xffffffffffffff80
  403135:	movaps XMMWORD PTR [rsp+0x70],xmm6
  40313a:	movq   QWORD PTR [rsp+0x68],xmm0
  403140:	movq   rbx,xmm0
  403145:	mov    eax,DWORD PTR [rsp+0x6c]
  403149:	mov    edx,eax
  40314b:	and    eax,0x7ff00000
  403150:	and    edx,0xfffff
  403156:	or     edx,DWORD PTR [rsp+0x68]
  40315a:	mov    ecx,edx
  40315c:	or     ecx,eax
  40315e:	je     0x403167
  403160:	cmp    eax,0x7ff00000
  403165:	je     0x4031a0
  403167:	mov    QWORD PTR [rsp+0x30],rbx
  40316c:	lea    rcx,[rsp+0x50]
  403171:	lea    rdx,[rsp+0x40]
  403176:	fld    QWORD PTR [rsp+0x30]
  40317a:	fstp   TBYTE PTR [rsp+0x40]
  40317e:	call   0x403230
  403183:	fld    TBYTE PTR [rsp+0x50]
  403187:	fstp   QWORD PTR [rsp+0x38]
  40318b:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403191:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  403196:	sub    rsp,0xffffffffffffff80
  40319a:	pop    rbx
  40319b:	ret    
  40319c:	nop    DWORD PTR [rax+0x0]
  4031a0:	test   edx,edx
  4031a2:	je     0x4031e1
  4031a4:	call   0x407eb0
  4031a9:	pxor   xmm3,xmm3
  4031ad:	mov    DWORD PTR [rax],0x21
  4031b3:	mov    QWORD PTR [rsp+0x30],rbx
  4031b8:	lea    rdx,[rip+0x9631]        # 0x40c7f0
  4031bf:	mov    QWORD PTR [rsp+0x20],rbx
  4031c4:	movsd  xmm2,QWORD PTR [rsp+0x30]
  4031ca:	mov    ecx,0x1
  4031cf:	call   0x401c50
  4031d4:	mov    QWORD PTR [rsp+0x30],rbx
  4031d9:	movsd  xmm0,QWORD PTR [rsp+0x30]
  4031df:	jmp    0x403191
  4031e1:	call   0x407eb0
  4031e6:	movsd  xmm6,QWORD PTR [rip+0x960a]        # 0x40c7f8
  4031ee:	mov    DWORD PTR [rax],0x21
  4031f4:	pxor   xmm3,xmm3
  4031f8:	mov    QWORD PTR [rsp+0x30],rbx
  4031fd:	movsd  QWORD PTR [rsp+0x20],xmm6
  403203:	lea    rdx,[rip+0x95e6]        # 0x40c7f0
  40320a:	mov    ecx,0x1
  40320f:	movsd  xmm2,QWORD PTR [rsp+0x30]
  403215:	call   0x401c50
  40321a:	movapd xmm0,xmm6
  40321e:	jmp    0x403191
  403223:	nop
  403224:	nop
  403225:	nop
  403226:	nop
  403227:	nop
  403228:	nop
  403229:	nop
  40322a:	nop
  40322b:	nop
  40322c:	nop
  40322d:	nop
  40322e:	nop
  40322f:	nop
  403230:	fld    TBYTE PTR [rdx]
  403232:	fcos   
  403234:	fnstsw ax
  403236:	test   eax,0x400
  40323b:	je     0x403252
  40323d:	fldpi  
  40323f:	fadd   st,st(0)
  403241:	fxch   st(1)
  403243:	fprem1 
  403245:	fnstsw ax
  403247:	test   eax,0x400
  40324c:	jne    0x403243
  40324e:	fstp   st(1)
  403250:	fcos   
  403252:	mov    rax,rcx
  403255:	mov    QWORD PTR [rcx+0x8],0x0
  40325d:	fstp   TBYTE PTR [rcx]
  40325f:	ret    
  403260:	sub    rsp,0x48
  403264:	movsd  QWORD PTR [rsp+0x30],xmm0
  40326a:	mov    eax,DWORD PTR [rsp+0x34]
  40326e:	movapd xmm1,xmm0
  403272:	mov    ecx,eax
  403274:	and    ecx,0x7ff00000
  40327a:	cmp    ecx,0x7ff00000
  403280:	sete   r8b
  403284:	and    eax,0xfffff
  403289:	or     eax,ecx
  40328b:	or     eax,DWORD PTR [rsp+0x30]
  40328f:	sete   r9b
  403293:	test   ecx,ecx
  403295:	sete   al
  403298:	or     eax,r9d
  40329b:	cmp    r8b,al
  40329e:	ja     0x403339
  4032a4:	pxor   xmm2,xmm2
  4032a8:	ucomisd xmm0,xmm2
  4032ac:	jp     0x4032b8
  4032ae:	movapd xmm1,xmm0
  4032b2:	je     0x403339
  4032b8:	pxor   xmm3,xmm3
  4032bc:	movsd  QWORD PTR [rsp+0x20],xmm0
  4032c2:	fld    QWORD PTR [rsp+0x20]
  4032c6:	cvtsi2sd xmm3,edx
  4032ca:	movsd  QWORD PTR [rsp+0x28],xmm3
  4032d0:	fld    QWORD PTR [rsp+0x28]
  4032d4:	fxch   st(1)
  4032d6:	fscale 
  4032d8:	fstp   st(1)
  4032da:	fstp   QWORD PTR [rsp+0x20]
  4032de:	movsd  xmm4,QWORD PTR [rsp+0x20]
  4032e4:	movsd  QWORD PTR [rsp+0x38],xmm4
  4032ea:	mov    eax,DWORD PTR [rsp+0x3c]
  4032ee:	mov    edx,eax
  4032f0:	and    edx,0x7ff00000
  4032f6:	cmp    edx,0x7ff00000
  4032fc:	sete   cl
  4032ff:	and    eax,0xfffff
  403304:	or     eax,edx
  403306:	or     eax,DWORD PTR [rsp+0x38]
  40330a:	sete   r8b
  40330e:	test   edx,edx
  403310:	sete   al
  403313:	or     eax,r8d
  403316:	cmp    cl,al
  403318:	ja     0x403328
  40331a:	movsd  xmm5,QWORD PTR [rsp+0x20]
  403320:	ucomisd xmm5,xmm2
  403324:	jp     0x403342
  403326:	jne    0x403342
  403328:	call   0x407eb0
  40332d:	movsd  xmm1,QWORD PTR [rsp+0x20]
  403333:	mov    DWORD PTR [rax],0x22
  403339:	movapd xmm0,xmm1
  40333d:	add    rsp,0x48
  403341:	ret    
  403342:	movsd  xmm1,QWORD PTR [rsp+0x20]
  403348:	movapd xmm0,xmm1
  40334c:	add    rsp,0x48
  403350:	ret    
  403351:	nop
  403352:	nop
  403353:	nop
  403354:	nop
  403355:	nop
  403356:	nop
  403357:	nop
  403358:	nop
  403359:	nop
  40335a:	nop
  40335b:	nop
  40335c:	nop
  40335d:	nop
  40335e:	nop
  40335f:	nop
  403360:	sub    rsp,0x28
  403364:	movsd  QWORD PTR [rsp+0x8],xmm0
  40336a:	fld    QWORD PTR [rsp+0x8]
  40336e:	push   rax
  40336f:	sub    rsp,0x8
  403373:	fnstcw WORD PTR [rsp+0x4]
  403377:	movzx  eax,WORD PTR [rsp+0x4]
  40337c:	or     ah,0xc
  40337f:	mov    WORD PTR [rsp],ax
  403383:	fldcw  WORD PTR [rsp]
  403386:	frndint 
  403388:	fldcw  WORD PTR [rsp+0x4]
  40338c:	add    rsp,0x8
  403390:	pop    rax
  403391:	test   rdx,rdx
  403394:	fstp   QWORD PTR [rsp+0x8]
  403398:	je     0x4033a4
  40339a:	movsd  xmm2,QWORD PTR [rsp+0x8]
  4033a0:	movsd  QWORD PTR [rdx],xmm2
  4033a4:	movsd  QWORD PTR [rsp+0x18],xmm0
  4033aa:	mov    eax,DWORD PTR [rsp+0x1c]
  4033ae:	mov    ecx,eax
  4033b0:	and    eax,0x7ff00000
  4033b5:	and    ecx,0xfffff
  4033bb:	or     ecx,DWORD PTR [rsp+0x18]
  4033bf:	mov    edx,ecx
  4033c1:	or     edx,eax
  4033c3:	sete   r8b
  4033c7:	test   eax,eax
  4033c9:	sete   dl
  4033cc:	or     edx,r8d
  4033cf:	xor    edx,0x1
  4033d2:	cmp    eax,0x7ff00000
  4033d7:	sete   al
  4033da:	and    edx,eax
  4033dc:	test   ecx,ecx
  4033de:	setne  al
  4033e1:	cmp    dl,al
  4033e3:	jbe    0x4033f0
  4033e5:	pxor   xmm0,xmm0
  4033e9:	add    rsp,0x28
  4033ed:	ret    
  4033ee:	xchg   ax,ax
  4033f0:	subsd  xmm0,QWORD PTR [rsp+0x8]
  4033f6:	add    rsp,0x28
  4033fa:	ret    
  4033fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403400:	push   rdi
  403401:	push   rsi
  403402:	push   rbx
  403403:	sub    rsp,0xc0
  40340a:	movaps XMMWORD PTR [rsp+0x80],xmm6
  403412:	movaps XMMWORD PTR [rsp+0x90],xmm7
  40341a:	movaps XMMWORD PTR [rsp+0xa0],xmm8
  403423:	movaps XMMWORD PTR [rsp+0xb0],xmm9
  40342c:	mov    ecx,0x4000
  403431:	movsd  QWORD PTR [rsp+0x70],xmm0
  403437:	movapd xmm8,xmm0
  40343c:	mov    eax,DWORD PTR [rsp+0x74]
  403440:	movapd xmm7,xmm1
  403444:	mov    edx,eax
  403446:	and    eax,0x7ff00000
  40344b:	and    edx,0xfffff
  403451:	or     edx,DWORD PTR [rsp+0x70]
  403455:	mov    edi,edx
  403457:	or     edi,eax
  403459:	je     0x403467
  40345b:	test   eax,eax
  40345d:	mov    cx,0x4400
  403461:	jne    0x403561
  403467:	movsd  QWORD PTR [rsp+0x78],xmm7
  40346d:	mov    eax,DWORD PTR [rsp+0x7c]
  403471:	movsd  xmm0,QWORD PTR [rip+0x93b7]        # 0x40c830
  403479:	mov    edx,eax
  40347b:	and    eax,0x7ff00000
  403480:	and    edx,0xfffff
  403486:	or     edx,DWORD PTR [rsp+0x78]
  40348a:	mov    esi,edx
  40348c:	or     esi,eax
  40348e:	je     0x403503
  403490:	test   eax,eax
  403492:	jne    0x403530
  403498:	mov    r8d,0x4400
  40349e:	movsd  xmm6,QWORD PTR [rip+0x938a]        # 0x40c830
  4034a6:	ucomisd xmm8,xmm6
  4034ab:	jp     0x4034af
  4034ad:	je     0x4034ff
  4034af:	cmp    ecx,0x100
  4034b5:	jne    0x403590
  4034bb:	movq   rax,xmm8
  4034c0:	shr    rax,0x20
  4034c4:	test   eax,eax
  4034c6:	js     0x403770
  4034cc:	movsd  xmm6,QWORD PTR [rip+0x933c]        # 0x40c810
  4034d4:	call   0x407eb0
  4034d9:	mov    DWORD PTR [rax],0x21
  4034df:	movsd  QWORD PTR [rsp+0x20],xmm6
  4034e5:	movapd xmm3,xmm7
  4034e9:	movapd xmm2,xmm8
  4034ee:	lea    rdx,[rip+0x930b]        # 0x40c800
  4034f5:	mov    ecx,0x1
  4034fa:	call   0x401c50
  4034ff:	movapd xmm0,xmm6
  403503:	movaps xmm6,XMMWORD PTR [rsp+0x80]
  40350b:	movaps xmm7,XMMWORD PTR [rsp+0x90]
  403513:	movaps xmm8,XMMWORD PTR [rsp+0xa0]
  40351c:	movaps xmm9,XMMWORD PTR [rsp+0xb0]
  403525:	add    rsp,0xc0
  40352c:	pop    rbx
  40352d:	pop    rsi
  40352e:	pop    rdi
  40352f:	ret    
  403530:	cmp    eax,0x7ff00000
  403535:	mov    r8d,0x400
  40353b:	jne    0x40349e
  403541:	test   edx,edx
  403543:	mov    r8w,0x500
  403548:	je     0x40349e
  40354e:	ucomisd xmm8,xmm0
  403553:	jp     0x4034bb
  403559:	jne    0x4034bb
  40355f:	jmp    0x403503
  403561:	cmp    eax,0x7ff00000
  403566:	mov    cx,0x400
  40356a:	jne    0x403467
  403570:	cmp    edx,0x1
  403573:	sbb    ecx,ecx
  403575:	and    ecx,0x400
  40357b:	add    ecx,0x100
  403581:	jmp    0x403467
  403586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403590:	cmp    ecx,0x4000
  403596:	je     0x403630
  40359c:	cmp    r8d,0x500
  4035a3:	je     0x403600
  4035a5:	cmp    ecx,0x500
  4035ab:	jne    0x403682
  4035b1:	movq   rax,xmm8
  4035b6:	shr    rax,0x20
  4035ba:	test   eax,eax
  4035bc:	js     0x4038a0
  4035c2:	movapd xmm0,xmm7
  4035c6:	mov    edx,0xffffffff
  4035cb:	call   0x403260
  4035d0:	lea    rdx,[rsp+0x68]
  4035d5:	call   0x403360
  4035da:	movq   rax,xmm7
  4035df:	shr    rax,0x20
  4035e3:	test   eax,eax
  4035e5:	pxor   xmm9,xmm9
  4035ea:	js     0x403678
  4035f0:	movsd  xmm0,QWORD PTR [rip+0x9230]        # 0x40c828
  4035f8:	jmp    0x403503
  4035fd:	nop    DWORD PTR [rax]
  403600:	cmp    ecx,0x500
  403606:	je     0x4035da
  403608:	movq   rax,xmm8
  40360d:	shr    rax,0x20
  403611:	test   eax,eax
  403613:	js     0x403910
  403619:	movq   rax,xmm7
  40361e:	shr    rax,0x20
  403622:	ucomisd xmm8,xmm6
  403627:	ja     0x4035e3
  403629:	jmp    0x40366b
  40362b:	nop    DWORD PTR [rax+rax*1+0x0]
  403630:	cmp    r8d,0x500
  403637:	je     0x403662
  403639:	movq   rax,xmm8
  40363e:	shr    rax,0x20
  403642:	test   eax,eax
  403644:	js     0x403804
  40364a:	movapd xmm0,xmm7
  40364e:	mov    edx,0xffffffff
  403653:	call   0x403260
  403658:	lea    rdx,[rsp+0x68]
  40365d:	call   0x403360
  403662:	movq   rax,xmm7
  403667:	shr    rax,0x20
  40366b:	test   eax,eax
  40366d:	pxor   xmm9,xmm9
  403672:	js     0x4035f0
  403678:	movapd xmm0,xmm9
  40367d:	jmp    0x403503
  403682:	lea    rbx,[rsp+0x68]
  403687:	pxor   xmm9,xmm9
  40368c:	movapd xmm0,xmm7
  403690:	mov    rdx,rbx
  403693:	call   0x403360
  403698:	ucomisd xmm0,xmm9
  40369d:	jp     0x403780
  4036a3:	jne    0x403780
  4036a9:	movsd  xmm0,QWORD PTR [rsp+0x68]
  4036af:	movsd  xmm1,QWORD PTR [rip+0x91a1]        # 0x40c858
  4036b7:	ucomisd xmm1,xmm0
  4036bb:	jb     0x4036cb
  4036bd:	ucomisd xmm0,QWORD PTR [rip+0x91ab]        # 0x40c870
  4036c5:	jae    0x4039b0
  4036cb:	movsd  xmm0,QWORD PTR [rip+0x918d]        # 0x40c860
  4036d3:	lea    rsi,[rsp+0x50]
  4036d8:	lea    rdi,[rsp+0x40]
  4036dd:	andpd  xmm0,xmm8
  4036e2:	mov    rdx,rdi
  4036e5:	mov    rcx,rsi
  4036e8:	movsd  QWORD PTR [rsp+0x30],xmm0
  4036ee:	fld    QWORD PTR [rsp+0x30]
  4036f2:	fstp   TBYTE PTR [rsp+0x40]
  4036f6:	call   0x4060c0
  4036fb:	mov    rdx,rdi
  4036fe:	mov    rcx,rsi
  403701:	movsd  QWORD PTR [rsp+0x30],xmm7
  403707:	fld    TBYTE PTR [rsp+0x50]
  40370b:	fld    QWORD PTR [rsp+0x30]
  40370f:	fmulp  st(1),st
  403711:	fstp   TBYTE PTR [rsp+0x40]
  403715:	call   0x406040
  40371a:	movq   rax,xmm8
  40371f:	fld    TBYTE PTR [rsp+0x50]
  403723:	shr    rax,0x20
  403727:	test   eax,eax
  403729:	fstp   QWORD PTR [rsp+0x38]
  40372d:	movsd  xmm6,QWORD PTR [rsp+0x38]
  403733:	jns    0x4034ff
  403739:	movapd xmm0,xmm7
  40373d:	mov    edx,0xffffffff
  403742:	call   0x403260
  403747:	mov    rdx,rbx
  40374a:	call   0x403360
  40374f:	ucomisd xmm0,xmm9
  403754:	jp     0x40375c
  403756:	je     0x4034ff
  40375c:	movsd  xmm4,QWORD PTR [rip+0x90dc]        # 0x40c840
  403764:	xorpd  xmm6,xmm4
  403768:	jmp    0x4034ff
  40376d:	nop    DWORD PTR [rax]
  403770:	movsd  xmm6,QWORD PTR [rip+0x9090]        # 0x40c808
  403778:	jmp    0x4034d4
  40377d:	nop    DWORD PTR [rax]
  403780:	movq   rax,xmm8
  403785:	shr    rax,0x20
  403789:	test   eax,eax
  40378b:	js     0x4039c3
  403791:	ucomisd xmm7,QWORD PTR [rip+0x90b7]        # 0x40c850
  403799:	jp     0x4037a1
  40379b:	je     0x4038f0
  4037a1:	movsd  xmm0,QWORD PTR [rip+0x90b7]        # 0x40c860
  4037a9:	lea    rbx,[rsp+0x50]
  4037ae:	lea    rsi,[rsp+0x40]
  4037b3:	andpd  xmm8,xmm0
  4037b8:	mov    rdx,rsi
  4037bb:	mov    rcx,rbx
  4037be:	movsd  QWORD PTR [rsp+0x30],xmm8
  4037c5:	fld    QWORD PTR [rsp+0x30]
  4037c9:	fstp   TBYTE PTR [rsp+0x40]
  4037cd:	call   0x4060c0
  4037d2:	mov    rdx,rsi
  4037d5:	mov    rcx,rbx
  4037d8:	movsd  QWORD PTR [rsp+0x30],xmm7
  4037de:	fld    TBYTE PTR [rsp+0x50]
  4037e2:	fld    QWORD PTR [rsp+0x30]
  4037e6:	fmulp  st(1),st
  4037e8:	fstp   TBYTE PTR [rsp+0x40]
  4037ec:	call   0x406040
  4037f1:	fld    TBYTE PTR [rsp+0x50]
  4037f5:	fstp   QWORD PTR [rsp+0x38]
  4037f9:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4037ff:	jmp    0x403503
  403804:	lea    rbx,[rsp+0x68]
  403809:	pxor   xmm9,xmm9
  40380e:	movapd xmm0,xmm7
  403812:	mov    rdx,rbx
  403815:	call   0x403360
  40381a:	ucomisd xmm0,xmm9
  40381f:	jp     0x403823
  403821:	je     0x40384f
  403823:	movq   rax,xmm7
  403828:	shr    rax,0x20
  40382c:	test   eax,eax
  40382e:	jns    0x403678
  403834:	movsd  xmm0,QWORD PTR [rip+0x9004]        # 0x40c840
  40383c:	xorpd  xmm8,xmm0
  403841:	divsd  xmm6,xmm8
  403846:	movapd xmm0,xmm6
  40384a:	jmp    0x403503
  40384f:	movapd xmm0,xmm7
  403853:	mov    edx,0xffffffff
  403858:	call   0x403260
  40385d:	mov    rdx,rbx
  403860:	call   0x403360
  403865:	ucomisd xmm0,xmm9
  40386a:	mov    edx,0x1
  40386f:	setp   al
  403872:	cmove  edx,eax
  403875:	movq   rax,xmm7
  40387a:	shr    rax,0x20
  40387e:	test   eax,eax
  403880:	js     0x4039db
  403886:	test   dl,dl
  403888:	je     0x403678
  40388e:	movsd  xmm0,QWORD PTR [rip+0x8f82]        # 0x40c818
  403896:	jmp    0x403503
  40389b:	nop    DWORD PTR [rax+rax*1+0x0]
  4038a0:	lea    rbx,[rsp+0x68]
  4038a5:	pxor   xmm9,xmm9
  4038aa:	movapd xmm0,xmm7
  4038ae:	mov    rdx,rbx
  4038b1:	call   0x403360
  4038b6:	ucomisd xmm0,xmm9
  4038bb:	jp     0x4038bf
  4038bd:	je     0x403933
  4038bf:	movq   rax,xmm7
  4038c4:	shr    rax,0x20
  4038c8:	test   eax,eax
  4038ca:	js     0x403834
  4038d0:	movsd  xmm4,QWORD PTR [rip+0x8f68]        # 0x40c840
  4038d8:	movapd xmm0,xmm8
  4038dd:	xorpd  xmm0,xmm4
  4038e1:	jmp    0x403503
  4038e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038f0:	movsd  QWORD PTR [rsp+0x30],xmm8
  4038f7:	fld    QWORD PTR [rsp+0x30]
  4038fb:	fsqrt  
  4038fd:	fstp   QWORD PTR [rsp+0x30]
  403901:	movsd  xmm0,QWORD PTR [rsp+0x30]
  403907:	jmp    0x403503
  40390c:	nop    DWORD PTR [rax+0x0]
  403910:	movsd  xmm0,QWORD PTR [rip+0x8f28]        # 0x40c840
  403918:	xorpd  xmm8,xmm0
  40391d:	ucomisd xmm8,xmm6
  403922:	jp     0x403619
  403928:	je     0x4034ff
  40392e:	jmp    0x403619
  403933:	movapd xmm0,xmm7
  403937:	mov    edx,0xffffffff
  40393c:	call   0x403260
  403941:	mov    rdx,rbx
  403944:	call   0x403360
  403949:	ucomisd xmm0,xmm9
  40394e:	mov    edx,0x1
  403953:	setp   al
  403956:	cmove  edx,eax
  403959:	movq   rax,xmm7
  40395e:	shr    rax,0x20
  403962:	mov    ecx,eax
  403964:	shr    ecx,0x1f
  403967:	cmp    cl,dl
  403969:	ja     0x403678
  40396f:	not    eax
  403971:	shr    eax,0x1f
  403974:	test   dl,dl
  403976:	je     0x403988
  403978:	test   al,al
  40397a:	movsd  xmm0,QWORD PTR [rip+0x8e9e]        # 0x40c820
  403982:	jne    0x403503
  403988:	cmp    al,dl
  40398a:	ja     0x4035f0
  403990:	test   cl,cl
  403992:	jne    0x403886
  403998:	test   dl,dl
  40399a:	movsd  xmm0,QWORD PTR [rip+0x8e7e]        # 0x40c820
  4039a2:	jne    0x403503
  4039a8:	jmp    0x4035f0
  4039ad:	nop    DWORD PTR [rax]
  4039b0:	cvttsd2si edx,xmm7
  4039b4:	movapd xmm0,xmm8
  4039b9:	call   0x405d40
  4039be:	jmp    0x403503
  4039c3:	call   0x407eb0
  4039c8:	movsd  xmm6,QWORD PTR [rip+0x8e38]        # 0x40c808
  4039d0:	mov    DWORD PTR [rax],0x21
  4039d6:	jmp    0x4034df
  4039db:	test   dl,dl
  4039dd:	je     0x4035f0
  4039e3:	movsd  xmm0,QWORD PTR [rip+0x8e35]        # 0x40c820
  4039eb:	jmp    0x403503
  4039f0:	push   rbx
  4039f1:	add    rsp,0xffffffffffffff80
  4039f5:	movaps XMMWORD PTR [rsp+0x70],xmm6
  4039fa:	movq   QWORD PTR [rsp+0x68],xmm0
  403a00:	movq   rbx,xmm0
  403a05:	mov    eax,DWORD PTR [rsp+0x6c]
  403a09:	mov    edx,eax
  403a0b:	and    eax,0x7ff00000
  403a10:	and    edx,0xfffff
  403a16:	or     edx,DWORD PTR [rsp+0x68]
  403a1a:	mov    ecx,edx
  403a1c:	or     ecx,eax
  403a1e:	je     0x403a27
  403a20:	cmp    eax,0x7ff00000
  403a25:	je     0x403a60
  403a27:	mov    QWORD PTR [rsp+0x30],rbx
  403a2c:	lea    rcx,[rsp+0x50]
  403a31:	lea    rdx,[rsp+0x40]
  403a36:	fld    QWORD PTR [rsp+0x30]
  403a3a:	fstp   TBYTE PTR [rsp+0x40]
  403a3e:	call   0x403af0
  403a43:	fld    TBYTE PTR [rsp+0x50]
  403a47:	fstp   QWORD PTR [rsp+0x38]
  403a4b:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403a51:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  403a56:	sub    rsp,0xffffffffffffff80
  403a5a:	pop    rbx
  403a5b:	ret    
  403a5c:	nop    DWORD PTR [rax+0x0]
  403a60:	test   edx,edx
  403a62:	je     0x403aa1
  403a64:	call   0x407eb0
  403a69:	pxor   xmm3,xmm3
  403a6d:	mov    DWORD PTR [rax],0x21
  403a73:	mov    QWORD PTR [rsp+0x30],rbx
  403a78:	lea    rdx,[rip+0x8e01]        # 0x40c880
  403a7f:	mov    QWORD PTR [rsp+0x20],rbx
  403a84:	movsd  xmm2,QWORD PTR [rsp+0x30]
  403a8a:	mov    ecx,0x1
  403a8f:	call   0x401c50
  403a94:	mov    QWORD PTR [rsp+0x30],rbx
  403a99:	movsd  xmm0,QWORD PTR [rsp+0x30]
  403a9f:	jmp    0x403a51
  403aa1:	call   0x407eb0
  403aa6:	movsd  xmm6,QWORD PTR [rip+0x8dda]        # 0x40c888
  403aae:	mov    DWORD PTR [rax],0x21
  403ab4:	pxor   xmm3,xmm3
  403ab8:	mov    QWORD PTR [rsp+0x30],rbx
  403abd:	movsd  QWORD PTR [rsp+0x20],xmm6
  403ac3:	lea    rdx,[rip+0x8db6]        # 0x40c880
  403aca:	mov    ecx,0x1
  403acf:	movsd  xmm2,QWORD PTR [rsp+0x30]
  403ad5:	call   0x401c50
  403ada:	movapd xmm0,xmm6
  403ade:	jmp    0x403a51
  403ae3:	nop
  403ae4:	nop
  403ae5:	nop
  403ae6:	nop
  403ae7:	nop
  403ae8:	nop
  403ae9:	nop
  403aea:	nop
  403aeb:	nop
  403aec:	nop
  403aed:	nop
  403aee:	nop
  403aef:	nop
  403af0:	fld    TBYTE PTR [rdx]
  403af2:	fsin   
  403af4:	fnstsw ax
  403af6:	test   eax,0x400
  403afb:	jne    0x403b0b
  403afd:	mov    rax,rcx
  403b00:	mov    QWORD PTR [rcx+0x8],0x0
  403b08:	fstp   TBYTE PTR [rcx]
  403b0a:	ret    
  403b0b:	fldpi  
  403b0d:	fadd   st,st(0)
  403b0f:	fxch   st(1)
  403b11:	fprem1 
  403b13:	fnstsw ax
  403b15:	test   eax,0x400
  403b1a:	jne    0x403b11
  403b1c:	fstp   st(1)
  403b1e:	fsin   
  403b20:	mov    rax,rcx
  403b23:	mov    QWORD PTR [rcx+0x8],0x0
  403b2b:	fstp   TBYTE PTR [rcx]
  403b2d:	ret    
  403b2e:	nop
  403b2f:	nop
  403b30:	push   rsi
  403b31:	push   rbx
  403b32:	sub    rsp,0x28
  403b36:	movsxd rax,DWORD PTR [rcx+0x14]
  403b3a:	lea    rdx,[rcx+0x18]
  403b3e:	mov    rbx,rcx
  403b41:	lea    r9,[rdx+rax*4]
  403b45:	mov    rcx,rax
  403b48:	jmp    0x403b60
  403b4a:	nop    WORD PTR [rax+rax*1+0x0]
  403b50:	add    rdx,0x4
  403b54:	mov    DWORD PTR [rdx-0x4],0x0
  403b5b:	cmp    r9,rdx
  403b5e:	jbe    0x403b80
  403b60:	mov    r8d,DWORD PTR [rdx]
  403b63:	cmp    r8d,0xffffffff
  403b67:	je     0x403b50
  403b69:	add    r8d,0x1
  403b6d:	mov    rax,rbx
  403b70:	mov    DWORD PTR [rdx],r8d
  403b73:	add    rsp,0x28
  403b77:	pop    rbx
  403b78:	pop    rsi
  403b79:	ret    
  403b7a:	nop    WORD PTR [rax+rax*1+0x0]
  403b80:	cmp    ecx,DWORD PTR [rbx+0xc]
  403b83:	jge    0x403ba0
  403b85:	add    ecx,0x1
  403b88:	mov    DWORD PTR [rbx+0x14],ecx
  403b8b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  403b93:	mov    rax,rbx
  403b96:	add    rsp,0x28
  403b9a:	pop    rbx
  403b9b:	pop    rsi
  403b9c:	ret    
  403b9d:	nop    DWORD PTR [rax]
  403ba0:	mov    eax,DWORD PTR [rbx+0x8]
  403ba3:	lea    ecx,[rax+0x1]
  403ba6:	call   0x4070a0
  403bab:	mov    rsi,rax
  403bae:	lea    rcx,[rax+0x10]
  403bb2:	movsxd rax,DWORD PTR [rbx+0x14]
  403bb6:	lea    rdx,[rbx+0x10]
  403bba:	lea    r8,[rax*4+0x8]
  403bc2:	call   0x407e20
  403bc7:	mov    rcx,rbx
  403bca:	mov    rbx,rsi
  403bcd:	call   0x4071b0
  403bd2:	movsxd rax,DWORD PTR [rsi+0x14]
  403bd6:	mov    rcx,rax
  403bd9:	jmp    0x403b85
  403bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  403be0:	push   r15
  403be2:	push   r14
  403be4:	push   r13
  403be6:	push   r12
  403be8:	push   rbp
  403be9:	push   rdi
  403bea:	push   rsi
  403beb:	push   rbx
  403bec:	sub    rsp,0x48
  403bf0:	mov    rdi,rdx
  403bf3:	mov    r12,r8
  403bf6:	lea    rdx,[rsp+0x3c]
  403bfb:	lea    r8,[rsp+0x38]
  403c00:	movsd  xmm0,QWORD PTR [rcx]
  403c04:	mov    r13,r9
  403c07:	call   0x407980
  403c0c:	mov    r10d,DWORD PTR [rsp+0x38]
  403c11:	mov    esi,DWORD PTR [rdi]
  403c13:	mov    rbx,rax
  403c16:	mov    edx,DWORD PTR [rsp+0x3c]
  403c1a:	sub    r10d,esi
  403c1d:	add    edx,r10d
  403c20:	test   r10d,r10d
  403c23:	mov    DWORD PTR [rsp+0x38],r10d
  403c28:	mov    DWORD PTR [rsp+0x3c],edx
  403c2c:	jle    0x403df0
  403c32:	cmp    esi,0x35
  403c35:	je     0x403e20
  403c3b:	cmp    DWORD PTR [rsp+0xb8],0x1
  403c43:	je     0x403cf4
  403c49:	cmp    DWORD PTR [rsp+0xb8],0x2
  403c51:	je     0x403c80
  403c53:	mov    eax,r10d
  403c56:	sub    eax,0x1
  403c59:	jne    0x403ef0
  403c5f:	mov    ecx,DWORD PTR [rsp+0xb0]
  403c66:	xor    r15d,r15d
  403c69:	test   ecx,ecx
  403c6b:	je     0x403d77
  403c71:	test   BYTE PTR [rbx+0x18],0x2
  403c75:	je     0x403e3e
  403c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c80:	mov    edx,r10d
  403c83:	mov    rcx,rbx
  403c86:	call   0x407d40
  403c8b:	mov    edx,DWORD PTR [rsp+0x38]
  403c8f:	mov    rcx,rbx
  403c92:	mov    r14d,eax
  403c95:	call   0x4069f0
  403c9a:	mov    rcx,rbx
  403c9d:	call   0x403b30
  403ca2:	mov    edx,esi
  403ca4:	mov    rbx,rax
  403ca7:	and    edx,0x1f
  403caa:	jne    0x403ee0
  403cb0:	mov    eax,DWORD PTR [rbx+0x14]
  403cb3:	sub    eax,0x1
  403cb6:	cdqe   
  403cb8:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  403cbd:	xor    eax,0x1f
  403cc0:	cmp    edx,eax
  403cc2:	je     0x403f70
  403cc8:	test   r14d,r14d
  403ccb:	jne    0x403cd5
  403ccd:	mov    r14d,DWORD PTR [rbx+0x18]
  403cd1:	and    r14d,0x1
  403cd5:	mov    edx,0x1
  403cda:	mov    rcx,rbx
  403cdd:	mov    ebp,0x20
  403ce2:	call   0x4069f0
  403ce7:	mov    eax,DWORD PTR [rsp+0x3c]
  403ceb:	lea    edx,[rax+0x1]
  403cee:	mov    DWORD PTR [rsp+0x3c],edx
  403cf2:	jmp    0x403d1f
  403cf4:	mov    edx,r10d
  403cf7:	mov    rcx,rax
  403cfa:	call   0x407d40
  403cff:	test   eax,eax
  403d01:	mov    r14d,eax
  403d04:	jne    0x403d93
  403d0a:	mov    edx,DWORD PTR [rsp+0x38]
  403d0e:	mov    rcx,rbx
  403d11:	xor    r14d,r14d
  403d14:	xor    ebp,ebp
  403d16:	call   0x4069f0
  403d1b:	mov    edx,DWORD PTR [rsp+0x3c]
  403d1f:	mov    eax,DWORD PTR [rdi+0x4]
  403d22:	cmp    eax,edx
  403d24:	jle    0x403db0
  403d2a:	mov    r8d,eax
  403d2d:	mov    DWORD PTR [rsp+0x3c],eax
  403d31:	sub    r8d,edx
  403d34:	cmp    esi,r8d
  403d37:	jge    0x403e70
  403d3d:	mov    rdi,QWORD PTR [rsp+0xc0]
  403d45:	mov    DWORD PTR [rbx+0x14],0x0
  403d4c:	mov    edx,eax
  403d4e:	xor    ebp,ebp
  403d50:	mov    DWORD PTR [rdi],0x50
  403d56:	mov    DWORD PTR [r12],edx
  403d5a:	mov    r8,rbx
  403d5d:	mov    edx,esi
  403d5f:	mov    rcx,r13
  403d62:	mov    r15d,0x1
  403d68:	call   0x407cd0
  403d6d:	mov    rax,QWORD PTR [rsp+0xc0]
  403d75:	or     DWORD PTR [rax],ebp
  403d77:	mov    rcx,rbx
  403d7a:	call   0x4071b0
  403d7f:	mov    eax,r15d
  403d82:	add    rsp,0x48
  403d86:	pop    rbx
  403d87:	pop    rsi
  403d88:	pop    rdi
  403d89:	pop    rbp
  403d8a:	pop    r12
  403d8c:	pop    r13
  403d8e:	pop    r14
  403d90:	pop    r15
  403d92:	ret    
  403d93:	mov    edx,DWORD PTR [rsp+0x38]
  403d97:	mov    rcx,rbx
  403d9a:	mov    ebp,0x10
  403d9f:	call   0x4069f0
  403da4:	jmp    0x403d1b
  403da9:	nop    DWORD PTR [rax+0x0]
  403db0:	mov    eax,DWORD PTR [rdi+0x8]
  403db3:	cmp    eax,edx
  403db5:	jge    0x403d56
  403db7:	add    eax,0x1
  403dba:	xor    ebp,ebp
  403dbc:	mov    DWORD PTR [rsp+0x3c],eax
  403dc0:	mov    rax,QWORD PTR [rsp+0xc0]
  403dc8:	mov    DWORD PTR [rax],0xa3
  403dce:	call   0x407eb0
  403dd3:	mov    DWORD PTR [rax],0x22
  403dd9:	mov    DWORD PTR [rbx+0x14],0x0
  403de0:	mov    edx,DWORD PTR [rsp+0x3c]
  403de4:	jmp    0x403d56
  403de9:	nop    DWORD PTR [rax+0x0]
  403df0:	mov    r9d,DWORD PTR [rsp+0xb0]
  403df8:	xor    r15d,r15d
  403dfb:	test   r9d,r9d
  403dfe:	je     0x403d77
  403e04:	test   r10d,r10d
  403e07:	jne    0x403f50
  403e0d:	xor    r14d,r14d
  403e10:	xor    ebp,ebp
  403e12:	jmp    0x403d1f
  403e17:	nop    WORD PTR [rax+rax*1+0x0]
  403e20:	mov    r8d,DWORD PTR [rsp+0xb0]
  403e28:	xor    r15d,r15d
  403e2b:	test   r8d,r8d
  403e2e:	je     0x403d77
  403e34:	cmp    DWORD PTR [rdi+0xc],0x1
  403e38:	jne    0x403d77
  403e3e:	mov    edx,r10d
  403e41:	mov    rcx,rbx
  403e44:	call   0x407d40
  403e49:	test   eax,eax
  403e4b:	mov    r14d,eax
  403e4e:	je     0x403d0a
  403e54:	mov    edx,DWORD PTR [rsp+0x38]
  403e58:	mov    rcx,rbx
  403e5b:	mov    ebp,0x10
  403e60:	call   0x4069f0
  403e65:	mov    edx,DWORD PTR [rsp+0x3c]
  403e69:	jmp    0x403d1f
  403e6e:	xchg   ax,ax
  403e70:	mov    edx,DWORD PTR [rdi+0x10]
  403e73:	test   edx,edx
  403e75:	jne    0x403d3d
  403e7b:	lea    edi,[r8-0x1]
  403e7f:	test   r14d,r14d
  403e82:	sete   al
  403e85:	test   edi,edi
  403e87:	jle    0x403f2c
  403e8d:	test   al,al
  403e8f:	jne    0x403f10
  403e91:	mov    ecx,edi
  403e93:	sar    edi,0x5
  403e96:	mov    eax,0x1
  403e9b:	movsxd rdi,edi
  403e9e:	shl    eax,cl
  403ea0:	mov    edx,r8d
  403ea3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  403ea7:	mov    rcx,rbx
  403eaa:	mov    edi,eax
  403eac:	call   0x4069f0
  403eb1:	mov    rax,QWORD PTR [rsp+0xc0]
  403eb9:	test   edi,edi
  403ebb:	mov    DWORD PTR [rax],0x2
  403ec1:	jne    0x403f80
  403ec7:	test   r14d,r14d
  403eca:	mov    edx,DWORD PTR [rsp+0x3c]
  403ece:	je     0x403d56
  403ed4:	mov    ebp,0x50
  403ed9:	jmp    0x403d56
  403ede:	xchg   ax,ax
  403ee0:	mov    eax,0x20
  403ee5:	sub    eax,edx
  403ee7:	mov    edx,eax
  403ee9:	jmp    0x403cb0
  403eee:	xchg   ax,ax
  403ef0:	mov    edx,eax
  403ef2:	sar    edx,0x5
  403ef5:	movsxd rdx,edx
  403ef8:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  403efc:	bt     edx,eax
  403eff:	jb     0x403c80
  403f05:	jmp    0x403e3e
  403f0a:	nop    WORD PTR [rax+rax*1+0x0]
  403f10:	mov    edx,edi
  403f12:	mov    rcx,rbx
  403f15:	mov    DWORD PTR [rsp+0x2c],r8d
  403f1a:	call   0x407d40
  403f1f:	mov    r8d,DWORD PTR [rsp+0x2c]
  403f24:	test   eax,eax
  403f26:	mov    r14d,eax
  403f29:	sete   al
  403f2c:	test   al,al
  403f2e:	je     0x403e91
  403f34:	mov    eax,DWORD PTR [rsp+0xb0]
  403f3b:	xor    r15d,r15d
  403f3e:	test   eax,eax
  403f40:	je     0x403d77
  403f46:	jmp    0x403e91
  403f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f50:	mov    edx,r10d
  403f53:	mov    rcx,rbx
  403f56:	neg    edx
  403f58:	call   0x4075b0
  403f5d:	mov    edx,DWORD PTR [rsp+0x3c]
  403f61:	mov    rbx,rax
  403f64:	jmp    0x403e0d
  403f69:	nop    DWORD PTR [rax+0x0]
  403f70:	mov    edx,DWORD PTR [rsp+0x3c]
  403f74:	mov    ebp,0x20
  403f79:	jmp    0x403d1f
  403f7e:	xchg   ax,ax
  403f80:	mov    rcx,rbx
  403f83:	mov    ebp,0x60
  403f88:	call   0x403b30
  403f8d:	mov    edx,DWORD PTR [rsp+0x3c]
  403f91:	mov    rbx,rax
  403f94:	jmp    0x403d56
  403f99:	nop    DWORD PTR [rax+0x0]
  403fa0:	movsxd rdx,DWORD PTR [rcx+0x14]
  403fa4:	lea    rax,[rcx+0x18]
  403fa8:	lea    rcx,[rax+rdx*4]
  403fac:	jmp    0x403fc0
  403fae:	xchg   ax,ax
  403fb0:	add    rax,0x4
  403fb4:	mov    DWORD PTR [rax-0x4],0xffffffff
  403fbb:	cmp    rcx,rax
  403fbe:	jbe    0x403fd0
  403fc0:	mov    edx,DWORD PTR [rax]
  403fc2:	test   edx,edx
  403fc4:	je     0x403fb0
  403fc6:	sub    edx,0x1
  403fc9:	mov    DWORD PTR [rax],edx
  403fcb:	ret    
  403fcc:	nop    DWORD PTR [rax+0x0]
  403fd0:	repz ret 
  403fd2:	nop    DWORD PTR [rax+0x0]
  403fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fe0:	push   rbx
  403fe1:	sub    rsp,0x30
  403fe5:	lea    ebx,[rdx+0x1f]
  403fe8:	mov    rax,rcx
  403feb:	sar    ebx,0x5
  403fee:	cmp    ebx,DWORD PTR [rcx+0x8]
  403ff1:	jg     0x404070
  403ff3:	mov    r9d,edx
  403ff6:	sar    r9d,0x5
  403ffa:	and    edx,0x1f
  403ffd:	je     0x404050
  403fff:	add    r9d,0x1
  404003:	lea    r8,[rax+0x18]
  404007:	mov    DWORD PTR [rax+0x14],r9d
  40400b:	movsxd r9,r9d
  40400e:	lea    r9,[r8+r9*4]
  404012:	cmp    r8,r9
  404015:	jae    0x404035
  404017:	nop    WORD PTR [rax+rax*1+0x0]
  404020:	add    r8,0x4
  404024:	mov    DWORD PTR [r8-0x4],0xffffffff
  40402c:	cmp    r8,r9
  40402f:	jb     0x404020
  404031:	test   edx,edx
  404033:	je     0x404040
  404035:	mov    ecx,0x20
  40403a:	sub    ecx,edx
  40403c:	shr    DWORD PTR [r8-0x4],cl
  404040:	add    rsp,0x30
  404044:	pop    rbx
  404045:	ret    
  404046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404050:	lea    r8,[rax+0x18]
  404054:	mov    DWORD PTR [rax+0x14],r9d
  404058:	movsxd r9,r9d
  40405b:	lea    r9,[r8+r9*4]
  40405f:	cmp    r8,r9
  404062:	jb     0x404020
  404064:	jmp    0x404040
  404066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404070:	mov    DWORD PTR [rsp+0x2c],edx
  404074:	call   0x4071b0
  404079:	mov    ecx,ebx
  40407b:	call   0x4070a0
  404080:	mov    edx,DWORD PTR [rsp+0x2c]
  404084:	jmp    0x403ff3
  404089:	nop    DWORD PTR [rax+0x0]
  404090:	push   r15
  404092:	push   r14
  404094:	push   r13
  404096:	push   r12
  404098:	push   rbp
  404099:	push   rdi
  40409a:	push   rsi
  40409b:	push   rbx
  40409c:	sub    rsp,0x138
  4040a3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  4040ab:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  4040b3:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  4040bc:	movaps XMMWORD PTR [rsp+0x100],xmm9
  4040c5:	movaps XMMWORD PTR [rsp+0x110],xmm10
  4040ce:	movaps XMMWORD PTR [rsp+0x120],xmm11
  4040d7:	mov    rdi,rcx
  4040da:	mov    QWORD PTR [rsp+0x190],r8
  4040e2:	mov    QWORD PTR [rsp+0x188],rdx
  4040ea:	mov    QWORD PTR [rsp+0x198],r9
  4040f2:	call   0x407e30
  4040f7:	mov    rbp,QWORD PTR [rax]
  4040fa:	mov    rcx,rbp
  4040fd:	call   0x407df0
  404102:	mov    r14,rax
  404105:	mov    rax,QWORD PTR [rsp+0x190]
  40410d:	mov    DWORD PTR [rsp+0xa4],0x0
  404118:	mov    QWORD PTR [rsp+0xb0],0x0
  404124:	mov    QWORD PTR [rsp+0xc8],0x0
  404130:	lea    rcx,[rip+0x8795]        # 0x40c8cc
  404137:	mov    QWORD PTR [rsp+0xc0],rdi
  40413f:	mov    eax,DWORD PTR [rax]
  404141:	mov    DWORD PTR [rsp+0x40],eax
  404145:	mov    rax,rdi
  404148:	movzx  r8d,BYTE PTR [rax]
  40414c:	cmp    r8b,0x2d
  404150:	ja     0x404300
  404156:	movzx  edx,r8b
  40415a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40415e:	add    rdx,rcx
  404161:	jmp    rdx
  404163:	mov    DWORD PTR [rsp+0xa4],0x6
  40416e:	mov    QWORD PTR [rsp+0xc0],rdi
  404176:	xor    r8d,r8d
  404179:	mov    DWORD PTR [rsp+0x58],0x0
  404181:	cmp    QWORD PTR [rsp+0x188],0x0
  40418a:	je     0x40419f
  40418c:	mov    rax,QWORD PTR [rsp+0xc0]
  404194:	mov    rsi,QWORD PTR [rsp+0x188]
  40419c:	mov    QWORD PTR [rsi],rax
  40419f:	mov    eax,DWORD PTR [rsp+0x58]
  4041a3:	test   eax,eax
  4041a5:	jne    0x404220
  4041a7:	test   r8,r8
  4041aa:	je     0x4041ca
  4041ac:	mov    rcx,QWORD PTR [rsp+0x1a0]
  4041b4:	mov    edx,DWORD PTR [rsp+0x40]
  4041b8:	call   0x407cd0
  4041bd:	mov    rcx,QWORD PTR [rsp+0xc8]
  4041c5:	call   0x4071b0
  4041ca:	mov    eax,DWORD PTR [rsp+0xa4]
  4041d1:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  4041d9:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  4041e1:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  4041ea:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  4041f3:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  4041fc:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  404205:	add    rsp,0x138
  40420c:	pop    rbx
  40420d:	pop    rsi
  40420e:	pop    rdi
  40420f:	pop    rbp
  404210:	pop    r12
  404212:	pop    r13
  404214:	pop    r14
  404216:	pop    r15
  404218:	ret    
  404219:	nop    DWORD PTR [rax+0x0]
  404220:	or     DWORD PTR [rsp+0xa4],0x8
  404228:	jmp    0x4041a7
  40422d:	nop    DWORD PTR [rax]
  404230:	mov    rdx,rax
  404233:	mov    DWORD PTR [rsp+0x58],0x0
  40423b:	add    rax,0x1
  40423f:	mov    QWORD PTR [rsp+0xc0],rax
  404247:	movzx  r8d,BYTE PTR [rdx+0x1]
  40424c:	test   r8b,r8b
  40424f:	je     0x404163
  404255:	xor    r12d,r12d
  404258:	cmp    r8b,0x30
  40425c:	mov    r15,rax
  40425f:	je     0x404318
  404265:	mov    rax,QWORD PTR [rsp+0x190]
  40426d:	mov    eax,DWORD PTR [rax+0x10]
  404270:	mov    DWORD PTR [rsp+0x84],eax
  404277:	movsx  eax,r8b
  40427b:	lea    edx,[rax-0x30]
  40427e:	cmp    edx,0x9
  404281:	ja     0x404373
  404287:	lea    rcx,[r15+0x1]
  40428b:	xor    edx,edx
  40428d:	xor    esi,esi
  40428f:	xor    ebx,ebx
  404291:	jmp    0x4042c5
  404293:	lea    eax,[rsi+rsi*4]
  404296:	movsx  r8d,r8b
  40429a:	lea    esi,[r8+rax*2-0x30]
  40429f:	mov    QWORD PTR [rsp+0xc0],rcx
  4042a7:	movsx  eax,BYTE PTR [rcx]
  4042aa:	add    ebx,0x1
  4042ad:	mov    r9,rcx
  4042b0:	lea    rcx,[rcx+0x1]
  4042b4:	lea    r10d,[rax-0x30]
  4042b8:	mov    r8d,eax
  4042bb:	cmp    r10d,0x9
  4042bf:	ja     0x404380
  4042c5:	cmp    ebx,0x8
  4042c8:	jle    0x404293
  4042ca:	cmp    ebx,0xf
  4042cd:	jg     0x40429f
  4042cf:	lea    eax,[rdx+rdx*4]
  4042d2:	movsx  r8d,r8b
  4042d6:	lea    edx,[r8+rax*2-0x30]
  4042db:	jmp    0x40429f
  4042dd:	nop    DWORD PTR [rax]
  4042e0:	add    rax,0x1
  4042e4:	mov    QWORD PTR [rsp+0xc0],rax
  4042ec:	movzx  r8d,BYTE PTR [rax]
  4042f0:	cmp    r8b,0x2d
  4042f4:	jbe    0x404156
  4042fa:	nop    WORD PTR [rax+rax*1+0x0]
  404300:	xor    r12d,r12d
  404303:	cmp    r8b,0x30
  404307:	mov    DWORD PTR [rsp+0x58],0x0
  40430f:	mov    r15,rax
  404312:	jne    0x404265
  404318:	movzx  edx,BYTE PTR [rax+0x1]
  40431c:	cmp    dl,0x58
  40431f:	je     0x4054df
  404325:	add    rax,0x1
  404329:	cmp    dl,0x78
  40432c:	je     0x4054df
  404332:	mov    r15,rax
  404335:	mov    QWORD PTR [rsp+0xc0],rax
  40433d:	add    rax,0x1
  404341:	movzx  edx,BYTE PTR [rax-0x1]
  404345:	cmp    dl,0x30
  404348:	je     0x404332
  40434a:	xor    r8d,r8d
  40434d:	test   dl,dl
  40434f:	je     0x404181
  404355:	mov    r8d,edx
  404358:	mov    r12d,0x1
  40435e:	jmp    0x404265
  404363:	mov    rdx,rax
  404366:	mov    DWORD PTR [rsp+0x58],0x1
  40436e:	jmp    0x40423b
  404373:	mov    r9,r15
  404376:	xor    edx,edx
  404378:	xor    esi,esi
  40437a:	xor    ebx,ebx
  40437c:	nop    DWORD PTR [rax+0x0]
  404380:	movsx  ecx,BYTE PTR [rbp+0x0]
  404384:	cmp    ecx,eax
  404386:	je     0x404784
  40438c:	mov    ebp,ebx
  40438e:	xor    ecx,ecx
  404390:	xor    r13d,r13d
  404393:	xor    r11d,r11d
  404396:	mov    r8d,eax
  404399:	and    r8d,0xffffffdf
  40439d:	cmp    r8d,0x45
  4043a1:	je     0x4044a0
  4043a7:	xor    r8d,r8d
  4043aa:	test   ebp,ebp
  4043ac:	jne    0x404615
  4043b2:	or     ecx,r12d
  4043b5:	jne    0x404608
  4043bb:	test   r11d,r11d
  4043be:	jne    0x4045d3
  4043c4:	cmp    eax,0x4e
  4043c7:	je     0x4043e1
  4043c9:	jle    0x4045ca
  4043cf:	cmp    eax,0x69
  4043d2:	je     0x40576a
  4043d8:	cmp    eax,0x6e
  4043db:	jne    0x4045d3
  4043e1:	lea    rbx,[rsp+0xc0]
  4043e9:	lea    rdx,[rip+0x84d9]        # 0x40c8c9
  4043f0:	mov    rcx,rbx
  4043f3:	call   0x407c80
  4043f8:	test   eax,eax
  4043fa:	je     0x4045d3
  404400:	mov    rax,QWORD PTR [rsp+0x190]
  404408:	mov    rsi,QWORD PTR [rsp+0x198]
  404410:	xor    ebp,ebp
  404412:	mov    rdx,QWORD PTR [rsp+0xc0]
  40441a:	mov    DWORD PTR [rsp+0xa4],0x4
  404425:	mov    eax,DWORD PTR [rax+0x8]
  404428:	mov    DWORD PTR [rsp+0x44],eax
  40442c:	add    eax,0x1
  40442f:	mov    DWORD PTR [rsi],eax
  404431:	cmp    BYTE PTR [rdx],0x28
  404434:	je     0x405b46
  40443a:	nop    WORD PTR [rax+rax*1+0x0]
  404440:	mov    rsi,QWORD PTR [rsp+0x198]
  404448:	mov    DWORD PTR [rsi],eax
  40444a:	mov    r8,QWORD PTR [rsp+0xc8]
  404452:	test   ebp,ebp
  404454:	je     0x404181
  40445a:	mov    r9d,DWORD PTR [rsp+0x84]
  404462:	test   r9d,r9d
  404465:	jne    0x404b94
  40446b:	mov    eax,DWORD PTR [rsp+0xa4]
  404472:	mov    ecx,DWORD PTR [r8+0x14]
  404476:	xor    edx,edx
  404478:	and    eax,0xfffffff8
  40447b:	test   ecx,ecx
  40447d:	setg   dl
  404480:	add    edx,edx
  404482:	or     eax,edx
  404484:	test   al,0x30
  404486:	jne    0x4045f3
  40448c:	mov    DWORD PTR [rsp+0xa4],eax
  404493:	jmp    0x404181
  404498:	nop    DWORD PTR [rax+rax*1+0x0]
  4044a0:	mov    eax,ebp
  4044a2:	or     eax,ecx
  4044a4:	or     eax,r12d
  4044a7:	je     0x4045d3
  4044ad:	mov    rdi,QWORD PTR [rsp+0xc0]
  4044b5:	lea    rax,[rdi+0x1]
  4044b9:	mov    QWORD PTR [rsp+0xc0],rax
  4044c1:	movsx  eax,BYTE PTR [rdi+0x1]
  4044c5:	cmp    al,0x2b
  4044c7:	je     0x405688
  4044cd:	cmp    al,0x2d
  4044cf:	je     0x404a91
  4044d5:	mov    DWORD PTR [rsp+0x44],0x0
  4044dd:	lea    r8d,[rax-0x30]
  4044e1:	cmp    r8d,0x9
  4044e5:	ja     0x404bc0
  4044eb:	cmp    eax,0x30
  4044ee:	jne    0x404515
  4044f0:	mov    rax,QWORD PTR [rsp+0xc0]
  4044f8:	lea    r8,[rax+0x1]
  4044fc:	nop    DWORD PTR [rax+0x0]
  404500:	mov    QWORD PTR [rsp+0xc0],r8
  404508:	movsx  eax,BYTE PTR [r8]
  40450c:	add    r8,0x1
  404510:	cmp    eax,0x30
  404513:	je     0x404500
  404515:	lea    r9d,[rax-0x31]
  404519:	xor    r8d,r8d
  40451c:	cmp    r9d,0x8
  404520:	ja     0x4043aa
  404526:	lea    r9d,[rax-0x30]
  40452a:	mov    rax,QWORD PTR [rsp+0xc0]
  404532:	lea    r10,[rax+0x1]
  404536:	mov    QWORD PTR [rsp+0x50],rax
  40453b:	mov    QWORD PTR [rsp+0xc0],r10
  404543:	mov    QWORD PTR [rsp+0x48],r10
  404548:	mov    r10,rax
  40454b:	movsx  eax,BYTE PTR [rax+0x1]
  40454f:	lea    r8d,[rax-0x30]
  404553:	cmp    r8d,0x9
  404557:	ja     0x404593
  404559:	lea    r8,[r10+0x2]
  40455d:	mov    DWORD PTR [rsp+0x5c],r11d
  404562:	lea    r9d,[r9+r9*4]
  404566:	mov    QWORD PTR [rsp+0xc0],r8
  40456e:	mov    r11,r8
  404571:	add    r8,0x1
  404575:	lea    r9d,[rax+r9*2-0x30]
  40457a:	movsx  eax,BYTE PTR [r8-0x1]
  40457f:	lea    r10d,[rax-0x30]
  404583:	cmp    r10d,0x9
  404587:	jbe    0x404562
  404589:	mov    QWORD PTR [rsp+0x48],r11
  40458e:	mov    r11d,DWORD PTR [rsp+0x5c]
  404593:	mov    r8,QWORD PTR [rsp+0x48]
  404598:	sub    r8,QWORD PTR [rsp+0x50]
  40459d:	cmp    r8,0x8
  4045a1:	jg     0x40575f
  4045a7:	cmp    r9d,0x4e1f
  4045ae:	jg     0x40575f
  4045b4:	mov    r10d,DWORD PTR [rsp+0x44]
  4045b9:	mov    r8d,r10d
  4045bc:	neg    r8d
  4045bf:	xor    r8d,r9d
  4045c2:	add    r8d,r10d
  4045c5:	jmp    0x4043aa
  4045ca:	cmp    eax,0x49
  4045cd:	je     0x40576a
  4045d3:	mov    DWORD PTR [rsp+0xa4],0x6
  4045de:	mov    QWORD PTR [rsp+0xc0],rdi
  4045e6:	mov    r8,QWORD PTR [rsp+0xc8]
  4045ee:	jmp    0x404181
  4045f3:	or     eax,0x40
  4045f6:	mov    DWORD PTR [rsp+0xa4],eax
  4045fd:	call   0x407eb0
  404602:	mov    DWORD PTR [rax],0x22
  404608:	mov    r8,QWORD PTR [rsp+0xc8]
  404610:	jmp    0x404181
  404615:	mov    rax,QWORD PTR [rsp+0x190]
  40461d:	mov    ecx,DWORD PTR [rsp+0x58]
  404621:	sub    r8d,r13d
  404624:	mov    DWORD PTR [rsp+0xa4],0x1
  40462f:	mov    DWORD PTR [rsp+0x68],r8d
  404634:	mov    eax,DWORD PTR [rax+0xc]
  404637:	mov    DWORD PTR [rsp+0x44],eax
  40463b:	and    eax,0x3
  40463e:	mov    edi,eax
  404640:	sub    edi,ecx
  404642:	cmp    eax,0x2
  404645:	mov    DWORD PTR [rsp+0x6c],edi
  404649:	je     0x404663
  40464b:	lea    edi,[rcx+0x1]
  40464e:	cmp    eax,0x3
  404651:	mov    DWORD PTR [rsp+0x6c],edi
  404655:	je     0x404663
  404657:	test   eax,eax
  404659:	sete   al
  40465c:	movzx  eax,al
  40465f:	mov    DWORD PTR [rsp+0x6c],eax
  404663:	pxor   xmm0,xmm0
  404667:	mov    eax,esi
  404669:	test   ebx,ebx
  40466b:	cmove  ebx,ebp
  40466e:	mov    edi,0x10
  404673:	cmp    ebp,0x10
  404676:	cmovle edi,ebp
  404679:	cvtsi2sd xmm0,rax
  40467e:	cmp    edi,0x9
  404681:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40468a:	jle    0x4046b3
  40468c:	pxor   xmm1,xmm1
  404690:	lea    eax,[rdi-0x9]
  404693:	mov    rcx,QWORD PTR [rip+0x8706]        # 0x40cda0
  40469a:	cdqe   
  40469c:	cvtsi2sd xmm1,rdx
  4046a1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  4046a6:	addsd  xmm0,xmm1
  4046aa:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4046b3:	cmp    ebp,0xf
  4046b6:	jg     0x404825
  4046bc:	cmp    DWORD PTR [rsp+0x40],0x35
  4046c1:	jg     0x404825
  4046c7:	cmp    DWORD PTR [rsp+0x68],0x0
  4046cc:	je     0x4056b0
  4046d2:	jle    0x404b39
  4046d8:	cmp    DWORD PTR [rsp+0x68],0x16
  4046dd:	jg     0x4056da
  4046e3:	movsxd rcx,DWORD PTR [rsp+0x68]
  4046e8:	mov    edx,DWORD PTR [rsp+0xb0]
  4046ef:	lea    rax,[rip+0x82ca]        # 0x40c9c0
  4046f6:	test   edx,edx
  4046f8:	mov    r8d,DWORD PTR [rax+rcx*4]
  4046fc:	je     0x4057ce
  404702:	tzcnt  edx,edx
  404706:	mov    eax,0x35
  40470b:	sub    eax,edx
  40470d:	mov    rdx,QWORD PTR [rip+0x868c]        # 0x40cda0
  404714:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40471d:	add    eax,r8d
  404720:	cmp    eax,0x35
  404723:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  404728:	lea    rdx,[rsp+0xa4]
  404730:	setle  al
  404733:	movzx  eax,al
  404736:	lea    rcx,[rsp+0xb0]
  40473e:	mov    QWORD PTR [rsp+0x30],rdx
  404743:	mov    edx,DWORD PTR [rsp+0x6c]
  404747:	mov    DWORD PTR [rsp+0x20],eax
  40474b:	mov    DWORD PTR [rsp+0x28],edx
  40474f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404758:	mov    r9,QWORD PTR [rsp+0x1a0]
  404760:	mov    r8,QWORD PTR [rsp+0x198]
  404768:	mov    rdx,QWORD PTR [rsp+0x190]
  404770:	call   0x403be0
  404775:	test   eax,eax
  404777:	jne    0x404608
  40477d:	xor    eax,eax
  40477f:	jmp    0x404829
  404784:	movzx  r8d,BYTE PTR [rbp+0x1]
  404789:	test   r8b,r8b
  40478c:	je     0x405a0d
  404792:	cmp    r8b,BYTE PTR [r9+0x1]
  404796:	jne    0x40438c
  40479c:	mov    eax,0x2
  4047a1:	jmp    0x4047b2
  4047a3:	add    rax,0x1
  4047a7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  4047ac:	jne    0x4049b0
  4047b2:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  4047b8:	test   r8b,r8b
  4047bb:	jne    0x4047a3
  4047bd:	lea    r8,[r9+rax*1]
  4047c1:	test   ebx,ebx
  4047c3:	mov    QWORD PTR [rsp+0xc0],r8
  4047cb:	movsx  eax,BYTE PTR [r8]
  4047cf:	je     0x404aae
  4047d5:	lea    r8d,[rax-0x30]
  4047d9:	xor    ecx,ecx
  4047db:	xor    r13d,r13d
  4047de:	mov    ebp,ebx
  4047e0:	cmp    r8d,0x9
  4047e4:	ja     0x40481a
  4047e6:	test   r8d,r8d
  4047e9:	lea    eax,[rcx+0x1]
  4047ec:	mov    r9d,r8d
  4047ef:	jne    0x40598d
  4047f5:	mov    r8,QWORD PTR [rsp+0xc0]
  4047fd:	mov    ecx,eax
  4047ff:	lea    rax,[r8+0x1]
  404803:	mov    QWORD PTR [rsp+0xc0],rax
  40480b:	movsx  eax,BYTE PTR [r8+0x1]
  404810:	lea    r8d,[rax-0x30]
  404814:	cmp    r8d,0x9
  404818:	jbe    0x4047e6
  40481a:	mov    r11d,0x1
  404820:	jmp    0x404396
  404825:	mov    eax,DWORD PTR [rsp+0x68]
  404829:	mov    edx,ebp
  40482b:	sub    edx,edi
  40482d:	add    edx,eax
  40482f:	cmp    edx,0x0
  404832:	jle    0x40556a
  404838:	mov    eax,edx
  40483a:	and    eax,0xf
  40483d:	je     0x40485f
  40483f:	mov    rcx,QWORD PTR [rip+0x855a]        # 0x40cda0
  404846:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40484f:	cdqe   
  404851:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  404856:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40485f:	and    edx,0xfffffff0
  404862:	jne    0x4049c1
  404868:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404871:	xor    edi,edi
  404873:	lea    rdx,[rsp+0xac]
  40487b:	lea    r8,[rsp+0xa8]
  404883:	call   0x407980
  404888:	mov    edx,DWORD PTR [rsp+0xa8]
  40488f:	mov    r13d,DWORD PTR [rsp+0x40]
  404894:	add    edi,DWORD PTR [rsp+0xac]
  40489b:	mov    QWORD PTR [rsp+0xc8],rax
  4048a3:	mov    r12d,edx
  4048a6:	sub    r12d,r13d
  4048a9:	test   r12d,r12d
  4048ac:	mov    DWORD PTR [rsp+0xac],edi
  4048b3:	jle    0x4048dc
  4048b5:	mov    edx,r12d
  4048b8:	mov    rcx,rax
  4048bb:	call   0x4069f0
  4048c0:	mov    edi,DWORD PTR [rsp+0xac]
  4048c7:	mov    DWORD PTR [rsp+0xa8],r13d
  4048cf:	mov    edx,r13d
  4048d2:	add    edi,r12d
  4048d5:	mov    DWORD PTR [rsp+0xac],edi
  4048dc:	lea    eax,[rdi+rdx*1]
  4048df:	sub    eax,DWORD PTR [rsp+0x40]
  4048e3:	mov    ecx,eax
  4048e5:	mov    DWORD PTR [rsp+0x8c],eax
  4048ec:	mov    rax,QWORD PTR [rsp+0x190]
  4048f4:	mov    eax,DWORD PTR [rax+0x8]
  4048f7:	mov    DWORD PTR [rsp+0x44],eax
  4048fb:	add    eax,0x1
  4048fe:	cmp    ecx,eax
  404900:	jg     0x4054a5
  404906:	mov    rax,QWORD PTR [rsp+0x190]
  40490e:	mov    eax,DWORD PTR [rax+0x4]
  404911:	cmp    ecx,eax
  404913:	mov    DWORD PTR [rsp+0x50],eax
  404917:	jge    0x4056a3
  40491d:	sub    edi,eax
  40491f:	cmp    edi,0x0
  404922:	jle    0x404b0c
  404928:	mov    rcx,QWORD PTR [rsp+0xc8]
  404930:	mov    edx,edi
  404932:	call   0x4075b0
  404937:	add    DWORD PTR [rsp+0xa8],edi
  40493e:	mov    QWORD PTR [rsp+0xc8],rax
  404946:	mov    eax,DWORD PTR [rsp+0x50]
  40494a:	mov    DWORD PTR [rsp+0xac],eax
  404951:	mov    eax,DWORD PTR [rsp+0x84]
  404958:	test   eax,eax
  40495a:	je     0x404bd0
  404960:	mov    eax,DWORD PTR [rsp+0x8c]
  404967:	add    eax,0x1
  40496a:	cmp    DWORD PTR [rsp+0x50],eax
  40496e:	jle    0x404bd0
  404974:	mov    r8,QWORD PTR [rsp+0xc8]
  40497c:	mov    rax,QWORD PTR [rsp+0x198]
  404984:	mov    esi,DWORD PTR [rsp+0x50]
  404988:	mov    DWORD PTR [rsp+0xa4],0x50
  404993:	mov    DWORD PTR [r8+0x14],0x0
  40499b:	mov    DWORD PTR [r8+0x18],0x0
  4049a3:	mov    DWORD PTR [rax],esi
  4049a5:	jmp    0x40445a
  4049aa:	nop    WORD PTR [rax+rax*1+0x0]
  4049b0:	mov    eax,ecx
  4049b2:	mov    ebp,ebx
  4049b4:	xor    ecx,ecx
  4049b6:	xor    r13d,r13d
  4049b9:	xor    r11d,r11d
  4049bc:	jmp    0x404396
  4049c1:	sar    edx,0x4
  4049c4:	cmp    edx,0xf
  4049c7:	jle    0x405a93
  4049cd:	mov    rax,QWORD PTR [rip+0x82fc]        # 0x40ccd0
  4049d4:	mov    ecx,edx
  4049d6:	xor    r8d,r8d
  4049d9:	movsd  xmm1,QWORD PTR [rax+0x20]
  4049de:	xchg   ax,ax
  4049e0:	mov    eax,DWORD PTR [rsp+0xb4]
  4049e7:	sub    ecx,0x10
  4049ea:	mov    r9d,eax
  4049ed:	and    eax,0x800fffff
  4049f2:	or     eax,0x3ff00000
  4049f7:	and    r9d,0x7ff00000
  4049fe:	mov    DWORD PTR [rsp+0xb4],eax
  404a05:	shr    r9d,0x14
  404a09:	cmp    ecx,0xf
  404a0c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404a15:	lea    r8d,[r8+r9*1-0x3ff]
  404a1d:	mulsd  xmm0,xmm1
  404a21:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404a2a:	jg     0x4049e0
  404a2c:	and    edx,0xf
  404a2f:	mov    eax,DWORD PTR [rsp+0xb4]
  404a36:	mov    ecx,eax
  404a38:	and    eax,0x800fffff
  404a3d:	or     eax,0x3ff00000
  404a42:	and    ecx,0x7ff00000
  404a48:	shr    ecx,0x14
  404a4b:	mov    DWORD PTR [rsp+0xb4],eax
  404a52:	test   edx,edx
  404a54:	lea    edi,[r8+rcx*1-0x3ff]
  404a5c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404a65:	mov    rax,QWORD PTR [rip+0x8264]        # 0x40ccd0
  404a6c:	je     0x404873
  404a72:	test   dl,0x1
  404a75:	je     0x404a7b
  404a77:	mulsd  xmm0,QWORD PTR [rax]
  404a7b:	add    rax,0x8
  404a7f:	sar    edx,1
  404a81:	jne    0x404a72
  404a83:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404a8c:	jmp    0x404873
  404a91:	mov    DWORD PTR [rsp+0x44],0x1
  404a99:	lea    rax,[rdi+0x2]
  404a9d:	mov    QWORD PTR [rsp+0xc0],rax
  404aa5:	movsx  eax,BYTE PTR [rdi+0x2]
  404aa9:	jmp    0x4044dd
  404aae:	cmp    eax,0x30
  404ab1:	jne    0x405af5
  404ab7:	add    r8,0x1
  404abb:	xor    ecx,ecx
  404abd:	nop    DWORD PTR [rax]
  404ac0:	mov    QWORD PTR [rsp+0xc0],r8
  404ac8:	movsx  eax,BYTE PTR [r8]
  404acc:	add    ecx,0x1
  404acf:	add    r8,0x1
  404ad3:	cmp    eax,0x30
  404ad6:	je     0x404ac0
  404ad8:	lea    r8d,[rax-0x31]
  404adc:	cmp    r8d,0x8
  404ae0:	ja     0x405755
  404ae6:	mov    r15,QWORD PTR [rsp+0xc0]
  404aee:	lea    r9d,[rax-0x30]
  404af2:	lea    r13d,[rcx+0x1]
  404af6:	mov    ebp,0x1
  404afb:	mov    r8,r15
  404afe:	lea    eax,[rsi+rsi*4]
  404b01:	xor    ecx,ecx
  404b03:	lea    esi,[r9+rax*2]
  404b07:	jmp    0x4047ff
  404b0c:	je     0x404946
  404b12:	add    edx,edi
  404b14:	test   edx,edx
  404b16:	mov    DWORD PTR [rsp+0xa8],edx
  404b1d:	jle    0x405ab6
  404b23:	mov    rcx,QWORD PTR [rsp+0xc8]
  404b2b:	neg    edi
  404b2d:	mov    edx,edi
  404b2f:	call   0x4069f0
  404b34:	jmp    0x404946
  404b39:	mov    edx,DWORD PTR [rsp+0x68]
  404b3d:	cmp    edx,0xffffffea
  404b40:	mov    eax,edx
  404b42:	jl     0x404829
  404b48:	mov    rdx,QWORD PTR [rip+0x8251]        # 0x40cda0
  404b4f:	neg    eax
  404b51:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404b5a:	cdqe   
  404b5c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  404b61:	lea    rax,[rsp+0xa4]
  404b69:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404b72:	lea    rcx,[rsp+0xb0]
  404b7a:	mov    DWORD PTR [rsp+0x20],0x0
  404b82:	mov    QWORD PTR [rsp+0x30],rax
  404b87:	mov    eax,DWORD PTR [rsp+0x6c]
  404b8b:	mov    DWORD PTR [rsp+0x28],eax
  404b8f:	jmp    0x404758
  404b94:	mov    DWORD PTR [r8+0x14],0x0
  404b9c:	mov    DWORD PTR [rsp+0xa4],0x50
  404ba7:	call   0x407eb0
  404bac:	mov    r8,QWORD PTR [rsp+0xc8]
  404bb4:	mov    DWORD PTR [rax],0x22
  404bba:	jmp    0x404181
  404bbf:	nop
  404bc0:	mov    QWORD PTR [rsp+0xc0],rdi
  404bc8:	xor    r8d,r8d
  404bcb:	jmp    0x4043aa
  404bd0:	mov    eax,DWORD PTR [rsp+0x50]
  404bd4:	mov    DWORD PTR [rsp+0x44],0x1
  404bdc:	mov    DWORD PTR [rsp+0x8c],eax
  404be3:	mov    r8d,ebp
  404be6:	mov    edx,ebx
  404be8:	mov    DWORD PTR [rsp+0x20],r14d
  404bed:	mov    r9d,esi
  404bf0:	mov    rcx,r15
  404bf3:	call   0x407ac0
  404bf8:	mov    QWORD PTR [rsp+0x70],rax
  404bfd:	add    rax,0x10
  404c01:	mov    QWORD PTR [rsp+0x78],rax
  404c06:	mov    eax,DWORD PTR [rsp+0x40]
  404c0a:	movsd  xmm8,QWORD PTR [rip+0x7e0d]        # 0x40ca20
  404c13:	movsd  xmm9,QWORD PTR [rip+0x7e14]        # 0x40ca30
  404c1c:	add    eax,0x1
  404c1f:	movapd xmm11,xmm8
  404c24:	mov    DWORD PTR [rsp+0x80],eax
  404c2b:	mov    eax,DWORD PTR [rsp+0x68]
  404c2f:	movsd  xmm10,QWORD PTR [rip+0x7e18]        # 0x40ca50
  404c38:	mov    edx,eax
  404c3a:	neg    edx
  404c3c:	test   eax,eax
  404c3e:	mov    eax,0x0
  404c43:	cmovs  eax,edx
  404c46:	xor    ebp,ebp
  404c48:	mov    DWORD PTR [rsp+0x5c],eax
  404c4c:	jmp    0x404e90
  404c51:	mov    rcx,rsi
  404c54:	call   0x4075b0
  404c59:	mov    rsi,rax
  404c5c:	test   r15d,r15d
  404c5f:	je     0x404c6f
  404c61:	mov    rcx,rdi
  404c64:	mov    edx,r15d
  404c67:	call   0x407440
  404c6c:	mov    rdi,rax
  404c6f:	test   r12d,r12d
  404c72:	jle    0x404c82
  404c74:	mov    rcx,rdi
  404c77:	mov    edx,r12d
  404c7a:	call   0x4075b0
  404c7f:	mov    rdi,rax
  404c82:	test   r14d,r14d
  404c85:	jle    0x404c95
  404c87:	mov    rcx,r13
  404c8a:	mov    edx,r14d
  404c8d:	call   0x4075b0
  404c92:	mov    r13,rax
  404c95:	mov    rdx,rdi
  404c98:	mov    rcx,rsi
  404c9b:	call   0x407720
  404ca0:	cmp    DWORD PTR [rax+0x14],0x1
  404ca4:	mov    rbx,rax
  404ca7:	jle    0x405040
  404cad:	mov    ebp,DWORD PTR [rbx+0x10]
  404cb0:	mov    rdx,r13
  404cb3:	mov    DWORD PTR [rbx+0x10],0x0
  404cba:	mov    rcx,rbx
  404cbd:	call   0x4076d0
  404cc2:	test   eax,eax
  404cc4:	jg     0x404fd0
  404cca:	mov    ecx,DWORD PTR [rsp+0x6c]
  404cce:	test   ecx,ecx
  404cd0:	je     0x404fd0
  404cd6:	mov    eax,ecx
  404cd8:	and    eax,0x1
  404cdb:	xor    eax,ebp
  404cdd:	mov    DWORD PTR [rsp+0x60],eax
  404ce1:	je     0x4057eb
  404ce7:	test   ebp,ebp
  404ce9:	je     0x405241
  404cef:	movsd  xmm6,QWORD PTR [rip+0x7d29]        # 0x40ca20
  404cf7:	mov    DWORD PTR [rsp+0xa4],0x21
  404d02:	xor    r12d,r12d
  404d05:	mov    DWORD PTR [rsp+0x88],0x20
  404d10:	xor    r14d,r14d
  404d13:	movapd xmm7,xmm6
  404d17:	mov    eax,DWORD PTR [rsp+0xa8]
  404d1e:	mov    edx,DWORD PTR [rsp+0xac]
  404d25:	mov    r8d,DWORD PTR [rsp+0x44]
  404d2a:	add    edx,eax
  404d2c:	test   r8d,r8d
  404d2f:	mov    DWORD PTR [rsp+0x48],edx
  404d33:	jne    0x404d3f
  404d35:	cmp    DWORD PTR [rsp+0x40],eax
  404d39:	jg     0x4053f5
  404d3f:	lea    rdx,[rsp+0x9c]
  404d47:	lea    r8,[rsp+0xa0]
  404d4f:	movapd xmm0,xmm6
  404d53:	call   0x407980
  404d58:	mov    edx,DWORD PTR [rsp+0x9c]
  404d5f:	mov    r15,rax
  404d62:	test   edx,edx
  404d64:	js     0x405430
  404d6a:	je     0x404d77
  404d6c:	mov    rcx,rax
  404d6f:	call   0x4075b0
  404d74:	mov    r15,rax
  404d77:	mov    rbp,QWORD PTR [rsp+0xc8]
  404d7f:	test   r14d,r14d
  404d82:	mov    rdx,r15
  404d85:	mov    rcx,rbp
  404d88:	je     0x405170
  404d8e:	call   0x407720
  404d93:	mov    ecx,DWORD PTR [rsp+0x44]
  404d97:	mov    QWORD PTR [rsp+0xc8],rax
  404d9f:	mov    edx,DWORD PTR [rbp+0x14]
  404da2:	test   ecx,ecx
  404da4:	jne    0x405310
  404daa:	sub    edx,0x1
  404dad:	cmp    edx,DWORD PTR [rax+0x14]
  404db0:	jge    0x404dcd
  404db2:	movsxd rdx,edx
  404db5:	add    rdx,0x4
  404db9:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  404dbe:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  404dc3:	xor    ecx,0x1f
  404dc6:	xor    edx,0x1f
  404dc9:	cmp    ecx,edx
  404dcb:	jle    0x404df0
  404dcd:	mov    ecx,DWORD PTR [rsp+0x50]
  404dd1:	cmp    DWORD PTR [rsp+0x8c],ecx
  404dd8:	jne    0x4051f0
  404dde:	sub    DWORD PTR [rsp+0xa8],0x1
  404de6:	mov    DWORD PTR [rsp+0x44],0x1
  404dee:	xchg   ax,ax
  404df0:	mov    rcx,r15
  404df3:	call   0x4071b0
  404df8:	mov    rcx,rbp
  404dfb:	call   0x4071b0
  404e00:	mov    r14d,DWORD PTR [rsp+0x60]
  404e05:	test   r14d,r14d
  404e08:	jne    0x405050
  404e0e:	test   r12d,r12d
  404e11:	je     0x404e58
  404e13:	mov    eax,DWORD PTR [rsp+0xa8]
  404e1a:	add    eax,DWORD PTR [rsp+0xac]
  404e21:	cmp    DWORD PTR [rsp+0x48],eax
  404e25:	jne    0x404e58
  404e27:	mulsd  xmm6,QWORD PTR [rip+0x7c19]        # 0x40ca48
  404e2f:	movapd xmm0,xmm7
  404e33:	subsd  xmm0,QWORD PTR [rip+0x7bfd]        # 0x40ca38
  404e3b:	movapd xmm1,xmm6
  404e3f:	xorpd  xmm1,xmm10
  404e44:	ucomisd xmm1,xmm0
  404e48:	jbe    0x4053c2
  404e4e:	ucomisd xmm7,xmm6
  404e52:	ja     0x4053e2
  404e58:	mov    r12d,DWORD PTR [rsp+0x44]
  404e5d:	test   r12d,r12d
  404e60:	je     0x405225
  404e66:	mov    DWORD PTR [rsp+0x44],0x1
  404e6e:	xor    ebp,ebp
  404e70:	mov    rcx,rsi
  404e73:	call   0x4071b0
  404e78:	mov    rcx,rdi
  404e7b:	call   0x4071b0
  404e80:	mov    rcx,r13
  404e83:	call   0x4071b0
  404e88:	mov    rcx,rbx
  404e8b:	call   0x4071b0
  404e90:	mov    rsi,QWORD PTR [rsp+0x70]
  404e95:	mov    r15d,0x0
  404e9b:	mov    ecx,DWORD PTR [rsi+0x8]
  404e9e:	call   0x4070a0
  404ea3:	lea    rcx,[rax+0x10]
  404ea7:	mov    rdi,rax
  404eaa:	movsxd rax,DWORD PTR [rsi+0x14]
  404eae:	mov    rdx,QWORD PTR [rsp+0x78]
  404eb3:	lea    r8,[rax*4+0x8]
  404ebb:	call   0x407e20
  404ec0:	mov    rax,QWORD PTR [rsp+0xc8]
  404ec8:	mov    ecx,DWORD PTR [rax+0x8]
  404ecb:	call   0x4070a0
  404ed0:	mov    rdx,QWORD PTR [rsp+0xc8]
  404ed8:	lea    rcx,[rax+0x10]
  404edc:	mov    rsi,rax
  404edf:	movsxd rax,DWORD PTR [rdx+0x14]
  404ee3:	add    rdx,0x10
  404ee7:	lea    r8,[rax*4+0x8]
  404eef:	call   0x407e20
  404ef4:	mov    eax,DWORD PTR [rsp+0xa8]
  404efb:	mov    ecx,0x1
  404f00:	mov    ebx,DWORD PTR [rsp+0xac]
  404f07:	sub    eax,ebp
  404f09:	add    ebx,ebp
  404f0b:	mov    DWORD PTR [rsp+0x48],eax
  404f0f:	call   0x4072e0
  404f14:	mov    r13,rax
  404f17:	mov    eax,DWORD PTR [rsp+0x68]
  404f1b:	test   eax,eax
  404f1d:	cmovg  r15d,eax
  404f21:	test   ebx,ebx
  404f23:	js     0x4051e0
  404f29:	mov    eax,DWORD PTR [rsp+0x5c]
  404f2d:	mov    edx,r15d
  404f30:	lea    r14d,[rax+rbx*1]
  404f34:	mov    ecx,DWORD PTR [rsp+0x48]
  404f38:	mov    eax,DWORD PTR [rsp+0x80]
  404f3f:	add    ebx,ecx
  404f41:	sub    ebx,DWORD PTR [rsp+0x40]
  404f45:	sub    eax,ecx
  404f47:	cmp    DWORD PTR [rsp+0x50],ebx
  404f4b:	jle    0x404f53
  404f4d:	sub    ebx,DWORD PTR [rsp+0x50]
  404f51:	add    eax,ebx
  404f53:	lea    ebx,[r14+rax*1]
  404f57:	lea    r12d,[rdx+rax*1]
  404f5b:	cmp    ebx,r12d
  404f5e:	mov    eax,r12d
  404f61:	cmovle eax,ebx
  404f64:	cmp    eax,r14d
  404f67:	cmovg  eax,r14d
  404f6b:	test   eax,eax
  404f6d:	jle    0x404f77
  404f6f:	sub    ebx,eax
  404f71:	sub    r12d,eax
  404f74:	sub    r14d,eax
  404f77:	mov    eax,DWORD PTR [rsp+0x5c]
  404f7b:	test   eax,eax
  404f7d:	je     0x404fac
  404f7f:	mov    rcx,r13
  404f82:	mov    edx,eax
  404f84:	call   0x407440
  404f89:	mov    rdx,rsi
  404f8c:	mov    rcx,rax
  404f8f:	mov    r13,rax
  404f92:	call   0x407310
  404f97:	mov    rcx,rsi
  404f9a:	mov    QWORD PTR [rsp+0x60],rax
  404f9f:	call   0x4071b0
  404fa4:	mov    rax,QWORD PTR [rsp+0x60]
  404fa9:	mov    rsi,rax
  404fac:	sub    ebx,ebp
  404fae:	cmp    ebx,0x0
  404fb1:	mov    edx,ebx
  404fb3:	jg     0x404c51
  404fb9:	je     0x404c5c
  404fbf:	neg    edx
  404fc1:	mov    rcx,rsi
  404fc4:	call   0x4069f0
  404fc9:	jmp    0x404c5c
  404fce:	xchg   ax,ax
  404fd0:	test   eax,eax
  404fd2:	js     0x405802
  404fd8:	je     0x4058ce
  404fde:	mov    rdx,r13
  404fe1:	mov    rcx,rbx
  404fe4:	call   0x407bc0
  404fe9:	ucomisd xmm9,xmm0
  404fee:	jb     0x405320
  404ff4:	test   ebp,ebp
  404ff6:	jne    0x405450
  404ffc:	mov    DWORD PTR [rsp+0x60],0x0
  405004:	cmp    DWORD PTR [rsp+0x48],0x1
  405009:	jg     0x405019
  40500b:	mov    r9d,DWORD PTR [rsp+0x44]
  405010:	test   r9d,r9d
  405013:	jne    0x4059da
  405019:	movapd xmm6,xmm8
  40501e:	xor    r12d,r12d
  405021:	mov    DWORD PTR [rsp+0x88],0x10
  40502c:	movapd xmm7,xmm8
  405031:	mov    r14d,0x1
  405037:	jmp    0x404d17
  40503c:	nop    DWORD PTR [rax+0x0]
  405040:	mov    r15d,DWORD PTR [rax+0x18]
  405044:	test   r15d,r15d
  405047:	jne    0x404cad
  40504d:	nop    DWORD PTR [rax]
  405050:	mov    ebp,DWORD PTR [rsp+0x44]
  405054:	test   ebp,ebp
  405056:	je     0x405548
  40505c:	mov    eax,DWORD PTR [rsp+0xac]
  405063:	mov    ebp,0x1
  405068:	mov    rdx,QWORD PTR [rsp+0x198]
  405070:	mov    rcx,rsi
  405073:	mov    DWORD PTR [rdx],eax
  405075:	call   0x4071b0
  40507a:	mov    rcx,rdi
  40507d:	call   0x4071b0
  405082:	mov    rcx,r13
  405085:	call   0x4071b0
  40508a:	mov    rcx,QWORD PTR [rsp+0x70]
  40508f:	call   0x4071b0
  405094:	mov    rcx,rbx
  405097:	call   0x4071b0
  40509c:	mov    rax,QWORD PTR [rsp+0x190]
  4050a4:	mov    esi,DWORD PTR [rsp+0xac]
  4050ab:	cmp    DWORD PTR [rax+0x8],esi
  4050ae:	jge    0x40444a
  4050b4:	mov    rax,QWORD PTR [rsp+0x190]
  4050bc:	mov    eax,DWORD PTR [rax+0xc]
  4050bf:	mov    DWORD PTR [rsp+0x44],eax
  4050c3:	and    eax,0x3
  4050c6:	cmp    eax,0x2
  4050c9:	je     0x4058bb
  4050cf:	cmp    eax,0x3
  4050d2:	je     0x4058a8
  4050d8:	cmp    eax,0x1
  4050db:	je     0x4054a7
  4050e1:	mov    rcx,QWORD PTR [rsp+0xc8]
  4050e9:	call   0x4071b0
  4050ee:	mov    rax,QWORD PTR [rsp+0x190]
  4050f6:	mov    rsi,QWORD PTR [rsp+0x198]
  4050fe:	mov    QWORD PTR [rsp+0xc8],0x0
  40510a:	mov    DWORD PTR [rsp+0xa4],0x11
  405115:	mov    eax,DWORD PTR [rax+0x8]
  405118:	mov    DWORD PTR [rsi],eax
  40511a:	mov    rax,QWORD PTR [rsp+0x190]
  405122:	mov    rsi,QWORD PTR [rsp+0x1a0]
  40512a:	mov    ecx,DWORD PTR [rax]
  40512c:	lea    eax,[rcx+0x1f]
  40512f:	sar    eax,0x5
  405132:	cdqe   
  405134:	lea    rdx,[rsi+rax*4]
  405138:	mov    rax,rsi
  40513b:	cmp    rsi,rdx
  40513e:	jae    0x405150
  405140:	add    rax,0x4
  405144:	mov    DWORD PTR [rax-0x4],0xffffffff
  40514b:	cmp    rdx,rax
  40514e:	ja     0x405140
  405150:	and    ecx,0x1f
  405153:	je     0x405161
  405155:	mov    eax,0x20
  40515a:	sub    eax,ecx
  40515c:	mov    ecx,eax
  40515e:	shr    DWORD PTR [rdx-0x4],cl
  405161:	xor    r8d,r8d
  405164:	jmp    0x404452
  405169:	nop    DWORD PTR [rax+0x0]
  405170:	call   0x405be0
  405175:	mov    edx,DWORD PTR [rax+0x14]
  405178:	mov    QWORD PTR [rsp+0xc8],rax
  405180:	sub    edx,0x1
  405183:	cmp    edx,DWORD PTR [rbp+0x14]
  405186:	jge    0x4051a7
  405188:	movsxd rdx,edx
  40518b:	add    rdx,0x4
  40518f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  405194:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  405199:	xor    ecx,0x1f
  40519c:	xor    edx,0x1f
  40519f:	cmp    ecx,edx
  4051a1:	jge    0x404df0
  4051a7:	mov    edx,DWORD PTR [rsp+0x44]
  4051ab:	test   edx,edx
  4051ad:	je     0x405480
  4051b3:	mov    eax,DWORD PTR [rsp+0xa8]
  4051ba:	add    eax,0x1
  4051bd:	cmp    DWORD PTR [rsp+0x40],eax
  4051c1:	mov    DWORD PTR [rsp+0xa8],eax
  4051c8:	setne  al
  4051cb:	movzx  eax,al
  4051ce:	mov    DWORD PTR [rsp+0x44],eax
  4051d2:	jmp    0x404df0
  4051d7:	nop    WORD PTR [rax+rax*1+0x0]
  4051e0:	mov    edx,r15d
  4051e3:	mov    r14d,DWORD PTR [rsp+0x5c]
  4051e8:	sub    edx,ebx
  4051ea:	jmp    0x404f34
  4051ef:	nop
  4051f0:	mov    edx,0x1
  4051f5:	mov    rcx,rax
  4051f8:	call   0x4075b0
  4051fd:	mov    rcx,r15
  405200:	mov    QWORD PTR [rsp+0xc8],rax
  405208:	sub    DWORD PTR [rsp+0xac],0x1
  405210:	sub    DWORD PTR [rsp+0x8c],0x1
  405218:	call   0x4071b0
  40521d:	mov    rcx,rbp
  405220:	call   0x4071b0
  405225:	mov    rcx,QWORD PTR [rsp+0xc8]
  40522d:	call   0x406af0
  405232:	mov    DWORD PTR [rsp+0x44],0x0
  40523a:	mov    ebp,eax
  40523c:	jmp    0x404e70
  405241:	mov    edx,DWORD PTR [rsp+0x50]
  405245:	cmp    DWORD PTR [rsp+0x8c],edx
  40524c:	mov    DWORD PTR [rsp+0xa4],0x11
  405257:	je     0x405004
  40525d:	xor    ecx,ecx
  40525f:	cmp    DWORD PTR [rsp+0x40],0x1f
  405264:	mov    r9,QWORD PTR [rsp+0xc8]
  40526c:	mov    eax,DWORD PTR [rsp+0x40]
  405270:	jle    0x4052ac
  405272:	mov    r14d,DWORD PTR [r9+0x18]
  405276:	test   r14d,r14d
  405279:	jne    0x405004
  40527f:	lea    rdx,[r9+0x1c]
  405283:	mov    eax,DWORD PTR [rsp+0x40]
  405287:	xor    ecx,ecx
  405289:	jmp    0x4052a1
  40528b:	nop    DWORD PTR [rax+rax*1+0x0]
  405290:	add    rdx,0x4
  405294:	mov    r12d,DWORD PTR [rdx-0x4]
  405298:	test   r12d,r12d
  40529b:	jne    0x405004
  4052a1:	sub    eax,0x20
  4052a4:	add    ecx,0x1
  4052a7:	cmp    eax,0x1f
  4052aa:	jg     0x405290
  4052ac:	cmp    eax,0x1
  4052af:	jle    0x4052d3
  4052b1:	movsxd rcx,ecx
  4052b4:	sub    eax,0x1
  4052b7:	lea    r8,[r9+rcx*4]
  4052bb:	xor    ecx,ecx
  4052bd:	mov    edx,DWORD PTR [r8+0x18]
  4052c1:	tzcnt  ecx,edx
  4052c5:	shr    edx,cl
  4052c7:	cmp    eax,ecx
  4052c9:	mov    DWORD PTR [r8+0x18],edx
  4052cd:	jg     0x405004
  4052d3:	mov    eax,DWORD PTR [rsp+0x8c]
  4052da:	mov    rcx,r9
  4052dd:	sub    eax,0x1
  4052e0:	mov    DWORD PTR [rsp+0xac],eax
  4052e7:	mov    eax,DWORD PTR [rsp+0x40]
  4052eb:	mov    edx,eax
  4052ed:	mov    DWORD PTR [rsp+0xa8],eax
  4052f4:	call   0x403fe0
  4052f9:	mov    QWORD PTR [rsp+0xc8],rax
  405301:	jmp    0x405050
  405306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405310:	mov    DWORD PTR [rsp+0x44],0x1
  405318:	jmp    0x404df0
  40531d:	nop    DWORD PTR [rax]
  405320:	movapd xmm7,xmm0
  405324:	cmp    ebp,0x1
  405327:	movsd  xmm1,QWORD PTR [rip+0x7709]        # 0x40ca38
  40532f:	sbb    eax,eax
  405331:	and    eax,0x10
  405334:	movsd  xmm0,QWORD PTR [rip+0x7704]        # 0x40ca40
  40533c:	mulsd  xmm7,xmm1
  405340:	add    eax,0x10
  405343:	xor    r14d,r14d
  405346:	cmp    ebp,0x1
  405349:	mov    DWORD PTR [rsp+0x88],eax
  405350:	setb   r14b
  405354:	ucomisd xmm0,xmm7
  405358:	jbe    0x405440
  40535e:	cvttsd2si r12d,xmm7
  405363:	pxor   xmm6,xmm6
  405367:	mov    eax,DWORD PTR [rsp+0x6c]
  40536b:	cmp    eax,0x1
  40536e:	cvtsi2sd xmm6,r12d
  405373:	subsd  xmm7,xmm6
  405377:	je     0x405695
  40537d:	cmp    eax,0x2
  405380:	jne    0x405539
  405386:	test   r14d,r14d
  405389:	jne    0x4053b5
  40538b:	ucomisd xmm7,QWORD PTR [rip+0x7695]        # 0x40ca28
  405393:	jbe    0x4053b5
  405395:	pxor   xmm6,xmm6
  405399:	add    r12d,0x1
  40539d:	mov    eax,0x30
  4053a2:	sub    eax,DWORD PTR [rsp+0x88]
  4053a9:	cvtsi2sd xmm6,r12d
  4053ae:	mov    DWORD PTR [rsp+0x88],eax
  4053b5:	mov    DWORD PTR [rsp+0x60],0x0
  4053bd:	jmp    0x404d17
  4053c2:	ucomisd xmm0,xmm6
  4053c6:	jbe    0x404e58
  4053cc:	movsd  xmm0,QWORD PTR [rip+0x764c]        # 0x40ca20
  4053d4:	subsd  xmm0,xmm6
  4053d8:	ucomisd xmm0,xmm7
  4053dc:	jbe    0x404e58
  4053e2:	mov    eax,DWORD PTR [rsp+0x88]
  4053e9:	or     DWORD PTR [rsp+0xa4],eax
  4053f0:	jmp    0x405050
  4053f5:	mov    r15d,DWORD PTR [rsp+0x40]
  4053fa:	mov    rcx,QWORD PTR [rsp+0xc8]
  405402:	mov    ebp,r15d
  405405:	sub    ebp,eax
  405407:	mov    edx,ebp
  405409:	call   0x4075b0
  40540e:	sub    DWORD PTR [rsp+0xac],ebp
  405415:	mov    QWORD PTR [rsp+0xc8],rax
  40541d:	mov    DWORD PTR [rsp+0xa8],r15d
  405425:	jmp    0x404d3f
  40542a:	nop    WORD PTR [rax+rax*1+0x0]
  405430:	neg    edx
  405432:	mov    rcx,rax
  405435:	call   0x4069f0
  40543a:	jmp    0x404d77
  40543f:	nop
  405440:	movapd xmm6,xmm7
  405444:	xor    r12d,r12d
  405447:	jmp    0x4053b5
  40544c:	nop    DWORD PTR [rax+0x0]
  405450:	movapd xmm6,xmm11
  405455:	xor    r12d,r12d
  405458:	movapd xmm7,xmm11
  40545d:	mov    DWORD PTR [rsp+0x88],0x20
  405468:	mov    DWORD PTR [rsp+0x60],0x0
  405470:	xor    r14d,r14d
  405473:	jmp    0x404d17
  405478:	nop    DWORD PTR [rax+rax*1+0x0]
  405480:	mov    edx,0x1
  405485:	mov    rcx,rax
  405488:	xor    r12d,r12d
  40548b:	call   0x4069f0
  405490:	add    DWORD PTR [rsp+0xac],0x1
  405498:	add    DWORD PTR [rsp+0x8c],0x1
  4054a0:	jmp    0x404df0
  4054a5:	xor    ebp,ebp
  4054a7:	mov    rax,QWORD PTR [rsp+0xc8]
  4054af:	mov    DWORD PTR [rsp+0xa4],0xa3
  4054ba:	mov    DWORD PTR [rax+0x14],0x0
  4054c1:	call   0x407eb0
  4054c6:	mov    DWORD PTR [rax],0x22
  4054cc:	mov    rax,QWORD PTR [rsp+0x190]
  4054d4:	mov    eax,DWORD PTR [rax+0x8]
  4054d7:	add    eax,0x1
  4054da:	jmp    0x404440
  4054df:	mov    eax,DWORD PTR [rsp+0x58]
  4054e3:	mov    r8,QWORD PTR [rsp+0x198]
  4054eb:	lea    rcx,[rsp+0xc0]
  4054f3:	mov    rdx,QWORD PTR [rsp+0x190]
  4054fb:	lea    r9,[rsp+0xc8]
  405503:	mov    DWORD PTR [rsp+0x20],eax
  405507:	call   0x406120
  40550c:	cmp    eax,0x6
  40550f:	mov    DWORD PTR [rsp+0xa4],eax
  405516:	mov    r8,QWORD PTR [rsp+0xc8]
  40551e:	jne    0x404181
  405524:	mov    QWORD PTR [rsp+0xc0],rdi
  40552c:	mov    DWORD PTR [rsp+0x58],0x0
  405534:	jmp    0x404181
  405539:	ucomisd xmm7,xmm1
  40553d:	jae    0x405395
  405543:	jmp    0x4053b5
  405548:	mov    eax,DWORD PTR [rsp+0xa8]
  40554f:	mov    ebp,DWORD PTR [rsp+0x40]
  405553:	sub    ebp,eax
  405555:	cmp    ebp,0x0
  405558:	jne    0x405721
  40555e:	mov    eax,DWORD PTR [rsp+0xac]
  405565:	jmp    0x405068
  40556a:	je     0x404868
  405570:	neg    edx
  405572:	mov    eax,edx
  405574:	and    eax,0xf
  405577:	je     0x405599
  405579:	mov    rcx,QWORD PTR [rip+0x7820]        # 0x40cda0
  405580:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405589:	cdqe   
  40558b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  405590:	movsd  QWORD PTR [rsp+0xb0],xmm0
  405599:	and    edx,0xfffffff0
  40559c:	je     0x404868
  4055a2:	mov    eax,edx
  4055a4:	sar    eax,0x4
  4055a7:	cmp    eax,0xf
  4055aa:	jle    0x405b78
  4055b0:	mov    rdx,QWORD PTR [rip+0x77f9]        # 0x40cdb0
  4055b7:	mov    ecx,eax
  4055b9:	xor    r8d,r8d
  4055bc:	movsd  xmm1,QWORD PTR [rdx+0x20]
  4055c1:	mov    edx,DWORD PTR [rsp+0xb4]
  4055c8:	sub    ecx,0x10
  4055cb:	mov    r9d,edx
  4055ce:	and    edx,0x800fffff
  4055d4:	or     edx,0x3ff00000
  4055da:	and    r9d,0x7ff00000
  4055e1:	mov    DWORD PTR [rsp+0xb4],edx
  4055e8:	shr    r9d,0x14
  4055ec:	cmp    ecx,0xf
  4055ef:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4055f8:	lea    r8d,[r8+r9*1-0x3ff]
  405600:	mulsd  xmm0,xmm1
  405604:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40560d:	jg     0x4055c1
  40560f:	and    eax,0xf
  405612:	mov    edx,DWORD PTR [rsp+0xb4]
  405619:	mov    ecx,edx
  40561b:	and    edx,0x800fffff
  405621:	and    ecx,0x7ff00000
  405627:	or     edx,0x3ff00000
  40562d:	shr    ecx,0x14
  405630:	mov    DWORD PTR [rsp+0xb4],edx
  405637:	test   eax,eax
  405639:	lea    edi,[r8+rcx*1-0x3ff]
  405641:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40564a:	jle    0x404873
  405650:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  405659:	mov    rdx,QWORD PTR [rip+0x7750]        # 0x40cdb0
  405660:	movapd xmm0,xmm1
  405664:	test   al,0x1
  405666:	je     0x405670
  405668:	mulsd  xmm1,QWORD PTR [rdx]
  40566c:	movapd xmm0,xmm1
  405670:	sar    eax,1
  405672:	add    rdx,0x8
  405676:	test   eax,eax
  405678:	jg     0x405664
  40567a:	movsd  QWORD PTR [rsp+0xb0],xmm1
  405683:	jmp    0x404873
  405688:	mov    DWORD PTR [rsp+0x44],0x0
  405690:	jmp    0x404a99
  405695:	test   r14d,r14d
  405698:	je     0x4053b5
  40569e:	jmp    0x40538b
  4056a3:	mov    DWORD PTR [rsp+0x44],0x0
  4056ab:	jmp    0x404be3
  4056b0:	lea    rax,[rsp+0xa4]
  4056b8:	lea    rcx,[rsp+0xb0]
  4056c0:	mov    DWORD PTR [rsp+0x20],0x1
  4056c8:	mov    QWORD PTR [rsp+0x30],rax
  4056cd:	mov    eax,DWORD PTR [rsp+0x6c]
  4056d1:	mov    DWORD PTR [rsp+0x28],eax
  4056d5:	jmp    0x404758
  4056da:	mov    ecx,DWORD PTR [rsp+0x68]
  4056de:	mov    edx,0x25
  4056e3:	sub    edx,ebp
  4056e5:	cmp    ecx,edx
  4056e7:	mov    eax,ecx
  4056e9:	jg     0x404829
  4056ef:	mov    rdx,QWORD PTR [rip+0x76aa]        # 0x40cda0
  4056f6:	mov    eax,0xf
  4056fb:	sub    eax,ebp
  4056fd:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405706:	movsxd rcx,eax
  405709:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40570e:	mov    ecx,DWORD PTR [rsp+0x68]
  405712:	sub    ecx,eax
  405714:	movsxd rax,ecx
  405717:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  40571c:	jmp    0x404b61
  405721:	mov    edx,ebp
  405723:	jle    0x405a7f
  405729:	mov    rcx,QWORD PTR [rsp+0xc8]
  405731:	call   0x4075b0
  405736:	mov    QWORD PTR [rsp+0xc8],rax
  40573e:	mov    eax,DWORD PTR [rsp+0xac]
  405745:	sub    eax,ebp
  405747:	xor    ebp,ebp
  405749:	mov    DWORD PTR [rsp+0xac],eax
  405750:	jmp    0x405068
  405755:	xor    ebp,ebp
  405757:	xor    r13d,r13d
  40575a:	jmp    0x40481a
  40575f:	mov    r9d,0x4e1f
  405765:	jmp    0x4045b4
  40576a:	lea    rbx,[rsp+0xc0]
  405772:	lea    rdx,[rip+0x7147]        # 0x40c8c0
  405779:	mov    rcx,rbx
  40577c:	call   0x407c80
  405781:	test   eax,eax
  405783:	je     0x4045d3
  405789:	lea    rdx,[rip+0x7133]        # 0x40c8c3
  405790:	mov    rcx,rbx
  405793:	sub    QWORD PTR [rsp+0xc0],0x1
  40579c:	call   0x407c80
  4057a1:	test   eax,eax
  4057a3:	jne    0x4057ae
  4057a5:	add    QWORD PTR [rsp+0xc0],0x1
  4057ae:	mov    rax,QWORD PTR [rsp+0x190]
  4057b6:	mov    DWORD PTR [rsp+0xa4],0x3
  4057c1:	xor    ebp,ebp
  4057c3:	mov    eax,DWORD PTR [rax+0x8]
  4057c6:	add    eax,0x1
  4057c9:	jmp    0x404440
  4057ce:	mov    edx,DWORD PTR [rsp+0xb4]
  4057d5:	mov    eax,0x15
  4057da:	or     edx,0x100000
  4057e0:	tzcnt  edx,edx
  4057e4:	sub    eax,edx
  4057e6:	jmp    0x40470d
  4057eb:	cmp    ebp,0x1
  4057ee:	sbb    eax,eax
  4057f0:	and    eax,0x10
  4057f3:	add    eax,0x11
  4057f6:	mov    DWORD PTR [rsp+0xa4],eax
  4057fd:	jmp    0x405050
  405802:	cmp    ebp,0x1
  405805:	sbb    eax,eax
  405807:	and    eax,0x10
  40580a:	add    eax,0x11
  40580d:	test   ebp,ebp
  40580f:	mov    DWORD PTR [rsp+0xa4],eax
  405816:	jne    0x405050
  40581c:	cmp    DWORD PTR [rsp+0x48],0x1
  405821:	jg     0x405050
  405827:	mov    ebp,DWORD PTR [rsp+0x44]
  40582b:	test   ebp,ebp
  40582d:	jne    0x405050
  405833:	mov    edx,DWORD PTR [rsp+0x8c]
  40583a:	cmp    DWORD PTR [rsp+0x50],edx
  40583e:	je     0x405050
  405844:	mov    rcx,rbx
  405847:	mov    edx,0x1
  40584c:	call   0x4075b0
  405851:	mov    rdx,r13
  405854:	mov    rcx,rax
  405857:	mov    rbx,rax
  40585a:	call   0x4076d0
  40585f:	test   eax,eax
  405861:	jle    0x405548
  405867:	mov    DWORD PTR [rsp+0xa4],0x11
  405872:	mov    DWORD PTR [rsp+0x44],0x0
  40587a:	mov    eax,DWORD PTR [rsp+0x40]
  40587e:	mov    rcx,QWORD PTR [rsp+0xc8]
  405886:	sub    DWORD PTR [rsp+0xac],eax
  40588d:	mov    edx,eax
  40588f:	mov    DWORD PTR [rsp+0xa8],eax
  405896:	call   0x403fe0
  40589b:	mov    QWORD PTR [rsp+0xc8],rax
  4058a3:	jmp    0x405050
  4058a8:	mov    r10d,DWORD PTR [rsp+0x58]
  4058ad:	test   r10d,r10d
  4058b0:	jne    0x4054a7
  4058b6:	jmp    0x4050e1
  4058bb:	mov    r11d,DWORD PTR [rsp+0x58]
  4058c0:	test   r11d,r11d
  4058c3:	je     0x4054a7
  4058c9:	jmp    0x4050e1
  4058ce:	test   ebp,ebp
  4058d0:	je     0x405a17
  4058d6:	mov    r11d,DWORD PTR [rsp+0x44]
  4058db:	test   r11d,r11d
  4058de:	je     0x405ae5
  4058e4:	mov    ecx,DWORD PTR [rsp+0xa8]
  4058eb:	mov    r8,QWORD PTR [rsp+0xc8]
  4058f3:	mov    edx,ecx
  4058f5:	lea    rax,[r8+0x18]
  4058f9:	sar    edx,0x5
  4058fc:	movsxd rdx,edx
  4058ff:	lea    rdx,[rax+rdx*4]
  405903:	cmp    rax,rdx
  405906:	jae    0x405933
  405908:	cmp    DWORD PTR [r8+0x18],0xffffffff
  40590d:	lea    rax,[r8+0x1c]
  405911:	je     0x40592e
  405913:	jmp    0x405ae5
  405918:	nop    DWORD PTR [rax+rax*1+0x0]
  405920:	add    rax,0x4
  405924:	cmp    DWORD PTR [rax-0x4],0xffffffff
  405928:	jne    0x405ae5
  40592e:	cmp    rdx,rax
  405931:	ja     0x405920
  405933:	and    ecx,0x1f
  405936:	je     0x40594a
  405938:	or     edx,0xffffffff
  40593b:	shl    edx,cl
  40593d:	or     edx,DWORD PTR [rax]
  40593f:	mov    eax,edx
  405941:	add    eax,0x1
  405944:	jne    0x405ae5
  40594a:	mov    eax,DWORD PTR [rsp+0x40]
  40594e:	mov    edx,DWORD PTR [rsp+0x50]
  405952:	mov    DWORD PTR [r8+0x14],0x1
  40595a:	mov    DWORD PTR [r8+0x18],0x1
  405962:	mov    DWORD PTR [rsp+0xa8],0x1
  40596d:	mov    DWORD PTR [rsp+0xa4],0x21
  405978:	lea    eax,[rax+rdx*1-0x1]
  40597c:	mov    DWORD PTR [rsp+0xac],eax
  405983:	mov    eax,0x1
  405988:	jmp    0x40554f
  40598d:	add    r13d,eax
  405990:	cmp    eax,0x1
  405993:	je     0x4059bc
  405995:	add    ecx,ebp
  405997:	mov    r10d,ecx
  40599a:	jmp    0x4059a5
  40599c:	lea    esi,[rsi+rsi*4]
  40599f:	add    esi,esi
  4059a1:	cmp    ebp,ecx
  4059a3:	je     0x4059bf
  4059a5:	add    ebp,0x1
  4059a8:	lea    eax,[rbp-0x1]
  4059ab:	cmp    eax,0x8
  4059ae:	jle    0x40599c
  4059b0:	cmp    ebp,0x10
  4059b3:	jg     0x4059a1
  4059b5:	lea    edx,[rdx+rdx*4]
  4059b8:	add    edx,edx
  4059ba:	jmp    0x4059a1
  4059bc:	mov    r10d,ebp
  4059bf:	cmp    r10d,0x8
  4059c3:	lea    ebp,[r10+0x1]
  4059c7:	jg     0x405a9b
  4059cd:	mov    r8,QWORD PTR [rsp+0xc0]
  4059d5:	jmp    0x404afe
  4059da:	mov    r9,QWORD PTR [rsp+0xc8]
  4059e2:	mov    DWORD PTR [rsp+0x44],0x1
  4059ea:	mov    eax,DWORD PTR [rsp+0x50]
  4059ee:	mov    DWORD PTR [r9+0x14],0x0
  4059f6:	mov    DWORD PTR [rsp+0xa4],0x50
  405a01:	mov    DWORD PTR [rsp+0xac],eax
  405a08:	jmp    0x405050
  405a0d:	mov    eax,0x1
  405a12:	jmp    0x4047bd
  405a17:	cmp    DWORD PTR [rsp+0x48],0x1
  405a1c:	je     0x405afc
  405a22:	mov    DWORD PTR [rsp+0xa4],0x21
  405a2d:	mov    r10d,DWORD PTR [rsp+0x44]
  405a32:	test   r10d,r10d
  405a35:	jne    0x405a45
  405a37:	mov    edx,DWORD PTR [rsp+0x40]
  405a3b:	cmp    DWORD PTR [rsp+0x48],edx
  405a3f:	jl     0x405548
  405a45:	mov    r9,QWORD PTR [rsp+0xc8]
  405a4d:	mov    eax,DWORD PTR [r9+0x18]
  405a51:	test   al,0x1
  405a53:	je     0x405050
  405a59:	test   ebp,ebp
  405a5b:	jne    0x405b80
  405a61:	cmp    DWORD PTR [rsp+0x48],0x1
  405a66:	je     0x4059ea
  405a68:	sub    eax,0x1
  405a6b:	mov    DWORD PTR [rsp+0xa4],0x11
  405a76:	mov    DWORD PTR [r9+0x18],eax
  405a7a:	jmp    0x405050
  405a7f:	mov    rcx,QWORD PTR [rsp+0xc8]
  405a87:	neg    edx
  405a89:	call   0x4069f0
  405a8e:	jmp    0x40573e
  405a93:	xor    r8d,r8d
  405a96:	jmp    0x404a2f
  405a9b:	cmp    ebp,0x10
  405a9e:	jg     0x405aa7
  405aa0:	lea    eax,[rdx+rdx*4]
  405aa3:	lea    edx,[r8+rax*2]
  405aa7:	mov    r8,QWORD PTR [rsp+0xc0]
  405aaf:	xor    ecx,ecx
  405ab1:	jmp    0x4047ff
  405ab6:	cmp    edx,0xffffffff
  405ab9:	jl     0x404974
  405abf:	mov    rax,QWORD PTR [rsp+0xc8]
  405ac7:	mov    DWORD PTR [rsp+0xa8],0x1
  405ad2:	mov    DWORD PTR [rax+0x14],0x1
  405ad9:	mov    DWORD PTR [rax+0x18],0x1
  405ae0:	jmp    0x404946
  405ae5:	mov    DWORD PTR [rsp+0xa4],0x11
  405af0:	jmp    0x405a2d
  405af5:	xor    ecx,ecx
  405af7:	jmp    0x404ad8
  405afc:	mov    edx,DWORD PTR [rsp+0x8c]
  405b03:	cmp    DWORD PTR [rsp+0x50],edx
  405b07:	jne    0x405bcd
  405b0d:	mov    rax,QWORD PTR [rsp+0xc8]
  405b15:	mov    DWORD PTR [rsp+0xa4],0x21
  405b20:	cmp    DWORD PTR [rax+0x14],0x1
  405b24:	jne    0x405050
  405b2a:	cmp    DWORD PTR [rax+0x18],0x1
  405b2e:	mov    eax,DWORD PTR [rsp+0x48]
  405b32:	cmovne eax,DWORD PTR [rsp+0x84]
  405b3a:	mov    DWORD PTR [rsp+0x84],eax
  405b41:	jmp    0x405050
  405b46:	mov    r8,QWORD PTR [rsp+0x1a0]
  405b4e:	mov    rdx,QWORD PTR [rsp+0x190]
  405b56:	mov    rcx,rbx
  405b59:	call   0x406bc0
  405b5e:	mov    DWORD PTR [rsp+0xa4],eax
  405b65:	mov    rax,QWORD PTR [rsp+0x190]
  405b6d:	mov    eax,DWORD PTR [rax+0x8]
  405b70:	add    eax,0x1
  405b73:	jmp    0x404440
  405b78:	xor    r8d,r8d
  405b7b:	jmp    0x405612
  405b80:	mov    rcx,r9
  405b83:	call   0x403b30
  405b88:	mov    edx,DWORD PTR [rax+0x14]
  405b8b:	mov    ecx,DWORD PTR [rsp+0xa8]
  405b92:	mov    QWORD PTR [rsp+0xc8],rax
  405b9a:	sub    edx,0x1
  405b9d:	movsxd rdx,edx
  405ba0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  405ba5:	mov    eax,ecx
  405ba7:	neg    eax
  405ba9:	and    eax,0x1f
  405bac:	xor    edx,0x1f
  405baf:	cmp    edx,eax
  405bb1:	je     0x405bbd
  405bb3:	add    ecx,0x1
  405bb6:	mov    DWORD PTR [rsp+0xa8],ecx
  405bbd:	mov    DWORD PTR [rsp+0xa4],0x21
  405bc8:	jmp    0x405050
  405bcd:	mov    DWORD PTR [rsp+0xa4],0x1
  405bd8:	jmp    0x40587a
  405bdd:	nop
  405bde:	nop
  405bdf:	nop
  405be0:	push   r13
  405be2:	push   r12
  405be4:	push   rbp
  405be5:	push   rdi
  405be6:	push   rsi
  405be7:	push   rbx
  405be8:	sub    rsp,0x28
  405bec:	mov    eax,DWORD PTR [rdx+0x14]
  405bef:	cmp    DWORD PTR [rcx+0x14],eax
  405bf2:	mov    rsi,rcx
  405bf5:	mov    rdi,rdx
  405bf8:	jge    0x405c00
  405bfa:	mov    rsi,rdx
  405bfd:	mov    rdi,rcx
  405c00:	mov    ecx,DWORD PTR [rsi+0x8]
  405c03:	xor    r12d,r12d
  405c06:	call   0x4070a0
  405c0b:	movsxd rcx,DWORD PTR [rsi+0x14]
  405c0f:	mov    rbx,rax
  405c12:	lea    r11,[rdi+0x18]
  405c16:	lea    r8,[rbx+0x18]
  405c1a:	mov    DWORD PTR [rax+0x14],ecx
  405c1d:	movsxd rdx,DWORD PTR [rdi+0x14]
  405c21:	lea    rax,[rsi+0x18]
  405c25:	lea    rdi,[r8+rdx*4]
  405c29:	mov    rbp,rdx
  405c2c:	nop    DWORD PTR [rax+0x0]
  405c30:	mov    r10d,DWORD PTR [rax]
  405c33:	mov    r9d,DWORD PTR [r11]
  405c36:	add    r8,0x4
  405c3a:	add    rax,0x4
  405c3e:	add    r11,0x4
  405c42:	movzx  r13d,r9w
  405c46:	movzx  edx,r10w
  405c4a:	shr    r9d,0x10
  405c4e:	add    edx,r13d
  405c51:	shr    r10d,0x10
  405c55:	add    edx,r12d
  405c58:	add    r10d,r9d
  405c5b:	mov    r9d,edx
  405c5e:	mov    WORD PTR [r8-0x4],dx
  405c63:	and    r9d,0x10000
  405c6a:	shr    r9d,0x10
  405c6e:	add    r9d,r10d
  405c71:	mov    r12d,r9d
  405c74:	mov    WORD PTR [r8-0x2],r9w
  405c79:	and    r12d,0x10000
  405c80:	shr    r12d,0x10
  405c84:	cmp    rdi,r8
  405c87:	ja     0x405c30
  405c89:	mov    edx,DWORD PTR [rsi+0x14]
  405c8c:	sub    edx,ebp
  405c8e:	movsxd rdx,edx
  405c91:	lea    r11,[rdi+rdx*4]
  405c95:	cmp    r11,r8
  405c98:	jbe    0x405cdb
  405c9a:	nop    WORD PTR [rax+rax*1+0x0]
  405ca0:	mov    r9d,DWORD PTR [rax]
  405ca3:	add    r8,0x4
  405ca7:	add    rax,0x4
  405cab:	movzx  r10d,r9w
  405caf:	shr    r9d,0x10
  405cb3:	add    r10d,r12d
  405cb6:	mov    edx,r10d
  405cb9:	mov    WORD PTR [r8-0x4],r10w
  405cbe:	and    edx,0x10000
  405cc4:	shr    edx,0x10
  405cc7:	add    edx,r9d
  405cca:	mov    WORD PTR [r8-0x2],dx
  405ccf:	mov    r12d,edx
  405cd2:	shr    r12d,0x10
  405cd6:	cmp    r11,r8
  405cd9:	ja     0x405ca0
  405cdb:	test   r12d,r12d
  405cde:	je     0x405cf3
  405ce0:	cmp    ecx,DWORD PTR [rbx+0xc]
  405ce3:	je     0x405d03
  405ce5:	lea    eax,[rcx+0x1]
  405ce8:	mov    DWORD PTR [rbx+0x14],eax
  405ceb:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  405cf3:	mov    rax,rbx
  405cf6:	add    rsp,0x28
  405cfa:	pop    rbx
  405cfb:	pop    rsi
  405cfc:	pop    rdi
  405cfd:	pop    rbp
  405cfe:	pop    r12
  405d00:	pop    r13
  405d02:	ret    
  405d03:	mov    eax,DWORD PTR [rbx+0x8]
  405d06:	lea    ecx,[rax+0x1]
  405d09:	call   0x4070a0
  405d0e:	mov    rsi,rax
  405d11:	lea    rcx,[rax+0x10]
  405d15:	movsxd rax,DWORD PTR [rbx+0x14]
  405d19:	lea    rdx,[rbx+0x10]
  405d1d:	lea    r8,[rax*4+0x8]
  405d25:	call   0x407e20
  405d2a:	mov    rcx,rbx
  405d2d:	mov    rbx,rsi
  405d30:	call   0x4071b0
  405d35:	movsxd rcx,DWORD PTR [rsi+0x14]
  405d39:	jmp    0x405ce5
  405d3b:	nop
  405d3c:	nop
  405d3d:	nop
  405d3e:	nop
  405d3f:	nop
  405d40:	sub    rsp,0x78
  405d44:	movaps XMMWORD PTR [rsp+0x50],xmm6
  405d49:	movaps XMMWORD PTR [rsp+0x60],xmm7
  405d4e:	movsd  QWORD PTR [rsp+0x48],xmm0
  405d54:	movapd xmm7,xmm0
  405d58:	mov    eax,DWORD PTR [rsp+0x4c]
  405d5c:	mov    ecx,eax
  405d5e:	and    eax,0x7ff00000
  405d63:	and    ecx,0xfffff
  405d69:	or     ecx,DWORD PTR [rsp+0x48]
  405d6d:	mov    r9d,ecx
  405d70:	or     r9d,eax
  405d73:	je     0x405e10
  405d79:	cmp    eax,0x7ff00000
  405d7e:	je     0x405e73
  405d84:	movsd  xmm1,QWORD PTR [rip+0x6d0c]        # 0x40ca98
  405d8c:	mov    ecx,0x0
  405d91:	ucomisd xmm0,xmm1
  405d95:	setnp  al
  405d98:	cmovne eax,ecx
  405d9b:	test   al,al
  405d9d:	jne    0x405e60
  405da3:	test   edx,edx
  405da5:	je     0x405e60
  405dab:	movsd  xmm0,QWORD PTR [rip+0x6d0d]        # 0x40cac0
  405db3:	test   edx,edx
  405db5:	mov    eax,edx
  405db7:	andpd  xmm0,xmm7
  405dbb:	js     0x405f00
  405dc1:	cmp    eax,0x1
  405dc4:	je     0x405df0
  405dc6:	test   al,0x1
  405dc8:	movapd xmm3,xmm1
  405dcc:	jne    0x405f13
  405dd2:	movapd xmm2,xmm0
  405dd6:	movapd xmm0,xmm3
  405dda:	shr    eax,1
  405ddc:	nop    DWORD PTR [rax+0x0]
  405de0:	test   al,0x1
  405de2:	mulsd  xmm2,xmm2
  405de6:	je     0x405dec
  405de8:	mulsd  xmm0,xmm2
  405dec:	shr    eax,1
  405dee:	jne    0x405de0
  405df0:	and    edx,0x1
  405df3:	je     0x405e64
  405df5:	movq   rax,xmm7
  405dfa:	test   rax,rax
  405dfd:	jns    0x405e64
  405dff:	movsd  xmm2,QWORD PTR [rip+0x6cc9]        # 0x40cad0
  405e07:	xorpd  xmm0,xmm2
  405e0b:	jmp    0x405e64
  405e0d:	nop    DWORD PTR [rax]
  405e10:	movsd  xmm1,QWORD PTR [rip+0x6c80]        # 0x40ca98
  405e18:	mov    ecx,0x0
  405e1d:	ucomisd xmm0,xmm1
  405e21:	setnp  al
  405e24:	cmovne eax,ecx
  405e27:	test   al,al
  405e29:	jne    0x405e60
  405e2b:	test   edx,edx
  405e2d:	je     0x405e60
  405e2f:	mov    eax,edx
  405e31:	and    eax,0x1
  405e34:	test   edx,edx
  405e36:	js     0x405f70
  405e3c:	test   eax,eax
  405e3e:	je     0x405e51
  405e40:	movq   rax,xmm7
  405e45:	shr    rax,0x20
  405e49:	test   eax,eax
  405e4b:	js     0x405fb0
  405e51:	pxor   xmm0,xmm0
  405e55:	jmp    0x405e64
  405e57:	nop    WORD PTR [rax+rax*1+0x0]
  405e60:	movapd xmm0,xmm1
  405e64:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  405e69:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  405e6e:	add    rsp,0x78
  405e72:	ret    
  405e73:	test   ecx,ecx
  405e75:	je     0x405f20
  405e7b:	movsd  xmm1,QWORD PTR [rip+0x6c15]        # 0x40ca98
  405e83:	mov    ecx,0x0
  405e88:	ucomisd xmm0,xmm1
  405e8c:	setnp  al
  405e8f:	cmovne eax,ecx
  405e92:	test   al,al
  405e94:	jne    0x405e60
  405e96:	test   edx,edx
  405e98:	je     0x405e60
  405e9a:	movq   rax,xmm7
  405e9f:	shr    rax,0x20
  405ea3:	test   eax,eax
  405ea5:	js     0x405fc0
  405eab:	movsd  xmm6,QWORD PTR [rip+0x6bdd]        # 0x40ca90
  405eb3:	mov    DWORD PTR [rsp+0x3c],edx
  405eb7:	call   0x407eb0
  405ebc:	mov    edx,DWORD PTR [rsp+0x3c]
  405ec0:	pxor   xmm3,xmm3
  405ec4:	mov    DWORD PTR [rax],0x21
  405eca:	movapd xmm2,xmm7
  405ece:	movsd  QWORD PTR [rsp+0x20],xmm6
  405ed4:	mov    ecx,0x1
  405ed9:	cvtsi2sd xmm3,edx
  405edd:	lea    rdx,[rip+0x6b9c]        # 0x40ca80
  405ee4:	call   0x401c50
  405ee9:	movapd xmm0,xmm6
  405eed:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  405ef2:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  405ef7:	add    rsp,0x78
  405efb:	ret    
  405efc:	nop    DWORD PTR [rax+0x0]
  405f00:	movapd xmm4,xmm1
  405f04:	neg    eax
  405f06:	divsd  xmm4,xmm0
  405f0a:	movapd xmm0,xmm4
  405f0e:	jmp    0x405dc1
  405f13:	movapd xmm3,xmm0
  405f17:	jmp    0x405dd2
  405f1c:	nop    DWORD PTR [rax+0x0]
  405f20:	movsd  xmm1,QWORD PTR [rip+0x6b70]        # 0x40ca98
  405f28:	mov    r8d,edx
  405f2b:	and    r8d,0x1
  405f2f:	mov    ecx,0x0
  405f34:	ucomisd xmm0,xmm1
  405f38:	setnp  al
  405f3b:	cmovne eax,ecx
  405f3e:	test   al,al
  405f40:	jne    0x405e60
  405f46:	test   edx,edx
  405f48:	je     0x405e60
  405f4e:	movq   rax,xmm7
  405f53:	shr    rax,0x20
  405f57:	test   eax,eax
  405f59:	js     0x405fd0
  405f5b:	test   edx,edx
  405f5d:	movsd  xmm0,QWORD PTR [rip+0x6b4b]        # 0x40cab0
  405f65:	jns    0x405e64
  405f6b:	jmp    0x405e51
  405f70:	test   eax,eax
  405f72:	je     0x406030
  405f78:	movq   rax,xmm7
  405f7d:	movsd  xmm0,QWORD PTR [rip+0x6b2b]        # 0x40cab0
  405f85:	shr    rax,0x20
  405f89:	test   eax,eax
  405f8b:	jns    0x405e64
  405f91:	movsd  xmm0,QWORD PTR [rip+0x6b0f]        # 0x40caa8
  405f99:	jmp    0x405e64
  405f9e:	xchg   ax,ax
  405fa0:	test   r8d,r8d
  405fa3:	pxor   xmm0,xmm0
  405fa7:	je     0x405e64
  405fad:	nop    DWORD PTR [rax]
  405fb0:	movsd  xmm0,QWORD PTR [rip+0x6ae8]        # 0x40caa0
  405fb8:	jmp    0x405e64
  405fbd:	nop    DWORD PTR [rax]
  405fc0:	movsd  xmm6,QWORD PTR [rip+0x6ac0]        # 0x40ca88
  405fc8:	jmp    0x405eb3
  405fcd:	nop    DWORD PTR [rax]
  405fd0:	mov    eax,r8d
  405fd3:	mov    ecx,edx
  405fd5:	xor    eax,0x1
  405fd8:	shr    ecx,0x1f
  405fdb:	and    eax,0x1
  405fde:	je     0x405fec
  405fe0:	test   cl,cl
  405fe2:	pxor   xmm0,xmm0
  405fe6:	jne    0x405e64
  405fec:	not    edx
  405fee:	shr    edx,0x1f
  405ff1:	test   r8d,r8d
  405ff4:	je     0x406006
  405ff6:	test   dl,dl
  405ff8:	movsd  xmm0,QWORD PTR [rip+0x6aa8]        # 0x40caa8
  406000:	jne    0x405e64
  406006:	test   al,al
  406008:	je     0x40601a
  40600a:	test   dl,dl
  40600c:	movsd  xmm0,QWORD PTR [rip+0x6a9c]        # 0x40cab0
  406014:	jne    0x405e64
  40601a:	test   cl,cl
  40601c:	jne    0x405fa0
  40601e:	test   r8d,r8d
  406021:	movsd  xmm0,QWORD PTR [rip+0x6a7f]        # 0x40caa8
  406029:	jne    0x405e64
  40602f:	nop
  406030:	movsd  xmm0,QWORD PTR [rip+0x6a78]        # 0x40cab0
  406038:	jmp    0x405e64
  40603d:	nop
  40603e:	nop
  40603f:	nop
  406040:	fld    TBYTE PTR [rdx]
  406042:	fxam   
  406044:	fstsw  ax
  406047:	mov    dh,0x45
  406049:	and    dh,ah
  40604b:	cmp    dh,0x5
  40604e:	je     0x40608f
  406050:	fld    st(0)
  406052:	sub    rsp,0x8
  406056:	fnstcw WORD PTR [rsp+0x4]
  40605a:	movzx  eax,WORD PTR [rsp+0x4]
  40605f:	or     ah,0xc
  406062:	mov    WORD PTR [rsp],ax
  406066:	fldcw  WORD PTR [rsp]
  406069:	frndint 
  40606b:	fldcw  WORD PTR [rsp+0x4]
  40606f:	add    rsp,0x8
  406073:	fsub   st(1),st
  406075:	fxch   st(1)
  406077:	f2xm1  
  406079:	fld1   
  40607b:	faddp  st(1),st
  40607d:	fscale 
  40607f:	fstp   st(1)
  406081:	mov    rax,rcx
  406084:	mov    QWORD PTR [rcx+0x8],0x0
  40608c:	fstp   TBYTE PTR [rcx]
  40608e:	ret    
  40608f:	test   eax,0x200
  406094:	je     0x40609a
  406096:	fstp   st(0)
  406098:	fldz   
  40609a:	mov    rax,rcx
  40609d:	mov    QWORD PTR [rcx+0x8],0x0
  4060a5:	fstp   TBYTE PTR [rcx]
  4060a7:	ret    
  4060a8:	nop
  4060a9:	nop
  4060aa:	nop
  4060ab:	nop
  4060ac:	nop
  4060ad:	nop
  4060ae:	nop
  4060af:	nop
  4060b0:	add    BYTE PTR [rax],al
  4060b2:	add    BYTE PTR [rax],al
  4060b4:	add    BYTE PTR [rax],al
  4060b6:	lock (bad) 
  4060b8:	pop    rdx
  4060ba:	cmc    
  4060bb:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  4060bf:	(bad)  
  4060c0:	fld    QWORD PTR [rip+0xffffffffffffffea]        # 0x4060b0
  4060c6:	fld    TBYTE PTR [rdx]
  4060c8:	fxam   
  4060ca:	fnstsw ax
  4060cc:	fld    st(0)
  4060ce:	sahf   
  4060cf:	jb     0x406108
  4060d1:	fsub   st,st(2)
  4060d3:	fld    st(0)
  4060d5:	fabs   
  4060d7:	fcomp  QWORD PTR [rip+0xffffffffffffffdb]        # 0x4060b8
  4060dd:	fnstsw ax
  4060df:	and    ah,0x45
  4060e2:	je     0x4060f6
  4060e4:	fstp   st(1)
  4060e6:	fyl2xp1 
  4060e8:	mov    rax,rcx
  4060eb:	mov    QWORD PTR [rcx+0x8],0x0
  4060f3:	fstp   TBYTE PTR [rcx]
  4060f5:	ret    
  4060f6:	fstp   st(0)
  4060f8:	fyl2x  
  4060fa:	mov    rax,rcx
  4060fd:	mov    QWORD PTR [rcx+0x8],0x0
  406105:	fstp   TBYTE PTR [rcx]
  406107:	ret    
  406108:	jp     0x4060d1
  40610a:	fstp   st(1)
  40610c:	fstp   st(1)
  40610e:	mov    rax,rcx
  406111:	mov    QWORD PTR [rcx+0x8],0x0
  406119:	fstp   TBYTE PTR [rcx]
  40611b:	ret    
  40611c:	nop
  40611d:	nop
  40611e:	nop
  40611f:	nop
  406120:	push   r15
  406122:	push   r14
  406124:	push   r13
  406126:	push   r12
  406128:	push   rbp
  406129:	push   rdi
  40612a:	push   rsi
  40612b:	push   rbx
  40612c:	sub    rsp,0x28
  406130:	mov    r14,rcx
  406133:	mov    r13,rdx
  406136:	mov    QWORD PTR [rsp+0x80],r8
  40613e:	mov    QWORD PTR [rsp+0x88],r9
  406146:	call   0x407e30
  40614b:	mov    rdi,QWORD PTR [rip+0x6b9e]        # 0x40ccf0
  406152:	mov    rsi,QWORD PTR [rax]
  406155:	cmp    BYTE PTR [rdi+0x30],0x0
  406159:	je     0x406580
  40615f:	mov    rax,QWORD PTR [rsp+0x88]
  406167:	xor    r8d,r8d
  40616a:	mov    QWORD PTR [rax],0x0
  406171:	mov    rbx,QWORD PTR [r14]
  406174:	movzx  edx,BYTE PTR [rbx+0x2]
  406178:	lea    rax,[rbx+0x3]
  40617c:	add    rbx,0x2
  406180:	cmp    dl,0x30
  406183:	jne    0x406199
  406185:	mov    rbx,rax
  406188:	add    rax,0x1
  40618c:	movzx  edx,BYTE PTR [rax-0x1]
  406190:	add    r8d,0x1
  406194:	cmp    dl,0x30
  406197:	je     0x406185
  406199:	cmp    BYTE PTR [rdi+rdx*1],0x0
  40619d:	jne    0x4062f0
  4061a3:	movzx  r9d,BYTE PTR [rsi]
  4061a7:	test   r9b,r9b
  4061aa:	je     0x4067ea
  4061b0:	movzx  edx,BYTE PTR [rbx]
  4061b3:	cmp    r9b,dl
  4061b6:	jne    0x406593
  4061bc:	mov    eax,0x1
  4061c1:	jmp    0x4061d1
  4061c3:	add    rax,0x1
  4061c7:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  4061cb:	jne    0x406590
  4061d1:	movzx  edx,BYTE PTR [rsi+rax*1]
  4061d5:	test   dl,dl
  4061d7:	jne    0x4061c3
  4061d9:	add    rax,rbx
  4061dc:	movzx  ecx,BYTE PTR [rax]
  4061df:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  4061e4:	mov    rdx,rcx
  4061e7:	test   r10b,r10b
  4061ea:	jne    0x406670
  4061f0:	cmp    dl,0x50
  4061f3:	je     0x4064a0
  4061f9:	cmp    dl,0x70
  4061fc:	je     0x4064a0
  406202:	mov    rbp,rax
  406205:	mov    r11d,0x1
  40620b:	xor    r12d,r12d
  40620e:	xor    r15d,r15d
  406211:	xor    r10d,r10d
  406214:	test   r8d,r8d
  406217:	jne    0x40621d
  406219:	lea    rax,[rbx-0x1]
  40621d:	test   r11d,r11d
  406220:	mov    QWORD PTR [r14],rax
  406223:	jne    0x406550
  406229:	test   r10d,r10d
  40622c:	je     0x406360
  406232:	test   r15d,r15d
  406235:	mov    eax,DWORD PTR [r13+0xc]
  406239:	jne    0x4065e0
  40623f:	cmp    eax,0x2
  406242:	je     0x406888
  406248:	cmp    eax,0x3
  40624b:	je     0x406872
  406251:	cmp    eax,0x1
  406254:	je     0x406658
  40625a:	mov    esi,DWORD PTR [r13+0x0]
  40625e:	mov    ebx,esi
  406260:	and    esi,0x1f
  406263:	sar    ebx,0x5
  406266:	cmp    esi,0x1
  406269:	mov    edi,ebx
  40626b:	sbb    edi,0xffffffff
  40626e:	xor    ecx,ecx
  406270:	mov    eax,edi
  406272:	sar    eax,1
  406274:	je     0x406287
  406276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406280:	add    ecx,0x1
  406283:	sar    eax,1
  406285:	jne    0x406280
  406287:	call   0x4070a0
  40628c:	mov    rcx,QWORD PTR [rsp+0x88]
  406294:	test   ebx,ebx
  406296:	mov    QWORD PTR [rcx],rax
  406299:	mov    DWORD PTR [rax+0x14],edi
  40629c:	jle    0x4069a8
  4062a2:	lea    ecx,[rbx-0x1]
  4062a5:	lea    rdx,[rax+0x18]
  4062a9:	lea    rcx,[rax+rcx*4+0x1c]
  4062ae:	xchg   ax,ax
  4062b0:	mov    DWORD PTR [rdx],0xffffffff
  4062b6:	add    rdx,0x4
  4062ba:	cmp    rdx,rcx
  4062bd:	jne    0x4062b0
  4062bf:	mov    edx,ebx
  4062c1:	cmp    edi,ebx
  4062c3:	jle    0x4062d8
  4062c5:	movsxd r8,edx
  4062c8:	mov    edx,0x20
  4062cd:	mov    ecx,edx
  4062cf:	sub    ecx,esi
  4062d1:	sar    edx,cl
  4062d3:	mov    DWORD PTR [rax+r8*4+0x18],edx
  4062d8:	mov    eax,DWORD PTR [r13+0x4]
  4062dc:	mov    rdi,QWORD PTR [rsp+0x80]
  4062e4:	mov    DWORD PTR [rdi],eax
  4062e6:	mov    eax,0x11
  4062eb:	jmp    0x406552
  4062f0:	movzx  eax,BYTE PTR [rbx]
  4062f3:	movzx  r9d,BYTE PTR [rsi]
  4062f7:	add    r8d,0x1
  4062fb:	xor    r11d,r11d
  4062fe:	xor    r12d,r12d
  406301:	movzx  r10d,BYTE PTR [rdi+rax*1]
  406306:	mov    rdx,rax
  406309:	test   r10b,r10b
  40630c:	mov    rax,rbx
  40630f:	je     0x406321
  406311:	add    rax,0x1
  406315:	movzx  ecx,BYTE PTR [rax]
  406318:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40631c:	mov    rdx,rcx
  40631f:	jne    0x406311
  406321:	cmp    dl,r9b
  406324:	je     0x4065a0
  40632a:	test   r12,r12
  40632d:	movzx  edx,BYTE PTR [rax]
  406330:	je     0x406339
  406332:	sub    r12d,eax
  406335:	shl    r12d,0x2
  406339:	cmp    dl,0x50
  40633c:	je     0x4064a9
  406342:	cmp    dl,0x70
  406345:	je     0x4064a9
  40634b:	test   r11d,r11d
  40634e:	mov    QWORD PTR [r14],rax
  406351:	mov    rbp,rax
  406354:	jne    0x406550
  40635a:	nop    WORD PTR [rax+rax*1+0x0]
  406360:	mov    rax,rbp
  406363:	xor    ecx,ecx
  406365:	sub    rax,rbx
  406368:	sub    eax,0x1
  40636b:	cmp    eax,0x7
  40636e:	jle    0x40637a
  406370:	sar    eax,1
  406372:	add    ecx,0x1
  406375:	cmp    eax,0x7
  406378:	jg     0x406370
  40637a:	call   0x4070a0
  40637f:	cmp    BYTE PTR [rsi+0x1],0x0
  406383:	mov    r14,rax
  406386:	lea    r15,[rax+0x18]
  40638a:	je     0x40689e
  406390:	mov    edx,0x1
  406395:	jmp    0x4063a3
  406397:	nop    WORD PTR [rax+rax*1+0x0]
  4063a0:	mov    rdx,rax
  4063a3:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  4063a8:	lea    rax,[rdx+0x1]
  4063ac:	jne    0x4063a0
  4063ae:	cmp    rbx,rbp
  4063b1:	jae    0x4068a5
  4063b7:	add    rsi,rdx
  4063ba:	mov    rax,r15
  4063bd:	xor    r9d,r9d
  4063c0:	xor    r8d,r8d
  4063c3:	jmp    0x4063f1
  4063c5:	cmp    r8d,0x20
  4063c9:	je     0x406563
  4063cf:	movzx  r10d,cl
  4063d3:	mov    ecx,r8d
  4063d6:	add    r8d,0x4
  4063da:	movzx  r10d,BYTE PTR [rdi+r10*1]
  4063df:	mov    rbp,r11
  4063e2:	and    r10d,0xf
  4063e6:	shl    r10d,cl
  4063e9:	or     r9d,r10d
  4063ec:	cmp    rbx,rbp
  4063ef:	jae    0x406408
  4063f1:	movzx  ecx,BYTE PTR [rbp-0x1]
  4063f5:	lea    r11,[rbp-0x1]
  4063f9:	cmp    cl,BYTE PTR [rsi]
  4063fb:	jne    0x4063c5
  4063fd:	sub    r11,rdx
  406400:	mov    rbp,r11
  406403:	cmp    rbx,rbp
  406406:	jb     0x4063f1
  406408:	bsr    edx,r9d
  40640c:	xor    edx,0x1f
  40640f:	mov    DWORD PTR [rax],r9d
  406412:	add    rax,0x4
  406416:	mov    esi,DWORD PTR [r13+0x0]
  40641a:	sub    rax,r15
  40641d:	sar    rax,0x2
  406421:	mov    DWORD PTR [r14+0x14],eax
  406425:	shl    eax,0x5
  406428:	sub    eax,edx
  40642a:	cmp    eax,esi
  40642c:	jg     0x4066d8
  406432:	mov    edi,0x0
  406437:	jl     0x4066ae
  40643d:	cmp    r12d,DWORD PTR [r13+0x8]
  406441:	jg     0x406650
  406447:	mov    eax,DWORD PTR [r13+0x4]
  40644b:	cmp    r12d,eax
  40644e:	jge    0x406739
  406454:	mov    ebx,eax
  406456:	sub    ebx,r12d
  406459:	cmp    esi,ebx
  40645b:	jg     0x406797
  406461:	mov    edx,DWORD PTR [r13+0xc]
  406465:	cmp    edx,0x2
  406468:	je     0x406972
  40646e:	cmp    edx,0x3
  406471:	je     0x40694f
  406477:	cmp    edx,0x1
  40647a:	je     0x406982
  406480:	mov    rcx,r14
  406483:	call   0x4071b0
  406488:	call   0x407eb0
  40648d:	mov    DWORD PTR [rax],0x22
  406493:	mov    eax,0x50
  406498:	jmp    0x406552
  40649d:	nop    DWORD PTR [rax]
  4064a0:	xor    r12d,r12d
  4064a3:	mov    r11d,0x1
  4064a9:	movzx  edx,BYTE PTR [rax+0x1]
  4064ad:	cmp    dl,0x2b
  4064b0:	je     0x4066d0
  4064b6:	cmp    dl,0x2d
  4064b9:	je     0x4065b1
  4064bf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4064c3:	xor    r15d,r15d
  4064c6:	lea    r9,[rax+0x1]
  4064ca:	lea    ecx,[rdx-0x1]
  4064cd:	cmp    cl,0x18
  4064d0:	ja     0x4065cf
  4064d6:	lea    rcx,[r9+0x1]
  4064da:	movzx  r9d,BYTE PTR [r9+0x1]
  4064df:	sub    edx,0x10
  4064e2:	xor    r10d,r10d
  4064e5:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4064ea:	mov    r9d,ebp
  4064ed:	sub    r9d,0x1
  4064f1:	cmp    r9b,0x18
  4064f5:	ja     0x406531
  4064f7:	nop    WORD PTR [rax+rax*1+0x0]
  406500:	test   edx,0xf8000000
  406506:	mov    r9d,0x1
  40650c:	lea    edx,[rdx+rdx*4]
  40650f:	cmovne r10d,r9d
  406513:	add    rcx,0x1
  406517:	movzx  r9d,BYTE PTR [rcx]
  40651b:	lea    edx,[rbp+rdx*2-0x10]
  40651f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  406524:	mov    r9d,ebp
  406527:	sub    r9d,0x1
  40652b:	cmp    r9b,0x18
  40652f:	jbe    0x406500
  406531:	mov    r9d,r15d
  406534:	mov    rbp,rax
  406537:	mov    rax,rcx
  40653a:	neg    r9d
  40653d:	xor    edx,r9d
  406540:	add    edx,r15d
  406543:	add    r12d,edx
  406546:	jmp    0x406214
  40654b:	nop    DWORD PTR [rax+rax*1+0x0]
  406550:	xor    eax,eax
  406552:	add    rsp,0x28
  406556:	pop    rbx
  406557:	pop    rsi
  406558:	pop    rdi
  406559:	pop    rbp
  40655a:	pop    r12
  40655c:	pop    r13
  40655e:	pop    r14
  406560:	pop    r15
  406562:	ret    
  406563:	mov    DWORD PTR [rax],r9d
  406566:	mov    r8d,0x4
  40656c:	movzx  r10d,BYTE PTR [rbp-0x1]
  406571:	add    rax,0x4
  406575:	xor    r9d,r9d
  406578:	xor    ecx,ecx
  40657a:	jmp    0x4063da
  40657f:	nop
  406580:	call   0x406b30
  406585:	jmp    0x40615f
  40658a:	nop    WORD PTR [rax+rax*1+0x0]
  406590:	mov    edx,r9d
  406593:	mov    rax,rbx
  406596:	jmp    0x4061f0
  40659b:	nop    DWORD PTR [rax+rax*1+0x0]
  4065a0:	test   r12,r12
  4065a3:	je     0x4068b5
  4065a9:	movzx  edx,BYTE PTR [rax]
  4065ac:	jmp    0x406332
  4065b1:	mov    r15d,0x1
  4065b7:	movzx  edx,BYTE PTR [rax+0x2]
  4065bb:	lea    r9,[rax+0x2]
  4065bf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4065c3:	lea    ecx,[rdx-0x1]
  4065c6:	cmp    cl,0x18
  4065c9:	jbe    0x4064d6
  4065cf:	mov    rbp,rax
  4065d2:	xor    r10d,r10d
  4065d5:	jmp    0x406214
  4065da:	nop    WORD PTR [rax+rax*1+0x0]
  4065e0:	cmp    eax,0x2
  4065e3:	je     0x406781
  4065e9:	cmp    eax,0x3
  4065ec:	jne    0x406488
  4065f2:	mov    r10d,DWORD PTR [rsp+0x90]
  4065fa:	test   r10d,r10d
  4065fd:	je     0x406488
  406603:	xor    ecx,ecx
  406605:	call   0x4070a0
  40660a:	mov    r14,rax
  40660d:	mov    DWORD PTR [rax+0x14],0x1
  406614:	mov    DWORD PTR [rax+0x18],0x1
  40661b:	mov    eax,DWORD PTR [r13+0x4]
  40661f:	mov    rdi,QWORD PTR [rsp+0x88]
  406627:	mov    QWORD PTR [rdi],r14
  40662a:	mov    rdi,QWORD PTR [rsp+0x80]
  406632:	mov    DWORD PTR [rdi],eax
  406634:	call   0x407eb0
  406639:	mov    DWORD PTR [rax],0x22
  40663f:	mov    eax,0x62
  406644:	jmp    0x406552
  406649:	nop    DWORD PTR [rax+0x0]
  406650:	mov    rcx,r14
  406653:	call   0x4071b0
  406658:	call   0x407eb0
  40665d:	mov    DWORD PTR [rax],0x22
  406663:	mov    eax,0xa3
  406668:	jmp    0x406552
  40666d:	nop    DWORD PTR [rax]
  406670:	cmp    cl,0x30
  406673:	mov    rbx,rax
  406676:	jne    0x406696
  406678:	nop    DWORD PTR [rax+rax*1+0x0]
  406680:	add    rbx,0x1
  406684:	movzx  ecx,BYTE PTR [rbx]
  406687:	cmp    cl,0x30
  40668a:	je     0x406680
  40668c:	movzx  edx,cl
  40668f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  406694:	mov    edx,ecx
  406696:	xor    r11d,r11d
  406699:	test   r10b,r10b
  40669c:	mov    r12,rax
  40669f:	sete   r11b
  4066a3:	mov    r8d,0x1
  4066a9:	jmp    0x406309
  4066ae:	mov    ebx,esi
  4066b0:	mov    rcx,r14
  4066b3:	sub    ebx,eax
  4066b5:	mov    edx,ebx
  4066b7:	sub    r12d,ebx
  4066ba:	call   0x4075b0
  4066bf:	mov    r14,rax
  4066c2:	lea    r15,[rax+0x18]
  4066c6:	jmp    0x40643d
  4066cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4066d0:	xor    r15d,r15d
  4066d3:	jmp    0x4065b7
  4066d8:	mov    ebx,eax
  4066da:	mov    rcx,r14
  4066dd:	xor    edi,edi
  4066df:	sub    ebx,esi
  4066e1:	mov    edx,ebx
  4066e3:	call   0x407d40
  4066e8:	test   eax,eax
  4066ea:	je     0x406727
  4066ec:	lea    ecx,[rbx-0x1]
  4066ef:	mov    r8d,0x1
  4066f5:	mov    dil,0x1
  4066f8:	mov    eax,ecx
  4066fa:	shl    r8d,cl
  4066fd:	sar    eax,0x5
  406700:	cdqe   
  406702:	test   DWORD PTR [r15+rax*4],r8d
  406706:	je     0x406727
  406708:	test   ecx,ecx
  40670a:	jle    0x40691f
  406710:	mov    edx,ecx
  406712:	mov    rcx,r14
  406715:	call   0x407d40
  40671a:	test   eax,eax
  40671c:	je     0x40691f
  406722:	mov    edi,0x3
  406727:	mov    edx,ebx
  406729:	mov    rcx,r14
  40672c:	add    r12d,ebx
  40672f:	call   0x4069f0
  406734:	jmp    0x40643d
  406739:	mov    ebx,0x1
  40673e:	test   edi,edi
  406740:	je     0x406764
  406742:	mov    eax,DWORD PTR [r13+0xc]
  406746:	cmp    eax,0x2
  406749:	je     0x4067f1
  40674f:	cmp    eax,0x3
  406752:	je     0x406804
  406758:	cmp    eax,0x1
  40675b:	je     0x406929
  406761:	or     ebx,0x10
  406764:	mov    rax,QWORD PTR [rsp+0x88]
  40676c:	mov    QWORD PTR [rax],r14
  40676f:	mov    rax,QWORD PTR [rsp+0x80]
  406777:	mov    DWORD PTR [rax],r12d
  40677a:	mov    eax,ebx
  40677c:	jmp    0x406552
  406781:	mov    r11d,DWORD PTR [rsp+0x90]
  406789:	test   r11d,r11d
  40678c:	jne    0x406488
  406792:	jmp    0x406603
  406797:	test   edi,edi
  406799:	lea    ebp,[rbx-0x1]
  40679c:	jne    0x406915
  4067a2:	test   ebp,ebp
  4067a4:	jle    0x4067b2
  4067a6:	mov    edx,ebp
  4067a8:	mov    rcx,r14
  4067ab:	call   0x407d40
  4067b0:	mov    edi,eax
  4067b2:	mov    eax,ebp
  4067b4:	mov    ecx,ebp
  4067b6:	mov    edx,edi
  4067b8:	sar    eax,0x5
  4067bb:	mov    r8d,0x1
  4067c1:	or     edx,0x2
  4067c4:	cdqe   
  4067c6:	shl    r8d,cl
  4067c9:	mov    rcx,r14
  4067cc:	test   DWORD PTR [r15+rax*4],r8d
  4067d0:	cmovne edi,edx
  4067d3:	mov    edx,ebx
  4067d5:	sub    esi,ebx
  4067d7:	call   0x4069f0
  4067dc:	mov    ebx,0x2
  4067e1:	mov    r12d,DWORD PTR [r13+0x4]
  4067e5:	jmp    0x40673e
  4067ea:	xor    eax,eax
  4067ec:	jmp    0x4061d9
  4067f1:	mov    eax,0x1
  4067f6:	sub    eax,DWORD PTR [rsp+0x90]
  4067fd:	mov    DWORD PTR [rsp+0x90],eax
  406804:	mov    eax,DWORD PTR [rsp+0x90]
  40680b:	test   eax,eax
  40680d:	je     0x406761
  406813:	mov    rcx,r14
  406816:	movsxd rdi,DWORD PTR [r14+0x14]
  40681a:	call   0x403b30
  40681f:	cmp    ebx,0x2
  406822:	mov    r14,rax
  406825:	lea    r8,[rax+0x18]
  406829:	je     0x4069af
  40682f:	cmp    edi,DWORD PTR [rax+0x14]
  406832:	jl     0x40684d
  406834:	and    esi,0x1f
  406837:	je     0x406868
  406839:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  40683f:	mov    edx,0x20
  406844:	sub    edx,esi
  406846:	xor    eax,0x1f
  406849:	cmp    edx,eax
  40684b:	jle    0x406868
  40684d:	mov    edx,0x1
  406852:	mov    rcx,r14
  406855:	add    r12d,0x1
  406859:	call   0x4069f0
  40685e:	cmp    r12d,DWORD PTR [r13+0x8]
  406862:	jg     0x406650
  406868:	mov    ebx,0x21
  40686d:	jmp    0x406764
  406872:	mov    r8d,DWORD PTR [rsp+0x90]
  40687a:	test   r8d,r8d
  40687d:	jne    0x406658
  406883:	jmp    0x40625a
  406888:	mov    r9d,DWORD PTR [rsp+0x90]
  406890:	test   r9d,r9d
  406893:	je     0x406658
  406899:	jmp    0x40625a
  40689e:	xor    edx,edx
  4068a0:	jmp    0x4063ae
  4068a5:	mov    rax,r15
  4068a8:	mov    edx,0x20
  4068ad:	xor    r9d,r9d
  4068b0:	jmp    0x40640f
  4068b5:	movzx  edx,BYTE PTR [rsi+0x1]
  4068b9:	test   dl,dl
  4068bb:	je     0x4069e4
  4068c1:	cmp    dl,BYTE PTR [rax+0x1]
  4068c4:	jne    0x406944
  4068c6:	mov    r12d,0x2
  4068cc:	jmp    0x4068db
  4068ce:	xchg   ax,ax
  4068d0:	add    r12,0x1
  4068d4:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  4068d9:	jne    0x406944
  4068db:	movzx  edx,BYTE PTR [rsi+r12*1]
  4068e0:	test   dl,dl
  4068e2:	jne    0x4068d0
  4068e4:	add    r12,rax
  4068e7:	movzx  eax,BYTE PTR [r12]
  4068ec:	cmp    BYTE PTR [rdi+rax*1],0x0
  4068f0:	mov    rdx,rax
  4068f3:	mov    rax,r12
  4068f6:	je     0x406332
  4068fc:	nop    DWORD PTR [rax+0x0]
  406900:	add    rax,0x1
  406904:	movzx  ecx,BYTE PTR [rax]
  406907:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40690b:	mov    rdx,rcx
  40690e:	jne    0x406900
  406910:	jmp    0x406332
  406915:	mov    edi,0x1
  40691a:	jmp    0x4067b2
  40691f:	mov    edi,0x2
  406924:	jmp    0x406727
  406929:	test   dil,0x2
  40692d:	je     0x406761
  406933:	or     edi,DWORD PTR [r15]
  406936:	and    edi,0x1
  406939:	jne    0x406813
  40693f:	jmp    0x406761
  406944:	movzx  edx,BYTE PTR [rax]
  406947:	xor    r12d,r12d
  40694a:	jmp    0x406339
  40694f:	mov    edx,DWORD PTR [rsp+0x90]
  406956:	test   edx,edx
  406958:	je     0x406480
  40695e:	mov    DWORD PTR [r14+0x14],0x1
  406966:	mov    DWORD PTR [r15],0x1
  40696d:	jmp    0x40661f
  406972:	mov    ecx,DWORD PTR [rsp+0x90]
  406979:	test   ecx,ecx
  40697b:	je     0x40695e
  40697d:	jmp    0x406480
  406982:	cmp    ebx,esi
  406984:	jne    0x406480
  40698a:	cmp    esi,0x1
  40698d:	jle    0x40695e
  40698f:	lea    edx,[rsi-0x1]
  406992:	mov    rcx,r14
  406995:	call   0x407d40
  40699a:	test   eax,eax
  40699c:	je     0x406480
  4069a2:	mov    eax,DWORD PTR [r13+0x4]
  4069a6:	jmp    0x40695e
  4069a8:	xor    edx,edx
  4069aa:	jmp    0x4062c1
  4069af:	mov    eax,DWORD PTR [r13+0x0]
  4069b3:	mov    bl,0x22
  4069b5:	sub    eax,0x1
  4069b8:	cmp    eax,esi
  4069ba:	jne    0x406764
  4069c0:	mov    edx,esi
  4069c2:	mov    eax,0x1
  4069c7:	mov    ecx,esi
  4069c9:	sar    edx,0x5
  4069cc:	shl    eax,cl
  4069ce:	movsxd rdx,edx
  4069d1:	and    eax,DWORD PTR [r8+rdx*4]
  4069d5:	cmp    eax,0x1
  4069d8:	sbb    ebx,ebx
  4069da:	not    ebx
  4069dc:	add    ebx,0x22
  4069df:	jmp    0x406764
  4069e4:	mov    r12d,0x1
  4069ea:	jmp    0x4068e4
  4069ef:	nop
  4069f0:	push   rbp
  4069f1:	push   rdi
  4069f2:	push   rsi
  4069f3:	push   rbx
  4069f4:	mov    rsi,rcx
  4069f7:	lea    r10,[rcx+0x18]
  4069fb:	movsxd rcx,DWORD PTR [rcx+0x14]
  4069ff:	mov    eax,edx
  406a01:	sar    eax,0x5
  406a04:	cmp    eax,ecx
  406a06:	jge    0x406a90
  406a0c:	cdqe   
  406a0e:	and    edx,0x1f
  406a11:	lea    rbx,[r10+rcx*4]
  406a15:	lea    rdi,[r10+rax*4]
  406a19:	je     0x406aa3
  406a1f:	mov    r9d,DWORD PTR [rdi]
  406a22:	lea    r8,[rdi+0x4]
  406a26:	mov    ebp,0x20
  406a2b:	mov    ecx,edx
  406a2d:	sub    ebp,edx
  406a2f:	shr    r9d,cl
  406a32:	cmp    rbx,r8
  406a35:	jbe    0x406ae8
  406a3b:	mov    r11,r10
  406a3e:	xchg   ax,ax
  406a40:	mov    eax,DWORD PTR [r8]
  406a43:	mov    ecx,ebp
  406a45:	add    r11,0x4
  406a49:	add    r8,0x4
  406a4d:	shl    eax,cl
  406a4f:	mov    ecx,edx
  406a51:	or     eax,r9d
  406a54:	mov    DWORD PTR [r11-0x4],eax
  406a58:	mov    r9d,DWORD PTR [r8-0x4]
  406a5c:	shr    r9d,cl
  406a5f:	cmp    rbx,r8
  406a62:	ja     0x406a40
  406a64:	sub    rbx,rdi
  406a67:	lea    rax,[rbx-0x5]
  406a6b:	shr    rax,0x2
  406a6f:	lea    rax,[r10+rax*4+0x4]
  406a74:	test   r9d,r9d
  406a77:	mov    DWORD PTR [rax],r9d
  406a7a:	je     0x406a80
  406a7c:	add    rax,0x4
  406a80:	sub    rax,r10
  406a83:	shr    rax,0x2
  406a87:	jmp    0x406adc
  406a89:	nop    DWORD PTR [rax+0x0]
  406a90:	mov    DWORD PTR [rsi+0x14],0x0
  406a97:	mov    DWORD PTR [rsi+0x18],0x0
  406a9e:	pop    rbx
  406a9f:	pop    rsi
  406aa0:	pop    rdi
  406aa1:	pop    rbp
  406aa2:	ret    
  406aa3:	cmp    rbx,rdi
  406aa6:	mov    rdx,r10
  406aa9:	mov    rax,rdi
  406aac:	jbe    0x406a90
  406aae:	xchg   ax,ax
  406ab0:	add    rax,0x4
  406ab4:	mov    r8d,DWORD PTR [rax-0x4]
  406ab8:	add    rdx,0x4
  406abc:	cmp    rbx,rax
  406abf:	mov    DWORD PTR [rdx-0x4],r8d
  406ac3:	ja     0x406ab0
  406ac5:	not    rdi
  406ac8:	lea    rax,[rdi+rbx*1]
  406acc:	shr    rax,0x2
  406ad0:	lea    rax,[rax*4+0x4]
  406ad8:	shr    rax,0x2
  406adc:	test   eax,eax
  406ade:	mov    DWORD PTR [rsi+0x14],eax
  406ae1:	je     0x406a97
  406ae3:	pop    rbx
  406ae4:	pop    rsi
  406ae5:	pop    rdi
  406ae6:	pop    rbp
  406ae7:	ret    
  406ae8:	mov    rax,r10
  406aeb:	jmp    0x406a74
  406aed:	nop    DWORD PTR [rax]
  406af0:	movsxd rax,DWORD PTR [rcx+0x14]
  406af4:	lea    rdx,[rcx+0x18]
  406af8:	lea    r8,[rdx+rax*4]
  406afc:	cmp    rdx,r8
  406aff:	jae    0x406b2b
  406b01:	mov    ecx,DWORD PTR [rcx+0x18]
  406b04:	xor    eax,eax
  406b06:	test   ecx,ecx
  406b08:	je     0x406b16
  406b0a:	jmp    0x406b24
  406b0c:	nop    DWORD PTR [rax+0x0]
  406b10:	mov    ecx,DWORD PTR [rdx]
  406b12:	test   ecx,ecx
  406b14:	jne    0x406b24
  406b16:	add    rdx,0x4
  406b1a:	add    eax,0x20
  406b1d:	cmp    r8,rdx
  406b20:	ja     0x406b10
  406b22:	repz ret 
  406b24:	tzcnt  ecx,ecx
  406b28:	add    eax,ecx
  406b2a:	ret    
  406b2b:	xor    eax,eax
  406b2d:	ret    
  406b2e:	nop
  406b2f:	nop
  406b30:	lea    r8,[rip+0x5fb7]        # 0x40caee
  406b37:	lea    rdx,[rip+0xa982]        # 0x4114c0
  406b3e:	mov    ecx,0x10
  406b43:	mov    eax,0x30
  406b48:	nop    DWORD PTR [rax+rax*1+0x0]
  406b50:	mov    BYTE PTR [rdx+rax*1],cl
  406b53:	movzx  eax,BYTE PTR [r8+0x1]
  406b58:	add    ecx,0x1
  406b5b:	add    r8,0x1
  406b5f:	test   al,al
  406b61:	jne    0x406b50
  406b63:	lea    r8,[rip+0x5f7d]        # 0x40cae7
  406b6a:	mov    ecx,0x1a
  406b6f:	mov    eax,0x61
  406b74:	mov    BYTE PTR [rdx+rax*1],cl
  406b77:	movzx  eax,BYTE PTR [r8+0x1]
  406b7c:	add    ecx,0x1
  406b7f:	add    r8,0x1
  406b83:	test   al,al
  406b85:	jne    0x406b74
  406b87:	lea    r8,[rip+0x5f52]        # 0x40cae0
  406b8e:	mov    ecx,0x1a
  406b93:	mov    eax,0x41
  406b98:	nop    DWORD PTR [rax+rax*1+0x0]
  406ba0:	mov    BYTE PTR [rdx+rax*1],cl
  406ba3:	movzx  eax,BYTE PTR [r8+0x1]
  406ba8:	add    ecx,0x1
  406bab:	add    r8,0x1
  406baf:	test   al,al
  406bb1:	jne    0x406ba0
  406bb3:	ret    
  406bb4:	nop
  406bb5:	nop
  406bb6:	nop
  406bb7:	nop
  406bb8:	nop
  406bb9:	nop
  406bba:	nop
  406bbb:	nop
  406bbc:	nop
  406bbd:	nop
  406bbe:	nop
  406bbf:	nop
  406bc0:	push   r15
  406bc2:	push   r14
  406bc4:	push   r13
  406bc6:	push   r12
  406bc8:	push   rbp
  406bc9:	push   rdi
  406bca:	push   rsi
  406bcb:	push   rbx
  406bcc:	sub    rsp,0x48
  406bd0:	mov    r14,QWORD PTR [rip+0x6119]        # 0x40ccf0
  406bd7:	mov    QWORD PTR [rsp+0x90],rcx
  406bdf:	cmp    BYTE PTR [r14+0x30],0x0
  406be4:	je     0x406eb6
  406bea:	mov    eax,DWORD PTR [rdx]
  406bec:	mov    edx,eax
  406bee:	sar    edx,0x5
  406bf1:	and    eax,0x1f
  406bf4:	movsxd rdx,edx
  406bf7:	mov    DWORD PTR [rsp+0x3c],eax
  406bfb:	mov    rax,QWORD PTR [rsp+0x90]
  406c03:	lea    rdi,[r8+rdx*4]
  406c07:	lea    rdx,[rdi+0x4]
  406c0b:	mov    rax,QWORD PTR [rax]
  406c0e:	cmove  rdx,rdi
  406c12:	mov    QWORD PTR [rsp+0x30],rdx
  406c17:	lea    rsi,[rdx-0x4]
  406c1b:	mov    DWORD PTR [rdx-0x4],0x0
  406c22:	jmp    0x406c28
  406c24:	add    rax,0x1
  406c28:	movzx  edx,BYTE PTR [rax+0x1]
  406c2c:	mov    ecx,edx
  406c2e:	sub    edx,0x1
  406c31:	cmp    edx,0x1f
  406c34:	jbe    0x406c24
  406c36:	cmp    cl,0x30
  406c39:	je     0x406ed4
  406c3f:	movzx  edx,BYTE PTR [rax+0x1]
  406c43:	xor    r9d,r9d
  406c46:	xor    r15d,r15d
  406c49:	xor    r12d,r12d
  406c4c:	test   edx,edx
  406c4e:	mov    rbp,rsi
  406c51:	mov    r11,rsi
  406c54:	lea    rbx,[rax+0x1]
  406c58:	je     0x406d00
  406c5e:	xchg   ax,ax
  406c60:	mov    ecx,edx
  406c62:	movzx  ecx,BYTE PTR [r14+rcx*1]
  406c67:	test   cl,cl
  406c69:	jne    0x406dd4
  406c6f:	cmp    edx,0x20
  406c72:	ja     0x406e85
  406c78:	cmp    r12d,r15d
  406c7b:	jle    0x406e15
  406c81:	cmp    r9d,0x7
  406c85:	jg     0x406cda
  406c87:	cmp    r11,rbp
  406c8a:	jae    0x406cda
  406c8c:	mov    edi,0x8
  406c91:	mov    edx,DWORD PTR [r11]
  406c94:	mov    r13d,0x20
  406c9a:	sub    edi,r9d
  406c9d:	mov    QWORD PTR [rsp+0x28],rax
  406ca2:	mov    r9,r11
  406ca5:	shl    edi,0x2
  406ca8:	sub    r13d,edi
  406cab:	nop    DWORD PTR [rax+rax*1+0x0]
  406cb0:	mov    r10d,DWORD PTR [r9+0x4]
  406cb4:	mov    ecx,r13d
  406cb7:	add    r9,0x4
  406cbb:	mov    eax,r10d
  406cbe:	shl    eax,cl
  406cc0:	mov    ecx,edi
  406cc2:	or     edx,eax
  406cc4:	mov    DWORD PTR [r9-0x4],edx
  406cc8:	mov    edx,r10d
  406ccb:	shr    edx,cl
  406ccd:	mov    DWORD PTR [r9],edx
  406cd0:	cmp    rbp,r9
  406cd3:	ja     0x406cb0
  406cd5:	mov    rax,QWORD PTR [rsp+0x28]
  406cda:	cmp    r11,r8
  406cdd:	ja     0x406e00
  406ce3:	mov    rax,rbx
  406ce6:	mov    r9d,0x8
  406cec:	nop    DWORD PTR [rax+0x0]
  406cf0:	movzx  edx,BYTE PTR [rax+0x1]
  406cf4:	lea    rbx,[rax+0x1]
  406cf8:	test   edx,edx
  406cfa:	jne    0x406c60
  406d00:	test   r12d,r12d
  406d03:	mov    eax,0x4
  406d08:	je     0x406dc3
  406d0e:	mov    r10,r11
  406d11:	cmp    r9d,0x7
  406d15:	jg     0x406d63
  406d17:	cmp    rbp,r11
  406d1a:	jbe    0x406d63
  406d1c:	mov    edi,0x8
  406d21:	mov    eax,DWORD PTR [r11]
  406d24:	mov    r12d,0x20
  406d2a:	sub    edi,r9d
  406d2d:	mov    r9,r11
  406d30:	shl    edi,0x2
  406d33:	sub    r12d,edi
  406d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d40:	mov    ebx,DWORD PTR [r9+0x4]
  406d44:	mov    ecx,r12d
  406d47:	add    r9,0x4
  406d4b:	mov    edx,ebx
  406d4d:	shl    edx,cl
  406d4f:	mov    ecx,edi
  406d51:	or     eax,edx
  406d53:	mov    DWORD PTR [r9-0x4],eax
  406d57:	mov    eax,ebx
  406d59:	shr    eax,cl
  406d5b:	mov    DWORD PTR [r9],eax
  406d5e:	cmp    rbp,r9
  406d61:	ja     0x406d40
  406d63:	cmp    r8,r11
  406d66:	jae    0x406f04
  406d6c:	mov    rax,r8
  406d6f:	nop
  406d70:	add    r10,0x4
  406d74:	mov    edx,DWORD PTR [r10-0x4]
  406d78:	add    rax,0x4
  406d7c:	cmp    rsi,r10
  406d7f:	mov    DWORD PTR [rax-0x4],edx
  406d82:	jae    0x406d70
  406d84:	add    rax,0x4
  406d88:	mov    DWORD PTR [rax-0x4],0x0
  406d8f:	cmp    rsi,rax
  406d92:	jae    0x406d84
  406d94:	mov    rax,QWORD PTR [rsp+0x30]
  406d99:	mov    eax,DWORD PTR [rax-0x4]
  406d9c:	test   eax,eax
  406d9e:	je     0x406db3
  406da0:	jmp    0x406efa
  406da5:	sub    rsi,0x4
  406da9:	mov    eax,DWORD PTR [rsi]
  406dab:	test   eax,eax
  406dad:	jne    0x406efa
  406db3:	cmp    r8,rsi
  406db6:	jne    0x406da5
  406db8:	mov    DWORD PTR [rsi],0x1
  406dbe:	mov    eax,0x5
  406dc3:	add    rsp,0x48
  406dc7:	pop    rbx
  406dc8:	pop    rsi
  406dc9:	pop    rdi
  406dca:	pop    rbp
  406dcb:	pop    r12
  406dcd:	pop    r13
  406dcf:	pop    r14
  406dd1:	pop    r15
  406dd3:	ret    
  406dd4:	add    r9d,0x1
  406dd8:	add    r12d,0x1
  406ddc:	cmp    r9d,0x8
  406de0:	jg     0x406e60
  406de2:	mov    eax,DWORD PTR [r11]
  406de5:	shl    eax,0x4
  406de8:	and    ecx,0xf
  406deb:	or     ecx,eax
  406ded:	mov    rax,rbx
  406df0:	mov    DWORD PTR [r11],ecx
  406df3:	jmp    0x406cf0
  406df8:	nop    DWORD PTR [rax+rax*1+0x0]
  406e00:	lea    rbp,[r11-0x4]
  406e04:	mov    DWORD PTR [r11-0x4],0x0
  406e0c:	mov    r15d,r12d
  406e0f:	xor    r9d,r9d
  406e12:	mov    r11,rbp
  406e15:	movzx  edx,BYTE PTR [rax+0x2]
  406e19:	mov    rax,rbx
  406e1c:	cmp    dl,0x20
  406e1f:	ja     0x406e2e
  406e21:	add    rax,0x1
  406e25:	movzx  edx,BYTE PTR [rax+0x1]
  406e29:	cmp    dl,0x20
  406e2c:	jbe    0x406e21
  406e2e:	cmp    dl,0x30
  406e31:	jne    0x406cf0
  406e37:	movzx  edx,BYTE PTR [rax+0x2]
  406e3b:	and    edx,0xffffffdf
  406e3e:	cmp    dl,0x58
  406e41:	jne    0x406cf0
  406e47:	cmp    BYTE PTR [rax+0x3],0x21
  406e4b:	lea    rdx,[rax+0x2]
  406e4f:	cmovae rax,rdx
  406e53:	jmp    0x406cf0
  406e58:	nop    DWORD PTR [rax+rax*1+0x0]
  406e60:	cmp    r11,r8
  406e63:	mov    rax,rbx
  406e66:	jbe    0x406cf0
  406e6c:	mov    DWORD PTR [r11-0x4],0x0
  406e74:	xor    eax,eax
  406e76:	sub    r11,0x4
  406e7a:	mov    r9d,0x1
  406e80:	jmp    0x406de8
  406e85:	cmp    edx,0x29
  406e88:	mov    rcx,rbx
  406e8b:	sete   dl
  406e8e:	test   r12d,r12d
  406e91:	je     0x406f30
  406e97:	test   dl,dl
  406e99:	je     0x406f34
  406e9f:	mov    rbx,QWORD PTR [rsp+0x90]
  406ea7:	add    rax,0x2
  406eab:	mov    r10,r11
  406eae:	mov    QWORD PTR [rbx],rax
  406eb1:	jmp    0x406d11
  406eb6:	mov    QWORD PTR [rsp+0x30],r8
  406ebb:	mov    QWORD PTR [rsp+0x28],rdx
  406ec0:	call   0x406b30
  406ec5:	mov    r8,QWORD PTR [rsp+0x30]
  406eca:	mov    rdx,QWORD PTR [rsp+0x28]
  406ecf:	jmp    0x406bea
  406ed4:	movzx  edx,BYTE PTR [rax+0x2]
  406ed8:	and    edx,0xffffffdf
  406edb:	cmp    dl,0x58
  406ede:	jne    0x406c3f
  406ee4:	movzx  edx,BYTE PTR [rax+0x3]
  406ee8:	cmp    dl,0x20
  406eeb:	jbe    0x406c3f
  406ef1:	add    rax,0x2
  406ef5:	jmp    0x406c43
  406efa:	mov    eax,0x5
  406eff:	jmp    0x406dc3
  406f04:	mov    edx,DWORD PTR [rsp+0x3c]
  406f08:	test   edx,edx
  406f0a:	je     0x406d94
  406f10:	mov    ecx,0x20
  406f15:	sub    ecx,DWORD PTR [rsp+0x3c]
  406f19:	mov    rbx,QWORD PTR [rsp+0x30]
  406f1e:	mov    eax,0xffffffff
  406f23:	shr    eax,cl
  406f25:	and    eax,DWORD PTR [rbx-0x4]
  406f28:	mov    DWORD PTR [rbx-0x4],eax
  406f2b:	jmp    0x406d9c
  406f30:	test   dl,dl
  406f32:	jne    0x406f52
  406f34:	movsx  eax,BYTE PTR [rbx+0x1]
  406f38:	lea    rcx,[rbx+0x1]
  406f3c:	test   eax,eax
  406f3e:	jne    0x406f4d
  406f40:	jmp    0x406f6b
  406f42:	add    rcx,0x1
  406f46:	movsx  eax,BYTE PTR [rcx]
  406f49:	test   eax,eax
  406f4b:	je     0x406f6b
  406f4d:	cmp    eax,0x29
  406f50:	jne    0x406f42
  406f52:	mov    rax,QWORD PTR [rsp+0x90]
  406f5a:	add    rcx,0x1
  406f5e:	mov    QWORD PTR [rax],rcx
  406f61:	mov    eax,0x4
  406f66:	jmp    0x406dc3
  406f6b:	mov    al,0x4
  406f6d:	jmp    0x406dc3
  406f72:	nop
  406f73:	nop
  406f74:	nop
  406f75:	nop
  406f76:	nop
  406f77:	nop
  406f78:	nop
  406f79:	nop
  406f7a:	nop
  406f7b:	nop
  406f7c:	nop
  406f7d:	nop
  406f7e:	nop
  406f7f:	nop
  406f80:	push   rsi
  406f81:	push   rbx
  406f82:	sub    rsp,0x28
  406f86:	mov    eax,DWORD PTR [rip+0xa404]        # 0x411390
  406f8c:	movsxd rsi,ecx
  406f8f:	cmp    eax,0x2
  406f92:	je     0x406ffd
  406f94:	test   eax,eax
  406f96:	je     0x406fc2
  406f98:	cmp    eax,0x1
  406f9b:	jne    0x406fbb
  406f9d:	mov    rbx,QWORD PTR [rip+0xb330]        # 0x4122d4
  406fa4:	mov    ecx,0x1
  406fa9:	call   rbx
  406fab:	mov    eax,DWORD PTR [rip+0xa3df]        # 0x411390
  406fb1:	cmp    eax,0x1
  406fb4:	je     0x406fa4
  406fb6:	cmp    eax,0x2
  406fb9:	je     0x406ffd
  406fbb:	add    rsp,0x28
  406fbf:	pop    rbx
  406fc0:	pop    rsi
  406fc1:	ret    
  406fc2:	mov    al,0x1
  406fc4:	xchg   DWORD PTR [rip+0xa3c6],eax        # 0x411390
  406fca:	test   eax,eax
  406fcc:	jne    0x407020
  406fce:	lea    rcx,[rip+0xa3eb]        # 0x4113c0
  406fd5:	mov    rbx,QWORD PTR [rip+0xb2b8]        # 0x412294
  406fdc:	call   rbx
  406fde:	lea    rcx,[rip+0xa403]        # 0x4113e8
  406fe5:	call   rbx
  406fe7:	lea    rcx,[rip+0x62]        # 0x407050
  406fee:	call   0x4018c0
  406ff3:	mov    DWORD PTR [rip+0xa393],0x2        # 0x411390
  406ffd:	lea    rdx,[rsi+rsi*4]
  407001:	lea    rax,[rip+0xa3b8]        # 0x4113c0
  407008:	lea    rcx,[rax+rdx*8]
  40700c:	mov    rax,QWORD PTR [rip+0xb241]        # 0x412254
  407013:	add    rsp,0x28
  407017:	pop    rbx
  407018:	pop    rsi
  407019:	rex.W jmp rax
  40701c:	nop    DWORD PTR [rax+0x0]
  407020:	cmp    eax,0x2
  407023:	je     0x407040
  407025:	mov    eax,DWORD PTR [rip+0xa365]        # 0x411390
  40702b:	cmp    eax,0x1
  40702e:	je     0x406f9d
  407034:	jmp    0x406fb6
  407036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407040:	mov    DWORD PTR [rip+0xa346],0x2        # 0x411390
  40704a:	jmp    0x406ffd
  40704c:	nop    DWORD PTR [rax+0x0]
  407050:	push   rbx
  407051:	sub    rsp,0x20
  407055:	mov    eax,0x3
  40705a:	xchg   DWORD PTR [rip+0xa330],eax        # 0x411390
  407060:	cmp    eax,0x2
  407063:	je     0x407070
  407065:	add    rsp,0x20
  407069:	pop    rbx
  40706a:	ret    
  40706b:	nop    DWORD PTR [rax+rax*1+0x0]
  407070:	mov    rbx,QWORD PTR [rip+0xb1d5]        # 0x41224c
  407077:	lea    rcx,[rip+0xa342]        # 0x4113c0
  40707e:	call   rbx
  407080:	lea    rcx,[rip+0xa361]        # 0x4113e8
  407087:	mov    rax,rbx
  40708a:	add    rsp,0x20
  40708e:	pop    rbx
  40708f:	rex.W jmp rax
  407092:	nop    DWORD PTR [rax+0x0]
  407096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070a0:	push   rdi
  4070a1:	push   rsi
  4070a2:	push   rbx
  4070a3:	sub    rsp,0x20
  4070a7:	mov    ebx,ecx
  4070a9:	xor    ecx,ecx
  4070ab:	call   0x406f80
  4070b0:	cmp    ebx,0x9
  4070b3:	jg     0x4070f0
  4070b5:	lea    rdx,[rip+0xa284]        # 0x411340
  4070bc:	movsxd rcx,ebx
  4070bf:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4070c3:	test   rdi,rdi
  4070c6:	je     0x407150
  4070cc:	cmp    DWORD PTR [rip+0xa2bd],0x2        # 0x411390
  4070d3:	mov    r8,QWORD PTR [rdi]
  4070d6:	mov    QWORD PTR [rdx+rcx*8],r8
  4070da:	jne    0x407136
  4070dc:	lea    rcx,[rip+0xa2dd]        # 0x4113c0
  4070e3:	call   QWORD PTR [rip+0xb1b3]        # 0x41229c
  4070e9:	jmp    0x407136
  4070eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4070f0:	mov    eax,0x1
  4070f5:	mov    ecx,ebx
  4070f7:	shl    eax,cl
  4070f9:	mov    esi,eax
  4070fb:	lea    eax,[rax-0x1]
  4070fe:	cdqe   
  407100:	lea    rdx,[rax*4+0x27]
  407108:	shr    rdx,0x3
  40710c:	mov    edx,edx
  40710e:	lea    rcx,[rdx*8+0x0]
  407116:	call   0x407e28
  40711b:	test   rax,rax
  40711e:	mov    rdi,rax
  407121:	je     0x4071aa
  407127:	cmp    DWORD PTR [rip+0xa262],0x2        # 0x411390
  40712e:	mov    DWORD PTR [rdi+0x8],ebx
  407131:	mov    DWORD PTR [rdi+0xc],esi
  407134:	je     0x4070dc
  407136:	mov    DWORD PTR [rdi+0x14],0x0
  40713d:	mov    DWORD PTR [rdi+0x10],0x0
  407144:	mov    rax,rdi
  407147:	add    rsp,0x20
  40714b:	pop    rbx
  40714c:	pop    rsi
  40714d:	pop    rdi
  40714e:	ret    
  40714f:	nop
  407150:	mov    ecx,ebx
  407152:	mov    eax,0x1
  407157:	mov    rdi,QWORD PTR [rip+0x4552]        # 0x40b6b0
  40715e:	shl    eax,cl
  407160:	lea    rcx,[rip+0x98d9]        # 0x410a40
  407167:	lea    edx,[rax-0x1]
  40716a:	mov    esi,eax
  40716c:	mov    rax,rdi
  40716f:	movsxd rdx,edx
  407172:	sub    rax,rcx
  407175:	lea    rdx,[rdx*4+0x27]
  40717d:	mov    rcx,rax
  407180:	sar    rcx,0x3
  407184:	shr    rdx,0x3
  407188:	mov    edx,edx
  40718a:	add    rcx,rdx
  40718d:	cmp    rcx,0x120
  407194:	ja     0x40710e
  40719a:	lea    rdx,[rdi+rdx*8]
  40719e:	mov    QWORD PTR [rip+0x450b],rdx        # 0x40b6b0
  4071a5:	jmp    0x407127
  4071aa:	xor    eax,eax
  4071ac:	jmp    0x407147
  4071ae:	xchg   ax,ax
  4071b0:	push   rbx
  4071b1:	sub    rsp,0x20
  4071b5:	test   rcx,rcx
  4071b8:	je     0x4071e9
  4071ba:	cmp    DWORD PTR [rcx+0x8],0x9
  4071be:	jg     0x4071f0
  4071c0:	mov    rbx,rcx
  4071c3:	xor    ecx,ecx
  4071c5:	call   0x406f80
  4071ca:	movsxd rdx,DWORD PTR [rbx+0x8]
  4071ce:	lea    rax,[rip+0xa16b]        # 0x411340
  4071d5:	cmp    DWORD PTR [rip+0xa1b4],0x2        # 0x411390
  4071dc:	mov    rcx,QWORD PTR [rax+rdx*8]
  4071e0:	mov    QWORD PTR [rax+rdx*8],rbx
  4071e4:	mov    QWORD PTR [rbx],rcx
  4071e7:	je     0x407200
  4071e9:	add    rsp,0x20
  4071ed:	pop    rbx
  4071ee:	ret    
  4071ef:	nop
  4071f0:	add    rsp,0x20
  4071f4:	pop    rbx
  4071f5:	jmp    0x407e40
  4071fa:	nop    WORD PTR [rax+rax*1+0x0]
  407200:	mov    rax,QWORD PTR [rip+0xb095]        # 0x41229c
  407207:	lea    rcx,[rip+0xa1b2]        # 0x4113c0
  40720e:	add    rsp,0x20
  407212:	pop    rbx
  407213:	rex.W jmp rax
  407216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407220:	push   rbp
  407221:	push   rdi
  407222:	push   rsi
  407223:	push   rbx
  407224:	sub    rsp,0x28
  407228:	mov    esi,DWORD PTR [rcx+0x14]
  40722b:	xor    r9d,r9d
  40722e:	lea    r10,[rcx+0x18]
  407232:	mov    rdi,rcx
  407235:	movsxd rbx,r8d
  407238:	movsxd rdx,edx
  40723b:	nop    DWORD PTR [rax+rax*1+0x0]
  407240:	mov    eax,DWORD PTR [r10+r9*4]
  407244:	imul   rax,rdx
  407248:	add    rax,rbx
  40724b:	mov    rbx,rax
  40724e:	mov    DWORD PTR [r10+r9*4],eax
  407252:	add    r9,0x1
  407256:	shr    rbx,0x20
  40725a:	cmp    esi,r9d
  40725d:	jg     0x407240
  40725f:	test   rbx,rbx
  407262:	mov    rax,rdi
  407265:	je     0x40727c
  407267:	cmp    esi,DWORD PTR [rdi+0xc]
  40726a:	jge    0x407285
  40726c:	movsxd rax,esi
  40726f:	add    esi,0x1
  407272:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  407276:	mov    DWORD PTR [rdi+0x14],esi
  407279:	mov    rax,rdi
  40727c:	add    rsp,0x28
  407280:	pop    rbx
  407281:	pop    rsi
  407282:	pop    rdi
  407283:	pop    rbp
  407284:	ret    
  407285:	mov    eax,DWORD PTR [rdi+0x8]
  407288:	lea    ecx,[rax+0x1]
  40728b:	call   0x4070a0
  407290:	test   rax,rax
  407293:	mov    rbp,rax
  407296:	je     0x4072ce
  407298:	lea    rcx,[rax+0x10]
  40729c:	movsxd rax,DWORD PTR [rdi+0x14]
  4072a0:	lea    rdx,[rdi+0x10]
  4072a4:	lea    r8,[rax*4+0x8]
  4072ac:	call   0x407e20
  4072b1:	mov    rcx,rdi
  4072b4:	mov    rdi,rbp
  4072b7:	call   0x4071b0
  4072bc:	movsxd rax,esi
  4072bf:	add    esi,0x1
  4072c2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4072c6:	mov    DWORD PTR [rdi+0x14],esi
  4072c9:	mov    rax,rdi
  4072cc:	jmp    0x40727c
  4072ce:	xor    eax,eax
  4072d0:	jmp    0x40727c
  4072d2:	nop    DWORD PTR [rax+0x0]
  4072d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072e0:	push   rbx
  4072e1:	sub    rsp,0x20
  4072e5:	mov    ebx,ecx
  4072e7:	mov    ecx,0x1
  4072ec:	call   0x4070a0
  4072f1:	test   rax,rax
  4072f4:	je     0x407300
  4072f6:	mov    DWORD PTR [rax+0x18],ebx
  4072f9:	mov    DWORD PTR [rax+0x14],0x1
  407300:	add    rsp,0x20
  407304:	pop    rbx
  407305:	ret    
  407306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407310:	push   r14
  407312:	push   r13
  407314:	push   r12
  407316:	push   rbp
  407317:	push   rdi
  407318:	push   rsi
  407319:	push   rbx
  40731a:	sub    rsp,0x20
  40731e:	movsxd r13,DWORD PTR [rcx+0x14]
  407322:	movsxd rbx,DWORD PTR [rdx+0x14]
  407326:	mov    r12,rcx
  407329:	mov    r14,rdx
  40732c:	cmp    r13d,ebx
  40732f:	jl     0x407431
  407335:	mov    eax,ebx
  407337:	movsxd rbx,r13d
  40733a:	movsxd r13,eax
  40733d:	xor    eax,eax
  40733f:	lea    esi,[rbx+r13*1]
  407343:	cmp    esi,DWORD PTR [r12+0xc]
  407348:	setg   al
  40734b:	add    eax,DWORD PTR [r12+0x8]
  407350:	mov    ecx,eax
  407352:	call   0x4070a0
  407357:	test   rax,rax
  40735a:	je     0x40743c
  407360:	lea    rdi,[rax+0x18]
  407364:	movsxd rdx,esi
  407367:	lea    rbp,[rdi+rdx*4]
  40736b:	mov    r8,rdi
  40736e:	cmp    rdi,rbp
  407371:	jae    0x407383
  407373:	mov    DWORD PTR [r8],0x0
  40737a:	add    r8,0x4
  40737e:	cmp    rbp,r8
  407381:	ja     0x407373
  407383:	lea    rdx,[r14+0x18]
  407387:	add    r12,0x18
  40738b:	lea    rbx,[r12+rbx*4]
  40738f:	lea    r13,[rdx+r13*4]
  407393:	cmp    rdx,r13
  407396:	jae    0x4073f9
  407398:	nop    DWORD PTR [rax+rax*1+0x0]
  4073a0:	add    rdx,0x4
  4073a4:	mov    r11d,DWORD PTR [rdx-0x4]
  4073a8:	test   r11d,r11d
  4073ab:	je     0x4073f0
  4073ad:	mov    r9,rdi
  4073b0:	mov    r8,r12
  4073b3:	xor    r10d,r10d
  4073b6:	jmp    0x4073c3
  4073b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4073c0:	mov    r9,r14
  4073c3:	add    r8,0x4
  4073c7:	mov    ecx,DWORD PTR [r8-0x4]
  4073cb:	mov    r14d,DWORD PTR [r9]
  4073ce:	imul   rcx,r11
  4073d2:	add    rcx,r14
  4073d5:	lea    r14,[r9+0x4]
  4073d9:	add    rcx,r10
  4073dc:	mov    r10,rcx
  4073df:	mov    DWORD PTR [r14-0x4],ecx
  4073e3:	shr    r10,0x20
  4073e7:	cmp    rbx,r8
  4073ea:	ja     0x4073c0
  4073ec:	mov    DWORD PTR [r9+0x4],r10d
  4073f0:	add    rdi,0x4
  4073f4:	cmp    r13,rdx
  4073f7:	ja     0x4073a0
  4073f9:	test   esi,esi
  4073fb:	jle    0x40741f
  4073fd:	mov    r8d,DWORD PTR [rbp-0x4]
  407401:	lea    rdx,[rbp-0x4]
  407405:	test   r8d,r8d
  407408:	je     0x40741a
  40740a:	jmp    0x40741f
  40740c:	nop    DWORD PTR [rax+0x0]
  407410:	sub    rdx,0x4
  407414:	mov    ecx,DWORD PTR [rdx]
  407416:	test   ecx,ecx
  407418:	jne    0x40741f
  40741a:	sub    esi,0x1
  40741d:	jne    0x407410
  40741f:	mov    DWORD PTR [rax+0x14],esi
  407422:	add    rsp,0x20
  407426:	pop    rbx
  407427:	pop    rsi
  407428:	pop    rdi
  407429:	pop    rbp
  40742a:	pop    r12
  40742c:	pop    r13
  40742e:	pop    r14
  407430:	ret    
  407431:	mov    r12,rdx
  407434:	mov    r14,rcx
  407437:	jmp    0x40733d
  40743c:	xor    eax,eax
  40743e:	jmp    0x407422
  407440:	push   rbp
  407441:	push   rdi
  407442:	push   rsi
  407443:	push   rbx
  407444:	sub    rsp,0x28
  407448:	mov    eax,edx
  40744a:	mov    rbp,rcx
  40744d:	mov    ebx,edx
  40744f:	and    eax,0x3
  407452:	jne    0x4074e0
  407458:	sar    ebx,0x2
  40745b:	mov    rax,rbp
  40745e:	test   ebx,ebx
  407460:	je     0x4074ac
  407462:	mov    rdi,QWORD PTR [rip+0x9597]        # 0x410a00
  407469:	test   rdi,rdi
  40746c:	jne    0x407482
  40746e:	jmp    0x40752d
  407473:	sar    ebx,1
  407475:	je     0x4074a9
  407477:	mov    rsi,QWORD PTR [rdi]
  40747a:	test   rsi,rsi
  40747d:	je     0x4074b5
  40747f:	mov    rdi,rsi
  407482:	test   bl,0x1
  407485:	je     0x407473
  407487:	mov    rdx,rdi
  40748a:	mov    rcx,rbp
  40748d:	call   0x407310
  407492:	test   rax,rax
  407495:	mov    rsi,rax
  407498:	je     0x407503
  40749a:	mov    rcx,rbp
  40749d:	mov    rbp,rsi
  4074a0:	call   0x4071b0
  4074a5:	sar    ebx,1
  4074a7:	jne    0x407477
  4074a9:	mov    rax,rbp
  4074ac:	add    rsp,0x28
  4074b0:	pop    rbx
  4074b1:	pop    rsi
  4074b2:	pop    rdi
  4074b3:	pop    rbp
  4074b4:	ret    
  4074b5:	mov    ecx,0x1
  4074ba:	call   0x406f80
  4074bf:	mov    rsi,QWORD PTR [rdi]
  4074c2:	test   rsi,rsi
  4074c5:	je     0x40750e
  4074c7:	cmp    DWORD PTR [rip+0x9ec2],0x2        # 0x411390
  4074ce:	jne    0x40747f
  4074d0:	lea    rcx,[rip+0x9f11]        # 0x4113e8
  4074d7:	call   QWORD PTR [rip+0xadbf]        # 0x41229c
  4074dd:	jmp    0x40747f
  4074df:	nop
  4074e0:	sub    eax,0x1
  4074e3:	lea    rdx,[rip+0x5616]        # 0x40cb00
  4074ea:	xor    r8d,r8d
  4074ed:	cdqe   
  4074ef:	mov    edx,DWORD PTR [rdx+rax*4]
  4074f2:	call   0x407220
  4074f7:	test   rax,rax
  4074fa:	mov    rbp,rax
  4074fd:	jne    0x407458
  407503:	xor    eax,eax
  407505:	add    rsp,0x28
  407509:	pop    rbx
  40750a:	pop    rsi
  40750b:	pop    rdi
  40750c:	pop    rbp
  40750d:	ret    
  40750e:	mov    rdx,rdi
  407511:	mov    rcx,rdi
  407514:	call   0x407310
  407519:	test   rax,rax
  40751c:	mov    rsi,rax
  40751f:	mov    QWORD PTR [rdi],rax
  407522:	je     0x407503
  407524:	mov    QWORD PTR [rax],0x0
  40752b:	jmp    0x4074c7
  40752d:	mov    ecx,0x1
  407532:	call   0x406f80
  407537:	mov    rdi,QWORD PTR [rip+0x94c2]        # 0x410a00
  40753e:	test   rdi,rdi
  407541:	je     0x407562
  407543:	cmp    DWORD PTR [rip+0x9e46],0x2        # 0x411390
  40754a:	jne    0x407482
  407550:	lea    rcx,[rip+0x9e91]        # 0x4113e8
  407557:	call   QWORD PTR [rip+0xad3f]        # 0x41229c
  40755d:	jmp    0x407482
  407562:	mov    ecx,0x1
  407567:	call   0x4070a0
  40756c:	test   rax,rax
  40756f:	mov    rdi,rax
  407572:	je     0x407592
  407574:	mov    DWORD PTR [rax+0x18],0x271
  40757b:	mov    DWORD PTR [rax+0x14],0x1
  407582:	mov    QWORD PTR [rip+0x9477],rax        # 0x410a00
  407589:	mov    QWORD PTR [rax],0x0
  407590:	jmp    0x407543
  407592:	mov    QWORD PTR [rip+0x9463],0x0        # 0x410a00
  40759d:	xor    eax,eax
  40759f:	jmp    0x407505
  4075a4:	xchg   ax,ax
  4075a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075b0:	push   r13
  4075b2:	push   r12
  4075b4:	push   rbp
  4075b5:	push   rdi
  4075b6:	push   rsi
  4075b7:	push   rbx
  4075b8:	sub    rsp,0x28
  4075bc:	mov    rdi,rcx
  4075bf:	mov    ebp,edx
  4075c1:	mov    esi,edx
  4075c3:	mov    r12d,DWORD PTR [rdi+0x14]
  4075c7:	sar    ebp,0x5
  4075ca:	mov    eax,DWORD PTR [rdi+0xc]
  4075cd:	mov    ecx,DWORD PTR [rcx+0x8]
  4075d0:	add    r12d,ebp
  4075d3:	lea    ebx,[r12+0x1]
  4075d8:	cmp    ebx,eax
  4075da:	jle    0x4075e9
  4075dc:	nop    DWORD PTR [rax+0x0]
  4075e0:	add    eax,eax
  4075e2:	add    ecx,0x1
  4075e5:	cmp    ebx,eax
  4075e7:	jg     0x4075e0
  4075e9:	call   0x4070a0
  4075ee:	test   rax,rax
  4075f1:	mov    r13,rax
  4075f4:	je     0x4076bf
  4075fa:	test   ebp,ebp
  4075fc:	lea    r8,[rax+0x18]
  407600:	jle    0x4076b7
  407606:	lea    eax,[rbp-0x1]
  407609:	lea    r9,[r8+rax*4+0x4]
  40760e:	xchg   ax,ax
  407610:	add    r8,0x4
  407614:	mov    DWORD PTR [r8-0x4],0x0
  40761c:	cmp    r8,r9
  40761f:	jne    0x407610
  407621:	movsxd rax,DWORD PTR [rdi+0x14]
  407625:	lea    r8,[rdi+0x18]
  407629:	mov    edx,esi
  40762b:	and    edx,0x1f
  40762e:	lea    rbp,[r8+rax*4]
  407632:	je     0x4076a0
  407634:	mov    eax,0x20
  407639:	xor    r11d,r11d
  40763c:	sub    eax,edx
  40763e:	jmp    0x407643
  407640:	mov    r9,rsi
  407643:	mov    r10d,DWORD PTR [r8]
  407646:	mov    ecx,edx
  407648:	lea    rsi,[r9+0x4]
  40764c:	add    r8,0x4
  407650:	shl    r10d,cl
  407653:	mov    ecx,eax
  407655:	or     r10d,r11d
  407658:	mov    DWORD PTR [rsi-0x4],r10d
  40765c:	mov    r11d,DWORD PTR [r8-0x4]
  407660:	shr    r11d,cl
  407663:	cmp    rbp,r8
  407666:	ja     0x407640
  407668:	add    r12d,0x2
  40766c:	test   r11d,r11d
  40766f:	mov    DWORD PTR [r9+0x4],r11d
  407673:	cmovne ebx,r12d
  407677:	sub    ebx,0x1
  40767a:	mov    rcx,rdi
  40767d:	mov    DWORD PTR [r13+0x14],ebx
  407681:	call   0x4071b0
  407686:	mov    rax,r13
  407689:	add    rsp,0x28
  40768d:	pop    rbx
  40768e:	pop    rsi
  40768f:	pop    rdi
  407690:	pop    rbp
  407691:	pop    r12
  407693:	pop    r13
  407695:	ret    
  407696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076a0:	add    r8,0x4
  4076a4:	mov    edx,DWORD PTR [r8-0x4]
  4076a8:	add    r9,0x4
  4076ac:	cmp    rbp,r8
  4076af:	mov    DWORD PTR [r9-0x4],edx
  4076b3:	ja     0x4076a0
  4076b5:	jmp    0x407677
  4076b7:	mov    r9,r8
  4076ba:	jmp    0x407621
  4076bf:	xor    eax,eax
  4076c1:	jmp    0x407689
  4076c3:	nop    DWORD PTR [rax]
  4076c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076d0:	movsxd r8,DWORD PTR [rdx+0x14]
  4076d4:	mov    eax,DWORD PTR [rcx+0x14]
  4076d7:	sub    eax,r8d
  4076da:	test   eax,eax
  4076dc:	jne    0x407712
  4076de:	shl    r8,0x2
  4076e2:	add    rcx,0x18
  4076e6:	lea    rax,[rcx+r8*1]
  4076ea:	lea    rdx,[rdx+r8*1+0x18]
  4076ef:	jmp    0x4076f6
  4076f1:	cmp    rcx,rax
  4076f4:	jae    0x407710
  4076f6:	sub    rdx,0x4
  4076fa:	sub    rax,0x4
  4076fe:	mov    r9d,DWORD PTR [rdx]
  407701:	cmp    DWORD PTR [rax],r9d
  407704:	je     0x4076f1
  407706:	sbb    eax,eax
  407708:	or     eax,0x1
  40770b:	ret    
  40770c:	nop    DWORD PTR [rax+0x0]
  407710:	xor    eax,eax
  407712:	repz ret 
  407714:	xchg   ax,ax
  407716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407720:	push   rdi
  407721:	push   rsi
  407722:	push   rbx
  407723:	sub    rsp,0x20
  407727:	mov    rsi,rcx
  40772a:	mov    rdi,rdx
  40772d:	call   0x4076d0
  407732:	test   eax,eax
  407734:	je     0x407820
  40773a:	mov    ebx,0x0
  40773f:	js     0x407842
  407745:	mov    ecx,DWORD PTR [rsi+0x8]
  407748:	call   0x4070a0
  40774d:	test   rax,rax
  407750:	je     0x407852
  407756:	movsxd rdx,DWORD PTR [rsi+0x14]
  40775a:	lea    rcx,[rsi+0x18]
  40775e:	mov    DWORD PTR [rax+0x10],ebx
  407761:	lea    r10,[rdi+0x18]
  407765:	xor    r9d,r9d
  407768:	mov    rbx,rdx
  40776b:	lea    rsi,[rcx+rdx*4]
  40776f:	movsxd rdx,DWORD PTR [rdi+0x14]
  407773:	lea    rdi,[r10+rdx*4]
  407777:	lea    rdx,[rax+0x18]
  40777b:	nop    DWORD PTR [rax+rax*1+0x0]
  407780:	add    rcx,0x4
  407784:	add    r10,0x4
  407788:	mov    r11d,DWORD PTR [r10-0x4]
  40778c:	mov    r8d,DWORD PTR [rcx-0x4]
  407790:	add    rdx,0x4
  407794:	sub    r8,r11
  407797:	sub    r8,r9
  40779a:	mov    r9,r8
  40779d:	mov    r11d,r8d
  4077a0:	mov    DWORD PTR [rdx-0x4],r8d
  4077a4:	shr    r9,0x20
  4077a8:	and    r9d,0x1
  4077ac:	cmp    rdi,r10
  4077af:	ja     0x407780
  4077b1:	cmp    rsi,rcx
  4077b4:	mov    rdi,rdx
  4077b7:	mov    r10,rcx
  4077ba:	jbe    0x4077f6
  4077bc:	nop    DWORD PTR [rax+0x0]
  4077c0:	add    rcx,0x4
  4077c4:	mov    r8d,DWORD PTR [rcx-0x4]
  4077c8:	add    rdx,0x4
  4077cc:	sub    r8,r9
  4077cf:	mov    r9,r8
  4077d2:	mov    r11d,r8d
  4077d5:	mov    DWORD PTR [rdx-0x4],r8d
  4077d9:	shr    r9,0x20
  4077dd:	and    r9d,0x1
  4077e1:	cmp    rsi,rcx
  4077e4:	ja     0x4077c0
  4077e6:	not    r10
  4077e9:	lea    rdx,[r10+rsi*1]
  4077ed:	shr    rdx,0x2
  4077f1:	lea    rdx,[rdi+rdx*4+0x4]
  4077f6:	sub    rdx,0x4
  4077fa:	test   r11d,r11d
  4077fd:	jne    0x40780d
  4077ff:	nop
  407800:	sub    rdx,0x4
  407804:	mov    ecx,DWORD PTR [rdx]
  407806:	sub    ebx,0x1
  407809:	test   ecx,ecx
  40780b:	je     0x407800
  40780d:	mov    DWORD PTR [rax+0x14],ebx
  407810:	add    rsp,0x20
  407814:	pop    rbx
  407815:	pop    rsi
  407816:	pop    rdi
  407817:	ret    
  407818:	nop    DWORD PTR [rax+rax*1+0x0]
  407820:	xor    ecx,ecx
  407822:	call   0x4070a0
  407827:	test   rax,rax
  40782a:	je     0x407852
  40782c:	mov    DWORD PTR [rax+0x14],0x1
  407833:	mov    DWORD PTR [rax+0x18],0x0
  40783a:	add    rsp,0x20
  40783e:	pop    rbx
  40783f:	pop    rsi
  407840:	pop    rdi
  407841:	ret    
  407842:	mov    rax,rsi
  407845:	mov    bl,0x1
  407847:	mov    rsi,rdi
  40784a:	mov    rdi,rax
  40784d:	jmp    0x407745
  407852:	xor    eax,eax
  407854:	jmp    0x407810
  407856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407860:	push   rsi
  407861:	push   rbx
  407862:	sub    rsp,0x18
  407866:	movsxd rax,DWORD PTR [rcx+0x14]
  40786a:	lea    r10,[rcx+0x18]
  40786e:	mov    ecx,0x20
  407873:	lea    r9,[r10+rax*4]
  407877:	mov    eax,DWORD PTR [r9-0x4]
  40787b:	lea    rbx,[r9-0x4]
  40787f:	bsr    r8d,eax
  407883:	xor    r8d,0x1f
  407887:	sub    ecx,r8d
  40788a:	cmp    r8d,0xa
  40788e:	mov    DWORD PTR [rdx],ecx
  407890:	jg     0x4078e0
  407892:	mov    ecx,0xb
  407897:	mov    r11d,eax
  40789a:	xor    esi,esi
  40789c:	sub    ecx,r8d
  40789f:	shr    r11d,cl
  4078a2:	or     r11d,0x3ff00000
  4078a9:	shl    r11,0x20
  4078ad:	cmp    r10,rbx
  4078b0:	jae    0x4078b8
  4078b2:	mov    esi,DWORD PTR [r9-0x8]
  4078b6:	shr    esi,cl
  4078b8:	lea    ecx,[r8+0x15]
  4078bc:	shl    eax,cl
  4078be:	mov    edx,eax
  4078c0:	mov    eax,esi
  4078c2:	or     eax,edx
  4078c4:	or     rax,r11
  4078c7:	mov    QWORD PTR [rsp+0x8],rax
  4078cc:	movsd  xmm0,QWORD PTR [rsp+0x8]
  4078d2:	add    rsp,0x18
  4078d6:	pop    rbx
  4078d7:	pop    rsi
  4078d8:	ret    
  4078d9:	nop    DWORD PTR [rax+0x0]
  4078e0:	cmp    r10,rbx
  4078e3:	jae    0x407940
  4078e5:	mov    r11d,r8d
  4078e8:	lea    rsi,[r9-0x8]
  4078ec:	mov    edx,DWORD PTR [r9-0x8]
  4078f0:	sub    r11d,0xb
  4078f4:	je     0x407962
  4078f6:	mov    ebx,0x2b
  4078fb:	mov    ecx,r11d
  4078fe:	sub    ebx,r8d
  407901:	shl    eax,cl
  407903:	mov    r8d,edx
  407906:	mov    ecx,ebx
  407908:	shr    r8d,cl
  40790b:	or     eax,r8d
  40790e:	xor    r8d,r8d
  407911:	or     eax,0x3ff00000
  407916:	shl    rax,0x20
  40791a:	cmp    r10,rsi
  40791d:	jae    0x407926
  40791f:	mov    r8d,DWORD PTR [r9-0xc]
  407923:	shr    r8d,cl
  407926:	mov    ecx,r11d
  407929:	shl    edx,cl
  40792b:	or     r8d,edx
  40792e:	movabs rdx,0xffffffff00000000
  407938:	and    rax,rdx
  40793b:	or     rax,r8
  40793e:	jmp    0x4078c7
  407940:	mov    r11d,r8d
  407943:	sub    r11d,0xb
  407947:	je     0x407960
  407949:	mov    ecx,r11d
  40794c:	xor    r8d,r8d
  40794f:	xor    edx,edx
  407951:	shl    eax,cl
  407953:	or     eax,0x3ff00000
  407958:	shl    rax,0x20
  40795c:	jmp    0x407926
  40795e:	xchg   ax,ax
  407960:	xor    edx,edx
  407962:	or     eax,0x3ff00000
  407967:	shl    rax,0x20
  40796b:	or     rax,rdx
  40796e:	jmp    0x4078c7
  407973:	nop    DWORD PTR [rax]
  407976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407980:	push   rdi
  407981:	push   rsi
  407982:	push   rbx
  407983:	sub    rsp,0x20
  407987:	mov    ecx,0x1
  40798c:	movq   rbx,xmm0
  407991:	mov    rdi,rdx
  407994:	mov    rsi,r8
  407997:	call   0x4070a0
  40799c:	test   rax,rax
  40799f:	je     0x407a85
  4079a5:	mov    r9,rbx
  4079a8:	shr    r9,0x20
  4079ac:	mov    r10d,r9d
  4079af:	and    r9d,0x7fffffff
  4079b6:	and    r10d,0xfffff
  4079bd:	shr    r9d,0x14
  4079c1:	mov    edx,r10d
  4079c4:	or     edx,0x100000
  4079ca:	test   r9d,r9d
  4079cd:	cmovne r10d,edx
  4079d1:	test   ebx,ebx
  4079d3:	jne    0x407a14
  4079d5:	xor    ecx,ecx
  4079d7:	mov    DWORD PTR [rax+0x14],0x1
  4079de:	mov    edx,0x1
  4079e3:	tzcnt  ecx,r10d
  4079e8:	shr    r10d,cl
  4079eb:	test   r9d,r9d
  4079ee:	lea    r11d,[rcx+0x20]
  4079f2:	mov    DWORD PTR [rax+0x18],r10d
  4079f6:	je     0x407a53
  4079f8:	lea    edx,[r11+r9*1-0x433]
  407a00:	mov    DWORD PTR [rdi],edx
  407a02:	mov    edx,0x35
  407a07:	sub    edx,r11d
  407a0a:	mov    DWORD PTR [rsi],edx
  407a0c:	add    rsp,0x20
  407a10:	pop    rbx
  407a11:	pop    rsi
  407a12:	pop    rdi
  407a13:	ret    
  407a14:	xor    r11d,r11d
  407a17:	tzcnt  r11d,ebx
  407a1c:	mov    ecx,r11d
  407a1f:	shr    ebx,cl
  407a21:	test   r11d,r11d
  407a24:	je     0x407a80
  407a26:	mov    ecx,0x20
  407a2b:	mov    edx,r10d
  407a2e:	sub    ecx,r11d
  407a31:	shl    edx,cl
  407a33:	mov    ecx,r11d
  407a36:	or     ebx,edx
  407a38:	shr    r10d,cl
  407a3b:	mov    DWORD PTR [rax+0x18],ebx
  407a3e:	cmp    r10d,0x1
  407a42:	mov    DWORD PTR [rax+0x1c],r10d
  407a46:	sbb    edx,edx
  407a48:	add    edx,0x2
  407a4b:	test   r9d,r9d
  407a4e:	mov    DWORD PTR [rax+0x14],edx
  407a51:	jne    0x4079f8
  407a53:	movsxd rcx,edx
  407a56:	shl    edx,0x5
  407a59:	sub    r11d,0x432
  407a60:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  407a65:	mov    DWORD PTR [rdi],r11d
  407a68:	xor    ecx,0x1f
  407a6b:	sub    edx,ecx
  407a6d:	mov    DWORD PTR [rsi],edx
  407a6f:	add    rsp,0x20
  407a73:	pop    rbx
  407a74:	pop    rsi
  407a75:	pop    rdi
  407a76:	ret    
  407a77:	nop    WORD PTR [rax+rax*1+0x0]
  407a80:	mov    DWORD PTR [rax+0x18],ebx
  407a83:	jmp    0x407a3e
  407a85:	xor    eax,eax
  407a87:	jmp    0x407a0c
  407a89:	nop    DWORD PTR [rax+0x0]
  407a90:	mov    rax,rcx
  407a93:	lea    rcx,[rdx+0x1]
  407a97:	movzx  edx,BYTE PTR [rdx]
  407a9a:	test   dl,dl
  407a9c:	mov    BYTE PTR [rax],dl
  407a9e:	je     0x407ab2
  407aa0:	add    rcx,0x1
  407aa4:	movzx  edx,BYTE PTR [rcx-0x1]
  407aa8:	add    rax,0x1
  407aac:	test   dl,dl
  407aae:	mov    BYTE PTR [rax],dl
  407ab0:	jne    0x407aa0
  407ab2:	repz ret 
  407ab4:	nop
  407ab5:	nop
  407ab6:	nop
  407ab7:	nop
  407ab8:	nop
  407ab9:	nop
  407aba:	nop
  407abb:	nop
  407abc:	nop
  407abd:	nop
  407abe:	nop
  407abf:	nop
  407ac0:	push   r13
  407ac2:	push   r12
  407ac4:	push   rbp
  407ac5:	push   rdi
  407ac6:	push   rsi
  407ac7:	push   rbx
  407ac8:	sub    rsp,0x28
  407acc:	mov    rsi,rcx
  407acf:	lea    ecx,[r8+0x8]
  407ad3:	mov    ebp,edx
  407ad5:	mov    edx,0x38e38e39
  407ada:	mov    edi,r8d
  407add:	mov    ebx,r9d
  407ae0:	mov    eax,ecx
  407ae2:	sar    ecx,0x1f
  407ae5:	imul   edx
  407ae7:	sar    edx,1
  407ae9:	sub    edx,ecx
  407aeb:	cmp    edx,0x1
  407aee:	jle    0x407bb4
  407af4:	mov    eax,0x1
  407af9:	xor    ecx,ecx
  407afb:	nop    DWORD PTR [rax+rax*1+0x0]
  407b00:	add    eax,eax
  407b02:	add    ecx,0x1
  407b05:	cmp    edx,eax
  407b07:	jg     0x407b00
  407b09:	call   0x4070a0
  407b0e:	cmp    ebp,0x9
  407b11:	mov    DWORD PTR [rax+0x18],ebx
  407b14:	mov    DWORD PTR [rax+0x14],0x1
  407b1b:	jle    0x407ba0
  407b21:	lea    rbx,[rsi+0x9]
  407b25:	lea    r12d,[rbp-0xa]
  407b29:	lea    r13,[rsi+r12*1+0xa]
  407b2e:	mov    rsi,rbx
  407b31:	add    rsi,0x1
  407b35:	movsx  r8d,BYTE PTR [rsi-0x1]
  407b3a:	mov    edx,0xa
  407b3f:	mov    rcx,rax
  407b42:	sub    r8d,0x30
  407b46:	call   0x407220
  407b4b:	cmp    rsi,r13
  407b4e:	jne    0x407b31
  407b50:	movsxd rdx,DWORD PTR [rsp+0x80]
  407b58:	lea    r9,[r12+rdx*1+0x1]
  407b5d:	add    rbx,r9
  407b60:	cmp    edi,ebp
  407b62:	jle    0x407b8f
  407b64:	sub    edi,0x1
  407b67:	sub    edi,ebp
  407b69:	lea    rsi,[rbx+rdi*1+0x1]
  407b6e:	xchg   ax,ax
  407b70:	add    rbx,0x1
  407b74:	movsx  r8d,BYTE PTR [rbx-0x1]
  407b79:	mov    edx,0xa
  407b7e:	mov    rcx,rax
  407b81:	sub    r8d,0x30
  407b85:	call   0x407220
  407b8a:	cmp    rbx,rsi
  407b8d:	jne    0x407b70
  407b8f:	add    rsp,0x28
  407b93:	pop    rbx
  407b94:	pop    rsi
  407b95:	pop    rdi
  407b96:	pop    rbp
  407b97:	pop    r12
  407b99:	pop    r13
  407b9b:	ret    
  407b9c:	nop    DWORD PTR [rax+0x0]
  407ba0:	movsxd rdx,DWORD PTR [rsp+0x80]
  407ba8:	mov    ebp,0x9
  407bad:	lea    rbx,[rsi+rdx*1+0x9]
  407bb2:	jmp    0x407b60
  407bb4:	xor    ecx,ecx
  407bb6:	jmp    0x407b09
  407bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  407bc0:	push   rdi
  407bc1:	push   rsi
  407bc2:	push   rbx
  407bc3:	sub    rsp,0x50
  407bc7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  407bcc:	mov    rsi,rdx
  407bcf:	lea    rdx,[rsp+0x38]
  407bd4:	mov    rdi,rcx
  407bd7:	call   0x407860
  407bdc:	lea    rdx,[rsp+0x3c]
  407be1:	mov    rcx,rsi
  407be4:	movq   rbx,xmm0
  407be9:	movapd xmm6,xmm0
  407bed:	call   0x407860
  407bf2:	mov    eax,DWORD PTR [rsp+0x38]
  407bf6:	sub    eax,DWORD PTR [rsp+0x3c]
  407bfa:	movq   rcx,xmm0
  407bff:	mov    r8d,eax
  407c02:	mov    eax,DWORD PTR [rdi+0x14]
  407c05:	sub    eax,DWORD PTR [rsi+0x14]
  407c08:	shl    eax,0x5
  407c0b:	add    eax,r8d
  407c0e:	test   eax,eax
  407c10:	jle    0x407c50
  407c12:	movq   rdx,xmm6
  407c17:	shl    eax,0x14
  407c1a:	shr    rdx,0x20
  407c1e:	add    eax,edx
  407c20:	shl    rax,0x20
  407c24:	mov    rdx,rax
  407c27:	mov    eax,ebx
  407c29:	or     rax,rdx
  407c2c:	mov    QWORD PTR [rsp+0x28],rax
  407c31:	movsd  xmm6,QWORD PTR [rsp+0x28]
  407c37:	divsd  xmm6,xmm0
  407c3b:	movapd xmm0,xmm6
  407c3f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  407c44:	add    rsp,0x50
  407c48:	pop    rbx
  407c49:	pop    rsi
  407c4a:	pop    rdi
  407c4b:	ret    
  407c4c:	nop    DWORD PTR [rax+0x0]
  407c50:	movq   rdx,xmm0
  407c55:	shl    eax,0x14
  407c58:	shr    rdx,0x20
  407c5c:	mov    ebx,edx
  407c5e:	sub    ebx,eax
  407c60:	mov    rax,rbx
  407c63:	shl    rax,0x20
  407c67:	mov    rdx,rax
  407c6a:	mov    eax,ecx
  407c6c:	or     rax,rdx
  407c6f:	mov    QWORD PTR [rsp+0x28],rax
  407c74:	movsd  xmm0,QWORD PTR [rsp+0x28]
  407c7a:	jmp    0x407c37
  407c7c:	nop    DWORD PTR [rax+0x0]
  407c80:	mov    r8,QWORD PTR [rcx]
  407c83:	jmp    0x407c9e
  407c85:	movsx  eax,BYTE PTR [r8]
  407c89:	lea    r11d,[rax-0x41]
  407c8d:	lea    r10d,[rax+0x20]
  407c91:	cmp    r11d,0x19
  407c95:	cmovbe eax,r10d
  407c99:	cmp    eax,r9d
  407c9c:	jne    0x407cc0
  407c9e:	add    rdx,0x1
  407ca2:	movsx  r9d,BYTE PTR [rdx-0x1]
  407ca7:	add    r8,0x1
  407cab:	test   r9d,r9d
  407cae:	jne    0x407c85
  407cb0:	mov    QWORD PTR [rcx],r8
  407cb3:	mov    eax,0x1
  407cb8:	ret    
  407cb9:	nop    DWORD PTR [rax+0x0]
  407cc0:	xor    eax,eax
  407cc2:	ret    
  407cc3:	nop    DWORD PTR [rax]
  407cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cd0:	sub    edx,0x1
  407cd3:	lea    rax,[r8+0x18]
  407cd7:	sar    edx,0x5
  407cda:	movsxd rdx,edx
  407cdd:	lea    r11,[rcx+rdx*4+0x4]
  407ce2:	movsxd rdx,DWORD PTR [r8+0x14]
  407ce6:	lea    r10,[rax+rdx*4]
  407cea:	cmp    rax,r10
  407ced:	jae    0x407d2b
  407cef:	mov    rdx,rcx
  407cf2:	add    rax,0x4
  407cf6:	mov    r9d,DWORD PTR [rax-0x4]
  407cfa:	add    rdx,0x4
  407cfe:	cmp    r10,rax
  407d01:	mov    DWORD PTR [rdx-0x4],r9d
  407d05:	ja     0x407cf2
  407d07:	sub    r10,r8
  407d0a:	lea    rax,[r10-0x19]
  407d0e:	shr    rax,0x2
  407d12:	lea    rcx,[rcx+rax*4+0x4]
  407d17:	cmp    r11,rcx
  407d1a:	jbe    0x407d30
  407d1c:	nop    DWORD PTR [rax+0x0]
  407d20:	add    rcx,0x4
  407d24:	mov    DWORD PTR [rcx-0x4],0x0
  407d2b:	cmp    r11,rcx
  407d2e:	ja     0x407d20
  407d30:	repz ret 
  407d32:	nop    DWORD PTR [rax+0x0]
  407d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d40:	movsxd rax,DWORD PTR [rcx+0x14]
  407d44:	mov    r9d,edx
  407d47:	lea    r8,[rcx+0x18]
  407d4b:	sar    r9d,0x5
  407d4f:	cmp    eax,r9d
  407d52:	jge    0x407d81
  407d54:	lea    r9,[r8+rax*4]
  407d58:	cmp    r8,r9
  407d5b:	jae    0x407dc6
  407d5d:	mov    eax,DWORD PTR [r9-0x4]
  407d61:	lea    rdx,[r9-0x4]
  407d65:	test   eax,eax
  407d67:	je     0x407d7a
  407d69:	jmp    0x407dc0
  407d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d70:	sub    rdx,0x4
  407d74:	mov    ecx,DWORD PTR [rdx]
  407d76:	test   ecx,ecx
  407d78:	jne    0x407dc0
  407d7a:	cmp    r8,rdx
  407d7d:	jb     0x407d70
  407d7f:	repz ret 
  407d81:	jle    0x407db0
  407d83:	mov    ecx,edx
  407d85:	movsxd r9,r9d
  407d88:	and    ecx,0x1f
  407d8b:	lea    r9,[r8+r9*4]
  407d8f:	je     0x407d58
  407d91:	mov    r10d,DWORD PTR [r9]
  407d94:	mov    eax,r10d
  407d97:	shr    eax,cl
  407d99:	shl    eax,cl
  407d9b:	mov    edx,eax
  407d9d:	mov    eax,0x1
  407da2:	cmp    edx,r10d
  407da5:	je     0x407d58
  407da7:	repz ret 
  407da9:	nop    DWORD PTR [rax+0x0]
  407db0:	movsxd r9,r9d
  407db3:	lea    r9,[r8+r9*4]
  407db7:	jmp    0x407d58
  407db9:	nop    DWORD PTR [rax+0x0]
  407dc0:	mov    eax,0x1
  407dc5:	ret    
  407dc6:	xor    eax,eax
  407dc8:	ret    
  407dc9:	nop
  407dca:	nop
  407dcb:	nop
  407dcc:	nop
  407dcd:	nop
  407dce:	nop
  407dcf:	nop
  407dd0:	jmp    QWORD PTR [rip+0xa676]        # 0x41244c
  407dd6:	nop
  407dd7:	nop
  407dd8:	jmp    QWORD PTR [rip+0xa666]        # 0x412444
  407dde:	nop
  407ddf:	nop
  407de0:	jmp    QWORD PTR [rip+0xa656]        # 0x41243c
  407de6:	nop
  407de7:	nop
  407de8:	jmp    QWORD PTR [rip+0xa646]        # 0x412434
  407dee:	nop
  407def:	nop
  407df0:	jmp    QWORD PTR [rip+0xa636]        # 0x41242c
  407df6:	nop
  407df7:	nop
  407df8:	jmp    QWORD PTR [rip+0xa626]        # 0x412424
  407dfe:	nop
  407dff:	nop
  407e00:	jmp    QWORD PTR [rip+0xa616]        # 0x41241c
  407e06:	nop
  407e07:	nop
  407e08:	jmp    QWORD PTR [rip+0xa606]        # 0x412414
  407e0e:	nop
  407e0f:	nop
  407e10:	jmp    QWORD PTR [rip+0xa5f6]        # 0x41240c
  407e16:	nop
  407e17:	nop
  407e18:	jmp    QWORD PTR [rip+0xa5e6]        # 0x412404
  407e1e:	nop
  407e1f:	nop
  407e20:	jmp    QWORD PTR [rip+0xa5d6]        # 0x4123fc
  407e26:	nop
  407e27:	nop
  407e28:	jmp    QWORD PTR [rip+0xa5c6]        # 0x4123f4
  407e2e:	nop
  407e2f:	nop
  407e30:	jmp    QWORD PTR [rip+0xa5b6]        # 0x4123ec
  407e36:	nop
  407e37:	nop
  407e38:	jmp    QWORD PTR [rip+0xa5a6]        # 0x4123e4
  407e3e:	nop
  407e3f:	nop
  407e40:	jmp    QWORD PTR [rip+0xa596]        # 0x4123dc
  407e46:	nop
  407e47:	nop
  407e48:	jmp    QWORD PTR [rip+0xa586]        # 0x4123d4
  407e4e:	nop
  407e4f:	nop
  407e50:	jmp    QWORD PTR [rip+0xa576]        # 0x4123cc
  407e56:	nop
  407e57:	nop
  407e58:	jmp    QWORD PTR [rip+0xa566]        # 0x4123c4
  407e5e:	nop
  407e5f:	nop
  407e60:	jmp    QWORD PTR [rip+0xa556]        # 0x4123bc
  407e66:	nop
  407e67:	nop
  407e68:	jmp    QWORD PTR [rip+0xa546]        # 0x4123b4
  407e6e:	nop
  407e6f:	nop
  407e70:	jmp    QWORD PTR [rip+0xa536]        # 0x4123ac
  407e76:	nop
  407e77:	nop
  407e78:	jmp    QWORD PTR [rip+0xa526]        # 0x4123a4
  407e7e:	nop
  407e7f:	nop
  407e80:	jmp    QWORD PTR [rip+0xa516]        # 0x41239c
  407e86:	nop
  407e87:	nop
  407e88:	jmp    QWORD PTR [rip+0xa506]        # 0x412394
  407e8e:	nop
  407e8f:	nop
  407e90:	jmp    QWORD PTR [rip+0xa4f6]        # 0x41238c
  407e96:	nop
  407e97:	nop
  407e98:	jmp    QWORD PTR [rip+0xa4e6]        # 0x412384
  407e9e:	nop
  407e9f:	nop
  407ea0:	jmp    QWORD PTR [rip+0xa4d6]        # 0x41237c
  407ea6:	nop
  407ea7:	nop
  407ea8:	jmp    QWORD PTR [rip+0xa4c6]        # 0x412374
  407eae:	nop
  407eaf:	nop
  407eb0:	jmp    QWORD PTR [rip+0xa4ae]        # 0x412364
  407eb6:	nop
  407eb7:	nop
  407eb8:	jmp    QWORD PTR [rip+0xa49e]        # 0x41235c
  407ebe:	nop
  407ebf:	nop
  407ec0:	jmp    QWORD PTR [rip+0xa48e]        # 0x412354
  407ec6:	nop
  407ec7:	nop
  407ec8:	jmp    QWORD PTR [rip+0xa476]        # 0x412344
  407ece:	nop
  407ecf:	nop
  407ed0:	jmp    QWORD PTR [rip+0xa466]        # 0x41233c
  407ed6:	nop
  407ed7:	nop
  407ed8:	jmp    QWORD PTR [rip+0xa456]        # 0x412334
  407ede:	nop
  407edf:	nop
  407ee0:	jmp    QWORD PTR [rip+0xa446]        # 0x41232c
  407ee6:	nop
  407ee7:	nop
  407ee8:	jmp    QWORD PTR [rip+0xa42e]        # 0x41231c
  407eee:	nop
  407eef:	nop
  407ef0:	jmp    QWORD PTR [rip+0xa41e]        # 0x412314
  407ef6:	nop
  407ef7:	nop
  407ef8:	jmp    QWORD PTR [rip+0xa40e]        # 0x41230c
  407efe:	nop
  407eff:	nop
  407f00:	mov    rax,QWORD PTR [rip+0x9539]        # 0x411440
  407f07:	ret    
  407f08:	nop    DWORD PTR [rax+rax*1+0x0]
  407f10:	mov    rax,rcx
  407f13:	xchg   QWORD PTR [rip+0x9526],rax        # 0x411440
  407f1a:	ret    
  407f1b:	nop
  407f1c:	nop
  407f1d:	nop
  407f1e:	nop
  407f1f:	nop
  407f20:	jmp    QWORD PTR [rip+0xa3d6]        # 0x4122fc
  407f26:	nop
  407f27:	nop
  407f28:	jmp    QWORD PTR [rip+0xa3c6]        # 0x4122f4
  407f2e:	nop
  407f2f:	nop
  407f30:	jmp    QWORD PTR [rip+0xa3b6]        # 0x4122ec
  407f36:	nop
  407f37:	nop
  407f38:	jmp    QWORD PTR [rip+0xa3a6]        # 0x4122e4
  407f3e:	nop
  407f3f:	nop
  407f40:	jmp    QWORD PTR [rip+0xa396]        # 0x4122dc
  407f46:	nop
  407f47:	nop
  407f48:	jmp    QWORD PTR [rip+0xa386]        # 0x4122d4
  407f4e:	nop
  407f4f:	nop
  407f50:	jmp    QWORD PTR [rip+0xa376]        # 0x4122cc
  407f56:	nop
  407f57:	nop
  407f58:	jmp    QWORD PTR [rip+0xa366]        # 0x4122c4
  407f5e:	nop
  407f5f:	nop
  407f60:	jmp    QWORD PTR [rip+0xa356]        # 0x4122bc
  407f66:	nop
  407f67:	nop
  407f68:	jmp    QWORD PTR [rip+0xa346]        # 0x4122b4
  407f6e:	nop
  407f6f:	nop
  407f70:	jmp    QWORD PTR [rip+0xa336]        # 0x4122ac
  407f76:	nop
  407f77:	nop
  407f78:	jmp    QWORD PTR [rip+0xa326]        # 0x4122a4
  407f7e:	nop
  407f7f:	nop
  407f80:	jmp    QWORD PTR [rip+0xa316]        # 0x41229c
  407f86:	nop
  407f87:	nop
  407f88:	jmp    QWORD PTR [rip+0xa306]        # 0x412294
  407f8e:	nop
  407f8f:	nop
  407f90:	jmp    QWORD PTR [rip+0xa2f6]        # 0x41228c
  407f96:	nop
  407f97:	nop
  407f98:	jmp    QWORD PTR [rip+0xa2e6]        # 0x412284
  407f9e:	nop
  407f9f:	nop
  407fa0:	jmp    QWORD PTR [rip+0xa2d6]        # 0x41227c
  407fa6:	nop
  407fa7:	nop
  407fa8:	jmp    QWORD PTR [rip+0xa2c6]        # 0x412274
  407fae:	nop
  407faf:	nop
  407fb0:	jmp    QWORD PTR [rip+0xa2b6]        # 0x41226c
  407fb6:	nop
  407fb7:	nop
  407fb8:	jmp    QWORD PTR [rip+0xa2a6]        # 0x412264
  407fbe:	nop
  407fbf:	nop
  407fc0:	jmp    QWORD PTR [rip+0xa296]        # 0x41225c
  407fc6:	nop
  407fc7:	nop
  407fc8:	jmp    QWORD PTR [rip+0xa286]        # 0x412254
  407fce:	nop
  407fcf:	nop
  407fd0:	jmp    QWORD PTR [rip+0xa276]        # 0x41224c
  407fd6:	nop
  407fd7:	nop
  407fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fe0:	push   r15
  407fe2:	push   r14
  407fe4:	push   r13
  407fe6:	push   r12
  407fe8:	push   rbp
  407fe9:	push   rdi
  407fea:	push   rsi
  407feb:	push   rbx
  407fec:	sub    rsp,0xc88
  407ff3:	movaps XMMWORD PTR [rsp+0xbe0],xmm6
  407ffb:	movaps XMMWORD PTR [rsp+0xbf0],xmm7
  408003:	movaps XMMWORD PTR [rsp+0xc00],xmm8
  40800c:	movaps XMMWORD PTR [rsp+0xc10],xmm9
  408015:	movaps XMMWORD PTR [rsp+0xc20],xmm10
  40801e:	movaps XMMWORD PTR [rsp+0xc30],xmm11
  408027:	movaps XMMWORD PTR [rsp+0xc40],xmm12
  408030:	movaps XMMWORD PTR [rsp+0xc50],xmm13
  408039:	movaps XMMWORD PTR [rsp+0xc60],xmm14
  408042:	movaps XMMWORD PTR [rsp+0xc70],xmm15
  40804b:	mov    r15d,ecx
  40804e:	mov    QWORD PTR [rsp+0xcd8],rdx
  408056:	call   0x401980
  40805b:	cmp    r15d,0x1
  40805f:	je     0x40a37a
  408065:	mov    rax,QWORD PTR [rsp+0xcd8]
  40806d:	mov    edx,0x5c
  408072:	mov    rsi,QWORD PTR [rax]
  408075:	mov    rcx,rsi
  408078:	call   0x407de0
  40807d:	test   rax,rax
  408080:	mov    QWORD PTR [rsp+0xd0],rax
  408088:	je     0x409033
  40808e:	lea    rbx,[rsp+0xe0]
  408096:	lea    rdx,[rax+0x1]
  40809a:	mov    rcx,rbx
  40809d:	call   0x407df8
  4080a2:	lea    rdx,[rip+0x3fe6]        # 0x40c08f
  4080a9:	mov    rcx,rbx
  4080ac:	call   0x407dd8
  4080b1:	test   rax,rax
  4080b4:	mov    QWORD PTR [rsp+0xd0],rax
  4080bc:	je     0x40900e
  4080c2:	mov    BYTE PTR [rax],0x0
  4080c5:	pxor   xmm14,xmm14
  4080ca:	cmp    r15d,0x1
  4080ce:	movsd  xmm15,QWORD PTR [rip+0x43b9]        # 0x40c490
  4080d7:	movsd  xmm8,QWORD PTR [rip+0x43c8]        # 0x40c4a8
  4080e0:	movapd xmm6,xmm15
  4080e5:	movsd  QWORD PTR [rsp+0x88],xmm14
  4080ef:	movsd  QWORD PTR [rsp+0x80],xmm14
  4080f9:	movapd xmm13,xmm14
  4080fe:	movsd  xmm12,QWORD PTR [rip+0x43a9]        # 0x40c4b0
  408107:	movsd  xmm10,QWORD PTR [rip+0x43a8]        # 0x40c4b8
  408110:	jle    0x40a19b
  408116:	mov    rax,QWORD PTR [rip+0xa20f]        # 0x41232c
  40811d:	mov    edi,0x3
  408122:	mov    r12d,0x1
  408128:	xor    r13d,r13d
  40812b:	xor    ebp,ebp
  40812d:	movsd  QWORD PTR [rsp+0xb0],xmm14
  408137:	movapd xmm7,xmm14
  40813c:	mov    DWORD PTR [rsp+0xa0],edi
  408143:	mov    QWORD PTR [rsp+0x38],rax
  408148:	lea    rax,[rsp+0xd0]
  408150:	mov    edi,r12d
  408153:	mov    DWORD PTR [rsp+0x68],0x0
  40815b:	mov    DWORD PTR [rsp+0x48],0x0
  408163:	mov    r12d,ebp
  408166:	mov    QWORD PTR [rsp+0x90],rax
  40816e:	lea    rax,[rsp+0xd8]
  408176:	mov    DWORD PTR [rsp+0x78],0x0
  40817e:	mov    DWORD PTR [rsp+0x9c],0x0
  408189:	mov    DWORD PTR [rsp+0xac],0x0
  408194:	mov    QWORD PTR [rsp+0xc0],rax
  40819c:	lea    rax,[rsp+0x1b0]
  4081a4:	mov    DWORD PTR [rsp+0x70],0x0
  4081ac:	mov    DWORD PTR [rsp+0xa8],0x0
  4081b7:	mov    DWORD PTR [rsp+0x98],0x0
  4081c2:	mov    DWORD PTR [rsp+0x50],0x0
  4081ca:	mov    DWORD PTR [rsp+0x6c],0x0
  4081d2:	mov    DWORD PTR [rsp+0x5c],0x0
  4081da:	mov    DWORD PTR [rsp+0x74],0x0
  4081e2:	mov    DWORD PTR [rsp+0x44],0x0
  4081ea:	mov    DWORD PTR [rsp+0x58],0x0
  4081f2:	mov    DWORD PTR [rsp+0x40],0x0
  4081fa:	mov    DWORD PTR [rsp+0xa4],0x0
  408205:	mov    DWORD PTR [rsp+0x60],0x0
  40820d:	mov    QWORD PTR [rsp+0xc8],rax
  408215:	mov    DWORD PTR [rsp+0xb8],r13d
  40821d:	mov    rbp,rbx
  408220:	mov    edx,DWORD PTR [rbp+0x0]
  408223:	add    rbp,0x4
  408227:	lea    eax,[rdx-0x1010101]
  40822d:	not    edx
  40822f:	and    eax,edx
  408231:	and    eax,0x80808080
  408236:	je     0x408220
  408238:	mov    edx,eax
  40823a:	movsxd rsi,edi
  40823d:	shr    edx,0x10
  408240:	test   eax,0x8080
  408245:	cmove  eax,edx
  408248:	lea    rdx,[rbp+0x2]
  40824c:	cmove  rbp,rdx
  408250:	add    al,al
  408252:	sbb    rbp,0x3
  408256:	shl    rsi,0x3
  40825a:	mov    r14,rsi
  40825d:	add    r14,QWORD PTR [rsp+0xcd8]
  408265:	sub    rbp,rbx
  408268:	mov    r13,QWORD PTR [r14]
  40826b:	mov    rcx,r13
  40826e:	call   0x407df0
  408273:	lea    rax,[rbp+rax*1+0x1]
  408278:	cmp    rax,0xc7
  40827e:	ja     0x408291
  408280:	lea    rcx,[rbx+rbp*1+0x1]
  408285:	mov    BYTE PTR [rbx+rbp*1],0x20
  408289:	mov    rdx,r13
  40828c:	call   0x407df8
  408291:	movsx  edx,BYTE PTR [r13+0x0]
  408296:	mov    eax,edx
  408298:	sub    edx,0x30
  40829b:	cmp    edx,0x9
  40829e:	jbe    0x408c79
  4082a4:	cmp    al,0x2d
  4082a6:	je     0x408c8c
  4082ac:	sub    eax,0x42
  4082af:	cmp    al,0x38
  4082b1:	ja     0x408c5d
  4082b7:	lea    rdx,[rip+0x40ee]        # 0x40c3ac
  4082be:	movzx  eax,al
  4082c1:	movsxd rax,DWORD PTR [rdx+rax*4]
  4082c5:	add    rdx,rax
  4082c8:	jmp    rdx
  4082ca:	mov    DWORD PTR [rip+0x7d64],0x1        # 0x410038
  4082d4:	add    edi,0x1
  4082d7:	cmp    r15d,edi
  4082da:	jg     0x40821d
  4082e0:	mov    edi,DWORD PTR [rsp+0xa0]
  4082e7:	mov    r13d,DWORD PTR [rsp+0xb8]
  4082ef:	movsd  QWORD PTR [rsp+0x90],xmm7
  4082f8:	mov    ebp,r12d
  4082fb:	mov    ecx,DWORD PTR [rsp+0x9c]
  408302:	test   ecx,ecx
  408304:	jne    0x408318
  408306:	mov    edx,DWORD PTR [rip+0x7d2c]        # 0x410038
  40830c:	test   edx,edx
  40830e:	je     0x408318
  408310:	movsd  xmm6,QWORD PTR [rip+0x41b8]        # 0x40c4d0
  408318:	mov    eax,DWORD PTR [rsp+0x6c]
  40831c:	mov    DWORD PTR [rsp+0x9c],0x0
  408327:	test   eax,eax
  408329:	jne    0x408fc2
  40832f:	mov    eax,DWORD PTR [rsp+0x70]
  408333:	mov    DWORD PTR [rsp+0xa0],0x0
  40833e:	test   eax,eax
  408340:	je     0x408362
  408342:	movsd  xmm4,QWORD PTR [rsp+0x88]
  40834b:	lea    eax,[rdi+rdi*1]
  40834e:	ucomisd xmm4,xmm14
  408353:	mov    DWORD PTR [rsp+0xa0],eax
  40835a:	jp     0x408362
  40835c:	je     0x408f2b
  408362:	mov    eax,DWORD PTR [rsp+0x44]
  408366:	test   eax,eax
  408368:	je     0x408d39
  40836e:	mov    eax,DWORD PTR [rsp+0x58]
  408372:	test   eax,eax
  408374:	jne    0x409b67
  40837a:	movsd  xmm7,QWORD PTR [rip+0x4146]        # 0x40c4c8
  408382:	ucomisd xmm7,xmm13
  408387:	jae    0x409b3c
  40838d:	movapd xmm0,xmm7
  408391:	divsd  xmm0,xmm13
  408396:	call   0x407e78
  40839b:	movapd xmm11,xmm0
  4083a0:	call   0x403130
  4083a5:	mulsd  xmm0,xmm13
  4083aa:	movsd  QWORD PTR [rsp+0xb8],xmm0
  4083b3:	test   ebp,ebp
  4083b5:	jne    0x4083c3
  4083b7:	mov    eax,DWORD PTR [rsp+0x48]
  4083bb:	test   eax,eax
  4083bd:	je     0x408f39
  4083c3:	mov    esi,DWORD PTR [rsp+0x78]
  4083c7:	mov    eax,DWORD PTR [rsp+0x44]
  4083cb:	mov    ecx,DWORD PTR [rsp+0x98]
  4083d2:	mov    edx,DWORD PTR [rsp+0x68]
  4083d6:	add    eax,esi
  4083d8:	add    eax,ecx
  4083da:	add    eax,edx
  4083dc:	cmp    eax,0x1
  4083df:	jg     0x40a16f
  4083e5:	mov    eax,DWORD PTR [rsp+0x40]
  4083e9:	add    eax,esi
  4083eb:	add    eax,ecx
  4083ed:	add    eax,edx
  4083ef:	cmp    eax,0x1
  4083f2:	jg     0x40a16f
  4083f8:	mov    rax,QWORD PTR [rsp+0x38]
  4083fd:	call   rax
  4083ff:	mov    esi,DWORD PTR [rsp+0x68]
  408403:	or     esi,DWORD PTR [rsp+0x78]
  408407:	lea    rcx,[rax+0x30]
  40840b:	mov    eax,ebp
  40840d:	mov    QWORD PTR [rip+0x904c],rcx        # 0x411460
  408414:	jne    0x40844e
  408416:	mov    eax,DWORD PTR [rsp+0x48]
  40841a:	test   eax,eax
  40841c:	jne    0x408f22
  408422:	mov    eax,DWORD PTR [rsp+0x58]
  408426:	add    eax,ebp
  408428:	cmp    DWORD PTR [rsp+0x74],0x0
  40842d:	je     0x40844e
  40842f:	cmp    edi,0x2
  408432:	mov    eax,ebp
  408434:	je     0x409b2a
  40843a:	cmp    edi,0x3
  40843d:	jne    0x40844e
  40843f:	cmp    DWORD PTR [rsp+0x44],0x0
  408444:	je     0x409b15
  40844a:	lea    eax,[rbp+rbp*2+0x0]
  40844e:	mov    r9d,DWORD PTR [rsp+0x9c]
  408456:	add    r9d,DWORD PTR [rsp+0xa0]
  40845e:	add    r9d,DWORD PTR [rsp+0xa4]
  408466:	add    r9d,eax
  408469:	test   r13d,r13d
  40846c:	je     0x408d1a
  408472:	mov    r12d,DWORD PTR [rip+0x7bbf]        # 0x410038
  408479:	lea    rdx,[rip+0x3c09]        # 0x40c089
  408480:	lea    rax,[rip+0x3bfa]        # 0x40c081
  408487:	mov    r14d,DWORD PTR [rsp+0xa8]
  40848f:	lea    r8,[rip+0x3bf8]        # 0x40c08e
  408496:	test   r12d,r12d
  408499:	cmove  rax,rdx
  40849d:	lea    edx,[rdi+0x1]
  4084a0:	test   r14d,r14d
  4084a3:	mov    QWORD PTR [rsp+0x28],rax
  4084a8:	cmove  r8,rbx
  4084ac:	mov    DWORD PTR [rsp+0x20],edx
  4084b0:	lea    rdx,[rip+0x3d9f]        # 0x40c256
  4084b7:	call   0x407e50
  4084bc:	mov    r11d,DWORD PTR [rsp+0xac]
  4084c4:	test   r11d,r11d
  4084c7:	jne    0x408518
  4084c9:	movzx  eax,BYTE PTR [rsp+0xe0]
  4084d1:	mov    QWORD PTR [rsp+0xd0],rbx
  4084d9:	test   al,al
  4084db:	je     0x408518
  4084dd:	movzx  ecx,BYTE PTR [rsp+0x48]
  4084e2:	mov    edx,DWORD PTR [rsp+0x60]
  4084e6:	cmp    al,0x79
  4084e8:	jne    0x4084f4
  4084ea:	test   cl,cl
  4084ec:	mov    r8d,0x78
  4084f2:	jne    0x4084f8
  4084f4:	movsx  r8d,al
  4084f8:	lea    eax,[rdx+rdx*4]
  4084fb:	add    rbx,0x1
  4084ff:	lea    edx,[rdx+rax*2]
  408502:	movzx  eax,BYTE PTR [rbx]
  408505:	add    edx,r8d
  408508:	test   al,al
  40850a:	jne    0x4084e6
  40850c:	mov    DWORD PTR [rsp+0x60],edx
  408510:	mov    QWORD PTR [rsp+0xd0],rbx
  408518:	mov    r10d,DWORD PTR [rsp+0x60]
  40851d:	test   r10d,r10d
  408520:	jle    0x409973
  408526:	mov    ebx,DWORD PTR [rsp+0x60]
  40852a:	mov    eax,0x7ffffffe
  40852f:	cmp    ebx,0x7fffffff
  408535:	cmovne eax,ebx
  408538:	mov    DWORD PTR [rip+0x2b02],eax        # 0x40b040
  40853e:	cmp    r15d,0x1
  408542:	jle    0x40860d
  408548:	mov    rax,QWORD PTR [rsp+0xcd8]
  408550:	mov    rbx,QWORD PTR [rsp+0xcd8]
  408558:	lea    rsi,[rsp+0xd0]
  408560:	pxor   xmm9,xmm9
  408565:	lea    r12,[rax+0x8]
  408569:	lea    eax,[r15-0x2]
  40856d:	lea    r15,[rbx+rax*8+0x10]
  408572:	jmp    0x408581
  408574:	add    r12,0x8
  408578:	cmp    r12,r15
  40857b:	je     0x40860d
  408581:	mov    rcx,QWORD PTR [r12]
  408585:	cmp    BYTE PTR [rcx],0x50
  408588:	jne    0x408574
  40858a:	add    rcx,0x1
  40858e:	test   r13d,r13d
  408591:	mov    QWORD PTR [rsp+0xd0],rcx
  408599:	jne    0x408d00
  40859f:	movzx  eax,BYTE PTR [rcx]
  4085a2:	xor    ebx,ebx
  4085a4:	test   al,al
  4085a6:	je     0x4085c9
  4085a8:	mov    rdx,rsi
  4085ab:	add    ebx,0x1
  4085ae:	call   0x402d70
  4085b3:	call   0x4015c0
  4085b8:	mov    rcx,QWORD PTR [rsp+0xd0]
  4085c0:	cmp    BYTE PTR [rcx],0x0
  4085c3:	jne    0x408ca0
  4085c9:	cmp    edi,ebx
  4085cb:	jle    0x408cc1
  4085d1:	mov    eax,edi
  4085d3:	sub    eax,ebx
  4085d5:	mov    ebx,eax
  4085d7:	je     0x4085ef
  4085d9:	nop    DWORD PTR [rax+0x0]
  4085e0:	movapd xmm0,xmm9
  4085e5:	call   0x4015c0
  4085ea:	sub    ebx,0x1
  4085ed:	jne    0x4085e0
  4085ef:	mov    rdx,QWORD PTR [rip+0x8e6a]        # 0x411460
  4085f6:	mov    ecx,0xa
  4085fb:	add    r12,0x8
  4085ff:	call   0x407e48
  408604:	cmp    r12,r15
  408607:	jne    0x408581
  40860d:	mov    eax,DWORD PTR [rsp+0x78]
  408611:	add    eax,DWORD PTR [rsp+0x48]
  408615:	jne    0x409665
  40861b:	mov    r8d,DWORD PTR [rsp+0x68]
  408620:	test   r8d,r8d
  408623:	jne    0x409534
  408629:	movzx  eax,BYTE PTR [rsp+0x74]
  40862e:	mov    ecx,DWORD PTR [rsp+0x44]
  408632:	and    eax,0x1
  408635:	test   ecx,ecx
  408637:	jne    0x408d70
  40863d:	test   al,al
  40863f:	je     0x408d70
  408645:	lea    eax,[rdi-0x2]
  408648:	cmp    eax,0x1
  40864b:	ja     0x409ac1
  408651:	ucomisd xmm13,xmm14
  408656:	mov    edx,0x0
  40865b:	setnp  al
  40865e:	cmovne eax,edx
  408661:	test   al,al
  408663:	jne    0x409969
  408669:	cmp    DWORD PTR [rsp+0x58],0x0
  40866e:	je     0x409969
  408674:	cmp    edi,0x3
  408677:	je     0x40a4bd
  40867d:	pxor   xmm0,xmm0
  408681:	test   ebp,ebp
  408683:	movsd  xmm11,QWORD PTR [rip+0x3e74]        # 0x40c500
  40868c:	cvtsi2sd xmm0,ebp
  408690:	divsd  xmm11,xmm0
  408695:	jle    0x408819
  40869b:	movapd xmm10,xmm14
  4086a0:	xor    ebx,ebx
  4086a2:	movsd  xmm14,QWORD PTR [rip+0x3e1d]        # 0x40c4c8
  4086ab:	movapd xmm12,xmm14
  4086b0:	jmp    0x4086e3
  4086b2:	test   r13d,r13d
  4086b5:	je     0x4086c1
  4086b7:	movapd xmm0,xmm12
  4086bc:	call   0x4015c0
  4086c1:	movapd xmm0,xmm8
  4086c6:	movapd xmm1,xmm9
  4086cb:	mulsd  xmm0,xmm6
  4086cf:	mulsd  xmm1,xmm6
  4086d3:	call   0x401620
  4086d8:	add    ebx,0x1
  4086db:	cmp    ebx,ebp
  4086dd:	je     0x408819
  4086e3:	addsd  xmm10,xmm11
  4086e8:	movapd xmm0,xmm10
  4086ed:	call   0x403130
  4086f2:	mulsd  xmm0,xmm13
  4086f7:	movapd xmm8,xmm0
  4086fc:	movapd xmm0,xmm10
  408701:	call   0x4039f0
  408706:	mulsd  xmm0,xmm13
  40870b:	cmp    edi,0x2
  40870e:	movapd xmm9,xmm0
  408713:	je     0x4086b2
  408715:	movapd xmm0,xmm8
  40871a:	mulsd  xmm0,xmm8
  40871f:	movapd xmm1,xmm0
  408723:	movapd xmm0,xmm9
  408728:	addsd  xmm1,xmm7
  40872c:	mulsd  xmm0,xmm9
  408731:	addsd  xmm0,xmm1
  408735:	sqrtsd xmm15,xmm0
  40873a:	ucomisd xmm15,xmm15
  40873f:	jp     0x40a4ae
  408745:	test   r13d,r13d
  408748:	je     0x408754
  40874a:	movapd xmm0,xmm14
  40874f:	call   0x4015c0
  408754:	movapd xmm0,xmm6
  408758:	movapd xmm1,xmm6
  40875c:	movapd xmm2,xmm6
  408760:	mulsd  xmm0,xmm8
  408765:	mulsd  xmm1,xmm9
  40876a:	divsd  xmm2,xmm15
  40876f:	divsd  xmm0,xmm15
  408774:	divsd  xmm1,xmm15
  408779:	call   0x4016c0
  40877e:	mov    edx,DWORD PTR [rsp+0x50]
  408782:	test   edx,edx
  408784:	je     0x4086d8
  40878a:	movapd xmm0,xmm7
  40878e:	subsd  xmm0,QWORD PTR [rsp+0x90]
  408797:	mulsd  xmm8,xmm0
  40879c:	mulsd  xmm9,xmm0
  4087a1:	movapd xmm0,xmm8
  4087a6:	mulsd  xmm0,xmm8
  4087ab:	movapd xmm1,xmm0
  4087af:	movapd xmm0,xmm9
  4087b4:	addsd  xmm1,xmm7
  4087b8:	mulsd  xmm0,xmm9
  4087bd:	addsd  xmm0,xmm1
  4087c1:	sqrtsd xmm15,xmm0
  4087c6:	ucomisd xmm15,xmm15
  4087cb:	jp     0x40a49f
  4087d1:	test   r13d,r13d
  4087d4:	je     0x4087e3
  4087d6:	movsd  xmm0,QWORD PTR [rip+0x3cea]        # 0x40c4c8
  4087de:	call   0x4015c0
  4087e3:	movapd xmm1,xmm9
  4087e8:	mulsd  xmm8,xmm6
  4087ed:	movapd xmm2,xmm6
  4087f1:	add    ebx,0x1
  4087f4:	mulsd  xmm1,xmm6
  4087f8:	divsd  xmm2,xmm15
  4087fd:	movapd xmm0,xmm8
  408802:	divsd  xmm1,xmm15
  408807:	divsd  xmm0,xmm15
  40880c:	call   0x4016c0
  408811:	cmp    ebx,ebp
  408813:	jne    0x4086e3
  408819:	mov    r9d,DWORD PTR [rsp+0x6c]
  40881e:	test   r9d,r9d
  408821:	je     0x4088b6
  408827:	mov    ecx,DWORD PTR [rsp+0x9c]
  40882e:	test   ecx,ecx
  408830:	jle    0x4088b6
  408836:	movsd  xmm5,QWORD PTR [rsp+0x80]
  40883f:	lea    rax,[rip+0x8c1a]        # 0x411460
  408846:	lea    esi,[rdi-0x1]
  408849:	movsd  xmm6,QWORD PTR [rip+0x3c9f]        # 0x40c4f0
  408851:	xor    ebx,ebx
  408853:	movapd xmm7,xmm5
  408857:	mov    QWORD PTR [rsp+0x48],rax
  40885c:	xorpd  xmm6,xmm5
  408860:	test   r13d,r13d
  408863:	jne    0x408fb0
  408869:	test   esi,esi
  40886b:	mov    ebp,esi
  40886d:	jns    0x408882
  40886f:	jmp    0x408898
  408871:	movapd xmm0,xmm7
  408875:	sub    ebp,0x1
  408878:	call   0x4015c0
  40887d:	cmp    ebp,0xffffffff
  408880:	je     0x408898
  408882:	bt     ebx,ebp
  408885:	jb     0x408871
  408887:	movapd xmm0,xmm6
  40888b:	sub    ebp,0x1
  40888e:	call   0x4015c0
  408893:	cmp    ebp,0xffffffff
  408896:	jne    0x408882
  408898:	mov    rax,QWORD PTR [rsp+0x48]
  40889d:	mov    ecx,0xa
  4088a2:	add    ebx,0x1
  4088a5:	mov    rdx,QWORD PTR [rax]
  4088a8:	call   0x407e48
  4088ad:	cmp    ebx,DWORD PTR [rsp+0x9c]
  4088b4:	jne    0x408860
  4088b6:	mov    r8d,DWORD PTR [rsp+0x70]
  4088bb:	test   r8d,r8d
  4088be:	je     0x40896b
  4088c4:	mov    edx,DWORD PTR [rsp+0xa0]
  4088cb:	test   edx,edx
  4088cd:	jle    0x40896b
  4088d3:	movsd  xmm3,QWORD PTR [rsp+0x88]
  4088dc:	lea    rax,[rip+0x8b7d]        # 0x411460
  4088e3:	sub    edi,0x1
  4088e6:	movsd  xmm6,QWORD PTR [rip+0x3c02]        # 0x40c4f0
  4088ee:	xor    ebp,ebp
  4088f0:	movapd xmm7,xmm3
  4088f4:	mov    QWORD PTR [rsp+0x48],rax
  4088f9:	xorpd  xmm6,xmm3
  4088fd:	test   r13d,r13d
  408900:	jne    0x408f9e
  408906:	test   edi,edi
  408908:	js     0x40894d
  40890a:	mov    esi,ebp
  40890c:	mov    r12d,ebp
  40890f:	mov    ebx,edi
  408911:	shr    esi,0x1f
  408914:	and    r12d,0x1
  408918:	add    esi,ebp
  40891a:	sar    esi,1
  40891c:	jmp    0x40892f
  40891e:	pxor   xmm0,xmm0
  408922:	call   0x4015c0
  408927:	sub    ebx,0x1
  40892a:	cmp    ebx,0xffffffff
  40892d:	je     0x40894d
  40892f:	cmp    esi,ebx
  408931:	jne    0x40891e
  408933:	test   r12d,r12d
  408936:	je     0x408f90
  40893c:	movapd xmm0,xmm7
  408940:	sub    ebx,0x1
  408943:	call   0x4015c0
  408948:	cmp    ebx,0xffffffff
  40894b:	jne    0x40892f
  40894d:	mov    rax,QWORD PTR [rsp+0x48]
  408952:	mov    ecx,0xa
  408957:	add    ebp,0x1
  40895a:	mov    rdx,QWORD PTR [rax]
  40895d:	call   0x407e48
  408962:	cmp    ebp,DWORD PTR [rsp+0xa0]
  408969:	jne    0x4088fd
  40896b:	test   r13d,r13d
  40896e:	je     0x40898f
  408970:	mov    r9,QWORD PTR [rip+0x8ae9]        # 0x411460
  408977:	lea    rcx,[rip+0x3a24]        # 0x40c3a2
  40897e:	mov    r8d,0x9
  408984:	mov    edx,0x1
  408989:	call   0x407e38
  40898e:	nop
  40898f:	movaps xmm6,XMMWORD PTR [rsp+0xbe0]
  408997:	xor    eax,eax
  408999:	movaps xmm7,XMMWORD PTR [rsp+0xbf0]
  4089a1:	movaps xmm8,XMMWORD PTR [rsp+0xc00]
  4089aa:	movaps xmm9,XMMWORD PTR [rsp+0xc10]
  4089b3:	movaps xmm10,XMMWORD PTR [rsp+0xc20]
  4089bc:	movaps xmm11,XMMWORD PTR [rsp+0xc30]
  4089c5:	movaps xmm12,XMMWORD PTR [rsp+0xc40]
  4089ce:	movaps xmm13,XMMWORD PTR [rsp+0xc50]
  4089d7:	movaps xmm14,XMMWORD PTR [rsp+0xc60]
  4089e0:	movaps xmm15,XMMWORD PTR [rsp+0xc70]
  4089e9:	add    rsp,0xc88
  4089f0:	pop    rbx
  4089f1:	pop    rsi
  4089f2:	pop    rdi
  4089f3:	pop    rbp
  4089f4:	pop    r12
  4089f6:	pop    r13
  4089f8:	pop    r14
  4089fa:	pop    r15
  4089fc:	ret    
  4089fd:	add    edi,0x1
  408a00:	mov    DWORD PTR [rsp+0x48],0x1
  408a08:	jmp    0x4082d7
  408a0d:	add    edi,0x1
  408a10:	mov    DWORD PTR [rsp+0x78],0x1
  408a18:	jmp    0x4082d7
  408a1d:	movsx  eax,BYTE PTR [r13+0x1]
  408a22:	sub    eax,0x30
  408a25:	cmp    eax,0x9
  408a28:	ja     0x40904b
  408a2e:	lea    rcx,[r13+0x1]
  408a32:	add    edi,0x1
  408a35:	call   0x407e68
  408a3a:	mov    DWORD PTR [rsp+0xac],0x1
  408a45:	mov    DWORD PTR [rsp+0x60],eax
  408a49:	jmp    0x4082d7
  408a4e:	add    edi,0x1
  408a51:	mov    DWORD PTR [rsp+0x40],0x1
  408a59:	jmp    0x4082d7
  408a5e:	add    edi,0x1
  408a61:	mov    DWORD PTR [rsp+0x74],0x1
  408a69:	jmp    0x4082d7
  408a6e:	add    edi,0x1
  408a71:	mov    DWORD PTR [rsp+0xa8],0x1
  408a7c:	jmp    0x4082d7
  408a81:	add    edi,0x1
  408a84:	mov    DWORD PTR [rsp+0x98],0x1
  408a8f:	jmp    0x4082d7
  408a94:	add    edi,0x1
  408a97:	mov    DWORD PTR [rsp+0xb8],0x1
  408aa2:	jmp    0x4082d7
  408aa7:	lea    edx,[rdi+0x1]
  408aaa:	cmp    r15d,edx
  408aad:	jle    0x408ac5
  408aaf:	mov    rax,QWORD PTR [rsp+0xcd8]
  408ab7:	mov    rax,QWORD PTR [rax+rsi*1+0x8]
  408abc:	cmp    BYTE PTR [rax],0x47
  408abf:	je     0x40a358
  408ac5:	mov    edi,edx
  408ac7:	mov    DWORD PTR [rsp+0x70],0x1
  408acf:	jmp    0x4082d7
  408ad4:	lea    edx,[rdi+0x1]
  408ad7:	cmp    r15d,edx
  408ada:	jle    0x408af2
  408adc:	mov    rax,QWORD PTR [rsp+0xcd8]
  408ae4:	mov    rax,QWORD PTR [rax+rsi*1+0x8]
  408ae9:	cmp    BYTE PTR [rax],0x47
  408aec:	je     0x40a3dd
  408af2:	mov    edi,edx
  408af4:	mov    DWORD PTR [rsp+0x6c],0x1
  408afc:	jmp    0x4082d7
  408b01:	cmp    BYTE PTR [r13+0x1],0x0
  408b06:	jne    0x40914f
  408b0c:	add    edi,0x1
  408b0f:	movsd  xmm13,QWORD PTR [rip+0x39b0]        # 0x40c4c8
  408b18:	mov    DWORD PTR [rsp+0x58],0x1
  408b20:	jmp    0x4082d7
  408b25:	add    DWORD PTR [rsp+0xa4],0x1
  408b2d:	add    edi,0x1
  408b30:	jmp    0x4082d7
  408b35:	lea    rcx,[r13+0x1]
  408b39:	add    edi,0x1
  408b3c:	call   0x407e70
  408b41:	movsd  QWORD PTR [rip+0x74e7],xmm0        # 0x410030
  408b49:	jmp    0x4082d7
  408b4e:	lea    rcx,[r13+0x1]
  408b52:	add    edi,0x1
  408b55:	call   0x407e70
  408b5a:	mov    DWORD PTR [rsp+0x5c],0x1
  408b62:	movsd  QWORD PTR [rsp+0xb0],xmm0
  408b6b:	jmp    0x4082d7
  408b70:	lea    rcx,[r13+0x1]
  408b74:	movapd xmm1,xmm14
  408b79:	movapd xmm10,xmm14
  408b7e:	mov    QWORD PTR [rsp+0xd0],rcx
  408b86:	cmp    BYTE PTR [r13+0x1],0x0
  408b8b:	jne    0x40911d
  408b91:	movapd xmm0,xmm12
  408b96:	mulsd  xmm0,xmm12
  408b9b:	addsd  xmm0,xmm1
  408b9f:	sqrtsd xmm1,xmm0
  408ba3:	ucomisd xmm1,xmm1
  408ba7:	jp     0x409b93
  408bad:	movapd xmm8,xmm1
  408bb2:	mov    rax,QWORD PTR [rsp+0xd0]
  408bba:	cmp    BYTE PTR [rax],0x0
  408bbd:	jne    0x4090d0
  408bc3:	add    edi,0x1
  408bc6:	mov    DWORD PTR [rsp+0x68],0x1
  408bce:	jmp    0x4082d7
  408bd3:	cmp    BYTE PTR [r13+0x1],0x0
  408bd8:	jne    0x4090b2
  408bde:	add    edi,0x1
  408be1:	movsd  xmm13,QWORD PTR [rip+0x38d6]        # 0x40c4c0
  408bea:	mov    DWORD PTR [rsp+0x44],0x1
  408bf2:	jmp    0x4082d7
  408bf7:	cmp    BYTE PTR [r13+0x1],0x0
  408bfc:	jne    0x409095
  408c02:	add    edi,0x1
  408c05:	movapd xmm7,xmm15
  408c0a:	mov    DWORD PTR [rsp+0x50],0x1
  408c12:	jmp    0x4082d7
  408c17:	lea    rcx,[r13+0x1]
  408c1b:	call   0x407e68
  408c20:	mov    DWORD PTR [rsp+0xa0],eax
  408c27:	sub    eax,0x1
  408c2a:	cmp    eax,0xc7
  408c2f:	ja     0x40a3b2
  408c35:	add    edi,0x1
  408c38:	jmp    0x4082d7
  408c3d:	lea    rcx,[r13+0x1]
  408c41:	add    edi,0x1
  408c44:	call   0x407e70
  408c49:	mov    DWORD PTR [rsp+0x9c],0x1
  408c54:	movapd xmm6,xmm0
  408c58:	jmp    0x4082d7
  408c5d:	mov    rax,QWORD PTR [rsp+0x38]
  408c62:	call   rax
  408c64:	lea    rdx,[rip+0x34b5]        # 0x40c120
  408c6b:	lea    rcx,[rax+0x60]
  408c6f:	mov    r8,r13
  408c72:	call   0x407e50
  408c77:	jmp    0x408c35
  408c79:	mov    rcx,r13
  408c7c:	add    edi,0x1
  408c7f:	call   0x407e68
  408c84:	mov    r12d,eax
  408c87:	jmp    0x4082d7
  408c8c:	lea    rdx,[r13+0x1]
  408c90:	mov    QWORD PTR [r14],rdx
  408c93:	movzx  eax,BYTE PTR [r13+0x1]
  408c98:	mov    r13,rdx
  408c9b:	jmp    0x4082ac
  408ca0:	lea    rdx,[rcx+0x1]
  408ca4:	mov    QWORD PTR [rsp+0xd0],rdx
  408cac:	cmp    BYTE PTR [rcx],0x2c
  408caf:	jne    0x409aed
  408cb5:	movzx  eax,BYTE PTR [rcx+0x1]
  408cb9:	mov    rcx,rdx
  408cbc:	jmp    0x4085a4
  408cc1:	jge    0x4085ef
  408cc7:	mov    rsi,QWORD PTR [r12]
  408ccb:	mov    rax,QWORD PTR [rsp+0x38]
  408cd0:	call   rax
  408cd2:	lea    rdx,[rip+0x35e7]        # 0x40c2c0
  408cd9:	lea    rcx,[rax+0x60]
  408cdd:	mov    r9d,edi
  408ce0:	mov    QWORD PTR [rsp+0x20],rsi
  408ce5:	mov    r8d,ebx
  408ce8:	call   0x407e50
  408ced:	mov    ecx,0x1
  408cf2:	call   0x407e58
  408cf7:	nop    WORD PTR [rax+rax*1+0x0]
  408d00:	movsd  xmm0,QWORD PTR [rip+0x37c0]        # 0x40c4c8
  408d08:	call   0x4015c0
  408d0d:	mov    rcx,QWORD PTR [rsp+0xd0]
  408d15:	jmp    0x40859f
  408d1a:	mov    esi,DWORD PTR [rsp+0xa8]
  408d21:	test   esi,esi
  408d23:	je     0x408d54
  408d25:	lea    rdx,[rip+0x3545]        # 0x40c271
  408d2c:	mov    r8d,edi
  408d2f:	call   0x407e50
  408d34:	jmp    0x4084bc
  408d39:	movsd  xmm7,QWORD PTR [rip+0x3787]        # 0x40c4c8
  408d41:	movapd xmm11,xmm14
  408d46:	movsd  QWORD PTR [rsp+0xb8],xmm7
  408d4f:	jmp    0x4083b3
  408d54:	lea    rdx,[rip+0x351d]        # 0x40c278
  408d5b:	mov    DWORD PTR [rsp+0x20],r9d
  408d60:	mov    r8d,edi
  408d63:	mov    r9,rbx
  408d66:	call   0x407e50
  408d6b:	jmp    0x4084bc
  408d70:	movzx  ebx,BYTE PTR [rsp+0x44]
  408d75:	test   bl,bl
  408d77:	mov    BYTE PTR [rsp+0x48],bl
  408d7b:	je     0x4091be
  408d81:	test   al,al
  408d83:	je     0x4091be
  408d89:	cmp    edi,0x2
  408d8c:	je     0x40a261
  408d92:	cmp    edi,0x3
  408d95:	jne    0x409ac1
  408d9b:	pxor   xmm0,xmm0
  408d9f:	cmp    DWORD PTR [rsp+0x50],0x0
  408da4:	movsd  xmm11,QWORD PTR [rip+0x3753]        # 0x40c500
  408dad:	cvtsi2sd xmm0,ebp
  408db1:	divsd  xmm11,xmm0
  408db6:	jne    0x408dc2
  408db8:	movsd  QWORD PTR [rsp+0x90],xmm15
  408dc2:	subsd  xmm7,QWORD PTR [rsp+0x90]
  408dcb:	movapd xmm0,xmm7
  408dcf:	mulsd  xmm13,xmm13
  408dd4:	mulsd  xmm0,xmm7
  408dd8:	subsd  xmm13,xmm0
  408ddd:	movapd xmm0,xmm13
  408de2:	call   0x403000
  408de7:	test   ebp,ebp
  408de9:	subsd  xmm0,QWORD PTR [rsp+0xb8]
  408df2:	jle    0x408819
  408df8:	movsd  xmm12,QWORD PTR [rip+0x36ef]        # 0x40c4f0
  408e01:	movapd xmm13,xmm6
  408e06:	movapd xmm10,xmm14
  408e0b:	xor    ebx,ebx
  408e0d:	xorpd  xmm12,xmm6
  408e12:	mulsd  xmm13,xmm0
  408e17:	movapd xmm15,xmm14
  408e1c:	mulsd  xmm12,xmm0
  408e21:	jmp    0x408e8b
  408e23:	movapd xmm0,xmm6
  408e27:	movapd xmm1,xmm6
  408e2b:	movapd xmm2,xmm15
  408e30:	mulsd  xmm0,xmm8
  408e35:	mulsd  xmm1,xmm9
  408e3a:	call   0x4016c0
  408e3f:	mulsd  xmm9,xmm7
  408e44:	movapd xmm2,xmm13
  408e49:	mulsd  xmm8,xmm7
  408e4e:	mulsd  xmm9,xmm6
  408e53:	mulsd  xmm8,xmm6
  408e58:	movapd xmm1,xmm9
  408e5d:	movapd xmm0,xmm8
  408e62:	call   0x4016c0
  408e67:	movapd xmm2,xmm12
  408e6c:	add    ebx,0x1
  408e6f:	movapd xmm1,xmm9
  408e74:	movapd xmm0,xmm8
  408e79:	call   0x4016c0
  408e7e:	cmp    ebx,ebp
  408e80:	addsd  xmm10,xmm11
  408e85:	je     0x408819
  408e8b:	movapd xmm0,xmm10
  408e90:	call   0x403130
  408e95:	movapd xmm8,xmm0
  408e9a:	movapd xmm0,xmm10
  408e9f:	call   0x4039f0
  408ea4:	test   r13d,r13d
  408ea7:	movapd xmm9,xmm0
  408eac:	je     0x408e23
  408eb2:	movsd  xmm0,QWORD PTR [rip+0x360e]        # 0x40c4c8
  408eba:	call   0x4015c0
  408ebf:	movapd xmm0,xmm6
  408ec3:	movapd xmm1,xmm6
  408ec7:	movapd xmm2,xmm14
  408ecc:	mulsd  xmm0,xmm8
  408ed1:	mulsd  xmm1,xmm9
  408ed6:	call   0x4016c0
  408edb:	mulsd  xmm8,xmm7
  408ee0:	mulsd  xmm9,xmm7
  408ee5:	movsd  xmm0,QWORD PTR [rip+0x35db]        # 0x40c4c8
  408eed:	call   0x4015c0
  408ef2:	mulsd  xmm9,xmm6
  408ef7:	movapd xmm2,xmm13
  408efc:	mulsd  xmm8,xmm6
  408f01:	movapd xmm1,xmm9
  408f06:	movapd xmm0,xmm8
  408f0b:	call   0x4016c0
  408f10:	movsd  xmm0,QWORD PTR [rip+0x35b0]        # 0x40c4c8
  408f18:	call   0x4015c0
  408f1d:	jmp    0x408e67
  408f22:	lea    eax,[rdi+rbp*1+0x1]
  408f26:	jmp    0x40844e
  408f2b:	movsd  QWORD PTR [rsp+0x88],xmm6
  408f34:	jmp    0x408362
  408f39:	mov    eax,DWORD PTR [rsp+0x74]
  408f3d:	add    eax,DWORD PTR [rsp+0x78]
  408f41:	add    eax,DWORD PTR [rsp+0x44]
  408f45:	add    eax,DWORD PTR [rsp+0x40]
  408f49:	add    eax,DWORD PTR [rsp+0x58]
  408f4d:	add    eax,DWORD PTR [rsp+0x98]
  408f54:	add    eax,DWORD PTR [rsp+0x5c]
  408f58:	add    eax,DWORD PTR [rsp+0x68]
  408f5c:	jne    0x40a4fc
  408f62:	mov    eax,DWORD PTR [rsp+0x70]
  408f66:	add    eax,DWORD PTR [rsp+0x6c]
  408f6a:	mov    edx,0x1
  408f6f:	add    eax,DWORD PTR [rsp+0xa4]
  408f76:	mov    eax,0x32
  408f7b:	cmovne edx,DWORD PTR [rsp+0x40]
  408f80:	cmove  ebp,eax
  408f83:	mov    DWORD PTR [rsp+0x40],edx
  408f87:	jmp    0x4083c3
  408f8c:	nop    DWORD PTR [rax+0x0]
  408f90:	movapd xmm0,xmm6
  408f94:	call   0x4015c0
  408f99:	jmp    0x408927
  408f9e:	movsd  xmm0,QWORD PTR [rip+0x3522]        # 0x40c4c8
  408fa6:	call   0x4015c0
  408fab:	jmp    0x408906
  408fb0:	movsd  xmm0,QWORD PTR [rip+0x3510]        # 0x40c4c8
  408fb8:	call   0x4015c0
  408fbd:	jmp    0x408869
  408fc2:	movsd  xmm0,QWORD PTR [rip+0x34fe]        # 0x40c4c8
  408fca:	mov    edx,edi
  408fcc:	call   0x403260
  408fd1:	addsd  xmm0,xmm15
  408fd6:	call   0x402e50
  408fdb:	cvttsd2si eax,xmm0
  408fdf:	movsd  xmm4,QWORD PTR [rsp+0x80]
  408fe8:	ucomisd xmm4,xmm14
  408fed:	mov    DWORD PTR [rsp+0x9c],eax
  408ff4:	jp     0x40832f
  408ffa:	jne    0x40832f
  409000:	movsd  QWORD PTR [rsp+0x80],xmm6
  409009:	jmp    0x40832f
  40900e:	lea    rdx,[rip+0x307f]        # 0x40c094
  409015:	mov    rcx,rbx
  409018:	call   0x407dd8
  40901d:	test   rax,rax
  409020:	mov    QWORD PTR [rsp+0xd0],rax
  409028:	jne    0x4080c2
  40902e:	jmp    0x4080c5
  409033:	lea    rbx,[rsp+0xe0]
  40903b:	mov    rdx,rsi
  40903e:	mov    rcx,rbx
  409041:	call   0x407df8
  409046:	jmp    0x4080a2
  40904b:	mov    rcx,QWORD PTR [rsp+0xc0]
  409053:	add    edi,0x1
  409056:	call   QWORD PTR [rip+0x9330]        # 0x41238c
  40905c:	mov    rsi,QWORD PTR [rsp+0xc8]
  409064:	lea    rdx,[rip+0x302e]        # 0x40c099
  40906b:	mov    r8d,eax
  40906e:	mov    DWORD PTR [rsp+0x60],eax
  409072:	mov    rcx,rsi
  409075:	call   0x407e08
  40907a:	mov    rdx,rsi
  40907d:	mov    rcx,rbx
  409080:	call   0x407e00
  409085:	mov    DWORD PTR [rsp+0xac],0x1
  409090:	jmp    0x4082d7
  409095:	lea    rcx,[r13+0x1]
  409099:	add    edi,0x1
  40909c:	call   0x407e70
  4090a1:	mov    DWORD PTR [rsp+0x50],0x1
  4090a9:	movapd xmm7,xmm0
  4090ad:	jmp    0x4082d7
  4090b2:	lea    rcx,[r13+0x1]
  4090b6:	add    edi,0x1
  4090b9:	call   0x407e70
  4090be:	mov    DWORD PTR [rsp+0x44],0x1
  4090c6:	movapd xmm13,xmm0
  4090cb:	jmp    0x4082d7
  4090d0:	mov    rax,QWORD PTR [rsp+0x38]
  4090d5:	add    edi,0x1
  4090d8:	call   rax
  4090da:	lea    rcx,[rip+0x2fef]        # 0x40c0d0
  4090e1:	lea    r9,[rax+0x60]
  4090e5:	mov    r8d,0x4a
  4090eb:	mov    edx,0x1
  4090f0:	call   0x407e38
  4090f5:	movsd  xmm8,QWORD PTR [rip+0x33aa]        # 0x40c4a8
  4090fe:	mov    DWORD PTR [rsp+0x68],0x1
  409106:	movsd  xmm12,QWORD PTR [rip+0x33a9]        # 0x40c4b8
  40910f:	movsd  xmm10,QWORD PTR [rip+0x3398]        # 0x40c4b0
  409118:	jmp    0x4082d7
  40911d:	mov    rdx,QWORD PTR [rsp+0x90]
  409125:	call   0x402d70
  40912a:	mov    rcx,QWORD PTR [rsp+0xd0]
  409132:	movapd xmm12,xmm0
  409137:	cmp    BYTE PTR [rcx],0x2c
  40913a:	je     0x40a3ff
  409140:	movapd xmm1,xmm14
  409145:	movapd xmm10,xmm14
  40914a:	jmp    0x408b91
  40914f:	lea    rcx,[r13+0x1]
  409153:	add    edi,0x1
  409156:	call   0x407e70
  40915b:	mov    DWORD PTR [rsp+0x58],0x1
  409163:	movapd xmm13,xmm0
  409168:	jmp    0x4082d7
  40916d:	je     0x409860
  409173:	test   r13d,r13d
  409176:	je     0x409185
  409178:	movsd  xmm0,QWORD PTR [rip+0x3348]        # 0x40c4c8
  409180:	call   0x4015c0
  409185:	mov    rax,QWORD PTR [rsp+0x48]
  40918a:	mov    ecx,0xa
  40918f:	mov    rdx,QWORD PTR [rax]
  409192:	call   0x407e48
  409197:	add    DWORD PTR [rsp+0x74],0x1
  40919c:	mov    eax,DWORD PTR [rsp+0x74]
  4091a0:	cmp    eax,ebp
  4091a2:	jne    0x4097e7
  4091a8:	cmp    DWORD PTR [rsp+0x68],0x0
  4091ad:	jne    0x40a451
  4091b3:	movzx  eax,BYTE PTR [rsp+0x44]
  4091b8:	xor    ebp,ebp
  4091ba:	mov    BYTE PTR [rsp+0x48],al
  4091be:	cmp    DWORD PTR [rsp+0x58],0x0
  4091c3:	je     0x40a48c
  4091c9:	lea    r12d,[rdi-0x1]
  4091cd:	test   r13d,r13d
  4091d0:	mov    DWORD PTR [rsp+0x44],r12d
  4091d5:	je     0x4091e4
  4091d7:	movsd  xmm0,QWORD PTR [rip+0x32e9]        # 0x40c4c8
  4091df:	call   0x4015c0
  4091e4:	xor    ebx,ebx
  4091e6:	test   r12d,r12d
  4091e9:	jle    0x4091fc
  4091eb:	pxor   xmm0,xmm0
  4091ef:	add    ebx,0x1
  4091f2:	call   0x4015c0
  4091f7:	cmp    ebx,r12d
  4091fa:	jne    0x4091eb
  4091fc:	movsd  xmm0,QWORD PTR [rip+0x32ec]        # 0x40c4f0
  409204:	xorpd  xmm0,xmm6
  409208:	call   0x4015c0
  40920d:	mov    rdx,QWORD PTR [rip+0x824c]        # 0x411460
  409214:	mov    ecx,0xa
  409219:	call   0x407e48
  40921e:	test   ebp,ebp
  409220:	jle    0x408819
  409226:	mov    eax,DWORD PTR [rsp+0x44]
  40922a:	lea    r15,[rsp+0x5a0]
  409232:	mov    r14d,DWORD PTR [rsp+0x50]
  409237:	movsd  xmm8,QWORD PTR [rip+0x32a0]        # 0x40c4e0
  409240:	mov    DWORD PTR [rsp+0x68],0x0
  409248:	movsd  xmm10,QWORD PTR [rip+0x3287]        # 0x40c4d8
  409251:	mov    DWORD PTR [rsp+0x74],r13d
  409256:	sub    eax,0x1
  409259:	movsd  xmm9,QWORD PTR [rip+0x328e]        # 0x40c4f0
  409262:	lea    rbx,[r15+rax*8+0x8]
  409267:	lea    eax,[rdi-0x1]
  40926a:	movsd  xmm12,QWORD PTR [rsp+0xb0]
  409274:	mov    r12,rax
  409277:	lea    rsi,[r15+rax*8+0x8]
  40927c:	mov    eax,DWORD PTR [rsp+0x40]
  409280:	movsd  xmm11,QWORD PTR [rsp+0x90]
  40928a:	xor    eax,0x1
  40928d:	and    eax,0x1
  409290:	mov    BYTE PTR [rsp+0x60],al
  409294:	mov    r10d,DWORD PTR [rsp+0x44]
  409299:	test   r10d,r10d
  40929c:	jle    0x40a144
  4092a2:	mov    ecx,DWORD PTR [rip+0x1d98]        # 0x40b040
  4092a8:	movapd xmm2,xmm14
  4092ad:	mov    r8,r15
  4092b0:	mov    r9d,0x834e0b5f
  4092b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092c0:	mov    eax,ecx
  4092c2:	pxor   xmm0,xmm0
  4092c6:	imul   r9d
  4092c9:	mov    eax,ecx
  4092cb:	sar    eax,0x1f
  4092ce:	add    edx,ecx
  4092d0:	sar    edx,0x10
  4092d3:	sub    edx,eax
  4092d5:	imul   eax,edx,0x1f31d
  4092db:	imul   edx,edx,0xfffff4ec
  4092e1:	sub    ecx,eax
  4092e3:	imul   eax,ecx,0x41a7
  4092e9:	add    eax,edx
  4092eb:	lea    ecx,[rax+0x7fffffff]
  4092f1:	test   eax,eax
  4092f3:	cmovg  ecx,eax
  4092f6:	add    r8,0x8
  4092fa:	cvtsi2sd xmm0,ecx
  4092fe:	addsd  xmm0,xmm0
  409302:	divsd  xmm0,xmm8
  409307:	subsd  xmm0,xmm7
  40930b:	movsd  QWORD PTR [r8-0x8],xmm0
  409311:	mulsd  xmm0,xmm0
  409315:	cmp    r8,rbx
  409318:	addsd  xmm2,xmm0
  40931c:	jne    0x4092c0
  40931e:	mov    DWORD PTR [rip+0x1d1c],ecx        # 0x40b040
  409324:	sqrtsd xmm0,xmm2
  409328:	ucomisd xmm0,xmm0
  40932c:	jp     0x40a136
  409332:	mov    eax,DWORD PTR [rsp+0x58]
  409336:	test   eax,eax
  409338:	je     0x409ba1
  40933e:	test   r14d,r14d
  409341:	jne    0x40934b
  409343:	movapd xmm11,xmm7
  409348:	mov    r14b,0x1
  40934b:	mov    ecx,DWORD PTR [rip+0x1cef]        # 0x40b040
  409351:	mov    edx,0x834e0b5f
  409356:	mov    eax,ecx
  409358:	imul   edx
  40935a:	mov    eax,ecx
  40935c:	sar    eax,0x1f
  40935f:	add    edx,ecx
  409361:	sar    edx,0x10
  409364:	sub    edx,eax
  409366:	imul   eax,edx,0x1f31d
  40936c:	imul   edx,edx,0xfffff4ec
  409372:	sub    ecx,eax
  409374:	imul   eax,ecx,0x41a7
  40937a:	add    eax,edx
  40937c:	test   eax,eax
  40937e:	jle    0x409ee4
  409384:	pxor   xmm1,xmm1
  409388:	movapd xmm3,xmm7
  40938c:	movsd  xmm15,QWORD PTR [rip+0x314b]        # 0x40c4e0
  409395:	mov    DWORD PTR [rip+0x1ca5],eax        # 0x40b040
  40939b:	cvtsi2sd xmm1,eax
  40939f:	mov    eax,DWORD PTR [rsp+0x44]
  4093a3:	test   eax,eax
  4093a5:	mulsd  xmm1,xmm11
  4093aa:	divsd  xmm1,xmm15
  4093af:	subsd  xmm3,xmm1
  4093b3:	movapd xmm1,xmm3
  4093b7:	mulsd  xmm1,xmm13
  4093bc:	divsd  xmm1,xmm0
  4093c0:	jle    0x40a0f4
  4093c6:	mov    rdx,r15
  4093c9:	mov    rax,r15
  4093cc:	nop    DWORD PTR [rax+0x0]
  4093d0:	add    rax,0x8
  4093d4:	movsd  xmm0,QWORD PTR [rax-0x8]
  4093d9:	mulsd  xmm0,xmm1
  4093dd:	movsd  QWORD PTR [rax-0x8],xmm0
  4093e2:	cmp    rbx,rax
  4093e5:	jne    0x4093d0
  4093e7:	mov    eax,DWORD PTR [rsp+0x40]
  4093eb:	test   eax,eax
  4093ed:	je     0x40a012
  4093f3:	movsd  xmm4,QWORD PTR [rip+0x30cd]        # 0x40c4c8
  4093fb:	movsxd rcx,r12d
  4093fe:	movapd xmm2,xmm7
  409402:	movsd  QWORD PTR [rsp+rcx*8+0x5a0],xmm4
  40940b:	nop    DWORD PTR [rax+rax*1+0x0]
  409410:	movsd  xmm0,QWORD PTR [rdx]
  409414:	add    rdx,0x8
  409418:	cmp    rbx,rdx
  40941b:	mulsd  xmm0,xmm0
  40941f:	addsd  xmm2,xmm0
  409423:	jne    0x409410
  409425:	sqrtsd xmm0,xmm2
  409429:	ucomisd xmm0,xmm0
  40942d:	jp     0x40a114
  409433:	test   edi,edi
  409435:	jle    0x409456
  409437:	mov    rax,r15
  40943a:	nop    WORD PTR [rax+rax*1+0x0]
  409440:	movsd  xmm1,QWORD PTR [rax]
  409444:	add    rax,0x8
  409448:	divsd  xmm1,xmm0
  40944c:	movsd  QWORD PTR [rax-0x8],xmm1
  409451:	cmp    rax,rsi
  409454:	jne    0x409440
  409456:	mov    eax,DWORD PTR [rsp+0x5c]
  40945a:	test   eax,eax
  40945c:	je     0x4094d4
  40945e:	mov    r8d,DWORD PTR [rip+0x1bdb]        # 0x40b040
  409465:	mov    edx,0x834e0b5f
  40946a:	mov    eax,r8d
  40946d:	imul   edx
  40946f:	mov    eax,r8d
  409472:	sar    eax,0x1f
  409475:	add    edx,r8d
  409478:	sar    edx,0x10
  40947b:	sub    edx,eax
  40947d:	imul   eax,edx,0x1f31d
  409483:	imul   edx,edx,0xfffff4ec
  409489:	sub    r8d,eax
  40948c:	imul   eax,r8d,0x41a7
  409493:	add    eax,edx
  409495:	test   eax,eax
  409497:	jg     0x40949e
  409499:	add    eax,0x7fffffff
  40949e:	pxor   xmm0,xmm0
  4094a2:	movapd xmm4,xmm7
  4094a6:	mov    DWORD PTR [rip+0x1b94],eax        # 0x40b040
  4094ac:	cvtsi2sd xmm0,eax
  4094b0:	mulsd  xmm0,xmm12
  4094b5:	divsd  xmm0,xmm15
  4094ba:	subsd  xmm4,xmm0
  4094be:	movsd  xmm0,QWORD PTR [rsp+rcx*8+0x5a0]
  4094c7:	mulsd  xmm0,xmm4
  4094cb:	movsd  QWORD PTR [rsp+rcx*8+0x5a0],xmm0
  4094d4:	mov    r11d,DWORD PTR [rsp+0x74]
  4094d9:	test   r11d,r11d
  4094dc:	jne    0x409db6
  4094e2:	test   edi,edi
  4094e4:	jle    0x409508
  4094e6:	mov    r13,r15
  4094e9:	nop    DWORD PTR [rax+0x0]
  4094f0:	movsd  xmm0,QWORD PTR [r13+0x0]
  4094f6:	add    r13,0x8
  4094fa:	mulsd  xmm0,xmm6
  4094fe:	call   0x4015c0
  409503:	cmp    r13,rsi
  409506:	jne    0x4094f0
  409508:	mov    rdx,QWORD PTR [rip+0x7f51]        # 0x411460
  40950f:	mov    ecx,0xa
  409514:	call   0x407e48
  409519:	add    DWORD PTR [rsp+0x68],0x1
  40951e:	mov    eax,DWORD PTR [rsp+0x68]
  409522:	cmp    eax,ebp
  409524:	jne    0x409294
  40952a:	mov    r13d,DWORD PTR [rsp+0x74]
  40952f:	jmp    0x408819
  409534:	pxor   xmm1,xmm1
  409538:	lea    r12d,[rdi-0x1]
  40953c:	pxor   xmm0,xmm0
  409540:	cvtsi2sd xmm1,edi
  409544:	cvtsi2sd xmm0,ebp
  409548:	divsd  xmm7,xmm1
  40954c:	movapd xmm1,xmm7
  409550:	call   0x403400
  409555:	addsd  xmm0,QWORD PTR [rip+0x2f8b]        # 0x40c4e8
  40955d:	test   edi,edi
  40955f:	mov    eax,r12d
  409562:	cvttsd2si ebx,xmm0
  409566:	je     0x40957e
  409568:	movsxd rdx,eax
  40956b:	sub    eax,0x1
  40956e:	cmp    eax,0xffffffff
  409571:	mov    DWORD PTR [rsp+rdx*4+0x280],0x0
  40957c:	jne    0x409568
  40957e:	test   ebp,ebp
  409580:	jle    0x408819
  409586:	lea    rsi,[rsp+0x280]
  40958e:	lea    rax,[rip+0x7ecb]        # 0x411460
  409595:	xor    r14d,r14d
  409598:	movsd  xmm6,QWORD PTR [rip+0x2f50]        # 0x40c4f0
  4095a0:	xor    r15d,r15d
  4095a3:	test   edi,edi
  4095a5:	lea    r12,[rsi+r12*4+0x4]
  4095aa:	mov    QWORD PTR [rsp+0x48],rax
  4095af:	xorpd  xmm6,xmm10
  4095b4:	jle    0x409651
  4095ba:	nop    WORD PTR [rax+rax*1+0x0]
  4095c0:	test   r15,r15
  4095c3:	pxor   xmm0,xmm0
  4095c7:	je     0x409a67
  4095cd:	cmp    r15d,0x1
  4095d1:	je     0x409a35
  4095d7:	cvtsi2sd xmm0,DWORD PTR [rsi+r15*4]
  4095dd:	mulsd  xmm0,xmm8
  4095e2:	call   0x4015c0
  4095e7:	add    r15,0x1
  4095eb:	cmp    edi,r15d
  4095ee:	jg     0x4095c0
  4095f0:	mov    rax,QWORD PTR [rsp+0x48]
  4095f5:	mov    ecx,0xa
  4095fa:	mov    rdx,QWORD PTR [rax]
  4095fd:	call   0x407e48
  409602:	mov    eax,DWORD PTR [rsp+0x280]
  409609:	add    eax,0x1
  40960c:	cmp    ebx,eax
  40960e:	mov    DWORD PTR [rsp+0x280],eax
  409615:	jg     0x409639
  409617:	lea    rax,[rsi+0x4]
  40961b:	jmp    0x40962d
  40961d:	mov    ecx,DWORD PTR [rax]
  40961f:	add    rax,0x4
  409623:	lea    edx,[rcx+0x1]
  409626:	mov    DWORD PTR [rax-0x4],edx
  409629:	cmp    ebx,edx
  40962b:	jg     0x409639
  40962d:	cmp    rax,r12
  409630:	mov    DWORD PTR [rax-0x4],0x0
  409637:	jne    0x40961d
  409639:	add    r14d,0x1
  40963d:	cmp    r14d,ebp
  409640:	je     0x408819
  409646:	xor    r15d,r15d
  409649:	test   edi,edi
  40964b:	jg     0x4095c0
  409651:	mov    rax,QWORD PTR [rsp+0x48]
  409656:	mov    ecx,0xa
  40965b:	mov    rdx,QWORD PTR [rax]
  40965e:	call   0x407e48
  409663:	jmp    0x409639
  409665:	lea    eax,[rdi+0x1]
  409668:	mov    DWORD PTR [rsp+0x78],eax
  40966c:	imul   eax,edi
  40966f:	movsxd rcx,eax
  409672:	shl    rcx,0x3
  409676:	call   0x407e28
  40967b:	test   rax,rax
  40967e:	mov    QWORD PTR [rsp+0x60],rax
  409683:	je     0x409a98
  409689:	cmp    DWORD PTR [rsp+0x74],0x0
  40968e:	jne    0x40999e
  409694:	test   edi,edi
  409696:	js     0x409798
  40969c:	lea    eax,[rdi-0x1]
  40969f:	mov    ecx,DWORD PTR [rip+0x199b]        # 0x40b040
  4096a5:	mov    r8,QWORD PTR [rsp+0x60]
  4096aa:	movsd  xmm1,QWORD PTR [rip+0x2e2e]        # 0x40c4e0
  4096b2:	xor    r11d,r11d
  4096b5:	lea    rbx,[rax*8+0x8]
  4096bd:	mov    r12,rax
  4096c0:	mov    r9d,0x834e0b5f
  4096c6:	test   edi,edi
  4096c8:	je     0x409723
  4096ca:	lea    r10,[r8+rbx*1]
  4096ce:	mov    eax,ecx
  4096d0:	pxor   xmm0,xmm0
  4096d4:	imul   r9d
  4096d7:	mov    eax,ecx
  4096d9:	sar    eax,0x1f
  4096dc:	add    edx,ecx
  4096de:	sar    edx,0x10
  4096e1:	sub    edx,eax
  4096e3:	imul   eax,edx,0x1f31d
  4096e9:	imul   edx,edx,0xfffff4ec
  4096ef:	sub    ecx,eax
  4096f1:	imul   eax,ecx,0x41a7
  4096f7:	add    eax,edx
  4096f9:	lea    ecx,[rax+0x7fffffff]
  4096ff:	test   eax,eax
  409701:	cmovg  ecx,eax
  409704:	add    r8,0x8
  409708:	cvtsi2sd xmm0,ecx
  40970c:	cmp    r8,r10
  40970f:	addsd  xmm0,xmm0
  409713:	divsd  xmm0,xmm1
  409717:	subsd  xmm0,xmm7
  40971b:	movsd  QWORD PTR [r8-0x8],xmm0
  409721:	jne    0x4096ce
  409723:	add    r11d,0x1
  409727:	cmp    r11d,DWORD PTR [rsp+0x78]
  40972c:	jne    0x4096c6
  40972e:	mov    DWORD PTR [rip+0x190c],ecx        # 0x40b040
  409734:	cmp    DWORD PTR [rsp+0x48],0x0
  409739:	je     0x409798
  40973b:	lea    rax,[rip+0x7d1e]        # 0x411460
  409742:	mov    r15,QWORD PTR [rsp+0x60]
  409747:	lea    r12,[r12*8+0x8]
  40974f:	xor    esi,esi
  409751:	mov    QWORD PTR [rsp+0x48],rax
  409756:	test   r13d,r13d
  409759:	jne    0x40998c
  40975f:	test   edi,edi
  409761:	jle    0x40977f
  409763:	lea    rbx,[r15+r12*1]
  409767:	add    r15,0x8
  40976b:	movsd  xmm0,QWORD PTR [r15-0x8]
  409771:	mulsd  xmm0,xmm6
  409775:	call   0x4015c0
  40977a:	cmp    r15,rbx
  40977d:	jne    0x409767
  40977f:	mov    rax,QWORD PTR [rsp+0x48]
  409784:	mov    ecx,0xa
  409789:	add    esi,0x1
  40978c:	mov    rdx,QWORD PTR [rax]
  40978f:	call   0x407e48
  409794:	cmp    esi,edi
  409796:	jle    0x409756
  409798:	test   ebp,ebp
  40979a:	jle    0x4091a8
  4097a0:	lea    eax,[rdi-0x1]
  4097a3:	lea    r15,[rsp+0x5a0]
  4097ab:	lea    rcx,[rip+0x7cae]        # 0x411460
  4097b2:	movsd  xmm9,QWORD PTR [rip+0x2d25]        # 0x40c4e0
  4097bb:	mov    DWORD PTR [rsp+0x74],0x0
  4097c3:	lea    rsi,[rax*8+0x8]
  4097cb:	movsxd rax,edi
  4097ce:	mov    QWORD PTR [rsp+0x48],rcx
  4097d3:	shl    rax,0x3
  4097d7:	movsd  xmm11,QWORD PTR [rip+0x2ce8]        # 0x40c4c8
  4097e0:	lea    rbx,[r15+rsi*1]
  4097e4:	mov    r12,rax
  4097e7:	mov    r9d,DWORD PTR [rsp+0x5c]
  4097ec:	mov    r10d,0xffffffff
  4097f2:	test   r9d,r9d
  4097f5:	je     0x40983e
  4097f7:	mov    ecx,DWORD PTR [rip+0x1843]        # 0x40b040
  4097fd:	mov    edx,0x834e0b5f
  409802:	mov    eax,ecx
  409804:	imul   edx
  409806:	mov    eax,ecx
  409808:	sar    eax,0x1f
  40980b:	add    edx,ecx
  40980d:	sar    edx,0x10
  409810:	sub    edx,eax
  409812:	imul   eax,edx,0x1f31d
  409818:	imul   edx,edx,0xfffff4ec
  40981e:	sub    ecx,eax
  409820:	imul   eax,ecx,0x41a7
  409826:	add    eax,edx
  409828:	test   eax,eax
  40982a:	jle    0x409982
  409830:	cdq    
  409831:	mov    DWORD PTR [rip+0x1809],eax        # 0x40b040
  409837:	idiv   DWORD PTR [rsp+0x78]
  40983b:	mov    r10d,edx
  40983e:	cmp    edi,0x0
  409841:	jle    0x40916d
  409847:	mov    rax,r15
  40984a:	nop    WORD PTR [rax+rax*1+0x0]
  409850:	mov    QWORD PTR [rax],0x0
  409857:	add    rax,0x8
  40985b:	cmp    rax,rbx
  40985e:	jne    0x409850
  409860:	mov    r8d,DWORD PTR [rip+0x17d9]        # 0x40b040
  409867:	mov    rcx,QWORD PTR [rsp+0x60]
  40986c:	xor    r9d,r9d
  40986f:	movapd xmm2,xmm14
  409874:	mov    r11d,0x834e0b5f
  40987a:	nop    WORD PTR [rax+rax*1+0x0]
  409880:	mov    eax,r8d
  409883:	pxor   xmm1,xmm1
  409887:	imul   r11d
  40988a:	mov    eax,r8d
  40988d:	sar    eax,0x1f
  409890:	add    edx,r8d
  409893:	sar    edx,0x10
  409896:	sub    edx,eax
  409898:	imul   eax,edx,0x1f31d
  40989e:	imul   edx,edx,0xfffff4ec
  4098a4:	sub    r8d,eax
  4098a7:	imul   eax,r8d,0x41a7
  4098ae:	add    eax,edx
  4098b0:	lea    r8d,[rax+0x7fffffff]
  4098b7:	test   eax,eax
  4098b9:	cmovg  r8d,eax
  4098bd:	cmp    r9d,r10d
  4098c0:	cvtsi2sd xmm1,r8d
  4098c5:	divsd  xmm1,xmm9
  4098ca:	je     0x40a56b
  4098d0:	test   edi,edi
  4098d2:	addsd  xmm2,xmm1
  4098d6:	jle    0x409900
  4098d8:	xor    edx,edx
  4098da:	nop    WORD PTR [rax+rax*1+0x0]
  4098e0:	movsd  xmm0,QWORD PTR [rcx+rdx*1]
  4098e5:	add    rdx,0x8
  4098e9:	mulsd  xmm0,xmm1
  4098ed:	addsd  xmm0,QWORD PTR [rdx+r15*1-0x8]
  4098f4:	movsd  QWORD PTR [rdx+r15*1-0x8],xmm0
  4098fb:	cmp    rsi,rdx
  4098fe:	jne    0x4098e0
  409900:	add    r9d,0x1
  409904:	add    rcx,r12
  409907:	cmp    r9d,edi
  40990a:	jle    0x409880
  409910:	test   edi,edi
  409912:	mov    DWORD PTR [rip+0x1727],r8d        # 0x40b040
  409919:	jle    0x409173
  40991f:	mov    rax,r15
  409922:	movsd  xmm0,QWORD PTR [rax]
  409926:	add    rax,0x8
  40992a:	divsd  xmm0,xmm2
  40992e:	movsd  QWORD PTR [rax-0x8],xmm0
  409933:	cmp    rbx,rax
  409936:	jne    0x409922
  409938:	test   r13d,r13d
  40993b:	jne    0x40995d
  40993d:	xor    r14d,r14d
  409940:	movsd  xmm0,QWORD PTR [r15+r14*8]
  409946:	add    r14,0x1
  40994a:	mulsd  xmm0,xmm6
  40994e:	call   0x4015c0
  409953:	cmp    edi,r14d
  409956:	jg     0x409940
  409958:	jmp    0x409185
  40995d:	movapd xmm0,xmm11
  409962:	call   0x4015c0
  409967:	jmp    0x40993d
  409969:	movapd xmm13,xmm7
  40996e:	jmp    0x408674
  409973:	mov    DWORD PTR [rip+0x16c3],0x1        # 0x40b040
  40997d:	jmp    0x40853e
  409982:	add    eax,0x7fffffff
  409987:	jmp    0x409830
  40998c:	movsd  xmm0,QWORD PTR [rip+0x2b34]        # 0x40c4c8
  409994:	call   0x4015c0
  409999:	jmp    0x40975f
  40999e:	test   edi,edi
  4099a0:	jle    0x409a11
  4099a2:	lea    ecx,[rdi-0x1]
  4099a5:	mov    r8,QWORD PTR [rsp+0x60]
  4099aa:	xor    edx,edx
  4099ac:	movapd xmm2,xmm7
  4099b0:	mov    r12,rcx
  4099b3:	add    rcx,0x1
  4099b7:	lea    r9,[rcx*8+0x0]
  4099bf:	movapd xmm1,xmm14
  4099c4:	xor    eax,eax
  4099c6:	cmp    edx,eax
  4099c8:	je     0x409a2f
  4099ca:	movapd xmm0,xmm1
  4099ce:	movsd  QWORD PTR [r8+rax*8],xmm0
  4099d4:	add    rax,0x1
  4099d8:	cmp    edi,eax
  4099da:	jg     0x4099c6
  4099dc:	add    edx,0x1
  4099df:	add    r8,r9
  4099e2:	cmp    edx,edi
  4099e4:	jne    0x4099c4
  4099e6:	imul   rcx,rcx
  4099ea:	mov    rax,QWORD PTR [rsp+0x60]
  4099ef:	lea    rax,[rax+rcx*8]
  4099f3:	add    r9,rax
  4099f6:	add    rax,0x8
  4099fa:	movsd  xmm5,QWORD PTR [rip+0x2ad6]        # 0x40c4d8
  409a02:	cmp    rax,r9
  409a05:	movsd  QWORD PTR [rax-0x8],xmm5
  409a0a:	jne    0x4099f6
  409a0c:	jmp    0x409734
  409a11:	cmp    DWORD PTR [rsp+0x48],0x0
  409a16:	je     0x409798
  409a1c:	test   edi,edi
  409a1e:	jne    0x409798
  409a24:	mov    r12d,0xffffffff
  409a2a:	jmp    0x40973b
  409a2f:	movapd xmm0,xmm2
  409a33:	jmp    0x4099ce
  409a35:	cvtsi2sd xmm0,DWORD PTR [rsp+0x280]
  409a3e:	movapd xmm1,xmm0
  409a42:	pxor   xmm0,xmm0
  409a46:	mulsd  xmm1,xmm10
  409a4b:	cvtsi2sd xmm0,DWORD PTR [rsp+0x284]
  409a54:	mulsd  xmm0,xmm12
  409a59:	addsd  xmm0,xmm1
  409a5d:	call   0x4015c0
  409a62:	jmp    0x4095e7
  409a67:	cvtsi2sd xmm0,DWORD PTR [rsp+0x280]
  409a70:	movapd xmm1,xmm0
  409a74:	pxor   xmm0,xmm0
  409a78:	mulsd  xmm1,xmm12
  409a7d:	cvtsi2sd xmm0,DWORD PTR [rsp+0x284]
  409a86:	mulsd  xmm0,xmm6
  409a8a:	addsd  xmm0,xmm1
  409a8e:	call   0x4015c0
  409a93:	jmp    0x4095e7
  409a98:	mov    rax,QWORD PTR [rsp+0x38]
  409a9d:	call   rax
  409a9f:	lea    rcx,[rip+0x285a]        # 0x40c300
  409aa6:	lea    r9,[rax+0x60]
  409aaa:	mov    r8d,0x20
  409ab0:	mov    edx,0x1
  409ab5:	call   0x407e38
  409aba:	xor    ecx,ecx
  409abc:	call   0x407e58
  409ac1:	mov    rax,QWORD PTR [rsp+0x38]
  409ac6:	call   rax
  409ac8:	lea    rcx,[rip+0x2859]        # 0x40c328
  409acf:	lea    r9,[rax+0x60]
  409ad3:	mov    r8d,0x3c
  409ad9:	mov    edx,0x1
  409ade:	call   0x407e38
  409ae3:	mov    ecx,0x1
  409ae8:	call   0x407e58
  409aed:	mov    rbx,QWORD PTR [r12]
  409af1:	mov    rax,QWORD PTR [rsp+0x38]
  409af6:	call   rax
  409af8:	lea    rdx,[rip+0x2789]        # 0x40c288
  409aff:	lea    rcx,[rax+0x60]
  409b03:	mov    r8,rbx
  409b06:	call   0x407e50
  409b0b:	mov    ecx,0x1
  409b10:	call   0x407e58
  409b15:	mov    esi,DWORD PTR [rsp+0x50]
  409b19:	lea    eax,[rbp+0x2]
  409b1c:	lea    edx,[rbp+rbp*1+0x1]
  409b20:	test   esi,esi
  409b22:	cmovne eax,edx
  409b25:	jmp    0x40844e
  409b2a:	mov    esi,DWORD PTR [rsp+0x44]
  409b2e:	lea    edx,[rbp+rbp*1-0x2]
  409b32:	test   esi,esi
  409b34:	cmovne eax,edx
  409b37:	jmp    0x40844e
  409b3c:	mov    rax,QWORD PTR [rsp+0x38]
  409b41:	call   rax
  409b43:	movapd xmm2,xmm13
  409b48:	lea    rcx,[rax+0x60]
  409b4c:	movq   r8,xmm13
  409b51:	lea    rdx,[rip+0x2650]        # 0x40c1a8
  409b58:	call   0x407e50
  409b5d:	mov    ecx,0x1
  409b62:	call   0x407e58
  409b67:	mov    rax,QWORD PTR [rsp+0x38]
  409b6c:	call   rax
  409b6e:	lea    rcx,[rip+0x2603]        # 0x40c178
  409b75:	lea    r9,[rax+0x60]
  409b79:	mov    r8d,0x2b
  409b7f:	mov    edx,0x1
  409b84:	call   0x407e38
  409b89:	mov    ecx,0x1
  409b8e:	call   0x407e58
  409b93:	call   0x403000
  409b98:	movapd xmm1,xmm0
  409b9c:	jmp    0x408bad
  409ba1:	cmp    BYTE PTR [rsp+0x48],0x0
  409ba6:	je     0x409e48
  409bac:	test   BYTE PTR [rsp+0x40],0x1
  409bb1:	je     0x409eee
  409bb7:	test   r14d,r14d
  409bba:	jne    0x409bc4
  409bbc:	movapd xmm11,xmm7
  409bc1:	mov    r14b,0x1
  409bc4:	mov    ecx,DWORD PTR [rip+0x1476]        # 0x40b040
  409bca:	mov    edx,0x834e0b5f
  409bcf:	mov    eax,ecx
  409bd1:	imul   edx
  409bd3:	mov    eax,ecx
  409bd5:	sar    eax,0x1f
  409bd8:	add    edx,ecx
  409bda:	sar    edx,0x10
  409bdd:	sub    edx,eax
  409bdf:	imul   eax,edx,0x1f31d
  409be5:	imul   edx,edx,0xfffff4ec
  409beb:	sub    ecx,eax
  409bed:	imul   eax,ecx,0x41a7
  409bf3:	add    eax,edx
  409bf5:	test   eax,eax
  409bf7:	jg     0x409bfe
  409bf9:	add    eax,0x7fffffff
  409bfe:	pxor   xmm1,xmm1
  409c02:	movapd xmm4,xmm7
  409c06:	mov    DWORD PTR [rip+0x1434],eax        # 0x40b040
  409c0c:	cvtsi2sd xmm1,eax
  409c10:	mov    eax,DWORD PTR [rsp+0x44]
  409c14:	test   eax,eax
  409c16:	mulsd  xmm1,xmm11
  409c1b:	divsd  xmm1,QWORD PTR [rip+0x28bd]        # 0x40c4e0
  409c23:	subsd  xmm4,xmm1
  409c27:	movapd xmm1,xmm4
  409c2b:	divsd  xmm1,xmm0
  409c2f:	jle    0x409c4b
  409c31:	mov    rax,r15
  409c34:	add    rax,0x8
  409c38:	movsd  xmm0,QWORD PTR [rax-0x8]
  409c3d:	mulsd  xmm0,xmm1
  409c41:	movsd  QWORD PTR [rax-0x8],xmm0
  409c46:	cmp    rbx,rax
  409c49:	jne    0x409c34
  409c4b:	cmp    BYTE PTR [rsp+0x48],0x0
  409c50:	je     0x409dc8
  409c56:	movsd  xmm5,QWORD PTR [rsp+0xb8]
  409c5f:	movsxd rcx,r12d
  409c62:	test   edi,edi
  409c64:	movsd  QWORD PTR [rsp+rcx*8+0x5a0],xmm5
  409c6d:	jle    0x409cbe
  409c6f:	movapd xmm2,xmm14
  409c74:	mov    rax,r15
  409c77:	mov    rdx,r15
  409c7a:	nop    WORD PTR [rax+rax*1+0x0]
  409c80:	movsd  xmm0,QWORD PTR [rdx]
  409c84:	add    rdx,0x8
  409c88:	cmp    rsi,rdx
  409c8b:	mulsd  xmm0,xmm0
  409c8f:	addsd  xmm2,xmm0
  409c93:	jne    0x409c80
  409c95:	sqrtsd xmm0,xmm2
  409c99:	ucomisd xmm0,xmm0
  409c9d:	jp     0x40a078
  409ca3:	movsd  xmm1,QWORD PTR [rax]
  409ca7:	add    rax,0x8
  409cab:	mulsd  xmm1,xmm13
  409cb0:	divsd  xmm1,xmm0
  409cb4:	movsd  QWORD PTR [rax-0x8],xmm1
  409cb9:	cmp    rsi,rax
  409cbc:	jne    0x409ca3
  409cbe:	movsd  xmm1,QWORD PTR [rsp+rcx*8+0x5a0]
  409cc7:	mov    eax,DWORD PTR [rsp+0x5c]
  409ccb:	subsd  xmm1,QWORD PTR [rsp+0xb8]
  409cd4:	test   eax,eax
  409cd6:	movsd  QWORD PTR [rsp+rcx*8+0x5a0],xmm1
  409cdf:	je     0x409d3b
  409ce1:	mov    eax,DWORD PTR [rip+0x1359]        # 0x40b040
  409ce7:	mov    r8d,0x1f31d
  409ced:	cdq    
  409cee:	idiv   r8d
  409cf1:	imul   edx,edx,0x41a7
  409cf7:	imul   eax,eax,0xfffff4ec
  409cfd:	add    eax,edx
  409cff:	test   eax,eax
  409d01:	jle    0x40a09a
  409d07:	pxor   xmm0,xmm0
  409d0b:	mov    DWORD PTR [rip+0x132f],eax        # 0x40b040
  409d11:	movapd xmm5,xmm7
  409d15:	cvtsi2sd xmm0,DWORD PTR [rip+0x1323]        # 0x40b040
  409d1d:	mulsd  xmm0,xmm12
  409d22:	divsd  xmm0,QWORD PTR [rip+0x27b6]        # 0x40c4e0
  409d2a:	subsd  xmm5,xmm0
  409d2e:	mulsd  xmm1,xmm5
  409d32:	movsd  QWORD PTR [rsp+rcx*8+0x5a0],xmm1
  409d3b:	mov    r8d,DWORD PTR [rip+0x12fe]        # 0x40b040
  409d42:	mov    edx,0x834e0b5f
  409d47:	mov    eax,r8d
  409d4a:	imul   edx
  409d4c:	mov    eax,r8d
  409d4f:	sar    eax,0x1f
  409d52:	add    edx,r8d
  409d55:	sar    edx,0x10
  409d58:	sub    edx,eax
  409d5a:	imul   eax,edx,0x1f31d
  409d60:	imul   edx,edx,0xfffff4ec
  409d66:	sub    r8d,eax
  409d69:	imul   eax,r8d,0x41a7
  409d70:	add    eax,edx
  409d72:	test   eax,eax
  409d74:	jle    0x40a12c
  409d7a:	pxor   xmm0,xmm0
  409d7e:	mov    DWORD PTR [rip+0x12bc],eax        # 0x40b040
  409d84:	cvtsi2sd xmm0,DWORD PTR [rip+0x12b4]        # 0x40b040
  409d8c:	ucomisd xmm0,QWORD PTR [rip+0x2774]        # 0x40c508
  409d94:	jbe    0x4094d4
  409d9a:	movsd  xmm0,QWORD PTR [rsp+rcx*8+0x5a0]
  409da3:	xorpd  xmm0,xmm9
  409da8:	movsd  QWORD PTR [rsp+rcx*8+0x5a0],xmm0
  409db1:	jmp    0x4094d4
  409db6:	movsd  xmm0,QWORD PTR [rip+0x270a]        # 0x40c4c8
  409dbe:	call   0x4015c0
  409dc3:	jmp    0x4094e2
  409dc8:	mov    r13d,DWORD PTR [rsp+0x5c]
  409dcd:	test   r13d,r13d
  409dd0:	je     0x4094d4
  409dd6:	cmp    BYTE PTR [rsp+0x60],0x0
  409ddb:	je     0x4094d4
  409de1:	mov    eax,DWORD PTR [rip+0x1259]        # 0x40b040
  409de7:	mov    ecx,0x1f31d
  409dec:	cdq    
  409ded:	idiv   ecx
  409def:	imul   edx,edx,0x41a7
  409df5:	imul   eax,eax,0xfffff4ec
  409dfb:	add    eax,edx
  409dfd:	test   eax,eax
  409dff:	jle    0x40a165
  409e05:	mov    DWORD PTR [rip+0x1235],eax        # 0x40b040
  409e0b:	mov    eax,DWORD PTR [rip+0x122f]        # 0x40b040
  409e11:	cdq    
  409e12:	idiv   DWORD PTR [rsp+0x44]
  409e16:	movsxd rax,edx
  409e19:	movsd  xmm0,QWORD PTR [rsp+rax*8+0x5a0]
  409e22:	ucomisd xmm14,xmm0
  409e27:	mulsd  xmm0,xmm12
  409e2c:	ja     0x40a14e
  409e32:	movapd xmm4,xmm7
  409e36:	subsd  xmm4,xmm0
  409e3a:	movsd  QWORD PTR [rsp+rax*8+0x5a0],xmm4
  409e43:	jmp    0x4094d4
  409e48:	mov    eax,DWORD PTR [rsp+0x98]
  409e4f:	test   eax,eax
  409e51:	je     0x409f82
  409e57:	cmp    edi,0x3
  409e5a:	jne    0x40a0c8
  409e60:	pxor   xmm1,xmm1
  409e64:	lea    eax,[rbp-0x1]
  409e67:	pxor   xmm15,xmm15
  409e6c:	movsd  xmm2,QWORD PTR [rip+0x268c]        # 0x40c500
  409e74:	cvtsi2sd xmm1,eax
  409e78:	cvtsi2sd xmm15,DWORD PTR [rsp+0x68]
  409e7f:	mulsd  xmm2,xmm15
  409e84:	divsd  xmm2,xmm1
  409e88:	movsd  QWORD PTR [rsp+0x78],xmm1
  409e8e:	movapd xmm0,xmm2
  409e92:	movsd  QWORD PTR [rsp+0x50],xmm2
  409e98:	call   0x403130
  409e9d:	movsd  xmm2,QWORD PTR [rsp+0x50]
  409ea3:	movsd  QWORD PTR [rsp+0x5a0],xmm0
  409eac:	movapd xmm0,xmm2
  409eb0:	call   0x4039f0
  409eb5:	movsd  QWORD PTR [rsp+0x5a8],xmm0
  409ebe:	movapd xmm0,xmm15
  409ec3:	movsd  xmm1,QWORD PTR [rsp+0x78]
  409ec9:	addsd  xmm0,xmm15
  409ece:	divsd  xmm0,xmm1
  409ed2:	subsd  xmm0,xmm7
  409ed6:	movsd  QWORD PTR [rsp+0x5b0],xmm0
  409edf:	jmp    0x409c4b
  409ee4:	add    eax,0x7fffffff
  409ee9:	jmp    0x409384
  409eee:	cmp    BYTE PTR [rsp+0x60],0x0
  409ef3:	je     0x409e48
  409ef9:	test   r14d,r14d
  409efc:	jne    0x409f06
  409efe:	movapd xmm11,xmm7
  409f03:	mov    r14b,0x1
  409f06:	mov    ecx,DWORD PTR [rip+0x1134]        # 0x40b040
  409f0c:	mov    edx,0x834e0b5f
  409f11:	mov    eax,ecx
  409f13:	imul   edx
  409f15:	mov    eax,ecx
  409f17:	sar    eax,0x1f
  409f1a:	add    edx,ecx
  409f1c:	sar    edx,0x10
  409f1f:	sub    edx,eax
  409f21:	imul   eax,edx,0x1f31d
  409f27:	imul   edx,edx,0xfffff4ec
  409f2d:	sub    ecx,eax
  409f2f:	imul   eax,ecx,0x41a7
  409f35:	add    eax,edx
  409f37:	test   eax,eax
  409f39:	jle    0x40a0be
  409f3f:	mov    DWORD PTR [rip+0x10fb],eax        # 0x40b040
  409f45:	mov    eax,DWORD PTR [rip+0x10f5]        # 0x40b040
  409f4b:	cdq    
  409f4c:	idiv   DWORD PTR [rsp+0x44]
  409f50:	movsxd rax,edx
  409f53:	movsd  xmm0,QWORD PTR [rsp+rax*8+0x5a0]
  409f5c:	ucomisd xmm14,xmm0
  409f61:	mulsd  xmm0,xmm11
  409f66:	ja     0x40a0a4
  409f6c:	movapd xmm5,xmm7
  409f70:	subsd  xmm5,xmm0
  409f74:	movsd  QWORD PTR [rsp+rax*8+0x5a0],xmm5
  409f7d:	jmp    0x409c4b
  409f82:	cmp    DWORD PTR [rsp+0x40],0x0
  409f87:	je     0x409c4b
  409f8d:	cmp    DWORD PTR [rsp+0x5c],0x0
  409f92:	movapd xmm1,xmm7
  409f96:	divsd  xmm1,xmm0
  409f9a:	je     0x409fec
  409f9c:	mov    eax,DWORD PTR [rip+0x109e]        # 0x40b040
  409fa2:	mov    ecx,0x1f31d
  409fa7:	cdq    
  409fa8:	idiv   ecx
  409faa:	imul   edx,edx,0x41a7
  409fb0:	imul   eax,eax,0xfffff4ec
  409fb6:	add    eax,edx
  409fb8:	test   eax,eax
  409fba:	jg     0x409fc1
  409fbc:	add    eax,0x7fffffff
  409fc1:	pxor   xmm0,xmm0
  409fc5:	mov    DWORD PTR [rip+0x1075],eax        # 0x40b040
  409fcb:	movapd xmm3,xmm7
  409fcf:	cvtsi2sd xmm0,DWORD PTR [rip+0x1069]        # 0x40b040
  409fd7:	mulsd  xmm0,xmm12
  409fdc:	divsd  xmm0,QWORD PTR [rip+0x24fc]        # 0x40c4e0
  409fe4:	subsd  xmm3,xmm0
  409fe8:	mulsd  xmm1,xmm3
  409fec:	test   edi,edi
  409fee:	jle    0x409c4b
  409ff4:	mov    rax,r15
  409ff7:	movsd  xmm0,QWORD PTR [rax]
  409ffb:	add    rax,0x8
  409fff:	mulsd  xmm0,xmm1
  40a003:	movsd  QWORD PTR [rax-0x8],xmm0
  40a008:	cmp    rsi,rax
  40a00b:	jne    0x409ff7
  40a00d:	jmp    0x409c4b
  40a012:	mov    ecx,DWORD PTR [rip+0x1028]        # 0x40b040
  40a018:	mov    edx,0x834e0b5f
  40a01d:	mov    eax,ecx
  40a01f:	imul   edx
  40a021:	mov    eax,ecx
  40a023:	sar    eax,0x1f
  40a026:	add    edx,ecx
  40a028:	sar    edx,0x10
  40a02b:	sub    edx,eax
  40a02d:	imul   eax,edx,0x1f31d
  40a033:	imul   edx,edx,0xfffff4ec
  40a039:	sub    ecx,eax
  40a03b:	imul   eax,ecx,0x41a7
  40a041:	add    eax,edx
  40a043:	test   eax,eax
  40a045:	jg     0x40a04c
  40a047:	add    eax,0x7fffffff
  40a04c:	pxor   xmm0,xmm0
  40a050:	movsxd rdx,r12d
  40a053:	mov    DWORD PTR [rip+0xfe7],eax        # 0x40b040
  40a059:	cvtsi2sd xmm0,eax
  40a05d:	addsd  xmm0,xmm0
  40a061:	divsd  xmm0,xmm15
  40a066:	subsd  xmm0,xmm7
  40a06a:	movsd  QWORD PTR [rsp+rdx*8+0x5a0],xmm0
  40a073:	jmp    0x4094d4
  40a078:	movapd xmm0,xmm2
  40a07c:	mov    QWORD PTR [rsp+0x78],rcx
  40a081:	mov    QWORD PTR [rsp+0x50],rax
  40a086:	call   0x403000
  40a08b:	mov    rax,QWORD PTR [rsp+0x50]
  40a090:	mov    rcx,QWORD PTR [rsp+0x78]
  40a095:	jmp    0x409ca3
  40a09a:	add    eax,0x7fffffff
  40a09f:	jmp    0x409d07
  40a0a4:	movsd  xmm1,QWORD PTR [rip+0x242c]        # 0x40c4d8
  40a0ac:	subsd  xmm1,xmm0
  40a0b0:	movsd  QWORD PTR [rsp+rax*8+0x5a0],xmm1
  40a0b9:	jmp    0x409c4b
  40a0be:	add    eax,0x7fffffff
  40a0c3:	jmp    0x409f3f
  40a0c8:	mov    rax,QWORD PTR [rsp+0x38]
  40a0cd:	call   rax
  40a0cf:	lea    rcx,[rip+0x2292]        # 0x40c368
  40a0d6:	lea    r9,[rax+0x60]
  40a0da:	mov    r8d,0x39
  40a0e0:	mov    edx,0x1
  40a0e5:	call   0x407e38
  40a0ea:	mov    ecx,0x1
  40a0ef:	call   0x407e58
  40a0f4:	cmp    DWORD PTR [rsp+0x40],0x0
  40a0f9:	je     0x40a012
  40a0ff:	movsxd rcx,r12d
  40a102:	movapd xmm2,xmm7
  40a106:	movsd  QWORD PTR [rsp+rcx*8+0x5a0],xmm7
  40a10f:	jmp    0x409425
  40a114:	movapd xmm0,xmm2
  40a118:	mov    QWORD PTR [rsp+0x50],rcx
  40a11d:	call   0x403000
  40a122:	mov    rcx,QWORD PTR [rsp+0x50]
  40a127:	jmp    0x409433
  40a12c:	add    eax,0x7fffffff
  40a131:	jmp    0x409d7a
  40a136:	movapd xmm0,xmm2
  40a13a:	call   0x403000
  40a13f:	jmp    0x409332
  40a144:	movapd xmm2,xmm14
  40a149:	jmp    0x409324
  40a14e:	movapd xmm3,xmm10
  40a153:	subsd  xmm3,xmm0
  40a157:	movsd  QWORD PTR [rsp+rax*8+0x5a0],xmm3
  40a160:	jmp    0x4094d4
  40a165:	add    eax,0x7fffffff
  40a16a:	jmp    0x409e05
  40a16f:	mov    rax,QWORD PTR [rsp+0x38]
  40a174:	call   rax
  40a176:	lea    rcx,[rip+0x2083]        # 0x40c200
  40a17d:	lea    r9,[rax+0x60]
  40a181:	mov    r8d,0x55
  40a187:	mov    edx,0x1
  40a18c:	call   0x407e38
  40a191:	mov    ecx,0x1
  40a196:	call   0x407e58
  40a19b:	mov    rax,QWORD PTR [rip+0x818a]        # 0x41232c
  40a1a2:	movsd  QWORD PTR [rsp+0x90],xmm14
  40a1ac:	mov    DWORD PTR [rsp+0x68],0x0
  40a1b4:	movsd  QWORD PTR [rsp+0xb0],xmm14
  40a1be:	mov    DWORD PTR [rsp+0x48],0x0
  40a1c6:	mov    DWORD PTR [rsp+0x78],0x0
  40a1ce:	mov    DWORD PTR [rsp+0x9c],0x0
  40a1d9:	xor    r13d,r13d
  40a1dc:	xor    ebp,ebp
  40a1de:	mov    DWORD PTR [rsp+0xac],0x0
  40a1e9:	mov    edi,0x3
  40a1ee:	mov    DWORD PTR [rsp+0x70],0x0
  40a1f6:	mov    DWORD PTR [rsp+0xa8],0x0
  40a201:	mov    DWORD PTR [rsp+0x98],0x0
  40a20c:	mov    DWORD PTR [rsp+0x50],0x0
  40a214:	mov    DWORD PTR [rsp+0x6c],0x0
  40a21c:	mov    DWORD PTR [rsp+0x5c],0x0
  40a224:	mov    DWORD PTR [rsp+0x74],0x0
  40a22c:	mov    DWORD PTR [rsp+0x44],0x0
  40a234:	mov    DWORD PTR [rsp+0x58],0x0
  40a23c:	mov    DWORD PTR [rsp+0x40],0x0
  40a244:	mov    DWORD PTR [rsp+0xa4],0x0
  40a24f:	mov    DWORD PTR [rsp+0x60],0x0
  40a257:	mov    QWORD PTR [rsp+0x38],rax
  40a25c:	jmp    0x4082fb
  40a261:	pxor   xmm0,xmm0
  40a265:	lea    esi,[rbp-0x1]
  40a268:	movapd xmm9,xmm11
  40a26d:	cvtsi2sd xmm0,esi
  40a271:	addsd  xmm9,xmm11
  40a276:	divsd  xmm9,xmm0
  40a27b:	movapd xmm0,xmm11
  40a280:	call   0x403130
  40a285:	test   ebp,ebp
  40a287:	movapd xmm14,xmm0
  40a28c:	jle    0x408819
  40a292:	xor    ebx,ebx
  40a294:	movsd  xmm12,QWORD PTR [rip+0x2253]        # 0x40c4f0
  40a29d:	movsd  xmm10,QWORD PTR [rip+0x2222]        # 0x40c4c8
  40a2a6:	jmp    0x40a2ed
  40a2a8:	mulsd  xmm7,xmm6
  40a2ac:	movapd xmm1,xmm8
  40a2b1:	mulsd  xmm1,xmm6
  40a2b5:	movapd xmm0,xmm7
  40a2b9:	call   0x401620
  40a2be:	test   ebx,ebx
  40a2c0:	je     0x40a2dd
  40a2c2:	cmp    ebx,esi
  40a2c4:	je     0x40a2dd
  40a2c6:	movapd xmm1,xmm8
  40a2cb:	movapd xmm0,xmm7
  40a2cf:	xorpd  xmm1,xmm12
  40a2d4:	mulsd  xmm1,xmm6
  40a2d8:	call   0x401620
  40a2dd:	add    ebx,0x1
  40a2e0:	subsd  xmm11,xmm9
  40a2e5:	cmp    ebx,ebp
  40a2e7:	je     0x408819
  40a2ed:	movapd xmm0,xmm11
  40a2f2:	call   0x4039f0
  40a2f7:	movapd xmm7,xmm0
  40a2fb:	movapd xmm0,xmm11
  40a300:	mulsd  xmm7,xmm13
  40a305:	call   0x403130
  40a30a:	subsd  xmm0,xmm14
  40a30f:	test   r13d,r13d
  40a312:	movapd xmm8,xmm0
  40a317:	mulsd  xmm8,xmm13
  40a31c:	je     0x40a2a8
  40a31e:	movsd  xmm0,QWORD PTR [rip+0x21a2]        # 0x40c4c8
  40a326:	call   0x4015c0
  40a32b:	mulsd  xmm7,xmm6
  40a32f:	movapd xmm1,xmm8
  40a334:	mulsd  xmm1,xmm6
  40a338:	movapd xmm0,xmm7
  40a33c:	call   0x401620
  40a341:	test   ebx,ebx
  40a343:	je     0x40a2dd
  40a345:	cmp    ebx,esi
  40a347:	je     0x40a2dd
  40a349:	movapd xmm0,xmm10
  40a34e:	call   0x4015c0
  40a353:	jmp    0x40a2c6
  40a358:	lea    rcx,[rax+0x1]
  40a35c:	add    edi,0x2
  40a35f:	call   0x407e70
  40a364:	mov    DWORD PTR [rsp+0x70],0x1
  40a36c:	movsd  QWORD PTR [rsp+0x88],xmm0
  40a375:	jmp    0x4082d7
  40a37a:	movsd  xmm1,QWORD PTR [rip+0x214e]        # 0x40c4d0
  40a382:	lea    rcx,[rip+0xcf7]        # 0x40b080
  40a389:	movsd  xmm0,QWORD PTR [rip+0x20ff]        # 0x40c490
  40a391:	movapd xmm2,xmm1
  40a395:	movq   r8,xmm1
  40a39a:	movq   rdx,xmm0
  40a39f:	movapd xmm1,xmm0
  40a3a3:	call   0x407e18
  40a3a8:	mov    ecx,0x1
  40a3ad:	call   0x407e58
  40a3b2:	mov    edi,DWORD PTR [rsp+0xa0]
  40a3b9:	mov    rax,QWORD PTR [rsp+0x38]
  40a3be:	call   rax
  40a3c0:	lea    rdx,[rip+0x1cd9]        # 0x40c0a0
  40a3c7:	lea    rcx,[rax+0x60]
  40a3cb:	mov    r8d,edi
  40a3ce:	call   0x407e50
  40a3d3:	mov    ecx,0x1
  40a3d8:	call   0x407e58
  40a3dd:	lea    rcx,[rax+0x1]
  40a3e1:	add    edi,0x2
  40a3e4:	call   0x407e70
  40a3e9:	mov    DWORD PTR [rsp+0x6c],0x1
  40a3f1:	movsd  QWORD PTR [rsp+0x80],xmm0
  40a3fa:	jmp    0x4082d7
  40a3ff:	mov    rdx,QWORD PTR [rsp+0x90]
  40a407:	add    rcx,0x1
  40a40b:	mov    QWORD PTR [rsp+0xd0],rcx
  40a413:	call   0x402d70
  40a418:	mov    rcx,QWORD PTR [rsp+0xd0]
  40a420:	movapd xmm10,xmm0
  40a425:	cmp    BYTE PTR [rcx],0x2c
  40a428:	jne    0x40a579
  40a42e:	mov    rdx,QWORD PTR [rsp+0x90]
  40a436:	add    rcx,0x1
  40a43a:	mov    QWORD PTR [rsp+0xd0],rcx
  40a442:	call   0x402d70
  40a447:	movapd xmm8,xmm0
  40a44c:	jmp    0x408bb2
  40a451:	pxor   xmm0,xmm0
  40a455:	lea    r12d,[rdi-0x1]
  40a459:	xor    ebp,ebp
  40a45b:	cvtsi2sd xmm0,edi
  40a45f:	divsd  xmm7,xmm0
  40a463:	pxor   xmm0,xmm0
  40a467:	movapd xmm1,xmm7
  40a46b:	call   0x403400
  40a470:	addsd  xmm0,QWORD PTR [rip+0x2070]        # 0x40c4e8
  40a478:	test   edi,edi
  40a47a:	mov    eax,r12d
  40a47d:	cvttsd2si ebx,xmm0
  40a481:	jne    0x409568
  40a487:	jmp    0x408819
  40a48c:	cmp    BYTE PTR [rsp+0x48],0x1
  40a491:	mov    eax,edi
  40a493:	adc    eax,0xffffffff
  40a496:	mov    DWORD PTR [rsp+0x44],eax
  40a49a:	jmp    0x40921e
  40a49f:	call   0x403000
  40a4a4:	movapd xmm15,xmm0
  40a4a9:	jmp    0x4087d1
  40a4ae:	call   0x403000
  40a4b3:	movapd xmm15,xmm0
  40a4b8:	jmp    0x408745
  40a4bd:	test   r13d,r13d
  40a4c0:	jne    0x40a528
  40a4c2:	movsd  xmm2,QWORD PTR [rip+0x2026]        # 0x40c4f0
  40a4ca:	pxor   xmm1,xmm1
  40a4ce:	xorpd  xmm2,xmm6
  40a4d2:	movapd xmm0,xmm1
  40a4d6:	call   0x4016c0
  40a4db:	cmp    DWORD PTR [rsp+0x50],0x0
  40a4e0:	jne    0x40867d
  40a4e6:	pxor   xmm1,xmm1
  40a4ea:	movapd xmm2,xmm6
  40a4ee:	movapd xmm0,xmm1
  40a4f2:	call   0x4016c0
  40a4f7:	jmp    0x40867d
  40a4fc:	mov    rax,QWORD PTR [rsp+0x38]
  40a501:	call   rax
  40a503:	lea    rcx,[rip+0x1cd7]        # 0x40c1e1
  40a50a:	lea    r9,[rax+0x60]
  40a50e:	mov    r8d,0x1a
  40a514:	mov    edx,0x1
  40a519:	call   0x407e38
  40a51e:	mov    ecx,0x1
  40a523:	call   0x407e58
  40a528:	movsd  xmm0,QWORD PTR [rip+0x1f98]        # 0x40c4c8
  40a530:	call   0x4015c0
  40a535:	movsd  xmm2,QWORD PTR [rip+0x1fb3]        # 0x40c4f0
  40a53d:	pxor   xmm1,xmm1
  40a541:	xorpd  xmm2,xmm6
  40a545:	movapd xmm0,xmm1
  40a549:	call   0x4016c0
  40a54e:	cmp    DWORD PTR [rsp+0x50],0x0
  40a553:	jne    0x40867d
  40a559:	movsd  xmm0,QWORD PTR [rip+0x1f67]        # 0x40c4c8
  40a561:	call   0x4015c0
  40a566:	jmp    0x40a4e6
  40a56b:	mulsd  xmm1,QWORD PTR [rsp+0xb0]
  40a574:	jmp    0x4098d0
  40a579:	movapd xmm1,xmm0
  40a57d:	mulsd  xmm1,xmm0
  40a581:	jmp    0x408b91
  40a586:	nop
  40a587:	nop
  40a588:	nop
  40a589:	nop
  40a58a:	nop
  40a58b:	nop
  40a58c:	nop
  40a58d:	nop
  40a58e:	nop
  40a58f:	nop
  40a590:	(bad)  
  40a591:	(bad)  
  40a592:	(bad)  
  40a593:	(bad)  
  40a594:	(bad)  
  40a595:	(bad)  
  40a596:	(bad)  
  40a597:	inc    DWORD PTR [rax]
  40a599:	add    BYTE PTR [rax],al
  40a59b:	add    BYTE PTR [rax],al
  40a59d:	add    BYTE PTR [rax],al
  40a59f:	add    bh,bh
  40a5a1:	(bad)  
  40a5a2:	(bad)  
  40a5a3:	(bad)  
  40a5a4:	(bad)  
  40a5a5:	(bad)  
  40a5a6:	(bad)  
  40a5a7:	inc    DWORD PTR [rax]
  40a5a9:	add    BYTE PTR [rax],al
  40a5ab:	add    BYTE PTR [rax],al
  40a5ad:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040b000 <.data>:
  40b000:	or     al,BYTE PTR [rax]
	...
  40b03e:	add    BYTE PTR [rax],al
  40b040:	add    DWORD PTR [rax],eax
	...
  40b07e:	add    BYTE PTR [rax],al
  40b080:	or     ch,BYTE PTR [rip+0x786f6272]        # 0x78b012f8
  40b086:	sub    eax,0x6e656720
  40b08b:	gs jb  0x40b0ef
  40b08e:	je     0x40b0f5
  40b090:	and    BYTE PTR [rsi+0x61],dh
  40b093:	jb     0x40b0fe
  40b095:	outs   dx,DWORD PTR ds:[rsi]
  40b096:	jne    0x40b10b
  40b098:	and    BYTE PTR [rax+0x6f],dh
  40b09b:	imul   ebp,DWORD PTR [rsi+0x74],0x73696420
  40b0a2:	je     0x40b116
  40b0a4:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  40b0ab:	jae    0x40b0db
  40b0ad:	and    BYTE PTR [rax],ah
  40b0af:	rex.R
  40b0b0:	gs data16 (bad) 
  40b0b3:	jne    0x40b121
  40b0b5:	je     0x40b0d7
  40b0b7:	imul   esi,DWORD PTR [rbx+0x20],0x646e6172
  40b0be:	outs   dx,DWORD PTR ds:[rsi]
  40b0bf:	ins    DWORD PTR es:[rdi],dx
  40b0c0:	and    BYTE PTR [rcx+0x6e],ch
  40b0c3:	and    BYTE PTR [rbx+0x75],ah
  40b0c6:	(bad)  
  40b0c7:	gs or  cl,BYTE PTR cs:[rdx]
  40b0cb:	(bad)  
  40b0cc:	jb     0x40b135
  40b0ce:	jae    0x40b0f0
  40b0d0:	sub    BYTE PTR [rcx+0x6e],ah
  40b0d3:	jns    0x40b0f5
  40b0d5:	outs   dx,DWORD PTR ds:[rsi]
  40b0d6:	jb     0x40b13c
  40b0d8:	gs jb  0x40b107
  40b0db:	and    BYTE PTR [rbx+0x70],dh
  40b0de:	(bad)  
  40b0df:	movsxd esp,DWORD PTR [rbp+0x20]
  40b0e2:	jae    0x40b149
  40b0e4:	jo     0x40b147
  40b0e6:	jb     0x40b149
  40b0e8:	je     0x40b14f
  40b0ea:	sub    DWORD PTR fs:[rdx],edi
  40b0ed:	and    BYTE PTR [rax],ah
  40b0ef:	and    BYTE PTR [rax],ah
  40b0f1:	and    BYTE PTR [rax],ah
  40b0f3:	and    BYTE PTR [rax],ah
  40b0f5:	and    BYTE PTR [rax],ah
  40b0f7:	and    BYTE PTR [rax],ah
  40b0f9:	and    BYTE PTR [rax],ah
  40b0fb:	and    BYTE PTR [rax],ah
  40b0fd:	and    BYTE PTR [rax],ah
  40b0ff:	and    BYTE PTR [rax],ah
  40b101:	push   rsi
  40b102:	gs jb  0x40b178
  40b105:	imul   ebp,DWORD PTR [rdi+0x6e],0x3032203a
  40b10c:	xor    BYTE PTR [rcx],dh
  40b10e:	(bad)  
  40b10f:	xor    BYTE PTR [rsi],dh
  40b111:	(bad)  
  40b112:	xor    dh,BYTE PTR [rdx+rcx*1]
  40b115:	and    BYTE PTR [rax],ah
  40b117:	xor    esi,DWORD PTR [rax]
  40b119:	xor    BYTE PTR [rax],dh
  40b11b:	and    BYTE PTR [rax],ah
  40b11d:	and    BYTE PTR [rax],ah
  40b11f:	outs   dx,BYTE PTR ds:[rsi]
  40b120:	jne    0x40b18f
  40b122:	(bad)  
  40b123:	gs jb  0x40b146
  40b126:	outs   dx,DWORD PTR ds:[rsi]
  40b127:	data16 and BYTE PTR [rdx+0x61],dh
  40b12b:	outs   dx,BYTE PTR ds:[rsi]
  40b12c:	outs   dx,DWORD PTR fs:[rsi]
  40b12e:	ins    DWORD PTR es:[rdi],dx
  40b12f:	and    BYTE PTR [rax+0x6f],dh
  40b132:	imul   ebp,DWORD PTR [rsi+0x74],0x6e692073
  40b139:	and    BYTE PTR [rbx+0x75],ah
  40b13c:	(bad)  
  40b13d:	gs sub al,0x20
  40b140:	ins    BYTE PTR es:[rdi],dx
  40b141:	outs   dx,BYTE PTR gs:[rsi]
  40b143:	jae    0x40b171
  40b145:	and    BYTE PTR [rbx+0x70],dh
  40b148:	imul   esi,DWORD PTR [rdx+0x61],0x73202c6c
  40b14f:	jo     0x40b1b9
  40b151:	gs jb  0x40b1b9
  40b154:	and    BYTE PTR [rdi+0x72],ch
  40b157:	and    BYTE PTR [rdi+0x72],ah
  40b15a:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x20334420
  40b162:	and    BYTE PTR [rax],ah
  40b164:	and    BYTE PTR [rax],ah
  40b166:	and    BYTE PTR [rcx+rbp*2+0x6d],ah
  40b16a:	outs   dx,BYTE PTR gs:[rsi]
  40b16c:	jae    0x40b1d7
  40b16e:	outs   dx,DWORD PTR ds:[rsi]
  40b16f:	outs   dx,BYTE PTR ds:[rsi]
  40b170:	and    BYTE PTR [rbx],dh
  40b172:	sub    eax,0x20200a64
  40b177:	movsxd esp,DWORD PTR [rax]
  40b179:	and    BYTE PTR [rax],ah
  40b17b:	and    BYTE PTR [rax],ah
  40b17d:	and    BYTE PTR [rax],ah
  40b17f:	(bad)  
  40b180:	fs and BYTE PTR fs:[rcx+0x20],ah
  40b185:	jne    0x40b1f5
  40b187:	imul   esi,DWORD PTR [rax+riz*1+0x63],0x20656275
  40b18f:	je     0x40b200
  40b191:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b195:	and    BYTE PTR [rdi+0x75],ch
  40b198:	je     0x40b20a
  40b19a:	jne    0x40b210
  40b19c:	and    BYTE PTR [rax],ch
  40b19e:	(bad)  
  40b19f:	movsxd esp,DWORD PTR [rax]
  40b1a1:	rex.RXB xor r13b,BYTE PTR [r14]
  40b1a4:	xor    BYTE PTR [rdi],ah
  40b1a6:	and    BYTE PTR [rbx+0x65],dh
  40b1a9:	je     0x40b21e
  40b1ab:	and    BYTE PTR [rbx+0x69],dh
  40b1ae:	jp     0x40b215
  40b1b0:	sub    DWORD PTR [rdx],ecx
  40b1b2:	and    BYTE PTR [rax],ah
  40b1b4:	and    BYTE PTR fs:[rax],ah
  40b1b7:	and    BYTE PTR [rax],ah
  40b1b9:	and    BYTE PTR [rax],ah
  40b1bb:	and    BYTE PTR [rcx+0x64],ah
  40b1be:	and    BYTE PTR fs:[rcx+0x20],ah
  40b1c2:	jne    0x40b232
  40b1c4:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x6f6d6169
  40b1cc:	outs   dx,BYTE PTR ds:[rsi]
  40b1cd:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40b1d2:	je     0x40b23c
  40b1d4:	and    BYTE PTR gs:[rdi+0x75],ch
  40b1d8:	je     0x40b24a
  40b1da:	jne    0x40b250
  40b1dc:	and    BYTE PTR [rax],ch
  40b1de:	(bad)  
  40b1df:	and    BYTE PTR fs:[rdi+0x32],al
  40b1e3:	xor    BYTE PTR cs:[rdi],ah
  40b1e6:	and    BYTE PTR [rbx+0x65],dh
  40b1e9:	je     0x40b25e
  40b1eb:	and    BYTE PTR [rbx+0x69],dh
  40b1ee:	jp     0x40b255
  40b1f0:	sub    DWORD PTR [rdx],ecx
  40b1f2:	and    BYTE PTR [rax],ah
  40b1f4:	ins    BYTE PTR es:[rdi],dx
  40b1f5:	and    BYTE PTR [rax],ah
  40b1f7:	and    BYTE PTR [rax],ah
  40b1f9:	and    BYTE PTR [rax],ah
  40b1fb:	and    BYTE PTR [rdi+0x65],ah
  40b1fe:	outs   dx,BYTE PTR ds:[rsi]
  40b1ff:	gs jb  0x40b263
  40b202:	je     0x40b269
  40b204:	and    BYTE PTR [rcx+0x20],ah
  40b207:	jb     0x40b26e
  40b209:	addr32 jne 0x40b278
  40b20c:	(bad)  
  40b20d:	jb     0x40b22f
  40b20f:	xor    ebp,DWORD PTR [rip+0x70732064]        # 0x70b3d279
  40b215:	imul   esi,DWORD PTR [rdx+0x61],0x20200a6c
  40b21c:	jb     0x40b23e
  40b21e:	and    BYTE PTR [rax],ah
  40b220:	and    BYTE PTR [rax],ah
  40b222:	and    BYTE PTR [rax],ah
  40b224:	outs   dx,BYTE PTR gs:[esi]
  40b227:	gs jb  0x40b28b
  40b22a:	je     0x40b291
  40b22c:	and    BYTE PTR [rcx+0x20],ah
  40b22f:	jb     0x40b296
  40b231:	addr32 jne 0x40b2a0
  40b234:	(bad)  
  40b235:	jb     0x40b257
  40b237:	jo     0x40b2a8
  40b239:	ins    BYTE PTR es:[rdi],dx
  40b23a:	jns    0x40b2a3
  40b23c:	outs   dx,DWORD PTR ds:[rsi]
  40b23d:	outs   dx,BYTE PTR ds:[rsi]
  40b23e:	sub    al,0x20
  40b240:	sub    BYTE PTR [rdi],ah
  40b242:	jb     0x40b264
  40b244:	jae    0x40b266
  40b246:	pop    rdx
  40b247:	xor    DWORD PTR [rax],esp
  40b249:	rex.RXB xor BYTE PTR [r14],r13b
  40b24c:	xor    DWORD PTR [rdi],esp
  40b24e:	and    BYTE PTR [rbp+0x61],ch
  40b251:	imul   esp,DWORD PTR [rbp+0x73],0x20
  40b255:	(bad)  
  40b256:	and    BYTE PTR [rbx+0x6f],ah
  40b259:	outs   dx,BYTE PTR ds:[rsi]
  40b25a:	sub    DWORD PTR gs:[rdx],ecx
  40b25d:	and    BYTE PTR [rax],ah
  40b25f:	jae    0x40b281
  40b261:	and    BYTE PTR [rax],ah
  40b263:	and    BYTE PTR [rax],ah
  40b265:	and    BYTE PTR [rax],ah
  40b267:	outs   dx,BYTE PTR gs:[esi]
  40b26a:	gs jb  0x40b2ce
  40b26d:	je     0x40b2d4
  40b26f:	and    BYTE PTR [rbx+0x6f],ah
  40b272:	jae    0x40b2e4
  40b274:	push   0x63697265
  40b279:	(bad)  
  40b27a:	ins    BYTE PTR es:[rdi],dx
  40b27b:	and    BYTE PTR [rax+0x6f],dh
  40b27e:	imul   ebp,DWORD PTR [rsi+0x74],0x20200a73
  40b285:	js     0x40b2a7
  40b287:	and    BYTE PTR [rax],ah
  40b289:	and    BYTE PTR [rax],ah
  40b28b:	and    BYTE PTR [rax],ah
  40b28d:	outs   dx,BYTE PTR gs:[esi]
  40b290:	gs jb  0x40b2f4
  40b293:	je     0x40b2fa
  40b295:	and    BYTE PTR [rdx+0x61],dh
  40b298:	outs   dx,BYTE PTR ds:[rsi]
  40b299:	outs   dx,DWORD PTR fs:[rsi]
  40b29b:	ins    DWORD PTR es:[rdi],dx
  40b29c:	and    BYTE PTR [rax+0x6f],dh
  40b29f:	imul   ebp,DWORD PTR [rsi+0x74],0x6e692073
  40b2a6:	and    BYTE PTR [rbx+0x69],dh
  40b2a9:	ins    DWORD PTR es:[rdi],dx
  40b2aa:	jo     0x40b318
  40b2ac:	gs js  0x40b2db
  40b2af:	and    BYTE PTR [rbp+0x61],ch
  40b2b2:	jns    0x40b2d4
  40b2b4:	jne    0x40b329
  40b2b6:	and    BYTE PTR gs:[rdi],ah
  40b2b9:	jb     0x40b2e2
  40b2bb:	and    BYTE PTR [rdi+0x72],ch
  40b2be:	and    BYTE PTR [rdi],ah
  40b2c0:	push   rdi
  40b2c1:	outs   dx,BYTE PTR ds:[rsi]
  40b2c2:	(bad)  
  40b2c3:	or     ah,BYTE PTR [rax]
  40b2c5:	and    BYTE PTR [rcx+0x20],bh
  40b2c8:	and    BYTE PTR [rax],ah
  40b2ca:	and    BYTE PTR [rax],ah
  40b2cc:	and    BYTE PTR [rax],ah
  40b2ce:	jae    0x40b331
  40b2d0:	ins    DWORD PTR es:[rdi],dx
  40b2d1:	and    BYTE PTR gs:[rcx+0x73],ah
  40b2d5:	and    BYTE PTR [rdi],ah
  40b2d7:	js     0x40b300
  40b2d9:	sub    al,0x20
  40b2db:	jo     0x40b349
  40b2dd:	jne    0x40b352
  40b2df:	and    BYTE PTR [rbx+0x69],dh
  40b2e2:	ins    DWORD PTR es:[rdi],dx
  40b2e3:	jo     0x40b351
  40b2e5:	gs js  0x40b2f2
  40b2e8:	and    BYTE PTR [rax],ah
  40b2ea:	push   rax
  40b2eb:	outs   dx,BYTE PTR ds:[rsi]
  40b2ec:	sub    al,0x6d
  40b2ee:	sub    al,0x72
  40b2f0:	and    BYTE PTR [rax],ah
  40b2f2:	(bad)  
  40b2f3:	fs and BYTE PTR fs:[rax+0x6f],dh
  40b2f8:	imul   ebp,DWORD PTR [rsi+0x74],0x2c6e5b20
  40b2ff:	ins    DWORD PTR es:[rdi],dx
  40b300:	sub    al,0x72
  40b302:	pop    rbp
  40b303:	and    BYTE PTR [rsi+0x69],ah
  40b306:	jb     0x40b37b
  40b308:	je     0x40b336
  40b30a:	and    BYTE PTR [rax+0x61],dh
  40b30d:	fs jae 0x40b330
  40b310:	ja     0x40b37b
  40b312:	je     0x40b37c
  40b314:	and    BYTE PTR [rax],dh
  40b316:	or     cl,BYTE PTR [rdx]
  40b318:	and    BYTE PTR [rax],ah
  40b31a:	rex.WR outs dx,BYTE PTR ds:[rsi]
  40b31c:	and    BYTE PTR [rax],ah
  40b31e:	and    BYTE PTR [rax],ah
  40b320:	and    BYTE PTR [rax],ah
  40b322:	ins    BYTE PTR es:[rdi],dx
  40b323:	outs   dx,BYTE PTR gs:[rsi]
  40b325:	jae    0x40b347
  40b327:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  40b32f:	je     0x40b39a
  40b331:	outs   dx,DWORD PTR ds:[rsi]
  40b332:	outs   dx,BYTE PTR ds:[rsi]
  40b333:	and    BYTE PTR [rdi+0x66],ch
  40b336:	and    BYTE PTR [rdx+0x61],dh
  40b339:	imul   esi,DWORD PTR fs:[rbp+0x73],0x202e6e20
  40b341:	and    BYTE PTR [rcx+0x6c],al
  40b344:	jae    0x40b3b5
  40b346:	and    BYTE PTR [rdi],ah
  40b348:	jae    0x40b371
  40b34a:	sub    al,0x20
  40b34c:	(bad)  
  40b34d:	jb     0x40b376
  40b34f:	sub    al,0x20
  40b351:	(bad)  
  40b352:	rex.RXB (bad) 
  40b354:	sub    al,0x20
  40b356:	(bad)  
  40b357:	push   rdi
  40b358:	(bad)  
  40b359:	or     ah,BYTE PTR cs:[rax]
  40b35c:	and    BYTE PTR [rbp+0x6e],cl
  40b35f:	sub    al,0x6d
  40b361:	sub    al,0x72
  40b363:	and    BYTE PTR [rax],ah
  40b365:	ins    BYTE PTR es:[rdi],dx
  40b366:	(bad)  
  40b367:	je     0x40b3dd
  40b369:	imul   esp,DWORD PTR [rbx+0x65],0x654d2820
  40b370:	jae    0x40b3da
  40b372:	sub    DWORD PTR [rax],esp
  40b374:	jb     0x40b3e5
  40b376:	je     0x40b3d9
  40b378:	je     0x40b3df
  40b37a:	and    BYTE PTR fs:[rdx+0x79],ah
  40b37e:	and    BYTE PTR [rbx+0x6e],bl
  40b381:	sub    al,0x2d
  40b383:	ins    DWORD PTR es:[rdi],dx
  40b384:	sub    al,0x30
  40b386:	pop    rbp
  40b387:	sub    al,0x20
  40b389:	pop    rbx
  40b38a:	ins    DWORD PTR es:[rdi],dx
  40b38b:	sub    al,0x6e
  40b38d:	sub    al,0x30
  40b38f:	pop    rbp
  40b390:	sub    al,0x20
  40b392:	pop    rbx
  40b393:	xor    BYTE PTR [rax+rsi*1],ch
  40b396:	sub    al,0x72
  40b398:	pop    rbp
  40b399:	sub    al,0x20
  40b39b:	cs cs or ah,BYTE PTR cs:[rax]
  40b3a0:	and    BYTE PTR [rax],ah
  40b3a2:	and    BYTE PTR [rax],ah
  40b3a4:	and    BYTE PTR [rax],ah
  40b3a6:	and    BYTE PTR [rax],ah
  40b3a8:	and    BYTE PTR [rdi],ah
  40b3aa:	xor    dh,BYTE PTR [rdi]
  40b3ac:	and    BYTE PTR [rbp+0x31],cl
  40b3af:	sub    al,0x30
  40b3b1:	sub    al,0x31
  40b3b3:	(bad)  
  40b3b4:	and    BYTE PTR [rcx+0x73],ch
  40b3b7:	and    BYTE PTR [rbx+0x30],bh
  40b3ba:	sub    al,0x31
  40b3bc:	sub    al,0x32
  40b3be:	jge    0x40b3e0
  40b3c0:	js     0x40b3e2
  40b3c2:	jnp    0x40b3f4
  40b3c4:	sub    al,0x31
  40b3c6:	sub    al,0x32
  40b3c8:	jge    0x40b3ea
  40b3ca:	js     0x40b3ec
  40b3cc:	jnp    0x40b3fe
  40b3ce:	sub    al,0x31
  40b3d0:	sub    al,0x32
  40b3d2:	jge    0x40b402
  40b3d4:	and    BYTE PTR [rax],ah
  40b3d6:	push   rsp
  40b3d7:	jb     0x40b452
  40b3d9:	and    BYTE PTR [rdi],ah
  40b3db:	xor    r13,QWORD PTR [r12+rsi*1]
  40b3df:	and    BYTE PTR [rdx+0x27],bh
  40b3e2:	or     ah,BYTE PTR cs:[rax]
  40b3e5:	and    BYTE PTR [rdi+0x30],dl
  40b3e8:	xor    DWORD PTR cs:[rax],esp
  40b3eb:	and    BYTE PTR [rax],ah
  40b3ed:	and    BYTE PTR [rdx+0x61],dh
  40b3f0:	outs   dx,BYTE PTR ds:[rsi]
  40b3f1:	outs   dx,DWORD PTR fs:[rsi]
  40b3f3:	ins    DWORD PTR es:[rdi],dx
  40b3f4:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40b3f8:	je     0x40b46c
  40b3fa:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  40b401:	and    BYTE PTR [rdi+0x69],dh
  40b404:	je     0x40b46e
  40b406:	imul   ebp,DWORD PTR [rsi+0x20],0x20312e30
  40b40d:	outs   dx,DWORD PTR ds:[rsi]
  40b40e:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  40b413:	and    BYTE PTR [rbx+0x75],ah
  40b416:	(bad)  
  40b417:	gs (bad) 
  40b419:	jae    0x40b43b
  40b41b:	outs   dx,DWORD PTR ds:[rsi]
  40b41c:	jb     0x40b43e
  40b41e:	jae    0x40b490
  40b420:	push   0x27657265
  40b425:	jae    0x40b447
  40b427:	jae    0x40b49e
  40b429:	jb     0x40b491
  40b42b:	(bad)  
  40b42c:	movsxd esp,DWORD PTR [rbp+0xa]
  40b42f:	and    BYTE PTR [rax],ah
  40b431:	pop    rdx
  40b432:	xor    BYTE PTR [rsi],ch
  40b434:	xor    eax,0x20207320
  40b439:	jb     0x40b49c
  40b43b:	outs   dx,BYTE PTR ds:[rsi]
  40b43c:	outs   dx,DWORD PTR fs:[rsi]
  40b43e:	ins    DWORD PTR es:[rdi],dx
  40b43f:	and    BYTE PTR [rax+0x6f],dh
  40b442:	imul   ebp,DWORD PTR [rsi+0x74],0x6e692073
  40b449:	and    BYTE PTR [rcx+0x20],ah
  40b44c:	xor    BYTE PTR [rsi],ch
  40b44e:	xor    eax,0x73696420
  40b453:	imul   esp,DWORD PTR [rax],0x70
  40b456:	jb     0x40b4c7
  40b458:	push   0x65
  40b45a:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  40b45e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40b462:	(bad)  
  40b463:	and    BYTE PTR [rbx+0x70],dh
  40b466:	push   0xa657265
  40b46b:	and    BYTE PTR [rax],ah
  40b46d:	pop    rdx
  40b46e:	xor    BYTE PTR [rsi],ch
  40b470:	xor    eax,0x47207320
  40b475:	xor    BYTE PTR [rsi],ch
  40b477:	and    BYTE PTR ss:[rbx+0x61],dh
  40b47b:	ins    DWORD PTR es:[rdi],dx
  40b47c:	and    BYTE PTR gs:[rcx+0x73],ah
  40b480:	and    BYTE PTR [rdx+0x30],bl
  40b483:	cs xor eax,0x74697720
  40b489:	push   0x61206e69
  40b48e:	and    BYTE PTR [rax],dh
  40b490:	cs and BYTE PTR ss:[rdi+0x61],ah
  40b495:	jo     0x40b4a1
  40b497:	or     ah,BYTE PTR [rax]
  40b499:	and    BYTE PTR [rdx+0x6e],al
  40b49c:	and    BYTE PTR [rax],ah
  40b49e:	and    BYTE PTR [rax],ah
  40b4a0:	and    BYTE PTR [rax],ah
  40b4a2:	(bad)  
  40b4a3:	outs   dx,DWORD PTR ds:[rsi]
  40b4a4:	jne    0x40b514
  40b4a6:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x786f6220
  40b4ae:	and    BYTE PTR [rbx+0x6f],ah
  40b4b1:	outs   dx,DWORD PTR ds:[rsi]
  40b4b2:	jb     0x40b518
  40b4b4:	imul   ebp,DWORD PTR [rsi+0x61],0x2c736574
  40b4bb:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40b4bf:	(bad)  
  40b4c0:	jne    0x40b52e
  40b4c2:	je     0x40b4e4
  40b4c4:	and    eax,0x67322e32
  40b4c9:	or     ah,BYTE PTR [rax]
  40b4cb:	and    BYTE PTR [rax+0x20],ch
  40b4ce:	and    BYTE PTR [rax],ah
  40b4d0:	and    BYTE PTR [rax],ah
  40b4d2:	and    BYTE PTR [rax],ah
  40b4d4:	outs   dx,DWORD PTR ds:[rsi]
  40b4d5:	jne    0x40b54b
  40b4d7:	jo     0x40b54e
  40b4d9:	je     0x40b4fb
  40b4db:	(bad)  
  40b4dc:	jae    0x40b4fe
  40b4de:	push   0x676f6d6f
  40b4e3:	outs   dx,BYTE PTR gs:[rsi]
  40b4e5:	outs   dx,DWORD PTR gs:[rsi]
  40b4e7:	jne    0x40b55c
  40b4e9:	and    BYTE PTR [rbx+0x6f],ah
  40b4ec:	outs   dx,DWORD PTR ds:[rsi]
  40b4ed:	jb     0x40b553
  40b4ef:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  40b4f6:	outs   dx,WORD PTR ds:[rsi]
  40b4f8:	jb     0x40b51a
  40b4fa:	movsxd esp,DWORD PTR [rsp+riz*2+0xa]
  40b4fe:	and    BYTE PTR [rax],ah
  40b500:	outs   dx,BYTE PTR ds:[rsi]
  40b501:	and    BYTE PTR [rax],ah
  40b503:	and    BYTE PTR [rax],ah
  40b505:	and    BYTE PTR [rax],ah
  40b507:	and    BYTE PTR [rdx+0x65],dh
  40b50a:	ins    DWORD PTR es:[rdi],dx
  40b50b:	outs   dx,DWORD PTR ds:[rsi]
  40b50c:	jbe    0x40b573
  40b50e:	and    BYTE PTR [rbx+0x6f],ah
  40b511:	ins    DWORD PTR es:[rdi],dx
  40b512:	ins    DWORD PTR es:[rdi],dx
  40b513:	(bad)  
  40b514:	outs   dx,BYTE PTR ds:[rsi]
  40b515:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  40b51a:	and    BYTE PTR gs:[rsi+0x72],ah
  40b51e:	outs   dx,DWORD PTR ds:[rsi]
  40b51f:	ins    DWORD PTR es:[rdi],dx
  40b520:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b524:	and    BYTE PTR [rsi+0x69],ah
  40b527:	jb     0x40b59c
  40b529:	je     0x40b54b
  40b52b:	ins    BYTE PTR es:[rdi],dx
  40b52c:	imul   ebp,DWORD PTR [rsi+0x65],0x20666f20
  40b533:	outs   dx,DWORD PTR ds:[rsi]
  40b534:	jne    0x40b5aa
  40b536:	jo     0x40b5ad
  40b538:	je     0x40b544
  40b53a:	and    BYTE PTR [rax],ah
  40b53c:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40b53e:	and    BYTE PTR [rax],ah
  40b540:	and    BYTE PTR [rax],ah
  40b542:	and    BYTE PTR [rax],ah
  40b544:	outs   dx,DWORD PTR ds:[rsi]
  40b545:	data16 data16 jae 0x40b5ae
  40b549:	je     0x40b56b
  40b54b:	movsxd ebp,DWORD PTR [rdi+0x6f]
  40b54e:	jb     0x40b5b4
  40b550:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  40b557:	(bad)  
  40b558:	jns    0x40b57a
  40b55a:	outs   dx,BYTE PTR ds:[rsi]
  40b55b:	or     ah,BYTE PTR [rax]
  40b55d:	and    BYTE PTR [rax+riz*1+0x20],dh
  40b561:	and    BYTE PTR [rax],ah
  40b563:	and    BYTE PTR [rax],ah
  40b565:	and    BYTE PTR [rbp+0x73],dh
  40b568:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  40b56d:	and    BYTE PTR gs:[rcx+0x73],ah
  40b571:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40b575:	and    BYTE PTR [rdx+0x61],dh
  40b578:	outs   dx,BYTE PTR ds:[rsi]
  40b579:	outs   dx,DWORD PTR fs:[rsi]
  40b57b:	ins    DWORD PTR es:[rdi],dx
  40b57c:	and    BYTE PTR [rsi+0x75],ch
  40b57f:	ins    DWORD PTR es:[rdi],dx
  40b580:	(bad)  
  40b581:	gs jb  0x40b5a4
  40b584:	jae    0x40b5eb
  40b586:	gs and BYTE PTR fs:[rax],ch
  40b58a:	fs gs data16 (bad) 
  40b58e:	jne    0x40b5fc
  40b590:	je     0x40b5b2
  40b592:	imul   esi,DWORD PTR [rbx+0x20],0x6d6d6f63
  40b599:	(bad)  
  40b59a:	outs   dx,BYTE PTR ds:[rsi]
  40b59b:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  40b5a0:	sub    DWORD PTR gs:[rdx],ecx
  40b5a3:	and    BYTE PTR [rax],ah
  40b5a5:	je     0x40b615
  40b5a7:	and    BYTE PTR [rax],ah
  40b5a9:	and    BYTE PTR [rax],ah
  40b5ab:	and    BYTE PTR [rax],ah
  40b5ad:	jne    0x40b622
  40b5af:	and    BYTE PTR gs:[rsi+0x20],ch
  40b5b3:	(bad)  
  40b5b4:	jae    0x40b5d6
  40b5b6:	je     0x40b620
  40b5b8:	and    BYTE PTR gs:[rdx+0x61],dh
  40b5bc:	outs   dx,BYTE PTR ds:[rsi]
  40b5bd:	outs   dx,DWORD PTR fs:[rsi]
  40b5bf:	ins    DWORD PTR es:[rdi],dx
  40b5c0:	and    BYTE PTR [rsi+0x75],ch
  40b5c3:	ins    DWORD PTR es:[rdi],dx
  40b5c4:	(bad)  
  40b5c5:	gs jb  0x40b5e8
  40b5c8:	jae    0x40b62f
  40b5ca:	gs or  ah,BYTE PTR fs:[rax]
  40b5ce:	and    BYTE PTR [rdx+0x20],bh
  40b5d1:	and    BYTE PTR [rax],ah
  40b5d3:	and    BYTE PTR [rax],ah
  40b5d5:	and    BYTE PTR [rax],ah
  40b5d7:	jo     0x40b64b
  40b5d9:	imul   ebp,DWORD PTR [rsi+0x74],0x746e6920
  40b5e0:	gs addr32 gs jb 0x40b605
  40b5e5:	movsxd ebp,DWORD PTR [rdi+0x6f]
  40b5e8:	jb     0x40b64e
  40b5ea:	imul   ebp,DWORD PTR [rsi+0x61],0x2c736574
  40b5f1:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40b5f5:	(bad)  
  40b5f6:	jne    0x40b664
  40b5f8:	je     0x40b61a
  40b5fa:	(bad)  
  40b5fb:	rex.X outs dx,BYTE PTR ds:[rsi]
  40b5fd:	(bad)  
  40b5fe:	and    BYTE PTR [rcx+0x73],ch
  40b601:	and    BYTE PTR [rip+0x67322e32],ah        # 0x6772e439
  40b607:	or     al,BYTE PTR [rax]
	...
  40b63d:	add    BYTE PTR [rax],al
  40b63f:	add    BYTE PTR [rax+0x40a5],ch
	...
  40b64d:	add    BYTE PTR [rax],al
  40b64f:	add    bh,bh
  40b651:	(bad)  
  40b652:	(bad)  
  40b653:	(bad)  
  40b654:	(bad)  
  40b655:	(bad)  
  40b656:	(bad)  
  40b657:	inc    DWORD PTR [rax]
  40b659:	add    BYTE PTR [rax],al
  40b65b:	add    BYTE PTR [rax],al
  40b65d:	add    BYTE PTR [rax],al
  40b65f:	add    bh,bh
	...
  40b66d:	add    BYTE PTR [rax],al
  40b66f:	add    BYTE PTR [rdx],al
	...
  40b67d:	add    BYTE PTR [rax],al
  40b67f:	add    BYTE PTR [rip+0xffffffffce000000],dh        # 0xffffffffce40b685
  40b685:	sti    
  40b686:	(bad)  
  40b687:	dec    ebx
  40b689:	add    eax,DWORD PTR [rax]
  40b68b:	add    BYTE PTR [rcx],al
  40b68d:	add    BYTE PTR [rax],al
  40b68f:	add    BYTE PTR [rax],al
  40b691:	add    BYTE PTR [rax],al
  40b693:	add    BYTE PTR [rsi],cl
	...
  40b69d:	add    BYTE PTR [rax],al
  40b69f:	add    bh,bh
  40b6a1:	(bad)  
  40b6a2:	(bad)  
  40b6a3:	inc    DWORD PTR [rax]
	...
  40b6ad:	add    BYTE PTR [rax],al
  40b6af:	add    BYTE PTR [rax+0xa],al
  40b6b2:	add    BYTE PTR [r8],al
	...
  40b6c1:	jg     0x40b703
  40b6c3:	add    BYTE PTR [rax],al
  40b6c5:	add    BYTE PTR [rax],al
  40b6c7:	add    BYTE PTR [rax],dl
  40b6c9:	jg     0x40b70b
  40b6cb:	add    BYTE PTR [rax],al
  40b6cd:	add    BYTE PTR [rax],al
  40b6cf:	add    BYTE PTR [rdx],dh
  40b6d1:	movabs ds:0x2b992ddf,al
  40b6da:	add    BYTE PTR [rax],al
  40b6dc:	add    BYTE PTR [rax],al
  40b6de:	add    BYTE PTR [rax],al
  40b6e0:	int    0x5d
  40b6e2:	and    dl,dl
  40b6e4:	data16 (bad) 
  40b6e6:	(bad)  
  40b6e7:	inc    DWORD PTR [rax]
  40b6e9:	add    BYTE PTR [rax],al
  40b6eb:	add    BYTE PTR [rax],al
  40b6ed:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040c000 <.rdata>:
  40c000:	jb     0x40c064
  40c002:	outs   dx,DWORD PTR ds:[rsi]
  40c003:	js     0x40c025
  40c005:	imul   ebp,DWORD PTR [rsi+0x70],0x65207475
  40c00c:	jb     0x40c080
  40c00e:	outs   dx,DWORD PTR ds:[rsi]
  40c00f:	jb     0x40c04b
  40c011:	and    BYTE PTR [rbx+0x6f],ah
  40c014:	outs   dx,DWORD PTR ds:[rsi]
  40c015:	jb     0x40c07b
  40c017:	imul   ebp,DWORD PTR [rsi+0x61],0x25206574
  40c01e:	xor    ch,BYTE PTR [rsi]
  40c020:	xor    ah,BYTE PTR [rdi+0x20]
  40c023:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40c02a:	ins    BYTE PTR es:[rdi],dx
  40c02b:	(bad)  
  40c02c:	jb     0x40c095
  40c02e:	gs and BYTE PTR cs:[rax],ah
  40c032:	push   rdx
  40c033:	gs fs jne 0x40c09a
  40c037:	and    BYTE PTR gs:[rdi],ah
  40c03a:	rex.X outs dx,BYTE PTR ds:[rsi]
  40c03c:	(bad)  
  40c03d:	or     al,BYTE PTR [rax]
  40c03f:	and    eax,0x25002064
  40c044:	ss xor DWORD PTR cs:[rsi],esi
  40c048:	and    BYTE PTR [eax],al
  40c04b:	and    eax,0x64252064
  40c050:	or     al,BYTE PTR [rax]
  40c052:	and    eax,0x36312e36
  40c057:	and    BYTE PTR [eip+0x36312e36],ah        # 0x3671ee94
  40c05e:	or     al,BYTE PTR [eax]
  40c061:	and    eax,0x64252064
  40c066:	and    BYTE PTR [rip+0x25000a64],ah        # 0x2540cad0
  40c06c:	ss xor DWORD PTR cs:[rsi],esi
  40c070:	and    BYTE PTR [eip+0x36312e36],ah        # 0x3671eead
  40c077:	and    BYTE PTR [eip+0x36312e36],ah        # 0x3671eeb4
  40c07e:	or     al,BYTE PTR [eax]
  40c081:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  40c088:	add    BYTE PTR [rdx+0x65],dh
  40c08b:	(bad)  
  40c08c:	ins    BYTE PTR es:[rdi],dx
  40c08d:	add    BYTE PTR [rax],al
  40c08f:	cs rex.RB pop r8
  40c092:	add    BYTE PTR [r14],r13b
  40c095:	gs js  0x40c0fd
  40c098:	add    BYTE PTR [rip+0x64],ah        # 0x40c102
  40c09e:	add    BYTE PTR [rax],al
  40c0a0:	jb     0x40c104
  40c0a2:	outs   dx,DWORD PTR ds:[rsi]
  40c0a3:	js     0x40c0c5
  40c0a5:	gs jb  0x40c11a
  40c0a8:	outs   dx,DWORD PTR ds:[rsi]
  40c0a9:	jb     0x40c0e5
  40c0ab:	and    BYTE PTR [rcx+rbp*2+0x6d],ah
  40c0af:	and    BYTE PTR [rip+0x6f742064],ah        # 0x6fb4e119
  40c0b5:	outs   dx,DWORD PTR ds:[rsi]
  40c0b6:	and    BYTE PTR [rcx+riz*2+0x72],ch
  40c0ba:	and    BYTE PTR gs:[edi+0x72],ch
  40c0bf:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  40c0c3:	and    BYTE PTR [rbx+0x6d],dh
  40c0c6:	(bad)  
  40c0c7:	ins    BYTE PTR es:[rdi],dx
  40c0c8:	ins    BYTE PTR es:[rdi],dx
  40c0c9:	or     al,BYTE PTR [rax]
  40c0cb:	add    BYTE PTR [rax],al
  40c0cd:	add    BYTE PTR [rax],al
  40c0cf:	add    BYTE PTR [rdx+0x62],dh
  40c0d2:	outs   dx,DWORD PTR ds:[rsi]
  40c0d3:	js     0x40c0f5
  40c0d5:	ja     0x40c138
  40c0d7:	jb     0x40c147
  40c0d9:	imul   ebp,DWORD PTR [rsi+0x67],0x7361203a
  40c0e0:	jae    0x40c157
  40c0e2:	ins    DWORD PTR es:[rdi],dx
  40c0e3:	imul   ebp,DWORD PTR [rsi+0x67],0x334d2720
  40c0ea:	sub    al,0x34
  40c0ec:	sub    al,0x35
  40c0ee:	(bad)  
  40c0ef:	and    BYTE PTR [rbx+0x69],dh
  40c0f2:	outs   dx,BYTE PTR ds:[rsi]
  40c0f3:	movsxd esp,DWORD PTR [rbp+0x20]
  40c0f6:	ins    DWORD PTR es:[rdi],dx
  40c0f7:	gs jae 0x40c162
  40c0fa:	and    BYTE PTR [rcx+0x72],ah
  40c0fd:	addr32 jae 0x40c120
  40c100:	(bad)  
  40c101:	jb     0x40c168
  40c103:	and    BYTE PTR [rsi+0x6f],ch
  40c106:	je     0x40c128
  40c108:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  40c10f:	jae    0x40c131
  40c111:	outs   dx,DWORD PTR ds:[rsi]
  40c112:	jb     0x40c134
  40c114:	jb     0x40c17b
  40c116:	(bad)  
  40c117:	ins    BYTE PTR es:[rdi],dx
  40c118:	jae    0x40c124
  40c11a:	add    BYTE PTR [rax],al
  40c11c:	add    BYTE PTR [rax],al
  40c11e:	add    BYTE PTR [rax],al
  40c120:	jb     0x40c184
  40c122:	outs   dx,DWORD PTR ds:[rsi]
  40c123:	js     0x40c145
  40c125:	ja     0x40c188
  40c127:	jb     0x40c197
  40c129:	imul   ebp,DWORD PTR [rsi+0x67],0x6e75203a
  40c130:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40c134:	outs   dx,BYTE PTR ds:[rsi]
  40c135:	and    BYTE PTR [rsi+0x6c],ah
  40c138:	(bad)  
  40c139:	and    BYTE PTR [eip+0x450a2e73],ah        # 0x454aefb3
  40c140:	js     0x40c1a7
  40c142:	movsxd esi,DWORD PTR [rbp+0x74]
  40c145:	and    BYTE PTR gs:[rdi],ah
  40c148:	jb     0x40c1ac
  40c14a:	outs   dx,DWORD PTR ds:[rsi]
  40c14b:	js     0x40c174
  40c14d:	and    BYTE PTR [rdi+0x69],dh
  40c150:	je     0x40c1ba
  40c152:	outs   dx,DWORD PTR ds:[rsi]
  40c153:	jne    0x40c1c9
  40c155:	and    BYTE PTR [rcx+0x72],ah
  40c158:	addr32 jne 0x40c1c8
  40c15b:	outs   dx,BYTE PTR gs:[rsi]
  40c15d:	je     0x40c1d2
  40c15f:	and    BYTE PTR [rsi+0x6f],ah
  40c162:	jb     0x40c184
  40c164:	outs   dx,DWORD PTR fs:[rsi]
  40c166:	movsxd esi,DWORD PTR [rbp+0x6d]
  40c169:	outs   dx,BYTE PTR gs:[rsi]
  40c16b:	je     0x40c1ce
  40c16d:	je     0x40c1d8
  40c16f:	outs   dx,DWORD PTR ds:[rsi]
  40c170:	outs   dx,BYTE PTR ds:[rsi]
  40c171:	or     al,BYTE PTR cs:[rax]
  40c174:	add    BYTE PTR [rax],al
  40c176:	add    BYTE PTR [rax],al
  40c178:	jb     0x40c1dc
  40c17a:	outs   dx,DWORD PTR ds:[rsi]
  40c17b:	js     0x40c19d
  40c17d:	gs jb  0x40c1f2
  40c180:	outs   dx,DWORD PTR ds:[rsi]
  40c181:	jb     0x40c1bd
  40c183:	and    BYTE PTR [rbx+0x61],ah
  40c186:	outs   dx,BYTE PTR ds:[rsi]
  40c187:	and    BYTE PTR [rsi+0x6f],ch
  40c18a:	je     0x40c1ac
  40c18c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40c18f:	(bad)  
  40c190:	imul   ebp,DWORD PTR [rsi+0x65],0x6e4c2720
  40c197:	(bad)  
  40c198:	and    BYTE PTR [rdi+0x69],dh
  40c19b:	je     0x40c205
  40c19d:	and    BYTE PTR [rdi],ah
  40c19f:	pop    rdx
  40c1a0:	outs   dx,BYTE PTR ds:[rsi]
  40c1a1:	(bad)  
  40c1a2:	or     al,BYTE PTR [rax]
  40c1a4:	add    BYTE PTR [rax],al
  40c1a6:	add    BYTE PTR [rax],al
  40c1a8:	jb     0x40c20c
  40c1aa:	outs   dx,DWORD PTR ds:[rsi]
  40c1ab:	js     0x40c1cd
  40c1ad:	gs jb  0x40c222
  40c1b0:	outs   dx,DWORD PTR ds:[rsi]
  40c1b1:	jb     0x40c1ed
  40c1b3:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  40c1b7:	jae    0x40c1d9
  40c1b9:	jb     0x40c21c
  40c1bb:	imul   esi,DWORD PTR fs:[rbp+0x73],0x322e2520
  40c1c3:	and    BYTE PTR [ebx+0x68],dh
  40c1c7:	outs   dx,DWORD PTR ds:[rsi]
  40c1c8:	jne    0x40c236
  40c1ca:	and    BYTE PTR fs:[rdx+0x65],ah
  40c1ce:	and    BYTE PTR [rdi+0x72],ah
  40c1d1:	gs (bad) 
  40c1d3:	je     0x40c23a
  40c1d5:	jb     0x40c1f7
  40c1d7:	je     0x40c241
  40c1d9:	(bad)  
  40c1da:	outs   dx,BYTE PTR ds:[rsi]
  40c1db:	and    BYTE PTR [rcx],dh
  40c1dd:	xor    BYTE PTR cs:[rdx],cl
  40c1e0:	add    BYTE PTR [rdx+0x62],dh
  40c1e3:	outs   dx,DWORD PTR ds:[rsi]
  40c1e4:	js     0x40c206
  40c1e6:	gs jb  0x40c25b
  40c1e9:	outs   dx,DWORD PTR ds:[rsi]
  40c1ea:	jb     0x40c226
  40c1ec:	and    BYTE PTR [rbp+0x69],ch
  40c1ef:	jae    0x40c264
  40c1f1:	imul   ebp,DWORD PTR [rsi+0x67],0x756f6320
  40c1f8:	outs   dx,BYTE PTR ds:[rsi]
  40c1f9:	je     0x40c205
  40c1fb:	add    BYTE PTR [rax],al
  40c1fd:	add    BYTE PTR [rax],al
  40c1ff:	add    BYTE PTR [rdx+0x62],dh
  40c202:	outs   dx,DWORD PTR ds:[rsi]
  40c203:	js     0x40c225
  40c205:	gs jb  0x40c27a
  40c208:	outs   dx,DWORD PTR ds:[rsi]
  40c209:	jb     0x40c245
  40c20b:	and    BYTE PTR [rbx+0x61],ah
  40c20e:	outs   dx,BYTE PTR ds:[rsi]
  40c20f:	and    BYTE PTR [rdi+0x6e],ch
  40c212:	ins    BYTE PTR es:[rdi],dx
  40c213:	jns    0x40c235
  40c215:	jae    0x40c287
  40c217:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40c21b:	jns    0x40c23d
  40c21d:	outs   dx,DWORD PTR ds:[rsi]
  40c21e:	outs   dx,BYTE PTR ds:[rsi]
  40c21f:	and    BYTE PTR gs:[rdi+0x66],ch
  40c223:	and    BYTE PTR [rdi],ah
  40c225:	ins    BYTE PTR es:[rdi],dx
  40c226:	(bad)  
  40c227:	sub    al,0x20
  40c229:	(bad)  
  40c22a:	jae    0x40c253
  40c22c:	sub    al,0x20
  40c22e:	(bad)  
  40c22f:	js     0x40c258
  40c231:	sub    al,0x20
  40c233:	(bad)  
  40c234:	rex.WR outs dx,BYTE PTR ds:[rsi]
  40c236:	(bad)  
  40c237:	sub    al,0x20
  40c239:	outs   dx,DWORD PTR ds:[rsi]
  40c23a:	jb     0x40c25c
  40c23c:	(bad)  
  40c23d:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  40c23f:	sub    al,0x6d
  40c241:	sub    al,0x72
  40c243:	(bad)  
  40c244:	and    BYTE PTR [rax],ch
  40c246:	(bad)  
  40c247:	rex.WR outs dx,BYTE PTR ds:[rsi]
  40c249:	and    BYTE PTR [rbx+0x27],dh
  40c24c:	and    BYTE PTR [rcx+0x73],ch
  40c24f:	and    BYTE PTR [rdi+0x6b],ch
  40c252:	sub    DWORD PTR [rsi],ebp
  40c254:	or     al,BYTE PTR [rax]
  40c256:	and    eax,0x65620a73
  40c25b:	imul   ebp,DWORD PTR [esi+0xa],0x20202020
  40c263:	and    BYTE PTR [rax],ah
  40c265:	and    BYTE PTR [rax],ah
  40c267:	and    eax,0x64252064
  40c26c:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2540cce5
  40c272:	or     ah,BYTE PTR fs:[rip+0x25000a64]        # 0x2540ccdd
  40c279:	and    BYTE PTR fs:[rip+0x64250a73],ah        # 0x6465ccf3
  40c280:	or     al,BYTE PTR [rax]
  40c282:	add    BYTE PTR [rax],al
  40c284:	add    BYTE PTR [rax],al
  40c286:	add    BYTE PTR [rax],al
  40c288:	jb     0x40c2ec
  40c28a:	outs   dx,DWORD PTR ds:[rsi]
  40c28b:	js     0x40c2ad
  40c28d:	gs jb  0x40c302
  40c290:	outs   dx,DWORD PTR ds:[rsi]
  40c291:	jb     0x40c2cd
  40c293:	and    BYTE PTR [rbp+0x69],ch
  40c296:	jae    0x40c30b
  40c298:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f6320
  40c29f:	ins    DWORD PTR es:[rdi],dx
  40c2a0:	(bad)  
  40c2a1:	and    BYTE PTR [rcx+0x66],ah
  40c2a4:	je     0x40c30b
  40c2a6:	jb     0x40c2c8
  40c2a8:	movsxd ebp,DWORD PTR [rdi+0x6f]
  40c2ab:	jb     0x40c311
  40c2ad:	imul   ebp,DWORD PTR [rsi+0x61],0x69206574
  40c2b4:	outs   dx,BYTE PTR ds:[rsi]
  40c2b5:	and    BYTE PTR [rip+0xa0a73],ah        # 0x4acd2e
  40c2bb:	add    BYTE PTR [rax],al
  40c2bd:	add    BYTE PTR [rax],al
  40c2bf:	add    BYTE PTR [rdx+0x62],dh
  40c2c2:	outs   dx,DWORD PTR ds:[rsi]
  40c2c3:	js     0x40c2e5
  40c2c5:	gs jb  0x40c33a
  40c2c8:	outs   dx,DWORD PTR ds:[rsi]
  40c2c9:	jb     0x40c305
  40c2cb:	and    BYTE PTR [rip+0x6f632064],ah        # 0x6fa3e335
  40c2d1:	outs   dx,DWORD PTR ds:[rsi]
  40c2d2:	jb     0x40c338
  40c2d4:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  40c2db:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  40c2e2:	and    BYTE PTR [rdi+0x66],ch
  40c2e5:	and    BYTE PTR [rip+0x6f632064],ah        # 0x6fa3e34f
  40c2eb:	outs   dx,DWORD PTR ds:[rsi]
  40c2ec:	jb     0x40c352
  40c2ee:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  40c2f5:	imul   ebp,DWORD PTR [rsi+0x20],0xa0a7325
  40c2fc:	add    BYTE PTR [rax],al
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	imul   ebp,DWORD PTR [rsi+0x73],0x69666675
  40c307:	movsxd ebp,DWORD PTR [rcx+0x65]
  40c30a:	outs   dx,BYTE PTR ds:[rsi]
  40c30b:	je     0x40c32d
  40c30d:	ins    DWORD PTR es:[rdi],dx
  40c30e:	gs ins DWORD PTR es:[rdi],dx
  40c310:	outs   dx,DWORD PTR ds:[rsi]
  40c311:	jb     0x40c38c
  40c313:	and    BYTE PTR [rsi+0x6f],ah
  40c316:	jb     0x40c338
  40c318:	jae    0x40c383
  40c31a:	ins    DWORD PTR es:[rdi],dx
  40c31b:	jo     0x40c389
  40c31d:	gs js  0x40c32a
	...
  40c328:	jb     0x40c38c
  40c32a:	outs   dx,DWORD PTR ds:[rsi]
  40c32b:	js     0x40c34d
  40c32d:	gs jb  0x40c3a2
  40c330:	outs   dx,DWORD PTR ds:[rsi]
  40c331:	jb     0x40c36d
  40c333:	and    BYTE PTR [rdx+0x65],dh
  40c336:	addr32 jne 0x40c3a5
  40c339:	(bad)  
  40c33a:	jb     0x40c35c
  40c33c:	jo     0x40c3ad
  40c33e:	imul   ebp,DWORD PTR [rsi+0x74],0x61632073
  40c345:	outs   dx,BYTE PTR ds:[rsi]
  40c346:	and    BYTE PTR [rdx+0x65],ah
  40c349:	and    BYTE PTR [rbp+0x73],dh
  40c34c:	gs and BYTE PTR fs:[rdi+0x6e],ch
  40c351:	ins    BYTE PTR es:[rdi],dx
  40c352:	jns    0x40c374
  40c354:	imul   ebp,DWORD PTR [rsi+0x20],0x20642d32
  40c35b:	(bad)  
  40c35c:	outs   dx,BYTE PTR ds:[rsi]
  40c35d:	and    BYTE PTR fs:[rbx],dh
  40c360:	sub    eax,0xa0a64
  40c365:	add    BYTE PTR [rax],al
  40c367:	add    BYTE PTR [rdx+0x62],dh
  40c36a:	outs   dx,DWORD PTR ds:[rsi]
  40c36b:	js     0x40c38d
  40c36d:	gs jb  0x40c3e2
  40c370:	outs   dx,DWORD PTR ds:[rsi]
  40c371:	jb     0x40c3ad
  40c373:	and    BYTE PTR [rbx+0x70],dh
  40c376:	imul   esi,DWORD PTR [rdx+0x61],0x6964206c
  40c37d:	jae    0x40c3f3
  40c37f:	jb     0x40c3ea
  40c381:	(bad)  
  40c382:	jne    0x40c3f8
  40c384:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  40c38b:	(bad)  
  40c38c:	jbe    0x40c3ef
  40c38e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6f20656c
  40c396:	outs   dx,BYTE PTR ds:[rsi]
  40c397:	ins    BYTE PTR es:[rdi],dx
  40c398:	jns    0x40c3ba
  40c39a:	imul   ebp,DWORD PTR [rsi+0x20],0xa0a6433
  40c3a1:	add    BYTE PTR [rbp+0x6e],ah
  40c3a4:	or     ch,BYTE PTR fs:[rax+0x75]
  40c3a8:	ins    BYTE PTR es:[rdi],dx
  40c3a9:	ins    BYTE PTR es:[rdi],dx
  40c3aa:	or     al,BYTE PTR [rax]
  40c3ac:	xchg   ecx,eax
  40c3ad:	enter  0xffff,0xb1
  40c3b1:	enter  0xffff,0x6b
  40c3b5:	enter  0xffff,0xb1
  40c3b9:	enter  0xffff,0xb1
  40c3bd:	enter  0xffff,0x4b
  40c3c1:	enter  0xffff,0xb1
  40c3c5:	enter  0xffff,0xb1
  40c3c9:	enter  0xffff,0xb1
  40c3cd:	enter  0xffff,0xb1
  40c3d1:	enter  0xffff,0x27
  40c3d5:	enter  0xffff,0xc4
  40c3d9:	(bad)  
  40c3da:	(bad)  
  40c3db:	push   QWORD PTR [rcx-0x76000038]
  40c3e1:	(bad)  
  40c3e2:	(bad)  
  40c3e3:	(bad)  
  40c3e4:	jns    0x40c3ad
  40c3e6:	(bad)  
  40c3e7:	push   QWORD PTR [rcx-0x4e000038]
  40c3ed:	enter  0xffff,0xb1
  40c3f1:	enter  0xffff,0xb1
  40c3f5:	enter  0xffff,0xb1
  40c3f9:	enter  0xffff,0xb1
  40c3fd:	enter  0xffff,0xa2
  40c401:	(bad)  
  40c402:	(bad)  
  40c403:	push   QWORD PTR [rcx-0x4e000038]
  40c409:	enter  0xffff,0x55
  40c40d:	(bad)  
  40c40e:	(bad)  
  40c40f:	push   QWORD PTR [rcx-0x4e000038]
  40c415:	enter  0xffff,0xb1
  40c419:	enter  0xffff,0xb1
  40c41d:	enter  0xffff,0xb1
  40c421:	enter  0xffff,0xb1
  40c425:	enter  0xffff,0xb1
  40c429:	enter  0xffff,0xb1
  40c42d:	enter  0xffff,0x28
  40c431:	(bad)  
  40c432:	(bad)  
  40c433:	(bad)  
  40c434:	sti    
  40c435:	(bad)  
  40c436:	(bad)  
  40c437:	push   QWORD PTR [rcx-0x4e000038]
  40c43d:	enter  0xffff,0xb1
  40c441:	enter  0xffff,0xe8
  40c445:	(bad)  
  40c446:	(bad)  
  40c447:	push   QWORD PTR [rcx-0x4e000038]
  40c44d:	enter  0xffff,0xb1
  40c451:	enter  0xffff,0xd5
  40c455:	(bad)  
  40c456:	(bad)  
  40c457:	push   QWORD PTR [rcx-0x3d000038]
  40c45d:	(bad)  
  40c45e:	(bad)  
  40c45f:	push   QWORD PTR [rcx-0x4e000038]
  40c465:	enter  0xffff,0xb1
  40c469:	enter  0xffff,0xb2
  40c46d:	(bad)  
  40c46e:	(bad)  
  40c46f:	jmp    QWORD PTR [rdx+0x71ffffc6]
  40c475:	(bad)  
  40c476:	(bad)  
  40c477:	push   QWORD PTR [rcx-0x4e000038]
  40c47d:	enter  0xffff,0xb1
  40c481:	enter  0xffff,0x61
  40c485:	(bad)  
  40c486:	(bad)  
  40c487:	call   QWORD PTR [rcx-0x3a]
  40c48a:	(bad)  
  40c48b:	call   FWORD PTR [rsi]
  40c48d:	mov    edi,0xffff
  40c492:	add    BYTE PTR [rax],al
  40c494:	add    BYTE PTR [rax],al
  40c496:	loopne 0x40c4d7
  40c498:	add    BYTE PTR [rax],al
  40c49a:	add    BYTE PTR [rax],al
  40c49c:	add    BYTE PTR [rax],al
  40c49e:	loopne 0x40c461
  40c4a0:	add    BYTE PTR [rax],al
  40c4a2:	sar    bh,0xff
  40c4a5:	(bad)  
  40c4a6:	fild   WORD PTR [rcx+0x0]
  40c4a9:	add    BYTE PTR [rax],al
  40c4ab:	add    BYTE PTR [rax],al
  40c4ad:	add    BYTE PTR [rax+rax*2],dl
  40c4b0:	add    BYTE PTR [rax],al
  40c4b2:	add    BYTE PTR [rax],al
  40c4b4:	add    BYTE PTR [rax],al
  40c4b6:	adc    BYTE PTR [rax+0x0],al
  40c4b9:	add    BYTE PTR [rax],al
  40c4bb:	add    BYTE PTR [rax],al
  40c4bd:	add    BYTE PTR [rax],cl
  40c4bf:	add    BYTE PTR [rax],al
  40c4c2:	add    BYTE PTR [rax],al
  40c4c4:	add    BYTE PTR [rax],al
  40c4c6:	and    al,0x40
  40c4c8:	add    BYTE PTR [rax],al
  40c4ca:	add    BYTE PTR [rax],al
  40c4cc:	add    BYTE PTR [rax],al
  40c4ce:	lock (bad) 
  40c4d0:	add    BYTE PTR [rax],al
  40c4d2:	add    BYTE PTR [rax],al
  40c4d4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  40c4dc:	add    BYTE PTR [rax],al
  40c4de:	lock mov edi,0xff800000
  40c4e4:	(bad)  
  40c4e5:	(bad)  
  40c4e6:	fild   WORD PTR [rcx+0x1d]
  40c4e9:	ja     0x40c535
  40c4eb:	(bad)  
  40c4ec:	jmp    0x40c4ed
  40c4ee:	out    dx,eax
  40c4ef:	(bad)  
  40c4f0:	add    BYTE PTR [rax],al
  40c4f2:	add    BYTE PTR [rax],al
  40c4f4:	add    BYTE PTR [rax],al
  40c4f6:	add    BYTE PTR [rax+0x0],al
  40c4fc:	add    BYTE PTR [rax],al
  40c4fe:	add    BYTE PTR [rax],al
  40c500:	sbb    BYTE PTR [rip+0x21fb5444],ch        # 0x223c194a
  40c506:	sbb    DWORD PTR [rax+0x0],eax
  40c509:	add    BYTE PTR [rax-0x30000001],al
  40c50f:	add    BYTE PTR [rip+0x41],0x0        # 0x40c558
  40c517:	add    BYTE PTR [rax+0x4100],al
  40c51d:	add    BYTE PTR [rax],al
  40c51f:	add    al,dl
  40c521:	sbb    eax,DWORD PTR [rax+0x0]
	...
  40c530:	rex.B jb 0x40c59a
  40c533:	jne    0x40c5a2
  40c535:	outs   dx,BYTE PTR gs:[rsi]
  40c537:	je     0x40c559
  40c539:	outs   dx,DWORD PTR fs:[rsi]
  40c53b:	ins    DWORD PTR es:[rdi],dx
  40c53c:	(bad)  
  40c53d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40c544:	jb     0x40c566
  40c546:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40c54a:	rex.B
  40c54b:	rex.WB
  40c54c:	rex.WRX sub QWORD PTR [rax],r8
  40c54f:	rex.B jb 0x40c5b9
  40c552:	jne    0x40c5c1
  40c554:	outs   dx,BYTE PTR gs:[rsi]
  40c556:	je     0x40c578
  40c558:	jae    0x40c5c3
  40c55a:	outs   dx,BYTE PTR ds:[rsi]
  40c55b:	addr32 jne 0x40c5ca
  40c55e:	(bad)  
  40c55f:	jb     0x40c5ca
  40c561:	je     0x40c5dc
  40c563:	and    BYTE PTR [rax],ch
  40c565:	push   rbx
  40c566:	rex.WB
  40c567:	rex.RXB
  40c568:	rex.WRX sub QWORD PTR [rax],r8
  40c56b:	add    BYTE PTR [rax],al
  40c56d:	add    BYTE PTR [rax],al
  40c56f:	add    BYTE PTR [rdi+0x76],cl
  40c572:	gs jb  0x40c5db
  40c575:	ins    BYTE PTR es:[rdi],dx
  40c576:	outs   dx,DWORD PTR ds:[rsi]
  40c577:	ja     0x40c599
  40c579:	jb     0x40c5dc
  40c57b:	outs   dx,BYTE PTR ds:[rsi]
  40c57c:	and    BYTE PTR gs:[ebp+0x72],ah
  40c581:	jb     0x40c5f2
  40c583:	jb     0x40c5a5
  40c585:	sub    BYTE PTR [rdi+0x56],cl
  40c588:	rex.RB push r10
  40c58a:	rex.RX
  40c58b:	rex.WR
  40c58c:	rex.WRXB push r15
  40c58e:	sub    DWORD PTR [rax],eax
  40c590:	push   rax
  40c591:	(bad)  
  40c592:	jb     0x40c608
  40c594:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40c59b:	jae    0x40c5bd
  40c59d:	outs   dx,DWORD PTR ds:[rsi]
  40c59e:	data16 and BYTE PTR [rbx+0x69],dh
  40c5a2:	outs   dx,BYTE PTR ds:[esi]
  40c5a4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40c5ab:	and    BYTE PTR gs:[rax],ch
  40c5ae:	push   rax
  40c5af:	rex.WR
  40c5b0:	rex.WRXB push r11
  40c5b2:	push   rbx
  40c5b3:	sub    DWORD PTR [rax],eax
  40c5b5:	add    BYTE PTR [rax],al
  40c5b7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40c5bb:	(bad)  
  40c5bc:	ins    BYTE PTR es:[rdi],dx
  40c5bd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40c5c1:	jae    0x40c5e3
  40c5c3:	outs   dx,DWORD PTR ds:[rsi]
  40c5c4:	data16 and BYTE PTR [rbx+0x69],dh
  40c5c8:	outs   dx,BYTE PTR ds:[esi]
  40c5ca:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40c5d1:	and    BYTE PTR gs:[rax],ch
  40c5d4:	push   rsp
  40c5d5:	rex.WR
  40c5d6:	rex.WRXB push r11
  40c5d8:	push   rbx
  40c5d9:	sub    DWORD PTR [rax],eax
  40c5db:	add    BYTE PTR [rax],al
  40c5dd:	add    BYTE PTR [rax],al
  40c5df:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40c5e3:	and    BYTE PTR [rdx+0x65],dh
  40c5e6:	jae    0x40c65d
  40c5e8:	ins    BYTE PTR es:[rdi],dx
  40c5e9:	je     0x40c60b
  40c5eb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40c5f2:	jae    0x40c661
  40c5f4:	(bad)  
  40c5f5:	ins    BYTE PTR es:[rdi],dx
  40c5f6:	ins    BYTE PTR es:[rdi],dx
  40c5f7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40c5fb:	(bad)  
  40c5fc:	and    BYTE PTR gs:[rdx+0x65],dh
  40c600:	jo     0x40c674
  40c602:	gs jae 0x40c66a
  40c605:	outs   dx,BYTE PTR ds:[rsi]
  40c606:	je     0x40c66d
  40c608:	and    BYTE PTR fs:[rax],ch
  40c60b:	push   rbp
  40c60c:	rex.WRX
  40c60d:	rex.R
  40c60e:	rex.RB push r10
  40c610:	rex.RX
  40c611:	rex.WR
  40c612:	rex.WRXB push r15
  40c614:	sub    DWORD PTR [rax],eax
  40c616:	push   rbp
  40c617:	outs   dx,BYTE PTR ds:[rsi]
  40c618:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40c61c:	outs   dx,BYTE PTR ds:[rsi]
  40c61d:	and    BYTE PTR [rbp+0x72],ah
  40c620:	jb     0x40c691
  40c622:	jb     0x40c624
  40c624:	add    BYTE PTR [rax],al
  40c626:	add    BYTE PTR [rax],al
  40c628:	pop    rdi
  40c629:	ins    DWORD PTR es:[rdi],dx
  40c62a:	(bad)  
  40c62b:	je     0x40c695
  40c62d:	gs jb  0x40c6a2
  40c630:	sub    BYTE PTR [rcx],ch
  40c632:	cmp    ah,BYTE PTR [rax]
  40c634:	and    eax,0x6e692073
  40c639:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765eeb2
  40c63f:	sub    al,0x20
  40c641:	and    eax,0x20202967
  40c646:	sub    BYTE PTR [rdx+0x65],dh
  40c649:	je     0x40c6c1
  40c64b:	(bad)  
  40c64c:	ins    BYTE PTR es:[rdi],dx
  40c64d:	cmp    eax,0xa296725
  40c652:	add    BYTE PTR [rax],al
  40c654:	rex.WR push rdi
  40c656:	(bad)  
  40c657:	dec    DWORD PTR [rbp-0x30000aa]
  40c65d:	push   rsi
  40c65e:	(bad)  
  40c65f:	dec    DWORD PTR [rdi+rdx*2]
  40c662:	(bad)  
  40c663:	call   FWORD PTR [rdi+rdx*2]
  40c666:	(bad)  
  40c667:	jmp    FWORD PTR [rdi+rdx*2]
  40c66a:	(bad)  
  40c66b:	(bad)  
  40c66c:	cmp    al,0x57
  40c66e:	(bad)  
  40c66f:	dec    DWORD PTR [rbp+0x69]
  40c672:	outs   dx,BYTE PTR ds:[rsi]
  40c673:	addr32 ja 0x40c6a3
  40c676:	ja     0x40c6ae
  40c678:	xor    al,0x20
  40c67a:	jb     0x40c6f1
  40c67c:	outs   dx,BYTE PTR ds:[rsi]
  40c67d:	je     0x40c6e8
  40c67f:	ins    DWORD PTR es:[rdi],dx
  40c680:	and    BYTE PTR gs:[rsi+0x61],ah
  40c684:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40c68c:	add    BYTE PTR [rax],al
  40c68e:	add    BYTE PTR [rax],al
  40c690:	rex.B
  40c691:	fs fs jb 0x40c6fa
  40c695:	jae    0x40c70a
  40c697:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8e70d
  40c69d:	jae    0x40c6bf
  40c69f:	outs   dx,BYTE PTR ds:[rsi]
  40c6a0:	outs   dx,DWORD PTR ds:[rsi]
  40c6a1:	and    BYTE PTR [rcx+0x6d],ch
  40c6a4:	(bad)  
  40c6a5:	addr32 gs sub eax,0x74636573
  40c6ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40c6b3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40c6ba:	jne    0x40c721
  40c6bc:	jb     0x40c737
  40c6be:	and    BYTE PTR [rsi+0x61],ah
  40c6c1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40c6c9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2e733
  40c6cf:	je     0x40c736
  40c6d1:	jae    0x40c6f3
  40c6d3:	(bad)  
  40c6d4:	je     0x40c6f6
  40c6d6:	(bad)  
  40c6d7:	fs fs jb 0x40c740
  40c6db:	jae    0x40c750
  40c6dd:	and    BYTE PTR [rip+0x70],ah        # 0x40c753
  40c6e3:	add    BYTE PTR [rax],al
  40c6e5:	add    BYTE PTR [rax],al
  40c6e7:	add    BYTE PTR [rax],ah
  40c6e9:	and    BYTE PTR [rsi+0x69],dl
  40c6ec:	jb     0x40c762
  40c6ee:	jne    0x40c751
  40c6f0:	ins    BYTE PTR es:[rdi],dx
  40c6f1:	push   rax
  40c6f2:	jb     0x40c763
  40c6f4:	je     0x40c75b
  40c6f6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40c6fa:	(bad)  
  40c6fb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40c703:	push   0x646f6320
  40c708:	and    BYTE PTR gs:[rax],dh
  40c70b:	js     0x40c732
  40c70d:	js     0x40c70f
  40c70f:	add    BYTE PTR [rax],ah
  40c711:	and    BYTE PTR [rbp+0x6e],dl
  40c714:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40c718:	outs   dx,BYTE PTR ds:[rsi]
  40c719:	and    BYTE PTR [rax+0x73],dh
  40c71c:	gs jne 0x40c783
  40c71f:	outs   dx,DWORD PTR ds:[rsi]
  40c720:	and    BYTE PTR [rdx+0x65],dh
  40c723:	ins    BYTE PTR es:[rdi],dx
  40c724:	outs   dx,DWORD PTR ds:[rsi]
  40c725:	movsxd esp,DWORD PTR [rcx+0x74]
  40c728:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40c72f:	je     0x40c7a0
  40c731:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40c734:	and    BYTE PTR [rsi+0x65],dh
  40c737:	jb     0x40c7ac
  40c739:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40c740:	or     al,BYTE PTR [rax]
  40c742:	add    BYTE PTR [rax],al
  40c744:	add    BYTE PTR [rax],al
  40c746:	add    BYTE PTR [rax],al
  40c748:	and    BYTE PTR [rax],ah
  40c74a:	push   rbp
  40c74b:	outs   dx,BYTE PTR ds:[rsi]
  40c74c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40c750:	outs   dx,BYTE PTR ds:[rsi]
  40c751:	and    BYTE PTR [rax+0x73],dh
  40c754:	gs jne 0x40c7bb
  40c757:	outs   dx,DWORD PTR ds:[rsi]
  40c758:	and    BYTE PTR [rdx+0x65],dh
  40c75b:	ins    BYTE PTR es:[rdi],dx
  40c75c:	outs   dx,DWORD PTR ds:[rsi]
  40c75d:	movsxd esp,DWORD PTR [rcx+0x74]
  40c760:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40c767:	and    BYTE PTR [rbx+0x69],dh
  40c76a:	jp     0x40c7d1
  40c76c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4af5d6
	...
  40c77e:	add    BYTE PTR [rax],al
  40c780:	cs jo  0x40c7e7
  40c783:	(bad)  
  40c784:	je     0x40c7e7
	...
  40c78e:	add    BYTE PTR [rax],al
  40c790:	jo     0x40c7f8
  40c792:	(bad)  
  40c793:	push   QWORD PTR [rsi+riz*2-0x1]
  40c797:	jmp    QWORD PTR [rax-0x4e00009a]
  40c79d:	data16 (bad) 
  40c79f:	jmp    QWORD PTR [rax+0x66]
  40c7a2:	(bad)  
  40c7a3:	jmp    QWORD PTR [rax]
  40c7a5:	data16 (bad) 
  40c7a7:	push   QWORD PTR [rax+0x66]
  40c7aa:	(bad)  
  40c7ab:	inc    DWORD PTR [rax]
  40c7ad:	add    BYTE PTR [rax],al
  40c7af:	add    BYTE PTR [rbp+rsi*2-0x1bc37800],bl
  40c7b6:	(bad)  
  40c7b7:	jle    0x40c7b9
  40c7b9:	add    BYTE PTR [rax],al
  40c7bb:	add    BYTE PTR [rax],al
  40c7bd:	add    BYTE PTR [rax],al
  40c7bf:	add    BYTE PTR [rbx+0x71],dh
  40c7c2:	jb     0x40c838
	...
  40c7cc:	add    BYTE PTR [rax],al
  40c7ce:	clc    
  40c7cf:	inc    DWORD PTR [rax]
  40c7d1:	add    BYTE PTR [rax],al
  40c7d3:	add    BYTE PTR [rax],al
  40c7d5:	add    al,bh
  40c7d7:	jg     0x40c7d9
  40c7d9:	add    BYTE PTR [rax],al
  40c7db:	add    BYTE PTR [rax],al
  40c7dd:	add    BYTE PTR [rax],al
  40c7df:	add    BYTE PTR [rax],0x0
  40c7e2:	add    BYTE PTR [rax],al
  40c7e4:	add    BYTE PTR [rax],al
  40c7e6:	lock jg 0x40c7e9
  40c7e9:	add    BYTE PTR [rax],al
  40c7eb:	add    BYTE PTR [rax],al
  40c7ed:	add    al,dh
  40c7ef:	(bad)  
  40c7f0:	movsxd ebp,DWORD PTR [rdi+0x73]
	...
  40c7fb:	add    BYTE PTR [rax],al
  40c7fd:	add    al,bh
  40c7ff:	jg     0x40c871
  40c801:	outs   dx,DWORD PTR ds:[rsi]
  40c802:	ja     0x40c804
	...
  40c80c:	add    BYTE PTR [rax],al
  40c80e:	clc    
  40c80f:	inc    DWORD PTR [rax]
  40c811:	add    BYTE PTR [rax],al
  40c813:	add    BYTE PTR [rax],al
  40c815:	add    al,bh
  40c817:	jg     0x40c819
  40c819:	add    BYTE PTR [rax],al
  40c81b:	add    BYTE PTR [rax],al
  40c81d:	add    BYTE PTR [rax],al
  40c81f:	add    BYTE PTR [rax],0x0
  40c822:	add    BYTE PTR [rax],al
  40c824:	add    BYTE PTR [rax],al
  40c826:	lock inc DWORD PTR [rax]
  40c829:	add    BYTE PTR [rax],al
  40c82b:	add    BYTE PTR [rax],al
  40c82d:	add    al,dh
  40c82f:	jg     0x40c831
  40c831:	add    BYTE PTR [rax],al
  40c833:	add    BYTE PTR [rax],al
  40c835:	add    al,dh
  40c837:	(bad)  
	...
  40c844:	add    BYTE PTR [rax],al
  40c846:	add    BYTE PTR [rax+0x0],al
	...
  40c854:	add    BYTE PTR [rax],al
  40c856:	loopne 0x40c897
  40c858:	add    BYTE PTR [rax],al
  40c85a:	sar    bh,0xff
  40c85d:	(bad)  
  40c85e:	fild   WORD PTR [rcx-0x1]
  40c861:	(bad)  
  40c862:	(bad)  
  40c863:	(bad)  
  40c864:	(bad)  
  40c865:	(bad)  
  40c866:	(bad)  
  40c867:	jg     0x40c869
	...
  40c875:	add    al,ah
  40c877:	rol    DWORD PTR [rax],0x0
  40c87a:	add    BYTE PTR [rax],al
  40c87c:	add    BYTE PTR [rax],al
  40c87e:	add    BYTE PTR [rax],al
  40c880:	jae    0x40c8eb
  40c882:	outs   dx,BYTE PTR ds:[rsi]
	...
  40c88b:	add    BYTE PTR [rax],al
  40c88d:	add    al,bh
  40c88f:	jg     0x40c891
	...
  40c8bd:	add    BYTE PTR [rax],al
  40c8bf:	add    BYTE PTR [rsi+0x66],ch
  40c8c2:	add    BYTE PTR [rcx+0x6e],ch
  40c8c5:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x97006e61
  40c8cd:	js     0x40c8ce
  40c8cf:	push   QWORD PTR [rdx+rdi*2]
  40c8d2:	(bad)  
  40c8d3:	push   QWORD PTR [rdx+rdi*2]
  40c8d6:	(bad)  
  40c8d7:	push   QWORD PTR [rdx+rdi*2]
  40c8da:	(bad)  
  40c8db:	push   QWORD PTR [rdx+rdi*2]
  40c8de:	(bad)  
  40c8df:	push   QWORD PTR [rdx+rdi*2]
  40c8e2:	(bad)  
  40c8e3:	push   QWORD PTR [rdx+rdi*2]
  40c8e6:	(bad)  
  40c8e7:	push   QWORD PTR [rdx+rdi*2]
  40c8ea:	(bad)  
  40c8eb:	push   QWORD PTR [rdx+rdi*2]
  40c8ee:	(bad)  
  40c8ef:	call   QWORD PTR [rdx+rdi*2]
  40c8f2:	(bad)  
  40c8f3:	call   QWORD PTR [rdx+rdi*2]
  40c8f6:	(bad)  
  40c8f7:	call   QWORD PTR [rdx+rdi*2]
  40c8fa:	(bad)  
  40c8fb:	call   QWORD PTR [rdx+rdi*2]
  40c8fe:	(bad)  
  40c8ff:	call   QWORD PTR [rdx+rdi*2]
  40c902:	(bad)  
  40c903:	push   QWORD PTR [rdx+rdi*2]
  40c906:	(bad)  
  40c907:	push   QWORD PTR [rdx+rdi*2]
  40c90a:	(bad)  
  40c90b:	push   QWORD PTR [rdx+rdi*2]
  40c90e:	(bad)  
  40c90f:	push   QWORD PTR [rdx+rdi*2]
  40c912:	(bad)  
  40c913:	push   QWORD PTR [rdx+rdi*2]
  40c916:	(bad)  
  40c917:	push   QWORD PTR [rdx+rdi*2]
  40c91a:	(bad)  
  40c91b:	push   QWORD PTR [rdx+rdi*2]
  40c91e:	(bad)  
  40c91f:	push   QWORD PTR [rdx+rdi*2]
  40c922:	(bad)  
  40c923:	push   QWORD PTR [rdx+rdi*2]
  40c926:	(bad)  
  40c927:	push   QWORD PTR [rdx+rdi*2]
  40c92a:	(bad)  
  40c92b:	push   QWORD PTR [rdx+rdi*2]
  40c92e:	(bad)  
  40c92f:	push   QWORD PTR [rdx+rdi*2]
  40c932:	(bad)  
  40c933:	push   QWORD PTR [rdx+rdi*2]
  40c936:	(bad)  
  40c937:	push   QWORD PTR [rdx+rdi*2]
  40c93a:	(bad)  
  40c93b:	push   QWORD PTR [rdx+rdi*2]
  40c93e:	(bad)  
  40c93f:	push   QWORD PTR [rdx+rdi*2]
  40c942:	(bad)  
  40c943:	push   QWORD PTR [rdx+rdi*2]
  40c946:	(bad)  
  40c947:	push   QWORD PTR [rdx+rdi*2]
  40c94a:	(bad)  
  40c94b:	call   QWORD PTR [rdx+rdi*2]
  40c94e:	(bad)  
  40c94f:	push   QWORD PTR [rdx+rdi*2]
  40c952:	(bad)  
  40c953:	push   QWORD PTR [rdx+rdi*2]
  40c956:	(bad)  
  40c957:	push   QWORD PTR [rdx+rdi*2]
  40c95a:	(bad)  
  40c95b:	push   QWORD PTR [rdx+rdi*2]
  40c95e:	(bad)  
  40c95f:	push   QWORD PTR [rdx+rdi*2]
  40c962:	(bad)  
  40c963:	push   QWORD PTR [rdx+rdi*2]
  40c966:	(bad)  
  40c967:	push   QWORD PTR [rdx+rdi*2]
  40c96a:	(bad)  
  40c96b:	push   QWORD PTR [rdx+rdi*2]
  40c96e:	(bad)  
  40c96f:	push   QWORD PTR [rdx+rdi*2]
  40c972:	(bad)  
  40c973:	push   QWORD PTR [rdx+rdi*2]
  40c976:	(bad)  
  40c977:	jmp    QWORD PTR [rcx+rdi*2-0x1]
  40c97b:	push   QWORD PTR [rdx+rdi*2]
  40c97e:	(bad)  
  40c97f:	call   QWORD PTR [rdi+0xffff7a]
	...
  40c9c1:	add    BYTE PTR [rax],al
  40c9c3:	add    BYTE PTR [rbx],al
  40c9c5:	add    BYTE PTR [rax],al
  40c9c7:	add    BYTE PTR [rip+0x7000000],al        # 0x740c9cd
  40c9cd:	add    BYTE PTR [rax],al
  40c9cf:	add    BYTE PTR [rdx],cl
  40c9d1:	add    BYTE PTR [rax],al
  40c9d3:	add    BYTE PTR [rax+rax*1],cl
  40c9d6:	add    BYTE PTR [rax],al
  40c9d8:	(bad)  
  40c9d9:	add    BYTE PTR [rax],al
  40c9db:	add    BYTE PTR [rcx],dl
  40c9dd:	add    BYTE PTR [rax],al
  40c9df:	add    BYTE PTR [rbx],dl
  40c9e1:	add    BYTE PTR [rax],al
  40c9e3:	add    BYTE PTR [rip+0x18000000],dl        # 0x1840c9e9
  40c9e9:	add    BYTE PTR [rax],al
  40c9eb:	add    BYTE PTR [rdx],bl
  40c9ed:	add    BYTE PTR [rax],al
  40c9ef:	add    BYTE PTR [rax+rax*1],bl
  40c9f2:	add    BYTE PTR [rax],al
  40c9f4:	(bad)  
  40c9f5:	add    BYTE PTR [rax],al
  40c9f7:	add    BYTE PTR [rcx],ah
  40c9f9:	add    BYTE PTR [rax],al
  40c9fb:	add    BYTE PTR [rbx],ah
  40c9fd:	add    BYTE PTR [rax],al
  40c9ff:	add    BYTE PTR [rsi],ah
  40ca01:	add    BYTE PTR [rax],al
  40ca03:	add    BYTE PTR [rax],ch
  40ca05:	add    BYTE PTR [rax],al
  40ca07:	add    BYTE PTR [rdx],ch
  40ca09:	add    BYTE PTR [rax],al
  40ca0b:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f40ca11
  40ca11:	add    BYTE PTR [rax],al
  40ca13:	add    BYTE PTR [rcx],dh
  40ca15:	add    BYTE PTR [rax],al
  40ca17:	add    BYTE PTR [rax+rax*1],dh
	...
  40ca26:	lock (bad) 
	...
  40ca34:	add    BYTE PTR [rax],al
  40ca36:	add    BYTE PTR [rax+0x0],al
  40ca39:	add    BYTE PTR [rax],al
  40ca3b:	add    BYTE PTR [rax],al
  40ca3d:	add    al,ah
  40ca3f:	(bad)  
  40ca40:	add    BYTE PTR [rax],al
  40ca42:	sar    bh,0xff
  40ca45:	(bad)  
  40ca46:	fild   WORD PTR [rcx+0x16]
  40ca49:	push   rsi
  40ca4a:	out    0x9e,eax
  40ca4c:	scas   eax,DWORD PTR es:[rdi]
  40ca4d:	add    eax,edx
  40ca4f:	cmp    al,0x0
  40ca51:	add    BYTE PTR [rax],al
  40ca53:	add    BYTE PTR [rax],al
  40ca55:	add    BYTE PTR [rax],al
  40ca57:	add    BYTE PTR [rax],0x0
	...
  40ca7e:	add    BYTE PTR [rax],al
  40ca80:	pop    rdi
  40ca81:	pop    rdi
  40ca82:	jo     0x40caf3
  40ca84:	ja     0x40caef
	...
  40ca8e:	clc    
  40ca8f:	inc    DWORD PTR [rax]
  40ca91:	add    BYTE PTR [rax],al
  40ca93:	add    BYTE PTR [rax],al
  40ca95:	add    al,bh
  40ca97:	jg     0x40ca99
  40ca99:	add    BYTE PTR [rax],al
  40ca9b:	add    BYTE PTR [rax],al
  40ca9d:	add    al,dh
  40ca9f:	(bad)  
  40caa0:	add    BYTE PTR [rax],al
  40caa2:	add    BYTE PTR [rax],al
  40caa4:	add    BYTE PTR [rax],al
  40caa6:	add    BYTE PTR [rax+0x0],al
  40caac:	add    BYTE PTR [rax],al
  40caae:	lock inc DWORD PTR [rax]
  40cab1:	add    BYTE PTR [rax],al
  40cab3:	add    BYTE PTR [rax],al
  40cab5:	add    al,dh
  40cab7:	jg     0x40cab9
  40cab9:	add    BYTE PTR [rax],al
  40cabb:	add    BYTE PTR [rax],al
  40cabd:	add    BYTE PTR [rax],al
  40cabf:	add    bh,bh
  40cac1:	(bad)  
  40cac2:	(bad)  
  40cac3:	(bad)  
  40cac4:	(bad)  
  40cac5:	(bad)  
  40cac6:	(bad)  
  40cac7:	jg     0x40cac9
	...
  40cad5:	add    BYTE PTR [rax],al
  40cad7:	add    BYTE PTR [rax],0x0
  40cada:	add    BYTE PTR [rax],al
  40cadc:	add    BYTE PTR [rax],al
  40cade:	add    BYTE PTR [rax],al
  40cae0:	rex.B
  40cae1:	rex.X
  40cae2:	rex.XB
  40cae3:	rex.R
  40cae4:	rex.RB
  40cae5:	rex.RX add BYTE PTR [rcx+0x62],r12b
  40cae9:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  40caed:	add    BYTE PTR [rax],dh
  40caef:	xor    DWORD PTR [rdx],esi
  40caf1:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  40cb00:	add    eax,0x19000000
  40cb05:	add    BYTE PTR [rax],al
  40cb07:	add    BYTE PTR [rbp+0x0],bh
	...
  40cb46:	lock (bad) 
  40cb48:	add    BYTE PTR [rax],al
  40cb4a:	add    BYTE PTR [rax],al
  40cb4c:	add    BYTE PTR [rax],al
  40cb4e:	and    al,0x40
  40cb50:	add    BYTE PTR [rax],al
  40cb52:	add    BYTE PTR [rax],al
  40cb54:	add    BYTE PTR [rax],al
  40cb56:	pop    rcx
  40cb57:	add    BYTE PTR [rax],al
  40cb5a:	add    BYTE PTR [rax],al
  40cb5c:	add    BYTE PTR [rax-0x71],al
  40cb5f:	add    BYTE PTR [rax],al
  40cb62:	add    BYTE PTR [rax],al
  40cb64:	add    BYTE PTR [rax+0x40c3],cl
  40cb6a:	add    BYTE PTR [rax],al
  40cb6c:	add    BYTE PTR [rdx-0x8],ch
  40cb6f:	add    BYTE PTR [rax],al
  40cb72:	add    BYTE PTR [rax],al
  40cb74:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  40cb7c:	rcl    BYTE PTR [rdx],1
  40cb7e:	movsxd eax,DWORD PTR [rcx+0x0]
  40cb81:	add    BYTE PTR [rax],al
  40cb83:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  40cb8a:	add    BYTE PTR [rax],al
  40cb8c:	gs int 0xcd
  40cb8f:	add    BYTE PTR [r8],al
  40cb92:	add    BYTE PTR [rax],ah
  40cb94:	pop    rdi
  40cb95:	movabs al,ds:0x4876e80000004202
  40cb9e:	(bad)  
  40cb9f:	rex.X add BYTE PTR [rax],al
  40cba2:	add    BYTE PTR [rdx+0x426d1a94],ah
  40cba8:	add    BYTE PTR [rax],al
  40cbaa:	rex in eax,0x9c
  40cbad:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  40cbb3:	(bad)  
  40cbb4:	(bad)  
  40cbb5:	mov    esp,0x42d6
  40cbba:	xor    al,0x26
  40cbbc:	cmc    
  40cbbd:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  40cbc1:	and    al,0x37
  40cbc4:	jns    0x40cb89
  40cbc6:	rex.B
  40cbc7:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  40cbce:	jbe    0x40cc13
  40cbd0:	add    al,cl
  40cbd2:	rex.WRX
  40cbd3:	ins    DWORD PTR es:[edi],dx
  40cbd5:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  40cbdc:	in     al,0x58
  40cbde:	loope  0x40cc23
  40cbe0:	rex mov WORD PTR [rbp+0x15af1d78],?
  40cbe7:	rex.R push rax
  40cbe9:	out    dx,eax
  40cbea:	loop   0x40cbc2
  40cbec:	in     al,0x1a
  40cbee:	rex.WXB
  40cbef:	rex.R xchg edx,eax
  40cbf1:	(bad)  
  40cbf2:	rex.WRB (bad) 
  40cbf4:	iret   
  40cbf5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  40cbfb:	add    BYTE PTR [rax],al
  40cbfd:	add    BYTE PTR [rax],al
  40cbff:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  40cc06:	pushf  
  40cc07:	cmp    al,0x33
  40cc09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40cc0a:	test   al,0xd5
  40cc0c:	and    esi,esi
  40cc0e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd85c0bc
  40cc15:	shld   DWORD PTR [rdx],esi,cl
  40cc18:	popf   
  40cc19:	xchg   edi,eax
  40cc1a:	mov    edi,cs
  40cc1c:	or     BYTE PTR [rdx+0x6f43255b],bh
  40cc22:	lods   al,BYTE PTR ds:[rsi]
  40cc23:	sub    BYTE PTR fs:[rsi],al
  40cc26:	enter  0xa,0x0
	...
  40cc3e:	add    BYTE PTR [rax],al
  40cc40:	add    BYTE PTR [rax-0x3c86c820],al
  40cc46:	rex.B
  40cc47:	rex.XB (bad) 
  40cc49:	outs   dx,BYTE PTR ds:[rsi]
  40cc4a:	add    eax,0x93b8b5b5
  40cc4f:	rex.RX cmc 
  40cc51:	stc    
  40cc52:	(bad)  
  40cc53:	jmp    0x4d791b5b
  40cc58:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x7789c58e
  40cc5e:	(bad)  
  40cc5f:	pop    rdx
  40cc60:	cmp    al,0xbf
  40cc62:	jae    0x40cce3
  40cc64:	fisttp QWORD PTR [rdi+0x15]
  40cc67:	jne    0x40cc69
	...
  40cc7d:	add    BYTE PTR [rax],al
  40cc7f:	add    BYTE PTR [rax-0x4a],dh
  40cc82:	add    BYTE PTR [rax],al
	...
  40cc8d:	add    BYTE PTR [rax],al
  40cc8f:	add    BYTE PTR [rax+0x40b6],ah
	...
  40cc9d:	add    BYTE PTR [rax],al
  40cc9f:	add    BYTE PTR [rax+0x40a5],dl
	...
  40ccad:	add    BYTE PTR [rax],al
  40ccaf:	add    al,ah
  40ccb1:	rol    DWORD PTR [rax+0x0],cl
	...
  40ccc0:	loopne 0x40cc95
  40ccc2:	add    BYTE PTR [rax],al
	...
  40cccd:	add    BYTE PTR [rax],al
  40cccf:	add    BYTE PTR [rax-0x34],al
  40ccd2:	add    BYTE PTR [rax],al
	...
  40ccdd:	add    BYTE PTR [rax],al
  40ccdf:	add    BYTE PTR [rax],ah
  40cce1:	(bad)
	...
  40ccf0:	rcl    BYTE PTR [rcx+rax*2],0x0
	...
  40cd00:	add    BYTE PTR [rax],al
  40cd02:	add    BYTE PTR [rax],al
	...
  40cd0d:	add    BYTE PTR [rax],al
  40cd0f:	add    BYTE PTR [rbx+riz*1],ah
  40cd12:	add    BYTE PTR [r8],al
	...
  40cd1d:	add    BYTE PTR [rax],al
  40cd1f:	add    BYTE PTR [rbx+riz*1+0x41],cl
	...
  40cd2f:	add    BYTE PTR [rbx+riz*1+0x41],ch
	...
  40cd3f:	add    BYTE PTR [rbx+riz*1+0x41],al
	...
  40cd4e:	add    BYTE PTR [rax],al
  40cd50:	rol    BYTE PTR [rsi],0x41
	...
  40cd5f:	add    BYTE PTR [rax+0x4114],al
	...
  40cd6d:	add    BYTE PTR [rax],al
  40cd6f:	add    BYTE PTR [rax+0x14],bh
  40cd72:	add    BYTE PTR [r8],al
	...
  40cd7d:	add    BYTE PTR [rax],al
  40cd7f:	add    BYTE PTR [rax+0x14],ch
  40cd82:	add    BYTE PTR [r8],al
	...
  40cd8d:	add    BYTE PTR [rax],al
  40cd8f:	add    BYTE PTR [rax+0x14],dh
  40cd92:	add    BYTE PTR [r8],al
	...
  40cd9d:	add    BYTE PTR [rax],al
  40cd9f:	add    BYTE PTR [rax-0x35],al
  40cda2:	add    BYTE PTR [rax],al
	...
  40cdb1:	int3   
  40cdb2:	add    BYTE PTR [rax],al
	...
  40cdc1:	xor    BYTE PTR [rcx+0x0],al
	...
  40cdd0:	adc    BYTE PTR [rax],dh
  40cdd2:	add    BYTE PTR [r8],al
	...
  40cddd:	add    BYTE PTR [rax],al
  40cddf:	add    BYTE PTR [rax],bl
  40cde1:	xor    BYTE PTR [rcx+0x0],al
	...
  40cdf0:	xor    BYTE PTR [rax],dh
  40cdf2:	add    BYTE PTR [r8],al
	...
  40cdfd:	add    BYTE PTR [rax],al
  40cdff:	add    BYTE PTR [rax+0x0],dl
  40ce02:	add    BYTE PTR [r8],al
	...
  40ce0d:	add    BYTE PTR [rax],al
  40ce0f:	add    BYTE PTR [rax+0x4106],dl
	...
  40ce1d:	add    BYTE PTR [rax],al
  40ce1f:	add    BYTE PTR [rax+0x25],ah
  40ce22:	add    BYTE PTR [rax],al
	...
  40ce2d:	add    BYTE PTR [rax],al
  40ce2f:	add    BYTE PTR [rax+0x401c],dh
	...
  40ce3d:	add    BYTE PTR [rax],al
  40ce3f:	add    BYTE PTR [rax+0x6],al
  40ce42:	add    BYTE PTR [r8],al
	...
  40ce4d:	add    BYTE PTR [rax],al
  40ce4f:	add    BYTE PTR [rax+0x6],dh
  40ce52:	add    BYTE PTR [r8],al
	...
  40ce5d:	add    BYTE PTR [rax],al
  40ce5f:	add    BYTE PTR [rax+0x0],ah
  40ce62:	add    BYTE PTR [r8],al
	...
  40ce6d:	add    BYTE PTR [rax],al
  40ce6f:	add    BYTE PTR [rax+0x6],bl
  40ce72:	add    BYTE PTR [r8],al
	...
  40ce7d:	add    BYTE PTR [rax],al
  40ce7f:	add    BYTE PTR [rsi+rax*1+0x41],dl
	...
  40ce8f:	add    BYTE PTR [rax+0x6],dl
  40ce92:	add    BYTE PTR [r8],al
	...
  40ce9d:	add    BYTE PTR [rax],al
  40ce9f:	add    BYTE PTR [rdi+0x43],al
  40cea2:	rex.XB cmp spl,BYTE PTR [r8]
  40cea5:	sub    BYTE PTR [rdi+0x4e],al
  40cea8:	push   rbp
  40cea9:	sub    DWORD PTR [rax],esp
  40ceab:	xor    al,0x2e
  40cead:	cmp    DWORD PTR [rsi],ebp
  40ceaf:	xor    al,0x0
	...
  40cebd:	add    BYTE PTR [rax],al
  40cebf:	add    BYTE PTR [rdi+0x43],al
  40cec2:	rex.XB cmp spl,BYTE PTR [r8]
  40cec5:	sub    BYTE PTR [rdi+0x4e],al
  40cec8:	push   rbp
  40cec9:	sub    DWORD PTR [rax],esp
  40cecb:	xor    al,0x2e
  40cecd:	cmp    DWORD PTR [rsi],ebp
  40cecf:	xor    al,0x0
	...
  40cedd:	add    BYTE PTR [rax],al
  40cedf:	add    BYTE PTR [rdi+0x43],al
  40cee2:	rex.XB cmp spl,BYTE PTR [r8]
  40cee5:	sub    BYTE PTR [rdi+0x4e],al
  40cee8:	push   rbp
  40cee9:	sub    DWORD PTR [rax],esp
  40ceeb:	xor    al,0x2e
  40ceed:	cmp    DWORD PTR [rsi],ebp
  40ceef:	xor    al,0x0
	...
  40cefd:	add    BYTE PTR [rax],al
  40ceff:	add    BYTE PTR [rdi+0x43],al
  40cf02:	rex.XB cmp spl,BYTE PTR [r8]
  40cf05:	sub    BYTE PTR [rdi+0x4e],al
  40cf08:	push   rbp
  40cf09:	sub    DWORD PTR [rax],esp
  40cf0b:	xor    al,0x2e
  40cf0d:	cmp    DWORD PTR [rsi],ebp
  40cf0f:	xor    al,0x0
	...
  40cf1d:	add    BYTE PTR [rax],al
  40cf1f:	add    BYTE PTR [rdi+0x43],al
  40cf22:	rex.XB cmp spl,BYTE PTR [r8]
  40cf25:	sub    BYTE PTR [rdi+0x4e],al
  40cf28:	push   rbp
  40cf29:	sub    DWORD PTR [rax],esp
  40cf2b:	xor    al,0x2e
  40cf2d:	cmp    DWORD PTR [rsi],ebp
  40cf2f:	xor    al,0x0
	...
  40cf3d:	add    BYTE PTR [rax],al
  40cf3f:	add    BYTE PTR [rdi+0x43],al
  40cf42:	rex.XB cmp spl,BYTE PTR [r8]
  40cf45:	sub    BYTE PTR [rdi+0x4e],al
  40cf48:	push   rbp
  40cf49:	sub    DWORD PTR [rax],esp
  40cf4b:	xor    al,0x2e
  40cf4d:	cmp    DWORD PTR [rsi],ebp
  40cf4f:	xor    al,0x0
	...
  40cf5d:	add    BYTE PTR [rax],al
  40cf5f:	add    BYTE PTR [rdi+0x43],al
  40cf62:	rex.XB cmp spl,BYTE PTR [r8]
  40cf65:	sub    BYTE PTR [rdi+0x4e],al
  40cf68:	push   rbp
  40cf69:	sub    DWORD PTR [rax],esp
  40cf6b:	xor    al,0x2e
  40cf6d:	cmp    DWORD PTR [rsi],ebp
  40cf6f:	xor    al,0x0
	...
  40cf7d:	add    BYTE PTR [rax],al
  40cf7f:	add    BYTE PTR [rdi+0x43],al
  40cf82:	rex.XB cmp spl,BYTE PTR [r8]
  40cf85:	sub    BYTE PTR [rdi+0x4e],al
  40cf88:	push   rbp
  40cf89:	sub    DWORD PTR [rax],esp
  40cf8b:	xor    al,0x2e
  40cf8d:	cmp    DWORD PTR [rsi],ebp
  40cf8f:	xor    al,0x0
	...
  40cf9d:	add    BYTE PTR [rax],al
  40cf9f:	add    BYTE PTR [rdi+0x43],al
  40cfa2:	rex.XB cmp spl,BYTE PTR [r8]
  40cfa5:	sub    BYTE PTR [rdi+0x4e],al
  40cfa8:	push   rbp
  40cfa9:	sub    DWORD PTR [rax],esp
  40cfab:	xor    al,0x2e
  40cfad:	cmp    DWORD PTR [rsi],ebp
  40cfaf:	xor    al,0x0
	...
  40cfbd:	add    BYTE PTR [rax],al
  40cfbf:	add    BYTE PTR [rdi+0x43],al
  40cfc2:	rex.XB cmp spl,BYTE PTR [r8]
  40cfc5:	sub    BYTE PTR [rdi+0x4e],al
  40cfc8:	push   rbp
  40cfc9:	sub    DWORD PTR [rax],esp
  40cfcb:	xor    al,0x2e
  40cfcd:	cmp    DWORD PTR [rsi],ebp
  40cfcf:	xor    al,0x0
	...
  40cfdd:	add    BYTE PTR [rax],al
  40cfdf:	add    BYTE PTR [rdi+0x43],al
  40cfe2:	rex.XB cmp spl,BYTE PTR [r8]
  40cfe5:	sub    BYTE PTR [rdi+0x4e],al
  40cfe8:	push   rbp
  40cfe9:	sub    DWORD PTR [rax],esp
  40cfeb:	xor    al,0x2e
  40cfed:	cmp    DWORD PTR [rsi],ebp
  40cfef:	xor    al,0x0
	...
  40cffd:	add    BYTE PTR [rax],al
  40cfff:	add    BYTE PTR [rdi+0x43],al
  40d002:	rex.XB cmp spl,BYTE PTR [r8]
  40d005:	sub    BYTE PTR [rdi+0x4e],al
  40d008:	push   rbp
  40d009:	sub    DWORD PTR [rax],esp
  40d00b:	xor    al,0x2e
  40d00d:	cmp    DWORD PTR [rsi],ebp
  40d00f:	xor    al,0x0
	...
  40d01d:	add    BYTE PTR [rax],al
  40d01f:	add    BYTE PTR [rdi+0x43],al
  40d022:	rex.XB cmp spl,BYTE PTR [r8]
  40d025:	sub    BYTE PTR [rdi+0x4e],al
  40d028:	push   rbp
  40d029:	sub    DWORD PTR [rax],esp
  40d02b:	xor    al,0x2e
  40d02d:	cmp    DWORD PTR [rsi],ebp
  40d02f:	xor    al,0x0
	...
  40d03d:	add    BYTE PTR [rax],al
  40d03f:	add    BYTE PTR [rdi+0x43],al
  40d042:	rex.XB cmp spl,BYTE PTR [r8]
  40d045:	sub    BYTE PTR [rdi+0x4e],al
  40d048:	push   rbp
  40d049:	sub    DWORD PTR [rax],esp
  40d04b:	xor    al,0x2e
  40d04d:	cmp    DWORD PTR [rsi],ebp
  40d04f:	xor    al,0x0
	...
  40d05d:	add    BYTE PTR [rax],al
  40d05f:	add    BYTE PTR [rdi+0x43],al
  40d062:	rex.XB cmp spl,BYTE PTR [r8]
  40d065:	sub    BYTE PTR [rdi+0x4e],al
  40d068:	push   rbp
  40d069:	sub    DWORD PTR [rax],esp
  40d06b:	xor    al,0x2e
  40d06d:	cmp    DWORD PTR [rsi],ebp
  40d06f:	xor    al,0x0
	...
  40d07d:	add    BYTE PTR [rax],al
  40d07f:	add    BYTE PTR [rdi+0x43],al
  40d082:	rex.XB cmp spl,BYTE PTR [r8]
  40d085:	sub    BYTE PTR [rdi+0x4e],al
  40d088:	push   rbp
  40d089:	sub    DWORD PTR [rax],esp
  40d08b:	xor    al,0x2e
  40d08d:	cmp    DWORD PTR [rsi],ebp
  40d08f:	xor    al,0x0
	...
  40d09d:	add    BYTE PTR [rax],al
  40d09f:	add    BYTE PTR [rdi+0x43],al
  40d0a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d0a5:	sub    BYTE PTR [rdi+0x4e],al
  40d0a8:	push   rbp
  40d0a9:	sub    DWORD PTR [rax],esp
  40d0ab:	xor    al,0x2e
  40d0ad:	cmp    DWORD PTR [rsi],ebp
  40d0af:	xor    al,0x0
	...
  40d0bd:	add    BYTE PTR [rax],al
  40d0bf:	add    BYTE PTR [rdi+0x43],al
  40d0c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d0c5:	sub    BYTE PTR [rdi+0x4e],al
  40d0c8:	push   rbp
  40d0c9:	sub    DWORD PTR [rax],esp
  40d0cb:	xor    al,0x2e
  40d0cd:	cmp    DWORD PTR [rsi],ebp
  40d0cf:	xor    al,0x0
	...
  40d0dd:	add    BYTE PTR [rax],al
  40d0df:	add    BYTE PTR [rdi+0x43],al
  40d0e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d0e5:	sub    BYTE PTR [rdi+0x4e],al
  40d0e8:	push   rbp
  40d0e9:	sub    DWORD PTR [rax],esp
  40d0eb:	xor    al,0x2e
  40d0ed:	cmp    DWORD PTR [rsi],ebp
  40d0ef:	xor    al,0x0
	...
  40d0fd:	add    BYTE PTR [rax],al
  40d0ff:	add    BYTE PTR [rdi+0x43],al
  40d102:	rex.XB cmp spl,BYTE PTR [r8]
  40d105:	sub    BYTE PTR [rdi+0x4e],al
  40d108:	push   rbp
  40d109:	sub    DWORD PTR [rax],esp
  40d10b:	xor    al,0x2e
  40d10d:	cmp    DWORD PTR [rsi],ebp
  40d10f:	xor    al,0x0
	...
  40d11d:	add    BYTE PTR [rax],al
  40d11f:	add    BYTE PTR [rdi+0x43],al
  40d122:	rex.XB cmp spl,BYTE PTR [r8]
  40d125:	sub    BYTE PTR [rdi+0x4e],al
  40d128:	push   rbp
  40d129:	sub    DWORD PTR [rax],esp
  40d12b:	xor    al,0x2e
  40d12d:	cmp    DWORD PTR [rsi],ebp
  40d12f:	xor    al,0x0
	...
  40d13d:	add    BYTE PTR [rax],al
  40d13f:	add    BYTE PTR [rdi+0x43],al
  40d142:	rex.XB cmp spl,BYTE PTR [r8]
  40d145:	sub    BYTE PTR [rdi+0x4e],al
  40d148:	push   rbp
  40d149:	sub    DWORD PTR [rax],esp
  40d14b:	xor    al,0x2e
  40d14d:	cmp    DWORD PTR [rsi],ebp
  40d14f:	xor    al,0x0
	...
  40d15d:	add    BYTE PTR [rax],al
  40d15f:	add    BYTE PTR [rdi+0x43],al
  40d162:	rex.XB cmp spl,BYTE PTR [r8]
  40d165:	sub    BYTE PTR [rdi+0x4e],al
  40d168:	push   rbp
  40d169:	sub    DWORD PTR [rax],esp
  40d16b:	xor    al,0x2e
  40d16d:	cmp    DWORD PTR [rsi],ebp
  40d16f:	xor    al,0x0
	...
  40d17d:	add    BYTE PTR [rax],al
  40d17f:	add    BYTE PTR [rdi+0x43],al
  40d182:	rex.XB cmp spl,BYTE PTR [r8]
  40d185:	sub    BYTE PTR [rdi+0x4e],al
  40d188:	push   rbp
  40d189:	sub    DWORD PTR [rax],esp
  40d18b:	xor    al,0x2e
  40d18d:	cmp    DWORD PTR [rsi],ebp
  40d18f:	xor    al,0x0
	...
  40d19d:	add    BYTE PTR [rax],al
  40d19f:	add    BYTE PTR [rdi+0x43],al
  40d1a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d1a5:	sub    BYTE PTR [rdi+0x4e],al
  40d1a8:	push   rbp
  40d1a9:	sub    DWORD PTR [rax],esp
  40d1ab:	xor    al,0x2e
  40d1ad:	cmp    DWORD PTR [rsi],ebp
  40d1af:	xor    al,0x0
	...
  40d1bd:	add    BYTE PTR [rax],al
  40d1bf:	add    BYTE PTR [rdi+0x43],al
  40d1c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d1c5:	sub    BYTE PTR [rdi+0x4e],al
  40d1c8:	push   rbp
  40d1c9:	sub    DWORD PTR [rax],esp
  40d1cb:	xor    al,0x2e
  40d1cd:	cmp    DWORD PTR [rsi],ebp
  40d1cf:	xor    al,0x0
	...
  40d1dd:	add    BYTE PTR [rax],al
  40d1df:	add    BYTE PTR [rdi+0x43],al
  40d1e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d1e5:	sub    BYTE PTR [rdi+0x4e],al
  40d1e8:	push   rbp
  40d1e9:	sub    DWORD PTR [rax],esp
  40d1eb:	xor    al,0x2e
  40d1ed:	cmp    DWORD PTR [rsi],ebp
  40d1ef:	xor    al,0x0
	...
  40d1fd:	add    BYTE PTR [rax],al
  40d1ff:	add    BYTE PTR [rdi+0x43],al
  40d202:	rex.XB cmp spl,BYTE PTR [r8]
  40d205:	sub    BYTE PTR [rdi+0x4e],al
  40d208:	push   rbp
  40d209:	sub    DWORD PTR [rax],esp
  40d20b:	xor    al,0x2e
  40d20d:	cmp    DWORD PTR [rsi],ebp
  40d20f:	xor    al,0x0
	...
  40d21d:	add    BYTE PTR [rax],al
  40d21f:	add    BYTE PTR [rdi+0x43],al
  40d222:	rex.XB cmp spl,BYTE PTR [r8]
  40d225:	sub    BYTE PTR [rdi+0x4e],al
  40d228:	push   rbp
  40d229:	sub    DWORD PTR [rax],esp
  40d22b:	xor    al,0x2e
  40d22d:	cmp    DWORD PTR [rsi],ebp
  40d22f:	xor    al,0x0
	...
  40d23d:	add    BYTE PTR [rax],al
  40d23f:	add    BYTE PTR [rdi+0x43],al
  40d242:	rex.XB cmp spl,BYTE PTR [r8]
  40d245:	sub    BYTE PTR [rdi+0x4e],al
  40d248:	push   rbp
  40d249:	sub    DWORD PTR [rax],esp
  40d24b:	xor    al,0x2e
  40d24d:	cmp    DWORD PTR [rsi],ebp
  40d24f:	xor    al,0x0
	...
  40d25d:	add    BYTE PTR [rax],al
  40d25f:	add    BYTE PTR [rdi+0x43],al
  40d262:	rex.XB cmp spl,BYTE PTR [r8]
  40d265:	sub    BYTE PTR [rdi+0x4e],al
  40d268:	push   rbp
  40d269:	sub    DWORD PTR [rax],esp
  40d26b:	xor    al,0x2e
  40d26d:	cmp    DWORD PTR [rsi],ebp
  40d26f:	xor    al,0x0
	...
  40d27d:	add    BYTE PTR [rax],al
  40d27f:	add    BYTE PTR [rdi+0x43],al
  40d282:	rex.XB cmp spl,BYTE PTR [r8]
  40d285:	sub    BYTE PTR [rdi+0x4e],al
  40d288:	push   rbp
  40d289:	sub    DWORD PTR [rax],esp
  40d28b:	xor    al,0x2e
  40d28d:	cmp    DWORD PTR [rsi],ebp
  40d28f:	xor    al,0x0
	...
  40d29d:	add    BYTE PTR [rax],al
  40d29f:	add    BYTE PTR [rdi+0x43],al
  40d2a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d2a5:	sub    BYTE PTR [rdi+0x4e],al
  40d2a8:	push   rbp
  40d2a9:	sub    DWORD PTR [rax],esp
  40d2ab:	xor    al,0x2e
  40d2ad:	cmp    DWORD PTR [rsi],ebp
  40d2af:	xor    al,0x0
	...
  40d2bd:	add    BYTE PTR [rax],al
  40d2bf:	add    BYTE PTR [rdi+0x43],al
  40d2c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d2c5:	sub    BYTE PTR [rdi+0x4e],al
  40d2c8:	push   rbp
  40d2c9:	sub    DWORD PTR [rax],esp
  40d2cb:	xor    al,0x2e
  40d2cd:	cmp    DWORD PTR [rsi],ebp
  40d2cf:	xor    al,0x0
	...
  40d2dd:	add    BYTE PTR [rax],al
  40d2df:	add    BYTE PTR [rdi+0x43],al
  40d2e2:	rex.XB cmp spl,BYTE PTR [r8]
  40d2e5:	sub    BYTE PTR [rdi+0x4e],al
  40d2e8:	push   rbp
  40d2e9:	sub    DWORD PTR [rax],esp
  40d2eb:	xor    al,0x2e
  40d2ed:	cmp    DWORD PTR [rsi],ebp
  40d2ef:	xor    al,0x0
	...
  40d2fd:	add    BYTE PTR [rax],al
  40d2ff:	add    BYTE PTR [rdi+0x43],al
  40d302:	rex.XB cmp spl,BYTE PTR [r8]
  40d305:	sub    BYTE PTR [rdi+0x4e],al
  40d308:	push   rbp
  40d309:	sub    DWORD PTR [rax],esp
  40d30b:	xor    al,0x2e
  40d30d:	cmp    DWORD PTR [rsi],ebp
  40d30f:	xor    al,0x0
	...
  40d31d:	add    BYTE PTR [rax],al
  40d31f:	add    BYTE PTR [rdi+0x43],al
  40d322:	rex.XB cmp spl,BYTE PTR [r8]
  40d325:	sub    BYTE PTR [rdi+0x4e],al
  40d328:	push   rbp
  40d329:	sub    DWORD PTR [rax],esp
  40d32b:	xor    al,0x2e
  40d32d:	cmp    DWORD PTR [rsi],ebp
  40d32f:	xor    al,0x0
	...
  40d33d:	add    BYTE PTR [rax],al
  40d33f:	add    BYTE PTR [rdi+0x43],al
  40d342:	rex.XB cmp spl,BYTE PTR [r8]
  40d345:	sub    BYTE PTR [rdi+0x4e],al
  40d348:	push   rbp
  40d349:	sub    DWORD PTR [rax],esp
  40d34b:	xor    al,0x2e
  40d34d:	cmp    DWORD PTR [rsi],ebp
  40d34f:	xor    al,0x0
	...
  40d35d:	add    BYTE PTR [rax],al
  40d35f:	add    BYTE PTR [rdi+0x43],al
  40d362:	rex.XB cmp spl,BYTE PTR [r8]
  40d365:	sub    BYTE PTR [rdi+0x4e],al
  40d368:	push   rbp
  40d369:	sub    DWORD PTR [rax],esp
  40d36b:	xor    al,0x2e
  40d36d:	cmp    DWORD PTR [rsi],ebp
  40d36f:	xor    al,0x0
	...
  40d37d:	add    BYTE PTR [rax],al
  40d37f:	add    BYTE PTR [rdi+0x43],al
  40d382:	rex.XB cmp spl,BYTE PTR [r8]
  40d385:	sub    BYTE PTR [rdi+0x4e],al
  40d388:	push   rbp
  40d389:	sub    DWORD PTR [rax],esp
  40d38b:	xor    al,0x2e
  40d38d:	cmp    DWORD PTR [rsi],ebp
  40d38f:	xor    al,0x0
	...
  40d39d:	add    BYTE PTR [rax],al
  40d39f:	add    BYTE PTR [rdi+0x43],al
  40d3a2:	rex.XB cmp spl,BYTE PTR [r8]
  40d3a5:	sub    BYTE PTR [rdi+0x4e],al
  40d3a8:	push   rbp
  40d3a9:	sub    DWORD PTR [rax],esp
  40d3ab:	xor    al,0x2e
  40d3ad:	cmp    DWORD PTR [rsi],ebp
  40d3af:	xor    al,0x0
	...
  40d3bd:	add    BYTE PTR [rax],al
  40d3bf:	add    BYTE PTR [rdi+0x43],al
  40d3c2:	rex.XB cmp spl,BYTE PTR [r8]
  40d3c5:	sub    BYTE PTR [rdi+0x4e],al
  40d3c8:	push   rbp
  40d3c9:	sub    DWORD PTR [rax],esp
  40d3cb:	xor    al,0x2e
  40d3cd:	cmp    DWORD PTR [rsi],ebp
  40d3cf:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040e000 <.pdata>:
  40e000:	add    BYTE PTR [rax],dl
  40e002:	add    BYTE PTR [rax],al
  40e004:	add    DWORD PTR [rax],edx
  40e006:	add    BYTE PTR [rax],al
  40e008:	add    al,dh
  40e00a:	add    BYTE PTR [rax],al
  40e00c:	adc    BYTE PTR [rax],dl
  40e00e:	add    BYTE PTR [rax],al
  40e010:	push   rcx
  40e011:	adc    DWORD PTR [rax],eax
  40e013:	add    BYTE PTR [rax+rsi*8],al
  40e016:	add    BYTE PTR [rax],al
  40e018:	(bad)  
  40e019:	adc    DWORD PTR [rax],eax
  40e01b:	add    BYTE PTR [rsi+0xc000011],ch
  40e021:	lock add BYTE PTR [rax],al
  40e024:	mov    al,0x11
  40e026:	add    BYTE PTR [rax],al
  40e028:	(bad)  
  40e029:	adc    al,0x0
  40e02b:	add    BYTE PTR [rax+rsi*8],dl
  40e02e:	add    BYTE PTR [rax],al
  40e030:	rcl    BYTE PTR [rax+rax*1],1
  40e033:	add    dl,dh
  40e035:	adc    al,0x0
  40e037:	add    BYTE PTR [rax],ch
  40e039:	lock add BYTE PTR [rax],al
  40e03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1562e042
  40e042:	add    BYTE PTR [rax],al
  40e044:	rex.W
  40e045:	lock add BYTE PTR [rax],al
  40e048:	xor    BYTE PTR [rip+0x15b40000],dl        # 0x15f4e04e
  40e04e:	add    BYTE PTR [rax],al
  40e050:	push   0xffffffffc00000f0
  40e055:	adc    eax,0x161f0000
  40e05a:	add    BYTE PTR [rax],al
  40e05c:	je     0x40e04e
  40e05e:	add    BYTE PTR [rax],al
  40e060:	and    BYTE PTR [rsi],dl
  40e062:	add    BYTE PTR [rax],al
  40e064:	mov    esi,0x7c000016
  40e069:	lock add BYTE PTR [rax],al
  40e06c:	rcl    BYTE PTR [rsi],0x0
  40e06f:	add    BYTE PTR [rcx-0x77ffffe9],cl
  40e075:	lock add BYTE PTR [rax],al
  40e078:	nop
  40e079:	(bad)  
  40e07a:	add    BYTE PTR [rax],al
  40e07c:	rcl    DWORD PTR [rdi],1
  40e07e:	add    BYTE PTR [rax],al
  40e080:	pushf  
  40e081:	lock add BYTE PTR [rax],al
  40e084:	loopne 0x40e09d
  40e086:	add    BYTE PTR [rax],al
  40e088:	or     ebx,DWORD PTR [rax]
  40e08a:	add    BYTE PTR [rax],al
  40e08c:	movabs al,ds:0xb7000018100000f0
  40e095:	sbb    BYTE PTR [rax],al
  40e097:	add    ah,ah
  40e099:	lock add BYTE PTR [rax],al
  40e09c:	rcr    BYTE PTR [rax],0x0
  40e09f:	add    cl,bl
  40e0a1:	sbb    BYTE PTR [rax],al
  40e0a3:	add    ah,ch
  40e0a5:	lock add BYTE PTR [rax],al
  40e0a8:	loopne 0x40e0c2
  40e0aa:	add    BYTE PTR [rax],al
  40e0ac:	adc    eax,0xf4000019
  40e0b1:	lock add BYTE PTR [rax],al
  40e0b4:	and    BYTE PTR [rcx],bl
  40e0b6:	add    BYTE PTR [rax],al
  40e0b8:	jne    0x40e0d3
  40e0ba:	add    BYTE PTR [rax],al
  40e0bc:	cld    
  40e0bd:	lock add BYTE PTR [rax],al
  40e0c0:	sbb    BYTE PTR [rcx],0x0
  40e0c3:	add    BYTE PTR [rcx+rbx*1-0xef80000],bl
  40e0ca:	add    BYTE PTR [rax],al
  40e0cc:	movabs al,ds:0xc000019aa000019
  40e0d5:	icebp  
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	mov    al,0x19
  40e0da:	add    BYTE PTR [rax],al
  40e0dc:	mov    bl,0x19
  40e0de:	add    BYTE PTR [rax],al
  40e0e0:	adc    cl,dh
  40e0e2:	add    BYTE PTR [rax],al
  40e0e4:	rcr    BYTE PTR [rcx],0x0
  40e0e7:	add    BYTE PTR [rsi+0x1400001a],dl
  40e0ed:	icebp  
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	movabs al,ds:0x2400001b9b00001a
  40e0f9:	icebp  
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	movabs al,ds:0x3400001bcf00001b
  40e105:	icebp  
  40e106:	add    BYTE PTR [rax],al
  40e108:	rcr    BYTE PTR [rbx],1
  40e10a:	add    BYTE PTR [rax],al
  40e10c:	cmp    DWORD PTR [rax+rax*1],ebx
  40e10f:	add    BYTE PTR [rcx+rsi*8],bh
  40e112:	add    BYTE PTR [rax],al
  40e114:	sbb    al,0x0
  40e117:	add    BYTE PTR [rbx+0x1c],al
  40e11a:	add    BYTE PTR [rax],al
  40e11c:	rex.W icebp 
  40e11e:	add    BYTE PTR [rax],al
  40e120:	push   rax
  40e121:	sbb    al,0x0
  40e123:	add    BYTE PTR [rcx+0x4c00001c],dl
  40e129:	icebp  
  40e12a:	add    BYTE PTR [rax],al
  40e12c:	movabs al,ds:0x5400001cac00001c
  40e135:	icebp  
  40e136:	add    BYTE PTR [rax],al
  40e138:	mov    al,0x1c
  40e13a:	add    BYTE PTR [rax],al
  40e13c:	lods   al,BYTE PTR ds:[rsi]
  40e13d:	sbb    eax,0xf1580000
  40e142:	add    BYTE PTR [rax],al
  40e144:	mov    al,0x1d
  40e146:	add    BYTE PTR [rax],al
  40e148:	mov    bl,0x1d
  40e14a:	add    BYTE PTR [rax],al
  40e14c:	jo     0x40e13f
  40e14e:	add    BYTE PTR [rax],al
  40e150:	rcr    BYTE PTR [rip+0x1dc40000],0x0        # 0x1e04e157
  40e157:	add    BYTE PTR [rcx+rsi*8+0x0],dh
  40e15b:	add    al,dl
  40e15d:	sbb    eax,0x1dd40000
  40e162:	add    BYTE PTR [rax],al
  40e164:	js     0x40e157
  40e166:	add    BYTE PTR [rax],al
  40e168:	loopne 0x40e187
  40e16a:	add    BYTE PTR [rax],al
  40e16c:	rex.B (bad) 
  40e16e:	add    BYTE PTR [rax],al
  40e170:	jl     0x40e163
  40e172:	add    BYTE PTR [rax],al
  40e174:	push   rax
  40e175:	(bad)  
  40e176:	add    BYTE PTR [rax],al
  40e178:	mov    dl,0x1f
  40e17a:	add    BYTE PTR [rax],al
  40e17c:	mov    cl,dh
  40e17e:	add    BYTE PTR [rax],al
  40e180:	rcr    BYTE PTR [rdi],0x0
  40e183:	add    BYTE PTR [rcx-0x63ffffde],bh
  40e189:	icebp  
  40e18a:	add    BYTE PTR [rax],al
  40e18c:	shl    BYTE PTR [rdx],0x0
  40e18f:	add    BYTE PTR [rsi+0x24],ah
  40e192:	add    BYTE PTR [rax],al
  40e194:	mov    ah,0xf1
  40e196:	add    BYTE PTR [rax],al
  40e198:	jo     0x40e1be
  40e19a:	add    BYTE PTR [rax],al
  40e19c:	pop    rsp
  40e19d:	and    eax,0xf1bc0000
  40e1a2:	add    BYTE PTR [rax],al
  40e1a4:	(bad)  
  40e1a5:	and    eax,0x27180000
  40e1aa:	add    BYTE PTR [rax],al
  40e1ac:	int3   
  40e1ad:	icebp  
  40e1ae:	add    BYTE PTR [rax],al
  40e1b0:	and    BYTE PTR [rdi],ah
  40e1b2:	add    BYTE PTR [rax],al
  40e1b4:	lea    esp,[rdi]
  40e1b6:	add    BYTE PTR [rax],al
  40e1b8:	(bad)  
  40e1b9:	icebp  
  40e1ba:	add    BYTE PTR [rax],al
  40e1bc:	nop
  40e1bd:	(bad)  
  40e1be:	add    BYTE PTR [rax],al
  40e1c0:	movaps xmm0,XMMWORD PTR [rax]
  40e1c3:	add    ah,ah
  40e1c5:	icebp  
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	adc    BYTE PTR [rax],ch
  40e1ca:	add    BYTE PTR [rax],al
  40e1cc:	scas   eax,DWORD PTR es:[rdi]
  40e1cd:	sub    BYTE PTR [rax],al
  40e1cf:	add    al,dh
  40e1d1:	icebp  
  40e1d2:	add    BYTE PTR [rax],al
  40e1d4:	mov    al,0x28
  40e1d6:	add    BYTE PTR [rax],al
  40e1d8:	mov    ch,BYTE PTR [rcx]
  40e1da:	add    BYTE PTR [rax],al
  40e1dc:	clc    
  40e1dd:	icebp  
  40e1de:	add    BYTE PTR [rax],al
  40e1e0:	nop
  40e1e1:	sub    DWORD PTR [rax],eax
  40e1e3:	add    BYTE PTR [rdi+0x29],ch
  40e1e9:	repnz add BYTE PTR [rax],al
  40e1ec:	mov    al,0x29
  40e1ee:	add    BYTE PTR [rax],al
  40e1f0:	ret    0x29
  40e1f3:	add    BYTE PTR [rdx+rsi*8],al
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	shr    BYTE PTR [rcx],1
  40e1fa:	add    BYTE PTR [rax],al
  40e1fc:	adc    eax,0x800002a
  40e201:	repnz add BYTE PTR [rax],al
  40e204:	and    BYTE PTR [rdx],ch
  40e206:	add    BYTE PTR [rax],al
  40e208:	mov    esi,0xc00002a
  40e20d:	repnz add BYTE PTR [rax],al
  40e210:	shr    BYTE PTR [rdx],0x0
  40e213:	add    BYTE PTR [rbx],al
  40e215:	sub    eax,DWORD PTR [rax]
  40e217:	add    BYTE PTR [rax],bl
  40e219:	repnz add BYTE PTR [rax],al
  40e21c:	adc    BYTE PTR [rbx],ch
  40e21e:	add    BYTE PTR [rax],al
  40e220:	rex.WXB sub rax,QWORD PTR [r8]
  40e223:	add    BYTE PTR [rdx+rsi*8],ah
  40e226:	add    BYTE PTR [rax],al
  40e228:	push   rax
  40e229:	sub    eax,DWORD PTR [rax]
  40e22b:	add    dh,bl
  40e22d:	sub    eax,DWORD PTR [rax]
  40e22f:	add    BYTE PTR [rdx+rsi*8],ch
  40e232:	add    BYTE PTR [rax],al
  40e234:	loopne 0x40e261
  40e236:	add    BYTE PTR [rax],al
  40e238:	sbb    BYTE PTR [rax+rax*1],ch
  40e23b:	add    BYTE PTR [rax],bh
  40e23d:	repnz add BYTE PTR [rax],al
  40e240:	and    BYTE PTR [rax+rax*1],ch
  40e243:	add    BYTE PTR [rbp+0x2c],dh
  40e246:	add    BYTE PTR [rax],al
  40e248:	rex.R
  40e249:	repnz add BYTE PTR [rax],al
  40e24c:	sub    BYTE PTR [rax+rax*1],0x0
  40e250:	cs sub eax,0xf2500000
  40e256:	add    BYTE PTR [rax],al
  40e258:	jo     0x40e287
  40e25a:	add    BYTE PTR [rax],al
  40e25c:	push   rax
  40e25d:	add    BYTE PTR cs:[rax],al
  40e260:	(bad)  
  40e261:	repnz add BYTE PTR [rax],al
  40e264:	push   rax
  40e265:	add    BYTE PTR cs:[rax],al
  40e268:	clc    
  40e269:	(bad)  
  40e26a:	add    BYTE PTR [rax],al
  40e26c:	push   0xf2
  40e271:	xor    BYTE PTR [rax],al
  40e273:	add    BYTE PTR [rcx],ah
  40e275:	xor    DWORD PTR [rax],eax
  40e277:	add    BYTE PTR [rax-0xe],dh
  40e27a:	add    BYTE PTR [rax],al
  40e27c:	xor    BYTE PTR [rcx],dh
  40e27e:	add    BYTE PTR [rax],al
  40e280:	and    esi,DWORD PTR [rdx]
  40e282:	add    BYTE PTR [rax],al
  40e284:	jl     0x40e278
  40e286:	add    BYTE PTR [rax],al
  40e288:	(bad)  
  40e289:	xor    al,BYTE PTR [rax]
  40e28b:	add    BYTE PTR [rcx+0x33],dl
  40e28e:	add    BYTE PTR [rax],al
  40e290:	mov    dl,dh
  40e292:	add    BYTE PTR [rax],al
  40e294:	(bad)  
  40e295:	xor    eax,DWORD PTR [rax]
  40e297:	add    bl,bh
  40e299:	xor    eax,DWORD PTR [rax]
  40e29b:	add    BYTE PTR [rax+0xf2],dl
  40e2a1:	xor    al,0x0
  40e2a3:	add    al,dh
  40e2a5:	cmp    DWORD PTR [rax],eax
  40e2a7:	add    BYTE PTR [rax-0xfffff0e],bl
  40e2ad:	cmp    DWORD PTR [rax],eax
  40e2af:	add    bl,ah
  40e2b1:	cmp    al,BYTE PTR [rax]
  40e2b3:	add    BYTE PTR [rax+0x300000f2],bh
  40e2b9:	cmp    eax,DWORD PTR [rax]
  40e2bb:	add    bl,bl
  40e2bd:	cmp    eax,DWORD PTR [rax]
  40e2bf:	add    ah,al
  40e2c1:	repnz add BYTE PTR [rax],al
  40e2c4:	loopne 0x40e301
  40e2c6:	add    BYTE PTR [rax],al
  40e2c8:	cdq    
  40e2c9:	(bad)  
  40e2ca:	add    BYTE PTR [rax],al
  40e2cc:	shl    dl,1
  40e2ce:	add    BYTE PTR [rax],al
  40e2d0:	movabs al,ds:0xe800003fd200003f
  40e2d9:	repnz add BYTE PTR [rax],al
  40e2dc:	loopne 0x40e31d
  40e2de:	add    BYTE PTR [rax],al
  40e2e0:	mov    DWORD PTR [rax+0x0],eax
  40e2e3:	add    ah,ch
  40e2e5:	repnz add BYTE PTR [rax],al
  40e2e8:	nop
  40e2e9:	add    BYTE PTR [rax],al
  40e2ec:	fstp   QWORD PTR [rbx+0x0]
  40e2ef:	add    ah,dh
  40e2f1:	repnz add BYTE PTR [rax],al
  40e2f4:	loopne 0x40e351
  40e2f6:	add    BYTE PTR [rax],al
  40e2f8:	cmp    ebx,DWORD PTR [rbp+0x0]
  40e2fb:	add    BYTE PTR [rbx+rsi*8],ah
  40e2fe:	add    BYTE PTR [rax],al
  40e300:	rex pop rbp
  40e302:	add    BYTE PTR [rax],al
  40e304:	cmp    eax,0x38000060
  40e309:	repz add BYTE PTR [rax],al
  40e30c:	and    BYTE PTR [rcx+0x0],ah
  40e30f:	add    bh,ch
  40e311:	imul   eax,DWORD PTR [rax],0xf34800
  40e317:	add    al,dh
  40e319:	imul   eax,DWORD PTR [rax],0x6aed00
  40e31f:	add    BYTE PTR [rax-0xd],ah
  40e322:	add    BYTE PTR [rax],al
  40e324:	lock push 0x0
  40e327:	add    BYTE PTR [rsi],ch
  40e329:	imul   eax,DWORD PTR [rax],0x0
  40e32c:	ins    BYTE PTR es:[rdi],dx
  40e32d:	repz add BYTE PTR [rax],al
  40e330:	xor    BYTE PTR [rbx+0x0],ch
  40e333:	add    BYTE PTR [rbx+rbp*2-0xc900000],dh
  40e33a:	add    BYTE PTR [rax],al
  40e33c:	shr    BYTE PTR [rbx+0x0],0x0
  40e340:	jb     0x40e3b1
  40e342:	add    BYTE PTR [rax],al
  40e344:	je     0x40e339
  40e346:	add    BYTE PTR [rax],al
  40e348:	sub    BYTE PTR [rdi+0x0],0x0
  40e34c:	rex.WR jo 0x40e34f
  40e34f:	add    BYTE PTR [rbx+rsi*8+0x70500000],cl
  40e356:	add    BYTE PTR [rax],al
  40e358:	xchg   edx,eax
  40e359:	jo     0x40e35b
  40e35b:	add    BYTE PTR [rax-0x5fffff0d],bl
  40e361:	jo     0x40e363
  40e363:	add    BYTE PTR [rsi-0x5fffff8f],ch
  40e369:	repz add BYTE PTR [rax],al
  40e36c:	mov    al,0x71
  40e36e:	add    BYTE PTR [rax],al
  40e370:	(bad)  
  40e371:	jb     0x40e373
  40e373:	add    BYTE PTR [rbx+rsi*8+0x72200000],ch
  40e37a:	add    BYTE PTR [rax],al
  40e37c:	shl    BYTE PTR [rdx+0x0],cl
  40e37f:	add    BYTE PTR [rbx+rsi*8+0x72e00000],dh
  40e386:	add    BYTE PTR [rax],al
  40e388:	(bad)  
  40e389:	jae    0x40e38b
  40e38b:	add    ah,al
  40e38d:	repz add BYTE PTR [rax],al
  40e390:	adc    BYTE PTR [rbx+0x0],dh
  40e393:	add    BYTE PTR [rax+0x74],al
  40e396:	add    BYTE PTR [rax],al
  40e398:	int3   
  40e399:	repz add BYTE PTR [rax],al
  40e39c:	rex je 0x40e39f
  40e39f:	add    BYTE PTR [rbp+rsi*2-0xc200000],ah
  40e3a6:	add    BYTE PTR [rax],al
  40e3a8:	mov    al,0x75
  40e3aa:	add    BYTE PTR [rax],al
  40e3ac:	ret    
  40e3ad:	jbe    0x40e3af
  40e3af:	add    al,dh
  40e3b1:	repz add BYTE PTR [rax],al
  40e3b4:	shl    BYTE PTR [rsi+0x0],1
  40e3b7:	add    BYTE PTR [rdi+rsi*2],dl
  40e3ba:	add    BYTE PTR [rax],al
  40e3bc:	add    al,0xf4
  40e3be:	add    BYTE PTR [rax],al
  40e3c0:	and    BYTE PTR [rdi+0x0],dh
  40e3c3:	add    BYTE PTR [rsi+0x78],dl
  40e3c6:	add    BYTE PTR [rax],al
  40e3c8:	or     ah,dh
  40e3ca:	add    BYTE PTR [rax],al
  40e3cc:	(bad)  
  40e3cd:	js     0x40e3cf
  40e3cf:	add    BYTE PTR [rbx+0x79],dh
  40e3d2:	add    BYTE PTR [rax],al
  40e3d4:	adc    al,0xf4
  40e3d6:	add    BYTE PTR [rax],al
  40e3d8:	cmp    BYTE PTR [rcx+0x0],0x0
  40e3dc:	mov    DWORD PTR [rdx+0x0],edi
  40e3df:	add    BYTE PTR [rax],ah
  40e3e1:	hlt    
  40e3e2:	add    BYTE PTR [rax],al
  40e3e4:	nop
  40e3e5:	jp     0x40e3e7
  40e3e7:	add    BYTE PTR [rdx+rdi*2-0xbd40000],dh
  40e3ee:	add    BYTE PTR [rax],al
  40e3f0:	sar    BYTE PTR [rdx+0x0],0x0
  40e3f4:	mov    ebx,0x3000007b
  40e3f9:	hlt    
  40e3fa:	add    BYTE PTR [rax],al
  40e3fc:	sar    BYTE PTR [rbx+0x0],0x0
  40e400:	jl     0x40e47e
  40e402:	add    BYTE PTR [rax],al
  40e404:	rex.R hlt 
  40e406:	add    BYTE PTR [rax],al
  40e408:	cmp    BYTE PTR [rax+rax*1+0x0],0xc3
  40e40d:	jl     0x40e40f
  40e40f:	add    BYTE PTR [rsp+rsi*8+0x0],dl
  40e413:	add    al,dl
  40e415:	jl     0x40e417
  40e417:	add    BYTE PTR [rdx],dh
  40e419:	jge    0x40e41b
  40e41b:	add    BYTE PTR [rax-0xc],bl
  40e41e:	add    BYTE PTR [rax],al
  40e420:	rex jge 0x40e423
  40e423:	add    cl,cl
  40e425:	jge    0x40e427
  40e427:	add    BYTE PTR [rsp+rsi*8+0x0],bl
  40e42b:	add    BYTE PTR [rax],al
  40e42d:	jg     0x40e42f
  40e42f:	add    BYTE PTR [rax],cl
  40e431:	jg     0x40e433
  40e433:	add    BYTE PTR [rax-0xc],ah
  40e436:	add    BYTE PTR [rax],al
  40e438:	adc    BYTE PTR [rdi+0x0],bh
  40e43b:	add    BYTE PTR [rbx],bl
  40e43d:	jg     0x40e43f
  40e43f:	add    BYTE PTR [rsp+rsi*8+0x0],ah
  40e443:	add    al,ah
  40e445:	jg     0x40e447
  40e447:	add    BYTE PTR [rsi-0x5bffff5b],al
  40e44d:	lock add BYTE PTR [rax],al

Disassembly of section .xdata:

000000000040f000 <.xdata>:
  40f000:	add    DWORD PTR [rax],eax
  40f002:	add    BYTE PTR [rax],al
  40f004:	add    DWORD PTR [rcx+rax*1],eax
  40f007:	add    BYTE PTR [rdx+rax*2],al
  40f00a:	add    BYTE PTR [rax],al
  40f00c:	add    DWORD PTR [rcx+rax*1],eax
  40f00f:	add    BYTE PTR [rdx+riz*2],al
  40f012:	add    BYTE PTR [rax],al
  40f014:	add    DWORD PTR [rdi],ecx
  40f016:	or     BYTE PTR [rax],al
  40f018:	lgdt   [rbx]
  40f01b:	add    BYTE PTR [rax],cl
  40f01d:	xor    BYTE PTR [rdi],al
  40f01f:	(bad)  
  40f020:	(bad)  
  40f021:	jo     0x40f028
  40f023:	push   rax
  40f024:	add    al,0xc0
  40f026:	add    dl,al
  40f028:	or     DWORD PTR [rcx+rax*1],eax
  40f02b:	add    BYTE PTR [rdx+rax*2],al
  40f02e:	add    BYTE PTR [rax],al
  40f030:	clc    
  40f031:	jle    0x40f033
  40f033:	add    BYTE PTR [rcx],al
  40f035:	add    BYTE PTR [rax],al
  40f037:	add    ah,dl
  40f039:	adc    al,0x0
  40f03b:	add    ah,ch
  40f03d:	adc    al,0x0
  40f03f:	add    BYTE PTR [rax+0x25],ah
  40f042:	add    BYTE PTR [rax],al
  40f044:	in     al,dx
  40f045:	adc    al,0x0
  40f047:	add    BYTE PTR [rcx],cl
  40f049:	add    al,0x1
  40f04b:	add    BYTE PTR [rdx+rax*2],al
  40f04e:	add    BYTE PTR [rax],al
  40f050:	clc    
  40f051:	jle    0x40f053
  40f053:	add    BYTE PTR [rcx],al
  40f055:	add    BYTE PTR [rax],al
  40f057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40f05e:	add    BYTE PTR [rax],al
  40f060:	(bad)  
  40f061:	and    eax,0x151c0000
  40f066:	add    BYTE PTR [rax],al
  40f068:	add    DWORD PTR [rcx],ecx
  40f06a:	add    eax,DWORD PTR [rax]
  40f06c:	or     DWORD PTR [rax+0x2],ebp
  40f06f:	add    BYTE PTR [rdx+riz*2],al
  40f072:	add    BYTE PTR [rax],al
  40f074:	add    DWORD PTR [rcx+rax*1],eax
  40f077:	add    BYTE PTR [rdx+rax*2],al
  40f07a:	add    BYTE PTR [rax],al
  40f07c:	add    DWORD PTR [rdx],ecx
  40f07e:	add    al,0x0
  40f080:	or     ch,BYTE PTR [rax+0x2]
  40f083:	add    BYTE PTR [rip+0x1300152],al        # 0x170f1db
  40f089:	adc    BYTE PTR [rdi],al
  40f08b:	add    BYTE PTR [rax],dl
  40f08d:	js     0x40f093
  40f08f:	add    BYTE PTR [rbx],cl
  40f091:	push   0xffffffffa2060003
  40f096:	add    dh,BYTE PTR [rax]
  40f098:	add    DWORD PTR [rax+0x0],esp
  40f09b:	add    BYTE PTR [rcx],al
  40f09d:	add    BYTE PTR [rax],al
  40f09f:	add    BYTE PTR [rcx],al
  40f0a1:	add    BYTE PTR [rax],al
  40f0a3:	add    BYTE PTR [rcx],al
  40f0a5:	imul   ebx,DWORD PTR [rsi],0x0
  40f0a8:	imul   edi,eax,0xffffffc7
  40f0ab:	add    BYTE PTR [rdx-0x18],ah
  40f0ae:	mov    BYTE PTR [rax],0x59
  40f0b1:	fadd   st,st(5)
  40f0b3:	add    BYTE PTR [rax-0x38],dl
  40f0b6:	(bad)  
  40f0b7:	add    BYTE PTR [rdi-0x48],al
  40f0ba:	ret    
  40f0bb:	add    BYTE PTR [rsi],bh
  40f0bd:	test   al,0xc2
  40f0bf:	add    BYTE PTR [rip+0x2c00c198],dh        # 0x2c41b25d
  40f0c5:	mov    al,al
  40f0c7:	add    BYTE PTR [rbx],ah
  40f0c9:	js     0x40f08a
  40f0cb:	add    BYTE PTR [rbx],bl
  40f0cd:	push   0x11300be
  40f0d2:	xchg   ecx,eax
  40f0d3:	add    DWORD PTR [rax+rsi*1],ecx
  40f0d6:	or     esp,DWORD PTR [rax+0xa]
  40f0d9:	jo     0x40f0e4
  40f0db:	push   rax
  40f0dc:	or     al,al
  40f0de:	(bad)  
  40f0df:	rol    BYTE PTR [rax+riz*8],1
  40f0e2:	add    dh,al
  40f0e4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f0ec
  40f0ea:	add    DWORD PTR [rax],esi
  40f0ec:	add    DWORD PTR [rcx+rax*1],eax
  40f0ef:	add    BYTE PTR [rdx+rax*2],al
  40f0f2:	add    BYTE PTR [rax],al
  40f0f4:	add    DWORD PTR [rcx+rax*1],eax
  40f0f7:	add    BYTE PTR [rdx+rax*2],al
  40f0fa:	add    BYTE PTR [rax],al
  40f0fc:	add    DWORD PTR [rsi],eax
  40f0fe:	add    eax,DWORD PTR [rax]
  40f100:	(bad)  
  40f101:	rex.X add sil,BYTE PTR [rax]
  40f104:	add    DWORD PTR [rax+0x0],esp
  40f107:	add    BYTE PTR [rcx],al
  40f109:	add    BYTE PTR [rax],al
  40f10b:	add    BYTE PTR [rcx],al
  40f10d:	add    BYTE PTR [rax],al
  40f10f:	add    BYTE PTR [rcx],al
  40f111:	add    BYTE PTR [rax],al
  40f113:	add    BYTE PTR [rcx],al
  40f115:	or     al,BYTE PTR [rsi]
  40f117:	add    BYTE PTR [rdx],cl
  40f119:	jb     0x40f121
  40f11b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f581
  40f121:	push   rax
  40f122:	add    al,al
  40f124:	add    DWORD PTR [rdx],ecx
  40f126:	add    eax,0x6d20a05
  40f12b:	add    eax,DWORD PTR [rbx]
  40f12d:	xor    BYTE PTR [rdx],al
  40f12f:	(bad)  
  40f130:	add    DWORD PTR [rax+0x0],edx
  40f133:	add    BYTE PTR [rcx],al
  40f135:	add    al,0x1
  40f137:	add    BYTE PTR [rdx+rax*2],al
  40f13a:	add    BYTE PTR [rax],al
  40f13c:	add    DWORD PTR [rsi],eax
  40f13e:	add    eax,DWORD PTR [rax]
  40f140:	(bad)  
  40f141:	rex.X add sil,BYTE PTR [rax]
  40f144:	add    DWORD PTR [rax+0x0],esp
  40f147:	add    BYTE PTR [rcx],al
  40f149:	add    BYTE PTR [rax],al
  40f14b:	add    BYTE PTR [rcx],al
  40f14d:	add    al,0x1
  40f14f:	add    BYTE PTR [rdx+riz*4],al
  40f152:	add    BYTE PTR [rax],al
  40f154:	add    DWORD PTR [rax],eax
  40f156:	add    BYTE PTR [rax],al
  40f158:	add    DWORD PTR [rsi],edx
  40f15a:	or     DWORD PTR [rax],eax
  40f15c:	(bad)  
  40f15d:	mov    BYTE PTR [rsi],al
  40f15f:	add    BYTE PTR [rax],dl
  40f161:	js     0x40f168
  40f163:	add    BYTE PTR [rbx],cl
  40f165:	push   0xffffffffe2060004
  40f16a:	add    dh,BYTE PTR [rax]
  40f16c:	add    DWORD PTR [rax+0x0],esp
  40f16f:	add    BYTE PTR [rcx],al
  40f171:	add    BYTE PTR [rax],al
  40f173:	add    BYTE PTR [rcx],al
  40f175:	add    BYTE PTR [rax],al
  40f177:	add    BYTE PTR [rcx],al
  40f179:	add    BYTE PTR [rax],al
  40f17b:	add    BYTE PTR [rcx],al
  40f17d:	(bad)  
  40f17e:	add    eax,DWORD PTR [rax]
  40f180:	(bad)  
  40f181:	(bad)  
  40f183:	xor    BYTE PTR [rcx],al
  40f185:	(bad)  
  40f186:	add    BYTE PTR [rax],al
  40f188:	add    DWORD PTR [rdi+rax*1],ecx
  40f18b:	add    BYTE PTR [rdx+riz*4],cl
  40f18e:	or     BYTE PTR [rax],dh
  40f190:	(bad)  
  40f191:	(bad)  
  40f192:	(bad)  
  40f193:	jo     0x40f19a
  40f195:	push   rax
  40f196:	add    al,0xc0
  40f198:	add    dl,al
  40f19a:	add    BYTE PTR [rax],al
  40f19c:	add    DWORD PTR [rcx],edx
  40f19e:	or     DWORD PTR [rip+0x30db211],eax        # 0x34ea3b5
  40f1a4:	or     dh,BYTE PTR [rax]
  40f1a6:	or     DWORD PTR [rax+0x8],esp
  40f1a9:	jo     0x40f1b2
  40f1ab:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220f582
  40f1b2:	add    BYTE PTR [rax],al
  40f1b4:	add    DWORD PTR [rcx+rax*1],eax
  40f1b7:	add    BYTE PTR [rdx+rax*2],al
  40f1ba:	add    BYTE PTR [rax],al
  40f1bc:	add    DWORD PTR [rdx],ecx
  40f1be:	(bad)  
  40f1bf:	add    BYTE PTR [rdx],cl
  40f1c1:	xor    al,BYTE PTR [rsi]
  40f1c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0f629
  40f1c9:	push   rax
  40f1ca:	add    al,al
  40f1cc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f1d4
  40f1d2:	add    DWORD PTR [rax],esi
  40f1d4:	add    DWORD PTR [rax],ecx
  40f1d6:	add    eax,0x4420800
  40f1db:	xor    BYTE PTR [rbx],al
  40f1dd:	(bad)  
  40f1de:	add    dh,BYTE PTR [rax+0x1]
  40f1e1:	push   rax
  40f1e2:	add    BYTE PTR [rax],al
  40f1e4:	add    DWORD PTR [rdi],eax
  40f1e6:	add    al,0x0
  40f1e8:	(bad)  
  40f1e9:	xor    al,BYTE PTR [rbx]
  40f1eb:	xor    BYTE PTR [rdx],al
  40f1ed:	(bad)  
  40f1ee:	add    DWORD PTR [rax+0x1],esi
  40f1f1:	add    eax,0x32050002
  40f1f6:	add    DWORD PTR [rax],esi
  40f1f8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f200
  40f1fe:	add    DWORD PTR [rax],esi
  40f200:	add    DWORD PTR [rax],eax
  40f202:	add    BYTE PTR [rax],al
  40f204:	add    DWORD PTR [rax],eax
  40f206:	add    BYTE PTR [rax],al
  40f208:	add    DWORD PTR [rax],eax
  40f20a:	add    BYTE PTR [rax],al
  40f20c:	add    DWORD PTR [rdi],eax
  40f20e:	add    al,0x0
  40f210:	(bad)  
  40f211:	xor    al,BYTE PTR [rbx]
  40f213:	xor    BYTE PTR [rdx],al
  40f215:	(bad)  
  40f216:	add    DWORD PTR [rax+0x1],esi
  40f219:	(bad)  
  40f21a:	add    eax,DWORD PTR [rax]
  40f21c:	(bad)  
  40f21d:	rex.X add sil,BYTE PTR [rax]
  40f220:	add    DWORD PTR [rax+0x0],esp
  40f223:	add    BYTE PTR [rcx],al
  40f225:	add    eax,0x32050002
  40f22a:	add    DWORD PTR [rax],esi
  40f22c:	add    DWORD PTR [rdi],eax
  40f22e:	add    al,0x0
  40f230:	(bad)  
  40f231:	xor    al,BYTE PTR [rbx]
  40f233:	xor    BYTE PTR [rdx],al
  40f235:	(bad)  
  40f236:	add    DWORD PTR [rax+0x1],esi
  40f239:	(bad)  
  40f23a:	add    eax,DWORD PTR [rax]
  40f23c:	(bad)  
  40f23d:	rex.X add sil,BYTE PTR [rax]
  40f240:	add    DWORD PTR [rax+0x0],esp
  40f243:	add    BYTE PTR [rcx],al
  40f245:	(bad)  
  40f246:	add    eax,DWORD PTR [rax]
  40f248:	(bad)  
  40f249:	rex.X add sil,BYTE PTR [rax]
  40f24c:	add    DWORD PTR [rax+0x0],esp
  40f24f:	add    BYTE PTR [rcx],al
  40f251:	or     BYTE PTR [rip+0x4420800],al        # 0x482fa57
  40f257:	xor    BYTE PTR [rbx],al
  40f259:	(bad)  
  40f25a:	add    dh,BYTE PTR [rax+0x1]
  40f25d:	push   rax
  40f25e:	add    BYTE PTR [rax],al
  40f260:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb245f268
  40f266:	add    DWORD PTR [rax],esi
  40f268:	add    DWORD PTR [rip+0x12050002],eax        # 0x1245f270
  40f26e:	add    DWORD PTR [rax],esi
  40f270:	add    DWORD PTR [rdx],ecx
  40f272:	add    al,0x0
  40f274:	or     ch,BYTE PTR [rax+0x5]
  40f277:	add    BYTE PTR [rip+0x13001b2],al        # 0x170f42f
  40f27d:	or     al,BYTE PTR [rax+rax*1]
  40f280:	or     ch,BYTE PTR [rax+0x7]
  40f283:	add    BYTE PTR [rip+0x13001f2],al        # 0x170f47b
  40f289:	add    al,0x1
  40f28b:	add    BYTE PTR [rdx+rax*4],al
  40f28e:	add    BYTE PTR [rax],al
  40f290:	add    DWORD PTR [rcx+rax*1],eax
  40f293:	add    BYTE PTR [rdx+rax*2],al
  40f296:	add    BYTE PTR [rax],al
  40f298:	add    DWORD PTR [rcx*1+0xb982c00],ebp
  40f29f:	add    BYTE PTR [rbx],ah
  40f2a1:	mov    BYTE PTR [rdx],cl
  40f2a3:	add    BYTE PTR [rdx],bl
  40f2a5:	js     0x40f2b0
  40f2a7:	add    BYTE PTR [rdx],dl
  40f2a9:	push   0x10a0008
  40f2ae:	sbb    BYTE PTR [rax],al
  40f2b0:	add    esi,DWORD PTR [rax]
  40f2b2:	add    ah,BYTE PTR [rax+0x1]
  40f2b5:	jo     0x40f2b7
  40f2b7:	add    BYTE PTR [rcx],al
  40f2b9:	or     al,BYTE PTR [rax+rax*1]
  40f2bc:	or     ch,BYTE PTR [rax+0x7]
  40f2bf:	add    BYTE PTR [rip+0x13001f2],al        # 0x170f4b7
  40f2c5:	(bad)  
  40f2c6:	add    eax,DWORD PTR [rax]
  40f2c8:	(bad)  
  40f2c9:	rex.X add sil,BYTE PTR [rax]
  40f2cc:	add    DWORD PTR [rax+0x0],esp
  40f2cf:	add    BYTE PTR [rcx],al
  40f2d1:	adc    BYTE PTR [rcx],cl
  40f2d3:	add    BYTE PTR [rax],dl
  40f2d5:	(bad)  
  40f2d6:	or     al,0x30
  40f2d8:	or     esp,DWORD PTR [rax+0xa]
  40f2db:	jo     0x40f2e6
  40f2dd:	push   rax
  40f2de:	or     al,al
  40f2e0:	(bad)  
  40f2e1:	rol    BYTE PTR [rax+riz*8],1
  40f2e4:	add    dh,al
  40f2e6:	add    BYTE PTR [rax],al
  40f2e8:	add    DWORD PTR [rax],eax
  40f2ea:	add    BYTE PTR [rax],al
  40f2ec:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245f2f4
  40f2f2:	add    DWORD PTR [rax],esi
  40f2f4:	add    DWORD PTR [rdi+0x16],eax
  40f2f7:	add    BYTE PTR [rdi-0x48],al
  40f2fa:	adc    al,BYTE PTR [rax]
  40f2fc:	ds test al,0x11
  40f2ff:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c41039d
  40f305:	mov    BYTE PTR [rdi],cl
  40f307:	add    BYTE PTR [rbx],ah
  40f309:	js     0x40f319
  40f30b:	add    BYTE PTR [rbx],bl
  40f30d:	push   0x113000d
  40f312:	(bad)  
  40f313:	add    BYTE PTR [rax+rsi*1],cl
  40f316:	or     esp,DWORD PTR [rax+0xa]
  40f319:	jo     0x40f324
  40f31b:	push   rax
  40f31c:	or     al,al
  40f31e:	(bad)  
  40f31f:	rol    BYTE PTR [rax+riz*8],1
  40f322:	add    dh,al
  40f324:	add    DWORD PTR [rdi+rax*1],ecx
  40f327:	add    BYTE PTR [rdx+rax*2],cl
  40f32a:	or     BYTE PTR [rax],dh
  40f32c:	(bad)  
  40f32d:	(bad)  
  40f32e:	(bad)  
  40f32f:	jo     0x40f336
  40f331:	push   rax
  40f332:	add    al,0xc0
  40f334:	add    dl,al
  40f336:	add    BYTE PTR [rax],al
  40f338:	add    DWORD PTR [rsi],ecx
  40f33a:	add    eax,0x6780e00
  40f33f:	add    BYTE PTR [rcx],cl
  40f341:	push   0xffffffffe2040005
  40f346:	add    BYTE PTR [rax],al
  40f348:	add    DWORD PTR [rax],edx
  40f34a:	or     DWORD PTR [rax],eax
  40f34c:	adc    BYTE PTR [rdx+0xc],al
  40f34f:	xor    BYTE PTR [rbx],cl
  40f351:	(bad)  
  40f352:	or     dh,BYTE PTR [rax+0x9]
  40f355:	push   rax
  40f356:	or     al,al
  40f358:	(bad)  
  40f359:	rol    BYTE PTR [rax+riz*8],1
  40f35c:	add    dh,al
  40f35e:	add    BYTE PTR [rax],al
  40f360:	add    DWORD PTR [rsp+rax*1],eax
  40f363:	add    BYTE PTR [rax+rsi*1],al
  40f366:	add    esp,DWORD PTR [rax+0x2]
  40f369:	jo     0x40f36c
  40f36b:	push   rax
  40f36c:	add    DWORD PTR [rax],eax
  40f36e:	add    BYTE PTR [rax],al
  40f370:	add    DWORD PTR [rax],eax
  40f372:	add    BYTE PTR [rax],al
  40f374:	add    DWORD PTR [rax],edx
  40f376:	or     DWORD PTR [rax],eax
  40f378:	adc    BYTE PTR [rdx+0x600b300c],al
  40f37e:	or     dh,BYTE PTR [rax+0x9]
  40f381:	push   rax
  40f382:	or     al,al
  40f384:	(bad)  
  40f385:	rol    BYTE PTR [rax+riz*8],1
  40f388:	add    dh,al
  40f38a:	add    BYTE PTR [rax],al
  40f38c:	add    DWORD PTR [rsi],eax
  40f38e:	add    eax,DWORD PTR [rax]
  40f390:	(bad)  
  40f391:	rex.X add sil,BYTE PTR [rax]
  40f394:	add    DWORD PTR [rax+0x0],esp
  40f397:	add    BYTE PTR [rcx],al
  40f399:	add    eax,0x32050002
  40f39e:	add    DWORD PTR [rax],esi
  40f3a0:	add    DWORD PTR [rdi],eax
  40f3a2:	add    al,0x0
  40f3a4:	(bad)  
  40f3a5:	xor    al,BYTE PTR [rbx]
  40f3a7:	xor    BYTE PTR [rdx],al
  40f3a9:	(bad)  
  40f3aa:	add    DWORD PTR [rax+0x1],esi
  40f3ad:	add    eax,0x32050002
  40f3b2:	add    DWORD PTR [rax],esi
  40f3b4:	add    DWORD PTR [rax],ecx
  40f3b6:	add    eax,0x4420800
  40f3bb:	xor    BYTE PTR [rbx],al
  40f3bd:	(bad)  
  40f3be:	add    dh,BYTE PTR [rax+0x1]
  40f3c1:	push   rax
  40f3c2:	add    BYTE PTR [rax],al
  40f3c4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245f3cc
  40f3ca:	add    DWORD PTR [rax],esi
  40f3cc:	add    DWORD PTR [rsi],ecx
  40f3ce:	or     BYTE PTR [rax],al
  40f3d0:	(bad)  
  40f3d1:	xor    cl,BYTE PTR [rdx]
  40f3d3:	xor    BYTE PTR [rcx],cl
  40f3d5:	(bad)  
  40f3d6:	or     BYTE PTR [rax+0x7],dh
  40f3d9:	push   rax
  40f3da:	(bad)  
  40f3db:	rol    BYTE PTR [rax+rdx*8],0x2
  40f3df:	loopne 0x40f3e2
  40f3e1:	or     BYTE PTR [rip+0x4420800],al        # 0x482fbe7
  40f3e7:	xor    BYTE PTR [rbx],al
  40f3e9:	(bad)  
  40f3ea:	add    dh,BYTE PTR [rax+0x1]
  40f3ed:	push   rax
  40f3ee:	add    BYTE PTR [rax],al
  40f3f0:	add    DWORD PTR [rdi+rax*1],ecx
  40f3f3:	add    BYTE PTR [rdx+rax*2],cl
  40f3f6:	or     BYTE PTR [rax],dh
  40f3f8:	(bad)  
  40f3f9:	(bad)  
  40f3fa:	(bad)  
  40f3fb:	jo     0x40f402
  40f3fd:	push   rax
  40f3fe:	add    al,0xc0
  40f400:	add    dl,al
  40f402:	add    BYTE PTR [rax],al
  40f404:	add    DWORD PTR [rax],eax
  40f406:	add    BYTE PTR [rax],al
  40f408:	add    DWORD PTR [rdi],eax
  40f40a:	add    al,0x0
  40f40c:	(bad)  
  40f40d:	xor    al,BYTE PTR [rbx]
  40f40f:	xor    BYTE PTR [rdx],al
  40f411:	(bad)  
  40f412:	add    DWORD PTR [rax+0x1],esi
  40f415:	(bad)  
  40f416:	add    eax,DWORD PTR [rax]
  40f418:	(bad)  
  40f419:	and    al,BYTE PTR [rdx]
  40f41b:	xor    BYTE PTR [rcx],al
  40f41d:	(bad)  
  40f41e:	add    BYTE PTR [rax],al
  40f420:	add    DWORD PTR [rdi],eax
  40f422:	add    al,0x0
  40f424:	(bad)  
  40f425:	xor    al,BYTE PTR [rbx]
  40f427:	xor    BYTE PTR [rdx],al
  40f429:	(bad)  
  40f42a:	add    DWORD PTR [rax+0x1],esi
  40f42d:	add    BYTE PTR [rax],al
  40f42f:	add    BYTE PTR [rcx],al
  40f431:	or     al,0x7
  40f433:	add    BYTE PTR [rdx+rax*2],cl
  40f436:	or     BYTE PTR [rax],dh
  40f438:	(bad)  
  40f439:	(bad)  
  40f43a:	(bad)  
  40f43b:	jo     0x40f442
  40f43d:	push   rax
  40f43e:	add    al,0xc0
  40f440:	add    dl,al
  40f442:	add    BYTE PTR [rax],al
  40f444:	add    DWORD PTR [rsi+rax*1],ecx
  40f447:	add    BYTE PTR [rax+rbp*2],cl
  40f44a:	add    al,0x0
  40f44c:	(bad)  
  40f44d:	xchg   edx,eax
  40f44e:	add    esi,DWORD PTR [rax]
  40f450:	add    ah,BYTE PTR [rax+0x1]
  40f453:	jo     0x40f456
  40f455:	add    BYTE PTR [rax],al
  40f457:	add    BYTE PTR [rcx],al
  40f459:	add    BYTE PTR [rax],al
  40f45b:	add    BYTE PTR [rcx],al
  40f45d:	add    BYTE PTR [rax],al
  40f45f:	add    BYTE PTR [rcx],al
  40f461:	add    BYTE PTR [rax],al
  40f463:	add    BYTE PTR [rcx],al
  40f465:	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000410000 <.bss>:
	...

Disassembly of section .idata:

0000000000412000 <.idata>:
  412000:	cmp    al,0x20
  412002:	add    DWORD PTR [rax],eax
	...
  41200c:	ins    BYTE PTR es:[rdi],dx
  41200d:	sub    BYTE PTR [rcx],al
  41200f:	add    BYTE PTR [rdx+riz*1+0x1],cl
  412013:	add    ah,bh
  412015:	and    BYTE PTR [rcx],al
	...
  41201f:	add    BYTE PTR [rax],ah
  412021:	sub    DWORD PTR [rcx],eax
  412023:	add    BYTE PTR [rbx+riz*1],cl
  412026:	add    DWORD PTR [rax],eax
	...
  41203c:	pop    rsp
  41203d:	and    al,0x1
  41203f:	add    BYTE PTR [rax],al
  412041:	add    BYTE PTR [rax],al
  412043:	add    BYTE PTR [rsp+0x1],dh
  412047:	add    BYTE PTR [rax],al
  412049:	add    BYTE PTR [rax],al
  41204b:	add    BYTE PTR [rsp+0x1],cl
  412052:	add    BYTE PTR [rax],al
  412054:	movabs al,ds:0xb600000000000124
  41205d:	and    al,0x1
  41205f:	add    BYTE PTR [rax],al
  412061:	add    BYTE PTR [rax],al
  412063:	add    ah,cl
  412065:	and    al,0x1
  412067:	add    BYTE PTR [rax],al
  412069:	add    BYTE PTR [rax],al
  41206b:	add    ah,bl
  41206d:	and    al,0x1
  41206f:	add    BYTE PTR [rax],al
  412071:	add    BYTE PTR [rax],al
  412073:	add    dh,ch
  412075:	and    al,0x1
  412077:	add    BYTE PTR [rax],al
  412079:	add    BYTE PTR [rax],al
  41207b:	add    BYTE PTR [rax],cl
  41207d:	and    eax,0x1
  412082:	add    BYTE PTR [rax],al
  412084:	sbb    BYTE PTR [rip+0x1],ah        # 0x41208b
  41208a:	add    BYTE PTR [rax],al
  41208c:	xor    al,0x25
  41208e:	add    DWORD PTR [rax],eax
  412090:	add    BYTE PTR [rax],al
  412092:	add    BYTE PTR [rax],al
  412094:	rex.WR and rax,0x1
  41209a:	add    BYTE PTR [rax],al
  41209c:	and    ax,0x1
  4120a0:	add    BYTE PTR [rax],al
  4120a2:	add    BYTE PTR [rax],al
  4120a4:	jl     0x4120cb
  4120a6:	add    DWORD PTR [rax],eax
  4120a8:	add    BYTE PTR [rax],al
  4120aa:	add    BYTE PTR [rax],al
  4120ac:	nop
  4120ad:	and    eax,0x1
  4120b2:	add    BYTE PTR [rax],al
  4120b4:	stos   BYTE PTR es:[rdi],al
  4120b5:	and    eax,0x1
  4120ba:	add    BYTE PTR [rax],al
  4120bc:	mov    esi,0x125
  4120c1:	add    BYTE PTR [rax],al
  4120c3:	add    ah,bl
  4120c5:	and    eax,0x1
  4120ca:	add    BYTE PTR [rax],al
  4120cc:	in     al,0x25
  4120ce:	add    DWORD PTR [rax],eax
  4120d0:	add    BYTE PTR [rax],al
  4120d2:	add    BYTE PTR [rax],al
  4120d4:	clc    
  4120d5:	and    eax,0x1
  4120da:	add    BYTE PTR [rax],al
  4120dc:	(bad)  
  4120dd:	add    DWORD PTR es:[rax],eax
  4120e0:	add    BYTE PTR [rax],al
  4120e2:	add    BYTE PTR [rax],al
  4120e4:	and    ah,BYTE PTR [rsi]
  4120e6:	add    DWORD PTR [rax],eax
  4120e8:	add    BYTE PTR [rax],al
  4120ea:	add    BYTE PTR [rax],al
  4120ec:	xor    al,0x26
  4120ee:	add    DWORD PTR [rax],eax
	...
  4120fc:	rex.R
  4120fd:	add    DWORD PTR es:[rax],eax
  412100:	add    BYTE PTR [rax],al
  412102:	add    BYTE PTR [rax],al
  412104:	pop    rsp
  412105:	add    DWORD PTR es:[rax],eax
  412108:	add    BYTE PTR [rax],al
  41210a:	add    BYTE PTR [rax],al
  41210c:	push   0x26
  41210e:	add    DWORD PTR [rax],eax
  412110:	add    BYTE PTR [rax],al
  412112:	add    BYTE PTR [rax],al
  412114:	jp     0x41213c
  412116:	add    DWORD PTR [rax],eax
  412118:	add    BYTE PTR [rax],al
  41211a:	add    BYTE PTR [rax],al
  41211c:	xchg   BYTE PTR [rsi],ah
  41211e:	add    DWORD PTR [rax],eax
  412120:	add    BYTE PTR [rax],al
  412122:	add    BYTE PTR [rax],al
  412124:	xchg   esp,eax
  412125:	add    DWORD PTR es:[rax],eax
  412128:	add    BYTE PTR [rax],al
  41212a:	add    BYTE PTR [rax],al
  41212c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41212d:	add    DWORD PTR es:[rax],eax
  412130:	add    BYTE PTR [rax],al
  412132:	add    BYTE PTR [rax],al
  412134:	mov    dh,0x26
  412136:	add    DWORD PTR [rax],eax
  412138:	add    BYTE PTR [rax],al
  41213a:	add    BYTE PTR [rax],al
  41213c:	retf   0x126
  41213f:	add    BYTE PTR [rax],al
  412141:	add    BYTE PTR [rax],al
  412143:	add    ah,dl
  412145:	add    DWORD PTR es:[rax],eax
  412148:	add    BYTE PTR [rax],al
  41214a:	add    BYTE PTR [rax],al
  41214c:	loop   0x412174
  41214e:	add    DWORD PTR [rax],eax
  412150:	add    BYTE PTR [rax],al
  412152:	add    BYTE PTR [rax],al
  412154:	in     al,dx
  412155:	add    DWORD PTR es:[rax],eax
  412158:	add    BYTE PTR [rax],al
  41215a:	add    BYTE PTR [rax],al
  41215c:	mul    BYTE PTR [rsi]
  41215e:	add    DWORD PTR [rax],eax
  412160:	add    BYTE PTR [rax],al
  412162:	add    BYTE PTR [rax],al
  412164:	add    BYTE PTR [rdi],ah
  412166:	add    DWORD PTR [rax],eax
  412168:	add    BYTE PTR [rax],al
  41216a:	add    BYTE PTR [rax],al
  41216c:	or     al,0x27
  41216e:	add    DWORD PTR [rax],eax
  412170:	add    BYTE PTR [rax],al
  412172:	add    BYTE PTR [rax],al
  412174:	adc    al,0x27
  412176:	add    DWORD PTR [rax],eax
  412178:	add    BYTE PTR [rax],al
  41217a:	add    BYTE PTR [rax],al
  41217c:	(bad)  
  41217d:	(bad)  
  41217e:	add    DWORD PTR [rax],eax
  412180:	add    BYTE PTR [rax],al
  412182:	add    BYTE PTR [rax],al
  412184:	sub    BYTE PTR [rdi],ah
  412186:	add    DWORD PTR [rax],eax
  412188:	add    BYTE PTR [rax],al
  41218a:	add    BYTE PTR [rax],al
  41218c:	xor    ah,BYTE PTR [rdi]
  41218e:	add    DWORD PTR [rax],eax
  412190:	add    BYTE PTR [rax],al
  412192:	add    BYTE PTR [rax],al
  412194:	cmp    ah,BYTE PTR [rdi]
  412196:	add    DWORD PTR [rax],eax
  412198:	add    BYTE PTR [rax],al
  41219a:	add    BYTE PTR [rax],al
  41219c:	rex.X (bad) 
  41219e:	add    DWORD PTR [rax],eax
  4121a0:	add    BYTE PTR [rax],al
  4121a2:	add    BYTE PTR [rax],al
  4121a4:	rex.WX (bad) 
  4121a6:	add    DWORD PTR [rax],eax
  4121a8:	add    BYTE PTR [rax],al
  4121aa:	add    BYTE PTR [rax],al
  4121ac:	push   rdx
  4121ad:	(bad)  
  4121ae:	add    DWORD PTR [rax],eax
  4121b0:	add    BYTE PTR [rax],al
  4121b2:	add    BYTE PTR [rax],al
  4121b4:	pop    rsp
  4121b5:	(bad)  
  4121b6:	add    DWORD PTR [rax],eax
  4121b8:	add    BYTE PTR [rax],al
  4121ba:	add    BYTE PTR [rax],al
  4121bc:	fs (bad) 
  4121be:	add    DWORD PTR [rax],eax
  4121c0:	add    BYTE PTR [rax],al
  4121c2:	add    BYTE PTR [rax],al
  4121c4:	outs   dx,BYTE PTR ds:[rsi]
  4121c5:	(bad)  
  4121c6:	add    DWORD PTR [rax],eax
  4121c8:	add    BYTE PTR [rax],al
  4121ca:	add    BYTE PTR [rax],al
  4121cc:	jbe    0x4121f5
  4121ce:	add    DWORD PTR [rax],eax
  4121d0:	add    BYTE PTR [rax],al
  4121d2:	add    BYTE PTR [rax],al
  4121d4:	jle    0x4121fd
  4121d6:	add    DWORD PTR [rax],eax
  4121d8:	add    BYTE PTR [rax],al
  4121da:	add    BYTE PTR [rax],al
  4121dc:	mov    BYTE PTR [rdi],ah
  4121de:	add    DWORD PTR [rax],eax
  4121e0:	add    BYTE PTR [rax],al
  4121e2:	add    BYTE PTR [rax],al
  4121e4:	xchg   esi,eax
  4121e5:	(bad)  
  4121e6:	add    DWORD PTR [rax],eax
  4121e8:	add    BYTE PTR [rax],al
  4121ea:	add    BYTE PTR [rax],al
  4121ec:	movabs al,ds:0xaa00000000000127
  4121f5:	(bad)  
  4121f6:	add    DWORD PTR [rax],eax
  4121f8:	add    BYTE PTR [rax],al
  4121fa:	add    BYTE PTR [rax],al
  4121fc:	mov    ah,0x27
  4121fe:	add    DWORD PTR [rax],eax
  412200:	add    BYTE PTR [rax],al
  412202:	add    BYTE PTR [rax],al
  412204:	mov    esi,0x127
  412209:	add    BYTE PTR [rax],al
  41220b:	add    al,cl
  41220d:	(bad)  
  41220e:	add    DWORD PTR [rax],eax
  412210:	add    BYTE PTR [rax],al
  412212:	add    BYTE PTR [rax],al
  412214:	shl    BYTE PTR [rdi],cl
  412216:	add    DWORD PTR [rax],eax
  412218:	add    BYTE PTR [rax],al
  41221a:	add    BYTE PTR [rax],al
  41221c:	fsub   QWORD PTR [rdi]
  41221e:	add    DWORD PTR [rax],eax
  412220:	add    BYTE PTR [rax],al
  412222:	add    BYTE PTR [rax],al
  412224:	out    0x27,al
  412226:	add    DWORD PTR [rax],eax
  412228:	add    BYTE PTR [rax],al
  41222a:	add    BYTE PTR [rax],al
  41222c:	lock (bad) 
  41222e:	add    DWORD PTR [rax],eax
  412230:	add    BYTE PTR [rax],al
  412232:	add    BYTE PTR [rax],al
  412234:	cli    
  412235:	(bad)  
  412236:	add    DWORD PTR [rax],eax
  412238:	add    BYTE PTR [rax],al
  41223a:	add    BYTE PTR [rax],al
  41223c:	add    al,0x28
  41223e:	add    DWORD PTR [rax],eax
	...
  41224c:	pop    rsp
  41224d:	and    al,0x1
  41224f:	add    BYTE PTR [rax],al
  412251:	add    BYTE PTR [rax],al
  412253:	add    BYTE PTR [rsp+0x1],dh
  412257:	add    BYTE PTR [rax],al
  412259:	add    BYTE PTR [rax],al
  41225b:	add    BYTE PTR [rsp+0x1],cl
  412262:	add    BYTE PTR [rax],al
  412264:	movabs al,ds:0xb600000000000124
  41226d:	and    al,0x1
  41226f:	add    BYTE PTR [rax],al
  412271:	add    BYTE PTR [rax],al
  412273:	add    ah,cl
  412275:	and    al,0x1
  412277:	add    BYTE PTR [rax],al
  412279:	add    BYTE PTR [rax],al
  41227b:	add    ah,bl
  41227d:	and    al,0x1
  41227f:	add    BYTE PTR [rax],al
  412281:	add    BYTE PTR [rax],al
  412283:	add    dh,ch
  412285:	and    al,0x1
  412287:	add    BYTE PTR [rax],al
  412289:	add    BYTE PTR [rax],al
  41228b:	add    BYTE PTR [rax],cl
  41228d:	and    eax,0x1
  412292:	add    BYTE PTR [rax],al
  412294:	sbb    BYTE PTR [rip+0x1],ah        # 0x41229b
  41229a:	add    BYTE PTR [rax],al
  41229c:	xor    al,0x25
  41229e:	add    DWORD PTR [rax],eax
  4122a0:	add    BYTE PTR [rax],al
  4122a2:	add    BYTE PTR [rax],al
  4122a4:	rex.WR and rax,0x1
  4122aa:	add    BYTE PTR [rax],al
  4122ac:	and    ax,0x1
  4122b0:	add    BYTE PTR [rax],al
  4122b2:	add    BYTE PTR [rax],al
  4122b4:	jl     0x4122db
  4122b6:	add    DWORD PTR [rax],eax
  4122b8:	add    BYTE PTR [rax],al
  4122ba:	add    BYTE PTR [rax],al
  4122bc:	nop
  4122bd:	and    eax,0x1
  4122c2:	add    BYTE PTR [rax],al
  4122c4:	stos   BYTE PTR es:[rdi],al
  4122c5:	and    eax,0x1
  4122ca:	add    BYTE PTR [rax],al
  4122cc:	mov    esi,0x125
  4122d1:	add    BYTE PTR [rax],al
  4122d3:	add    ah,bl
  4122d5:	and    eax,0x1
  4122da:	add    BYTE PTR [rax],al
  4122dc:	in     al,0x25
  4122de:	add    DWORD PTR [rax],eax
  4122e0:	add    BYTE PTR [rax],al
  4122e2:	add    BYTE PTR [rax],al
  4122e4:	clc    
  4122e5:	and    eax,0x1
  4122ea:	add    BYTE PTR [rax],al
  4122ec:	(bad)  
  4122ed:	add    DWORD PTR es:[rax],eax
  4122f0:	add    BYTE PTR [rax],al
  4122f2:	add    BYTE PTR [rax],al
  4122f4:	and    ah,BYTE PTR [rsi]
  4122f6:	add    DWORD PTR [rax],eax
  4122f8:	add    BYTE PTR [rax],al
  4122fa:	add    BYTE PTR [rax],al
  4122fc:	xor    al,0x26
  4122fe:	add    DWORD PTR [rax],eax
	...
  41230c:	rex.R
  41230d:	add    DWORD PTR es:[rax],eax
  412310:	add    BYTE PTR [rax],al
  412312:	add    BYTE PTR [rax],al
  412314:	pop    rsp
  412315:	add    DWORD PTR es:[rax],eax
  412318:	add    BYTE PTR [rax],al
  41231a:	add    BYTE PTR [rax],al
  41231c:	push   0x26
  41231e:	add    DWORD PTR [rax],eax
  412320:	add    BYTE PTR [rax],al
  412322:	add    BYTE PTR [rax],al
  412324:	jp     0x41234c
  412326:	add    DWORD PTR [rax],eax
  412328:	add    BYTE PTR [rax],al
  41232a:	add    BYTE PTR [rax],al
  41232c:	xchg   BYTE PTR [rsi],ah
  41232e:	add    DWORD PTR [rax],eax
  412330:	add    BYTE PTR [rax],al
  412332:	add    BYTE PTR [rax],al
  412334:	xchg   esp,eax
  412335:	add    DWORD PTR es:[rax],eax
  412338:	add    BYTE PTR [rax],al
  41233a:	add    BYTE PTR [rax],al
  41233c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41233d:	add    DWORD PTR es:[rax],eax
  412340:	add    BYTE PTR [rax],al
  412342:	add    BYTE PTR [rax],al
  412344:	mov    dh,0x26
  412346:	add    DWORD PTR [rax],eax
  412348:	add    BYTE PTR [rax],al
  41234a:	add    BYTE PTR [rax],al
  41234c:	retf   0x126
  41234f:	add    BYTE PTR [rax],al
  412351:	add    BYTE PTR [rax],al
  412353:	add    ah,dl
  412355:	add    DWORD PTR es:[rax],eax
  412358:	add    BYTE PTR [rax],al
  41235a:	add    BYTE PTR [rax],al
  41235c:	loop   0x412384
  41235e:	add    DWORD PTR [rax],eax
  412360:	add    BYTE PTR [rax],al
  412362:	add    BYTE PTR [rax],al
  412364:	in     al,dx
  412365:	add    DWORD PTR es:[rax],eax
  412368:	add    BYTE PTR [rax],al
  41236a:	add    BYTE PTR [rax],al
  41236c:	mul    BYTE PTR [rsi]
  41236e:	add    DWORD PTR [rax],eax
  412370:	add    BYTE PTR [rax],al
  412372:	add    BYTE PTR [rax],al
  412374:	add    BYTE PTR [rdi],ah
  412376:	add    DWORD PTR [rax],eax
  412378:	add    BYTE PTR [rax],al
  41237a:	add    BYTE PTR [rax],al
  41237c:	or     al,0x27
  41237e:	add    DWORD PTR [rax],eax
  412380:	add    BYTE PTR [rax],al
  412382:	add    BYTE PTR [rax],al
  412384:	adc    al,0x27
  412386:	add    DWORD PTR [rax],eax
  412388:	add    BYTE PTR [rax],al
  41238a:	add    BYTE PTR [rax],al
  41238c:	(bad)  
  41238d:	(bad)  
  41238e:	add    DWORD PTR [rax],eax
  412390:	add    BYTE PTR [rax],al
  412392:	add    BYTE PTR [rax],al
  412394:	sub    BYTE PTR [rdi],ah
  412396:	add    DWORD PTR [rax],eax
  412398:	add    BYTE PTR [rax],al
  41239a:	add    BYTE PTR [rax],al
  41239c:	xor    ah,BYTE PTR [rdi]
  41239e:	add    DWORD PTR [rax],eax
  4123a0:	add    BYTE PTR [rax],al
  4123a2:	add    BYTE PTR [rax],al
  4123a4:	cmp    ah,BYTE PTR [rdi]
  4123a6:	add    DWORD PTR [rax],eax
  4123a8:	add    BYTE PTR [rax],al
  4123aa:	add    BYTE PTR [rax],al
  4123ac:	rex.X (bad) 
  4123ae:	add    DWORD PTR [rax],eax
  4123b0:	add    BYTE PTR [rax],al
  4123b2:	add    BYTE PTR [rax],al
  4123b4:	rex.WX (bad) 
  4123b6:	add    DWORD PTR [rax],eax
  4123b8:	add    BYTE PTR [rax],al
  4123ba:	add    BYTE PTR [rax],al
  4123bc:	push   rdx
  4123bd:	(bad)  
  4123be:	add    DWORD PTR [rax],eax
  4123c0:	add    BYTE PTR [rax],al
  4123c2:	add    BYTE PTR [rax],al
  4123c4:	pop    rsp
  4123c5:	(bad)  
  4123c6:	add    DWORD PTR [rax],eax
  4123c8:	add    BYTE PTR [rax],al
  4123ca:	add    BYTE PTR [rax],al
  4123cc:	fs (bad) 
  4123ce:	add    DWORD PTR [rax],eax
  4123d0:	add    BYTE PTR [rax],al
  4123d2:	add    BYTE PTR [rax],al
  4123d4:	outs   dx,BYTE PTR ds:[rsi]
  4123d5:	(bad)  
  4123d6:	add    DWORD PTR [rax],eax
  4123d8:	add    BYTE PTR [rax],al
  4123da:	add    BYTE PTR [rax],al
  4123dc:	jbe    0x412405
  4123de:	add    DWORD PTR [rax],eax
  4123e0:	add    BYTE PTR [rax],al
  4123e2:	add    BYTE PTR [rax],al
  4123e4:	jle    0x41240d
  4123e6:	add    DWORD PTR [rax],eax
  4123e8:	add    BYTE PTR [rax],al
  4123ea:	add    BYTE PTR [rax],al
  4123ec:	mov    BYTE PTR [rdi],ah
  4123ee:	add    DWORD PTR [rax],eax
  4123f0:	add    BYTE PTR [rax],al
  4123f2:	add    BYTE PTR [rax],al
  4123f4:	xchg   esi,eax
  4123f5:	(bad)  
  4123f6:	add    DWORD PTR [rax],eax
  4123f8:	add    BYTE PTR [rax],al
  4123fa:	add    BYTE PTR [rax],al
  4123fc:	movabs al,ds:0xaa00000000000127
  412405:	(bad)  
  412406:	add    DWORD PTR [rax],eax
  412408:	add    BYTE PTR [rax],al
  41240a:	add    BYTE PTR [rax],al
  41240c:	mov    ah,0x27
  41240e:	add    DWORD PTR [rax],eax
  412410:	add    BYTE PTR [rax],al
  412412:	add    BYTE PTR [rax],al
  412414:	mov    esi,0x127
  412419:	add    BYTE PTR [rax],al
  41241b:	add    al,cl
  41241d:	(bad)  
  41241e:	add    DWORD PTR [rax],eax
  412420:	add    BYTE PTR [rax],al
  412422:	add    BYTE PTR [rax],al
  412424:	shl    BYTE PTR [rdi],cl
  412426:	add    DWORD PTR [rax],eax
  412428:	add    BYTE PTR [rax],al
  41242a:	add    BYTE PTR [rax],al
  41242c:	fsub   QWORD PTR [rdi]
  41242e:	add    DWORD PTR [rax],eax
  412430:	add    BYTE PTR [rax],al
  412432:	add    BYTE PTR [rax],al
  412434:	out    0x27,al
  412436:	add    DWORD PTR [rax],eax
  412438:	add    BYTE PTR [rax],al
  41243a:	add    BYTE PTR [rax],al
  41243c:	lock (bad) 
  41243e:	add    DWORD PTR [rax],eax
  412440:	add    BYTE PTR [rax],al
  412442:	add    BYTE PTR [rax],al
  412444:	cli    
  412445:	(bad)  
  412446:	add    DWORD PTR [rax],eax
  412448:	add    BYTE PTR [rax],al
  41244a:	add    BYTE PTR [rax],al
  41244c:	add    al,0x28
  41244e:	add    DWORD PTR [rax],eax
	...
  41245c:	fadd   DWORD PTR [rax]
  41245e:	rex.R
  41245f:	gs ins BYTE PTR es:[rdi],dx
  412461:	gs je  0x4124c9
  412464:	rex.XB jb 0x4124d0
  412467:	je     0x4124d2
  412469:	movsxd esp,DWORD PTR [rcx+0x6c]
  41246c:	push   rbx
  41246d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  412472:	outs   dx,BYTE PTR ds:[rsi]
  412473:	add    al,bh
  412475:	add    BYTE PTR [rbp+0x6e],al
  412478:	je     0x4124df
  41247a:	jb     0x4124bf
  41247c:	jb     0x4124e7
  41247e:	je     0x4124e9
  412480:	movsxd esp,DWORD PTR [rcx+0x6c]
  412483:	push   rbx
  412484:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  412489:	outs   dx,BYTE PTR ds:[rsi]
  41248a:	add    BYTE PTR [rax],al
  41248c:	int    0x1
  41248e:	rex.RXB
  41248f:	gs je  0x4124d5
  412492:	jne    0x412506
  412494:	jb     0x4124fb
  412496:	outs   dx,BYTE PTR ds:[rsi]
  412497:	je     0x4124e9
  412499:	jb     0x41250a
  41249b:	movsxd esp,DWORD PTR [rbp+0x73]
  41249e:	jae    0x4124a0
  4124a0:	(bad)  
  4124a1:	add    DWORD PTR [rdi+0x65],eax
  4124a4:	je     0x4124e9
  4124a6:	jne    0x41251a
  4124a8:	jb     0x41250f
  4124aa:	outs   dx,BYTE PTR ds:[rsi]
  4124ab:	je     0x4124fd
  4124ad:	jb     0x41251e
  4124af:	movsxd esp,DWORD PTR [rbp+0x73]
  4124b2:	jae    0x4124fd
  4124b4:	fs add dl,dl
  4124b7:	add    DWORD PTR [rdi+0x65],eax
  4124ba:	je     0x4124ff
  4124bc:	jne    0x412530
  4124be:	jb     0x412525
  4124c0:	outs   dx,BYTE PTR ds:[rsi]
  4124c1:	je     0x412517
  4124c3:	push   0x64616572
  4124c8:	rex.WB
  4124c9:	add    BYTE PTR fs:[rax],al
  4124cc:	adc    BYTE PTR [rdx],al
  4124ce:	rex.RXB
  4124cf:	gs je  0x41251e
  4124d2:	(bad)  
  4124d3:	jae    0x412549
  4124d5:	rex.RB jb 0x41254a
  4124d8:	outs   dx,DWORD PTR ds:[rsi]
  4124d9:	jb     0x4124db
  4124db:	add    BYTE PTR [rbx+0x2],dh
  4124de:	rex.RXB
  4124df:	gs je  0x412535
  4124e2:	je     0x412545
  4124e4:	jb     0x41255a
  4124e6:	jne    0x412558
  4124e8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4124ea:	outs   dx,WORD PTR ds:[rsi]
  4124ec:	add    BYTE PTR [r10+0x74654702],cl
  4124f3:	push   rbx
  4124f4:	jns    0x412569
  4124f6:	je     0x41255d
  4124f8:	ins    DWORD PTR es:[rdi],dx
  4124f9:	push   rsp
  4124fa:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  412501:	ins    BYTE PTR es:[rdi],dx
  412502:	gs push rsp
  412504:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  41250b:	gs je  0x412562
  41250e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  412515:	je     0x412517
  412517:	add    cl,bh
  412519:	add    cl,BYTE PTR [rcx+0x6e]
  41251c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  412524:	rex.XB jb 0x412590
  412527:	je     0x412592
  412529:	movsxd esp,DWORD PTR [rcx+0x6c]
  41252c:	push   rbx
  41252d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  412532:	outs   dx,BYTE PTR ds:[rsi]
  412533:	add    BYTE PTR [rbx+0x3],cl
  412536:	rex.WR
  412537:	gs (bad) 
  412539:	jbe    0x4125a0
  41253b:	rex.XB jb 0x4125a7
  41253e:	je     0x4125a9
  412540:	movsxd esp,DWORD PTR [rcx+0x6c]
  412543:	push   rbx
  412544:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  412549:	outs   dx,BYTE PTR ds:[rsi]
  41254a:	add    BYTE PTR [rax],al
  41254c:	mov    ebx,0x65755103
  412551:	jb     0x4125cc
  412553:	push   rax
  412554:	gs jb  0x4125bd
  412557:	outs   dx,DWORD PTR ds:[rsi]
  412558:	jb     0x4125c7
  41255a:	(bad)  
  41255b:	outs   dx,BYTE PTR ds:[rsi]
  41255c:	movsxd esp,DWORD PTR [rbp+0x43]
  41255f:	outs   dx,DWORD PTR ds:[rsi]
  412560:	jne    0x4125d0
  412562:	je     0x4125c9
  412564:	jb     0x412566
  412566:	add    DWORD PTR [rdx+rdx*2],eax
  412569:	je     0x4125d7
  41256b:	rex.B
  41256c:	fs fs rex.RX jne 0x4125df
  412571:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  412575:	outs   dx,BYTE PTR ds:[rsi]
  412576:	push   rsp
  412577:	(bad)  
  412578:	(bad)  
  412579:	ins    BYTE PTR es:[rdi],dx
  41257a:	add    BYTE PTR gs:[rdx],al
  41257d:	add    al,0x52
  41257f:	je     0x4125ed
  412581:	rex.XB (bad) 
  412583:	jo     0x4125f9
  412585:	jne    0x4125f9
  412587:	rex.XB outs dx,DWORD PTR gs:[rsi]
  41258a:	outs   dx,BYTE PTR ds:[rsi]
  41258b:	je     0x4125f2
  41258d:	js     0x412603
  41258f:	add    BYTE PTR [rcx],cl
  412591:	add    al,0x52
  412593:	je     0x412601
  412595:	rex.WR outs dx,DWORD PTR ds:[rsi]
  412597:	outs   dx,DWORD PTR ds:[rsi]
  412598:	imul   esi,DWORD PTR [rbp+0x70],0x46
  41259c:	jne    0x41260c
  41259e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4125a2:	outs   dx,BYTE PTR ds:[rsi]
  4125a3:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4125a5:	je     0x412619
  4125a7:	jns    0x4125a9
  4125a9:	add    BYTE PTR [rax],dl
  4125ab:	add    al,0x52
  4125ad:	je     0x41261b
  4125af:	push   rsi
  4125b0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4125b7:	outs   dx,BYTE PTR ds:[rsi]
  4125b8:	ja     0x412623
  4125ba:	outs   dx,BYTE PTR ds:[rsi]
  4125bb:	add    BYTE PTR fs:[rax],al
  4125be:	lahf   
  4125bf:	add    al,0x53
  4125c1:	gs je  0x412619
  4125c4:	outs   dx,BYTE PTR ds:[rsi]
  4125c5:	push   0x6c646e61
  4125ca:	gs fs rex.RB js 0x412632
  4125cf:	gs jo  0x412646
  4125d2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4125d9:	gs jb  0x4125dc
  4125dc:	lods   al,BYTE PTR ds:[rsi]
  4125dd:	add    al,0x53
  4125df:	ins    BYTE PTR es:[rdi],dx
  4125e0:	gs gs jo 0x4125e4
  4125e4:	mov    edx,0x72655404
  4125e9:	ins    DWORD PTR es:[rdi],dx
  4125ea:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4125f1:	outs   dx,DWORD PTR ds:[rsi]
  4125f2:	movsxd esp,DWORD PTR [rbp+0x73]
  4125f5:	jae    0x4125f7
  4125f7:	add    cl,al
  4125f9:	add    al,0x54
  4125fb:	ins    BYTE PTR es:[rdi],dx
  4125fc:	jae    0x412645
  4125fe:	gs je  0x412657
  412601:	(bad)  
  412602:	ins    BYTE PTR es:[rdi],dx
  412603:	jne    0x41266a
  412605:	add    dh,cl
  412607:	add    al,0x55
  412609:	outs   dx,BYTE PTR ds:[rsi]
  41260a:	push   0x6c646e61
  41260f:	gs fs rex.RB js 0x412677
  412614:	gs jo  0x41268b
  412617:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41261e:	gs jb  0x412621
  412621:	add    ah,ch
  412623:	add    al,0x56
  412625:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  41262c:	jb     0x41269d
  41262e:	je     0x412695
  412630:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  412634:	out    dx,al
  412635:	add    al,0x56
  412637:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41263e:	jne    0x4126a5
  412640:	jb     0x4126bb
  412642:	add    BYTE PTR [rax],al
  412644:	(bad)  
  412645:	add    BYTE PTR [rdi+0x5f],bl
  412648:	rex.XB pop r15
  41264a:	jae    0x4126bc
  41264c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  412650:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  412657:	ins    BYTE PTR es:[rdi],dx
  412658:	gs jb  0x41265b
  41265b:	add    BYTE PTR [rsi+0x0],cl
  41265e:	pop    rdi
  41265f:	pop    rdi
  412660:	fs ins BYTE PTR es:[rdi],dx
  412662:	ins    BYTE PTR es:[rdi],dx
  412663:	outs   dx,DWORD PTR ds:[rsi]
  412664:	outs   dx,BYTE PTR ds:[rsi]
  412665:	gs js  0x4126d1
  412668:	je     0x41266a
  41266a:	push   rcx
  41266b:	add    BYTE PTR [rdi+0x5f],bl
  41266e:	addr32 gs je 0x4126df
  412672:	(bad)  
  412673:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  41267a:	push   rdx
  41267b:	add    BYTE PTR [rdi+0x5f],bl
  41267e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  412685:	add    BYTE PTR [rbx+0x0],dl
  412688:	pop    rdi
  412689:	pop    rdi
  41268a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  412691:	movsxd eax,DWORD PTR [rax]
  412693:	add    BYTE PTR [rdx+0x0],bl
  412696:	pop    rdi
  412697:	pop    rdi
  412698:	ins    BYTE PTR es:[rdi],dx
  412699:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41269c:	jbe    0x4126fd
  41269e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4126a5:	add    BYTE PTR [rdi+0x5f],bl
  4126a8:	jae    0x41270f
  4126aa:	je     0x41270b
  4126ac:	(bad)  
  4126ad:	jo     0x41271f
  4126af:	pop    rdi
  4126b0:	je     0x41272b
  4126b2:	jo     0x412719
  4126b4:	add    BYTE PTR [rax],al
  4126b6:	(bad)  
  4126b7:	add    BYTE PTR [rdi+0x5f],bl
  4126ba:	jae    0x412721
  4126bc:	je     0x412733
  4126be:	jae    0x412725
  4126c0:	jb     0x41272f
  4126c2:	(bad)  
  4126c3:	je     0x41272d
  4126c5:	gs jb  0x41273a
  4126c8:	add    BYTE PTR [rax],al
  4126ca:	jno    0x4126cc
  4126cc:	pop    rdi
  4126cd:	(bad)  
  4126ce:	movsxd ebp,DWORD PTR [rbp+0x64]
  4126d1:	ins    BYTE PTR es:[rdi],dx
  4126d2:	outs   dx,BYTE PTR ds:[rsi]
  4126d3:	add    BYTE PTR [rax+0x0],bh
  4126d6:	pop    rdi
  4126d7:	(bad)  
  4126d8:	ins    DWORD PTR es:[rdi],dx
  4126d9:	jae    0x412742
  4126db:	pop    rdi
  4126dc:	gs js  0x412748
  4126df:	je     0x4126e1
  4126e1:	add    BYTE PTR [rdx+0x65635f00],cl
  4126e7:	js     0x412752
  4126e9:	je     0x4126eb
  4126eb:	add    BYTE PTR [rdx+0x72655f00],bh
  4126f1:	jb     0x412761
  4126f3:	outs   dx,DWORD PTR ds:[rsi]
  4126f4:	add    BYTE PTR [rax],al
  4126f6:	fiadd  DWORD PTR [rax]
  4126f8:	pop    rdi
  4126f9:	ins    WORD PTR es:[rdi],dx
  4126fb:	outs   dx,DWORD PTR ds:[rsi]
  4126fc:	fs add BYTE PTR gs:[rax],al
  412700:	sbb    al,BYTE PTR [rcx]
  412702:	pop    rdi
  412703:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  41270a:	ins    DWORD PTR es:[rdi],dx
  41270b:	add    BYTE PTR [rax+0x6f6c5f01],al
  412711:	movsxd ebp,DWORD PTR [rbx+0x0]
  412714:	and    eax,0x6e6f5f02
  412719:	gs js  0x412785
  41271c:	je     0x41271e
  41271e:	scas   eax,DWORD PTR es:[rdi]
  41271f:	add    bl,BYTE PTR [rdi+0x74]
  412722:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  412729:	add    bl,BYTE PTR [rdi+0x75]
  41272c:	outs   dx,BYTE PTR ds:[rsi]
  41272d:	ins    BYTE PTR es:[rdi],dx
  41272e:	outs   dx,DWORD PTR ds:[rsi]
  41272f:	movsxd ebp,DWORD PTR [rbx+0x0]
  412732:	jg     0x412737
  412734:	(bad)  
  412735:	(bad)  
  412736:	outs   dx,DWORD PTR ds:[rsi]
  412737:	jb     0x4127ad
  412739:	add    BYTE PTR [rbx+rax*1+0x6e697361],al
  412740:	add    BYTE PTR [rax],al
  412742:	mov    eax,DWORD PTR [rbx]
  412744:	(bad)  
  412745:	je     0x4127b6
  412747:	data16 add BYTE PTR [rax],al
  41274a:	mov    WORD PTR [rbx],es
  41274c:	(bad)  
  41274d:	je     0x4127be
  41274f:	imul   eax,DWORD PTR [rax],0x63039000
  412755:	(bad)  
  412756:	ins    BYTE PTR es:[rdi],dx
  412757:	ins    BYTE PTR es:[rdi],dx
  412758:	outs   dx,DWORD PTR ds:[rsi]
  412759:	movsxd eax,DWORD PTR [rax]
  41275b:	add    BYTE PTR [rbp+0x69786503],bl
  412761:	je     0x412763
  412763:	add    BYTE PTR [rax+0x72706603],dh
  412769:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  412770:	data16 jo 0x4127e8
  412773:	je     0x4127d8
  412775:	add    BYTE PTR [rdi+0x65726603],dh
  41277b:	add    BYTE PTR gs:[rax],al
  41277e:	ret    0x6603
  412781:	ja     0x4127f5
  412783:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6c03ea00
  41278b:	outs   dx,DWORD PTR ds:[rsi]
  41278c:	movsxd esp,DWORD PTR [rcx+0x6c]
  41278f:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  412793:	jbe    0x412795
  412795:	add    al,dh
  412797:	add    ebp,DWORD PTR [rbp+0x61]
  41279a:	ins    BYTE PTR es:[rdi],dx
  41279b:	ins    BYTE PTR es:[rdi],dx
  41279c:	outs   dx,DWORD PTR ds:[rsi]
  41279d:	movsxd eax,DWORD PTR [rax]
  41279f:	add    al,bh
  4127a1:	add    ebp,DWORD PTR [rbp+0x65]
  4127a4:	ins    DWORD PTR es:[rdi],dx
  4127a5:	movsxd esi,DWORD PTR [rax+0x79]
  4127a8:	add    BYTE PTR [rax],al
  4127aa:	add    DWORD PTR [rax+rsi*2],eax
  4127ad:	jb     0x412818
  4127af:	outs   dx,BYTE PTR ds:[rsi]
  4127b0:	je     0x412818
  4127b2:	add    BYTE PTR [rax],al
  4127b4:	(bad)  
  4127b5:	add    al,0x73
  4127b7:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4127be:	sbb    eax,DWORD PTR [rbx+rsi*2]
  4127c1:	jo     0x412835
  4127c3:	imul   ebp,DWORD PTR [rsi+0x74],0x4210066
  4127ca:	jae    0x412840
  4127cc:	jb     0x412831
  4127ce:	(bad)  
  4127cf:	je     0x4127d1
  4127d1:	add    BYTE PTR [rsi],ah
  4127d3:	add    al,0x73
  4127d5:	je     0x412849
  4127d7:	movsxd esi,DWORD PTR [rax+0x79]
  4127da:	add    BYTE PTR [rax],al
  4127dc:	sub    eax,DWORD PTR [rbx+rsi*2]
  4127df:	je     0x412853
  4127e1:	ins    BYTE PTR es:[rdi],dx
  4127e2:	outs   dx,BYTE PTR gs:[rsi]
  4127e4:	add    BYTE PTR [rax],al
  4127e6:	cs add al,0x73
  4127e9:	je     0x41285d
  4127eb:	outs   dx,BYTE PTR ds:[rsi]
  4127ec:	movsxd ebp,DWORD PTR [rbp+0x70]
  4127ef:	add    BYTE PTR [rdx],dh
  4127f1:	add    al,0x73
  4127f3:	je     0x412867
  4127f5:	jb     0x41285a
  4127f7:	push   0x4340072
  4127fc:	jae    0x412872
  4127fe:	jb     0x412873
  412800:	je     0x412874
  412802:	add    BYTE PTR [rax],al
  412804:	rex.WRX add al,0x76
  412807:	data16 jo 0x41287c
  41280a:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  412811:	and    BYTE PTR [rcx],al
  412813:	add    BYTE PTR [rax],al
  412815:	and    BYTE PTR [rcx],al
  412817:	add    BYTE PTR [rax],al
  412819:	and    BYTE PTR [rcx],al
  41281b:	add    BYTE PTR [rax],al
  41281d:	and    BYTE PTR [rcx],al
  41281f:	add    BYTE PTR [rax],al
  412821:	and    BYTE PTR [rcx],al
  412823:	add    BYTE PTR [rax],al
  412825:	and    BYTE PTR [rcx],al
  412827:	add    BYTE PTR [rax],al
  412829:	and    BYTE PTR [rcx],al
  41282b:	add    BYTE PTR [rax],al
  41282d:	and    BYTE PTR [rcx],al
  41282f:	add    BYTE PTR [rax],al
  412831:	and    BYTE PTR [rcx],al
  412833:	add    BYTE PTR [rax],al
  412835:	and    BYTE PTR [rcx],al
  412837:	add    BYTE PTR [rax],al
  412839:	and    BYTE PTR [rcx],al
  41283b:	add    BYTE PTR [rax],al
  41283d:	and    BYTE PTR [rcx],al
  41283f:	add    BYTE PTR [rax],al
  412841:	and    BYTE PTR [rcx],al
  412843:	add    BYTE PTR [rax],al
  412845:	and    BYTE PTR [rcx],al
  412847:	add    BYTE PTR [rax],al
  412849:	and    BYTE PTR [rcx],al
  41284b:	add    BYTE PTR [rax],al
  41284d:	and    BYTE PTR [rcx],al
  41284f:	add    BYTE PTR [rax],al
  412851:	and    BYTE PTR [rcx],al
  412853:	add    BYTE PTR [rax],al
  412855:	and    BYTE PTR [rcx],al
  412857:	add    BYTE PTR [rax],al
  412859:	and    BYTE PTR [rcx],al
  41285b:	add    BYTE PTR [rax],al
  41285d:	and    BYTE PTR [rcx],al
  41285f:	add    BYTE PTR [rax],al
  412861:	and    BYTE PTR [rcx],al
  412863:	add    BYTE PTR [rax],al
  412865:	and    BYTE PTR [rcx],al
  412867:	add    BYTE PTR [rax],al
  412869:	and    BYTE PTR [rcx],al
  41286b:	add    BYTE PTR [rbx+0x45],cl
  41286e:	push   rdx
  41286f:	rex.WRX
  412870:	rex.RB
  412871:	xor    r14,QWORD PTR [rdx]
  412874:	cs fs ins BYTE PTR es:[rdi],dx
  412877:	ins    BYTE PTR es:[rdi],dx
  412878:	add    BYTE PTR [rax],al
  41287a:	add    BYTE PTR [rax],al
  41287c:	adc    al,0x20
  41287e:	add    DWORD PTR [rax],eax
  412880:	adc    al,0x20
  412882:	add    DWORD PTR [rax],eax
  412884:	adc    al,0x20
  412886:	add    DWORD PTR [rax],eax
  412888:	adc    al,0x20
  41288a:	add    DWORD PTR [rax],eax
  41288c:	adc    al,0x20
  41288e:	add    DWORD PTR [rax],eax
  412890:	adc    al,0x20
  412892:	add    DWORD PTR [rax],eax
  412894:	adc    al,0x20
  412896:	add    DWORD PTR [rax],eax
  412898:	adc    al,0x20
  41289a:	add    DWORD PTR [rax],eax
  41289c:	adc    al,0x20
  41289e:	add    DWORD PTR [rax],eax
  4128a0:	adc    al,0x20
  4128a2:	add    DWORD PTR [rax],eax
  4128a4:	adc    al,0x20
  4128a6:	add    DWORD PTR [rax],eax
  4128a8:	adc    al,0x20
  4128aa:	add    DWORD PTR [rax],eax
  4128ac:	adc    al,0x20
  4128ae:	add    DWORD PTR [rax],eax
  4128b0:	adc    al,0x20
  4128b2:	add    DWORD PTR [rax],eax
  4128b4:	adc    al,0x20
  4128b6:	add    DWORD PTR [rax],eax
  4128b8:	adc    al,0x20
  4128ba:	add    DWORD PTR [rax],eax
  4128bc:	adc    al,0x20
  4128be:	add    DWORD PTR [rax],eax
  4128c0:	adc    al,0x20
  4128c2:	add    DWORD PTR [rax],eax
  4128c4:	adc    al,0x20
  4128c6:	add    DWORD PTR [rax],eax
  4128c8:	adc    al,0x20
  4128ca:	add    DWORD PTR [rax],eax
  4128cc:	adc    al,0x20
  4128ce:	add    DWORD PTR [rax],eax
  4128d0:	adc    al,0x20
  4128d2:	add    DWORD PTR [rax],eax
  4128d4:	adc    al,0x20
  4128d6:	add    DWORD PTR [rax],eax
  4128d8:	adc    al,0x20
  4128da:	add    DWORD PTR [rax],eax
  4128dc:	adc    al,0x20
  4128de:	add    DWORD PTR [rax],eax
  4128e0:	adc    al,0x20
  4128e2:	add    DWORD PTR [rax],eax
  4128e4:	adc    al,0x20
  4128e6:	add    DWORD PTR [rax],eax
  4128e8:	adc    al,0x20
  4128ea:	add    DWORD PTR [rax],eax
  4128ec:	adc    al,0x20
  4128ee:	add    DWORD PTR [rax],eax
  4128f0:	adc    al,0x20
  4128f2:	add    DWORD PTR [rax],eax
  4128f4:	adc    al,0x20
  4128f6:	add    DWORD PTR [rax],eax
  4128f8:	adc    al,0x20
  4128fa:	add    DWORD PTR [rax],eax
  4128fc:	adc    al,0x20
  4128fe:	add    DWORD PTR [rax],eax
  412900:	adc    al,0x20
  412902:	add    DWORD PTR [rax],eax
  412904:	adc    al,0x20
  412906:	add    DWORD PTR [rax],eax
  412908:	adc    al,0x20
  41290a:	add    DWORD PTR [rax],eax
  41290c:	adc    al,0x20
  41290e:	add    DWORD PTR [rax],eax
  412910:	adc    al,0x20
  412912:	add    DWORD PTR [rax],eax
  412914:	adc    al,0x20
  412916:	add    DWORD PTR [rax],eax
  412918:	adc    al,0x20
  41291a:	add    DWORD PTR [rax],eax
  41291c:	adc    al,0x20
  41291e:	add    DWORD PTR [rax],eax
  412920:	ins    DWORD PTR es:[rdi],dx
  412921:	jae    0x412999
  412923:	movsxd esi,DWORD PTR [rdx+0x74]
  412926:	cs fs ins BYTE PTR es:[rdi],dx
  412929:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000413000 <.CRT>:
	...
  413008:	(bad)  
  413009:	adc    DWORD PTR [rax+0x0],eax
	...
  413020:	adc    BYTE PTR [rax],dl
  413022:	add    BYTE PTR [rax],al
  413025:	add    BYTE PTR [rax],al
  413027:	add    BYTE PTR [rax+0x4019],ah
	...
  41303d:	add    BYTE PTR [rax],al
  41303f:	add    al,dl
  413041:	sbb    eax,DWORD PTR [rax+0x0]
  413044:	add    BYTE PTR [rax],al
  413046:	add    BYTE PTR [rax],al
  413048:	movabs al,ds:0x401b
	...

Disassembly of section .tls:

0000000000414000 <.tls>:
	...
  414020:	add    BYTE PTR [rax+0x41],al
  414023:	add    BYTE PTR [rax],al
  414025:	add    BYTE PTR [rax],al
  414027:	add    BYTE PTR [rax+0x40],ah
  41402a:	add    BYTE PTR [r8],al
  41402d:	add    BYTE PTR [rax],al
  41402f:	add    BYTE PTR [rsi+rax*1+0x41],bl
  414033:	add    BYTE PTR [rax],al
  414035:	add    BYTE PTR [rax],al
  414037:	add    BYTE PTR [rax+0x30],al
  41403a:	add    BYTE PTR [r8],al
	...
