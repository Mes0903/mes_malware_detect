
bfb60968447fd09d11aa5cf30add3e591bab3d69da10d9ef178eb68db966f157.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x5f09]        # 0x140006f10
   140001007:	jmp    0x140006260
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x5f09]        # 0x140006f20
   140001017:	jmp    0x140006260
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x5f09]        # 0x140006f30
   140001027:	jmp    0x140006260
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	lea    rcx,[rip+0x5f09]        # 0x140006f40
   140001037:	jmp    0x140006260
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x5f09]        # 0x140006f50
   140001047:	jmp    0x140006260
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	lea    rcx,[rip+0x5f09]        # 0x140006f60
   140001057:	jmp    0x140006260
   14000105c:	lea    rcx,[rip+0x5f0d]        # 0x140006f70
   140001063:	jmp    0x140006260
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	mov    QWORD PTR [rsp+0x8],rcx
   140001075:	push   rsi
   140001076:	push   rdi
   140001077:	push   r12
   140001079:	push   r14
   14000107b:	push   r15
   14000107d:	sub    rsp,0x40
   140001081:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000108a:	mov    QWORD PTR [rsp+0x80],rbx
   140001092:	mov    r15,rdx
   140001095:	mov    rsi,rcx
   140001098:	xor    ebx,ebx
   14000109a:	mov    DWORD PTR [rsp+0x78],ebx
   14000109e:	mov    r12,QWORD PTR [rdx+0x10]
   1400010a2:	mov    rax,QWORD PTR [rcx]
   1400010a5:	movsxd r8,DWORD PTR [rax+0x4]
   1400010a9:	mov    rdi,QWORD PTR [r8+rcx*1+0x28]
   1400010ae:	test   rdi,rdi
   1400010b1:	jle    0x1400010bd
   1400010b3:	cmp    rdi,r12
   1400010b6:	jbe    0x1400010bd
   1400010b8:	sub    rdi,r12
   1400010bb:	jmp    0x1400010bf
   1400010bd:	xor    edi,edi
   1400010bf:	mov    r14,rcx
   1400010c2:	mov    QWORD PTR [rsp+0x28],rcx
   1400010c7:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   1400010cc:	test   rcx,rcx
   1400010cf:	je     0x1400010d8
   1400010d1:	mov    rax,QWORD PTR [rcx]
   1400010d4:	call   QWORD PTR [rax+0x8]
   1400010d7:	nop
   1400010d8:	mov    rax,QWORD PTR [rsi]
   1400010db:	movsxd rcx,DWORD PTR [rax+0x4]
   1400010df:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400010e4:	jne    0x1400010fb
   1400010e6:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   1400010eb:	test   rcx,rcx
   1400010ee:	je     0x1400010fb
   1400010f0:	cmp    rcx,rsi
   1400010f3:	je     0x1400010fb
   1400010f5:	call   QWORD PTR [rip+0x5ffd]        # 0x1400070f8
   1400010fb:	mov    rax,QWORD PTR [rsi]
   1400010fe:	movsxd rcx,DWORD PTR [rax+0x4]
   140001102:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140001107:	sete   al
   14000110a:	mov    BYTE PTR [rsp+0x30],al
   14000110e:	test   al,al
   140001110:	jne    0x14000111c
   140001112:	mov    ebx,0x4
   140001117:	jmp    0x1400011e0
   14000111c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001120:	and    eax,0x1c0
   140001125:	cmp    eax,0x40
   140001128:	je     0x140001163
   14000112a:	nop    WORD PTR [rax+rax*1+0x0]
   140001130:	test   rdi,rdi
   140001133:	je     0x14000115f
   140001135:	mov    rax,QWORD PTR [rsi]
   140001138:	movsxd rcx,DWORD PTR [rax+0x4]
   14000113c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001141:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001146:	call   QWORD PTR [rip+0x5f64]        # 0x1400070b0
   14000114c:	cmp    eax,0xffffffff
   14000114f:	jne    0x14000115a
   140001151:	or     ebx,0x4
   140001154:	mov    DWORD PTR [rsp+0x78],ebx
   140001158:	jmp    0x14000115f
   14000115a:	dec    rdi
   14000115d:	jmp    0x140001130
   14000115f:	test   ebx,ebx
   140001161:	jne    0x140001191
   140001163:	cmp    QWORD PTR [r15+0x18],0x10
   140001168:	jb     0x14000116d
   14000116a:	mov    r15,QWORD PTR [r15]
   14000116d:	mov    rax,QWORD PTR [rsi]
   140001170:	movsxd rcx,DWORD PTR [rax+0x4]
   140001174:	mov    r8,r12
   140001177:	mov    rdx,r15
   14000117a:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000117f:	call   QWORD PTR [rip+0x5f33]        # 0x1400070b8
   140001185:	cmp    rax,r12
   140001188:	je     0x140001191
   14000118a:	mov    ebx,0x4
   14000118f:	jmp    0x1400011bc
   140001191:	test   rdi,rdi
   140001194:	je     0x1400011c0
   140001196:	mov    rax,QWORD PTR [rsi]
   140001199:	movsxd rcx,DWORD PTR [rax+0x4]
   14000119d:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400011a2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400011a7:	call   QWORD PTR [rip+0x5f03]        # 0x1400070b0
   1400011ad:	cmp    eax,0xffffffff
   1400011b0:	jne    0x1400011b7
   1400011b2:	or     ebx,0x4
   1400011b5:	jmp    0x1400011bc
   1400011b7:	dec    rdi
   1400011ba:	jmp    0x140001191
   1400011bc:	mov    DWORD PTR [rsp+0x78],ebx
   1400011c0:	mov    rax,QWORD PTR [rsi]
   1400011c3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011c7:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400011d0:	jmp    0x1400011e0
   1400011d2:	mov    rsi,QWORD PTR [rsp+0x70]
   1400011d7:	mov    ebx,DWORD PTR [rsp+0x78]
   1400011db:	mov    r14,QWORD PTR [rsp+0x28]
   1400011e0:	mov    rax,QWORD PTR [rsi]
   1400011e3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011e7:	add    rcx,rsi
   1400011ea:	xor    r8d,r8d
   1400011ed:	mov    edx,ebx
   1400011ef:	call   QWORD PTR [rip+0x5ee3]        # 0x1400070d8
   1400011f5:	nop
   1400011f6:	call   QWORD PTR [rip+0x5f7c]        # 0x140007178
   1400011fc:	test   al,al
   1400011fe:	jne    0x140001209
   140001200:	mov    rcx,r14
   140001203:	call   QWORD PTR [rip+0x5ee7]        # 0x1400070f0
   140001209:	mov    rax,QWORD PTR [r14]
   14000120c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001210:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   140001215:	test   rcx,rcx
   140001218:	je     0x140001220
   14000121a:	mov    rax,QWORD PTR [rcx]
   14000121d:	call   QWORD PTR [rax+0x10]
   140001220:	mov    rax,rsi
   140001223:	mov    rbx,QWORD PTR [rsp+0x80]
   14000122b:	add    rsp,0x40
   14000122f:	pop    r15
   140001231:	pop    r14
   140001233:	pop    r12
   140001235:	pop    rdi
   140001236:	pop    rsi
   140001237:	ret    
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	mov    al,0x1
   140001242:	ret    
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	rex push rbx
   140001252:	sub    rsp,0x30
   140001256:	xor    ebx,ebx
   140001258:	cmp    WORD PTR [rdx],bx
   14000125b:	jne    0x140001261
   14000125d:	mov    eax,ebx
   14000125f:	jmp    0x14000126e
   140001261:	or     rax,0xffffffffffffffff
   140001265:	inc    rax
   140001268:	cmp    WORD PTR [rdx+rax*2],bx
   14000126c:	jne    0x140001265
   14000126e:	mov    r8,QWORD PTR [rcx+0x10]
   140001272:	mov    r9,rdx
   140001275:	xor    edx,edx
   140001277:	mov    QWORD PTR [rsp+0x20],rax
   14000127c:	call   0x1400035e0
   140001281:	test   eax,eax
   140001283:	sete   al
   140001286:	add    rsp,0x30
   14000128a:	pop    rbx
   14000128b:	ret    
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    al,0x1
   140001292:	ret    
   140001293:	int3   
   140001294:	int3   
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	xor    al,al
   1400012a2:	ret    
   1400012a3:	int3   
   1400012a4:	int3   
   1400012a5:	int3   
   1400012a6:	int3   
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	sub    rsp,0x28
   1400012b4:	xor    eax,eax
   1400012b6:	test   rcx,rcx
   1400012b9:	je     0x1400012d2
   1400012bb:	cmp    rcx,0xffffffffffffffff
   1400012bf:	ja     0x1400012cb
   1400012c1:	call   0x140006154
   1400012c6:	test   rax,rax
   1400012c9:	jne    0x1400012d2
   1400012cb:	call   QWORD PTR [rip+0x5eb7]        # 0x140007188
   1400012d1:	int3   
   1400012d2:	add    rsp,0x28
   1400012d6:	ret    
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	sub    rsp,0x28
   1400012e4:	xor    eax,eax
   1400012e6:	test   rcx,rcx
   1400012e9:	je     0x14000130e
   1400012eb:	movabs rax,0x7fffffffffffffff
   1400012f5:	cmp    rcx,rax
   1400012f8:	ja     0x140001307
   1400012fa:	add    rcx,rcx
   1400012fd:	call   0x140006154
   140001302:	test   rax,rax
   140001305:	jne    0x14000130e
   140001307:	call   QWORD PTR [rip+0x5e7b]        # 0x140007188
   14000130d:	int3   
   14000130e:	add    rsp,0x28
   140001312:	ret    
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	rex push rbx
   140001322:	sub    rsp,0x20
   140001326:	mov    rbx,rcx
   140001329:	mov    rcx,rdx
   14000132c:	call   QWORD PTR [rip+0x5e76]        # 0x1400071a8
   140001332:	cmp    eax,0xffffffff
   140001335:	jne    0x14000133f
   140001337:	xor    al,al
   140001339:	add    rsp,0x20
   14000133d:	pop    rbx
   14000133e:	ret    
   14000133f:	mov    BYTE PTR [rbx],al
   140001341:	mov    al,0x1
   140001343:	add    rsp,0x20
   140001347:	pop    rbx
   140001348:	ret    
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	sub    rsp,0x28
   140001354:	movsx  ecx,cl
   140001357:	call   QWORD PTR [rip+0x5e5b]        # 0x1400071b8
   14000135d:	cmp    eax,0xffffffff
   140001360:	setne  al
   140001363:	add    rsp,0x28
   140001367:	ret    
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	sub    rsp,0x28
   140001374:	movzx  ecx,BYTE PTR [rcx]
   140001377:	call   QWORD PTR [rip+0x5e63]        # 0x1400071e0
   14000137d:	cmp    eax,0xffffffff
   140001380:	setne  al
   140001383:	add    rsp,0x28
   140001387:	ret    
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	mov    rax,rcx
   140001393:	ret    
   140001394:	int3   
   140001395:	int3   
   140001396:	int3   
   140001397:	int3   
   140001398:	int3   
   140001399:	int3   
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	mov    rax,rcx
   1400013a3:	ret    
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	sub    rsp,0x38
   1400013b4:	mov    r10,QWORD PTR [rcx+0x18]
   1400013b8:	cmp    r10,0x8
   1400013bc:	jb     0x1400013c3
   1400013be:	mov    r9,QWORD PTR [rcx]
   1400013c1:	jmp    0x1400013c6
   1400013c3:	mov    r9,rcx
   1400013c6:	mov    rax,QWORD PTR [rcx+0x10]
   1400013ca:	lea    rax,[r9+rax*2]
   1400013ce:	cmp    r10,0x8
   1400013d2:	jb     0x1400013d9
   1400013d4:	mov    r10,QWORD PTR [rcx]
   1400013d7:	jmp    0x1400013dc
   1400013d9:	mov    r10,rcx
   1400013dc:	mov    QWORD PTR [rsp+0x20],r8
   1400013e1:	mov    r9,rdx
   1400013e4:	mov    r8,rax
   1400013e7:	mov    rdx,r10
   1400013ea:	call   0x1400041d0
   1400013ef:	add    rsp,0x38
   1400013f3:	ret    
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	test   rdx,rdx
   140001403:	je     0x14000140b
   140001405:	mov    rax,QWORD PTR [r8]
   140001408:	mov    QWORD PTR [rdx],rax
   14000140b:	ret    
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	test   rdx,rdx
   140001413:	je     0x14000141b
   140001415:	mov    rax,QWORD PTR [r8]
   140001418:	mov    QWORD PTR [rdx],rax
   14000141b:	ret    
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	test   rdx,rdx
   140001423:	je     0x14000142b
   140001425:	mov    rax,QWORD PTR [r8]
   140001428:	mov    QWORD PTR [rdx],rax
   14000142b:	ret    
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	test   rdx,rdx
   140001433:	je     0x14000143b
   140001435:	mov    rax,QWORD PTR [r8]
   140001438:	mov    QWORD PTR [rdx],rax
   14000143b:	ret    
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	test   rdx,rdx
   140001443:	je     0x14000144b
   140001445:	mov    rax,QWORD PTR [r8]
   140001448:	mov    QWORD PTR [rdx],rax
   14000144b:	ret    
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	test   rdx,rdx
   140001453:	je     0x14000145b
   140001455:	mov    rax,QWORD PTR [r8]
   140001458:	mov    QWORD PTR [rdx],rax
   14000145b:	ret    
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	ret    0x0
   140001463:	int3   
   140001464:	int3   
   140001465:	int3   
   140001466:	int3   
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	ret    0x0
   140001473:	int3   
   140001474:	int3   
   140001475:	int3   
   140001476:	int3   
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	ret    0x0
   140001483:	int3   
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	ret    0x0
   140001493:	int3   
   140001494:	int3   
   140001495:	int3   
   140001496:	int3   
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	ret    0x0
   1400014a3:	int3   
   1400014a4:	int3   
   1400014a5:	int3   
   1400014a6:	int3   
   1400014a7:	int3   
   1400014a8:	int3   
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	ret    0x0
   1400014b3:	int3   
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	mov    rax,rcx
   1400014c3:	ret    
   1400014c4:	int3   
   1400014c5:	int3   
   1400014c6:	int3   
   1400014c7:	int3   
   1400014c8:	int3   
   1400014c9:	int3   
   1400014ca:	int3   
   1400014cb:	int3   
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	mov    rax,rcx
   1400014d3:	ret    
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	mov    rax,rcx
   1400014e3:	ret    
   1400014e4:	int3   
   1400014e5:	int3   
   1400014e6:	int3   
   1400014e7:	int3   
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	rex push rdi
   1400014f2:	sub    rsp,0x40
   1400014f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400014ff:	mov    QWORD PTR [rsp+0x60],rbx
   140001504:	mov    QWORD PTR [rsp+0x68],rsi
   140001509:	mov    rsi,rcx
   14000150c:	xor    edx,edx
   14000150e:	lea    rcx,[rsp+0x50]
   140001513:	call   QWORD PTR [rip+0x5c67]        # 0x140007180
   140001519:	nop
   14000151a:	mov    rax,QWORD PTR [rip+0x9ee7]        # 0x14000b408
   140001521:	mov    QWORD PTR [rsp+0x58],rax
   140001526:	mov    rcx,QWORD PTR [rip+0x5bfb]        # 0x140007128
   14000152d:	call   QWORD PTR [rip+0x5b15]        # 0x140007048
   140001533:	mov    rdi,rax
   140001536:	mov    rax,QWORD PTR [rsi]
   140001539:	cmp    rdi,QWORD PTR [rax+0x18]
   14000153d:	jae    0x140001552
   14000153f:	mov    rcx,QWORD PTR [rax+0x10]
   140001543:	mov    rbx,QWORD PTR [rcx+rdi*8]
   140001547:	test   rbx,rbx
   14000154a:	jne    0x1400015d3
   140001550:	jmp    0x140001554
   140001552:	xor    ebx,ebx
   140001554:	cmp    BYTE PTR [rax+0x24],0x0
   140001558:	je     0x14000156e
   14000155a:	call   QWORD PTR [rip+0x5af0]        # 0x140007050
   140001560:	cmp    rdi,QWORD PTR [rax+0x18]
   140001564:	jae    0x140001573
   140001566:	mov    rax,QWORD PTR [rax+0x10]
   14000156a:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000156e:	test   rbx,rbx
   140001571:	jne    0x1400015d3
   140001573:	mov    rbx,QWORD PTR [rsp+0x58]
   140001578:	test   rbx,rbx
   14000157b:	jne    0x1400015d3
   14000157d:	mov    rdx,rsi
   140001580:	lea    rcx,[rsp+0x58]
   140001585:	call   QWORD PTR [rip+0x5aed]        # 0x140007078
   14000158b:	cmp    rax,0xffffffffffffffff
   14000158f:	jne    0x1400015b5
   140001591:	lea    rdx,[rip+0x62d0]        # 0x140007868
   140001598:	lea    rcx,[rsp+0x28]
   14000159d:	call   QWORD PTR [rip+0x5c65]        # 0x140007208
   1400015a3:	lea    rdx,[rip+0x7afe]        # 0x1400090a8
   1400015aa:	lea    rcx,[rsp+0x28]
   1400015af:	call   0x1400062ea
   1400015b4:	int3   
   1400015b5:	mov    rbx,QWORD PTR [rsp+0x58]
   1400015ba:	mov    QWORD PTR [rip+0x9e47],rbx        # 0x14000b408
   1400015c1:	mov    rax,QWORD PTR [rbx]
   1400015c4:	mov    rcx,rbx
   1400015c7:	call   QWORD PTR [rax+0x8]
   1400015ca:	mov    rcx,rbx
   1400015cd:	call   0x140006060
   1400015d2:	nop
   1400015d3:	lea    rcx,[rsp+0x50]
   1400015d8:	call   QWORD PTR [rip+0x5b92]        # 0x140007170
   1400015de:	mov    rax,rbx
   1400015e1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400015e6:	mov    rsi,QWORD PTR [rsp+0x68]
   1400015eb:	add    rsp,0x40
   1400015ef:	pop    rdi
   1400015f0:	ret    
   1400015f1:	int3   
   1400015f2:	int3   
   1400015f3:	int3   
   1400015f4:	int3   
   1400015f5:	int3   
   1400015f6:	int3   
   1400015f7:	int3   
   1400015f8:	int3   
   1400015f9:	int3   
   1400015fa:	int3   
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	xor    eax,eax
   140001602:	mov    QWORD PTR [rcx+0x10],rax
   140001606:	mov    QWORD PTR [rcx+0x18],rax
   14000160a:	mov    rax,rcx
   14000160d:	ret    
   14000160e:	int3   
   14000160f:	int3   
   140001610:	xor    eax,eax
   140001612:	mov    QWORD PTR [rcx+0x10],rax
   140001616:	mov    QWORD PTR [rcx+0x18],rax
   14000161a:	mov    rax,rcx
   14000161d:	ret    
   14000161e:	int3   
   14000161f:	int3   
   140001620:	mov    QWORD PTR [rcx],rdx
   140001623:	mov    rax,rcx
   140001626:	ret    
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    QWORD PTR [rcx],rdx
   140001633:	mov    rax,rcx
   140001636:	ret    
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    QWORD PTR [rcx],rdx
   140001643:	mov    rax,rcx
   140001646:	ret    
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	mov    QWORD PTR [rcx],rdx
   140001653:	mov    rax,rcx
   140001656:	ret    
   140001657:	int3   
   140001658:	int3   
   140001659:	int3   
   14000165a:	int3   
   14000165b:	int3   
   14000165c:	int3   
   14000165d:	int3   
   14000165e:	int3   
   14000165f:	int3   
   140001660:	xor    eax,eax
   140001662:	mov    QWORD PTR [rcx+0x10],rax
   140001666:	mov    QWORD PTR [rcx+0x18],rax
   14000166a:	mov    rax,rcx
   14000166d:	ret    
   14000166e:	int3   
   14000166f:	int3   
   140001670:	xor    eax,eax
   140001672:	mov    QWORD PTR [rcx+0x10],rax
   140001676:	mov    QWORD PTR [rcx+0x18],rax
   14000167a:	mov    rax,rcx
   14000167d:	ret    
   14000167e:	int3   
   14000167f:	int3   
   140001680:	mov    rax,rcx
   140001683:	ret    
   140001684:	int3   
   140001685:	int3   
   140001686:	int3   
   140001687:	int3   
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	mov    rax,rcx
   140001693:	ret    
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    rax,rcx
   1400016a3:	ret    
   1400016a4:	int3   
   1400016a5:	int3   
   1400016a6:	int3   
   1400016a7:	int3   
   1400016a8:	int3   
   1400016a9:	int3   
   1400016aa:	int3   
   1400016ab:	int3   
   1400016ac:	int3   
   1400016ad:	int3   
   1400016ae:	int3   
   1400016af:	int3   
   1400016b0:	mov    rax,rcx
   1400016b3:	ret    
   1400016b4:	int3   
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	mov    rax,rcx
   1400016c3:	ret    
   1400016c4:	int3   
   1400016c5:	int3   
   1400016c6:	int3   
   1400016c7:	int3   
   1400016c8:	int3   
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	mov    rax,rcx
   1400016d3:	ret    
   1400016d4:	int3   
   1400016d5:	int3   
   1400016d6:	int3   
   1400016d7:	int3   
   1400016d8:	int3   
   1400016d9:	int3   
   1400016da:	int3   
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400016e5:	push   rdi
   1400016e6:	sub    rsp,0x30
   1400016ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400016f3:	mov    QWORD PTR [rsp+0x48],rbx
   1400016f8:	mov    rdi,rdx
   1400016fb:	mov    rbx,rcx
   1400016fe:	call   QWORD PTR [rip+0x5994]        # 0x140007098
   140001704:	nop
   140001705:	lea    rax,[rip+0x6054]        # 0x140007760
   14000170c:	mov    QWORD PTR [rbx],rax
   14000170f:	mov    BYTE PTR [rbx+0x88],0x0
   140001716:	mov    BYTE PTR [rbx+0x81],0x0
   14000171d:	mov    rcx,rbx
   140001720:	call   QWORD PTR [rip+0x59a2]        # 0x1400070c8
   140001726:	test   rdi,rdi
   140001729:	je     0x14000174b
   14000172b:	lea    rax,[rdi+0x10]
   14000172f:	lea    rcx,[rdi+0x8]
   140001733:	mov    QWORD PTR [rbx+0x18],rax
   140001737:	mov    QWORD PTR [rbx+0x20],rax
   14000173b:	mov    QWORD PTR [rbx+0x38],rdi
   14000173f:	mov    QWORD PTR [rbx+0x40],rdi
   140001743:	mov    QWORD PTR [rbx+0x50],rcx
   140001747:	mov    QWORD PTR [rbx+0x58],rcx
   14000174b:	mov    QWORD PTR [rbx+0x90],rdi
   140001752:	mov    eax,DWORD PTR [rip+0x9ca8]        # 0x14000b400
   140001758:	mov    DWORD PTR [rbx+0x84],eax
   14000175e:	mov    QWORD PTR [rbx+0x78],0x0
   140001766:	mov    rax,rbx
   140001769:	mov    rbx,QWORD PTR [rsp+0x48]
   14000176e:	add    rsp,0x30
   140001772:	pop    rdi
   140001773:	ret    
   140001774:	int3   
   140001775:	int3   
   140001776:	int3   
   140001777:	int3   
   140001778:	int3   
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	mov    r11,rsp
   140001783:	mov    QWORD PTR [r11+0x8],rcx
   140001787:	push   rbx
   140001788:	sub    rsp,0x60
   14000178c:	mov    QWORD PTR [r11-0x38],0xfffffffffffffffe
   140001794:	mov    rbx,rcx
   140001797:	mov    DWORD PTR [r11+0x18],0x0
   14000179f:	test   r8d,r8d
   1400017a2:	je     0x1400017d2
   1400017a4:	lea    rax,[rip+0x6055]        # 0x140007800
   1400017ab:	mov    QWORD PTR [rcx],rax
   1400017ae:	mov    rax,QWORD PTR [rip+0x597b]        # 0x140007130
   1400017b5:	mov    QWORD PTR [rcx+0xb0],rax
   1400017bc:	mov    rax,QWORD PTR [rip+0x5975]        # 0x140007138
   1400017c3:	mov    QWORD PTR [rcx+0xb0],rax
   1400017ca:	mov    DWORD PTR [r11+0x18],0x1
   1400017d2:	lea    rcx,[rsp+0x38]
   1400017d7:	call   QWORD PTR [rip+0x5b53]        # 0x140007330
   1400017dd:	nop
   1400017de:	cmp    QWORD PTR [rax+0x18],0x8
   1400017e3:	jb     0x1400017e8
   1400017e5:	mov    rax,QWORD PTR [rax]
   1400017e8:	mov    DWORD PTR [rsp+0x20],0x0
   1400017f0:	mov    r9d,0x40
   1400017f6:	lea    r8d,[r9-0x3e]
   1400017fa:	mov    rdx,rax
   1400017fd:	mov    rcx,rbx
   140001800:	call   0x140001850
   140001805:	nop
   140001806:	cmp    QWORD PTR [rsp+0x50],0x8
   14000180c:	jb     0x140001818
   14000180e:	mov    rcx,QWORD PTR [rsp+0x38]
   140001813:	call   0x14000615a
   140001818:	mov    rax,QWORD PTR [rbx]
   14000181b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000181f:	lea    rax,[rip+0x5fd2]        # 0x1400077f8
   140001826:	mov    QWORD PTR [rcx+rbx*1],rax
   14000182a:	mov    rax,QWORD PTR [rbx]
   14000182d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001831:	lea    edx,[rcx-0xb0]
   140001837:	mov    DWORD PTR [rcx+rbx*1-0x4],edx
   14000183b:	mov    rax,rbx
   14000183e:	add    rsp,0x60
   140001842:	pop    rbx
   140001843:	ret    
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	mov    QWORD PTR [rsp+0x8],rcx
   140001855:	push   rsi
   140001856:	push   rdi
   140001857:	push   r14
   140001859:	sub    rsp,0x30
   14000185d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001866:	mov    QWORD PTR [rsp+0x58],rbx
   14000186b:	mov    QWORD PTR [rsp+0x68],rbp
   140001870:	mov    ebp,r9d
   140001873:	mov    esi,r8d
   140001876:	mov    r14,rdx
   140001879:	mov    rdi,rcx
   14000187c:	mov    DWORD PTR [rsp+0x60],0x0
   140001884:	cmp    DWORD PTR [rsp+0x70],0x0
   140001889:	je     0x1400018b9
   14000188b:	lea    rax,[rip+0x5f56]        # 0x1400077e8
   140001892:	mov    QWORD PTR [rcx],rax
   140001895:	mov    rax,QWORD PTR [rip+0x5894]        # 0x140007130
   14000189c:	mov    QWORD PTR [rcx+0xa8],rax
   1400018a3:	mov    rax,QWORD PTR [rip+0x588e]        # 0x140007138
   1400018aa:	mov    QWORD PTR [rcx+0xa8],rax
   1400018b1:	mov    DWORD PTR [rsp+0x60],0x1
   1400018b9:	lea    rbx,[rcx+0x8]
   1400018bd:	xor    r9d,r9d
   1400018c0:	xor    r8d,r8d
   1400018c3:	mov    rdx,rbx
   1400018c6:	call   QWORD PTR [rip+0x5814]        # 0x1400070e0
   1400018cc:	nop
   1400018cd:	mov    rax,QWORD PTR [rdi]
   1400018d0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018d4:	lea    rax,[rip+0x5f05]        # 0x1400077e0
   1400018db:	mov    QWORD PTR [rcx+rdi*1],rax
   1400018df:	mov    rax,QWORD PTR [rdi]
   1400018e2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018e6:	lea    edx,[rcx-0xa8]
   1400018ec:	mov    DWORD PTR [rcx+rdi*1-0x4],edx
   1400018f0:	mov    QWORD PTR [rsp+0x28],rbx
   1400018f5:	mov    rcx,rbx
   1400018f8:	call   QWORD PTR [rip+0x579a]        # 0x140007098
   1400018fe:	nop
   1400018ff:	lea    rax,[rip+0x5e5a]        # 0x140007760
   140001906:	mov    QWORD PTR [rbx],rax
   140001909:	mov    BYTE PTR [rbx+0x88],0x0
   140001910:	mov    BYTE PTR [rbx+0x81],0x0
   140001917:	mov    rcx,rbx
   14000191a:	call   QWORD PTR [rip+0x57a8]        # 0x1400070c8
   140001920:	mov    QWORD PTR [rbx+0x90],0x0
   14000192b:	mov    eax,DWORD PTR [rip+0x9acf]        # 0x14000b400
   140001931:	mov    DWORD PTR [rbx+0x84],eax
   140001937:	mov    QWORD PTR [rbx+0x78],0x0
   14000193f:	or     esi,0x2
   140001942:	mov    r9d,ebp
   140001945:	mov    r8d,esi
   140001948:	mov    rdx,r14
   14000194b:	mov    rcx,rbx
   14000194e:	call   0x140003d30
   140001953:	test   rax,rax
   140001956:	jne    0x140001970
   140001958:	mov    rax,QWORD PTR [rdi]
   14000195b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000195f:	add    rcx,rdi
   140001962:	xor    r8d,r8d
   140001965:	lea    edx,[r8+0x2]
   140001969:	call   QWORD PTR [rip+0x5769]        # 0x1400070d8
   14000196f:	nop
   140001970:	mov    rax,rdi
   140001973:	mov    rbx,QWORD PTR [rsp+0x58]
   140001978:	mov    rbp,QWORD PTR [rsp+0x68]
   14000197d:	add    rsp,0x30
   140001981:	pop    r14
   140001983:	pop    rdi
   140001984:	pop    rsi
   140001985:	ret    
   140001986:	int3   
   140001987:	int3   
   140001988:	int3   
   140001989:	int3   
   14000198a:	int3   
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	rex push rbx
   140001992:	sub    rsp,0x20
   140001996:	xor    r8d,r8d
   140001999:	mov    QWORD PTR [rcx+0x18],0xf
   1400019a1:	mov    rbx,rcx
   1400019a4:	mov    QWORD PTR [rcx+0x10],r8
   1400019a8:	mov    BYTE PTR [rcx],r8b
   1400019ab:	cmp    BYTE PTR [rdx],r8b
   1400019ae:	je     0x1400019be
   1400019b0:	or     r8,0xffffffffffffffff
   1400019b4:	inc    r8
   1400019b7:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400019bc:	jne    0x1400019b4
   1400019be:	call   0x1400030d0
   1400019c3:	mov    rax,rbx
   1400019c6:	add    rsp,0x20
   1400019ca:	pop    rbx
   1400019cb:	ret    
   1400019cc:	int3   
   1400019cd:	int3   
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	mov    QWORD PTR [rcx+0x18],0xf
   1400019d8:	mov    QWORD PTR [rcx+0x10],0x0
   1400019e0:	mov    rax,rcx
   1400019e3:	mov    BYTE PTR [rcx],0x0
   1400019e6:	ret    
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	rex push rbx
   1400019f2:	sub    rsp,0x20
   1400019f6:	mov    QWORD PTR [rcx+0x18],0xf
   1400019fe:	mov    QWORD PTR [rcx+0x10],0x0
   140001a06:	mov    rbx,rcx
   140001a09:	mov    BYTE PTR [rcx],0x0
   140001a0c:	call   0x140003200
   140001a11:	mov    rax,rbx
   140001a14:	add    rsp,0x20
   140001a18:	pop    rbx
   140001a19:	ret    
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	rex push rbx
   140001a22:	sub    rsp,0x20
   140001a26:	xor    eax,eax
   140001a28:	mov    QWORD PTR [rcx+0x18],0x7
   140001a30:	or     r9,0xffffffffffffffff
   140001a34:	mov    QWORD PTR [rcx+0x10],rax
   140001a38:	xor    r8d,r8d
   140001a3b:	mov    rbx,rcx
   140001a3e:	mov    WORD PTR [rcx],ax
   140001a41:	call   0x140003300
   140001a46:	mov    rax,rbx
   140001a49:	add    rsp,0x20
   140001a4d:	pop    rbx
   140001a4e:	ret    
   140001a4f:	int3   
   140001a50:	xor    eax,eax
   140001a52:	mov    QWORD PTR [rcx+0x18],0x7
   140001a5a:	mov    QWORD PTR [rcx+0x10],rax
   140001a5e:	mov    WORD PTR [rcx],ax
   140001a61:	mov    rax,rcx
   140001a64:	ret    
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	mov    QWORD PTR [rcx],0x0
   140001a77:	mov    QWORD PTR [rcx+0x8],r8
   140001a7b:	mov    DWORD PTR [rcx+0x10],edx
   140001a7e:	mov    rax,rcx
   140001a81:	ret    
   140001a82:	int3   
   140001a83:	int3   
   140001a84:	int3   
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	xor    eax,eax
   140001a92:	mov    QWORD PTR [rcx],rdx
   140001a95:	mov    QWORD PTR [rcx+0x8],rax
   140001a99:	mov    DWORD PTR [rcx+0x10],eax
   140001a9c:	mov    rax,rcx
   140001a9f:	ret    
   140001aa0:	lea    rax,[rip+0x5bb1]        # 0x140007658
   140001aa7:	mov    QWORD PTR [rcx],rax
   140001aaa:	mov    rax,rcx
   140001aad:	ret    
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	lea    rax,[rip+0x5bf1]        # 0x1400076a8
   140001ab7:	mov    QWORD PTR [rcx],rax
   140001aba:	mov    rax,rcx
   140001abd:	ret    
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	rex push rbx
   140001ac2:	sub    rsp,0x20
   140001ac6:	mov    QWORD PTR [rcx],rdx
   140001ac9:	mov    rax,QWORD PTR [rdx]
   140001acc:	mov    rbx,rcx
   140001acf:	movsxd r8,DWORD PTR [rax+0x4]
   140001ad3:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140001ad8:	test   rcx,rcx
   140001adb:	je     0x140001ae3
   140001add:	mov    rax,QWORD PTR [rcx]
   140001ae0:	call   QWORD PTR [rax+0x8]
   140001ae3:	mov    rax,rbx
   140001ae6:	add    rsp,0x20
   140001aea:	pop    rbx
   140001aeb:	ret    
   140001aec:	int3   
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	lea    rax,[rip+0x5c11]        # 0x140007708
   140001af7:	mov    QWORD PTR [rcx],rax
   140001afa:	mov    rax,rcx
   140001afd:	ret    
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	lea    rax,[rip+0x5b19]        # 0x140007620
   140001b07:	mov    QWORD PTR [rcx],rax
   140001b0a:	mov    rax,rcx
   140001b0d:	ret    
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	mov    DWORD PTR [rcx],edx
   140001b12:	mov    QWORD PTR [rcx+0x8],r8
   140001b16:	mov    rax,rcx
   140001b19:	ret    
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	mov    rax,rcx
   140001b23:	ret    
   140001b24:	int3   
   140001b25:	int3   
   140001b26:	int3   
   140001b27:	int3   
   140001b28:	int3   
   140001b29:	int3   
   140001b2a:	int3   
   140001b2b:	int3   
   140001b2c:	int3   
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	mov    QWORD PTR [rsp+0x8],rcx
   140001b35:	push   rdi
   140001b36:	sub    rsp,0x30
   140001b3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001b43:	mov    QWORD PTR [rsp+0x48],rbx
   140001b48:	mov    rbx,rdx
   140001b4b:	mov    rdi,rcx
   140001b4e:	mov    QWORD PTR [rcx],rdx
   140001b51:	mov    rax,QWORD PTR [rdx]
   140001b54:	movsxd r8,DWORD PTR [rax+0x4]
   140001b58:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140001b5d:	test   rcx,rcx
   140001b60:	je     0x140001b69
   140001b62:	mov    rax,QWORD PTR [rcx]
   140001b65:	call   QWORD PTR [rax+0x8]
   140001b68:	nop
   140001b69:	mov    rax,QWORD PTR [rbx]
   140001b6c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b70:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140001b75:	jne    0x140001b8c
   140001b77:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   140001b7c:	test   rcx,rcx
   140001b7f:	je     0x140001b8c
   140001b81:	cmp    rcx,rbx
   140001b84:	je     0x140001b8c
   140001b86:	call   QWORD PTR [rip+0x556c]        # 0x1400070f8
   140001b8c:	mov    rax,QWORD PTR [rbx]
   140001b8f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b93:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140001b98:	sete   al
   140001b9b:	mov    BYTE PTR [rdi+0x8],al
   140001b9e:	mov    rax,rdi
   140001ba1:	mov    rbx,QWORD PTR [rsp+0x48]
   140001ba6:	add    rsp,0x30
   140001baa:	pop    rdi
   140001bab:	ret    
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	rex push rbx
   140001bb2:	sub    rsp,0x20
   140001bb6:	cmp    QWORD PTR [rcx+0x90],0x0
   140001bbe:	lea    rax,[rip+0x5b9b]        # 0x140007760
   140001bc5:	mov    rbx,rcx
   140001bc8:	mov    QWORD PTR [rcx],rax
   140001bcb:	je     0x140001bf9
   140001bcd:	mov    rcx,QWORD PTR [rcx+0x18]
   140001bd1:	lea    rax,[rbx+0x80]
   140001bd8:	cmp    QWORD PTR [rcx],rax
   140001bdb:	jne    0x140001bf9
   140001bdd:	mov    rdx,QWORD PTR [rbx+0x68]
   140001be1:	mov    r8,QWORD PTR [rbx+0x70]
   140001be5:	mov    QWORD PTR [rcx],rdx
   140001be8:	mov    rax,QWORD PTR [rbx+0x38]
   140001bec:	sub    r8d,edx
   140001bef:	mov    QWORD PTR [rax],rdx
   140001bf2:	mov    rax,QWORD PTR [rbx+0x50]
   140001bf6:	mov    DWORD PTR [rax],r8d
   140001bf9:	cmp    BYTE PTR [rbx+0x88],0x0
   140001c00:	je     0x140001c0a
   140001c02:	mov    rcx,rbx
   140001c05:	call   0x140003510
   140001c0a:	mov    rcx,rbx
   140001c0d:	add    rsp,0x20
   140001c11:	pop    rbx
   140001c12:	rex.W jmp QWORD PTR [rip+0x5487]        # 0x1400070a0
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	rex push rbx
   140001c22:	sub    rsp,0x20
   140001c26:	mov    rax,QWORD PTR [rcx-0xb0]
   140001c2d:	lea    rbx,[rcx-0x8]
   140001c31:	movsxd rdx,DWORD PTR [rax+0x4]
   140001c35:	lea    rax,[rip+0x5bbc]        # 0x1400077f8
   140001c3c:	mov    QWORD PTR [rdx+rcx*1-0xb0],rax
   140001c44:	mov    rax,QWORD PTR [rcx-0xb0]
   140001c4b:	movsxd rdx,DWORD PTR [rax+0x4]
   140001c4f:	lea    r8d,[rdx-0xb0]
   140001c56:	mov    DWORD PTR [rdx+rcx*1-0xb4],r8d
   140001c5e:	mov    rax,QWORD PTR [rbx-0xa8]
   140001c65:	movsxd rcx,DWORD PTR [rax+0x4]
   140001c69:	lea    rax,[rip+0x5b70]        # 0x1400077e0
   140001c70:	mov    QWORD PTR [rcx+rbx*1-0xa8],rax
   140001c78:	mov    rax,QWORD PTR [rbx-0xa8]
   140001c7f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001c83:	lea    edx,[rcx-0xa8]
   140001c89:	mov    DWORD PTR [rcx+rbx*1-0xac],edx
   140001c90:	lea    rcx,[rbx-0xa0]
   140001c97:	call   0x140001bb0
   140001c9c:	mov    rax,QWORD PTR [rbx-0xa8]
   140001ca3:	movsxd rcx,DWORD PTR [rax+0x4]
   140001ca7:	mov    rax,QWORD PTR [rip+0x5492]        # 0x140007140
   140001cae:	mov    QWORD PTR [rcx+rbx*1-0xa8],rax
   140001cb6:	mov    rax,QWORD PTR [rbx-0xa8]
   140001cbd:	movsxd rcx,DWORD PTR [rax+0x4]
   140001cc1:	lea    edx,[rcx-0x10]
   140001cc4:	mov    DWORD PTR [rcx+rbx*1-0xac],edx
   140001ccb:	add    rsp,0x20
   140001ccf:	pop    rbx
   140001cd0:	ret    
   140001cd1:	int3   
   140001cd2:	int3   
   140001cd3:	int3   
   140001cd4:	int3   
   140001cd5:	int3   
   140001cd6:	int3   
   140001cd7:	int3   
   140001cd8:	int3   
   140001cd9:	int3   
   140001cda:	int3   
   140001cdb:	int3   
   140001cdc:	int3   
   140001cdd:	int3   
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	rex push rbx
   140001ce2:	sub    rsp,0x20
   140001ce6:	mov    rax,QWORD PTR [rcx-0xa8]
   140001ced:	mov    rbx,rcx
   140001cf0:	add    rcx,0xffffffffffffff60
   140001cf7:	movsxd rdx,DWORD PTR [rax+0x4]
   140001cfb:	lea    rax,[rip+0x5ade]        # 0x1400077e0
   140001d02:	mov    QWORD PTR [rdx+rcx*1-0x8],rax
   140001d07:	mov    rax,QWORD PTR [rcx-0x8]
   140001d0b:	movsxd rdx,DWORD PTR [rax+0x4]
   140001d0f:	lea    r8d,[rdx-0xa8]
   140001d16:	mov    DWORD PTR [rdx+rcx*1-0xc],r8d
   140001d1b:	call   0x140001bb0
   140001d20:	lea    rcx,[rbx-0x98]
   140001d27:	add    rsp,0x20
   140001d2b:	pop    rbx
   140001d2c:	rex.W jmp QWORD PTR [rip+0x53b5]        # 0x1400070e8
   140001d33:	int3   
   140001d34:	int3   
   140001d35:	int3   
   140001d36:	int3   
   140001d37:	int3   
   140001d38:	int3   
   140001d39:	int3   
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	rex push rbx
   140001d42:	sub    rsp,0x20
   140001d46:	cmp    QWORD PTR [rcx+0x18],0x10
   140001d4b:	mov    rbx,rcx
   140001d4e:	jb     0x140001d58
   140001d50:	mov    rcx,QWORD PTR [rcx]
   140001d53:	call   0x14000615a
   140001d58:	mov    QWORD PTR [rbx+0x18],0xf
   140001d60:	mov    QWORD PTR [rbx+0x10],0x0
   140001d68:	mov    BYTE PTR [rbx],0x0
   140001d6b:	add    rsp,0x20
   140001d6f:	pop    rbx
   140001d70:	ret    
   140001d71:	int3   
   140001d72:	int3   
   140001d73:	int3   
   140001d74:	int3   
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	int3   
   140001d7d:	int3   
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	rex push rbx
   140001d82:	sub    rsp,0x20
   140001d86:	cmp    QWORD PTR [rcx+0x18],0x8
   140001d8b:	mov    rbx,rcx
   140001d8e:	jb     0x140001d98
   140001d90:	mov    rcx,QWORD PTR [rcx]
   140001d93:	call   0x14000615a
   140001d98:	xor    eax,eax
   140001d9a:	mov    QWORD PTR [rbx+0x18],0x7
   140001da2:	mov    QWORD PTR [rbx+0x10],rax
   140001da6:	mov    WORD PTR [rbx],ax
   140001da9:	add    rsp,0x20
   140001dad:	pop    rbx
   140001dae:	ret    
   140001daf:	int3   
   140001db0:	lea    rax,[rip+0x5869]        # 0x140007620
   140001db7:	mov    QWORD PTR [rcx],rax
   140001dba:	ret    
   140001dbb:	int3   
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	lea    rax,[rip+0x5859]        # 0x140007620
   140001dc7:	mov    QWORD PTR [rcx],rax
   140001dca:	ret    
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    rdx,QWORD PTR [rcx]
   140001dd3:	mov    rax,QWORD PTR [rdx]
   140001dd6:	movsxd rcx,DWORD PTR [rax+0x4]
   140001dda:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140001ddf:	test   rcx,rcx
   140001de2:	je     0x140001deb
   140001de4:	mov    rax,QWORD PTR [rcx]
   140001de7:	rex.W jmp QWORD PTR [rax+0x10]
   140001deb:	ret    
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	lea    rax,[rip+0x5829]        # 0x140007620
   140001df7:	mov    QWORD PTR [rcx],rax
   140001dfa:	ret    
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	lea    rax,[rip+0x5819]        # 0x140007620
   140001e07:	mov    QWORD PTR [rcx],rax
   140001e0a:	ret    
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	sub    rsp,0x28
   140001e14:	mov    rcx,QWORD PTR [rcx]
   140001e17:	test   rcx,rcx
   140001e1a:	je     0x140001e39
   140001e1c:	mov    rax,QWORD PTR [rcx]
   140001e1f:	call   QWORD PTR [rax+0x10]
   140001e22:	test   rax,rax
   140001e25:	je     0x140001e39
   140001e27:	mov    r8,QWORD PTR [rax]
   140001e2a:	mov    edx,0x1
   140001e2f:	mov    rcx,rax
   140001e32:	add    rsp,0x28
   140001e36:	rex.WB jmp QWORD PTR [r8]
   140001e39:	add    rsp,0x28
   140001e3d:	ret    
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	ret    0x0
   140001e43:	int3   
   140001e44:	int3   
   140001e45:	int3   
   140001e46:	int3   
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	rex push rbx
   140001e52:	sub    rsp,0x20
   140001e56:	mov    rbx,rcx
   140001e59:	call   QWORD PTR [rip+0x5319]        # 0x140007178
   140001e5f:	test   al,al
   140001e61:	jne    0x140001e6c
   140001e63:	mov    rcx,QWORD PTR [rbx]
   140001e66:	call   QWORD PTR [rip+0x5284]        # 0x1400070f0
   140001e6c:	mov    rdx,QWORD PTR [rbx]
   140001e6f:	mov    rax,QWORD PTR [rdx]
   140001e72:	movsxd rcx,DWORD PTR [rax+0x4]
   140001e76:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140001e7b:	test   rcx,rcx
   140001e7e:	je     0x140001e8c
   140001e80:	mov    rax,QWORD PTR [rcx]
   140001e83:	add    rsp,0x20
   140001e87:	pop    rbx
   140001e88:	rex.W jmp QWORD PTR [rax+0x10]
   140001e8c:	add    rsp,0x20
   140001e90:	pop    rbx
   140001e91:	ret    
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    rax,rdx
   140001ea3:	ret    
   140001ea4:	int3   
   140001ea5:	int3   
   140001ea6:	int3   
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	ret    0x0
   140001eb3:	int3   
   140001eb4:	int3   
   140001eb5:	int3   
   140001eb6:	int3   
   140001eb7:	int3   
   140001eb8:	int3   
   140001eb9:	int3   
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ec5:	push   rdi
   140001ec6:	sub    rsp,0x20
   140001eca:	mov    rdi,rdx
   140001ecd:	mov    rbx,rcx
   140001ed0:	cmp    rcx,rdx
   140001ed3:	je     0x140001f00
   140001ed5:	cmp    QWORD PTR [rcx+0x18],0x8
   140001eda:	jb     0x140001ee4
   140001edc:	mov    rcx,QWORD PTR [rcx]
   140001edf:	call   0x14000615a
   140001ee4:	xor    eax,eax
   140001ee6:	mov    QWORD PTR [rbx+0x18],0x7
   140001eee:	mov    rdx,rdi
   140001ef1:	mov    QWORD PTR [rbx+0x10],rax
   140001ef5:	mov    rcx,rbx
   140001ef8:	mov    WORD PTR [rbx],ax
   140001efb:	call   0x140002260
   140001f00:	mov    rax,rbx
   140001f03:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f08:	add    rsp,0x20
   140001f0c:	pop    rdi
   140001f0d:	ret    
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	mov    rdx,QWORD PTR [rdx]
   140001f13:	cmp    QWORD PTR [rcx],rdx
   140001f16:	sete   al
   140001f19:	ret    
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	cmp    rcx,rdx
   140001f23:	sete   al
   140001f26:	ret    
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    rax,QWORD PTR [rdx+0x8]
   140001f34:	cmp    QWORD PTR [rcx+0x8],rax
   140001f38:	jne    0x140001f43
   140001f3a:	mov    eax,DWORD PTR [rdx]
   140001f3c:	cmp    DWORD PTR [rcx],eax
   140001f3e:	jne    0x140001f43
   140001f40:	mov    al,0x1
   140001f42:	ret    
   140001f43:	xor    al,al
   140001f45:	ret    
   140001f46:	int3   
   140001f47:	int3   
   140001f48:	int3   
   140001f49:	int3   
   140001f4a:	int3   
   140001f4b:	int3   
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	mov    rax,QWORD PTR [rcx+0x8]
   140001f54:	add    rax,QWORD PTR [rcx]
   140001f57:	ret    
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	movzx  eax,BYTE PTR [rcx+0x8]
   140001f64:	ret    
   140001f65:	int3   
   140001f66:	int3   
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    rax,QWORD PTR [rcx]
   140001f73:	ret    
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    rax,QWORD PTR [rcx]
   140001f83:	ret    
   140001f84:	int3   
   140001f85:	int3   
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    rax,QWORD PTR [rcx]
   140001f93:	ret    
   140001f94:	int3   
   140001f95:	int3   
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	mov    rax,QWORD PTR [rcx]
   140001fa3:	ret    
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	mov    rax,QWORD PTR [rcx]
   140001fb3:	sub    rax,QWORD PTR [rdx]
   140001fb6:	sar    rax,1
   140001fb9:	ret    
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    rax,QWORD PTR [rcx]
   140001fc3:	sub    rax,QWORD PTR [rdx]
   140001fc6:	sar    rax,1
   140001fc9:	ret    
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	rex push rbx
   140001fd2:	sub    rsp,0x20
   140001fd6:	lea    rbx,[rcx+0xb0]
   140001fdd:	mov    rcx,rbx
   140001fe0:	call   0x140001c20
   140001fe5:	mov    rax,QWORD PTR [rip+0x514c]        # 0x140007138
   140001fec:	mov    rcx,rbx
   140001fef:	mov    QWORD PTR [rbx],rax
   140001ff2:	mov    rax,QWORD PTR [rip+0x5137]        # 0x140007130
   140001ff9:	mov    QWORD PTR [rbx],rax
   140001ffc:	add    rsp,0x20
   140002000:	pop    rbx
   140002001:	rex.W jmp QWORD PTR [rip+0x5088]        # 0x140007090
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	rex push rbx
   140002012:	sub    rsp,0x20
   140002016:	mov    rax,QWORD PTR [rcx]
   140002019:	lea    rbx,[rcx+0xa8]
   140002020:	movsxd rcx,DWORD PTR [rax+0x4]
   140002024:	lea    rax,[rip+0x57b5]        # 0x1400077e0
   14000202b:	mov    QWORD PTR [rcx+rbx*1-0xa8],rax
   140002033:	mov    rax,QWORD PTR [rbx-0xa8]
   14000203a:	lea    rcx,[rbx-0xa0]
   140002041:	movsxd rdx,DWORD PTR [rax+0x4]
   140002045:	lea    r8d,[rdx-0xa8]
   14000204c:	mov    DWORD PTR [rdx+rbx*1-0xac],r8d
   140002054:	call   0x140001bb0
   140002059:	lea    rcx,[rbx-0x98]
   140002060:	call   QWORD PTR [rip+0x5082]        # 0x1400070e8
   140002066:	mov    rax,QWORD PTR [rip+0x50cb]        # 0x140007138
   14000206d:	mov    rcx,rbx
   140002070:	mov    QWORD PTR [rbx],rax
   140002073:	mov    rax,QWORD PTR [rip+0x50b6]        # 0x140007130
   14000207a:	mov    QWORD PTR [rbx],rax
   14000207d:	add    rsp,0x20
   140002081:	pop    rbx
   140002082:	rex.W jmp QWORD PTR [rip+0x5007]        # 0x140007090
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	movsxd rax,DWORD PTR [rcx-0x4]
   140002090:	sub    rcx,rax
   140002093:	jmp    0x1400020e0
   140002098:	movsxd rax,DWORD PTR [rcx-0x4]
   14000209c:	sub    rcx,rax
   14000209f:	jmp    0x140002150
   1400020a4:	int3   
   1400020a5:	int3   
   1400020a6:	int3   
   1400020a7:	int3   
   1400020a8:	int3   
   1400020a9:	int3   
   1400020aa:	int3   
   1400020ab:	int3   
   1400020ac:	int3   
   1400020ad:	int3   
   1400020ae:	int3   
   1400020af:	int3   
   1400020b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020b5:	push   rdi
   1400020b6:	sub    rsp,0x20
   1400020ba:	mov    ebx,edx
   1400020bc:	mov    rdi,rcx
   1400020bf:	call   0x140001bb0
   1400020c4:	test   bl,0x1
   1400020c7:	je     0x1400020d1
   1400020c9:	mov    rcx,rdi
   1400020cc:	call   0x14000615a
   1400020d1:	mov    rax,rdi
   1400020d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020d9:	add    rsp,0x20
   1400020dd:	pop    rdi
   1400020de:	ret    
   1400020df:	int3   
   1400020e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400020ea:	push   rdi
   1400020eb:	sub    rsp,0x20
   1400020ef:	lea    rsi,[rcx-0xb0]
   1400020f6:	mov    edi,edx
   1400020f8:	lea    rcx,[rsi+0xb0]
   1400020ff:	call   0x140001c20
   140002104:	mov    r8,QWORD PTR [rip+0x502d]        # 0x140007138
   14000210b:	lea    rcx,[rsi+0xb0]
   140002112:	mov    QWORD PTR [rsi+0xb0],r8
   140002119:	mov    r8,QWORD PTR [rip+0x5010]        # 0x140007130
   140002120:	mov    QWORD PTR [rsi+0xb0],r8
   140002127:	call   QWORD PTR [rip+0x4f63]        # 0x140007090
   14000212d:	test   dil,0x1
   140002131:	je     0x14000213b
   140002133:	mov    rcx,rsi
   140002136:	call   0x14000615a
   14000213b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002140:	mov    rax,rsi
   140002143:	mov    rsi,QWORD PTR [rsp+0x38]
   140002148:	add    rsp,0x20
   14000214c:	pop    rdi
   14000214d:	ret    
   14000214e:	int3   
   14000214f:	int3   
   140002150:	mov    QWORD PTR [rsp+0x8],rbx
   140002155:	push   rdi
   140002156:	sub    rsp,0x20
   14000215a:	lea    rdi,[rcx-0xa8]
   140002161:	mov    ebx,edx
   140002163:	mov    rcx,rdi
   140002166:	call   0x140002010
   14000216b:	test   bl,0x1
   14000216e:	je     0x140002178
   140002170:	mov    rcx,rdi
   140002173:	call   0x14000615a
   140002178:	mov    rax,rdi
   14000217b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002180:	add    rsp,0x20
   140002184:	pop    rdi
   140002185:	ret    
   140002186:	int3   
   140002187:	int3   
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	int3   
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	rex push rbx
   140002192:	sub    rsp,0x20
   140002196:	lea    rax,[rip+0x5483]        # 0x140007620
   14000219d:	mov    rbx,rcx
   1400021a0:	mov    QWORD PTR [rcx],rax
   1400021a3:	test   dl,0x1
   1400021a6:	je     0x1400021ad
   1400021a8:	call   0x14000615a
   1400021ad:	mov    rax,rbx
   1400021b0:	add    rsp,0x20
   1400021b4:	pop    rbx
   1400021b5:	ret    
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	rex push rbx
   1400021c2:	sub    rsp,0x20
   1400021c6:	lea    rax,[rip+0x5453]        # 0x140007620
   1400021cd:	mov    rbx,rcx
   1400021d0:	mov    QWORD PTR [rcx],rax
   1400021d3:	test   dl,0x1
   1400021d6:	je     0x1400021dd
   1400021d8:	call   0x14000615a
   1400021dd:	mov    rax,rbx
   1400021e0:	add    rsp,0x20
   1400021e4:	pop    rbx
   1400021e5:	ret    
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	int3   
   1400021ed:	int3   
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	rex push rbx
   1400021f2:	sub    rsp,0x20
   1400021f6:	lea    rax,[rip+0x5423]        # 0x140007620
   1400021fd:	mov    rbx,rcx
   140002200:	mov    QWORD PTR [rcx],rax
   140002203:	test   dl,0x1
   140002206:	je     0x14000220d
   140002208:	call   0x14000615a
   14000220d:	mov    rax,rbx
   140002210:	add    rsp,0x20
   140002214:	pop    rbx
   140002215:	ret    
   140002216:	int3   
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	rex push rbx
   140002222:	sub    rsp,0x20
   140002226:	lea    rax,[rip+0x53f3]        # 0x140007620
   14000222d:	mov    rbx,rcx
   140002230:	mov    QWORD PTR [rcx],rax
   140002233:	test   dl,0x1
   140002236:	je     0x14000223d
   140002238:	call   0x14000615a
   14000223d:	mov    rax,rbx
   140002240:	add    rsp,0x20
   140002244:	pop    rbx
   140002245:	ret    
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	ret    0x0
   140002253:	int3   
   140002254:	int3   
   140002255:	int3   
   140002256:	int3   
   140002257:	int3   
   140002258:	int3   
   140002259:	int3   
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	int3   
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	mov    QWORD PTR [rsp+0x8],rbx
   140002265:	mov    QWORD PTR [rsp+0x10],rsi
   14000226a:	push   rdi
   14000226b:	sub    rsp,0x20
   14000226f:	xor    esi,esi
   140002271:	cmp    QWORD PTR [rdx+0x18],0x8
   140002276:	mov    rbx,rdx
   140002279:	mov    rdi,rcx
   14000227c:	jae    0x140002292
   14000227e:	mov    r8,QWORD PTR [rdx+0x10]
   140002282:	inc    r8
   140002285:	je     0x1400022a0
   140002287:	add    r8,r8
   14000228a:	call   QWORD PTR [rip+0x4f70]        # 0x140007200
   140002290:	jmp    0x1400022a0
   140002292:	test   rcx,rcx
   140002295:	je     0x14000229d
   140002297:	mov    rax,QWORD PTR [rdx]
   14000229a:	mov    QWORD PTR [rcx],rax
   14000229d:	mov    QWORD PTR [rdx],rsi
   1400022a0:	mov    rax,QWORD PTR [rbx+0x10]
   1400022a4:	mov    QWORD PTR [rdi+0x10],rax
   1400022a8:	mov    rax,QWORD PTR [rbx+0x18]
   1400022ac:	mov    QWORD PTR [rdi+0x18],rax
   1400022b0:	mov    QWORD PTR [rbx+0x10],rsi
   1400022b4:	mov    QWORD PTR [rbx+0x18],0x7
   1400022bc:	mov    WORD PTR [rbx],si
   1400022bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022c4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400022c9:	add    rsp,0x20
   1400022cd:	pop    rdi
   1400022ce:	ret    
   1400022cf:	int3   
   1400022d0:	ret    0x0
   1400022d3:	int3   
   1400022d4:	int3   
   1400022d5:	int3   
   1400022d6:	int3   
   1400022d7:	int3   
   1400022d8:	int3   
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	mov    rax,rdx
   1400022e3:	cmp    r8,0x1
   1400022e7:	jne    0x1400022f8
   1400022e9:	cmp    QWORD PTR [rcx+0x18],0x10
   1400022ee:	jb     0x1400022f3
   1400022f0:	mov    rcx,QWORD PTR [rcx]
   1400022f3:	mov    BYTE PTR [rcx+rdx*1],r9b
   1400022f7:	ret    
   1400022f8:	cmp    QWORD PTR [rcx+0x18],0x10
   1400022fd:	jb     0x140002302
   1400022ff:	mov    rcx,QWORD PTR [rcx]
   140002302:	movsx  edx,r9b
   140002306:	add    rcx,rax
   140002309:	jmp    0x1400062fc
   14000230e:	int3   
   14000230f:	int3   
   140002310:	ret    0x0
   140002313:	int3   
   140002314:	int3   
   140002315:	int3   
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	mov    QWORD PTR [rsp+0x18],r8
   140002325:	mov    QWORD PTR [rsp+0x10],rdx
   14000232a:	mov    QWORD PTR [rsp+0x8],rcx
   14000232f:	push   rbx
   140002330:	push   rsi
   140002331:	push   rdi
   140002332:	push   r14
   140002334:	sub    rsp,0x38
   140002338:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002341:	mov    rsi,r8
   140002344:	mov    rbx,rcx
   140002347:	mov    rdi,rdx
   14000234a:	or     rdi,0xf
   14000234e:	cmp    rdi,0xfffffffffffffffe
   140002352:	jbe    0x140002359
   140002354:	mov    rdi,rdx
   140002357:	jmp    0x14000238e
   140002359:	mov    r8,QWORD PTR [rcx+0x18]
   14000235d:	mov    rcx,r8
   140002360:	shr    rcx,1
   140002363:	movabs rax,0xaaaaaaaaaaaaaaab
   14000236d:	mul    rdi
   140002370:	shr    rdx,1
   140002373:	cmp    rcx,rdx
   140002376:	jbe    0x14000238e
   140002378:	mov    rdi,0xfffffffffffffffe
   14000237f:	mov    rax,rdi
   140002382:	sub    rax,rcx
   140002385:	cmp    r8,rax
   140002388:	ja     0x14000238e
   14000238a:	lea    rdi,[rcx+r8*1]
   14000238e:	lea    rcx,[rdi+0x1]
   140002392:	xor    r14d,r14d
   140002395:	test   rcx,rcx
   140002398:	je     0x1400023b4
   14000239a:	cmp    rcx,0xffffffffffffffff
   14000239e:	ja     0x1400023ad
   1400023a0:	call   0x140006154
   1400023a5:	mov    r14,rax
   1400023a8:	test   rax,rax
   1400023ab:	jne    0x1400023b4
   1400023ad:	call   QWORD PTR [rip+0x4dd5]        # 0x140007188
   1400023b3:	nop
   1400023b4:	jmp    0x1400023ca
   1400023b6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400023bb:	mov    rsi,QWORD PTR [rsp+0x70]
   1400023c0:	mov    rdi,QWORD PTR [rsp+0x68]
   1400023c5:	mov    r14,QWORD PTR [rsp+0x78]
   1400023ca:	test   rsi,rsi
   1400023cd:	je     0x1400023ee
   1400023cf:	cmp    QWORD PTR [rbx+0x18],0x10
   1400023d4:	jb     0x1400023db
   1400023d6:	mov    rdx,QWORD PTR [rbx]
   1400023d9:	jmp    0x1400023de
   1400023db:	mov    rdx,rbx
   1400023de:	test   rsi,rsi
   1400023e1:	je     0x1400023ee
   1400023e3:	mov    r8,rsi
   1400023e6:	mov    rcx,r14
   1400023e9:	call   0x1400062f6
   1400023ee:	cmp    QWORD PTR [rbx+0x18],0x10
   1400023f3:	jb     0x1400023fd
   1400023f5:	mov    rcx,QWORD PTR [rbx]
   1400023f8:	call   0x14000615a
   1400023fd:	mov    BYTE PTR [rbx],0x0
   140002400:	mov    QWORD PTR [rbx],r14
   140002403:	mov    QWORD PTR [rbx+0x18],rdi
   140002407:	mov    QWORD PTR [rbx+0x10],rsi
   14000240b:	cmp    rdi,0x10
   14000240f:	jb     0x140002414
   140002411:	mov    rbx,r14
   140002414:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002418:	add    rsp,0x38
   14000241c:	pop    r14
   14000241e:	pop    rdi
   14000241f:	pop    rsi
   140002420:	pop    rbx
   140002421:	ret    
   140002422:	int3   
   140002423:	int3   
   140002424:	int3   
   140002425:	int3   
   140002426:	int3   
   140002427:	int3   
   140002428:	int3   
   140002429:	int3   
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	mov    QWORD PTR [rsp+0x18],r8
   140002435:	mov    QWORD PTR [rsp+0x10],rdx
   14000243a:	mov    QWORD PTR [rsp+0x8],rcx
   14000243f:	push   rbx
   140002440:	push   rsi
   140002441:	push   rdi
   140002442:	push   r14
   140002444:	push   r15
   140002446:	sub    rsp,0x30
   14000244a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002453:	mov    rsi,r8
   140002456:	mov    rbx,rcx
   140002459:	mov    rdi,rdx
   14000245c:	or     rdi,0x7
   140002460:	movabs r9,0x7ffffffffffffffe
   14000246a:	cmp    rdi,r9
   14000246d:	jbe    0x140002474
   14000246f:	mov    rdi,rdx
   140002472:	jmp    0x1400024a5
   140002474:	mov    r8,QWORD PTR [rcx+0x18]
   140002478:	mov    rcx,r8
   14000247b:	shr    rcx,1
   14000247e:	movabs rax,0xaaaaaaaaaaaaaaab
   140002488:	mul    rdi
   14000248b:	shr    rdx,1
   14000248e:	cmp    rcx,rdx
   140002491:	jbe    0x1400024a5
   140002493:	mov    rax,r9
   140002496:	sub    rax,rcx
   140002499:	cmp    r8,rax
   14000249c:	lea    rdi,[rcx+r8*1]
   1400024a0:	jbe    0x1400024a5
   1400024a2:	mov    rdi,r9
   1400024a5:	lea    rcx,[rdi+0x1]
   1400024a9:	xor    r15d,r15d
   1400024ac:	mov    r14d,r15d
   1400024af:	test   rcx,rcx
   1400024b2:	je     0x1400024da
   1400024b4:	movabs rax,0x7fffffffffffffff
   1400024be:	cmp    rcx,rax
   1400024c1:	ja     0x1400024d3
   1400024c3:	add    rcx,rcx
   1400024c6:	call   0x140006154
   1400024cb:	mov    r14,rax
   1400024ce:	test   rax,rax
   1400024d1:	jne    0x1400024da
   1400024d3:	call   QWORD PTR [rip+0x4caf]        # 0x140007188
   1400024d9:	nop
   1400024da:	jmp    0x1400024f3
   1400024dc:	xor    r15d,r15d
   1400024df:	mov    rbx,QWORD PTR [rsp+0x60]
   1400024e4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400024e9:	mov    rdi,QWORD PTR [rsp+0x68]
   1400024ee:	mov    r14,QWORD PTR [rsp+0x78]
   1400024f3:	test   rsi,rsi
   1400024f6:	je     0x140002518
   1400024f8:	cmp    QWORD PTR [rbx+0x18],0x8
   1400024fd:	jb     0x140002504
   1400024ff:	mov    rdx,QWORD PTR [rbx]
   140002502:	jmp    0x140002507
   140002504:	mov    rdx,rbx
   140002507:	test   rsi,rsi
   14000250a:	je     0x140002518
   14000250c:	lea    r8,[rsi+rsi*1]
   140002510:	mov    rcx,r14
   140002513:	call   0x1400062f6
   140002518:	cmp    QWORD PTR [rbx+0x18],0x8
   14000251d:	jb     0x140002527
   14000251f:	mov    rcx,QWORD PTR [rbx]
   140002522:	call   0x14000615a
   140002527:	mov    QWORD PTR [rbx],r14
   14000252a:	mov    QWORD PTR [rbx+0x18],rdi
   14000252e:	mov    QWORD PTR [rbx+0x10],rsi
   140002532:	cmp    rdi,0x8
   140002536:	jb     0x14000253b
   140002538:	mov    rbx,r14
   14000253b:	mov    WORD PTR [rbx+rsi*2],r15w
   140002540:	add    rsp,0x30
   140002544:	pop    r15
   140002546:	pop    r14
   140002548:	pop    rdi
   140002549:	pop    rsi
   14000254a:	pop    rbx
   14000254b:	ret    
   14000254c:	int3   
   14000254d:	int3   
   14000254e:	int3   
   14000254f:	int3   
   140002550:	mov    rax,rsp
   140002553:	push   rbp
   140002554:	push   rdi
   140002555:	push   r14
   140002557:	mov    rbp,rsp
   14000255a:	sub    rsp,0x60
   14000255e:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140002566:	mov    QWORD PTR [rax+0x10],rbx
   14000256a:	mov    QWORD PTR [rax+0x18],rsi
   14000256e:	mov    rdi,rcx
   140002571:	cmp    QWORD PTR [rcx+0x78],0x0
   140002576:	je     0x14000274a
   14000257c:	cmp    BYTE PTR [rcx+0x81],0x0
   140002583:	je     0x14000274a
   140002589:	mov    rax,QWORD PTR [rcx]
   14000258c:	or     edx,0xffffffff
   14000258f:	call   QWORD PTR [rax+0x18]
   140002592:	cmp    eax,0xffffffff
   140002595:	jne    0x14000259e
   140002597:	xor    al,al
   140002599:	jmp    0x14000274c
   14000259e:	mov    edx,0xf
   1400025a3:	mov    QWORD PTR [rbp-0x10],rdx
   1400025a7:	mov    BYTE PTR [rbp-0x28],0x0
   1400025ab:	xor    ecx,ecx
   1400025ad:	mov    QWORD PTR [rbp-0x28],rcx
   1400025b1:	mov    QWORD PTR [rbp-0x18],0x8
   1400025b9:	lea    rax,[rbp-0x28]
   1400025bd:	cmp    rdx,0x10
   1400025c1:	cmovae rax,rcx
   1400025c5:	mov    BYTE PTR [rax+0x8],cl
   1400025c8:	xor    r14d,r14d
   1400025cb:	mov    rdx,QWORD PTR [rbp-0x10]
   1400025cf:	nop
   1400025d0:	lea    rcx,[rbp-0x28]
   1400025d4:	cmp    rdx,0x10
   1400025d8:	cmovae rcx,QWORD PTR [rbp-0x28]
   1400025dd:	lea    r8,[rbp-0x28]
   1400025e1:	cmovae r8,QWORD PTR [rbp-0x28]
   1400025e6:	mov    r9,QWORD PTR [rbp-0x18]
   1400025ea:	add    r9,rcx
   1400025ed:	lea    rax,[rbp+0x20]
   1400025f1:	mov    QWORD PTR [rsp+0x20],rax
   1400025f6:	lea    rdx,[rdi+0x84]
   1400025fd:	mov    rcx,QWORD PTR [rdi+0x78]
   140002601:	call   QWORD PTR [rip+0x4a69]        # 0x140007070
   140002607:	test   eax,eax
   140002609:	je     0x140002615
   14000260b:	dec    eax
   14000260d:	jne    0x14000270b
   140002613:	jmp    0x14000261c
   140002615:	mov    BYTE PTR [rdi+0x81],r14b
   14000261c:	lea    rax,[rbp-0x28]
   140002620:	mov    r9,QWORD PTR [rbp-0x28]
   140002624:	mov    rdx,QWORD PTR [rbp-0x10]
   140002628:	cmp    rdx,0x10
   14000262c:	cmovae rax,r9
   140002630:	mov    rbx,QWORD PTR [rbp+0x20]
   140002634:	sub    rbx,rax
   140002637:	je     0x140002667
   140002639:	lea    rcx,[rbp-0x28]
   14000263d:	cmp    rdx,0x10
   140002641:	cmovae rcx,r9
   140002645:	mov    r9,QWORD PTR [rdi+0x90]
   14000264c:	mov    r8,rbx
   14000264f:	mov    edx,0x1
   140002654:	call   QWORD PTR [rip+0x4b76]        # 0x1400071d0
   14000265a:	mov    rdx,QWORD PTR [rbp-0x10]
   14000265e:	cmp    rbx,rax
   140002661:	jne    0x140002714
   140002667:	cmp    BYTE PTR [rdi+0x81],r14b
   14000266e:	je     0x140002734
   140002674:	test   rbx,rbx
   140002677:	jne    0x1400025d0
   14000267d:	or     rax,0xffffffffffffffff
   140002681:	mov    r8,QWORD PTR [rbp-0x18]
   140002685:	sub    rax,r8
   140002688:	cmp    rax,0x8
   14000268c:	jbe    0x140002726
   140002692:	lea    rbx,[r8+0x8]
   140002696:	cmp    rbx,0xfffffffffffffffe
   14000269a:	ja     0x140002718
   14000269c:	cmp    rdx,rbx
   14000269f:	jae    0x1400026b3
   1400026a1:	mov    rdx,rbx
   1400026a4:	lea    rcx,[rbp-0x28]
   1400026a8:	call   0x140002320
   1400026ad:	mov    rdx,QWORD PTR [rbp-0x10]
   1400026b1:	jmp    0x1400026d1
   1400026b3:	test   rbx,rbx
   1400026b6:	jne    0x1400026da
   1400026b8:	mov    QWORD PTR [rbp-0x18],r14
   1400026bc:	lea    rax,[rbp-0x28]
   1400026c0:	cmp    rdx,0x10
   1400026c4:	cmovae rax,QWORD PTR [rbp-0x28]
   1400026c9:	mov    BYTE PTR [rax],r14b
   1400026cc:	jmp    0x1400025cb
   1400026d1:	test   rbx,rbx
   1400026d4:	je     0x1400025d0
   1400026da:	lea    rcx,[rbp-0x28]
   1400026de:	cmp    rdx,0x10
   1400026e2:	cmovae rcx,QWORD PTR [rbp-0x28]
   1400026e7:	mov    rax,QWORD PTR [rbp-0x18]
   1400026eb:	xor    edx,edx
   1400026ed:	mov    QWORD PTR [rax+rcx*1],rdx
   1400026f1:	mov    QWORD PTR [rbp-0x18],rbx
   1400026f5:	lea    rax,[rbp-0x28]
   1400026f9:	cmp    QWORD PTR [rbp-0x10],0x10
   1400026fe:	cmovae rax,QWORD PTR [rbp-0x28]
   140002703:	mov    BYTE PTR [rbx+rax*1],dl
   140002706:	jmp    0x1400025cb
   14000270b:	mov    rdx,QWORD PTR [rbp-0x10]
   14000270f:	sub    eax,0x2
   140002712:	je     0x140002734
   140002714:	xor    bl,bl
   140002716:	jmp    0x140002736
   140002718:	lea    rcx,[rip+0x5121]        # 0x140007840
   14000271f:	call   QWORD PTR [rip+0x4913]        # 0x140007038
   140002725:	int3   
   140002726:	lea    rcx,[rip+0x5113]        # 0x140007840
   14000272d:	call   QWORD PTR [rip+0x4905]        # 0x140007038
   140002733:	int3   
   140002734:	mov    bl,0x1
   140002736:	cmp    rdx,0x10
   14000273a:	jb     0x140002745
   14000273c:	mov    rcx,QWORD PTR [rbp-0x28]
   140002740:	call   0x14000615a
   140002745:	movzx  eax,bl
   140002748:	jmp    0x14000274c
   14000274a:	mov    al,0x1
   14000274c:	lea    r11,[rsp+0x60]
   140002751:	mov    rbx,QWORD PTR [r11+0x28]
   140002755:	mov    rsi,QWORD PTR [r11+0x30]
   140002759:	mov    rsp,r11
   14000275c:	pop    r14
   14000275e:	pop    rdi
   14000275f:	pop    rbp
   140002760:	ret    
   140002761:	int3   
   140002762:	int3   
   140002763:	int3   
   140002764:	int3   
   140002765:	int3   
   140002766:	int3   
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	cmp    QWORD PTR [rcx+0x18],0x10
   140002775:	mov    QWORD PTR [rcx+0x10],rdx
   140002779:	jb     0x140002783
   14000277b:	mov    rax,QWORD PTR [rcx]
   14000277e:	mov    BYTE PTR [rax+rdx*1],0x0
   140002782:	ret    
   140002783:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002787:	ret    
   140002788:	int3   
   140002789:	int3   
   14000278a:	int3   
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	cmp    QWORD PTR [rcx+0x18],0x8
   140002795:	mov    rax,rcx
   140002798:	mov    QWORD PTR [rcx+0x10],rdx
   14000279c:	jb     0x1400027a1
   14000279e:	mov    rax,QWORD PTR [rcx]
   1400027a1:	xor    ecx,ecx
   1400027a3:	mov    WORD PTR [rax+rdx*2],cx
   1400027a7:	ret    
   1400027a8:	int3   
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    rax,rdx
   1400027b3:	ret    
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    rax,rdx
   1400027c3:	ret    
   1400027c4:	int3   
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027d5:	push   rdi
   1400027d6:	sub    rsp,0x20
   1400027da:	mov    rbx,rdx
   1400027dd:	mov    rdx,QWORD PTR [rcx]
   1400027e0:	xor    edi,edi
   1400027e2:	cmp    rbx,QWORD PTR [rdx+0x18]
   1400027e6:	jae    0x1400027f7
   1400027e8:	mov    rax,QWORD PTR [rdx+0x10]
   1400027ec:	mov    rax,QWORD PTR [rax+rbx*8]
   1400027f0:	test   rax,rax
   1400027f3:	jne    0x140002817
   1400027f5:	jmp    0x1400027fa
   1400027f7:	mov    rax,rdi
   1400027fa:	cmp    BYTE PTR [rdx+0x24],dil
   1400027fe:	je     0x140002817
   140002800:	call   QWORD PTR [rip+0x484a]        # 0x140007050
   140002806:	cmp    rbx,QWORD PTR [rax+0x18]
   14000280a:	jae    0x140002814
   14000280c:	mov    rax,QWORD PTR [rax+0x10]
   140002810:	mov    rdi,QWORD PTR [rax+rbx*8]
   140002814:	mov    rax,rdi
   140002817:	mov    rbx,QWORD PTR [rsp+0x30]
   14000281c:	add    rsp,0x20
   140002820:	pop    rdi
   140002821:	ret    
   140002822:	int3   
   140002823:	int3   
   140002824:	int3   
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	mov    QWORD PTR [rsp+0x20],rbx
   140002835:	push   rdi
   140002836:	sub    rsp,0x20
   14000283a:	mov    rdi,rdx
   14000283d:	mov    rbx,rcx
   140002840:	cmp    rdx,0xfffffffffffffffe
   140002844:	jbe    0x140002854
   140002846:	lea    rcx,[rip+0x4ff3]        # 0x140007840
   14000284d:	call   QWORD PTR [rip+0x47e5]        # 0x140007038
   140002853:	int3   
   140002854:	mov    rax,QWORD PTR [rcx+0x18]
   140002858:	mov    QWORD PTR [rsp+0x30],rbp
   14000285d:	xor    ebp,ebp
   14000285f:	cmp    rax,rdx
   140002862:	jae    0x14000286f
   140002864:	mov    r8,QWORD PTR [rcx+0x10]
   140002868:	call   0x140002320
   14000286d:	jmp    0x1400028e1
   14000286f:	test   r8b,r8b
   140002872:	je     0x1400028cc
   140002874:	cmp    rdx,0x10
   140002878:	jae    0x1400028cc
   14000287a:	mov    QWORD PTR [rsp+0x38],rsi
   14000287f:	mov    rsi,QWORD PTR [rcx+0x10]
   140002883:	cmp    rdx,rsi
   140002886:	cmovb  rsi,rdx
   14000288a:	cmp    rax,0x10
   14000288e:	jb     0x1400028b5
   140002890:	mov    QWORD PTR [rsp+0x40],r14
   140002895:	mov    r14,QWORD PTR [rcx]
   140002898:	test   rsi,rsi
   14000289b:	je     0x1400028a8
   14000289d:	mov    r8,rsi
   1400028a0:	mov    rdx,r14
   1400028a3:	call   0x1400062f6
   1400028a8:	mov    rcx,r14
   1400028ab:	call   0x14000615a
   1400028b0:	mov    r14,QWORD PTR [rsp+0x40]
   1400028b5:	mov    QWORD PTR [rbx+0x10],rsi
   1400028b9:	mov    QWORD PTR [rbx+0x18],0xf
   1400028c1:	mov    BYTE PTR [rsi+rbx*1],bpl
   1400028c5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400028ca:	jmp    0x1400028e1
   1400028cc:	test   rdx,rdx
   1400028cf:	jne    0x1400028e1
   1400028d1:	mov    QWORD PTR [rcx+0x10],rbp
   1400028d5:	cmp    rax,0x10
   1400028d9:	jb     0x1400028de
   1400028db:	mov    rbx,QWORD PTR [rcx]
   1400028de:	mov    BYTE PTR [rbx],bpl
   1400028e1:	mov    rbp,QWORD PTR [rsp+0x30]
   1400028e6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400028eb:	test   rdi,rdi
   1400028ee:	setne  al
   1400028f1:	add    rsp,0x20
   1400028f5:	pop    rdi
   1400028f6:	ret    
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	mov    QWORD PTR [rsp+0x20],rbx
   140002905:	push   rdi
   140002906:	sub    rsp,0x20
   14000290a:	movabs rax,0x7ffffffffffffffe
   140002914:	mov    rdi,rdx
   140002917:	mov    rbx,rcx
   14000291a:	cmp    rdx,rax
   14000291d:	jbe    0x14000292d
   14000291f:	lea    rcx,[rip+0x4f1a]        # 0x140007840
   140002926:	call   QWORD PTR [rip+0x470c]        # 0x140007038
   14000292c:	int3   
   14000292d:	mov    rax,QWORD PTR [rcx+0x18]
   140002931:	mov    QWORD PTR [rsp+0x38],rsi
   140002936:	xor    esi,esi
   140002938:	cmp    rax,rdx
   14000293b:	jae    0x140002948
   14000293d:	mov    r8,QWORD PTR [rcx+0x10]
   140002941:	call   0x140002430
   140002946:	jmp    0x1400029bc
   140002948:	test   r8b,r8b
   14000294b:	je     0x1400029a7
   14000294d:	cmp    rdx,0x8
   140002951:	jae    0x1400029a7
   140002953:	mov    QWORD PTR [rsp+0x40],r14
   140002958:	mov    r14,QWORD PTR [rcx+0x10]
   14000295c:	cmp    rdx,r14
   14000295f:	cmovb  r14,rdx
   140002963:	cmp    rax,0x8
   140002967:	jb     0x14000298f
   140002969:	mov    QWORD PTR [rsp+0x30],rbp
   14000296e:	mov    rbp,QWORD PTR [rcx]
   140002971:	test   r14,r14
   140002974:	je     0x140002982
   140002976:	lea    r8,[r14+r14*1]
   14000297a:	mov    rdx,rbp
   14000297d:	call   0x1400062f6
   140002982:	mov    rcx,rbp
   140002985:	call   0x14000615a
   14000298a:	mov    rbp,QWORD PTR [rsp+0x30]
   14000298f:	mov    QWORD PTR [rbx+0x10],r14
   140002993:	mov    QWORD PTR [rbx+0x18],0x7
   14000299b:	mov    WORD PTR [rbx+r14*2],si
   1400029a0:	mov    r14,QWORD PTR [rsp+0x40]
   1400029a5:	jmp    0x1400029bc
   1400029a7:	test   rdx,rdx
   1400029aa:	jne    0x1400029bc
   1400029ac:	mov    QWORD PTR [rcx+0x10],rsi
   1400029b0:	cmp    rax,0x8
   1400029b4:	jb     0x1400029b9
   1400029b6:	mov    rbx,QWORD PTR [rcx]
   1400029b9:	mov    WORD PTR [rbx],si
   1400029bc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400029c1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400029c6:	test   rdi,rdi
   1400029c9:	setne  al
   1400029cc:	add    rsp,0x20
   1400029d0:	pop    rdi
   1400029d1:	ret    
   1400029d2:	int3   
   1400029d3:	int3   
   1400029d4:	int3   
   1400029d5:	int3   
   1400029d6:	int3   
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029e5:	push   rdi
   1400029e6:	sub    rsp,0x20
   1400029ea:	cmp    r8d,0x1
   1400029ee:	mov    rdi,rdx
   1400029f1:	mov    rbx,rcx
   1400029f4:	sete   al
   1400029f7:	mov    BYTE PTR [rcx+0x81],0x0
   1400029fe:	mov    BYTE PTR [rcx+0x88],al
   140002a04:	call   QWORD PTR [rip+0x46be]        # 0x1400070c8
   140002a0a:	test   rdi,rdi
   140002a0d:	je     0x140002a2f
   140002a0f:	lea    rax,[rdi+0x10]
   140002a13:	mov    QWORD PTR [rbx+0x38],rdi
   140002a17:	mov    QWORD PTR [rbx+0x40],rdi
   140002a1b:	mov    QWORD PTR [rbx+0x18],rax
   140002a1f:	mov    QWORD PTR [rbx+0x20],rax
   140002a23:	lea    rax,[rdi+0x8]
   140002a27:	mov    QWORD PTR [rbx+0x50],rax
   140002a2b:	mov    QWORD PTR [rbx+0x58],rax
   140002a2f:	mov    QWORD PTR [rbx+0x90],rdi
   140002a36:	mov    eax,DWORD PTR [rip+0x89c4]        # 0x14000b400
   140002a3c:	mov    QWORD PTR [rbx+0x78],0x0
   140002a44:	mov    DWORD PTR [rbx+0x84],eax
   140002a4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a4f:	add    rsp,0x20
   140002a53:	pop    rdi
   140002a54:	ret    
   140002a55:	int3   
   140002a56:	int3   
   140002a57:	int3   
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	mov    QWORD PTR [rsp+0x8],rbx
   140002a65:	push   rdi
   140002a66:	sub    rsp,0x20
   140002a6a:	mov    rbx,rcx
   140002a6d:	mov    rcx,rdx
   140002a70:	mov    rdi,rdx
   140002a73:	call   QWORD PTR [rip+0x45df]        # 0x140007058
   140002a79:	test   al,al
   140002a7b:	je     0x140002a90
   140002a7d:	mov    QWORD PTR [rbx+0x78],0x0
   140002a85:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a8a:	add    rsp,0x20
   140002a8e:	pop    rdi
   140002a8f:	ret    
   140002a90:	mov    rcx,rbx
   140002a93:	mov    QWORD PTR [rbx+0x78],rdi
   140002a97:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a9c:	add    rsp,0x20
   140002aa0:	pop    rdi
   140002aa1:	rex.W jmp QWORD PTR [rip+0x4620]        # 0x1400070c8
   140002aa8:	int3   
   140002aa9:	int3   
   140002aaa:	int3   
   140002aab:	int3   
   140002aac:	int3   
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	test   rdx,rdx
   140002ab3:	je     0x140002aea
   140002ab5:	mov    rax,QWORD PTR [rcx+0x18]
   140002ab9:	cmp    rax,0x10
   140002abd:	jb     0x140002ac4
   140002abf:	mov    r8,QWORD PTR [rcx]
   140002ac2:	jmp    0x140002ac7
   140002ac4:	mov    r8,rcx
   140002ac7:	cmp    rdx,r8
   140002aca:	jb     0x140002aea
   140002acc:	cmp    rax,0x10
   140002ad0:	jb     0x140002ad7
   140002ad2:	mov    r8,QWORD PTR [rcx]
   140002ad5:	jmp    0x140002ada
   140002ad7:	mov    r8,rcx
   140002ada:	mov    rax,QWORD PTR [rcx+0x10]
   140002ade:	lea    rcx,[r8+rax*1]
   140002ae2:	cmp    rcx,rdx
   140002ae5:	jbe    0x140002aea
   140002ae7:	mov    al,0x1
   140002ae9:	ret    
   140002aea:	xor    al,al
   140002aec:	ret    
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	test   rdx,rdx
   140002af3:	je     0x140002b2a
   140002af5:	mov    rax,QWORD PTR [rcx+0x18]
   140002af9:	cmp    rax,0x8
   140002afd:	jb     0x140002b04
   140002aff:	mov    r8,QWORD PTR [rcx]
   140002b02:	jmp    0x140002b07
   140002b04:	mov    r8,rcx
   140002b07:	cmp    rdx,r8
   140002b0a:	jb     0x140002b2a
   140002b0c:	cmp    rax,0x8
   140002b10:	jb     0x140002b17
   140002b12:	mov    r8,QWORD PTR [rcx]
   140002b15:	jmp    0x140002b1a
   140002b17:	mov    r8,rcx
   140002b1a:	mov    rax,QWORD PTR [rcx+0x10]
   140002b1e:	lea    rcx,[r8+rax*2]
   140002b22:	cmp    rcx,rdx
   140002b25:	jbe    0x140002b2a
   140002b27:	mov    al,0x1
   140002b29:	ret    
   140002b2a:	xor    al,al
   140002b2c:	ret    
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	mov    rcx,QWORD PTR [rcx+0x90]
   140002b37:	test   rcx,rcx
   140002b3a:	je     0x140002b43
   140002b3c:	rex.W jmp QWORD PTR [rip+0x46a5]        # 0x1400071e8
   140002b43:	ret    
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	cmp    QWORD PTR [rcx+0x18],0x10
   140002b55:	jb     0x140002b5b
   140002b57:	mov    rax,QWORD PTR [rcx]
   140002b5a:	ret    
   140002b5b:	mov    rax,rcx
   140002b5e:	ret    
   140002b5f:	int3   
   140002b60:	cmp    QWORD PTR [rcx+0x18],0x10
   140002b65:	jb     0x140002b6b
   140002b67:	mov    rax,QWORD PTR [rcx]
   140002b6a:	ret    
   140002b6b:	mov    rax,rcx
   140002b6e:	ret    
   140002b6f:	int3   
   140002b70:	cmp    QWORD PTR [rcx+0x18],0x8
   140002b75:	jb     0x140002b7b
   140002b77:	mov    rax,QWORD PTR [rcx]
   140002b7a:	ret    
   140002b7b:	mov    rax,rcx
   140002b7e:	ret    
   140002b7f:	int3   
   140002b80:	cmp    QWORD PTR [rcx+0x18],0x8
   140002b85:	jb     0x140002b8b
   140002b87:	mov    rax,QWORD PTR [rcx]
   140002b8a:	ret    
   140002b8b:	mov    rax,rcx
   140002b8e:	ret    
   140002b8f:	int3   
   140002b90:	test   rcx,rcx
   140002b93:	jne    0x140002b98
   140002b95:	xor    eax,eax
   140002b97:	ret    
   140002b98:	sub    rcx,rdx
   140002b9b:	sar    rcx,1
   140002b9e:	mov    rax,rcx
   140002ba1:	ret    
   140002ba2:	int3   
   140002ba3:	int3   
   140002ba4:	int3   
   140002ba5:	int3   
   140002ba6:	int3   
   140002ba7:	int3   
   140002ba8:	int3   
   140002ba9:	int3   
   140002baa:	int3   
   140002bab:	int3   
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	mov    r9,QWORD PTR [rcx+0x18]
   140002bb4:	lea    rax,[rcx+0x80]
   140002bbb:	cmp    QWORD PTR [r9],rax
   140002bbe:	jne    0x140002bdc
   140002bc0:	mov    rdx,QWORD PTR [rcx+0x68]
   140002bc4:	mov    r8,QWORD PTR [rcx+0x70]
   140002bc8:	mov    QWORD PTR [r9],rdx
   140002bcb:	mov    rax,QWORD PTR [rcx+0x38]
   140002bcf:	sub    r8d,edx
   140002bd2:	mov    QWORD PTR [rax],rdx
   140002bd5:	mov    rax,QWORD PTR [rcx+0x50]
   140002bd9:	mov    DWORD PTR [rax],r8d
   140002bdc:	ret    
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	mov    r8,rcx
   140002be3:	mov    rcx,QWORD PTR [rcx+0x18]
   140002be7:	mov    rax,QWORD PTR [rcx]
   140002bea:	lea    r9,[r8+0x80]
   140002bf1:	cmp    rax,r9
   140002bf4:	je     0x140002c0c
   140002bf6:	mov    QWORD PTR [r8+0x68],rax
   140002bfa:	mov    rax,QWORD PTR [r8+0x50]
   140002bfe:	movsxd rdx,DWORD PTR [rax]
   140002c01:	mov    rax,QWORD PTR [r8+0x38]
   140002c05:	add    rdx,QWORD PTR [rax]
   140002c08:	mov    QWORD PTR [r8+0x70],rdx
   140002c0c:	mov    QWORD PTR [rcx],r9
   140002c0f:	mov    rax,QWORD PTR [r8+0x38]
   140002c13:	mov    ecx,r8d
   140002c16:	mov    QWORD PTR [rax],r9
   140002c19:	mov    rax,QWORD PTR [r8+0x50]
   140002c1d:	sub    ecx,r9d
   140002c20:	add    ecx,0x81
   140002c26:	mov    DWORD PTR [rax],ecx
   140002c28:	ret    
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	mov    QWORD PTR [rsp+0x10],rbx
   140002c35:	push   rdi
   140002c36:	sub    rsp,0x20
   140002c3a:	mov    rdi,r8
   140002c3d:	mov    rbx,rcx
   140002c40:	test   dl,dl
   140002c42:	je     0x140002c6d
   140002c44:	cmp    QWORD PTR [rcx+0x18],0x10
   140002c49:	jb     0x140002c6d
   140002c4b:	mov    QWORD PTR [rsp+0x30],rsi
   140002c50:	mov    rsi,QWORD PTR [rcx]
   140002c53:	test   r8,r8
   140002c56:	je     0x140002c60
   140002c58:	mov    rdx,rsi
   140002c5b:	call   0x1400062f6
   140002c60:	mov    rcx,rsi
   140002c63:	call   0x14000615a
   140002c68:	mov    rsi,QWORD PTR [rsp+0x30]
   140002c6d:	mov    QWORD PTR [rbx+0x18],0xf
   140002c75:	mov    QWORD PTR [rbx+0x10],rdi
   140002c79:	mov    BYTE PTR [rdi+rbx*1],0x0
   140002c7d:	mov    rbx,QWORD PTR [rsp+0x38]
   140002c82:	add    rsp,0x20
   140002c86:	pop    rdi
   140002c87:	ret    
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	mov    QWORD PTR [rsp+0x10],rbx
   140002c95:	push   rdi
   140002c96:	sub    rsp,0x20
   140002c9a:	mov    rdi,r8
   140002c9d:	mov    rbx,rcx
   140002ca0:	test   dl,dl
   140002ca2:	je     0x140002cd0
   140002ca4:	cmp    QWORD PTR [rcx+0x18],0x8
   140002ca9:	jb     0x140002cd0
   140002cab:	mov    QWORD PTR [rsp+0x30],rsi
   140002cb0:	mov    rsi,QWORD PTR [rcx]
   140002cb3:	test   r8,r8
   140002cb6:	je     0x140002cc3
   140002cb8:	add    r8,r8
   140002cbb:	mov    rdx,rsi
   140002cbe:	call   0x1400062f6
   140002cc3:	mov    rcx,rsi
   140002cc6:	call   0x14000615a
   140002ccb:	mov    rsi,QWORD PTR [rsp+0x30]
   140002cd0:	mov    QWORD PTR [rbx+0x18],0x7
   140002cd8:	mov    QWORD PTR [rbx+0x10],rdi
   140002cdc:	xor    eax,eax
   140002cde:	mov    WORD PTR [rbx+rdi*2],ax
   140002ce2:	mov    rbx,QWORD PTR [rsp+0x38]
   140002ce7:	add    rsp,0x20
   140002ceb:	pop    rdi
   140002cec:	ret    
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	mov    rcx,QWORD PTR [rcx+0x90]
   140002cf7:	test   rcx,rcx
   140002cfa:	je     0x140002d03
   140002cfc:	rex.W jmp QWORD PTR [rip+0x44ed]        # 0x1400071f0
   140002d03:	ret    
   140002d04:	int3   
   140002d05:	int3   
   140002d06:	int3   
   140002d07:	int3   
   140002d08:	int3   
   140002d09:	int3   
   140002d0a:	int3   
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	sub    rsp,0x28
   140002d14:	lea    rcx,[rip+0x4b25]        # 0x140007840
   140002d1b:	call   QWORD PTR [rip+0x4317]        # 0x140007038
   140002d21:	int3   
   140002d22:	int3   
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	sub    rsp,0x28
   140002d34:	lea    rcx,[rip+0x4b05]        # 0x140007840
   140002d3b:	call   QWORD PTR [rip+0x42f7]        # 0x140007038
   140002d41:	int3   
   140002d42:	int3   
   140002d43:	int3   
   140002d44:	int3   
   140002d45:	int3   
   140002d46:	int3   
   140002d47:	int3   
   140002d48:	int3   
   140002d49:	int3   
   140002d4a:	int3   
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	sub    rsp,0x28
   140002d54:	lea    rcx,[rip+0x4af5]        # 0x140007850
   140002d5b:	call   QWORD PTR [rip+0x42df]        # 0x140007040
   140002d61:	int3   
   140002d62:	int3   
   140002d63:	int3   
   140002d64:	int3   
   140002d65:	int3   
   140002d66:	int3   
   140002d67:	int3   
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	sub    rsp,0x28
   140002d74:	lea    rcx,[rip+0x4ad5]        # 0x140007850
   140002d7b:	call   QWORD PTR [rip+0x42bf]        # 0x140007040
   140002d81:	int3   
   140002d82:	int3   
   140002d83:	int3   
   140002d84:	int3   
   140002d85:	int3   
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	int3   
   140002d8b:	int3   
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	sub    rsp,0x28
   140002d94:	xor    eax,eax
   140002d96:	test   rdx,rdx
   140002d99:	je     0x140002db5
   140002d9b:	cmp    rdx,0xffffffffffffffff
   140002d9f:	ja     0x140002dae
   140002da1:	mov    rcx,rdx
   140002da4:	call   0x140006154
   140002da9:	test   rax,rax
   140002dac:	jne    0x140002db5
   140002dae:	call   QWORD PTR [rip+0x43d4]        # 0x140007188
   140002db4:	int3   
   140002db5:	add    rsp,0x28
   140002db9:	ret    
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	sub    rsp,0x28
   140002dc4:	xor    eax,eax
   140002dc6:	test   rdx,rdx
   140002dc9:	je     0x140002def
   140002dcb:	movabs rax,0x7fffffffffffffff
   140002dd5:	cmp    rdx,rax
   140002dd8:	ja     0x140002de8
   140002dda:	lea    rcx,[rdx+rdx*1]
   140002dde:	call   0x140006154
   140002de3:	test   rax,rax
   140002de6:	jne    0x140002def
   140002de8:	call   QWORD PTR [rip+0x439a]        # 0x140007188
   140002dee:	int3   
   140002def:	add    rsp,0x28
   140002df3:	ret    
   140002df4:	int3   
   140002df5:	int3   
   140002df6:	int3   
   140002df7:	int3   
   140002df8:	int3   
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	sub    rsp,0x28
   140002e04:	xor    eax,eax
   140002e06:	test   rdx,rdx
   140002e09:	je     0x140002e25
   140002e0b:	cmp    rdx,0xffffffffffffffff
   140002e0f:	ja     0x140002e1e
   140002e11:	mov    rcx,rdx
   140002e14:	call   0x140006154
   140002e19:	test   rax,rax
   140002e1c:	jne    0x140002e25
   140002e1e:	call   QWORD PTR [rip+0x4364]        # 0x140007188
   140002e24:	int3   
   140002e25:	add    rsp,0x28
   140002e29:	ret    
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	sub    rsp,0x28
   140002e34:	xor    eax,eax
   140002e36:	test   rdx,rdx
   140002e39:	je     0x140002e5f
   140002e3b:	movabs rax,0x7fffffffffffffff
   140002e45:	cmp    rdx,rax
   140002e48:	ja     0x140002e58
   140002e4a:	lea    rcx,[rdx+rdx*1]
   140002e4e:	call   0x140006154
   140002e53:	test   rax,rax
   140002e56:	jne    0x140002e5f
   140002e58:	call   QWORD PTR [rip+0x432a]        # 0x140007188
   140002e5e:	int3   
   140002e5f:	add    rsp,0x28
   140002e63:	ret    
   140002e64:	int3   
   140002e65:	int3   
   140002e66:	int3   
   140002e67:	int3   
   140002e68:	int3   
   140002e69:	int3   
   140002e6a:	int3   
   140002e6b:	int3   
   140002e6c:	int3   
   140002e6d:	int3   
   140002e6e:	int3   
   140002e6f:	int3   
   140002e70:	mov    QWORD PTR [rsp+0x10],rbx
   140002e75:	mov    QWORD PTR [rsp+0x18],rbp
   140002e7a:	push   rsi
   140002e7b:	sub    rsp,0x20
   140002e7f:	or     rax,0xffffffffffffffff
   140002e83:	movzx  ebp,r8b
   140002e87:	mov    r8,QWORD PTR [rcx+0x10]
   140002e8b:	sub    rax,r8
   140002e8e:	mov    rsi,rdx
   140002e91:	mov    rbx,rcx
   140002e94:	cmp    rax,rdx
   140002e97:	ja     0x140002ea7
   140002e99:	lea    rcx,[rip+0x49a0]        # 0x140007840
   140002ea0:	call   QWORD PTR [rip+0x4192]        # 0x140007038
   140002ea6:	int3   
   140002ea7:	mov    QWORD PTR [rsp+0x30],rdi
   140002eac:	test   rdx,rdx
   140002eaf:	je     0x140002f5a
   140002eb5:	lea    rdi,[r8+rdx*1]
   140002eb9:	cmp    rdi,0xfffffffffffffffe
   140002ebd:	jbe    0x140002ecd
   140002ebf:	lea    rcx,[rip+0x497a]        # 0x140007840
   140002ec6:	call   QWORD PTR [rip+0x416c]        # 0x140007038
   140002ecc:	int3   
   140002ecd:	mov    rax,QWORD PTR [rcx+0x18]
   140002ed1:	cmp    rax,rdi
   140002ed4:	jae    0x140002efd
   140002ed6:	mov    rdx,rdi
   140002ed9:	call   0x140002320
   140002ede:	test   rdi,rdi
   140002ee1:	je     0x140002f5a
   140002ee3:	mov    rcx,QWORD PTR [rbx+0x10]
   140002ee7:	cmp    rsi,0x1
   140002eeb:	jne    0x140002f25
   140002eed:	cmp    QWORD PTR [rbx+0x18],0x10
   140002ef2:	jb     0x140002f1c
   140002ef4:	mov    rax,QWORD PTR [rbx]
   140002ef7:	mov    BYTE PTR [rax+rcx*1],bpl
   140002efb:	jmp    0x140002f43
   140002efd:	test   rdi,rdi
   140002f00:	jne    0x140002ee3
   140002f02:	mov    QWORD PTR [rcx+0x10],rdi
   140002f06:	cmp    rax,0x10
   140002f0a:	jb     0x140002f14
   140002f0c:	mov    rax,QWORD PTR [rcx]
   140002f0f:	mov    BYTE PTR [rax],dil
   140002f12:	jmp    0x140002f5a
   140002f14:	mov    rax,rcx
   140002f17:	mov    BYTE PTR [rcx],0x0
   140002f1a:	jmp    0x140002f5a
   140002f1c:	mov    rax,rbx
   140002f1f:	mov    BYTE PTR [rbx+rcx*1],bpl
   140002f23:	jmp    0x140002f43
   140002f25:	cmp    QWORD PTR [rbx+0x18],0x10
   140002f2a:	jb     0x140002f31
   140002f2c:	mov    rax,QWORD PTR [rbx]
   140002f2f:	jmp    0x140002f34
   140002f31:	mov    rax,rbx
   140002f34:	movsx  edx,bpl
   140002f38:	add    rcx,rax
   140002f3b:	mov    r8,rsi
   140002f3e:	call   0x1400062fc
   140002f43:	cmp    QWORD PTR [rbx+0x18],0x10
   140002f48:	mov    QWORD PTR [rbx+0x10],rdi
   140002f4c:	jb     0x140002f53
   140002f4e:	mov    rax,QWORD PTR [rbx]
   140002f51:	jmp    0x140002f56
   140002f53:	mov    rax,rbx
   140002f56:	mov    BYTE PTR [rax+rdi*1],0x0
   140002f5a:	mov    rdi,QWORD PTR [rsp+0x30]
   140002f5f:	mov    rbp,QWORD PTR [rsp+0x40]
   140002f64:	mov    rax,rbx
   140002f67:	mov    rbx,QWORD PTR [rsp+0x38]
   140002f6c:	add    rsp,0x20
   140002f70:	pop    rsi
   140002f71:	ret    
   140002f72:	int3   
   140002f73:	int3   
   140002f74:	int3   
   140002f75:	int3   
   140002f76:	int3   
   140002f77:	int3   
   140002f78:	int3   
   140002f79:	int3   
   140002f7a:	int3   
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	mov    QWORD PTR [rsp+0x8],rbx
   140002f85:	mov    QWORD PTR [rsp+0x10],rbp
   140002f8a:	mov    QWORD PTR [rsp+0x18],rsi
   140002f8f:	push   rdi
   140002f90:	sub    rsp,0x20
   140002f94:	mov    rdi,QWORD PTR [rdx+0x10]
   140002f98:	mov    rbp,r8
   140002f9b:	mov    rsi,rdx
   140002f9e:	mov    rbx,rcx
   140002fa1:	cmp    rdi,r8
   140002fa4:	jae    0x140002fb4
   140002fa6:	lea    rcx,[rip+0x48a3]        # 0x140007850
   140002fad:	call   QWORD PTR [rip+0x408d]        # 0x140007040
   140002fb3:	int3   
   140002fb4:	sub    rdi,r8
   140002fb7:	cmp    r9,rdi
   140002fba:	cmovb  rdi,r9
   140002fbe:	cmp    rcx,rdx
   140002fc1:	jne    0x140002ffc
   140002fc3:	lea    rax,[rdi+r8*1]
   140002fc7:	cmp    QWORD PTR [rcx+0x10],rax
   140002fcb:	jae    0x140002fdb
   140002fcd:	lea    rcx,[rip+0x487c]        # 0x140007850
   140002fd4:	call   QWORD PTR [rip+0x4066]        # 0x140007040
   140002fda:	int3   
   140002fdb:	cmp    QWORD PTR [rcx+0x18],0x10
   140002fe0:	mov    QWORD PTR [rcx+0x10],rax
   140002fe4:	jb     0x140002fe9
   140002fe6:	mov    rcx,QWORD PTR [rcx]
   140002fe9:	mov    BYTE PTR [rcx+rax*1],0x0
   140002fed:	xor    edx,edx
   140002fef:	mov    rcx,rbx
   140002ff2:	call   0x140003860
   140002ff7:	jmp    0x14000308a
   140002ffc:	cmp    rdi,0xfffffffffffffffe
   140003000:	jbe    0x140003010
   140003002:	lea    rcx,[rip+0x4837]        # 0x140007840
   140003009:	call   QWORD PTR [rip+0x4029]        # 0x140007038
   14000300f:	int3   
   140003010:	mov    rax,QWORD PTR [rcx+0x18]
   140003014:	cmp    rax,rdi
   140003017:	jae    0x140003040
   140003019:	mov    r8,QWORD PTR [rcx+0x10]
   14000301d:	mov    rdx,rdi
   140003020:	call   0x140002320
   140003025:	test   rdi,rdi
   140003028:	je     0x14000308a
   14000302a:	cmp    QWORD PTR [rsi+0x18],0x10
   14000302f:	jb     0x140003034
   140003031:	mov    rsi,QWORD PTR [rsi]
   140003034:	cmp    QWORD PTR [rbx+0x18],0x10
   140003039:	jb     0x14000305f
   14000303b:	mov    rcx,QWORD PTR [rbx]
   14000303e:	jmp    0x140003062
   140003040:	test   rdi,rdi
   140003043:	jne    0x14000302a
   140003045:	mov    QWORD PTR [rcx+0x10],rdi
   140003049:	cmp    rax,0x10
   14000304d:	jb     0x140003057
   14000304f:	mov    rax,QWORD PTR [rcx]
   140003052:	mov    BYTE PTR [rax],dil
   140003055:	jmp    0x14000308a
   140003057:	mov    rax,rcx
   14000305a:	mov    BYTE PTR [rcx],0x0
   14000305d:	jmp    0x14000308a
   14000305f:	mov    rcx,rbx
   140003062:	test   rdi,rdi
   140003065:	je     0x140003073
   140003067:	lea    rdx,[rsi+rbp*1]
   14000306b:	mov    r8,rdi
   14000306e:	call   0x1400062f6
   140003073:	cmp    QWORD PTR [rbx+0x18],0x10
   140003078:	mov    QWORD PTR [rbx+0x10],rdi
   14000307c:	jb     0x140003083
   14000307e:	mov    rax,QWORD PTR [rbx]
   140003081:	jmp    0x140003086
   140003083:	mov    rax,rbx
   140003086:	mov    BYTE PTR [rax+rdi*1],0x0
   14000308a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000308f:	mov    rsi,QWORD PTR [rsp+0x40]
   140003094:	mov    rax,rbx
   140003097:	mov    rbx,QWORD PTR [rsp+0x30]
   14000309c:	add    rsp,0x20
   1400030a0:	pop    rdi
   1400030a1:	ret    
   1400030a2:	int3   
   1400030a3:	int3   
   1400030a4:	int3   
   1400030a5:	int3   
   1400030a6:	int3   
   1400030a7:	int3   
   1400030a8:	int3   
   1400030a9:	int3   
   1400030aa:	int3   
   1400030ab:	int3   
   1400030ac:	int3   
   1400030ad:	int3   
   1400030ae:	int3   
   1400030af:	int3   
   1400030b0:	cmp    BYTE PTR [rdx],0x0
   1400030b3:	jne    0x1400030bd
   1400030b5:	xor    r8d,r8d
   1400030b8:	jmp    0x1400030d0
   1400030bd:	or     r8,0xffffffffffffffff
   1400030c1:	inc    r8
   1400030c4:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400030c9:	jne    0x1400030c1
   1400030cb:	jmp    0x1400030d0
   1400030d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400030da:	push   rdi
   1400030db:	sub    rsp,0x20
   1400030df:	mov    rdi,r8
   1400030e2:	mov    rsi,rdx
   1400030e5:	mov    rbx,rcx
   1400030e8:	test   rdx,rdx
   1400030eb:	je     0x140003147
   1400030ed:	mov    rdx,QWORD PTR [rcx+0x18]
   1400030f1:	cmp    rdx,0x10
   1400030f5:	jb     0x1400030fc
   1400030f7:	mov    rax,QWORD PTR [rcx]
   1400030fa:	jmp    0x1400030ff
   1400030fc:	mov    rax,rcx
   1400030ff:	cmp    rsi,rax
   140003102:	jb     0x140003147
   140003104:	cmp    rdx,0x10
   140003108:	jb     0x14000310d
   14000310a:	mov    rcx,QWORD PTR [rcx]
   14000310d:	add    rcx,QWORD PTR [rbx+0x10]
   140003111:	cmp    rcx,rsi
   140003114:	jbe    0x140003147
   140003116:	cmp    rdx,0x10
   14000311a:	jb     0x140003121
   14000311c:	mov    rax,QWORD PTR [rbx]
   14000311f:	jmp    0x140003124
   140003121:	mov    rax,rbx
   140003124:	sub    rsi,rax
   140003127:	mov    r9,r8
   14000312a:	mov    rdx,rbx
   14000312d:	mov    r8,rsi
   140003130:	mov    rcx,rbx
   140003133:	mov    rbx,QWORD PTR [rsp+0x30]
   140003138:	mov    rsi,QWORD PTR [rsp+0x38]
   14000313d:	add    rsp,0x20
   140003141:	pop    rdi
   140003142:	jmp    0x140002f80
   140003147:	cmp    r8,0xfffffffffffffffe
   14000314b:	jbe    0x14000315b
   14000314d:	lea    rcx,[rip+0x46ec]        # 0x140007840
   140003154:	call   QWORD PTR [rip+0x3ede]        # 0x140007038
   14000315a:	int3   
   14000315b:	mov    rax,QWORD PTR [rbx+0x18]
   14000315f:	cmp    rax,r8
   140003162:	jae    0x140003184
   140003164:	mov    r8,QWORD PTR [rbx+0x10]
   140003168:	mov    rdx,rdi
   14000316b:	mov    rcx,rbx
   14000316e:	call   0x140002320
   140003173:	test   rdi,rdi
   140003176:	je     0x1400031ec
   140003178:	cmp    QWORD PTR [rbx+0x18],0x10
   14000317d:	jb     0x1400031c2
   14000317f:	mov    rcx,QWORD PTR [rbx]
   140003182:	jmp    0x1400031c5
   140003184:	test   r8,r8
   140003187:	jne    0x140003173
   140003189:	mov    QWORD PTR [rbx+0x10],r8
   14000318d:	cmp    rax,0x10
   140003191:	jb     0x1400031ac
   140003193:	mov    rax,QWORD PTR [rbx]
   140003196:	mov    BYTE PTR [rax],r8b
   140003199:	mov    rax,rbx
   14000319c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031a1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400031a6:	add    rsp,0x20
   1400031aa:	pop    rdi
   1400031ab:	ret    
   1400031ac:	mov    rax,rbx
   1400031af:	mov    BYTE PTR [rbx],0x0
   1400031b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400031bc:	add    rsp,0x20
   1400031c0:	pop    rdi
   1400031c1:	ret    
   1400031c2:	mov    rcx,rbx
   1400031c5:	test   rdi,rdi
   1400031c8:	je     0x1400031d5
   1400031ca:	mov    r8,rdi
   1400031cd:	mov    rdx,rsi
   1400031d0:	call   0x1400062f6
   1400031d5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400031da:	mov    QWORD PTR [rbx+0x10],rdi
   1400031de:	jb     0x1400031e5
   1400031e0:	mov    rax,QWORD PTR [rbx]
   1400031e3:	jmp    0x1400031e8
   1400031e5:	mov    rax,rbx
   1400031e8:	mov    BYTE PTR [rax+rdi*1],0x0
   1400031ec:	mov    rsi,QWORD PTR [rsp+0x38]
   1400031f1:	mov    rax,rbx
   1400031f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031f9:	add    rsp,0x20
   1400031fd:	pop    rdi
   1400031fe:	ret    
   1400031ff:	int3   
   140003200:	mov    QWORD PTR [rsp+0x8],rbx
   140003205:	mov    QWORD PTR [rsp+0x10],rsi
   14000320a:	push   rdi
   14000320b:	sub    rsp,0x20
   14000320f:	movzx  esi,r8b
   140003213:	mov    rdi,rdx
   140003216:	mov    rbx,rcx
   140003219:	cmp    rdx,0xffffffffffffffff
   14000321d:	jne    0x14000322d
   14000321f:	lea    rcx,[rip+0x461a]        # 0x140007840
   140003226:	call   QWORD PTR [rip+0x3e0c]        # 0x140007038
   14000322c:	int3   
   14000322d:	cmp    rdx,0xfffffffffffffffe
   140003231:	jbe    0x140003241
   140003233:	lea    rcx,[rip+0x4606]        # 0x140007840
   14000323a:	call   QWORD PTR [rip+0x3df8]        # 0x140007038
   140003240:	int3   
   140003241:	mov    rax,QWORD PTR [rcx+0x18]
   140003245:	cmp    rax,rdx
   140003248:	jae    0x140003271
   14000324a:	mov    r8,QWORD PTR [rcx+0x10]
   14000324e:	call   0x140002320
   140003253:	test   rdi,rdi
   140003256:	je     0x1400032eb
   14000325c:	cmp    rdi,0x1
   140003260:	jne    0x1400032b9
   140003262:	cmp    QWORD PTR [rbx+0x18],0x10
   140003267:	jb     0x1400032b1
   140003269:	mov    rax,QWORD PTR [rbx]
   14000326c:	mov    BYTE PTR [rax],sil
   14000326f:	jmp    0x1400032d4
   140003271:	test   rdx,rdx
   140003274:	jne    0x140003253
   140003276:	mov    QWORD PTR [rcx+0x10],rdx
   14000327a:	cmp    rax,0x10
   14000327e:	jb     0x140003298
   140003280:	mov    rax,QWORD PTR [rcx]
   140003283:	mov    BYTE PTR [rax],dl
   140003285:	mov    rax,rbx
   140003288:	mov    rbx,QWORD PTR [rsp+0x30]
   14000328d:	mov    rsi,QWORD PTR [rsp+0x38]
   140003292:	add    rsp,0x20
   140003296:	pop    rdi
   140003297:	ret    
   140003298:	mov    rax,rcx
   14000329b:	mov    BYTE PTR [rcx],0x0
   14000329e:	mov    rax,rbx
   1400032a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032a6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400032ab:	add    rsp,0x20
   1400032af:	pop    rdi
   1400032b0:	ret    
   1400032b1:	mov    rax,rbx
   1400032b4:	mov    BYTE PTR [rbx],sil
   1400032b7:	jmp    0x1400032d4
   1400032b9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400032be:	jb     0x1400032c5
   1400032c0:	mov    rcx,QWORD PTR [rbx]
   1400032c3:	jmp    0x1400032c8
   1400032c5:	mov    rcx,rbx
   1400032c8:	movsx  edx,sil
   1400032cc:	mov    r8,rdi
   1400032cf:	call   0x1400062fc
   1400032d4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400032d9:	mov    QWORD PTR [rbx+0x10],rdi
   1400032dd:	jb     0x1400032e4
   1400032df:	mov    rax,QWORD PTR [rbx]
   1400032e2:	jmp    0x1400032e7
   1400032e4:	mov    rax,rbx
   1400032e7:	mov    BYTE PTR [rax+rdi*1],0x0
   1400032eb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400032f0:	mov    rax,rbx
   1400032f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032f8:	add    rsp,0x20
   1400032fc:	pop    rdi
   1400032fd:	ret    
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	mov    QWORD PTR [rsp+0x8],rbx
   140003305:	mov    QWORD PTR [rsp+0x10],rbp
   14000330a:	mov    QWORD PTR [rsp+0x18],rsi
   14000330f:	push   rdi
   140003310:	sub    rsp,0x20
   140003314:	mov    rdi,QWORD PTR [rdx+0x10]
   140003318:	mov    rbp,r8
   14000331b:	mov    rsi,rdx
   14000331e:	mov    rbx,rcx
   140003321:	cmp    rdi,r8
   140003324:	jae    0x140003334
   140003326:	lea    rcx,[rip+0x4523]        # 0x140007850
   14000332d:	call   QWORD PTR [rip+0x3d0d]        # 0x140007040
   140003333:	int3   
   140003334:	sub    rdi,r8
   140003337:	cmp    r9,rdi
   14000333a:	cmovb  rdi,r9
   14000333e:	cmp    rcx,rdx
   140003341:	jne    0x140003383
   140003343:	lea    rcx,[rdi+r8*1]
   140003347:	cmp    QWORD PTR [rbx+0x10],rcx
   14000334b:	jae    0x14000335b
   14000334d:	lea    rcx,[rip+0x44fc]        # 0x140007850
   140003354:	call   QWORD PTR [rip+0x3ce6]        # 0x140007040
   14000335a:	int3   
   14000335b:	cmp    QWORD PTR [rbx+0x18],0x8
   140003360:	mov    QWORD PTR [rbx+0x10],rcx
   140003364:	jb     0x14000336b
   140003366:	mov    rdx,QWORD PTR [rbx]
   140003369:	jmp    0x14000336e
   14000336b:	mov    rdx,rbx
   14000336e:	xor    eax,eax
   140003370:	mov    WORD PTR [rdx+rcx*2],ax
   140003374:	xor    edx,edx
   140003376:	mov    rcx,rbx
   140003379:	call   0x140003970
   14000337e:	jmp    0x140003422
   140003383:	movabs rax,0x7ffffffffffffffe
   14000338d:	cmp    rdi,rax
   140003390:	jbe    0x1400033a0
   140003392:	lea    rcx,[rip+0x44a7]        # 0x140007840
   140003399:	call   QWORD PTR [rip+0x3c99]        # 0x140007038
   14000339f:	int3   
   1400033a0:	mov    rcx,QWORD PTR [rcx+0x18]
   1400033a4:	cmp    rcx,rdi
   1400033a7:	jae    0x1400033d3
   1400033a9:	mov    r8,QWORD PTR [rbx+0x10]
   1400033ad:	mov    rdx,rdi
   1400033b0:	mov    rcx,rbx
   1400033b3:	call   0x140002430
   1400033b8:	test   rdi,rdi
   1400033bb:	je     0x140003422
   1400033bd:	cmp    QWORD PTR [rsi+0x18],0x8
   1400033c2:	jb     0x1400033c7
   1400033c4:	mov    rsi,QWORD PTR [rsi]
   1400033c7:	cmp    QWORD PTR [rbx+0x18],0x8
   1400033cc:	jb     0x1400033f4
   1400033ce:	mov    rcx,QWORD PTR [rbx]
   1400033d1:	jmp    0x1400033f7
   1400033d3:	test   rdi,rdi
   1400033d6:	jne    0x1400033bd
   1400033d8:	xor    eax,eax
   1400033da:	mov    QWORD PTR [rbx+0x10],rax
   1400033de:	cmp    rcx,0x8
   1400033e2:	jb     0x1400033ec
   1400033e4:	mov    rcx,QWORD PTR [rbx]
   1400033e7:	mov    WORD PTR [rcx],ax
   1400033ea:	jmp    0x140003422
   1400033ec:	mov    rcx,rbx
   1400033ef:	mov    WORD PTR [rbx],ax
   1400033f2:	jmp    0x140003422
   1400033f4:	mov    rcx,rbx
   1400033f7:	test   rdi,rdi
   1400033fa:	je     0x140003409
   1400033fc:	lea    r8,[rdi+rdi*1]
   140003400:	lea    rdx,[rsi+rbp*2]
   140003404:	call   0x1400062f6
   140003409:	cmp    QWORD PTR [rbx+0x18],0x8
   14000340e:	mov    QWORD PTR [rbx+0x10],rdi
   140003412:	jb     0x140003419
   140003414:	mov    rcx,QWORD PTR [rbx]
   140003417:	jmp    0x14000341c
   140003419:	mov    rcx,rbx
   14000341c:	xor    eax,eax
   14000341e:	mov    WORD PTR [rcx+rdi*2],ax
   140003422:	mov    rbp,QWORD PTR [rsp+0x38]
   140003427:	mov    rsi,QWORD PTR [rsp+0x40]
   14000342c:	mov    rax,rbx
   14000342f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003434:	add    rsp,0x20
   140003438:	pop    rdi
   140003439:	ret    
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	rex push rbx
   140003442:	sub    rsp,0x20
   140003446:	mov    rax,rdx
   140003449:	movsx  edx,r8b
   14000344d:	mov    rbx,rcx
   140003450:	mov    r8,rax
   140003453:	call   0x1400062fc
   140003458:	mov    rax,rbx
   14000345b:	add    rsp,0x20
   14000345f:	pop    rbx
   140003460:	ret    
   140003461:	int3   
   140003462:	int3   
   140003463:	int3   
   140003464:	int3   
   140003465:	int3   
   140003466:	int3   
   140003467:	int3   
   140003468:	int3   
   140003469:	int3   
   14000346a:	int3   
   14000346b:	int3   
   14000346c:	int3   
   14000346d:	int3   
   14000346e:	int3   
   14000346f:	int3   
   140003470:	movzx  eax,BYTE PTR [rdx]
   140003473:	mov    BYTE PTR [rcx],al
   140003475:	ret    
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	movzx  eax,WORD PTR [rdx]
   140003483:	mov    WORD PTR [rcx],ax
   140003486:	ret    
   140003487:	int3   
   140003488:	int3   
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	int3   
   14000348d:	int3   
   14000348e:	int3   
   14000348f:	int3   
   140003490:	cmp    QWORD PTR [rcx+0x18],0x10
   140003495:	jb     0x1400034a1
   140003497:	mov    rax,QWORD PTR [rcx]
   14000349a:	mov    QWORD PTR [rdx],rax
   14000349d:	mov    rax,rdx
   1400034a0:	ret    
   1400034a1:	mov    QWORD PTR [rdx],rcx
   1400034a4:	mov    rax,rdx
   1400034a7:	ret    
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	int3   
   1400034ad:	int3   
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400034b5:	jb     0x1400034c1
   1400034b7:	mov    rax,QWORD PTR [rcx]
   1400034ba:	mov    QWORD PTR [rdx],rax
   1400034bd:	mov    rax,rdx
   1400034c0:	ret    
   1400034c1:	mov    QWORD PTR [rdx],rcx
   1400034c4:	mov    rax,rdx
   1400034c7:	ret    
   1400034c8:	int3   
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400034d5:	jb     0x1400034db
   1400034d7:	mov    rax,QWORD PTR [rcx]
   1400034da:	ret    
   1400034db:	mov    rax,rcx
   1400034de:	ret    
   1400034df:	int3   
   1400034e0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400034e5:	jb     0x1400034eb
   1400034e7:	mov    rax,QWORD PTR [rcx]
   1400034ea:	ret    
   1400034eb:	mov    rax,rcx
   1400034ee:	ret    
   1400034ef:	int3   
   1400034f0:	mov    rax,QWORD PTR [rcx+0x8]
   1400034f4:	ret    
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	mov    rax,QWORD PTR [rcx+0x8]
   140003504:	ret    
   140003505:	int3   
   140003506:	int3   
   140003507:	int3   
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	mov    QWORD PTR [rsp+0x8],rbx
   140003515:	mov    QWORD PTR [rsp+0x10],rsi
   14000351a:	push   rdi
   14000351b:	sub    rsp,0x20
   14000351f:	cmp    QWORD PTR [rcx+0x90],0x0
   140003527:	mov    rbx,rcx
   14000352a:	jne    0x140003532
   14000352c:	xor    edi,edi
   14000352e:	mov    esi,edi
   140003530:	jmp    0x140003555
   140003532:	call   0x140002550
   140003537:	mov    rcx,QWORD PTR [rbx+0x90]
   14000353e:	xor    edi,edi
   140003540:	test   al,al
   140003542:	mov    rsi,rbx
   140003545:	cmove  rsi,rdi
   140003549:	call   QWORD PTR [rip+0x3dd1]        # 0x140007320
   14000354f:	test   eax,eax
   140003551:	cmovne rsi,rdi
   140003555:	mov    rcx,rbx
   140003558:	mov    BYTE PTR [rbx+0x88],0x0
   14000355f:	mov    BYTE PTR [rbx+0x81],0x0
   140003566:	call   QWORD PTR [rip+0x3b5c]        # 0x1400070c8
   14000356c:	mov    QWORD PTR [rbx+0x90],rdi
   140003573:	mov    ecx,DWORD PTR [rip+0x7e87]        # 0x14000b400
   140003579:	mov    DWORD PTR [rbx+0x84],ecx
   14000357f:	mov    QWORD PTR [rbx+0x78],rdi
   140003583:	mov    rbx,QWORD PTR [rsp+0x30]
   140003588:	mov    rax,rsi
   14000358b:	mov    rsi,QWORD PTR [rsp+0x38]
   140003590:	add    rsp,0x20
   140003594:	pop    rdi
   140003595:	ret    
   140003596:	int3   
   140003597:	int3   
   140003598:	int3   
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	sub    rsp,0x38
   1400035a4:	cmp    WORD PTR [rdx],0x0
   1400035a8:	jne    0x1400035ae
   1400035aa:	xor    eax,eax
   1400035ac:	jmp    0x1400035bc
   1400035ae:	or     rax,0xffffffffffffffff
   1400035b2:	inc    rax
   1400035b5:	cmp    WORD PTR [rdx+rax*2],0x0
   1400035ba:	jne    0x1400035b2
   1400035bc:	mov    r8,QWORD PTR [rcx+0x10]
   1400035c0:	mov    r9,rdx
   1400035c3:	xor    edx,edx
   1400035c5:	mov    QWORD PTR [rsp+0x20],rax
   1400035ca:	call   0x1400035e0
   1400035cf:	add    rsp,0x38
   1400035d3:	ret    
   1400035d4:	int3   
   1400035d5:	int3   
   1400035d6:	int3   
   1400035d7:	int3   
   1400035d8:	int3   
   1400035d9:	int3   
   1400035da:	int3   
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	rex push rbx
   1400035e2:	sub    rsp,0x20
   1400035e6:	mov    rax,QWORD PTR [rcx+0x10]
   1400035ea:	mov    rbx,rdx
   1400035ed:	cmp    rax,rdx
   1400035f0:	jae    0x140003600
   1400035f2:	lea    rcx,[rip+0x4257]        # 0x140007850
   1400035f9:	call   QWORD PTR [rip+0x3a41]        # 0x140007040
   1400035ff:	int3   
   140003600:	sub    rax,rdx
   140003603:	mov    QWORD PTR [rsp+0x30],rdi
   140003608:	cmp    rax,r8
   14000360b:	cmovb  r8,rax
   14000360f:	cmp    QWORD PTR [rcx+0x18],0x8
   140003614:	jb     0x140003619
   140003616:	mov    rcx,QWORD PTR [rcx]
   140003619:	mov    r11,QWORD PTR [rsp+0x50]
   14000361e:	cmp    r8,r11
   140003621:	mov    rdx,r11
   140003624:	cmovb  rdx,r8
   140003628:	xor    r10d,r10d
   14000362b:	or     edi,0xffffffff
   14000362e:	test   rdx,rdx
   140003631:	je     0x14000364d
   140003633:	lea    rcx,[rcx+rbx*2]
   140003637:	movzx  eax,WORD PTR [r9]
   14000363b:	cmp    WORD PTR [rcx],ax
   14000363e:	jne    0x140003669
   140003640:	add    rcx,0x2
   140003644:	add    r9,0x2
   140003648:	dec    rdx
   14000364b:	jne    0x140003637
   14000364d:	mov    edx,r10d
   140003650:	movsxd rax,edx
   140003653:	test   edx,edx
   140003655:	jne    0x14000367d
   140003657:	cmp    r8,r11
   14000365a:	jae    0x140003676
   14000365c:	mov    eax,edi
   14000365e:	mov    rdi,QWORD PTR [rsp+0x30]
   140003663:	add    rsp,0x20
   140003667:	pop    rbx
   140003668:	ret    
   140003669:	cmp    WORD PTR [rcx],ax
   14000366c:	mov    edx,0x1
   140003671:	cmovb  edx,edi
   140003674:	jmp    0x140003650
   140003676:	setne  r10b
   14000367a:	mov    eax,r10d
   14000367d:	mov    rdi,QWORD PTR [rsp+0x30]
   140003682:	add    rsp,0x20
   140003686:	pop    rbx
   140003687:	ret    
   140003688:	int3   
   140003689:	int3   
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	mov    r9,rcx
   140003693:	test   r8,r8
   140003696:	jne    0x1400036a0
   140003698:	xor    eax,eax
   14000369a:	ret    
   14000369b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400036a0:	movzx  eax,WORD PTR [rdx]
   1400036a3:	cmp    WORD PTR [r9],ax
   1400036a7:	jne    0x1400036b6
   1400036a9:	add    r9,0x2
   1400036ad:	add    rdx,0x2
   1400036b1:	dec    r8
   1400036b4:	jmp    0x140003696
   1400036b6:	movzx  ecx,WORD PTR [rdx]
   1400036b9:	or     r8d,0xffffffff
   1400036bd:	mov    eax,0x1
   1400036c2:	cmp    WORD PTR [r9],cx
   1400036c6:	cmovb  eax,r8d
   1400036ca:	ret    
   1400036cb:	int3   
   1400036cc:	int3   
   1400036cd:	int3   
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	rex push rbx
   1400036d2:	sub    rsp,0x20
   1400036d6:	mov    rbx,rcx
   1400036d9:	test   r8,r8
   1400036dc:	je     0x1400036e3
   1400036de:	call   0x1400062f6
   1400036e3:	mov    rax,rbx
   1400036e6:	add    rsp,0x20
   1400036ea:	pop    rbx
   1400036eb:	ret    
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	rex push rbx
   1400036f2:	sub    rsp,0x20
   1400036f6:	mov    rbx,rcx
   1400036f9:	test   r8,r8
   1400036fc:	je     0x140003706
   1400036fe:	add    r8,r8
   140003701:	call   0x1400062f6
   140003706:	mov    rax,rbx
   140003709:	add    rsp,0x20
   14000370d:	pop    rbx
   14000370e:	ret    
   14000370f:	int3   
   140003710:	mov    rcx,rdx
   140003713:	jmp    0x14000615a
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    rcx,rdx
   140003723:	jmp    0x14000615a
   140003728:	int3   
   140003729:	int3   
   14000372a:	int3   
   14000372b:	int3   
   14000372c:	int3   
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	mov    rcx,rdx
   140003733:	jmp    0x14000615a
   140003738:	int3   
   140003739:	int3   
   14000373a:	int3   
   14000373b:	int3   
   14000373c:	int3   
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	mov    rcx,rdx
   140003743:	jmp    0x14000615a
   140003748:	int3   
   140003749:	int3   
   14000374a:	int3   
   14000374b:	int3   
   14000374c:	int3   
   14000374d:	int3   
   14000374e:	int3   
   14000374f:	int3   
   140003750:	mov    QWORD PTR [rsp+0x8],rbx
   140003755:	push   rdi
   140003756:	sub    rsp,0x20
   14000375a:	mov    ecx,r8d
   14000375d:	mov    edi,r8d
   140003760:	mov    rbx,rdx
   140003763:	call   QWORD PTR [rip+0x3917]        # 0x140007080
   140003769:	mov    DWORD PTR [rbx],edi
   14000376b:	test   rax,rax
   14000376e:	lea    rax,[rip+0x788b]        # 0x14000b000
   140003775:	jne    0x14000377e
   140003777:	lea    rax,[rip+0x7892]        # 0x14000b010
   14000377e:	mov    QWORD PTR [rbx+0x8],rax
   140003782:	mov    rax,rbx
   140003785:	mov    rbx,QWORD PTR [rsp+0x30]
   14000378a:	add    rsp,0x20
   14000378e:	pop    rdi
   14000378f:	ret    
   140003790:	mov    DWORD PTR [rdx],r8d
   140003793:	mov    QWORD PTR [rdx+0x8],rcx
   140003797:	mov    rax,rdx
   14000379a:	ret    
   14000379b:	int3   
   14000379c:	int3   
   14000379d:	int3   
   14000379e:	int3   
   14000379f:	int3   
   1400037a0:	xor    eax,eax
   1400037a2:	cmp    QWORD PTR [rcx+0x10],rax
   1400037a6:	sete   al
   1400037a9:	ret    
   1400037aa:	int3   
   1400037ab:	int3   
   1400037ac:	int3   
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400037b5:	jb     0x1400037c9
   1400037b7:	mov    rax,QWORD PTR [rcx+0x10]
   1400037bb:	mov    r8,QWORD PTR [rcx]
   1400037be:	lea    rcx,[r8+rax*2]
   1400037c2:	mov    rax,rdx
   1400037c5:	mov    QWORD PTR [rdx],rcx
   1400037c8:	ret    
   1400037c9:	mov    rax,QWORD PTR [rcx+0x10]
   1400037cd:	mov    r8,rcx
   1400037d0:	lea    rcx,[rcx+rax*2]
   1400037d4:	mov    rax,rdx
   1400037d7:	mov    QWORD PTR [rdx],rcx
   1400037da:	ret    
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	or     eax,0xffffffff
   1400037e3:	ret    
   1400037e4:	int3   
   1400037e5:	int3   
   1400037e6:	int3   
   1400037e7:	int3   
   1400037e8:	int3   
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	mov    edx,DWORD PTR [rdx]
   1400037f2:	cmp    DWORD PTR [rcx],edx
   1400037f4:	sete   al
   1400037f7:	ret    
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	cmp    rcx,QWORD PTR [rdx+0x8]
   140003804:	jne    0x14000380e
   140003806:	cmp    DWORD PTR [rdx],r8d
   140003809:	jne    0x14000380e
   14000380b:	mov    al,0x1
   14000380d:	ret    
   14000380e:	xor    al,al
   140003810:	ret    
   140003811:	int3   
   140003812:	int3   
   140003813:	int3   
   140003814:	int3   
   140003815:	int3   
   140003816:	int3   
   140003817:	int3   
   140003818:	int3   
   140003819:	int3   
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	rex push rbx
   140003822:	sub    rsp,0x30
   140003826:	mov    rax,QWORD PTR [rcx]
   140003829:	mov    rbx,r8
   14000382c:	mov    r8d,edx
   14000382f:	lea    rdx,[rsp+0x20]
   140003834:	call   QWORD PTR [rax+0x18]
   140003837:	mov    rcx,QWORD PTR [rbx+0x8]
   14000383b:	cmp    QWORD PTR [rax+0x8],rcx
   14000383f:	jne    0x14000384f
   140003841:	mov    ecx,DWORD PTR [rbx]
   140003843:	cmp    DWORD PTR [rax],ecx
   140003845:	jne    0x14000384f
   140003847:	mov    al,0x1
   140003849:	add    rsp,0x30
   14000384d:	pop    rbx
   14000384e:	ret    
   14000384f:	xor    al,al
   140003851:	add    rsp,0x30
   140003855:	pop    rbx
   140003856:	ret    
   140003857:	int3   
   140003858:	int3   
   140003859:	int3   
   14000385a:	int3   
   14000385b:	int3   
   14000385c:	int3   
   14000385d:	int3   
   14000385e:	int3   
   14000385f:	int3   
   140003860:	mov    QWORD PTR [rsp+0x8],rbx
   140003865:	push   rdi
   140003866:	sub    rsp,0x20
   14000386a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000386e:	mov    rbx,rcx
   140003871:	cmp    rdi,rdx
   140003874:	jae    0x140003884
   140003876:	lea    rcx,[rip+0x3fd3]        # 0x140007850
   14000387d:	call   QWORD PTR [rip+0x37bd]        # 0x140007040
   140003883:	int3   
   140003884:	mov    rax,rdi
   140003887:	sub    rax,rdx
   14000388a:	cmp    rax,r8
   14000388d:	ja     0x1400038c4
   14000388f:	cmp    QWORD PTR [rcx+0x18],0x10
   140003894:	mov    QWORD PTR [rcx+0x10],rdx
   140003898:	jb     0x1400038af
   14000389a:	mov    rax,QWORD PTR [rcx]
   14000389d:	mov    BYTE PTR [rax+rdx*1],0x0
   1400038a1:	mov    rax,rbx
   1400038a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038a9:	add    rsp,0x20
   1400038ad:	pop    rdi
   1400038ae:	ret    
   1400038af:	mov    rax,rcx
   1400038b2:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400038b6:	mov    rax,rbx
   1400038b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038be:	add    rsp,0x20
   1400038c2:	pop    rdi
   1400038c3:	ret    
   1400038c4:	test   r8,r8
   1400038c7:	je     0x14000391b
   1400038c9:	cmp    QWORD PTR [rcx+0x18],0x10
   1400038ce:	jb     0x1400038d5
   1400038d0:	mov    rax,QWORD PTR [rcx]
   1400038d3:	jmp    0x1400038d8
   1400038d5:	mov    rax,rcx
   1400038d8:	sub    rdi,r8
   1400038db:	lea    rcx,[rax+rdx*1]
   1400038df:	mov    rax,rdi
   1400038e2:	sub    rax,rdx
   1400038e5:	je     0x1400038f4
   1400038e7:	lea    rdx,[rcx+r8*1]
   1400038eb:	mov    r8,rax
   1400038ee:	call   QWORD PTR [rip+0x390c]        # 0x140007200
   1400038f4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400038f9:	mov    QWORD PTR [rbx+0x10],rdi
   1400038fd:	jb     0x140003914
   1400038ff:	mov    rax,QWORD PTR [rbx]
   140003902:	mov    BYTE PTR [rax+rdi*1],0x0
   140003906:	mov    rax,rbx
   140003909:	mov    rbx,QWORD PTR [rsp+0x30]
   14000390e:	add    rsp,0x20
   140003912:	pop    rdi
   140003913:	ret    
   140003914:	mov    rax,rbx
   140003917:	mov    BYTE PTR [rbx+rdi*1],0x0
   14000391b:	mov    rax,rbx
   14000391e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003923:	add    rsp,0x20
   140003927:	pop    rdi
   140003928:	ret    
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	sub    rsp,0x28
   140003934:	cmp    QWORD PTR [rcx+0x10],rdx
   140003938:	jae    0x140003948
   14000393a:	lea    rcx,[rip+0x3f0f]        # 0x140007850
   140003941:	call   QWORD PTR [rip+0x36f9]        # 0x140007040
   140003947:	int3   
   140003948:	cmp    QWORD PTR [rcx+0x18],0x10
   14000394d:	mov    QWORD PTR [rcx+0x10],rdx
   140003951:	jb     0x140003962
   140003953:	mov    rax,QWORD PTR [rcx]
   140003956:	mov    BYTE PTR [rax+rdx*1],0x0
   14000395a:	mov    rax,rcx
   14000395d:	add    rsp,0x28
   140003961:	ret    
   140003962:	mov    rax,rcx
   140003965:	mov    BYTE PTR [rcx+rdx*1],0x0
   140003969:	add    rsp,0x28
   14000396d:	ret    
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x8],rbx
   140003975:	push   rdi
   140003976:	sub    rsp,0x20
   14000397a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000397e:	mov    r9,r8
   140003981:	mov    rbx,rcx
   140003984:	cmp    rdi,rdx
   140003987:	jae    0x140003997
   140003989:	lea    rcx,[rip+0x3ec0]        # 0x140007850
   140003990:	call   QWORD PTR [rip+0x36aa]        # 0x140007040
   140003996:	int3   
   140003997:	mov    rax,rdi
   14000399a:	sub    rax,rdx
   14000399d:	cmp    rax,r8
   1400039a0:	ja     0x1400039c4
   1400039a2:	cmp    QWORD PTR [rcx+0x18],0x8
   1400039a7:	mov    QWORD PTR [rcx+0x10],rdx
   1400039ab:	jb     0x1400039b0
   1400039ad:	mov    rcx,QWORD PTR [rcx]
   1400039b0:	xor    eax,eax
   1400039b2:	mov    WORD PTR [rcx+rdx*2],ax
   1400039b6:	mov    rax,rbx
   1400039b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039be:	add    rsp,0x20
   1400039c2:	pop    rdi
   1400039c3:	ret    
   1400039c4:	test   r8,r8
   1400039c7:	je     0x140003a0d
   1400039c9:	cmp    QWORD PTR [rcx+0x18],0x8
   1400039ce:	jb     0x1400039d5
   1400039d0:	mov    rax,QWORD PTR [rcx]
   1400039d3:	jmp    0x1400039d8
   1400039d5:	mov    rax,rcx
   1400039d8:	sub    rdi,r8
   1400039db:	lea    rcx,[rax+rdx*2]
   1400039df:	mov    r8,rdi
   1400039e2:	sub    r8,rdx
   1400039e5:	je     0x1400039f4
   1400039e7:	lea    rdx,[rcx+r9*2]
   1400039eb:	add    r8,r8
   1400039ee:	call   QWORD PTR [rip+0x380c]        # 0x140007200
   1400039f4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400039f9:	mov    QWORD PTR [rbx+0x10],rdi
   1400039fd:	jb     0x140003a04
   1400039ff:	mov    rcx,QWORD PTR [rbx]
   140003a02:	jmp    0x140003a07
   140003a04:	mov    rcx,rbx
   140003a07:	xor    eax,eax
   140003a09:	mov    WORD PTR [rcx+rdi*2],ax
   140003a0d:	mov    rax,rbx
   140003a10:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a15:	add    rsp,0x20
   140003a19:	pop    rdi
   140003a1a:	ret    
   140003a1b:	int3   
   140003a1c:	int3   
   140003a1d:	int3   
   140003a1e:	int3   
   140003a1f:	int3   
   140003a20:	sub    rsp,0x28
   140003a24:	cmp    QWORD PTR [rcx+0x10],rdx
   140003a28:	jae    0x140003a38
   140003a2a:	lea    rcx,[rip+0x3e1f]        # 0x140007850
   140003a31:	call   QWORD PTR [rip+0x3609]        # 0x140007040
   140003a37:	int3   
   140003a38:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a3d:	mov    QWORD PTR [rcx+0x10],rdx
   140003a41:	jb     0x140003a56
   140003a43:	mov    rax,QWORD PTR [rcx]
   140003a46:	xor    r8d,r8d
   140003a49:	mov    WORD PTR [rax+rdx*2],r8w
   140003a4e:	mov    rax,rcx
   140003a51:	add    rsp,0x28
   140003a55:	ret    
   140003a56:	xor    r8d,r8d
   140003a59:	mov    rax,rcx
   140003a5c:	mov    WORD PTR [rcx+rdx*2],r8w
   140003a61:	add    rsp,0x28
   140003a65:	ret    
   140003a66:	int3   
   140003a67:	int3   
   140003a68:	int3   
   140003a69:	int3   
   140003a6a:	int3   
   140003a6b:	int3   
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	lea    rax,[rip+0x7589]        # 0x14000b000
   140003a77:	ret    
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	mov    QWORD PTR [rsp+0x8],rbx
   140003a85:	push   rdi
   140003a86:	sub    rsp,0x20
   140003a8a:	mov    rbx,rcx
   140003a8d:	mov    rcx,rdx
   140003a90:	call   0x1400014f0
   140003a95:	mov    rcx,rax
   140003a98:	mov    rdi,rax
   140003a9b:	call   QWORD PTR [rip+0x35b7]        # 0x140007058
   140003aa1:	test   al,al
   140003aa3:	je     0x140003ab8
   140003aa5:	mov    QWORD PTR [rbx+0x78],0x0
   140003aad:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ab2:	add    rsp,0x20
   140003ab6:	pop    rdi
   140003ab7:	ret    
   140003ab8:	mov    rcx,rbx
   140003abb:	mov    QWORD PTR [rbx+0x78],rdi
   140003abf:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ac4:	add    rsp,0x20
   140003ac8:	pop    rdi
   140003ac9:	rex.W jmp QWORD PTR [rip+0x35f8]        # 0x1400070c8
   140003ad0:	cmp    BYTE PTR [rcx],0x0
   140003ad3:	jne    0x140003ad8
   140003ad5:	xor    eax,eax
   140003ad7:	ret    
   140003ad8:	or     rax,0xffffffffffffffff
   140003adc:	nop    DWORD PTR [rax+0x0]
   140003ae0:	inc    rax
   140003ae3:	cmp    BYTE PTR [rcx+rax*1],0x0
   140003ae7:	jne    0x140003ae0
   140003ae9:	ret    
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	cmp    WORD PTR [rcx],0x0
   140003af4:	jne    0x140003af9
   140003af6:	xor    eax,eax
   140003af8:	ret    
   140003af9:	or     rax,0xffffffffffffffff
   140003afd:	nop    DWORD PTR [rax]
   140003b00:	inc    rax
   140003b03:	cmp    WORD PTR [rcx+rax*2],0x0
   140003b08:	jne    0x140003b00
   140003b0a:	ret    
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	or     rax,0xffffffffffffffff
   140003b14:	ret    
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	movabs rax,0x7fffffffffffffff
   140003b2a:	ret    
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	or     rax,0xffffffffffffffff
   140003b34:	ret    
   140003b35:	int3   
   140003b36:	int3   
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	movabs rax,0x7fffffffffffffff
   140003b4a:	ret    
   140003b4b:	int3   
   140003b4c:	int3   
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	or     rax,0xffffffffffffffff
   140003b54:	ret    
   140003b55:	int3   
   140003b56:	int3   
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	movabs rax,0x7fffffffffffffff
   140003b6a:	ret    
   140003b6b:	int3   
   140003b6c:	int3   
   140003b6d:	int3   
   140003b6e:	int3   
   140003b6f:	int3   
   140003b70:	mov    rax,0xfffffffffffffffe
   140003b77:	ret    
   140003b78:	int3   
   140003b79:	int3   
   140003b7a:	int3   
   140003b7b:	int3   
   140003b7c:	int3   
   140003b7d:	int3   
   140003b7e:	int3   
   140003b7f:	int3   
   140003b80:	movabs rax,0x7ffffffffffffffe
   140003b8a:	ret    
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	mov    QWORD PTR [rsp+0x8],rbx
   140003b95:	push   rdi
   140003b96:	sub    rsp,0x30
   140003b9a:	xor    ebx,ebx
   140003b9c:	mov    ecx,r8d
   140003b9f:	mov    rdi,rdx
   140003ba2:	mov    DWORD PTR [rsp+0x20],ebx
   140003ba6:	call   QWORD PTR [rip+0x34d4]        # 0x140007080
   140003bac:	mov    QWORD PTR [rdi+0x18],0xf
   140003bb4:	test   rax,rax
   140003bb7:	mov    QWORD PTR [rdi+0x10],rbx
   140003bbb:	lea    rdx,[rip+0x3ace]        # 0x140007690
   140003bc2:	cmovne rdx,rax
   140003bc6:	mov    BYTE PTR [rdi],bl
   140003bc8:	cmp    BYTE PTR [rdx],bl
   140003bca:	je     0x140003bd9
   140003bcc:	or     rbx,0xffffffffffffffff
   140003bd0:	inc    rbx
   140003bd3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140003bd7:	jne    0x140003bd0
   140003bd9:	mov    r8,rbx
   140003bdc:	mov    rcx,rdi
   140003bdf:	call   0x1400030d0
   140003be4:	mov    rbx,QWORD PTR [rsp+0x40]
   140003be9:	mov    rax,rdi
   140003bec:	add    rsp,0x30
   140003bf0:	pop    rdi
   140003bf1:	ret    
   140003bf2:	int3   
   140003bf3:	int3   
   140003bf4:	int3   
   140003bf5:	int3   
   140003bf6:	int3   
   140003bf7:	int3   
   140003bf8:	int3   
   140003bf9:	int3   
   140003bfa:	int3   
   140003bfb:	int3   
   140003bfc:	int3   
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	rex push rbx
   140003c02:	sub    rsp,0x30
   140003c06:	xor    eax,eax
   140003c08:	mov    rbx,rdx
   140003c0b:	mov    DWORD PTR [rsp+0x20],eax
   140003c0f:	cmp    r8d,0x1
   140003c13:	jne    0x140003c3f
   140003c15:	mov    QWORD PTR [rdx+0x18],0xf
   140003c1d:	mov    QWORD PTR [rdx+0x10],rax
   140003c21:	mov    BYTE PTR [rdx],al
   140003c23:	lea    rdx,[rip+0x3abe]        # 0x1400076e8
   140003c2a:	lea    r8d,[rax+0x15]
   140003c2e:	mov    rcx,rbx
   140003c31:	call   0x1400030d0
   140003c36:	mov    rax,rbx
   140003c39:	add    rsp,0x30
   140003c3d:	pop    rbx
   140003c3e:	ret    
   140003c3f:	call   0x140003b90
   140003c44:	mov    rax,rbx
   140003c47:	add    rsp,0x30
   140003c4b:	pop    rbx
   140003c4c:	ret    
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	mov    QWORD PTR [rsp+0x8],rbx
   140003c55:	push   rdi
   140003c56:	sub    rsp,0x30
   140003c5a:	xor    ebx,ebx
   140003c5c:	mov    ecx,r8d
   140003c5f:	mov    rdi,rdx
   140003c62:	mov    DWORD PTR [rsp+0x20],ebx
   140003c66:	call   QWORD PTR [rip+0x341c]        # 0x140007088
   140003c6c:	mov    QWORD PTR [rdi+0x18],0xf
   140003c74:	test   rax,rax
   140003c77:	mov    QWORD PTR [rdi+0x10],rbx
   140003c7b:	lea    rdx,[rip+0x3a0e]        # 0x140007690
   140003c82:	cmovne rdx,rax
   140003c86:	mov    BYTE PTR [rdi],bl
   140003c88:	cmp    BYTE PTR [rdx],bl
   140003c8a:	je     0x140003c99
   140003c8c:	or     rbx,0xffffffffffffffff
   140003c90:	inc    rbx
   140003c93:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140003c97:	jne    0x140003c90
   140003c99:	mov    r8,rbx
   140003c9c:	mov    rcx,rdi
   140003c9f:	call   0x1400030d0
   140003ca4:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ca9:	mov    rax,rdi
   140003cac:	add    rsp,0x30
   140003cb0:	pop    rdi
   140003cb1:	ret    
   140003cb2:	int3   
   140003cb3:	int3   
   140003cb4:	int3   
   140003cb5:	int3   
   140003cb6:	int3   
   140003cb7:	int3   
   140003cb8:	int3   
   140003cb9:	int3   
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	test   r8,r8
   140003cc3:	jne    0x140003cc9
   140003cc5:	mov    rax,rcx
   140003cc8:	ret    
   140003cc9:	rex.W jmp QWORD PTR [rip+0x3530]        # 0x140007200
   140003cd0:	test   r8,r8
   140003cd3:	jne    0x140003cd9
   140003cd5:	mov    rax,rcx
   140003cd8:	ret    
   140003cd9:	add    r8,r8
   140003cdc:	rex.W jmp QWORD PTR [rip+0x351d]        # 0x140007200
   140003ce3:	int3   
   140003ce4:	int3   
   140003ce5:	int3   
   140003ce6:	int3   
   140003ce7:	int3   
   140003ce8:	int3   
   140003ce9:	int3   
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	lea    rax,[rip+0x3991]        # 0x140007688
   140003cf7:	ret    
   140003cf8:	int3   
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	int3   
   140003cff:	int3   
   140003d00:	lea    rax,[rip+0x39d1]        # 0x1400076d8
   140003d07:	ret    
   140003d08:	int3   
   140003d09:	int3   
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	int3   
   140003d0d:	int3   
   140003d0e:	int3   
   140003d0f:	int3   
   140003d10:	lea    rax,[rip+0x3a21]        # 0x140007738
   140003d17:	ret    
   140003d18:	int3   
   140003d19:	int3   
   140003d1a:	int3   
   140003d1b:	int3   
   140003d1c:	int3   
   140003d1d:	int3   
   140003d1e:	int3   
   140003d1f:	int3   
   140003d20:	xor    eax,eax
   140003d22:	cmp    DWORD PTR [rcx],0xffffffff
   140003d25:	cmovne eax,DWORD PTR [rcx]
   140003d28:	ret    
   140003d29:	int3   
   140003d2a:	int3   
   140003d2b:	int3   
   140003d2c:	int3   
   140003d2d:	int3   
   140003d2e:	int3   
   140003d2f:	int3   
   140003d30:	rex push rdi
   140003d32:	sub    rsp,0x30
   140003d36:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003d3f:	mov    QWORD PTR [rsp+0x48],rbx
   140003d44:	mov    eax,r8d
   140003d47:	mov    r10,rdx
   140003d4a:	mov    rbx,rcx
   140003d4d:	cmp    QWORD PTR [rcx+0x90],0x0
   140003d55:	jne    0x140003e2e
   140003d5b:	mov    r8d,r9d
   140003d5e:	mov    edx,eax
   140003d60:	mov    rcx,r10
   140003d63:	call   QWORD PTR [rip+0x3397]        # 0x140007100
   140003d69:	mov    rdi,rax
   140003d6c:	test   rax,rax
   140003d6f:	je     0x140003e2e
   140003d75:	mov    BYTE PTR [rbx+0x88],0x1
   140003d7c:	mov    BYTE PTR [rbx+0x81],0x0
   140003d83:	mov    rcx,rbx
   140003d86:	call   QWORD PTR [rip+0x333c]        # 0x1400070c8
   140003d8c:	lea    rcx,[rdi+0x10]
   140003d90:	lea    rdx,[rdi+0x8]
   140003d94:	mov    QWORD PTR [rbx+0x18],rcx
   140003d98:	mov    QWORD PTR [rbx+0x20],rcx
   140003d9c:	mov    QWORD PTR [rbx+0x38],rdi
   140003da0:	mov    QWORD PTR [rbx+0x40],rdi
   140003da4:	mov    QWORD PTR [rbx+0x50],rdx
   140003da8:	mov    QWORD PTR [rbx+0x58],rdx
   140003dac:	mov    QWORD PTR [rbx+0x90],rdi
   140003db3:	mov    eax,DWORD PTR [rip+0x7647]        # 0x14000b400
   140003db9:	mov    DWORD PTR [rbx+0x84],eax
   140003dbf:	mov    QWORD PTR [rbx+0x78],0x0
   140003dc7:	lea    rdx,[rsp+0x40]
   140003dcc:	mov    rcx,rbx
   140003dcf:	call   QWORD PTR [rip+0x32d3]        # 0x1400070a8
   140003dd5:	nop
   140003dd6:	mov    rcx,rax
   140003dd9:	call   0x1400014f0
   140003dde:	mov    rdi,rax
   140003de1:	mov    rcx,rax
   140003de4:	call   QWORD PTR [rip+0x326e]        # 0x140007058
   140003dea:	test   al,al
   140003dec:	je     0x140003df8
   140003dee:	mov    QWORD PTR [rbx+0x78],0x0
   140003df6:	jmp    0x140003e06
   140003df8:	mov    QWORD PTR [rbx+0x78],rdi
   140003dfc:	mov    rcx,rbx
   140003dff:	call   QWORD PTR [rip+0x32c3]        # 0x1400070c8
   140003e05:	nop
   140003e06:	mov    rcx,QWORD PTR [rsp+0x40]
   140003e0b:	test   rcx,rcx
   140003e0e:	je     0x140003e29
   140003e10:	mov    rax,QWORD PTR [rcx]
   140003e13:	call   QWORD PTR [rax+0x10]
   140003e16:	test   rax,rax
   140003e19:	je     0x140003e29
   140003e1b:	mov    r8,QWORD PTR [rax]
   140003e1e:	mov    edx,0x1
   140003e23:	mov    rcx,rax
   140003e26:	call   QWORD PTR [r8]
   140003e29:	mov    rax,rbx
   140003e2c:	jmp    0x140003e30
   140003e2e:	xor    eax,eax
   140003e30:	mov    rbx,QWORD PTR [rsp+0x48]
   140003e35:	add    rsp,0x30
   140003e39:	pop    rdi
   140003e3a:	ret    
   140003e3b:	int3   
   140003e3c:	int3   
   140003e3d:	int3   
   140003e3e:	int3   
   140003e3f:	int3   
   140003e40:	mov    rax,rsp
   140003e43:	push   rbp
   140003e44:	push   rdi
   140003e45:	push   r12
   140003e47:	push   r14
   140003e49:	push   r15
   140003e4b:	mov    rbp,rsp
   140003e4e:	sub    rsp,0x70
   140003e52:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   140003e5a:	mov    QWORD PTR [rax+0x8],rbx
   140003e5e:	mov    QWORD PTR [rax+0x10],rsi
   140003e62:	mov    r14d,edx
   140003e65:	mov    rdi,rcx
   140003e68:	cmp    edx,0xffffffff
   140003e6b:	jne    0x140003e74
   140003e6d:	xor    eax,eax
   140003e6f:	jmp    0x140004102
   140003e74:	mov    rax,QWORD PTR [rcx+0x40]
   140003e78:	mov    rcx,QWORD PTR [rax]
   140003e7b:	test   rcx,rcx
   140003e7e:	je     0x140003eaf
   140003e80:	mov    rdx,QWORD PTR [rdi+0x58]
   140003e84:	movsxd r8,DWORD PTR [rdx]
   140003e87:	lea    rax,[rcx+r8*1]
   140003e8b:	cmp    rcx,rax
   140003e8e:	jae    0x140003eaf
   140003e90:	lea    eax,[r8-0x1]
   140003e94:	mov    DWORD PTR [rdx],eax
   140003e96:	mov    rcx,QWORD PTR [rdi+0x40]
   140003e9a:	mov    rdx,QWORD PTR [rcx]
   140003e9d:	lea    rax,[rdx+0x1]
   140003ea1:	mov    QWORD PTR [rcx],rax
   140003ea4:	mov    BYTE PTR [rdx],r14b
   140003ea7:	mov    eax,r14d
   140003eaa:	jmp    0x140004102
   140003eaf:	cmp    QWORD PTR [rdi+0x90],0x0
   140003eb7:	jne    0x140003ec2
   140003eb9:	or     rax,0xffffffffffffffff
   140003ebd:	jmp    0x140004102
   140003ec2:	mov    rax,QWORD PTR [rdi+0x18]
   140003ec6:	mov    rcx,QWORD PTR [rax]
   140003ec9:	lea    rax,[rdi+0x80]
   140003ed0:	cmp    rcx,rax
   140003ed3:	jne    0x140003ee9
   140003ed5:	mov    rdx,QWORD PTR [rdi+0x68]
   140003ed9:	mov    r9,QWORD PTR [rdi+0x70]
   140003edd:	mov    r8,rdx
   140003ee0:	mov    rcx,rdi
   140003ee3:	call   QWORD PTR [rip+0x31d7]        # 0x1400070c0
   140003ee9:	cmp    QWORD PTR [rdi+0x78],0x0
   140003eee:	jne    0x140003f10
   140003ef0:	movsx  ecx,r14b
   140003ef4:	mov    rdx,QWORD PTR [rdi+0x90]
   140003efb:	call   QWORD PTR [rip+0x32b7]        # 0x1400071b8
   140003f01:	or     rsi,0xffffffffffffffff
   140003f05:	cmp    eax,esi
   140003f07:	cmovne esi,r14d
   140003f0b:	jmp    0x140004100
   140003f10:	mov    BYTE PTR [rbp-0x30],r14b
   140003f14:	mov    edx,0xf
   140003f19:	mov    QWORD PTR [rbp-0x8],rdx
   140003f1d:	mov    BYTE PTR [rbp-0x20],0x0
   140003f21:	xor    ecx,ecx
   140003f23:	mov    QWORD PTR [rbp-0x20],rcx
   140003f27:	mov    QWORD PTR [rbp-0x10],0x8
   140003f2f:	lea    rax,[rbp-0x20]
   140003f33:	cmp    rdx,0x10
   140003f37:	cmovae rax,rcx
   140003f3b:	mov    BYTE PTR [rax+0x8],cl
   140003f3e:	or     rsi,0xffffffffffffffff
   140003f42:	xor    r12d,r12d
   140003f45:	mov    rdx,QWORD PTR [rbp-0x8]
   140003f49:	mov    r8,QWORD PTR [rbp-0x10]
   140003f4d:	nop    DWORD PTR [rax]
   140003f50:	lea    rax,[rbp-0x20]
   140003f54:	cmp    rdx,0x10
   140003f58:	cmovae rax,QWORD PTR [rbp-0x20]
   140003f5d:	lea    rcx,[rbp-0x20]
   140003f61:	cmovae rcx,QWORD PTR [rbp-0x20]
   140003f66:	add    rax,r8
   140003f69:	lea    rdx,[rbp+0x40]
   140003f6d:	mov    QWORD PTR [rsp+0x38],rdx
   140003f72:	mov    QWORD PTR [rsp+0x30],rax
   140003f77:	mov    QWORD PTR [rsp+0x28],rcx
   140003f7c:	lea    rax,[rbp+0x48]
   140003f80:	mov    QWORD PTR [rsp+0x20],rax
   140003f85:	lea    r9,[rbp-0x2f]
   140003f89:	lea    r8,[rbp-0x30]
   140003f8d:	lea    rdx,[rdi+0x84]
   140003f94:	mov    rcx,QWORD PTR [rdi+0x78]
   140003f98:	call   QWORD PTR [rip+0x30ca]        # 0x140007068
   140003f9e:	test   eax,eax
   140003fa0:	js     0x1400040ed
   140003fa6:	cmp    eax,0x1
   140003fa9:	jg     0x1400040d0
   140003faf:	lea    rax,[rbp-0x20]
   140003fb3:	mov    r9,QWORD PTR [rbp-0x20]
   140003fb7:	mov    rdx,QWORD PTR [rbp-0x8]
   140003fbb:	cmp    rdx,0x10
   140003fbf:	cmovae rax,r9
   140003fc3:	mov    rbx,QWORD PTR [rbp+0x40]
   140003fc7:	sub    rbx,rax
   140003fca:	je     0x140003ffa
   140003fcc:	lea    rcx,[rbp-0x20]
   140003fd0:	cmp    rdx,0x10
   140003fd4:	cmovae rcx,r9
   140003fd8:	mov    r9,QWORD PTR [rdi+0x90]
   140003fdf:	mov    r8,rbx
   140003fe2:	mov    edx,0x1
   140003fe7:	call   QWORD PTR [rip+0x31e3]        # 0x1400071d0
   140003fed:	mov    rdx,QWORD PTR [rbp-0x8]
   140003ff1:	cmp    rbx,rax
   140003ff4:	jne    0x1400040f1
   140003ffa:	mov    BYTE PTR [rdi+0x81],0x1
   140004001:	lea    rax,[rbp-0x30]
   140004005:	cmp    QWORD PTR [rbp+0x48],rax
   140004009:	jne    0x1400040cb
   14000400f:	mov    r8,QWORD PTR [rbp-0x10]
   140004013:	test   rbx,rbx
   140004016:	jne    0x140003f50
   14000401c:	cmp    r8,0x20
   140004020:	jae    0x1400040f1
   140004026:	mov    rax,rsi
   140004029:	sub    rax,r8
   14000402c:	cmp    rax,0x8
   140004030:	jbe    0x1400040bd
   140004036:	lea    rbx,[r8+0x8]
   14000403a:	cmp    rbx,0xfffffffffffffffe
   14000403e:	ja     0x1400040af
   140004040:	cmp    rdx,rbx
   140004043:	jae    0x14000405b
   140004045:	mov    rdx,rbx
   140004048:	lea    rcx,[rbp-0x20]
   14000404c:	call   0x140002320
   140004051:	mov    rdx,QWORD PTR [rbp-0x8]
   140004055:	mov    r8,QWORD PTR [rbp-0x10]
   140004059:	jmp    0x140004079
   14000405b:	test   rbx,rbx
   14000405e:	jne    0x140004082
   140004060:	mov    QWORD PTR [rbp-0x10],r12
   140004064:	lea    rax,[rbp-0x20]
   140004068:	cmp    rdx,0x10
   14000406c:	cmovae rax,QWORD PTR [rbp-0x20]
   140004071:	mov    BYTE PTR [rax],r12b
   140004074:	jmp    0x140003f45
   140004079:	test   rbx,rbx
   14000407c:	je     0x140003f50
   140004082:	lea    rax,[rbp-0x20]
   140004086:	cmp    rdx,0x10
   14000408a:	cmovae rax,QWORD PTR [rbp-0x20]
   14000408f:	xor    ecx,ecx
   140004091:	mov    QWORD PTR [r8+rax*1],rcx
   140004095:	mov    QWORD PTR [rbp-0x10],rbx
   140004099:	lea    rax,[rbp-0x20]
   14000409d:	cmp    QWORD PTR [rbp-0x8],0x10
   1400040a2:	cmovae rax,QWORD PTR [rbp-0x20]
   1400040a7:	mov    BYTE PTR [rbx+rax*1],cl
   1400040aa:	jmp    0x140003f45
   1400040af:	lea    rcx,[rip+0x378a]        # 0x140007840
   1400040b6:	call   QWORD PTR [rip+0x2f7c]        # 0x140007038
   1400040bc:	int3   
   1400040bd:	lea    rcx,[rip+0x377c]        # 0x140007840
   1400040c4:	call   QWORD PTR [rip+0x2f6e]        # 0x140007038
   1400040ca:	int3   
   1400040cb:	mov    esi,r14d
   1400040ce:	jmp    0x1400040f1
   1400040d0:	cmp    eax,0x3
   1400040d3:	jne    0x1400040ed
   1400040d5:	movsx  ecx,BYTE PTR [rbp-0x30]
   1400040d9:	mov    rdx,QWORD PTR [rdi+0x90]
   1400040e0:	call   QWORD PTR [rip+0x30d2]        # 0x1400071b8
   1400040e6:	cmp    eax,0xffffffff
   1400040e9:	cmovne esi,r14d
   1400040ed:	mov    rdx,QWORD PTR [rbp-0x8]
   1400040f1:	cmp    rdx,0x10
   1400040f5:	jb     0x140004100
   1400040f7:	mov    rcx,QWORD PTR [rbp-0x20]
   1400040fb:	call   0x14000615a
   140004100:	mov    eax,esi
   140004102:	lea    r11,[rsp+0x70]
   140004107:	mov    rbx,QWORD PTR [r11+0x30]
   14000410b:	mov    rsi,QWORD PTR [r11+0x38]
   14000410f:	mov    rsp,r11
   140004112:	pop    r15
   140004114:	pop    r14
   140004116:	pop    r12
   140004118:	pop    rdi
   140004119:	pop    rbp
   14000411a:	ret    
   14000411b:	int3   
   14000411c:	int3   
   14000411d:	int3   
   14000411e:	int3   
   14000411f:	int3   
   140004120:	mov    QWORD PTR [rsp+0x8],rbx
   140004125:	push   rdi
   140004126:	sub    rsp,0x20
   14000412a:	mov    rax,QWORD PTR [rcx+0x38]
   14000412e:	mov    rdi,rcx
   140004131:	mov    ebx,edx
   140004133:	mov    rcx,QWORD PTR [rax]
   140004136:	test   rcx,rcx
   140004139:	je     0x140004171
   14000413b:	mov    rax,QWORD PTR [rdi+0x18]
   14000413f:	cmp    QWORD PTR [rax],rcx
   140004142:	jae    0x140004171
   140004144:	cmp    edx,0xffffffff
   140004147:	je     0x140004151
   140004149:	movzx  eax,BYTE PTR [rcx-0x1]
   14000414d:	cmp    eax,edx
   14000414f:	jne    0x140004171
   140004151:	mov    rax,QWORD PTR [rdi+0x50]
   140004155:	inc    DWORD PTR [rax]
   140004157:	mov    rax,QWORD PTR [rdi+0x38]
   14000415b:	dec    QWORD PTR [rax]
   14000415e:	xor    eax,eax
   140004160:	cmp    edx,0xffffffff
   140004163:	cmovne eax,edx
   140004166:	mov    rbx,QWORD PTR [rsp+0x30]
   14000416b:	add    rsp,0x20
   14000416f:	pop    rdi
   140004170:	ret    
   140004171:	mov    rdx,QWORD PTR [rdi+0x90]
   140004178:	test   rdx,rdx
   14000417b:	je     0x1400041be
   14000417d:	cmp    ebx,0xffffffff
   140004180:	je     0x1400041be
   140004182:	cmp    QWORD PTR [rdi+0x78],0x0
   140004187:	jne    0x140004197
   140004189:	movzx  ecx,bl
   14000418c:	call   QWORD PTR [rip+0x304e]        # 0x1400071e0
   140004192:	cmp    eax,0xffffffff
   140004195:	jne    0x1400041b1
   140004197:	mov    rax,QWORD PTR [rdi+0x38]
   14000419b:	lea    rcx,[rdi+0x80]
   1400041a2:	cmp    QWORD PTR [rax],rcx
   1400041a5:	je     0x1400041be
   1400041a7:	mov    BYTE PTR [rcx],bl
   1400041a9:	mov    rcx,rdi
   1400041ac:	call   0x140002be0
   1400041b1:	mov    eax,ebx
   1400041b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041b8:	add    rsp,0x20
   1400041bc:	pop    rdi
   1400041bd:	ret    
   1400041be:	or     eax,0xffffffff
   1400041c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041c6:	add    rsp,0x20
   1400041ca:	pop    rdi
   1400041cb:	ret    
   1400041cc:	int3   
   1400041cd:	int3   
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	rex push rbx
   1400041d2:	sub    rsp,0x30
   1400041d6:	mov    rax,QWORD PTR [rsp+0x60]
   1400041db:	mov    rbx,rcx
   1400041de:	cmp    r9,rax
   1400041e1:	jne    0x140004226
   1400041e3:	cmp    QWORD PTR [rcx+0x18],0x8
   1400041e8:	jb     0x1400041ef
   1400041ea:	mov    rax,QWORD PTR [rcx]
   1400041ed:	jmp    0x1400041f2
   1400041ef:	mov    rax,rcx
   1400041f2:	xor    ecx,ecx
   1400041f4:	test   r8,r8
   1400041f7:	jne    0x1400041fe
   1400041f9:	mov    r8d,ecx
   1400041fc:	jmp    0x140004204
   1400041fe:	sub    r8,rdx
   140004201:	sar    r8,1
   140004204:	test   rdx,rdx
   140004207:	je     0x140004212
   140004209:	mov    rcx,rdx
   14000420c:	sub    rcx,rax
   14000420f:	sar    rcx,1
   140004212:	mov    rdx,rcx
   140004215:	mov    rcx,rbx
   140004218:	call   0x140003970
   14000421d:	mov    rax,rbx
   140004220:	add    rsp,0x30
   140004224:	pop    rbx
   140004225:	ret    
   140004226:	cmp    QWORD PTR [rcx+0x18],0x8
   14000422b:	jb     0x140004232
   14000422d:	mov    r10,QWORD PTR [rcx]
   140004230:	jmp    0x140004235
   140004232:	mov    r10,rcx
   140004235:	xor    ecx,ecx
   140004237:	test   r8,r8
   14000423a:	jne    0x140004241
   14000423c:	mov    r8d,ecx
   14000423f:	jmp    0x140004247
   140004241:	sub    r8,rdx
   140004244:	sar    r8,1
   140004247:	test   rdx,rdx
   14000424a:	je     0x140004255
   14000424c:	mov    rcx,rdx
   14000424f:	sub    rcx,r10
   140004252:	sar    rcx,1
   140004255:	sub    rax,r9
   140004258:	mov    rdx,rcx
   14000425b:	mov    rcx,rbx
   14000425e:	sar    rax,1
   140004261:	mov    QWORD PTR [rsp+0x20],rax
   140004266:	call   0x140004610
   14000426b:	mov    rax,rbx
   14000426e:	add    rsp,0x30
   140004272:	pop    rbx
   140004273:	ret    
   140004274:	int3   
   140004275:	int3   
   140004276:	int3   
   140004277:	int3   
   140004278:	int3   
   140004279:	int3   
   14000427a:	int3   
   14000427b:	int3   
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	rex push rbx
   140004282:	push   rbp
   140004283:	push   rsi
   140004284:	push   r12
   140004286:	push   r15
   140004288:	sub    rsp,0x20
   14000428c:	mov    rbx,rcx
   14000428f:	mov    rcx,QWORD PTR [rcx+0x10]
   140004293:	mov    r15,r9
   140004296:	mov    rbp,r8
   140004299:	mov    rsi,rdx
   14000429c:	cmp    rcx,rdx
   14000429f:	jb     0x1400045f3
   1400042a5:	mov    rax,QWORD PTR [r9+0x10]
   1400042a9:	mov    r12,QWORD PTR [rsp+0x70]
   1400042ae:	cmp    rax,r12
   1400042b1:	jb     0x1400045f3
   1400042b7:	mov    QWORD PTR [rsp+0x50],rdi
   1400042bc:	mov    rdi,QWORD PTR [rsp+0x78]
   1400042c1:	mov    QWORD PTR [rsp+0x60],r14
   1400042c6:	mov    r14,rcx
   1400042c9:	sub    r14,rdx
   1400042cc:	mov    rdx,rcx
   1400042cf:	cmp    r14,r8
   1400042d2:	cmovb  rbp,r14
   1400042d6:	sub    rax,r12
   1400042d9:	cmp    rax,rdi
   1400042dc:	cmovb  rdi,rax
   1400042e0:	or     rax,0xffffffffffffffff
   1400042e4:	sub    rdx,rbp
   1400042e7:	sub    rax,rdi
   1400042ea:	cmp    rax,rdx
   1400042ed:	ja     0x1400042fd
   1400042ef:	lea    rcx,[rip+0x354a]        # 0x140007840
   1400042f6:	call   QWORD PTR [rip+0x2d3c]        # 0x140007038
   1400042fc:	int3   
   1400042fd:	mov    QWORD PTR [rsp+0x58],r13
   140004302:	lea    r13,[rdx+rdi*1]
   140004306:	sub    r14,rbp
   140004309:	cmp    rcx,r13
   14000430c:	jae    0x14000431c
   14000430e:	xor    r8d,r8d
   140004311:	mov    rdx,r13
   140004314:	mov    rcx,rbx
   140004317:	call   0x140002900
   14000431c:	mov    rax,QWORD PTR [rbx+0x18]
   140004320:	cmp    rbx,r15
   140004323:	je     0x140004398
   140004325:	cmp    rax,0x8
   140004329:	jb     0x140004330
   14000432b:	mov    rdx,QWORD PTR [rbx]
   14000432e:	jmp    0x140004333
   140004330:	mov    rdx,rbx
   140004333:	cmp    rax,0x8
   140004337:	jb     0x14000433e
   140004339:	mov    rcx,QWORD PTR [rbx]
   14000433c:	jmp    0x140004341
   14000433e:	mov    rcx,rbx
   140004341:	test   r14,r14
   140004344:	je     0x140004360
   140004346:	lea    rax,[rsi+rbp*1]
   14000434a:	lea    r8,[r14+r14*1]
   14000434e:	lea    rdx,[rdx+rax*2]
   140004352:	lea    rax,[rsi+rdi*1]
   140004356:	lea    rcx,[rcx+rax*2]
   14000435a:	call   QWORD PTR [rip+0x2ea0]        # 0x140007200
   140004360:	cmp    QWORD PTR [r15+0x18],0x8
   140004365:	jb     0x14000436a
   140004367:	mov    r15,QWORD PTR [r15]
   14000436a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000436f:	jb     0x140004376
   140004371:	mov    rax,QWORD PTR [rbx]
   140004374:	jmp    0x140004379
   140004376:	mov    rax,rbx
   140004379:	test   rdi,rdi
   14000437c:	je     0x1400045bb
   140004382:	lea    r8,[rdi+rdi*1]
   140004386:	lea    rdx,[r15+r12*2]
   14000438a:	lea    rcx,[rax+rsi*2]
   14000438e:	call   0x1400062f6
   140004393:	jmp    0x1400045bb
   140004398:	cmp    rdi,rbp
   14000439b:	ja     0x140004412
   14000439d:	cmp    rax,0x8
   1400043a1:	jb     0x1400043a8
   1400043a3:	mov    rcx,QWORD PTR [rbx]
   1400043a6:	jmp    0x1400043ab
   1400043a8:	mov    rcx,rbx
   1400043ab:	cmp    rax,0x8
   1400043af:	jb     0x1400043b6
   1400043b1:	mov    rax,QWORD PTR [rbx]
   1400043b4:	jmp    0x1400043b9
   1400043b6:	mov    rax,rbx
   1400043b9:	test   rdi,rdi
   1400043bc:	je     0x1400043d0
   1400043be:	lea    rdx,[rcx+r12*2]
   1400043c2:	lea    r8,[rdi+rdi*1]
   1400043c6:	lea    rcx,[rax+rsi*2]
   1400043ca:	call   QWORD PTR [rip+0x2e30]        # 0x140007200
   1400043d0:	mov    rax,QWORD PTR [rbx+0x18]
   1400043d4:	cmp    rax,0x8
   1400043d8:	jb     0x1400043df
   1400043da:	mov    rdx,QWORD PTR [rbx]
   1400043dd:	jmp    0x1400043e2
   1400043df:	mov    rdx,rbx
   1400043e2:	cmp    rax,0x8
   1400043e6:	jb     0x1400043ed
   1400043e8:	mov    rcx,QWORD PTR [rbx]
   1400043eb:	jmp    0x1400043f0
   1400043ed:	mov    rcx,rbx
   1400043f0:	test   r14,r14
   1400043f3:	je     0x1400045bb
   1400043f9:	lea    rax,[rsi+rbp*1]
   1400043fd:	lea    r8,[r14+r14*1]
   140004401:	lea    rdx,[rdx+rax*2]
   140004405:	lea    rax,[rsi+rdi*1]
   140004409:	lea    rcx,[rcx+rax*2]
   14000440d:	jmp    0x1400045b5
   140004412:	cmp    r12,rsi
   140004415:	ja     0x14000448c
   140004417:	cmp    rax,0x8
   14000441b:	jb     0x140004422
   14000441d:	mov    rdx,QWORD PTR [rbx]
   140004420:	jmp    0x140004425
   140004422:	mov    rdx,rbx
   140004425:	cmp    rax,0x8
   140004429:	jb     0x140004430
   14000442b:	mov    rcx,QWORD PTR [rbx]
   14000442e:	jmp    0x140004433
   140004430:	mov    rcx,rbx
   140004433:	test   r14,r14
   140004436:	je     0x140004452
   140004438:	lea    rax,[rsi+rbp*1]
   14000443c:	lea    r8,[r14+r14*1]
   140004440:	lea    rdx,[rdx+rax*2]
   140004444:	lea    rax,[rsi+rdi*1]
   140004448:	lea    rcx,[rcx+rax*2]
   14000444c:	call   QWORD PTR [rip+0x2dae]        # 0x140007200
   140004452:	mov    rax,QWORD PTR [rbx+0x18]
   140004456:	cmp    rax,0x8
   14000445a:	jb     0x140004461
   14000445c:	mov    rcx,QWORD PTR [rbx]
   14000445f:	jmp    0x140004464
   140004461:	mov    rcx,rbx
   140004464:	cmp    rax,0x8
   140004468:	jb     0x14000446f
   14000446a:	mov    rax,QWORD PTR [rbx]
   14000446d:	jmp    0x140004472
   14000446f:	mov    rax,rbx
   140004472:	test   rdi,rdi
   140004475:	je     0x1400045bb
   14000447b:	lea    rdx,[rcx+r12*2]
   14000447f:	lea    r8,[rdi+rdi*1]
   140004483:	lea    rcx,[rax+rsi*2]
   140004487:	jmp    0x1400045b5
   14000448c:	lea    r15,[rsi+rbp*1]
   140004490:	cmp    r15,r12
   140004493:	ja     0x14000450c
   140004495:	cmp    rax,0x8
   140004499:	jb     0x1400044a0
   14000449b:	mov    rdx,QWORD PTR [rbx]
   14000449e:	jmp    0x1400044a3
   1400044a0:	mov    rdx,rbx
   1400044a3:	cmp    rax,0x8
   1400044a7:	jb     0x1400044ae
   1400044a9:	mov    rcx,QWORD PTR [rbx]
   1400044ac:	jmp    0x1400044b1
   1400044ae:	mov    rcx,rbx
   1400044b1:	test   r14,r14
   1400044b4:	je     0x1400044cc
   1400044b6:	lea    rax,[rsi+rdi*1]
   1400044ba:	lea    r8,[r14+r14*1]
   1400044be:	lea    rdx,[rdx+r15*2]
   1400044c2:	lea    rcx,[rcx+rax*2]
   1400044c6:	call   QWORD PTR [rip+0x2d34]        # 0x140007200
   1400044cc:	mov    rax,QWORD PTR [rbx+0x18]
   1400044d0:	cmp    rax,0x8
   1400044d4:	jb     0x1400044db
   1400044d6:	mov    rcx,QWORD PTR [rbx]
   1400044d9:	jmp    0x1400044de
   1400044db:	mov    rcx,rbx
   1400044de:	cmp    rax,0x8
   1400044e2:	jb     0x1400044e9
   1400044e4:	mov    rax,QWORD PTR [rbx]
   1400044e7:	jmp    0x1400044ec
   1400044e9:	mov    rax,rbx
   1400044ec:	test   rdi,rdi
   1400044ef:	je     0x1400045bb
   1400044f5:	sub    r12,rbp
   1400044f8:	lea    r8,[rdi+rdi*1]
   1400044fc:	add    r12,rdi
   1400044ff:	lea    rdx,[rcx+r12*2]
   140004503:	lea    rcx,[rax+rsi*2]
   140004507:	jmp    0x1400045b5
   14000450c:	cmp    rax,0x8
   140004510:	jb     0x140004517
   140004512:	mov    rcx,QWORD PTR [rbx]
   140004515:	jmp    0x14000451a
   140004517:	mov    rcx,rbx
   14000451a:	cmp    rax,0x8
   14000451e:	jb     0x140004525
   140004520:	mov    rax,QWORD PTR [rbx]
   140004523:	jmp    0x140004528
   140004525:	mov    rax,rbx
   140004528:	test   rbp,rbp
   14000452b:	je     0x140004543
   14000452d:	lea    rdx,[rcx+r12*2]
   140004531:	lea    r8,[rbp*2+0x0]
   140004539:	lea    rcx,[rax+rsi*2]
   14000453d:	call   QWORD PTR [rip+0x2cbd]        # 0x140007200
   140004543:	mov    rax,QWORD PTR [rbx+0x18]
   140004547:	cmp    rax,0x8
   14000454b:	jb     0x140004552
   14000454d:	mov    rdx,QWORD PTR [rbx]
   140004550:	jmp    0x140004555
   140004552:	mov    rdx,rbx
   140004555:	cmp    rax,0x8
   140004559:	jb     0x140004560
   14000455b:	mov    rcx,QWORD PTR [rbx]
   14000455e:	jmp    0x140004563
   140004560:	mov    rcx,rbx
   140004563:	test   r14,r14
   140004566:	je     0x14000457e
   140004568:	lea    rax,[rsi+rdi*1]
   14000456c:	lea    r8,[r14+r14*1]
   140004570:	lea    rdx,[rdx+r15*2]
   140004574:	lea    rcx,[rcx+rax*2]
   140004578:	call   QWORD PTR [rip+0x2c82]        # 0x140007200
   14000457e:	mov    rax,QWORD PTR [rbx+0x18]
   140004582:	cmp    rax,0x8
   140004586:	jb     0x14000458d
   140004588:	mov    rdx,QWORD PTR [rbx]
   14000458b:	jmp    0x140004590
   14000458d:	mov    rdx,rbx
   140004590:	cmp    rax,0x8
   140004594:	jb     0x14000459b
   140004596:	mov    rcx,QWORD PTR [rbx]
   140004599:	jmp    0x14000459e
   14000459b:	mov    rcx,rbx
   14000459e:	mov    r8,rdi
   1400045a1:	sub    r8,rbp
   1400045a4:	je     0x1400045bb
   1400045a6:	lea    rax,[r12+rdi*1]
   1400045aa:	add    r8,r8
   1400045ad:	lea    rcx,[rcx+r15*2]
   1400045b1:	lea    rdx,[rdx+rax*2]
   1400045b5:	call   QWORD PTR [rip+0x2c45]        # 0x140007200
   1400045bb:	cmp    QWORD PTR [rbx+0x18],0x8
   1400045c0:	mov    QWORD PTR [rbx+0x10],r13
   1400045c4:	jb     0x1400045cb
   1400045c6:	mov    rax,QWORD PTR [rbx]
   1400045c9:	jmp    0x1400045ce
   1400045cb:	mov    rax,rbx
   1400045ce:	mov    rdi,QWORD PTR [rsp+0x50]
   1400045d3:	mov    r14,QWORD PTR [rsp+0x60]
   1400045d8:	xor    ecx,ecx
   1400045da:	mov    WORD PTR [rax+r13*2],cx
   1400045df:	mov    r13,QWORD PTR [rsp+0x58]
   1400045e4:	mov    rax,rbx
   1400045e7:	add    rsp,0x20
   1400045eb:	pop    r15
   1400045ed:	pop    r12
   1400045ef:	pop    rsi
   1400045f0:	pop    rbp
   1400045f1:	pop    rbx
   1400045f2:	ret    
   1400045f3:	lea    rcx,[rip+0x3256]        # 0x140007850
   1400045fa:	call   QWORD PTR [rip+0x2a40]        # 0x140007040
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	mov    QWORD PTR [rsp+0x20],rbx
   140004615:	push   rbp
   140004616:	push   rsi
   140004617:	push   r12
   140004619:	sub    rsp,0x30
   14000461d:	mov    rbp,r9
   140004620:	mov    rsi,r8
   140004623:	mov    r12,rdx
   140004626:	mov    rbx,rcx
   140004629:	test   r9,r9
   14000462c:	je     0x14000469a
   14000462e:	mov    r8,QWORD PTR [rcx+0x18]
   140004632:	cmp    r8,0x8
   140004636:	jb     0x14000463d
   140004638:	mov    rax,QWORD PTR [rcx]
   14000463b:	jmp    0x140004640
   14000463d:	mov    rax,rcx
   140004640:	cmp    r9,rax
   140004643:	jb     0x14000469a
   140004645:	cmp    r8,0x8
   140004649:	jb     0x14000464e
   14000464b:	mov    rcx,QWORD PTR [rcx]
   14000464e:	mov    rax,QWORD PTR [rbx+0x10]
   140004652:	lea    rcx,[rcx+rax*2]
   140004656:	cmp    rcx,r9
   140004659:	jbe    0x14000469a
   14000465b:	cmp    r8,0x8
   14000465f:	jb     0x140004666
   140004661:	mov    rax,QWORD PTR [rbx]
   140004664:	jmp    0x140004669
   140004666:	mov    rax,rbx
   140004669:	sub    rbp,rax
   14000466c:	mov    rax,QWORD PTR [rsp+0x70]
   140004671:	mov    r9,rbx
   140004674:	sar    rbp,1
   140004677:	mov    QWORD PTR [rsp+0x28],rax
   14000467c:	mov    r8,rsi
   14000467f:	mov    rcx,rbx
   140004682:	mov    QWORD PTR [rsp+0x20],rbp
   140004687:	call   0x140004280
   14000468c:	mov    rbx,QWORD PTR [rsp+0x68]
   140004691:	add    rsp,0x30
   140004695:	pop    r12
   140004697:	pop    rsi
   140004698:	pop    rbp
   140004699:	ret    
   14000469a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000469e:	cmp    rcx,rdx
   1400046a1:	jae    0x1400046b1
   1400046a3:	lea    rcx,[rip+0x31a6]        # 0x140007850
   1400046aa:	call   QWORD PTR [rip+0x2990]        # 0x140007040
   1400046b0:	int3   
   1400046b1:	mov    QWORD PTR [rsp+0x58],r14
   1400046b6:	mov    r14,QWORD PTR [rsp+0x70]
   1400046bb:	mov    QWORD PTR [rsp+0x60],r15
   1400046c0:	mov    r15,rcx
   1400046c3:	sub    r15,rdx
   1400046c6:	cmp    r15,rsi
   1400046c9:	cmovb  rsi,r15
   1400046cd:	or     rax,0xffffffffffffffff
   1400046d1:	sub    rax,r14
   1400046d4:	sub    rcx,rsi
   1400046d7:	cmp    rax,rcx
   1400046da:	ja     0x1400046ea
   1400046dc:	lea    rcx,[rip+0x315d]        # 0x140007840
   1400046e3:	call   QWORD PTR [rip+0x294f]        # 0x140007038
   1400046e9:	int3   
   1400046ea:	sub    r15,rsi
   1400046ed:	cmp    r14,rsi
   1400046f0:	jae    0x140004731
   1400046f2:	mov    rax,QWORD PTR [rbx+0x18]
   1400046f6:	cmp    rax,0x8
   1400046fa:	jb     0x140004701
   1400046fc:	mov    rdx,QWORD PTR [rbx]
   1400046ff:	jmp    0x140004704
   140004701:	mov    rdx,rbx
   140004704:	cmp    rax,0x8
   140004708:	jb     0x14000470f
   14000470a:	mov    rcx,QWORD PTR [rbx]
   14000470d:	jmp    0x140004712
   14000470f:	mov    rcx,rbx
   140004712:	test   r15,r15
   140004715:	je     0x140004731
   140004717:	lea    rax,[r12+rsi*1]
   14000471b:	lea    r8,[r15+r15*1]
   14000471f:	lea    rdx,[rdx+rax*2]
   140004723:	lea    rax,[r12+r14*1]
   140004727:	lea    rcx,[rcx+rax*2]
   14000472b:	call   QWORD PTR [rip+0x2acf]        # 0x140007200
   140004731:	mov    QWORD PTR [rsp+0x50],rdi
   140004736:	test   r14,r14
   140004739:	jne    0x140004744
   14000473b:	test   rsi,rsi
   14000473e:	je     0x14000482d
   140004744:	mov    r8,QWORD PTR [rbx+0x10]
   140004748:	movabs rax,0x7ffffffffffffffe
   140004752:	mov    rdi,r8
   140004755:	sub    rdi,rsi
   140004758:	add    rdi,r14
   14000475b:	cmp    rdi,rax
   14000475e:	jbe    0x14000476e
   140004760:	lea    rcx,[rip+0x30d9]        # 0x140007840
   140004767:	call   QWORD PTR [rip+0x28cb]        # 0x140007038
   14000476d:	int3   
   14000476e:	mov    rcx,QWORD PTR [rbx+0x18]
   140004772:	cmp    rcx,rdi
   140004775:	jae    0x14000479f
   140004777:	mov    rdx,rdi
   14000477a:	mov    rcx,rbx
   14000477d:	call   0x140002430
   140004782:	test   rdi,rdi
   140004785:	je     0x14000482d
   14000478b:	cmp    rsi,r14
   14000478e:	jae    0x1400047f0
   140004790:	mov    rax,QWORD PTR [rbx+0x18]
   140004794:	cmp    rax,0x8
   140004798:	jb     0x1400047c0
   14000479a:	mov    rdx,QWORD PTR [rbx]
   14000479d:	jmp    0x1400047c3
   14000479f:	test   rdi,rdi
   1400047a2:	jne    0x14000478b
   1400047a4:	xor    eax,eax
   1400047a6:	mov    QWORD PTR [rbx+0x10],rax
   1400047aa:	cmp    rcx,0x8
   1400047ae:	jb     0x1400047b8
   1400047b0:	mov    rcx,QWORD PTR [rbx]
   1400047b3:	mov    WORD PTR [rcx],ax
   1400047b6:	jmp    0x14000482d
   1400047b8:	mov    rcx,rbx
   1400047bb:	mov    WORD PTR [rbx],ax
   1400047be:	jmp    0x14000482d
   1400047c0:	mov    rdx,rbx
   1400047c3:	cmp    rax,0x8
   1400047c7:	jb     0x1400047ce
   1400047c9:	mov    rcx,QWORD PTR [rbx]
   1400047cc:	jmp    0x1400047d1
   1400047ce:	mov    rcx,rbx
   1400047d1:	test   r15,r15
   1400047d4:	je     0x1400047f0
   1400047d6:	lea    rax,[r12+rsi*1]
   1400047da:	lea    r8,[r15+r15*1]
   1400047de:	lea    rdx,[rdx+rax*2]
   1400047e2:	lea    rax,[r12+r14*1]
   1400047e6:	lea    rcx,[rcx+rax*2]
   1400047ea:	call   QWORD PTR [rip+0x2a10]        # 0x140007200
   1400047f0:	cmp    QWORD PTR [rbx+0x18],0x8
   1400047f5:	jb     0x1400047fc
   1400047f7:	mov    rax,QWORD PTR [rbx]
   1400047fa:	jmp    0x1400047ff
   1400047fc:	mov    rax,rbx
   1400047ff:	test   r14,r14
   140004802:	je     0x140004814
   140004804:	lea    r8,[r14+r14*1]
   140004808:	lea    rcx,[rax+r12*2]
   14000480c:	mov    rdx,rbp
   14000480f:	call   0x1400062f6
   140004814:	cmp    QWORD PTR [rbx+0x18],0x8
   140004819:	mov    QWORD PTR [rbx+0x10],rdi
   14000481d:	jb     0x140004824
   14000481f:	mov    rcx,QWORD PTR [rbx]
   140004822:	jmp    0x140004827
   140004824:	mov    rcx,rbx
   140004827:	xor    eax,eax
   140004829:	mov    WORD PTR [rcx+rdi*2],ax
   14000482d:	mov    rdi,QWORD PTR [rsp+0x50]
   140004832:	mov    r14,QWORD PTR [rsp+0x58]
   140004837:	mov    r15,QWORD PTR [rsp+0x60]
   14000483c:	mov    rax,rbx
   14000483f:	mov    rbx,QWORD PTR [rsp+0x68]
   140004844:	add    rsp,0x30
   140004848:	pop    r12
   14000484a:	pop    rsi
   14000484b:	pop    rbp
   14000484c:	ret    
   14000484d:	int3   
   14000484e:	int3   
   14000484f:	int3   
   140004850:	mov    QWORD PTR [rsp+0x10],rbx
   140004855:	mov    QWORD PTR [rsp+0x18],rbp
   14000485a:	push   rsi
   14000485b:	push   rdi
   14000485c:	push   r14
   14000485e:	sub    rsp,0x20
   140004862:	mov    rax,QWORD PTR [rcx+0x38]
   140004866:	lea    r14,[rcx+0x80]
   14000486d:	mov    ebp,r9d
   140004870:	mov    rsi,r8
   140004873:	mov    rdi,rdx
   140004876:	mov    rbx,rcx
   140004879:	cmp    QWORD PTR [rax],r14
   14000487c:	jne    0x14000488e
   14000487e:	cmp    r9d,0x1
   140004882:	jne    0x14000488e
   140004884:	cmp    QWORD PTR [rcx+0x78],0x0
   140004889:	jne    0x14000488e
   14000488b:	dec    rsi
   14000488e:	cmp    QWORD PTR [rcx+0x90],0x0
   140004896:	je     0x140004911
   140004898:	call   0x140002550
   14000489d:	test   al,al
   14000489f:	je     0x140004911
   1400048a1:	test   rsi,rsi
   1400048a4:	jne    0x1400048ab
   1400048a6:	cmp    ebp,0x1
   1400048a9:	je     0x1400048c2
   1400048ab:	mov    rcx,QWORD PTR [rbx+0x90]
   1400048b2:	mov    r8d,ebp
   1400048b5:	mov    rdx,rsi
   1400048b8:	call   QWORD PTR [rip+0x290a]        # 0x1400071c8
   1400048be:	test   eax,eax
   1400048c0:	jne    0x140004911
   1400048c2:	mov    rcx,QWORD PTR [rbx+0x90]
   1400048c9:	lea    rdx,[rsp+0x40]
   1400048ce:	call   QWORD PTR [rip+0x2a44]        # 0x140007318
   1400048d4:	test   eax,eax
   1400048d6:	jne    0x140004911
   1400048d8:	mov    rax,QWORD PTR [rbx+0x18]
   1400048dc:	cmp    QWORD PTR [rax],r14
   1400048df:	jne    0x1400048fb
   1400048e1:	mov    rcx,QWORD PTR [rbx+0x68]
   1400048e5:	mov    rdx,QWORD PTR [rbx+0x70]
   1400048e9:	mov    QWORD PTR [rax],rcx
   1400048ec:	mov    rax,QWORD PTR [rbx+0x38]
   1400048f0:	sub    edx,ecx
   1400048f2:	mov    QWORD PTR [rax],rcx
   1400048f5:	mov    rax,QWORD PTR [rbx+0x50]
   1400048f9:	mov    DWORD PTR [rax],edx
   1400048fb:	xor    eax,eax
   1400048fd:	mov    QWORD PTR [rdi],rax
   140004900:	mov    rax,QWORD PTR [rsp+0x40]
   140004905:	mov    QWORD PTR [rdi+0x8],rax
   140004909:	mov    eax,DWORD PTR [rbx+0x84]
   14000490f:	jmp    0x140004924
   140004911:	mov    rax,QWORD PTR [rip+0x2808]        # 0x140007120
   140004918:	mov    rcx,QWORD PTR [rax]
   14000491b:	xor    eax,eax
   14000491d:	mov    QWORD PTR [rdi],rcx
   140004920:	mov    QWORD PTR [rdi+0x8],rax
   140004924:	mov    rbx,QWORD PTR [rsp+0x48]
   140004929:	mov    rbp,QWORD PTR [rsp+0x50]
   14000492e:	mov    DWORD PTR [rdi+0x10],eax
   140004931:	mov    rax,rdi
   140004934:	add    rsp,0x20
   140004938:	pop    r14
   14000493a:	pop    rdi
   14000493b:	pop    rsi
   14000493c:	ret    
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	mov    QWORD PTR [rsp+0x10],rbx
   140004945:	mov    QWORD PTR [rsp+0x18],rsi
   14000494a:	mov    QWORD PTR [rsp+0x20],rdi
   14000494f:	push   r14
   140004951:	sub    rsp,0x20
   140004955:	cmp    QWORD PTR [rcx+0x90],0x0
   14000495d:	mov    rax,QWORD PTR [r8+0x8]
   140004961:	mov    rsi,QWORD PTR [r8]
   140004964:	mov    QWORD PTR [rsp+0x30],rax
   140004969:	mov    r14,r8
   14000496c:	mov    rbx,rdx
   14000496f:	mov    rdi,rcx
   140004972:	je     0x1400049ee
   140004974:	call   0x140002550
   140004979:	test   al,al
   14000497b:	je     0x1400049ee
   14000497d:	mov    rcx,QWORD PTR [rdi+0x90]
   140004984:	lea    rdx,[rsp+0x30]
   140004989:	call   QWORD PTR [rip+0x2831]        # 0x1400071c0
   14000498f:	test   eax,eax
   140004991:	jne    0x1400049ee
   140004993:	test   rsi,rsi
   140004996:	je     0x1400049b0
   140004998:	mov    rcx,QWORD PTR [rdi+0x90]
   14000499f:	lea    r8d,[rax+0x1]
   1400049a3:	mov    rdx,rsi
   1400049a6:	call   QWORD PTR [rip+0x281c]        # 0x1400071c8
   1400049ac:	test   eax,eax
   1400049ae:	jne    0x1400049ee
   1400049b0:	mov    rcx,QWORD PTR [rdi+0x90]
   1400049b7:	lea    rdx,[rsp+0x30]
   1400049bc:	call   QWORD PTR [rip+0x2956]        # 0x140007318
   1400049c2:	test   eax,eax
   1400049c4:	jne    0x1400049ee
   1400049c6:	mov    eax,DWORD PTR [r14+0x10]
   1400049ca:	mov    rcx,rdi
   1400049cd:	mov    DWORD PTR [rdi+0x84],eax
   1400049d3:	call   0x140002bb0
   1400049d8:	xor    eax,eax
   1400049da:	mov    QWORD PTR [rbx],rax
   1400049dd:	mov    rax,QWORD PTR [rsp+0x30]
   1400049e2:	mov    QWORD PTR [rbx+0x8],rax
   1400049e6:	mov    eax,DWORD PTR [rdi+0x84]
   1400049ec:	jmp    0x140004a01
   1400049ee:	mov    rax,QWORD PTR [rip+0x272b]        # 0x140007120
   1400049f5:	mov    rcx,QWORD PTR [rax]
   1400049f8:	xor    eax,eax
   1400049fa:	mov    QWORD PTR [rbx],rcx
   1400049fd:	mov    QWORD PTR [rbx+0x8],rax
   140004a01:	mov    rsi,QWORD PTR [rsp+0x40]
   140004a06:	mov    rdi,QWORD PTR [rsp+0x48]
   140004a0b:	mov    DWORD PTR [rbx+0x10],eax
   140004a0e:	mov    rax,rbx
   140004a11:	mov    rbx,QWORD PTR [rsp+0x38]
   140004a16:	add    rsp,0x20
   140004a1a:	pop    r14
   140004a1c:	ret    
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	mov    rax,QWORD PTR [rcx+0x8]
   140004a24:	ret    
   140004a25:	int3   
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	mov    rax,rdx
   140004a33:	ret    
   140004a34:	int3   
   140004a35:	int3   
   140004a36:	int3   
   140004a37:	int3   
   140004a38:	int3   
   140004a39:	int3   
   140004a3a:	int3   
   140004a3b:	int3   
   140004a3c:	int3   
   140004a3d:	int3   
   140004a3e:	int3   
   140004a3f:	int3   
   140004a40:	mov    rax,rdx
   140004a43:	ret    
   140004a44:	int3   
   140004a45:	int3   
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    rax,rcx
   140004a53:	ret    
   140004a54:	int3   
   140004a55:	int3   
   140004a56:	int3   
   140004a57:	int3   
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	rex push rbx
   140004a62:	sub    rsp,0x20
   140004a66:	mov    rbx,rcx
   140004a69:	mov    rcx,QWORD PTR [rcx+0x90]
   140004a70:	mov    r9,r8
   140004a73:	test   rcx,rcx
   140004a76:	je     0x140004b09
   140004a7c:	test   rdx,rdx
   140004a7f:	jne    0x140004a8c
   140004a81:	test   r8,r8
   140004a84:	jne    0x140004a8c
   140004a86:	lea    r8d,[r9+0x4]
   140004a8a:	jmp    0x140004a8f
   140004a8c:	xor    r8d,r8d
   140004a8f:	call   QWORD PTR [rip+0x2743]        # 0x1400071d8
   140004a95:	test   eax,eax
   140004a97:	jne    0x140004b09
   140004a99:	mov    rcx,rbx
   140004a9c:	mov    QWORD PTR [rsp+0x30],rdi
   140004aa1:	mov    rdi,QWORD PTR [rbx+0x90]
   140004aa8:	mov    BYTE PTR [rbx+0x88],0x1
   140004aaf:	mov    BYTE PTR [rbx+0x81],al
   140004ab5:	call   QWORD PTR [rip+0x260d]        # 0x1400070c8
   140004abb:	test   rdi,rdi
   140004abe:	je     0x140004ae0
   140004ac0:	lea    rax,[rdi+0x10]
   140004ac4:	mov    QWORD PTR [rbx+0x38],rdi
   140004ac8:	mov    QWORD PTR [rbx+0x40],rdi
   140004acc:	mov    QWORD PTR [rbx+0x18],rax
   140004ad0:	mov    QWORD PTR [rbx+0x20],rax
   140004ad4:	lea    rax,[rdi+0x8]
   140004ad8:	mov    QWORD PTR [rbx+0x50],rax
   140004adc:	mov    QWORD PTR [rbx+0x58],rax
   140004ae0:	mov    QWORD PTR [rbx+0x90],rdi
   140004ae7:	mov    eax,DWORD PTR [rip+0x6913]        # 0x14000b400
   140004aed:	mov    rdi,QWORD PTR [rsp+0x30]
   140004af2:	mov    DWORD PTR [rbx+0x84],eax
   140004af8:	mov    QWORD PTR [rbx+0x78],0x0
   140004b00:	mov    rax,rbx
   140004b03:	add    rsp,0x20
   140004b07:	pop    rbx
   140004b08:	ret    
   140004b09:	xor    eax,eax
   140004b0b:	add    rsp,0x20
   140004b0f:	pop    rbx
   140004b10:	ret    
   140004b11:	int3   
   140004b12:	int3   
   140004b13:	int3   
   140004b14:	int3   
   140004b15:	int3   
   140004b16:	int3   
   140004b17:	int3   
   140004b18:	int3   
   140004b19:	int3   
   140004b1a:	int3   
   140004b1b:	int3   
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	mov    rax,QWORD PTR [rcx+0x10]
   140004b24:	ret    
   140004b25:	int3   
   140004b26:	int3   
   140004b27:	int3   
   140004b28:	int3   
   140004b29:	int3   
   140004b2a:	int3   
   140004b2b:	int3   
   140004b2c:	int3   
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	mov    rax,QWORD PTR [rcx+0x10]
   140004b34:	ret    
   140004b35:	int3   
   140004b36:	int3   
   140004b37:	int3   
   140004b38:	int3   
   140004b39:	int3   
   140004b3a:	int3   
   140004b3b:	int3   
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	int3   
   140004b3f:	int3   
   140004b40:	mov    eax,DWORD PTR [rcx+0x10]
   140004b43:	ret    
   140004b44:	int3   
   140004b45:	int3   
   140004b46:	int3   
   140004b47:	int3   
   140004b48:	int3   
   140004b49:	int3   
   140004b4a:	int3   
   140004b4b:	int3   
   140004b4c:	int3   
   140004b4d:	int3   
   140004b4e:	int3   
   140004b4f:	int3   
   140004b50:	rex push rbx
   140004b52:	sub    rsp,0x20
   140004b56:	cmp    QWORD PTR [rcx+0x90],0x0
   140004b5e:	mov    rbx,rcx
   140004b61:	je     0x140004b8b
   140004b63:	mov    rax,QWORD PTR [rcx]
   140004b66:	or     edx,0xffffffff
   140004b69:	call   QWORD PTR [rax+0x18]
   140004b6c:	cmp    eax,0xffffffff
   140004b6f:	je     0x140004b8b
   140004b71:	mov    rcx,QWORD PTR [rbx+0x90]
   140004b78:	call   QWORD PTR [rip+0x2622]        # 0x1400071a0
   140004b7e:	test   eax,eax
   140004b80:	jns    0x140004b8b
   140004b82:	or     eax,0xffffffff
   140004b85:	add    rsp,0x20
   140004b89:	pop    rbx
   140004b8a:	ret    
   140004b8b:	xor    eax,eax
   140004b8d:	add    rsp,0x20
   140004b91:	pop    rbx
   140004b92:	ret    
   140004b93:	int3   
   140004b94:	int3   
   140004b95:	int3   
   140004b96:	int3   
   140004b97:	int3   
   140004b98:	int3   
   140004b99:	int3   
   140004b9a:	int3   
   140004b9b:	int3   
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	lea    rax,[rip+0x6469]        # 0x14000b010
   140004ba7:	ret    
   140004ba8:	int3   
   140004ba9:	int3   
   140004baa:	int3   
   140004bab:	int3   
   140004bac:	int3   
   140004bad:	int3   
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	movzx  eax,BYTE PTR [rcx]
   140004bb3:	ret    
   140004bb4:	int3   
   140004bb5:	int3   
   140004bb6:	int3   
   140004bb7:	int3   
   140004bb8:	int3   
   140004bb9:	int3   
   140004bba:	int3   
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	movzx  eax,BYTE PTR [rcx]
   140004bc3:	ret    
   140004bc4:	int3   
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	rex push rbp
   140004bd2:	push   rsi
   140004bd3:	push   rdi
   140004bd4:	push   r14
   140004bd6:	push   r15
   140004bd8:	mov    rbp,rsp
   140004bdb:	sub    rsp,0x70
   140004bdf:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   140004be7:	mov    QWORD PTR [rsp+0xb0],rbx
   140004bef:	mov    rdi,rcx
   140004bf2:	mov    rax,QWORD PTR [rcx+0x38]
   140004bf6:	mov    rcx,QWORD PTR [rax]
   140004bf9:	test   rcx,rcx
   140004bfc:	je     0x140004c2a
   140004bfe:	mov    rdx,QWORD PTR [rdi+0x50]
   140004c02:	movsxd r8,DWORD PTR [rdx]
   140004c05:	lea    rax,[rcx+r8*1]
   140004c09:	cmp    rcx,rax
   140004c0c:	jae    0x140004c2a
   140004c0e:	lea    eax,[r8-0x1]
   140004c12:	mov    DWORD PTR [rdx],eax
   140004c14:	mov    rcx,QWORD PTR [rdi+0x38]
   140004c18:	mov    rdx,QWORD PTR [rcx]
   140004c1b:	lea    rax,[rdx+0x1]
   140004c1f:	mov    QWORD PTR [rcx],rax
   140004c22:	movzx  eax,BYTE PTR [rdx]
   140004c25:	jmp    0x140004e8d
   140004c2a:	cmp    QWORD PTR [rdi+0x90],0x0
   140004c32:	jne    0x140004c3d
   140004c34:	or     rax,0xffffffffffffffff
   140004c38:	jmp    0x140004e8d
   140004c3d:	mov    rax,QWORD PTR [rdi+0x18]
   140004c41:	mov    rcx,QWORD PTR [rax]
   140004c44:	lea    rax,[rdi+0x80]
   140004c4b:	cmp    rcx,rax
   140004c4e:	jne    0x140004c64
   140004c50:	mov    rdx,QWORD PTR [rdi+0x68]
   140004c54:	mov    r9,QWORD PTR [rdi+0x70]
   140004c58:	mov    r8,rdx
   140004c5b:	mov    rcx,rdi
   140004c5e:	call   QWORD PTR [rip+0x245c]        # 0x1400070c0
   140004c64:	cmp    QWORD PTR [rdi+0x78],0x0
   140004c69:	jne    0x140004c8e
   140004c6b:	mov    rcx,QWORD PTR [rdi+0x90]
   140004c72:	call   QWORD PTR [rip+0x2530]        # 0x1400071a8
   140004c78:	cmp    eax,0xffffffff
   140004c7b:	je     0x140004c85
   140004c7d:	movzx  esi,al
   140004c80:	jmp    0x140004e8b
   140004c85:	or     rsi,0xffffffffffffffff
   140004c89:	jmp    0x140004e8b
   140004c8e:	mov    QWORD PTR [rbp-0x8],0xf
   140004c96:	xor    r15d,r15d
   140004c99:	mov    QWORD PTR [rbp-0x10],r15
   140004c9d:	mov    BYTE PTR [rbp-0x20],r15b
   140004ca1:	mov    rcx,QWORD PTR [rdi+0x90]
   140004ca8:	call   QWORD PTR [rip+0x24fa]        # 0x1400071a8
   140004cae:	or     rsi,0xffffffffffffffff
   140004cb2:	cmp    eax,0xffffffff
   140004cb5:	mov    r14d,eax
   140004cb8:	je     0x140004e7b
   140004cbe:	mov    rcx,rsi
   140004cc1:	mov    rdx,QWORD PTR [rbp-0x10]
   140004cc5:	sub    rcx,rdx
   140004cc8:	cmp    rcx,0x1
   140004ccc:	jbe    0x140004e6d
   140004cd2:	lea    rbx,[rdx+0x1]
   140004cd6:	cmp    rbx,0xfffffffffffffffe
   140004cda:	ja     0x140004e5f
   140004ce0:	mov    r9,QWORD PTR [rbp-0x8]
   140004ce4:	cmp    r9,rbx
   140004ce7:	jae    0x140004cfa
   140004ce9:	mov    r8,rdx
   140004cec:	mov    rdx,rbx
   140004cef:	lea    rcx,[rbp-0x20]
   140004cf3:	call   0x140002320
   140004cf8:	jmp    0x140004d12
   140004cfa:	test   rbx,rbx
   140004cfd:	jne    0x140004d1f
   140004cff:	mov    QWORD PTR [rbp-0x10],r15
   140004d03:	lea    rax,[rbp-0x20]
   140004d07:	cmp    r9,0x10
   140004d0b:	cmovae rax,QWORD PTR [rbp-0x20]
   140004d10:	mov    BYTE PTR [rax],bl
   140004d12:	mov    rdx,QWORD PTR [rbp-0x10]
   140004d16:	mov    r9,QWORD PTR [rbp-0x8]
   140004d1a:	test   rbx,rbx
   140004d1d:	je     0x140004d4e
   140004d1f:	lea    rax,[rbp-0x20]
   140004d23:	cmp    r9,0x10
   140004d27:	cmovae rax,QWORD PTR [rbp-0x20]
   140004d2c:	mov    BYTE PTR [rax+rdx*1],r14b
   140004d30:	mov    QWORD PTR [rbp-0x10],rbx
   140004d34:	lea    rax,[rbp-0x20]
   140004d38:	cmp    QWORD PTR [rbp-0x8],0x10
   140004d3d:	cmovae rax,QWORD PTR [rbp-0x20]
   140004d42:	mov    BYTE PTR [rax+rbx*1],0x0
   140004d46:	mov    r9,QWORD PTR [rbp-0x8]
   140004d4a:	mov    rdx,QWORD PTR [rbp-0x10]
   140004d4e:	lea    rcx,[rbp-0x20]
   140004d52:	cmp    r9,0x10
   140004d56:	cmovae rcx,QWORD PTR [rbp-0x20]
   140004d5b:	lea    r8,[rbp-0x20]
   140004d5f:	cmovae r8,QWORD PTR [rbp-0x20]
   140004d64:	lea    r9,[rcx+rdx*1]
   140004d68:	lea    rdx,[rdi+0x84]
   140004d6f:	lea    rax,[rbp+0x38]
   140004d73:	mov    QWORD PTR [rsp+0x38],rax
   140004d78:	lea    rax,[rbp-0x2f]
   140004d7c:	mov    QWORD PTR [rsp+0x30],rax
   140004d81:	lea    rax,[rbp-0x30]
   140004d85:	mov    QWORD PTR [rsp+0x28],rax
   140004d8a:	lea    rax,[rbp+0x30]
   140004d8e:	mov    QWORD PTR [rsp+0x20],rax
   140004d93:	mov    rcx,QWORD PTR [rdi+0x78]
   140004d97:	call   QWORD PTR [rip+0x22c3]        # 0x140007060
   140004d9d:	test   eax,eax
   140004d9f:	js     0x140004e7b
   140004da5:	cmp    eax,0x1
   140004da8:	jle    0x140004dbc
   140004daa:	cmp    eax,0x3
   140004dad:	jne    0x140004e7b
   140004db3:	cmp    QWORD PTR [rbp-0x10],0x1
   140004db8:	jae    0x140004df8
   140004dba:	jmp    0x140004de6
   140004dbc:	lea    rax,[rbp-0x30]
   140004dc0:	lea    rcx,[rbp-0x20]
   140004dc4:	cmp    QWORD PTR [rbp+0x38],rax
   140004dc8:	jne    0x140004e1e
   140004dca:	lea    rax,[rbp-0x20]
   140004dce:	cmp    QWORD PTR [rbp-0x8],0x10
   140004dd3:	cmovae rax,QWORD PTR [rbp-0x20]
   140004dd8:	mov    r8,QWORD PTR [rbp+0x30]
   140004ddc:	sub    r8,rax
   140004ddf:	xor    edx,edx
   140004de1:	call   0x140003860
   140004de6:	mov    rcx,QWORD PTR [rdi+0x90]
   140004ded:	call   QWORD PTR [rip+0x23b5]        # 0x1400071a8
   140004df3:	jmp    0x140004cb2
   140004df8:	lea    r8,[rbp-0x20]
   140004dfc:	cmp    QWORD PTR [rbp-0x8],0x10
   140004e01:	cmovae r8,QWORD PTR [rbp-0x20]
   140004e06:	mov    edx,0x1
   140004e0b:	mov    r9d,edx
   140004e0e:	lea    rcx,[rbp-0x30]
   140004e12:	call   QWORD PTR [rip+0x23e0]        # 0x1400071f8
   140004e18:	movzx  esi,BYTE PTR [rbp-0x30]
   140004e1c:	jmp    0x140004e7b
   140004e1e:	cmp    QWORD PTR [rbp-0x8],0x10
   140004e23:	cmovae rcx,QWORD PTR [rbp-0x20]
   140004e28:	mov    eax,DWORD PTR [rbp-0x10]
   140004e2b:	mov    rdx,QWORD PTR [rbp+0x30]
   140004e2f:	sub    eax,edx
   140004e31:	add    eax,ecx
   140004e33:	movsxd rbx,eax
   140004e36:	test   eax,eax
   140004e38:	jle    0x140004e18
   140004e3a:	nop    WORD PTR [rax+rax*1+0x0]
   140004e40:	dec    rbx
   140004e43:	movsx  ecx,BYTE PTR [rbx+rdx*1]
   140004e47:	mov    rdx,QWORD PTR [rdi+0x90]
   140004e4e:	call   QWORD PTR [rip+0x238c]        # 0x1400071e0
   140004e54:	test   rbx,rbx
   140004e57:	jle    0x140004e18
   140004e59:	mov    rdx,QWORD PTR [rbp+0x30]
   140004e5d:	jmp    0x140004e40
   140004e5f:	lea    rcx,[rip+0x29da]        # 0x140007840
   140004e66:	call   QWORD PTR [rip+0x21cc]        # 0x140007038
   140004e6c:	int3   
   140004e6d:	lea    rcx,[rip+0x29cc]        # 0x140007840
   140004e74:	call   QWORD PTR [rip+0x21be]        # 0x140007038
   140004e7a:	nop
   140004e7b:	cmp    QWORD PTR [rbp-0x8],0x10
   140004e80:	jb     0x140004e8b
   140004e82:	mov    rcx,QWORD PTR [rbp-0x20]
   140004e86:	call   0x14000615a
   140004e8b:	mov    eax,esi
   140004e8d:	mov    rbx,QWORD PTR [rsp+0xb0]
   140004e95:	add    rsp,0x70
   140004e99:	pop    r15
   140004e9b:	pop    r14
   140004e9d:	pop    rdi
   140004e9e:	pop    rsi
   140004e9f:	pop    rbp
   140004ea0:	ret    
   140004ea1:	int3   
   140004ea2:	int3   
   140004ea3:	int3   
   140004ea4:	int3   
   140004ea5:	int3   
   140004ea6:	int3   
   140004ea7:	int3   
   140004ea8:	int3   
   140004ea9:	int3   
   140004eaa:	int3   
   140004eab:	int3   
   140004eac:	int3   
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	rex push rbx
   140004eb2:	sub    rsp,0x20
   140004eb6:	mov    rax,QWORD PTR [rcx+0x38]
   140004eba:	mov    rbx,rcx
   140004ebd:	mov    rcx,QWORD PTR [rax]
   140004ec0:	test   rcx,rcx
   140004ec3:	je     0x140004edd
   140004ec5:	mov    rax,QWORD PTR [rbx+0x50]
   140004ec9:	movsxd rdx,DWORD PTR [rax]
   140004ecc:	add    rdx,rcx
   140004ecf:	cmp    rcx,rdx
   140004ed2:	jae    0x140004edd
   140004ed4:	movzx  eax,BYTE PTR [rcx]
   140004ed7:	add    rsp,0x20
   140004edb:	pop    rbx
   140004edc:	ret    
   140004edd:	mov    rax,QWORD PTR [rbx]
   140004ee0:	mov    rcx,rbx
   140004ee3:	mov    QWORD PTR [rsp+0x30],rdi
   140004ee8:	call   QWORD PTR [rax+0x38]
   140004eeb:	mov    edi,eax
   140004eed:	cmp    eax,0xffffffff
   140004ef0:	jne    0x140004eff
   140004ef2:	or     eax,eax
   140004ef4:	mov    rdi,QWORD PTR [rsp+0x30]
   140004ef9:	add    rsp,0x20
   140004efd:	pop    rbx
   140004efe:	ret    
   140004eff:	mov    rax,QWORD PTR [rbx]
   140004f02:	mov    edx,edi
   140004f04:	mov    rcx,rbx
   140004f07:	call   QWORD PTR [rax+0x20]
   140004f0a:	mov    eax,edi
   140004f0c:	mov    rdi,QWORD PTR [rsp+0x30]
   140004f11:	add    rsp,0x20
   140004f15:	pop    rbx
   140004f16:	ret    
   140004f17:	int3   
   140004f18:	int3   
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	mov    QWORD PTR [rsp+0x8],rcx
   140004f25:	push   rbp
   140004f26:	push   rsi
   140004f27:	push   rdi
   140004f28:	lea    rbp,[rsp-0x90]
   140004f30:	sub    rsp,0x190
   140004f37:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140004f40:	mov    QWORD PTR [rsp+0x1c0],rbx
   140004f48:	mov    rbx,rcx
   140004f4b:	xor    esi,esi
   140004f4d:	mov    DWORD PTR [rbp+0xb8],esi
   140004f53:	mov    edi,esi
   140004f55:	mov    QWORD PTR [rsp+0x48],0xf
   140004f5e:	mov    QWORD PTR [rsp+0x40],rsi
   140004f63:	mov    BYTE PTR [rsp+0x30],dil
   140004f68:	lea    r8d,[rsi+0x10]
   140004f6c:	lea    rdx,[rip+0x27cd]        # 0x140007740
   140004f73:	lea    rcx,[rsp+0x30]
   140004f78:	call   0x1400030d0
   140004f7d:	nop
   140004f7e:	lea    rax,[rip+0x287b]        # 0x140007800
   140004f85:	mov    QWORD PTR [rbp-0x80],rax
   140004f89:	mov    rax,QWORD PTR [rip+0x21a8]        # 0x140007138
   140004f90:	mov    QWORD PTR [rbp+0x30],rax
   140004f94:	mov    DWORD PTR [rbp+0xb8],0x1
   140004f9e:	mov    rdx,rbx
   140004fa1:	lea    rcx,[rsp+0x50]
   140004fa6:	call   QWORD PTR [rip+0x2384]        # 0x140007330
   140004fac:	nop
   140004fad:	cmp    QWORD PTR [rax+0x18],0x8
   140004fb2:	jb     0x140004fb7
   140004fb4:	mov    rax,QWORD PTR [rax]
   140004fb7:	mov    DWORD PTR [rsp+0x20],esi
   140004fbb:	mov    r9d,0x40
   140004fc1:	lea    r8d,[r9-0x3e]
   140004fc5:	mov    rdx,rax
   140004fc8:	lea    rcx,[rbp-0x80]
   140004fcc:	call   0x140001850
   140004fd1:	nop
   140004fd2:	cmp    QWORD PTR [rsp+0x68],0x8
   140004fd8:	jb     0x140004fe4
   140004fda:	mov    rcx,QWORD PTR [rsp+0x50]
   140004fdf:	call   0x14000615a
   140004fe4:	mov    QWORD PTR [rsp+0x68],0x7
   140004fed:	mov    QWORD PTR [rsp+0x60],rsi
   140004ff2:	mov    WORD PTR [rsp+0x50],si
   140004ff7:	mov    rax,QWORD PTR [rbp-0x80]
   140004ffb:	movsxd rcx,DWORD PTR [rax+0x4]
   140004fff:	lea    rax,[rip+0x27f2]        # 0x1400077f8
   140005006:	mov    QWORD PTR [rbp+rcx*1-0x80],rax
   14000500b:	mov    rax,QWORD PTR [rbp-0x80]
   14000500f:	movsxd rcx,DWORD PTR [rax+0x4]
   140005013:	lea    edx,[rcx-0xb0]
   140005019:	mov    DWORD PTR [rsp+rcx*1+0x7c],edx
   14000501d:	mov    rax,QWORD PTR [rbp-0x80]
   140005021:	movsxd rcx,DWORD PTR [rax+0x4]
   140005025:	test   BYTE PTR [rbp+rcx*1-0x70],0x6
   14000502a:	je     0x140005033
   14000502c:	mov    edi,0x1
   140005031:	jmp    0x140005042
   140005033:	lea    rdx,[rsp+0x30]
   140005038:	lea    rcx,[rbp-0x80]
   14000503c:	call   0x140001070
   140005041:	nop
   140005042:	lea    rcx,[rbp+0x30]
   140005046:	call   0x140001c20
   14000504b:	mov    rax,QWORD PTR [rip+0x20de]        # 0x140007130
   140005052:	mov    QWORD PTR [rbp+0x30],rax
   140005056:	lea    rcx,[rbp+0x30]
   14000505a:	call   QWORD PTR [rip+0x2030]        # 0x140007090
   140005060:	nop
   140005061:	cmp    QWORD PTR [rsp+0x48],0x10
   140005067:	jb     0x140005073
   140005069:	mov    rcx,QWORD PTR [rsp+0x30]
   14000506e:	call   0x14000615a
   140005073:	mov    QWORD PTR [rsp+0x48],0xf
   14000507c:	mov    QWORD PTR [rsp+0x40],rsi
   140005081:	mov    BYTE PTR [rsp+0x30],0x0
   140005086:	cmp    QWORD PTR [rbx+0x18],0x8
   14000508b:	jb     0x140005095
   14000508d:	mov    rcx,QWORD PTR [rbx]
   140005090:	call   0x14000615a
   140005095:	mov    QWORD PTR [rbx+0x18],0x7
   14000509d:	mov    QWORD PTR [rbx+0x10],rsi
   1400050a1:	mov    WORD PTR [rbx],si
   1400050a4:	mov    eax,edi
   1400050a6:	mov    rbx,QWORD PTR [rsp+0x1c0]
   1400050ae:	add    rsp,0x190
   1400050b5:	pop    rdi
   1400050b6:	pop    rsi
   1400050b7:	pop    rbp
   1400050b8:	ret    
   1400050b9:	int3   
   1400050ba:	int3   
   1400050bb:	int3   
   1400050bc:	int3   
   1400050bd:	int3   
   1400050be:	int3   
   1400050bf:	int3   
   1400050c0:	mov    eax,DWORD PTR [rcx]
   1400050c2:	ret    
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	int3   
   1400050c9:	int3   
   1400050ca:	int3   
   1400050cb:	int3   
   1400050cc:	int3   
   1400050cd:	int3   
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	mov    eax,DWORD PTR [rcx]
   1400050d2:	ret    
   1400050d3:	int3   
   1400050d4:	int3   
   1400050d5:	int3   
   1400050d6:	int3   
   1400050d7:	int3   
   1400050d8:	int3   
   1400050d9:	int3   
   1400050da:	int3   
   1400050db:	int3   
   1400050dc:	int3   
   1400050dd:	int3   
   1400050de:	int3   
   1400050df:	int3   
   1400050e0:	rex.W jmp QWORD PTR [rip+0x20b1]        # 0x140007198
   1400050e7:	int3   
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	int3   
   1400050ed:	int3   
   1400050ee:	int3   
   1400050ef:	int3   
   1400050f0:	mov    rax,rsp
   1400050f3:	push   rbp
   1400050f4:	push   r12
   1400050f6:	push   r13
   1400050f8:	push   r14
   1400050fa:	push   r15
   1400050fc:	lea    rbp,[rax-0x5f]
   140005100:	sub    rsp,0xb0
   140005107:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   14000510f:	mov    QWORD PTR [rax+0x8],rbx
   140005113:	mov    QWORD PTR [rax+0x10],rsi
   140005117:	mov    QWORD PTR [rax+0x18],rdi
   14000511b:	mov    r14,rdx
   14000511e:	cmp    ecx,0x5
   140005121:	jge    0x14000512d
   140005123:	mov    eax,0x1
   140005128:	jmp    0x14000546f
   14000512d:	mov    QWORD PTR [rbp-0x41],0x7
   140005135:	xor    r12d,r12d
   140005138:	mov    QWORD PTR [rbp-0x49],r12
   14000513c:	mov    WORD PTR [rbp-0x59],r12w
   140005141:	mov    QWORD PTR [rbp-0x21],0x7
   140005149:	mov    r9d,r12d
   14000514c:	mov    QWORD PTR [rbp-0x29],r12
   140005150:	mov    WORD PTR [rbp-0x39],r12w
   140005155:	mov    QWORD PTR [rbp-0x1],0x7
   14000515d:	mov    r10d,r12d
   140005160:	mov    QWORD PTR [rbp-0x9],r12
   140005164:	mov    WORD PTR [rbp-0x19],r12w
   140005169:	mov    esi,0x1
   14000516e:	mov    edi,esi
   140005170:	movsxd r15,ecx
   140005173:	or     r13,0xffffffffffffffff
   140005177:	cmp    rsi,r15
   14000517a:	jge    0x140005374
   140005180:	mov    rdx,QWORD PTR [r14+rdi*8]
   140005184:	lea    rcx,[rbp+0x7]
   140005188:	call   QWORD PTR [rip+0x21aa]        # 0x140007338
   14000518e:	mov    rbx,rax
   140005191:	lea    rax,[rbp-0x59]
   140005195:	cmp    rax,rbx
   140005198:	je     0x1400051c7
   14000519a:	cmp    QWORD PTR [rbp-0x41],0x8
   14000519f:	jb     0x1400051aa
   1400051a1:	mov    rcx,QWORD PTR [rbp-0x59]
   1400051a5:	call   0x14000615a
   1400051aa:	mov    QWORD PTR [rbp-0x41],0x7
   1400051b2:	mov    QWORD PTR [rbp-0x49],r12
   1400051b6:	mov    WORD PTR [rbp-0x59],r12w
   1400051bb:	mov    rdx,rbx
   1400051be:	lea    rcx,[rbp-0x59]
   1400051c2:	call   0x140002260
   1400051c7:	cmp    QWORD PTR [rbp+0x1f],0x8
   1400051cc:	jb     0x1400051d7
   1400051ce:	mov    rcx,QWORD PTR [rbp+0x7]
   1400051d2:	call   0x14000615a
   1400051d7:	lea    rcx,[rbp-0x59]
   1400051db:	cmp    QWORD PTR [rbp-0x41],0x8
   1400051e0:	cmovae rcx,QWORD PTR [rbp-0x59]
   1400051e5:	mov    r8d,0x4
   1400051eb:	mov    r9,QWORD PTR [rbp-0x49]
   1400051ef:	cmp    r9,r8
   1400051f2:	cmovb  r8,r9
   1400051f6:	test   r8,r8
   1400051f9:	je     0x140005225
   1400051fb:	lea    rdx,[rip+0x2606]        # 0x140007808
   140005202:	movzx  eax,WORD PTR [rdx]
   140005205:	cmp    WORD PTR [rcx],ax
   140005208:	jne    0x140005219
   14000520a:	add    rcx,0x2
   14000520e:	add    rdx,0x2
   140005212:	dec    r8
   140005215:	jne    0x140005202
   140005217:	jmp    0x140005225
   140005219:	mov    r8d,esi
   14000521c:	cmp    WORD PTR [rcx],ax
   14000521f:	cmovb  r8d,r13d
   140005223:	jmp    0x140005228
   140005225:	mov    r8d,r12d
   140005228:	movsxd rax,r8d
   14000522b:	test   r8d,r8d
   14000522e:	jne    0x140005245
   140005230:	cmp    r9,0x4
   140005234:	jae    0x14000523b
   140005236:	mov    eax,r13d
   140005239:	jmp    0x140005245
   14000523b:	mov    eax,r12d
   14000523e:	cmp    r9,0x4
   140005242:	setne  al
   140005245:	test   eax,eax
   140005247:	jne    0x140005292
   140005249:	mov    rdx,QWORD PTR [r14+rdi*8+0x8]
   14000524e:	lea    rcx,[rbp+0x7]
   140005252:	call   QWORD PTR [rip+0x20e0]        # 0x140007338
   140005258:	mov    rbx,rax
   14000525b:	lea    rax,[rbp-0x39]
   14000525f:	cmp    rax,rbx
   140005262:	je     0x14000534f
   140005268:	cmp    QWORD PTR [rbp-0x21],0x8
   14000526d:	jb     0x140005278
   14000526f:	mov    rcx,QWORD PTR [rbp-0x39]
   140005273:	call   0x14000615a
   140005278:	mov    QWORD PTR [rbp-0x21],0x7
   140005280:	mov    QWORD PTR [rbp-0x29],r12
   140005284:	mov    WORD PTR [rbp-0x39],r12w
   140005289:	lea    rcx,[rbp-0x39]
   14000528d:	jmp    0x140005347
   140005292:	lea    rcx,[rbp-0x59]
   140005296:	cmp    QWORD PTR [rbp-0x41],0x8
   14000529b:	cmovae rcx,QWORD PTR [rbp-0x59]
   1400052a0:	mov    r8d,0xb
   1400052a6:	cmp    r9,r8
   1400052a9:	cmovb  r8,r9
   1400052ad:	test   r8,r8
   1400052b0:	je     0x1400052e3
   1400052b2:	lea    rdx,[rip+0x255f]        # 0x140007818
   1400052b9:	nop    DWORD PTR [rax+0x0]
   1400052c0:	movzx  eax,WORD PTR [rdx]
   1400052c3:	cmp    WORD PTR [rcx],ax
   1400052c6:	jne    0x1400052d7
   1400052c8:	add    rcx,0x2
   1400052cc:	add    rdx,0x2
   1400052d0:	dec    r8
   1400052d3:	jne    0x1400052c0
   1400052d5:	jmp    0x1400052e3
   1400052d7:	mov    r8d,esi
   1400052da:	cmp    WORD PTR [rcx],ax
   1400052dd:	cmovb  r8d,r13d
   1400052e1:	jmp    0x1400052e6
   1400052e3:	mov    r8d,r12d
   1400052e6:	movsxd rax,r8d
   1400052e9:	test   r8d,r8d
   1400052ec:	jne    0x140005303
   1400052ee:	cmp    r9,0xb
   1400052f2:	jae    0x1400052f9
   1400052f4:	mov    eax,r13d
   1400052f7:	jmp    0x140005303
   1400052f9:	mov    eax,r12d
   1400052fc:	cmp    r9,0xb
   140005300:	setne  al
   140005303:	test   eax,eax
   140005305:	jne    0x14000535f
   140005307:	mov    rdx,QWORD PTR [r14+rdi*8+0x8]
   14000530c:	lea    rcx,[rbp+0x7]
   140005310:	call   QWORD PTR [rip+0x2022]        # 0x140007338
   140005316:	mov    rbx,rax
   140005319:	lea    rax,[rbp-0x19]
   14000531d:	cmp    rax,rbx
   140005320:	je     0x14000534f
   140005322:	cmp    QWORD PTR [rbp-0x1],0x8
   140005327:	jb     0x140005332
   140005329:	mov    rcx,QWORD PTR [rbp-0x19]
   14000532d:	call   0x14000615a
   140005332:	mov    QWORD PTR [rbp-0x1],0x7
   14000533a:	mov    QWORD PTR [rbp-0x9],r12
   14000533e:	mov    WORD PTR [rbp-0x19],r12w
   140005343:	lea    rcx,[rbp-0x19]
   140005347:	mov    rdx,rbx
   14000534a:	call   0x140002260
   14000534f:	cmp    QWORD PTR [rbp+0x1f],0x8
   140005354:	jb     0x14000535f
   140005356:	mov    rcx,QWORD PTR [rbp+0x7]
   14000535a:	call   0x14000615a
   14000535f:	add    rdi,0x2
   140005363:	cmp    rdi,r15
   140005366:	jl     0x140005180
   14000536c:	mov    r9,QWORD PTR [rbp-0x29]
   140005370:	mov    r10,QWORD PTR [rbp-0x9]
   140005374:	lea    rcx,[rbp-0x39]
   140005378:	cmp    QWORD PTR [rbp-0x21],0x8
   14000537d:	cmovae rcx,QWORD PTR [rbp-0x39]
   140005382:	mov    r8d,0x7
   140005388:	cmp    r9,r8
   14000538b:	cmovb  r8,r9
   14000538f:	test   r8,r8
   140005392:	je     0x1400053c3
   140005394:	lea    rdx,[rip+0x2495]        # 0x140007830
   14000539b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400053a0:	movzx  eax,WORD PTR [rdx]
   1400053a3:	cmp    WORD PTR [rcx],ax
   1400053a6:	jne    0x1400053b7
   1400053a8:	add    rcx,0x2
   1400053ac:	add    rdx,0x2
   1400053b0:	dec    r8
   1400053b3:	jne    0x1400053a0
   1400053b5:	jmp    0x1400053c3
   1400053b7:	mov    r8d,esi
   1400053ba:	cmp    WORD PTR [rcx],ax
   1400053bd:	cmovb  r8d,r13d
   1400053c1:	jmp    0x1400053c6
   1400053c3:	mov    r8d,r12d
   1400053c6:	movsxd rax,r8d
   1400053c9:	test   r8d,r8d
   1400053cc:	jne    0x1400053e3
   1400053ce:	cmp    r9,0x7
   1400053d2:	jae    0x1400053d9
   1400053d4:	mov    eax,r13d
   1400053d7:	jmp    0x1400053e3
   1400053d9:	mov    eax,r12d
   1400053dc:	cmp    r9,0x7
   1400053e0:	setne  al
   1400053e3:	test   eax,eax
   1400053e5:	jne    0x14000541b
   1400053e7:	test   r10,r10
   1400053ea:	je     0x14000541b
   1400053ec:	mov    QWORD PTR [rbp+0x1f],0x7
   1400053f4:	mov    QWORD PTR [rbp+0x17],r12
   1400053f8:	mov    WORD PTR [rbp+0x7],r12w
   1400053fd:	mov    r9,r13
   140005400:	xor    r8d,r8d
   140005403:	lea    rdx,[rbp-0x19]
   140005407:	lea    rcx,[rbp+0x7]
   14000540b:	call   0x140003300
   140005410:	lea    rcx,[rbp+0x7]
   140005414:	call   0x140004f20
   140005419:	mov    esi,eax
   14000541b:	cmp    QWORD PTR [rbp-0x1],0x8
   140005420:	jb     0x14000542b
   140005422:	mov    rcx,QWORD PTR [rbp-0x19]
   140005426:	call   0x14000615a
   14000542b:	mov    QWORD PTR [rbp-0x1],0x7
   140005433:	mov    QWORD PTR [rbp-0x9],r12
   140005437:	mov    WORD PTR [rbp-0x19],r12w
   14000543c:	cmp    QWORD PTR [rbp-0x21],0x8
   140005441:	jb     0x14000544c
   140005443:	mov    rcx,QWORD PTR [rbp-0x39]
   140005447:	call   0x14000615a
   14000544c:	mov    QWORD PTR [rbp-0x21],0x7
   140005454:	mov    QWORD PTR [rbp-0x29],r12
   140005458:	mov    WORD PTR [rbp-0x39],r12w
   14000545d:	cmp    QWORD PTR [rbp-0x41],0x8
   140005462:	jb     0x14000546d
   140005464:	mov    rcx,QWORD PTR [rbp-0x59]
   140005468:	call   0x14000615a
   14000546d:	mov    eax,esi
   14000546f:	lea    r11,[rsp+0xb0]
   140005477:	mov    rbx,QWORD PTR [r11+0x30]
   14000547b:	mov    rsi,QWORD PTR [r11+0x38]
   14000547f:	mov    rdi,QWORD PTR [r11+0x40]
   140005483:	mov    rsp,r11
   140005486:	pop    r15
   140005488:	pop    r14
   14000548a:	pop    r13
   14000548c:	pop    r12
   14000548e:	pop    rbp
   14000548f:	ret    
   140005490:	test   r8,r8
   140005493:	je     0x1400054aa
   140005495:	movzx  eax,WORD PTR [rdx]
   140005498:	cmp    WORD PTR [rcx],ax
   14000549b:	jne    0x1400054ad
   14000549d:	add    rcx,0x2
   1400054a1:	add    rdx,0x2
   1400054a5:	dec    r8
   1400054a8:	jne    0x140005495
   1400054aa:	xor    eax,eax
   1400054ac:	ret    
   1400054ad:	movzx  edx,WORD PTR [rdx]
   1400054b0:	or     r8d,0xffffffff
   1400054b4:	mov    eax,0x1
   1400054b9:	cmp    WORD PTR [rcx],dx
   1400054bc:	cmovb  eax,r8d
   1400054c0:	ret    
   1400054c1:	int3   
   1400054c2:	int3   
   1400054c3:	int3   
   1400054c4:	int3   
   1400054c5:	int3   
   1400054c6:	int3   
   1400054c7:	int3   
   1400054c8:	int3   
   1400054c9:	int3   
   1400054ca:	int3   
   1400054cb:	int3   
   1400054cc:	int3   
   1400054cd:	int3   
   1400054ce:	int3   
   1400054cf:	int3   
   1400054d0:	rex push rbx
   1400054d2:	sub    rsp,0x20
   1400054d6:	add    r8,r8
   1400054d9:	mov    rbx,rcx
   1400054dc:	call   0x1400062f6
   1400054e1:	mov    rax,rbx
   1400054e4:	add    rsp,0x20
   1400054e8:	pop    rbx
   1400054e9:	ret    
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	int3   
   1400054ef:	int3   
   1400054f0:	add    r8,r8
   1400054f3:	rex.W jmp QWORD PTR [rip+0x1d06]        # 0x140007200
   1400054fa:	int3   
   1400054fb:	int3   
   1400054fc:	int3   
   1400054fd:	int3   
   1400054fe:	int3   
   1400054ff:	int3   
   140005500:	mov    QWORD PTR [rsp+0x8],rcx
   140005505:	push   rsi
   140005506:	push   rdi
   140005507:	push   r12
   140005509:	push   r14
   14000550b:	push   r15
   14000550d:	sub    rsp,0x40
   140005511:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000551a:	mov    QWORD PTR [rsp+0x80],rbx
   140005522:	mov    r15,rdx
   140005525:	mov    rsi,rcx
   140005528:	xor    ebx,ebx
   14000552a:	mov    DWORD PTR [rsp+0x78],ebx
   14000552e:	cmp    BYTE PTR [rdx],bl
   140005530:	jne    0x140005537
   140005532:	xor    r14d,r14d
   140005535:	jmp    0x140005549
   140005537:	or     r14,0xffffffffffffffff
   14000553b:	nop    DWORD PTR [rax+rax*1+0x0]
   140005540:	inc    r14
   140005543:	cmp    BYTE PTR [rdx+r14*1],bl
   140005547:	jne    0x140005540
   140005549:	mov    rax,QWORD PTR [rcx]
   14000554c:	movsxd rcx,DWORD PTR [rax+0x4]
   140005550:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140005555:	test   rdi,rdi
   140005558:	jle    0x140005564
   14000555a:	cmp    rdi,r14
   14000555d:	jle    0x140005564
   14000555f:	sub    rdi,r14
   140005562:	jmp    0x140005566
   140005564:	xor    edi,edi
   140005566:	mov    r12,rsi
   140005569:	mov    QWORD PTR [rsp+0x28],rsi
   14000556e:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140005573:	test   rcx,rcx
   140005576:	je     0x14000557f
   140005578:	mov    rax,QWORD PTR [rcx]
   14000557b:	call   QWORD PTR [rax+0x8]
   14000557e:	nop
   14000557f:	mov    rax,QWORD PTR [rsi]
   140005582:	movsxd rcx,DWORD PTR [rax+0x4]
   140005586:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14000558b:	jne    0x1400055a2
   14000558d:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140005592:	test   rcx,rcx
   140005595:	je     0x1400055a2
   140005597:	cmp    rcx,rsi
   14000559a:	je     0x1400055a2
   14000559c:	call   QWORD PTR [rip+0x1b56]        # 0x1400070f8
   1400055a2:	mov    rax,QWORD PTR [rsi]
   1400055a5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400055a9:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400055ae:	sete   al
   1400055b1:	mov    BYTE PTR [rsp+0x30],al
   1400055b5:	test   al,al
   1400055b7:	jne    0x1400055c3
   1400055b9:	mov    ebx,0x4
   1400055be:	jmp    0x140005677
   1400055c3:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400055c7:	and    eax,0x1c0
   1400055cc:	cmp    eax,0x40
   1400055cf:	je     0x140005604
   1400055d1:	test   rdi,rdi
   1400055d4:	jle    0x140005600
   1400055d6:	mov    rax,QWORD PTR [rsi]
   1400055d9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400055dd:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400055e2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400055e7:	call   QWORD PTR [rip+0x1ac3]        # 0x1400070b0
   1400055ed:	cmp    eax,0xffffffff
   1400055f0:	jne    0x1400055fb
   1400055f2:	or     ebx,0x4
   1400055f5:	mov    DWORD PTR [rsp+0x78],ebx
   1400055f9:	jmp    0x140005600
   1400055fb:	dec    rdi
   1400055fe:	jmp    0x1400055d1
   140005600:	test   ebx,ebx
   140005602:	jne    0x140005657
   140005604:	mov    rax,QWORD PTR [rsi]
   140005607:	movsxd rcx,DWORD PTR [rax+0x4]
   14000560b:	mov    r8,r14
   14000560e:	mov    rdx,r15
   140005611:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140005616:	call   QWORD PTR [rip+0x1a9c]        # 0x1400070b8
   14000561c:	cmp    rax,r14
   14000561f:	je     0x140005628
   140005621:	mov    ebx,0x4
   140005626:	jmp    0x140005653
   140005628:	test   rdi,rdi
   14000562b:	jle    0x140005657
   14000562d:	mov    rax,QWORD PTR [rsi]
   140005630:	movsxd rcx,DWORD PTR [rax+0x4]
   140005634:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140005639:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000563e:	call   QWORD PTR [rip+0x1a6c]        # 0x1400070b0
   140005644:	cmp    eax,0xffffffff
   140005647:	jne    0x14000564e
   140005649:	or     ebx,0x4
   14000564c:	jmp    0x140005653
   14000564e:	dec    rdi
   140005651:	jmp    0x140005628
   140005653:	mov    DWORD PTR [rsp+0x78],ebx
   140005657:	mov    rax,QWORD PTR [rsi]
   14000565a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000565e:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140005667:	jmp    0x140005677
   140005669:	mov    rsi,QWORD PTR [rsp+0x70]
   14000566e:	mov    ebx,DWORD PTR [rsp+0x78]
   140005672:	mov    r12,QWORD PTR [rsp+0x28]
   140005677:	mov    rax,QWORD PTR [rsi]
   14000567a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000567e:	add    rcx,rsi
   140005681:	xor    r8d,r8d
   140005684:	mov    edx,ebx
   140005686:	call   QWORD PTR [rip+0x1a4c]        # 0x1400070d8
   14000568c:	nop
   14000568d:	call   QWORD PTR [rip+0x1ae5]        # 0x140007178
   140005693:	test   al,al
   140005695:	jne    0x1400056a0
   140005697:	mov    rcx,r12
   14000569a:	call   QWORD PTR [rip+0x1a50]        # 0x1400070f0
   1400056a0:	mov    rax,QWORD PTR [r12]
   1400056a4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400056a8:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   1400056ad:	test   rcx,rcx
   1400056b0:	je     0x1400056b8
   1400056b2:	mov    rax,QWORD PTR [rcx]
   1400056b5:	call   QWORD PTR [rax+0x10]
   1400056b8:	mov    rax,rsi
   1400056bb:	mov    rbx,QWORD PTR [rsp+0x80]
   1400056c3:	add    rsp,0x40
   1400056c7:	pop    r15
   1400056c9:	pop    r14
   1400056cb:	pop    r12
   1400056cd:	pop    rdi
   1400056ce:	pop    rsi
   1400056cf:	ret    
   1400056d0:	rex push rbx
   1400056d2:	sub    rsp,0x30
   1400056d6:	xor    ebx,ebx
   1400056d8:	cmp    BYTE PTR [rdx],bl
   1400056da:	jne    0x1400056e0
   1400056dc:	mov    eax,ebx
   1400056de:	jmp    0x1400056ec
   1400056e0:	or     rax,0xffffffffffffffff
   1400056e4:	inc    rax
   1400056e7:	cmp    BYTE PTR [rdx+rax*1],bl
   1400056ea:	jne    0x1400056e4
   1400056ec:	mov    r8,QWORD PTR [rcx+0x10]
   1400056f0:	mov    r9,rdx
   1400056f3:	xor    edx,edx
   1400056f5:	mov    QWORD PTR [rsp+0x20],rax
   1400056fa:	call   0x140005ba0
   1400056ff:	test   eax,eax
   140005701:	sete   al
   140005704:	add    rsp,0x30
   140005708:	pop    rbx
   140005709:	ret    
   14000570a:	int3   
   14000570b:	int3   
   14000570c:	int3   
   14000570d:	int3   
   14000570e:	int3   
   14000570f:	int3   
   140005710:	rex push rbx
   140005712:	sub    rsp,0x20
   140005716:	mov    rax,QWORD PTR [rcx]
   140005719:	mov    rbx,rcx
   14000571c:	mov    dl,0xa
   14000571e:	movsxd rcx,DWORD PTR [rax+0x4]
   140005722:	add    rcx,rbx
   140005725:	call   QWORD PTR [rip+0x1a1d]        # 0x140007148
   14000572b:	mov    rcx,rbx
   14000572e:	movzx  edx,al
   140005731:	call   QWORD PTR [rip+0x1a21]        # 0x140007158
   140005737:	mov    rcx,rbx
   14000573a:	call   QWORD PTR [rip+0x19b8]        # 0x1400070f8
   140005740:	mov    rax,rbx
   140005743:	add    rsp,0x20
   140005747:	pop    rbx
   140005748:	ret    
   140005749:	int3   
   14000574a:	int3   
   14000574b:	int3   
   14000574c:	int3   
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	int3   
   140005750:	mov    QWORD PTR [rsp+0x8],rcx
   140005755:	push   rbx
   140005756:	push   rbp
   140005757:	push   rsi
   140005758:	push   rdi
   140005759:	push   r14
   14000575b:	sub    rsp,0x30
   14000575f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005768:	mov    r14d,r9d
   14000576b:	mov    ebp,r8d
   14000576e:	mov    rdi,rdx
   140005771:	mov    rbx,rcx
   140005774:	mov    DWORD PTR [rsp+0x70],0x0
   14000577c:	cmp    DWORD PTR [rsp+0x80],0x0
   140005784:	je     0x1400057b4
   140005786:	lea    rax,[rip+0x205b]        # 0x1400077e8
   14000578d:	mov    QWORD PTR [rcx],rax
   140005790:	mov    rax,QWORD PTR [rip+0x1999]        # 0x140007130
   140005797:	mov    QWORD PTR [rcx+0xa8],rax
   14000579e:	mov    rax,QWORD PTR [rip+0x1993]        # 0x140007138
   1400057a5:	mov    QWORD PTR [rcx+0xa8],rax
   1400057ac:	mov    DWORD PTR [rsp+0x70],0x1
   1400057b4:	lea    rsi,[rcx+0x8]
   1400057b8:	xor    r9d,r9d
   1400057bb:	xor    r8d,r8d
   1400057be:	mov    rdx,rsi
   1400057c1:	call   QWORD PTR [rip+0x1919]        # 0x1400070e0
   1400057c7:	nop
   1400057c8:	mov    rax,QWORD PTR [rbx]
   1400057cb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400057cf:	lea    rax,[rip+0x200a]        # 0x1400077e0
   1400057d6:	mov    QWORD PTR [rcx+rbx*1],rax
   1400057da:	mov    rax,QWORD PTR [rbx]
   1400057dd:	movsxd rcx,DWORD PTR [rax+0x4]
   1400057e1:	lea    edx,[rcx-0xa8]
   1400057e7:	mov    DWORD PTR [rcx+rbx*1-0x4],edx
   1400057eb:	mov    QWORD PTR [rsp+0x68],rsi
   1400057f0:	mov    rcx,rsi
   1400057f3:	call   QWORD PTR [rip+0x189f]        # 0x140007098
   1400057f9:	nop
   1400057fa:	lea    rax,[rip+0x1f5f]        # 0x140007760
   140005801:	mov    QWORD PTR [rsi],rax
   140005804:	mov    BYTE PTR [rsi+0x88],0x0
   14000580b:	mov    BYTE PTR [rsi+0x81],0x0
   140005812:	mov    rcx,rsi
   140005815:	call   QWORD PTR [rip+0x18ad]        # 0x1400070c8
   14000581b:	mov    QWORD PTR [rsi+0x90],0x0
   140005826:	mov    eax,DWORD PTR [rip+0x5bd4]        # 0x14000b400
   14000582c:	mov    DWORD PTR [rsi+0x84],eax
   140005832:	mov    QWORD PTR [rsi+0x78],0x0
   14000583a:	cmp    QWORD PTR [rdi+0x18],0x10
   14000583f:	jb     0x140005844
   140005841:	mov    rdi,QWORD PTR [rdi]
   140005844:	or     ebp,0x2
   140005847:	mov    r9d,r14d
   14000584a:	mov    r8d,ebp
   14000584d:	mov    rdx,rdi
   140005850:	mov    rcx,rsi
   140005853:	call   0x140005c50
   140005858:	test   rax,rax
   14000585b:	jne    0x140005875
   14000585d:	mov    rax,QWORD PTR [rbx]
   140005860:	movsxd rcx,DWORD PTR [rax+0x4]
   140005864:	add    rcx,rbx
   140005867:	xor    r8d,r8d
   14000586a:	lea    edx,[r8+0x2]
   14000586e:	call   QWORD PTR [rip+0x1864]        # 0x1400070d8
   140005874:	nop
   140005875:	mov    rax,rbx
   140005878:	add    rsp,0x30
   14000587c:	pop    r14
   14000587e:	pop    rdi
   14000587f:	pop    rsi
   140005880:	pop    rbp
   140005881:	pop    rbx
   140005882:	ret    
   140005883:	int3   
   140005884:	int3   
   140005885:	int3   
   140005886:	int3   
   140005887:	int3   
   140005888:	int3   
   140005889:	int3   
   14000588a:	int3   
   14000588b:	int3   
   14000588c:	int3   
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	mov    rax,rcx
   140005893:	ret    
   140005894:	int3   
   140005895:	int3   
   140005896:	int3   
   140005897:	int3   
   140005898:	int3   
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	ret    0x0
   1400058a3:	int3   
   1400058a4:	int3   
   1400058a5:	int3   
   1400058a6:	int3   
   1400058a7:	int3   
   1400058a8:	int3   
   1400058a9:	int3   
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	cmp    BYTE PTR [rdx],0x0
   1400058b3:	jne    0x1400058bd
   1400058b5:	xor    r8d,r8d
   1400058b8:	jmp    0x1400030d0
   1400058bd:	or     r8,0xffffffffffffffff
   1400058c1:	inc    r8
   1400058c4:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400058c9:	jne    0x1400058c1
   1400058cb:	jmp    0x1400030d0
   1400058d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400058d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400058da:	mov    QWORD PTR [rsp+0x20],rsi
   1400058df:	push   r14
   1400058e1:	sub    rsp,0x20
   1400058e5:	mov    rax,QWORD PTR [rdx+0x10]
   1400058e9:	mov    rsi,r9
   1400058ec:	mov    rbp,r8
   1400058ef:	mov    r14,rdx
   1400058f2:	mov    rbx,rcx
   1400058f5:	cmp    rax,r8
   1400058f8:	jae    0x140005908
   1400058fa:	lea    rcx,[rip+0x1f4f]        # 0x140007850
   140005901:	call   QWORD PTR [rip+0x1739]        # 0x140007040
   140005907:	int3   
   140005908:	sub    rax,r8
   14000590b:	mov    r8,QWORD PTR [rcx+0x10]
   14000590f:	cmp    rax,r9
   140005912:	cmovb  rsi,rax
   140005916:	or     rax,0xffffffffffffffff
   14000591a:	sub    rax,r8
   14000591d:	cmp    rax,rsi
   140005920:	ja     0x140005930
   140005922:	lea    rcx,[rip+0x1f17]        # 0x140007840
   140005929:	call   QWORD PTR [rip+0x1709]        # 0x140007038
   14000592f:	int3   
   140005930:	mov    QWORD PTR [rsp+0x30],rdi
   140005935:	test   rsi,rsi
   140005938:	je     0x1400059d0
   14000593e:	lea    rdi,[r8+rsi*1]
   140005942:	cmp    rdi,0xfffffffffffffffe
   140005946:	jbe    0x140005956
   140005948:	lea    rcx,[rip+0x1ef1]        # 0x140007840
   14000594f:	call   QWORD PTR [rip+0x16e3]        # 0x140007038
   140005955:	int3   
   140005956:	mov    rax,QWORD PTR [rcx+0x18]
   14000595a:	cmp    rax,rdi
   14000595d:	jae    0x140005982
   14000595f:	mov    rdx,rdi
   140005962:	call   0x140002320
   140005967:	test   rdi,rdi
   14000596a:	je     0x1400059d0
   14000596c:	cmp    QWORD PTR [r14+0x18],0x10
   140005971:	jb     0x140005976
   140005973:	mov    r14,QWORD PTR [r14]
   140005976:	cmp    QWORD PTR [rbx+0x18],0x10
   14000597b:	jb     0x1400059a1
   14000597d:	mov    rcx,QWORD PTR [rbx]
   140005980:	jmp    0x1400059a4
   140005982:	test   rdi,rdi
   140005985:	jne    0x14000596c
   140005987:	mov    QWORD PTR [rcx+0x10],rdi
   14000598b:	cmp    rax,0x10
   14000598f:	jb     0x140005999
   140005991:	mov    rax,QWORD PTR [rcx]
   140005994:	mov    BYTE PTR [rax],dil
   140005997:	jmp    0x1400059d0
   140005999:	mov    rax,rcx
   14000599c:	mov    BYTE PTR [rcx],0x0
   14000599f:	jmp    0x1400059d0
   1400059a1:	mov    rcx,rbx
   1400059a4:	test   rsi,rsi
   1400059a7:	je     0x1400059b9
   1400059a9:	add    rcx,QWORD PTR [rbx+0x10]
   1400059ad:	lea    rdx,[r14+rbp*1]
   1400059b1:	mov    r8,rsi
   1400059b4:	call   0x1400062f6
   1400059b9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400059be:	mov    QWORD PTR [rbx+0x10],rdi
   1400059c2:	jb     0x1400059c9
   1400059c4:	mov    rax,QWORD PTR [rbx]
   1400059c7:	jmp    0x1400059cc
   1400059c9:	mov    rax,rbx
   1400059cc:	mov    BYTE PTR [rax+rdi*1],0x0
   1400059d0:	mov    rdi,QWORD PTR [rsp+0x30]
   1400059d5:	mov    rbp,QWORD PTR [rsp+0x40]
   1400059da:	mov    rsi,QWORD PTR [rsp+0x48]
   1400059df:	mov    rax,rbx
   1400059e2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400059e7:	add    rsp,0x20
   1400059eb:	pop    r14
   1400059ed:	ret    
   1400059ee:	int3   
   1400059ef:	int3   
   1400059f0:	cmp    BYTE PTR [rdx],0x0
   1400059f3:	jne    0x1400059fd
   1400059f5:	xor    r8d,r8d
   1400059f8:	jmp    0x140005a10
   1400059fd:	or     r8,0xffffffffffffffff
   140005a01:	inc    r8
   140005a04:	cmp    BYTE PTR [rdx+r8*1],0x0
   140005a09:	jne    0x140005a01
   140005a0b:	jmp    0x140005a10
   140005a10:	mov    QWORD PTR [rsp+0x10],rbx
   140005a15:	mov    QWORD PTR [rsp+0x18],rbp
   140005a1a:	push   rsi
   140005a1b:	sub    rsp,0x20
   140005a1f:	mov    rsi,r8
   140005a22:	mov    rbp,rdx
   140005a25:	mov    rbx,rcx
   140005a28:	test   rdx,rdx
   140005a2b:	je     0x140005a87
   140005a2d:	mov    r8,QWORD PTR [rcx+0x18]
   140005a31:	cmp    r8,0x10
   140005a35:	jb     0x140005a3c
   140005a37:	mov    rax,QWORD PTR [rcx]
   140005a3a:	jmp    0x140005a3f
   140005a3c:	mov    rax,rcx
   140005a3f:	cmp    rdx,rax
   140005a42:	jb     0x140005a87
   140005a44:	cmp    r8,0x10
   140005a48:	jb     0x140005a4d
   140005a4a:	mov    rcx,QWORD PTR [rcx]
   140005a4d:	add    rcx,QWORD PTR [rbx+0x10]
   140005a51:	cmp    rcx,rdx
   140005a54:	jbe    0x140005a87
   140005a56:	cmp    r8,0x10
   140005a5a:	jb     0x140005a61
   140005a5c:	mov    rax,QWORD PTR [rbx]
   140005a5f:	jmp    0x140005a64
   140005a61:	mov    rax,rbx
   140005a64:	sub    rbp,rax
   140005a67:	mov    r9,rsi
   140005a6a:	mov    rdx,rbx
   140005a6d:	mov    r8,rbp
   140005a70:	mov    rcx,rbx
   140005a73:	mov    rbx,QWORD PTR [rsp+0x38]
   140005a78:	mov    rbp,QWORD PTR [rsp+0x40]
   140005a7d:	add    rsp,0x20
   140005a81:	pop    rsi
   140005a82:	jmp    0x1400058d0
   140005a87:	mov    r8,QWORD PTR [rbx+0x10]
   140005a8b:	or     rax,0xffffffffffffffff
   140005a8f:	sub    rax,r8
   140005a92:	cmp    rax,rsi
   140005a95:	ja     0x140005aa5
   140005a97:	lea    rcx,[rip+0x1da2]        # 0x140007840
   140005a9e:	call   QWORD PTR [rip+0x1594]        # 0x140007038
   140005aa4:	int3   
   140005aa5:	mov    QWORD PTR [rsp+0x30],rdi
   140005aaa:	test   rsi,rsi
   140005aad:	je     0x140005b3d
   140005ab3:	lea    rdi,[r8+rsi*1]
   140005ab7:	cmp    rdi,0xfffffffffffffffe
   140005abb:	jbe    0x140005acb
   140005abd:	lea    rcx,[rip+0x1d7c]        # 0x140007840
   140005ac4:	call   QWORD PTR [rip+0x156e]        # 0x140007038
   140005aca:	int3   
   140005acb:	mov    rax,QWORD PTR [rbx+0x18]
   140005acf:	cmp    rax,rdi
   140005ad2:	jae    0x140005af0
   140005ad4:	mov    rdx,rdi
   140005ad7:	mov    rcx,rbx
   140005ada:	call   0x140002320
   140005adf:	test   rdi,rdi
   140005ae2:	je     0x140005b3d
   140005ae4:	cmp    QWORD PTR [rbx+0x18],0x10
   140005ae9:	jb     0x140005b0f
   140005aeb:	mov    rcx,QWORD PTR [rbx]
   140005aee:	jmp    0x140005b12
   140005af0:	test   rdi,rdi
   140005af3:	jne    0x140005ae4
   140005af5:	mov    QWORD PTR [rbx+0x10],rdi
   140005af9:	cmp    rax,0x10
   140005afd:	jb     0x140005b07
   140005aff:	mov    rax,QWORD PTR [rbx]
   140005b02:	mov    BYTE PTR [rax],dil
   140005b05:	jmp    0x140005b3d
   140005b07:	mov    rax,rbx
   140005b0a:	mov    BYTE PTR [rbx],0x0
   140005b0d:	jmp    0x140005b3d
   140005b0f:	mov    rcx,rbx
   140005b12:	test   rsi,rsi
   140005b15:	je     0x140005b26
   140005b17:	add    rcx,QWORD PTR [rbx+0x10]
   140005b1b:	mov    r8,rsi
   140005b1e:	mov    rdx,rbp
   140005b21:	call   0x1400062f6
   140005b26:	cmp    QWORD PTR [rbx+0x18],0x10
   140005b2b:	mov    QWORD PTR [rbx+0x10],rdi
   140005b2f:	jb     0x140005b36
   140005b31:	mov    rax,QWORD PTR [rbx]
   140005b34:	jmp    0x140005b39
   140005b36:	mov    rax,rbx
   140005b39:	mov    BYTE PTR [rax+rdi*1],0x0
   140005b3d:	mov    rdi,QWORD PTR [rsp+0x30]
   140005b42:	mov    rbp,QWORD PTR [rsp+0x40]
   140005b47:	mov    rax,rbx
   140005b4a:	mov    rbx,QWORD PTR [rsp+0x38]
   140005b4f:	add    rsp,0x20
   140005b53:	pop    rsi
   140005b54:	ret    
   140005b55:	int3   
   140005b56:	int3   
   140005b57:	int3   
   140005b58:	int3   
   140005b59:	int3   
   140005b5a:	int3   
   140005b5b:	int3   
   140005b5c:	int3   
   140005b5d:	int3   
   140005b5e:	int3   
   140005b5f:	int3   
   140005b60:	sub    rsp,0x38
   140005b64:	cmp    BYTE PTR [rdx],0x0
   140005b67:	jne    0x140005b6d
   140005b69:	xor    eax,eax
   140005b6b:	jmp    0x140005b7a
   140005b6d:	or     rax,0xffffffffffffffff
   140005b71:	inc    rax
   140005b74:	cmp    BYTE PTR [rdx+rax*1],0x0
   140005b78:	jne    0x140005b71
   140005b7a:	mov    r8,QWORD PTR [rcx+0x10]
   140005b7e:	mov    r9,rdx
   140005b81:	xor    edx,edx
   140005b83:	mov    QWORD PTR [rsp+0x20],rax
   140005b88:	call   0x140005ba0
   140005b8d:	add    rsp,0x38
   140005b91:	ret    
   140005b92:	int3   
   140005b93:	int3   
   140005b94:	int3   
   140005b95:	int3   
   140005b96:	int3   
   140005b97:	int3   
   140005b98:	int3   
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	rex push rbx
   140005ba2:	sub    rsp,0x20
   140005ba6:	mov    rax,QWORD PTR [rcx+0x10]
   140005baa:	mov    rbx,r8
   140005bad:	cmp    rax,rdx
   140005bb0:	jae    0x140005bc0
   140005bb2:	lea    rcx,[rip+0x1c97]        # 0x140007850
   140005bb9:	call   QWORD PTR [rip+0x1481]        # 0x140007040
   140005bbf:	int3   
   140005bc0:	sub    rax,rdx
   140005bc3:	mov    QWORD PTR [rsp+0x30],rsi
   140005bc8:	mov    QWORD PTR [rsp+0x38],rdi
   140005bcd:	cmp    rax,rbx
   140005bd0:	cmovb  rbx,rax
   140005bd4:	cmp    QWORD PTR [rcx+0x18],0x10
   140005bd9:	jb     0x140005bde
   140005bdb:	mov    rcx,QWORD PTR [rcx]
   140005bde:	mov    rdi,QWORD PTR [rsp+0x50]
   140005be3:	cmp    rbx,rdi
   140005be6:	mov    r8,rdi
   140005be9:	cmovb  r8,rbx
   140005bed:	xor    esi,esi
   140005bef:	test   r8,r8
   140005bf2:	jne    0x140005bf8
   140005bf4:	mov    eax,esi
   140005bf6:	jmp    0x140005c03
   140005bf8:	add    rcx,rdx
   140005bfb:	mov    rdx,r9
   140005bfe:	call   0x140006382
   140005c03:	cdqe   
   140005c05:	test   rax,rax
   140005c08:	jne    0x140005c28
   140005c0a:	cmp    rbx,rdi
   140005c0d:	jae    0x140005c22
   140005c0f:	mov    rdi,QWORD PTR [rsp+0x38]
   140005c14:	mov    rsi,QWORD PTR [rsp+0x30]
   140005c19:	or     eax,0xffffffff
   140005c1c:	add    rsp,0x20
   140005c20:	pop    rbx
   140005c21:	ret    
   140005c22:	setne  sil
   140005c26:	mov    eax,esi
   140005c28:	mov    rdi,QWORD PTR [rsp+0x38]
   140005c2d:	mov    rsi,QWORD PTR [rsp+0x30]
   140005c32:	add    rsp,0x20
   140005c36:	pop    rbx
   140005c37:	ret    
   140005c38:	int3   
   140005c39:	int3   
   140005c3a:	int3   
   140005c3b:	int3   
   140005c3c:	int3   
   140005c3d:	int3   
   140005c3e:	int3   
   140005c3f:	int3   
   140005c40:	test   r8,r8
   140005c43:	jne    0x140005c48
   140005c45:	xor    eax,eax
   140005c47:	ret    
   140005c48:	jmp    0x140006382
   140005c4d:	int3   
   140005c4e:	int3   
   140005c4f:	int3   
   140005c50:	rex push rdi
   140005c52:	sub    rsp,0x30
   140005c56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005c5f:	mov    QWORD PTR [rsp+0x48],rbx
   140005c64:	mov    eax,r8d
   140005c67:	mov    r10,rdx
   140005c6a:	mov    rbx,rcx
   140005c6d:	cmp    QWORD PTR [rcx+0x90],0x0
   140005c75:	jne    0x140005d4e
   140005c7b:	mov    r8d,r9d
   140005c7e:	mov    edx,eax
   140005c80:	mov    rcx,r10
   140005c83:	call   QWORD PTR [rip+0x14d7]        # 0x140007160
   140005c89:	mov    rdi,rax
   140005c8c:	test   rax,rax
   140005c8f:	je     0x140005d4e
   140005c95:	mov    BYTE PTR [rbx+0x88],0x1
   140005c9c:	mov    BYTE PTR [rbx+0x81],0x0
   140005ca3:	mov    rcx,rbx
   140005ca6:	call   QWORD PTR [rip+0x141c]        # 0x1400070c8
   140005cac:	lea    rcx,[rdi+0x10]
   140005cb0:	lea    rdx,[rdi+0x8]
   140005cb4:	mov    QWORD PTR [rbx+0x18],rcx
   140005cb8:	mov    QWORD PTR [rbx+0x20],rcx
   140005cbc:	mov    QWORD PTR [rbx+0x38],rdi
   140005cc0:	mov    QWORD PTR [rbx+0x40],rdi
   140005cc4:	mov    QWORD PTR [rbx+0x50],rdx
   140005cc8:	mov    QWORD PTR [rbx+0x58],rdx
   140005ccc:	mov    QWORD PTR [rbx+0x90],rdi
   140005cd3:	mov    eax,DWORD PTR [rip+0x5727]        # 0x14000b400
   140005cd9:	mov    DWORD PTR [rbx+0x84],eax
   140005cdf:	mov    QWORD PTR [rbx+0x78],0x0
   140005ce7:	lea    rdx,[rsp+0x40]
   140005cec:	mov    rcx,rbx
   140005cef:	call   QWORD PTR [rip+0x13b3]        # 0x1400070a8
   140005cf5:	nop
   140005cf6:	mov    rcx,rax
   140005cf9:	call   0x1400014f0
   140005cfe:	mov    rdi,rax
   140005d01:	mov    rcx,rax
   140005d04:	call   QWORD PTR [rip+0x134e]        # 0x140007058
   140005d0a:	test   al,al
   140005d0c:	je     0x140005d18
   140005d0e:	mov    QWORD PTR [rbx+0x78],0x0
   140005d16:	jmp    0x140005d26
   140005d18:	mov    QWORD PTR [rbx+0x78],rdi
   140005d1c:	mov    rcx,rbx
   140005d1f:	call   QWORD PTR [rip+0x13a3]        # 0x1400070c8
   140005d25:	nop
   140005d26:	mov    rcx,QWORD PTR [rsp+0x40]
   140005d2b:	test   rcx,rcx
   140005d2e:	je     0x140005d49
   140005d30:	mov    rax,QWORD PTR [rcx]
   140005d33:	call   QWORD PTR [rax+0x10]
   140005d36:	test   rax,rax
   140005d39:	je     0x140005d49
   140005d3b:	mov    r8,QWORD PTR [rax]
   140005d3e:	mov    edx,0x1
   140005d43:	mov    rcx,rax
   140005d46:	call   QWORD PTR [r8]
   140005d49:	mov    rax,rbx
   140005d4c:	jmp    0x140005d50
   140005d4e:	xor    eax,eax
   140005d50:	mov    rbx,QWORD PTR [rsp+0x48]
   140005d55:	add    rsp,0x30
   140005d59:	pop    rdi
   140005d5a:	ret    
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	mov    QWORD PTR [rsp+0x10],rdx
   140005d65:	push   rdi
   140005d66:	sub    rsp,0x170
   140005d6d:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140005d76:	mov    QWORD PTR [rsp+0x180],rbx
   140005d7e:	mov    rbx,rdx
   140005d81:	xor    edi,edi
   140005d83:	mov    QWORD PTR [rsp+0x48],0xf
   140005d8c:	mov    QWORD PTR [rsp+0x40],rdi
   140005d91:	mov    BYTE PTR [rsp+0x30],dil
   140005d96:	lea    r8d,[rdi+0xc]
   140005d9a:	lea    rdx,[rip+0x1b77]        # 0x140007918
   140005da1:	lea    rcx,[rsp+0x30]
   140005da6:	call   0x1400030d0
   140005dab:	nop
   140005dac:	xor    eax,eax
   140005dae:	cmp    QWORD PTR [rbx+0x10],rax
   140005db2:	setne  al
   140005db5:	test   eax,eax
   140005db7:	jne    0x140005e42
   140005dbd:	lea    r8d,[rdi+0x2]
   140005dc1:	lea    rdx,[rip+0x1b60]        # 0x140007928
   140005dc8:	mov    rcx,rbx
   140005dcb:	call   0x1400030d0
   140005dd0:	lea    r8d,[rdi+0x1]
   140005dd4:	lea    rdx,[rip+0x1b51]        # 0x14000792c
   140005ddb:	mov    rcx,rbx
   140005dde:	call   0x140005a10
   140005de3:	lea    r8d,[rdi+0x2]
   140005de7:	lea    rdx,[rip+0x1b3a]        # 0x140007928
   140005dee:	mov    rcx,rbx
   140005df1:	call   0x140005a10
   140005df6:	lea    r8d,[rdi+0x1]
   140005dfa:	lea    rdx,[rip+0x1b2b]        # 0x14000792c
   140005e01:	mov    rcx,rbx
   140005e04:	call   0x140005a10
   140005e09:	lea    r8d,[rdi+0x8]
   140005e0d:	lea    rdx,[rip+0x1b1c]        # 0x140007930
   140005e14:	mov    rcx,rbx
   140005e17:	call   0x140005a10
   140005e1c:	lea    r8d,[rdi+0x1]
   140005e20:	lea    rdx,[rip+0x1b05]        # 0x14000792c
   140005e27:	mov    rcx,rbx
   140005e2a:	call   0x140005a10
   140005e2f:	lea    r8d,[rdi+0x12]
   140005e33:	lea    rdx,[rip+0x1b06]        # 0x140007940
   140005e3a:	mov    rcx,rbx
   140005e3d:	call   0x140005a10
   140005e42:	mov    DWORD PTR [rsp+0x20],0x1
   140005e4a:	mov    r9d,0x40
   140005e50:	lea    r8d,[r9-0x3e]
   140005e54:	mov    rdx,rbx
   140005e57:	lea    rcx,[rsp+0x60]
   140005e5c:	call   0x140005750
   140005e61:	nop
   140005e62:	mov    rax,QWORD PTR [rsp+0x60]
   140005e67:	movsxd rcx,DWORD PTR [rax+0x4]
   140005e6b:	test   BYTE PTR [rsp+rcx*1+0x70],0x6
   140005e70:	je     0x140005e9c
   140005e72:	lea    rdx,[rip+0x1adf]        # 0x140007958
   140005e79:	mov    rcx,QWORD PTR [rip+0x12e8]        # 0x140007168
   140005e80:	call   0x140005500
   140005e85:	mov    rcx,rax
   140005e88:	lea    rdx,[rip+0xfffffffffffff881]        # 0x140005710
   140005e8f:	call   QWORD PTR [rip+0x12bb]        # 0x140007150
   140005e95:	mov    edi,0x1
   140005e9a:	jmp    0x140005eac
   140005e9c:	lea    rdx,[rsp+0x30]
   140005ea1:	lea    rcx,[rsp+0x60]
   140005ea6:	call   0x140001070
   140005eab:	nop
   140005eac:	mov    rax,QWORD PTR [rsp+0x60]
   140005eb1:	movsxd rcx,DWORD PTR [rax+0x4]
   140005eb5:	lea    rax,[rip+0x1924]        # 0x1400077e0
   140005ebc:	mov    QWORD PTR [rsp+rcx*1+0x60],rax
   140005ec1:	mov    rax,QWORD PTR [rsp+0x60]
   140005ec6:	movsxd rcx,DWORD PTR [rax+0x4]
   140005eca:	lea    edx,[rcx-0xa8]
   140005ed0:	mov    DWORD PTR [rsp+rcx*1+0x5c],edx
   140005ed4:	lea    rcx,[rsp+0x68]
   140005ed9:	call   0x140001bb0
   140005ede:	lea    rcx,[rsp+0x70]
   140005ee3:	call   QWORD PTR [rip+0x11ff]        # 0x1400070e8
   140005ee9:	mov    rax,QWORD PTR [rip+0x1240]        # 0x140007130
   140005ef0:	mov    QWORD PTR [rsp+0x108],rax
   140005ef8:	lea    rcx,[rsp+0x108]
   140005f00:	call   QWORD PTR [rip+0x118a]        # 0x140007090
   140005f06:	nop
   140005f07:	cmp    QWORD PTR [rsp+0x48],0x10
   140005f0d:	jb     0x140005f19
   140005f0f:	mov    rcx,QWORD PTR [rsp+0x30]
   140005f14:	call   0x14000615a
   140005f19:	mov    QWORD PTR [rsp+0x48],0xf
   140005f22:	mov    QWORD PTR [rsp+0x40],0x0
   140005f2b:	mov    BYTE PTR [rsp+0x30],0x0
   140005f30:	cmp    QWORD PTR [rbx+0x18],0x10
   140005f35:	jb     0x140005f3f
   140005f37:	mov    rcx,QWORD PTR [rbx]
   140005f3a:	call   0x14000615a
   140005f3f:	mov    QWORD PTR [rbx+0x18],0xf
   140005f47:	mov    QWORD PTR [rbx+0x10],0x0
   140005f4f:	mov    BYTE PTR [rbx],0x0
   140005f52:	mov    eax,edi
   140005f54:	mov    rbx,QWORD PTR [rsp+0x180]
   140005f5c:	add    rsp,0x170
   140005f63:	pop    rdi
   140005f64:	ret    
   140005f65:	int3   
   140005f66:	jmp    QWORD PTR [rip+0x13cc]        # 0x140007338
   140005f6c:	jmp    QWORD PTR [rip+0x13be]        # 0x140007330
   140005f72:	jmp    QWORD PTR [rip+0x1208]        # 0x140007180
   140005f78:	jmp    QWORD PTR [rip+0x11f2]        # 0x140007170
   140005f7e:	jmp    QWORD PTR [rip+0x11f4]        # 0x140007178
   140005f84:	jmp    QWORD PTR [rip+0x11fe]        # 0x140007188
   140005f8a:	jmp    QWORD PTR [rip+0x10a8]        # 0x140007038
   140005f90:	jmp    QWORD PTR [rip+0x10aa]        # 0x140007040
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	mov    QWORD PTR [rcx],rdx
   140005f9b:	mov    QWORD PTR [rcx+0x8],r8
   140005f9f:	mov    rax,rcx
   140005fa2:	ret    
   140005fa3:	int3   
   140005fa4:	sub    rsp,0x28
   140005fa8:	mov    rcx,QWORD PTR [rcx+0x8]
   140005fac:	mov    rax,QWORD PTR [rcx]
   140005faf:	call   QWORD PTR [rax+0x10]
   140005fb2:	test   rax,rax
   140005fb5:	je     0x140005fc5
   140005fb7:	mov    r8,QWORD PTR [rax]
   140005fba:	mov    edx,0x1
   140005fbf:	mov    rcx,rax
   140005fc2:	call   QWORD PTR [r8]
   140005fc5:	add    rsp,0x28
   140005fc9:	ret    
   140005fca:	int3   
   140005fcb:	int3   
   140005fcc:	rex push rbx
   140005fce:	sub    rsp,0x20
   140005fd2:	jmp    0x140006003
   140005fd4:	mov    rax,QWORD PTR [rbx]
   140005fd7:	mov    rcx,QWORD PTR [rbx+0x8]
   140005fdb:	mov    QWORD PTR [rip+0x5436],rax        # 0x14000b418
   140005fe2:	mov    rax,QWORD PTR [rcx]
   140005fe5:	call   QWORD PTR [rax+0x10]
   140005fe8:	test   rax,rax
   140005feb:	je     0x140005ffb
   140005fed:	mov    r8,QWORD PTR [rax]
   140005ff0:	mov    edx,0x1
   140005ff5:	mov    rcx,rax
   140005ff8:	call   QWORD PTR [r8]
   140005ffb:	mov    rcx,rbx
   140005ffe:	call   0x14000615a
   140006003:	mov    rbx,QWORD PTR [rip+0x540e]        # 0x14000b418
   14000600a:	test   rbx,rbx
   14000600d:	jne    0x140005fd4
   14000600f:	add    rsp,0x20
   140006013:	pop    rbx
   140006014:	ret    
   140006015:	int3   
   140006016:	int3   
   140006017:	int3   
   140006018:	mov    QWORD PTR [rsp+0x8],rbx
   14000601d:	push   rdi
   14000601e:	sub    rsp,0x20
   140006022:	mov    rbx,rcx
   140006025:	mov    rcx,QWORD PTR [rcx+0x8]
   140006029:	mov    edi,edx
   14000602b:	mov    rax,QWORD PTR [rcx]
   14000602e:	call   QWORD PTR [rax+0x10]
   140006031:	test   rax,rax
   140006034:	je     0x140006044
   140006036:	mov    r8,QWORD PTR [rax]
   140006039:	mov    edx,0x1
   14000603e:	mov    rcx,rax
   140006041:	call   QWORD PTR [r8]
   140006044:	test   dil,0x1
   140006048:	je     0x140006052
   14000604a:	mov    rcx,rbx
   14000604d:	call   0x14000615a
   140006052:	mov    rax,rbx
   140006055:	mov    rbx,QWORD PTR [rsp+0x30]
   14000605a:	add    rsp,0x20
   14000605e:	pop    rdi
   14000605f:	ret    
   140006060:	rex push rbx
   140006062:	sub    rsp,0x20
   140006066:	mov    rbx,rcx
   140006069:	mov    ecx,0x10
   14000606e:	call   0x140006154
   140006073:	test   rax,rax
   140006076:	je     0x140006086
   140006078:	mov    rdx,QWORD PTR [rip+0x5399]        # 0x14000b418
   14000607f:	mov    QWORD PTR [rax+0x8],rbx
   140006083:	mov    QWORD PTR [rax],rdx
   140006086:	mov    QWORD PTR [rip+0x538b],rax        # 0x14000b418
   14000608d:	add    rsp,0x20
   140006091:	pop    rbx
   140006092:	ret    
   140006093:	int3   
   140006094:	jmp    QWORD PTR [rip+0xfae]        # 0x140007048
   14000609a:	jmp    QWORD PTR [rip+0xfb0]        # 0x140007050
   1400060a0:	jmp    QWORD PTR [rip+0xfb2]        # 0x140007058
   1400060a6:	jmp    QWORD PTR [rip+0xfb4]        # 0x140007060
   1400060ac:	jmp    QWORD PTR [rip+0xfb6]        # 0x140007068
   1400060b2:	jmp    QWORD PTR [rip+0xfb8]        # 0x140007070
   1400060b8:	jmp    QWORD PTR [rip+0xfba]        # 0x140007078
   1400060be:	jmp    QWORD PTR [rip+0xfbc]        # 0x140007080
   1400060c4:	jmp    QWORD PTR [rip+0xfbe]        # 0x140007088
   1400060ca:	jmp    QWORD PTR [rip+0xfc0]        # 0x140007090
   1400060d0:	jmp    QWORD PTR [rip+0xfc2]        # 0x140007098
   1400060d6:	jmp    QWORD PTR [rip+0xfc4]        # 0x1400070a0
   1400060dc:	jmp    QWORD PTR [rip+0xfc6]        # 0x1400070a8
   1400060e2:	jmp    QWORD PTR [rip+0xfc8]        # 0x1400070b0
   1400060e8:	jmp    QWORD PTR [rip+0xfca]        # 0x1400070b8
   1400060ee:	jmp    QWORD PTR [rip+0xfcc]        # 0x1400070c0
   1400060f4:	jmp    QWORD PTR [rip+0xfce]        # 0x1400070c8
   1400060fa:	jmp    QWORD PTR [rip+0xfd0]        # 0x1400070d0
   140006100:	jmp    QWORD PTR [rip+0xfd2]        # 0x1400070d8
   140006106:	jmp    QWORD PTR [rip+0xfd4]        # 0x1400070e0
   14000610c:	jmp    QWORD PTR [rip+0xfd6]        # 0x1400070e8
   140006112:	jmp    QWORD PTR [rip+0xfd8]        # 0x1400070f0
   140006118:	jmp    QWORD PTR [rip+0xfda]        # 0x1400070f8
   14000611e:	jmp    QWORD PTR [rip+0xfdc]        # 0x140007100
   140006124:	jmp    QWORD PTR [rip+0xfde]        # 0x140007108
   14000612a:	jmp    QWORD PTR [rip+0xfe0]        # 0x140007110
   140006130:	jmp    QWORD PTR [rip+0xfe2]        # 0x140007118
   140006136:	jmp    QWORD PTR [rip+0x100c]        # 0x140007148
   14000613c:	jmp    QWORD PTR [rip+0x100e]        # 0x140007150
   140006142:	jmp    QWORD PTR [rip+0x1010]        # 0x140007158
   140006148:	jmp    QWORD PTR [rip+0x1012]        # 0x140007160
   14000614e:	jmp    QWORD PTR [rip+0x11bc]        # 0x140007310
   140006154:	jmp    QWORD PTR [rip+0x11ae]        # 0x140007308
   14000615a:	jmp    QWORD PTR [rip+0x1050]        # 0x1400071b0
   140006160:	rex push rbx
   140006162:	sub    rsp,0x20
   140006166:	cmp    QWORD PTR [rip+0x5312],0x0        # 0x14000b480
   14000616e:	jne    0x1400061a6
   140006170:	mov    edx,0x8
   140006175:	lea    ecx,[rdx+0x18]
   140006178:	call   QWORD PTR [rip+0x10e2]        # 0x140007260
   14000617e:	mov    rcx,rax
   140006181:	mov    rbx,rax
   140006184:	call   QWORD PTR [rip+0xe96]        # 0x140007020
   14000618a:	mov    QWORD PTR [rip+0x52ef],rax        # 0x14000b480
   140006191:	mov    QWORD PTR [rip+0x52e0],rax        # 0x14000b478
   140006198:	test   rbx,rbx
   14000619b:	jne    0x1400061a2
   14000619d:	lea    eax,[rbx+0x18]
   1400061a0:	jmp    0x1400061a8
   1400061a2:	and    QWORD PTR [rbx],0x0
   1400061a6:	xor    eax,eax
   1400061a8:	add    rsp,0x20
   1400061ac:	pop    rbx
   1400061ad:	ret    
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	rex push rbx
   1400061b2:	sub    rsp,0x20
   1400061b6:	mov    rbx,rcx
   1400061b9:	mov    rcx,QWORD PTR [rip+0x52c0]        # 0x14000b480
   1400061c0:	call   QWORD PTR [rip+0xe52]        # 0x140007018
   1400061c6:	mov    QWORD PTR [rsp+0x38],rax
   1400061cb:	cmp    rax,0xffffffffffffffff
   1400061cf:	jne    0x1400061dc
   1400061d1:	mov    rcx,rbx
   1400061d4:	call   QWORD PTR [rip+0x109e]        # 0x140007278
   1400061da:	jmp    0x14000625a
   1400061dc:	mov    ecx,0x8
   1400061e1:	call   0x140006696
   1400061e6:	nop
   1400061e7:	mov    rcx,QWORD PTR [rip+0x5292]        # 0x14000b480
   1400061ee:	call   QWORD PTR [rip+0xe24]        # 0x140007018
   1400061f4:	mov    QWORD PTR [rsp+0x38],rax
   1400061f9:	mov    rcx,QWORD PTR [rip+0x5278]        # 0x14000b478
   140006200:	call   QWORD PTR [rip+0xe12]        # 0x140007018
   140006206:	mov    QWORD PTR [rsp+0x40],rax
   14000620b:	mov    rcx,rbx
   14000620e:	call   QWORD PTR [rip+0xe0c]        # 0x140007020
   140006214:	mov    rcx,rax
   140006217:	lea    r8,[rsp+0x40]
   14000621c:	lea    rdx,[rsp+0x38]
   140006221:	call   0x1400066a8
   140006226:	mov    rbx,rax
   140006229:	mov    rcx,QWORD PTR [rsp+0x38]
   14000622e:	call   QWORD PTR [rip+0xdec]        # 0x140007020
   140006234:	mov    QWORD PTR [rip+0x5245],rax        # 0x14000b480
   14000623b:	mov    rcx,QWORD PTR [rsp+0x40]
   140006240:	call   QWORD PTR [rip+0xdda]        # 0x140007020
   140006246:	mov    QWORD PTR [rip+0x522b],rax        # 0x14000b478
   14000624d:	mov    ecx,0x8
   140006252:	call   0x14000669c
   140006257:	mov    rax,rbx
   14000625a:	add    rsp,0x20
   14000625e:	pop    rbx
   14000625f:	ret    
   140006260:	sub    rsp,0x28
   140006264:	call   0x1400061b0
   140006269:	neg    rax
   14000626c:	sbb    eax,eax
   14000626e:	neg    eax
   140006270:	dec    eax
   140006272:	add    rsp,0x28
   140006276:	ret    
   140006277:	int3   
   140006278:	jmp    QWORD PTR [rip+0xf1a]        # 0x140007198
   14000627e:	jmp    QWORD PTR [rip+0x109c]        # 0x140007320
   140006284:	jmp    QWORD PTR [rip+0xf16]        # 0x1400071a0
   14000628a:	jmp    QWORD PTR [rip+0xf18]        # 0x1400071a8
   140006290:	jmp    QWORD PTR [rip+0x1082]        # 0x140007318
   140006296:	jmp    QWORD PTR [rip+0xf1c]        # 0x1400071b8
   14000629c:	jmp    QWORD PTR [rip+0xf1e]        # 0x1400071c0
   1400062a2:	jmp    QWORD PTR [rip+0xf20]        # 0x1400071c8
   1400062a8:	jmp    QWORD PTR [rip+0xf22]        # 0x1400071d0
   1400062ae:	jmp    QWORD PTR [rip+0xf24]        # 0x1400071d8
   1400062b4:	jmp    QWORD PTR [rip+0xf26]        # 0x1400071e0
   1400062ba:	jmp    QWORD PTR [rip+0xf28]        # 0x1400071e8
   1400062c0:	jmp    QWORD PTR [rip+0xf2a]        # 0x1400071f0
   1400062c6:	jmp    QWORD PTR [rip+0xf2c]        # 0x1400071f8
   1400062cc:	jmp    QWORD PTR [rip+0xf2e]        # 0x140007200
   1400062d2:	jmp    QWORD PTR [rip+0xf30]        # 0x140007208
   1400062d8:	jmp    QWORD PTR [rip+0xf32]        # 0x140007210
   1400062de:	jmp    QWORD PTR [rip+0xf34]        # 0x140007218
   1400062e4:	jmp    QWORD PTR [rip+0xf36]        # 0x140007220
   1400062ea:	jmp    QWORD PTR [rip+0xf38]        # 0x140007228
   1400062f0:	jmp    QWORD PTR [rip+0xf3a]        # 0x140007230
   1400062f6:	jmp    QWORD PTR [rip+0xf3c]        # 0x140007238
   1400062fc:	jmp    QWORD PTR [rip+0xf3e]        # 0x140007240
   140006302:	int3   
   140006303:	int3   
   140006304:	lea    rax,[rip+0x16bd]        # 0x1400079c8
   14000630b:	mov    QWORD PTR [rcx],rax
   14000630e:	mov    rax,rcx
   140006311:	ret    
   140006312:	int3   
   140006313:	int3   
   140006314:	mov    rax,rcx
   140006317:	ret    
   140006318:	mov    QWORD PTR [rsp+0x8],rbx
   14000631d:	mov    QWORD PTR [rsp+0x10],rsi
   140006322:	push   rdi
   140006323:	sub    rsp,0x20
   140006327:	mov    esi,edx
   140006329:	mov    rbx,rcx
   14000632c:	test   dl,0x2
   14000632f:	je     0x14000635c
   140006331:	lea    rdi,[rcx-0x8]
   140006335:	lea    r9,[rip+0x6d2]        # 0x140006a0e
   14000633c:	mov    edx,0x18
   140006341:	mov    r8d,DWORD PTR [rdi]
   140006344:	call   0x1400066b4
   140006349:	test   sil,0x1
   14000634d:	je     0x140006357
   14000634f:	mov    rcx,rdi
   140006352:	call   0x14000615a
   140006357:	mov    rax,rdi
   14000635a:	jmp    0x140006372
   14000635c:	call   0x140006a0e
   140006361:	test   sil,0x1
   140006365:	je     0x14000636f
   140006367:	mov    rcx,rbx
   14000636a:	call   0x14000615a
   14000636f:	mov    rax,rbx
   140006372:	mov    rbx,QWORD PTR [rsp+0x30]
   140006377:	mov    rsi,QWORD PTR [rsp+0x38]
   14000637c:	add    rsp,0x20
   140006380:	pop    rdi
   140006381:	ret    
   140006382:	jmp    QWORD PTR [rip+0xec0]        # 0x140007248
   140006388:	sub    rsp,0x28
   14000638c:	mov    eax,0x5a4d
   140006391:	cmp    WORD PTR [rip+0xffffffffffff9c68],ax        # 0x140000000
   140006398:	je     0x14000639e
   14000639a:	xor    ecx,ecx
   14000639c:	jmp    0x1400063d6
   14000639e:	movsxd rax,DWORD PTR [rip+0xffffffffffff9c97]        # 0x14000003c
   1400063a5:	lea    rcx,[rip+0xffffffffffff9c54]        # 0x140000000
   1400063ac:	add    rax,rcx
   1400063af:	cmp    DWORD PTR [rax],0x4550
   1400063b5:	jne    0x14000639a
   1400063b7:	mov    ecx,0x20b
   1400063bc:	cmp    WORD PTR [rax+0x18],cx
   1400063c0:	jne    0x14000639a
   1400063c2:	xor    ecx,ecx
   1400063c4:	cmp    DWORD PTR [rax+0x84],0xe
   1400063cb:	jbe    0x1400063d6
   1400063cd:	cmp    DWORD PTR [rax+0xf8],ecx
   1400063d3:	setne  cl
   1400063d6:	mov    DWORD PTR [rip+0x5054],ecx        # 0x14000b430
   1400063dc:	mov    ecx,0x1
   1400063e1:	call   QWORD PTR [rip+0xeb1]        # 0x140007298
   1400063e7:	or     rcx,0xffffffffffffffff
   1400063eb:	call   QWORD PTR [rip+0xc2f]        # 0x140007020
   1400063f1:	mov    rcx,QWORD PTR [rip+0xee8]        # 0x1400072e0
   1400063f8:	mov    QWORD PTR [rip+0x5079],rax        # 0x14000b478
   1400063ff:	mov    QWORD PTR [rip+0x507a],rax        # 0x14000b480
   140006406:	mov    eax,DWORD PTR [rip+0x5050]        # 0x14000b45c
   14000640c:	mov    DWORD PTR [rcx],eax
   14000640e:	mov    rdx,QWORD PTR [rip+0xed3]        # 0x1400072e8
   140006415:	mov    eax,DWORD PTR [rip+0x5035]        # 0x14000b450
   14000641b:	mov    DWORD PTR [rdx],eax
   14000641d:	call   0x140006980
   140006422:	call   0x1400067d8
   140006427:	cmp    DWORD PTR [rip+0x4c06],0x0        # 0x14000b034
   14000642e:	jne    0x14000643d
   140006430:	lea    rcx,[rip+0x545]        # 0x14000697c
   140006437:	call   QWORD PTR [rip+0xe83]        # 0x1400072c0
   14000643d:	cmp    DWORD PTR [rip+0x4bf4],0xffffffff        # 0x14000b038
   140006444:	jne    0x14000644f
   140006446:	or     ecx,0xffffffff
   140006449:	call   QWORD PTR [rip+0xe69]        # 0x1400072b8
   14000644f:	xor    eax,eax
   140006451:	add    rsp,0x28
   140006455:	ret    
   140006456:	int3   
   140006457:	int3   
   140006458:	sub    rsp,0x38
   14000645c:	lea    rcx,[rip+0x555]        # 0x1400069b8
   140006463:	call   0x140006260
   140006468:	mov    eax,DWORD PTR [rip+0x4fea]        # 0x14000b458
   14000646e:	mov    r9d,DWORD PTR [rip+0x4fdf]        # 0x14000b454
   140006475:	mov    DWORD PTR [rip+0x4fd1],eax        # 0x14000b44c
   14000647b:	lea    rax,[rip+0x4fca]        # 0x14000b44c
   140006482:	lea    r8,[rip+0x4fb7]        # 0x14000b440
   140006489:	lea    rdx,[rip+0x4fa8]        # 0x14000b438
   140006490:	lea    rcx,[rip+0x4f9d]        # 0x14000b434
   140006497:	mov    QWORD PTR [rsp+0x20],rax
   14000649c:	call   QWORD PTR [rip+0xdee]        # 0x140007290
   1400064a2:	mov    DWORD PTR [rip+0x4fa0],eax        # 0x14000b448
   1400064a8:	test   eax,eax
   1400064aa:	jns    0x1400064b6
   1400064ac:	mov    ecx,0x8
   1400064b1:	call   0x1400067d2
   1400064b6:	add    rsp,0x38
   1400064ba:	ret    
   1400064bb:	int3   
   1400064bc:	mov    rax,QWORD PTR gs:0x30
   1400064c5:	ret    
   1400064c6:	int3   
   1400064c7:	int3   
   1400064c8:	rex push rdi
   1400064ca:	sub    rsp,0x20
   1400064ce:	mov    rax,QWORD PTR gs:0x30
   1400064d7:	mov    rcx,QWORD PTR [rax+0x8]
   1400064db:	xor    edi,edi
   1400064dd:	xor    eax,eax
   1400064df:	lock cmpxchg QWORD PTR [rip+0x4f78],rcx        # 0x14000b460
   1400064e8:	je     0x1400064f8
   1400064ea:	cmp    rax,rcx
   1400064ed:	jne    0x1400064f6
   1400064ef:	mov    edi,0x1
   1400064f4:	jmp    0x1400064f8
   1400064f6:	jmp    0x1400064dd
   1400064f8:	mov    eax,DWORD PTR [rip+0x4f6a]        # 0x14000b468
   1400064fe:	cmp    eax,0x1
   140006501:	jne    0x14000650d
   140006503:	lea    ecx,[rax+0x1e]
   140006506:	call   0x1400067d2
   14000650b:	jmp    0x14000654c
   14000650d:	mov    eax,DWORD PTR [rip+0x4f55]        # 0x14000b468
   140006513:	test   eax,eax
   140006515:	jne    0x140006542
   140006517:	mov    DWORD PTR [rip+0x4f47],0x1        # 0x14000b468
   140006521:	lea    rdx,[rip+0xe78]        # 0x1400073a0
   140006528:	lea    rcx,[rip+0xe51]        # 0x140007380
   14000652f:	call   0x1400069fc
   140006534:	test   eax,eax
   140006536:	je     0x14000654c
   140006538:	mov    eax,0xff
   14000653d:	jmp    0x140006632
   140006542:	mov    DWORD PTR [rip+0x4edc],0x1        # 0x14000b428
   14000654c:	mov    eax,DWORD PTR [rip+0x4f16]        # 0x14000b468
   140006552:	cmp    eax,0x1
   140006555:	jne    0x140006574
   140006557:	lea    rdx,[rip+0xe1a]        # 0x140007378
   14000655e:	lea    rcx,[rip+0xde3]        # 0x140007348
   140006565:	call   0x140006a02
   14000656a:	mov    DWORD PTR [rip+0x4ef4],0x2        # 0x14000b468
   140006574:	test   edi,edi
   140006576:	jne    0x140006581
   140006578:	xor    eax,eax
   14000657a:	xchg   QWORD PTR [rip+0x4edf],rax        # 0x14000b460
   140006581:	cmp    QWORD PTR [rip+0x4ee7],0x0        # 0x14000b470
   140006589:	je     0x1400065ad
   14000658b:	lea    rcx,[rip+0x4ede]        # 0x14000b470
   140006592:	call   0x140006840
   140006597:	test   eax,eax
   140006599:	je     0x1400065ad
   14000659b:	xor    r8d,r8d
   14000659e:	lea    edx,[r8+0x2]
   1400065a2:	xor    ecx,ecx
   1400065a4:	mov    rax,QWORD PTR [rip+0x4ec5]        # 0x14000b470
   1400065ab:	call   rax
   1400065ad:	mov    rcx,QWORD PTR [rip+0x4e8c]        # 0x14000b440
   1400065b4:	mov    rax,QWORD PTR [rip+0xd1d]        # 0x1400072d8
   1400065bb:	mov    QWORD PTR [rax],rcx
   1400065be:	mov    r8,QWORD PTR [rip+0x4e7b]        # 0x14000b440
   1400065c5:	mov    rdx,QWORD PTR [rip+0x4e6c]        # 0x14000b438
   1400065cc:	mov    ecx,DWORD PTR [rip+0x4e62]        # 0x14000b434
   1400065d2:	call   0x1400050f0
   1400065d7:	mov    DWORD PTR [rip+0x4e4f],eax        # 0x14000b42c
   1400065dd:	cmp    DWORD PTR [rip+0x4e4c],0x0        # 0x14000b430
   1400065e4:	jne    0x1400065ee
   1400065e6:	mov    ecx,eax
   1400065e8:	call   QWORD PTR [rip+0xcb2]        # 0x1400072a0
   1400065ee:	cmp    DWORD PTR [rip+0x4e33],0x0        # 0x14000b428
   1400065f5:	jne    0x140006603
   1400065f7:	call   QWORD PTR [rip+0xcb3]        # 0x1400072b0
   1400065fd:	mov    eax,DWORD PTR [rip+0x4e29]        # 0x14000b42c
   140006603:	jmp    0x140006632
   140006605:	mov    DWORD PTR [rip+0x4e21],eax        # 0x14000b42c
   14000660b:	cmp    DWORD PTR [rip+0x4e1e],0x0        # 0x14000b430
   140006612:	jne    0x14000661d
   140006614:	mov    ecx,eax
   140006616:	call   QWORD PTR [rip+0xc8c]        # 0x1400072a8
   14000661c:	int3   
   14000661d:	cmp    DWORD PTR [rip+0x4e04],0x0        # 0x14000b428
   140006624:	jne    0x140006632
   140006626:	call   QWORD PTR [rip+0xc84]        # 0x1400072b0
   14000662c:	mov    eax,DWORD PTR [rip+0x4dfa]        # 0x14000b42c
   140006632:	add    rsp,0x20
   140006636:	pop    rdi
   140006637:	ret    
   140006638:	mov    eax,0x5a4d
   14000663d:	cmp    WORD PTR [rip+0xffffffffffff99bc],ax        # 0x140000000
   140006644:	je     0x140006649
   140006646:	xor    eax,eax
   140006648:	ret    
   140006649:	movsxd rcx,DWORD PTR [rip+0xffffffffffff99ec]        # 0x14000003c
   140006650:	lea    rax,[rip+0xffffffffffff99a9]        # 0x140000000
   140006657:	add    rcx,rax
   14000665a:	cmp    DWORD PTR [rcx],0x4550
   140006660:	jne    0x140006646
   140006662:	mov    eax,0x20b
   140006667:	cmp    WORD PTR [rcx+0x18],ax
   14000666b:	jne    0x140006646
   14000666d:	xor    eax,eax
   14000666f:	cmp    DWORD PTR [rcx+0x84],0xe
   140006676:	jbe    0x140006681
   140006678:	cmp    DWORD PTR [rcx+0xf8],eax
   14000667e:	setne  al
   140006681:	ret    
   140006682:	int3   
   140006683:	int3   
   140006684:	sub    rsp,0x28
   140006688:	call   0x1400068d0
   14000668d:	add    rsp,0x28
   140006691:	jmp    0x1400064c8
   140006696:	jmp    QWORD PTR [rip+0xbb4]        # 0x140007250
   14000669c:	jmp    QWORD PTR [rip+0xbb6]        # 0x140007258
   1400066a2:	jmp    QWORD PTR [rip+0xbb8]        # 0x140007260
   1400066a8:	jmp    QWORD PTR [rip+0xbba]        # 0x140007268
   1400066ae:	jmp    QWORD PTR [rip+0xbbc]        # 0x140007270
   1400066b4:	mov    rax,rsp
   1400066b7:	mov    QWORD PTR [rax+0x20],r9
   1400066bb:	mov    DWORD PTR [rax+0x18],r8d
   1400066bf:	mov    QWORD PTR [rax+0x10],rdx
   1400066c3:	push   rbx
   1400066c4:	push   rsi
   1400066c5:	push   rdi
   1400066c6:	push   r14
   1400066c8:	sub    rsp,0x38
   1400066cc:	mov    r14,r9
   1400066cf:	movsxd rdi,r8d
   1400066d2:	mov    rsi,rdx
   1400066d5:	and    DWORD PTR [rax-0x38],0x0
   1400066d9:	mov    rbx,rdi
   1400066dc:	imul   rbx,rdx
   1400066e0:	add    rbx,rcx
   1400066e3:	mov    QWORD PTR [rax+0x8],rbx
   1400066e7:	dec    edi
   1400066e9:	mov    DWORD PTR [rsp+0x70],edi
   1400066ed:	js     0x1400066ff
   1400066ef:	sub    rbx,rsi
   1400066f2:	mov    QWORD PTR [rsp+0x60],rbx
   1400066f7:	mov    rcx,rbx
   1400066fa:	call   r14
   1400066fd:	jmp    0x1400066e7
   1400066ff:	mov    DWORD PTR [rsp+0x20],0x1
   140006707:	add    rsp,0x38
   14000670b:	pop    r14
   14000670d:	pop    rdi
   14000670e:	pop    rsi
   14000670f:	pop    rbx
   140006710:	ret    
   140006711:	int3   
   140006712:	int3   
   140006713:	int3   
   140006714:	sub    rsp,0x28
   140006718:	mov    rax,QWORD PTR [rcx]
   14000671b:	cmp    DWORD PTR [rax],0xe06d7363
   140006721:	je     0x14000672a
   140006723:	xor    eax,eax
   140006725:	add    rsp,0x28
   140006729:	ret    
   14000672a:	call   0x140006a08
   14000672f:	int3   
   140006730:	mov    QWORD PTR [rsp+0x10],rbx
   140006735:	mov    DWORD PTR [rsp+0x18],r8d
   14000673a:	mov    QWORD PTR [rsp+0x8],rcx
   14000673f:	push   rsi
   140006740:	push   rdi
   140006741:	push   r14
   140006743:	sub    rsp,0x40
   140006747:	mov    rsi,r9
   14000674a:	mov    edi,r8d
   14000674d:	mov    r14,rdx
   140006750:	mov    rbx,rcx
   140006753:	dec    edi
   140006755:	mov    DWORD PTR [rsp+0x70],edi
   140006759:	js     0x14000676a
   14000675b:	sub    rbx,r14
   14000675e:	mov    QWORD PTR [rsp+0x60],rbx
   140006763:	mov    rcx,rbx
   140006766:	call   rsi
   140006768:	jmp    0x140006753
   14000676a:	jmp    0x14000676c
   14000676c:	mov    rbx,QWORD PTR [rsp+0x68]
   140006771:	add    rsp,0x40
   140006775:	pop    r14
   140006777:	pop    rdi
   140006778:	pop    rsi
   140006779:	ret    
   14000677a:	int3   
   14000677b:	int3   
   14000677c:	sub    rsp,0x28
   140006780:	mov    rax,QWORD PTR [rcx]
   140006783:	cmp    DWORD PTR [rax],0xe06d7363
   140006789:	jne    0x1400067a7
   14000678b:	cmp    DWORD PTR [rax+0x18],0x4
   14000678f:	jne    0x1400067a7
   140006791:	mov    ecx,DWORD PTR [rax+0x20]
   140006794:	lea    eax,[rcx-0x19930520]
   14000679a:	cmp    eax,0x2
   14000679d:	jbe    0x1400067ae
   14000679f:	cmp    ecx,0x1994000
   1400067a5:	je     0x1400067ae
   1400067a7:	xor    eax,eax
   1400067a9:	add    rsp,0x28
   1400067ad:	ret    
   1400067ae:	call   0x140006a08
   1400067b3:	int3   
   1400067b4:	sub    rsp,0x28
   1400067b8:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000677c
   1400067bf:	call   0x140006a14
   1400067c4:	xor    eax,eax
   1400067c6:	add    rsp,0x28
   1400067ca:	ret    
   1400067cb:	int3   
   1400067cc:	jmp    QWORD PTR [rip+0xaae]        # 0x140007280
   1400067d2:	jmp    QWORD PTR [rip+0xab0]        # 0x140007288
   1400067d8:	xor    eax,eax
   1400067da:	ret    
   1400067db:	int3   
   1400067dc:	jmp    QWORD PTR [rip+0xaae]        # 0x140007290
   1400067e2:	jmp    QWORD PTR [rip+0xab0]        # 0x140007298
   1400067e8:	int3   
   1400067e9:	int3   
   1400067ea:	int3   
   1400067eb:	int3   
   1400067ec:	int3   
   1400067ed:	int3   
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400067f4:	xor    r9d,r9d
   1400067f7:	mov    r10,rdx
   1400067fa:	add    r8,rcx
   1400067fd:	movzx  eax,WORD PTR [r8+0x14]
   140006802:	movzx  r11d,WORD PTR [r8+0x6]
   140006807:	add    rax,0x18
   14000680b:	add    rax,r8
   14000680e:	test   r11d,r11d
   140006811:	je     0x140006831
   140006813:	mov    edx,DWORD PTR [rax+0xc]
   140006816:	cmp    r10,rdx
   140006819:	jb     0x140006825
   14000681b:	mov    ecx,DWORD PTR [rax+0x8]
   14000681e:	add    ecx,edx
   140006820:	cmp    r10,rcx
   140006823:	jb     0x140006833
   140006825:	inc    r9d
   140006828:	add    rax,0x28
   14000682c:	cmp    r9d,r11d
   14000682f:	jb     0x140006813
   140006831:	xor    eax,eax
   140006833:	ret    
   140006834:	int3   
   140006835:	int3   
   140006836:	int3   
   140006837:	int3   
   140006838:	int3   
   140006839:	int3   
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	int3   
   14000683f:	int3   
   140006840:	mov    QWORD PTR [rsp+0x8],rbx
   140006845:	push   rdi
   140006846:	sub    rsp,0x20
   14000684a:	mov    rbx,rcx
   14000684d:	lea    rdi,[rip+0xffffffffffff97ac]        # 0x140000000
   140006854:	mov    rcx,rdi
   140006857:	call   0x140006890
   14000685c:	test   eax,eax
   14000685e:	je     0x140006882
   140006860:	sub    rbx,rdi
   140006863:	mov    rdx,rbx
   140006866:	mov    rcx,rdi
   140006869:	call   0x1400067f0
   14000686e:	test   rax,rax
   140006871:	je     0x140006882
   140006873:	mov    eax,DWORD PTR [rax+0x24]
   140006876:	shr    eax,0x1f
   140006879:	not    eax
   14000687b:	and    eax,0x1
   14000687e:	jmp    0x140006882
   140006880:	xor    eax,eax
   140006882:	mov    rbx,QWORD PTR [rsp+0x30]
   140006887:	add    rsp,0x20
   14000688b:	pop    rdi
   14000688c:	ret    
   14000688d:	int3   
   14000688e:	int3   
   14000688f:	int3   
   140006890:	mov    rax,rcx
   140006893:	mov    ecx,0x5a4d
   140006898:	cmp    WORD PTR [rax],cx
   14000689b:	je     0x1400068a0
   14000689d:	xor    eax,eax
   14000689f:	ret    
   1400068a0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400068a4:	add    rcx,rax
   1400068a7:	xor    eax,eax
   1400068a9:	cmp    DWORD PTR [rcx],0x4550
   1400068af:	jne    0x1400068bd
   1400068b1:	mov    edx,0x20b
   1400068b6:	cmp    WORD PTR [rcx+0x18],dx
   1400068ba:	sete   al
   1400068bd:	ret    
   1400068be:	jmp    QWORD PTR [rip+0x9dc]        # 0x1400072a0
   1400068c4:	jmp    QWORD PTR [rip+0x9de]        # 0x1400072a8
   1400068ca:	jmp    QWORD PTR [rip+0x9e0]        # 0x1400072b0
   1400068d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400068d5:	push   rbp
   1400068d6:	mov    rbp,rsp
   1400068d9:	sub    rsp,0x20
   1400068dd:	mov    rax,QWORD PTR [rip+0x475c]        # 0x14000b040
   1400068e4:	and    QWORD PTR [rbp+0x18],0x0
   1400068e9:	movabs rbx,0x2b992ddfa232
   1400068f3:	cmp    rax,rbx
   1400068f6:	jne    0x140006967
   1400068f8:	lea    rcx,[rbp+0x18]
   1400068fc:	call   QWORD PTR [rip+0x6fe]        # 0x140007000
   140006902:	mov    rax,QWORD PTR [rbp+0x18]
   140006906:	mov    QWORD PTR [rbp+0x10],rax
   14000690a:	call   QWORD PTR [rip+0x6f8]        # 0x140007008
   140006910:	mov    eax,eax
   140006912:	xor    QWORD PTR [rbp+0x10],rax
   140006916:	call   QWORD PTR [rip+0x70c]        # 0x140007028
   14000691c:	lea    rcx,[rbp+0x20]
   140006920:	mov    eax,eax
   140006922:	xor    QWORD PTR [rbp+0x10],rax
   140006926:	call   QWORD PTR [rip+0x6e4]        # 0x140007010
   14000692c:	mov    eax,DWORD PTR [rbp+0x20]
   14000692f:	shl    rax,0x20
   140006933:	lea    rcx,[rbp+0x10]
   140006937:	xor    rax,QWORD PTR [rbp+0x20]
   14000693b:	xor    rax,QWORD PTR [rbp+0x10]
   14000693f:	xor    rax,rcx
   140006942:	movabs rcx,0xffffffffffff
   14000694c:	and    rax,rcx
   14000694f:	movabs rcx,0x2b992ddfa233
   140006959:	cmp    rax,rbx
   14000695c:	cmove  rax,rcx
   140006960:	mov    QWORD PTR [rip+0x46d9],rax        # 0x14000b040
   140006967:	mov    rbx,QWORD PTR [rsp+0x48]
   14000696c:	not    rax
   14000696f:	mov    QWORD PTR [rip+0x46d2],rax        # 0x14000b048
   140006976:	add    rsp,0x20
   14000697a:	pop    rbp
   14000697b:	ret    
   14000697c:	xor    eax,eax
   14000697e:	ret    
   14000697f:	int3   
   140006980:	mov    QWORD PTR [rsp+0x8],rbx
   140006985:	push   rdi
   140006986:	sub    rsp,0x20
   14000698a:	lea    rbx,[rip+0x1847]        # 0x1400081d8
   140006991:	lea    rdi,[rip+0x1840]        # 0x1400081d8
   140006998:	jmp    0x1400069a8
   14000699a:	mov    rax,QWORD PTR [rbx]
   14000699d:	test   rax,rax
   1400069a0:	je     0x1400069a4
   1400069a2:	call   rax
   1400069a4:	add    rbx,0x8
   1400069a8:	cmp    rbx,rdi
   1400069ab:	jb     0x14000699a
   1400069ad:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069b2:	add    rsp,0x20
   1400069b6:	pop    rdi
   1400069b7:	ret    
   1400069b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400069bd:	push   rdi
   1400069be:	sub    rsp,0x20
   1400069c2:	lea    rbx,[rip+0x181f]        # 0x1400081e8
   1400069c9:	lea    rdi,[rip+0x1818]        # 0x1400081e8
   1400069d0:	jmp    0x1400069e0
   1400069d2:	mov    rax,QWORD PTR [rbx]
   1400069d5:	test   rax,rax
   1400069d8:	je     0x1400069dc
   1400069da:	call   rax
   1400069dc:	add    rbx,0x8
   1400069e0:	cmp    rbx,rdi
   1400069e3:	jb     0x1400069d2
   1400069e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069ea:	add    rsp,0x20
   1400069ee:	pop    rdi
   1400069ef:	ret    
   1400069f0:	jmp    QWORD PTR [rip+0x8c2]        # 0x1400072b8
   1400069f6:	jmp    QWORD PTR [rip+0x8c4]        # 0x1400072c0
   1400069fc:	jmp    QWORD PTR [rip+0x8c6]        # 0x1400072c8
   140006a02:	jmp    QWORD PTR [rip+0x8c8]        # 0x1400072d0
   140006a08:	jmp    QWORD PTR [rip+0x8e2]        # 0x1400072f0
   140006a0e:	jmp    QWORD PTR [rip+0x8e4]        # 0x1400072f8
   140006a14:	jmp    QWORD PTR [rip+0x8e6]        # 0x140007300
   140006a1a:	jmp    QWORD PTR [rip+0x600]        # 0x140007020
   140006a20:	jmp    QWORD PTR [rip+0x5f2]        # 0x140007018
   140006a26:	jmp    QWORD PTR [rip+0x5e4]        # 0x140007010
   140006a2c:	jmp    QWORD PTR [rip+0x5f6]        # 0x140007028
   140006a32:	jmp    QWORD PTR [rip+0x5d0]        # 0x140007008
   140006a38:	jmp    QWORD PTR [rip+0x5c2]        # 0x140007000
   140006a3e:	int3   
   140006a3f:	int3   
   140006a40:	lea    rcx,[rdx+0x28]
   140006a47:	jmp    0x140001dd0
   140006a4c:	lea    rcx,[rdx+0x28]
   140006a53:	jmp    0x140001e50
   140006a58:	mov    QWORD PTR [rsp+0x10],rdx
   140006a5d:	push   rbp
   140006a5e:	sub    rsp,0x20
   140006a62:	mov    rbp,rdx
   140006a65:	mov    rdx,QWORD PTR [rbp+0x70]
   140006a69:	mov    rax,QWORD PTR [rdx]
   140006a6c:	movsxd rcx,DWORD PTR [rax+0x4]
   140006a70:	add    rcx,rdx
   140006a73:	mov    r8b,0x1
   140006a76:	mov    edx,0x4
   140006a7b:	call   QWORD PTR [rip+0x657]        # 0x1400070d8
   140006a81:	nop
   140006a82:	lea    rax,[rip+0xffffffffffffa749]        # 0x1400011d2
   140006a89:	add    rsp,0x20
   140006a8d:	pop    rbp
   140006a8e:	ret    
   140006a8f:	int3   
   140006a90:	lea    rcx,[rdx+0x50]
   140006a97:	rex.W jmp QWORD PTR [rip+0x6d2]        # 0x140007170
   140006a9e:	int3   
   140006a9f:	int3   
   140006aa0:	mov    rcx,QWORD PTR [rdx+0x40]
   140006aa7:	rex.W jmp QWORD PTR [rip+0x5f2]        # 0x1400070a0
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	rex push rbp
   140006ab2:	sub    rsp,0x20
   140006ab6:	mov    rbp,rdx
   140006ab9:	mov    eax,DWORD PTR [rbp+0x80]
   140006abf:	and    eax,0x1
   140006ac2:	test   eax,eax
   140006ac4:	je     0x140006ade
   140006ac6:	and    DWORD PTR [rbp+0x80],0xfffffffe
   140006acd:	mov    rcx,QWORD PTR [rbp+0x70]
   140006ad1:	add    rcx,0xb0
   140006ad8:	call   QWORD PTR [rip+0x5f2]        # 0x1400070d0
   140006ade:	add    rsp,0x20
   140006ae2:	pop    rbp
   140006ae3:	ret    
   140006ae4:	lea    rcx,[rdx+0x38]
   140006aeb:	jmp    0x140001d80
   140006af0:	rex push rbp
   140006af2:	sub    rsp,0x20
   140006af6:	mov    rbp,rdx
   140006af9:	mov    eax,DWORD PTR [rbp+0x60]
   140006afc:	and    eax,0x1
   140006aff:	test   eax,eax
   140006b01:	je     0x140006b18
   140006b03:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140006b07:	mov    rcx,QWORD PTR [rbp+0x50]
   140006b0b:	add    rcx,0xa8
   140006b12:	call   QWORD PTR [rip+0x5b8]        # 0x1400070d0
   140006b18:	add    rsp,0x20
   140006b1c:	pop    rbp
   140006b1d:	ret    
   140006b1e:	mov    rcx,QWORD PTR [rdx+0x50]
   140006b25:	add    rcx,0x10
   140006b29:	rex.W jmp QWORD PTR [rip+0x5b8]        # 0x1400070e8
   140006b30:	mov    rcx,QWORD PTR [rdx+0x28]
   140006b37:	rex.W jmp QWORD PTR [rip+0x562]        # 0x1400070a0
   140006b3e:	mov    rcx,QWORD PTR [rdx+0x50]
   140006b45:	add    rcx,0x8
   140006b49:	jmp    0x140001bb0
   140006b4e:	int3   
   140006b4f:	int3   
   140006b50:	mov    rcx,QWORD PTR [rdx+0x40]
   140006b57:	jmp    0x140001dd0
   140006b5c:	int3   
   140006b5d:	int3   
   140006b5e:	int3   
   140006b5f:	int3   
   140006b60:	mov    QWORD PTR [rsp+0x10],rdx
   140006b65:	push   rbp
   140006b66:	sub    rsp,0x20
   140006b6a:	mov    rbp,rdx
   140006b6d:	mov    rcx,QWORD PTR [rbp+0x68]
   140006b71:	mov    QWORD PTR [rbp+0x68],rcx
   140006b75:	xor    eax,eax
   140006b77:	inc    rcx
   140006b7a:	je     0x140006b92
   140006b7c:	cmp    rcx,0xffffffffffffffff
   140006b80:	ja     0x140006b8c
   140006b82:	call   0x140006154
   140006b87:	test   rax,rax
   140006b8a:	jne    0x140006b92
   140006b8c:	call   QWORD PTR [rip+0x5f6]        # 0x140007188
   140006b92:	mov    QWORD PTR [rbp+0x78],rax
   140006b96:	lea    rax,[rip+0xffffffffffffb819]        # 0x1400023b6
   140006b9d:	add    rsp,0x20
   140006ba1:	pop    rbp
   140006ba2:	ret    
   140006ba3:	int3   
   140006ba4:	mov    QWORD PTR [rsp+0x10],rdx
   140006ba9:	push   rbx
   140006baa:	push   rbp
   140006bab:	sub    rsp,0x28
   140006baf:	mov    rbp,rdx
   140006bb2:	mov    rbx,QWORD PTR [rbp+0x60]
   140006bb6:	cmp    QWORD PTR [rbx+0x18],0x10
   140006bbb:	jb     0x140006bc5
   140006bbd:	mov    rcx,QWORD PTR [rbx]
   140006bc0:	call   0x14000615a
   140006bc5:	mov    QWORD PTR [rbx+0x18],0xf
   140006bcd:	mov    QWORD PTR [rbx+0x10],0x0
   140006bd5:	mov    BYTE PTR [rbx],0x0
   140006bd8:	xor    edx,edx
   140006bda:	xor    ecx,ecx
   140006bdc:	call   0x1400062ea
   140006be1:	nop
   140006be2:	int3   
   140006be3:	int3   
   140006be4:	int3   
   140006be5:	int3   
   140006be6:	int3   
   140006be7:	int3   
   140006be8:	int3   
   140006be9:	int3   
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	int3   
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	mov    QWORD PTR [rsp+0x10],rdx
   140006bf5:	push   rbp
   140006bf6:	sub    rsp,0x20
   140006bfa:	mov    rbp,rdx
   140006bfd:	mov    rcx,QWORD PTR [rbp+0x68]
   140006c01:	mov    QWORD PTR [rbp+0x68],rcx
   140006c05:	xor    eax,eax
   140006c07:	inc    rcx
   140006c0a:	je     0x140006c2e
   140006c0c:	movabs rax,0x7fffffffffffffff
   140006c16:	cmp    rcx,rax
   140006c19:	ja     0x140006c28
   140006c1b:	add    rcx,rcx
   140006c1e:	call   0x140006154
   140006c23:	test   rax,rax
   140006c26:	jne    0x140006c2e
   140006c28:	call   QWORD PTR [rip+0x55a]        # 0x140007188
   140006c2e:	mov    QWORD PTR [rbp+0x78],rax
   140006c32:	lea    rax,[rip+0xffffffffffffb8a3]        # 0x1400024dc
   140006c39:	add    rsp,0x20
   140006c3d:	pop    rbp
   140006c3e:	ret    
   140006c3f:	int3   
   140006c40:	mov    QWORD PTR [rsp+0x10],rdx
   140006c45:	push   rbx
   140006c46:	push   rbp
   140006c47:	sub    rsp,0x28
   140006c4b:	mov    rbp,rdx
   140006c4e:	mov    rbx,QWORD PTR [rbp+0x60]
   140006c52:	cmp    QWORD PTR [rbx+0x18],0x8
   140006c57:	jb     0x140006c61
   140006c59:	mov    rcx,QWORD PTR [rbx]
   140006c5c:	call   0x14000615a
   140006c61:	mov    QWORD PTR [rbx+0x18],0x7
   140006c69:	mov    QWORD PTR [rbx+0x10],0x0
   140006c71:	xor    eax,eax
   140006c73:	mov    WORD PTR [rbx],ax
   140006c76:	xor    edx,edx
   140006c78:	xor    ecx,ecx
   140006c7a:	call   0x1400062ea
   140006c7f:	nop
   140006c80:	lea    rcx,[rdx+0x38]
   140006c87:	jmp    0x140001d40
   140006c8c:	int3   
   140006c8d:	int3   
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	lea    rcx,[rdx+0x40]
   140006c97:	jmp    0x140001e10
   140006c9c:	int3   
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	lea    rcx,[rdx+0x50]
   140006ca7:	jmp    0x140001d40
   140006cac:	int3   
   140006cad:	int3   
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	lea    rcx,[rdx+0x50]
   140006cb7:	jmp    0x140001d40
   140006cbc:	int3   
   140006cbd:	int3   
   140006cbe:	int3   
   140006cbf:	int3   
   140006cc0:	mov    rcx,QWORD PTR [rdx+0x1b0]
   140006cc7:	jmp    0x140001d80
   140006ccc:	lea    rcx,[rdx+0x30]
   140006cd3:	jmp    0x140001d40
   140006cd8:	rex push rbp
   140006cda:	sub    rsp,0x20
   140006cde:	mov    rbp,rdx
   140006ce1:	mov    eax,DWORD PTR [rbp+0x1b8]
   140006ce7:	and    eax,0x1
   140006cea:	test   eax,eax
   140006cec:	je     0x140006d09
   140006cee:	and    DWORD PTR [rbp+0x1b8],0xfffffffe
   140006cf5:	lea    rcx,[rbp+0x80]
   140006cfc:	add    rcx,0xb0
   140006d03:	call   QWORD PTR [rip+0x3c7]        # 0x1400070d0
   140006d09:	add    rsp,0x20
   140006d0d:	pop    rbp
   140006d0e:	ret    
   140006d0f:	lea    rcx,[rdx+0x50]
   140006d16:	jmp    0x140001d80
   140006d1b:	lea    rcx,[rdx+0x80]
   140006d22:	jmp    0x140001fd0
   140006d27:	int3   
   140006d28:	int3   
   140006d29:	int3   
   140006d2a:	int3   
   140006d2b:	int3   
   140006d2c:	int3   
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	lea    rcx,[rdx+0x20]
   140006d37:	jmp    0x140001d80
   140006d3c:	lea    rcx,[rdx+0x40]
   140006d43:	jmp    0x140001d80
   140006d48:	lea    rcx,[rdx+0x60]
   140006d4f:	jmp    0x140001d80
   140006d54:	int3   
   140006d55:	int3   
   140006d56:	int3   
   140006d57:	int3   
   140006d58:	int3   
   140006d59:	int3   
   140006d5a:	int3   
   140006d5b:	int3   
   140006d5c:	int3   
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	lea    rcx,[rdx+0x28]
   140006d67:	jmp    0x140001dd0
   140006d6c:	lea    rcx,[rdx+0x28]
   140006d73:	jmp    0x140001e50
   140006d78:	mov    QWORD PTR [rsp+0x10],rdx
   140006d7d:	push   rbp
   140006d7e:	sub    rsp,0x20
   140006d82:	mov    rbp,rdx
   140006d85:	mov    rdx,QWORD PTR [rbp+0x70]
   140006d89:	mov    rax,QWORD PTR [rdx]
   140006d8c:	movsxd rcx,DWORD PTR [rax+0x4]
   140006d90:	add    rcx,rdx
   140006d93:	mov    r8b,0x1
   140006d96:	mov    edx,0x4
   140006d9b:	call   QWORD PTR [rip+0x337]        # 0x1400070d8
   140006da1:	nop
   140006da2:	lea    rax,[rip+0xffffffffffffe8c0]        # 0x140005669
   140006da9:	add    rsp,0x20
   140006dad:	pop    rbp
   140006dae:	ret    
   140006daf:	int3   
   140006db0:	rex push rbp
   140006db2:	sub    rsp,0x20
   140006db6:	mov    rbp,rdx
   140006db9:	mov    eax,DWORD PTR [rbp+0x70]
   140006dbc:	and    eax,0x1
   140006dbf:	test   eax,eax
   140006dc1:	je     0x140006dd8
   140006dc3:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140006dc7:	mov    rcx,QWORD PTR [rbp+0x60]
   140006dcb:	add    rcx,0xa8
   140006dd2:	call   QWORD PTR [rip+0x2f8]        # 0x1400070d0
   140006dd8:	add    rsp,0x20
   140006ddc:	pop    rbp
   140006ddd:	ret    
   140006dde:	mov    rcx,QWORD PTR [rdx+0x60]
   140006de5:	add    rcx,0x10
   140006de9:	rex.W jmp QWORD PTR [rip+0x2f8]        # 0x1400070e8
   140006df0:	mov    rcx,QWORD PTR [rdx+0x68]
   140006df7:	rex.W jmp QWORD PTR [rip+0x2a2]        # 0x1400070a0
   140006dfe:	mov    rcx,QWORD PTR [rdx+0x60]
   140006e05:	add    rcx,0x8
   140006e09:	jmp    0x140001bb0
   140006e0e:	int3   
   140006e0f:	int3   
   140006e10:	lea    rcx,[rdx+0x40]
   140006e17:	jmp    0x140001e10
   140006e1c:	int3   
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	mov    rcx,QWORD PTR [rdx+0x188]
   140006e27:	jmp    0x140001d40
   140006e2c:	lea    rcx,[rdx+0x30]
   140006e33:	jmp    0x140001d40
   140006e38:	lea    rcx,[rdx+0x60]
   140006e3f:	jmp    0x140002010
   140006e44:	rex push rbp
   140006e46:	sub    rsp,0x20
   140006e4a:	mov    rbp,rdx
   140006e4d:	mov    ecx,0x8
   140006e52:	call   0x14000669c
   140006e57:	nop
   140006e58:	add    rsp,0x20
   140006e5c:	pop    rbp
   140006e5d:	ret    
   140006e5e:	int3   
   140006e5f:	rex push rbp
   140006e61:	sub    rsp,0x20
   140006e65:	mov    rbp,rdx
   140006e68:	mov    rax,QWORD PTR [rcx]
   140006e6b:	mov    rdx,rcx
   140006e6e:	mov    ecx,DWORD PTR [rax]
   140006e70:	call   0x1400067cc
   140006e75:	nop
   140006e76:	add    rsp,0x20
   140006e7a:	pop    rbp
   140006e7b:	ret    
   140006e7c:	int3   
   140006e7d:	rex push rbp
   140006e7f:	sub    rsp,0x20
   140006e83:	mov    rbp,rdx
   140006e86:	cmp    DWORD PTR [rbp+0x20],0x0
   140006e8a:	jne    0x140006ea2
   140006e8c:	mov    r9,QWORD PTR [rbp+0x78]
   140006e90:	mov    r8d,DWORD PTR [rbp+0x70]
   140006e94:	mov    rdx,QWORD PTR [rbp+0x68]
   140006e98:	mov    rcx,QWORD PTR [rbp+0x60]
   140006e9c:	call   0x140006730
   140006ea1:	nop
   140006ea2:	add    rsp,0x20
   140006ea6:	pop    rbp
   140006ea7:	ret    
   140006ea8:	int3   
   140006ea9:	rex push rbp
   140006eab:	sub    rsp,0x20
   140006eaf:	mov    rbp,rdx
   140006eb2:	mov    QWORD PTR [rbp+0x38],rcx
   140006eb6:	mov    QWORD PTR [rbp+0x28],rcx
   140006eba:	mov    rax,QWORD PTR [rbp+0x28]
   140006ebe:	mov    rcx,QWORD PTR [rax]
   140006ec1:	mov    QWORD PTR [rbp+0x30],rcx
   140006ec5:	mov    rax,QWORD PTR [rbp+0x30]
   140006ec9:	cmp    DWORD PTR [rax],0xe06d7363
   140006ecf:	je     0x140006edd
   140006ed1:	mov    DWORD PTR [rbp+0x20],0x0
   140006ed8:	mov    eax,DWORD PTR [rbp+0x20]
   140006edb:	jmp    0x140006ee3
   140006edd:	call   0x140006a08
   140006ee2:	nop
   140006ee3:	add    rsp,0x20
   140006ee7:	pop    rbp
   140006ee8:	ret    
   140006ee9:	int3   
   140006eea:	int3   
   140006eeb:	int3   
   140006eec:	int3   
   140006eed:	int3   
   140006eee:	int3   
   140006eef:	int3   
   140006ef0:	rex push rbp
   140006ef2:	sub    rsp,0x20
   140006ef6:	mov    rbp,rdx
   140006ef9:	mov    rax,QWORD PTR [rcx]
   140006efc:	xor    ecx,ecx
   140006efe:	cmp    DWORD PTR [rax],0xc0000005
   140006f04:	sete   cl
   140006f07:	mov    eax,ecx
   140006f09:	add    rsp,0x20
   140006f0d:	pop    rbp
   140006f0e:	ret    
   140006f0f:	int3   
   140006f10:	lea    rax,[rip+0x709]        # 0x140007620
   140006f17:	mov    QWORD PTR [rip+0x40e2],rax        # 0x14000b000
   140006f1e:	ret    
   140006f1f:	int3   
   140006f20:	lea    rax,[rip+0x6f9]        # 0x140007620
   140006f27:	mov    QWORD PTR [rip+0x40da],rax        # 0x14000b008
   140006f2e:	ret    
   140006f2f:	int3   
   140006f30:	lea    rax,[rip+0x6e9]        # 0x140007620
   140006f37:	mov    QWORD PTR [rip+0x40d2],rax        # 0x14000b010
   140006f3e:	ret    
   140006f3f:	int3   
   140006f40:	lea    rax,[rip+0x6d9]        # 0x140007620
   140006f47:	mov    QWORD PTR [rip+0x40b2],rax        # 0x14000b000
   140006f4e:	ret    
   140006f4f:	int3   
   140006f50:	lea    rax,[rip+0x6c9]        # 0x140007620
   140006f57:	mov    QWORD PTR [rip+0x40aa],rax        # 0x14000b008
   140006f5e:	ret    
   140006f5f:	int3   
   140006f60:	lea    rax,[rip+0x6b9]        # 0x140007620
   140006f67:	mov    QWORD PTR [rip+0x40a2],rax        # 0x14000b010
   140006f6e:	ret    
   140006f6f:	int3   
   140006f70:	rex push rbx
   140006f72:	sub    rsp,0x20
   140006f76:	jmp    0x140006fa7
   140006f78:	mov    rax,QWORD PTR [rbx]
   140006f7b:	mov    rcx,QWORD PTR [rbx+0x8]
   140006f7f:	mov    QWORD PTR [rip+0x4492],rax        # 0x14000b418
   140006f86:	mov    rax,QWORD PTR [rcx]
   140006f89:	call   QWORD PTR [rax+0x10]
   140006f8c:	test   rax,rax
   140006f8f:	je     0x140006f9f
   140006f91:	mov    r8,QWORD PTR [rax]
   140006f94:	mov    edx,0x1
   140006f99:	mov    rcx,rax
   140006f9c:	call   QWORD PTR [r8]
   140006f9f:	mov    rcx,rbx
   140006fa2:	call   0x14000615a
   140006fa7:	mov    rbx,QWORD PTR [rip+0x446a]        # 0x14000b418
   140006fae:	test   rbx,rbx
   140006fb1:	jne    0x140006f78
   140006fb3:	add    rsp,0x20
   140006fb7:	pop    rbx
   140006fb8:	ret    

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	clc    
   140007001:	movabs ds:0xa2e2000000000000,al
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    BYTE PTR [rax],al
   140007010:	mov    dl,0xa2
   140007012:	add    BYTE PTR [rax],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	movabs ds:0x92000000000000a2,al
   140007021:	movabs ds:0xa2cc000000000000,al
	...
   140007036:	add    BYTE PTR [rax],al
   140007038:	rcl    BYTE PTR [rsi+0x0],cl
   14000703e:	add    BYTE PTR [rax],al
   140007040:	hlt    
   140007041:	xchg   esi,eax
   140007042:	add    BYTE PTR [rax],al
   140007044:	add    BYTE PTR [rax],al
   140007046:	add    BYTE PTR [rax],al
   140007048:	(bad)  
   140007049:	xchg   edi,eax
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rax],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	xor    al,0x97
   140007052:	add    BYTE PTR [rax],al
   140007054:	add    BYTE PTR [rax],al
   140007056:	add    BYTE PTR [rax],al
   140007058:	push   0x97
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rdi+rdx*4+0x0],dl
   140007066:	add    BYTE PTR [rax],al
   140007068:	rcl    BYTE PTR [rdi+0x0],cl
   14000706e:	add    BYTE PTR [rax],al
   140007070:	adc    BYTE PTR [rax+0x0],bl
   140007076:	add    BYTE PTR [rax],al
   140007078:	rex.RX cwde 
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	mov    BYTE PTR [rax+0x0],bl
   140007086:	add    BYTE PTR [rax],al
   140007088:	test   al,0x98
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	enter  0x98,0x0
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	neg    BYTE PTR [rax+0x0]
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	xor    bl,BYTE PTR [rcx+0x0]
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	outs   dx,BYTE PTR ds:[rsi]
   1400070a9:	cdq    
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	mov    edx,0x99
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    ah,bh
   1400070b9:	cdq    
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	add    BYTE PTR [rax],al
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	rex.R (bad) 
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	mov    bl,BYTE PTR [rdx+0x0]
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	retf   0x9a
   1400070d3:	add    BYTE PTR [rax],al
   1400070d5:	add    BYTE PTR [rax],al
   1400070d7:	add    BYTE PTR [rax],al
   1400070d9:	fwait
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	rex
   1400070e1:	fwait
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	add    BYTE PTR [rax],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	lods   al,BYTE PTR ds:[rsi]
   1400070e9:	fwait
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	out    0x9b,al
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax],al
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	and    al,0x9c
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	push   0x9c
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    BYTE PTR [rax+0x9c],dl
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    dh,dl
   140007111:	pushf  
   140007112:	add    BYTE PTR [rax],al
   140007114:	add    BYTE PTR [rax],al
   140007116:	add    BYTE PTR [rax],al
   140007118:	(bad)  
   140007119:	popf   
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	popfw  
   140007122:	add    BYTE PTR [rax],al
   140007124:	add    BYTE PTR [rax],al
   140007126:	add    BYTE PTR [rax],al
   140007128:	jl     0x1400070c7
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	add    BYTE PTR [rax],al
   14000712e:	add    BYTE PTR [rax],al
   140007130:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007131:	popf   
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax],al
   140007138:	mov    esp,0x9d
   14000713d:	add    BYTE PTR [rax],al
   14000713f:	add    al,dh
   140007141:	popf   
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	sub    BYTE PTR [rsi+0x0],bl
   14000714e:	add    BYTE PTR [rax],al
   140007150:	fs sahf 
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	mov    eax,0x9e
   14000715d:	add    BYTE PTR [rax],al
   14000715f:	add    ah,bh
   140007161:	sahf   
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	and    al,0x9f
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	add    BYTE PTR [rax],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	jl     0x140007108
   140007172:	add    BYTE PTR [rax],al
   140007174:	add    BYTE PTR [rax],al
   140007176:	add    BYTE PTR [rax],al
   140007178:	xchg   esi,eax
   140007179:	xchg   esi,eax
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	add    BYTE PTR [rax],al
   14000717e:	add    BYTE PTR [rax],al
   140007180:	(bad)  
   140007181:	xchg   esi,eax
   140007182:	add    BYTE PTR [rax],al
   140007184:	add    BYTE PTR [rax],al
   140007186:	add    BYTE PTR [rax],al
   140007188:	mov    eax,0x96
	...
   140007195:	add    BYTE PTR [rax],al
   140007197:	add    BYTE PTR [rdi+rbx*4+0x0],bl
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	mov    al,0x9f
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	mov    edx,0x9f
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    BYTE PTR [rdi+rbx*4+0x0],cl
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	int3   
   1400071b9:	lahf   
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	(bad)  
   1400071c1:	lahf   
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	ficomp WORD PTR [rdi+0x0]
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	(bad)  
   1400071d1:	lahf   
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	add    BYTE PTR [rax],al
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	hlt    
   1400071d9:	lahf   
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	add    BYTE PTR [rax],al
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	(bad)  
   1400071e1:	lahf   
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	add    BYTE PTR [rax],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	or     BYTE PTR [rax+0x0],ah
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	(bad)  
   1400071f1:	movabs al,ds:0xa026000000000000
   1400071fa:	add    BYTE PTR [rax],al
   1400071fc:	add    BYTE PTR [rax],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	xor    ah,BYTE PTR [rax+0x0]
   140007206:	add    BYTE PTR [rax],al
   140007208:	cmp    al,0xa0
   14000720a:	add    BYTE PTR [rax],al
   14000720c:	add    BYTE PTR [rax],al
   14000720e:	add    BYTE PTR [rax],al
   140007210:	pop    rsp
   140007211:	movabs al,ds:0xa07e000000000000
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	add    BYTE PTR [rax],al
   14000721e:	add    BYTE PTR [rax],al
   140007220:	movabs ds:0xbe000000000000a0,al
   140007229:	movabs al,ds:0xa0d4000000000000
   140007232:	add    BYTE PTR [rax],al
   140007234:	add    BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	(bad)  
   140007239:	movabs al,ds:0xa0f4000000000000
   140007242:	add    BYTE PTR [rax],al
   140007244:	add    BYTE PTR [rax],al
   140007246:	add    BYTE PTR [rax],al
   140007248:	(bad)  
   140007249:	movabs al,ds:0xa116000000000000
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	(bad)  
   140007259:	movabs eax,ds:0xa128000000000000
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rax],al
   140007268:	movabs eax,ss:0xa144000000000000
   140007272:	add    BYTE PTR [rax],al
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rax],al
   140007278:	pop    rsp
   140007279:	movabs eax,ds:0xa166000000000000
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	je     0x14000722b
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rax],al
   14000728e:	add    BYTE PTR [rax],al
   140007290:	(bad)  
   140007291:	movabs eax,ds:0xa192000000000000
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400072a1:	movabs eax,ds:0xa1ac000000000000
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	mov    ah,0xa1
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    BYTE PTR [rax],al
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	mov    esi,0xa1
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    ah,dl
   1400072c1:	movabs eax,ds:0xa1e8000000000000
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	add    BYTE PTR [rax],al
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	mul    BYTE PTR [rcx+0x0]
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	add    ah,BYTE PTR [rdx+0x0]
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	(bad)  
   1400072e1:	movabs ds:0xa218000000000000,al
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	add    BYTE PTR [rax],al
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	and    al,0xa2
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	add    BYTE PTR [rax],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	cmp    BYTE PTR [rdx+0x0],ah
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	outs   dx,BYTE PTR ds:[rsi]
   140007301:	movabs ds:0x9f7a000000000000,al
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	outs   dx,BYTE PTR ds:[rsi]
   140007311:	lahf   
   140007312:	add    BYTE PTR [rax],al
   140007314:	add    BYTE PTR [rax],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	ret    0x9f
   14000731b:	add    BYTE PTR [rax],al
   14000731d:	add    BYTE PTR [rax],al
   14000731f:	add    BYTE PTR [rsi+0x9f],ah
	...
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    ah,al
   140007331:	xchg   ebp,eax
   140007332:	add    BYTE PTR [rax],al
   140007334:	add    BYTE PTR [rax],al
   140007336:	add    BYTE PTR [rax],al
   140007338:	(bad)  
   140007339:	xchg   ebp,eax
	...
   14000734e:	add    BYTE PTR [rax],al
   140007350:	pop    rax
   140007351:	add    BYTE PTR fs:[rax+0x1],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rax+rdx*1+0x0],bl
   14000735b:	rex add DWORD PTR [rax],eax
   14000735e:	add    BYTE PTR [rax],al
   140007360:	add    BYTE PTR [rax],dl
   140007362:	add    BYTE PTR [rax+0x1],al
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rax],dl
   140007369:	adc    BYTE PTR [rax],al
   14000736b:	rex add DWORD PTR [rax],eax
   14000736e:	add    BYTE PTR [rax],al
   140007370:	and    BYTE PTR [rax],dl
   140007372:	add    BYTE PTR [rax+0x1],al
	...
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rax+0x1400063],cl
   14000738d:	add    BYTE PTR [rax],al
   14000738f:	add    BYTE PTR [rax+0x61],ah
   140007392:	add    BYTE PTR [rax+0x1],al
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    BYTE PTR [rdi+riz*2+0x14000],dh
	...
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	mov    dl,0x1e
   1400073b6:	sbb    DWORD PTR [rax+0x0],0x2000000
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rip+0x60000000],bh        # 0x1a00073c5
   1400073c5:	jp     0x1400073c7
   1400073c7:	add    BYTE PTR [rax+0x6e],ah
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	add    BYTE PTR [rax],al
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	mov    dl,0x1e
   1400073d2:	sbb    DWORD PTR [rax+0x0],0xc000000
   1400073d9:	add    BYTE PTR [rax],al
   1400073db:	add    BYTE PTR [rax+rax*1],dl
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	movabs al,ds:0x2200006ea000007a
   1400073e9:	add    eax,0x41993
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	lods   al,BYTE PTR ds:[rsi]
   1400073f1:	(bad)  
   1400073f2:	add    BYTE PTR [rax],al
   1400073f4:	add    al,BYTE PTR [rax]
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	int3   
   1400073f9:	(bad)  
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	or     BYTE PTR [rax],al
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	and    BYTE PTR [rbx+0x200000],al
   140007406:	add    BYTE PTR [rax],al
   140007408:	add    BYTE PTR [rax],al
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	add    DWORD PTR [rax],eax
   14000740e:	add    BYTE PTR [rax],al
   140007410:	and    al,BYTE PTR [rip+0x41993]        # 0x140048da9
   140007416:	add    BYTE PTR [rax],al
   140007418:	rol    BYTE PTR [rbp+0x20000],0x0
   14000741f:	add    al,ah
   140007421:	test   DWORD PTR [rax],eax
   140007423:	add    BYTE PTR [rax],cl
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    BYTE PTR [rax],dh
   140007429:	xchg   BYTE PTR [rax],al
   14000742b:	add    BYTE PTR [rax],ah
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rax],al
   140007431:	add    BYTE PTR [rax],al
   140007433:	add    BYTE PTR [rcx],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rdx],ah
   140007439:	add    eax,0x51993
   14000743e:	add    BYTE PTR [rax],al
   140007440:	xchg   QWORD PTR [rax],rax
	...
   14000744b:	add    BYTE PTR [rdx],cl
   14000744d:	add    BYTE PTR [rax],al
   14000744f:	add    BYTE PTR [rax-0x79],dh
   140007452:	add    BYTE PTR [rax],al
   140007454:	jo     0x140007456
   140007456:	add    BYTE PTR [rax],al
   140007458:	add    BYTE PTR [rax],al
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	add    DWORD PTR [rax],eax
   14000745e:	add    BYTE PTR [rax],al
   140007460:	and    al,BYTE PTR [rip+0x41993]        # 0x140048df9
   140007466:	add    BYTE PTR [rax],al
   140007468:	in     al,0x87
	...
   140007472:	add    BYTE PTR [rax],al
   140007474:	(bad)  
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rax],cl
   140007479:	mov    BYTE PTR [rax],al
   14000747b:	add    BYTE PTR [rax],ah
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    BYTE PTR [rax],al
   140007481:	add    BYTE PTR [rax],al
   140007483:	add    BYTE PTR [rcx],al
   140007485:	add    BYTE PTR [rax],al
   140007487:	add    BYTE PTR [rdx],ah
   140007489:	add    eax,0x11993
   14000748e:	add    BYTE PTR [rax],al
   140007490:	pop    rsp
   140007491:	mov    BYTE PTR [rax],al
	...
   14000749b:	add    BYTE PTR [rbx],al
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rax-0x78],ch
   1400074a2:	add    BYTE PTR [rax],al
   1400074a4:	and    BYTE PTR [rax],al
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	add    BYTE PTR [rax],al
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	add    DWORD PTR [rax],eax
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018e49
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	pushf  
   1400074b9:	mov    BYTE PTR [rax],al
	...
   1400074c3:	add    BYTE PTR [rbx],al
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    BYTE PTR [rax+0x20000088],ch
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rax],al
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    BYTE PTR [rcx],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rdx],ah
   1400074d9:	add    eax,0x11993
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	lock mov BYTE PTR [rax],al
	...
   1400074eb:	add    BYTE PTR [rbx],al
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    al,bh
   1400074f1:	mov    BYTE PTR [rax],al
   1400074f3:	add    BYTE PTR [rax+0x0],cl
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	add    BYTE PTR [rax],al
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	add    DWORD PTR [rax],eax
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	and    al,BYTE PTR [rip+0x11993]        # 0x140018e99
   140007506:	add    BYTE PTR [rax],al
   140007508:	push   0x89
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rax],al
   140007511:	add    BYTE PTR [rax],al
   140007513:	add    BYTE PTR [rbx],al
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rax-0x77],dh
   14000751a:	add    BYTE PTR [rax],al
   14000751c:	rex.W add BYTE PTR [rax],al
   14000751f:	add    BYTE PTR [rax],al
   140007521:	add    BYTE PTR [rax],al
   140007523:	add    BYTE PTR [rcx],al
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    BYTE PTR [rdx],ah
   140007529:	add    eax,0x11993
   14000752e:	add    BYTE PTR [rax],al
   140007530:	sbb    BYTE PTR [rdx+0x0],cl
   140007536:	add    BYTE PTR [rax],al
   140007538:	add    BYTE PTR [rax],al
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	add    eax,DWORD PTR [rax]
   14000753e:	add    BYTE PTR [rax],al
   140007540:	and    BYTE PTR [rdx+0x300000],cl
   140007546:	add    BYTE PTR [rax],al
   140007548:	add    BYTE PTR [rax],al
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	add    DWORD PTR [rax],eax
   14000754e:	add    BYTE PTR [rax],al
   140007550:	and    al,BYTE PTR [rip+0x21993]        # 0x140028ee9
   140007556:	add    BYTE PTR [rax],al
   140007558:	je     0x1400074e4
	...
   140007562:	add    BYTE PTR [rax],al
   140007564:	add    eax,0x88000000
   140007569:	mov    al,BYTE PTR [rax]
   14000756b:	add    BYTE PTR [rax],dh
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rax],al
   140007571:	add    BYTE PTR [rax],al
   140007573:	add    BYTE PTR [rcx],al
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rdx],ah
   140007579:	add    eax,0x41993
   14000757e:	add    BYTE PTR [rax],al
   140007580:	hlt    
   140007581:	mov    al,BYTE PTR [rax]
   140007583:	add    BYTE PTR [rcx],al
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rbx+rcx*4],dl
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	or     DWORD PTR [rax],eax
   14000758e:	add    BYTE PTR [rax],al
   140007590:	rex mov eax,DWORD PTR [rax]
   140007593:	add    BYTE PTR [rax],ah
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    BYTE PTR [rax],al
   140007599:	add    BYTE PTR [rax],al
   14000759b:	add    BYTE PTR [rcx],al
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    BYTE PTR [rdx],ah
   1400075a1:	add    eax,0x31993
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	ror    BYTE PTR [rbx+0x0],0x0
   1400075af:	add    BYTE PTR [rax],al
   1400075b1:	add    BYTE PTR [rax],al
   1400075b3:	add    BYTE PTR [rdi],al
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    al,bl
   1400075b9:	mov    eax,DWORD PTR [rax]
   1400075bb:	add    BYTE PTR [rax+0x0],ah
   1400075c1:	add    BYTE PTR [rax],al
   1400075c3:	add    BYTE PTR [rcx],al
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rdx],ah
   1400075c9:	add    eax,0x11993
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	cmp    BYTE PTR [rax+rax*1+0x0],cl
   1400075d7:	add    BYTE PTR [rax],al
   1400075d9:	add    BYTE PTR [rax],al
   1400075db:	add    BYTE PTR [rbx],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rax-0x74],al
   1400075e2:	add    BYTE PTR [rax],al
   1400075e4:	and    BYTE PTR [rax],al
   1400075e6:	add    BYTE PTR [rax],al
   1400075e8:	add    BYTE PTR [rax],al
   1400075ea:	add    BYTE PTR [rax],al
   1400075ec:	add    DWORD PTR [rax],eax
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018f89
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	je     0x140007586
	...
   140007602:	add    BYTE PTR [rax],al
   140007604:	add    eax,DWORD PTR [rax]
   140007606:	add    BYTE PTR [rax],al
   140007608:	or     BYTE PTR [rax+rax*1+0x2000],0x0
   140007610:	add    BYTE PTR [rax],al
   140007612:	add    BYTE PTR [rax],al
   140007614:	add    DWORD PTR [rax],eax
   140007616:	add    BYTE PTR [rax],al
   140007618:	xor    BYTE PTR [rsi+0x0],bh
   14000761b:	rex add DWORD PTR [rax],eax
   14000761e:	add    BYTE PTR [rax],al
   140007620:	and    BYTE PTR [rdx],ah
   140007622:	add    BYTE PTR [rax+0x1],al
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rsi+0x61],cl
   14000762a:	add    BYTE PTR [rax+0x1],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rsi+0x61],cl
   140007632:	add    BYTE PTR [rax+0x1],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rax+0x1400037],dl
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    BYTE PTR [rax],al
   140007641:	cmp    BYTE PTR [rax],al
   140007643:	rex add DWORD PTR [rax],eax
   140007646:	add    BYTE PTR [rax],al
   140007648:	and    BYTE PTR [rax],bh
   14000764a:	add    BYTE PTR [rax+0x1],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rax+0x140007e],ch
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax+0x1400021],dl
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    al,dh
   140007661:	cmp    al,0x0
   140007663:	rex add DWORD PTR [rax],eax
   140007666:	add    BYTE PTR [rax],al
   140007668:	nop
   140007669:	cmp    eax,DWORD PTR [rax]
   14000766b:	rex add DWORD PTR [rax],eax
   14000766e:	add    BYTE PTR [rax],al
   140007670:	nop
   140007671:	(bad)  
   140007672:	add    BYTE PTR [rax+0x1],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rax],al
   140007679:	cmp    BYTE PTR [rax],al
   14000767b:	rex add DWORD PTR [rax],eax
   14000767e:	add    BYTE PTR [rax],al
   140007680:	and    BYTE PTR [rax],bh
   140007682:	add    BYTE PTR [rax+0x1],al
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    BYTE PTR [rdi+0x65],ah
   14000768a:	outs   dx,BYTE PTR ds:[rsi]
   14000768b:	gs jb  0x1400076f7
   14000768e:	movsxd eax,DWORD PTR [rax]
   140007690:	jne    0x140007700
   140007692:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140007696:	outs   dx,BYTE PTR ds:[rsi]
   140007697:	and    BYTE PTR [rbp+0x72],ah
   14000769a:	jb     0x14000770b
   14000769c:	jb     0x14000769e
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	sub    BYTE PTR [rdi+0x0],bh
   1400076a3:	rex add DWORD PTR [rax],eax
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	shl    BYTE PTR [rcx],0x0
   1400076ab:	rex add DWORD PTR [rax],eax
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	add    BYTE PTR [rip+0x14000],bh        # 0x14001b6b6
   1400076b6:	add    BYTE PTR [rax],al
   1400076b8:	add    BYTE PTR [rax+rax*1],bh
   1400076bb:	rex add DWORD PTR [rax],eax
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	nop
   1400076c1:	(bad)  
   1400076c2:	add    BYTE PTR [rax+0x1],al
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    BYTE PTR [rax],al
   1400076c9:	cmp    BYTE PTR [rax],al
   1400076cb:	rex add DWORD PTR [rax],eax
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	and    BYTE PTR [rax],bh
   1400076d2:	add    BYTE PTR [rax+0x1],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rcx+0x6f],ch
   1400076da:	jae    0x140007750
   1400076dc:	jb     0x140007743
   1400076de:	(bad)  
   1400076df:	ins    DWORD PTR es:[rdi],dx
	...
   1400076e8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400076ef:	ins    DWORD PTR es:[rdi],dx
   1400076f0:	and    BYTE PTR [rbx+0x74],dh
   1400076f3:	jb     0x14000775a
   1400076f5:	(bad)  
   1400076f6:	ins    DWORD PTR es:[rdi],dx
   1400076f7:	and    BYTE PTR [rbp+0x72],ah
   1400076fa:	jb     0x14000776b
   1400076fc:	jb     0x1400076fe
   1400076fe:	add    BYTE PTR [rax],al
   140007700:	mov    al,0x7f
   140007702:	add    BYTE PTR [rax+0x1],al
   140007705:	add    BYTE PTR [rax],al
   140007707:	add    al,dh
   140007709:	and    DWORD PTR [rax],eax
   14000770b:	rex add DWORD PTR [rax],eax
   14000770e:	add    BYTE PTR [rax],al
   140007710:	adc    BYTE PTR [rip+0x14000],bh        # 0x14001b716
   140007716:	add    BYTE PTR [rax],al
   140007718:	push   rax
   140007719:	cmp    al,0x0
   14000771b:	rex add DWORD PTR [rax],eax
   14000771e:	add    BYTE PTR [rax],al
   140007720:	push   rax
   140007721:	(bad)  
   140007722:	add    BYTE PTR [rax+0x1],al
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rax],al
   140007729:	cmp    BYTE PTR [rax],al
   14000772b:	rex add DWORD PTR [rax],eax
   14000772e:	add    BYTE PTR [rax],al
   140007730:	and    BYTE PTR [rax],bh
   140007732:	add    BYTE PTR [rax+0x1],al
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    BYTE PTR [rbx+0x79],dh
   14000773a:	jae    0x1400077b0
   14000773c:	gs ins DWORD PTR es:[rdi],dx
   14000773e:	add    BYTE PTR [rax],al
   140007740:	data16 outs dx,BYTE PTR ds:[rsi]
   140007742:	xor    eax,0x39476636
   140007747:	xor    esp,DWORD PTR [rcx+0x44]
   14000774a:	rex.RB jno 0x140007798
   14000774d:	jns    0x1400077c6
   14000774f:	je     0x140007751
   140007751:	add    BYTE PTR [rax],al
   140007753:	add    BYTE PTR [rax],al
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    BYTE PTR [rax+0x140007a],bh
   14000775d:	add    BYTE PTR [rax],al
   14000775f:	add    BYTE PTR [rax+0x1400020],dh
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rax],dh
   140007769:	sub    eax,DWORD PTR [rax]
   14000776b:	rex add DWORD PTR [rax],eax
   14000776e:	add    BYTE PTR [rax],al
   140007770:	lock sub al,0x0
   140007773:	rex add DWORD PTR [rax],eax
   140007776:	add    BYTE PTR [rax],al
   140007778:	rex
   140007779:	add    BYTE PTR ds:[rax+0x1],al
   14000777d:	add    BYTE PTR [rax],al
   14000777f:	add    BYTE PTR [rax],ah
   140007781:	add    BYTE PTR [r8+0x1],al
   140007785:	add    BYTE PTR [rax],al
   140007787:	add    BYTE PTR [rcx+riz*2],ah
   14000778a:	add    BYTE PTR [rax+0x1],al
   14000778d:	add    BYTE PTR [rax],al
   14000778f:	add    BYTE PTR [rax+0x140004e],dh
   140007795:	add    BYTE PTR [rax],al
   140007797:	add    al,dl
   140007799:	rex.WXB add BYTE PTR [r8+0x1],al
   14000779d:	add    BYTE PTR [rax],al
   14000779f:	add    BYTE PTR [rdx],ch
   1400077a1:	(bad)  
   1400077a2:	add    BYTE PTR [rax+0x1],al
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rax],dh
   1400077a9:	(bad)  
   1400077aa:	add    BYTE PTR [rax+0x1],al
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rax+0x48],dl
   1400077b2:	add    BYTE PTR [rax+0x1],al
   1400077b5:	add    BYTE PTR [rax],al
   1400077b7:	add    BYTE PTR [rax+0x49],al
   1400077ba:	add    BYTE PTR [rax+0x1],al
   1400077bd:	add    BYTE PTR [rax],al
   1400077bf:	add    BYTE PTR [rax+0x4a],ah
   1400077c2:	add    BYTE PTR [rax+0x1],al
   1400077c5:	add    BYTE PTR [rax],al
   1400077c7:	add    BYTE PTR [rax+0x4b],dl
   1400077ca:	add    BYTE PTR [rax+0x1],al
   1400077cd:	add    BYTE PTR [rax],al
   1400077cf:	add    BYTE PTR [rax+0x140003a],al
   1400077d5:	add    BYTE PTR [rax],al
   1400077d7:	add    BYTE PTR [rax+0x140007b],cl
   1400077dd:	add    BYTE PTR [rax],al
   1400077df:	add    BYTE PTR [rax+0x1400020],bl
   1400077e5:	add    BYTE PTR [rax],al
   1400077e7:	add    BYTE PTR [rax],al
   1400077e9:	add    BYTE PTR [rax],al
   1400077eb:	add    BYTE PTR [rax+0x38000000],ch
   1400077f1:	add    BYTE PTR [rax],0x40
   1400077f4:	add    DWORD PTR [rax],eax
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	mov    WORD PTR [rax],fs
   1400077fa:	add    BYTE PTR [rax+0x1],al
   1400077fd:	add    BYTE PTR [rax],al
   1400077ff:	add    BYTE PTR [rax],al
   140007801:	add    BYTE PTR [rax],al
   140007803:	add    BYTE PTR [rax+0x6d000000],dh
   140007809:	add    BYTE PTR [rdi+0x0],ch
   14000780c:	add    BYTE PTR fs:[rbp+0x0],ah
	...
   140007818:	push   0x0
   14000781a:	imul   eax,DWORD PTR [rax],0x460074
   140007820:	imul   eax,DWORD PTR [rax],0x65006c
   140007826:	push   rax
   140007827:	add    BYTE PTR [rcx+0x0],ah
   14000782a:	je     0x14000782c
   14000782c:	push   0x64000000
   140007831:	add    BYTE PTR [rbp+0x0],ah
   140007834:	data16 add BYTE PTR [rcx+0x0],ah
   140007838:	jne    0x14000783a
   14000783a:	ins    BYTE PTR es:[rdi],dx
   14000783b:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000783f:	add    BYTE PTR [rbx+0x74],dh
   140007842:	jb     0x1400078ad
   140007844:	outs   dx,BYTE PTR ds:[rsi]
   140007845:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000784a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000784e:	add    BYTE PTR [ecx+0x6e],ch
   140007852:	jbe    0x1400078b5
   140007854:	ins    BYTE PTR es:[rdi],dx
   140007855:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14000785d:	and    BYTE PTR [eax+0x6f],dh
   140007861:	jae    0x1400078cc
   140007863:	je     0x1400078ce
   140007865:	outs   dx,DWORD PTR ds:[rsi]
   140007866:	outs   dx,BYTE PTR ds:[rsi]
   140007867:	add    BYTE PTR [rdx+0x61],ah
   14000786a:	and    BYTE PTR fs:[rbx+0x61],ah
   14000786e:	jae    0x1400078e4
	...
   140007878:	and    al,BYTE PTR [rip+0x31993]        # 0x140039211
   14000787e:	add    BYTE PTR [rax],al
   140007880:	xor    al,0x8d
	...
   14000788a:	add    BYTE PTR [rax],al
   14000788c:	(bad)  
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    BYTE PTR [rax-0x73],dl
   140007892:	add    BYTE PTR [rax],al
   140007894:	push   rax
   140007895:	add    BYTE PTR [rax],al
   140007897:	add    BYTE PTR [rax],al
   140007899:	add    BYTE PTR [rax],al
   14000789b:	add    BYTE PTR [rcx],al
   14000789d:	add    BYTE PTR [rax],al
   14000789f:	add    BYTE PTR [rdx],ah
   1400078a1:	add    eax,0x41993
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	test   al,0x8d
	...
   1400078b2:	add    BYTE PTR [rax],al
   1400078b4:	(bad)  
   1400078b5:	add    BYTE PTR [rax],al
   1400078b7:	add    al,cl
   1400078b9:	lea    eax,[rax]
   1400078bb:	add    BYTE PTR [rax],ah
   1400078bd:	add    BYTE PTR [rax],al
   1400078bf:	add    BYTE PTR [rax],al
   1400078c1:	add    BYTE PTR [rax],al
   1400078c3:	add    BYTE PTR [rcx],al
   1400078c5:	add    BYTE PTR [rax],al
   1400078c7:	add    BYTE PTR [rdx],ah
   1400078c9:	add    eax,0x11993
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	adc    al,0x8e
	...
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	add    eax,DWORD PTR [rax]
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	and    BYTE PTR [rsi+0x200000],cl
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	add    BYTE PTR [rax],al
   1400078ea:	add    BYTE PTR [rax],al
   1400078ec:	add    DWORD PTR [rax],eax
   1400078ee:	add    BYTE PTR [rax],al
   1400078f0:	and    al,BYTE PTR [rip+0x41993]        # 0x140049289
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	push   rsp
   1400078f9:	mov    es,WORD PTR [rax]
   1400078fb:	add    BYTE PTR [rcx],al
   1400078fd:	add    BYTE PTR [rax],al
   1400078ff:	add    BYTE PTR [rsi+rcx*4+0x0],dh
   140007903:	add    BYTE PTR [rcx],cl
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rax+0x2000008e],ah
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    BYTE PTR [rax],al
   140007911:	add    BYTE PTR [rax],al
   140007913:	add    BYTE PTR [rcx],al
   140007915:	add    BYTE PTR [rax],al
   140007917:	add    BYTE PTR [rbp+riz*2+0x66],ah
   14000791b:	(bad)  
   14000791c:	jne    0x14000798a
   14000791e:	je     0x14000794c
   140007920:	xor    BYTE PTR [rax],dh
   140007922:	xor    BYTE PTR [rax],dh
   140007924:	add    BYTE PTR [rax],al
   140007926:	add    BYTE PTR [rax],al
   140007928:	cs add BYTE PTR cs:[rax],al
   14000792c:	pop    rsp
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rcx+rbp*2+0x63],ch
   140007933:	outs   dx,BYTE PTR gs:[rsi]
   140007935:	jae    0x14000799c
   140007937:	jae    0x140007939
   140007939:	add    BYTE PTR [rax],al
   14000793b:	add    BYTE PTR [rax],al
   14000793d:	add    BYTE PTR [rax],al
   14000793f:	add    BYTE PTR [rdx+0x69],ch
   140007942:	je     0x1400079a3
   140007944:	(bad)  
   140007945:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140007949:	(bad)  
   14000794a:	je     0x1400079b5
   14000794c:	outs   dx,DWORD PTR ds:[rsi]
   14000794d:	outs   dx,BYTE PTR ds:[rsi]
   14000794e:	cs je  0x1400079c9
   140007951:	je     0x140007953
   140007953:	add    BYTE PTR [rax],al
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rbp+0x72],al
   14000795a:	jb     0x1400079cb
   14000795c:	jb     0x14000797e
   14000795e:	ja     0x1400079c8
   140007960:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x61647075
   140007968:	je     0x1400079d3
   14000796a:	outs   dx,BYTE PTR ds:[rsi]
   14000796b:	and    BYTE PTR [ecx+0x6e],ch
   14000796f:	jae    0x1400079e5
   140007971:	(bad)  
   140007972:	ins    BYTE PTR es:[rdi],dx
   140007973:	ins    BYTE PTR es:[rdi],dx
   140007974:	and    BYTE PTR [rsi+0x69],ah
   140007977:	ins    BYTE PTR es:[rdi],dx
   140007978:	add    BYTE PTR gs:[rax],al
   14000797b:	add    BYTE PTR [rax],al
   14000797d:	add    BYTE PTR [rax],al
   14000797f:	add    BYTE PTR [rcx],bh
   140007981:	xor    ch,BYTE PTR cs:[rsi]
   140007984:	xor    BYTE PTR [rsi],ch
   140007986:	xor    eax,0x34363831
   14000798b:	xor    DWORD PTR [rax],eax
   14000798d:	add    BYTE PTR [rax],al
   14000798f:	add    BYTE PTR [rdx+0x61],cl
   140007992:	outs   dx,BYTE PTR ds:[rsi]
   140007993:	and    BYTE PTR [rcx],dh
   140007995:	cmp    DWORD PTR [rax],esp
   140007997:	xor    dh,BYTE PTR [rax]
   140007999:	xor    DWORD PTR [rdi],esi
   14000799b:	add    BYTE PTR [rax],al
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    BYTE PTR [rdx+0x69],ah
   1400079a2:	outs   dx,BYTE PTR ds:[rsi]
   1400079a3:	pop    rsp
   1400079a4:	ja     0x140007a0f
   1400079a6:	outs   dx,BYTE PTR ds:[rsi]
   1400079a7:	ss xor al,0x5c
   1400079aa:	ins    DWORD PTR es:[rdi],dx
   1400079ab:	ja     0x140007a0c
   1400079ad:	xor    al,0x61
   1400079af:	pop    rdi
   1400079b0:	jne    0x140007a22
   1400079b2:	fs (bad) 
   1400079b4:	je     0x140007a1b
   1400079b6:	cs gs js 0x140007a1f
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	add    DWORD PTR [rax],eax
   1400079be:	add    BYTE PTR [rax],al
   1400079c0:	pop    rax
   1400079c1:	add    DWORD PTR [rax],0x140
   1400079c7:	add    BYTE PTR [rax],bl
   1400079c9:	movsxd eax,DWORD PTR [rax]
   1400079cb:	rex add DWORD PTR [rax],eax
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	add    BYTE PTR [rax],al
   1400079d2:	add    BYTE PTR [rax],al
   1400079d4:	add    DWORD PTR [rax],eax
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	add    al,BYTE PTR [rax]
   1400079da:	add    BYTE PTR [rax],al
   1400079dc:	add    eax,DWORD PTR [rax]
   1400079de:	add    BYTE PTR [rax],al
   1400079e0:	add    al,0x0
	...
   1400079ee:	add    BYTE PTR [rax],al
   1400079f0:	jo     0x1400079f2
	...
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	mov    al,0x0
   140007a4b:	rex add DWORD PTR [rax],eax
	...
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	push   rdx
   140007a61:	push   rbx
   140007a62:	rex.R push rbx
   140007a64:	rex.RX
   140007a65:	rex.WR (bad) 
   140007a67:	mov    edi,0x4c0acd91
   140007a6c:	test   al,0xcb
   140007a6e:	xchg   ebx,eax
   140007a6f:	(bad)  
   140007a70:	rex.WX mov BYTE PTR [rcx-0x2e],cl
   140007a74:	add    DWORD PTR [rax],eax
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	cmp    bl,BYTE PTR [rbp+r13*2+0x61]
   140007a7d:	je     0x140007aeb
   140007a7f:	(bad)  
   140007a80:	(bad)  
   140007a81:	pop    rsp
   140007a82:	(bad)  
   140007a83:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140007a8a:	xor    al,0x5c
   140007a8c:	ins    DWORD PTR es:[rdi],dx
   140007a8d:	ja     0x140007aee
   140007a8f:	xor    al,0x61
   140007a91:	pop    rdi
   140007a92:	jne    0x140007b04
   140007a94:	fs (bad) 
   140007a96:	je     0x140007afd
   140007a98:	cs jo  0x140007aff
   140007a9b:	(bad)  
	...
   140007aa4:	sbb    BYTE PTR [rax],al
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	adc    eax,0x0
	...
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rcx],al
	...
   140007ac1:	add    BYTE PTR [rax],al
   140007ac3:	add    BYTE PTR [rax-0x1fffff50],ah
   140007ac9:	jp     0x140007acb
   140007acb:	add    BYTE PTR [rax+0x7a],bh
	...
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rdx],al
   140007ae9:	add    BYTE PTR [rax],al
   140007aeb:	add    al,bh
   140007aed:	jp     0x140007aef
	...
   140007af7:	add    BYTE PTR [rax],dl
   140007af9:	jnp    0x140007afb
   140007afb:	add    BYTE PTR [rax],bh
   140007afd:	jnp    0x140007aff
	...
   140007b0f:	add    BYTE PTR [rax+0x10000b0],ah
   140007b15:	add    BYTE PTR [rax],al
   140007b17:	add    BYTE PTR [rax],al
   140007b19:	add    BYTE PTR [rax],al
   140007b1b:	add    bh,bh
   140007b1d:	(bad)  
   140007b1e:	(bad)  
   140007b1f:	inc    DWORD PTR [rax]
   140007b21:	add    BYTE PTR [rax],al
   140007b23:	add    BYTE PTR [rax+0x0],al
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	loopne 0x140007ba4
	...
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	lock mov al,0x0
	...
   140007b43:	add    bh,bh
   140007b45:	(bad)  
   140007b46:	(bad)  
   140007b47:	inc    DWORD PTR [rax]
   140007b49:	add    BYTE PTR [rax],al
   140007b4b:	add    BYTE PTR [rax+0x0],al
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	(bad)  
   140007b51:	jnp    0x140007b53
	...
   140007b67:	add    BYTE PTR [rcx],al
   140007b69:	add    BYTE PTR [rax],al
   140007b6b:	add    BYTE PTR [rax+0x7b],bh
	...
   140007b76:	add    BYTE PTR [rax],al
   140007b78:	cmp    BYTE PTR [rbx+0x0],bh
	...
   140007b87:	add    BYTE PTR [rcx],al
   140007b89:	add    BYTE PTR [rax],al
   140007b8b:	add    BYTE PTR [rax+0x4000000],ch
   140007b91:	add    BYTE PTR [rax],al
   140007b93:	add    BYTE PTR [rax-0x4f],al
   140007b96:	add    BYTE PTR [rax],al
   140007b98:	mov    al,0x7b
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	mov    BYTE PTR [rbx+0x0],bh
	...
   140007bb7:	add    BYTE PTR [rip+0xffffffffc8000000],al        # 0x108007bbd
   140007bbd:	jnp    0x140007bbf
	...
   140007bc7:	add    al,bh
   140007bc9:	jnp    0x140007bcb
   140007bcb:	add    BYTE PTR [rax],ah
   140007bcd:	jl     0x140007bcf
   140007bcf:	add    BYTE PTR [rax-0x1fffff84],cl
   140007bd5:	jge    0x140007bd7
   140007bd7:	add    BYTE PTR [rax],cl
   140007bd9:	jle    0x140007bdb
	...
   140007bf7:	add    BYTE PTR [rax-0x4f],al
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	add    al,0x0
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	add    BYTE PTR [rax],al
   140007c02:	add    BYTE PTR [rax],al
   140007c04:	(bad)  
   140007c05:	(bad)  
   140007c06:	(bad)  
   140007c07:	inc    DWORD PTR [rax]
   140007c09:	add    BYTE PTR [rax],al
   140007c0b:	add    BYTE PTR [rax+0x0],al
   140007c0e:	add    BYTE PTR [rax],al
   140007c10:	mov    al,0x7b
	...
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	nop
   140007c21:	mov    cl,0x0
   140007c23:	add    BYTE PTR [rbx],al
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rax],al
   140007c29:	add    BYTE PTR [rax],al
   140007c2b:	add    bh,bh
   140007c2d:	(bad)  
   140007c2e:	(bad)  
   140007c2f:	inc    DWORD PTR [rax]
   140007c31:	add    BYTE PTR [rax],al
   140007c33:	add    BYTE PTR [rax+0x0],al
   140007c36:	add    BYTE PTR [rax],al
   140007c38:	rex.W jl 0x140007c3b
	...
   140007c4f:	add    BYTE PTR [rax+rax*1],al
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	(bad)  
   140007c55:	jl     0x140007c57
	...
   140007c5f:	add    BYTE PTR [rax],ah
   140007c61:	jl     0x140007c63
   140007c63:	add    BYTE PTR [rax-0x1fffff84],cl
   140007c69:	jge    0x140007c6b
   140007c6b:	add    BYTE PTR [rax],cl
   140007c6d:	jle    0x140007c6f
	...
   140007c87:	add    al,bl
   140007c89:	mov    cl,0x0
   140007c8b:	add    BYTE PTR [rdx],al
	...
   140007c95:	add    BYTE PTR [rax],al
   140007c97:	add    BYTE PTR [rax+rax*1],al
   140007c9a:	add    BYTE PTR [rax],al
   140007c9c:	push   rax
   140007c9d:	add    BYTE PTR [rax],al
   140007c9f:	add    BYTE PTR [rax+0x7c],dh
	...
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    BYTE PTR [rbx],al
   140007cb9:	add    BYTE PTR [rax],al
   140007cbb:	add    al,cl
   140007cbd:	jl     0x140007cbf
	...
   140007cc7:	add    al,ch
   140007cc9:	jl     0x140007ccb
   140007ccb:	add    BYTE PTR [rax],dl
   140007ccd:	jge    0x140007ccf
   140007ccf:	add    BYTE PTR [rax+0x7d],ch
	...
   140007ce6:	add    BYTE PTR [rax],al
   140007ce8:	fdiv   DWORD PTR [rcx+0x20000]
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	add    BYTE PTR [rax],al
   140007cf2:	add    BYTE PTR [rax],al
   140007cf4:	(bad)  
   140007cf5:	(bad)  
   140007cf6:	(bad)  
   140007cf7:	inc    DWORD PTR [rax]
   140007cf9:	add    BYTE PTR [rax],al
   140007cfb:	add    BYTE PTR [rax+0x0],al
   140007cfe:	add    BYTE PTR [rax],al
   140007d00:	mov    al,0x7c
	...
   140007d0e:	add    BYTE PTR [rax],al
   140007d10:	sbb    BYTE PTR [rdx+0x10000],dh
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	add    BYTE PTR [rax],al
   140007d1a:	add    BYTE PTR [rax],al
   140007d1c:	(bad)  
   140007d1d:	(bad)  
   140007d1e:	(bad)  
   140007d1f:	inc    DWORD PTR [rax]
   140007d21:	add    BYTE PTR [rax],al
   140007d23:	add    BYTE PTR [rax+0x0],al
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	cmp    BYTE PTR [rbp+0x0],bh
	...
   140007d3f:	add    BYTE PTR [rdx],al
   140007d41:	add    BYTE PTR [rax],al
   140007d43:	add    BYTE PTR [rax+0x7d],dl
	...
   140007d4e:	add    BYTE PTR [rax],al
   140007d50:	adc    BYTE PTR [rbp+0x0],bh
   140007d53:	add    BYTE PTR [rax+0x7d],ch
	...
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	mov    dl,0x0
   140007d6b:	add    BYTE PTR [rax],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rax],cl
   140007d71:	add    BYTE PTR [rax],al
   140007d73:	add    bh,bh
   140007d75:	(bad)  
   140007d76:	(bad)  
   140007d77:	inc    DWORD PTR [rax]
   140007d79:	add    BYTE PTR [rax],al
   140007d7b:	add    BYTE PTR [rax+0x0],al
   140007d7e:	add    BYTE PTR [rax],al
   140007d80:	nop
   140007d81:	jge    0x140007d83
	...
   140007d97:	add    BYTE PTR [rcx],al
   140007d99:	add    BYTE PTR [rax],al
   140007d9b:	add    BYTE PTR [rax+0x7d],ch
   140007da1:	add    BYTE PTR [rax],al
   140007da3:	add    BYTE PTR [rax],al
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    BYTE PTR [rax+0x7d],bh
	...
   140007db5:	add    BYTE PTR [rax],al
   140007db7:	add    BYTE PTR [rax-0x4e],al
	...
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	(bad)  
   140007dc5:	(bad)  
   140007dc6:	(bad)  
   140007dc7:	inc    DWORD PTR [rax]
   140007dc9:	add    BYTE PTR [rax],al
   140007dcb:	add    BYTE PTR [rax+0x0],al
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	nop
   140007dd1:	jge    0x140007dd3
	...
   140007ddf:	add    BYTE PTR [rax],bl
   140007de1:	mov    dl,0x0
   140007de3:	add    BYTE PTR [rcx],al
	...
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rax+rax*1],al
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	add    BYTE PTR [rax],al
   140007df7:	add    BYTE PTR [rax],bh
   140007df9:	jge    0x140007dfb
	...
   140007e07:	add    BYTE PTR [rax-0x4e],al
   140007e0a:	add    BYTE PTR [rax],al
   140007e0c:	add    BYTE PTR [rax],al
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	or     BYTE PTR [rax],al
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	add    BYTE PTR [rax],al
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	add    al,0x0
   140007e1a:	add    BYTE PTR [rax],al
   140007e1c:	add    BYTE PTR [rax],al
   140007e1f:	add    BYTE PTR [rax+0x7d],dl
	...
   140007e2d:	add    BYTE PTR [rax],al
   140007e2f:	add    BYTE PTR [rcx],al
	...
   140007e39:	add    BYTE PTR [rax],al
   140007e3b:	add    BYTE PTR [rax-0x4e],ch
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	pop    rax
   140007e41:	jle    0x140007e43
   140007e43:	add    BYTE PTR [rax],dh
   140007e45:	jle    0x140007e47
	...
   140007e5f:	add    BYTE PTR [rcx],al
   140007e61:	add    BYTE PTR [rax],al
   140007e63:	add    BYTE PTR [rax+0x7e],dh
	...
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	cmp    BYTE PTR [rsi+0x0],0x0
	...
   140007e80:	push   0xb2
   140007e85:	add    BYTE PTR [rax],al
   140007e87:	add    BYTE PTR [rax],al
   140007e89:	add    BYTE PTR [rax],al
   140007e8b:	add    bh,bh
   140007e8d:	(bad)  
   140007e8e:	(bad)  
   140007e8f:	inc    DWORD PTR [rax]
   140007e91:	add    BYTE PTR [rax],al
   140007e93:	add    BYTE PTR [rax+0x0],al
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	pop    rax
   140007e99:	jle    0x140007e9b
	...
   140007ea7:	add    BYTE PTR [rcx],al
	...
   140007eb1:	add    BYTE PTR [rax],al
   140007eb3:	add    BYTE PTR [rax-0x2fffff4e],bl
   140007eb9:	jle    0x140007ebb
   140007ebb:	add    BYTE PTR [rax+0x7e],ch
	...
   140007ed5:	add    BYTE PTR [rax],al
   140007ed7:	add    BYTE PTR [rdx],al
   140007ed9:	add    BYTE PTR [rax],al
   140007edb:	add    al,ch
   140007edd:	jle    0x140007edf
	...
   140007ee7:	add    BYTE PTR [rax],al
   140007ee9:	jg     0x140007eeb
   140007eeb:	add    BYTE PTR [rax+0x7e],al
	...
   140007efd:	add    BYTE PTR [rax],al
   140007eff:	add    BYTE PTR [rax+0x10000b2],bl
   140007f05:	add    BYTE PTR [rax],al
   140007f07:	add    BYTE PTR [rax],al
   140007f09:	add    BYTE PTR [rax],al
   140007f0b:	add    bh,bh
   140007f0d:	(bad)  
   140007f0e:	(bad)  
   140007f0f:	inc    DWORD PTR [rax]
   140007f11:	add    BYTE PTR [rax],al
   140007f13:	add    BYTE PTR [rax+0x0],al
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	sar    BYTE PTR [rsi+0x0],1
	...
   140007f27:	add    BYTE PTR [rcx],al
	...
   140007f31:	add    BYTE PTR [rax],al
   140007f33:	add    al,dl
   140007f35:	mov    dl,0x0
   140007f37:	add    BYTE PTR [rax+0x7f],dl
   140007f3a:	add    BYTE PTR [rax],al
   140007f3c:	sub    BYTE PTR [rdi+0x0],bh
	...
   140007f57:	add    BYTE PTR [rbx],al
   140007f59:	add    BYTE PTR [rax],al
   140007f5b:	add    BYTE PTR [rax+0x7f],ch
	...
   140007f66:	add    BYTE PTR [rax],al
   140007f68:	mov    BYTE PTR [rdi+0x0],bh
   140007f6b:	add    BYTE PTR [rax],al
   140007f6d:	jg     0x140007f6f
   140007f6f:	add    BYTE PTR [rax+0x7e],al
	...
   140007f85:	add    BYTE PTR [rax],al
   140007f87:	add    al,dl
   140007f89:	mov    dl,0x0
   140007f8b:	add    BYTE PTR [rdx],al
   140007f8d:	add    BYTE PTR [rax],al
   140007f8f:	add    BYTE PTR [rax],al
   140007f91:	add    BYTE PTR [rax],al
   140007f93:	add    bh,bh
   140007f95:	(bad)  
   140007f96:	(bad)  
   140007f97:	inc    DWORD PTR [rax]
   140007f99:	add    BYTE PTR [rax],al
   140007f9b:	add    BYTE PTR [rax+0x0],al
   140007f9e:	add    BYTE PTR [rax],al
   140007fa0:	push   rax
   140007fa1:	jg     0x140007fa3
	...
   140007faf:	add    BYTE PTR [rcx],al
	...
   140007fb9:	add    BYTE PTR [rax],al
   140007fbb:	add    BYTE PTR [rax],cl
   140007fbd:	mov    bl,0x0
   140007fbf:	add    al,bl
   140007fc1:	jg     0x140007fc3
   140007fc3:	add    BYTE PTR [rax+0x7f],dh
	...
   140007fdd:	add    BYTE PTR [rax],al
   140007fdf:	add    BYTE PTR [rbx],al
   140007fe1:	add    BYTE PTR [rax],al
   140007fe3:	add    al,dh
   140007fe5:	jg     0x140007fe7
	...
   140007fef:	add    BYTE PTR [rax],dl
   140007ff1:	add    BYTE PTR [rax],0x0
   140007ff4:	add    BYTE PTR [rdi+0x0],bh
   140007ff7:	add    BYTE PTR [rax+0x7e],al
	...
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rax],cl
   140008011:	mov    bl,0x0
   140008013:	add    BYTE PTR [rdx],al
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    BYTE PTR [rax],al
   140008019:	add    BYTE PTR [rax],al
   14000801b:	add    bh,bh
   14000801d:	(bad)  
   14000801e:	(bad)  
   14000801f:	inc    DWORD PTR [rax]
   140008021:	add    BYTE PTR [rax],al
   140008023:	add    BYTE PTR [rax+0x0],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	fdivr  DWORD PTR [rdi+0x0]
	...
   140008037:	add    BYTE PTR [rcx],al
   140008039:	add    BYTE PTR [rax],al
   14000803b:	add    BYTE PTR [rax+0x4000000],dh
   140008041:	add    BYTE PTR [rax],al
   140008043:	add    BYTE PTR [rax-0x4d],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	(bad)  
   140008049:	add    BYTE PTR [rax],0x0
   14000804c:	cmp    BYTE PTR [rax+0x0],al
	...
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    eax,DWORD PTR [rax]
   140008066:	add    BYTE PTR [rax],al
   140008068:	(bad)  
   140008069:	add    BYTE PTR [rax],al
   14000806b:	add    BYTE PTR [rax-0x80],bh
	...
   140008076:	add    BYTE PTR [rax],al
   140008078:	mov    eax,0xf8000080
   14000807d:	jnp    0x14000807f
   14000807f:	add    BYTE PTR [rax],ah
   140008081:	jl     0x140008083
   140008083:	add    BYTE PTR [rax-0x1fffff84],cl
   140008089:	jge    0x14000808b
   14000808b:	add    BYTE PTR [rax],cl
   14000808d:	jle    0x14000808f
   14000808f:	add    al,ah
   140008091:	add    BYTE PTR [rax],0x0
	...
   1400080b8:	mov    bl,0x0
   1400080bb:	add    BYTE PTR [rsi],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rax],al
   1400080c1:	add    BYTE PTR [rax],al
   1400080c3:	add    bh,bh
   1400080c5:	(bad)  
   1400080c6:	(bad)  
   1400080c7:	inc    DWORD PTR [rax]
   1400080c9:	add    BYTE PTR [rax],al
   1400080cb:	add    BYTE PTR [rax+0x0],al
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	(bad)  
   1400080d1:	add    BYTE PTR [rax],0x0
	...
   1400080e0:	nop
   1400080e1:	mov    bl,0x0
   1400080e3:	add    BYTE PTR [rax],al
   1400080e5:	add    BYTE PTR [rax],al
   1400080e7:	add    BYTE PTR [rcx-0x1000000],ah
   1400080ed:	(bad)  
   1400080ee:	(bad)  
   1400080ef:	inc    DWORD PTR [rax]
   1400080f1:	add    BYTE PTR [rax],al
   1400080f3:	add    BYTE PTR [rbp+0x0],cl
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	or     BYTE PTR [rcx+0x0],al
	...
   14000810e:	add    BYTE PTR [rax],al
   140008110:	add    DWORD PTR [rax],eax
   140008112:	add    BYTE PTR [rax],al
   140008114:	and    BYTE PTR [rcx+0x0],al
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	xor    BYTE PTR [rcx+0x0],al
	...
   14000812e:	add    BYTE PTR [rax],al
   140008130:	nop
   140008131:	mov    bl,0x0
	...
   14000813b:	add    bh,bh
   14000813d:	(bad)  
   14000813e:	(bad)  
   14000813f:	inc    DWORD PTR [rax]
   140008141:	add    BYTE PTR [rax],al
   140008143:	add    BYTE PTR [rax+0x0],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	or     BYTE PTR [rcx+0x0],al
	...
   140008156:	add    BYTE PTR [rax],al
   140008158:	add    DWORD PTR [rax],eax
	...
   140008162:	add    BYTE PTR [rax],al
   140008164:	enter  0xb3,0x0
   140008168:	add    BYTE PTR [rcx-0x7ea80000],0x0
	...
   140008187:	add    BYTE PTR [rcx],al
   140008189:	add    BYTE PTR [rax],al
   14000818b:	add    BYTE PTR [rax+0x81],bl
   140008191:	add    BYTE PTR [rax],al
   140008193:	add    BYTE PTR [rax],al
   140008195:	add    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rax+0x81],ch
	...
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    al,cl
   1400081a9:	mov    bl,0x0
	...
   1400081b3:	add    bh,bh
   1400081b5:	(bad)  
   1400081b6:	(bad)  
   1400081b7:	inc    DWORD PTR [rax]
   1400081b9:	add    BYTE PTR [rax],al
   1400081bb:	add    BYTE PTR [rax+0x0],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	add    BYTE PTR [rcx+0x0],0x0
	...
   1400081ef:	add    BYTE PTR [rcx],al
   1400081f1:	(bad)  
   1400081f2:	add    al,BYTE PTR [rax]
   1400081f4:	(bad)  
   1400081f5:	xor    al,BYTE PTR [rdx]
   1400081f7:	xor    BYTE PTR [rcx],al
   1400081f9:	(bad)  
   1400081fa:	add    al,BYTE PTR [rax]
   1400081fc:	(bad)  
   1400081fd:	xor    al,BYTE PTR [rdx]
   1400081ff:	xor    BYTE PTR [rcx],al
   140008201:	(bad)  
   140008202:	add    al,BYTE PTR [rax]
   140008204:	(bad)  
   140008205:	xor    al,BYTE PTR [rdx]
   140008207:	xor    BYTE PTR [rcx],al
   140008209:	(bad)  
   14000820a:	add    al,BYTE PTR [rax]
   14000820c:	(bad)  
   14000820d:	xor    al,BYTE PTR [rdx]
   14000820f:	xor    BYTE PTR [rcx],al
   140008211:	add    al,0x1
   140008213:	add    BYTE PTR [rdx+rax*2],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	add    DWORD PTR [rcx+rax*1],eax
   14000821b:	add    BYTE PTR [rdx+rax*2],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	add    DWORD PTR [rsi],eax
   140008222:	add    al,BYTE PTR [rax]
   140008224:	(bad)  
   140008225:	xor    al,BYTE PTR [rdx]
   140008227:	xor    BYTE PTR [rcx],al
   140008229:	(bad)  
   14000822a:	add    al,BYTE PTR [rax]
   14000822c:	(bad)  
   14000822d:	xor    al,BYTE PTR [rdx]
   14000822f:	xor    BYTE PTR [rcx],al
   140008231:	(bad)  
   140008232:	add    al,BYTE PTR [rax]
   140008234:	(bad)  
   140008235:	xor    al,BYTE PTR [rdx]
   140008237:	xor    BYTE PTR [rcx],al
   140008239:	cmp    al,0x8
   14000823b:	add    BYTE PTR [rsp+rsi*2],bh
   14000823e:	(bad)  
   14000823f:	add    BYTE PTR [rdi],cl
   140008241:	push   rsp
   140008242:	or     BYTE PTR [rax],al
   140008244:	sysenter 
   140008246:	(bad)  
   140008247:	add    BYTE PTR [rdi],cl
   140008249:	xor    cl,BYTE PTR [rbx]
   14000824b:	(bad)  
   14000824c:	add    DWORD PTR [rax+rcx*1],edx
   14000824f:	add    BYTE PTR [rsp+riz*2],dl
   140008252:	or     BYTE PTR [rax],al
   140008254:	adc    al,0x54
   140008256:	(bad)  
   140008257:	add    BYTE PTR [rsp+rsi*1],dl
   14000825a:	(bad)  
   14000825b:	add    BYTE PTR [rdx+rsi*1],dl
   14000825e:	adc    BYTE PTR [rax+0x1],dh
   140008261:	clts   
   140008263:	add    BYTE PTR [rdi],cl
   140008265:	fs (bad) 
   140008267:	add    BYTE PTR [rdi],cl
   140008269:	xor    al,0x6
   14000826b:	add    BYTE PTR [rdi],cl
   14000826d:	xor    cl,BYTE PTR [rbx]
   14000826f:	jo     0x140008272
   140008271:	clts   
   140008273:	add    BYTE PTR [rdi],cl
   140008275:	fs (bad) 
   140008277:	add    BYTE PTR [rdi],cl
   140008279:	xor    al,0x6
   14000827b:	add    BYTE PTR [rdi],cl
   14000827d:	xor    cl,BYTE PTR [rbx]
   14000827f:	jo     0x140008282
   140008281:	add    al,0x1
   140008283:	add    BYTE PTR [rdx+rax*2],al
   140008286:	add    BYTE PTR [rax],al
   140008288:	add    DWORD PTR [rdx],ecx
   14000828a:	add    al,0x0
   14000828c:	or     dh,BYTE PTR [rsi+rax*1]
   14000828f:	add    BYTE PTR [rdx],cl
   140008291:	xor    al,BYTE PTR [rsi]
   140008293:	jo     0x1400082ae
   140008295:	and    DWORD PTR [rip+0x14621800],eax        # 0x154629a9b
   14000829b:	loopne 0x1400082af
   14000829d:	jo     0x1400082b0
   14000829f:	(bad)  
   1400082a0:	adc    BYTE PTR [rax],dh
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	lock (bad) 
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	call   0x13f008320
   1400082ad:	(bad)  
   1400082ae:	(bad)  
   1400082af:	inc    DWORD PTR [rax]
   1400082b1:	add    BYTE PTR [rax],al
   1400082b3:	add    bh,bh
   1400082b5:	(bad)  
   1400082b6:	(bad)  
   1400082b7:	inc    DWORD PTR [rax]
   1400082b9:	add    BYTE PTR [rax],al
   1400082bb:	add    BYTE PTR [rcx],al
   1400082bd:	add    BYTE PTR [rax],al
   1400082bf:	add    BYTE PTR [rax],al
   1400082c1:	add    BYTE PTR [rax],al
   1400082c3:	add    BYTE PTR [rcx],al
	...
   1400082d1:	add    BYTE PTR [rax],al
   1400082d3:	add    BYTE PTR [rbx],al
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rcx],al
   1400082d9:	add    BYTE PTR [rax],al
   1400082db:	add    ah,dh
   1400082dd:	(bad)  
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	add    al,BYTE PTR [rax]
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    al,BYTE PTR [rax]
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	add    eax,DWORD PTR [rax]
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    DWORD PTR [rax],eax
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	or     BYTE PTR [rbx+0x400000],al
	...
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	(bad)  
   140008301:	imul   eax,DWORD PTR [rax],0x0
   140008304:	cmp    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	add    BYTE PTR [rax],al
	...
   140008313:	add    BYTE PTR [rbx+rbp*2+0x480000],ah
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	and    BYTE PTR [rbx],ah
   140008322:	add    BYTE PTR [rax],al
   140008324:	(bad)  
   140008325:	(bad)  
   140008326:	(bad)  
   140008327:	dec    DWORD PTR [rsi+0x23]
   14000832d:	add    BYTE PTR [rax],al
   14000832f:	add    BYTE PTR [rbx+riz*1-0x10000],dh
   140008336:	(bad)  
   140008337:	jmp    QWORD PTR [rax+0x6b]
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	ins    DWORD PTR es:[rdi],dx
   140008341:	imul   eax,DWORD PTR [rax],0x0
   140008344:	add    DWORD PTR [rax],eax
   140008346:	add    BYTE PTR [rax],al
   140008348:	jne    0x1400083b5
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    al,BYTE PTR [rax]
   14000834e:	add    BYTE PTR [rax],al
   140008350:	xchg   esi,eax
   140008351:	imul   eax,DWORD PTR [rax],0x0
   140008354:	add    BYTE PTR [rax],al
   140008356:	add    BYTE PTR [rax],al
   140008358:	mov    dl,0x6b
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    eax,DWORD PTR [rax]
   14000835e:	add    BYTE PTR [rax],al
   140008360:	sbb    DWORD PTR [rdx],ecx
   140008362:	add    al,BYTE PTR [rax]
   140008364:	or     dh,BYTE PTR [rdx]
   140008366:	(bad)  
   140008367:	push   rax
   140008368:	lock (bad) 
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	call   0x1590083e4
   140008371:	or     eax,DWORD PTR [rbx]
   140008373:	add    BYTE PTR [rbx],cl
   140008375:	rex.X (bad) 
   140008377:	push   rax
   140008378:	(bad)  
   140008379:	xor    BYTE PTR [rax],al
   14000837b:	add    al,dh
   14000837d:	(bad)  
   14000837e:	add    BYTE PTR [rax],al
   140008380:	call   0x1410083f8
   140008385:	sub    eax,0x542d0006
   14000838a:	(bad)  
   14000838b:	add    BYTE PTR [rdx],cl
   14000838d:	xor    al,0x9
   14000838f:	add    BYTE PTR [rdx],cl
   140008391:	xor    al,BYTE PTR [rsi]
   140008393:	jo     0x1400083b6
   140008395:	add    eax,0x64050002
   14000839a:	(bad)  
   14000839b:	add    BYTE PTR [rax],dh
   14000839d:	sub    BYTE PTR [rax],al
   14000839f:	add    BYTE PTR [rdx+0x28],bh
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	test   BYTE PTR [rbx+0x5210000],al
   1400083aa:	add    al,BYTE PTR [rax]
   1400083ac:	add    eax,0x7a0008e4
   1400083b1:	sub    BYTE PTR [rax],al
   1400083b3:	add    BYTE PTR [rax-0x6bffffd8],dl
   1400083b9:	add    DWORD PTR [rax],0x0
   1400083bc:	and    DWORD PTR [rax],eax
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	jp     0x1400083ea
   1400083c2:	add    BYTE PTR [rax],al
   1400083c4:	nop
   1400083c5:	sub    BYTE PTR [rax],al
   1400083c7:	add    BYTE PTR [rbx+rax*4+0x210000],dl
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	xor    BYTE PTR [rax],ch
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	jp     0x1400083fe
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	test   BYTE PTR [rbx+0xa010000],al
   1400083de:	add    al,0x0
   1400083e0:	or     dh,BYTE PTR [rdi+rax*1]
   1400083e3:	add    BYTE PTR [rdx],cl
   1400083e5:	xor    al,BYTE PTR [rsi]
   1400083e7:	jo     0x14000840a
   1400083e9:	add    eax,0x64050002
   1400083ee:	(bad)  
   1400083ef:	add    BYTE PTR [rax],dh
   1400083f1:	sub    al,0x0
   1400083f3:	add    BYTE PTR [rbx+0x2c],cl
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	fadd   QWORD PTR [rbx+0x210000]
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	xor    BYTE PTR [rax+rax*1],ch
   140008403:	add    BYTE PTR [rbx+0x2c],cl
   140008406:	add    BYTE PTR [rax],al
   140008408:	fadd   QWORD PTR [rbx+0x4010000]
   14000840e:	add    DWORD PTR [rax],eax
   140008410:	add    al,0x42
   140008412:	add    BYTE PTR [rax],al
   140008414:	add    DWORD PTR [rcx+rax*1],eax
   140008417:	add    BYTE PTR [rdx+rax*2],al
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	add    DWORD PTR [rcx+rax*1],eax
   14000841f:	add    BYTE PTR [rdx+rax*2],al
   140008422:	add    BYTE PTR [rax],al
   140008424:	add    DWORD PTR [rdx],ecx
   140008426:	add    al,0x0
   140008428:	or     dh,BYTE PTR [rsi+rax*1]
   14000842b:	add    BYTE PTR [rdx],cl
   14000842d:	xor    al,BYTE PTR [rsi]
   14000842f:	jo     0x140008432
   140008431:	(bad)  
   140008432:	add    al,BYTE PTR [rax]
   140008434:	(bad)  
   140008435:	push   rdx
   140008436:	add    dh,BYTE PTR [rax]
   140008438:	add    DWORD PTR [rsi],eax
   14000843a:	add    al,BYTE PTR [rax]
   14000843c:	(bad)  
   14000843d:	xor    al,BYTE PTR [rdx]
   14000843f:	xor    BYTE PTR [rcx],al
   140008441:	or     al,BYTE PTR [rax+rax*1]
   140008444:	or     dh,BYTE PTR [rax+rcx*1]
   140008447:	add    BYTE PTR [rdx],cl
   140008449:	push   rdx
   14000844a:	(bad)  
   14000844b:	jo     0x14000844e
   14000844d:	(bad)  
   14000844e:	add    al,BYTE PTR [rax]
   140008450:	(bad)  
   140008451:	xor    al,BYTE PTR [rdx]
   140008453:	xor    BYTE PTR [rcx],al
   140008455:	(bad)  
   140008456:	add    al,BYTE PTR [rax]
   140008458:	(bad)  
   140008459:	push   rdx
   14000845a:	add    dh,BYTE PTR [rax]
   14000845c:	add    DWORD PTR [rsi],eax
   14000845e:	add    al,BYTE PTR [rax]
   140008460:	(bad)  
   140008461:	xor    al,BYTE PTR [rdx]
   140008463:	xor    BYTE PTR [rcx],al
   140008465:	or     al,BYTE PTR [rax+rax*1]
   140008468:	or     dh,BYTE PTR [rax+rcx*1]
   14000846b:	add    BYTE PTR [rdx],cl
   14000846d:	push   rdx
   14000846e:	(bad)  
   14000846f:	jo     0x140008472
   140008471:	or     al,BYTE PTR [rax+rax*1]
   140008474:	or     dh,BYTE PTR [rsi+rax*1]
   140008477:	add    BYTE PTR [rdx],cl
   140008479:	xor    al,BYTE PTR [rsi]
   14000847b:	jo     0x14000847e
   14000847d:	(bad)  
   14000847e:	add    al,BYTE PTR [rax]
   140008480:	(bad)  
   140008481:	xor    al,BYTE PTR [rdx]
   140008483:	xor    BYTE PTR [rcx],al
   140008485:	(bad)  
   140008486:	add    al,BYTE PTR [rax]
   140008488:	(bad)  
   140008489:	xor    al,BYTE PTR [rdx]
   14000848b:	xor    BYTE PTR [rcx],al
   14000848d:	add    al,0x1
   14000848f:	add    BYTE PTR [rdx+rax*2],al
   140008492:	add    BYTE PTR [rax],al
   140008494:	add    DWORD PTR [rcx+rax*1],eax
   140008497:	add    BYTE PTR [rdx+rax*2],al
   14000849a:	add    BYTE PTR [rax],al
   14000849c:	add    DWORD PTR [rcx+rax*1],eax
   14000849f:	add    BYTE PTR [rdx+rax*2],al
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	add    DWORD PTR [rcx+rax*1],eax
   1400084a7:	add    BYTE PTR [rdx+rax*2],al
   1400084aa:	add    BYTE PTR [rax],al
   1400084ac:	add    DWORD PTR [rsi],eax
   1400084ae:	add    al,BYTE PTR [rax]
   1400084b0:	(bad)  
   1400084b1:	xor    al,BYTE PTR [rdx]
   1400084b3:	xor    BYTE PTR [rcx],al
   1400084b5:	or     al,BYTE PTR [rax+rax*1]
   1400084b8:	or     dh,BYTE PTR [rsi+rax*1]
   1400084bb:	add    BYTE PTR [rdx],cl
   1400084bd:	xor    al,BYTE PTR [rsi]
   1400084bf:	jo     0x1400084c2
   1400084c1:	clts   
   1400084c3:	add    BYTE PTR [rdi],cl
   1400084c5:	fs (bad) 
   1400084c7:	add    BYTE PTR [rdi],cl
   1400084c9:	xor    al,0x6
   1400084cb:	add    BYTE PTR [rdi],cl
   1400084cd:	xor    cl,BYTE PTR [rbx]
   1400084cf:	jo     0x1400084d2
   1400084d1:	(bad)  
   1400084d2:	add    al,BYTE PTR [rax]
   1400084d4:	(bad)  
   1400084d5:	xor    al,BYTE PTR [rdx]
   1400084d7:	xor    BYTE PTR [rcx],al
   1400084d9:	adc    al,0x8
   1400084db:	add    BYTE PTR [rsp+riz*2],dl
   1400084de:	or     BYTE PTR [rax],al
   1400084e0:	adc    al,0x54
   1400084e2:	(bad)  
   1400084e3:	add    BYTE PTR [rsp+rsi*1],dl
   1400084e6:	(bad)  
   1400084e7:	add    BYTE PTR [rdx+rsi*1],dl
   1400084ea:	adc    BYTE PTR [rax+0x1],dh
   1400084ed:	add    al,0x1
   1400084ef:	add    BYTE PTR [rdx+rax*2],al
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	add    DWORD PTR [rdx],ecx
   1400084f6:	add    al,0x0
   1400084f8:	or     dh,BYTE PTR [rsi+rax*1]
   1400084fb:	add    BYTE PTR [rdx],cl
   1400084fd:	xor    al,BYTE PTR [rsi]
   1400084ff:	jo     0x140008502
   140008501:	or     al,0x6
   140008503:	add    BYTE PTR [rdx+rsi*1],cl
   140008506:	or     al,dh
   140008508:	(bad)  
   140008509:	rol    BYTE PTR [rax+riz*2],0x3
   14000850d:	push   rax
   14000850e:	add    dh,BYTE PTR [rax]
   140008510:	and    DWORD PTR [rbx+0x6],ecx
   140008513:	add    BYTE PTR [rbx-0x2c],cl
   140008516:	or     eax,DWORD PTR [rax]
   140008518:	pmulhuw mm1,QWORD PTR [rax+rax*1]
   14000851c:	add    eax,0x80000a74
   140008521:	rex.X add BYTE PTR [rax],al
   140008524:	mov    bh,0x42
   140008526:	add    BYTE PTR [rax],al
   140008528:	add    BYTE PTR [rbp+0x210000],al
   14000852e:	add    BYTE PTR [rax],al
   140008530:	add    BYTE PTR [rdx+0x0],0x0
   140008534:	mov    bh,0x42
   140008536:	add    BYTE PTR [rax],al
   140008538:	add    BYTE PTR [rbp-0x4fff0000],al
   14000853e:	or     al,BYTE PTR [rax]
   140008540:	mov    al,0xf4
   140008542:	or     al,0x0
   140008544:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008545:	in     al,0xb
   140008547:	add    BYTE PTR [rip+0xd000d34],cl        # 0x14d009281
   14000854d:	push   rdx
   14000854e:	or     eax,eax
   140008550:	(bad)  
   140008551:	(bad)  
   140008552:	(bad)  
   140008553:	push   rax
   140008554:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405855c
   14000855a:	or     al,BYTE PTR [rax]
   14000855c:	adc    BYTE PTR [rsi+0x0],al
   14000855f:	add    BYTE PTR [rcx],dh
   140008561:	rex.RXB add BYTE PTR [r8],r8b
   140008564:	cmp    al,0x85
   140008566:	add    BYTE PTR [rax],al
   140008568:	add    DWORD PTR [rsi],eax
   14000856a:	add    al,BYTE PTR [rax]
   14000856c:	(bad)  
   14000856d:	push   rdx
   14000856e:	add    dh,BYTE PTR [rax]
   140008570:	add    DWORD PTR [rcx+rax*1],eax
   140008573:	add    BYTE PTR [rdx+riz*2],al
   140008576:	add    BYTE PTR [rax],al
   140008578:	add    DWORD PTR [rsi],eax
   14000857a:	add    al,BYTE PTR [rax]
   14000857c:	(bad)  
   14000857d:	xor    al,BYTE PTR [rdx]
   14000857f:	xor    BYTE PTR [rcx],ah
   140008581:	add    eax,0x74050002
   140008586:	(bad)  
   140008587:	add    al,ah
   140008589:	xor    eax,0x36030000
   14000858e:	add    BYTE PTR [rax],al
   140008590:	js     0x140008517
   140008592:	add    BYTE PTR [rax],al
   140008594:	and    DWORD PTR [rax],eax
   140008596:	add    al,BYTE PTR [rax]
   140008598:	add    BYTE PTR [rsi+rax*1+0x0],dh
   14000859c:	loopne 0x1400085d3
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	add    esi,DWORD PTR [rsi]
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	js     0x14000852b
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	sbb    DWORD PTR [rbx],esp
   1400085aa:	(bad)  
   1400085ab:	add    BYTE PTR [rdx],bl
   1400085ad:	push   rdx
   1400085ae:	(bad)  
   1400085af:	lock adc al,0xe0
   1400085b2:	adc    dh,BYTE PTR [rax+0x11]
   1400085b5:	(bad)  
   1400085b6:	adc    BYTE PTR [rax],dh
   1400085b8:	lock (bad) 
   1400085ba:	add    BYTE PTR [rax],al
   1400085bc:	adc    BYTE PTR [rax+rax*1+0x0],dh
   1400085c0:	(bad)  
   1400085c1:	(bad)  
   1400085c2:	(bad)  
   1400085c3:	inc    DWORD PTR [rax]
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    bh,bh
   1400085c9:	(bad)  
   1400085ca:	(bad)  
   1400085cb:	inc    DWORD PTR [rax]
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rcx],al
   1400085d1:	add    BYTE PTR [rax],al
   1400085d3:	add    BYTE PTR [rax],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    BYTE PTR [rcx],al
	...
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    BYTE PTR [rbx],al
   1400085e9:	add    BYTE PTR [rax],al
   1400085eb:	add    BYTE PTR [rcx],al
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax],cl
   1400085f1:	xchg   BYTE PTR [rax],al
   1400085f3:	add    BYTE PTR [rdx],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    BYTE PTR [rdx],al
   1400085f9:	add    BYTE PTR [rax],al
   1400085fb:	add    BYTE PTR [rbx],al
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    BYTE PTR [rcx],al
   140008601:	add    BYTE PTR [rax],al
   140008603:	add    BYTE PTR [rsi+rax*4],bl
   140008606:	add    BYTE PTR [rax],al
   140008608:	add    BYTE PTR [rax],al
	...
   140008613:	add    al,dh
   140008615:	imul   eax,DWORD PTR [rax],0x0
   140008618:	cmp    BYTE PTR [rax],al
   14000861a:	add    BYTE PTR [rax],al
   14000861c:	add    BYTE PTR [rax],al
	...
   140008627:	add    BYTE PTR [rax+0x6c],al
   14000862a:	add    BYTE PTR [rax],al
   14000862c:	rex.W add BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rax],dh
   140008631:	and    al,0x0
   140008633:	add    bh,bh
   140008635:	(bad)  
   140008636:	(bad)  
   140008637:	jmp    QWORD PTR [rbp+0x24]
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    dl,bl
   140008641:	and    al,0x0
   140008643:	add    bh,bh
   140008645:	(bad)  
   140008646:	(bad)  
   140008647:	push   rax
   140008649:	imul   eax,DWORD PTR [rax],0x0
   14000864c:	add    BYTE PTR [rax],al
   14000864e:	add    BYTE PTR [rax],al
   140008650:	std    
   140008651:	imul   eax,DWORD PTR [rax],0x0
   140008654:	add    DWORD PTR [rax],eax
   140008656:	add    BYTE PTR [rax],al
   140008658:	add    eax,0x200006c
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    BYTE PTR [rdx],dh
   140008661:	ins    BYTE PTR es:[rdi],dx
   140008662:	add    BYTE PTR [rax],al
   140008664:	add    BYTE PTR [rax],al
   140008666:	add    BYTE PTR [rax],al
   140008668:	rex.WRX ins BYTE PTR es:[rdi],dx
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	add    eax,DWORD PTR [rax]
   14000866e:	add    BYTE PTR [rax],al
   140008670:	sbb    DWORD PTR [rdx],ecx
   140008672:	add    al,BYTE PTR [rax]
   140008674:	or     dh,BYTE PTR [rdx]
   140008676:	(bad)  
   140008677:	push   rax
   140008678:	lock (bad) 
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	adc    BYTE PTR [rax+rax*1+0x0],dh
   140008680:	sbb    DWORD PTR [rbx],ecx
   140008682:	add    eax,DWORD PTR [rax]
   140008684:	or     eax,DWORD PTR [rdx+0x7]
   140008687:	push   rax
   140008688:	(bad)  
   140008689:	xor    BYTE PTR [rax],al
   14000868b:	add    al,dh
   14000868d:	(bad)  
   14000868e:	add    BYTE PTR [rax],al
   140008690:	adc    BYTE PTR [rax+rax*1+0x0],dh
   140008694:	add    DWORD PTR [rsi],esi
   140008696:	(bad)  
   140008697:	add    BYTE PTR [rsi],dh
   140008699:	fs (bad) 
   14000869b:	add    BYTE PTR [rdx],cl
   14000869d:	xor    al,0x9
   14000869f:	add    BYTE PTR [rdx],cl
   1400086a1:	xor    al,BYTE PTR [rsi]
   1400086a3:	jo     0x1400086c6
   1400086a5:	add    eax,0xe4050002
   1400086aa:	or     BYTE PTR [rax],al
   1400086ac:	add    BYTE PTR [rcx],ch
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	push   rbx
   1400086b1:	sub    DWORD PTR [rax],eax
   1400086b3:	add    BYTE PTR [rsi+rax*4+0x5210000],dl
   1400086ba:	add    al,BYTE PTR [rax]
   1400086bc:	add    eax,0x53000654
   1400086c1:	sub    DWORD PTR [rax],eax
   1400086c3:	add    BYTE PTR [rcx+0x29],ch
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400086c9:	xchg   BYTE PTR [rax],al
   1400086cb:	add    BYTE PTR [rcx],ah
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    BYTE PTR [rbx+0x29],dl
   1400086d2:	add    BYTE PTR [rax],al
   1400086d4:	imul   ebp,DWORD PTR [rcx],0x86a40000
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	and    DWORD PTR [rax],eax
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	add    BYTE PTR [rcx],ch
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	push   rbx
   1400086e5:	sub    DWORD PTR [rax],eax
   1400086e7:	add    BYTE PTR [rsi+rax*4+0xa010000],dl
   1400086ee:	add    al,0x0
   1400086f0:	or     dh,BYTE PTR [rdi+rax*1]
   1400086f3:	add    BYTE PTR [rdx],cl
   1400086f5:	xor    al,BYTE PTR [rsi]
   1400086f7:	jo     0x14000871a
   1400086f9:	add    eax,0x64050002
   1400086fe:	(bad)  
   1400086ff:	add    BYTE PTR [rax-0x54ffffd4],dl
   140008705:	sub    al,0x0
   140008707:	add    ah,ch
   140008709:	xchg   BYTE PTR [rax],al
   14000870b:	add    BYTE PTR [rcx],ah
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rax-0x54ffffd4],dl
   140008715:	sub    al,0x0
   140008717:	add    ah,ch
   140008719:	xchg   BYTE PTR [rax],al
   14000871b:	add    BYTE PTR [rcx],al
   14000871d:	add    al,0x1
   14000871f:	add    BYTE PTR [rdx+rax*2],al
   140008722:	add    BYTE PTR [rax],al
   140008724:	add    DWORD PTR [rcx+rax*1],eax
   140008727:	add    BYTE PTR [rdx+rax*2],al
   14000872a:	add    BYTE PTR [rax],al
   14000872c:	adc    DWORD PTR [rax],ebp
   14000872e:	(bad)  
   14000872f:	add    BYTE PTR [rax],ch
   140008731:	xor    al,0x38
   140008733:	add    BYTE PTR [rdi],dl
   140008735:	add    DWORD PTR [rdx],esi
   140008737:	add    BYTE PTR [rax],cl
   140008739:	jo     0x140008742
   14000873b:	(bad)  
   14000873c:	(bad)  
   14000873d:	push   rax
   14000873e:	add    BYTE PTR [rax],al
   140008740:	lock (bad) 
   140008742:	add    BYTE PTR [rax],al
   140008744:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   140008748:	(bad)  
   140008749:	(bad)  
   14000874a:	(bad)  
   14000874b:	inc    eax
   14000874d:	ins    BYTE PTR es:[rdi],dx
   14000874e:	add    BYTE PTR [rax],al
   140008750:	add    BYTE PTR [rax],al
   140008752:	add    BYTE PTR [rax],al
   140008754:	int3   
   140008755:	ins    BYTE PTR es:[rdi],dx
   140008756:	add    BYTE PTR [rax],al
   140008758:	add    DWORD PTR [rax],eax
   14000875a:	add    BYTE PTR [rax],al
   14000875c:	fsubr  DWORD PTR [rax+rax*1+0x0]
   140008760:	add    al,BYTE PTR [rax]
   140008762:	add    BYTE PTR [rax],al
   140008764:	(bad)  
   140008766:	add    BYTE PTR [rax],al
   140008768:	add    DWORD PTR [rax],eax
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	sbb    ebp,DWORD PTR [rbp+0x0]
   14000876f:	add    BYTE PTR [rax],ah
   140008771:	rex.WRXB add BYTE PTR [r8],r8b
   140008774:	(bad)  
   140008775:	(bad)  
   140008776:	(bad)  
   140008777:	call   QWORD PTR [rbx+0x4f]
   14000877a:	add    BYTE PTR [rax],al
   14000877c:	add    BYTE PTR [rax],al
   14000877e:	add    BYTE PTR [rax],al
   140008780:	jle    0x1400087d1
   140008782:	add    BYTE PTR [rax],al
   140008784:	add    DWORD PTR [rax],eax
   140008786:	add    BYTE PTR [rax],al
   140008788:	xchg   esp,eax
   140008789:	rex.WRXB add BYTE PTR [r8],r8b
   14000878c:	add    al,BYTE PTR [rax]
   14000878e:	add    BYTE PTR [rax],al
   140008790:	lods   eax,DWORD PTR ds:[rsi]
   140008791:	rex.WRXB add BYTE PTR [r8],r8b
   140008794:	add    eax,DWORD PTR [rax]
   140008796:	add    BYTE PTR [rax],al
   140008798:	ror    BYTE PTR [rdi+0x0],cl
   14000879b:	add    BYTE PTR [rdx],al
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rip+0x4000050],bl        # 0x1440087f5
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rdx+0x50],al
   1400087aa:	add    BYTE PTR [rax],al
   1400087ac:	add    DWORD PTR [rax],eax
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	(bad)  
   1400087b1:	push   rax
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	add    BYTE PTR [rax],al
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	xchg   BYTE PTR [rax+0x0],dl
   1400087bb:	add    bh,bh
   1400087bd:	(bad)  
   1400087be:	(bad)  
   1400087bf:	inc    DWORD PTR [rcx]
   1400087c1:	(bad)  
   1400087c2:	add    al,BYTE PTR [rax]
   1400087c4:	(bad)  
   1400087c5:	xor    al,BYTE PTR [rdx]
   1400087c7:	push   rax
   1400087c8:	adc    DWORD PTR [rax],esp
   1400087ca:	or     BYTE PTR [rax],al
   1400087cc:	and    BYTE PTR [rbp+rcx*1+0x0],dl
   1400087d0:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400087d3:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e0912b
   1400087d9:	jo     0x1400087e1
   1400087db:	(bad)  
   1400087dc:	lock (bad) 
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	(bad)  
   1400087e1:	je     0x1400087e3
   1400087e3:	add    bh,bh
   1400087e5:	(bad)  
   1400087e6:	(bad)  
   1400087e7:	push   rax
   1400087e9:	push   0x0
   1400087eb:	add    BYTE PTR [rax],al
   1400087ed:	add    BYTE PTR [rax],al
   1400087ef:	add    BYTE PTR [rsi],bl
   1400087f1:	imul   eax,DWORD PTR [rax],0x0
   1400087f4:	add    DWORD PTR [rax],eax
   1400087f6:	add    BYTE PTR [rax],al
   1400087f8:	xor    BYTE PTR [rbx+0x0],ch
   1400087fb:	add    BYTE PTR [rcx],al
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rsi],bh
   140008801:	imul   eax,DWORD PTR [rax],0x0
   140008804:	add    BYTE PTR [rax],al
   140008806:	add    BYTE PTR [rax],al
   140008808:	push   rax
   140008809:	sbb    BYTE PTR [rax],al
   14000880b:	add    bh,bh
   14000880d:	(bad)  
   14000880e:	(bad)  
   14000880f:	push   QWORD PTR [rcx+0x18]
   140008815:	add    BYTE PTR [rax],al
   140008817:	add    ch,cl
   140008819:	sbb    BYTE PTR [rax],al
   14000881b:	add    BYTE PTR [rcx],al
   14000881d:	add    BYTE PTR [rax],al
   14000881f:	add    bh,bh
   140008821:	sbb    BYTE PTR [rax],al
   140008823:	add    BYTE PTR [rdx],al
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    BYTE PTR [rdi],bh
   140008829:	sbb    DWORD PTR [rax],eax
   14000882b:	add    BYTE PTR [rbx],al
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rax+0x19],dh
   140008832:	add    BYTE PTR [rax],al
   140008834:	(bad)  
   140008835:	(bad)  
   140008836:	(bad)  
   140008837:	inc    DWORD PTR [rcx]
   140008839:	(bad)  
   14000883a:	add    al,BYTE PTR [rax]
   14000883c:	(bad)  
   14000883d:	xor    al,BYTE PTR [rdx]
   14000883f:	push   rax
   140008840:	add    DWORD PTR [rsi],eax
   140008842:	add    al,BYTE PTR [rax]
   140008844:	(bad)  
   140008845:	xor    al,BYTE PTR [rdx]
   140008847:	xor    BYTE PTR [rcx],dl
   140008849:	sbb    BYTE PTR [rax+rax*1],al
   14000884c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000884f:	add    BYTE PTR [rdx],cl
   140008851:	push   rdx
   140008852:	(bad)  
   140008853:	jo     0x140008845
   140008855:	(bad)  
   140008856:	add    BYTE PTR [rax],al
   140008858:	mov    BYTE PTR [rax+rax*1+0x0],dh
   14000885c:	(bad)  
   14000885d:	(bad)  
   14000885e:	(bad)  
   14000885f:	jmp    QWORD PTR [rax+0x6a]
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    al,ah
   140008869:	(bad)  
   14000886a:	add    BYTE PTR [rax],al
   14000886c:	(bad)  
   14000886d:	(bad)  
   14000886e:	(bad)  
   14000886f:	inc    DWORD PTR [rip+0x17]        # 0x14000888c
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rsi+0x17],ah
   14000887a:	add    BYTE PTR [rax],al
   14000887c:	(bad)  
   14000887d:	(bad)  
   14000887e:	(bad)  
   14000887f:	inc    DWORD PTR [rcx]
   140008881:	(bad)  
   140008882:	add    al,BYTE PTR [rax]
   140008884:	(bad)  
   140008885:	xor    al,BYTE PTR [rdx]
   140008887:	xor    BYTE PTR [rcx],dl
   140008889:	adc    al,0x4
   14000888b:	add    BYTE PTR [rsp+rsi*1],dl
   14000888e:	or     DWORD PTR [rax],eax
   140008890:	(bad)  
   140008891:	push   rdx
   140008892:	add    dh,BYTE PTR [rax-0x10]
   140008895:	(bad)  
   140008896:	add    BYTE PTR [rax],al
   140008898:	mov    al,0x74
   14000889a:	add    BYTE PTR [rax],al
   14000889c:	(bad)  
   14000889d:	(bad)  
   14000889e:	(bad)  
   14000889f:	call   QWORD PTR [rax+0x6c]
   1400088a5:	add    BYTE PTR [rax],al
   1400088a7:	add    BYTE PTR [rax],dh
   1400088a9:	cmp    eax,0xffff0000
   1400088ae:	(bad)  
   1400088af:	call   rsi
   1400088b1:	cmp    eax,0x0
   1400088b6:	add    BYTE PTR [rax],al
   1400088b8:	(bad)  
   1400088b9:	add    BYTE PTR ds:[rax],al
   1400088bc:	(bad)  
   1400088bd:	(bad)  
   1400088be:	(bad)  
   1400088bf:	inc    DWORD PTR [rcx]
   1400088c1:	clts   
   1400088c3:	add    BYTE PTR [rdi],cl
   1400088c5:	fs (bad) 
   1400088c7:	add    BYTE PTR [rdi],cl
   1400088c9:	xor    al,0x6
   1400088cb:	add    BYTE PTR [rdi],cl
   1400088cd:	xor    cl,BYTE PTR [rbx]
   1400088cf:	jo     0x1400088e2
   1400088d1:	and    cl,BYTE PTR [rdx]
   1400088d3:	add    BYTE PTR [rdx],ah
   1400088d5:	fs adc eax,0x14341e00
   1400088db:	add    BYTE PTR [rdx],dl
   1400088dd:	ror    BYTE PTR [rbx],cl
   1400088df:	lock or eax,esp
   1400088e2:	(bad)  
   1400088e3:	rol    BYTE PTR [rip+0xfffffffff0500470],0x62        # 0x130508d5a
   1400088ea:	add    BYTE PTR [rax],al
   1400088ec:	fdiv   DWORD PTR [rax+rax*1+0x0]
   1400088f0:	(bad)  
   1400088f1:	(bad)  
   1400088f2:	(bad)  
   1400088f3:	jmp    QWORD PTR [rax+0x4000006c]
   1400088f9:	add    BYTE PTR ds:[rax],al
   1400088fc:	(bad)  
   1400088fd:	(bad)  
   1400088fe:	(bad)  
   1400088ff:	(bad)  
   140008900:	ds (bad) 
   140008902:	add    BYTE PTR [rax],al
   140008904:	add    BYTE PTR [rax],al
   140008906:	add    BYTE PTR [rax],al
   140008908:	icebp  
   140008909:	add    BYTE PTR [rax],al
   14000890c:	(bad)  
   14000890d:	(bad)  
   14000890e:	(bad)  
   14000890f:	inc    DWORD PTR [rcx]
   140008911:	or     al,BYTE PTR [rax+rax*1]
   140008914:	or     dh,BYTE PTR [rsi+rax*1]
   140008917:	add    BYTE PTR [rdx],cl
   140008919:	xor    al,BYTE PTR [rsi]
   14000891b:	jo     0x14000891e
   14000891d:	(bad)  
   14000891e:	add    al,BYTE PTR [rax]
   140008920:	(bad)  
   140008921:	xor    al,BYTE PTR [rdx]
   140008923:	xor    BYTE PTR [rcx],ah
   140008925:	add    eax,0x74050002
   14000892a:	(bad)  
   14000892b:	add    BYTE PTR [rax-0x1cffffb2],dh
   140008931:	rex.WRX add BYTE PTR [rax],r8b
   140008934:	sbb    al,0x89
   140008936:	add    BYTE PTR [rax],al
   140008938:	and    DWORD PTR [rax],eax
   14000893a:	add    al,BYTE PTR [rax]
   14000893c:	add    BYTE PTR [rsi+rax*1+0x0],dh
   140008940:	mov    al,0x4e
   140008942:	add    BYTE PTR [rax],al
   140008944:	jrcxz  0x140008994
   140008946:	add    BYTE PTR [rax],al
   140008948:	sbb    al,0x89
   14000894a:	add    BYTE PTR [rax],al
   14000894c:	adc    DWORD PTR [rdi],ebx
   14000894e:	or     BYTE PTR [rax],al
   140008950:	(bad)  
   140008951:	xor    al,0x16
   140008953:	add    BYTE PTR [rdi],cl
   140008955:	ror    BYTE PTR [rax],cl
   140008957:	lock (bad) 
   140008959:	loopne 0x14000895f
   14000895b:	jo     0x140008960
   14000895d:	(bad)  
   14000895e:	add    dl,BYTE PTR [rax-0x10]
   140008961:	(bad)  
   140008962:	add    BYTE PTR [rax],al
   140008964:	add    BYTE PTR [rbp+0x0],dh
   140008967:	add    bh,bh
   140008969:	(bad)  
   14000896a:	(bad)  
   14000896b:	push   QWORD PTR [rax-0x2fffff94]
   140008971:	rex.WXB add BYTE PTR [r8],al
   140008974:	(bad)  
   140008975:	(bad)  
   140008976:	(bad)  
   140008977:	jmp    QWORD PTR [rcx+0x4c]
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    BYTE PTR [rbx+0x4e],bh
   140008982:	add    BYTE PTR [rax],al
   140008984:	(bad)  
   140008985:	(bad)  
   140008986:	(bad)  
   140008987:	inc    DWORD PTR [rcx]
   140008989:	adc    cl,BYTE PTR [rax]
   14000898b:	add    BYTE PTR [rdx],dl
   14000898d:	push   rsp
   14000898e:	or     al,BYTE PTR [rax]
   140008990:	adc    dh,BYTE PTR [rcx+rcx*1]
   140008993:	add    BYTE PTR [rdx],dl
   140008995:	xor    cl,BYTE PTR [rsi]
   140008997:	loopne 0x1400089a5
   140008999:	jo     0x1400089a6
   14000899b:	(bad)  
   14000899c:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b41589aa
   1400089a2:	or     DWORD PTR [rax],eax
   1400089a4:	adc    eax,0x15000864
   1400089a9:	xor    al,0x7
   1400089ab:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e09ae3
   1400089b1:	(bad)  
   1400089b2:	add    al,BYTE PTR [rax]
   1400089b4:	(bad)  
   1400089b5:	xor    al,BYTE PTR [rdx]
   1400089b7:	xor    BYTE PTR [rcx],ah
   1400089b9:	add    eax,0x74050002
   1400089be:	(bad)  
   1400089bf:	add    BYTE PTR [rax+0x4a],ah
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	pushf  
   1400089c5:	rex.WX add BYTE PTR [rax],al
   1400089c8:	mov    al,0x89
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	and    DWORD PTR [rax],eax
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	(bad)  
   1400089d1:	rex.WX add BYTE PTR [rax],al
   1400089d4:	pushf  
   1400089d5:	rex.WX add BYTE PTR [rax],al
   1400089d8:	mov    al,0x89
   1400089da:	add    BYTE PTR [rax],al
   1400089dc:	add    DWORD PTR [rsi],eax
   1400089de:	add    al,BYTE PTR [rax]
   1400089e0:	(bad)  
   1400089e1:	xor    al,BYTE PTR [rdx]
   1400089e3:	xor    BYTE PTR [rcx],al
   1400089e5:	or     al,BYTE PTR [rax+rax*1]
   1400089e8:	or     dh,BYTE PTR [rsi+rax*1]
   1400089eb:	add    BYTE PTR [rdx],cl
   1400089ed:	xor    al,BYTE PTR [rsi]
   1400089ef:	jo     0x1400089f2
   1400089f1:	or     al,BYTE PTR [rax+rax*1]
   1400089f4:	or     dh,BYTE PTR [rsi+rax*1]
   1400089f7:	add    BYTE PTR [rdx],cl
   1400089f9:	xor    al,BYTE PTR [rsi]
   1400089fb:	jo     0x140008a0e
   1400089fd:	(bad)  
   1400089fe:	or     BYTE PTR [rax],al
   140008a00:	(bad)  
   140008a01:	adc    al,BYTE PTR fs:[rax]
   140008a04:	sbb    dh,BYTE PTR [rcx+rdx*1]
   140008a07:	add    BYTE PTR [rsi],cl
   140008a09:	mov    dl,0x7
   140008a0b:	loopne 0x140008a12
   140008a0d:	jo     0x140008a13
   140008a0f:	push   rax
   140008a10:	lock (bad) 
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	sub    BYTE PTR [rbp+0x0],dh
   140008a17:	add    bh,bh
   140008a19:	(bad)  
   140008a1a:	(bad)  
   140008a1b:	inc    DWORD PTR [rax+0x5000006c]
   140008a21:	and    eax,0xffff0000
   140008a26:	(bad)  
   140008a27:	dec    eax
   140008a29:	and    eax,0x0
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	ss (bad) 
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	(bad)  
   140008a35:	(bad)  
   140008a36:	(bad)  
   140008a37:	inc    DWORD PTR [rcx]
   140008a39:	or     al,BYTE PTR [rax+rax*1]
   140008a3c:	or     dh,BYTE PTR [rsi+rax*1]
   140008a3f:	add    BYTE PTR [rdx],cl
   140008a41:	xor    al,BYTE PTR [rsi]
   140008a43:	jo     0x140008a46
   140008a45:	or     al,BYTE PTR [rax+rax*1]
   140008a48:	or     dh,BYTE PTR [rsi+rax*1]
   140008a4b:	add    BYTE PTR [rdx],cl
   140008a4d:	xor    al,BYTE PTR [rsi]
   140008a4f:	jo     0x140008a52
   140008a51:	or     al,BYTE PTR [rax+rax*1]
   140008a54:	or     dh,BYTE PTR [rsi+rax*1]
   140008a57:	add    BYTE PTR [rdx],cl
   140008a59:	xor    al,BYTE PTR [rsi]
   140008a5b:	jo     0x140008a5e
   140008a5d:	(bad)  
   140008a5e:	add    al,BYTE PTR [rax]
   140008a60:	(bad)  
   140008a61:	xor    al,BYTE PTR [rdx]
   140008a63:	xor    BYTE PTR [rcx],dl
   140008a65:	adc    al,0x2
   140008a67:	add    BYTE PTR [rdx+rsi*4],cl
   140008a6a:	or     BYTE PTR [rax],dh
   140008a6c:	lock (bad) 
   140008a6e:	add    BYTE PTR [rax],al
   140008a70:	push   rax
   140008a71:	jne    0x140008a73
   140008a73:	add    bh,bh
   140008a75:	(bad)  
   140008a76:	(bad)  
   140008a77:	push   QWORD PTR [rax+0x6a]
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    ah,ah
   140008a81:	push   0x0
   140008a83:	add    BYTE PTR [rax],al
   140008a85:	add    BYTE PTR [rax],al
   140008a87:	add    BYTE PTR [rax-0xffffe9],al
   140008a8d:	(bad)  
   140008a8e:	(bad)  
   140008a8f:	dec    edx
   140008a91:	(bad)  
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	add    BYTE PTR [rax],al
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	ficom  WORD PTR [rdi]
   140008a9a:	add    BYTE PTR [rax],al
   140008a9c:	add    DWORD PTR [rax],eax
   140008a9e:	add    BYTE PTR [rax],al
   140008aa0:	(bad)  
   140008aa1:	sbb    BYTE PTR [rax],al
   140008aa3:	add    BYTE PTR [rax],al
   140008aa5:	add    BYTE PTR [rax],al
   140008aa7:	add    BYTE PTR [rbx],bh
   140008aa9:	sbb    BYTE PTR [rax],al
   140008aab:	add    bh,bh
   140008aad:	(bad)  
   140008aae:	(bad)  
   140008aaf:	inc    DWORD PTR [rcx]
   140008ab1:	(bad)  
   140008ab2:	add    al,BYTE PTR [rax]
   140008ab4:	(bad)  
   140008ab5:	xor    al,BYTE PTR [rdx]
   140008ab7:	push   rax
   140008ab8:	add    DWORD PTR [rsi],eax
   140008aba:	add    al,BYTE PTR [rax]
   140008abc:	(bad)  
   140008abd:	xor    al,BYTE PTR [rdx]
   140008abf:	xor    BYTE PTR [rcx],al
   140008ac1:	clts   
   140008ac3:	add    BYTE PTR [rdi],cl
   140008ac5:	fs (bad) 
   140008ac7:	add    BYTE PTR [rdi],cl
   140008ac9:	xor    al,0x6
   140008acb:	add    BYTE PTR [rdi],cl
   140008acd:	xor    cl,BYTE PTR [rbx]
   140008acf:	jo     0x140008ad2
   140008ad1:	(bad)  
   140008ad2:	add    al,BYTE PTR [rax]
   140008ad4:	(bad)  
   140008ad5:	xor    al,BYTE PTR [rdx]
   140008ad7:	xor    BYTE PTR [rcx],bl
   140008ad9:	and    cl,BYTE PTR [rax]
   140008adb:	add    BYTE PTR [rdx],ah
   140008add:	xor    al,0x10
   140008adf:	add    BYTE PTR [rcx],dl
   140008ae1:	jb     0x140008af0
   140008ae3:	lock or esp,eax
   140008ae6:	or     eax,eax
   140008ae8:	(bad)  
   140008ae9:	jo     0x140008af1
   140008aeb:	(bad)  
   140008aec:	lock (bad) 
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	js     0x140008b67
   140008af2:	add    BYTE PTR [rax],al
   140008af4:	(bad)  
   140008af5:	(bad)  
   140008af6:	(bad)  
   140008af7:	inc    DWORD PTR [rax+0x6a]
   140008afa:	add    BYTE PTR [rax],al
   140008afc:	(bad)  
   140008afd:	(bad)  
   140008afe:	(bad)  
   140008aff:	dec    DWORD PTR [rdx+rbp*2+0x0]
   140008b03:	add    BYTE PTR [rcx],al
   140008b05:	add    BYTE PTR [rax],al
   140008b07:	add    BYTE PTR [rax],al
   140008b09:	add    BYTE PTR [rax],al
   140008b0b:	add    BYTE PTR [rcx],al
   140008b0d:	add    BYTE PTR [rax],al
   140008b0f:	add    BYTE PTR [rax],al
   140008b11:	add    BYTE PTR [rax],al
   140008b13:	add    BYTE PTR [rdx],al
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    BYTE PTR [rdx],al
   140008b19:	add    BYTE PTR [rax],al
   140008b1b:	add    BYTE PTR [rbx],al
   140008b1d:	add    BYTE PTR [rax],al
   140008b1f:	add    BYTE PTR [rcx],al
   140008b21:	add    BYTE PTR [rax],al
   140008b23:	add    BYTE PTR [rax],ch
   140008b25:	mov    eax,DWORD PTR [rax]
   140008b27:	add    BYTE PTR [rax+0x0],al
	...
   140008b32:	add    BYTE PTR [rax],al
   140008b34:	pop    rax
   140008b35:	push   0x0
   140008b37:	add    BYTE PTR [rax],bh
   140008b39:	add    BYTE PTR [rax],al
   140008b3b:	add    BYTE PTR [rax],al
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    BYTE PTR [rax+0x10],dh
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	(bad)  
   140008b45:	(bad)  
   140008b46:	(bad)  
   140008b47:	(bad)  
   140008b48:	fcom   DWORD PTR [rax]
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	add    BYTE PTR [rax],al
   140008b4e:	add    BYTE PTR [rax],al
   140008b50:	(bad)  
   140008b51:	adc    DWORD PTR [rax],eax
   140008b53:	add    BYTE PTR [rcx],al
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    BYTE PTR [rcx+rdx*1],bl
   140008b5a:	add    BYTE PTR [rax],al
   140008b5c:	add    al,BYTE PTR [rax]
   140008b5e:	add    BYTE PTR [rax],al
   140008b60:	rcl    BYTE PTR [rcx],1
   140008b62:	add    BYTE PTR [rax],al
   140008b64:	add    DWORD PTR [rax],eax
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	not    BYTE PTR [rcx]
   140008b6a:	add    BYTE PTR [rax],al
   140008b6c:	(bad)  
   140008b6d:	(bad)  
   140008b6e:	(bad)  
   140008b6f:	call   FWORD PTR [rax+0x6a]
   140008b72:	add    BYTE PTR [rax],al
   140008b74:	add    BYTE PTR [rax],al
   140008b76:	add    BYTE PTR [rax],al
   140008b78:	gs push 0x0
   140008b7b:	add    BYTE PTR [rbx],al
   140008b7d:	add    BYTE PTR [rax],al
   140008b7f:	add    BYTE PTR [rdx+0x6a],al
   140008b85:	add    BYTE PTR [rax],al
   140008b87:	add    BYTE PTR [rcx],bl
   140008b89:	or     al,BYTE PTR [rdx]
   140008b8b:	add    BYTE PTR [rdx],cl
   140008b8d:	xor    al,BYTE PTR [rsi]
   140008b8f:	push   rax
   140008b90:	lock (bad) 
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	js     0x140008c0b
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	adc    DWORD PTR [rbx],ebp
   140008b9a:	or     eax,0x1e742b00
   140008b9f:	add    BYTE PTR [rdi],ah
   140008ba1:	fs sbb eax,0x1c342300
   140008ba7:	add    BYTE PTR [rdi],dl
   140008ba9:	add    DWORD PTR [rsi],edx
   140008bab:	add    BYTE PTR [rax+rsi*8],cl
   140008bae:	or     ah,al
   140008bb0:	or     al,dl
   140008bb2:	(bad)  
   140008bb3:	rol    BYTE PTR [rax+rdx*2],0x0
   140008bb7:	add    al,dh
   140008bb9:	(bad)  
   140008bba:	add    BYTE PTR [rax],al
   140008bbc:	movabs al,ds:0x30ffffffff000075
   140008bc5:	ins    DWORD PTR es:[rdi],dx
   140008bc6:	add    BYTE PTR [rax],al
   140008bc8:	add    BYTE PTR [rax],al
   140008bca:	add    BYTE PTR [rax],al
   140008bcc:	cmp    al,0x6d
   140008bce:	add    BYTE PTR [rax],al
   140008bd0:	add    DWORD PTR [rax],eax
   140008bd2:	add    BYTE PTR [rax],al
   140008bd4:	rex.W ins DWORD PTR es:[rdi],dx
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	lock push rax
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	(bad)  
   140008bdd:	(bad)  
   140008bde:	(bad)  
   140008bdf:	inc    DWORD PTR [rcx+0x51]
   140008be2:	add    BYTE PTR [rax],al
   140008be4:	add    BYTE PTR [rax],al
   140008be6:	add    BYTE PTR [rax],al
   140008be8:	push   rbp
   140008be9:	push   rcx
   140008bea:	add    BYTE PTR [rax],al
   140008bec:	add    DWORD PTR [rax],eax
   140008bee:	add    BYTE PTR [rax],al
   140008bf0:	imul   edx,DWORD PTR [rcx+0x0],0x200
   140008bf7:	add    BYTE PTR [rbx],bl
   140008bf9:	push   rsp
   140008bfa:	add    BYTE PTR [rax],al
   140008bfc:	add    DWORD PTR [rax],eax
   140008bfe:	add    BYTE PTR [rax],al
   140008c00:	cmp    al,0x54
   140008c02:	add    BYTE PTR [rax],al
   140008c04:	add    BYTE PTR [rax],al
   140008c06:	add    BYTE PTR [rax],al
   140008c08:	pop    rbp
   140008c09:	push   rsp
   140008c0a:	add    BYTE PTR [rax],al
   140008c0c:	(bad)  
   140008c0d:	(bad)  
   140008c0e:	(bad)  
   140008c0f:	inc    DWORD PTR [rcx]
   140008c11:	(bad)  
   140008c12:	add    al,BYTE PTR [rax]
   140008c14:	(bad)  
   140008c15:	push   rdx
   140008c16:	add    dh,BYTE PTR [rax]
   140008c18:	add    DWORD PTR [rcx+rax*1],eax
   140008c1b:	add    BYTE PTR [rdx+riz*2],al
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	adc    DWORD PTR [rcx],ebx
   140008c22:	(bad)  
   140008c23:	add    BYTE PTR [rcx],bl
   140008c25:	fs or  eax,0xc341400
   140008c2b:	add    BYTE PTR [rsi],al
   140008c2d:	jb     0x140008c31
   140008c2f:	jo     0x140008c21
   140008c31:	(bad)  
   140008c32:	add    BYTE PTR [rax],al
   140008c34:	enter  0x75,0x0
   140008c38:	(bad)  
   140008c39:	(bad)  
   140008c3a:	(bad)  
   140008c3b:	call   QWORD PTR [rax-0xfffff96]
   140008c41:	adc    al,0x0
   140008c43:	add    bh,bh
   140008c45:	(bad)  
   140008c46:	(bad)  
   140008c47:	call   FWORD PTR [rdx]
   140008c49:	adc    eax,0x0
   140008c4e:	add    BYTE PTR [rax],al
   140008c50:	rcl    DWORD PTR [rip+0xffffffffffff0000],cl        # 0x13fff8c56
   140008c56:	(bad)  
   140008c57:	inc    DWORD PTR [rcx]
   140008c59:	(bad)  
   140008c5a:	add    al,BYTE PTR [rax]
   140008c5c:	(bad)  
   140008c5d:	xor    al,BYTE PTR [rdx]
   140008c5f:	xor    BYTE PTR [rcx],dl
   140008c61:	sbb    BYTE PTR [rax+rax*1],al
   140008c64:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008c67:	add    BYTE PTR [rdx],cl
   140008c69:	push   rdx
   140008c6a:	(bad)  
   140008c6b:	jo     0x140008c5d
   140008c6d:	(bad)  
   140008c6e:	add    BYTE PTR [rax],al
   140008c70:	lock jne 0x140008c73
   140008c73:	add    bh,bh
   140008c75:	(bad)  
   140008c76:	(bad)  
   140008c77:	call   QWORD PTR [rax+0x6b]
   140008c7a:	add    BYTE PTR [rax],al
   140008c7c:	add    BYTE PTR [rax],al
   140008c7e:	add    BYTE PTR [rax],al
   140008c80:	xor    BYTE PTR [rbx],bl
   140008c82:	add    BYTE PTR [rax],al
   140008c84:	(bad)  
   140008c85:	(bad)  
   140008c86:	(bad)  
   140008c87:	jmp    FWORD PTR [rcx+0x1b]
   140008c8a:	add    BYTE PTR [rax],al
   140008c8c:	add    BYTE PTR [rax],al
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	sahf   
   140008c91:	sbb    eax,DWORD PTR [rax]
   140008c93:	add    bh,bh
   140008c95:	(bad)  
   140008c96:	(bad)  
   140008c97:	inc    DWORD PTR [rcx]
   140008c99:	(bad)  
   140008c9a:	add    al,BYTE PTR [rax]
   140008c9c:	(bad)  
   140008c9d:	xor    al,BYTE PTR [rdx]
   140008c9f:	xor    BYTE PTR [rcx],al
   140008ca1:	add    al,0x1
   140008ca3:	add    BYTE PTR [rdx+rax*2],al
   140008ca6:	add    BYTE PTR [rax],al
   140008ca8:	add    DWORD PTR [rcx+rax*1],eax
   140008cab:	add    BYTE PTR [rdx+rax*2],al
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	add    DWORD PTR [rbp+0xa],esp
   140008cb3:	add    BYTE PTR [rbp+0x74],ah
   140008cb6:	(bad)  
   140008cb7:	add    BYTE PTR [rip+0x15000964],dl        # 0x155009621
   140008cbd:	push   rsp
   140008cbe:	or     BYTE PTR [rax],al
   140008cc0:	adc    eax,0x15000734
   140008cc5:	xor    dl,BYTE PTR [rcx]
   140008cc7:	loopne 0x140008cca
   140008cc9:	(bad)  
   140008cca:	or     BYTE PTR [rax],al
   140008ccc:	(bad)  
   140008ccd:	je     0x140008cd5
   140008ccf:	add    BYTE PTR [rdi],cl
   140008cd1:	push   rsp
   140008cd2:	or     BYTE PTR [rax],al
   140008cd4:	sysenter 
   140008cd6:	(bad)  
   140008cd7:	add    BYTE PTR [rdi],cl
   140008cd9:	xor    cl,BYTE PTR [rbx]
   140008cdb:	(bad)  
   140008cdc:	add    DWORD PTR [rcx+rax*1],eax
   140008cdf:	add    BYTE PTR [rdx+riz*2],al
   140008ce2:	add    BYTE PTR [rax],al
   140008ce4:	add    DWORD PTR [rsi],eax
   140008ce6:	add    al,BYTE PTR [rax]
   140008ce8:	(bad)  
   140008ce9:	xor    al,BYTE PTR [rdx]
   140008ceb:	xor    BYTE PTR [rcx],ah
   140008ced:	or     al,BYTE PTR [rax+rax*1]
   140008cf0:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140008cf4:	add    eax,0xa0000664
   140008cf9:	pop    rbx
   140008cfa:	add    BYTE PTR [rax],al
   140008cfc:	ret    
   140008cfd:	pop    rbx
   140008cfe:	add    BYTE PTR [rax],al
   140008d00:	in     al,0x8c
   140008d02:	add    BYTE PTR [rax],al
   140008d04:	and    DWORD PTR [rax],eax
   140008d06:	add    al,0x0
   140008d08:	add    BYTE PTR [rdi+rax*1+0x0],dh
   140008d0c:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140008d10:	movabs al,ds:0xe400005bc300005b
   140008d19:	mov    WORD PTR [rax],es
   140008d1b:	add    BYTE PTR [rcx],dl
   140008d1d:	(bad)  
   140008d1e:	add    eax,0x30341e00
   140008d23:	add    BYTE PTR [rip+0x6002e01],cl        # 0x14600bb2a
   140008d29:	jo     0x140008d2b
   140008d2b:	add    al,dh
   140008d2d:	(bad)  
   140008d2e:	add    BYTE PTR [rax],al
   140008d30:	js     0x140008daa
   140008d32:	add    BYTE PTR [rax],al
   140008d34:	(bad)  
   140008d35:	(bad)  
   140008d36:	(bad)  
   140008d37:	jmp    QWORD PTR [rax]
   140008d39:	outs   dx,BYTE PTR ds:[rsi]
   140008d3a:	add    BYTE PTR [rax],al
   140008d3c:	add    BYTE PTR [rax],al
   140008d3e:	add    BYTE PTR [rax],al
   140008d40:	sub    al,0x6e
   140008d42:	add    BYTE PTR [rax],al
   140008d44:	add    DWORD PTR [rax],eax
   140008d46:	add    BYTE PTR [rax],al
   140008d48:	cmp    BYTE PTR [rsi+0x0],ch
   140008d4b:	add    BYTE PTR [rax],al
   140008d4d:	add    BYTE PTR [rax],al
   140008d4f:	add    BYTE PTR [rax+0x5d],ah
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	(bad)  
   140008d55:	(bad)  
   140008d56:	(bad)  
   140008d57:	inc    DWORD PTR [rcx+0x5d]
   140008d5d:	add    BYTE PTR [rax],al
   140008d5f:	add    BYTE PTR [rbp+rbx*2+0x10000],ch
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	(bad)  
   140008d69:	pop    rsi
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	add    al,BYTE PTR [rax]
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	lods   al,BYTE PTR ds:[rsi]
   140008d71:	pop    rsi
   140008d72:	add    BYTE PTR [rax],al
   140008d74:	add    DWORD PTR [rax],eax
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	(bad)  
   140008d79:	pop    rdi
   140008d7a:	add    BYTE PTR [rax],al
   140008d7c:	add    BYTE PTR [rax],al
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	xor    BYTE PTR [rdi+0x0],bl
   140008d83:	add    bh,bh
   140008d85:	(bad)  
   140008d86:	(bad)  
   140008d87:	inc    DWORD PTR [rcx]
   140008d89:	(bad)  
   140008d8a:	add    al,BYTE PTR [rax]
   140008d8c:	(bad)  
   140008d8d:	push   rdx
   140008d8e:	add    dh,BYTE PTR [rax]
   140008d90:	adc    DWORD PTR [rax],ebx
   140008d92:	(bad)  
   140008d93:	add    BYTE PTR [rdi],cl
   140008d95:	push   rdx
   140008d96:	or     esp,eax
   140008d98:	or     DWORD PTR [rax+0x8],esi
   140008d9b:	(bad)  
   140008d9c:	(bad)  
   140008d9d:	push   rax
   140008d9e:	(bad)  
   140008d9f:	xor    al,dh
   140008da1:	(bad)  
   140008da2:	add    BYTE PTR [rax],al
   140008da4:	movabs al,ds:0xb0ffffffff000078
   140008dad:	ins    DWORD PTR es:[rdi],dx
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	add    BYTE PTR [rax],al
   140008db2:	add    BYTE PTR [rax],al
   140008db4:	fisubr WORD PTR [rbp+0x0]
   140008db7:	add    BYTE PTR [rcx],al
   140008db9:	add    BYTE PTR [rax],al
   140008dbb:	add    al,dh
   140008dbd:	ins    DWORD PTR es:[rdi],dx
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	add    DWORD PTR [rax],eax
   140008dc2:	add    BYTE PTR [rax],al
   140008dc4:	(bad)  
   140008dc5:	ins    DWORD PTR es:[rdi],dx
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	push   rax
   140008dc9:	push   rdi
   140008dca:	add    BYTE PTR [rax],al
   140008dcc:	(bad)  
   140008dcd:	(bad)  
   140008dce:	(bad)  
   140008dcf:	jmp    FWORD PTR [rdi+rdx*2+0x0]
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	enter  0x57,0x0
   140008ddc:	add    DWORD PTR [rax],eax
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	cli    
   140008de1:	push   rdi
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	add    al,BYTE PTR [rax]
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	cmp    bl,BYTE PTR [rax+0x0]
   140008deb:	add    BYTE PTR [rbx],al
   140008ded:	add    BYTE PTR [rax],al
   140008def:	add    BYTE PTR [rbp+0x58],dh
   140008df2:	add    BYTE PTR [rax],al
   140008df4:	(bad)  
   140008df5:	(bad)  
   140008df6:	(bad)  
   140008df7:	inc    DWORD PTR [rcx]
   140008df9:	(bad)  
   140008dfa:	add    al,BYTE PTR [rax]
   140008dfc:	(bad)  
   140008dfd:	xor    al,BYTE PTR [rdx]
   140008dff:	push   rax
   140008e00:	adc    DWORD PTR [rsp+rax*1],edx
   140008e03:	add    BYTE PTR [rsp+rsi*1],dl
   140008e06:	or     DWORD PTR [rax],eax
   140008e08:	(bad)  
   140008e09:	push   rdx
   140008e0a:	add    dh,BYTE PTR [rax-0x10]
   140008e0d:	(bad)  
   140008e0e:	add    BYTE PTR [rax],al
   140008e10:	enter  0x78,0x0
   140008e14:	(bad)  
   140008e15:	(bad)  
   140008e16:	(bad)  
   140008e17:	call   QWORD PTR [rax]
   140008e19:	outs   dx,BYTE PTR ds:[rsi]
   140008e1a:	add    BYTE PTR [rax],al
   140008e1c:	add    BYTE PTR [rax],al
   140008e1e:	add    BYTE PTR [rax],al
   140008e20:	push   rax
   140008e21:	pop    rsp
   140008e22:	add    BYTE PTR [rax],al
   140008e24:	(bad)  
   140008e25:	(bad)  
   140008e26:	(bad)  
   140008e27:	push   rsi
   140008e29:	pop    rsp
   140008e2a:	add    BYTE PTR [rax],al
   140008e2c:	add    BYTE PTR [rax],al
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	es pop rbp
   140008e32:	add    BYTE PTR [rax],al
   140008e34:	(bad)  
   140008e35:	(bad)  
   140008e36:	(bad)  
   140008e37:	call   FWORD PTR [rcx]
   140008e39:	and    cl,BYTE PTR [rax]
   140008e3b:	add    BYTE PTR [rdx],ah
   140008e3d:	xor    al,0x10
   140008e3f:	add    BYTE PTR [rcx],dl
   140008e41:	jb     0x140008e50
   140008e43:	lock or esp,eax
   140008e46:	or     eax,eax
   140008e48:	(bad)  
   140008e49:	jo     0x140008e51
   140008e4b:	(bad)  
   140008e4c:	lock (bad) 
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	lock js 0x140008e53
   140008e53:	add    bh,bh
   140008e55:	(bad)  
   140008e56:	(bad)  
   140008e57:	jmp    QWORD PTR [rax+0x6d]
   140008e5a:	add    BYTE PTR [rax],al
   140008e5c:	(bad)  
   140008e5d:	(bad)  
   140008e5e:	(bad)  
   140008e5f:	jmp    FWORD PTR [rbp+rbp*2+0x0]
   140008e63:	add    BYTE PTR [rcx],al
   140008e65:	add    BYTE PTR [rax],al
   140008e67:	add    BYTE PTR [rax],al
   140008e69:	add    BYTE PTR [rax],al
   140008e6b:	add    BYTE PTR [rcx],al
   140008e6d:	add    BYTE PTR [rax],al
   140008e6f:	add    BYTE PTR [rax],al
   140008e71:	add    BYTE PTR [rax],al
   140008e73:	add    BYTE PTR [rdx],al
   140008e75:	add    BYTE PTR [rax],al
   140008e77:	add    BYTE PTR [rdx],al
   140008e79:	add    BYTE PTR [rax],al
   140008e7b:	add    BYTE PTR [rbx],al
   140008e7d:	add    BYTE PTR [rax],al
   140008e7f:	add    BYTE PTR [rcx],al
   140008e81:	add    BYTE PTR [rax],al
   140008e83:	add    BYTE PTR [rax+0x4000008e],cl
	...
   140008e91:	add    BYTE PTR [rax],al
   140008e93:	add    BYTE PTR [rax+0x6d],bh
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	cmp    BYTE PTR [rax],al
   140008e9a:	add    BYTE PTR [rax],al
   140008e9c:	add    BYTE PTR [rax],al
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	add    BYTE PTR [rbp+0x0],dl
   140008ea3:	add    bh,bh
   140008ea5:	(bad)  
   140008ea6:	(bad)  
   140008ea7:	(bad)  
   140008ea8:	jg     0x140008eff
   140008eaa:	add    BYTE PTR [rax],al
   140008eac:	add    BYTE PTR [rax],al
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	mov    ch,0x55
   140008eb2:	add    BYTE PTR [rax],al
   140008eb4:	add    DWORD PTR [rax],eax
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	ret    
   140008eb9:	push   rbp
   140008eba:	add    BYTE PTR [rax],al
   140008ebc:	add    al,BYTE PTR [rax]
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	addr32 push rsi
   140008ec2:	add    BYTE PTR [rax],al
   140008ec4:	add    DWORD PTR [rax],eax
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	lea    edx,[rsi+0x0]
   140008ecb:	add    bh,bh
   140008ecd:	(bad)  
   140008ece:	(bad)  
   140008ecf:	(bad)  
   140008ed0:	js     0x140008f3f
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	add    BYTE PTR [rax],al
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	test   DWORD PTR [rbp+0x0],ebp
   140008edb:	add    BYTE PTR [rbx],al
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	add    BYTE PTR [rdx+0x6d],ah
   140008ee5:	add    BYTE PTR [rax],al
   140008ee7:	add    BYTE PTR [rcx],bl
   140008ee9:	or     al,BYTE PTR [rdx]
   140008eeb:	add    BYTE PTR [rdx],cl
   140008eed:	xor    al,BYTE PTR [rsi]
   140008eef:	push   rax
   140008ef0:	lock (bad) 
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	lock js 0x140008ef7
   140008ef7:	add    BYTE PTR [rcx],al
   140008ef9:	(bad)  
   140008efa:	add    al,BYTE PTR [rax]
   140008efc:	(bad)  
   140008efd:	xor    al,BYTE PTR [rdx]
   140008eff:	xor    BYTE PTR [rcx],al
   140008f01:	(bad)  
   140008f02:	add    al,BYTE PTR [rax]
   140008f04:	(bad)  
   140008f05:	xor    al,BYTE PTR [rdx]
   140008f07:	xor    BYTE PTR [rcx],al
   140008f09:	add    al,0x1
   140008f0b:	add    BYTE PTR [rdx+rax*2],al
   140008f0e:	add    BYTE PTR [rax],al
   140008f10:	add    DWORD PTR [rdx],ecx
   140008f12:	add    al,0x0
   140008f14:	or     dh,BYTE PTR [rsi+rax*1]
   140008f17:	add    BYTE PTR [rdx],cl
   140008f19:	xor    al,BYTE PTR [rsi]
   140008f1b:	jo     0x140008f1e
   140008f1d:	(bad)  
   140008f1e:	add    al,BYTE PTR [rax]
   140008f20:	(bad)  
   140008f21:	xor    al,BYTE PTR [rdx]
   140008f23:	xor    BYTE PTR [rcx],al
   140008f25:	(bad)  
   140008f26:	add    al,BYTE PTR [rax]
   140008f28:	(bad)  
   140008f29:	xor    al,BYTE PTR [rdx]
   140008f2b:	xor    BYTE PTR [rcx],al
   140008f2d:	add    al,0x1
   140008f2f:	add    BYTE PTR [rdx+rax*2],al
   140008f32:	add    BYTE PTR [rax],al
   140008f34:	adc    DWORD PTR [rsi],eax
   140008f36:	add    al,BYTE PTR [rax]
   140008f38:	(bad)  
   140008f39:	xor    al,BYTE PTR [rdx]
   140008f3b:	xor    BYTE PTR [rsi+0x1000066],ch
   140008f41:	add    BYTE PTR [rax],al
   140008f43:	add    bh,ah
   140008f45:	(bad)  
   140008f46:	add    BYTE PTR [rax],al
   140008f48:	rex.WRB (bad) 
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	rex.R outs dx,BYTE PTR ds:[rsi]
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	add    BYTE PTR [rax],al
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	add    DWORD PTR [rsi],eax
   140008f56:	add    al,BYTE PTR [rax]
   140008f58:	(bad)  
   140008f59:	xor    al,BYTE PTR [rdx]
   140008f5b:	push   rax
   140008f5c:	add    DWORD PTR [rsi],eax
   140008f5e:	add    al,BYTE PTR [rax]
   140008f60:	(bad)  
   140008f61:	xor    al,BYTE PTR [rdx]
   140008f63:	xor    BYTE PTR [rcx],al
   140008f65:	clts   
   140008f67:	add    BYTE PTR [rdi],cl
   140008f69:	fs (bad) 
   140008f6b:	add    BYTE PTR [rdi],cl
   140008f6d:	xor    al,0x6
   140008f6f:	add    BYTE PTR [rdi],cl
   140008f71:	xor    cl,BYTE PTR [rbx]
   140008f73:	jo     0x140008f76
   140008f75:	add    al,0x1
   140008f77:	add    BYTE PTR [rdx+rax*2],al
   140008f7a:	add    BYTE PTR [rax],al
   140008f7c:	add    DWORD PTR [rcx+rax*1],eax
   140008f7f:	add    BYTE PTR [rdx+riz*2],al
   140008f82:	add    BYTE PTR [rax],al
   140008f84:	or     DWORD PTR [rsi],eax
   140008f86:	add    al,BYTE PTR [rax]
   140008f88:	(bad)  
   140008f89:	xor    al,BYTE PTR [rdx]
   140008f8b:	jo     0x140008f3b
   140008f8d:	data16 add BYTE PTR [rax],al
   140008f90:	add    DWORD PTR [rax],eax
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	(bad)  
   140008f95:	add    BYTE PTR fs:[rax],al
   140008f98:	add    eax,0x5f000066
   140008f9d:	outs   dx,BYTE PTR ds:[rsi]
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	add    eax,0x1000066
   140008fa5:	(bad)  
   140008fa6:	add    al,BYTE PTR [rax]
   140008fa8:	(bad)  
   140008fa9:	xor    al,BYTE PTR [rdx]
   140008fab:	push   rax
   140008fac:	add    DWORD PTR [rcx+rax*1],eax
   140008faf:	add    BYTE PTR [rdx+rax*2],al
   140008fb2:	add    BYTE PTR [rax],al
   140008fb4:	adc    DWORD PTR [rax],ebx
   140008fb6:	add    eax,0x14621800
   140008fbb:	loopne 0x140008fcf
   140008fbd:	jo     0x140008fd0
   140008fbf:	(bad)  
   140008fc0:	adc    BYTE PTR [rax],dh
   140008fc2:	add    BYTE PTR [rax],al
   140008fc4:	scas   al,BYTE PTR es:[rdi]
   140008fc5:	data16 add BYTE PTR [rax],al
   140008fc8:	add    DWORD PTR [rax],eax
   140008fca:	add    BYTE PTR [rax],al
   140008fcc:	out    0x66,eax
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	(bad)  
   140008fd1:	add    BYTE PTR [eax],al
   140008fd4:	jge    0x140009044
   140008fd6:	add    BYTE PTR [rax],al
   140008fd8:	add    BYTE PTR [rax],al
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	add    DWORD PTR [rsi],eax
   140008fde:	add    al,BYTE PTR [rax]
   140008fe0:	(bad)  
   140008fe1:	xor    al,BYTE PTR [rdx]
   140008fe3:	push   rax
   140008fe4:	or     DWORD PTR [rdi],edx
   140008fe6:	(bad)  
   140008fe7:	add    BYTE PTR [rdi],dl
   140008fe9:	xor    al,0xd
   140008feb:	add    BYTE PTR [rdi],dl
   140008fed:	jb     0x140009002
   140008fef:	loopne 0x140009002
   140008ff1:	jo     0x140009003
   140008ff3:	(bad)  
   140008ff4:	scas   al,BYTE PTR es:[rdi]
   140008ff5:	data16 add BYTE PTR [rax],al
   140008ff8:	add    DWORD PTR [rax],eax
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	push   rbx
   140008ffd:	add    BYTE PTR [eax],al
   140009000:	ins    BYTE PTR es:[rdi],dx
   140009001:	add    BYTE PTR [eax],al
   140009004:	test   eax,0x6c00006e
   140009009:	add    BYTE PTR [eax],al
   14000900c:	add    DWORD PTR [rsi],eax
   14000900e:	add    al,BYTE PTR [rax]
   140009010:	(bad)  
   140009011:	xor    al,BYTE PTR [rdx]
   140009013:	push   rax
   140009014:	add    DWORD PTR [rcx+rax*1],eax
   140009017:	add    BYTE PTR [rdx+rax*2],al
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    DWORD PTR [rcx+rax*1],eax
   14000901f:	add    BYTE PTR [rdx+rax*2],al
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    DWORD PTR [rcx+rax*1],eax
   140009027:	add    BYTE PTR [rdx+rax*2],al
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	or     DWORD PTR [rdx],ecx
   14000902e:	add    al,0x0
   140009030:	or     dh,BYTE PTR [rsi+rax*1]
   140009033:	add    BYTE PTR [rdx],cl
   140009035:	xor    al,BYTE PTR [rsi]
   140009037:	jo     0x140008fe7
   140009039:	data16 add BYTE PTR [rax],al
   14000903c:	add    DWORD PTR [rax],eax
   14000903e:	add    BYTE PTR [rax],al
   140009040:	rex.WRB push 0x68800000
   140009046:	add    BYTE PTR [rax],al
   140009048:	lock outs dx,BYTE PTR ds:[rsi]
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	sub    BYTE PTR [rax+0x0],0x0
   140009050:	add    DWORD PTR [rsi],eax
   140009052:	add    al,BYTE PTR [rax]
   140009054:	(bad)  
   140009055:	xor    al,BYTE PTR [rdx]
   140009057:	push   rax
   140009058:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d9062
   14000905e:	or     DWORD PTR [rax],eax
   140009060:	or     eax,0x1500632
   140009065:	or     al,BYTE PTR [rax+rax*1]
   140009068:	or     dh,BYTE PTR [rsi+rax*1]
   14000906b:	add    BYTE PTR [rdx],cl
   14000906d:	xor    al,BYTE PTR [rsi]
   14000906f:	jo     0x140009072
   140009071:	or     al,BYTE PTR [rax+rax*1]
   140009074:	or     dh,BYTE PTR [rsi+rax*1]
   140009077:	add    BYTE PTR [rdx],cl
   140009079:	xor    al,BYTE PTR [rsi]
   14000907b:	jo     0x14000907d
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rax],al
   140009081:	add    BYTE PTR [rax],al
   140009083:	add    BYTE PTR [rax-0x50],dl
   140009086:	add    BYTE PTR [rax],al
   140009088:	add    BYTE PTR [rax],al
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	(bad)  
   14000908d:	(bad)  
   14000908e:	(bad)  
   14000908f:	inc    DWORD PTR [rax]
   140009091:	add    BYTE PTR [rax],al
   140009093:	add    BYTE PTR [rax],bl
   140009095:	add    BYTE PTR [rax],al
   140009097:	add    dh,bl
   140009099:	(bad)  
	...
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	in     al,0x62
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	add    BYTE PTR [rax],al
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	enter  0x90,0x0
	...
   1400090c8:	add    al,BYTE PTR [rax]
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	loopne 0x14000905e
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	adc    BYTE PTR [rax+0x0],0x0
	...
   1400090e3:	add    BYTE PTR [rax-0x50],bh
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	add    BYTE PTR [rax],al
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	(bad)  
   1400090ed:	(bad)  
   1400090ee:	(bad)  
   1400090ef:	inc    DWORD PTR [rax]
   1400090f1:	add    BYTE PTR [rax],al
   1400090f3:	add    BYTE PTR [rax],bl
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    al,bl
   1400090f9:	(bad)  
	...
   140009112:	add    BYTE PTR [rax],al
   140009114:	mov    dl,0x1e
   140009116:	sbb    DWORD PTR [rax+0x0],0x56000000
   14000911d:	xchg   ecx,eax
   14000911e:	add    BYTE PTR [rax],al
   140009120:	add    DWORD PTR [rax],eax
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    eax,DWORD PTR [rax]
   140009126:	add    BYTE PTR [rax],al
   140009128:	add    eax,DWORD PTR [rax]
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	cmp    BYTE PTR [rcx-0x6ebc0000],dl
   140009132:	add    BYTE PTR [rax],al
   140009134:	push   rax
   140009135:	xchg   ecx,eax
   140009136:	add    BYTE PTR [rax],al
   140009138:	and    BYTE PTR [rax-0x4fd80000],dh
   14000913e:	add    BYTE PTR [rax],al
   140009140:	sbb    BYTE PTR [rax-0x6e990000],dh
   140009146:	add    BYTE PTR [rax],al
   140009148:	jg     0x1400090db
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	(bad)  
   14000914d:	xchg   ecx,eax
   14000914e:	add    BYTE PTR [rax],al
   140009150:	add    BYTE PTR [rax],al
   140009152:	add    DWORD PTR [rax],eax
   140009154:	add    al,BYTE PTR [rax]
   140009156:	ins    DWORD PTR es:[rdi],dx
   140009157:	ja     0x1400091b8
   140009159:	xor    al,0x61
   14000915b:	pop    rdi
   14000915c:	jne    0x1400091ce
   14000915e:	fs (bad) 
   140009160:	je     0x1400091c7
   140009162:	cs gs js 0x1400091cb
   140009166:	add    BYTE PTR [rbp+0x77],ch
   140009169:	pop    rdi
   14000916a:	xor    al,0x61
   14000916c:	pop    rdi
   14000916d:	jne    0x1400091df
   14000916f:	fs (bad) 
   140009171:	je     0x1400091d8
   140009173:	pop    rdi
   140009174:	(bad)  
   140009175:	jne    0x1400091e0
   140009177:	ins    BYTE PTR es:[rdi],dx
   140009178:	fs pop rdi
   14000917a:	fs (bad) 
   14000917c:	je     0x1400091e3
   14000917e:	add    BYTE PTR [rbp+0x77],ch
   140009181:	pop    rdi
   140009182:	xor    al,0x61
   140009184:	pop    rdi
   140009185:	jne    0x1400091f7
   140009187:	fs (bad) 
   140009189:	je     0x1400091f0
   14000918b:	pop    rdi
   14000918c:	jb     0x1400091f3
   14000918e:	ins    BYTE PTR es:[rdi],dx
   14000918f:	(bad)  
   140009190:	je     0x1400091fb
   140009192:	jbe    0x1400091f9
   140009194:	pop    rdi
   140009195:	jo     0x1400091f8
   140009197:	je     0x140009201
   140009199:	add    BYTE PTR [rbp+0x77],ch
   14000919c:	pop    rdi
   14000919d:	xor    al,0x61
   14000919f:	pop    rdi
   1400091a0:	jne    0x140009212
   1400091a2:	fs (bad) 
   1400091a4:	je     0x14000920b
   1400091a6:	pop    rdi
   1400091a7:	jbe    0x14000920e
   1400091a9:	jb     0x14000921e
   1400091ab:	imul   ebp,DWORD PTR [rdi+0x6e],0x95480000
	...
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	push   rdx
   1400091bd:	xchg   esi,eax
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	xor    BYTE PTR [rbx+0x0],dh
   1400091c3:	add    BYTE PTR [rax-0x6e],dl
	...
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	(bad)  
   1400091d1:	lahf   
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	cmp    BYTE PTR [rax+0x0],dh
   1400091d7:	add    BYTE PTR [rax+0x93],dh
   1400091dd:	add    BYTE PTR [rax],al
   1400091df:	add    BYTE PTR [rax],al
   1400091e1:	add    BYTE PTR [rax],al
   1400091e3:	add    BYTE PTR [rax],cl
   1400091e5:	movabs eax,ds:0x9218000071980000
	...
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	adc    ah,BYTE PTR [rbx+0x70000000]
	...
   140009216:	add    BYTE PTR [rax],al
   140009218:	clc    
   140009219:	movabs ds:0xa2e2000000000000,al
   140009222:	add    BYTE PTR [rax],al
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	mov    dl,0xa2
   14000922a:	add    BYTE PTR [rax],al
   14000922c:	add    BYTE PTR [rax],al
   14000922e:	add    BYTE PTR [rax],al
   140009230:	movabs ds:0x92000000000000a2,al
   140009239:	movabs ds:0xa2cc000000000000,al
	...
   14000924e:	add    BYTE PTR [rax],al
   140009250:	rcl    BYTE PTR [rsi+0x0],cl
   140009256:	add    BYTE PTR [rax],al
   140009258:	hlt    
   140009259:	xchg   esi,eax
   14000925a:	add    BYTE PTR [rax],al
   14000925c:	add    BYTE PTR [rax],al
   14000925e:	add    BYTE PTR [rax],al
   140009260:	(bad)  
   140009261:	xchg   edi,eax
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	xor    al,0x97
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	add    BYTE PTR [rax],al
   14000926e:	add    BYTE PTR [rax],al
   140009270:	push   0x97
   140009275:	add    BYTE PTR [rax],al
   140009277:	add    BYTE PTR [rdi+rdx*4+0x0],dl
   14000927e:	add    BYTE PTR [rax],al
   140009280:	rcl    BYTE PTR [rdi+0x0],cl
   140009286:	add    BYTE PTR [rax],al
   140009288:	adc    BYTE PTR [rax+0x0],bl
   14000928e:	add    BYTE PTR [rax],al
   140009290:	rex.RX cwde 
   140009292:	add    BYTE PTR [rax],al
   140009294:	add    BYTE PTR [rax],al
   140009296:	add    BYTE PTR [rax],al
   140009298:	mov    BYTE PTR [rax+0x0],bl
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	test   al,0x98
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	add    BYTE PTR [rax],al
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	enter  0x98,0x0
   1400092ac:	add    BYTE PTR [rax],al
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	neg    BYTE PTR [rax+0x0]
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	xor    bl,BYTE PTR [rcx+0x0]
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	outs   dx,BYTE PTR ds:[rsi]
   1400092c1:	cdq    
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	mov    edx,0x99
   1400092cd:	add    BYTE PTR [rax],al
   1400092cf:	add    ah,bh
   1400092d1:	cdq    
   1400092d2:	add    BYTE PTR [rax],al
   1400092d4:	add    BYTE PTR [rax],al
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	rex.R (bad) 
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	add    BYTE PTR [rax],al
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	mov    bl,BYTE PTR [rdx+0x0]
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	retf   0x9a
   1400092eb:	add    BYTE PTR [rax],al
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rax],al
   1400092f1:	fwait
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	add    BYTE PTR [rax],al
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	rex
   1400092f9:	fwait
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	add    BYTE PTR [rax],al
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	lods   al,BYTE PTR ds:[rsi]
   140009301:	fwait
   140009302:	add    BYTE PTR [rax],al
   140009304:	add    BYTE PTR [rax],al
   140009306:	add    BYTE PTR [rax],al
   140009308:	out    0x9b,al
   14000930a:	add    BYTE PTR [rax],al
   14000930c:	add    BYTE PTR [rax],al
   14000930e:	add    BYTE PTR [rax],al
   140009310:	and    al,0x9c
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	push   0x9c
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    BYTE PTR [rax+0x9c],dl
   140009325:	add    BYTE PTR [rax],al
   140009327:	add    dh,dl
   140009329:	pushf  
   14000932a:	add    BYTE PTR [rax],al
   14000932c:	add    BYTE PTR [rax],al
   14000932e:	add    BYTE PTR [rax],al
   140009330:	(bad)  
   140009331:	popf   
   140009332:	add    BYTE PTR [rax],al
   140009334:	add    BYTE PTR [rax],al
   140009336:	add    BYTE PTR [rax],al
   140009338:	popfw  
   14000933a:	add    BYTE PTR [rax],al
   14000933c:	add    BYTE PTR [rax],al
   14000933e:	add    BYTE PTR [rax],al
   140009340:	jl     0x1400092df
   140009342:	add    BYTE PTR [rax],al
   140009344:	add    BYTE PTR [rax],al
   140009346:	add    BYTE PTR [rax],al
   140009348:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009349:	popf   
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	add    BYTE PTR [rax],al
   14000934e:	add    BYTE PTR [rax],al
   140009350:	mov    esp,0x9d
   140009355:	add    BYTE PTR [rax],al
   140009357:	add    al,dh
   140009359:	popf   
   14000935a:	add    BYTE PTR [rax],al
   14000935c:	add    BYTE PTR [rax],al
   14000935e:	add    BYTE PTR [rax],al
   140009360:	sub    BYTE PTR [rsi+0x0],bl
   140009366:	add    BYTE PTR [rax],al
   140009368:	fs sahf 
   14000936a:	add    BYTE PTR [rax],al
   14000936c:	add    BYTE PTR [rax],al
   14000936e:	add    BYTE PTR [rax],al
   140009370:	mov    eax,0x9e
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    ah,bh
   140009379:	sahf   
   14000937a:	add    BYTE PTR [rax],al
   14000937c:	add    BYTE PTR [rax],al
   14000937e:	add    BYTE PTR [rax],al
   140009380:	and    al,0x9f
   140009382:	add    BYTE PTR [rax],al
   140009384:	add    BYTE PTR [rax],al
   140009386:	add    BYTE PTR [rax],al
   140009388:	jl     0x140009320
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	add    BYTE PTR [rax],al
   14000938e:	add    BYTE PTR [rax],al
   140009390:	xchg   esi,eax
   140009391:	xchg   esi,eax
   140009392:	add    BYTE PTR [rax],al
   140009394:	add    BYTE PTR [rax],al
   140009396:	add    BYTE PTR [rax],al
   140009398:	(bad)  
   140009399:	xchg   esi,eax
   14000939a:	add    BYTE PTR [rax],al
   14000939c:	add    BYTE PTR [rax],al
   14000939e:	add    BYTE PTR [rax],al
   1400093a0:	mov    eax,0x96
	...
   1400093ad:	add    BYTE PTR [rax],al
   1400093af:	add    BYTE PTR [rdi+rbx*4+0x0],bl
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	mov    al,0x9f
   1400093ba:	add    BYTE PTR [rax],al
   1400093bc:	add    BYTE PTR [rax],al
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	mov    edx,0x9f
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    BYTE PTR [rdi+rbx*4+0x0],cl
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	int3   
   1400093d1:	lahf   
   1400093d2:	add    BYTE PTR [rax],al
   1400093d4:	add    BYTE PTR [rax],al
   1400093d6:	add    BYTE PTR [rax],al
   1400093d8:	(bad)  
   1400093d9:	lahf   
   1400093da:	add    BYTE PTR [rax],al
   1400093dc:	add    BYTE PTR [rax],al
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	ficomp WORD PTR [rdi+0x0]
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	(bad)  
   1400093e9:	lahf   
   1400093ea:	add    BYTE PTR [rax],al
   1400093ec:	add    BYTE PTR [rax],al
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	hlt    
   1400093f1:	lahf   
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	add    BYTE PTR [rax],al
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	(bad)  
   1400093f9:	lahf   
   1400093fa:	add    BYTE PTR [rax],al
   1400093fc:	add    BYTE PTR [rax],al
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	or     BYTE PTR [rax+0x0],ah
   140009406:	add    BYTE PTR [rax],al
   140009408:	(bad)  
   140009409:	movabs al,ds:0xa026000000000000
   140009412:	add    BYTE PTR [rax],al
   140009414:	add    BYTE PTR [rax],al
   140009416:	add    BYTE PTR [rax],al
   140009418:	xor    ah,BYTE PTR [rax+0x0]
   14000941e:	add    BYTE PTR [rax],al
   140009420:	cmp    al,0xa0
   140009422:	add    BYTE PTR [rax],al
   140009424:	add    BYTE PTR [rax],al
   140009426:	add    BYTE PTR [rax],al
   140009428:	pop    rsp
   140009429:	movabs al,ds:0xa07e000000000000
   140009432:	add    BYTE PTR [rax],al
   140009434:	add    BYTE PTR [rax],al
   140009436:	add    BYTE PTR [rax],al
   140009438:	movabs ds:0xbe000000000000a0,al
   140009441:	movabs al,ds:0xa0d4000000000000
   14000944a:	add    BYTE PTR [rax],al
   14000944c:	add    BYTE PTR [rax],al
   14000944e:	add    BYTE PTR [rax],al
   140009450:	(bad)  
   140009451:	movabs al,ds:0xa0f4000000000000
   14000945a:	add    BYTE PTR [rax],al
   14000945c:	add    BYTE PTR [rax],al
   14000945e:	add    BYTE PTR [rax],al
   140009460:	(bad)  
   140009461:	movabs al,ds:0xa116000000000000
   14000946a:	add    BYTE PTR [rax],al
   14000946c:	add    BYTE PTR [rax],al
   14000946e:	add    BYTE PTR [rax],al
   140009470:	(bad)  
   140009471:	movabs eax,ds:0xa128000000000000
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	add    BYTE PTR [rax],al
   14000947e:	add    BYTE PTR [rax],al
   140009480:	movabs eax,ss:0xa144000000000000
   14000948a:	add    BYTE PTR [rax],al
   14000948c:	add    BYTE PTR [rax],al
   14000948e:	add    BYTE PTR [rax],al
   140009490:	pop    rsp
   140009491:	movabs eax,ds:0xa166000000000000
   14000949a:	add    BYTE PTR [rax],al
   14000949c:	add    BYTE PTR [rax],al
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	je     0x140009443
   1400094a2:	add    BYTE PTR [rax],al
   1400094a4:	add    BYTE PTR [rax],al
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	(bad)  
   1400094a9:	movabs eax,ds:0xa192000000000000
   1400094b2:	add    BYTE PTR [rax],al
   1400094b4:	add    BYTE PTR [rax],al
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400094b9:	movabs eax,ds:0xa1ac000000000000
   1400094c2:	add    BYTE PTR [rax],al
   1400094c4:	add    BYTE PTR [rax],al
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	mov    ah,0xa1
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	add    BYTE PTR [rax],al
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	mov    esi,0xa1
   1400094d5:	add    BYTE PTR [rax],al
   1400094d7:	add    ah,dl
   1400094d9:	movabs eax,ds:0xa1e8000000000000
   1400094e2:	add    BYTE PTR [rax],al
   1400094e4:	add    BYTE PTR [rax],al
   1400094e6:	add    BYTE PTR [rax],al
   1400094e8:	mul    BYTE PTR [rcx+0x0]
   1400094ee:	add    BYTE PTR [rax],al
   1400094f0:	add    ah,BYTE PTR [rdx+0x0]
   1400094f6:	add    BYTE PTR [rax],al
   1400094f8:	(bad)  
   1400094f9:	movabs ds:0xa218000000000000,al
   140009502:	add    BYTE PTR [rax],al
   140009504:	add    BYTE PTR [rax],al
   140009506:	add    BYTE PTR [rax],al
   140009508:	and    al,0xa2
   14000950a:	add    BYTE PTR [rax],al
   14000950c:	add    BYTE PTR [rax],al
   14000950e:	add    BYTE PTR [rax],al
   140009510:	cmp    BYTE PTR [rdx+0x0],ah
   140009516:	add    BYTE PTR [rax],al
   140009518:	outs   dx,BYTE PTR ds:[rsi]
   140009519:	movabs ds:0x9f7a000000000000,al
   140009522:	add    BYTE PTR [rax],al
   140009524:	add    BYTE PTR [rax],al
   140009526:	add    BYTE PTR [rax],al
   140009528:	outs   dx,BYTE PTR ds:[rsi]
   140009529:	lahf   
   14000952a:	add    BYTE PTR [rax],al
   14000952c:	add    BYTE PTR [rax],al
   14000952e:	add    BYTE PTR [rax],al
   140009530:	ret    0x9f
   140009533:	add    BYTE PTR [rax],al
   140009535:	add    BYTE PTR [rax],al
   140009537:	add    BYTE PTR [rsi+0x9f],ah
	...
   140009545:	add    BYTE PTR [rax],al
   140009547:	add    ah,al
   140009549:	xchg   ebp,eax
   14000954a:	add    BYTE PTR [rax],al
   14000954c:	add    BYTE PTR [rax],al
   14000954e:	add    BYTE PTR [rax],al
   140009550:	(bad)  
   140009551:	xchg   ebp,eax
	...
   14000955e:	add    BYTE PTR [rax],al
   140009560:	xchg   DWORD PTR [rbx],eax
   140009562:	(bad)  
   140009563:	je     0x1400095d4
   140009565:	pop    rdi
   140009566:	jne    0x1400095db
   140009568:	je     0x1400095dc
   14000956a:	imul   ebp,DWORD PTR [rsi+0x67],0x38316940
   140009571:	outs   dx,BYTE PTR ds:[rsi]
   140009572:	rex
   140009573:	data16 ins BYTE PTR es:[rdi],dx
   140009575:	rex
   140009576:	rex pop rcx
   140009578:	rex.B (bad) 
   14000957a:	push   r14
   14000957c:	(bad)  
   14000957d:	and    al,0x62
   14000957f:	(bad)  
   140009580:	jae    0x1400095eb
   140009582:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009585:	je     0x1400095f9
   140009587:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000958e:	(bad)  
   14000958f:	and    al,0x63
   140009591:	push   0x745f7261
   140009596:	jb     0x1400095f9
   140009598:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   1400095a0:	je     0x140009606
   1400095a2:	rex
   1400095a3:	rex push rsi
   1400095a5:	(bad)  
   1400095a6:	and    al,0x61
   1400095a8:	ins    BYTE PTR es:[rdi],dx
   1400095a9:	ins    BYTE PTR es:[rdi],dx
   1400095aa:	outs   dx,DWORD PTR ds:[rsi]
   1400095ab:	movsxd esp,DWORD PTR [rcx+0x74]
   1400095ae:	outs   dx,DWORD PTR ds:[rsi]
   1400095af:	jb     0x1400095f1
   1400095b1:	pop    rdi
   1400095b2:	push   rdi
   1400095b3:	xor    al,BYTE PTR [rax+0x40]
   1400095b7:	jae    0x14000962d
   1400095b9:	fs rex
   1400095bb:	rex push rax
   1400095bd:	rex.RB
   1400095be:	rex.X
   1400095bf:	rex.R
   1400095c0:	rex pop rdx
   1400095c2:	add    BYTE PTR [rax],al
   1400095c4:	sbb    eax,DWORD PTR [rbx]
   1400095c6:	(bad)  
   1400095c7:	ins    DWORD PTR es:[rdi],dx
   1400095c8:	(bad)  
   1400095c9:	imul   esp,DWORD PTR [rbp+0x5f],0x6e
   1400095cd:	(bad)  
   1400095ce:	je     0x140009639
   1400095d0:	jbe    0x140009637
   1400095d2:	pop    rdi
   1400095d3:	(bad)  
   1400095d4:	movsxd esp,DWORD PTR [rbx+0x65]
   1400095d7:	jae    0x14000964c
   1400095d9:	pop    rdi
   1400095da:	outs   dx,WORD PTR ds:[rsi]
   1400095dc:	jb     0x14000964b
   1400095de:	pop    rdi
   1400095df:	ja     0x14000964a
   1400095e1:	je     0x14000964b
   1400095e3:	pop    rdi
   1400095e4:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   1400095e8:	outs   dx,BYTE PTR ds:[rsi]
   1400095e9:	jne    0x14000965b
   1400095eb:	rex
   1400095ec:	fs gs je 0x140009651
   1400095f0:	imul   ebp,DWORD PTR [rax+rax*2+0x66],0x73656c69
   1400095f8:	jns    0x14000966d
   1400095fa:	je     0x140009661
   1400095fc:	ins    DWORD PTR es:[rdi],dx
   1400095fd:	rex
   1400095fe:	data16 ins BYTE PTR es:[rdi],dx
   140009600:	rex
   140009601:	rex pop rcx
   140009603:	rex.B (bad) 
   140009605:	push   r14
   140009607:	(bad)  
   140009608:	and    al,0x62
   14000960a:	(bad)  
   14000960b:	jae    0x140009676
   14000960d:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009610:	je     0x140009684
   140009612:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   140009619:	(bad)  
   14000961a:	and    al,0x63
   14000961c:	push   0x745f7261
   140009621:	jb     0x140009684
   140009623:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000962b:	je     0x140009691
   14000962d:	rex
   14000962e:	rex push rsi
   140009630:	(bad)  
   140009631:	and    al,0x61
   140009633:	ins    BYTE PTR es:[rdi],dx
   140009634:	ins    BYTE PTR es:[rdi],dx
   140009635:	outs   dx,DWORD PTR ds:[rsi]
   140009636:	movsxd esp,DWORD PTR [rcx+0x74]
   140009639:	outs   dx,DWORD PTR ds:[rsi]
   14000963a:	jb     0x14000967c
   14000963c:	pop    rdi
   14000963d:	push   rdi
   14000963e:	xor    al,BYTE PTR [rax+0x40]
   140009642:	jae    0x1400096b8
   140009644:	fs rex
   140009646:	rex
   140009647:	rex.B
   140009648:	rex.RB
   140009649:	rex.X push rsi
   14000964b:	xor    al,0x35
   14000964d:	rex
   14000964e:	rex pop rdx
   140009650:	add    BYTE PTR [rax],al
   140009652:	ins    BYTE PTR es:[rdi],dx
   140009653:	imul   esp,DWORD PTR [rdx+0x6d],0x38316977
   14000965a:	outs   dx,BYTE PTR ds:[rsi]
   14000965b:	cs fs ins BYTE PTR es:[rdi],dx
   14000965e:	ins    BYTE PTR es:[rdi],dx
   14000965f:	add    BYTE PTR [rsi+0x0],ah
   140009662:	(bad)  
   140009663:	(bad)  
   140009664:	xor    BYTE PTR [rdi+0x4c],bl
   140009667:	outs   dx,DWORD PTR ds:[rsi]
   140009668:	movsxd ebp,DWORD PTR [rbx+0x69]
   14000966b:	je     0x1400096ad
   14000966d:	jae    0x1400096e3
   14000966f:	fs rex
   140009671:	rex push rcx
   140009673:	rex.RB
   140009674:	rex.B
   140009675:	rex.B
   140009676:	rex
   140009677:	rex.W
   140009678:	rex pop rdx
   14000967a:	add    BYTE PTR [rax],al
   14000967c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000967d:	add    BYTE PTR [rdi],bh
   14000967f:	(bad)  
   140009680:	xor    DWORD PTR [rdi+0x4c],ebx
   140009683:	outs   dx,DWORD PTR ds:[rsi]
   140009684:	movsxd ebp,DWORD PTR [rbx+0x69]
   140009687:	je     0x1400096c9
   140009689:	jae    0x1400096ff
   14000968b:	fs rex
   14000968d:	rex push rcx
   14000968f:	rex.RB
   140009690:	rex.B
   140009691:	rex.B
   140009692:	rex pop rax
   140009694:	pop    rdx
   140009695:	add    BYTE PTR [rbx+0x5],al
   140009698:	(bad)  
   140009699:	jne    0x140009709
   14000969b:	movsxd esp,DWORD PTR [rcx+0x75]
   14000969e:	addr32 push 0x78655f74
   1400096a4:	movsxd esp,DWORD PTR [rbp+0x70]
   1400096a7:	je     0x140009712
   1400096a9:	outs   dx,DWORD PTR ds:[rsi]
   1400096aa:	outs   dx,BYTE PTR ds:[rsi]
   1400096ab:	rex jae 0x140009722
   1400096ae:	fs rex
   1400096b0:	rex pop rcx
   1400096b2:	pop    r15
   1400096b4:	rex.WRX pop rax
   1400096b6:	pop    rdx
   1400096b7:	add    cl,cl
   1400096b9:	add    bh,BYTE PTR [rdi]
   1400096bb:	pop    rdi
   1400096bc:	pop    rax
   1400096bd:	(bad)
   1400096c2:	ins    BYTE PTR es:[rdi],dx
   1400096c3:	ins    BYTE PTR es:[rdi],dx
   1400096c4:	outs   dx,DWORD PTR ds:[rsi]
   1400096c5:	movsxd eax,DWORD PTR [rax+0x73]
   1400096c8:	je     0x14000972e
   1400096ca:	rex
   1400096cb:	rex pop rcx
   1400096cd:	pop    r8
   1400096cf:	pop    rax
   1400096d0:	pop    rdx
   1400096d1:	add    ah,cl
   1400096d3:	add    bh,BYTE PTR [rdi]
   1400096d5:	pop    rdi
   1400096d6:	pop    rax
   1400096d7:	ins    BYTE PTR es:[rdi],dx
   1400096d8:	outs   dx,BYTE PTR gs:[rsi]
   1400096da:	addr32 je 0x140009745
   1400096dd:	pop    rdi
   1400096de:	gs jb  0x140009753
   1400096e1:	outs   dx,DWORD PTR ds:[rsi]
   1400096e2:	jb     0x140009724
   1400096e4:	jae    0x14000975a
   1400096e6:	fs rex
   1400096e8:	rex pop rcx
   1400096ea:	pop    r8
   1400096ec:	push   rax
   1400096ed:	rex.RB
   1400096ee:	rex.X
   1400096ef:	rex.R
   1400096f0:	rex pop rdx
   1400096f2:	add    BYTE PTR [rax],al
   1400096f4:	int    0x2
   1400096f6:	(bad)  
   1400096f7:	pop    rdi
   1400096f8:	pop    rax
   1400096f9:	outs   dx,DWORD PTR ds:[rsi]
   1400096fa:	jne    0x140009770
   1400096fc:	pop    rdi
   1400096fd:	outs   dx,DWORD PTR ds:[rsi]
   1400096fe:	pop    di
   140009700:	jb     0x140009763
   140009702:	outs   dx,BYTE PTR ds:[rsi]
   140009703:	addr32 gs rex jae 0x14000977c
   140009708:	fs rex
   14000970a:	rex pop rcx
   14000970c:	pop    r8
   14000970e:	push   rax
   14000970f:	rex.RB
   140009710:	rex.X
   140009711:	rex.R
   140009712:	rex pop rdx
   140009714:	add    BYTE PTR [rax],al
   140009716:	xor    BYTE PTR [rcx],al
   140009718:	(bad)  
   140009719:	(bad)  
   14000971a:	imul   esp,DWORD PTR [rax+r8*2+0x6c],0x6c61636f
   140009723:	gs rex jae 0x14000979b
   140009727:	fs rex
   140009729:	rex push rcx
   14000972b:	rex.RB
   14000972c:	rex.B
   14000972d:	pop    r15
   14000972f:	rex.WXB pop r8
   140009731:	pop    rdx
   140009732:	add    BYTE PTR [rax],al
   140009734:	in     eax,dx
   140009735:	add    DWORD PTR [rdi],edi
   140009737:	pop    rdi
   140009738:	rex.RXB
   140009739:	gs je  0x1400097a3
   14000973c:	ins    BYTE PTR es:[rdi],dx
   14000973d:	outs   dx,DWORD PTR ds:[rsi]
   14000973e:	(bad)
   140009743:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009746:	gs rex ins BYTE PTR es:[rdi],dx
   140009749:	outs   dx,DWORD PTR ds:[rsi]
   14000974a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000974d:	gs rex jae 0x1400097c5
   140009751:	fs rex
   140009753:	rex
   140009754:	rex.XB
   140009755:	push   r8
   140009757:	rex.RB
   140009758:	push   r14
   14000975a:	pop    rdi
   14000975b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000975d:	movsxd ebp,DWORD PTR [rcx+0x6d]
   140009760:	jo     0x1400097a2
   140009762:	xor    DWORD PTR [rdx],esi
   140009764:	rex pop rax
   140009766:	pop    rdx
   140009767:	add    dl,dl
   140009769:	add    bh,BYTE PTR [rdi]
   14000976b:	(bad)  
   14000976c:	ins    BYTE PTR es:[rdi],dx
   14000976d:	ja     0x1400097d0
   14000976f:	jns    0x1400097e4
   140009771:	pop    rdi
   140009772:	outs   dx,BYTE PTR ds:[rsi]
   140009773:	outs   dx,DWORD PTR ds:[rsi]
   140009774:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009777:	jbe    0x1400097b9
   140009779:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000977c:	movsxd esi,DWORD PTR gs:[rsi+0x74]
   140009780:	pop    rdi
   140009781:	(bad)  
   140009783:	jae    0x1400097ea
   140009785:	rex jae 0x1400097fc
   140009788:	fs rex
   14000978a:	rex push rcx
   14000978c:	rex.RB
   14000978d:	rex.X
   14000978e:	pop    r15
   140009790:	rex.WRX pop rax
   140009792:	pop    rdx
   140009793:	add    BYTE PTR [rax],ah
   140009795:	add    al,0x3f
   140009797:	imul   ebp,DWORD PTR [rsi+0x40],0x6f63243f
   14000979e:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   1400097a3:	rex
   1400097a4:	rex.R
   1400097a5:	rex.R
   1400097a6:	rex.W
   1400097a7:	rex jae 0x14000981e
   1400097aa:	fs rex
   1400097ac:	rex push rcx
   1400097ae:	rex.RB
   1400097af:	rex.X
   1400097b0:	rex.B
   1400097b1:	rex.W
   1400097b2:	rex.B
   1400097b3:	rex.RB
   1400097b4:	rex.B
   1400097b5:	rex.W push rax
   1400097b7:	rex.RB
   1400097b8:	rex.X
   1400097b9:	xor    DWORD PTR [rcx+0x45],r8d
   1400097bd:	push   r8
   1400097bf:	rex.RB
   1400097c0:	rex.X
   1400097c1:	rex.R push rax
   1400097c3:	rex.RB
   1400097c4:	rex.B
   1400097c5:	xor    r8d,DWORD PTR [rcx+0x45]
   1400097c9:	push   r8
   1400097cb:	rex.RB
   1400097cc:	rex.B
   1400097cd:	rex.R
   1400097ce:	rex pop rdx
   1400097d0:	add    BYTE PTR [rax],al
   1400097d2:	push   rsi
   1400097d3:	add    al,0x3f
   1400097d5:	outs   dx,DWORD PTR ds:[rsi]
   1400097d6:	jne    0x14000984c
   1400097d8:	rex (bad) 
   1400097da:	and    al,0x63
   1400097dc:	outs   dx,DWORD PTR ds:[rsi]
   1400097dd:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   1400097e2:	rex
   1400097e3:	rex.R
   1400097e4:	rex.R
   1400097e5:	rex.W
   1400097e6:	rex jae 0x14000985d
   1400097e9:	fs rex
   1400097eb:	rex push rcx
   1400097ed:	rex.RB
   1400097ee:	rex.X
   1400097ef:	rex.B
   1400097f0:	rex.W
   1400097f1:	rex.B
   1400097f2:	rex.RB
   1400097f3:	rex.B
   1400097f4:	rex.W push rax
   1400097f6:	rex.RB
   1400097f7:	rex.X
   1400097f8:	xor    DWORD PTR [rcx+0x45],r8d
   1400097fc:	push   r8
   1400097fe:	rex.RB
   1400097ff:	rex.X
   140009800:	rex.R push rax
   140009802:	rex.RB
   140009803:	rex.B
   140009804:	xor    r8d,DWORD PTR [rcx+0x45]
   140009808:	push   r8
   14000980a:	rex.RB
   14000980b:	rex.B
   14000980c:	rex.R
   14000980d:	rex pop rdx
   14000980f:	add    BYTE PTR [rbx+0x5],cl
   140009812:	(bad)  
   140009813:	jne    0x140009883
   140009815:	jae    0x14000987f
   140009817:	imul   esp,DWORD PTR [rsi+0x74],0x63243f40
   14000981e:	outs   dx,DWORD PTR ds:[rsi]
   14000981f:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   140009824:	rex
   140009825:	rex.R
   140009826:	rex.R
   140009827:	rex.W
   140009828:	rex jae 0x14000989f
   14000982b:	fs rex
   14000982d:	rex push rcx
   14000982f:	rex.RB
   140009830:	rex.X
   140009831:	rex.B
   140009832:	rex.W
   140009833:	rex.B
   140009834:	rex.RB
   140009835:	rex.B
   140009836:	rex.W push rax
   140009838:	rex.RB
   140009839:	rex.B
   14000983a:	xor    DWORD PTR [rcx+0x45],r8d
   14000983e:	push   r8
   140009840:	rex.RB
   140009841:	rex.B
   140009842:	rex.R
   140009843:	rex pop rdx
   140009845:	add    bl,cl
   140009847:	add    DWORD PTR [rdi],edi
   140009849:	pop    rdi
   14000984a:	rex.RXB
   14000984b:	gs je  0x1400098b1
   14000984e:	(bad)  
   14000984f:	je     0x140009891
   140009851:	(bad)  
   140009852:	and    al,0x63
   140009854:	outs   dx,DWORD PTR ds:[rsi]
   140009855:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000985a:	rex
   14000985b:	rex.R
   14000985c:	rex.R
   14000985d:	rex.W
   14000985e:	rex jae 0x1400098d5
   140009861:	fs rex
   140009863:	rex push rbx
   140009865:	pop    r15
   140009867:	rex.WXB push r8
   140009869:	rex.RB
   14000986a:	push   r8
   14000986c:	rex.RB
   14000986d:	rex.X push rsi
   14000986f:	data16 (bad) 
   140009871:	movsxd esp,DWORD PTR [rbp+0x74]
   140009874:	rex ins BYTE PTR es:[rdi],dx
   140009876:	outs   dx,DWORD PTR ds:[rsi]
   140009877:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000987a:	xor    al,BYTE PTR gs:[rax+0x50]
   14000987f:	rex.RB
   140009880:	rex.X push rsi
   140009882:	xor    al,0x32
   140009884:	rex
   140009885:	rex pop rdx
   140009887:	add    BYTE PTR [rax+0x535f3f02],dh
   14000988d:	jns    0x140009902
   14000988f:	gs jb  0x140009904
   140009892:	outs   dx,DWORD PTR ds:[rsi]
   140009893:	jb     0x1400098f4
   140009895:	ins    DWORD PTR es:[rdi],dx
   140009896:	(bad)  
   140009897:	jo     0x1400098d9
   140009899:	jae    0x14000990f
   14000989b:	fs rex
   14000989d:	rex pop rcx
   14000989f:	push   r8
   1400098a1:	rex.RB
   1400098a2:	rex.X
   1400098a3:	rex.R
   1400098a4:	rex.W
   1400098a5:	rex pop rdx
   1400098a7:	add    ch,al
   1400098a9:	add    bh,BYTE PTR [rdi]
   1400098ab:	pop    rdi
   1400098ac:	push   rdi
   1400098ad:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   1400098b4:	pop    rdi
   1400098b5:	ins    DWORD PTR es:[rdi],dx
   1400098b6:	(bad)  
   1400098b7:	jo     0x1400098f9
   1400098b9:	jae    0x14000992f
   1400098bb:	fs rex
   1400098bd:	rex pop rcx
   1400098bf:	push   r8
   1400098c1:	rex.RB
   1400098c2:	rex.X
   1400098c3:	rex.R
   1400098c4:	rex.W
   1400098c5:	rex pop rdx
   1400098c7:	add    BYTE PTR [rbx+0x2],al
   1400098ca:	(bad)  
   1400098cb:	pop    rdi
   1400098cc:	rex.WB outs dx,DWORD PTR ds:[rsi]
   1400098ce:	jae    0x14000992f
   1400098d0:	(bad)  
   1400098d2:	jae    0x140009939
   1400098d4:	pop    rdi
   1400098d5:	fs je  0x140009947
   1400098d8:	jb     0x14000991a
   1400098da:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   1400098e1:	gs rex jae 0x140009959
   1400098e5:	fs rex
   1400098e7:	rex
   1400098e8:	rex.XB
   1400098e9:	pop    r8
   1400098eb:	push   rax
   1400098ec:	rex.RB
   1400098ed:	push   r14
   1400098ef:	xor    DWORD PTR [rdx],esi
   1400098f1:	rex
   1400098f2:	rex pop rdx
   1400098f4:	add    BYTE PTR [rax],al
   1400098f6:	sub    al,BYTE PTR [rax]
   1400098f8:	(bad)  
   1400098f9:	(bad)  
   1400098fa:	xor    BYTE PTR [rdi],bh
   1400098fc:	and    al,0x62
   1400098fe:	(bad)  
   1400098ff:	jae    0x14000996a
   140009901:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009904:	je     0x140009978
   140009906:	gs (bad) 
   140009908:	ins    DWORD PTR es:[rdi],dx
   140009909:	(bad)  
   14000990a:	jne    0x140009972
   14000990c:	rex
   14000990d:	rex.R push rbp
   14000990f:	(bad)  
   140009910:	and    al,0x63
   140009912:	push   0x745f7261
   140009917:	jb     0x14000997a
   140009919:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009921:	fs rex
   140009923:	rex
   140009924:	rex jae 0x14000999b
   140009927:	fs rex
   140009929:	rex
   14000992a:	rex.WB
   14000992b:	rex.RB
   14000992c:	rex.B
   14000992d:	rex.B
   14000992e:	rex pop rax
   140009930:	pop    rdx
   140009931:	add    BYTE PTR [rdi+0x313f3f00],al
   140009937:	(bad)  
   140009938:	and    al,0x62
   14000993a:	(bad)  
   14000993b:	jae    0x1400099a6
   14000993d:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009940:	je     0x1400099b4
   140009942:	gs (bad) 
   140009944:	ins    DWORD PTR es:[rdi],dx
   140009945:	(bad)  
   140009946:	jne    0x1400099ae
   140009948:	rex
   140009949:	rex.R push rbp
   14000994b:	(bad)  
   14000994c:	and    al,0x63
   14000994e:	push   0x745f7261
   140009953:	jb     0x1400099b6
   140009955:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000995d:	fs rex
   14000995f:	rex
   140009960:	rex jae 0x1400099d7
   140009963:	fs rex
   140009965:	rex push rbp
   140009967:	rex.RB
   140009968:	rex.B
   140009969:	rex.B
   14000996a:	rex pop rax
   14000996c:	pop    rdx
   14000996d:	add    dh,ah
   14000996f:	add    edi,DWORD PTR [rdi]
   140009971:	addr32 gs je 0x1400099e1
   140009975:	outs   dx,DWORD PTR ds:[rsi]
   140009976:	movsxd eax,DWORD PTR [rax+0x3f]
   140009979:	and    al,0x62
   14000997b:	(bad)  
   14000997c:	jae    0x1400099e7
   14000997e:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009981:	je     0x1400099f5
   140009983:	gs (bad) 
   140009985:	ins    DWORD PTR es:[rdi],dx
   140009986:	(bad)  
   140009987:	jne    0x1400099ef
   140009989:	rex
   14000998a:	rex.R push rbp
   14000998c:	(bad)  
   14000998d:	and    al,0x63
   14000998f:	push   0x745f7261
   140009994:	jb     0x1400099f7
   140009996:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000999e:	fs rex
   1400099a0:	rex
   1400099a1:	rex jae 0x140009a18
   1400099a4:	fs rex
   1400099a6:	rex push rcx
   1400099a8:	rex.RB
   1400099a9:	rex.X
   1400099aa:	rex.B (bad) 
   1400099ac:	push   r14
   1400099ae:	ins    BYTE PTR es:[rdi],dx
   1400099af:	outs   dx,DWORD PTR ds:[rsi]
   1400099b0:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400099b3:	xor    al,BYTE PTR gs:[rax+0x58]
   1400099b8:	pop    rdx
   1400099b9:	add    bh,bh
   1400099bb:	add    al,0x3f
   1400099bd:	jae    0x140009a2f
   1400099bf:	jne    0x140009a35
   1400099c1:	movsxd eax,DWORD PTR [rax+0x3f]
   1400099c4:	and    al,0x62
   1400099c6:	(bad)  
   1400099c7:	jae    0x140009a32
   1400099c9:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400099cc:	je     0x140009a40
   1400099ce:	gs (bad) 
   1400099d0:	ins    DWORD PTR es:[rdi],dx
   1400099d1:	(bad)  
   1400099d2:	jne    0x140009a3a
   1400099d4:	rex
   1400099d5:	rex.R push rbp
   1400099d7:	(bad)  
   1400099d8:	and    al,0x63
   1400099da:	push   0x745f7261
   1400099df:	jb     0x140009a42
   1400099e1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400099e9:	fs rex
   1400099eb:	rex
   1400099ec:	rex jae 0x140009a63
   1400099ef:	fs rex
   1400099f1:	rex push rcx
   1400099f3:	rex.RB
   1400099f4:	rex.B
   1400099f5:	rex.B
   1400099f6:	rex.W
   1400099f7:	rex.R
   1400099f8:	rex pop rdx
   1400099fa:	add    BYTE PTR [rax],al
   1400099fc:	add    al,BYTE PTR [rip+0x7570733f]        # 0x1b5710d41
   140009a02:	je     0x140009a72
   140009a04:	rex (bad) 
   140009a06:	and    al,0x62
   140009a08:	(bad)  
   140009a09:	jae    0x140009a74
   140009a0b:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009a0e:	je     0x140009a82
   140009a10:	gs (bad) 
   140009a12:	ins    DWORD PTR es:[rdi],dx
   140009a13:	(bad)  
   140009a14:	jne    0x140009a7c
   140009a16:	rex
   140009a17:	rex.R push rbp
   140009a19:	(bad)  
   140009a1a:	and    al,0x63
   140009a1c:	push   0x745f7261
   140009a21:	jb     0x140009a84
   140009a23:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009a2b:	fs rex
   140009a2d:	rex
   140009a2e:	rex jae 0x140009aa5
   140009a31:	fs rex
   140009a33:	rex push rcx
   140009a35:	rex.RB
   140009a36:	rex.B
   140009a37:	pop    r15
   140009a39:	rex.WX push rax
   140009a3b:	rex.RB
   140009a3c:	rex.X
   140009a3d:	rex.R pop rdi
   140009a3f:	rex.WX
   140009a40:	rex pop rdx
   140009a42:	add    BYTE PTR [rax],al
   140009a44:	fild   DWORD PTR [rdi+rdi*1]
   140009a47:	jae    0x140009aae
   140009a49:	je     0x140009ab2
   140009a4b:	rex (bad) 
   140009a4d:	and    al,0x62
   140009a4f:	(bad)  
   140009a50:	jae    0x140009abb
   140009a52:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009a55:	je     0x140009ac9
   140009a57:	gs (bad) 
   140009a59:	ins    DWORD PTR es:[rdi],dx
   140009a5a:	(bad)  
   140009a5b:	jne    0x140009ac3
   140009a5d:	rex
   140009a5e:	rex.R push rbp
   140009a60:	(bad)  
   140009a61:	and    al,0x63
   140009a63:	push   0x745f7261
   140009a68:	jb     0x140009acb
   140009a6a:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009a72:	fs rex
   140009a74:	rex
   140009a75:	rex jae 0x140009aec
   140009a78:	fs rex
   140009a7a:	rex
   140009a7b:	rex.WB
   140009a7c:	rex.RB
   140009a7d:	rex.B
   140009a7e:	pop    r8
   140009a80:	push   rax
   140009a81:	rex.RB
   140009a82:	rex.B
   140009a83:	xor    BYTE PTR [rax],r14b
   140009a86:	rex pop rdx
   140009a88:	add    BYTE PTR [rax],al
   140009a8a:	(bad)  
   140009a8b:	add    bh,BYTE PTR [rdi]
   140009a8d:	pop    rdi
   140009a8e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009a90:	imul   esi,DWORD PTR [rax+rax*2+0x3f],0x73616224
   140009a98:	imul   esp,DWORD PTR [rbx+0x5f],0x65727473
   140009a9f:	(bad)  
   140009aa0:	ins    DWORD PTR es:[rdi],dx
   140009aa1:	(bad)  
   140009aa2:	jne    0x140009b0a
   140009aa4:	rex
   140009aa5:	rex.R push rbp
   140009aa7:	(bad)  
   140009aa8:	and    al,0x63
   140009aaa:	push   0x745f7261
   140009aaf:	jb     0x140009b12
   140009ab1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009ab9:	fs rex
   140009abb:	rex
   140009abc:	rex jae 0x140009b33
   140009abf:	fs rex
   140009ac1:	rex
   140009ac2:	rex.WB
   140009ac3:	rex.RB
   140009ac4:	rex.B
   140009ac5:	pop    r8
   140009ac7:	pop    rax
   140009ac8:	pop    rdx
   140009ac9:	add    BYTE PTR [rbx+0x0],bh
   140009acc:	(bad)  
   140009acd:	(bad)  
   140009ace:	xor    DWORD PTR [rdi],edi
   140009ad0:	and    al,0x62
   140009ad2:	(bad)  
   140009ad3:	jae    0x140009b3e
   140009ad5:	movsxd ebx,DWORD PTR [rdi+0x69]
   140009ad8:	outs   dx,DWORD PTR ds:[rsi]
   140009ad9:	jae    0x140009b1b
   140009adb:	rex.R push rbp
   140009add:	(bad)  
   140009ade:	and    al,0x63
   140009ae0:	push   0x745f7261
   140009ae5:	jb     0x140009b48
   140009ae7:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009aef:	fs rex
   140009af1:	rex
   140009af2:	rex jae 0x140009b69
   140009af5:	fs rex
   140009af7:	rex push rbp
   140009af9:	rex.RB
   140009afa:	rex.B
   140009afb:	rex.B
   140009afc:	rex pop rax
   140009afe:	pop    rdx
   140009aff:	add    dh,ah
   140009b01:	add    al,0x3f
   140009b03:	jae    0x140009b6a
   140009b05:	je     0x140009b7a
   140009b07:	je     0x140009b6a
   140009b09:	je     0x140009b70
   140009b0b:	rex (bad) 
   140009b0d:	and    al,0x62
   140009b0f:	(bad)  
   140009b10:	jae    0x140009b7b
   140009b12:	movsxd ebx,DWORD PTR [rdi+0x69]
   140009b15:	outs   dx,DWORD PTR ds:[rsi]
   140009b16:	jae    0x140009b58
   140009b18:	rex.R push rbp
   140009b1a:	(bad)  
   140009b1b:	and    al,0x63
   140009b1d:	push   0x745f7261
   140009b22:	jb     0x140009b85
   140009b24:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009b2c:	fs rex
   140009b2e:	rex
   140009b2f:	rex jae 0x140009ba6
   140009b32:	fs rex
   140009b34:	rex push rcx
   140009b36:	rex.RB
   140009b37:	rex.B
   140009b38:	pop    r8
   140009b3a:	rex.W pop rdi
   140009b3c:	rex.WRX
   140009b3d:	rex pop rdx
   140009b3f:	add    BYTE PTR [rax],ah
   140009b41:	add    BYTE PTR [rdi],bh
   140009b43:	(bad)  
   140009b44:	xor    BYTE PTR [rdi],bh
   140009b46:	and    al,0x62
   140009b48:	(bad)  
   140009b49:	jae    0x140009bb4
   140009b4b:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009b4e:	jae    0x140009bc4
   140009b50:	jb     0x140009bb7
   140009b52:	(bad)  
   140009b53:	ins    DWORD PTR es:[rdi],dx
   140009b54:	rex
   140009b55:	rex.R push rbp
   140009b57:	(bad)  
   140009b58:	and    al,0x63
   140009b5a:	push   0x745f7261
   140009b5f:	jb     0x140009bc2
   140009b61:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009b69:	fs rex
   140009b6b:	rex
   140009b6c:	rex jae 0x140009be3
   140009b6f:	fs rex
   140009b71:	rex push rcx
   140009b73:	rex.RB
   140009b74:	rex.B
   140009b75:	rex.B
   140009b76:	rex push rax
   140009b78:	rex.RB
   140009b79:	push   r14
   140009b7b:	(bad)  
   140009b7c:	and    al,0x62
   140009b7e:	(bad)  
   140009b7f:	jae    0x140009bea
   140009b81:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009b84:	je     0x140009bf8
   140009b86:	gs (bad) 
   140009b88:	ins    DWORD PTR es:[rdi],dx
   140009b89:	(bad)  
   140009b8a:	jne    0x140009bf2
   140009b8c:	rex
   140009b8d:	rex.R push rbp
   140009b8f:	(bad)  
   140009b90:	and    al,0x63
   140009b92:	push   0x745f7261
   140009b97:	jb     0x140009bfa
   140009b99:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009ba1:	fs rex
   140009ba3:	rex
   140009ba4:	rex xor DWORD PTR [rax+0x5f],eax
   140009ba8:	rex.WRX
   140009ba9:	rex pop rdx
   140009bab:	add    BYTE PTR [rax+rax*1+0x3f313f3f],al
   140009bb2:	and    al,0x62
   140009bb4:	(bad)  
   140009bb5:	jae    0x140009c20
   140009bb7:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009bba:	jae    0x140009c30
   140009bbc:	jb     0x140009c23
   140009bbe:	(bad)  
   140009bbf:	ins    DWORD PTR es:[rdi],dx
   140009bc0:	rex
   140009bc1:	rex.R push rbp
   140009bc3:	(bad)  
   140009bc4:	and    al,0x63
   140009bc6:	push   0x745f7261
   140009bcb:	jb     0x140009c2e
   140009bcd:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009bd5:	fs rex
   140009bd7:	rex
   140009bd8:	rex jae 0x140009c4f
   140009bdb:	fs rex
   140009bdd:	rex push rbp
   140009bdf:	rex.RB
   140009be0:	rex.B
   140009be1:	rex.B
   140009be2:	rex pop rax
   140009be4:	pop    rdx
   140009be5:	add    BYTE PTR [rsi+0x2],dh
   140009be8:	(bad)  
   140009be9:	pop    rdi
   140009bea:	rex.WRXB jae 0x140009c53
   140009bed:	js     0x140009c2f
   140009bef:	(bad)  
   140009bf0:	and    al,0x62
   140009bf2:	(bad)  
   140009bf3:	jae    0x140009c5e
   140009bf5:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009bf8:	jae    0x140009c6e
   140009bfa:	jb     0x140009c61
   140009bfc:	(bad)  
   140009bfd:	ins    DWORD PTR es:[rdi],dx
   140009bfe:	rex
   140009bff:	rex.R push rbp
   140009c01:	(bad)  
   140009c02:	and    al,0x63
   140009c04:	push   0x745f7261
   140009c09:	jb     0x140009c6c
   140009c0b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009c13:	fs rex
   140009c15:	rex
   140009c16:	rex jae 0x140009c8d
   140009c19:	fs rex
   140009c1b:	rex push rcx
   140009c1d:	rex.RB
   140009c1e:	rex.B
   140009c1f:	pop    r8
   140009c21:	pop    rax
   140009c22:	pop    rdx
   140009c23:	add    BYTE PTR [rsi+0x6c663f03],cl
   140009c29:	jne    0x140009c9e
   140009c2b:	push   0x62243f40
   140009c30:	(bad)  
   140009c31:	jae    0x140009c9c
   140009c33:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009c36:	jae    0x140009cac
   140009c38:	jb     0x140009c9f
   140009c3a:	(bad)  
   140009c3b:	ins    DWORD PTR es:[rdi],dx
   140009c3c:	rex
   140009c3d:	rex.R push rbp
   140009c3f:	(bad)  
   140009c40:	and    al,0x63
   140009c42:	push   0x745f7261
   140009c47:	jb     0x140009caa
   140009c49:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009c51:	fs rex
   140009c53:	rex
   140009c54:	rex jae 0x140009ccb
   140009c57:	fs rex
   140009c59:	rex push rcx
   140009c5b:	rex.RB
   140009c5c:	rex.B
   140009c5d:	rex.B
   140009c5e:	rex.B
   140009c5f:	rex.RB
   140009c60:	push   r14
   140009c62:	xor    DWORD PTR [rdx],esi
   140009c64:	rex pop rax
   140009c66:	pop    rdx
   140009c67:	add    ch,al
   140009c69:	add    DWORD PTR [rdi],edi
   140009c6b:	pop    rdi
   140009c6c:	rex.RX imul r13d,DWORD PTR [rdi+0x70],0x73406e65
   140009c74:	je     0x140009cda
   140009c76:	rex
   140009c77:	rex pop rcx
   140009c79:	push   r8
   140009c7b:	rex.RB
   140009c7c:	push   r13
   140009c7e:	pop    rdi
   140009c7f:	imul   ebp,DWORD PTR [rdi+0x62],0x40406675
   140009c86:	push   rax
   140009c87:	rex.RB
   140009c88:	rex.X pop rdi
   140009c8a:	push   rdi
   140009c8b:	rex.W
   140009c8c:	rex.W
   140009c8d:	rex pop rdx
   140009c8f:	add    dh,dh
   140009c91:	add    al,0x3f
   140009c93:	jae    0x140009cfd
   140009c95:	outs   dx,DWORD PTR ds:[rsi]
   140009c96:	ja     0x140009d05
   140009c98:	(bad)  
   140009c99:	outs   dx,BYTE PTR ds:[rsi]
   140009c9a:	jns    0x140009cff
   140009c9c:	rex (bad) 
   140009c9e:	and    al,0x62
   140009ca0:	(bad)  
   140009ca1:	jae    0x140009d0c
   140009ca3:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009ca6:	je     0x140009d1a
   140009ca8:	gs (bad) 
   140009caa:	ins    DWORD PTR es:[rdi],dx
   140009cab:	(bad)  
   140009cac:	jne    0x140009d14
   140009cae:	rex
   140009caf:	rex.R push rbp
   140009cb1:	(bad)  
   140009cb2:	and    al,0x63
   140009cb4:	push   0x745f7261
   140009cb9:	jb     0x140009d1c
   140009cbb:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009cc3:	fs rex
   140009cc5:	rex
   140009cc6:	rex jae 0x140009d3d
   140009cc9:	fs rex
   140009ccb:	rex
   140009ccc:	rex.WRB
   140009ccd:	rex.RB
   140009cce:	rex.B
   140009ccf:	pop    r15
   140009cd1:	rex.WX pop rax
   140009cd3:	pop    rdx
   140009cd4:	add    BYTE PTR [rax],al
   140009cd6:	imul   eax,DWORD PTR [rip+0x6773783f],0x65        # 0x1a774151c
   140009cdd:	je     0x140009d4d
   140009cdf:	rex (bad) 
   140009ce1:	and    al,0x62
   140009ce3:	(bad)  
   140009ce4:	jae    0x140009d4f
   140009ce6:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009ce9:	je     0x140009d5d
   140009ceb:	gs (bad) 
   140009ced:	ins    DWORD PTR es:[rdi],dx
   140009cee:	(bad)  
   140009cef:	jne    0x140009d57
   140009cf1:	rex
   140009cf2:	rex.R push rbp
   140009cf4:	(bad)  
   140009cf5:	and    al,0x63
   140009cf7:	push   0x745f7261
   140009cfc:	jb     0x140009d5f
   140009cfe:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009d06:	fs rex
   140009d08:	rex
   140009d09:	rex jae 0x140009d80
   140009d0c:	fs rex
   140009d0e:	rex
   140009d0f:	rex.WRB
   140009d10:	rex.RB
   140009d11:	rex.B
   140009d12:	pop    r15
   140009d14:	rex.WX push rax
   140009d16:	rex.RB
   140009d17:	rex.B
   140009d18:	rex.R pop rdi
   140009d1a:	rex.WX
   140009d1b:	rex pop rdx
   140009d1d:	add    BYTE PTR [rsi+0x5],ch
   140009d20:	(bad)  
   140009d21:	js     0x140009d96
   140009d23:	jo     0x140009d9a
   140009d25:	je     0x140009d95
   140009d27:	rex (bad) 
   140009d29:	and    al,0x62
   140009d2b:	(bad)  
   140009d2c:	jae    0x140009d97
   140009d2e:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009d31:	je     0x140009da5
   140009d33:	gs (bad) 
   140009d35:	ins    DWORD PTR es:[rdi],dx
   140009d36:	(bad)  
   140009d37:	jne    0x140009d9f
   140009d39:	rex
   140009d3a:	rex.R push rbp
   140009d3c:	(bad)  
   140009d3d:	and    al,0x63
   140009d3f:	push   0x745f7261
   140009d44:	jb     0x140009da7
   140009d46:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009d4e:	fs rex
   140009d50:	rex
   140009d51:	rex jae 0x140009dc8
   140009d54:	fs rex
   140009d56:	rex
   140009d57:	rex.WRB
   140009d58:	rex.RB
   140009d59:	rex.B
   140009d5a:	pop    r15
   140009d5c:	rex.WX push rax
   140009d5e:	rex.RB
   140009d5f:	rex.X
   140009d60:	rex.R pop rdi
   140009d62:	rex.WX
   140009d63:	rex pop rdx
   140009d65:	add    BYTE PTR [rdi+0x425f3f01],ah
   140009d6b:	rex.B
   140009d6c:	rex.R
   140009d6d:	rex.WRXB
   140009d6e:	rex.RX
   140009d6f:	rex.RX
   140009d70:	rex jae 0x140009de7
   140009d73:	fs rex
   140009d75:	rex xor ebx,DWORD PTR [rdi+0x4a]
   140009d79:	rex.X add BYTE PTR [rax],al
   140009d7c:	out    dx,eax
   140009d7d:	add    edi,DWORD PTR [rdi]
   140009d7f:	imul   esp,DWORD PTR [rax+rax*2+0x3f],0x646f6324
   140009d87:	movsxd esi,DWORD PTR gs:[rsi+0x74]
   140009d8b:	rex
   140009d8c:	rex.R
   140009d8d:	rex.R
   140009d8e:	rex.W
   140009d8f:	rex jae 0x140009e06
   140009d92:	fs rex
   140009d94:	xor    dl,BYTE PTR [rsi+0x30]
   140009d98:	ins    BYTE PTR es:[rdi],dx
   140009d99:	outs   dx,DWORD PTR ds:[rsi]
   140009d9a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009d9d:	xor    al,BYTE PTR gs:[rax+0x41]
   140009da2:	add    BYTE PTR [rax],al
   140009da4:	pop    rcx
   140009da5:	add    DWORD PTR [rdi],edi
   140009da7:	(bad)  
   140009da8:	pop    rdi
   140009da9:	(bad)  
   140009daa:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   140009db1:	gs rex jae 0x140009e29
   140009db5:	fs rex
   140009db7:	rex
   140009db8:	ss rex.X
   140009dba:	add    BYTE PTR [rdx],sil
   140009dbd:	add    DWORD PTR [rdi],edi
   140009dbf:	(bad)  
   140009dc0:	pop    rdi
   140009dc1:	(bad)  
   140009dc2:	(bad)  
   140009dc3:	and    al,0x62
   140009dc5:	(bad)  
   140009dc6:	jae    0x140009e31
   140009dc8:	movsxd ebx,DWORD PTR [rdi+0x69]
   140009dcb:	outs   dx,DWORD PTR ds:[rsi]
   140009dcc:	jae    0x140009e0e
   140009dce:	rex.R push rbp
   140009dd0:	(bad)  
   140009dd1:	and    al,0x63
   140009dd3:	push   0x745f7261
   140009dd8:	jb     0x140009e3b
   140009dda:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009de2:	fs rex
   140009de4:	rex
   140009de5:	rex jae 0x140009e5c
   140009de8:	fs rex
   140009dea:	rex
   140009deb:	ss rex.X
   140009ded:	add    BYTE PTR [rax],al
   140009df0:	cmp    eax,DWORD PTR [rcx]
   140009df2:	(bad)  
   140009df3:	(bad)  
   140009df4:	pop    rdi
   140009df5:	(bad)  
   140009df6:	(bad)  
   140009df7:	and    al,0x62
   140009df9:	(bad)  
   140009dfa:	jae    0x140009e65
   140009dfc:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009dff:	jae    0x140009e75
   140009e01:	jb     0x140009e68
   140009e03:	(bad)  
   140009e04:	ins    DWORD PTR es:[rdi],dx
   140009e05:	rex
   140009e06:	rex.R push rbp
   140009e08:	(bad)  
   140009e09:	and    al,0x63
   140009e0b:	push   0x745f7261
   140009e10:	jb     0x140009e73
   140009e12:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009e1a:	fs rex
   140009e1c:	rex
   140009e1d:	rex jae 0x140009e94
   140009e20:	fs rex
   140009e22:	rex
   140009e23:	ss rex.X
   140009e25:	add    BYTE PTR [rax],al
   140009e28:	pop    rcx
   140009e29:	add    eax,0x6469773f
   140009e2e:	outs   dx,BYTE PTR gs:[rsi]
   140009e30:	rex (bad) 
   140009e32:	and    al,0x62
   140009e34:	(bad)  
   140009e35:	jae    0x140009ea0
   140009e37:	movsxd ebx,DWORD PTR [rdi+0x69]
   140009e3a:	outs   dx,DWORD PTR ds:[rsi]
   140009e3b:	jae    0x140009e7d
   140009e3d:	rex.R push rbp
   140009e3f:	(bad)  
   140009e40:	and    al,0x63
   140009e42:	push   0x745f7261
   140009e47:	jb     0x140009eaa
   140009e49:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009e51:	fs rex
   140009e53:	rex
   140009e54:	rex jae 0x140009ecb
   140009e57:	fs rex
   140009e59:	rex push rcx
   140009e5b:	rex.RB
   140009e5c:	rex.X
   140009e5d:	rex.B
   140009e5e:	rex.R
   140009e5f:	rex.R
   140009e60:	rex pop rdx
   140009e62:	add    BYTE PTR [rax],al
   140009e64:	add    eax,0x363f3f01
   140009e69:	(bad)  
   140009e6a:	and    al,0x62
   140009e6c:	(bad)  
   140009e6d:	jae    0x140009ed8
   140009e6f:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009e72:	jae    0x140009ee8
   140009e74:	jb     0x140009edb
   140009e76:	(bad)  
   140009e77:	ins    DWORD PTR es:[rdi],dx
   140009e78:	rex
   140009e79:	rex.R push rbp
   140009e7b:	(bad)  
   140009e7c:	and    al,0x63
   140009e7e:	push   0x745f7261
   140009e83:	jb     0x140009ee6
   140009e85:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009e8d:	fs rex
   140009e8f:	rex
   140009e90:	rex jae 0x140009f07
   140009e93:	fs rex
   140009e95:	rex push rcx
   140009e97:	rex.RB
   140009e98:	rex.B
   140009e99:	rex.B
   140009e9a:	rex.B
   140009e9b:	rex.RB
   140009e9c:	push   r14
   140009e9e:	xor    BYTE PTR [rcx],dh
   140009ea0:	rex push rax
   140009ea2:	ss rex.B
   140009ea4:	rex.B
   140009ea5:	rex.RB
   140009ea6:	push   r14
   140009ea8:	xor    BYTE PTR [rcx],dh
   140009eaa:	rex
   140009eab:	rex.B
   140009eac:	rex.RB
   140009ead:	push   r14
   140009eaf:	xor    BYTE PTR [rcx],dh
   140009eb1:	rex
   140009eb2:	rex pop rdx
   140009eb4:	rex pop rdx
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	(bad)  
   140009eb9:	add    al,0x3f
   140009ebb:	jo     0x140009f32
   140009ebd:	je     0x140009eff
   140009ebf:	(bad)  
   140009ec0:	and    al,0x62
   140009ec2:	(bad)  
   140009ec3:	jae    0x140009f2e
   140009ec5:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009ec8:	jae    0x140009f3e
   140009eca:	jb     0x140009f31
   140009ecc:	(bad)  
   140009ecd:	ins    DWORD PTR es:[rdi],dx
   140009ece:	rex
   140009ecf:	rex.R push rbp
   140009ed1:	(bad)  
   140009ed2:	and    al,0x63
   140009ed4:	push   0x745f7261
   140009ed9:	jb     0x140009f3c
   140009edb:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009ee3:	fs rex
   140009ee5:	rex
   140009ee6:	rex jae 0x140009f5d
   140009ee9:	fs rex
   140009eeb:	rex push rcx
   140009eed:	rex.RB
   140009eee:	rex.B
   140009eef:	rex.B
   140009ef0:	rex.B
   140009ef1:	rex.RB
   140009ef2:	push   r14
   140009ef4:	xor    DWORD PTR [rdx],esi
   140009ef6:	rex
   140009ef7:	rex.R
   140009ef8:	rex pop rdx
   140009efa:	add    BYTE PTR [rax],al
   140009efc:	ret    
   140009efd:	add    DWORD PTR [rdi],edi
   140009eff:	pop    rdi
   140009f00:	rex.RX imul r13d,DWORD PTR [rdi+0x70],0x73406e65
   140009f08:	je     0x140009f6e
   140009f0a:	rex
   140009f0b:	rex pop rcx
   140009f0d:	push   r8
   140009f0f:	rex.RB
   140009f10:	push   r13
   140009f12:	pop    rdi
   140009f13:	imul   ebp,DWORD PTR [rdi+0x62],0x40406675
   140009f1a:	push   rax
   140009f1b:	rex.RB
   140009f1c:	rex.X
   140009f1d:	rex.R
   140009f1e:	rex.W
   140009f1f:	rex.W
   140009f20:	rex pop rdx
   140009f22:	add    BYTE PTR [rax],al
   140009f24:	(bad)  
   140009f25:	add    bh,BYTE PTR [rdi]
   140009f27:	movsxd esp,DWORD PTR [rbp+0x72]
   140009f2a:	jb     0x140009f6c
   140009f2c:	jae    0x140009fa2
   140009f2e:	fs rex
   140009f30:	rex xor edx,DWORD PTR [rsi+0x3f]
   140009f34:	and    al,0x62
   140009f36:	(bad)  
   140009f37:	jae    0x140009fa2
   140009f39:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140009f3c:	jae    0x140009fb2
   140009f3e:	jb     0x140009fa5
   140009f40:	(bad)  
   140009f41:	ins    DWORD PTR es:[rdi],dx
   140009f42:	rex
   140009f43:	rex.R push rbp
   140009f45:	(bad)  
   140009f46:	and    al,0x63
   140009f48:	push   0x745f7261
   140009f4d:	jb     0x140009fb0
   140009f4f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009f57:	fs rex
   140009f59:	rex
   140009f5a:	rex xor DWORD PTR [rax+0x41],eax
   140009f5e:	add    BYTE PTR [rax],al
   140009f60:	rex.WRB push r11
   140009f62:	push   rsi
   140009f63:	rex.XB push r8
   140009f65:	xor    DWORD PTR [rdx],esi
   140009f67:	xor    BYTE PTR [rsi],ch
   140009f69:	fs ins BYTE PTR es:[rdi],dx
   140009f6b:	ins    BYTE PTR es:[rdi],dx
   140009f6c:	add    BYTE PTR [rax],al
   140009f6e:	(bad)  
   140009f6f:	add    al,0x5f
   140009f71:	jo     0x140009fe8
   140009f73:	jb     0x140009fda
   140009f75:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009f78:	ins    BYTE PTR es:[rdi],dx
   140009f79:	add    BYTE PTR [rax+0x0],dh
   140009f7c:	(bad)  
   140009f7d:	(bad)  
   140009f7e:	xor    al,BYTE PTR [rax+0x59]
   140009f81:	push   r8
   140009f83:	rex.RB
   140009f84:	pop    r8
   140009f86:	pop    rdi
   140009f87:	rex.WXB
   140009f88:	rex pop rdx
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	jb     0x140009f8e
   140009f8e:	(bad)  
   140009f8f:	(bad)  
   140009f90:	xor    eax,DWORD PTR [rax+0x59]
   140009f93:	pop    r8
   140009f95:	push   rax
   140009f96:	rex.RB
   140009f97:	pop    r8
   140009f99:	rex pop rdx
   140009f9b:	add    dl,bl
   140009f9d:	add    bl,BYTE PTR [rdi+0x68]
   140009fa0:	jns    0x14000a012
   140009fa2:	outs   dx,DWORD PTR ds:[rsi]
   140009fa3:	je     0x140009fa5
   140009fa5:	add    BYTE PTR [rdx],ah
   140009fa7:	(bad)  
   140009fa8:	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
   140009fad:	add    BYTE PTR gs:[rax],al
   140009fb0:	xor    eax,DWORD PTR [rsi]
   140009fb2:	data16 data16 ins BYTE PTR es:[rdi],dx
   140009fb5:	jne    0x14000a02a
   140009fb7:	push   0x6340000
   140009fbc:	data16 addr32 gs je 0x14000a024
   140009fc1:	add    BYTE PTR [rip+0x65676606],dh        # 0x1a56805cd
   140009fc7:	je     0x14000a039
   140009fc9:	outs   dx,DWORD PTR ds:[rsi]
   140009fca:	jae    0x140009fcc
   140009fcc:	rex.WX (bad) 
   140009fce:	data16 jo 0x14000a046
   140009fd1:	je     0x14000a036
   140009fd3:	add    BYTE PTR [rdi+0x6],dl
   140009fd6:	data16 jae 0x14000a03e
   140009fd9:	je     0x14000a04b
   140009fdb:	outs   dx,DWORD PTR ds:[rsi]
   140009fdc:	jae    0x140009fde
   140009fde:	lea    eax,[rdx]
   140009fe0:	pop    rdi
   140009fe1:	data16 jae 0x14000a049
   140009fe4:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
   140009fe9:	add    BYTE PTR [rbx+0x6],bl
   140009fec:	data16 ja 0x14000a061
   140009fef:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x7306f500
   140009ff7:	gs je  0x14000a070
   140009ffa:	(bad)  
   140009ffb:	jne    0x14000a063
   140009ffd:	add    BYTE PTR [rbx],bh
   140009fff:	(bad)  
   14000a000:	jne    0x14000a070
   14000a002:	addr32 gs je 0x14000a069
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	pop    rsp
   14000a009:	add    ebx,DWORD PTR [rdi+0x6c]
   14000a00c:	outs   dx,DWORD PTR ds:[rsi]
   14000a00d:	movsxd ebp,DWORD PTR [rbx+0x5f]
   14000a010:	imul   bp,WORD PTR [rbp+riz*2+0x0],0xc800
   14000a017:	add    al,0x5f
   14000a019:	jne    0x14000a089
   14000a01b:	ins    BYTE PTR es:[rdi],dx
   14000a01c:	outs   dx,DWORD PTR ds:[rsi]
   14000a01d:	movsxd ebp,DWORD PTR [rbx+0x5f]
   14000a020:	imul   bp,WORD PTR [rbp+riz*2+0x0],0xb600
   14000a027:	(bad)  
   14000a028:	ins    DWORD PTR es:[rdi],dx
   14000a029:	gs ins DWORD PTR es:[rdi],dx
   14000a02b:	movsxd esi,DWORD PTR [rax+0x79]
   14000a02e:	pop    rdi
   14000a02f:	jae    0x14000a031
   14000a031:	add    BYTE PTR [rdi+0x6d656d06],dh
   14000a037:	ins    DWORD PTR es:[rdi],dx
   14000a038:	outs   dx,DWORD PTR ds:[rsi]
   14000a039:	jbe    0x14000a0a0
   14000a03b:	add    BYTE PTR [rip+0x303f3f00],bl        # 0x1703fdf41
   14000a041:	(bad)
   14000a046:	(bad)  
   14000a047:	jae    0x14000a0bd
   14000a049:	rex jae 0x14000a0c0
   14000a04c:	fs rex
   14000a04e:	rex push rcx
   14000a050:	rex.RB
   14000a051:	rex.B
   14000a052:	rex.B
   14000a053:	rex push rax
   14000a055:	rex.RB
   14000a056:	rex.X
   14000a057:	rex.R
   14000a058:	rex pop rdx
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	sbb    al,0x0
   14000a05e:	(bad)  
   14000a05f:	(bad)  
   14000a060:	xor    BYTE PTR [rdx+0x61],ah
   14000a063:	fs pop rdi
   14000a065:	movsxd esp,DWORD PTR [rcx+0x73]
   14000a068:	je     0x14000a0aa
   14000a06a:	jae    0x14000a0e0
   14000a06c:	fs rex
   14000a06e:	rex push rcx
   14000a070:	rex.RB
   14000a071:	rex.B
   14000a072:	rex.B
   14000a073:	rex
   14000a074:	rex.B
   14000a075:	rex.RB
   14000a076:	rex.X push rsi
   14000a078:	xor    BYTE PTR [rcx],dh
   14000a07a:	rex
   14000a07b:	rex pop rdx
   14000a07d:	add    BYTE PTR [rax+rax*1],ch
   14000a080:	(bad)  
   14000a081:	(bad)  
   14000a082:	xor    BYTE PTR [rbp+0x78],ah
   14000a085:	movsxd esp,DWORD PTR [rbp+0x70]
   14000a088:	je     0x14000a0f3
   14000a08a:	outs   dx,DWORD PTR ds:[rsi]
   14000a08b:	outs   dx,BYTE PTR ds:[rsi]
   14000a08c:	rex jae 0x14000a103
   14000a08f:	fs rex
   14000a091:	rex push rcx
   14000a093:	rex.RB
   14000a094:	rex.B
   14000a095:	rex.B
   14000a096:	rex
   14000a097:	rex.B
   14000a098:	rex.RB
   14000a099:	rex.X push rsi
   14000a09b:	xor    BYTE PTR [rcx],dh
   14000a09d:	rex
   14000a09e:	rex pop rdx
   14000a0a0:	add    BYTE PTR [rax],al
   14000a0a2:	data16 add BYTE PTR [rdi],bh
   14000a0a5:	(bad)  
   14000a0a6:	xor    DWORD PTR [rdx+0x61],esp
   14000a0a9:	fs pop rdi
   14000a0ab:	movsxd esp,DWORD PTR [rcx+0x73]
   14000a0ae:	je     0x14000a0f0
   14000a0b0:	jae    0x14000a126
   14000a0b2:	fs rex
   14000a0b4:	rex push rbp
   14000a0b6:	rex.RB
   14000a0b7:	rex.B
   14000a0b8:	rex.B
   14000a0b9:	rex pop rax
   14000a0bb:	pop    rdx
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    DWORD PTR [r15+0x43],r11d
   14000a0c2:	js     0x14000a13c
   14000a0c4:	push   rsp
   14000a0c5:	push   0x45776f72
   14000a0ca:	js     0x14000a12f
   14000a0cc:	gs jo  0x14000a143
   14000a0cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14000a0d6:	pop    rdi
   14000a0d7:	pop    rdi
   14000a0d8:	rex.XB js 0x14000a153
   14000a0db:	rex.RX jb 0x14000a13f
   14000a0de:	ins    DWORD PTR es:[rdi],dx
   14000a0df:	gs rex.W (bad) 
   14000a0e2:	outs   dx,BYTE PTR ds:[rsi]
   14000a0e3:	fs ins BYTE PTR es:[rdi],dx
   14000a0e5:	gs jb  0x14000a11b
   14000a0e8:	add    BYTE PTR [rax],al
   14000a0ea:	mov    ch,0x6
   14000a0ec:	ins    DWORD PTR es:[rdi],dx
   14000a0ed:	gs ins DWORD PTR es:[rdi],dx
   14000a0ef:	movsxd esi,DWORD PTR [rax+0x79]
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	mov    ecx,0x6d656d06
   14000a0f9:	jae    0x14000a160
   14000a0fb:	je     0x14000a0fd
   14000a0fd:	add    BYTE PTR [rsi+rax*1+0x636d656d],dh
   14000a104:	ins    DWORD PTR es:[rdi],dx
   14000a105:	jo     0x14000a107
   14000a107:	add    BYTE PTR [rbp+0x53],cl
   14000a10a:	push   rsi
   14000a10b:	rex.XB push r10
   14000a10d:	xor    DWORD PTR [rdx],esi
   14000a10f:	xor    BYTE PTR [rsi],ch
   14000a111:	fs ins BYTE PTR es:[rdi],dx
   14000a113:	ins    BYTE PTR es:[rdi],dx
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	pop    rbx
   14000a117:	add    ebx,DWORD PTR [rdi+0x6c]
   14000a11a:	outs   dx,DWORD PTR ds:[rsi]
   14000a11b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a11e:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14000a125:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a128:	or     DWORD PTR [rdx],eax
   14000a12a:	pop    rdi
   14000a12b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a12e:	ins    BYTE PTR es:[rdi],dx
   14000a12f:	outs   dx,DWORD PTR ds:[rsi]
   14000a130:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000a133:	jb     0x14000a1a9
   14000a135:	add    BYTE PTR [rdi+0x645f5f01],bl
   14000a13b:	ins    BYTE PTR es:[rdi],dx
   14000a13c:	ins    BYTE PTR es:[rdi],dx
   14000a13d:	outs   dx,DWORD PTR ds:[rsi]
   14000a13e:	outs   dx,BYTE PTR ds:[rsi]
   14000a13f:	gs js  0x14000a1ab
   14000a142:	je     0x14000a144
   14000a144:	pop    rsp
   14000a145:	add    DWORD PTR [rdi+0x5f],ebx
   14000a148:	rex.XB pop r15
   14000a14a:	jae    0x14000a1bc
   14000a14c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000a150:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000a157:	ins    BYTE PTR es:[rdi],dx
   14000a158:	gs jb  0x14000a15b
   14000a15b:	add    BYTE PTR [rdx],al
   14000a15d:	add    al,0x5f
   14000a15f:	outs   dx,DWORD PTR ds:[rsi]
   14000a160:	outs   dx,BYTE PTR ds:[rsi]
   14000a161:	gs js  0x14000a1cd
   14000a164:	je     0x14000a166
   14000a166:	pop    rax
   14000a167:	add    DWORD PTR [rdi+0x58],ebx
   14000a16a:	movsxd esi,DWORD PTR [rax+0x74]
   14000a16d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1f20072
   14000a176:	pop    rdi
   14000a177:	(bad)  
   14000a178:	ins    DWORD PTR es:[rdi],dx
   14000a179:	jae    0x14000a1e2
   14000a17b:	pop    rdi
   14000a17c:	gs js  0x14000a1e8
   14000a17f:	je     0x14000a181
   14000a181:	add    BYTE PTR [rdi+0x675f5f01],ah
   14000a187:	gs je  0x14000a1f7
   14000a18a:	(bad)  
   14000a18b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000a192:	(bad)  
   14000a193:	add    DWORD PTR [rdi+0x5f],ebx
   14000a196:	jae    0x14000a1fd
   14000a198:	je     0x14000a1f9
   14000a19a:	(bad)  
   14000a19b:	jo     0x14000a20d
   14000a19d:	pop    rdi
   14000a19e:	je     0x14000a219
   14000a1a0:	jo     0x14000a207
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	sbb    BYTE PTR [rsi],al
   14000a1a6:	gs js  0x14000a212
   14000a1a9:	je     0x14000a1ab
   14000a1ab:	add    BYTE PTR [rax+0x2],bl
   14000a1ae:	pop    rdi
   14000a1af:	gs js  0x14000a21b
   14000a1b2:	je     0x14000a1b4
   14000a1b4:	or     al,BYTE PTR [rdx]
   14000a1b6:	pop    rdi
   14000a1b7:	movsxd esp,DWORD PTR [rbp+0x78]
   14000a1ba:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   14000a1c2:	outs   dx,DWORD PTR ds:[rsi]
   14000a1c3:	outs   dx,BYTE PTR ds:[rsi]
   14000a1c4:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000a1ca:	gs (bad) 
   14000a1cc:	fs ins BYTE PTR es:[rdi],dx
   14000a1ce:	outs   dx,DWORD PTR ds:[rsi]
   14000a1cf:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a1d2:	gs add al,dl
   14000a1d5:	add    DWORD PTR [rdi+0x5f],ebx
   14000a1d8:	jae    0x14000a23f
   14000a1da:	je     0x14000a251
   14000a1dc:	jae    0x14000a243
   14000a1de:	jb     0x14000a24d
   14000a1e0:	(bad)  
   14000a1e1:	je     0x14000a24b
   14000a1e3:	gs jb  0x14000a258
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	loop   0x14000a1ec
   14000a1ea:	pop    rdi
   14000a1eb:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000a1f2:	ins    DWORD PTR es:[rdi],dx
   14000a1f3:	pop    rdi
   14000a1f4:	gs add cl,ah
   14000a1f7:	add    bl,BYTE PTR [rdi+0x69]
   14000a1fa:	outs   dx,BYTE PTR ds:[rsi]
   14000a1fb:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xa8006d72
   14000a203:	add    DWORD PTR [rdi+0x5f],ebx
   14000a206:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
   14000a20d:	add    BYTE PTR [rax+0x2],bh
   14000a210:	pop    rdi
   14000a211:	ins    WORD PTR es:[rdi],dx
   14000a213:	outs   dx,DWORD PTR ds:[rsi]
   14000a214:	fs add BYTE PTR gs:[rax],al
   14000a218:	sbb    DWORD PTR [rdx],eax
   14000a21a:	pop    rdi
   14000a21b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a21e:	ins    DWORD PTR es:[rdi],dx
   14000a21f:	outs   dx,DWORD PTR ds:[rsi]
   14000a220:	fs add BYTE PTR gs:[rax],al
   14000a224:	xor    eax,DWORD PTR [rcx]
   14000a226:	(bad)  
   14000a227:	je     0x14000a28e
   14000a229:	jb     0x14000a298
   14000a22b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000a232:	pop    rcx
   14000a233:	pop    r8
   14000a235:	pop    rax
   14000a236:	pop    rdx
   14000a237:	add    BYTE PTR [rbx],bl
   14000a239:	add    DWORD PTR [rdi],edi
   14000a23b:	pop    rdi
   14000a23c:	je     0x14000a2b7
   14000a23e:	jo     0x14000a2a5
   14000a240:	pop    rdi
   14000a241:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14000a248:	outs   dx,DWORD PTR ds:[rsi]
   14000a249:	jb     0x14000a2aa
   14000a24b:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000a252:	ins    BYTE PTR es:[rdi],dx
   14000a253:	pop    rdi
   14000a254:	ins    DWORD PTR es:[rdi],dx
   14000a255:	gs je  0x14000a2c0
   14000a258:	outs   dx,DWORD PTR ds:[rsi]
   14000a259:	fs rex je 0x14000a2d6
   14000a25d:	jo     0x14000a2c4
   14000a25f:	pop    rdi
   14000a260:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14000a267:	rex.RB
   14000a268:	rex.B
   14000a269:	pop    r8
   14000a26b:	pop    rax
   14000a26c:	pop    rdx
   14000a26d:	add    BYTE PTR [rcx+0x635f5f01],bl
   14000a273:	jb     0x14000a2e9
   14000a275:	push   rbx
   14000a276:	gs je  0x14000a2ce
   14000a279:	outs   dx,BYTE PTR ds:[rsi]
   14000a27a:	push   0x6c646e61
   14000a27f:	gs fs rex.RB js 0x14000a2e7
   14000a284:	gs jo  0x14000a2fb
   14000a287:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a28e:	gs jb  0x14000a291
   14000a291:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36ee798
   14000a297:	outs   dx,DWORD PTR ds:[rsi]
   14000a298:	fs gs push rax
   14000a29b:	outs   dx,DWORD PTR ds:[rsi]
   14000a29c:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14000a2a3:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000a2a7:	outs   dx,DWORD PTR ds:[rsi]
   14000a2a8:	fs gs push rax
   14000a2ab:	outs   dx,DWORD PTR ds:[rsi]
   14000a2ac:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   14000a2b3:	add    al,0x51
   14000a2b5:	jne    0x14000a31c
   14000a2b7:	jb     0x14000a332
   14000a2b9:	push   rax
   14000a2ba:	gs jb  0x14000a323
   14000a2bd:	outs   dx,DWORD PTR ds:[rsi]
   14000a2be:	jb     0x14000a32d
   14000a2c0:	(bad)  
   14000a2c1:	outs   dx,BYTE PTR ds:[rsi]
   14000a2c2:	movsxd esp,DWORD PTR [rbp+0x43]
   14000a2c5:	outs   dx,DWORD PTR ds:[rsi]
   14000a2c6:	jne    0x14000a336
   14000a2c8:	je     0x14000a32f
   14000a2ca:	jb     0x14000a2cc
   14000a2cc:	adc    BYTE PTR [rdx],al
   14000a2ce:	rex.RXB
   14000a2cf:	gs je  0x14000a315
   14000a2d2:	jne    0x14000a346
   14000a2d4:	jb     0x14000a33b
   14000a2d6:	outs   dx,BYTE PTR ds:[rsi]
   14000a2d7:	je     0x14000a329
   14000a2d9:	jb     0x14000a34a
   14000a2db:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a2de:	jae    0x14000a329
   14000a2e0:	add    BYTE PTR fs:[rdx+rax*1],dl
   14000a2e4:	rex.RXB
   14000a2e5:	gs je  0x14000a32b
   14000a2e8:	jne    0x14000a35c
   14000a2ea:	jb     0x14000a351
   14000a2ec:	outs   dx,BYTE PTR ds:[rsi]
   14000a2ed:	je     0x14000a343
   14000a2ef:	push   0x64616572
   14000a2f4:	rex.WB
   14000a2f5:	add    BYTE PTR fs:[rax],al
   14000a2f8:	fld    QWORD PTR [rdx]
   14000a2fa:	rex.RXB
   14000a2fb:	gs je  0x14000a351
   14000a2fe:	jns    0x14000a373
   14000a300:	je     0x14000a367
   14000a302:	ins    DWORD PTR es:[rdi],dx
   14000a303:	push   rsp
   14000a304:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000a30b:	ins    BYTE PTR es:[rdi],dx
   14000a30c:	gs push rsp
   14000a30e:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14000a315:	rex.WRX
   14000a316:	rex.RB
   14000a317:	xor    r14,QWORD PTR [rdx]
   14000a31a:	cs fs ins BYTE PTR es:[rdi],dx
   14000a31d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

000000014000b000 <.data>:
   14000b000:	pop    rax
   14000b001:	jbe    0x14000b003
   14000b003:	rex add DWORD PTR [rax],eax
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	test   al,0x76
   14000b00a:	add    BYTE PTR [rax+0x1],al
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rax],cl
   14000b011:	ja     0x14000b013
   14000b013:	rex add DWORD PTR [rax],eax
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	cmp    BYTE PTR [rcx+0x0],0x40
   14000b01c:	add    DWORD PTR [rax],eax
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	nop
   14000b021:	jns    0x14000b023
   14000b023:	rex add DWORD PTR [rax],eax
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	movabs al,ds:0x7500000001400079
   14000b031:	cwde   
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	add    DWORD PTR [rax],eax
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	(bad)  
   14000b039:	(bad)  
   14000b03a:	(bad)  
   14000b03b:	(bad)  
   14000b03c:	(bad)  
   14000b03d:	(bad)  
   14000b03e:	(bad)  
   14000b03f:	push   QWORD PTR [rdx]
   14000b041:	movabs ds:0x5dcd00002b992ddf,al
   14000b04a:	and    dl,dl
   14000b04c:	data16 (bad) 
   14000b04e:	(bad)  
   14000b04f:	dec    eax
   14000b051:	jns    0x14000b053
   14000b053:	rex add DWORD PTR [rax],eax
	...
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	cs (bad) 
   14000b062:	push   r14
   14000b064:	gs js  0x14000b0ca
   14000b067:	gs jo  0x14000b0de
   14000b06a:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000b071:	rex
   14000b072:	add    BYTE PTR [rax],al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    al,cl
   14000b079:	jns    0x14000b07b
   14000b07b:	rex add DWORD PTR [rax],eax
	...
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	cs (bad) 
   14000b08a:	push   r14
   14000b08c:	(bad)
   14000b091:	(bad)  
   14000b092:	jae    0x14000b108
   14000b094:	rex jae 0x14000b10b
   14000b097:	fs rex
   14000b099:	add    BYTE PTR [rax],al
   14000b09c:	add    BYTE PTR [rax],al
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	enter  0x79,0x40
   14000b0a4:	add    DWORD PTR [rax],eax
	...
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	cs (bad) 
   14000b0b2:	push   r14
   14000b0b4:	(bad)  
   14000b0b5:	and    al,0x62
   14000b0b7:	(bad)  
   14000b0b8:	jae    0x14000b123
   14000b0ba:	movsxd ebx,DWORD PTR [rdi+0x66]
   14000b0bd:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x44406675
   14000b0c5:	push   rbp
   14000b0c6:	(bad)  
   14000b0c7:	and    al,0x63
   14000b0c9:	push   0x745f7261
   14000b0ce:	jb     0x14000b131
   14000b0d0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b0d8:	fs rex
   14000b0da:	rex
   14000b0db:	rex jae 0x14000b152
   14000b0de:	fs rex
   14000b0e0:	add    BYTE PTR [rax],al
	...
   14000b0ef:	add    al,cl
   14000b0f1:	jns    0x14000b0f3
   14000b0f3:	rex add DWORD PTR [rax],eax
	...
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	cs (bad) 
   14000b102:	push   r14
   14000b104:	(bad)  
   14000b105:	and    al,0x62
   14000b107:	(bad)  
   14000b108:	jae    0x14000b173
   14000b10a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000b10d:	je     0x14000b181
   14000b10f:	gs (bad) 
   14000b111:	ins    DWORD PTR es:[rdi],dx
   14000b112:	(bad)  
   14000b113:	jne    0x14000b17b
   14000b115:	rex
   14000b116:	rex.R push rbp
   14000b118:	(bad)  
   14000b119:	and    al,0x63
   14000b11b:	push   0x745f7261
   14000b120:	jb     0x14000b183
   14000b122:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b12a:	fs rex
   14000b12c:	rex
   14000b12d:	rex jae 0x14000b1a4
   14000b130:	fs rex
   14000b132:	add    BYTE PTR [rax],al
	...
   14000b13d:	add    BYTE PTR [rax],al
   14000b13f:	add    al,cl
   14000b141:	jns    0x14000b143
   14000b143:	rex add DWORD PTR [rax],eax
	...
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	cs (bad) 
   14000b152:	push   r14
   14000b154:	(bad)  
   14000b155:	and    al,0x62
   14000b157:	(bad)  
   14000b158:	jae    0x14000b1c3
   14000b15a:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b15d:	data16 jae 0x14000b1d4
   14000b160:	jb     0x14000b1c7
   14000b162:	(bad)  
   14000b163:	ins    DWORD PTR es:[rdi],dx
   14000b164:	rex
   14000b165:	rex.R push rbp
   14000b167:	(bad)  
   14000b168:	and    al,0x63
   14000b16a:	push   0x745f7261
   14000b16f:	jb     0x14000b1d2
   14000b171:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b179:	fs rex
   14000b17b:	rex
   14000b17c:	rex jae 0x14000b1f3
   14000b17f:	fs rex
   14000b181:	add    BYTE PTR [rax],al
	...
   14000b190:	enter  0x79,0x40
   14000b194:	add    DWORD PTR [rax],eax
	...
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	cs (bad) 
   14000b1a2:	push   r14
   14000b1a4:	(bad)  
   14000b1a5:	and    al,0x62
   14000b1a7:	(bad)  
   14000b1a8:	jae    0x14000b213
   14000b1aa:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b1ad:	jae    0x14000b223
   14000b1af:	jb     0x14000b216
   14000b1b1:	(bad)  
   14000b1b2:	ins    DWORD PTR es:[rdi],dx
   14000b1b3:	rex
   14000b1b4:	rex.R push rbp
   14000b1b6:	(bad)  
   14000b1b7:	and    al,0x63
   14000b1b9:	push   0x745f7261
   14000b1be:	jb     0x14000b221
   14000b1c0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b1c8:	fs rex
   14000b1ca:	rex
   14000b1cb:	rex jae 0x14000b242
   14000b1ce:	fs rex
   14000b1d0:	add    BYTE PTR [rax],al
   14000b1d3:	add    BYTE PTR [rax],al
   14000b1d5:	add    BYTE PTR [rax],al
   14000b1d7:	add    al,cl
   14000b1d9:	jns    0x14000b1db
   14000b1db:	rex add DWORD PTR [rax],eax
	...
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	cs (bad) 
   14000b1ea:	push   r14
   14000b1ec:	(bad)  
   14000b1ed:	and    al,0x62
   14000b1ef:	(bad)  
   14000b1f0:	jae    0x14000b25b
   14000b1f2:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b1f5:	outs   dx,DWORD PTR ds:[rsi]
   14000b1f6:	jae    0x14000b238
   14000b1f8:	rex.R push rbp
   14000b1fa:	(bad)  
   14000b1fb:	and    al,0x63
   14000b1fd:	push   0x745f7261
   14000b202:	jb     0x14000b265
   14000b204:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b20c:	fs rex
   14000b20e:	rex
   14000b20f:	rex jae 0x14000b286
   14000b212:	fs rex
   14000b214:	add    BYTE PTR [rax],al
   14000b217:	add    al,cl
   14000b219:	jns    0x14000b21b
   14000b21b:	rex add DWORD PTR [rax],eax
	...
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	cs (bad) 
   14000b22a:	push   r14
   14000b22c:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000b233:	gs rex jae 0x14000b2ab
   14000b237:	fs rex
   14000b239:	add    BYTE PTR [rax],al
   14000b23c:	add    BYTE PTR [rax],al
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	enter  0x79,0x40
   14000b244:	add    DWORD PTR [rax],eax
	...
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	cs (bad) 
   14000b252:	push   r14
   14000b254:	(bad)  
   14000b255:	and    al,0x5f
   14000b257:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b259:	jae    0x14000b2bd
   14000b25b:	rex
   14000b25c:	rex.W
   14000b25d:	rex jae 0x14000b2d4
   14000b260:	fs rex
   14000b262:	add    BYTE PTR [rax],al
   14000b265:	add    BYTE PTR [rax],al
   14000b267:	add    al,cl
   14000b269:	jns    0x14000b26b
   14000b26b:	rex add DWORD PTR [rax],eax
	...
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	cs (bad) 
   14000b27a:	push   r14
   14000b27c:	gs jb  0x14000b2f1
   14000b27f:	outs   dx,DWORD PTR ds:[rsi]
   14000b280:	jb     0x14000b2e1
   14000b282:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b285:	outs   dx,DWORD PTR gs:[esi]
   14000b288:	jb     0x14000b303
   14000b28a:	rex jae 0x14000b301
   14000b28d:	fs rex
   14000b28f:	add    BYTE PTR [rax],al
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	add    BYTE PTR [rax],al
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	enter  0x79,0x40
   14000b29c:	add    DWORD PTR [rax],eax
	...
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	cs (bad) 
   14000b2aa:	push   r14
   14000b2ac:	pop    rdi
   14000b2ad:	rex.RXB
   14000b2ae:	outs   dx,BYTE PTR gs:[rsi]
   14000b2b0:	gs jb  0x14000b31c
   14000b2b3:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000b2b6:	jb     0x14000b32a
   14000b2b8:	outs   dx,DWORD PTR ds:[rsi]
   14000b2b9:	jb     0x14000b31a
   14000b2bb:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b2be:	outs   dx,DWORD PTR gs:[esi]
   14000b2c1:	jb     0x14000b33c
   14000b2c3:	rex jae 0x14000b33a
   14000b2c6:	fs rex
   14000b2c8:	add    BYTE PTR [rax],al
   14000b2cb:	add    BYTE PTR [rax],al
   14000b2cd:	add    BYTE PTR [rax],al
   14000b2cf:	add    al,cl
   14000b2d1:	jns    0x14000b2d3
   14000b2d3:	rex add DWORD PTR [rax],eax
	...
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	cs (bad) 
   14000b2e2:	push   r14
   14000b2e4:	pop    rdi
   14000b2e5:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b2e7:	jae    0x14000b35d
   14000b2e9:	jb     0x14000b350
   14000b2eb:	(bad)  
   14000b2ec:	ins    DWORD PTR es:[rdi],dx
   14000b2ed:	pop    rdi
   14000b2ee:	gs jb  0x14000b363
   14000b2f1:	outs   dx,DWORD PTR ds:[rsi]
   14000b2f2:	jb     0x14000b353
   14000b2f4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b2f7:	outs   dx,DWORD PTR gs:[esi]
   14000b2fa:	jb     0x14000b375
   14000b2fc:	rex jae 0x14000b373
   14000b2ff:	fs rex
   14000b301:	add    BYTE PTR [rax],al
   14000b304:	add    BYTE PTR [rax],al
   14000b306:	add    BYTE PTR [rax],al
   14000b308:	enter  0x79,0x40
   14000b30c:	add    DWORD PTR [rax],eax
	...
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	cs (bad) 
   14000b31a:	push   r14
   14000b31c:	pop    rdi
   14000b31d:	push   rbx
   14000b31e:	jns    0x14000b393
   14000b320:	je     0x14000b387
   14000b322:	ins    DWORD PTR es:[rdi],dx
   14000b323:	pop    rdi
   14000b324:	gs jb  0x14000b399
   14000b327:	outs   dx,DWORD PTR ds:[rsi]
   14000b328:	jb     0x14000b389
   14000b32a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b32d:	outs   dx,DWORD PTR gs:[esi]
   14000b330:	jb     0x14000b3ab
   14000b332:	rex jae 0x14000b3a9
   14000b335:	fs rex
   14000b337:	add    BYTE PTR [rax],al
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	add    BYTE PTR [rax],al
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	enter  0x79,0x40
   14000b344:	add    DWORD PTR [rax],eax
	...
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	cs (bad) 
   14000b352:	push   r14
   14000b354:	(bad)  
   14000b355:	and    al,0x62
   14000b357:	(bad)  
   14000b358:	jae    0x14000b3c3
   14000b35a:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000b35d:	data16 jae 0x14000b3d4
   14000b360:	jb     0x14000b3c7
   14000b362:	(bad)  
   14000b363:	ins    DWORD PTR es:[rdi],dx
   14000b364:	rex
   14000b365:	rex.R push rbp
   14000b367:	(bad)  
   14000b368:	and    al,0x63
   14000b36a:	push   0x745f7261
   14000b36f:	jb     0x14000b3d2
   14000b371:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000b379:	fs rex
   14000b37b:	rex
   14000b37c:	rex
   14000b37d:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
   14000b384:	je     0x14000b3eb
   14000b386:	ins    DWORD PTR es:[rdi],dx
   14000b387:	rex
   14000b388:	data16 ins BYTE PTR es:[rdi],dx
   14000b38a:	rex
   14000b38b:	add    BYTE PTR [rax],al
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	enter  0x79,0x40
   14000b394:	add    DWORD PTR [rax],eax
	...
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	cs (bad) 
   14000b3a2:	push   r14
   14000b3a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b3a5:	outs   dx,DWORD PTR ds:[rsi]
   14000b3a6:	outs   dx,BYTE PTR ds:[rsi]
   14000b3a7:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000b3aa:	jns    0x14000b40d
   14000b3ac:	(bad)  
   14000b3ad:	ins    BYTE PTR es:[rdi],dx
   14000b3ae:	rex outs dx,BYTE PTR gs:[rsi]
   14000b3b1:	outs   dx,DWORD PTR ds:[rsi]
   14000b3b2:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b3:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000b3b6:	jns    0x14000b419
   14000b3b8:	(bad)  
   14000b3b9:	ins    BYTE PTR es:[rdi],dx
   14000b3ba:	gs pop rdi
   14000b3bc:	rex (bad) 
   14000b3be:	outs   dx,DWORD PTR ds:[rsi]
   14000b3bf:	outs   dx,DWORD PTR ds:[rsi]
   14000b3c0:	jae    0x14000b436
   14000b3c2:	rex
   14000b3c3:	add    BYTE PTR [rax],al
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	enter  0x79,0x40
   14000b3cc:	add    DWORD PTR [rax],eax
	...
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	cs (bad) 
   14000b3da:	push   r14
   14000b3dc:	je     0x14000b457
   14000b3de:	jo     0x14000b445
   14000b3e0:	pop    rdi
   14000b3e1:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	jo     0x14000c012
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	cmp    BYTE PTR [rdx],dl
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	fmul   DWORD PTR [rdx+0x12500000]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	mov    WORD PTR [rdx],ss
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	adc    BYTE PTR [rax+rax*1+0x12b000],cl
   14000c01b:	add    bh,dl
   14000c01d:	adc    al,BYTE PTR [rax]
   14000c01f:	add    BYTE PTR [rax-0x1fffff74],ah
   14000c025:	adc    al,BYTE PTR [rax]
   14000c027:	add    BYTE PTR [rbx],dl
   14000c029:	adc    eax,DWORD PTR [rax]
   14000c02b:	add    BYTE PTR [rax+0x2000008c],ch
   14000c031:	adc    eax,DWORD PTR [rax]
   14000c033:	add    BYTE PTR [rcx+0x13],cl
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	test   BYTE PTR [rax+rax*1+0x135000],al
   14000c03f:	add    BYTE PTR [rax+0x13],ch
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	mov    WORD PTR [rax+rax*1+0x137000],es
   14000c04b:	add    BYTE PTR [rax-0x6bffffed],cl
   14000c051:	test   BYTE PTR [rax],al
   14000c053:	add    BYTE PTR [rax-0xbffffed],dh
   14000c059:	adc    eax,DWORD PTR [rax]
   14000c05b:	add    BYTE PTR [rax],bl
   14000c05d:	mov    WORD PTR [rax],es
   14000c05f:	add    al,dh
   14000c061:	adc    al,0x0
   14000c063:	add    cl,dh
   14000c065:	adc    eax,0x8c200000
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	loopne 0x14000c084
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	je     0x14000c089
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	rex.W mov BYTE PTR [rax],al
   14000c077:	add    BYTE PTR [rax+0x44000017],al
   14000c07d:	sbb    BYTE PTR [rax],al
   14000c07f:	add    BYTE PTR [rdx+rcx*4+0x0],ah
   14000c083:	add    BYTE PTR [rax+0x18],dl
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	xchg   BYTE PTR [rcx],bl
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	enter  0x87,0x0
   14000c090:	nop
   14000c091:	sbb    DWORD PTR [rax],eax
   14000c093:	add    ah,cl
   14000c095:	sbb    DWORD PTR [rax],eax
   14000c097:	add    BYTE PTR [rax],ah
   14000c099:	(bad)  
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	lock sbb DWORD PTR [rax],eax
   14000c09f:	add    BYTE PTR [rdx],bl
   14000c0a1:	sbb    al,BYTE PTR [rax]
   14000c0a3:	add    BYTE PTR [rax],ch
   14000c0a5:	(bad)  
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	and    BYTE PTR [rdx],bl
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	rex.WRXB sbb r8b,BYTE PTR [r8]
   14000c0af:	add    BYTE PTR [rsp+rax*4+0x1ac00000],ch
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	in     al,dx
   14000c0b9:	sbb    al,BYTE PTR [rax]
   14000c0bb:	add    BYTE PTR [rax-0x74],bl
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	xor    BYTE PTR [rbx],bl
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	lods   al,BYTE PTR ds:[rsi]
   14000c0c5:	sbb    eax,DWORD PTR [rax]
   14000c0c7:	add    BYTE PTR [rax-0x74],ah
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	mov    al,0x1b
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	sbb    DWORD PTR [rax+rax*1],ebx
   14000c0d3:	add    BYTE PTR [rax+0x20000088],al
   14000c0d9:	sbb    al,0x0
   14000c0db:	add    cl,dl
   14000c0dd:	sbb    al,0x0
   14000c0df:	add    BYTE PTR [rax-0x1fffff76],bh
   14000c0e5:	sbb    al,0x0
   14000c0e7:	add    BYTE PTR [rbx],dh
   14000c0e9:	sbb    eax,0x88400000
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	rex sbb eax,0x1d710000
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	xor    BYTE PTR [rdx+0x1d800000],al
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	scas   eax,DWORD PTR es:[rdi]
   14000c101:	sbb    eax,0x84d00000
   14000c106:	add    BYTE PTR [rax],al
   14000c108:	adc    BYTE PTR [rsi],bl
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	ds (bad) 
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	sbb    al,0x84
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	push   rax
   14000c115:	(bad)  
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	xchg   edx,eax
   14000c119:	(bad)  
   14000c11a:	add    BYTE PTR [rax],al
   14000c11c:	cwde   
   14000c11d:	mov    WORD PTR [rax],es
   14000c11f:	add    al,al
   14000c121:	(bad)  
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	(bad)  
   14000c125:	(bad)  
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	mov    ah,0x84
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	rcr    BYTE PTR [rdi],1
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	or     BYTE PTR [rax],ah
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	ror    BYTE PTR [rdx+0x20100000],1
   14000c13a:	add    BYTE PTR [rax],al
   14000c13c:	mov    DWORD PTR [rax],esp
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	pop    rsp
   14000c141:	mov    al,BYTE PTR [rax]
   14000c143:	add    BYTE PTR [rax-0x20ffffe0],dh
   14000c149:	and    BYTE PTR [rax],al
   14000c14b:	add    BYTE PTR [rdx+rcx*4+0x0],al
   14000c14f:	add    al,ah
   14000c151:	and    BYTE PTR [rax],al
   14000c153:	add    BYTE PTR [rsi+0x21],cl
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	ror    BYTE PTR [rdx+0x21500000],0x0
   14000c15f:	add    BYTE PTR [rsi+0x50000021],al
   14000c165:	mov    al,BYTE PTR [rax]
   14000c167:	add    BYTE PTR [rax-0x49ffffdf],dl
   14000c16d:	and    DWORD PTR [rax],eax
   14000c16f:	add    BYTE PTR [rsp+rax*4+0x0],cl
   14000c173:	add    al,al
   14000c175:	and    DWORD PTR [rax],eax
   14000c177:	add    dh,ah
   14000c179:	and    DWORD PTR [rax],eax
   14000c17b:	add    BYTE PTR [rsp+rax*4+0x0],bl
   14000c17f:	add    al,dh
   14000c181:	and    DWORD PTR [rax],eax
   14000c183:	add    BYTE PTR [rsi],dl
   14000c185:	and    al,BYTE PTR [rax]
   14000c187:	add    BYTE PTR [rsp+rax*4+0x0],bh
   14000c18b:	add    BYTE PTR [rax],ah
   14000c18d:	and    al,BYTE PTR [rax]
   14000c18f:	add    BYTE PTR [rsi+0x22],al
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	cmp    BYTE PTR [rax+rax*1+0x226000],al
   14000c19b:	add    bh,cl
   14000c19d:	and    al,BYTE PTR [rax]
   14000c19f:	add    al,al
   14000c1a1:	test   BYTE PTR [rax],al
   14000c1a3:	add    BYTE PTR [rax],ah
   14000c1a5:	and    eax,DWORD PTR [rax]
   14000c1a7:	add    BYTE PTR [rdx],ah
   14000c1a9:	and    al,0x0
   14000c1ab:	add    BYTE PTR [rdx+rax*4+0x24300000],dl
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	rex.WR and rax,0xffffffff85a80000
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	push   rax
   14000c1bd:	and    eax,0x27610000
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	cld    
   14000c1c5:	mov    DWORD PTR [rax],eax
   14000c1c7:	add    al,dl
   14000c1c9:	(bad)  
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	and    ch,BYTE PTR [rax]
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	and    al,0x84
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	xor    BYTE PTR [rax],ch
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	jp     0x14000c202
   14000c1da:	add    BYTE PTR [rax],al
   14000c1dc:	test   BYTE PTR [rbx+0x287a0000],al
   14000c1e2:	add    BYTE PTR [rax],al
   14000c1e4:	nop
   14000c1e5:	sub    BYTE PTR [rax],al
   14000c1e7:	add    BYTE PTR [rbx+rax*4+0x28900000],dl
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	mov    ch,0x28
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	test   al,0x83
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	mov    ch,0x28
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	int3   
   14000c1fd:	sub    BYTE PTR [rax],al
   14000c1ff:	add    BYTE PTR [rbx+rax*4+0x28cc0000],bh
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	imul   DWORD PTR [rax]
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	int3   
   14000c20d:	add    DWORD PTR [rax],0x0
   14000c210:	add    BYTE PTR [rcx],ch
   14000c212:	add    BYTE PTR [rax],al
   14000c214:	push   rbx
   14000c215:	sub    DWORD PTR [rax],eax
   14000c217:	add    BYTE PTR [rsi+rax*4+0x29530000],dl
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	imul   ebp,DWORD PTR [rcx],0x86a40000
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	imul   ebp,DWORD PTR [rcx],0x298f0000
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	mov    eax,0x8f000086
   14000c235:	sub    DWORD PTR [rax],eax
   14000c237:	add    BYTE PTR [rdi-0x33ffffd7],ah
   14000c23d:	xchg   BYTE PTR [rax],al
   14000c23f:	add    BYTE PTR [rdi-0x2dffffd7],ah
   14000c245:	sub    DWORD PTR [rax],eax
   14000c247:	add    ah,bl
   14000c249:	xchg   BYTE PTR [rax],al
   14000c24b:	add    al,ah
   14000c24d:	sub    DWORD PTR [rax],eax
   14000c24f:	add    BYTE PTR [rbp+0x2a],dl
   14000c252:	add    BYTE PTR [rax],al
   14000c254:	lock mov DWORD PTR [rax],eax
   14000c257:	add    BYTE PTR [rax+0x2a],ah
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	test   al,0x2a
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	cmp    BYTE PTR [rdx+0x2c300000],cl
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	rex.WXB sub al,0x0
   14000c26b:	add    ah,bl
   14000c26d:	add    DWORD PTR [rax],0x0
   14000c270:	rex.WXB sub al,0x0
   14000c273:	add    BYTE PTR [rbp+0x2c],ch
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	call   0x1ad00c300
   14000c27d:	sub    al,0x0
   14000c27f:	add    BYTE PTR [rax-0x3ffffd4],cl
   14000c285:	add    DWORD PTR [rax],0x0
   14000c288:	nop
   14000c289:	sub    al,0x0
   14000c28b:	add    BYTE PTR [rbx-0x13ffffd4],ch
   14000c291:	xchg   BYTE PTR [rax],al
   14000c293:	add    BYTE PTR [rbx-0x2fffffd4],ch
   14000c299:	sub    al,0x0
   14000c29b:	add    al,bh
   14000c29d:	xchg   BYTE PTR [rax],al
   14000c29f:	add    al,dl
   14000c2a1:	sub    al,0x0
   14000c2a3:	add    ch,ch
   14000c2a5:	sub    al,0x0
   14000c2a7:	add    BYTE PTR [rdi+rax*4],cl
   14000c2aa:	add    BYTE PTR [rax],al
   14000c2ac:	adc    BYTE PTR [rip+0x2d220000],ch        # 0x16d22c2b2
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	or     al,0x84
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	xor    BYTE PTR [rip+0x2d420000],ch        # 0x16d42c2be
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	sbb    al,0x87
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	push   rax
   14000c2c5:	sub    eax,0x2d620000
   14000c2ca:	add    BYTE PTR [rax],al
   14000c2cc:	adc    al,0x84
   14000c2ce:	add    BYTE PTR [rax],al
   14000c2d0:	jo     0x14000c2ff
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	(bad)  
   14000c2d5:	sub    eax,0x87240000
   14000c2da:	add    BYTE PTR [rax],al
   14000c2dc:	nop
   14000c2dd:	sub    eax,0x2dba0000
   14000c2e2:	add    BYTE PTR [rax],al
   14000c2e4:	sbb    BYTE PTR [rdx+0x2dc00000],al
   14000c2ea:	add    BYTE PTR [rax],al
   14000c2ec:	hlt    
   14000c2ed:	sub    eax,0x84a40000
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	add    BYTE PTR [rsi],ch
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	sub    ch,BYTE PTR [rsi]
   14000c2fa:	add    BYTE PTR [rax],al
   14000c2fc:	adc    BYTE PTR [rdx+0x2e300000],al
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	fs add BYTE PTR cs:[rax],al
   14000c308:	pushf  
   14000c309:	test   BYTE PTR [rax],al
   14000c30b:	add    BYTE PTR [rax+0x2e],dh
   14000c30e:	add    BYTE PTR [rax],al
   14000c310:	jb     0x14000c341
   14000c312:	add    BYTE PTR [rax],al
   14000c314:	cmp    BYTE PTR [rdx+0x2f800000],al
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	movabs ds:0xd00000824c000030,al
   14000c325:	xor    BYTE PTR [rax],al
   14000c327:	add    bh,bh
   14000c329:	xor    DWORD PTR [rax],eax
   14000c32b:	add    BYTE PTR [rax-0x7e],ah
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	add    BYTE PTR [rdx],dh
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	(bad)  
   14000c335:	xor    al,BYTE PTR [rax]
   14000c337:	add    BYTE PTR [rax-0x7e],dh
   14000c33a:	add    BYTE PTR [rax],al
   14000c33c:	add    BYTE PTR [rbx],dh
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	cmp    dh,BYTE PTR [rax+rax*1]
   14000c343:	add    al,bl
   14000c345:	test   BYTE PTR [rax],al
   14000c347:	add    BYTE PTR [rax+0x34],al
   14000c34a:	add    BYTE PTR [rax],al
   14000c34c:	(bad)  
   14000c34d:	xor    al,0x0
   14000c34f:	add    BYTE PTR [rax],cl
   14000c351:	(bad)  
   14000c352:	add    BYTE PTR [rax],al
   14000c354:	adc    BYTE PTR [rip+0x35960000],dh        # 0x17596c35a
   14000c35a:	add    BYTE PTR [rax],al
   14000c35c:	ror    BYTE PTR [rax+0x35a00000],0x0
   14000c363:	add    ah,dl
   14000c365:	xor    eax,0x85700000
   14000c36a:	add    BYTE PTR [rax],al
   14000c36c:	loopne 0x14000c3a3
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	add    esi,DWORD PTR [rsi]
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	js     0x14000c2fb
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	add    esi,DWORD PTR [rsi]
   14000c37a:	add    BYTE PTR [rax],al
   14000c37c:	imul   esi,DWORD PTR [rsi],0x85800000
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	imul   esi,DWORD PTR [rsi],0x36880000
   14000c38a:	add    BYTE PTR [rax],al
   14000c38c:	xchg   esp,eax
   14000c38d:	test   DWORD PTR [rax],eax
   14000c38f:	add    al,dl
   14000c391:	add    BYTE PTR ss:[rax],al
   14000c394:	in     al,dx
   14000c395:	add    BYTE PTR ss:[rax],al
   14000c398:	add    BYTE PTR [rdx+0x36f00000],al
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	getsec 
   14000c3a2:	add    BYTE PTR [rax],al
   14000c3a4:	clc    
   14000c3a5:	add    DWORD PTR [rax],0x375000
   14000c3ab:	add    BYTE PTR [rax+0x70000037],dl
   14000c3b1:	test   BYTE PTR [rax],al
   14000c3b3:	add    BYTE PTR [rax],ah
   14000c3b5:	cmp    BYTE PTR [rax],al
   14000c3b7:	add    BYTE PTR [rdi+0x38],dl
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	xor    BYTE PTR [rax+rax*1+0x386000],al
   14000c3c3:	add    BYTE PTR [rcx],ch
   14000c3c5:	cmp    DWORD PTR [rax],eax
   14000c3c7:	add    BYTE PTR [rax+0x30000082],cl
   14000c3cd:	cmp    DWORD PTR [rax],eax
   14000c3cf:	add    BYTE PTR [rsi+0x39],ch
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	add    BYTE PTR [rdx+0x39700000],0x0
   14000c3db:	add    BYTE PTR [rbx],bl
   14000c3dd:	cmp    al,BYTE PTR [rax]
   14000c3df:	add    ah,dh
   14000c3e1:	test   BYTE PTR [rax],al
   14000c3e3:	add    BYTE PTR [rax],ah
   14000c3e5:	cmp    al,BYTE PTR [rax]
   14000c3e7:	add    BYTE PTR [rsi+0x3a],ah
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	in     al,dx
   14000c3ed:	test   BYTE PTR [rax],al
   14000c3ef:	add    BYTE PTR [rax-0x2fffffc6],al
   14000c3f5:	cmp    al,BYTE PTR [rax]
   14000c3f7:	add    ah,ah
   14000c3f9:	mov    DWORD PTR [rax],eax
   14000c3fb:	add    BYTE PTR [rax-0xdffffc5],dl
   14000c401:	cmp    eax,DWORD PTR [rax]
   14000c403:	add    BYTE PTR [rax-0x7c],al
   14000c406:	add    BYTE PTR [rax],al
   14000c408:	add    BYTE PTR [rax+rax*1],bh
   14000c40b:	add    BYTE PTR [rbp+0x3c],cl
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	push   rsp
   14000c411:	test   BYTE PTR [rax],al
   14000c413:	add    BYTE PTR [rax+0x3c],dl
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	mov    dl,0x3c
   14000c41a:	add    BYTE PTR [rax],al
   14000c41c:	test   BYTE PTR fs:[rax],al
   14000c41f:	add    BYTE PTR [rax],dh
   14000c421:	cmp    eax,0x3e3b0000
   14000c426:	add    BYTE PTR [rax],al
   14000c428:	mov    BYTE PTR [rax+0x3e400000],cl
   14000c42e:	add    BYTE PTR [rax],al
   14000c430:	sbb    eax,DWORD PTR [rcx+0x0]
   14000c433:	add    al,dl
   14000c435:	mov    BYTE PTR [rax],al
   14000c437:	add    BYTE PTR [rax],ah
   14000c439:	add    BYTE PTR [r8],al
   14000c43c:	int3   
   14000c43d:	add    BYTE PTR [r8],al
   14000c440:	adc    BYTE PTR [rcx+0x41d00000],cl
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	je     0x14000c48c
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	push   0xffffffff80000085
   14000c451:	rex.X add BYTE PTR [rax],al
   14000c454:	mov    bh,0x42
   14000c456:	add    BYTE PTR [rax],al
   14000c458:	add    BYTE PTR [rbp+0x42b70000],al
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	repz add BYTE PTR [r8],r8b
   14000c464:	adc    BYTE PTR [rbp+0x45f30000],al
   14000c46a:	add    BYTE PTR [rax],al
   14000c46c:	add    DWORD PTR [rsi+0x0],eax
   14000c46f:	add    BYTE PTR [rax*4+0x46100000],ch
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	xor    DWORD PTR [rdi+0x0],eax
   14000c47b:	add    BYTE PTR [rax*4+0x47310000],bh
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	rex.WRB
   14000c485:	rex.W add BYTE PTR [rax],al
   14000c488:	push   rsp
   14000c489:	test   DWORD PTR [rax],eax
   14000c48b:	add    BYTE PTR [rax+0x48],dl
   14000c48e:	add    BYTE PTR [rax],al
   14000c490:	cmp    eax,0x88000049
   14000c495:	mov    DWORD PTR [rax],eax
   14000c497:	add    BYTE PTR [rax+0x49],al
   14000c49a:	add    BYTE PTR [rax],al
   14000c49c:	sbb    eax,0x9c00004a
   14000c4a1:	mov    DWORD PTR [rax],eax
   14000c4a3:	add    BYTE PTR [rax+0x4a],ah
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	pushf  
   14000c4a9:	rex.WX add BYTE PTR [rax],al
   14000c4ac:	mov    al,0x89
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	pushf  
   14000c4b1:	rex.WX add BYTE PTR [rax],al
   14000c4b4:	or     DWORD PTR [rbx+0x0],ecx
   14000c4b7:	add    BYTE PTR [rax+0x9000089],bh
   14000c4bd:	rex.WXB add BYTE PTR [r8],al
   14000c4c0:	adc    DWORD PTR [rbx+0x0],ecx
   14000c4c3:	add    ah,cl
   14000c4c5:	mov    DWORD PTR [rax],eax
   14000c4c7:	add    BYTE PTR [rax+0x4b],dl
   14000c4ca:	add    BYTE PTR [rax],al
   14000c4cc:	xchg   ebx,eax
   14000c4cd:	rex.WXB add BYTE PTR [r8],al
   14000c4d0:	fmul   QWORD PTR [rcx+0x4bd00000]
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	movabs eax,ds:0xb00000894c00004e
   14000c4e1:	rex.WRX add BYTE PTR [rax],r8b
   14000c4e4:	jrcxz  0x14000c534
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	sbb    al,0x89
   14000c4ea:	add    BYTE PTR [rax],al
   14000c4ec:	jrcxz  0x14000c53c
   14000c4ee:	add    BYTE PTR [rax],al
   14000c4f0:	dec    DWORD PTR [rsi+0x0]
   14000c4f3:	add    BYTE PTR [rcx+rcx*4],ah
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	dec    DWORD PTR [rsi+0x0]
   14000c4fb:	add    BYTE PTR [rdi],dl
   14000c4fd:	rex.WRXB add BYTE PTR [r8],r8b
   14000c500:	cmp    BYTE PTR [rcx+0x4f200000],cl
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	mov    ecx,0x2c000050
   14000c50d:	xchg   DWORD PTR [rax],eax
   14000c50f:	add    al,dh
   14000c511:	push   rax
   14000c512:	add    BYTE PTR [rax],al
   14000c514:	nop
   14000c515:	push   rsp
   14000c516:	add    BYTE PTR [rax],al
   14000c518:	cwde   
   14000c519:	mov    eax,DWORD PTR [rax]
   14000c51b:	add    al,dl
   14000c51d:	push   rsp
   14000c51e:	add    BYTE PTR [rax],al
   14000c520:	(bad)  
   14000c521:	push   rsp
   14000c522:	add    BYTE PTR [rax],al
   14000c524:	lock add DWORD PTR [rax],0x550000
   14000c52b:	add    al,dl
   14000c52d:	push   rsi
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	cmp    BYTE PTR [rsi+0x56d00000],cl
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	or     dl,BYTE PTR [rdi+0x0]
   14000c53b:	add    BYTE PTR [rax+0x1000008d],cl
   14000c541:	push   rdi
   14000c542:	add    BYTE PTR [rax],al
   14000c544:	rex.WB push r15
   14000c546:	add    BYTE PTR [rax],al
   14000c548:	clc    
   14000c549:	mov    es,WORD PTR [rax]
   14000c54b:	add    BYTE PTR [rax+0x57],dl
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	sbb    DWORD PTR [rax+0x0],0x0
   14000c554:	nop
   14000c555:	lea    eax,[rax]
   14000c557:	add    al,dl
   14000c559:	pop    rax
   14000c55a:	add    BYTE PTR [rax],al
   14000c55c:	out    dx,al
   14000c55d:	pop    rcx
   14000c55e:	add    BYTE PTR [rax],al
   14000c560:	mov    al,0x8c
   14000c562:	add    BYTE PTR [rax],al
   14000c564:	adc    BYTE PTR [rdx+0x0],bl
   14000c567:	add    BYTE PTR [rbp+0x5b],dl
   14000c56a:	add    BYTE PTR [rax],al
   14000c56c:	enter  0x8c,0x0
   14000c570:	(bad)  
   14000c571:	pop    rbx
   14000c572:	add    BYTE PTR [rax],al
   14000c574:	xchg   edx,eax
   14000c575:	pop    rbx
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	fmul   QWORD PTR [rax+rax*1+0x5ba000]
   14000c57f:	add    bl,al
   14000c581:	pop    rbx
   14000c582:	add    BYTE PTR [rax],al
   14000c584:	in     al,0x8c
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	ret    
   14000c589:	pop    rbx
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	and    bl,BYTE PTR [rax+rax*1+0x0]
   14000c590:	in     al,dx
   14000c591:	mov    WORD PTR [rax],es
   14000c593:	add    BYTE PTR [rdx],ah
   14000c595:	pop    rsp
   14000c596:	add    BYTE PTR [rax],al
   14000c598:	cmp    BYTE PTR [rax+rax*1+0x0],bl
   14000c59c:	add    al,0x8d
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	push   rax
   14000c5a1:	pop    rsp
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	pop    rbx
   14000c5a5:	pop    rbp
   14000c5a6:	add    BYTE PTR [rax],al
   14000c5a8:	add    BYTE PTR [rsi+0x5d600000],cl
   14000c5ae:	add    BYTE PTR [rax],al
   14000c5b0:	gs pop rdi
   14000c5b2:	add    BYTE PTR [rax],al
   14000c5b4:	sbb    al,0x8d
   14000c5b6:	add    BYTE PTR [rax],al
   14000c5b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c5b9:	pop    rdi
   14000c5ba:	add    BYTE PTR [rax],al
   14000c5bc:	retf   0x5f
   14000c5bf:	add    BYTE PTR [rax],cl
   14000c5c1:	pop    QWORD PTR [rax]
   14000c5c3:	add    ah,cl
   14000c5c5:	pop    rdi
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	adc    eax,0x1c000060
   14000c5cd:	pop    QWORD PTR [rax]
   14000c5cf:	add    BYTE PTR [rax],bl
   14000c5d1:	(bad)  
   14000c5d2:	add    BYTE PTR [rax],al
   14000c5d4:	(bad)  
   14000c5d5:	(bad)  
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	adc    BYTE PTR [rdi+0x60600000],cl
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	xchg   ebx,eax
   14000c5e1:	(bad)  
   14000c5e2:	add    BYTE PTR [rax],al
   14000c5e4:	add    BYTE PTR [rdi+0x61600000],cl
   14000c5ea:	add    BYTE PTR [rax],al
   14000c5ec:	scas   al,BYTE PTR es:[rdi]
   14000c5ed:	(bad)  
   14000c5ee:	add    BYTE PTR [rax],al
   14000c5f0:	pop    rsp
   14000c5f1:	pop    QWORD PTR [rax]
   14000c5f3:	add    BYTE PTR [rax+0x60000061],dh
   14000c5f9:	(bad)  
   14000c5fa:	add    BYTE PTR [rax],al
   14000c5fc:	xor    al,0x8f
   14000c5fe:	add    BYTE PTR [rax],al
   14000c600:	(bad)  
   14000c601:	(bad)  
   14000c602:	add    BYTE PTR [rax],al
   14000c604:	ja     0x14000c668
   14000c606:	add    BYTE PTR [rax],al
   14000c608:	sub    al,0x8f
   14000c60a:	add    BYTE PTR [rax],al
   14000c60c:	sbb    BYTE PTR [rbx+0x0],ah
   14000c60f:	add    BYTE PTR [rdx+0x64000063],al
   14000c615:	pop    QWORD PTR [rax]
   14000c617:	add    BYTE PTR [rax+0x56000063],cl
   14000c61d:	add    BYTE PTR fs:[rax],al
   14000c620:	je     0x14000c5b1
   14000c622:	add    BYTE PTR [rax],al
   14000c624:	pop    rax
   14000c625:	add    BYTE PTR fs:[rax],al
   14000c628:	mov    ebx,0x7c000064
   14000c62d:	pop    QWORD PTR [rax]
   14000c62f:	add    al,cl
   14000c631:	add    BYTE PTR fs:[rax],al
   14000c634:	cmp    BYTE PTR [rsi+0x0],ah
   14000c637:	add    BYTE PTR [rdi+rcx*4+0x66840000],al
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	xchg   esi,eax
   14000c641:	data16 add BYTE PTR [rax],al
   14000c644:	lods   al,BYTE PTR ds:[rsi]
   14000c645:	pop    QWORD PTR [rax]
   14000c647:	add    BYTE PTR [rsi+riz*2+0x67110000],dh
   14000c64e:	add    BYTE PTR [rax],al
   14000c650:	mov    ah,0x8f
   14000c652:	add    BYTE PTR [rax],al
   14000c654:	adc    al,0x67
   14000c656:	add    BYTE PTR [rax],al
   14000c658:	xor    BYTE PTR [rdi+0x0],ah
   14000c65b:	add    BYTE PTR [rax+rdx*4],dl
   14000c65e:	add    BYTE PTR [rax],al
   14000c660:	xor    BYTE PTR [rdi+0x0],ah
   14000c663:	add    BYTE PTR [rdx+0x67],bh
   14000c666:	add    BYTE PTR [rax],al
   14000c668:	in     al,0x8f
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	jl     0x14000c6d5
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	mov    ah,0x67
   14000c672:	add    BYTE PTR [rax],al
   14000c674:	sbb    al,0x90
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	mov    ah,0x67
   14000c67a:	add    BYTE PTR [rax],al
   14000c67c:	retf   
   14000c67d:	add    BYTE PTR [eax],al
   14000c680:	and    al,0x90
   14000c682:	add    BYTE PTR [rax],al
   14000c684:	rex push 0x688d0000
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	sub    al,0x90
   14000c68e:	add    BYTE PTR [rax],al
   14000c690:	shr    BYTE PTR [rax+0x0],1
   14000c693:	add    BYTE PTR [rcx+rbp*2+0x0],bh
   14000c697:	add    BYTE PTR [rax-0x70],bl
   14000c69a:	add    BYTE PTR [rax],al
   14000c69c:	sub    BYTE PTR [rcx+0x0],0x0
   14000c6a0:	mov    eax,0x64000069
   14000c6a5:	nop
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	mov    eax,0xf0000069
   14000c6ad:	imul   eax,DWORD PTR [rax],0x907000
   14000c6b3:	add    BYTE PTR [rax+0x6a],bl
   14000c6b6:	add    BYTE PTR [rax],al
   14000c6b8:	nop
   14000c6b9:	push   0x0
   14000c6bb:	add    BYTE PTR [rax-0x4fffff75],cl
   14000c6c1:	push   0x0
   14000c6c3:	add    ah,ah
   14000c6c5:	push   0x0
   14000c6c7:	add    BYTE PTR [rax-0xfffff76],dh
   14000c6cd:	push   0x0
   14000c6cf:	add    BYTE PTR [rsi],bl
   14000c6d1:	imul   eax,DWORD PTR [rax],0x0
   14000c6d4:	cmp    BYTE PTR [rax+0x6b600000],cl
   14000c6da:	add    BYTE PTR [rax],al
   14000c6dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c6dd:	imul   eax,DWORD PTR [rax],0x0
   14000c6e0:	(bad)  
   14000c6e1:	add    DWORD PTR [rax],0x0
   14000c6e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c6e5:	imul   eax,DWORD PTR [rax],0x0
   14000c6e8:	loop   0x14000c755
   14000c6ea:	add    BYTE PTR [rax],al
   14000c6ec:	jo     0x14000c671
   14000c6ee:	add    BYTE PTR [rax],al
   14000c6f0:	lock imul eax,DWORD PTR [rax],0x0
   14000c6f4:	rex ins BYTE PTR es:[rdi],dx
   14000c6f6:	add    BYTE PTR [rax],al
   14000c6f8:	jo     0x14000c680
   14000c6fa:	add    BYTE PTR [rax],al
   14000c6fc:	rex ins BYTE PTR es:[rdi],dx
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	sub    BYTE PTR [rax+rax*1+0x0],0x80
   14000c705:	xchg   BYTE PTR [rax],al
   14000c707:	add    al,bl
   14000c709:	ins    BYTE PTR es:[rdi],dx
   14000c70a:	add    BYTE PTR [rax],al
   14000c70c:	(bad)  
   14000c70e:	add    BYTE PTR [rax],al
   14000c710:	rol    BYTE PTR [rdi+0x6d780000],0x0
   14000c717:	add    BYTE PTR [rax-0x17ffff93],dh
   14000c71d:	mov    es,WORD PTR [rax]
   14000c71f:	add    BYTE PTR [rax-0x21ffff93],dh
   14000c725:	ins    DWORD PTR es:[rdi],dx
   14000c726:	add    BYTE PTR [rax],al
   14000c728:	clc    
   14000c729:	lea    eax,[rax]
   14000c72b:	add    BYTE PTR [rsi+rbp*2+0x0],al
   14000c72f:	add    BYTE PTR [rdi+0x6e],bl
   14000c732:	add    BYTE PTR [rax],al
   14000c734:	push   rsp
   14000c735:	pop    QWORD PTR [rax]
   14000c737:	add    BYTE PTR [rdi+0x6e],bl
   14000c73a:	add    BYTE PTR [rax],al
   14000c73c:	jge    0x14000c7ac
   14000c73e:	add    BYTE PTR [rax],al
   14000c740:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c741:	pop    QWORD PTR [rax]
   14000c743:	add    BYTE PTR [rbp+0x6e],bh
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	test   eax,0xdc00006e
   14000c74d:	pop    QWORD PTR [rax]
   14000c74f:	add    BYTE PTR [rcx-0x15ffff92],ch
   14000c755:	outs   dx,BYTE PTR ds:[rsi]
   14000c756:	add    BYTE PTR [rax],al
   14000c758:	or     al,0x90
   14000c75a:	add    BYTE PTR [rax],al
   14000c75c:	lock outs dx,BYTE PTR ds:[rsi]
   14000c75e:	add    BYTE PTR [rax],al
   14000c760:	adc    BYTE PTR [rdi+0x0],ch
   14000c763:	add    BYTE PTR [rax-0x70],dl
   14000c766:	add    BYTE PTR [rax],al
   14000c768:	jo     0x14000c7d9
   14000c76a:	add    BYTE PTR [rax],al
   14000c76c:	mov    ecx,0x2400006f
   14000c771:	pop    QWORD PTR [rax]
	...

Disassembly of section .rsrc:

000000014000d000 <.rsrc>:
	...
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    al,0x0
   14000d010:	add    eax,DWORD PTR [rax]
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	xor    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax+0xe],al
   14000d01c:	nop
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	adc    BYTE PTR [rax],0x0
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	test   al,0x0
   14000d026:	add    BYTE PTR [rax+0x18],al
   14000d02c:	rol    BYTE PTR [rax],0x0
   14000d02f:	add    BYTE PTR [rax],0x0
	...
   14000d03e:	or     al,BYTE PTR [rax]
   14000d040:	add    DWORD PTR [rax],eax
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	fadd   DWORD PTR [rax]
   14000d046:	add    BYTE PTR [rax+0x2],al
   14000d04c:	lock add BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rbx],0x0
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	or     BYTE PTR [rcx],al
   14000d056:	add    BYTE PTR [rax+0x4],al
   14000d05c:	and    BYTE PTR [rcx],al
   14000d05e:	add    BYTE PTR [rax+0x5],al
   14000d064:	cmp    BYTE PTR [rcx],al
   14000d066:	add    BYTE PTR [rax+0x6],al
   14000d06c:	push   rax
   14000d06d:	add    DWORD PTR [rax],eax
   14000d06f:	add    BYTE PTR [rdi],0x0
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	push   0x8800001
   14000d079:	add    BYTE PTR [rax],al
   14000d07b:	add    BYTE PTR [rax+0x9800001],al
   14000d081:	add    BYTE PTR [rax],al
   14000d083:	add    BYTE PTR [rax+0xa800001],bl
   14000d089:	add    BYTE PTR [rax],al
   14000d08b:	add    BYTE PTR [rax+0x800001],dh
	...
   14000d099:	add    BYTE PTR [rax],al
   14000d09b:	add    BYTE PTR [rcx],al
   14000d09d:	add    BYTE PTR [rax],al
   14000d09f:	add    al,ah
   14000d0a1:	add    al,BYTE PTR [rax]
   14000d0a3:	or     al,0x1
   14000d0a6:	add    BYTE PTR [rax+0x0],al
	...
   14000d0b4:	add    BYTE PTR [rax],al
   14000d0b6:	add    DWORD PTR [rax],eax
   14000d0b8:	add    DWORD PTR [rax],eax
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	loopne 0x14000d0bf
   14000d0be:	add    BYTE PTR [rax+0x0],al
	...
   14000d0cc:	add    BYTE PTR [rax],al
   14000d0ce:	add    DWORD PTR [rax],eax
   14000d0d0:	add    DWORD PTR [rax],eax
   14000d0d2:	add    BYTE PTR [rax],al
   14000d0d4:	clc    
   14000d0d5:	add    DWORD PTR [rax],eax
   14000d0d7:	add    BYTE PTR [rax],0x0
	...
   14000d0e6:	add    DWORD PTR [rax],eax
   14000d0e8:	or     DWORD PTR [rax+rax*1],eax
   14000d0eb:	add    BYTE PTR [rax],dl
   14000d0ed:	add    al,BYTE PTR [rax]
	...
   14000d0fb:	add    BYTE PTR [rax],al
   14000d0fd:	add    BYTE PTR [rcx],al
   14000d0ff:	add    BYTE PTR [rcx],cl
   14000d101:	add    al,0x0
   14000d103:	add    BYTE PTR [rax],ah
   14000d105:	add    al,BYTE PTR [rax]
	...
   14000d113:	add    BYTE PTR [rax],al
   14000d115:	add    BYTE PTR [rcx],al
   14000d117:	add    BYTE PTR [rcx],cl
   14000d119:	add    al,0x0
   14000d11b:	add    BYTE PTR [rax],dh
   14000d11d:	add    al,BYTE PTR [rax]
	...
   14000d12b:	add    BYTE PTR [rax],al
   14000d12d:	add    BYTE PTR [rcx],al
   14000d12f:	add    BYTE PTR [rcx],cl
   14000d131:	add    al,0x0
   14000d133:	add    BYTE PTR [rax+0x2],al
	...
   14000d146:	add    DWORD PTR [rax],eax
   14000d148:	or     DWORD PTR [rax+rax*1],eax
   14000d14b:	add    BYTE PTR [rax+0x2],dl
	...
   14000d15e:	add    DWORD PTR [rax],eax
   14000d160:	or     DWORD PTR [rax+rax*1],eax
   14000d163:	add    BYTE PTR [rax+0x2],ah
	...
   14000d176:	add    DWORD PTR [rax],eax
   14000d178:	or     DWORD PTR [rax+rax*1],eax
   14000d17b:	add    BYTE PTR [rax+0x2],dh
	...
   14000d18e:	add    DWORD PTR [rax],eax
   14000d190:	or     DWORD PTR [rax+rax*1],eax
   14000d193:	add    BYTE PTR [rax+0x2],al
	...
   14000d1a5:	add    BYTE PTR [rcx],al
   14000d1a7:	add    BYTE PTR [rcx],cl
   14000d1a9:	add    al,0x0
   14000d1ab:	add    BYTE PTR [rax+0x2],dl
	...
   14000d1bd:	add    BYTE PTR [rcx],al
   14000d1bf:	add    BYTE PTR [rcx],cl
   14000d1c1:	add    al,0x0
   14000d1c3:	add    BYTE PTR [rax+0x2],ah
	...
   14000d1d5:	add    BYTE PTR [rcx],al
   14000d1d7:	add    BYTE PTR [rcx],cl
   14000d1d9:	add    al,0x0
   14000d1db:	add    BYTE PTR [rax+0x2],dh
	...
   14000d1ed:	add    BYTE PTR [rcx],al
   14000d1ef:	add    BYTE PTR [rcx],cl
   14000d1f1:	add    al,0x0
   14000d1f3:	add    al,al
   14000d1f5:	add    al,BYTE PTR [rax]
	...
   14000d203:	add    BYTE PTR [rax],al
   14000d205:	add    BYTE PTR [rcx],al
   14000d207:	add    BYTE PTR [rcx],cl
   14000d209:	add    al,0x0
   14000d20b:	add    al,dl
   14000d20d:	add    al,BYTE PTR [rax]
   14000d20f:	add    BYTE PTR [rax+0x680000db],ah
   14000d215:	(bad)  
	...
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	or     dl,ah
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	call   0x14000d22b
   14000d229:	add    BYTE PTR [rax],al
   14000d22b:	add    BYTE PTR [rax],al
   14000d22d:	add    BYTE PTR [rax],al
   14000d22f:	add    al,dh
   14000d231:	in     al,0x0
   14000d233:	add    BYTE PTR [rax],ch
   14000d235:	add    DWORD PTR [rax],eax
	...
   14000d23f:	add    BYTE PTR [rax],bl
   14000d241:	out    0x0,al
   14000d243:	add    BYTE PTR [rax+0xe],ch
   14000d249:	add    BYTE PTR [rax],al
   14000d24b:	add    BYTE PTR [rax],al
   14000d24d:	add    BYTE PTR [rax],al
   14000d24f:	add    al,al
   14000d251:	hlt    
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	test   al,0x8
	...
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	push   0x680000fd
   14000d265:	add    eax,0x0
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	add    BYTE PTR [rax],al
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	rol    BYTE PTR [rdx],1
   14000d272:	add    DWORD PTR [rax],eax
   14000d274:	int3   
   14000d275:	test   al,0x0
	...
   14000d27f:	add    BYTE PTR [rax-0x57fffe55],ah
   14000d285:	and    eax,0x0
   14000d28a:	add    BYTE PTR [rax],al
   14000d28c:	add    BYTE PTR [rax],al
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	rol    QWORD PTR [rcx],1
   14000d293:	add    BYTE PTR [rax+0x10],ch
   14000d299:	add    BYTE PTR [rax],al
   14000d29b:	add    BYTE PTR [rax],al
   14000d29d:	add    BYTE PTR [rax],al
   14000d29f:	add    al,dh
   14000d2a1:	loope  0x14000d2a4
   14000d2a3:	add    BYTE PTR [rax+0x4],ch
	...
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	pop    rax
   14000d2b1:	out    0x1,al
   14000d2b3:	add    BYTE PTR [rdx+0x0],dl
   14000d2b9:	add    BYTE PTR [rax],al
   14000d2bb:	add    BYTE PTR [rax],al
   14000d2bd:	add    BYTE PTR [rax],al
   14000d2bf:	add    BYTE PTR [rax-0x27],cl
   14000d2c2:	add    BYTE PTR [rax],al
   14000d2c4:	push   rsp
   14000d2c5:	add    al,BYTE PTR [rax]
	...
   14000d2cf:	add    BYTE PTR [rax],al
   14000d2d1:	rol    DWORD PTR [rax],cl
   14000d2d3:	add    BYTE PTR [rsi+0x6],al
	...
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	or     DWORD PTR [rax],eax
   14000d2e2:	rex.WB add BYTE PTR [r8+rax*1+0x49],al
   14000d2e7:	add    BYTE PTR [rdi+0x0],bl
   14000d2ea:	rex.WB add BYTE PTR [r11+0x0],al
   14000d2ee:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000d2f2:	xor    DWORD PTR [rax],eax
	...
   14000d300:	cmp    al,0x3f
   14000d302:	js     0x14000d371
   14000d304:	ins    BYTE PTR es:[rdi],dx
   14000d305:	and    BYTE PTR [rsi+0x65],dh
   14000d308:	jb     0x14000d37d
   14000d30a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000d311:	xor    BYTE PTR [rdx],ah
   14000d313:	and    BYTE PTR [rbp+0x6e],ah
   14000d316:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000d319:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000d320:	rex.RX sub eax,0x73202238
   14000d326:	je     0x14000d389
   14000d328:	outs   dx,BYTE PTR ds:[rsi]
   14000d329:	fs (bad) 
   14000d32b:	ins    BYTE PTR es:[rdi],dx
   14000d32c:	outs   dx,DWORD PTR ds:[rsi]
   14000d32d:	outs   dx,BYTE PTR ds:[rsi]
   14000d32e:	gs cmp eax,0x73657922
   14000d334:	and    bh,BYTE PTR [rdi]
   14000d336:	or     bh,BYTE PTR ds:[rcx+riz*2]
   14000d33a:	jae    0x14000d3af
   14000d33c:	gs ins DWORD PTR es:[rdi],dx
   14000d33e:	(bad)  
   14000d33f:	ins    BYTE PTR es:[rdi],dx
   14000d340:	jns    0x14000d362
   14000d342:	js     0x14000d3b1
   14000d344:	ins    BYTE PTR es:[rdi],dx
   14000d345:	outs   dx,BYTE PTR ds:[rsi]
   14000d346:	jae    0x14000d385
   14000d348:	and    dh,BYTE PTR [rbp+0x72]
   14000d34b:	outs   dx,BYTE PTR ds:[rsi]
   14000d34c:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d34f:	push   0x73616d65
   14000d354:	sub    eax,0x7263696d
   14000d359:	outs   dx,DWORD PTR ds:[rsi]
   14000d35a:	jae    0x14000d3cb
   14000d35c:	data16 je 0x14000d38c
   14000d35f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d362:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d365:	ins    DWORD PTR es:[rdi],dx
   14000d366:	cs jbe 0x14000d39a
   14000d369:	and    ah,BYTE PTR [rax]
   14000d36b:	ins    DWORD PTR es:[rdi],dx
   14000d36c:	(bad)  
   14000d36d:	outs   dx,BYTE PTR ds:[rsi]
   14000d36e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000d375:	jb     0x14000d3ea
   14000d377:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000d37e:	xor    BYTE PTR [rdx],ah
   14000d380:	and    BYTE PTR ds:[rdx],cl
   14000d383:	and    BYTE PTR [rax],ah
   14000d385:	cmp    al,0x61
   14000d387:	jae    0x14000d3fc
   14000d389:	gs ins DWORD PTR es:[rdi],dx
   14000d38b:	(bad)  
   14000d38c:	ins    BYTE PTR es:[rdi],dx
   14000d38d:	jns    0x14000d3d8
   14000d38f:	fs outs dx,BYTE PTR gs:[rsi]
   14000d392:	je     0x14000d3fd
   14000d394:	je     0x14000d40f
   14000d396:	and    BYTE PTR [rsi+0x65],dh
   14000d399:	jb     0x14000d40e
   14000d39b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37223d
   14000d3a2:	xor    al,0x2e
   14000d3a4:	xor    BYTE PTR [rsi],ch
   14000d3a6:	xor    BYTE PTR [rdx],ah
   14000d3a8:	or     ah,BYTE PTR [rax]
   14000d3aa:	and    BYTE PTR [rax],ah
   14000d3ac:	and    BYTE PTR [rax],ah
   14000d3ae:	jo     0x14000d422
   14000d3b0:	outs   dx,DWORD PTR ds:[rsi]
   14000d3b1:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d3b4:	jae    0x14000d425
   14000d3b6:	jb     0x14000d3f9
   14000d3b8:	jb     0x14000d41d
   14000d3ba:	push   0x63657469
   14000d3bf:	je     0x14000d436
   14000d3c1:	jb     0x14000d428
   14000d3c3:	cmp    eax,0xa222a22
   14000d3c8:	and    BYTE PTR [rax],ah
   14000d3ca:	and    BYTE PTR [rax],ah
   14000d3cc:	and    BYTE PTR [rsi+0x61],ch
   14000d3cf:	ins    DWORD PTR es:[rdi],dx
   14000d3d0:	gs cmp eax,0x5f776d22
   14000d3d6:	xor    al,0x61
   14000d3d8:	pop    rdi
   14000d3d9:	jne    0x14000d44b
   14000d3db:	fs (bad) 
   14000d3dd:	je     0x14000d444
   14000d3df:	and    cl,BYTE PTR [rdx]
   14000d3e1:	and    BYTE PTR [rax],ah
   14000d3e3:	and    BYTE PTR [rax],ah
   14000d3e5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000d3e9:	gs cmp eax,0x6e697722
   14000d3ef:	xor    esi,DWORD PTR [rdx]
   14000d3f1:	and    ch,BYTE PTR [rdi]
   14000d3f3:	and    BYTE PTR ds:[rdx],cl
   14000d3f6:	or     ah,BYTE PTR [rax]
   14000d3f8:	and    BYTE PTR [rsp+riz*2],bh
   14000d3fb:	gs jae 0x14000d461
   14000d3fe:	jb     0x14000d469
   14000d400:	jo     0x14000d476
   14000d402:	imul   ebp,DWORD PTR [rdi+0x6e],0x7463413e
   14000d409:	imul   esi,DWORD PTR [rsi+0x61],0x6e6f6974
   14000d410:	and    BYTE PTR [rbp+0x70],dl
   14000d413:	fs (bad) 
   14000d415:	je     0x14000d47c
   14000d417:	cmp    al,0x2f
   14000d419:	fs gs jae 0x14000d480
   14000d41d:	jb     0x14000d488
   14000d41f:	jo     0x14000d495
   14000d421:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a203e
   14000d428:	and    BYTE PTR [rcx+riz*1],bh
   14000d42b:	sub    eax,0x6449202d
   14000d430:	outs   dx,BYTE PTR gs:[rsi]
   14000d432:	je     0x14000d49d
   14000d434:	data16 jns 0x14000d457
   14000d437:	je     0x14000d4a1
   14000d439:	and    BYTE PTR gs:[rcx+0x70],ah
   14000d43d:	jo     0x14000d4ab
   14000d43f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d446:	and    BYTE PTR [rbx+0x65],dh
   14000d449:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d44c:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14000d454:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14000d45b:	jae    0x14000d48b
   14000d45d:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b1290
   14000d463:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d46a:	ins    DWORD PTR es:[rdi],dx
   14000d46b:	jbe    0x14000d49f
   14000d46d:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14000d471:	jae    0x14000d4e7
   14000d473:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d475:	outs   dx,WORD PTR ds:[rsi]
   14000d477:	and    BYTE PTR [rax+0x6d],bh
   14000d47a:	ins    BYTE PTR es:[rdi],dx
   14000d47b:	outs   dx,BYTE PTR ds:[rsi]
   14000d47c:	jae    0x14000d4b8
   14000d47e:	ins    DWORD PTR es:[rdi],dx
   14000d47f:	jae    0x14000d4e0
   14000d481:	(bad)  
   14000d482:	jae    0x14000d4f1
   14000d484:	jbe    0x14000d4b8
   14000d486:	cmp    eax,0x6e727522
   14000d48b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d48e:	push   0x73616d65
   14000d493:	sub    eax,0x7263696d
   14000d498:	outs   dx,DWORD PTR ds:[rsi]
   14000d499:	jae    0x14000d50a
   14000d49b:	data16 je 0x14000d4cb
   14000d49e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d4a1:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d4a4:	ins    DWORD PTR es:[rdi],dx
   14000d4a5:	cs jbe 0x14000d4da
   14000d4a8:	and    bh,BYTE PTR [rsi]
   14000d4aa:	or     ah,BYTE PTR [rax]
   14000d4ac:	and    BYTE PTR [rax],ah
   14000d4ae:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d4b5:	ins    DWORD PTR es:[rdi],dx
   14000d4b6:	jbe    0x14000d4ea
   14000d4b8:	cmp    dh,BYTE PTR [rbx+0x65]
   14000d4bb:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d4be:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2020200a
   14000d4c6:	and    BYTE PTR [rax],ah
   14000d4c8:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d4cf:	ins    DWORD PTR es:[rdi],dx
   14000d4d0:	jbe    0x14000d504
   14000d4d2:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d4d5:	jno    0x14000d54c
   14000d4d7:	gs jae 0x14000d54e
   14000d4da:	gs fs push rax
   14000d4dd:	jb     0x14000d548
   14000d4df:	jbe    0x14000d54a
   14000d4e1:	ins    BYTE PTR es:[rdi],dx
   14000d4e2:	gs addr32 gs jae 0x14000d525
   14000d4e7:	or     ah,BYTE PTR [rax]
   14000d4e9:	and    BYTE PTR [rax],ah
   14000d4eb:	and    BYTE PTR [rax],ah
   14000d4ed:	and    BYTE PTR [rax],ah
   14000d4ef:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d4f6:	ins    DWORD PTR es:[rdi],dx
   14000d4f7:	jbe    0x14000d52b
   14000d4f9:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d4fc:	jno    0x14000d573
   14000d4fe:	gs jae 0x14000d575
   14000d501:	gs fs rex.RB js 0x14000d56b
   14000d506:	movsxd esi,DWORD PTR [rbp+0x74]
   14000d509:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000d510:	ins    BYTE PTR es:[rdi],dx
   14000d511:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000d515:	gs ins BYTE PTR es:[rdi],dx
   14000d517:	cmp    eax,0x71657222
   14000d51c:	jne    0x14000d587
   14000d51e:	jb     0x14000d585
   14000d520:	rex.B
   14000d521:	fs ins DWORD PTR es:[rdi],dx
   14000d523:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14000d52a:	je     0x14000d59b
   14000d52c:	jb     0x14000d550
   14000d52e:	or     ah,BYTE PTR [rax]
   14000d530:	and    BYTE PTR [rax],ah
   14000d532:	and    BYTE PTR [rax],ah
   14000d534:	and    BYTE PTR [rax],ah
   14000d536:	and    BYTE PTR [rax],ah
   14000d538:	and    BYTE PTR [rbp+0x69],dh
   14000d53b:	movsxd esp,DWORD PTR [r11+0x65]
   14000d53f:	jae    0x14000d5b4
   14000d541:	cmp    eax,0x6c616622
   14000d546:	jae    0x14000d5ad
   14000d548:	and    bh,BYTE PTR [rsi]
   14000d54a:	or     ah,BYTE PTR [rax]
   14000d54c:	and    BYTE PTR [rax],ah
   14000d54e:	and    BYTE PTR [rax],ah
   14000d550:	and    BYTE PTR [rax],ah
   14000d552:	and    BYTE PTR [rdi+rbp*1],bh
   14000d555:	ins    DWORD PTR es:[rdi],dx
   14000d556:	jae    0x14000d5b7
   14000d558:	(bad)  
   14000d559:	jae    0x14000d5c8
   14000d55b:	jbe    0x14000d58f
   14000d55d:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d560:	jno    0x14000d5d7
   14000d562:	gs jae 0x14000d5d9
   14000d565:	gs fs rex.RB js 0x14000d5cf
   14000d56a:	movsxd esi,DWORD PTR [rbp+0x74]
   14000d56d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000d574:	ins    BYTE PTR es:[rdi],dx
   14000d575:	or     ah,BYTE PTR ds:[rax]
   14000d578:	and    BYTE PTR [rax],ah
   14000d57a:	and    BYTE PTR [rax],ah
   14000d57c:	and    BYTE PTR [rdi+rbp*1],bh
   14000d57f:	ins    DWORD PTR es:[rdi],dx
   14000d580:	jae    0x14000d5e1
   14000d582:	(bad)  
   14000d583:	jae    0x14000d5f2
   14000d585:	jbe    0x14000d5b9
   14000d587:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d58a:	jno    0x14000d601
   14000d58c:	gs jae 0x14000d603
   14000d58f:	gs fs push rax
   14000d592:	jb     0x14000d5fd
   14000d594:	jbe    0x14000d5ff
   14000d596:	ins    BYTE PTR es:[rdi],dx
   14000d597:	gs addr32 gs jae 0x14000d5da
   14000d59c:	or     ah,BYTE PTR [rax]
   14000d59e:	and    BYTE PTR [rax],ah
   14000d5a0:	and    BYTE PTR [rdi+rbp*1],bh
   14000d5a3:	ins    DWORD PTR es:[rdi],dx
   14000d5a4:	jae    0x14000d605
   14000d5a6:	(bad)  
   14000d5a7:	jae    0x14000d616
   14000d5a9:	jbe    0x14000d5dd
   14000d5ab:	cmp    dh,BYTE PTR [rbx+0x65]
   14000d5ae:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d5b1:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x3c20200a
   14000d5b9:	(bad)  
   14000d5ba:	ins    DWORD PTR es:[rdi],dx
   14000d5bb:	jae    0x14000d61c
   14000d5bd:	(bad)  
   14000d5be:	jae    0x14000d62d
   14000d5c0:	jbe    0x14000d5f4
   14000d5c2:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14000d5c6:	jae    0x14000d63c
   14000d5c8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d5ca:	outs   dx,WORD PTR ds:[rsi]
   14000d5cc:	or     cl,BYTE PTR ds:[rdx]
   14000d5cf:	and    BYTE PTR [rbx+riz*2],bh
   14000d5d2:	outs   dx,DWORD PTR ds:[rsi]
   14000d5d3:	ins    DWORD PTR es:[rdi],dx
   14000d5d4:	jo     0x14000d637
   14000d5d6:	je     0x14000d641
   14000d5d8:	(bad)  
   14000d5d9:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14000d5e1:	ins    BYTE PTR es:[rdi],dx
   14000d5e2:	outs   dx,BYTE PTR ds:[rsi]
   14000d5e3:	jae    0x14000d622
   14000d5e5:	and    dh,BYTE PTR [rbp+0x72]
   14000d5e8:	outs   dx,BYTE PTR ds:[rsi]
   14000d5e9:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d5ec:	push   0x73616d65
   14000d5f1:	sub    eax,0x7263696d
   14000d5f6:	outs   dx,DWORD PTR ds:[rsi]
   14000d5f7:	jae    0x14000d668
   14000d5f9:	data16 je 0x14000d629
   14000d5fc:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d5ff:	cmp    ah,BYTE PTR [rbx+0x6f]
   14000d602:	ins    DWORD PTR es:[rdi],dx
   14000d603:	jo     0x14000d666
   14000d605:	je     0x14000d670
   14000d607:	(bad)  
   14000d608:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14000d610:	and    bh,BYTE PTR [rsi]
   14000d612:	or     ah,BYTE PTR [rax]
   14000d614:	and    BYTE PTR [rax],ah
   14000d616:	and    BYTE PTR [rcx+riz*2],bh
   14000d619:	jo     0x14000d68b
   14000d61b:	ins    BYTE PTR es:[rdi],dx
   14000d61c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d623:	or     ah,BYTE PTR ds:[rax]
   14000d626:	and    BYTE PTR [rax],ah
   14000d628:	and    BYTE PTR [rax],ah
   14000d62a:	and    BYTE PTR [rcx+riz*1],bh
   14000d62d:	sub    eax,0x6957202d
   14000d632:	outs   dx,BYTE PTR ds:[rsi]
   14000d633:	outs   dx,DWORD PTR fs:[rsi]
   14000d635:	ja     0x14000d6aa
   14000d637:	and    BYTE PTR [rsi+0x69],dl
   14000d63a:	jae    0x14000d6b0
   14000d63c:	(bad)  
   14000d63d:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b1470
   14000d643:	and    BYTE PTR [rax],ah
   14000d645:	and    BYTE PTR [rax],ah
   14000d647:	and    BYTE PTR [rbx+rsi*2],bh
   14000d64a:	jne    0x14000d6bc
   14000d64c:	jo     0x14000d6bd
   14000d64e:	jb     0x14000d6c4
   14000d650:	gs fs rex.WRXB push r11
   14000d654:	and    BYTE PTR [rcx+0x64],cl
   14000d657:	cmp    eax,0x32657b22
   14000d65c:	xor    BYTE PTR [rcx],dh
   14000d65e:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   14000d665:	xor    al,0x36
   14000d667:	sub    eax,0x35633334
   14000d66c:	sub    eax,0x65663561
   14000d671:	sub    eax,0x64383030
   14000d676:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14000d67d:	xor    BYTE PTR [rbp+0x22],bh
   14000d680:	(bad)  
   14000d681:	or     ah,BYTE PTR ds:[rax]
   14000d684:	and    BYTE PTR [rax],ah
   14000d686:	and    BYTE PTR [rax],ah
   14000d688:	and    BYTE PTR [rcx+riz*1],bh
   14000d68b:	sub    eax,0x6957202d
   14000d690:	outs   dx,BYTE PTR ds:[rsi]
   14000d691:	outs   dx,DWORD PTR fs:[rsi]
   14000d693:	ja     0x14000d708
   14000d695:	and    BYTE PTR [rdi],dh
   14000d697:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b14ca
   14000d69d:	and    BYTE PTR [rax],ah
   14000d69f:	and    BYTE PTR [rax],ah
   14000d6a1:	and    BYTE PTR [rbx+rsi*2],bh
   14000d6a4:	jne    0x14000d716
   14000d6a6:	jo     0x14000d717
   14000d6a8:	jb     0x14000d71e
   14000d6aa:	gs fs rex.WRXB push r11
   14000d6ae:	and    BYTE PTR [rcx+0x64],cl
   14000d6b1:	cmp    eax,0x35337b22
   14000d6b6:	xor    DWORD PTR [rbx],esi
   14000d6b8:	cmp    BYTE PTR [rdx+0x39],ah
   14000d6bb:	(bad)  
   14000d6bc:	sub    eax,0x36396435
   14000d6c1:	sub    eax,0x64626634
   14000d6c6:	sub    eax,0x64326538
   14000d6cb:	sub    eax,0x34343261
   14000d6d0:	xor    BYTE PTR [rdx],dh
   14000d6d2:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a134103e
   14000d6d8:	jge    0x14000d6fc
   14000d6da:	(bad)  
   14000d6db:	or     ah,BYTE PTR ds:[rax]
   14000d6de:	and    BYTE PTR [rax],ah
   14000d6e0:	and    BYTE PTR [rax],ah
   14000d6e2:	and    BYTE PTR [rcx+riz*1],bh
   14000d6e5:	sub    eax,0x6957202d
   14000d6ea:	outs   dx,BYTE PTR ds:[rsi]
   14000d6eb:	outs   dx,DWORD PTR fs:[rsi]
   14000d6ed:	ja     0x14000d762
   14000d6ef:	and    BYTE PTR [rax],bh
   14000d6f1:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b1524
   14000d6f7:	and    BYTE PTR [rax],ah
   14000d6f9:	and    BYTE PTR [rax],ah
   14000d6fb:	and    BYTE PTR [rbx+rsi*2],bh
   14000d6fe:	jne    0x14000d770
   14000d700:	jo     0x14000d771
   14000d702:	jb     0x14000d778
   14000d704:	gs fs rex.WRXB push r11
   14000d708:	and    BYTE PTR [rcx+0x64],cl
   14000d70b:	cmp    eax,0x61347b22
   14000d710:	xor    ah,BYTE PTR [rsi+0x32]
   14000d713:	cmp    BYTE PTR [rbp+0x33],ah
   14000d716:	sub    eax,0x39623335
   14000d71b:	sub    eax,0x31343434
   14000d720:	sub    eax,0x63396162
   14000d725:	sub    eax,0x64393664
   14000d72a:	xor    al,0x61
   14000d72c:	xor    al,0x61
   14000d72e:	ss xor edi,DWORD PTR gs:[rax]
   14000d732:	jge    0x14000d756
   14000d734:	(bad)  
   14000d735:	or     ah,BYTE PTR ds:[rax]
   14000d738:	and    BYTE PTR [rax],ah
   14000d73a:	and    BYTE PTR [rax],ah
   14000d73c:	and    BYTE PTR [rcx+riz*1],bh
   14000d73f:	sub    eax,0x6957202d
   14000d744:	outs   dx,BYTE PTR ds:[rsi]
   14000d745:	outs   dx,DWORD PTR fs:[rsi]
   14000d747:	ja     0x14000d7bc
   14000d749:	and    BYTE PTR [rax],bh
   14000d74b:	xor    DWORD PTR cs:[rax],esp
   14000d74e:	sub    eax,0x200a3e2d
   14000d753:	and    BYTE PTR [rax],ah
   14000d755:	and    BYTE PTR [rax],ah
   14000d757:	and    BYTE PTR [rbx+rsi*2],bh
   14000d75a:	jne    0x14000d7cc
   14000d75c:	jo     0x14000d7cd
   14000d75e:	jb     0x14000d7d4
   14000d760:	gs fs rex.WRXB push r11
   14000d764:	and    BYTE PTR [rcx+0x64],cl
   14000d767:	cmp    eax,0x66317b22
   14000d76c:	ss (bad) 
   14000d76e:	movsxd esi,DWORD PTR ss:[rdi]
   14000d771:	ss sub eax,0x31653038
   14000d777:	sub    eax,0x39333234
   14000d77c:	sub    eax,0x62623539
   14000d781:	sub    eax,0x30643338
   14000d786:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   14000d78d:	cmp    BYTE PTR [rbp+0x22],bh
   14000d790:	(bad)  
   14000d791:	or     ah,BYTE PTR ds:[rax]
   14000d794:	and    BYTE PTR [rax],ah
   14000d796:	and    BYTE PTR [rax],ah
   14000d798:	and    BYTE PTR [rcx+riz*1],bh
   14000d79b:	sub    eax,0x6957202d
   14000d7a0:	outs   dx,BYTE PTR ds:[rsi]
   14000d7a1:	outs   dx,DWORD PTR fs:[rsi]
   14000d7a3:	ja     0x14000d818
   14000d7a5:	and    BYTE PTR [rcx],dh
   14000d7a7:	xor    BYTE PTR [rax],ah
   14000d7a9:	sub    eax,0xa203e2d
   14000d7ae:	and    BYTE PTR [rax],ah
   14000d7b0:	and    BYTE PTR [rax],ah
   14000d7b2:	and    BYTE PTR [rax],ah
   14000d7b4:	cmp    al,0x73
   14000d7b6:	jne    0x14000d828
   14000d7b8:	jo     0x14000d829
   14000d7ba:	jb     0x14000d830
   14000d7bc:	gs fs rex.WRXB push r11
   14000d7c0:	and    BYTE PTR [rcx+0x64],cl
   14000d7c3:	cmp    eax,0x65387b22
   14000d7c8:	xor    BYTE PTR [rsi+0x37],ah
   14000d7cb:	(bad)  
   14000d7cc:	xor    DWORD PTR [rdx],esi
   14000d7ce:	sub    eax,0x33626662
   14000d7d3:	sub    eax,0x38656634
   14000d7d8:	sub    eax,0x35613962
   14000d7dd:	sub    eax,0x64663834
   14000d7e2:	xor    eax,0x35316130
   14000d7e7:	(bad)  
   14000d7e8:	cmp    DWORD PTR [rcx+0x7d],esp
   14000d7eb:	and    ch,BYTE PTR [rdi]
   14000d7ed:	and    BYTE PTR ds:[rax],ah
   14000d7f0:	and    BYTE PTR [rdx],cl
   14000d7f2:	and    BYTE PTR [rax],ah
   14000d7f4:	and    BYTE PTR [rax],ah
   14000d7f6:	cmp    al,0x2f
   14000d7f8:	(bad)  
   14000d7f9:	jo     0x14000d86b
   14000d7fb:	ins    BYTE PTR es:[rdi],dx
   14000d7fc:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d803:	or     ah,BYTE PTR ds:[rax]
   14000d806:	and    BYTE PTR [rdi+rbp*1],bh
   14000d809:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d80c:	jo     0x14000d86f
   14000d80e:	je     0x14000d879
   14000d810:	(bad)  
   14000d811:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x20203e79
   14000d819:	or     cl,BYTE PTR [rdx]
   14000d81b:	and    BYTE PTR [rax],ah
   14000d81d:	cmp    al,0x21
   14000d81f:	sub    eax,0x614d202d
   14000d824:	imul   esp,DWORD PTR [rbp+0x20],0x74
   14000d828:	push   0x70612065
   14000d82d:	jo     0x14000d89b
   14000d82f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d836:	and    BYTE PTR [rax+rdx*2+0x49],al
   14000d83a:	and    BYTE PTR [rcx+0x77],ah
   14000d83d:	(bad)  
   14000d83e:	jb     0x14000d8a5
   14000d840:	and    BYTE PTR cs:[rip+0x200a3e2d],ch        # 0x1600b1674
   14000d847:	and    BYTE PTR [rcx+riz*2],bh
   14000d84a:	jae    0x14000d8b9
   14000d84c:	jbe    0x14000d881
   14000d84e:	cmp    ah,BYTE PTR [rcx+0x70]
   14000d851:	jo     0x14000d8bf
   14000d853:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d85a:	and    BYTE PTR [rax+0x6d],bh
   14000d85d:	ins    BYTE PTR es:[rdi],dx
   14000d85e:	outs   dx,BYTE PTR ds:[rsi]
   14000d85f:	jae    0x14000d89b
   14000d861:	(bad)  
   14000d862:	jae    0x14000d8d1
   14000d864:	jbe    0x14000d899
   14000d866:	cmp    eax,0x6e727522
   14000d86b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d86e:	push   0x73616d65
   14000d873:	sub    eax,0x7263696d
   14000d878:	outs   dx,DWORD PTR ds:[rsi]
   14000d879:	jae    0x14000d8ea
   14000d87b:	data16 je 0x14000d8ab
   14000d87e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d881:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d884:	ins    DWORD PTR es:[rdi],dx
   14000d885:	cs jbe 0x14000d8bb
   14000d888:	and    bh,BYTE PTR [rsi]
   14000d88a:	or     ah,BYTE PTR [rax]
   14000d88c:	and    BYTE PTR [rax],ah
   14000d88e:	and    BYTE PTR [rcx+riz*2],bh
   14000d891:	jae    0x14000d900
   14000d893:	jbe    0x14000d8c8
   14000d895:	cmp    dh,BYTE PTR [rdi+0x69]
   14000d898:	outs   dx,BYTE PTR ds:[rsi]
   14000d899:	outs   dx,DWORD PTR fs:[rsi]
   14000d89b:	ja     0x14000d910
   14000d89d:	push   rbx
   14000d89e:	gs je  0x14000d915
   14000d8a1:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14000d8a8:	ins    BYTE PTR es:[rdi],dx
   14000d8a9:	outs   dx,BYTE PTR ds:[rsi]
   14000d8aa:	jae    0x14000d8e9
   14000d8ac:	and    ch,BYTE PTR [rax+0x74]
   14000d8af:	je     0x14000d921
   14000d8b1:	cmp    ch,BYTE PTR [rdi]
   14000d8b3:	(bad)  
   14000d8b4:	jae    0x14000d919
   14000d8b6:	push   0x73616d65
   14000d8bb:	cs ins DWORD PTR es:[rdi],dx
   14000d8bd:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000d8c4:	je     0x14000d8f4
   14000d8c6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d8c9:	(bad)  
   14000d8ca:	push   rbx
   14000d8cb:	rex.WRB
   14000d8cc:	rex.WB (bad) 
   14000d8ce:	xor    dh,BYTE PTR [rax]
   14000d8d0:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a3005
   14000d8d6:	outs   dx,DWORD PTR fs:[rsi]
   14000d8d8:	ja     0x14000d94d
   14000d8da:	push   rbx
   14000d8db:	gs je  0x14000d952
   14000d8de:	imul   ebp,DWORD PTR [rsi+0x67],0xa3e2273
   14000d8e5:	and    BYTE PTR [rax],ah
   14000d8e7:	and    BYTE PTR [rax],ah
   14000d8e9:	and    BYTE PTR [rax],ah
   14000d8eb:	cmp    al,0x64
   14000d8ed:	jo     0x14000d958
   14000d8ef:	rex.B ja 0x14000d953
   14000d8f2:	jb     0x14000d959
   14000d8f4:	ds je  0x14000d969
   14000d8f7:	jne    0x14000d95e
   14000d8f9:	cmp    al,0x2f
   14000d8fb:	fs jo  0x14000d967
   14000d8fe:	rex.B ja 0x14000d962
   14000d901:	jb     0x14000d968
   14000d903:	or     ah,BYTE PTR ds:[rax]
   14000d906:	and    BYTE PTR [rax],ah
   14000d908:	and    BYTE PTR [rdi+rbp*1],bh
   14000d90b:	(bad)  
   14000d90c:	jae    0x14000d97b
   14000d90e:	jbe    0x14000d943
   14000d910:	cmp    dh,BYTE PTR [rdi+0x69]
   14000d913:	outs   dx,BYTE PTR ds:[rsi]
   14000d914:	outs   dx,DWORD PTR fs:[rsi]
   14000d916:	ja     0x14000d98b
   14000d918:	push   rbx
   14000d919:	gs je  0x14000d990
   14000d91c:	imul   ebp,DWORD PTR [rsi+0x67],0x200a3e73
   14000d923:	and    BYTE PTR [rdi+rbp*1],bh
   14000d926:	(bad)  
   14000d927:	jae    0x14000d996
   14000d929:	jbe    0x14000d95e
   14000d92b:	cmp    ah,BYTE PTR [rcx+0x70]
   14000d92e:	jo     0x14000d99c
   14000d930:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d937:	or     bh,BYTE PTR ds:[rdi+rbp*1]
   14000d93b:	(bad)  
   14000d93c:	jae    0x14000d9b1
   14000d93e:	gs ins DWORD PTR es:[rdi],dx
   14000d940:	(bad)  
   14000d941:	ins    BYTE PTR es:[rdi],dx
   14000d942:	jns    0x14000d982
   14000d944:	or     cl,BYTE PTR [rdx]
   14000d946:	add    BYTE PTR [rax],al
   14000d948:	push   rsp
   14000d949:	add    dh,BYTE PTR [rax+rax*1]
   14000d94c:	add    BYTE PTR [rax],al
   14000d94e:	push   rsi
   14000d94f:	add    BYTE PTR [rbx+0x0],dl
   14000d952:	pop    rdi
   14000d953:	add    BYTE PTR [rsi+0x0],dl
   14000d956:	add    BYTE PTR [r10+0x0],r10b
   14000d95a:	push   rbx
   14000d95b:	add    BYTE PTR [rcx+0x0],cl
   14000d95e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000d962:	pop    rdi
   14000d963:	add    BYTE PTR [rcx+0x0],cl
   14000d966:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000d96a:	rex.WRXB add BYTE PTR [r8],r8b
   14000d96d:	add    BYTE PTR [rax],al
   14000d96f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000d975:	add    BYTE PTR [rcx],al
   14000d977:	add    BYTE PTR [rax],al
   14000d979:	add    BYTE PTR [rcx],dl
   14000d97b:	add    BYTE PTR [rax],al
   14000d97d:	add    BYTE PTR [rax],al
   14000d97f:	add    BYTE PTR [rax],al
   14000d981:	add    BYTE PTR [rcx],dl
   14000d983:	add    BYTE PTR [rax],al
   14000d985:	add    BYTE PTR [rax],al
   14000d987:	add    BYTE PTR [rdi],bh
   14000d989:	add    BYTE PTR [rax],al
   14000d98b:	add    BYTE PTR [rax],al
   14000d98d:	add    BYTE PTR [rax],al
   14000d98f:	add    BYTE PTR [rax+rax*1],al
   14000d992:	add    al,0x0
   14000d994:	add    DWORD PTR [rax],eax
	...
   14000d9a2:	add    BYTE PTR [rax],al
   14000d9a4:	mov    ah,0x1
   14000d9a6:	add    BYTE PTR [rax],al
   14000d9a8:	add    DWORD PTR [rax],eax
   14000d9aa:	push   rbx
   14000d9ab:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000d9af:	add    BYTE PTR [rcx+0x0],ch
   14000d9b2:	outs   dx,BYTE PTR ds:[rsi]
   14000d9b3:	add    BYTE PTR [rdi+0x0],ah
   14000d9b6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d9ba:	ins    BYTE PTR es:[rdi],dx
   14000d9bb:	add    BYTE PTR [rbp+0x0],ah
   14000d9be:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d9c2:	data16 add BYTE PTR [rdi+0x0],ch
   14000d9c6:	add    BYTE PTR [rax],al
   14000d9c8:	nop
   14000d9c9:	add    DWORD PTR [rax],eax
   14000d9cb:	add    BYTE PTR [rcx],al
   14000d9cd:	add    BYTE PTR [rax],dh
   14000d9cf:	add    BYTE PTR [rax+rax*1],dh
   14000d9d2:	xor    BYTE PTR [rax],al
   14000d9d4:	cmp    DWORD PTR [rax],eax
   14000d9d6:	xor    BYTE PTR [rax],al
   14000d9d8:	xor    al,0x0
   14000d9da:	(bad)  
   14000d9db:	add    BYTE PTR [rax],dh
   14000d9dd:	add    BYTE PTR [rax],al
   14000d9df:	add    BYTE PTR [rsi+0x0],al
   14000d9e2:	adc    eax,DWORD PTR [rax]
   14000d9e4:	add    DWORD PTR [rax],eax
   14000d9e6:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d9ea:	ins    DWORD PTR es:[rdi],dx
   14000d9eb:	add    BYTE PTR [rax+0x0],dh
   14000d9ee:	(bad)  
   14000d9ef:	add    BYTE PTR [rsi+0x0],ch
   14000d9f2:	jns    0x14000d9f4
   14000d9f4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d9f8:	ins    DWORD PTR es:[rdi],dx
   14000d9f9:	add    BYTE PTR [rbp+0x0],ah
   14000d9fc:	add    BYTE PTR [rax],al
   14000d9fe:	add    BYTE PTR [rax],al
   14000da00:	push   rsp
   14000da01:	add    BYTE PTR [rax+0x0],ch
   14000da04:	add    BYTE PTR gs:[rax],ah
   14000da07:	add    BYTE PTR [rbp+0x0],cl
   14000da0a:	(bad)  
   14000da0b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000da0f:	add    BYTE PTR [rdi+0x0],dl
   14000da12:	outs   dx,DWORD PTR ds:[rsi]
   14000da13:	add    BYTE PTR [rdx+0x0],dh
   14000da16:	imul   eax,DWORD PTR [rax],0x73
   14000da19:	add    BYTE PTR [rax+rax*1],ch
   14000da1c:	and    BYTE PTR [rax],al
   14000da1e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000da22:	movsxd eax,DWORD PTR [rax]
   14000da24:	add    BYTE PTR [rax],al
   14000da26:	add    BYTE PTR [rax],al
   14000da28:	rex.X add BYTE PTR [rip+0x46000100],cl        # 0x18600db2f
   14000da2f:	add    BYTE PTR [rcx+0x0],ch
   14000da32:	ins    BYTE PTR es:[rdi],dx
   14000da33:	add    BYTE PTR [rbp+0x0],ah
   14000da36:	add    BYTE PTR [rbp+0x0],r12b
   14000da3a:	jae    0x14000da3c
   14000da3c:	movsxd eax,DWORD PTR [rax]
   14000da3e:	jb     0x14000da40
   14000da40:	imul   eax,DWORD PTR [rax],0x740070
   14000da46:	imul   eax,DWORD PTR [rax],0x6e006f
   14000da4c:	add    BYTE PTR [rax],al
   14000da4e:	add    BYTE PTR [rax],al
   14000da50:	ins    DWORD PTR es:[rdi],dx
   14000da51:	add    BYTE PTR [rdi+0x0],dh
   14000da54:	pop    rdi
   14000da55:	add    BYTE PTR [rax+rax*1],dh
   14000da58:	(bad)  
   14000da59:	add    BYTE PTR [rdi+0x0],bl
   14000da5c:	jne    0x14000da5e
   14000da5e:	jo     0x14000da60
   14000da60:	add    BYTE PTR fs:[rcx+0x0],ah
   14000da64:	je     0x14000da66
   14000da66:	add    BYTE PTR gs:[rax],al
   14000da69:	add    BYTE PTR [rax],al
   14000da6b:	add    BYTE PTR [rax],ah
   14000da6d:	add    BYTE PTR [rax],al
   14000da6f:	add    BYTE PTR [rcx],al
   14000da71:	add    BYTE PTR [rsi+0x0],al
   14000da74:	imul   eax,DWORD PTR [rax],0x65006c
   14000da7a:	push   rsi
   14000da7b:	add    BYTE PTR [rbp+0x0],ah
   14000da7e:	jb     0x14000da80
   14000da80:	jae    0x14000da82
   14000da82:	imul   eax,DWORD PTR [rax],0x6e006f
   14000da88:	add    BYTE PTR [rax],al
   14000da8a:	add    BYTE PTR [rax],al
   14000da8c:	cmp    al,BYTE PTR [rax]
   14000da8e:	or     eax,0x49000100
   14000da93:	add    BYTE PTR [rsi+0x0],ch
   14000da96:	je     0x14000da98
   14000da98:	add    BYTE PTR gs:[rdx+0x0],dh
   14000da9c:	outs   dx,BYTE PTR ds:[rsi]
   14000da9d:	add    BYTE PTR [rcx+0x0],ah
   14000daa0:	ins    BYTE PTR es:[rdi],dx
   14000daa1:	add    BYTE PTR [rsi+0x0],cl
   14000daa4:	(bad)  
   14000daa5:	add    BYTE PTR [rbp+0x0],ch
   14000daa8:	add    BYTE PTR gs:[rax],al
   14000daab:	add    BYTE PTR [rbp+0x0],ch
   14000daae:	ja     0x14000dab0
   14000dab0:	pop    rdi
   14000dab1:	add    BYTE PTR [rax+rax*1],dh
   14000dab4:	(bad)  
   14000dab5:	add    BYTE PTR [rdi+0x0],bl
   14000dab8:	jne    0x14000daba
   14000daba:	jo     0x14000dabc
   14000dabc:	add    BYTE PTR fs:[rcx+0x0],ah
   14000dac0:	je     0x14000dac2
   14000dac2:	add    BYTE PTR gs:[rax],al
   14000dac5:	add    BYTE PTR [rax],al
   14000dac7:	add    BYTE PTR [rax+rax*1],ah
   14000daca:	add    BYTE PTR [rax],al
   14000dacc:	add    DWORD PTR [rax],eax
   14000dace:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000dad2:	add    BYTE PTR [ecx+0x0],ah
   14000dad6:	ins    BYTE PTR es:[rdi],dx
   14000dad7:	add    BYTE PTR [rbx+0x0],al
   14000dada:	outs   dx,DWORD PTR ds:[rsi]
   14000dadb:	add    BYTE PTR [rax+0x0],dh
   14000dade:	jns    0x14000dae0
   14000dae0:	jb     0x14000dae2
   14000dae2:	imul   eax,DWORD PTR [rax],0x680067
   14000dae8:	je     0x14000daea
   14000daea:	add    BYTE PTR [rax],al
   14000daec:	sub    BYTE PTR [rax],al
   14000daee:	add    BYTE PTR [rax],al
   14000daf0:	add    DWORD PTR [rax],eax
   14000daf2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000daf6:	imul   eax,DWORD PTR [rax],0x690067
   14000dafc:	outs   dx,BYTE PTR ds:[rsi]
   14000dafd:	add    BYTE PTR [rcx+0x0],ah
   14000db00:	ins    BYTE PTR es:[rdi],dx
   14000db01:	add    BYTE PTR [rsi+0x0],al
   14000db04:	imul   eax,DWORD PTR [rax],0x65006c
   14000db0a:	outs   dx,BYTE PTR ds:[rsi]
   14000db0b:	add    BYTE PTR [rcx+0x0],ah
   14000db0e:	ins    DWORD PTR es:[rdi],dx
   14000db0f:	add    BYTE PTR [rbp+0x0],ah
   14000db12:	add    BYTE PTR [rax],al
   14000db14:	and    BYTE PTR [rax],al
   14000db16:	add    BYTE PTR [rax],al
   14000db18:	add    DWORD PTR [rax],eax
   14000db1a:	push   rax
   14000db1b:	add    BYTE PTR [rdx+0x0],dh
   14000db1e:	outs   dx,DWORD PTR ds:[rsi]
   14000db1f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000db23:	add    BYTE PTR [rbx+0x0],ah
   14000db26:	je     0x14000db28
   14000db28:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000db2c:	ins    DWORD PTR es:[rdi],dx
   14000db2d:	add    BYTE PTR [rbp+0x0],ah
   14000db30:	add    BYTE PTR [rax],al
   14000db32:	add    BYTE PTR [rax],al
   14000db34:	and    al,0x0
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	add    DWORD PTR [rax],eax
   14000db3a:	push   rax
   14000db3b:	add    BYTE PTR [rdx+0x0],dh
   14000db3e:	outs   dx,DWORD PTR ds:[rsi]
   14000db3f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000db43:	add    BYTE PTR [rbx+0x0],ah
   14000db46:	je     0x14000db48
   14000db48:	push   rsi
   14000db49:	add    BYTE PTR [rbp+0x0],ah
   14000db4c:	jb     0x14000db4e
   14000db4e:	jae    0x14000db50
   14000db50:	imul   eax,DWORD PTR [rax],0x6e006f
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	add    BYTE PTR [rax],r8b
   14000db5b:	add    BYTE PTR [rcx],al
   14000db5d:	add    BYTE PTR [rsi+0x0],dl
   14000db60:	(bad)  
   14000db61:	add    BYTE PTR [rdx+0x0],dh
   14000db64:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000db68:	ins    BYTE PTR es:[rdi],dx
   14000db69:	add    BYTE PTR [rbp+0x0],ah
   14000db6c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000db70:	data16 add BYTE PTR [rdi+0x0],ch
   14000db74:	add    BYTE PTR [rax],al
   14000db76:	add    BYTE PTR [rax],al
   14000db78:	and    al,0x0
   14000db7a:	add    al,0x0
   14000db7c:	add    BYTE PTR [rax],al
   14000db7e:	push   rsp
   14000db7f:	add    BYTE PTR [rdx+0x0],dh
   14000db82:	(bad)  
   14000db83:	add    BYTE PTR [rsi+0x0],ch
   14000db86:	jae    0x14000db88
   14000db88:	ins    BYTE PTR es:[rdi],dx
   14000db89:	add    BYTE PTR [rcx+0x0],ah
   14000db8c:	je     0x14000db8e
   14000db8e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000db94:	add    BYTE PTR [rax],al
   14000db96:	add    BYTE PTR [rax],al
   14000db98:	or     DWORD PTR [rax+rsi*4],eax
   14000db9b:	add    al,0x0
   14000db9d:	add    BYTE PTR [rax],al
   14000db9f:	add    BYTE PTR [rax],ch
   14000dba1:	add    BYTE PTR [rax],al
   14000dba3:	add    BYTE PTR [rax],dh
   14000dba5:	add    BYTE PTR [rax],al
   14000dba7:	add    BYTE PTR [rax+0x0],ah
   14000dbaa:	add    BYTE PTR [rax],al
   14000dbac:	add    DWORD PTR [rax],eax
   14000dbae:	add    al,0x0
   14000dbb0:	add    BYTE PTR [rax],al
   14000dbb2:	add    BYTE PTR [rax],al
   14000dbb4:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000dbcc:	add    BYTE PTR [rax],al
   14000dbce:	add    BYTE PTR [rax],0x0
   14000dbd1:	add    BYTE PTR [rax],0x0
   14000dbd4:	add    BYTE PTR [rax+0x800080],al
   14000dbda:	add    BYTE PTR [rax],al
   14000dbdc:	add    BYTE PTR [rax],0x80
   14000dbdf:	add    BYTE PTR [rax-0x7fffff80],al
   14000dbe5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000dbec:	add    BYTE PTR [rax],al
   14000dbee:	inc    DWORD PTR [rax]
   14000dbf0:	add    bh,bh
   14000dbf2:	add    BYTE PTR [rax],al
   14000dbf4:	add    bh,bh
   14000dbf6:	inc    DWORD PTR [rax]
   14000dbf8:	inc    DWORD PTR [rax]
   14000dbfa:	add    BYTE PTR [rax],al
   14000dbfc:	inc    DWORD PTR [rax]
   14000dbfe:	inc    DWORD PTR [rax]
   14000dc00:	(bad)  
   14000dc01:	inc    DWORD PTR [rax]
   14000dc03:	add    bh,bh
   14000dc05:	(bad)  
   14000dc06:	inc    DWORD PTR [rax]
	...
   14000dc40:	add    BYTE PTR [rax],al
   14000dc42:	or     BYTE PTR [rax],al
	...
   14000dc58:	add    BYTE PTR [rax],al
   14000dc5a:	mov    edi,DWORD PTR [rax+0x0]
	...
   14000dc70:	add    BYTE PTR [rax],al
   14000dc72:	mov    bh,0xb9
   14000dc74:	mov    al,0x0
	...
   14000dc86:	add    BYTE PTR [rax],al
   14000dc88:	add    BYTE PTR [rax],cl
   14000dc8a:	mov    ecx,0x808b8b
	...
   14000dc9f:	add    BYTE PTR [rax],al
   14000dca1:	(bad)  
   14000dca2:	mov    eax,0x7889b9
	...
   14000dcb7:	add    BYTE PTR [rax],al
   14000dcb9:	or     ebx,DWORD PTR [rbx-0x7f466485]
	...
   14000dccf:	add    BYTE PTR [rax],al
   14000dcd1:	jns    0x14000dc5c
   14000dcd3:	mov    DWORD PTR [rcx+0xb089],ecx
	...
   14000dce9:	cwde   
   14000dcea:	fwait
   14000dceb:	fwait
   14000dcec:	jnp    0x14000dc86
   14000dcee:	cwde   
	...
   14000dcff:	add    BYTE PTR [rdi],al
   14000dd01:	cmp    DWORD PTR [rcx-0x77],edi
   14000dd04:	cwde   
   14000dd05:	fwait
   14000dd06:	jns    0x14000dc88
   14000dd08:	add    BYTE PTR [rax],al
   14000dd0a:	add    BYTE PTR [rax],al
   14000dd0c:	add    BYTE PTR [rax],al
   14000dd0e:	add    BYTE PTR [rdi],al
	...
   14000dd18:	add    DWORD PTR [rbx+0x79b99797],edx
   14000dd1e:	mov    bh,0x98
   14000dd20:	add    BYTE PTR [rax],al
   14000dd22:	add    BYTE PTR [rax],al
   14000dd24:	add    BYTE PTR [rax],al
   14000dd26:	add    BYTE PTR [rax+0x0],dl
   14000dd2c:	add    BYTE PTR [rax],al
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	(bad)  
   14000dd31:	(bad)  
   14000dd32:	adc    edi,DWORD PTR [rcx]
   14000dd34:	jns    0x14000dced
   14000dd36:	fwait
   14000dd37:	fwait
   14000dd38:	jo     0x14000dd3a
   14000dd3a:	add    BYTE PTR [rax],al
   14000dd3c:	add    BYTE PTR [rax],al
   14000dd3e:	add    esi,DWORD PTR [rax+0x0]
   14000dd41:	add    BYTE PTR [rax],al
   14000dd43:	add    BYTE PTR [rax],al
   14000dd45:	add    BYTE PTR [rax],al
   14000dd47:	(bad)  
   14000dd48:	adc    DWORD PTR [rcx],edx
   14000dd4a:	xchg   ebp,eax
   14000dd4b:	xchg   edi,eax
   14000dd4c:	xchg   edi,eax
   14000dd4d:	xchg   edi,eax
   14000dd4e:	cwde   
   14000dd4f:	jns    0x14000dcd8
   14000dd51:	add    BYTE PTR [rax],al
   14000dd53:	add    BYTE PTR [rax],al
   14000dd55:	add    BYTE PTR [rbp+0x0],dl
   14000dd5b:	add    BYTE PTR [rax],al
   14000dd5d:	jo     0x14000dd5f
   14000dd5f:	jno    0x14000dd72
   14000dd61:	jno    0x14000dd94
   14000dd63:	cmp    DWORD PTR [rcx],edi
   14000dd65:	jns    0x14000dd20
   14000dd67:	mov    bh,0x9b
   14000dd69:	jo     0x14000dd6b
   14000dd6b:	add    BYTE PTR [rax],al
   14000dd6d:	jns    0x14000dde8
   14000dd6f:	add    BYTE PTR [rax],al
   14000dd71:	add    BYTE PTR [rax],al
   14000dd73:	add    BYTE PTR [rsi+0x116467e7],al
   14000dd79:	adc    DWORD PTR [rcx+0x71],edx
   14000dd7c:	jns    0x14000ddb5
   14000dd7e:	cwde   
   14000dd7f:	fwait
   14000dd80:	jns    0x14000dd39
   14000dd82:	add    BYTE PTR [rax],0x7
   14000dd85:	xchg   edi,eax
   14000dd86:	cwde   
   14000dd87:	add    BYTE PTR [rax],al
   14000dd89:	add    BYTE PTR [rax],al
   14000dd8b:	(bad)  
   14000dd8c:	out    0xc8,eax
   14000dd8e:	enter  0x1466,0x13
   14000dd92:	adc    DWORD PTR [rcx],ebx
   14000dd94:	(bad)  
   14000dd95:	cdq    
   14000dd96:	jns    0x14000de11
   14000dd98:	mov    eax,0x9997989b
   14000dd9d:	jns    0x14000ddcf
   14000dd9f:	add    BYTE PTR [rax],al
   14000dda1:	add    BYTE PTR [rax],al
   14000dda3:	out    0xc8,eax
   14000dda5:	out    0xe7,eax
   14000dda7:	(bad)  
   14000dda8:	(bad)  
   14000dda9:	adc    DWORD PTR [rdi],edx
   14000ddab:	(bad)  
   14000ddac:	sbb    DWORD PTR [rbx-0x68],esi
   14000ddaf:	mov    bh,0x98
   14000ddb1:	mov    bh,0x7b
   14000ddb3:	fwait
   14000ddb4:	xchg   edi,eax
   14000ddb5:	xchg   ebx,eax
   14000ddb6:	push   rax
   14000ddb7:	add    BYTE PTR [rax],al
   14000ddb9:	add    BYTE PTR [rsi+0x7e],bh
   14000ddbc:	jle    0x14000dd86
   14000ddbe:	enter  0x6668,0x5
   14000ddc2:	adc    DWORD PTR [rcx],edx
   14000ddc4:	xor    DWORD PTR [rdi+0x79b99793],edx
   14000ddca:	mov    ecx,0x797989
   14000ddcf:	add    BYTE PTR [rax],al
   14000ddd1:	(bad)  
   14000ddd2:	out    0xc8,eax
   14000ddd4:	enter  0x7e6e,0x7c
   14000ddd8:	jbe    0x14000de2a
   14000ddda:	xor    DWORD PTR [rcx],edx
   14000dddc:	push   rbx
   14000dddd:	push   rbx
   14000ddde:	xchg   edi,eax
   14000dddf:	cwde   
   14000dde0:	fwait
   14000dde1:	jnp    0x14000de5c
   14000dde3:	jns    0x14000dd7c
   14000dde5:	xchg   edi,eax
   14000dde6:	add    BYTE PTR [rax],al
   14000dde8:	or     bh,ah
   14000ddea:	jle    0x14000de6a
   14000ddec:	jle    0x14000de6a
   14000ddee:	mov    WORD PTR [rsi+0x71016586],es
   14000ddf4:	adc    DWORD PTR [rdi-0x46764669],edx
   14000ddfa:	mov    DWORD PTR [rdi+0x9793],esi
   14000de00:	xchg   BYTE PTR [rdi+riz*8+0x6ee87c7e],cl
   14000de07:	jl     0x14000de80
   14000de09:	jbe    0x14000de1b
   14000de0b:	adc    DWORD PTR [rip+0xffffffffb8793931],esi        # 0xf87a1742
   14000de11:	cwde   
   14000de12:	mov    ecx,0x707979
   14000de17:	add    BYTE PTR [rax],al
   14000de19:	mov    bh,ah
   14000de1b:	jl     0x14000de05
   14000de1d:	addr32 out 0x7e,eax
   14000de20:	jl     0x14000de98
   14000de22:	push   rcx
   14000de23:	adc    eax,0x98971711
   14000de28:	fwait
   14000de29:	mov    DWORD PTR [rbx-0x69],edi
   14000de2c:	cdq    
   14000de2d:	jo     0x14000de2f
   14000de2f:	add    BYTE PTR [rax],al
   14000de31:	add    BYTE PTR [rax],cl
   14000de33:	call   0xcc8d5ab6
   14000de38:	xchg   BYTE PTR [rax+riz*2+0x30],dh
   14000de3c:	xor    DWORD PTR [rcx],edi
   14000de3e:	jns    0x14000ddf9
   14000de40:	mov    ebx,DWORD PTR [rbx+0x70799997]
   14000de46:	add    BYTE PTR [rax],al
   14000de48:	add    BYTE PTR [rax],al
   14000de4a:	add    BYTE PTR [rax],cl
   14000de4c:	in     al,dx
   14000de4d:	mov    gs,WORD PTR [rsi+0x76]
   14000de50:	je     0x14000de63
   14000de52:	rex.RXB add eax,0x7b395111
   14000de58:	cwde   
   14000de59:	mov    bh,0x79
   14000de5b:	mov    DWORD PTR [rcx+0x0],edi
   14000de5e:	add    BYTE PTR [rax],al
   14000de60:	add    BYTE PTR [rax],al
   14000de62:	add    BYTE PTR [rax],al
   14000de64:	add    BYTE PTR [rdi+rax*4+0x70141c7],cl
   14000de6b:	add    DWORD PTR [rcx],edx
   14000de6d:	xor    DWORD PTR [rbx-0x68],edx
   14000de70:	fwait
   14000de71:	cwde   
   14000de72:	fwait
   14000de73:	xchg   edi,eax
   14000de74:	xchg   edi,eax
	...
   14000de7d:	add    BYTE PTR [rsi+0x14163474],cl
   14000de83:	jo     0x14000ded6
   14000de85:	(bad)  
   14000de86:	xchg   edi,eax
   14000de87:	fwait
   14000de88:	js     0x14000de43
   14000de8a:	mov    DWORD PTR [rcx+0x38],edi
	...
   14000de95:	add    BYTE PTR [rax],al
   14000de97:	je     0x14000deb0
   14000de99:	add    DWORD PTR [rcx+0x61],eax
   14000de9c:	add    edx,DWORD PTR [rcx]
   14000de9e:	sbb    DWORD PTR [rcx-0x47],edi
   14000dea1:	mov    edx,DWORD PTR [rbx+0x9097]
	...
   14000deaf:	(bad)  
   14000deb0:	gs gs and eax,0x17175106
   14000deb7:	cwde   
   14000deb8:	fwait
   14000deb9:	jns    0x14000de44
   14000debb:	jns    0x14000df2d
	...
   14000dec5:	add    BYTE PTR [rax],al
   14000dec7:	add    BYTE PTR [rsi+0x67],ah
   14000deca:	rex.RXB push r14
   14000decc:	adc    BYTE PTR [rcx],dl
   14000dece:	adc    ebx,DWORD PTR [rbx-0x66688475]
	...
   14000dee0:	(bad)  
   14000dee1:	(bad)  
   14000dee2:	data16 rex.RXB (bad) 
   14000dee5:	push   rbx
   14000dee6:	(bad)  
   14000dee7:	xchg   edi,eax
   14000dee8:	fwait
   14000dee9:	jns    0x14000dea4
   14000deeb:	jns    0x14000deed
	...
   14000def9:	out    0x67,eax
   14000defb:	fs je  0x14000df0f
   14000defe:	adc    DWORD PTR [rbx-0x75],edi
   14000df01:	jnp    0x14000df5c
   14000df03:	ja     0x14000df05
	...
   14000df11:	add    BYTE PTR [rsi+riz*2+0x66],bh
   14000df15:	adc    DWORD PTR [rcx-0x67],esi
   14000df18:	mov    bh,0xb9
   14000df1a:	jns    0x14000deac
	...
   14000df28:	add    BYTE PTR [rax],al
   14000df2a:	add    BYTE PTR [rsi+0x76],dh
   14000df2d:	adc    esi,DWORD PTR [r15-0x45]
   14000df31:	jns    0x14000dfac
   14000df33:	jo     0x14000df35
	...
   14000df41:	add    BYTE PTR [rax],al
   14000df43:	(bad)  
   14000df44:	(bad)  
   14000df45:	jo     0x14000df5c
   14000df47:	fwait
   14000df48:	jnp    0x14000dfc5
   14000df4a:	xchg   edi,eax
   14000df4b:	nop
	...
   14000df5c:	xchg   BYTE PTR [rbp+0x13],ah
   14000df5f:	sbb    DWORD PTR [rbx+0x7979],ecx
	...
   14000df71:	add    BYTE PTR [rax],al
   14000df73:	add    BYTE PTR [riz*8-0x464784ff],cl
   14000df7a:	xchg   edi,eax
	...
   14000df8b:	add    BYTE PTR [rax],al
   14000df8d:	adc    WORD PTR [rdi],dx
   14000df90:	mov    ebx,0x9797
	...
   14000dfa5:	xchg   BYTE PTR [rbp+0x19],dh
   14000dfa8:	mov    ecx,DWORD PTR [rcx+0x70]
	...
   14000dfba:	add    BYTE PTR [rax],al
   14000dfbc:	add    BYTE PTR [rsi],al
   14000dfbe:	(bad)  
   14000dfbf:	(bad)  
   14000dfc0:	mov    eax,0x9093
	...
   14000dfd5:	add    BYTE PTR [rcx+rbx*1-0x45],dh
   14000dfd9:	xchg   edi,eax
	...
   14000dfee:	jbe    0x14000e007
   14000dff0:	mov    ebx,DWORD PTR [rcx+0x0]
	...
   14000e003:	add    BYTE PTR [rax],al
   14000e005:	add    BYTE PTR [rsi],cl
   14000e007:	adc    DWORD PTR [rcx+0x70],edi
	...
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	jno    0x14000e09a
   14000e021:	jo     0x14000e023
	...
   14000e037:	jne    0x14000e050
	...
   14000e04d:	add    BYTE PTR [rax],al
   14000e04f:	or     BYTE PTR [rax+0x0],dh
	...
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	(bad)  
   14000e089:	(bad)  
   14000e08a:	(bad)  
   14000e08b:	(bad)  
   14000e08c:	(bad)  
   14000e08d:	inc    DWORD PTR [rax]
   14000e08f:	add    bh,bh
   14000e091:	(bad)  
   14000e092:	(bad)  
   14000e093:	(bad)  
   14000e094:	(bad)  
   14000e095:	inc    DWORD PTR [rax]
   14000e097:	add    bh,bh
   14000e099:	(bad)  
   14000e09a:	sti    
   14000e09b:	(bad)  
   14000e09c:	(bad)  
   14000e09d:	inc    DWORD PTR [rax]
   14000e09f:	add    bh,bh
   14000e0a1:	push   rax
   14000e0a3:	(bad)  
   14000e0a4:	(bad)  
   14000e0a5:	inc    DWORD PTR [rax]
   14000e0a7:	add    bh,bh
   14000e0a9:	push   rax
   14000e0ab:	jg     0x14000e0ac
   14000e0ad:	inc    DWORD PTR [rax]
   14000e0af:	add    bh,bh
   14000e0b1:	jmp    rax
   14000e0b3:	(bad)  
   14000e0b4:	(bad)  
   14000e0b5:	inc    DWORD PTR [rax]
   14000e0b7:	add    bh,bh
   14000e0b9:	jmp    rax
   14000e0bb:	ud0    edi,edi
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	(bad)  
   14000e0c1:	jmp    rax
   14000e0c3:	(bad)  
   14000e0c4:	(bad)  
   14000e0c5:	inc    DWORD PTR [rax]
   14000e0c7:	add    bh,bh
   14000e0c9:	inc    eax
   14000e0cb:	(bad)  
   14000e0cc:	(bad)  
   14000e0cd:	inc    DWORD PTR [rax]
   14000e0cf:	add    bh,bh
   14000e0d1:	inc    eax
   14000e0d3:	add    edi,edi
   14000e0d5:	inc    DWORD PTR [rax]
   14000e0d7:	add    bh,bh
   14000e0d9:	inc    DWORD PTR [rax+0xfeff01]
   14000e0df:	add    bh,bh
   14000e0e1:	inc    DWORD PTR [rax+0xfdff00]
   14000e0e7:	add    bh,bh
   14000e0e9:	inc    DWORD PTR [rax]
   14000e0eb:	add    BYTE PTR [rdi-0x7],bh
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	(bad)  
   14000e0f1:	inc    BYTE PTR [rax]
   14000e0f3:	add    BYTE PTR [rdi],bh
   14000e0f5:	repz add BYTE PTR [rax],al
   14000e0f8:	(bad)  
   14000e0f9:	fadd   QWORD PTR [rax]
   14000e0fb:	add    BYTE PTR [rdi],bl
   14000e0fd:	ret    
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	inc    DWORD PTR [rax]
   14000e102:	add    BYTE PTR [rax],al
   14000e104:	(bad)  
   14000e105:	add    DWORD PTR [rax],0x0
   14000e108:	inc    BYTE PTR [rax]
   14000e10a:	add    BYTE PTR [rax],al
   14000e10c:	add    BYTE PTR [rdi],al
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	cld    
   14000e111:	add    BYTE PTR [rax],al
   14000e113:	add    BYTE PTR [rax],al
   14000e115:	(bad)  
   14000e116:	add    BYTE PTR [rax],al
   14000e118:	lock add BYTE PTR [rax],al
   14000e11b:	add    BYTE PTR [rax],al
   14000e11d:	sldt   WORD PTR [rax]
   14000e120:	loopne 0x14000e122
   14000e122:	add    BYTE PTR [rax],al
   14000e124:	add    BYTE PTR [rdi],cl
   14000e126:	add    BYTE PTR [rax],al
   14000e128:	add    BYTE PTR [rax],0x0
   14000e12b:	add    BYTE PTR [rax],al
   14000e12d:	sldt   WORD PTR [rax]
   14000e130:	add    BYTE PTR [rax],al
   14000e132:	add    BYTE PTR [rax],al
   14000e134:	add    BYTE PTR [rdi],bl
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	rol    BYTE PTR [rax],0x0
   14000e13b:	add    BYTE PTR [rax],al
   14000e13d:	(bad)  
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	clc    
   14000e141:	add    BYTE PTR [rax],al
   14000e143:	add    BYTE PTR [rax],al
   14000e145:	(bad)  
   14000e146:	add    BYTE PTR [rax],al
   14000e148:	inc    BYTE PTR [rax]
   14000e14a:	add    BYTE PTR [rax],al
   14000e14c:	add    BYTE PTR [rdi],bh
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	inc    eax
   14000e152:	add    BYTE PTR [rax],al
   14000e154:	add    BYTE PTR [rdi],bh
   14000e156:	add    BYTE PTR [rax],al
   14000e158:	push   rax
   14000e15a:	add    BYTE PTR [rax],al
   14000e15c:	add    BYTE PTR [rdi],bh
   14000e15e:	add    BYTE PTR [rax],al
   14000e160:	(bad)  
   14000e161:	cld    
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	add    BYTE PTR [rdi+0x0],bh
   14000e167:	add    bh,bh
   14000e169:	inc    BYTE PTR [rax]
   14000e16b:	add    BYTE PTR [rax],al
   14000e16d:	jg     0x14000e16f
   14000e16f:	add    bh,bh
   14000e171:	inc    DWORD PTR [rax]
   14000e173:	add    BYTE PTR [rax],al
   14000e175:	inc    DWORD PTR [rax]
   14000e177:	add    bh,bh
   14000e179:	inc    DWORD PTR [rax+0xff0000]
   14000e17f:	add    bh,bh
   14000e181:	inc    eax
   14000e183:	add    BYTE PTR [rax],al
   14000e185:	inc    DWORD PTR [rax]
   14000e187:	add    bh,bh
   14000e189:	push   rax
   14000e18b:	add    BYTE PTR [rcx],al
   14000e18d:	inc    DWORD PTR [rax]
   14000e18f:	add    bh,bh
   14000e191:	(bad)  
   14000e192:	cld    
   14000e193:	add    BYTE PTR [rcx],al
   14000e195:	inc    DWORD PTR [rax]
   14000e197:	add    bh,bh
   14000e199:	(bad)  
   14000e19a:	inc    BYTE PTR [rax]
   14000e19c:	add    edi,edi
   14000e19e:	add    BYTE PTR [rax],al
   14000e1a0:	(bad)  
   14000e1a1:	(bad)  
   14000e1a2:	inc    DWORD PTR [rax]
   14000e1a4:	add    edi,edi
   14000e1a6:	add    BYTE PTR [rax],al
   14000e1a8:	(bad)  
   14000e1a9:	(bad)  
   14000e1aa:	inc    DWORD PTR [rax+0xff03]
   14000e1b0:	(bad)  
   14000e1b1:	(bad)  
   14000e1b2:	inc    eax
   14000e1b4:	add    edi,edi
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	(bad)  
   14000e1b9:	(bad)  
   14000e1ba:	inc    eax
   14000e1bc:	(bad)  
   14000e1bd:	inc    DWORD PTR [rax]
   14000e1bf:	add    bh,bh
   14000e1c1:	(bad)  
   14000e1c2:	jmp    rax
   14000e1c4:	(bad)  
   14000e1c5:	inc    DWORD PTR [rax]
   14000e1c7:	add    bh,bh
   14000e1c9:	(bad)  
   14000e1ca:	push   rax
   14000e1cc:	ud0    eax,DWORD PTR [rax]
   14000e1cf:	add    bh,bh
   14000e1d1:	(bad)  
   14000e1d2:	push   rax
   14000e1d4:	ud0    eax,DWORD PTR [rax]
   14000e1d7:	add    bh,bh
   14000e1d9:	(bad)  
   14000e1da:	(bad)  
   14000e1db:	clc    
   14000e1dc:	(bad)  
   14000e1dd:	inc    DWORD PTR [rax]
   14000e1df:	add    bh,bh
   14000e1e1:	(bad)  
   14000e1e2:	(bad)  
   14000e1e3:	cld    
   14000e1e4:	(bad)  
   14000e1e5:	inc    DWORD PTR [rax]
   14000e1e7:	add    bh,bh
   14000e1e9:	(bad)  
   14000e1ea:	(bad)  
   14000e1eb:	cld    
   14000e1ec:	(bad)  
   14000e1ed:	inc    DWORD PTR [rax]
   14000e1ef:	add    bh,bh
   14000e1f1:	(bad)  
   14000e1f2:	(bad)  
   14000e1f3:	(bad)  
   14000e1f4:	jg     0x14000e1f5
   14000e1f6:	add    BYTE PTR [rax],al
   14000e1f8:	(bad)  
   14000e1f9:	(bad)  
   14000e1fa:	(bad)  
   14000e1fb:	(bad)  
   14000e1fc:	(bad)  
   14000e1fd:	inc    DWORD PTR [rax]
   14000e1ff:	add    bh,bh
   14000e201:	(bad)  
   14000e202:	(bad)  
   14000e203:	(bad)  
   14000e204:	(bad)  
   14000e205:	inc    DWORD PTR [rax]
   14000e207:	add    BYTE PTR [rax],ch
   14000e209:	add    BYTE PTR [rax],al
   14000e20b:	add    BYTE PTR [rax],ah
   14000e20d:	add    BYTE PTR [rax],al
   14000e20f:	add    BYTE PTR [rax+0x0],al
   14000e212:	add    BYTE PTR [rax],al
   14000e214:	add    DWORD PTR [rax],eax
   14000e216:	add    al,0x0
   14000e218:	add    BYTE PTR [rax],al
   14000e21a:	add    BYTE PTR [rax],al
   14000e21c:	add    BYTE PTR [rdx],al
	...
   14000e236:	add    BYTE PTR [rax],0x0
   14000e239:	add    BYTE PTR [rax],0x0
   14000e23c:	add    BYTE PTR [rax+0x800080],al
   14000e242:	add    BYTE PTR [rax],al
   14000e244:	add    BYTE PTR [rax],0x80
   14000e247:	add    BYTE PTR [rax-0x7fffff80],al
   14000e24d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000e254:	add    BYTE PTR [rax],al
   14000e256:	inc    DWORD PTR [rax]
   14000e258:	add    bh,bh
   14000e25a:	add    BYTE PTR [rax],al
   14000e25c:	add    bh,bh
   14000e25e:	inc    DWORD PTR [rax]
   14000e260:	inc    DWORD PTR [rax]
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	inc    DWORD PTR [rax]
   14000e266:	inc    DWORD PTR [rax]
   14000e268:	(bad)  
   14000e269:	inc    DWORD PTR [rax]
   14000e26b:	add    bh,bh
   14000e26d:	(bad)  
   14000e26e:	inc    DWORD PTR [rax]
	...
   14000e294:	add    BYTE PTR [rax],al
   14000e296:	or     BYTE PTR [rdi+0x0],dh
	...
   14000e2a4:	add    BYTE PTR [rax],al
   14000e2a6:	or     edi,DWORD PTR [rbx-0x48]
	...
   14000e2b5:	add    BYTE PTR [rax],cl
   14000e2b7:	mov    ecx,0x8089
	...
   14000e2c4:	add    BYTE PTR [rax],al
   14000e2c6:	jns    0x14000e27f
   14000e2c8:	mov    bh,0xb0
	...
   14000e2d6:	xchg   edi,eax
   14000e2d7:	xchg   edi,eax
   14000e2d8:	cdq    
   14000e2d9:	jns    0x14000e2db
	...
   14000e2e3:	add    BYTE PTR [rax],al
   14000e2e5:	(bad)  
   14000e2e6:	cmp    DWORD PTR [rcx-0x75],edi
   14000e2e9:	cwde   
   14000e2ea:	mov    al,0x0
   14000e2ec:	add    BYTE PTR [rax],al
   14000e2ee:	add    BYTE PTR [rax],cl
   14000e2f0:	add    BYTE PTR [rax],al
   14000e2f2:	add    BYTE PTR [rax],al
   14000e2f4:	add    BYTE PTR [rcx],al
   14000e2f6:	adc    edx,DWORD PTR [rbx+0x589b97]
   14000e2fc:	add    BYTE PTR [rax],al
   14000e2fe:	add    BYTE PTR [rax],dl
   14000e300:	add    BYTE PTR [rax],al
   14000e302:	add    BYTE PTR [rax],al
   14000e304:	add    BYTE PTR [rcx],dl
   14000e306:	push   rcx
   14000e307:	jns    0x14000e382
   14000e309:	jns    0x14000e2c4
   14000e30b:	add    BYTE PTR [rax],0x0
   14000e30e:	jns    0x14000e290
   14000e310:	add    BYTE PTR [rax],al
   14000e312:	or     BYTE PTR [rdi+0x66],ah
   14000e315:	push   rbx
   14000e316:	adc    DWORD PTR [rbx],edx
   14000e318:	adc    ebx,DWORD PTR [rax+0x7809b9b]
   14000e31e:	xchg   edi,eax
   14000e31f:	add    BYTE PTR [rax],al
   14000e321:	add    BYTE PTR [rsi-0x38],bh
   14000e324:	out    0x65,eax
   14000e326:	adc    edx,DWORD PTR [rcx-0x69]
   14000e329:	xchg   edi,eax
   14000e32a:	mov    bh,0x89
   14000e32c:	jns    0x14000e367
   14000e32e:	jns    0x14000e330
   14000e330:	add    BYTE PTR [rsi],cl
   14000e332:	ja     0x14000e31b
   14000e334:	enter  0x166,0x13
   14000e338:	push   rbx
   14000e339:	xchg   edi,eax
   14000e33a:	cdq    
   14000e33b:	mov    bh,0xb7
   14000e33d:	xchg   edi,eax
   14000e33e:	cwde   
   14000e33f:	add    BYTE PTR [rdi],al
   14000e341:	out    0xce,eax
   14000e343:	jle    0x14000e3c1
   14000e345:	xchg   DWORD PTR [rbp+0x11],eax
   14000e348:	adc    eax,0x97988b39
   14000e34d:	xchg   ebx,eax
   14000e34e:	nop
   14000e34f:	add    BYTE PTR [rax],cl
   14000e351:	enter  0x7ce7,0x8e
   14000e355:	jl     0x14000e3c9
   14000e357:	adc    DWORD PTR [rcx],esi
   14000e359:	xchg   edi,eax
   14000e35a:	cwde   
   14000e35b:	mov    ecx,0x7079b9
   14000e360:	add    BYTE PTR [rax],cl
   14000e362:	out    0xe7,eax
   14000e364:	in     eax,0xe7
   14000e366:	gs add eax,0x779b1317
   14000e36c:	jns    0x14000e3e7
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	add    BYTE PTR [rax],al
   14000e372:	or     BYTE PTR [rsi-0x39],bh
   14000e375:	je     0x14000e387
   14000e377:	jo     0x14000e38a
   14000e379:	xchg   edi,eax
   14000e37a:	cwde   
   14000e37b:	fwait
   14000e37c:	xchg   edi,eax
   14000e37d:	xchg   edi,eax
   14000e37e:	add    BYTE PTR [rax],al
   14000e380:	add    BYTE PTR [rax],al
   14000e382:	add    BYTE PTR [rax],al
   14000e384:	xchg   BYTE PTR [rax+0x14],dl
   14000e387:	jno    0x14000e39c
   14000e389:	push   rbx
   14000e38a:	fwait
   14000e38b:	jnp    0x14000e406
   14000e38d:	(bad)  
   14000e38e:	add    BYTE PTR [rax],al
   14000e390:	add    BYTE PTR [rax],al
   14000e392:	add    BYTE PTR [rax],al
   14000e394:	add    BYTE PTR [rbp+0x61],ah
   14000e397:	(bad)  
   14000e398:	adc    DWORD PTR [rdi],edx
   14000e39a:	cwde   
   14000e39b:	cwde   
   14000e39c:	xchg   edi,eax
   14000e39d:	nop
   14000e39e:	add    BYTE PTR [rax],al
   14000e3a0:	add    BYTE PTR [rax],al
   14000e3a2:	add    BYTE PTR [rax],al
   14000e3a4:	add    BYTE PTR [rsi+0x74],dh
   14000e3a7:	je     0x14000e3be
   14000e3a9:	xor    DWORD PTR [rbx-0x47],edi
   14000e3ac:	mov    ecx,0x70
   14000e3b1:	add    BYTE PTR [rax],al
   14000e3b3:	add    BYTE PTR [rax],al
   14000e3b5:	or     BYTE PTR [rsi+0x67],ah
   14000e3b8:	(bad)  
   14000e3b9:	adc    DWORD PTR [rax+0x9097b7],ebx
   14000e3bf:	add    BYTE PTR [rax],al
   14000e3c1:	add    BYTE PTR [rax],al
   14000e3c3:	add    BYTE PTR [rax],al
   14000e3c5:	add    BYTE PTR [rdi],al
   14000e3c7:	(bad)  
   14000e3c8:	(bad)  
   14000e3c9:	(bad)  
   14000e3ca:	cmp    DWORD PTR [rdi+0x97],esi
   14000e3d0:	add    BYTE PTR [rax],al
   14000e3d2:	add    BYTE PTR [rax],al
   14000e3d4:	add    BYTE PTR [rax],al
   14000e3d6:	add    BYTE PTR [rdi],al
   14000e3d8:	adc    DWORD PTR fs:[rbx-0x77],edi
   14000e3dc:	jns    0x14000e3de
	...
   14000e3e6:	add    BYTE PTR [rax],al
   14000e3e8:	push   cx
   14000e3ea:	fwait
   14000e3eb:	mov    bh,0x98
	...
   14000e3f5:	add    BYTE PTR [rax],al
   14000e3f7:	add    BYTE PTR [rsi],al
   14000e3f9:	jno    0x14000e473
   14000e3fb:	mov    ecx,0x70
	...
   14000e408:	or     BYTE PTR [rcx+0x1b],ah
   14000e40b:	mov    DWORD PTR [rax],esi
	...
   14000e419:	sbb    edi,DWORD PTR gs:[rcx+0x80]
	...
   14000e428:	add    BYTE PTR [rsi],al
   14000e42a:	push   rdi
   14000e42b:	jns    0x14000e42d
	...
   14000e439:	or     BYTE PTR [rbx],bl
   14000e43b:	nop
	...
   14000e448:	add    BYTE PTR [rax],al
   14000e44a:	gs jo  0x14000e44d
	...
   14000e46d:	add    BYTE PTR [rax],al
   14000e46f:	add    bh,bh
   14000e471:	(bad)  
   14000e472:	(bad)  
   14000e473:	(bad)  
   14000e474:	(bad)  
   14000e475:	(bad)  
   14000e476:	(bad)  
   14000e477:	(bad)  
   14000e478:	(bad)  
   14000e479:	clc    
   14000e47a:	(bad)  
   14000e47b:	(bad)  
   14000e47c:	(bad)  
   14000e47d:	clc    
   14000e47e:	(bad)  
   14000e47f:	(bad)  
   14000e480:	(bad)  
   14000e481:	clc    
   14000e482:	(bad)  
   14000e483:	(bad)  
   14000e484:	push   rax
   14000e486:	(bad)  
   14000e487:	(bad)  
   14000e488:	push   rax
   14000e48a:	ud0    edi,edi
   14000e48d:	loopne 0x14000e496
   14000e48f:	(bad)  
   14000e490:	jmp    rax
   14000e492:	add    edi,ebp
   14000e494:	inc    eax
   14000e496:	add    ecx,esi
   14000e498:	clc    
   14000e499:	add    BYTE PTR [rax],al
   14000e49b:	movsxd esi,eax
   14000e49d:	add    BYTE PTR [rax],al
   14000e49f:	add    esp,eax
   14000e4a1:	add    BYTE PTR [rax],al
   14000e4a3:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000e4a9:	add    BYTE PTR [rax],al
   14000e4ab:	(bad)  
   14000e4ac:	loopne 0x14000e4ae
   14000e4ae:	add    BYTE PTR [rdi],cl
   14000e4b0:	clc    
   14000e4b1:	add    BYTE PTR [rax],al
   14000e4b3:	ud0    eax,DWORD PTR [rax]
   14000e4b6:	add    BYTE PTR [rdi],cl
   14000e4b8:	inc    eax
   14000e4ba:	add    BYTE PTR [rdi],bl
   14000e4bc:	inc    eax
   14000e4be:	add    BYTE PTR [rdi],bl
   14000e4c0:	jmp    rax
   14000e4c2:	add    BYTE PTR [rdi],bl
   14000e4c4:	(bad)  
   14000e4c5:	clc    
   14000e4c6:	add    BYTE PTR [rdi],bh
   14000e4c8:	(bad)  
   14000e4c9:	inc    BYTE PTR [rax]
   14000e4cb:	(bad)  
   14000e4cc:	(bad)  
   14000e4cd:	inc    DWORD PTR [rax]
   14000e4cf:	(bad)  
   14000e4d0:	(bad)  
   14000e4d1:	inc    DWORD PTR [rax-0x7f000081]
   14000e4d7:	jg     0x14000e4d8
   14000e4d9:	inc    eax
   14000e4db:	jg     0x14000e4dc
   14000e4dd:	jmp    rax
   14000e4df:	(bad)  
   14000e4e0:	(bad)  
   14000e4e1:	jmp    rcx
   14000e4e3:	(bad)  
   14000e4e4:	(bad)  
   14000e4e5:	push   rcx
   14000e4e7:	(bad)  
   14000e4e8:	(bad)  
   14000e4e9:	(bad)  
   14000e4ea:	(bad)  
   14000e4eb:	(bad)  
   14000e4ec:	(bad)  
   14000e4ed:	(bad)  
   14000e4ee:	(bad)  
   14000e4ef:	jmp    FWORD PTR [rax]
   14000e4f1:	add    BYTE PTR [rax],al
   14000e4f3:	add    BYTE PTR [rax],dl
   14000e4f5:	add    BYTE PTR [rax],al
   14000e4f7:	add    BYTE PTR [rax],ah
   14000e4f9:	add    BYTE PTR [rax],al
   14000e4fb:	add    BYTE PTR [rcx],al
   14000e4fd:	add    BYTE PTR [rax+rax*1],al
   14000e500:	add    BYTE PTR [rax],al
   14000e502:	add    BYTE PTR [rax],al
   14000e504:	add    BYTE PTR [rax],0x0
	...
   14000e51b:	add    BYTE PTR [rax],al
   14000e51d:	add    BYTE PTR [rax+0x800000],al
   14000e523:	add    BYTE PTR [rax],al
   14000e525:	add    BYTE PTR [rax+0x8000],0x0
   14000e52c:	add    BYTE PTR [rax],0x80
   14000e52f:	add    BYTE PTR [rax-0x7fffff80],al
   14000e535:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000e53c:	add    BYTE PTR [rax],al
   14000e53e:	inc    DWORD PTR [rax]
   14000e540:	add    bh,bh
   14000e542:	add    BYTE PTR [rax],al
   14000e544:	add    bh,bh
   14000e546:	inc    DWORD PTR [rax]
   14000e548:	inc    DWORD PTR [rax]
   14000e54a:	add    BYTE PTR [rax],al
   14000e54c:	inc    DWORD PTR [rax]
   14000e54e:	inc    DWORD PTR [rax]
   14000e550:	(bad)  
   14000e551:	inc    DWORD PTR [rax]
   14000e553:	add    bh,bh
   14000e555:	(bad)  
   14000e556:	inc    DWORD PTR [rax]
	...
   14000e560:	add    BYTE PTR [rax],al
   14000e562:	add    BYTE PTR [rbx],cl
   14000e564:	add    BYTE PTR [rax],al
   14000e566:	add    BYTE PTR [rax],al
   14000e568:	add    BYTE PTR [rax],al
   14000e56a:	add    BYTE PTR [rdi-0x48],dh
   14000e56d:	add    BYTE PTR [rax],al
   14000e56f:	add    BYTE PTR [rax],al
   14000e571:	add    BYTE PTR [rax],al
   14000e573:	cdq    
   14000e574:	jns    0x14000e576
   14000e576:	add    BYTE PTR [rax],al
   14000e578:	add    BYTE PTR [rax],al
   14000e57a:	(bad)  
   14000e57b:	adc    ebx,DWORD PTR [rax+0x8000b0]
   14000e581:	xchg   BYTE PTR [rdi+rdx*1-0x6d],dh
   14000e585:	cwde   
   14000e586:	ja     0x14000e518
   14000e588:	(bad)  
   14000e589:	out    0xe7,eax
   14000e58b:	adc    DWORD PTR [rdi],edx
   14000e58d:	fwait
   14000e58e:	cdq    
   14000e58f:	or     BYTE PTR [rax],0xce
   14000e592:	push   rdi
   14000e593:	adc    ecx,DWORD PTR gs:[rcx+0x8000083]
   14000e59a:	in     eax,0x5
   14000e59c:	cmp    DWORD PTR [rbx-0x69],edi
   14000e59f:	add    BYTE PTR [rax],al
   14000e5a1:	add    BYTE PTR [rdi],al
   14000e5a3:	rex.XB add DWORD PTR [r8+0x98],ebx
   14000e5aa:	add    BYTE PTR [rsi+0x57],dh
   14000e5ad:	mov    ebx,0x90
   14000e5b2:	add    BYTE PTR [rax],al
   14000e5b4:	(bad)  
   14000e5b5:	jns    0x14000e627
   14000e5b7:	add    BYTE PTR [rax],al
   14000e5b9:	add    BYTE PTR [rax],al
   14000e5bb:	add    BYTE PTR [rip+0x803b],al        # 0x1400165fc
   14000e5c1:	add    BYTE PTR [rax],al
   14000e5c3:	add    BYTE PTR [rdi],al
   14000e5c5:	jns    0x14000e5c7
   14000e5c7:	add    BYTE PTR [rax],al
   14000e5c9:	add    BYTE PTR [rax],al
   14000e5cb:	add    BYTE PTR [rax],al
   14000e5cd:	js     0x14000e5cf
	...
   14000e5d7:	add    bh,bh
   14000e5d9:	inc    DWORD PTR [rax]
   14000e5db:	add    dh,bh
   14000e5dd:	inc    DWORD PTR [rax]
   14000e5df:	add    ah,bh
   14000e5e1:	(bad)  
   14000e5e2:	add    BYTE PTR [rax],al
   14000e5e4:	cld    
   14000e5e5:	(bad)  
   14000e5e6:	add    BYTE PTR [rax],al
   14000e5e8:	clc    
   14000e5e9:	sbb    eax,0x1c00000
   14000e5ee:	add    BYTE PTR [rax],al
   14000e5f0:	add    BYTE PTR [rcx],0x0
   14000e5f3:	add    BYTE PTR [rax-0x1ffffffd],al
   14000e5f9:	add    eax,DWORD PTR [rax]
   14000e5fb:	add    al,bh
   14000e5fd:	add    eax,DWORD PTR [rax]
   14000e5ff:	add    ah,bh
   14000e601:	(bad)  
   14000e602:	add    BYTE PTR [rax],al
   14000e604:	inc    DWORD PTR [rdi]
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	inc    DWORD PTR [rdi-0x70010000]
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	dec    edi
   14000e612:	add    BYTE PTR [rax],al
   14000e614:	(bad)  
   14000e615:	inc    DWORD PTR [rax]
   14000e617:	add    BYTE PTR [rax],ch
   14000e619:	add    BYTE PTR [rax],al
   14000e61b:	add    BYTE PTR [rax],dh
   14000e61d:	add    BYTE PTR [rax],al
   14000e61f:	add    BYTE PTR [rax+0x0],ah
   14000e622:	add    BYTE PTR [rax],al
   14000e624:	add    DWORD PTR [rax],eax
   14000e626:	or     BYTE PTR [rax],al
   14000e628:	add    BYTE PTR [rax],al
   14000e62a:	add    BYTE PTR [rax],al
   14000e62c:	add    BYTE PTR [rcx],cl
	...
   14000e636:	add    BYTE PTR [rax],al
   14000e638:	add    BYTE PTR [rcx],al
   14000e63a:	add    BYTE PTR [rax],al
   14000e63c:	add    BYTE PTR [rcx],al
   14000e63e:	add    BYTE PTR [rax],al
   14000e640:	add    BYTE PTR [rax],al
   14000e642:	add    BYTE PTR [rax],al
   14000e644:	cmp    eax,0x43003f27
   14000e649:	sub    edi,DWORD PTR [rax+rax*1]
   14000e64c:	rex.WB (bad) 
   14000e64e:	cmp    al,0x0
   14000e650:	rex.WRXB xor r15,QWORD PTR [r15]
   14000e653:	add    BYTE PTR [rbx+0x36],dl
   14000e656:	cmp    eax,0x3b3d5d00
   14000e65b:	add    BYTE PTR [rcx+0x3f],ah
   14000e65e:	xor    eax,0x2e4e7600
   14000e663:	add    BYTE PTR [rcx+0x51],bh
   14000e666:	sub    al,0x0
   14000e668:	imul   eax,DWORD PTR [rbp+0x34],0x38436400
   14000e66f:	add    BYTE PTR [rcx+0x47],ch
   14000e672:	cmp    DWORD PTR [rax],eax
   14000e674:	je     0x14000e6c4
   14000e676:	xor    BYTE PTR [rax],al
   14000e678:	ja     0x14000e6ca
   14000e67a:	xor    BYTE PTR [rax],al
   14000e67c:	jp     0x14000e6d0
   14000e67e:	xor    eax,0x39517800
   14000e683:	add    BYTE PTR [rbx],bl
   14000e685:	adc    DWORD PTR [rsi+0x0],eax
   14000e688:	(bad)  
   14000e689:	adc    BYTE PTR [rsi+0x0],cl
   14000e68c:	sbb    BYTE PTR [rax],dl
   14000e68e:	rex.WX add BYTE PTR [rsi],dl
   14000e691:	adc    DWORD PTR [rax+rax*1+0x18],edx
   14000e695:	adc    DWORD PTR [rbx+0x0],edx
   14000e698:	(bad)  
   14000e699:	adc    DWORD PTR [rax+rax*1+0x24],ebx
   14000e69d:	adc    eax,0x17290045
   14000e6a2:	rex.RX add BYTE PTR [rsi],r12b
   14000e6a5:	sbb    BYTE PTR [rsi+0x0],al
   14000e6a8:	sub    ebx,DWORD PTR [rdx]
   14000e6aa:	add    BYTE PTR [r8],r12b
   14000e6ad:	adc    al,0x4a
   14000e6af:	add    BYTE PTR [rbx],ch
   14000e6b1:	sbb    al,0x4b
   14000e6b3:	add    BYTE PTR [rcx],dh
   14000e6b5:	sbb    eax,0x21340044
   14000e6ba:	rex.XB add BYTE PTR [r11],dil
   14000e6bd:	and    eax,0x283f0041
   14000e6c2:	add    BYTE PTR [r15+riz*1],r14b
   14000e6c6:	pop    rbx
   14000e6c7:	add    BYTE PTR [rip+0x13006313],dl        # 0x1530149e0
   14000e6cd:	adc    al,0x6b
   14000e6cf:	add    BYTE PTR [rbx],dl
   14000e6d1:	(bad)  
   14000e6d2:	jae    0x14000e6d4
   14000e6d4:	adc    al,0x18
   14000e6d6:	ja     0x14000e6d8
   14000e6d8:	adc    eax,0x18007b1a
   14000e6dd:	sbb    edi,DWORD PTR [rdx+0x0]
   14000e6e0:	rex (bad) 
   14000e6e2:	add    BYTE PTR [rbx+r13*1+0x41],al
   14000e6e7:	add    BYTE PTR [rbp+0x32],cl
   14000e6ea:	add    BYTE PTR [rcx+0x56],r14b
   14000e6ee:	push   rdi
   14000e6ef:	add    BYTE PTR [rsi+0x53],ah
   14000e6f2:	add    BYTE PTR gs:[rbp-0x58ffe497],bl
   14000e6f9:	outs   dx,DWORD PTR ds:[rsi]
   14000e6fa:	sbb    BYTE PTR [rax],al
   14000e6fc:	lods   al,BYTE PTR ds:[rsi]
   14000e6fd:	jae    0x14000e716
   14000e6ff:	add    BYTE PTR [rbx-0x4dffe58e],ch
   14000e705:	jbe    0x14000e71e
   14000e707:	add    BYTE PTR [rbp-0x46ffe587],dh
   14000e70d:	jnp    0x14000e72b
   14000e70f:	add    BYTE PTR [rbp-0x76ffd8a8],al
   14000e715:	pop    rbp
   14000e716:	(bad)  
   14000e717:	add    BYTE PTR [rax-0x7affd0ab],al
   14000e71d:	pop    rcx
   14000e71e:	sub    DWORD PTR [rax],eax
   14000e720:	lea    ebx,[rsi+0x2a]
   14000e723:	add    BYTE PTR [rax-0x7bffccab],al
   14000e729:	pop    rdx
   14000e72a:	xor    eax,DWORD PTR [rax]
   14000e72c:	mov    BYTE PTR [rax+rsi*1+0x0],bl
   14000e730:	xchg   ecx,eax
   14000e731:	(bad)  
   14000e732:	and    DWORD PTR [rax],eax
   14000e734:	xchg   esp,eax
   14000e735:	sub    al,BYTE PTR fs:[rax]
   14000e738:	mov    WORD PTR [rcx+0x3d],fs
   14000e73b:	add    BYTE PTR [rbx-0x5bffcc96],bl
   14000e741:	outs   dx,DWORD PTR ds:[rsi]
   14000e742:	sub    DWORD PTR [rax],eax
   14000e744:	lods   al,BYTE PTR ds:[rsi]
   14000e745:	jne    0x14000e76d
   14000e747:	add    BYTE PTR [rbp-0x57ffd18f],ah
   14000e74d:	ja     0x14000e77e
   14000e74f:	add    BYTE PTR [rcx-0x4bffdb81],bh
   14000e755:	jnp    0x14000e783
   14000e757:	add    BYTE PTR [rsi+rsi*2+0x79a80031],ch
   14000e75e:	xor    al,0x0
   14000e760:	lea    esp,[rdx+0x44]
   14000e763:	add    BYTE PTR [rdi-0x62ffb495],dl
   14000e769:	jno    0x14000e7b2
   14000e76b:	add    BYTE PTR [rsi-0x63ffab8c],bl
   14000e771:	js     0x14000e7c5
   14000e773:	add    BYTE PTR [rdi-0x54ffae86],ah
   14000e779:	jge    0x14000e7cf
   14000e77b:	add    BYTE PTR [rax+rax*4-0x7f48ffdb],bh
   14000e782:	(bad)  
   14000e783:	add    BYTE PTR [rcx+rax*4-0x7939ffcb],dh
   14000e78a:	es add bl,al
   14000e78d:	mov    DWORD PTR [rip+0x3692ce00],esi        # 0x17693b593
   14000e793:	add    BYTE PTR [rbx-0x46ffbd7e],dh
   14000e799:	test   BYTE PTR [rax+rax*1-0x42],cl
   14000e79d:	mov    BYTE PTR [rsi+0x0],cl
   14000e7a0:	mov    bl,0x81
   14000e7a2:	push   rdx
   14000e7a3:	add    BYTE PTR [rax-0x45ffaf7c],bh
   14000e7a9:	xchg   esp,eax
   14000e7aa:	pop    rsi
   14000e7ab:	add    ah,al
   14000e7ad:	mov    WORD PTR [rax+rax*1-0x38],cs
   14000e7b1:	mov    cs,WORD PTR [rbx+0x0]
   14000e7b4:	iret   
   14000e7b5:	xchg   edx,eax
   14000e7b6:	rex.RXB add r15b,r8b
   14000e7b9:	xchg   ecx,eax
   14000e7ba:	rex.WRXB add r12b,r9b
   14000e7bd:	nop
   14000e7be:	rex.WB add r9b,dl
   14000e7c1:	xchg   esp,eax
   14000e7c2:	rex.X add bpl,dl
   14000e7c5:	(bad)  
   14000e7c6:	add    sil,r10b
   14000e7c9:	popf   
   14000e7ca:	rex.W add al,bl
   14000e7cd:	sahf   
   14000e7ce:	rex.WB add r13b,cl
   14000e7d1:	pushf  
   14000e7d2:	pop    rcx
   14000e7d3:	add    cl,bl
   14000e7d5:	movabs eax,ds:0xa1d90056a0d4004e
   14000e7de:	push   rdx
   14000e7df:	add    dh,dl
   14000e7e1:	movabs ds:0x9cc800669bc1005b,eax
   14000e7ea:	push   0x0
   14000e7ec:	(bad)  
   14000e7ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e7ee:	imul   eax,DWORD PTR [rax],0xffffffd6
   14000e7f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e7f2:	movsxd eax,DWORD PTR [rax]
   14000e7f4:	(bad)  
   14000e7f5:	stos   BYTE PTR es:[rdi],al
   14000e7f6:	outs   dx,BYTE PTR ds:[rsi]
   14000e7f7:	add    dl,cl
   14000e7f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e7fa:	jnp    0x14000e7fc
   14000e7fc:	(bad)  
   14000e7fd:	scas   al,BYTE PTR es:[rdi]
   14000e7fe:	jns    0x14000e800
   14000e800:	(bad)  
   14000e801:	sbb    eax,DWORD PTR [rax-0x7be3e800]
   14000e807:	add    BYTE PTR [rdx],bl
   14000e809:	(bad)  
   14000e80a:	mov    DWORD PTR [rax],eax
   14000e80c:	sbb    esp,DWORD PTR [rcx]
   14000e80e:	mov    WORD PTR [rax],es
   14000e810:	sbb    eax,0x37009225
   14000e815:	(bad)  
   14000e816:	test   DWORD PTR [rax],eax
   14000e818:	and    BYTE PTR [rax],ch
   14000e81a:	xchg   esi,eax
   14000e81b:	add    BYTE PTR [rbx],ah
   14000e81d:	sub    eax,0x2923009c
   14000e822:	movabs al,ds:0xa8352600a3312400
   14000e82b:	add    BYTE PTR [rsi],ah
   14000e82d:	cmp    BYTE PTR [rdx-0x51c6d800],ch
   14000e833:	add    BYTE PTR [rcx],ch
   14000e835:	cmp    eax,0x332c00b2
   14000e83a:	mov    esi,0xbe373100
   14000e83f:	add    BYTE PTR [rbx],dh
   14000e841:	cmp    bh,BYTE PTR [rbp-0x49bed600]
   14000e847:	add    BYTE PTR [rbx],ch
   14000e849:	rex.R mov ebx,0xbe4b2c00
   14000e84f:	add    BYTE PTR [rax+rax*2],bh
   14000e852:	mov    ecx,0x83596000
   14000e857:	add    BYTE PTR [rcx+0x5c],bl
   14000e85a:	movabs eax,ds:0xb9484500b34b4900
   14000e863:	add    BYTE PTR [rsi+0x50],cl
   14000e866:	mov    dh,0x0
   14000e868:	rex.WRXB push r14
   14000e86a:	mov    edi,0xb5575700
   14000e86f:	add    BYTE PTR [rbp+0x5c],bl
   14000e872:	mov    bl,0x0
   14000e874:	(bad)  
   14000e875:	pop    rdi
   14000e876:	mov    ah,0x0
   14000e878:	imul   esp,DWORD PTR [rsi-0x4f],0xb26f7400
   14000e87f:	add    BYTE PTR [rbp+0x70],dh
   14000e882:	mov    cl,0x0
   14000e884:	sub    eax,0x2e00c234
   14000e889:	(bad)  
   14000e88a:	enter  0x2e00,0x3a
   14000e88e:	retf   
   14000e88f:	add    BYTE PTR [rax],dh
   14000e891:	cmp    cl,al
   14000e893:	add    BYTE PTR [rdi],ch
   14000e895:	rol    BYTE PTR ds:[rax],1
   14000e898:	xor    BYTE PTR [rdi],bh
   14000e89a:	rol    BYTE PTR [rax],1
   14000e89c:	sub    eax,0x2f00c34a
   14000e8a1:	rex.X retf 0x2f00
   14000e8a5:	rex.WRX enter 0x2f00,0x50
   14000e8aa:	leave  
   14000e8ab:	add    BYTE PTR [rax],dh
   14000e8ad:	push   rdx
   14000e8ae:	int3   
   14000e8af:	add    BYTE PTR [rax],dh
   14000e8b1:	rex.XB (bad) 
   14000e8b3:	add    BYTE PTR [rdx],dh
   14000e8b5:	rex.RXB fadd DWORD PTR [r8]
   14000e8b8:	xor    cl,BYTE PTR [rbx-0x25]
   14000e8bb:	add    BYTE PTR [rdx],dh
   14000e8bd:	push   rsi
   14000e8be:	rol    BYTE PTR [rax],cl
   14000e8c0:	xor    bl,BYTE PTR [rax-0x2e]
   14000e8c3:	add    BYTE PTR [rax+rbx*2],dh
   14000e8c6:	rol    DWORD PTR [rax],cl
   14000e8c8:	xor    ebx,DWORD PTR [rax-0x2b]
   14000e8cb:	add    BYTE PTR [rcx+rbx*2],dh
   14000e8ce:	(bad)  
   14000e8cf:	add    BYTE PTR [rsp+rbx*2],dh
   14000e8d2:	xlat   BYTE PTR ds:[rbx]
   14000e8d3:	add    BYTE PTR [rip+0x3a00db5c],dh        # 0x17a01c435
   14000e8d9:	pop    rbp
   14000e8da:	fild   WORD PTR [rax]
   14000e8dc:	xor    DWORD PTR [rcx-0x33],esp
   14000e8df:	add    BYTE PTR [rsi],dh
   14000e8e1:	(bad)  
   14000e8e2:	fld    QWORD PTR [rax]
   14000e8e4:	data16 fild WORD PTR ss:[rax]
   14000e8e8:	xor    al,0x6e
   14000e8ea:	fadd   DWORD PTR [rax]
   14000e8ec:	xor    al,0x54
   14000e8ee:	loope  0x14000e8f0
   14000e8f0:	ss pop rsp
   14000e8f2:	in     al,0x0
   14000e8f4:	ss movsxd esp,ebx
   14000e8f7:	add    BYTE PTR [rax],bh
   14000e8f9:	fs out 0x0,eax
   14000e8fc:	(bad)  
   14000e8fd:	push   0xffffffffffffffe6
   14000e8ff:	add    BYTE PTR [rax],bh
   14000e901:	outs   dx,DWORD PTR ds:[rsi]
   14000e902:	out    0x0,al
   14000e904:	(bad)  
   14000e905:	ins    DWORD PTR es:[rdi],dx
   14000e906:	call   0x1286d210b
   14000e90b:	add    BYTE PTR [rsi],dh
   14000e90d:	jbe    0x14000e8ef
   14000e90f:	add    BYTE PTR [rdi],dh
   14000e911:	jns    0x14000e8f9
   14000e913:	add    BYTE PTR [rax],bh
   14000e915:	jl     0x14000e8fc
   14000e917:	add    BYTE PTR [rax],bh
   14000e919:	jno    0x14000e904
   14000e91b:	add    BYTE PTR [rcx],bh
   14000e91d:	jne    0x14000e909
   14000e91f:	add    BYTE PTR [rdx],bh
   14000e921:	jns    0x14000e90d
   14000e923:	add    BYTE PTR [rip+0x3900ea79],bh        # 0x17901d3a2
   14000e929:	jge    0x14000e915
   14000e92b:	add    BYTE PTR [rdi*2+0x754400ea],bh
   14000e932:	fld    QWORD PTR [rax]
   14000e934:	rex.XB jnp 0x14000e91f
   14000e937:	add    BYTE PTR [rdx],bh
   14000e939:	sub    bl,0x0
   14000e93c:	cmp    al,BYTE PTR [rdx-0x7dc3ff14]
   14000e942:	in     al,dx
   14000e943:	add    BYTE PTR [rdx],bh
   14000e945:	test   esp,ebp
   14000e947:	add    BYTE PTR [rax*4-0x76c4ff14],bh
   14000e94e:	in     al,dx
   14000e94f:	add    BYTE PTR [rdx+rcx*4],bh
   14000e952:	in     eax,dx
   14000e953:	add    BYTE PTR [rbx],bh
   14000e955:	mov    gs,ebp
   14000e957:	add    BYTE PTR [rcx*4-0x6ec4ff12],bh
   14000e95e:	out    dx,al
   14000e95f:	add    BYTE PTR [rcx+rdx*4],bh
   14000e962:	out    dx,al
   14000e963:	add    BYTE PTR [rdx],bh
   14000e965:	xchg   ebp,eax
   14000e966:	out    dx,al
   14000e967:	add    BYTE PTR [rdx],bh
   14000e969:	cdq    
   14000e96a:	out    dx,al
   14000e96b:	add    BYTE PTR [rdx],bh
   14000e96d:	sahf   
   14000e96e:	out    dx,eax
   14000e96f:	add    BYTE PTR [rdx],bh
   14000e971:	fwait
   14000e972:	lock add BYTE PTR [rbx],bh
   14000e975:	movabs al,ds:0xa83a00efa13d00ef
   14000e97e:	(bad)  
   14000e97f:	add    BYTE PTR [rbx],bh
   14000e981:	mov    cl,0xec
   14000e983:	add    BYTE PTR [rdx],bh
   14000e985:	movabs ds:0xa73c00f0a53a00f1,al
   14000e98e:	lock add BYTE PTR [rdx],bh
   14000e991:	test   eax,0xad3900f1
   14000e996:	repnz add BYTE PTR [rbp*4-0x4fc6ff0f],bh
   14000e99e:	repnz add BYTE PTR [rax+rsi*4],bh
   14000e9a2:	repnz add BYTE PTR [rbx],bh
   14000e9a5:	mov    ah,0xf3
   14000e9a7:	add    BYTE PTR [rbx],bh
   14000e9a9:	mov    bh,0xf4
   14000e9ab:	add    BYTE PTR [rax],bh
   14000e9ad:	mov    eax,0xba3e00f2
   14000e9b2:	repnz add BYTE PTR [rbx],bh
   14000e9b5:	mov    ecx,0x825600f4
   14000e9ba:	fld    DWORD PTR [rax]
   14000e9bc:	push   rcx
   14000e9bd:	sbb    esi,0x0
   14000e9c0:	push   0xffffffffffffff96
   14000e9c2:	(bad)  
   14000e9c3:	add    BYTE PTR [rax-0x67],bh
   14000e9c6:	mov    DWORD PTR [rax],0xc89472
   14000e9cc:	movsxd ecx,DWORD PTR [rbx+rdx*8-0x304a8d00]
   14000e9d3:	add    BYTE PTR [rsi-0x4a],dh
   14000e9d6:	(bad)  
   14000e9d7:	add    BYTE PTR [rdi-0x72],al
   14000e9da:	in     eax,0x0
   14000e9dc:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   14000e9de:	jmp    0x14000e9e0
   14000e9e0:	rex.RB mov r12b,0xec
   14000e9e3:	add    BYTE PTR [rip+0x3c00eccc],bh        # 0x17c01d6b5
   14000e9e9:	shr    ch,cl
   14000e9eb:	add    BYTE PTR [rip+0x3800ebdc],bh        # 0x17801d5cd
   14000e9f1:	(bad)  
   14000e9f2:	repnz add BYTE PTR [rsi],dh
   14000e9f5:	int    0xf1
   14000e9f7:	add    BYTE PTR [rdx-0x77ff665a],bh
   14000e9fd:	(bad)  
   14000e9fe:	lods   al,BYTE PTR ds:[rsi]
   14000e9ff:	add    BYTE PTR [rsi-0x76ff4d80],al
   14000ea05:	xor    DWORD PTR [rdx-0x47716c00],0x0
   14000ea0c:	cwde   
   14000ea0d:	nop
   14000ea0e:	mov    bh,0x0
   14000ea10:	(bad)  
   14000ea11:	lods   eax,DWORD PTR ds:[rsi]
   14000ea12:	mov    esi,0xb5a7a000
   14000ea17:	add    BYTE PTR [rcx-0x31ff4258],ah
   14000ea1d:	lods   al,BYTE PTR ds:[rsi]
   14000ea1e:	add    BYTE PTR [rax],0xd4
   14000ea21:	mov    ah,0x8c
   14000ea23:	add    dl,bl
   14000ea25:	mov    esp,0xbfdc0095
   14000ea2a:	fwait
   14000ea2b:	add    BYTE PTR [rsi+riz*4-0x4970ff40],dl
   14000ea32:	(bad)  
   14000ea33:	add    BYTE PTR [rdi+rax*8+0xdb],dl
   14000ea3a:	add    BYTE PTR [rax],al
   14000ea3c:	(bad)  
   14000ea3d:	(bad)  
   14000ea3e:	inc    DWORD PTR [rax]
	...
   14000eab4:	add    ch,bh
	...
   14000eae2:	add    BYTE PTR [rax],al
   14000eae4:	in     eax,0xdd
   14000eae6:	fucom  st(5)
	...
   14000eb14:	fstp   st(5)
   14000eb16:	fstp   st(5)
   14000eb18:	call   0x14000eb1d
	...
   14000eb41:	add    BYTE PTR [rax],al
   14000eb43:	cld    
   14000eb44:	fstp   st(5)
   14000eb46:	fcmovu st,st(2)
   14000eb48:	(bad)  
   14000eb49:	(bad)  
   14000eb4a:	hlt    
	...
   14000eb73:	out    0xda,eax
   14000eb75:	(bad)  
   14000eb76:	(bad)  
   14000eb77:	ror    dh,cl
   14000eb79:	retf   0xfbc7
	...
   14000eba0:	add    BYTE PTR [rax],al
   14000eba2:	add    dl,cl
   14000eba4:	retf   0xcaca
   14000eba7:	retf   0xc7c7
   14000ebaa:	ret    
   14000ebab:	shl    dh,0x0
	...
   14000ebd2:	faddp  st(0),st
   14000ebd4:	ret    
   14000ebd5:	ret    
   14000ebd6:	ret    
   14000ebd7:	ret    
   14000ebd8:	rol    al,0xc0
   14000ebdb:	mov    ebx,0xbb
	...
   14000ec00:	add    BYTE PTR [rax],al
   14000ec02:	movabs al,ds:0xbbb7bbb7bbb7b0a9
   14000ec0b:	mov    bh,0xb7
   14000ec0d:	mov    ebp,0x0
	...
   14000ec2e:	add    BYTE PTR [rax],al
   14000ec30:	add    BYTE PTR [rsi-0x5b647c83],al
   14000ec36:	test   eax,0xb2b2afad
   14000ec3b:	mov    bh,0xbb
   14000ec3d:	mov    ebx,0xde
	...
   14000ec4e:	add    dl,dh
	...
   14000ec60:	add    BYTE PTR [rdi+rsi*2+0x7b],dh
   14000ec64:	add    DWORD PTR [rbx-0x525b5f67],0xb7b7b2af
   14000ec6e:	mov    ebx,0xe3
	...
   14000ec7b:	add    BYTE PTR [rax],al
   14000ec7d:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   14000ec90:	jne    0x14000ed04
   14000ec92:	je     0x14000ed0a
   14000ec94:	jns    0x14000ed11
   14000ec96:	add    DWORD PTR [rbx-0x52565f65],0xbbbbb7b1
   14000eca0:	loop   0x14000eca2
	...
   14000ecaa:	add    BYTE PTR [rax],al
   14000ecac:	add    BYTE PTR [rax+0x8c],al
	...
   14000ecbe:	add    BYTE PTR [rbp+0x73717025],al
   14000ecc4:	je     0x14000ed3d
   14000ecc6:	jnp    0x14000ed45
   14000ecc8:	add    DWORD PTR [rbx-0x4e505b5e],0xffffffb7
   14000eccf:	mov    ebx,0xe1c0
	...
   14000ecdc:	xchg   esp,eax
   14000ecdd:	jle    0x14000ecdf
	...
   14000ece7:	add    BYTE PTR [rax],al
   14000ece9:	add    BYTE PTR [rdx+0x0],ch
   14000ecec:	add    BYTE PTR [rax],al
   14000ecee:	sub    al,0x16
   14000ecf0:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b4745f1b
   14000ecf6:	ja     0x14000ed72
   14000ecf8:	jge    0x14000ec7c
   14000ecfa:	cdq    
   14000ecfb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ecfc:	lods   eax,DWORD PTR ds:[rsi]
   14000ecfd:	mov    cl,0xb7
   14000ecff:	mov    ebx,0xe0c3c0
   14000ed04:	add    BYTE PTR [rax],al
   14000ed06:	add    BYTE PTR [rax],al
   14000ed08:	add    BYTE PTR [rax],al
   14000ed0a:	icebp  
   14000ed0b:	jle    0x14000ed8b
   14000ed0d:	test   BYTE PTR [rax],al
	...
   14000ed17:	add    BYTE PTR [rsi+0x5d],ch
   14000ed1a:	pop    rdi
   14000ed1b:	pop    rsp
   14000ed1c:	push   rbp
   14000ed1d:	cmp    BYTE PTR [r14+rdx*1],r11b
   14000ed21:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b4745f4c
   14000ed27:	ja     0x14000eda4
   14000ed29:	jge    0x14000ecad
   14000ed2b:	fwait
   14000ed2c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ed2d:	lods   eax,DWORD PTR ds:[rsi]
   14000ed2e:	mov    bh,0xbb
   14000ed30:	rol    bl,0xc3
   14000ed33:	out    0xf5,al
   14000ed35:	add    BYTE PTR [rax],al
   14000ed37:	add    BYTE PTR [rax],al
   14000ed39:	mov    dl,BYTE PTR [rbx+0xf17e7e]
	...
   14000ed47:	fs (bad) 
   14000ed49:	(bad)  
   14000ed4a:	pop    rdi
   14000ed4b:	pop    rdi
   14000ed4c:	pop    rbx
   14000ed4d:	push   rsi
   14000ed4e:	rex.RB (bad) 
   14000ed50:	sbb    BYTE PTR [rbx+riz*1],dl
   14000ed53:	and    eax,0x74737225
   14000ed58:	jns    0x14000edd5
   14000ed5a:	add    DWORD PTR [rdx-0x444e525d],0xffffffc0
   14000ed61:	rol    bl,0xc3
   14000ed64:	ret    
   14000ed65:	mov    ebx,0x939ea6bc
   14000ed6a:	xchg   ebx,eax
   14000ed6b:	jle    0x14000edeb
	...
   14000ed75:	add    BYTE PTR [rdx+0x61],ah
   14000ed78:	(bad)  
   14000ed79:	(bad)  
   14000ed7a:	(bad)  
   14000ed7b:	pop    rdi
   14000ed7c:	pop    rsp
   14000ed7d:	pop    rbx
   14000ed7e:	pop    rcx
   14000ed7f:	rex.RX or eax,0x2523141b
   14000ed85:	and    eax,0x79767472
   14000ed8a:	jl     0x14000ed0e
   14000ed8c:	movabs ds:0xc0c3c3c3c0b7b2a4,al
   14000ed95:	mov    ebx,0x939dabb2
   14000ed9a:	jle    0x14000ee1a
   14000ed9c:	mov    eax,DWORD PTR [rax]
   14000ed9e:	add    BYTE PTR [rax],al
   14000eda0:	add    BYTE PTR [rax],al
   14000eda2:	add    BYTE PTR [rax],al
   14000eda4:	imul   esp,DWORD PTR [rbx+0x61],0x61
   14000eda8:	(bad)  
   14000eda9:	(bad)  
   14000edaa:	(bad)  
   14000edab:	pop    rdi
   14000edac:	pop    rsp
   14000edad:	pop    rbx
   14000edae:	pop    rcx
   14000edaf:	pop    rcx
   14000edb0:	rex.X (bad) 
   14000edb2:	adc    edx,DWORD PTR [rsi]
   14000edb4:	and    al,0x25
   14000edb6:	jo     0x14000ee2a
   14000edb8:	je     0x14000ee31
   14000edba:	jnp    0x14000ed3e
   14000edbc:	cdq    
   14000edbd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000edbe:	mov    dl,0xb7
   14000edc0:	rol    dh,0xc6
   14000edc3:	ret    
   14000edc4:	ret    
   14000edc5:	mov    ebx,0x9296abb1
   14000edca:	jle    0x14000ee4a
   14000edcc:	add    BYTE PTR [rax],al
   14000edce:	add    BYTE PTR [rax],al
   14000edd0:	add    BYTE PTR [rax],al
   14000edd2:	add    BYTE PTR [rsi+0x63],ah
   14000edd5:	movsxd esp,DWORD PTR [rbx+0x61]
   14000edd8:	(bad)  
   14000edd9:	(bad)  
   14000edda:	(bad)  
   14000eddb:	(bad)  
   14000eddc:	pop    rdi
   14000eddd:	pop    rbx
   14000edde:	push   rdi
   14000eddf:	pop    rcx
   14000ede0:	pop    rax
   14000ede1:	add    dl,BYTE PTR [rbx]
   14000ede4:	and    ah,BYTE PTR ds:0x79767371
   14000edeb:	jge    0x14000ed6f
   14000eded:	movabs ds:0xb7c0c3c6c3c0b7ae,eax
   14000edf6:	lods   eax,DWORD PTR ds:[rsi]
   14000edf7:	sahf   
   14000edf8:	xchg   ebp,eax
   14000edf9:	xchg   edx,eax
   14000edfa:	jle    0x14000ed90
   14000edfc:	add    BYTE PTR [rax],al
   14000edfe:	add    BYTE PTR [rax],al
   14000ee00:	add    bh,dh
   14000ee02:	gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000ee08:	(bad)  
   14000ee09:	(bad)  
   14000ee0a:	(bad)  
   14000ee0b:	(bad)  
   14000ee0c:	pop    rdi
   14000ee0d:	pop    rbx
   14000ee0e:	push   rdi
   14000ee0f:	pop    rcx
   14000ee10:	pop    rax
   14000ee11:	rex.WRB cmp rax,0x2523131a
   14000ee17:	and    eax,0x7b777473
   14000ee1c:	(bad)  
   14000ee1d:	movabs ds:0xb7c0c3c6c6c0b7ad,eax
   14000ee26:	lods   al,BYTE PTR ds:[rsi]
   14000ee27:	popf   
   14000ee28:	xchg   ebx,eax
   14000ee29:	jle    0x14000eea9
   14000ee2b:	pop    QWORD PTR [rax]
   14000ee2d:	add    BYTE PTR [rax],al
   14000ee2f:	add    cl,bh
   14000ee31:	gs gs gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000ee39:	(bad)  
   14000ee3a:	(bad)  
   14000ee3b:	(bad)  
   14000ee3c:	pop    rdi
   14000ee3d:	pop    rsp
   14000ee3e:	push   rdi
   14000ee3f:	pop    rcx
   14000ee40:	pop    rax
   14000ee41:	rex.WRX
   14000ee42:	rex.WX or rax,0x25241511
   14000ee48:	jno    0x14000eebc
   14000ee4a:	jbe    0x14000eec7
   14000ee4c:	(bad)  
   14000ee4d:	fwait
   14000ee4e:	lods   eax,DWORD PTR ds:[rsi]
   14000ee4f:	mov    bh,0xc0
   14000ee51:	mov    dh,0xc3
   14000ee54:	shl    BYTE PTR [rcx+0x7e9396ab],0x7e
   14000ee5b:	add    BYTE PTR [rax],al
   14000ee5d:	add    BYTE PTR [rax],al
   14000ee5f:	add    BYTE PTR [rax],al
   14000ee61:	add    dl,bh
   14000ee63:	ins    DWORD PTR es:[rdi],dx
   14000ee64:	gs movsxd esp,DWORD PTR gs:[ebx+0x63]
   14000ee6a:	(bad)  
   14000ee6b:	(bad)  
   14000ee6c:	(bad)  
   14000ee6d:	pop    rbx
   14000ee6e:	pop    rbx
   14000ee6f:	pop    rcx
   14000ee70:	rex.WRX
   14000ee71:	rex.WRX
   14000ee72:	rex.WXB cmp rax,QWORD PTR [r11]
   14000ee75:	adc    edx,DWORD PTR [rsi]
   14000ee77:	and    al,0x25
   14000ee79:	jb     0x14000eef1
   14000ee7b:	jns    0x14000eefa
   14000ee7d:	cdq    
   14000ee7e:	lods   eax,DWORD PTR ds:[rsi]
   14000ee7f:	mov    bh,0xc0
   14000ee81:	mov    bh,0xc3
   14000ee84:	mov    ebx,0x9295abb1
   14000ee89:	jle    0x14000ee13
	...
   14000ee93:	add    BYTE PTR [rax],al
   14000ee95:	outs   dx,DWORD PTR ds:[rsi]
   14000ee96:	gs movsxd esp,DWORD PTR gs:[rdx+0x61]
   14000ee9b:	(bad)  
   14000ee9c:	pop    rbp
   14000ee9d:	pop    rsp
   14000ee9e:	push   rdi
   14000ee9f:	pop    rcx
   14000eea0:	rex.WRX
   14000eea1:	rex.WXB sub bl,BYTE PTR [r9]
   14000eea4:	(bad)  
   14000eea5:	sbb    edx,DWORD PTR [rip+0x73722523]        # 0x1b37313ce
   14000eeab:	ja     0x14000ef29
   14000eead:	cdq    
   14000eeae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eeaf:	mov    bh,0xc0
   14000eeb1:	mov    edi,0x9eaebac6
   14000eeb7:	xchg   ebx,eax
   14000eeb8:	jle    0x14000ee4c
   14000eeba:	lock add BYTE PTR [rax],al
	...
   14000eec5:	add    BYTE PTR [rax],al
   14000eec7:	cli    
   14000eec8:	push   0x60616163
   14000eecd:	pop    rsp
   14000eece:	push   rdi
   14000eecf:	pop    rcx
   14000eed0:	rex.WB and BYTE PTR [r9],bl
   14000eed3:	adc    al,BYTE PTR [rdx]
   14000eed5:	or     dl,BYTE PTR [rcx]
   14000eed7:	(bad)  
   14000eed8:	and    al,0x70
   14000eeda:	jb     0x14000ef52
   14000eedc:	jnp    0x14000ee60
   14000eede:	lods   al,BYTE PTR ds:[rsi]
   14000eedf:	mov    bh,0xc6
   14000eee1:	mov    edi,0x9daeb7c6
   14000eee7:	xchg   ebx,eax
   14000eee8:	jle    0x14000ef68
	...
   14000eefa:	ins    DWORD PTR es:[rdi],dx
   14000eefb:	(bad)  
   14000eefc:	pop    rbp
   14000eefd:	pop    rsp
   14000eefe:	push   rdi
   14000eeff:	rex.W and BYTE PTR [rcx],bl
   14000ef02:	adc    edx,DWORD PTR [rcx]
   14000ef04:	adc    DWORD PTR [rcx],ecx
   14000ef06:	sbb    eax,0x72252313
   14000ef0b:	je     0x14000ef88
   14000ef0d:	and    DWORD PTR [rdi+rsi*4-0x3938383a],0xffffffb7
   14000ef15:	lods   al,BYTE PTR ds:[rsi]
   14000ef16:	pushf  
   14000ef17:	xchg   edx,eax
   14000ef18:	jle    0x14000eea2
	...
   14000ef2a:	add    BYTE PTR [rax],al
   14000ef2c:	clc    
   14000ef2d:	pop    rsi
   14000ef2e:	sub    DWORD PTR ds:[rax+rbx*1],ebx
   14000ef32:	sbb    BYTE PTR [rbx],bl
   14000ef34:	sbb    BYTE PTR [rsi],bl
   14000ef36:	or     DWORD PTR [rbx],edx
   14000ef38:	(bad)  
   14000ef39:	and    al,0x70
   14000ef3b:	jae    0x14000efb4
   14000ef3d:	(bad)  
   14000ef3e:	movabs ds:0x95abb7c0ccccc6b7,eax
   14000ef47:	jle    0x14000efc7
   14000ef49:	repz add BYTE PTR [rax],al
	...
   14000ef5c:	add    BYTE PTR [rax],al
   14000ef5e:	sub    ebp,DWORD PTR [rcx]
   14000ef60:	sub    DWORD PTR [rax],ebp
   14000ef62:	and    BYTE PTR [rip+0x1f0d1d1e],bl        # 0x15f0e0c86
   14000ef68:	adc    esp,DWORD PTR [rbx]
   14000ef6a:	and    eax,0xa37d7772
   14000ef6f:	mov    bh,0xc6
   14000ef71:	int3   
   14000ef72:	int3   
   14000ef73:	(bad)  
   14000ef74:	mov    cl,0x9e
   14000ef76:	xchg   ebx,eax
   14000ef77:	xchg   edx,eax
   14000ef78:	xchg   esp,eax
	...
   14000ef8d:	add    BYTE PTR [rax],al
   14000ef8f:	cmp    cl,BYTE PTR [rip+0x2904060a]        # 0x16904f59f
   14000ef95:	sub    BYTE PTR [rcx],ch
   14000ef97:	(bad)  
   14000ef98:	adc    esp,DWORD PTR [rdx]
   14000ef9a:	and    eax,0xa27c7472
   14000ef9f:	mov    bh,0xc7
   14000efa1:	ror    ah,cl
   14000efa3:	shl    BYTE PTR [rcx-0x74816d62],0x0
	...
   14000efbe:	add    BYTE PTR [rax],al
   14000efc0:	rex.WRXB xor BYTE PTR [r9+r9*1],r15b
   14000efc4:	or     eax,DWORD PTR [rip+0x131f3904]        # 0x1532028ce
   14000efca:	and    al,0x70
   14000efcc:	je     0x14000f049
   14000efce:	fwait
   14000efcf:	mov    ebx,0xc0ccd6c7
   14000efd4:	scas   al,BYTE PTR es:[rdi]
   14000efd5:	pushf  
   14000efd6:	xchg   edx,eax
   14000efd7:	jle    0x14000efd9
	...
   14000eff1:	push   rsp
   14000eff2:	push   rdx
   14000eff3:	xor    DWORD PTR [rsi+rcx*1],edi
   14000eff6:	or     eax,DWORD PTR [rsi]
   14000eff8:	cmp    edx,DWORD PTR [rbx]
   14000effa:	and    ah,BYTE PTR [rip+0xffffffffb79b7972]        # 0xf79c6972
   14000f000:	int3   
   14000f001:	fcmovbe st,st(2)
   14000f003:	shr    BYTE PTR [rbp+rdx*4+0x947e],0x0
	...
   14000f01f:	add    BYTE PTR [rax],al
   14000f021:	add    BYTE PTR [rbp+0x33],al
   14000f024:	xor    DWORD PTR [rip+0x203d0d37],ebp        # 0x1603dfd61
   14000f02a:	adc    al,0x24
   14000f02c:	jb     0x14000f0a5
   14000f02e:	cmp    DWORD PTR [rsi-0x442e252e],0xffffffab
   14000f035:	xchg   ebx,eax
   14000f036:	jle    0x14000efc5
	...
   14000f054:	rex.WR xor BYTE PTR [rsi],r13b
   14000f057:	cmp    al,0x38
   14000f059:	cmp    dl,BYTE PTR [rbx]
   14000f05b:	and    esi,DWORD PTR [rax+0x76]
   14000f05e:	cmp    DWORD PTR [rsi-0x452e132a],0xffffff9e
   14000f065:	xchg   ebx,eax
   14000f066:	jle    0x14000f068
	...
   14000f084:	add    BYTE PTR [rax],al
   14000f086:	rex.X xor BYTE PTR [rip+0x25161d41],bpl        # 0x165170dce
   14000f08d:	je     0x14000f012
   14000f08f:	mov    bh,0xda
   14000f091:	in     eax,dx
   14000f092:	(bad)  
   14000f093:	mov    bh,0x9d
   14000f095:	xchg   edx,eax
   14000f096:	jle    0x14000f098
	...
   14000f0b4:	add    BYTE PTR [rax],al
   14000f0b6:	add    BYTE PTR [rbp+0x31],dl
   14000f0b9:	xor    BYTE PTR [rcx],bh
   14000f0bb:	adc    esp,DWORD PTR [rdx+rsi*2]
   14000f0be:	jge    0x14000f07b
   14000f0c0:	in     al,dx
   14000f0c1:	(bad)  
   14000f0c2:	(bad)  
   14000f0c3:	mov    cl,0x95
   14000f0c5:	jle    0x14000f054
	...
   14000f0e7:	add    BYTE PTR [rcx+0x31],dl
   14000f0ea:	rex.X sbb spl,BYTE PTR [rdx]
   14000f0ed:	jno    0x14000f16a
   14000f0ef:	mov    edx,0xaed1ebea
   14000f0f4:	xchg   edx,eax
   14000f0f5:	jle    0x14000f0f7
	...
   14000f117:	add    BYTE PTR [rax],al
   14000f119:	xor    r9,QWORD PTR [r14+r10*1]
   14000f11d:	and    eax,0xebebb37a
   14000f122:	shr    DWORD PTR [rbx+0x9492],1
	...
   14000f148:	add    BYTE PTR [rax],al
   14000f14a:	xor    eax,DWORD PTR [rax+0x13]
   14000f14d:	and    al,0x76
   14000f14f:	mov    bl,0xeb
   14000f151:	jmp    0x14000f11a
   14000f153:	sahf   
   14000f154:	jle    0x14000f0e6
	...
   14000f17a:	imul   eax,DWORD PTR [rdx+0x6],0xebaa7322
   14000f181:	jmp    0x14000f146
   14000f183:	xchg   ebp,eax
   14000f184:	jle    0x14000f186
	...
   14000f1aa:	add    BYTE PTR [rdi+0x3f],al
   14000f1ad:	adc    eax,0xebeba771
   14000f1b2:	scas   eax,DWORD PTR es:[rdi]
   14000f1b3:	xchg   ebx,eax
   14000f1b4:	mov    al,BYTE PTR [rax]
	...
   14000f1da:	add    BYTE PTR [rax],al
   14000f1dc:	push   rax
   14000f1dd:	and    BYTE PTR [rip+0xffffffffa4e9eb83],ah        # 0xe4eadd66
   14000f1e3:	jle    0x14000f1e5
	...
   14000f209:	add    BYTE PTR [rax],al
   14000f20b:	add    BYTE PTR [rdx+0x3a],bl
   14000f20e:	(bad)  
   14000f20f:	jnp    0x14000f1fb
   14000f211:	rcl    BYTE PTR [rsi+0x88],1
	...
   14000f23b:	add    BYTE PTR [rax],al
   14000f23d:	push   rbx
   14000f23e:	sbb    al,0x74
   14000f240:	iret   
   14000f241:	mov    bl,0x92
	...
   14000f26b:	add    BYTE PTR [rax],al
   14000f26d:	add    BYTE PTR [rax],dl
   14000f26f:	(bad)  
   14000f270:	fwait
   14000f271:	cwde   
   14000f272:	mov    es,WORD PTR [rax]
	...
   14000f29c:	add    BYTE PTR [rax],al
   14000f29e:	imul   esp,DWORD PTR [rcx],0x8779
	...
   14000f2cc:	add    BYTE PTR [rax],al
   14000f2ce:	add    dh,ch
   14000f2d0:	out    dx,eax
	...
   14000f33d:	add    BYTE PTR [rax],al
   14000f33f:	add    bh,bh
   14000f341:	(bad)  
   14000f342:	(bad)  
   14000f343:	(bad)  
   14000f344:	(bad)  
   14000f345:	inc    DWORD PTR [rax]
   14000f347:	add    bh,bh
   14000f349:	(bad)  
   14000f34a:	(bad)  
   14000f34b:	(bad)  
   14000f34c:	(bad)  
   14000f34d:	inc    DWORD PTR [rax]
   14000f34f:	add    bh,bh
   14000f351:	(bad)  
   14000f352:	sti    
   14000f353:	(bad)  
   14000f354:	(bad)  
   14000f355:	inc    DWORD PTR [rax]
   14000f357:	add    bh,bh
   14000f359:	push   rax
   14000f35b:	(bad)  
   14000f35c:	(bad)  
   14000f35d:	inc    DWORD PTR [rax]
   14000f35f:	add    bh,bh
   14000f361:	push   rax
   14000f363:	jg     0x14000f364
   14000f365:	inc    DWORD PTR [rax]
   14000f367:	add    bh,bh
   14000f369:	jmp    rax
   14000f36b:	(bad)  
   14000f36c:	(bad)  
   14000f36d:	inc    DWORD PTR [rax]
   14000f36f:	add    bh,bh
   14000f371:	jmp    rax
   14000f373:	ud0    edi,edi
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	(bad)  
   14000f379:	jmp    rax
   14000f37b:	(bad)  
   14000f37c:	(bad)  
   14000f37d:	inc    DWORD PTR [rax]
   14000f37f:	add    bh,bh
   14000f381:	inc    eax
   14000f383:	(bad)  
   14000f384:	(bad)  
   14000f385:	inc    DWORD PTR [rax]
   14000f387:	add    bh,bh
   14000f389:	inc    eax
   14000f38b:	add    edi,edi
   14000f38d:	inc    DWORD PTR [rax]
   14000f38f:	add    bh,bh
   14000f391:	inc    DWORD PTR [rax+0xfeff01]
   14000f397:	add    bh,bh
   14000f399:	inc    DWORD PTR [rax+0xfdff00]
   14000f39f:	add    bh,bh
   14000f3a1:	inc    DWORD PTR [rax]
   14000f3a3:	add    BYTE PTR [rdi-0x7],bh
   14000f3a6:	add    BYTE PTR [rax],al
   14000f3a8:	(bad)  
   14000f3a9:	inc    BYTE PTR [rax]
   14000f3ab:	add    BYTE PTR [rdi],bh
   14000f3ad:	repz add BYTE PTR [rax],al
   14000f3b0:	(bad)  
   14000f3b1:	fadd   QWORD PTR [rax]
   14000f3b3:	add    BYTE PTR [rdi],bl
   14000f3b5:	ret    
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	inc    DWORD PTR [rax]
   14000f3ba:	add    BYTE PTR [rax],al
   14000f3bc:	(bad)  
   14000f3bd:	add    DWORD PTR [rax],0x0
   14000f3c0:	inc    BYTE PTR [rax]
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	add    BYTE PTR [rdi],al
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	cld    
   14000f3c9:	add    BYTE PTR [rax],al
   14000f3cb:	add    BYTE PTR [rax],al
   14000f3cd:	(bad)  
   14000f3ce:	add    BYTE PTR [rax],al
   14000f3d0:	lock add BYTE PTR [rax],al
   14000f3d3:	add    BYTE PTR [rax],al
   14000f3d5:	sldt   WORD PTR [rax]
   14000f3d8:	loopne 0x14000f3da
   14000f3da:	add    BYTE PTR [rax],al
   14000f3dc:	add    BYTE PTR [rdi],cl
   14000f3de:	add    BYTE PTR [rax],al
   14000f3e0:	add    BYTE PTR [rax],0x0
   14000f3e3:	add    BYTE PTR [rax],al
   14000f3e5:	sldt   WORD PTR [rax]
   14000f3e8:	add    BYTE PTR [rax],al
   14000f3ea:	add    BYTE PTR [rax],al
   14000f3ec:	add    BYTE PTR [rdi],bl
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	rol    BYTE PTR [rax],0x0
   14000f3f3:	add    BYTE PTR [rax],al
   14000f3f5:	(bad)  
   14000f3f6:	add    BYTE PTR [rax],al
   14000f3f8:	clc    
   14000f3f9:	add    BYTE PTR [rax],al
   14000f3fb:	add    BYTE PTR [rax],al
   14000f3fd:	(bad)  
   14000f3fe:	add    BYTE PTR [rax],al
   14000f400:	inc    BYTE PTR [rax]
   14000f402:	add    BYTE PTR [rax],al
   14000f404:	add    BYTE PTR [rdi],bh
   14000f406:	add    BYTE PTR [rax],al
   14000f408:	inc    eax
   14000f40a:	add    BYTE PTR [rax],al
   14000f40c:	add    BYTE PTR [rdi],bh
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	push   rax
   14000f412:	add    BYTE PTR [rax],al
   14000f414:	add    BYTE PTR [rdi],bh
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	(bad)  
   14000f419:	cld    
   14000f41a:	add    BYTE PTR [rax],al
   14000f41c:	add    BYTE PTR [rdi+0x0],bh
   14000f41f:	add    bh,bh
   14000f421:	inc    BYTE PTR [rax]
   14000f423:	add    BYTE PTR [rax],al
   14000f425:	jg     0x14000f427
   14000f427:	add    bh,bh
   14000f429:	inc    DWORD PTR [rax]
   14000f42b:	add    BYTE PTR [rax],al
   14000f42d:	inc    DWORD PTR [rax]
   14000f42f:	add    bh,bh
   14000f431:	inc    DWORD PTR [rax+0xff0000]
   14000f437:	add    bh,bh
   14000f439:	inc    eax
   14000f43b:	add    BYTE PTR [rax],al
   14000f43d:	inc    DWORD PTR [rax]
   14000f43f:	add    bh,bh
   14000f441:	push   rax
   14000f443:	add    BYTE PTR [rcx],al
   14000f445:	inc    DWORD PTR [rax]
   14000f447:	add    bh,bh
   14000f449:	(bad)  
   14000f44a:	cld    
   14000f44b:	add    BYTE PTR [rcx],al
   14000f44d:	inc    DWORD PTR [rax]
   14000f44f:	add    bh,bh
   14000f451:	(bad)  
   14000f452:	inc    BYTE PTR [rax]
   14000f454:	add    edi,edi
   14000f456:	add    BYTE PTR [rax],al
   14000f458:	(bad)  
   14000f459:	(bad)  
   14000f45a:	inc    DWORD PTR [rax]
   14000f45c:	add    edi,edi
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	(bad)  
   14000f461:	(bad)  
   14000f462:	inc    DWORD PTR [rax+0xff03]
   14000f468:	(bad)  
   14000f469:	(bad)  
   14000f46a:	inc    eax
   14000f46c:	add    edi,edi
   14000f46e:	add    BYTE PTR [rax],al
   14000f470:	(bad)  
   14000f471:	(bad)  
   14000f472:	inc    eax
   14000f474:	(bad)  
   14000f475:	inc    DWORD PTR [rax]
   14000f477:	add    bh,bh
   14000f479:	(bad)  
   14000f47a:	jmp    rax
   14000f47c:	(bad)  
   14000f47d:	inc    DWORD PTR [rax]
   14000f47f:	add    bh,bh
   14000f481:	(bad)  
   14000f482:	push   rax
   14000f484:	ud0    eax,DWORD PTR [rax]
   14000f487:	add    bh,bh
   14000f489:	(bad)  
   14000f48a:	push   rax
   14000f48c:	ud0    eax,DWORD PTR [rax]
   14000f48f:	add    bh,bh
   14000f491:	(bad)  
   14000f492:	(bad)  
   14000f493:	clc    
   14000f494:	(bad)  
   14000f495:	inc    DWORD PTR [rax]
   14000f497:	add    bh,bh
   14000f499:	(bad)  
   14000f49a:	(bad)  
   14000f49b:	cld    
   14000f49c:	(bad)  
   14000f49d:	inc    DWORD PTR [rax]
   14000f49f:	add    bh,bh
   14000f4a1:	(bad)  
   14000f4a2:	(bad)  
   14000f4a3:	cld    
   14000f4a4:	(bad)  
   14000f4a5:	inc    DWORD PTR [rax]
   14000f4a7:	add    bh,bh
   14000f4a9:	(bad)  
   14000f4aa:	(bad)  
   14000f4ab:	(bad)  
   14000f4ac:	jg     0x14000f4ad
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	(bad)  
   14000f4b1:	(bad)  
   14000f4b2:	(bad)  
   14000f4b3:	(bad)  
   14000f4b4:	(bad)  
   14000f4b5:	inc    DWORD PTR [rax]
   14000f4b7:	add    bh,bh
   14000f4b9:	(bad)  
   14000f4ba:	(bad)  
   14000f4bb:	(bad)  
   14000f4bc:	(bad)  
   14000f4bd:	inc    DWORD PTR [rax]
   14000f4bf:	add    BYTE PTR [rax],ch
   14000f4c1:	add    BYTE PTR [rax],al
   14000f4c3:	add    BYTE PTR [rax],ah
   14000f4c5:	add    BYTE PTR [rax],al
   14000f4c7:	add    BYTE PTR [rax+0x0],al
   14000f4ca:	add    BYTE PTR [rax],al
   14000f4cc:	add    DWORD PTR [rax],eax
   14000f4ce:	or     BYTE PTR [rax],al
   14000f4d0:	add    BYTE PTR [rax],al
   14000f4d2:	add    BYTE PTR [rax],al
   14000f4d4:	add    BYTE PTR [rax+rax*1],al
	...
   14000f4df:	add    BYTE PTR [rax],al
   14000f4e1:	add    DWORD PTR [rax],eax
   14000f4e3:	add    BYTE PTR [rax],al
   14000f4e5:	add    DWORD PTR [rax],eax
   14000f4e7:	add    BYTE PTR [rax],al
   14000f4e9:	add    BYTE PTR [rax],al
   14000f4eb:	add    BYTE PTR [rdi+riz*1],bh
   14000f4ee:	add    BYTE PTR ds:[rdi+0x39],dl
   14000f4f2:	(bad)  
   14000f4f3:	add    BYTE PTR [rdi+0x3d],bl
   14000f4f6:	xor    eax,0x3e355200
   14000f4fb:	add    BYTE PTR [rdx+0x3d],bl
   14000f4fe:	cmp    eax,0x2b547e00
   14000f503:	add    BYTE PTR [rbx+rdx*2+0x2d],bh
   14000f507:	add    BYTE PTR [rdx+0x40],ah
   14000f50a:	add    BYTE PTR ss:[rbp+0x42],ah
   14000f50e:	xor    eax,0x30456900
   14000f513:	add    BYTE PTR [rcx+0x47],ch
   14000f516:	add    BYTE PTR ss:[rcx+0x40],ah
   14000f51a:	cmp    DWORD PTR [rax],eax
   14000f51c:	cmp    BYTE PTR gs:[rax],r8b
   14000f520:	jo     0x14000f56c
   14000f522:	add    BYTE PTR ss:[rip+0x1e004611],bl        # 0x15e013b3a
   14000f529:	adc    ecx,DWORD PTR [rcx+0x0]
   14000f52c:	sbb    DWORD PTR [rcx],edx
   14000f52e:	rex.WRXB add BYTE PTR [r14],r11b
   14000f531:	adc    eax,0x1117004f
   14000f536:	push   rbx
   14000f537:	add    BYTE PTR [rsi],dl
   14000f539:	adc    DWORD PTR [rdi+0x0],edx
   14000f53c:	(bad)  
   14000f53d:	adc    DWORD PTR [rax+0x0],ebx
   14000f540:	sbb    BYTE PTR [rbx],dl
   14000f542:	pop    rbp
   14000f543:	add    BYTE PTR [rbx],ah
   14000f545:	adc    al,0x46
   14000f547:	add    BYTE PTR [rsp+rdx*1],ah
   14000f54a:	rex.RX add BYTE PTR [rax],r13b
   14000f54d:	(bad)  
   14000f54e:	rex.RX add BYTE PTR [rip+0x2c004618],r12b        # 0x16c013b6d
   14000f555:	sbb    eax,0x1a290042
   14000f55a:	rex.RX add BYTE PTR [rip+0x34004819],r12b        # 0x174013d7a
   14000f561:	and    DWORD PTR [rsi+0x0],eax
   14000f564:	cmp    BYTE PTR [rdx],ah
   14000f566:	rex.XB add BYTE PTR [r15],bpl
   14000f569:	and    al,0x58
   14000f56b:	add    BYTE PTR [rip+0x15006012],dl        # 0x155015583
   14000f571:	adc    esp,DWORD PTR [rbp+0x0]
   14000f574:	sbb    bl,BYTE PTR [rax]
   14000f576:	add    BYTE PTR [esp+edx*1],dl
   14000f57a:	push   0x0
   14000f57c:	adc    al,0x15
   14000f57e:	ins    DWORD PTR es:[rdi],dx
   14000f57f:	add    BYTE PTR [rip+0x14007116],dl        # 0x15401669b
   14000f585:	(bad)  
   14000f586:	je     0x14000f588
   14000f588:	adc    al,0x18
   14000f58a:	jbe    0x14000f58c
   14000f58c:	sbb    BYTE PTR [rdx],bl
   14000f58e:	je     0x14000f590
   14000f590:	adc    al,0x19
   14000f592:	jns    0x14000f594
   14000f594:	(bad)  
   14000f595:	sbb    bh,BYTE PTR [rbp+0x0]
   14000f598:	sub    BYTE PTR [r10+0x0],al
   14000f59c:	rex.XB sub eax,0x2f490046
   14000f5a2:	rex.X add BYTE PTR [rax+0x2f],cl
   14000f5a6:	add    BYTE PTR [r10+0x30],r9b
   14000f5aa:	add    BYTE PTR [rbp+0x32],cl
   14000f5ae:	add    BYTE PTR [rsi+0x3b],dl
   14000f5b2:	rex.WX add BYTE PTR [rcx-0x5cffe495],spl
   14000f5b9:	ins    DWORD PTR es:[rdi],dx
   14000f5ba:	sbb    eax,0x1970a800
   14000f5bf:	add    BYTE PTR [rbp-0x71ffe386],dh
   14000f5c5:	pop    rdi
   14000f5c6:	and    eax,DWORD PTR [rax]
   14000f5c8:	xchg   BYTE PTR [rdx+0x2e],bl
   14000f5cb:	add    BYTE PTR [rdi-0x6bffdc96],bl
   14000f5d1:	sub    al,BYTE PTR fs:[rax]
   14000f5d4:	xchg   esi,eax
   14000f5d5:	data16 add BYTE PTR cs:[rdx-0x72ffd398],bl
   14000f5dd:	(bad)  
   14000f5de:	xor    eax,0x2b6fa400
   14000f5e3:	add    BYTE PTR [rax-0x53ffda8f],ch
   14000f5e9:	jbe    0x14000f610
   14000f5eb:	add    BYTE PTR [rsp+rdi*2+0x6f9c0025],dh
   14000f5f2:	add    BYTE PTR [r9-0x55ffaf94],dl
   14000f5f9:	ja     0x14000f63d
   14000f5fb:	add    BYTE PTR [rdi-0x5bffb389],ah
   14000f601:	jl     0x14000f64e
   14000f603:	add    BYTE PTR [rdx-0x4dffb486],ch
   14000f609:	jg     0x14000f658
   14000f60b:	add    BYTE PTR [rbp-0x54ffab87],ah
   14000f611:	jge    0x14000f668
   14000f613:	add    bl,al
   14000f615:	and    DWORD PTR [rbx],0x0
   14000f618:	mov    ah,0x86
   14000f61a:	add    BYTE PTR [rcx-0x48ffbb7d],r15b
   14000f621:	or     DWORD PTR [rbx+0x0],0xffffffbe
   14000f625:	mov    BYTE PTR [rdi+0x0],cl
   14000f628:	mov    dh,0x83
   14000f62a:	push   rcx
   14000f62b:	add    BYTE PTR [rdx-0x3fff986a],bh
   14000f631:	mov    DWORD PTR [rsi+0x0],ecx
   14000f634:	(bad)
   14000f637:	add    al,cl
   14000f639:	(bad)  
   14000f63a:	rex.WXB add r14b,cl
   14000f63d:	xchg   edx,eax
   14000f63e:	rex.RX add dl,r9b
   14000f641:	nop
   14000f642:	rex.WX add bpl,cl
   14000f645:	xchg   ecx,eax
   14000f646:	rex.W add dl,dl
   14000f649:	xchg   ebp,eax
   14000f64a:	rex.X add al,dl
   14000f64d:	xchg   ebx,eax
   14000f64e:	add    r12b,r10b
   14000f651:	cdq    
   14000f652:	rex.XB add r14b,dl
   14000f655:	fwait
   14000f656:	add    r15b,r10b
   14000f659:	popf   
   14000f65a:	rex.RX add sil,r10b
   14000f65d:	lahf   
   14000f65e:	rex.WXB add r8b,bl
   14000f661:	sahf   
   14000f662:	rex.WB add r14b,cl
   14000f665:	pushf  
   14000f666:	push   rdi
   14000f667:	add    cl,bl
   14000f669:	movabs al,ds:0xa1d90052a1d5004e
   14000f672:	push   rax
   14000f673:	add    dh,dl
   14000f675:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f676:	pop    rsi
   14000f677:	add    dh,cl
   14000f679:	movabs ds:0xa3c80069a1ce0065,eax
   14000f682:	outs   dx,DWORD PTR ds:[rsi]
   14000f683:	add    bh,cl
   14000f685:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f686:	ins    BYTE PTR es:[rdi],dx
   14000f687:	add    bl,cl
   14000f689:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f68a:	js     0x14000f68c
   14000f68c:	enter  0x7ca9,0x0
   14000f690:	xlat   BYTE PTR ds:[rbx]
   14000f691:	lods   eax,DWORD PTR ds:[rsi]
   14000f692:	jne    0x14000f694
   14000f694:	(bad)  
   14000f695:	sbb    al,0x80
   14000f697:	add    BYTE PTR [rax],bl
   14000f699:	sbb    al,0x82
   14000f69b:	add    BYTE PTR [rax],bl
   14000f69d:	sbb    eax,0x201b0085
   14000f6a2:	mov    al,BYTE PTR [rax]
   14000f6a4:	sbb    esp,DWORD PTR [rcx]
   14000f6a6:	mov    WORD PTR [rax],es
   14000f6a8:	sbb    al,0x21
   14000f6aa:	lea    eax,[rax]
   14000f6ac:	sbb    eax,0x1e008e25
   14000f6b1:	and    eax,0x261f0092
   14000f6b6:	xchg   esp,eax
   14000f6b7:	add    BYTE PTR [rcx],ah
   14000f6b9:	sub    bl,BYTE PTR [rcx-0x64d3df00]
   14000f6bf:	add    BYTE PTR [rbx],ah
   14000f6c1:	sub    al,0x9c
   14000f6c3:	add    BYTE PTR [rbx],ah
   14000f6c5:	xor    ah,BYTE PTR [rcx-0x5dcedc00]
   14000f6cb:	add    BYTE PTR [rip+0x2600a432],ah        # 0x166019b03
   14000f6d1:	xor    al,0xa7
   14000f6d3:	add    BYTE PTR [rsi],ah
   14000f6d5:	ss test eax,0xab382700
   14000f6db:	add    BYTE PTR [rax],ch
   14000f6dd:	cmp    ch,BYTE PTR [rdi-0x4dc2d800]
   14000f6e3:	add    BYTE PTR [rip+0x3200be34],ch        # 0x17201b51d
   14000f6e9:	cmp    DWORD PTR [rsi-0x40c4cc00],edi
   14000f6ef:	add    BYTE PTR [rdx],ch
   14000f6f1:	mov    r15b,0x0
   14000f6f4:	sub    eax,DWORD PTR [rbx-0x46]
   14000f6f7:	add    BYTE PTR [rbx],ch
   14000f6f9:	rex.R mov edx,0xbe492c00
   14000f6ff:	add    BYTE PTR [rsi+0x53],dl
   14000f702:	xchg   ebp,eax
   14000f703:	add    BYTE PTR [rax+0x43],al
   14000f706:	mov    ecx,0xba464300
   14000f70b:	add    BYTE PTR [rsi+0x55],dl
   14000f70e:	mov    dl,0x0
   14000f710:	pop    rcx
   14000f711:	pop    rbp
   14000f712:	mov    edx,0xb7626100
   14000f717:	add    BYTE PTR [rcx+0x66],ch
   14000f71a:	mov    dl,0x0
   14000f71c:	imul   ebp,DWORD PTR [rcx-0x4c],0x0
   14000f720:	je     0x14000f792
   14000f722:	mov    dl,0x0
   14000f724:	jbe    0x14000f799
   14000f726:	mov    ch,0x0
   14000f728:	sub    eax,0x2d00c134
   14000f72d:	(bad)
   14000f731:	cmp    ecx,ecx
   14000f733:	add    BYTE PTR [rdi],ch
   14000f735:	cmp    eax,0x3e3700ce
   14000f73a:	rol    BYTE PTR [rax],0x2f
   14000f73d:	(bad)  
   14000f73e:	rol    BYTE PTR [rax],1
   14000f740:	xor    BYTE PTR [rdi],bh
   14000f742:	rol    BYTE PTR [rax],1
   14000f744:	sub    eax,0x2d00c048
   14000f749:	rex.WX (bad) 
   14000f74b:	add    BYTE PTR [rdi],ch
   14000f74d:	rex.WRB mov QWORD PTR [r8],0xc84e2f
   14000f754:	xor    BYTE PTR [rax-0x32],al
   14000f757:	add    BYTE PTR [rdi],ch
   14000f759:	push   rax
   14000f75a:	mov    DWORD PTR [rax],0xc9502f
   14000f760:	xor    DWORD PTR [rdx-0x33],edx
   14000f763:	add    BYTE PTR [rcx],dh
   14000f765:	push   rbp
   14000f766:	(bad)  
   14000f767:	add    BYTE PTR [rcx],dh
   14000f769:	rex.R (bad) 
   14000f76b:	add    BYTE PTR [rdx],dh
   14000f76d:	rex.WX fld DWORD PTR [rax]
   14000f770:	xor    ecx,DWORD PTR [rbp+rbx*8+0x0]
   14000f774:	xor    edx,DWORD PTR [rdi-0x2c]
   14000f777:	add    BYTE PTR [rdx],dh
   14000f779:	pop    rdx
   14000f77a:	rol    DWORD PTR [rax],cl
   14000f77c:	xor    ebx,DWORD PTR [rcx-0x2b]
   14000f77f:	add    BYTE PTR [rbx+rbx*2],dh
   14000f782:	xlat   BYTE PTR ds:[rbx]
   14000f783:	add    BYTE PTR [rbx],dh
   14000f785:	pop    rbp
   14000f786:	xlat   BYTE PTR ds:[rbx]
   14000f787:	add    BYTE PTR [rbx],dh
   14000f789:	push   rcx
   14000f78a:	fiadd  DWORD PTR [rax]
   14000f78c:	xor    al,0x53
   14000f78e:	fiadd  WORD PTR [rax]
   14000f790:	xor    eax,0x3100d95c
   14000f795:	jno    0x14000f765
   14000f797:	add    BYTE PTR [rax+riz*2],dh
   14000f79a:	fild   DWORD PTR [rax]
   14000f79c:	xor    eax,0x3600de62
   14000f7a1:	data16 fiadd WORD PTR [rax]
   14000f7a4:	xor    al,0x53
   14000f7a6:	loopne 0x14000f7a8
   14000f7a8:	xor    al,0x54
   14000f7aa:	loope  0x14000f7ac
   14000f7ac:	ss pop rsp
   14000f7ae:	jrcxz  0x14000f7b0
   14000f7b0:	ss pop rbx
   14000f7b2:	in     al,0x0
   14000f7b4:	ss movsxd esp,ebx
   14000f7b7:	add    BYTE PTR [rsi],dh
   14000f7b9:	fs loope 0x14000f7bc
   14000f7bc:	(bad)  
   14000f7bd:	gs in  eax,0x0
   14000f7c0:	(bad)  
   14000f7c1:	imul   esp,ebp,0xe76d3700
   14000f7c7:	add    BYTE PTR [rax],bh
   14000f7c9:	outs   dx,DWORD PTR ds:[rsi]
   14000f7ca:	out    0x0,al
   14000f7cc:	cmp    BYTE PTR [rax+rbp*8+0x0],ch
   14000f7d0:	cmp    BYTE PTR [rdx-0x17],dh
   14000f7d3:	add    BYTE PTR [rdx],bh
   14000f7d5:	jne    0x14000f7c1
   14000f7d7:	add    BYTE PTR [rcx],bh
   14000f7d9:	jns    0x14000f7c5
   14000f7db:	add    BYTE PTR [rdi],bh
   14000f7dd:	jns    0x14000f7c8
   14000f7df:	add    BYTE PTR [rcx],bh
   14000f7e1:	jle    0x14000f7ce
   14000f7e3:	add    BYTE PTR [rsi+rdi*2],bh
   14000f7e6:	jmp    0x14000f7e8
   14000f7e8:	cmp    edi,DWORD PTR [rdi-0x14]
   14000f7eb:	add    BYTE PTR [rdi+rdi*2],bh
   14000f7ee:	in     al,dx
   14000f7ef:	add    BYTE PTR [rdx],bh
   14000f7f1:	sub    ebx,0xec813b00
   14000f7f7:	add    BYTE PTR [rcx+rax*4],bh
   14000f7fa:	in     al,dx
   14000f7fb:	add    BYTE PTR [rdx],bh
   14000f7fd:	test   esp,ebp
   14000f7ff:	add    BYTE PTR [rdx],bh
   14000f801:	mov    ebp,ebp
   14000f803:	add    BYTE PTR [rdx+rcx*4],bh
   14000f806:	in     eax,dx
   14000f807:	add    BYTE PTR [rbx],bh
   14000f809:	(bad)  
   14000f80a:	in     eax,dx
   14000f80b:	add    BYTE PTR [rbx],bh
   14000f80d:	xchg   edx,eax
   14000f80e:	out    dx,al
   14000f80f:	add    BYTE PTR [rax+rdx*4],bh
   14000f812:	out    dx,al
   14000f813:	add    BYTE PTR [rbx],bh
   14000f815:	xchg   esi,eax
   14000f816:	out    dx,eax
   14000f817:	add    BYTE PTR [rcx],bh
   14000f819:	cwde   
   14000f81a:	call   0x12f9c331f
   14000f81f:	add    BYTE PTR [rdx],bh
   14000f821:	cwde   
   14000f822:	lock add BYTE PTR [rdx],bh
   14000f825:	popf   
   14000f826:	lock add BYTE PTR [rcx],bh
   14000f829:	stos   BYTE PTR es:[rdi],al
   14000f82a:	loope  0x14000f82c
   14000f82c:	cmp    al,0xbe
   14000f82e:	(bad)  
   14000f82f:	add    BYTE PTR [rbx],bh
   14000f831:	mov    edx,0xba3c00ef
   14000f836:	in     al,dx
   14000f837:	add    BYTE PTR [rdx],bh
   14000f839:	movabs al,ds:0xa43c00f2a63b00f0
   14000f842:	lock add BYTE PTR [rdx+rbp*4],bh
   14000f846:	icebp  
   14000f847:	add    BYTE PTR [rcx],bh
   14000f849:	lods   al,BYTE PTR ds:[rsi]
   14000f84a:	lock add BYTE PTR [rip+0x3900f1ac],bh        # 0x17901e9fd
   14000f851:	mov    al,0xf2
   14000f853:	add    BYTE PTR [rbx],bh
   14000f855:	mov    dh,0xf3
   14000f857:	add    BYTE PTR [rcx],bh
   14000f859:	mov    ebx,0xb93b00f3
   14000f85e:	hlt    
   14000f85f:	add    BYTE PTR [rbx-0x75],bl
   14000f862:	(bad)  
   14000f863:	add    BYTE PTR [rax+rcx*4-0x28],dl
   14000f867:	add    BYTE PTR [rsi+rcx*4-0x28],dl
   14000f86b:	add    BYTE PTR [rcx-0x7f],cl
   14000f86e:	loop   0x14000f870
   14000f870:	rex.B (bad) 
   14000f872:	jmp    0x12ab84177
   14000f877:	add    BYTE PTR [rbp-0x4b],dl
   14000f87a:	loopne 0x14000f87c
   14000f87c:	cmp    al,0xc2
   14000f87e:	in     eax,dx
   14000f87f:	add    BYTE PTR [rip+0x3d00ecc4],bh        # 0x17d01e549
   14000f885:	retf   
   14000f886:	in     al,dx
   14000f887:	add    BYTE PTR [rbx],bh
   14000f889:	shr    edi,1
   14000f88b:	add    BYTE PTR [rdx+rdx*8],bh
   14000f88e:	in     eax,dx
   14000f88f:	add    BYTE PTR [rax],bh
   14000f891:	enter  0xf1,0x8e
   14000f895:	mov    DWORD PTR [rdx-0x4b716a00],edi
   14000f89b:	add    BYTE PTR [rsi-0x67ff4562],cl
   14000f8a1:	xchg   edx,eax
   14000f8a2:	mov    esp,0xbf949a00
   14000f8a7:	add    ch,bl
   14000f8a9:	mov    esi,0xa99a0093
   14000f8ae:	ret    
   14000f8af:	add    BYTE PTR [rdi-0x5fff3845],dl
   14000f8b5:	mov    bl,0xc2
	...
   14000f8e3:	add    bh,bh
   14000f8e5:	(bad)  
   14000f8e6:	inc    DWORD PTR [rax]
	...
   14000f934:	add    dl,dh
   14000f936:	fucom  st(4)
	...
   14000f954:	add    bl,ah
   14000f956:	fstp   st(3)
   14000f958:	fpatan 
	...
   14000f972:	add    BYTE PTR [rax],al
   14000f974:	add    cl,bl
   14000f976:	(bad)  
   14000f978:	int    0xc9
   14000f97a:	icebp  
	...
   14000f993:	add    dh,bl
   14000f995:	enter  0xc8c8,0xc8
   14000f999:	ret    
   14000f99a:	mov    edi,0x0
	...
   14000f9b3:	add    BYTE PTR [rdi-0x45454752],bl
   14000f9b9:	mov    edx,0xbabf
	...
   14000f9d2:	add    BYTE PTR [rsi-0x5b637d87],al
   14000f9d8:	mov    ah,0xb8
   14000f9da:	mov    ecx,0xe1bf
	...
   14000f9e7:	out    dx,al
	...
   14000f9f0:	add    BYTE PTR [rax],al
   14000f9f2:	add    BYTE PTR [rbp+0x71],ch
   14000f9f5:	jne    0x14000fa73
   14000f9f7:	test   BYTE PTR [rdx-0x4046495c],bl
   14000f9fd:	fild   WORD PTR [rax]
   14000f9ff:	add    BYTE PTR [rax],al
   14000fa01:	add    BYTE PTR [rax],al
   14000fa03:	add    BYTE PTR [rax],al
   14000fa05:	add    BYTE PTR [rax+0x0],al
   14000fa0b:	add    BYTE PTR [rax],al
   14000fa0d:	add    BYTE PTR [rax],al
   14000fa0f:	add    BYTE PTR [rax],al
   14000fa11:	add    BYTE PTR [rbx],ah
   14000fa13:	sub    BYTE PTR [rbx+0x71],ch
   14000fa16:	je     0x14000fa91
   14000fa18:	test   BYTE PTR [rdx-0x3c454956],bl
   14000fa1e:	loopne 0x14000fa20
   14000fa20:	add    BYTE PTR [rax],al
   14000fa22:	add    BYTE PTR [rax],al
   14000fa24:	in     al,dx
   14000fa25:	nop
   14000fa26:	lea    eax,[rax]
   14000fa28:	add    BYTE PTR [rax],al
   14000fa2a:	add    BYTE PTR [rax],al
   14000fa2c:	add    BYTE PTR [rax+0x55],ch
   14000fa2f:	push   rsp
   14000fa30:	rex.WRB
   14000fa31:	ds (bad) 
   14000fa33:	and    DWORD PTR [rdi],esp
   14000fa35:	imul   esi,DWORD PTR [rcx+0x74],0x7a
   14000fa39:	test   BYTE PTR [rdi-0x373c454c],bl
   14000fa3f:	loop   0x14000fa2e
   14000fa41:	add    BYTE PTR [rax],al
   14000fa43:	mov    dl,BYTE PTR [rax+0x90]
   14000fa49:	add    BYTE PTR [rax],al
   14000fa4b:	add    BYTE PTR [rdi+0x58],bl
   14000fa4e:	pop    rax
   14000fa4f:	push   rdi
   14000fa50:	push   rbx
   14000fa51:	rex.WRX cmp al,0x1c
   14000fa54:	and    DWORD PTR [rdi],esp
   14000fa56:	imul   esi,DWORD PTR [rcx+0x75],0x7d
   14000fa5a:	pushf  
   14000fa5b:	stos   BYTE PTR es:[rdi],al
   14000fa5c:	mov    edx,0xc3c8c8bf
   14000fa61:	mov    edx,0x879095b0
   14000fa66:	add    BYTE PTR [rax],al
   14000fa68:	add    BYTE PTR [rax],al
   14000fa6a:	add    BYTE PTR [rbp+0x5c],bl
   14000fa6d:	pop    rsp
   14000fa6e:	pop    rax
   14000fa6f:	pop    rax
   14000fa70:	push   rbx
   14000fa71:	rex.WRXB
   14000fa72:	rex.W cmp BYTE PTR [rax],dl
   14000fa75:	and    DWORD PTR [rdx],ebp
   14000fa77:	ins    DWORD PTR es:[rdi],dx
   14000fa78:	jae    0x14000faf2
   14000fa7a:	(bad)  
   14000fa7b:	movabs ds:0x95a2b9c3c8c3bfb6,eax
   14000fa84:	nop
   14000fa85:	jmp    0x14000fa87
   14000fa87:	add    BYTE PTR [rax],al
   14000fa89:	addr32 (bad) 
   14000fa8b:	pop    rbp
   14000fa8c:	pop    rsi
   14000fa8d:	pop    rsp
   14000fa8e:	pop    rsp
   14000fa8f:	push   rbp
   14000fa90:	push   rdi
   14000fa91:	rex.WRXB push r8
   14000fa93:	rex.RXB or DWORD PTR [r9],r10d
   14000fa96:	and    eax,0x7e756e6b
   14000fa9b:	(bad)  
   14000fa9c:	mov    ecx,0xbfc8c8c3
   14000faa1:	mov    ah,0xa0
   14000faa3:	nop
   14000faa4:	nop
   14000faa5:	add    BYTE PTR [rax],al
   14000faa7:	add    BYTE PTR [rax],al
   14000faa9:	movsxd esp,DWORD PTR [rdx+0x60]
   14000faac:	pop    rbp
   14000faad:	pop    rsi
   14000faae:	pop    rsp
   14000faaf:	pop    rax
   14000fab0:	push   rbp
   14000fab1:	push   rbx
   14000fab2:	push   rax
   14000fab3:	rex.WX
   14000fab4:	rex.X add DWORD PTR [rip+0x7a736d27],edx        # 0x1ba7467e2
   14000fabb:	(bad)  
   14000fabc:	mov    ah,0xc3
   14000fabe:	enter  0xbfc8,0xb2
   14000fac2:	xchg   ebp,eax
   14000fac3:	nop
   14000fac4:	mov    DWORD PTR [rax],eax
   14000fac6:	add    BYTE PTR [rax],al
   14000fac8:	add    BYTE PTR [rax],al
   14000faca:	add    BYTE PTR [rdx+0x60],ch
   14000facd:	pop    rbp
   14000face:	pop    rsp
   14000facf:	pop    rax
   14000fad0:	push   rbp
   14000fad1:	rex.WRXB push r8
   14000fad3:	rex.WB xor cl,BYTE PTR [r10]
   14000fad6:	adc    BYTE PTR [rcx],ah
   14000fad8:	imul   ebp,DWORD PTR [rsi+0x78],0xffffff98
   14000fadc:	mov    ah,0xc3
   14000fade:	retf   0xbac8
   14000fae1:	mov    al,0x95
   14000fae3:	nop
	...
   14000faec:	add    al,dh
   14000faee:	(bad)  
   14000faef:	pop    rsp
   14000faf0:	push   rbp
   14000faf1:	push   rbx
   14000faf2:	rex.RB (bad) 
   14000faf4:	cldemote BYTE PTR [rdx]
   14000faf7:	adc    esp,DWORD PTR [rdi]
   14000faf9:	outs   dx,BYTE PTR ds:[rsi]
   14000fafa:	jne    0x14000fa80
   14000fafc:	mov    ah,0xc3
   14000fafe:	retf   0xbac8
   14000fb01:	movabs ds:0x9090,al
   14000fb0a:	add    BYTE PTR [rax],al
   14000fb0c:	add    BYTE PTR [rax],al
   14000fb0e:	add    BYTE PTR [rax],al
   14000fb10:	addr32 rex.R (bad) 
   14000fb13:	sbb    DWORD PTR [rax],ebx
   14000fb15:	sbb    BYTE PTR [rdx],al
   14000fb17:	sbb    al,0x21
   14000fb19:	imul   esi,DWORD PTR [rbx+0x7e],0xffffffae
   14000fb1d:	ret    
   14000fb1e:	iret   
   14000fb1f:	enter  0xa0b9,0x90
   14000fb23:	mov    WORD PTR [rax],es
	...
   14000fb31:	add    BYTE PTR [rax+rsi*1],al
   14000fb34:	(bad)  
   14000fb35:	(bad)  
   14000fb36:	(bad)  
   14000fb37:	or     DWORD PTR [rbx],edx
   14000fb39:	sub    ch,BYTE PTR [rsi+0x7a]
   14000fb3c:	stos   BYTE PTR es:[rdi],al
   14000fb3d:	enter  0xc8cf,0xb4
   14000fb41:	xchg   ebp,eax
   14000fb42:	nop
	...
   14000fb4f:	add    BYTE PTR [rax],al
   14000fb51:	add    BYTE PTR [rcx+0x39],dl
   14000fb54:	(bad)  
   14000fb55:	or     BYTE PTR [rax],dh
   14000fb57:	(bad)  
   14000fb58:	sbb    al,0x25
   14000fb5a:	ins    DWORD PTR es:[rdi],dx
   14000fb5b:	jns    0x14000fb07
   14000fb5d:	leave  
   14000fb5e:	(bad)  
   14000fb5f:	enter  0x95b2,0x80
	...
   14000fb73:	fs rex.WXB xor al,0x6
   14000fb77:	or     eax,0x756b150a
   14000fb7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fb7d:	leave  
   14000fb7e:	fcmovne st,st(0)
   14000fb80:	test   eax,0x8e90
	...
   14000fb95:	rex.RX xor eax,0x271d3a37
   14000fb9b:	jae    0x14000fb3c
   14000fb9d:	(bad)  
   14000fb9e:	fcmovnb st,st(5)
   14000fba0:	movabs al,ds:0x90
	...
   14000fbb5:	add    BYTE PTR [rax],al
   14000fbb7:	xor    al,0xa
   14000fbba:	and    DWORD PTR [rcx-0x64],esi
   14000fbbd:	fsubr  st,st(2)
   14000fbbf:	mov    esi,0x8195
	...
   14000fbd8:	rex.B
   14000fbd9:	rex adc DWORD PTR [rbx-0x7c],ebp
   14000fbdd:	fucomp st(0)
   14000fbdf:	mov    edx,0x8e95
	...
   14000fbf8:	add    BYTE PTR [rsi],dh
   14000fbfa:	add    eax,0xe8e57e25
   14000fbff:	mov    ah,0x90
	...
   14000fc19:	imul   edi,DWORD PTR [rdx],0xe7e57916
   14000fc1f:	test   eax,0x87
	...
   14000fc38:	add    BYTE PTR [rax],al
   14000fc3a:	rex.WR sub rax,0xffffffff93d1d171
   14000fc40:	out    dx,al
	...
   14000fc59:	add    BYTE PTR [rax],al
   14000fc5b:	cmp    eax,0x94c9d029
	...
   14000fc78:	add    BYTE PTR [rax],al
   14000fc7a:	add    BYTE PTR [rdi+0x20],ah
   14000fc7d:	stos   DWORD PTR es:[rdi],eax
   14000fc7e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000fc9b:	add    BYTE PTR [rbx+0x75],al
   14000fc9e:	mov    eax,DWORD PTR [rax]
	...
   14000fce8:	(bad)  
   14000fce9:	(bad)  
   14000fcea:	(bad)  
   14000fceb:	(bad)  
   14000fcec:	(bad)  
   14000fced:	(bad)  
   14000fcee:	(bad)  
   14000fcef:	(bad)  
   14000fcf0:	(bad)  
   14000fcf1:	clc    
   14000fcf2:	(bad)  
   14000fcf3:	(bad)  
   14000fcf4:	(bad)  
   14000fcf5:	clc    
   14000fcf6:	(bad)  
   14000fcf7:	(bad)  
   14000fcf8:	(bad)  
   14000fcf9:	clc    
   14000fcfa:	(bad)  
   14000fcfb:	(bad)  
   14000fcfc:	push   rax
   14000fcfe:	(bad)  
   14000fcff:	(bad)  
   14000fd00:	push   rax
   14000fd02:	ud0    edi,edi
   14000fd05:	loopne 0x14000fd0e
   14000fd07:	(bad)  
   14000fd08:	jmp    rax
   14000fd0a:	add    edi,ebp
   14000fd0c:	inc    eax
   14000fd0e:	add    ecx,esi
   14000fd10:	clc    
   14000fd11:	add    BYTE PTR [rax],al
   14000fd13:	movsxd esi,eax
   14000fd15:	add    BYTE PTR [rax],al
   14000fd17:	add    esp,eax
   14000fd19:	add    BYTE PTR [rax],al
   14000fd1b:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000fd21:	add    BYTE PTR [rax],al
   14000fd23:	(bad)  
   14000fd24:	loopne 0x14000fd26
   14000fd26:	add    BYTE PTR [rdi],cl
   14000fd28:	clc    
   14000fd29:	add    BYTE PTR [rax],al
   14000fd2b:	ud0    eax,DWORD PTR [rax]
   14000fd2e:	add    BYTE PTR [rdi],cl
   14000fd30:	inc    eax
   14000fd32:	add    BYTE PTR [rdi],bl
   14000fd34:	inc    eax
   14000fd36:	add    BYTE PTR [rdi],bl
   14000fd38:	jmp    rax
   14000fd3a:	add    BYTE PTR [rdi],bl
   14000fd3c:	(bad)  
   14000fd3d:	clc    
   14000fd3e:	add    BYTE PTR [rdi],bh
   14000fd40:	(bad)  
   14000fd41:	inc    BYTE PTR [rax]
   14000fd43:	(bad)  
   14000fd44:	(bad)  
   14000fd45:	inc    DWORD PTR [rax]
   14000fd47:	(bad)  
   14000fd48:	(bad)  
   14000fd49:	inc    DWORD PTR [rax-0x7f000081]
   14000fd4f:	jg     0x14000fd50
   14000fd51:	inc    eax
   14000fd53:	jg     0x14000fd54
   14000fd55:	jmp    rax
   14000fd57:	(bad)  
   14000fd58:	(bad)  
   14000fd59:	jmp    rcx
   14000fd5b:	(bad)  
   14000fd5c:	(bad)  
   14000fd5d:	push   rcx
   14000fd5f:	(bad)  
   14000fd60:	(bad)  
   14000fd61:	(bad)  
   14000fd62:	(bad)  
   14000fd63:	(bad)  
   14000fd64:	(bad)  
   14000fd65:	(bad)  
   14000fd66:	(bad)  
   14000fd67:	jmp    FWORD PTR [rax]
   14000fd69:	add    BYTE PTR [rax],al
   14000fd6b:	add    BYTE PTR [rax],dl
   14000fd6d:	add    BYTE PTR [rax],al
   14000fd6f:	add    BYTE PTR [rax],ah
   14000fd71:	add    BYTE PTR [rax],al
   14000fd73:	add    BYTE PTR [rcx],al
   14000fd75:	add    BYTE PTR [rax],cl
   14000fd77:	add    BYTE PTR [rax],al
   14000fd79:	add    BYTE PTR [rax],al
   14000fd7b:	add    BYTE PTR [rax],al
   14000fd7d:	add    DWORD PTR [rax],eax
	...
   14000fd87:	add    BYTE PTR [rax],al
   14000fd89:	add    DWORD PTR [rax],eax
   14000fd8b:	add    BYTE PTR [rax],al
   14000fd8d:	add    DWORD PTR [rax],eax
   14000fd8f:	add    BYTE PTR [rax],al
   14000fd91:	add    BYTE PTR [rax],al
   14000fd93:	add    BYTE PTR [rsi+0x37],dl
   14000fd96:	cmp    al,0x0
   14000fd98:	push   rsi
   14000fd99:	cmp    BYTE PTR [rbx],bh
   14000fd9b:	add    BYTE PTR [rsi+0x45],ah
   14000fd9e:	add    BYTE PTR ds:[rdi],dl
   14000fda1:	adc    al,0x5f
   14000fda3:	add    BYTE PTR [rdx],bl
   14000fda5:	(bad)  
   14000fda6:	pop    rsi
   14000fda7:	add    BYTE PTR [rdx*1+0x1e2c0045],ah
   14000fdae:	rex.WRB add BYTE PTR [rip+0x19004128],r15b        # 0x159013edd
   14000fdb5:	sbb    DWORD PTR [rsi+0x0],ebp
   14000fdb8:	adc    eax,0x16007317
   14000fdbd:	sbb    DWORD PTR [rcx+0x0],edi
   14000fdc0:	cmp    edi,DWORD PTR ds:[rbp+0x0]
   14000fdc4:	rex.XB sub eax,0x354e0046
   14000fdca:	add    BYTE PTR [rdi+0x33],al
   14000fdce:	rex.WRX add BYTE PTR [rax+0x3b],r11b
   14000fdd2:	rex.RX add BYTE PTR [rsi-0x65ffd7a6],r8b
   14000fdd9:	push   0x5b800027
   14000fdde:	add    BYTE PTR [rbp-0x59ffa385],bl
   14000fde5:	jbe    0x14000fe2d
   14000fde7:	add    BYTE PTR [rdi-0x49ffac81],ch
   14000fded:	add    BYTE PTR [rcx+0x0],0xb2
   14000fdf1:	test   DWORD PTR [rdx+0x0],ecx
   14000fdf4:	(bad)  
   14000fdf5:	mov    cs,WORD PTR [rbx+0x0]
   14000fdf8:	ror    DWORD PTR [rbp-0x733bffb1],0x4d
   14000fdff:	add    ch,cl
   14000fe01:	xchg   ecx,eax
   14000fe02:	rex.RXB add r10b,r10b
   14000fe05:	xchg   ebp,eax
   14000fe06:	rex.XB add r13b,dl
   14000fe09:	cdq    
   14000fe0a:	add    dil,r10b
   14000fe0d:	pushf  
   14000fe0e:	rex.RX add al,r11b
   14000fe11:	lahf   
   14000fe12:	rex.WXB add r9b,dl
   14000fe15:	movabs al,ds:0xaed8007aa9ce005b
   14000fe1e:	jb     0x14000fe20
   14000fe20:	sbb    ah,BYTE PTR [rax]
   14000fe22:	xchg   DWORD PTR [rax],eax
   14000fe24:	sbb    ah,BYTE PTR [rax]
   14000fe26:	mov    BYTE PTR [rax],al
   14000fe28:	sbb    al,0x22
   14000fe2a:	lea    eax,[rax]
   14000fe2c:	and    BYTE PTR [rcx],ch
   14000fe2e:	xchg   edi,eax
   14000fe2f:	add    BYTE PTR [rax],ah
   14000fe31:	sub    bl,BYTE PTR [rax-0x59cbdb00]
   14000fe37:	add    BYTE PTR [rsi],ah
   14000fe39:	ss test eax,0xab382700
   14000fe3f:	add    BYTE PTR [rdx],ch
   14000fe41:	(bad)  
   14000fe42:	mov    ch,0x0
   14000fe44:	cmp    al,0x42
   14000fe46:	mov    esp,0xb36a2b00
   14000fe4b:	add    BYTE PTR [rdi+0x4b],al
   14000fe4e:	(bad)  
   14000fe4f:	add    BYTE PTR [rbp+riz*2-0x41],bl
   14000fe53:	add    BYTE PTR [rbx+0x72],dh
   14000fe56:	mov    esp,0xc7382e00
   14000fe5b:	add    BYTE PTR [rdx],dh
   14000fe5d:	cmp    eax,eax
   14000fe5f:	add    BYTE PTR [rsi],ch
   14000fe61:	rex.WX ret 
   14000fe63:	add    BYTE PTR [rsi],ch
   14000fe65:	rex.WR ret 0x2f00
   14000fe69:	rex.WRXB enter 0x3000,0x42
   14000fe6e:	iret   
   14000fe6f:	add    BYTE PTR [rax],dh
   14000fe71:	rex rol BYTE PTR [rax],1
   14000fe74:	xor    ecx,DWORD PTR [rsi-0x28]
   14000fe77:	add    BYTE PTR [rdx],dh
   14000fe79:	push   rdi
   14000fe7a:	rol    DWORD PTR [rax],cl
   14000fe7c:	xor    DWORD PTR [rsi-0x35],edi
   14000fe7f:	add    BYTE PTR [rip+0x3700da62],dh        # 0x17701d8e7
   14000fe85:	jae    0x14000fe5f
   14000fe87:	add    BYTE PTR [rip+0x3700e05b],dh        # 0x17701dee8
   14000fe8d:	push   0x683700e3
   14000fe92:	out    0x0,al
   14000fe94:	cmp    BYTE PTR [rbp-0x1a],ch
   14000fe97:	add    BYTE PTR [rdi],dh
   14000fe99:	jne    0x14000fe7e
   14000fe9b:	add    BYTE PTR [rax],bh
   14000fe9d:	je     0x14000fe85
   14000fe9f:	add    BYTE PTR [rsi],dh
   14000fea1:	jp     0x14000fe83
   14000fea3:	add    BYTE PTR [rcx],bh
   14000fea5:	jne    0x14000fe90
   14000fea7:	add    BYTE PTR [rdx],bh
   14000fea9:	jns    0x14000fe95
   14000feab:	add    BYTE PTR [rbx+0x49],al
   14000feae:	rol    DWORD PTR [rax],0x41
   14000feb1:	jle    0x14000fe98
   14000feb3:	add    BYTE PTR [rax+rax*4],dh
   14000feb6:	fld    DWORD PTR [rax]
   14000feb8:	cmp    al,0x8a
   14000feba:	in     al,dx
   14000febb:	add    BYTE PTR [rbx],bh
   14000febd:	(bad)  
   14000febe:	in     eax,dx
   14000febf:	add    BYTE PTR [rax],bh
   14000fec1:	xchg   esp,eax
   14000fec2:	in     eax,0x0
   14000fec4:	cmp    edx,DWORD PTR [rcx-0x68c4ff12]
   14000feca:	out    dx,eax
   14000fecb:	add    BYTE PTR [rbx],bh
   14000fecd:	fwait
   14000fece:	out    dx,eax
   14000fecf:	add    BYTE PTR [rcx],bh
   14000fed1:	lahf   
   14000fed2:	lock add BYTE PTR [rcx],bh
   14000fed5:	movabs ds:0x9d6200c68f7200ed,eax
   14000fede:	(bad)  
   14000fedf:	add    BYTE PTR [rdx-0x49],al
   14000fee2:	out    dx,al
   14000fee3:	add    BYTE PTR [rax-0x23ff4567],ah
   14000fee9:	mov    ebx,0x8385008c
   14000feee:	rol    BYTE PTR [rax],0x8e
   14000fef1:	mov    eax,ebx
   14000fef3:	add    BYTE PTR [rbp-0x5cff3971],cl
   14000fef9:	scas   eax,DWORD PTR es:[rdi]
   14000fefa:	enter  0x0,0x0
	...
   14001018a:	add    BYTE PTR [rax],al
   14001018c:	(bad)  
   14001018d:	(bad)  
   14001018e:	inc    DWORD PTR [rax]
	...
   1400101a4:	add    BYTE PTR [rax],al
   1400101a6:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   1400101b6:	push   rbx
   1400101b7:	rex.WRXB
   1400101b8:	rex.WXB pop r10
	...
   1400101c6:	xor    eax,0x45413c
	...
   1400101d3:	add    BYTE PTR [rax],al
   1400101d5:	or     al,0x26
   1400101d7:	sub    dh,BYTE PTR [rsi]
   1400101d9:	(bad)  
   1400101da:	rex.W add BYTE PTR [rax],al
   1400101dd:	add    BYTE PTR [rbp+0x0],dl
   1400101e0:	add    BYTE PTR [rax],al
   1400101e2:	and    bl,BYTE PTR [rdi+rdx*1]
   1400101e5:	or     eax,0x3a2b260a
   1400101ea:	rex.RX
   1400101eb:	rex.WXB push r10
   1400101ed:	xor    BYTE PTR [rbx],dh
   1400101ef:	add    BYTE PTR [rax],al
   1400101f1:	and    DWORD PTR [rdi],ebx
   1400101f3:	sbb    eax,0xb07151b
   1400101f8:	(bad)  
   1400101f9:	xor    eax,0x38454b45
   1400101fe:	xor    DWORD PTR [rax],eax
   140010200:	add    BYTE PTR [rbx],ah
   140010202:	and    BYTE PTR [rdi],bl
   140010204:	sbb    edx,DWORD PTR [rsi]
   140010206:	add    eax,DWORD PTR [rsi+riz*1]
   140010209:	sub    al,0x43
   14001020b:	rex.WXB
   14001020c:	xor    al,BYTE PTR [rax]
   14001020f:	add    BYTE PTR [rax],al
   140010211:	add    BYTE PTR [rax],al
   140010213:	push   rsi
   140010214:	sbb    edx,DWORD PTR [rax]
   140010216:	(bad)  
   140010217:	or     BYTE PTR [rdx],cl
   140010219:	sub    DWORD PTR [rbx+0x4b],eax
   14001021c:	ds sub eax,0x0
   140010222:	add    BYTE PTR [rax],al
   140010224:	add    BYTE PTR [rbx],dl
   140010226:	add    al,BYTE PTR [rcx]
   140010228:	add    eax,0x394f4227
   14001022d:	push   rdi
	...
   140010236:	sbb    BYTE PTR [rcx],dl
   140010238:	(bad)  
   140010239:	and    al,0x44
   14001023b:	push   rax
   14001023c:	(bad)  
	...
   140010245:	add    BYTE PTR [rax],al
   140010247:	add    BYTE PTR [rdx],dl
   140010249:	or     DWORD PTR [rcx+0x51],ecx
   14001024c:	rex.RXB add BYTE PTR [r8],r8b
	...
   140010257:	add    BYTE PTR [rax],al
   140010259:	(bad)  
   14001025b:	rex.WR pop rax
	...
   140010269:	adc    al,0x2e
   14001026b:	cmp    eax,0x0
	...
   140010278:	add    BYTE PTR [rax],al
   14001027a:	(bad)  
   14001027b:	pop    rax
	...
   140010290:	(bad)  
   140010291:	inc    DWORD PTR [rax]
   140010293:	add    dh,bh
   140010295:	inc    DWORD PTR [rax]
   140010297:	add    ah,bh
   140010299:	(bad)  
   14001029a:	add    BYTE PTR [rax],al
   14001029c:	cld    
   14001029d:	(bad)  
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	clc    
   1400102a1:	sbb    eax,0x1c00000
   1400102a6:	add    BYTE PTR [rax],al
   1400102a8:	add    BYTE PTR [rcx],0x0
   1400102ab:	add    BYTE PTR [rax-0x1ffffffd],al
   1400102b1:	add    eax,DWORD PTR [rax]
   1400102b3:	add    al,bh
   1400102b5:	add    eax,DWORD PTR [rax]
   1400102b7:	add    ah,bh
   1400102b9:	(bad)  
   1400102ba:	add    BYTE PTR [rax],al
   1400102bc:	inc    DWORD PTR [rdi]
   1400102be:	add    BYTE PTR [rax],al
   1400102c0:	inc    DWORD PTR [rdi-0x70010000]
   1400102c6:	add    BYTE PTR [rax],al
   1400102c8:	dec    edi
   1400102ca:	add    BYTE PTR [rax],al
   1400102cc:	(bad)  
   1400102cd:	inc    DWORD PTR [rax]
   1400102cf:	add    BYTE PTR [rcx+0xd474e50],cl
   1400102d5:	or     bl,BYTE PTR [rdx]
   1400102d7:	or     al,BYTE PTR [rax]
   1400102d9:	add    BYTE PTR [rax],al
   1400102db:	or     eax,0x52444849
   1400102e0:	add    BYTE PTR [rax],al
   1400102e2:	add    DWORD PTR [rax],eax
   1400102e4:	add    BYTE PTR [rax],al
   1400102e6:	add    DWORD PTR [rax],eax
   1400102e8:	or     BYTE PTR [rsi],al
   1400102ea:	add    BYTE PTR [rax],al
   1400102ec:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   1400102f0:	data16 add BYTE PTR [rax],al
   1400102f3:	and    BYTE PTR [rax],al
   1400102f5:	rex.WB
   1400102f6:	rex.R
   1400102f7:	push   r12
   1400102f9:	js     0x140010297
   1400102fb:	in     al,dx
   1400102fc:	mov    ebp,0xd765b069
   140010301:	jne    0x1400102e2
   140010303:	neg    DWORD PTR [rbx+0x7b]
   140010306:	lahf   
   140010307:	jae    0x1400102f7
   140010309:	lock out 0xa1,al
   14001030c:	(bad)  
   14001030d:	movabs al,ds:0x24ce06201001031b
   140010316:	sub    dh,cl
   140010318:	and    al,0x38
   14001031a:	push   rbx
   14001031b:	and    al,BYTE PTR [rbp-0x6f]
   14001031e:	adc    ch,BYTE PTR [rcx-0x75b4d25e]
   140010324:	and    al,0x47
   140010326:	mov    dl,0x2d
   140010328:	cmp    esi,DWORD PTR [rdx+0x6cb24b2d]
   14001032e:	retf   
   14001032f:	rex.WX cmp al,0xa5
   140010332:	(bad)  
   140010333:	pop    rbx
   140010334:	mov    dl,BYTE PTR [rbx+rbx*8]
   140010337:	sub    ecx,ebx
   140010339:	sub    al,bh
   14001033b:	pop    rdi
   14001033c:	pushf  
   14001033d:	mov    ah,BYTE PTR [rbp-0x69]
   140010340:	push   rbx
   140010341:	scas   al,BYTE PTR es:[rdi]
   140010342:	jl     0x1400102cc
   140010344:	stos   DWORD PTR es:[rdi],eax
   140010345:	xchg   edx,eax
   140010346:	stos   BYTE PTR es:[rdi],al
   140010347:	cmp    BYTE PTR [rcx-0x368e3aac],ch
   14001034d:	mov    gs,WORD PTR [rip+0xffffffffd822e595]        # 0x11823e8e8
   140010353:	call   0xfc3e069e
   140010358:	jle    0x140010397
   14001035a:	mov    edi,0x7bddef7e
   14001035f:	iret   
   140010360:	fldcw  WORD PTR [rbx]
   140010362:	(bad)  
   140010363:	neg    dl
   140010365:	sti    
   140010366:	pushf  
   140010367:	sti    
   140010368:	rcl    BYTE PTR [rcx+rbp*1],1
   14001036b:	or     DWORD PTR [rax-0x5d],esp
   14001036e:	mov    ebx,0xbf5e02cf
   140010373:	sti    
   140010374:	out    dx,al
   140010375:	jo     0x14001031d
   140010377:	jnp    0x14001034f
   140010379:	hlt    
   14001037a:	pop    rdi
   14001037b:	push   QWORD PTR [rbp+0x4bd2f436]
   140010381:	(bad)  
   140010382:	mov    ebp,0x2f4bd2f4
   140010387:	mov    ebp,0x2f4bd2f4
   14001038c:	mov    ebp,0x2f4bd2f4
   140010391:	mov    ebp,0x2f4bd2f4
   140010396:	mov    ebp,0x2f4bd2f4
   14001039b:	mov    ebp,0x2f4bd2f4
   1400103a0:	mov    ebp,0x2f4bd2f4
   1400103a5:	mov    ebp,0x2f4bd2f4
   1400103aa:	mov    ebp,0x2f4bd2f4
   1400103af:	mov    ebp,0x2f4bd2f4
   1400103b4:	mov    ebp,0x2f4bd2f4
   1400103b9:	ja     0x14001034d
   1400103bb:	enter  0x3eed,0x80
   1400103bf:	pop    rsi
   1400103c0:	jp     0x1400103c3
   1400103c2:	loopne 0x1400103b1
   1400103c4:	(bad)  
   1400103c5:	sub    al,ah
   1400103c7:	sti    
   1400103c8:	push   rcx
   1400103c9:	add    BYTE PTR [rdi],al
   1400103cb:	clc    
   1400103cc:	in     eax,0xa7
   1400103ce:	fidivr WORD PTR [rdx+0x78]
   1400103d1:	cmp    BYTE PTR [rax],ch
   1400103d3:	ds jns 0x1400103ce
   1400103d6:	out    0xa5,al
   1400103d8:	(bad)  
   1400103d9:	mov    esp,0x7a9cae1
   1400103de:	(bad)  
   1400103df:	ja     0x140010397
   1400103e1:	retf   0xfdc5
   1400103e4:	sbb    esp,edi
   1400103e6:	stos   DWORD PTR es:[rdi],eax
   1400103e7:	jmp    0x187dfc3ea
   1400103ec:	(bad)  
   1400103ed:	in     eax,0xaf
   1400103ef:	(bad)  
   1400103f0:	outs   dx,DWORD PTR ds:[rsi]
   1400103f1:	cli    
   1400103f2:	sub    eax,0x9fb1a0
   1400103f7:	sub    BYTE PTR [rdi-0x4859407],bh
   1400103fd:	rex.WRX loop 0x1400103ce
   140010400:	adc    edi,DWORD PTR [rdi-0x45]
   140010403:	push   fs
   140010405:	xchg   edi,eax
   140010406:	pop    rsi
   140010407:	cmp    cl,dl
   140010409:	out    dx,eax
   14001040a:	add    BYTE PTR [rdx],0x28
   14001040d:	sub    DWORD PTR [rdx-0xf],0xe33ea7f1
   140010414:	mov    ch,0xfe
   140010416:	retf   0xdefa
   140010419:	in     eax,0xf7
   14001041b:	sbb    al,0xba
   14001041d:	jno    0x140010400
   14001041f:	rex.WRB retf 
   140010421:	mov    ebx,0xcd1feed7
   140010426:	outs   dx,BYTE PTR ds:[rsi]
   140010427:	(bad)  
   140010428:	sbb    esi,DWORD PTR [rbx+rdx*8]
   14001042b:	int    0x31
   14001042d:	mov    bl,0xea
   14001042f:	shl    DWORD PTR [rax-0x420198d],0x8d
   140010436:	sbb    esi,DWORD PTR [rbx-0x25]
   140010439:	cmp    dh,dh
   14001043b:	(bad)  
   14001043c:	cmp    dh,dh
   14001043e:	(bad)  
   14001043f:	loope  0x14001041d
   140010441:	outs   dx,DWORD PTR ds:[rsi]
   140010442:	jle    0x14001043f
   140010444:	iret   
   140010445:	jrcxz  0x140010455
   140010447:	xchg   esp,eax
   140010448:	ds add ch,al
   14001044b:	in     eax,0xf6
   14001044d:	rex.WX stos QWORD PTR es:[rdi],rax
   14001044f:	cld    
   140010450:	fidivr WORD PTR [rsi-0x36]
   140010453:	rex.RXB (bad) 
   140010455:	(bad)  
   140010456:	mov    ecx,0x5616cfb7
   14001045b:	jg     0x1400104db
   14001045d:	test   esi,0x5f36e7e5
   140010463:	(bad)  
   140010464:	sub    eax,0x7fe9e379
   140010469:	(bad)  
   14001046a:	mov    cl,0xed
   14001046c:	(bad)  
   14001046d:	pop    rax
   14001046e:	fnstsw WORD PTR [rdi-0x7398a73e]
   140010474:	mov    esp,0xf38f7a50
   140010479:	(bad)  
   14001047a:	fldcw  WORD PTR [rcx+0x51]
   14001047d:	dec    dl
   14001047f:	call   QWORD PTR [rax+0x3e]
   140010482:	dec    BYTE PTR [rdi]
   140010484:	inc    BYTE PTR [rbx-0x2bf644a5]
   14001048a:	(bad)  
   14001048b:	push   0xffffffff81a3e940
   140010490:	outs   dx,DWORD PTR ds:[rsi]
   140010491:	rex.WB cli 
   140010493:	or     BYTE PTR [rax+0x5127db97],ah
   140010499:	stc    
   14001049a:	sbb    eax,0x802c3ef1
   14001049f:	(bad)  
   1400104a0:	test   eax,0x3fc3f9ef
   1400104a5:	mov    ah,0xb0
   1400104a7:	mov    esi,0xa676f7f9
   1400104ac:	mov    bl,0xa7
   1400104ae:	xchg   BYTE PTR [rdi-0x1],ah
   1400104b1:	movabs ds:0xdfd9f0e6bffcfc3c,eax
   1400104ba:	(bad)  
   1400104bb:	jne    0x1400104a4
   1400104bd:	cmp    al,0x23
   1400104bf:	popf   
   1400104c0:	xor    dh,dh
   1400104c2:	ret    0xbd8
   1400104c5:	rex.XB out dx,eax
   1400104c7:	sbb    BYTE PTR [rbx-0x6a],bh
   1400104ca:	(bad)  
   1400104cb:	fidivr DWORD PTR [rsp+rbp*8-0x63]
   1400104cf:	int    0xe5
   1400104d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400104d2:	(bad)  
   1400104d3:	fs neg edi
   1400104d6:	cld    
   1400104d7:	imul   edi,DWORD PTR [rdi-0x4918287],0xffffffc7
   1400104de:	fiadd  WORD PTR [rcx+0x1f]
   1400104e1:	or     esp,edi
   1400104e3:	out    dx,al
   1400104e4:	rcr    BYTE PTR [rbx],cl
   1400104e6:	sbb    BYTE PTR [rsi+0x6e],0x8f
   1400104ea:	int3   
   1400104eb:	jnp    0x1400104eb
   1400104ed:	add    ch,BYTE PTR [rax+0x3f7df2de]
   1400104f3:	clc    
   1400104f4:	xor    esp,ebx
   1400104f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400104f7:	in     eax,0xbf
   1400104f9:	mov    dl,0xdf
   1400104fb:	call   0x189ddf468
   140010500:	mov    ?,edi
   140010502:	(bad)  
   140010503:	dec    ebp
   140010505:	movabs eax,ds:0xfb1817bbeb23fe97
   14001050e:	sbb    ebx,eax
   140010510:	movabs ds:0x5161828a0c145c60,al
   140010519:	xor    BYTE PTR [rax],ch
   14001051b:	test   BYTE PTR [rdx+0x60],dl
   14001051e:	and    dl,bh
   140010520:	fdiv   DWORD PTR [rcx]
   140010522:	(bad)  
   140010524:	enter  0xdc53,0xf8
   140010528:	(bad)  
   140010529:	dec    edx
   14001052b:	sbb    eax,0x8c48be
   140010530:	movabs ds:0xf400de9577e046f4,al
   140010539:	repnz in eax,dx
   14001053b:	xchg   edi,eax
   14001053c:	pop    rbx
   14001053d:	sub    bh,bh
   14001053f:	fstp   TBYTE PTR [rsi+0x7a7f07ef]
   140010545:	mov    eax,0x4173f8b0
   14001054a:	sbb    al,0x17
   14001054c:	(bad)  
   14001054d:	pop    rsi
   14001054e:	(bad)  
   14001054f:	jrcxz  0x140010590
   140010551:	(bad)  
   140010552:	lahf   
   140010553:	sbb    al,0x3e
   140010555:	stc    
   140010556:	out    dx,eax
   140010557:	pop    rax
   140010558:	mov    ebx,0xd9158171
   14001055d:	addr32 pop rax
   14001055f:	jp     0x140010527
   140010561:	mov    esi,0xa0066460
   140010566:	je     0x1400105aa
   140010568:	sub    DWORD PTR [rsi+0x9c28452],ecx
   14001056e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001056f:	or     eax,DWORD PTR [rdi-0x38167af2]
   140010575:	fisubr WORD PTR [rdx-0x3200a9]
   14001057b:	out    dx,al
   14001057c:	mov    ds,WORD PTR [rax+riz*4+0x37]
   140010580:	add    bl,bh
   140010582:	xchg   edx,eax
   140010583:	mov    eax,0xbd007ddb
   140010588:	fsub   QWORD PTR [rbx-0xe]
   14001058b:	rex.WX shr BYTE PTR [rdi+0x7e97cb7a],0xe0
   140010593:	xchg   DWORD PTR [rdi],eax
   140010595:	jrcxz  0x14001055c
   140010597:	lahf   
   140010598:	jae    0x1400105bc
   14001059a:	pop    rsp
   14001059b:	(bad)  
   14001059d:	movabs ds:0x862dfe9e6cdbf33a,eax
   1400105a6:	xlat   BYTE PTR ds:[rbx]
   1400105a7:	mov    dh,0x18
   1400105a9:	test   DWORD PTR [rbp+0x53],ebx
   1400105ac:	jbe    0x1400105fd
   1400105ae:	jmp    0x14a3ae3cf
   1400105b3:	out    0x28,eax
   1400105b5:	popf   
   1400105b6:	push   rax
   1400105b7:	mov    al,ah
   1400105b9:	popf   
   1400105ba:	pop    rax
   1400105bb:	(bad)  
   1400105bc:	and    DWORD PTR [rsi+rdi*1+0x3c],edx
   1400105c0:	lock add al,0x37
   1400105c3:	jle    0x1400105c2
   1400105c5:	(bad)  
   1400105c6:	(bad)  
   1400105c7:	mov    edi,0x481114fd
   1400105cc:	hlt    
   1400105cd:	and    al,0x9c
   1400105cf:	sub    ebp,esi
   1400105d1:	mov    bh,0x97
   1400105d3:	add    edx,edx
   1400105d5:	sbb    eax,DWORD PTR [rax+0x727dbe5e]
   1400105db:	or     esi,DWORD PTR [rdi+rdi*8-0x16813077]
   1400105e2:	mov    ecx,0x7fd2e2d1
   1400105e7:	in     eax,0x4
   1400105e9:	neg    BYTE PTR [rbx+0x53f9fec0]
   1400105ef:	sbb    al,0x3e
   1400105f1:	cmc    
   1400105f2:	push   QWORD PTR [rcx]
   1400105f4:	fdivr  DWORD PTR [rsi]
   1400105f6:	retf   
   1400105f7:	mov    eax,0x4a2465d9
   1400105fc:	loope  0x14001061b
   1400105fe:	test   DWORD PTR [rax-0x5c421618],edi
   140010604:	adc    al,dh
   140010606:	and    bh,BYTE PTR [rax]
   140010608:	(bad)  
   140010609:	jg     0x140010686
   14001060b:	mov    cl,0xd7
   14001060d:	jno    0x1400105a3
   14001060f:	call   0x12ae47597
   140010614:	scas   eax,DWORD PTR es:[rdi]
   140010615:	std    
   140010616:	js     0x140010690
   140010618:	inc    BYTE PTR [rcx]
   14001061a:	pop    rdx
   14001061b:	and    edx,eax
   14001061d:	(bad)  
   14001061f:	fild   WORD PTR [rax-0x6]
   140010622:	or     edx,ebx
   140010624:	retf   
   140010625:	mov    bh,0x5b
   140010627:	jb     0x140010611
   140010629:	inc    eax
   14001062b:	sti    
   14001062c:	ds cli 
   14001062e:	enter  0xc6e2,0xa1
   140010632:	call   QWORD PTR [rsi+0x44]
   140010635:	(bad)  
   140010636:	(bad)  
   140010637:	cmp    al,0x57
   140010639:	scas   eax,DWORD PTR es:[rdi]
   14001063a:	pop    rbp
   14001063b:	movsxd esi,ebp
   14001063d:	test   DWORD PTR [rdi-0x39],edi
   140010640:	ror    bl,cl
   140010642:	iret   
   140010643:	xor    ebx,DWORD PTR [rax+0x3524635c]
   140010649:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001064a:	(bad)  
   14001064b:	lahf   
   14001064c:	cmp    al,0xbe
   14001064e:	not    DWORD PTR [rsi+rbx*8-0x3ce353cf]
   140010655:	rex.B
   140010656:	push   r13
   140010658:	jp     0x1400105e4
   14001065a:	ret    0x7851
   14001065d:	lock sahf 
   14001065f:	sbb    BYTE PTR [rcx],ch
   140010661:	cmp    BYTE PTR [rdi+0x25],al
   140010664:	cli    
   140010665:	hlt    
   140010666:	rex.RXB jne 0x140010664
   140010669:	xchg   edi,eax
   14001066a:	sahf   
   14001066b:	shr    DWORD PTR [rbx-0x75],1
   14001066e:	je     0x1400105fd
   140010670:	rex (bad) 
   140010672:	add    eax,0x37a42bc
   140010677:	ror    bl,1
   140010679:	mov    bh,0x47
   14001067b:	(bad)  
   14001067c:	in     al,0xfd
   14001067e:	rex.WXB
   14001067f:	rex.RXB out dx,al
   140010681:	pop    rbx
   140010682:	pop    rsp
   140010683:	jg     0x140010675
   140010685:	xchg   ecx,eax
   140010686:	mov    edi,0x5fbfbde5
   14001068b:	rex.R fsubr DWORD PTR [rbp-0x18463de5]
   140010692:	fnstcw WORD PTR [rax-0xf]
   140010695:	mov    bh,0x29
   140010697:	scas   eax,DWORD PTR es:[rdi]
   140010698:	pop    rsi
   140010699:	(bad)  
   14001069a:	movabs al,ds:0xe894284ef0120633
   1400106a3:	std    
   1400106a4:	or     ecx,edi
   1400106a6:	movabs al,ds:0x2b8c2878cf438612
   1400106af:	rex.RXB push r13
   1400106b1:	cmp    BYTE PTR [rdi+rsi*2+0x4e07178],bh
   1400106b8:	jno    0x14001068b
   1400106ba:	(bad)  
   1400106bb:	sub    al,0xba
   1400106bd:	out    0xe3,al
   1400106bf:	(bad)  
   1400106c0:	(bad)  
   1400106c1:	jg     0x1400106bd
   1400106c3:	sbb    esi,esp
   1400106c5:	movabs ds:0xa006f4bcc08de900,eax
   1400106ce:	xchg   edi,eax
   1400106cf:	xlat   BYTE PTR ds:[rbx]
   1400106d0:	pop    rsi
   1400106d1:	out    0x43,al
   1400106d3:	jg     0x1400106e4
   1400106d5:	xchg   esp,eax
   1400106d6:	movd   eax,mm6
   1400106d9:	adc    edi,DWORD PTR [rdi-0x4e]
   1400106dc:	stos   BYTE PTR es:[rdi],al
   1400106dd:	stos   BYTE PTR es:[rdi],al
   1400106de:	(bad)  
   1400106e0:	adc    al,0x45
   1400106e2:	mov    eax,0x2b32ed7a
   1400106e7:	(bad)  
   1400106e8:	(bad)  
   1400106e9:	(bad)  
   1400106ea:	ret    
   1400106eb:	in     eax,dx
   1400106ec:	xchg   edi,eax
   1400106ed:	sub    BYTE PTR [rdx-0x57ed79c3],bl
   1400106f3:	add    al,0xcb
   1400106f5:	mul    DWORD PTR [rbx-0x22]
   1400106f8:	pop    rdi
   1400106f9:	jns    0x14001075c
   1400106fb:	xor    al,0xf0
   1400106fd:	sub    al,0x8d
   1400106ff:	sbb    al,0x6b
   140010701:	mov    eax,DWORD PTR [rip+0xffffffffa59e8bab]        # 0xe59f92b2
   140010707:	and    DWORD PTR [rbx+0x5e7042a],0x3881a96f
   140010711:	rex.B
   140010712:	rex.R pop rax
   140010714:	xchg   ebp,eax
   140010715:	(bad)  [rdi-0x4]
   140010718:	div    edx
   14001071a:	outs   dx,DWORD PTR ds:[rsi]
   14001071b:	mov    edi,0xf8153e8b
   140010720:	xchg   dl,dl
   140010722:	pop    rdi
   140010723:	nop
   140010724:	pop    rsi
   140010725:	mov    esi,0x7fbc925d
   14001072a:	jns    0x14001070b
   14001072c:	rex.RXB mov r14d,0x68d503eb
   140010732:	cld    
   140010733:	(bad)  
   140010734:	mov    ebp,0x9d8e2208
   140010739:	mov    edx,0x1afe5e46
   14001073e:	jmp    0x14001076f
   140010740:	std    
   140010741:	(bad)  
   140010742:	jb     0x140010727
   140010744:	xor    ah,BYTE PTR [rbp+0x28120606]
   14001074a:	push   rdx
   14001074b:	mov    gs,edi
   14001074d:	sbb    al,0x85
   14001074f:	test   esi,edi
   140010751:	mov    esp,DWORD PTR [rbx-0x31]
   140010754:	(bad)  
   140010755:	(bad)
   140010759:	(bad)
   14001075c:	leave  
   14001075d:	(bad)  
   14001075e:	rex.WX adc QWORD PTR [rbp-0x7fa77080],rcx
   140010765:	add    ecx,DWORD PTR [rdx]
   140010767:	adc    DWORD PTR [rax+rcx*1+0x74fbca0e],ebx
   14001076e:	jmp    FWORD PTR [rdi+0x3e4e31fc]
   140010774:	rex (bad) 
   140010776:	sbb    al,0x1c
   140010778:	jge    0x1400107a4
   14001077a:	xor    BYTE PTR [rdi],ah
   14001077c:	mov    ebp,0xb5e5e801
   140010781:	xchg   ebp,eax
   140010782:	add    esp,DWORD PTR [rdi+rbx*4-0x5b]
   140010786:	(bad)  
   140010787:	sahf   
   140010788:	fstp   DWORD PTR [rbp*2+0xb2ffa1c]
   14001078f:	(bad)  
   140010790:	and    edx,DWORD PTR [rcx+rcx*1+0x22]
   140010794:	pop    rsp
   140010795:	mov    ebx,0x17b5897a
   14001079a:	jg     0x140010727
   14001079c:	(bad)  
   14001079d:	rcr    BYTE PTR [rcx-0x5c],cl
   1400107a0:	cdq    
   1400107a1:	xor    BYTE PTR [rax-0x7f],dh
   1400107a4:	or     ah,BYTE PTR [rbp-0x4256ae90]
   1400107aa:	or     BYTE PTR [rbp-0x1f],ah
   1400107ad:	sbb    BYTE PTR [rip+0x54bab1c],cl        # 0x1454cb2cf
   1400107b3:	sub    eax,DWORD PTR [rdi+0xa47862b]
   1400107b9:	(bad)  
   1400107ba:	xchg   DWORD PTR [rbx+0x16],ecx
   1400107bd:	or     dl,BYTE PTR ss:[rsi-0x6a39f569]
   1400107c4:	push   rax
   1400107c5:	jp     0x140010837
   1400107c7:	rex.WRX
   1400107c8:	rex adc eax,0x51c4e02f
   1400107ce:	movabs eax,ds:0x146245fc5c63e27
   1400107d7:	leave  
   1400107d8:	or     ah,dh
   1400107da:	test   eax,0x6f4980
   1400107df:	jp     0x14001085a
   1400107e1:	in     eax,dx
   1400107e2:	fs mov esi,0xe503c7c1
   1400107e8:	clc    
   1400107e9:	xchg   ecx,eax
   1400107ea:	(bad)  
   1400107eb:	jg     0x14001085f
   1400107ed:	imul   edi,DWORD PTR [rax],0xa1614b78
   1400107f3:	cli    
   1400107f4:	int    0x59
   1400107f6:	lea    ebx,[rbx+rdi*2+0x5fb3d59e]
   1400107fd:	rex.XB jbe 0x1400107af
   140010800:	push   rcx
   140010801:	rex.W (bad) 
   140010803:	sub    dl,cl
   140010805:	rcl    BYTE PTR [rbx],0xf3
   140010808:	jg     0x1400107aa
   14001080a:	lock rex.X push rbp
   14001080d:	cmp    dl,BYTE PTR [rsi]
   14001080f:	mov    DWORD PTR [rip+0xffffffffd525ebab],0x39afc3a6        # 0x11526f3c4
   140010819:	fmul   QWORD PTR [rdx+0x1828dca3]
   14001081f:	scas   eax,DWORD PTR es:[rdi]
   140010820:	adc    eax,0x833c8c2c
   140010825:	rex.X (bad) 
   140010827:	jne    0x140010869
   140010829:	movabs ds:0xbe6923089c03b6e,al
   140010832:	jg     0x1400107d3
   140010834:	jg     0x140010831
   140010836:	rex.RB cli 
   140010838:	push   rsp
   140010839:	loopne 0x140010850
   14001083b:	rcr    BYTE PTR [rdi-0x78],cl
   14001083e:	pop    rsi
   14001083f:	pop    rsi
   140010840:	imul   ecx,ecx,0xffffffca
   140010843:	mov    edi,0xbe0feef1
   140010848:	addr32 cmp al,0x1a
   14001084b:	(bad)  
   14001084c:	call   0x16aa978f1
   140010851:	rex.B cmp al,0x3b
   140010854:	xlat   BYTE PTR ds:[rbx]
   140010855:	scas   eax,DWORD PTR es:[rdi]
   140010856:	mov    cl,0x72
   140010858:	imul   BYTE PTR [rbx+0x54]
   14001085b:	push   rdi
   14001085c:	mov    dh,0xa0
   14001085e:	cdq    
   14001085f:	xor    dl,BYTE PTR [rax]
   140010861:	sbb    BYTE PTR [rax],dl
   140010863:	jo     0x14001084b
   140010865:	sar    DWORD PTR [rbp+0xcf7bc38],0x2a
   14001086c:	iret   
   14001086d:	retf   0xc152
   140010870:	jo     0x14001081f
   140010872:	shr    BYTE PTR [rip+0xfffffffffc575f83],0xaa        # 0x13c5867fc
   140010879:	ret    0xe0a2
   14001087c:	xlat   BYTE PTR ds:[rbx]
   14001087d:	sbb    al,0xb
   14001087f:	rex.WXB sahf 
   140010881:	(bad)  
   140010882:	in     eax,0xa8
   140010884:	or     ch,BYTE PTR [rbx]
   140010886:	adc    DWORD PTR [rdx+0x152c103],ecx
   14001088c:	loope  0x1400108cc
   14001088e:	es (bad) 
   140010890:	mul    DWORD PTR [rbx-0x64]
   140010893:	ds rex.RX lahf 
   140010896:	or     cl,ah
   140010898:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14001089a:	add    BYTE PTR [rdx+0x79],bh
   14001089d:	ins    DWORD PTR es:[rdi],dx
   14001089e:	in     al,0x0
   1400108a0:	(bad)  
   1400108a1:	pop    rdi
   1400108a2:	lods   eax,DWORD PTR ds:[rsi]
   1400108a3:	scas   al,BYTE PTR es:[rdi]
   1400108a4:	sub    eax,0x5fa5a5f8
   1400108a9:	pop    rax
   1400108aa:	sbb    BYTE PTR [rsi],cl
   1400108ac:	(bad)  
   1400108ad:	pop    rsi
   1400108ae:	add    al,0x9c
   1400108b0:	xor    BYTE PTR [rcx-0x741d1efd],ch
   1400108b6:	lods   al,BYTE PTR ds:[rsi]
   1400108b7:	pop    rsp
   1400108b8:	cmp    BYTE PTR [rbp+0x13c35eec],al
   1400108be:	cmp    DWORD PTR [rdi-0x4ed5cbae],0x7a507782
   1400108c8:	(bad)  
   1400108c9:	js     0x1400108b3
   1400108cb:	pop    rax
   1400108cc:	pop    rsp
   1400108cd:	sub    al,0x29
   1400108cf:	xchg   edi,eax
   1400108d0:	add    eax,0x91c501b7
   1400108d5:	rex jno 0x1400108ec
   1400108d8:	cld    
   1400108d9:	or     bh,BYTE PTR [rax-0x1d46b0fb]
   1400108df:	sbb    BYTE PTR [rbp-0x6217dfdd],cl
   1400108e5:	and    BYTE PTR [rdx],cl
   1400108e7:	(bad)  
   1400108e8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400108e9:	add    ecx,DWORD PTR [rax]
   1400108eb:	xchg   ebp,eax
   1400108ec:	call   0x12b6428b4
   1400108f1:	rex.WRXB rcl QWORD PTR [r15+0x5],1
   1400108f5:	out    0xa4,al
   1400108f7:	(bad)  
   1400108f8:	add    BYTE PTR [rbp+0x519296bc],bh
   1400108fe:	jmp    QWORD PTR [rbp-0x5e0161d9]
   140010904:	jb     0x1400108ba
   140010906:	hlt    
   140010907:	in     al,dx
   140010908:	test   al,0x2a
   14001090a:	jrcxz  0x140010937
   14001090c:	loop   0x1400108c6
   14001090e:	jle    0x140010903
   140010910:	(bad)  
   140010911:	mov    esp,edi
   140010913:	sahf   
   140010914:	addr32 je 0x140010900
   140010917:	sbb    al,0xd4
   140010919:	jnp    0x140010993
   14001091b:	(bad)  
   14001091c:	adc    eax,0x2e624281
   140010921:	out    dx,eax
   140010922:	adc    esi,ebx
   140010924:	scas   eax,DWORD PTR es:[rdi]
   140010925:	adc    cl,0xc0
   140010928:	xor    DWORD PTR [rax+0x70],ebx
   14001092b:	mov    eax,0x521fc165
   140010930:	cmp    BYTE PTR [rsi],dl
   140010932:	jo     0x14001092b
   140010934:	add    eax,0x164521fc
   140010939:	adc    eax,0x2d19ecbf
   14001093e:	jp     0x1400108ea
   140010940:	rcl    BYTE PTR [rcx+0x16],cl
   140010943:	loopne 0x14001094a
   140010945:	(bad)
   140010949:	or     bl,BYTE PTR [rsi-0x5a]
   14001094c:	(bad)  
   14001094d:	and    edi,edi
   14001094f:	xor    eax,0x445de1ff
   140010954:	and    edx,DWORD PTR [rax]
   140010956:	or     eax,0xbd2e3dc0
   14001095b:	add    eax,ebp
   14001095d:	in     eax,0xd5
   14001095f:	xchg   edi,eax
   140010960:	add    eax,eax
   140010962:	(bad)  
   140010964:	and    ebp,DWORD PTR [rdi+0x7c]
   140010967:	ror    BYTE PTR [rdi],1
   140010969:	rex.RX (bad) 
   14001096b:	mov    ecx,0xf0a05e34
   140010970:	add    al,BYTE PTR [rdx]
   140010972:	xchg   ebx,eax
   140010973:	(bad)  
   140010974:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010975:	(bad)  
   140010976:	pop    rdi
   140010977:	(bad)  
   140010978:	cmc    
   140010979:	in     al,dx
   14001097a:	xlat   BYTE PTR ds:[rbx]
   14001097b:	jo     0x1400109b4
   14001097d:	movabs eax,cs:0xa27fd175508a535a
   140010987:	adc    DWORD PTR [rax],ebp
   140010989:	or     eax,edi
   14001098b:	ret    0x53d0
   14001098e:	sub    eax,0x1ff618b9
   140010993:	or     eax,0xea0a47d4
   140010998:	movsxd ecx,DWORD PTR [rsi]
   14001099a:	ja     0x1400109d0
   14001099c:	push   rax
   14001099d:	lods   al,BYTE PTR ds:[rsi]
   14001099e:	sub    DWORD PTR [rax+rcx*1],0xa46397e
   1400109a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400109a6:	(bad)  
   1400109a7:	or     bl,BYTE PTR [rdi]
   1400109a9:	(bad)  
   1400109aa:	(bad)  
   1400109ab:	xchg   esi,eax
   1400109ac:	add    cl,BYTE PTR [rax]
   1400109ae:	loopne 0x140010935
   1400109b0:	loope  0x1400109cd
   1400109b2:	fscale 
   1400109b4:	fst    DWORD PTR [rcx]
   1400109b6:	rex.WRB
   1400109b7:	rex.RB invd 
   1400109ba:	add    bh,BYTE PTR [rbp-0x2a1a17ff]
   1400109c0:	xchg   esi,eax
   1400109c1:	push   rdi
   1400109c2:	(bad)  
   1400109c3:	cld    
   1400109c4:	mov    esi,DWORD PTR [rdx-0xd]
   1400109c7:	rcr    BYTE PTR [rdi+0x2385c3f1],1
   1400109cd:	jrcxz  0x1400109b0
   1400109cf:	sub    al,0x8f
   1400109d2:	sbb    eax,0x326ef7d7
   1400109d7:	idiv   DWORD PTR ds:[rbx+riz*8]
   1400109db:	in     eax,dx
   1400109dc:	xchg   edi,eax
   1400109dd:	(bad)  
   1400109de:	mov    dh,0x8b
   1400109e0:	(bad)  
   1400109e1:	sbb    BYTE PTR [rax+0x6f31a252],ch
   1400109e7:	mov    bh,0x26
   1400109e9:	(bad)  
   1400109ea:	out    0x84,eax
   1400109ec:	rex.B jmp 0x1051d160a
   1400109f2:	rex.W nop
   1400109f4:	cmc    
   1400109f5:	rex mov ebp,0x2a0d99ee
   1400109fb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400109fc:	or     esp,DWORD PTR [rip+0xffffffffd6e0b0e1]        # 0x116e1bae3
   140010a02:	adc    al,0x46
   140010a04:	and    BYTE PTR [rbx-0x5f],ah
   140010a07:	pop    rdx
   140010a08:	jo     0x140010a5e
   140010a0a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a0b:	push   rax
   140010a0c:	js     0x140010a7e
   140010a0e:	add    ch,BYTE PTR [rax+0x34488082]
   140010a14:	add    ah,BYTE PTR [rbx+0x9]
   140010a17:	(bad)  
   140010a18:	cli    
   140010a19:	gs inc bl
   140010a1c:	out    0x88,eax
   140010a1e:	(bad)  
   140010a1f:	loopne 0x1400109bf
   140010a21:	(bad)  
   140010a22:	add    al,0xef
   140010a24:	jmp    0x175e6f9bc
   140010a29:	xchg   ebx,eax
   140010a2a:	int3   
   140010a2b:	neg    edi
   140010a2d:	jl     0x140010a11
   140010a2f:	mov    edi,esi
   140010a31:	mov    edx,0x78f2fcb2
   140010a36:	mov    esp,0x54385544
   140010a3b:	(bad)  
   140010a3c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010a3d:	mov    al,0x7f
   140010a3f:	jmp    0xdfe87560
   140010a44:	(bad)  
   140010a45:	pop    rbp
   140010a46:	mov    edi,0x6c598684
   140010a4b:	or     al,0x10
   140010a4d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a4e:	int3   
   140010a4f:	cld    
   140010a50:	jle    0x140010a85
   140010a52:	add    al,BYTE PTR [rbp-0x39c5af9d]
   140010a58:	jrcxz  0x140010a5c
   140010a5a:	mov    edi,0x3d43ac04
   140010a5f:	sub    BYTE PTR [rcx+0x14],dl
   140010a62:	push   rbp
   140010a63:	test   al,0x97
   140010a65:	or     esp,DWORD PTR [rbx+rsi*1-0x20]
   140010a69:	(bad)  
   140010a6a:	ror    DWORD PTR [rip+0xffffffffa8e0bf05],0x2a        # 0xe8e1c976
   140010a71:	xchg   edi,esi
   140010a73:	data16 rex
   140010a75:	rex.WR icebp 
   140010a77:	rex.RB jae 0x140010a46
   140010a7a:	(bad)  
   140010a7b:	div    DWORD PTR [rcx+0x641f53ff]
   140010a81:	jnp    0x140010a1c
   140010a83:	ds or  ch,al
   140010a86:	or     eax,0xa2af2f40
   140010a8b:	sbb    al,0x68
   140010a8d:	neg    BYTE PTR [rcx]
   140010a8f:	sub    al,0x2e
   140010a91:	cs push rsp
   140010a93:	ret    
   140010a94:	loope  0x140010ae5
   140010a96:	cmp    edx,DWORD PTR [rdi-0x6a]
   140010a99:	jrcxz  0x140010a6c
   140010a9b:	sub    BYTE PTR [rsi],al
   140010a9d:	loop   0x140010ac1
   140010a9f:	in     al,dx
   140010aa0:	in     al,dx
   140010aa1:	rex.WRXB sbb BYTE PTR [r14+0x5b8b3aff],r11b
   140010aa8:	(bad)  
   140010aa9:	and    dl,bl
   140010aab:	sbb    eax,0x27550244
   140010ab0:	cld    
   140010ab1:	(bad)  
   140010ab2:	(bad)  
   140010ab3:	cmp    BYTE PTR [rbp+0x335f36],dh
   140010ab9:	adc    DWORD PTR [rcx+0x58412fc7],0x76
   140010ac0:	test   al,0x18
   140010ac2:	enter  0x50a7,0x17
   140010ac6:	(bad)  
   140010ac7:	pop    rbp
   140010ac8:	(bad)  
   140010ac9:	cld    
   140010aca:	xor    dh,BYTE PTR [rax]
   140010acc:	adc    al,0xdc
   140010ace:	pop    rax
   140010acf:	test   al,0x86
   140010ad1:	rex.X jmp 0xf735f1dc
   140010ad7:	add    ecx,DWORD PTR [rdx-0x5fc4823c]
   140010add:	and    bh,BYTE PTR [rsi*8-0x3c0163dd]
   140010ae4:	hlt    
   140010ae5:	push   rcx
   140010ae6:	sar    BYTE PTR [rbp-0x43421d85],0x66
   140010aed:	xchg   edx,eax
   140010aee:	rex.XB push QWORD PTR [r13+0x2ef81f07]
   140010af5:	sub    eax,0x8b15f7ca
   140010afa:	retf   
   140010afb:	or     al,0xaa
   140010afd:	or     dl,BYTE PTR [rcx+0x45]
   140010b00:	cmp    DWORD PTR [rbp+0x3958172b],0xd5c53cf7
   140010b0a:	pop    rax
   140010b0b:	cli    
   140010b0c:	repz loop 0x140010b31
   140010b0f:	cli    
   140010b10:	rex.WRXB push 0xfffffffff4897f73
   140010b16:	faddp  st(2),st
   140010b18:	or     esp,DWORD PTR [rbx+0x3918a7a1]
   140010b1e:	sbb    BYTE PTR [rcx+0x18],al
   140010b21:	or     BYTE PTR [rdx-0x57612f3a],cl
   140010b27:	fdivr  st(5),st
   140010b29:	movabs ds:0xca38190237145647,al
   140010b32:	mov    cl,0xa3
   140010b34:	sub    ah,BYTE PTR [rbx]
   140010b36:	jnp    0x140010b08
   140010b38:	sbb    ebp,DWORD PTR [rip+0xffffffff88255938]        # 0xc8266476
   140010b3e:	push   rcx
   140010b3f:	shl    DWORD PTR [rsi+0x3fe47ecc],0x93
   140010b46:	rol    edi,cl
   140010b48:	mov    eax,0xbd022bc7
   140010b4d:	add    eax,ebp
   140010b4f:	in     eax,0xd5
   140010b51:	xchg   ecx,eax
   140010b52:	add    ebx,esi
   140010b54:	jg     0x140010bc7
   140010b56:	movsxd esp,DWORD PTR [rbx-0x4b]
   140010b59:	lods   al,BYTE PTR ds:[rsi]
   140010b5a:	stos   BYTE PTR es:[rdi],al
   140010b5b:	lahf   
   140010b5c:	or     al,BYTE PTR [rbp-0x17]
   140010b5f:	(bad)  
   140010b60:	jrcxz  0x140010b07
   140010b62:	call   0x179b95140
   140010b67:	lods   eax,DWORD PTR ds:[rsi]
   140010b68:	jno    0x140010b81
   140010b6a:	rex.WRX mov dl,0x7c
   140010b6d:	loope  0x140010ba3
   140010b6f:	in     al,dx
   140010b70:	fild   WORD PTR [rax+0x9]
   140010b73:	xchg   esp,eax
   140010b74:	or     BYTE PTR [rbx],al
   140010b76:	xchg   esp,eax
   140010b77:	xor    dl,BYTE PTR [rsi+0x7]
   140010b7a:	jno    0x140010baa
   140010b7c:	(bad)  
   140010b7d:	js     0x140010ba6
   140010b7f:	push   rsp
   140010b80:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b81:	xor    BYTE PTR [rdx+0x6040c51c],ch
   140010b87:	or     al,0xa1
   140010b89:	mov    edx,cs
   140010b8b:	ins    BYTE PTR es:[rdi],dx
   140010b8c:	cli    
   140010b8d:	(bad)
   140010b91:	adc    DWORD PTR [rip+0x6058dc5],0xffffffe0        # 0x14606995d
   140010b98:	rex.RX
   140010b99:	rex.X push rbp
   140010b9b:	or     esi,ebx
   140010b9d:	fdecstp 
   140010b9f:	sub    al,0x7
   140010ba1:	adc    BYTE PTR [rcx+rdx*4],al
   140010ba4:	clc    
   140010ba5:	rcl    DWORD PTR [rdx],0x7d
   140010ba8:	clc    
   140010ba9:	movabs ds:0x4f701478f72afc5c,eax
   140010bb2:	sahf   
   140010bb3:	je     0x140010be4
   140010bb5:	scas   eax,DWORD PTR es:[rdi]
   140010bb6:	mov    esp,ecx
   140010bb8:	add    DWORD PTR [rdi-0x75],edi
   140010bbb:	neg    edi
   140010bbd:	jmp    QWORD PTR [rbx-0x76]
   140010bc0:	cmp    al,0x2e
   140010bc2:	ret    
   140010bc3:	rex.RB (bad) 
   140010bc5:	movabs ds:0x97eb9d8e234aa231,eax
   140010bce:	pop    rcx
   140010bcf:	cmp    edi,esi
   140010bd1:	cmp    al,0x83
   140010bd3:	stos   DWORD PTR es:[rdi],eax
   140010bd4:	pop    rbx
   140010bd5:	push   0xffffffff8939c133
   140010bda:	sbb    al,0x5d
   140010bdc:	imul   ebp,DWORD PTR [rax],0x38ff245c
   140010be2:	pop    rsp
   140010be3:	retf   
   140010be4:	jmp    FWORD PTR [rdi]
   140010be6:	cmp    eax,0x18a7a183
   140010beb:	or     BYTE PTR [rdx],dh
   140010bed:	push   rsp
   140010bee:	(bad)  
   140010bef:	or     ebp,DWORD PTR [rdx+0x29eeae4a]
   140010bf5:	xor    al,0xde
   140010bf7:	adc    DWORD PTR [rsi+0x4],edx
   140010bfa:	mov    bh,0x18
   140010bfc:	jo     0x140010c01
   140010bfe:	ror    DWORD PTR [rbp+0x16586022],0x82
   140010c05:	div    DWORD PTR [rcx+0x58]
   140010c08:	mov    BYTE PTR [rbx],al
   140010c0a:	push   rsp
   140010c0b:	pop    rdx
   140010c0c:	adc    BYTE PTR [rcx-0x80],0xd
   140010c10:	(bad)  
   140010c11:	(bad)  
   140010c12:	(bad)  
   140010c13:	push   rcx
   140010c14:	rex.WRX ffree st(7)
   140010c17:	cmp    eax,0xdea0e4c
   140010c1c:	rex (bad) 
   140010c1e:	jg     0x140010c90
   140010c20:	cmp    DWORD PTR [rax-0x6],eax
   140010c23:	fnstcw WORD PTR [rax-0x1c]
   140010c26:	xchg   ecx,eax
   140010c27:	(bad)  
   140010c28:	retf   
   140010c29:	ret    0x38ff
   140010c2c:	movabs ds:0x7b008f4aa996160c,al
   140010c35:	rex.WRB and BYTE PTR [r8+rdi*1-0x33],r11b
   140010c3a:	retf   0x17f9
   140010c3d:	nop
   140010c3e:	fwait
   140010c3f:	push   rdi
   140010c40:	add    DWORD PTR [rax+0x57fe18d3],0xe3ee9c68
   140010c4a:	and    al,0x8e
   140010c4c:	(bad)  
   140010c4d:	jbe    0x140010bd1
   140010c4f:	test   DWORD PTR [rsi-0x3555ef4e],0x14602ae1
   140010c59:	or     eax,0x7e456a00
   140010c5e:	enter  0x40a1,0x58
   140010c62:	adc    ah,bl
   140010c64:	add    dl,BYTE PTR [rax+0x9]
   140010c67:	pop    rdx
   140010c68:	or     al,ch
   140010c6a:	xor    BYTE PTR [rsi+0x7383ce01],ah
   140010c70:	mov    dh,BYTE PTR [rbx]
   140010c72:	push   rdx
   140010c73:	nop
   140010c74:	test   al,0xb4
   140010c76:	mov    ecx,DWORD PTR [rdi]
   140010c78:	test   al,0x1e
   140010c7a:	jnp    0x140010cca
   140010c7c:	mov    bh,0x7f
   140010c7e:	mov    BYTE PTR [rsi],dh
   140010c80:	or     bh,BYTE PTR [rax+0x7a1f94a7]
   140010c86:	add    edx,eax
   140010c88:	retf   
   140010c89:	(bad)  
   140010c8a:	push   rsp
   140010c8b:	outs   dx,BYTE PTR ds:[rsi]
   140010c8c:	shr    edx,1
   140010c8e:	cmp    ebx,DWORD PTR [rax+0x59]
   140010c91:	stc    
   140010c92:	imul   esp,DWORD PTR [rdi+0x218b4d61],0xa15c5a3
   140010c9c:	and    BYTE PTR [rax-0x628c4c50],cl
   140010ca2:	xchg   ebp,eax
   140010ca3:	repz iret 
   140010ca5:	xor    edi,DWORD PTR [rsp+rdi*2+0x11f66d16]
   140010cac:	rcl    DWORD PTR [rdi+rdi*4-0x49c0d64f],0x21
   140010cb4:	sbb    esi,ebp
   140010cb6:	push   rbp
   140010cb7:	clc    
   140010cb8:	test   al,0xc4
   140010cba:	gs and eax,0xd06148c8
   140010cc0:	sbb    eax,0x3097f4
   140010cc5:	add    DWORD PTR [rbp+0x41643950],eax
   140010ccb:	jno    0x140010cd0
   140010ccd:	jo     0x140010ce4
   140010ccf:	add    rax,0xffffffffa5ef04be
   140010cd5:	sub    r13,QWORD PTR [r12+rbp*2]
   140010cd9:	nop
   140010cda:	(bad)  
   140010cdb:	movups xmm3,XMMWORD PTR [rax-0x6b]
   140010cdf:	cli    
   140010ce0:	sub    edi,DWORD PTR [rdi-0x64]
   140010ce3:	xchg   ebx,eax
   140010ce4:	(bad)  
   140010ce5:	mov    eax,0xbd022b47
   140010cea:	add    eax,ebp
   140010cec:	in     eax,0xd5
   140010cee:	nop
   140010cef:	lods   al,BYTE PTR ds:[rsi]
   140010cf0:	cld    
   140010cf1:	xchg   DWORD PTR [rsi-0x3a580c87],ebx
   140010cf7:	stc    
   140010cf8:	iret   
   140010cf9:	rex.WXB push r11
   140010cfb:	ret    
   140010cfc:	js     0x140010c97
   140010cfe:	shl    DWORD PTR [rax+0x8],1
   140010d01:	add    dh,BYTE PTR [rbp-0x18b42cf6]
   140010d07:	pop    rax
   140010d08:	cmp    bh,bh
   140010d0a:	jne    0x140010d70
   140010d0c:	out    0x1a,eax
   140010d0e:	stos   BYTE PTR es:[rdi],al
   140010d0f:	or     eax,0x7fe148e
   140010d14:	mov    esp,0xd4ecca8b
   140010d19:	add    BYTE PTR [rax+0x17],al
   140010d1c:	add    eax,eax
   140010d1e:	mov    dl,0x70
   140010d20:	xchg   esp,eax
   140010d21:	xchg   ebp,eax
   140010d22:	mov    ebx,DWORD PTR [rsi+0xa8207d]
   140010d28:	push   0x45812c7
   140010d2d:	push   rax
   140010d2e:	or     BYTE PTR [rcx+0x1],ah
   140010d31:	fcom   QWORD PTR [rax]
   140010d33:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010d34:	adc    BYTE PTR [rax+riz*1-0x6c],ah
   140010d38:	add    eax,DWORD PTR [rdi-0x17]
   140010d3b:	pop    rbp
   140010d3c:	imul   eax,DWORD PTR [rdx+rdx*8],0xfffffffb
   140010d40:	push   rbp
   140010d41:	movsxd ebx,DWORD PTR [rcx+0x50]
   140010d44:	test   BYTE PTR [rdx-0xc],al
   140010d47:	clc    
   140010d48:	jnp    0x140010d03
   140010d4a:	bnd jge 0x140010d29
   140010d4d:	movabs ds:0xcabcbdb2753dc058,eax
   140010d56:	shl    BYTE PTR [rdx],cl
   140010d58:	(bad)  
   140010d59:	and    dh,al
   140010d5b:	ja     0x140010d3c
   140010d5d:	std    
   140010d5e:	sbb    eax,ebp
   140010d60:	ret    0x9fe2
   140010d63:	ja     0x140010d3f
   140010d65:	clc    
   140010d66:	adc    BYTE PTR [rax+0x2d],0xaf
   140010d6a:	xor    ebp,DWORD PTR [rax]
   140010d6c:	(bad)  
   140010d6d:	fs mov ebp,0xf0c7b7b3
   140010d73:	(bad)  
   140010d75:	sbb    BYTE PTR [rdi-0x61],ch
   140010d78:	rex.RB (bad) 
   140010d7a:	jge    0x140010d8c
   140010d7c:	sub    ah,al
   140010d7e:	push   rcx
   140010d7f:	rex.WB and al,0xff
   140010d82:	and    al,0xfa
   140010d84:	outs   dx,DWORD PTR ds:[rsi]
   140010d85:	(bad)  
   140010d86:	movabs al,ds:0xa2852837d191779d
   140010d8f:	adc    ah,BYTE PTR [rax+riz*4-0x7c]
   140010d93:	or     sil,BYTE PTR [r14]
   140010d96:	mov    BYTE PTR [rcx],ch
   140010d98:	sub    BYTE PTR [rax-0x4],0xad
   140010d9c:	mov    bh,BYTE PTR [rdx]
   140010d9e:	mov    r12d,0x2904a148
   140010da5:	add    eax,0x1b0a1037
   140010daa:	(bad)  
   140010dab:	and    ah,BYTE PTR [rdx]
   140010dad:	js     0x140010e0b
   140010daf:	int3   
   140010db0:	inc    DWORD PTR [rbp+0x72]
   140010db3:	(bad)  
   140010db4:	and    eax,eax
   140010db6:	sub    dh,BYTE PTR [rbx+0x2f32f81f]
   140010dbc:	sbb    eax,0x8ac1ee2
   140010dc1:	hlt    
   140010dc2:	(bad)  
   140010dc3:	movabs al,ds:0x1f1ff422dc9fdf97
   140010dcc:	jg     0x140010dae
   140010dce:	rex.WRXB mov BYTE PTR [r8-0x7b0aeac9],r15b
   140010dd5:	xor    BYTE PTR [rax],bl
   140010dd7:	xor    ebx,DWORD PTR [rdx+0x58]
   140010dda:	(bad)  
   140010ddb:	mov    DWORD PTR [rdx+0x2b],edx
   140010dde:	fdivr  QWORD PTR [rdx+rsi*2-0x308c4a7f]
   140010de5:	jrcxz  0x140010e5e
   140010de7:	movabs cs:0x71a57f4ac28046a1,eax
   140010df1:	div    BYTE PTR [rbx+0x68]
   140010df4:	out    dx,al
   140010df5:	movabs ds:0x812bec06d88b2ed7,al
   140010dfe:	sar    QWORD PTR [rsp+r8*8],1
   140010e02:	pop    rsi
   140010e03:	or     al,0x0
   140010e05:	rex.WR and BYTE PTR [rax+0x7050ca1d],0x23
   140010e0d:	sub    r12b,BYTE PTR [r8+0x68aa414]
   140010e14:	sar    BYTE PTR [rbx-0x6ab7eea8],0x80
   140010e1b:	outs   dx,BYTE PTR ds:[rsi]
   140010e1c:	and    al,BYTE PTR [rcx-0x1d85faf8]
   140010e22:	mov    bl,0x6c
   140010e24:	fst    QWORD PTR [rbx+0x733dc051]
   140010e2a:	movabs ds:0xf1b9400c9226bcbd,al
   140010e33:	hlt    
   140010e34:	pop    rbx
   140010e35:	fsubrp st(5),st
   140010e37:	stos   DWORD PTR es:[rdi],eax
   140010e38:	(bad)  
   140010e39:	rex.RXB or BYTE PTR [rip+0xffffffff97e29eae],r14b        # 0xd7e3acee
   140010e40:	(bad)  
   140010e41:	rex.WB (bad) 
   140010e43:	fistp  WORD PTR [rbp-0x3157317]
   140010e49:	xchg   r14,rax
   140010e4b:	cs mov esp,0x209bd308
   140010e51:	add    DWORD PTR [rdi],ebp
   140010e53:	(bad)  
   140010e54:	cmp    al,0x7f
   140010e56:	sbb    bl,dh
   140010e58:	xchg   ecx,eax
   140010e59:	ret    0xa8f4
   140010e5c:	lods   al,BYTE PTR ds:[rsi]
   140010e5d:	fiadd  WORD PTR [rbp+0x3]
   140010e60:	push   rax
   140010e61:	push   rsi
   140010e62:	(bad)  
   140010e63:	push   rdi
   140010e64:	or     dl,BYTE PTR [rdx-0x76]
   140010e67:	lods   eax,DWORD PTR ds:[rsi]
   140010e68:	(bad)  
   140010e6a:	xor    DWORD PTR [rsi],eax
   140010e6c:	nop
   140010e6d:	hlt    
   140010e6e:	fsub   DWORD PTR [rdx]
   140010e70:	add    BYTE PTR [rbx*1+0x11890c08],dl
   140010e77:	rex movabs eax,ds:0xc31413ce2af82548
   140010e81:	add    DWORD PTR [rdx+0x40cd0a9],esp
   140010e87:	mov    dl,BYTE PTR [rbp+0x14]
   140010e8a:	(bad)  
   140010e8b:	jne    0x140010e7f
   140010e8d:	(bad)  
   140010e8e:	rex.WRXB mov r11b,0xb5
   140010e91:	(bad)  
   140010e92:	cmp    eax,0x6f40516
   140010e97:	movabs al,ds:0x6b87fd401cbbdf97
   140010ea0:	jmp    0x140010e2d
   140010ea2:	jle    0x140010f19
   140010ea4:	std    
   140010ea5:	(bad)  
   140010ea6:	xor    eax,0xd3962c52
   140010eab:	cmp    eax,0xb2b54710
   140010eb0:	rex.B jmp 0xfd86553a
   140010eb6:	stos   DWORD PTR es:[rdi],eax
   140010eb7:	xchg   edi,eax
   140010eb8:	pop    rax
   140010eb9:	cmp    ebx,edi
   140010ebb:	xor    eax,0xa117ebca
   140010ec0:	cdq    
   140010ec1:	cdq    
   140010ec2:	xlat   BYTE PTR ds:[rbx]
   140010ec3:	(bad)  
   140010ec4:	enter  0x497f,0xb0
   140010ec8:	jp     0x140010f47
   140010eca:	push   0xfffffffffffffffe
   140010ecc:	mov    DWORD PTR [rcx],edx
   140010ece:	rex loope 0x140010e55
   140010ed1:	stos   BYTE PTR es:[rdi],al
   140010ed2:	mov    WORD PTR [rip+0x7c00aefe],?        # 0x1bc01bdd6
   140010ed8:	in     al,0xf4
   140010eda:	rex.RXB adc r8b,r12b
   140010edd:	loopne 0x140010e71
   140010edf:	jg     0x140010e92
   140010ee1:	xor    dl,BYTE PTR [rax]
   140010ee3:	mov    esp,0x29630c0
   140010ee8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010ee9:	jo     0x140010f33
   140010eeb:	or     DWORD PTR [rsi-0xebf5a76],edi
   140010ef1:	pop    rax
   140010ef2:	je     0x140010f15
   140010ef4:	(bad)  
   140010ef5:	or     dh,BYTE PTR [rsi+rdi*8+0x560b2b00]
   140010efc:	ret    0xdf13
   140010eff:	retf   
   140010f00:	(bad)  [rdi-0x2f]
   140010f03:	sub    eax,0x7203de09
   140010f08:	rex.WRXB pushf 
   140010f0a:	fs (bad) 
   140010f0c:	scas   eax,DWORD PTR es:[rdi]
   140010f0d:	movabs ds:0x1fd1e47e5ff422dc,al
   140010f16:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010f17:	lods   al,BYTE PTR ds:[rsi]
   140010f18:	fimul  WORD PTR [rbx+0x68]
   140010f1b:	test   al,0x26
   140010f1d:	(bad)  
   140010f1e:	or     ebx,eax
   140010f20:	and    eax,0x8cb8bc6
   140010f25:	retf   0xa36e
   140010f28:	mov    cl,0xe7
   140010f2a:	jg     0x140010f17
   140010f2c:	adc    al,0xb2
   140010f2e:	mov    bh,0x43
   140010f30:	pop    rsp
   140010f31:	mov    ebx,0xd2e7cd33
   140010f36:	pushf  
   140010f37:	repz and edx,DWORD PTR [rcx]
   140010f3a:	add    al,0xcc
   140010f3c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010f3d:	rex add ebp,edi
   140010f40:	(bad)
   140010f44:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010f45:	test   al,0x74
   140010f47:	sbb    al,0xb2
   140010f49:	ret    0xaac1
   140010f4c:	pop    rbp
   140010f4d:	lock (bad) 
   140010f4f:	xchg   al,ah
   140010f51:	rex.WX test QWORD PTR [rdx-0x70],rax
   140010f55:	shl    cl,cl
   140010f57:	sub    ah,BYTE PTR [rcx+0x40af232c]
   140010f5d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010f5e:	cmc    
   140010f5f:	cld    
   140010f60:	in     eax,dx
   140010f61:	movabs ss:0x4c23a1ffdd4d8138,al
   140010f6b:	(bad)  
   140010f6c:	mov    ah,0x25
   140010f6e:	sar    DWORD PTR [rsi],0x2
   140010f71:	call   0x1885ca71b
   140010f76:	pop    rbx
   140010f77:	repz jg 0x140010f4d
   140010f7a:	push   rbx
   140010f7b:	outs   dx,DWORD PTR ds:[rsi]
   140010f7c:	xchg   ebx,eax
   140010f7d:	test   ebp,esp
   140010f7f:	lahf   
   140010f80:	push   rsp
   140010f81:	test   BYTE PTR [rdx+0x13d5c7de],dh
   140010f87:	fmul   st(2),st
   140010f89:	and    DWORD PTR [rsi-0x4f5576ab],eax
   140010f8f:	jae    0x140010f84
   140010f91:	cmp    cl,BYTE PTR [rbx-0x19]
   140010f94:	mov    esi,0x22ed7546
   140010f99:	fimul  DWORD PTR [rax+rdx*2-0x40]
   140010f9d:	jrcxz  0x140010fc7
   140010f9f:	push   rax
   140010fa0:	rex.WX jrcxz 0x140010fa1
   140010fa3:	(bad)  
   140010fa4:	jb     0x140010ff4
   140010fa6:	(bad)  
   140010fa7:	loope  0x140010fa0
   140010fa9:	cs jb  0x140010fa5
   140010fac:	push   rbx
   140010fad:	or     ah,BYTE PTR [rax]
   140010faf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010fb0:	rex.R mov edi,0x2bfb16c
   140010fb6:	push   0x5d
   140010fb8:	jle    0x14001100b
   140010fba:	movabs ds:0xf9882180a813ab26,al
   140010fc3:	jno    0x140010f6e
   140010fc5:	add    al,0x5f
   140010fc7:	(bad)  
   140010fc8:	fld    QWORD PTR [rcx+0x361b3882]
   140010fce:	(bad)  
   140010fcf:	pop    rbx
   140010fd0:	jb     0x140010f5a
   140010fd2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010fd3:	add    DWORD PTR [rdx+0x25],eax
   140010fd6:	loope  0x140011045
   140010fd8:	jg     0x140010f5b
   140010fda:	push   rsp
   140010fdc:	(bad)  
   140010fdd:	mov    edx,0x3cbb80bc
   140010fe2:	or     eax,0x2f400de8
   140010fe7:	fistp  QWORD PTR [rdx-0x3402f7e4]
   140010fed:	icebp  
   140010fee:	js     0x14001104c
   140010ff0:	lods   al,BYTE PTR ds:[rsi]
   140010ff1:	outs   dx,BYTE PTR ds:[rsi]
   140010ff2:	cld    
   140010ff3:	(bad)  
   140010ff4:	(bad)  
   140010ff5:	ret    
   140010ff6:	jne    0x140010fc9
   140010ff8:	rex mov ecx,0x33ce03bf
   140010ffe:	pop    rax
   140010fff:	cmp    eax,DWORD PTR [rdi+rdx*1-0x196be59f]
   140011006:	ret    0xd619
   140011009:	(bad)  
   14001100a:	cmp    eax,0x1bddb8f
   14001100f:	xor    al,0x20
   140011011:	mov    ss,WORD PTR [rdx]
   140011013:	movabs ds:0xfd0c474ef0f213f2,al
   14001101c:	popf   
   14001101d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001101e:	and    DWORD PTR [rax],esp
   140011020:	adc    cl,bl
   140011022:	ja     0x14001104d
   140011024:	or     ch,al
   140011026:	mov    edi,gs
   140011028:	rex.W (bad) 
   14001102a:	and    DWORD PTR [rax+0x36],ebp
   14001102d:	or     ch,BYTE PTR [rax-0x4]
   140011030:	adc    eax,0x252a412a
   140011035:	cs adc BYTE PTR es:[rbx-0x7e],cl
   14001103a:	scas   al,BYTE PTR es:[rdi]
   14001103b:	adc    BYTE PTR [rdx],cl
   14001103d:	add    edx,DWORD PTR [rsi]
   14001103f:	mov    ebp,0x38731145
   140011044:	(bad)  
   140011045:	and    r12d,eax
   140011048:	mov    r12b,r11b
   14001104b:	in     al,dx
   14001104c:	jge    0x14001104d
   14001104e:	cwde   
   14001104f:	data16 jle 0x1400110bc
   140011052:	rcr    BYTE PTR [rbp+0x2c],1
   140011055:	mov    ebp,0x5be5e801
   14001105a:	xchg   ebx,eax
   14001105b:	pop    rbx
   14001105c:	test   dh,bh
   14001105e:	imul   ecx,DWORD PTR [rdi+0x3e],0xfffffffd
   140011062:	rex.RXB jne 0x140011021
   140011065:	hlt    
   140011066:	rex.B adc eax,0xc194f570
   14001106c:	dec    BYTE PTR [rip+0xffffffff8306e2c2]        # 0xc307f334
   140011072:	test   DWORD PTR [rbp+0x44],esp
   140011075:	loope  0x140011071
   140011077:	ficomp WORD PTR [rsi]
   140011079:	movabs ds:0x37a6017cba33cff3,eax
   140011082:	push   rcx
   140011083:	add    al,BYTE PTR [rdx+0x5c]
   140011086:	shl    DWORD PTR [rdi-0x3801eb70],1
   14001108c:	jl     0x1400110ca
   14001108e:	jmp    0x13002fb0b
   140011093:	(bad)  
   140011094:	sbb    eax,0x2e589e7d
   140011099:	adc    rax,0x3fd7ae80
   14001109f:	rol    BYTE PTR [rip+0xffffffff904a8050],0x2a        # 0xd04b90f6
   1400110a6:	xchg   esi,eax
   1400110a7:	add    ebp,eax
   1400110a9:	ds (bad) 
   1400110ab:	gs (bad) 
   1400110ad:	(bad)  
   1400110ae:	xor    ch,ah
   1400110b0:	rex.WRXB stc 
   1400110b2:	(bad)  
   1400110b3:	sub    r14b,BYTE PTR [rbp+r9*1-0x1eee7ec5]
   1400110bb:	jrcxz  0x14001113c
   1400110bd:	push   rsi
   1400110be:	sahf   
   1400110bf:	jg     0x14001105d
   1400110c1:	jnp    0x1400110c7
   1400110c3:	or     al,0xec
   1400110c5:	or     eax,0x17bf2f40
   1400110ca:	leave  
   1400110cb:	fidivr WORD PTR [rdi-0x3]
   1400110ce:	mov    DWORD PTR [rdi],esp
   1400110d0:	fmulp  st(4),st
   1400110d2:	ret    0x9fea
   1400110d5:	(bad)
   1400110d8:	jnp    0x140011128
   1400110da:	imul   DWORD PTR [rax]
   1400110dc:	addr32 adc ebx,esp
   1400110df:	(bad)  
   1400110e0:	jge    0x1400110ee
   1400110e2:	retf   0xa982
   1400110e5:	sub    dl,bl
   1400110e7:	retf   
   1400110e8:	out    0x58,eax
   1400110ea:	cmp    eax,0xcefc75ff
   1400110ef:	adc    eax,0x17105308
   1400110f4:	sbb    eax,0x1b4a06b3
   1400110f9:	std    
   1400110fa:	xchg   ebp,eax
   1400110fb:	cmp    BYTE PTR [rcx+0x5ce73d2e],sil
   140011102:	(bad)  
   140011103:	add    BYTE PTR [rdx-0x68c7fd68],cl
   140011109:	(bad)  
   14001110a:	cli    
   14001110b:	mov    al,0x23
   14001110d:	push   rax
   14001110e:	imul   eax,DWORD PTR [rax],0x48
   140011111:	xchg   esi,eax
   140011112:	rex cmp ecx,DWORD PTR [rdi+0x58582245]
   140011119:	sub    DWORD PTR [rdx+rbx*1-0x31f42b71],edx
   140011120:	retf   0xce81
   140011123:	mov    ch,0x63
   140011125:	ret    0x66a2
   140011128:	mov    bh,0xd1
   14001112a:	or     BYTE PTR [rax-0x1c5ebfa8],0xa7
   140011131:	mov    eax,0x9e76fdf1
   140011136:	ja     0x140011175
   140011138:	cmp    eax,0xbd0037b8
   14001113d:	jl     0x1400111b2
   14001113f:	cmp    DWORD PTR [rax+0x2eacaffa],ecx
   140011145:	xchg   esi,eax
   140011146:	sbb    eax,DWORD PTR [rdi-0x2]
   140011149:	(bad)  
   14001114a:	(bad)  
   14001114b:	or     al,0x17
   14001114d:	popf   
   14001114e:	add    BYTE PTR [rcx-0x6a844f9a],ah
   140011154:	push   rax
   140011155:	lea    ebp,[rax]
   140011157:	(bad)  
   140011158:	(bad)  
   140011159:	push   rdx
   14001115a:	movabs al,ds:0xe1649fcf28cc9cdc
   140011163:	ror    bl,cl
   140011165:	xor    cl,bl
   140011167:	mov    cl,0x16
   140011169:	fsubp  st(0),st
   14001116b:	stc    
   14001116c:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001116e:	adc    al,0xe8
   140011170:	pop    rsp
   140011171:	mov    bh,0x5e
   140011173:	add    edi,DWORD PTR cs:[rdx]
   140011176:	movabs eax,ds:0xa002b177b8147170
   14001117f:	pop    rsi
   140011180:	push   rcx
   140011181:	xlat   BYTE PTR ds:[rbx]
   140011182:	mov    dh,0x0
   140011184:	imul   edx,DWORD PTR [rdi-0x1f],0x53
   140011188:	clc    
   140011189:	(bad)  
   14001118a:	test   DWORD PTR [rax-0x10],0x5577fd11
   140011191:	mov    WORD PTR [rax],es
   140011193:	ror    BYTE PTR [rdi-0x32bd3cb5],cl
   140011199:	or     ah,al
   14001119b:	push   rax
   14001119c:	rex.RX mov bl,0x9
   14001119f:	nop
   1400111a0:	mov    ?,WORD PTR [rcx]
   1400111a2:	pop    rdx
   1400111a3:	rcr    cl,1
   1400111a5:	ja     0x140011225
   1400111a7:	(bad)  
   1400111a8:	(bad)  
   1400111a9:	fist   WORD PTR [rbx]
   1400111ab:	(bad)  
   1400111ac:	movabs al,ds:0xf2bccbbbf2f400de
   1400111b5:	rex.RXB (bad) 
   1400111b7:	push   QWORD PTR [rcx-0x1cdb0139]
   1400111bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400111be:	test   DWORD PTR [rdx-0x523b1d55],0xdee194d9
   1400111c8:	jne    0x140011164
   1400111ca:	mov    ch,0xa3
   1400111cc:	mov    WORD PTR [rsi+0x23],es
   1400111cf:	push   0x55
   1400111d1:	jbe    0x140011182
   1400111d3:	ins    DWORD PTR es:[rdi],dx
   1400111d4:	mov    bl,0x72
   1400111d6:	(bad)  
   1400111d7:	and    al,0xc5
   1400111d9:	mov    ch,0xcb
   1400111db:	push   0x1ac4a298
   1400111e0:	jg     0x140011207
   1400111e2:	push   rax
   1400111e3:	stos   BYTE PTR es:[rdi],al
   1400111e4:	out    0xf6,al
   1400111e6:	(bad)  
   1400111e7:	xor    edi,ebp
   1400111e9:	out    dx,eax
   1400111ea:	rex.WRB stc 
   1400111ec:	popf   
   1400111ed:	(bad)  
   1400111ee:	or     al,BYTE PTR [rax-0x1f]
   1400111f1:	push   rdx
   1400111f2:	stc    
   1400111f3:	scas   al,BYTE PTR es:[rdi]
   1400111f4:	push   rbp
   1400111f5:	rex.WRX rcr BYTE PTR [rdi+r15*2-0x1ec7e859],0x0
   1400111fe:	jmp    0x1685b1978
   140011203:	push   rdx
   140011204:	push   0xffffffffffffffac
   140011206:	(bad)  
   140011207:	fcom   DWORD PTR [rcx-0x45]
   14001120a:	retf   0x530
   14001120d:	addr32 sub eax,0x523c66c1
   140011213:	xchg   edi,eax
   140011214:	(bad)  
   140011215:	out    0x5,al
   140011217:	add    BYTE PTR [rbp+0x6527c0f0],dl
   14001121d:	jmp    0x1400111f2
   14001121f:	popf   
   140011220:	jae    0x1400111e0
   140011222:	imul   esi,ebp,0xffffffe4
   140011225:	scas   al,BYTE PTR es:[rdi]
   140011226:	cmp    eax,0x555e5eb1
   14001122b:	imul   edi,DWORD PTR [rcx-0xac2b002],0xfb5c597e
   140011235:	adc    edx,DWORD PTR [rdx+0xc]
   140011238:	movsxd edi,esi
   14001123a:	lods   al,BYTE PTR ds:[rsi]
   14001123b:	or     eax,0x6526e4e5
   140011240:	push   rbx
   140011241:	jrcxz  0x140011252
   140011243:	popf   
   140011244:	(bad)  
   140011245:	loopne 0x140011284
   140011247:	jnp    0x1400112be
   140011249:	sub    DWORD PTR [rbp+rdi*4-0x38],0xffffffe2
   14001124e:	neg    BYTE PTR [rcx]
   140011250:	fs (bad) 
   140011252:	cmp    ch,BYTE PTR [rax+0x3]
   140011255:	cmp    edi,esi
   140011257:	(bad)  
   140011258:	out    dx,al
   140011259:	(bad)  
   14001125a:	lods   eax,DWORD PTR ds:[rsi]
   14001125b:	(bad)  
   14001125c:	jbe    0x1400112c8
   14001125e:	cmp    DWORD PTR [rbx],0x2d
   140011261:	sbb    dh,al
   140011263:	adc    bl,BYTE PTR [rbx+0x59c28a78]
   140011269:	mov    edi,ebx
   14001126b:	sbb    bh,BYTE PTR [rdi-0x6e]
   14001126e:	xchg   BYTE PTR [rsi+0x5573dc4],ah
   140011274:	(bad)  
   140011275:	push   0x3
   140011277:	movabs al,ds:0x850018c9c785b0e
   140011280:	scas   al,BYTE PTR es:[rdi]
   140011281:	rex.W retf 
   140011283:	mov    ebp,es
   140011285:	push   rdx
   140011286:	rex.XB mov WORD PTR [r10],?
   140011289:	mov    ah,0x45
   14001128b:	stc    
   14001128c:	push   rsp
   14001128d:	in     eax,dx
   14001128e:	stc    
   14001128f:	mov    eax,0xf9308dd1
   140011294:	rcr    BYTE PTR [rdx],cl
   140011296:	mov    bl,0x8a
   140011298:	(bad)  
   140011299:	or     ah,ch
   14001129b:	and    eax,DWORD PTR [rax+0x3931ee5e]
   1400112a1:	enter  0x3ff5,0x72
   1400112a5:	je     0x14001127a
   1400112a7:	lods   eax,DWORD PTR ds:[rsi]
   1400112a8:	outs   dx,BYTE PTR ds:[rsi]
   1400112a9:	(bad)  
   1400112aa:	push   rbp
   1400112ab:	sbb    DWORD PTR [rsi],ebp
   1400112ad:	lea    eax,[rbp+0x7c]
   1400112b0:	sbb    al,0xc6
   1400112b2:	push   rcx
   1400112b3:	(bad)  
   1400112b4:	lock mov edi,0xb8675a5e
   1400112ba:	mov    edx,0x77372809
   1400112bf:	outs   dx,BYTE PTR ds:[rsi]
   1400112c0:	mov    al,0x78
   1400112c2:	out    dx,al
   1400112c3:	imul   ecx,DWORD PTR [rsi+rbp*1],0x5f
   1400112c7:	rex
   1400112c8:	mov    bx,0x8471
   1400112cc:	xchg   edi,eax
   1400112cd:	xchg   ecx,eax
   1400112ce:	jg     0x14001125a
   1400112d0:	adc    al,dh
   1400112d2:	test   al,0x95
   1400112d4:	cld    
   1400112d5:	rex.WR jmp 0x122f1020c
   1400112db:	rex.WX movabs rdi,0x3c1e897bdade8f85
   1400112e5:	(bad)
   1400112e8:	std    
   1400112e9:	rex.WRXB sete BYTE PTR [r10+r11*2-0x26e96f98]
   1400112f2:	not    DWORD PTR [rcx+0x16171809]
   1400112f8:	mov    BYTE PTR [rcx+0x4],dl
   1400112fb:	add    eax,0x8f808d1
   140011300:	or     dh,ah
   140011302:	test   al,0xa1
   140011304:	add    eax,DWORD PTR [rsi]
   140011306:	(bad)  
   140011307:	sub    al,0x23
   140011309:	sbb    al,BYTE PTR [rbp-0x7107b7f]
   14001130f:	pop    rcx
   140011310:	mov    esi,0xf2ee0ef6
   140011315:	xor    al,0xa0
   140011317:	(bad)  
   140011318:	add    BYTE PTR [rbp+0x4c0e5adc],bh
   14001131e:	clc    
   14001131f:	add    edx,ecx
   140011321:	icebp  
   140011322:	add    ecx,DWORD PTR [rdi]
   140011324:	std    
   140011325:	jns    0x1400112ed
   140011327:	sub    ecx,edi
   140011329:	test   al,0x2f
   14001132b:	int3   
   14001132c:	(bad)  
   14001132d:	(bad)  
   14001132e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001132f:	sahf   
   140011330:	xor    BYTE PTR [rax+0x3f0e44dc],bl
   140011336:	rex xor eax,0x94693018
   14001133c:	out    0xe2,al
   14001133e:	rex.WXB lods al,BYTE PTR ds:[rsi]
   140011340:	ins    BYTE PTR es:[rdi],dx
   140011341:	popf   
   140011342:	ret    0xbcdd
   140011345:	mov    ch,BYTE PTR [rdx-0x7d]
   140011348:	mov    al,bl
   14001134a:	test   eax,0x434fd0da
   14001134f:	jmp    QWORD PTR [rcx+0x746cfe05]
   140011355:	ja     0x1400113a3
   140011357:	add    DWORD PTR [rax+0x37afd2b],ecx
   14001135d:	in     eax,dx
   14001135e:	adc    cl,BYTE PTR [rdi+riz*4]
   140011361:	rex.R (bad) 
   140011363:	xchg   ecx,eax
   140011364:	sub    DWORD PTR [rsi-0x3c],ebp
   140011367:	(bad)  
   140011368:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011369:	jrcxz  0x140011301
   14001136b:	jrcxz  0x1400112fd
   14001136d:	shl    al,1
   14001136f:	add    al,0xf5
   140011371:	test   eax,0x89780804
   140011376:	imul   eax,DWORD PTR [rcx+rdx*1-0x7f],0xc87554c5
   14001137e:	imul   eax,DWORD PTR [rbp-0x16b2f4f3],0x4354a44
   140011388:	icebp  
   140011389:	cmpxchg ebx,esi
   14001138c:	mov    ebp,0x2b3e5dc
   140011391:	jp     0x140011396
   140011393:	ror    bl,1
   140011395:	sub    esp,ebp
   140011397:	(bad)  
   140011398:	and    eax,0x7e6fa3bf
   14001139d:	out    0x7b,al
   14001139f:	gs imul esi,ebp,0x221ca507
   1400113a6:	(bad)  
   1400113a7:	jmp    0x12d59356a
   1400113ac:	mov    edi,0x1e87f0a8
   1400113b1:	rcl    BYTE PTR [rbx],0xb8
   1400113b4:	jle    0x1400113a9
   1400113b6:	es ret 
   1400113b8:	repz iret 
   1400113ba:	xor    edi,DWORD PTR [rsp+rdi*2+0x4b5dea0e]
   1400113c1:	adc    ebp,DWORD PTR [rsp+rsi*8]
   1400113c4:	push   rdi
   1400113c5:	(bad)
   1400113c8:	mov    edi,0x1a27f18c
   1400113cd:	xchg   ebp,eax
   1400113ce:	pop    rsi
   1400113cf:	pushf  
   1400113d0:	out    0x39,al
   1400113d2:	add    dh,bl
   1400113d4:	sbb    DWORD PTR [rcx-0x39],esi
   1400113d7:	addr32 call 0xcaf1ca1c
   1400113dd:	rol    DWORD PTR [rax-0x1392a4ac],1
   1400113e3:	xor    al,0x11
   1400113e5:	(bad)  
   1400113e6:	mov    edi,0x14b67cc5
   1400113eb:	xchg   esi,eax
   1400113ec:	ss pop rax
   1400113ee:	or     al,0xe3
   1400113f0:	retf   0x17d8
   1400113f3:	push   rax
   1400113f4:	cwde   
   1400113f5:	movabs eax,ds:0xa536884593829349
   1400113fe:	popf   
   1400113ff:	adc    eax,0xd8f848b0
   140011404:	(bad)
   140011408:	mov    eax,0xde80a38b
   14001140d:	add    ah,dh
   14001140f:	repnz lea esp,[rcx+rax*1]
   140011413:	jg     0x1400113fa
   140011415:	(bad)  
   140011416:	sbb    ebx,esi
   140011418:	lock rex.RX pop rbp
   14001141b:	fprem  
   14001141d:	sbb    DWORD PTR [r10+rdi*1],r13d
   140011421:	out    0xbc,eax
   140011423:	xchg   ebp,eax
   140011424:	in     eax,dx
   140011425:	add    dl,dl
   140011427:	int3   
   140011428:	test   al,0x76
   14001142a:	scas   eax,DWORD PTR es:[rdi]
   14001142b:	and    ch,BYTE PTR [rbx]
   14001142d:	fwait
   14001142e:	or     al,0x17
   140011430:	xchg   esi,eax
   140011431:	cwde   
   140011432:	xor    al,0xca
   140011434:	(bad)  
   140011435:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011436:	mov    bl,0xac
   140011438:	pushf  
   140011439:	(bad)  
   14001143a:	mov    DWORD PTR [rdi+0xcc2197e],edi
   140011440:	(bad)
   140011444:	add    DWORD PTR [rdi],ebp
   140011446:	sbb    al,bl
   140011448:	jg     0x140011421
   14001144a:	jp     0x14001142c
   14001144c:	xor    al,0xfe
   14001144e:	cmp    ebp,DWORD PTR [rcx]
   140011450:	pop    rsi
   140011451:	(bad)  
   140011452:	add    eax,0x81512ef0
   140011457:	jrcxz  0x140011468
   140011459:	shl    DWORD PTR [rcx],0x8d
   14001145c:	(bad)  
   14001145d:	and    al,0xdf
   14001145f:	rex.X idiv DWORD PTR [rcx]
   140011462:	adc    BYTE PTR [rax],dl
   140011464:	(bad)  
   140011466:	nop
   140011467:	in     eax,0x14
   140011469:	loop   0x1400114c6
   14001146b:	or     al,0x40
   14001146d:	mov    WORD PTR [rax],ss
   14001146f:	and    al,0x45
   140011471:	fcom   QWORD PTR [rsi-0x5bfae98d]
   140011477:	cmp    ecx,esp
   140011479:	(bad)  
   14001147a:	jmp    0x18852ad40
   14001147f:	fwait
   140011480:	stos   DWORD PTR es:[rdi],eax
   140011481:	test   BYTE PTR [rbx],dl
   140011483:	iret   
   140011484:	retf   0xf95
   140011487:	jae    0x1400114a0
   140011489:	add    DWORD PTR [rcx-0xaf62289],0xfffffff2
   140011490:	(bad)  
   140011491:	xchg   esp,eax
   140011492:	add    ebp,DWORD PTR [rbx-0x68697306]
   140011498:	(bad)  
   140011499:	stos   DWORD PTR es:[rdi],eax
   14001149a:	int    0xc3
   14001149c:	jg     0x1400114f1
   14001149e:	rex.RXB stos DWORD PTR es:[rdi],eax
   1400114a0:	rex.RXB (bad) 
   1400114a2:	(bad)  
   1400114a3:	gs mov ebp,0x40434514
   1400114a9:	addr32 jnp 0x140011500
   1400114ac:	cmc    
   1400114ad:	adc    al,0x39
   1400114af:	jl     0x1400114b3
   1400114b1:	out    dx,eax
   1400114b2:	sbb    eax,0x94fb7bbb
   1400114b7:	out    0xbf,eax
   1400114b9:	(bad)  
   1400114ba:	ret    0x97a5
   1400114bd:	jno    0x140011492
   1400114bf:	fwait
   1400114c0:	and    al,0x82
   1400114c2:	mov    ss,WORD PTR [rdi-0x332c33bc]
   1400114c8:	jmp    0x161fc0896
   1400114cd:	(bad)  
   1400114ce:	jmp    0x19f08fa17
   1400114d3:	pop    rax
   1400114d4:	jg     0x1400114d6
   1400114d6:	mov    ah,0xda
   1400114d8:	cwde   
   1400114d9:	retf   0xd280
   1400114dc:	cmc    
   1400114dd:	(bad)  
   1400114de:	je     0x14001147a
   1400114e0:	and    esi,0xffffff89
   1400114e3:	std    
   1400114e4:	xchg   edx,eax
   1400114e5:	(bad)  
   1400114e6:	and    BYTE PTR [rcx-0x7afbba53],ch
   1400114ec:	sub    eax,0x886d1e21
   1400114f1:	mov    dh,0xfc
   1400114f3:	(bad)  
   1400114f4:	pop    rbx
   1400114f5:	mov    BYTE PTR [rax-0x681629e4],ah
   1400114fb:	call   0x10bbb204e
   140011500:	push   rdx
   140011501:	sbb    esi,0xcad2f400
   140011507:	sub    eax,0x37f5fef2
   14001150c:	cmp    al,0xf2
   14001150e:	out    0x74,eax
   140011510:	jno    0x14001150f
   140011512:	add    ebp,DWORD PTR [rsi+0x4108801c]
   140011518:	add    al,0xd1
   14001151a:	sub    BYTE PTR [rdx+0x43],0xb1
   14001151e:	ja     0x140011523
   140011520:	sbb    DWORD PTR [rip+0x423b5c32],ebp        # 0x1823c7158
   140011526:	or     dl,cl
   140011528:	(bad)  
   14001152a:	sub    eax,0x40bc2f56
   14001152f:	jno    0x14001152e
   140011531:	push   rdx
   140011532:	out    0xfd,al
   140011534:	mov    ebp,DWORD PTR [rdx+0x56]
   140011537:	cld    
   140011538:	rex.X
   140011539:	rex.X outs dx,BYTE PTR ds:[rsi]
   14001153b:	std    
   14001153c:	adc    eax,0x6338e323
   140011541:	loopne 0x1400114e8
   140011543:	push   0x246970a0
   140011548:	js     0x1400114e6
   14001154a:	out    0x97,eax
   14001154c:	(bad)  
   14001154d:	scas   al,BYTE PTR es:[rdi]
   14001154e:	add    DWORD PTR [rcx+0x14],ebp
   140011551:	or     DWORD PTR [rcx-0xd525ff2],ecx
   140011557:	(bad)  
   140011558:	fisttp QWORD PTR [rdi+0x55]
   14001155b:	add    DWORD PTR [rsp+rax*1],0x340654ba
   140011562:	rex.WX mov cl,0xfd
   140011565:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011566:	adc    DWORD PTR [rcx-0x37],esp
   140011569:	clc    
   14001156a:	rex.R xor al,0x22
   14001156d:	scas   al,BYTE PTR es:[rdi]
   14001156e:	xor    eax,0x6132a9a0
   140011573:	(bad)  
   140011574:	(bad)  
   140011575:	xchg   ecx,eax
   140011576:	test   BYTE PTR [rdi-0x1],dh
   140011579:	add    bh,BYTE PTR [rdi+0x69770cf3]
   14001157f:	sbb    dl,al
   140011581:	sbb    eax,DWORD PTR [rax+0x22dca25e]
   140011587:	out    dx,eax
   140011588:	mov    edi,0x3e27c9ff
   14001158d:	xlat   BYTE PTR ds:[rbx]
   14001158e:	sub    al,0xad
   140011590:	inc    DWORD PTR [rbx+rax*4]
   140011593:	add    eax,0xd547c44
   140011598:	test   DWORD PTR [rax-0x1ae615ff],esp
   14001159e:	(bad)  
   14001159f:	cs mov dl,0x79
   1400115a2:	(bad)  
   1400115a3:	(bad)
   1400115a6:	out    dx,al
   1400115a7:	mov    bh,BYTE PTR fs:[rbx-0x745a7590]
   1400115ae:	addr32 mov edi,?
   1400115b1:	(bad)  
   1400115b2:	shl    BYTE PTR [rsi],0xf0
   1400115b5:	in     al,0xce
   1400115b7:	mov    edi,0xac5bfe84
   1400115bc:	popf   
   1400115bd:	jbe    0x1400115e5
   1400115bf:	sbb    eax,0xffa1204c
   1400115c4:	jle    0x140011614
   1400115c6:	(bad)
   1400115c9:	in     eax,dx
   1400115ca:	iret   
   1400115cb:	xor    eax,DWORD PTR [rcx]
   1400115cd:	xor    eax,0x144523bf
   1400115d2:	(bad)  
   1400115d3:	jnp    0x1400115dc
   1400115d5:	and    dl,BYTE PTR [rsi]
   1400115d7:	ror    BYTE PTR [rcx-0xa],1
   1400115da:	pop    rbp
   1400115db:	lods   al,BYTE PTR ds:[rsi]
   1400115dc:	(bad)  
   1400115dd:	and    al,0xce
   1400115df:	add    DWORD PTR [rcx-0x7f969ef6],ebp
   1400115e5:	imul   eax,DWORD PTR [rcx],0x40
   1400115e8:	or     ebp,DWORD PTR [rdx]
   1400115ea:	adc    al,0x27
   1400115ec:	mov    WORD PTR [rsi],ds
   1400115ee:	xlat   BYTE PTR ds:[rbx]
   1400115ef:	sbb    ebx,DWORD PTR [rdi-0x20]
   1400115f2:	cs add eax,0xd0037b03
   1400115f8:	rex.WXB push r15
   1400115fa:	jb     0x1400115da
   1400115fc:	jg     0x1400115f2
   1400115fe:	movabs eax,ds:0x78e86ffd79649e07
   140011607:	mov    ecx,0xd8185f14
   14001160c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001160d:	cmp    BYTE PTR [rdx],al
   14001160f:	test   BYTE PTR [rsi],al
   140011611:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011612:	jnp    0x14001164c
   140011614:	out    dx,eax
   140011615:	sbb    BYTE PTR [rdx+rdi*4],bl
   140011618:	(bad)  
   140011619:	push   rcx
   14001161a:	in     eax,0xc6
   14001161c:	mov    ch,0x6d
   14001161e:	xchg   esi,eax
   14001161f:	(bad)  
   140011620:	jg     0x14001165f
   140011622:	mov    ?,ebx
   140011624:	scas   al,BYTE PTR es:[rdi]
   140011625:	test   esp,0x81052a8f
   14001162b:	rex.X add al,0x2f
   14001162e:	and    DWORD PTR [rdi-0x48b2ce01],eax
   140011634:	(bad)  
   140011635:	movabs al,ds:0x419aeaa5d700554
   14001163e:	rex.WRXB int3 
   140011640:	dec    DWORD PTR [rbp-0x1b]
   140011643:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011644:	sar    DWORD PTR [rdx],0xf7
   140011647:	shl    BYTE PTR [rdi+rdi*4+0x16],cl
   14001164b:	mov    ch,0xcf
   14001164d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001164e:	rex fcmove st,st(6)
   140011651:	sbb    BYTE PTR [rax],0x9
   140011654:	push   0x19105c87
   140011659:	or     DWORD PTR [rcx+0x80ed470],0x3e6fb649
   140011663:	and    eax,0x2d09ab48
   140011668:	mov    ebx,0x71cfb1f0
   14001166d:	outs   dx,BYTE PTR ds:[rsi]
   14001166e:	lea    esi,[rsi+0x18d77a24]
   140011674:	sbb    esi,0x3072f400
   14001167a:	out    dx,eax
   14001167b:	(bad)  
   14001167c:	push   rdi
   14001167d:	(bad)  
   14001167e:	push   rdi
   14001167f:	xlat   BYTE PTR ds:[rbx]
   140011680:	mov    dh,ch
   140011682:	int    0x5f
   140011684:	push   0x16
   140011686:	xlat   BYTE PTR ds:[rbx]
   140011687:	(bad)  
   140011688:	mov    edx,0xf6938062
   14001168d:	ss push rcx
   14001168f:	or     eax,0x727e0210
   140011694:	xchg   ebx,eax
   140011695:	(bad)  
   140011696:	imul   ecx,DWORD PTR [rbp-0x26e873f],0xf1734d59
   1400116a0:	or     al,0x4b
   1400116a2:	(bad)  
   1400116a3:	pop    rdi
   1400116a4:	rex.R outs dx,BYTE PTR ds:[rsi]
   1400116a6:	pop    rsi
   1400116a7:	rex.RB
   1400116a8:	rex.XB or eax,0x105aaf44
   1400116ae:	repz jg 0x140011650
   1400116b1:	xchg   esi,eax
   1400116b2:	std    
   1400116b3:	(bad)  
   1400116b4:	and    eax,0x6b9ed4b8
   1400116b9:	(bad)  
   1400116ba:	pop    rax
   1400116bb:	clc    
   1400116bc:	xchg   ecx,eax
   1400116bd:	call   0x1662a4583
   1400116c2:	popf   
   1400116c3:	jge    0x14001170c
   1400116c5:	scas   al,BYTE PTR es:[edi]
   1400116c7:	out    0x9d,al
   1400116c9:	(bad)
   1400116cc:	push   rsi
   1400116cd:	jmp    0x1400116aa
   1400116cf:	add    eax,0xc46cec43
   1400116d4:	pop    rcx
   1400116d5:	sub    ah,al
   1400116d7:	or     al,0xf4
   1400116d9:	sub    ebp,DWORD PTR [rsp+rcx*8+0x6a0729d8]
   1400116e0:	xor    dh,BYTE PTR [rax]
   1400116e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400116e3:	std    
   1400116e4:	fcmovb st,st(1)
   1400116e6:	sbb    DWORD PTR [rbp+rdx*4+0xa],eax
   1400116ea:	jge    0x1400116ce
   1400116ec:	movsxd edi,DWORD PTR [rdx-0x3d11b10b]
   1400116f2:	xor    al,0xa0
   1400116f4:	(bad)  
   1400116f5:	add    bh,dh
   1400116f7:	mov    edx,0x9dfbc81c
   1400116fc:	jae    0x1400116d3
   1400116fe:	repnz icebp 
   140011700:	adc    edi,DWORD PTR [rdi-0x5b]
   140011703:	pop    rsi
   140011704:	fidivr WORD PTR [rdi+rsi*4+0x54]
   140011708:	movsxd eax,DWORD PTR [rsp+rbx*4+0x71]
   14001170c:	outs   dx,DWORD PTR ds:[rsi]
   14001170d:	rex.WR
   14001170e:	repz and BYTE PTR [rbx+r10*2],sil
   140011713:	mov    bh,BYTE PTR [rdx-0x36]
   140011716:	jo     0x1400116fb
   140011718:	sbb    dh,cl
   14001171a:	jns    0x14001178a
   14001171c:	fdivr  QWORD PTR [rsi+rcx*8+0x181785e2]
   140011723:	pop    rsi
   140011724:	mov    ecx,0x125dd300
   140011729:	push   rbp
   14001172a:	xlat   BYTE PTR ds:[rbx]
   14001172b:	or     ebx,DWORD PTR [rip+0xffffffffd739afef]        # 0x1173ac720
   140011731:	(bad)  
   140011732:	in     eax,dx
   140011733:	mov    bh,0x96
   140011735:	call   rbx
   140011737:	jmp    0x13a198741
   14001173c:	(bad)  
   14001173d:	jg     0x1400116eb
   14001173f:	rex outs dx,DWORD PTR ds:[rsi]
   140011741:	sbb    al,0x0
   140011743:	rex.B push 0x45
   140011746:	rex.X push 0x9c63f09
   14001174c:	mov    al,0x5f
   14001174e:	push   rcx
   14001174f:	adc    dl,BYTE PTR [rbp-0x28]
   140011752:	rex.RB xchg r8d,eax
   140011754:	(bad)  
   140011756:	test   al,0x48
   140011758:	in     al,dx
   140011759:	and    eax,0x6675f530
   14001175e:	or     al,0x52
   140011760:	ja     0x140011702
   140011762:	rex.WXB
   140011763:	rex.WR
   140011764:	rex.XB pop r10
   140011766:	and    eax,DWORD PTR [rax+0xe]
   140011769:	cmp    al,0x4
   14001176b:	rex.B in eax,0x7e
   14001176e:	cdq    
   14001176f:	jl     0x140011780
   140011771:	ja     0x140011754
   140011773:	mov    ah,0xa0
   140011775:	mov    ebx,0xf97a44e6
   14001177a:	jge    0x140011744
   14001177c:	and    DWORD PTR [rsi],0xfe3aa01f
   140011782:	clc    
   140011783:	movabs ds:0x2e1887f1bcb66c7f,eax
   14001178c:	and    esi,ecx
   14001178e:	rex.RXB in eax,0x81
   140011791:	sbb    al,0xfa
   140011793:	mov    eax,DWORD PTR [rbp+0x643555ff]
   140011799:	mov    esp,0x9b4c9ba
   14001179e:	rex.WR
   14001179f:	cs mov esi,0x1785cacc
   1400117a5:	lock (bad) 
   1400117a7:	scas   al,BYTE PTR es:[rdi]
   1400117a8:	movabs al,ds:0x4cffb5cd7efc6a61
   1400117b1:	std    
   1400117b2:	rex.WRB (bad) 
   1400117b4:	add    BYTE PTR [rdx+rdi*8+0xc739a9b],cl
   1400117bb:	hlt    
   1400117bc:	jae    0x14001182b
   1400117be:	cmp    dl,BYTE PTR [rax-0x54a37e90]
   1400117c4:	add    esi,DWORD PTR [rsi+rax*1+0x17e22e9a]
   1400117cb:	ret    
   1400117cc:	jbe    0x14001181b
   1400117ce:	cwde   
   1400117cf:	movabs ds:0x1abc417a0f75abf8,al
   1400117d9:	movabs eax,ds:0x8036720a44c000c8
   1400117e2:	and    al,0xf
   1400117e4:	and    al,0xc1
   1400117e6:	mov    BYTE PTR [rbp-0x692fce65],0xf
   1400117ed:	and    BYTE PTR [rdx],ah
   1400117ef:	sub    al,0x48
   1400117f1:	clc    
   1400117f2:	ror    BYTE PTR [rdi],1
   1400117f4:	leave  
   1400117f5:	mov    eax,DWORD PTR [rdi-0x48]
   1400117f8:	retf   
   1400117f9:	movabs ds:0xd00b72abdc00de80,al
   140011802:	out    dx,eax
   140011803:	movabs eax,ds:0x2ff3657acefc1f47
   14001180c:	call   0x18be81d89
   140011811:	sbb    eax,ecx
   140011813:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011814:	mov    BYTE PTR [rsi],al
   140011816:	(bad)  
   140011817:	sub    ch,BYTE PTR [rax-0x60]
   14001181a:	(bad)  
   14001181b:	mov    cl,0xbf
   14001181e:	retf   
   14001181f:	(bad)  
   140011820:	jns    0x14001183f
   140011822:	(bad)  
   140011823:	sbb    BYTE PTR [rax-0x1d],dh
   140011826:	out    0xe,al
   140011828:	movabs ds:0x7e07173e5f19270b,eax
   140011831:	adc    al,BYTE PTR [rbx]
   140011833:	add    eax,0x17f81a87
   140011838:	ret    
   140011839:	push   QWORD PTR [rax+rbp*8+0x69fd0e47]
   140011840:	cmp    eax,0x7808aa77
   140011845:	xlat   BYTE PTR ds:[rbx]
   140011846:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011847:	add    BYTE PTR [rsi],bh
   140011849:	(bad)  
   14001184a:	fstp   QWORD PTR [rdx-0x26]
   14001184d:	scas   eax,DWORD PTR es:[rdi]
   14001184e:	test   al,0x20
   140011850:	xor    ebx,DWORD PTR [r9]
   140011853:	sub    dh,ch
   140011855:	in     al,dx
   140011856:	or     BYTE PTR [rsi],0x6a
   140011859:	and    BYTE PTR [rdi-0x2af312fb],dl
   14001185f:	out    0x1,al
   140011861:	(bad)  
   140011862:	or     eax,0xf39af383
   140011867:	sti    
   140011868:	rex.W (bad) 
   14001186a:	in     al,dx
   14001186b:	xor    BYTE PTR [rax],al
   14001186d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001186e:	push   rbp
   14001186f:	mov    ch,BYTE PTR [rax+0x13]
   140011872:	sub    al,0x9a
   140011874:	rex.B (bad) 
   140011876:	jl     0x1400118c8
   140011878:	(bad)  
   140011879:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001187a:	(bad)  
   14001187b:	movabs eax,ds:0x97a24e2bb80a26bb
   140011884:	fbld   TBYTE PTR [rbx+0x2b2b9eb4]
   14001188a:	push   rcx
   14001188c:	(bad)  
   14001188d:	mov    ?,WORD PTR [rbp-0x726a653]
   140011893:	fcmovne st,st(5)
   140011895:	loop   0x140011911
   140011897:	jmp    0x14e557a26
   14001189c:	xrelease mov BYTE PTR [rdx+0x84feeb1],ch
   1400118a3:	call   0xc691e314
   1400118a8:	rol    esi,0x11
   1400118ab:	(bad)  
   1400118ac:	es mov al,0x7b
   1400118af:	stc    
   1400118b0:	add    ch,BYTE PTR [rbx]
   1400118b2:	(bad)  
   1400118b3:	pop    rdi
   1400118b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400118b5:	mov    eax,0xd4c2097e
   1400118ba:	rex mov ebx,0xda17a888
   1400118c0:	add    edi,edi
   1400118c2:	cmp    ah,ch
   1400118c4:	mov    edi,0xc1d7fddc
   1400118c9:	add    edx,ebx
   1400118cb:	xor    al,0xa0
   1400118cd:	pop    rbp
   1400118ce:	mov    ebx,0x1028b2f
   1400118d3:	and    al,0x58
   1400118d5:	sub    DWORD PTR [rax-0x25],edx
   1400118d8:	imul   eax,eax,0x9ec78f29
   1400118de:	xchg   ebx,eax
   1400118df:	rex.WRX adc BYTE PTR [rax+0x24e280ca],0xf2
   1400118e7:	xchg   DWORD PTR [rax+rcx*4],ebx
   1400118ea:	jae    0x140011874
   1400118ec:	ja     0x140011924
   1400118ee:	jns    0x140011888
   1400118f0:	fcomp  QWORD PTR [rsi]
   1400118f2:	pushf  
   1400118f3:	pop    rbp
   1400118f5:	sub    dh,al
   1400118f7:	sub    ah,BYTE PTR [rsi+0x74]
   1400118fa:	sub    al,0x9a
   1400118fc:	adc    DWORD PTR [rax+0x5d],esp
   1400118ff:	data16 lahf 
   140011901:	mov    al,0x99
   140011903:	xor    DWORD PTR [rdi+0xd],0x37a027
   14001190a:	imul   DWORD PTR [rsi+0x1e562f24]
   140011910:	ds mov edx,0xdb5bbf79
   140011916:	cld    
   140011917:	cmp    edx,DWORD PTR [rbx-0x5164bc5b]
   14001191d:	sbb    al,0x76
   14001191f:	pop    rax
   140011920:	cmp    BYTE PTR [rcx-0x5ce5581c],dh
   140011926:	sbb    BYTE PTR [rdx+0x1b],0xfc
   14001192a:	in     al,0x26
   14001192c:	add    DWORD PTR [rbp+0x4b0b8615],0xffffffdc
   140011933:	fcomp  st(3)
   140011935:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011936:	mov    eax,0x178b02f0
   14001193b:	iret   
   14001193c:	and    BYTE PTR [rbx-0x4f],bh
   14001193f:	jmp    0x140011990
   140011941:	int    0x68
   140011943:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011944:	(bad)  
   140011945:	pop    rcx
   140011946:	cmp    edi,ecx
   140011948:	xchg   DWORD PTR [rdi+rdx*2-0x7113d6f5],ebx
   14001194f:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011951:	cs mov ebp,0xa9700954
   140011957:	fs xchg edi,eax
   140011959:	fstp   TBYTE PTR [rsi-0x13]
   14001195c:	push   rdi
   14001195d:	add    BYTE PTR [rsi+0x1],ah
   140011960:	(bad)  
   140011961:	out    0xdb,al
   140011963:	and    ebx,0xffa724db
   140011969:	fstp   QWORD PTR [rcx]
   14001196b:	and    DWORD PTR [rax+0x4f],esp
   14001196e:	rex.WX add al,0x2
   140011971:	(bad)  
   140011972:	adc    DWORD PTR [rdx+rbx*8-0x76a9017a],0x9a871d48
   14001197d:	mov    bh,0xd4
   14001197f:	out    dx,al
   140011980:	cmp    BYTE PTR [rbp-0x295e3e1],cl
   140011986:	(bad)  
   140011987:	(bad)  
   140011988:	sub    ah,BYTE PTR [rdi+0x4a2ee11f]
   14001198e:	add    edi,DWORD PTR [rdx+0x3]
   140011991:	jo     0x140011942
   140011993:	leave  
   140011994:	add    esp,eax
   140011996:	mov    edi,0x78d1caac
   14001199b:	jae    0x140011990
   14001199d:	outs   dx,DWORD PTR ds:[rsi]
   14001199e:	rex.WRX xchg rdi,rax
   1400119a0:	(bad)  
   1400119a2:	jmp    0xcae1252d
   1400119a7:	in     al,dx
   1400119a8:	pop    rbp
   1400119a9:	movabs ds:0x434206877c9887f2,eax
   1400119b2:	push   rbp
   1400119b3:	sbb    QWORD PTR [r12+r11*1+0x21],r13
   1400119b8:	mov    BYTE PTR [rbx-0x19],ah
   1400119bb:	rol    BYTE PTR [rip+0xffffffff9d7fced6],cl        # 0xdd80e897
   1400119c1:	(bad)  
   1400119c2:	(bad)  
   1400119c3:	(bad)  
   1400119c4:	ror    BYTE PTR [rsi+riz*8-0x16],cl
   1400119c8:	(bad)  
   1400119c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400119ca:	rex.W pushf 
   1400119cc:	stc    
   1400119cd:	lahf   
   1400119ce:	out    0xfe,eax
   1400119d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400119d1:	mov    dl,0x5a
   1400119d3:	rex.RXB (bad) 
   1400119d5:	mov    ebx,0xfd2a4151
   1400119da:	fsincos 
   1400119dc:	mov    esp,0xd7ba3693
   1400119e1:	fcom   DWORD PTR [rcx+0x2c]
   1400119e4:	add    DWORD PTR [rsp+rax*8],esp
   1400119e7:	xor    al,0x20
   1400119e9:	(bad)  
   1400119ea:	jae    0x140011a1a
   1400119ec:	sbb    al,BYTE PTR [rbx]
   1400119ee:	lea    esp,[rax+riz*4+0x7692b8a4]
   1400119f5:	xchg   edx,eax
   1400119f6:	sub    eax,DWORD PTR [rcx]
   1400119f8:	leave  
   1400119f9:	(bad)
   1400119fc:	(bad)  
   1400119fd:	movabs ds:0xc8931171080f2c6,eax
   140011a06:	sub    BYTE PTR [rdx+0x5a],ch
   140011a09:	xor    r13d,DWORD PTR ds:[rax+0x69]
   140011a0e:	lods   eax,DWORD PTR ds:[rsi]
   140011a0f:	ret    0xc7e3
   140011a12:	fyl2xp1 
   140011a14:	and    al,0x77
   140011a16:	sar    DWORD PTR [rax+rax*8+0x4bdc00de],1
   140011a1d:	jb     0x140011a2a
   140011a1f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011a20:	(bad)  
   140011a22:	outs   dx,DWORD PTR ds:[rsi]
   140011a23:	js     0x140011a15
   140011a25:	not    DWORD PTR [edi-0xe7982f1]
   140011a2c:	or     ch,dl
   140011a2e:	push   rdx
   140011a2f:	test   DWORD PTR [rsp+rsi*8-0x4],0x343e034e
   140011a37:	mov    eax,0xdc5010d0
   140011a3c:	je     0x1400119cd
   140011a3e:	push   rcx
   140011a3f:	pop    rcx
   140011a40:	xor    BYTE PTR [rax-0x27],bl
   140011a43:	loopne 0x140011a2b
   140011a45:	fs add bl,bl
   140011a48:	(bad)  
   140011a49:	mov    dl,0xbc
   140011a4b:	jge    0x140011a53
   140011a4d:	mov    bh,0x7b
   140011a4f:	lea    esp,[rax+0x6e154c75]
   140011a55:	push   rcx
   140011a56:	cli    
   140011a57:	mov    esp,ebp
   140011a59:	mov    edx,0xfbd660a4
   140011a5e:	rex.WRXB and r12b,r8b
   140011a61:	je     0x140011a4a
   140011a63:	add    BYTE PTR [rbx+rbp*8-0x164bdfe],dh
   140011a6a:	addr32 cmp eax,0xaa4d020b
   140011a70:	add    al,0xa4
   140011a72:	jbe    0x140011ad4
   140011a74:	add    ecx,DWORD PTR [rax]
   140011a76:	xchg   ebp,eax
   140011a77:	mov    BYTE PTR [rdi],cl
   140011a79:	pop    rax
   140011a7a:	retf   0xfe42
   140011a7d:	cwde   
   140011a7e:	in     al,0xc5
   140011a80:	test   ch,al
   140011a82:	rex.WB
   140011a83:	rex.WRX or rax,r14
   140011a86:	or     DWORD PTR [rdi+0x48],ebp
   140011a89:	mov    ecx,0x63e05abf
   140011a8e:	mov    eax,0xd7127c47
   140011a93:	imul   edi,DWORD PTR [rdx+rdx*1],0x7d985611
   140011a9a:	out    0x1,al
   140011a9c:	test   BYTE PTR [rsi-0x5fb9da24],0x37
   140011aa3:	add    bh,dh
   140011aa5:	mov    bh,BYTE PTR [rdx+rdx*1+0x7c1f2ff1]
   140011aac:	jrcxz  0x140011a71
   140011aae:	(bad)  
   140011aaf:	xor    BYTE PTR [rbx+0x39],bl
   140011ab2:	hlt    
   140011ab3:	xchg   ebx,eax
   140011ab4:	mov    edx,0xe8f88ab0
   140011ab9:	stc    
   140011aba:	push   rbp
   140011abb:	xchg   ebp,eax
   140011abc:	es xor al,0x88
   140011abf:	(bad)  
   140011ac0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011ac1:	imul   edx,eax,0x8109a1a6
   140011ac7:	adc    BYTE PTR [rdx],al
   140011ac9:	(bad)  
   140011aca:	dec    BYTE PTR [rsi]
   140011acc:	ret    
   140011acd:	mov    ch,0x43
   140011acf:	cmp    BYTE PTR [rdi+0x72],bl
   140011ad2:	jrcxz  0x140011a9e
   140011ad4:	and    eax,0xa49c2e56
   140011ad9:	mov    edx,0xfb660172
   140011ade:	and    ch,0xd2
   140011ae1:	or     al,BYTE PTR [rip+0xffffffffd37fa162]        # 0x11380bc49
   140011ae7:	xchg   esi,eax
   140011ae8:	stc    
   140011ae9:	ins    BYTE PTR es:[rdi],dx
   140011aea:	fldcw  WORD PTR [rdi-0x59]
   140011aed:	ins    DWORD PTR es:[rdi],dx
   140011aee:	clc    
   140011aef:	(bad)  
   140011af0:	cmp    esi,edi
   140011af2:	movabs ds:0xe5da42a5cce567d2,al
   140011afb:	(bad)  
   140011afc:	push   rcx
   140011afd:	push   rbx
   140011afe:	(bad)  
   140011aff:	sbb    BYTE PTR [rip+0xffffffff83440750],al        # 0xc3452255
   140011b05:	jmp    0x122eb3bb4
   140011b0a:	jo     0x140011b1b
   140011b0c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b0d:	adc    DWORD PTR [rbx],ebp
   140011b0f:	push   rax
   140011b10:	repnz rcl BYTE PTR [rax+0x658801c8],1
   140011b17:	mov    r13b,0x4e
   140011b1a:	(bad)  
   140011b1b:	jno    0x140011afd
   140011b1d:	mov    al,BYTE PTR [rdx+rsi*8-0x353c4b39]
   140011b24:	jge    0x140011b53
   140011b26:	rex.WRXB add QWORD PTR [r11+0x27],r9
   140011b2a:	push   0x1500cb69
   140011b2f:	loope  0x140011ada
   140011b31:	lahf   
   140011b32:	in     al,0x85
   140011b34:	mov    bh,0xd1
   140011b36:	pop    rbp
   140011b37:	cmp    esp,eax
   140011b39:	(bad)  
   140011b3a:	rex.WRX add r15,QWORD PTR [rdx+0x3]
   140011b3e:	jo     0x140011b6f
   140011b40:	enter  0xca2d,0x7d
   140011b44:	(bad)  
   140011b46:	jl     0x140011b27
   140011b48:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b49:	jmp    0x140011ae0
   140011b4b:	int    0xbf
   140011b4d:	pop    rdx
   140011b4e:	(bad)  
   140011b4f:	lods   al,BYTE PTR ds:[rsi]
   140011b50:	jns    0x140011ba9
   140011b52:	or     al,0x50
   140011b54:	jno    0x140011b8c
   140011b56:	adc    al,0xc3
   140011b58:	cmp    al,0x7e
   140011b5a:	push   rbx
   140011b5b:	xor    ecx,DWORD PTR [rbx]
   140011b5d:	xor    eax,0xd406960d
   140011b62:	adc    eax,esi
   140011b64:	add    ah,ch
   140011b66:	ficom  DWORD PTR [rcx]
   140011b68:	mul    BYTE PTR [rsi+0x33]
   140011b6b:	(bad)  
   140011b6c:	mov    ebp,DWORD PTR [rdi]
   140011b6e:	mov    dl,0xb6
   140011b70:	jne    0x140011b8c
   140011b72:	mov    edi,0x66108573
   140011b77:	sbb    DWORD PTR [rcx],esi
   140011b79:	ja     0x140011b03
   140011b7b:	sbb    DWORD PTR [rax+0x2e812310],eax
   140011b81:	out    0x3e,eax
   140011b83:	push   rdi
   140011b84:	add    al,cl
   140011b86:	or     eax,0x814ace40
   140011b8b:	fidiv  WORD PTR [rdi-0x2ad14353]
   140011b91:	repz add dl,BYTE PTR [rcx+0x1512a3e8]
   140011b98:	cmp    al,BYTE PTR [rax]
   140011b9a:	test   eax,0x21141814
   140011b9f:	add    BYTE PTR [rcx],ch
   140011ba1:	push   rbx
   140011ba2:	(bad)  
   140011ba3:	pop    rax
   140011ba4:	add    eax,0x7021
   140011ba9:	enter  0x8d51,0x66
   140011bad:	rex.WX mov al,0xe4
   140011bb0:	push   rcx
   140011bb1:	movsxd edx,DWORD PTR [rcx-0x7]
   140011bb4:	xor    esp,DWORD PTR [rip+0x16c1b490]        # 0x156c2d04a
   140011bba:	(bad)  
   140011bbb:	mov    bl,bh
   140011bbd:	add    ah,BYTE PTR [rdx+0x34]
   140011bc0:	and    BYTE PTR [rdx],dh
   140011bc2:	cmp    al,cl
   140011bc4:	fidiv  WORD PTR [rbx-0x24]
   140011bc7:	and    eax,0x37b4343
   140011bcc:	jo     0x140011b85
   140011bce:	retf   
   140011bcf:	sub    eax,0xf23ff3c
   140011bd4:	(bad)  
   140011bd5:	stc    
   140011bd6:	push   0xffffffffabfc3b58
   140011bdb:	mov    bl,0x85
   140011bdd:	cmc    
   140011bde:	add    eax,0x63510d57
   140011be3:	cli    
   140011be4:	mov    DWORD PTR [rsi],eax
   140011be6:	mov    ah,0x89
   140011be8:	mov    ch,0x7e
   140011bea:	(bad)  
   140011beb:	call   0xff897955
   140011bf0:	stos   DWORD PTR es:[rdi],eax
   140011bf1:	mov    ebp,0x1b2b061d
   140011bf6:	adc    al,0xc3
   140011bf8:	adc    edi,edx
   140011bfa:	scas   eax,DWORD PTR es:[rdi]
   140011bfb:	pop    rdi
   140011bfc:	(bad)  
   140011bfd:	icebp  
   140011bfe:	loop   0x140011c29
   140011c00:	(bad)  
   140011c01:	xchg   edi,eax
   140011c02:	iret   
   140011c03:	rex.RB out dx,eax
   140011c05:	(bad)  
   140011c06:	push   0xfffffffffffffff9
   140011c08:	jb     0x140011c24
   140011c0a:	stc    
   140011c0b:	add    eax,0xba53793e
   140011c10:	rex.W jp 0x140011bca
   140011c13:	cld    
   140011c14:	xchg   edi,eax
   140011c15:	adc    BYTE PTR [rcx+rcx*8-0x7c],bh
   140011c19:	and    BYTE PTR [rdi],ch
   140011c1b:	(bad)  
   140011c1c:	mov    BYTE PTR [rbx-0x21bdbf2f],cl
   140011c22:	(bad)  
   140011c23:	sar    dh,1
   140011c25:	(bad)  
   140011c26:	int    0x3f
   140011c28:	and    DWORD PTR [rdx],edx
   140011c2a:	(bad)  
   140011c2b:	pushf  
   140011c2c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011c2d:	push   0xffffffffe4fe7a21
   140011c32:	mov    cl,0x45
   140011c34:	xor    DWORD PTR [rbp+0xebbcfb5],eax
   140011c3a:	clc    
   140011c3b:	mov    bl,BYTE PTR [edi+0x1a5c04fa]
   140011c42:	cmp    ah,dl
   140011c44:	pop    rsi
   140011c45:	fst    DWORD PTR [rip+0xffffffffa6998c98]        # 0xe69aa8e3
   140011c4b:	mov    es,ecx
   140011c4d:	xchg   esp,eax
   140011c4e:	sub    ch,BYTE PTR [rax-0x580ad74e]
   140011c54:	(bad)  
   140011c55:	retf   0x12f6
   140011c58:	ja     0x140011c5b
   140011c5a:	xor    eax,0x770037b8
   140011c5f:	mov    bl,0x1c
   140011c61:	push   0x37aa05ed
   140011c66:	sahf   
   140011c67:	cmp    ah,dh
   140011c69:	fldenv [rsi-0x3]
   140011c6c:	call   0x15f300a20
   140011c71:	fidiv  WORD PTR [rax-0x2b]
   140011c74:	or     BYTE PTR [rcx],dl
   140011c76:	(bad)  
   140011c77:	adc    eax,0x535c0427
   140011c7c:	adc    eax,DWORD PTR [rdx+0x43]
   140011c7f:	rex.W test BYTE PTR [rdi],bl
   140011c82:	sti    
   140011c83:	or     DWORD PTR [rbp-0x33],esi
   140011c86:	cmp    BYTE PTR [rcx+rbp*1+0x37],cl
   140011c8a:	mov    ?,WORD PTR [rcx]
   140011c8c:	popf   
   140011c8d:	(bad)  
   140011c8e:	rex.WR mov dil,0x5e
   140011c91:	(bad)  
   140011c92:	cmc    
   140011c93:	ret    0x8a69
   140011c96:	popf   
   140011c97:	sub    ebp,DWORD PTR [rax-0x68]
   140011c9a:	mov    ch,0xb5
   140011c9c:	cld    
   140011c9d:	adc    al,0xfe
   140011c9f:	movsxd edi,DWORD PTR [rbp-0x1]
   140011ca2:	je     0x140011c6e
   140011ca4:	imul   ecx,ecx,0xfffffff3
   140011ca7:	shl    DWORD PTR [rsi-0x7dec5200],cl
   140011cad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011cae:	mov    al,0x3f
   140011cb0:	std    
   140011cb1:	(bad)  
   140011cb2:	iret   
   140011cb3:	gs and al,0xde
   140011cb6:	retf   0x91fb
   140011cb9:	or     eax,DWORD PTR [rax]
   140011cbb:	(bad)  
   140011cbc:	rex.WRB xor al,0x6
   140011cbf:	movabs ds:0x6400386a0806f5a4,al
   140011cc8:	sub    al,0x5f
   140011cca:	and    al,0x56
   140011ccc:	add    BYTE PTR [rdi+riz*8-0x16],ch
   140011cd0:	(bad)  
   140011cd1:	pop    QWORD PTR [rax-0x345f48a8]
   140011cd7:	and    eax,0x951c949
   140011cdc:	leave  
   140011cdd:	and    BYTE PTR [rdx-0x5a],al
   140011ce0:	adc    al,0x58
   140011ce2:	xchg   esi,eax
   140011ce3:	add    BYTE PTR [rax],0x15
   140011ce6:	int    0x9b
   140011ce8:	mov    esi,0x34a42e4b
   140011ced:	loopne 0x140011c7d
   140011cef:	scas   al,BYTE PTR es:[rdi]
   140011cf0:	(bad)  
   140011cf1:	adc    al,0xb7
   140011cf3:	sti    
   140011cf4:	add    BYTE PTR [rdx+0x79],bh
   140011cf7:	or     eax,0xfe7595e4
   140011cfc:	add    ch,BYTE PTR [rax]
   140011cfe:	fcomip st,st(4)
   140011d00:	loopne 0x140011ca3
   140011d02:	(bad)  
   140011d03:	ficomp DWORD PTR [rdi+0x39]
   140011d06:	cld    
   140011d07:	push   rdi
   140011d08:	ja     0x140011ca1
   140011d0a:	jg     0x1b9c3528c
   140011d10:	outs   dx,DWORD PTR ds:[rsi]
   140011d11:	xor    al,0xdf
   140011d13:	add    BYTE PTR [rsi+rax*4-0x247bb260],0x43
   140011d1b:	rex
   140011d1c:	rex.X
   140011d1d:	rex push rcx
   140011d1f:	data16 or ch,dl
   140011d22:	fs xchg ecx,esp
   140011d25:	js     0x140011cb0
   140011d27:	jb     0x140011d9a
   140011d29:	cdq    
   140011d2a:	in     eax,dx
   140011d2b:	sub    edx,DWORD PTR [rdi+0x18]
   140011d2e:	outs   dx,DWORD PTR ds:[rsi]
   140011d2f:	mov    ebp,0x97a5c2c0
   140011d34:	(bad)  
   140011d35:	(bad)  
   140011d36:	lods   eax,DWORD PTR ds:[rsi]
   140011d37:	cmc    
   140011d38:	xlat   BYTE PTR ds:[rbx]
   140011d39:	push   rdx
   140011d3a:	jg     0x140011d1f
   140011d3c:	loopne 0x140011ccd
   140011d3e:	and    BYTE PTR [rbx],0x32
   140011d41:	lock push rdx
   140011d43:	mov    bh,0x5f
   140011d45:	and    bl,al
   140011d47:	mov    ah,0xbd
   140011d49:	add    BYTE PTR [rdx-0x618b7e73],dl
   140011d4f:	(bad)  
   140011d50:	pop    rsp
   140011d51:	cmp    ebx,DWORD PTR [rsp+rax*1]
   140011d54:	jrcxz  0x140011d76
   140011d56:	rex.RX xchg esp,eax
   140011d58:	(bad)  
   140011d59:	(bad)  
   140011d5a:	and    esp,DWORD PTR [rcx+rdx*2+0x1d5c1a8]
   140011d61:	sub    eax,0x15107a63
   140011d66:	(bad)  
   140011d67:	pop    rax
   140011d68:	jl     0x140011cf7
   140011d6a:	push   rbp
   140011d6b:	or     BYTE PTR [rdx-0x49dd7cb3],bh
   140011d71:	mov    dh,0xa0
   140011d73:	in     eax,dx
   140011d74:	fild   DWORD PTR [rbx-0x563fcb5a]
   140011d7a:	lods   eax,DWORD PTR ds:[rsi]
   140011d7b:	cmp    edx,DWORD PTR [rax]
   140011d7d:	adc    bl,BYTE PTR [rax+rcx*4-0x56f1bddd]
   140011d84:	fnstsw WORD PTR [rax]
   140011d86:	test   DWORD PTR [rdx],0x78508064
   140011d8c:	sbb    ch,0xcf
   140011d8f:	add    edi,edi
   140011d91:	mov    bh,BYTE PTR [rsi]
   140011d93:	add    ch,al
   140011d95:	in     eax,0x75
   140011d97:	and    eax,0x1f860b7
   140011d9c:	(bad)  
   140011d9d:	xor    eax,edi
   140011d9f:	push   rdi
   140011da0:	jmp    rdx
   140011da2:	(bad)  
   140011da3:	(bad)  
   140011da4:	loope  0x140011d65
   140011da6:	jns    0x140011e1b
   140011da8:	cmc    
   140011da9:	enter  0x648,0x63
   140011dad:	pushf  
   140011dae:	repz add al,0x8d
   140011db1:	(bad)  
   140011db2:	jg     0x140011dbc
   140011db4:	or     eax,0xafcf468d
   140011db9:	rex.WRB
   140011dba:	shl    DWORD PTR [r12+r14*1],cl
   140011dbe:	movabs eax,ds:0x7dd30b0d340d3421
   140011dc7:	retf   0x63cd
   140011dca:	(bad)  
   140011dcb:	rex.B cdq 
   140011dcd:	pop    rsp
   140011dce:	ds (bad) 
   140011dd0:	(bad)  
   140011dd1:	(bad)  
   140011dd2:	sub    esp,edi
   140011dd4:	mov    ch,0xd8
   140011dd6:	repz (bad) 
   140011dd8:	mov    ah,0x4a
   140011dda:	cmp    bh,ah
   140011ddc:	std    
   140011ddd:	and    eax,0xea4b7f29
   140011de2:	leave  
   140011de3:	sub    DWORD PTR [rax+0x17],eax
   140011de6:	xchg   ebp,eax
   140011de7:	mov    bh,0xa
   140011de9:	and    al,BYTE PTR [rbx]
   140011dec:	test   eax,0xb6e7afb6
   140011df1:	call   QWORD PTR [rdi+rdi*8-0x7d7ff5a5]
   140011df8:	(bad)  
   140011df9:	add    DWORD PTR [rcx-0x7d2f0ce5],ebp
   140011dff:	rol    DWORD PTR [rax+0x451b406b],cl
   140011e05:	rex.XB lods al,BYTE PTR ds:[rsi]
   140011e07:	add    al,0x24
   140011e09:	test   DWORD PTR [rsi],esi
   140011e0b:	jbe    0x140011e5c
   140011e0d:	mov    dh,0x42
   140011e0f:	cmp    edx,eax
   140011e11:	lock imul edi,DWORD PTR [rdi+0x730ebb92],0xcf3b6292
   140011e1c:	xor    eax,DWORD PTR [rcx*4+0x44649420]
   140011e23:	std    
   140011e24:	sub    DWORD PTR [rdi],0x3b836e70
   140011e2a:	mov    esp,0x801bd01a
   140011e2f:	mov    ebx,0xe6595e49
   140011e34:	stos   DWORD PTR es:[rdi],eax
   140011e35:	mov    cs,WORD PTR [rdi+0x1cb7d1dd]
   140011e3b:	pop    rdi
   140011e3c:	(bad)  
   140011e3d:	cmc    
   140011e3e:	popf   
   140011e3f:	cmc    
   140011e40:	sti    
   140011e41:	jle    0x140011ead
   140011e43:	outs   dx,DWORD PTR ds:[rsi]
   140011e44:	stc    
   140011e45:	mov    BYTE PTR [rbx-0x50],ah
   140011e48:	add    dl,ah
   140011e4a:	or     BYTE PTR [rdx],dl
   140011e4c:	xchg   ebp,eax
   140011e4d:	test   BYTE PTR es:[rdx],bl
   140011e50:	rex.X or eax,0x8ccd0d4d
   140011e56:	rcl    ah,1
   140011e58:	mov    eax,0x8d43e350
   140011e5d:	xlat   BYTE PTR ds:[rbx]
   140011e5e:	xchg   cl,dl
   140011e60:	xchg   DWORD PTR fs:[rdx+0x38],esi
   140011e64:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e65:	pop    rax
   140011e66:	fucom  st(4)
   140011e68:	(bad)  
   140011e69:	out    dx,al
   140011e6a:	cs (bad) 
   140011e6c:	(bad)  
   140011e6d:	imul   edx,DWORD PTR [rsi],0xf6465fb7
   140011e73:	ja     0x140011e5d
   140011e75:	mov    dh,0xe0
   140011e77:	(bad)  
   140011e78:	lock lahf 
   140011e7a:	pop    rax
   140011e7b:	cmp    cl,ah
   140011e7d:	rex.WXB jle 0x140011e37
   140011e80:	cmp    dl,BYTE PTR [rbx+0x22b1ffb8]
   140011e86:	loopne 0x140011e6e
   140011e88:	sub    al,al
   140011e8a:	repz cmc 
   140011e8c:	jmp    FWORD PTR [rsi+0x69]
   140011e8f:	mov    cs,WORD PTR [rsi+0x62]
   140011e92:	bndldx (bad),[rbp+rax*1-0x6ff5d2fe]
   140011e9a:	mov    edx,0x30182681
   140011e9f:	sbb    BYTE PTR [rdx-0x69],dh
   140011ea2:	(bad)  
   140011ea3:	add    bl,BYTE PTR [rip+0xffffffffb6c3bcdb]        # 0xf6c4db84
   140011ea9:	xchg   ebx,eax
   140011eaa:	rex.X adc DWORD PTR [rcx],esp
   140011ead:	iret   
   140011eae:	or     al,0xec
   140011eb0:	jb     0x140011ec3
   140011eb2:	cmp    r8b,BYTE PTR [rsi]
   140011eb5:	and    esp,0xfffffff5
   140011eb8:	movabs eax,ds:0x98fe1e10a0141a5b
   140011ec1:	ins    BYTE PTR es:[rdi],dx
   140011ec2:	mov    edi,0x700e2e93
   140011ec7:	(bad)  
   140011ec8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011ec9:	add    DWORD PTR [rbp+0xa],edi
   140011ecc:	jo     0x140011f05
   140011ece:	enter  0xc87c,0x9f
   140011ed2:	cmp    eax,0xc5abe3ff
   140011ed7:	xchg   ebx,eax
   140011ed8:	ret    
   140011ed9:	vmaxpd ymm7,ymm15,YMMWORD PTR [rcx+0x5dfc71be]
   140011ee1:	(bad)  
   140011ee2:	xchg   edi,eax
   140011ee3:	mov    rbx,db0
   140011ee6:	xor    DWORD PTR [rbp+0x774c7114],eax
   140011eec:	or     ah,dl
   140011eee:	and    DWORD PTR [rax],esp
   140011ef0:	movabs eax,ds:0x2c750ca6a6bf416e
   140011ef9:	add    DWORD PTR [rdx],ebp
   140011efb:	xor    al,0x4e
   140011efd:	sbb    ah,cl
   140011eff:	neg    BYTE PTR [rax]
   140011f01:	sbb    al,0x7b
   140011f03:	and    eax,DWORD PTR [rcx]
   140011f05:	(bad)  
   140011f06:	out    dx,al
   140011f07:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011f08:	repz sbb al,0xde
   140011f0b:	cmp    cl,BYTE PTR [rcx+0x79]
   140011f0e:	in     eax,dx
   140011f0f:	and    dh,BYTE PTR [rbx+rdx*1]
   140011f12:	xor    BYTE PTR [rsi+rbx*2],dl
   140011f15:	push   rsp
   140011f16:	sub    DWORD PTR [rsi+rcx*1],esp
   140011f19:	(bad)  
   140011f1a:	lock movabs ds:0x8c4476af275ccb6d,al
   140011f24:	and    BYTE PTR [rcx+0x5824bcf6],bh
   140011f2a:	mov    dl,BYTE PTR [rax]
   140011f2c:	and    r11b,BYTE PTR [rax+0x1401c1d7]
   140011f33:	(bad)  
   140011f34:	sahf   
   140011f35:	scas   eax,DWORD PTR es:[rdi]
   140011f36:	push   rcx
   140011f37:	stc    
   140011f38:	and    eax,0x2140a560
   140011f3d:	add    al,0x45
   140011f3f:	(bad)  
   140011f40:	push   0xffffffff93319268
   140011f45:	rex.RX rcl DWORD PTR [rax],1
   140011f48:	movabs ds:0x8f62f2e5b07ab884,eax
   140011f51:	push   rbx
   140011f52:	xchg   edi,eax
   140011f53:	movabs al,ds:0x52da02fac5070317
   140011f5c:	gs and cl,BYTE PTR cs:[rax-0x3e]
   140011f61:	adc    cl,al
   140011f63:	(bad)  
   140011f64:	ret    0x8d48
   140011f67:	(bad)  
   140011f68:	or     eax,0xfb28fe87
   140011f6d:	lahf   
   140011f6e:	add    al,0xfe
   140011f70:	and    eax,0xe53b330
   140011f75:	scas   eax,DWORD PTR es:[rdi]
   140011f76:	jmp    0x1881c1c72
   140011f7b:	(bad)  
   140011f7c:	add    esp,ebx
   140011f7e:	jmp    0xff91ea75
   140011f83:	add    BYTE PTR [rsi],al
   140011f85:	outs   dx,DWORD PTR ds:[rsi]
   140011f86:	pop    rsi
   140011f87:	jne    0x140011f28
   140011f89:	(bad)  
   140011f8a:	lods   al,BYTE PTR ds:[rsi]
   140011f8b:	lods   al,BYTE PTR ds:[rsi]
   140011f8c:	std    
   140011f8d:	xchg   ebx,eax
   140011f8e:	stos   DWORD PTR es:[rdi],eax
   140011f8f:	fwait
   140011f90:	(bad)  
   140011f91:	fidiv  WORD PTR [rbp+0x6047cb7]
   140011f97:	mov    edi,DWORD PTR [rax]
   140011f99:	jecxz  0x140011f58
   140011f9c:	rex.XB mov BYTE PTR [r13-0x2cbcaf02],sil
   140011fa3:	(bad)  
   140011fa4:	sub    BYTE PTR [rax+0x3334529e],ah
   140011faa:	jl     0x140011fdf
   140011fac:	rex.XB (bad) 
   140011fae:	sbb    dl,ch
   140011fb0:	sbb    BYTE PTR [rdi+0x354184e],0x8a
   140011fb7:	cmc    
   140011fb8:	movabs ds:0x89b69e2fe2eeecec,eax
   140011fc1:	(bad)  
   140011fc2:	xlat   BYTE PTR ds:[rbx]
   140011fc3:	push   rcx
   140011fc4:	lods   eax,DWORD PTR ds:[rsi]
   140011fc5:	xchg   r9,rax
   140011fc7:	mov    dl,0x23
   140011fc9:	mov    dh,0xfd
   140011fcb:	(bad)  
   140011fcc:	movabs ds:0xee5b3cb5c4d42378,al
   140011fd5:	jg     0x140011f71
   140011fd7:	(bad)  
   140011fd8:	fwait
   140011fd9:	xor    BYTE PTR [rsi+0x3675c7ae],dh
   140011fdf:	or     DWORD PTR [rax-0x32],edi
   140011fe2:	imul   ecx,DWORD PTR [rbx-0x59],0x18672a
   140011fe9:	sub    ch,BYTE PTR [rax+0x50]
   140011fec:	pop    rsp
   140011fed:	nop
   140011fee:	clc    
   140011fef:	mov    eax,0xf809a451
   140011ff4:	push   rax
   140011ff5:	jrcxz  0x140012061
   140011ff7:	sbb    r12d,DWORD PTR [r9]
   140011ffa:	test   DWORD PTR [rcx],0xe483ed29
   140012000:	fldcw  WORD PTR [rcx-0x73]
   140012003:	(bad)  
   140012004:	cmp    BYTE PTR [rdi],dl
   140012006:	lea    eax,[rax-0x3bd81d7]
   14001200c:	mov    edx,0x1ded8578
   140012011:	adc    DWORD PTR [rbx],esp
   140012013:	adc    esp,DWORD PTR [rcx+0x29]
   140012016:	test   ch,al
   140012018:	add    eax,0xf73cda0b
   14001201d:	sub    ecx,ebx
   14001201f:	pop    rdx
   140012020:	movabs eax,ds:0x770037a4c3b809cb
   140012029:	stos   BYTE PTR es:[rdi],al
   14001202a:	mov    esp,0x56e547fd
   14001202f:	int3   
   140012030:	mov    esi,0xbd2c22b5
   140012035:	movsxd ebx,ebp
   140012037:	(bad)  
   140012038:	mov    ecx,0x1ff471b0
   14001203d:	pop    rbp
   14001203e:	fnstcw WORD PTR [rsi+rdi*2]
   140012041:	(bad)
   140012046:	pop    rax
   140012047:	sar    BYTE PTR [rcx+0x5410a702],0xd1
   14001204e:	rol    BYTE PTR [rax+0x33],1
   140012051:	rex.XB
   140012052:	fwait
   140012053:	sbb    DWORD PTR [rcx+0x5367e199],esp
   140012059:	jl     0x140012098
   14001205b:	test   ecx,ebx
   14001205d:	adc    al,0x69
   14001205f:	push   0x5c
   140012061:	push   0x4e19a9a0
   140012066:	outs   dx,BYTE PTR ds:[rsi]
   140012067:	push   rdx
   140012068:	ins    BYTE PTR es:[rdi],dx
   140012069:	sbb    al,0x45
   14001206b:	jl     0x14001202e
   14001206d:	(bad)  
   14001206e:	(bad)  
   14001206f:	ins    DWORD PTR es:[rdi],dx
   140012070:	xchg   esi,eax
   140012071:	(bad)  
   140012072:	pushf  
   140012073:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012074:	mov    esp,0x7d9a117a
   140012079:	and    BYTE PTR [rax-0x7ba146f8],dl
   14001207f:	rex.X ret 
   140012081:	add    esp,esp
   140012083:	lahf   
   140012084:	mov    ecx,0x3b95eb1
   140012089:	rcl    dl,1
   14001208b:	xor    ah,0x38
   14001208e:	or     eax,0x20e4c904
   140012093:	sti    
   140012094:	cmp    edx,DWORD PTR [rcx+0x20563b7a]
   14001209a:	cli    
   14001209b:	xlat   BYTE PTR ds:[rbx]
   14001209c:	sub    bh,BYTE PTR es:[rsi+0x5834820b]
   1400120a3:	cmp    ah,al
   1400120a5:	push   rax
   1400120a6:	jne    0x140012078
   1400120a8:	test   BYTE PTR [rax],bh
   1400120aa:	pop    sp
   1400120ac:	and    eax,0xb3a40bd9
   1400120b1:	sbb    BYTE PTR [rax+0x22],ah
   1400120b4:	add    al,0x25
   1400120b6:	cmp    BYTE PTR [rax],ah
   1400120b8:	xor    DWORD PTR [rdx],eax
   1400120ba:	movabs ds:0xd4c922390b114a11,eax
   1400120c3:	loopne 0x140012079
   1400120c5:	jg     0x1400120a1
   1400120c7:	sub    al,0x42
   1400120c9:	add    BYTE PTR [rdi],ch
   1400120cb:	jp     0x1400120c9
   1400120cd:	mov    ebx,0xee41ff39
   1400120d2:	loopne 0x14001213e
   1400120d4:	rex lahf 
   1400120d6:	add    bl,ah
   1400120d8:	mov    edx,edx
   1400120da:	sub    bh,BYTE PTR [rsi-0x75aded30]
   1400120e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400120e1:	stos   DWORD PTR es:[rdi],eax
   1400120e2:	mov    ebp,0x4bcbc727
   1400120e7:	mov    edi,0xfee36378
   1400120ec:	rex.WRXB pop r12
   1400120ee:	pop    rdi
   1400120ef:	ds int3 
   1400120f1:	ins    BYTE PTR es:[rdi],dx
   1400120f2:	mov    esp,0x7110e502
   1400120f7:	rcr    DWORD PTR [rdi],1
   1400120f9:	xlat   BYTE PTR ds:[rbx]
   1400120fa:	or     BYTE PTR [rbp+0xc],sil
   1400120fe:	sti    
   1400120ff:	fwait
   140012100:	(bad)  
   140012101:	imul   ebp,DWORD PTR [rdx-0x76],0x7e4b9a66
   140012108:	adc    dl,BYTE PTR [rdx+0x6f]
   14001210b:	cmp    eax,0x65940848
   140012110:	rex.RB mov r9d,0x937b1f71
   140012116:	or     DWORD PTR [rsi-0x15],ebp
   140012119:	je     0x14001211f
   14001211b:	push   QWORD PTR [rsi-0x1e]
   14001211e:	(bad)  
   14001211f:	lahf   
   140012120:	cwde   
   140012121:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012122:	rex.RXB iret 
   140012124:	fdivrp st(5),st
   140012126:	(bad)  
   140012127:	icebp  
   140012128:	(bad)  
   140012129:	jb     0x14001211b
   14001212b:	(bad)  
   14001212c:	mov    r14b,0x21
   14001212f:	mov    edi,0xeb6f63d
   140012134:	movabs al,ds:0x77b1b49af3a4e195
   14001213d:	add    al,0x5
   14001213f:	or     eax,0x7058bf8
   140012144:	mov    DWORD PTR [rbp-0x2],esi
   140012147:	(bad)  
   140012148:	call   0x130420cda
   14001214d:	cs push rsi
   14001214f:	xor    dh,BYTE PTR [rdx]
   140012151:	imul   ecx,DWORD PTR [rax-0x4f6ffbb2],0xe1784e84
   14001215b:	mov    WORD PTR [rbp-0x18],es
   14001215e:	shl    BYTE PTR [rcx-0x5c],cl
   140012161:	pop    rsi
   140012162:	or     BYTE PTR [rsi+0x4],0x20
   140012166:	(bad)  
   140012167:	sub    DWORD PTR [rdx],esp
   140012169:	mov    esi,0x5212a8de
   14001216e:	xor    al,0xa0
   140012170:	(bad)  
   140012171:	and    esp,DWORD PTR [rax-0x60d99e36]
   140012177:	add    bh,dh
   140012179:	test   DWORD PTR [rbp+0x7],edi
   14001217c:	or     eax,0xd01a5877
   140012181:	sbb    eax,DWORD PTR [rax-0x30a5bac5]
   140012187:	jb     0x1400121b9
   140012189:	in     al,0xf7
   14001218b:	mov    edx,edx
   14001218d:	mov    WORD PTR [rsi+0x1abe4c1c],ds
   140012193:	(bad)  
   140012194:	ss jg  0x14001217d
   140012197:	(bad)  
   140012198:	cli    
   140012199:	std    
   14001219a:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14001219c:	sub    al,0x1e
   14001219e:	and    cl,BYTE PTR [rdi+rdx*4+0x738857c0]
   1400121a5:	xor    DWORD PTR [rcx],edi
   1400121a7:	(bad)  
   1400121a8:	fcom   DWORD PTR [rcx-0x1d]
   1400121ab:	(bad)  
   1400121ac:	sbb    ch,BYTE PTR [rbp+0x66]
   1400121af:	cdqe   
   1400121b1:	loope  0x140012219
   1400121b3:	xor    esp,DWORD PTR [rsp+rdx*8]
   1400121b6:	xor    DWORD PTR [rdi+0x56],edi
   1400121b9:	(bad)
   1400121bc:	rcl    DWORD PTR [rsp+rax*4+0x62],1
   1400121c0:	mov    dh,0x4f
   1400121c2:	jns    0x1400121b0
   1400121c4:	and    esp,ebx
   1400121c6:	jo     0x140012194
   1400121c8:	lea    esi,[rbx+0x2f]
   1400121cb:	mov    cl,0x7a
   1400121cd:	icebp  
   1400121ce:	add    eax,0x43cf9786
   1400121d3:	mov    ebp,0x45dd644b
   1400121d8:	rex.RB mov r9b,0xa5
   1400121db:	imul   DWORD PTR [rdi+rbp*8]
   1400121de:	xlat   BYTE PTR ds:[rbx]
   1400121df:	pop    rsp
   1400121e0:	(bad)  
   1400121e1:	rex.WXB
   1400121e2:	rex.RXB sbb r9b,BYTE PTR [r15]
   1400121e5:	mov    ah,0x83
   1400121e7:	(bad)  
   1400121e8:	shl    esi,cl
   1400121ea:	clc    
   1400121eb:	in     eax,dx
   1400121ec:	jrcxz  0x140012204
   1400121ee:	add    al,0x9c
   1400121f0:	(bad)  
   1400121f1:	sbb    esi,ebx
   1400121f3:	movabs ds:0x49964b175007007a,al
   1400121fc:	out    0x54,eax
   1400121fe:	and    cl,BYTE PTR [rdi-0x40]
   140012201:	sub    al,BYTE PTR [rdi]
   140012203:	xchg   ecx,eax
   140012204:	jle    0x14001226a
   140012206:	mov    ebp,0x40067301
   14001220b:	or     al,0x14
   14001220d:	(bad)  
   14001220e:	sub    al,BYTE PTR [rcx]
   140012210:	sbb    eax,0x6bbb4403
   140012215:	(bad)  
   140012216:	push   rsi
   140012217:	jl     0x1400121c9
   140012219:	mov    ebx,DWORD PTR [rbp+0x307612aa]
   14001221f:	or     BYTE PTR [rax],dh
   140012221:	(bad)  
   140012222:	cli    
   140012223:	cmp    eax,0x1e2f2c3f
   140012228:	stc    
   140012229:	jne    0x1400122a8
   14001222b:	loopne 0x140012279
   14001222d:	out    0xc0,eax
   14001222f:	sar    DWORD PTR [rbx+0x1bd2f75e],cl
   140012235:	adc    bh,0xab
   140012238:	int3   
   140012239:	xchg   DWORD PTR [rdx+0x5df8f5d],edx
   14001223f:	cli    
   140012240:	mov    dh,BYTE PTR [rdi+0x1def3b96]
   140012246:	mov    es,WORD PTR [rsi-0x2908581]
   14001224c:	(bad)  
   14001224d:	jae    0x140012226
   14001224f:	push   rsi
   140012250:	mov    ?,WORD PTR [rcx+0x3346b0bf]
   140012256:	pop    rsp
   140012257:	(bad)  
   140012258:	stc    
   140012259:	xchg   edx,eax
   14001225a:	rex.X sbb al,0x41
   14001225d:	xchg   ebp,eax
   14001225e:	xchg   BYTE PTR [rax-0x2a63b2f5],al
   140012264:	push   rdi
   140012265:	iret   
   140012266:	sub    BYTE PTR [rdx+0x70ccd219],bl
   14001226c:	int    0x2c
   14001226e:	ss (bad) 
   140012270:	push   0xffffffffe389ae6c
   140012275:	mov    esi,0xe72b0ee3
   14001227a:	sub    BYTE PTR [rsi],dh
   14001227c:	(bad)  
   14001227d:	mov    bl,0x3f
   14001227f:	cdq    
   140012280:	rcr    BYTE PTR [rsp+rdi*1-0x3d],1
   140012284:	retf   0x69d6
   140012287:	fmul   st(5),st
   140012289:	imul   esi,DWORD PTR [rcx-0x19996f9e],0x29
   140012290:	(bad)  
   140012291:	(bad)  
   140012292:	test   eax,0xf92d901d
   140012297:	sbb    r9,QWORD PTR [r14+0x3b]
   14001229b:	rex.WB sub al,0xbf
   14001229e:	adc    al,BYTE PTR ss:[rax+0x665ce156]
   1400122a5:	add    al,0xd2
   1400122a7:	mov    DWORD PTR [rax],eax
   1400122a9:	in     al,dx
   1400122aa:	jge    0x140012275
   1400122ac:	and    BYTE PTR [rdi+rbp*4],ah
   1400122af:	outs   dx,DWORD PTR ds:[rsi]
   1400122b0:	mov    edi,0x23338035
   1400122b5:	movabs al,ds:0x73400c268ae7d922
   1400122be:	adc    al,0xa0
   1400122c0:	enter  0xd5fc,0x4b
   1400122c4:	rol    DWORD PTR [rbp-0x5659fe8b],1
   1400122ca:	ror    esi,0xb0
   1400122cd:	mov    BYTE PTR [rsi+0x22],al
   1400122d0:	retf   
   1400122d1:	push   rax
   1400122d2:	push   rbx
   1400122d3:	lods   al,BYTE PTR ds:[rsi]
   1400122d4:	(bad)  
   1400122d5:	rex.X mov ds,WORD PTR [rsi+0x1a]
   1400122d9:	cmp    esp,DWORD PTR [rdi+0x11]
   1400122dc:	leave  
   1400122dd:	movsxd edx,edx
   1400122df:	rex.WX loope 0x1400122a3
   1400122e2:	ja     0x140012357
   1400122e4:	cmc    
   1400122e5:	fnstsw WORD PTR [rdi-0x1698fc32]
   1400122eb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400122ec:	add    DWORD PTR [rdi-0x7b889407],edi
   1400122f2:	adc    eax,ebp
   1400122f4:	or     eax,0x6e4debc0
   1400122f9:	stos   DWORD PTR es:[rdi],eax
   1400122fa:	mov    ?,WORD PTR [rbx+0x9]
   1400122fd:	add    BYTE PTR [rax],al
   1400122ff:	and    BYTE PTR [rax],al
   140012301:	rex.WB
   140012302:	rex.R
   140012303:	push   r12
   140012305:	in     eax,dx
   140012306:	jmp    0x140f0adc6
   14001230b:	push   QWORD PTR [rsi+0x47bbc6e2]
   140012311:	push   rbp
   140012312:	icebp  
   140012313:	xor    DWORD PTR [rbx-0x45a03c1b],0xffffffbe
   14001231a:	jp     0x1400122c4
   14001231c:	mov    edx,0x64c9b8b1
   140012321:	mov    ah,0x82
   140012323:	push   rsp
   140012324:	and    ebx,DWORD PTR [rdi+rbp*1+0x8bd44f0]
   14001232b:	sbb    al,BYTE PTR [rax+0x1b]
   14001232e:	rex.X cmp eax,0xaf834243
   140012334:	(bad)  
   140012335:	cmp    BYTE PTR [rbx-0x14],bh
   140012338:	rex.X or DWORD PTR [rbx],0xffffffb5
   14001233c:	xchg   ecx,eax
   14001233d:	push   0xffffffffca13af92
   140012342:	fld    DWORD PTR [rdi+rsi*2]
   140012345:	in     al,0x41
   140012347:	cld    
   140012348:	loop   0x14001235c
   14001234a:	push   rdi
   14001234b:	mov    dh,0x2e
   14001234d:	mov    al,0x7c
   14001234f:	icebp  
   140012350:	add    eax,0x22ce9786
   140012355:	rcr    DWORD PTR [rbx+0x26dec128],cl
   14001235b:	cmp    BYTE PTR [rdx+rax*1-0x4940454f],dl
   140012362:	mov    eax,esi
   140012364:	pushf  
   140012365:	(bad)  
   140012366:	outs   dx,DWORD PTR ds:[rsi]
   140012367:	jge    0x140012362
   140012369:	pushf  
   14001236a:	xchg   edx,eax
   14001236b:	(bad)  
   14001236c:	cmp    al,0xc0
   14001236e:	cmp    ebx,eax
   140012370:	(bad)  
   140012371:	fiadd  DWORD PTR [rsi+0x1c]
   140012374:	sar    BYTE PTR [rdx+0x0],0x4c
   140012378:	jmp    0xf99b1a52
   14001237d:	add    BYTE PTR [rcx+0x681ae02a],dh
   140012383:	(bad)  
   140012384:	sar    BYTE PTR [rbx+rcx*2],0x17
   140012388:	jl     0x14001239a
   14001238a:	rex.WXB add rax,0xffffffff972406c8
   140012390:	lock jae 0x14001235b
   140012393:	adc    DWORD PTR [rbx+0x7d],eax
   140012396:	adc    eax,0xe5c05c41
   14001239b:	(bad)
   14001239e:	loopne 0x1400123b7
   1400123a0:	xor    dl,BYTE PTR [rbx-0x13405f28]
   1400123a6:	shl    BYTE PTR [rip+0xffffffff9e421f21],cl        # 0xde4342cd
   1400123ac:	adc    esi,DWORD PTR [rax-0x68]
   1400123af:	leave  
   1400123b0:	(bad)  
   1400123b1:	mov    eax,0xde80d343
   1400123b6:	add    BYTE PTR [rsi+rbx*1-0xb56a1c],bh
   1400123bd:	or     al,BYTE PTR [rbp-0x41464781]
   1400123c3:	mov    dl,0xc9
   1400123c5:	in     al,0xd1
   1400123c7:	retf   0x77eb
   1400123ca:	xor    BYTE PTR [rsi-0x8],bl
   1400123cd:	js     0x140012382
   1400123cf:	mov    eax,0xd2ceecf1
   1400123d4:	(bad)  
   1400123d5:	js     0x14001243e
   1400123d7:	(bad)  
   1400123d8:	(bad)  
   1400123d9:	std    
   1400123da:	ror    DWORD PTR [rdx],1
   1400123dc:	mov    bl,0xd1
   1400123de:	adc    dl,BYTE PTR [rdx+0x54]
   1400123e1:	loopne 0x1400123ed
   1400123e3:	or     edi,ecx
   1400123e5:	movabs ds:0x299a46a6d0684be2,eax
   1400123ee:	mov    esi,0x37df9e8e
   1400123f3:	or     eax,0x7116612
   1400123f8:	mov    al,0xf0
   1400123fa:	pop    rdi
   1400123fb:	mov    ah,ch
   1400123fd:	mov    ebp,0x4f3bc146
   140012402:	jne    0x1400123e8
   140012404:	add    DWORD PTR [rsi-0x3a26654d],esp
   14001240a:	xor    ebp,DWORD PTR [rsi+rbx*2-0x1c80fe88]
   140012411:	xor    bl,dl
   140012413:	int3   
   140012414:	mov    ch,ch
   140012416:	jbe    0x140012409
   140012418:	jo     0x140012497
   14001241a:	retf   0x21fd
   14001241d:	xlat   BYTE PTR ds:[rbx]
   14001241e:	(bad)  
   14001241f:	rcr    esp,cl
   140012421:	jg     0x1400123d4
   140012423:	jl     0x1400123fe
   140012425:	rol    DWORD PTR [rdx+0x7e79f37c],1
   14001242b:	rol    BYTE PTR [rdi-0x13],cl
   14001242e:	nop
   14001242f:	(bad)  
   140012430:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012431:	xor    eax,0xd2c6d200
   140012436:	shl    DWORD PTR [rbx-0x32cfefb9],1
   14001243c:	add    eax,0x609489a0
   140012441:	xlat   BYTE PTR ds:[rbx]
   140012442:	(bad)  
   140012443:	movabs ds:0xf8d1a8380d224cb,eax
   14001244c:	mov    eax,DWORD PTR [rax]
   14001244e:	sub    BYTE PTR [rdi+0x70],0x75
   140012452:	and    esp,DWORD PTR [rip+0xffffffff81533a58]        # 0xc1545eb0
   140012458:	shl    BYTE PTR [rcx+0x77],cl
   14001245b:	and    edx,DWORD PTR [rax+rcx*1+0x58fa677]
   140012462:	retf   
   140012463:	(bad)  
   140012464:	nop
   140012465:	fs add al,0x94
   140012468:	xchg   ecx,eax
   140012469:	(bad)  
   14001246a:	(bad)  
   14001246b:	cli    
   14001246c:	xchg   edx,eax
   14001246d:	pushf  
   14001246e:	(bad)  
   140012470:	or     eax,0xb3ae763d
   140012475:	xchg   DWORD PTR [rsi],edi
   140012477:	add    ch,al
   140012479:	in     eax,0x5b
   14001247b:	nop
   14001247c:	jns    0x1400124be
   14001247e:	scas   eax,DWORD PTR es:[rdi]
   14001247f:	sbb    ebx,esi
   140012481:	sti    
   140012482:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012483:	addr32 (bad) 
   140012485:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   140012487:	xor    DWORD PTR [rbp-0x32],edi
   14001248a:	movabs ds:0x785e337b78a295ef,eax
   140012493:	je     0x140012447
   140012495:	mov    eax,0xd69776ee
   14001249a:	fstp   DWORD PTR [rdi+0x58]
   14001249d:	gs jg  0x140012458
   1400124a0:	(bad)  
   1400124a1:	ins    BYTE PTR es:[rdi],dx
   1400124a2:	mov    eax,0x78472844
   1400124a7:	pop    rdi
   1400124a8:	loop   0x1400124cf
   1400124aa:	mov    dh,0xdc
   1400124ac:	add    al,0x2
   1400124ae:	(bad)  
   1400124b0:	hlt    
   1400124b1:	sti    
   1400124b2:	jp     0x140012436
   1400124b4:	fwait
   1400124b5:	rex.WRB movabs ds:0xfaf626d39f32b7c7,al
   1400124bf:	xchg   ebx,eax
   1400124c0:	cli    
   1400124c1:	jmp    0x140012526
   1400124c3:	add    esp,ebx
   1400124c5:	(bad)  
   1400124c6:	xor    eax,0xf8c3f0e1
   1400124cb:	in     eax,0x35
   1400124cd:	outs   dx,DWORD PTR cs:[rsi]
   1400124cf:	outs   dx,DWORD PTR ds:[rsi]
   1400124d0:	mov    bl,0x70
   1400124d2:	icebp  
   1400124d3:	adc    al,0xe3
   1400124d5:	rex.WXB out 0x90,eax
   1400124d8:	leave  
   1400124d9:	pop    rsi
   1400124da:	hlt    
   1400124db:	(bad)  
   1400124dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400124dd:	rex.WR movabs ds:0x30b7c618d0afd3b1,al
   1400124e7:	js     0x140012534
   1400124e9:	in     eax,0xcd
   1400124eb:	jp     0x1400124c4
   1400124ed:	repnz test DWORD PTR [rdx],edi
   1400124f0:	retf   0xc9df
   1400124f3:	sti    
   1400124f4:	push   rbx
   1400124f5:	test   eax,0xbd77c4d0
   1400124fa:	mov    ch,0x49
   1400124fc:	retf   0x63bf
   1400124ff:	mov    bl,0x8f
   140012501:	fs push rax
   140012503:	push   rax
   140012504:	test   BYTE PTR [rax+0x18],ch
   140012507:	push   rax
   140012508:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012509:	push   rbx
   14001250a:	(bad)  
   14001250b:	mov    esi,ds
   14001250d:	mov    ecx,0xad2ae1f5
   140012512:	sbb    eax,0x29d2bb50
   140012517:	or     al,al
   140012519:	xchg   DWORD PTR [rsp+rax*1-0x3c],ebp
   14001251d:	(bad)
   140012520:	out    dx,al
   140012521:	rex.WRX movabs ds:0xb52517749296092d,rax
   14001252b:	ja     0x140012535
   14001252d:	push   rax
   14001252e:	movabs al,ds:0x1c1bf83e17ae3f47
   140012537:	sti    
   140012538:	or     eax,0xa034b0ee
   14001253d:	(bad)  
   14001253e:	add    BYTE PTR [rdi-0x75291b5],dh
   140012544:	(bad)
   140012547:	xchg   BYTE PTR [rdi+0x18efddf8],cl
   14001254d:	int    0xf6
   14001254f:	mov    esi,0x61fa57df
   140012554:	lods   eax,DWORD PTR ds:[rsi]
   140012555:	(bad)  
   140012556:	out    dx,eax
   140012557:	fwait
   140012558:	(bad)  
   140012559:	(bad)  
   14001255a:	cwde   
   14001255b:	lea    edx,[rdi-0x4f50e027]
   140012561:	cmp    ebx,DWORD PTR [rdx+0x66]
   140012564:	xor    bl,BYTE PTR [rdx-0x5a]
   140012567:	(bad)  
   140012568:	mov    WORD PTR [rcx],cs
   14001256a:	in     eax,0x10
   14001256c:	out    0x7,eax
   14001256e:	js     0x14001255f
   140012570:	jrcxz  0x1400125bf
   140012572:	scas   al,BYTE PTR es:[rdi]
   140012573:	add    DWORD PTR [rsi+0x2d],0x5c1a6fd7
   14001257a:	cwde   
   14001257b:	loope  0x140012568
   14001257d:	sub    DWORD PTR [rdx],esi
   14001257f:	fwait
   140012580:	(bad)  
   140012581:	pop    rdx
   140012582:	jns    0x14001252c
   140012584:	jae    0x14001257e
   140012586:	pop    rdi
   140012587:	pop    rax
   140012588:	fld    TBYTE PTR [rdi+0x439ecb68]
   14001258e:	add    eax,ecx
   140012590:	adc    eax,0x601e4794
   140012595:	push   rsi
   140012596:	(bad)  
   140012597:	(bad)  
   140012598:	xchg   edi,eax
   140012599:	(bad)  
   14001259a:	jb     0x140012588
   14001259c:	ret    0x8a49
   14001259f:	jmp    0x14001257c
   1400125a1:	movabs al,ds:0x4a042b739b1a18d3
   1400125aa:	adc    eax,0xfd4b470a
   1400125af:	adc    eax,0x451d1872
   1400125b4:	out    0xf0,al
   1400125b6:	xor    ah,0x74
   1400125b9:	(bad)  
   1400125ba:	add    BYTE PTR [rsi-0x74],ah
   1400125bd:	out    0x1f,al
   1400125c0:	ja     0x140012557
   1400125c2:	push   rbp
   1400125c3:	xor    BYTE PTR [rbp-0x4a],ah
   1400125c6:	sar    BYTE PTR [rsi],1
   1400125c8:	xchg   edx,eax
   1400125c9:	jl     0x140012593
   1400125cb:	mov    bl,0x1
   1400125cd:	and    bh,bh
   1400125cf:	fild   WORD PTR [rsi-0x74]
   1400125d2:	sbb    BYTE PTR [rbx+0x30],dl
   1400125d5:	xchg   edx,eax
   1400125d6:	adc    DWORD PTR [rdx],0x81022021
   1400125dc:	jmp    0x1900217e1
   1400125e1:	(bad)  
   1400125e2:	cdq    
   1400125e3:	sbb    BYTE PTR [rcx+riz*8-0x41],ah
   1400125e7:	retf   
   1400125e8:	out    0x80,eax
   1400125ea:	sbb    eax,0x581de447
   1400125ef:	push   rdi
   1400125f0:	xor    cl,BYTE PTR [rsi]
   1400125f2:	and    DWORD PTR [rax-0x63],ebx
   1400125f5:	rex.R rcr spl,cl
   1400125f8:	mov    cl,0xf8
   1400125fa:	mov    edi,0xb9ecc43b
   1400125ff:	mov    cl,0x36
   140012601:	(bad)  
   140012602:	jl     0x14001261b
   140012604:	jg     0x14001264d
   140012606:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012607:	add    DWORD PTR [rbp-0x348907ff],edi
   14001260d:	jl     0x1400125c7
   14001260f:	lahf   
   140012610:	mov    ebp,0x79bc503d
   140012615:	mov    ebp,0x3d42f4fc
   14001261a:	sti    
   14001261b:	xor    DWORD PTR [rdi],esp
   14001261d:	movabs ds:0xccc60fec8ac5348f,eax
   140012626:	(bad)  
   140012627:	movsxd esp,DWORD PTR [rsi+0x60c998d5]
   14001262d:	int3   
   14001262e:	je     0x1400125e0
   140012630:	cmp    rax,0x729a45c
   140012636:	js     0x14001268f
   140012638:	loopne 0x1400126b6
   14001263a:	add    edx,esp
   14001263c:	(bad)  
   14001263d:	fldcw  WORD PTR [rax+rbp*1]
   140012640:	mov    ch,0x2a
   140012642:	test   BYTE PTR [rdx],bh
   140012644:	adc    bh,BYTE PTR [rcx-0x16]
   140012647:	test   al,0xfc
   140012649:	scas   al,BYTE PTR es:[rdi]
   14001264a:	sahf   
   14001264b:	loop   0x14001268f
   14001264d:	add    al,0xfc
   14001264f:	jl     0x140012664
   140012651:	jae    0x140012651
   140012653:	and    dl,ah
   140012655:	(bad)  
   140012656:	neg    DWORD PTR [rdi-0x47c9c06c]
   14001265c:	push   0xffffffffc7eb09a8
   140012661:	sbb    DWORD PTR [rsi],ebp
   140012663:	scas   eax,DWORD PTR es:[rdi]
   140012664:	mov    bl,0x7d
   140012666:	in     eax,dx
   140012667:	sub    cl,BYTE PTR [rbx]
   140012669:	pop    rbx
   14001266a:	pop    rdi
   14001266b:	addr32 icebp 
   14001266d:	loop   0x1400126ba
   14001266f:	enter  0x4ede,0x5e
   140012673:	in     al,dx
   140012674:	and    esi,DWORD PTR [rcx]
   140012676:	in     al,0xd2
   140012678:	pop    rdx
   140012679:	jg     0x140012694
   14001267b:	cld    
   14001267c:	retf   
   14001267d:	retf   0xce3
   140012680:	rex.WB (bad) 
   140012682:	and    eax,0xefabc4be
   140012687:	and    ch,ch
   140012689:	faddp  st(5),st
   14001268b:	xchg   esi,eax
   14001268c:	fild   WORD PTR [rdx+rax*2-0x77]
   140012690:	sahf   
   140012691:	push   rdi
   140012692:	repz (bad) 
   140012694:	rex.WB jmp 0xc830cf6d
   14001269a:	(bad)  
   14001269b:	xor    eax,0x22443428
   1400126a0:	push   rax
   1400126a1:	push   rax
   1400126a2:	rex.X movsxd eax,esi
   1400126a5:	ret    
   1400126a6:	(bad)  
   1400126a7:	jno    0x1400126b0
   1400126a9:	push   0x64
   1400126ab:	movabs al,ds:0xd68deb4b45113a10
   1400126b4:	test   al,0x6d
   1400126b6:	out    dx,al
   1400126b7:	leave  
   1400126b8:	add    BYTE PTR [rax-0x4763fdab],ah
   1400126be:	js     0x1400126dc
   1400126c0:	(bad)  
   1400126c1:	jne    0x1400126db
   1400126c3:	fcmovb st,st(1)
   1400126c5:	pop    rcx
   1400126c6:	clc    
   1400126c7:	adc    DWORD PTR [rbp+0x5f],ecx
   1400126ca:	data16 sub BYTE PTR [rax+riz*1+0x10],ah
   1400126cf:	(bad)  
   1400126d0:	rex.W
   1400126d1:	repz mov esi,0x87cbc8af
   1400126d7:	out    dx,eax
   1400126d8:	mov    ah,0x6a
   1400126da:	rex outs dx,DWORD PTR ds:[rsi]
   1400126dc:	add    BYTE PTR [rsi-0x50b50d63],bh
   1400126e2:	pop    rdi
   1400126e3:	add    ch,al
   1400126e5:	icebp  
   1400126e6:	xchg   DWORD PTR [rdi-0x44],ecx
   1400126e9:	jge    0x140012740
   1400126eb:	data16 jg 0x140012734
   1400126ee:	xor    al,0x7c
   1400126f0:	(bad)  
   1400126f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400126f2:	fld    TBYTE PTR [rax]
   1400126f4:	push   0x5f
   1400126f6:	push   rcx
   1400126f7:	(bad)  
   1400126f8:	add    esp,DWORD PTR [rsi+0x55]
   1400126fb:	rex.RB jrcxz 0x140012705
   1400126fe:	int3   
   1400126ff:	stos   BYTE PTR es:[rdi],al
   140012700:	adc    DWORD PTR [rcx+0x4031411a],esp
   140012706:	mov    dl,BYTE PTR [rdx]
   140012708:	(bad)  
   140012709:	jno    0x140012694
   14001270b:	out    dx,al
   14001270c:	mov    eax,0x4da28e22
   140012711:	mov    bpl,0xb6
   140012714:	or     DWORD PTR [rsi],edi
   140012716:	rcr    DWORD PTR [rax-0x7d93019],cl
   14001271c:	mov    edx,0xae1987c6
   140012721:	mov    fs,ecx
   140012723:	mov    edi,0xad0a6a6f
   140012728:	jno    0x14001274b
   14001272a:	cwde   
   14001272b:	repnz rex.RXB (bad) 
   14001272e:	in     eax,0x0
   140012730:	(bad)  
   140012731:	shr    BYTE PTR [rax+rbx*1+0x423ff720],0xd
   140012739:	int3   
   14001273a:	cs popf 
   14001273c:	in     eax,0xc8
   14001273e:	test   DWORD PTR [rdi],edx
   140012740:	lock xlat BYTE PTR ds:[rbx]
   140012742:	(bad)  
   140012743:	movabs eax,ds:0xdcdfe04b06174261
   14001274c:	enter  0x316f,0x87
   140012750:	(bad)  
   140012751:	ret    0x7b7b
   140012754:	ja     0x14001270d
   140012756:	in     eax,dx
   140012757:	(bad)  
   140012758:	jns    0x140012753
   14001275a:	clc    
   14001275b:	cmp    al,0xb1
   14001275d:	(bad)  
   14001275e:	out    dx,eax
   14001275f:	and    eax,0x865ce33b
   140012764:	movabs ds:0x773e64b5b7b2168d,eax
   14001276d:	stc    
   14001276e:	sub    DWORD PTR [rcx+0x22e22022],edi
   140012774:	push   0x1f
   140012776:	mov    al,0xf4
   140012778:	loopne 0x1400127ba
   14001277a:	repnz (bad) 
   14001277c:	(bad)  
   14001277d:	mov    bh,0xdb
   14001277f:	jae    0x1400127b7
   140012781:	(bad)  
   140012782:	rcl    BYTE PTR [rdx-0x73],0x8
   140012786:	and    eax,DWORD PTR [rsp+rbx*1+0x30d91805]
   14001278d:	rdpmc  
   14001278f:	lea    eax,[rbp+0x8]
   140012792:	sub    esi,DWORD PTR [rcx]
   140012794:	or     ch,cl
   140012796:	lahf   
   140012797:	int3   
   140012798:	(bad)  
   140012799:	sub    cl,ah
   14001279b:	(bad)  
   14001279c:	mov    ebx,0x3bcefab8
   1400127a1:	lods   eax,DWORD PTR ds:[rsi]
   1400127a2:	sbb    dl,al
   1400127a4:	sbb    eax,DWORD PTR [rax-0x7d236891]
   1400127aa:	mov    dl,0x5b
   1400127ac:	cs scas eax,DWORD PTR es:[rdi]
   1400127ae:	(bad)  
   1400127af:	xlat   BYTE PTR ds:[rbx]
   1400127b0:	(bad)  
   1400127b1:	jnp    0x1400127a7
   1400127b3:	mov    edi,0xe3fea170
   1400127b8:	xlat   BYTE PTR ds:[rbx]
   1400127b9:	rcl    DWORD PTR [rip+0xffffffff97da9e71],1        # 0xd7dbc630
   1400127bf:	add    al,0x5f
   1400127c1:	adc    cl,BYTE PTR [rdx+0x704a2d12]
   1400127c7:	and    eax,0x57389452
   1400127cc:	and    BYTE PTR [rsi],ch
   1400127ce:	ss icebp 
   1400127d0:	sub    BYTE PTR [rsi-0x489a4e60],cl
   1400127d6:	ins    DWORD PTR es:[rdi],dx
   1400127d7:	out    0x89,al
   1400127d9:	retf   0x67ef
   1400127dc:	adc    edi,DWORD PTR [rbp+rdx*4-0x3ccca308]
   1400127e3:	(bad)  
   1400127e4:	push   rbx
   1400127e5:	or     dh,bl
   1400127e7:	cli    
   1400127e8:	mov    esi,0x87f9ab1
   1400127ed:	(bad)  
   1400127ee:	rex.WRX
   1400127ef:	rex.RXB in al,0x5f
   1400127f2:	nop
   1400127f3:	sbb    BYTE PTR [rip+0xffffffffb4609c6c],dh        # 0xf461c465
   1400127f9:	jp     0x140012783
   1400127fb:	imul   edx,DWORD PTR [rdi-0x51],0x30
   1400127ff:	fidivr WORD PTR [rdx]
   140012801:	leave  
   140012802:	ret    0x4bf6
   140012805:	enter  0xdde,0xa0
   140012809:	mov    cl,0xe5
   14001280b:	mov    dl,0xec
   14001280d:	data16 (bad) 
   14001280f:	movabs eax,ds:0x464ff79b3618d14
   140012818:	push   rdx
   140012819:	sar    DWORD PTR [rbx*4-0x6c02f198],1
   140012820:	xchg   ecx,eax
   140012821:	jo     0x14001282c
   140012823:	add    edx,eax
   140012825:	mov    WORD PTR [rbx],ss
   140012827:	je     0x140012802
   140012829:	sbb    BYTE PTR [rip+0xffffffffa3a75ee2],0x4f        # 0xe3a88712
   140012830:	out    0x15,al
   140012832:	add    BYTE PTR ds:[rax],r14b
   140012836:	test   BYTE PTR [rax],al
   140012838:	rex.WRB fdivr QWORD PTR [r8-0x7d3a76c8]
   14001283f:	pop    rsp
   140012840:	cmp    DWORD PTR [rax-0x22],esp
   140012843:	(bad)  
   140012844:	fidiv  DWORD PTR [rsi]
   140012846:	popf   
   140012847:	rex.W int3 
   140012849:	jmp    0x140012868
   14001284b:	and    al,0x7a
   14001284d:	mov    al,0x78
   14001284f:	loop   0x1400127f3
   140012851:	movabs eax,ds:0x8b089e3e426ea3b5
   14001285a:	push   0xffffffffaa53ffce
   14001285f:	adc    al,0x37
   140012861:	sbb    edi,DWORD PTR [rbx]
   140012863:	add    eax,0x423e6a43
   140012868:	cmp    DWORD PTR [rdx-0xfd306d],esp
   14001286e:	or     esi,DWORD PTR [rdi+0x50]
   140012871:	xor    eax,0xdf0037a0
   140012876:	(bad)  
   140012877:	jns    0x14001289e
   140012879:	gs mov bh,0xd8
   14001287c:	jl     0x140012874
   14001287e:	and    ecx,DWORD PTR [rdi-0x407a7a45]
   140012884:	mov    gs,eax
   140012886:	(bad)  
   140012887:	ins    BYTE PTR es:[rdi],dx
   140012888:	movabs ds:0xf2c69585a8f911e,al
   140012891:	enter  0xc443,0xb5
   140012895:	popf   
   140012896:	mov    DWORD PTR es:[rbx+rdx*1+0x13509a1a],esi
   14001289e:	(bad)  
   14001289f:	sbb    ch,BYTE PTR [rcx+0x66]
   1400128a2:	cmp    rax,0xfffffffff827a8a5
   1400128a8:	jp     0x140012830
   1400128aa:	imul   esp,DWORD PTR [rsi-0x85d948],0xffffffa2
   1400128b1:	mov    DWORD PTR [rdi],edi
   1400128b3:	mov    cl,0xe4
   1400128b5:	(bad)  
   1400128b6:	sti    
   1400128b7:	(bad)  
   1400128b8:	jae    0x1400128a7
   1400128ba:	fbld   TBYTE PTR [rdx]
   1400128bc:	add    BYTE PTR [rbp+0x45],dl
   1400128bf:	(bad)
   1400128c2:	cmp    eax,0x7f60134c
   1400128c7:	sti    
   1400128c8:	sub    al,0xc7
   1400128ca:	(bad)  
   1400128cb:	pushf  
   1400128cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400128cd:	mov    esp,0x3f4d6dba
   1400128d2:	xchg   esi,eax
   1400128d3:	and    bl,BYTE PTR [rax-0x27]
   1400128d6:	stos   DWORD PTR es:[rdi],eax
   1400128d7:	add    BYTE PTR [rdx+rbp*4-0x759701cb],bh
   1400128de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400128df:	pop    rbx
   1400128e0:	rex (bad) 
   1400128e2:	(bad)  
   1400128e3:	fld    QWORD PTR [rsi-0xc5959c5]
   1400128e9:	mov    WORD PTR [rax-0x2e],es
   1400128ec:	or     ebx,DWORD PTR [rip+0x2fd340dc]        # 0x16fd469ce
   1400128f2:	int    0xf4
   1400128f4:	(bad)  
   1400128f5:	lods   al,BYTE PTR ds:[rsi]
   1400128f6:	lods   al,BYTE PTR ds:[rsi]
   1400128f7:	xchg   edi,eax
   1400128f8:	xlat   BYTE PTR ds:[rbx]
   1400128f9:	or     BYTE PTR [rcx-0x1b7cb20b],cl
   1400128ff:	jrcxz  0x1400128e4
   140012901:	(bad)  
   140012902:	rcr    BYTE PTR [rbp+0xc],0x4
   140012906:	sar    BYTE PTR [rdx-0x618d1bff],cl
   14001290c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001290d:	sub    eax,0xffffff8a
   140012910:	rex.WRB add rax,0x54f21756
   140012916:	movabs al,ds:0xf2dcd0cf0c08bd34
   14001291f:	xchg   esp,eax
   140012920:	lea    edx,[rsi-0x42]
   140012923:	adc    cl,dh
   140012925:	rex.WRB shl QWORD PTR [r8],1
   140012928:	mov    BYTE PTR [rax],dh
   14001292a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001292b:	jns    0x14001291c
   14001292d:	(bad)  
   14001292e:	cmc    
   14001292f:	fadd   st(6),st
   140012931:	(bad)  
   140012932:	in     eax,0xce
   140012934:	test   eax,0xe006f406
   140012939:	mov    ch,0x96
   14001293b:	stc    
   14001293c:	xchg   ecx,eax
   14001293d:	pop    rsp
   14001293e:	(bad)  
   14001293f:	sub    BYTE PTR [rdi],bl
   140012941:	std    
   140012942:	hlt    
   140012943:	(bad)  
   140012944:	(bad)  
   140012945:	fimul  DWORD PTR [rdi+rdx*4]
   140012948:	jle    0x14001296f
   14001294a:	test   al,0x9e
   14001294c:	push   rax
   14001294d:	mov    ebx,0x896f9281
   140012952:	xchg   ebx,eax
   140012953:	addr32 pop rdx
   140012955:	gs xor bh,al
   140012958:	(bad)  
   140012959:	sub    BYTE PTR [rdx],bl
   14001295b:	data16 icebp 
   14001295d:	or     si,WORD PTR [rbp-0xc]
   140012961:	cld    
   140012962:	int    0x14
   140012964:	test   eax,0xa13d4867
   140012969:	cwde   
   14001296a:	vmovq  xmm2,QWORD PTR [rcx]
   14001296e:	(bad)  
   14001296f:	leave  
   140012970:	scas   eax,DWORD PTR es:[rdi]
   140012971:	push   0xffffffffc3308a6a
   140012976:	xlat   BYTE PTR ds:[rbx]
   140012977:	xor    edi,DWORD PTR [rbp+rcx*1+0x6b14f8]
   14001297e:	adc    cl,BYTE PTR [rip+0x6edb5a36]        # 0x1aedc83ba
   140012984:	hlt    
   140012985:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012986:	out    0xfe,ax
   140012989:	(bad)  
   14001298a:	sbb    BYTE PTR [rdi+rbx*1+0x35cefae3],ch
   140012991:	rex.RX (bad) [rdi+0x197ed859]
   140012998:	mov    bh,0x77
   14001299a:	add    edx,ebp
   14001299c:	es sbb eax,0xf6da220a
   1400129a2:	cld    
   1400129a3:	rex.WXB and dil,r12b
   1400129a6:	mov    ah,0x9e
   1400129a8:	ficom  WORD PTR [rax-0x7998fbbc]
   1400129ae:	sar    BYTE PTR [rax],0x80
   1400129b1:	popf   
   1400129b2:	and    DWORD PTR [rdi],ebx
   1400129b4:	pop    rbp
   1400129b5:	and    edx,DWORD PTR [rcx-0x6288fb6a]
   1400129bb:	out    0x5d,eax
   1400129bd:	retf   0x7007
   1400129c0:	xchg   esi,eax
   1400129c1:	pop    rsi
   1400129c2:	mov    edx,DWORD PTR [eax]
   1400129c5:	jg     0x1400129a0
   1400129c7:	add    ah,BYTE PTR [rcx]
   1400129c9:	fsubr  DWORD PTR [rdx]
   1400129cb:	sbb    dl,BYTE PTR [r10-0x5]
   1400129cf:	scas   eax,DWORD PTR es:[rdi]
   1400129d0:	mov    ebp,0x54067a9e
   1400129d5:	fcmovb st,st(5)
   1400129d7:	and    edx,0xb
   1400129da:	icebp  
   1400129db:	add    BYTE PTR [rip+0xffffffff98451d32],ah        # 0xd8464713
   1400129e1:	outs   dx,DWORD PTR ds:[rsi]
   1400129e2:	adc    DWORD PTR [rsi-0x2f],ecx
   1400129e5:	mov    BYTE PTR [rax+rax*2],ah
   1400129e8:	mov    al,0x33
   1400129ea:	rex.WRB movabs r8,0xd9b38a0a0c92c3a3
   1400129f4:	add    eax,0x3d502239
   1400129f9:	test   BYTE PTR [rcx],0xb9
   1400129fc:	clc    
   1400129fd:	(bad)  
   1400129fe:	jg     0x1400129aa
   140012a00:	(bad)  
   140012a01:	(bad)  
   140012a02:	sbb    DWORD PTR [rdi+0x48],esi
   140012a05:	sbb    dl,al
   140012a07:	sbb    eax,DWORD PTR [rax-0x6e25ad29]
   140012a0d:	pop    rsp
   140012a0e:	mov    ecx,0x2f99e759
   140012a13:	jl     0x140012a0a
   140012a15:	retf   
   140012a16:	jle    0x1400129d4
   140012a18:	hlt    
   140012a19:	fild   QWORD PTR [rax+0x3910b2c8]
   140012a1f:	out    0x9a,al
   140012a21:	adc    eax,0x6bb1d63d
   140012a26:	or     esi,DWORD PTR [rdi]
   140012a28:	fwait
   140012a29:	movabs al,ds:0x3423ac38d501a1d4
   140012a32:	xor    rax,QWORD PTR [rbx+0x13]
   140012a36:	popf   
   140012a37:	mov    bh,0x9e
   140012a39:	loope  0x140012aa1
   140012a3b:	sti    
   140012a3c:	(bad)  
   140012a3d:	neg    BYTE PTR [rbx-0x12]
   140012a40:	lahf   
   140012a41:	cmp    eax,0x8d614d7f
   140012a46:	cmp    eax,0xf2add4d2
   140012a4b:	xchg   DWORD PTR [rsi],esp
   140012a4d:	scas   eax,DWORD PTR es:[rdi]
   140012a4e:	clc    
   140012a4f:	xchg   ebx,eax
   140012a50:	push   0x66
   140012a52:	lea    ebp,[rbx]
   140012a54:	xchg   ecx,eax
   140012a55:	sti    
   140012a56:	(bad)  
   140012a57:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a58:	adc    edi,eax
   140012a5a:	fisub  WORD PTR [rbp+0x3adf1c73]
   140012a60:	rex.WB jns 0x140012ac8
   140012a63:	or     ebp,edx
   140012a65:	jge    0x1400129f9
   140012a67:	or     ecx,DWORD PTR [rbp+0x40]
   140012a6a:	(bad)  
   140012a6b:	sub    DWORD PTR [rsi-0x5],eax
   140012a6e:	adc    eax,0x7fccd228
   140012a73:	ficomp DWORD PTR [rdi+rdi*1-0x32]
   140012a77:	repz imul edx,DWORD PTR [rip+0x24028da7],0xffffff87        # 0x16403b826
   140012a7f:	loope  0x140012aea
   140012a81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a82:	sbb    eax,0x4ce617b3
   140012a87:	push   rbx
   140012a88:	adc    al,0x60
   140012a8a:	(bad)  
   140012a8b:	sbb    cl,BYTE PTR [rip+0xfffffffff6fcf649]        # 0x136fe20da
   140012a91:	fimul  WORD PTR [rax]
   140012a93:	(bad)  
   140012a94:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012a95:	inc    BYTE PTR [rax+0x37c7ee14]
   140012a9b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a9c:	or     BYTE PTR ds:[rax+0x7],0x4e
   140012aa1:	stos   DWORD PTR es:[rdi],eax
   140012aa2:	(bad)  
   140012aa3:	sub    ebp,ebp
   140012aa5:	pop    rsi
   140012aa6:	sub    eax,0x7c354f8f
   140012aab:	mov    edi,DWORD PTR [rsi]
   140012aad:	and    dh,BYTE PTR [rdx]
   140012aaf:	or     DWORD PTR [rax],edi
   140012ab1:	int    0x95
   140012ab3:	mov    BYTE PTR [rsi-0x14],dl
   140012ab6:	add    BYTE PTR [rbx+0x318efe7],dl
   140012abc:	and    eax,0xeada5fee
   140012ac1:	(bad)  
   140012ac2:	(bad)  
   140012ac3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012ac4:	xchg   ebx,eax
   140012ac5:	out    0x80,eax
   140012ac7:	call   FWORD PTR [rcx-0x17f2dbc5]
   140012acd:	mov    ebx,0x792b5f01
   140012ad2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012ad3:	repnz push rdi
   140012ad5:	outs   dx,DWORD PTR ds:[rsi]
   140012ad6:	stc    
   140012ad7:	ficomp WORD PTR [rdi]
   140012ad9:	clc    
   140012ada:	icebp  
   140012adb:	ror    edx,0xea
   140012ade:	scas   eax,DWORD PTR es:[rdi]
   140012adf:	adc    al,0xa5
   140012ae1:	pop    rdi
   140012ae2:	scas   al,BYTE PTR es:[rdi]
   140012ae3:	or     al,BYTE PTR [rdi-0x17]
   140012ae6:	test   DWORD PTR [rcx-0x57a1ab89],eax
   140012aec:	pushf  
   140012aed:	push   rax
   140012aee:	jns    0x140012ab1
   140012af0:	adc    eax,0x8fc5cf2e
   140012af5:	mov    esi,DWORD PTR [rbx+0x28]
   140012af8:	sbb    ch,BYTE PTR [rdx-0x4c]
   140012afb:	cdq    
   140012afc:	movabs ds:0x3209ea109b3094f5,al
   140012b05:	fisttp QWORD PTR [rbx-0x8b08bb5]
   140012b0b:	sub    dl,ch
   140012b0d:	push   0x3ed9ca04
   140012b12:	cmp    DWORD PTR [rdx-0x61],0xffffffaa
   140012b16:	sahf   
   140012b17:	push   rax
   140012b18:	(bad)  
   140012b19:	push   rbx
   140012b1a:	pop    rsp
   140012b1b:	cmp    eax,0x7afff58b
   140012b20:	(bad)  
   140012b21:	scas   eax,DWORD PTR es:[rdi]
   140012b22:	and    edx,DWORD PTR [rcx]
   140012b24:	enter  0x11d5,0x17
   140012b28:	rex.W jl 0x140012b2b
   140012b2b:	(bad)  
   140012b2c:	frstor [rdi-0x4a]
   140012b2f:	jbe    0x140012ac5
   140012b31:	(bad)  
   140012b32:	std    
   140012b33:	outs   dx,BYTE PTR ds:[rsi]
   140012b35:	fidivr WORD PTR [rax+0x5eb70ca]
   140012b3b:	(bad)  
   140012b3c:	mov    bh,0xce
   140012b3e:	and    BYTE PTR [rbx+0x531a5037],bh
   140012b44:	lods   al,BYTE PTR ds:[rsi]
   140012b45:	test   al,0x44
   140012b47:	test   eax,0xe6d3d8d7
   140012b4c:	dec    BYTE PTR [rcx]
   140012b4e:	xor    al,0xcb
   140012b50:	retf   0x21dd
   140012b53:	sti    
   140012b54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012b55:	(bad)  
   140012b56:	add    BYTE PTR [rdx+0x1ceef77],dh
   140012b5c:	mov    edi,cs
   140012b5e:	jns    0x140012af7
   140012b60:	sub    al,BYTE PTR [rbx]
   140012b62:	or     DWORD PTR [rax-0x6b2f5fcd],ecx
   140012b68:	sub    cl,BYTE PTR [rbx-0x61a10d3a]
   140012b6e:	or     DWORD PTR [rax-0x27cafb5a],ebx
   140012b74:	(bad)  
   140012b75:	and    BYTE PTR [rbx-0x6],dl
   140012b78:	xor    al,0xf
   140012b7a:	add    BYTE PTR [rdx+rcx*4],cl
   140012b7d:	xchg   esp,eax
   140012b7e:	rex.WRX stos BYTE PTR es:[rdi],al
   140012b80:	shr    DWORD PTR [rsi+0x4c],1
   140012b83:	jmp    0x16bceab02
   140012b88:	(bad)  
   140012b89:	addr32 mov esp,0xd20f1d22
   140012b8f:	sahf   
   140012b90:	movsxd ebp,DWORD PTR [rdx-0x63358a07]
   140012b96:	stc    
   140012b97:	imul   esi,DWORD PTR [rbx+0xfea4313],0x3697957c
   140012ba1:	imul   ebx,DWORD PTR [rcx],0x8f13079c
   140012ba7:	xlat   BYTE PTR ds:[rbx]
   140012ba8:	xchg   ebp,eax
   140012ba9:	hlt    
   140012baa:	(bad)  
   140012bab:	loopne 0x140012b62
   140012bad:	nop
   140012bae:	jns    0x140012b95
   140012bb0:	(bad)  
   140012bb1:	sub    edx,0xc1fe5fad
   140012bb7:	(bad)  
   140012bb8:	pop    rbp
   140012bb9:	cs cs std 
   140012bbc:	jne    0x140012bcf
   140012bbe:	sbb    DWORD PTR [rdx+rdi*4-0x17],eax
   140012bc2:	jl     0x140012b9c
   140012bc4:	or     DWORD PTR [rax+0x684a0842],eax
   140012bca:	xchg   esp,eax
   140012bcb:	mov    edx,0x9a9a4c09
   140012bd0:	mov    edx,0x299a69a9
   140012bd5:	pop    rdx
   140012bd6:	rex.WRXB rcr r9b,1
   140012bd9:	(bad)  
   140012bda:	cwde   
   140012bdb:	loop   0x140012bd8
   140012bdd:	jmp    0x18fb7aa10
   140012be2:	xor    ebx,ebx
   140012be4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012be5:	cwde   
   140012be6:	rex.WRB test al,0xea
   140012be9:	jge    0x140012bf1
   140012beb:	cmc    
   140012bec:	test   BYTE PTR [rdx+0x62cc529e],dh
   140012bf2:	or     eax,edx
   140012bf4:	iret   
   140012bf5:	div    BYTE PTR [rcx-0x4d]
   140012bf8:	mov    BYTE PTR [rbx],cl
   140012bfa:	enter  0x826c,0x9f
   140012bfe:	(bad)
   140012c01:	xor    eax,0x2869ae0d
   140012c06:	(bad)  
   140012c07:	sbb    ecx,eax
   140012c09:	(bad)  
   140012c0a:	in     al,dx
   140012c0b:	(bad)  
   140012c0c:	hlt    
   140012c0d:	xor    al,0x52
   140012c0f:	adc    al,0xec
   140012c11:	pop    rdi
   140012c12:	fldenv [rdx-0x1d]
   140012c15:	ret    0x940b
   140012c18:	xlat   BYTE PTR ds:[rbx]
   140012c19:	mov    dh,0xa1
   140012c1b:	fxch   st(7)
   140012c1d:	loope  0x140012c9e
   140012c1f:	bnd jle 0x140012c27
   140012c22:	in     eax,dx
   140012c23:	cli    
   140012c24:	fsubr  DWORD PTR [rcx-0x16]
   140012c27:	out    dx,eax
   140012c28:	pop    rsp
   140012c29:	(bad)  
   140012c2a:	pop    rdi
   140012c2b:	sub    bh,cl
   140012c2d:	jne    0x140012c44
   140012c2f:	ret    
   140012c30:	pop    rsi
   140012c31:	rex.WRXB (bad) 
   140012c33:	xchg   ebx,eax
   140012c34:	ds and al,0xa7
   140012c37:	cmp    al,bh
   140012c39:	(bad)  
   140012c3a:	and    al,0x7a
   140012c3c:	outs   dx,DWORD PTR ds:[rsi]
   140012c3d:	in     eax,dx
   140012c3e:	hlt    
   140012c3f:	icebp  
   140012c40:	(bad)  
   140012c41:	and    BYTE PTR [rbp+0x4f62f605],ah
   140012c47:	xchg   ebx,eax
   140012c48:	add    DWORD PTR [r11+riz*2-0x60],r8d
   140012c4d:	rex.B ins BYTE PTR es:[rdi],dx
   140012c4f:	sbb    BYTE PTR [rax+0x5c4a3cb],dl
   140012c55:	mov    dl,0xef
   140012c57:	push   rbp
   140012c58:	xor    al,0x2b
   140012c5a:	test   al,0x38
   140012c5c:	leave  
   140012c5d:	fisttp DWORD PTR [rsi-0x3c]
   140012c60:	(bad)  
   140012c61:	rex.XB (bad) 
   140012c63:	int    0x0
   140012c65:	push   0x458056bb
   140012c6a:	xor    al,0xa4
   140012c6c:	mov    ecx,0x5d1b483
   140012c71:	je     0x140012c39
   140012c73:	xchg   BYTE PTR [rdi+0x3a50260a],ah
   140012c79:	cmp    eax,0xfcb97ef1
   140012c7e:	sub    al,0x77
   140012c80:	mov    rsi,QWORD PTR [rax-0x61]
   140012c84:	add    bh,BYTE PTR [rdx+rbx*8+0x7fe50b72]
   140012c8b:	fcomi  st,st(7)
   140012c8d:	std    
   140012c8e:	lock rex.WRXB (bad) 
   140012c91:	movabs ds:0xa218029489a0cfd1,eax
   140012c9a:	(bad)  
   140012c9b:	add    BYTE PTR [rip+0xffffffffe951a34a],cl        # 0x12952cfeb
   140012ca1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012ca2:	rex.WRB movabs al,ds:0x506669a1a6ea6bae
   140012cac:	rex.WRXB movabs ds:0x7c13d712a24d9ff7,rax
   140012cb6:	push   0xfffffffff0f44df0
   140012cbb:	rex.RB cmp eax,0xcfb030a5
   140012cc1:	xlat   BYTE PTR ds:[rbx]
   140012cc2:	xchg   ecx,eax
   140012cc3:	loop   0x140012cb0
   140012cc5:	push   rdx
   140012cc6:	rex.WRXB jg 0x140012ce6
   140012cc9:	leave  
   140012cca:	(bad)  
   140012ccb:	imul   edi,DWORD PTR [rdi+rsi*1+0x533fc09a],0xeec67a80
   140012cd6:	movabs eax,ds:0x75cee6e09d0f2827
   140012cdf:	rex.RX pop rbx
   140012ce1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012ce2:	pop    rax
   140012ce3:	mov    esp,0x77b70678
   140012ce8:	sbb    eax,0x929f2cc2
   140012ced:	movabs al,ds:0x514b9c06bcfebb9
   140012cf6:	nop
   140012cf7:	(bad)  
   140012cf8:	je     0x140012ccb
   140012cfa:	fstp   TBYTE PTR [rdx+0x4d4d9344]
   140012d00:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012d02:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012d03:	popf   
   140012d04:	lock mov esi,0x8b24db25
   140012d0a:	rol    BYTE PTR [rcx],1
   140012d0c:	add    ch,cl
   140012d0e:	sbb    esi,DWORD PTR [rdi+0x635b8413]
   140012d14:	xchg   ecx,eax
   140012d15:	xchg   esp,eax
   140012d16:	mov    eax,0x44297cd
   140012d1b:	add    DWORD PTR [rbp-0x7dbfb63a],edi
   140012d21:	xchg   ebp,eax
   140012d22:	add    ch,ch
   140012d24:	(bad)  [rcx+0x2a]
   140012d27:	push   rax
   140012d28:	rcl    cl,cl
   140012d2a:	(bad)  
   140012d2b:	repz out dx,eax
   140012d2d:	add    BYTE PTR [rax-0x6f],bh
   140012d30:	adc    BYTE PTR [rsi+riz*4-0x3cda3b18],ah
   140012d37:	pop    rsp
   140012d38:	pop    rsp
   140012d39:	xor    al,0xb4
   140012d3b:	scas   al,BYTE PTR es:[rdi]
   140012d3c:	sbb    DWORD PTR [rcx],0xffffffac
   140012d3f:	pop    rax
   140012d40:	in     eax,dx
   140012d41:	xor    BYTE PTR [rax],dl
   140012d43:	fs scas al,BYTE PTR es:[rdi]
   140012d45:	je     0x140012d81
   140012d47:	(bad)  
   140012d48:	fistp  DWORD PTR [rbx+0x39]
   140012d4b:	adc    BYTE PTR [rip+0x3be4e88e],dl        # 0x17be615df
   140012d51:	mov    ecx,0xbd01aa43
   140012d56:	add    DWORD PTR [rax+0x35],edi
   140012d59:	gs (bad) 
   140012d5b:	in     eax,dx
   140012d5c:	iret   
   140012d5d:	sahf   
   140012d5e:	mov    edi,0x367f8d18
   140012d63:	mov    dh,0xd9
   140012d65:	(bad)  
   140012d66:	(bad)  
   140012d67:	or     dl,BYTE PTR [rsi]
   140012d69:	fisub  WORD PTR [rbx+0x79]
   140012d6c:	mov    esi,0xa61a6d32
   140012d71:	mov    bl,0xc0
   140012d73:	lods   al,BYTE PTR ds:[rsi]
   140012d74:	cdq    
   140012d75:	push   rdx
   140012d76:	(bad)  
   140012d77:	adc    eax,esp
   140012d79:	sar    DWORD PTR [rdx-0x7a],cl
   140012d7c:	(bad)  
   140012d7d:	push   rsi
   140012d7e:	(bad)  
   140012d7f:	lahf   
   140012d80:	in     eax,dx
   140012d81:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140012d83:	outs   dx,BYTE PTR ds:[rsi]
   140012d84:	mov    BYTE PTR [rsi-0x3cd60851],bh
   140012d8a:	mov    WORD PTR [rdx+0x1f3eec8e],fs
   140012d90:	(bad)  
   140012d91:	enter  0x6bf2,0x6a
   140012d95:	pushf  
   140012d96:	(bad)  
   140012d97:	jo     0x140012de6
   140012d99:	movsxd ebx,DWORD PTR [rdi+rdi*2-0x65]
   140012d9d:	repnz imul esp,ebp,0xffffffbf
   140012da1:	(bad)  
   140012da2:	pop    rax
   140012da3:	and    eax,DWORD PTR [rsi+0x75]
   140012da6:	or     DWORD PTR [rdi],ecx
   140012da8:	or     DWORD PTR ds:[rsi-0xc1d109c],edi
   140012daf:	sbb    al,0xbb
   140012db1:	jo     0x140012d45
   140012db3:	(bad)  
   140012db4:	(bad)  
   140012db5:	add    eax,0xb4a2ee98
   140012dba:	adc    eax,0xc4294102
   140012dbf:	(bad)
   140012dc2:	pushf  
   140012dc3:	in     al,0xda
   140012dc5:	jg     0x140012d62
   140012dc7:	add    bh,BYTE PTR [rax+0xa2d19e8]
   140012dcd:	lock and al,0x5
   140012dd0:	add    edi,DWORD PTR es:[rsi+rcx*2+0x12]
   140012dd5:	xor    al,bl
   140012dd7:	add    al,BYTE PTR [rax-0x19f9187]
   140012ddd:	iret   
   140012dde:	and    al,0x67
   140012de0:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012de2:	hlt    
   140012de3:	imul   esi,DWORD PTR [rbp-0x318dbe1],0x97385a76
   140012ded:	imul   edx,DWORD PTR [rcx+rbx*1],0x23
   140012df1:	mov    BYTE PTR [rcx-0x2a1f9586],bh
   140012df7:	pushf  
   140012df8:	(bad)  
   140012df9:	and    al,0x2d
   140012dfb:	adc    r15,QWORD PTR [rsi+0x54]
   140012dff:	rex.X
   140012e00:	cs push rbx
   140012e02:	es cmp al,0x20
   140012e05:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012e06:	(bad)  
   140012e07:	pop    rsi
   140012e08:	jo     0x140012e2b
   140012e0a:	(bad)  
   140012e0b:	add    BYTE PTR [rax+0x3],dl
   140012e0e:	(bad)  
   140012e0f:	pop    rbx
   140012e10:	xor    eax,0x8d1a474e
   140012e15:	mov    ebx,edx
   140012e17:	(bad)  
   140012e18:	adc    BYTE PTR [rdi+rax*8-0x26196dcf],cl
   140012e1f:	out    dx,eax
   140012e20:	xlat   BYTE PTR ds:[rbx]
   140012e21:	xchg   edi,eax
   140012e22:	(bad)  
   140012e23:	(bad)  
   140012e24:	xor    edi,esi
   140012e26:	mov    edi,0x7d01abee
   140012e2b:	or     dh,al
   140012e2d:	push   0xffffffffffffffc9
   140012e2f:	sub    eax,0xcb78e016
   140012e34:	idiv   ebp
   140012e36:	xchg   ecx,eax
   140012e37:	lahf   
   140012e38:	sub    BYTE PTR [rdi+0xb],al
   140012e3b:	(bad)  
   140012e3c:	(bad)
   140012e40:	rex.X enter 0xf7f5,0x18
   140012e45:	loop   0x140012e4e
   140012e47:	es jne 0x140012e0d
   140012e4a:	out    dx,al
   140012e4b:	mov    ah,0x66
   140012e4d:	outs   dx,DWORD PTR ds:[rsi]
   140012e4e:	xor    ah,BYTE PTR [rbx+0x7f]
   140012e51:	mov    dh,0x4f
   140012e53:	cwde   
   140012e54:	out    dx,al
   140012e55:	movabs ds:0xf8bb260f74c25d93,eax
   140012e5e:	leave  
   140012e5f:	(bad)  
   140012e60:	(bad)  
   140012e63:	in     eax,0x74
   140012e65:	(bad)  
   140012e66:	mov    dl,0xde
   140012e68:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012e69:	pushf  
   140012e6a:	in     eax,dx
   140012e6b:	push   rbx
   140012e6c:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   140012e6e:	xor    bl,BYTE PTR [rsi+rbp*8+0x29f74e53]
   140012e75:	addr32 push rsi
   140012e77:	add    DWORD PTR [rax-0x676e6612],ebx
   140012e7d:	loopne 0x140012e26
   140012e7f:	push   rbx
   140012e80:	fsubr  QWORD PTR [rdx+rcx*4-0x2c]
   140012e84:	push   rbx
   140012e85:	fs (bad) 
   140012e87:	rex.WXB test r9b,sil
   140012e8a:	out    dx,eax
   140012e8b:	cmp    dl,BYTE PTR [rdi-0x3d8b2300]
   140012e91:	(bad)  
   140012e92:	loope  0x140012e1b
   140012e94:	or     bh,dh
   140012e96:	cmp    eax,0xab8dceca
   140012e9b:	or     al,0xb6
   140012e9d:	pop    rdi
   140012e9e:	fs jmp 0x11db97a76
   140012ea4:	sbb    esp,DWORD PTR [rax-0x6b52c18b]
   140012eaa:	retf   
   140012eab:	(bad)  
   140012eac:	(bad)  
   140012ead:	jns    0x140012f2e
   140012eaf:	(bad)
   140012eb4:	mov    ah,0x52
   140012eb6:	sbb    ah,BYTE PTR [rbx+0x79]
   140012eb9:	jo     0x140012e45
   140012ebb:	cs xor r11b,bpl
   140012ebf:	push   rsi
   140012ec0:	xchg   edx,eax
   140012ec1:	jb     0x140012e68
   140012ec3:	not    DWORD PTR [rcx-0xc0c928e]
   140012ec9:	popf   
   140012eca:	rex.B sbb al,0x92
   140012ecd:	ret    0x6efe
   140012ed0:	cli    
   140012ed1:	fadd   QWORD PTR [rdx-0x4]
   140012ed4:	push   rcx
   140012ed5:	xchg   ebx,eax
   140012ed6:	push   rdx
   140012ed7:	imul   esp,DWORD PTR [rcx+rsi*4],0xff0ed075
   140012ede:	(bad)  
   140012ee0:	(bad)  
   140012ee1:	(bad)  
   140012ee2:	sbb    edx,DWORD PTR [rbx+0x7513a051]
   140012ee8:	in     al,0x78
   140012eea:	mov    esi,0x122e3073
   140012eef:	xchg   ebx,eax
   140012ef0:	repnz (bad) 
   140012ef2:	loopne 0x140012ec2
   140012ef4:	stc    
   140012ef5:	(bad)  
   140012ef6:	fnsave [rbp-0x5a]
   140012ef9:	sub    eax,0x45b4c8f9
   140012efe:	sub    DWORD PTR [rdx-0xb],edx
   140012f01:	and    BYTE PTR [rdx],bl
   140012f03:	rex cmp eax,0xfed911f1
   140012f09:	add    BYTE PTR [rdi+0x40],dh
   140012f0c:	sbb    dl,al
   140012f0e:	rex.RXB add BYTE PTR [r15-0x169d237a],r13b
   140012f15:	lods   eax,DWORD PTR ds:[rsi]
   140012f16:	(bad)  
   140012f17:	jg     0x140012f0a
   140012f19:	ud0    edx,DWORD PTR [rcx+0x2fe96172]
   140012f20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012f21:	enter  0xb631,0xa8
   140012f25:	(bad)  
   140012f26:	(bad)  
   140012f27:	jns    0x140012f25
   140012f29:	pop    rcx
   140012f2a:	adc    ebx,DWORD PTR [rax-0x56457e2b]
   140012f30:	cdq    
   140012f31:	(bad)  
   140012f32:	or     eax,0x334299a1
   140012f37:	and    eax,ebx
   140012f39:	push   0x734cd72e
   140012f3e:	jmp    0x140012eee
   140012f40:	imul   edx,DWORD PTR [rdx-0x58],0x5f
   140012f44:	push   rbx
   140012f45:	sbb    al,BYTE PTR [rax-0x54ecbc19]
   140012f4b:	add    BYTE PTR [rbp+0xc],dh
   140012f4e:	stc    
   140012f4f:	jge    0x140012f84
   140012f51:	add    ebp,DWORD PTR [rbx-0xe]
   140012f54:	rex.WB mov r13b,0xfe
   140012f57:	xor    al,0xe5
   140012f59:	(bad)  
   140012f5a:	sub    cl,BYTE PTR [rbp-0x38]
   140012f5d:	retf   0x2123
   140012f60:	jb     0x140012f60
   140012f62:	outs   dx,DWORD PTR ds:[rsi]
   140012f63:	ds repnz (bad) 
   140012f66:	pushf  
   140012f67:	(bad)  
   140012f68:	cdq    
   140012f69:	pop    rsi
   140012f6a:	mov    ecx,0x53adb1c0
   140012f6f:	xchg   esp,eax
   140012f70:	xchg   edi,eax
   140012f71:	mov    bh,0xa0
   140012f73:	fimul  WORD PTR [rbx+0x3d59814b]
   140012f79:	cmp    al,0x87
   140012f7b:	push   rsi
   140012f7d:	xchg   ebx,eax
   140012f7e:	push   rax
   140012f7f:	jg     0x140012f20
   140012f81:	movabs ds:0xf792f2b3b42ba367,al
   140012f8a:	(bad)  
   140012f8b:	loop   0x140012fdd
   140012f8d:	(bad)  
   140012f8e:	cmp    DWORD PTR [rdx],esp
   140012f90:	mov    eax,0x537edb19
   140012f95:	xor    al,0xd0
   140012f97:	rol    DWORD PTR [rcx],0xba
   140012f9a:	xlat   BYTE PTR ds:[rbx]
   140012f9b:	xor    ebp,ecx
   140012f9d:	sub    dh,BYTE PTR gs:[rax+0x54ef8565]
   140012fa4:	add    eax,0x70607752
   140012fa9:	and    BYTE PTR [rbp+0x6b],cl
   140012fac:	cmp    BYTE PTR [rsp+rax*2],al
   140012faf:	sbb    eax,0xf3c5c1a
   140012fb4:	loop   0x140013034
   140012fb6:	adc    al,BYTE PTR [rdi-0x1cc8cb21]
   140012fbc:	sbb    bh,BYTE PTR [rax]
   140012fbe:	leave  
   140012fbf:	ror    DWORD PTR [rsi+0x349838b8],1
   140012fc5:	sub    eax,0x8c7ce266
   140012fca:	shl    BYTE PTR [rdx],1
   140012fcc:	jns    0x140013016
   140012fce:	(bad)  
   140012fcf:	jmp    0xfa9da0fc
   140012fd4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012fd5:	fldcw  WORD PTR cs:[rbp+0x4d23c6db]
   140012fdc:	or     ebx,ecx
   140012fde:	fs repnz sbb al,0xf0
   140012fe2:	iret   
   140012fe3:	jns    0x140012f82
   140012fe5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012fe6:	add    DWORD PTR [rbp-0x357c07ff],edi
   140012fec:	sub    eax,0xf93ff0e6
   140012ff1:	mov    ecx,0xb86e7f2f
   140012ff6:	mov    eax,0x683437fc
   140012ffb:	add    DWORD PTR [rcx],ebp
   140012ffd:	(bad)  
   140012ffe:	sqrtps xmm6,xmm1
   140013001:	jmp    0x140012fc3
   140013003:	lods   al,BYTE PTR ds:[rsi]
   140013004:	mov    DWORD PTR [rdx-0x596565e1],ecx
   14001300a:	cdq    
   14001300b:	rex.RB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001300d:	mov    bh,0x3c
   14001300f:	(bad)  
   140013011:	xor    edi,DWORD PTR [rbx+rsi*1-0x67]
   140013015:	push   rbx
   140013016:	in     al,dx
   140013017:	movabs ds:0xbce9137c53365299,al
   140013020:	scas   al,BYTE PTR es:[rdi]
   140013021:	mov    dh,0xd9
   140013023:	jge    0x14001301b
   140013025:	fsub   DWORD PTR [rbp-0x6f97a10e]
   14001302b:	cmp    dh,ch
   14001302d:	imul   DWORD PTR [rbx-0x34]
   140013030:	stc    
   140013031:	sub    eax,0x3fa54e34
   140013036:	adc    ecx,eax
   140013038:	int    0xf6
   14001303a:	mov    ecx,0x70d3c0fe
   14001303f:	jmp    QWORD PTR [rbx+0x635cedec]
   140013045:	mov    eax,0xada59a75
   14001304a:	(bad)  
   14001304b:	jno    0x140013008
   14001304d:	push   rdi
   14001304e:	sub    eax,0x4cacd7f7
   140013053:	rex.WRX movabs rax,ds:0xfcceec93b1a78714
   14001305d:	out    dx,eax
   14001305e:	cmp    BYTE PTR [rbx-0x26],dl
   140013061:	(bad)  
   140013062:	sub    DWORD PTR [rdi-0x61],edi
   140013065:	rex.WXB in eax,dx
   140013067:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013068:	repz pop rsp
   14001306a:	jle    0x140012ffb
   14001306c:	xor    eax,0x5cff30dd
   140013071:	sbb    esp,DWORD PTR [rax+0x77]
   140013074:	jrcxz  0x140012ff6
   140013076:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013077:	loope  0x140013022
   140013079:	sbb    DWORD PTR [rdi],eax
   14001307b:	fwait
   14001307c:	adc    al,0xec
   14001307e:	ins    BYTE PTR es:[rdi],dx
   14001307f:	xchg   BYTE PTR [rax+0x76bcdae6],ah
   140013085:	sti    
   140013086:	(bad)  
   140013087:	adc    ch,BYTE PTR [rbx]
   140013089:	lock push rsi
   14001308b:	loop   0x1400130f1
   14001308d:	jle    0x140013016
   14001308f:	jmp    0x182e0a2cc
   140013094:	push   rsp
   140013095:	inc    dh
   140013097:	(bad)  
   140013098:	or     eax,0xf32efb51
   14001309d:	push   0x9392ce0
   1400130a2:	leave  
   1400130a3:	(bad)
   1400130a8:	(bad)  
   1400130a9:	mov    ah,0x8
   1400130ab:	test   DWORD PTR [rsi],0xb7220fe0
   1400130b1:	cwde   
   1400130b2:	ret    
   1400130b3:	jg     0x140013097
   1400130b5:	mov    ecx,0x2fd07fcf
   1400130ba:	scas   al,BYTE PTR es:[rdi]
   1400130bb:	(bad)  
   1400130bc:	shl    BYTE PTR [rsp+rax*4],cl
   1400130bf:	(bad)  
   1400130c0:	rex.W loopne 0x140013121
   1400130c3:	rex.RXB jmp 0x1637d8c34
   1400130c9:	or     eax,0xe299a4e4
   1400130ce:	xchg   bx,ax
   1400130d0:	cmp    BYTE PTR [rbp-0x4ec2ff29],dl
   1400130d6:	jmp    0x1bb12b697
   1400130db:	jl     0x1400130fa
   1400130dd:	jmp    0x1400130da
   1400130df:	adc    dl,BYTE PTR [rdx+0x19]
   1400130e2:	iret   
   1400130e3:	cmp    bh,bl
   1400130e5:	jb     0x140013162
   1400130e7:	outs   dx,DWORD PTR ds:[rsi]
   1400130e8:	mov    ebx,0x22689794
   1400130ed:	(bad)  
   1400130ee:	sub    BYTE PTR [rcx-0x30],bh
   1400130f1:	xchg   DWORD PTR [rdx-0x3a],esp
   1400130f4:	and    dh,bh
   1400130f6:	push   rsi
   1400130f7:	push   rdi
   1400130f8:	jo     0x1400130ed
   1400130fa:	mov    cl,0x77
   1400130fc:	sub    BYTE PTR [rdi],0xd8
   1400130ff:	fstp   TBYTE PTR [rsi]
   140013101:	retf   
   140013102:	jge    0x14001311b
   140013104:	pop    rdi
   140013105:	movabs al,ds:0x20a463f6cc85baba
   14001310e:	test   eax,0x3d951eb4
   140013113:	scas   al,BYTE PTR es:[rdi]
   140013114:	cmc    
   140013115:	(bad)  
   140013116:	js     0x140013121
   140013118:	xchg   ecx,eax
   140013119:	add    al,0xe4
   14001311b:	push   rdx
   14001311c:	in     al,0xdc
   14001311e:	push   0x78
   140013120:	pop    rsp
   140013121:	sbb    ch,BYTE PTR [rbp+rbp*1+0x5da7c5f3]
   140013128:	(bad)  
   140013129:	cmc    
   14001312a:	pop    rbx
   14001312b:	movabs ds:0x16cf7d0dfffb070,eax
   140013134:	shl    BYTE PTR [rsi],cl
   140013136:	in     eax,dx
   140013137:	lahf   
   140013138:	sbb    al,0xc6
   14001313a:	rex.XB pushf 
   14001313c:	or     cl,BYTE PTR [rsi+rcx*2]
   14001313f:	ins    DWORD PTR es:[rdi],dx
   140013140:	sub    dl,BYTE PTR [rax-0x80]
   140013143:	rol    BYTE PTR [rax+rdi*4+0x604b80ce],1
   14001314a:	popf   
   14001314b:	cmp    BYTE PTR [rdx],0x3b
   14001314e:	test   DWORD PTR [rsi+0x29],0xdbb65351
   140013155:	rex.WRX stc 
   140013157:	add    eax,0x4e60f2e2
   14001315c:	loop   0x140013129
   14001315e:	imul   edx,DWORD PTR [rip+0x4dc63a61],0xff10fa52        # 0x18dc76bc9
   140013168:	rex.WB
   140013169:	repz add DWORD PTR [rax-0x364319c8],edx
   140013170:	(bad)  
   140013171:	mov    ch,BYTE PTR [rax+0x14]
   140013174:	sbb    al,0x31
   140013176:	pop    rdx
   140013177:	lock call 0x116ea014e
   14001317d:	xchg   DWORD PTR [rsi-0x7d],edi
   140013180:	movsxd edi,edi
   140013182:	test   bh,dl
   140013184:	xor    DWORD PTR [rcx],ebp
   140013186:	test   al,0x37
   140013188:	add    BYTE PTR [rdi-0x151066a1],bh
   14001318e:	repz rex mov ecx,0xbd0faef1
   140013195:	leave  
   140013196:	sub    eax,0xbd9dfead
   14001319b:	imul   esi,DWORD PTR [rbx-0x65ef2f22],0xb60fd5c8
   1400131a5:	fisubr DWORD PTR [rsi-0x55138aca]
   1400131ab:	xor    esp,DWORD PTR [rip+0xffffffff9f56b977]        # 0xdf57eb28
   1400131b1:	cmp    dh,dh
   1400131b3:	and    bh,BYTE PTR [rbx-0x51]
   1400131b6:	ins    BYTE PTR es:[rdi],dx
   1400131b7:	pop    rdx
   1400131b8:	out    dx,eax
   1400131b9:	out    dx,eax
   1400131ba:	fwait
   1400131bb:	adc    BYTE PTR [rip+0xffffffffedf7427e],bh        # 0x12df8743f
   1400131c1:	rex.RXB mov r8d,fs
   1400131c4:	jrcxz  0x140013160
   1400131c6:	mov    dl,dh
   1400131c8:	out    0xf6,eax
   1400131ca:	push   rdi
   1400131cb:	ins    DWORD PTR es:[rdi],dx
   1400131cc:	mov    DWORD PTR [rsi],edi
   1400131ce:	cmp    DWORD PTR [rdx],ecx
   1400131d0:	cmp    QWORD PTR [rax],rsi
   1400131d3:	mov    dl,ah
   1400131d5:	push   rbx
   1400131d6:	scas   al,BYTE PTR es:[rdi]
   1400131d7:	cmp    eax,0xfb9a16fc
   1400131dc:	(bad)  
   1400131dd:	movsxd esi,DWORD PTR [rsi-0x3]
   1400131e0:	sub    ah,BYTE PTR [rbx-0x45a75875]
   1400131e6:	js     0x1400131ee
   1400131e8:	jg     0x1400131dd
   1400131ea:	sbb    bl,dl
   1400131ec:	int3   
   1400131ed:	push   rdx
   1400131ee:	rex.WX sbb rax,0xffffffffe4711fbd
   1400131f4:	xchg   edi,eax
   1400131f5:	push   rdi
   1400131f6:	sbb    ebx,DWORD PTR [rcx-0x732c433b]
   1400131fc:	xchg   esi,eax
   1400131fd:	rex.WRXB out 0x74,al
   140013200:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   140013202:	add    BYTE PTR [rsi],ch
   140013204:	jae    0x140013204
   140013206:	out    0xd9,eax
   140013208:	jg     0x14001318c
   14001320a:	mov    ah,0xe3
   14001320c:	rcr    DWORD PTR [rdx-0x78],0xfe
   140013210:	xchg   ebp,eax
   140013211:	out    dx,al
   140013212:	fistp  QWORD PTR [rdx+rbp*2-0x635bfc1e]
   140013219:	cmp    edx,DWORD PTR [rbp+0x319db05]
   14001321f:	rcl    dh,cl
   140013221:	std    
   140013222:	and    eax,0xf2434a7e
   140013227:	rcr    BYTE PTR [rdx+0x3b2561de],1
   14001322d:	and    DWORD PTR [rdi],edi
   14001322f:	fwait
   140013230:	loopne 0x140013235
   140013232:	jb     0x1400131b9
   140013234:	rcl    DWORD PTR [rsp+rdi*1],1
   140013237:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013238:	add    DWORD PTR [rdx],esi
   14001323a:	(bad)  
   14001323b:	mov    ch,0xa4
   14001323d:	push   0x44f989a5
   140013242:	ds mov esi,0x62d3d6e4
   140013248:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013249:	jns    0x1400131da
   14001324b:	stos   BYTE PTR es:[rdi],al
   14001324c:	lods   al,BYTE PTR ds:[rsi]
   14001324d:	xor    edi,ebp
   14001324f:	adc    al,0xf0
   140013251:	iret   
   140013252:	js     0x140013271
   140013254:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013255:	add    DWORD PTR [rbp+0x4983f801],edi
   14001325b:	(bad)  
   14001325c:	sti    
   14001325d:	(bad)  
   14001325e:	(bad)  
   14001325f:	jns    0x140013243
   140013261:	pop    rax
   140013262:	mov    ecx,0x26f7f1be
   140013267:	mov    bl,0xc9
   140013269:	mov    ecx,ebp
   14001326b:	ins    BYTE PTR es:[rdi],dx
   14001326c:	adc    ah,BYTE PTR [rdi]
   14001326e:	repnz and al,0xf6
   140013271:	sahf   
   140013272:	xor    eax,edi
   140013274:	(bad)  
   140013275:	(bad)  
   140013276:	nop
   140013277:	movsxd ebx,DWORD PTR [rsi]
   140013279:	ficomp WORD PTR [rcx]
   14001327b:	(bad)  
   14001327c:	fbld   TBYTE PTR [rdi]
   14001327e:	(bad)  
   14001327f:	ffreep st(4)
   140013281:	xlat   BYTE PTR ds:[rbx]
   140013282:	or     ebx,DWORD PTR [rbx]
   140013284:	(bad)  
   140013285:	and    eax,0xfcf31d4d
   14001328a:	(bad)  
   14001328b:	in     eax,0x6f
   14001328d:	rol    BYTE PTR [rdi+rbx*8-0x3c],cl
   140013291:	lock imul esp,edx,0x32
   140013295:	pop    rax
   140013296:	push   0x2937c55e
   14001329b:	jl     0x1400132cb
   14001329d:	mul    DWORD PTR [rip+0xffffffffd0905045]        # 0x1109182e8
   1400132a3:	rcl    BYTE PTR [rbx+riz*1-0x52],1
   1400132a7:	cmp    al,0xf1
   1400132a9:	ds mov esp,0x5fb6ccf3
   1400132af:	loop   0x140013299
   1400132b1:	(bad)
   1400132b4:	jmp    0x140013325
   1400132b6:	mov    dh,0x47
   1400132b8:	pushf  
   1400132b9:	mov    bl,0x6d
   1400132bb:	movabs ds:0xb682dfc4f253f6c6,al
   1400132c4:	pop    rbx
   1400132c5:	cmp    ebp,DWORD PTR cs:[rbx+0x53]
   1400132c9:	xchg   edx,eax
   1400132ca:	fadd   DWORD PTR [rbp-0x25]
   1400132cd:	movabs eax,ds:0x458fdebe67bed2d3
   1400132d6:	or     al,0xed
   1400132d8:	jae    0x140013307
   1400132da:	movabs al,ds:0x78032186ec8c5318
   1400132e3:	mov    ecx,0x15c60a7a
   1400132e8:	mov    al,0xc3
   1400132ea:	xchg   ebp,eax
   1400132eb:	xor    al,0xc9
   1400132ed:	pop    rax
   1400132ee:	push   rdx
   1400132ef:	(bad)  
   1400132f0:	xor    al,BYTE PTR [rdi+0x3c]
   1400132f3:	(bad)  
   1400132f4:	(bad)  
   1400132f5:	test   BYTE PTR [rsi+0x4d],dh
   1400132f8:	mov    ch,0xa1
   1400132fa:	xchg   ebp,eax
   1400132fb:	push   0xffffffffffffffc7
   1400132fd:	test   eax,0x671f38a2
   140013302:	add    edx,esp
   140013304:	rex lods eax,DWORD PTR ds:[rsi]
   140013306:	sbb    eax,0xec38af38
   14001330b:	and    al,0xae
   14001330d:	rex.RXB sub BYTE PTR [r14+0x78],r12b
   140013311:	shl    cl,cl
   140013313:	addr32 mov esp,0x21d776c1
   140013319:	outs   dx,DWORD PTR ds:[rsi]
   14001331a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001331b:	test   eax,0xde6d43c1
   140013320:	repz (bad) 
   140013322:	in     al,0xf4
   140013324:	mov    edi,edi
   140013326:	rex.WRX (bad) 
   140013328:	cld    
   140013329:	cmp    ch,BYTE PTR [rbp+0x14]
   14001332c:	shr    bl,0x29
   14001332f:	or     ch,al
   140013331:	or     eax,0xe647efc0
   140013336:	push   rdi
   140013337:	(bad)  [rip+0xffffffff8bab2b07]        # 0xcbac5e44
   14001333d:	movabs ds:0xab7ddd30edfdf763,eax
   140013346:	(bad)  
   140013347:	sti    
   140013348:	test   BYTE PTR [rsp+rcx*4+0x4f372c29],ah
   14001334f:	cmp    eax,0xef7b26d0
   140013354:	rex.X jmp 0x1400133a5
   140013357:	mov    ds,WORD PTR [rdi]
   140013359:	xchg   edi,eax
   14001335a:	loop   0x1400132e6
   14001335c:	add    al,0x1d
   14001335e:	push   rbx
   14001335f:	lock data16 (bad) 
   140013362:	ret    
   140013363:	cld    
   140013364:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013365:	std    
   140013366:	rex.WR sbb r12b,dil
   140013369:	rex.WRB shl QWORD PTR [r14+rbx*8-0x56055ec3],cl
   140013371:	(bad)  
   140013372:	lahf   
   140013373:	cmp    dh,bh
   140013375:	mov    dh,0xa6
   140013377:	jge    0x14001333d
   140013379:	retf   
   14001337a:	and    ch,BYTE PTR [rax-0x51ec5819]
   140013380:	(bad)  
   140013381:	repnz ss hlt 
   140013384:	fadd   st,st(3)
   140013386:	rex.WR scas al,BYTE PTR es:[rdi]
   140013388:	pop    rdi
   140013389:	(bad)  
   14001338a:	mov    eax,0x8ba59a7d
   14001338f:	(bad)  
   140013390:	fwait
   140013391:	neg    DWORD PTR [rdi-0x3b55a64a]
   140013397:	call   0x10e6e175d
   14001339c:	jg     0x1400133d9
   14001339e:	icebp  
   14001339f:	(bad)  
   1400133a0:	paddq  mm1,QWORD PTR [rbp+0x21]
   1400133a4:	mov    esp,0x1495eb2d
   1400133a9:	xor    al,0xf7
   1400133ab:	(bad)  
   1400133ac:	shl    BYTE PTR [rcx],1
   1400133ae:	add    esp,DWORD PTR [rcx]
   1400133b0:	cmp    DWORD PTR [rdx+0x48],edx
   1400133b3:	rex.W jns 0x140013351
   1400133b6:	cmp    eax,0x6da0ca58
   1400133bb:	rex.WRXB add BYTE PTR [r9+0x25],r13b
   1400133bf:	(bad)  
   1400133c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400133c1:	movabs ds:0x2831126868d04af8,eax
   1400133ca:	sub    eax,0x8ce2615
   1400133cf:	rex.B
   1400133d0:	rex.X
   1400133d1:	div    DWORD PTR ds:[rdi+rcx*2]
   1400133d5:	rex adc DWORD PTR [rbx+0x46800716],edi
   1400133dc:	or     al,0x1f
   1400133de:	call   0xdd354353
   1400133e3:	sbb    BYTE PTR [rip+0xffffffff82674c63],0x35        # 0xc268804d
   1400133ea:	sbb    al,0x6a
   1400133ec:	(bad)  
   1400133ed:	add    bl,ah
   1400133ef:	adc    ecx,ebx
   1400133f1:	jo     0x140013387
   1400133f3:	xchg   esp,eax
   1400133f4:	(bad)  
   1400133f5:	xchg   ecx,eax
   1400133f6:	push   rdx
   1400133f7:	mov    es,esp
   1400133f9:	adc    DWORD PTR [rax],edx
   1400133fb:	cmp    al,0x7a
   1400133fd:	fistp  QWORD PTR [rbx]
   1400133ff:	mov    ecx,0x783c2cfa
   140013404:	sub    bl,BYTE PTR [rbp+0x3e]
   140013407:	(bad)  
   140013408:	and    al,0xf0
   14001340a:	mov    edx,0xfc00de91
   14001340f:	pop    rsi
   140013410:	in     eax,0x16
   140013412:	mov    esi,DWORD PTR [rcx+0x6c]
   140013415:	cmp    al,0xfc
   140013417:	rcr    BYTE PTR [rdi-0x70],1
   14001341a:	(bad)  
   14001341c:	addr32 rex.X mov ebp,0x5f360b8f
   140013423:	sbb    r14,QWORD PTR [r9+r9*4+0x68369dbf]
   14001342b:	or     BYTE PTR [rax+0x1b],bh
   14001342e:	ret    0xcde1
   140013431:	ret    
   140013432:	jnp    0x14001341f
   140013434:	rcl    DWORD PTR [rdi+0x411f584e],1
   14001343a:	mov    ebp,0xdbaeeca8
   14001343f:	rcl    bl,0x18
   140013442:	stos   BYTE PTR es:[rdi],al
   140013443:	movzx  eax,BYTE PTR [rax]
   140013446:	xchg   BYTE PTR [rbp-0xa],dh
   140013449:	jne    0x140013413
   14001344b:	cmp    eax,0xcc971aaa
   140013450:	and    dl,cl
   140013452:	ja     0x140013485
   140013454:	rex.WRXB or BYTE PTR [r10],r10b
   140013457:	add    cl,ch
   140013459:	jo     0x140013427
   14001345b:	xchg   ebp,eax
   14001345c:	(bad)  
   14001345d:	fiadd  WORD PTR [rbx-0x6804e39]
   140013463:	sub    al,0x87
   140013465:	mov    dh,0x5f
   140013467:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013468:	mov    esp,0xf6cc8db6
   14001346d:	or     BYTE PTR [rsi],dh
   14001346f:	or     BYTE PTR [rbx],dh
   140013471:	jle    0x140013499
   140013473:	int    0xfb
   140013475:	mov    ecx,DWORD PTR [rbp+0x138aa23f]
   14001347b:	stos   DWORD PTR es:[rdi],eax
   14001347c:	std    
   14001347d:	shl    ebp,cl
   14001347f:	lock sub eax,0xfef12f7b
   140013485:	jae    0x1400134a3
   140013487:	outs   dx,DWORD PTR ds:[rsi]
   140013488:	xor    al,0xdb
   14001348a:	mov    esp,0x8f9887f8
   14001348f:	rex.WRX cmp QWORD PTR [rdi-0x3aece86b],r15
   140013496:	jbe    0x1400134b6
   140013498:	push   rax
   140013499:	xchg   esp,eax
   14001349a:	or     al,0xe0
   14001349c:	rex.WB
   14001349d:	rex.WX adc QWORD PTR [rsi],rcx
   1400134a0:	(bad)  
   1400134a1:	add    ecx,ebp
   1400134a3:	popf   
   1400134a4:	push   0x335ff488
   1400134a9:	cs (bad) 
   1400134ab:	rex.B iret 
   1400134ad:	test   BYTE PTR [rbx-0x5c],ah
   1400134b0:	shr    DWORD PTR [rdx+0x17],cl
   1400134b3:	or     ebp,DWORD PTR [rcx+0x23]
   1400134b6:	add    DWORD PTR [rbx],edi
   1400134b8:	pop    rcx
   1400134b9:	add    edi,esp
   1400134bb:	xchg   esp,eax
   1400134bc:	outs   dx,BYTE PTR ds:[rsi]
   1400134bd:	cmp    DWORD PTR [rdx+0x72],edx
   1400134c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400134c1:	xchg   ebx,eax
   1400134c2:	xor    BYTE PTR [rsp+rsi*8+0x45366759],cl
   1400134c9:	mov    ah,0xb
   1400134cb:	push   rdx
   1400134cc:	(bad)  
   1400134cd:	ins    DWORD PTR es:[rdi],dx
   1400134ce:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400134cf:	retf   0x7a40
   1400134d2:	ins    DWORD PTR es:[rdi],dx
   1400134d3:	popf   
   1400134d4:	leave  
   1400134d5:	xor    DWORD PTR [esi+0x54],0x5f666b58
   1400134dd:	(bad)  
   1400134de:	rcr    BYTE PTR [rbx],cl
   1400134e0:	sbb    bh,0x8b
   1400134e3:	fadd   QWORD PTR [rdx-0x7]
   1400134e6:	(bad)  
   1400134e7:	jp     0x1400134cc
   1400134e9:	rex.XB (bad) 
   1400134eb:	loop   0x1400134af
   1400134ed:	hlt    
   1400134ee:	(bad)  
   1400134ef:	(bad)  
   1400134f1:	jmp    0x1400134a0
   1400134f3:	out    dx,eax
   1400134f4:	sub    BYTE PTR [rbp-0x64],ah
   1400134f7:	mov    ecx,0xfb4bd17
   1400134fc:	add    ecx,edx
   1400134fe:	(bad)  
   1400134ff:	xchg   edx,eax
   140013500:	sbb    esi,DWORD PTR [rdx+0xe]
   140013503:	out    dx,eax
   140013504:	je     0x1763573ff
   14001350a:	(bad)  
   14001350b:	(bad)  
   14001350c:	xchg   al,bh
   14001350e:	cdq    
   14001350f:	mov    eax,0xd763e213
   140013514:	icebp  
   140013515:	clc    
   140013516:	xor    edi,ebp
   140013518:	(bad)  
   14001351a:	mov    dh,0x4a
   14001351c:	repz (bad) 
   14001351f:	(bad)  
   140013520:	test   esp,ebx
   140013522:	rex.WRXB (bad) 
   140013524:	sub    BYTE PTR [rdi-0x1c093d9],0x6e
   14001352b:	hlt    
   14001352c:	enter  0xecc3,0xdf
   140013530:	mov    eax,0x2f7f1d62
   140013535:	loope  0x1400135ad
   140013537:	scas   al,BYTE PTR es:[rdi]
   140013538:	movabs ds:0xff799c04c626da61,al
   140013541:	xor    al,0xef
   140013543:	scas   eax,DWORD PTR es:[rdi]
   140013544:	xor    ch,al
   140013546:	rex.WRXB loope 0x1400135c8
   140013549:	pop    rdx
   14001354a:	int    0x37
   14001354c:	xchg   edi,eax
   14001354d:	rol    DWORD PTR [rdx+0x2d2ff066],cl
   140013553:	std    
   140013554:	xor    eax,0xc9140437
   140013559:	iret   
   14001355a:	mov    ch,0x5e
   14001355c:	(bad)  
   14001355d:	movabs ds:0x21cf5e64e2046ae1,eax
   140013566:	(bad)  
   140013567:	mov    eax,0x44c08076
   14001356c:	or     cl,BYTE PTR [rdx-0x593ebf33]
   140013572:	cli    
   140013573:	rex.WX sti 
   140013575:	jl     0x14001358e
   140013577:	cmc    
   140013578:	rex.WRXB loopne 0x140013522
   14001357b:	jmp    0x10d6587db
   140013580:	call   FWORD PTR [rcx+0x8]
   140013583:	outs   dx,DWORD PTR ds:[rsi]
   140013584:	sbb    al,0x0
   140013586:	mov    ch,0xf0
   140013588:	(bad)  
   140013589:	cmp    DWORD PTR [rcx],esp
   14001358b:	cmp    BYTE PTR [rdx],bh
   14001358d:	retf   
   14001358e:	xchg   BYTE PTR [rdi+0x4c],al
   140013591:	and    BYTE PTR [rdi-0x6cfc58e0],dh
   140013597:	jbe    0x14001351a
   140013599:	nop
   14001359a:	sbb    BYTE PTR [rcx+0x28],ch
   14001359d:	scas   al,BYTE PTR es:[rdi]
   14001359e:	xor    DWORD PTR [rcx],0xffffffc4
   1400135a1:	hlt    
   1400135a2:	sbb    BYTE PTR [rdx-0x3],bpl
   1400135a6:	sbb    DWORD PTR [rdi],0xffc7d397
   1400135ac:	scas   al,BYTE PTR es:[rdi]
   1400135ad:	ds clc 
   1400135af:	add    ch,BYTE PTR [rcx]
   1400135b1:	add    bh,BYTE PTR [rax+0x1d]
   1400135b4:	add    DWORD PTR [rcx+0x56f801bd],0xffca16e5
   1400135be:	fdivr  DWORD PTR [rbp-0x15]
   1400135c1:	(bad)  
   1400135c2:	sbb    eax,edx
   1400135c4:	cld    
   1400135c5:	rex.X xor ebx,ebp
   1400135c8:	jne    0x140013637
   1400135ca:	mov    ecx,0x76a8292d
   1400135cf:	mov    esp,0xc7dfec74
   1400135d4:	(bad)  
   1400135d5:	repz jmp 0x11dcc544c
   1400135db:	(bad)  
   1400135dc:	out    0xbd,eax
   1400135de:	mov    bh,0x98
   1400135e1:	xchg   ecx,eax
   1400135e2:	push   rax
   1400135e3:	mov    ch,0xc5
   1400135e5:	cmp    ah,dh
   1400135e7:	ret    0x9b7c
   1400135ea:	add    BYTE PTR [rsp+rdi*4+0x102326bc],dl
   1400135f1:	xor    ch,BYTE PTR [rax+0x1fd45d26]
   1400135f7:	nop
   1400135f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400135f9:	data16 cmp bl,BYTE PTR [rsi-0x1a]
   1400135fd:	(bad)  
   1400135fe:	xchg   ebx,eax
   1400135ff:	out    dx,eax
   140013600:	mov    ecx,eax
   140013602:	cmc    
   140013603:	test   BYTE PTR [rbx-0x54],0x5f
   140013607:	cmp    al,0x4d
   140013609:	jne    0x140013684
   14001360b:	or     ebx,DWORD PTR [rcx+0x3fe71aed]
   140013611:	sub    DWORD PTR [rdx+0x494fe266],ecx
   140013617:	(bad)  
   140013619:	adc    esi,ebx
   14001361b:	loope  0x1400135d1
   14001361d:	shr    eax,0xe1
   140013620:	jo     0x140013654
   140013622:	pslld  mm4,QWORD PTR [rip+0xffffffff81ef4d65]        # 0xc1f0838e
   140013629:	cmp    DWORD PTR [rbx],esp
   14001362b:	(bad)  
   14001362c:	rex.WRXB rol QWORD PTR [rip+0xffffffffd273e2d0],cl        # 0x112751903
   140013633:	(bad)  
   140013634:	sub    ecx,ecx
   140013636:	push   rdi
   140013637:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013638:	push   rdi
   140013639:	xor    eax,0x37fce07b
   14001363e:	mov    ah,0xcf
   140013640:	pop    rcx
   140013641:	sub    dl,BYTE PTR [rax]
   140013643:	(bad)  
   140013644:	(bad)  
   140013645:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013646:	rex.W add spl,0xd8
   14001364a:	and    eax,0xfbc8110f
   14001364f:	in     eax,dx
   140013650:	sbb    al,0x85
   140013652:	jbe    0x14001360a
   140013654:	xchg   edi,eax
   140013655:	ficom  WORD PTR [rcx+0x8da0423]
   14001365b:	(bad)  
   14001365c:	and    al,BYTE PTR [rip+0x7bbfdcb1]        # 0x1bbc11313
   140013662:	fsub   st(1),st
   140013664:	movabs rbx,0xdf57037183da4b70
   14001366e:	retf   
   14001366f:	in     eax,0x4f
   140013671:	cld    
   140013672:	pop    rbp
   140013673:	(bad)  
   140013674:	cld    
   140013675:	sti    
   140013676:	mov    esp,0xde80d30e
   14001367b:	add    ah,bh
   14001367d:	fiadd  WORD PTR [rax+rsi*1-0x4e]
   140013681:	iret   
   140013682:	sbb    edx,DWORD PTR [rsi+0x7]
   140013685:	(bad)  
   140013686:	sub    al,0x51
   140013688:	call   QWORD PTR [rdx]
   14001368a:	sti    
   14001368b:	mov    ebx,0x40776a0b
   140013690:	or     al,0x87
   140013692:	int    0x63
   140013694:	imul   esi,DWORD PTR [rdi],0x4f
   140013697:	rex.WRXB mov r12b,0xdc
   14001369a:	shl    cl,1
   14001369c:	in     eax,0x37
   14001369e:	mov    dh,0x6
   1400136a0:	pop    rdi
   1400136a1:	rex.WXB (bad) 
   1400136a3:	and    eax,0x4581c344
   1400136a8:	or     esp,DWORD PTR [rdx-0x71220b96]
   1400136ae:	movabs ds:0x4f50f27252706b5b,al
   1400136b7:	popf   
   1400136b8:	cmp    ecx,eax
   1400136ba:	fcom   QWORD PTR [rax]
   1400136bc:	add    edi,DWORD PTR [rax-0x4e049946]
   1400136c2:	ja     0x140013716
   1400136c4:	(bad)  
   1400136c5:	jle    0x1400136cf
   1400136c7:	mov    ecx,0xd6e2c5b6
   1400136cc:	sub    DWORD PTR [rsi],edx
   1400136ce:	mov    edx,0x73e77fb9
   1400136d3:	xchg   edx,eax
   1400136d4:	ret    0x247f
   1400136d7:	and    bh,bh
   1400136d9:	mov    cl,0xa4
   1400136db:	adc    eax,0x86dabb69
   1400136e0:	(bad)  
   1400136e1:	imul   eax,DWORD PTR [rax],0x39666188
   1400136e7:	ins    BYTE PTR es:[rdi],dx
   1400136e8:	rex.WRXB pop r13
   1400136ea:	jle    0x140013699
   1400136ec:	repnz (bad) 
   1400136ee:	in     eax,0xd5
   1400136f0:	cld    
   1400136f1:	ja     0x1400136ce
   1400136f3:	cmp    cl,BYTE PTR [rbx+rbx*1+0x21]
   1400136f7:	rex.WR movabs al,fs:0x92c3474adeb3b573
   140013702:	(bad)  
   140013703:	xlat   BYTE PTR ds:[rbx]
   140013704:	or     al,0xc2
   140013706:	movabs eax,ds:0x4526c099bc404da0
   14001370f:	rex.XB
   140013710:	cs ja  0x140013745
   140013713:	mov    dh,0x58
   140013715:	movabs ds:0x4d39a0940c361285,al
   14001371e:	rex.WB
   14001371f:	shl    BYTE PTR gs:[rdi+rsi*1],0xb0
   140013724:	in     eax,0x2f
   140013726:	je     0x140013746
   140013728:	sbb    ebx,DWORD PTR [rsi+0x10]
   14001372b:	jmp    0x18b5f2def
   140013730:	xor    ch,BYTE PTR [rax]
   140013732:	(bad)  
   140013733:	add    eax,0x52d09024
   140013738:	mov    dl,BYTE PTR [rip+0xffffffffca3c9f66]        # 0x10a3dd6a4
   14001373e:	in     al,0x1f
   140013740:	popf   
   140013741:	xor    BYTE PTR [ebp-0x69],cl
   140013745:	cdq    
   140013746:	adc    DWORD PTR [rsi+0x6f4936e7],0x0
   14001374d:	mov    esi,0xfd079915
   140013752:	mov    cl,ch
   140013754:	movabs ds:0xf359965f93243e59,al
   14001375d:	movabs al,ds:0x5ccdf25dd5232ed6
   140013766:	std    
   140013767:	cmp    eax,0xe0640247
   14001376c:	mov    gs,esp
   14001376e:	fxch   st(1)
   140013770:	cmc    
   140013771:	jnp    0x1400137da
   140013773:	mov    ebp,0x9fb789ff
   140013778:	cmp    al,0xbc
   14001377a:	in     ax,0x4f
   14001377d:	movabs rdi,0xfef26c95c41f6666
   140013787:	movabs eax,ds:0xf56119ea4057f0d
   140013790:	jno    0x14001378b
   140013792:	mov    edi,esi
   140013794:	push   rdx
   140013795:	test   al,al
   140013797:	je     0x140013794
   140013799:	and    eax,0x514fb6d6
   14001379e:	pop    rbp
   14001379f:	mov    ebp,0xd471d488
   1400137a4:	ja     0x14001377c
   1400137a6:	xor    ebp,ebp
   1400137a8:	mov    al,0xfe
   1400137aa:	(bad)  
   1400137ab:	rex.W (bad) 
   1400137ad:	fmul   st,st(0)
   1400137af:	(bad)  
   1400137b0:	rex.RXB push r14
   1400137b2:	cli    
   1400137b3:	sbb    BYTE PTR [rip+0x1cb025b4],cl        # 0x15cb15d6d
   1400137b9:	sbb    ah,ch
   1400137bb:	xchg   ebp,eax
   1400137bc:	cmp    eax,0xcacc5fb2
   1400137c1:	fst    QWORD PTR [rsi+0x8]
   1400137c4:	fcmove st,st(3)
   1400137c6:	fisub  DWORD PTR [rip+0xfffffffff904a506]        # 0x13905dcd2
   1400137cc:	movabs al,ds:0xa3d88e7bf61fd664
   1400137d5:	sbb    ecx,ebp
   1400137d7:	rex.RXB (bad) 
   1400137d9:	mov    BYTE PTR [rbx-0x2ea558cf],0x4b
   1400137e0:	(bad)  
   1400137e1:	xor    al,0x6d
   1400137e4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400137e5:	shr    DWORD PTR [rax],cl
   1400137e7:	(bad)  
   1400137e8:	shr    DWORD PTR [rbx],0x12
   1400137eb:	push   rsi
   1400137ec:	adc    bl,dh
   1400137ee:	jl     0x14001379b
   1400137f0:	adc    BYTE PTR [rax],bl
   1400137f2:	ds nop
   1400137f4:	shl    BYTE PTR [rbx],cl
   1400137f6:	repnz div BYTE PTR [rdx]
   1400137f9:	rex xchg eax,eax
   1400137fb:	repz std 
   1400137fd:	or     BYTE PTR [rcx+0x68],cl
   140013800:	mov    ebx,0x7af1108a
   140013805:	or     eax,0xc7f679b4
   14001380a:	in     al,0xc5
   14001380c:	(bad)  
   14001380d:	jle    0x140013860
   14001380f:	(bad)  
   140013810:	sti    
   140013811:	mul    DWORD PTR [rsp+rcx*4]
   140013814:	lock jne 0x1400137a9
   140013817:	(bad)  
   140013818:	hlt    
   140013819:	(bad)  
   14001381a:	loopne 0x1400137b7
   14001381c:	leave  
   14001381d:	sub    eax,0x2c6f3ec8
   140013822:	idiv   bh
   140013824:	xchg   edx,eax
   140013825:	fwait
   140013826:	retf   0xa807
   140013829:	mov    esi,DWORD PTR [rsi]
   14001382b:	inc    BYTE PTR [rbx+0x2ae9b156]
   140013831:	movabs ds:0x634bae16dfee8519,eax
   14001383a:	mov    eax,0x3a168a41
   14001383f:	int    0x3a
   140013841:	shl    esi,0xf5
   140013844:	in     eax,0xd0
   140013846:	ds (bad) 
   140013848:	loopne 0x1400138ab
   14001384a:	and    DWORD PTR [rdx+0x48],esi
   14001384d:	and    eax,0x58ab4d33
   140013852:	mov    dh,0xd4
   140013854:	push   rdi
   140013855:	enter  0xb52d,0xae
   140013859:	sahf   
   14001385a:	jno    0x14001385a
   14001385c:	mov    cl,0x77
   14001385e:	movabs ds:0xede5817cbd33f71b,eax
   140013867:	push   rbx
   140013868:	mov    WORD PTR [rdi-0x50c8dd31],?
   14001386e:	rex.RB cli 
   140013870:	mov    cl,0xe1
   140013872:	(bad)  
   140013873:	(bad)  
   140013874:	cmp    al,0xff
   140013876:	ret    0xbfbc
   140013879:	(bad)  
   14001387a:	mov    esp,0x9bf6dc84
   14001387f:	sbb    BYTE PTR cs:[rax+0x6e],0x8b
   140013884:	sub    DWORD PTR [rbp+0x7c],esi
   140013887:	scas   al,BYTE PTR es:[rdi]
   140013888:	sub    eax,0x89e525fb
   14001388d:	jns    0x14001384e
   14001388f:	mov    bl,0x32
   140013891:	lahf   
   140013892:	int3   
   140013893:	(bad)  
   140013894:	(bad)  
   140013895:	mov    DWORD PTR [rbx],esp
   140013897:	nop
   140013898:	cmp    edi,edi
   14001389a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001389b:	adc    edi,DWORD PTR [rdx-0x19]
   14001389e:	mov    esp,0x96aac81d
   1400138a3:	xchg   esp,eax
   1400138a4:	xor    r8,r15
   1400138a7:	jg     0x140013917
   1400138a9:	cmp    BYTE PTR [rax-0x701bf25a],ch
   1400138af:	in     eax,0xe7
   1400138b1:	jb     0x1400138de
   1400138b3:	xor    DWORD PTR [rbp+0x2134a6ed],ebx
   1400138b9:	mov    ebx,0xc088b76
   1400138be:	pshufw mm3,QWORD PTR [rsi-0x58],0x25
   1400138c3:	lods   al,BYTE PTR fs:[rsi]
   1400138c5:	ret    0xf8b9
   1400138c8:	adc    ebx,DWORD PTR [rdx+0x21501236]
   1400138ce:	(bad)  
   1400138cf:	and    BYTE PTR [rax-0x39],cl
   1400138d2:	test   al,0xb1
   1400138d4:	xor    eax,0xcbfd921
   1400138d9:	mov    dh,al
   1400138db:	test   al,0x60
   1400138dd:	icebp  
   1400138de:	rex.WRB fdivr QWORD PTR [r8+0xe]
   1400138e2:	clc    
   1400138e3:	ins    DWORD PTR es:[rdi],dx
   1400138e4:	mov    esi,0x2dbbadb1
   1400138e9:	rcr    BYTE PTR [rbx],cl
   1400138eb:	sbb    bh,0x4d
   1400138ee:	outs   dx,BYTE PTR ds:[rsi]
   1400138ef:	xchg   ecx,eax
   1400138f0:	idiv   DWORD PTR [rdi+0x7f7f2e47]
   1400138f6:	cmp    ebx,esp
   1400138f8:	(bad)  
   1400138f9:	or     BYTE PTR [rsi],cl
   1400138fb:	(bad)
   1400138fe:	adc    BYTE PTR [rdi+0x2b],bh
   140013901:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013902:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013903:	mov    dh,0x4b
   140013906:	stc    
   140013907:	in     al,dx
   140013908:	sbb    al,0x1f
   14001390a:	fisttp WORD PTR [rax+0x3a]
   14001390d:	and    DWORD PTR [rsi],edi
   14001390f:	(bad)  
   140013910:	xchg   edi,eax
   140013911:	fidiv  DWORD PTR [rdx]
   140013913:	pop    rax
   140013914:	sub    al,ah
   140013916:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013917:	mov    ebx,0xe52f8b13
   14001391c:	repz rex.X push 0x6bd26d1b
   140013923:	sub    DWORD PTR [rdx],ebp
   140013925:	movabs ds:0xcff7e7696905c801,al
   14001392f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013930:	rex.WR
   140013931:	ss out dx,eax
   140013933:	out    0xca,eax
   140013935:	xchg   ebx,eax
   140013936:	out    dx,eax
   140013937:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013938:	cwde   
   140013939:	int    0x68
   14001393b:	cs popf 
   14001393d:	(bad)  
   14001393e:	in     eax,dx
   14001393f:	loop   0x1400138cc
   140013941:	adc    al,0x9
   140013943:	stc    
   140013944:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140013946:	sub    al,0x92
   140013948:	not    DWORD PTR [rdi+0x3809fe08]
   14001394e:	rex.X
   14001394f:	rex.WRX pop rax
   140013951:	xor    ecx,DWORD PTR [rcx+0x2e]
   140013954:	sub    DWORD PTR [rcx],ecx
   140013956:	popf   
   140013957:	rcr    BYTE PTR [rax-0x1097900a],1
   14001395d:	in     al,dx
   14001395e:	ss je  0x1400138ff
   140013961:	rex.WRXB add r10,r10
   140013964:	fwait
   140013965:	push   rdx
   140013966:	imul   edx,DWORD PTR [rax-0x4f8be47c],0x39d17983
   140013970:	and    ebx,DWORD PTR [rbx+0x71c734df]
   140013976:	nop
   140013977:	or     BYTE PTR [rdx],al
   140013979:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001397a:	push   rax
   14001397b:	sub    BYTE PTR [rbp-0x79],bl
   14001397e:	pushf  
   14001397f:	nop
   140013980:	ja     0x1400139b2
   140013982:	test   DWORD PTR [rsp+riz*4-0x5b87795e],esp
   140013989:	imul   ebp,DWORD PTR [rbp+rbp*1-0x3b],0x66
   14001398e:	ins    BYTE PTR es:[rdi],dx
   14001398f:	(bad)  
   140013990:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013991:	pushf  
   140013992:	mov    eax,0x2337ed0e
   140013997:	cld    
   140013998:	jns    0x1400139c1
   14001399a:	popf   
   14001399b:	and    esi,DWORD PTR [rdx-0x4b05db83]
   1400139a1:	pop    rbp
   1400139a2:	(bad)  
   1400139a3:	jl     0x1400139ef
   1400139a5:	rex.WXB int3 
   1400139a7:	ds mov edi,0x5defecc6
   1400139ad:	movabs eax,ds:0xd0047b6e8292d19c
   1400139b6:	ja     0x1400139bb
   1400139b8:	jle    0x1400139dd
   1400139ba:	imul   ebx,DWORD PTR [rcx+0x7ff4397e],0x1de37173
   1400139c4:	rex.XB popf 
   1400139c6:	std    
   1400139c7:	(bad)
   1400139cc:	or     DWORD PTR [rsi-0x46],edi
   1400139cf:	xchg   DWORD PTR [rdi+0x7de3dbee],ebx
   1400139d5:	mov    ch,BYTE PTR [rcx-0x64]
   1400139d8:	int3   
   1400139d9:	jrcxz  0x140013981
   1400139db:	jno    0x1400139ff
   1400139dd:	(bad)  
   1400139de:	lahf   
   1400139df:	rex.WRX jo 0x1400139f5
   1400139e2:	pop    rbx
   1400139e3:	xchg   ebp,eax
   1400139e4:	cmp    cl,BYTE PTR [ecx+0x29d3791d]
   1400139eb:	cmp    bl,BYTE PTR [rbp+0x42536612]
   1400139f1:	cmp    eax,0xe938eb41
   1400139f6:	(bad)  
   1400139f7:	jmp    0x1400139d7
   1400139f9:	jae    0x1400139bc
   1400139fb:	pop    rdx
   1400139fc:	jp     0x140013a41
   1400139fe:	sbb    eax,0x1ca9ffb9
   140013a03:	cwde   
   140013a04:	cwde   
   140013a05:	test   BYTE PTR [rbp+0x1a],dh
   140013a08:	or     DWORD PTR [rsi-0x39],edx
   140013a0b:	rex.W and al,BYTE PTR [rbx-0x3b572e7a]
   140013a12:	hlt    
   140013a13:	add    DWORD PTR [rax+0x2],ebp
   140013a16:	test   DWORD PTR [rdx],ebp
   140013a18:	pop    rbx
   140013a19:	iret   
   140013a1a:	jl     0x140013a24
   140013a1c:	push   rsi
   140013a1d:	(bad)  
   140013a1e:	push   rdx
   140013a1f:	pop    rdi
   140013a20:	(bad)  [rdx+0x75]
   140013a23:	sti    
   140013a24:	adc    al,0xc3
   140013a26:	rex.WXB out 0x71,eax
   140013a29:	mov    ebx,0x9ff223d7
   140013a2e:	rex.XB pop r9
   140013a30:	imul   edi,edx,0x11
   140013a33:	leave  
   140013a34:	movabs eax,ds:0x2de671fc473093bf
   140013a3d:	fisttp DWORD PTR [rcx-0x41]
   140013a40:	xchg   edx,eax
   140013a41:	ret    
   140013a42:	jp     0x140013a8b
   140013a44:	(bad)  
   140013a45:	std    
   140013a46:	outs   dx,DWORD PTR ds:[rsi]
   140013a47:	cmp    eax,0xa7a10924
   140013a4c:	push   rbx
   140013a4d:	or     eax,0xe77fb948
   140013a52:	jge    0x140013a7d
   140013a54:	jne    0x140013a46
   140013a56:	imul   esi,DWORD PTR [rsi],0xc80f0760
   140013a5c:	(bad)  
   140013a5d:	and    eax,ebx
   140013a5f:	jrcxz  0x1400139f5
   140013a61:	retf   
   140013a62:	(bad)  
   140013a63:	in     eax,0xcf
   140013a65:	xchg   BYTE PTR [rbx],ah
   140013a67:	test   esi,edi
   140013a69:	sar    dh,cl
   140013a6b:	popf   
   140013a6c:	pop    rdi
   140013a6d:	imul   edx,ebx,0xffffff86
   140013a70:	mov    ecx,0xba292320
   140013a75:	in     eax,0x1f
   140013a77:	jns    0x140013aa9
   140013a79:	rex.W (bad) 
   140013a7b:	sub    dl,BYTE PTR [rcx]
   140013a7d:	addr32 mov esi,es
   140013a80:	(bad)  
   140013a81:	jne    0x140013acb
   140013a83:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   140013a85:	and    DWORD PTR [rbx+0x70],0xffffffe0
   140013a89:	pop    rdx
   140013a8a:	mov    ah,0x47
   140013a8c:	fiadd  WORD PTR [rip+0xfffffffff0929547]        # 0x13093cfd9
   140013a92:	(bad)  
   140013a93:	iret   
   140013a94:	retf   
   140013a95:	xlat   BYTE PTR ds:[rbx]
   140013a96:	fmulp  st(6),st
   140013a98:	jmp    0x140013a46
   140013a9a:	rex.XB mov r8b,0x8f
   140013a9d:	add    BYTE PTR [rsi+0x25],ch
   140013aa0:	mov    bh,0x68
   140013aa2:	lock cmp DWORD PTR [rsi-0x1ed17020],edi
   140013aa9:	jg     0x140013ae4
   140013aab:	mov    eax,0xd8d306c1
   140013ab0:	(bad)  
   140013ab1:	sbb    esi,DWORD PTR [rbx-0xf]
   140013ab4:	js     0x140013ad9
   140013ab6:	rex.RXB jbe 0x140013b21
   140013ab9:	repnz shl dh,1
   140013abc:	jge    0x140013b30
   140013abe:	and    DWORD PTR [rdx-0x10b068a5],edi
   140013ac4:	mov    cl,0xe8
   140013ac6:	sar    BYTE PTR [rsp+rdi*2],0xfa
   140013aca:	pop    rbx
   140013acb:	rex.X stos BYTE PTR es:[rdi],al
   140013acd:	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
   140013acf:	xchg   ebp,eax
   140013ad0:	jp     0x140013a67
   140013ad2:	outs   dx,BYTE PTR ds:[rsi]
   140013ad3:	(bad)  
   140013ad4:	sub    al,0xe9
   140013ad6:	mov    ecx,0x597bc924
   140013adb:	(bad)  
   140013adc:	xchg   ecx,eax
   140013add:	(bad)  
   140013ade:	enter  0x274d,0xec
   140013ae2:	sbb    eax,0xdf97237f
   140013ae7:	clc    
   140013ae8:	sub    al,0xd5
   140013aea:	fs (bad) 
   140013aec:	mov    dh,0x5f
   140013aee:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140013af0:	jrcxz  0x140013aef
   140013af2:	movsxd eax,DWORD PTR [rdi]
   140013af4:	pop    rsp
   140013af5:	(bad)  
   140013af6:	jge    0x140013b05
   140013af8:	(bad)  
   140013af9:	stc    
   140013afa:	ja     0x140013b10
   140013afc:	stos   BYTE PTR es:[rdi],al
   140013afd:	adc    al,0x4e
   140013aff:	jae    0x140013ada
   140013b01:	(bad)  
   140013b02:	scas   eax,DWORD PTR es:[rdi]
   140013b03:	not    DWORD PTR [rdi+0x18a8f751]
   140013b09:	sbb    DWORD PTR [rsp+rsi*4],eax
   140013b0c:	test   DWORD PTR [rcx],0x4c6f68ed
   140013b12:	jno    0x140013b4c
   140013b14:	mov    al,0xea
   140013b16:	(bad)  
   140013b17:	mov    ebp,0x292835b1
   140013b1c:	(bad)  
   140013b1d:	outs   dx,BYTE PTR ds:[rsi]
   140013b1e:	and    DWORD PTR [rcx+rcx*8+0x3a],ecx
   140013b22:	sub    al,0x59
   140013b24:	loope  0x140013ada
   140013b26:	jae    0x140013b16
   140013b28:	xchg   edx,eax
   140013b29:	rex.XB sti 
   140013b2b:	xchg   esp,eax
   140013b2c:	adc    eax,0x1c7cb9b4
   140013b31:	mul    cl
   140013b33:	sub    al,0x5d
   140013b35:	mov    bh,bl
   140013b37:	iret   
   140013b38:	xchg   ebp,eax
   140013b39:	xchg   edx,eax
   140013b3a:	mov    eax,0x3fe103f5
   140013b3f:	pop    rcx
   140013b40:	xor    DWORD PTR [rip+0xffffffffef35230d],0x1d88e2f        # 0x12f365e57
   140013b4a:	enter  0xe37c,0x53
   140013b4e:	fwait
   140013b4f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013b50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013b51:	(bad)  
   140013b52:	mov    esi,0xc250f2b3
   140013b57:	ins    BYTE PTR es:[rdi],dx
   140013b58:	movabs al,ds:0x9b909d19094e41dd
   140013b61:	lahf   
   140013b62:	add    esi,edi
   140013b64:	(bad)  
   140013b65:	pop    rsi
   140013b66:	rex.RXB imul r8d,DWORD PTR [r8+0x6f],0x7adc9200
   140013b6e:	push   rbp
   140013b6f:	pop    rsi
   140013b70:	sete   bl
   140013b73:	stos   BYTE PTR es:[rdi],al
   140013b74:	sbb    al,0xdd
   140013b76:	mov    edi,0xdcd7f4b9
   140013b7b:	cs rex.WRXB jmp 0x140013b7d
   140013b7f:	scas   al,BYTE PTR es:[rdi]
   140013b80:	rex.WRB popf 
   140013b82:	or     ch,al
   140013b84:	fs (bad) 
   140013b86:	(bad)  
   140013b87:	out    0xec,eax
   140013b89:	sbb    BYTE PTR [rsi+0x39],0xff
   140013b8d:	jmp    0x140013b7f
   140013b8f:	out    dx,eax
   140013b90:	adc    esi,DWORD PTR [rdi-0x23]
   140013b93:	(bad)  
   140013b94:	xor    r8b,BYTE PTR [rdx+0x6f]
   140013b98:	(bad)  
   140013b99:	and    BYTE PTR [rbx+0x2a52d6],dh
   140013b9f:	sbb    eax,0x64ff8fa5
   140013ba4:	or     al,0x21
   140013ba6:	add    eax,0xdb6fe9ae
   140013bab:	xchg   edi,eax
   140013bac:	rex retf 
   140013bae:	xchg   BYTE PTR [rbx+0x2],ch
   140013bb1:	(bad)  
   140013bb2:	jnp    0x140013b82
   140013bb4:	mov    esp,0xc2dc39f5
   140013bb9:	sbb    dh,ch
   140013bbb:	(bad)
   140013bbe:	fidivr DWORD PTR [rsi]
   140013bc0:	int    0xf0
   140013bc2:	mov    dl,0x79
   140013bc4:	jmp    QWORD PTR [rsi-0x26]
   140013bc7:	cs jg  0x140013c37
   140013bca:	cmp    al,0x7f
   140013bcc:	(bad)  
   140013bcd:	mov    dh,0xca
   140013bcf:	(bad)  
   140013bd0:	loopne 0x140013c06
   140013bd2:	loopne 0x140013c41
   140013bd4:	xchg   ecx,eax
   140013bd5:	mov    WORD PTR [rsp+rsi*8+0xf936dc9],gs
   140013bdc:	and    esp,DWORD PTR [rdx+0x10]
   140013bdf:	or     ebp,eax
   140013be1:	cmp    esi,DWORD PTR [rax]
   140013be3:	leave  
   140013be4:	(bad)  
   140013be5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013be6:	rcr    BYTE PTR [rcx-0x2e],0xb6
   140013bea:	adc    cl,bl
   140013bec:	(bad)  
   140013bed:	xchg   esp,eax
   140013bee:	rex.WRX
   140013bef:	imul   rdx,QWORD PTR [rbx+rdx*8],0xffffffffffffffce
   140013bf4:	push   rdx
   140013bf5:	pop    rdx
   140013bf6:	sar    DWORD PTR [rcx],1
   140013bf8:	(bad)
   140013bfb:	push   rsi
   140013bfc:	icebp  
   140013bfd:	and    eax,0xa3353d1b
   140013c02:	(bad)  
   140013c03:	adc    cl,bl
   140013c05:	sbb    DWORD PTR [rcx-0x35],0x8d12b7d3
   140013c0c:	rex.WR movabs rbx,0xb8b812779a1b6866
   140013c16:	or     eax,0xd90daec1
   140013c1b:	sbb    BYTE PTR [rax],bh
   140013c1d:	(bad)  
   140013c1e:	rex.W mov bpl,bpl
   140013c21:	shr    DWORD PTR [rdx+0x4c],0xcb
   140013c25:	rex.WRX
   140013c26:	rex xchg eax,eax
   140013c28:	jne    0x140013be9
   140013c2a:	or     edi,DWORD PTR [rax]
   140013c2c:	cmp    ah,BYTE PTR [rdx]
   140013c2e:	es cdq 
   140013c30:	rex.WX test QWORD PTR [rsi],rcx
   140013c33:	gs rex.B
   140013c35:	fwait
   140013c36:	(bad)  
   140013c37:	jge    0x140013bd0
   140013c39:	pop    rsp
   140013c3a:	clc    
   140013c3b:	(bad)  
   140013c3d:	rex.X (bad) 
   140013c3f:	ins    BYTE PTR es:[rdi],dx
   140013c40:	xchg   ecx,eax
   140013c41:	rol    al,0xdb
   140013c44:	pushf  
   140013c45:	(bad)  
   140013c46:	hlt    
   140013c47:	(bad)  
   140013c48:	loopne 0x140013c20
   140013c4a:	mov    bl,BYTE PTR [rdi-0x4841006b]
   140013c50:	mov    esi,0xcba3fefb
   140013c55:	ret    
   140013c56:	(bad)  
   140013c57:	push   rbp
   140013c58:	pop    rsp
   140013c59:	jp     0x140013c44
   140013c5b:	mov    esp,DWORD PTR [rdx+0xa9c4db5]
   140013c61:	xor    al,0xa1
   140013c63:	shl    DWORD PTR [rdi-0x2139a4cf],0xcb
   140013c6a:	(bad)  
   140013c6b:	(bad)  
   140013c6c:	in     al,dx
   140013c6d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013c6e:	mov    ds,esi
   140013c70:	(bad)  
   140013c71:	xchg   ecx,eax
   140013c72:	sbb    eax,0x65ec6673
   140013c77:	jnp    0x140013c4a
   140013c79:	xor    DWORD PTR [rsi],eax
   140013c7b:	cdq    
   140013c7c:	(bad)
   140013c7f:	shl    dl,1
   140013c81:	add    dh,dh
   140013c83:	neg    DWORD PTR [esi-0x77]
   140013c87:	pop    rax
   140013c88:	rex.XB mov r12d,0x314e64f3
   140013c8e:	adc    eax,0xf6b94e99
   140013c93:	clc    
   140013c94:	cmp    edi,DWORD PTR [rcx+0x307786fe]
   140013c9a:	fidivr WORD PTR [rdi-0x7e812077]
   140013ca0:	in     eax,0xed
   140013ca2:	xor    edx,DWORD PTR [rdi+rdx*2]
   140013ca5:	mov    bh,0xa1
   140013ca7:	fimul  WORD PTR [rbx+0x76112296]
   140013cad:	and    eax,0xa6c47f11
   140013cb2:	std    
   140013cb3:	mov    dh,0xd3
   140013cb5:	jle    0x140013c71
   140013cb7:	fimul  WORD PTR [rdi]
   140013cb9:	imul   ebp,DWORD PTR [rcx],0x50036dc0
   140013cbf:	jmp    0x140013ca6
   140013cc1:	repz movabs al,ds:0x4459f7a40466c14c
   140013ccb:	ror    BYTE PTR [rcx+0x1],1
   140013cce:	pop    rdx
   140013ccf:	loopne 0x140013d01
   140013cd1:	sbb    bl,BYTE PTR [rdi-0x6d8f4712]
   140013cd7:	icebp  
   140013cd8:	xor    BYTE PTR [rdx],bl
   140013cda:	scas   eax,DWORD PTR es:[rdi]
   140013cdb:	fs fcmovnbe st,st(0)
   140013cde:	push   rcx
   140013cdf:	xlat   BYTE PTR ds:[rbx]
   140013ce0:	pop    rsp
   140013ce1:	jne    0x140013ccc
   140013ce3:	pop    rsp
   140013ce4:	imul   esi,DWORD PTR [rbx],0x7e
   140013ce7:	jmp    0xff95971c
   140013cec:	jnp    0x140013d17
   140013cee:	(bad)  [rbp-0x1cbaaff]
   140013cf4:	in     al,0xa8
   140013cf6:	and    BYTE PTR [rdx+0x9],dh
   140013cf9:	xchg   edx,eax
   140013cfa:	xchg   ecx,eax
   140013cfb:	adc    bh,ah
   140013cfd:	adc    BYTE PTR [rdi+0x6b6808a6],dl
   140013d03:	out    0x92,eax
   140013d05:	xchg   ecx,eax
   140013d06:	mov    al,0xe8
   140013d08:	(bad)  
   140013d09:	mov    ecx,0xf60838b8
   140013d0e:	fucom  st(6)
   140013d10:	push   0x1fb7d346
   140013d15:	lahf   
   140013d16:	rex.RXB movabs al,ds:0x2ff9deb629fe3c20
   140013d20:	cmp    dl,dh
   140013d22:	mov    edi,0x6e034dd2
   140013d27:	movsxd esi,DWORD PTR [rip+0x35dee0]        # 0x140371c0d
   140013d2d:	repz retf 
   140013d2f:	je     0x140013d4e
   140013d31:	push   rsp
   140013d32:	jl     0x140013d33
   140013d34:	in     al,dx
   140013d35:	addr32 mov esi,0x6d64ecf0
   140013d3b:	repz mov esi,DWORD PTR [rbp-0x2a348836]
   140013d42:	or     eax,DWORD PTR [rdi+0x74]
   140013d45:	imul   DWORD PTR [rdx]
   140013d47:	pop    rdx
   140013d48:	out    dx,eax
   140013d49:	(bad)  
   140013d4a:	fwait
   140013d4b:	mov    bl,0x69
   140013d4d:	push   0xffffffffe282069a
   140013d52:	lods   eax,DWORD PTR ds:[rsi]
   140013d53:	pushf  
   140013d54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013d55:	sbb    ah,BYTE PTR [rdi-0x10]
   140013d58:	int    0x95
   140013d5a:	lods   al,BYTE PTR ds:[rsi]
   140013d5b:	mov    edx,0xb4002c92
   140013d60:	ficomp WORD PTR [rax+rsi*1-0x12]
   140013d64:	jle    0x140013da1
   140013d66:	test   DWORD PTR cs:[ecx+ebx*2+0x3f8853a7],esi
   140013d6f:	out    0xf0,eax
   140013d71:	xchg   ebx,eax
   140013d72:	(bad)  
   140013d73:	or     edx,DWORD PTR [rsi]
   140013d75:	jne    0x140013d2d
   140013d77:	(bad)  
   140013d78:	test   DWORD PTR [rsi-0x7a],esp
   140013d7b:	or     al,0xc7
   140013d7d:	pushf  
   140013d7e:	jns    0x140013d6b
   140013d80:	(bad)  
   140013d81:	sbb    DWORD PTR [rbx+rcx*1+0x34],edx
   140013d85:	(bad)  
   140013d86:	sahf   
   140013d87:	addr32 jae 0x140013d75
   140013d8a:	xor    al,0xd5
   140013d8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d8d:	repz enter 0xdfe,0xd0
   140013d92:	pop    rcx
   140013d93:	sbb    esp,DWORD PTR [rdx+0x63]
   140013d96:	adc    edi,DWORD PTR [rsi+0x24]
   140013d99:	sar    DWORD PTR [rsi-0x2d],1
   140013d9c:	ror    BYTE PTR [rdi+0x5dcc6258],0x7b
   140013da3:	popf   
   140013da4:	mov    esp,0x4723593d
   140013da9:	rex.X clc 
   140013dab:	fninit 
   140013dad:	rex.WX cmp BYTE PTR [rdx+0x76],0xf7
   140013db2:	xchg   edx,eax
   140013db3:	push   rdx
   140013db4:	add    BYTE PTR [rip+0xffffffff8ab706b5],ah        # 0xcab8446f
   140013dba:	adc    al,0x7f
   140013dbc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013dbd:	push   rsp
   140013dbe:	cmp    eax,0x3af9bd1b
   140013dc3:	movabs eax,ds:0xc591ae90231dab3d
   140013dcc:	icebp  
   140013dcd:	sub    ebp,ecx
   140013dcf:	rex.WX (bad) 
   140013dd1:	rcl    BYTE PTR [rsi+rcx*2+0x7778db4],1
   140013dd8:	ror    DWORD PTR [rbx],cl
   140013dda:	xor    eax,0x6307c23
   140013ddf:	iret   
   140013de0:	jg     0x140013e1d
   140013de2:	jmp    0x16ad99393
   140013de7:	jge    0x140013d9d
   140013de9:	jns    0x140013e54
   140013deb:	mov    WORD PTR [rax-0x56],ds
   140013dee:	cmc    
   140013def:	mov    bh,0xc7
   140013df1:	and    al,0x29
   140013df3:	in     al,0xcf
   140013df5:	push   rsi
   140013df6:	test   al,0xb3
   140013df8:	in     eax,0xf8
   140013dfa:	mov    edx,0xbbff631c
   140013dff:	cmp    edi,0x46d1980d
   140013e05:	add    DWORD PTR [rdi+0x32dee4d],esi
   140013e0b:	lock lea edi,[rbp+0x23fc03bd]
   140013e12:	iret   
   140013e13:	mov    esp,0x47c1ed7d
   140013e18:	(bad)  
   140013e19:	sti    
   140013e1a:	push   rsp
   140013e1b:	xor    eax,0xfbd97d1e
   140013e20:	(bad)  
   140013e21:	cmp    eax,0xb858ae7b
   140013e26:	mov    fs,WORD PTR [rbx+0x5612af19]
   140013e2c:	(bad)  
   140013e2d:	jrcxz  0x140013dca
   140013e2f:	cdq    
   140013e30:	and    eax,edi
   140013e32:	mov    cl,0xcb
   140013e34:	(bad)  
   140013e35:	adc    BYTE PTR [rbx+rbp*2+0x259e89af],ch
   140013e3c:	sub    BYTE PTR [rdx-0x39],dl
   140013e3f:	leave  
   140013e40:	cmp    al,0xa2
   140013e42:	test   eax,0x98f6cce3
   140013e47:	jb     0x140013ec7
   140013e49:	xchg   edx,eax
   140013e4a:	(bad)  
   140013e4b:	vhsubps xmm5,xmm12,XMMWORD PTR [rsi]
   140013e4f:	xchg   edi,eax
   140013e50:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e51:	movabs ds:0xf9496b18e687ede0,eax
   140013e5a:	movabs ds:0xb099ae2884d3744e,eax
   140013e63:	std    
   140013e64:	clc    
   140013e65:	(bad)  
   140013e66:	fnstcw WORD PTR [rdi]
   140013e68:	icebp  
   140013e69:	or     al,0xc3
   140013e6b:	pop    rbp
   140013e6c:	sbb    esi,ebx
   140013e6e:	mov    ebp,0xc6fe32fd
   140013e73:	adc    eax,0xc89d27a8
   140013e78:	and    al,0xba
   140013e7a:	(bad)
   140013e7d:	ja     0x140013ef7
   140013e7f:	xor    eax,0x7fd09fef
   140013e84:	imul   ebp,DWORD PTR [rdi],0x62e0f44c
   140013e8a:	rex.RX mov DWORD PTR [rdx],0xce3f217c
   140013e91:	movabs al,ds:0x4a7cc0191c9e7e5f
   140013e9a:	sar    BYTE PTR [rdx-0x5],1
   140013e9d:	jns    0x140013f01
   140013e9f:	push   rax
   140013ea0:	mov    dl,0x8
   140013ea2:	jae    0x140013eee
   140013ea4:	sbb    DWORD PTR [rcx+rbp*1],edx
   140013ea7:	adc    cl,BYTE PTR [rcx-0x33a8d5d9]
   140013ead:	jmp    0x140013eea
   140013eaf:	sbb    al,0x4
   140013eb1:	mov    ch,0x9c
   140013eb3:	lahf   
   140013eb4:	js     0x140013ef3
   140013eb6:	push   rdx
   140013eb7:	addr32 jno 0x140013f05
   140013eba:	and    DWORD PTR [rsi-0x2d],ebp
   140013ebd:	scas   eax,DWORD PTR es:[rdi]
   140013ebe:	xchg   esp,eax
   140013ebf:	sub    bl,BYTE PTR [rcx+0x7f5f5aaa]
   140013ec5:	mov    edx,0x9fe86d70
   140013eca:	xor    DWORD PTR [rdx],eax
   140013ecc:	or     DWORD PTR [rax+0x62],0xffffffd4
   140013ed0:	(bad)
   140013ed5:	add    BYTE PTR [rax+0x4750230],dl
   140013edb:	or     DWORD PTR [rcx+0x88e4474],ebx
   140013ee1:	or     al,0xdf
   140013ee3:	rex.W cmp BYTE PTR [rax],al
   140013ee6:	xor    BYTE PTR [rdx+0x720fc0fe],ah
   140013eec:	out    0xf0,al
   140013eee:	(bad)  
   140013eef:	in     al,0xc4
   140013ef1:	rex.WXB
   140013ef2:	rex
   140013ef3:	rex.WRB mov WORD PTR [r10],es
   140013ef6:	outs   dx,BYTE PTR ds:[rsi]
   140013ef7:	pop    rbx
   140013ef8:	xchg   eax,esp
   140013efa:	mov    ebp,0x89be0061
   140013eff:	mov    bh,0x7f
   140013f01:	mul    DWORD PTR [rdi+0x78d4ff3f]
   140013f07:	gs in  eax,dx
   140013f09:	jae    0x140013f60
   140013f0b:	xor    eax,0xbbd29efc
   140013f10:	(bad)  
   140013f11:	and    DWORD PTR ss:[rax],esp
   140013f14:	movabs eax,ds:0xe2cec15de09eb166
   140013f1d:	and    dl,bl
   140013f1f:	loop   0x140013f62
   140013f21:	mov    ah,0xa8
   140013f23:	sub    BYTE PTR [rdi],ch
   140013f25:	popf   
   140013f26:	mov    ebx,esp
   140013f28:	mov    eax,0x666f850c
   140013f2d:	or     eax,0xbbfad53e
   140013f32:	lods   al,BYTE PTR ds:[rsi]
   140013f33:	mov    ebp,0x460f8666
   140013f38:	fdiv   DWORD PTR [rcx]
   140013f3a:	sub    edx,DWORD PTR [rax-0xd671c47]
   140013f40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013f41:	in     eax,0xad
   140013f43:	repz pop rbp
   140013f45:	scas   eax,DWORD PTR es:[rdi]
   140013f46:	jmp    0xe6e064e9
   140013f4b:	fnsave [rdx+0x17]
   140013f4e:	popf   
   140013f4f:	sbb    ecx,DWORD PTR [rsi+rsi*8-0x2dcc13b1]
   140013f56:	(bad)  
   140013f57:	test   ch,ah
   140013f59:	rex.WRB (bad) 
   140013f5b:	mov    esp,0x9c0c13e5
   140013f60:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013f62:	pushf  
   140013f63:	gs jne 0x140013f61
   140013f66:	rex.RB stos BYTE PTR es:[rdi],al
   140013f68:	sub    edx,DWORD PTR [rdi]
   140013f6a:	ficomp DWORD PTR [rcx+0x7f]
   140013f6d:	adc    dh,BYTE PTR [rbx]
   140013f6f:	rcl    BYTE PTR [rbx+rax*8-0x85d1de9],cl
   140013f76:	push   rdi
   140013f77:	lods   al,BYTE PTR ds:[rsi]
   140013f78:	out    0xbf,eax
   140013f7a:	mov    bl,0xd2
   140013f7c:	(bad)  
   140013f7d:	mov    ah,0xde
   140013f7f:	(bad)  
   140013f81:	pop    rbx
   140013f82:	pop    rcx
   140013f83:	mov    ecx,0x2ec6b2b3
   140013f88:	cmp    cl,cl
   140013f8a:	rex.XB
   140013f8b:	rex.X cmp al,bl
   140013f8e:	(bad)  
   140013f8f:	movabs eax,ds:0xefa48028da45fb45
   140013f98:	lods   eax,DWORD PTR ds:[rsi]
   140013f99:	(bad)  
   140013f9a:	outs   dx,BYTE PTR ds:[rsi]
   140013f9b:	fwait
   140013f9c:	mov    edx,edx
   140013f9e:	adc    edx,edx
   140013fa0:	(bad)  
   140013fa1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013fa2:	push   rsi
   140013fa3:	loope  0x140013f92
   140013fa5:	fstp   QWORD PTR [rbp-0x6692eaf5]
   140013fab:	sbb    eax,0x6fab58a3
   140013fb0:	(bad)  
   140013fb1:	(bad)  
   140013fb2:	ins    BYTE PTR es:[rdi],dx
   140013fb3:	pop    rbx
   140013fb4:	outs   dx,BYTE PTR ds:[rsi]
   140013fb5:	or     eax,0x79213a44
   140013fba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013fbb:	mov    esi,0xace35e49
   140013fc0:	cmp    eax,0x889756f
   140013fc5:	imul   r15d,DWORD PTR [rax+0x3592373a],0x24
   140013fcd:	and    bx,WORD PTR [rbp*2+0x395a3473]
   140013fd5:	movabs ds:0x41fe3c25e2409033,al
   140013fde:	mov    ecx,0xa87fe1f4
   140013fe3:	(bad)  
   140013fe4:	(bad)  
   140013fe5:	xor    DWORD PTR [rbp-0x7fac1283],ebp
   140013feb:	push   rdi
   140013fec:	pop    rbp
   140013fed:	mov    esi,0xe87fb789
   140013ff2:	lods   eax,DWORD PTR ds:[rsi]
   140013ff3:	out    dx,eax
   140013ff4:	pop    rsp
   140013ff5:	cmp    edx,esi
   140013ff7:	enter  0xef63,0x1b
   140013ffb:	(bad)  
   140013ffc:	sub    al,0x7f
   140013ffe:	(bad)  
   140013fff:	(bad)  
   140014000:	in     eax,0xfb
   140014002:	(bad)  
   140014003:	mov    al,0x11
   140014005:	or     eax,0x570e475
   14001400a:	(bad)  
   14001400b:	jle    0x140014049
   14001400d:	push   0x26
   14001400f:	push   rsp
   140014010:	movabs eax,ds:0xba9c79b7b25546e6
   140014019:	sub    BYTE PTR [rcx],dl
   14001401b:	out    0x23,eax
   14001401d:	gs mov bh,0xa9
   140014020:	movabs eax,ds:0xec17134d140869a9
   140014029:	int3   
   14001402a:	imul   ebp,esi,0x29
   14001402d:	rex.WX sbb rax,0x6d08ae17
   140014033:	push   0x30
   140014035:	test   DWORD PTR [rbp-0x59],0x1d8bbeaf
   14001403c:	nop
   14001403d:	adc    al,0xbe
   14001403f:	cmp    eax,DWORD PTR [rdx+0x3c]
   140014042:	jns    0x140014043
   140014044:	or     DWORD PTR [rdx+0x2a88f9d0],0x5e
   14001404b:	imul   ecx,esi,0xffffffbc
   14001404e:	in     eax,0xa3
   140014050:	xor    al,0x87
   140014052:	fild   WORD PTR [rax-0x5a7a8645]
   140014058:	mov    esp,DWORD PTR [rdi+0x167cb858]
   14001405e:	mov    bh,0x73
   140014060:	add    eax,0xb42404c2
   140014065:	sahf   
   140014066:	xchg   ecx,eax
   140014067:	fsub   st,st(3)
   140014069:	out    dx,eax
   14001406a:	and    eax,0x304fd35
   14001406f:	add    DWORD PTR [rbp-0x2c4a01bb],esi
   140014075:	(bad)  
   140014076:	rex.XB push r12
   140014078:	add    BYTE PTR [rdi+0x7d7915ee],ah
   14001407e:	or     DWORD PTR cs:[rcx-0x2069317b],0xffffffa7
   140014086:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014087:	ret    0x5245
   14001408a:	push   rbp
   14001408b:	movabs al,ds:0x2d9fde5a19e232fd
   140014094:	rex.X (bad) 
   140014096:	xchg   esp,eax
   140014097:	rex.WRXB (bad) 
   140014099:	jg     0x140014116
   14001409b:	mov    ?,ecx
   14001409d:	push   rdx
   14001409e:	in     al,0x32
   1400140a0:	movabs al,ds:0x84185b75f93e8101
   1400140a9:	ss fcmovbe st,st(2)
   1400140ac:	(bad)  
   1400140ad:	push   rdi
   1400140ae:	jb     0x1400140de
   1400140b0:	pop    rsp
   1400140b1:	out    dx,eax
   1400140b2:	pop    rsi
   1400140b3:	mov    edx,0xfbaf8b0e
   1400140b8:	(bad)  
   1400140b9:	mov    BYTE PTR [rbp-0x6e7d92cf],dl
   1400140bf:	adc    eax,ecx
   1400140c1:	mov    eax,esi
   1400140c3:	mov    ebx,0x25f9b323
   1400140c8:	(bad)  
   1400140c9:	add    al,0xf6
   1400140cb:	and    DWORD PTR [rbx],ecx
   1400140cd:	or     al,0xda
   1400140cf:	enter  0x25ad,0x31
   1400140d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400140d4:	jae    0x140014126
   1400140d6:	(bad)  
   1400140d7:	jne    0x1400140cb
   1400140d9:	rex.WB loopne 0x14001415b
   1400140dc:	movabs ds:0xee5db7fbac92141d,al
   1400140e5:	add    esi,DWORD PTR ds:[rax]
   1400140e8:	scas   eax,DWORD PTR es:[rdi]
   1400140e9:	clc    
   1400140ea:	out    dx,al
   1400140eb:	ror    BYTE PTR [rdi-0x601c1981],0x7d
   1400140f2:	ret    
   1400140f3:	repnz loope 0x140014099
   1400140f6:	lahf   
   1400140f7:	scas   eax,DWORD PTR es:[rdi]
   1400140f8:	(bad)  
   1400140f9:	or     edi,0xffffffab
   1400140fc:	(bad)  
   1400140fd:	ficomp WORD PTR [rsi-0x6c5989c4]
   140014103:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014104:	cmp    al,0xdd
   140014106:	(bad)  
   140014107:	push   rbp
   140014108:	sbb    al,0x45
   14001410a:	test   al,0x59
   14001410c:	ins    DWORD PTR es:[rdi],dx
   14001410d:	data16 mov WORD PTR [rbp+rax*8-0x73],ds
   140014112:	(bad)  
   140014113:	movabs ds:0x1d291497c2928acc,eax
   14001411c:	rol    BYTE PTR [rax+0x30],1
   14001411f:	(bad)  
   140014120:	mov    edi,0xaa1fa75a
   140014125:	add    al,0xd
   140014127:	mov    cl,0x3d
   140014129:	pop    rax
   14001412a:	adc    eax,0x93409ad5
   14001412f:	xchg   ebp,eax
   140014130:	mov    ebx,0xeb7aa7d3
   140014135:	out    0x52,eax
   140014137:	sub    BYTE PTR [rbx+0x20],bh
   14001413a:	rex.XB pushf 
   14001413c:	sti    
   14001413d:	rex.W jbe 0x1400141bd
   140014140:	loopne 0x1400141a8
   140014142:	sti    
   140014143:	in     al,dx
   140014144:	sahf   
   140014145:	js     0x1400140c9
   140014147:	jae    0x140014198
   140014149:	(bad)  
   14001414a:	(bad)  
   14001414b:	push   rax
   14001414c:	add    ebx,DWORD PTR [rdx+rdi*2-0x77]
   140014150:	(bad)  
   140014151:	mov    esp,DWORD PTR [rdi-0x3ba351d7]
   140014157:	in     eax,dx
   140014158:	out    dx,eax
   140014159:	and    dl,bl
   14001415b:	sbb    cl,ch
   14001415d:	xlat   BYTE PTR ds:[rbx]
   14001415e:	fldcw  WORD PTR [rsi-0x3b1cb1fe]
   140014164:	lahf   
   140014165:	fsubr  st,st(5)
   140014167:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014168:	cdq    
   140014169:	cmc    
   14001416a:	xchg   edi,eax
   14001416b:	sub    ah,BYTE PTR [rdx+0xe]
   14001416e:	jb     0x140014127
   140014170:	popf   
   140014171:	jp     0x140014159
   140014173:	mov    esp,0x45d70a7e
   140014178:	call   0xd514e429
   14001417d:	ds (bad) 
   14001417f:	std    
   140014180:	je     0x14001411f
   140014182:	xor    BYTE PTR [rdi],bh
   140014184:	jns    0x140014182
   140014186:	rex cmp esp,DWORD PTR [rsi]
   140014189:	sub    al,0x1a
   14001418b:	sbb    DWORD PTR [rsp+rbp*4+0x64],eax
   14001418f:	rex.RXB stos DWORD PTR es:[rdi],eax
   140014191:	sub    cl,ch
   140014193:	jno    0x14001419c
   140014195:	sub    BYTE PTR [rax-0x35],dl
   140014198:	mov    cl,0xb3
   14001419a:	icebp  
   14001419b:	retf   
   14001419c:	cmp    BYTE PTR [rax+0x1b],al
   14001419f:	shr    BYTE PTR [rbx],cl
   1400141a1:	sub    DWORD PTR [rip+0xffffffff88a68368],edx        # 0xc8a7c50f
   1400141a7:	(bad)  
   1400141a8:	mov    eax,0x2818edbc
   1400141ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400141ae:	hlt    
   1400141af:	rex.WR ins DWORD PTR es:[rdi],dx
   1400141b1:	adc    DWORD PTR [rsi],0x9e3edebb
   1400141b7:	rex.WXB movabs r11,0xfc431e5a6afa5864
   1400141c1:	ins    DWORD PTR es:[rdi],dx
   1400141c2:	and    al,0x2f
   1400141c4:	rex.RXB pop r11
   1400141c6:	jne    0x140014210
   1400141c8:	xchg   DWORD PTR [rbp-0x39],ebp
   1400141cb:	sbb    esp,ebp
   1400141cd:	sub    dl,dh
   1400141cf:	xor    DWORD PTR [rdi+0x52],esi
   1400141d2:	ret    0x36a1
   1400141d5:	(bad)  
   1400141d6:	std    
   1400141d7:	sub    ecx,edi
   1400141d9:	cli    
   1400141da:	rex.XB jg 0x140014228
   1400141dd:	(bad)  
   1400141de:	stc    
   1400141df:	sbb    dh,BYTE PTR [rdi+0x777c1a99]
   1400141e5:	sbb    BYTE PTR [rax-0x70121d91],al
   1400141eb:	cmp    al,0xfa
   1400141ed:	clc    
   1400141ee:	ret    0x6f43
   1400141f1:	jns    0x1400141ba
   1400141f3:	jnp    0x14001417b
   1400141f5:	retf   
   1400141f6:	sub    ebx,DWORD PTR [rdi-0xe]
   1400141f9:	gs cmc 
   1400141fb:	rex.WB push r9
   1400141fd:	cmp    eax,0x7ea4d004
   140014202:	repz and al,0xb9
   140014205:	sahf   
   140014206:	xor    edi,edi
   140014208:	cmp    eax,0x95441104
   14001420d:	(bad)  
   14001420e:	mov    bl,0x47
   140014210:	loope  0x14001421c
   140014212:	outs   dx,BYTE PTR ds:[rsi]
   140014213:	sub    al,0xae
   140014215:	xor    DWORD PTR [rbx+0x5],esi
   140014218:	clc    
   140014219:	(bad)  
   14001421a:	ret    0x9c79
   14001421d:	sahf   
   14001421e:	rex.RXB
   14001421f:	fwait
   140014220:	xchg   BYTE PTR [rax+0x13ff7b1a],ah
   140014226:	rcl    BYTE PTR [rdx+rax*1],0xea
   14001422a:	shr    ebp,cl
   14001422c:	call   0x177730d6b
   140014231:	jae    0x1400141d3
   140014233:	(bad)  
   140014234:	test   BYTE PTR [rsi],0xe9
   140014237:	sub    bh,BYTE PTR [rbx+0x7e]
   14001423a:	(bad)  [rsi+0x30]
   14001423d:	movabs eax,ds:0x8342d7b157b3790d
   140014246:	(bad)  
   140014247:	sub    ebx,DWORD PTR [rsi+0x7a]
   14001424a:	(bad)  [rdi+0x130f9628]
   140014250:	scas   al,BYTE PTR es:[rdi]
   140014251:	sahf   
   140014252:	gs ins DWORD PTR es:[rdi],dx
   140014254:	sti    
   140014255:	and    al,0xe3
   140014257:	retf   
   140014258:	out    0x71,eax
   14001425a:	cmp    edx,DWORD PTR [rdi-0x70]
   14001425d:	data16 rex.WX pop rsp
   140014260:	out    0x2b,al
   140014262:	rex.RB pushf 
   140014264:	rol    DWORD PTR [rax],0x3f
   140014267:	mov    DWORD PTR [rbx],ecx
   140014269:	xchg   DWORD PTR [rdx+0x1c],ecx
   14001426c:	stc    
   14001426d:	cmp    eax,0x62920067
   140014272:	ja     0x1400142a3
   140014274:	lods   al,BYTE PTR ds:[rsi]
   140014275:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014276:	mov    ebx,ebx
   140014278:	imul   ebp,ebx,0x464ae94d
   14001427e:	icebp  
   14001427f:	shl    DWORD PTR [rbp-0x12610864],cl
   140014285:	jae    0x1400142ed
   140014287:	mov    al,0x3a
   140014289:	cmp    DWORD PTR [rdi+0x5b],edi
   14001428c:	rex push 0x758a490d
   140014292:	xor    al,0x3d
   140014294:	addr32 mov ecx,0x7e86c3b4
   14001429a:	jbe    0x1400142dc
   14001429c:	mov    esp,0x70e2dd74
   1400142a1:	shr    dh,1
   1400142a3:	add    eax,0xc7402e34
   1400142a8:	push   rax
   1400142a9:	out    0xe3,al
   1400142ab:	and    ebx,ecx
   1400142ad:	jnp    0x14001431c
   1400142af:	mov    edi,0x24e77487
   1400142b4:	ret    
   1400142b5:	xchg   esp,eax
   1400142b6:	rol    BYTE PTR [rax+0x69],0xd3
   1400142ba:	adc    esp,DWORD PTR [rdi]
   1400142bc:	jbe    0x1400142fd
   1400142be:	rex.W loop 0x140014325
   1400142c1:	(bad)  
   1400142c2:	adc    DWORD PTR [rdi+0xd],esp
   1400142c5:	icebp  
   1400142c6:	(bad)  
   1400142c7:	rcl    DWORD PTR [rdi+0x0],1
   1400142ca:	and    BYTE PTR [rsi-0x2c],0xed
   1400142ce:	(bad)  
   1400142cf:	mov    dl,0x6b
   1400142d1:	mov    eax,0x7fae56f4
   1400142d6:	add    bh,BYTE PTR [rax]
   1400142d8:	(bad)  
   1400142da:	jrcxz  0x140014349
   1400142dc:	xchg   ecx,eax
   1400142dd:	cmp    ebx,ebx
   1400142df:	add    BYTE PTR [rdx+rdx*8-0x2cd2f425],bh
   1400142e6:	retf   0xe9bf
   1400142e9:	and    ebx,DWORD PTR [rdi]
   1400142eb:	mov    edi,0x8781f36f
   1400142f0:	mov    edi,0x9f060d50
   1400142f5:	ja     0x1400142a5
   1400142f7:	js     0x14001434f
   1400142f9:	add    eax,0x1e766909
   1400142fe:	ror    BYTE PTR [rcx],1
   140014300:	add    BYTE PTR [rcx+0x2b],ch
   140014303:	lock adc cl,BYTE PTR [rcx+0x636e1f]
   14001430a:	add    BYTE PTR [rax],ah
   14001430c:	add    BYTE PTR [rcx+0x44],cl
   14001430f:	push   r12
   140014311:	rex.XB
   140014312:	rex.WXB
   140014313:	xrelease rex.WR mov BYTE PTR [rsi+0x67],r12b
   140014318:	or     DWORD PTR [rdx],0x65
   14001431b:	xor    esp,DWORD PTR [rbp-0x73]
   14001431e:	(bad)  
   14001431f:	fst    st(1)
   140014321:	cwde   
   140014322:	frstor [rbx+0x4397508f]
   140014328:	retf   0xc0a2
   14001432b:	jmp    0xe8098549
   140014330:	rex.WRB jmp 0x14001433c
   140014333:	sbb    dl,BYTE PTR [rcx]
   140014335:	jbe    0x1400142e4
   140014337:	(bad)  
   140014338:	pop    rdx
   140014339:	cmp    DWORD PTR [rbp+0xa316cdd],0x70
   140014340:	popf   
   140014341:	xchg   BYTE PTR [rbp+0x693f6fb6],bl
   140014347:	(bad)  
   140014348:	(bad)  
   140014349:	test   ebx,edi
   14001434b:	not    BYTE PTR [rdi+rsi*1+0x38]
   14001434f:	push   0xffffffffdc049f3d
   140014354:	je     0x1400142f5
   140014356:	sub    ecx,DWORD PTR [rdi+0x7f]
   140014359:	nop
   14001435a:	sub    ecx,DWORD PTR [rdi+0x74c19bbe]
   140014360:	xchg   edi,eax
   140014361:	shl    DWORD PTR [rbp-0x4291532d],0x48
   140014368:	jno    0x14001435f
   14001436a:	and    ch,BYTE PTR [rsi-0x4e]
   14001436d:	mov    ebp,DWORD PTR [rdx+0x6d]
   140014370:	xor    esi,ecx
   140014372:	(bad)  
   140014374:	xchg   edx,eax
   140014375:	and    esp,eax
   140014377:	or     al,0xf9
   140014379:	test   DWORD PTR [rdx],0x7fd8c69e
   14001437f:	sub    DWORD PTR [rdi+rbp*8-0x2f92017c],ebp
   140014386:	nop
   140014387:	ret    
   140014388:	fldcw  WORD PTR [rsi]
   14001438a:	idiv   DWORD PTR [rdi]
   14001438c:	mov    bl,0xf7
   14001438e:	movabs al,ds:0xdbd9e4ae1a374d33
   140014397:	vpsrad xmm12,xmm7,XMMWORD PTR [rdi+0x5cbeb49c]
   14001439f:	rex.W (bad) 
   1400143a1:	mov    bh,0xf5
   1400143a3:	mov    dl,0x73
   1400143a5:	(bad)  
   1400143a6:	(bad)  
   1400143a7:	(bad)  
   1400143a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400143aa:	push   rcx
   1400143ab:	(bad)  
   1400143ac:	pop    rbp
   1400143ad:	add    edx,DWORD PTR [rcx]
   1400143af:	rex.WB
   1400143b0:	push   r14
   1400143b2:	add    ecx,DWORD PTR [rdx+rbx*4]
   1400143b5:	(bad)  
   1400143b6:	or     DWORD PTR [rbp+0x370700bd],esi
   1400143bc:	(bad)  
   1400143bd:	adc    DWORD PTR [rbx],edi
   1400143bf:	cmovge eax,DWORD PTR [rbx+0x1e8cc44]
   1400143c6:	sbb    DWORD PTR [rax],eax
   1400143c8:	xchg   esp,eax
   1400143c9:	js     0x1400143cd
   1400143cb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400143cc:	or     ecx,eax
   1400143ce:	and    dl,BYTE PTR [rsi-0x33849622]
   1400143d4:	jmp    0x16fa58cb7
   1400143d9:	rex.RXB (bad) 
   1400143db:	push   rax
   1400143dc:	in     al,dx
   1400143dd:	mov    eax,0x4c28b3b5
   1400143e2:	fmul   st(6),st
   1400143e4:	stos   BYTE PTR es:[rdi],al
   1400143e5:	rex.WRX
   1400143e6:	ds mov ebx,0x5c1fecc6
   1400143ec:	movabs eax,ds:0x78019e77821dadbc
   1400143f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400143f6:	mov    bh,0x4f
   1400143f8:	retf   0x1ef
   1400143fb:	mov    bh,0xb8
   1400143fd:	mov    esi,0x63fa7831
   140014402:	lahf   
   140014403:	jl     0x14001447b
   140014405:	mov    esp,0x5f45f6b2
   14001440a:	push   rsi
   14001440b:	fisttp WORD PTR [rcx+0x4a1891c8]
   140014411:	jmp    0x14001443e
   140014413:	(bad)  
   140014414:	scas   eax,DWORD PTR es:[rdi]
   140014415:	mov    ah,0xce
   140014417:	ds fwait
   140014419:	add    ebx,edx
   14001441b:	mov    ah,0x2e
   14001441d:	repnz fidivr WORD PTR [rbp-0x41]
   140014421:	loop   0x1400143b3
   140014423:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014424:	xor    sp,dx
   140014427:	push   rsp
   140014428:	(bad)
   14001442c:	jrcxz  0x1400143fa
   14001442e:	mov    al,BYTE PTR [rdx-0x31d7575e]
   140014434:	popf   
   140014435:	mov    WORD PTR [rbx-0x599ab700],?
   14001443b:	nop
   14001443c:	(bad)  
   14001443d:	push   rbp
   14001443e:	mov    BYTE PTR [rdx],ch
   140014440:	rex.WRX cmp rax,0xffffffffee9a0341
   140014446:	scas   al,BYTE PTR es:[rdi]
   140014447:	(bad)  
   140014448:	add    al,0xd4
   14001444a:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14001444c:	stc    
   14001444d:	ss call 0x1827da8f1
   140014453:	enter  0xd26b,0x75
   140014457:	xchg   esp,eax
   140014458:	rex.RXB
   140014459:	addr32 xor eax,edx
   14001445c:	repnz (bad) 
   14001445e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001445f:	fdivp  st(6),st
   140014461:	sbb    DWORD PTR [rdx+0x1cbd116a],ecx
   140014467:	sbb    DWORD PTR [rdi-0x3d],edi
   14001446a:	retf   
   14001446b:	out    0x71,eax
   14001446d:	(bad)  
   14001446e:	scas   eax,DWORD PTR es:[rdi]
   14001446f:	rex.X cwde 
   140014471:	(bad)  
   140014472:	mov    BYTE PTR [rsi+0x3e],al
   140014475:	(bad)  
   140014476:	(bad)  
   140014477:	(bad)  
   140014478:	icebp  
   140014479:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001447a:	int3   
   14001447b:	mov    ch,0xfc
   14001447d:	mov    dh,0xe3
   14001447f:	mov    esp,0x14d8173a
   140014484:	xor    bl,BYTE PTR [rcx]
   140014486:	(bad)  
   140014487:	xor    cl,BYTE PTR [r11]
   14001448a:	xor    BYTE PTR [rdi+0x14],ah
   14001448d:	rex.WB jno 0x140014463
   140014490:	out    0xc4,eax
   140014492:	enter  0xee33,0x95
   140014496:	out    0x91,eax
   140014498:	test   eax,0xb01a2932
   14001449d:	in     eax,dx
   14001449e:	rex.W fiadd DWORD PTR [rdi+0xa]
   1400144a2:	cwde   
   1400144a3:	(bad)  
   1400144a4:	cli    
   1400144a5:	rex.R in eax,dx
   1400144a7:	cmp    al,0xdd
   1400144a9:	or     edi,edi
   1400144ab:	out    0x70,eax
   1400144ad:	add    al,BYTE PTR [rax+rdx*8+0x32237984]
   1400144b4:	addr32 rex.W mov bpl,0x7b
   1400144b8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400144b9:	in     eax,dx
   1400144ba:	sti    
   1400144bb:	mov    dh,0x5b
   1400144bd:	sub    ch,bh
   1400144bf:	adc    dl,BYTE PTR [rax+0x27]
   1400144c2:	push   0x212fa6d3
   1400144c7:	test   esp,edi
   1400144c9:	(bad)  
   1400144ca:	rex.WRB and BYTE PTR [r14+0x27],r13b
   1400144ce:	(bad)  
   1400144cf:	(bad)  
   1400144d0:	addr32 loop 0x140014497
   1400144d3:	adc    DWORD PTR [rdx+rbx*8-0x19],edx
   1400144d7:	cmp    ecx,ecx
   1400144d9:	(bad)  
   1400144da:	(bad)  
   1400144db:	imul   eax,DWORD PTR [rbp-0x39],0xb78457aa
   1400144e2:	(bad)  
   1400144e3:	imul   edi,DWORD PTR [rcx],0xebcfccf9
   1400144e9:	jrcxz  0x1400144ea
   1400144eb:	(bad)  
   1400144ec:	mov    bh,0x31
   1400144ee:	or     eax,0xc00c73b8
   1400144f3:	lods   eax,DWORD PTR ds:[rsi]
   1400144f4:	mov    ebp,0x9ff2467d
   1400144f9:	cli    
   1400144fa:	lock jae 0x140014544
   1400144fd:	(bad)  
   1400144fe:	(bad)  
   1400144ff:	jp     0x1400144e5
   140014501:	cmp    eax,DWORD PTR [rdi]
   140014503:	ret    
   140014504:	loope  0x1400144fd
   140014506:	mov    eax,0x44567ca2
   14001450b:	retf   0x9aa0
   14001450e:	sub    DWORD PTR [rdx+0x725889a],edi
   140014514:	ss fwait
   140014516:	sub    BYTE PTR [rbx-0x4316840f],bh
   14001451c:	push   0x37
   14001451e:	rex.RX sub r9b,cl
   140014521:	or     DWORD PTR [rdx-0x7],esp
   140014524:	js     0x1400144e2
   140014526:	jmp    0x1400144ad
   140014528:	xchg   BYTE PTR [rcx-0x43],ah
   14001452b:	rex.WRXB loope 0x140014538
   14001452e:	jbe    0x140014586
   140014530:	(bad)  
   140014531:	xor    BYTE PTR [rip+0xfffffffff10e5087],ch        # 0x1310f95be
   140014537:	addr32 mov edi,0x42de5e86
   14001453d:	(bad)  
   14001453e:	add    DWORD PTR [rdx+0x7a634141],0xa1155e0
   140014548:	or     ch,dh
   14001454a:	pop    rsp
   14001454b:	jne    0x14001458d
   14001454d:	mov    edx,0xdb439347
   140014552:	xor    ch,BYTE PTR ss:[rcx-0x3d]
   140014556:	push   rbp
   140014557:	fisub  DWORD PTR [rbx-0x286f1dcc]
   14001455d:	xchg   BYTE PTR [rbx],cl
   14001455f:	rex.WRXB jg 0x1400144fa
   140014562:	fucom  st(3)
   140014564:	rex.WRXB xor r14,r11
   140014567:	mov    edi,0x69d2f8c1
   14001456c:	xchg   esi,eax
   14001456d:	(bad)  
   14001456e:	mov    ebp,0xafd714c
   140014573:	outs   dx,BYTE PTR ds:[rsi]
   140014574:	mov    edx,0xa209f917
   140014579:	test   al,0x7a
   14001457b:	nop
   14001457c:	(bad)  
   14001457d:	repnz adc ecx,DWORD PTR [rdx]
   140014580:	lea    esp,[rax+0x27f4b756]
   140014586:	sub    DWORD PTR [rdx],eax
   140014588:	push   rax
   140014589:	fimul  DWORD PTR [rcx+0x3b]
   14001458c:	scas   al,BYTE PTR es:[rdi]
   14001458d:	mov    ebp,0xe927f9d0
   140014592:	rex.WXB mov dl,BYTE PTR [r12+r13*8]
   140014596:	stos   BYTE PTR es:[rdi],al
   140014597:	js     0x140014580
   140014599:	xor    bl,al
   14001459b:	xchg   edi,eax
   14001459c:	(bad)  
   14001459d:	loop   0x140014528
   14001459f:	rex.WXB (bad) 
   1400145a1:	(bad)  
   1400145a2:	and    eax,0x7479d9c8
   1400145a7:	and    al,BYTE PTR [rbx]
   1400145a9:	rex.WB fild WORD PTR [r13+0x5e86fc1c]
   1400145b0:	imul   ecx,DWORD PTR [rdi],0xdae1b2e2
   1400145b6:	pushw  0x36
   1400145b9:	cs cmp al,0x62
   1400145bc:	adc    esi,esp
   1400145be:	jg     0x1400145ed
   1400145c0:	add    bl,BYTE PTR [rax-0x76f2fffd]
   1400145c6:	iret   
   1400145c7:	sbb    ah,BYTE PTR [rsi-0x40]
   1400145ca:	movsxd edx,esp
   1400145cc:	rex.WXB sub rcx,r9
   1400145cf:	rex.WXB
   1400145d0:	fwait
   1400145d1:	stos   DWORD PTR es:[rdi],eax
   1400145d2:	mov    bh,0xa5
   1400145d4:	mov    cl,0xb1
   1400145d7:	jrcxz  0x14001461b
   1400145d9:	and    dh,BYTE PTR [rsi+0x5]
   1400145dc:	(bad)  
   1400145dd:	cdq    
   1400145de:	clc    
   1400145df:	xchg   ebx,eax
   1400145e0:	adc    ecx,DWORD PTR [rdi-0x498e4340]
   1400145e6:	push   rdi
   1400145e7:	mov    edx,0xd55c9515
   1400145ec:	adc    BYTE PTR [rsi],dl
   1400145ee:	faddp  st(0),st
   1400145f0:	(bad)  
   1400145f1:	jae    0x1400145b3
   1400145f3:	outs   dx,DWORD PTR ds:[rsi]
   1400145f4:	ret    0x4bed
   1400145f7:	add    ebx,DWORD PTR [rsi-0x21]
   1400145fa:	(bad)  
   1400145fb:	loopne 0x140014598
   1400145fd:	js     0x14001467a
   1400145ff:	sar    BYTE PTR [rdi-0x1780d409],0x3b
   140014606:	(bad)  
   140014607:	retf   
   140014608:	sub    ebx,edi
   14001460a:	pop    rbp
   14001460b:	push   rsi
   14001460c:	or     edi,0xffffff8b
   14001460f:	enter  0xecb1,0x4f
   140014613:	push   rbx
   140014614:	cmp    DWORD PTR [rsi-0x12],ebp
   140014617:	sbb    edx,edi
   140014619:	mov    ecx,0x6a97299b
   14001461e:	mov    dl,0xd7
   140014620:	in     eax,dx
   140014621:	mov    edx,0x9b6e968c
   140014626:	outs   dx,BYTE PTR ds:[rsi]
   140014627:	mov    ah,dh
   140014629:	sub    eax,0x8a76858a
   14001462e:	loop   0x1400145cb
   140014630:	sbb    DWORD PTR [rbx],ebp
   140014632:	push   rdx
   140014633:	mov    bl,0xb7
   140014635:	mov    eax,0x2789eecc
   14001463a:	cdq    
   14001463b:	or     eax,0xff072817
   140014640:	or     esi,ecx
   140014642:	mov    edi,0x8a013b08
   140014647:	cmp    ah,bh
   140014649:	add    esi,DWORD PTR [rax+0x2b2b00b4]
   14001464f:	sub    DWORD PTR [rdi+rax*1],eax
   140014652:	fidiv  DWORD PTR [rdx+rcx*8-0x2bbf2e93]
   140014659:	add    esp,0xffffffd6
   14001465c:	imul   ecx,DWORD PTR [rdi+0x7cc1793d],0x41
   140014663:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014664:	adc    esp,DWORD PTR [rsi-0x39]
   140014667:	(bad)  
   140014668:	loope  0x14001462f
   14001466a:	(bad)  
   14001466b:	jg     0x1400145ef
   14001466d:	adc    DWORD PTR [rsi],ecx
   14001466f:	mov    ecx,0xbd58e76
   140014674:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014675:	test   al,0xae
   140014677:	ins    BYTE PTR es:[rdi],dx
   140014678:	and    DWORD PTR [rdi],esi
   14001467a:	scas   eax,DWORD PTR es:[rdi]
   14001467b:	adc    al,dl
   14001467d:	or     al,0x91
   14001467f:	rex ja 0x140014623
   140014682:	mov    WORD PTR [rax-0xa63b03e],?
   140014688:	out    0x84,eax
   14001468a:	xchg   esi,eax
   14001468b:	(bad)  
   14001468c:	fwait
   14001468d:	(bad)  
   14001468e:	jle    0x140014660
   140014690:	or     DWORD PTR [rbp-0x13],edi
   140014693:	ss (bad) 
   140014695:	pop    rbp
   140014696:	jnp    0x1400146f0
   140014698:	add    al,0x80
   14001469a:	fs out dx,eax
   14001469c:	cwde   
   14001469d:	mov    esp,0x52f9eb66
   1400146a2:	rex.X rcr sil,1
   1400146a5:	hlt    
   1400146a6:	pop    rbp
   1400146a7:	nop    DWORD PTR [rdi]
   1400146aa:	fwait
   1400146ab:	cmp    ah,BYTE PTR [rip+0x5cddbfe7]        # 0x19cdf0698
   1400146b1:	test   BYTE PTR [rcx+rdx*2-0x3f],0x1
   1400146b6:	popf   
   1400146b7:	push   0x6dfb7fbd
   1400146bc:	mov    ah,BYTE PTR [rsi-0x3f1c4a83]
   1400146c2:	push   rdx
   1400146c3:	(bad)  
   1400146c4:	pop    rdi
   1400146c5:	jmp    0x14001464f
   1400146c7:	pop    rbx
   1400146c8:	test   esp,ecx
   1400146ca:	pop    rdi
   1400146cb:	outs   dx,DWORD PTR ds:[rsi]
   1400146cc:	push   rdx
   1400146cd:	jle    0x1400146ef
   1400146cf:	push   rbp
   1400146d0:	sub    eax,0x7077c2b2
   1400146d5:	add    BYTE PTR [rdx-0x687ccd3f],dh
   1400146db:	mov    ds,edi
   1400146dd:	xor    DWORD PTR [rdi],edi
   1400146df:	rex.R pop rcx
   1400146e1:	(bad)  
   1400146e2:	xchg   BYTE PTR [rbx-0x2a38b2f6],ah
   1400146e8:	in     al,0xe2
   1400146ea:	rex.RX jb 0x140014711
   1400146ed:	sbb    DWORD PTR [rdi],ecx
   1400146ef:	and    BYTE PTR [rip+0x28f5df66],0x37        # 0x168f7265c
   1400146f6:	jg     0x1400146ed
   1400146f8:	jns    0x140014710
   1400146fa:	outs   dx,BYTE PTR ds:[rsi]
   1400146fb:	pop    rbx
   1400146fc:	xchg   eax,esp
   1400146fe:	jmp    0x1400146d3
   140014700:	add    BYTE PTR [rbx+rsi*2+0x6f],bh
   140014704:	jg     0x1400146ea
   140014706:	enter  0x8f43,0x7c
   14001470a:	jp     0x14001473c
   14001470c:	(bad)  
   14001470d:	jg     0x140014758
   14001470f:	mov    esp,0xe322277f
   140014714:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014715:	pop    rsp
   140014716:	mov    DWORD PTR [rdx+rdx*1],ecx
   140014719:	(bad)  
   14001471a:	fnstsw WORD PTR [rdx-0x5d]
   14001471d:	mov    ah,0xb9
   14001471f:	mov    ecx,0x86c73020
   140014724:	(bad)  
   140014725:	pop    rsi
   140014726:	ror    dl,cl
   140014728:	push   rdi
   140014729:	shl    dh,1
   14001472b:	fdivr  st,st(1)
   14001472d:	outs   dx,BYTE PTR ds:[rsi]
   14001472e:	rex.WXB (bad) 
   140014730:	mov    dh,0x85
   140014732:	mov    cl,0x96
   140014734:	sti    
   140014735:	stos   BYTE PTR es:[rdi],al
   140014736:	(bad)  
   140014737:	test   al,al
   140014739:	sub    ah,ch
   14001473b:	push   rdx
   14001473c:	xchg   esp,eax
   14001473d:	add    eax,0xa61f47bb
   140014742:	sbb    DWORD PTR [rsi],ebp
   140014744:	loopne 0x1400146f0
   140014746:	and    esi,ebp
   140014748:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014749:	scas   eax,DWORD PTR es:[rdi]
   14001474a:	adc    ebp,DWORD PTR [rsi+0x7f3eb65d]
   140014750:	rcl    BYTE PTR [rax],1
   140014752:	(bad)  
   140014753:	scas   al,BYTE PTR es:[rdi]
   140014754:	lea    eax,[rbx-0x1d777220]
   14001475a:	adc    BYTE PTR [rbx+0x9],ch
   14001475d:	mov    ?,WORD PTR [rdi-0x7c78b7a9]
   140014763:	pop    rdx
   140014764:	scas   al,BYTE PTR es:[rdi]
   140014765:	mov    ds,WORD PTR [rbp-0x1d3bfdbd]
   14001476b:	(bad)  
   14001476c:	fsubrp st(0),st
   14001476e:	retf   
   14001476f:	xchg   edx,eax
   140014770:	xchg   ebx,eax
   140014771:	outs   dx,DWORD PTR ds:[rsi]
   140014772:	dec    DWORD PTR [rcx+riz*2]
   140014775:	in     eax,dx
   140014776:	cmp    BYTE PTR [rdx-0x748134e5],bh
   14001477c:	xchg   edi,eax
   14001477d:	pop    rdi
   14001477e:	(bad)  
   14001477f:	fistp  QWORD PTR [rax+0x4e2ef50c]
   140014785:	sbb    dh,BYTE PTR [rbx]
   140014787:	pop    rsi
   140014788:	ss ins BYTE PTR es:[rdi],dx
   14001478a:	pop    rbx
   14001478b:	jrcxz  0x140014783
   14001478d:	mov    esp,0x42793dc6
   140014792:	ss add ch,ch
   140014795:	ror    BYTE PTR [rdi+0x62],0xce
   140014799:	stos   DWORD PTR es:[rdi],eax
   14001479a:	shl    dl,1
   14001479c:	sti    
   14001479d:	adc    ebx,DWORD PTR [rax-0x69]
   1400147a0:	pop    rsp
   1400147a1:	jg     0x1400147ad
   1400147a3:	mov    DWORD PTR [rbx],edx
   1400147a5:	push   0x7e53b47
   1400147aa:	mov    cl,0xfe
   1400147ac:	jns    0x1400147a1
   1400147ae:	out    dx,al
   1400147af:	add    WORD PTR [rbx+rsi*8+0x6831cf33],sp
   1400147b7:	(bad)  
   1400147b8:	and    esi,0x66
   1400147bb:	sbb    al,0xd2
   1400147bd:	sub    DWORD PTR [rdi+0x1afa4238],esi
   1400147c3:	xor    DWORD PTR [r14+riz*1+0x19],r15d
   1400147c8:	rex.R
   1400147c9:	repz not BYTE PTR [rsi-0x67bb7f1a]
   1400147d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400147d1:	imul   edx,DWORD PTR [rax-0x2d],0xfffffff7
   1400147d5:	rex.R stos BYTE PTR es:[rdi],al
   1400147d7:	adc    edx,DWORD PTR [rax-0x4f290742]
   1400147dd:	sbb    eax,DWORD PTR [rbx-0x33d632d0]
   1400147e3:	add    eax,DWORD PTR [rax+0x5d]
   1400147e6:	pop    rsp
   1400147e7:	cld    
   1400147e8:	and    ecx,ebp
   1400147ea:	(bad)  
   1400147eb:	cmp    al,0x38
   1400147ed:	sti    
   1400147ee:	and    BYTE PTR [rsi+0x5699209f],ch
   1400147f4:	sbb    al,0x3a
   1400147f6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400147f7:	lahf   
   1400147f8:	div    dh
   1400147fa:	shr    BYTE PTR [rax+rdi*8+0x501cbce9],cl
   140014801:	push   0xffffffffe09fa6f3
   140014806:	(bad)  
   140014807:	cmp    edi,DWORD PTR [rdi-0x76]
   14001480a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001480b:	dec    BYTE PTR [rdi-0x64806084]
   140014811:	rol    DWORD PTR [rax-0x7fe7029],cl
   140014817:	(bad)  
   140014818:	mov    esp,0xf2bffbfd
   14001481d:	xchg   DWORD PTR [rsi-0x6a1a7a3],ebx
   140014823:	sahf   
   140014824:	jb     0x140014856
   140014826:	cld    
   140014827:	mov    ah,0x8
   140014829:	clts   
   14001482b:	lea    edi,[rsp+rbp*8]
   14001482e:	mov    ah,0x88
   140014830:	(bad)
   140014833:	xchg   esi,eax
   140014834:	xchg   BYTE PTR [rbx+0x76],ah
   140014837:	jae    0x14001488c
   140014839:	and    dl,cl
   14001483b:	and    eax,0x68dd33be
   140014840:	jbe    0x140014865
   140014842:	jne    0x140014806
   140014844:	rex.B (bad) 
   140014846:	test   BYTE PTR [rbx-0x9338c92],0x3b
   14001484d:	leave  
   14001484e:	sahf   
   14001484f:	and    eax,0x3cf32b39
   140014854:	push   rbp
   140014855:	cwde   
   140014856:	push   rdx
   140014857:	cmp    edi,ecx
   140014859:	(bad)  
   14001485b:	adc    DWORD PTR [rsi-0x55],esi
   14001485e:	and    DWORD PTR [rbx+riz*1-0x24],edx
   140014862:	mov    edi,DWORD PTR [rdi+0x1f3ed843]
   140014868:	adc    esp,ebp
   14001486a:	(bad)  
   14001486b:	mov    bl,0xfc
   14001486d:	lods   al,BYTE PTR ds:[rsi]
   14001486e:	jg     0x1400148cf
   140014870:	(bad)  
   140014871:	in     eax,0x1b
   140014873:	xor    ebp,ebp
   140014875:	enter  0x7a66,0xa4
   140014879:	rcr    BYTE PTR [rdi-0x53ec2334],0x9c
   140014880:	push   0xffffffffe5366617
   140014885:	out    0x13,al
   140014887:	ffreep st(1)
   140014889:	test   edi,eax
   14001488b:	(bad)  
   14001488d:	rex.X cwde 
   14001488f:	push   rdx
   140014890:	pop    rsp
   140014891:	ds ret 
   140014893:	(bad)  
   140014895:	imul   ecx,edx,0xddb8dbab
   14001489b:	sbb    esi,DWORD PTR [rcx-0x10a26c4]
   1400148a1:	xchg   edx,eax
   1400148a2:	adc    al,0xdd
   1400148a4:	(bad)  
   1400148a5:	jge    0x1400148b8
   1400148a7:	sub    al,0x1d
   1400148a9:	mov    BYTE PTR [rdi+0x1d8dceb9],ch
   1400148af:	ret    
   1400148b0:	jl     0x14001489d
   1400148b2:	ins    DWORD PTR es:[rdi],dx
   1400148b3:	xchg   edi,eax
   1400148b4:	mov    dh,0x4c
   1400148b6:	(bad)  
   1400148b7:	(bad)  
   1400148b9:	rex.X (bad) 
   1400148bb:	(bad)  
   1400148bc:	and    eax,0x9be90ba7
   1400148c1:	jae    0x14001488c
   1400148c3:	xchg   ebx,eax
   1400148c4:	(bad)  [rsi+0x53]
   1400148c7:	scas   al,BYTE PTR es:[rdi]
   1400148c8:	ffreep st(6)
   1400148ca:	add    al,0x49
   1400148cc:	icebp  
   1400148cd:	out    0xbd,al
   1400148cf:	jnp    0x1400148a3
   1400148d1:	retf   
   1400148d2:	ins    BYTE PTR es:[rdi],dx
   1400148d3:	stos   DWORD PTR es:[rdi],eax
   1400148d4:	repz fimul DWORD PTR ss:[rax+0x2d]
   1400148d9:	icebp  
   1400148da:	mul    bh
   1400148dc:	retf   0xab5
   1400148df:	pop    rcx
   1400148e0:	pop    rbx
   1400148e1:	and    eax,0x80c903dd
   1400148e6:	jne    0x140014954
   1400148e8:	rex
   1400148e9:	addr32 xchg ebx,eax
   1400148eb:	or     eax,esi
   1400148ed:	ins    DWORD PTR es:[rdi],dx
   1400148ee:	mov    bl,0x74
   1400148f0:	push   0xffffffffb63c7b0d
   1400148f5:	int3   
   1400148f6:	rcl    DWORD PTR [rax],0xc9
   1400148f9:	imul   eax,DWORD PTR [rip+0x4c486de4],0x17        # 0x18c49b6e4
   140014900:	fcmovb st,st(0)
   140014902:	mov    dl,0x75
   140014904:	adc    ch,ch
   140014906:	mov    ecx,0x9148bb98
   14001490b:	sub    BYTE PTR [rcx+0x3c],ch
   14001490e:	sbb    ecx,edi
   140014910:	cld    
   140014911:	popf   
   140014912:	mov    bh,BYTE PTR [rdi]
   140014914:	shr    esi,0x77
   140014917:	add    edi,edi
   140014919:	(bad)  
   14001491a:	mov    bh,0x29
   14001491c:	or     eax,0xe006fdb8
   140014921:	fwait
   140014922:	js     0x14001491f
   140014924:	mov    bh,0x7e
   140014926:	loop   0x1400148fb
   140014928:	(bad)  
   140014929:	ss out dx,al
   14001492b:	cmp    esi,ecx
   14001492d:	fdiv   QWORD PTR [rax+0x71]
   140014930:	cld    
   140014931:	gs out dx,eax
   140014933:	retf   
   140014934:	ja     0x1400148d6
   140014936:	(bad)  
   140014937:	adc    edx,edx
   140014939:	jb     0x140014907
   14001493b:	icebp  
   14001493c:	mov    ecx,DWORD PTR [rcx]
   14001493e:	sbb    eax,0x44cb10cf
   140014943:	cmp    dh,BYTE PTR [rdi-0x3d]
   140014946:	test   BYTE PTR gs:[rdi+0xe],bl
   14001494a:	mov    esi,0x4dba6906
   14001494f:	int3   
   140014950:	pop    rcx
   140014951:	jrcxz  0x14001496a
   140014953:	in     al,0x88
   140014955:	loope  0x140014951
   140014957:	pop    rsp
   140014958:	out    dx,al
   140014959:	fnstcw WORD PTR [rcx-0x70]
   14001495c:	lahf   
   14001495d:	(bad)  
   14001495e:	mov    es,edi
   140014960:	sahf   
   140014961:	mov    ch,BYTE PTR ss:[rdx+0x68]
   140014965:	sbb    cl,dl
   140014967:	push   rax
   140014968:	sub    al,0x2c
   14001496a:	jb     0x14001495f
   14001496c:	loope  0x1400149a5
   14001496e:	adc    eax,DWORD PTR [rsi-0x2406a39d]
   140014974:	test   bl,dh
   140014976:	addr32 (bad) 
   140014978:	pop    rcx
   140014979:	nop
   14001497a:	xchg   esp,eax
   14001497b:	out    0x9b,eax
   14001497d:	push   rdx
   14001497e:	test   BYTE PTR [rcx],bl
   140014980:	push   0xffffffffffffffcc
   140014982:	cmp    al,0xba
   140014984:	lods   al,BYTE PTR ds:[rsi]
   140014985:	rex.B jmp 0xde8ee2d9
   14001498b:	xor    BYTE PTR [rip+0x60cf50b2],dh        # 0x1a0d09a43
   140014991:	imul   ecx,DWORD PTR [rbp+0x3cfaef93],0x708568d5
   14001499b:	in     eax,0xc
   14001499d:	stos   DWORD PTR es:[rdi],eax
   14001499e:	pop    rbx
   14001499f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400149a0:	sbb    BYTE PTR [rbp+0x3a],bl
   1400149a3:	(bad)  
   1400149a4:	fistp  QWORD PTR [rcx-0x1b842976]
   1400149aa:	mov    ecx,0x7bd776f5
   1400149af:	push   rbx
   1400149b0:	not    BYTE PTR [rdx+0x13]
   1400149b3:	ficomp DWORD PTR [rdi]
   1400149b5:	repnz ror BYTE PTR [rdi-0x11],0xa4
   1400149ba:	mov    ebp,0x3a5b5cfb
   1400149bf:	imul   eax,DWORD PTR [rdi-0x70add9a0],0xffffffb4
   1400149c6:	push   rcx
   1400149c7:	xchg   ebp,eax
   1400149c8:	xchg   ebx,eax
   1400149c9:	cmp    DWORD PTR [rdi-0x72],ecx
   1400149cc:	sub    DWORD PTR [rsi+0x2a],edi
   1400149cf:	in     eax,0xb5
   1400149d1:	adc    al,0x62
   1400149d3:	sti    
   1400149d4:	cmp    al,0x2e
   1400149d6:	push   rdi
   1400149d7:	sbb    BYTE PTR [rdx],dl
   1400149d9:	jbe    0x1400149bb
   1400149db:	shl    dh,cl
   1400149dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149de:	cmc    
   1400149df:	repnz lods eax,DWORD PTR ds:[rsi]
   1400149e1:	(bad)  
   1400149e2:	rcl    BYTE PTR [rsi-0x5f],1
   1400149e5:	push   0x1239e773
   1400149ea:	nop
   1400149eb:	test   esi,edx
   1400149ed:	xor    DWORD PTR [rdi],edx
   1400149ef:	(bad)  
   1400149f0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149f1:	(bad)  
   1400149f2:	je     0x1400149b9
   1400149f4:	(bad)  
   1400149f5:	js     0x140014a58
   1400149f7:	xchg   edx,eax
   1400149f8:	mov    al,bh
   1400149fa:	add    edx,DWORD PTR [rsi]
   1400149fc:	xor    edx,DWORD PTR [rax+0x73]
   1400149ff:	mov    eax,0x73e7ca43
   140014a04:	sbb    eax,0x3edeb434
   140014a09:	rex.WRXB or QWORD PTR [r14],r14
   140014a0c:	xchg   DWORD PTR [rbx],esp
   140014a0e:	test   eax,0x9116824
   140014a13:	jbe    0x140014a28
   140014a15:	pop    rdx
   140014a16:	adc    al,0x17
   140014a18:	add    ebp,DWORD PTR [rax-0x32e4c52]
   140014a1e:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014a20:	(bad)  
   140014a21:	(bad)  
   140014a22:	jae    0x140014a41
   140014a24:	jmp    0x121604e15
   140014a29:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014a2a:	int    0xff
   140014a2c:	xchg   ecx,eax
   140014a2d:	jrcxz  0x140014a16
   140014a2f:	shr    BYTE PTR [rbp-0x281bc629],cl
   140014a35:	pop    rsp
   140014a36:	outs   dx,BYTE PTR ds:[rsi]
   140014a37:	pop    QWORD PTR [rcx]
   140014a39:	clc    
   140014a3a:	(bad)  
   140014a3b:	mov    esp,0xf2be87fd
   140014a40:	(bad)  
   140014a41:	ja     0x140014a70
   140014a43:	lods   al,BYTE PTR ds:[rsi]
   140014a44:	lods   eax,DWORD PTR ds:[rsi]
   140014a45:	jg     0x140014a08
   140014a47:	xchg   edi,eax
   140014a48:	(bad)  
   140014a49:	addr32 mov esp,0xefc70f73
   140014a4f:	cmp    bl,BYTE PTR [rbp-0x36]
   140014a52:	(bad)  
   140014a53:	call   0x1125dfb3e
   140014a58:	jge    0x140014a2b
   140014a5a:	icebp  
   140014a5b:	call   0x105dd1729
   140014a60:	rex.WRX imul r12,QWORD PTR [rsi+0x44],0xffffffffffffffd1
   140014a65:	jl     0x140014a67
   140014a67:	(bad)  
   140014a68:	sub    eax,0x9b919a73
   140014a6d:	pop    rsp
   140014a6e:	mov    esp,0xd3d5cc6a
   140014a73:	or     al,ch
   140014a75:	je     0x140014a4a
   140014a77:	imul   ebp,eax,0x60
   140014a7a:	or     BYTE PTR [rsi+0x8408a68],ah
   140014a80:	or     al,0xeb
   140014a82:	cmp    eax,0xc6e4b28a
   140014a87:	icebp  
   140014a88:	(bad)  
   140014a89:	test   al,0xab
   140014a8b:	xor    DWORD PTR [rsi-0x6c263fe6],edi
   140014a91:	call   0x14232b623
   140014a96:	rex adc DWORD PTR [rbp-0x78],esi
   140014a9a:	sub    edi,eax
   140014a9c:	(bad)  
   140014a9d:	fnstcw WORD PTR [rbx-0xd]
   140014aa0:	and    ch,cl
   140014aa2:	scas   al,BYTE PTR es:[rdi]
   140014aa3:	stos   DWORD PTR es:[rdi],eax
   140014aa4:	rex.WRX
   140014aa5:	lock ja 0x140014a96
   140014aa8:	jge    0x140014a99
   140014aaa:	retf   
   140014aab:	lods   eax,DWORD PTR ds:[rsi]
   140014aac:	mov    dl,0x32
   140014aae:	mov    bl,0xf6
   140014ab0:	push   rdx
   140014ab1:	xchg   ebp,eax
   140014ab2:	test   ch,0xb6
   140014ab5:	ins    BYTE PTR es:[rdi],dx
   140014ab6:	ins    DWORD PTR es:[rdi],dx
   140014ab7:	xchg   esi,eax
   140014ab8:	fldcw  WORD PTR gs:[rbp-0x4b]
   140014abc:	in     eax,0xf1
   140014abe:	and    bh,BYTE PTR [rbx-0x79c89c93]
   140014ac4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014ac5:	jnp    0x140014ae9
   140014ac7:	push   0x1a66809a
   140014acc:	call   0x8671
   140014ad0:	push   0x681e987a
   140014ad5:	and    BYTE PTR [rsi],al
   140014ad7:	(bad)  
   140014ad8:	es jp  0x140014b3d
   140014adb:	(bad)
   140014ae0:	adc    BYTE PTR [rsp+rax*2],dh
   140014ae3:	sbb    BYTE PTR [rsi],al
   140014ae5:	rex.RX mov dl,0xc1
   140014ae8:	xor    al,0xb4
   140014aea:	in     eax,0x7d
   140014aec:	(bad)  
   140014aed:	mov    dh,0x6c
   140014aef:	pop    rcx
   140014af0:	xchg   esi,eax
   140014af1:	sub    al,0x9
   140014af3:	in     eax,dx
   140014af4:	stos   BYTE PTR es:[rdi],al
   140014af5:	stos   BYTE PTR es:[rdi],al
   140014af6:	int3   
   140014af7:	stos   BYTE PTR es:[rdi],al
   140014af8:	retf   0xdcaa
   140014afb:	div    ebp
   140014afd:	jnp    0x140014af6
   140014aff:	int3   
   140014b00:	(bad)  
   140014b01:	addr32 mov ecx,0x22d665f7
   140014b07:	pop    rcx
   140014b08:	and    eax,0x117a9961
   140014b0d:	pop    rcx
   140014b0e:	cmc    
   140014b0f:	sub    eax,0xbddb7bef
   140014b14:	out    0x9c,eax
   140014b16:	(bad)  
   140014b18:	popf   
   140014b19:	in     eax,0x72
   140014b1b:	(bad)  
   140014b1c:	(bad)  
   140014b1d:	add    esp,DWORD PTR [rcx+rdx*4]
   140014b20:	rex.W (bad) 
   140014b22:	mov    al,0xe8
   140014b24:	(bad)  
   140014b25:	xchg   edx,eax
   140014b26:	int3   
   140014b27:	rex.X and BYTE PTR [rbx],cl
   140014b2a:	(bad)  
   140014b2b:	add    esi,DWORD PTR [rcx+0x4de4e2e9]
   140014b31:	out    dx,eax
   140014b32:	(bad)
   140014b36:	sar    DWORD PTR [rdi-0x26617742],1
   140014b3c:	xchg   ebx,eax
   140014b3d:	fdivr  DWORD PTR [rcx]
   140014b3f:	jae    0x140014b43
   140014b41:	(bad)  
   140014b42:	ret    0x680c
   140014b45:	ins    DWORD PTR es:[rdi],dx
   140014b46:	sbb    eax,esp
   140014b48:	(bad)  
   140014b49:	pop    rsp
   140014b4a:	sub    al,0x5c
   140014b4c:	push   rcx
   140014b4d:	(bad)  
   140014b4e:	cld    
   140014b4f:	enter  0x2e03,0xa0
   140014b53:	jg     0x140014b55
   140014b55:	mov    esp,0xb6877c3
   140014b5a:	adc    BYTE PTR gs:[rcx],bl
   140014b5d:	jo     0x140014b60
   140014b5f:	or     eax,0x1303512c
   140014b64:	jb     0x140014be1
   140014b66:	xor    BYTE PTR [rdx-0x429d791],0xcb
   140014b6d:	rex.X outs dx,BYTE PTR ds:[rsi]
   140014b6f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014b70:	lahf   
   140014b71:	adc    ebx,DWORD PTR [rax-0x137f30bb]
   140014b77:	out    dx,al
   140014b78:	mov    bl,0x1f
   140014b7a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014b7b:	mov    ebp,0xfa5ebab1
   140014b80:	xchg   edx,eax
   140014b81:	sub    eax,0x286b9f1e
   140014b86:	enter  0xf97d,0xe0
   140014b8a:	popf   
   140014b8b:	xchg   edi,eax
   140014b8c:	rex cdq 
   140014b8e:	jne    0x140014b87
   140014b90:	(bad)
   140014b93:	out    dx,al
   140014b94:	jle    0x140014bfa
   140014b96:	mov    ?,WORD PTR [rcx-0x3304d0d5]
   140014b9c:	ror    BYTE PTR [rax-0x71d041bd],cl
   140014ba2:	loop   0x140014b72
   140014ba4:	xor    al,0x64
   140014ba6:	mov    cl,0xee
   140014ba9:	xchg   ecx,eax
   140014baa:	popf   
   140014bab:	sub    BYTE PTR [rbp+0x3efca9f],dl
   140014bb1:	adc    edx,DWORD PTR [rdx-0x40c5ed0d]
   140014bb7:	pushf  
   140014bb8:	rol    DWORD PTR [rax-0x42],cl
   140014bbb:	(bad)  
   140014bbc:	xchg   edx,eax
   140014bbd:	out    0x59,eax
   140014bbf:	add    DWORD PTR [rdi-0x41],edx
   140014bc2:	test   DWORD PTR [rsi+0x6f],esp
   140014bc5:	call   QWORD PTR [rbx+0x3e]
   140014bc8:	cld    
   140014bc9:	push   rdi
   140014bca:	jle    0x140014bb2
   140014bcc:	xchg   edi,eax
   140014bcd:	ror    DWORD PTR [rip+0xffffffffc0157978],1        # 0x10016c54b
   140014bd3:	jns    0x140014b81
   140014bd5:	std    
   140014bd6:	lods   eax,DWORD PTR ds:[rsi]
   140014bd7:	ja     0x140014b98
   140014bd9:	out    0xe0,eax
   140014bdb:	scas   al,BYTE PTR es:[rdi]
   140014bdc:	adc    DWORD PTR [rdi-0x5f885242],0xffffffff
   140014be3:	rex.RXB jmp 0x140014c34
   140014be6:	out    0x4d,eax
   140014be8:	mov    DWORD PTR [rcx+0x333834df],edi
   140014bee:	jb     0x140014bc3
   140014bf0:	or     edx,DWORD PTR [rax]
   140014bf2:	mov    esp,0xd24e9dfb
   140014bf7:	fcom   QWORD PTR [rcx+rax*1-0xf17e7d0]
   140014bfe:	(bad)  
   140014bff:	enter  0x1a50,0x68
   140014c03:	sbb    DWORD PTR [rdi-0x64e9e2fe],edx
   140014c09:	cmp    DWORD PTR [rdx],edx
   140014c0b:	(bad)  
   140014c0c:	imul   edx,DWORD PTR [rsi-0x6ff9975],0x3c
   140014c13:	xor    DWORD PTR [rsp+rdi*4],0xec91ae48
   140014c1a:	jp     0x140014c2f
   140014c1c:	or     BYTE PTR [rbp-0x4d],dl
   140014c1f:	mov    fs,WORD PTR [rcx-0x454ef0]
   140014c25:	xor    ch,BYTE PTR [rbp+rsi*8-0x4857c0a]
   140014c2c:	rex.B (bad) 
   140014c2e:	sahf   
   140014c2f:	rex.X (bad) 
   140014c31:	rex.R fmul DWORD PTR [rax+0x40]
   140014c36:	mov    BYTE PTR [rdx],dl
   140014c38:	and    eax,0xbb35e0d0
   140014c3d:	repnz iret 
   140014c3f:	xchg   esi,eax
   140014c40:	mov    edi,0x6c00c36d
   140014c45:	scas   al,BYTE PTR es:[rdi]
   140014c46:	movsxd edi,ebp
   140014c48:	shl    BYTE PTR [rbp+0x38],1
   140014c4b:	jb     0x140014c20
   140014c4d:	mov    ebx,0x2d200bd1
   140014c52:	rex.WR (bad) 
   140014c54:	js     0x140014cc0
   140014c56:	adc    al,0x3d
   140014c58:	mov    bl,0x13
   140014c5a:	movabs al,ds:0x38c8a80359a079e5
   140014c63:	mov    ah,0x7
   140014c65:	rex.WR xor r11b,al
   140014c68:	es (bad) 
   140014c6a:	push   rcx
   140014c6b:	in     eax,dx
   140014c6c:	movabs eax,ds:0xf6ae7e73fdfb609
   140014c75:	imul   ebp,DWORD PTR [rbx+0x69],0xb2085c2f
   140014c7c:	mov    al,0x43
   140014c7e:	lods   eax,DWORD PTR ds:[rsi]
   140014c7f:	jle    0x140014ca9
   140014c81:	sub    BYTE PTR [rdi+rax*8+0x51a09fa],0x28
   140014c89:	cmp    esp,edi
   140014c8b:	out    0x3e,eax
   140014c8d:	and    DWORD PTR [rcx+0x15bdbbd8],0x5ad2977b
   140014c97:	(bad)  
   140014c98:	jbe    0x140014cd0
   140014c9a:	test   BYTE PTR [rcx+rdi*1],al
   140014c9d:	mov    esi,eax
   140014c9f:	jmp    0x160ad0597
   140014ca4:	jmp    0x140014c37
   140014ca6:	or     BYTE PTR [rax+rbp*1+0x7c],dl
   140014caa:	adc    r12d,r8d
   140014cad:	stc    
   140014cae:	sub    DWORD PTR [rbx+0x622532a2],ebx
   140014cb4:	retf   0xaec9
   140014cb7:	mov    al,0x28
   140014cb9:	(bad)  
   140014cbb:	xor    BYTE PTR [rcx+rbp*8],al
   140014cbe:	ds jbe 0x140014c99
   140014cc1:	rex
   140014cc2:	rex ret 
   140014cc4:	pop    rbx
   140014cc5:	out    dx,al
   140014cc6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014cc7:	cwde   
   140014cc8:	enter  0xb5b9,0x18
   140014ccc:	or     DWORD PTR [rax+0x7d5a60e8],0x3f
   140014cd3:	or     bh,dh
   140014cd5:	loope  0x140014d46
   140014cd7:	(bad)  
   140014cd8:	or     eax,0x15e97c1
   140014cdd:	pushf  
   140014cde:	fstp   st(2)
   140014ce0:	(bad)  
   140014ce1:	add    BYTE PTR [rcx-0x21521612],dh
   140014ce7:	cld    
   140014ce8:	ror    DWORD PTR [rdi],0xdd
   140014ceb:	xor    bh,BYTE PTR [rax]
   140014ced:	cmp    al,0xf2
   140014cef:	(bad)  
   140014cf0:	(bad)  
   140014cf1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014cf2:	repz scas al,BYTE PTR es:[rdi]
   140014cf4:	adc    bl,ah
   140014cf6:	(bad)  
   140014cf7:	(bad)  
   140014cf8:	lods   eax,DWORD PTR ds:[rsi]
   140014cf9:	xor    edi,DWORD PTR [rdx+rsi*1+0x1]
   140014cfd:	es test eax,esi
   140014d00:	leave  
   140014d01:	rex.RX (bad) 
   140014d03:	test   al,0xf5
   140014d05:	cs rex.RXB (bad) 
   140014d08:	xor    ecx,ebp
   140014d0a:	rex.RXB
   140014d0b:	rex.R loopne 0x140014d62
   140014d0e:	je     0x140014ccd
   140014d10:	test   DWORD PTR [rax+0x59],ebx
   140014d13:	lahf   
   140014d14:	(bad)
   140014d18:	fdiv   DWORD PTR [rcx-0x62]
   140014d1b:	cmp    DWORD PTR [rsi],esi
   140014d1d:	rex.W sub bpl,bl
   140014d20:	mov    edx,0x234eaeea
   140014d25:	rex.WRX scas al,BYTE PTR es:[rdi]
   140014d27:	es pop rsp
   140014d29:	mov    ebp,0xb202c2b3
   140014d2e:	mov    DWORD PTR [rip+0x3b175210],edx        # 0x17b189f44
   140014d34:	nop
   140014d35:	push   rax
   140014d36:	paddsw mm0,mm6
   140014d39:	repnz cmc 
   140014d3b:	mov    bh,0x83
   140014d3d:	jnp    0x140014db6
   140014d3f:	or     BYTE PTR [rsi+0x71348a3c],0x12
   140014d46:	(bad)  
   140014d47:	movsxd edx,DWORD PTR [rbp-0x1f]
   140014d4a:	sub    eax,DWORD PTR [rax]
   140014d4c:	adc    dl,BYTE PTR [rdi+0x40]
   140014d4f:	and    ah,BYTE PTR [rcx+rcx*2+0x2d]
   140014d53:	ja     0x140014d56
   140014d55:	rex.WRXB rol QWORD PTR [r8-0x2d],0x45
   140014d5a:	test   al,0x3b
   140014d5c:	cmp    BYTE PTR [rdx-0x5],bh
   140014d5f:	(bad)  
   140014d60:	and    DWORD PTR [rcx+0x6995804b],0x8e3d98ec
   140014d6a:	shr    DWORD PTR [rcx+0x6716a8e3],0x11
   140014d71:	(bad)  
   140014d72:	xchg   edi,eax
   140014d73:	fsubr  QWORD PTR [r8-0x6bb6ebce]
   140014d7a:	adc    eax,0x7235197e
   140014d7f:	(bad)  
   140014d80:	jg     0x140014dcf
   140014d82:	mov    ecx,0xfd57afdb
   140014d87:	sub    DWORD PTR [rcx+0x17],esi
   140014d8a:	cwde   
   140014d8b:	cmp    al,0xb6
   140014d8d:	out    dx,eax
   140014d8e:	(bad)  
   140014d8f:	ds (bad) 
   140014d91:	retf   0x5b9
   140014d94:	mov    bh,0xe7
   140014d96:	(bad)  
   140014d97:	xlat   BYTE PTR ds:[rbx]
   140014d98:	addr32 out dx,al
   140014d9a:	sub    DWORD PTR [rbx+0x5e3b607],0xbecf635d
   140014da4:	push   rcx
   140014da5:	adc    al,0x43
   140014da7:	add    al,0xa
   140014da9:	add    DWORD PTR [rcx+rbx*1-0x6e],ecx
   140014dad:	out    0xd0,eax
   140014daf:	movabs ds:0x9026791a4fe0d53e,al
   140014db8:	cli    
   140014db9:	jnp    0x140014e25
   140014dbb:	cmc    
   140014dbc:	sbb    eax,0xaac241dd
   140014dc1:	add    eax,0x5399cfc4
   140014dc6:	shl    edi,0x8
   140014dc9:	and    eax,0x90c5ddca
   140014dce:	std    
   140014dcf:	std    
   140014dd0:	add    al,0x14
   140014dd2:	mov    BYTE PTR [rdx],al
   140014dd4:	mov    edx,0x88dd8848
   140014dd9:	cmp    al,0x24
   140014ddb:	jbe    0x140014df4
   140014ddd:	add    al,cl
   140014ddf:	sbb    DWORD PTR [rsi+0x17507bd0],ecx
   140014de5:	mov    DWORD PTR [rdx],ebx
   140014de7:	mov    al,0x22
   140014de9:	rex.WRB mov r11b,0xfc
   140014dec:	(bad)  
   140014ded:	out    0x82,al
   140014def:	sbb    al,cl
   140014df1:	lods   al,BYTE PTR ds:[rsi]
   140014df2:	sti    
   140014df3:	(bad)  
   140014df4:	cs data16 (bad) 
   140014df7:	xor    eax,0x1a71fb6f
   140014dfc:	(bad)  
   140014dfe:	adc    DWORD PTR [rsi-0x331338c],edi
   140014e04:	jb     0x140014e5b
   140014e06:	or     BYTE PTR [rsi+0x3ce00a74],bh
   140014e0c:	(bad)  
   140014e0d:	(bad)  
   140014e0e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014e0f:	mov    bh,0xbd
   140014e11:	movsxd edi,edi
   140014e13:	shr    DWORD PTR [rbx],0xae
   140014e16:	jp     0x140014e5f
   140014e18:	fild   WORD PTR [rax-0x1]
   140014e1b:	xchg   DWORD PTR [rdx-0x54],eax
   140014e1e:	out    dx,al
   140014e1f:	rex.WR
   140014e20:	(bad)
   140014e25:	(bad)  
   140014e26:	rex.WRB in al,0xb6
   140014e29:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014e2a:	jo     0x140014db4
   140014e2c:	lods   al,BYTE PTR ds:[rsi]
   140014e2d:	jae    0x140014e98
   140014e2f:	xor    BYTE PTR [rbx-0x7a620a43],cl
   140014e35:	fstp   QWORD PTR [rax]
   140014e37:	mov    dl,0x78
   140014e39:	movsxd ecx,edx
   140014e3b:	rex.RXB sub eax,0xb3c2b2b7
   140014e41:	add    BYTE PTR [rsi],cl
   140014e43:	or     r15b,r8b
   140014e46:	add    BYTE PTR [rcx+rbp*4+0x5ce38379],al
   140014e4d:	or     al,0x26
   140014e4f:	cmp    esp,eax
   140014e51:	and    ecx,esi
   140014e53:	out    0xb1,eax
   140014e55:	mov    esp,0x566deb0
   140014e5a:	push   rbp
   140014e5b:	rex.WRXB lea r10,[r13+0x46c46eab]
   140014e62:	call   QWORD PTR [rax]
   140014e64:	test   al,0xef
   140014e66:	(bad)  
   140014e67:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014e68:	xchg   ebx,eax
   140014e69:	rex.RXB ror DWORD PTR [r11+0x73],0x92
   140014e6e:	(bad)  
   140014e6f:	adc    BYTE PTR [rdx],ch
   140014e71:	ins    DWORD PTR es:[rdi],dx
   140014e72:	adc    ch,BYTE PTR [rdx-0x49]
   140014e75:	rcl    DWORD PTR [rdi+rax*8],cl
   140014e78:	adc    BYTE PTR [rdi],bl
   140014e7a:	cmp    eax,0xe6626e6e
   140014e7f:	(bad)  
   140014e80:	mov    bh,0xe0
   140014e82:	hlt    
   140014e83:	(bad)  
   140014e84:	outs   dx,DWORD PTR ds:[rsi]
   140014e85:	rex.X out dx,eax
   140014e87:	out    0x2a,al
   140014e89:	ret    0x29dc
   140014e8c:	mov    WORD PTR [rsi+rcx*4-0x5e],cs
   140014e90:	sahf   
   140014e91:	lahf   
   140014e92:	add    al,0xad
   140014e94:	sub    al,0x0
   140014e96:	imul   esp,DWORD PTR [rbx],0xeb750437
   140014e9c:	scas   eax,DWORD PTR es:[rdi]
   140014e9d:	int    0x3e
   140014e9f:	cmc    
   140014ea0:	dec    ah
   140014ea2:	repnz pop rbx
   140014ea4:	cmp    al,0xdf
   140014ea6:	fcomp  QWORD PTR [rbp-0x25]
   140014ea9:	fild   QWORD PTR [rcx+rdi*4+0x2147ac89]
   140014eb0:	(bad)  
   140014eb1:	lahf   
   140014eb2:	adc    eax,0x212cc048
   140014eb7:	retf   0x74d5
   140014eba:	repz movabs al,ds:0x4dccc59e3d23e3db
   140014ec4:	sar    DWORD PTR [rdx+0x73194eef],1
   140014eca:	jns    0x140014eb4
   140014ecc:	xchg   ebp,eax
   140014ecd:	repz pop rax
   140014ecf:	(bad)  
   140014ed0:	and    esi,ecx
   140014ed2:	ret    
   140014ed3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014ed4:	lahf   
   140014ed5:	cli    
   140014ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140014ed8:	xchg   ecx,eax
   140014ed9:	je     0x140014e65
   140014edb:	jno    0x140014e7e
   140014edd:	(bad)  
   140014ede:	or     edi,ebp
   140014ee0:	cdq    
   140014ee1:	(bad)
   140014ee4:	retf   
   140014ee5:	ret    0x592c
   140014ee8:	jge    0x140014ea9
   140014eea:	xchg   DWORD PTR [rcx+0x4d],ebp
   140014eed:	push   0xfffffffff024e515
   140014ef2:	xchg   esi,eax
   140014ef3:	out    0xc3,eax
   140014ef5:	jle    0x140014eaa
   140014ef7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014ef8:	leave  
   140014ef9:	rex.WB xchg BYTE PTR [r8+0x220e9cec],dl
   140014f00:	sub    bh,bl
   140014f02:	rex.WXB
   140014f03:	cmp    ebp,DWORD PTR [r9-0x2084b3db]
   140014f0a:	(bad)  
   140014f0b:	xchg   ebx,eax
   140014f0c:	ja     0x140014f8d
   140014f0e:	add    al,0x97
   140014f10:	inc    BYTE PTR [rcx]
   140014f12:	mov    dl,0x71
   140014f14:	jl     0x140014f6f
   140014f16:	(bad)  
   140014f17:	ud1    esi,DWORD PTR [rax-0x29c31ff6]
   140014f1e:	jle    0x140014f88
   140014f20:	iret   
   140014f21:	sahf   
   140014f22:	(bad)  
   140014f23:	int    0x6f
   140014f25:	jnp    0x140014eee
   140014f27:	lea    edi,[rbx]
   140014f29:	ja     0x140014f1a
   140014f2b:	stc    
   140014f2c:	xchg   ecx,eax
   140014f2d:	mov    edx,0xa44f79d3
   140014f32:	jo     0x140014fa9
   140014f34:	add    dh,BYTE PTR [rdx]
   140014f36:	pushf  
   140014f37:	cpuid  
   140014f39:	sbb    eax,0x265dfc73
   140014f3e:	test   BYTE PTR [rcx+0x77],ch
   140014f41:	rex (bad) 
   140014f43:	pop    rsi
   140014f44:	rex.WX
   140014f45:	rex.X ret 0x4e18
   140014f49:	xor    ch,BYTE PTR [rbx+0xb]
   140014f4c:	(bad)  
   140014f4d:	stos   BYTE PTR es:[rdi],al
   140014f4e:	(bad)  
   140014f4f:	or     edx,ebx
   140014f51:	jmp    0xd7e17872
   140014f56:	or     eax,0xacfc3c9a
   140014f5b:	push   rsp
   140014f5c:	rex.WX loopne 0x140014fcc
   140014f5f:	(bad)  
   140014f60:	loopne 0x140014fc2
   140014f62:	sbb    edx,0x92f64168
   140014f68:	cmovb  esp,DWORD PTR [rcx-0x6c6b9b5a]
   140014f6f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014f70:	jge    0x140014f2c
   140014f72:	push   rdx
   140014f73:	add    eax,eax
   140014f75:	or     BYTE PTR [rax+0x8ec0d9a],ch
   140014f7b:	add    ebx,ebp
   140014f7d:	xchg   edi,eax
   140014f7e:	pop    rsp
   140014f7f:	mov    ?,WORD PTR [rbp+0x3b344181]
   140014f85:	xchg   BYTE PTR [rcx-0x665fb09d],al
   140014f8b:	cdq    
   140014f8c:	rex fcomp QWORD PTR [rdi+rax*1+0x51]
   140014f91:	test   DWORD PTR [rsi+rbp*4-0x1d7ad0e4],eax
   140014f98:	sub    al,0x8c
   140014f9a:	(bad)  
   140014f9b:	fld    QWORD PTR [rbp*8-0x209877c2]
   140014fa2:	lock add esp,edx
   140014fa5:	popf   
   140014fa6:	test   BYTE PTR ds:[rcx-0x70b373cf],bl
   140014fad:	(bad)  
   140014fae:	(bad)  
   140014faf:	cli    
   140014fb0:	cmp    dl,ah
   140014fb2:	loop   0x140014fd0
   140014fb4:	push   0xffffffffaee00563
   140014fb9:	(bad)  
   140014fba:	es cli 
   140014fbc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014fbd:	lods   al,BYTE PTR ds:[rsi]
   140014fbe:	or     BYTE PTR [rcx],bh
   140014fc0:	in     eax,0x37
   140014fc2:	jo     0x140014f7f
   140014fc4:	call   0x1042ffd90
   140014fc9:	mov    dl,0x33
   140014fcb:	sar    BYTE PTR [rdx-0x95249cc],0xb
   140014fd2:	rex.RX retf 
   140014fd4:	cmp    bh,BYTE PTR [rbx-0x4d73aa25]
   140014fda:	xchg   ebx,eax
   140014fdb:	add    esi,0x15
   140014fde:	adc    BYTE PTR [rdx+0x2],dh
   140014fe1:	adc    BYTE PTR [rbp-0x5cb36981],dl
   140014fe7:	enter  0x2ac2,0x4
   140014feb:	jne    0x14001506c
   140014fed:	jrcxz  0x140015028
   140014fef:	fisubr DWORD PTR [rcx]
   140014ff1:	pop    rbx
   140014ff2:	in     eax,0x3b
   140014ff4:	sub    al,BYTE PTR [rdi+rsi*1]
   140014ff7:	movabs ds:0xb74d03cea0098200,eax
   140015000:	(bad)  
   140015001:	add    BYTE PTR [rbp-0x22],bl
   140015004:	fsub   st,st(2)
   140015006:	popf   
   140015007:	xor    BYTE PTR [rbx],dh
   140015009:	push   rbx
   14001500a:	cld    
   14001500b:	out    0x56,eax
   14001500d:	cmp    ah,BYTE PTR [rax-0x5a73cda8]
   140015013:	sbb    al,0x58
   140015015:	(bad)  
   140015016:	add    BYTE PTR [rbp+0x41],al
   140015019:	adc    DWORD PTR [rcx],esi
   14001501b:	adc    eax,0x8f5181d9
   140015020:	stos   DWORD PTR es:[rdi],eax
   140015021:	pop    rsp
   140015022:	mov    DWORD PTR [rcx+0x323ce51d],edi
   140015028:	in     al,0x4a
   14001502a:	push   0x1c
   14001502c:	retf   0x2246
   14001502f:	add    al,0x46
   140015031:	movabs al,ds:0x7f9b047bbcde2180
   14001503a:	lods   al,BYTE PTR ds:[rsi]
   14001503b:	pop    rbp
   14001503c:	or     DWORD PTR [rbx-0x3],0xfffffff9
   140015040:	xchg   edx,eax
   140015041:	outs   dx,BYTE PTR ds:[rsi]
   140015042:	(bad)  
   140015043:	add    DWORD PTR [rbx+r15*4-0x2283a953],r11d
   14001504b:	popf   
   14001504c:	outs   dx,DWORD PTR ds:[rsi]
   14001504d:	fnsave [rbx-0x8]
   140015050:	(bad)  
   140015052:	(bad)  
   140015054:	(bad)  
   140015055:	sar    bh,1
   140015057:	movabs eax,ds:0x698430e808bbeb18
   140015060:	(bad)  
   140015061:	(bad)  
   140015062:	fcmove st,st(0)
   140015064:	and    BYTE PTR [rdi+0x554004f],al
   14001506a:	movabs al,ds:0xb6edca27c599f130
   140015073:	jno    0x1400150db
   140015075:	(bad)  
   140015076:	mov    bh,0xc4
   140015078:	mov    BYTE PTR [rbp+0x7],ah
   14001507b:	sbb    BYTE PTR [rdi],dh
   14001507d:	sbb    bl,ah
   14001507f:	sbb    ch,BYTE PTR [rbx]
   140015081:	std    
   140015082:	xchg   edx,eax
   140015083:	mov    esp,0xe7379c
   140015088:	ins    BYTE PTR es:[rdi],dx
   140015089:	push   rbp
   14001508a:	enter  0xad84,0x1b
   14001508e:	(bad)  
   14001508f:	fistp  WORD PTR [rax]
   140015091:	cli    
   140015092:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015093:	(bad)  
   140015094:	sahf   
   140015095:	add    al,0x26
   140015097:	sub    DWORD PTR [rax],ecx
   140015099:	(bad)  
   14001509a:	out    0xd,eax
   14001509c:	je     0x140015024
   14001509e:	rex.RX mov al,0xf4
   1400150a1:	(bad)  
   1400150a2:	fcmovnbe st,st(1)
   1400150a4:	sbb    eax,0xfa7e09d8
   1400150a9:	(bad)  
   1400150aa:	xor    al,0x93
   1400150ac:	(bad)  
   1400150ad:	adc    bh,dl
   1400150af:	push   rsi
   1400150b0:	je     0x140015077
   1400150b2:	cdq    
   1400150b3:	add    BYTE PTR [rcx-0x282b14e3],cl
   1400150b9:	jle    0x1400150b8
   1400150bb:	(bad)  
   1400150bc:	outs   dx,BYTE PTR ds:[rsi]
   1400150bd:	jnp    0x1400150de
   1400150bf:	neg    BYTE PTR ss:[rdi-0x79]
   1400150c3:	(bad)  
   1400150c4:	(bad)  
   1400150c5:	cmp    al,0x7a
   1400150c7:	out    0xc6,eax
   1400150c9:	xor    DWORD PTR [rsi*2+0x34dcf51c],edi
   1400150d0:	ret    0x82ca
   1400150d3:	xor    al,0xfb
   1400150d5:	movabs al,ds:0x6fda7215004fc994
   1400150de:	and    ch,0x1
   1400150e1:	jo     0x140015069
   1400150e3:	cld    
   1400150e4:	stos   BYTE PTR es:[rdi],al
   1400150e5:	fdiv   DWORD PTR [rdx-0x5710d0bb]
   1400150eb:	cmp    dh,0xe6
   1400150ee:	(bad)  
   1400150ef:	test   al,0x7b
   1400150f1:	and    BYTE PTR [rdi-0x582ecd61],cl
   1400150f7:	push   rcx
   1400150f8:	add    al,0x7b
   1400150fa:	add    BYTE PTR [rbp-0x54],ah
   1400150fd:	mov    esp,0x4419ebc5
   140015102:	lock out dx,eax
   140015104:	mov    bh,0xa0
   140015106:	xchg   BYTE PTR [rdx+0x39],al
   140015109:	in     al,0x6b
   14001510b:	enter  0xc038,0x90
   14001510f:	sub    DWORD PTR [rax-0x1d],0xffffffb2
   140015113:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015114:	mov    ecx,0x2b9e7248
   140015119:	add    dl,BYTE PTR gs:[rbp+0x1e]
   14001511d:	sbb    eax,0xa66016f
   140015122:	add    DWORD PTR [rbp-0x75ff3c7a],ebp
   140015128:	pop    rsi
   140015129:	(bad)  
   14001512a:	repz rcl BYTE PTR fs:[rbx+rax*2],cl
   14001512f:	pop    rcx
   140015130:	loope  0x140015159
   140015132:	fild   WORD PTR [rdi+0x22]
   140015135:	clts   
   140015137:	data16 rex.WX
   140015139:	add    al,0x5a
   14001513c:	mov    ss,WORD PTR [rbp+0x3ab24ef3]
   140015142:	shr    bl,1
   140015144:	movabs eax,ds:0xfe6fbb97a0004f3c
   14001514d:	mov    ecx,0xdf9af470
   140015152:	in     al,0x6b
   140015154:	(bad)  
   140015155:	test   DWORD PTR [rbp+0x3],eax
   140015158:	pop    rsi
   140015159:	(bad)  
   14001515a:	xor    dh,al
   14001515c:	jnp    0x1400151b5
   14001515e:	add    bh,ah
   140015160:	mov    cl,0xf6
   140015162:	add    edi,DWORD PTR [rbx]
   140015164:	ja     0x14001513c
   140015166:	mov    bh,0xbd
   140015168:	jmp    0x1400151a7
   14001516a:	(bad)  
   14001516b:	mov    gs,esp
   14001516d:	fsincos 
   14001516f:	and    esi,DWORD PTR [rbp-0x23]
   140015172:	repz mov esi,0xce4ae910
   140015178:	iret   
   140015179:	pop    rsi
   14001517a:	ret    0x9c6c
   14001517d:	(bad)  
   14001517e:	sbb    BYTE PTR [rcx+rsi*4-0x25],dl
   140015182:	(bad)  
   140015183:	or     ah,bh
   140015185:	call   0x1839b6801
   14001518a:	rol    DWORD PTR [rdi-0x19826a53],1
   140015190:	test   DWORD PTR [rbx],edi
   140015192:	cli    
   140015193:	add    eax,0x1f22c617
   140015198:	(bad)  
   140015199:	(bad)  
   14001519a:	sbb    eax,DWORD PTR [rax]
   14001519c:	fwait
   14001519d:	cs sahf 
   14001519f:	rex.WXB and r10b,cl
   1400151a2:	mov    edi,0xa7f936b0
   1400151a7:	(bad)  
   1400151a8:	mov    bl,0x37
   1400151aa:	frstor [rax-0x6a]
   1400151ad:	ror    BYTE PTR [rdi],0x6d
   1400151b0:	or     al,0x74
   1400151b2:	data16 stos BYTE PTR es:[rdi],al
   1400151b4:	in     eax,dx
   1400151b5:	sub    DWORD PTR [rcx],edx
   1400151b7:	rex.W jge 0x1400151fe
   1400151ba:	rex.X ins BYTE PTR es:[rdi],dx
   1400151bc:	(bad)  
   1400151bd:	mov    al,0xa3
   1400151bf:	mov    ds,WORD PTR [rax-0x45]
   1400151c2:	repnz (bad) 
   1400151c4:	lods   al,BYTE PTR ds:[rsi]
   1400151c5:	imul   ebp
   1400151c7:	rex jp 0x1400151b4
   1400151ca:	cmp    ebp,eax
   1400151cc:	sahf   
   1400151cd:	cmp    al,0x82
   1400151cf:	push   0x65
   1400151d1:	add    DWORD PTR [rcx-0xbbdbf27],esp
   1400151d7:	repz test DWORD PTR [rbp-0x543d3f3],ecx
   1400151de:	rex.WRB sbb BYTE PTR [r13+0x6be8ede1],r15b
   1400151e5:	ss adc esi,esp
   1400151e8:	movsxd r12,DWORD PTR [r10+r13*2+0x14]
   1400151ed:	mov    ebp,0xcb08e333
   1400151f2:	jae    0x140015194
   1400151f4:	out    dx,al
   1400151f5:	sbb    cl,BYTE PTR [rax-0x3ceb2eae]
   1400151fb:	cwde   
   1400151fc:	jg     0x14001519e
   1400151fe:	(bad)  
   1400151ff:	ins    DWORD PTR es:[rdi],dx
   140015200:	cmc    
   140015201:	adc    eax,0x2b7e524
   140015206:	cmp    esi,ebx
   140015208:	outs   dx,DWORD PTR ds:[rsi]
   140015209:	cs scas al,BYTE PTR es:[rdi]
   14001520b:	cmp    al,0x8b
   14001520d:	or     al,0xc7
   14001520f:	add    edx,DWORD PTR [rdi-0x6752603e]
   140015215:	out    0xf8,eax
   140015217:	fwait
   140015218:	cmp    bpl,spl
   14001521b:	xchg   edi,eax
   14001521c:	loope  0x14001522d
   14001521e:	sahf   
   14001521f:	rex.WRXB movabs al,ds:0xc86ee27dc3940e39
   140015229:	add    ecx,DWORD PTR [rcx+0x79731f20]
   14001522f:	loop   0x14001522b
   140015231:	cld    
   140015232:	rex.RB ret 0xeb0b
   140015236:	outs   dx,DWORD PTR ds:[rsi]
   140015237:	cmp    bh,BYTE PTR [rax+rdx*2+0x6feb4503]
   14001523e:	call   QWORD PTR [rbp+rax*8-0x550f48c1]
   140015245:	rex.XB adc al,0x46
   140015248:	adc    DWORD PTR [rcx],edi
   14001524a:	enter  0x2263,0x37
   14001524e:	rex.WR sub rax,0x711f6140
   140015254:	add    DWORD PTR [rcx-0x24],edi
   140015257:	hlt    
   140015258:	adc    al,0xb5
   14001525a:	add    BYTE PTR [rsi+0x432f9072],bl
   140015260:	xlat   BYTE PTR ds:[rbx]
   140015261:	and    eax,0x5cb4e2e4
   140015266:	ror    dh,0xac
   140015269:	pop    rsp
   14001526a:	or     eax,0xbf3151cf
   14001526f:	ins    DWORD PTR es:[rdi],dx
   140015270:	fisub  WORD PTR [rbp+0x4aaf8340]
   140015276:	or     ebp,DWORD PTR [rdi+0x7]
   140015279:	loope  0x1400152ec
   14001527b:	mov    esp,0x2f01398c
   140015280:	pop    rsp
   140015281:	add    DWORD PTR [rdi+rax*8-0x504a026],ebx
   140015288:	(bad)  
   140015289:	or     al,0x5d
   14001528b:	ja     0x140015260
   14001528d:	sub    eax,0xefebedef
   140015292:	sti    
   140015293:	xchg   DWORD PTR [rbp+0x55],esi
   140015296:	ffreep st(5)
   140015298:	rex
   140015299:	rex.WRXB and r15b,BYTE PTR [r8-0x4e]
   14001529d:	or     al,0x3
   14001529f:	push   0x4b33ca52
   1400152a4:	out    dx,eax
   1400152a5:	xor    esi,DWORD PTR [rcx+0x3e]
   1400152a8:	test   al,0x59
   1400152aa:	(bad)  
   1400152ab:	cld    
   1400152ac:	nop
   1400152ad:	int3   
   1400152ae:	adc    eax,0x600c0f80
   1400152b3:	add    ch,BYTE PTR [rdx+rbx*2+0x44]
   1400152b7:	(bad)  
   1400152b8:	out    dx,al
   1400152b9:	rex.WRB (bad) 
   1400152bb:	jne    0x1400152dc
   1400152bd:	(bad)  
   1400152be:	or     DWORD PTR [rbx-0x52],ebx
   1400152c1:	xchg   esp,eax
   1400152c2:	fwait
   1400152c3:	mov    dh,BYTE PTR [rbx-0x4d60264]
   1400152c9:	push   rax
   1400152ca:	retf   0x823b
   1400152cd:	mov    ebx,0x1790626
   1400152d2:	js     0x140015254
   1400152d4:	shl    BYTE PTR [rdx-0x45],0x72
   1400152d8:	cmp    ecx,ebx
   1400152da:	(bad)  
   1400152db:	adc    esp,DWORD PTR [rax-0x77ef3536]
   1400152e1:	repnz add bl,ah
   1400152e4:	and    BYTE PTR [rax+0x17],dh
   1400152e7:	cmp    eax,DWORD PTR [rax]
   1400152e9:	push   rsp
   1400152ea:	xchg   edi,eax
   1400152eb:	pop    rsp
   1400152ec:	adc    ebp,0xfd3441be
   1400152f2:	cmp    edx,eax
   1400152f4:	sbb    al,0x7d
   1400152f6:	add    dh,BYTE PTR [rax+rsi*1-0x745115f3]
   1400152fd:	and    bl,BYTE PTR [rbx+0x5f]
   140015300:	(bad)  
   140015301:	jbe    0x1400152f1
   140015303:	(bad)
   140015306:	mov    ebp,0x30df751f
   14001530b:	mov    al,0x70
   14001530d:	or     bh,BYTE PTR [rbx]
   14001530f:	addr32 (bad) 
   140015311:	movsxd esi,DWORD PTR [rax+0x7a]
   140015314:	or     al,0x71
   140015316:	(bad)  
   140015317:	(bad)  
   140015318:	mov    ah,0xba
   14001531a:	and    al,0xb9
   14001531c:	add    al,0x94
   14001531e:	pushf  
   14001531f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015320:	(bad)  
   140015321:	push   sp
   140015323:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015324:	jge    0x140015324
   140015326:	cmc    
   140015327:	(bad)  
   140015328:	rex.WR clc 
   14001532a:	or     eax,0x7e1347fa
   14001532f:	adc    ebp,DWORD PTR [rsi+riz*1+0x70]
   140015333:	adc    BYTE PTR [rdi-0x3f],dh
   140015336:	imul   eax,DWORD PTR [rax+rbx*2],0xf61c9fe7
   14001533d:	movsxd edx,DWORD PTR [rsi+0x36]
   140015340:	mov    edi,0x2882f825
   140015345:	xor    ch,BYTE PTR [rdi-0x70]
   140015348:	fld    QWORD PTR [rsi]
   14001534a:	fsubr  DWORD PTR [rbx+0x12]
   14001534d:	js     0x1400153bc
   14001534f:	rex.WX
   140015350:	rex
   140015351:	rex.RXB push r13
   140015353:	lods   al,BYTE PTR ds:[rsi]
   140015354:	and    eax,0x3866dfe5
   140015359:	nop
   14001535a:	(bad)  
   14001535b:	fisub  WORD PTR [rcx+0x796713be]
   140015361:	(bad)  
   140015362:	push   rdx
   140015363:	(bad)  
   140015364:	ins    DWORD PTR es:[rdi],dx
   140015365:	(bad)  
   140015366:	cs xchg edx,eax
   140015368:	in     al,dx
   140015369:	lock fnsave [rax+0x61]
   14001536d:	stos   DWORD PTR es:[rdi],eax
   14001536e:	mov    WORD PTR [rdx-0x1c659c76],ss
   140015374:	sub    DWORD PTR [rdi+0x2bb9ad59],ebp
   14001537a:	xchg   ebp,eax
   14001537b:	adc    ah,al
   14001537d:	fwait
   14001537e:	nop
   14001537f:	mov    al,0x89
   140015381:	scas   eax,DWORD PTR es:[rdi]
   140015382:	sbb    eax,0x8104a28
   140015387:	rex.WB pop r12
   140015389:	sbb    ah,bl
   14001538b:	(bad)  
   14001538c:	ins    BYTE PTR es:[rdi],dx
   14001538d:	(bad)  
   14001538e:	pop    rdx
   14001538f:	faddp  st(4),st
   140015391:	push   rsi
   140015392:	mov    ebx,0x1281e79f
   140015397:	lods   eax,DWORD PTR ds:[rsi]
   140015398:	push   rsp
   140015399:	adc    BYTE PTR [rdx+0x276b9710],al
   14001539f:	fistp  QWORD PTR ss:[rdi]
   1400153a2:	(bad)  
   1400153a3:	int    0xdf
   1400153a5:	jns    0x1400153e0
   1400153a7:	(bad)  
   1400153a8:	vmwrite rdi,QWORD PTR [rsi+0xa]
   1400153ac:	loopne 0x1400153ea
   1400153ae:	(bad)  
   1400153af:	(bad)  
   1400153b0:	rex jl 0x14001538e
   1400153b3:	(bad)  
   1400153b4:	cld    
   1400153b5:	fmul   DWORD PTR [rbp+0x3b]
   1400153b8:	ja     0x1400153a9
   1400153ba:	std    
   1400153bb:	(bad)  
   1400153bc:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400153be:	repz rcr DWORD PTR [rax],0xc2
   1400153c2:	push   rbp
   1400153c3:	and    cl,cl
   1400153c5:	mov    DWORD PTR [rsi],edx
   1400153c7:	(bad)
   1400153ca:	js     0x140015359
   1400153cc:	sti    
   1400153cd:	out    0xe4,eax
   1400153cf:	mov    esi,0x68217332
   1400153d4:	push   0xffffffffef7b72c3
   1400153d9:	mov    al,0xbd
   1400153db:	mov    al,0xee
   1400153dd:	mov    dl,0x43
   1400153df:	(bad)  
   1400153e0:	rex.RX pushf 
   1400153e2:	ror    cl,cl
   1400153e5:	ret    0x73e6
   1400153e8:	push   rdx
   1400153e9:	sti    
   1400153ea:	movabs al,ds:0xe94b2c53252c356a
   1400153f3:	(bad)  
   1400153f4:	retf   
   1400153f5:	and    BYTE PTR [rdx],dl
   1400153f7:	mov    dh,0x3c
   1400153f9:	jge    0x1400153b8
   1400153fb:	mov    BYTE PTR [rbp+rbp*8+0x71],cl
   1400153ff:	jno    0x14001543e
   140015401:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015402:	jns    0x1400153cc
   140015404:	lods   eax,DWORD PTR ds:[rsi]
   140015405:	(bad)  
   140015406:	push   rbx
   140015407:	sbb    DWORD PTR [rdx+0x2a],esi
   14001540a:	(bad)  
   14001540b:	(bad)  
   14001540c:	mov    cl,0xcf
   14001540e:	retf   
   14001540f:	(bad)  
   140015410:	rex.WB cli 
   140015412:	or     al,0x8c
   140015414:	mov    WORD PTR [rax-0x1b],fs
   140015417:	xchg   BYTE PTR [rdi],dh
   140015419:	(bad)  
   14001541a:	mov    bl,0x7f
   14001541c:	adc    cl,ch
   14001541e:	cdq    
   14001541f:	rex.RXB sbb BYTE PTR [r9+0xac6d071],0x62
   140015427:	push   rbp
   140015428:	(bad)  
   140015429:	hlt    
   14001542a:	cmc    
   14001542b:	inc    DWORD PTR [rax]
   14001542d:	retf   
   14001542e:	sti    
   14001542f:	scas   eax,DWORD PTR es:[rdi]
   140015430:	rex.RXB (bad) 
   140015433:	xor    bh,BYTE PTR [rdx-0x1a]
   140015436:	rex.WRX (bad) 
   140015438:	js     0x1400154ac
   14001543a:	adc    al,0xf5
   14001543c:	in     al,dx
   14001543d:	and    al,0xc2
   14001543f:	repnz add dl,al
   140015442:	test   al,0xf5
   140015444:	(bad)  
   140015445:	(bad)  
   140015446:	rex.WB jmp 0x14001545f
   140015449:	jrcxz  0x140015482
   14001544b:	call   0x12559fd6f
   140015450:	xchg   DWORD PTR [rdx-0x80],ecx
   140015453:	lods   al,BYTE PTR ds:[rsi]
   140015454:	(bad)  
   140015455:	mov    ebp,0xed6e9a50
   14001545a:	xchg   ecx,eax
   14001545b:	int    0x90
   14001545d:	xchg   ebx,eax
   14001545e:	js     0x140015421
   140015460:	(bad)  
   140015461:	or     al,dl
   140015463:	leave  
   140015464:	out    dx,al
   140015465:	ret    0xfe46
   140015468:	cmp    eax,0xc09865d9
   14001546d:	xchg   edi,eax
   14001546e:	xchg   esi,eax
   14001546f:	sar    bh,cl
   140015471:	enter  0x8295,0x23
   140015475:	xor    BYTE PTR [rdi],ah
   140015477:	fst    QWORD PTR [rcx+rsi*4+0x16]
   14001547b:	xchg   esi,eax
   14001547c:	rcr    esi,cl
   14001547e:	fwait
   14001547f:	nop
   140015480:	mov    ebx,0x686bd125
   140015485:	mov    ebx,0xc1435270
   14001548a:	(bad)  
   14001548b:	push   rdx
   14001548d:	mov    ebp,0x373ffce6
   140015492:	shrd   DWORD PTR [rcx-0x73c973d7],edx,cl
   140015499:	jmp    0x14184f555
   14001549e:	rex.X add al,0x96
   1400154a1:	and    eax,0x5d488c1
   1400154a6:	sub    BYTE PTR [rdi+rbp*2],0xce
   1400154aa:	fs sbb edi,ebx
   1400154ad:	jp     0x1400154ef
   1400154af:	rcl    BYTE PTR [rdx-0x53482cf],cl
   1400154b5:	lods   al,BYTE PTR ds:[rsi]
   1400154b6:	in     al,dx
   1400154b7:	rol    BYTE PTR [rcx-0x50],cl
   1400154ba:	cmc    
   1400154bb:	sbb    eax,0x50ec148d
   1400154c0:	jp     0x1400154af
   1400154c2:	(bad)  
   1400154c3:	rcl    ebx,cl
   1400154c5:	mov    bh,0xfe
   1400154c7:	adc    bh,BYTE PTR [rdi+0x593eebe6]
   1400154cd:	pop    rsi
   1400154ce:	(bad)  
   1400154cf:	(bad)  
   1400154d0:	loopne 0x1400154ae
   1400154d2:	or     ah,al
   1400154d4:	(bad)  
   1400154d6:	ds pop rsp
   1400154d8:	jnp    0x1400154a5
   1400154da:	jmp    0x140015463
   1400154dc:	scas   al,BYTE PTR es:[rdi]
   1400154dd:	mov    ebp,0xe9eff5e5
   1400154e2:	out    dx,eax
   1400154e3:	out    dx,eax
   1400154e4:	sti    
   1400154e5:	xchg   ecx,eax
   1400154e6:	rex.WRX push rbp
   1400154e8:	mov    edi,0x4300c005
   1400154ed:	(bad)  
   1400154ee:	xchg   esi,eax
   1400154ef:	test   ecx,esi
   1400154f1:	xor    rax,0x423df5b9
   1400154f7:	rcr    BYTE PTR [rax+0x76fec3b7],1
   1400154fd:	mov    ah,0x3b
   1400154ff:	add    DWORD PTR [rdx+0x5f619731],ebx
   140015505:	sub    al,BYTE PTR [rdx+0x7b]
   140015508:	(bad)  
   140015509:	dec    DWORD PTR [rax-0x76be1d23]
   14001550f:	xchg   ebp,eax
   140015510:	(bad)  
   140015511:	in     al,0xf
   140015513:	push   rbx
   140015514:	cmp    dh,ch
   140015516:	mov    edx,0x161fb01d
   14001551b:	push   rbx
   14001551c:	and    BYTE PTR [rdi-0x2e2f5f4d],al
   140015522:	fdivr  DWORD PTR [rbp+rbp*8+0x23]
   140015526:	add    eax,0x6bc9fa4f
   14001552b:	rex.WRB mov r15b,0x8e
   14001552e:	push   rbx
   14001552f:	sbb    dl,BYTE PTR [rdi+0x7b05423c]
   140015535:	lods   eax,DWORD PTR ds:[rsi]
   140015536:	jle    0x140015574
   140015538:	mov    BYTE PTR [rdx+rdi*8-0x1b],bh
   14001553c:	jrcxz  0x1400154d6
   14001553e:	add    BYTE PTR [rax],cl
   140015540:	adc    DWORD PTR [rbp+rbp*2-0x52],0xc2b7b061
   140015548:	fisubr DWORD PTR [rbx-0x71153a92]
   14001554e:	(bad)  
   14001554f:	xor    al,0x4f
   140015551:	or     BYTE PTR ds:[rdx],bh
   140015554:	(bad)  
   140015555:	sub    al,0x96
   140015557:	scas   eax,DWORD PTR es:[rdi]
   140015558:	mov    eax,0xfeafe30a
   14001555d:	sti    
   14001555e:	call   0x1bf3d566e
   140015563:	or     al,BYTE PTR [rbx-0x2d]
   140015566:	movabs ds:0x35363e8d213e9fe8,eax
   14001556f:	jmp    0x16b25e7fb
   140015574:	adc    DWORD PTR [rax],0xa8f61658
   14001557a:	and    DWORD PTR [rcx+0x7f],ebx
   14001557d:	mov    dl,0xe0
   14001557f:	xchg   DWORD PTR [rsi-0x4],edx
   140015582:	push   rcx
   140015583:	adc    esi,esi
   140015585:	push   rbx
   140015586:	stos   DWORD PTR es:[rdi],eax
   140015587:	or     eax,0x5d97340
   14001558c:	(bad)  
   14001558d:	and    eax,DWORD PTR [rcx+0x2d]
   140015590:	mov    ch,0x31
   140015592:	cld    
   140015593:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015594:	add    al,ah
   140015596:	mov    al,0x9d
   140015598:	add    BYTE PTR [rip+0xdc2d8b],ch        # 0x140dd8329
   14001559e:	shr    BYTE PTR [rdi+rdi*1-0x35],cl
   1400155a2:	xchg   edi,eax
   1400155a3:	(bad)  
   1400155a4:	clc    
   1400155a5:	sbb    al,BYTE PTR [rax+0x5811cc84]
   1400155ab:	push   rax
   1400155ac:	xor    BYTE PTR [rdi-0x68ea26e9],al
   1400155b2:	int    0x15
   1400155b4:	imul   edi,eax,0xffffff91
   1400155b7:	(bad)  
   1400155b8:	pop    rsi
   1400155b9:	mov    dh,0xf8
   1400155bb:	in     eax,0x66
   1400155bd:	out    dx,al
   1400155be:	(bad)  
   1400155bf:	and    eax,0x331fd348
   1400155c4:	es (bad) 
   1400155c6:	xlat   BYTE PTR ds:[rbx]
   1400155c7:	(bad)  
   1400155c8:	adc    al,0xe1
   1400155ca:	rcl    BYTE PTR [rcx+0xa1b4ad4],1
   1400155d0:	push   rcx
   1400155d1:	xchg   DWORD PTR [rsi-0x4ff65634],ecx
   1400155d7:	sahf   
   1400155d8:	(bad)  
   1400155d9:	pushfw 
   1400155db:	or     al,0x5d
   1400155dd:	pop    rdx
   1400155de:	clc    
   1400155df:	mov    bl,0x71
   1400155e1:	rex.RX adc al,0xaa
   1400155e4:	xor    BYTE PTR [rdx-0x3477de6e],0x63
   1400155eb:	retf   0x1a47
   1400155ee:	(bad)  
   1400155ef:	in     al,0xb9
   1400155f1:	ins    BYTE PTR es:[rdi],dx
   1400155f2:	cmp    esp,ebp
   1400155f4:	pop    rdx
   1400155f5:	mov    al,0xe0
   1400155f7:	repz push rsp
   1400155f9:	jle    0x140015586
   1400155fb:	mov    esi,0x6ee578cb
   140015600:	add    bh,bl
   140015602:	rex.R (bad) 
   140015604:	or     DWORD PTR [rax+0x49],edi
   140015607:	mov    bh,0x33
   140015609:	sub    eax,DWORD PTR [rax-0x432ecb0d]
   14001560f:	jmp    0x140015658
   140015611:	push   rcx
   140015613:	jmp    0x14001559b
   140015615:	rex.RX jbe 0x140015697
   140015618:	movabs al,ds:0x1aba04387f7b7b7
   140015621:	adc    eax,0x6ce69b7a
   140015626:	xchg   ebx,eax
   140015627:	pop    rbx
   140015628:	(bad)  
   140015629:	shl    DWORD PTR [rbx],cl
   14001562b:	icebp  
   14001562c:	(bad)  
   14001562d:	xchg   edx,eax
   14001562e:	mov    edx,0x9d212f32
   140015633:	or     cl,BYTE PTR [rax+0x6a]
   140015636:	cmp    DWORD PTR [rsi+rbp*1],0x45
   14001563a:	rex.RXB jg 0x1400156a0
   14001563d:	outs   dx,DWORD PTR ds:[rsi]
   14001563e:	retf   
   14001563f:	ins    BYTE PTR es:[rdi],dx
   140015640:	mov    edi,0xeecea5b6
   140015645:	rex.X stc 
   140015647:	cdq    
   140015648:	in     eax,0x8
   14001564a:	mov    BYTE PTR [rdx-0x79e25970],dl
   140015650:	add    BYTE PTR [rax+0x26d81ccd],ah
   140015656:	je     0x1400155f1
   140015658:	mov    dl,BYTE PTR [rcx+0x58]
   14001565b:	(bad)  
   14001565c:	rex.RXB adc r12b,BYTE PTR [r13-0x6aae2e0e]
   140015663:	push   rbx
   140015664:	nop
   140015665:	sub    ecx,DWORD PTR [rdi]
   140015667:	imul   ebp,DWORD PTR [rdx+riz*2],0xffffffee
   14001566b:	mov    esp,DWORD PTR [rbp+0x4d6e6c2]
   140015671:	jns    0x140015659
   140015673:	xor    BYTE PTR [rax],cl
   140015675:	sbb    DWORD PTR [rbx],0xea8340ec
   14001567b:	shr    BYTE PTR [rbx+0x2763bab0],cl
   140015681:	mov    edx,0x7a303b03
   140015686:	(bad)
   140015689:	cmp    esi,DWORD PTR [rsi-0x7d]
   14001568c:	push   rdi
   14001568d:	(bad)  
   14001568e:	xor    BYTE PTR [rax],bh
   140015690:	jnp    0x1400156a4
   140015692:	rex.XB xchg r11d,eax
   140015694:	movsxd ebp,DWORD PTR [rax+0x561067e6]
   14001569a:	xchg   edi,eax
   14001569b:	shr    BYTE PTR [rcx+0x3],0x64
   14001569f:	js     0x1400156fe
   1400156a1:	lahf   
   1400156a2:	or     BYTE PTR [r10],r9b
   1400156a5:	std    
   1400156a6:	and    esi,eax
   1400156a8:	sub    ah,BYTE PTR [rdx+0x15516bc9]
   1400156ae:	(bad)  
   1400156af:	fild   QWORD PTR [rip+0xbc59ad]        # 0x140bdb062
   1400156b5:	stos   DWORD PTR es:[rdi],eax
   1400156b6:	(bad)
   1400156b9:	add    BYTE PTR [rbx-0x3a],bh
   1400156bc:	rex.RX (bad) 
   1400156be:	xor    DWORD PTR [rax-0x57],esp
   1400156c1:	sbb    DWORD PTR [rcx-0x8],0xffffffc9
   1400156c5:	test   DWORD PTR [rdi],esi
   1400156c7:	or     ebp,DWORD PTR [rsi+rsi*1-0x3]
   1400156cb:	outs   dx,BYTE PTR ds:[rsi]
   1400156cc:	sub    BYTE PTR [r15-0x7c58af5],r8b
   1400156d3:	std    
   1400156d4:	(bad)  [rbx]
   1400156d6:	(bad)  [rsi+0x3c8d29b1]
   1400156dc:	adc    al,0xf6
   1400156de:	mov    ecx,0xeb16e8c1
   1400156e3:	push   0xffffffffffffffe3
   1400156e5:	mov    edi,0xd316531d
   1400156ea:	xor    edx,0x8a44a9ef
   1400156f0:	pushf  
   1400156f1:	out    0x9b,eax
   1400156f3:	and    bl,BYTE PTR [rax+0x7587e132]
   1400156f9:	(bad)  
   1400156fa:	cdq    
   1400156fb:	icebp  
   1400156fc:	mov    al,0xbc
   1400156fe:	and    ecx,edi
   140015700:	(bad)  
   140015701:	xor    BYTE PTR [rbx-0x33c5da3c],ah
   140015707:	push   rdi
   140015708:	(bad)  
   140015709:	jns    0x1400156c9
   14001570b:	in     eax,0x2d
   14001570d:	fs (bad) 
   14001570f:	sub    DWORD PTR [rdi+0x6a],ecx
   140015712:	(bad)  
   140015713:	ja     0x1400156f4
   140015715:	std    
   140015716:	(bad)  
   140015717:	(bad)  
   140015718:	clc    
   140015719:	(bad)  
   14001571a:	mul    DWORD PTR [rcx-0x21]
   14001571d:	rex.RX icebp 
   14001571f:	xchg   ebx,eax
   140015720:	xchg   edi,eax
   140015721:	add    DWORD PTR [rcx],eax
   140015723:	pushf  
   140015724:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015725:	lods   eax,DWORD PTR ds:[rsi]
   140015726:	(bad)  
   140015727:	xor    eax,0xe3bcde37
   14001572c:	mov    edx,0x577b6f5b
   140015731:	inc    eax
   140015733:	ror    BYTE PTR [rdi+0x27755556],0x11
   14001573a:	or     eax,0xbd21c831
   14001573f:	cmp    eax,0xd68aa0f4
   140015744:	imul   esi,ecx,0xffffffd1
   140015747:	pop    si
   140015749:	gs (bad) 
   14001574b:	in     eax,dx
   14001574c:	cwde   
   14001574d:	add    ebx,DWORD PTR [rbx]
   14001574f:	(bad)  
   140015750:	jbe    0x14001576a
   140015752:	(bad)  
   140015753:	in     eax,0xfe
   140015755:	sub    BYTE PTR [rsi],ah
   140015757:	rex.RB
   140015758:	or     ah,BYTE PTR ss:[rax]
   14001575b:	xchg   esp,eax
   14001575c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001575d:	sbb    BYTE PTR [rsi+0x6e],dh
   140015760:	js     0x1400157b0
   140015762:	ss mov cl,0xe5
   140015765:	(bad)  
   140015766:	ins    DWORD PTR es:[rdi],dx
   140015767:	icebp  
   140015768:	call   rbp
   14001576a:	loop   0x140015786
   14001576c:	(bad)  
   14001576d:	enter  0xc956,0x5c
   140015771:	cmp    eax,0x409f1fbd
   140015776:	addr32 retf 0xd34e
   14001577a:	jae    0x1400157e6
   14001577c:	sbb    ebp,eax
   14001577e:	lods   eax,DWORD PTR ds:[rsi]
   14001577f:	jl     0x140015734
   140015781:	pop    rcx
   140015782:	sbb    al,0x2
   140015784:	rex.R loope 0x1400157ac
   140015787:	rex.XB
   140015788:	rex.X stc 
   14001578a:	icebp  
   14001578b:	(bad)  
   14001578c:	(bad)  
   14001578d:	and    ecx,DWORD PTR [rsi-0x66]
   140015790:	out    dx,al
   140015791:	sub    edi,ebx
   140015793:	and    al,0x10
   140015795:	nop
   140015796:	sbb    dh,ah
   140015798:	vpmuludq ymm14,ymm6,ymm4
   14001579c:	jbe    0x14001578e
   14001579e:	(bad)  
   14001579f:	(bad)  
   1400157a0:	stos   DWORD PTR es:[rdi],eax
   1400157a1:	mov    cl,0x74
   1400157a3:	call   0x166d5007d
   1400157a8:	push   0xffffffffa64614fe
   1400157ad:	mov    fs,WORD PTR [rdx+0x6814f667]
   1400157b3:	jne    0x1400157c6
   1400157b5:	fcomp  QWORD PTR [rbp+0x43]
   1400157b8:	mov    al,0x5a
   1400157ba:	jg     0x140015771
   1400157bc:	outs   dx,BYTE PTR ds:[rsi]
   1400157bd:	push   rcx
   1400157be:	pop    rbx
   1400157bf:	jge    0x140015816
   1400157c1:	int3   
   1400157c2:	rex.WX mov spl,0x49
   1400157c5:	mov    ebp,0x47edd97f
   1400157ca:	lods   al,BYTE PTR ds:[rsi]
   1400157cb:	mov    edi,0x5af273c1
   1400157d0:	or     bl,cl
   1400157d2:	jnp    0x140015755
   1400157d4:	jle    0x14001577c
   1400157d6:	(bad)  
   1400157d7:	rex.WB lods rax,QWORD PTR ds:[rsi]
   1400157d9:	jne    0x140015829
   1400157db:	(bad)  
   1400157dc:	add    eax,ecx
   1400157de:	sub    eax,0xb575167f
   1400157e3:	lahf   
   1400157e4:	rol    DWORD PTR fs:[rip+0xffffffffbdf30c23],1        # 0xfdf4640e
   1400157eb:	push   rbx
   1400157ec:	enter  0x977b,0x4d
   1400157f0:	rex.RX sub al,0x2d
   1400157f3:	mov    eax,0x28a619d4
   1400157f8:	cmc    
   1400157f9:	(bad)  
   1400157fa:	xor    BYTE PTR [rbx-0x12],al
   1400157fd:	repz rex.B
   1400157ff:	gs stos DWORD PTR es:[rdi],eax
   140015801:	(bad)
   140015804:	lahf   
   140015805:	fistp  DWORD PTR [rsp-0xdf9c098]
   14001580c:	(bad)  
   14001580d:	(bad)  
   14001580e:	sahf   
   14001580f:	cmp    BYTE PTR [rsi+0x45b79527],ah
   140015815:	(bad)  
   140015816:	lahf   
   140015817:	pop    rdi
   140015818:	(bad)  
   140015819:	and    edi,DWORD PTR [rcx]
   14001581b:	rex.WRXB and rax,0x421517
   140015821:	xchg   DWORD PTR [rsp+riz*4-0x494debf],eax
   140015828:	in     eax,dx
   140015829:	pop    rbp
   14001582a:	sub    DWORD PTR [rbp+0x6a],0xffffff98
   14001582e:	movabs ds:0x42082b1b381a6365,al
   140015837:	sub    DWORD PTR [rdx],0x627bf28e
   14001583d:	rex.RX test esi,r12d
   140015840:	push   rbp
   140015841:	ja     0x1400158a6
   140015843:	loop   0x1400157fb
   140015845:	sti    
   140015846:	mov    al,0xef
   140015848:	ror    eax,cl
   14001584a:	rex.WB
   14001584b:	rex.B (bad) 
   14001584d:	cdq    
   14001584e:	sbb    edx,DWORD PTR [rax-0x63]
   140015851:	xlat   BYTE PTR ds:[rbx]
   140015852:	fidivr DWORD PTR [rdi-0x18]
   140015855:	rex.RXB pop r15
   140015857:	mov    ch,0x6b
   140015859:	iret   
   14001585a:	mov    esi,0xce9d57f7
   14001585f:	ja     0x10f24b77d
   140015865:	fnstcw WORD PTR [rbx+rbx*4+0x2]
   140015869:	(bad)  
   14001586a:	sbb    ah,cl
   14001586c:	sub    DWORD PTR gs:[rax+0x955a648],edx
   140015873:	xchg   edx,eax
   140015874:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015876:	adc    ebp,DWORD PTR [rax-0x37092cfc]
   14001587c:	(bad)  [rax-0x466125ea]
   140015882:	cmp    BYTE PTR [rdi],al
   140015884:	mov    dl,0xa2
   140015886:	xor    BYTE PTR [rbx-0x1f],cl
   140015889:	xor    eax,0x17f7e6df
   14001588e:	jae    0x140015851
   140015890:	mov    es,WORD PTR [rbp-0x3c]
   140015893:	lods   eax,DWORD PTR ds:[rsi]
   140015894:	cld    
   140015895:	jg     0x1400158dd
   140015897:	push   rsi
   140015898:	sbb    al,0x66
   14001589a:	stc    
   14001589b:	ins    DWORD PTR es:[rdi],dx
   14001589c:	loop   0x140015839
   14001589e:	rex.WRXB jbe 0x140015887
   1400158a1:	stos   DWORD PTR es:[rdi],eax
   1400158a2:	or     esi,DWORD PTR [rax-0x68f144e8]
   1400158a8:	pop    rbx
   1400158a9:	rex.WRX
   1400158aa:	rex.RXB (bad) 
   1400158ac:	fdiv   QWORD PTR [rdx+0x76a4f975]
   1400158b2:	xor    al,0xf
   1400158b4:	rex.RXB xchg r8d,eax
   1400158b6:	(bad)  
   1400158b7:	push   rbx
   1400158b8:	call   rsi
   1400158ba:	mov    edx,0x585c949
   1400158bf:	add    al,0x6e
   1400158c1:	xor    BYTE PTR [rbp-0x1e],dh
   1400158c4:	or     dh,al
   1400158c6:	neg    bh
   1400158c8:	or     dl,ch
   1400158ca:	fld    DWORD PTR [rcx-0x2271c0cc]
   1400158d0:	xor    esp,DWORD PTR [rbx+0x18]
   1400158d3:	cwde   
   1400158d4:	cmp    cl,BYTE PTR [rsi-0x4f78c750]
   1400158da:	mov    esi,0x3f03d7ac
   1400158df:	(bad)  
   1400158e0:	rex.B loop 0x1400158de
   1400158e3:	adc    eax,0xf1856a11
   1400158e8:	add    bh,ch
   1400158ea:	loope  0x140015925
   1400158ec:	call   QWORD PTR [rip+0xffffffffd5aa7274]        # 0x115abcb66
   1400158f2:	ss stos DWORD PTR es:[rdi],eax
   1400158f4:	cdq    
   1400158f5:	test   ebx,edx
   1400158f7:	add    al,0xbe
   1400158f9:	mov    BYTE PTR [rsi],cl
   1400158fb:	and    BYTE PTR [rbx],ch
   1400158fd:	push   0xffffffffffffffcb
   1400158ff:	adc    ch,BYTE PTR [rdi+rbp*8]
   140015902:	stos   DWORD PTR es:[rdi],eax
   140015903:	push   rbp
   140015904:	(bad)  
   140015905:	stos   DWORD PTR es:[rdi],eax
   140015906:	out    dx,eax
   140015907:	and    eax,0x1e0e5093
   14001590c:	rex.WRB cdqe 
   14001590e:	push   rbp
   14001590f:	rex.W (bad) 
   140015911:	test   al,0x30
   140015913:	int    0xd5
   140015915:	shl    bl,1
   140015917:	mov    bh,0xc1
   140015919:	fwait
   14001591a:	pop    rbp
   14001591b:	and    al,0x5a
   14001591d:	outs   dx,BYTE PTR ds:[rsi]
   14001591e:	cmp    DWORD PTR [rbx],0x77962cff
   140015924:	imul   ebx,DWORD PTR [rsi+0x33792986],0xe
   14001592b:	rex.WRX movabs rax,0x1914f943a3c8f589
   140015935:	call   0x10288b0ea
   14001593a:	(bad)  
   14001593b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001593c:	xlat   BYTE PTR ds:[rbx]
   14001593d:	outs   dx,DWORD PTR ds:[rsi]
   14001593e:	xlat   BYTE PTR ds:[rbx]
   14001593f:	out    0xde,al
   140015941:	cmp    DWORD PTR [rdi-0x7f99e899],0xa0e5e57c
   14001594b:	cmp    al,0x1
   14001594d:	mov    eax,0x3725e730
   140015952:	mov    ch,0x65
   140015954:	sahf   
   140015955:	adc    BYTE PTR [rcx],al
   140015957:	xchg   edi,eax
   140015958:	repnz retf 0x4107
   14001595c:	clc    
   14001595d:	cmp    al,0x5e
   14001595f:	xchg   ch,al
   140015961:	rex.XB mov WORD PTR [r15],fs
   140015964:	and    dl,BYTE PTR [rax*4-0x14228c8]
   14001596b:	or     eax,0xcd7caf3b
   140015970:	or     eax,0x1c1fe96f
   140015975:	cli    
   140015976:	mov    cl,0xaa
   140015978:	stos   BYTE PTR es:[rdi],al
   140015979:	out    dx,al
   14001597a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001597b:	rol    BYTE PTR [rbx+rdx*8+0x2f],cl
   140015980:	xor    ebx,edi
   140015982:	test   al,0x11
   140015984:	sub    eax,DWORD PTR [rdx]
   140015986:	cmc    
   140015987:	jae    0x140015918
   140015989:	hlt    
   14001598a:	pushf  
   14001598b:	jg     0x1400159da
   14001598d:	movabs al,ds:0x260c473bfac7c2a8
   140015996:	cmp    al,0xec
   140015998:	mov    al,0x49
   14001599a:	(bad)  
   14001599b:	mov    DWORD PTR [rip+0x4211e8fc],edx        # 0x18213429d
   1400159a1:	enter  0x4984,0x31
   1400159a5:	pop    rax
   1400159a6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400159a7:	cmp    BYTE PTR [rsp+rdx*1],0xa8
   1400159ab:	sbb    DWORD PTR [rbx+0x4ec0b0a],0x5d
   1400159b2:	add    DWORD PTR [rax],ebx
   1400159b4:	add    cl,dl
   1400159b6:	and    edi,DWORD PTR fs:[rcx]
   1400159b9:	scas   eax,DWORD PTR es:[rdi]
   1400159ba:	rex
   1400159bb:	fs (bad) 
   1400159be:	adc    al,BYTE PTR [rdx+rsi*8+0x248514f0]
   1400159c5:	cmp    dl,BYTE PTR [rsi]
   1400159c7:	out    0x6f,al
   1400159c9:	mov    edx,0xac52688f
   1400159ce:	popf   
   1400159cf:	(bad)  
   1400159d1:	sbb    DWORD PTR [rsi],ebp
   1400159d3:	mov    ecx,0xd35097f0
   1400159d8:	add    eax,0xde919edf
   1400159dd:	pop    rbx
   1400159de:	mov    WORD PTR [rcx],ss
   1400159e0:	retf   
   1400159e1:	movsxd eax,DWORD PTR [rdi-0xf]
   1400159e4:	fs out dx,eax
   1400159e6:	jle    0x14001598c
   1400159e8:	mov    ebp,0xceac2057
   1400159ed:	movabs ds:0x5bf894a68638e67f,eax
   1400159f6:	pop    rbp
   1400159f7:	add    al,0x37
   1400159f9:	imul   ecx,DWORD PTR [rax],0x56
   1400159fc:	leave  
   1400159fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400159fe:	ret    
   1400159ff:	(bad)  
   140015a00:	shr    DWORD PTR [rax-0x75064b7e],0x44
   140015a07:	or     dl,bl
   140015a09:	out    0xcf,eax
   140015a0b:	cdq    
   140015a0c:	jg     0x1400159c2
   140015a0e:	or     al,0x1f
   140015a10:	add    ch,dh
   140015a12:	push   rdi
   140015a13:	(bad)  
   140015a14:	ja     0x1400159cd
   140015a16:	xor    DWORD PTR [rbx],ebp
   140015a18:	(bad)  
   140015a19:	jbe    0x140015a23
   140015a1b:	push   0x21
   140015a1d:	fisttp QWORD PTR [rdx+0x1b]
   140015a20:	cld    
   140015a21:	xor    eax,0x7257cb
   140015a26:	xchg   BYTE PTR [rax],bh
   140015a28:	xor    ah,BYTE PTR [rcx]
   140015a2a:	push   0xc1389cb
   140015a2f:	adc    eax,0x760770b0
   140015a34:	(bad)  
   140015a35:	xchg   esp,eax
   140015a36:	mov    edi,0xcd00ab2f
   140015a3b:	add    BYTE PTR [rax-0x3048cdae],bl
   140015a41:	fimul  DWORD PTR [rdi+riz*2-0xd26be95]
   140015a48:	cli    
   140015a49:	data16 loope 0x140015a8c
   140015a4c:	sbb    ebx,DWORD PTR [rbx-0x553f7cca]
   140015a52:	adc    al,0xc
   140015a54:	and    eax,0x439273e6
   140015a59:	jl     0x140015aae
   140015a5b:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   140015a5d:	sub    eax,eax
   140015a5f:	rex.RX or DWORD PTR [rcx+0x1a122108],r8d
   140015a66:	or     eax,0x8068e5f9
   140015a6b:	and    bl,BYTE PTR [rax+rax*1+0x40686370]
   140015a72:	(bad)  
   140015a73:	jp     0x140015a48
   140015a75:	adc    BYTE PTR [rdx-0x4d],cl
   140015a78:	addr32 mov ds:0x2725d32f,eax
   140015a7e:	rex.RX xchg ebp,eax
   140015a80:	push   rax
   140015a81:	mov    bh,0x17
   140015a83:	int    0xdf
   140015a85:	jmp    FWORD PTR [rcx]
   140015a87:	mov    WORD PTR [rsi],ds
   140015a89:	clc    
   140015a8a:	jge    0x140015ae8
   140015a8c:	mov    dl,BYTE PTR ss:[rdi+0xa90f178]
   140015a93:	enter  0xe246,0x4d
   140015a97:	out    dx,eax
   140015a98:	sti    
   140015a99:	movabs eax,ds:0xa7bac1fc3c1cf62b
   140015aa2:	out    0x83,eax
   140015aa4:	and    esi,eax
   140015aa6:	xlat   BYTE PTR ds:[rbx]
   140015aa7:	sti    
   140015aa8:	fs push rcx
   140015aaa:	stc    
   140015aab:	icebp  
   140015aac:	push   rdx
   140015aad:	(bad)  
   140015aae:	add    dh,dh
   140015ab0:	(bad)  
   140015ab1:	mov    al,0x5f
   140015ab3:	jnp    0x140015a8e
   140015ab5:	mov    BYTE PTR [rbx+0xa5f098b],al
   140015abb:	mov    bl,0xdd
   140015abd:	sub    al,0x97
   140015abf:	scas   eax,DWORD PTR es:[rdi]
   140015ac0:	rex.WRB shl QWORD PTR [r10],1
   140015ac3:	xchg   eax,ebp
   140015ac5:	jl     0x140015b37
   140015ac7:	add    ch,BYTE PTR [rcx-0xb]
   140015aca:	sbb    al,0x9c
   140015acc:	clc    
   140015acd:	movabs ds:0xa42f1f985dbb9ee0,eax
   140015ad6:	in     al,0x7
   140015ad8:	xor    ebp,DWORD PTR [rax]
   140015ada:	(bad)  
   140015adb:	pop    rdx
   140015adc:	test   BYTE PTR [rax+0x5e4202da],al
   140015ae2:	(bad)  
   140015ae3:	sbb    eax,0x93e6552d
   140015ae8:	fucom  st(0)
   140015aea:	data16 mov cl,0x93
   140015aed:	adc    esi,DWORD PTR [rsi]
   140015aef:	and    eax,0xc0b3712e
   140015af4:	rex.RB
   140015af5:	data16 sbb cl,cl
   140015af8:	and    al,0x66
   140015afa:	mov    dh,0x23
   140015afc:	xchg   ebx,eax
   140015afd:	rex.RX not BYTE PTR [rbx-0x5cbeb16d]
   140015b04:	movabs eax,ds:0x6e7742b14194a7d2
   140015b0d:	add    cl,bh
   140015b0f:	sub    eax,0xfafe626f
   140015b14:	xlat   BYTE PTR ds:[rbx]
   140015b15:	and    DWORD PTR [rsi+rax*1-0x138e0663],esp
   140015b1c:	sahf   
   140015b1d:	cmp    al,0x86
   140015b1f:	dec    cl
   140015b21:	xchg   ebx,eax
   140015b22:	mov    BYTE PTR [rbx],ch
   140015b24:	or     esi,DWORD PTR [rdx-0x26c8e04a]
   140015b2a:	fist   WORD PTR [rcx+rsi*8]
   140015b2d:	(bad)  
   140015b2e:	rex.WX (bad) 
   140015b30:	push   rsi
   140015b31:	sub    ebx,DWORD PTR [rdi+0x26c8fe33]
   140015b37:	stos   BYTE PTR es:[rdi],al
   140015b38:	pop    rsi
   140015b39:	(bad)  
   140015b3a:	stos   DWORD PTR es:[rdi],eax
   140015b3b:	fldenv [rdi]
   140015b3d:	xchg   r8d,eax
   140015b3f:	adc    al,0x23
   140015b41:	push   rdi
   140015b42:	mov    ch,0x6d
   140015b44:	adc    DWORD PTR [rax],ebx
   140015b46:	jae    0x140015b5f
   140015b48:	cld    
   140015b49:	adc    DWORD PTR [rax-0x30cdcca2],edi
   140015b4f:	jle    0x140015b78
   140015b51:	(bad)
   140015b55:	jb     0x140015b61
   140015b57:	jno    0x140015b4f
   140015b59:	stc    
   140015b5a:	mov    bl,0x12
   140015b5c:	(bad)  
   140015b5d:	mov    al,BYTE PTR [rbx-0x15ce13]
   140015b63:	(bad)  
   140015b64:	mov    edi,0xcfb1bf5b
   140015b69:	ins    DWORD PTR es:[rdi],dx
   140015b6a:	enter  0x7af5,0x51
   140015b6e:	(bad)  
   140015b6f:	cmp    eax,DWORD PTR [rcx-0x5ed14189]
   140015b75:	outs   dx,DWORD PTR ds:[rsi]
   140015b76:	xor    ah,BYTE PTR [rcx+0x7c]
   140015b79:	test   BYTE PTR [rcx],cl
   140015b7b:	enter  0x9fa4,0x22
   140015b7f:	adc    eax,DWORD PTR [rsi-0x39490fe9]
   140015b85:	sbb    bh,BYTE PTR [rsi-0x73]
   140015b88:	ss test al,0x68
   140015b8b:	mov    ch,0x33
   140015b8d:	xor    eax,DWORD PTR [rbx]
   140015b8f:	fs stos BYTE PTR es:[rdi],al
   140015b91:	retf   0x86d2
   140015b94:	cdq    
   140015b95:	push   rax
   140015b96:	(bad)  
   140015b97:	movsxd ecx,ecx
   140015b99:	jne    0x140015be2
   140015b9b:	shr    BYTE PTR [rdx],cl
   140015b9d:	push   rbx
   140015b9e:	fidiv  WORD PTR [rsi]
   140015ba0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015ba1:	pop    rdx
   140015ba2:	fs mov dh,0x34
   140015ba5:	ins    BYTE PTR es:[rdi],dx
   140015ba6:	loope  0x140015b6b
   140015ba8:	ja     0x140015c0a
   140015baa:	out    0x2d,al
   140015bac:	mov    edi,0x3ffecb8f
   140015bb1:	mov    ah,0xd7
   140015bb3:	(bad)  
   140015bb4:	mov    eax,0xc7755be0
   140015bb9:	jnp    0x140015c3a
   140015bbb:	push   0x7d9ed0f7
   140015bc0:	(bad)  
   140015bc1:	div    dh
   140015bc3:	idiv   edi
   140015bc5:	xchg   ebx,eax
   140015bc6:	mov    edx,0x844ddfae
   140015bcb:	std    
   140015bcc:	jo     0x140015c1b
   140015bce:	imul   esi,DWORD PTR [rdi],0x4f
   140015bd1:	cli    
   140015bd2:	rex.WX and QWORD PTR [rsi+0x6c405e61],rdi
   140015bd9:	(bad)  
   140015bda:	in     eax,0x7
   140015bdc:	add    eax,eax
   140015bde:	loope  0x140015b73
   140015be0:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140015be2:	cs (bad) 
   140015be4:	xlat   BYTE PTR ds:[rbx]
   140015be5:	out    dx,eax
   140015be6:	ret    0x3f2c
   140015be9:	sbb    ebp,DWORD PTR [rdx]
   140015beb:	sub    cl,0xfe
   140015bee:	jb     0x140015b91
   140015bf0:	add    eax,0x7c3a3a7b
   140015bf5:	or     al,0x58
   140015bf7:	mov    edx,0xd9c57cb0
   140015bfc:	ins    DWORD PTR es:[rdi],dx
   140015bfd:	push   rax
   140015bfe:	(bad)  
   140015bff:	fisub  DWORD PTR [rax]
   140015c01:	movabs ds:0xed71a2666013eb6d,eax
   140015c0a:	(bad)  
   140015c0b:	(bad)  
   140015c0c:	jrcxz  0x140015c22
   140015c0e:	xchg   esi,eax
   140015c0f:	pop    rdx
   140015c10:	(bad)
   140015c14:	(bad)  
   140015c15:	xchg   ebx,eax
   140015c16:	retf   
   140015c17:	(bad)  
   140015c18:	sub    eax,0x5abf03cf
   140015c1d:	mov    bh,0x36
   140015c1f:	vhaddpd xmm8,xmm0,XMMWORD PTR [rdx+0x45b0309a]
   140015c27:	xor    dh,BYTE PTR [rsi-0x14fb9f6e]
   140015c2d:	add    DWORD PTR [rax+0x21],eax
   140015c30:	and    ch,BYTE PTR [rsi+rbp*4-0x1f]
   140015c34:	(bad)  
   140015c35:	leave  
   140015c36:	jrcxz  0x140015c50
   140015c38:	mov    ebp,0xdec436ec
   140015c3d:	add    eax,edx
   140015c3f:	in     al,dx
   140015c40:	rex.WB in al,dx
   140015c42:	pushf  
   140015c43:	cmp    DWORD PTR [rsi+0x58067fd0],ebp
   140015c49:	pop    rbx
   140015c4a:	xchg   edx,eax
   140015c4b:	mov    ch,0xff
   140015c4d:	(bad)  
   140015c4e:	xor    DWORD PTR [rsi+0x19],ebp
   140015c51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c52:	sbb    dl,dl
   140015c54:	(bad)  
   140015c55:	mov    ebx,0x23c3f166
   140015c5a:	sbb    dl,BYTE PTR [rsp+rdx*4-0x6d]
   140015c5e:	jle    0x140015ccc
   140015c60:	test   eax,0xe6e8536f
   140015c65:	repnz mov BYTE PTR [rcx+0x24eb162a],dl
   140015c6c:	push   0x2b
   140015c6e:	or     bl,ch
   140015c70:	pop    rdi
   140015c71:	xchg   esi,eax
   140015c72:	(bad)  
   140015c73:	shl    BYTE PTR [rdi+0x6c],cl
   140015c76:	in     al,dx
   140015c77:	jg     0x140015c37
   140015c79:	cmp    eax,0xd87188b4
   140015c7e:	pop    rsp
   140015c7f:	scas   ax,WORD PTR es:[rdi]
   140015c81:	(bad)  
   140015c82:	and    esi,DWORD PTR [rbp+0x9]
   140015c85:	jb     0x140015c5b
   140015c87:	rex xchg ebx,eax
   140015c89:	mov    ?,WORD PTR [rdi+rdi*8+0x4c]
   140015c8d:	and    dh,BYTE PTR [rdx]
   140015c8f:	loopne 0x140015c60
   140015c91:	faddp  st(5),st
   140015c93:	ror    DWORD PTR [rsi-0x628c0d79],1
   140015c99:	movsxd esp,DWORD PTR [rax-0x4b261cd4]
   140015c9f:	retf   0x1908
   140015ca2:	imul   esi,DWORD PTR [r11],0xffffffae
   140015ca6:	and    eax,0xc51b367c
   140015cab:	repnz (bad) 
   140015cad:	call   0x1a3fafd74
   140015cb2:	cmp    BYTE PTR [rcx+0x64],dl
   140015cb5:	rex.WRX movabs rbp,0x8ac8ca224204371e
   140015cbf:	sbb    BYTE PTR [rcx],ah
   140015cc1:	xor    BYTE PTR [rdx-0x2318fa5a],dl
   140015cc7:	adc    bl,cl
   140015cc9:	adc    esp,DWORD PTR [rax]
   140015ccb:	(bad)  
   140015ccc:	(bad)  
   140015ccd:	mov    bl,0xe7
   140015ccf:	out    dx,al
   140015cd0:	fist   DWORD PTR [rsi]
   140015cd2:	mov    ebp,0xd8c1d723
   140015cd7:	ret    
   140015cd8:	jmp    0x140015cc9
   140015cda:	add    esp,ecx
   140015cdc:	movabs ds:0xb641747356f92ec8,eax
   140015ce5:	mov    al,0xef
   140015ce7:	mov    dl,0x2b
   140015ce9:	jle    0x140015d61
   140015ceb:	(bad)  
   140015cec:	js     0x140015ce6
   140015cee:	xchg   ebx,eax
   140015cef:	mov    cl,0xee
   140015cf1:	cld    
   140015cf2:	add    al,0x13
   140015cf4:	in     eax,dx
   140015cf5:	outs   dx,DWORD PTR ds:[rsi]
   140015cf6:	pop    rax
   140015cf7:	xchg   edx,eax
   140015cf8:	sub    ebx,DWORD PTR [rdx]
   140015cfa:	mov    dh,0x3f
   140015cfc:	movabs al,ds:0x6442a4dd01268ccb
   140015d05:	movabs ds:0xadfcb663d4d2cfec,eax
   140015d0e:	out    dx,al
   140015d0f:	(bad)  [rsi-0x51]
   140015d12:	fs scas al,BYTE PTR es:[rdi]
   140015d14:	sub    BYTE PTR [rbx+0x11],0xbf
   140015d18:	mul    DWORD PTR [rdx+rax*2-0xbdcdb2e]
   140015d1f:	add    al,0x88
   140015d21:	or     edx,ecx
   140015d23:	(bad)
   140015d28:	call   0x1373310f0
   140015d2d:	add    eax,0xffffff95
   140015d30:	scas   al,BYTE PTR es:[rdi]
   140015d31:	sahf   
   140015d32:	(bad)  
   140015d33:	xchg   esp,eax
   140015d34:	adc    esi,DWORD PTR [rdx+0x16]
   140015d37:	push   rdi
   140015d38:	or     DWORD PTR [rdx+rbx*2+0x64],0x629943a4
   140015d40:	push   rsp
   140015d41:	or     ah,BYTE PTR [rcx+0x150dd6a7]
   140015d47:	jns    0x140015d2e
   140015d49:	jbe    0x140015d2a
   140015d4b:	jo     0x140015daa
   140015d4d:	call   0xe8302a7c
   140015d52:	xchg   ebp,eax
   140015d53:	in     eax,dx
   140015d54:	pop    rax
   140015d55:	adc    BYTE PTR [rdi],0xfb
   140015d58:	(bad)  
   140015d59:	push   rax
   140015d5a:	(bad)
   140015d5e:	js     0x140015dce
   140015d60:	clc    
   140015d61:	jb     0x140015d33
   140015d63:	out    dx,al
   140015d64:	rex.WXB
   140015d65:	sub    esi,r11d
   140015d68:	fdiv   DWORD PTR [rcx]
   140015d6a:	ja     0x140015dc8
   140015d6c:	(bad)  
   140015d6d:	(bad)  
   140015d6e:	jae    0x140015d03
   140015d70:	or     BYTE PTR [rbx+0xeb3404b],ch
   140015d76:	imul   ebx,DWORD PTR [rcx+rbp*1+0x7],0xffffffb3
   140015d7b:	adc    eax,0x47ea057d
   140015d80:	xchg   BYTE PTR [rsi-0x7],dh
   140015d83:	loope  0x140015dd1
   140015d85:	cld    
   140015d86:	movabs eax,ds:0xb8dbaadd9017e78c
   140015d8f:	mov    ah,0x60
   140015d91:	pop    rcx
   140015d92:	test   al,0x49
   140015d94:	adc    eax,0x7f5ba
   140015d99:	push   rax
   140015d9a:	sub    al,0xff
   140015d9c:	rex.RB scas al,BYTE PTR es:[rdi]
   140015d9e:	enter  0xc3ac,0x52
   140015da2:	(bad)  
   140015da3:	add    dh,BYTE PTR [rsi+rcx*1]
   140015da6:	rol    esi,0x8b
   140015da9:	xchg   ecx,eax
   140015daa:	jnp    0x140015dac
   140015dac:	data16 mov bh,0xc1
   140015daf:	(bad)  
   140015db0:	fimul  WORD PTR [rdi-0x15eff0f7]
   140015db6:	leave  
   140015db7:	fadd   DWORD PTR [rbx+0x71]
   140015dba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015dbb:	rex.WR mov dil,0x96
   140015dbe:	jo     0x140015d5f
   140015dc0:	jmp    0x1011b4cf8
   140015dc5:	test   ah,0xb
   140015dc8:	repz ret 
   140015dca:	pop    rcx
   140015dcb:	cmp    DWORD PTR [rbp+0x64f90155],esi
   140015dd1:	jne    0x140015de2
   140015dd3:	movabs al,ds:0x4e0de441d5662e40
   140015ddc:	fucomp st(0)
   140015dde:	xchg   ebp,eax
   140015ddf:	mul    DWORD PTR [rsi-0x31]
   140015de2:	(bad)  
   140015de3:	loopne 0x140015e23
   140015de5:	ds stc 
   140015de7:	add    esp,esi
   140015de9:	not    DWORD PTR [rax+0x45]
   140015dec:	push   ax
   140015dee:	mov    cl,0x78
   140015df0:	out    0xa6,al
   140015df2:	popf   
   140015df3:	or     DWORD PTR [rsi+rbx*2+0x5faef74],eax
   140015dfa:	jp     0x140015dea
   140015dfc:	jb     0x140015e62
   140015dfe:	xlat   BYTE PTR ds:[rbx]
   140015dff:	pushf  
   140015e00:	or     ah,BYTE PTR [rdx-0x1e927d02]
   140015e06:	fsub   st,st(3)
   140015e08:	(bad)  
   140015e09:	(bad)  
   140015e0a:	inc    dh
   140015e0c:	(bad)  
   140015e0e:	outs   dx,DWORD PTR ds:[rsi]
   140015e0f:	xor    DWORD PTR [rax-0x2ecdded4],0x4aa88a84
   140015e19:	(bad)  
   140015e1a:	es (bad) 
   140015e1d:	add    DWORD PTR fs:[rbx+rbx*1+0x0],esp
   140015e22:	mov    ebp,0x74e70673
   140015e27:	pop    rbp
   140015e28:	jg     0x140015de2
   140015e2a:	pop    rcx
   140015e2b:	jne    0x140015dc6
   140015e2d:	jmp    rbp
   140015e2f:	(bad)  
   140015e30:	retf   
   140015e31:	(bad)
   140015e35:	mov    ecx,DWORD PTR [rcx-0x56]
   140015e38:	mov    esi,0xcd1585bb
   140015e3d:	(bad)  
   140015e3e:	xchg   esp,eax
   140015e3f:	lock iret 
   140015e41:	and    BYTE PTR [rsi],dl
   140015e43:	rex.B jle 0x140015de2
   140015e46:	or     al,BYTE PTR [rcx]
   140015e48:	mov    ch,0x56
   140015e4a:	fdiv   QWORD PTR [rsi+0x79]
   140015e4d:	out    0x52,al
   140015e4f:	add    al,0x3f
   140015e51:	mov    bh,0x41
   140015e53:	jge    0x140015e0d
   140015e55:	cmc    
   140015e56:	ja     0x140015e74
   140015e58:	(bad)  
   140015e5a:	xchg   edx,eax
   140015e5b:	mov    ch,0x48
   140015e5d:	jno    0x140015eae
   140015e5f:	(bad)
   140015e62:	jne    0x140015e04
   140015e64:	std    
   140015e65:	push   rbx
   140015e66:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140015e68:	lock (bad) 
   140015e6a:	test   DWORD PTR [rdi+0x1ad9f7f3],0x63554211
   140015e74:	jae    0x140015edc
   140015e76:	sbb    al,0xcf
   140015e78:	ss sbb eax,0xd7e1f2c
   140015e7e:	(bad)  
   140015e7f:	ja     0x140015e9e
   140015e81:	cmp    eax,0x32312773
   140015e86:	xor    eax,0x71e9de86
   140015e8b:	test   ch,ah
   140015e8d:	jns    0x140015e5f
   140015e8f:	out    0xa,al
   140015e91:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015e92:	mov    ecx,0x15606ba8
   140015e97:	outs   dx,BYTE PTR ds:[rsi]
   140015e98:	not    BYTE PTR [rsi]
   140015e9a:	fist   WORD PTR [rsp]
   140015e9d:	in     eax,0x57
   140015e9f:	sub    al,BYTE PTR [rax]
   140015ea1:	movabs eax,ds:0x73dbfa02bebb7cf1
   140015eaa:	jrcxz  0x140015f28
   140015eac:	leave  
   140015ead:	in     ax,0x3
   140015eb0:	(bad)  
   140015eb1:	add    ch,BYTE PTR [rdx-0x42]
   140015eb4:	lods   eax,DWORD PTR ds:[rsi]
   140015eb5:	retf   
   140015eb6:	push   rcx
   140015eb7:	add    edi,esp
   140015eb9:	(bad)  
   140015eba:	mov    ecx,0x5de56602
   140015ebf:	xchg   edx,eax
   140015ec0:	rep outs dx,DWORD PTR ds:[rsi]
   140015ec2:	in     eax,dx
   140015ec3:	ja     0x140015ebf
   140015ec5:	cdq    
   140015ec6:	out    0x5d,eax
   140015ec8:	sbb    BYTE PTR [rdx+0x32860f28],bl
   140015ece:	fdivr  QWORD PTR [rbx+0x75db6ac5]
   140015ed4:	sbb    ecx,edx
   140015ed6:	mov    dl,0x11
   140015ed8:	jno    0x140015e83
   140015eda:	(bad)  
   140015edb:	xchg   esp,eax
   140015edc:	outs   dx,BYTE PTR ds:[rsi]
   140015edd:	gs jle 0x140015eac
   140015ee0:	(bad)
   140015ee3:	xchg   ecx,eax
   140015ee4:	test   al,0xbf
   140015ee6:	movabs al,ds:0x554e2a0d257007f2
   140015eef:	nop
   140015ef0:	(bad)  
   140015ef1:	in     eax,0xfd
   140015ef3:	mov    eax,0x43fad4bb
   140015ef8:	movabs al,ds:0x5b3f3efec25321cd
   140015f02:	jae    0x140015f3e
   140015f04:	fcmovnb st,st(4)
   140015f06:	(bad)  
   140015f07:	frndint 
   140015f09:	(bad)  [rcx+0x1b]
   140015f0c:	iret   
   140015f0d:	mov    ebp,0x7802a51f
   140015f12:	or     DWORD PTR [rsi+0x577d7a78],esi
   140015f18:	jp     0x140015f04
   140015f1a:	fcmovnu st,st(7)
   140015f1c:	cli    
   140015f1d:	(bad)  
   140015f1e:	sahf   
   140015f1f:	ret    
   140015f20:	xchg   DWORD PTR [rdi-0xfcfcc2d],edi
   140015f26:	(bad)  
   140015f27:	adc    bl,ah
   140015f29:	jle    0x140015ee8
   140015f2b:	rex.X xlat BYTE PTR ds:[rbx]
   140015f2d:	movabs al,ds:0xf9159b069b45b4c
   140015f36:	fs jrcxz 0x140015f8c
   140015f39:	ds fcmovnbe st,st(2)
   140015f3c:	push   rdx
   140015f3d:	xchg   edi,eax
   140015f3e:	adc    BYTE PTR [rsi+rdi*2-0x36],cl
   140015f42:	rex.WRX xor BYTE PTR [rcx-0x30],r15b
   140015f46:	int    0x14
   140015f48:	mov    DWORD PTR [rcx+0x65e1303e],edx
   140015f4e:	and    eax,0x45619102
   140015f53:	and    dl,BYTE PTR [r10-0xf]
   140015f57:	fimul  WORD PTR [rdi+0x7]
   140015f5a:	jb     0x140015f61
   140015f5c:	(bad)  
   140015f5d:	sub    eax,0x484041c1
   140015f62:	(bad)  
   140015f63:	(bad)  
   140015f64:	sti    
   140015f65:	rex.RB push 0xffffffffffffff87
   140015f68:	pop    rsp
   140015f69:	mov    edi,0xe5ab24cc
   140015f6e:	mov    al,0xc5
   140015f70:	mov    BYTE PTR [rbx-0x13ca74a1],dl
   140015f76:	xor    ecx,DWORD PTR [rbx+0x76ff8505]
   140015f7c:	jle    0x140015fb7
   140015f7e:	xchg   edi,eax
   140015f7f:	xor    al,0xf8
   140015f81:	int3   
   140015f82:	rex.WX and al,0x65
   140015f85:	rex.RX popf 
   140015f87:	int3   
   140015f88:	jo     0x140015f6e
   140015f8a:	(bad)  
   140015f8b:	(bad)  
   140015f8c:	mov    BYTE PTR [rax],dl
   140015f8e:	xlat   BYTE PTR ds:[rbx]
   140015f8f:	push   rdi
   140015f90:	xor    BYTE PTR [rdx-0x1e],bh
   140015f93:	cmp    BYTE PTR [rsi+0x2f],al
   140015f96:	mov    ebx,0x4eff5505
   140015f9b:	rcr    ah,1
   140015f9d:	cmp    BYTE PTR [rsi-0x63],dh
   140015fa0:	jle    0x140015fb8
   140015fa2:	ret    
   140015fa3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015fa4:	mov    fs,WORD PTR [rax-0x4f7ac662]
   140015faa:	mov    dl,0x0
   140015fac:	rex.WRX imul r14,QWORD PTR [rax],0xffffffffffffffe5
   140015fb0:	fs add al,0x59
   140015fb3:	rex.WRB loop 0x140015fb1
   140015fb6:	ja     0x140015f50
   140015fb8:	xchg   ebp,eax
   140015fb9:	add    ecx,DWORD PTR [rax+0xe]
   140015fbc:	std    
   140015fbd:	sub    ecx,ebp
   140015fbf:	(bad)  
   140015fc1:	(bad)  
   140015fc2:	jg     0x140015f79
   140015fc4:	pop    rsi
   140015fc5:	add    eax,edx
   140015fc7:	nop
   140015fc8:	xchg   esi,eax
   140015fc9:	out    0xe4,al
   140015fcb:	and    esp,DWORD PTR [rdi-0x1b]
   140015fce:	rex.RB mov r13b,0xf8
   140015fd1:	xchg   edx,eax
   140015fd2:	out    dx,eax
   140015fd3:	outs   dx,DWORD PTR ds:[rsi]
   140015fd4:	ret    0x6e4f
   140015fd7:	icebp  
   140015fd8:	lods   eax,DWORD PTR ds:[rsi]
   140015fd9:	ret    0x862f
   140015fdc:	sub    BYTE PTR [rax+0x11d6c1ca],0x8c
   140015fe3:	xchg   ecx,eax
   140015fe4:	adc    BYTE PTR [rdx+0x40],ah
   140015fe7:	mov    BYTE PTR [rdx+rbp*1-0x571b3f8],al
   140015fee:	fwait
   140015fef:	adc    BYTE PTR [rcx-0x7b2c4098],al
   140015ff5:	(bad)  
   140015ff6:	sub    al,BYTE PTR [rsp+rax*4]
   140015ff9:	or     BYTE PTR [rax+rbp*1-0x6573a53c],al
   140016000:	(bad)  
   140016001:	or     eax,DWORD PTR [rdx]
   140016003:	je     0x140015f8e
   140016005:	cs adc ah,dl
   140016008:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016009:	rex.RXB mov cs,WORD PTR [rip+0xffffffffdd16e712]        # 0x11d184722
   140016010:	pop    rcx
   140016011:	fwait
   140016012:	mov    ch,0xe6
   140016014:	(bad)  
   140016015:	lock rol DWORD PTR [rbp-0x4fa39081],0xa1
   14001601d:	sub    BYTE PTR [rcx+rdx*4-0x58],0xd
   140016022:	retf   
   140016023:	ins    BYTE PTR es:[rdi],dx
   140016024:	ins    DWORD PTR es:[rdi],dx
   140016025:	rex.B lahf 
   140016027:	sar    DWORD PTR [eip+0xffffffff9ef96670],0x13        # 0xdefac69f
   14001602f:	sti    
   140016030:	imul   eax,DWORD PTR [rax+0x7b],0xffffffbe
   140016034:	(bad)  
   140016035:	rex.RX lods eax,DWORD PTR ds:[rsi]
   140016037:	and    eax,0x74ef8214
   14001603c:	out    dx,al
   14001603d:	out    0x2f,eax
   14001603f:	repz rex.WR retf 0x9893
   140016044:	or     BYTE PTR [rbp+0x3715004c],al
   14001604a:	jge    0x14001605b
   14001604c:	shr    BYTE PTR [rsi+0x63a0cd8f],1
   140016052:	test   eax,0x7f18cc1
   140016057:	retf   
   140016058:	xor    edi,DWORD PTR [rax+rbp*8+0x689a234d]
   14001605f:	mov    esi,0xfe7bb1f2
   140016064:	cli    
   140016065:	ror    edi,0x7e
   140016068:	cli    
   140016069:	(bad)  
   14001606a:	xlat   BYTE PTR ds:[rbx]
   14001606b:	push   rsi
   14001606c:	push   rsi
   14001606d:	inc    BYTE PTR [rdx+rax*2-0x2a54e1b8]
   140016074:	shl    DWORD PTR [rdi+0x42],0xfe
   140016078:	movsxd esi,esi
   14001607a:	(bad)  
   14001607b:	sahf   
   14001607c:	adc    cl,BYTE PTR [rbp+rdx*4-0x71]
   140016080:	mov    esp,0x91f37e14
   140016085:	pop    rbp
   140016086:	enter  0x7add,0xcb
   14001608a:	sub    DWORD PTR [rax-0x48],0xfffffffc
   14001608e:	pop    rbp
   14001608f:	or     ebp,ecx
   140016091:	mov    dl,0x30
   140016093:	outs   dx,DWORD PTR ds:[rsi]
   140016094:	test   DWORD PTR [rbp-0x22],ebp
   140016097:	rex.WR
   140016098:	rex.X lahf 
   14001609a:	pop    rdx
   14001609b:	cmp    esp,ebp
   14001609d:	(bad)  
   14001609e:	sbb    edx,edx
   1400160a0:	jmp    0x1407ece94
   1400160a5:	leave  
   1400160a6:	adc    ecx,eax
   1400160a8:	mov    ebx,0x90320a10
   1400160ad:	jae    0x140016095
   1400160af:	sahf   
   1400160b0:	pop    rcx
   1400160b1:	and    DWORD PTR [rdx-0x40475232],0x3ba4337c
   1400160bb:	cli    
   1400160bc:	(bad)  [rbp+0x59]
   1400160bf:	(bad)  
   1400160c0:	or     ch,al
   1400160c2:	push   rbx
   1400160c3:	popf   
   1400160c4:	repz (bad) 
   1400160c6:	sub    bh,ah
   1400160c8:	add    DWORD PTR [rip+0xffffffffc7e3b301],edx        # 0x107e513cf
   1400160ce:	jno    0x140016134
   1400160d0:	iret   
   1400160d1:	(bad)  
   1400160d2:	shl    al,0x1e
   1400160d5:	(bad)  
   1400160d6:	imul   eax,DWORD PTR [rsi],0xb147a73b
   1400160dc:	jae    0x140016150
   1400160de:	adc    al,0xd5
   1400160e0:	mov    WORD PTR [rsi+0x54d69bea],gs
   1400160e6:	and    DWORD PTR [rbp-0x22],esp
   1400160e9:	mov    edx,0x50115002
   1400160ee:	rex.XB movsxd edi,r14d
   1400160f1:	sub    bh,ah
   1400160f3:	in     eax,0xea
   1400160f5:	mov    esi,0xf84d548e
   1400160fa:	in     eax,dx
   1400160fb:	(bad)  
   1400160fc:	adc    QWORD PTR [r9-0x441d1ec1],rax
   140016103:	and    BYTE PTR [rbx+0x60],ah
   140016106:	cli    
   140016107:	fcompp 
   140016109:	movabs al,ds:0x2db606052b23b2d2
   140016112:	and    DWORD PTR [rsi+0x3e],edx
   140016115:	sub    DWORD PTR [rdx],ebp
   140016117:	xchg   esp,eax
   140016118:	lods   eax,DWORD PTR ds:[rsi]
   140016119:	popf   
   14001611a:	shr    DWORD PTR [rip+0xffffffffcc40816d],cl        # 0x10c41e28d
   140016120:	pop    rsp
   140016121:	jb     0x14001615c
   140016123:	cmp    DWORD PTR [rax],eax
   140016125:	adc    bh,ah
   140016127:	movsxd ebp,DWORD PTR [rbp+0x19]
   14001612a:	loopne 0x140016199
   14001612c:	adc    ebp,DWORD PTR [rdi+0xbf90e04]
   140016132:	cmp    DWORD PTR [rcx-0x4101ac73],edx
   140016138:	push   rax
   140016139:	sbb    ah,BYTE PTR [rip+0x4491436a]        # 0x18492a4a9
   14001613f:	push   rsi
   140016140:	(bad)  
   140016141:	jmp    0xd7f2bcfb
   140016146:	movabs ds:0xf5858159e0646403,eax
   14001614f:	xchg   edi,eax
   140016150:	shl    DWORD PTR [rdx+0x2b],cl
   140016153:	mov    ss,WORD PTR [rdi+0x3e]
   140016156:	jns    0x1400160eb
   140016158:	mov    cl,0x32
   14001615a:	or     ah,BYTE PTR [rdx+0x4a]
   14001615d:	stos   BYTE PTR es:[rdi],al
   14001615e:	rex.RX mov edx,0xd8e9a7f1
   140016164:	rex.WRB js 0x140016170
   140016167:	fld    QWORD PTR [rax]
   140016169:	push   rbx
   14001616a:	add    BYTE PTR [rbx+0x3f8e3600],bl
   140016170:	icebp  
   140016171:	(bad)  
   140016172:	adc    esi,edi
   140016174:	std    
   140016175:	out    dx,al
   140016176:	xchg   edi,edi
   140016178:	out    0xc9,eax
   14001617a:	jrcxz  0x14001611f
   14001617c:	mov    edi,0xc776edd8
   140016181:	int    0x2f
   140016183:	mov    bh,0xb2
   140016185:	pop    rbp
   140016186:	loope  0x14001614f
   140016188:	fidiv  DWORD PTR [rcx+0x5a]
   14001618b:	sbb    eax,eax
   14001618d:	cmp    al,0x1
   14001618f:	pop    rdx
   140016190:	outs   dx,BYTE PTR ds:[rsi]
   140016191:	sub    DWORD PTR [rdx-0x3c17a323],0xffffffa2
   140016198:	cmp    eax,0x6f90cc81
   14001619d:	adc    DWORD PTR [rbx+rcx*1-0x3b],ebx
   1400161a1:	xchg   ebx,eax
   1400161a2:	ds mov eax,0x98fa7f02
   1400161a8:	pop    rbx
   1400161a9:	stos   BYTE PTR es:[rdi],al
   1400161aa:	mov    cl,0xbb
   1400161ac:	or     ch,BYTE PTR [rcx]
   1400161ae:	movabs ds:0x6c9ba0eca3363901,eax
   1400161b7:	shl    BYTE PTR [rbx+0x5c3b054e],cl
   1400161bd:	(bad)  
   1400161be:	ror    DWORD PTR [rbp+0x5d],0x98
   1400161c2:	and    DWORD PTR [rbx],0xffffffd6
   1400161c5:	pop    rsp
   1400161c6:	out    dx,al
   1400161c7:	test   al,0x38
   1400161c9:	jge    0x140016189
   1400161cb:	(bad)  
   1400161cc:	rex.WRB
   1400161cd:	repz xor eax,0x4527d886
   1400161d3:	movabs eax,ds:0x4159f5d64ee7c78
   1400161dc:	or     BYTE PTR [rcx],ah
   1400161de:	push   rsi
   1400161df:	pop    rax
   1400161e0:	popf   
   1400161e1:	cmp    BYTE PTR [rcx+0x6c21eaa7],cl
   1400161e7:	in     al,dx
   1400161e8:	mov    edi,0x57d7116
   1400161ed:	mov    ebp,0x3c31c733
   1400161f2:	jge    0x1400161f6
   1400161f4:	cmp    eax,0x9710a733
   1400161f9:	out    0x81,eax
   1400161fb:	int    0x15
   1400161fd:	pop    rcx
   1400161fe:	pop    rbp
   1400161ff:	cwde   
   140016200:	sub    al,0xad
   140016202:	rex.WX sub al,0xb5
   140016205:	nop
   140016206:	jnp    0x1400161f4
   140016208:	stos   DWORD PTR es:[rdi],eax
   140016209:	sti    
   14001620a:	or     BYTE PTR [rdx+0x48fffa91],cl
   140016210:	fsub   st,st(2)
   140016212:	neg    ebx
   140016214:	mov    ch,0xa8
   140016216:	add    eax,0x46781525
   14001621b:	cs in  al,dx
   14001621d:	mov    cl,0x31
   14001621f:	fs fcmovne st,st(7)
   140016222:	rex.RXB (bad) 
   140016224:	pop    rbp
   140016225:	add    al,0xa
   140016227:	and    eax,0x64679062
   14001622c:	loope  0x1400161eb
   14001622e:	push   rsi
   14001622f:	or     BYTE PTR [rcx-0x747f2c70],dl
   140016235:	and    al,0x99
   140016237:	ss jl  0x1400162a0
   14001623a:	mov    cl,0xd4
   14001623c:	es rex.R not spl
   140016240:	pop    rsp
   140016241:	stc    
   140016242:	sub    cl,BYTE PTR [rdi+0x53]
   140016245:	rex.RX movsxd r9d,DWORD PTR [rdx]
   140016248:	out    dx,al
   140016249:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001624a:	ins    DWORD PTR es:[rdi],dx
   14001624b:	outs   dx,BYTE PTR ds:[rsi]
   14001624c:	repnz fadd QWORD PTR [rax]
   14001624f:	int3   
   140016250:	sbb    dl,BYTE PTR [rdi-0xc37a2f7]
   140016256:	mov    edx,?
   140016258:	pop    rax
   140016259:	out    0xdf,eax
   14001625b:	push   0x4a
   14001625d:	mov    dh,0x9
   14001625f:	jp     0x14001624c
   140016261:	(bad)  
   140016262:	pop    rcx
   140016263:	or     eax,0x37e6b38
   140016268:	stc    
   140016269:	xor    eax,0x64885202
   14001626e:	sub    eax,0x99b945d0
   140016273:	jne    0x14001623e
   140016275:	mul    ebp
   140016277:	and    DWORD PTR [rcx+0x1d],ecx
   14001627a:	jmp    FWORD PTR [rip+0x5db2580]        # 0x145dc8800
   140016280:	mov    dl,0xe3
   140016282:	ret    
   140016283:	stos   BYTE PTR es:[rdi],al
   140016284:	sub    bl,bh
   140016286:	cs jrcxz 0x14001625e
   140016289:	mov    ebx,0x17752391
   14001628e:	push   rsp
   14001628f:	clc    
   140016290:	sub    DWORD PTR [rip+0x1ac0000a],0xdcafd580        # 0x15ac162a4
   14001629a:	sti    
   14001629b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001629c:	(bad)  
   14001629d:	jnp    0x140016299
   14001629f:	fcmovnu st,st(7)
   1400162a1:	cli    
   1400162a2:	icebp  
   1400162a3:	cmc    
   1400162a4:	mov    ch,0xd5
   1400162a6:	iret   
   1400162a7:	(bad)  [rbx-0x4f466c31]
   1400162ad:	ret    0xa7f6
   1400162b0:	(bad)  
   1400162b1:	(bad)  
   1400162b2:	mov    ch,0x5c
   1400162b4:	(bad)  
   1400162b5:	imul   eax,ebp,0xc2853765
   1400162bb:	mov    dl,0x93
   1400162bd:	in     eax,0xb
   1400162bf:	fs lahf 
   1400162c1:	fstp   st(3)
   1400162c3:	rex.XB stc 
   1400162c5:	jae    0x140016291
   1400162c7:	in     al,dx
   1400162c8:	ds (bad) 
   1400162ca:	mov    edi,0x3790d7cd
   1400162cf:	loop   0x140016335
   1400162d1:	rex.W int3 
   1400162d3:	add    eax,0x99ee0dc
   1400162d8:	mov    dh,0xfd
   1400162da:	ds (bad) 
   1400162dc:	mov    ebx,eax
   1400162de:	mov    ebx,0x5e873383
   1400162e3:	jbe    0x1400162f3
   1400162e5:	cmp    DWORD PTR [rbx+0x6d],0xd27da32e
   1400162ec:	push   rdx
   1400162ed:	mov    ah,0xd1
   1400162ef:	push   rdx
   1400162f0:	(bad)  
   1400162f1:	and    eax,0x9a5805c1
   1400162f6:	imul   ecx,DWORD PTR [rbx],0x420000e2
   1400162fc:	mov    WORD PTR [rax+0xb],cs
   1400162ff:	xor    edi,DWORD PTR [rax+0x66]
   140016302:	imul   ebx,DWORD PTR [rip+0x5abc97f3],0x29c2fb60        # 0x19abdfaff
   14001630c:	or     al,0xcf
   14001630e:	sahf   
   14001630f:	rex fild WORD PTR [rsi+0x663b3b]
   140016316:	add    BYTE PTR [rax],ah
   140016318:	add    BYTE PTR [rcx+0x44],cl
   14001631b:	push   r12
   14001631d:	hlt    
   14001631e:	rex.WB jmp 0x142b32311
   140016324:	out    0x4d,al
   140016326:	stc    
   140016327:	cdq    
   140016328:	ds int3 
   14001632a:	nop
   14001632b:	enter  0xf87b,0x57
   14001632f:	sub    DWORD PTR [rdi],ebp
   140016331:	out    dx,al
   140016332:	rcr    DWORD PTR [rdx-0x22],1
   140016335:	mov    esi,DWORD PTR [rdx-0x2523d57f]
   14001633b:	ins    BYTE PTR es:[rdi],dx
   14001633c:	ins    DWORD PTR es:[rdi],dx
   14001633d:	hlt    
   14001633e:	cmp    cl,BYTE PTR [rcx*4-0x4efbe94b]
   140016345:	out    0x4c,eax
   140016347:	fcmovbe st,st(3)
   140016349:	mov    edi,0xfa809850
   14001634e:	icebp  
   14001634f:	xchg   esp,eax
   140016350:	xchg   ebp,eax
   140016351:	test   BYTE PTR [rcx],dh
   140016353:	(bad)  
   140016355:	rex.WR cld 
   140016357:	pop    rsp
   140016358:	scas   al,BYTE PTR es:[rdi]
   140016359:	sub    eax,0x9c50ada9
   14001635e:	cdq    
   14001635f:	iret   
   140016360:	xchg   ah,al
   140016362:	(bad)  
   140016363:	out    dx,eax
   140016364:	(bad)  
   140016365:	sub    al,0x23
   140016367:	rex.RXB jns 0x140016340
   14001636a:	stc    
   14001636b:	push   rbx
   14001636c:	mov    ah,0xac
   14001636e:	(bad)  
   14001636f:	push   0xffffffffffffff9f
   140016371:	retf   
   140016372:	movabs eax,ds:0x18c56fb6986eda7d
   14001637b:	xchg   edx,eax
   14001637c:	pop    rbp
   14001637d:	or     eax,0x1181fad0
   140016382:	jl     0x1400163a5
   140016384:	xchg   ebx,eax
   140016385:	iret   
   140016386:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016387:	ror    ah,0xb
   14001638a:	mov    dh,0x67
   14001638c:	loopne 0x14001635d
   14001638e:	scas   al,BYTE PTR es:[rdi]
   14001638f:	push   rbp
   140016390:	(bad)  
   140016391:	and    edi,edx
   140016393:	rex.WRXB and QWORD PTR [r15+0x78],r14
   140016397:	idiv   bl
   140016399:	xor    ah,ah
   14001639b:	mov    edx,0x4fcbd6ed
   1400163a0:	or     BYTE PTR [rbx-0x64210e44],al
   1400163a6:	xor    edi,ebx
   1400163a8:	xchg   DWORD PTR [rsi],esi
   1400163aa:	lahf   
   1400163ab:	jnp    0x14001636e
   1400163ad:	mov    dh,0x88
   1400163af:	sub    DWORD PTR [rdi-0x43992849],0x19
   1400163b6:	add    BYTE PTR [rdi-0x73],cl
   1400163b9:	(bad)  
   1400163ba:	(bad)  
   1400163bb:	mov    ?,WORD PTR [rdi]
   1400163bd:	std    
   1400163be:	in     al,0xa7
   1400163c0:	neg    DWORD PTR [rsi+0x76]
   1400163c3:	fnstenv [rdx-0x59]
   1400163c6:	scas   eax,DWORD PTR es:[rdi]
   1400163c7:	call   QWORD PTR [rsi]
   1400163c9:	and    ch,dl
   1400163cb:	fadd   DWORD PTR [rbp+0x2e0307b5]
   1400163d1:	imul   edx,esi,0xcc8dab82
   1400163d7:	fiadd  DWORD PTR [rbx]
   1400163d9:	pop    rax
   1400163da:	rex.RX (bad) 
   1400163dc:	pop    rdx
   1400163dd:	ds mov edi,0x9d24eaee
   1400163e3:	fwait
   1400163e4:	push   rbp
   1400163e5:	jge    0x1400163fb
   1400163e7:	ins    BYTE PTR es:[rdi],dx
   1400163e8:	pop    rcx
   1400163e9:	xchg   BYTE PTR [rsi],dl
   1400163eb:	ret    
   1400163ec:	and    eax,0xfa28a429
   1400163f1:	xchg   ecx,ebx
   1400163f3:	mov    esp,0xdf2fd6c8
   1400163f8:	push   rsp
   1400163f9:	rex.W
   1400163fa:	or     BYTE PTR ss:[rsp+rcx*2+0x18],bl
   1400163ff:	icebp  
   140016400:	dec    DWORD PTR [rbp+0x41]
   140016403:	or     DWORD PTR [rdi+0x20],esp
   140016406:	sbb    eax,0x97681973
   14001640b:	jbe    0x1400163f7
   14001640d:	ja     0x1400163ff
   14001640f:	imul   edx,DWORD PTR [rcx-0x5b],0xffffffe4
   140016413:	(bad)  
   140016414:	fist   DWORD PTR [rcx+rax*2-0x1fde7a2]
   14001641b:	mov    ebx,0x49010042
   140016420:	(bad)  
   140016421:	ficomp DWORD PTR [rdi+rax*8-0x4f]
   140016425:	icebp  
   140016426:	adc    edi,DWORD PTR [rax]
   140016428:	mov    dh,0xff
   14001642a:	xor    eax,0xa043fd88
   14001642f:	test   DWORD PTR [rcx],ecx
   140016431:	or     al,0x4f
   140016433:	cmp    al,0x87
   140016435:	xchg   ecx,eax
   140016436:	mov    DWORD PTR [rbx+0x409f4ce8],esp
   14001643c:	pop    rsp
   14001643d:	(bad)  
   14001643e:	add    edi,DWORD PTR [rdx-0x366c0767]
   140016444:	sbb    eax,0x7508150
   140016449:	movabs al,ds:0x4242b6dd249a84e6
   140016452:	rex.RB lods al,BYTE PTR ds:[rsi]
   140016454:	jne    0x140016455
   140016456:	sbb    DWORD PTR [rdi],ebp
   140016458:	(bad)  
   140016459:	and    dl,BYTE PTR [rax-0x34]
   14001645c:	or     esi,DWORD PTR [rsi+0x20]
   14001645f:	rex.W cmp al,0x5a
   140016462:	repnz xchg ebp,eax
   140016464:	jb     0x1400164ce
   140016466:	(bad)  
   140016467:	stos   BYTE PTR es:[rdi],al
   140016468:	movabs al,ds:0x25927bfca46f0a78
   140016471:	mov    edi,0x52f9bbc
   140016476:	rex.WRB not QWORD PTR [rip+0xffffffffcb123e7f]        # 0x10b13a2fc
   14001647d:	xchg   edx,eax
   14001647e:	(bad)  
   14001647f:	rex.R loop 0x140016461
   140016482:	xchg   DWORD PTR [rsp+rax*2-0x144b53a8],edi
   140016489:	jo     0x14001648b
   14001648b:	push   0xffffffffffffff8a
   14001648d:	stc    
   14001648e:	repz pop rax
   140016490:	in     al,dx
   140016491:	imul   ebp,DWORD PTR [rdi+0x200df5a3],0x29
   140016498:	loope  0x140016428
   14001649a:	add    BYTE PTR [rbp+0x55],al
   14001649d:	xor    al,BYTE PTR [rbp+0x77]
   1400164a0:	and    DWORD PTR [rcx+0x45ac54aa],edx
   1400164a6:	and    bh,dl
   1400164a8:	in     al,0xbc
   1400164aa:	mov    ebp,DWORD PTR [rcx]
   1400164ac:	repz cmp al,0x7d
   1400164af:	jl     0x140016527
   1400164b1:	outs   dx,DWORD PTR ds:[rsi]
   1400164b2:	push   rbx
   1400164b3:	rex.WRX
   1400164b4:	test   DWORD PTR ss:[rcx+0x294d961],ebx
   1400164bb:	out    dx,al
   1400164bc:	hlt    
   1400164bd:	xchg   DWORD PTR [rsi],ebx
   1400164bf:	mov    dh,0x82
   1400164c1:	iret   
   1400164c2:	xor    ebp,DWORD PTR [rdx]
   1400164c4:	and    al,0x85
   1400164c6:	adc    esi,DWORD PTR [rdi+rax*1+0x6c04ee69]
   1400164cd:	cwde   
   1400164ce:	ret    
   1400164cf:	retf   
   1400164d0:	xlat   BYTE PTR ds:[rbx]
   1400164d1:	mov    bl,0x6a
   1400164d3:	shl    edi,1
   1400164d5:	pop    rcx
   1400164d6:	mov    ecx,0x84c24af9
   1400164db:	pushf  
   1400164dc:	pop    rcx
   1400164dd:	rex.WX cmp rbx,rdx
   1400164e0:	push   rsp
   1400164e1:	and    bl,BYTE PTR [rdx+0x5a4ae469]
   1400164e7:	stc    
   1400164e8:	(bad)  
   1400164e9:	(bad)  
   1400164ea:	jo     0x1400164cc
   1400164ec:	sbb    DWORD PTR [rax-0x37],ebx
   1400164ef:	int    0xc1
   1400164f1:	xlat   BYTE PTR ds:[rbx]
   1400164f2:	add    esp,ebx
   1400164f4:	psrad  mm0,QWORD PTR [rdx+0x6c]
   1400164f8:	(bad)  
   1400164f9:	jge    0x140016530
   1400164fb:	enter  0x6048,0x1d
   1400164ff:	mov    al,BYTE PTR [rsi+rdx*4]
   140016502:	out    0xe7,eax
   140016504:	(bad)  
   140016505:	notrack call QWORD PTR [rcx+0x4e7ffc3f]
   14001650c:	cmp    al,0xf9
   14001650e:	clc    
   14001650f:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140016511:	outs   dx,BYTE PTR ds:[rsi]
   140016512:	outs   dx,BYTE PTR ds:[rsi]
   140016513:	ds xchg esp,eax
   140016515:	pop    rax
   140016516:	push   rbx
   140016517:	imul   ebx,DWORD PTR [rcx-0x5f],0x25d7e73c
   14001651e:	sti    
   14001651f:	xchg   ecx,eax
   140016520:	ins    DWORD PTR es:[rdi],dx
   140016521:	cmp    DWORD PTR [rax+rcx*1],0xbe68ba6b
   140016528:	mov    esi,0x7e13364d
   14001652d:	fistp  WORD PTR [rdi+0x6185cb5]
   140016533:	xchg   ebx,eax
   140016534:	jae    0x1400164c2
   140016536:	pop    rbp
   140016537:	(bad)  
   140016538:	sub    BYTE PTR [rbx],ch
   14001653a:	pmaddwd mm1,QWORD PTR [rcx+0x58]
   14001653e:	sahf   
   14001653f:	mov    edi,0xa8c87c3e
   140016544:	test   al,0x75
   140016546:	xor    BYTE PTR [rbp+0x75c38603],al
   14001654c:	jae    0x140016521
   14001654e:	xchg   edx,eax
   14001654f:	mov    edx,0xaeb54109
   140016554:	sub    DWORD PTR [esi],edx
   140016557:	sbb    edx,DWORD PTR [rbx+0x53b41455]
   14001655d:	pop    rax
   14001655e:	imul   ecx,ebx,0x1570c28b
   140016564:	(bad)  
   140016565:	xchg   edx,eax
   140016566:	mul    DWORD PTR [rcx-0x214a8c0e]
   14001656c:	xchg   ebx,eax
   14001656d:	(bad)  
   14001656e:	(bad)  
   14001656f:	jo     0x1400165d5
   140016571:	call   0xfda2e9a8
   140016576:	shr    dl,0x3c
   140016579:	cli    
   14001657a:	addr32 (bad) 
   14001657c:	xor    BYTE PTR [rbx+rsi*2],dh
   14001657f:	sbb    al,0x9d
   140016581:	jmp    0x14b4cee59
   140016586:	and    BYTE PTR [rbp-0x8],cl
   140016589:	jno    0x1400165a3
   14001658b:	int    0x1
   14001658d:	adc    DWORD PTR [rdx+rbp*1+0xa9fa74a],eax
   140016594:	nop
   140016595:	je     0x1400165f6
   140016597:	or     eax,0x63b445fb
   14001659c:	inc    BYTE PTR [rcx+0x33]
   14001659f:	rol    DWORD PTR [rdx+0x52b35b3d],cl
   1400165a5:	mov    WORD PTR [rsi-0x2e],ss
   1400165a8:	(bad)  
   1400165ac:	sub    bl,al
   1400165ae:	(bad)  
   1400165af:	cmp    BYTE PTR [rsi+0x6e],0x96
   1400165b3:	(bad)  
   1400165b4:	test   al,0xf0
   1400165b6:	stos   DWORD PTR es:[rdi],eax
   1400165b7:	(bad)  
   1400165b8:	sub    al,0xcf
   1400165ba:	rex.RX add eax,0x2d63c2d0
   1400165c0:	or     BYTE PTR [rbx-0x71aea60b],bh
   1400165c6:	sub    cl,al
   1400165c8:	jae    0x14001655f
   1400165ca:	rex.B
   1400165cb:	repnz sbb BYTE PTR [rsi-0x5f0367b5],bh
   1400165d2:	gs (bad) 
   1400165d4:	in     eax,dx
   1400165d5:	and    ch,ah
   1400165d7:	mov    bl,0xec
   1400165d9:	(bad)  
   1400165da:	shl    al,0x8c
   1400165dd:	or     DWORD PTR [rax-0x7664fcb3],ebx
   1400165e3:	pushf  
   1400165e4:	sub    BYTE PTR [rbx],bl
   1400165e6:	or     ah,BYTE PTR [rax]
   1400165e8:	push   rdi
   1400165e9:	cli    
   1400165ea:	stc    
   1400165eb:	test   eax,0x3f2cf9c8
   1400165f0:	xchg   ebp,eax
   1400165f1:	pop    rsi
   1400165f2:	mov    edx,DWORD PTR [rsi]
   1400165f4:	pop    rcx
   1400165f5:	(bad)  
   1400165f6:	cmc    
   1400165f7:	pslld  mm6,QWORD PTR [rax+0x58]
   1400165fb:	xchg   ebx,eax
   1400165fc:	in     eax,0xed
   1400165fe:	jnp    0x1400165a9
   140016600:	(bad)  
   140016601:	sub    al,0xc6
   140016603:	(bad)  
   140016604:	(bad)  
   140016605:	mov    ebx,0x6e5ef27a
   14001660a:	xor    al,0x14
   14001660c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001660d:	cmc    
   14001660e:	cmp    ebp,eax
   140016610:	in     al,dx
   140016611:	retf   
   140016612:	xchg   ecx,eax
   140016613:	or     DWORD PTR [rdx],ebp
   140016615:	int    0xc8
   140016617:	add    al,0x81
   140016619:	ret    0x5e01
   14001661c:	jg     0x14001663d
   14001661e:	mov    al,dh
   140016620:	rex.WRX movabs rax,0x44da283f8c45b80
   14001662a:	or     eax,esi
   14001662c:	cdq    
   14001662d:	inc    dh
   14001662f:	lahf   
   140016630:	jns    0x14001662c
   140016632:	(bad)  
   140016633:	in     al,dx
   140016634:	jmp    0x17eefb62a
   140016639:	je     0x1400166a4
   14001663b:	outs   dx,DWORD PTR ds:[rsi]
   14001663c:	(bad)  
   14001663d:	jmp    0x168e1a71e
   140016642:	(bad)  
   140016643:	sbb    dl,cl
   140016645:	and    DWORD PTR [rdx+0x5b],esi
   140016648:	lahf   
   140016649:	push   rbx
   14001664a:	jns    0x1400165ff
   14001664c:	ins    DWORD PTR es:[rdi],dx
   14001664d:	xor    al,0x8b
   14001664f:	retf   0x89a4
   140016652:	adc    al,0x66
   140016654:	gs ins DWORD PTR es:[rdi],dx
   140016656:	adc    dl,BYTE PTR [rax+0x12b2e26a]
   14001665c:	test   ch,bh
   14001665e:	movabs al,ds:0xb132975830ab6eb0
   140016667:	(bad)  
   140016669:	(bad)  
   14001666a:	cmp    DWORD PTR [rbx],edx
   14001666c:	jp     0x140016672
   14001666e:	push   rbp
   14001666f:	(bad)  
   140016670:	(bad)  
   140016671:	clc    
   140016672:	xor    al,0xb
   140016674:	(bad)  
   140016675:	pop    rbx
   140016676:	(bad)  
   140016677:	rex.RX jle 0x14001661c
   14001667a:	or     DWORD PTR [rdx+0x3ca70288],esp
   140016680:	imul   ebx,DWORD PTR [rip+0x1655ead2],0x8bc3c833        # 0x15657515c
   14001668a:	es xor ah,ch
   14001668d:	ja     0x1400166e1
   14001668f:	or     BYTE PTR [rsi-0x757ce7a3],al
   140016695:	mov    edx,0x160218ef
   14001669a:	rex.WRXB (bad) 
   14001669c:	(bad)
   14001669f:	(bad)  
   1400166a0:	out    0xc1,al
   1400166a2:	jmp    0x140016624
   1400166a4:	int    0x35
   1400166a6:	je     0x14001664e
   1400166a8:	rex.RXB mov r9b,0xe7
   1400166ab:	hlt    
   1400166ac:	jae    0x1400166c6
   1400166ae:	cwde   
   1400166af:	sbb    BYTE PTR [rbp+0x35],al
   1400166b2:	(bad)  
   1400166b3:	xor    DWORD PTR [rax-0x532b774e],0xc4cb3241
   1400166bd:	xchg   edx,eax
   1400166be:	rex.R enter 0x3e8a,0x15
   1400166c3:	pop    rcx
   1400166c4:	cdq    
   1400166c5:	(bad)  
   1400166c6:	movabs eax,ds:0x81dd403a8cfcb326
   1400166cf:	ret    0x7fa
   1400166d2:	imul   ebp,eax,0x1
   1400166d5:	(bad)  
   1400166d6:	addr32 or eax,0x823a05b0
   1400166dc:	and    eax,DWORD PTR [rbx]
   1400166de:	(bad)
   1400166e2:	pop    rsi
   1400166e3:	rex.XB add spl,BYTE PTR [r8]
   1400166e6:	gs not ebp
   1400166e9:	ret    0x4507
   1400166ec:	add    esi,edx
   1400166ee:	push   rcx
   1400166ef:	sub    BYTE PTR [rdx-0x194ad8fb],ch
   1400166f5:	mov    ecx,0x9448ffb
   1400166fa:	test   ch,bh
   1400166fc:	xlat   BYTE PTR ds:[rbx]
   1400166fd:	mov    BYTE PTR [rax-0x78],al
   140016700:	scas   al,BYTE PTR es:[rdi]
   140016701:	jo     0x140016765
   140016703:	push   rsp
   140016704:	hlt    
   140016705:	movabs al,ds:0x92a86ae619410011
   14001670e:	lock js 0x1400166cc
   140016711:	movabs ds:0xa3c8e113f6dffb00,al
   14001671a:	stos   BYTE PTR es:[rdi],al
   14001671b:	test   eax,0x2b8e1ed1
   140016720:	xchg   esp,eax
   140016721:	xor    BYTE PTR [rdi+0x6f8d9c0c],dl
   140016727:	rcr    DWORD PTR [rsi+0x26b5fc8a],1
   14001672d:	sub    BYTE PTR [rcx-0x16],bl
   140016730:	(bad)  
   140016731:	xor    al,0x92
   140016733:	(bad)  
   140016734:	and    al,0x40
   140016736:	rex.WR
   140016737:	repz fsubr QWORD PTR [rcx]
   14001673a:	or     DWORD PTR [rdx+0x62b386e2],ecx
   140016740:	sar    DWORD PTR [rsi+0x15ef3e80],1
   140016746:	adc    ebx,ebp
   140016748:	in     al,0x75
   14001674a:	push   rsp
   14001674b:	jmp    0x140016712
   14001674d:	rex.W sub BYTE PTR [rcx-0x60fe6ac0],cl
   140016754:	in     al,dx
   140016755:	pop    rsp
   140016756:	sub    BYTE PTR [rbx],ah
   140016758:	rex.X in al,0xb4
   14001675b:	addr32 (bad) 
   14001675d:	jne    0x14001675e
   14001675f:	repnz fwait
   140016761:	sbb    BYTE PTR [rcx+0x14605c3],bl
   140016767:	pop    rcx
   140016768:	fwait
   140016769:	rex.W sahf 
   14001676b:	mov    cl,0x2
   14001676d:	(bad)  
   14001676e:	je     0x140016791
   140016770:	pushf  
   140016771:	and    BYTE PTR [rbx+0x63d1a981],0xd3
   140016778:	lahf   
   140016779:	std    
   14001677a:	sbb    edi,0xfffffff9
   14001677d:	lea    ebp,[rcx+0x32ffa3b1]
   140016783:	xor    eax,0x285da8cd
   140016788:	ror    eax,0x30
   14001678b:	mov    bl,0xb8
   14001678d:	in     al,0x37
   14001678f:	outs   dx,DWORD PTR ds:[rsi]
   140016790:	not    bl
   140016792:	push   rdi
   140016793:	(bad)  
   140016795:	mov    DWORD PTR [rbp-0x7cdbe9ae],edx
   14001679b:	enter  0x7129,0xe1
   14001679f:	pop    rax
   1400167a0:	rcr    DWORD PTR [rsi],0x8d
   1400167a3:	and    ecx,DWORD PTR [rip+0x50000be7]        # 0x190017390
   1400167a9:	xchg   ebx,eax
   1400167aa:	cld    
   1400167ab:	jl     0x140016763
   1400167ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400167ae:	mov    dil,0x4
   1400167b1:	scas   eax,DWORD PTR es:[rdi]
   1400167b2:	sbb    DWORD PTR [rax-0x32],eax
   1400167b5:	sub    BYTE PTR [rsp+rbx*4],cl
   1400167b8:	and    DWORD PTR [rip+0x621b6120],edi        # 0x1a21cc8de
   1400167be:	rex.WB int 0x15
   1400167c1:	xchg   esp,eax
   1400167c2:	(bad)  
   1400167c3:	lods   eax,DWORD PTR ds:[rsi]
   1400167c4:	loop   0x1400167dd
   1400167c6:	sbb    eax,DWORD PTR [rcx-0x2e]
   1400167c9:	adc    DWORD PTR [rip+0x190adfcf],ebp        # 0x1590c479e
   1400167cf:	sbb    DWORD PTR [rdx],edi
   1400167d1:	sbb    DWORD PTR [rax+0x69],0x9b42344f
   1400167d8:	xchg   DWORD PTR [rax-0x3d4ef042],eax
   1400167de:	fcmovbe st,st(4)
   1400167e0:	rex.WB cmp al,0xb1
   1400167e3:	(bad)  
   1400167e4:	(bad)  
   1400167e5:	jmp    0x105045dca
   1400167ea:	(bad)  
   1400167eb:	es mov al,0x6b
   1400167ee:	cli    
   1400167ef:	cmp    BYTE PTR [rsi],al
   1400167f1:	data16 (bad) 
   1400167f3:	push   rcx
   1400167f4:	int    0x4f
   1400167f6:	and    ebp,DWORD PTR [rsi+0x893812e]
   1400167fc:	mov    edi,0x8b16a4c
   140016801:	adc    eax,0x12f8b691
   140016806:	loope  0x140016797
   140016808:	pop    rdx
   140016809:	jrcxz  0x14001683a
   14001680b:	add    eax,0x9cd8f240
   140016810:	and    eax,0xe7b3c0d2
   140016815:	rex.WXB test al,0xd5
   140016818:	(bad)  
   140016819:	or     dh,BYTE PTR [rbx-0x53]
   14001681c:	lea    esi,[rdi-0x20]
   14001681f:	(bad)  
   140016820:	(bad)  
   140016821:	loopne 0x14001684f
   140016823:	pop    rsp
   140016824:	shr    DWORD PTR [rax+rdi*2-0x130a934],0xf7
   14001682c:	lods   al,BYTE PTR ds:[rsi]
   14001682d:	(bad)  
   14001682e:	sub    al,dl
   140016830:	mov    ebp,DWORD PTR [rdx+0x42160850]
   140016836:	test   bl,bh
   140016838:	(bad)
   14001683b:	rcr    DWORD PTR [rax],0x32
   14001683e:	shr    ebx,1
   140016840:	(bad)  
   140016841:	bnd jl 0x140016848
   140016844:	sub    bh,BYTE PTR [rsi]
   140016846:	hlt    
   140016847:	rol    BYTE PTR [rbp-0x52],1
   14001684a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001684b:	xor    bl,al
   14001684d:	(bad)  
   14001684e:	iret   
   14001684f:	sar    DWORD PTR [rdi],1
   140016851:	hlt    
   140016852:	xlat   BYTE PTR ds:[rbx]
   140016853:	pop    rcx
   140016854:	lock rex.WXB not QWORD PTR [r10-0x41b23fed]
   14001685c:	pop    rsi
   14001685d:	sti    
   14001685e:	rex.XB jno 0x140016869
   140016861:	cmp    DWORD PTR [rdx-0x57c69ac3],esi
   140016867:	sub    DWORD PTR [rdx],esp
   140016869:	mov    bh,0x4c
   14001686b:	sahf   
   14001686c:	adc    DWORD PTR [rax],ecx
   14001686e:	pop    QWORD PTR [rcx+rbx*8-0xd4d46f3]
   140016875:	mov    cl,0x2f
   140016877:	iret   
   140016878:	xchg   edi,eax
   140016879:	out    dx,eax
   14001687a:	fwait
   14001687b:	or     BYTE PTR [rdx-0x79a5ea64],bl
   140016881:	int    0xef
   140016883:	(bad)  
   140016884:	lahf   
   140016885:	sub    edi,DWORD PTR [rcx+0x11c7b391]
   14001688b:	add    BYTE PTR [rbx],0x37
   14001688e:	icebp  
   14001688f:	fcomp  QWORD PTR [rbp+0x2e3bf428]
   140016895:	rcl    dh,1
   140016897:	ds push rax
   140016899:	pop    rbx
   14001689a:	or     DWORD PTR [rsi+rbp*1+0x55803ac1],edx
   1400168a1:	add    BYTE PTR [rbx-0x700c00a1],ch
   1400168a7:	fdivrp st(7),st
   1400168a9:	(bad)  
   1400168aa:	std    
   1400168ab:	pop    rdi
   1400168ac:	sti    
   1400168ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400168ae:	sbb    ebp,DWORD PTR [rbx-0xe9a8055]
   1400168b4:	cmc    
   1400168b5:	(bad)  
   1400168b6:	pop    rsp
   1400168b7:	and    BYTE PTR [rax+0x479f7775],bh
   1400168bd:	movabs eax,ds:0x1b50fdc00b331a1
   1400168c6:	or     BYTE PTR [rsi],ah
   1400168c8:	cmp    edx,0x466f16c3
   1400168ce:	cdq    
   1400168cf:	gs rex.RB
   1400168d1:	rex.WX movabs rcx,0x4daae02e8b21609f
   1400168db:	sub    eax,0x42f94fee
   1400168e0:	repnz icebp 
   1400168e2:	pop    rdx
   1400168e3:	push   rdi
   1400168e4:	lods   eax,DWORD PTR ds:[rsi]
   1400168e5:	xchg   esi,eax
   1400168e6:	sahf   
   1400168e7:	xchg   ebx,eax
   1400168e8:	or     al,BYTE PTR [rdi-0x6e067ff4]
   1400168ee:	ins    BYTE PTR es:[rdi],dx
   1400168ef:	push   rsi
   1400168f0:	pop    rsp
   1400168f1:	scas   al,BYTE PTR es:[rdi]
   1400168f2:	mov    edx,0xa3ec4098
   1400168f7:	rex.RX cli 
   1400168f9:	jbe    0x1400168c6
   1400168fb:	cwde   
   1400168fc:	mov    dh,0x14
   1400168fe:	push   rsp
   1400168ff:	test   al,0x6a
   140016901:	xor    al,0xb3
   140016903:	adc    edi,DWORD PTR [rax+0x66]
   140016906:	jp     0x140016916
   140016908:	mov    bl,0x87
   14001690a:	outs   dx,BYTE PTR ds:[rsi]
   14001690b:	rex push rbp
   14001690d:	jne    0x14001689f
   14001690f:	xchg   esi,eax
   140016910:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016911:	xor    BYTE PTR [rbx+rsi*2],dh
   140016914:	or     al,0x3b
   140016916:	addr32 rex.WRX mov al,ds:0x5c449b9e
   14001691d:	xchg   ecx,eax
   14001691e:	rex.X (bad) 
   140016920:	movabs al,ds:0xfee24047fad43d70
   140016929:	(bad)  
   14001692a:	(bad)  
   14001692b:	repnz icebp 
   14001692d:	(bad)  
   14001692e:	mov    edi,0x9bf0b21
   140016933:	jo     0x1400169a0
   140016935:	and    ah,BYTE PTR [rdx+0x2ca46b8]
   14001693b:	pop    rdx
   14001693c:	pop    rsp
   14001693d:	stos   BYTE PTR es:[rdi],al
   14001693e:	out    dx,eax
   14001693f:	push   0x6ce19fc2
   140016944:	test   ch,0x43
   140016947:	enter  0x6ff7,0x28
   14001694b:	rex.XB jle 0x140016978
   14001694e:	mov    al,ch
   140016950:	pop    rdx
   140016951:	jae    0x1400169c0
   140016953:	sub    eax,0x5732ca2a
   140016958:	mov    WORD PTR [rbx+0x21],es
   14001695b:	mov    ch,ah
   14001695d:	and    BYTE PTR [rdx+0x2fa18b5d],dl
   140016963:	jmp    FWORD PTR [rdx]
   140016965:	mov    ebx,0x10edbc04
   14001696a:	rex.RB pushf 
   14001696c:	(bad)  
   14001696d:	in     eax,dx
   14001696e:	loope  0x140016926
   140016970:	sti    
   140016971:	outs   dx,BYTE PTR ds:[rsi]
   140016972:	rex.WRXB add r14,QWORD PTR [r14-0x10281e79]
   140016979:	cmp    ebx,ebx
   14001697b:	cwde   
   14001697c:	sti    
   14001697d:	adc    eax,0x6ad52170
   140016982:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016983:	int    0x2d
   140016985:	sub    bl,dl
   140016987:	ds leave 
   140016989:	mov    edx,0xc7615125
   14001698e:	mov    dl,0xea
   140016990:	shr    BYTE PTR [rbx-0x3956182c],cl
   140016996:	je     0xd414a7ec
   14001699c:	neg    DWORD PTR [rdi-0x13fbfe51]
   1400169a2:	rol    esi,0xf
   1400169a5:	movabs ds:0x16ebdf827ad7bc5d,eax
   1400169ae:	mov    bh,0x7d
   1400169b0:	shl    BYTE PTR [rsi+0x9],cl
   1400169b3:	in     al,dx
   1400169b4:	cli    
   1400169b5:	(bad)
   1400169b9:	rex.WRX sahf 
   1400169bb:	pop    rax
   1400169bc:	cmp    dl,dh
   1400169be:	lock sbb DWORD PTR [rdi+0x55e57fdd],0xfffffff3
   1400169c6:	popf   
   1400169c7:	fidivr WORD PTR [rsi-0x48576665]
   1400169cd:	mov    ah,0x8b
   1400169cf:	jle    0x1400169c2
   1400169d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400169d2:	rex.WB
   1400169d3:	rex.R shl spl,1
   1400169d6:	pop    rdi
   1400169d7:	adc    eax,0xfe189b4c
   1400169dc:	sbb    esi,edx
   1400169de:	je     0x14001697a
   1400169e0:	(bad)  
   1400169e1:	sub    BYTE PTR [rdx],dh
   1400169e3:	in     eax,0xd4
   1400169e5:	(bad)  
   1400169e6:	rex or edx,eax
   1400169e9:	push   rsp
   1400169ea:	movabs ds:0x900dd07580184309,al
   1400169f3:	cld    
   1400169f4:	mov    WORD PTR [rsi+0x33],es
   1400169f7:	fisub  DWORD PTR [rdx-0x77a3e97b]
   1400169fd:	in     eax,0xb7
   1400169ff:	xor    eax,0x2162d7d4
   140016a04:	adc    cl,BYTE PTR [rcx+0x57]
   140016a07:	(bad)  
   140016a08:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016a09:	jb     0x140016a31
   140016a0b:	mov    ecx,0x6301b779
   140016a10:	test   BYTE PTR [rdi+rbx*8+0x18],ah
   140016a14:	(bad)  
   140016a15:	loope  0x140016a27
   140016a17:	add    BYTE PTR [rsi-0x52efbfb9],dl
   140016a1d:	(bad)  
   140016a1e:	test   DWORD PTR [rax+0x9],ecx
   140016a21:	movabs eax,ds:0x86313d1c19c581aa
   140016a2a:	mov    cl,0x4b
   140016a2c:	pop    rsi
   140016a2d:	mov    edi,DWORD PTR [rdx+0x60]
   140016a30:	(bad)  
   140016a31:	shr    dl,cl
   140016a33:	sbb    al,0x6
   140016a35:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016a36:	mov    fs,WORD PTR [rdx-0x31]
   140016a39:	test   eax,0x753bd0e7
   140016a3e:	adc    dl,ch
   140016a40:	fcom   QWORD PTR [rdx+rax*8]
   140016a43:	fisub  DWORD PTR [rdx-0xd2f06cc]
   140016a49:	xor    ebx,DWORD PTR [rcx-0x2c]
   140016a4c:	and    esp,DWORD PTR [rax+0x45fc4ca6]
   140016a52:	add    ch,BYTE PTR [rdx+0x6a]
   140016a55:	xchg   esp,eax
   140016a56:	(bad)  
   140016a57:	shr    BYTE PTR [rax],1
   140016a59:	add    ch,ah
   140016a5b:	xchg   ebp,eax
   140016a5c:	jge    0x140016a01
   140016a5e:	rex.B jg 0x1400169e4
   140016a61:	xchg   esp,eax
   140016a62:	shr    DWORD PTR [rsi+rsi*4+0x73b57842],1
   140016a69:	xchg   ecx,eax
   140016a6a:	mov    dl,0x60
   140016a6c:	mov    ebx,0xfdac8ee5
   140016a71:	(bad)  
   140016a72:	test   al,0x15
   140016a74:	fisubr WORD PTR [rdx+0x35]
   140016a77:	not    ah
   140016a79:	or     DWORD PTR [rsi],ebp
   140016a7b:	mov    al,0x3e
   140016a7d:	out    dx,eax
   140016a7e:	(bad)  
   140016a7f:	(bad)  
   140016a80:	test   esp,eax
   140016a82:	(bad)  
   140016a83:	pop    rax
   140016a84:	mov    edx,0x3ff05a8a
   140016a89:	test   al,ah
   140016a8b:	test   BYTE PTR [rdx+0x55],ah
   140016a8e:	or     DWORD PTR [rcx],edi
   140016a90:	sbb    DWORD PTR [rbx-0x69977360],eax
   140016a96:	shl    dl,cl
   140016a98:	or     DWORD PTR [rdx],eax
   140016a9a:	test   BYTE PTR [rsp+rcx*1],al
   140016a9d:	stos   BYTE PTR es:[rdi],al
   140016a9e:	test   DWORD PTR [rax-0xa],ecx
   140016aa1:	(bad)  
   140016aa2:	(bad)  
   140016aa3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016aa4:	test   eax,esi
   140016aa6:	adc    eax,0x6d19396
   140016aab:	xchg   ecx,eax
   140016aac:	push   0xb
   140016aae:	in     al,0x35
   140016ab0:	ins    BYTE PTR es:[rdi],dx
   140016ab1:	pop    rdi
   140016ab2:	fwait
   140016ab3:	addr32 jns 0x140016add
   140016ab6:	and    eax,DWORD PTR [rcx]
   140016ab8:	int    0x1c
   140016aba:	xor    BYTE PTR [rbx-0x5aa8f1e5],dl
   140016ac0:	or     esi,ecx
   140016ac2:	and    eax,0x2c001af8
   140016ac7:	enter  0x55,0xb
   140016acb:	cmp    ecx,eax
   140016acd:	int    0xc5
   140016acf:	mov    ah,0xf0
   140016ad1:	jg     0x140016a8f
   140016ad3:	sub    BYTE PTR [rsp+rsi*4],ch
   140016ad6:	scas   al,BYTE PTR es:[rdi]
   140016ad7:	int    0x39
   140016ad9:	(bad)  
   140016ada:	(bad)  
   140016adb:	cmp    ah,al
   140016add:	jnp    0x140016aa9
   140016adf:	fs rex.B
   140016ae1:	rex.X loopne 0x140016a98
   140016ae4:	out    0x1a,eax
   140016ae6:	pop    rdx
   140016ae7:	stc    
   140016ae8:	int3   
   140016ae9:	xchg   edi,eax
   140016aea:	mov    al,0x67
   140016aec:	add    ah,BYTE PTR [rsi+0x21]
   140016aef:	sbb    BYTE PTR cs:[rbx],0x70
   140016af3:	jbe    0x140016b1d
   140016af5:	jno    0x140016b5d
   140016af7:	xor    al,0xe0
   140016af9:	movabs eax,ds:0x8f93fe5fcb34d4c2
   140016b02:	cld    
   140016b03:	(bad)  
   140016b04:	fcom   DWORD PTR [rbx-0x391b0271]
   140016b0a:	cli    
   140016b0b:	(bad)  
   140016b0c:	mov    bh,0x45
   140016b0e:	jne    0x140016af6
   140016b10:	or     eax,DWORD PTR [rsi]
   140016b12:	or     dh,BYTE PTR [rsi]
   140016b14:	shl    DWORD PTR [rsi],cl
   140016b16:	and    eax,DWORD PTR [rip+0xffffffff876554b7]        # 0xc766bfd3
   140016b1c:	pop    rdi
   140016b1d:	push   rbx
   140016b1e:	es fs sub ax,0xa144
   140016b24:	add    cl,BYTE PTR [rax+rax*4-0x7c]
   140016b28:	(bad)  
   140016b29:	sub    DWORD PTR [rdi+0x11e7ad7],esp
   140016b2f:	mov    bl,0xc2
   140016b31:	jl     0x140016bac
   140016b33:	sub    eax,0xc63b4ffc
   140016b38:	outs   dx,DWORD PTR ds:[rsi]
   140016b39:	ret    0x96f
   140016b3c:	push   r9
   140016b3e:	iret   
   140016b3f:	push   rsp
   140016b40:	ss and ecx,ebp
   140016b43:	leave  
   140016b44:	shr    ch,0xdf
   140016b47:	ins    BYTE PTR es:[rdi],dx
   140016b48:	push   rbx
   140016b49:	mov    ch,0xbc
   140016b4b:	rex.RB or eax,0x835a49eb
   140016b51:	(bad)  
   140016b52:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016b53:	retf   0xd62
   140016b56:	pop    rdx
   140016b57:	pop    rbp
   140016b58:	sar    al,0xd8
   140016b5b:	mov    bl,0x38
   140016b5d:	mov    edx,0xa1c43af7
   140016b62:	add    esp,eax
   140016b64:	lea    eax,[rbp-0xc]
   140016b67:	int3   
   140016b68:	sahf   
   140016b69:	ror    al,0xd4
   140016b6c:	xor    esp,esi
   140016b6e:	int    0x9e
   140016b70:	rex.RX pop rsp
   140016b72:	pushf  
   140016b73:	pop    r8
   140016b75:	pop    rbx
   140016b76:	add    ah,BYTE PTR [rdi+0x1de69075]
   140016b7c:	adc    bl,ch
   140016b7e:	adc    dl,dl
   140016b80:	nop
   140016b81:	test   BYTE PTR [rdi-0x552dad6],bl
   140016b87:	mov    bl,0x1a
   140016b89:	jg     0x140016b59
   140016b8b:	jle    0x140016b45
   140016b8d:	repnz movabs al,ds:0x2753612d85686a23
   140016b98:	sub    esp,DWORD PTR [rcx-0x227ff74]
   140016b9e:	mov    dl,0x36
   140016ba0:	mov    esp,0xd903842c
   140016ba5:	sub    dl,BYTE PTR [rdx+0x24b9f4fa]
   140016bab:	mov    eax,0x62841640
   140016bb0:	mov    ch,0x9c
   140016bb2:	nop
   140016bb3:	(bad)  
   140016bb4:	sbb    ecx,DWORD PTR [rax]
   140016bb6:	gs call 0x12537628f
   140016bbc:	(bad)  
   140016bbd:	call   0x19bdc906f
   140016bc2:	(bad)  
   140016bc4:	stos   DWORD PTR es:[rdi],eax
   140016bc5:	xor    eax,0xb6168ad9
   140016bca:	pop    rdx
   140016bcb:	(bad)  
   140016bcc:	(bad)  
   140016bcd:	imul   DWORD PTR [rbp+0x9]
   140016bd0:	(bad)  
   140016bd1:	outs   dx,BYTE PTR ds:[rsi]
   140016bd2:	mov    ebp,0xf927bdb9
   140016bd7:	(bad)  
   140016bd9:	add    ebx,edi
   140016bdb:	(bad)  
   140016bdc:	rex.WXB icebp 
   140016bde:	cli    
   140016bdf:	or     eax,0xfd4b05c8
   140016be4:	test   dh,bl
   140016be6:	adc    BYTE PTR [rbx+rsi*2-0x77370810],dl
   140016bed:	xchg   DWORD PTR [rsp+rax*1-0x4],ebx
   140016bf1:	add    esp,DWORD PTR [rdx]
   140016bf3:	fwait
   140016bf4:	adc    ebp,esp
   140016bf6:	rex.RB fldenv [r13-0x54c70070]
   140016bfd:	or     BYTE PTR [rcx+rbp*4-0x2d],ch
   140016c01:	loopne 0x140016c20
   140016c03:	xlat   BYTE PTR ds:[rbx]
   140016c04:	icebp  
   140016c05:	loop   0x140016c82
   140016c07:	jno    0x140016b8a
   140016c09:	push   rbx
   140016c0a:	xor    DWORD PTR [rdi+0x3b728023],0x3b
   140016c11:	rex.B push 0xfffffffffa7cffa5
   140016c17:	mov    ecx,0x4c2f4f67
   140016c1c:	rex.WRB jl 0x140016c99
   140016c1f:	in     al,0xe0
   140016c21:	and    eax,0x77dbdd55
   140016c26:	and    ecx,DWORD PTR [rax-0x56]
   140016c29:	call   FWORD PTR [rbx-0x66]
   140016c2c:	push   rdi
   140016c2d:	xor    eax,0xa5fb4e69
   140016c32:	pushf  
   140016c33:	cmp    edi,DWORD PTR [rsi-0x594a9c9b]
   140016c39:	rex.WRX
   140016c3a:	lock cdq 
   140016c3c:	push   rbp
   140016c3d:	rex.WRX pop rsi
   140016c3f:	add    ebp,eax
   140016c41:	sbb    bl,dh
   140016c43:	mov    edx,0x84306b1
   140016c48:	add    BYTE PTR [rdx],dl
   140016c4a:	add    eax,0xb68829af
   140016c4f:	pop    rax
   140016c50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016c51:	(bad)  
   140016c52:	mov    dl,0xa1
   140016c54:	mov    DWORD PTR [rdx+0x18831fc5],ebx
   140016c5a:	ins    DWORD PTR es:[rdi],dx
   140016c5b:	add    al,0x24
   140016c5d:	adc    DWORD PTR [rax+rax*8],edi
   140016c60:	sub    eax,0x33835b8
   140016c65:	mov    dl,0x62
   140016c67:	xchg   edx,eax
   140016c68:	loope  0x140016cb2
   140016c6a:	(bad)  
   140016c6b:	mov    ecx,0xe797f7c8
   140016c70:	sub    eax,0x38003239
   140016c75:	add    al,0x54
   140016c77:	fnsave [rip+0x18fb3f4c]        # 0x158fcabc9
   140016c7d:	sahf   
   140016c7e:	sbb    BYTE PTR [rcx+0x3affb402],bh
   140016c84:	test   ch,cl
   140016c86:	adc    eax,0x7638ecd0
   140016c8b:	rex.WRXB
   140016c8c:	xchg   DWORD PTR ds:[rbp+0x67a8a313],ebx
   140016c93:	rex.WRXB and r13,QWORD PTR [r14]
   140016c96:	(bad)  
   140016c97:	add    ebx,ebp
   140016c99:	gs cmp eax,0xfd25267
   140016c9f:	test   al,0x10
   140016ca1:	push   rax
   140016ca2:	(bad)  
   140016ca3:	rex.X lods eax,DWORD PTR ds:[rsi]
   140016ca5:	popf   
   140016ca6:	jle    0x140016c4c
   140016ca8:	(bad)  
   140016ca9:	jg     0x140016d1d
   140016cab:	and    eax,0x53b6c550
   140016cb0:	push   0x39023be1
   140016cb5:	mov    DWORD PTR [rsi],edx
   140016cb7:	cwde   
   140016cb8:	jl     0x140016c43
   140016cba:	scas   eax,DWORD PTR es:[rdi]
   140016cbb:	movabs al,ds:0x288ad0c028163656
   140016cc4:	adc    BYTE PTR [rbp-0xa57ce3c],dh
   140016cca:	cmovp  ecx,esi
   140016ccd:	sbb    ecx,edi
   140016ccf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016cd0:	movabs eax,ds:0xd4e53aadced2523b
   140016cd9:	pop    rdi
   140016cda:	xor    dh,BYTE PTR [rax+riz*1]
   140016cdd:	(bad)  
   140016cde:	mov    eax,0xdefc410a
   140016ce3:	add    dh,BYTE PTR [rcx]
   140016ce5:	rex.R mov ebp,0x9d032336
   140016ceb:	sbb    esi,DWORD PTR [rax]
   140016ced:	retf   
   140016cee:	(bad)  
   140016cef:	int3   
   140016cf0:	loop   0x140016cbd
   140016cf2:	vpmulhw xmm2,xmm8,xmm7
   140016cf6:	es xchg ah,ah
   140016cf9:	mov    DWORD PTR [rbx],ecx
   140016cfb:	push   rax
   140016cfc:	xor    al,0x20
   140016cfe:	xlat   BYTE PTR ds:[rbx]
   140016cff:	ficom  DWORD PTR [rsi-0x25]
   140016d02:	ss jg  0x140016d0f
   140016d05:	stos   DWORD PTR es:[rdi],eax
   140016d06:	out    dx,al
   140016d07:	pop    rdi
   140016d08:	adc    eax,0x3146c7da
   140016d0d:	xor    edx,esi
   140016d0f:	cmp    ah,BYTE PTR [rsi-0x66df1b1c]
   140016d15:	(bad)  
   140016d16:	(bad)  
   140016d17:	xor    dl,al
   140016d19:	and    eax,0xce4190c1
   140016d1e:	out    0x6f,eax
   140016d20:	adc    DWORD PTR [rax-0x1b8943ac],eax
   140016d26:	(bad)  
   140016d27:	xchg   ecx,eax
   140016d28:	cs jne 0x140016d62
   140016d2b:	or     eax,esp
   140016d2d:	fwait
   140016d2e:	movabs ds:0x50061d22b2e51906,eax
   140016d37:	xor    DWORD PTR [rdi+0x4e],0x51
   140016d3b:	iret   
   140016d3c:	lahf   
   140016d3d:	(bad)  
   140016d3e:	mov    eax,DWORD PTR [rcx-0x3741d814]
   140016d44:	(bad)  
   140016d45:	loopne 0x140016dba
   140016d47:	sub    eax,DWORD PTR [rax]
   140016d49:	fcmovne st,st(6)
   140016d4b:	(bad)  
   140016d4c:	and    eax,0x65780048
   140016d51:	jle    0x140016dc1
   140016d53:	std    
   140016d54:	call   0x1bd7f7d1c
   140016d59:	clc    
   140016d5a:	loopne 0x140016d1d
   140016d5c:	(bad)  
   140016d5d:	jnp    0x140016d65
   140016d5f:	jbe    0x140016d1d
   140016d61:	mov    es,WORD PTR [rdx+0x18]
   140016d64:	icebp  
   140016d65:	(bad)  
   140016d66:	or     ebp,edx
   140016d68:	lods   al,BYTE PTR ds:[rsi]
   140016d69:	lock mov edi,?
   140016d6c:	or     al,0x7b
   140016d6e:	mov    al,cl
   140016d70:	(bad)  
   140016d71:	xchg   bl,bh
   140016d73:	or     DWORD PTR [r14],r14d
   140016d76:	test   al,0x7a
   140016d78:	out    0x29,eax
   140016d7a:	jns    0x140016d92
   140016d7c:	movabs ds:0x685f79c4c9172659,al
   140016d85:	rcl    DWORD PTR [rdx],cl
   140016d87:	add    al,BYTE PTR [rdx+0x12]
   140016d8a:	repnz (bad) 
   140016d8c:	cdq    
   140016d8d:	push   rbp
   140016d8e:	movabs ds:0x6397a9cb61d46c5c,al
   140016d97:	rex.R xor al,0x6a
   140016d9a:	fnstenv [rbp+riz*4-0x6fe5cde7]
   140016da1:	leave  
   140016da2:	xchg   ebx,eax
   140016da3:	repnz mov ebp,0xa181ee14
   140016da9:	push   rax
   140016daa:	jo     0x140016d4a
   140016dac:	push   0xffffffffa021657e
   140016db1:	(bad)  
   140016db2:	(bad)  
   140016db3:	rcl    BYTE PTR [rbx-0x14e1df1],cl
   140016db9:	std    
   140016dba:	call   0x1822eebdd
   140016dbf:	fiadd  DWORD PTR [rdi+rbp*1]
   140016dc2:	rex.WR (bad) 
   140016dc4:	push   0x4d7608ea
   140016dc9:	sbb    al,0x45
   140016dcb:	addr32 jp 0x140016dea
   140016dce:	jno    0x140016e31
   140016dd0:	(bad)  
   140016dd1:	(bad)  
   140016dd2:	jae    0x140016ddd
   140016dd4:	pushf  
   140016dd5:	mov    edx,0xdf54b0
   140016dda:	movabs al,ds:0x84fdb960af9dc926
   140016de3:	or     cl,BYTE PTR [rbp+0x5d81fa64]
   140016de9:	clc    
   140016dea:	fstp   QWORD PTR [rsp+rax*1]
   140016ded:	push   0xffffffffef9c8db3
   140016df2:	rex.WRXB xchg r8,rax
   140016df4:	adc    eax,0xe58d0081
   140016df9:	xor    esi,DWORD PTR [rsp+rax*2-0x582ecd69]
   140016e00:	in     eax,dx
   140016e01:	scas   eax,DWORD PTR es:[rdi]
   140016e02:	add    ecx,eax
   140016e04:	rcr    DWORD PTR [rax+0x850ff43],0x3e
   140016e0b:	xchg   ecx,eax
   140016e0c:	xchg   eax,esi
   140016e0e:	(bad)  
   140016e0f:	test   BYTE PTR [rax+0x54cc26fa],dh
   140016e15:	(bad)  
   140016e16:	dec    DWORD PTR [rbx]
   140016e18:	(bad)  
   140016e19:	rcr    DWORD PTR [rdi+rax*1-0x71],0xff
   140016e1e:	(bad)  
   140016e1f:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016e21:	rex.WX and rax,rsp
   140016e24:	ror    ch,cl
   140016e26:	adc    BYTE PTR [rax-0x1b],cl
   140016e29:	xchg   esi,eax
   140016e2a:	rcl    DWORD PTR [rax+0x45],cl
   140016e2d:	sar    DWORD PTR [rax],0xa
   140016e30:	ja     0x140016dd8
   140016e32:	or     dl,al
   140016e34:	sub    eax,0xa172616c
   140016e39:	ret    0x6e2
   140016e3c:	movabs ds:0xe62e5f1a56fa0a4d,al
   140016e45:	movabs al,ds:0x43970dc104571c59
   140016e4e:	stc    
   140016e4f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016e50:	and    DWORD PTR [rbp-0x32],eax
   140016e53:	enter  0x5596,0x1
   140016e57:	pop    rax
   140016e58:	xor    al,0x80
   140016e5a:	xchg   ebx,eax
   140016e5b:	sub    al,BYTE PTR [rdx]
   140016e5d:	lea    edx,[rdx-0x7]
   140016e60:	out    0x7a,eax
   140016e62:	cmp    al,0x99
   140016e64:	pop    rbx
   140016e65:	out    0xf9,al
   140016e67:	(bad)  
   140016e68:	push   rdx
   140016e69:	loopne 0x140016e9d
   140016e6b:	movabs eax,ds:0xfb84277e860b806e
   140016e74:	mov    esi,0xcafdd091
   140016e79:	(bad)  
   140016e7a:	mov    cl,0xef
   140016e7c:	sub    BYTE PTR [rsi],ch
   140016e7e:	push   rax
   140016e7f:	xor    al,0xe0
   140016e81:	stc    
   140016e82:	sub    DWORD PTR [rax],eax
   140016e84:	loopne 0x140016f02
   140016e86:	push   0xffffffffc9f00180
   140016e8b:	(bad)  
   140016e8c:	(bad)  
   140016e8d:	(bad)  
   140016e8e:	fidiv  DWORD PTR [rbx+rdi*4-0x61]
   140016e92:	fstp   TBYTE PTR [rcx-0x45612099]
   140016e98:	sar    DWORD PTR [rcx-0x6b],cl
   140016e9b:	sub    esi,DWORD PTR [rdi]
   140016e9d:	mov    ebp,0x63a5f241
   140016ea2:	mov    ecx,0x1284d650
   140016ea7:	xchg   DWORD PTR [rdi-0x695e06a],edx
   140016ead:	sub    eax,0x58c540b2
   140016eb2:	cdq    
   140016eb3:	ret    0x8130
   140016eb6:	and    al,0x48
   140016eb8:	call   0xf4ad657f
   140016ebd:	fistp  WORD PTR [rsi+0x50]
   140016ec0:	jmp    0xf5d0c429
   140016ec5:	repnz add ch,BYTE PTR [rdi+riz*4+0x10379a0d]
   140016ecd:	xchg   ecx,eax
   140016ece:	test   DWORD PTR [rbx-0x6c],ebx
   140016ed1:	mov    bh,0x76
   140016ed3:	add    DWORD PTR [rdx+0x23],esp
   140016ed6:	or     al,0x49
   140016ed8:	movabs eax,ds:0xb3b9ca6e6c2044bf
   140016ee1:	out    0x36,al
   140016ee3:	and    dh,BYTE PTR [rcx]
   140016ee5:	add    bl,BYTE PTR [rax+0x7e]
   140016ee8:	out    0x61,al
   140016eea:	cmp    al,0x19
   140016eec:	cli    
   140016eed:	mov    cl,0x76
   140016eef:	vpsubsb ymm14,ymm10,YMMWORD PTR [rax]
   140016ef3:	movabs ds:0x73d863d31d8d34bb,eax
   140016efc:	cli    
   140016efd:	pop    rcx
   140016efe:	hlt    
   140016eff:	rex.WRX lahf 
   140016f01:	rex.X pushf 
   140016f03:	lahf   
   140016f04:	rex.X pop rsp
   140016f06:	(bad)  
   140016f07:	mov    edi,0xe58e525f
   140016f0c:	jle    0x140016f38
   140016f0e:	adc    BYTE PTR [rdx-0x5843daf0],ch
   140016f14:	lods   al,BYTE PTR ds:[rsi]
   140016f15:	jg     0x140016ea4
   140016f17:	(bad)  
   140016f18:	ror    edx,1
   140016f1a:	jle    0x140016f1f
   140016f1c:	push   rsp
   140016f1d:	adc    DWORD PTR [rax+rbp*2+0x6d],esp
   140016f21:	and    DWORD PTR [rdi-0x5a017f00],edi
   140016f27:	mov    edi,0x2103afef
   140016f2c:	jb     0x140016ef7
   140016f2e:	(bad)  
   140016f2f:	(bad)  
   140016f30:	ds mov esp,0xd108520a
   140016f36:	adc    ecx,DWORD PTR [rax+0x430a85a2]
   140016f3c:	data16 cld 
   140016f3e:	movsxd ecx,eax
   140016f40:	(bad)  
   140016f41:	lahf   
   140016f42:	rex.X pop rcx
   140016f44:	call   0x163f9c88c
   140016f49:	and    DWORD PTR [rax-0x73aafd90],edx
   140016f4f:	sahf   
   140016f50:	rex.R push rsp
   140016f52:	test   eax,0x27df022
   140016f57:	and    DWORD PTR [rsi+0x78],eax
   140016f5a:	jg     0x140016f1e
   140016f5c:	(bad)  
   140016f5d:	(bad)  
   140016f5e:	mov    ebp,0x84168022
   140016f63:	(bad)  
   140016f64:	movabs eax,ds:0xe52c9d50f16d1a85
   140016f6d:	jg     0x140016f08
   140016f6f:	push   rax
   140016f70:	cs ds retf 
   140016f73:	(bad)  
   140016f74:	fbld   TBYTE PTR [rsi+0xb]
   140016f77:	gs rex.W scas al,BYTE PTR es:[rdi]
   140016f7a:	rex.X
   140016f7b:	rex.WRXB
   140016f7c:	pushw  0x21
   140016f7f:	add    eax,0x9bdec13f
   140016f84:	sti    
   140016f85:	ret    
   140016f86:	and    al,0xab
   140016f88:	mov    gs,ecx
   140016f8a:	fdiv   QWORD PTR [rbx+0x57]
   140016f8d:	(bad)  
   140016f8e:	pop    rdi
   140016f8f:	sub    ebp,DWORD PTR [edi]
   140016f92:	shr    DWORD PTR [rbp+0x38c05a88],cl
   140016f98:	add    dh,dl
   140016f9a:	jrcxz  0x140016fb1
   140016f9c:	jns    0x140016fac
   140016f9e:	in     eax,0xc5
   140016fa0:	cdq    
   140016fa1:	rex.WR clc 
   140016fa3:	test   ebx,ebx
   140016fa5:	jg     0x140016fd9
   140016fa7:	xchg   ebx,eax
   140016fa8:	jnp    0x140016f63
   140016faa:	imul   ebp,esi,0x429f43a1
   140016fb0:	outs   dx,BYTE PTR ds:[rsi]
   140016fb1:	adc    dl,BYTE PTR [rdx+0x60051e5e]
   140016fb7:	fstp   TBYTE PTR [rcx+0x3b9e4209]
   140016fbd:	xor    eax,0x3be474be
   140016fc2:	(bad)  
   140016fc4:	outs   dx,BYTE PTR ds:[rsi]
   140016fc5:	fist   WORD PTR [rbp+0x57]
   140016fc8:	iret   
   140016fc9:	push   rsi
   140016fca:	cmp    eax,0x310baf7d
   140016fcf:	hlt    
   140016fd0:	rex.WXB ror QWORD PTR [r8-0xfebfd1b],1
   140016fd7:	lea    esi,[rbx+0x54]
   140016fda:	rcr    BYTE PTR [rdx+0x5735ba36],0x46
   140016fe1:	and    eax,0x96ab0ba7
   140016fe6:	rex.RXB (bad) 
   140016fe8:	and    di,ax
   140016feb:	or     BYTE PTR [rcx+0xb],bl
   140016fee:	add    DWORD PTR [rax-0x12bec93b],edx
   140016ff4:	rex.B xlat BYTE PTR ds:[rbx]
   140016ff6:	add    DWORD PTR [rsi+0x4ed5b929],ebp
   140016ffc:	add    BYTE PTR [rdx],ah
   140016ffe:	(bad)  
   140016fff:	(bad)  
   140017000:	stc    
   140017001:	add    DWORD PTR [rdi],esp
   140017003:	adc    eax,0xf6538a05
   140017008:	(bad)  
   140017009:	push   rsp
   14001700a:	jae    0x140017053
   14001700c:	mov    edi,0x8052380b
   140017011:	jle    0x140016fb2
   140017013:	sbb    DWORD PTR [rbx+0x23f5e840],0x95c9e18f
   14001701d:	or     eax,0x3b7d5c2c
   140017022:	(bad)  
   140017023:	mov    edx,0xd3cb9b0f
   140017028:	call   0xfd8fa9c8
   14001702d:	adc    ecx,edi
   14001702f:	movabs ds:0xeae224dce238e27f,al
   140017038:	add    dl,al
   14001703a:	lods   al,BYTE PTR ds:[rsi]
   14001703b:	xor    DWORD PTR [rcx+rdi*4+0x75fe31a7],0xffffff88
   140017043:	test   al,0xc1
   140017045:	test   al,0x74
   140017047:	rex.WB mov r8b,0x8a
   14001704a:	adc    esp,DWORD PTR [rdx-0x20]
   14001704d:	push   rsi
   14001704e:	xchg   ebp,eax
   14001704f:	pop    rdi
   140017050:	add    eax,0x2ef3fb8
   140017055:	add    al,0x12
   140017057:	rex.WXB sbb al,BYTE PTR [r10]
   14001705a:	movabs ds:0xc877f7cd4404fdf9,al
   140017063:	scas   eax,DWORD PTR es:[rdi]
   140017064:	add    dl,BYTE PTR [rdx]
   140017066:	rex.XB add BYTE PTR [r13-0x6a],al
   14001706a:	jge    0x140017061
   14001706c:	cmp    BYTE PTR [rbp+0xa441216],dl
   140017072:	movabs ds:0xfe0dfdc5bef88a00,al
   14001707b:	(bad)  
   14001707c:	cwde   
   14001707d:	mov    DWORD PTR [rsi],edi
   14001707f:	rex.WB adc cl,r10b
   140017082:	or     ah,BYTE PTR [rcx]
   140017084:	add    al,0x53
   140017086:	or     al,0xd1
   140017088:	xchg   ebp,eax
   140017089:	mov    WORD PTR [rax],fs
   14001708b:	add    al,0x6d
   14001708d:	or     edx,DWORD PTR [rsi]
   14001708f:	sub    eax,0x35f640c7
   140017094:	in     al,0xc1
   140017096:	rex.RX
   140017097:	data16 rex.R
   140017099:	repnz adc BYTE PTR [rbx-0x6f79d607],bl
   1400170a0:	vpavgb ymm11,ymm11,YMMWORD PTR [rdi+rax*1+0xbb13590]
   1400170a9:	mov    ch,0xa1
   1400170ab:	mov    DWORD PTR [rdx+0x485d9603],eax
   1400170b1:	(bad)  
   1400170b2:	pushf  
   1400170b3:	mov    edi,0x2d9dcacf
   1400170b8:	(bad)  
   1400170b9:	and    ch,ah
   1400170bb:	iret   
   1400170bc:	fs (bad) 
   1400170be:	jmp    0xdac9986b
   1400170c3:	lea    ecx,[rsi-0x133497ea]
   1400170c9:	(bad)  
   1400170ca:	ins    DWORD PTR es:[rdi],dx
   1400170cb:	xchg   QWORD PTR [r10+0x36b9653],rsp
   1400170d2:	push   rdi
   1400170d3:	xor    ah,ch
   1400170d5:	push   QWORD PTR [rdi-0x4a9261ad]
   1400170db:	sub    eax,DWORD PTR [rdx+0x67258191]
   1400170e1:	and    ch,bl
   1400170e3:	mov    bh,0x2
   1400170e5:	shr    dh,cl
   1400170e7:	rex.WRX rol dil,0x1e
   1400170eb:	ret    0x12d0
   1400170ee:	or     QWORD PTR [rax+rcx*1-0x3a420fec],r15
   1400170f6:	adc    ecx,edi
   1400170f8:	rex.XB adc BYTE PTR [r10],al
   1400170fb:	pop    rax
   1400170fc:	stc    
   1400170fd:	jmp    0x14001713e
   1400170ff:	std    
   140017100:	enter  0x9e1f,0x78
   140017104:	cld    
   140017105:	xchg   ecx,eax
   140017106:	lahf   
   140017107:	in     al,dx
   140017108:	outs   dx,BYTE PTR ds:[rsi]
   140017109:	ins    BYTE PTR es:[rdi],dx
   14001710a:	jl     0x1400170b7
   14001710c:	shl    DWORD PTR [rdi+0x59837e44],1
   140017112:	rcr    DWORD PTR [rdx+0x3285cfbf],cl
   140017118:	adc    bl,cl
   14001711a:	lahf   
   14001711b:	jb     0x140017133
   14001711d:	lahf   
   14001711e:	jle    0x1400170e6
   140017120:	mov    edx,0xe4fd265f
   140017125:	jnp    0x140017180
   140017127:	(bad)  
   140017128:	test   esp,edi
   14001712a:	mov    bh,0xd1
   14001712c:	mov    BYTE PTR [rax-0x7d],al
   14001712f:	cli    
   140017130:	and    al,0xf
   140017132:	cmp    eax,DWORD PTR [rax-0x4bb9594b]
   140017138:	outs   dx,DWORD PTR ds:[rsi]
   140017139:	sub    r14b,BYTE PTR [rdi+rbp*2+0x28711e2e]
   140017141:	pop    rdi
   140017142:	pop    rsp
   140017143:	adc    edi,ecx
   140017145:	scas   eax,DWORD PTR es:[rdi]
   140017146:	rex.WR (bad) 
   140017148:	repz mul DWORD PTR [rbp-0x72aaf662]
   14001714f:	int    0x63
   140017151:	(bad)  
   140017152:	jrcxz  0x1400170ed
   140017154:	test   DWORD PTR [rip+0x3b735ecc],esp        # 0x17b74d026
   14001715a:	cmp    bl,BYTE PTR [rbp+0x332b3401]
   140017160:	call   0xdec89102
   140017165:	jmp    0xcf5165bb
   14001716a:	movabs ds:0xd77707995846985a,eax
   140017173:	movabs al,ds:0x28215ad5b27d65ed
   14001717c:	sbb    DWORD PTR [rsi-0x5c],edi
   14001717f:	sbb    DWORD PTR [rsi-0x64],edi
   140017182:	loope  0x140017202
   140017184:	sbb    edx,esi
   140017186:	repz jo 0x14001719d
   140017189:	cmp    al,0x95
   14001718b:	(bad)  
   14001718c:	pop    rbx
   14001718d:	popf   
   14001718e:	xor    DWORD PTR [rdx+0x6e],ebx
   140017191:	adc    al,0xe9
   140017193:	xchg   edi,eax
   140017194:	xchg   esi,eax
   140017195:	rex.X jmp 0x140017128
   140017198:	pop    rsi
   140017199:	punpcklbw mm5,DWORD PTR [rax-0x71a1f3bf]
   1400171a0:	fucom  st(7)
   1400171a2:	jb     0x140017204
   1400171a4:	rex.XB sbb eax,DWORD PTR [r8+0x26]
   1400171a8:	mov    ch,0xe4
   1400171aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400171ab:	(bad)  
   1400171ac:	pop    rdx
   1400171ad:	hlt    
   1400171ae:	shl    DWORD PTR [rdx],0x3e
   1400171b1:	and    eax,ebp
   1400171b3:	js     0x140017210
   1400171b5:	sahf   
   1400171b6:	rex.RB push r14
   1400171b8:	(bad)  
   1400171b9:	in     eax,dx
   1400171ba:	(bad)  
   1400171bb:	or     DWORD PTR [rbp-0x66fdd33a],esi
   1400171c1:	leave  
   1400171c2:	mov    dl,0x62
   1400171c4:	jae    0x1400171c7
   1400171c6:	sub    eax,0xf7016f14
   1400171cb:	loope  0x140017170
   1400171cd:	xchg   esi,eax
   1400171ce:	rex.WB
   1400171cf:	fs loopne 0x1400171de
   1400171d2:	(bad)  
   1400171d3:	adc    eax,0x7a0a0ca6
   1400171d8:	(bad)  
   1400171d9:	(bad)  [rip+0xffffffffbef6a022]        # 0xfef81201
   1400171df:	sub    eax,0xbe582b46
   1400171e4:	(bad)  
   1400171e5:	in     eax,0x67
   1400171e7:	out    dx,eax
   1400171e8:	test   esp,0x5f65b4ad
   1400171ee:	or     al,0x95
   1400171f0:	bnd jns 0x1400171d7
   1400171f3:	jns    0x1400171ce
   1400171f5:	jae    0x14001725f
   1400171f7:	fbld   TBYTE PTR [rbp-0x1cacae49]
   1400171fd:	call   0x15780b91a
   140017202:	mov    BYTE PTR [rax+0x1],dl
   140017205:	xchg   edi,eax
   140017206:	fadd   st(5),st
   140017208:	push   rbx
   140017209:	gs adc eax,0x7809ca8b
   140017210:	loope  0x14001721a
   140017212:	shl    BYTE PTR [rsi-0x56fb44cd],0xfc
   140017219:	fwait
   14001721a:	cmp    al,0xfa
   14001721c:	fsubr  st(4),st
   14001721e:	cld    
   14001721f:	(bad)  
   140017220:	test   eax,0x3c1c8f4f
   140017225:	sbb    al,0xea
   140017227:	sahf   
   140017228:	sahf   
   140017229:	fwait
   14001722a:	add    al,0x7d
   14001722c:	out    0xc7,eax
   14001722e:	jmp    0x183f9751e
   140017233:	(bad)  
   140017234:	adc    edi,DWORD PTR [rsi-0x2a]
   140017237:	pop    rsp
   140017238:	xor    al,0x6b
   14001723a:	stc    
   14001723b:	int3   
   14001723c:	and    eax,DWORD PTR [rdi+rdx*2]
   14001723f:	jmp    0x1400172b1
   140017241:	fistp  WORD PTR [rsi]
   140017243:	stos   BYTE PTR es:[rdi],al
   140017244:	in     eax,0x2b
   140017246:	outs   dx,WORD PTR ds:[rsi]
   140017248:	mov    cl,0x4c
   14001724a:	(bad)
   14001724d:	jl     0x1400172ce
   14001724f:	mov    al,0x56
   140017251:	adc    ecx,DWORD PTR [rdx]
   140017253:	cld    
   140017254:	(bad)  
   140017255:	mov    dh,0x3d
   140017257:	(bad)  
   140017258:	xor    eax,DWORD PTR [rcx+0x3f]
   14001725b:	ja     0x14001726c
   14001725d:	(bad)
   140017260:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017261:	sbb    al,0x22
   140017263:	and    al,0x81
   140017265:	jnp    0x1400172ac
   140017267:	lock push rdx
   140017269:	mov    edx,DWORD PTR ds:[rcx]
   14001726c:	int    0xf8
   14001726e:	jae    0x1400172e8
   140017270:	jbe    0x1400172ec
   140017272:	or     dl,BYTE PTR [rbx]
   140017274:	push   rdi
   140017275:	mov    edi,0x2303fd11
   14001727a:	call   0x10e23a02d
   14001727f:	popf   
   140017280:	ret    0xa9ee
   140017283:	movabs ds:0xc204ecce86389c18,eax
   14001728c:	movabs ds:0x3c4b13fab641ea2c,al
   140017295:	mov    edi,0x515010e
   14001729a:	(bad)  
   14001729b:	(bad)  
   14001729c:	sbb    ch,BYTE PTR [rsp+rax*4+0x28ff429f]
   1400172a3:	in     eax,dx
   1400172a4:	mov    edi,0x416620d4
   1400172a9:	test   eax,edi
   1400172ab:	std    
   1400172ac:	sbb    al,0x2d
   1400172ae:	fld    TBYTE PTR [rdi-0x1bd624f8]
   1400172b4:	(bad)  
   1400172b6:	mov    esi,0x988722bd
   1400172bb:	(bad)  
   1400172bc:	ja     0x140017280
   1400172be:	nop
   1400172bf:	(bad)  
   1400172c0:	xor    dl,BYTE PTR [rbx-0x6b6efe48]
   1400172c6:	adc    ah,dl
   1400172c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400172c9:	sahf   
   1400172ca:	test   al,0x3c
   1400172cc:	cmp    esp,0xffffff95
   1400172cf:	xchg   esi,eax
   1400172d0:	pop    rsi
   1400172d1:	jge    0x1400172d2
   1400172d3:	pop    rax
   1400172d4:	fs (bad) 
   1400172d6:	adc    ah,BYTE PTR [rcx+0x8511252]
   1400172dc:	ret    0x8990
   1400172df:	rex.X cmp esi,DWORD PTR [rdi-0x4c]
   1400172e3:	imul   esi,DWORD PTR [rdx+0x79940ca],0x65
   1400172ea:	jb     0x1400172f9
   1400172ec:	or     esp,DWORD PTR [rcx+rcx*8-0x37]
   1400172f0:	ss test edx,edx
   1400172f3:	sub    ebp,DWORD PTR [rip+0xffffffffce14dbbf]        # 0x10e164eb8
   1400172f9:	or     BYTE PTR [rdi-0x1b],al
   1400172fc:	enter  0x8fa6,0xcf
   140017300:	adc    DWORD PTR [rdx-0x37],esi
   140017303:	sub    cl,BYTE PTR [rsi]
   140017305:	(bad)  
   140017306:	test   BYTE PTR [rdi],bl
   140017308:	sub    al,0x5f
   14001730a:	and    eax,0x631f4e2b
   14001730f:	xchg   ah,al
   140017311:	cwde   
   140017312:	lods   eax,DWORD PTR ds:[rsi]
   140017313:	(bad)  
   140017314:	xchg   ebp,eax
   140017315:	loope  0x14001733f
   140017317:	rol    BYTE PTR [rdx-0x77],0x26
   14001731b:	add    eax,0xbefe32d
   140017320:	rex.B adc al,0x2
   140017323:	scas   eax,DWORD PTR es:[rdi]
   140017324:	cmp    eax,0x52fc881d
   140017329:	loopne 0x140017375
   14001732b:	ret    0xb0d0
   14001732e:	sub    DWORD PTR [rbx+rax*2+0x26],ecx
   140017332:	and    al,0x19
   140017334:	mov    ah,0x15
   140017336:	jae    0x14001731f
   140017338:	push   rbx
   140017339:	mov    ah,0xff
   14001733b:	jrcxz  0x1400173a8
   14001733d:	mov    BYTE PTR [rbp-0x44],bl
   140017340:	rex.W xor sil,al
   140017343:	jnp    0x14001739c
   140017345:	add    BYTE PTR [rsi-0x27f6a4b],dh
   14001734b:	out    dx,eax
   14001734c:	movabs al,ds:0xfc3d8fd7e617568
   140017355:	jle    0x1400173ba
   140017357:	clc    
   140017358:	rol    cl,0x27
   14001735b:	jp     0x1400173d3
   14001735d:	in     al,dx
   14001735e:	mov    eax,0x30c2891
   140017363:	(bad)  
   140017364:	stc    
   140017365:	or     ecx,DWORD PTR [rbx-0x60]
   140017368:	push   rsi
   140017369:	pop    rbp
   14001736a:	test   bh,bl
   14001736c:	mov    esi,0x8cc9a7cb
   140017371:	jg     0x140017371
   140017373:	mov    WORD PTR [rax+0x31],cs
   140017376:	nop
   140017377:	pop    rdx
   140017378:	or     eax,0xc5cf0b52
   14001737e:	movabs al,ds:0xc5673192cd485e91
   140017387:	and    r13b,al
   14001738a:	push   rsi
   14001738b:	(bad)
   14001738e:	sub    DWORD PTR [rcx+0x4429f60c],ecx
   140017394:	jae    0x14001737e
   140017396:	xchg   esi,eax
   140017397:	pop    rsp
   140017398:	jns    0x1400173b2
   14001739a:	sub    al,0x2c
   14001739c:	imul   eax,DWORD PTR [rdi],0xffffffa8
   14001739f:	(bad)  
   1400173a0:	and    BYTE PTR [rbp-0x61],cl
   1400173a3:	shl    BYTE PTR [rbx+0x7e314627],0xf9
   1400173aa:	lods   eax,DWORD PTR ds:[rsi]
   1400173ab:	call   0x11d112d8f
   1400173b0:	cmc    
   1400173b1:	and    eax,0xc31c6e60
   1400173b6:	shl    DWORD PTR [rbx+0x147d3e18],cl
   1400173bc:	popf   
   1400173bd:	(bad)  [rcx]
   1400173bf:	(bad)  
   1400173c0:	vaddsubpd xmm11,xmm12,xmm2
   1400173c4:	add    al,al
   1400173c6:	fwait
   1400173c7:	scas   al,BYTE PTR es:[rdi]
   1400173c8:	pop    rsp
   1400173c9:	add    bl,BYTE PTR [rbx+0x39a80fe5]
   1400173cf:	stc    
   1400173d0:	stos   BYTE PTR es:[rdi],al
   1400173d1:	mov    esi,0xefcb5235
   1400173d6:	(bad)  
   1400173d7:	and    edi,eax
   1400173d9:	jg     0x140017387
   1400173db:	jrcxz  0x14001738b
   1400173dd:	test   esi,ebx
   1400173df:	or     al,0x22
   1400173e1:	jnp    0x140017451
   1400173e3:	(bad)  
   1400173e4:	mov    dl,0xe5
   1400173e6:	jbe    0x14001744d
   1400173e8:	adc    BYTE PTR [rcx+rbx*8-0x60a2008a],al
   1400173ef:	and    ebp,eax
   1400173f1:	loopne 0x14001740f
   1400173f3:	mov    ?,r9d
   1400173f6:	sbb    edx,DWORD PTR [rdi-0x60]
   1400173f9:	pushf  
   1400173fa:	xchg   bl,al
   1400173fc:	jmp    QWORD PTR [rax-0x2355b611]
   140017402:	xchg   esp,eax
   140017403:	in     eax,0xaf
   140017405:	xchg   esp,eax
   140017406:	cmc    
   140017407:	(bad)  
   140017408:	(bad)  
   140017409:	ja     0x1400173eb
   14001740b:	cmp    al,0x1
   14001740d:	gs out 0xdf,al
   140017410:	loopne 0x140017450
   140017412:	vmulps ymm3,ymm0,ymm1
   140017416:	jno    0x1400173e0
   140017418:	sar    DWORD PTR [rbp+0x2d],cl
   14001741b:	add    ah,BYTE PTR [rax+0x68]
   14001741e:	add    esp,esp
   140017420:	push   rcx
   140017421:	adc    dl,0xe2
   140017424:	xchg   esi,eax
   140017425:	push   0x4e1e4082
   14001742a:	xor    al,0xa3
   14001742c:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001742e:	lock movabs ds:0x55f5e4a6199b3414,eax
   140017438:	pop    rcx
   140017439:	(bad)  
   14001743a:	outs   dx,BYTE PTR ds:[rsi]
   14001743b:	ret    0xdfaf
   14001743e:	mov    ecx,0x7cf625
   140017443:	sbb    eax,0x9ad804ff
   140017448:	(bad)  
   140017449:	mov    rax,QWORD PTR [r14+0x46002472]
   140017450:	movsxd esp,DWORD PTR [rcx]
   140017452:	scas   eax,DWORD PTR es:[rdi]
   140017453:	lea    ebx,[rcx-0x369a59af]
   140017459:	adc    ch,ah
   14001745b:	ds cmp ebx,ecx
   14001745e:	test   DWORD PTR [rcx+0x18434293],esp
   140017464:	fimul  DWORD PTR [rcx]
   140017466:	fcomp  QWORD PTR [rsp+rdi*1]
   140017469:	sbb    BYTE PTR [rsi],dh
   14001746b:	out    dx,al
   14001746c:	sti    
   14001746d:	xor    dh,BYTE PTR [rsi-0x41]
   140017470:	call   0xef18f511
   140017475:	add    BYTE PTR [rax+0x3c2e15e7],al
   14001747b:	stc    
   14001747c:	in     al,0xe3
   14001747e:	rex.RXB (bad) 
   140017480:	int    0xcd
   140017482:	iret   
   140017483:	or     al,0xee
   140017485:	fnstenv [rdi-0x14158bc9]
   14001748b:	jne    0x140017421
   14001748d:	hlt    
   14001748e:	(bad)  
   14001748f:	xor    ebp,DWORD PTR [rax+0x13041a49]
   140017495:	gs push rax
   140017497:	(bad)  
   140017498:	movabs eax,ds:0xf9c0c10ce71fc178
   1400174a1:	loopne 0x14001745d
   1400174a3:	fwait
   1400174a4:	rex jg 0x1400174c9
   1400174a7:	(bad)  
   1400174a8:	ins    BYTE PTR es:[rdi],dx
   1400174a9:	sar    BYTE PTR [rdx],0xaf
   1400174ac:	rex.W jrcxz 0x1400174bb
   1400174af:	jae    0x1400174ba
   1400174b1:	push   rdx
   1400174b2:	rcl    al,cl
   1400174b4:	lahf   
   1400174b5:	(bad)  
   1400174b6:	ror    DWORD PTR [rax+0x2a124899],1
   1400174bc:	rex.X
   1400174bd:	repnz or ch,BYTE PTR [rcx+0x5a40979c]
   1400174c4:	or     edx,DWORD PTR [rax+0x22366fa1]
   1400174ca:	add    al,0x8a
   1400174cc:	adc    eax,0x47147278
   1400174d1:	rex.WRX lahf 
   1400174d3:	(bad)  
   1400174d4:	leave  
   1400174d5:	rex.WXB outs dx,DWORD PTR ds:[rsi]
   1400174d7:	(bad)  
   1400174d8:	mov    fs,ecx
   1400174da:	add    ecx,DWORD PTR [rax-0x65]
   1400174dd:	imul   ebp,DWORD PTR [rax-0x1a],0x4e
   1400174e1:	(bad)  
   1400174e2:	push   0x27bb0c7a
   1400174e7:	mov    cs,WORD PTR [rax]
   1400174e9:	jmp    0xf884a5a5
   1400174ee:	mov    dl,0x20
   1400174f0:	icebp  
   1400174f1:	jle    0x140017549
   1400174f3:	ror    BYTE PTR [rdi+0x54050e80],cl
   1400174f9:	and    DWORD PTR [rax-0x6cbf83b],ecx
   1400174ff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017500:	xchg   ecx,eax
   140017501:	add    eax,0x7f7e213e
   140017506:	and    BYTE PTR [rcx],ah
   140017508:	inc    ah
   14001750a:	cli    
   14001750b:	(bad)  
   14001750c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001750d:	lahf   
   14001750e:	loope  0x140017582
   140017510:	movsxd esi,edx
   140017512:	fst    DWORD PTR [rsp+rax*4]
   140017515:	jo     0x1400174e0
   140017517:	xchg   ecx,eax
   140017518:	test   ch,bh
   14001751a:	(bad)  
   14001751b:	movabs ds:0x2c82b00c0b52d519,al
   140017524:	rex.WRXB (bad) 
   140017526:	and    cl,dl
   140017528:	jns    0x140017529
   14001752a:	sub    bl,BYTE PTR [rax+0x39]
   14001752d:	out    dx,eax
   14001752e:	(bad)  
   140017530:	add    dh,BYTE PTR [rdx-0x21]
   140017533:	lahf   
   140017534:	(bad)  
   140017535:	in     al,0xf5
   140017537:	imul   ebx,DWORD PTR [rbp-0x681a575],0x5d
   14001753e:	adc    eax,0x48832082
   140017543:	test   al,0x5c
   140017545:	sbb    eax,ebp
   140017547:	jno    0x1400175ab
   140017549:	rex.RX adc BYTE PTR [rsi-0x7],r15b
   14001754d:	rex.B
   14001754e:	repz (bad) 
   140017550:	(bad)  
   140017551:	rex.RX and al,0xe
   140017554:	xchg   ebx,eax
   140017555:	or     eax,0x68429819
   14001755a:	push   rbp
   14001755b:	xor    al,0xe9
   14001755d:	jle    0x1400175c5
   14001755f:	cmp    BYTE PTR [rcx+0x28],dl
   140017562:	xchg   edx,eax
   140017563:	or     al,0x2c
   140017565:	xor    ecx,DWORD PTR gs:[rax]
   140017568:	fidiv  WORD PTR [rdx]
   14001756a:	cvtdq2ps xmm4,XMMWORD PTR [rsi-0x54]
   14001756e:	out    dx,eax
   14001756f:	stos   BYTE PTR es:[rdi],al
   140017570:	push   rsi
   140017571:	cmp    ebx,DWORD PTR [rcx-0x48]
   140017574:	rex.WRX test QWORD PTR [rdx],r14
   140017577:	add    esi,edx
   140017579:	xor    ecx,edi
   14001757b:	fcom   QWORD PTR [rcx+0x2]
   14001757e:	mov    esp,0xcd2ec02e
   140017583:	jb     0x1400175d9
   140017585:	mov    edi,?
   140017587:	iret   
   140017588:	enter  0xe097,0xfe
   14001758c:	xchg   BYTE PTR [rdx+0x6b8a8184],dl
   140017592:	sub    esi,esp
   140017594:	mov    ebp,0x54df0629
   140017599:	pop    rsi
   14001759a:	sbb    BYTE PTR [rbp+rcx*1-0x5e],bl
   14001759e:	pop    rcx
   14001759f:	clc    
   1400175a0:	sbb    BYTE PTR [rsi],ch
   1400175a2:	stc    
   1400175a3:	rex.WX sub QWORD PTR [rbx+0x7f],rsp
   1400175a7:	jnp    0x1400175b3
   1400175a9:	shl    BYTE PTR [rsi+0x7e841333],0x81
   1400175b0:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400175b2:	(bad)  
   1400175b3:	xchg   edi,eax
   1400175b4:	(bad)  
   1400175b5:	ds hlt 
   1400175b7:	shl    BYTE PTR [rdi-0x9],0x5d
   1400175bb:	jns    0x1400175b2
   1400175bd:	push   rsp
   1400175be:	rex.WRXB pop r15
   1400175c0:	dec    DWORD PTR [rbp+0x20]
   1400175c3:	hlt    
   1400175c4:	(bad)  
   1400175c5:	int    0xac
   1400175c7:	xor    bl,BYTE PTR [rax+0x4e]
   1400175ca:	data16 ficom WORD PTR [rbp+rdx*1-0x49]
   1400175cf:	sbb    BYTE PTR [rdi-0x6b],bh
   1400175d2:	data16 jns 0x14001764b
   1400175d5:	(bad)
   1400175d8:	and    al,0x16
   1400175da:	fidivr WORD PTR [rbx-0x6b68e8ef]
   1400175e0:	cwde   
   1400175e1:	push   rcx
   1400175e2:	rex.XB loopne 0x140017659
   1400175e5:	pop    rsi
   1400175e6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400175e7:	mov    edx,DWORD PTR [rax]
   1400175e9:	push   rsp
   1400175ea:	jne    0x140017650
   1400175ec:	gs pop r10
   1400175ef:	cmp    BYTE PTR [rcx+rbp*4+0x7e],ah
   1400175f3:	ds pop rsp
   1400175f5:	and    dl,BYTE PTR [rax+0x60]
   1400175f8:	out    0x8e,eax
   1400175fa:	lods   al,BYTE PTR ds:[rsi]
   1400175fb:	inc    BYTE PTR [rcx+0xd550840]
   140017601:	ds stc 
   140017603:	xor    al,0x9e
   140017605:	cmp    eax,0x97e30c71
   14001760a:	fld    QWORD PTR [rdx+0x4803e181]
   140017610:	fisttp QWORD PTR [rip+0x604c2e6c]        # 0x1a04da482
   140017616:	jo     0x14001767e
   140017618:	or     al,0xbb
   14001761a:	es (bad) 
   14001761c:	movabs al,ds:0xe5aa34c2e224ea6f
   140017625:	add    eax,0xd7a2b370
   14001762a:	sub    dl,ch
   14001762c:	scas   al,BYTE PTR es:[rdi]
   14001762d:	xchg   BYTE PTR [rax+0x3a31157e],dl
   140017633:	sub    al,0x42
   140017635:	pop    rcx
   140017636:	push   rcx
   140017637:	and    ecx,DWORD PTR [rcx]
   140017639:	rex test ebp,esp
   14001763c:	outs   dx,DWORD PTR ds:[rsi]
   14001763d:	sub    eax,0x159665ef
   140017642:	sbb    DWORD PTR [rsi],edx
   140017644:	(bad)  
   140017645:	rex sti 
   140017647:	stc    
   140017648:	jmp    0x124fd3f44
   14001764d:	xor    eax,0xc95880fa
   140017652:	cli    
   140017653:	ja     0x1400175f6
   140017655:	and    dh,bh
   140017657:	movabs ds:0x84662220314ebb2,al
   140017660:	sub    al,BYTE PTR [rax+0x31]
   140017663:	adc    BYTE PTR [rdx-0x3bf80498],ch
   140017669:	sub    ch,dh
   14001766b:	add    al,0x16
   14001766d:	add    cl,BYTE PTR [rsi+rax*2-0x54a36e02]
   140017674:	jl     0x14001768c
   140017676:	rex push rcx
   140017678:	sub    al,0x76
   14001767a:	in     eax,0xd6
   14001767c:	lahf   
   14001767d:	push   rsp
   14001767e:	imul   edx,DWORD PTR [rax+rcx*4],0x9605a344
   140017685:	(bad)  
   140017686:	in     al,0x55
   140017688:	mov    eax,DWORD PTR [rbp+0x8]
   14001768b:	shr    BYTE PTR [rdi],1
   14001768d:	(bad)  
   14001768e:	jb     0x1400176ae
   140017690:	mul    DWORD PTR [rbx-0x4]
   140017693:	jae    0x14001763d
   140017695:	(bad)  
   140017696:	enter  0xd2c,0xb5
   14001769a:	and    al,0x1f
   14001769c:	jns    0x1400176ca
   14001769e:	cmc    
   14001769f:	(bad)  
   1400176a0:	int3   
   1400176a1:	sbb    ebp,esi
   1400176a3:	xchg   ebp,eax
   1400176a4:	fcom   st(5)
   1400176a6:	jg     0x14001770f
   1400176a8:	enter  0x540f,0x44
   1400176ac:	xchg   DWORD PTR [rax],ebx
   1400176ae:	(bad)
   1400176b2:	ss bswap eax
   1400176b5:	and    eax,DWORD PTR [rbx]
   1400176b7:	sub    BYTE PTR [rbp-0x3aa579e1],al
   1400176bd:	test   BYTE PTR [rax-0x47],bh
   1400176c0:	xor    bl,bh
   1400176c2:	(bad)  
   1400176c3:	xchg   edx,eax
   1400176c4:	in     al,dx
   1400176c5:	sar    DWORD PTR [rdx*8-0x24248d84],0xa0
   1400176cd:	repz sbb al,0xea
   1400176d0:	shl    BYTE PTR [rdx+0x1006572a],cl
   1400176d6:	cmp    DWORD PTR [rip+0x7bbea29f],ecx        # 0x1bbc0197b
   1400176dc:	(bad)  
   1400176dd:	movabs ds:0x5585c04e545ff,al
   1400176e6:	pushf  
   1400176e7:	xlat   BYTE PTR ds:[rbx]
   1400176e8:	and    eax,0x3f8e9000
   1400176ed:	neg    ch
   1400176ef:	(bad)  
   1400176f0:	jp     0x1400176f8
   1400176f2:	jbe    0x140017770
   1400176f4:	jge    0x140017756
   1400176f6:	out    0xf0,eax
   1400176f8:	mov    ch,0x44
   1400176fa:	loope  0x14001768c
   1400176fc:	pop    rcx
   1400176fd:	jno    0x140017762
   1400176ff:	(bad)  
   140017700:	in     eax,0xc6
   140017702:	fcmovnb st,st(5)
   140017704:	cmp    al,0x79
   140017706:	xchg   ecx,eax
   140017707:	rex.WRB fldenv [r15+0x511b9e41]
   14001770e:	and    DWORD PTR [rax],ebx
   140017710:	xchg   ebx,eax
   140017711:	and    eax,0x1aefc8bd
   140017716:	or     eax,0x6fc555ef
   14001771b:	sbb    edx,DWORD PTR [rsi-0x15]
   14001771e:	scas   eax,DWORD PTR es:[rdi]
   14001771f:	mov    esi,0x9fcb0bf
   140017724:	or     ecx,eax
   140017726:	add    eax,0x77bfcd9d
   14001772b:	and    eax,0x83023990
   140017730:	(bad)
   140017734:	ror    BYTE PTR [rcx-0x2b330f59],cl
   14001773a:	adc    al,0x4e
   14001773c:	pop    rsi
   14001773d:	jno    0x14001775a
   14001773f:	(bad)  
   140017740:	rex.RXB test BYTE PTR [r9+0x16d62e9b],0x26
   140017748:	shl    DWORD PTR [rdi],1
   14001774a:	jnp    0x14001774e
   14001774c:	jnp    0x140017774
   14001774e:	(bad)  
   14001774f:	movabs al,ds:0xaee8fcb52a04f27f
   140017758:	rcl    BYTE PTR [rdx+0x6149087d],0x7f
   14001775f:	rex.R
   140017760:	rex.WRB mov WORD PTR [r10+0x53],ds
   140017764:	xchg   ecx,eax
   140017765:	and    eax,0xdc3dbfd6
   14001776a:	out    0xd0,eax
   14001776c:	pop    rdi
   14001776d:	add    eax,0xcc7b92d1
   140017772:	repnz fwait
   140017774:	pop    rbp
   140017775:	repz hlt 
   140017777:	pop    rsi
   140017778:	push   rdx
   140017779:	call   FWORD PTR [rdi-0x55c029f6]
   14001777f:	lock xor DWORD PTR [rdx],0xffffff8a
   140017783:	push   rax
   140017784:	movabs eax,ds:0xb00a2a32845f96ce
   14001778d:	adc    BYTE PTR [rdi],bl
   14001778f:	cmp    DWORD PTR [rbx-0xf419391],edx
   140017795:	add    edx,DWORD PTR [rcx]
   140017797:	xchg   edx,eax
   140017798:	clc    
   140017799:	and    ebp,DWORD PTR [rcx-0x43]
   14001779c:	(bad)  
   14001779d:	add    al,0x2a
   14001779f:	mov    ch,BYTE PTR [rip+0xfffffffff62d1124]        # 0x1362e88c9
   1400177a5:	rex.WRXB
   1400177a6:	lods   al,BYTE PTR ds:[rsi]
   1400177a8:	or     dl,BYTE PTR [rdi-0x40]
   1400177ab:	and    al,BYTE PTR [rax]
   1400177ad:	(bad)  
   1400177ae:	lock pop rbx
   1400177b0:	push   rsi
   1400177b1:	(bad)  
   1400177b2:	push   rsi
   1400177b3:	ins    BYTE PTR es:[rdi],dx
   1400177b4:	movabs ds:0xea0c048c9f2b8208,al
   1400177bd:	rcl    BYTE PTR [rbp+0x3dd86943],0x5f
   1400177c4:	test   bl,dh
   1400177c6:	addr32 ds jg 0x140017796
   1400177ca:	(bad)  
   1400177cb:	fwait
   1400177cc:	outs   dx,DWORD PTR ds:[rsi]
   1400177cd:	or     eax,0xbb291f98
   1400177d2:	(bad)  
   1400177d3:	(bad)  
   1400177d4:	cmp    DWORD PTR [rax+0x65],esp
   1400177d7:	loope  0x140017815
   1400177d9:	retf   0x7e3e
   1400177dc:	push   rbx
   1400177dd:	jl     0x14001778d
   1400177df:	ror    dh,cl
   1400177e1:	sbb    cl,BYTE PTR [rcx]
   1400177e3:	jo     0x140017827
   1400177e5:	pop    rbx
   1400177e6:	jge    0x140017835
   1400177e8:	scas   eax,DWORD PTR es:[rdi]
   1400177e9:	cmp    al,0x49
   1400177eb:	vpunpcklqdq xmm15,xmm14,XMMWORD PTR [rsi]
   1400177ef:	mov    cl,0xe4
   1400177f1:	(bad)  
   1400177f2:	xchg   esp,eax
   1400177f3:	imul   ecx,DWORD PTR [rdx+rbp*4+0x6e],0xc54b2bb2
   1400177fb:	mov    ecx,0x391b91b3
   140017800:	mov    ch,dh
   140017802:	out    dx,eax
   140017803:	jl     0x140017807
   140017805:	sti    
   140017806:	lahf   
   140017807:	(bad)  
   140017808:	mov    ecx,eax
   14001780a:	or     DWORD PTR [rax+0x78000af0],edi
   140017810:	pop    rsi
   140017811:	add    al,0xe1
   140017813:	(bad)  
   140017814:	shl    edi,1
   140017816:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017817:	out    0x4f,al
   140017819:	(bad)  
   14001781a:	jg     0x140017886
   14001781c:	call   0x12ea29e01
   140017821:	jmp    0x1af718de3
   140017826:	iret   
   140017827:	mov    ch,0x27
   140017829:	add    BYTE PTR [rsp+rsi*4+0x4270925],al
   140017830:	xor    al,0x9c
   140017832:	lahf   
   140017833:	rex.RB
   140017834:	rex.W and spl,spl
   140017837:	sub    DWORD PTR [rax-0x4b7dfb99],edx
   14001783d:	ficomp WORD PTR [rdi]
   14001783f:	xchg   esi,eax
   140017840:	repz (bad) 
   140017842:	cmp    ebx,ebx
   140017844:	(bad)  
   140017845:	and    DWORD PTR [rcx+0x73],eax
   140017848:	in     eax,dx
   140017849:	movabs ds:0xd07c6e04330d7206,eax
   140017852:	mov    WORD PTR [rax],ds
   140017854:	xor    al,0xed
   140017856:	stos   DWORD PTR es:[rdi],eax
   140017857:	or     ecx,DWORD PTR [rsi-0x5]
   14001785a:	mov    cl,0x62
   14001785c:	or     al,bl
   14001785e:	cmp    al,0xf2
   140017860:	or     BYTE PTR [rsi-0x3b3b6366],bl
   140017866:	xchg   ebp,eax
   140017867:	mov    bh,0x63
   140017869:	js     0x1400178cf
   14001786b:	(bad)  
   14001786c:	push   rdx
   14001786d:	rex.WX pop rax
   14001786f:	pop    rbx
   140017870:	pushf  
   140017871:	rex.RX out dx,eax
   140017873:	int3   
   140017874:	sbb    dh,dh
   140017876:	rex.WR (bad) 
   140017878:	ret    
   140017879:	loopne 0x14001783f
   14001787b:	sbb    dl,ah
   14001787d:	ret    0xaa14
   140017880:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017881:	cmp    DWORD PTR [rbp-0x37],ebx
   140017884:	ja     0x140017899
   140017886:	(bad)  
   140017887:	je     0x14001782d
   140017889:	rex.XB test BYTE PTR [r10+0xb826a02],bl
   140017890:	jg     0x1400178eb
   140017892:	ficomp WORD PTR [rbx+0x2e]
   140017895:	out    0x25,eax
   140017897:	xor    dl,BYTE PTR [rdx-0x8]
   14001789a:	out    dx,al
   14001789b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001789c:	lock xchg ebx,eax
   14001789e:	rex.WRB out 0x42,al
   1400178a1:	clc    
   1400178a2:	and    ebp,ecx
   1400178a4:	rex.X pop rbp
   1400178a6:	clc    
   1400178a7:	mov    ecx,0x553011a8
   1400178ac:	(bad)  
   1400178ad:	xor    BYTE PTR [rsi-0x71],bl
   1400178b0:	jrcxz  0x14001783f
   1400178b2:	sub    DWORD PTR ds:[rbx+0x9],esi
   1400178b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400178b7:	add    BYTE PTR [rdx-0x3e8b38d8],ch
   1400178bd:	pshufw mm3,mm6,0x20
   1400178c1:	add    al,0x11
   1400178c3:	push   0x51
   1400178c5:	or     al,0x19
   1400178c7:	dec    BYTE PTR [rbx-0x7e]
   1400178ca:	adc    DWORD PTR [rbx+0x4fd23032],ebp
   1400178d0:	sbb    al,BYTE PTR [rcx+0x6590e25a]
   1400178d6:	dec    DWORD PTR [rcx+0x22]
   1400178d9:	xchg   ebx,eax
   1400178da:	pop    rdx
   1400178db:	cmp    cl,BYTE PTR [rip+0xffffffffa3b09871]        # 0xe3b21152
   1400178e1:	clc    
   1400178e2:	mov    gs,ebp
   1400178e4:	mov    ch,0x8d
   1400178e6:	cwde   
   1400178e7:	xchg   BYTE PTR [rsi+0x360b349d],al
   1400178ed:	rex.WX cmp cl,BYTE PTR [rcx]
   1400178f0:	loopne 0x140017951
   1400178f2:	cmp    DWORD PTR [rdx+0x6bdaafb3],edx
   1400178f8:	(bad)  
   1400178f9:	and    bl,ch
   1400178fb:	add    DWORD PTR [rsi+riz*1-0x61],0xc8a1fb0a
   140017903:	xchg   ebx,eax
   140017904:	fisttp QWORD PTR [rip+0x17432ab0]        # 0x15744a3ba
   14001790a:	jl     0x140017932
   14001790c:	push   rax
   14001790d:	xchg   ebx,eax
   14001790e:	pop    rbx
   14001790f:	loope  0x1400178a4
   140017911:	sub    DWORD PTR [rcx],eax
   140017913:	jrcxz  0x140017919
   140017915:	(bad)  
   140017916:	call   0xd636c1bc
   14001791b:	outs   dx,BYTE PTR ds:[rsi]
   14001791c:	(bad)  
   14001791d:	xor    dl,bl
   14001791f:	jl     0x14001795f
   140017921:	push   rbx
   140017922:	rex.RX xor r11b,BYTE PTR [rsi]
   140017925:	xor    ebx,ecx
   140017927:	pop    rcx
   140017928:	mov    edi,0x18103959
   14001792d:	or     BYTE PTR [rip+0x1c1ee6a4],bl        # 0x15c205fd7
   140017933:	mov    edx,0xe0376d0f
   140017938:	add    eax,0x469780a1
   14001793d:	add    eax,ebx
   14001793f:	jbe    0x14001797f
   140017941:	(bad)  
   140017942:	jo     0x1400179b5
   140017944:	(bad)  
   140017945:	movsxd ebp,esp
   140017947:	xchg   ecx,eax
   140017948:	xchg   DWORD PTR [rsi-0x5e3683cf],edi
   14001794e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001794f:	cmp    edi,ebp
   140017951:	cmp    ebp,DWORD PTR [rsi-0x60]
   140017954:	adc    BYTE PTR [rsi+0x508a99e5],al
   14001795a:	rex.RX sbb DWORD PTR [rsi-0x38],0xffffff82
   14001795f:	xlat   BYTE PTR ds:[rbx]
   140017960:	push   rbp
   140017961:	xor    eax,0x31200449
   140017966:	sub    ah,BYTE PTR [rsi+0x34]
   140017969:	rex.R in eax,dx
   14001796b:	add    DWORD PTR [rsi+0x2c0ad9d8],eax
   140017971:	mov    esi,0x64fdaabf
   140017976:	(bad)  
   140017977:	(bad)  
   140017978:	or     al,0xeb
   14001797a:	imul   edx,DWORD PTR [rdi-0x2],0x72f524a6
   140017981:	push   0xffffffffffffffa6
   140017983:	jge    0x140017933
   140017985:	(bad)  
   140017986:	pop    rsi
   140017987:	loope  0x140017973
   140017989:	cli    
   14001798a:	push   rbx
   14001798b:	pavgb  mm5,QWORD PTR [rcx+0x5d4c55a5]
   140017992:	jnp    0x14001799b
   140017994:	xchg   BYTE PTR [rsi-0x12],dh
   140017997:	rex.RX xchg ebx,eax
   140017999:	sbb    ch,BYTE PTR [rsi+rbp*1+0x6667a34c]
   1400179a0:	adc    al,0xbb
   1400179a2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400179a3:	rex.RX xor DWORD PTR [rax],r15d
   1400179a6:	cmp    DWORD PTR [rsi+0x71126e6a],eax
   1400179ac:	jns    0x1400179cc
   1400179ae:	mov    ah,0x2e
   1400179b0:	sub    edi,ecx
   1400179b2:	(bad)  
   1400179b3:	mov    ebp,0x24221af5
   1400179b8:	adc    eax,0x284f8159
   1400179bd:	add    al,0x5f
   1400179bf:	js     0x140017941
   1400179c1:	adc    bl,dh
   1400179c3:	mov    dl,0x4d
   1400179c5:	add    al,0x78
   1400179c7:	xchg   edx,eax
   1400179c8:	rex.WR push rsp
   1400179ca:	push   0xffffffffc96f176f
   1400179cf:	sub    al,BYTE PTR [rcx]
   1400179d1:	enter  0x3705,0xaa
   1400179d5:	rex.WX jae 0x1400179c7
   1400179d8:	jle    0x140017a12
   1400179da:	mov    cl,0x16
   1400179dc:	mov    ah,0x4b
   1400179de:	mov    BYTE PTR [rbp+0xe],ah
   1400179e1:	rex.X fnstcw WORD PTR [rdi-0x75]
   1400179e5:	jrcxz  0x140017982
   1400179e7:	or     esp,DWORD PTR [rcx+0x2]
   1400179ea:	sub    dh,ch
   1400179ec:	inc    BYTE PTR [rbp+0x2]
   1400179ef:	rex.WRXB and BYTE PTR [r15+0x12],r9b
   1400179f3:	mov    ch,BYTE PTR [rdx+0x4b30b20c]
   1400179f9:	fnstenv [rdx]
   1400179fb:	test   DWORD PTR [rdi+rdi*1+0x337edd60],ebx
   140017a02:	mov    ch,BYTE PTR [rax+0x27]
   140017a05:	(bad)  
   140017a06:	in     eax,0xb0
   140017a08:	sbb    eax,eax
   140017a0a:	and    DWORD PTR [rip+0x4189c801],0x9acf5582        # 0x1818b4215
   140017a14:	add    eax,0x80c5510f
   140017a19:	mov    dl,0x32
   140017a1b:	push   0xffffffffa094c207
   140017a20:	xor    eax,0xfe1f0114
   140017a25:	ret    0x229a
   140017a28:	push   rdi
   140017a29:	mov    ds,edx
   140017a2b:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017a2d:	test   DWORD PTR [rdi],eax
   140017a2f:	leave  
   140017a30:	or     al,0x4a
   140017a32:	add    eax,0x738a67f9
   140017a37:	mov    edi,DWORD PTR [rcx]
   140017a39:	movabs ds:0xca9ec0028173eb02,eax
   140017a42:	push   rdx
   140017a43:	fs sti 
   140017a45:	sbb    al,BYTE PTR [rsi+0x1b8bffcc]
   140017a4b:	and    bh,dh
   140017a4d:	adc    esp,ebx
   140017a4f:	test   ecx,esi
   140017a51:	add    BYTE PTR [rbx-0x6ad1d6d5],ch
   140017a57:	(bad)  
   140017a58:	out    dx,al
   140017a59:	push   rdi
   140017a5a:	jno    0x140017a96
   140017a5c:	mov    ah,0x9b
   140017a5e:	ss (bad) 
   140017a60:	jle    0x140017aa1
   140017a62:	rex.RX
   140017a63:	data16 rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017a66:	pop    rsi
   140017a67:	sub    BYTE PTR [rdx],cl
   140017a69:	js     0x140017ad4
   140017a6b:	adc    eax,0x32bcf000
   140017a70:	or     bh,al
   140017a72:	lahf   
   140017a73:	jl     0x140017a71
   140017a75:	cmp    DWORD PTR [rsi-0x33],ecx
   140017a78:	out    0x6,eax
   140017a7a:	jbe    0x140017a6b
   140017a7c:	fst    QWORD PTR [rdi]
   140017a7e:	(bad)  
   140017a7f:	cli    
   140017a80:	cmp    dh,BYTE PTR [rax+0x16c8f325]
   140017a86:	sbb    BYTE PTR [rsi+0x5f96e163],dl
   140017a8c:	jb     0x140017a88
   140017a8e:	(bad)  [rcx]
   140017a90:	(bad)  
   140017a91:	fist   DWORD PTR [rdx]
   140017a93:	fs rex.WRX je 0x140017a73
   140017a97:	mov    al,BYTE PTR [rdi]
   140017a99:	pop    rdi
   140017a9a:	int    0x28
   140017a9c:	sub    BYTE PTR [rbx+0x4509911f],bl
   140017aa2:	push   rsi
   140017aa3:	jl     0x140017aeb
   140017aa5:	jo     0x140017a6c
   140017aa7:	pop    rsp
   140017aa8:	pop    rsp
   140017aa9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017aaa:	mov    ecx,0x85620005
   140017aaf:	fsubr  DWORD PTR [rax+riz*2-0xb]
   140017ab3:	outs   dx,DWORD PTR ds:[rsi]
   140017ab4:	mov    esi,0x337c781
   140017ab9:	(bad)  
   140017aba:	scas   al,BYTE PTR es:[rdi]
   140017abb:	jns    0x140017ae0
   140017abd:	xchg   BYTE PTR [rdi],al
   140017abf:	ja     0x140017ac2
   140017ac1:	sub    DWORD PTR [rcx+0x79],esp
   140017ac4:	imul   ecx,DWORD PTR [rsi],0xec71ecd5
   140017aca:	(bad)  
   140017acb:	(bad)  
   140017acc:	ret    
   140017acd:	shl    ah,1
   140017acf:	test   al,0x32
   140017ad1:	(bad)  
   140017ad2:	mov    bl,0xa0
   140017ad4:	mov    ch,0x25
   140017ad6:	and    BYTE PTR [rbp-0x17b775d5],ch
   140017adc:	adc    BYTE PTR [rbx+0x7235110a],ah
   140017ae2:	movsxd ecx,DWORD PTR [rdi-0x3ca57b78]
   140017ae8:	jge    0x140017a88
   140017aea:	jrcxz  0x140017b1b
   140017aec:	rex.RX sbb r9b,BYTE PTR [rdx+0x6d8b9180]
   140017af3:	rex.WR
   140017af4:	sbb    BYTE PTR [rcx],dl
   140017af7:	push   rcx
   140017af8:	sub    al,0x33
   140017afa:	sbb    DWORD PTR [rcx-0x79],edi
   140017afd:	sub    eax,0x1ac5bead
   140017b02:	mov    ch,0xd3
   140017b04:	outs   dx,BYTE PTR ds:[rsi]
   140017b05:	rex.WRB enter 0x5a83,0xe2
   140017b0a:	push   rax
   140017b0b:	in     al,0xf0
   140017b0d:	and    ebx,DWORD PTR [rbx-0x1]
   140017b10:	mov    al,0x1d
   140017b12:	(bad)  
   140017b13:	rex
   140017b14:	rex
   140017b15:	rex.RXB
   140017b16:	adc    r8b,BYTE PTR [r14]
   140017b19:	sti    
   140017b1a:	and    eax,0xfdf5079c
   140017b1f:	movabs ds:0x9efb8707fcc28193,eax
   140017b28:	neg    DWORD PTR [rdi]
   140017b2a:	or     eax,0x14f2b0cd
   140017b2f:	jb     0x140017ac0
   140017b31:	jo     0x140017b25
   140017b33:	iret   
   140017b34:	cs (bad) 
   140017b36:	(bad)  
   140017b37:	adc    DWORD PTR [rbx+rbp*8+0x16bc110],edi
   140017b3e:	jb     0x140017acb
   140017b40:	xor    BYTE PTR [rbx+0x348d85f6],dh
   140017b46:	pop    rcx
   140017b47:	cs pop rsp
   140017b49:	rex.X sti 
   140017b4b:	fadd   st(4),st
   140017b4d:	fmulp  st(5),st
   140017b4f:	xchg   BYTE PTR [rdi+0x4],cl
   140017b52:	jb     0x140017aff
   140017b54:	lahf   
   140017b55:	mov    ch,0x2
   140017b57:	imul   ecx,eax,0x4048cb7
   140017b5d:	(bad)  
   140017b5e:	cld    
   140017b5f:	mov    ah,0xf2
   140017b61:	rex.WR pop rbp
   140017b63:	add    dh,cl
   140017b65:	xor    bh,bl
   140017b67:	addr32 mov edx,0x25bc935c
   140017b6d:	in     al,0x35
   140017b6f:	or     al,0xf4
   140017b71:	xor    eax,0xe741c012
   140017b76:	mov    ch,0xb9
   140017b78:	or     eax,0xcad3c470
   140017b7d:	rex.WRXB
   140017b7e:	lock rex.WX sub dil,BYTE PTR [rbx-0x3de211e2]
   140017b86:	out    0x89,al
   140017b88:	(bad)  
   140017b89:	(bad)  
   140017b8a:	and    eax,0x5316000f
   140017b8f:	(bad)  
   140017b90:	or     esp,DWORD PTR [rdx]
   140017b92:	add    ebx,DWORD PTR [rdi+0x7a]
   140017b95:	add    eax,0x4a79db60
   140017b9a:	mov    edi,fs
   140017b9c:	rex.WRXB lea r13,[r15]
   140017b9f:	lea    edi,[rsi]
   140017ba1:	cld    
   140017ba2:	in     eax,dx
   140017ba3:	iret   
   140017ba4:	in     al,dx
   140017ba5:	mov    ebp,0x9ed9cafc
   140017baa:	rex.WRX iretq 
   140017bac:	int    0x8
   140017bae:	movabs eax,ds:0x3833f0991f928017
   140017bb7:	push   rdi
   140017bb8:	sti    
   140017bb9:	cwde   
   140017bba:	push   rcx
   140017bbb:	retf   
   140017bbc:	add    BYTE PTR [rax],bl
   140017bbe:	fsub   st(2),st
   140017bc0:	movabs al,ds:0x6e8ea22a8205120
   140017bc9:	rex.WRB
   140017bca:	add    DWORD PTR ss:[rbp-0x40],esp
   140017bce:	sbb    BYTE PTR [rax],ch
   140017bd0:	adc    eax,0x4d2ec173
   140017bd5:	ret    0x8140
   140017bd8:	sbb    DWORD PTR [rbx+rbp*1],ebx
   140017bdb:	(bad)  
   140017bdc:	int    0x55
   140017bde:	sub    al,0x3e
   140017be0:	(bad)  
   140017be1:	sub    eax,0xac5e813c
   140017be6:	pop    rbp
   140017be7:	sti    
   140017be8:	rex.RX or al,0xed
   140017beb:	sbb    BYTE PTR [rdx+0x4a],al
   140017bee:	or     DWORD PTR [rbx],ebp
   140017bf0:	retf   
   140017bf1:	repz or BYTE PTR [rbx],dh
   140017bf4:	(bad)  
   140017bf5:	xor    DWORD PTR [rdx],esi
   140017bf7:	imul   ebp,DWORD PTR [rbx],0xfffffff9
   140017bfa:	rex.WR and BYTE PTR [rsi],r13b
   140017bfd:	iret   
   140017bfe:	and    DWORD PTR [rsi+rbp*1+0x2baacd02],ebp
   140017c05:	pushf  
   140017c06:	(bad)  
   140017c07:	or     BYTE PTR [rax],0xb1
   140017c0a:	mul    BYTE PTR [rdx]
   140017c0c:	cld    
   140017c0d:	add    DWORD PTR [rip+0x2e24d425],edx        # 0x16e265038
   140017c13:	rex.RX
   140017c14:	rex.WRB and r9b,BYTE PTR [r9+rdx*1+0x5a]
   140017c19:	pop    rbx
   140017c1a:	(bad)  
   140017c1b:	sub    BYTE PTR [rax],cl
   140017c1d:	cmp    DWORD PTR [rdx+0x50],eax
   140017c20:	jg     0x140017bb3
   140017c22:	movabs ds:0x1081ee5f7c787941,al
   140017c2b:	cmp    BYTE PTR [rax],bh
   140017c2d:	mov    cl,0x46
   140017c2f:	enter  0x8311,0x12
   140017c33:	push   0x1b
   140017c35:	fld    TBYTE PTR [rdi]
   140017c37:	rex.X (bad) 
   140017c39:	jge    0x140017cba
   140017c3b:	retf   
   140017c3c:	sti    
   140017c3d:	xchg   edi,eax
   140017c3e:	iret   
   140017c3f:	(bad)
   140017c42:	(bad)  
   140017c43:	or     BYTE PTR [rsi],0xff
   140017c46:	jae    0x140017bec
   140017c48:	rcl    BYTE PTR [rsi],0x0
   140017c4b:	mov    ch,0x72
   140017c4d:	pop    rsi
   140017c4e:	rex.WXB cmc 
   140017c50:	xor    eax,0x93dfd102
   140017c55:	and    DWORD PTR [rdi-0x1b3db7d3],eax
   140017c5b:	push   rdi
   140017c5c:	scas   eax,DWORD PTR es:[rdi]
   140017c5d:	fist   WORD PTR [rax+0x6009af89]
   140017c63:	or     al,al
   140017c65:	div    BYTE PTR [rcx]
   140017c67:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017c68:	in     al,dx
   140017c6a:	repz (bad) 
   140017c6c:	sub    edx,DWORD PTR [rcx]
   140017c6e:	pop    rax
   140017c6f:	rex.W push rax
   140017c71:	(bad)  
   140017c72:	push   0xbceffcb
   140017c77:	cmp    al,ah
   140017c79:	sub    ebp,DWORD PTR [rbx+rdi*1]
   140017c7c:	or     al,0x76
   140017c7e:	sub    esp,esp
   140017c80:	mov    bh,0x34
   140017c82:	je     0x140017c7f
   140017c84:	pop    rdx
   140017c85:	xchg   ebp,eax
   140017c86:	and    DWORD PTR [r14-0x3b],ebp
   140017c8a:	call   FWORD PTR [rax+rbp*1+0x4]
   140017c8e:	stc    
   140017c8f:	(bad)  
   140017c90:	and    eax,0x476d5778
   140017c95:	add    esi,DWORD PTR [rsi]
   140017c97:	(bad)  
   140017c98:	cwde   
   140017c99:	mov    dh,BYTE PTR [rsi+0x76]
   140017c9c:	in     al,0xd8
   140017c9e:	shr    BYTE PTR [rsi],0xb4
   140017ca1:	mov    esp,0x13bf3b13
   140017ca6:	popf   
   140017ca7:	jp     0x140017cc8
   140017ca9:	xor    eax,0x18c3c778
   140017cae:	cli    
   140017caf:	fsub   DWORD PTR [rdx+rdi*2]
   140017cb2:	ss icebp 
   140017cb4:	cmp    eax,0x9f2f01b8
   140017cb9:	add    al,BYTE PTR [rax]
   140017cbb:	sahf   
   140017cbc:	(bad)  
   140017cbd:	rex.B js 0x140017cb2
   140017cc0:	icebp  
   140017cc1:	rex.RXB (bad) 
   140017cc3:	in     eax,dx
   140017cc4:	sbb    eax,0xff7f79dc
   140017cc9:	(bad)  
   140017cca:	loope  0x140017cb7
   140017ccc:	(bad)  
   140017ccd:	mov    WORD PTR [rdi],es
   140017ccf:	adc    edx,DWORD PTR [rcx]
   140017cd1:	sbb    dh,BYTE PTR [rsi]
   140017cd3:	lea    ebp,[rsi]
   140017cd5:	add    edx,DWORD PTR [rbp-0x55]
   140017cd8:	movsxd esp,DWORD PTR [rbp+0x21]
   140017cdb:	(bad)  
   140017cdc:	adc    al,0x7
   140017cde:	rex.WXB ins BYTE PTR es:[rdi],dx
   140017ce0:	sub    esp,ebp
   140017ce2:	clc    
   140017ce3:	push   0xffffffffce22076a
   140017ce8:	mov    esi,0xaededbf
   140017ced:	xlat   BYTE PTR ds:[rbx]
   140017cee:	rex.X jg 0x140017cd5
   140017cf1:	movabs ds:0x9841dd50008bd064,eax
   140017cfa:	lahf   
   140017cfb:	shl    ah,0x13
   140017cfe:	pavgb  mm1,QWORD PTR [rcx+0x5748bdbe]
   140017d05:	fisttp WORD PTR [rdx+0x481dfee1]
   140017d0b:	sub    DWORD PTR [rcx+0x69],esp
   140017d0e:	jns    0x140017d11
   140017d10:	xor    al,0x3b
   140017d12:	xchg   BYTE PTR [rcx-0x66e71c67],dl
   140017d18:	sbb    al,BYTE PTR [rbp-0x31]
   140017d1b:	int3   
   140017d1c:	imul   eax,esp,0x558459a5
   140017d22:	jmp    0xdd2dc512
   140017d27:	jnp    0x140017cd3
   140017d29:	add    BYTE PTR [rcx-0xe],cl
   140017d2c:	and    DWORD PTR [rax-0x76],ebp
   140017d2f:	outs   dx,DWORD PTR ds:[rsi]
   140017d30:	lock data16 sahf 
   140017d33:	push   rcx
   140017d34:	stos   DWORD PTR es:[rdi],eax
   140017d35:	std    
   140017d36:	retf   0x1f02
   140017d39:	add    cl,BYTE PTR [rdx]
   140017d3b:	mov    ebp,DWORD PTR [rip+0xffffffff92467c15]        # 0xd247f956
   140017d41:	cdq    
   140017d42:	(bad)  
   140017d43:	out    dx,eax
   140017d44:	rex.WB cmp al,0x1a
   140017d47:	fisttp DWORD PTR [rdi-0x40b24dd0]
   140017d4d:	(bad)  
   140017d4f:	stos   BYTE PTR es:[rdi],al
   140017d50:	rex.WR clc 
   140017d52:	rex.RB push r8
   140017d54:	lods   al,BYTE PTR ds:[rsi]
   140017d55:	ror    BYTE PTR [rdi],cl
   140017d57:	and    al,0x9
   140017d59:	(bad)  
   140017d5a:	xor    eax,ebx
   140017d5c:	mov    esi,0x5070a3b9
   140017d61:	mov    edi,0x92042f3f
   140017d66:	adc    DWORD PTR [rbp+rdx*8-0x26f2bbeb],eax
   140017d6d:	add    eax,0xad5b0143
   140017d72:	(bad)  
   140017d73:	add    eax,0xf5ad1d27
   140017d78:	push   rdi
   140017d79:	pop    rcx
   140017d7a:	sub    BYTE PTR [rdx+rcx*1+0x3f],dl
   140017d7e:	adc    eax,eax
   140017d80:	xchg   ecx,eax
   140017d81:	std    
   140017d82:	jl     0x140017db2
   140017d84:	cld    
   140017d85:	(bad)  
   140017d86:	movsxd esp,DWORD PTR [rax+0xff91b0a]
   140017d8c:	sub    cl,BYTE PTR [rsi+riz*8]
   140017d8f:	retf   0x5ae9
   140017d92:	sub    DWORD PTR [rsi+rdx*8+0x11835cbc],0xffffffc8
   140017d9a:	rex.X (bad) 
   140017d9c:	out    0x2d,eax
   140017d9e:	cld    
   140017d9f:	jg     0x140017df4
   140017da1:	sbb    ah,BYTE PTR [rsi+0x6e]
   140017da4:	cdq    
   140017da5:	xchg   ecx,eax
   140017da6:	rex.WRB or r13b,BYTE PTR [r11+0x563397c0]
   140017dad:	pop    rdi
   140017dae:	xchg   esp,eax
   140017daf:	jge    0x140017db7
   140017db1:	sbb    DWORD PTR [rsi+0xac9c624],ebx
   140017db7:	test   esp,esp
   140017db9:	jnp    0x140017e1e
   140017dbb:	stc    
   140017dbc:	jae    0x140017df9
   140017dbe:	jl     0x140017df1
   140017dc0:	push   rax
   140017dc1:	rex.R sub eax,0x88d01387
   140017dc7:	adc    BYTE PTR [rbx-0x790e857f],0x78
   140017dce:	mov    bh,0x39
   140017dd0:	mov    ecx,0xf78105fa
   140017dd5:	pop    rdi
   140017dd6:	rex.WRX imul r11,QWORD PTR [rdi-0x3],0x14
   140017ddb:	test   BYTE PTR [rbp+0x3207be2],0x5f
   140017de2:	pop    rsi
   140017de3:	add    eax,0x9c9f3c00
   140017de8:	xor    DWORD PTR [rsi*2-0x1d3b3714],0xd4fe9d4
   140017df3:	sbb    eax,0x3d0aa4b8
   140017df8:	mov    ebp,0x62390337
   140017dfd:	push   rbx
   140017dfe:	sub    ebx,esp
   140017e00:	rex.WRXB (bad) 
   140017e02:	std    
   140017e03:	or     ebp,ebp
   140017e05:	lahf   
   140017e06:	cmp    bh,dl
   140017e08:	ror    BYTE PTR [rbx-0x17],1
   140017e0b:	test   BYTE PTR [rax],bh
   140017e0d:	nop
   140017e0e:	or     DWORD PTR [rdx-0x4],ecx
   140017e11:	add    DWORD PTR [rax+0x3065d9c4],ecx
   140017e17:	(bad)  
   140017e18:	leave  
   140017e19:	(bad)  
   140017e1a:	and    edx,DWORD PTR [rbx-0x2cacfc60]
   140017e20:	and    DWORD PTR [rdx-0x2b],ecx
   140017e23:	fucomi st,st(0)
   140017e25:	movsxd edi,DWORD PTR [rax]
   140017e27:	stc    
   140017e28:	hlt    
   140017e29:	and    edi,DWORD PTR [rax+0x7a]
   140017e2c:	fcomip st,st(5)
   140017e2e:	call   0x14c3c7c8f
   140017e33:	div    edi
   140017e35:	movabs eax,ds:0x27b3401797161269
   140017e3e:	xor    BYTE PTR [rdx],dh
   140017e40:	xor    eax,DWORD PTR [rsi-0x76ce361f]
   140017e46:	cmc    
   140017e47:	(bad)  
   140017e48:	int    0xc8
   140017e4a:	(bad)  
   140017e4b:	(bad)  
   140017e4c:	fwait
   140017e4d:	sub    ecx,DWORD PTR [rax]
   140017e4f:	sbb    rsi,QWORD PTR [r15+0x10]
   140017e53:	stos   DWORD PTR es:[rdi],eax
   140017e54:	lock or ebx,ebx
   140017e57:	pop    rdi
   140017e58:	or     bh,BYTE PTR [rdi-0x398b07cb]
   140017e5e:	pop    rdi
   140017e5f:	out    0x7c,eax
   140017e61:	scas   al,BYTE PTR es:[rdi]
   140017e62:	mov    esi,0x51788d23
   140017e67:	fwait
   140017e68:	icebp  
   140017e69:	xlat   BYTE PTR ds:[rbx]
   140017e6a:	iret   
   140017e6b:	retf   0x1d46
   140017e6e:	outs   dx,BYTE PTR ds:[rsi]
   140017e6f:	icebp  
   140017e70:	cmc    
   140017e71:	jmp    QWORD PTR [rax-0x557dcafb]
   140017e77:	(bad)
   140017e7a:	xor    dh,BYTE PTR [rax]
   140017e7c:	push   rdi
   140017e7d:	out    dx,al
   140017e7e:	add    eax,0xdf647e11
   140017e83:	pop    rdi
   140017e84:	movabs al,ds:0xbdacf040dd92f07a
   140017e8d:	mov    BYTE PTR [rdx],ah
   140017e8f:	jmp    0x140017ee0
   140017e91:	xchg   ebx,eax
   140017e92:	jle    0x140017e38
   140017e94:	rol    bh,1
   140017e96:	pop    rsp
   140017e97:	or     eax,0xbd2a23f1
   140017e9c:	jle    0x140017e69
   140017e9e:	(bad)  
   140017e9f:	jo     0x140017ed8
   140017ea1:	and    ah,BYTE PTR [rcx+riz*8+0x34]
   140017ea5:	(bad)  
   140017ea6:	(bad)  
   140017ea7:	clc    
   140017ea8:	or     edx,DWORD PTR [rsi+rdx*8]
   140017eab:	(bad)  
   140017eac:	(bad)  
   140017ead:	repz sbb eax,0x5067f809
   140017eb3:	or     eax,0x5126bc59
   140017eb8:	add    cl,BYTE PTR [rsi-0x17]
   140017ebb:	mov    edx,0xd9a8e05b
   140017ec0:	out    0x8a,eax
   140017ec2:	xor    edi,edx
   140017ec4:	xor    cl,al
   140017ec6:	xor    bh,BYTE PTR [rax]
   140017ec8:	test   eax,0x8ddc339f
   140017ecd:	xchg   edx,eax
   140017ece:	push   rsi
   140017ecf:	ins    BYTE PTR es:[rdi],dx
   140017ed0:	test   BYTE PTR [rdx-0x4a6ec2e8],bl
   140017ed6:	cmp    DWORD PTR [rbx],ecx
   140017ed8:	or     DWORD PTR [rdi+0xd5ad0c3],ecx
   140017ede:	adc    edx,edi
   140017ee0:	call   0x149e580de
   140017ee5:	rex.B leave 
   140017ee7:	cvtps2pi mm2,QWORD PTR [rdi]
   140017eea:	xchg   ecx,eax
   140017eeb:	xor    eax,DWORD PTR [rsi]
   140017eed:	ins    DWORD PTR es:[rdi],dx
   140017eee:	out    0xb9,al
   140017ef0:	ins    DWORD PTR es:[rdi],dx
   140017ef1:	xchg   edi,eax
   140017ef2:	jns    0x140017f51
   140017ef4:	pop    rsp
   140017ef5:	push   rbx
   140017ef6:	jle    0x140017e97
   140017ef8:	scas   eax,DWORD PTR es:[rdi]
   140017ef9:	(bad)  
   140017efa:	neg    dl
   140017efc:	fist   WORD PTR [rdx-0x18]
   140017eff:	rex.RB fidivr DWORD PTR [r8-0x7cc178f9]
   140017f06:	out    dx,eax
   140017f07:	movabs eax,ds:0xe5b84bcbbfce8840
   140017f10:	push   rbp
   140017f11:	rex.WRX (bad) 
   140017f13:	(bad)  
   140017f14:	push   rbp
   140017f15:	cli    
   140017f16:	xlat   BYTE PTR ds:[rbx]
   140017f17:	sar    DWORD PTR [rdi-0x4216462],1
   140017f1d:	ret    
   140017f1e:	out    dx,eax
   140017f1f:	sbb    ebx,edx
   140017f21:	jg     0x140017eec
   140017f23:	mov    edi,0xab2e10a1
   140017f28:	cmp    BYTE PTR [rcx],ah
   140017f2a:	xor    al,dl
   140017f2c:	and    eax,0x240f29d9
   140017f31:	(bad)  
   140017f32:	lods   al,BYTE PTR ds:[rsi]
   140017f33:	(bad)  
   140017f34:	and    esi,DWORD PTR [rdx-0xe]
   140017f37:	or     al,0x2a
   140017f39:	or     DWORD PTR [rip+0x40236826],eax        # 0x18024e765
   140017f3f:	and    DWORD PTR [rsi],edx
   140017f41:	cmp    DWORD PTR [rdi],edi
   140017f43:	jbe    0x140017ecb
   140017f45:	mov    al,0xff
   140017f47:	data16 std 
   140017f49:	sub    DWORD PTR [rcx-0x1dca75e2],ebp
   140017f4f:	(bad)  
   140017f50:	sbb    bh,BYTE PTR [rdx-0x38fc8071]
   140017f56:	(bad)  
   140017f57:	(bad)  
   140017f58:	xor    BYTE PTR [rsi-0x1b],bh
   140017f5b:	ins    DWORD PTR es:[rdi],dx
   140017f5c:	fdiv   DWORD PTR [rcx-0x20]
   140017f5f:	rex.WX or al,0x56
   140017f62:	add    ebx,ebp
   140017f64:	fld    QWORD PTR [rbp+rax*4-0x165bba1b]
   140017f6b:	xor    DWORD PTR [rsp+rcx*8-0x3b3738e3],ecx
   140017f72:	sub    BYTE PTR [rdx-0x59],bh
   140017f75:	rex.WRX and BYTE PTR [rsi],r13b
   140017f78:	(bad)  
   140017f79:	and    BYTE PTR [rsi],ch
   140017f7b:	iret   
   140017f7c:	add    DWORD PTR [rbx],ebx
   140017f7e:	sub    esp,DWORD PTR [rax-0x4025e4c]
   140017f84:	lods   al,BYTE PTR ds:[rsi]
   140017f85:	js     0x140017f4e
   140017f87:	rex.X jge 0x140017fcb
   140017f8a:	jrcxz  0x140017f88
   140017f8c:	lods   al,BYTE PTR ds:[rsi]
   140017f8d:	cmp    eax,0xf58ad0fd
   140017f92:	cmp    ebp,esp
   140017f94:	(bad)  
   140017f95:	in     eax,dx
   140017f96:	scas   al,BYTE PTR es:[rdi]
   140017f97:	xchg   esi,eax
   140017f98:	pop    rbx
   140017f99:	es mov edi,0xce6f4b7
   140017f9f:	in     eax,0x9
   140017fa1:	enter  0xfff1,0x42
   140017fa5:	clc    
   140017fa6:	movabs ds:0x908c89904209bf09,eax
   140017faf:	jge    0x140018029
   140017fb1:	rex.WXB (bad) 
   140017fb3:	or     dl,BYTE PTR [rcx+0x3d84dd5a]
   140017fb9:	(bad)  
   140017fba:	mov    bh,0xa5
   140017fbc:	(bad)  
   140017fbd:	addr32 in eax,0xcc
   140017fc0:	(bad)  
   140017fc1:	and    edx,DWORD PTR [rbp+rbp*2+0x65]
   140017fc5:	push   rbp
   140017fc6:	(bad)  
   140017fc7:	mov    ch,0xf8
   140017fc9:	jp     0x140017f68
   140017fcb:	push   rbp
   140017fcc:	mov    WORD PTR [rdx],ds
   140017fce:	(bad)  
   140017fcf:	push   rsp
   140017fd0:	push   rdi
   140017fd1:	and    DWORD PTR [rsi],eax
   140017fd3:	sub    DWORD PTR [rbx],esp
   140017fd5:	ss (bad) 
   140017fd7:	movabs al,ds:0xfa419fe6504008a
   140017fe0:	adc    DWORD PTR [rax+rdi*4-0x5f],0x12098aca
   140017fe8:	adc    eax,0xa1de3a88
   140017fed:	sub    DWORD PTR [rax],edx
   140017fef:	(bad)  
   140017ff0:	call   0xece4d36e
   140017ff5:	and    eax,0x47b5bd5
   140017ffa:	xchg   esi,eax
   140017ffb:	fwait
   140017ffc:	adc    eax,0xc2a4a500
   140018001:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018002:	xchg   edx,eax
   140018003:	stos   BYTE PTR es:[rdi],al
   140018004:	stc    
   140018005:	(bad)  
   140018006:	call   0x14316c230
   14001800b:	push   si
   14001800d:	(bad)  
   14001800e:	xor    BYTE PTR [rbx-0x52b09968],bh
   140018014:	ror    cl,1
   140018016:	mov    cl,0x45
   140018018:	cmp    bh,dl
   14001801a:	in     al,dx
   14001801b:	pop    rsp
   14001801c:	ja     0x14001808a
   14001801e:	jl     0x140018059
   140018020:	rex.WRB lods al,BYTE PTR ds:[rsi]
   140018022:	xor    eax,0x1a36561
   140018027:	div    DWORD PTR [rdx]
   140018029:	ja     0x140018071
   14001802b:	push   0xc
   14001802d:	pop    rbp
   14001802e:	fisttp QWORD PTR [rdi-0x69]
   140018031:	sbb    al,0xee
   140018033:	rcl    BYTE PTR [rbp-0xd08bc05],1
   140018039:	fst    QWORD PTR [rcx-0x2759130a]
   14001803f:	loope  0x140018047
   140018041:	pop    rax
   140018042:	fldenv [rsp+rbp*2+0x36]
   140018046:	mov    WORD PTR [rsi+0x17705d61],fs
   14001804c:	mov    dl,0xf8
   14001804e:	lods   eax,DWORD PTR ds:[rsi]
   14001804f:	es or  eax,0xf968625
   140018055:	rex.WXB adc bl,BYTE PTR [r10+0x62]
   140018059:	rex.X
   14001805a:	rex.WX push rdx
   14001805c:	(bad)  
   14001805d:	outs   dx,BYTE PTR ds:[rsi]
   14001805e:	xlat   BYTE PTR ds:[rbx]
   14001805f:	popf   
   140018060:	push   rdi
   140018061:	adc    DWORD PTR [rcx+rsi*4+0x1834f5b7],0xffffff82
   140018069:	jle    0x14001807d
   14001806b:	add    ecx,DWORD PTR [rbp-0x3e]
   14001806e:	jmp    0x13fe343ee
   140018073:	out    0x3f,al
   140018075:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018077:	movsxd edx,DWORD PTR [rax+0x5d7df6]
   14001807d:	lods   al,BYTE PTR ds:[rsi]
   14001807e:	xor    eax,0xfedce73b
   140018083:	jbe    0x14001809a
   140018085:	sub    BYTE PTR [rbp-0x5e],0x8
   140018089:	ins    BYTE PTR es:[rdi],dx
   14001808a:	fsub   DWORD PTR [rbp+0x4a14617]
   140018090:	cs mov ebx,0xaf2bb6f9
   140018096:	mov    eax,0xd77fe6e1
   14001809b:	rcr    ebx,cl
   14001809d:	sti    
   14001809e:	(bad)  
   14001809f:	adc    DWORD PTR cs:[rdx+0x1c00fa35],eax
   1400180a6:	loop   0x1400180db
   1400180a8:	and    al,0x4f
   1400180aa:	mov    esi,0x8daeeb72
   1400180af:	(bad)  
   1400180b0:	adc    dl,BYTE PTR [rax-0x5f]
   1400180b3:	add    DWORD PTR [rbx],edi
   1400180b5:	icebp  
   1400180b6:	xchg   edi,eax
   1400180b7:	or     edi,DWORD PTR [rax+0x24]
   1400180ba:	icebp  
   1400180bb:	test   al,0x91
   1400180bd:	mov    esi,0x98f50a01
   1400180c2:	adc    ebp,DWORD PTR [rax-0x6233df16]
   1400180c8:	(bad)  
   1400180c9:	retf   0x5fc3
   1400180cc:	(bad)  
   1400180cd:	mov    bl,0xf5
   1400180cf:	and    dh,ah
   1400180d1:	scas   eax,DWORD PTR es:[rdi]
   1400180d2:	jge    0x1400180f7
   1400180d4:	jbe    0x140018065
   1400180d6:	in     al,dx
   1400180d7:	rex.XB pop r15
   1400180d9:	adc    eax,0xc5d1bab0
   1400180de:	cld    
   1400180df:	retf   0x3022
   1400180e2:	xor    ecx,DWORD PTR [rsi+0x3147d39d]
   1400180e8:	xor    dh,BYTE PTR [rbx+0x2]
   1400180eb:	jge    0x140018080
   1400180ed:	(bad)  
   1400180ee:	push   rax
   1400180ef:	(bad)  
   1400180f0:	rex.WR retf 
   1400180f2:	and    bl,BYTE PTR [rsi-0x4b5f3415]
   1400180f8:	add    eax,0xf920aa0d
   1400180fe:	hlt    
   1400180ff:	xor    eax,0x26534d27
   140018104:	pop    rcx
   140018105:	mov    ebx,0x543df48f
   14001810a:	lock test eax,0x4ffafd80
   140018110:	push   rsp
   140018111:	add    eax,0xa5f27d26
   140018116:	cdq    
   140018117:	fs (bad) 
   140018119:	in     al,0xa
   14001811b:	mov    bpl,0xfc
   14001811e:	xchg   ecx,eax
   14001811f:	add    dl,BYTE PTR [rax-0x3f429e28]
   140018125:	jae    0x14001816c
   140018127:	pcmpgtd mm7,mm1
   14001812a:	mov    esp,cs
   14001812c:	and    esi,ebx
   14001812e:	iret   
   14001812f:	retf   
   140018130:	ins    BYTE PTR es:[rdi],dx
   140018131:	(bad)  
   140018132:	sub    edi,0xffffff9a
   140018135:	test   BYTE PTR [rbx+rsi*4],dl
   140018138:	movabs ds:0xad004f72f284a2a8,al
   140018141:	out    0x8b,al
   140018143:	mov    edx,0xc2b68016
   140018148:	scas   al,BYTE PTR es:[rdi]
   140018149:	(bad)  
   14001814a:	push   rsi
   14001814b:	(bad)  
   14001814c:	stos   BYTE PTR es:[rdi],al
   14001814d:	ret    0x43a8
   140018150:	test   al,0x82
   140018153:	scas   al,BYTE PTR es:[rdi]
   140018154:	sbb    DWORD PTR [rax-0x16],eax
   140018157:	sub    dl,BYTE PTR [rax+0x60c5ff57]
   14001815d:	jo     0x14001813e
   14001815f:	test   BYTE PTR [rdi+0x43f045],dl
   140018165:	and    bh,BYTE PTR [rbx+0x31]
   140018168:	or     eax,0x982cb413
   14001816d:	or     al,0x6a
   14001816f:	enter  0xab98,0x2
   140018173:	loopne 0x140018197
   140018175:	mov    WORD PTR [rcx+0x73],gs
   140018178:	ror    DWORD PTR [rax],0x37
   14001817b:	jns    0x1400181eb
   14001817d:	lock mov edx,0xb03296fd
   140018183:	leave  
   140018184:	xchg   ebx,eax
   140018185:	pop    rax
   140018186:	(bad)  
   140018187:	add    cl,BYTE PTR [rcx+0x31]
   14001818a:	out    dx,eax
   14001818b:	nop
   14001818c:	int3   
   14001818d:	xchg   edi,eax
   14001818e:	xchg   DWORD PTR [rsi-0x59],ecx
   140018191:	jrcxz  0x1400181f2
   140018193:	cmp    edi,DWORD PTR [rsi-0x646c7207]
   140018199:	std    
   14001819a:	idiv   edi
   14001819c:	xchg   edi,eax
   14001819d:	movabs ds:0x8650c7abc5cf83d5,eax
   1400181a6:	fidiv  DWORD PTR [rsi-0x3f95f2ee]
   1400181ac:	jbe    0x14001821d
   1400181ae:	pushf  
   1400181af:	sbb    bh,BYTE PTR [rsi-0x5]
   1400181b2:	shr    ah,0x6b
   1400181b5:	scas   eax,DWORD PTR es:[rdi]
   1400181b6:	movabs ds:0xeddeff103f5e3bc5,al
   1400181bf:	std    
   1400181c0:	loope  0x140018177
   1400181c2:	jne    0x1400181c6
   1400181c4:	push   rsi
   1400181c5:	(bad)  
   1400181c6:	test   BYTE PTR [rbp+0x4e0028ae],cl
   1400181cc:	mov    WORD PTR [rsi+0x57],gs
   1400181cf:	sbb    eax,0x813994cf
   1400181d4:	test   BYTE PTR [rsp+rdx*8-0x1a69dbbc],al
   1400181db:	fstp   QWORD PTR [rdx]
   1400181dd:	mov    ebp,0x93904960
   1400181e2:	sbb    ecx,DWORD PTR [rax]
   1400181e4:	or     eax,esp
   1400181e6:	and    BYTE PTR [rax-0x29],cl
   1400181e9:	mov    bl,ch
   1400181eb:	adc    al,BYTE PTR [rcx]
   1400181ed:	rex.WRB ret 
   1400181ef:	cmp    BYTE PTR [rbp-0x43],cl
   1400181f2:	push   rsi
   1400181f4:	(bad)  
   1400181f5:	jo     0x1400181e2
   1400181f7:	out    dx,eax
   1400181f8:	rex.X adc al,0x80
   1400181fb:	lods   al,BYTE PTR ds:[rsi]
   1400181fc:	and    eax,0x518af8
   140018201:	rex test eax,0x9590804
   140018207:	cwde   
   140018208:	and    ch,al
   14001820a:	jmp    0x1bfd35a28
   14001820f:	retf   
   140018210:	fucomp st(7)
   140018212:	dec    ecx
   140018214:	(bad)  
   140018215:	movabs eax,ds:0x599dd876891f3f5d
   14001821e:	and    eax,0xa3a02461
   140018223:	mov    esi,0x3774ab18
   140018228:	add    BYTE PTR [rdx],ch
   14001822a:	outs   dx,BYTE PTR ds:[rsi]
   14001822b:	(bad)  
   14001822c:	stos   DWORD PTR es:[rdi],eax
   14001822d:	repz cwde 
   14001822f:	cmc    
   140018230:	iret   
   140018231:	scas   al,BYTE PTR es:[rdi]
   140018232:	jle    0x140018206
   140018234:	rcr    BYTE PTR [rcx+rdi*4],1
   140018237:	push   rdx
   140018238:	movabs al,ds:0x8fb3d4c1bfb18110
   140018241:	(bad)  
   140018242:	je     0x140018228
   140018244:	jb     0x1400182ba
   140018246:	scas   eax,DWORD PTR es:[rdi]
   140018247:	mov    esp,0x7707bb05
   14001824c:	movabs ds:0x5a5c58366f2c626,al
   140018255:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018256:	mov    ecx,0x1e9e1813
   14001825b:	ret    
   14001825c:	lock hlt 
   14001825e:	or     esp,esi
   140018260:	int    0x8c
   140018262:	and    ecx,esi
   140018264:	rex.WRXB movabs rax,ds:0x3ad2065b58479e5a
   14001826e:	sub    cl,bl
   140018270:	loope  0x140018299
   140018272:	in     eax,dx
   140018273:	loop   0x140018240
   140018275:	sbb    cl,BYTE PTR [rdi-0x19]
   140018278:	rex.RX jnp 0x140018273
   14001827b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001827c:	mov    bl,0x8
   14001827e:	mov    edi,0x4607612
   140018283:	rex.WRB
   140018284:	rex.WR loop 0x14001824f
   140018287:	pop    rsi
   140018288:	out    0xef,eax
   14001828a:	mov    ecx,0x19c8462f
   14001828f:	(bad)  
   140018290:	sub    BYTE PTR [rax+rcx*8],0xa2
   140018294:	or     BYTE PTR [rcx+rbx*8+0x0],al
   140018298:	rex.RX (bad) 
   14001829a:	mov    eax,esi
   14001829c:	(bad)  
   14001829d:	xor    al,0xde
   14001829f:	(bad)  
   1400182a0:	je     0x14001826f
   1400182a2:	(bad)  
   1400182a3:	xchg   ebp,eax
   1400182a4:	sub    DWORD PTR [rdi],edx
   1400182a6:	(bad)  
   1400182a7:	and    BYTE PTR [rcx-0x1bea3d43],ch
   1400182ad:	cmp    al,0x0
   1400182af:	imul   ecx
   1400182b1:	mov    DWORD PTR [rsp+rdi*2-0x1a021428],esp
   1400182b8:	pop    rdx
   1400182b9:	push   0x47
   1400182bb:	or     esp,DWORD PTR [rdx-0x27ad5c4]
   1400182c1:	xchg   ebp,eax
   1400182c2:	xchg   BYTE PTR [rbp*1+0x1cc6384d],cl
   1400182c9:	(bad)  
   1400182ca:	sbb    BYTE PTR [rsi+0x29b47493],0x0
   1400182d1:	mov    dh,0xa6
   1400182d3:	pop    rcx
   1400182d4:	mov    ecx,0x32ab00be
   1400182d9:	add    BYTE PTR [rsi+0x2df0452c],0xe7
   1400182e0:	(bad)  
   1400182e1:	sbb    DWORD PTR [rcx],ecx
   1400182e3:	push   0xffffffffca76488e
   1400182e8:	xor    eax,DWORD PTR [rdi]
   1400182ea:	(bad)  
   1400182eb:	or     al,al
   1400182ed:	ss xchg edi,eax
   1400182ef:	mov    ah,BYTE PTR [rsi+rdi*8]
   1400182f2:	jle    0x14001831b
   1400182f4:	xor    dh,dl
   1400182f6:	mov    edx,0xd1e5f9bc
   1400182fb:	hlt    
   1400182fc:	rol    bh,0x9f
   1400182ff:	movabs eax,ds:0x5edfabefb6b63f8f
   140018308:	fidivr DWORD PTR [rbx+0xa]
   14001830b:	jns    0x1400182ca
   14001830d:	or     al,0xa3
   14001830f:	cld    
   140018310:	push   rdx
   140018311:	stc    
   140018312:	jae    0x1400182f1
   140018314:	mov    dh,0x1a
   140018316:	scas   eax,DWORD PTR es:[rdi]
   140018317:	or     BYTE PTR [rax],ah
   140018319:	(bad)  
   14001831a:	(bad)  
   14001831b:	in     al,dx
   14001831c:	shr    BYTE PTR [rbx+0x4e60d2],1
   140018322:	add    BYTE PTR [rax],ah
   140018324:	add    BYTE PTR [rcx+0x44],cl
   140018327:	push   r12
   140018329:	or     eax,0x7fb6ec69
   14001832e:	xor    BYTE PTR [rax-0xa485e07],bh
   140018334:	loope  0x140018304
   140018336:	and    DWORD PTR [rax+0x60],esp
   140018339:	cmp    DWORD PTR [rip+0x6a40366c],esp        # 0x1aa41b9ab
   14001833f:	cmp    bh,dl
   140018341:	or     ah,BYTE PTR [rbx+riz*8]
   140018344:	scas   al,BYTE PTR es:[rdi]
   140018345:	adc    bl,BYTE PTR [rax-0x6fb65fd]
   14001834b:	rcr    ah,1
   14001834d:	add    eax,0x2de7b93d
   140018352:	mov    al,0xe4
   140018354:	mov    esp,0x111b278
   140018359:	ffree  st(4)
   14001835b:	fadd   DWORD PTR [rax-0x8]
   14001835e:	(bad)  
   14001835f:	inc    DWORD PTR [rbx+rbx*1+0xc31ec7e]
   140018366:	(bad)  
   140018367:	rex.XB sub sil,BYTE PTR [r11+0x1b]
   14001836b:	cmp    al,0xf8
   14001836d:	jnp    0x140018378
   14001836f:	out    0xd9,eax
   140018371:	mov    esi,0x7000147f
   140018376:	es xchg edi,eax
   140018378:	(bad)  
   140018379:	sbb    ebx,DWORD PTR [rdx]
   14001837b:	mov    eax,0xb8efade1
   140018380:	ins    DWORD PTR es:[rdi],dx
   140018381:	fbld   TBYTE PTR [rbp+0x57]
   140018384:	jmp    FWORD PTR [rdx-0x54]
   140018387:	jmp    0x1400183a4
   140018389:	cdq    
   14001838a:	and    eax,0x486a3ff7
   14001838f:	xor    BYTE PTR [rax+0x26e81b9d],al
   140018395:	or     DWORD PTR [rdi+0xe8a3711],ebp
   14001839b:	hlt    
   14001839c:	mov    DWORD PTR [rbx+0x45f2581],esp
   1400183a2:	xor    al,0xa
   1400183a4:	stos   DWORD PTR es:[rdi],eax
   1400183a5:	add    BYTE PTR [rdx-0x7e4447cb],cl
   1400183ab:	out    0xc9,al
   1400183ad:	sti    
   1400183ae:	jno    0x14001842c
   1400183b0:	jb     0x1400183b4
   1400183b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400183b3:	(bad)  
   1400183b4:	mov    edi,0xae073d19
   1400183b9:	ret    0xbeae
   1400183bc:	pop    rsi
   1400183bd:	add    al,0x30
   1400183bf:	xchg   esi,eax
   1400183c0:	ss mov edx,0x45e5c58
   1400183c6:	data16 rex.WRXB (bad) 
   1400183c9:	jo     0x1400183c1
   1400183cb:	cmp    BYTE PTR [rsi-0x5a],al
   1400183ce:	(bad)  
   1400183cf:	movabs ds:0xac21cdf966a4f26f,eax
   1400183d8:	sub    eax,0x8eb3423
   1400183dd:	fidivr WORD PTR [rax-0x37c0d2bd]
   1400183e3:	pop    rbx
   1400183e4:	jns    0x14001842b
   1400183e6:	pop    rbp
   1400183e7:	mov    esp,0x185402b3
   1400183ec:	push   rax
   1400183ed:	mov    ah,0xe6
   1400183ef:	(bad)  
   1400183f0:	in     al,dx
   1400183f1:	jns    0x1400183e9
   1400183f3:	stc    
   1400183f4:	and    eax,0x3f2c56e5
   1400183f9:	jns    0x1400183c9
   1400183fb:	mov    eax,0xbfca7e58
   140018400:	and    eax,DWORD PTR [rcx+0x43a05688]
   140018406:	(bad)  
   140018407:	jmp    FWORD PTR [rdi+0x9]
   14001840a:	xchg   BYTE PTR ds:[rdx],ah
   14001840d:	and    ah,BYTE PTR [rdx-0x59bb1d79]
   140018413:	xor    dh,ah
   140018415:	mov    bh,0x42
   140018417:	(bad)  
   140018418:	sbb    BYTE PTR [rbx+0x7601f96f],dh
   14001841e:	or     al,0xd6
   140018420:	or     BYTE PTR [rbp-0xbd940f7],al
   140018426:	pop    rax
   140018427:	(bad)
   14001842a:	adc    edi,esi
   14001842c:	sbb    al,0xfa
   14001842e:	adc    esp,DWORD PTR [rdx+0x54549490]
   140018434:	rex.RB adc al,0x5
   140018437:	(bad)  
   140018438:	(bad)  
   14001843a:	movabs eax,ds:0xf1fa801d68443c96
   140018443:	push   0xfffffffffffffff1
   140018445:	lods   eax,DWORD PTR ds:[rsi]
   140018446:	hlt    
   140018447:	(bad)  
   140018448:	js     0x14001844e
   14001844a:	(bad)  
   14001844b:	rex.XB fidivr DWORD PTR [rip+0x39805c95]        # 0x17981e0e7
   140018452:	je     0x1400183d6
   140018454:	pop    rax
   140018455:	mov    esp,0xadb5248f
   14001845a:	(bad)  
   14001845b:	ins    DWORD PTR es:[rdi],dx
   14001845c:	fwait
   14001845d:	in     eax,dx
   14001845e:	mov    esp,ss
   140018460:	adc    BYTE PTR [rsi-0x460fd82],bh
   140018466:	stos   DWORD PTR es:[rdi],eax
   140018467:	rcr    DWORD PTR [rsi-0x2e6201c1],1
   14001846d:	stos   DWORD PTR es:[rdi],eax
   14001846e:	mov    esi,0x5d9eb102
   140018473:	std    
   140018474:	cmp    ebx,DWORD PTR [rbx-0x5fb56810]
   14001847a:	xor    al,0x5c
   14001847c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001847d:	adc    dh,BYTE PTR [rax]
   14001847f:	add    edx,DWORD PTR [rsi-0x41]
   140018482:	xor    eax,0xf86f13d
   140018487:	or     eax,0xbbc4fd2c
   14001848c:	cli    
   14001848d:	jo     0x1400184c6
   14001848f:	adc    dl,bl
   140018491:	push   0xffffffffffffffc3
   140018493:	mov    al,0x9c
   140018495:	xor    esp,DWORD PTR [rsi-0x55]
   140018498:	and    eax,0x62607092
   14001849d:	rex.X push rdx
   14001849f:	add    al,cl
   1400184a1:	rex.WRXB
   1400184a2:	rex.RX test BYTE PTR [rsi+0x14254f33],r8b
   1400184a9:	rex.X adc sil,BYTE PTR [rdi]
   1400184ac:	rex rol DWORD PTR [rax-0x69],1
   1400184b0:	mov    cl,0xf1
   1400184b2:	or     BYTE PTR [rip+0xfffffffff897e07d],cl        # 0x138996535
   1400184b8:	xor    eax,0xe594875f
   1400184bd:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400184bf:	loopne 0x14001853a
   1400184c1:	push   rax
   1400184c2:	ror    bl,0x4f
   1400184c5:	add    bl,BYTE PTR [rsi-0x74e18495]
   1400184cb:	xchg   esp,eax
   1400184cc:	rex.WR (bad) 
   1400184ce:	jnp    0x1400184be
   1400184d0:	(bad)  
   1400184d1:	shr    ah,cl
   1400184d3:	hlt    
   1400184d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400184d5:	xchg   dh,dh
   1400184d7:	(bad)  
   1400184d8:	call   0x117a0226c
   1400184dd:	push   rbp
   1400184de:	add    al,0xaa
   1400184e0:	pop    rax
   1400184e1:	enter  0x1334,0x7e
   1400184e5:	stos   DWORD PTR es:[rdi],eax
   1400184e6:	sub    DWORD PTR [rax-0x34db3f98],ecx
   1400184ec:	push   rdi
   1400184ed:	pop    rcx
   1400184ee:	imul   esp,DWORD PTR [rbp-0x2ebd8569],0xadd0a842
   1400184f8:	sti    
   1400184f9:	ror    bl,0xd3
   1400184fc:	pop    rax
   1400184fd:	jl     0x1400184fb
   1400184ff:	fwait
   140018500:	cmp    BYTE PTR [rdx-0x4a233a2a],dh
   140018506:	ja     0x140018568
   140018508:	clc    
   140018509:	shl    ch,0x18
   14001850c:	jmp    0xf18a05fe
   140018511:	mov    ah,0xb1
   140018513:	mov    DWORD PTR [rbp-0x19ffa3b],eax
   140018519:	and    al,0x86
   14001851b:	mov    fs,WORD PTR [ebx+0x68]
   14001851f:	mul    BYTE PTR [rdx+rdi*8]
   140018522:	data16 rex.WRX movabs rax,ds:0xbeb5405e5c419c5a
   14001852d:	mov    eax,cs
   14001852f:	fwait
   140018530:	mov    dl,bl
   140018532:	mov    dl,0xab
   140018534:	push   rsi
   140018535:	jg     0x140018576
   140018537:	and    ah,ah
   140018539:	cs mov esi,0x2a43d856
   14001853f:	cld    
   140018540:	jo     0x140018590
   140018542:	or     ebx,DWORD PTR [rsi+0x21]
   140018545:	push   rdi
   140018546:	adc    BYTE PTR [rsi-0x54],bh
   140018549:	test   BYTE PTR [rdi+0x2241ec2f],bl
   14001854f:	nop
   140018550:	xchg   ecx,eax
   140018551:	sub    al,0xd1
   140018553:	rex.RXB adc DWORD PTR [r8-0x1d14a03e],r8d
   14001855a:	jrcxz  0x1400184f5
   14001855c:	jle    0x1400185c2
   14001855e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001855f:	pop    rsi
   140018560:	(bad)  
   140018561:	rol    DWORD PTR [rbx-0x72],0x12
   140018565:	pop    rax
   140018566:	(bad)  
   140018567:	jge    0x140018589
   140018569:	(bad)  
   14001856a:	rex.WXB jne 0x140018548
   14001856d:	out    0x4a,eax
   14001856f:	(bad)  
   140018570:	rex.RX cmc 
   140018572:	shr    DWORD PTR [rip+0x28542fe3],cl        # 0x16855b55b
   140018578:	repnz adc dl,BYTE PTR [rdx+rdi*8]
   14001857c:	xchg   DWORD PTR [rdx+rdx*2],ebx
   14001857f:	or     al,0xda
   140018581:	and    al,0xc4
   140018583:	test   bl,bl
   140018585:	xchg   edx,eax
   140018586:	lea    eax,[rdx+0x2c]
   140018589:	and    BYTE PTR [rdi],bh
   14001858b:	cdq    
   14001858c:	pop    rbx
   14001858d:	xchg   edx,eax
   14001858e:	loope  0x14001854b
   140018590:	scas   eax,DWORD PTR es:[rdi]
   140018591:	(bad)  
   140018592:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018593:	or     al,cl
   140018595:	rex.XB jnp 0x14001855e
   140018598:	adc    DWORD PTR [rax],ebx
   14001859a:	push   rsp
   14001859b:	jno    0x1400185df
   14001859d:	shr    dl,1
   14001859f:	in     al,dx
   1400185a0:	loope  0x1400185c8
   1400185a2:	mov    WORD PTR [rcx+rdi*1-0x26],ss
   1400185a6:	cs rex.R mov cx,0xea91
   1400185ac:	or     DWORD PTR [rsi-0xa067060],eax
   1400185b2:	clc    
   1400185b3:	sar    BYTE PTR [rdi+0x7c],1
   1400185b6:	mov    eax,0xfaff6bf3
   1400185bb:	loope  0x140018568
   1400185bd:	jg     0x1400185ba
   1400185bf:	(bad)  
   1400185c0:	mov    ecx,0x4434fdd
   1400185c5:	addr32 or eax,0xcfed4162
   1400185cb:	adc    al,0x82
   1400185cd:	sub    DWORD PTR [rbx-0x40290a0e],eax
   1400185d3:	je     0x14001857b
   1400185d5:	out    dx,eax
   1400185d6:	(bad)  
   1400185d7:	rcr    DWORD PTR [rsi+0x2f75f713],1
   1400185dd:	stc    
   1400185de:	(bad)  
   1400185df:	(bad)  
   1400185e0:	out    0xdc,al
   1400185e2:	and    eax,DWORD PTR [rdi+0x2ee97363]
   1400185e8:	ret    0xd641
   1400185eb:	add    BYTE PTR [rdi+0xe],bh
   1400185ee:	or     ecx,edx
   1400185f0:	(bad)  
   1400185f1:	test   al,0xa2
   1400185f3:	iret   
   1400185f4:	jge    0x14001861c
   1400185f6:	in     al,0xdf
   1400185f8:	fcomp  QWORD PTR [rdi+rsi*4]
   1400185fb:	movabs al,ds:0xdcfd8ebcc8294d2d
   140018604:	lods   al,BYTE PTR ds:[rsi]
   140018605:	fisttp WORD PTR [rbx+0xbc39f43]
   14001860b:	sub    BYTE PTR [rax],dl
   14001860d:	cli    
   14001860e:	(bad)  
   14001860f:	push   rdx
   140018610:	add    BYTE PTR [rsi+0x2819cf6d],dh
   140018616:	jge    0x1400185c7
   140018618:	mov    ah,0xb2
   14001861a:	xor    BYTE PTR [rdi-0x3c2709c2],dh
   140018620:	pop    rdi
   140018621:	fnstsw WORD PTR [rbp-0x37]
   140018624:	loope  0x1400185f7
   140018626:	sbb    eax,0x8baf7dbd
   14001862b:	rex.R or esi,0xfffffff8
   14001862f:	mov    bl,0x64
   140018631:	add    DWORD PTR [rsi+0x6e],eax
   140018634:	(bad)  
   140018635:	retf   0xe08b
   140018638:	fld    DWORD PTR [rbx]
   14001863a:	repz (bad) 
   14001863c:	mov    cr6,rsp
   14001863f:	popf   
   140018640:	pop    rsi
   140018641:	je     0x140018696
   140018643:	(bad)  
   140018644:	int    0x73
   140018646:	ffreep st(1)
   140018648:	hlt    
   140018649:	jae    0x1400185da
   14001864b:	loop   0x140018635
   14001864d:	(bad)  
   14001864e:	ret    
   14001864f:	rex.W push rdi
   140018651:	fiadd  WORD PTR [rdx+0x6376bbbd]
   140018657:	movabs al,ds:0xd2c4db5c58c4e00e
   140018660:	sar    BYTE PTR [rax+rdi*2],cl
   140018663:	out    dx,al
   140018664:	and    al,0x46
   140018666:	data16 mov fs,WORD PTR [rbx+0x68]
   14001866a:	data16 sbb al,0x7d
   14001866d:	mov    bl,0xe3
   14001866f:	test   al,0x17
   140018671:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018672:	push   rcx
   140018673:	lods   eax,DWORD PTR ds:[rsi]
   140018674:	sub    al,0x20
   140018676:	scas   al,BYTE PTR es:[rdi]
   140018677:	(bad)  
   140018678:	and    esp,DWORD PTR [rsi-0x6e1af68b]
   14001867e:	and    al,0x1f
   140018680:	(bad)  
   140018681:	lods   al,BYTE PTR ds:[rsi]
   140018682:	sbb    BYTE PTR [rcx-0x6f],r14b
   140018686:	loopne 0x14001862b
   140018688:	or     ah,BYTE PTR [rax-0x57ad76de]
   14001868e:	jmp    0x1400186ea
   140018690:	(bad)  
   140018691:	neg    BYTE PTR [rax+0x57e17745]
   140018697:	pop    rsi
   140018698:	ret    0xe9eb
   14001869b:	xchg   ecx,eax
   14001869c:	test   DWORD PTR [rdi+0x38],ebx
   14001869f:	add    BYTE PTR [rcx+0x5b7fe614],bl
   1400186a5:	clc    
   1400186a6:	iret   
   1400186a7:	and    DWORD PTR [rbx+rsi*4-0x2207a611],edi
   1400186ae:	out    0x77,eax
   1400186b0:	clc    
   1400186b1:	scas   eax,DWORD PTR es:[rdi]
   1400186b2:	adc    eax,0x39fe647d
   1400186b7:	adc    eax,0xc756fa79
   1400186bc:	(bad)  
   1400186bd:	fsub   st(1),st
   1400186bf:	(bad)  
   1400186c0:	sar    BYTE PTR [rax],1
   1400186c2:	movabs gs:0x899801968aa1eed0,al
   1400186cc:	rex.W mov dl,sil
   1400186cf:	adc    edx,DWORD PTR [rax]
   1400186d1:	scas   al,BYTE PTR es:[rdi]
   1400186d2:	mov    WORD PTR [rsp+riz*8-0x3a3f46f4],ds
   1400186d9:	jnp    0x1400186de
   1400186db:	and    bh,BYTE PTR [rax+0x32769360]
   1400186e1:	push   0xfffffffffffffff9
   1400186e3:	inc    esp
   1400186e5:	fst    DWORD PTR [rip+0xe64220]        # 0x140e7c90b
   1400186eb:	in     al,dx
   1400186ec:	rex.RXB
   1400186ed:	rex.WRXB cmps BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   1400186f0:	cmp    al,0x4a
   1400186f2:	retf   
   1400186f3:	(bad)  
   1400186f4:	out    dx,al
   1400186f5:	pop    rsi
   1400186f6:	xor    DWORD PTR [rax],0xfffffff3
   1400186f9:	int3   
   1400186fa:	(bad)  
   1400186fb:	iret   
   1400186fc:	xchg   edi,edi
   1400186fe:	jmp    0x11b00965a
   140018703:	rex.RXB (bad) 
   140018705:	out    dx,eax
   140018706:	jnp    0x1400186bc
   140018708:	loope  0x1400186ba
   14001870a:	xchg   BYTE PTR [rsi+rdi*8-0x7331d93b],bh
   140018711:	add    cl,BYTE PTR [rdx+0x24]
   140018714:	push   rax
   140018715:	(bad)  
   140018716:	xchg   ebp,eax
   140018717:	repz mov bl,0x29
   14001871a:	(bad)  
   14001871b:	(bad)  
   14001871c:	jg     0x1400186f1
   14001871e:	add    BYTE PTR [rax+0x1e],ch
   140018721:	rex.WXB jnp 0x1400186b3
   140018724:	jge    0x1400186cb
   140018726:	cmp    esi,esp
   140018728:	mov    DWORD PTR [rbx+0x8dcf2e3],ebx
   14001872e:	jne    0x14001878f
   140018730:	rex.WRB loopne 0x140018731
   140018733:	lods   al,BYTE PTR ds:[rsi]
   140018734:	add    BYTE PTR [rsp+rbp*4+0x9],al
   140018738:	cmp    DWORD PTR [rdx-0x7ec9d9ab],ebx
   14001873e:	(bad)  
   14001873f:	mov    edx,0xdb2fb2b2
   140018744:	div    DWORD PTR [rsi+0x6f]
   140018747:	mov    BYTE PTR [rsi+rsi*8-0x705c17cd],r11b
   14001874f:	(bad)  
   140018750:	out    0xb2,eax
   140018752:	pop    rdi
   140018753:	sar    DWORD PTR [rcx+0x42],cl
   140018756:	(bad)  
   140018757:	fistp  WORD PTR [rdi+0x2e]
   14001875a:	rcr    BYTE PTR [rcx+0x6104edb6],0xad
   140018761:	jg     0x140018780
   140018763:	add    BYTE PTR [rip+0xffffffffc6faddd7],bh        # 0x106fc6540
   140018769:	imul   ebp,DWORD PTR [rdi],0x7f
   14001876c:	(bad)  
   14001876d:	imul   edi,edi,0x7d
   140018770:	fucomp st(1)
   140018772:	mov    ecx,0x1268c193
   140018777:	push   rax
   140018778:	xchg   ecx,eax
   140018779:	mov    al,0xf9
   14001877b:	fiadd  WORD PTR [rip+0x62003948]        # 0x1a201c0c9
   140018781:	imul   ebp,DWORD PTR [rdx+0x6c2a19b4],0xd4f11ac4
   14001878b:	rcr    DWORD PTR [rax+0x7d],cl
   14001878e:	repnz (bad) [rdi]
   140018791:	(bad)  
   140018792:	rcr    DWORD PTR [rcx],1
   140018794:	lahf   
   140018795:	(bad)  
   140018797:	stos   BYTE PTR es:[rdi],al
   140018798:	mov    DWORD PTR [rsi+0x430b7d91],ebx
   14001879e:	mov    ebp,0x71d6f41d
   1400187a3:	push   rdi
   1400187a4:	rex.XB cmc 
   1400187a6:	adc    ebp,0xb0b15d26
   1400187ac:	mov    esp,0x8fcc33b4
   1400187b1:	movsxd esi,DWORD PTR [rax-0x12]
   1400187b4:	and    al,0x86
   1400187b6:	addr32 fs in eax,0xde
   1400187ba:	push   0x7e
   1400187bc:	(bad)  
   1400187bd:	(bad)  
   1400187be:	repnz cmp al,0xe2
   1400187c1:	ficom  DWORD PTR [rdx]
   1400187c3:	(bad)
   1400187c8:	mov    WORD PTR cs:[rbx-0x56953378],?
   1400187cf:	xchg   ebx,eax
   1400187d0:	ss hlt 
   1400187d2:	(bad)  
   1400187d3:	jbe    0x1400187b3
   1400187d5:	(bad)  
   1400187d6:	lods   eax,DWORD PTR ds:[rsi]
   1400187d7:	cmp    edi,ebx
   1400187d9:	rex.WR scas al,BYTE PTR es:[rdi]
   1400187db:	mov    eax,0x3b7e5893
   1400187e0:	(bad)  
   1400187e1:	(bad)  
   1400187e2:	jo     0x1400187b3
   1400187e4:	lea    ebx,[rdi]
   1400187e6:	sub    BYTE PTR [rdi+0x1],al
   1400187e9:	(bad)  
   1400187ea:	rex.WX
   1400187eb:	rex.XB fstp QWORD PTR [r14-0x4d]
   1400187ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400187f0:	es (bad) 
   1400187f2:	out    0xf3,al
   1400187f4:	sbb    ebp,DWORD PTR [rdx+0x4b5fc670]
   1400187fa:	or     BYTE PTR [rbx-0x1f],0xf
   1400187fe:	outs   dx,BYTE PTR ds:[rsi]
   1400187ff:	lods   eax,DWORD PTR ds:[rsi]
   140018800:	fcmovnb st,st(2)
   140018802:	pop    rdi
   140018803:	data16 sti 
   140018805:	push   rcx
   140018806:	fs neg ebp
   140018809:	sub    eax,0xc72d17b4
   14001880e:	fist   WORD PTR [rcx-0x55e9d27a]
   140018814:	rex.WX sub cl,BYTE PTR [rdx-0x675975ee]
   14001881b:	add    ch,BYTE PTR [rbx]
   14001881d:	cmp    dl,BYTE PTR [rax-0x6e]
   140018820:	(bad)  
   140018822:	in     eax,dx
   140018823:	sbb    al,0x58
   140018825:	enter  0x233f,0x4
   140018829:	rex.WXB neg r15b
   14001882c:	xchg   esp,eax
   14001882d:	(bad)  
   14001882e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001882f:	(bad)  
   140018830:	retf   
   140018831:	ret    
   140018832:	nop
   140018833:	jns    0x140018882
   140018835:	add    DWORD PTR [rsi-0x26ba83c4],ebp
   14001883b:	adc    BYTE PTR [rax+0xb],ah
   14001883e:	(bad)  
   14001883f:	popf   
   140018840:	sub    eax,0x11b0b00a
   140018845:	mov    edi,0x9dd1d1f6
   14001884a:	mov    edi,0x75be6ff5
   14001884f:	loopne 0x140018882
   140018851:	pushf  
   140018852:	fxch   st(2)
   140018854:	xchg   edi,eax
   140018855:	ret    0x980d
   140018858:	add    al,0x3e
   14001885a:	cmovb  ebp,DWORD PTR [rbp-0x19309e90]
   140018861:	adc    bl,al
   140018863:	fsub   st(5),st
   140018865:	stc    
   140018866:	push   rdi
   140018867:	cmp    eax,0x7f7aafa3
   14001886c:	cwde   
   14001886d:	cld    
   14001886e:	vpaddq ymm7,ymm12,YMMWORD PTR [rbp+rdi*1+0x1e5010f7]
   140018877:	rex or eax,0xc2f86257
   14001887d:	xor    al,0xc
   14001887f:	rex.X movabs ds:0x4b959922a4981297,eax
   140018889:	sub    BYTE PTR [rax],0xd2
   14001888c:	es xor esi,eax
   14001888f:	mov    ecx,0x33fd5ff7
   140018894:	mov    edx,0x3cf10ff5
   140018899:	leave  
   14001889a:	shr    bh,0x7f
   14001889d:	add    eax,0x208d9c00
   1400188a2:	xor    al,0x25
   1400188a4:	rcr    BYTE PTR [rcx],1
   1400188a6:	sbb    al,0xd9
   1400188a8:	cmp    eax,0xef5dcb78
   1400188ad:	cld    
   1400188ae:	cdq    
   1400188af:	mov    esi,0x117fa1c1
   1400188b4:	cmp    DWORD PTR [rsi],0xaa8d0cb
   1400188ba:	ins    BYTE PTR es:[rdi],dx
   1400188bb:	xchg   ebp,eax
   1400188bc:	add    BYTE PTR [rax+rdx*2+0x44],ch
   1400188c0:	xor    DWORD PTR [rax-0x6b87394e],0x1f
   1400188c7:	cli    
   1400188c8:	fdiv   QWORD PTR [rdi]
   1400188ca:	data16 lahf 
   1400188cc:	jp     0x1400188c2
   1400188ce:	fist   DWORD PTR [rbx-0x662e712b]
   1400188d4:	rex.WRB cmp r10b,BYTE PTR [r13-0x74c9c9ca]
   1400188db:	xor    edx,DWORD PTR [rdx-0x21]
   1400188de:	scas   al,BYTE PTR es:[rdi]
   1400188df:	mov    ebp,0xae87bdfd
   1400188e4:	mov    eax,0xede27434
   1400188e9:	rex.XB retf 
   1400188eb:	push   rbx
   1400188ec:	out    dx,eax
   1400188ed:	fnstsw WORD PTR [rip+0xffffffffbe96ea7f]        # 0xfe987372
   1400188f3:	mov    ecx,0x4fcf50f1
   1400188f8:	and    DWORD PTR [rsi],ebp
   1400188fa:	movabs al,cs:0x5742a2aeec445b5e
   140018904:	mov    dl,0xf8
   140018906:	xor    al,0xdc
   140018908:	sub    BYTE PTR [rsi+rbx*2+0x18f24042],ah
   14001890f:	mov    edi,0x5f94b045
   140018914:	sub    edi,DWORD PTR [rdx-0xacc6f10]
   14001891a:	xor    ch,cl
   14001891c:	and    eax,0xf6c61795
   140018921:	(bad)  
   140018922:	jb     0x140018903
   140018924:	fild   WORD PTR [rip+0xffffffff8e5d0dd9]        # 0xce5e9703
   14001892a:	stos   DWORD PTR es:[rdi],eax
   14001892b:	sbb    esp,DWORD PTR [rdx]
   14001892d:	add    BYTE PTR [rsp+rax*8],ch
   140018930:	xchg   esi,eax
   140018931:	sub    eax,0xcab6407a
   140018936:	xchg   edx,eax
   140018937:	push   rax
   140018938:	(bad)  
   140018939:	cmp    esi,edx
   14001893b:	(bad)  
   14001893c:	in     eax,0x7b
   14001893e:	mov    dl,0xf7
   140018940:	data16 stc 
   140018942:	leave  
   140018943:	mov    al,BYTE PTR [rbx-0x75947de0]
   140018949:	rex.WX fld QWORD PTR [rdx+r9*2-0x6375fe6f]
   140018951:	add    DWORD PTR [rbx-0x4e952bc4],ecx
   140018957:	mov    bh,0x36
   140018959:	std    
   14001895a:	hlt    
   14001895b:	movsxd ebx,DWORD PTR [rax+0x6f]
   14001895e:	jge    0x140018948
   140018960:	jge    0x14001898a
   140018962:	rex.WB or BYTE PTR [r15+0x2],bpl
   140018966:	(bad)  
   140018967:	(bad)  
   140018968:	movabs al,ds:0xcfec1a2817f5735a
   140018971:	add    al,0xa0
   140018973:	(bad)  
   140018974:	jp     0x140018900
   140018976:	retf   0x780d
   140018979:	imul   esi,eax,0x36
   14001897c:	or     DWORD PTR [rax],ecx
   14001897e:	stc    
   14001897f:	fs jrcxz 0x14001895b
   140018982:	test   esi,ecx
   140018984:	jg     0x140018980
   140018986:	test   eax,0xbbf43ebf
   14001898b:	(bad)  
   14001898c:	int3   
   14001898d:	imul   BYTE PTR [rsi]
   14001898f:	and    BYTE PTR [rbx],cl
   140018991:	(bad)  
   140018992:	push   rsi
   140018993:	loope  0x140018964
   140018995:	movabs al,ds:0xb02be7d9fd08f9fc
   14001899e:	pop    rbp
   14001899f:	adc    DWORD PTR [rdx+rax*8-0x122b3c24],esi
   1400189a6:	push   QWORD PTR [rax-0x19]
   1400189a9:	icebp  
   1400189aa:	(bad)  
   1400189ab:	mov    edi,0x3e7ed686
   1400189b0:	xor    BYTE PTR [rdi],cl
   1400189b2:	and    eax,0xd272070d
   1400189b7:	inc    BYTE PTR [rax+0x1176197a]
   1400189bd:	(bad)  
   1400189be:	adc    dl,BYTE PTR [rsp+rax*8-0x70]
   1400189c2:	cld    
   1400189c3:	jnp    0x140018a1a
   1400189c5:	adc    ah,cl
   1400189c7:	pop    rax
   1400189c8:	rex.RB clc 
   1400189ca:	loop   0x1400189fb
   1400189cc:	repnz imul edi,edi,0xffffffdb
   1400189d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400189d1:	xor    DWORD PTR [rax-0x9],esp
   1400189d4:	js     0x140018a24
   1400189d6:	xor    dh,al
   1400189d8:	xchg   ebp,eax
   1400189d9:	movabs eax,ds:0x151ae8411b38000
   1400189e2:	hlt    
   1400189e3:	fdiv   st(2),st
   1400189e5:	mov    dh,0x77
   1400189e7:	mov    esi,0x43c1ef65
   1400189ec:	mov    edi,0x1d7d6212
   1400189f1:	adc    eax,edx
   1400189f3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400189f4:	mov    BYTE PTR [rdx-0x5aa3f77b],bl
   1400189fa:	cmp    BYTE PTR [rbx-0x20894544],bh
   140018a00:	int3   
   140018a01:	leave  
   140018a02:	mov    cl,0x3f
   140018a04:	jnp    0x1400189f0
   140018a06:	scas   eax,DWORD PTR es:[rdi]
   140018a07:	mov    edi,0xcce30f0
   140018a0c:	in     eax,dx
   140018a0d:	ins    BYTE PTR es:[rdi],dx
   140018a0e:	fld    TBYTE PTR [rdx-0x9281443]
   140018a14:	ja     0x1400189f5
   140018a16:	mov    ecx,0x3fe4ee7b
   140018a1b:	out    dx,eax
   140018a1c:	lods   al,BYTE PTR ds:[rsi]
   140018a1d:	int3   
   140018a1e:	(bad)  
   140018a20:	pop    rcx
   140018a21:	pop    rbp
   140018a22:	rex fcomp QWORD PTR [rbp+rax*2-0x3b]
   140018a27:	pop    rbp
   140018a28:	push   rsp
   140018a29:	(bad)  
   140018a2a:	or     cl,cl
   140018a2c:	mov    edx,0xfd8d24f8
   140018a31:	addr32 mov dl,0xcf
   140018a34:	or     DWORD PTR [rip+0x2a116a15],esi        # 0x16a12f44f
   140018a3a:	sub    DWORD PTR [rbp-0x3ecf13da],0xe03c05f3
   140018a44:	jno    0x140018a41
   140018a46:	sbb    al,0xf6
   140018a48:	retf   
   140018a49:	movabs eax,fs:0x5df8633ea169e22d
   140018a53:	clc    
   140018a54:	xor    ecx,0x5
   140018a57:	(bad)  
   140018a58:	xor    ebx,edx
   140018a5a:	ja     0x1400189dc
   140018a5c:	sti    
   140018a5d:	cmc    
   140018a5e:	fnstenv [rdx]
   140018a60:	(bad)  
   140018a61:	push   rcx
   140018a62:	add    eax,0xc960d815
   140018a67:	sbb    DWORD PTR ds:[rip+0xffffffff96e58bfa],0xefcf466c        # 0xd6e7166c
   140018a72:	push   rdi
   140018a73:	mul    DWORD PTR [rbx]
   140018a75:	sbb    bh,BYTE PTR [rdi-0x60]
   140018a78:	test   al,0x82
   140018a7a:	stos   BYTE PTR es:[rdi],al
   140018a7b:	cld    
   140018a7c:	cmp    dl,BYTE PTR [rsi-0x38]
   140018a7f:	mov    al,0x1f
   140018a81:	stos   BYTE PTR es:[rdi],al
   140018a82:	add    BYTE PTR [rsi+rdx*4],dl
   140018a85:	mov    bl,0xde
   140018a87:	(bad)  
   140018a88:	sub    DWORD PTR [rbx],ebx
   140018a8a:	push   0xffffffffffffffbe
   140018a8c:	(bad)  
   140018a8d:	ss rex sub ecx,DWORD PTR ds:[rbx]
   140018a92:	add    eax,0x30029bf2
   140018a97:	clc    
   140018a98:	retf   
   140018a99:	test   DWORD PTR [rbx],esp
   140018a9b:	sbb    esi,edx
   140018a9d:	addr32 mov dh,0xf
   140018aa0:	add    ebx,DWORD PTR [rbx]
   140018aa2:	movsxd r11,DWORD PTR [rdi+0x3a]
   140018aa6:	xor    eax,0xf8ff6bf0
   140018aab:	mov    edx,DWORD PTR [rdi+0x19621e7e]
   140018ab1:	rex.WXB loope 0x140018a93
   140018ab4:	rex.WRX
   140018ab5:	bnd jge 0x140018a67
   140018ab8:	(bad)  
   140018ab9:	jg     0x140018a61
   140018abb:	lods   eax,DWORD PTR ds:[rsi]
   140018abc:	lea    esp,[rax-0x31]
   140018abf:	rex.R ins BYTE PTR es:[rdi],dx
   140018ac1:	ja     0x140018b41
   140018ac3:	mov    ebp,0xbbb6f67e
   140018ac8:	ret    0x6fdc
   140018acb:	hlt    
   140018acc:	jb     0x140018ac5
   140018ace:	xor    eax,0x1baac6e2
   140018ad3:	rex
   140018ad4:	lock jo 0x140018a76
   140018ad7:	test   eax,0x2f6f4683
   140018adc:	rex push rax
   140018ade:	and    ah,0xbf
   140018ae1:	mov    al,0x67
   140018ae3:	and    DWORD PTR [rdi-0x67],esi
   140018ae6:	mov    ebx,0x7bc8d10f
   140018aeb:	jle    0x140018a86
   140018aed:	pop    rdi
   140018aee:	std    
   140018aef:	rex.WRB in al,0x9c
   140018af2:	xor    BYTE PTR [rbx-0x60207e6e],0x1c
   140018af9:	rcr    BYTE PTR [rcx-0x7bec8c4a],0x9
   140018b00:	sbb    dil,BYTE PTR [rdi]
   140018b03:	cli    
   140018b04:	fdivr  st(1),st
   140018b06:	xchg   ebp,eax
   140018b07:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018b08:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018b09:	rex.WRXB out dx,al
   140018b0b:	cmp    BYTE PTR [rax+0x68],dh
   140018b0e:	cwde   
   140018b0f:	cmp    edi,DWORD PTR [rbp-0x7f791551]
   140018b15:	outs   dx,BYTE PTR ds:[rsi]
   140018b16:	ret    
   140018b17:	(bad)  
   140018b18:	(bad)  
   140018b19:	push   rdi
   140018b1a:	(bad)  
   140018b1b:	jmp    FWORD PTR [rax-0x14]
   140018b1e:	test   eax,0xd1f37e27
   140018b23:	iret   
   140018b24:	jge    0x140018b08
   140018b26:	movabs ds:0x4afec2592d4763d3,eax
   140018b2f:	sbb    BYTE PTR [rax+0x1f73ffd5],bh
   140018b35:	jo     0x140018b99
   140018b37:	xor    edi,DWORD PTR [rbx+rdi*4]
   140018b3a:	rex popf 
   140018b3c:	rex.WRXB out dx,al
   140018b3e:	pop    rdx
   140018b3f:	popf   
   140018b40:	pop    rcx
   140018b41:	out    dx,eax
   140018b42:	pop    rbp
   140018b43:	pop    rdi
   140018b44:	mov    esp,0x4b5346a9
   140018b49:	cmp    al,0x5f
   140018b4b:	jb     0x140018b46
   140018b4d:	sub    ebp,DWORD PTR [rdx+0x64]
   140018b50:	add    DWORD PTR [rdi],ecx
   140018b52:	retf   
   140018b53:	out    dx,al
   140018b54:	and    esp,DWORD PTR [rcx]
   140018b56:	sti    
   140018b57:	lods   al,BYTE PTR ds:[rsi]
   140018b58:	movabs ds:0xc27ad1d9b32f844f,al
   140018b61:	xchg   ebp,eax
   140018b62:	ret    0x640f
   140018b65:	rex.W int 0x4a
   140018b68:	rol    cl,cl
   140018b6a:	rex.W cmp al,0x72
   140018b6d:	loope  0x140018b26
   140018b6f:	js     0x140018b2c
   140018b71:	or     BYTE PTR [rbp-0x10],bl
   140018b74:	push   rax
   140018b75:	lahf   
   140018b76:	cmc    
   140018b77:	(bad)  
   140018b78:	unpcklps xmm6,XMMWORD PTR [rbp+0x30e7013]
   140018b7f:	rex.RX sub r10b,BYTE PTR [rsi]
   140018b82:	out    0xf0,al
   140018b84:	adc    eax,0x9f63337d
   140018b89:	xchg   ebx,eax
   140018b8a:	jle    0x140018bb0
   140018b8c:	sbb    BYTE PTR [rbx],r13b
   140018b8f:	rex.WRB adc BYTE PTR [r10-0x1f],r10b
   140018b93:	mov    tr7,esp
   140018b96:	or     sil,r8b
   140018b99:	sbb    DWORD PTR [rax-0x16acf35a],edx
   140018b9f:	rex.WX
   140018ba0:	repnz xor DWORD PTR fs:[rax],ebx
   140018ba4:	imul   ecx,DWORD PTR [r10],0x9bcd1484
   140018bab:	lock (bad) 
   140018bad:	or     al,BYTE PTR [rax+0x7b00cf8a]
   140018bb3:	scas   eax,DWORD PTR es:[rdi]
   140018bb4:	popf   
   140018bb5:	jno    0x140018c04
   140018bb7:	sbb    DWORD PTR [rax+0x15],eax
   140018bba:	or     BYTE PTR [rsi],0xba
   140018bbd:	pop    rbx
   140018bbe:	js     0x140018c33
   140018bc0:	add    eax,0x33e9b2c8
   140018bc5:	xlat   BYTE PTR ds:[rbx]
   140018bc6:	xor    edi,DWORD PTR [rdi+0x3bf6bf19]
   140018bcc:	rex.WRXB out dx,al
   140018bce:	cli    
   140018bcf:	test   edi,edi
   140018bd1:	icebp  
   140018bd2:	inc    BYTE PTR [rbx-0x41f7bff1]
   140018bd8:	rcl    bh,cl
   140018bda:	(bad)  
   140018bdb:	sub    eax,0x5fe08bf
   140018be0:	pop    rax
   140018be1:	jno    0x140018b9a
   140018be3:	mov    ch,0x9d
   140018be5:	addr32 (bad) 
   140018be7:	add    ah,al
   140018be9:	(bad)  
   140018bea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018beb:	pop    rbp
   140018bec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018bed:	(bad)  
   140018bee:	jb     0x140018bcf
   140018bf0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018bf1:	outs   dx,BYTE PTR ds:[rsi]
   140018bf2:	or     DWORD PTR [rbx+0x79a9fafb],ecx
   140018bf8:	xor    eax,0x156fd33b
   140018bfd:	(bad)  
   140018bfe:	jp     0x140018b9b
   140018c00:	neg    dl
   140018c02:	call   0xd401d897
   140018c07:	or     edx,ebx
   140018c09:	xchg   BYTE PTR [rsi-0x12],bh
   140018c0c:	scas   al,BYTE PTR es:[rdi]
   140018c0d:	fisttp QWORD PTR [rbx-0x30d7a0bd]
   140018c13:	jno    0x140018bcb
   140018c15:	sti    
   140018c16:	jp     0x140018bfd
   140018c18:	and    BYTE PTR [rax+0x12eedb72],al
   140018c1e:	ins    BYTE PTR es:[rdi],dx
   140018c1f:	in     eax,0x6
   140018c21:	(bad)  
   140018c22:	pop    rbx
   140018c23:	fdivrp st(3),st
   140018c25:	pandn  mm1,mm6
   140018c28:	int3   
   140018c29:	jno    0x140018c17
   140018c2b:	mov    cl,0x87
   140018c2d:	out    dx,eax
   140018c2e:	lahf   
   140018c2f:	(bad)  
   140018c30:	cmp    esi,DWORD PTR [rdx+0x5b50b680]
   140018c36:	xor    eax,ebp
   140018c38:	(bad)  
   140018c39:	cmp    ch,BYTE PTR [rdi]
   140018c3b:	xor    BYTE PTR [rsi+0x286db648],dl
   140018c41:	rex (bad) 
   140018c43:	fnstsw WORD PTR [rcx+0x6fbbea7d]
   140018c49:	ds mov esp,0xf6bffe32
   140018c4f:	jo     0x140018c48
   140018c51:	or     cl,BYTE PTR [rcx-0x4e1cbc0]
   140018c57:	pop    QWORD PTR [rax+0x4cadca5a]
   140018c5d:	(bad)  
   140018c5e:	gs call 0x15bf71572
   140018c64:	in     al,dx
   140018c65:	and    eax,0x4f935d26
   140018c6a:	or     al,BYTE PTR [rax+rax*1+0x4264008b]
   140018c71:	rex.WRB out 0x7f,al
   140018c74:	adc    edx,ebp
   140018c76:	push   rbx
   140018c77:	ja     0x140018bf9
   140018c79:	or     eax,0xb30a93ea
   140018c7e:	mov    edx,0x59b0a50a
   140018c83:	(bad)  
   140018c84:	(bad)  
   140018c85:	sub    edi,ebp
   140018c87:	adc    eax,0xd0b50064
   140018c8c:	rex.X sbb BYTE PTR [rdx-0x6c],bl
   140018c90:	rex iret 
   140018c92:	imul   ebx,ecx,0x87bbea7a
   140018c98:	and    BYTE PTR [rbx+0x41a45914],ch
   140018c9e:	sar    BYTE PTR [rdi-0x70],1
   140018ca1:	sahf   
   140018ca2:	add    eax,DWORD PTR [rbp+0x3c9227b5]
   140018ca8:	add    DWORD PTR [rdi-0x6],ecx
   140018cab:	add    DWORD PTR [rbp+rcx*1-0x40],edi
   140018caf:	xor    dh,ah
   140018cb1:	rex.RXB add BYTE PTR [r10-0x7b09e88f],r10b
   140018cb8:	lods   eax,DWORD PTR ds:[rsi]
   140018cb9:	rex.WR pop rcx
   140018cbb:	mov    DWORD PTR [rax+0x43],eax
   140018cbe:	add    eax,0x3ffe140
   140018cc3:	movabs al,ds:0xac2b0b14816165a0
   140018ccc:	xor    cl,BYTE PTR [rbp-0x2fd446c0]
   140018cd2:	in     al,0x66
   140018cd4:	cmc    
   140018cd5:	(bad)  
   140018cd6:	(bad)  
   140018cd7:	div    DWORD PTR [rbp-0x605407d]
   140018cdd:	icebp  
   140018cde:	sbb    eax,0x5f82c833
   140018ce3:	sub    dh,BYTE PTR [rsi+0x39]
   140018ce6:	rol    BYTE PTR [rbp-0x2518074c],0xce
   140018ced:	outs   dx,DWORD PTR ds:[rsi]
   140018cef:	or     eax,0xdbdef40d
   140018cf4:	jns    0x140018cde
   140018cf6:	pop    rdi
   140018cf7:	(bad)  
   140018cf8:	out    0x8d,al
   140018cfa:	lahf   
   140018cfb:	(bad)  
   140018cfc:	push   rbx
   140018cfd:	rex.W in al,dx
   140018cff:	and    eax,0x6ad99e70
   140018d04:	cdq    
   140018d05:	add    BYTE PTR [rax-0x46f1e434],0xdd
   140018d0c:	cwde   
   140018d0d:	std    
   140018d0e:	ins    DWORD PTR es:[rdi],dx
   140018d0f:	xor    BYTE PTR [rdi+0x7b2f847e],cl
   140018d15:	out    0x9f,eax
   140018d17:	loopne 0x140018ce9
   140018d19:	cmp    dh,cl
   140018d1b:	xchg   ebx,eax
   140018d1c:	sbb    eax,edi
   140018d1e:	retf   0x41
   140018d21:	in     eax,0xb6
   140018d23:	pop    rbp
   140018d24:	stos   DWORD PTR es:[rdi],eax
   140018d25:	fisubr DWORD PTR [rbx-0x2d]
   140018d28:	js     0x140018d07
   140018d2a:	push   rbx
   140018d2b:	iret   
   140018d2c:	cmp    al,0xf1
   140018d2e:	int3   
   140018d2f:	test   eax,0x6a789e67
   140018d34:	jne    0x140018d97
   140018d36:	outs   dx,BYTE PTR ds:[rsi]
   140018d37:	or     ecx,ebx
   140018d39:	retf   0xc59b
   140018d3c:	(bad)  
   140018d3d:	(bad)  
   140018d3e:	rex.B test eax,0xf2c4ce0c
   140018d44:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018d45:	lods   eax,DWORD PTR ds:[rsi]
   140018d46:	fistp  WORD PTR [rdi+0x227fdfe8]
   140018d4c:	jb     0x140018d48
   140018d4e:	fidivr DWORD PTR [rsi+0x7b9bf9f5]
   140018d54:	rcr    ch,1
   140018d56:	(bad)  
   140018d57:	mov    ecx,0x2fd585fe
   140018d5c:	test   bh,bl
   140018d5e:	jb     0x140018d52
   140018d60:	mov    ebp,0x71320f0a
   140018d65:	leave  
   140018d66:	(bad)  
   140018d67:	ins    BYTE PTR es:[rdi],dx
   140018d68:	js     0x140018d4a
   140018d6a:	mov    ?,WORD PTR [rbx+0xf7125f5]
   140018d70:	rex.WR clc 
   140018d72:	add    DWORD PTR [rcx+0x8],edx
   140018d75:	mov    cl,0x52
   140018d77:	add    DWORD PTR [rcx+rsi*4+0x7abaede8],0xb901489
   140018d82:	push   rsi
   140018d83:	xor    al,0xc2
   140018d85:	rex.WRXB std 
   140018d87:	clc    
   140018d88:	sub    bl,BYTE PTR [rax+0x53]
   140018d8b:	rex.WRXB movabs r8,0x130a21a27ad5b685
   140018d95:	(bad)  
   140018d96:	adc    eax,0xb04e3b7e
   140018d9b:	fs lahf 
   140018d9d:	(bad)  
   140018d9e:	retf   0x9a02
   140018da1:	in     eax,dx
   140018da2:	(bad)  
   140018da3:	ja     0x140018dac
   140018da5:	mov    esp,0x15c02076
   140018daa:	push   rbp
   140018dab:	fdecstp 
   140018dad:	retf   
   140018dae:	jae    0x140018dc6
   140018db0:	fdiv   st(2),st
   140018db2:	(bad)  
   140018db4:	stc    
   140018db5:	cmp    esp,ebx
   140018db7:	rex.X cwde 
   140018db9:	sub    al,0xa2
   140018dbb:	push   rcx
   140018dbc:	mov    eax,0x3b3c8002
   140018dc1:	rex rol DWORD PTR [rcx-0x1de08f],1
   140018dc8:	(bad)  
   140018dc9:	add    eax,0x5cba3c36
   140018dce:	std    
   140018dcf:	ficomp WORD PTR [rbp-0x9]
   140018dd2:	pop    rbp
   140018dd3:	cmc    
   140018dd4:	jmp    0x140018e55
   140018dd6:	xor    edx,edi
   140018dd8:	cmp    ecx,DWORD PTR [rdi-0x15320694]
   140018dde:	addr32 xchg edi,eax
   140018de0:	out    dx,eax
   140018de1:	in     eax,0x12
   140018de3:	jle    0x140018dc5
   140018de5:	mov    esp,0xe0016c2b
   140018dea:	jnp    0x140018d87
   140018dec:	add    ecx,DWORD PTR [rdi]
   140018dee:	mov    esp,0x1a9dce39
   140018df3:	movabs eax,ds:0x839a6ab5149337cd
   140018dfc:	repnz sbb eax,0x430fd1c8
   140018e02:	add    dh,cl
   140018e04:	adc    al,0x68
   140018e06:	or     BYTE PTR [rcx+0x697b4318],bl
   140018e0c:	jrcxz  0x140018db7
   140018e0e:	mov    edi,0xcb4781c0
   140018e13:	movsxd ebx,DWORD PTR [rdi+0x32bc0509]
   140018e19:	adc    DWORD PTR [rax-0x47],eax
   140018e1c:	popf   
   140018e1d:	fld    st(7)
   140018e1f:	mov    dl,0xd7
   140018e21:	mov    dh,0x9d
   140018e23:	sub    eax,0x9f76737c
   140018e28:	scas   eax,DWORD PTR es:[rdi]
   140018e29:	rex.WRB in al,0xd8
   140018e2c:	icebp  
   140018e2d:	rex.WX
   140018e2e:	repnz mov cl,0xe7
   140018e31:	mov    edx,0xef87a385
   140018e36:	cwde   
   140018e37:	jnp    0x140018e2d
   140018e39:	ret    
   140018e3a:	std    
   140018e3b:	mov    esp,0xf0456b71
   140018e40:	(bad)  
   140018e41:	ds rex.RX
   140018e43:	sbb    r10,QWORD PTR [rcx]
   140018e46:	(bad)  
   140018e47:	(bad)  
   140018e48:	scas   eax,DWORD PTR es:[rdi]
   140018e49:	sub    DWORD PTR [rdi-0x55],esi
   140018e4c:	(bad)  
   140018e4d:	cdq    
   140018e4e:	add    esi,eax
   140018e50:	lods   al,BYTE PTR ds:[rsi]
   140018e51:	cmp    eax,0xadff4213
   140018e56:	push   0xffffffffa4d58379
   140018e5b:	adc    edi,DWORD PTR [rsi]
   140018e5d:	scas   al,BYTE PTR es:[rdi]
   140018e5f:	(bad)  
   140018e60:	loop   0x140018e51
   140018e62:	out    0x8b,al
   140018e64:	xchg   edi,eax
   140018e65:	xor    eax,0x3f09c1fd
   140018e6a:	retf   0x3921
   140018e6d:	fist   DWORD PTR [rdi-0x75]
   140018e70:	js     0x140018e1e
   140018e72:	rol    DWORD PTR [rdi+0x7ef1ff75],1
   140018e78:	add    BYTE PTR [rdx+0x3f3ee3ec],bl
   140018e7e:	cdq    
   140018e7f:	jmp    0x140018e13
   140018e81:	mov    ecx,0x62006f05
   140018e86:	(bad)  
   140018e87:	or     eax,0x8b14309a
   140018e8c:	jrcxz  0x140018e92
   140018e8e:	and    ebp,DWORD PTR [rip+0x3fbc0d59]        # 0x17fbd9bed
   140018e94:	sbb    BYTE PTR [rax-0x23],bh
   140018e97:	jg     0x140018eee
   140018e99:	(bad)  
   140018e9a:	hlt    
   140018e9b:	adc    eax,0xeced4525
   140018ea0:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018ea2:	adc    DWORD PTR [rdx],eax
   140018ea4:	mul    bh
   140018ea6:	add    edx,DWORD PTR [rdx+0x1bee4ee8]
   140018eac:	rol    BYTE PTR [rip+0xffffffff88802366],0x9f        # 0xc881b219
   140018eb3:	pop    rax
   140018eb4:	call   0x12f80aeb5
   140018eb9:	adc    edx,DWORD PTR [rdi-0x3]
   140018ebc:	(bad)  
   140018ebd:	shl    DWORD PTR fs:[rdi],0x17
   140018ec1:	(bad)  
   140018ec2:	adc    edi,DWORD PTR [rbp+0x2f]
   140018ec5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018ec6:	loopne 0x140018e67
   140018ec8:	imul   ebx,ebx,0x3e4b6f3e
   140018ece:	stos   DWORD PTR es:[rdi],eax
   140018ecf:	idiv   DWORD PTR [rdi]
   140018ed1:	(bad)  
   140018ed2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018ed3:	(bad)  
   140018ed5:	(bad)  
   140018ed6:	(bad)  
   140018ed7:	std    
   140018ed8:	fild   QWORD PTR [rdx-0x1a]
   140018edb:	and    DWORD PTR [rdx],0xfffffff5
   140018ede:	cmp    DWORD PTR [rcx],esi
   140018ee0:	enter  0xb026,0xd1
   140018ee4:	sbb    eax,0xb645b56
   140018ee9:	mov    esp,DWORD PTR [rsi+rax*1]
   140018eec:	push   rsi
   140018eed:	cmp    BYTE PTR [rcx+rsi*8-0x61],bh
   140018ef1:	loope  0x140018ec9
   140018ef3:	(bad)  
   140018ef4:	fwait
   140018ef5:	rex.RB mov r13d,0x8190738c
   140018efb:	scas   eax,DWORD PTR es:[rdi]
   140018efc:	rex.WR add al,0x50
   140018eff:	outs   dx,BYTE PTR ds:[rsi]
   140018f00:	scas   eax,DWORD PTR es:[edi]
   140018f02:	sub    al,0x3c
   140018f04:	push   rbx
   140018f05:	(bad)  
   140018f06:	rex.RX (bad) 
   140018f08:	jle    0x140018efd
   140018f0a:	test   esi,0xe76df3e6
   140018f10:	sbb    al,0xec
   140018f12:	jg     0x140018f3b
   140018f14:	mov    esp,DWORD PTR [rsi+0x1a57867b]
   140018f1a:	or     bh,BYTE PTR [rdi+0x7d]
   140018f1d:	js     0x140018f82
   140018f1f:	(bad)  
   140018f20:	or     eax,0xcb7ef135
   140018f25:	stos   BYTE PTR es:[rdi],al
   140018f26:	adc    ebx,DWORD PTR [rdi+0x3e]
   140018f29:	or     ecx,DWORD PTR [rbx+rsi*1+0x5bdacefd]
   140018f30:	fdivr  QWORD PTR [rdi]
   140018f32:	(bad)  
   140018f33:	rol    BYTE PTR [rbx-0x6aae0606],1
   140018f39:	rex.R
   140018f3a:	rex.WRX xlat BYTE PTR ds:[rbx]
   140018f3c:	xor    eax,0xba773f9f
   140018f41:	adc    DWORD PTR [rcx],eax
   140018f43:	mov    ch,0xda
   140018f45:	cli    
   140018f46:	nop
   140018f47:	jge    0x140018fbc
   140018f49:	gs sti 
   140018f4b:	int    0xf2
   140018f4d:	fwait
   140018f4e:	xor    bh,al
   140018f50:	push   0x4534061
   140018f55:	rex.RB fmul DWORD PTR [r14]
   140018f58:	(bad)  
   140018f59:	movabs ds:0xb4918fe1104dcc1b,al
   140018f62:	lods   eax,DWORD PTR ds:[rsi]
   140018f63:	cwde   
   140018f64:	jno    0x140018f72
   140018f66:	sub    al,BYTE PTR [r9]
   140018f69:	add    edi,DWORD PTR [rdi+riz*4]
   140018f6c:	fist   WORD PTR [rdx+0x7e]
   140018f6f:	in     eax,dx
   140018f70:	ja     0x140018fab
   140018f72:	xchg   edx,eax
   140018f73:	add    BYTE PTR [rdi+0x34],cl
   140018f76:	repnz mov al,0x9f
   140018f79:	sbb    DWORD PTR [rax-0x7d],esi
   140018f7c:	cmp    BYTE PTR [rax+0x20aa40ba],al
   140018f82:	add    DWORD PTR [rcx+0x3],0x14
   140018f86:	sti    
   140018f87:	(bad)  
   140018f88:	rex.WR movabs rsi,0x14c7d9092d72892b
   140018f92:	add    BYTE PTR [rbx],dl
   140018f94:	lods   eax,DWORD PTR ds:[rsi]
   140018f95:	jg     0x14001900e
   140018f97:	scas   al,BYTE PTR es:[rdi]
   140018f98:	out    dx,eax
   140018f99:	(bad)  
   140018f9a:	fdivp  st(2),st
   140018f9c:	leave  
   140018f9d:	sub    edi,DWORD PTR [rdi+0x1f]
   140018fa0:	addr32 (bad) 
   140018fa2:	(bad)  
   140018fa3:	xchg   edi,eax
   140018fa4:	(bad)  
   140018fa5:	repnz lahf 
   140018fa7:	imul   edi,DWORD PTR [rbx],0x7b
   140018faa:	imul   edi,DWORD PTR [rbx+rax*1],0xeef0cfe0
   140018fb1:	mov    cl,0x4b
   140018fb3:	mov    al,0xfe
   140018fb5:	popf   
   140018fb6:	sub    eax,edx
   140018fb8:	(bad)  
   140018fb9:	in     eax,dx
   140018fba:	xor    eax,0xbfa0a230
   140018fbf:	and    BYTE PTR [rsi],bh
   140018fc1:	mov    WORD PTR [rdi],?
   140018fc3:	es out 0x4a,eax
   140018fc6:	sub    al,0x8f
   140018fc8:	add    BYTE PTR [rax],al
   140018fca:	and    dl,dl
   140018fcc:	movabs eax,ds:0x71dec39f33f568ab
   140018fd5:	pushf  
   140018fd6:	and    esp,DWORD PTR [rdi]
   140018fd8:	loopne 0x140018f6f
   140018fda:	scas   eax,DWORD PTR es:[rdi]
   140018fdb:	add    BYTE PTR [rax+0x3083d3e7],al
   140018fe1:	or     ebp,esi
   140018fe3:	or     esp,DWORD PTR [rip+0x3e4ece7a]        # 0x17e505e63
   140018fe9:	add    al,BYTE PTR [rax]
   140018feb:	rex.WRXB hlt 
   140018fed:	in     al,dx
   140018fee:	pop    rdx
   140018fef:	scas   al,BYTE PTR es:[rdi]
   140018ff0:	sar    DWORD PTR [rbx+rsi*8-0x6e],1
   140018ff4:	int    0xd9
   140018ff6:	mov    ebx,0x15b0f06a
   140018ffb:	jrcxz  0x140019001
   140018ffd:	retf   
   140018ffe:	retf   0xd833
   140019001:	stos   DWORD PTR es:[rdi],eax
   140019002:	(bad)  
   140019003:	xor    al,0x32
   140019005:	jmp    0x1415ae6b4
   14001900a:	add    al,0x85
   14001900c:	cld    
   14001900d:	rex.RX idiv BYTE PTR [rcx+0x3d]
   140019011:	mov    edi,0x9944d8fa
   140019016:	or     al,0xc
   140019018:	pop    rsi
   140019019:	jne    0x140019042
   14001901b:	retf   0x72a0
   14001901e:	rex.RB xchg r8d,eax
   140019020:	test   DWORD PTR [rdi+0x5c],ebx
   140019023:	(bad)  
   140019024:	rex.RX push rbp
   140019026:	add    eax,0x3657cfef
   14001902b:	loop   0x140018fe1
   14001902d:	push   rbp
   14001902e:	jns    0x14001900d
   140019030:	out    dx,eax
   140019031:	xlat   BYTE PTR ds:[rbx]
   140019032:	add    bl,BYTE PTR [rax+riz*4-0x38617c51]
   140019039:	or     DWORD PTR [rdx+0x2f],eax
   14001903c:	sbb    eax,0x6c1e5ca6
   140019041:	xlat   BYTE PTR ds:[rbx]
   140019042:	rex.WB enter 0xbf21,0xa0
   140019047:	xchg   ebx,eax
   140019048:	iret   
   140019049:	jl     0x140019048
   14001904b:	adc    ch,dh
   14001904d:	jmp    0x14001900c
   14001904f:	jb     0x140019092
   140019051:	test   BYTE PTR [rdx+0x3655ef2e],dl
   140019057:	sti    
   140019058:	hlt    
   140019059:	adc    al,0x60
   14001905b:	mov    bh,0xf8
   14001905d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001905e:	fadd   QWORD PTR [rax+0x78263998]
   140019064:	sub    BYTE PTR [rbp+rdi*8-0x31f0e4b9],dh
   14001906b:	hlt    
   14001906c:	std    
   14001906d:	sti    
   14001906e:	ja     0x1400190ec
   140019070:	cli    
   140019071:	mov    bh,BYTE PTR [rdi]
   140019073:	rex.RX pop rbx
   140019075:	clc    
   140019076:	mov    bh,0x13
   140019078:	jge    0x140019059
   14001907a:	(bad)  
   14001907b:	pop    rbx
   14001907c:	jnp    0x1400190ec
   14001907e:	add    DWORD PTR [rbx-0x1a],ebx
   140019081:	xlat   BYTE PTR ds:[rbx]
   140019082:	push   rdi
   140019083:	js     0x1400190e9
   140019085:	movabs ds:0x6b5be58f5cafa46,al
   14001908e:	out    dx,eax
   14001908f:	(bad)  
   140019090:	push   rbp
   140019091:	jbe    0x14001903d
   140019093:	es or  edx,edx
   140019096:	sub    dh,bl
   140019098:	(bad)  
   140019099:	mov    esi,0x747ec511
   14001909e:	xlat   BYTE PTR ds:[rbx]
   14001909f:	out    dx,eax
   1400190a0:	(bad)
   1400190a3:	jrcxz  0x1400190c1
   1400190a5:	fs loopne 0x1400190d3
   1400190a8:	fild   WORD PTR [rip+0xffffffffedb73978]        # 0x12db8ca26
   1400190ae:	rex.WB
   1400190af:	rex.WB sbb rax,0xffffffffef7b6428
   1400190b5:	in     al,dx
   1400190b6:	mov    bh,0x6e
   1400190b8:	jg     0x1400190af
   1400190ba:	repnz icebp 
   1400190bc:	(bad)  
   1400190bd:	mov    WORD PTR [rcx],es
   1400190bf:	sbb    esi,0xffffffe6
   1400190c2:	sbb    dh,BYTE PTR [rdx+0x58f727b7]
   1400190c8:	jl     0x1400190a9
   1400190ca:	jge    0x140019084
   1400190cc:	adc    dh,dl
   1400190ce:	ret    
   1400190cf:	std    
   1400190d0:	cmp    ah,BYTE PTR [rbx-0x2c]
   1400190d3:	lods   eax,DWORD PTR ds:[rsi]
   1400190d4:	ja     0x140019095
   1400190d6:	or     DWORD PTR [rdx+0x62f4f637],eax
   1400190dc:	movabs al,ds:0x8f42dfd064f6e390
   1400190e5:	mov    ah,0x9b
   1400190e8:	(bad)
   1400190eb:	rex.WB retf 0x6016
   1400190ef:	sar    DWORD PTR [rdx],0xc
   1400190f2:	adc    DWORD PTR [rcx+rcx*4+0x58],ebx
   1400190f6:	retf   
   1400190f7:	outs   dx,DWORD PTR ds:[rsi]
   1400190f8:	(bad)  
   1400190f9:	(bad)  
   1400190fa:	movabs eax,ds:0x6d9ebcedfc60bd16
   140019103:	push   0x228a01bd
   140019108:	(bad)  
   140019109:	jrcxz  0x140019110
   14001910b:	or     dl,ch
   14001910d:	neg    BYTE PTR [rax+0x47722032]
   140019113:	rex.WRB movabs r14,0x7e4b0924c19f5f33
   14001911d:	xor    edi,edx
   14001911f:	(bad)  
   140019120:	lods   eax,DWORD PTR ds:[rsi]
   140019121:	adc    ecx,DWORD PTR [rsi]
   140019123:	test   al,0x68
   140019125:	frstor [rsi-0x50eed8f6]
   14001912b:	(bad)  
   14001912c:	cmp    bl,bl
   14001912e:	imul   edi
   140019130:	out    dx,al
   140019131:	(bad)  
   140019132:	in     al,dx
   140019133:	xchg   ebp,eax
   140019134:	(bad)  
   140019135:	rex.RB
   140019136:	rex.WRX out 0xb5,eax
   140019139:	mov    BYTE PTR [rsi+0x27effe4c],cl
   14001913f:	sar    DWORD PTR [rdi],0xd3
   140019142:	xchg   esi,eax
   140019143:	out    0x56,eax
   140019145:	rex.WB (bad) 
   140019147:	test   BYTE PTR [rax],0xe8
   14001914a:	stc    
   14001914b:	rex.RXB xor al,0x7e
   14001914e:	(bad)  [rdi-0x79]
   140019151:	adc    edi,edi
   140019153:	out    0x20,eax
   140019155:	xor    eax,0x50184877
   14001915a:	sahf   
   14001915b:	rex.WRXB push r15
   14001915d:	mov    dl,0x80
   14001915f:	(bad)  
   140019160:	stos   DWORD PTR es:[rdi],eax
   140019161:	or     DWORD PTR [rdi],esp
   140019163:	fdiv   DWORD PTR [rdx+0x6cbb223]
   140019169:	push   0x7a1c1ef4
   14001916e:	neg    DWORD PTR [rdi]
   140019170:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019172:	(bad)  
   140019173:	jno    0x14001918b
   140019175:	xor    dh,al
   140019177:	(bad)  
   140019178:	add    eax,DWORD PTR [rcx]
   14001917a:	mov    esp,0x5b5b5b5c
   14001917f:	add    ebx,DWORD PTR [rcx]
   140019181:	or     eax,esp
   140019183:	jmp    0x11714d546
   140019188:	ins    BYTE PTR es:[rdi],dx
   140019189:	pushf  
   14001918a:	sahf   
   14001918b:	sbb    esp,edx
   14001918d:	cmc    
   14001918e:	mov    bh,0xb
   140019190:	movabs ds:0xd9181660545fc4cd,al
   140019199:	push   rdi
   14001919a:	xchg   DWORD PTR [rax+0x6f],ebx
   14001919d:	idiv   ebx
   14001919f:	ins    DWORD PTR es:[rdi],dx
   1400191a0:	fild   WORD PTR [rax+0x2d]
   1400191a3:	mov    dl,0xcd
   1400191a5:	fidiv  DWORD PTR [rsi+0x67]
   1400191a8:	or     DWORD PTR [rsi],0x72d7c1de
   1400191ae:	or     al,0x3c
   1400191b0:	mov    dh,0x4f
   1400191b2:	ficom  DWORD PTR [rbp+0x28]
   1400191b5:	pop    rdx
   1400191b6:	push   rdi
   1400191b7:	pop    rsi
   1400191b8:	(bad)  
   1400191b9:	lods   eax,DWORD PTR ds:[rsi]
   1400191ba:	out    0x1b,al
   1400191bc:	rex.XB
   1400191bd:	lock (bad) 
   1400191bf:	lahf   
   1400191c0:	push   0xffffffff9e11fe79
   1400191c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400191c6:	sbb    ebx,DWORD PTR [rbp-0x5a7a73cc]
   1400191cc:	iret   
   1400191cd:	(bad)  
   1400191ce:	(bad)  
   1400191cf:	pop    rcx
   1400191d0:	and    cl,ah
   1400191d2:	test   dh,bl
   1400191d4:	ds (bad) 
   1400191d6:	retf   
   1400191d7:	iret   
   1400191d8:	add    eax,0x352ed8a9
   1400191dd:	jbe    0x140019167
   1400191df:	rex.WRXB (bad) 
   1400191e1:	loop   0x1400191cf
   1400191e3:	(bad)  
   1400191e4:	shl    eax,cl
   1400191e6:	mov    esi,0xf3ec9c28
   1400191eb:	sub    esp,DWORD PTR [rbp+rax*1-0xefd7c00]
   1400191f2:	(bad)  
   1400191f3:	jl     0x1400191a5
   1400191f5:	sub    edx,DWORD PTR [rbp+0x51]
   1400191f8:	sbb    ah,dl
   1400191fa:	jge    0x140019264
   1400191fc:	mov    dh,0xef
   1400191fe:	push   rdi
   1400191ff:	fdivrp st(5),st
   140019201:	fldcw  WORD PTR [rbx]
   140019203:	out    dx,eax
   140019204:	test   DWORD PTR [rbx+rcx*2+0x57fe5a59],ebp
   14001920b:	xchg   al,dh
   14001920d:	add    esp,edi
   14001920f:	and    dh,BYTE PTR [rsi+0x2e0c31f9]
   140019215:	(bad)  
   140019216:	movabs ds:0xb87b2b8585b78bf7,al
   14001921f:	mov    ecx,0xf697c51a
   140019224:	scas   eax,DWORD PTR es:[rdi]
   140019225:	(bad)  
   140019226:	xchg   ebp,eax
   140019227:	cmp    al,0x8e
   140019229:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001922a:	test   al,0x71
   14001922c:	push   0xfffffffffa9e3798
   140019231:	(bad)  
   140019232:	cmp    al,bh
   140019234:	or     dh,cl
   140019236:	rex.X (bad) 
   140019238:	pop    rsi
   140019239:	push   rsp
   14001923a:	add    BYTE PTR [rdi],ch
   14001923c:	je     0x140019219
   14001923e:	scas   al,BYTE PTR es:[rdi]
   14001923f:	add    al,0x6c
   140019241:	movabs ds:0xa395d6f278affb87,eax
   14001924a:	sti    
   14001924b:	jp     0x14001921d
   14001924d:	mov    ebp,0x9b242dd1
   140019252:	(bad)  
   140019253:	sub    al,0x13
   140019255:	pop    rbp
   140019256:	test   eax,0x3beb8f00
   14001925b:	sti    
   14001925c:	mov    fs,WORD PTR [rdx]
   14001925e:	(bad)  
   14001925f:	push   rax
   140019260:	rcr    BYTE PTR [rbx+rsi*8-0x2b],0x4d
   140019265:	add    BYTE PTR [rbx-0x78],ah
   140019268:	vpminub xmm7,xmm1,xmm1
   14001926c:	stc    
   14001926d:	push   rbp
   14001926e:	adc    eax,0x72b3f854
   140019273:	jo     0x14001925a
   140019275:	adc    dl,BYTE PTR [rdi+rsi*1-0x2ce5dfe0]
   14001927c:	scas   eax,DWORD PTR es:[rdi]
   14001927d:	nop
   14001927e:	(bad)  
   14001927f:	stos   BYTE PTR es:[rdi],al
   140019280:	movabs al,ds:0xf280a97d55b1f29a
   140019289:	xchg   ebp,eax
   14001928a:	(bad)  
   14001928b:	adc    eax,DWORD PTR [rsi-0x53650be4]
   140019291:	(bad)  
   140019292:	xchg   edi,eax
   140019293:	rex.W jnp 0x14001929a
   140019296:	test   al,0x9f
   140019298:	outs   dx,BYTE PTR ds:[rsi]
   140019299:	stc    
   14001929a:	or     eax,0xef56b026
   14001929f:	rex.WRXB add al,0xb0
   1400192a2:	push   rsi
   1400192a3:	adc    dl,BYTE PTR [rdx+0xdf9775b]
   1400192a9:	sub    al,0x1e
   1400192ab:	loop   0x140019329
   1400192ad:	(bad)  
   1400192ae:	fiadd  DWORD PTR [rdi+rbx*1]
   1400192b1:	loopne 0x140019324
   1400192b3:	push   rbp
   1400192b4:	and    al,BYTE PTR [rax-0xc4416f7]
   1400192ba:	mov    ebp,0xcf8ef6bf
   1400192bf:	pop    rsi
   1400192c0:	cmc    
   1400192c1:	jmp    QWORD PTR [rdx-0x45]
   1400192c4:	lock mov ecx,edi
   1400192c7:	dec    DWORD PTR [rdx+0x10]
   1400192ca:	jle    0x1400192a7
   1400192cc:	(bad)  
   1400192cd:	out    dx,al
   1400192ce:	(bad)  
   1400192cf:	lock xor esp,esi
   1400192d2:	lods   eax,DWORD PTR ds:[rsi]
   1400192d3:	jg     0x140019260
   1400192d5:	xchg   DWORD PTR [rsi-0x1232d888],edi
   1400192db:	out    dx,eax
   1400192dc:	rex.XB jp 0x1400192ec
   1400192df:	(bad)  
   1400192e0:	test   al,0x64
   1400192e2:	icebp  
   1400192e3:	xchg   DWORD PTR [rbx+0x22],esi
   1400192e6:	movabs ds:0x827f9da50edfe40c,al
   1400192ef:	ret    
   1400192f0:	mul    DWORD PTR [rax+0x22f434dd]
   1400192f6:	add    bh,BYTE PTR [rax+0x51]
   1400192f9:	fcomi  st,st(6)
   1400192fb:	xor    DWORD PTR [rdx+0x1dab668d],0xf37eb9df
   140019305:	(bad)  
   140019306:	pop    rbx
   140019307:	sub    esi,eax
   140019309:	pop    rsi
   14001930a:	pop    rdi
   14001930b:	add    BYTE PTR [rbx+0x7c2fa58c],0x7c
   140019312:	xor    al,ch
   140019314:	movabs al,ds:0x54245000068163af
   14001931d:	and    esi,esp
   14001931f:	jne    0x140019315
   140019321:	sub    BYTE PTR [rax-0x2a],bh
   140019324:	popf   
   140019325:	test   esi,edi
   140019327:	rex.WR sub BYTE PTR [rbx+0x6f82e48],r13b
   14001932e:	(bad)  
   14001932f:	fcmovnbe st,st(6)
   140019331:	ds out dx,eax
   140019333:	sub    ebp,DWORD PTR [rcx+0x790be4b9]
   140019339:	out    0x4e,al
   14001933b:	mov    edi,0xf0b35f79
   140019340:	rcl    DWORD PTR [rbp+0x112b981],1
   140019346:	jne    0x14001936d
   140019348:	xlat   BYTE PTR ds:[rbx]
   140019349:	(bad)  
   14001934a:	jmp    0x14001934c
   14001934c:	push   0xffffffffad6a3eec
   140019351:	add    DWORD PTR [rcx-0x878dd1e],edi
   140019357:	inc    BYTE PTR [rdi]
   140019359:	xor    BYTE PTR [rbp+0x59f32840],0xc1
   140019360:	xchg   ebx,eax
   140019361:	jg     0x14001932f
   140019363:	pop    rdi
   140019364:	and    BYTE PTR [rdi-0x2b4e9b33],bl
   14001936a:	cld    
   14001936b:	test   al,0xbd
   14001936d:	verr   WORD PTR [rbp-0x184e8d9]
   140019374:	div    DWORD PTR [rdi-0x151982]
   14001937a:	mov    WORD PTR [rbx],?
   14001937c:	sti    
   14001937d:	cld    
   14001937e:	scas   eax,DWORD PTR es:[rdi]
   14001937f:	sub    al,0xe1
   140019381:	mov    bh,0xed
   140019383:	int3   
   140019384:	sub    BYTE PTR [rbx+0x48],dl
   140019387:	addr32 je 0x140019344
   14001938a:	div    ecx
   14001938c:	sahf   
   14001938d:	(bad)  
   14001938e:	mov    edi,0xef4cc2d
   140019393:	movabs ds:0x96851c9c94010b7b,al
   14001939c:	or     dl,BYTE PTR [rbx]
   14001939e:	sbb    al,0xa
   1400193a0:	adc    BYTE PTR [rcx],ah
   1400193a2:	or     BYTE PTR [rdi],0xdc
   1400193a5:	mov    ch,al
   1400193a7:	scas   eax,DWORD PTR es:[rdi]
   1400193a8:	jle    0x1400193b0
   1400193aa:	jnp    0x1400193fb
   1400193ac:	loopne 0x1400193ba
   1400193ae:	retf   
   1400193af:	mov    DWORD PTR [rdi+0x54],ebx
   1400193b2:	add    bh,bl
   1400193b4:	jmp    0x14001942c
   1400193b6:	(bad)  
   1400193b7:	and    al,0x30
   1400193b9:	pop    rbp
   1400193ba:	in     eax,dx
   1400193bb:	fdivr  DWORD PTR [rax+rbx*8]
   1400193be:	int3   
   1400193bf:	sbb    eax,0xf2b9bfdd
   1400193c4:	fiadd  WORD PTR [rax]
   1400193c6:	stos   BYTE PTR es:[rdi],al
   1400193c7:	retf   
   1400193c8:	clc    
   1400193c9:	mov    edi,0xe5af7a41
   1400193ce:	(bad)  
   1400193cf:	push   rsi
   1400193d0:	(bad)  
   1400193d1:	in     al,0x10
   1400193d3:	movabs al,ds:0xa29f9067bd5a6a90
   1400193dc:	cld    
   1400193dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400193de:	(bad)  
   1400193df:	sub    DWORD PTR [rdi],0x33
   1400193e2:	cld    
   1400193e3:	xchg   ebp,eax
   1400193e4:	rex.X (bad) 
   1400193e6:	loopne 0x140019372
   1400193e8:	movabs al,ds:0x5b59d5023f49a578
   1400193f2:	js     0x14001944f
   1400193f4:	movsxd ecx,DWORD PTR [rsi+0x5e8fb992]
   1400193fa:	adc    eax,0x9881d1e8
   1400193ff:	mov    edi,0xcadcf4b7
   140019404:	lods   eax,DWORD PTR ds:[rsi]
   140019405:	cmp    bl,al
   140019407:	jp     0x140019406
   140019409:	rex.WB mov es,WORD PTR [r9+0x41]
   14001940d:	or     al,0xaa
   14001940f:	mov    al,0x3
   140019411:	sub    BYTE PTR [rip+0xffffffff89c6cd83],0x54        # 0xc9c8619b
   140019418:	xchg   edx,eax
   140019419:	sub    BYTE PTR [rdx*2-0x2069d286],al
   140019420:	rex.XB (bad) 
   140019422:	sub    dh,BYTE PTR [rbx-0x1d73dca2]
   140019428:	jg     0x1400193e2
   14001942a:	(bad)  
   14001942b:	cmp    DWORD PTR [rdx+0x1df0f9dc],edi
   140019431:	lahf   
   140019432:	mov    esi,0x2ed1b7e6
   140019437:	loope  0x1400194b6
   140019439:	or     edi,DWORD PTR gs:[rdi+0x240e76d]
   140019440:	imul   ecx,DWORD PTR [rax-0xfc1a117],0xffffff8d
   140019447:	mov    edi,0x4717661f
   14001944c:	mov    al,0x79
   14001944e:	(bad)  
   14001944f:	sub    DWORD PTR [rdx],0xc9a0d1bb
   140019455:	push   rax
   140019456:	xchg   esi,eax
   140019457:	adc    esp,DWORD PTR [rbp+0x347ec7ff]
   14001945d:	int    0x3d
   14001945f:	cmp    ah,dh
   140019461:	imul   edx,DWORD PTR [rsp+rax*4+0x700545f8],0x4aedb601
   14001946c:	add    BYTE PTR [rax],0xd0
   14001946f:	fcomip st,st(4)
   140019471:	sbb    al,0x3a
   140019473:	jne    0x140019460
   140019475:	(bad)  
   140019477:	popf   
   140019478:	std    
   140019479:	(bad)  
   14001947a:	mov    ebp,0x2c2d84d
   14001947f:	(bad)  
   140019480:	fwait
   140019481:	ret    0xb326
   140019484:	ret    0x59f6
   140019487:	shl    DWORD PTR [rdx+0x10b7259b],0x9f
   14001948e:	pop    rcx
   14001948f:	outs   dx,DWORD PTR ds:[rsi]
   140019490:	adc    r14b,r12b
   140019493:	not    DWORD PTR [rdi+0x2d]
   140019496:	stos   DWORD PTR es:[rdi],eax
   140019497:	rex.WRXB mov es,WORD PTR [r12+r15*1]
   14001949b:	jmp    0x183e46127
   1400194a0:	xchg   esi,eax
   1400194a1:	in     al,0x32
   1400194a3:	(bad)
   1400194a6:	icebp  
   1400194a7:	add    al,0xc4
   1400194a9:	push   0x4e4f72b
   1400194ae:	(bad)  
   1400194af:	out    dx,eax
   1400194b0:	or     DWORD PTR [rax+0x51],ebp
   1400194b3:	add    edi,ebx
   1400194b5:	mov    ebp,0x833c0046
   1400194ba:	push   rax
   1400194bb:	or     DWORD PTR [rbp+0x73],eax
   1400194be:	rex.RXB lods al,BYTE PTR ds:[rsi]
   1400194c0:	sub    dl,cl
   1400194c2:	fnsave [rsi+0x53]
   1400194c5:	(bad)  
   1400194c6:	and    BYTE PTR [rdi-0x4],0x51
   1400194ca:	shr    esi,0xbb
   1400194cd:	mov    cl,0x72
   1400194cf:	lahf   
   1400194d0:	rex.RXB push r9
   1400194d2:	lods   al,BYTE PTR ds:[rsi]
   1400194d3:	adc    ecx,DWORD PTR [rax]
   1400194d5:	test   BYTE PTR [rcx],0xf9
   1400194d8:	pop    rbx
   1400194d9:	es (bad) 
   1400194db:	mov    ebp,edx
   1400194dd:	cli    
   1400194de:	(bad)  
   1400194df:	outs   dx,BYTE PTR ds:[rsi]
   1400194e0:	std    
   1400194e1:	(bad)  
   1400194e2:	mov    ch,0xbf
   1400194e4:	mov    DWORD PTR [rdi],ebx
   1400194e6:	add    al,0xd8
   1400194e8:	jg     0x1400194a0
   1400194ea:	in     eax,dx
   1400194eb:	cmp    al,0x61
   1400194ed:	ret    0xf38f
   1400194f0:	inc    BYTE PTR [rdi+0x6e]
   1400194f3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400194f4:	test   DWORD PTR [rbx-0x321c9785],esp
   1400194fa:	add    al,0xf4
   1400194fc:	rex.WX or BYTE PTR [rax],sil
   1400194ff:	fs xchg edi,eax
   140019501:	mov    DWORD PTR [rbx+0x72],esi
   140019504:	fs add eax,0x9b423fde
   14001950a:	jg     0x140019501
   14001950c:	rex.WRB mov r12,cs
   14001950f:	sar    DWORD PTR [rax+0x11],0x45
   140019513:	add    DWORD PTR [rdi],edx
   140019515:	adc    eax,0xf2dd8bc0
   14001951a:	rex push rcx
   14001951c:	icebp  
   14001951d:	imul   ebx,DWORD PTR [rax+0x7d1f06ac],0xb7a9c6ed
   140019527:	ja     0x140019531
   140019529:	jnp    0x1400194e7
   14001952b:	out    dx,eax
   14001952c:	ds int3 
   14001952e:	rex.WX xchg BYTE PTR [rsi],sil
   140019531:	movabs ds:0xbf882be49d20594e,eax
   14001953a:	sbb    dl,dh
   14001953c:	add    bl,BYTE PTR [rbx+0x43ef0155]
   140019542:	sub    eax,edi
   140019544:	and    DWORD PTR [rdi-0xc],esp
   140019547:	sub    r12b,BYTE PTR [r10-0x5]
   14001954b:	ror    DWORD PTR [rax],1
   14001954d:	mov    esi,0x38e404ac
   140019552:	xor    DWORD PTR [rdi],ebx
   140019554:	and    edx,DWORD PTR [rsi+rbp*2+0x39909180]
   14001955b:	scas   al,BYTE PTR es:[rdi]
   14001955c:	(bad)  
   14001955d:	movabs ds:0xa9611a2809da9191,eax
   140019566:	mov    dl,0x1b
   140019568:	or     al,dl
   14001956a:	paddsb mm4,QWORD PTR [rcx]
   14001956d:	rex.WRXB or r15b,BYTE PTR [r9]
   140019570:	sub    ah,cl
   140019572:	xor    eax,0x3e8c64c8
   140019577:	adc    r12,rsi
   14001957a:	rex.WR
   14001957b:	rex jrcxz 0x140019589
   14001957e:	loopne 0x1400195df
   140019580:	(bad)  
   140019581:	retf   
   140019582:	mov    WORD PTR [rax],es
   140019584:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019585:	(bad)  
   140019586:	ret    0x7e5f
   140019589:	loopne 0x140019536
   14001958b:	xchg   edi,eax
   14001958c:	jmp    FWORD PTR [rdi]
   14001958e:	xor    ebx,DWORD PTR [rbx]
   140019590:	(bad)  
   140019591:	xor    dh,BYTE PTR [rsi+0x183f7e13]
   140019597:	ret    0x9b6f
   14001959a:	int3   
   14001959b:	lods   eax,DWORD PTR ds:[rsi]
   14001959c:	in     al,dx
   14001959d:	(bad)  
   14001959e:	retf   
   14001959f:	out    0x4a,al
   1400195a1:	loopne 0x1400195e1
   1400195a3:	fdivp  st(3),st
   1400195a5:	fsub   QWORD PTR [rbp-0x4c]
   1400195a8:	neg    BYTE PTR [rbp-0x79094b3d]
   1400195ae:	or     BYTE PTR [rbx+rsi*4],cl
   1400195b1:	jb     0x140019601
   1400195b3:	in     eax,0xf3
   1400195b5:	(bad)  
   1400195b6:	rex.R pop rdx
   1400195b8:	ja     0x1400195a6
   1400195ba:	rex.R ja 0x1400195b1
   1400195bd:	iret   
   1400195be:	jno    0x1400195b0
   1400195c0:	xchg   r12d,eax
   1400195c2:	stc    
   1400195c3:	adc    BYTE PTR [rdi],dl
   1400195c5:	adc    eax,0x64da05c0
   1400195ca:	nop
   1400195cb:	ins    BYTE PTR es:[rdi],dx
   1400195cc:	and    eax,DWORD PTR [rax]
   1400195ce:	xor    al,0x1b
   1400195d0:	(bad)  
   1400195d1:	mov    edx,0x4cce6dd7
   1400195d6:	mov    fs,WORD PTR [rbp+rdx*4-0x6baffb09]
   1400195dd:	cmp    al,0xfa
   1400195df:	fdiv   QWORD PTR [rip+0x546b42d7]        # 0x1946cd8bc
   1400195e5:	or     BYTE PTR [rdx+0x68],dh
   1400195e8:	stc    
   1400195e9:	loop   0x14001964d
   1400195eb:	ins    DWORD PTR es:[rdi],dx
   1400195ec:	fst    QWORD PTR [rdx-0x84141e9]
   1400195f2:	(bad)  [rdi-0x405a820e]
   1400195f8:	stos   DWORD PTR es:[rdi],eax
   1400195f9:	in     al,dx
   1400195fa:	sbb    BYTE PTR [rcx],dl
   1400195fc:	lods   eax,DWORD PTR ds:[rsi]
   1400195fd:	mov    dh,0xdd
   1400195ff:	icebp  
   140019600:	or     al,0x9c
   140019602:	rex
   140019603:	rex.WXB rol r12,0xac
   140019607:	or     BYTE PTR [rdx-0x4524111a],al
   14001960d:	add    dl,ah
   14001960f:	rcr    BYTE PTR ds:[rbp-0x7e],0x56
   140019614:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019615:	movabs eax,ds:0xd23e216f4837dc1
   14001961e:	rcl    DWORD PTR [rcx+0x4fc2fe59],cl
   140019624:	push   rbp
   140019625:	and    eax,0xd0083c61
   14001962a:	push   rsi
   14001962b:	or     BYTE PTR [rsi],dh
   14001962d:	(bad)  [rbx+0x68]
   140019630:	xor    BYTE PTR [rdi],bh
   140019632:	fdivr  st,st(1)
   140019634:	outs   dx,BYTE PTR ds:[rsi]
   140019635:	clc    
   140019636:	fcmove st,st(7)
   140019638:	ds js  0x140019623
   14001963b:	pop    rdi
   14001963c:	(bad)  
   14001963d:	xor    bl,dl
   14001963f:	(bad)  
   140019640:	xchg   DWORD PTR [rdi+0x2a],edx
   140019643:	(bad)  
   140019645:	rex.X mov dil,0x73
   140019648:	out    0xa,eax
   14001964a:	lock xchg edi,eax
   14001964c:	jns    0x140019625
   14001964e:	test   eax,0xfd7ee81d
   140019653:	sbb    bl,BYTE PTR [rdx-0x47]
   140019656:	test   eax,0x7277ef02
   14001965b:	sar    BYTE PTR [rbp+0x0],1
   14001965e:	fnstenv [rbx+0x1fb9ef06]
   140019664:	ret    
   140019665:	test   esp,0x405ad3a2
   14001966b:	in     al,0xa2
   14001966d:	add    bh,BYTE PTR [rax+0x5c59db10]
   140019673:	add    edi,0xbf1ff67b
   140019679:	movsxd esp,ebx
   14001967b:	clc    
   14001967c:	jne    0x1400196bb
   14001967e:	rex.W xlat BYTE PTR ds:[rbx]
   140019680:	jns    0x1400196ee
   140019682:	pop    rsi
   140019683:	rex.XB jg 0x14001969a
   140019686:	rex.WX add QWORD PTR [rbx],rcx
   140019689:	or     bl,ch
   14001968b:	movabs ds:0xc5b10d6c5a9d756,eax
   140019694:	and    al,0x9d
   140019696:	test   BYTE PTR [rbx+rbx*1+0x311b46b0],dl
   14001969d:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001969f:	in     al,0xe9
   1400196a1:	(bad)  
   1400196a2:	fisubr WORD PTR [rsi+rdi*4]
   1400196a5:	sti    
   1400196a6:	sti    
   1400196a7:	xchg   edx,eax
   1400196a8:	or     al,0x54
   1400196aa:	rex.RB jno 0x1400196d4
   1400196ad:	rex.WX (bad) 
   1400196af:	(bad)  
   1400196b0:	lahf   
   1400196b1:	fild   WORD PTR [rdx-0x70]
   1400196b4:	cdq    
   1400196b5:	push   rdi
   1400196b6:	xor    dh,bh
   1400196b8:	add    DWORD PTR [rax+0x76500f5a],ecx
   1400196be:	or     al,0x8a
   1400196c0:	fcmove st,st(0)
   1400196c2:	shr    dh,1
   1400196c4:	ret    
   1400196c5:	jmp    0x1400196c2
   1400196c7:	add    esp,DWORD PTR [rax+0x2b9a4e59]
   1400196cd:	add    BYTE PTR [rax-0x6b],dh
   1400196d0:	mov    DWORD PTR [rsi+0x72],ecx
   1400196d3:	mov    dl,0xcf
   1400196d5:	std    
   1400196d6:	and    BYTE PTR [rax-0x61],cl
   1400196d9:	(bad)  
   1400196da:	in     eax,0xf6
   1400196dc:	rex.WX (bad) 
   1400196de:	add    BYTE PTR [rbp-0x294ffe9e],al
   1400196e4:	rcl    BYTE PTR [rbx],1
   1400196e6:	mov    edi,0x9fbef8f1
   1400196eb:	std    
   1400196ec:	fcomp  st(0)
   1400196ee:	shr    BYTE PTR [rcx],1
   1400196f0:	ins    BYTE PTR es:[rdi],dx
   1400196f1:	idiv   ecx
   1400196f3:	jg     0x140019725
   1400196f5:	test   DWORD PTR [rdi+0x12eccedc],edi
   1400196fb:	add    BYTE PTR [rax],al
   1400196fd:	(bad)  
   1400196fe:	and    cl,0xb9
   140019701:	sub    DWORD PTR [rsi+rdi*4+0x70],esi
   140019705:	xor    ebp,DWORD PTR [rip+0xffffffffbe0bdf5e]        # 0xfe0d7669
   14001970b:	pop    rsp
   14001970c:	mov    esp,0x117bce26
   140019711:	and    DWORD PTR [rdx-0x26],edx
   140019714:	ja     0x140019753
   140019716:	xchg   esi,eax
   140019717:	(bad)  
   140019718:	(bad)  
   140019719:	scas   eax,DWORD PTR es:[rdi]
   14001971a:	pop    rbx
   14001971b:	push   rsi
   14001971c:	adc    edi,DWORD PTR [rsi-0x2bd1ff58]
   140019722:	mov    dh,0xdd
   140019724:	adc    eax,0x1a452ea0
   140019729:	rex.WRX imul r8,QWORD PTR [rdi+0x2e],0x4d
   14001972e:	or     edi,DWORD PTR [rdi]
   140019730:	sbb    al,0x3
   140019732:	jne    0x140019736
   140019734:	mov    WORD PTR [rcx-0x5e9054c9],es
   14001973a:	mov    ebp,0xcc6c0b90
   14001973f:	(bad)  
   140019740:	sbb    esi,esp
   140019742:	(bad)  
   140019743:	and    bh,BYTE PTR [rsi+rsi*4-0x7bf3914e]
   14001974a:	push   rax
   14001974b:	test   eax,0xd7b90fc5
   140019750:	jle    0x1400196de
   140019752:	rex adc eax,0x5e508b9
   140019758:	(bad)  
   140019759:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001975a:	xor    BYTE PTR [rdx-0x2a],bl
   14001975d:	ds repz add al,0x16
   140019761:	rex.RX mov WORD PTR [rip+0xffffffffc2307a39],ss        # 0x1023211a1
   140019768:	rcr    BYTE PTR [rcx],1
   14001976a:	jle    0x1400197b3
   14001976c:	adc    DWORD PTR [rcx],esp
   14001976e:	movabs ds:0xaad69a84a806e578,eax
   140019777:	rex.WXB and rcx,QWORD PTR [r11]
   14001977a:	mov    BYTE PTR [rax],al
   14001977c:	push   rdi
   14001977d:	adc    dl,BYTE PTR [rdx-0x50d034ce]
   140019783:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019784:	imul   ebp,DWORD PTR [rcx+0x14d27b99],0x74ae6ce5
   14001978e:	xchg   ebx,eax
   14001978f:	rex.X or BYTE PTR [rax+0x4c299b08],al
   140019796:	(bad)  
   140019797:	shr    eax,1
   140019799:	lock mov edi,0xec4f0ff8
   14001979f:	jns    0x1400197a7
   1400197a1:	pop    rcx
   1400197a2:	clc    
   1400197a3:	jae    0x140019813
   1400197a5:	dec    DWORD PTR [rdi]
   1400197a7:	mov    edx,0x8e76dbf0
   1400197ac:	jle    0x140019747
   1400197ae:	iret   
   1400197af:	(bad)  
   1400197b0:	(bad)  
   1400197b1:	cmc    
   1400197b2:	or     dl,bh
   1400197b4:	mov    esi,0x7f3086f4
   1400197b9:	rex.RB (bad) 
   1400197bb:	shl    BYTE PTR [rip+0x68241e1e],cl        # 0x1a825b5df
   1400197c1:	xchg   esi,eax
   1400197c2:	and    BYTE PTR [rcx+0x2f],dl
   1400197c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400197c6:	(bad)  
   1400197c7:	sar    DWORD PTR [rdi+rbp*8+0x7a22aebf],cl
   1400197ce:	rex.W
   1400197cf:	lock movabs ds:0x27815c19db90b802,al
   1400197d9:	cmp    bh,BYTE PTR [rbx-0x19]
   1400197dc:	(bad)  
   1400197de:	cmp    eax,0xcd03bc3e
   1400197e3:	ins    DWORD PTR es:[rdi],dx
   1400197e4:	sar    ebp,0x7c
   1400197e7:	push   0xfffffffffffffff9
   1400197e9:	cli    
   1400197ea:	xchg   esi,eax
   1400197eb:	add    BYTE PTR [rax+rsi*2-0x21],ah
   1400197ef:	jge    0x1400197eb
   1400197f1:	rex.WX test QWORD PTR [rdi-0x4ac236d6],rsi
   1400197f8:	call   0x14c846427
   1400197fd:	adc    al,0x31
   1400197ff:	test   al,0xa2
   140019801:	test   al,0x82
   140019803:	mov    dh,0xea
   140019805:	(bad)  
   140019806:	rol    DWORD PTR [rbx+0x76],0x21
   14001980a:	rex.RX push rdi
   14001980c:	and    BYTE PTR [rbp-0x5f],dl
   14001980f:	or     al,0xc
   140019811:	(bad)  
   140019812:	jnp    0x1400197e3
   140019814:	jle    0x140019821
   140019816:	adc    ebx,DWORD PTR [rdx]
   140019818:	(bad)  
   140019819:	(bad)  [rip+0xffffffff842ef270]        # 0xc4308a90
   140019820:	jl     0x1400197a9
   140019822:	add    DWORD PTR [rdx],ebp
   140019824:	cld    
   140019825:	in     al,0x96
   140019827:	(bad)  
   140019828:	sbb    ch,dl
   14001982a:	retf   
   14001982b:	add    bl,BYTE PTR [rdi-0x4e]
   14001982e:	clc    
   14001982f:	mov    ecx,0x90429fc6
   140019834:	hlt    
   140019835:	pop    rsi
   140019836:	mov    dh,0x5a
   140019838:	and    BYTE PTR [rdx],0xcf
   14001983b:	pop    rdi
   14001983c:	rol    DWORD PTR [rax+0x2],1
   14001983f:	push   rsi
   140019840:	mov    esi,0xbf03534
   140019845:	(bad)  
   140019846:	fnsave [rdi+0x7f1fb92f]
   14001984c:	(bad)  
   14001984d:	sub    eax,0x1cedd6ff
   140019852:	out    dx,al
   140019853:	shl    BYTE PTR [rcx-0xc],0x6d
   140019857:	cmp    al,0xc0
   140019859:	rex.XB pop r15
   14001985b:	mov    edx,0xf7f76693
   140019860:	jno    0x140019855
   140019862:	sbb    bl,BYTE PTR [rbx+0x17]
   140019865:	sar    esp,cl
   140019867:	or     BYTE PTR [rdx+0x6887a5d3],0xed
   14001986e:	xchg   ebx,eax
   14001986f:	pop    rdi
   140019870:	(bad)  
   140019871:	sahf   
   140019872:	or     DWORD PTR [rsp+rdx*2+0x0],ebx
   140019876:	(bad)  
   140019877:	shl    DWORD PTR [rsi-0xeefea23],0x20
   14001987e:	jp     0x140019876
   140019880:	cli    
   140019881:	data16 cli 
   140019883:	jge    0x1400198b6
   140019885:	(bad)  
   140019886:	xor    BYTE PTR [rdx+0x7d94ae55],ch
   14001988c:	(bad)  
   14001988d:	xchg   bp,ax
   14001988f:	and    DWORD PTR [rcx-0x4a],esp
   140019892:	rex.WX jge 0x140019911
   140019895:	icebp  
   140019896:	cmc    
   140019897:	rex.XB add r11d,esp
   14001989a:	xchg   ebp,eax
   14001989b:	in     al,0x53
   14001989d:	movabs eax,ds:0x91835ed2b10158f
   1400198a6:	movabs eax,ds:0x826e60c41443a80a
   1400198af:	sub    dl,BYTE PTR [rax+0x3a8a288c]
   1400198b5:	sub    BYTE PTR [rax-0x2f9c4553],0xc4
   1400198bc:	and    BYTE PTR [rbx-0x12],cl
   1400198bf:	push   rcx
   1400198c0:	xchg   esp,eax
   1400198c1:	adc    DWORD PTR [rip+0x1a16d8bd],ebp        # 0x15a187184
   1400198c7:	push   rbp
   1400198c8:	call   0x199b4dd3b
   1400198cd:	jge    0x140019867
   1400198cf:	ret    0x2780
   1400198d2:	or     rdi,QWORD PTR [rdx]
   1400198d5:	(bad)  
   1400198d6:	fist   WORD PTR [rcx+0x7c]
   1400198d9:	push   rdx
   1400198da:	fs lahf 
   1400198dc:	(bad)  
   1400198dd:	add    al,0xf7
   1400198df:	rex.WRB
   1400198e0:	movabs eax,gs:0xca2880512bda5ccb
   1400198ea:	adc    BYTE PTR [rax-0x41061e2],0x95
   1400198f1:	(bad)  
   1400198f2:	cli    
   1400198f3:	(bad)  
   1400198f4:	gs jg  0x140019880
   1400198f7:	jbe    0x14001991c
   1400198f9:	mov    db6,rdx
   1400198fc:	pop    rsi
   1400198fd:	rcl    BYTE PTR [rdx-0x28],1
   140019900:	(bad)  
   140019901:	xor    bl,bl
   140019903:	cmp    DWORD PTR [rdx+0x5],esi
   140019906:	data16 shr cl,1
   140019909:	jle    0x14001989d
   14001990b:	idiv   DWORD PTR [rcx+rdi*8-0x63]
   14001990f:	(bad)  
   140019910:	data16 ja 0x140019932
   140019913:	mov    edx,0xeed00237
   140019918:	xlat   BYTE PTR ds:[rbx]
   140019919:	add    al,0x2
   14001991b:	(bad)  
   14001991c:	rex.B (bad) 
   14001991e:	scas   al,BYTE PTR es:[rdi]
   14001991f:	faddp  st(3),st
   140019921:	xchg   edi,eax
   140019922:	jl     0x14001992d
   140019924:	(bad)  
   140019925:	(bad)  
   140019926:	pop    rsp
   140019927:	push   rsp
   140019928:	add    BYTE PTR [rdi],dl
   14001992a:	jp     0x1400198f7
   14001992c:	int3   
   14001992d:	sub    eax,0x2c7262a0
   140019932:	(bad)  
   140019933:	scas   eax,DWORD PTR es:[rdi]
   140019934:	fist   WORD PTR [rcx-0x5e7cc43a]
   14001993a:	mov    ecx,0x15445233
   14001993f:	(bad)  
   140019941:	jb     0x1400198c6
   140019943:	cli    
   140019944:	fiadd  WORD PTR [rax+0x1d]
   140019947:	jne    0x14001998e
   140019949:	sbb    eax,0xf18d7213
   14001994e:	push   rdi
   14001994f:	fs rex.X
   140019951:	rex.WRXB mov BYTE PTR [r13-0x194a823f],r14b
   140019958:	xor    DWORD PTR [rdx+0x49a10576],esp
   14001995e:	cmp    ah,BYTE PTR [rsi-0xb]
   140019961:	popf   
   140019962:	lock rcl DWORD PTR [rax-0x62],cl
   140019966:	adc    bh,BYTE PTR [rsi+rax*2+0x1e]
   14001996a:	retf   0x9c3e
   14001996d:	xchg   ebx,eax
   14001996e:	jg     0x1400199b2
   140019970:	rcl    edi,0xb9
   140019973:	pop    rdi
   140019974:	(bad)  
   140019975:	cmp    al,0x5f
   140019977:	add    DWORD PTR [rdx+0x2780a410],ebp
   14001997d:	scas   eax,DWORD PTR es:[rdi]
   14001997e:	loopne 0x140019963
   140019980:	sub    esi,edi
   140019982:	(bad)  
   140019983:	in     al,dx
   140019984:	jmp    0x140019991
   140019986:	call   0x1579c5c2f
   14001998b:	(bad)
   14001998e:	push   0x41
   140019990:	push   rdx
   140019991:	fcmovu st,st(3)
   140019993:	add    al,0x60
   140019995:	sbb    esi,edi
   140019997:	cmp    esi,DWORD PTR [rsi-0x310780ae]
   14001999d:	(bad)  
   14001999e:	pop    rsp
   14001999f:	stc    
   1400199a0:	jnp    0x140019a0a
   1400199a2:	xlat   BYTE PTR ds:[rbx]
   1400199a3:	repz jg 0x1400199a5
   1400199a6:	xchg   esp,eax
   1400199a7:	hlt    
   1400199a8:	(bad)  
   1400199a9:	ins    DWORD PTR es:[rdi],dx
   1400199aa:	outs   dx,BYTE PTR ds:[rsi]
   1400199ab:	out    0xce,eax
   1400199ad:	adc    eax,0xfef38fe0
   1400199b2:	scas   eax,DWORD PTR es:[rdi]
   1400199b3:	ficomp WORD PTR [rip+0xffffffffa80607a6]        # 0xe807a15f
   1400199b9:	mov    ecx,0x4790f655
   1400199be:	push   rbp
   1400199bf:	adc    ebx,DWORD PTR [rdi]
   1400199c1:	sbb    al,BYTE PTR [rax-0xd]
   1400199c4:	out    0xdf,eax
   1400199c6:	(bad)  
   1400199c7:	lock and ch,BYTE PTR [rsi]
   1400199ca:	sub    al,BYTE PTR [rax+0x736b6897]
   1400199d0:	add    DWORD PTR [rcx],eax
   1400199d2:	add    BYTE PTR [rip+0x5bb1ce87],ch        # 0x19bb3685f
   1400199d8:	xor    bl,bh
   1400199da:	out    dx,al
   1400199db:	rex.WRX ror BYTE PTR [rax-0x7f7501a7],0x5a
   1400199e3:	add    eax,0x157eaddf
   1400199e8:	or     dl,BYTE PTR [rsi+0x5f]
   1400199eb:	pop    rsi
   1400199ec:	push   rdi
   1400199ed:	xor    eax,0xa57d0b9
   1400199f2:	fld    TBYTE PTR [rbx-0x65a8aee8]
   1400199f8:	rcl    BYTE PTR [rbx+0x45],0xc4
   1400199fc:	sub    bh,BYTE PTR [rax-0x42]
   1400199ff:	mov    edi,0xa0440644
   140019a04:	imul   eax,DWORD PTR [rbp+0x2],0x75
   140019a08:	gs or  al,al
   140019a0b:	rex.WX jg 0x1400199a3
   140019a0e:	ins    BYTE PTR es:[rdi],dx
   140019a0f:	mov    WORD PTR [rsi+0x3f10abda],ss
   140019a15:	rex.RXB fistp QWORD PTR fs:[r11+0x12]
   140019a1a:	nop
   140019a1b:	(bad)  
   140019a1c:	fild   QWORD PTR [rip+0xffffffffa19c17d4]        # 0xe19db1f6
   140019a22:	iret   
   140019a23:	mov    al,BYTE PTR [rcx+0x21b4108b]
   140019a29:	test   dl,dl
   140019a2b:	push   rdi
   140019a2d:	pop    rax
   140019a2e:	mov    edi,0x99940379
   140019a33:	jle    0x1400199e7
   140019a35:	jge    0x140019a38
   140019a37:	push   rdi
   140019a38:	(bad)  
   140019a39:	push   rbx
   140019a3a:	fwait
   140019a3b:	icebp  
   140019a3c:	(bad)  
   140019a3d:	fdivrp st(2),st
   140019a3f:	test   DWORD PTR [rbx-0x6ec28282],ebp
   140019a45:	(bad)  
   140019a48:	or     bh,bh
   140019a4a:	(bad)  
   140019a4b:	in     eax,dx
   140019a4c:	sbb    al,0xc4
   140019a4e:	(bad)  
   140019a4f:	add    esp,edx
   140019a51:	(bad)  
   140019a52:	repnz sub DWORD PTR [rdi-0x2cb3d441],0x9877ba20
   140019a5d:	jmp    0x140019a74
   140019a5f:	cwde   
   140019a60:	(bad)  
   140019a61:	ja     0x140019a36
   140019a63:	(bad)  
   140019a64:	mov    DWORD PTR [rdi],edi
   140019a66:	jrcxz  0x1400199eb
   140019a68:	ffreep st(6)
   140019a6a:	rex.RB add eax,0x6d6d12f0
   140019a70:	rex.X xchg eax,eax
   140019a72:	add    BYTE PTR [rbx+rdx*4+0x1be6c761],al
   140019a79:	stc    
   140019a7a:	je     0x140019a98
   140019a7c:	or     ebp,ebx
   140019a7e:	mov    ebx,0xea0062
   140019a83:	(bad)  
   140019a84:	xchg   ebp,eax
   140019a85:	cli    
   140019a86:	stc    
   140019a87:	(bad)  
   140019a88:	(bad)  
   140019a89:	adc    ebp,edx
   140019a8b:	retf   0x7b58
   140019a8e:	sub    eax,0x4470575
   140019a94:	jne    0x140019aab
   140019a96:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019a97:	(bad)  
   140019a98:	(bad)  
   140019a99:	rex.RX jne 0x140019ab1
   140019a9c:	push   rsp
   140019a9d:	pop    rcx
   140019a9e:	rex.R pop rbx
   140019aa0:	pushf  
   140019aa1:	push   rbx
   140019aa2:	jns    0x140019a28
   140019aa4:	rex.WX adc rax,0x41c96545
   140019aaa:	lock push rax
   140019aac:	pop    rsi
   140019aad:	or     al,0xe6
   140019aaf:	test   ebx,0x4852be89
   140019ab5:	or     eax,DWORD PTR [rdx+0x10eeb3de]
   140019abb:	lods   al,BYTE PTR ds:[rsi]
   140019abc:	es and ah,ah
   140019abf:	pop    rax
   140019ac0:	mov    esi,0x45bb00a6
   140019ac5:	iret   
   140019ac6:	mov    esp,0x4b79c39e
   140019acb:	repnz and DWORD PTR [rip+0xffffffffc9c88346],ecx        # 0x109ca1e18
   140019ad2:	imul   eax,DWORD PTR [rdx],0xe672cdb2
   140019ad8:	rex.R neg BYTE PTR [rcx-0x16]
   140019adc:	xchg   BYTE PTR [rdi-0x3],ch
   140019adf:	(bad)          # 0x156c920dc
   140019ae0:	nop    esp
   140019ae3:	test   edi,eax
   140019ae5:	(bad)  
   140019ae6:	jp     0x140019ace
   140019ae8:	mov    cl,0xbd
   140019aea:	jg     0x140019acb
   140019aec:	rex.RB loope 0x140019b1e
   140019aef:	mov    bh,0xed
   140019af1:	mov    ecx,0xf0342d02
   140019af6:	addr32 jl 0x140019ad9
   140019af9:	xor    DWORD PTR [rdi+0x10dcccd2],0x4441dc6f
   140019b03:	adc    eax,0xda52f400
   140019b08:	(bad)  
   140019b09:	mov    bh,BYTE PTR [rsi+0x7fa18e7b]
   140019b0f:	std    
   140019b10:	movabs ds:0x80006e2db6a97802,al
   140019b19:	mov    al,0x48
   140019b1b:	cmp    eax,0xa9a36ec7
   140019b20:	ja     0x140019b19
   140019b22:	rex.R mov WORD PTR [rax+0xb2ac730],ds
   140019b29:	jb     0x140019b40
   140019b2b:	test   DWORD PTR [rcx-0x3eed551],edi
   140019b31:	stos   BYTE PTR es:[rdi],al
   140019b32:	xchg   edx,eax
   140019b33:	in     al,0x9d
   140019b35:	rex.WRX or al,0xa8
   140019b38:	stos   DWORD PTR es:[rdi],eax
   140019b39:	test   al,0x82
   140019b3b:	(bad)  
   140019b3c:	push   rcx
   140019b3d:	fwait
   140019b3e:	fwait
   140019b3f:	(bad)  
   140019b40:	cld    
   140019b41:	or     BYTE PTR [rbx],0xbb
   140019b44:	cld    
   140019b45:	ss (bad) 
   140019b47:	rex.WX movabs rsp,0x7413ca824d6c1ca6
   140019b51:	rex.W (bad) 
   140019b53:	mov    ebp,0x5e6b6d98
   140019b58:	rex.X
   140019b59:	rex.WX fcomp DWORD PTR [rcx+0x43]
   140019b5d:	(bad)  
   140019b5e:	push   rsi
   140019b5f:	mov    eax,0xa5ef84ae
   140019b64:	rol    BYTE PTR [rsi-0x44984393],0xbe
   140019b6b:	mov    edi,0x3fad0ed4
   140019b70:	fstp   st(7)
   140019b72:	js     0x140019b75
   140019b74:	rex.W in al,dx
   140019b76:	jp     0x140019afb
   140019b78:	ret    
   140019b79:	rcr    edi,1
   140019b7b:	jns    0x140019beb
   140019b7d:	in     al,0xbf
   140019b7f:	inc    DWORD PTR [rbx-0x2e38dc5d]
   140019b85:	es std 
   140019b87:	cs pop rdx
   140019b89:	(bad)  
   140019b8a:	mov    bl,0x6d
   140019b8c:	(bad)  [rbx+0x5]
   140019b8f:	and    BYTE PTR [rdx],0x79
   140019b92:	call   0x1b80113c6
   140019b97:	fistp  WORD PTR [rax]
   140019b99:	out    0x8f,al
   140019b9b:	in     al,dx
   140019b9c:	(bad)  
   140019b9d:	out    0x1b,al
   140019b9f:	mov    DWORD PTR [rax+0x5ff6303f],edi
   140019ba5:	rex.XB sub ecx,DWORD PTR [r15]
   140019ba8:	jg     0x140019b46
   140019baa:	(bad)  
   140019bac:	jns    0x140019bff
   140019bae:	add    DWORD PTR [rsp+rdx*2+0x401476db],edi
   140019bb5:	(bad)  
   140019bb6:	imul   esp,DWORD PTR [rax-0x53654c47],0x5dcd5776
   140019bc0:	jne    0x140019b57
   140019bc2:	ret    
   140019bc3:	outs   dx,DWORD PTR ds:[rsi]
   140019bc4:	sbb    eax,0x22bad815
   140019bc9:	push   rsp
   140019bca:	mov    ch,0x95
   140019bcc:	hlt    
   140019bcd:	adc    ch,dl
   140019bcf:	sbb    BYTE PTR [rcx+0x55],dl
   140019bd2:	push   rcx
   140019bd3:	lods   eax,DWORD PTR ds:[rsi]
   140019bd4:	mov    esi,0x5dda8c28
   140019bd9:	add    dl,dl
   140019bdb:	iret   
   140019bdc:	or     eax,0x8278401d
   140019be1:	movabs al,ds:0x71e5ed6b092a9ee4
   140019bea:	js     0x140019bb6
   140019bec:	mov    esi,0xb760539
   140019bf1:	outs   dx,DWORD PTR ds:[rsi]
   140019bf2:	mov    esi,0x56e6b7bc
   140019bf7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019bf8:	loope  0x140019b7c
   140019bfa:	pop    rsp
   140019bfb:	or     bh,BYTE PTR [rdi+0x9]
   140019bfe:	adc    eax,DWORD PTR [rax]
   140019c00:	rex.WRB mul QWORD PTR [rip+0x5dfd88ff]        # 0x19dff2506
   140019c07:	mov    cl,0xaf
   140019c09:	rex.WRXB
   140019c0a:	rex.RXB retf 
   140019c0c:	call   rdi
   140019c0e:	jrcxz  0x140019be9
   140019c10:	retf   0x441d
   140019c13:	rex.W
   140019c14:	or     r15d,DWORD PTR [rdi+0x79]
   140019c18:	push   0xfffffffffffffff0
   140019c1a:	out    0x7e,eax
   140019c1c:	jmp    0xe0909fb2
   140019c21:	ffree  st(4)
   140019c23:	repz out dx,eax
   140019c25:	es jrcxz 0x140019c27
   140019c28:	rex.X mov dil,0x73
   140019c2b:	lock add bl,BYTE PTR [rdi+0x5ccf7de0]
   140019c32:	lea    edx,[rbp-0x53be391]
   140019c38:	int    0x11
   140019c3a:	mov    esp,0xf77897b7
   140019c3f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019c40:	jns    0x140019c11
   140019c42:	cmp    eax,0x4bc01517
   140019c47:	mov    ecx,0x5405019d
   140019c4c:	add    ebx,esp
   140019c4e:	(bad)  
   140019c4f:	ja     0x140019c67
   140019c51:	out    dx,eax
   140019c52:	out    dx,al
   140019c53:	push   rsp
   140019c54:	xor    al,0xdc
   140019c56:	mov    DWORD PTR [rcx-0x23],edx
   140019c59:	add    BYTE PTR [rax+0x2f6b6710],ch
   140019c5f:	jg     0x140019ca2
   140019c61:	xchg   ebp,eax
   140019c62:	add    al,0xff
   140019c65:	mov    edx,0x22a01756
   140019c6a:	(bad)  
   140019c6b:	xor    eax,0x168fe165
   140019c70:	adc    eax,0xeca262b0
   140019c75:	mov    ebx,0xd22f343b
   140019c7a:	jo     0x140019c79
   140019c7c:	repz push rax
   140019c7e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019c7f:	loope  0x140019c17
   140019c81:	(bad)  
   140019c82:	ds mov bl,0xf8
   140019c85:	rex retf 
   140019c87:	(bad)  
   140019c88:	or     eax,DWORD PTR [rbx+0x5f]
   140019c8b:	movabs ds:0x2b210217363bfc82,al
   140019c94:	mov    esp,DWORD PTR [rax+0x30764f25]
   140019c9a:	es mov ah,0x1e
   140019c9d:	or     BYTE PTR [rbx+0x1b],al
   140019ca0:	pop    rsp
   140019ca1:	rex.RX xor BYTE PTR [rcx+0x7a],r10b
   140019ca5:	(bad)  
   140019ca6:	scas   al,BYTE PTR es:[rdi]
   140019ca7:	out    dx,eax
   140019ca8:	xchg   edi,eax
   140019ca9:	dec    ecx
   140019cab:	(bad)  
   140019cac:	(bad)  
   140019cad:	std    
   140019cae:	sub    al,0x32
   140019cb0:	jmp    0x19ff9ee2c
   140019cb5:	call   0x13026ab30
   140019cba:	rex.RB in al,dx
   140019cbc:	ds add eax,0xc7aefba2
   140019cc2:	shr    BYTE PTR [rsi-0x2088cba2],cl
   140019cc8:	sbb    DWORD PTR [rsi-0x42],esp
   140019ccb:	jne    0x140019d1e
   140019ccd:	add    DWORD PTR [rsp+rdx*4-0x3fafe625],edi
   140019cd4:	sar    DWORD PTR [rbx+rsi*2+0x133d9de3],cl
   140019cdb:	ret    
   140019cdc:	mov    ebx,0xbae6f4ab
   140019ce1:	ss cwde 
   140019ce3:	pcmpeqb mm1,mm4
   140019ce6:	mov    bh,0x37
   140019ce8:	mov    ebp,DWORD PTR [rdi+0x1575f02]
   140019cee:	push   rbp
   140019cef:	sub    eax,0x9353a00a
   140019cf4:	mov    ebx,0x50026507
   140019cf9:	test   al,0xe0
   140019cfb:	rex.WR jl 0x140019d69
   140019cfe:	adc    DWORD PTR [rsi-0x51],ecx
   140019d01:	fmul   DWORD PTR [rbx]
   140019d03:	fldcw  WORD PTR [rdx+0x4a1fcd2b]
   140019d09:	call   FWORD PTR [rdi+0x9]
   140019d0c:	cmp    al,0xb
   140019d0e:	fistp  QWORD PTR [rcx+0x1f]
   140019d11:	jle    0x140019cfa
   140019d13:	cli    
   140019d14:	sub    BYTE PTR [rbx+0x24409a83],dl
   140019d1a:	sar    BYTE PTR [rdi],1
   140019d1c:	pop    rbx
   140019d1d:	outs   dx,DWORD PTR ds:[rsi]
   140019d1e:	xor    al,BYTE PTR [rcx+0x77]
   140019d21:	fs push rax
   140019d23:	and    BYTE PTR [rax],al
   140019d25:	fcomi  st,st(4)
   140019d27:	(bad)  
   140019d28:	retf   0x140a
   140019d2b:	(bad)  
   140019d2c:	or     DWORD PTR [rbx*2-0x48500053],ebx
   140019d33:	jge    0x140019d1a
   140019d35:	retf   0xc03f
   140019d38:	test   BYTE PTR [rdi+rbx*4-0x41],0xbb
   140019d3d:	loope  0x140019cfd
   140019d3f:	out    dx,eax
   140019d40:	jne    0x140019d7d
   140019d42:	rex.RXB and r9d,r10d
   140019d45:	ja     0x140019cf8
   140019d47:	jae    0x140019d32
   140019d49:	rex.WRXB jo 0x140019d34
   140019d4c:	adc    ebx,DWORD PTR [rdi]
   140019d4e:	movabs al,ds:0x2a2e9bdd403d3d3
   140019d57:	js     0x140019d02
   140019d59:	mov    bh,0x36
   140019d5b:	or     cl,BYTE PTR [rax]
   140019d5d:	add    BYTE PTR [rdx+0x27],al
   140019d60:	loopne 0x140019d26
   140019d62:	sbb    edi,edx
   140019d64:	(bad)  
   140019d65:	ds push rax
   140019d67:	push   rdi
   140019d68:	sbb    al,ch
   140019d6a:	test   eax,0xed663a03
   140019d6f:	jmp    0x140019d59
   140019d71:	(bad)  
   140019d72:	fisttp WORD PTR [rcx-0x17b28aff]
   140019d78:	je     0x140019d3e
   140019d7a:	fcmovbe st,st(7)
   140019d7c:	adc    eax,0xb910686b
   140019d81:	and    bh,al
   140019d83:	adc    ch,BYTE PTR [rsi+0x34]
   140019d86:	cld    
   140019d87:	rex.RXB cli 
   140019d89:	ds imul edi
   140019d8c:	outs   dx,DWORD PTR ds:[rsi]
   140019d8d:	jmp    FWORD PTR [rdi]
   140019d8f:	movabs eax,ds:0x307ec5cdc76b00ba
   140019d98:	movabs eax,ds:0x37e99c7513c05e56
   140019da1:	in     al,0xa0
   140019da3:	jle    0x140019d63
   140019da5:	and    eax,DWORD PTR [rbp-0x66bbae70]
   140019dab:	sbb    eax,ebx
   140019dad:	(bad)  
   140019dae:	clc    
   140019daf:	mov    dl,0x12
   140019db1:	enter  0x824a,0x61
   140019db5:	mov    cl,0xc6
   140019db7:	mov    DWORD PTR [rbp-0x40a41088],ecx
   140019dbd:	jb     0x140019da4
   140019dbf:	outs   dx,DWORD PTR ds:[rsi]
   140019dc0:	ins    DWORD PTR es:[rdi],dx
   140019dc1:	(bad)  
   140019dc2:	cld    
   140019dc3:	(bad)  
   140019dc4:	cli    
   140019dc5:	std    
   140019dc6:	(bad)  
   140019dc7:	cmp    cx,di
   140019dca:	(bad)  
   140019dcb:	and    al,0xf7
   140019dcd:	loopne 0x140019d61
   140019dcf:	(bad)  
   140019dd0:	pop    rsi
   140019dd1:	and    DWORD PTR [rbp-0x78e31779],0xffffffb8
   140019dd8:	mov    eax,0xfa4da85d
   140019ddd:	mov    ebp,0x5eb79f59
   140019de2:	add    ch,bh
   140019de4:	(bad)  
   140019de5:	fcomi  st,st(7)
   140019de7:	loopne 0x140019d98
   140019de9:	(bad)  
   140019dea:	(bad)  
   140019deb:	jmp    0x1855eeaee
   140019df0:	neg    ebp
   140019df2:	rex.XB enter 0x3eb0,0x4
   140019df7:	jbe    0x140019dcf
   140019df9:	fidivr WORD PTR [rdx-0x19]
   140019dfc:	mov    bh,0x2d
   140019dfe:	mov    dl,0x1e
   140019e00:	jnp    0x140019dad
   140019e02:	pop    rdi
   140019e03:	mov    ?,esp
   140019e05:	cmp    esp,ecx
   140019e07:	adc    ecx,edi
   140019e09:	js     0x140019e26
   140019e0b:	pop    rbx
   140019e0c:	sbb    al,0x72
   140019e0e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019e0f:	in     al,dx
   140019e10:	iret   
   140019e11:	jl     0x140019dec
   140019e13:	mov    dl,0xb8
   140019e15:	stos   BYTE PTR es:[rdi],al
   140019e16:	in     al,dx
   140019e17:	(bad)  
   140019e18:	ins    DWORD PTR es:[rdi],dx
   140019e19:	jmp    0x1add6534b
   140019e1e:	mov    eax,0xd2ff27ee
   140019e23:	mov    dh,0xf7
   140019e25:	xchg   r14d,eax
   140019e27:	(bad)  
   140019e28:	(bad)  
   140019e29:	(bad)
   140019e2c:	loopne 0x140019e12
   140019e2e:	jns    0x140019e2f
   140019e30:	or     ecx,DWORD PTR [rip+0x1ea7fd7d]        # 0x15ea99bb3
   140019e36:	ds cld 
   140019e38:	iret   
   140019e39:	mov    edi,0x8d303930
   140019e3e:	in     eax,dx
   140019e3f:	sar    bh,1
   140019e41:	movabs ds:0xaa8918bdadd8bff0,al
   140019e4a:	(bad)  
   140019e4b:	cmp    al,0x54
   140019e4d:	loope  0x140019ebb
   140019e4f:	mov    edi,0xf05db8bb
   140019e54:	int    0xb4
   140019e56:	outs   dx,DWORD PTR ds:[rsi]
   140019e57:	(bad)  
   140019e58:	shl    dh,0xfd
   140019e5b:	fstp   st(5)
   140019e5d:	not    DWORD PTR [rsi-0x63]
   140019e60:	push   0xffffffffffffffa1
   140019e62:	push   rbx
   140019e63:	(bad)  
   140019e64:	je     0x140019e50
   140019e66:	sbb    BYTE PTR [rsi-0x21217f62],0x80
   140019e6d:	ficomp WORD PTR [rsi+0x42]
   140019e70:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019e71:	add    edx,esp
   140019e73:	sbb    eax,0x50075542
   140019e78:	rex.WRB or BYTE PTR [r13-0x2f7e5600],r11b
   140019e7f:	and    DWORD PTR [rsi+rcx*1-0x55fbc57f],eax
   140019e86:	and    bh,bh
   140019e88:	xlat   BYTE PTR ds:[rbx]
   140019e89:	add    DWORD PTR [rcx+rdx*1+0x48],edx
   140019e8d:	push   rdi
   140019e8e:	and    esp,DWORD PTR [rcx-0x1bfa95b6]
   140019e94:	xor    eax,DWORD PTR [rax+0x511ff96a]
   140019e9a:	mov    es,WORD PTR [rbp+0x5503d04a]
   140019ea0:	mov    cl,BYTE PTR [rdx]
   140019ea2:	mov    dl,BYTE PTR [rbp+0x14]
   140019ea5:	and    al,0xb9
   140019ea7:	(bad)  
   140019ea8:	fidivr DWORD PTR [rcx-0x1b]
   140019eab:	out    dx,al
   140019eac:	fidiv  WORD PTR ds:[rcx+0x24381747]
   140019eb3:	enter  0x7cfa,0xae
   140019eb7:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140019eb9:	and    ebp,DWORD PTR [rbx+0x4f]
   140019ebc:	sub    eax,0x356f33fb
   140019ec1:	neg    BYTE PTR ds:[rax]
   140019ec4:	and    al,0x9
   140019ec6:	push   0x6fe8e12d
   140019ecb:	(bad)  
   140019ecc:	fscale 
   140019ece:	outs   dx,DWORD PTR ds:[rsi]
   140019ecf:	mov    edi,0x8b303930
   140019ed4:	(bad)  
   140019ed5:	(bad)  
   140019ed6:	mov    edx,0x4dedbffe
   140019edb:	sahf   
   140019edc:	movabs eax,ds:0xb9c617c7085b3dcd
   140019ee5:	mov    BYTE PTR [rax],al
   140019ee7:	pop    rsi
   140019ee8:	scas   al,BYTE PTR es:[rdi]
   140019ee9:	sub    eax,0x140e80a3
   140019eee:	add    eax,0x479ae57c
   140019ef3:	(bad)  
   140019ef4:	out    dx,eax
   140019ef5:	jge    0x140019f34
   140019ef7:	fisttp QWORD PTR [rdi]
   140019ef9:	or     al,ah
   140019efb:	(bad)  
   140019efc:	pop    rdi
   140019efd:	push   rdx
   140019efe:	cmp    eax,DWORD PTR [rcx+rdx*1]
   140019f01:	push   rdx
   140019f02:	es adc eax,0xbe6fb2d6
   140019f08:	stc    
   140019f09:	out    0xc8,al
   140019f0b:	scas   eax,DWORD PTR es:[rdi]
   140019f0c:	gs jrcxz 0x140019f25
   140019f0f:	xor    ebp,edi
   140019f11:	pop    rbp
   140019f12:	je     0x140019f01
   140019f14:	cmp    ecx,DWORD PTR [rdi]
   140019f16:	shl    BYTE PTR [rbx-0x4704fe80],cl
   140019f1c:	sub    BYTE PTR [rcx],bl
   140019f1e:	mov    ch,0xaa
   140019f20:	cmp    al,0xf9
   140019f22:	push   0x6c909c1b
   140019f27:	xor    al,BYTE PTR [rbx-0x4a4505ec]
   140019f2d:	cld    
   140019f2e:	mov    dh,0xa6
   140019f30:	add    eax,0x9e8b0
   140019f35:	xchg   edx,eax
   140019f36:	out    0x2f,eax
   140019f38:	pop    rcx
   140019f39:	rex.X and al,0x29
   140019f3c:	test   eax,0x36028800
   140019f41:	sbb    DWORD PTR [rbx-0x7cec681],esi
   140019f47:	sar    DWORD PTR [rdi],cl
   140019f49:	repz lock and eax,0xf63723f7
   140019f50:	clc    
   140019f51:	mov    ebx,0x72f3e057
   140019f56:	outs   dx,BYTE PTR ds:[rsi]
   140019f57:	in     eax,dx
   140019f58:	(bad)
   140019f5b:	enter  0x3642,0x17
   140019f5f:	mov    bh,0x97
   140019f61:	outs   dx,DWORD PTR ds:[rsi]
   140019f62:	movsxd edi,esp
   140019f64:	(bad)  
   140019f65:	in     eax,dx
   140019f66:	pop    rbp
   140019f67:	ins    DWORD PTR es:[rdi],dx
   140019f68:	mov    WORD PTR [rbp+riz*2+0x15],ds
   140019f6c:	jle    0x140019f4c
   140019f6e:	neg    esi
   140019f70:	mov    ebx,0xf6ecbbb3
   140019f75:	mov    eax,DWORD PTR [rax+0x6b]
   140019f78:	sub    DWORD PTR [rax+0x29],ecx
   140019f7b:	push   0xffffffffffffff82
   140019f7d:	(bad)  
   140019f7e:	sub    BYTE PTR [rcx-0x7b],cl
   140019f81:	rex.RX and r9d,DWORD PTR [rcx+0x21]
   140019f85:	(bad)  
   140019f86:	test   al,0x1
   140019f88:	jg     0x140019fa2
   140019f8a:	adc    esp,DWORD PTR [rcx]
   140019f8c:	rex.RX
   140019f8d:	rex.X test al,0x44
   140019f90:	movsxd eax,DWORD PTR [rax+0x4]
   140019f93:	stc    
   140019f94:	(bad)  
   140019f95:	xor    al,0x84
   140019f97:	add    al,0x49
   140019f99:	add    al,0x7f
   140019f9b:	sub    DWORD PTR [rax+0x3],esp
   140019f9e:	(bad)  
   140019f9f:	sbb    BYTE PTR [rdx+rdi*8-0x4f],cl
   140019fa3:	repnz movabs eax,ds:0x5a856bf42a54d42d
   140019fad:	sti    
   140019fae:	xchg   r9d,eax
   140019fb0:	(bad)  
   140019fb1:	rex.X sub eax,0xb6eedafd
   140019fb7:	fcmovnu st,st(5)
   140019fb9:	ins    DWORD PTR es:[rdi],dx
   140019fba:	mov    ebx,0xceeeedd3
   140019fbf:	int3   
   140019fc0:	cmp    eax,0x79cf78fe
   140019fc5:	fcomip st,st(7)
   140019fc7:	outs   dx,BYTE PTR ds:[rsi]
   140019fc8:	(bad)  
   140019fc9:	lahf   
   140019fca:	jbe    0x140019fbb
   140019fcc:	outs   dx,BYTE PTR ds:[rsi]
   140019fcd:	iret   
   140019fce:	xchg   ebx,eax
   140019fcf:	int3   
   140019fd0:	(bad)  
   140019fd1:	popf   
   140019fd2:	mov    ecx,0xb6676677
   140019fd7:	cmp    eax,0x3be73ce7
   140019fdc:	push   0xfffffffff57bdae1
   140019fe1:	retf   
   140019fe2:	push   rsi
   140019fe3:	pop    rsp
   140019fe4:	cmp    eax,0x9a7b7aa3
   140019fe9:	ret    0x14da
   140019fec:	outs   dx,BYTE PTR ds:[rsi]
   140019fed:	jrcxz  0x14001a01e
   140019fef:	sti    
   140019ff0:	div    DWORD PTR [rdx-0x230bdce4]
   140019ff6:	ret    
   140019ff7:	or     DWORD PTR [rax+rdi*4-0x4a088000],ebx
   140019ffe:	lea    esi,[rbp+0x16]
   14001a001:	xchg   ebp,eax
   14001a002:	mov    WORD PTR [rdx+riz*8-0x21e49b64],fs
   14001a009:	(bad)  
   14001a00a:	or     BYTE PTR [rax-0x1ff8ce53],al
   14001a010:	cld    
   14001a011:	mov    cl,0xdb
   14001a013:	and    ah,BYTE PTR [rbx-0x37]
   14001a016:	rex.R cmc 
   14001a018:	cmp    ah,ah
   14001a01a:	test   DWORD PTR [rdi],esi
   14001a01c:	(bad)  
   14001a01d:	mov    al,BYTE PTR [rip+0xffffffffb31fe145]        # 0xf3218168
   14001a023:	(bad)  
   14001a024:	retf   
   14001a025:	mov    edx,0xef53d96a
   14001a02a:	mov    edi,0x1794ee6c
   14001a02f:	icebp  
   14001a030:	clc    
   14001a031:	push   0xffffffffffffff82
   14001a033:	jae    0x14001a03c
   14001a035:	jb     0x14001a087
   14001a037:	ins    DWORD PTR es:[rdi],dx
   14001a038:	sti    
   14001a039:	jmp    0x13bc0e834
   14001a03e:	(bad)  
   14001a03f:	cld    
   14001a040:	in     eax,dx
   14001a041:	push   0xffffffff855fbf36
   14001a046:	(bad)  
   14001a047:	inc    DWORD PTR [rbx]
   14001a049:	stc    
   14001a04a:	mov    ebx,0x3fccb8de
   14001a04f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a050:	or     al,0xe0
   14001a052:	(bad)
   14001a057:	or     DWORD PTR cs:[rax+rax*2],0x5b
   14001a05c:	stos   DWORD PTR es:[rdi],eax
   14001a05d:	int    0x2f
   14001a05f:	(bad)  
   14001a061:	fnstcw WORD PTR [rbp-0x55]
   14001a064:	addr32 push rsi
   14001a066:	call   0xe79433d1
   14001a06b:	in     eax,0x7e
   14001a06d:	mov    eax,0x21a61f86
   14001a072:	adc    eax,0x7dfc1477
   14001a077:	xor    DWORD PTR [rdi-0x1110edc2],esi
   14001a07d:	mov    esp,0x5a162f4b
   14001a082:	ins    BYTE PTR es:[rdi],dx
   14001a083:	cmp    ecx,edi
   14001a085:	sub    eax,DWORD PTR [rbx-0x55]
   14001a088:	cmp    cl,al
   14001a08a:	sub    DWORD PTR [rcx],ecx
   14001a08c:	add    al,0x1
   14001a08e:	cmc    
   14001a08f:	and    cl,bh
   14001a091:	in     al,dx
   14001a092:	and    al,cl
   14001a094:	mov    esp,0xa7c31a09
   14001a099:	cmc    
   14001a09a:	fdiv   QWORD PTR [rcx]
   14001a09c:	in     eax,0x91
   14001a09e:	jb     0x14001a069
   14001a0a0:	popf   
   14001a0a1:	loop   0x14001a034
   14001a0a3:	rex.RB adc eax,0x467c2394
   14001a0a9:	(bad)  
   14001a0aa:	(bad)  
   14001a0ab:	(bad)  
   14001a0ac:	rex.RX pop rdx
   14001a0ae:	lahf   
   14001a0af:	pop    rsp
   14001a0b0:	sar    BYTE PTR [rbp-0x34c7e610],cl
   14001a0b6:	(bad)  
   14001a0b7:	xor    edi,esp
   14001a0b9:	xor    eax,0xd00937e8
   14001a0be:	sbb    al,al
   14001a0c0:	(bad)
   14001a0c3:	ret    0xa802
   14001a0c6:	(bad)  
   14001a0c7:	out    0x76,al
   14001a0c9:	cld    
   14001a0ca:	(bad)  
   14001a0cb:	lods   eax,DWORD PTR ds:[rsi]
   14001a0cc:	jne    0x14001a063
   14001a0ce:	int    0x0
   14001a0d0:	fwait
   14001a0d1:	mov    DWORD PTR [rdi],ebx
   14001a0d3:	outs   dx,DWORD PTR ds:[rsi]
   14001a0d4:	fsubr  st,st(7)
   14001a0d6:	(bad)  
   14001a0d7:	fisub  WORD PTR [rdi+0x47]
   14001a0da:	push   0x60
   14001a0dc:	xor    ah,dl
   14001a0de:	movsxd eax,DWORD PTR [rax]
   14001a0e0:	test   eax,0xf3a9363b
   14001a0e5:	stc    
   14001a0e6:	in     eax,0x79
   14001a0e8:	xchg   edx,eax
   14001a0e9:	lods   eax,DWORD PTR ds:[rsi]
   14001a0ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a0eb:	mov    ecx,esp
   14001a0ed:	(bad)  
   14001a0ee:	and    esi,ecx
   14001a0f0:	jmp    rcx
   14001a0f2:	cli    
   14001a0f3:	adc    esp,DWORD PTR ds:[rdi+0xde12858]
   14001a0fa:	cmp    eax,0xf8848009
   14001a0ff:	xor    eax,0x45c71ee4
   14001a104:	jnp    0x14001a157
   14001a106:	enter  0xc5c8,0x4
   14001a10a:	clc    
   14001a10b:	pop    rdx
   14001a10c:	rex.WXB sbb al,0xf
   14001a10f:	cmp    bl,0x2a
   14001a112:	shl    DWORD PTR [rax+riz*1],1
   14001a115:	mov    edi,0x6ebe53f0
   14001a11a:	fs (bad) 
   14001a11c:	or     al,0x8
   14001a11e:	jge    0x14001a183
   14001a120:	jmp    0x14bdec70f
   14001a125:	lahf   
   14001a126:	xor    r13d,r11d
   14001a129:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a12a:	ret    0x493f
   14001a12d:	shl    BYTE PTR [rax+riz*8],1
   14001a130:	(bad)
   14001a133:	popf   
   14001a134:	(bad)  
   14001a135:	rex.WB fstp st(2)
   14001a138:	push   rbx
   14001a139:	mov    bh,0xce
   14001a13b:	lods   eax,DWORD PTR ds:[rsi]
   14001a13c:	jle    0x14001a167
   14001a13e:	retf   
   14001a13f:	int3   
   14001a140:	sbb    al,0x9b
   14001a142:	pop    rcx
   14001a143:	(bad)  
   14001a144:	ror    bl,0x8c
   14001a147:	adc    esi,edx
   14001a149:	test   BYTE PTR [rbp-0x10f8fec4],al
   14001a14f:	loopne 0x14001a0ef
   14001a151:	rex.WXB ret 0xa231
   14001a155:	sbb    BYTE PTR [rsi+0x1f1e6449],0x79
   14001a15c:	xlat   BYTE PTR ds:[rbx]
   14001a15d:	rex.B (bad) 
   14001a15f:	(bad)  
   14001a160:	shr    BYTE PTR [rsi-0x1c836cd5],cl
   14001a166:	(bad)  
   14001a167:	pop    rsp
   14001a168:	mov    edi,0xfb7b8765
   14001a16d:	rex.WB scas al,BYTE PTR es:[rdi]
   14001a16f:	xor    eax,0xa1fc2e0
   14001a174:	mov    WORD PTR [rax+rbx*2+0x5],es
   14001a178:	mov    ebx,0x911dde22
   14001a17d:	scas   eax,DWORD PTR es:[rdi]
   14001a17e:	in     al,0x9c
   14001a180:	jl     0x14001a201
   14001a182:	popf   
   14001a183:	jnp    0x14001a15b
   14001a185:	xor    DWORD PTR [rbx-0x348b722d],ecx
   14001a18b:	mov    ebp,0x723c167b
   14001a190:	hlt    
   14001a191:	jl     0x14001a1c9
   14001a193:	mov    WORD PTR [rax-0x3],es
   14001a196:	mov    ch,0xc1
   14001a198:	adc    ah,BYTE PTR [ecx+0x43e2e00c]
   14001a19f:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a1a1:	or     eax,0xbdd5f500
   14001a1a6:	mov    bl,0x6
   14001a1a8:	rex.WRX out 0x2d,al
   14001a1ab:	imul   ecx,DWORD PTR [rbp-0x75],0x9
   14001a1af:	jnp    0x14001a138
   14001a1b1:	mov    bl,0xbc
   14001a1b3:	mov    eax,0x9802be35
   14001a1b8:	or     al,0x30
   14001a1ba:	sub    eax,0x716ff91c
   14001a1bf:	sar    DWORD PTR [rbp-0x41],1
   14001a1c2:	rex.WRXB xchg r14,rax
   14001a1c4:	fld    DWORD PTR [rax-0x71bc3d65]
   14001a1ca:	or     DWORD PTR [rax+rax*1+0x7c303331],esp
   14001a1d1:	popf   
   14001a1d2:	jae    0x14001a207
   14001a1d4:	mov    BYTE PTR [rdi-0x2b87f79],ah
   14001a1da:	cmp    BYTE PTR [rbp-0x7dc7b7d],ah
   14001a1e0:	pop    rsp
   14001a1e1:	rex.WRXB (bad) 
   14001a1e3:	xchg   ebx,eax
   14001a1e4:	sub    BYTE PTR [rbx-0x76fd4ae0],dh
   14001a1ea:	add    al,0x2a
   14001a1ec:	popf   
   14001a1ed:	add    ah,BYTE PTR [rcx]
   14001a1ef:	ret    
   14001a1f0:	adc    eax,0x85371080
   14001a1f5:	clc    
   14001a1f6:	jg     0x14001a20c
   14001a1f8:	rex.RB ret 0x7eef
   14001a1fc:	mov    WORD PTR [rdx+rdx*4],?
   14001a1ff:	jge    0x14001a1c0
   14001a201:	clc    
   14001a202:	iret   
   14001a203:	adc    eax,0x6c1eee3f
   14001a208:	(bad)  
   14001a209:	test   BYTE PTR [rsi-0x4],al
   14001a20c:	rex.WXB add rdx,QWORD PTR [r13+0x0]
   14001a210:	xchg   ebx,eax
   14001a211:	add    ebp,edi
   14001a213:	(bad)  
   14001a214:	add    BYTE PTR [rax-0x6202543],ch
   14001a21a:	rex.WX and rsp,QWORD PTR [rbp-0x59f73656]
   14001a221:	and    al,BYTE PTR [rdx-0x12]
   14001a224:	cwde   
   14001a225:	or     cl,0xc
   14001a228:	ins    BYTE PTR es:[rdi],dx
   14001a229:	pushfw 
   14001a22b:	sbb    eax,eax
   14001a22d:	add    cl,BYTE PTR [rcx-0x34]
   14001a230:	or     ah,bh
   14001a232:	add    BYTE PTR [rsi-0x545211ac],cl
   14001a238:	or     ah,BYTE PTR [rsi+rsi*4+0x60]
   14001a23c:	xchg   ebx,eax
   14001a23d:	jo     0x14001a1cc
   14001a23f:	adc    ebx,DWORD PTR [rsi-0x15]
   14001a242:	push   rbx
   14001a243:	jg     0x14001a20b
   14001a245:	mov    bl,0x8b
   14001a247:	loopne 0x14001a24b
   14001a249:	clc    
   14001a24a:	jmp    0x14001a1e5
   14001a24c:	fimul  WORD PTR [rbx]
   14001a24e:	adc    ecx,DWORD PTR [rax+0xa87ad97]
   14001a254:	add    ch,BYTE PTR ds:[rsi+rcx*1-0x68]
   14001a259:	cmp    al,0xb0
   14001a25b:	add    eax,0x21288739
   14001a260:	(bad)  
   14001a261:	or     al,0xc6
   14001a263:	leave  
   14001a264:	hlt    
   14001a265:	lods   eax,DWORD PTR ds:[rsi]
   14001a266:	in     al,dx
   14001a267:	popf   
   14001a268:	icebp  
   14001a269:	shl    bl,1
   14001a26b:	xchg   DWORD PTR [rdi-0x35],esp
   14001a26e:	mov    ?,WORD PTR [rdx]
   14001a270:	ins    DWORD PTR es:[rdi],dx
   14001a271:	lock sub DWORD PTR [rcx],ecx
   14001a274:	(bad)  
   14001a275:	add    eax,0xd268d8b8
   14001a27a:	sub    bh,BYTE PTR [rcx+rsi*8-0x268ab89c]
   14001a281:	(bad)  
   14001a282:	(bad)  
   14001a283:	(bad)  
   14001a284:	jbe    0x14001a2df
   14001a286:	cmp    ebx,ebp
   14001a288:	rex test eax,0x7de14d81
   14001a28e:	jb     0x14001a2f3
   14001a290:	popf   
   14001a291:	rcr    BYTE PTR [rbx],0x4e
   14001a294:	or     eax,0x76c106c2
   14001a299:	xchg   esi,eax
   14001a29a:	cdq    
   14001a29b:	and    bh,BYTE PTR [rdi-0x63]
   14001a29e:	movabs ds:0xc12c12526f3386f2,eax
   14001a2a7:	rex.XB movabs eax,ds:0xf4081edf605d92f3
   14001a2b1:	ds out dx,al
   14001a2b3:	(bad)  
   14001a2b4:	lock mov ebp,0x1a043603
   14001a2ba:	jge    0x14001a2b8
   14001a2bc:	iret   
   14001a2bd:	mov    ebx,0x21c84001
   14001a2c2:	test   BYTE PTR [rax+0x63f49ba4],ah
   14001a2c8:	ror    eax,1
   14001a2ca:	test   eax,0xf3bfa1ba
   14001a2cf:	sub    edi,0x1feab9ef
   14001a2d5:	rcl    BYTE PTR [rcx+0x3283a55e],1
   14001a2db:	or     cl,0x43
   14001a2de:	movabs eax,ds:0x514a65edb54f6338
   14001a2e7:	(bad)  
   14001a2e8:	ins    BYTE PTR es:[rdi],dx
   14001a2e9:	loope  0x14001a358
   14001a2eb:	rex.R fbld TBYTE PTR [rbp+0x38]
   14001a2ef:	(bad)  
   14001a2f0:	and    eax,0xeb9b16c4
   14001a2f5:	std    
   14001a2f6:	rex.RB
   14001a2f7:	rex.WB clc 
   14001a2f9:	fadd   DWORD PTR [rax-0x3e76ad77]
   14001a2ff:	mov    dl,0x3b
   14001a301:	(bad)  
   14001a302:	(bad)  
   14001a303:	and    ah,BYTE PTR [rsi]
   14001a305:	(bad)  
   14001a306:	add    BYTE PTR [rax+rax*2-0x7709acf7],0x4d
   14001a30e:	rex.W (bad) 
   14001a310:	adc    cl,cl
   14001a312:	movsxd ebp,DWORD PTR [rsi]
   14001a314:	or     BYTE PTR [rdx-0x741b0127],dl
   14001a31a:	xchg   BYTE PTR [rdx+0x471f1ed2],ah
   14001a320:	or     BYTE PTR [rbp+0x1018c608],dh
   14001a326:	push   rcx
   14001a327:	ins    DWORD PTR es:[rdi],dx
   14001a328:	out    0x60,eax
   14001a32a:	(bad)  
   14001a32b:	sbb    BYTE PTR [rcx+0x0],dh
   14001a32e:	add    BYTE PTR [rax],cl
   14001a330:	push   rdi
   14001a331:	rex.WB
   14001a332:	rex.R
   14001a333:	push   r12
   14001a335:	fdecstp 
   14001a337:	rex.RXB mov r15d,0x26c173bd
   14001a33d:	cld    
   14001a33e:	scas   eax,DWORD PTR es:[rdi]
   14001a33f:	sbb    bh,BYTE PTR [rdi-0x3b]
   14001a342:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a343:	rex.X sbb eax,eax
   14001a346:	and    BYTE PTR fs:[rbx+rax*1],al
   14001a34a:	in     eax,0x96
   14001a34c:	mov    esp,0xffbdb275
   14001a351:	out    dx,al
   14001a352:	sbb    ecx,DWORD PTR [rsi+0x7f]
   14001a355:	xor    DWORD PTR [rbx-0x37],ebp
   14001a358:	out    0x8b,eax
   14001a35a:	ror    BYTE PTR [rbx+0x6ffced9f],0x8e
   14001a361:	mov    ah,0x33
   14001a363:	or     ecx,DWORD PTR [rax+0x5d20739b]
   14001a369:	jns    0x14001a341
   14001a36b:	js     0x14001a367
   14001a36d:	(bad)  
   14001a36e:	cli    
   14001a36f:	ins    BYTE PTR es:[rdi],dx
   14001a370:	rex.WR mov al,0xdc
   14001a373:	rex.X jmp 0x14001a3c3
   14001a376:	xchg   ecx,eax
   14001a377:	movabs ds:0xb7a53c0302cc201b,al
   14001a380:	shl    ebp,1
   14001a382:	repnz sbb bl,BYTE PTR [rdi-0x7c]
   14001a386:	and    al,0xaf
   14001a388:	test   ebp,0xb80d42bf
   14001a38e:	pop    rcx
   14001a38f:	mov    BYTE PTR [rsi+rsi*8],cl
   14001a392:	push   rdi
   14001a393:	pop    rbx
   14001a394:	lahf   
   14001a395:	mov    edx,0x2fb5eb75
   14001a39a:	movabs al,ds:0x3280a5fea55f24d9
   14001a3a3:	or     cl,0x43
   14001a3a6:	and    DWORD PTR [rip+0xffffffff9d9aac78],esp        # 0xdd9c5024
   14001a3ac:	(bad)  
   14001a3ad:	js     0x14001a3dd
   14001a3af:	jnp    0x14001a402
   14001a3b1:	lods   al,BYTE PTR ds:[rsi]
   14001a3b2:	cmp    BYTE PTR [rcx+0x3e69f615],dh
   14001a3b8:	cmovle r9,QWORD PTR [rbp+r15*8+0x49]
   14001a3be:	leave  
   14001a3bf:	(bad)  
   14001a3c0:	xor    ah,bl
   14001a3c2:	outs   dx,BYTE PTR ds:[rsi]
   14001a3c3:	or     edi,ebx
   14001a3c5:	push   rdx
   14001a3c6:	mov    ecx,0xc09604c7
   14001a3cb:	sub    al,0x22
   14001a3cd:	and    eax,0x13320d4e
   14001a3d2:	lock mov al,dh
   14001a3d5:	clc    
   14001a3d6:	imul   esi,DWORD PTR [rbx+0x5f],0xffffff8b
   14001a3da:	add    BYTE PTR [rsi+0x1e],ch
   14001a3dd:	sub    dl,BYTE PTR [rsi+0x83dc707]
   14001a3e3:	mov    dl,0x97
   14001a3e5:	pop    rsi
   14001a3e6:	mov    dl,BYTE PTR [rax-0x409b7372]
   14001a3ec:	stc    
   14001a3ed:	ret    0x85a6
   14001a3f0:	retf   
   14001a3f1:	movabs eax,ds:0xa164c0194352bee9
   14001a3fa:	cwde   
   14001a3fb:	adc    dh,BYTE PTR [rax+rax*1+0x53a3256c]
   14001a402:	mov    bh,0x5c
   14001a404:	cmp    eax,0xc12495f2
   14001a409:	int3   
   14001a40a:	and    BYTE PTR [rcx+riz*1+0x7c9647cd],cl
   14001a411:	rex.R pop rsi
   14001a413:	retf   0x3d84
   14001a416:	pop    rbp
   14001a417:	xchg   edi,eax
   14001a418:	xor    al,0x5e
   14001a41a:	and    al,0xb0
   14001a41c:	and    DWORD PTR [rip+0xffffffffc3b43088],edx        # 0x103b5d4aa
   14001a422:	mov    al,BYTE PTR [rbx+rsi*1]
   14001a425:	lods   eax,DWORD PTR ds:[rsi]
   14001a426:	(bad)  
   14001a427:	stc    
   14001a428:	cmp    BYTE PTR [rcx],al
   14001a42a:	jno    0x14001a3c8
   14001a42c:	movabs al,ds:0xfdb3f2286a3bbab0
   14001a435:	rex.X
   14001a436:	adc    QWORD PTR [r13+rdx*1+0x31a57d8],rsp
   14001a43e:	call   0xf15b115e
   14001a443:	je     0x14001a410
   14001a445:	ret    0xce27
   14001a448:	(bad)  
   14001a449:	in     al,dx
   14001a44a:	or     BYTE PTR [rax+rbp*8],dh
   14001a44d:	push   rdi
   14001a44e:	push   0x28
   14001a450:	add    ebx,DWORD PTR [rax-0x7dadeba4]
   14001a456:	retf   
   14001a457:	fistp  QWORD PTR [rcx+0x68c4efbc]
   14001a45d:	mov    dh,0x8e
   14001a45f:	adc    bl,BYTE PTR [rbx]
   14001a461:	sub    al,0xbc
   14001a463:	pop    rax
   14001a464:	out    dx,al
   14001a465:	xor    al,0xb4
   14001a467:	(bad)  
   14001a468:	mov    edx,0x850214c7
   14001a46d:	imul   edx,DWORD PTR [rdi+rcx*1],0x6a4c0d48
   14001a474:	cdq    
   14001a475:	and    eax,0x4840a898
   14001a47a:	cwde   
   14001a47b:	add    al,0x22
   14001a47d:	and    eax,0xc38a8a62
   14001a482:	adc    cl,BYTE PTR [rax]
   14001a484:	cmp    DWORD PTR [rax],ebp
   14001a486:	lods   al,BYTE PTR ds:[rsi]
   14001a487:	loopne 0x14001a47f
   14001a489:	rex.RB (bad) 
   14001a48b:	movabs ds:0xcf7cc4632feb6244,al
   14001a494:	xor    DWORD PTR [rip+0xffffffffafa7a818],0x9afbbd7e        # 0xefa94cb6
   14001a49e:	mov    DWORD PTR [rsi],0xddd912c6
   14001a4a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a4a5:	repz cld 
   14001a4a7:	rex.WX or al,0x55
   14001a4aa:	add    BYTE PTR [rbx+0x3604090f],dl
   14001a4b0:	add    ah,dl
   14001a4b2:	(bad)  
   14001a4b3:	jp     0x14001a469
   14001a4b5:	movabs ds:0xe3eae9336c314f2b,eax
   14001a4be:	xor    al,0x9f
   14001a4c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a4c1:	sub    BYTE PTR [rax-0x69],cl
   14001a4c4:	xchg   DWORD PTR [rsi-0x4c1111ff],ebx
   14001a4ca:	loop   0x14001a4ea
   14001a4cc:	rex.W add al,dl
   14001a4cf:	or     bh,BYTE PTR [rbx]
   14001a4d1:	(bad)  
   14001a4d2:	(bad)  
   14001a4d3:	loopne 0x14001a4ea
   14001a4d5:	(bad)  
   14001a4d6:	add    DWORD PTR [rdx+0x72],edx
   14001a4d9:	out    dx,al
   14001a4da:	test   BYTE PTR [rax],ch
   14001a4dc:	adc    al,0x9e
   14001a4de:	adc    BYTE PTR [rdx+0x2c],ch
   14001a4e1:	dec    esi
   14001a4e3:	add    al,0x8e
   14001a4e5:	(bad)  
   14001a4e6:	rex.RXB adc eax,0xf1f7147f
   14001a4ec:	sti    
   14001a4ed:	jmp    0x14fe589b0
   14001a4f2:	xor    al,al
   14001a4f4:	loopne 0x14001a56e
   14001a4f6:	mov    dl,0xe1
   14001a4f8:	(bad)  
   14001a4f9:	mov    edi,0x81c8fd5f
   14001a4fe:	push   0x4b
   14001a500:	pop    rsp
   14001a501:	call   0x104c13ba9
   14001a506:	push   rax
   14001a507:	add    eax,0xb0b89930
   14001a50c:	push   rbp
   14001a50d:	mov    bl,0xf6
   14001a50f:	rol    BYTE PTR [rsi-0xc780487],1
   14001a515:	and    edx,DWORD PTR fs:[rdx-0x7e]
   14001a519:	rex.WRB popf 
   14001a51b:	scas   eax,DWORD PTR es:[rdi]
   14001a51c:	outs   dx,BYTE PTR ds:[rsi]
   14001a51d:	adc    dh,dl
   14001a51f:	rex.RB cmp al,0xee
   14001a522:	pop    rax
   14001a523:	test   BYTE PTR [rdi+0x5bdcb3ad],bl
   14001a529:	repnz push rcx
   14001a52b:	jg     0x14001a4f8
   14001a52d:	xlat   BYTE PTR ds:[rbx]
   14001a52e:	pop    rdx
   14001a52f:	out    dx,eax
   14001a530:	call   QWORD PTR [rbx+0x18]
   14001a533:	or     al,0x22
   14001a535:	ins    BYTE PTR es:[rdi],dx
   14001a536:	and    BYTE PTR [rip+0x18905f57],ah        # 0x158920493
   14001a53c:	(bad)  
   14001a53d:	and    eax,0x1e86fd66
   14001a542:	clc    
   14001a543:	(bad)  
   14001a544:	(bad)  
   14001a545:	add    edx,DWORD PTR [rdx-0x7b727c54]
   14001a54b:	(bad)  
   14001a54c:	adc    ecx,eax
   14001a54e:	ja     0x14001a55a
   14001a550:	loop   0x14001a5be
   14001a552:	cmp    eax,0x8ec0f2dd
   14001a557:	jns    0x14001a568
   14001a559:	out    dx,eax
   14001a55a:	sbb    BYTE PTR [rbx+rdi*1+0xd],ch
   14001a55e:	rex.WRB test QWORD PTR [r13+0x19],0x72802a8
   14001a566:	(bad)  
   14001a567:	or     eax,0xefa80068
   14001a56c:	cmp    BYTE PTR [rcx+0x59],dl
   14001a56f:	sub    QWORD PTR [rip+0x6e08129c],rsi        # 0x1ae09b812
   14001a576:	sub    BYTE PTR [rdi+0x1e56f7c3],0xde
   14001a57d:	fild   WORD PTR [rdi]
   14001a57f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a580:	jmp    0x105c1dc29
   14001a585:	or     ebx,DWORD PTR [rax+0x21]
   14001a588:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a589:	movabs ds:0x20b72074f0515808,al
   14001a592:	add    BYTE PTR [rsi+0x19],cl
   14001a595:	fs or  bl,dl
   14001a598:	and    DWORD PTR [rsi+rdi*4+0x5f],esp
   14001a59c:	xchg   esp,eax
   14001a59d:	test   DWORD PTR [rdi+0x4d90bc9],0x382b3c80
   14001a5a7:	push   rbx
   14001a5a8:	rex.WXB movabs r11,0x667aeb03de63b47f
   14001a5b2:	hlt    
   14001a5b3:	and    ebx,DWORD PTR [rax+0x7e]
   14001a5b6:	ins    DWORD PTR es:[rdi],dx
   14001a5b7:	in     eax,dx
   14001a5b8:	popf   
   14001a5b9:	add    dl,BYTE PTR [rax+0x5]
   14001a5bc:	xor    cl,bl
   14001a5be:	sub    BYTE PTR [rdx-0x57fc580],dh
   14001a5c4:	iret   
   14001a5c5:	ss pop rsp
   14001a5c7:	mov    ecx,0xeedd5ced
   14001a5cc:	and    sil,BYTE PTR [rsp+r11*1]
   14001a5d0:	jle    0x14001a5ea
   14001a5d2:	(bad)  
   14001a5d3:	adc    al,BYTE PTR [rbx+rcx*8]
   14001a5d6:	retf   
   14001a5d7:	adc    al,0x9d
   14001a5d9:	(bad)  
   14001a5da:	cmp    eax,0x49bbb9b0
   14001a5df:	movsxd ecx,DWORD PTR [rdi]
   14001a5e1:	rex.RXB cld 
   14001a5e3:	(bad)  
   14001a5e4:	int    0x59
   14001a5e6:	lock and eax,0xb7b904e
   14001a5ec:	outs   dx,DWORD PTR ds:[rsi]
   14001a5ed:	mov    esp,0x80dae775
   14001a5f2:	xor    al,0x76
   14001a5f4:	or     eax,0x4fc1ce4
   14001a5f9:	(bad)  
   14001a5fa:	pop    rdi
   14001a5fb:	out    dx,al
   14001a5fc:	retf   
   14001a5fd:	(bad)  
   14001a5fe:	and    BYTE PTR [rdi+0x23f7496b],0x3b
   14001a605:	out    0xde,al
   14001a607:	dec    edx
   14001a609:	xchg   ecx,eax
   14001a60a:	sbb    DWORD PTR [rdi],esp
   14001a60c:	sar    BYTE PTR [rbx+rax*4-0x71],1
   14001a610:	movabs ds:0x8252140e500550c4,al
   14001a619:	jnp    0x14001a66a
   14001a61b:	mov    ah,0x8e
   14001a61d:	sbb    al,0x3c
   14001a61f:	fnsave [rdx+0x1ec2081a]
   14001a625:	test   BYTE PTR es:[rsi-0x2fd6c036],0xf1
   14001a62d:	mov    bl,0x42
   14001a62f:	or     bl,cl
   14001a631:	add    BYTE PTR [rdi-0x29],al
   14001a634:	mov    ebp,0x4f8c4902
   14001a639:	sti    
   14001a63a:	jns    0x14001a5fb
   14001a63c:	popf   
   14001a63d:	sbb    DWORD PTR [rdx],eax
   14001a63f:	rex.WB ins DWORD PTR es:[rdi],dx
   14001a641:	or     DWORD PTR [rdi+0x1],0x679ebf06
   14001a648:	jns    0x14001a5ce
   14001a64a:	mov    dl,0x60
   14001a64c:	add    edi,DWORD PTR [rdi]
   14001a64e:	icebp  
   14001a64f:	movsxd ebp,DWORD PTR [rax+0x3c]
   14001a652:	jns    0x14001a637
   14001a654:	xchg   ebx,ebx
   14001a656:	repnz cmp DWORD PTR ds:[rdi],0x1e
   14001a65b:	repnz sub edi,DWORD PTR [rbx-0x4a81ebd1]
   14001a662:	(bad)  
   14001a663:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a664:	xchg   BYTE PTR [rsi+0x2680cb01],ah
   14001a66a:	pop    rbp
   14001a66b:	(bad)  
   14001a66c:	cmp    eax,0x3b9eb367
   14001a671:	ds jne 0x14001a66a
   14001a674:	stos   DWORD PTR es:[rdi],eax
   14001a675:	imul   eax,DWORD PTR [rdx+0x2f473e59],0x4478b9eb
   14001a67f:	xchg   edi,eax
   14001a680:	lahf   
   14001a681:	adc    ecx,DWORD PTR [rax]
   14001a683:	add    al,0xa1
   14001a685:	(bad)  
   14001a686:	fcom   QWORD PTR [rax+0x50]
   14001a689:	xor    eax,ebx
   14001a68b:	movabs ds:0x4fce42ca2760241d,al
   14001a694:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a695:	cli    
   14001a696:	push   rdx
   14001a697:	(bad)  
   14001a698:	jmp    0x14001a6d9
   14001a69a:	mov    WORD PTR [rax+rdi*8],ss
   14001a69d:	nop
   14001a69e:	lahf   
   14001a69f:	(bad)  
   14001a6a0:	(bad)  
   14001a6a1:	add    BYTE PTR [rsp+rcx*4],cl
   14001a6a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a6a5:	scas   eax,DWORD PTR es:[rdi]
   14001a6a6:	fnstsw WORD PTR [rbx-0x28785517]
   14001a6ac:	(bad)  
   14001a6ad:	jmp    0x14001a6eb
   14001a6af:	test   DWORD PTR [rsi+0x63],esp
   14001a6b2:	mov    esp,0x29fe1501
   14001a6b7:	add    BYTE PTR [rbp+0x0],ah
   14001a6ba:	in     eax,0x41
   14001a6bc:	and    DWORD PTR [rip+0xffffffffc77f7eb8],esp        # 0x10781257a
   14001a6c2:	cdq    
   14001a6c3:	fsubrp st(1),st
   14001a6c5:	lods   al,BYTE PTR ds:[rsi]
   14001a6c6:	retf   
   14001a6c7:	lahf   
   14001a6c8:	xchg   ebp,eax
   14001a6c9:	mov    cl,0x60
   14001a6cb:	pop    rsp
   14001a6cc:	(bad)  
   14001a6cd:	jmp    0x14001a6a6
   14001a6cf:	imul   ecx,DWORD PTR [rbx-0x42],0x7979679e
   14001a6d6:	(bad)  
   14001a6d7:	cmp    eax,0x1cb0ec12
   14001a6dc:	add    al,0xbe
   14001a6de:	xchg   eax,eax
   14001a6e0:	(bad)
   14001a6e3:	sub    eax,0x130630bd
   14001a6e8:	pop    rcx
   14001a6e9:	(bad)  
   14001a6ea:	fcom   st(7)
   14001a6ec:	(bad)  
   14001a6ed:	lods   al,BYTE PTR ds:[rsi]
   14001a6ee:	rex.R pop rsp
   14001a6f0:	sahf   
   14001a6f1:	(bad)  
   14001a6f2:	pop    rbp
   14001a6f3:	jne    0x14001a6d0
   14001a6f5:	(bad)  
   14001a6f6:	test   DWORD PTR [rdi],ecx
   14001a6f8:	outs   dx,BYTE PTR ds:[rsi]
   14001a6f9:	cmp    al,0xde
   14001a6fb:	xor    DWORD PTR [rcx-0x70],esi
   14001a6fe:	addr32 sbb eax,0xc2a02452
   14001a704:	(bad)  
   14001a705:	and    eax,0x5ca00aa0
   14001a70a:	sub    BYTE PTR [rcx+rcx*1-0x52],dh
   14001a70e:	(bad)  
   14001a710:	stc    
   14001a711:	pop    rdx
   14001a712:	lea    ecx,[rdi+rdi*2+0x68]
   14001a716:	mov    ecx,0x35bb8ce7
   14001a71b:	and    BYTE PTR [rbx+0x7e],al
   14001a71e:	add    al,0x18
   14001a720:	jno    0x14001a783
   14001a722:	adc    BYTE PTR [rcx],bl
   14001a724:	(bad)  
   14001a725:	(bad)  
   14001a726:	std    
   14001a727:	xor    BYTE PTR [rsi-0x67],cl
   14001a72a:	or     ebp,eax
   14001a72c:	lods   eax,DWORD PTR ds:[rsi]
   14001a72d:	mov    ebp,0x7213e48b
   14001a732:	jbe    0x14001a74b
   14001a734:	movabs ds:0x4bfa8e84821b7f3e,al
   14001a73d:	lea    eax,[rax+0x637e91f1]
   14001a743:	rex.WR jle 0x14001a7ae
   14001a746:	mov    eax,0xba9b99e5
   14001a74b:	(bad)  
   14001a74c:	std    
   14001a74d:	hlt    
   14001a74e:	lock jo 0x14001a7a7
   14001a751:	rex.RB xchg r9d,eax
   14001a753:	imul   BYTE PTR [rbx-0x46]
   14001a756:	outs   dx,DWORD PTR ds:[rsi]
   14001a757:	or     al,BYTE PTR [rdx+0x5d]
   14001a75a:	xor    BYTE PTR [rdx-0x1f68b660],0x1b
   14001a761:	(bad)  
   14001a762:	je     0x14001a7b8
   14001a764:	xchg   edi,eax
   14001a765:	sub    eax,0xa3beba19
   14001a76a:	rex.X lahf 
   14001a76c:	mov    gs,WORD PTR [rdi]
   14001a76e:	or     eax,0x649178c5
   14001a773:	add    edi,DWORD PTR [rsi+0x4664047]
   14001a779:	rex.WX stos BYTE PTR es:[rdi],al
   14001a77b:	pop    rsi
   14001a77c:	fadd   QWORD PTR [rip+0xffffffff8ac0b3c3]        # 0xcac25b45
   14001a782:	jmp    0x14001a780
   14001a784:	pop    rax
   14001a785:	mov    eax,0x3cb09ebd
   14001a78a:	es or  al,0xc8
   14001a78d:	frstor [rax+0x76049941]
   14001a793:	out    dx,al
   14001a794:	fst    QWORD PTR [rbx-0x53]
   14001a797:	(bad)  
   14001a798:	(bad)  
   14001a799:	pop    rcx
   14001a79a:	mov    ebp,0xc358f968
   14001a79f:	retf   0xcf10
   14001a7a2:	mov    ebp,esi
   14001a7a4:	std    
   14001a7a5:	push   0xfffffffffffffff9
   14001a7a7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a7a8:	sbb    BYTE PTR [rcx+rax*1+0x46710f94],dl
   14001a7af:	movabs al,ds:0xdcd50095f6c3f9b6
   14001a7b8:	sub    ebx,eax
   14001a7ba:	push   rsi
   14001a7bb:	pop    rbp
   14001a7bc:	sbb    al,0x79
   14001a7be:	(bad)  
   14001a7bf:	push   rdx
   14001a7c0:	cs setl ch
   14001a7c4:	mov    bh,0x91
   14001a7c6:	push   rdx
   14001a7c7:	mov    BYTE PTR [rdx+0x7f5cdcf5],ch
   14001a7cd:	js     0x14001a7e6
   14001a7cf:	mov    dil,BYTE PTR [r11+0x5c]
   14001a7d3:	icebp  
   14001a7d4:	btc    DWORD PTR [rip+0xffffffffc0380cc2],edx        # 0x10039b49d
   14001a7db:	xor    BYTE PTR [rsi-0x71e41c25],dl
   14001a7e1:	jbe    0x14001a7bf
   14001a7e3:	jg     0x14001a830
   14001a7e5:	xlat   BYTE PTR ds:[rbx]
   14001a7e6:	jne    0x14001a817
   14001a7e8:	and    ah,cl
   14001a7ea:	icebp  
   14001a7eb:	rol    DWORD PTR [rax+0x2a8034df],cl
   14001a7f1:	xor    BYTE PTR [rdx],0xa1
   14001a7f4:	leave  
   14001a7f5:	or     al,0xf7
   14001a7f7:	jnp    0x14001a84f
   14001a7f9:	sub    al,0xd8
   14001a7fb:	xor    eax,0xfa376234
   14001a800:	mov    esi,0x8064117e
   14001a805:	(bad)  
   14001a806:	xchg   ebp,eax
   14001a807:	rex.RX jle 0x14001a883
   14001a80a:	adc    ecx,DWORD PTR [rcx-0xe5c6e1e]
   14001a810:	es pushf 
   14001a812:	es (bad) 
   14001a814:	add    eax,DWORD PTR [rbp-0x2e0e5fa0]
   14001a81a:	(bad)  
   14001a81b:	push   rax
   14001a81c:	imul   BYTE PTR [rbx]
   14001a81e:	repz add ecx,DWORD PTR [rax]
   14001a821:	(bad)  
   14001a822:	mov    edx,0xaeecf9dd
   14001a827:	fnstenv [rdi+0x7f]
   14001a82a:	jae    0x14001a7f9
   14001a82c:	xor    eax,0xbe09c3af
   14001a831:	or     bh,bh
   14001a833:	xor    al,0x82
   14001a835:	mov    es,WORD PTR [rip+0xa0a1f2f]        # 0x14a0bc76a
   14001a83b:	add    BYTE PTR [rax-0x13],al
   14001a83e:	mov    ebp,0x3fabad93
   14001a843:	call   rcx
   14001a845:	xchg   ecx,eax
   14001a846:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a847:	(bad)  
   14001a848:	and    BYTE PTR [rcx-0x3e],dh
   14001a84b:	rex.WR xchg rcx,rax
   14001a84d:	xor    BYTE PTR [rbx+0x50],dl
   14001a850:	or     DWORD PTR [rcx+rdx*2],esp
   14001a853:	rex jle 0x14001a86d
   14001a856:	mov    edi,0x7ada4000
   14001a85b:	movabs ds:0xfab054f77af47e88,eax
   14001a864:	(bad)  
   14001a865:	lahf   
   14001a866:	movabs al,ds:0xfee7eb43d2f67cff
   14001a86f:	jl     0x14001a85e
   14001a871:	(bad)  
   14001a872:	popf   
   14001a873:	(bad)  
   14001a874:	push   rcx
   14001a875:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a876:	cld    
   14001a877:	loop   0x14001a868
   14001a879:	imul   edx,DWORD PTR [rcx-0x3978eb31],0x0
   14001a880:	retf   0xe286
   14001a883:	lods   al,BYTE PTR ds:[rsi]
   14001a884:	add    BYTE PTR [rbx],cl
   14001a886:	sar    dh,0xab
   14001a889:	mov    bh,0xd2
   14001a88b:	imul   DWORD PTR [rbp-0x25a26331]
   14001a891:	xchg   edx,eax
   14001a892:	rcr    BYTE PTR [rax+riz*1-0x5a],cl
   14001a896:	lock adc al,0x7c
   14001a899:	jge    0x14001a90c
   14001a89b:	or     esp,DWORD PTR [rdx+0x4ddefff9]
   14001a8a1:	(bad)  
   14001a8a2:	stos   DWORD PTR es:[rdi],eax
   14001a8a3:	out    dx,eax
   14001a8a4:	out    0x81,al
   14001a8a6:	(bad)  
   14001a8a7:	xchg   ebx,eax
   14001a8a8:	jl     0x14001a862
   14001a8aa:	loop   0x14001a83b
   14001a8ac:	sar    DWORD PTR [rbx-0x72],cl
   14001a8af:	jle    0x14001a8c9
   14001a8b1:	adc    BYTE PTR [rax+0x6e],dh
   14001a8b4:	pop    rdi
   14001a8b5:	jg     0x14001a89c
   14001a8b7:	leave  
   14001a8b8:	fwait
   14001a8b9:	sahf   
   14001a8ba:	mov    ebx,0xa7bda9ee
   14001a8bf:	sub    ah,BYTE PTR [rdi-0x30]
   14001a8c2:	pop    rsp
   14001a8c3:	clc    
   14001a8c4:	xor    eax,0xa00d37d8
   14001a8c9:	rex cmp DWORD PTR cs:[rcx+0x60],edx
   14001a8ce:	add    DWORD PTR [rbx+0x3e46da7b],edi
   14001a8d4:	sbb    al,0xc
   14001a8d6:	sub    ecx,eax
   14001a8d8:	xor    BYTE PTR [rsi+0x3a8df00b],al
   14001a8de:	adc    ebx,edi
   14001a8e0:	and    BYTE PTR [rip+0xffffffffe01dc49a],0x8d        # 0x1201f6d81
   14001a8e7:	rex pop rsi
   14001a8e9:	ror    cl,1
   14001a8eb:	out    0x14,eax
   14001a8ed:	cld    
   14001a8ee:	sti    
   14001a8ef:	add    al,al
   14001a8f1:	stc    
   14001a8f2:	xchg   BYTE PTR [rcx],bh
   14001a8f4:	lock (bad) 
   14001a8f6:	dec    dh
   14001a8f8:	sti    
   14001a8f9:	outs   dx,BYTE PTR ds:[rsi]
   14001a8fa:	pop    rsi
   14001a8fb:	jle    0x14001a8da
   14001a8fd:	outs   dx,DWORD PTR ds:[rsi]
   14001a8fe:	rex.RXB jmp 0x14001a967
   14001a901:	add    al,0xc1
   14001a903:	out    0xd7,eax
   14001a905:	(bad)  
   14001a906:	sahf   
   14001a907:	imul   ecx,DWORD PTR [rax],0x45e50055
   14001a90d:	movabs eax,ds:0x6b1baf67b7b9e849
   14001a916:	cwde   
   14001a917:	movsxd edi,esi
   14001a919:	or     al,0xc1
   14001a91b:	(bad)  
   14001a91c:	out    dx,eax
   14001a91d:	lock xor al,0x80
   14001a920:	xor    BYTE PTR [rcx+0x3e8d87ca],ah
   14001a926:	lods   al,BYTE PTR ds:[rsi]
   14001a927:	(bad)  
   14001a928:	call   0x16204074e
   14001a92d:	adc    al,0x83
   14001a92f:	sbb    eax,DWORD PTR [rax+0x37de4041]
   14001a935:	pushf  
   14001a936:	jbe    0x14001a975
   14001a938:	mov    eax,0x779dde76
   14001a93d:	lods   eax,DWORD PTR ds:[rsi]
   14001a93e:	pop    rsp
   14001a93f:	mov    al,0x19
   14001a941:	rex.WRX
   14001a942:	lock jne 0x14001a9a0
   14001a945:	out    dx,eax
   14001a946:	xor    al,0x87
   14001a948:	mov    edx,0x93446500
   14001a94d:	xchg   esp,eax
   14001a94e:	loopne 0x14001a8fe
   14001a950:	sahf   
   14001a951:	mov    dh,0xf1
   14001a953:	out    dx,eax
   14001a954:	sub    al,0x1e
   14001a956:	(bad)  
   14001a957:	cmp    ebp,DWORD PTR [rbx-0x13e3a0d3]
   14001a95d:	jg     0x14001a96f
   14001a95f:	je     0x14001a9d8
   14001a961:	(bad)  
   14001a962:	pop    rsp
   14001a963:	adc    BYTE PTR [rax],0x17
   14001a966:	xchg   esp,eax
   14001a967:	lahf   
   14001a968:	xchg   ecx,eax
   14001a969:	xchg   edx,eax
   14001a96a:	adc    BYTE PTR [rsp+rcx*1],0xb9
   14001a96e:	jae    0x14001a953
   14001a970:	or     eax,0x91db7473
   14001a975:	test   bh,0x3e
   14001a978:	imul   DWORD PTR [rbx-0x244330bb]
   14001a97e:	fstp   TBYTE PTR [rdx]
   14001a980:	test   dh,ah
   14001a982:	push   rbx
   14001a983:	jl     0x14001a9b9
   14001a985:	fdiv   DWORD PTR [rdi]
   14001a987:	or     eax,0xdca00ca1
   14001a98c:	sub    ah,cl
   14001a98e:	or     bl,BYTE PTR [rax-0x1]
   14001a991:	jle    0x14001a97a
   14001a993:	rex.WXB or rax,0xfffffffff6ec8ce0
   14001a999:	xchg   edx,eax
   14001a99a:	add    BYTE PTR [rsi-0x2f],bl
   14001a99d:	mov    esp,edi
   14001a99f:	repnz pop rsi
   14001a9a1:	loop   0x14001aa03
   14001a9a3:	(bad)  
   14001a9a4:	movabs ds:0x50af4ebfa5246275,al
   14001a9ad:	rex.WRX jrcxz 0x14001a977
   14001a9b0:	iret   
   14001a9b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a9b2:	pop    rbp
   14001a9b3:	rex.WRXB cld 
   14001a9b5:	in     eax,dx
   14001a9b6:	mov    bh,BYTE PTR [rbx-0x4a230342]
   14001a9bc:	(bad)  
   14001a9bd:	add    edx,DWORD PTR [rax]
   14001a9bf:	retf   0x863f
   14001a9c2:	retfw  
   14001a9c4:	cmp    dl,BYTE PTR [rbp-0x8]
   14001a9c7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a9c8:	sbb    eax,0x151e742e
   14001a9cd:	in     eax,0x41
   14001a9cf:	jno    0x14001a974
   14001a9d1:	jo     0x14001a9d8
   14001a9d3:	rex sti 
   14001a9d5:	xchg   ecx,eax
   14001a9d6:	rex.RXB (bad) 
   14001a9d8:	std    
   14001a9d9:	in     al,dx
   14001a9da:	pushf  
   14001a9db:	idiv   ah
   14001a9dd:	jbe    0x14001a97e
   14001a9df:	(bad)  
   14001a9e0:	idiv   DWORD PTR [rsi-0x591c782]
   14001a9e6:	(bad)
   14001a9ea:	adc    al,BYTE PTR [rip+0xffffffffe77663c3]        # 0x127780db3
   14001a9f0:	(bad)  
   14001a9f1:	pand   mm3,QWORD PTR [rdi-0x50103902]
   14001a9f8:	(bad)  [rax-0x5d906f9e]
   14001a9fe:	(bad)  
   14001a9ff:	push   rdi
   14001aa00:	rcr    DWORD PTR [rdi+0x6034d0c6],0xf9
   14001aa07:	push   rcx
   14001aa08:	pushf  
   14001aa09:	adc    eax,0xd57db470
   14001aa0e:	ins    DWORD PTR es:[rdi],dx
   14001aa0f:	xlat   BYTE PTR ds:[rbx]
   14001aa10:	movq   mm5,mm1
   14001aa13:	pop    rax
   14001aa14:	outs   dx,BYTE PTR ds:[rsi]
   14001aa15:	std    
   14001aa16:	adc    DWORD PTR [rcx+0xc530326],ecx
   14001aa1c:	jmp    0x14001aa8f
   14001aa1e:	rex.W
   14001aa1f:	add    al,0xdf
   14001aa22:	or     edi,edi
   14001aa24:	js     0x14001a9e9
   14001aa26:	sbb    al,0x7c
   14001aa28:	jmp    QWORD PTR [rbp+riz*8+0xf]
   14001aa2c:	idiv   DWORD PTR [rbp-0x309440c8]
   14001aa32:	icebp  
   14001aa33:	(bad)  
   14001aa34:	(bad)  
   14001aa35:	cmp    cl,al
   14001aa37:	(bad)
   14001aa3b:	not    BYTE PTR [rbp+0x50025ff2]
   14001aa41:	(bad)  
   14001aa42:	push   rax
   14001aa43:	jbe    0x14001a9c9
   14001aa45:	(bad)  
   14001aa46:	ret    0x2d
   14001aa49:	pop    rdx
   14001aa4a:	outs   dx,DWORD PTR ds:[rsi]
   14001aa4b:	cwde   
   14001aa4c:	(bad)  
   14001aa4d:	cmp    dh,bl
   14001aa4f:	int    0xef
   14001aa51:	sbb    eax,0x6951d55a
   14001aa56:	sub    al,0x96
   14001aa58:	or     BYTE PTR [rdi-0x6e85bc77],bh
   14001aa5e:	(bad)  
   14001aa5f:	out    dx,eax
   14001aa60:	sbb    edi,ebx
   14001aa62:	or     al,0x30
   14001aa64:	pop    rdx
   14001aa65:	xor    eax,DWORD PTR [rdi+0x56540e0e]
   14001aa6b:	std    
   14001aa6c:	jp     0x14001aa59
   14001aa6e:	pushf  
   14001aa6f:	push   rdi
   14001aa70:	pop    rsi
   14001aa71:	fdivr  DWORD PTR [rsi]
   14001aa73:	stos   DWORD PTR es:[rdi],eax
   14001aa74:	cmovle esp,eax
   14001aa77:	movsxd eax,ecx
   14001aa79:	push   rdi
   14001aa7a:	stos   DWORD PTR es:[rdi],eax
   14001aa7b:	jg     0x14001aa86
   14001aa7d:	rex.X sbb DWORD PTR [rax-0x7],eax
   14001aa81:	push   rcx
   14001aa82:	or     rsi,rbp
   14001aa85:	in     eax,dx
   14001aa86:	imul   ebx,DWORD PTR [rip+0x7b267c39],0xfffffff9        # 0x1bb2826c6
   14001aa8d:	xchg   ebx,eax
   14001aa8e:	jae    0x14001aaab
   14001aa90:	mov    edi,ebp
   14001aa92:	pop    rcx
   14001aa93:	add    BYTE PTR [rax],dh
   14001aa95:	cmp    DWORD PTR [rbp+rdi*8-0x4a],esp
   14001aa99:	(bad)  
   14001aa9a:	test   DWORD PTR [rip+0xffffffffef331d50],0xf968181c        # 0x12f34c7f4
   14001aaa4:	shl    ebx,cl
   14001aaa6:	scas   eax,DWORD PTR es:[rdi]
   14001aaa7:	pop    rdi
   14001aaa8:	stc    
   14001aaa9:	out    0xbf,eax
   14001aaab:	in     al,dx
   14001aaac:	jmp    0x14001aaca
   14001aaae:	(bad)  
   14001aaaf:	test   DWORD PTR [rdx-0x52bd13d1],eax
   14001aab5:	(bad)  
   14001aab6:	and    eax,0x53006508
   14001aabb:	add    DWORD PTR [rbp+0x16],eax
   14001aabe:	shl    BYTE PTR [rsi-0x31],1
   14001aac1:	int    0x43
   14001aac3:	push   rdi
   14001aac4:	std    
   14001aac5:	repnz mov ds,esi
   14001aac8:	jne    0x14001aa5f
   14001aaca:	test   dh,ah
   14001aacc:	add    eax,DWORD PTR [rax]
   14001aace:	in     eax,0x70
   14001aad0:	in     eax,dx
   14001aad1:	ror    DWORD PTR [rbx+rsi*8+0x6b],0xd
   14001aad6:	sar    DWORD PTR [rdi],cl
   14001aad8:	jo     0x14001ab18
   14001aada:	(bad)  [rdx-0x250d5845]
   14001aae0:	adc    ebp,DWORD PTR [rdi-0x18924ea1]
   14001aae6:	mov    cl,0xb6
   14001aae8:	(bad)  
   14001aae9:	add    al,0x81
   14001aaeb:	lahf   
   14001aaec:	push   0xffffffff8f4b65f1
   14001aaf1:	pop    rdx
   14001aaf2:	std    
   14001aaf3:	rex.WXB adc r10b,cl
   14001aaf6:	add    BYTE PTR [rsi+0x159e206],ah
   14001aafc:	mov    ch,0xdf
   14001aafe:	mov    ebp,0x4fc4fb3d
   14001ab03:	outs   dx,BYTE PTR ds:[rsi]
   14001ab04:	jmp    0x14001ab65
   14001ab06:	cmp    ebp,DWORD PTR [rdi+0x66]
   14001ab09:	std    
   14001ab0a:	ds add edx,edi
   14001ab0d:	jmp    0x14001ab4e
   14001ab0f:	push   rsi
   14001ab10:	rex.RXB iret 
   14001ab12:	cdq    
   14001ab13:	mov    cl,0x74
   14001ab15:	mul    DWORD PTR [rcx-0x3a844b3f]
   14001ab1b:	(bad)  
   14001ab1c:	outs   dx,DWORD PTR ds:[esi]
   14001ab1e:	jp     0x14001ab1e
   14001ab20:	lods   eax,DWORD PTR ds:[rsi]
   14001ab21:	cmp    DWORD PTR [rbp-0x641faf48],edi
   14001ab27:	pop    rcx
   14001ab28:	jl     0x14001ab17
   14001ab2a:	fistp  QWORD PTR [rdi+0x600aa184]
   14001ab30:	(bad)  
   14001ab31:	and    BYTE PTR [rsi-0x1241cfeb],bl
   14001ab37:	jo     0x14001ab94
   14001ab39:	xlat   BYTE PTR ds:[rbx]
   14001ab3a:	ror    BYTE PTR [rdi-0x72f2e8a9],cl
   14001ab40:	data16 sti 
   14001ab42:	neg    DWORD PTR [rbp-0x19012698]
   14001ab48:	sti    
   14001ab49:	sbb    eax,0xf9bd3c1f
   14001ab4e:	repnz pop rsi
   14001ab50:	test   BYTE PTR [rsi],bl
   14001ab52:	(bad)  
   14001ab53:	pop    rax
   14001ab54:	loopne 0x14001ab7d
   14001ab56:	(bad)  
   14001ab57:	not    DWORD PTR [rax+rsi*8+0x15]
   14001ab5b:	or     al,BYTE PTR [rbp+0x2850a142]
   14001ab61:	adc    al,0xa
   14001ab63:	test   DWORD PTR [rdx-0x5f],eax
   14001ab66:	push   rax
   14001ab67:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab6a:	test   DWORD PTR [rdx-0x5f],eax
   14001ab6d:	push   rax
   14001ab6e:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab71:	test   DWORD PTR [rdx-0x5f],eax
   14001ab74:	push   rax
   14001ab75:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab78:	test   DWORD PTR [rdx-0x5f],eax
   14001ab7b:	push   rax
   14001ab7c:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab7f:	test   DWORD PTR [rdx-0x5f],eax
   14001ab82:	push   rax
   14001ab83:	sub    BYTE PTR [rsi-0x66f401e0],ah
   14001ab89:	and    esi,DWORD PTR [rax+0x0]
   14001ab8c:	xlat   BYTE PTR ds:[rbx]
   14001ab8d:	lahf   
   14001ab8e:	(bad)  
   14001ab8f:	ret    0x0
   14001ab92:	add    BYTE PTR [rax],al
   14001ab94:	rex.WB
   14001ab95:	rex.RB
   14001ab96:	rex.WRX
   14001ab97:	rex.R scas al,BYTE PTR es:[rdi]
   14001ab99:	rex.X (bad) 
   14001ab9b:	(bad)  
   14001ab9c:	add    BYTE PTR [rax],al
   14001ab9e:	add    BYTE PTR [rax],al
   14001aba0:	sub    BYTE PTR [rax],al
   14001aba2:	add    BYTE PTR [rax],al
   14001aba4:	xor    BYTE PTR [rax],al
   14001aba6:	add    BYTE PTR [rax],al
   14001aba8:	(bad)  
   14001aba9:	add    BYTE PTR [rax],al
   14001abab:	add    BYTE PTR [rcx],al
   14001abad:	add    BYTE PTR [rax],ah
   14001abaf:	add    BYTE PTR [rax],al
   14001abb1:	add    BYTE PTR [rax],al
   14001abb3:	add    BYTE PTR [rax+0x25],al
	...
   14001ad95:	add    BYTE PTR [rax],al
   14001ad97:	add    BYTE PTR [rsi+0x79],cl
   14001ad9a:	jg     0x14001ade1
   14001ad9c:	rex.XB sahf 
   14001ad9e:	rcl    BYTE PTR [rcx+0x3f666b53],0x59
   14001ada5:	push   rsi
   14001ada6:	rex.X or BYTE PTR [rax],al
	...
   14001ae51:	add    BYTE PTR [rax],al
   14001ae53:	add    BYTE PTR [rbx+riz*2+0x59],dl
   14001ae57:	add    eax,0xbabc9b44
   14001ae5c:	cmp    edi,DWORD PTR [rdx-0x45c4000c]
   14001ae62:	hlt    
   14001ae63:	inc    BYTE PTR [rsp+rbx*4-0x41]
   14001ae67:	mov    esi,0x34455858
   14001ae6c:	push   rsp
   14001ae6d:	(bad)  
   14001ae6e:	pop    rsp
   14001ae6f:	add    eax,DWORD PTR [rax]
	...
   14001af11:	add    BYTE PTR [rax],al
   14001af13:	add    BYTE PTR [rbp+0x64],dl
   14001af16:	pop    rdx
   14001af17:	xor    al,0x3b
   14001af19:	mov    ecx,0xba3bfaf2
   14001af1e:	hlt    
   14001af1f:	(bad)  
   14001af20:	cmp    edi,DWORD PTR [rdx-0x46c4010c]
   14001af26:	hlt    
   14001af27:	(bad)  
   14001af28:	cmp    al,0xb1
   14001af2a:	in     al,dx
   14001af2b:	repz push rcx
   14001af2d:	push   0x71
   14001af2f:	imul   edx,DWORD PTR [rdi+0x56],0x4d
   14001af33:	(bad)  
	...
   14001afd0:	push   rbp
   14001afd1:	(bad)  
   14001afd2:	pop    rcx
   14001afd3:	add    ecx,DWORD PTR [rcx-0x77]
   14001afd6:	lahf   
   14001afd7:	pushf  
   14001afd8:	cmp    edi,DWORD PTR [rcx-0x46c4010c]
   14001afde:	hlt    
   14001afdf:	(bad)  
   14001afe0:	cmp    esi,DWORD PTR [rdi-0x4bc4010c]
   14001afe6:	repz (bad) 
   14001afe8:	cmp    al,0xad
   14001afea:	icebp  
   14001afeb:	(bad)  
   14001afec:	cmp    al,0xa1
   14001afee:	out    dx,eax
   14001afef:	std    
   14001aff0:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14001aff2:	mov    WORD PTR [rdi+0x8515256],cs
	...
   14001b090:	push   rdi
   14001b091:	pop    rax
   14001b092:	rex.WRXB (bad) 
   14001b094:	cmp    eax,0x3cf1eaa9
   14001b099:	mov    al,0xf2
   14001b09b:	(bad)  
   14001b09c:	cmp    al,0xaf
   14001b09e:	repnz (bad) 
   14001b0a0:	cmp    al,0xac
   14001b0a2:	icebp  
   14001b0a3:	(bad)  
   14001b0a4:	cmp    al,0xa7
   14001b0a6:	lock (bad) 
   14001b0a8:	cmp    esp,DWORD PTR [rax-0x66c40011]
   14001b0ae:	out    dx,al
   14001b0af:	(bad)  
   14001b0b0:	cmp    edx,DWORD PTR [rcx+0x684affee]
   14001b0b6:	xchg   ebp,eax
   14001b0b7:	xchg   esi,eax
   14001b0b8:	push   rsi
   14001b0b9:	rex.WRB push r8
   14001b0bb:	or     DWORD PTR [rax],eax
	...
   14001b149:	add    BYTE PTR [rax],al
   14001b14b:	add    BYTE PTR [rbx+0x51],dl
   14001b14e:	pop    rsi
   14001b14f:	add    DWORD PTR [rsi+0x65],ecx
   14001b152:	jge    0x14001b1cf
   14001b154:	cmp    ebx,DWORD PTR [rdx-0x61c40111]
   14001b15a:	out    dx,eax
   14001b15b:	(bad)  
   14001b15c:	cmp    ebx,DWORD PTR [rsi-0x64c40011]
   14001b162:	out    dx,eax
   14001b163:	(bad)  
   14001b164:	cmp    ebx,DWORD PTR [rax-0x6bc40112]
   14001b16a:	out    dx,al
   14001b16b:	(bad)  
   14001b16c:	cmp    ecx,DWORD PTR [rdi-0x76c40113]
   14001b172:	in     eax,dx
   14001b173:	(bad)  
   14001b174:	cmp    eax,DWORD PTR [rdx+0x5b4efeec]
   14001b17a:	add    DWORD PTR [rsi+0x6574c55],0x0
	...
   14001b209:	add    BYTE PTR [rax],al
   14001b20b:	add    BYTE PTR [rsi+0x41],dl
   14001b20e:	rex or edi,DWORD PTR [rip+0x3bded470]        # 0x17be08685
   14001b215:	sub    esp,0xfffffffe
   14001b218:	cmp    ecx,DWORD PTR [rax-0x75c40113]
   14001b21e:	in     eax,dx
   14001b21f:	(bad)  
   14001b220:	cmp    ecx,DWORD PTR [rbx-0x77c40113]
   14001b226:	in     al,dx
   14001b227:	(bad)  
   14001b228:	cmp    eax,DWORD PTR [rbp-0x7cc40014]
   14001b22e:	in     al,dx
   14001b22f:	(bad)  
   14001b230:	cmp    eax,DWORD PTR [rcx+0x7e3cfeec]
   14001b236:	jmp    0x14001b237
   14001b238:	cmp    al,0x79
   14001b23a:	(bad)  
   14001b23b:	cld    
   14001b23c:	push   rdx
   14001b23d:	push   rcx
   14001b23e:	imul   esp,DWORD PTR [rsi+0x54],0x35c4d
	...
   14001b2c5:	add    BYTE PTR [rax],al
   14001b2c7:	add    BYTE PTR [rbp+0x35],cl
   14001b2ca:	add    DWORD PTR [r12+r15*1+0x56],ecx
   14001b2cf:	pop    rbx
   14001b2d0:	xor    bl,BYTE PTR [rax-0x2e]
   14001b2d3:	push   QWORD PTR [rsi]
   14001b2d5:	data16 (bad) 
   14001b2d8:	cmp    BYTE PTR [rdi-0x1a],ch
   14001b2db:	(bad)  
   14001b2dc:	cmp    DWORD PTR [rbx-0x17],esi
   14001b2df:	(bad)  
   14001b2e0:	cmp    dh,BYTE PTR [rsi-0x16]
   14001b2e3:	(bad)  
   14001b2e4:	cmp    dh,BYTE PTR [rdi-0x16]
   14001b2e7:	(bad)  
   14001b2e8:	cmp    dh,BYTE PTR [rsi-0x16]
   14001b2eb:	(bad)  
   14001b2ec:	cmp    dh,BYTE PTR [rdi-0x16]
   14001b2ef:	(bad)  
   14001b2f0:	cmp    edi,DWORD PTR [rax-0x15]
   14001b2f3:	(bad)  
   14001b2f4:	cmp    edi,DWORD PTR [rax-0x15]
   14001b2f7:	(bad)  
   14001b2f8:	cmp    al,0x78
   14001b2fa:	jmp    0x14001b2fb
   14001b2fc:	cmp    eax,0x56f7e877
   14001b301:	rex.WXB push r10
   14001b303:	rex.RB push r12
   14001b305:	rex.WRXB pop r15
   14001b307:	add    al,BYTE PTR [rax]
	...
   14001b33d:	add    BYTE PTR [rax],al
   14001b33f:	add    BYTE PTR [rcx+0x32],dl
   14001b342:	(bad)  
   14001b343:	add    dl,BYTE PTR [rbx+0x32]
   14001b346:	cmp    dl,BYTE PTR [rsi]
	...
   14001b388:	rex.WRXB (bad) 
   14001b38a:	xor    BYTE PTR [rdx],cl
   14001b38c:	(bad)  
   14001b38d:	xor    ecx,DWORD PTR [rdx-0x4cc1d635]
   14001b393:	jmp    FWORD PTR [rip+0x31fec04a]        # 0x1720073e3
   14001b399:	push   rsp
   14001b39a:	int    0xfe
   14001b39c:	xor    al,0x5c
   14001b39e:	xlat   BYTE PTR ds:[rbx]
   14001b39f:	push   QWORD PTR [rsi]
   14001b3a1:	movsxd ebx,esi
   14001b3a3:	(bad)  
   14001b3a4:	(bad)  
   14001b3a5:	jecxz  0x14001b3a6
   14001b3a8:	(bad)  
   14001b3a9:	push   0xffffffffffffffe6
   14001b3ab:	(bad)  
   14001b3ac:	cmp    BYTE PTR [rbp-0x18],ch
   14001b3af:	(bad)  
   14001b3b0:	cmp    BYTE PTR [rax-0x17],dh
   14001b3b3:	(bad)  
   14001b3b4:	cmp    DWORD PTR [rdx+rbp*8-0x1],esi
   14001b3b8:	cmp    dh,BYTE PTR [rdi-0x16]
   14001b3bb:	(bad)  
   14001b3bc:	cmp    edi,DWORD PTR [rdx-0x15]
   14001b3bf:	(bad)  
   14001b3c0:	(bad)  
   14001b3c1:	ja     0x14001b39e
   14001b3c3:	out    0x58,eax
   14001b3c5:	rex.WB
   14001b3c6:	rex.RXB sub al,0x54
   14001b3c9:	push   rcx
   14001b3ca:	(bad)  
   14001b3cb:	add    DWORD PTR [rax],eax
	...
   14001b3f9:	add    BYTE PTR [rax],al
   14001b3fb:	add    BYTE PTR [rdi+0x32],cl
   14001b3fe:	rex.RX add r10b,BYTE PTR [rbx+0x32]
   14001b402:	cmp    eax,DWORD PTR [rax+0x3e]
   14001b405:	xor    edi,DWORD PTR [rdi-0x73]
	...
   14001b444:	rex.RXB sub DWORD PTR [r9],r14d
   14001b447:	add    DWORD PTR [rdx+rbp*1+0x3e],eax
   14001b44b:	pop    rsi
   14001b44c:	(bad)  
   14001b44d:	es xchg esp,eax
   14001b44f:	(bad)  
   14001b450:	and    ebp,DWORD PTR [rsi]
   14001b452:	popf   
   14001b453:	jmp    QWORD PTR [rsi]
   14001b455:	ss test al,0xff
   14001b458:	sub    bh,BYTE PTR [rdi]
   14001b45a:	mov    ah,0xff
   14001b45c:	sub    al,0x48
   14001b45e:	mov    edi,0xc9502fff
   14001b463:	push   QWORD PTR [rbx]
   14001b465:	push   rdi
   14001b466:	sar    edi,1
   14001b468:	xor    eax,0x36ffda5e
   14001b46d:	fs loope 0x14001b46f
   14001b470:	(bad)  
   14001b471:	push   0xffffffffffffffe6
   14001b473:	push   QWORD PTR [rdi]
   14001b475:	outs   dx,BYTE PTR ds:[rsi]
   14001b476:	call   0x12a75ed7a
   14001b47b:	(bad)  
   14001b47c:	cmp    bh,BYTE PTR [rcx-0x15]
   14001b47f:	(bad)  
   14001b480:	cmp    edi,DWORD PTR [rbx+rbp*8-0x1]
   14001b484:	rex.X je 0x14001b451
   14001b487:	rcr    BYTE PTR [rax+0x49],cl
   14001b48a:	rex.RX sbb r8b,BYTE PTR [rax]
	...
   14001b4b5:	add    BYTE PTR [rax],al
   14001b4b7:	add    BYTE PTR [rcx+0x32],dl
   14001b4ba:	add    edx,DWORD PTR [r8+0x32]
   14001b4be:	rex.RXB
   14001b4bf:	rex.WR (bad) 
   14001b4c1:	xor    esi,DWORD PTR [rbp+0x633247ee]
   14001b4c7:	add    BYTE PTR ds:[rax],al
	...
   14001b502:	add    BYTE PTR [rax],al
   14001b504:	push   rax
   14001b505:	sub    ebx,DWORD PTR [rsi]
   14001b507:	sbb    eax,0xe2761e1e
   14001b50c:	sbb    bl,BYTE PTR [rsi]
   14001b50e:	mov    esi,edi
   14001b510:	sbb    eax,0x21ff9023
   14001b515:	sub    dl,BYTE PTR [rdi-0x5ecfdb02]
   14001b51b:	(bad)  
   14001b51c:	(bad)  
   14001b51d:	cmp    DWORD PTR [rdi+rdi*8-0x149bed6],ebp
   14001b524:	sub    al,0x49
   14001b526:	sar    dh,0x30
   14001b529:	push   rcx
   14001b52a:	retf   0x34ff
   14001b52d:	pop    rax
   14001b52e:	sar    esi,cl
   14001b530:	ss (bad) 
   14001b532:	fdiv   st(6),st
   14001b534:	(bad)  
   14001b535:	addr32 in al,0xff
   14001b538:	(bad)  
   14001b539:	ins    DWORD PTR es:[rdi],dx
   14001b53a:	call   0x12a76ee3d
   14001b53f:	(bad)  
   14001b540:	cmp    bh,BYTE PTR [rdx-0x15]
   14001b543:	(bad)  
   14001b544:	cmp    eax,0x45feeb7f
   14001b549:	jno    0x14001b502
   14001b54b:	rcr    BYTE PTR [rdx+0x47],0x3c
   14001b54f:	adc    al,BYTE PTR [rax]
	...
   14001b571:	add    BYTE PTR [rax],al
   14001b573:	add    BYTE PTR [rcx+0x32],dl
   14001b576:	rex.XB add eax,0x6453334d
   14001b57c:	sub    eax,0x34f7bd34
   14001b581:	xor    esp,DWORD PTR [rax+0x6b3244ca]
   14001b587:	add    eax,0x0
	...
   14001b5ac:	test   DWORD PTR [rdi+0x15],ecx
   14001b5af:	add    bh,BYTE PTR [rbx+0x46]
   14001b5b2:	clts   
   14001b5b4:	or     DWORD PTR [rsi+0x15],0x2
   14001b5b8:	add    BYTE PTR [rax],al
   14001b5ba:	add    BYTE PTR [rax],al
   14001b5bc:	(bad)  
   14001b5bd:	xor    eax,0x2b530113
   14001b5c2:	(bad)  
   14001b5c3:	adc    ah,BYTE PTR [rsi]
   14001b5c5:	sbb    al,0x55
   14001b5c7:	mov    edx,0xfe791914
   14001b5cc:	(bad)  
   14001b5cd:	sbb    edi,DWORD PTR [rdi-0x2]
   14001b5d0:	sbb    DWORD PTR [rip+0x211cff86],ebx        # 0x1611eb55c
   14001b5d6:	(bad)  
   14001b5d7:	(bad)  
   14001b5d8:	(bad)  
   14001b5d9:	(bad)  
   14001b5da:	xchg   ebp,eax
   14001b5db:	(bad)  
   14001b5dc:	and    ebp,DWORD PTR [rsi]
   14001b5de:	sahf   
   14001b5df:	jmp    QWORD PTR [rsi]
   14001b5e1:	xor    eax,0x3e29fea8
   14001b5e6:	mov    dl,0xfe
   14001b5e8:	sub    al,0x46
   14001b5ea:	mov    ebp,0xc74e2eff
   14001b5ef:	(bad)  
   14001b5f0:	xor    edx,DWORD PTR [rsi-0x2e]
   14001b5f3:	(bad)  
   14001b5f4:	ss (bad) 
   14001b5f6:	fdiv   st(7),st
   14001b5f8:	(bad)  
   14001b5f9:	push   0x6f38fee5
   14001b5fe:	jmp    0x12b79f001
   14001b603:	(bad)  
   14001b604:	cmp    al,0x7e
   14001b606:	jmp    0x14001b606
   14001b608:	cmp    eax,DWORD PTR [rbx+0x7245ffec]
   14001b60e:	mov    dl,0xb8
   14001b610:	pop    rcx
   14001b611:	rex.W
   14001b612:	ds (bad) 
   14001b614:	push   rbp
   14001b615:	push   rdx
   14001b616:	push   rdi
   14001b617:	add    DWORD PTR [rax],eax
	...
   14001b62d:	add    BYTE PTR [rax],al
   14001b62f:	add    BYTE PTR [rbp+0x32],dl
   14001b632:	or     BYTE PTR ss:[rax+0x33],cl
   14001b636:	gs jns 0x14001b666
   14001b639:	xor    eax,0x332cfbc1
   14001b63e:	mov    edi,0x743241fe
   14001b643:	push   0x0
	...
   14001b668:	test   BYTE PTR [rdi+0x14],cl
   14001b66b:	(bad)  
   14001b66c:	(bad)  
   14001b66d:	pop    rax
   14001b66e:	sbb    eax,0x397cb65d
   14001b673:	mov    edi,0x6b1e578c
   14001b678:	js     0x14001b6bf
   14001b67a:	or     eax,0xd477c33
   14001b67f:	push   rax
   14001b680:	cmp    eax,0x17c83b24
   14001b685:	adc    bl,BYTE PTR [rbp-0x1]
   14001b688:	adc    edx,DWORD PTR [rbp*2+0x771814fe]
   14001b68f:	(bad)  
   14001b690:	(bad)  
   14001b691:	sbb    edi,DWORD PTR [rbp-0x1]
   14001b694:	sbb    DWORD PTR [rip+0x201bfe84],ebx        # 0x1601db51e
   14001b69a:	mov    esi,?
   14001b69c:	(bad)  
   14001b69d:	es xchg ebx,eax
   14001b69f:	jmp    QWORD PTR [rbx]
   14001b6a1:	sub    eax,0x3425fe9c
   14001b6a6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b6a7:	(bad)  
   14001b6a8:	sub    DWORD PTR [rip+0x462bffb2],edi        # 0x1862db660
   14001b6ae:	mov    ebp,0xc84e2ffe
   14001b6b3:	(bad)  
   14001b6b4:	xor    edx,DWORD PTR [rdi-0x2c]
   14001b6b7:	push   QWORD PTR [rsi]
   14001b6b9:	(bad)  
   14001b6ba:	(bad)  
   14001b6bc:	(bad)  
   14001b6bd:	imul   esp,edi,0xfffffffe
   14001b6c0:	cmp    BYTE PTR [rdx+rbp*8-0x1],dh
   14001b6c4:	cmp    al,0x7c
   14001b6c6:	jmp    0x14001b6c6
   14001b6c8:	cmp    eax,DWORD PTR [rbx-0x77c40014]
   14001b6ce:	in     al,dx
   14001b6cf:	inc    BYTE PTR [rbx+0x7b]
   14001b6d2:	ret    0x59c9
   14001b6d5:	rex.WB (bad) 
   14001b6d7:	sub    al,0x56
   14001b6d9:	rex.WR
   14001b6da:	rex.WX add rax,QWORD PTR [rax]
	...
   14001b6e5:	add    BYTE PTR [rax],al
   14001b6e7:	add    BYTE PTR [rsi+rsi*1+0x3b],dl
   14001b6eb:	add    bl,BYTE PTR [rax+0x33]
   14001b6ee:	sub    al,0x15
   14001b6f0:	rex.X
   14001b6f1:	sbb    DWORD PTR ss:[rbp-0x23bcad3],0xffc1342d
   14001b6fc:	xor    esi,DWORD PTR cs:[rsi+0x653246ee]
   14001b703:	adc    al,0x0
	...
   14001b71d:	add    BYTE PTR [rax],al
   14001b71f:	add    BYTE PTR [rbp+rdx*2+0x4a7f0117],cl
   14001b726:	movhps QWORD PTR [rbx-0x3061d48f],xmm5
   14001b72d:	xchg   edx,eax
   14001b72e:	rex.RXB dec r11b
   14001b731:	nop
   14001b732:	inc    r15
   14001b735:	mov    cs,WORD PTR [rbp-0x1]
   14001b738:	mov    bh,0x81
   14001b73a:	rex.R push QWORD PTR [rsi-0x7200d384]
   14001b741:	pop    rsi
   14001b742:	sub    bh,bh
   14001b744:	sub    al,0x1c
   14001b746:	rex.W call QWORD PTR [rdi]
   14001b749:	adc    DWORD PTR [rax-0x1],ebx
   14001b74c:	adc    edx,DWORD PTR [rdx+rbp*2]
   14001b74f:	call   QWORD PTR [rbx]
   14001b751:	(bad)  
   14001b752:	jbe    0x14001b753
   14001b754:	(bad)  
   14001b755:	sbb    edi,DWORD PTR [rdi+rdi*8+0x18]
   14001b759:	sbb    eax,0x201bff84
   14001b75e:	mov    edi,?
   14001b760:	(bad)  
   14001b761:	es xchg ebx,eax
   14001b763:	jmp    QWORD PTR [rbx]
   14001b765:	sub    eax,0x3526ff9c
   14001b76a:	test   al,0xff
   14001b76c:	sub    bh,BYTE PTR [rsi]
   14001b76e:	mov    bl,0xff
   14001b770:	sub    al,0x47
   14001b772:	mov    edi,0xcc5131ff
   14001b777:	push   QWORD PTR [rip+0x37ffd95c]        # 0x1780190d9
   14001b77d:	push   0x7138ffe5
   14001b782:	jmp    0x12b7cf386
   14001b787:	(bad)  
   14001b788:	cmp    al,0x83
   14001b78a:	in     al,dx
   14001b78b:	(bad)  
   14001b78c:	cmp    ecx,DWORD PTR [rax-0x74c40013]
   14001b792:	in     eax,dx
   14001b793:	(bad)  
   14001b794:	cmp    eax,0x4df1e488
   14001b799:	pop    rdx
   14001b79a:	jne    0x14001b723
   14001b79c:	push   rdi
   14001b79d:	xor    ebp,DWORD PTR [r15]
   14001b7a0:	pop    rax
   14001b7a1:	cmp    eax,0x39571530
   14001b7a6:	xor    BYTE PTR [rax],ah
   14001b7a8:	rex.WRX cmp QWORD PTR [rcx+0x68],r10
   14001b7ac:	xor    eax,0x2eddb63d
   14001b7b1:	cmp    cl,cl
   14001b7b3:	jmp    FWORD PTR [rip+0x2dffc335]        # 0x16e017aee
   14001b7b9:	xor    al,0xbf
   14001b7bb:	(bad)  
   14001b7bc:	cmp    al,0x32
   14001b7be:	test   BYTE PTR [rdx+0x178323f],bl
	...
   14001b7dc:	mov    dl,BYTE PTR [rsi+rdx*1+0x4]
   14001b7e0:	xchg   DWORD PTR [rcx+0x14],edx
   14001b7e3:	ds (bad) 
   14001b7e5:	mov    DWORD PTR [rcx],edi
   14001b7e7:	(bad)  
   14001b7e8:	rcl    BYTE PTR [rbp-0x6c2f01bf],cl
   14001b7ee:	rex.XB dec r14d
   14001b7f1:	xchg   edx,eax
   14001b7f2:	rex.W dec cl
   14001b7f5:	(bad)  
   14001b7f6:	rex.WXB inc r12
   14001b7f9:	mov    WORD PTR [rbp-0x2],cs
   14001b7fc:	mov    ecx,0xb0fe4c84
   14001b801:	js     0x14001b832
   14001b803:	inc    BYTE PTR [rsi+0x27ff2b58]
   14001b809:	sbb    BYTE PTR [rdi-0x2],al
   14001b80c:	(bad)  
   14001b80d:	adc    DWORD PTR [rsi-0x2],edx
   14001b810:	adc    edx,DWORD PTR [rcx+rbp*2]
   14001b813:	call   QWORD PTR [rbx]
   14001b815:	(bad)  
   14001b816:	jbe    0x14001b816
   14001b818:	(bad)  
   14001b819:	sbb    edi,DWORD PTR [rbp-0x2]
   14001b81c:	sbb    DWORD PTR [rip+0x211cff85],ebx        # 0x1611eb7a7
   14001b822:	(bad)  
   14001b823:	(bad)  
   14001b824:	(bad)  
   14001b825:	(bad)  
   14001b826:	xchg   ebp,eax
   14001b827:	(bad)  
   14001b828:	and    al,0x2e
   14001b82a:	lahf   
   14001b82b:	jmp    QWORD PTR [rdi]
   14001b82d:	(bad)  
   14001b82e:	stos   DWORD PTR es:[rdi],eax
   14001b82f:	(bad)  
   14001b830:	sub    eax,DWORD PTR [rcx-0x49]
   14001b833:	(bad)  
   14001b834:	sub    eax,0x33ffc54c
   14001b839:	push   rsi
   14001b83a:	sar    esi,cl
   14001b83c:	(bad)  
   14001b83d:	fs loope 0x14001b83e
   14001b840:	(bad)  
   14001b841:	outs   dx,BYTE PTR ds:[rsi]
   14001b842:	jmp    0x12b7af346
   14001b847:	(bad)  
   14001b848:	cmp    al,0x82
   14001b84a:	in     al,dx
   14001b84b:	(bad)  
   14001b84c:	cmp    ecx,DWORD PTR [rax-0x74c40114]
   14001b852:	in     eax,dx
   14001b853:	(bad)  
   14001b854:	cmp    ecx,DWORD PTR [rbx-0x79c40013]
   14001b85a:	in     al,dx
   14001b85b:	(bad)  
   14001b85c:	cmp    bh,BYTE PTR [rbp-0x17]
   14001b85f:	cld    
   14001b860:	cmp    BYTE PTR [rbx+rbx*8-0x11],ch
   14001b864:	xor    eax,0x32f8df59
   14001b869:	rex.WB (bad) 
   14001b86c:	(bad)  
   14001b86d:	cmp    eax,0x362effce
   14001b872:	(bad)  
   14001b873:	(bad)  
   14001b874:	sub    eax,0x2cfec134
   14001b879:	xor    edi,DWORD PTR [rbp+0x663245fe]
   14001b87f:	cmp    BYTE PTR [rax],al
	...
   14001b895:	add    BYTE PTR [rax],al
   14001b897:	add    BYTE PTR [rdx-0x60f4edb3],al
   14001b89d:	push   0xffffffff98d37923
   14001b8a2:	rex.XB not r12b
   14001b8a5:	cdq    
   14001b8a6:	rex.X (bad) 
   14001b8a8:	rcl    DWORD PTR [rsi-0x6a2e01be],cl
   14001b8ae:	rex.X call rax
   14001b8b1:	xchg   ebx,eax
   14001b8b2:	rex.R dec spl
   14001b8b5:	nop
   14001b8b6:	inc    r14
   14001b8b9:	lea    ecx,[rbp-0x2]
   14001b8bc:	ror    DWORD PTR [rdx-0x7a4601b2],0x50
   14001b8c3:	(bad)  
   14001b8c4:	lods   al,BYTE PTR ds:[rsi]
   14001b8c5:	jbe    0x14001b8f8
   14001b8c7:	push   QWORD PTR [rsi+0x4e]
   14001b8ca:	(bad)  
   14001b8cb:	(bad)  
   14001b8cc:	(bad)  
   14001b8cd:	adc    al,0x47
   14001b8cf:	(bad)  
   14001b8d0:	(bad)  
   14001b8d1:	adc    DWORD PTR [rdi-0x1],edx
   14001b8d4:	adc    edx,DWORD PTR [rbx+rbp*2]
   14001b8d7:	(bad)  
   14001b8d8:	adc    al,0x18
   14001b8da:	ja     0x14001b8da
   14001b8dc:	(bad)  
   14001b8dd:	sbb    edi,DWORD PTR [rsi-0x1]
   14001b8e0:	sbb    DWORD PTR [rip+0x221cfe87],ebx        # 0x1621eb76d
   14001b8e6:	(bad)  
   14001b8e7:	(bad)  
   14001b8e8:	and    DWORD PTR [rcx],ebp
   14001b8ea:	xchg   edi,eax
   14001b8eb:	jmp    QWORD PTR [rcx+rsi*1]
   14001b8ee:	movabs ds:0xbe462cfeb03b28fe,eax
   14001b8f7:	push   QWORD PTR [rcx]
   14001b8f9:	push   rdx
   14001b8fa:	(bad)  
   14001b8fb:	(bad)  
   14001b8fc:	ss pop rdi
   14001b8fe:	(bad)  
   14001b900:	(bad)  
   14001b901:	ins    BYTE PTR es:[rdi],dx
   14001b902:	call   0x12b79f406
   14001b907:	(bad)  
   14001b908:	cmp    al,0x82
   14001b90a:	in     al,dx
   14001b90b:	(bad)  
   14001b90c:	cmp    ecx,DWORD PTR [rcx-0x74c40114]
   14001b912:	in     eax,dx
   14001b913:	(bad)  
   14001b914:	cmp    ecx,DWORD PTR [rdx-0x7ac40013]
   14001b91a:	in     al,dx
   14001b91b:	(bad)  
   14001b91c:	cmp    DWORD PTR [rbx+rbp*8-0x2],edi
   14001b920:	cmp    DWORD PTR [rbp-0x17],ebp
   14001b923:	push   QWORD PTR [rip+0x31fee357]        # 0x172009c80
   14001b929:	rex.RX xlat BYTE PTR ds:[rbx]
   14001b92b:	(bad)  
   14001b92c:	cs cmp cl,bl
   14001b92f:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e007d6a
   14001b935:	xor    al,0xc0
   14001b937:	(bad)  
   14001b938:	xor    dh,BYTE PTR [rdx]
   14001b93a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b93b:	rol    BYTE PTR [rbp+0x31],1
   14001b93e:	data16 add al,0x0
	...
   14001b94d:	add    BYTE PTR [rax],al
   14001b94f:	add    BYTE PTR [rbp-0x7dfde5a8],cl
   14001b955:	rex.WRB adc r12b,BYTE PTR [r15]
   14001b958:	mov    ebp,0xd8bc3785
   14001b95d:	sahf   
   14001b95e:	rex.W (bad) 
   14001b960:	xlat   BYTE PTR ds:[rbx]
   14001b961:	popf   
   14001b962:	rex.RX call rsi
   14001b965:	fwait
   14001b966:	rex.RB call r12
   14001b969:	cwde   
   14001b96a:	rex.X call rbx
   14001b96d:	xchg   esi,eax
   14001b96e:	call   r9
   14001b971:	xchg   esp,eax
   14001b972:	rex.XB dec r15d
   14001b975:	xchg   edx,eax
   14001b976:	rex.RXB dec r8d
   14001b979:	mov    cs,WORD PTR [rdi+rdi*8-0x3d]
   14001b97d:	mov    ecx,DWORD PTR [rbp-0x1]
   14001b980:	mov    esp,0xb6ff5087
   14001b985:	(bad)  
   14001b986:	push   rcx
   14001b987:	jmp    QWORD PTR [rdi+0x61ff2e72]
   14001b98d:	(bad)  
   14001b98e:	xor    eax,0x49111aff
   14001b993:	call   QWORD PTR [rdi]
   14001b995:	adc    DWORD PTR [rdx-0x1],ebx
   14001b998:	adc    edx,DWORD PTR [rsi+rbp*2]
   14001b99b:	call   QWORD PTR [rcx+rbx*1]
   14001b99e:	jns    0x14001b99f
   14001b9a0:	(bad)  
   14001b9a1:	sbb    al,0x80
   14001b9a3:	call   FWORD PTR [rdx]
   14001b9a5:	(bad)  
   14001b9a6:	mov    edi,edi
   14001b9a8:	sbb    eax,0x23ff9225
   14001b9ad:	sub    eax,0x3626ff9c
   14001b9b2:	test   eax,0xb8412bff
   14001b9b7:	jmp    FWORD PTR [rdi]
   14001b9b9:	rex.WRX enter 0x35ff,0x5b
   14001b9be:	fcos   
   14001b9c0:	(bad)  
   14001b9c1:	push   0xffffffffffffffe7
   14001b9c3:	(bad)  
   14001b9c4:	cmp    DWORD PTR [rdi-0x16],esi
   14001b9c7:	(bad)  
   14001b9c8:	cmp    al,0x82
   14001b9ca:	in     al,dx
   14001b9cb:	(bad)  
   14001b9cc:	cmp    ecx,DWORD PTR [rcx-0x74c40014]
   14001b9d2:	in     eax,dx
   14001b9d3:	(bad)  
   14001b9d4:	cmp    al,0x8a
   14001b9d6:	in     eax,dx
   14001b9d7:	(bad)  
   14001b9d8:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1585c601]
   14001b9df:	(bad)  
   14001b9e0:	cmp    DWORD PTR [rcx-0x18],ebp
   14001b9e3:	push   QWORD PTR [rdx+rdx*2]
   14001b9e6:	loope  0x14001b9e7
   14001b9e8:	xor    BYTE PTR [rcx-0x2e],al
   14001b9eb:	jmp    FWORD PTR [rsi]
   14001b9ed:	(bad)  
   14001b9ee:	enter  0x2dff,0x34
   14001b9f2:	ret    0x2cff
   14001b9f5:	xor    edi,DWORD PTR [rsi+0x703242ff]
   14001b9fb:	jae    0x14001b9fd
	...
   14001ba09:	add    BYTE PTR [rax],al
   14001ba0b:	add    BYTE PTR [rax-0x6df8e7ac],cl
   14001ba11:	pop    rbp
   14001ba12:	(bad)  
   14001ba13:	pop    rbx
   14001ba14:	rcr    DWORD PTR [rax-0x602716b9],1
   14001ba1a:	rex.WB (bad) 
   14001ba1c:	fcomp  DWORD PTR [rsi-0x612701b7]
   14001ba22:	rex.W call rdi
   14001ba25:	popf   
   14001ba26:	rex.RX (bad) 
   14001ba28:	(bad)  
   14001ba29:	fwait
   14001ba2a:	rex.R (bad) 
   14001ba2c:	rcr    DWORD PTR [rax-0x6a2d00be],cl
   14001ba32:	rex.B (bad) 
   14001ba34:	rcl    BYTE PTR [rbx-0x6f3400bb],1
   14001ba3a:	rex.WX inc spl
   14001ba3d:	mov    WORD PTR [rbp-0x2],cs
   14001ba40:	mov    ebp,0xb8fe4f88
   14001ba45:	test   BYTE PTR [rcx-0x1],dl
   14001ba48:	scas   eax,DWORD PTR es:[rdi]
   14001ba49:	jle    0x14001ba9c
   14001ba4b:	(bad)  
   14001ba4c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ba4d:	outs   dx,DWORD PTR ds:[rsi]
   14001ba4e:	sub    esi,edi
   14001ba50:	rex.XB sub edi,DWORD PTR [r14]
   14001ba53:	call   FWORD PTR [rax]
   14001ba55:	adc    BYTE PTR [rbx-0x2],cl
   14001ba58:	(bad)  
   14001ba59:	adc    bl,BYTE PTR [rdi-0x2]
   14001ba5c:	adc    edx,DWORD PTR [rsi]
   14001ba5e:	jb     0x14001ba5f
   14001ba60:	adc    eax,0x18fe7b1a
   14001ba65:	sbb    eax,0x211cfe84
   14001ba6a:	(bad)  
   14001ba6b:	jmp    QWORD PTR [rax]
   14001ba6d:	sub    BYTE PTR [rsi-0x5cceda02],dl
   14001ba73:	(bad)  
   14001ba74:	sub    DWORD PTR [rip+0x492dffb2],edi        # 0x1892fba2c
   14001ba7a:	ret    
   14001ba7b:	(bad)  
   14001ba7c:	xor    al,0x58
   14001ba7e:	(bad)  
   14001ba7f:	(bad)  
   14001ba80:	(bad)  
   14001ba81:	push   0x7639ffe5
   14001ba86:	(bad)  
   14001ba87:	(bad)  
   14001ba88:	cmp    al,0x82
   14001ba8a:	in     al,dx
   14001ba8b:	(bad)  
   14001ba8c:	cmp    ecx,DWORD PTR [rcx-0x74c40113]
   14001ba92:	in     eax,dx
   14001ba93:	(bad)  
   14001ba94:	cmp    al,0x8a
   14001ba96:	in     eax,dx
   14001ba97:	(bad)  
   14001ba98:	cmp    al,BYTE PTR [rdx+0x7739feec]
   14001ba9e:	(bad)  
   14001ba9f:	(bad)  
   14001baa0:	cmp    BYTE PTR [rbx-0x19],ah
   14001baa3:	push   QWORD PTR [rbx]
   14001baa5:	rex.WR (bad) 
   14001baa8:	(bad)  
   14001baa9:	cmp    eax,0x362efece
   14001baae:	(bad)  
   14001baaf:	jmp    FWORD PTR [rip+0x2cfec134]        # 0x16d007be9
   14001bab5:	xor    edi,DWORD PTR [rdx+0x633146f5]
   14001babb:	sbb    eax,0x0
	...
   14001bac8:	xchg   DWORD PTR [rbx+0x18],edx
   14001bacb:	adc    eax,0x9f347bb1
   14001bad0:	fldenv [rcx-0x5e2603b2]
   14001bad6:	rex.WRX (bad) 
   14001bad8:	fsub   DWORD PTR [rax-0x602701b3]
   14001bade:	rex.WXB (bad) 
   14001bae0:	fcomp  DWORD PTR [rsi-0x612700b7]
   14001bae6:	rex.W (bad) 
   14001bae8:	xlat   BYTE PTR ds:[rbx]
   14001bae9:	popf   
   14001baea:	rex.RX (bad) 
   14001baec:	(bad)  
   14001baed:	(bad)  
   14001baee:	rex.XB call r11
   14001baf1:	xchg   esi,eax
   14001baf2:	rex.B (bad) 
   14001baf4:	rcl    DWORD PTR [rbx+rax*2+0x4991cdff],1
   14001bafb:	inc    ch
   14001bafd:	lea    ecx,[rbp-0x2]
   14001bb00:	mov    esi,0xb8fe4f88
   14001bb05:	test   BYTE PTR [rcx-0x1],dl
   14001bb08:	mov    cl,0x80
   14001bb0a:	push   rbx
   14001bb0b:	(bad)  
   14001bb0c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bb0d:	jp     0x14001bb60
   14001bb0f:	(bad)  
   14001bb10:	xchg   esp,eax
   14001bb11:	movsxd ebp,DWORD PTR [rax]
   14001bb13:	jmp    FWORD PTR [rcx]
   14001bb15:	sbb    al,BYTE PTR [rbp-0x2]
   14001bb18:	sbb    DWORD PTR [rax],edx
   14001bb1a:	rex.WRXB (bad) 
   14001bb1c:	adc    eax,0x13ff6513
   14001bb21:	(bad)  
   14001bb22:	jbe    0x14001bb22
   14001bb24:	(bad)  
   14001bb25:	sbb    edi,DWORD PTR [rsi-0x2]
   14001bb28:	sbb    bl,BYTE PTR [rsi]
   14001bb2a:	mov    bh,bh
   14001bb2c:	sbb    eax,0x23fe9124
   14001bb31:	sub    eax,0x3827fe9c
   14001bb36:	lods   al,BYTE PTR ds:[rsi]
   14001bb37:	jmp    FWORD PTR [rsi+rax*2]
   14001bb3a:	mov    ebp,0xd15432fe
   14001bb3f:	(bad)  
   14001bb40:	(bad)  
   14001bb41:	data16 jrcxz 0x14001bb43
   14001bb44:	cmp    DWORD PTR [rbp-0x16],esi
   14001bb47:	(bad)  
   14001bb48:	cmp    al,0x82
   14001bb4a:	in     al,dx
   14001bb4b:	(bad)  
   14001bb4c:	cmp    al,0x8a
   14001bb4e:	in     eax,dx
   14001bb4f:	(bad)  
   14001bb50:	cmp    al,0x8e
   14001bb52:	out    dx,al
   14001bb53:	(bad)  
   14001bb54:	cmp    al,0x8a
   14001bb56:	in     eax,dx
   14001bb57:	(bad)  
   14001bb58:	cmp    al,BYTE PTR [rax+0x7439feeb]
   14001bb5e:	(bad)  
   14001bb5f:	(bad)  
   14001bb60:	ss pop rbp
   14001bb62:	in     eax,0xff
   14001bb64:	xor    al,BYTE PTR [rdi-0x27]
   14001bb67:	(bad)  
   14001bb68:	cs cmp cl,bl
   14001bb6b:	(bad)  
   14001bb6c:	sub    eax,0x2dffc335
   14001bb71:	xor    al,0xbf
   14001bb73:	(bad)  
   14001bb74:	cmp    BYTE PTR [rdx],dh
   14001bb76:	xchg   ecx,eax
   14001bb77:	mov    dl,0x42
   14001bb79:	xor    ch,BYTE PTR [rdi+0x2]
	...
   14001bb88:	mov    ebx,0xd88c3d84
   14001bb8d:	movabs al,ds:0xa1d9ff52a1d9f852
   14001bb96:	push   rcx
   14001bb97:	(bad)  
   14001bb98:	fisub  DWORD PTR [rdx-0x5e2600b1]
   14001bb9e:	rex.WRX (bad) 
   14001bba0:	fcomp  DWORD PTR [rdi-0x612700b4]
   14001bba6:	rex.WB call r15
   14001bba9:	sahf   
   14001bbaa:	rex.W call rsi
   14001bbad:	pushf  
   14001bbae:	rex.RB call r11
   14001bbb1:	cwde   
   14001bbb2:	rex.X call rdx
   14001bbb5:	xchg   ebp,eax
   14001bbb6:	rex.X dec edi
   14001bbb9:	xchg   edx,eax
   14001bbba:	rex.RXB inc r14d
   14001bbbd:	lea    ecx,[rdi+rdi*8-0x41]
   14001bbc1:	mov    DWORD PTR [rsi-0x1],ecx
   14001bbc4:	mov    eax,0xb1ff5184
   14001bbc9:	adc    BYTE PTR [rbx-0x1],0xa9
   14001bbcd:	jl     0x14001bc25
   14001bbcf:	call   FWORD PTR [rbp+0x76ff4771]
   14001bbd5:	rex.WRX
   14001bbd6:	call   FWORD PTR cs:[rdx+rdx*1]
   14001bbda:	rex.RXB call FWORD PTR [r8]
   14001bbdd:	adc    DWORD PTR [rsi-0x1],edx
   14001bbe0:	adc    edx,DWORD PTR [rbp*2+0x791915ff]
   14001bbe7:	call   FWORD PTR [rax]
   14001bbe9:	sbb    al,0x82
   14001bbeb:	call   FWORD PTR [rcx+riz*1]
   14001bbee:	(bad)  
   14001bbef:	jmp    QWORD PTR [rcx]
   14001bbf1:	sub    DWORD PTR [rdi-0x58cbd901],edx
   14001bbf7:	jmp    FWORD PTR [rbx]
   14001bbf9:	rex.X mov ecx,0xcd5131ff
   14001bbff:	push   QWORD PTR [rdi]
   14001bc01:	fs loop 0x14001bc03
   14001bc04:	cmp    DWORD PTR [rbp-0x16],esi
   14001bc07:	(bad)  
   14001bc08:	cmp    al,0x83
   14001bc0a:	in     al,dx
   14001bc0b:	(bad)  
   14001bc0c:	cmp    al,0x8b
   14001bc0e:	in     eax,dx
   14001bc0f:	(bad)  
   14001bc10:	cmp    ecx,DWORD PTR [rdi-0x75c30012]
   14001bc16:	in     eax,dx
   14001bc17:	(bad)  
   14001bc18:	cmp    DWORD PTR [rdi-0x15],edi
   14001bc1b:	(bad)  
   14001bc1c:	cmp    DWORD PTR [rdi-0x17],ebp
   14001bc1f:	push   QWORD PTR [rip+0x31ffe357]        # 0x172019f7c
   14001bc25:	rex.X (bad) 
   14001bc27:	jmp    FWORD PTR [rsi]
   14001bc29:	cmp    al,cl
   14001bc2b:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d017e66
   14001bc31:	xor    edi,DWORD PTR [rsi+0x6c3143fe]
   14001bc37:	push   rdi
	...
   14001bc48:	mov    dh,0x80
   14001bc4a:	cmp    al,BYTE PTR [rcx]
   14001bc4c:	mov    cl,0x7b
   14001bc4e:	(bad)  
   14001bc4f:	and    eax,0x854085bc
   14001bc54:	rcr    BYTE PTR [rdx-0x5e261cb0],cl
   14001bc5a:	push   rbx
   14001bc5b:	(bad)  
   14001bc5c:	fisub  DWORD PTR [rcx-0x5e2601b0]
   14001bc62:	rex.WRX (bad) 
   14001bc64:	fcomp  DWORD PTR [rdi-0x612701b5]
   14001bc6a:	rex.WB (bad) 
   14001bc6c:	xlat   BYTE PTR ds:[rbx]
   14001bc6d:	popf   
   14001bc6e:	rex.RXB call r12
   14001bc71:	cdq    
   14001bc72:	rex.XB (bad) 
   14001bc74:	rcl    BYTE PTR [rsi-0x6d2f00bf],cl
   14001bc7a:	rex.RX inc dil
   14001bc7d:	mov    cs,WORD PTR [rsi+rdi*8-0x41]
   14001bc81:	mov    DWORD PTR [rsi-0x2],ecx
   14001bc84:	mov    eax,0xb0ff5184
   14001bc89:	adc    BYTE PTR [rsi+rdi*8-0x58],0x7b
   14001bc8e:	push   rsi
   14001bc8f:	(bad)  
   14001bc90:	sahf   
   14001bc91:	jne    0x14001bce9
   14001bc93:	dec    DWORD PTR [rax+0x49fe305c]
   14001bc99:	(bad)  
   14001bc9a:	cmp    al,0xfe
   14001bc9c:	sbb    BYTE PTR [rax],dl
   14001bc9e:	rex.WX call QWORD PTR [rsi]
   14001bca1:	adc    bl,BYTE PTR [rdi-0x2]
   14001bca4:	adc    edx,DWORD PTR [rsi]
   14001bca6:	jae    0x14001bca6
   14001bca8:	(bad)  
   14001bca9:	sbb    edi,DWORD PTR [rbp-0x1]
   14001bcac:	sbb    bl,BYTE PTR [rsi]
   14001bcae:	mov    dh,bh
   14001bcb0:	(bad)  
   14001bcb1:	es xchg ebx,eax
   14001bcb3:	(bad)  
   14001bcb4:	and    al,0x30
   14001bcb6:	movabs eax,ds:0xc94e2ffeb43e2aff
   14001bcbf:	(bad)  
   14001bcc0:	ss (bad) 
   14001bcc2:	loopne 0x14001bcc3
   14001bcc4:	cmp    DWORD PTR [rbp-0x16],esi
   14001bcc7:	(bad)  
   14001bcc8:	cmp    al,0x84
   14001bcca:	in     al,dx
   14001bccb:	(bad)  
   14001bccc:	cmp    ecx,DWORD PTR [rbp-0x6fc40112]
   14001bcd2:	out    dx,al
   14001bcd3:	(bad)  
   14001bcd4:	cmp    ecx,DWORD PTR [rdx+0x7d39ffed]
   14001bcda:	jmp    0x14001bcda
   14001bcdc:	cmp    DWORD PTR [rbx-0x18],ebp
   14001bcdf:	(bad)  
   14001bce0:	xor    al,0x51
   14001bce2:	loopne 0x14001bce3
   14001bce4:	(bad)  
   14001bce5:	ds iret 
   14001bce7:	(bad)  
   14001bce8:	cs ss (bad) 
   14001bceb:	(bad)  
   14001bcec:	sub    eax,0x2effc134
   14001bcf1:	xor    dh,BYTE PTR [rdx+rbp*8+0x10623146]
	...
   14001bd14:	mov    bl,0x7d
   14001bd16:	cmp    DWORD PTR [rbx],ecx
   14001bd18:	mov    eax,0xc7553d82
   14001bd1d:	nop
   14001bd1e:	rex.RXB mov r9d,0xfc50a1d9
   14001bd24:	fldenv [rcx-0x602701b2]
   14001bd2a:	rex.WX (bad) 
   14001bd2c:	xlat   BYTE PTR ds:[rbx]
   14001bd2d:	sahf   
   14001bd2e:	rex.W call rsi
   14001bd31:	fwait
   14001bd32:	rex.R (bad) 
   14001bd34:	rcl    DWORD PTR [rdi-0x6c2f00be],cl
   14001bd3a:	rex.RB dec r8b
   14001bd3d:	mov    cs,WORD PTR [rbx-0x2]
   14001bd40:	mov    edi,0xb7fe4e89
   14001bd45:	test   BYTE PTR [rcx-0x1],dl
   14001bd48:	scas   eax,DWORD PTR es:[rdi]
   14001bd49:	jg     0x14001bd9f
   14001bd4b:	(bad)  
   14001bd4c:	sahf   
   14001bd4d:	jae    0x14001bda1
   14001bd4f:	dec    BYTE PTR [rbp+0x33]
   14001bd52:	rex.RXB jmp QWORD PTR [r14+r10*1]
   14001bd56:	rex.R inc BYTE PTR [rbp+0x25fe2758]
   14001bd5d:	(bad)  
   14001bd5e:	rex.RX call FWORD PTR [rax]
   14001bd61:	adc    DWORD PTR [rax-0x2],edx
   14001bd64:	adc    al,0x14
   14001bd66:	push   0xfffffffffffffffe
   14001bd68:	adc    al,0x19
   14001bd6a:	jns    0x14001bd6b
   14001bd6c:	sbb    BYTE PTR [rip+0x221cfe83],bl        # 0x1621ebbf5
   14001bd72:	(bad)  
   14001bd73:	(bad)  
   14001bd74:	and    ebp,DWORD PTR [rsp+rbx*4]
   14001bd77:	jmp    FWORD PTR [rax]
   14001bd79:	cmp    ch,BYTE PTR [rdi-0x3ab4d102]
   14001bd7f:	(bad)  
   14001bd80:	ss (bad) 
   14001bd82:	fdivp  st(7),st
   14001bd84:	cmp    DWORD PTR [rbp-0x16],esi
   14001bd87:	(bad)  
   14001bd88:	cmp    al,0x85
   14001bd8a:	in     al,dx
   14001bd8b:	(bad)  
   14001bd8c:	cmp    al,0x8f
   14001bd8e:	out    dx,al
   14001bd8f:	(bad)  
   14001bd90:	cmp    al,0x91
   14001bd92:	out    dx,al
   14001bd93:	(bad)  
   14001bd94:	cmp    ecx,DWORD PTR [rdx+0x7c39ffed]
   14001bd9a:	(bad)  
   14001bd9b:	(bad)  
   14001bd9c:	cmp    BYTE PTR [rsi-0x19],ah
   14001bd9f:	(bad)  
   14001bda0:	xor    ecx,DWORD PTR [rbx-0x24]
   14001bda3:	jmp    FWORD PTR [rdi]
   14001bda5:	cmp    ecx,esp
   14001bda7:	(bad)  
   14001bda8:	sub    eax,0x2cfec435
   14001bdad:	xor    al,0xbf
   14001bdaf:	(bad)  
   14001bdb0:	cmp    al,0x32
   14001bdb2:	(bad)  
   14001bdb3:	popf   
   14001bdb4:	rex xor DWORD PTR [rbp+0x1],esi
	...
   14001bddc:	mov    eax,0xb4013b82
   14001bde1:	jge    0x14001be19
   14001bde3:	es mov ebp,0xd2883b86
   14001bde9:	cdq    
   14001bdea:	rex.W in al,0xd8
   14001bded:	sahf   
   14001bdee:	rex.W (bad) 
   14001bdf0:	(bad)  
   14001bdf1:	pushf  
   14001bdf2:	rex.RB call r11
   14001bdf5:	cwde   
   14001bdf6:	rex.X call rax
   14001bdf9:	xchg   ebx,eax
   14001bdfa:	rex.RB dec r8d
   14001bdfd:	mov    cs,WORD PTR [rbx-0x1]
   14001be00:	mov    edi,0xb7ff4f88
   14001be05:	adc    DWORD PTR [rcx-0x1],0xffffff97
   14001be09:	imul   ecx,DWORD PTR [rbx-0x1],0x3f
   14001be0d:	sub    BYTE PTR [rbp-0x1],al
   14001be10:	and    BYTE PTR [rdx],dl
   14001be12:	rex.RX call FWORD PTR [rdx]
   14001be15:	adc    BYTE PTR [rdi-0x1],al
   14001be18:	rex.XB sub al,0x3b
   14001be1b:	jmp    FWORD PTR [rax+0x44]
   14001be1e:	xor    edi,edi
   14001be20:	sbb    DWORD PTR [rax],edx
   14001be22:	rex.W call QWORD PTR [rsi]
   14001be25:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   14001be29:	(bad)  
   14001be2a:	jae    0x14001be2b
   14001be2c:	(bad)  
   14001be2d:	sbb    edi,DWORD PTR [rsi-0x1]
   14001be30:	sbb    ebx,DWORD PTR [rdi]
   14001be32:	mov    edi,edi
   14001be34:	and    BYTE PTR [rcx],ch
   14001be36:	xchg   edi,eax
   14001be37:	jmp    QWORD PTR [rsi]
   14001be39:	ss test eax,0xc1482dff
   14001be3f:	push   QWORD PTR [rip+0x39ffdc5e]        # 0x17a019aa3
   14001be45:	jne    0x14001be31
   14001be47:	(bad)  
   14001be48:	cmp    al,0x87
   14001be4a:	in     eax,dx
   14001be4b:	(bad)  
   14001be4c:	cmp    edx,DWORD PTR [rdx-0x6cc40011]
   14001be52:	out    dx,eax
   14001be53:	(bad)  
   14001be54:	cmp    ecx,DWORD PTR [rcx+0x7a39ffed]
   14001be5a:	(bad)  
   14001be5b:	push   QWORD PTR [rdi]
   14001be5d:	(bad)  
   14001be5e:	out    0xff,al
   14001be60:	xor    al,BYTE PTR [rdi-0x28]
   14001be63:	jmp    FWORD PTR [rsi]
   14001be65:	cmp    cl,cl
   14001be67:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d0180a2
   14001be6d:	xor    edi,DWORD PTR [rsi+0x683244ff]
   14001be73:	rex.X add BYTE PTR [rax],al
	...
   14001bea6:	add    BYTE PTR [rax],al
   14001bea8:	mov    dl,0x7c
   14001beaa:	xor    cl,BYTE PTR [rbx]
   14001beac:	mov    ah,0x7d
   14001beae:	xor    dl,BYTE PTR [rdi-0x3b]
   14001beb1:	mov    WORD PTR [rbx],?
   14001beb3:	mov    esp,0xfa4297d3
   14001beb8:	rcl    BYTE PTR [rbx-0x713701bc],1
   14001bebe:	rex.WXB (bad) 
   14001bec0:	mov    esi,0x8dfe4c88
   14001bec5:	(bad)  
   14001bec6:	rex.R (bad) 
   14001bec8:	(bad)  
   14001bec9:	(bad)  
   14001beca:	rex.XB (bad) 
   14001becc:	and    al,0x14
   14001bece:	rex.RX (bad) 
   14001bed0:	sbb    eax,0x1cff4611
   14001bed5:	adc    DWORD PTR [rsi-0x2],eax
   14001bed8:	sbb    edx,DWORD PTR [rax]
   14001beda:	rex.RX (bad) 
   14001bedc:	jns    0x14001bf2e
   14001bede:	sub    edi,edi
   14001bee0:	xor    BYTE PTR [rsi],bl
   14001bee2:	rex.XB (bad) 
   14001bee4:	sbb    BYTE PTR [rax],dl
   14001bee6:	rex.WRX (bad) 
   14001bee8:	adc    al,0x14
   14001beea:	push   0xffffffffffffffff
   14001beec:	adc    eax,0x19fe7a19
   14001bef1:	sbb    eax,0x251efe86
   14001bef6:	xchg   ebx,eax
   14001bef7:	jmp    QWORD PTR [rip+0x2cfea432]        # 0x16d00632f
   14001befd:	rex.RB mov r12d,0xda5d35fe
   14001bf03:	(bad)  
   14001bf04:	cmp    DWORD PTR [rbp-0x16],esi
   14001bf07:	(bad)  
   14001bf08:	cmp    ecx,DWORD PTR [rcx-0x6ac40013]
   14001bf0e:	out    dx,eax
   14001bf0f:	(bad)  
   14001bf10:	cmp    edx,DWORD PTR [rbp-0x76c40111]
   14001bf16:	in     eax,dx
   14001bf17:	(bad)  
   14001bf18:	cmp    DWORD PTR [rdi-0x16],esi
   14001bf1b:	(bad)  
   14001bf1c:	ss pop rdx
   14001bf1e:	in     al,0xfe
   14001bf20:	xor    BYTE PTR [rdx-0x2d],al
   14001bf23:	jmp    FWORD PTR [rsi]
   14001bf25:	(bad)  
   14001bf26:	(bad)  
   14001bf27:	(bad)  
   14001bf28:	sub    eax,0x30fec134
   14001bf2d:	xor    ebp,DWORD PTR [rbp+0x613247df]
   14001bf33:	(bad)  
	...
   14001bf70:	mov    dl,0x7a
   14001bf72:	(bad)  
   14001bf73:	add    ch,BYTE PTR [rsi-0x4bd4d38b]
   14001bf79:	jnp    0x14001bfaf
   14001bf7b:	nop
   14001bf7c:	ret    
   14001bf7d:	mov    DWORD PTR [rcx-0x14],eax
   14001bf80:	mov    WORD PTR [rcx+0x3d],fs
   14001bf83:	inc    BYTE PTR [rbp+0x2c]
   14001bf86:	rex.X jmp FWORD PTR [rsi]
   14001bf89:	sbb    al,BYTE PTR [rbp-0x2]
   14001bf8c:	sub    DWORD PTR [rdi],edx
   14001bf8e:	rex.RX (bad) 
   14001bf90:	(bad)  
   14001bf91:	(bad)  
   14001bf92:	rex.RX jmp QWORD PTR [rsi]
   14001bf95:	adc    eax,0x1525fe46
   14001bf9a:	rex.RX (bad) 
   14001bf9c:	cmp    BYTE PTR [rdx],ah
   14001bf9e:	rex push QWORD PTR [rdi+0x4e]
   14001bfa2:	(bad)  
   14001bfa3:	(bad)  
   14001bfa4:	sbb    dl,BYTE PTR [rcx]
   14001bfa6:	rex.RXB (bad) 
   14001bfa8:	(bad)  
   14001bfa9:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   14001bfad:	(bad)  
   14001bfae:	je     0x14001bfae
   14001bfb0:	(bad)  
   14001bfb1:	sbb    al,0x80
   14001bfb3:	(bad)  
   14001bfb4:	sbb    al,0x22
   14001bfb6:	mov    ?,edi
   14001bfb8:	and    al,0x2e
   14001bfba:	lahf   
   14001bfbb:	(bad)  
   14001bfbc:	sub    al,BYTE PTR [rdx-0x48]
   14001bfbf:	(bad)  
   14001bfc0:	xor    al,0x5b
   14001bfc2:	xlat   BYTE PTR ds:[rbx]
   14001bfc3:	(bad)  
   14001bfc4:	cmp    DWORD PTR [rsi-0x16],esi
   14001bfc7:	(bad)  
   14001bfc8:	cmp    al,0x8c
   14001bfca:	out    dx,al
   14001bfcb:	(bad)  
   14001bfcc:	cmp    bl,BYTE PTR [rcx-0x67c50110]
   14001bfd2:	out    dx,eax
   14001bfd3:	(bad)  
   14001bfd4:	cmp    ecx,DWORD PTR [rax+0x7239ffed]
   14001bfda:	jmp    0x12155f4dd
   14001bfdf:	(bad)  
   14001bfe0:	(bad)  
   14001bfe1:	ds iret 
   14001bfe3:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e00841e
   14001bfe9:	xor    al,0xbf
   14001bfeb:	inc    BYTE PTR [rax+0x32]
   14001bfee:	jns    0x14001bf79
   14001bff0:	xor    sil,BYTE PTR [rdi+0x1]
	...
   14001c03c:	test   DWORD PTR [rbx+riz*1+0x16],edx
   14001c040:	push   rdi
   14001c041:	(bad)  
   14001c042:	cmp    bh,dl
   14001c044:	rex.RXB sub eax,0x2b44ff41
   14001c04a:	rex.X inc DWORD PTR [rax+0x28]
   14001c04e:	rex.XB (bad) 
   14001c050:	cmp    esp,DWORD PTR [rbx+rax*2]
   14001c053:	push   QWORD PTR [rsi]
   14001c055:	and    DWORD PTR [rdi+rdi*8+0x33],eax
   14001c059:	(bad)  
   14001c05a:	rex.R push QWORD PTR [rax]
   14001c05d:	sbb    al,0x45
   14001c05f:	push   QWORD PTR [rsp+rcx*2+0x30]
   14001c063:	(bad)  
   14001c064:	cmp    ah,BYTE PTR [rip+0x1018ff40]        # 0x1501abfaa
   14001c06a:	rex.WRX call QWORD PTR [rsp+r10*1]
   14001c06e:	imul   edi,edi,0x15
   14001c071:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1a]
   14001c075:	(bad)  
   14001c076:	mov    bh,bh
   14001c078:	and    ch,BYTE PTR [rbx]
   14001c07a:	(bad)  
   14001c07b:	jmp    FWORD PTR [rcx]
   14001c07d:	cmp    eax,0x5833ffb3
   14001c082:	(bad)  
   14001c083:	(bad)  
   14001c084:	cmp    DWORD PTR [rdi-0x16],esi
   14001c087:	(bad)  
   14001c088:	cmp    ecx,DWORD PTR [rdi-0x63c50012]
   14001c08e:	lock (bad) 
   14001c090:	cmp    bl,BYTE PTR [rdx-0x77c40010]
   14001c096:	in     eax,dx
   14001c097:	(bad)  
   14001c098:	cmp    DWORD PTR [rdi-0x17],ebp
   14001c09b:	push   QWORD PTR [rbx]
   14001c09d:	rex.WRX fdivp st(7),st
   14001c0a0:	cs cmp cl,bl
   14001c0a3:	jmp    FWORD PTR [rip+0x2dffc235]        # 0x16e0182de
   14001c0a9:	xor    edi,DWORD PTR [rsi+0x613247fc]
   14001c0af:	xor    BYTE PTR [rax],al
	...
   14001c0fd:	add    BYTE PTR [rax],al
   14001c0ff:	add    BYTE PTR [rsi+0x3c],ah
   14001c102:	(bad)  
   14001c103:	xor    DWORD PTR [rbx+0x52],edi
   14001c106:	sub    al,0xf1
   14001c108:	jne    0x14001c159
   14001c10a:	xor    dh,bh
   14001c10c:	push   0x47
   14001c10e:	ss (bad) 
   14001c110:	pop    rbx
   14001c111:	cmp    al,0x3c
   14001c113:	dec    DWORD PTR [rdi+0x33]
   14001c116:	(bad)  
   14001c117:	inc    BYTE PTR [rsi+0x2c]
   14001c11a:	inc    BYTE PTR [r8+0x27]
   14001c11e:	rex.X inc DWORD PTR [rbp+0x2b]
   14001c122:	rex inc BYTE PTR [rax+0x1afe2f55]
   14001c129:	adc    DWORD PTR [rax-0x1],ecx
   14001c12c:	(bad)  
   14001c12d:	adc    bl,BYTE PTR [rsi-0x2]
   14001c130:	adc    al,0x18
   14001c132:	ja     0x14001c132
   14001c134:	sbb    DWORD PTR [rip+0x271fff85],ebx        # 0x16721c0bf
   14001c13a:	xchg   ebp,eax
   14001c13b:	(bad)  
   14001c13c:	sub    BYTE PTR [rcx],bh
   14001c13e:	scas   al,BYTE PTR es:[rdi]
   14001c13f:	(bad)  
   14001c140:	xor    dl,BYTE PTR [rsi-0x2e]
   14001c143:	(bad)  
   14001c144:	cmp    DWORD PTR [rdi-0x16],esi
   14001c147:	(bad)  
   14001c148:	cmp    edx,DWORD PTR [rdx-0x5dc50011]
   14001c14e:	icebp  
   14001c14f:	(bad)  
   14001c150:	cmp    bl,BYTE PTR [rax+rsi*8-0x1379c402]
   14001c157:	(bad)  
   14001c158:	cmp    BYTE PTR [rdx-0x18],ch
   14001c15b:	(bad)  
   14001c15c:	xor    cl,BYTE PTR [rax-0x27]
   14001c15f:	(bad)  
   14001c160:	cs cmp al,cl
   14001c163:	jmp    FWORD PTR [rip+0x34fec134]        # 0x17500829d
   14001c169:	xor    esp,DWORD PTR [rdx+0x6b3244cd]
   14001c16f:	add    eax,0x0
	...
   14001c1c4:	(bad)  
   14001c1c5:	pop    rax
   14001c1c6:	adc    edx,DWORD PTR [rbx-0x45]
   14001c1c9:	jle    0x14001c1ec
   14001c1cb:	cli    
   14001c1cc:	stos   DWORD PTR es:[rdi],eax
   14001c1cd:	jb     0x14001c1eb
   14001c1cf:	(bad)  
   14001c1d0:	xchg   edx,eax
   14001c1d1:	(bad)  {k2}
   14001c1d6:	cs (bad) 
   14001c1d8:	fs rex.XB cmp r14b,dil
   14001c1dc:	push   rbp
   14001c1dd:	(bad)  
   14001c1de:	dec    DWORD PTR ds:[rbp+0x32]
   14001c1e2:	inc    BYTE PTR [r8+0x3dfe3355]
   14001c1e9:	(bad)  
   14001c1ea:	(bad)  
   14001c1eb:	call   QWORD PTR [rdi]
   14001c1ed:	adc    DWORD PTR [rax-0x2],edx
   14001c1f0:	adc    edx,DWORD PTR [rip+0x1b17fe6f]        # 0x15b19c065
   14001c1f6:	cmp    bh,0x1d
   14001c1f9:	and    al,0x90
   14001c1fb:	(bad)  
   14001c1fc:	es xor eax,0x5331fea8
   14001c202:	(bad)  
   14001c203:	(bad)  
   14001c204:	cmp    bh,BYTE PTR [rcx-0x16]
   14001c207:	(bad)  
   14001c208:	cmp    edx,DWORD PTR [rdi-0x55c40011]
   14001c20e:	repnz (bad) 
   14001c210:	cmp    ebx,DWORD PTR [rdi-0x7bc40110]
   14001c216:	in     al,dx
   14001c217:	push   QWORD PTR [rdi]
   14001c219:	fs out 0xfe,eax
   14001c21c:	xor    BYTE PTR [rbx-0x2c],al
   14001c21f:	(bad)  
   14001c220:	cs ss (bad) 
   14001c223:	jmp    FWORD PTR [rip+0x41fec034]        # 0x18200825d
   14001c229:	xor    dh,BYTE PTR [rsi+0x79]
	...
   14001c284:	pushf  
   14001c285:	movsxd edx,DWORD PTR [rdi]
   14001c287:	add    DWORD PTR [rbp-0x3199e195],esp
   14001c28d:	nop
   14001c28e:	xor    bh,dl
   14001c290:	mov    BYTE PTR [rsi+0x75afff26],0x1a
   14001c297:	call   QWORD PTR [rdx+0x77ff2162]
   14001c29d:	push   rax
   14001c29e:	xor    bh,bh
   14001c2a0:	fs rex.XB cmp r15b,dil
   14001c2a4:	pop    rdi
   14001c2a5:	(bad)  
   14001c2a6:	cmp    edi,edi
   14001c2a8:	xchg   BYTE PTR [rdx+0x30],bl
   14001c2ab:	call   FWORD PTR [rdx]
   14001c2ad:	adc    DWORD PTR [rax-0x1],ecx
   14001c2b0:	adc    eax,0x15ff6313
   14001c2b5:	sbb    DWORD PTR [rbx-0x1],edi
   14001c2b8:	sbb    esp,DWORD PTR [rax]
   14001c2ba:	mov    edi,edi
   14001c2bc:	and    al,0x31
   14001c2be:	movabs ds:0xea7a39ffca5130ff,eax
   14001c2c7:	(bad)  
   14001c2c8:	cmp    ebx,DWORD PTR [rbp-0x4fc60010]
   14001c2ce:	repnz (bad) 
   14001c2d0:	cmp    ah,BYTE PTR [rbx-0x7dc5000f]
   14001c2d6:	in     al,dx
   14001c2d7:	push   QWORD PTR [rsi]
   14001c2d9:	pop    rbp
   14001c2da:	in     al,0xff
   14001c2dc:	(bad)  
   14001c2dd:	ds sar bh,1
   14001c2e0:	sub    eax,0x2dffc335
   14001c2e5:	xor    edi,DWORD PTR [rbp+0x613247fa]
   14001c2eb:	(bad)  
	...
   14001c348:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c349:	ins    DWORD PTR es:[rdi],dx
   14001c34a:	(bad)  
   14001c34b:	add    DWORD PTR [rdx-0x4da7e498],esp
   14001c351:	ja     0x14001c374
   14001c353:	out    dx,al
   14001c354:	mov    ecx,0xb6fe1c7b
   14001c359:	jns    0x14001c373
   14001c35b:	(bad)  
   14001c35c:	lahf   
   14001c35d:	push   0x1b
   14001c35f:	inc    DWORD PTR [rbp+0x74fe285a]
   14001c365:	rex.WRXB xor r15b,r14b
   14001c368:	xchg   ebp,eax
   14001c369:	gs sub eax,0x40263bff
   14001c36f:	(bad)  
   14001c370:	(bad)  
   14001c371:	adc    DWORD PTR [rsi+rdi*8+0x14],edx
   14001c375:	(bad)  
   14001c376:	je     0x14001c377
   14001c378:	sbb    DWORD PTR [rip+0x2d22fe86],ebx        # 0x16d24c204
   14001c37e:	popf   
   14001c37f:	(bad)  
   14001c380:	(bad)  
   14001c381:	rex.WRB (bad) 
   14001c383:	(bad)  
   14001c384:	cmp    bh,BYTE PTR [rbx-0x16]
   14001c387:	(bad)  
   14001c388:	cmp    ah,BYTE PTR [rbp-0x47c7000f]
   14001c38e:	repz (bad) 
   14001c390:	cmp    ah,BYTE PTR [rbp+0x7f3afef1]
   14001c396:	jmp    0x14001c397
   14001c398:	xor    eax,0x2efee155
   14001c39d:	cmp    cl,bl
   14001c39f:	(bad)  
   14001c3a0:	sub    eax,0x35ffc234
   14001c3a5:	xor    ebx,DWORD PTR [rdi+0x673245c9]
   14001c3ab:	add    al,0x0
	...
   14001c40d:	add    BYTE PTR [rax],al
   14001c40f:	add    BYTE PTR [rax+0x6f1b1b56],cl
   14001c415:	rex.RB and al,0x7b
   14001c418:	adc    DWORD PTR [rbx+0x22],0x1a71abc7
   14001c41f:	(bad)  
   14001c420:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c421:	outs   dx,DWORD PTR ds:[rsi]
   14001c422:	sbb    bh,bh
   14001c424:	nop
   14001c425:	(bad)  
   14001c426:	and    edi,edi
   14001c428:	mov    DWORD PTR [rbp+0x27],ebx
   14001c42b:	inc    DWORD PTR [rcx+rbx*2+0x1118ff32]
   14001c432:	rex.WX call QWORD PTR [rsp+r10*1]
   14001c436:	push   0xffffffffffffffff
   14001c438:	(bad)  
   14001c439:	sbb    al,0x80
   14001c43b:	jmp    QWORD PTR [rax]
   14001c43d:	sub    BYTE PTR [rsi-0x3eb6d201],dl
   14001c443:	(bad)  
   14001c444:	cmp    bh,BYTE PTR [rdx+rbp*8-0x1]
   14001c448:	cmp    DWORD PTR [rbp-0x3cc7000e],ebp
   14001c44e:	repz (bad) 
   14001c450:	cmp    ah,BYTE PTR [rdi+0x7a3afff1]
   14001c456:	(bad)  
   14001c457:	push   QWORD PTR [rbx]
   14001c459:	rex.WRB fdiv st(7),st
   14001c45c:	cs (bad) 
   14001c45e:	enter  0x2dff,0x34
   14001c462:	sar    bh,0x41
   14001c465:	xor    dh,BYTE PTR [rbp+0x78]
	...
   14001c4d8:	jl     0x14001c527
   14001c4da:	sbb    DWORD PTR [rdx],eax
   14001c4dc:	js     0x14001c528
   14001c4de:	sbb    edx,DWORD PTR [rax-0x61]
   14001c4e1:	imul   ebx,DWORD PTR [rdx],0x1773ace7
   14001c4e7:	(bad)  
   14001c4e8:	pushf  
   14001c4e9:	push   0x72a9ff1b
   14001c4ee:	es (bad) 
   14001c4f0:	xor    esp,DWORD PTR [rcx]
   14001c4f2:	rex.X (bad) 
   14001c4f4:	adc    eax,0x15ff5b12
   14001c4f9:	sbb    DWORD PTR [rdx-0x2],edi
   14001c4fc:	sbb    eax,0x2bfe9024
   14001c501:	rex.R mov edx,0xe97d3aff
   14001c507:	(bad)  
   14001c508:	cmp    BYTE PTR [rax-0x32c9000e],bh
   14001c50e:	icebp  
   14001c50f:	(bad)  
   14001c510:	cmp    DWORD PTR [rax+0x7439fef1],ebp
   14001c516:	(bad)  
   14001c517:	push   QWORD PTR [rcx]
   14001c519:	rex.RB xlat BYTE PTR ds:[rbx]
   14001c51b:	(bad)  
   14001c51c:	sub    eax,0x2cfec536
   14001c521:	xor    edi,DWORD PTR [rsi+0x623247fc]
   14001c527:	and    eax,0x0
	...
   14001c5a0:	or     DWORD PTR [rdi+0x14],0x18689f24
   14001c5a7:	shl    DWORD PTR [rdx-0x5500e88a],1
   14001c5ad:	jno    0x14001c5ca
   14001c5af:	(bad)  
   14001c5b0:	jp     0x14001c604
   14001c5b2:	xor    eax,0x4e1017fe
   14001c5b7:	call   QWORD PTR [rsi+rdx*1]
   14001c5ba:	jb     0x14001c5ba
   14001c5bc:	sbb    esp,DWORD PTR [rax]
   14001c5be:	mov    bh,dh
   14001c5c0:	sub    DWORD PTR [rsi],edi
   14001c5c2:	mov    bl,0xff
   14001c5c4:	cmp    DWORD PTR [rbp-0x18],edi
   14001c5c7:	(bad)  
   14001c5c8:	cmp    ebp,eax
   14001c5ca:	icebp  
   14001c5cb:	(bad)  
   14001c5cc:	cmp    ebx,ecx
   14001c5ce:	out    dx,eax
   14001c5cf:	(bad)  
   14001c5d0:	cmp    ah,BYTE PTR [rdi+0x6c38fef1]
   14001c5d6:	call   0x11140f6da
   14001c5db:	(bad)  
   14001c5dc:	sub    eax,0x34fec234
   14001c5e1:	xor    esp,DWORD PTR [rax+0x653246c7]
   14001c5e7:	add    eax,DWORD PTR [rax]
	...
   14001c661:	add    BYTE PTR [rax],al
   14001c663:	add    BYTE PTR [rsi-0x56e5f0ae],al
   14001c669:	outs   dx,DWORD PTR ds:[rsi]
   14001c66a:	(bad)  
   14001c66b:	fidiv  WORD PTR [rdi-0x5000e787]
   14001c671:	ja     0x14001c69a
   14001c673:	jmp    QWORD PTR [rsi]
   14001c675:	sbb    DWORD PTR [rbp-0x1],eax
   14001c678:	adc    eax,0x18ff6613
   14001c67d:	sbb    eax,0x3826ff83
   14001c682:	stos   BYTE PTR es:[rdi],al
   14001c683:	(bad)  
   14001c684:	cmp    DWORD PTR [rbp-0x19],edi
   14001c687:	(bad)  
   14001c688:	cmp    edx,eax
   14001c68a:	out    dx,eax
   14001c68b:	(bad)  
   14001c68c:	cmp    eax,0x3affecdd
   14001c691:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c692:	lock push QWORD PTR [rsi]
   14001c695:	(bad)  
   14001c696:	in     eax,0xff
   14001c698:	cs cmp cl,bl
   14001c69b:	jmp    FWORD PTR [rip+0x40ffc034]        # 0x1810186d5
   14001c6a1:	xor    dh,BYTE PTR [rdi+0x71]
	...
   14001c728:	mov    dl,BYTE PTR [rdi+rcx*1+0x34]
   14001c72c:	mov    ch,0x78
   14001c72e:	sbb    cl,dh
   14001c730:	mov    ah,0x79
   14001c732:	(bad)  
   14001c733:	(bad)  
   14001c734:	imul   eax,DWORD PTR [rdi+0x39],0x561117ff
   14001c73b:	(bad)  
   14001c73c:	(bad)  
   14001c73d:	sbb    bh,BYTE PTR [rsi+rdi*8+0x23]
   14001c741:	xor    BYTE PTR [rcx-0x1b84c701],ah
   14001c747:	(bad)  
   14001c748:	cmp    eax,0x3effedd7
   14001c74d:	fucomip st,st(2)
   14001c74f:	(bad)  
   14001c750:	cmp    DWORD PTR [rdi+0x5534feef],ebx
   14001c756:	loopne 0x14001c757
   14001c758:	cs (bad) 
   14001c75a:	(bad)  
   14001c75b:	(bad)  
   14001c75c:	sub    eax,0x47f6bc33
   14001c761:	xor    ah,BYTE PTR [rcx+0x1d]
	...
   14001c7ec:	nop
   14001c7ed:	pop    rcx
   14001c7ee:	punpcklbw mm6,DWORD PTR [rbp-0x5b02e788]
   14001c7f5:	jo     0x14001c826
   14001c7f7:	jmp    QWORD PTR [rax]
   14001c7f9:	adc    al,0x4a
   14001c7fb:	(bad)  
   14001c7fc:	adc    eax,0x20fe7216
   14001c801:	sub    DWORD PTR [rdi-0x1f89c901],edx
   14001c807:	(bad)  
   14001c808:	cmp    eax,0x3effecdc
   14001c80d:	fucomip st,st(2)
   14001c80f:	(bad)  
   14001c810:	cmp    dl,BYTE PTR [rbp+0x4a32feee]
   14001c816:	fcos   
   14001c818:	sub    eax,0x39fec335
   14001c81d:	xor    dl,BYTE PTR [rax+0x733241b1]
   14001c823:	add    al,BYTE PTR [rax]
	...
   14001c8a9:	add    BYTE PTR [rax],al
   14001c8ab:	add    BYTE PTR [rcx-0x62fcf1a7],dl
   14001c8b1:	adc    ah,BYTE PTR fs:[rbx-0xd88953]
   14001c8b8:	push   rdx
   14001c8b9:	ss cmp al,0xff
   14001c8bc:	adc    eax,0x1cff6313
   14001c8c1:	and    cl,BYTE PTR [rdi+rdi*8-0x2791cc]
   14001c8c8:	ds fucomp st(3)
   14001c8cb:	(bad)  
   14001c8cc:	ds fsubp st(2),st
   14001c8cf:	(bad)  
   14001c8d0:	cmp    DWORD PTR [rbp+0x3f30ffec],eax
   14001c8d6:	sar    bh,1
   14001c8d8:	sub    eax,0x42fec034
   14001c8dd:	xor    ch,BYTE PTR [rdi+0x50]
	...
   14001c970:	mov    DWORD PTR [rdi+rcx*1+0x14],edx
   14001c974:	popf   
   14001c975:	push   0x6a9be21b
   14001c97a:	xor    edi,esi
   14001c97c:	sbb    DWORD PTR [rdx],edx
   14001c97e:	push   rbx
   14001c97f:	(bad)  
   14001c980:	sbb    BYTE PTR [rip+0x6131ff82],bl        # 0x1a133c908
   14001c986:	int    0xfe
   14001c988:	ds fucomp st(3)
   14001c98b:	(bad)  
   14001c98c:	cmp    eax,0x37feebd9
   14001c991:	outs   dx,DWORD PTR ds:[rsi]
   14001c992:	out    0xfe,eax
   14001c994:	cs cmp al,cl
   14001c997:	push   QWORD PTR [rcx]
   14001c999:	xor    ebp,DWORD PTR [rdx+0x653246da]
   14001c99f:	or     DWORD PTR [rax],eax
	...
   14001ca31:	add    BYTE PTR [rax],al
   14001ca33:	add    BYTE PTR [rcx-0x48adefac],cl
   14001ca39:	jle    0x14001ca65
   14001ca3b:	std    
   14001ca3c:	cmp    esp,DWORD PTR [rdi]
   14001ca3e:	rex.X (bad) 
   14001ca40:	(bad)  
   14001ca41:	(bad)  
   14001ca42:	je     0x14001ca43
   14001ca44:	sub    al,0x4e
   14001ca46:	mov    ebp,0xebda3efe
   14001ca4b:	(bad)  
   14001ca4c:	cmp    eax,0x34feeccc
   14001ca51:	pop    rax
   14001ca52:	fdivp  st(6),st
   14001ca54:	sub    eax,0x41ffc234
   14001ca59:	xor    dh,BYTE PTR [rsi+0x6f]
	...
   14001caf4:	lea    ebx,[rax+0x13]
   14001caf7:	add    al,0x9e
   14001caf9:	sbb    esi,DWORD PTR [ebx-0xc9a379]
   14001cb00:	(bad)  
   14001cb01:	adc    al,0x62
   14001cb03:	jmp    QWORD PTR [rip+0x3dffa939]        # 0x17e017442
   14001cb09:	shr    ah,1
   14001cb0b:	(bad)  
   14001cb0c:	cmp    esi,DWORD PTR [rcx+0x4330ffec]
   14001cb12:	sar    edi,1
   14001cb14:	(bad)  
   14001cb15:	xor    esi,DWORD PTR [rcx+0x653246e4]
   14001cb1b:	or     eax,0x0
	...
   14001cbb8:	nop
   14001cbb9:	pop    rcx
   14001cbba:	adc    ebp,DWORD PTR [rcx+rax*8]
   14001cbbd:	test   DWORD PTR [rip+0x4e1d2bf5],ebp        # 0x18e1ef7b8
   14001cbc3:	call   FWORD PTR [rip+0x3afe9126]        # 0x17b005cef
   14001cbc9:	test   al,0xea
   14001cbcb:	push   QWORD PTR [rdi]
   14001cbcd:	jns    0x14001cbb5
   14001cbcf:	(bad)  
   14001cbd0:	sub    eax,0x42fec236
   14001cbd5:	xor    dh,BYTE PTR [rdx+0x64]
	...
   14001cc78:	sahf   
   14001cc79:	sbb    eax,DWORD PTR gs:[rcx]
   14001cc7c:	test   al,0x6d
   14001cc7e:	and    BYTE PTR [rsi+0x78],bh
   14001cc81:	push   rcx
   14001cc82:	cmp    edi,edi
   14001cc84:	sbb    BYTE PTR [rbx],bl
   14001cc86:	jp     0x14001cc86
   14001cc88:	xor    BYTE PTR [rbx-0x33],dl
   14001cc8b:	jmp    FWORD PTR [rdi]
   14001cc8d:	rex.X retf 0x36fe
   14001cc91:	xor    dl,BYTE PTR [rdi+0x733242be]
   14001cc97:	(bad)  
	...
   14001cd3c:	xchg   edx,eax
   14001cd3d:	pop    rbp
   14001cd3e:	(bad)  
   14001cd3f:	(bad)  
   14001cd40:	lods   al,BYTE PTR ds:[rsi]
   14001cd41:	jae    0x14001cd6b
   14001cd43:	mov    dh,0x34
   14001cd45:	(bad)  
   14001cd46:	pop    rbx
   14001cd47:	jmp    QWORD PTR [rbx]
   14001cd49:	sub    DWORD PTR [rax-0x5bd0d201],esp
   14001cd4f:	fdivr  QWORD PTR [rsi]
   14001cd51:	xor    bh,BYTE PTR [rcx+0x1f]
	...
   14001ce00:	jl     0x14001ce51
   14001ce02:	(bad)  
   14001ce03:	or     dh,BYTE PTR [rsi+0x4e]
   14001ce06:	xor    al,0x80
   14001ce08:	ss sub al,0x73
   14001ce0b:	xchg   esi,eax
   14001ce0c:	cmp    DWORD PTR [rip+0x186f],ebp        # 0x14001e681
	...
   14001cfc6:	add    BYTE PTR [rax],al
   14001cfc8:	(bad)  
   14001cfc9:	(bad)  
   14001cfca:	(bad)  
   14001cfcb:	(bad)  
   14001cfcc:	(bad)  
   14001cfcd:	inc    DWORD PTR [rax]
   14001cfcf:	add    bh,bh
   14001cfd1:	(bad)  
   14001cfd2:	(bad)  
   14001cfd3:	(bad)  
   14001cfd4:	(bad)  
   14001cfd5:	inc    DWORD PTR [rax]
   14001cfd7:	add    bh,bh
   14001cfd9:	push   rax
   14001cfdb:	(bad)  
   14001cfdc:	(bad)  
   14001cfdd:	inc    DWORD PTR [rax]
   14001cfdf:	add    bh,bh
   14001cfe1:	jmp    rax
   14001cfe3:	(bad)  
   14001cfe4:	(bad)  
   14001cfe5:	inc    DWORD PTR [rax]
   14001cfe7:	add    bh,bh
   14001cfe9:	jmp    rax
   14001cfeb:	(bad)  
   14001cfec:	(bad)  
   14001cfed:	inc    DWORD PTR [rax]
   14001cfef:	add    bh,bh
   14001cff1:	inc    eax
   14001cff3:	ud0    edi,edi
   14001cff6:	add    BYTE PTR [rax],al
   14001cff8:	(bad)  
   14001cff9:	inc    eax
   14001cffb:	(bad)  
   14001cffc:	(bad)  
   14001cffd:	inc    DWORD PTR [rax]
   14001cfff:	add    bh,bh
   14001d001:	inc    DWORD PTR [rax+0xffff03]
   14001d007:	add    bh,bh
   14001d009:	inc    DWORD PTR [rax+0xffff01]
   14001d00f:	add    bh,bh
   14001d011:	inc    DWORD PTR [rax]
   14001d013:	add    bh,bh
   14001d015:	cld    
   14001d016:	add    BYTE PTR [rax],al
   14001d018:	(bad)  
   14001d019:	inc    DWORD PTR [rax]
   14001d01b:	add    BYTE PTR [rdi-0x8],bh
   14001d01e:	add    BYTE PTR [rax],al
   14001d020:	(bad)  
   14001d021:	inc    BYTE PTR [rax]
   14001d023:	add    BYTE PTR [rdi-0x10],bh
   14001d026:	add    BYTE PTR [rax],al
   14001d028:	(bad)  
   14001d029:	inc    BYTE PTR [rax]
   14001d02b:	add    BYTE PTR [rdi],bh
   14001d02d:	loopne 0x14001d02f
   14001d02f:	add    bh,bh
   14001d031:	mov    BYTE PTR [rax],al
   14001d033:	add    BYTE PTR [rdi],cl
   14001d035:	rol    DWORD PTR [rax],0x0
   14001d038:	inc    DWORD PTR [rax]
   14001d03a:	add    BYTE PTR [rax],al
   14001d03c:	(bad)  
   14001d03d:	add    DWORD PTR [rax],eax
   14001d03f:	add    ah,bh
   14001d041:	add    BYTE PTR [rax],al
   14001d043:	add    BYTE PTR [rax],al
   14001d045:	add    DWORD PTR [rax],eax
   14001d047:	add    al,bh
   14001d049:	add    BYTE PTR [rax],al
   14001d04b:	add    BYTE PTR [rax],al
   14001d04d:	add    eax,DWORD PTR [rax]
   14001d04f:	add    al,dh
   14001d051:	add    BYTE PTR [rax],al
   14001d053:	add    BYTE PTR [rax],al
   14001d055:	add    eax,DWORD PTR [rax]
   14001d057:	add    al,al
   14001d059:	add    BYTE PTR [rax],al
   14001d05b:	add    BYTE PTR [rax],al
   14001d05d:	(bad)  
   14001d05e:	add    BYTE PTR [rax],al
   14001d060:	add    BYTE PTR [rax],0x0
   14001d063:	add    BYTE PTR [rax],al
   14001d065:	(bad)  
   14001d066:	add    BYTE PTR [rax],al
   14001d068:	add    BYTE PTR [rax],al
   14001d06a:	add    BYTE PTR [rax],al
   14001d06c:	add    BYTE PTR [rdi],al
   14001d06e:	add    BYTE PTR [rax],al
   14001d070:	add    BYTE PTR [rax],al
   14001d072:	add    BYTE PTR [rax],al
   14001d074:	add    BYTE PTR [rdi],cl
   14001d076:	add    BYTE PTR [rax],al
   14001d078:	add    BYTE PTR [rax],al
   14001d07a:	add    BYTE PTR [rax],al
   14001d07c:	add    BYTE PTR [rdi],cl
   14001d07e:	add    BYTE PTR [rax],al
   14001d080:	loopne 0x14001d082
   14001d082:	add    BYTE PTR [rax],al
   14001d084:	add    BYTE PTR [rdi],cl
   14001d086:	add    BYTE PTR [rax],al
   14001d088:	clc    
   14001d089:	add    BYTE PTR [rax],al
   14001d08b:	add    BYTE PTR [rax],al
   14001d08d:	(bad)  
   14001d08e:	add    BYTE PTR [rax],al
   14001d090:	inc    DWORD PTR [rax]
   14001d092:	add    BYTE PTR [rax],al
   14001d094:	add    BYTE PTR [rdi],bl
   14001d096:	add    BYTE PTR [rax],al
   14001d098:	inc    eax
   14001d09a:	add    BYTE PTR [rax],al
   14001d09c:	add    BYTE PTR [rdi],bl
   14001d09e:	add    BYTE PTR [rax],al
   14001d0a0:	(bad)  
   14001d0a1:	clc    
   14001d0a2:	add    BYTE PTR [rax],al
   14001d0a4:	add    BYTE PTR [rdi],bh
   14001d0a6:	add    BYTE PTR [rax],al
   14001d0a8:	(bad)  
   14001d0a9:	cld    
   14001d0aa:	add    BYTE PTR [rax],al
   14001d0ac:	add    BYTE PTR [rdi],bh
   14001d0ae:	add    BYTE PTR [rax],al
   14001d0b0:	(bad)  
   14001d0b1:	inc    BYTE PTR [rax]
   14001d0b3:	add    BYTE PTR [rax],al
   14001d0b5:	jg     0x14001d0b7
   14001d0b7:	add    bh,bh
   14001d0b9:	inc    BYTE PTR [rax]
   14001d0bb:	add    BYTE PTR [rax],al
   14001d0bd:	jg     0x14001d0bf
   14001d0bf:	add    bh,bh
   14001d0c1:	inc    DWORD PTR [rax]
   14001d0c3:	add    BYTE PTR [rax],al
   14001d0c5:	jg     0x14001d0c7
   14001d0c7:	add    bh,bh
   14001d0c9:	inc    eax
   14001d0cb:	add    BYTE PTR [rax],al
   14001d0cd:	inc    DWORD PTR [rax]
   14001d0cf:	add    bh,bh
   14001d0d1:	push   rax
   14001d0d3:	add    BYTE PTR [rax],al
   14001d0d5:	inc    DWORD PTR [rax]
   14001d0d7:	add    bh,bh
   14001d0d9:	(bad)  
   14001d0da:	cld    
   14001d0db:	add    BYTE PTR [rax],al
   14001d0dd:	inc    DWORD PTR [rax]
   14001d0df:	add    bh,bh
   14001d0e1:	(bad)  
   14001d0e2:	inc    BYTE PTR [rax]
   14001d0e4:	add    edi,edi
   14001d0e6:	add    BYTE PTR [rax],al
   14001d0e8:	(bad)  
   14001d0e9:	(bad)  
   14001d0ea:	inc    DWORD PTR [rax]
   14001d0ec:	add    edi,edi
   14001d0ee:	add    BYTE PTR [rax],al
   14001d0f0:	(bad)  
   14001d0f1:	(bad)  
   14001d0f2:	inc    DWORD PTR [rax+0xff01]
   14001d0f8:	(bad)  
   14001d0f9:	(bad)  
   14001d0fa:	inc    DWORD PTR [rax+0xff03]
   14001d100:	(bad)  
   14001d101:	(bad)  
   14001d102:	inc    eax
   14001d104:	add    edi,edi
   14001d106:	add    BYTE PTR [rax],al
   14001d108:	(bad)  
   14001d109:	(bad)  
   14001d10a:	jmp    rax
   14001d10c:	(bad)  
   14001d10d:	inc    DWORD PTR [rax]
   14001d10f:	add    bh,bh
   14001d111:	(bad)  
   14001d112:	jmp    rax
   14001d114:	(bad)  
   14001d115:	inc    DWORD PTR [rax]
   14001d117:	add    bh,bh
   14001d119:	(bad)  
   14001d11a:	push   rax
   14001d11c:	ud0    eax,DWORD PTR [rax]
   14001d11f:	add    bh,bh
   14001d121:	(bad)  
   14001d122:	push   rax
   14001d124:	ud0    eax,DWORD PTR [rax]
   14001d127:	add    bh,bh
   14001d129:	(bad)  
   14001d12a:	(bad)  
   14001d12b:	clc    
   14001d12c:	(bad)  
   14001d12d:	inc    DWORD PTR [rax]
   14001d12f:	add    bh,bh
   14001d131:	(bad)  
   14001d132:	(bad)  
   14001d133:	cld    
   14001d134:	(bad)  
   14001d135:	inc    DWORD PTR [rax]
   14001d137:	add    bh,bh
   14001d139:	(bad)  
   14001d13a:	(bad)  
   14001d13b:	(bad)  
   14001d13c:	(bad)  
   14001d13d:	inc    DWORD PTR [rax]
   14001d13f:	add    bh,bh
   14001d141:	(bad)  
   14001d142:	(bad)  
   14001d143:	(bad)  
   14001d144:	(bad)  
   14001d145:	inc    DWORD PTR [rax]
   14001d147:	add    BYTE PTR [rax],ch
   14001d149:	add    BYTE PTR [rax],al
   14001d14b:	add    BYTE PTR [rax],ah
   14001d14d:	add    BYTE PTR [rax],al
   14001d14f:	add    BYTE PTR [rax+0x0],al
   14001d152:	add    BYTE PTR [rax],al
   14001d154:	add    DWORD PTR [rax],eax
   14001d156:	and    BYTE PTR [rax],al
   14001d158:	add    BYTE PTR [rax],al
   14001d15a:	add    BYTE PTR [rax],al
   14001d15c:	adc    BYTE PTR [rax],0x0
	...
   14001d223:	add    BYTE PTR [rsi+rdi*2-0x79],cl
   14001d227:	(bad)  
   14001d228:	lea    rsp,[rbx+0x4b5b5754]
   14001d22f:	or     al,0x0
	...
   14001d2a1:	add    BYTE PTR [rax],al
   14001d2a3:	add    BYTE PTR [rcx-0x77],cl
   14001d2a6:	popf   
   14001d2a7:	xchg   ecx,eax
   14001d2a8:	cmp    edi,DWORD PTR [rdx-0x53c0000c]
   14001d2ae:	fsubr  st(1),st
   14001d2b0:	push   rdx
   14001d2b1:	ins    BYTE PTR es:[rdi],dx
   14001d2b2:	imul   edx,DWORD PTR [rbx+0x57],0x59
   14001d2b6:	rex.WRX add r8b,BYTE PTR [rax]
	...
   14001d31d:	add    BYTE PTR [rax],al
   14001d31f:	add    BYTE PTR [rsi+0x5e],dl
   14001d322:	push   rbx
   14001d323:	adc    bh,BYTE PTR [rip+0x3befe9b3]        # 0x17bf1bcdc
   14001d329:	mov    ecx,0xb63bfff4
   14001d32e:	repz (bad) 
   14001d330:	cmp    al,0xac
   14001d332:	icebp  
   14001d333:	std    
   14001d334:	rex.WR jo 0x14001d2c3
   14001d337:	xchg   BYTE PTR [rbp+0x54],dl
   14001d33a:	push   rsi
   14001d33b:	add    al,0x0
	...
   14001d39d:	add    BYTE PTR [rax],al
   14001d39f:	add    BYTE PTR [rbp+0x72],cl
   14001d3a2:	xchg   DWORD PTR [rdx+0x3c],esi
   14001d3a5:	stos   DWORD PTR es:[rdi],eax
   14001d3a6:	icebp  
   14001d3a7:	(bad)  
   14001d3a8:	cmp    al,0xaa
   14001d3aa:	icebp  
   14001d3ab:	(bad)  
   14001d3ac:	cmp    al,0xa4
   14001d3ae:	lock (bad) 
   14001d3b0:	cmp    ebx,DWORD PTR [rbx-0x6ec40011]
   14001d3b6:	out    dx,al
   14001d3b7:	dec    DWORD PTR [rbx+0x66]
   14001d3ba:	xchg   esp,eax
   14001d3bb:	mov    ss,WORD PTR [rsi+0x4c]
   14001d3be:	push   rcx
   14001d3bf:	add    eax,DWORD PTR [rax]
	...
   14001d419:	add    BYTE PTR [rax],al
   14001d41b:	add    BYTE PTR [rbp+0x42],dl
   14001d41e:	rex.R add eax,0xd9ce773f
   14001d424:	cmp    ecx,DWORD PTR [rbp-0x70c40013]
   14001d42a:	in     eax,dx
   14001d42b:	(bad)  
   14001d42c:	cmp    ecx,DWORD PTR [rbp-0x77c40013]
   14001d432:	in     eax,dx
   14001d433:	(bad)  
   14001d434:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1481c301]
   14001d43b:	dec    BYTE PTR [rsi+0x59]
   14001d43e:	(bad)  
   14001d43f:	jne    0x14001d497
   14001d441:	rex.WB
   14001d442:	rex.WRXB add QWORD PTR [r8],r8
	...
   14001d499:	add    BYTE PTR [rax],al
   14001d49b:	add    BYTE PTR [rdi+0x39],al
   14001d49e:	pop    rcx
   14001d49f:	push   rcx
   14001d4a0:	xor    DWORD PTR [rbp-0x32],edx
   14001d4a3:	push   QWORD PTR [rsi]
   14001d4a5:	data16 fdivp st(7),st
   14001d4a8:	cmp    BYTE PTR [rdi-0x1a],ch
   14001d4ab:	(bad)  
   14001d4ac:	cmp    DWORD PTR [rbx-0x17],esi
   14001d4af:	(bad)  
   14001d4b0:	cmp    dh,BYTE PTR [rcx+rbp*8-0x1]
   14001d4b4:	cmp    dh,BYTE PTR [rbp-0x16]
   14001d4b7:	(bad)  
   14001d4b8:	cmp    esi,DWORD PTR [rdi-0x15]
   14001d4bb:	(bad)  
   14001d4bc:	cmp    al,0x77
   14001d4be:	jmp    0x1a95427be
   14001d4c3:	push   rax
	...
   14001d4e8:	push   rbp
   14001d4e9:	xor    dh,BYTE PTR [rbx]
   14001d4eb:	add    DWORD PTR [rdi+0x32],ecx
   14001d4ee:	rex.RX sub eax,0x0
	...
   14001d518:	sub    r13,QWORD PTR [r11]
   14001d51b:	add    eax,0xcc7b292c
   14001d520:	and    eax,0x2affa533
   14001d525:	rex.X mov dil,0xff
   14001d528:	(bad)  
   14001d529:	rex.WRXB (bad) 
   14001d52b:	push   QWORD PTR [rbx]
   14001d52d:	pop    rdx
   14001d52e:	(bad)  
   14001d52f:	push   QWORD PTR [rsi]
   14001d531:	movsxd ebx,edi
   14001d533:	push   QWORD PTR [rdi]
   14001d535:	push   0xffffffffffffffe6
   14001d537:	(bad)  
   14001d538:	cmp    BYTE PTR [rcx-0x17],dh
   14001d53b:	(bad)  
   14001d53c:	cmp    bh,BYTE PTR [rcx-0x15]
   14001d53f:	(bad)  
   14001d540:	ds jp  0x14001d524
   14001d543:	lock push rbp
   14001d545:	push   rax
   14001d546:	pop    rsp
   14001d547:	xor    eax,DWORD PTR [rax]
	...
   14001d561:	add    BYTE PTR [rax],al
   14001d563:	add    BYTE PTR [rdx+rsi*1+0x36],dl
   14001d567:	add    DWORD PTR [rbx+0x32],ecx
   14001d56a:	push   rdi
   14001d56b:	pop    rax
   14001d56c:	xor    eax,DWORD PTR ds:[rdx+0x88]
	...
   14001d593:	add    BYTE PTR [rdi+0x29],cl
   14001d596:	sbb    al,0x1
   14001d598:	cmp    ah,BYTE PTR [rip+0x1d197441]        # 0x15d1b49df
   14001d59e:	test   bh,bh
   14001d5a0:	sbb    eax,0x22ff8f23
   14001d5a5:	sub    al,0x9b
   14001d5a7:	jmp    QWORD PTR [rdi]
   14001d5a9:	cmp    BYTE PTR [rbx-0x45bbd401],ch
   14001d5af:	jmp    FWORD PTR [rdi]
   14001d5b1:	push   rax
   14001d5b2:	leave  
   14001d5b3:	push   QWORD PTR [rbx+rbx*2]
   14001d5b6:	xlat   BYTE PTR ds:[rbx]
   14001d5b7:	push   QWORD PTR [rdi]
   14001d5b9:	addr32 in al,0xff
   14001d5bc:	cmp    BYTE PTR [rcx-0x17],dh
   14001d5bf:	(bad)  
   14001d5c0:	cmp    edi,DWORD PTR [rbx-0x15]
   14001d5c3:	inc    DWORD PTR [rax+0x7a]
   14001d5c6:	(bad)  
   14001d5c7:	jrcxz  0x14001d61f
   14001d5c9:	rex.WRXB push r10
   14001d5cb:	(bad)  
	...
   14001d5e0:	push   rsp
   14001d5e1:	xor    bh,BYTE PTR [rax]
   14001d5e3:	add    al,BYTE PTR [rdi+0x33]
   14001d5e6:	data16 jo 0x14001d616
   14001d5e9:	xor    al,0xbd
   14001d5eb:	stc    
   14001d5ec:	rex.XB xor bpl,BYTE PTR [r13+0x26]
	...
   14001d604:	or     DWORD PTR [rbp+0x13],0x3
   14001d608:	xchg   esp,eax
   14001d609:	pop    rbp
   14001d60a:	and    DWORD PTR [rcx-0x6f],ebx
   14001d60d:	pop    rbx
   14001d60e:	and    BYTE PTR [rdx+0x7c],bl
   14001d611:	rex.W adc BYTE PTR [rdx*2+0x16762330],spl
   14001d619:	adc    al,0x64
   14001d61b:	cli    
   14001d61c:	adc    al,0x18
   14001d61e:	ja     0x14001d61f
   14001d620:	(bad)  
   14001d621:	sbb    al,0x81
   14001d623:	call   FWORD PTR [rbx]
   14001d625:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001d62c:	es xor al,0xa7
   14001d62f:	jmp    FWORD PTR [rdx]
   14001d631:	mov    r15b,0xff
   14001d634:	(bad)  
   14001d635:	rex.WRX enter 0x35ff,0x5c
   14001d63a:	fcos   
   14001d63c:	(bad)  
   14001d63d:	push   0xffffffffffffffe6
   14001d63f:	(bad)  
   14001d640:	cmp    DWORD PTR [rdi-0x16],esi
   14001d643:	(bad)  
   14001d644:	cmp    al,0x82
   14001d646:	in     al,dx
   14001d647:	(bad)  
   14001d648:	(bad)  
   14001d649:	adc    ah,0xe2
   14001d64c:	push   rbp
   14001d64d:	push   rbx
   14001d64e:	pop    rcx
   14001d64f:	cmp    DWORD PTR [rax+0x48],ebx
   14001d652:	cmp    eax,0x1
   14001d657:	add    BYTE PTR [rax],al
   14001d659:	add    BYTE PTR [rax],al
   14001d65b:	add    BYTE PTR [rsi+0x34],dl
   14001d65e:	xor    ecx,DWORD PTR [rdx]
   14001d660:	rex.XB xor eax,0x342d8e79
   14001d666:	ret    0x36fe
   14001d669:	xor    ebx,DWORD PTR [rcx+0x683244bb]
   14001d66f:	add    DWORD PTR [rax],eax
	...
   14001d67d:	add    BYTE PTR [rax],al
   14001d67f:	add    BYTE PTR [rbp-0x51edecb0],al
   14001d685:	je     0x14001d6b3
   14001d687:	movabs ds:0xff4b8fc8fe4792cf,al
   14001d690:	mov    ecx,0xa4ff4483
   14001d695:	outs   dx,DWORD PTR ds:[rsi]
   14001d696:	sub    edi,edi
   14001d698:	xor    al,0x21
   14001d69a:	rex.RX call QWORD PTR [rip+0x14ff6112]        # 0x1550137b3
   14001d6a1:	(bad)  
   14001d6a2:	jne    0x14001d6a3
   14001d6a4:	(bad)  
   14001d6a5:	sbb    al,0x80
   14001d6a7:	call   FWORD PTR [rbx]
   14001d6a9:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001d6b0:	es xor eax,0x432bffa8
   14001d6b6:	mov    edx,0xce5231ff
   14001d6bb:	push   QWORD PTR [rsi]
   14001d6bd:	fs loope 0x14001d6bf
   14001d6c0:	cmp    BYTE PTR [rbx-0x16],dh
   14001d6c3:	(bad)  
   14001d6c4:	cmp    al,0x80
   14001d6c6:	in     al,dx
   14001d6c7:	(bad)  
   14001d6c8:	cmp    ecx,DWORD PTR [rcx-0x75c30013]
   14001d6ce:	jmp    0xd06620cb
   14001d6d3:	sahf   
   14001d6d4:	rex.WRX
   14001d6d5:	rex.WRB
   14001d6d6:	gs pop rbp
   14001d6d8:	rex.WX
   14001d6d9:	rex.X ins BYTE PTR es:[rdi],dx
   14001d6db:	jno    0x14001d715
   14001d6dd:	cmp    eax,0x372ed4ad
   14001d6e2:	(bad)  
   14001d6e3:	jmp    FWORD PTR [rip+0x3effc034]        # 0x17f01971d
   14001d6e9:	xor    bh,BYTE PTR [rdi+rdx*2+0x0]
	...
   14001d6f5:	add    BYTE PTR [rax],al
   14001d6f7:	add    BYTE PTR [rbx-0x70feecb2],al
   14001d6fd:	pop    rcx
   14001d6fe:	sbb    bh,BYTE PTR [rbx]
   14001d700:	(bad)  
   14001d701:	mov    WORD PTR [rbx],?
   14001d703:	fcmovbe st,st(3)
   14001d705:	xchg   edi,eax
   14001d706:	rex.X call rcx
   14001d709:	xchg   esp,eax
   14001d70a:	rex.XB dec r13d
   14001d70d:	xchg   ecx,eax
   14001d70e:	inc    r12
   14001d711:	mov    WORD PTR [rbp-0x1],cs
   14001d714:	mov    bh,0x83
   14001d716:	rex.WXB call FWORD PTR [r10+0x29ff2c68]
   14001d71d:	sbb    al,BYTE PTR [rdi-0x1]
   14001d720:	adc    eax,0x14ff6012
   14001d725:	sbb    BYTE PTR [rsi-0x1],dh
   14001d728:	sbb    BYTE PTR [rdx+rax*4],bl
   14001d72b:	call   FWORD PTR [rdx+riz*1]
   14001d72e:	mov    ?,edi
   14001d730:	and    ebp,DWORD PTR [rsp+rbx*4]
   14001d733:	jmp    FWORD PTR [rax]
   14001d735:	cmp    ch,BYTE PTR [rdi-0x3bb5d201]
   14001d73b:	push   QWORD PTR [rip+0x38ffda5d]        # 0x17901b19e
   14001d741:	jo     0x14001d72c
   14001d743:	(bad)  
   14001d744:	cmp    al,0x7f
   14001d746:	in     al,dx
   14001d747:	(bad)  
   14001d748:	cmp    ecx,DWORD PTR [rcx-0x74c30013]
   14001d74e:	in     eax,dx
   14001d74f:	(bad)  
   14001d750:	cmp    eax,DWORD PTR [rbx+0x7239ffec]
   14001d756:	jmp    0x121560c5a
   14001d75b:	jmp    FWORD PTR [rdi]
   14001d75d:	cmp    eax,0x352dffce
   14001d762:	ret    
   14001d763:	jmp    FWORD PTR [rdi]
   14001d765:	xor    esi,DWORD PTR [rbx+0x643245ea]
   14001d76b:	or     DWORD PTR [rax],eax
   14001d76d:	add    BYTE PTR [rax],al
   14001d76f:	add    BYTE PTR [rax],al
   14001d771:	add    BYTE PTR [rax],al
   14001d773:	add    BYTE PTR [rsi-0x5bf8eaaf],al
   14001d779:	outs   dx,BYTE PTR ds:[rsi]
   14001d77a:	sub    BYTE PTR [rsi-0x2a],bh
   14001d77d:	popf   
   14001d77e:	rex.RXB stc 
   14001d780:	xlat   BYTE PTR ds:[rbx]
   14001d781:	popf   
   14001d782:	rex.RX call rbp
   14001d785:	(bad)  
   14001d786:	rex.XB call r10
   14001d789:	xchg   esi,eax
   14001d78a:	call   r8
   14001d78d:	xchg   ebx,eax
   14001d78e:	rex.RB inc r15d
   14001d791:	mov    cs,WORD PTR [rdi+rdi*8-0x42]
   14001d795:	mov    BYTE PTR [rdi-0x1],cl
   14001d798:	mov    dl,0x7f
   14001d79a:	rex.WRB inc QWORD PTR [r14+0x1eff2e5a]
   14001d7a1:	adc    ecx,DWORD PTR [rdx-0x1]
   14001d7a4:	adc    eax,0x14ff6513
   14001d7a9:	sbb    DWORD PTR [rcx-0x1],edi
   14001d7ac:	sbb    DWORD PTR [rip+0x261eff86],ebx        # 0x16620d738
   14001d7b2:	xchg   ebx,eax
   14001d7b3:	jmp    QWORD PTR [rip+0x2bffa432]        # 0x16c017beb
   14001d7b9:	rex.XB mov r10d,0xd45733ff
   14001d7bf:	push   QWORD PTR [rdi]
   14001d7c1:	ins    DWORD PTR es:[rdi],dx
   14001d7c2:	out    0xff,eax
   14001d7c4:	cmp    edi,DWORD PTR [rdi-0x14]
   14001d7c7:	(bad)  
   14001d7c8:	cmp    ecx,DWORD PTR [rdx-0x75c30013]
   14001d7ce:	in     eax,dx
   14001d7cf:	(bad)  
   14001d7d0:	cmp    al,BYTE PTR [rcx+0x6c39ffeb]
   14001d7d6:	jmp    0x11d4e0bda
   14001d7db:	jmp    FWORD PTR [rsi]
   14001d7dd:	cmp    ecx,ecx
   14001d7df:	jmp    FWORD PTR [rip+0x3bffc134]        # 0x17c019919
   14001d7e5:	xor    cl,BYTE PTR [rax+0x92]
   14001d7eb:	add    BYTE PTR [rax],al
   14001d7ed:	add    BYTE PTR [rax],al
   14001d7ef:	add    BYTE PTR [rax-0x3fdbe2a5],dl
   14001d7f5:	mov    DWORD PTR [rip+0x4da0d9c1],edi        # 0x18da2b1bc
   14001d7fb:	(bad)  
   14001d7fc:	fcomp  DWORD PTR [rdi-0x612700b5]
   14001d802:	rex.W call rdi
   14001d805:	popf   
   14001d806:	rex.RX call rsp
   14001d809:	cwde   
   14001d80a:	rex.XB call r9
   14001d80d:	xchg   esp,eax
   14001d80e:	rex.X dec edx
   14001d811:	nop
   14001d812:	rex.WX inc rax
   14001d815:	mov    DWORD PTR [rsi-0x1],ecx
   14001d818:	mov    bh,0x83
   14001d81a:	push   rdx
   14001d81b:	jmp    FWORD PTR [rdx+0x65ff4b7a]
   14001d821:	rex.X xor eax,0x4f1119ff
   14001d827:	call   QWORD PTR [rdx*1+0x1b16ff6d]
   14001d82e:	jge    0x14001d82f
   14001d830:	sbb    esp,DWORD PTR [rax]
   14001d832:	mov    edi,edi
   14001d834:	and    ch,BYTE PTR [rbx+rbx*4]
   14001d837:	jmp    FWORD PTR [rcx]
   14001d839:	cmp    al,0xb2
   14001d83b:	push   QWORD PTR [rcx]
   14001d83d:	push   rdx
   14001d83e:	int    0xff
   14001d840:	(bad)  
   14001d841:	imul   esp,esi,0xffffffff
   14001d844:	cmp    edi,DWORD PTR [rdi-0x14]
   14001d847:	(bad)  
   14001d848:	cmp    al,0x8b
   14001d84a:	in     eax,dx
   14001d84b:	(bad)  
   14001d84c:	cmp    al,0x8b
   14001d84e:	in     eax,dx
   14001d84f:	(bad)  
   14001d850:	cmp    bh,BYTE PTR [rsi-0x15]
   14001d853:	push   QWORD PTR [rdi]
   14001d855:	fs out 0xff,eax
   14001d858:	xor    DWORD PTR [rbp-0x2a],eax
   14001d85b:	jmp    FWORD PTR [rip+0x2cffc636]        # 0x16d019e97
   14001d861:	xor    al,0xbe
   14001d863:	inc    BYTE PTR [rdx+0x31]
   14001d866:	jo     0x14001d89b
	...
   14001d870:	mov    ebx,0xd3793d85
   14001d875:	pushf  
   14001d876:	rex.WRXB jmp 0x13f537a55
   14001d87c:	fldenv [rcx-0x602700b1]
   14001d882:	rex.WXB (bad) 
   14001d884:	fcomp  DWORD PTR [rsi-0x642900b8]
   14001d88a:	rex.RB call r10
   14001d88d:	xchg   esi,eax
   14001d88e:	rex.X dec ebp
   14001d891:	xchg   ecx,eax
   14001d892:	inc    rcx
   14001d895:	mov    cl,BYTE PTR [rsi-0x1]
   14001d898:	mov    bh,0x83
   14001d89a:	push   rcx
   14001d89b:	jmp    FWORD PTR [rbx-0x6300aa83]
   14001d8a1:	outs   dx,DWORD PTR ds:[rsi]
   14001d8a2:	rex.B (bad) 
   14001d8a4:	cmp    al,0x27
   14001d8a6:	notrack call QWORD PTR [rdi]
   14001d8a9:	adc    DWORD PTR [rax-0x1],ebx
   14001d8ac:	adc    al,0x17
   14001d8ae:	jne    0x14001d8af
   14001d8b0:	sbb    BYTE PTR [rip+0x261fff84],bl        # 0x16621d83a
   14001d8b6:	xchg   esp,eax
   14001d8b7:	jmp    QWORD PTR [rdi]
   14001d8b9:	ss stos BYTE PTR es:[rdi],al
   14001d8bb:	jmp    FWORD PTR [rdi]
   14001d8bd:	rex.WR (bad) 
   14001d8bf:	push   QWORD PTR [rdi]
   14001d8c1:	push   0xffffffff803bffe4
   14001d8c6:	in     al,dx
   14001d8c7:	(bad)  
   14001d8c8:	cmp    ecx,DWORD PTR [rbp-0x73c40012]
   14001d8ce:	in     eax,dx
   14001d8cf:	(bad)  
   14001d8d0:	cmp    DWORD PTR [rbx-0x15],edi
   14001d8d3:	push   QWORD PTR [rsi]
   14001d8d5:	pop    rbx
   14001d8d6:	in     al,0xff
   14001d8d8:	(bad)  
   14001d8d9:	(bad)  
   14001d8da:	sar    bh,1
   14001d8dc:	sub    eax,0x33ffc335
   14001d8e1:	xor    ah,BYTE PTR [rbx+0x643145d3]
   14001d8e7:	add    al,BYTE PTR [rax]
	...
   14001d8f1:	add    BYTE PTR [rax],al
   14001d8f3:	add    BYTE PTR [rcx-0x42f7c785],dh
   14001d8f9:	xchg   DWORD PTR [rcx+0x5a],eax
   14001d8fc:	retf   0x4893
   14001d8ff:	rcr    cl,0xa1
   14001d902:	rex.WRXB std 
   14001d904:	fcomp  DWORD PTR [rdi-0x622800b5]
   14001d90a:	rex.RXB call r11
   14001d90d:	xchg   edi,eax
   14001d90e:	rex.X dec esi
   14001d911:	xchg   edx,eax
   14001d912:	rex.RXB inc r9d
   14001d915:	mov    cl,BYTE PTR [rsi-0x1]
   14001d918:	mov    dh,0x83
   14001d91a:	push   rdx
   14001d91b:	jmp    QWORD PTR [rbp+0x56ff5479]
   14001d921:	cmp    ecx,DWORD PTR [rdx-0x1]
   14001d924:	imul   eax,DWORD PTR [rbp+0x30],0x49131eff
   14001d92b:	call   QWORD PTR [rip+0x16ff6613]        # 0x157013f44
   14001d931:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1c]
   14001d935:	and    DWORD PTR [rbp-0x5dcfdb01],ecx
   14001d93b:	jmp    FWORD PTR [rip+0x37ffc048]        # 0x178019989
   14001d941:	data16 loop 0x14001d943
   14001d944:	cmp    eax,DWORD PTR [rcx-0x6fc30014]
   14001d94a:	out    dx,al
   14001d94b:	(bad)  
   14001d94c:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x1587c601]
   14001d953:	push   QWORD PTR [rbx+rdx*2]
   14001d956:	loopne 0x14001d957
   14001d958:	cs cmp cl,dl
   14001d95b:	jmp    FWORD PTR [rip+0x3cffc134]        # 0x17d019a95
   14001d961:	xor    al,BYTE PTR [rax+rdi*2+0x0]
	...
   14001d980:	mov    bh,0x81
   14001d982:	cmp    BYTE PTR [rcx],ch
   14001d984:	ret    0x3e8b
   14001d987:	mov    ss,edx
   14001d989:	cdq    
   14001d98a:	rex.R jmp 0x14001d961
   14001d98d:	cdq    
   14001d98e:	rex.XB dec r14d
   14001d991:	xchg   edx,eax
   14001d992:	rex.RX inc ecx
   14001d995:	mov    cl,BYTE PTR [rsi-0x1]
   14001d998:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d999:	ja     0x14001d9e7
   14001d99b:	dec    DWORD PTR [rax+0x2f]
   14001d99e:	rex.RB call FWORD PTR [rip+0x2cff4611]        # 0x16d011fb6
   14001d9a5:	sbb    eax,0x3957ff42
   14001d9aa:	(bad)  
   14001d9ab:	call   QWORD PTR [rdi]
   14001d9ad:	adc    DWORD PTR [rbx-0x1],edx
   14001d9b0:	adc    al,0x17
   14001d9b2:	je     0x14001d9b3
   14001d9b4:	sbb    DWORD PTR [rsi],ebx
   14001d9b6:	xchg   bh,bh
   14001d9b8:	and    DWORD PTR [rbx],ebp
   14001d9ba:	(bad)  
   14001d9bb:	jmp    FWORD PTR [rbx]
   14001d9bd:	rex.XB mov r10d,0xe06436ff
   14001d9c3:	(bad)  
   14001d9c4:	cmp    eax,DWORD PTR [rbx-0x6cc40014]
   14001d9ca:	out    dx,eax
   14001d9cb:	(bad)  
   14001d9cc:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x168cc601]
   14001d9d3:	push   QWORD PTR [rdx]
   14001d9d5:	rex.WXB (bad) 
   14001d9d8:	cs (bad) 
   14001d9da:	(bad)  
   14001d9db:	jmp    FWORD PTR [rbx+rsi*1]
   14001d9de:	mov    esi,0x683244fc
   14001d9e3:	(bad)  
	...
   14001da08:	scas   eax,DWORD PTR es:[rdi]
   14001da09:	ja     0x14001da39
   14001da0b:	or     DWORD PTR [rax-0x3fa1cd81],edi
   14001da11:	xchg   BYTE PTR [rsi],bh
   14001da13:	(bad)
   14001da16:	rex.X dec BYTE PTR [rcx+0x2f]
   14001da1a:	rex.X jmp FWORD PTR [rax]
   14001da1d:	(bad)  
   14001da1e:	rex.RX jmp QWORD PTR [rsp+r10*1]
   14001da22:	rex.RX jmp QWORD PTR [rbx]
   14001da25:	adc    al,0x46
   14001da27:	call   FWORD PTR [rdi+0x3d]
   14001da2a:	xor    eax,0x461825ff
   14001da2f:	call   QWORD PTR [rip+0x17ff6613]        # 0x158014048
   14001da35:	sbb    edi,DWORD PTR [rdi-0x1]
   14001da38:	(bad)  
   14001da39:	es xchg ebx,eax
   14001da3b:	jmp    FWORD PTR [rcx]
   14001da3d:	cmp    eax,0x6235ffb3
   14001da42:	(bad)  
   14001da44:	cmp    eax,DWORD PTR [rsi-0x67c50013]
   14001da4a:	lock (bad) 
   14001da4c:	cmp    ecx,DWORD PTR [rbp+0x6c38ffed]
   14001da52:	call   0x115460c56
   14001da57:	jmp    FWORD PTR [rip+0x37ffc335]        # 0x178019d92
   14001da5d:	xor    ebx,DWORD PTR [rcx+0x643245bf]
   14001da63:	add    DWORD PTR [rax],eax
	...
   14001da8d:	add    BYTE PTR [rax],al
   14001da8f:	add    BYTE PTR [rdi+0x65012863],dl
   14001da95:	(bad)  
   14001da96:	sub    eax,0x3e35527c
   14001da9b:	dec    DWORD PTR [rdx+0x30]
   14001da9e:	rex inc DWORD PTR [rcx+0x28]
   14001daa2:	rex.X (bad) 
   14001daa4:	cmp    BYTE PTR [rdx],ah
   14001daa6:	rex.XB (bad) 
   14001daa8:	cmp    BYTE PTR [rdx],ah
   14001daaa:	rex.XB jmp QWORD PTR [r10+0x40]
   14001daae:	call   QWORD PTR ss:[rdi]
   14001dab1:	adc    DWORD PTR [rbx-0x1],edx
   14001dab4:	adc    al,0x18
   14001dab6:	ja     0x14001dab7
   14001dab8:	sbb    al,0x21
   14001daba:	mov    edi,?
   14001dabc:	(bad)  
   14001dabd:	(bad)  
   14001dabe:	stos   DWORD PTR es:[rdi],eax
   14001dabf:	push   QWORD PTR [rax+riz*2]
   14001dac2:	(bad)  
   14001dac4:	cmp    ecx,DWORD PTR [rdx-0x62c50013]
   14001daca:	lock (bad) 
   14001dacc:	cmp    ecx,DWORD PTR [rbp+0x6537ffee]
   14001dad2:	out    0xff,al
   14001dad4:	(bad)  
   14001dad5:	ds iret 
   14001dad7:	jmp    FWORD PTR [rip+0x3effc134]        # 0x17f019c11
   14001dadd:	xor    bh,BYTE PTR [rsi+0x64]
	...
   14001db14:	ins    DWORD PTR es:[rdi],dx
   14001db15:	rex.B sbb al,0x2
   14001db18:	cwde   
   14001db19:	(bad)  
   14001db1a:	sbb    ebp,DWORD PTR [rdx-0xdc9561]
   14001db20:	jle    0x14001db76
   14001db22:	sub    edi,edi
   14001db24:	(bad)  
   14001db25:	rex cmp edi,edi
   14001db28:	rex.WRB xor r8b,BYTE PTR [r8-0x1]
   14001db2c:	jo     0x14001db78
   14001db2e:	jmp    FWORD PTR ss:[rcx]
   14001db31:	sbb    eax,DWORD PTR [rbp-0x1]
   14001db34:	adc    al,0x14
   14001db36:	push   0xffffffffffffffff
   14001db38:	sbb    DWORD PTR [rsi],ebx
   14001db3a:	test   edi,edi
   14001db3c:	and    al,0x32
   14001db3e:	movabs ds:0xee8f3bffd75d33ff,eax
   14001db47:	(bad)  
   14001db48:	cmp    esp,DWORD PTR [rsi-0x73c4000e]
   14001db4e:	in     eax,dx
   14001db4f:	push   QWORD PTR [rsi]
   14001db51:	pop    rsp
   14001db52:	jrcxz  0x14001db53
   14001db54:	cs cmp ecx,ecx
   14001db57:	jmp    FWORD PTR [rip+0x46f7bc34]        # 0x186f99791
   14001db5d:	xor    ah,BYTE PTR [rbp+0x13]
	...
   14001db98:	popf   
   14001db99:	sbb    DWORD PTR fs:[rcx],ecx
   14001db9c:	mov    esp,0xc3b7297f
   14001dba1:	and    DWORD PTR [rbx],0xffffffff
   14001dba4:	movabs ds:0x65ff2d537cff1d6d,eax
   14001dbad:	cmp    dil,r15b
   14001dbb0:	push   0x47
   14001dbb2:	call   QWORD PTR ss:[rsi]
   14001dbb5:	adc    DWORD PTR [rdi-0x1],edx
   14001dbb8:	(bad)  
   14001dbb9:	sbb    bh,BYTE PTR [rbp-0x1]
   14001dbbc:	and    DWORD PTR [rbx+rbx*4],ebp
   14001dbbf:	push   QWORD PTR [rdx]
   14001dbc1:	pop    rdx
   14001dbc2:	sar    edi,cl
   14001dbc4:	cmp    edx,DWORD PTR [rsi-0x4fc60011]
   14001dbca:	repnz (bad) 
   14001dbcc:	cmp    cl,BYTE PTR [rdx+0x5334ffed]
   14001dbd2:	fdivp  st(7),st
   14001dbd4:	sub    eax,0x39ffc536
   14001dbd9:	xor    edx,DWORD PTR [rdx+0xb2]
	...
   14001dc1b:	add    BYTE PTR [rbp-0x75fae69c],bl
   14001dc21:	pop    rax
   14001dc22:	sbb    eax,0x205d8f70
   14001dc27:	int    0xa8
   14001dc29:	jo     0x14001dc44
   14001dc2b:	dec    BYTE PTR [rsi-0x6b00dca1]
   14001dc31:	fs sub bh,bh
   14001dc34:	and    eax,0x14ff4819
   14001dc39:	(bad)  
   14001dc3a:	jb     0x14001dc3b
   14001dc3c:	(bad)  
   14001dc3d:	and    eax,0x5631ff92
   14001dc42:	(bad)  
   14001dc43:	(bad)  
   14001dc44:	cmp    ah,BYTE PTR [rax-0x44c60010]
   14001dc4a:	repz (bad) 
   14001dc4c:	cmp    al,BYTE PTR [rsi+0x4932ffec]
   14001dc52:	fdivr  st,st(7)
   14001dc54:	sub    eax,0x3fffc235
   14001dc59:	xor    bh,BYTE PTR [rbp+0x5e]
	...
   14001dca4:	jbe    0x14001dcee
   14001dca6:	sbb    al,BYTE PTR [rcx]
   14001dca8:	adc    DWORD PTR [rcx+0x1a],0x186ea753
   14001dcaf:	lock movabs eax,ds:0x15ff374769ff1b6b
   14001dcb9:	adc    esp,DWORD PTR [rcx-0x1]
   14001dcbc:	sbb    esp,DWORD PTR [rax]
   14001dcbe:	mov    edi,edi
   14001dcc0:	(bad)  
   14001dcc1:	push   rax
   14001dcc2:	(bad)  
   14001dcc3:	(bad)  
   14001dcc4:	cmp    DWORD PTR [rax+rsi*8-0xe37c701],ebp
   14001dccb:	(bad)  
   14001dccc:	cmp    DWORD PTR [rdi-0x15],edi
   14001dccf:	push   QWORD PTR [rax]
   14001dcd1:	(bad)  
   14001dcd2:	sar    bh,1
   14001dcd4:	sub    eax,0x46f6bd34
   14001dcd9:	xor    ah,BYTE PTR [rbx+0x11]
	...
   14001dd2c:	mov    dl,BYTE PTR [rbp+0x12]
   14001dd2f:	xor    DWORD PTR [rax-0x570fe78c],esi
   14001dd35:	jno    0x14001dd5c
   14001dd37:	call   FWORD PTR [rsi]
   14001dd39:	adc    eax,0x1b17ff4f
   14001dd3e:	jg     0x14001dd3f
   14001dd40:	sub    al,0x49
   14001dd42:	mov    esi,0xefba3bff
   14001dd47:	(bad)  
   14001dd48:	cmp    edx,ecx
   14001dd4a:	out    dx,eax
   14001dd4b:	(bad)  
   14001dd4c:	cmp    BYTE PTR [rbx-0x17],dh
   14001dd4f:	jmp    FWORD PTR [rsi]
   14001dd51:	cmp    ecx,ecx
   14001dd53:	(bad)  
   14001dd54:	cmp    BYTE PTR [rbx],dh
   14001dd56:	xchg   esp,eax
   14001dd57:	scas   eax,DWORD PTR es:[rdi]
	...
   14001ddb0:	xchg   edx,eax
   14001ddb1:	pop    rbx
   14001ddb2:	adc    DWORD PTR [rdi-0x4b],ecx
   14001ddb5:	jns    0x14001ddd2
   14001ddb7:	std    
   14001ddb8:	pop    rdx
   14001ddb9:	cmp    eax,0x1616ff3d
   14001ddbe:	jo     0x14001ddbf
   14001ddc0:	sub    BYTE PTR [rsi],bh
   14001ddc2:	mov    cl,0xff
   14001ddc4:	cmp    al,0xc2
   14001ddc6:	in     eax,dx
   14001ddc7:	(bad)  
   14001ddc8:	cmp    al,0xd2
   14001ddca:	in     eax,dx
   14001ddcb:	push   QWORD PTR [rsi]
   14001ddcd:	movsxd esp,ebx
   14001ddcf:	jmp    FWORD PTR [rip+0x3fffc435]        # 0x18001a20a
   14001ddd5:	xor    bh,BYTE PTR [rbx+0x53]
	...
   14001de34:	pushf  
   14001de35:	movsxd edx,DWORD PTR [rcx]
   14001de37:	mov    WORD PTR [rsi+0x18ff2e66],ss
   14001de3d:	adc    ebx,DWORD PTR [rbp-0x1]
   14001de40:	and    esi,DWORD PTR [rdx]
   14001de42:	movabs eax,ds:0xeccb3dffecc43dff
   14001de4b:	push   QWORD PTR [rbx]
   14001de4d:	push   rcx
   14001de4e:	(bad)  
   14001de50:	xor    BYTE PTR [rbx],dh
   14001de52:	mov    bl,0xe7
   14001de54:	xor    r12b,BYTE PTR [r15+0x8]
	...
   14001deb4:	mov    WORD PTR [rsi+0xf],ss
   14001deb7:	or     DWORD PTR [rbp+0x43d41f6e],esp
   14001debd:	sub    eax,0x251dff46
   14001dec2:	mov    ?,edi
   14001dec4:	cmp    al,0xbe
   14001dec6:	(bad)  
   14001dec7:	(bad)  
   14001dec8:	cmp    al,0xba
   14001deca:	in     al,dx
   14001decb:	push   QWORD PTR [rax]
   14001decd:	rex (bad) 
   14001decf:	(bad)  
   14001ded0:	cmp    al,0x32
   14001ded2:	test   DWORD PTR [rax+rax*1+0x0],eax
	...
   14001df35:	add    BYTE PTR [rax],al
   14001df37:	add    BYTE PTR [rbx-0x72c0ecaa],cl
   14001df3d:	(bad)  
   14001df3e:	xor    al,0xfd
   14001df40:	sbb    BYTE PTR [rdx],bl
   14001df42:	je     0x14001df43
   14001df44:	cmp    DWORD PTR [rdx-0x67c6001f],ebp
   14001df4a:	call   0xfd370e4e
   14001df4f:	repz rex.XB xor bpl,BYTE PTR [r13+0x18]
	...
   14001dfb8:	lea    edx,[rdi+0x12]
   14001dfbb:	add    DWORD PTR [rdx+rsi*2+0x242fa622],ebp
   14001dfc2:	pop    rax
   14001dfc3:	push   QWORD PTR [rcx]
   14001dfc5:	jno    0x14001df95
   14001dfc7:	push   QWORD PTR [rbx]
   14001dfc9:	pop    rcx
   14001dfca:	xlat   BYTE PTR ds:[rbx]
   14001dfcb:	(bad)  
   14001dfcc:	cmp    al,0x32
   14001dfce:	test   DWORD PTR [rsi+0x0],edi
	...
   14001e039:	add    BYTE PTR [rax],al
   14001e03b:	add    BYTE PTR [rdx-0x7eeae29d],bl
   14001e041:	push   rdi
   14001e042:	(bad)  
   14001e043:	fisub  WORD PTR [rcx]
   14001e045:	sub    DWORD PTR [rdx-0x5dcdce01],ebx
   14001e04b:	ret    
   14001e04c:	(bad)  
   14001e04d:	xor    dh,BYTE PTR [rdi+0x7]
	...
   14001e0c0:	jge    0x14001e113
   14001e0c2:	sub    DWORD PTR [rcx],ebx
   14001e0c4:	rex.WB
   14001e0c5:	ss (bad) 
   14001e0c7:	cmp    BYTE PTR [esi*2+0xb],ch
	...
   14001e16f:	add    bh,bh
   14001e171:	(bad)  
   14001e172:	(bad)  
   14001e173:	(bad)  
   14001e174:	(bad)  
   14001e175:	clc    
   14001e176:	(bad)  
   14001e177:	(bad)  
   14001e178:	(bad)  
   14001e179:	clc    
   14001e17a:	(bad)  
   14001e17b:	(bad)  
   14001e17c:	push   rax
   14001e17e:	(bad)  
   14001e17f:	(bad)  
   14001e180:	push   rax
   14001e182:	ud0    edi,edi
   14001e185:	loopne 0x14001e18e
   14001e187:	(bad)  
   14001e188:	jmp    rax
   14001e18a:	(bad)  
   14001e18b:	cld    
   14001e18c:	inc    eax
   14001e18e:	add    edi,eax
   14001e190:	inc    DWORD PTR [rax+0xf8f001]
   14001e196:	add    BYTE PTR [rax-0x10],ah
   14001e199:	add    BYTE PTR [rax],al
   14001e19b:	add    eax,eax
   14001e19d:	add    BYTE PTR [rax],al
   14001e19f:	add    DWORD PTR [rax+0x30000],eax
   14001e1a5:	add    BYTE PTR [rax],al
   14001e1a7:	add    eax,DWORD PTR [rax]
   14001e1a9:	add    BYTE PTR [rax],al
   14001e1ab:	add    eax,DWORD PTR [rax-0xff90000]
   14001e1b1:	add    BYTE PTR [rax],al
   14001e1b3:	(bad)  
   14001e1b4:	cld    
   14001e1b5:	add    BYTE PTR [rax],al
   14001e1b7:	(bad)  
   14001e1b8:	inc    DWORD PTR [rax]
   14001e1ba:	add    BYTE PTR [rdi],cl
   14001e1bc:	inc    DWORD PTR [rax-0x3f00f100]
   14001e1c2:	add    BYTE PTR [rdi],bl
   14001e1c4:	jmp    rax
   14001e1c6:	add    BYTE PTR [rdi],bl
   14001e1c8:	(bad)  
   14001e1c9:	clc    
   14001e1ca:	add    BYTE PTR [rdi],bl
   14001e1cc:	(bad)  
   14001e1cd:	inc    BYTE PTR [rax]
   14001e1cf:	(bad)  
   14001e1d0:	(bad)  
   14001e1d1:	inc    DWORD PTR [rax]
   14001e1d3:	(bad)  
   14001e1d4:	(bad)  
   14001e1d5:	inc    DWORD PTR [rax-0x7f0000c1]
   14001e1db:	jg     0x14001e1dc
   14001e1dd:	inc    eax
   14001e1df:	jg     0x14001e1e0
   14001e1e1:	inc    eax
   14001e1e3:	(bad)  
   14001e1e4:	(bad)  
   14001e1e5:	jmp    rax
   14001e1e7:	(bad)  
   14001e1e8:	(bad)  
   14001e1e9:	push   rcx
   14001e1eb:	(bad)  
   14001e1ec:	(bad)  
   14001e1ed:	(bad)  
   14001e1ee:	(bad)  
   14001e1ef:	jmp    FWORD PTR [rax]
   14001e1f1:	add    BYTE PTR [rax],al
   14001e1f3:	add    BYTE PTR [rax],dl
   14001e1f5:	add    BYTE PTR [rax],al
   14001e1f7:	add    BYTE PTR [rax],ah
   14001e1f9:	add    BYTE PTR [rax],al
   14001e1fb:	add    BYTE PTR [rcx],al
   14001e1fd:	add    BYTE PTR [rax],ah
   14001e1ff:	add    BYTE PTR [rax],al
   14001e201:	add    BYTE PTR [rax],al
   14001e203:	add    BYTE PTR [rax+0x4],al
	...
   14001e22e:	add    BYTE PTR [rax],al
   14001e230:	xor    BYTE PTR [rdx],bh
   14001e232:	xor    al,0x7
   14001e234:	cmp    BYTE PTR [rdx+0x46],cl
   14001e237:	sbb    BYTE PTR [rax],al
	...
   14001e26d:	add    BYTE PTR [rax],al
   14001e26f:	add    BYTE PTR [rbp+0x7c],cl
   14001e272:	xchg   DWORD PTR [rbp+0x3c],esp
   14001e275:	mov    ch,0xee
   14001e277:	test   DWORD PTR [rax+rdi*2-0x73],0x202f4076
   14001e27f:	add    DWORD PTR [rax],eax
	...
   14001e2a9:	add    BYTE PTR [rax],al
   14001e2ab:	add    BYTE PTR [rdx],bh
   14001e2ad:	sub    DWORD PTR [rsi],ebx
   14001e2af:	add    DWORD PTR [rcx-0x78],eax
   14001e2b2:	int    0xd2
   14001e2b4:	cmp    ebx,DWORD PTR [rbx-0x71c40011]
   14001e2ba:	in     eax,dx
   14001e2bb:	dec    DWORD PTR [rdx+0x62]
   14001e2be:	xchg   esp,eax
   14001e2bf:	add    DWORD PTR [rax],0x0
	...
   14001e2e9:	add    BYTE PTR [rax],al
   14001e2eb:	add    BYTE PTR [rdi+rbp*1+0x47],al
   14001e2ef:	rex.W
   14001e2f0:	cs rex.WR ret 0x35ff
   14001e2f5:	(bad)  
   14001e2f6:	(bad)  
   14001e2f8:	cmp    BYTE PTR [rbp-0x1a],ch
   14001e2fb:	(bad)  
   14001e2fc:	cmp    dh,BYTE PTR [rsi-0x16]
   14001e2ff:	dec    BYTE PTR [rdi+0x59]
   14001e302:	jl     0x14001e361
	...
   14001e314:	rex.WXB xor dl,BYTE PTR [r11+r8*2+0x0]
	...
   14001e321:	add    BYTE PTR [rax],al
   14001e323:	add    BYTE PTR [rbp+rax*2+0x14],dh
   14001e327:	sub    al,0x5c
   14001e329:	xor    edx,DWORD PTR [rdi+riz*1]
   14001e32c:	(bad)  
   14001e32d:	sbb    ebp,DWORD PTR [rax-0x25]
   14001e330:	sbb    al,0x23
   14001e332:	mov    ?,edi
   14001e334:	es ss test eax,0xc84f2fff
   14001e33b:	push   QWORD PTR [rdi]
   14001e33d:	push   0x7b3cffe3
   14001e342:	in     eax,0xf8
   14001e344:	push   rcx
   14001e345:	pop    rdx
   14001e346:	outs   dx,BYTE PTR ds:[rsi]
   14001e347:	push   rax
   14001e348:	add    BYTE PTR [rax],al
   14001e34a:	add    BYTE PTR [rax],al
   14001e34c:	rex.XB and eax,0x34430217
   14001e352:	jbe    0x14001e2d4
   14001e354:	cmp    esi,DWORD PTR [rbx]
   14001e356:	mov    esi,DWORD PTR [rdi+0x0]
   14001e359:	add    BYTE PTR [rax],al
   14001e35b:	add    BYTE PTR [rsi+0x41],ch
   14001e35e:	(bad)  
   14001e35f:	btr    DWORD PTR [rdx+0x2f],edi
   14001e363:	movabs ds:0xff4180b6fe4791cd,eax
   14001e36c:	rex.XB sub eax,0x1715ff46
   14001e372:	jae    0x14001e373
   14001e374:	sbb    al,0x22
   14001e376:	(bad)  
   14001e377:	jmp    QWORD PTR [rdi]
   14001e379:	cmp    BYTE PTR [rbx-0x2ca8cd01],ch
   14001e37f:	(bad)  
   14001e380:	cmp    bh,BYTE PTR [rcx-0x16]
   14001e383:	(bad)  
   14001e384:	cmp    al,0x8a
   14001e386:	in     al,dx
   14001e387:	std    
   14001e388:	rex.X imul esi,DWORD PTR [rbx-0x4dbbc642],0xbf352ed1
   14001e393:	stc    
   14001e394:	rex.B sub al,0x4d
   14001e397:	sbb    BYTE PTR [rax-0x34c4e1a4],dl
   14001e39d:	xchg   edx,eax
   14001e39e:	rex.X fst st(7)
   14001e3a1:	pushf  
   14001e3a2:	rex.RX call rdx
   14001e3a5:	xchg   ebp,eax
   14001e3a6:	rex.XB inc r12d
   14001e3a9:	mov    WORD PTR [rbp-0x1],cs
   14001e3ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e3ad:	jbe    0x14001e3f5
   14001e3af:	jmp    FWORD PTR [rsi+rbx*1]
   14001e3b2:	rex.WRB call QWORD PTR [r14]
   14001e3b5:	sbb    DWORD PTR [rdx-0x1],edi
   14001e3b8:	and    BYTE PTR [rcx],ch
   14001e3ba:	xchg   edi,eax
   14001e3bb:	jmp    FWORD PTR [rsi]
   14001e3bd:	rex.WX ret 
   14001e3bf:	(bad)  
   14001e3c0:	cmp    DWORD PTR [rbp-0x17],esi
   14001e3c3:	(bad)  
   14001e3c4:	cmp    al,0x8b
   14001e3c6:	in     eax,dx
   14001e3c7:	(bad)  
   14001e3c8:	cmp    DWORD PTR [rcx+rbp*8-0x1],esi
   14001e3cc:	xor    BYTE PTR [rax-0x30],al
   14001e3cf:	push   QWORD PTR [rip+0xb09e33]        # 0x140b28208
   14001e3d5:	add    BYTE PTR [rax],al
   14001e3d7:	add    BYTE PTR [rcx-0x31a5c27d],bh
   14001e3dd:	xchg   edi,eax
   14001e3de:	rex.WX (bad) 
   14001e3e0:	fcomp  DWORD PTR [rdi-0x662a01b5]
   14001e3e6:	rex.R inc edi
   14001e3e9:	mov    cs,WORD PTR [rbx-0x1]
   14001e3ec:	scas   eax,DWORD PTR es:[rdi]
   14001e3ed:	jg     0x14001e442
   14001e3ef:	jmp    QWORD PTR [rsi+0x45]
   14001e3f2:	notrack call QWORD PTR [rdi]
   14001e3f5:	adc    al,0x5f
   14001e3f7:	call   FWORD PTR [rdx]
   14001e3f9:	and    BYTE PTR [rax-0x4ac0d501],cl
   14001e3ff:	(bad)  
   14001e400:	cmp    DWORD PTR [rdi+riz*8-0x1],esi
   14001e404:	cmp    ecx,DWORD PTR [rbp+0x6837ffee]
   14001e40a:	out    0xff,al
   14001e40c:	cs cmp bh,al
   14001e40f:	inc    DWORD PTR [rax+0x32]
   14001e412:	jne    0x14001e467
	...
   14001e420:	movabs eax,ds:0xbe943a8ac32e2d6e
   14001e429:	xchg   BYTE PTR [rbp-0x10],al
   14001e42c:	pop    rax
   14001e42d:	cmp    eax,DWORD PTR [rsi-0x1]
   14001e430:	and    al,0x15
   14001e432:	rex.RB (bad) 
   14001e434:	cmp    eax,0x16ff4128
   14001e439:	sbb    DWORD PTR [rax-0x1],edi
   14001e43c:	and    eax,0x38ffa634
   14001e441:	je     0x14001e428
   14001e443:	(bad)  
   14001e444:	cmp    edx,DWORD PTR [rcx+0x5b35ffee]
   14001e44a:	loopne 0x14001e44b
   14001e44c:	(bad)  
   14001e44d:	xor    eax,0x273ceeb8
   14001e452:	cmp    al,0x8
	...
   14001e468:	push   0x41
   14001e46a:	(bad)  
   14001e46b:	and    BYTE PTR [rbp+0x4c],dh
   14001e46e:	(bad)  
   14001e46f:	jmp    0x13f3d1cca
   14001e474:	push   rsi
   14001e475:	(bad)  
   14001e476:	cmp    al,0xff
   14001e478:	sbb    dl,BYTE PTR [rsi]
   14001e47a:	pop    rsi
   14001e47b:	jmp    QWORD PTR [rax]
   14001e47d:	sub    bl,BYTE PTR [rax-0x1c8ac801]
   14001e483:	(bad)  
   14001e484:	cmp    edx,DWORD PTR [rdi+0x4e33ffef]
   14001e48a:	fdivr  st,st(7)
   14001e48c:	(bad)  
   14001e48d:	xor    ebx,DWORD PTR [rax+0x9b]
	...
   14001e4ab:	add    BYTE PTR [rdx-0x5fcee59d],bl
   14001e4b1:	imul   ebx,DWORD PTR [rdi],0x285a86ce
   14001e4b7:	dec    BYTE PTR [rsi+0x35]
   14001e4ba:	rex call FWORD PTR [rdx]
   14001e4bd:	and    BYTE PTR [rdi-0x1f85c901],al
   14001e4c3:	(bad)  
   14001e4c4:	cmp    DWORD PTR [rdi+0x4230fff0],ebx
   14001e4ca:	iret   
   14001e4cb:	inc    DWORD PTR [rbx+0x31]
   14001e4ce:	push   0x44
	...
   14001e4f4:	mov    dl,BYTE PTR [rdi+0x15]
   14001e4f7:	pop    rbp
   14001e4f8:	cdq    
   14001e4f9:	data16 and al,0xfb
   14001e4fc:	sbb    DWORD PTR [rcx],ebx
   14001e4fe:	outs   dx,BYTE PTR ds:[rsi]
   14001e4ff:	push   QWORD PTR [rax+rax*4]
   14001e502:	fcos   
   14001e504:	cmp    DWORD PTR [rbx+0x3831ffed],esp
   14001e50a:	mov    ebx,0x372539e8
   14001e50f:	add    al,0x0
	...
   14001e535:	add    BYTE PTR [rax],al
   14001e537:	add    BYTE PTR [rbx+riz*2+0x33477613],bl
   14001e53e:	rex.WRX push QWORD PTR [rcx]
   14001e541:	jle    0x14001e50e
   14001e543:	(bad)  
   14001e544:	cmp    BYTE PTR [rbp+riz*8-0x69ccc701],dl
   14001e54b:	nop
	...
   14001e578:	push   rsi
   14001e579:	xor    al,BYTE PTR [rdi]
   14001e57b:	add    al,BYTE PTR [rax+0x2bc42b54]
   14001e581:	push   0xffffffffffffffb3
   14001e583:	push   QWORD PTR [rip+0x43fcd872]        # 0x183febdfb
   14001e589:	(bad)  
   14001e58a:	pop    rsp
   14001e58b:	(bad)  
	...
   14001e5bc:	mov    ds,WORD PTR [rcx+0x16]
   14001e5bf:	(bad)  
   14001e5c0:	rex.B
   14001e5c1:	rex.RB jle 0x14001e5ba
   14001e5c4:	cmp    BYTE PTR [rbx*4+0x92],bh
	...
   14001e5ff:	add    BYTE PTR [rbx+rsi*1+0x2f],cl
   14001e603:	and    BYTE PTR [rdx],ch
   14001e605:	sbb    eax,0x23b
	...
   14001e616:	add    BYTE PTR [rax],al
   14001e618:	cld    
   14001e619:	inc    DWORD PTR [rax]
   14001e61b:	add    ah,bh
   14001e61d:	(bad)  
   14001e61e:	add    BYTE PTR [rax],al
   14001e620:	clc    
   14001e621:	(bad)  
   14001e622:	add    BYTE PTR [rax],al
   14001e624:	clc    
   14001e625:	(bad)  
   14001e626:	add    BYTE PTR [rax],al
   14001e628:	loopne 0x14001e632
   14001e62a:	add    BYTE PTR [rax],al
   14001e62c:	add    BYTE PTR [rax],0x0
   14001e62f:	add    BYTE PTR [rax],al
   14001e631:	add    DWORD PTR [rax],eax
   14001e633:	add    BYTE PTR [rax],al
   14001e635:	add    DWORD PTR [rax],eax
   14001e637:	add    al,al
   14001e639:	add    DWORD PTR [rax],eax
   14001e63b:	add    al,dh
   14001e63d:	add    eax,DWORD PTR [rax]
   14001e63f:	add    al,bh
   14001e641:	add    eax,DWORD PTR [rax]
   14001e643:	add    dh,bh
   14001e645:	add    eax,DWORD PTR [rax]
   14001e647:	add    bh,bh
   14001e649:	(bad)  
   14001e64a:	add    BYTE PTR [rax],al
   14001e64c:	inc    DWORD PTR [rdi]
   14001e64e:	add    BYTE PTR [rax],al
   14001e650:	dec    DWORD PTR [rdi-0x30010000]
   14001e656:	add    BYTE PTR [rax],al
   14001e658:	add    BYTE PTR [rax],al
   14001e65a:	add    DWORD PTR [rax],eax
   14001e65c:	or     al,BYTE PTR [rax]
   14001e65e:	xor    BYTE PTR [rax],dh
   14001e660:	adc    BYTE PTR [rax],al
   14001e662:	add    DWORD PTR [rax],eax
   14001e664:	add    al,0x0
   14001e666:	push   0x1000006
   14001e66b:	add    BYTE PTR [rax],ah
   14001e66d:	and    BYTE PTR [rax],dl
   14001e66f:	add    BYTE PTR [rcx],al
   14001e671:	add    BYTE PTR [rax+rax*1],al
   14001e674:	call   0x14201e67b
   14001e679:	add    BYTE PTR [rax],dl
   14001e67b:	adc    BYTE PTR [rax],dl
   14001e67d:	add    BYTE PTR [rcx],al
   14001e67f:	add    BYTE PTR [rax+rax*1],al
   14001e682:	sub    BYTE PTR [rcx],al
   14001e684:	add    BYTE PTR [rax],al
   14001e686:	add    eax,DWORD PTR [rax]
   14001e688:	xor    BYTE PTR [rax],dh
   14001e68a:	add    BYTE PTR [rax],al
   14001e68c:	add    DWORD PTR [rax],eax
   14001e68e:	or     BYTE PTR [rax],al
   14001e690:	test   al,0xe
   14001e692:	add    BYTE PTR [rax],al
   14001e694:	add    al,0x0
   14001e696:	and    BYTE PTR [rax],ah
   14001e698:	add    BYTE PTR [rax],al
   14001e69a:	add    DWORD PTR [rax],eax
   14001e69c:	or     BYTE PTR [rax],al
   14001e69e:	test   al,0x8
   14001e6a0:	add    BYTE PTR [rax],al
   14001e6a2:	add    eax,0x101000
   14001e6a7:	add    BYTE PTR [rcx],al
   14001e6a9:	add    BYTE PTR [rax],cl
   14001e6ab:	add    BYTE PTR [rax+0x5],ch
   14001e6ae:	add    BYTE PTR [rax],al
   14001e6b0:	(bad)  
   14001e6b1:	add    BYTE PTR [rax],al
   14001e6b3:	add    BYTE PTR [rax],al
   14001e6b5:	add    BYTE PTR [rcx],al
   14001e6b7:	add    BYTE PTR [rax],ah
   14001e6b9:	add    ah,cl
   14001e6bb:	test   al,0x0
   14001e6bd:	add    BYTE PTR [rdi],al
   14001e6bf:	add    BYTE PTR [rax],dh
   14001e6c1:	xor    BYTE PTR [rax],al
   14001e6c3:	add    BYTE PTR [rcx],al
   14001e6c5:	add    BYTE PTR [rax],ah
   14001e6c7:	add    BYTE PTR [rax+0x8000025],ch
   14001e6cd:	add    BYTE PTR [rax],ah
   14001e6cf:	and    BYTE PTR [rax],al
   14001e6d1:	add    BYTE PTR [rcx],al
   14001e6d3:	add    BYTE PTR [rax],ah
   14001e6d5:	add    BYTE PTR [rax+0x9000010],ch
   14001e6db:	add    BYTE PTR [rax],dl
   14001e6dd:	adc    BYTE PTR [rax],al
   14001e6df:	add    BYTE PTR [rcx],al
   14001e6e1:	add    BYTE PTR [rax],ah
   14001e6e3:	add    BYTE PTR [rax+0x4],ch
   14001e6e6:	add    BYTE PTR [rax],al
   14001e6e8:	or     al,BYTE PTR [rax]
   14001e6ea:	add    BYTE PTR [rax],al
   14001e6ec:	add    BYTE PTR [rax],al
	...
