
734db8a127eba3f56ceacddf8d784fb4c6ff0d9524eaf0d2f75acd698ef9084c.exe:     file format pei-i386


Disassembly of section .text:

30001000 <.text>:
30001000:	jbe    0x30001012
30001002:	add    BYTE PTR [eax],dh
30001004:	data16 adc BYTE PTR [eax],al
30001007:	xor    BYTE PTR [eax+edx*1+0x0],cl
3000100b:	xor    BYTE PTR [eax+0x2230006e],dh
30001011:	adc    eax,0xe2b43000
30001016:	add    DWORD PTR [eax],esi
30001018:	sahf   
30001019:	jno    0x3000101b
3000101b:	xor    BYTE PTR [eax-0x3fcffce3],dh
30001021:	push   edx
30001022:	add    BYTE PTR [eax],dh
30001024:	dec    ecx
30001025:	jns    0x30001028
30001027:	xor    BYTE PTR [esi+ecx*8+0x0],dh
3000102b:	xor    BYTE PTR [ebx+0x69],dl
3000102e:	add    BYTE PTR [eax],dh
30001030:	popf   
30001031:	in     al,0x2
30001033:	xor    dh,al
30001035:	scas   al,BYTE PTR es:[edi]
30001036:	add    dh,BYTE PTR [eax]
30001038:	inc    edx
30001039:	mov    BYTE PTR [eax],al
3000103b:	xor    bl,bl
3000103d:	xchg   BYTE PTR [eax],al
3000103f:	xor    BYTE PTR [eax+eax*4+0x0],cl
30001043:	xor    bl,ah
30001045:	hlt    
30001046:	add    dh,BYTE PTR [eax]
30001048:	jecxz  0x3000103e
3000104a:	add    dh,BYTE PTR [eax]
3000104c:	push   ebp
3000104d:	mov    ebp,esp
3000104f:	mov    ecx,DWORD PTR [ebp+0x8]
30001052:	push   esi
30001053:	dec    DWORD PTR [ecx+0x8]
30001056:	mov    esi,DWORD PTR [ecx+0x8]
30001059:	je     0x3001793d
3000105f:	mov    eax,esi
30001061:	pop    esi
30001062:	pop    ebp
30001063:	ret    0x4
30001066:	push   ebp
30001067:	mov    ebp,esp
30001069:	mov    eax,DWORD PTR [ebp+0x8]
3000106c:	inc    DWORD PTR [eax+0x8]
3000106f:	mov    eax,DWORD PTR [eax+0x8]
30001072:	pop    ebp
30001073:	ret    0x4
30001076:	push   ebp
30001077:	mov    ebp,esp
30001079:	push   DWORD PTR [ebp+0x10]
3000107c:	push   DWORD PTR [ebp+0xc]
3000107f:	push   0x30001094
30001084:	push   DWORD PTR [ebp+0x8]
30001087:	call   DWORD PTR ds:0x30045424
3000108d:	pop    ebp
3000108e:	ret    0xc
30001091:	nop
30001092:	nop
30001093:	nop
30001094:	mov    eax,0x18300010
30001099:	push   es
3000109a:	add    BYTE PTR [eax],al
3000109c:	add    DWORD PTR [eax],eax
3000109e:	add    BYTE PTR [eax],al
300010a0:	add    BYTE PTR [eax],al
300010a2:	add    BYTE PTR [eax],al
300010a4:	inc    eax
300010a5:	xor    BYTE PTR [eax+esi*1],al
300010a8:	call   0x303010bd
	...
300010b5:	add    BYTE PTR [eax],al
300010b7:	add    BYTE PTR [ecx+0x15],ah
300010ba:	repnz (bad) 
300010bc:	mov    dl,ch
300010be:	rcl    BYTE PTR [ecx],cl
300010c0:	mov    edi,0xc780004a
300010c5:	sub    cl,bl
300010c7:	mov    al,ds:0x76af73f9
300010cc:	and    ah,BYTE PTR [ebx+0x15a542b0]
300010d2:	aam    0xd7
300010d4:	push   ebp
300010d5:	xor    eax,0xc917fe08
300010da:	jg     0x3000109e
300010dc:	loop   0x300010c8
300010de:	and    eax,0x835c8647
300010e3:	jbe    0x30001079
300010e5:	mov    eax,ds:0x8b55dc8e
300010ea:	in     al,dx
300010eb:	mov    eax,DWORD PTR [ebp+0x14]
300010ee:	push   esi
300010ef:	mov    esi,DWORD PTR [eax]
300010f1:	add    esi,DWORD PTR [ebp+0x8]
300010f4:	call   DWORD PTR [eax+0x4]
300010f7:	push   DWORD PTR [ebp+0x10]
300010fa:	push   DWORD PTR [ebp+0xc]
300010fd:	push   eax
300010fe:	push   esi
300010ff:	call   DWORD PTR ds:0x30045424
30001105:	pop    esi
30001106:	pop    ebp
30001107:	ret    0x10
3000110a:	mov    eax,0x30001110
3000110f:	ret    
30001110:	dec    esp
30001111:	adc    DWORD PTR [eax],eax
30001113:	xor    BYTE PTR [eax+0x0],al
30001116:	add    BYTE PTR [eax],al
30001118:	add    DWORD PTR [eax],eax
3000111a:	add    BYTE PTR [eax],al
3000111c:	fcom   DWORD PTR [eax]
3000111e:	add    BYTE PTR [eax],dh
30001120:	inc    esp
30001121:	add    BYTE PTR [eax],al
30001123:	add    BYTE PTR [ecx],al
30001125:	add    BYTE PTR [eax],al
30001127:	add    al,cl
30001129:	adc    BYTE PTR [eax],al
3000112b:	xor    BYTE PTR [eax+0x0],cl
3000112e:	add    BYTE PTR [eax],al
30001130:	add    DWORD PTR [eax],eax
30001132:	add    BYTE PTR [eax],al
30001134:	add    BYTE PTR [eax],al
30001136:	add    BYTE PTR [eax],al
30001138:	dec    eax
30001139:	xor    BYTE PTR [eax+esi*1],al
3000113c:	call   0x30301151
	...
30001149:	add    BYTE PTR [eax],al
3000114b:	add    BYTE PTR [ebx+0x52],ch
3000114e:	stos   BYTE PTR es:[edi],al
3000114f:	push   ds
30001150:	cwde   
30001151:	or     bl,dl
30001153:	adc    DWORD PTR [eax+0x4fc00068],edi
30001159:	jns    0x30001153
3000115b:	add    bh,BYTE PTR [ebx]
3000115d:	or     eax,0x30043050
30001162:	jne    0x30037ed1
30001168:	repz ret 
3000116a:	push   eax
3000116b:	push   DWORD PTR fs:0x0
30001172:	lea    eax,[esp+0xc]
30001176:	sub    esp,DWORD PTR [esp+0xc]
3000117a:	push   ebx
3000117b:	push   esi
3000117c:	push   edi
3000117d:	mov    DWORD PTR [eax],ebp
3000117f:	mov    ebp,eax
30001181:	mov    eax,ds:0x30043050
30001186:	xor    eax,ebp
30001188:	push   eax
30001189:	push   DWORD PTR [ebp-0x4]
3000118c:	mov    DWORD PTR [ebp-0x4],0xffffffff
30001193:	lea    eax,[ebp-0xc]
30001196:	mov    fs:0x0,eax
3000119c:	ret    
3000119d:	mov    ecx,DWORD PTR [ebp-0xc]
300011a0:	mov    DWORD PTR fs:0x0,ecx
300011a7:	pop    ecx
300011a8:	pop    edi
300011a9:	pop    edi
300011aa:	pop    esi
300011ab:	pop    ebx
300011ac:	mov    esp,ebp
300011ae:	pop    ebp
300011af:	push   ecx
300011b0:	ret    
300011b1:	jmp    DWORD PTR ds:0x300452ec
300011b7:	push   ebp
300011b8:	mov    ebp,esp
300011ba:	pop    ebp
300011bb:	jmp    DWORD PTR ds:0x30043054
300011c1:	push   0x0
300011c3:	mov    eax,0x300409b8
300011c8:	call   0x3000116a
300011cd:	mov    eax,ds:0x30043064
300011d2:	test   al,0x1
300011d4:	je     0x30017c6f
300011da:	mov    eax,0x30043058
300011df:	call   0x3000119d
300011e4:	ret    
300011e5:	push   ebp
300011e6:	mov    ebp,esp
300011e8:	mov    eax,DWORD PTR [ebp+0x8]
300011eb:	test   eax,eax
300011ed:	js     0x3002117f
300011f3:	cmp    eax,DWORD PTR [ecx+0x4]
300011f6:	jge    0x3002117f
300011fc:	shl    eax,0x5
300011ff:	add    eax,DWORD PTR [ecx]
30001201:	pop    ebp
30001202:	ret    0x4
30001205:	push   0x0
30001207:	mov    eax,0x300408b0
3000120c:	call   0x3000116a
30001211:	mov    esi,ecx
30001213:	mov    ebx,DWORD PTR [ebp+0xc]
30001216:	test   ebx,ebx
30001218:	je     0x300013da
3000121e:	cmp    DWORD PTR [ebp+0x14],0x0
30001222:	je     0x300013da
30001228:	cmp    DWORD PTR [ebp+0x20],0x0
3000122c:	je     0x300013da
30001232:	mov    eax,DWORD PTR [esi]
30001234:	test   eax,eax
30001236:	je     0x30001265
30001238:	xor    ecx,ecx
3000123a:	mov    DWORD PTR [ebp+0xc],ecx
3000123d:	cmp    DWORD PTR [eax+0x4],ecx
30001240:	jle    0x30001265
30001242:	push   ecx
30001243:	mov    ecx,eax
30001245:	call   0x300011e5
3000124a:	mov    edi,eax
3000124c:	mov    eax,DWORD PTR [ebp+0x8]
3000124f:	cmp    eax,DWORD PTR [edi]
30001251:	je     0x30001382
30001257:	mov    ecx,DWORD PTR [ebp+0xc]
3000125a:	mov    eax,DWORD PTR [esi]
3000125c:	inc    ecx
3000125d:	mov    DWORD PTR [ebp+0xc],ecx
30001260:	cmp    ecx,DWORD PTR [eax+0x4]
30001263:	jl     0x30001242
30001265:	xor    eax,eax
30001267:	inc    eax
30001268:	call   0x3000119d
3000126d:	ret    0x1c
30001270:	push   ebp
30001271:	mov    ebp,esp
30001273:	sub    esp,0x41c
30001279:	mov    eax,ds:0x30043050
3000127e:	xor    eax,ebp
30001280:	mov    DWORD PTR [ebp-0x4],eax
30001283:	and    DWORD PTR [ebp-0x414],0x0
3000128a:	push   ebx
3000128b:	mov    ebx,DWORD PTR [ebp+0x18]
3000128e:	push   esi
3000128f:	mov    esi,DWORD PTR [ebp+0x8]
30001292:	push   edi
30001293:	mov    edi,DWORD PTR [ebp+0xc]
30001296:	push   0x40c
3000129b:	lea    eax,[ebp-0x410]
300012a1:	push   0x0
300012a3:	push   eax
300012a4:	call   0x300011b1
300012a9:	add    esp,0xc
300012ac:	lea    eax,[ebp-0x41c]
300012b2:	push   eax
300012b3:	push   ecx
300012b4:	lea    eax,[ebp-0x414]
300012ba:	push   eax
300012bb:	lea    eax,[ebp-0x418]
300012c1:	push   eax
300012c2:	push   DWORD PTR [ebp+0x10]
300012c5:	push   edi
300012c6:	push   esi
300012c7:	call   0x300011c1
300012cc:	mov    ecx,eax
300012ce:	call   0x30001205
300012d3:	test   eax,eax
300012d5:	je     0x30004bf4
300012db:	push   ebx
300012dc:	push   DWORD PTR [ebp+0x14]
300012df:	push   DWORD PTR [ebp+0x10]
300012e2:	push   edi
300012e3:	push   esi
300012e4:	call   DWORD PTR ds:0x30043060
300012ea:	mov    ecx,DWORD PTR [ebp-0x4]
300012ed:	pop    edi
300012ee:	pop    esi
300012ef:	xor    ecx,ebp
300012f1:	pop    ebx
300012f2:	call   0x3000115c
300012f7:	leave  
300012f8:	ret    0x14
300012fb:	push   ebp
300012fc:	mov    ebp,esp
300012fe:	pop    ebp
300012ff:	jmp    DWORD PTR ds:0x30043068
30001305:	push   ebp
30001306:	mov    ebp,esp
30001308:	pop    ebp
30001309:	jmp    DWORD PTR ds:0x300430a0
3000130f:	push   ebp
30001310:	mov    ebp,esp
30001312:	pop    ebp
30001313:	jmp    DWORD PTR ds:0x300430a4
30001319:	push   ebp
3000131a:	mov    ebp,esp
3000131c:	pop    ebp
3000131d:	jmp    DWORD PTR ds:0x300430a8
30001323:	push   ebp
30001324:	mov    ebp,esp
30001326:	mov    edx,DWORD PTR [ebp+0x8]
30001329:	push   ebx
3000132a:	push   esi
3000132b:	push   edi
3000132c:	lea    esi,[edx+0x2]
3000132f:	xor    ebx,ebx
30001331:	mov    ax,WORD PTR [edx]
30001334:	add    edx,0x2
30001337:	cmp    ax,bx
3000133a:	jne    0x30001331
3000133c:	sub    edx,esi
3000133e:	mov    esi,DWORD PTR [ecx+0x14]
30001341:	mov    ecx,esi
30001343:	sar    edx,1
30001345:	lea    edi,[ecx+0x2]
30001348:	mov    ax,WORD PTR [ecx]
3000134b:	add    ecx,0x2
3000134e:	cmp    ax,bx
30001351:	jne    0x30001348
30001353:	sub    ecx,edi
30001355:	sar    ecx,1
30001357:	cmp    edx,ecx
30001359:	jb     0x300013e4
3000135f:	push   DWORD PTR [esi-0xc]
30001362:	push   esi
30001363:	push   DWORD PTR [esi-0xc]
30001366:	push   DWORD PTR [ebp+0x8]
30001369:	push   0x1
3000136b:	push   0x7f
3000136d:	call   DWORD PTR ds:0x30045268
30001373:	sub    eax,0x2
30001376:	neg    eax
30001378:	sbb    eax,eax
3000137a:	inc    eax
3000137b:	pop    edi
3000137c:	pop    esi
3000137d:	pop    ebx
3000137e:	pop    ebp
3000137f:	ret    0x4
30001382:	push   ebx
30001383:	mov    ecx,edi
30001385:	call   0x30001323
3000138a:	test   al,al
3000138c:	je     0x30001257
30001392:	cmp    BYTE PTR [esi+0x5],0x0
30001396:	jne    0x300210f6
3000139c:	cmp    BYTE PTR [esi+0x4],0x0
300013a0:	jne    0x300210f6
300013a6:	mov    al,BYTE PTR [edi+0x1c]
300013a9:	test   al,al
300013ab:	jne    0x300210f6
300013b1:	push   ecx
300013b2:	push   DWORD PTR [ebp+0x18]
300013b5:	mov    ecx,edi
300013b7:	push   ebx
300013b8:	call   0x30004b7a
300013bd:	test   eax,eax
300013bf:	js     0x30001268
300013c5:	push   DWORD PTR [ebp+0x20]
300013c8:	mov    ecx,edi
300013ca:	push   DWORD PTR [ebp+0x14]
300013cd:	push   DWORD PTR [ebp+0x10]
300013d0:	call   0x30004a17
300013d5:	jmp    0x30001268
300013da:	mov    eax,0x80070057
300013df:	jmp    0x30001268
300013e4:	xor    al,al
300013e6:	jmp    0x3000137b
300013e8:	push   ebp
300013e9:	mov    ebp,esp
300013eb:	mov    eax,DWORD PTR [ebp+0x8]
300013ee:	test   eax,eax
300013f0:	je     0x30001404
300013f2:	lea    edx,[eax+0x2]
300013f5:	mov    cx,WORD PTR [eax]
300013f8:	add    eax,0x2
300013fb:	test   cx,cx
300013fe:	jne    0x300013f5
30001400:	sub    eax,edx
30001402:	sar    eax,1
30001404:	pop    ebp
30001405:	ret    0x4
30001408:	arpl   WORD PTR es:[eax],ax
3000140b:	xor    BYTE PTR ds:0x18300014,ah
30001411:	adc    al,0x0
30001413:	xor    BYTE PTR [eax-0x7ecfffa1],ch
30001419:	ins    BYTE PTR es:[edi],dx
3000141a:	and    al,0x4
3000141c:	sbb    BYTE PTR [esi],al
3000141e:	add    BYTE PTR [eax],al
30001420:	jmp    0x3000104c
30001425:	sub    DWORD PTR [esp+0x4],0x618
3000142d:	jmp    0x30001066
30001432:	push   ebp
30001433:	mov    ebp,esp
30001435:	mov    eax,DWORD PTR [ebp+0x8]
30001438:	test   eax,eax
3000143a:	jne    0x3001f5e4
30001440:	pop    ebp
30001441:	ret    0x4
30001444:	push   ebp
30001445:	mov    ebp,esp
30001447:	push   DWORD PTR [ebp+0x14]
3000144a:	push   DWORD PTR [ebp+0x10]
3000144d:	push   DWORD PTR [ebp+0xc]
30001450:	push   DWORD PTR [ebp+0x8]
30001453:	call   DWORD PTR ds:0x300453b4
30001459:	add    esp,0x10
3000145c:	push   eax
3000145d:	call   0x30001432
30001462:	pop    ebp
30001463:	ret    
30001464:	push   ebp
30001465:	mov    ebp,esp
30001467:	mov    eax,DWORD PTR [ebp+0xc]
3000146a:	mul    DWORD PTR [ebp+0x10]
3000146d:	test   edx,edx
3000146f:	jne    0x30001481
30001471:	cmp    eax,0xffffffff
30001474:	ja     0x30001481
30001476:	mov    ecx,DWORD PTR [ebp+0x8]
30001479:	mov    DWORD PTR [ecx],eax
3000147b:	xor    eax,eax
3000147d:	pop    ebp
3000147e:	ret    0xc
30001481:	mov    eax,0x80070216
30001486:	jmp    0x3000147d
30001488:	push   ebp
30001489:	mov    ebp,esp
3000148b:	cmp    DWORD PTR [ebp+0x8],0x0
3000148f:	push   esi
30001490:	mov    esi,ecx
30001492:	je     0x3001f631
30001498:	push   DWORD PTR [ebp+0x8]
3000149b:	call   DWORD PTR ds:0x300454dc
300014a1:	mov    DWORD PTR [esi],eax
300014a3:	test   eax,eax
300014a5:	je     0x3001f639
300014ab:	mov    eax,esi
300014ad:	pop    esi
300014ae:	pop    ebp
300014af:	ret    0x4
300014b2:	push   esi
300014b3:	mov    esi,ecx
300014b5:	xor    eax,eax
300014b7:	cmp    DWORD PTR [esi],eax
300014b9:	jne    0x30006d3c
300014bf:	pop    esi
300014c0:	ret    
300014c1:	push   ebp
300014c2:	mov    ebp,esp
300014c4:	mov    eax,DWORD PTR [ebp+0x8]
300014c7:	push   ebx
300014c8:	mov    ebx,ecx
300014ca:	mov    ecx,DWORD PTR [eax]
300014cc:	push   edi
300014cd:	mov    edi,DWORD PTR [ebx]
300014cf:	lea    edx,[ecx-0x10]
300014d2:	sub    edi,0x10
300014d5:	cmp    edx,edi
300014d7:	je     0x30001504
300014d9:	cmp    DWORD PTR [edi+0xc],0x0
300014dd:	jl     0x3001fa13
300014e3:	mov    eax,DWORD PTR [edx]
300014e5:	cmp    eax,DWORD PTR [edi]
300014e7:	jne    0x3001fa13
300014ed:	push   esi
300014ee:	push   edx
300014ef:	call   0x30004306
300014f4:	pop    ecx
300014f5:	mov    ecx,edi
300014f7:	mov    esi,eax
300014f9:	call   0x30004017
300014fe:	lea    eax,[esi+0x10]
30001501:	mov    DWORD PTR [ebx],eax
30001503:	pop    esi
30001504:	pop    edi
30001505:	mov    eax,ebx
30001507:	pop    ebx
30001508:	pop    ebp
30001509:	ret    0x4
3000150c:	add    BYTE PTR [esi+0x3],bh
3000150f:	xor    BYTE PTR [eax],al
30001511:	jle    0x30001516
30001513:	xor    cl,dl
30001515:	jle    0x30001517
30001517:	xor    al,al
30001519:	push   edx
3000151a:	add    BYTE PTR [eax],dh
3000151c:	jmp    DWORD PTR ds:0x3004536c
30001522:	push   ebp
30001523:	mov    ebp,esp
30001525:	and    esp,0xfffffff8
30001528:	sub    esp,0xc
3000152b:	push   ebx
3000152c:	push   esi
3000152d:	push   edi
3000152e:	mov    edi,DWORD PTR [ebp+0x10]
30001531:	test   edi,edi
30001533:	je     0x30001564
30001535:	mov    ecx,DWORD PTR [ebp+0xc]
30001538:	lea    eax,[ecx+0x219c]
3000153e:	cmp    eax,0x59
30001541:	ja     0x30001551
30001543:	movzx  eax,BYTE PTR [eax+0x30001830]
3000154a:	jmp    DWORD PTR [eax*4+0x300017d4]
30001551:	push   edi
30001552:	push   ecx
30001553:	push   DWORD PTR [ebp+0x8]
30001556:	call   0x300049b7
3000155b:	pop    edi
3000155c:	pop    esi
3000155d:	pop    ebx
3000155e:	mov    esp,ebp
30001560:	pop    ebp
30001561:	ret    0xc
30001564:	mov    eax,0x80004003
30001569:	jmp    0x3000155b
3000156b:	push   0x3
3000156d:	pop    eax
3000156e:	mov    WORD PTR [edi],ax
30001571:	mov    DWORD PTR [edi+0x8],0xbf1
30001578:	jmp    0x30003e98
3000157d:	push   0x3
3000157f:	pop    eax
30001580:	mov    WORD PTR [edi],ax
30001583:	mov    DWORD PTR [edi+0x8],0xc09
3000158a:	jmp    0x30003e98
3000158f:	cmp    DWORD PTR ds:0x30044d08,0x0
30001596:	je     0x300017ca
3000159c:	mov    ecx,0x30043460
300015a1:	call   0x3002ae49
300015a6:	test   eax,eax
300015a8:	je     0x300015b5
300015aa:	push   0x3
300015ac:	pop    ecx
300015ad:	mov    WORD PTR [edi],cx
300015b0:	jmp    0x300060bc
300015b5:	cmp    DWORD PTR ds:0x30043c20,0x0
300015bc:	je     0x300015ef
300015be:	mov    ecx,DWORD PTR [ebp+0x8]
300015c1:	xor    ebx,ebx
300015c3:	mov    eax,DWORD PTR [ecx]
300015c5:	push   ebx
300015c6:	push   ebx
300015c7:	call   DWORD PTR [eax+0x2c]
300015ca:	push   0x8
300015cc:	pop    eax
300015cd:	mov    WORD PTR [edi],ax
300015d0:	mov    ecx,DWORD PTR ds:0x300430c0
300015d6:	lea    eax,[edi+0x8]
300015d9:	push   eax
300015da:	push   DWORD PTR ds:0x30043c20
300015e0:	mov    edx,0xbf0
300015e5:	call   0x30032950
300015ea:	jmp    0x30003e98
300015ef:	push   0x3
300015f1:	pop    eax
300015f2:	mov    WORD PTR [edi],ax
300015f5:	mov    DWORD PTR [edi+0x8],0xbec
300015fc:	jmp    0x30003e98
30001601:	mov    ecx,DWORD PTR [ebp+0x8]
30001604:	xor    ebx,ebx
30001606:	mov    eax,DWORD PTR [ecx]
30001608:	push   ebx
30001609:	push   ebx
3000160a:	call   DWORD PTR [eax+0x2c]
3000160d:	push   0x8
3000160f:	pop    eax
30001610:	push   0x3000188c
30001615:	lea    ecx,[esp+0x18]
30001619:	mov    WORD PTR [edi],ax
3000161c:	call   0x3002bde5
30001621:	lea    ecx,[edi+0x8]
30001624:	push   ecx
30001625:	push   DWORD PTR [eax]
30001627:	mov    ecx,DWORD PTR ds:0x300430c0
3000162d:	mov    edx,0xfa0
30001632:	call   0x30032950
30001637:	push   DWORD PTR [esp+0x14]
3000163b:	jmp    0x3000699e
30001640:	mov    ecx,DWORD PTR [ebp+0x8]
30001643:	xor    ebx,ebx
30001645:	mov    eax,DWORD PTR [ecx]
30001647:	push   ebx
30001648:	push   ebx
30001649:	call   DWORD PTR [eax+0x2c]
3000164c:	push   0xbc2
30001651:	push   DWORD PTR ds:0x300430c0
30001657:	lea    ecx,[esp+0x18]
3000165b:	mov    DWORD PTR [esp+0x18],ebx
3000165f:	call   0x300054b7
30001664:	push   0x8
30001666:	pop    eax
30001667:	mov    WORD PTR [edi],ax
3000166a:	mov    eax,DWORD PTR [esp+0x10]
3000166e:	mov    DWORD PTR [edi+0x8],eax
30001671:	jmp    0x30005537
30001676:	push   0x3
30001678:	pop    eax
30001679:	mov    WORD PTR [edi],ax
3000167c:	mov    DWORD PTR [edi+0x8],0xbba
30001683:	jmp    0x30003e98
30001688:	mov    ecx,DWORD PTR [ebp+0x8]
3000168b:	xor    ebx,ebx
3000168d:	mov    eax,DWORD PTR [ecx]
3000168f:	push   ebx
30001690:	push   ebx
30001691:	call   DWORD PTR [eax+0x2c]
30001694:	push   0x1a2d
30001699:	push   DWORD PTR ds:0x300430c0
3000169f:	lea    ecx,[esp+0x18]
300016a3:	mov    DWORD PTR [esp+0x18],ebx
300016a7:	call   0x300054b7
300016ac:	mov    esi,DWORD PTR [esp+0x10]
300016b0:	push   esi
300016b1:	call   DWORD PTR ds:0x300454ec
300016b7:	test   eax,eax
300016b9:	jne    0x3000552e
300016bf:	push   edi
300016c0:	push   DWORD PTR [ebp+0xc]
300016c3:	push   DWORD PTR [ebp+0x8]
300016c6:	call   0x300049b7
300016cb:	push   esi
300016cc:	mov    edi,eax
300016ce:	call   DWORD PTR ds:0x300454e8
300016d4:	mov    eax,edi
300016d6:	jmp    0x3000155b
300016db:	push   0x8
300016dd:	pop    eax
300016de:	push   0x300038b0
300016e3:	jmp    0x3000ca9a
300016e8:	mov    ecx,0x300435d0
300016ed:	call   0x3001183a
300016f2:	test   al,al
300016f4:	jne    0x300017ca
300016fa:	mov    eax,ds:0x30044f30
300016ff:	mov    esi,DWORD PTR [ebp+0x8]
30001702:	test   al,0x1
30001704:	jne    0x30001722
30001706:	push   DWORD PTR ds:0x300434dc
3000170c:	or     eax,0x1
3000170f:	mov    ecx,esi
30001711:	mov    ds:0x30044f30,eax
30001716:	call   0x3002b832
3000171b:	mov    ds:0x30044f34,al
30001720:	jmp    0x30001727
30001722:	mov    al,ds:0x30044f34
30001727:	test   al,al
30001729:	jne    0x300017ca
3000172f:	push   0x8
30001731:	pop    eax
30001732:	mov    WORD PTR [edi],ax
30001735:	cmp    DWORD PTR [esi+0x66c],0x0
3000173c:	jne    0x3000175d
3000173e:	push   ecx
3000173f:	mov    ecx,DWORD PTR ds:0x300435cc
30001745:	lea    eax,[ecx+0x668]
3000174b:	lea    edx,[ecx+0x664]
30001751:	push   eax
30001752:	add    ecx,0x660
30001758:	call   0x30019b03
3000175d:	push   DWORD PTR [esi+0x66c]
30001763:	jmp    0x3000ca9d
30001768:	cmp    WORD PTR [eax],0x0
3000176c:	je     0x30006333
30001772:	push   0x8
30001774:	pop    eax
30001775:	mov    WORD PTR [edi],ax
30001778:	push   DWORD PTR ds:0x30043574
3000177e:	jmp    0x30008399
30001783:	mov    eax,0x8007000e
30001788:	jmp    0x3000155b
3000178d:	mov    esi,DWORD PTR [ebp+0x8]
30001790:	mov    ecx,esi
30001792:	call   0x30008304
30001797:	push   0x8
30001799:	pop    eax
3000179a:	mov    WORD PTR [edi],ax
3000179d:	push   DWORD PTR [esi+0x670]
300017a3:	jmp    0x30008399
300017a8:	mov    esi,DWORD PTR [ebp+0x8]
300017ab:	mov    ecx,esi
300017ad:	call   0x30008304
300017b2:	push   0x8
300017b4:	pop    eax
300017b5:	mov    WORD PTR [edi],ax
300017b8:	push   DWORD PTR [esi+0x674]
300017be:	jmp    0x30008399
300017c3:	push   esi
300017c4:	call   DWORD PTR ds:0x300454e8
300017ca:	mov    eax,0x80004001
300017cf:	jmp    0x3000155b
300017d4:	add    DWORD PTR [ebx+0x17a83000],0x0
300017db:	xor    BYTE PTR [ebp-0x8cfffe9],cl
300017e1:	push   esp
300017e2:	add    BYTE PTR [eax],dh
300017e4:	xor    esp,DWORD PTR [ebx+0x0]
300017e7:	xor    al,ch
300017e9:	push   ss
300017ea:	add    BYTE PTR [eax],dh
300017ec:	pop    ebp
300017ed:	push   ebx
300017ee:	add    BYTE PTR [eax],dh
300017f0:	mov    edi,0xdb3000bf
300017f5:	push   ss
300017f6:	add    BYTE PTR [eax],dh
300017f8:	aad    0x60
300017fa:	add    BYTE PTR [eax],dh
300017fc:	inc    eax
300017fd:	push   ss
300017fe:	add    BYTE PTR [eax],dh
30001800:	(bad)  
30001801:	adc    eax,0xb9783000
30001806:	add    BYTE PTR [eax],dh
30001808:	js     0x300017d4
3000180a:	add    BYTE PTR [eax],dh
3000180c:	xchg   edx,eax
3000180d:	retf   0x3000
30001810:	add    DWORD PTR [esi],edx
30001812:	add    BYTE PTR [eax],dh
30001814:	les    esp,FWORD PTR [eax+0x0]
30001817:	xor    ch,bl
30001819:	aas    
3000181a:	add    BYTE PTR [eax],dh
3000181c:	jge    0x30001833
3000181e:	add    BYTE PTR [eax],dh
30001820:	imul   edx,DWORD PTR ds:0x16763000,0x0
30001827:	xor    BYTE PTR [eax+0x51300016],cl
3000182d:	adc    eax,0x1003000
30001832:	add    al,BYTE PTR [ebx]
30001834:	add    al,0x16
30001836:	push   ss
30001837:	push   ss
30001838:	push   ss
30001839:	push   ss
3000183a:	push   ss
3000183b:	push   ss
3000183c:	push   ss
3000183d:	push   ss
3000183e:	push   ss
3000183f:	push   ss
30001840:	add    al,0x16
30001842:	push   ss
30001843:	push   ss
30001844:	push   ss
30001845:	push   ss
30001846:	push   ss
30001847:	push   ss
30001848:	push   ss
30001849:	push   ss
3000184a:	push   ss
3000184b:	push   ss
3000184c:	push   ss
3000184d:	push   ss
3000184e:	push   ss
3000184f:	push   ss
30001850:	push   ss
30001851:	push   ss
30001852:	push   ss
30001853:	push   ss
30001854:	push   ss
30001855:	push   ss
30001856:	push   ss
30001857:	push   ss
30001858:	push   ss
30001859:	push   ss
3000185a:	add    eax,0x16161616
3000185f:	push   ss
30001860:	push   ss
30001861:	add    al,0x16
30001863:	push   es
30001864:	pop    es
30001865:	push   ss
30001866:	or     BYTE PTR [esi],dl
30001868:	push   ss
30001869:	push   ss
3000186a:	or     DWORD PTR [edx+ecx*1],eax
3000186d:	add    al,0x16
3000186f:	add    al,0xb
30001871:	push   ss
30001872:	or     al,0xd
30001874:	push   cs
30001875:	movups xmm2,XMMWORD PTR [esi]
30001878:	push   ss
30001879:	push   ss
3000187a:	push   ss
3000187b:	push   ss
3000187c:	push   ss
3000187d:	push   ss
3000187e:	push   ss
3000187f:	push   ss
30001880:	adc    DWORD PTR [edx],edx
30001882:	adc    edx,DWORD PTR [esi]
30001884:	push   ss
30001885:	push   ss
30001886:	push   ss
30001887:	adc    al,0x16
30001889:	adc    eax,0x31319090
3000188e:	xor    BYTE PTR cs:[esi],ch
30001891:	xor    eax,0x37323730
30001896:	xor    DWORD PTR cs:[eax],eax
30001899:	nop
3000189a:	nop
3000189b:	nop
3000189c:	nop
3000189d:	nop
3000189e:	nop
3000189f:	nop
300018a0:	push   esi
300018a1:	add    BYTE PTR [ecx+0x0],ch
300018a4:	jae    0x300018a6
300018a6:	jne    0x300018a8
300018a8:	popa   
300018a9:	add    BYTE PTR [eax+eax*1+0x20],ch
300018ad:	add    BYTE PTR [ebx+0x0],dl
300018b0:	je     0x300018b2
300018b2:	jne    0x300018b4
300018b4:	add    BYTE PTR fs:[ecx+0x0],ch
300018b8:	outs   dx,DWORD PTR ds:[esi]
300018b9:	add    BYTE PTR [eax],ah
300018bb:	add    BYTE PTR [esi],dh
300018bd:	add    BYTE PTR [esi],ch
300018bf:	add    BYTE PTR [eax],dh
	...
300018fd:	add    BYTE PTR [esi+0x0],dl
30001900:	imul   eax,DWORD PTR [eax],0x750073
30001906:	popa   
30001907:	add    BYTE PTR [eax+eax*1+0x20],ch
3000190b:	add    BYTE PTR [ebx+0x0],dl
3000190e:	je     0x30001910
30001910:	jne    0x30001912
30001912:	add    BYTE PTR fs:[ecx+0x0],ch
30001916:	outs   dx,DWORD PTR ds:[esi]
	...
30001953:	add    BYTE PTR [esi],al
30001955:	add    BYTE PTR [eax],al
30001957:	add    BYTE PTR [esi],al
30001959:	add    BYTE PTR [eax],al
3000195b:	add    BYTE PTR [esi],al
	...
30001975:	add    BYTE PTR [eax],al
30001977:	add    BYTE PTR [esi+0x0],dl
3000197a:	imul   eax,DWORD PTR [eax],0x750073
30001980:	popa   
30001981:	add    BYTE PTR [eax+eax*1+0x20],ch
30001985:	add    BYTE PTR [ebx+0x0],dl
30001988:	je     0x3000198a
3000198a:	jne    0x3000198c
3000198c:	add    BYTE PTR fs:[ecx+0x0],ch
30001990:	outs   dx,DWORD PTR ds:[esi]
30001991:	add    BYTE PTR [eax],ah
30001993:	add    BYTE PTR [edx],dh
30001995:	add    BYTE PTR [eax],dh
30001997:	add    BYTE PTR [eax],dh
30001999:	add    BYTE PTR [edx],dh
	...
300019d3:	add    BYTE PTR [eax],al
300019d5:	add    BYTE PTR [esi+0x0],dl
300019d8:	imul   eax,DWORD PTR [eax],0x750073
300019de:	popa   
300019df:	add    BYTE PTR [eax+eax*1+0x20],ch
300019e3:	add    BYTE PTR [ebx+0x0],dl
300019e6:	je     0x300019e8
300019e8:	jne    0x300019ea
300019ea:	add    BYTE PTR fs:[ecx+0x0],ch
300019ee:	outs   dx,DWORD PTR ds:[esi]
	...
30001a2b:	add    dl,dl
30001a2d:	pop    es
30001a2e:	add    BYTE PTR [eax],al
30001a30:	rol    BYTE PTR [edi],cl
30001a32:	add    BYTE PTR [eax],al
30001a34:	rol    BYTE PTR [edi],cl
	...
30001a4e:	add    BYTE PTR [eax],al
30001a50:	push   esi
30001a51:	add    BYTE PTR [ecx+0x0],ch
30001a54:	jae    0x30001a56
30001a56:	jne    0x30001a58
30001a58:	popa   
30001a59:	add    BYTE PTR [eax+eax*1+0x20],ch
30001a5d:	add    BYTE PTR [ebx+0x0],dl
30001a60:	je     0x30001a62
30001a62:	jne    0x30001a64
30001a64:	add    BYTE PTR fs:[ecx+0x0],ch
30001a68:	outs   dx,DWORD PTR ds:[esi]
30001a69:	add    BYTE PTR [eax],ah
30001a6b:	add    BYTE PTR [edx],dh
30001a6d:	add    BYTE PTR [eax],dh
30001a6f:	add    BYTE PTR [eax],dh
30001a71:	add    BYTE PTR [ebx],dh
	...
30001aab:	add    BYTE PTR [eax],al
30001aad:	add    BYTE PTR [esi+0x0],dl
30001ab0:	imul   eax,DWORD PTR [eax],0x750073
30001ab6:	popa   
30001ab7:	add    BYTE PTR [eax+eax*1+0x20],ch
30001abb:	add    BYTE PTR [ebx+0x0],dl
30001abe:	je     0x30001ac0
30001ac0:	jne    0x30001ac2
30001ac2:	add    BYTE PTR fs:[ecx+0x0],ch
30001ac6:	outs   dx,DWORD PTR ds:[esi]
	...
30001b03:	add    bl,dl
30001b05:	pop    es
30001b06:	add    BYTE PTR [eax],al
30001b08:	rol    DWORD PTR [edi],cl
30001b0a:	add    BYTE PTR [eax],al
30001b0c:	rol    DWORD PTR [edi],cl
	...
30001b26:	add    BYTE PTR [eax],al
30001b28:	push   esi
30001b29:	add    BYTE PTR [ecx+0x0],ch
30001b2c:	jae    0x30001b2e
30001b2e:	jne    0x30001b30
30001b30:	popa   
30001b31:	add    BYTE PTR [eax+eax*1+0x20],ch
30001b35:	add    BYTE PTR [ebx+0x0],dl
30001b38:	je     0x30001b3a
30001b3a:	jne    0x30001b3c
30001b3c:	add    BYTE PTR fs:[ecx+0x0],ch
30001b40:	outs   dx,DWORD PTR ds:[esi]
30001b41:	add    BYTE PTR [eax],ah
30001b43:	add    BYTE PTR [edx],dh
30001b45:	add    BYTE PTR [eax],dh
30001b47:	add    BYTE PTR [eax],dh
30001b49:	add    BYTE PTR ds:0x0,dh
	...
30001b83:	add    BYTE PTR [eax],al
30001b85:	add    BYTE PTR [esi+0x0],dl
30001b88:	imul   eax,DWORD PTR [eax],0x750073
30001b8e:	popa   
30001b8f:	add    BYTE PTR [eax+eax*1+0x20],ch
30001b93:	add    BYTE PTR [ebx+0x0],dl
30001b96:	je     0x30001b98
30001b98:	jne    0x30001b9a
30001b9a:	add    BYTE PTR fs:[ecx+0x0],ch
30001b9e:	outs   dx,DWORD PTR ds:[esi]
	...
30001bdb:	add    ch,dl
30001bdd:	pop    es
30001bde:	add    BYTE PTR [eax],al
30001be0:	aad    0x7
30001be2:	add    BYTE PTR [eax],al
30001be4:	aad    0x7
	...
30001bfe:	add    BYTE PTR [eax],al
30001c00:	push   esi
30001c01:	add    BYTE PTR [ecx+0x0],ch
30001c04:	jae    0x30001c06
30001c06:	jne    0x30001c08
30001c08:	popa   
30001c09:	add    BYTE PTR [eax+eax*1+0x20],ch
30001c0d:	add    BYTE PTR [edx+0x0],al
30001c10:	popa   
30001c11:	add    BYTE PTR [ebx+0x0],dh
30001c14:	imul   eax,DWORD PTR [eax],0x200063
30001c1a:	inc    ebp
30001c1b:	add    BYTE PTR [eax+0x0],bh
30001c1e:	jo     0x30001c20
30001c20:	jb     0x30001c22
30001c22:	add    BYTE PTR gs:[ebx+0x0],dh
30001c26:	jae    0x30001c28
30001c28:	and    BYTE PTR [eax],al
30001c2a:	xor    al,BYTE PTR [eax]
30001c2c:	xor    BYTE PTR [eax],al
30001c2e:	xor    BYTE PTR [eax],al
30001c30:	xor    eax,0x0
	...
30001c5d:	add    BYTE PTR [esi+0x0],dl
30001c60:	imul   eax,DWORD PTR [eax],0x750073
30001c66:	popa   
30001c67:	add    BYTE PTR [eax+eax*1+0x20],ch
30001c6b:	add    BYTE PTR [edx+0x0],al
30001c6e:	popa   
30001c6f:	add    BYTE PTR [ebx+0x0],dh
30001c72:	imul   eax,DWORD PTR [eax],0x200063
30001c78:	inc    ebp
30001c79:	add    BYTE PTR [eax+0x0],bh
30001c7c:	jo     0x30001c7e
30001c7e:	jb     0x30001c80
30001c80:	add    BYTE PTR gs:[ebx+0x0],dh
30001c84:	jae    0x30001c86
	...
30001cb2:	add    BYTE PTR [eax],al
30001cb4:	aad    0x7
30001cb6:	add    BYTE PTR [eax],al
30001cb8:	aad    0x7
30001cba:	add    BYTE PTR [eax],al
30001cbc:	aad    0x7
30001cbe:	add    BYTE PTR [eax],al
30001cc0:	add    DWORD PTR [eax],eax
30001cc2:	add    BYTE PTR [eax],al
30001cc4:	add    BYTE PTR cs:[esi+0x0],dh
30001cc8:	bound  eax,QWORD PTR [eax]
30001cca:	jo     0x30001ccc
30001ccc:	jb     0x30001cce
30001cce:	outs   dx,DWORD PTR ds:[esi]
30001ccf:	add    BYTE PTR [edx+0x0],ch
30001cd2:	add    BYTE PTR [eax],al
30001cd4:	add    BYTE PTR [eax],al
30001cd6:	add    BYTE PTR [eax],al
30001cd8:	push   esi
30001cd9:	add    BYTE PTR [ecx+0x0],ch
30001cdc:	jae    0x30001cde
30001cde:	jne    0x30001ce0
30001ce0:	popa   
30001ce1:	add    BYTE PTR [eax+eax*1+0x20],ch
30001ce5:	add    BYTE PTR [ebx+0x0],al
30001ce8:	and    eax,DWORD PTR [eax]
30001cea:	and    BYTE PTR [eax],al
30001cec:	inc    ebp
30001ced:	add    BYTE PTR [eax+0x0],bh
30001cf0:	jo     0x30001cf2
30001cf2:	jb     0x30001cf4
30001cf4:	add    BYTE PTR gs:[ebx+0x0],dh
30001cf8:	jae    0x30001cfa
30001cfa:	and    BYTE PTR [eax],al
30001cfc:	xor    al,BYTE PTR [eax]
30001cfe:	xor    BYTE PTR [eax],al
30001d00:	xor    BYTE PTR [eax],al
30001d02:	xor    eax,0x0
	...
30001d33:	add    BYTE PTR [eax],al
30001d35:	add    BYTE PTR [esi+0x0],dl
30001d38:	imul   eax,DWORD PTR [eax],0x750073
30001d3e:	popa   
30001d3f:	add    BYTE PTR [eax+eax*1+0x20],ch
30001d43:	add    BYTE PTR [ebx+0x0],al
30001d46:	and    eax,DWORD PTR [eax]
30001d48:	and    BYTE PTR [eax],al
30001d4a:	inc    ebp
30001d4b:	add    BYTE PTR [eax+0x0],bh
30001d4e:	jo     0x30001d50
30001d50:	jb     0x30001d52
30001d52:	add    BYTE PTR gs:[ebx+0x0],dh
30001d56:	jae    0x30001d58
	...
30001d8c:	aad    0x7
30001d8e:	add    BYTE PTR [eax],al
30001d90:	aad    0x7
30001d92:	add    BYTE PTR [eax],al
30001d94:	aad    0x7
30001d96:	add    BYTE PTR [eax],al
30001d98:	add    DWORD PTR [eax],eax
30001d9a:	add    BYTE PTR [eax],al
30001d9c:	add    BYTE PTR cs:[ebx+0x0],ah
30001da0:	jae    0x30001da2
30001da2:	jo     0x30001da4
30001da4:	jb     0x30001da6
30001da6:	outs   dx,DWORD PTR ds:[esi]
30001da7:	add    BYTE PTR [edx+0x0],ch
30001daa:	add    BYTE PTR [eax],al
30001dac:	add    BYTE PTR [eax],al
30001dae:	add    BYTE PTR [eax],al
30001db0:	push   esi
30001db1:	add    BYTE PTR [ecx+0x0],ch
30001db4:	jae    0x30001db6
30001db6:	jne    0x30001db8
30001db8:	popa   
30001db9:	add    BYTE PTR [eax+eax*1+0x20],ch
30001dbd:	add    BYTE PTR [edx+0x0],cl
30001dc0:	and    eax,DWORD PTR [eax]
30001dc2:	and    BYTE PTR [eax],al
30001dc4:	inc    ebp
30001dc5:	add    BYTE PTR [eax+0x0],bh
30001dc8:	jo     0x30001dca
30001dca:	jb     0x30001dcc
30001dcc:	add    BYTE PTR gs:[ebx+0x0],dh
30001dd0:	jae    0x30001dd2
30001dd2:	and    BYTE PTR [eax],al
30001dd4:	xor    al,BYTE PTR [eax]
30001dd6:	xor    BYTE PTR [eax],al
30001dd8:	xor    BYTE PTR [eax],al
30001dda:	xor    eax,0x0
	...
30001e0b:	add    BYTE PTR [eax],al
30001e0d:	add    BYTE PTR [esi+0x0],dl
30001e10:	imul   eax,DWORD PTR [eax],0x750073
30001e16:	popa   
30001e17:	add    BYTE PTR [eax+eax*1+0x20],ch
30001e1b:	add    BYTE PTR [edx+0x0],cl
30001e1e:	and    eax,DWORD PTR [eax]
30001e20:	and    BYTE PTR [eax],al
30001e22:	inc    ebp
30001e23:	add    BYTE PTR [eax+0x0],bh
30001e26:	jo     0x30001e28
30001e28:	jb     0x30001e2a
30001e2a:	add    BYTE PTR gs:[ebx+0x0],dh
30001e2e:	jae    0x30001e30
	...
30001e64:	aad    0x7
30001e66:	add    BYTE PTR [eax],al
30001e68:	aad    0x7
30001e6a:	add    BYTE PTR [eax],al
30001e6c:	aad    0x7
30001e6e:	add    BYTE PTR [eax],al
30001e70:	add    DWORD PTR [eax],eax
30001e72:	add    BYTE PTR [eax],al
30001e74:	add    BYTE PTR cs:[esi+0x0],dh
30001e78:	push   0x0
30001e7a:	jae    0x30001e7c
30001e7c:	jo     0x30001e7e
30001e7e:	jb     0x30001e80
30001e80:	outs   dx,DWORD PTR ds:[esi]
30001e81:	add    BYTE PTR [edx+0x0],ch
30001e84:	add    BYTE PTR [eax],al
30001e86:	add    BYTE PTR [eax],al
30001e88:	push   esi
30001e89:	add    BYTE PTR [ecx+0x0],ch
30001e8c:	jae    0x30001e8e
30001e8e:	jne    0x30001e90
30001e90:	popa   
30001e91:	add    BYTE PTR [eax+eax*1+0x20],ch
30001e95:	add    BYTE PTR [ebx+0x0],al
30001e98:	sub    eax,DWORD PTR [eax]
30001e9a:	sub    eax,DWORD PTR [eax]
30001e9c:	and    BYTE PTR [eax],al
30001e9e:	inc    ebp
30001e9f:	add    BYTE PTR [eax+0x0],bh
30001ea2:	jo     0x30001ea4
30001ea4:	jb     0x30001ea6
30001ea6:	add    BYTE PTR gs:[ebx+0x0],dh
30001eaa:	jae    0x30001eac
30001eac:	and    BYTE PTR [eax],al
30001eae:	xor    al,BYTE PTR [eax]
30001eb0:	xor    BYTE PTR [eax],al
30001eb2:	xor    BYTE PTR [eax],al
30001eb4:	xor    eax,0x0
	...
30001ee5:	add    BYTE PTR [esi+0x0],dl
30001ee8:	imul   eax,DWORD PTR [eax],0x750073
30001eee:	popa   
30001eef:	add    BYTE PTR [eax+eax*1+0x20],ch
30001ef3:	add    BYTE PTR [ebx+0x0],al
30001ef6:	sub    eax,DWORD PTR [eax]
30001ef8:	sub    eax,DWORD PTR [eax]
30001efa:	and    BYTE PTR [eax],al
30001efc:	inc    ebp
30001efd:	add    BYTE PTR [eax+0x0],bh
30001f00:	jo     0x30001f02
30001f02:	jb     0x30001f04
30001f04:	add    BYTE PTR gs:[ebx+0x0],dh
30001f08:	jae    0x30001f0a
	...
30001f3a:	add    BYTE PTR [eax],al
30001f3c:	aad    0x7
30001f3e:	add    BYTE PTR [eax],al
30001f40:	aad    0x7
30001f42:	add    BYTE PTR [eax],al
30001f44:	aad    0x7
30001f46:	add    BYTE PTR [eax],al
30001f48:	add    DWORD PTR [eax],eax
30001f4a:	add    BYTE PTR [eax],al
30001f4c:	add    BYTE PTR cs:[esi+0x0],dh
30001f50:	arpl   WORD PTR [eax],ax
30001f52:	jo     0x30001f54
30001f54:	jb     0x30001f56
30001f56:	outs   dx,DWORD PTR ds:[esi]
30001f57:	add    BYTE PTR [edx+0x0],ch
30001f5a:	add    BYTE PTR [eax],al
30001f5c:	add    BYTE PTR [eax],al
30001f5e:	add    BYTE PTR [eax],al
30001f60:	push   esi
30001f61:	add    BYTE PTR [ecx+0x0],ch
30001f64:	jae    0x30001f66
30001f66:	jne    0x30001f68
30001f68:	popa   
30001f69:	add    BYTE PTR [eax+eax*1+0x20],ch
30001f6d:	add    BYTE PTR [edi+0x0],dl
30001f70:	add    BYTE PTR gs:[edx+0x0],ah
30001f74:	and    BYTE PTR [eax],al
30001f76:	inc    esp
30001f77:	add    BYTE PTR [ebp+0x0],ah
30001f7a:	jbe    0x30001f7c
30001f7c:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30001f81:	add    BYTE PTR [eax+0x0],dh
30001f84:	add    BYTE PTR gs:[edx+0x0],dh
30001f88:	and    BYTE PTR [eax],al
30001f8a:	inc    ebp
30001f8b:	add    BYTE PTR [eax+0x0],bh
30001f8e:	jo     0x30001f90
30001f90:	jb     0x30001f92
30001f92:	add    BYTE PTR gs:[ebx+0x0],dh
30001f96:	jae    0x30001f98
30001f98:	and    BYTE PTR [eax],al
30001f9a:	xor    al,BYTE PTR [eax]
30001f9c:	xor    BYTE PTR [eax],al
30001f9e:	xor    BYTE PTR [eax],al
30001fa0:	xor    eax,0x0
	...
30001fbd:	add    BYTE PTR [esi+0x0],dl
30001fc0:	imul   eax,DWORD PTR [eax],0x750073
30001fc6:	popa   
30001fc7:	add    BYTE PTR [eax+eax*1+0x20],ch
30001fcb:	add    BYTE PTR [edi+0x0],dl
30001fce:	add    BYTE PTR gs:[edx+0x0],ah
30001fd2:	and    BYTE PTR [eax],al
30001fd4:	inc    esp
30001fd5:	add    BYTE PTR [ebp+0x0],ah
30001fd8:	jbe    0x30001fda
30001fda:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30001fdf:	add    BYTE PTR [eax+0x0],dh
30001fe2:	add    BYTE PTR gs:[edx+0x0],dh
30001fe6:	and    BYTE PTR [eax],al
30001fe8:	inc    ebp
30001fe9:	add    BYTE PTR [eax+0x0],bh
30001fec:	jo     0x30001fee
30001fee:	jb     0x30001ff0
30001ff0:	add    BYTE PTR gs:[ebx+0x0],dh
30001ff4:	jae    0x30001ff6
	...
30002012:	add    BYTE PTR [eax],al
30002014:	aad    0x7
30002016:	add    BYTE PTR [eax],al
30002018:	aad    0x7
3000201a:	add    BYTE PTR [eax],al
3000201c:	aad    0x7
3000201e:	add    BYTE PTR [eax],al
30002020:	add    DWORD PTR [eax],eax
	...
30002036:	add    BYTE PTR [eax],al
30002038:	push   esi
30002039:	add    BYTE PTR [ecx+0x0],ch
3000203c:	jae    0x3000203e
3000203e:	jne    0x30002040
30002040:	popa   
30002041:	add    BYTE PTR [eax+eax*1+0x20],ch
30002045:	add    BYTE PTR [ebx+0x0],dl
30002048:	je     0x3000204a
3000204a:	jne    0x3000204c
3000204c:	add    BYTE PTR fs:[ecx+0x0],ch
30002050:	outs   dx,DWORD PTR ds:[esi]
30002051:	add    BYTE PTR [eax],ah
30002053:	add    BYTE PTR [edx],dh
30002055:	add    BYTE PTR [eax],dh
30002057:	add    BYTE PTR [eax],dh
30002059:	add    BYTE PTR ds:0x54002000,dh
3000205f:	add    BYTE PTR [edi+0x0],ch
30002062:	outs   dx,DWORD PTR ds:[esi]
30002063:	add    BYTE PTR [eax+eax*1+0x73],ch
30002067:	add    BYTE PTR [eax],ah
30002069:	add    BYTE PTR [esi+0x0],ah
3000206c:	outs   dx,DWORD PTR ds:[esi]
3000206d:	add    BYTE PTR [edx+0x0],dh
30002070:	and    BYTE PTR [eax],al
30002072:	inc    ecx
30002073:	add    BYTE PTR [eax+0x0],dh
30002076:	jo     0x30002078
30002078:	ins    BYTE PTR es:[edi],dx
30002079:	add    BYTE PTR [ecx+0x0],ch
3000207c:	arpl   WORD PTR [eax],ax
3000207e:	popa   
3000207f:	add    BYTE PTR [eax+eax*1+0x69],dh
30002083:	add    BYTE PTR [edi+0x0],ch
30002086:	outs   dx,BYTE PTR ds:[esi]
30002087:	add    BYTE PTR [ebx+0x0],dh
	...
30002096:	push   esi
30002097:	add    BYTE PTR [ecx+0x0],ch
3000209a:	jae    0x3000209c
3000209c:	jne    0x3000209e
3000209e:	popa   
3000209f:	add    BYTE PTR [eax+eax*1+0x20],ch
300020a3:	add    BYTE PTR [ebx+0x0],dl
300020a6:	je     0x300020a8
300020a8:	jne    0x300020aa
300020aa:	add    BYTE PTR fs:[ecx+0x0],ch
300020ae:	outs   dx,DWORD PTR ds:[esi]
300020af:	add    BYTE PTR [eax],ah
300020b1:	add    BYTE PTR [eax+eax*1+0x6f],dl
300020b5:	add    BYTE PTR [edi+0x0],ch
300020b8:	ins    BYTE PTR es:[edi],dx
300020b9:	add    BYTE PTR [ebx+0x0],dh
300020bc:	and    BYTE PTR [eax],al
300020be:	data16 add BYTE PTR [edi+0x0],ch
300020c2:	jb     0x300020c4
300020c4:	and    BYTE PTR [eax],al
300020c6:	inc    ecx
300020c7:	add    BYTE PTR [eax+0x0],dh
300020ca:	jo     0x300020cc
300020cc:	ins    BYTE PTR es:[edi],dx
300020cd:	add    BYTE PTR [ecx+0x0],ch
300020d0:	arpl   WORD PTR [eax],ax
300020d2:	popa   
300020d3:	add    BYTE PTR [eax+eax*1+0x69],dh
300020d7:	add    BYTE PTR [edi+0x0],ch
300020da:	outs   dx,BYTE PTR ds:[esi]
300020db:	add    BYTE PTR [ebx+0x0],dh
	...
300020ea:	add    BYTE PTR [eax],al
300020ec:	aad    0x7
300020ee:	add    BYTE PTR [eax],al
300020f0:	aad    0x7
300020f2:	add    BYTE PTR [eax],al
300020f4:	aad    0x7
300020f6:	add    BYTE PTR [eax],al
300020f8:	add    DWORD PTR [eax],eax
	...
3000210e:	add    BYTE PTR [eax],al
30002110:	push   esi
30002111:	add    BYTE PTR [ecx+0x0],ch
30002114:	jae    0x30002116
30002116:	jne    0x30002118
30002118:	popa   
30002119:	add    BYTE PTR [eax+eax*1+0x20],ch
3000211d:	add    BYTE PTR [ebx+0x0],dl
30002120:	je     0x30002122
30002122:	jne    0x30002124
30002124:	add    BYTE PTR fs:[ecx+0x0],ch
30002128:	outs   dx,DWORD PTR ds:[esi]
30002129:	add    BYTE PTR [eax],ah
3000212b:	add    BYTE PTR [edx],dh
3000212d:	add    BYTE PTR [eax],dh
3000212f:	add    BYTE PTR [eax],dh
30002131:	add    BYTE PTR [eax],bh
	...
3000216b:	add    BYTE PTR [eax],al
3000216d:	add    BYTE PTR [esi+0x0],dl
30002170:	imul   eax,DWORD PTR [eax],0x750073
30002176:	popa   
30002177:	add    BYTE PTR [eax+eax*1+0x20],ch
3000217b:	add    BYTE PTR [ebx+0x0],dl
3000217e:	je     0x30002180
30002180:	jne    0x30002182
30002182:	add    BYTE PTR fs:[ecx+0x0],ch
30002186:	outs   dx,DWORD PTR ds:[esi]
	...
300021c3:	add    al,bl
300021c5:	pop    es
300021c6:	add    BYTE PTR [eax],al
300021c8:	fadd   DWORD PTR [edi]
300021ca:	add    BYTE PTR [eax],al
300021cc:	fadd   DWORD PTR [edi]
	...
300021e6:	add    BYTE PTR [eax],al
300021e8:	push   esi
300021e9:	add    BYTE PTR [ecx+0x0],ch
300021ec:	jae    0x300021ee
300021ee:	jne    0x300021f0
300021f0:	popa   
300021f1:	add    BYTE PTR [eax+eax*1+0x20],ch
300021f5:	add    BYTE PTR [edx+0x0],al
300021f8:	popa   
300021f9:	add    BYTE PTR [ebx+0x0],dh
300021fc:	imul   eax,DWORD PTR [eax],0x200063
30002202:	inc    ebp
30002203:	add    BYTE PTR [eax+0x0],bh
30002206:	jo     0x30002208
30002208:	jb     0x3000220a
3000220a:	add    BYTE PTR gs:[ebx+0x0],dh
3000220e:	jae    0x30002210
30002210:	and    BYTE PTR [eax],al
30002212:	xor    al,BYTE PTR [eax]
30002214:	xor    BYTE PTR [eax],al
30002216:	xor    BYTE PTR [eax],al
30002218:	cmp    BYTE PTR [eax],al
	...
30002246:	push   esi
30002247:	add    BYTE PTR [ecx+0x0],ch
3000224a:	jae    0x3000224c
3000224c:	jne    0x3000224e
3000224e:	popa   
3000224f:	add    BYTE PTR [eax+eax*1+0x20],ch
30002253:	add    BYTE PTR [edx+0x0],al
30002256:	popa   
30002257:	add    BYTE PTR [ebx+0x0],dh
3000225a:	imul   eax,DWORD PTR [eax],0x200063
30002260:	inc    ebp
30002261:	add    BYTE PTR [eax+0x0],bh
30002264:	jo     0x30002266
30002266:	jb     0x30002268
30002268:	add    BYTE PTR gs:[ebx+0x0],dh
3000226c:	jae    0x3000226e
	...
3000229a:	add    BYTE PTR [eax],al
3000229c:	fadd   DWORD PTR [edi]
3000229e:	add    BYTE PTR [eax],al
300022a0:	fadd   DWORD PTR [edi]
300022a2:	add    BYTE PTR [eax],al
300022a4:	fadd   DWORD PTR [edi]
300022a6:	add    BYTE PTR [eax],al
300022a8:	add    DWORD PTR [eax],eax
300022aa:	add    BYTE PTR [eax],al
300022ac:	add    BYTE PTR cs:[esi+0x0],dh
300022b0:	bound  eax,QWORD PTR [eax]
300022b2:	jo     0x300022b4
300022b4:	jb     0x300022b6
300022b6:	outs   dx,DWORD PTR ds:[esi]
300022b7:	add    BYTE PTR [edx+0x0],ch
300022ba:	add    BYTE PTR [eax],al
300022bc:	add    BYTE PTR [eax],al
300022be:	add    BYTE PTR [eax],al
300022c0:	push   esi
300022c1:	add    BYTE PTR [ecx+0x0],ch
300022c4:	jae    0x300022c6
300022c6:	jne    0x300022c8
300022c8:	popa   
300022c9:	add    BYTE PTR [eax+eax*1+0x20],ch
300022cd:	add    BYTE PTR [ebx+0x0],al
300022d0:	and    eax,DWORD PTR [eax]
300022d2:	and    BYTE PTR [eax],al
300022d4:	inc    ebp
300022d5:	add    BYTE PTR [eax+0x0],bh
300022d8:	jo     0x300022da
300022da:	jb     0x300022dc
300022dc:	add    BYTE PTR gs:[ebx+0x0],dh
300022e0:	jae    0x300022e2
300022e2:	and    BYTE PTR [eax],al
300022e4:	xor    al,BYTE PTR [eax]
300022e6:	xor    BYTE PTR [eax],al
300022e8:	xor    BYTE PTR [eax],al
300022ea:	cmp    BYTE PTR [eax],al
	...
3000231c:	add    BYTE PTR [eax],al
3000231e:	push   esi
3000231f:	add    BYTE PTR [ecx+0x0],ch
30002322:	jae    0x30002324
30002324:	jne    0x30002326
30002326:	popa   
30002327:	add    BYTE PTR [eax+eax*1+0x20],ch
3000232b:	add    BYTE PTR [ebx+0x0],al
3000232e:	and    eax,DWORD PTR [eax]
30002330:	and    BYTE PTR [eax],al
30002332:	inc    ebp
30002333:	add    BYTE PTR [eax+0x0],bh
30002336:	jo     0x30002338
30002338:	jb     0x3000233a
3000233a:	add    BYTE PTR gs:[ebx+0x0],dh
3000233e:	jae    0x30002340
	...
30002374:	fadd   DWORD PTR [edi]
30002376:	add    BYTE PTR [eax],al
30002378:	fadd   DWORD PTR [edi]
3000237a:	add    BYTE PTR [eax],al
3000237c:	fadd   DWORD PTR [edi]
3000237e:	add    BYTE PTR [eax],al
30002380:	add    DWORD PTR [eax],eax
30002382:	add    BYTE PTR [eax],al
30002384:	add    BYTE PTR cs:[ebx+0x0],ah
30002388:	jae    0x3000238a
3000238a:	jo     0x3000238c
3000238c:	jb     0x3000238e
3000238e:	outs   dx,DWORD PTR ds:[esi]
3000238f:	add    BYTE PTR [edx+0x0],ch
30002392:	add    BYTE PTR [eax],al
30002394:	add    BYTE PTR [eax],al
30002396:	add    BYTE PTR [eax],al
30002398:	push   esi
30002399:	add    BYTE PTR [ecx+0x0],ch
3000239c:	jae    0x3000239e
3000239e:	jne    0x300023a0
300023a0:	popa   
300023a1:	add    BYTE PTR [eax+eax*1+0x20],ch
300023a5:	add    BYTE PTR [edx+0x0],cl
300023a8:	and    eax,DWORD PTR [eax]
300023aa:	and    BYTE PTR [eax],al
300023ac:	inc    ebp
300023ad:	add    BYTE PTR [eax+0x0],bh
300023b0:	jo     0x300023b2
300023b2:	jb     0x300023b4
300023b4:	add    BYTE PTR gs:[ebx+0x0],dh
300023b8:	jae    0x300023ba
300023ba:	and    BYTE PTR [eax],al
300023bc:	xor    al,BYTE PTR [eax]
300023be:	xor    BYTE PTR [eax],al
300023c0:	xor    BYTE PTR [eax],al
300023c2:	cmp    BYTE PTR [eax],al
	...
300023f4:	add    BYTE PTR [eax],al
300023f6:	push   esi
300023f7:	add    BYTE PTR [ecx+0x0],ch
300023fa:	jae    0x300023fc
300023fc:	jne    0x300023fe
300023fe:	popa   
300023ff:	add    BYTE PTR [eax+eax*1+0x20],ch
30002403:	add    BYTE PTR [edx+0x0],cl
30002406:	and    eax,DWORD PTR [eax]
30002408:	and    BYTE PTR [eax],al
3000240a:	inc    ebp
3000240b:	add    BYTE PTR [eax+0x0],bh
3000240e:	jo     0x30002410
30002410:	jb     0x30002412
30002412:	add    BYTE PTR gs:[ebx+0x0],dh
30002416:	jae    0x30002418
	...
3000244c:	fadd   DWORD PTR [edi]
3000244e:	add    BYTE PTR [eax],al
30002450:	fadd   DWORD PTR [edi]
30002452:	add    BYTE PTR [eax],al
30002454:	fadd   DWORD PTR [edi]
30002456:	add    BYTE PTR [eax],al
30002458:	add    DWORD PTR [eax],eax
3000245a:	add    BYTE PTR [eax],al
3000245c:	add    BYTE PTR cs:[esi+0x0],dh
30002460:	push   0x0
30002462:	jae    0x30002464
30002464:	jo     0x30002466
30002466:	jb     0x30002468
30002468:	outs   dx,DWORD PTR ds:[esi]
30002469:	add    BYTE PTR [edx+0x0],ch
3000246c:	add    BYTE PTR [eax],al
3000246e:	add    BYTE PTR [eax],al
30002470:	push   esi
30002471:	add    BYTE PTR [ecx+0x0],ch
30002474:	jae    0x30002476
30002476:	jne    0x30002478
30002478:	popa   
30002479:	add    BYTE PTR [eax+eax*1+0x20],ch
3000247d:	add    BYTE PTR [ebx+0x0],al
30002480:	sub    eax,DWORD PTR [eax]
30002482:	sub    eax,DWORD PTR [eax]
30002484:	and    BYTE PTR [eax],al
30002486:	inc    ebp
30002487:	add    BYTE PTR [eax+0x0],bh
3000248a:	jo     0x3000248c
3000248c:	jb     0x3000248e
3000248e:	add    BYTE PTR gs:[ebx+0x0],dh
30002492:	jae    0x30002494
30002494:	and    BYTE PTR [eax],al
30002496:	xor    al,BYTE PTR [eax]
30002498:	xor    BYTE PTR [eax],al
3000249a:	xor    BYTE PTR [eax],al
3000249c:	cmp    BYTE PTR [eax],al
	...
300024ce:	push   esi
300024cf:	add    BYTE PTR [ecx+0x0],ch
300024d2:	jae    0x300024d4
300024d4:	jne    0x300024d6
300024d6:	popa   
300024d7:	add    BYTE PTR [eax+eax*1+0x20],ch
300024db:	add    BYTE PTR [ebx+0x0],al
300024de:	sub    eax,DWORD PTR [eax]
300024e0:	sub    eax,DWORD PTR [eax]
300024e2:	and    BYTE PTR [eax],al
300024e4:	inc    ebp
300024e5:	add    BYTE PTR [eax+0x0],bh
300024e8:	jo     0x300024ea
300024ea:	jb     0x300024ec
300024ec:	add    BYTE PTR gs:[ebx+0x0],dh
300024f0:	jae    0x300024f2
	...
30002522:	add    BYTE PTR [eax],al
30002524:	fadd   DWORD PTR [edi]
30002526:	add    BYTE PTR [eax],al
30002528:	fadd   DWORD PTR [edi]
3000252a:	add    BYTE PTR [eax],al
3000252c:	fadd   DWORD PTR [edi]
3000252e:	add    BYTE PTR [eax],al
30002530:	add    DWORD PTR [eax],eax
30002532:	add    BYTE PTR [eax],al
30002534:	add    BYTE PTR cs:[esi+0x0],dh
30002538:	arpl   WORD PTR [eax],ax
3000253a:	jo     0x3000253c
3000253c:	jb     0x3000253e
3000253e:	outs   dx,DWORD PTR ds:[esi]
3000253f:	add    BYTE PTR [edx+0x0],ch
30002542:	add    BYTE PTR [eax],al
30002544:	add    BYTE PTR [eax],al
30002546:	add    BYTE PTR [eax],al
30002548:	push   esi
30002549:	add    BYTE PTR [ecx+0x0],ch
3000254c:	jae    0x3000254e
3000254e:	jne    0x30002550
30002550:	popa   
30002551:	add    BYTE PTR [eax+eax*1+0x20],ch
30002555:	add    BYTE PTR [edi+0x0],dl
30002558:	add    BYTE PTR gs:[edx+0x0],ah
3000255c:	and    BYTE PTR [eax],al
3000255e:	inc    esp
3000255f:	add    BYTE PTR [ebp+0x0],ah
30002562:	jbe    0x30002564
30002564:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30002569:	add    BYTE PTR [eax+0x0],dh
3000256c:	add    BYTE PTR gs:[edx+0x0],dh
30002570:	and    BYTE PTR [eax],al
30002572:	inc    ebp
30002573:	add    BYTE PTR [eax+0x0],bh
30002576:	jo     0x30002578
30002578:	jb     0x3000257a
3000257a:	add    BYTE PTR gs:[ebx+0x0],dh
3000257e:	jae    0x30002580
30002580:	and    BYTE PTR [eax],al
30002582:	xor    al,BYTE PTR [eax]
30002584:	xor    BYTE PTR [eax],al
30002586:	xor    BYTE PTR [eax],al
30002588:	cmp    BYTE PTR [eax],al
	...
300025a6:	push   esi
300025a7:	add    BYTE PTR [ecx+0x0],ch
300025aa:	jae    0x300025ac
300025ac:	jne    0x300025ae
300025ae:	popa   
300025af:	add    BYTE PTR [eax+eax*1+0x20],ch
300025b3:	add    BYTE PTR [edi+0x0],dl
300025b6:	add    BYTE PTR gs:[edx+0x0],ah
300025ba:	and    BYTE PTR [eax],al
300025bc:	inc    esp
300025bd:	add    BYTE PTR [ebp+0x0],ah
300025c0:	jbe    0x300025c2
300025c2:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
300025c7:	add    BYTE PTR [eax+0x0],dh
300025ca:	add    BYTE PTR gs:[edx+0x0],dh
300025ce:	and    BYTE PTR [eax],al
300025d0:	inc    ebp
300025d1:	add    BYTE PTR [eax+0x0],bh
300025d4:	jo     0x300025d6
300025d6:	jb     0x300025d8
300025d8:	add    BYTE PTR gs:[ebx+0x0],dh
300025dc:	jae    0x300025de
	...
300025fa:	add    BYTE PTR [eax],al
300025fc:	fadd   DWORD PTR [edi]
300025fe:	add    BYTE PTR [eax],al
30002600:	fadd   DWORD PTR [edi]
30002602:	add    BYTE PTR [eax],al
30002604:	fadd   DWORD PTR [edi]
30002606:	add    BYTE PTR [eax],al
30002608:	add    DWORD PTR [eax],eax
	...
3000261e:	add    BYTE PTR [eax],al
30002620:	push   esi
30002621:	add    BYTE PTR [ecx+0x0],ch
30002624:	jae    0x30002626
30002626:	jne    0x30002628
30002628:	popa   
30002629:	add    BYTE PTR [eax+eax*1+0x20],ch
3000262d:	add    BYTE PTR [ebx+0x0],dl
30002630:	je     0x30002632
30002632:	jne    0x30002634
30002634:	add    BYTE PTR fs:[ecx+0x0],ch
30002638:	outs   dx,DWORD PTR ds:[esi]
30002639:	add    BYTE PTR [eax],ah
3000263b:	add    BYTE PTR [edx],dh
3000263d:	add    BYTE PTR [eax],dh
3000263f:	add    BYTE PTR [eax],dh
30002641:	add    BYTE PTR [eax],bh
30002643:	add    BYTE PTR [eax],ah
30002645:	add    BYTE PTR [eax+eax*1+0x6f],dl
30002649:	add    BYTE PTR [edi+0x0],ch
3000264c:	ins    BYTE PTR es:[edi],dx
3000264d:	add    BYTE PTR [ebx+0x0],dh
30002650:	and    BYTE PTR [eax],al
30002652:	data16 add BYTE PTR [edi+0x0],ch
30002656:	jb     0x30002658
30002658:	and    BYTE PTR [eax],al
3000265a:	inc    ecx
3000265b:	add    BYTE PTR [eax+0x0],dh
3000265e:	jo     0x30002660
30002660:	ins    BYTE PTR es:[edi],dx
30002661:	add    BYTE PTR [ecx+0x0],ch
30002664:	arpl   WORD PTR [eax],ax
30002666:	popa   
30002667:	add    BYTE PTR [eax+eax*1+0x69],dh
3000266b:	add    BYTE PTR [edi+0x0],ch
3000266e:	outs   dx,BYTE PTR ds:[esi]
3000266f:	add    BYTE PTR [ebx+0x0],dh
	...
3000267e:	push   esi
3000267f:	add    BYTE PTR [ecx+0x0],ch
30002682:	jae    0x30002684
30002684:	jne    0x30002686
30002686:	popa   
30002687:	add    BYTE PTR [eax+eax*1+0x20],ch
3000268b:	add    BYTE PTR [ebx+0x0],dl
3000268e:	je     0x30002690
30002690:	jne    0x30002692
30002692:	add    BYTE PTR fs:[ecx+0x0],ch
30002696:	outs   dx,DWORD PTR ds:[esi]
30002697:	add    BYTE PTR [eax],ah
30002699:	add    BYTE PTR [eax+eax*1+0x6f],dl
3000269d:	add    BYTE PTR [edi+0x0],ch
300026a0:	ins    BYTE PTR es:[edi],dx
300026a1:	add    BYTE PTR [ebx+0x0],dh
300026a4:	and    BYTE PTR [eax],al
300026a6:	data16 add BYTE PTR [edi+0x0],ch
300026aa:	jb     0x300026ac
300026ac:	and    BYTE PTR [eax],al
300026ae:	inc    ecx
300026af:	add    BYTE PTR [eax+0x0],dh
300026b2:	jo     0x300026b4
300026b4:	ins    BYTE PTR es:[edi],dx
300026b5:	add    BYTE PTR [ecx+0x0],ch
300026b8:	arpl   WORD PTR [eax],ax
300026ba:	popa   
300026bb:	add    BYTE PTR [eax+eax*1+0x69],dh
300026bf:	add    BYTE PTR [edi+0x0],ch
300026c2:	outs   dx,BYTE PTR ds:[esi]
300026c3:	add    BYTE PTR [ebx+0x0],dh
	...
300026d2:	add    BYTE PTR [eax],al
300026d4:	fadd   DWORD PTR [edi]
300026d6:	add    BYTE PTR [eax],al
300026d8:	fadd   DWORD PTR [edi]
300026da:	add    BYTE PTR [eax],al
300026dc:	fadd   DWORD PTR [edi]
300026de:	add    BYTE PTR [eax],al
300026e0:	add    DWORD PTR [eax],eax
	...
300026f6:	add    BYTE PTR [eax],al
300026f8:	push   edx
300026f9:	add    BYTE PTR [ecx+0x0],ah
300026fc:	jae    0x300026fe
300026fe:	arpl   WORD PTR [eax],ax
30002700:	popa   
30002701:	add    BYTE PTR [eax+eax*1+0x20],ch
30002705:	add    BYTE PTR [eax],ch
30002707:	add    BYTE PTR [edx],dh
30002709:	add    BYTE PTR [eax],dh
3000270b:	add    BYTE PTR [eax],dh
3000270d:	add    BYTE PTR [eax],bh
3000270f:	add    BYTE PTR [eax],ah
30002711:	add    BYTE PTR [esi+0x0],dl
30002714:	add    BYTE PTR gs:[edx+0x0],dh
30002718:	jae    0x3000271a
3000271a:	imul   eax,DWORD PTR [eax],0x6e006f
30002720:	sub    DWORD PTR [eax],eax
	...
30002756:	push   edx
30002757:	add    BYTE PTR [ecx+0x0],ah
3000275a:	jae    0x3000275c
3000275c:	arpl   WORD PTR [eax],ax
3000275e:	popa   
3000275f:	add    BYTE PTR [eax+eax*1+0x20],ch
30002763:	add    BYTE PTR [eax],ch
30002765:	add    BYTE PTR [edx],dh
30002767:	add    BYTE PTR [eax],dh
30002769:	add    BYTE PTR [eax],dh
3000276b:	add    BYTE PTR [eax],bh
3000276d:	add    BYTE PTR [eax],ah
3000276f:	add    BYTE PTR [esi+0x0],dl
30002772:	add    BYTE PTR gs:[edx+0x0],dh
30002776:	jae    0x30002778
30002778:	imul   eax,DWORD PTR [eax],0x6e006f
3000277e:	sub    DWORD PTR [eax],eax
	...
300027ac:	fadd   DWORD PTR [edi]
300027ae:	add    BYTE PTR [eax],al
300027b0:	fadd   DWORD PTR [edi]
300027b2:	add    BYTE PTR [eax],al
300027b4:	fadd   DWORD PTR [edi]
300027b6:	add    BYTE PTR [eax],al
300027b8:	add    DWORD PTR [eax],eax
	...
300027ce:	add    BYTE PTR [eax],al
300027d0:	push   esi
300027d1:	add    BYTE PTR [ecx+0x0],ch
300027d4:	jae    0x300027d6
300027d6:	jne    0x300027d8
300027d8:	popa   
300027d9:	add    BYTE PTR [eax+eax*1+0x20],ch
300027dd:	add    BYTE PTR [ebx+0x0],dl
300027e0:	je     0x300027e2
300027e2:	jne    0x300027e4
300027e4:	add    BYTE PTR fs:[ecx+0x0],ch
300027e8:	outs   dx,DWORD PTR ds:[esi]
300027e9:	add    BYTE PTR [eax],ah
300027eb:	add    BYTE PTR [edx],dh
300027ed:	add    BYTE PTR [eax],dh
300027ef:	add    BYTE PTR [ecx],dh
300027f1:	add    BYTE PTR [eax],dh
	...
3000282b:	add    BYTE PTR [eax],al
3000282d:	add    BYTE PTR [esi+0x0],dl
30002830:	imul   eax,DWORD PTR [eax],0x750073
30002836:	popa   
30002837:	add    BYTE PTR [eax+eax*1+0x20],ch
3000283b:	add    BYTE PTR [ebx+0x0],dl
3000283e:	je     0x30002840
30002840:	jne    0x30002842
30002842:	add    BYTE PTR fs:[ecx+0x0],ch
30002846:	outs   dx,DWORD PTR ds:[esi]
	...
30002883:	add    dl,bl
30002885:	pop    es
30002886:	add    BYTE PTR [eax],al
30002888:	fiadd  DWORD PTR [edi]
3000288a:	add    BYTE PTR [eax],al
3000288c:	fadd   QWORD PTR [edi]
	...
300028a6:	add    BYTE PTR [eax],al
300028a8:	push   esi
300028a9:	add    BYTE PTR [ecx+0x0],ch
300028ac:	jae    0x300028ae
300028ae:	jne    0x300028b0
300028b0:	popa   
300028b1:	add    BYTE PTR [eax+eax*1+0x20],ch
300028b5:	add    BYTE PTR [edx+0x0],al
300028b8:	popa   
300028b9:	add    BYTE PTR [ebx+0x0],dh
300028bc:	imul   eax,DWORD PTR [eax],0x200063
300028c2:	inc    ebp
300028c3:	add    BYTE PTR [eax+0x0],bh
300028c6:	jo     0x300028c8
300028c8:	jb     0x300028ca
300028ca:	add    BYTE PTR gs:[ebx+0x0],dh
300028ce:	jae    0x300028d0
300028d0:	and    BYTE PTR [eax],al
300028d2:	xor    al,BYTE PTR [eax]
300028d4:	xor    BYTE PTR [eax],al
300028d6:	xor    DWORD PTR [eax],eax
300028d8:	xor    BYTE PTR [eax],al
	...
30002906:	push   esi
30002907:	add    BYTE PTR [ecx+0x0],ch
3000290a:	jae    0x3000290c
3000290c:	jne    0x3000290e
3000290e:	popa   
3000290f:	add    BYTE PTR [eax+eax*1+0x20],ch
30002913:	add    BYTE PTR [edx+0x0],al
30002916:	popa   
30002917:	add    BYTE PTR [ebx+0x0],dh
3000291a:	imul   eax,DWORD PTR [eax],0x200063
30002920:	inc    ebp
30002921:	add    BYTE PTR [eax+0x0],bh
30002924:	jo     0x30002926
30002926:	jb     0x30002928
30002928:	add    BYTE PTR gs:[ebx+0x0],dh
3000292c:	jae    0x3000292e
	...
3000295a:	add    BYTE PTR [eax],al
3000295c:	fiadd  DWORD PTR [edi]
3000295e:	add    BYTE PTR [eax],al
30002960:	fiadd  DWORD PTR [edi]
30002962:	add    BYTE PTR [eax],al
30002964:	fadd   QWORD PTR [edi]
30002966:	add    BYTE PTR [eax],al
30002968:	add    DWORD PTR [eax],eax
3000296a:	add    BYTE PTR [eax],al
3000296c:	add    BYTE PTR cs:[esi+0x0],dh
30002970:	bound  eax,QWORD PTR [eax]
30002972:	jo     0x30002974
30002974:	jb     0x30002976
30002976:	outs   dx,DWORD PTR ds:[esi]
30002977:	add    BYTE PTR [edx+0x0],ch
3000297a:	add    BYTE PTR [eax],al
3000297c:	add    BYTE PTR [eax],al
3000297e:	add    BYTE PTR [eax],al
30002980:	push   esi
30002981:	add    BYTE PTR [ecx+0x0],ch
30002984:	jae    0x30002986
30002986:	jne    0x30002988
30002988:	popa   
30002989:	add    BYTE PTR [eax+eax*1+0x20],ch
3000298d:	add    BYTE PTR [ebx+0x0],al
30002990:	and    eax,DWORD PTR [eax]
30002992:	and    BYTE PTR [eax],al
30002994:	inc    ebp
30002995:	add    BYTE PTR [eax+0x0],bh
30002998:	jo     0x3000299a
3000299a:	jb     0x3000299c
3000299c:	add    BYTE PTR gs:[ebx+0x0],dh
300029a0:	jae    0x300029a2
300029a2:	and    BYTE PTR [eax],al
300029a4:	xor    al,BYTE PTR [eax]
300029a6:	xor    BYTE PTR [eax],al
300029a8:	xor    DWORD PTR [eax],eax
300029aa:	xor    BYTE PTR [eax],al
	...
300029dc:	add    BYTE PTR [eax],al
300029de:	push   esi
300029df:	add    BYTE PTR [ecx+0x0],ch
300029e2:	jae    0x300029e4
300029e4:	jne    0x300029e6
300029e6:	popa   
300029e7:	add    BYTE PTR [eax+eax*1+0x20],ch
300029eb:	add    BYTE PTR [ebx+0x0],al
300029ee:	and    eax,DWORD PTR [eax]
300029f0:	and    BYTE PTR [eax],al
300029f2:	inc    ebp
300029f3:	add    BYTE PTR [eax+0x0],bh
300029f6:	jo     0x300029f8
300029f8:	jb     0x300029fa
300029fa:	add    BYTE PTR gs:[ebx+0x0],dh
300029fe:	jae    0x30002a00
	...
30002a34:	fiadd  DWORD PTR [edi]
30002a36:	add    BYTE PTR [eax],al
30002a38:	fiadd  DWORD PTR [edi]
30002a3a:	add    BYTE PTR [eax],al
30002a3c:	fadd   QWORD PTR [edi]
30002a3e:	add    BYTE PTR [eax],al
30002a40:	add    DWORD PTR [eax],eax
30002a42:	add    BYTE PTR [eax],al
30002a44:	add    BYTE PTR cs:[ebx+0x0],ah
30002a48:	jae    0x30002a4a
30002a4a:	jo     0x30002a4c
30002a4c:	jb     0x30002a4e
30002a4e:	outs   dx,DWORD PTR ds:[esi]
30002a4f:	add    BYTE PTR [edx+0x0],ch
30002a52:	add    BYTE PTR [eax],al
30002a54:	add    BYTE PTR [eax],al
30002a56:	add    BYTE PTR [eax],al
30002a58:	push   esi
30002a59:	add    BYTE PTR [ecx+0x0],ch
30002a5c:	jae    0x30002a5e
30002a5e:	jne    0x30002a60
30002a60:	popa   
30002a61:	add    BYTE PTR [eax+eax*1+0x20],ch
30002a65:	add    BYTE PTR [ebx+0x0],al
30002a68:	sub    eax,DWORD PTR [eax]
30002a6a:	sub    eax,DWORD PTR [eax]
30002a6c:	and    BYTE PTR [eax],al
30002a6e:	inc    ebp
30002a6f:	add    BYTE PTR [eax+0x0],bh
30002a72:	jo     0x30002a74
30002a74:	jb     0x30002a76
30002a76:	add    BYTE PTR gs:[ebx+0x0],dh
30002a7a:	jae    0x30002a7c
30002a7c:	and    BYTE PTR [eax],al
30002a7e:	xor    al,BYTE PTR [eax]
30002a80:	xor    BYTE PTR [eax],al
30002a82:	xor    DWORD PTR [eax],eax
30002a84:	xor    BYTE PTR [eax],al
	...
30002ab6:	push   esi
30002ab7:	add    BYTE PTR [ecx+0x0],ch
30002aba:	jae    0x30002abc
30002abc:	jne    0x30002abe
30002abe:	popa   
30002abf:	add    BYTE PTR [eax+eax*1+0x20],ch
30002ac3:	add    BYTE PTR [ebx+0x0],al
30002ac6:	sub    eax,DWORD PTR [eax]
30002ac8:	sub    eax,DWORD PTR [eax]
30002aca:	and    BYTE PTR [eax],al
30002acc:	inc    ebp
30002acd:	add    BYTE PTR [eax+0x0],bh
30002ad0:	jo     0x30002ad2
30002ad2:	jb     0x30002ad4
30002ad4:	add    BYTE PTR gs:[ebx+0x0],dh
30002ad8:	jae    0x30002ada
	...
30002b0a:	add    BYTE PTR [eax],al
30002b0c:	fiadd  DWORD PTR [edi]
30002b0e:	add    BYTE PTR [eax],al
30002b10:	fiadd  DWORD PTR [edi]
30002b12:	add    BYTE PTR [eax],al
30002b14:	fadd   QWORD PTR [edi]
30002b16:	add    BYTE PTR [eax],al
30002b18:	add    DWORD PTR [eax],eax
30002b1a:	add    BYTE PTR [eax],al
30002b1c:	add    BYTE PTR cs:[esi+0x0],dh
30002b20:	arpl   WORD PTR [eax],ax
30002b22:	jo     0x30002b24
30002b24:	jb     0x30002b26
30002b26:	outs   dx,DWORD PTR ds:[esi]
30002b27:	add    BYTE PTR [edx+0x0],ch
30002b2a:	add    BYTE PTR [eax],al
30002b2c:	add    BYTE PTR [eax],al
30002b2e:	add    BYTE PTR [eax],al
30002b30:	push   esi
30002b31:	add    BYTE PTR [ecx+0x0],ch
30002b34:	jae    0x30002b36
30002b36:	jne    0x30002b38
30002b38:	popa   
30002b39:	add    BYTE PTR [eax+eax*1+0x20],ch
30002b3d:	add    BYTE PTR [edi+0x0],dl
30002b40:	add    BYTE PTR gs:[edx+0x0],ah
30002b44:	and    BYTE PTR [eax],al
30002b46:	inc    esp
30002b47:	add    BYTE PTR [ebp+0x0],ah
30002b4a:	jbe    0x30002b4c
30002b4c:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30002b51:	add    BYTE PTR [eax+0x0],dh
30002b54:	add    BYTE PTR gs:[edx+0x0],dh
30002b58:	and    BYTE PTR [eax],al
30002b5a:	inc    ebp
30002b5b:	add    BYTE PTR [eax+0x0],bh
30002b5e:	jo     0x30002b60
30002b60:	jb     0x30002b62
30002b62:	add    BYTE PTR gs:[ebx+0x0],dh
30002b66:	jae    0x30002b68
30002b68:	and    BYTE PTR [eax],al
30002b6a:	xor    al,BYTE PTR [eax]
30002b6c:	xor    BYTE PTR [eax],al
30002b6e:	xor    DWORD PTR [eax],eax
30002b70:	xor    BYTE PTR [eax],al
	...
30002b8e:	push   esi
30002b8f:	add    BYTE PTR [ecx+0x0],ch
30002b92:	jae    0x30002b94
30002b94:	jne    0x30002b96
30002b96:	popa   
30002b97:	add    BYTE PTR [eax+eax*1+0x20],ch
30002b9b:	add    BYTE PTR [edi+0x0],dl
30002b9e:	add    BYTE PTR gs:[edx+0x0],ah
30002ba2:	and    BYTE PTR [eax],al
30002ba4:	inc    esp
30002ba5:	add    BYTE PTR [ebp+0x0],ah
30002ba8:	jbe    0x30002baa
30002baa:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30002baf:	add    BYTE PTR [eax+0x0],dh
30002bb2:	add    BYTE PTR gs:[edx+0x0],dh
30002bb6:	and    BYTE PTR [eax],al
30002bb8:	inc    ebp
30002bb9:	add    BYTE PTR [eax+0x0],bh
30002bbc:	jo     0x30002bbe
30002bbe:	jb     0x30002bc0
30002bc0:	add    BYTE PTR gs:[ebx+0x0],dh
30002bc4:	jae    0x30002bc6
	...
30002be2:	add    BYTE PTR [eax],al
30002be4:	fiadd  DWORD PTR [edi]
30002be6:	add    BYTE PTR [eax],al
30002be8:	fiadd  DWORD PTR [edi]
30002bea:	add    BYTE PTR [eax],al
30002bec:	fadd   QWORD PTR [edi]
30002bee:	add    BYTE PTR [eax],al
30002bf0:	add    DWORD PTR [eax],eax
	...
30002c06:	add    BYTE PTR [eax],al
30002c08:	push   esi
30002c09:	add    BYTE PTR [ecx+0x0],ch
30002c0c:	jae    0x30002c0e
30002c0e:	jne    0x30002c10
30002c10:	popa   
30002c11:	add    BYTE PTR [eax+eax*1+0x20],ch
30002c15:	add    BYTE PTR [ebx+0x0],dl
30002c18:	je     0x30002c1a
30002c1a:	jne    0x30002c1c
30002c1c:	add    BYTE PTR fs:[ecx+0x0],ch
30002c20:	outs   dx,DWORD PTR ds:[esi]
30002c21:	add    BYTE PTR [eax],ah
30002c23:	add    BYTE PTR [edx],dh
30002c25:	add    BYTE PTR [eax],dh
30002c27:	add    BYTE PTR [ecx],dh
30002c29:	add    BYTE PTR [eax],dh
30002c2b:	add    BYTE PTR [eax],ah
30002c2d:	add    BYTE PTR [eax+eax*1+0x6f],dl
30002c31:	add    BYTE PTR [edi+0x0],ch
30002c34:	ins    BYTE PTR es:[edi],dx
30002c35:	add    BYTE PTR [ebx+0x0],dh
30002c38:	and    BYTE PTR [eax],al
30002c3a:	data16 add BYTE PTR [edi+0x0],ch
30002c3e:	jb     0x30002c40
30002c40:	and    BYTE PTR [eax],al
30002c42:	inc    ecx
30002c43:	add    BYTE PTR [eax+0x0],dh
30002c46:	jo     0x30002c48
30002c48:	ins    BYTE PTR es:[edi],dx
30002c49:	add    BYTE PTR [ecx+0x0],ch
30002c4c:	arpl   WORD PTR [eax],ax
30002c4e:	popa   
30002c4f:	add    BYTE PTR [eax+eax*1+0x69],dh
30002c53:	add    BYTE PTR [edi+0x0],ch
30002c56:	outs   dx,BYTE PTR ds:[esi]
30002c57:	add    BYTE PTR [ebx+0x0],dh
	...
30002c66:	push   esi
30002c67:	add    BYTE PTR [ecx+0x0],ch
30002c6a:	jae    0x30002c6c
30002c6c:	jne    0x30002c6e
30002c6e:	popa   
30002c6f:	add    BYTE PTR [eax+eax*1+0x20],ch
30002c73:	add    BYTE PTR [ebx+0x0],dl
30002c76:	je     0x30002c78
30002c78:	jne    0x30002c7a
30002c7a:	add    BYTE PTR fs:[ecx+0x0],ch
30002c7e:	outs   dx,DWORD PTR ds:[esi]
30002c7f:	add    BYTE PTR [eax],ah
30002c81:	add    BYTE PTR [eax+eax*1+0x6f],dl
30002c85:	add    BYTE PTR [edi+0x0],ch
30002c88:	ins    BYTE PTR es:[edi],dx
30002c89:	add    BYTE PTR [ebx+0x0],dh
30002c8c:	and    BYTE PTR [eax],al
30002c8e:	data16 add BYTE PTR [edi+0x0],ch
30002c92:	jb     0x30002c94
30002c94:	and    BYTE PTR [eax],al
30002c96:	inc    ecx
30002c97:	add    BYTE PTR [eax+0x0],dh
30002c9a:	jo     0x30002c9c
30002c9c:	ins    BYTE PTR es:[edi],dx
30002c9d:	add    BYTE PTR [ecx+0x0],ch
30002ca0:	arpl   WORD PTR [eax],ax
30002ca2:	popa   
30002ca3:	add    BYTE PTR [eax+eax*1+0x69],dh
30002ca7:	add    BYTE PTR [edi+0x0],ch
30002caa:	outs   dx,BYTE PTR ds:[esi]
30002cab:	add    BYTE PTR [ebx+0x0],dh
	...
30002cba:	add    BYTE PTR [eax],al
30002cbc:	fiadd  DWORD PTR [edi]
30002cbe:	add    BYTE PTR [eax],al
30002cc0:	fiadd  DWORD PTR [edi]
30002cc2:	add    BYTE PTR [eax],al
30002cc4:	fadd   QWORD PTR [edi]
30002cc6:	add    BYTE PTR [eax],al
30002cc8:	add    DWORD PTR [eax],eax
	...
30002cde:	add    BYTE PTR [eax],al
30002ce0:	push   edx
30002ce1:	add    BYTE PTR [ecx+0x0],ah
30002ce4:	jae    0x30002ce6
30002ce6:	arpl   WORD PTR [eax],ax
30002ce8:	popa   
30002ce9:	add    BYTE PTR [eax+eax*1+0x20],ch
30002ced:	add    BYTE PTR [eax],ch
30002cef:	add    BYTE PTR [edx],dh
30002cf1:	add    BYTE PTR [eax],dh
30002cf3:	add    BYTE PTR [ecx],dh
30002cf5:	add    BYTE PTR [eax],dh
30002cf7:	add    BYTE PTR [eax],ah
30002cf9:	add    BYTE PTR [esi+0x0],dl
30002cfc:	add    BYTE PTR gs:[edx+0x0],dh
30002d00:	jae    0x30002d02
30002d02:	imul   eax,DWORD PTR [eax],0x6e006f
30002d08:	sub    DWORD PTR [eax],eax
	...
30002d3e:	push   edx
30002d3f:	add    BYTE PTR [ecx+0x0],ah
30002d42:	jae    0x30002d44
30002d44:	arpl   WORD PTR [eax],ax
30002d46:	popa   
30002d47:	add    BYTE PTR [eax+eax*1+0x20],ch
30002d4b:	add    BYTE PTR [eax],ch
30002d4d:	add    BYTE PTR [edx],dh
30002d4f:	add    BYTE PTR [eax],dh
30002d51:	add    BYTE PTR [ecx],dh
30002d53:	add    BYTE PTR [eax],dh
30002d55:	add    BYTE PTR [eax],ah
30002d57:	add    BYTE PTR [esi+0x0],dl
30002d5a:	add    BYTE PTR gs:[edx+0x0],dh
30002d5e:	jae    0x30002d60
30002d60:	imul   eax,DWORD PTR [eax],0x6e006f
30002d66:	sub    DWORD PTR [eax],eax
	...
30002d94:	fiadd  DWORD PTR [edi]
30002d96:	add    BYTE PTR [eax],al
30002d98:	fiadd  DWORD PTR [edi]
30002d9a:	add    BYTE PTR [eax],al
30002d9c:	fadd   QWORD PTR [edi]
30002d9e:	add    BYTE PTR [eax],al
30002da0:	add    DWORD PTR [eax],eax
	...
30002db6:	add    BYTE PTR [eax],al
30002db8:	push   esi
30002db9:	add    BYTE PTR [ecx+0x0],ch
30002dbc:	jae    0x30002dbe
30002dbe:	jne    0x30002dc0
30002dc0:	popa   
30002dc1:	add    BYTE PTR [eax+eax*1+0x20],ch
30002dc5:	add    BYTE PTR [ebx+0x0],dl
30002dc8:	je     0x30002dca
30002dca:	jne    0x30002dcc
30002dcc:	add    BYTE PTR fs:[ecx+0x0],ch
30002dd0:	outs   dx,DWORD PTR ds:[esi]
30002dd1:	add    BYTE PTR [eax],ah
30002dd3:	add    BYTE PTR [ecx],dh
30002dd5:	add    BYTE PTR [eax],dh
	...
30002e13:	add    BYTE PTR [eax],al
30002e15:	add    BYTE PTR [esi+0x0],dl
30002e18:	imul   eax,DWORD PTR [eax],0x750073
30002e1e:	popa   
30002e1f:	add    BYTE PTR [eax+eax*1+0x20],ch
30002e23:	add    BYTE PTR [ebx+0x0],dl
30002e26:	je     0x30002e28
30002e28:	jne    0x30002e2a
30002e2a:	add    BYTE PTR fs:[ecx+0x0],ch
30002e2e:	outs   dx,DWORD PTR ds:[esi]
	...
30002e6b:	add    dl,bl
30002e6d:	pop    es
30002e6e:	add    BYTE PTR [eax],al
30002e70:	fiadd  DWORD PTR [edi]
30002e72:	add    BYTE PTR [eax],al
30002e74:	fadd   QWORD PTR [edi]
	...
30002e8e:	add    BYTE PTR [eax],al
30002e90:	push   esi
30002e91:	add    BYTE PTR [ecx+0x0],ch
30002e94:	jae    0x30002e96
30002e96:	jne    0x30002e98
30002e98:	popa   
30002e99:	add    BYTE PTR [eax+eax*1+0x20],ch
30002e9d:	add    BYTE PTR [edx+0x0],al
30002ea0:	popa   
30002ea1:	add    BYTE PTR [ebx+0x0],dh
30002ea4:	imul   eax,DWORD PTR [eax],0x200063
30002eaa:	inc    ebp
30002eab:	add    BYTE PTR [eax+0x0],bh
30002eae:	jo     0x30002eb0
30002eb0:	jb     0x30002eb2
30002eb2:	add    BYTE PTR gs:[ebx+0x0],dh
30002eb6:	jae    0x30002eb8
30002eb8:	and    BYTE PTR [eax],al
30002eba:	xor    DWORD PTR [eax],eax
30002ebc:	xor    BYTE PTR [eax],al
	...
30002eee:	push   esi
30002eef:	add    BYTE PTR [ecx+0x0],ch
30002ef2:	jae    0x30002ef4
30002ef4:	jne    0x30002ef6
30002ef6:	popa   
30002ef7:	add    BYTE PTR [eax+eax*1+0x20],ch
30002efb:	add    BYTE PTR [edx+0x0],al
30002efe:	popa   
30002eff:	add    BYTE PTR [ebx+0x0],dh
30002f02:	imul   eax,DWORD PTR [eax],0x200063
30002f08:	inc    ebp
30002f09:	add    BYTE PTR [eax+0x0],bh
30002f0c:	jo     0x30002f0e
30002f0e:	jb     0x30002f10
30002f10:	add    BYTE PTR gs:[ebx+0x0],dh
30002f14:	jae    0x30002f16
	...
30002f42:	add    BYTE PTR [eax],al
30002f44:	fiadd  DWORD PTR [edi]
30002f46:	add    BYTE PTR [eax],al
30002f48:	fiadd  DWORD PTR [edi]
30002f4a:	add    BYTE PTR [eax],al
30002f4c:	fadd   QWORD PTR [edi]
30002f4e:	add    BYTE PTR [eax],al
30002f50:	add    DWORD PTR [eax],eax
30002f52:	add    BYTE PTR [eax],al
30002f54:	add    BYTE PTR cs:[esi+0x0],dh
30002f58:	bound  eax,QWORD PTR [eax]
30002f5a:	jo     0x30002f5c
30002f5c:	jb     0x30002f5e
30002f5e:	outs   dx,DWORD PTR ds:[esi]
30002f5f:	add    BYTE PTR [edx+0x0],ch
30002f62:	add    BYTE PTR [eax],al
30002f64:	add    BYTE PTR [eax],al
30002f66:	add    BYTE PTR [eax],al
30002f68:	push   esi
30002f69:	add    BYTE PTR [ecx+0x0],ch
30002f6c:	jae    0x30002f6e
30002f6e:	jne    0x30002f70
30002f70:	popa   
30002f71:	add    BYTE PTR [eax+eax*1+0x20],ch
30002f75:	add    BYTE PTR [ebx+0x0],al
30002f78:	and    eax,DWORD PTR [eax]
30002f7a:	and    BYTE PTR [eax],al
30002f7c:	inc    ebp
30002f7d:	add    BYTE PTR [eax+0x0],bh
30002f80:	jo     0x30002f82
30002f82:	jb     0x30002f84
30002f84:	add    BYTE PTR gs:[ebx+0x0],dh
30002f88:	jae    0x30002f8a
30002f8a:	and    BYTE PTR [eax],al
30002f8c:	xor    DWORD PTR [eax],eax
30002f8e:	xor    BYTE PTR [eax],al
	...
30002fc4:	add    BYTE PTR [eax],al
30002fc6:	push   esi
30002fc7:	add    BYTE PTR [ecx+0x0],ch
30002fca:	jae    0x30002fcc
30002fcc:	jne    0x30002fce
30002fce:	popa   
30002fcf:	add    BYTE PTR [eax+eax*1+0x20],ch
30002fd3:	add    BYTE PTR [ebx+0x0],al
30002fd6:	and    eax,DWORD PTR [eax]
30002fd8:	and    BYTE PTR [eax],al
30002fda:	inc    ebp
30002fdb:	add    BYTE PTR [eax+0x0],bh
30002fde:	jo     0x30002fe0
30002fe0:	jb     0x30002fe2
30002fe2:	add    BYTE PTR gs:[ebx+0x0],dh
30002fe6:	jae    0x30002fe8
	...
3000301c:	fiadd  DWORD PTR [edi]
3000301e:	add    BYTE PTR [eax],al
30003020:	fiadd  DWORD PTR [edi]
30003022:	add    BYTE PTR [eax],al
30003024:	fadd   QWORD PTR [edi]
30003026:	add    BYTE PTR [eax],al
30003028:	add    DWORD PTR [eax],eax
3000302a:	add    BYTE PTR [eax],al
3000302c:	add    BYTE PTR cs:[ebx+0x0],ah
30003030:	jae    0x30003032
30003032:	jo     0x30003034
30003034:	jb     0x30003036
30003036:	outs   dx,DWORD PTR ds:[esi]
30003037:	add    BYTE PTR [edx+0x0],ch
3000303a:	add    BYTE PTR [eax],al
3000303c:	add    BYTE PTR [eax],al
3000303e:	add    BYTE PTR [eax],al
30003040:	push   esi
30003041:	add    BYTE PTR [ecx+0x0],ch
30003044:	jae    0x30003046
30003046:	jne    0x30003048
30003048:	popa   
30003049:	add    BYTE PTR [eax+eax*1+0x20],ch
3000304d:	add    BYTE PTR [ebx+0x0],al
30003050:	sub    eax,DWORD PTR [eax]
30003052:	sub    eax,DWORD PTR [eax]
30003054:	and    BYTE PTR [eax],al
30003056:	inc    ebp
30003057:	add    BYTE PTR [eax+0x0],bh
3000305a:	jo     0x3000305c
3000305c:	jb     0x3000305e
3000305e:	add    BYTE PTR gs:[ebx+0x0],dh
30003062:	jae    0x30003064
30003064:	and    BYTE PTR [eax],al
30003066:	xor    DWORD PTR [eax],eax
30003068:	xor    BYTE PTR [eax],al
	...
3000309e:	push   esi
3000309f:	add    BYTE PTR [ecx+0x0],ch
300030a2:	jae    0x300030a4
300030a4:	jne    0x300030a6
300030a6:	popa   
300030a7:	add    BYTE PTR [eax+eax*1+0x20],ch
300030ab:	add    BYTE PTR [ebx+0x0],al
300030ae:	sub    eax,DWORD PTR [eax]
300030b0:	sub    eax,DWORD PTR [eax]
300030b2:	and    BYTE PTR [eax],al
300030b4:	inc    ebp
300030b5:	add    BYTE PTR [eax+0x0],bh
300030b8:	jo     0x300030ba
300030ba:	jb     0x300030bc
300030bc:	add    BYTE PTR gs:[ebx+0x0],dh
300030c0:	jae    0x300030c2
	...
300030f2:	add    BYTE PTR [eax],al
300030f4:	fiadd  DWORD PTR [edi]
300030f6:	add    BYTE PTR [eax],al
300030f8:	fiadd  DWORD PTR [edi]
300030fa:	add    BYTE PTR [eax],al
300030fc:	fadd   QWORD PTR [edi]
300030fe:	add    BYTE PTR [eax],al
30003100:	add    DWORD PTR [eax],eax
30003102:	add    BYTE PTR [eax],al
30003104:	add    BYTE PTR cs:[esi+0x0],dh
30003108:	arpl   WORD PTR [eax],ax
3000310a:	jo     0x3000310c
3000310c:	jb     0x3000310e
3000310e:	outs   dx,DWORD PTR ds:[esi]
3000310f:	add    BYTE PTR [edx+0x0],ch
30003112:	add    BYTE PTR [eax],al
30003114:	add    BYTE PTR [eax],al
30003116:	add    BYTE PTR [eax],al
30003118:	push   esi
30003119:	add    BYTE PTR [ecx+0x0],ch
3000311c:	jae    0x3000311e
3000311e:	jne    0x30003120
30003120:	popa   
30003121:	add    BYTE PTR [eax+eax*1+0x20],ch
30003125:	add    BYTE PTR [edi+0x0],dl
30003128:	add    BYTE PTR gs:[edx+0x0],ah
3000312c:	and    BYTE PTR [eax],al
3000312e:	inc    esp
3000312f:	add    BYTE PTR [ebp+0x0],ah
30003132:	jbe    0x30003134
30003134:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30003139:	add    BYTE PTR [eax+0x0],dh
3000313c:	add    BYTE PTR gs:[edx+0x0],dh
30003140:	and    BYTE PTR [eax],al
30003142:	inc    ebp
30003143:	add    BYTE PTR [eax+0x0],bh
30003146:	jo     0x30003148
30003148:	jb     0x3000314a
3000314a:	add    BYTE PTR gs:[ebx+0x0],dh
3000314e:	jae    0x30003150
30003150:	and    BYTE PTR [eax],al
30003152:	xor    DWORD PTR [eax],eax
30003154:	xor    BYTE PTR [eax],al
	...
30003176:	push   esi
30003177:	add    BYTE PTR [ecx+0x0],ch
3000317a:	jae    0x3000317c
3000317c:	jne    0x3000317e
3000317e:	popa   
3000317f:	add    BYTE PTR [eax+eax*1+0x20],ch
30003183:	add    BYTE PTR [edi+0x0],dl
30003186:	add    BYTE PTR gs:[edx+0x0],ah
3000318a:	and    BYTE PTR [eax],al
3000318c:	inc    esp
3000318d:	add    BYTE PTR [ebp+0x0],ah
30003190:	jbe    0x30003192
30003192:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30003197:	add    BYTE PTR [eax+0x0],dh
3000319a:	add    BYTE PTR gs:[edx+0x0],dh
3000319e:	and    BYTE PTR [eax],al
300031a0:	inc    ebp
300031a1:	add    BYTE PTR [eax+0x0],bh
300031a4:	jo     0x300031a6
300031a6:	jb     0x300031a8
300031a8:	add    BYTE PTR gs:[ebx+0x0],dh
300031ac:	jae    0x300031ae
	...
300031ca:	add    BYTE PTR [eax],al
300031cc:	fiadd  DWORD PTR [edi]
300031ce:	add    BYTE PTR [eax],al
300031d0:	fiadd  DWORD PTR [edi]
300031d2:	add    BYTE PTR [eax],al
300031d4:	fadd   QWORD PTR [edi]
300031d6:	add    BYTE PTR [eax],al
300031d8:	add    DWORD PTR [eax],eax
	...
300031ee:	add    BYTE PTR [eax],al
300031f0:	push   esi
300031f1:	add    BYTE PTR [ecx+0x0],ch
300031f4:	jae    0x300031f6
300031f6:	jne    0x300031f8
300031f8:	popa   
300031f9:	add    BYTE PTR [eax+eax*1+0x20],ch
300031fd:	add    BYTE PTR [ebx+0x0],dl
30003200:	je     0x30003202
30003202:	jne    0x30003204
30003204:	add    BYTE PTR fs:[ecx+0x0],ch
30003208:	outs   dx,DWORD PTR ds:[esi]
30003209:	add    BYTE PTR [eax],ah
3000320b:	add    BYTE PTR [ecx],dh
3000320d:	add    BYTE PTR [eax],dh
3000320f:	add    BYTE PTR [eax],ah
30003211:	add    BYTE PTR [eax+eax*1+0x6f],dl
30003215:	add    BYTE PTR [edi+0x0],ch
30003218:	ins    BYTE PTR es:[edi],dx
30003219:	add    BYTE PTR [ebx+0x0],dh
3000321c:	and    BYTE PTR [eax],al
3000321e:	data16 add BYTE PTR [edi+0x0],ch
30003222:	jb     0x30003224
30003224:	and    BYTE PTR [eax],al
30003226:	inc    ecx
30003227:	add    BYTE PTR [eax+0x0],dh
3000322a:	jo     0x3000322c
3000322c:	ins    BYTE PTR es:[edi],dx
3000322d:	add    BYTE PTR [ecx+0x0],ch
30003230:	arpl   WORD PTR [eax],ax
30003232:	popa   
30003233:	add    BYTE PTR [eax+eax*1+0x69],dh
30003237:	add    BYTE PTR [edi+0x0],ch
3000323a:	outs   dx,BYTE PTR ds:[esi]
3000323b:	add    BYTE PTR [ebx+0x0],dh
	...
3000324e:	push   esi
3000324f:	add    BYTE PTR [ecx+0x0],ch
30003252:	jae    0x30003254
30003254:	jne    0x30003256
30003256:	popa   
30003257:	add    BYTE PTR [eax+eax*1+0x20],ch
3000325b:	add    BYTE PTR [ebx+0x0],dl
3000325e:	je     0x30003260
30003260:	jne    0x30003262
30003262:	add    BYTE PTR fs:[ecx+0x0],ch
30003266:	outs   dx,DWORD PTR ds:[esi]
30003267:	add    BYTE PTR [eax],ah
30003269:	add    BYTE PTR [eax+eax*1+0x6f],dl
3000326d:	add    BYTE PTR [edi+0x0],ch
30003270:	ins    BYTE PTR es:[edi],dx
30003271:	add    BYTE PTR [ebx+0x0],dh
30003274:	and    BYTE PTR [eax],al
30003276:	data16 add BYTE PTR [edi+0x0],ch
3000327a:	jb     0x3000327c
3000327c:	and    BYTE PTR [eax],al
3000327e:	inc    ecx
3000327f:	add    BYTE PTR [eax+0x0],dh
30003282:	jo     0x30003284
30003284:	ins    BYTE PTR es:[edi],dx
30003285:	add    BYTE PTR [ecx+0x0],ch
30003288:	arpl   WORD PTR [eax],ax
3000328a:	popa   
3000328b:	add    BYTE PTR [eax+eax*1+0x69],dh
3000328f:	add    BYTE PTR [edi+0x0],ch
30003292:	outs   dx,BYTE PTR ds:[esi]
30003293:	add    BYTE PTR [ebx+0x0],dh
	...
300032a2:	add    BYTE PTR [eax],al
300032a4:	fiadd  DWORD PTR [edi]
300032a6:	add    BYTE PTR [eax],al
300032a8:	fiadd  DWORD PTR [edi]
300032aa:	add    BYTE PTR [eax],al
300032ac:	fadd   QWORD PTR [edi]
300032ae:	add    BYTE PTR [eax],al
300032b0:	add    DWORD PTR [eax],eax
	...
300032c6:	add    BYTE PTR [eax],al
300032c8:	push   edx
300032c9:	add    BYTE PTR [ecx+0x0],ah
300032cc:	jae    0x300032ce
300032ce:	arpl   WORD PTR [eax],ax
300032d0:	popa   
300032d1:	add    BYTE PTR [eax+eax*1+0x20],ch
300032d5:	add    BYTE PTR [eax],ch
300032d7:	add    BYTE PTR [esi+0x0],dl
300032da:	add    BYTE PTR gs:[edx+0x0],dh
300032de:	jae    0x300032e0
300032e0:	imul   eax,DWORD PTR [eax],0x6e006f
300032e6:	and    BYTE PTR [eax],al
300032e8:	xor    DWORD PTR [eax],eax
300032ea:	xor    BYTE PTR [eax],al
300032ec:	sub    DWORD PTR [eax],eax
	...
30003326:	push   edx
30003327:	add    BYTE PTR [ecx+0x0],ah
3000332a:	jae    0x3000332c
3000332c:	arpl   WORD PTR [eax],ax
3000332e:	popa   
3000332f:	add    BYTE PTR [eax+eax*1+0x20],ch
30003333:	add    BYTE PTR [eax],ch
30003335:	add    BYTE PTR [esi+0x0],dl
30003338:	add    BYTE PTR gs:[edx+0x0],dh
3000333c:	jae    0x3000333e
3000333e:	imul   eax,DWORD PTR [eax],0x6e006f
30003344:	and    BYTE PTR [eax],al
30003346:	xor    DWORD PTR [eax],eax
30003348:	xor    BYTE PTR [eax],al
3000334a:	sub    DWORD PTR [eax],eax
	...
3000337c:	fiadd  DWORD PTR [edi]
3000337e:	add    BYTE PTR [eax],al
30003380:	fiadd  DWORD PTR [edi]
30003382:	add    BYTE PTR [eax],al
30003384:	fadd   QWORD PTR [edi]
30003386:	add    BYTE PTR [eax],al
30003388:	add    DWORD PTR [eax],eax
	...
3000339e:	add    BYTE PTR [eax],al
300033a0:	push   esi
300033a1:	add    BYTE PTR [ecx+0x0],ch
300033a4:	jae    0x300033a6
300033a6:	jne    0x300033a8
300033a8:	popa   
300033a9:	add    BYTE PTR [eax+eax*1+0x20],ch
300033ad:	add    BYTE PTR [ebx+0x0],dl
300033b0:	je     0x300033b2
300033b2:	jne    0x300033b4
300033b4:	add    BYTE PTR fs:[ecx+0x0],ch
300033b8:	outs   dx,DWORD PTR ds:[esi]
300033b9:	add    BYTE PTR [eax],ah
300033bb:	add    BYTE PTR [edx],dh
300033bd:	add    BYTE PTR [eax],dh
300033bf:	add    BYTE PTR [ecx],dh
300033c1:	add    BYTE PTR [eax],dh
300033c3:	add    BYTE PTR [eax],ah
300033c5:	add    BYTE PTR [ebp+0x0],al
300033c8:	js     0x300033ca
300033ca:	jo     0x300033cc
300033cc:	jb     0x300033ce
300033ce:	add    BYTE PTR gs:[ebx+0x0],dh
300033d2:	jae    0x300033d4
300033d4:	and    BYTE PTR [eax],al
300033d6:	data16 add BYTE PTR [edi+0x0],ch
300033da:	jb     0x300033dc
300033dc:	and    BYTE PTR [eax],al
300033de:	push   edi
300033df:	add    BYTE PTR [ecx+0x0],ch
300033e2:	outs   dx,BYTE PTR ds:[esi]
300033e3:	add    BYTE PTR [eax+eax*1+0x6f],ah
300033e7:	add    BYTE PTR [edi+0x0],dh
300033ea:	jae    0x300033ec
300033ec:	and    BYTE PTR [eax],al
300033ee:	push   eax
300033ef:	add    BYTE PTR [eax+0x0],ch
300033f2:	outs   dx,DWORD PTR ds:[esi]
300033f3:	add    BYTE PTR [esi+0x0],ch
300033f6:	add    BYTE PTR gs:[eax],al
300033f9:	add    BYTE PTR [eax],al
300033fb:	add    BYTE PTR [eax],al
300033fd:	add    BYTE PTR [esi+0x0],dl
30003400:	imul   eax,DWORD PTR [eax],0x750073
30003406:	popa   
30003407:	add    BYTE PTR [eax+eax*1+0x20],ch
3000340b:	add    BYTE PTR [ebx+0x0],dl
3000340e:	je     0x30003410
30003410:	jne    0x30003412
30003412:	add    BYTE PTR fs:[ecx+0x0],ch
30003416:	outs   dx,DWORD PTR ds:[esi]
30003417:	add    BYTE PTR [eax],ah
30003419:	add    BYTE PTR [ebp+0x0],al
3000341c:	js     0x3000341e
3000341e:	jo     0x30003420
30003420:	jb     0x30003422
30003422:	add    BYTE PTR gs:[ebx+0x0],dh
30003426:	jae    0x30003428
30003428:	and    BYTE PTR [eax],al
3000342a:	data16 add BYTE PTR [edi+0x0],ch
3000342e:	jb     0x30003430
30003430:	and    BYTE PTR [eax],al
30003432:	push   edi
30003433:	add    BYTE PTR [ecx+0x0],ch
30003436:	outs   dx,BYTE PTR ds:[esi]
30003437:	add    BYTE PTR [eax+eax*1+0x6f],ah
3000343b:	add    BYTE PTR [edi+0x0],dh
3000343e:	jae    0x30003440
30003440:	and    BYTE PTR [eax],al
30003442:	push   eax
30003443:	add    BYTE PTR [eax+0x0],ch
30003446:	outs   dx,DWORD PTR ds:[esi]
30003447:	add    BYTE PTR [esi+0x0],ch
3000344a:	add    BYTE PTR gs:[eax],al
3000344d:	add    BYTE PTR [eax],al
3000344f:	add    BYTE PTR [eax],al
30003451:	add    BYTE PTR [eax],al
30003453:	add    dl,bl
30003455:	pop    es
30003456:	add    BYTE PTR [eax],al
30003458:	fiadd  DWORD PTR [edi]
3000345a:	add    BYTE PTR [eax],al
3000345c:	fadd   QWORD PTR [edi]
3000345e:	add    BYTE PTR [eax],al
30003460:	add    DWORD PTR [eax],eax
	...
30003476:	add    BYTE PTR [eax],al
30003478:	push   esi
30003479:	add    BYTE PTR [ecx+0x0],ch
3000347c:	jae    0x3000347e
3000347e:	jne    0x30003480
30003480:	popa   
30003481:	add    BYTE PTR [eax+eax*1+0x20],ch
30003485:	add    BYTE PTR [ebx+0x0],dl
30003488:	je     0x3000348a
3000348a:	jne    0x3000348c
3000348c:	add    BYTE PTR fs:[ecx+0x0],ch
30003490:	outs   dx,DWORD PTR ds:[esi]
30003491:	add    BYTE PTR [eax],ah
30003493:	add    BYTE PTR [ecx],dh
30003495:	add    BYTE PTR [ecx],dh
	...
300034d3:	add    BYTE PTR [eax],al
300034d5:	add    BYTE PTR [esi+0x0],dl
300034d8:	imul   eax,DWORD PTR [eax],0x750073
300034de:	popa   
300034df:	add    BYTE PTR [eax+eax*1+0x20],ch
300034e3:	add    BYTE PTR [ebx+0x0],dl
300034e6:	je     0x300034e8
300034e8:	jne    0x300034ea
300034ea:	add    BYTE PTR fs:[ecx+0x0],ch
300034ee:	outs   dx,DWORD PTR ds:[esi]
	...
3000352b:	add    ah,bl
3000352d:	pop    es
3000352e:	add    BYTE PTR [eax],al
30003530:	fiadd  DWORD PTR [edi]
30003532:	add    BYTE PTR [eax],al
30003534:	fadd   QWORD PTR [edi]
	...
3000354e:	add    BYTE PTR [eax],al
30003550:	push   esi
30003551:	add    BYTE PTR [ecx+0x0],ch
30003554:	jae    0x30003556
30003556:	jne    0x30003558
30003558:	popa   
30003559:	add    BYTE PTR [eax+eax*1+0x20],ch
3000355d:	add    BYTE PTR [edi+0x0],dl
30003560:	add    BYTE PTR gs:[edx+0x0],ah
30003564:	and    BYTE PTR [eax],al
30003566:	inc    esp
30003567:	add    BYTE PTR [ebp+0x0],ah
3000356a:	jbe    0x3000356c
3000356c:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30003571:	add    BYTE PTR [eax+0x0],dh
30003574:	add    BYTE PTR gs:[edx+0x0],dh
30003578:	and    BYTE PTR [eax],al
3000357a:	inc    ebp
3000357b:	add    BYTE PTR [eax+0x0],bh
3000357e:	jo     0x30003580
30003580:	jb     0x30003582
30003582:	add    BYTE PTR gs:[ebx+0x0],dh
30003586:	jae    0x30003588
30003588:	and    BYTE PTR [eax],al
3000358a:	xor    DWORD PTR [eax],eax
3000358c:	xor    DWORD PTR [eax],eax
	...
300035ae:	push   esi
300035af:	add    BYTE PTR [ecx+0x0],ch
300035b2:	jae    0x300035b4
300035b4:	jne    0x300035b6
300035b6:	popa   
300035b7:	add    BYTE PTR [eax+eax*1+0x20],ch
300035bb:	add    BYTE PTR [edi+0x0],dl
300035be:	add    BYTE PTR gs:[edx+0x0],ah
300035c2:	and    BYTE PTR [eax],al
300035c4:	inc    esp
300035c5:	add    BYTE PTR [ebp+0x0],ah
300035c8:	jbe    0x300035ca
300035ca:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
300035cf:	add    BYTE PTR [eax+0x0],dh
300035d2:	add    BYTE PTR gs:[edx+0x0],dh
300035d6:	and    BYTE PTR [eax],al
300035d8:	inc    ebp
300035d9:	add    BYTE PTR [eax+0x0],bh
300035dc:	jo     0x300035de
300035de:	jb     0x300035e0
300035e0:	add    BYTE PTR gs:[ebx+0x0],dh
300035e4:	jae    0x300035e6
	...
30003602:	add    BYTE PTR [eax],al
30003604:	fadd   QWORD PTR [edi]
30003606:	add    BYTE PTR [eax],al
30003608:	fiadd  DWORD PTR [edi]
3000360a:	add    BYTE PTR [eax],al
3000360c:	fadd   QWORD PTR [edi]
3000360e:	add    BYTE PTR [eax],al
30003610:	add    DWORD PTR [eax],eax
	...
30003626:	add    BYTE PTR [eax],al
30003628:	push   edx
30003629:	add    BYTE PTR [ecx+0x0],ah
3000362c:	jae    0x3000362e
3000362e:	arpl   WORD PTR [eax],ax
30003630:	popa   
30003631:	add    BYTE PTR [eax+eax*1+0x20],ch
30003635:	add    BYTE PTR [eax],ch
30003637:	add    BYTE PTR [esi+0x0],dl
3000363a:	add    BYTE PTR gs:[edx+0x0],dh
3000363e:	jae    0x30003640
30003640:	imul   eax,DWORD PTR [eax],0x6e006f
30003646:	and    BYTE PTR [eax],al
30003648:	xor    DWORD PTR [eax],eax
3000364a:	xor    DWORD PTR [eax],eax
3000364c:	sub    DWORD PTR [eax],eax
	...
30003686:	push   edx
30003687:	add    BYTE PTR [ecx+0x0],ah
3000368a:	jae    0x3000368c
3000368c:	arpl   WORD PTR [eax],ax
3000368e:	popa   
3000368f:	add    BYTE PTR [eax+eax*1+0x20],ch
30003693:	add    BYTE PTR [eax],ch
30003695:	add    BYTE PTR [esi+0x0],dl
30003698:	add    BYTE PTR gs:[edx+0x0],dh
3000369c:	jae    0x3000369e
3000369e:	imul   eax,DWORD PTR [eax],0x6e006f
300036a4:	and    BYTE PTR [eax],al
300036a6:	xor    DWORD PTR [eax],eax
300036a8:	xor    DWORD PTR [eax],eax
300036aa:	sub    DWORD PTR [eax],eax
	...
300036dc:	fadd   QWORD PTR [edi]
300036de:	add    BYTE PTR [eax],al
300036e0:	fiadd  DWORD PTR [edi]
300036e2:	add    BYTE PTR [eax],al
300036e4:	fadd   QWORD PTR [edi]
300036e6:	add    BYTE PTR [eax],al
300036e8:	add    DWORD PTR [eax],eax
	...
300036fe:	add    BYTE PTR [eax],al
30003700:	push   esi
30003701:	add    BYTE PTR [ecx+0x0],ch
30003704:	jae    0x30003706
30003706:	jne    0x30003708
30003708:	popa   
30003709:	add    BYTE PTR [eax+eax*1+0x20],ch
3000370d:	add    BYTE PTR [ebx+0x0],dl
30003710:	je     0x30003712
30003712:	jne    0x30003714
30003714:	add    BYTE PTR fs:[ecx+0x0],ch
30003718:	outs   dx,DWORD PTR ds:[esi]
30003719:	add    BYTE PTR [eax],ah
3000371b:	add    BYTE PTR [ecx],dh
3000371d:	add    BYTE PTR [ecx],dh
3000371f:	add    BYTE PTR [eax],ah
30003721:	add    BYTE PTR [ebp+0x0],al
30003724:	js     0x30003726
30003726:	jo     0x30003728
30003728:	jb     0x3000372a
3000372a:	add    BYTE PTR gs:[ebx+0x0],dh
3000372e:	jae    0x30003730
30003730:	and    BYTE PTR [eax],al
30003732:	data16 add BYTE PTR [edi+0x0],ch
30003736:	jb     0x30003738
30003738:	and    BYTE PTR [eax],al
3000373a:	push   edi
3000373b:	add    BYTE PTR [ecx+0x0],ch
3000373e:	outs   dx,BYTE PTR ds:[esi]
3000373f:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003743:	add    BYTE PTR [edi+0x0],dh
30003746:	jae    0x30003748
30003748:	and    BYTE PTR [eax],al
3000374a:	push   eax
3000374b:	add    BYTE PTR [eax+0x0],ch
3000374e:	outs   dx,DWORD PTR ds:[esi]
3000374f:	add    BYTE PTR [esi+0x0],ch
30003752:	add    BYTE PTR gs:[eax],al
	...
3000375d:	add    BYTE PTR [esi+0x0],dl
30003760:	imul   eax,DWORD PTR [eax],0x750073
30003766:	popa   
30003767:	add    BYTE PTR [eax+eax*1+0x20],ch
3000376b:	add    BYTE PTR [ebx+0x0],dl
3000376e:	je     0x30003770
30003770:	jne    0x30003772
30003772:	add    BYTE PTR fs:[ecx+0x0],ch
30003776:	outs   dx,DWORD PTR ds:[esi]
30003777:	add    BYTE PTR [eax],ah
30003779:	add    BYTE PTR [ebp+0x0],al
3000377c:	js     0x3000377e
3000377e:	jo     0x30003780
30003780:	jb     0x30003782
30003782:	add    BYTE PTR gs:[ebx+0x0],dh
30003786:	jae    0x30003788
30003788:	and    BYTE PTR [eax],al
3000378a:	data16 add BYTE PTR [edi+0x0],ch
3000378e:	jb     0x30003790
30003790:	and    BYTE PTR [eax],al
30003792:	push   edi
30003793:	add    BYTE PTR [ecx+0x0],ch
30003796:	outs   dx,BYTE PTR ds:[esi]
30003797:	add    BYTE PTR [eax+eax*1+0x6f],ah
3000379b:	add    BYTE PTR [edi+0x0],dh
3000379e:	jae    0x300037a0
300037a0:	and    BYTE PTR [eax],al
300037a2:	push   eax
300037a3:	add    BYTE PTR [eax+0x0],ch
300037a6:	outs   dx,DWORD PTR ds:[esi]
300037a7:	add    BYTE PTR [esi+0x0],ch
300037aa:	add    BYTE PTR gs:[eax],al
300037ad:	add    BYTE PTR [eax],al
300037af:	add    BYTE PTR [eax],al
300037b1:	add    BYTE PTR [eax],al
300037b3:	add    ah,bl
300037b5:	pop    es
300037b6:	add    BYTE PTR [eax],al
300037b8:	fiadd  DWORD PTR [edi]
300037ba:	add    BYTE PTR [eax],al
300037bc:	fadd   QWORD PTR [edi]
300037be:	add    BYTE PTR [eax],al
300037c0:	add    DWORD PTR [eax],eax
	...
300037d6:	add    BYTE PTR [eax],al
300037d8:	push   esi
300037d9:	add    BYTE PTR [ecx+0x0],ch
300037dc:	jae    0x300037de
300037de:	jne    0x300037e0
300037e0:	popa   
300037e1:	add    BYTE PTR [eax+eax*1+0x20],ch
300037e5:	add    BYTE PTR [ebx+0x0],dl
300037e8:	je     0x300037ea
300037ea:	jne    0x300037ec
300037ec:	add    BYTE PTR fs:[ecx+0x0],ch
300037f0:	outs   dx,DWORD PTR ds:[esi]
300037f1:	add    BYTE PTR [eax],ah
300037f3:	add    BYTE PTR [ecx],dh
300037f5:	add    BYTE PTR [ecx],dh
300037f7:	add    BYTE PTR [eax],ah
300037f9:	add    BYTE PTR [ebp+0x0],al
300037fc:	js     0x300037fe
300037fe:	jo     0x30003800
30003800:	jb     0x30003802
30003802:	add    BYTE PTR gs:[ebx+0x0],dh
30003806:	jae    0x30003808
30003808:	and    BYTE PTR [eax],al
3000380a:	data16 add BYTE PTR [edi+0x0],ch
3000380e:	jb     0x30003810
30003810:	and    BYTE PTR [eax],al
30003812:	push   edi
30003813:	add    BYTE PTR [ecx+0x0],ch
30003816:	outs   dx,BYTE PTR ds:[esi]
30003817:	add    BYTE PTR [eax+eax*1+0x6f],ah
3000381b:	add    BYTE PTR [edi+0x0],dh
3000381e:	jae    0x30003820
30003820:	and    BYTE PTR [eax],al
30003822:	cmp    BYTE PTR [eax],al
	...
30003834:	add    BYTE PTR [eax],al
30003836:	push   esi
30003837:	add    BYTE PTR [ecx+0x0],ch
3000383a:	jae    0x3000383c
3000383c:	jne    0x3000383e
3000383e:	popa   
3000383f:	add    BYTE PTR [eax+eax*1+0x20],ch
30003843:	add    BYTE PTR [ebx+0x0],dl
30003846:	je     0x30003848
30003848:	jne    0x3000384a
3000384a:	add    BYTE PTR fs:[ecx+0x0],ch
3000384e:	outs   dx,DWORD PTR ds:[esi]
3000384f:	add    BYTE PTR [eax],ah
30003851:	add    BYTE PTR [ebp+0x0],al
30003854:	js     0x30003856
30003856:	jo     0x30003858
30003858:	jb     0x3000385a
3000385a:	add    BYTE PTR gs:[ebx+0x0],dh
3000385e:	jae    0x30003860
30003860:	and    BYTE PTR [eax],al
30003862:	data16 add BYTE PTR [edi+0x0],ch
30003866:	jb     0x30003868
30003868:	and    BYTE PTR [eax],al
3000386a:	push   edi
3000386b:	add    BYTE PTR [ecx+0x0],ch
3000386e:	outs   dx,BYTE PTR ds:[esi]
3000386f:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003873:	add    BYTE PTR [edi+0x0],dh
30003876:	jae    0x30003878
30003878:	and    BYTE PTR [eax],al
3000387a:	cmp    BYTE PTR [eax],al
	...
3000388c:	fadd   QWORD PTR [edi]
3000388e:	add    BYTE PTR [eax],al
30003890:	fadd   QWORD PTR [edi]
30003892:	add    BYTE PTR [eax],al
30003894:	fadd   QWORD PTR [edi]
30003896:	add    BYTE PTR [eax],al
30003898:	add    DWORD PTR [eax],eax
	...
300038ae:	add    BYTE PTR [eax],al
300038b0:	push   esi
300038b1:	add    BYTE PTR [ecx+0x0],ch
300038b4:	jae    0x300038b6
300038b6:	jne    0x300038b8
300038b8:	popa   
300038b9:	add    BYTE PTR [eax+eax*1+0x20],ch
300038bd:	add    BYTE PTR [ebx+0x0],dl
300038c0:	je     0x300038c2
300038c2:	jne    0x300038c4
300038c4:	add    BYTE PTR fs:[ecx+0x0],ch
300038c8:	outs   dx,DWORD PTR ds:[esi]
300038c9:	add    BYTE PTR [eax],ah
300038cb:	add    BYTE PTR [edx],dh
300038cd:	add    BYTE PTR [eax],dh
300038cf:	add    BYTE PTR [ecx],dh
300038d1:	add    BYTE PTR [edx],dh
	...
3000390b:	add    BYTE PTR [eax],al
3000390d:	add    BYTE PTR [esi+0x0],dl
30003910:	imul   eax,DWORD PTR [eax],0x750073
30003916:	popa   
30003917:	add    BYTE PTR [eax+eax*1+0x20],ch
3000391b:	add    BYTE PTR [ebx+0x0],dl
3000391e:	je     0x30003920
30003920:	jne    0x30003922
30003922:	add    BYTE PTR fs:[ecx+0x0],ch
30003926:	outs   dx,DWORD PTR ds:[esi]
	...
30003963:	add    ah,bl
30003965:	pop    es
30003966:	add    BYTE PTR [eax],al
30003968:	fiadd  DWORD PTR [edi]
3000396a:	add    BYTE PTR [eax],al
3000396c:	fadd   QWORD PTR [edi]
	...
30003986:	add    BYTE PTR [eax],al
30003988:	push   esi
30003989:	add    BYTE PTR [ecx+0x0],ch
3000398c:	jae    0x3000398e
3000398e:	jne    0x30003990
30003990:	popa   
30003991:	add    BYTE PTR [eax+eax*1+0x20],ch
30003995:	add    BYTE PTR [ebx+0x0],dl
30003998:	je     0x3000399a
3000399a:	jne    0x3000399c
3000399c:	add    BYTE PTR fs:[ecx+0x0],ch
300039a0:	outs   dx,DWORD PTR ds:[esi]
300039a1:	add    BYTE PTR [eax],ah
300039a3:	add    BYTE PTR [ebp+0x0],al
300039a6:	js     0x300039a8
300039a8:	jo     0x300039aa
300039aa:	jb     0x300039ac
300039ac:	add    BYTE PTR gs:[ebx+0x0],dh
300039b0:	jae    0x300039b2
300039b2:	and    BYTE PTR [eax],al
300039b4:	xor    al,BYTE PTR [eax]
300039b6:	xor    BYTE PTR [eax],al
300039b8:	xor    DWORD PTR [eax],eax
300039ba:	xor    al,BYTE PTR [eax]
300039bc:	and    BYTE PTR [eax],al
300039be:	data16 add BYTE PTR [edi+0x0],ch
300039c2:	jb     0x300039c4
300039c4:	and    BYTE PTR [eax],al
300039c6:	push   edi
300039c7:	add    BYTE PTR [ebp+0x0],ah
300039ca:	bound  eax,QWORD PTR [eax]
	...
300039e4:	add    BYTE PTR [eax],al
300039e6:	push   esi
300039e7:	add    BYTE PTR [ecx+0x0],ch
300039ea:	jae    0x300039ec
300039ec:	jne    0x300039ee
300039ee:	popa   
300039ef:	add    BYTE PTR [eax+eax*1+0x20],ch
300039f3:	add    BYTE PTR [edi+0x0],dl
300039f6:	add    BYTE PTR gs:[edx+0x0],ah
300039fa:	and    BYTE PTR [eax],al
300039fc:	inc    esp
300039fd:	add    BYTE PTR [ebp+0x0],ah
30003a00:	jbe    0x30003a02
30003a02:	add    BYTE PTR gs:[eax+eax*1+0x6f],ch
30003a07:	add    BYTE PTR [eax+0x0],dh
30003a0a:	add    BYTE PTR gs:[edx+0x0],dh
30003a0e:	and    BYTE PTR [eax],al
30003a10:	inc    ebp
30003a11:	add    BYTE PTR [eax+0x0],bh
30003a14:	jo     0x30003a16
30003a16:	jb     0x30003a18
30003a18:	add    BYTE PTR gs:[ebx+0x0],dh
30003a1c:	jae    0x30003a1e
	...
30003a3a:	add    BYTE PTR [eax],al
30003a3c:	fadd   QWORD PTR [edi]
30003a3e:	add    BYTE PTR [eax],al
30003a40:	fiadd  DWORD PTR [edi]
30003a42:	add    BYTE PTR [eax],al
30003a44:	fadd   QWORD PTR [edi]
30003a46:	add    BYTE PTR [eax],al
30003a48:	add    DWORD PTR [eax],eax
	...
30003a5e:	add    BYTE PTR [eax],al
30003a60:	push   edx
30003a61:	add    BYTE PTR [ecx+0x0],ah
30003a64:	jae    0x30003a66
30003a66:	arpl   WORD PTR [eax],ax
30003a68:	popa   
30003a69:	add    BYTE PTR [eax+eax*1+0x20],ch
30003a6d:	add    BYTE PTR [eax],ch
30003a6f:	add    BYTE PTR [edx],dh
30003a71:	add    BYTE PTR [eax],dh
30003a73:	add    BYTE PTR [ecx],dh
30003a75:	add    BYTE PTR [edx],dh
30003a77:	add    BYTE PTR [eax],ah
30003a79:	add    BYTE PTR [esi+0x0],dl
30003a7c:	add    BYTE PTR gs:[edx+0x0],dh
30003a80:	jae    0x30003a82
30003a82:	imul   eax,DWORD PTR [eax],0x6e006f
30003a88:	sub    DWORD PTR [eax],eax
	...
30003abe:	push   edx
30003abf:	add    BYTE PTR [ecx+0x0],ah
30003ac2:	jae    0x30003ac4
30003ac4:	arpl   WORD PTR [eax],ax
30003ac6:	popa   
30003ac7:	add    BYTE PTR [eax+eax*1+0x20],ch
30003acb:	add    BYTE PTR [eax],ch
30003acd:	add    BYTE PTR [esi+0x0],dl
30003ad0:	add    BYTE PTR gs:[edx+0x0],dh
30003ad4:	jae    0x30003ad6
30003ad6:	imul   eax,DWORD PTR [eax],0x6e006f
30003adc:	and    BYTE PTR [eax],al
30003ade:	xor    DWORD PTR [eax],eax
30003ae0:	xor    DWORD PTR [eax],eax
30003ae2:	sub    DWORD PTR [eax],eax
	...
30003b14:	fadd   QWORD PTR [edi]
30003b16:	add    BYTE PTR [eax],al
30003b18:	fiadd  DWORD PTR [edi]
30003b1a:	add    BYTE PTR [eax],al
30003b1c:	fadd   QWORD PTR [edi]
30003b1e:	add    BYTE PTR [eax],al
30003b20:	add    DWORD PTR [eax],eax
	...
30003b36:	add    BYTE PTR [eax],al
30003b38:	push   esi
30003b39:	add    BYTE PTR [ecx+0x0],ch
30003b3c:	jae    0x30003b3e
30003b3e:	jne    0x30003b40
30003b40:	popa   
30003b41:	add    BYTE PTR [eax+eax*1+0x20],ch
30003b45:	add    BYTE PTR [ebx+0x0],dl
30003b48:	je     0x30003b4a
30003b4a:	jne    0x30003b4c
30003b4c:	add    BYTE PTR fs:[ecx+0x0],ch
30003b50:	outs   dx,DWORD PTR ds:[esi]
30003b51:	add    BYTE PTR [eax],ah
30003b53:	add    BYTE PTR [ebp+0x0],al
30003b56:	js     0x30003b58
30003b58:	jo     0x30003b5a
30003b5a:	jb     0x30003b5c
30003b5c:	add    BYTE PTR gs:[ebx+0x0],dh
30003b60:	jae    0x30003b62
30003b62:	and    BYTE PTR [eax],al
30003b64:	xor    al,BYTE PTR [eax]
30003b66:	xor    BYTE PTR [eax],al
30003b68:	xor    DWORD PTR [eax],eax
30003b6a:	xor    al,BYTE PTR [eax]
30003b6c:	and    BYTE PTR [eax],al
30003b6e:	data16 add BYTE PTR [edi+0x0],ch
30003b72:	jb     0x30003b74
30003b74:	and    BYTE PTR [eax],al
30003b76:	push   edi
30003b77:	add    BYTE PTR [ecx+0x0],ch
30003b7a:	outs   dx,BYTE PTR ds:[esi]
30003b7b:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003b7f:	add    BYTE PTR [edi+0x0],dh
30003b82:	jae    0x30003b84
30003b84:	and    BYTE PTR [eax],al
30003b86:	push   eax
30003b87:	add    BYTE PTR [eax+0x0],ch
30003b8a:	outs   dx,DWORD PTR ds:[esi]
30003b8b:	add    BYTE PTR [esi+0x0],ch
30003b8e:	add    BYTE PTR gs:[eax],al
30003b91:	add    BYTE PTR [eax],al
30003b93:	add    BYTE PTR [eax],al
30003b95:	add    BYTE PTR [esi+0x0],dl
30003b98:	imul   eax,DWORD PTR [eax],0x750073
30003b9e:	popa   
30003b9f:	add    BYTE PTR [eax+eax*1+0x20],ch
30003ba3:	add    BYTE PTR [ebx+0x0],dl
30003ba6:	je     0x30003ba8
30003ba8:	jne    0x30003baa
30003baa:	add    BYTE PTR fs:[ecx+0x0],ch
30003bae:	outs   dx,DWORD PTR ds:[esi]
30003baf:	add    BYTE PTR [eax],ah
30003bb1:	add    BYTE PTR [ebp+0x0],al
30003bb4:	js     0x30003bb6
30003bb6:	jo     0x30003bb8
30003bb8:	jb     0x30003bba
30003bba:	add    BYTE PTR gs:[ebx+0x0],dh
30003bbe:	jae    0x30003bc0
30003bc0:	and    BYTE PTR [eax],al
30003bc2:	data16 add BYTE PTR [edi+0x0],ch
30003bc6:	jb     0x30003bc8
30003bc8:	and    BYTE PTR [eax],al
30003bca:	push   edi
30003bcb:	add    BYTE PTR [ecx+0x0],ch
30003bce:	outs   dx,BYTE PTR ds:[esi]
30003bcf:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003bd3:	add    BYTE PTR [edi+0x0],dh
30003bd6:	jae    0x30003bd8
30003bd8:	and    BYTE PTR [eax],al
30003bda:	push   eax
30003bdb:	add    BYTE PTR [eax+0x0],ch
30003bde:	outs   dx,DWORD PTR ds:[esi]
30003bdf:	add    BYTE PTR [esi+0x0],ch
30003be2:	add    BYTE PTR gs:[eax],al
30003be5:	add    BYTE PTR [eax],al
30003be7:	add    BYTE PTR [eax],al
30003be9:	add    BYTE PTR [eax],al
30003beb:	add    ah,bl
30003bed:	pop    es
30003bee:	add    BYTE PTR [eax],al
30003bf0:	fiadd  DWORD PTR [edi]
30003bf2:	add    BYTE PTR [eax],al
30003bf4:	fadd   QWORD PTR [edi]
30003bf6:	add    BYTE PTR [eax],al
30003bf8:	add    DWORD PTR [eax],eax
	...
30003c0e:	add    BYTE PTR [eax],al
30003c10:	push   esi
30003c11:	add    BYTE PTR [ecx+0x0],ch
30003c14:	jae    0x30003c16
30003c16:	jne    0x30003c18
30003c18:	popa   
30003c19:	add    BYTE PTR [eax+eax*1+0x20],ch
30003c1d:	add    BYTE PTR [ebx+0x0],dl
30003c20:	je     0x30003c22
30003c22:	jne    0x30003c24
30003c24:	add    BYTE PTR fs:[ecx+0x0],ch
30003c28:	outs   dx,DWORD PTR ds:[esi]
30003c29:	add    BYTE PTR [eax],ah
30003c2b:	add    BYTE PTR [ebp+0x0],al
30003c2e:	js     0x30003c30
30003c30:	jo     0x30003c32
30003c32:	jb     0x30003c34
30003c34:	add    BYTE PTR gs:[ebx+0x0],dh
30003c38:	jae    0x30003c3a
30003c3a:	and    BYTE PTR [eax],al
30003c3c:	xor    al,BYTE PTR [eax]
30003c3e:	xor    BYTE PTR [eax],al
30003c40:	xor    DWORD PTR [eax],eax
30003c42:	xor    al,BYTE PTR [eax]
30003c44:	and    BYTE PTR [eax],al
30003c46:	data16 add BYTE PTR [edi+0x0],ch
30003c4a:	jb     0x30003c4c
30003c4c:	and    BYTE PTR [eax],al
30003c4e:	push   edi
30003c4f:	add    BYTE PTR [ecx+0x0],ch
30003c52:	outs   dx,BYTE PTR ds:[esi]
30003c53:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003c57:	add    BYTE PTR [edi+0x0],dh
30003c5a:	jae    0x30003c5c
30003c5c:	and    BYTE PTR [eax],al
30003c5e:	cmp    BYTE PTR [eax],al
	...
30003c6c:	add    BYTE PTR [eax],al
30003c6e:	push   esi
30003c6f:	add    BYTE PTR [ecx+0x0],ch
30003c72:	jae    0x30003c74
30003c74:	jne    0x30003c76
30003c76:	popa   
30003c77:	add    BYTE PTR [eax+eax*1+0x20],ch
30003c7b:	add    BYTE PTR [ebx+0x0],dl
30003c7e:	je     0x30003c80
30003c80:	jne    0x30003c82
30003c82:	add    BYTE PTR fs:[ecx+0x0],ch
30003c86:	outs   dx,DWORD PTR ds:[esi]
30003c87:	add    BYTE PTR [eax],ah
30003c89:	add    BYTE PTR [ebp+0x0],al
30003c8c:	js     0x30003c8e
30003c8e:	jo     0x30003c90
30003c90:	jb     0x30003c92
30003c92:	add    BYTE PTR gs:[ebx+0x0],dh
30003c96:	jae    0x30003c98
30003c98:	and    BYTE PTR [eax],al
30003c9a:	data16 add BYTE PTR [edi+0x0],ch
30003c9e:	jb     0x30003ca0
30003ca0:	and    BYTE PTR [eax],al
30003ca2:	push   edi
30003ca3:	add    BYTE PTR [ecx+0x0],ch
30003ca6:	outs   dx,BYTE PTR ds:[esi]
30003ca7:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003cab:	add    BYTE PTR [edi+0x0],dh
30003cae:	jae    0x30003cb0
30003cb0:	and    BYTE PTR [eax],al
30003cb2:	cmp    BYTE PTR [eax],al
	...
30003cc4:	fadd   QWORD PTR [edi]
30003cc6:	add    BYTE PTR [eax],al
30003cc8:	fadd   QWORD PTR [edi]
30003cca:	add    BYTE PTR [eax],al
30003ccc:	fadd   QWORD PTR [edi]
30003cce:	add    BYTE PTR [eax],al
30003cd0:	add    DWORD PTR [eax],eax
	...
30003ce6:	add    BYTE PTR [eax],al
30003ce8:	push   esi
30003ce9:	add    BYTE PTR [ecx+0x0],ch
30003cec:	jae    0x30003cee
30003cee:	jne    0x30003cf0
30003cf0:	popa   
30003cf1:	add    BYTE PTR [eax+eax*1+0x20],ch
30003cf5:	add    BYTE PTR [ebx+0x0],dl
30003cf8:	je     0x30003cfa
30003cfa:	jne    0x30003cfc
30003cfc:	add    BYTE PTR fs:[ecx+0x0],ch
30003d00:	outs   dx,DWORD PTR ds:[esi]
30003d01:	add    BYTE PTR [eax],ah
30003d03:	add    BYTE PTR [ebp+0x0],al
30003d06:	js     0x30003d08
30003d08:	jo     0x30003d0a
30003d0a:	jb     0x30003d0c
30003d0c:	add    BYTE PTR gs:[ebx+0x0],dh
30003d10:	jae    0x30003d12
30003d12:	and    BYTE PTR [eax],al
30003d14:	xor    al,BYTE PTR [eax]
30003d16:	xor    BYTE PTR [eax],al
30003d18:	xor    DWORD PTR [eax],eax
30003d1a:	xor    al,BYTE PTR [eax]
30003d1c:	and    BYTE PTR [eax],al
30003d1e:	data16 add BYTE PTR [edi+0x0],ch
30003d22:	jb     0x30003d24
30003d24:	and    BYTE PTR [eax],al
30003d26:	push   edi
30003d27:	add    BYTE PTR [ecx+0x0],ch
30003d2a:	outs   dx,BYTE PTR ds:[esi]
30003d2b:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003d2f:	add    BYTE PTR [edi+0x0],dh
30003d32:	jae    0x30003d34
30003d34:	and    BYTE PTR [eax],al
30003d36:	inc    esp
30003d37:	add    BYTE PTR [ebp+0x0],ah
30003d3a:	jae    0x30003d3c
30003d3c:	imul   eax,DWORD PTR [eax],0x74
30003d3f:	add    BYTE PTR [edi+0x0],ch
30003d42:	jo     0x30003d44
30003d44:	add    BYTE PTR [eax],al
30003d46:	push   esi
30003d47:	add    BYTE PTR [ecx+0x0],ch
30003d4a:	jae    0x30003d4c
30003d4c:	jne    0x30003d4e
30003d4e:	popa   
30003d4f:	add    BYTE PTR [eax+eax*1+0x20],ch
30003d53:	add    BYTE PTR [ebx+0x0],dl
30003d56:	je     0x30003d58
30003d58:	jne    0x30003d5a
30003d5a:	add    BYTE PTR fs:[ecx+0x0],ch
30003d5e:	outs   dx,DWORD PTR ds:[esi]
30003d5f:	add    BYTE PTR [eax],ah
30003d61:	add    BYTE PTR [ebp+0x0],al
30003d64:	js     0x30003d66
30003d66:	jo     0x30003d68
30003d68:	jb     0x30003d6a
30003d6a:	add    BYTE PTR gs:[ebx+0x0],dh
30003d6e:	jae    0x30003d70
30003d70:	and    BYTE PTR [eax],al
30003d72:	data16 add BYTE PTR [edi+0x0],ch
30003d76:	jb     0x30003d78
30003d78:	and    BYTE PTR [eax],al
30003d7a:	push   edi
30003d7b:	add    BYTE PTR [ecx+0x0],ch
30003d7e:	outs   dx,BYTE PTR ds:[esi]
30003d7f:	add    BYTE PTR [eax+eax*1+0x6f],ah
30003d83:	add    BYTE PTR [edi+0x0],dh
30003d86:	jae    0x30003d88
30003d88:	and    BYTE PTR [eax],al
30003d8a:	inc    esp
30003d8b:	add    BYTE PTR [ebp+0x0],ah
30003d8e:	jae    0x30003d90
30003d90:	imul   eax,DWORD PTR [eax],0x74
30003d93:	add    BYTE PTR [edi+0x0],ch
30003d96:	jo     0x30003d98
30003d98:	add    BYTE PTR [eax],al
30003d9a:	add    BYTE PTR [eax],al
30003d9c:	fadd   QWORD PTR [edi]
30003d9e:	add    BYTE PTR [eax],al
30003da0:	fadd   QWORD PTR [edi]
30003da2:	add    BYTE PTR [eax],al
30003da4:	fadd   QWORD PTR [edi]
30003da6:	add    BYTE PTR [eax],al
30003da8:	add    DWORD PTR [eax],eax
	...
30003dbe:	add    BYTE PTR [eax],al
30003dc0:	sub    BYTE PTR [eax],al
30003dc2:	jne    0x30003dc4
30003dc4:	outs   dx,BYTE PTR ds:[esi]
30003dc5:	add    BYTE PTR [edx+0x0],dh
30003dc8:	add    BYTE PTR gs:[ebx+0x0],ah
30003dcc:	outs   dx,DWORD PTR ds:[esi]
30003dcd:	add    BYTE PTR [edi+0x0],ah
30003dd0:	outs   dx,BYTE PTR ds:[esi]
30003dd1:	add    BYTE PTR [ecx+0x0],ch
30003dd4:	jp     0x30003dd6
30003dd6:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30003ddb:	add    BYTE PTR [esi+0x0],dh
30003dde:	add    BYTE PTR gs:[edx+0x0],dh
30003de2:	jae    0x30003de4
30003de4:	imul   eax,DWORD PTR [eax],0x6e006f
30003dea:	sub    DWORD PTR [eax],eax
	...
30003e1c:	add    BYTE PTR [eax],al
30003e1e:	sub    BYTE PTR [eax],al
30003e20:	jne    0x30003e22
30003e22:	outs   dx,BYTE PTR ds:[esi]
30003e23:	add    BYTE PTR [edx+0x0],dh
30003e26:	add    BYTE PTR gs:[ebx+0x0],ah
30003e2a:	outs   dx,DWORD PTR ds:[esi]
30003e2b:	add    BYTE PTR [edi+0x0],ah
30003e2e:	outs   dx,BYTE PTR ds:[esi]
30003e2f:	add    BYTE PTR [ecx+0x0],ch
30003e32:	jp     0x30003e34
30003e34:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30003e39:	add    BYTE PTR [esi+0x0],dh
30003e3c:	add    BYTE PTR gs:[edx+0x0],dh
30003e40:	jae    0x30003e42
30003e42:	imul   eax,DWORD PTR [eax],0x6e006f
30003e48:	sub    DWORD PTR [eax],eax
	...
30003e96:	add    BYTE PTR [eax],al
30003e98:	xor    eax,eax
30003e9a:	jmp    0x3000155b
30003e9f:	mov    WORD PTR [edi+0x8],ax
30003ea3:	jmp    0x30003e98
30003ea5:	nop
30003ea6:	nop
30003ea7:	nop
30003ea8:	sbb    ah,BYTE PTR [esi]
30003eaa:	or     bh,BYTE PTR [ebp+0x4aad857a]
30003eb0:	mov    ebx,0x1a029cde
30003eb5:	iret   
30003eb6:	dec    esp
30003eb7:	cmp    BYTE PTR [eax+0x30003ec0],bh
30003ebd:	ret    
30003ebe:	nop
30003ebf:	nop
30003ec0:	les    edi,FWORD PTR [edi]
30003ec2:	add    BYTE PTR [eax],dh
30003ec4:	add    BYTE PTR [eax],al
30003ec6:	add    BYTE PTR [eax],al
30003ec8:	add    DWORD PTR [eax],eax
30003eca:	add    BYTE PTR [eax],al
30003ecc:	test   al,0x3e
30003ece:	add    BYTE PTR [eax],dh
30003ed0:	add    al,0x0
30003ed2:	add    BYTE PTR [eax],al
30003ed4:	add    DWORD PTR [eax],eax
	...
30003ee2:	add    BYTE PTR [eax],al
30003ee4:	push   0x1c
30003ee6:	mov    eax,0x3003ee88
30003eeb:	call   0x3000116a
30003ef0:	mov    ebx,edx
30003ef2:	xor    esi,esi
30003ef4:	mov    DWORD PTR [ebp-0x14],esi
30003ef7:	lea    edx,[ebp-0x14]
30003efa:	push   edx
30003efb:	push   0x30003fc4
30003f00:	mov    DWORD PTR [ebp-0x4],esi
30003f03:	mov    eax,DWORD PTR [ecx]
30003f05:	push   0x3002a32c
30003f0a:	push   ecx
30003f0b:	call   DWORD PTR [eax+0xc]
30003f0e:	test   eax,eax
30003f10:	jns    0x30003f1c
30003f12:	mov    esi,0x80004001
30003f17:	jmp    0x30003fab
30003f1c:	xor    eax,eax
30003f1e:	lea    edi,[ebp-0x28]
30003f21:	stos   DWORD PTR es:[edi],eax
30003f22:	stos   DWORD PTR es:[edi],eax
30003f23:	stos   DWORD PTR es:[edi],eax
30003f24:	stos   DWORD PTR es:[edi],eax
30003f25:	lea    eax,[ebp-0x28]
30003f28:	push   eax
30003f29:	call   DWORD PTR ds:0x300454e4
30003f2f:	mov    BYTE PTR [ebp-0x4],0x1
30003f33:	mov    eax,DWORD PTR [ebp-0x14]
30003f36:	lea    edx,[ebp-0x28]
30003f39:	mov    ecx,DWORD PTR [eax]
30003f3b:	push   edx
30003f3c:	push   0xffffde71
30003f41:	push   eax
30003f42:	call   DWORD PTR [ecx+0x10]
30003f45:	test   eax,eax
30003f47:	js     0x30003f9c
30003f49:	cmp    WORD PTR [ebp-0x28],0xd
30003f4e:	jne    0x30003f9c
30003f50:	mov    ecx,DWORD PTR [ebp-0x20]
30003f53:	mov    DWORD PTR [ebp-0x10],esi
30003f56:	test   ecx,ecx
30003f58:	je     0x30003f9c
30003f5a:	mov    eax,DWORD PTR [ecx]
30003f5c:	lea    edx,[ebp-0x10]
30003f5f:	push   edx
30003f60:	push   0x300082e0
30003f65:	push   ecx
30003f66:	call   DWORD PTR [eax]
30003f68:	test   eax,eax
30003f6a:	jns    0x30003f73
30003f6c:	mov    eax,esi
30003f6e:	mov    DWORD PTR [ebp-0x10],eax
30003f71:	jmp    0x30003f76
30003f73:	mov    eax,DWORD PTR [ebp-0x10]
30003f76:	test   eax,eax
30003f78:	je     0x30003f9c
30003f7a:	test   ebx,ebx
30003f7c:	jne    0x30003f85
30003f7e:	mov    esi,0x80004003
30003f83:	jmp    0x30003f90
30003f85:	mov    DWORD PTR [ebx],eax
30003f87:	mov    ecx,DWORD PTR [eax]
30003f89:	push   eax
30003f8a:	call   DWORD PTR [ecx+0x4]
30003f8d:	mov    eax,DWORD PTR [ebp-0x10]
30003f90:	test   eax,eax
30003f92:	je     0x30003fa1
30003f94:	mov    ecx,DWORD PTR [eax]
30003f96:	push   eax
30003f97:	call   DWORD PTR [ecx+0x8]
30003f9a:	jmp    0x30003fa1
30003f9c:	mov    esi,0x80004001
30003fa1:	lea    eax,[ebp-0x28]
30003fa4:	push   eax
30003fa5:	call   DWORD PTR ds:0x300454e0
30003fab:	or     DWORD PTR [ebp-0x4],0xffffffff
30003faf:	mov    ecx,DWORD PTR [ebp-0x14]
30003fb2:	test   ecx,ecx
30003fb4:	je     0x30003fbc
30003fb6:	mov    edx,DWORD PTR [ecx]
30003fb8:	push   ecx
30003fb9:	call   DWORD PTR [edx+0x8]
30003fbc:	mov    eax,esi
30003fbe:	call   0x3000119d
30003fc3:	ret    
30003fc4:	push   0x52
30003fc6:	stos   BYTE PTR es:[edi],al
30003fc7:	push   ds
30003fc8:	cwde   
30003fc9:	or     bl,dl
30003fcb:	adc    DWORD PTR [eax+0x4fc00068],edi
30003fd1:	jns    0x30003fcb
30003fd3:	add    dh,bh
30003fd5:	fcomp  DWORD PTR [ebx]
30003fd7:	shr    cl,0xc2
30003fda:	(bad)  
30003fdb:	(bad)  
30003fdc:	jmp    FWORD PTR [edx+0xb]
30003fdf:	pop    eax
30003fe0:	mov    WORD PTR [edi],ax
30003fe3:	mov    eax,DWORD PTR [ebp+0x8]
30003fe6:	mov    eax,DWORD PTR [eax+0x698]
30003fec:	jmp    0x30003fd4
30003fee:	push   ebp
30003fef:	mov    ebp,esp
30003ff1:	push   esi
30003ff2:	push   DWORD PTR [ebp+0x8]
30003ff5:	call   0x30004011
30003ffa:	mov    esi,eax
30003ffc:	pop    ecx
30003ffd:	test   esi,esi
30003fff:	je     0x30026fe0
30004005:	mov    eax,esi
30004007:	pop    esi
30004008:	pop    ebp
30004009:	ret    
3000400a:	pop    ecx
3000400b:	test   eax,eax
3000400d:	jne    0x30003ff2
3000400f:	jmp    0x30004005
30004011:	jmp    DWORD PTR ds:0x300452a4
30004017:	push   esi
30004018:	mov    esi,ecx
3000401a:	or     edx,0xffffffff
3000401d:	lea    eax,[esi+0xc]
30004020:	lock xadd DWORD PTR [eax],edx
30004024:	dec    edx
30004025:	test   edx,edx
30004027:	jg     0x30004031
30004029:	mov    ecx,DWORD PTR [esi]
3000402b:	push   esi
3000402c:	mov    eax,DWORD PTR [ecx]
3000402e:	call   DWORD PTR [eax+0x4]
30004031:	pop    esi
30004032:	ret    
30004033:	nop
30004034:	xor    al,BYTE PTR [ecx+0x0]
30004037:	xor    BYTE PTR [eax+eax*2+0x0],ch
3000403b:	xor    dh,dl
3000403d:	mov    WORD PTR [eax],es
3000403f:	xor    BYTE PTR [eax-0x7d],cl
30004042:	add    esi,DWORD PTR [eax]
30004044:	sub    DWORD PTR [ebx+0x40ca3003],eax
3000404a:	add    BYTE PTR [eax],dh
3000404c:	pusha  
3000404d:	inc    eax
3000404e:	add    BYTE PTR [eax],dh
30004050:	ja     0x30003fde
30004052:	add    BYTE PTR [eax],dh
30004054:	js     0x30004098
30004056:	add    BYTE PTR [eax],dh
30004058:	push   ebx
30004059:	inc    edx
3000405a:	add    BYTE PTR [eax],dh
3000405c:	or     DWORD PTR [ebx-0x74aacffd],eax
30004062:	in     al,dx
30004063:	mov    ecx,DWORD PTR [ecx+0x4]
30004066:	mov    eax,DWORD PTR [ecx]
30004068:	pop    ebp
30004069:	jmp    DWORD PTR [eax+0x4]
3000406c:	push   ebp
3000406d:	mov    ebp,esp
3000406f:	cmp    DWORD PTR [ebp+0x8],0x0
30004073:	je     0x30004083
30004075:	push   DWORD PTR [ebp+0x8]
30004078:	push   0x0
3000407a:	push   DWORD PTR [ecx+0x4]
3000407d:	call   DWORD PTR ds:0x300451c4
30004083:	pop    ebp
30004084:	ret    0x4
30004087:	push   ebp
30004088:	mov    ebp,esp
3000408a:	mov    eax,DWORD PTR [ebp+0xc]
3000408d:	mul    DWORD PTR [ebp+0x10]
30004090:	test   edx,edx
30004092:	jne    0x300040a2
30004094:	cmp    eax,0xffffffff
30004097:	ja     0x300040a2
30004099:	mov    ecx,DWORD PTR [ebp+0x8]
3000409c:	mov    DWORD PTR [ecx],eax
3000409e:	xor    eax,eax
300040a0:	pop    ebp
300040a1:	ret    
300040a2:	mov    eax,0x80070216
300040a7:	pop    ebp
300040a8:	ret    
300040a9:	push   ebp
300040aa:	mov    ebp,esp
300040ac:	mov    ecx,DWORD PTR [ebp+0xc]
300040af:	mov    edx,DWORD PTR [ebp+0x10]
300040b2:	or     eax,0xffffffff
300040b5:	sub    eax,ecx
300040b7:	cmp    eax,edx
300040b9:	jb     0x3002726d
300040bf:	mov    eax,DWORD PTR [ebp+0x8]
300040c2:	add    ecx,edx
300040c4:	mov    DWORD PTR [eax],ecx
300040c6:	xor    eax,eax
300040c8:	pop    ebp
300040c9:	ret    
300040ca:	push   ebp
300040cb:	mov    ebp,esp
300040cd:	push   esi
300040ce:	mov    esi,DWORD PTR [ebp+0x8]
300040d1:	push   edi
300040d2:	push   DWORD PTR [ebp+0xc]
300040d5:	add    esi,0x8
300040d8:	and    esi,0xfffffff8
300040db:	lea    eax,[ebp+0x8]
300040de:	push   esi
300040df:	push   eax
300040e0:	mov    edi,ecx
300040e2:	call   0x30004087
300040e7:	add    esp,0xc
300040ea:	test   eax,eax
300040ec:	js     0x3000412e
300040ee:	push   DWORD PTR [ebp+0x8]
300040f1:	lea    eax,[ebp+0x8]
300040f4:	push   0x10
300040f6:	push   eax
300040f7:	call   0x300040a9
300040fc:	add    esp,0xc
300040ff:	test   eax,eax
30004101:	js     0x3000412e
30004103:	mov    ecx,DWORD PTR [edi+0x4]
30004106:	push   DWORD PTR [ebp+0x8]
30004109:	mov    eax,DWORD PTR [ecx]
3000410b:	call   DWORD PTR [eax]
3000410d:	mov    ecx,eax
3000410f:	test   ecx,ecx
30004111:	je     0x3000412e
30004113:	and    DWORD PTR [ecx+0x4],0x0
30004117:	lea    eax,[esi-0x1]
3000411a:	mov    DWORD PTR [ecx+0x8],eax
3000411d:	mov    DWORD PTR [ecx],edi
3000411f:	mov    DWORD PTR [ecx+0xc],0x1
30004126:	mov    eax,ecx
30004128:	pop    edi
30004129:	pop    esi
3000412a:	pop    ebp
3000412b:	ret    0x8
3000412e:	xor    eax,eax
30004130:	jmp    0x30004128
30004132:	push   ebp
30004133:	mov    ebp,esp
30004135:	push   DWORD PTR [ebp+0x8]
30004138:	push   0x0
3000413a:	push   DWORD PTR [ecx+0x4]
3000413d:	call   DWORD PTR ds:0x300451bc
30004143:	pop    ebp
30004144:	ret    0x4
30004147:	push   ebp
30004148:	mov    ebp,esp
3000414a:	mov    edx,DWORD PTR [ebp+0x8]
3000414d:	test   edx,edx
3000414f:	js     0x3001f537
30004155:	mov    eax,DWORD PTR [ecx]
30004157:	cmp    edx,DWORD PTR [eax-0x8]
3000415a:	jg     0x3001f537
30004160:	mov    DWORD PTR [eax-0xc],edx
30004163:	mov    eax,DWORD PTR [ecx]
30004165:	xor    ecx,ecx
30004167:	mov    WORD PTR [eax+edx*2],cx
3000416b:	pop    ebp
3000416c:	ret    0x4
3000416f:	push   ebp
30004170:	mov    ebp,esp
30004172:	push   ebx
30004173:	mov    ebx,DWORD PTR [ebp+0xc]
30004176:	push   edi
30004177:	mov    edi,ecx
30004179:	test   ebx,ebx
3000417b:	je     0x3000457d
30004181:	cmp    DWORD PTR [ebp+0x8],0x0
30004185:	je     0x3001f595
3000418b:	mov    eax,DWORD PTR [edi]
3000418d:	mov    ecx,DWORD PTR [ebp+0x8]
30004190:	sub    ecx,eax
30004192:	sar    ecx,1
30004194:	push   esi
30004195:	mov    esi,DWORD PTR [eax-0xc]
30004198:	mov    DWORD PTR [ebp+0xc],ecx
3000419b:	push   ebx
3000419c:	mov    ecx,edi
3000419e:	call   0x30004286
300041a3:	mov    ecx,DWORD PTR [ebp+0xc]
300041a6:	cmp    ecx,esi
300041a8:	pop    esi
300041a9:	mov    edx,eax
300041ab:	push   ebx
300041ac:	jbe    0x3001f581
300041b2:	push   DWORD PTR [ebp+0x8]
300041b5:	mov    eax,DWORD PTR [edi]
300041b7:	push   DWORD PTR [eax-0x8]
300041ba:	push   edx
300041bb:	call   0x300041d1
300041c0:	add    esp,0x10
300041c3:	mov    ecx,edi
300041c5:	push   ebx
300041c6:	call   0x30004147
300041cb:	pop    edi
300041cc:	pop    ebx
300041cd:	pop    ebp
300041ce:	ret    0x8
300041d1:	push   ebp
300041d2:	mov    ebp,esp
300041d4:	mov    eax,DWORD PTR [ebp+0x14]
300041d7:	add    eax,eax
300041d9:	push   eax
300041da:	push   DWORD PTR [ebp+0x10]
300041dd:	mov    eax,DWORD PTR [ebp+0xc]
300041e0:	add    eax,eax
300041e2:	push   eax
300041e3:	push   DWORD PTR [ebp+0x8]
300041e6:	call   DWORD PTR ds:0x300453b4
300041ec:	add    esp,0x10
300041ef:	pop    ebp
300041f0:	ret    
300041f1:	push   ebp
300041f2:	mov    ebp,esp
300041f4:	push   ecx
300041f5:	mov    eax,ecx
300041f7:	push   ebx
300041f8:	mov    ebx,DWORD PTR [eax]
300041fa:	push   esi
300041fb:	mov    ecx,DWORD PTR [ebx-0x10]
300041fe:	mov    DWORD PTR [ebp-0x4],eax
30004201:	mov    eax,DWORD PTR [ecx]
30004203:	push   edi
30004204:	mov    edi,DWORD PTR [ebx-0xc]
30004207:	call   DWORD PTR [eax+0x10]
3000420a:	mov    esi,DWORD PTR [ebp+0x8]
3000420d:	mov    edx,DWORD PTR [eax]
3000420f:	push   0x2
30004211:	push   esi
30004212:	mov    ecx,eax
30004214:	call   DWORD PTR [edx]
30004216:	mov    DWORD PTR [ebp+0x8],eax
30004219:	test   eax,eax
3000421b:	je     0x3001f57a
30004221:	cmp    edi,esi
30004223:	jge    0x30004227
30004225:	mov    esi,edi
30004227:	lea    edx,[esi+0x1]
3000422a:	push   edx
3000422b:	push   ebx
3000422c:	lea    esi,[eax+0x10]
3000422f:	push   edx
30004230:	push   esi
30004231:	call   0x300041d1
30004236:	mov    eax,DWORD PTR [ebp+0x8]
30004239:	add    esp,0x10
3000423c:	lea    ecx,[ebx-0x10]
3000423f:	mov    DWORD PTR [eax+0x4],edi
30004242:	call   0x30004017
30004247:	mov    eax,DWORD PTR [ebp-0x4]
3000424a:	pop    edi
3000424b:	mov    DWORD PTR [eax],esi
3000424d:	pop    esi
3000424e:	pop    ebx
3000424f:	leave  
30004250:	ret    0x4
30004253:	mov    eax,ecx
30004255:	ret    
30004256:	push   ebp
30004257:	mov    ebp,esp
30004259:	push   esi
3000425a:	mov    esi,ecx
3000425c:	mov    ecx,DWORD PTR [ebp+0x8]
3000425f:	test   ecx,ecx
30004261:	je     0x3001ed50
30004267:	mov    eax,DWORD PTR [ecx]
30004269:	call   DWORD PTR [eax+0xc]
3000426c:	add    eax,0x10
3000426f:	mov    DWORD PTR [esi],eax
30004271:	mov    eax,esi
30004273:	pop    esi
30004274:	pop    ebp
30004275:	ret    0x4
30004278:	xor    edx,edx
3000427a:	lea    eax,[ecx+0x14]
3000427d:	inc    edx
3000427e:	lock xadd DWORD PTR [eax],edx
30004282:	lea    eax,[ecx+0x8]
30004285:	ret    
30004286:	push   ebp
30004287:	mov    ebp,esp
30004289:	mov    edx,DWORD PTR [ebp+0x8]
3000428c:	push   esi
3000428d:	mov    esi,ecx
3000428f:	test   edx,edx
30004291:	js     0x3001f52c
30004297:	mov    eax,DWORD PTR [esi]
30004299:	xor    ecx,ecx
3000429b:	inc    ecx
3000429c:	sub    ecx,DWORD PTR [eax-0x4]
3000429f:	mov    eax,DWORD PTR [eax-0x8]
300042a2:	sub    eax,edx
300042a4:	or     ecx,eax
300042a6:	jge    0x300042b0
300042a8:	push   edx
300042a9:	mov    ecx,esi
300042ab:	call   0x300042b7
300042b0:	mov    eax,DWORD PTR [esi]
300042b2:	pop    esi
300042b3:	pop    ebp
300042b4:	ret    0x4
300042b7:	push   ebp
300042b8:	mov    ebp,esp
300042ba:	push   esi
300042bb:	mov    esi,DWORD PTR [ebp+0x8]
300042be:	push   edi
300042bf:	mov    edi,ecx
300042c1:	mov    ecx,DWORD PTR [edi]
300042c3:	cmp    DWORD PTR [ecx-0xc],esi
300042c6:	jg     0x3000b71f
300042cc:	cmp    DWORD PTR [ecx-0x4],0x1
300042d0:	jle    0x30008c0a
300042d6:	push   esi
300042d7:	mov    ecx,edi
300042d9:	call   0x300041f1
300042de:	pop    edi
300042df:	pop    esi
300042e0:	pop    ebp
300042e1:	ret    0x4
300042e4:	push   ebp
300042e5:	mov    ebp,esp
300042e7:	mov    eax,DWORD PTR [ebp+0x8]
300042ea:	test   eax,eax
300042ec:	je     0x3000460d
300042f2:	lea    edx,[eax+0x2]
300042f5:	mov    cx,WORD PTR [eax]
300042f8:	add    eax,0x2
300042fb:	test   cx,cx
300042fe:	jne    0x300042f5
30004300:	sub    eax,edx
30004302:	sar    eax,1
30004304:	pop    ebp
30004305:	ret    
30004306:	push   ebp
30004307:	mov    ebp,esp
30004309:	push   esi
3000430a:	mov    esi,DWORD PTR [ebp+0x8]
3000430d:	push   edi
3000430e:	mov    ecx,DWORD PTR [esi]
30004310:	mov    eax,DWORD PTR [ecx]
30004312:	call   DWORD PTR [eax+0x10]
30004315:	lea    edx,[esi+0xc]
30004318:	mov    ecx,eax
3000431a:	cmp    DWORD PTR [edx],0x0
3000431d:	jl     0x30004332
3000431f:	cmp    ecx,DWORD PTR [esi]
30004321:	jne    0x30004332
30004323:	xor    eax,eax
30004325:	mov    edi,esi
30004327:	inc    eax
30004328:	lock xadd DWORD PTR [edx],eax
3000432c:	mov    eax,edi
3000432e:	pop    edi
3000432f:	pop    esi
30004330:	pop    ebp
30004331:	ret    
30004332:	mov    eax,DWORD PTR [ecx]
30004334:	push   0x2
30004336:	push   DWORD PTR [esi+0x4]
30004339:	call   DWORD PTR [eax]
3000433b:	jmp    0x3001f54d
30004340:	push   ebp
30004341:	mov    ebp,esp
30004343:	mov    eax,DWORD PTR [ebp+0x8]
30004346:	push   esi
30004347:	mov    eax,DWORD PTR [eax]
30004349:	sub    eax,0x10
3000434c:	push   eax
3000434d:	mov    esi,ecx
3000434f:	call   0x30004306
30004354:	add    eax,0x10
30004357:	mov    DWORD PTR [esi],eax
30004359:	pop    ecx
3000435a:	mov    eax,esi
3000435c:	pop    esi
3000435d:	pop    ebp
3000435e:	ret    0x4
30004361:	push   ebp
30004362:	mov    ebp,esp
30004364:	mov    eax,DWORD PTR [ebp+0x8]
30004367:	xor    dl,dl
30004369:	test   eax,eax
3000436b:	je     0x30004378
3000436d:	test   eax,0xffff0000
30004372:	je     0x3001f51c
30004378:	mov    al,dl
3000437a:	pop    ebp
3000437b:	ret    0x4
3000437e:	push   0x4
30004380:	mov    eax,0x3003e15c
30004385:	call   0x3000116a
3000438a:	mov    esi,ecx
3000438c:	mov    DWORD PTR [ebp-0x10],esi
3000438f:	push   0x3004306c
30004394:	call   0x30004256
30004399:	push   DWORD PTR [ebp+0x8]
3000439c:	and    DWORD PTR [ebp-0x4],0x0
300043a0:	mov    ecx,esi
300043a2:	call   0x30004361
300043a7:	test   al,al
300043a9:	jne    0x300043bf
300043ab:	push   DWORD PTR [ebp+0x8]
300043ae:	call   0x300042e4
300043b3:	pop    ecx
300043b4:	push   eax
300043b5:	push   DWORD PTR [ebp+0x8]
300043b8:	mov    ecx,esi
300043ba:	call   0x3000416f
300043bf:	mov    eax,esi
300043c1:	call   0x3000119d
300043c6:	ret    0x4
300043c9:	push   ebp
300043ca:	mov    ebp,esp
300043cc:	mov    ecx,DWORD PTR [ebp+0x8]
300043cf:	test   ecx,ecx
300043d1:	je     0x300043ed
300043d3:	push   esi
300043d4:	lea    edx,[ecx+0x2]
300043d7:	xor    esi,esi
300043d9:	mov    ax,WORD PTR [ecx]
300043dc:	add    ecx,0x2
300043df:	cmp    ax,si
300043e2:	jne    0x300043d9
300043e4:	sub    ecx,edx
300043e6:	sar    ecx,1
300043e8:	pop    esi
300043e9:	mov    eax,ecx
300043eb:	pop    ebp
300043ec:	ret    
300043ed:	xor    ecx,ecx
300043ef:	jmp    0x300043e9
300043f1:	push   ebp
300043f2:	mov    ebp,esp
300043f4:	sub    esp,0x24
300043f7:	push   edi
300043f8:	push   DWORD PTR [ebp+0x8]
300043fb:	mov    edi,ecx
300043fd:	mov    DWORD PTR [ebp-0x10],edi
30004400:	call   0x300043c9
30004405:	pop    ecx
30004406:	mov    DWORD PTR [ebp-0x4],eax
30004409:	test   eax,eax
3000440b:	je     0x3000455f
30004411:	push   ebx
30004412:	push   esi
30004413:	push   DWORD PTR [ebp+0xc]
30004416:	call   0x300043c9
3000441b:	mov    esi,DWORD PTR [edi]
3000441d:	pop    ecx
3000441e:	mov    ecx,DWORD PTR [esi-0xc]
30004421:	mov    DWORD PTR [ebp-0x8],eax
30004424:	lea    eax,[esi+ecx*2]
30004427:	xor    ebx,ebx
30004429:	mov    DWORD PTR [ebp-0x18],ebx
3000442c:	mov    DWORD PTR [ebp-0x14],eax
3000442f:	cmp    esi,eax
30004431:	jae    0x3000455b
30004437:	mov    edi,DWORD PTR [ebp-0x4]
3000443a:	push   DWORD PTR [ebp+0x8]
3000443d:	push   esi
3000443e:	call   DWORD PTR ds:0x3004531c
30004444:	pop    ecx
30004445:	pop    ecx
30004446:	test   eax,eax
30004448:	je     0x30004461
3000444a:	push   DWORD PTR [ebp+0x8]
3000444d:	lea    esi,[eax+edi*2]
30004450:	push   esi
30004451:	inc    ebx
30004452:	call   DWORD PTR ds:0x3004531c
30004458:	pop    ecx
30004459:	pop    ecx
3000445a:	test   eax,eax
3000445c:	jne    0x3000444a
3000445e:	mov    DWORD PTR [ebp-0x18],ebx
30004461:	push   esi
30004462:	call   0x300043c9
30004467:	lea    esi,[esi+eax*2]
3000446a:	add    esi,0x2
3000446d:	pop    ecx
3000446e:	cmp    esi,DWORD PTR [ebp-0x14]
30004471:	jb     0x3000443a
30004473:	mov    edi,DWORD PTR [ebp-0x10]
30004476:	test   ebx,ebx
30004478:	jle    0x3000455b
3000447e:	mov    eax,DWORD PTR [edi]
30004480:	mov    edi,DWORD PTR [ebp-0x8]
30004483:	sub    edi,DWORD PTR [ebp-0x4]
30004486:	mov    esi,DWORD PTR [eax-0xc]
30004489:	imul   edi,ebx
3000448c:	add    edi,esi
3000448e:	mov    DWORD PTR [ebp-0x24],edi
30004491:	mov    eax,edi
30004493:	cmp    edi,esi
30004495:	jle    0x30006d0a
3000449b:	mov    ecx,DWORD PTR [ebp-0x10]
3000449e:	push   eax
3000449f:	call   0x30004286
300044a4:	lea    ecx,[eax+esi*2]
300044a7:	mov    DWORD PTR [ebp-0x1c],eax
300044aa:	mov    ebx,eax
300044ac:	mov    DWORD PTR [ebp-0x20],ecx
300044af:	cmp    eax,ecx
300044b1:	jae    0x3000454f
300044b7:	mov    edi,esi
300044b9:	push   DWORD PTR [ebp+0x8]
300044bc:	push   ebx
300044bd:	call   DWORD PTR ds:0x3004531c
300044c3:	mov    edx,eax
300044c5:	pop    ecx
300044c6:	pop    ecx
300044c7:	mov    DWORD PTR [ebp-0xc],edx
300044ca:	test   edx,edx
300044cc:	je     0x30004536
300044ce:	mov    eax,DWORD PTR [ebp-0x8]
300044d1:	lea    ebx,[eax+eax*1]
300044d4:	mov    DWORD PTR [ebp-0x14],ebx
300044d7:	mov    eax,edx
300044d9:	sub    eax,DWORD PTR [ebp-0x1c]
300044dc:	mov    esi,edi
300044de:	sar    eax,1
300044e0:	sub    esi,eax
300044e2:	mov    eax,DWORD PTR [ebp-0x4]
300044e5:	sub    esi,eax
300044e7:	lea    eax,[edx+eax*2]
300044ea:	lea    ecx,[esi+esi*1]
300044ed:	push   ecx
300044ee:	push   eax
300044ef:	add    ebx,edx
300044f1:	push   ecx
300044f2:	push   ebx
300044f3:	call   0x30006cea
300044f8:	mov    eax,DWORD PTR [ebp-0x14]
300044fb:	push   eax
300044fc:	push   DWORD PTR [ebp+0xc]
300044ff:	push   eax
30004500:	push   DWORD PTR [ebp-0xc]
30004503:	call   0x30001444
30004508:	mov    edx,DWORD PTR [ebp-0x8]
3000450b:	mov    ecx,DWORD PTR [ebp-0xc]
3000450e:	push   DWORD PTR [ebp+0x8]
30004511:	lea    eax,[esi+edx*1]
30004514:	sub    edx,DWORD PTR [ebp-0x4]
30004517:	xor    esi,esi
30004519:	push   ebx
3000451a:	mov    WORD PTR [ecx+eax*2],si
3000451e:	add    edi,edx
30004520:	call   DWORD PTR ds:0x3004531c
30004526:	mov    edx,eax
30004528:	add    esp,0x28
3000452b:	mov    DWORD PTR [ebp-0xc],eax
3000452e:	test   edx,edx
30004530:	jne    0x3000b717
30004536:	push   ebx
30004537:	call   0x300043c9
3000453c:	lea    ebx,[ebx+eax*2]
3000453f:	add    ebx,0x2
30004542:	pop    ecx
30004543:	cmp    ebx,DWORD PTR [ebp-0x20]
30004546:	jb     0x300044b9
3000454c:	mov    edi,DWORD PTR [ebp-0x24]
3000454f:	mov    ecx,DWORD PTR [ebp-0x10]
30004552:	push   edi
30004553:	call   0x30004147
30004558:	mov    ebx,DWORD PTR [ebp-0x18]
3000455b:	pop    esi
3000455c:	mov    eax,ebx
3000455e:	pop    ebx
3000455f:	pop    edi
30004560:	leave  
30004561:	ret    0x8
30004564:	push   esi
30004565:	mov    esi,ecx
30004567:	xor    eax,eax
30004569:	mov    ecx,DWORD PTR [esi]
3000456b:	sub    ecx,0x10
3000456e:	push   edi
3000456f:	mov    edi,DWORD PTR [ecx]
30004571:	cmp    DWORD PTR [ecx+0x4],eax
30004574:	jne    0x30008fcf
3000457a:	pop    edi
3000457b:	pop    esi
3000457c:	ret    
3000457d:	call   0x30004564
30004582:	jmp    0x300041cb
30004587:	nop
30004588:	or     al,0xbd
3000458a:	add    dh,BYTE PTR [eax]
3000458c:	mov    esi,0xb4300045
30004591:	inc    ebp
30004592:	add    BYTE PTR [eax],dh
30004594:	std    
30004595:	inc    esi
30004596:	add    BYTE PTR [eax],dh
30004598:	add    DWORD PTR [edi+0x0],esp
3000459b:	xor    BYTE PTR [ecx+0x24300072],cl
300045a1:	add    BYTE PTR fs:[eax],dh
300045a4:	pushf  
300045a5:	push   ebx
300045a6:	add    BYTE PTR [eax],dh
300045a8:	xchg   esp,eax
300045a9:	icebp  
300045aa:	add    dh,BYTE PTR [eax]
300045ac:	mov    esp,0xa03002f1
300045b1:	add    BYTE PTR [bx+si],dh
300045b4:	sub    DWORD PTR [esp+0x4],0x48
300045b9:	jmp    0x3000104c
300045be:	sub    DWORD PTR [esp+0x4],0x48
300045c3:	jmp    0x30001066
300045c8:	push   eax
300045c9:	push   DWORD PTR fs:0x0
300045d0:	lea    eax,[esp+0xc]
300045d4:	sub    esp,DWORD PTR [esp+0xc]
300045d8:	push   ebx
300045d9:	push   esi
300045da:	push   edi
300045db:	mov    DWORD PTR [eax],ebp
300045dd:	mov    ebp,eax
300045df:	mov    eax,ds:0x30043050
300045e4:	xor    eax,ebp
300045e6:	push   eax
300045e7:	mov    DWORD PTR [ebp-0x10],eax
300045ea:	push   DWORD PTR [ebp-0x4]
300045ed:	mov    DWORD PTR [ebp-0x4],0xffffffff
300045f4:	lea    eax,[ebp-0xc]
300045f7:	mov    fs:0x0,eax
300045fd:	ret    
300045fe:	mov    ecx,DWORD PTR [ebp-0x10]
30004601:	xor    ecx,ebp
30004603:	call   0x3000115c
30004608:	jmp    0x3000119d
3000460d:	pop    ebp
3000460e:	ret    
3000460f:	jmp    DWORD PTR ds:0x300452ac
30004615:	push   0x4
30004617:	mov    eax,0x3003ceca
3000461c:	call   0x3000116a
30004621:	mov    eax,ds:0x30043094
30004626:	test   eax,eax
30004628:	je     0x3001807b
3000462e:	mov    esi,DWORD PTR ds:0x30043098
30004634:	test   esi,esi
30004636:	je     0x3001a120
3000463c:	mov    eax,esi
3000463e:	call   0x3000119d
30004643:	ret    0x4
30004646:	nop
30004647:	nop
30004648:	push   cs
30004649:	jo     0x3000464c
3000464b:	xor    BYTE PTR [edx+0x46],dh
3000464e:	add    BYTE PTR [eax],dh
30004650:	sbb    al,0xa4
30004652:	add    esi,DWORD PTR [eax]
30004654:	sbb    BYTE PTR [ebx+0x70433003],ah
3000465a:	add    DWORD PTR [eax],esi
3000465c:	push   ebp
3000465d:	mov    ebp,esp
3000465f:	mov    edx,DWORD PTR [ebp+0x8]
30004662:	inc    DWORD PTR [edx]
30004664:	mov    eax,DWORD PTR [edx]
30004666:	cmp    eax,DWORD PTR [ecx]
30004668:	jge    0x30004996
3000466e:	pop    ebp
3000466f:	ret    0x4
30004672:	push   0x2c
30004674:	mov    eax,0x3003d4e8
30004679:	call   0x300045c8
3000467e:	mov    ebx,ecx
30004680:	mov    eax,DWORD PTR [ebp+0x18]
30004683:	mov    ecx,DWORD PTR [ebp+0x8]
30004686:	mov    edx,DWORD PTR [ebp+0xc]
30004689:	mov    esi,DWORD PTR [ebp+0x10]
3000468c:	mov    edi,DWORD PTR [ebp+0x14]
3000468f:	mov    DWORD PTR [ebp-0x28],eax
30004692:	mov    eax,DWORD PTR [ebp+0x1c]
30004695:	mov    DWORD PTR [ebp-0x2c],eax
30004698:	mov    eax,DWORD PTR [ebx+0x18]
3000469b:	mov    DWORD PTR [ebp-0x24],ecx
3000469e:	mov    DWORD PTR [ebp-0x38],edx
300046a1:	mov    DWORD PTR [ebp-0x30],esi
300046a4:	mov    DWORD PTR [ebp-0x34],edi
300046a7:	cmp    eax,0xa
300046aa:	jl     0x3000d50a
300046b0:	push   DWORD PTR [ebp-0x2c]
300046b3:	inc    eax
300046b4:	push   DWORD PTR [ebp-0x28]
300046b7:	mov    DWORD PTR [ebx+0x18],eax
300046ba:	push   edi
300046bb:	push   esi
300046bc:	push   edx
300046bd:	push   ecx
300046be:	push   eax
300046bf:	lea    ecx,[ebx+0x24]
300046c2:	call   0x30004860
300046c7:	xor    eax,eax
300046c9:	call   0x300045fe
300046ce:	ret    0x18
300046d1:	push   ebp
300046d2:	mov    ebp,esp
300046d4:	push   esi
300046d5:	xor    esi,esi
300046d7:	push   esi
300046d8:	call   0x30004615
300046dd:	mov    ecx,eax
300046df:	test   ecx,ecx
300046e1:	je     0x300277b0
300046e7:	mov    eax,DWORD PTR [ecx]
300046e9:	push   esi
300046ea:	push   esi
300046eb:	push   esi
300046ec:	push   DWORD PTR [ebp+0x10]
300046ef:	push   DWORD PTR [ebp+0xc]
300046f2:	push   DWORD PTR [ebp+0x8]
300046f5:	call   DWORD PTR [eax+0x4]
300046f8:	pop    esi
300046f9:	pop    ebp
300046fa:	ret    0xc
300046fd:	push   ebp
300046fe:	mov    ebp,esp
30004700:	push   DWORD PTR [ebp+0x14]
30004703:	push   DWORD PTR [ebp+0x10]
30004706:	push   DWORD PTR [ebp+0xc]
30004709:	call   0x300046d1
3000470e:	pop    ebp
3000470f:	ret    0x10
30004712:	push   0x21c
30004717:	mov    eax,0x3003d850
3000471c:	call   0x300045c8
30004721:	mov    esi,DWORD PTR [ebp+0x8]
30004724:	xor    edi,edi
30004726:	mov    DWORD PTR [ebp-0x224],edi
3000472c:	mov    eax,ds:0x3004309c
30004731:	mov    DWORD PTR [ebp-0x228],esi
30004737:	mov    ebx,0x3004309c
3000473c:	cmp    DWORD PTR [eax-0xc],edi
3000473f:	je     0x3000d56a
30004745:	push   ebx
30004746:	mov    ecx,esi
30004748:	call   0x30004340
3000474d:	mov    DWORD PTR [ebp-0x4],edi
30004750:	mov    DWORD PTR [ebp-0x224],0x1
3000475a:	mov    eax,esi
3000475c:	call   0x300045fe
30004761:	ret    0x4
30004764:	push   0x4
30004766:	mov    eax,0x3003d6d0
3000476b:	call   0x3000116a
30004770:	mov    ebx,ecx
30004772:	mov    DWORD PTR [ebp-0x10],ebx
30004775:	mov    eax,DWORD PTR [ebp+0x8]
30004778:	push   DWORD PTR [ebp+0x10]
3000477b:	mov    DWORD PTR [ebx],eax
3000477d:	mov    eax,DWORD PTR [ebp+0xc]
30004780:	lea    ecx,[ebx+0x8]
30004783:	mov    DWORD PTR [ebx+0x4],eax
30004786:	call   0x3000437e
3000478b:	xor    esi,esi
3000478d:	mov    DWORD PTR [ebp-0x4],esi
30004790:	push   DWORD PTR [ebp+0x14]
30004793:	lea    ecx,[ebx+0xc]
30004796:	call   0x3000437e
3000479b:	mov    BYTE PTR [ebp-0x4],0x1
3000479f:	push   DWORD PTR [ebp+0x20]
300047a2:	lea    ecx,[ebx+0x18]
300047a5:	mov    DWORD PTR [ebx+0x10],esi
300047a8:	mov    DWORD PTR [ebx+0x14],esi
300047ab:	call   0x3000437e
300047b0:	mov    BYTE PTR [ebp-0x4],0x2
300047b4:	lea    eax,[ebx+0x2c]
300047b7:	push   0x3004306c
300047bc:	mov    ecx,eax
300047be:	mov    DWORD PTR [ebp+0x8],eax
300047c1:	call   0x30004256
300047c6:	mov    BYTE PTR [ebp-0x4],0x4
300047ca:	lea    eax,[ebp+0x8]
300047cd:	push   eax
300047ce:	call   0x30004712
300047d3:	mov    BYTE PTR [ebp-0x4],0x5
300047d7:	push   0x30004858
300047dc:	push   DWORD PTR [eax]
300047de:	lea    ecx,[ebx+0x18]
300047e1:	call   0x300043f1
300047e6:	mov    BYTE PTR [ebp-0x4],0x4
300047ea:	mov    ecx,DWORD PTR [ebp+0x8]
300047ed:	lea    ecx,[ecx-0x10]
300047f0:	call   0x30004017
300047f5:	lea    eax,[ebp+0x8]
300047f8:	push   eax
300047f9:	call   0x30004712
300047fe:	mov    BYTE PTR [ebp-0x4],0x7
30004802:	push   0x30004858
30004807:	push   DWORD PTR [eax]
30004809:	lea    ecx,[ebx+0xc]
3000480c:	call   0x300043f1
30004811:	mov    BYTE PTR [ebp-0x4],0x4
30004815:	mov    ecx,DWORD PTR [ebp+0x8]
30004818:	lea    ecx,[ecx-0x10]
3000481b:	call   0x30004017
30004820:	mov    esi,DWORD PTR [ebp+0x18]
30004823:	test   esi,esi
30004825:	jne    0x30006374
3000482b:	mov    esi,DWORD PTR [ebp+0x1c]
3000482e:	test   esi,esi
30004830:	jne    0x30006398
30004836:	lea    eax,[ebx+0x1c]
30004839:	push   eax
3000483a:	call   DWORD PTR ds:0x30045224
30004840:	test   esi,esi
30004842:	jne    0x300063b0
30004848:	or     DWORD PTR [ebp-0x4],0xffffffff
3000484c:	mov    eax,ebx
3000484e:	call   0x3000119d
30004853:	ret    0x1c
30004856:	nop
30004857:	nop
30004858:	inc    eax
30004859:	add    BYTE PTR [ecx+0x0],cl
3000485c:	inc    esp
3000485d:	add    BYTE PTR [eax],al
3000485f:	add    BYTE PTR [edx+0x4],ch
30004862:	mov    eax,0x3003d8b0
30004867:	call   0x3000116a
3000486c:	mov    esi,ecx
3000486e:	cmp    DWORD PTR [esi+0x8],0x0
30004872:	je     0x30004900
30004878:	push   0x30
3000487a:	call   0x30003fee
3000487f:	pop    ecx
30004880:	mov    DWORD PTR [ebp-0x10],eax
30004883:	and    DWORD PTR [ebp-0x4],0x0
30004887:	test   eax,eax
30004889:	je     0x30004908
3000488b:	push   DWORD PTR [ebp+0x20]
3000488e:	mov    ecx,eax
30004890:	push   DWORD PTR [ebp+0x1c]
30004893:	push   DWORD PTR [ebp+0x18]
30004896:	push   DWORD PTR [ebp+0x14]
30004899:	push   DWORD PTR [ebp+0x10]
3000489c:	push   DWORD PTR [ebp+0xc]
3000489f:	push   DWORD PTR [ebp+0x8]
300048a2:	call   0x30004764
300048a7:	mov    edi,eax
300048a9:	or     DWORD PTR [ebp-0x4],0xffffffff
300048ad:	test   edi,edi
300048af:	je     0x30004900
300048b1:	lea    ebx,[esi+0xc]
300048b4:	lea    ecx,[esi+0x10]
300048b7:	mov    eax,DWORD PTR [ebx]
300048b9:	cmp    eax,DWORD PTR [ecx]
300048bb:	jne    0x300048ed
300048bd:	cmp    DWORD PTR [esi+0x4],0x0
300048c1:	jle    0x300048ed
300048c3:	push   ecx
300048c4:	mov    ecx,esi
300048c6:	call   0x3000465c
300048cb:	mov    ecx,DWORD PTR [ebx]
300048cd:	mov    eax,DWORD PTR [esi+0x8]
300048d0:	dec    DWORD PTR [esi+0x4]
300048d3:	mov    eax,DWORD PTR [eax+ecx*4]
300048d6:	mov    DWORD PTR [ebp+0x20],eax
300048d9:	test   eax,eax
300048db:	je     0x300048ed
300048dd:	mov    ecx,eax
300048df:	call   0x3000490c
300048e4:	push   DWORD PTR [ebp+0x20]
300048e7:	call   0x3000460f
300048ec:	pop    ecx
300048ed:	mov    ecx,DWORD PTR [ebx]
300048ef:	mov    eax,DWORD PTR [esi+0x8]
300048f2:	push   ebx
300048f3:	mov    DWORD PTR [eax+ecx*4],edi
300048f6:	mov    ecx,esi
300048f8:	call   0x3000465c
300048fd:	inc    DWORD PTR [esi+0x4]
30004900:	call   0x3000119d
30004905:	ret    0x1c
30004908:	xor    edi,edi
3000490a:	jmp    0x300048a9
3000490c:	push   0x8
3000490e:	mov    eax,0x3003d75c
30004913:	call   0x3000116a
30004918:	mov    esi,ecx
3000491a:	mov    DWORD PTR [ebp-0x10],esi
3000491d:	mov    DWORD PTR [ebp-0x4],0x3
30004924:	cmp    DWORD PTR [esi+0x14],0x0
30004928:	jne    0x3000499e
3000492a:	cmp    DWORD PTR [esi+0x10],0x0
3000492e:	jne    0x300049a9
30004930:	mov    BYTE PTR [ebp-0x4],0x2
30004934:	lea    ecx,[esi+0x2c]
30004937:	mov    DWORD PTR [ebp-0x14],ecx
3000493a:	mov    BYTE PTR [ebp-0x4],0x2
3000493e:	mov    ecx,DWORD PTR [ecx]
30004940:	sub    ecx,0x10
30004943:	call   0x30004017
30004948:	mov    BYTE PTR [ebp-0x4],0x1
3000494c:	lea    ecx,[esi+0x18]
3000494f:	mov    DWORD PTR [ebp-0x14],ecx
30004952:	mov    BYTE PTR [ebp-0x4],0x1
30004956:	mov    ecx,DWORD PTR [ecx]
30004958:	sub    ecx,0x10
3000495b:	call   0x30004017
30004960:	mov    BYTE PTR [ebp-0x4],0x0
30004964:	lea    ecx,[esi+0xc]
30004967:	mov    DWORD PTR [ebp-0x14],ecx
3000496a:	mov    BYTE PTR [ebp-0x4],0x0
3000496e:	mov    ecx,DWORD PTR [ecx]
30004970:	sub    ecx,0x10
30004973:	call   0x30004017
30004978:	or     DWORD PTR [ebp-0x4],0xffffffff
3000497c:	lea    ecx,[esi+0x8]
3000497f:	mov    DWORD PTR [ebp-0x14],ecx
30004982:	or     DWORD PTR [ebp-0x4],0xffffffff
30004986:	mov    ecx,DWORD PTR [ecx]
30004988:	sub    ecx,0x10
3000498b:	call   0x30004017
30004990:	call   0x3000119d
30004995:	ret    
30004996:	and    DWORD PTR [edx],0x0
30004999:	jmp    0x3000466e
3000499e:	push   DWORD PTR [esi+0x14]
300049a1:	call   0x3000460f
300049a6:	pop    ecx
300049a7:	jmp    0x3000492a
300049a9:	push   DWORD PTR [esi+0x10]
300049ac:	call   0x3000460f
300049b1:	pop    ecx
300049b2:	jmp    0x30004930
300049b7:	push   ebp
300049b8:	mov    ebp,esp
300049ba:	and    esp,0xfffffff8
300049bd:	sub    esp,0x24c
300049c3:	mov    eax,ds:0x30043050
300049c8:	xor    eax,esp
300049ca:	mov    DWORD PTR [esp+0x248],eax
300049d1:	push   ebx
300049d2:	push   esi
300049d3:	mov    esi,DWORD PTR [ebp+0x8]
300049d6:	push   edi
300049d7:	mov    edi,DWORD PTR [ebp+0x10]
300049da:	mov    DWORD PTR [esp+0x14],edi
300049de:	test   edi,edi
300049e0:	je     0x30004db4
300049e6:	mov    ecx,DWORD PTR [ebp+0xc]
300049e9:	lea    eax,[ecx+0x2198]
300049ef:	cmp    eax,0x27
300049f2:	jbe    0x30004da6
300049f8:	push   edi
300049f9:	push   ecx
300049fa:	push   esi
300049fb:	call   0x30006046
30004a00:	mov    ecx,DWORD PTR [esp+0x254]
30004a07:	pop    edi
30004a08:	pop    esi
30004a09:	pop    ebx
30004a0a:	xor    ecx,esp
30004a0c:	call   0x3000115c
30004a11:	mov    esp,ebp
30004a13:	pop    ebp
30004a14:	ret    0xc
30004a17:	push   ebp
30004a18:	mov    ebp,esp
30004a1a:	push   esi
30004a1b:	mov    esi,DWORD PTR [ebp+0xc]
30004a1e:	test   esi,esi
30004a20:	je     0x30004a44
30004a22:	mov    edx,DWORD PTR [ebp+0x10]
30004a25:	test   edx,edx
30004a27:	je     0x30004a44
30004a29:	cmp    BYTE PTR [ecx+0x8],0x0
30004a2d:	mov    eax,DWORD PTR [ecx+0x4]
30004a30:	mov    DWORD PTR [esi],eax
30004a32:	mov    eax,DWORD PTR [ebp+0x8]
30004a35:	mov    DWORD PTR [edx],eax
30004a37:	jne    0x30020e83
30004a3d:	xor    eax,eax
30004a3f:	pop    esi
30004a40:	pop    ebp
30004a41:	ret    0xc
30004a44:	mov    eax,0x80070057
30004a49:	jmp    0x30004a3f
30004a4b:	push   ebp
30004a4c:	mov    ebp,esp
30004a4e:	xor    eax,eax
30004a50:	push   esi
30004a51:	mov    esi,eax
30004a53:	test   edx,edx
30004a55:	je     0x30004a97
30004a57:	push   ebx
30004a58:	push   edi
30004a59:	mov    edi,DWORD PTR [ebp+0xc]
30004a5c:	mov    ebx,0x7ffffffe
30004a61:	sub    edi,ecx
30004a63:	test   ebx,ebx
30004a65:	je     0x30004a7b
30004a67:	movzx  eax,WORD PTR [edi+ecx*1]
30004a6b:	test   ax,ax
30004a6e:	je     0x30004a7b
30004a70:	mov    WORD PTR [ecx],ax
30004a73:	add    ecx,0x2
30004a76:	dec    ebx
30004a77:	inc    esi
30004a78:	dec    edx
30004a79:	jne    0x30004a63
30004a7b:	pop    edi
30004a7c:	pop    ebx
30004a7d:	push   0x0
30004a7f:	pop    eax
30004a80:	test   edx,edx
30004a82:	je     0x30004a97
30004a84:	xor    edx,edx
30004a86:	mov    WORD PTR [ecx],dx
30004a89:	mov    ecx,DWORD PTR [ebp+0x8]
30004a8c:	test   ecx,ecx
30004a8e:	je     0x30004a92
30004a90:	mov    DWORD PTR [ecx],esi
30004a92:	pop    esi
30004a93:	pop    ebp
30004a94:	ret    0xc
30004a97:	sub    ecx,0x2
30004a9a:	dec    esi
30004a9b:	mov    eax,0x8007007a
30004aa0:	jmp    0x30004a84
30004aa2:	push   ebp
30004aa3:	mov    ebp,esp
30004aa5:	push   ecx
30004aa6:	mov    ecx,DWORD PTR [ebp+0x1c]
30004aa9:	push   ebx
30004aaa:	push   esi
30004aab:	xor    eax,eax
30004aad:	mov    edx,ecx
30004aaf:	push   edi
30004ab0:	mov    edi,DWORD PTR [ebp+0xc]
30004ab3:	mov    esi,eax
30004ab5:	mov    ebx,0x80070057
30004aba:	and    edx,0x100
30004ac0:	jne    0x30020dbc
30004ac6:	test   edi,edi
30004ac8:	je     0x30004b69
30004ace:	cmp    edi,0x7fffffff
30004ad4:	ja     0x30004b69
30004ada:	mov    eax,DWORD PTR [ebp+0x8]
30004add:	test   esi,esi
30004adf:	js     0x30004b70
30004ae5:	mov    ebx,edi
30004ae7:	test   edx,edx
30004ae9:	mov    edx,DWORD PTR [ebp+0x10]
30004aec:	mov    DWORD PTR [ebp+0xc],eax
30004aef:	mov    DWORD PTR [ebp-0x4],ebx
30004af2:	jne    0x30020dda
30004af8:	xor    esi,esi
30004afa:	test   ecx,0xffffe000
30004b00:	jne    0x30020dec
30004b06:	xor    ecx,ecx
30004b08:	test   edi,edi
30004b0a:	je     0x30020e35
30004b10:	push   ecx
30004b11:	mov    DWORD PTR [ebp+0xc],ecx
30004b14:	push   edx
30004b15:	lea    ecx,[ebp+0xc]
30004b18:	push   ecx
30004b19:	mov    edx,edi
30004b1b:	mov    ecx,eax
30004b1d:	call   0x30004a4b
30004b22:	mov    ecx,DWORD PTR [ebp+0xc]
30004b25:	mov    esi,eax
30004b27:	mov    eax,DWORD PTR [ebp+0x8]
30004b2a:	mov    ebx,edi
30004b2c:	sub    ebx,ecx
30004b2e:	lea    edx,[eax+ecx*2]
30004b31:	mov    ecx,DWORD PTR [ebp+0x1c]
30004b34:	mov    DWORD PTR [ebp+0xc],edx
30004b37:	mov    DWORD PTR [ebp-0x4],ebx
30004b3a:	test   esi,esi
30004b3c:	js     0x30020dfa
30004b42:	test   ecx,0x200
30004b48:	jne    0x30020e4e
30004b4e:	mov    eax,DWORD PTR [ebp+0x14]
30004b51:	test   eax,eax
30004b53:	je     0x30004b57
30004b55:	mov    DWORD PTR [eax],edx
30004b57:	mov    eax,DWORD PTR [ebp+0x18]
30004b5a:	test   eax,eax
30004b5c:	je     0x30004b60
30004b5e:	mov    DWORD PTR [eax],ebx
30004b60:	pop    edi
30004b61:	mov    eax,esi
30004b63:	pop    esi
30004b64:	pop    ebx
30004b65:	leave  
30004b66:	ret    0x18
30004b69:	mov    esi,ebx
30004b6b:	jmp    0x30004ada
30004b70:	test   edi,edi
30004b72:	jne    0x30020e79
30004b78:	jmp    0x30004b60
30004b7a:	push   ebp
30004b7b:	mov    ebp,esp
30004b7d:	push   ecx
30004b7e:	push   esi
30004b7f:	push   edi
30004b80:	push   0x0
30004b82:	lea    eax,[ebp-0x4]
30004b85:	push   eax
30004b86:	mov    edi,ecx
30004b88:	lea    eax,[ebp+0xc]
30004b8b:	push   eax
30004b8c:	push   DWORD PTR [edi+0x18]
30004b8f:	mov    ecx,0x208
30004b94:	push   ecx
30004b95:	push   DWORD PTR [ebp+0xc]
30004b98:	mov    DWORD PTR [ebp-0x4],ecx
30004b9b:	call   0x30004aa2
30004ba0:	mov    esi,eax
30004ba2:	test   esi,esi
30004ba4:	js     0x30004bce
30004ba6:	mov    eax,DWORD PTR [edi+0x14]
30004ba9:	push   ebx
30004baa:	mov    ebx,DWORD PTR [ebp+0x8]
30004bad:	mov    edi,DWORD PTR [eax-0xc]
30004bb0:	push   ebx
30004bb1:	call   0x300013e8
30004bb6:	cmp    eax,edi
30004bb8:	jbe    0x30004bcb
30004bba:	lea    eax,[ebx+edi*2]
30004bbd:	push   eax
30004bbe:	push   DWORD PTR [ebp-0x4]
30004bc1:	push   DWORD PTR [ebp+0xc]
30004bc4:	call   0x30004c1e
30004bc9:	mov    esi,eax
30004bcb:	mov    eax,esi
30004bcd:	pop    ebx
30004bce:	pop    edi
30004bcf:	pop    esi
30004bd0:	leave  
30004bd1:	ret    0xc
30004bd4:	push   ebp
30004bd5:	mov    ebp,esp
30004bd7:	cmp    DWORD PTR [ebp+0x8],0x80000002
30004bde:	push   ebx
30004bdf:	jne    0x30004beb
30004be1:	test   BYTE PTR [ebp+0xc],0x6
30004be5:	jne    0x30020e8d
30004beb:	mov    bl,0x1
30004bed:	mov    al,bl
30004bef:	pop    ebx
30004bf0:	pop    ebp
30004bf1:	ret    0xc
30004bf4:	push   edi
30004bf5:	push   DWORD PTR [ebp+0x14]
30004bf8:	push   esi
30004bf9:	call   0x300011c1
30004bfe:	mov    ecx,eax
30004c00:	call   0x30004bd4
30004c05:	test   al,al
30004c07:	je     0x300012db
30004c0d:	mov    esi,DWORD PTR [ebp-0x418]
30004c13:	lea    edi,[ebp-0x414]
30004c19:	jmp    0x300012db
30004c1e:	push   ebp
30004c1f:	mov    ebp,esp
30004c21:	mov    ecx,DWORD PTR [ebp+0xc]
30004c24:	push   esi
30004c25:	xor    esi,esi
30004c27:	test   ecx,ecx
30004c29:	je     0x30004c79
30004c2b:	cmp    ecx,0x7fffffff
30004c31:	ja     0x30004c79
30004c33:	test   esi,esi
30004c35:	js     0x30004c8a
30004c37:	mov    edx,DWORD PTR [ebp+0x8]
30004c3a:	xor    esi,esi
30004c3c:	test   ecx,ecx
30004c3e:	je     0x30004c80
30004c40:	push   ebx
30004c41:	mov    ebx,DWORD PTR [ebp+0x10]
30004c44:	push   edi
30004c45:	mov    edi,0x7ffffffe
30004c4a:	sub    edi,ecx
30004c4c:	sub    ebx,edx
30004c4e:	lea    eax,[edi+ecx*1]
30004c51:	test   eax,eax
30004c53:	je     0x30004c67
30004c55:	movzx  eax,WORD PTR [ebx+edx*1]
30004c59:	test   ax,ax
30004c5c:	je     0x30004c67
30004c5e:	mov    WORD PTR [edx],ax
30004c61:	add    edx,0x2
30004c64:	dec    ecx
30004c65:	jne    0x30004c4e
30004c67:	pop    edi
30004c68:	pop    ebx
30004c69:	test   ecx,ecx
30004c6b:	je     0x30004c80
30004c6d:	xor    eax,eax
30004c6f:	mov    WORD PTR [edx],ax
30004c72:	mov    eax,esi
30004c74:	pop    esi
30004c75:	pop    ebp
30004c76:	ret    0xc
30004c79:	mov    esi,0x80070057
30004c7e:	jmp    0x30004c33
30004c80:	sub    edx,0x2
30004c83:	mov    esi,0x8007007a
30004c88:	jmp    0x30004c6d
30004c8a:	test   ecx,ecx
30004c8c:	je     0x30004c72
30004c8e:	jmp    0x3001fac4
30004c93:	push   ebp
30004c94:	mov    ebp,esp
30004c96:	mov    edx,DWORD PTR [ebp+0x8]
30004c99:	push   esi
30004c9a:	mov    esi,DWORD PTR [ebp+0xc]
30004c9d:	xor    ecx,ecx
30004c9f:	mov    eax,DWORD PTR [edx+ecx*4]
30004ca2:	cmp    eax,DWORD PTR [esi+ecx*4]
30004ca5:	je     0x30004cb3
30004ca7:	and    DWORD PTR [ebp+0x8],0x0
30004cab:	mov    al,BYTE PTR [ebp+0x8]
30004cae:	pop    esi
30004caf:	pop    ebp
30004cb0:	ret    0x8
30004cb3:	inc    ecx
30004cb4:	cmp    ecx,0x4
30004cb7:	jne    0x30004c9f
30004cb9:	mov    DWORD PTR [ebp+0x8],0x1
30004cc0:	jmp    0x30004cab
30004cc2:	push   ebp
30004cc3:	mov    ebp,esp
30004cc5:	pop    ebp
30004cc6:	jmp    DWORD PTR ds:0x300430b0
30004ccc:	push   ebp
30004ccd:	mov    ebp,esp
30004ccf:	sub    esp,0x42c
30004cd5:	mov    eax,ds:0x30043050
30004cda:	xor    eax,ebp
30004cdc:	mov    DWORD PTR [ebp-0x4],eax
30004cdf:	mov    eax,DWORD PTR [ebp+0x14]
30004ce2:	and    DWORD PTR [ebp-0x414],0x0
30004ce9:	mov    DWORD PTR [ebp-0x418],eax
30004cef:	mov    eax,DWORD PTR [ebp+0x20]
30004cf2:	push   ebx
30004cf3:	mov    ebx,DWORD PTR [ebp+0xc]
30004cf6:	mov    DWORD PTR [ebp-0x424],eax
30004cfc:	mov    eax,DWORD PTR [ebp+0x24]
30004cff:	push   esi
30004d00:	push   edi
30004d01:	mov    edi,DWORD PTR [ebp+0x8]
30004d04:	mov    DWORD PTR [ebp-0x420],eax
30004d0a:	mov    eax,DWORD PTR [ebp+0x28]
30004d0d:	push   0x40c
30004d12:	mov    DWORD PTR [ebp-0x41c],eax
30004d18:	lea    eax,[ebp-0x410]
30004d1e:	push   0x0
30004d20:	push   eax
30004d21:	call   0x300011b1
30004d26:	mov    esi,DWORD PTR [ebp+0x18]
30004d29:	add    esp,0xc
30004d2c:	lea    eax,[ebp-0x42c]
30004d32:	push   eax
30004d33:	push   ecx
30004d34:	lea    eax,[ebp-0x414]
30004d3a:	push   eax
30004d3b:	lea    eax,[ebp-0x428]
30004d41:	push   eax
30004d42:	push   esi
30004d43:	push   ebx
30004d44:	push   edi
30004d45:	call   0x300011c1
30004d4a:	mov    ecx,eax
30004d4c:	call   0x30001205
30004d51:	test   eax,eax
30004d53:	je     0x30020f10
30004d59:	push   DWORD PTR [ebp-0x41c]
30004d5f:	push   DWORD PTR [ebp-0x420]
30004d65:	push   DWORD PTR [ebp-0x424]
30004d6b:	push   DWORD PTR [ebp+0x1c]
30004d6e:	push   esi
30004d6f:	push   DWORD PTR [ebp-0x418]
30004d75:	push   DWORD PTR [ebp+0x10]
30004d78:	push   ebx
30004d79:	push   edi
30004d7a:	call   DWORD PTR ds:0x300430ac
30004d80:	cmp    eax,0x3fd
30004d85:	je     0x30020f40
30004d8b:	mov    ecx,DWORD PTR [ebp-0x4]
30004d8e:	pop    edi
30004d8f:	pop    esi
30004d90:	xor    ecx,ebp
30004d92:	pop    ebx
30004d93:	call   0x3000115c
30004d98:	leave  
30004d99:	ret    0x24
30004d9c:	push   ebp
30004d9d:	mov    ebp,esp
30004d9f:	pop    ebp
30004da0:	jmp    DWORD PTR ds:0x300430b4
30004da6:	movzx  eax,BYTE PTR [eax+0x30004fcb]
30004dad:	jmp    DWORD PTR [eax*4+0x30004f6f]
30004db4:	mov    eax,0x80004003
30004db9:	jmp    0x30004a00
30004dbe:	push   ecx
30004dbf:	push   DWORD PTR [esi+0x1e8]
30004dc5:	xor    ebx,ebx
30004dc7:	lea    ecx,[esp+0x14]
30004dcb:	mov    DWORD PTR [esp+0x14],ebx
30004dcf:	call   0x300070e4
30004dd4:	cmp    DWORD PTR [esi+0x1e8],ebx
30004dda:	jbe    0x30004e1d
30004ddc:	mov    edi,ebx
30004dde:	mov    eax,DWORD PTR [esi+0x1e4]
30004de4:	lea    ecx,[esp+0x2c]
30004de8:	push   DWORD PTR [eax+edi*4]
30004deb:	call   0x30001488
30004df0:	mov    eax,DWORD PTR [eax]
30004df2:	push   ecx
30004df3:	mov    DWORD PTR [esp+0x14],eax
30004df7:	lea    eax,[esp+0x14]
30004dfb:	push   eax
30004dfc:	push   edi
30004dfd:	lea    ecx,[esp+0x18]
30004e01:	call   0x3000c9e8
30004e06:	push   DWORD PTR [esp+0x2c]
30004e0a:	call   DWORD PTR ds:0x300454e8
30004e10:	inc    edi
30004e11:	cmp    edi,DWORD PTR [esi+0x1e8]
30004e17:	jb     0x30004dde
30004e19:	mov    edi,DWORD PTR [esp+0x14]
30004e1d:	mov    esi,DWORD PTR [esp+0xc]
30004e21:	push   esi
30004e22:	call   DWORD PTR ds:0x30045504
30004e28:	mov    eax,0x2008
30004e2d:	lea    ecx,[esp+0xc]
30004e31:	mov    DWORD PTR [esp+0xc],ebx
30004e35:	mov    DWORD PTR [edi+0x8],esi
30004e38:	mov    WORD PTR [edi],ax
30004e3b:	call   0x30007123
30004e40:	jmp    0x30004ff3
30004e45:	mov    ecx,DWORD PTR [esp+0xc]
30004e49:	add    ecx,0xfffffff0
30004e4c:	call   0x30004017
30004e51:	jmp    0x300088b0
30004e56:	lea    eax,[edi+0x8]
30004e59:	push   eax
30004e5a:	push   DWORD PTR [esi+0x4c]
30004e5d:	push   0x1a
30004e5f:	call   0x3000904c
30004e64:	jmp    0x300053ce
30004e69:	lea    eax,[edi+0x8]
30004e6c:	push   eax
30004e6d:	push   DWORD PTR [esi+0x4c]
30004e70:	push   0x1c
30004e72:	jmp    0x30004e5f
30004e74:	lea    eax,[edi+0x8]
30004e77:	push   eax
30004e78:	push   DWORD PTR [esi+0x4c]
30004e7b:	push   0x23
30004e7d:	jmp    0x30004e5f
30004e7f:	lea    eax,[esp+0x10]
30004e83:	push   eax
30004e84:	call   0x30008fa7
30004e89:	push   DWORD PTR [eax]
30004e8b:	lea    ecx,[esp+0x28]
30004e8f:	call   0x30001488
30004e94:	mov    eax,DWORD PTR [eax]
30004e96:	push   ecx
30004e97:	mov    DWORD PTR [esp+0x18],eax
30004e9b:	lea    eax,[esp+0x18]
30004e9f:	push   eax
30004ea0:	push   esi
30004ea1:	lea    ecx,[esp+0x18]
30004ea5:	call   0x3000c9e8
30004eaa:	push   DWORD PTR [esp+0x24]
30004eae:	inc    esi
30004eaf:	call   DWORD PTR ds:0x300454e8
30004eb5:	cmp    DWORD PTR [esp+0x10],ebx
30004eb9:	je     0x3000716d
30004ebf:	jmp    0x30004e7f
30004ec1:	mov    eax,DWORD PTR [esi]
30004ec3:	and    DWORD PTR [esp+0xc],0x0
30004ec8:	mov    ecx,esi
30004eca:	call   DWORD PTR [eax+0x38]
30004ecd:	test   al,0x1
30004ecf:	je     0x300053e9
30004ed5:	lea    eax,[esp+0xc]
30004ed9:	push   eax
30004eda:	mov    ecx,esi
30004edc:	call   0x3002f76c
30004ee1:	jmp    0x30008869
30004ee6:	mov    eax,DWORD PTR [esi]
30004ee8:	and    DWORD PTR [esp+0xc],0x0
30004eed:	mov    ecx,esi
30004eef:	call   DWORD PTR [eax+0x38]
30004ef2:	shr    eax,1
30004ef4:	test   al,0x1
30004ef6:	je     0x300053e9
30004efc:	lea    eax,[esp+0xc]
30004f00:	push   eax
30004f01:	mov    ecx,esi
30004f03:	call   0x3002f954
30004f08:	jmp    0x30008869
30004f0d:	mov    eax,DWORD PTR [esi]
30004f0f:	and    DWORD PTR [esp+0xc],0x0
30004f14:	mov    ecx,esi
30004f16:	call   DWORD PTR [eax+0x38]
30004f19:	shr    eax,0x2
30004f1c:	test   al,0x1
30004f1e:	je     0x300053e9
30004f24:	lea    eax,[esp+0xc]
30004f28:	push   eax
30004f29:	mov    ecx,esi
30004f2b:	call   0x3002fb4f
30004f30:	jmp    0x30008869
30004f35:	push   0x104
30004f3a:	lea    eax,[esp+0x4c]
30004f3e:	push   eax
30004f3f:	call   0x30039780
30004f44:	test   eax,eax
30004f46:	js     0x30004a00
30004f4c:	push   0x8
30004f4e:	pop    eax
30004f4f:	mov    WORD PTR [edi],ax
30004f52:	lea    eax,[esp+0x48]
30004f56:	push   eax
30004f57:	call   DWORD PTR ds:0x300454dc
30004f5d:	jmp    0x30005313
30004f62:	push   0xb
30004f64:	pop    eax
30004f65:	mov    WORD PTR [edi],ax
30004f68:	xor    eax,eax
30004f6a:	jmp    0x300070db
30004f6f:	bound  ecx,QWORD PTR [edi+0x0]
30004f72:	xor    al,al
30004f74:	push   ebx
30004f75:	add    BYTE PTR [eax],dh
30004f77:	xor    eax,0xd30004f
30004f7c:	dec    edi
30004f7d:	add    BYTE PTR [eax],dh
30004f7f:	test   al,0xca
30004f81:	add    BYTE PTR [eax],dh
30004f83:	jns    0x30004fed
30004f85:	add    BYTE PTR [eax],dh
30004f87:	ror    DWORD PTR [esi+0x0],0x30
30004f8b:	pop    es
30004f8c:	push   ebx
30004f8d:	add    BYTE PTR [eax],dh
30004f8f:	retf   
30004f90:	je     0x30004f92
30004f92:	xor    BYTE PTR [edx],al
30004f94:	jne    0x30004f96
30004f96:	xor    ah,bl
30004f98:	je     0x30004f9a
30004f9a:	xor    BYTE PTR [ebx],dl
30004f9c:	retf   
30004f9d:	add    BYTE PTR [eax],dh
30004f9f:	jle    0x30004f6c
30004fa1:	add    BYTE PTR [eax],dh
30004fa3:	sti    
30004fa4:	push   edi
30004fa5:	add    BYTE PTR [eax],dh
30004fa7:	cmp    DWORD PTR [edi-0x3671d000],0x0
30004fae:	xor    BYTE PTR [ebx+0x343000c9],bh
30004fb4:	rol    BYTE PTR [eax],0x30
30004fb7:	ins    BYTE PTR es:[edi],dx
30004fb8:	rol    BYTE PTR [eax],0x30
30004fbb:	mov    esi,0xe630004d
30004fc0:	dec    esi
30004fc1:	add    BYTE PTR [eax],dh
30004fc3:	inc    esi
30004fc4:	mov    BYTE PTR [eax],al
30004fc6:	xor    al,bh
30004fc8:	dec    ecx
30004fc9:	add    BYTE PTR [eax],dh
30004fcb:	add    BYTE PTR [ecx],al
30004fcd:	add    DWORD PTR [esi],edx
30004fcf:	add    al,BYTE PTR [ebx]
30004fd1:	add    al,0x5
30004fd3:	push   ss
30004fd4:	push   es
30004fd5:	pop    es
30004fd6:	or     BYTE PTR [esi],dl
30004fd8:	or     DWORD PTR [edx],ecx
30004fda:	or     ecx,DWORD PTR [ecx*1+0x16100f0e]
30004fe1:	push   ss
30004fe2:	push   ss
30004fe3:	push   ss
30004fe4:	adc    DWORD PTR [edx],edx
30004fe6:	push   ss
30004fe7:	adc    edx,DWORD PTR [esi]
30004fe9:	push   ss
30004fea:	push   ss
30004feb:	push   ss
30004fec:	push   ss
30004fed:	push   ss
30004fee:	adc    al,0x16
30004ff0:	push   ss
30004ff1:	push   ss
30004ff2:	adc    eax,0x6e9c033
30004ff7:	cli    
30004ff8:	(bad)  
30004ff9:	call   DWORD PTR [eax-0x6f6f6f70]
30004fff:	nop
30005000:	retf   
30005001:	push   0xbef03000
30005006:	add    BYTE PTR [eax],dh
30005008:	dec    dl
3000500a:	add    BYTE PTR [eax],dh
3000500c:	loope  0x30004fcd
3000500e:	add    BYTE PTR [eax],dh
30005010:	aas    
30005011:	pop    eax
30005012:	add    BYTE PTR [eax],dh
30005014:	xlat   BYTE PTR ds:[ebx]
30005015:	retf   
30005016:	add    BYTE PTR [eax],dh
30005018:	pop    ebx
30005019:	jne    0x3000501b
3000501b:	xor    BYTE PTR [ecx-0x35],ch
3000501e:	add    BYTE PTR [eax],dh
30005020:	test   al,0xe4
30005022:	add    BYTE PTR [eax],dh
30005024:	push   es
30005025:	add    esi,DWORD PTR ss:[eax]
30005028:	sub    al,0x18
3000502a:	add    DWORD PTR [eax],esi
3000502c:	cmp    bl,BYTE PTR [eax]
3000502e:	add    DWORD PTR [eax],esi
30005030:	inc    eax
30005031:	jae    0x30005033
30005033:	xor    BYTE PTR [edx+ebx*8+0x2],bl
30005037:	xor    BYTE PTR [ebp-0x5b],al
3000503a:	add    DWORD PTR [eax],esi
3000503c:	shl    BYTE PTR [ebx],cl
3000503e:	add    esi,DWORD PTR [eax]
30005040:	loopne 0x3000502c
30005042:	add    BYTE PTR [eax],dh
30005044:	daa    
30005045:	push   eax
30005046:	add    DWORD PTR [eax],esi
30005048:	call   0xda3051fe
3000504d:	outs   dx,BYTE PTR ds:[esi]
3000504e:	add    DWORD PTR [eax],esi
30005050:	jl     0x3000502c
30005052:	add    dh,BYTE PTR [eax]
30005054:	xor    BYTE PTR [ecx+eax*1],cl
30005057:	xor    BYTE PTR ds:0x90300105,cl
3000505d:	nop
3000505e:	nop
3000505f:	nop
30005060:	retf   
30005061:	push   0xbef03000
30005066:	add    BYTE PTR [eax],dh
30005068:	dec    dl
3000506a:	add    BYTE PTR [eax],dh
3000506c:	loope  0x3000502d
3000506e:	add    BYTE PTR [eax],dh
30005070:	aas    
30005071:	pop    eax
30005072:	add    BYTE PTR [eax],dh
30005074:	xlat   BYTE PTR ds:[ebx]
30005075:	retf   
30005076:	add    BYTE PTR [eax],dh
30005078:	pop    ebx
30005079:	jne    0x3000507b
3000507b:	xor    BYTE PTR [ecx-0x35],ch
3000507e:	add    BYTE PTR [eax],dh
30005080:	test   al,0xe4
30005082:	add    BYTE PTR [eax],dh
30005084:	push   es
30005085:	add    esi,DWORD PTR ss:[eax]
30005088:	sub    al,0x18
3000508a:	add    DWORD PTR [eax],esi
3000508c:	cmp    bl,BYTE PTR [eax]
3000508e:	add    DWORD PTR [eax],esi
30005090:	inc    eax
30005091:	jae    0x30005093
30005093:	xor    BYTE PTR [edx],ch
30005095:	pop    ds
30005096:	add    esi,DWORD PTR [eax]
30005098:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
3000509a:	add    DWORD PTR [eax],esi
3000509c:	shl    BYTE PTR [ebx],cl
3000509e:	add    esi,DWORD PTR [eax]
300050a0:	in     eax,dx
300050a1:	out    0x0,eax
300050a3:	xor    BYTE PTR [edi],ah
300050a5:	push   eax
300050a6:	add    DWORD PTR [eax],esi
300050a8:	call   0xf430525e
300050ad:	outs   dx,BYTE PTR ds:[esi]
300050ae:	add    DWORD PTR [eax],esi
300050b0:	retf   
300050b1:	push   0xbef03000
300050b6:	add    BYTE PTR [eax],dh
300050b8:	dec    dl
300050ba:	add    BYTE PTR [eax],dh
300050bc:	loope  0x3000507d
300050be:	add    BYTE PTR [eax],dh
300050c0:	aas    
300050c1:	pop    eax
300050c2:	add    BYTE PTR [eax],dh
300050c4:	xlat   BYTE PTR ds:[ebx]
300050c5:	retf   
300050c6:	add    BYTE PTR [eax],dh
300050c8:	pop    ebx
300050c9:	jne    0x300050cb
300050cb:	xor    BYTE PTR [ecx-0x35],ch
300050ce:	add    BYTE PTR [eax],dh
300050d0:	test   al,0xe4
300050d2:	add    BYTE PTR [eax],dh
300050d4:	push   es
300050d5:	add    esi,DWORD PTR ss:[eax]
300050d8:	sub    al,0x18
300050da:	add    DWORD PTR [eax],esi
300050dc:	cmp    bl,BYTE PTR [eax]
300050de:	add    DWORD PTR [eax],esi
300050e0:	inc    eax
300050e1:	jae    0x300050e3
300050e3:	xor    BYTE PTR [esi],cl
300050e5:	xor    eax,DWORD PTR [ebx]
300050e7:	xor    dl,dh
300050e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
300050ea:	add    DWORD PTR [eax],esi
300050ec:	shl    BYTE PTR [ebx],cl
300050ee:	add    esi,DWORD PTR [eax]
300050f0:	in     eax,dx
300050f1:	out    0x0,eax
300050f3:	xor    BYTE PTR [edi],ah
300050f5:	push   eax
300050f6:	add    DWORD PTR [eax],esi
300050f8:	call   0xf43052ae
300050fd:	outs   dx,BYTE PTR ds:[esi]
300050fe:	add    DWORD PTR [eax],esi
30005100:	push   ebp
30005101:	mov    ebp,esp
30005103:	cmp    DWORD PTR [ebp+0x8],0x0
30005107:	push   ebx
30005108:	push   edi
30005109:	mov    ebx,ecx
3000510b:	je     0x3001f786
30005111:	push   DWORD PTR [ebp+0xc]
30005114:	push   DWORD PTR [ebp+0x8]
30005117:	call   DWORD PTR ds:0x300452f4
3000511d:	mov    edi,eax
3000511f:	pop    ecx
30005120:	pop    ecx
30005121:	test   edi,edi
30005123:	js     0x3001f77f
30005129:	push   edi
3000512a:	mov    ecx,ebx
3000512c:	call   0x30004286
30005131:	push   DWORD PTR [ebp+0xc]
30005134:	lea    ecx,[edi+0x1]
30005137:	push   DWORD PTR [ebp+0x8]
3000513a:	push   ecx
3000513b:	push   eax
3000513c:	call   DWORD PTR ds:0x300452f8
30005142:	add    esp,0x10
30005145:	mov    ecx,ebx
30005147:	push   edi
30005148:	call   0x30004147
3000514d:	pop    edi
3000514e:	pop    ebx
3000514f:	pop    ebp
30005150:	ret    0x8
30005153:	push   ebp
30005154:	mov    ebp,esp
30005156:	mov    ecx,DWORD PTR [ebp+0x8]
30005159:	lea    eax,[ebp+0x10]
3000515c:	push   eax
3000515d:	push   DWORD PTR [ebp+0xc]
30005160:	call   0x30005100
30005165:	pop    ebp
30005166:	ret    
30005167:	nop
30005168:	push   0x49
3000516a:	add    esi,DWORD PTR [eax]
3000516c:	cs xchg edx,eax
3000516e:	add    BYTE PTR [eax],dh
30005170:	jae    0x300051c9
30005172:	add    BYTE PTR [eax],dh
30005174:	xchg   esi,eax
30005175:	dec    ebx
30005176:	add    esi,DWORD PTR [eax]
30005178:	xchg   BYTE PTR [ebx+eax*1],bh
3000517b:	xor    BYTE PTR [esp+edi*1+0x4c213003],ch
30005182:	add    esi,DWORD PTR [eax]
30005184:	sar    BYTE PTR [ebx+eax*1],cl
30005187:	xor    bl,bl
30005189:	xchg   BYTE PTR [eax],al
3000518b:	xor    bl,bl
3000518d:	xchg   BYTE PTR [eax],al
3000518f:	xor    BYTE PTR [edx+ecx*2-0x525fcffd],bh
30005196:	add    BYTE PTR [eax],dh
30005198:	in     eax,dx
30005199:	add    DWORD PTR gs:[eax],esi
3000519c:	cwde   
3000519d:	sbb    al,0x1
3000519f:	xor    BYTE PTR [ebp-0x74cffe9b],bh
300051a5:	or     DWORD PTR [ebx+0x69e910e9],eax
300051ab:	out    dx,al
300051ac:	(bad)  
300051ad:	call   DWORD PTR [esi-0x75]
300051b0:	icebp  
300051b1:	xor    eax,eax
300051b3:	cmp    DWORD PTR [esi],eax
300051b5:	je     0x300051c2
300051b7:	push   DWORD PTR [esi]
300051b9:	call   DWORD PTR ds:0x30045004
300051bf:	and    DWORD PTR [esi],0x0
300051c2:	and    DWORD PTR [esi+0x4],0x0
300051c6:	pop    esi
300051c7:	ret    
300051c8:	push   esi
300051c9:	push   0x3004306c
300051ce:	mov    esi,ecx
300051d0:	call   0x30004256
300051d5:	mov    eax,esi
300051d7:	pop    esi
300051d8:	ret    
300051d9:	push   ebp
300051da:	mov    ebp,esp
300051dc:	push   ecx
300051dd:	push   esi
300051de:	mov    esi,DWORD PTR [ebp+0x10]
300051e1:	push   edi
300051e2:	lea    eax,[ebp-0x4]
300051e5:	push   eax
300051e6:	xor    edx,edx
300051e8:	push   esi
300051e9:	mov    edi,ecx
300051eb:	push   edx
300051ec:	mov    ecx,DWORD PTR [edi+0x8]
300051ef:	push   DWORD PTR [ebp+0xc]
300051f2:	mov    DWORD PTR [ebp-0x4],edx
300051f5:	push   DWORD PTR [ebp+0x8]
300051f8:	test   ecx,ecx
300051fa:	jne    0x3001f64c
30005200:	call   DWORD PTR ds:0x30045008
30005206:	mov    ecx,eax
30005208:	test   ecx,ecx
3000520a:	jne    0x30005223
3000520c:	mov    ecx,edi
3000520e:	call   0x300051ae
30005213:	mov    ecx,eax
30005215:	mov    eax,DWORD PTR [ebp-0x4]
30005218:	and    esi,0x300
3000521e:	mov    DWORD PTR [edi],eax
30005220:	mov    DWORD PTR [edi+0x4],esi
30005223:	pop    edi
30005224:	mov    eax,ecx
30005226:	pop    esi
30005227:	leave  
30005228:	ret    0xc
3000522b:	nop
3000522c:	and    eax,0x5c007300
30005231:	add    BYTE PTR ds:0x7300,ah
30005237:	add    ch,ch
30005239:	mov    esp,0x524c3002
3000523e:	add    BYTE PTR [eax],dh
30005240:	push   esi
30005241:	push   edx
30005242:	add    BYTE PTR [eax],dh
30005244:	lods   eax,DWORD PTR ds:[esi]
30005245:	mov    edi,0x52863000
3000524a:	add    BYTE PTR [eax],dh
3000524c:	sub    DWORD PTR [esp+0x4],0x4
30005251:	jmp    0x30001066
30005256:	sub    DWORD PTR [esp+0x4],0x4
3000525b:	jmp    0x3000104c
30005260:	cmp    DWORD PTR [ecx+0x38],0x0
30005264:	je     0x30005270
30005266:	push   DWORD PTR [ecx+0x38]
30005269:	call   DWORD PTR ds:0x300451dc
3000526f:	ret    
30005270:	mov    ecx,DWORD PTR ds:0x300435c8
30005276:	test   ecx,ecx
30005278:	jne    0x3001ea22
3000527e:	and    DWORD PTR ds:0x300435c8,0x0
30005285:	ret    
30005286:	push   ebp
30005287:	mov    ebp,esp
30005289:	mov    ecx,DWORD PTR [ebp+0x8]
3000528c:	lea    ecx,[ecx+0x61c]
30005292:	call   0x30005260
30005297:	xor    eax,eax
30005299:	pop    ebp
3000529a:	ret    0x4
3000529d:	nop
3000529e:	nop
3000529f:	nop
300052a0:	jmp    0xbc305357
300052a5:	dec    esi
300052a6:	add    esi,DWORD PTR [eax]
300052a8:	hlt    
300052a9:	mov    ds:0x52c03000,eax
300052ae:	add    BYTE PTR [eax],dh
300052b0:	cs xchg edx,eax
300052b2:	add    BYTE PTR [eax],dh
300052b4:	rcl    BYTE PTR [edx+0x0],0x30
300052b8:	fsub   DWORD PTR [ecx-0x5db8d000]
300052be:	add    BYTE PTR [eax],dh
300052c0:	xor    eax,eax
300052c2:	ret    0x4
300052c5:	je     0x30020bea
300052cb:	cmp    eax,0xffffde6b
300052d0:	je     0x30020b37
300052d6:	cmp    eax,0xffffde74
300052db:	je     0x30020b26
300052e1:	cmp    eax,0xffffde85
300052e6:	je     0x30020b1f
300052ec:	cmp    eax,0xffffde86
300052f1:	je     0x30020ac4
300052f7:	cmp    eax,0xffffde87
300052fc:	jne    0x300060a6
30005302:	jmp    0x30020a73
30005307:	push   0x3
30005309:	pop    eax
3000530a:	mov    WORD PTR [edi],ax
3000530d:	mov    eax,DWORD PTR [esi+0x610]
30005313:	mov    DWORD PTR [edi+0x8],eax
30005316:	jmp    0x30004ff3
3000531b:	nop
	...
30005324:	rol    BYTE PTR [eax],0x0
30005327:	add    BYTE PTR [eax],al
30005329:	add    BYTE PTR [eax],al
3000532b:	inc    esi
3000532c:	push   ebp
3000532d:	mov    ebp,esp
3000532f:	cmp    BYTE PTR ds:0x300430fc,0x0
30005336:	je     0x300272f2
3000533c:	mov    eax,ds:0x300430f8
30005341:	test   eax,eax
30005343:	je     0x3000534e
30005345:	push   0x0
30005347:	push   0x0
30005349:	push   DWORD PTR [ebp+0x8]
3000534c:	call   eax
3000534e:	pop    ebp
3000534f:	ret    0x4
30005352:	lea    eax,[ecx+0x8]
30005355:	push   eax
30005356:	call   DWORD PTR ds:0x30045154
3000535c:	ret    
3000535d:	mov    eax,ds:0x30043574
30005362:	test   eax,eax
30005364:	je     0x30006333
3000536a:	jmp    0x30001768
3000536f:	push   ebp
30005370:	mov    ebp,esp
30005372:	push   0x0
30005374:	call   0x30004615
30005379:	mov    ecx,eax
3000537b:	test   ecx,ecx
3000537d:	je     0x300277e2
30005383:	push   DWORD PTR [ebp+0x14]
30005386:	mov    eax,DWORD PTR [ecx]
30005388:	push   0x0
3000538a:	push   0x0
3000538c:	push   DWORD PTR [ebp+0x10]
3000538f:	push   DWORD PTR [ebp+0xc]
30005392:	push   DWORD PTR [ebp+0x8]
30005395:	call   DWORD PTR [eax+0x4]
30005398:	pop    ebp
30005399:	ret    0x10
3000539c:	push   ebp
3000539d:	mov    ebp,esp
3000539f:	push   DWORD PTR [ebp+0x18]
300053a2:	push   DWORD PTR [ebp+0x14]
300053a5:	push   DWORD PTR [ebp+0x10]
300053a8:	push   DWORD PTR [ebp+0xc]
300053ab:	call   0x3000536f
300053b0:	pop    ebp
300053b1:	ret    0x14
300053b4:	mov    DWORD PTR [ebp-0x10],0x1
300053bb:	jmp    0x3000744f
300053c0:	push   0xb
300053c2:	pop    eax
300053c3:	mov    WORD PTR [edi],ax
300053c6:	or     eax,0xffffffff
300053c9:	jmp    0x300070db
300053ce:	test   eax,eax
300053d0:	js     0x30004a00
300053d6:	jmp    0x30004ff3
300053db:	lea    ecx,[esp+0x30]
300053df:	call   0x30007014
300053e4:	jmp    0x300088b0
300053e9:	mov    esi,0x80004001
300053ee:	jmp    0x300088a2
300053f3:	sub    eax,0x1000
300053f8:	test   DWORD PTR [eax],eax
300053fa:	jmp    0x300060fa
300053ff:	push   ebp
30005400:	mov    ebp,esp
30005402:	mov    eax,DWORD PTR [ebp+0xc]
30005405:	shr    eax,0x4
30005408:	inc    eax
30005409:	movzx  eax,ax
3000540c:	push   0x6
3000540e:	push   eax
3000540f:	push   DWORD PTR [ebp+0x8]
30005412:	call   DWORD PTR ds:0x3004518c
30005418:	test   eax,eax
3000541a:	je     0x30005428
3000541c:	push   DWORD PTR [ebp+0xc]
3000541f:	push   eax
30005420:	push   DWORD PTR [ebp+0x8]
30005423:	call   0x3000542c
30005428:	pop    ebp
30005429:	ret    0x8
3000542c:	push   ebp
3000542d:	mov    ebp,esp
3000542f:	push   DWORD PTR [ebp+0xc]
30005432:	push   DWORD PTR [ebp+0x8]
30005435:	call   DWORD PTR ds:0x30045188
3000543b:	test   eax,eax
3000543d:	je     0x30005482
3000543f:	push   esi
30005440:	push   eax
30005441:	call   DWORD PTR ds:0x30045180
30005447:	mov    esi,eax
30005449:	test   esi,esi
3000544b:	je     0x30005486
3000544d:	push   DWORD PTR [ebp+0xc]
30005450:	push   DWORD PTR [ebp+0x8]
30005453:	call   DWORD PTR ds:0x30045184
30005459:	mov    edx,DWORD PTR [ebp+0x10]
3000545c:	lea    ecx,[esi+eax*1]
3000545f:	and    edx,0xf
30005462:	jbe    0x30005474
30005464:	cmp    esi,ecx
30005466:	jae    0x30005486
30005468:	movzx  eax,WORD PTR [esi]
3000546b:	lea    esi,[esi+eax*2]
3000546e:	add    esi,0x2
30005471:	dec    edx
30005472:	jne    0x30005464
30005474:	cmp    esi,ecx
30005476:	jae    0x30005486
30005478:	movzx  eax,WORD PTR [esi]
3000547b:	neg    eax
3000547d:	sbb    eax,eax
3000547f:	and    eax,esi
30005481:	pop    esi
30005482:	pop    ebp
30005483:	ret    0xc
30005486:	xor    eax,eax
30005488:	jmp    0x30005481
3000548a:	xor    eax,eax
3000548c:	jmp    0x30006964
30005491:	test   edi,edi
30005493:	je     0x300054a2
30005495:	cmp    DWORD PTR [edi],0x0
30005498:	je     0x300054a2
3000549a:	xor    eax,eax
3000549c:	inc    eax
3000549d:	jmp    0x3000694c
300054a2:	cmp    DWORD PTR ds:0x30043118,0x0
300054a9:	jne    0x3000549a
300054ab:	jmp    0x30006929
300054b0:	xor    eax,eax
300054b2:	jmp    0x3000694c
300054b7:	push   ebp
300054b8:	mov    ebp,esp
300054ba:	push   esi
300054bb:	mov    esi,ecx
300054bd:	push   DWORD PTR [esi]
300054bf:	call   DWORD PTR ds:0x300454e8
300054c5:	push   DWORD PTR [ebp+0xc]
300054c8:	and    DWORD PTR [esi],0x0
300054cb:	push   DWORD PTR [ebp+0x8]
300054ce:	call   0x300053ff
300054d3:	test   eax,eax
300054d5:	je     0x300054f2
300054d7:	movzx  ecx,WORD PTR [eax]
300054da:	push   ecx
300054db:	add    eax,0x2
300054de:	push   eax
300054df:	call   DWORD PTR ds:0x300454f0
300054e5:	mov    DWORD PTR [esi],eax
300054e7:	cmp    DWORD PTR [esi],0x0
300054ea:	pop    esi
300054eb:	setne  al
300054ee:	pop    ebp
300054ef:	ret    0x8
300054f2:	and    DWORD PTR [esi],0x0
300054f5:	jmp    0x300054e7
300054f7:	mov    ecx,DWORD PTR [ebp+0x8]
300054fa:	xor    ebx,ebx
300054fc:	mov    eax,DWORD PTR [ecx]
300054fe:	push   ebx
300054ff:	push   ebx
30005500:	call   DWORD PTR [eax+0x2c]
30005503:	push   0x19ea
30005508:	push   DWORD PTR ds:0x300430bc
3000550e:	lea    ecx,[esp+0x18]
30005512:	mov    DWORD PTR [esp+0x18],ebx
30005516:	call   0x300054b7
3000551b:	mov    esi,DWORD PTR [esp+0x10]
3000551f:	push   esi
30005520:	call   DWORD PTR ds:0x300454ec
30005526:	test   eax,eax
30005528:	je     0x300017c3
3000552e:	push   0x8
30005530:	pop    eax
30005531:	mov    DWORD PTR [edi+0x8],esi
30005534:	mov    WORD PTR [edi],ax
30005537:	push   ebx
30005538:	jmp    0x3000699e
3000553d:	nop
3000553e:	nop
3000553f:	nop
30005540:	arpl   WORD PTR ss:[ebx],ax
30005543:	xor    BYTE PTR [esp+eax*8],ch
30005546:	add    DWORD PTR [eax],esi
30005548:	jae    0x300055a1
3000554a:	add    BYTE PTR [eax],dh
3000554c:	pushf  
3000554d:	xchg   ebp,eax
3000554e:	add    BYTE PTR [eax],dh
30005550:	xchg   BYTE PTR [ebx+eax*1],bh
30005553:	xor    BYTE PTR [esp+edi*1-0x18a8cffd],ch
3000555a:	add    BYTE PTR [eax],dh
3000555c:	sar    BYTE PTR [ebx+eax*1],cl
3000555f:	xor    BYTE PTR [edi+0x5e300112],bl
30005565:	xchg   ecx,eax
30005566:	add    BYTE PTR [eax],dh
30005568:	add    BYTE PTR [esi+0x3],bh
3000556b:	xor    BYTE PTR [eax-0x12cfff53],ah
30005571:	add    DWORD PTR gs:[eax],esi
30005574:	inc    ebx
30005575:	sbb    eax,0x65bd3001
3000557a:	add    DWORD PTR [eax],esi
3000557c:	push   esi
3000557d:	add    esi,DWORD PTR fs:[eax]
30005580:	cs xchg edx,eax
30005582:	add    BYTE PTR [eax],dh
30005584:	cs xchg edx,eax
30005586:	add    BYTE PTR [eax],dh
30005588:	push   ss
30005589:	outs   dx,DWORD PTR ds:[esi]
3000558a:	add    DWORD PTR [eax],esi
3000558c:	sub    al,0xc4
3000558e:	add    DWORD PTR [eax],esi
30005590:	jae    0x300055e9
30005592:	add    BYTE PTR [eax],dh
30005594:	pushf  
30005595:	xchg   ebp,eax
30005596:	add    BYTE PTR [eax],dh
30005598:	dec    esp
30005599:	inc    esi
3000559a:	add    esi,DWORD PTR [eax]
3000559c:	cwde   
3000559d:	rol    DWORD PTR [ecx],0x30
300055a0:	push   edi
300055a1:	out    0x0,eax
300055a3:	xor    cl,dh
300055a5:	mov    cl,0x1
300055a7:	xor    BYTE PTR [edi+0x5e300112],bl
300055ad:	xchg   ecx,eax
300055ae:	add    BYTE PTR [eax],dh
300055b0:	pop    eax
300055b1:	mov    ds:0xada03001,al
300055b6:	add    BYTE PTR [eax],dh
300055b8:	in     eax,dx
300055b9:	add    DWORD PTR gs:[eax],esi
300055bc:	inc    ebx
300055bd:	sbb    eax,0x65bd3001
300055c2:	add    DWORD PTR [eax],esi
300055c4:	test   BYTE PTR [edx-0x2718cfff],dh
300055ca:	add    DWORD PTR [eax],esi
300055cc:	and    BYTE PTR ds:[ecx],al
300055cf:	xor    BYTE PTR [esi+0x3c],ah
300055d2:	add    esi,DWORD PTR [eax]
300055d4:	cs xchg edx,eax
300055d6:	add    BYTE PTR [eax],dh
300055d8:	jae    0x30005631
300055da:	add    BYTE PTR [eax],dh
300055dc:	cs xchg edx,eax
300055de:	add    BYTE PTR [eax],dh
300055e0:	xchg   BYTE PTR [ebx+eax*1],bh
300055e3:	xor    BYTE PTR [esp+edi*1-0x4de9cffd],ch
300055ea:	add    DWORD PTR [eax],esi
300055ec:	sar    BYTE PTR [ebx+eax*1],cl
300055ef:	xor    dl,dl
300055f1:	cmp    al,0x3
300055f3:	xor    dl,dl
300055f5:	cmp    al,0x3
300055f7:	xor    BYTE PTR [eax],al
300055f9:	jle    0x300055fe
300055fb:	xor    BYTE PTR [eax-0x12cfff53],ah
30005601:	add    DWORD PTR gs:[eax],esi
30005604:	cwde   
30005605:	sbb    al,0x1
30005607:	xor    BYTE PTR [ebp-0x6fcffe9b],bh
3000560d:	nop
3000560e:	nop
3000560f:	nop
30005610:	sahf   
30005611:	inc    edx
30005612:	add    esi,DWORD PTR [eax]
30005614:	sub    al,0xc4
30005616:	add    DWORD PTR [eax],esi
30005618:	jae    0x30005671
3000561a:	add    BYTE PTR [eax],dh
3000561c:	pushf  
3000561d:	xchg   ebp,eax
3000561e:	add    BYTE PTR [eax],dh
30005620:	inc    eax
30005621:	inc    ebx
30005622:	add    esi,DWORD PTR [eax]
30005624:	sbb    eax,DWORD PTR [ebx+eax*1+0x30]
30005628:	push   edi
30005629:	out    0x0,eax
3000562b:	xor    dl,dl
3000562d:	cmp    al,0x3
3000562f:	xor    BYTE PTR [edi+0x5e300112],bl
30005635:	xchg   ecx,eax
30005636:	add    BYTE PTR [eax],dh
30005638:	in     eax,0x42
3000563a:	add    esi,DWORD PTR [eax]
3000563c:	mov    al,ds:0x503000ad
30005641:	inc    ebp
30005642:	add    esi,DWORD PTR [eax]
30005644:	inc    ebx
30005645:	sbb    eax,0x65bd3001
3000564a:	add    DWORD PTR [eax],esi
3000564c:	push   esi
3000564d:	add    esi,DWORD PTR fs:[eax]
30005650:	cs xchg edx,eax
30005652:	add    BYTE PTR [eax],dh
30005654:	cs xchg edx,eax
30005656:	add    BYTE PTR [eax],dh
30005658:	pushf  
30005659:	inc    ebp
3000565a:	add    esi,DWORD PTR [eax]
3000565c:	sub    al,0xc4
3000565e:	add    DWORD PTR [eax],esi
30005660:	jae    0x300056b9
30005662:	add    BYTE PTR [eax],dh
30005664:	pushf  
30005665:	xchg   ebp,eax
30005666:	add    BYTE PTR [eax],dh
30005668:	xchg   BYTE PTR [ebx+eax*1],bh
3000566b:	xor    BYTE PTR [esp+edi*1-0x18a8cffd],ch
30005672:	add    BYTE PTR [eax],dh
30005674:	sar    BYTE PTR [ebx+eax*1],cl
30005677:	xor    BYTE PTR [edi+0x5e300112],bl
3000567d:	xchg   ecx,eax
3000567e:	add    BYTE PTR [eax],dh
30005680:	ret    0x345
30005683:	xor    BYTE PTR [eax-0x12cfff53],ah
30005689:	add    DWORD PTR gs:[eax],esi
3000568c:	inc    ebx
3000568d:	sbb    eax,0x65bd3001
30005692:	add    DWORD PTR [eax],esi
30005694:	push   esi
30005695:	add    esi,DWORD PTR fs:[eax]
30005698:	cs xchg edx,eax
3000569a:	add    BYTE PTR [eax],dh
3000569c:	cs xchg edx,eax
3000569e:	add    BYTE PTR [eax],dh
300056a0:	inc    ebx
300056a1:	add    BYTE PTR [edi+0x0],ch
300056a4:	outs   dx,BYTE PTR ds:[esi]
300056a5:	add    BYTE PTR [esi+0x0],ah
300056a8:	imul   eax,DWORD PTR [eax],0x500067
300056ae:	imul   eax,DWORD PTR [eax],0x67
300056b1:	add    BYTE PTR [eax+eax*1+0x65],al
300056b5:	add    BYTE PTR [esi+0x0],ah
300056b8:	inc    ebx
300056b9:	add    BYTE PTR [ecx+0x0],ah
300056bc:	arpl   WORD PTR [eax],ax
300056be:	push   0x54006500
300056c3:	add    BYTE PTR [ecx+0x0],ch
300056c6:	ins    DWORD PTR es:[edi],dx
300056c7:	add    BYTE PTR [ebp+0x0],ah
300056ca:	jae    0x300056cc
300056cc:	je     0x300056ce
300056ce:	popa   
300056cf:	add    BYTE PTR [ebp+0x0],ch
300056d2:	jo     0x300056d4
300056d4:	add    BYTE PTR [eax],al
300056d6:	nop
300056d7:	nop
300056d8:	inc    ebp
300056d9:	add    BYTE PTR [eax+0x0],bh
300056dc:	je     0x300056de
300056de:	add    BYTE PTR gs:[esi+0x0],ch
300056e2:	jae    0x300056e4
300056e4:	imul   eax,DWORD PTR [eax],0x6e006f
300056ea:	dec    ebp
300056eb:	add    BYTE PTR [ecx+0x0],ah
300056ee:	outs   dx,BYTE PTR ds:[esi]
300056ef:	add    BYTE PTR [ecx+0x0],ah
300056f2:	add    BYTE PTR [di+0x0],ah
300056f6:	jb     0x300056f8
300056f8:	pop    esp
300056f9:	add    BYTE PTR [ebp+0x0],al
300056fc:	outs   dx,BYTE PTR ds:[esi]
300056fd:	add    BYTE PTR [ecx+0x0],ah
30005700:	bound  eax,QWORD PTR [eax]
30005702:	ins    BYTE PTR es:[edi],dx
30005703:	add    BYTE PTR [ebp+0x0],ah
30005706:	add    BYTE PTR fs:[ebp+0x0],al
3000570a:	js     0x3000570c
3000570c:	je     0x3000570e
3000570e:	add    BYTE PTR gs:[esi+0x0],ch
30005712:	jae    0x30005714
30005714:	imul   eax,DWORD PTR [eax],0x6e006f
3000571a:	jae    0x3000571c
3000571c:	add    BYTE PTR [eax],al
3000571e:	push   ebp
3000571f:	mov    ebp,esp
30005721:	sub    esp,0x10
30005724:	lea    eax,[ebp-0x4]
30005727:	push   eax
30005728:	lea    eax,[ebp-0x10]
3000572b:	push   eax
3000572c:	lea    eax,[ebp-0x8]
3000572f:	push   eax
30005730:	push   0x0
30005732:	push   DWORD PTR [edx]
30005734:	mov    DWORD PTR [ebp-0x4],0x8
3000573b:	push   DWORD PTR [ecx]
3000573d:	call   DWORD PTR ds:0x3004500c
30005743:	test   eax,eax
30005745:	jne    0x30005755
30005747:	cmp    DWORD PTR [ebp-0x8],0xb
3000574b:	jne    0x3002461f
30005751:	xor    eax,eax
30005753:	test   eax,eax
30005755:	jg     0x3001b1f6
3000575b:	test   eax,eax
3000575d:	js     0x3000576f
3000575f:	mov    ecx,DWORD PTR [ebp+0x8]
30005762:	mov    eax,DWORD PTR [ebp-0x10]
30005765:	mov    DWORD PTR [ecx],eax
30005767:	mov    eax,DWORD PTR [ebp-0xc]
3000576a:	mov    DWORD PTR [ecx+0x4],eax
3000576d:	xor    eax,eax
3000576f:	leave  
30005770:	ret    0x4
30005773:	push   ebp
30005774:	mov    ebp,esp
30005776:	sub    esp,0x18
30005779:	push   esi
3000577a:	push   edi
3000577b:	push   0x2001f
30005780:	push   DWORD PTR [ecx+0x48]
30005783:	xor    edi,edi
30005785:	push   0x80000001
3000578a:	lea    ecx,[ebp-0x18]
3000578d:	mov    DWORD PTR [ebp-0xc],edi
30005790:	mov    DWORD PTR [ebp-0x8],edi
30005793:	mov    DWORD PTR [ebp-0x18],edi
30005796:	mov    DWORD PTR [ebp-0x14],edi
30005799:	mov    DWORD PTR [ebp-0x10],edi
3000579c:	call   0x300051d9
300057a1:	test   eax,eax
300057a3:	jg     0x30023894
300057a9:	js     0x300238a3
300057af:	push   0x300056a0
300057b4:	lea    ecx,[ebp-0x4]
300057b7:	call   0x3000437e
300057bc:	lea    eax,[ebp-0xc]
300057bf:	push   eax
300057c0:	lea    edx,[ebp-0x4]
300057c3:	lea    ecx,[ebp-0x18]
300057c6:	call   0x3000571e
300057cb:	lea    ecx,[ebp-0x4]
300057ce:	mov    esi,eax
300057d0:	call   0x300051a4
300057d5:	test   esi,esi
300057d7:	js     0x300238c9
300057dd:	mov    esi,DWORD PTR [ebp+0x8]
300057e0:	mov    ecx,DWORD PTR [ebp-0xc]
300057e3:	mov    DWORD PTR [esi],ecx
300057e5:	mov    ecx,DWORD PTR [ebp-0x8]
300057e8:	mov    DWORD PTR [esi+0x4],ecx
300057eb:	lea    ecx,[ebp-0x18]
300057ee:	call   0x300051ae
300057f3:	pop    edi
300057f4:	mov    eax,esi
300057f6:	pop    esi
300057f7:	leave  
300057f8:	ret    0x4
300057fb:	mov    edx,DWORD PTR [esi+0x5fc]
30005801:	test   edx,edx
30005803:	je     0x300049f8
30005809:	mov    eax,DWORD PTR [edx]
3000580b:	lea    ecx,[esp+0x30]
3000580f:	push   ecx
30005810:	mov    ecx,edx
30005812:	call   DWORD PTR [eax+0x10]
30005815:	test   eax,eax
30005817:	js     0x30004a00
3000581d:	lea    eax,[edi+0x8]
30005820:	push   eax
30005821:	lea    eax,[esp+0x34]
30005825:	push   eax
30005826:	call   DWORD PTR ds:0x30045518
3000582c:	test   eax,eax
3000582e:	js     0x30004a00
30005834:	push   0x7
30005836:	pop    eax
30005837:	mov    WORD PTR [edi],ax
3000583a:	jmp    0x30004ff3
3000583f:	push   ebp
30005840:	mov    ebp,esp
30005842:	sub    esp,0x10
30005845:	cmp    DWORD PTR [ebp+0x8],0x0
30005849:	push   esi
3000584a:	mov    esi,ecx
3000584c:	je     0x30022156
30005852:	mov    ecx,DWORD PTR [esi+0x4]
30005855:	test   ecx,ecx
30005857:	je     0x30022181
3000585d:	mov    eax,DWORD PTR [ecx]
3000585f:	lea    edx,[ebp-0x10]
30005862:	push   edx
30005863:	call   DWORD PTR [eax+0x8]
30005866:	lea    ecx,[ebp-0x4]
30005869:	call   0x300051c8
3000586e:	mov    eax,DWORD PTR [esi+0x4]
30005871:	add    eax,0x44
30005874:	push   eax
30005875:	lea    ecx,[ebp-0x8]
30005878:	call   0x30004340
3000587d:	push   0x300056d8
30005882:	push   DWORD PTR [ebp-0x8]
30005885:	lea    eax,[ebp-0x4]
30005888:	push   0x3000522c
3000588d:	push   eax
3000588e:	call   0x30005153
30005893:	add    esp,0x10
30005896:	lea    ecx,[ebp-0x8]
30005899:	call   0x300051a4
3000589e:	mov    edx,DWORD PTR [ebp-0x4]
300058a1:	call   0x300058df
300058a6:	cmp    edx,DWORD PTR [ebp-0xc]
300058a9:	ja     0x300058d7
300058ab:	jae    0x3002219f
300058b1:	push   DWORD PTR [ebp+0x8]
300058b4:	lea    eax,[ebp-0x10]
300058b7:	push   eax
300058b8:	call   DWORD PTR ds:0x30045100
300058be:	test   eax,eax
300058c0:	je     0x300221ad
300058c6:	xor    esi,esi
300058c8:	lea    ecx,[ebp-0x4]
300058cb:	call   0x300051a4
300058d0:	mov    eax,esi
300058d2:	pop    esi
300058d3:	leave  
300058d4:	ret    0x4
300058d7:	mov    DWORD PTR [ebp-0x10],eax
300058da:	mov    DWORD PTR [ebp-0xc],edx
300058dd:	jmp    0x300058b1
300058df:	push   ebp
300058e0:	mov    ebp,esp
300058e2:	sub    esp,0xc
300058e5:	push   esi
300058e6:	lea    eax,[ebp-0x4]
300058e9:	push   eax
300058ea:	push   0x20019
300058ef:	xor    esi,esi
300058f1:	push   esi
300058f2:	push   edx
300058f3:	push   0x80000001
300058f8:	mov    DWORD PTR [ebp-0xc],esi
300058fb:	mov    DWORD PTR [ebp-0x8],esi
300058fe:	call   DWORD PTR ds:0x30045008
30005904:	test   eax,eax
30005906:	je     0x300246bf
3000590c:	mov    eax,DWORD PTR [ebp-0xc]
3000590f:	mov    edx,DWORD PTR [ebp-0x8]
30005912:	pop    esi
30005913:	leave  
30005914:	ret    
30005915:	push   ebp
30005916:	mov    ebp,esp
30005918:	sub    esp,0x350
3000591e:	mov    eax,ds:0x30043050
30005923:	xor    eax,ebp
30005925:	mov    DWORD PTR [ebp-0x8],eax
30005928:	push   ebx
30005929:	push   esi
3000592a:	mov    esi,ecx
3000592c:	push   edi
3000592d:	test   esi,esi
3000592f:	je     0x30021998
30005935:	xor    edi,edi
30005937:	push   0x3000e4f0
3000593c:	lea    ecx,[esi+0xc]
3000593f:	mov    DWORD PTR [esi],edx
30005941:	mov    DWORD PTR [esi+0x4],edi
30005944:	call   0x3000ba0d
30005949:	push   0xfc
3000594e:	lea    eax,[ebp-0x340]
30005954:	push   edi
30005955:	push   eax
30005956:	mov    DWORD PTR [ebp-0x344],edi
3000595c:	call   0x300011b1
30005961:	mov    edx,DWORD PTR [ebp+0x8]
30005964:	lea    eax,[ebp-0x258]
3000596a:	mov    DWORD PTR [ebp-0x240],eax
30005970:	add    esp,0xc
30005973:	lea    eax,[ebp-0x254]
30005979:	mov    DWORD PTR [ebp-0x238],eax
3000597f:	lea    eax,[ebp-0x350]
30005985:	push   edi
30005986:	push   DWORD PTR [ebp+0xc]
30005989:	mov    DWORD PTR [ebp-0x230],eax
3000598f:	lea    eax,[ebp-0x348]
30005995:	lea    ecx,[ebp-0x344]
3000599b:	mov    DWORD PTR [ebp-0x34c],edi
300059a1:	mov    DWORD PTR [ebp-0x350],edi
300059a7:	mov    DWORD PTR [ebp-0x348],edi
300059ad:	mov    DWORD PTR [ebp-0x244],0x30005aa4
300059b7:	mov    DWORD PTR [ebp-0x23c],edi
300059bd:	mov    DWORD PTR [ebp-0x234],0x30005a8c
300059c7:	mov    DWORD PTR [ebp-0x22c],edi
300059cd:	mov    DWORD PTR [ebp-0x228],eax
300059d3:	mov    DWORD PTR [ebp-0x224],edi
300059d9:	mov    DWORD PTR [ebp-0x220],edi
300059df:	mov    DWORD PTR [ebp-0x21c],edi
300059e5:	mov    DWORD PTR [ebp-0x218],edi
300059eb:	call   0x30017ec1
300059f0:	mov    edi,eax
300059f2:	test   edi,edi
300059f4:	js     0x30005a61
300059f6:	mov    edx,DWORD PTR [ebp-0x324]
300059fc:	lea    eax,[ebp-0x34c]
30005a02:	push   eax
30005a03:	push   0x0
30005a05:	lea    eax,[ebp-0x320]
30005a0b:	push   eax
30005a0c:	lea    eax,[ebp-0x244]
30005a12:	push   eax
30005a13:	mov    ecx,0x3000e4f0
30005a18:	call   0x30018695
30005a1d:	mov    eax,DWORD PTR [ebp-0x258]
30005a23:	push   DWORD PTR [ebp-0x254]
30005a29:	lea    ecx,[esi+0x8]
30005a2c:	mov    DWORD PTR [esi+0x4],eax
30005a2f:	call   0x3000ba0d
30005a34:	mov    eax,DWORD PTR [ebp-0x348]
30005a3a:	test   eax,eax
30005a3c:	jne    0x30005a7f
30005a3e:	lea    ecx,[ebp-0x214]
30005a44:	call   0x30017f51
30005a49:	cmp    WORD PTR [ebp-0x214],0x0
30005a51:	jne    0x300219a2
30005a57:	mov    eax,DWORD PTR [ebp-0x348]
30005a5d:	test   eax,eax
30005a5f:	jne    0x30005a7f
30005a61:	lea    ecx,[ebp-0x344]
30005a67:	call   0x3001690e
30005a6c:	mov    eax,edi
30005a6e:	mov    ecx,DWORD PTR [ebp-0x8]
30005a71:	pop    edi
30005a72:	pop    esi
30005a73:	xor    ecx,ebp
30005a75:	pop    ebx
30005a76:	call   0x3000115c
30005a7b:	leave  
30005a7c:	ret    0xc
30005a7f:	push   eax
30005a80:	lea    ecx,[esi+0xc]
30005a83:	call   0x300062d8
30005a88:	jmp    0x30005a61
30005a8a:	nop
30005a8b:	nop
30005a8c:	push   edx
30005a8d:	add    BYTE PTR [edi+0x0],ch
30005a90:	outs   dx,DWORD PTR ds:[esi]
30005a91:	add    BYTE PTR [eax+eax*1+0x53],dh
30005a95:	add    BYTE PTR [ebp+0x0],dh
30005a98:	data16 add BYTE PTR [esi+0x0],ah
30005a9c:	imul   eax,DWORD PTR [eax],0x78
30005aa2:	nop
30005aa3:	nop
30005aa4:	ins    BYTE PTR es:[edi],dx
30005aa5:	add    BYTE PTR [edi+0x0],ch
30005aa8:	add    BYTE PTR [bx+si],al
30005aab:	add    BYTE PTR [eax+0x8],ch
30005aae:	pop    ebx
30005aaf:	add    BYTE PTR [eax],dh
30005ab1:	push   DWORD PTR [ebx]
30005ab3:	call   0x30009275
30005ab8:	pop    ecx
30005ab9:	pop    ecx
30005aba:	test   eax,eax
30005abc:	je     0x300212e7
30005ac2:	mov    eax,DWORD PTR [ebx+0x4]
30005ac5:	test   eax,eax
30005ac7:	je     0x30005acf
30005ac9:	mov    DWORD PTR [eax],0x1
30005acf:	cmp    DWORD PTR [ebx+0xc],0x0
30005ad3:	mov    ecx,DWORD PTR [ebx+0x8]
30005ad6:	mov    DWORD PTR [ebp-0x10],ecx
30005ad9:	je     0x3001e1aa
30005adf:	mov    eax,DWORD PTR [ebx+0xc]
30005ae2:	mov    DWORD PTR [ebp-0x8],eax
30005ae5:	cmp    ecx,0x8
30005ae8:	je     0x3001e13f
30005aee:	cmp    ecx,0xb
30005af1:	je     0x3001e13f
30005af7:	cmp    ecx,0xa
30005afa:	jne    0x3001e164
30005b00:	push   0x4
30005b02:	pop    ebx
30005b03:	jmp    0x300187a5
30005b08:	jb     0x30005b0a
30005b0a:	je     0x30005b0c
30005b0c:	add    BYTE PTR [eax],al
30005b0e:	nop
30005b0f:	nop
30005b10:	ins    DWORD PTR es:[edi],dx
30005b11:	add    BYTE PTR [eax+eax*1+0x69],ah
30005b15:	add    BYTE PTR [eax],al
30005b17:	add    BYTE PTR [ebp+0x0],ch
30005b1a:	add    BYTE PTR fs:[ecx+0x0],ch
30005b1e:	je     0x30005b20
30005b20:	popa   
30005b21:	add    BYTE PTR [edx+0x0],ah
30005b24:	jae    0x30005b26
30005b26:	add    BYTE PTR [eax],al
30005b28:	ins    DWORD PTR es:[edi],dx
30005b29:	add    BYTE PTR [ecx+0x0],ah
30005b2c:	imul   eax,DWORD PTR [eax],0x65
30005b2f:	add    BYTE PTR [eax],al
30005b31:	add    BYTE PTR [eax+0x75006290],dl
30005b37:	add    BYTE PTR [ecx+0x0],ch
30005b3a:	ins    BYTE PTR es:[edi],dx
30005b3b:	add    BYTE PTR [eax+eax*1+0x0],ah
30005b3f:	add    BYTE PTR [ebp+0x0],ch
30005b42:	add    BYTE PTR [eax],al
30005b44:	outs   dx,DWORD PTR ds:[esi]
30005b45:	add    BYTE PTR [ebp+0x0],dh
30005b48:	je     0x30005b4a
30005b4a:	add    BYTE PTR [eax],al
30005b4c:	jb     0x30005b4e
30005b4e:	add    BYTE PTR gs:[ebx+0x0],dh
30005b52:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
30005b57:	add    BYTE PTR [ebx+0x0],dh
30005b5a:	add    BYTE PTR gs:[edx+0x0],dh
30005b5e:	add    BYTE PTR fs:[ecx+0x0],ah
30005b62:	je     0x30005b64
30005b64:	popa   
30005b65:	add    BYTE PTR [eax],al
30005b67:	add    BYTE PTR [ebx+0x0],dh
30005b6a:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
30005b6f:	add    BYTE PTR [eax+0x0],dh
30005b72:	add    BYTE PTR [eax],al
30005b74:	add    BYTE PTR fs:[eax+eax*1+0x65],ah
30005b79:	add    BYTE PTR [eax],al
30005b7b:	add    BYTE PTR [edx+0x0],dh
30005b7e:	jne    0x30005b80
30005b80:	outs   dx,BYTE PTR ds:[esi]
30005b81:	add    BYTE PTR [eax],al
30005b83:	add    BYTE PTR [edx+0x0],dh
30005b86:	add    BYTE PTR [eax],al
30005b88:	jb     0x30005b8a
30005b8a:	jne    0x30005b8c
30005b8c:	outs   dx,BYTE PTR ds:[esi]
30005b8d:	add    BYTE PTR [ebp+0x0],ah
30005b90:	js     0x30005b92
30005b92:	imul   eax,DWORD PTR [eax],0x74
30005b98:	jb     0x30005b9a
30005b9a:	add    BYTE PTR gs:[edi+0x0],ah
30005b9e:	jae    0x30005ba0
30005ba0:	add    BYTE PTR gs:[edx+0x0],dh
30005ba4:	jbe    0x30005ba6
30005ba6:	add    BYTE PTR gs:[edx+0x0],dh
30005baa:	add    BYTE PTR [eax],al
30005bac:	jne    0x30005bae
30005bae:	outs   dx,BYTE PTR ds:[esi]
30005baf:	add    BYTE PTR [edx+0x0],dh
30005bb2:	add    BYTE PTR gs:[edi+0x0],ah
30005bb6:	jae    0x30005bb8
30005bb8:	add    BYTE PTR gs:[edx+0x0],dh
30005bbc:	jbe    0x30005bbe
30005bbe:	add    BYTE PTR gs:[edx+0x0],dh
30005bc2:	add    BYTE PTR [eax],al
30005bc4:	jbe    0x30005bc6
30005bc6:	jae    0x30005bc8
30005bc8:	jne    0x30005bca
30005bca:	outs   dx,BYTE PTR ds:[esi]
30005bcb:	add    BYTE PTR [ecx+0x0],ch
30005bce:	outs   dx,BYTE PTR ds:[esi]
30005bcf:	add    BYTE PTR [ebx+0x0],dh
30005bd2:	je     0x30005bd4
30005bd4:	popa   
30005bd5:	add    BYTE PTR [eax+eax*1+0x6c],ch
30005bd9:	add    BYTE PTR [eax],al
30005bdb:	add    BYTE PTR [ebp+0x0],ah
30005bde:	ins    DWORD PTR es:[edi],dx
30005bdf:	add    BYTE PTR [edx+0x0],ah
30005be2:	add    BYTE PTR gs:[eax+eax*1+0x64],ah
30005be7:	add    BYTE PTR [ecx+0x0],ch
30005bea:	outs   dx,BYTE PTR ds:[esi]
30005beb:	add    BYTE PTR [edi+0x0],ah
30005bee:	add    BYTE PTR [eax],al
30005bf0:	dec    edx
30005bf1:	add    BYTE PTR [ecx+0x0],cl
30005bf4:	push   esp
30005bf5:	add    BYTE PTR [eax+eax*1+0x65],al
30005bf9:	add    BYTE PTR [edx+0x0],ah
30005bfc:	jne    0x30005bfe
30005bfe:	add    BYTE PTR [bx+si],al
30005c01:	add    BYTE PTR [eax+0x65005390],dl
30005c07:	add    BYTE PTR [eax+eax*1+0x66],ch
30005c0b:	add    BYTE PTR [eax+eax*1+0x65],al
30005c0f:	add    BYTE PTR [edx+0x0],ah
30005c12:	jne    0x30005c14
30005c14:	add    BYTE PTR [bx+si],al
30005c17:	add    BYTE PTR [eax+0x0],dh
30005c1a:	jb     0x30005c1c
30005c1c:	outs   dx,DWORD PTR ds:[esi]
30005c1d:	add    BYTE PTR [edx+0x0],ch
30005c20:	add    BYTE PTR gs:[ebx+0x0],ah
30005c24:	je     0x30005c26
30005c26:	add    BYTE PTR [eax],al
30005c28:	jo     0x30005c2a
30005c2a:	jb     0x30005c2c
30005c2c:	outs   dx,DWORD PTR ds:[esi]
30005c2d:	add    BYTE PTR [edx+0x0],ch
30005c30:	add    BYTE PTR gs:[ebx+0x0],ah
30005c34:	je     0x30005c36
30005c36:	arpl   WORD PTR [eax],ax
30005c38:	outs   dx,DWORD PTR ds:[esi]
30005c39:	add    BYTE PTR [esi+0x0],ch
30005c3c:	data16 add BYTE PTR [ecx+0x0],ch
30005c40:	add    BYTE PTR [bx+si],al
30005c43:	add    BYTE PTR [eax+eax*1+0x43],cl
30005c47:	add    BYTE PTR [ecx+0x0],cl
30005c4a:	inc    esp
30005c4b:	add    BYTE PTR [eax],al
30005c4d:	add    BYTE PTR [eax+0x6c90],dl
30005c53:	add    BYTE PTR [eax+eax*1+0x65],ah
30005c57:	add    BYTE PTR [edx+0x0],ah
30005c5a:	jne    0x30005c5c
30005c5c:	add    BYTE PTR [bx+si],al
30005c5f:	add    BYTE PTR [edx+0x0],dh
30005c62:	add    BYTE PTR gs:[eax+eax*1+0x65],ch
30005c67:	add    BYTE PTR [ecx+0x0],ah
30005c6a:	jae    0x30005c6c
30005c6c:	add    BYTE PTR gs:[eax],al
30005c6f:	add    BYTE PTR [eax+eax*1+0x65],ah
30005c73:	add    BYTE PTR [eax+0x0],dh
30005c76:	ins    BYTE PTR es:[edi],dx
30005c77:	add    BYTE PTR [edi+0x0],ch
30005c7a:	jns    0x30005c7c
30005c7c:	add    BYTE PTR [eax],al
30005c7e:	nop
30005c7f:	nop
30005c80:	jb     0x30005c82
30005c82:	add    BYTE PTR gs:[edx+0x0],ah
30005c86:	jne    0x30005c88
30005c88:	imul   eax,DWORD PTR [eax],0x64006c
30005c8e:	add    BYTE PTR [eax],al
30005c90:	arpl   WORD PTR [eax],ax
30005c92:	ins    BYTE PTR es:[edi],dx
30005c93:	add    BYTE PTR [ebp+0x0],ah
30005c96:	popa   
30005c97:	add    BYTE PTR [esi+0x0],ch
30005c9a:	add    BYTE PTR [eax],al
30005c9c:	jne    0x30005c9e
30005c9e:	jo     0x30005ca0
30005ca0:	add    BYTE PTR [bp+si+0x0],dh
30005ca4:	popa   
30005ca5:	add    BYTE PTR [eax+eax*1+0x65],ah
30005ca9:	add    BYTE PTR [eax],al
30005cab:	add    BYTE PTR [edx+0x0],dl
30005cae:	inc    ecx
30005caf:	add    BYTE PTR [esi+0x0],cl
30005cb2:	push   ebp
30005cb3:	add    BYTE PTR [eax],al
30005cb5:	add    BYTE PTR [eax+0x70007390],dl
30005cbb:	add    BYTE PTR [eax+eax*1+0x61],ch
30005cbf:	add    BYTE PTR [ebx+0x0],dh
30005cc2:	push   0x90000000
30005cc7:	nop
30005cc8:	outs   dx,BYTE PTR ds:[esi]
30005cc9:	add    BYTE PTR [edi+0x0],ch
30005ccc:	jae    0x30005cce
30005cce:	jo     0x30005cd0
30005cd0:	ins    BYTE PTR es:[edi],dx
30005cd1:	add    BYTE PTR [ecx+0x0],ah
30005cd4:	jae    0x30005cd6
30005cd6:	push   0x90000000
30005cdb:	nop
30005cdc:	add    BYTE PTR fs:[ebp+0x0],dh
30005ce0:	ins    DWORD PTR es:[edi],dx
30005ce1:	add    BYTE PTR [eax+0x0],dh
30005ce4:	jbe    0x30005ce6
30005ce6:	add    BYTE PTR gs:[edx+0x0],dh
30005cea:	add    BYTE PTR [eax],al
30005cec:	arpl   WORD PTR [eax],ax
30005cee:	outs   dx,DWORD PTR ds:[esi]
30005cef:	add    BYTE PTR [ebp+0x0],ch
30005cf2:	ins    DWORD PTR es:[edi],dx
30005cf3:	add    BYTE PTR [ecx+0x0],ah
30005cf6:	outs   dx,BYTE PTR ds:[esi]
30005cf7:	add    BYTE PTR [eax+eax*1+0x0],ah
30005cfb:	add    BYTE PTR [edx+0x0],dh
30005cfe:	add    BYTE PTR gs:[ebx+0x0],dh
30005d02:	add    BYTE PTR gs:[eax+eax*1+0x61],dh
30005d07:	add    BYTE PTR [eax+eax*1+0x64],ah
30005d0b:	add    BYTE PTR [ecx+0x0],ch
30005d0e:	outs   dx,BYTE PTR ds:[esi]
30005d0f:	add    BYTE PTR [eax],al
30005d11:	add    BYTE PTR [eax+0x65007290],dl
30005d17:	add    BYTE PTR [ebx+0x0],dh
30005d1a:	add    BYTE PTR gs:[eax+eax*1+0x73],dh
30005d1f:	add    BYTE PTR [ebx+0x0],ch
30005d22:	imul   eax,DWORD PTR [eax],0x700070
30005d28:	imul   eax,DWORD PTR [eax],0x67
30005d2b:	add    BYTE PTR [ebx+0x0],dh
30005d2e:	add    BYTE PTR [eax],al
30005d30:	jae    0x30005d32
30005d32:	popa   
30005d33:	add    BYTE PTR [esi+0x0],ah
30005d36:	add    BYTE PTR gs:[ebp+0x0],ch
30005d3a:	outs   dx,DWORD PTR ds:[esi]
30005d3b:	add    BYTE PTR [eax+eax*1+0x65],ah
30005d3f:	add    BYTE PTR [eax],al
30005d41:	add    BYTE PTR [eax+0x6f006e90],dl
30005d47:	add    BYTE PTR [esi+0x0],dh
30005d4a:	jae    0x30005d4c
30005d4c:	imul   eax,DWORD PTR [eax],0x70
30005d52:	nop
30005d53:	nop
30005d54:	outs   dx,BYTE PTR ds:[esi]
30005d55:	add    BYTE PTR [edi+0x0],ch
30005d58:	ins    BYTE PTR es:[edi],dx
30005d59:	add    BYTE PTR [edi+0x0],ch
30005d5c:	add    BYTE PTR [bx+0x0],ch
30005d60:	add    BYTE PTR [eax],al
30005d62:	nop
30005d63:	nop
30005d64:	outs   dx,BYTE PTR ds:[esi]
30005d65:	add    BYTE PTR [edi+0x0],ch
30005d68:	jbe    0x30005d6a
30005d6a:	jae    0x30005d6c
30005d6c:	ja     0x30005d6e
30005d6e:	add    BYTE PTR [eax],al
30005d70:	push   ebp
30005d71:	add    BYTE PTR [edx+0x0],dh
30005d74:	je     0x30005d76
30005d76:	dec    ecx
30005d77:	add    BYTE PTR [esi+0x0],ch
30005d7a:	jae    0x30005d7c
30005d7c:	je     0x30005d7e
30005d7e:	popa   
30005d7f:	add    BYTE PTR [eax+eax*1+0x6c],ch
30005d83:	add    BYTE PTR [eax],al
30005d85:	add    BYTE PTR [eax+0x65007290],dl
30005d8b:	add    BYTE PTR [ebx+0x0],dh
30005d8e:	add    BYTE PTR gs:[eax+eax*1+0x73],dh
30005d93:	add    BYTE PTR [ebp+0x0],ah
30005d96:	je     0x30005d98
30005d98:	je     0x30005d9a
30005d9a:	imul   eax,DWORD PTR [eax],0x67006e
30005da0:	jae    0x30005da2
30005da2:	add    BYTE PTR [eax],al
30005da4:	jb     0x30005da6
30005da6:	add    BYTE PTR gs:[ebx+0x0],dh
30005daa:	add    BYTE PTR gs:[eax+eax*1+0x73],dh
30005daf:	add    BYTE PTR [ebp+0x0],ah
30005db2:	je     0x30005db4
30005db4:	je     0x30005db6
30005db6:	imul   eax,DWORD PTR [eax],0x67006e
30005dbc:	jae    0x30005dbe
30005dbe:	data16 add BYTE PTR [ebp+0x0],dh
30005dc2:	ins    BYTE PTR es:[edi],dx
30005dc3:	add    BYTE PTR [eax+eax*1+0x0],ch
30005dc7:	add    BYTE PTR [ecx+0x0],ch
30005dca:	outs   dx,BYTE PTR ds:[esi]
30005dcb:	add    BYTE PTR [ebx+0x0],dh
30005dce:	je     0x30005dd0
30005dd0:	popa   
30005dd1:	add    BYTE PTR [eax+eax*1+0x6c],ch
30005dd5:	add    BYTE PTR [esi+0x0],dh
30005dd8:	jae    0x30005dda
30005dda:	je     0x30005ddc
30005ddc:	add    BYTE PTR gs:[ebp+0x0],ch
30005de0:	jo     0x30005de2
30005de2:	ins    BYTE PTR es:[edi],dx
30005de3:	add    BYTE PTR [ecx+0x0],ah
30005de6:	je     0x30005de8
30005de8:	add    BYTE PTR gs:[ebx+0x0],dh
30005dec:	add    BYTE PTR [eax],al
30005dee:	nop
30005def:	nop
30005df0:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
30005df5:	add    BYTE PTR [eax+eax*1+0x0],dh
30005df9:	add    BYTE PTR [eax+0x69006490],dl
30005dff:	add    BYTE PTR [esi+0x0],ah
30005e02:	data16 add BYTE PTR [eax],al
30005e05:	add    BYTE PTR [eax+0x6f006e90],dl
30005e0b:	add    BYTE PTR [ebx+0x0],dh
30005e0e:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
30005e13:	add    BYTE PTR [eax+0x0],dh
30005e16:	jbe    0x30005e18
30005e18:	jae    0x30005e1a
30005e1a:	je     0x30005e1c
30005e1c:	add    BYTE PTR gs:[ebp+0x0],ch
30005e20:	jo     0x30005e22
30005e22:	ins    BYTE PTR es:[edi],dx
30005e23:	add    BYTE PTR [ecx+0x0],ah
30005e26:	je     0x30005e28
30005e28:	add    BYTE PTR gs:[ebx+0x0],dh
30005e2c:	add    BYTE PTR [eax],al
30005e2e:	nop
30005e2f:	nop
30005e30:	jne    0x30005e32
30005e32:	jo     0x30005e34
30005e34:	add    BYTE PTR fs:[ecx+0x0],ah
30005e38:	je     0x30005e3a
30005e3a:	add    BYTE PTR gs:[ebx+0x0],al
30005e3e:	outs   dx,DWORD PTR ds:[esi]
30005e3f:	add    BYTE PTR [esi+0x0],ch
30005e42:	data16 add BYTE PTR [ecx+0x0],ch
30005e46:	add    BYTE PTR [di+0x0],dh
30005e4a:	jb     0x30005e4c
30005e4c:	popa   
30005e4d:	add    BYTE PTR [eax+eax*1+0x69],dh
30005e51:	add    BYTE PTR [edi+0x0],ch
30005e54:	outs   dx,BYTE PTR ds:[esi]
30005e55:	add    BYTE PTR [eax],al
30005e57:	add    BYTE PTR [eax+0x24],ch
30005e5a:	add    al,BYTE PTR [eax]
30005e5c:	add    BYTE PTR [eax+0x3003fb01],bh
30005e62:	call   0x300045c8
30005e67:	mov    edi,ecx
30005e69:	cmp    DWORD PTR [ebp+0x8],0x0
30005e6d:	mov    eax,DWORD PTR [ebp+0xc]
30005e70:	mov    ebx,DWORD PTR [ebp+0x10]
30005e73:	mov    DWORD PTR [ebp-0x230],eax
30005e79:	je     0x30005f97
30005e7f:	test   ebx,ebx
30005e81:	je     0x30005f97
30005e87:	call   0x3002f0e5
30005e8c:	mov    DWORD PTR [ebp-0x22c],eax
30005e92:	test   eax,eax
30005e94:	je     0x30005f97
30005e9a:	xor    esi,esi
30005e9c:	mov    DWORD PTR [ebp-0x228],esi
30005ea2:	mov    DWORD PTR [ebp-0x4],esi
30005ea5:	mov    DWORD PTR [ebp-0x220],esi
30005eab:	mov    DWORD PTR [ebp-0x21c],esi
30005eb1:	mov    edx,DWORD PTR [ebp-0x230]
30005eb7:	mov    BYTE PTR [ebp-0x4],0x2
30005ebb:	mov    eax,ds:0x30005fa4
30005ec0:	mov    ecx,DWORD PTR [edi+0x4c]
30005ec3:	mov    DWORD PTR [ebp-0x224],eax
30005ec9:	lea    eax,[ebp-0x228]
30005ecf:	push   eax
30005ed0:	call   0x300065a7
30005ed5:	mov    edi,DWORD PTR [ebp-0x228]
30005edb:	test   edi,edi
30005edd:	je     0x30005f12
30005edf:	push   0x20019
30005ee4:	push   edi
30005ee5:	push   0x80000002
30005eea:	lea    ecx,[ebp-0x220]
30005ef0:	call   0x300061a4
30005ef5:	test   eax,eax
30005ef7:	js     0x30005f12
30005ef9:	lea    eax,[ebp-0x21c]
30005eff:	push   eax
30005f00:	push   esi
30005f01:	lea    ecx,[ebp-0x220]
30005f07:	call   0x3000bc14
30005f0c:	mov    esi,DWORD PTR [ebp-0x21c]
30005f12:	push   esi
30005f13:	call   DWORD PTR ds:0x300454ec
30005f19:	test   eax,eax
30005f1b:	jne    0x30005f35
30005f1d:	lea    eax,[ebp-0x224]
30005f23:	push   eax
30005f24:	lea    ecx,[ebp-0x21c]
30005f2a:	call   0x3000ba0d
30005f2f:	mov    esi,DWORD PTR [ebp-0x21c]
30005f35:	push   0x104
30005f3a:	lea    eax,[ebp-0x218]
30005f40:	push   eax
30005f41:	call   0x30039780
30005f46:	test   eax,eax
30005f48:	jns    0x30005f63
30005f4a:	lea    eax,[ebp-0x224]
30005f50:	push   eax
30005f51:	lea    eax,[ebp-0x218]
30005f57:	push   0x2
30005f59:	push   eax
30005f5a:	call   DWORD PTR ds:0x300453bc
30005f60:	add    esp,0xc
30005f63:	mov    edx,DWORD PTR [ebp+0x8]
30005f66:	mov    ecx,DWORD PTR [ebp-0x22c]
30005f6c:	push   ebx
30005f6d:	lea    eax,[ebp-0x218]
30005f73:	push   eax
30005f74:	push   esi
30005f75:	call   0x300329f4
30005f7a:	push   esi
30005f7b:	mov    esi,DWORD PTR ds:0x300454e8
30005f81:	mov    ebx,eax
30005f83:	call   esi
30005f85:	lea    ecx,[ebp-0x220]
30005f8b:	call   0x300014b2
30005f90:	push   edi
30005f91:	call   esi
30005f93:	mov    eax,ebx
30005f95:	jmp    0x30005f99
30005f97:	xor    eax,eax
30005f99:	call   0x300045fe
30005f9e:	ret    0xc
30005fa1:	nop
30005fa2:	nop
30005fa3:	nop
30005fa4:	aas    
30005fa5:	add    BYTE PTR [eax],al
30005fa7:	add    BYTE PTR [ebp-0x75],dl
30005faa:	in     al,dx
30005fab:	push   ecx
30005fac:	push   ebx
30005fad:	push   edi
30005fae:	mov    edi,DWORD PTR [ebp+0x10]
30005fb1:	xor    eax,eax
30005fb3:	mov    DWORD PTR [ebp-0x4],eax
30005fb6:	test   edi,edi
30005fb8:	je     0x3000603f
30005fbe:	mov    ebx,DWORD PTR [ebp+0x14]
30005fc1:	test   ebx,ebx
30005fc3:	je     0x3000603f
30005fc5:	mov    DWORD PTR [edi],eax
30005fc7:	mov    DWORD PTR [ebx],eax
30005fc9:	push   esi
30005fca:	mov    esi,0x30043120
30005fcf:	cmp    DWORD PTR ds:0x30043120,eax
30005fd5:	je     0x30005ff0
30005fd7:	push   DWORD PTR [esi]
30005fd9:	push   DWORD PTR [ebp+0xc]
30005fdc:	call   DWORD PTR ds:0x300453cc
30005fe2:	pop    ecx
30005fe3:	pop    ecx
30005fe4:	test   eax,eax
30005fe6:	je     0x30006008
30005fe8:	add    esi,0x10
30005feb:	cmp    DWORD PTR [esi],0x0
30005fee:	jne    0x30005fd7
30005ff0:	mov    esi,DWORD PTR ds:0x300435c4
30005ff6:	test   esi,esi
30005ff8:	jne    0x3001f2b0
30005ffe:	mov    eax,DWORD PTR [ebp-0x4]
30006001:	pop    esi
30006002:	pop    edi
30006003:	pop    ebx
30006004:	leave  
30006005:	ret    0x10
30006008:	mov    eax,DWORD PTR [esi+0x4]
3000600b:	test   eax,eax
3000600d:	je     0x30005ffe
3000600f:	mov    eax,DWORD PTR [eax]
30006011:	mov    DWORD PTR [edi],eax
30006013:	test   eax,eax
30006015:	je     0x30005ffe
30006017:	mov    eax,DWORD PTR [esi+0xc]
3000601a:	test   eax,eax
3000601c:	je     0x30005ffe
3000601e:	push   DWORD PTR [eax]
30006020:	lea    ecx,[ebp+0xc]
30006023:	call   0x30001488
30006028:	mov    eax,DWORD PTR [ebp+0xc]
3000602b:	test   eax,eax
3000602d:	je     0x3001f298
30006033:	mov    DWORD PTR [ebx],eax
30006035:	push   0x0
30006037:	call   DWORD PTR ds:0x300454e8
3000603d:	jmp    0x30005ffe
3000603f:	mov    eax,0x80070057
30006044:	jmp    0x30006002
30006046:	push   ebp
30006047:	mov    ebp,esp
30006049:	sub    esp,0x138
3000604f:	mov    eax,ds:0x30043050
30006054:	xor    eax,ebp
30006056:	mov    DWORD PTR [ebp-0x8],eax
30006059:	push   ebx
3000605a:	mov    ebx,DWORD PTR [ebp+0x10]
3000605d:	push   esi
3000605e:	mov    esi,DWORD PTR [ebp+0x8]
30006061:	push   edi
30006062:	test   ebx,ebx
30006064:	je     0x30020a69
3000606a:	mov    eax,DWORD PTR [ebp+0xc]
3000606d:	mov    ecx,0xffffde88
30006072:	cmp    eax,ecx
30006074:	jle    0x300052c5
3000607a:	cmp    eax,0xffffde93
3000607f:	je     0x30020cca
30006085:	cmp    eax,0xffffdebf
3000608a:	je     0x3000707a
30006090:	cmp    eax,0xffffdec0
30006095:	je     0x30007069
3000609b:	cmp    eax,0xffffdeca
300060a0:	je     0x30007237
300060a6:	mov    eax,0x80004001
300060ab:	mov    ecx,DWORD PTR [ebp-0x8]
300060ae:	pop    edi
300060af:	pop    esi
300060b0:	xor    ecx,ebp
300060b2:	pop    ebx
300060b3:	call   0x3000115c
300060b8:	leave  
300060b9:	ret    0xc
300060bc:	mov    DWORD PTR [edi+0x8],eax
300060bf:	jmp    0x30003e98
300060c4:	push   0x3
300060c6:	pop    eax
300060c7:	mov    WORD PTR [edi],ax
300060ca:	mov    eax,DWORD PTR [ebp+0x8]
300060cd:	mov    eax,DWORD PTR [eax+0x660]
300060d3:	jmp    0x300060bc
300060d5:	push   0x3
300060d7:	pop    eax
300060d8:	mov    WORD PTR [edi],ax
300060db:	mov    eax,DWORD PTR [ebp+0x8]
300060de:	mov    eax,DWORD PTR [eax+0x664]
300060e4:	jmp    0x300060bc
300060e6:	push   ecx
300060e7:	lea    ecx,[esp+0x4]
300060eb:	sub    ecx,eax
300060ed:	sbb    eax,eax
300060ef:	not    eax
300060f1:	and    ecx,eax
300060f3:	mov    eax,esp
300060f5:	and    eax,0xfffff000
300060fa:	cmp    ecx,eax
300060fc:	jb     0x300053f3
30006102:	mov    eax,ecx
30006104:	pop    ecx
30006105:	xchg   esp,eax
30006106:	mov    eax,DWORD PTR [eax]
30006108:	mov    DWORD PTR [esp],eax
3000610b:	ret    
3000610c:	push   ebp
3000610d:	mov    ebp,esp
3000610f:	push   ecx
30006110:	mov    eax,ds:0x30043050
30006115:	xor    eax,ebp
30006117:	mov    DWORD PTR [ebp-0x4],eax
3000611a:	cmp    DWORD PTR [ebp+0xc],0x0
3000611e:	push   ebx
3000611f:	push   edi
30006120:	je     0x3000618a
30006122:	mov    ecx,DWORD PTR [ebp+0xc]
30006125:	lea    edx,[ecx+0x1]
30006128:	mov    al,BYTE PTR [ecx]
3000612a:	inc    ecx
3000612b:	test   al,al
3000612d:	jne    0x30006128
3000612f:	sub    ecx,edx
30006131:	lea    ebx,[ecx+0x1]
30006134:	cmp    ebx,0x3fffffff
3000613a:	jg     0x3000618a
3000613c:	lea    eax,[ebx+ebx*1]
3000613f:	call   0x3000618e
30006144:	mov    edi,esp
30006146:	test   edi,edi
30006148:	je     0x3000618a
3000614a:	push   ebx
3000614b:	push   edi
3000614c:	push   0xffffffff
3000614e:	push   DWORD PTR [ebp+0xc]
30006151:	xor    eax,eax
30006153:	push   eax
30006154:	push   0x3
30006156:	mov    WORD PTR [edi],ax
30006159:	call   DWORD PTR ds:0x30045170
3000615f:	neg    eax
30006161:	sbb    eax,eax
30006163:	and    eax,edi
30006165:	push   DWORD PTR [ebp+0x18]
30006168:	push   DWORD PTR [ebp+0x14]
3000616b:	push   DWORD PTR [ebp+0x10]
3000616e:	push   eax
3000616f:	push   DWORD PTR [ebp+0x8]
30006172:	call   0x30001270
30006177:	lea    esp,[ebp-0xc]
3000617a:	pop    edi
3000617b:	pop    ebx
3000617c:	mov    ecx,DWORD PTR [ebp-0x4]
3000617f:	xor    ecx,ebp
30006181:	call   0x3000115c
30006186:	leave  
30006187:	ret    0x14
3000618a:	xor    eax,eax
3000618c:	jmp    0x30006165
3000618e:	push   ecx
3000618f:	lea    ecx,[esp+0x8]
30006193:	sub    ecx,eax
30006195:	and    ecx,0xf
30006198:	add    eax,ecx
3000619a:	sbb    ecx,ecx
3000619c:	or     eax,ecx
3000619e:	pop    ecx
3000619f:	jmp    0x300060e6
300061a4:	push   ebp
300061a5:	mov    ebp,esp
300061a7:	push   ecx
300061a8:	cmp    DWORD PTR [ebp+0x8],0x0
300061ac:	push   edi
300061ad:	mov    edi,ecx
300061af:	je     0x300075fb
300061b5:	cmp    DWORD PTR [ebp+0xc],0x0
300061b9:	je     0x300075fb
300061bf:	and    DWORD PTR [ebp-0x4],0x0
300061c3:	push   esi
300061c4:	lea    eax,[ebp-0x4]
300061c7:	push   eax
300061c8:	push   DWORD PTR [ebp+0x10]
300061cb:	push   0x0
300061cd:	push   DWORD PTR [ebp+0xc]
300061d0:	push   DWORD PTR [ebp+0x8]
300061d3:	call   DWORD PTR ds:0x30045008
300061d9:	mov    esi,eax
300061db:	test   esi,esi
300061dd:	je     0x300075e8
300061e3:	jle    0x300061ee
300061e5:	movzx  esi,si
300061e8:	or     esi,0x80070000
300061ee:	mov    eax,esi
300061f0:	pop    esi
300061f1:	pop    edi
300061f2:	leave  
300061f3:	ret    0xc
300061f6:	push   ebp
300061f7:	mov    ebp,esp
300061f9:	sub    esp,0xc
300061fc:	cmp    DWORD PTR [ebp+0x8],0x0
30006200:	push   ebx
30006201:	push   esi
30006202:	push   edi
30006203:	mov    edi,ecx
30006205:	je     0x300062c8
3000620b:	cmp    DWORD PTR [edi],0x0
3000620e:	mov    esi,DWORD PTR [ebp+0xc]
30006211:	je     0x3000621b
30006213:	test   esi,esi
30006215:	je     0x300062c8
3000621b:	test   esi,esi
3000621d:	js     0x3001f616
30006223:	push   DWORD PTR [edi]
30006225:	call   DWORD PTR ds:0x300454ec
3000622b:	and    DWORD PTR [ebp+0xc],0x0
3000622f:	and    DWORD PTR [ebp-0x4],0x0
30006233:	mov    ebx,eax
30006235:	or     ecx,0xffffffff
30006238:	sub    ecx,ebx
3000623a:	mov    DWORD PTR [ebp-0x8],ebx
3000623d:	cmp    ecx,esi
3000623f:	jb     0x300062d1
30006245:	lea    eax,[ebx+esi*1]
30006248:	push   0x2
3000624a:	push   eax
3000624b:	mov    DWORD PTR [ebp-0xc],eax
3000624e:	lea    eax,[ebp-0x4]
30006251:	push   eax
30006252:	call   0x30001464
30006257:	test   eax,eax
30006259:	js     0x300062ca
3000625b:	push   0x2
3000625d:	push   ebx
3000625e:	lea    eax,[ebp+0xc]
30006261:	push   eax
30006262:	call   0x30001464
30006267:	test   eax,eax
30006269:	js     0x300062ca
3000626b:	lea    eax,[ebx+esi*1]
3000626e:	push   eax
3000626f:	push   0x0
30006271:	call   DWORD PTR ds:0x300454f0
30006277:	mov    ebx,eax
30006279:	test   ebx,ebx
3000627b:	je     0x3001f620
30006281:	push   DWORD PTR [edi]
30006283:	call   DWORD PTR ds:0x300454ec
30006289:	test   eax,eax
3000628b:	je     0x3000629e
3000628d:	push   DWORD PTR [ebp+0xc]
30006290:	push   DWORD PTR [edi]
30006292:	push   DWORD PTR [ebp-0x4]
30006295:	push   ebx
30006296:	call   0x30001444
3000629b:	add    esp,0x10
3000629e:	lea    eax,[esi+esi*1]
300062a1:	push   eax
300062a2:	push   DWORD PTR [ebp+0x8]
300062a5:	push   eax
300062a6:	mov    eax,DWORD PTR [ebp-0x8]
300062a9:	lea    eax,[ebx+eax*2]
300062ac:	push   eax
300062ad:	call   0x30001444
300062b2:	mov    eax,DWORD PTR [ebp-0xc]
300062b5:	xor    ecx,ecx
300062b7:	add    esp,0x10
300062ba:	mov    WORD PTR [ebx+eax*2],cx
300062be:	push   DWORD PTR [edi]
300062c0:	call   DWORD PTR ds:0x300454e8
300062c6:	mov    DWORD PTR [edi],ebx
300062c8:	xor    eax,eax
300062ca:	pop    edi
300062cb:	pop    esi
300062cc:	pop    ebx
300062cd:	leave  
300062ce:	ret    0x8
300062d1:	mov    eax,0x80070216
300062d6:	jmp    0x300062ca
300062d8:	push   ebp
300062d9:	mov    ebp,esp
300062db:	cmp    DWORD PTR [ebp+0x8],0x0
300062df:	je     0x3001f62a
300062e5:	mov    edx,DWORD PTR [ebp+0x8]
300062e8:	push   ebx
300062e9:	push   edi
300062ea:	lea    edi,[edx+0x2]
300062ed:	xor    ebx,ebx
300062ef:	mov    ax,WORD PTR [edx]
300062f2:	add    edx,0x2
300062f5:	cmp    ax,bx
300062f8:	jne    0x300062ef
300062fa:	sub    edx,edi
300062fc:	pop    edi
300062fd:	sar    edx,1
300062ff:	pop    ebx
30006300:	push   edx
30006301:	push   DWORD PTR [ebp+0x8]
30006304:	call   0x300061f6
30006309:	pop    ebp
3000630a:	ret    0x4
3000630d:	nop
3000630e:	nop
3000630f:	nop
30006310:	pop    esp
30006311:	add    BYTE PTR [eax+0x0],dl
30006314:	popa   
30006315:	add    BYTE PTR [ebx+0x0],ah
30006318:	imul   eax,DWORD PTR [eax],0x61
3000631b:	add    BYTE PTR [edi+0x0],ah
3000631e:	add    BYTE PTR gs:[ebx+0x0],dh
30006322:	pop    esp
30006323:	add    BYTE PTR [eax],al
30006325:	add    BYTE PTR [ecx+0x1804246c],al
3000632b:	push   es
3000632c:	add    BYTE PTR [eax],al
3000632e:	jmp    0x30001076
30006333:	push   0xb
30006335:	pop    eax
30006336:	mov    WORD PTR [edi],ax
30006339:	or     eax,0xffffffff
3000633c:	jmp    0x30003e9f
30006341:	nop
30006342:	nop
30006343:	nop
30006344:	add    bh,BYTE PTR [ebp+0x644c3002]
3000634a:	add    BYTE PTR [eax],dh
3000634c:	push   esi
3000634d:	add    BYTE PTR fs:[eax],dh
30006350:	and    bl,0x2
30006353:	xor    BYTE PTR [edx+0x64],ch
30006356:	add    BYTE PTR [eax],dh
30006358:	repz jecxz 0x3000635d
3000635b:	xor    bl,ah
3000635d:	mov    esp,0x64603002
30006362:	add    BYTE PTR [eax],dh
30006364:	mov    fs,WORD PTR [ebx+0x0]
30006367:	xor    BYTE PTR [edi+0x65],dh
3000636a:	add    BYTE PTR [eax],dh
3000636c:	add    BYTE PTR es:[bx+si],dh
30006370:	xchg   esp,ebx
30006372:	add    dh,BYTE PTR [eax]
30006374:	push   0x10
30006376:	call   0x30003fee
3000637b:	pop    ecx
3000637c:	test   eax,eax
3000637e:	je     0x300063be
30006380:	mov    edi,eax
30006382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006386:	mov    DWORD PTR [ebx+0x14],eax
30006389:	jmp    0x3000482b
3000638e:	sub    DWORD PTR [esp+0x4],0x40
30006393:	jmp    0x3000104c
30006398:	push   0x4
3000639a:	call   0x30003fee
3000639f:	pop    ecx
300063a0:	test   eax,eax
300063a2:	je     0x300063c2
300063a4:	mov    ecx,DWORD PTR [esi]
300063a6:	mov    DWORD PTR [eax],ecx
300063a8:	mov    DWORD PTR [ebx+0x10],eax
300063ab:	jmp    0x30004836
300063b0:	cmp    DWORD PTR [esi],0x0
300063b3:	je     0x30004848
300063b9:	jmp    0x300280f4
300063be:	xor    eax,eax
300063c0:	jmp    0x30006386
300063c2:	xor    eax,eax
300063c4:	jmp    0x300063a8
300063c6:	push   ebp
300063c7:	mov    ebp,esp
300063c9:	sub    esp,0x18
300063cc:	mov    eax,ds:0x30043050
300063d1:	xor    eax,ebp
300063d3:	mov    DWORD PTR [ebp-0x4],eax
300063d6:	mov    eax,DWORD PTR [ebp+0x10]
300063d9:	push   ebx
300063da:	mov    ebx,DWORD PTR [ebp+0xc]
300063dd:	push   esi
300063de:	push   edi
300063df:	lea    esi,[ebp+0x14]
300063e2:	lea    edi,[ebp-0x14]
300063e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300063e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300063e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300063e8:	push   0x0
300063ea:	mov    DWORD PTR [ebp-0x18],eax
300063ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300063ee:	call   0x30004615
300063f3:	mov    ecx,eax
300063f5:	test   ecx,ecx
300063f7:	je     0x300277c4
300063fd:	mov    eax,DWORD PTR [ecx]
300063ff:	push   0x0
30006401:	lea    edx,[ebp+0x24]
30006404:	push   edx
30006405:	lea    edx,[ebp-0x14]
30006408:	push   edx
30006409:	push   DWORD PTR [ebp-0x18]
3000640c:	push   ebx
3000640d:	push   DWORD PTR [ebp+0x8]
30006410:	call   DWORD PTR [eax+0x4]
30006413:	mov    ecx,DWORD PTR [ebp-0x4]
30006416:	pop    edi
30006417:	pop    esi
30006418:	xor    ecx,ebp
3000641a:	pop    ebx
3000641b:	call   0x3000115c
30006420:	leave  
30006421:	ret    0x20
30006424:	push   ebp
30006425:	mov    ebp,esp
30006427:	push   esi
30006428:	push   edi
30006429:	push   DWORD PTR [ebp+0x28]
3000642c:	lea    esi,[ebp+0x18]
3000642f:	sub    esp,0x10
30006432:	mov    edi,esp
30006434:	push   DWORD PTR [ebp+0x14]
30006437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006438:	push   DWORD PTR [ebp+0x10]
3000643b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000643c:	push   DWORD PTR [ebp+0xc]
3000643f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006441:	call   0x300063c6
30006446:	pop    edi
30006447:	pop    esi
30006448:	pop    ebp
30006449:	ret    0x24
3000644c:	sub    DWORD PTR [esp+0x4],0x44
30006451:	jmp    0x30001066
30006456:	sub    DWORD PTR [esp+0x4],0x44
3000645b:	jmp    0x3000104c
30006460:	sub    DWORD PTR [esp+0x4],0x40
30006465:	jmp    0x30001066
3000646a:	push   ebp
3000646b:	mov    ebp,esp
3000646d:	sub    esp,0x14
30006470:	mov    eax,ds:0x30043050
30006475:	xor    eax,ebp
30006477:	mov    DWORD PTR [ebp-0x4],eax
3000647a:	mov    ecx,DWORD PTR [ebp+0x8]
3000647d:	push   ebx
3000647e:	mov    ebx,DWORD PTR [ecx+0xc]
30006481:	push   esi
30006482:	push   edi
30006483:	test   ebx,ebx
30006485:	je     0x300064c9
30006487:	mov    esi,DWORD PTR [ebp+0xc]
3000648a:	lea    edi,[ebp-0x14]
3000648d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000648e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000648f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006491:	mov    eax,DWORD PTR [ebp-0x10]
30006494:	mov    edi,DWORD PTR [ecx+0x10]
30006497:	not    DWORD PTR [ebp-0x14]
3000649a:	not    eax
3000649c:	mov    WORD PTR [ebp-0x10],ax
300064a0:	mov    eax,DWORD PTR [ebp-0xe]
300064a3:	not    eax
300064a5:	xor    esi,esi
300064a7:	mov    WORD PTR [ebp-0xe],ax
300064ab:	test   edi,edi
300064ad:	je     0x300064c9
300064af:	lea    eax,[ebp-0x14]
300064b2:	push   eax
300064b3:	push   ebx
300064b4:	call   0x30004c93
300064b9:	test   al,al
300064bb:	jne    0x3000669f
300064c1:	inc    esi
300064c2:	add    ebx,0x10
300064c5:	cmp    esi,edi
300064c7:	jb     0x300064af
300064c9:	xor    eax,eax
300064cb:	inc    eax
300064cc:	mov    ecx,DWORD PTR [ebp-0x4]
300064cf:	pop    edi
300064d0:	pop    esi
300064d1:	xor    ecx,ebp
300064d3:	pop    ebx
300064d4:	call   0x3000115c
300064d9:	leave  
300064da:	ret    0x8
300064dd:	push   ebp
300064de:	mov    ebp,esp
300064e0:	and    esp,0xfffffff8
300064e3:	push   0xffffffff
300064e5:	push   0x3003f7b4
300064ea:	mov    eax,fs:0x0
300064f0:	push   eax
300064f1:	sub    esp,0x20
300064f4:	push   ebx
300064f5:	push   esi
300064f6:	push   edi
300064f7:	mov    eax,ds:0x30043050
300064fc:	xor    eax,esp
300064fe:	push   eax
300064ff:	lea    eax,[esp+0x30]
30006503:	mov    fs:0x0,eax
30006509:	mov    edi,ecx
3000650b:	mov    DWORD PTR [esp+0x18],edi
3000650f:	xor    esi,esi
30006511:	mov    DWORD PTR [esp+0x14],esi
30006515:	and    DWORD PTR [esp+0x38],esi
30006519:	lea    eax,[esp+0x10]
3000651d:	push   eax
3000651e:	push   DWORD PTR [ebp+0x8]
30006521:	xor    ebx,ebx
30006523:	and    DWORD PTR [esp+0x18],ebx
30006527:	call   0x30006627
3000652c:	cmp    DWORD PTR [esp+0x10],0x1
30006531:	je     0x30020003
30006537:	cmp    DWORD PTR [esp+0x10],0x2
3000653c:	je     0x30020037
30006542:	push   DWORD PTR [ebp+0x8]
30006545:	lea    eax,[edi+0x44]
30006548:	push   eax
30006549:	mov    ecx,DWORD PTR [eax]
3000654b:	call   DWORD PTR [ecx+0x10]
3000654e:	test   eax,eax
30006550:	jne    0x300067cb
30006556:	or     ebx,0x12
30006559:	push   esi
3000655a:	call   DWORD PTR ds:0x300454e8
30006560:	mov    eax,ebx
30006562:	mov    ecx,DWORD PTR [esp+0x30]
30006566:	mov    DWORD PTR fs:0x0,ecx
3000656d:	pop    ecx
3000656e:	pop    edi
3000656f:	pop    esi
30006570:	pop    ebx
30006571:	mov    esp,ebp
30006573:	pop    ebp
30006574:	ret    0x4
30006577:	push   ebp
30006578:	mov    ebp,esp
3000657a:	push   esi
3000657b:	mov    esi,DWORD PTR [ebp+0x10]
3000657e:	test   esi,esi
30006580:	je     0x3001ffe5
30006586:	mov    ecx,DWORD PTR [ebp+0x8]
30006589:	cmp    DWORD PTR [ecx+0xc],0x0
3000658d:	je     0x3001ffef
30006593:	push   DWORD PTR [ebp+0xc]
30006596:	add    ecx,0xffffffc0
30006599:	call   0x300064dd
3000659e:	mov    DWORD PTR [esi],eax
300065a0:	xor    eax,eax
300065a2:	pop    esi
300065a3:	pop    ebp
300065a4:	ret    0xc
300065a7:	push   0x6c
300065a9:	mov    eax,0x30040c40
300065ae:	call   0x300045c8
300065b3:	mov    edi,edx
300065b5:	mov    esi,DWORD PTR [ebp+0x8]
300065b8:	test   ecx,ecx
300065ba:	je     0x30006620
300065bc:	test   esi,esi
300065be:	je     0x30006620
300065c0:	push   ecx
300065c1:	lea    ecx,[ebp-0x78]
300065c4:	call   0x30001488
300065c9:	and    DWORD PTR [ebp-0x4],0x0
300065cd:	xor    eax,eax
300065cf:	mov    WORD PTR [ebp-0x74],ax
300065d3:	push   0x32
300065d5:	lea    eax,[ebp-0x74]
300065d8:	push   eax
300065d9:	push   edi
300065da:	call   DWORD PTR ds:0x300454d0
300065e0:	push   0x30006310
300065e5:	lea    ecx,[ebp-0x78]
300065e8:	call   0x300062d8
300065ed:	test   eax,eax
300065ef:	js     0x30021679
300065f5:	lea    eax,[ebp-0x74]
300065f8:	push   eax
300065f9:	lea    ecx,[ebp-0x78]
300065fc:	call   0x300062d8
30006601:	test   eax,eax
30006603:	js     0x30021679
30006609:	mov    eax,DWORD PTR [ebp-0x78]
3000660c:	push   0x0
3000660e:	mov    DWORD PTR [esi],eax
30006610:	call   DWORD PTR ds:0x300454e8
30006616:	xor    eax,eax
30006618:	call   0x300045fe
3000661d:	ret    0x4
30006620:	mov    eax,0x80070057
30006625:	jmp    0x30006618
30006627:	push   0x4
30006629:	mov    eax,0x3003fdc4
3000662e:	call   0x3000116a
30006633:	mov    ebx,DWORD PTR [ebp+0xc]
30006636:	test   ebx,ebx
30006638:	je     0x3002013b
3000663e:	xor    edi,edi
30006640:	mov    DWORD PTR [ebx],edi
30006642:	mov    DWORD PTR [ebp+0xc],edi
30006645:	mov    DWORD PTR [ebp-0x4],edi
30006648:	mov    DWORD PTR [ebp-0x10],edi
3000664b:	mov    edx,DWORD PTR [ebp+0x8]
3000664e:	lea    eax,[ebp+0xc]
30006651:	mov    BYTE PTR [ebp-0x4],0x1
30006655:	mov    ecx,DWORD PTR [ecx+0x4c]
30006658:	push   eax
30006659:	call   0x300065a7
3000665e:	cmp    DWORD PTR [ebp+0xc],edi
30006661:	je     0x30020145
30006667:	push   0x20019
3000666c:	push   DWORD PTR [ebp+0xc]
3000666f:	lea    ecx,[ebp-0x10]
30006672:	push   0x80000001
30006677:	call   0x300061a4
3000667c:	test   eax,eax
3000667e:	jns    0x3002014f
30006684:	lea    ecx,[ebp-0x10]
30006687:	call   0x300014b2
3000668c:	push   DWORD PTR [ebp+0xc]
3000668f:	call   DWORD PTR ds:0x300454e8
30006695:	mov    eax,edi
30006697:	call   0x3000119d
3000669c:	ret    0x8
3000669f:	xor    eax,eax
300066a1:	jmp    0x300064cc
300066a6:	push   ebp
300066a7:	mov    ebp,esp
300066a9:	sub    esp,0x18
300066ac:	mov    eax,ds:0x30043050
300066b1:	xor    eax,ebp
300066b3:	mov    DWORD PTR [ebp-0x4],eax
300066b6:	mov    eax,DWORD PTR [ebp+0x10]
300066b9:	push   ebx
300066ba:	push   esi
300066bb:	mov    ebx,DWORD PTR [ebp+0xc]
300066be:	push   edi
300066bf:	lea    esi,[ebp+0x14]
300066c2:	lea    edi,[ebp-0x14]
300066c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300066c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300066c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300066c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300066c9:	xor    esi,esi
300066cb:	push   esi
300066cc:	mov    DWORD PTR [ebp-0x18],eax
300066cf:	call   0x30004615
300066d4:	mov    ecx,eax
300066d6:	test   ecx,ecx
300066d8:	je     0x300277ba
300066de:	mov    eax,DWORD PTR [ecx]
300066e0:	push   esi
300066e1:	push   esi
300066e2:	lea    edx,[ebp-0x14]
300066e5:	push   edx
300066e6:	push   DWORD PTR [ebp-0x18]
300066e9:	push   ebx
300066ea:	push   DWORD PTR [ebp+0x8]
300066ed:	call   DWORD PTR [eax+0x4]
300066f0:	mov    ecx,DWORD PTR [ebp-0x4]
300066f3:	pop    edi
300066f4:	pop    esi
300066f5:	xor    ecx,ebp
300066f7:	pop    ebx
300066f8:	call   0x3000115c
300066fd:	leave  
300066fe:	ret    0x1c
30006701:	push   ebp
30006702:	mov    ebp,esp
30006704:	push   esi
30006705:	push   edi
30006706:	sub    esp,0x10
30006709:	mov    edi,esp
3000670b:	push   DWORD PTR [ebp+0x14]
3000670e:	lea    esi,[ebp+0x18]
30006711:	push   DWORD PTR [ebp+0x10]
30006714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006715:	push   DWORD PTR [ebp+0xc]
30006718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000671a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000671b:	call   0x300066a6
30006720:	pop    edi
30006721:	pop    esi
30006722:	pop    ebp
30006723:	ret    0x20
30006726:	push   ebp
30006727:	mov    ebp,esp
30006729:	mov    eax,DWORD PTR [ebp+0x10]
3000672c:	test   eax,eax
3000672e:	je     0x3001fff9
30006734:	mov    DWORD PTR [eax],0x2
3000673a:	xor    eax,eax
3000673c:	pop    ebp
3000673d:	ret    0xc
30006740:	push   ebp
30006741:	mov    ebp,esp
30006743:	sub    esp,0x18
30006746:	mov    eax,ds:0x30043050
3000674b:	xor    eax,ebp
3000674d:	mov    DWORD PTR [ebp-0x4],eax
30006750:	mov    eax,DWORD PTR [ebp+0x10]
30006753:	push   ebx
30006754:	mov    ebx,DWORD PTR [ebp+0xc]
30006757:	push   esi
30006758:	push   edi
30006759:	lea    esi,[ebp+0x14]
3000675c:	lea    edi,[ebp-0x14]
3000675f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006763:	mov    esi,DWORD PTR [ebp+0x28]
30006766:	push   0x0
30006768:	mov    DWORD PTR [ebp-0x18],eax
3000676b:	call   0x30004615
30006770:	mov    ecx,eax
30006772:	test   ecx,ecx
30006774:	je     0x300277ce
3000677a:	mov    eax,DWORD PTR [ecx]
3000677c:	push   esi
3000677d:	lea    edx,[ebp+0x24]
30006780:	push   edx
30006781:	lea    edx,[ebp-0x14]
30006784:	push   edx
30006785:	push   DWORD PTR [ebp-0x18]
30006788:	push   ebx
30006789:	push   DWORD PTR [ebp+0x8]
3000678c:	call   DWORD PTR [eax+0x4]
3000678f:	mov    ecx,DWORD PTR [ebp-0x4]
30006792:	pop    edi
30006793:	pop    esi
30006794:	xor    ecx,ebp
30006796:	pop    ebx
30006797:	call   0x3000115c
3000679c:	leave  
3000679d:	ret    0x24
300067a0:	push   ebp
300067a1:	mov    ebp,esp
300067a3:	push   esi
300067a4:	push   edi
300067a5:	push   DWORD PTR [ebp+0x2c]
300067a8:	lea    esi,[ebp+0x18]
300067ab:	push   DWORD PTR [ebp+0x28]
300067ae:	sub    esp,0x10
300067b1:	mov    edi,esp
300067b3:	push   DWORD PTR [ebp+0x14]
300067b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300067b7:	push   DWORD PTR [ebp+0x10]
300067ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300067bb:	push   DWORD PTR [ebp+0xc]
300067be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300067bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300067c0:	call   0x30006740
300067c5:	pop    edi
300067c6:	pop    esi
300067c7:	pop    ebp
300067c8:	ret    0x28
300067cb:	xor    eax,eax
300067cd:	cmp    DWORD PTR [edi+0xc8],eax
300067d3:	jne    0x3002000b
300067d9:	cmp    DWORD PTR [edi+0xc4],eax
300067df:	jne    0x30020054
300067e5:	xor    eax,eax
300067e7:	lea    edi,[esp+0x1c]
300067eb:	stos   DWORD PTR es:[edi],eax
300067ec:	stos   DWORD PTR es:[edi],eax
300067ed:	stos   DWORD PTR es:[edi],eax
300067ee:	stos   DWORD PTR es:[edi],eax
300067ef:	lea    eax,[esp+0x1c]
300067f3:	push   eax
300067f4:	call   DWORD PTR ds:0x300454e4
300067fa:	mov    edi,DWORD PTR [esp+0x18]
300067fe:	lea    ecx,[esp+0x1c]
30006802:	push   ecx
30006803:	mov    BYTE PTR [esp+0x3c],0x1
30006808:	mov    eax,DWORD PTR [edi]
3000680a:	push   0xffffde74
3000680f:	push   edi
30006810:	call   DWORD PTR [eax+0x10]
30006813:	test   eax,eax
30006815:	js     0x30020081
3000681b:	push   0xb
3000681d:	pop    eax
3000681e:	cmp    ax,WORD PTR [esp+0x1c]
30006823:	jne    0x30020081
30006829:	or     eax,0xffffffff
3000682c:	cmp    ax,WORD PTR [esp+0x24]
30006831:	jne    0x30020081
30006837:	cmp    DWORD PTR [edi+0xc4],0x0
3000683e:	mov    eax,DWORD PTR [edi+0xbc]
30006844:	jne    0x30020123
3000684a:	or     ebx,0x22
3000684d:	lea    eax,[esp+0x1c]
30006851:	push   eax
30006852:	call   DWORD PTR ds:0x300454e0
30006858:	jmp    0x30006559
3000685d:	mov    ecx,DWORD PTR [esp+0xc]
30006861:	lea    ecx,[ecx-0x10]
30006864:	call   0x30004017
30006869:	jmp    0x30004ff3
3000686e:	mov    DWORD PTR [edi+0x8],ecx
30006871:	call   DWORD PTR ds:0x300454e8
30006877:	jmp    0x3000685d
30006879:	xor    ebx,ebx
3000687b:	cmp    DWORD PTR [esi+0x5fc],ebx
30006881:	je     0x300049f8
30006887:	push   0x3004306c
3000688c:	lea    ecx,[esp+0x10]
30006890:	call   0x30004256
30006895:	mov    ecx,DWORD PTR [esi+0x5fc]
3000689b:	lea    edx,[esp+0xc]
3000689f:	mov    eax,DWORD PTR [ecx]
300068a1:	push   edx
300068a2:	call   DWORD PTR [eax]
300068a4:	mov    esi,eax
300068a6:	test   esi,esi
300068a8:	js     0x30004e45
300068ae:	push   0x8
300068b0:	pop    eax
300068b1:	push   DWORD PTR [esp+0xc]
300068b5:	lea    ecx,[esp+0x20]
300068b9:	mov    WORD PTR [edi],ax
300068bc:	call   0x30001488
300068c1:	mov    ecx,DWORD PTR [eax]
300068c3:	mov    DWORD PTR [eax],ebx
300068c5:	push   DWORD PTR [esp+0x1c]
300068c9:	jmp    0x3000686e
300068cb:	push   ebp
300068cc:	mov    ebp,esp
300068ce:	cmp    DWORD PTR [ecx+0x4],0x0
300068d2:	je     0x3002212b
300068d8:	lea    eax,[ecx+0x28]
300068db:	mov    ecx,DWORD PTR [ebp+0x8]
300068de:	push   eax
300068df:	call   0x300014c1
300068e4:	xor    eax,eax
300068e6:	pop    ebp
300068e7:	ret    0x4
300068ea:	push   ebp
300068eb:	mov    ebp,esp
300068ed:	push   ecx
300068ee:	push   ebx
300068ef:	push   esi
300068f0:	xor    esi,esi
300068f2:	mov    ebx,ecx
300068f4:	inc    esi
300068f5:	push   edi
300068f6:	mov    edi,DWORD PTR [ebp+0x18]
300068f9:	mov    DWORD PTR [ebp-0x4],edx
300068fc:	test   ebx,ebx
300068fe:	je     0x30005491
30006904:	cmp    ebx,esi
30006906:	je     0x3000692b
30006908:	cmp    ebx,0x2
3000690b:	jne    0x30006929
3000690d:	mov    eax,DWORD PTR [ebp+0x1c]
30006910:	test   eax,eax
30006912:	je     0x300054b0
30006918:	test   edi,edi
3000691a:	je     0x300054b0
30006920:	cmp    DWORD PTR [edi],0x0
30006923:	jne    0x300215fb
30006929:	cmp    ebx,esi
3000692b:	mov    ecx,DWORD PTR [ebp-0x4]
3000692e:	sete   bl
30006931:	push   0x30043118
30006936:	push   edi
30006937:	mov    edx,0x3000b930
3000693c:	push   ebx
3000693d:	call   0x3000bcdc
30006942:	test   eax,eax
30006944:	je     0x3002161e
3000694a:	mov    eax,esi
3000694c:	pop    edi
3000694d:	pop    esi
3000694e:	pop    ebx
3000694f:	leave  
30006950:	ret    0x18
30006953:	push   ebp
30006954:	mov    ebp,esp
30006956:	push   esi
30006957:	mov    esi,DWORD PTR [ebp+0xc]
3000695a:	test   esi,esi
3000695c:	je     0x3000548a
30006962:	mov    eax,DWORD PTR [esi]
30006964:	mov    edx,DWORD PTR ds:0x300434dc
3000696a:	mov    ecx,DWORD PTR [ebp+0x8]
3000696d:	push   eax
3000696e:	push   0x300430c0
30006973:	sub    esp,0x10
30006976:	call   0x300068ea
3000697b:	test   esi,esi
3000697d:	je     0x30006986
3000697f:	mov    eax,ds:0x30043118
30006984:	mov    DWORD PTR [esi],eax
30006986:	mov    eax,ds:0x300430c0
3000698b:	neg    eax
3000698d:	sbb    eax,eax
3000698f:	and    eax,0x7fffbffb
30006994:	add    eax,0x80004005
30006999:	pop    esi
3000699a:	pop    ebp
3000699b:	ret    0x8
3000699e:	call   DWORD PTR ds:0x300454e8
300069a4:	jmp    0x30003e98
300069a9:	nop
300069aa:	nop
300069ab:	nop
300069ac:	mov    DWORD PTR [ebx+eax*1],ebx
300069af:	xor    BYTE PTR [eax+0x6b],dl
300069b2:	add    BYTE PTR [eax],dh
300069b4:	dec    esp
300069b5:	ins    BYTE PTR es:[edi],dx
300069b6:	add    BYTE PTR [eax],dh
300069b8:	(bad)  
300069b9:	sbb    eax,DWORD PTR [ebx]
300069bb:	xor    BYTE PTR [esi+0x1c],al
300069be:	add    esi,DWORD PTR [eax]
300069c0:	inc    esi
300069c1:	sbb    al,0x3
300069c3:	xor    BYTE PTR [edx-0x6ccfff95],dh
300069c9:	sbb    al,0x3
300069cb:	xor    BYTE PTR [esp+ebx*2+0x1],bl
300069cf:	xor    BYTE PTR [edi+0x5c],dh
300069d2:	add    DWORD PTR [eax],esi
300069d4:	fistp  WORD PTR [ecx+eax*1+0x30]
300069d8:	mov    eax,0xe130006a
300069dd:	jbe    0x300069e0
300069df:	xor    BYTE PTR [esi],al
300069e1:	pop    ebp
300069e2:	add    DWORD PTR [eax],esi
300069e4:	arpl   WORD PTR [ecx+eax*1+0x30],bx
300069e8:	jle    0x30006a46
300069ea:	add    DWORD PTR [eax],esi
300069ec:	aas    
300069ed:	fadd   DWORD PTR [eax]
300069ef:	xor    BYTE PTR [eax],dh
300069f1:	push   0x0
300069f3:	xor    bl,dh
300069f5:	push   0x0
300069f7:	xor    BYTE PTR [edi+0x6b],dl
300069fa:	add    BYTE PTR [eax],dh
300069fc:	or     al,0x6a
300069fe:	add    BYTE PTR [eax],dh
30006a00:	nop
30006a01:	fiadd  DWORD PTR [eax]
30006a03:	xor    BYTE PTR [ebp+0x1c30031b],bh
30006a09:	ja     0x30006a0c
30006a0b:	xor    BYTE PTR [ebp-0x75],dl
30006a0e:	in     al,dx
30006a0f:	push   esi
30006a10:	mov    esi,DWORD PTR [ebp+0x8]
30006a13:	push   edi
30006a14:	lea    eax,[esi+0x8]
30006a17:	push   eax
30006a18:	call   DWORD PTR ds:0x30045154
30006a1e:	mov    edi,eax
30006a20:	test   edi,edi
30006a22:	je     0x30017706
30006a28:	mov    eax,edi
30006a2a:	pop    edi
30006a2b:	pop    esi
30006a2c:	pop    ebp
30006a2d:	ret    0x4
30006a30:	push   ebp
30006a31:	mov    ebp,esp
30006a33:	push   ecx
30006a34:	mov    ecx,DWORD PTR [ebp+0x10]
30006a37:	test   ecx,ecx
30006a39:	je     0x30006a92
30006a3b:	mov    eax,DWORD PTR [ecx]
30006a3d:	and    DWORD PTR [ebp+0x10],0x0
30006a41:	lea    edx,[ebp+0x10]
30006a44:	push   edx
30006a45:	push   0x30006a98
30006a4a:	push   ecx
30006a4b:	call   DWORD PTR [eax]
30006a4d:	test   eax,eax
30006a4f:	js     0x300206b0
30006a55:	mov    eax,DWORD PTR [ebp+0x10]
30006a58:	test   eax,eax
30006a5a:	je     0x30006a92
30006a5c:	mov    ecx,DWORD PTR [ebp+0x8]
30006a5f:	and    DWORD PTR [ebp-0x4],0x0
30006a63:	lea    eax,[ebp-0x4]
30006a66:	push   eax
30006a67:	call   0x30006be4
30006a6c:	test   eax,eax
30006a6e:	js     0x30006a7c
30006a70:	mov    eax,DWORD PTR [ebp+0x10]
30006a73:	push   DWORD PTR [ebp-0x4]
30006a76:	mov    ecx,DWORD PTR [eax]
30006a78:	push   eax
30006a79:	call   DWORD PTR [ecx+0xc]
30006a7c:	push   DWORD PTR [ebp-0x4]
30006a7f:	call   DWORD PTR ds:0x300454e8
30006a85:	mov    eax,DWORD PTR [ebp+0x10]
30006a88:	test   eax,eax
30006a8a:	je     0x30006a92
30006a8c:	mov    ecx,DWORD PTR [eax]
30006a8e:	push   eax
30006a8f:	call   DWORD PTR [ecx+0x8]
30006a92:	xor    eax,eax
30006a94:	leave  
30006a95:	ret    0xc
30006a98:	pop    ecx
30006a99:	rcr    BYTE PTR [ebp+0x500e0144],cl
30006a9f:	inc    eax
30006aa0:	mov    dh,0x1c
30006aa2:	fcomp  DWORD PTR ds:0xc6410c58
30006aa8:	rol    DWORD PTR [eax+0x51],cl
30006aab:	ins    DWORD PTR es:[edi],dx
30006aac:	ss je  0x30006a7d
30006aaf:	adc    DWORD PTR [eax+0xaa0034],eax
30006ab5:	pusha  
30006ab6:	or     edx,edi
30006ab8:	push   ebp
30006ab9:	mov    ebp,esp
30006abb:	mov    eax,DWORD PTR [ebp+0x8]
30006abe:	test   eax,eax
30006ac0:	je     0x30006ae5
30006ac2:	lea    edx,[eax-0x4]
30006ac5:	mov    ecx,DWORD PTR [ebp+0x10]
30006ac8:	mov    eax,0x80004003
30006acd:	test   ecx,ecx
30006acf:	je     0x30006ae1
30006ad1:	mov    edx,DWORD PTR [edx+0x8]
30006ad4:	test   edx,edx
30006ad6:	je     0x30006ae9
30006ad8:	mov    eax,DWORD PTR [edx]
30006ada:	push   ecx
30006adb:	push   DWORD PTR [ebp+0xc]
30006ade:	push   edx
30006adf:	call   DWORD PTR [eax]
30006ae1:	pop    ebp
30006ae2:	ret    0xc
30006ae5:	xor    edx,edx
30006ae7:	jmp    0x30006ac5
30006ae9:	and    DWORD PTR [ecx],0x0
30006aec:	mov    eax,0x80004005
30006af1:	jmp    0x30006ae1
30006af3:	push   ebp
30006af4:	mov    ebp,esp
30006af6:	push   DWORD PTR [ebp+0x10]
30006af9:	push   DWORD PTR [ebp+0xc]
30006afc:	push   0x30006b10
30006b01:	push   DWORD PTR [ebp+0x8]
30006b04:	call   DWORD PTR ds:0x30045424
30006b0a:	pop    ebp
30006b0b:	ret    0xc
30006b0e:	nop
30006b0f:	nop
30006b10:	inc    eax
30006b11:	imul   eax,DWORD PTR [eax],0x30
30006b14:	add    BYTE PTR [eax],al
30006b16:	add    BYTE PTR [eax],al
30006b18:	add    DWORD PTR [eax],eax
30006b1a:	add    BYTE PTR [eax],al
30006b1c:	test   al,0x6a
30006b1e:	add    BYTE PTR [eax],dh
30006b20:	add    al,0x0
30006b22:	add    BYTE PTR [eax],al
30006b24:	add    DWORD PTR [eax],eax
30006b26:	add    BYTE PTR [eax],al
30006b28:	cmp    al,0x6c
30006b2a:	add    BYTE PTR [eax],dh
30006b2c:	add    al,0x0
30006b2e:	add    BYTE PTR [eax],al
30006b30:	add    DWORD PTR [eax],eax
	...
30006b3e:	add    BYTE PTR [eax],al
30006b40:	jle    0x30006b9b
30006b42:	gs nop
30006b44:	mov    eax,ds:0xb64fb2d1
30006b49:	mov    edx,0x23ce1f7e
30006b4e:	punpcklwd mm0,DWORD PTR [ebx+0x404246c]
30006b55:	jmp    0x30006b57
30006b57:	push   ebp
30006b58:	mov    ebp,esp
30006b5a:	mov    eax,DWORD PTR [ebp+0x8]
30006b5d:	add    eax,0x8
30006b60:	push   eax
30006b61:	call   DWORD PTR ds:0x30045150
30006b67:	pop    ebp
30006b68:	ret    0x4
30006b6b:	push   esi
30006b6c:	mov    esi,ecx
30006b6e:	cmp    DWORD PTR [esi],0x0
30006b71:	je     0x300203e8
30006b77:	push   DWORD PTR [esi]
30006b79:	call   DWORD PTR ds:0x30045510
30006b7f:	push   eax
30006b80:	push   DWORD PTR [esi]
30006b82:	call   DWORD PTR ds:0x30045514
30006b88:	pop    esi
30006b89:	ret    
30006b8a:	push   ebp
30006b8b:	mov    ebp,esp
30006b8d:	push   esi
30006b8e:	mov    esi,DWORD PTR [ebp+0x8]
30006b91:	push   edi
30006b92:	mov    edi,ecx
30006b94:	mov    ecx,esi
30006b96:	call   0x30006b6b
30006b9b:	mov    DWORD PTR [edi],eax
30006b9d:	cmp    DWORD PTR [esi],0x0
30006ba0:	je     0x30006baa
30006ba2:	test   eax,eax
30006ba4:	je     0x300203ec
30006baa:	mov    eax,edi
30006bac:	pop    edi
30006bad:	pop    esi
30006bae:	pop    ebp
30006baf:	ret    0x4
30006bb2:	push   ebp
30006bb3:	mov    ebp,esp
30006bb5:	push   esi
30006bb6:	mov    esi,DWORD PTR [ebp+0xc]
30006bb9:	test   esi,esi
30006bbb:	je     0x300206fe
30006bc1:	mov    eax,DWORD PTR [ebp+0x8]
30006bc4:	add    eax,0x28
30006bc7:	push   eax
30006bc8:	lea    ecx,[ebp+0xc]
30006bcb:	call   0x30006b8a
30006bd0:	mov    eax,DWORD PTR [ebp+0xc]
30006bd3:	push   0x0
30006bd5:	mov    DWORD PTR [esi],eax
30006bd7:	call   DWORD PTR ds:0x300454e8
30006bdd:	xor    eax,eax
30006bdf:	pop    esi
30006be0:	pop    ebp
30006be1:	ret    0x8
30006be4:	push   0x4
30006be6:	mov    eax,0x300405c0
30006beb:	call   0x3000116a
30006bf0:	and    DWORD PTR [ebp-0x10],0x0
30006bf4:	and    DWORD PTR [ebp-0x4],0x0
30006bf8:	lea    edx,[ebp-0x10]
30006bfb:	lea    eax,[ecx+0x4]
30006bfe:	push   edx
30006bff:	mov    ecx,DWORD PTR [eax]
30006c01:	push   0x30006c3c
30006c06:	push   eax
30006c07:	call   DWORD PTR [ecx+0x10]
30006c0a:	mov    esi,eax
30006c0c:	test   esi,esi
30006c0e:	js     0x30006c1e
30006c10:	mov    eax,DWORD PTR [ebp-0x10]
30006c13:	push   DWORD PTR [ebp+0x8]
30006c16:	mov    ecx,DWORD PTR [eax]
30006c18:	push   eax
30006c19:	call   DWORD PTR [ecx+0x18]
30006c1c:	mov    esi,eax
30006c1e:	or     DWORD PTR [ebp-0x4],0xffffffff
30006c22:	mov    ecx,DWORD PTR [ebp-0x10]
30006c25:	test   ecx,ecx
30006c27:	je     0x30006c2f
30006c29:	mov    edx,DWORD PTR [ecx]
30006c2b:	push   ecx
30006c2c:	call   DWORD PTR [edx+0x8]
30006c2f:	mov    eax,esi
30006c31:	call   0x3000119d
30006c36:	ret    0x4
30006c39:	nop
30006c3a:	nop
30006c3b:	nop
30006c3c:	mov    al,0x19
30006c3e:	mov    ebx,0xd1046277
30006c43:	adc    DWORD PTR [edx-0x365fff0a],ebp
30006c49:	add    eax,0x6c83905a
30006c4e:	and    al,0x4
30006c50:	add    al,0xe9
30006c52:	mov    dh,0xfd
30006c54:	(bad)  
30006c55:	call   DWORD PTR [eax+0x64]
30006c58:	push   DWORD PTR ds:0x0
30006c5e:	lea    eax,[esp+0xc]
30006c62:	sub    esp,DWORD PTR [esp+0xc]
30006c66:	push   ebx
30006c67:	push   esi
30006c68:	push   edi
30006c69:	mov    DWORD PTR [eax],ebp
30006c6b:	mov    ebp,eax
30006c6d:	mov    eax,ds:0x30043050
30006c72:	xor    eax,ebp
30006c74:	push   eax
30006c75:	mov    DWORD PTR [ebp-0x10],esp
30006c78:	push   DWORD PTR [ebp-0x4]
30006c7b:	mov    DWORD PTR [ebp-0x4],0xffffffff
30006c82:	lea    eax,[ebp-0xc]
30006c85:	mov    fs:0x0,eax
30006c8b:	ret    
30006c8c:	push   ebp
30006c8d:	mov    ebp,esp
30006c8f:	mov    eax,DWORD PTR [ebp+0x8]
30006c92:	push   esi
30006c93:	mov    esi,ecx
30006c95:	cmp    eax,0xffffffff
30006c98:	jne    0x30006cac
30006c9a:	mov    eax,DWORD PTR [esi]
30006c9c:	test   eax,eax
30006c9e:	je     0x30006cac
30006ca0:	push   DWORD PTR [eax-0x8]
30006ca3:	push   eax
30006ca4:	call   DWORD PTR ds:0x300452f0
30006caa:	pop    ecx
30006cab:	pop    ecx
30006cac:	push   eax
30006cad:	mov    ecx,esi
30006caf:	call   0x30004147
30006cb4:	pop    esi
30006cb5:	pop    ebp
30006cb6:	ret    0x4
30006cb9:	nop
30006cba:	nop
30006cbb:	nop
30006cbc:	xor    BYTE PTR [eax],al
30006cbe:	js     0x30006cc0
30006cc0:	add    BYTE PTR [eax],al
30006cc2:	push   0x8
30006cc4:	mov    eax,0x3003ca85
30006cc9:	call   0x30006c56
30006cce:	push   DWORD PTR [ebp+0x8]
30006cd1:	and    DWORD PTR [ebp-0x4],0x0
30006cd5:	call   0x30003fee
30006cda:	pop    ecx
30006cdb:	call   0x3000119d
30006ce0:	ret    
30006ce1:	jmp    DWORD PTR ds:0x300453bc
30006ce7:	nop
30006ce8:	add    BYTE PTR [eax],al
30006cea:	push   ebp
30006ceb:	mov    ebp,esp
30006ced:	push   DWORD PTR [ebp+0x14]
30006cf0:	push   DWORD PTR [ebp+0x10]
30006cf3:	push   DWORD PTR [ebp+0xc]
30006cf6:	push   DWORD PTR [ebp+0x8]
30006cf9:	call   DWORD PTR ds:0x300453d0
30006cff:	add    esp,0x10
30006d02:	push   eax
30006d03:	call   0x30001432
30006d08:	pop    ebp
30006d09:	ret    
30006d0a:	mov    eax,esi
30006d0c:	jmp    0x3000449b
30006d11:	nop
30006d12:	nop
30006d13:	nop
30006d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30006d15:	mov    esi,0x6d543002
30006d1a:	add    BYTE PTR [eax],dh
30006d1c:	push   edx
30006d1d:	push   ebx
30006d1e:	add    BYTE PTR [eax],dh
30006d20:	retf   
30006d21:	mov    esi,0xbecf3002
30006d26:	add    dh,BYTE PTR [eax]
30006d28:	cmp    al,0xbf
30006d2a:	add    dh,BYTE PTR [eax]
30006d2c:	fs mov edi,0xbff83002
30006d32:	add    dh,BYTE PTR [eax]
30006d34:	sbb    eax,eax
30006d36:	add    dh,BYTE PTR [eax]
30006d38:	sbb    eax,eax
30006d3a:	add    dh,BYTE PTR [eax]
30006d3c:	push   DWORD PTR [esi]
30006d3e:	call   DWORD PTR ds:0x30045004
30006d44:	and    DWORD PTR [esi],0x0
30006d47:	test   eax,eax
30006d49:	jle    0x300014bf
30006d4f:	jmp    0x3001fedf
30006d54:	lea    eax,[ecx+0x8]
30006d57:	push   eax
30006d58:	call   DWORD PTR ds:0x30045150
30006d5e:	ret    
30006d5f:	push   esi
30006d60:	xor    esi,esi
30006d62:	push   esi
30006d63:	push   ecx
30006d64:	call   DWORD PTR ds:0x3004515c
30006d6a:	test   eax,eax
30006d6c:	je     0x3001f6b3
30006d72:	mov    eax,esi
30006d74:	pop    esi
30006d75:	ret    
30006d76:	push   esi
30006d77:	lea    esi,[ecx+0x4]
30006d7a:	mov    ecx,esi
30006d7c:	call   0x30006d5f
30006d81:	test   eax,eax
30006d83:	js     0x30006d89
30006d85:	mov    BYTE PTR [esi+0x18],0x1
30006d89:	pop    esi
30006d8a:	ret    
30006d8b:	push   ebp
30006d8c:	mov    ebp,esp
30006d8e:	mov    eax,DWORD PTR [ebp+0x8]
30006d91:	add    eax,0x4
30006d94:	push   eax
30006d95:	call   DWORD PTR ds:0x30045150
30006d9b:	pop    ebp
30006d9c:	ret    0x4
30006d9f:	nop
30006da0:	adc    al,0x82
30006da2:	add    BYTE PTR [eax],dh
30006da4:	mov    ebp,DWORD PTR [ebp+0x0]
30006da7:	xor    BYTE PTR [eax],bl
30006da9:	outs   dx,BYTE PTR ds:[esi]
30006daa:	add    BYTE PTR [eax],dh
30006dac:	out    0x81,eax
30006dae:	add    BYTE PTR [eax],dh
30006db0:	cmp    ah,ah
30006db2:	add    DWORD PTR [eax],esi
30006db4:	adc    al,0x82
30006db6:	add    BYTE PTR [eax],dh
30006db8:	mov    ebp,DWORD PTR [ebp+0x0]
30006dbb:	xor    BYTE PTR [eax],bl
30006dbd:	outs   dx,BYTE PTR ds:[esi]
30006dbe:	add    BYTE PTR [eax],dh
30006dc0:	out    0x81,eax
30006dc2:	add    BYTE PTR [eax],dh
30006dc4:	add    WORD PTR [ebx],ax
30006dc7:	xor    BYTE PTR [edx+eax*4],dl
30006dca:	add    BYTE PTR [eax],dh
30006dcc:	mov    ebp,DWORD PTR [ebp+0x0]
30006dcf:	xor    BYTE PTR [eax],bl
30006dd1:	outs   dx,BYTE PTR ds:[esi]
30006dd2:	add    BYTE PTR [eax],dh
30006dd4:	out    0x81,eax
30006dd6:	add    BYTE PTR [eax],dh
30006dd8:	add    DWORD PTR es:[ebx],eax
30006ddb:	xor    BYTE PTR [edx+eax*4],dl
30006dde:	add    BYTE PTR [eax],dh
30006de0:	mov    ebp,DWORD PTR [ebp+0x0]
30006de3:	xor    BYTE PTR [eax],bl
30006de5:	outs   dx,BYTE PTR ds:[esi]
30006de6:	add    BYTE PTR [eax],dh
30006de8:	out    0x81,eax
30006dea:	add    BYTE PTR [eax],dh
30006dec:	out    0x0,al
30006dee:	add    esi,DWORD PTR [eax]
30006df0:	mov    ds,eax
30006df2:	add    BYTE PTR [eax],dh
30006df4:	mov    ebp,DWORD PTR [ebp+0x0]
30006df7:	xor    BYTE PTR [eax],bl
30006df9:	outs   dx,BYTE PTR ds:[esi]
30006dfa:	add    BYTE PTR [eax],dh
30006dfc:	mov    WORD PTR [ebx],ds
30006dfe:	add    esi,DWORD PTR [eax]
30006e00:	push   0x78
30006e02:	add    DWORD PTR [eax],esi
30006e04:	adc    al,0x82
30006e06:	add    BYTE PTR [eax],dh
30006e08:	mov    ebp,DWORD PTR [ebp+0x0]
30006e0b:	xor    BYTE PTR [eax],bl
30006e0d:	outs   dx,BYTE PTR ds:[esi]
30006e0e:	add    BYTE PTR [eax],dh
30006e10:	out    0x81,eax
30006e12:	add    BYTE PTR [eax],dh
30006e14:	mov    BYTE PTR [ecx],0x3
30006e17:	xor    BYTE PTR [ebp-0x75],dl
30006e1a:	in     al,dx
30006e1b:	push   esi
30006e1c:	mov    esi,DWORD PTR [ebp+0x8]
30006e1f:	push   edi
30006e20:	lea    eax,[esi+0x4]
30006e23:	push   eax
30006e24:	call   DWORD PTR ds:0x30045154
30006e2a:	mov    edi,eax
30006e2c:	test   edi,edi
30006e2e:	je     0x3001e3a8
30006e34:	mov    eax,edi
30006e36:	pop    edi
30006e37:	pop    esi
30006e38:	pop    ebp
30006e39:	ret    0x4
30006e3c:	push   ebp
30006e3d:	mov    ebp,esp
30006e3f:	push   esi
30006e40:	mov    esi,DWORD PTR [ebp+0x8]
30006e43:	push   edi
30006e44:	mov    edi,ecx
30006e46:	cmp    DWORD PTR [edi],esi
30006e48:	je     0x30006e62
30006e4a:	test   esi,esi
30006e4c:	je     0x30006e54
30006e4e:	mov    eax,DWORD PTR [esi]
30006e50:	push   esi
30006e51:	call   DWORD PTR [eax+0x4]
30006e54:	mov    eax,DWORD PTR [edi]
30006e56:	mov    DWORD PTR [edi],esi
30006e58:	test   eax,eax
30006e5a:	je     0x30006e62
30006e5c:	mov    ecx,DWORD PTR [eax]
30006e5e:	push   eax
30006e5f:	call   DWORD PTR [ecx+0x8]
30006e62:	mov    eax,DWORD PTR [edi]
30006e64:	pop    edi
30006e65:	pop    esi
30006e66:	pop    ebp
30006e67:	ret    0x4
30006e6a:	push   ebp
30006e6b:	mov    ebp,esp
30006e6d:	push   esi
30006e6e:	mov    esi,DWORD PTR [ebp+0x8]
30006e71:	push   edi
30006e72:	mov    edi,DWORD PTR [ebp+0xc]
30006e75:	test   edi,edi
30006e77:	je     0x30006e9f
30006e79:	mov    ecx,edi
30006e7b:	call   0x3000cee0
30006e80:	lea    ecx,[ebp+0xc]
30006e83:	push   ecx
30006e84:	mov    DWORD PTR [ebp+0xc],eax
30006e87:	mov    eax,DWORD PTR [esi]
30006e89:	push   0x2
30006e8b:	mov    ecx,esi
30006e8d:	call   DWORD PTR [eax+0x2c]
30006e90:	test   eax,eax
30006e92:	js     0x30006eaa
30006e94:	push   DWORD PTR [ebp+0xc]
30006e97:	mov    eax,DWORD PTR [esi]
30006e99:	push   edi
30006e9a:	mov    ecx,esi
30006e9c:	call   DWORD PTR [eax+0x28]
30006e9f:	push   edi
30006ea0:	lea    ecx,[esi+0xc]
30006ea3:	call   0x30006e3c
30006ea8:	xor    eax,eax
30006eaa:	pop    edi
30006eab:	pop    esi
30006eac:	pop    ebp
30006ead:	ret    0x8
30006eb0:	push   ebp
30006eb1:	mov    ebp,esp
30006eb3:	push   esi
30006eb4:	mov    esi,DWORD PTR [ebp+0x8]
30006eb7:	push   DWORD PTR [ebp+0xc]
30006eba:	lea    ecx,[esi+0x690]
30006ec0:	call   0x30006e3c
30006ec5:	push   DWORD PTR [ebp+0xc]
30006ec8:	push   esi
30006ec9:	call   0x30006e6a
30006ece:	pop    esi
30006ecf:	pop    ebp
30006ed0:	ret    0x8
30006ed3:	push   ebp
30006ed4:	mov    ebp,esp
30006ed6:	pop    ebp
30006ed7:	jmp    DWORD PTR ds:0x3004310c
30006edd:	push   0x4
30006edf:	mov    eax,0x30040860
30006ee4:	call   0x3000116a
30006ee9:	mov    esi,ecx
30006eeb:	mov    ebx,DWORD PTR [ebp+0xc]
30006eee:	test   ebx,ebx
30006ef0:	je     0x30006f3c
30006ef2:	cmp    DWORD PTR [ebp+0x14],0x0
30006ef6:	je     0x30006f3c
30006ef8:	cmp    DWORD PTR [ebp+0x20],0x0
30006efc:	je     0x30006f3c
30006efe:	mov    eax,DWORD PTR [esi]
30006f00:	test   eax,eax
30006f02:	je     0x30006f31
30006f04:	xor    ecx,ecx
30006f06:	mov    DWORD PTR [ebp+0xc],ecx
30006f09:	cmp    DWORD PTR [eax+0x4],ecx
30006f0c:	jle    0x30006f31
30006f0e:	push   ecx
30006f0f:	mov    ecx,eax
30006f11:	call   0x300011e5
30006f16:	mov    edi,eax
30006f18:	mov    eax,DWORD PTR [ebp+0x8]
30006f1b:	cmp    eax,DWORD PTR [edi]
30006f1d:	je     0x30020ffb
30006f23:	mov    ecx,DWORD PTR [ebp+0xc]
30006f26:	mov    eax,DWORD PTR [esi]
30006f28:	inc    ecx
30006f29:	mov    DWORD PTR [ebp+0xc],ecx
30006f2c:	cmp    ecx,DWORD PTR [eax+0x4]
30006f2f:	jl     0x30006f0e
30006f31:	xor    eax,eax
30006f33:	inc    eax
30006f34:	call   0x3000119d
30006f39:	ret    0x1c
30006f3c:	mov    eax,0x80070057
30006f41:	jmp    0x30006f34
30006f43:	push   ebp
30006f44:	mov    ebp,esp
30006f46:	sub    esp,0x224
30006f4c:	mov    eax,ds:0x30043050
30006f51:	xor    eax,ebp
30006f53:	mov    DWORD PTR [ebp-0x4],eax
30006f56:	mov    eax,DWORD PTR [ebp+0x14]
30006f59:	mov    DWORD PTR [ebp-0x210],eax
30006f5f:	mov    eax,DWORD PTR [ebp+0x20]
30006f62:	push   ebx
30006f63:	mov    ebx,DWORD PTR [ebp+0xc]
30006f66:	mov    DWORD PTR [ebp-0x21c],eax
30006f6c:	mov    eax,DWORD PTR [ebp+0x24]
30006f6f:	push   esi
30006f70:	mov    DWORD PTR [ebp-0x218],eax
30006f76:	mov    eax,DWORD PTR [ebp+0x28]
30006f79:	push   edi
30006f7a:	mov    edi,DWORD PTR [ebp+0x8]
30006f7d:	mov    DWORD PTR [ebp-0x214],eax
30006f83:	xor    eax,eax
30006f85:	push   0x206
30006f8a:	push   eax
30006f8b:	mov    WORD PTR [ebp-0x20c],ax
30006f92:	lea    eax,[ebp-0x20a]
30006f98:	push   eax
30006f99:	call   0x300011b1
30006f9e:	mov    esi,DWORD PTR [ebp+0x18]
30006fa1:	add    esp,0xc
30006fa4:	lea    eax,[ebp-0x224]
30006faa:	push   eax
30006fab:	push   ecx
30006fac:	lea    eax,[ebp-0x20c]
30006fb2:	push   eax
30006fb3:	lea    eax,[ebp-0x220]
30006fb9:	push   eax
30006fba:	push   esi
30006fbb:	push   ebx
30006fbc:	push   edi
30006fbd:	call   0x300011c1
30006fc2:	mov    ecx,eax
30006fc4:	call   0x30006edd
30006fc9:	test   eax,eax
30006fcb:	je     0x30020eb1
30006fd1:	push   DWORD PTR [ebp-0x214]
30006fd7:	push   DWORD PTR [ebp-0x218]
30006fdd:	push   DWORD PTR [ebp-0x21c]
30006fe3:	push   DWORD PTR [ebp+0x1c]
30006fe6:	push   esi
30006fe7:	push   DWORD PTR [ebp-0x210]
30006fed:	push   DWORD PTR [ebp+0x10]
30006ff0:	push   ebx
30006ff1:	push   edi
30006ff2:	call   DWORD PTR ds:0x30043108
30006ff8:	cmp    eax,0x3fd
30006ffd:	je     0x30020ee1
30007003:	mov    ecx,DWORD PTR [ebp-0x4]
30007006:	pop    edi
30007007:	pop    esi
30007008:	xor    ecx,ebp
3000700a:	pop    ebx
3000700b:	call   0x3000115c
30007010:	leave  
30007011:	ret    0x24
30007014:	push   esi
30007015:	push   edi
30007016:	mov    esi,ecx
30007018:	xor    edi,edi
3000701a:	cmp    DWORD PTR [esi+0x8],edi
3000701d:	jbe    0x30007037
3000701f:	mov    ecx,DWORD PTR [esi]
30007021:	test   ecx,ecx
30007023:	je     0x300203a0
30007029:	mov    eax,DWORD PTR [ecx]
3000702b:	push   ecx
3000702c:	mov    ecx,esi
3000702e:	mov    DWORD PTR [esi],eax
30007030:	call   0x300089f5
30007035:	jmp    0x3000701a
30007037:	mov    ecx,DWORD PTR [esi+0xc]
3000703a:	mov    DWORD PTR [esi],edi
3000703c:	mov    DWORD PTR [esi+0x4],edi
3000703f:	mov    DWORD PTR [esi+0x10],edi
30007042:	test   ecx,ecx
30007044:	jne    0x300089e8
3000704a:	pop    edi
3000704b:	pop    esi
3000704c:	ret    
3000704d:	xor    eax,eax
3000704f:	mov    DWORD PTR [ecx],eax
30007051:	mov    DWORD PTR [ecx+0x4],eax
30007054:	mov    DWORD PTR [ecx+0x8],eax
30007057:	mov    DWORD PTR [ecx+0xc],eax
3000705a:	mov    DWORD PTR [ecx+0x10],eax
3000705d:	mov    DWORD PTR [ecx+0x14],0xa
30007064:	mov    eax,ecx
30007066:	ret    0x4
30007069:	xor    edi,edi
3000706b:	cmp    WORD PTR [esi+0x3c],di
3000706f:	je     0x300060a6
30007075:	jmp    0x30020c90
3000707a:	xor    edi,edi
3000707c:	cmp    WORD PTR [esi+0x3c],di
30007080:	je     0x300060a6
30007086:	jmp    0x30020cae
3000708b:	mov    esi,0x300071f8
30007090:	mov    edi,ebx
30007092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30007093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30007094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30007095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30007096:	xor    eax,eax
30007098:	jmp    0x300071e6
3000709d:	push   ebp
3000709e:	mov    ebp,esp
300070a0:	push   ecx
300070a1:	lea    eax,[ebp-0x4]
300070a4:	push   eax
300070a5:	push   DWORD PTR [ebp+0x8]
300070a8:	lea    eax,[ebp+0x8]
300070ab:	push   eax
300070ac:	push   0x0
300070ae:	push   DWORD PTR [edx]
300070b0:	mov    DWORD PTR [ebp-0x4],0x4
300070b7:	push   DWORD PTR [ecx]
300070b9:	call   DWORD PTR ds:0x3004500c
300070bf:	test   eax,eax
300070c1:	jle    0x300070cd
300070c3:	movzx  eax,ax
300070c6:	or     eax,0x80070000
300070cb:	test   eax,eax
300070cd:	jns    0x300074c4
300070d3:	leave  
300070d4:	ret    0x4
300070d7:	neg    eax
300070d9:	sbb    eax,eax
300070db:	mov    WORD PTR [edi+0x8],ax
300070df:	jmp    0x30004ff3
300070e4:	push   ebp
300070e5:	mov    ebp,esp
300070e7:	push   ecx
300070e8:	push   ecx
300070e9:	mov    eax,DWORD PTR [ebp+0x8]
300070ec:	and    DWORD PTR [ebp-0x4],0x0
300070f0:	push   esi
300070f1:	mov    esi,ecx
300070f3:	mov    DWORD PTR [ebp-0x8],eax
300070f6:	cmp    DWORD PTR [esi],0x0
300070f9:	jne    0x300202e8
300070ff:	lea    eax,[ebp-0x8]
30007102:	push   eax
30007103:	push   0x1
30007105:	push   0x8
30007107:	call   DWORD PTR ds:0x3004550c
3000710d:	mov    DWORD PTR [esi],eax
3000710f:	test   eax,eax
30007111:	je     0x300202f2
30007117:	push   eax
30007118:	call   DWORD PTR ds:0x30045500
3000711e:	pop    esi
3000711f:	leave  
30007120:	ret    0x8
30007123:	push   esi
30007124:	mov    esi,ecx
30007126:	cmp    DWORD PTR [esi],0x0
30007129:	jne    0x300202c0
3000712f:	pop    esi
30007130:	ret    
30007131:	lea    eax,[esp+0x10]
30007135:	push   eax
30007136:	call   0x30008fa7
3000713b:	push   DWORD PTR [eax]
3000713d:	lea    ecx,[esp+0x24]
30007141:	call   0x30001488
30007146:	mov    eax,DWORD PTR [eax]
30007148:	push   ecx
30007149:	mov    DWORD PTR [esp+0x18],eax
3000714d:	lea    eax,[esp+0x18]
30007151:	push   eax
30007152:	push   esi
30007153:	lea    ecx,[esp+0x18]
30007157:	call   0x3000c9e8
3000715c:	push   DWORD PTR [esp+0x20]
30007160:	inc    esi
30007161:	call   DWORD PTR ds:0x300454e8
30007167:	cmp    DWORD PTR [esp+0x10],ebx
3000716b:	jne    0x30007131
3000716d:	mov    esi,DWORD PTR [esp+0xc]
30007171:	push   esi
30007172:	call   DWORD PTR ds:0x30045504
30007178:	mov    eax,0x2008
3000717d:	lea    ecx,[esp+0xc]
30007181:	mov    DWORD PTR [esp+0xc],ebx
30007185:	mov    DWORD PTR [edi+0x8],esi
30007188:	mov    WORD PTR [edi],ax
3000718b:	call   0x30007123
30007190:	lea    ecx,[esp+0x30]
30007194:	call   0x30007014
30007199:	jmp    0x30004ff3
3000719e:	push   ebp
3000719f:	mov    ebp,esp
300071a1:	sub    esp,0x21c
300071a7:	mov    eax,ds:0x30043050
300071ac:	xor    eax,ebp
300071ae:	mov    DWORD PTR [ebp-0x4],eax
300071b1:	mov    eax,DWORD PTR [ebp+0xc]
300071b4:	push   ebx
300071b5:	mov    ebx,DWORD PTR [ebp+0x10]
300071b8:	push   esi
300071b9:	mov    esi,DWORD PTR [ebp+0x8]
300071bc:	push   edi
300071bd:	cmp    eax,0xffffdeb7
300071c2:	je     0x3000708b
300071c8:	cmp    eax,0xffffdeb9
300071cd:	je     0x3001f350
300071d3:	cmp    eax,0xffffdeba
300071d8:	je     0x3001f335
300071de:	push   ebx
300071df:	push   eax
300071e0:	push   esi
300071e1:	call   0x30007208
300071e6:	mov    ecx,DWORD PTR [ebp-0x4]
300071e9:	pop    edi
300071ea:	pop    esi
300071eb:	xor    ecx,ebp
300071ed:	pop    ebx
300071ee:	call   0x3000115c
300071f3:	leave  
300071f4:	ret    0xc
300071f7:	nop
	...
30007208:	push   ebp
30007209:	mov    ebp,esp
3000720b:	push   edi
3000720c:	mov    edi,DWORD PTR [ebp+0x10]
3000720f:	test   edi,edi
30007211:	je     0x30020d2e
30007217:	cmp    DWORD PTR [ebp+0xc],0xffffdecb
3000721e:	jne    0x3000b96e
30007224:	push   esi
30007225:	mov    esi,DWORD PTR [ebp+0x8]
30007228:	xor    eax,eax
3000722a:	lea    esi,[esi+0x1c]
3000722d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000722e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000722f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30007230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30007231:	pop    esi
30007232:	pop    edi
30007233:	pop    ebp
30007234:	ret    0xc
30007237:	push   DWORD PTR [esi+0x10]
3000723a:	call   DWORD PTR ds:0x300454ec
30007240:	test   eax,eax
30007242:	jne    0x30020c7d
30007248:	push   0x3
3000724a:	pop    eax
3000724b:	mov    WORD PTR [ebx],ax
3000724e:	mov    eax,DWORD PTR [esi+0x18]
30007251:	mov    DWORD PTR [ebx+0x8],eax
30007254:	xor    eax,eax
30007256:	jmp    0x300060ab
3000725b:	push   ebp
3000725c:	mov    ebp,esp
3000725e:	push   0x0
30007260:	call   0x30004615
30007265:	mov    ecx,eax
30007267:	test   ecx,ecx
30007269:	je     0x300277d8
3000726f:	mov    eax,DWORD PTR [ecx]
30007271:	push   0x0
30007273:	lea    edx,[ebp+0x14]
30007276:	push   edx
30007277:	push   0x0
30007279:	push   DWORD PTR [ebp+0x10]
3000727c:	push   DWORD PTR [ebp+0xc]
3000727f:	push   DWORD PTR [ebp+0x8]
30007282:	call   DWORD PTR [eax+0x4]
30007285:	pop    ebp
30007286:	ret    0x10
30007289:	push   ebp
3000728a:	mov    ebp,esp
3000728c:	push   DWORD PTR [ebp+0x18]
3000728f:	push   DWORD PTR [ebp+0x14]
30007292:	push   DWORD PTR [ebp+0x10]
30007295:	push   DWORD PTR [ebp+0xc]
30007298:	call   0x3000725b
3000729d:	pop    ebp
3000729e:	ret    0x14
300072a1:	push   ebp
300072a2:	mov    ebp,esp
300072a4:	sub    esp,0x14
300072a7:	mov    eax,ds:0x30043050
300072ac:	xor    eax,ebp
300072ae:	mov    DWORD PTR [ebp-0x4],eax
300072b1:	push   ebx
300072b2:	xor    ebx,ebx
300072b4:	lea    eax,[ebp-0x14]
300072b7:	push   eax
300072b8:	push   ebx
300072b9:	push   ebx
300072ba:	push   ebx
300072bb:	push   ebx
300072bc:	push   ebx
300072bd:	push   ebx
300072be:	push   DWORD PTR [ebp+0x8]
300072c1:	lea    eax,[ebp-0xc]
300072c4:	push   0x20
300072c6:	push   0x2
300072c8:	push   eax
300072c9:	mov    DWORD PTR [ebp-0x10],ebx
300072cc:	mov    DWORD PTR [ebp-0xc],ebx
300072cf:	mov    WORD PTR [ebp-0x8],0x500
300072d5:	call   DWORD PTR ds:0x30045020
300072db:	mov    DWORD PTR [ebp-0x10],eax
300072de:	test   eax,eax
300072e0:	je     0x30007303
300072e2:	lea    eax,[ebp-0x10]
300072e5:	push   eax
300072e6:	push   DWORD PTR [ebp-0x14]
300072e9:	push   ebx
300072ea:	call   DWORD PTR ds:0x3004501c
300072f0:	push   DWORD PTR [ebp-0x14]
300072f3:	neg    eax
300072f5:	sbb    eax,eax
300072f7:	and    DWORD PTR [ebp-0x10],eax
300072fa:	call   DWORD PTR ds:0x30045084
30007300:	mov    eax,DWORD PTR [ebp-0x10]
30007303:	mov    ecx,DWORD PTR [ebp-0x4]
30007306:	xor    ecx,ebp
30007308:	pop    ebx
30007309:	call   0x3000115c
3000730e:	leave  
3000730f:	ret    0x4
30007312:	push   0x220
30007317:	call   0x300072a1
3000731c:	ret    
3000731d:	push   ebp
3000731e:	mov    ebp,esp
30007320:	mov    eax,DWORD PTR [ebp+0x8]
30007323:	push   esi
30007324:	mov    esi,ecx
30007326:	test   eax,eax
30007328:	je     0x3002366d
3000732e:	mov    eax,DWORD PTR [eax]
30007330:	mov    DWORD PTR [ebp+0x8],eax
30007333:	test   eax,eax
30007335:	jne    0x3001da5f
3000733b:	pop    esi
3000733c:	pop    ebp
3000733d:	ret    0x4
30007340:	push   ebp
30007341:	mov    ebp,esp
30007343:	sub    esp,0x28
30007346:	push   ebx
30007347:	push   edi
30007348:	mov    edi,ecx
3000734a:	xor    ebx,ebx
3000734c:	cmp    DWORD PTR [edi+0x4],ebx
3000734f:	je     0x30023098
30007355:	push   esi
30007356:	lea    ecx,[ebp-0x4]
30007359:	mov    DWORD PTR [ebp-0x28],ebx
3000735c:	mov    DWORD PTR [ebp-0x24],ebx
3000735f:	mov    DWORD PTR [ebp-0x20],ebx
30007362:	call   0x300051c8
30007367:	push   0x30007474
3000736c:	push   DWORD PTR [edi+0x30]
3000736f:	lea    eax,[ebp-0x4]
30007372:	push   0x3000522c
30007377:	push   eax
30007378:	call   0x30005153
3000737d:	add    esp,0x10
30007380:	lea    ecx,[ebp-0x28]
30007383:	push   0x20019
30007388:	push   DWORD PTR [ebp-0x4]
3000738b:	push   0x80000002
30007390:	call   0x300051d9
30007395:	mov    esi,eax
30007397:	test   esi,esi
30007399:	jle    0x300073a6
3000739b:	movzx  esi,si
3000739e:	or     esi,0x80070000
300073a4:	test   esi,esi
300073a6:	jns    0x3000757c
300073ac:	cmp    si,0x2
300073b0:	jne    0x30023137
300073b6:	mov    eax,DWORD PTR [edi+0x4]
300073b9:	add    eax,0x44
300073bc:	push   eax
300073bd:	lea    ecx,[ebp-0xc]
300073c0:	call   0x30004340
300073c5:	push   0x30007474
300073ca:	push   DWORD PTR [ebp-0xc]
300073cd:	lea    eax,[ebp-0x4]
300073d0:	push   0x3000522c
300073d5:	push   eax
300073d6:	call   0x30005153
300073db:	add    esp,0x10
300073de:	lea    ecx,[ebp-0xc]
300073e1:	call   0x300051a4
300073e6:	push   0x20019
300073eb:	push   DWORD PTR [ebp-0x4]
300073ee:	lea    ecx,[ebp-0x28]
300073f1:	push   0x80000001
300073f6:	call   0x300051d9
300073fb:	mov    esi,eax
300073fd:	test   esi,esi
300073ff:	jg     0x3001e189
30007405:	js     0x3001e199
3000740b:	call   0x30007312
30007410:	test   eax,eax
30007412:	mov    eax,0x30007498
30007417:	je     0x30023189
3000741d:	push   eax
3000741e:	lea    ecx,[ebp-0x14]
30007421:	call   0x3000437e
30007426:	lea    eax,[ebp-0x10]
30007429:	push   eax
3000742a:	lea    edx,[ebp-0x14]
3000742d:	lea    ecx,[ebp-0x28]
30007430:	call   0x3000709d
30007435:	test   eax,eax
30007437:	jg     0x30023193
3000743d:	js     0x300053b4
30007443:	cmp    BYTE PTR ds:0x300430f1,bl
30007449:	jne    0x300231a2
3000744f:	cmp    DWORD PTR [ebp-0x10],ebx
30007452:	lea    ecx,[ebp-0x14]
30007455:	setne  bl
30007458:	call   0x300051a4
3000745d:	lea    ecx,[ebp-0x4]
30007460:	call   0x300051a4
30007465:	lea    ecx,[ebp-0x28]
30007468:	call   0x300051ae
3000746d:	mov    al,bl
3000746f:	pop    esi
30007470:	pop    edi
30007471:	pop    ebx
30007472:	leave  
30007473:	ret    
30007474:	inc    ebp
30007475:	add    BYTE PTR [eax+0x0],bh
30007478:	je     0x3000747a
3000747a:	add    BYTE PTR gs:[esi+0x0],ch
3000747e:	jae    0x30007480
30007480:	imul   eax,DWORD PTR [eax],0x6e006f
30007486:	dec    ebp
30007487:	add    BYTE PTR [ecx+0x0],ah
3000748a:	outs   dx,BYTE PTR ds:[esi]
3000748b:	add    BYTE PTR [ecx+0x0],ah
3000748e:	add    BYTE PTR [di+0x0],ah
30007492:	jb     0x30007494
30007494:	add    BYTE PTR [eax],al
30007496:	nop
30007497:	nop
30007498:	inc    ebp
30007499:	add    BYTE PTR [esi+0x0],ch
3000749c:	popa   
3000749d:	add    BYTE PTR [edx+0x0],ah
300074a0:	ins    BYTE PTR es:[edi],dx
300074a1:	add    BYTE PTR [ebp+0x0],ah
300074a4:	inc    ecx
300074a5:	add    BYTE PTR [eax+eax*1+0x6d],ah
300074a9:	add    BYTE PTR [ecx+0x0],ch
300074ac:	outs   dx,BYTE PTR ds:[esi]
300074ad:	add    BYTE PTR [ebp+0x0],al
300074b0:	js     0x300074b2
300074b2:	je     0x300074b4
300074b4:	add    BYTE PTR gs:[esi+0x0],ch
300074b8:	jae    0x300074ba
300074ba:	imul   eax,DWORD PTR [eax],0x6e006f
300074c0:	jae    0x300074c2
300074c2:	add    BYTE PTR [eax],al
300074c4:	xor    eax,eax
300074c6:	jmp    0x300070d3
300074cb:	push   0xb
300074cd:	pop    eax
300074ce:	mov    WORD PTR [edi],ax
300074d1:	mov    eax,DWORD PTR [esi+0xc8]
300074d7:	jmp    0x300070d7
300074dc:	cmp    DWORD PTR [esi+0x5fc],0x0
300074e3:	je     0x300049f8
300074e9:	push   0xb
300074eb:	pop    eax
300074ec:	mov    WORD PTR [edi],ax
300074ef:	mov    ecx,DWORD PTR [esi+0x5fc]
300074f5:	mov    eax,DWORD PTR [ecx]
300074f7:	call   DWORD PTR [eax+0x30]
300074fa:	movzx  eax,al
300074fd:	jmp    0x300070d7
30007502:	mov    ebx,DWORD PTR [esi+0x5fc]
30007508:	test   ebx,ebx
3000750a:	je     0x300049f8
30007510:	push   ecx
30007511:	lea    ecx,[esp+0x34]
30007515:	call   0x3000704d
3000751a:	mov    eax,DWORD PTR [ebx]
3000751c:	lea    ecx,[esp+0x30]
30007520:	push   ecx
30007521:	mov    ecx,ebx
30007523:	call   DWORD PTR [eax+0x18]
30007526:	mov    esi,eax
30007528:	test   esi,esi
3000752a:	js     0x300053db
30007530:	push   ecx
30007531:	push   DWORD PTR [esp+0x3c]
30007535:	xor    ebx,ebx
30007537:	lea    ecx,[esp+0x14]
3000753b:	mov    DWORD PTR [esp+0x14],ebx
3000753f:	call   0x300070e4
30007544:	mov    eax,DWORD PTR [esp+0x30]
30007548:	mov    DWORD PTR [esp+0x10],eax
3000754c:	mov    esi,ebx
3000754e:	test   eax,eax
30007550:	je     0x3000716d
30007556:	jmp    0x30004e7f
3000755b:	push   ebp
3000755c:	mov    ebp,esp
3000755e:	push   esi
3000755f:	mov    esi,ecx
30007561:	mov    ecx,DWORD PTR [ebp+0x8]
30007564:	call   0x30007014
30007569:	mov    ecx,DWORD PTR [ebp+0x8]
3000756c:	lea    eax,[esi+0x4c]
3000756f:	push   eax
30007570:	call   0x3000731d
30007575:	xor    eax,eax
30007577:	pop    esi
30007578:	pop    ebp
30007579:	ret    0x4
3000757c:	push   0x300075bc
30007581:	lea    ecx,[ebp-0xc]
30007584:	mov    DWORD PTR [ebp-0x8],ebx
30007587:	call   0x3000437e
3000758c:	lea    eax,[ebp-0x8]
3000758f:	push   eax
30007590:	lea    edx,[ebp-0xc]
30007593:	lea    ecx,[ebp-0x28]
30007596:	call   0x3000709d
3000759b:	mov    esi,eax
3000759d:	test   esi,esi
3000759f:	jg     0x300230bf
300075a5:	lea    ecx,[ebp-0xc]
300075a8:	call   0x300051a4
300075ad:	test   esi,esi
300075af:	js     0x300073b6
300075b5:	jmp    0x300230cd
300075ba:	nop
300075bb:	nop
300075bc:	inc    esp
300075bd:	add    BYTE PTR [ecx+0x0],ch
300075c0:	jae    0x300075c2
300075c2:	popa   
300075c3:	add    BYTE PTR [edx+0x0],ah
300075c6:	ins    BYTE PTR es:[edi],dx
300075c7:	add    BYTE PTR [ebp+0x0],ah
300075ca:	push   ebp
300075cb:	add    BYTE PTR [ebx+0x0],dh
300075ce:	add    BYTE PTR gs:[edx+0x0],dh
300075d2:	inc    ebp
300075d3:	add    BYTE PTR [eax+0x0],bh
300075d6:	je     0x300075d8
300075d8:	add    BYTE PTR gs:[esi+0x0],ch
300075dc:	jae    0x300075de
300075de:	imul   eax,DWORD PTR [eax],0x6e006f
300075e4:	jae    0x300075e6
300075e6:	add    BYTE PTR [eax],al
300075e8:	mov    ecx,edi
300075ea:	call   0x300014b2
300075ef:	mov    ecx,DWORD PTR [ebp-0x4]
300075f2:	mov    DWORD PTR [edi],ecx
300075f4:	test   esi,esi
300075f6:	jmp    0x300061e3
300075fb:	mov    eax,0x80004003
30007600:	jmp    0x300061f1
30007605:	push   ebp
30007606:	mov    ebp,esp
30007608:	push   ecx
30007609:	cmp    DWORD PTR [ecx],0x0
3000760c:	je     0x3001feec
30007612:	push   esi
30007613:	mov    esi,DWORD PTR [ebp+0xc]
30007616:	test   esi,esi
30007618:	je     0x3001fef6
3000761e:	and    DWORD PTR [ebp+0xc],0x0
30007622:	push   edi
30007623:	push   0x4
30007625:	pop    edi
30007626:	lea    eax,[ebp-0x4]
30007629:	push   eax
3000762a:	push   esi
3000762b:	lea    eax,[ebp+0xc]
3000762e:	push   eax
3000762f:	push   0x0
30007631:	push   DWORD PTR [ebp+0x8]
30007634:	mov    DWORD PTR [ebp-0x4],edi
30007637:	push   DWORD PTR [ecx]
30007639:	call   DWORD PTR ds:0x3004500c
3000763f:	test   eax,eax
30007641:	jne    0x30014550
30007647:	cmp    DWORD PTR [ebp+0xc],edi
3000764a:	jne    0x3001ff00
30007650:	cmp    DWORD PTR [ebp-0x4],edi
30007653:	jne    0x3001ff00
30007659:	pop    edi
3000765a:	pop    esi
3000765b:	leave  
3000765c:	ret    0x8
3000765f:	jmp    DWORD PTR ds:0x3004534c
30007665:	jmp    DWORD PTR ds:0x30045340
3000766b:	jmp    DWORD PTR ds:0x30045334
30007671:	push   ebp
30007672:	mov    ebp,esp
30007674:	mov    eax,DWORD PTR [ebp+0x8]
30007677:	push   esi
30007678:	mov    esi,ecx
3000767a:	lea    eax,[eax*2+0x2]
30007681:	cmp    DWORD PTR [esi],0x0
30007684:	push   eax
30007685:	je     0x300076a6
30007687:	push   DWORD PTR [esi]
30007689:	push   0x0
3000768b:	call   DWORD PTR ds:0x300451cc
30007691:	push   eax
30007692:	call   DWORD PTR ds:0x300451c0
30007698:	test   eax,eax
3000769a:	je     0x300076b7
3000769c:	mov    DWORD PTR [esi],eax
3000769e:	xor    eax,eax
300076a0:	inc    eax
300076a1:	pop    esi
300076a2:	pop    ebp
300076a3:	ret    0x4
300076a6:	push   0x0
300076a8:	call   DWORD PTR ds:0x300451cc
300076ae:	push   eax
300076af:	call   DWORD PTR ds:0x300451bc
300076b5:	jmp    0x30007698
300076b7:	xor    eax,eax
300076b9:	jmp    0x300076a1
300076bb:	push   ebp
300076bc:	mov    ebp,esp
300076be:	push   esi
300076bf:	push   DWORD PTR [ebp+0x10]
300076c2:	xor    esi,esi
300076c4:	push   DWORD PTR [ebp+0x8]
300076c7:	push   DWORD PTR [ebp+0xc]
300076ca:	push   0x30007700
300076cf:	push   DWORD PTR [ebp+0x1c]
300076d2:	push   DWORD PTR [ebp+0x20]
300076d5:	call   0x3000766b
300076da:	add    esp,0x18
300076dd:	push   DWORD PTR [ebp+0x20]
300076e0:	call   DWORD PTR ds:0x300451ec
300076e6:	cmp    eax,0xffffffff
300076e9:	je     0x300076f7
300076eb:	cmp    DWORD PTR [ebp+0x14],esi
300076ee:	jne    0x30028996
300076f4:	xor    esi,esi
300076f6:	inc    esi
300076f7:	mov    eax,esi
300076f9:	pop    esi
300076fa:	pop    ebp
300076fb:	ret    0x1c
300076fe:	nop
300076ff:	nop
30007700:	and    eax,0x25007300
30007705:	add    BYTE PTR [ebp+0x0],dh
30007708:	pop    esp
30007709:	add    BYTE PTR ds:0x7300,ah
3000770f:	add    BYTE PTR [ebp-0x75],dl
30007712:	in     al,dx
30007713:	sub    esp,0x34
30007716:	mov    eax,ds:0x30043050
3000771b:	xor    eax,ebp
3000771d:	mov    DWORD PTR [ebp-0x4],eax
30007720:	mov    eax,DWORD PTR [ebp+0xc]
30007723:	mov    DWORD PTR [ebp-0x34],eax
30007726:	mov    eax,DWORD PTR [ebp+0x10]
30007729:	mov    DWORD PTR [ebp-0x28],eax
3000772c:	mov    eax,DWORD PTR [ebp+0x14]
3000772f:	mov    DWORD PTR [ebp-0x24],eax
30007732:	mov    eax,DWORD PTR [ebp+0x1c]
30007735:	push   ebx
30007736:	push   esi
30007737:	mov    DWORD PTR [ebp-0x2c],eax
3000773a:	mov    eax,DWORD PTR [ebp+0x24]
3000773d:	push   edi
3000773e:	mov    DWORD PTR [ebp-0x30],eax
30007741:	call   DWORD PTR ds:0x3004509c
30007747:	movzx  esi,ax
3000774a:	call   0x30007d11
3000774f:	mov    edx,DWORD PTR [ebp+0x8]
30007752:	movzx  edi,ax
30007755:	mov    ecx,edx
30007757:	shr    ecx,0x10
3000775a:	and    ecx,0xf
3000775d:	mov    eax,edx
3000775f:	and    eax,0x3ff
30007764:	shl    ecx,0x10
30007767:	or     ecx,eax
30007769:	mov    ebx,0x400
3000776e:	or     ecx,ebx
30007770:	mov    DWORD PTR [ebp-0x20],edx
30007773:	neg    edx
30007775:	sbb    edx,edx
30007777:	mov    eax,esi
30007779:	shr    eax,0x10
3000777c:	and    eax,0xf
3000777f:	shl    eax,0x10
30007782:	and    edx,ecx
30007784:	lea    ecx,[ebx-0x1]
30007787:	mov    DWORD PTR [ebp-0x18],esi
3000778a:	and    esi,ecx
3000778c:	or     eax,esi
3000778e:	or     eax,ebx
30007790:	mov    DWORD PTR [ebp-0x14],eax
30007793:	mov    eax,edi
30007795:	shr    eax,0x10
30007798:	and    eax,0xf
3000779b:	mov    DWORD PTR [ebp-0x10],edi
3000779e:	and    edi,ecx
300077a0:	shl    eax,0x10
300077a3:	or     eax,edi
300077a5:	or     eax,ebx
300077a7:	xor    edi,edi
300077a9:	push   0x7
300077ab:	mov    DWORD PTR [ebp-0x1c],edx
300077ae:	inc    edi
300077af:	mov    DWORD PTR [ebp-0xc],eax
300077b2:	mov    DWORD PTR [ebp-0x8],0x409
300077b9:	lea    edx,[ebp-0x20]
300077bc:	pop    ebx
300077bd:	xor    esi,esi
300077bf:	cmp    DWORD PTR [edx],esi
300077c1:	jne    0x30007815
300077c3:	inc    edi
300077c4:	add    edx,0x4
300077c7:	dec    ebx
300077c8:	jne    0x300077bf
300077ca:	mov    edi,DWORD PTR [ebp-0x30]
300077cd:	mov    ebx,DWORD PTR [ebp-0x34]
300077d0:	mov    eax,DWORD PTR [ebp+esi*4-0x20]
300077d4:	test   eax,eax
300077d6:	je     0x30014563
300077dc:	push   edi
300077dd:	push   DWORD PTR [ebp+0x20]
300077e0:	push   DWORD PTR [ebp+0x18]
300077e3:	push   DWORD PTR [ebp-0x24]
300077e6:	push   DWORD PTR [ebp-0x28]
300077e9:	push   ebx
300077ea:	push   eax
300077eb:	call   0x300076bb
300077f0:	test   eax,eax
300077f2:	je     0x30014563
300077f8:	mov    edx,DWORD PTR [ebp-0x2c]
300077fb:	mov    ecx,DWORD PTR [ebp+esi*4-0x20]
300077ff:	xor    eax,eax
30007801:	mov    DWORD PTR [edx],ecx
30007803:	inc    eax
30007804:	mov    ecx,DWORD PTR [ebp-0x4]
30007807:	pop    edi
30007808:	pop    esi
30007809:	xor    ecx,ebp
3000780b:	pop    ebx
3000780c:	call   0x3000115c
30007811:	leave  
30007812:	ret    0x20
30007815:	mov    ecx,edi
30007817:	cmp    edi,0x7
3000781a:	jae    0x300077c3
3000781c:	mov    eax,DWORD PTR [ebp+ecx*4-0x20]
30007820:	cmp    eax,DWORD PTR [edx]
30007822:	jne    0x30007828
30007824:	mov    DWORD PTR [ebp+ecx*4-0x20],esi
30007828:	inc    ecx
30007829:	cmp    ecx,0x7
3000782c:	jb     0x3000781c
3000782e:	jmp    0x300077c3
30007830:	push   ebp
30007831:	mov    ebp,esp
30007833:	push   ebx
30007834:	push   esi
30007835:	push   DWORD PTR [ebp+0x8]
30007838:	mov    esi,DWORD PTR [ebp+0x10]
3000783b:	push   DWORD PTR [ebp+0xc]
3000783e:	push   esi
3000783f:	call   0x30006ce1
30007844:	add    esp,0xc
30007847:	mov    ecx,esi
30007849:	xor    ebx,ebx
3000784b:	lea    edx,[ecx+0x2]
3000784e:	mov    DWORD PTR [ebp+0x8],ebx
30007851:	mov    ax,WORD PTR [ecx]
30007854:	add    ecx,0x2
30007857:	cmp    ax,bx
3000785a:	jne    0x30007851
3000785c:	sub    ecx,edx
3000785e:	push   0x5c
30007860:	sar    ecx,1
30007862:	pop    ebx
30007863:	cmp    WORD PTR [esi+ecx*2-0x2],bx
30007868:	jne    0x300289a6
3000786e:	push   esi
3000786f:	call   DWORD PTR ds:0x300451ec
30007875:	cmp    eax,0xffffffff
30007878:	je     0x300289bc
3000787e:	xor    eax,eax
30007880:	inc    eax
30007881:	pop    esi
30007882:	pop    ebx
30007883:	pop    ebp
30007884:	ret    0xc
30007887:	push   ebp
30007888:	mov    ebp,esp
3000788a:	sub    esp,0x624
30007890:	mov    eax,ds:0x30043050
30007895:	xor    eax,ebp
30007897:	mov    DWORD PTR [ebp-0x4],eax
3000789a:	mov    eax,DWORD PTR [ebp+0xc]
3000789d:	mov    ecx,DWORD PTR [ebp+0x14]
300078a0:	push   ebx
300078a1:	mov    ebx,DWORD PTR [ebp+0x20]
300078a4:	push   esi
300078a5:	mov    esi,DWORD PTR [ebp+0x10]
300078a8:	push   edi
300078a9:	mov    edi,DWORD PTR [ebp+0x1c]
300078ac:	mov    DWORD PTR [ebp-0x624],ecx
300078b2:	test   eax,eax
300078b4:	je     0x30007970
300078ba:	xor    edx,edx
300078bc:	cmp    WORD PTR [eax],dx
300078bf:	je     0x30007970
300078c5:	test   esi,esi
300078c7:	je     0x30007970
300078cd:	cmp    WORD PTR [esi],dx
300078d0:	je     0x30007970
300078d6:	xor    ecx,ecx
300078d8:	mov    WORD PTR [ebp-0x61c],cx
300078df:	lea    ecx,[ebp-0x20c]
300078e5:	push   ecx
300078e6:	push   0x104
300078eb:	push   eax
300078ec:	mov    DWORD PTR [ebp-0x620],edx
300078f2:	call   0x30007830
300078f7:	test   eax,eax
300078f9:	je     0x30028926
300078ff:	lea    eax,[ebp-0x61c]
30007905:	push   eax
30007906:	push   0x208
3000790b:	lea    eax,[ebp-0x620]
30007911:	push   eax
30007912:	push   DWORD PTR [ebp+0x18]
30007915:	lea    eax,[ebp-0x20c]
3000791b:	push   DWORD PTR [ebp-0x624]
30007921:	push   esi
30007922:	push   eax
30007923:	push   DWORD PTR [ebp+0x8]
30007926:	call   0x30007710
3000792b:	test   eax,eax
3000792d:	je     0x30028930
30007933:	mov    eax,DWORD PTR [ebp-0x620]
30007939:	test   eax,eax
3000793b:	je     0x30007969
3000793d:	test   ebx,ebx
3000793f:	je     0x30007943
30007941:	mov    DWORD PTR [ebx],eax
30007943:	test   edi,edi
30007945:	je     0x30007956
30007947:	lea    eax,[ebp-0x61c]
3000794d:	push   eax
3000794e:	call   DWORD PTR ds:0x300454dc
30007954:	mov    DWORD PTR [edi],eax
30007956:	xor    eax,eax
30007958:	mov    ecx,DWORD PTR [ebp-0x4]
3000795b:	pop    edi
3000795c:	pop    esi
3000795d:	xor    ecx,ebp
3000795f:	pop    ebx
30007960:	call   0x3000115c
30007965:	leave  
30007966:	ret    0x1c
30007969:	mov    eax,0x80004005
3000796e:	jmp    0x30007958
30007970:	mov    eax,0x80070057
30007975:	jmp    0x30007958
30007977:	push   0x840
3000797c:	mov    eax,0x30040d1d
30007981:	call   0x300045c8
30007986:	mov    edi,edx
30007988:	mov    DWORD PTR [ebp-0x838],ecx
3000798e:	mov    eax,DWORD PTR [ebp+0x8]
30007991:	mov    esi,DWORD PTR [ebp+0x10]
30007994:	mov    DWORD PTR [ebp-0x84c],eax
3000799a:	mov    eax,DWORD PTR [ebp+0x14]
3000799d:	mov    DWORD PTR [ebp-0x848],eax
300079a3:	xor    eax,eax
300079a5:	push   0x206
300079aa:	mov    WORD PTR [ebp-0x218],ax
300079b1:	xor    ebx,ebx
300079b3:	lea    eax,[ebp-0x216]
300079b9:	push   ebx
300079ba:	push   eax
300079bb:	mov    DWORD PTR [ebp-0x844],esi
300079c1:	call   0x300011b1
300079c6:	xor    eax,eax
300079c8:	push   0x40e
300079cd:	mov    WORD PTR [ebp-0x628],ax
300079d4:	lea    eax,[ebp-0x626]
300079da:	push   ebx
300079db:	push   eax
300079dc:	call   0x300011b1
300079e1:	xor    eax,eax
300079e3:	push   0x206
300079e8:	mov    WORD PTR [ebp-0x830],ax
300079ef:	lea    eax,[ebp-0x82e]
300079f5:	push   ebx
300079f6:	push   eax
300079f7:	call   0x300011b1
300079fc:	add    esp,0x24
300079ff:	mov    DWORD PTR [ebp-0x840],ebx
30007a05:	mov    DWORD PTR [ebp-0x4],ebx
30007a08:	mov    DWORD PTR [ebp-0x83c],ebx
30007a0e:	cmp    DWORD PTR [ebp-0x84c],ebx
30007a14:	je     0x3000eda2
30007a1a:	test   esi,esi
30007a1c:	je     0x3000ed96
30007a22:	mov    DWORD PTR [esi],ebx
30007a24:	mov    eax,DWORD PTR [ebp-0x838]
30007a2a:	test   eax,eax
30007a2c:	je     0x30007ac1
30007a32:	push   eax
30007a33:	lea    ecx,[ebp-0x838]
30007a39:	call   0x30001488
30007a3e:	mov    DWORD PTR [ebp-0x834],ebx
30007a44:	push   0x30007b48
30007a49:	lea    ecx,[ebp-0x838]
30007a4f:	mov    BYTE PTR [ebp-0x4],0x2
30007a53:	call   0x300062d8
30007a58:	test   eax,eax
30007a5a:	js     0x3002158d
30007a60:	push   0x20019
30007a65:	push   DWORD PTR [ebp-0x838]
30007a6b:	lea    ecx,[ebp-0x834]
30007a71:	push   0x80000001
30007a76:	call   0x300061a4
30007a7b:	test   eax,eax
30007a7d:	js     0x30007aa7
30007a7f:	lea    eax,[ebp-0x83c]
30007a85:	push   eax
30007a86:	push   0x30007b5c
30007a8b:	lea    ecx,[ebp-0x834]
30007a91:	call   0x30007605
30007a96:	mov    eax,DWORD PTR [ebp-0x83c]
30007a9c:	inc    eax
30007a9d:	neg    eax
30007a9f:	sbb    eax,eax
30007aa1:	and    DWORD PTR [ebp-0x83c],eax
30007aa7:	lea    ecx,[ebp-0x834]
30007aad:	call   0x300014b2
30007ab2:	mov    BYTE PTR [ebp-0x4],bl
30007ab5:	push   DWORD PTR [ebp-0x838]
30007abb:	call   DWORD PTR ds:0x300454e8
30007ac1:	mov    ecx,edi
30007ac3:	call   0x30007b72
30007ac8:	test   eax,eax
30007aca:	je     0x300084ec
30007ad0:	push   DWORD PTR [ebp-0x848]
30007ad6:	lea    eax,[ebp-0x840]
30007adc:	push   eax
30007add:	push   ebx
30007ade:	push   ebx
30007adf:	push   DWORD PTR [ebp-0x84c]
30007ae5:	push   edi
30007ae6:	push   DWORD PTR [ebp-0x83c]
30007aec:	call   0x30007887
30007af1:	mov    esi,eax
30007af3:	test   esi,esi
30007af5:	js     0x30007b1f
30007af7:	mov    edi,DWORD PTR [ebp-0x844]
30007afd:	test   edi,edi
30007aff:	je     0x30007b1f
30007b01:	cmp    BYTE PTR [ebp+0xc],0x0
30007b05:	jne    0x30007b1f
30007b07:	push   ebx
30007b08:	push   ebx
30007b09:	push   DWORD PTR [ebp-0x840]
30007b0f:	call   DWORD PTR ds:0x30045210
30007b15:	mov    DWORD PTR [edi],eax
30007b17:	test   eax,eax
30007b19:	je     0x300215c7
30007b1f:	mov    ebx,DWORD PTR [ebp-0x840]
30007b25:	xor    eax,eax
30007b27:	test   esi,esi
30007b29:	setns  al
30007b2c:	mov    DWORD PTR [ebp-0x844],eax
30007b32:	mov    esi,eax
30007b34:	push   ebx
30007b35:	call   DWORD PTR ds:0x300454e8
30007b3b:	mov    eax,esi
30007b3d:	call   0x300045fe
30007b42:	ret    0x10
30007b45:	nop
30007b46:	nop
30007b47:	nop
30007b48:	pop    esp
30007b49:	add    BYTE PTR [edi+0x0],al
30007b4c:	add    BYTE PTR gs:[esi+0x0],ch
30007b50:	add    BYTE PTR gs:[edx+0x0],dh
30007b54:	popa   
30007b55:	add    BYTE PTR [eax+eax*1+0x0],ch
30007b59:	add    BYTE PTR [eax+0x49005590],dl
30007b5f:	add    BYTE PTR [eax+eax*1+0x61],cl
30007b63:	add    BYTE PTR [esi+0x0],ch
30007b66:	add    BYTE PTR [di+0x0],dh
30007b6a:	popa   
30007b6b:	add    BYTE PTR [edi+0x0],ah
30007b6e:	add    BYTE PTR gs:[eax],al
30007b71:	add    BYTE PTR [ebp-0x75],dl
30007b74:	in     al,dx
30007b75:	sub    esp,0xc
30007b78:	mov    eax,ds:0x30043050
30007b7d:	xor    eax,ebp
30007b7f:	mov    DWORD PTR [ebp-0x4],eax
30007b82:	push   esi
30007b83:	mov    esi,ecx
30007b85:	push   edi
30007b86:	test   esi,esi
30007b88:	je     0x300080a2
30007b8e:	lea    edx,[ecx+0x2]
30007b91:	xor    edi,edi
30007b93:	mov    ax,WORD PTR [ecx]
30007b96:	add    ecx,0x2
30007b99:	cmp    ax,di
30007b9c:	jne    0x30007b93
30007b9e:	sub    ecx,edx
30007ba0:	sar    ecx,1
30007ba2:	cmp    ecx,0x1
30007ba5:	jbe    0x300080a2
30007bab:	push   edi
30007bac:	push   edi
30007bad:	push   edi
30007bae:	push   edi
30007baf:	push   edi
30007bb0:	push   edi
30007bb1:	push   0x3
30007bb3:	lea    ecx,[ebp-0xc]
30007bb6:	push   ecx
30007bb7:	push   esi
30007bb8:	call   DWORD PTR ds:0x30045314
30007bbe:	add    esp,0x24
30007bc1:	cmp    WORD PTR [ebp-0xc],di
30007bc5:	je     0x300080a9
30007bcb:	xor    eax,eax
30007bcd:	inc    eax
30007bce:	mov    ecx,DWORD PTR [ebp-0x4]
30007bd1:	pop    edi
30007bd2:	xor    ecx,ebp
30007bd4:	pop    esi
30007bd5:	call   0x3000115c
30007bda:	leave  
30007bdb:	ret    
30007bdc:	push   ebp
30007bdd:	mov    ebp,esp
30007bdf:	mov    edx,DWORD PTR [ebp+0x10]
30007be2:	mov    eax,DWORD PTR [ebp+0x8]
30007be5:	push   esi
30007be6:	mov    esi,DWORD PTR [ebp+0xc]
30007be9:	push   edi
30007bea:	lea    edi,[esi+edx*1]
30007bed:	mov    DWORD PTR [eax],edi
30007bef:	test   esi,esi
30007bf1:	je     0x30007c18
30007bf3:	test   edx,edx
30007bf5:	je     0x30007c18
30007bf7:	xor    ecx,ecx
30007bf9:	test   esi,esi
30007bfb:	setg   cl
30007bfe:	xor    eax,eax
30007c00:	test   edx,edx
30007c02:	setg   al
30007c05:	cmp    ecx,eax
30007c07:	jne    0x30007c18
30007c09:	xor    eax,eax
30007c0b:	test   edi,edi
30007c0d:	setg   al
30007c10:	cmp    ecx,eax
30007c12:	jne    0x30028a37
30007c18:	xor    eax,eax
30007c1a:	pop    edi
30007c1b:	pop    esi
30007c1c:	pop    ebp
30007c1d:	ret    0xc
30007c20:	push   ebp
30007c21:	mov    ebp,esp
30007c23:	push   esi
30007c24:	mov    esi,DWORD PTR [ebp+0x10]
30007c27:	test   esi,esi
30007c29:	je     0x30028a0f
30007c2f:	push   DWORD PTR [ebp+0xc]
30007c32:	and    DWORD PTR [ebp+0x10],0x0
30007c36:	push   DWORD PTR [ebp+0x8]
30007c39:	lea    eax,[ebp+0x10]
30007c3c:	push   eax
30007c3d:	call   0x30007bdc
30007c42:	mov    ecx,DWORD PTR [ebp+0x10]
30007c45:	mov    DWORD PTR [esi],ecx
30007c47:	pop    esi
30007c48:	pop    ebp
30007c49:	ret    0xc
30007c4c:	push   ebp
30007c4d:	mov    ebp,esp
30007c4f:	push   esi
30007c50:	mov    esi,DWORD PTR [ebp+0x10]
30007c53:	test   esi,esi
30007c55:	je     0x30028a19
30007c5b:	push   esi
30007c5c:	push   DWORD PTR [ebp+0xc]
30007c5f:	push   DWORD PTR [ebp+0x8]
30007c62:	call   0x30007c20
30007c67:	test   eax,eax
30007c69:	js     0x30007c7a
30007c6b:	cmp    DWORD PTR [esi],0x0
30007c6e:	jl     0x30028a23
30007c74:	je     0x30028a2d
30007c7a:	pop    esi
30007c7b:	pop    ebp
30007c7c:	ret    0xc
30007c7f:	push   ebp
30007c80:	mov    ebp,esp
30007c82:	push   ecx
30007c83:	push   ebx
30007c84:	push   esi
30007c85:	push   edi
30007c86:	mov    edi,ecx
30007c88:	push   DWORD PTR [edi]
30007c8a:	call   DWORD PTR ds:0x30045204
30007c90:	mov    esi,DWORD PTR [ebp+0xc]
30007c93:	and    DWORD PTR [ebp-0x4],0x0
30007c97:	mov    ebx,eax
30007c99:	lea    eax,[ebp-0x4]
30007c9c:	push   eax
30007c9d:	push   esi
30007c9e:	push   ebx
30007c9f:	call   0x30007c4c
30007ca4:	test   eax,eax
30007ca6:	js     0x30007ce9
30007ca8:	cmp    DWORD PTR [ebp+0x8],0x0
30007cac:	je     0x30007ce9
30007cae:	push   DWORD PTR [ebp-0x4]
30007cb1:	mov    ecx,edi
30007cb3:	call   0x30007671
30007cb8:	test   eax,eax
30007cba:	je     0x30007ce9
30007cbc:	mov    ecx,DWORD PTR [edi]
30007cbe:	lea    eax,[ebx+ebx*1]
30007cc1:	push   eax
30007cc2:	add    esi,esi
30007cc4:	push   ecx
30007cc5:	lea    eax,[esi+ecx*1]
30007cc8:	push   eax
30007cc9:	call   0x3000765f
30007cce:	push   esi
30007ccf:	push   DWORD PTR [ebp+0x8]
30007cd2:	push   DWORD PTR [edi]
30007cd4:	call   0x3000151c
30007cd9:	mov    ecx,DWORD PTR [ebp+0xc]
30007cdc:	mov    eax,DWORD PTR [edi]
30007cde:	add    ecx,ebx
30007ce0:	add    esp,0x18
30007ce3:	xor    edx,edx
30007ce5:	mov    WORD PTR [eax+ecx*2],dx
30007ce9:	mov    eax,edi
30007ceb:	pop    edi
30007cec:	pop    esi
30007ced:	pop    ebx
30007cee:	leave  
30007cef:	ret    0x8
30007cf2:	push   ebp
30007cf3:	mov    ebp,esp
30007cf5:	push   esi
30007cf6:	push   DWORD PTR [ebp+0x8]
30007cf9:	mov    esi,ecx
30007cfb:	call   DWORD PTR ds:0x30045204
30007d01:	push   eax
30007d02:	push   DWORD PTR [ebp+0x8]
30007d05:	mov    ecx,esi
30007d07:	call   0x30007c7f
30007d0c:	pop    esi
30007d0d:	pop    ebp
30007d0e:	ret    0x4
30007d11:	push   ebp
30007d12:	mov    ebp,esp
30007d14:	sub    esp,0x10
30007d17:	push   esi
30007d18:	call   DWORD PTR ds:0x300450a0
30007d1e:	movzx  esi,ax
30007d21:	mov    eax,esi
30007d23:	mov    DWORD PTR [ebp-0x10],eax
30007d26:	xor    ecx,ecx
30007d28:	lea    eax,[ebp-0x4]
30007d2b:	push   eax
30007d2c:	push   ecx
30007d2d:	lea    eax,[ebp-0x8]
30007d30:	push   eax
30007d31:	push   0x4
30007d33:	mov    DWORD PTR [ebp-0x8],ecx
30007d36:	mov    DWORD PTR [ebp-0x4],ecx
30007d39:	call   DWORD PTR ds:0x30045098
30007d3f:	test   eax,eax
30007d41:	je     0x30007da1
30007d43:	push   DWORD PTR [ebp-0x4]
30007d46:	lea    ecx,[ebp-0xc]
30007d49:	push   0x30006ce8
30007d4e:	call   0x30007e05
30007d53:	lea    eax,[ebp-0x4]
30007d56:	push   eax
30007d57:	push   DWORD PTR [ebp-0xc]
30007d5a:	lea    eax,[ebp-0x8]
30007d5d:	push   eax
30007d5e:	push   0x4
30007d60:	call   DWORD PTR ds:0x30045098
30007d66:	test   eax,eax
30007d68:	je     0x30007d99
30007d6a:	cmp    DWORD PTR [ebp-0x8],0x0
30007d6e:	jbe    0x30007d99
30007d70:	push   0x30006cbc
30007d75:	lea    ecx,[ebp-0xc]
30007d78:	call   0x30007cf2
30007d7d:	lea    ecx,[ebp-0x10]
30007d80:	push   ecx
30007d81:	push   0x30007da8
30007d86:	push   DWORD PTR [eax]
30007d88:	call   0x30007665
30007d8d:	add    esp,0xc
30007d90:	cmp    eax,0x1
30007d93:	jne    0x3002891c
30007d99:	lea    ecx,[ebp-0xc]
30007d9c:	call   0x30007db0
30007da1:	mov    ax,WORD PTR [ebp-0x10]
30007da5:	pop    esi
30007da6:	leave  
30007da7:	ret    
30007da8:	and    eax,0x78006800
30007dad:	add    BYTE PTR [eax],al
30007daf:	add    bh,bh
30007db1:	xor    DWORD PTR [edx+0x0],ebp
30007db4:	call   DWORD PTR ds:0x300451cc
30007dba:	push   eax
30007dbb:	call   DWORD PTR ds:0x300451c4
30007dc1:	ret    
30007dc2:	push   ebp
30007dc3:	mov    ebp,esp
30007dc5:	push   esi
30007dc6:	mov    esi,DWORD PTR [ebp+0xc]
30007dc9:	push   edi
30007dca:	push   esi
30007dcb:	mov    edi,ecx
30007dcd:	call   0x30007671
30007dd2:	test   eax,eax
30007dd4:	je     0x30007df4
30007dd6:	cmp    DWORD PTR [ebp+0x8],0x0
30007dda:	je     0x30007dfc
30007ddc:	add    esi,esi
30007dde:	push   esi
30007ddf:	push   DWORD PTR [ebp+0x8]
30007de2:	push   DWORD PTR [edi]
30007de4:	call   0x3000151c
30007de9:	mov    eax,DWORD PTR [edi]
30007deb:	add    esp,0xc
30007dee:	xor    ecx,ecx
30007df0:	mov    WORD PTR [esi+eax*1],cx
30007df4:	mov    eax,edi
30007df6:	pop    edi
30007df7:	pop    esi
30007df8:	pop    ebp
30007df9:	ret    0x8
30007dfc:	mov    eax,DWORD PTR [edi]
30007dfe:	xor    ecx,ecx
30007e00:	mov    WORD PTR [eax],cx
30007e03:	jmp    0x30007df4
30007e05:	push   ebp
30007e06:	mov    ebp,esp
30007e08:	push   esi
30007e09:	push   DWORD PTR [ebp+0xc]
30007e0c:	mov    esi,ecx
30007e0e:	push   DWORD PTR [ebp+0x8]
30007e11:	and    DWORD PTR [esi],0x0
30007e14:	call   0x30007dc2
30007e19:	mov    eax,esi
30007e1b:	pop    esi
30007e1c:	pop    ebp
30007e1d:	ret    0x8
30007e20:	push   esi
30007e21:	push   edi
30007e22:	mov    esi,ecx
30007e24:	or     edi,0xffffffff
30007e27:	lea    edx,[esi+0x4]
30007e2a:	mov    eax,edi
30007e2c:	lock xadd DWORD PTR [edx],eax
30007e30:	je     0x30007eaa
30007e32:	pop    edi
30007e33:	pop    esi
30007e34:	ret    
30007e35:	nop
30007e36:	nop
30007e37:	nop
30007e38:	ins    DWORD PTR es:[edi],dx
30007e39:	add    BYTE PTR [ebx+0x0],dh
30007e3c:	add    BYTE PTR gs:[esi+0x0],ch
30007e40:	jbe    0x30007e42
30007e42:	ins    DWORD PTR es:[edi],dx
30007e43:	add    BYTE PTR [ebp+0x0],dh
30007e46:	imul   eax,DWORD PTR [eax],0x64002e
30007e4c:	ins    BYTE PTR es:[edi],dx
30007e4d:	add    BYTE PTR [eax+eax*1+0x0],ch
30007e51:	add    BYTE PTR [ebp-0x75],dl
30007e54:	in     al,dx
30007e55:	push   esi
30007e56:	mov    esi,ecx
30007e58:	cmp    BYTE PTR [esi],0x0
30007e5b:	je     0x30007e78
30007e5d:	cmp    DWORD PTR [esi+0x14],0x0
30007e61:	je     0x30007e78
30007e63:	push   DWORD PTR [esi+0x14]
30007e66:	call   DWORD PTR ds:0x30045168
30007e6c:	test   eax,eax
30007e6e:	je     0x3001f5be
30007e74:	and    DWORD PTR [esi+0x14],0x0
30007e78:	mov    ecx,DWORD PTR [esi+0x8]
30007e7b:	sub    ecx,0x10
30007e7e:	call   0x30004017
30007e83:	mov    ecx,DWORD PTR [esi+0x4]
30007e86:	sub    ecx,0x10
30007e89:	call   0x30004017
30007e8e:	test   BYTE PTR [ebp+0x8],0x1
30007e92:	jne    0x3001f5c9
30007e98:	mov    eax,esi
30007e9a:	pop    esi
30007e9b:	pop    ebp
30007e9c:	ret    0x4
30007e9f:	push   0x0
30007ea1:	add    ecx,0xc
30007ea4:	call   0x30007e52
30007ea9:	ret    
30007eaa:	mov    eax,DWORD PTR [esi]
30007eac:	call   DWORD PTR [eax]
30007eae:	lea    eax,[esi+0x8]
30007eb1:	lock xadd DWORD PTR [eax],edi
30007eb5:	dec    edi
30007eb6:	jne    0x30007e32
30007ebc:	mov    eax,DWORD PTR [esi]
30007ebe:	pop    edi
30007ebf:	mov    ecx,esi
30007ec1:	pop    esi
30007ec2:	jmp    DWORD PTR [eax+0x4]
30007ec5:	test   ecx,ecx
30007ec7:	je     0x30007ed0
30007ec9:	mov    eax,DWORD PTR [ecx]
30007ecb:	push   0x1
30007ecd:	call   DWORD PTR [eax+0x8]
30007ed0:	ret    
30007ed1:	push   ebp
30007ed2:	mov    ebp,esp
30007ed4:	test   BYTE PTR [ebp+0x8],0x1
30007ed8:	push   esi
30007ed9:	mov    esi,ecx
30007edb:	mov    DWORD PTR [esi],0x3000150c
30007ee1:	je     0x30007eeb
30007ee3:	push   esi
30007ee4:	call   DWORD PTR ds:0x300452ac
30007eea:	pop    ecx
30007eeb:	mov    eax,esi
30007eed:	pop    esi
30007eee:	pop    ebp
30007eef:	ret    0x4
30007ef2:	push   esi
30007ef3:	mov    esi,ecx
30007ef5:	mov    ecx,DWORD PTR [esi+0x14]
30007ef8:	sub    ecx,0x10
30007efb:	call   0x30004017
30007f00:	mov    ecx,DWORD PTR [esi+0x10]
30007f03:	sub    ecx,0x10
30007f06:	call   0x30004017
30007f0b:	mov    ecx,DWORD PTR [esi+0xc]
30007f0e:	sub    ecx,0x10
30007f11:	pop    esi
30007f12:	jmp    0x30004017
30007f17:	push   0x4
30007f19:	mov    eax,0x3003e1af
30007f1e:	call   0x3000116a
30007f23:	mov    esi,ecx
30007f25:	mov    DWORD PTR [ebp-0x10],esi
30007f28:	push   DWORD PTR [ebp+0x14]
30007f2b:	xor    ebx,ebx
30007f2d:	mov    DWORD PTR [ebp-0x4],ebx
30007f30:	lea    ecx,[esi+0x4]
30007f33:	mov    BYTE PTR [esi],bl
30007f35:	call   0x3000437e
30007f3a:	mov    BYTE PTR [ebp-0x4],0x1
30007f3e:	mov    eax,DWORD PTR [ebp+0x10]
30007f41:	add    eax,0xfffffff0
30007f44:	push   eax
30007f45:	call   0x30004306
30007f4a:	add    eax,0x10
30007f4d:	mov    DWORD PTR [esi+0x8],eax
30007f50:	mov    eax,DWORD PTR [ebp+0x8]
30007f53:	pop    ecx
30007f54:	mov    ecx,DWORD PTR [ebp+0x10]
30007f57:	mov    DWORD PTR [esi+0xc],eax
30007f5a:	mov    eax,DWORD PTR [ebp+0xc]
30007f5d:	lea    ecx,[ecx-0x10]
30007f60:	mov    DWORD PTR [esi+0x10],eax
30007f63:	mov    DWORD PTR [esi+0x14],ebx
30007f66:	mov    DWORD PTR [esi+0x18],ebx
30007f69:	call   0x30004017
30007f6e:	mov    eax,esi
30007f70:	call   0x3000119d
30007f75:	ret    0x10
30007f78:	push   ebp
30007f79:	mov    ebp,esp
30007f7b:	mov    eax,DWORD PTR [ebp+0x8]
30007f7e:	push   ebx
30007f7f:	push   esi
30007f80:	mov    esi,ecx
30007f82:	push   edi
30007f83:	and    DWORD PTR [esi],0x0
30007f86:	and    DWORD PTR [esi+0x4],0x0
30007f8a:	mov    edi,DWORD PTR [eax+0x4]
30007f8d:	mov    ebx,DWORD PTR [eax]
30007f8f:	test   edi,edi
30007f91:	je     0x30007f9d
30007f93:	xor    ecx,ecx
30007f95:	lea    eax,[edi+0x4]
30007f98:	inc    ecx
30007f99:	lock xadd DWORD PTR [eax],ecx
30007f9d:	mov    ecx,DWORD PTR [esi+0x4]
30007fa0:	test   ecx,ecx
30007fa2:	jne    0x3001ed46
30007fa8:	mov    DWORD PTR [esi+0x4],edi
30007fab:	pop    edi
30007fac:	mov    DWORD PTR [esi],ebx
30007fae:	mov    eax,esi
30007fb0:	pop    esi
30007fb1:	pop    ebx
30007fb2:	pop    ebp
30007fb3:	ret    0x4
30007fb6:	push   0x18
30007fb8:	mov    eax,0x3003e0ba
30007fbd:	call   0x3000116a
30007fc2:	mov    DWORD PTR [ebp-0x10],edx
30007fc5:	mov    edi,ecx
30007fc7:	mov    DWORD PTR [ebp-0x14],edi
30007fca:	and    DWORD PTR [ebp-0x4],0x0
30007fce:	and    DWORD PTR [ebp-0x18],0x0
30007fd2:	push   0x28
30007fd4:	call   0x30003fee
30007fd9:	mov    esi,eax
30007fdb:	pop    ecx
30007fdc:	mov    DWORD PTR [ebp-0x1c],esi
30007fdf:	xor    eax,eax
30007fe1:	inc    eax
30007fe2:	mov    DWORD PTR [ebp-0x4],eax
30007fe5:	test   esi,esi
30007fe7:	je     0x30008038
30007fe9:	mov    DWORD PTR [esi+0x4],eax
30007fec:	mov    DWORD PTR [esi+0x8],eax
30007fef:	lea    ebx,[esi+0xc]
30007ff2:	mov    DWORD PTR [esi],0x3000803c
30007ff8:	mov    DWORD PTR [ebp-0x20],ebx
30007ffb:	mov    BYTE PTR [ebp-0x4],0x3
30007fff:	test   ebx,ebx
30008001:	je     0x30008026
30008003:	mov    eax,DWORD PTR [ebp+0xc]
30008006:	push   0x30007e38
3000800b:	push   ecx
3000800c:	mov    ecx,esp
3000800e:	push   DWORD PTR [eax]
30008010:	call   0x3000437e
30008015:	mov    eax,DWORD PTR [ebp+0x8]
30008018:	mov    ecx,ebx
3000801a:	push   DWORD PTR [eax]
3000801c:	mov    eax,DWORD PTR [ebp-0x10]
3000801f:	push   DWORD PTR [eax]
30008021:	call   0x30007f17
30008026:	lea    eax,[esi+0xc]
30008029:	mov    DWORD PTR [edi],eax
3000802b:	mov    DWORD PTR [edi+0x4],esi
3000802e:	mov    eax,edi
30008030:	call   0x3000119d
30008035:	ret    0xc
30008038:	xor    esi,esi
3000803a:	jmp    0x30008026
3000803c:	lahf   
3000803d:	jle    0x3000803f
3000803f:	xor    ch,al
30008041:	jle    0x30008043
30008043:	xor    cl,dl
30008045:	jle    0x30008047
30008047:	xor    al,al
30008049:	push   edx
3000804a:	add    BYTE PTR [eax],dh
3000804c:	push   ebp
3000804d:	mov    ebp,esp
3000804f:	push   ecx
30008050:	and    DWORD PTR [ebp-0x4],0x0
30008054:	push   ecx
30008055:	lea    eax,[ecx+0x664]
3000805b:	push   0x300434dc
30008060:	lea    edx,[ecx+0x660]
30008066:	mov    ecx,DWORD PTR [ebp+0x8]
30008069:	push   eax
3000806a:	call   0x30007fb6
3000806f:	mov    eax,DWORD PTR [ebp+0x8]
30008072:	leave  
30008073:	ret    0x4
30008076:	push   ebp
30008077:	mov    ebp,esp
30008079:	mov    edx,ecx
3000807b:	push   esi
3000807c:	mov    esi,DWORD PTR [ebp+0x8]
3000807f:	xor    ecx,ecx
30008081:	mov    DWORD PTR [edx],ecx
30008083:	mov    DWORD PTR [edx+0x4],ecx
30008086:	cmp    edx,esi
30008088:	je     0x3000809b
3000808a:	mov    eax,DWORD PTR [esi+0x4]
3000808d:	mov    DWORD PTR [edx+0x4],eax
30008090:	mov    DWORD PTR [esi+0x4],ecx
30008093:	mov    eax,DWORD PTR [esi]
30008095:	mov    ecx,DWORD PTR [edx]
30008097:	mov    DWORD PTR [edx],eax
30008099:	mov    DWORD PTR [esi],ecx
3000809b:	mov    eax,edx
3000809d:	pop    esi
3000809e:	pop    ebp
3000809f:	ret    0x4
300080a2:	xor    eax,eax
300080a4:	jmp    0x30007bce
300080a9:	push   0x5c
300080ab:	pop    eax
300080ac:	cmp    ax,WORD PTR [esi]
300080af:	je     0x3002166a
300080b5:	jmp    0x300080a2
300080b7:	xor    eax,eax
300080b9:	cmp    ax,WORD PTR [esi+0x4]
300080bd:	je     0x300080a2
300080bf:	jmp    0x30007bcb
300080c4:	push   0x4
300080c6:	mov    eax,0x3003f47e
300080cb:	call   0x3000116a
300080d0:	mov    eax,ecx
300080d2:	mov    DWORD PTR [ebp-0x10],eax
300080d5:	mov    ebx,DWORD PTR [ebp+0x8]
300080d8:	mov    edi,eax
300080da:	mov    esi,ebx
300080dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300080dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300080de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300080df:	mov    eax,DWORD PTR [ebx+0xc]
300080e2:	push   0x10
300080e4:	pop    edi
300080e5:	sub    eax,edi
300080e7:	push   eax
300080e8:	call   0x30004306
300080ed:	mov    esi,DWORD PTR [ebp-0x10]
300080f0:	add    eax,edi
300080f2:	mov    DWORD PTR [esi+0xc],eax
300080f5:	and    DWORD PTR [ebp-0x4],0x0
300080f9:	mov    eax,DWORD PTR [ebx+0x10]
300080fc:	sub    eax,edi
300080fe:	push   eax
300080ff:	call   0x30004306
30008104:	add    eax,edi
30008106:	mov    DWORD PTR [esi+0x10],eax
30008109:	mov    BYTE PTR [ebp-0x4],0x1
3000810d:	mov    eax,DWORD PTR [ebx+0x14]
30008110:	sub    eax,edi
30008112:	push   eax
30008113:	call   0x30004306
30008118:	add    esp,0xc
3000811b:	add    eax,edi
3000811d:	mov    DWORD PTR [esi+0x14],eax
30008120:	mov    eax,esi
30008122:	call   0x3000119d
30008127:	ret    0x4
3000812a:	push   ebp
3000812b:	mov    ebp,esp
3000812d:	push   ecx
3000812e:	push   ecx
3000812f:	push   esi
30008130:	push   edi
30008131:	push   DWORD PTR [ebp+0x8]
30008134:	mov    edi,ecx
30008136:	lea    ecx,[ebp-0x8]
30008139:	call   0x30007f78
3000813e:	mov    edx,DWORD PTR [edi+0x4]
30008141:	mov    esi,DWORD PTR [eax+0x4]
30008144:	mov    DWORD PTR [eax+0x4],edx
30008147:	mov    DWORD PTR [edi+0x4],esi
3000814a:	mov    ecx,DWORD PTR [edi]
3000814c:	mov    edx,DWORD PTR [eax]
3000814e:	mov    DWORD PTR [eax],ecx
30008150:	mov    ecx,DWORD PTR [ebp-0x4]
30008153:	mov    DWORD PTR [edi],edx
30008155:	test   ecx,ecx
30008157:	jne    0x300203b3
3000815d:	mov    eax,edi
3000815f:	pop    edi
30008160:	pop    esi
30008161:	leave  
30008162:	ret    0x4
30008165:	push   ebp
30008166:	mov    ebp,esp
30008168:	push   ecx
30008169:	push   ebx
3000816a:	mov    ebx,DWORD PTR [ebp+0x8]
3000816d:	push   esi
3000816e:	push   edi
3000816f:	mov    edi,ecx
30008171:	mov    esi,ebx
30008173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008175:	lea    eax,[ebx+0xc]
30008178:	mov    DWORD PTR [ebp-0x4],ecx
3000817b:	push   eax
3000817c:	add    ecx,0xc
3000817f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008180:	call   0x300014c1
30008185:	mov    esi,DWORD PTR [ebp-0x4]
30008188:	lea    eax,[ebx+0x10]
3000818b:	push   eax
3000818c:	lea    ecx,[esi+0x10]
3000818f:	call   0x300014c1
30008194:	lea    eax,[ebx+0x14]
30008197:	push   eax
30008198:	lea    ecx,[esi+0x14]
3000819b:	call   0x300014c1
300081a0:	pop    edi
300081a1:	mov    eax,esi
300081a3:	pop    esi
300081a4:	pop    ebx
300081a5:	leave  
300081a6:	ret    0x4
300081a9:	push   ebp
300081aa:	mov    ebp,esp
300081ac:	cmp    DWORD PTR [ebp+0x8],0x0
300081b0:	push   edi
300081b1:	mov    edi,ecx
300081b3:	je     0x300203f7
300081b9:	push   DWORD PTR [ebp+0x8]
300081bc:	call   DWORD PTR ds:0x300454e0
300081c2:	test   eax,eax
300081c4:	js     0x300081e2
300081c6:	push   0x10
300081c8:	push   edi
300081c9:	push   0x10
300081cb:	push   DWORD PTR [ebp+0x8]
300081ce:	call   DWORD PTR ds:0x300453b4
300081d4:	add    esp,0x10
300081d7:	push   eax
300081d8:	call   0x30001432
300081dd:	xor    eax,eax
300081df:	mov    WORD PTR [edi],ax
300081e2:	pop    edi
300081e3:	pop    ebp
300081e4:	ret    0x4
300081e7:	push   ebp
300081e8:	mov    ebp,esp
300081ea:	mov    ecx,DWORD PTR [ebp+0xc]
300081ed:	test   ecx,ecx
300081ef:	je     0x30020396
300081f5:	mov    eax,DWORD PTR [ebp+0x8]
300081f8:	add    eax,0x2c
300081fb:	mov    DWORD PTR [ecx],eax
300081fd:	xor    eax,eax
300081ff:	pop    ebp
30008200:	ret    0x8
30008203:	nop
30008204:	xchg   ebx,eax
30008205:	ins    BYTE PTR es:[edi],dx
30008206:	add    esi,DWORD PTR [eax]
30008208:	push   cs
30008209:	outs   dx,BYTE PTR ds:[esi]
3000820a:	add    esi,DWORD PTR [eax]
3000820c:	fild   DWORD PTR [esi+0x6e8c3000]
30008212:	add    esi,DWORD PTR [eax]
30008214:	push   ebp
30008215:	mov    ebp,esp
30008217:	push   DWORD PTR [ebp+0x10]
3000821a:	push   DWORD PTR [ebp+0xc]
3000821d:	push   0x30008230
30008222:	push   DWORD PTR [ebp+0x8]
30008225:	call   DWORD PTR ds:0x30045424
3000822b:	pop    ebp
3000822c:	ret    0xc
3000822f:	nop
30008230:	loopne 0x300081b4
30008232:	add    BYTE PTR [eax],dh
30008234:	add    BYTE PTR [eax],al
30008236:	add    BYTE PTR [eax],al
30008238:	add    DWORD PTR [eax],eax
	...
30008246:	add    BYTE PTR [eax],al
30008248:	push   0x20
3000824a:	mov    eax,0x3003f1ec
3000824f:	call   0x3000116a
30008254:	mov    ebx,edx
30008256:	mov    DWORD PTR [ebp-0x14],ecx
30008259:	and    DWORD PTR [ebp-0x10],0x0
3000825d:	lea    ecx,[ebp-0x10]
30008260:	call   0x300088e7
30008265:	mov    esi,DWORD PTR [ebp-0x10]
30008268:	mov    edi,eax
3000826a:	test   edi,edi
3000826c:	js     0x300082c6
3000826e:	test   esi,esi
30008270:	je     0x300082c6
30008272:	mov    eax,DWORD PTR [esi]
30008274:	push   esi
30008275:	call   DWORD PTR [eax+0x4]
30008278:	push   ebx
30008279:	lea    ecx,[ebp-0x2c]
3000827c:	call   0x300080c4
30008281:	push   DWORD PTR [ebp-0x14]
30008284:	and    DWORD PTR [ebp-0x4],0x0
30008288:	lea    ecx,[esi+0x24]
3000828b:	call   0x3000812a
30008290:	lea    eax,[ebp-0x2c]
30008293:	push   eax
30008294:	lea    ecx,[esi+0x2c]
30008297:	call   0x30008165
3000829c:	or     DWORD PTR [ebp-0x4],0xffffffff
300082a0:	lea    ecx,[ebp-0x2c]
300082a3:	call   0x30007ef2
300082a8:	mov    ebx,DWORD PTR [ebp+0xc]
300082ab:	mov    eax,DWORD PTR [esi]
300082ad:	push   ebx
300082ae:	push   0x300082e0
300082b3:	push   esi
300082b4:	call   DWORD PTR [eax]
300082b6:	mov    edi,eax
300082b8:	test   edi,edi
300082ba:	js     0x300203ab
300082c0:	mov    eax,DWORD PTR [esi]
300082c2:	push   esi
300082c3:	call   DWORD PTR [eax+0x8]
300082c6:	mov    eax,DWORD PTR [ebp+0x10]
300082c9:	test   eax,eax
300082cb:	je     0x300082d3
300082cd:	test   edi,edi
300082cf:	js     0x300082d3
300082d1:	mov    DWORD PTR [eax],esi
300082d3:	mov    eax,edi
300082d5:	call   0x3000119d
300082da:	ret    0xc
300082dd:	nop
300082de:	nop
300082df:	nop
300082e0:	push   esp
300082e1:	fldcw  WORD PTR [edx+0x20]
300082e4:	xor    dl,dl
300082e6:	test   DWORD PTR [ebx-0x77],0xd9bde631
300082ed:	mov    cl,0x2
300082ef:	jmp    0xeb00:0x48de8
300082f6:	or     BYTE PTR [esi-0x75],dl
300082f9:	icebp  
300082fa:	cmp    BYTE PTR [esi],0x0
300082fd:	je     0x300082f0
300082ff:	mov    eax,DWORD PTR [esi+0x14]
30008302:	pop    esi
30008303:	ret    
30008304:	push   0xc
30008306:	mov    eax,0x3003e3fc
3000830b:	call   0x3000116a
30008310:	mov    esi,ecx
30008312:	lea    edi,[esi+0x670]
30008318:	mov    eax,DWORD PTR [edi]
3000831a:	cmp    DWORD PTR [eax-0xc],0x0
3000831e:	jne    0x3000837d
30008320:	mov    eax,DWORD PTR [esi]
30008322:	lea    ecx,[ebp-0x18]
30008325:	push   ecx
30008326:	mov    ecx,esi
30008328:	call   DWORD PTR [eax+0x40]
3000832b:	and    DWORD PTR [ebp-0x4],0x0
3000832f:	mov    ecx,DWORD PTR [ebp-0x18]
30008332:	push   0x6d
30008334:	call   0x300082f7
30008339:	push   eax
3000833a:	mov    ecx,edi
3000833c:	call   0x300084a4
30008341:	mov    ecx,DWORD PTR [ebp-0x18]
30008344:	push   0x6e
30008346:	call   0x300082f7
3000834b:	push   eax
3000834c:	lea    ecx,[esi+0x674]
30008352:	call   0x300084a4
30008357:	mov    ecx,DWORD PTR [ebp-0x18]
3000835a:	push   0x6c
3000835c:	call   0x300082f7
30008361:	push   eax
30008362:	lea    ecx,[esi+0x678]
30008368:	call   0x300084a4
3000836d:	or     DWORD PTR [ebp-0x4],0xffffffff
30008371:	mov    ecx,DWORD PTR [ebp-0x14]
30008374:	test   ecx,ecx
30008376:	je     0x3000837d
30008378:	call   0x30007e20
3000837d:	call   0x3000119d
30008382:	ret    
30008383:	mov    esi,DWORD PTR [ebp+0x8]
30008386:	mov    ecx,esi
30008388:	call   0x30008304
3000838d:	push   0x8
3000838f:	pop    eax
30008390:	mov    WORD PTR [edi],ax
30008393:	push   DWORD PTR [esi+0x678]
30008399:	call   DWORD PTR ds:0x300454dc
3000839f:	mov    DWORD PTR [edi+0x8],eax
300083a2:	test   eax,eax
300083a4:	jne    0x30003e98
300083aa:	jmp    0x30001783
300083af:	push   ebp
300083b0:	mov    ebp,esp
300083b2:	sub    esp,0xc
300083b5:	and    DWORD PTR [ebp-0x4],0x0
300083b9:	push   ebx
300083ba:	mov    ebx,edx
300083bc:	push   0x0
300083be:	mov    eax,ecx
300083c0:	mov    ecx,DWORD PTR [ebx]
300083c2:	lea    edx,[ebp-0x4]
300083c5:	push   edx
300083c6:	push   ecx
300083c7:	push   eax
300083c8:	mov    DWORD PTR [ebp-0xc],eax
300083cb:	mov    DWORD PTR [ebp-0x8],ecx
300083ce:	call   DWORD PTR ds:0x3004543c
300083d4:	cmp    DWORD PTR [ebp-0x4],0x0
300083d8:	je     0x3001ffb7
300083de:	push   esi
300083df:	push   edi
300083e0:	mov    edi,DWORD PTR [ebp+0x8]
300083e3:	lea    esi,[eax+0x1]
300083e6:	push   esi
300083e7:	mov    ecx,edi
300083e9:	call   0x30004286
300083ee:	push   esi
300083ef:	push   eax
300083f0:	push   DWORD PTR [ebp-0x8]
300083f3:	mov    DWORD PTR [ebp-0x4],eax
300083f6:	push   DWORD PTR [ebp-0xc]
300083f9:	call   DWORD PTR ds:0x3004543c
300083ff:	push   0xffffffff
30008401:	mov    ecx,edi
30008403:	call   0x30006c8c
30008408:	mov    eax,DWORD PTR [edi]
3000840a:	pop    edi
3000840b:	mov    DWORD PTR [ebx],eax
3000840d:	xor    eax,eax
3000840f:	pop    esi
30008410:	pop    ebx
30008411:	leave  
30008412:	ret    0x4
30008415:	push   ebp
30008416:	mov    ebp,esp
30008418:	push   esi
30008419:	mov    esi,ecx
3000841b:	mov    ecx,DWORD PTR [ebp+0x8]
3000841e:	lea    eax,[esi+0xc]
30008421:	push   eax
30008422:	mov    edx,esi
30008424:	call   0x300083af
30008429:	test   eax,eax
3000842b:	js     0x3000845a
3000842d:	mov    ecx,DWORD PTR [ebp+0x8]
30008430:	lea    eax,[esi+0x10]
30008433:	push   eax
30008434:	lea    edx,[esi+0x4]
30008437:	call   0x300083af
3000843c:	test   eax,eax
3000843e:	js     0x3000845a
30008440:	mov    ecx,DWORD PTR [ebp+0x8]
30008443:	lea    eax,[esi+0x14]
30008446:	push   eax
30008447:	lea    edx,[esi+0x8]
3000844a:	call   0x300083af
3000844f:	test   eax,eax
30008451:	js     0x3000845a
30008453:	xor    eax,eax
30008455:	pop    esi
30008456:	pop    ebp
30008457:	ret    0x4
3000845a:	mov    eax,0x80004005
3000845f:	jmp    0x30008455
30008461:	push   ebp
30008462:	mov    ebp,esp
30008464:	push   DWORD PTR [ebp+0x14]
30008467:	push   DWORD PTR [ebp+0x10]
3000846a:	push   DWORD PTR [ebp+0xc]
3000846d:	push   DWORD PTR [ebp+0x8]
30008470:	call   DWORD PTR ds:0x300453b0
30008476:	add    esp,0x10
30008479:	push   eax
3000847a:	call   0x30001432
3000847f:	pop    ebp
30008480:	ret    
30008481:	push   ebp
30008482:	mov    ebp,esp
30008484:	mov    eax,DWORD PTR [ebp+0x14]
30008487:	cmp    eax,0xffffffff
3000848a:	je     0x3001f5d6
30008490:	push   eax
30008491:	push   DWORD PTR [ebp+0x10]
30008494:	push   DWORD PTR [ebp+0xc]
30008497:	push   DWORD PTR [ebp+0x8]
3000849a:	call   0x30008461
3000849f:	add    esp,0x10
300084a2:	pop    ebp
300084a3:	ret    
300084a4:	push   ebp
300084a5:	mov    ebp,esp
300084a7:	push   ebx
300084a8:	push   edi
300084a9:	push   DWORD PTR [ebp+0xc]
300084ac:	mov    ebx,ecx
300084ae:	push   DWORD PTR [ebp+0x8]
300084b1:	call   0x300053ff
300084b6:	mov    edi,eax
300084b8:	test   edi,edi
300084ba:	je     0x300084e6
300084bc:	push   esi
300084bd:	movzx  esi,WORD PTR [edi]
300084c0:	push   esi
300084c1:	mov    ecx,ebx
300084c3:	call   0x30004286
300084c8:	movzx  ecx,WORD PTR [edi]
300084cb:	push   ecx
300084cc:	lea    ecx,[edi+0x2]
300084cf:	push   ecx
300084d0:	push   esi
300084d1:	push   eax
300084d2:	call   0x30008481
300084d7:	add    esp,0x10
300084da:	mov    ecx,ebx
300084dc:	push   esi
300084dd:	call   0x30004147
300084e2:	xor    eax,eax
300084e4:	inc    eax
300084e5:	pop    esi
300084e6:	pop    edi
300084e7:	pop    ebx
300084e8:	pop    ebp
300084e9:	ret    0x8
300084ec:	mov    esi,0x104
300084f1:	push   esi
300084f2:	lea    eax,[ebp-0x218]
300084f8:	push   eax
300084f9:	push   ebx
300084fa:	call   DWORD PTR ds:0x300451f8
30008500:	push   ebx
30008501:	push   ebx
30008502:	push   ebx
30008503:	push   ebx
30008504:	push   esi
30008505:	lea    eax,[ebp-0x830]
3000850b:	push   eax
3000850c:	mov    esi,0x208
30008511:	push   esi
30008512:	lea    eax,[ebp-0x628]
30008518:	push   eax
30008519:	lea    eax,[ebp-0x218]
3000851f:	push   eax
30008520:	call   DWORD PTR ds:0x30045314
30008526:	lea    ecx,[ebp-0x628]
3000852c:	add    esp,0x24
3000852f:	lea    edx,[ecx+0x2]
30008532:	mov    ax,WORD PTR [ecx]
30008535:	add    ecx,0x2
30008538:	cmp    ax,bx
3000853b:	jne    0x30008532
3000853d:	sub    ecx,edx
3000853f:	push   ebx
30008540:	push   ebx
30008541:	sar    ecx,1
30008543:	lea    eax,[ebp-0x834]
30008549:	push   eax
3000854a:	lea    edx,[ebp-0x628]
30008550:	lea    eax,[ebp-0x830]
30008556:	lea    edx,[edx+ecx*2]
30008559:	push   eax
3000855a:	mov    ecx,edx
3000855c:	lea    eax,[ebp-0x628]
30008562:	sub    ecx,eax
30008564:	sar    ecx,1
30008566:	sub    esi,ecx
30008568:	push   esi
30008569:	push   edx
3000856a:	mov    DWORD PTR [ebp-0x834],edx
30008570:	call   0x30004aa2
30008575:	mov    esi,eax
30008577:	test   esi,esi
30008579:	js     0x30008583
3000857b:	test   edi,edi
3000857d:	jne    0x30021593
30008583:	lea    edi,[ebp-0x628]
30008589:	test   esi,esi
3000858b:	jns    0x30007ad0
30008591:	jmp    0x30007b1f
30008596:	push   esi
30008597:	mov    esi,ecx
30008599:	cmp    BYTE PTR [esi],0x0
3000859c:	jne    0x300085a3
3000859e:	call   0x30008782
300085a3:	mov    eax,DWORD PTR [esi+0x18]
300085a6:	pop    esi
300085a7:	ret    
300085a8:	push   0x50
300085aa:	mov    eax,0x3003f3e9
300085af:	call   0x3000116a
300085b4:	mov    esi,ecx
300085b6:	mov    DWORD PTR [ebp-0x28],esi
300085b9:	xor    edi,edi
300085bb:	mov    DWORD PTR [ebp-0x24],edi
300085be:	mov    eax,DWORD PTR [esi]
300085c0:	call   DWORD PTR [eax+0x3c]
300085c3:	xor    ebx,ebx
300085c5:	inc    ebx
300085c6:	mov    BYTE PTR [ebp-0x11],al
300085c9:	test   al,al
300085cb:	je     0x30020314
300085d1:	mov    edx,DWORD PTR [esi]
300085d3:	lea    eax,[ebp-0x44]
300085d6:	push   eax
300085d7:	mov    ecx,esi
300085d9:	call   DWORD PTR [edx+0x40]
300085dc:	mov    ecx,ebx
300085de:	mov    DWORD PTR [ebp-0x18],ecx
300085e1:	push   eax
300085e2:	lea    ecx,[ebp-0x3c]
300085e5:	call   0x30008076
300085ea:	mov    DWORD PTR [ebp-0x4],ebx
300085ed:	mov    eax,DWORD PTR [ebp-0x18]
300085f0:	test   al,0x2
300085f2:	jne    0x3002032e
300085f8:	mov    BYTE PTR [ebp-0x4],0x2
300085fc:	test   al,0x1
300085fe:	je     0x3000860b
30008600:	mov    ecx,DWORD PTR [ebp-0x40]
30008603:	test   ecx,ecx
30008605:	jne    0x3002034f
3000860b:	cmp    BYTE PTR [ebp-0x11],0x0
3000860f:	mov    edi,DWORD PTR [ebp-0x3c]
30008612:	je     0x30020359
30008618:	test   edi,edi
3000861a:	je     0x30020368
30008620:	mov    ecx,edi
30008622:	call   0x30008596
30008627:	test   eax,eax
30008629:	je     0x30020368
3000862f:	mov    ecx,edi
30008631:	call   0x30008596
30008636:	mov    DWORD PTR [ebp-0x1c],eax
30008639:	lea    esi,[eax+0x6c]
3000863c:	lea    edi,[ebp-0x34]
3000863f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008641:	lea    ecx,[ebp-0x5c]
30008644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008645:	call   0x300088b7
3000864a:	cmp    BYTE PTR [ebp-0x11],0x0
3000864e:	mov    BYTE PTR [ebp-0x4],0x3
30008652:	lea    esi,[ebp-0x34]
30008655:	lea    edi,[ebp-0x5c]
30008658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000865a:	lea    eax,[ebp-0x18]
3000865d:	push   eax
3000865e:	push   DWORD PTR [ebp+0x8]
30008661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30008662:	je     0x300086ca
30008664:	push   ecx
30008665:	lea    edx,[ebp-0x5c]
30008668:	lea    ecx,[ebp-0x3c]
3000866b:	call   0x30008248
30008670:	test   eax,eax
30008672:	js     0x300086d4
30008674:	cmp    BYTE PTR [ebp-0x11],0x0
30008678:	mov    esi,DWORD PTR [ebp-0x18]
3000867b:	je     0x3002037a
30008681:	mov    ecx,DWORD PTR [ebp-0x3c]
30008684:	call   0x300082f7
30008689:	mov    DWORD PTR [ebp-0x20],eax
3000868c:	test   eax,eax
3000868e:	je     0x300086d4
30008690:	test   DWORD PTR [esi+0x2c],0xffff0000
30008697:	jne    0x300086a8
30008699:	push   eax
3000869a:	lea    ecx,[esi+0x2c]
3000869d:	call   0x30008415
300086a2:	mov    ebx,eax
300086a4:	test   ebx,ebx
300086a6:	js     0x300086d4
300086a8:	lea    ecx,[ebp-0x5c]
300086ab:	call   0x30007ef2
300086b0:	or     DWORD PTR [ebp-0x4],0xffffffff
300086b4:	mov    ecx,DWORD PTR [ebp-0x38]
300086b7:	test   ecx,ecx
300086b9:	je     0x300086c0
300086bb:	call   0x30007e20
300086c0:	mov    eax,ebx
300086c2:	call   0x3000119d
300086c7:	ret    0x4
300086ca:	lea    ecx,[ebp-0x5c]
300086cd:	call   0x300304d5
300086d2:	jmp    0x30008670
300086d4:	mov    ebx,0x80004001
300086d9:	jmp    0x300086a8
300086db:	mov    al,0x1
300086dd:	ret    
300086de:	push   esi
300086df:	push   edi
300086e0:	push   0xa
300086e2:	mov    esi,ecx
300086e4:	push   0x30008720
300086e9:	push   esi
300086ea:	call   DWORD PTR ds:0x3004518c
300086f0:	mov    edi,eax
300086f2:	test   edi,edi
300086f4:	je     0x3000871b
300086f6:	push   edi
300086f7:	push   esi
300086f8:	call   DWORD PTR ds:0x30045184
300086fe:	cmp    eax,0x80
30008703:	jne    0x3000871b
30008705:	push   edi
30008706:	push   esi
30008707:	call   DWORD PTR ds:0x30045188
3000870d:	test   eax,eax
3000870f:	je     0x3000871b
30008711:	push   eax
30008712:	call   DWORD PTR ds:0x30045180
30008718:	pop    edi
30008719:	pop    esi
3000871a:	ret    
3000871b:	xor    eax,eax
3000871d:	jmp    0x30008718
3000871f:	nop
30008720:	inc    edx
30008721:	add    BYTE PTR [edx+0x0],dl
30008724:	inc    ecx
30008725:	add    BYTE PTR [esi+0x0],cl
30008728:	inc    esp
30008729:	add    BYTE PTR [ecx+0x0],cl
3000872c:	dec    esi
3000872d:	add    BYTE PTR [edi+0x0],al
30008730:	inc    esp
30008731:	add    BYTE PTR [ecx+0x0],al
30008734:	push   esp
30008735:	add    BYTE PTR [ecx+0x0],al
30008738:	add    BYTE PTR [eax],al
3000873a:	push   ebp
3000873b:	mov    ebp,esp
3000873d:	push   ecx
3000873e:	mov    eax,DWORD PTR [ebp+0x8]
30008741:	push   esi
30008742:	push   edi
30008743:	xor    edx,edx
30008745:	mov    edi,ecx
30008747:	push   edx
30008748:	lea    ecx,[ebp-0x4]
3000874b:	push   ecx
3000874c:	mov    ecx,DWORD PTR [edi+0x8]
3000874f:	push   edx
30008750:	push   DWORD PTR [eax]
30008752:	mov    DWORD PTR [ebp-0x4],edx
30008755:	call   0x30007977
3000875a:	test   eax,eax
3000875c:	je     0x3000877e
3000875e:	mov    esi,DWORD PTR [ebp-0x4]
30008761:	mov    ecx,esi
30008763:	call   0x300086de
30008768:	test   eax,eax
3000876a:	je     0x3001f6eb
30008770:	mov    DWORD PTR [edi+0x18],eax
30008773:	mov    DWORD PTR [edi+0x14],esi
30008776:	mov    al,0x1
30008778:	pop    edi
30008779:	pop    esi
3000877a:	leave  
3000877b:	ret    0x8
3000877e:	xor    al,al
30008780:	jmp    0x30008778
30008782:	push   0x8
30008784:	mov    eax,0x3003e5cc
30008789:	call   0x3000116a
3000878e:	mov    esi,ecx
30008790:	push   DWORD PTR [esi+0x4]
30008793:	lea    ecx,[ebp-0x14]
30008796:	mov    BYTE PTR [esi],0x1
30008799:	call   0x3000437e
3000879e:	xor    edi,edi
300087a0:	mov    DWORD PTR [ebp-0x4],edi
300087a3:	mov    eax,DWORD PTR [ebp-0x14]
300087a6:	lea    ecx,[ebp-0x14]
300087a9:	push   DWORD PTR [eax-0xc]
300087ac:	call   0x30004286
300087b1:	push   eax
300087b2:	call   DWORD PTR ds:0x30045634
300087b8:	push   0xffffffff
300087ba:	lea    ecx,[ebp-0x14]
300087bd:	call   0x30006c8c
300087c2:	push   0x3004306c
300087c7:	lea    ecx,[ebp-0x10]
300087ca:	call   0x30004256
300087cf:	mov    BYTE PTR [ebp-0x4],0x1
300087d3:	push   DWORD PTR [esi+0x10]
300087d6:	lea    eax,[ebp-0x10]
300087d9:	push   DWORD PTR [esi+0xc]
300087dc:	push   DWORD PTR [ebp-0x14]
300087df:	push   0x3000881c
300087e4:	push   eax
300087e5:	call   0x30005153
300087ea:	add    esp,0x10
300087ed:	lea    eax,[ebp-0x10]
300087f0:	push   eax
300087f1:	mov    ecx,esi
300087f3:	call   0x3000873a
300087f8:	test   al,al
300087fa:	je     0x3001f705
30008800:	mov    ecx,DWORD PTR [ebp-0x10]
30008803:	lea    ecx,[ecx-0x10]
30008806:	call   0x30004017
3000880b:	mov    ecx,DWORD PTR [ebp-0x14]
3000880e:	lea    ecx,[ecx-0x10]
30008811:	call   0x30004017
30008816:	call   0x3000119d
3000881b:	ret    
3000881c:	and    eax,0x5f007300
30008821:	add    BYTE PTR [edx+0x0],ah
30008824:	jb     0x30008826
30008826:	popa   
30008827:	add    BYTE PTR [esi+0x0],ch
3000882a:	add    BYTE PTR fs:[edi+0x0],bl
3000882e:	and    eax,0x5f005800
30008833:	add    BYTE PTR ds:0x2e005800,ah
30008839:	add    BYTE PTR [eax+eax*1+0x6c],ah
3000883d:	add    BYTE PTR [eax+eax*1+0x0],ch
30008841:	add    BYTE PTR [edx+0x1f],ch
30008844:	pop    eax
30008845:	ret    
30008846:	mov    eax,DWORD PTR [esi]
30008848:	and    DWORD PTR [esp+0xc],0x0
3000884d:	mov    ecx,esi
3000884f:	call   DWORD PTR [eax+0x38]
30008852:	shr    eax,0x3
30008855:	test   al,0x1
30008857:	je     0x300053e9
3000885d:	lea    eax,[esp+0xc]
30008861:	push   eax
30008862:	mov    ecx,esi
30008864:	call   0x300085a8
30008869:	test   eax,eax
3000886b:	js     0x300053e9
30008871:	push   0xd
30008873:	pop    eax
30008874:	mov    WORD PTR [esp+0x30],ax
30008879:	mov    eax,DWORD PTR [esp+0xc]
3000887d:	mov    DWORD PTR [esp+0x38],eax
30008881:	test   eax,eax
30008883:	je     0x3000888b
30008885:	mov    ecx,DWORD PTR [eax]
30008887:	push   eax
30008888:	call   DWORD PTR [ecx+0x4]
3000888b:	push   edi
3000888c:	lea    ecx,[esp+0x34]
30008890:	call   0x300081a9
30008895:	mov    esi,eax
30008897:	lea    eax,[esp+0x30]
3000889b:	push   eax
3000889c:	call   DWORD PTR ds:0x300454e0
300088a2:	mov    eax,DWORD PTR [esp+0xc]
300088a6:	test   eax,eax
300088a8:	je     0x300088b0
300088aa:	mov    ecx,DWORD PTR [eax]
300088ac:	push   eax
300088ad:	call   DWORD PTR [ecx+0x8]
300088b0:	mov    eax,esi
300088b2:	jmp    0x30004a00
300088b7:	push   esi
300088b8:	push   edi
300088b9:	mov    esi,ecx
300088bb:	mov    edi,0x3004306c
300088c0:	push   edi
300088c1:	lea    ecx,[esi+0xc]
300088c4:	call   0x30004256
300088c9:	push   edi
300088ca:	lea    ecx,[esi+0x10]
300088cd:	call   0x30004256
300088d2:	push   edi
300088d3:	lea    ecx,[esi+0x14]
300088d6:	call   0x30004256
300088db:	xor    eax,eax
300088dd:	mov    edi,esi
300088df:	stos   DWORD PTR es:[edi],eax
300088e0:	stos   DWORD PTR es:[edi],eax
300088e1:	stos   DWORD PTR es:[edi],eax
300088e2:	pop    edi
300088e3:	mov    eax,esi
300088e5:	pop    esi
300088e6:	ret    
300088e7:	push   0x14
300088e9:	mov    eax,0x3003fa50
300088ee:	call   0x30006c56
300088f3:	mov    eax,ecx
300088f5:	mov    DWORD PTR [ebp-0x1c],eax
300088f8:	test   eax,eax
300088fa:	je     0x300203bd
30008900:	xor    ecx,ecx
30008902:	push   0x300430f0
30008907:	mov    ebx,0x8007000e
3000890c:	push   0x44
3000890e:	mov    DWORD PTR [eax],ecx
30008910:	mov    DWORD PTR [ebp-0x14],ebx
30008913:	mov    DWORD PTR [ebp-0x18],ecx
30008916:	mov    DWORD PTR [ebp-0x4],ecx
30008919:	call   0x30006cc2
3000891e:	pop    ecx
3000891f:	mov    esi,eax
30008921:	pop    ecx
30008922:	mov    DWORD PTR [ebp-0x20],esi
30008925:	test   esi,esi
30008927:	je     0x3000898a
30008929:	and    DWORD PTR [esi+0x4],0x0
3000892d:	xor    eax,eax
3000892f:	push   0x6
30008931:	pop    ecx
30008932:	lea    edi,[esi+0x8]
30008935:	rep stos DWORD PTR es:[edi],eax
30008937:	mov    BYTE PTR [esi+0x20],al
3000893a:	lea    ecx,[esi+0x2c]
3000893d:	mov    DWORD PTR [esi+0x24],eax
30008940:	mov    DWORD PTR [esi+0x28],eax
30008943:	call   0x300088b7
30008948:	mov    BYTE PTR [ebp-0x4],0x2
3000894c:	mov    DWORD PTR [esi],0x30006da0
30008952:	mov    ecx,DWORD PTR ds:0x300430f4
30008958:	mov    eax,DWORD PTR [ecx]
3000895a:	call   DWORD PTR [eax+0x4]
3000895d:	or     DWORD PTR [ebp-0x4],0xffffffff
30008961:	test   esi,esi
30008963:	je     0x3000897d
30008965:	lea    ecx,[esi+0x4]
30008968:	call   0x30006d76
3000896d:	mov    ebx,eax
3000896f:	test   ebx,ebx
30008971:	js     0x30008977
30008973:	xor    ebx,ebx
30008975:	test   ebx,ebx
30008977:	jne    0x300203d8
3000897d:	mov    eax,DWORD PTR [ebp-0x1c]
30008980:	mov    DWORD PTR [eax],esi
30008982:	mov    eax,ebx
30008984:	call   0x3000119d
30008989:	ret    
3000898a:	xor    esi,esi
3000898c:	jmp    0x3000895d
3000898e:	test   ecx,ecx
30008990:	je     0x300089a4
30008992:	push   esi
30008993:	mov    esi,DWORD PTR [ecx]
30008995:	push   ecx
30008996:	call   DWORD PTR ds:0x300452b4
3000899c:	pop    ecx
3000899d:	mov    ecx,esi
3000899f:	test   esi,esi
300089a1:	jne    0x30008993
300089a3:	pop    esi
300089a4:	ret    
300089a5:	push   ebp
300089a6:	mov    ebp,esp
300089a8:	pop    ebp
300089a9:	jmp    0x30003fee
300089ae:	push   ebp
300089af:	mov    ebp,esp
300089b1:	push   esi
300089b2:	push   DWORD PTR [ebp+0x8]
300089b5:	mov    esi,ecx
300089b7:	call   0x3000437e
300089bc:	mov    eax,esi
300089be:	pop    esi
300089bf:	pop    ebp
300089c0:	ret    0x4
300089c3:	push   esi
300089c4:	push   edi
300089c5:	mov    edi,ecx
300089c7:	mov    eax,DWORD PTR [edi]
300089c9:	push   DWORD PTR [eax-0xc]
300089cc:	call   0x30004286
300089d1:	push   eax
300089d2:	call   DWORD PTR ds:0x30045648
300089d8:	push   0xffffffff
300089da:	mov    ecx,edi
300089dc:	mov    esi,eax
300089de:	call   0x30006c8c
300089e3:	pop    edi
300089e4:	mov    eax,esi
300089e6:	pop    esi
300089e7:	ret    
300089e8:	call   0x3000898e
300089ed:	mov    DWORD PTR [esi+0xc],edi
300089f0:	jmp    0x3000704a
300089f5:	push   ebp
300089f6:	mov    ebp,esp
300089f8:	push   esi
300089f9:	mov    esi,DWORD PTR [ebp+0x8]
300089fc:	push   edi
300089fd:	mov    edi,ecx
300089ff:	mov    ecx,DWORD PTR [esi+0x8]
30008a02:	sub    ecx,0x10
30008a05:	call   0x30004017
30008a0a:	mov    eax,DWORD PTR [edi+0x10]
30008a0d:	mov    DWORD PTR [esi],eax
30008a0f:	dec    DWORD PTR [edi+0x8]
30008a12:	mov    DWORD PTR [edi+0x10],esi
30008a15:	je     0x30008a1d
30008a17:	pop    edi
30008a18:	pop    esi
30008a19:	pop    ebp
30008a1a:	ret    0x4
30008a1d:	mov    ecx,edi
30008a1f:	call   0x30007014
30008a24:	jmp    0x30008a17
30008a26:	jmp    DWORD PTR ds:0x300453d4
30008a2c:	test   DWORD PTR [eax-0x65f2cffd],ebx
30008a32:	add    esi,DWORD PTR [eax]
30008a34:	fcomp  QWORD PTR [ecx-0x6dd1cffd]
30008a3a:	add    BYTE PTR [eax],dh
30008a3c:	or     ch,BYTE PTR [esi-0x5dfccffe]
30008a42:	add    esi,DWORD PTR [eax]
30008a44:	and    ah,BYTE PTR [edx-0x6623cffd]
30008a4a:	add    esi,DWORD PTR [eax]
30008a4c:	cs xchg edx,eax
30008a4e:	add    BYTE PTR [eax],dh
30008a50:	inc    ebx
30008a51:	jo     0x30008a54
30008a53:	xor    BYTE PTR [eax+0x35],ch
30008a56:	add    BYTE PTR [ebx],0x30
30008a59:	push   DWORD PTR fs:0x0
30008a60:	mov    eax,DWORD PTR [esp+0x10]
30008a64:	mov    DWORD PTR [esp+0x10],ebp
30008a68:	lea    ebp,[esp+0x10]
30008a6c:	sub    esp,eax
30008a6e:	push   ebx
30008a6f:	push   esi
30008a70:	push   edi
30008a71:	mov    eax,ds:0x30043050
30008a76:	xor    DWORD PTR [ebp-0x4],eax
30008a79:	xor    eax,ebp
30008a7b:	push   eax
30008a7c:	mov    DWORD PTR [ebp-0x18],esp
30008a7f:	push   DWORD PTR [ebp-0x8]
30008a82:	mov    eax,DWORD PTR [ebp-0x4]
30008a85:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30008a8c:	mov    DWORD PTR [ebp-0x8],eax
30008a8f:	lea    eax,[ebp-0x10]
30008a92:	mov    fs:0x0,eax
30008a98:	ret    
30008a99:	mov    ecx,DWORD PTR [ebp-0x10]
30008a9c:	mov    DWORD PTR fs:0x0,ecx
30008aa3:	pop    ecx
30008aa4:	pop    edi
30008aa5:	pop    edi
30008aa6:	pop    esi
30008aa7:	pop    ebx
30008aa8:	mov    esp,ebp
30008aaa:	pop    ebp
30008aab:	push   ecx
30008aac:	ret    
30008aad:	push   ebx
30008aae:	push   esi
30008aaf:	mov    esi,ecx
30008ab1:	xor    ebx,ebx
30008ab3:	inc    DWORD PTR [esi+0x20]
30008ab6:	cmp    DWORD PTR [esi],ebx
30008ab8:	je     0x30008ad2
30008aba:	push   edi
30008abb:	mov    edi,ebx
30008abd:	cmp    DWORD PTR [esi+0x8],ebx
30008ac0:	jbe    0x30008ad1
30008ac2:	mov    eax,DWORD PTR [esi]
30008ac4:	mov    ebx,DWORD PTR [eax+edi*4]
30008ac7:	test   ebx,ebx
30008ac9:	jne    0x30008afd
30008acb:	inc    edi
30008acc:	cmp    edi,DWORD PTR [esi+0x8]
30008acf:	jb     0x30008ac2
30008ad1:	pop    edi
30008ad2:	push   DWORD PTR [esi]
30008ad4:	call   DWORD PTR ds:0x300453d4
30008ada:	pop    ecx
30008adb:	mov    DWORD PTR [esi],ebx
30008add:	mov    DWORD PTR [esi+0x4],ebx
30008ae0:	cmp    DWORD PTR [esi+0x20],ebx
30008ae3:	je     0x30023678
30008ae9:	mov    ecx,DWORD PTR [esi+0x28]
30008aec:	mov    DWORD PTR [esi+0x2c],ebx
30008aef:	test   ecx,ecx
30008af1:	jne    0x3002368e
30008af7:	dec    DWORD PTR [esi+0x20]
30008afa:	pop    esi
30008afb:	pop    ebx
30008afc:	ret    
30008afd:	push   ebx
30008afe:	mov    ebx,DWORD PTR [ebx+0x8]
30008b01:	mov    ecx,esi
30008b03:	call   0x30008b0a
30008b08:	jmp    0x30008ac7
30008b0a:	push   ebp
30008b0b:	mov    ebp,esp
30008b0d:	push   esi
30008b0e:	push   edi
30008b0f:	mov    edi,DWORD PTR [ebp+0x8]
30008b12:	mov    esi,ecx
30008b14:	test   edi,edi
30008b16:	je     0x300236e7
30008b1c:	lea    ecx,[edi+0x4]
30008b1f:	call   0x300051a4
30008b24:	mov    ecx,edi
30008b26:	call   0x300051a4
30008b2b:	mov    eax,DWORD PTR [esi+0x2c]
30008b2e:	mov    DWORD PTR [edi+0x8],eax
30008b31:	dec    DWORD PTR [esi+0x4]
30008b34:	mov    eax,DWORD PTR [esi+0x4]
30008b37:	mov    DWORD PTR [esi+0x2c],edi
30008b3a:	xor    edi,edi
30008b3c:	cmp    eax,DWORD PTR [esi+0x1c]
30008b3f:	jb     0x300236c9
30008b45:	cmp    DWORD PTR [esi+0x4],edi
30008b48:	je     0x30008b50
30008b4a:	pop    edi
30008b4b:	pop    esi
30008b4c:	pop    ebp
30008b4d:	ret    0x4
30008b50:	mov    ecx,DWORD PTR [esi+0x28]
30008b53:	mov    DWORD PTR [esi+0x2c],edi
30008b56:	test   ecx,ecx
30008b58:	je     0x30008b4a
30008b5a:	call   0x3000898e
30008b5f:	mov    DWORD PTR [esi+0x28],edi
30008b62:	jmp    0x30008b4a
30008b64:	push   ebp
30008b65:	mov    ebp,esp
30008b67:	push   ecx
30008b68:	push   ebx
30008b69:	push   esi
30008b6a:	mov    edx,ecx
30008b6c:	push   edi
30008b6d:	mov    edi,DWORD PTR [ebp+0x8]
30008b70:	mov    eax,DWORD PTR [edx]
30008b72:	mov    ebx,edi
30008b74:	sub    ebx,eax
30008b76:	mov    eax,DWORD PTR [eax-0xc]
30008b79:	sar    ebx,1
30008b7b:	cmp    DWORD PTR [ebp+0xc],0x0
30008b7f:	mov    DWORD PTR [ebp-0x4],edx
30008b82:	mov    DWORD PTR [ebp+0x8],eax
30008b85:	jl     0x3001fad8
30008b8b:	test   edi,edi
30008b8d:	je     0x3001fad1
30008b93:	push   DWORD PTR [ebp+0xc]
30008b96:	push   edi
30008b97:	call   DWORD PTR ds:0x300452f0
30008b9d:	mov    edx,DWORD PTR [ebp-0x4]
30008ba0:	pop    ecx
30008ba1:	mov    esi,eax
30008ba3:	mov    eax,DWORD PTR [ebp+0x8]
30008ba6:	pop    ecx
30008ba7:	mov    ecx,0x7fffffff
30008bac:	sub    ecx,esi
30008bae:	cmp    ecx,eax
30008bb0:	jl     0x3001fad8
30008bb6:	add    eax,esi
30008bb8:	push   eax
30008bb9:	mov    ecx,edx
30008bbb:	mov    DWORD PTR [ebp+0xc],eax
30008bbe:	call   0x30004286
30008bc3:	mov    ecx,DWORD PTR [ebp+0x8]
30008bc6:	cmp    ebx,ecx
30008bc8:	jbe    0x3000a379
30008bce:	push   esi
30008bcf:	push   edi
30008bd0:	lea    eax,[eax+ecx*2]
30008bd3:	push   esi
30008bd4:	push   eax
30008bd5:	call   0x300041d1
30008bda:	mov    ecx,DWORD PTR [ebp-0x4]
30008bdd:	add    esp,0x10
30008be0:	push   DWORD PTR [ebp+0xc]
30008be3:	call   0x30004147
30008be8:	pop    edi
30008be9:	pop    esi
30008bea:	pop    ebx
30008beb:	leave  
30008bec:	ret    0x8
30008bef:	mov    eax,DWORD PTR [ecx]
30008bf1:	mov    ecx,DWORD PTR [eax-0x10]
30008bf4:	test   ecx,ecx
30008bf6:	je     0x30008c06
30008bf8:	mov    eax,DWORD PTR [ecx]
30008bfa:	call   DWORD PTR [eax+0x10]
30008bfd:	test   eax,eax
30008bff:	je     0x300204e2
30008c05:	ret    
30008c06:	xor    eax,eax
30008c08:	jmp    0x30008bfd
30008c0a:	mov    ecx,DWORD PTR [ecx-0x8]
30008c0d:	cmp    ecx,esi
30008c0f:	jge    0x300042de
30008c15:	cmp    ecx,0x40000000
30008c1b:	jg     0x3001f542
30008c21:	mov    eax,ecx
30008c23:	cdq    
30008c24:	sub    eax,edx
30008c26:	sar    eax,1
30008c28:	add    ecx,eax
30008c2a:	cmp    ecx,esi
30008c2c:	jl     0x30008fc8
30008c32:	push   ecx
30008c33:	mov    ecx,edi
30008c35:	call   0x30008c3f
30008c3a:	jmp    0x300042de
30008c3f:	push   ebp
30008c40:	mov    ebp,esp
30008c42:	push   esi
30008c43:	mov    esi,DWORD PTR [ebp+0x8]
30008c46:	push   edi
30008c47:	mov    edi,ecx
30008c49:	mov    edx,DWORD PTR [edi]
30008c4b:	sub    edx,0x10
30008c4e:	mov    ecx,DWORD PTR [edx]
30008c50:	cmp    DWORD PTR [edx+0x8],esi
30008c53:	jge    0x30008c71
30008c55:	test   esi,esi
30008c57:	jle    0x30008c71
30008c59:	mov    eax,DWORD PTR [ecx]
30008c5b:	push   0x2
30008c5d:	push   esi
30008c5e:	push   edx
30008c5f:	call   DWORD PTR [eax+0x8]
30008c62:	test   eax,eax
30008c64:	je     0x30008c71
30008c66:	add    eax,0x10
30008c69:	mov    DWORD PTR [edi],eax
30008c6b:	pop    edi
30008c6c:	pop    esi
30008c6d:	pop    ebp
30008c6e:	ret    0x4
30008c71:	call   0x3002bcb8
30008c76:	int3   
30008c77:	push   ebp
30008c78:	mov    ebp,esp
30008c7a:	push   esi
30008c7b:	mov    esi,DWORD PTR [ebp+0xc]
30008c7e:	push   edi
30008c7f:	push   DWORD PTR [ebp+0x10]
30008c82:	add    esi,0x8
30008c85:	and    esi,0xfffffff8
30008c88:	lea    eax,[ebp+0xc]
30008c8b:	push   esi
30008c8c:	push   eax
30008c8d:	mov    edi,ecx
30008c8f:	call   0x30004087
30008c94:	add    esp,0xc
30008c97:	test   eax,eax
30008c99:	js     0x30008cd2
30008c9b:	push   DWORD PTR [ebp+0xc]
30008c9e:	lea    eax,[ebp+0xc]
30008ca1:	push   0x10
30008ca3:	push   eax
30008ca4:	call   0x300040a9
30008ca9:	add    esp,0xc
30008cac:	test   eax,eax
30008cae:	js     0x30008cd2
30008cb0:	mov    ecx,DWORD PTR [edi+0x4]
30008cb3:	push   DWORD PTR [ebp+0xc]
30008cb6:	mov    eax,DWORD PTR [ecx]
30008cb8:	push   DWORD PTR [ebp+0x8]
30008cbb:	call   DWORD PTR [eax+0x8]
30008cbe:	mov    ecx,eax
30008cc0:	test   ecx,ecx
30008cc2:	je     0x30008cd2
30008cc4:	lea    eax,[esi-0x1]
30008cc7:	mov    DWORD PTR [ecx+0x8],eax
30008cca:	mov    eax,ecx
30008ccc:	pop    edi
30008ccd:	pop    esi
30008cce:	pop    ebp
30008ccf:	ret    0xc
30008cd2:	xor    eax,eax
30008cd4:	jmp    0x30008ccc
30008cd6:	push   ebp
30008cd7:	mov    ebp,esp
30008cd9:	mov    edx,DWORD PTR [ebp+0x8]
30008cdc:	test   edx,edx
30008cde:	je     0x3002728c
30008ce4:	cmp    DWORD PTR [ebp+0xc],0x0
30008ce8:	je     0x30027298
30008cee:	push   DWORD PTR [ebp+0xc]
30008cf1:	push   edx
30008cf2:	push   0x0
30008cf4:	push   DWORD PTR [ecx+0x4]
30008cf7:	call   DWORD PTR ds:0x300451c0
30008cfd:	pop    ebp
30008cfe:	ret    0x8
30008d01:	push   ebp
30008d02:	mov    ebp,esp
30008d04:	push   esi
30008d05:	push   edi
30008d06:	mov    edi,ecx
30008d08:	mov    ecx,DWORD PTR [ebp+0x10]
30008d0b:	test   ecx,ecx
30008d0d:	je     0x30021a2e
30008d13:	cmp    DWORD PTR [ebp+0x8],0x0
30008d17:	mov    esi,DWORD PTR [ebp+0xc]
30008d1a:	je     0x30021a1f
30008d20:	mov    eax,DWORD PTR [ecx]
30008d22:	push   0x2
30008d24:	push   esi
30008d25:	call   DWORD PTR [eax]
30008d27:	test   eax,eax
30008d29:	je     0x30021a38
30008d2f:	add    eax,0x10
30008d32:	push   esi
30008d33:	mov    ecx,edi
30008d35:	mov    DWORD PTR [edi],eax
30008d37:	call   0x30004147
30008d3c:	push   esi
30008d3d:	push   DWORD PTR [ebp+0x8]
30008d40:	push   esi
30008d41:	push   DWORD PTR [edi]
30008d43:	call   0x300041d1
30008d48:	add    esp,0x10
30008d4b:	mov    eax,edi
30008d4d:	pop    edi
30008d4e:	pop    esi
30008d4f:	pop    ebp
30008d50:	ret    0xc
30008d53:	push   ebp
30008d54:	mov    ebp,esp
30008d56:	push   esi
30008d57:	push   DWORD PTR [ebp+0x10]
30008d5a:	mov    esi,ecx
30008d5c:	push   DWORD PTR [ebp+0xc]
30008d5f:	push   DWORD PTR [ebp+0x8]
30008d62:	call   0x30008d01
30008d67:	mov    eax,esi
30008d69:	pop    esi
30008d6a:	pop    ebp
30008d6b:	ret    0xc
30008d6e:	push   ebp
30008d6f:	mov    ebp,esp
30008d71:	push   ecx
30008d72:	and    DWORD PTR [ebp-0x4],0x0
30008d76:	push   ebx
30008d77:	push   esi
30008d78:	push   edi
30008d79:	mov    edi,DWORD PTR [ebp+0xc]
30008d7c:	mov    edx,ecx
30008d7e:	test   edi,edi
30008d80:	js     0x300219ff
30008d86:	mov    esi,DWORD PTR [ebp+0x10]
30008d89:	test   esi,esi
30008d8b:	js     0x30021a06
30008d91:	mov    eax,0x7fffffff
30008d96:	sub    eax,edi
30008d98:	cmp    eax,esi
30008d9a:	jl     0x30021a14
30008da0:	mov    ebx,DWORD PTR [edx]
30008da2:	lea    eax,[edi+esi*1]
30008da5:	mov    ecx,DWORD PTR [ebx-0xc]
30008da8:	cmp    eax,ecx
30008daa:	jg     0x3000b70e
30008db0:	cmp    edi,ecx
30008db2:	jg     0x30021a0d
30008db8:	test   edi,edi
30008dba:	jne    0x30008dc4
30008dbc:	cmp    esi,ecx
30008dbe:	je     0x3000a884
30008dc4:	mov    ecx,edx
30008dc6:	call   0x30008bef
30008dcb:	mov    ecx,DWORD PTR [ebp+0x8]
30008dce:	push   eax
30008dcf:	push   esi
30008dd0:	lea    eax,[ebx+edi*2]
30008dd3:	push   eax
30008dd4:	call   0x30008d01
30008dd9:	mov    eax,DWORD PTR [ebp+0x8]
30008ddc:	pop    edi
30008ddd:	pop    esi
30008dde:	pop    ebx
30008ddf:	leave  
30008de0:	ret    0xc
30008de3:	push   ebp
30008de4:	mov    ebp,esp
30008de6:	push   esi
30008de7:	mov    esi,DWORD PTR [ebp+0xc]
30008dea:	push   edi
30008deb:	test   esi,esi
30008ded:	js     0x3002456c
30008df3:	mov    edi,DWORD PTR [ecx]
30008df5:	cmp    esi,DWORD PTR [edi-0xc]
30008df8:	jge    0x30024573
30008dfe:	call   0x30008bef
30008e03:	mov    ecx,DWORD PTR [ebp+0x8]
30008e06:	push   eax
30008e07:	push   esi
30008e08:	push   edi
30008e09:	call   0x30008d53
30008e0e:	mov    eax,DWORD PTR [ebp+0x8]
30008e11:	pop    edi
30008e12:	pop    esi
30008e13:	pop    ebp
30008e14:	ret    0x8
30008e17:	push   ebp
30008e18:	mov    ebp,esp
30008e1a:	mov    eax,DWORD PTR [ebp+0x8]
30008e1d:	test   eax,eax
30008e1f:	js     0x30024581
30008e25:	mov    ecx,DWORD PTR [ecx]
30008e27:	cmp    eax,DWORD PTR [ecx-0xc]
30008e2a:	jg     0x30024581
30008e30:	mov    ax,WORD PTR [ecx+eax*2]
30008e34:	pop    ebp
30008e35:	ret    0x4
30008e38:	cmp    eax,DWORD PTR [eax]
30008e3a:	add    BYTE PTR [eax],al
30008e3c:	push   ebx
30008e3d:	push   esi
30008e3e:	mov    ebx,ecx
30008e40:	push   edi
30008e41:	mov    edi,DWORD PTR [ebx]
30008e43:	xor    esi,esi
30008e45:	movzx  eax,WORD PTR [edi]
30008e48:	test   ax,ax
30008e4b:	je     0x30008e75
30008e4d:	movzx  eax,ax
30008e50:	push   eax
30008e51:	call   DWORD PTR ds:0x30045378
30008e57:	pop    ecx
30008e58:	test   eax,eax
30008e5a:	jne    0x30008f4e
30008e60:	xor    esi,esi
30008e62:	add    edi,0x2
30008e65:	movzx  eax,WORD PTR [edi]
30008e68:	test   ax,ax
30008e6b:	jne    0x30008e4d
30008e6d:	test   esi,esi
30008e6f:	jne    0x30015f56
30008e75:	pop    edi
30008e76:	pop    esi
30008e77:	mov    ecx,ebx
30008e79:	pop    ebx
30008e7a:	push   ebx
30008e7b:	push   esi
30008e7c:	mov    esi,DWORD PTR ds:0x30045378
30008e82:	mov    ebx,ecx
30008e84:	push   edi
30008e85:	mov    edi,DWORD PTR [ebx]
30008e87:	movzx  eax,WORD PTR [edi]
30008e8a:	push   eax
30008e8b:	call   esi
30008e8d:	pop    ecx
30008e8e:	test   eax,eax
30008e90:	jne    0x300099f6
30008e96:	mov    eax,DWORD PTR [ebx]
30008e98:	cmp    edi,eax
30008e9a:	jne    0x300099fe
30008ea0:	pop    edi
30008ea1:	pop    esi
30008ea2:	mov    eax,ebx
30008ea4:	pop    ebx
30008ea5:	ret    
30008ea6:	push   0x8
30008ea8:	mov    eax,0x30040ab0
30008ead:	call   0x3000116a
30008eb2:	mov    edi,ecx
30008eb4:	mov    ebx,DWORD PTR [ebp+0x10]
30008eb7:	xor    ecx,ecx
30008eb9:	mov    eax,DWORD PTR [ebx]
30008ebb:	mov    DWORD PTR [ebp-0x14],ecx
30008ebe:	test   eax,eax
30008ec0:	js     0x300219b7
30008ec6:	mov    esi,DWORD PTR [ebp+0xc]
30008ec9:	test   esi,esi
30008ecb:	je     0x30008f41
30008ecd:	cmp    WORD PTR [esi],cx
30008ed0:	je     0x30008f41
30008ed2:	mov    ecx,DWORD PTR [edi]
30008ed4:	lea    edx,[ecx+eax*2]
30008ed7:	mov    eax,DWORD PTR [ecx-0xc]
30008eda:	mov    DWORD PTR [ebp+0x10],edx
30008edd:	lea    eax,[ecx+eax*2]
30008ee0:	mov    DWORD PTR [ebp+0xc],eax
30008ee3:	cmp    edx,eax
30008ee5:	jae    0x30008f2c
30008ee7:	push   esi
30008ee8:	push   edx
30008ee9:	call   DWORD PTR ds:0x30045364
30008eef:	pop    ecx
30008ef0:	pop    ecx
30008ef1:	mov    ecx,DWORD PTR [ebp+0x10]
30008ef4:	mov    DWORD PTR [ebp-0x10],eax
30008ef7:	lea    eax,[ecx+eax*2]
30008efa:	cmp    eax,DWORD PTR [ebp+0xc]
30008efd:	jae    0x30008f2c
30008eff:	push   esi
30008f00:	push   eax
30008f01:	call   DWORD PTR ds:0x30045368
30008f07:	mov    edx,DWORD PTR [ebx]
30008f09:	add    edx,DWORD PTR [ebp-0x10]
30008f0c:	pop    ecx
30008f0d:	pop    ecx
30008f0e:	push   eax
30008f0f:	lea    ecx,[edx+0x1]
30008f12:	add    ecx,eax
30008f14:	push   edx
30008f15:	push   DWORD PTR [ebp+0x8]
30008f18:	mov    DWORD PTR [ebx],ecx
30008f1a:	mov    ecx,edi
30008f1c:	call   0x30008d6e
30008f21:	mov    eax,DWORD PTR [ebp+0x8]
30008f24:	call   0x3000119d
30008f29:	ret    0xc
30008f2c:	or     DWORD PTR [ebx],0xffffffff
30008f2f:	mov    ecx,edi
30008f31:	call   0x30008bef
30008f36:	mov    ecx,DWORD PTR [ebp+0x8]
30008f39:	push   eax
30008f3a:	call   0x30004256
30008f3f:	jmp    0x30008f21
30008f41:	mov    esi,DWORD PTR [edi]
30008f43:	cmp    eax,DWORD PTR [esi-0xc]
30008f46:	jl     0x300219c1
30008f4c:	jmp    0x30008f2c
30008f4e:	test   esi,esi
30008f50:	jne    0x30008e62
30008f56:	mov    esi,edi
30008f58:	jmp    0x30008e62
30008f5d:	push   ebp
30008f5e:	mov    ebp,esp
30008f60:	push   ecx
30008f61:	and    DWORD PTR [ebp-0x4],0x0
30008f65:	push   esi
30008f66:	push   DWORD PTR [ebp+0x8]
30008f69:	lea    eax,[ebp-0x4]
30008f6c:	push   edx
30008f6d:	push   eax
30008f6e:	mov    esi,ecx
30008f70:	call   0x30001464
30008f75:	test   eax,eax
30008f77:	js     0x30008fa3
30008f79:	mov    ecx,DWORD PTR [ebp-0x4]
30008f7c:	or     eax,0xffffffff
30008f7f:	sub    eax,ecx
30008f81:	cmp    eax,0x4
30008f84:	jb     0x30008fa3
30008f86:	add    ecx,0x4
30008f89:	push   ecx
30008f8a:	call   0x30004011
30008f8f:	pop    ecx
30008f90:	mov    ecx,eax
30008f92:	test   ecx,ecx
30008f94:	je     0x30008fa3
30008f96:	mov    eax,DWORD PTR [esi]
30008f98:	mov    DWORD PTR [ecx],eax
30008f9a:	mov    DWORD PTR [esi],ecx
30008f9c:	mov    eax,ecx
30008f9e:	pop    esi
30008f9f:	leave  
30008fa0:	ret    0x4
30008fa3:	xor    eax,eax
30008fa5:	jmp    0x30008f9e
30008fa7:	push   ebp
30008fa8:	mov    ebp,esp
30008faa:	mov    edx,DWORD PTR [ebp+0x8]
30008fad:	mov    ecx,DWORD PTR [edx]
30008faf:	test   ecx,ecx
30008fb1:	je     0x30020309
30008fb7:	mov    eax,DWORD PTR [ecx]
30008fb9:	mov    DWORD PTR [edx],eax
30008fbb:	lea    eax,[ecx+0x8]
30008fbe:	pop    ebp
30008fbf:	ret    0x4
30008fc2:	nop
30008fc3:	nop
30008fc4:	pop    esp
30008fc5:	add    BYTE PTR [eax],al
30008fc7:	add    BYTE PTR [ebx-0x39c1632],cl
30008fcd:	(bad)  
30008fce:	(bad)  
30008fcf:	cmp    DWORD PTR [ecx+0xc],eax
30008fd2:	jl     0x3001f5a0
30008fd8:	call   0x30004017
30008fdd:	mov    eax,DWORD PTR [edi]
30008fdf:	mov    ecx,edi
30008fe1:	call   DWORD PTR [eax+0xc]
30008fe4:	add    eax,0x10
30008fe7:	mov    DWORD PTR [esi],eax
30008fe9:	jmp    0x3000457a
30008fee:	push   ebp
30008fef:	mov    ebp,esp
30008ff1:	mov    ecx,DWORD PTR [ebp+0x8]
30008ff4:	push   ebx
30008ff5:	mov    ebx,DWORD PTR [ebp+0x10]
30008ff8:	push   esi
30008ff9:	push   edi
30008ffa:	mov    edi,DWORD PTR [ebp+0x18]
30008ffd:	lea    eax,[ebx+edi*1]
30009000:	push   eax
30009001:	call   0x30004286
30009006:	push   ebx
30009007:	push   DWORD PTR [ebp+0xc]
3000900a:	mov    esi,eax
3000900c:	push   ebx
3000900d:	push   esi
3000900e:	call   0x300041d1
30009013:	push   edi
30009014:	push   DWORD PTR [ebp+0x14]
30009017:	lea    eax,[esi+ebx*2]
3000901a:	push   edi
3000901b:	push   eax
3000901c:	call   0x300041d1
30009021:	mov    ecx,DWORD PTR [ebp+0x8]
30009024:	add    esp,0x20
30009027:	lea    eax,[ebx+edi*1]
3000902a:	push   eax
3000902b:	call   0x30004147
30009030:	pop    edi
30009031:	pop    esi
30009032:	pop    ebx
30009033:	pop    ebp
30009034:	ret    
30009035:	nop
30009036:	nop
30009037:	nop
30009038:	push   ebx
30009039:	add    BYTE PTR [edi+0x0],ch
3000903c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30009041:	add    BYTE PTR [ecx+0x0],ah
30009044:	jb     0x30009046
30009046:	add    BYTE PTR gs:[eax+eax*1+0x0],bl
3000904b:	add    BYTE PTR [ebp-0x75],dl
3000904e:	in     al,dx
3000904f:	sub    esp,0x228
30009055:	mov    eax,ds:0x30043050
3000905a:	xor    eax,ebp
3000905c:	mov    DWORD PTR [ebp-0x4],eax
3000905f:	mov    eax,DWORD PTR [ebp+0x10]
30009062:	push   ebx
30009063:	mov    ebx,DWORD PTR [ebp+0xc]
30009066:	mov    DWORD PTR [ebp-0x228],eax
3000906c:	test   eax,eax
3000906e:	je     0x300283b5
30009074:	xor    ecx,ecx
30009076:	mov    DWORD PTR [eax],ecx
30009078:	test   ebx,ebx
3000907a:	je     0x300283bf
30009080:	mov    eax,DWORD PTR [ebp+0x8]
30009083:	sub    eax,0x1a
30009086:	je     0x30009090
30009088:	dec    eax
30009089:	dec    eax
3000908a:	jne    0x3000bf68
30009090:	xor    eax,eax
30009092:	mov    WORD PTR [ebp-0x220],ax
30009099:	lea    eax,[ebp-0x220]
3000909f:	push   eax
300090a0:	push   ecx
300090a1:	push   ecx
300090a2:	push   DWORD PTR [ebp+0x8]
300090a5:	push   ecx
300090a6:	call   DWORD PTR ds:0x300455f8
300090ac:	test   eax,eax
300090ae:	js     0x30009149
300090b4:	push   esi
300090b5:	push   edi
300090b6:	push   0x3004306c
300090bb:	lea    ecx,[ebp-0x224]
300090c1:	call   0x30004256
300090c6:	push   0x5
300090c8:	pop    ecx
300090c9:	push   0x9
300090cb:	lea    eax,[ebp-0x18]
300090ce:	push   eax
300090cf:	mov    esi,0x30009038
300090d4:	lea    edi,[ebp-0x18]
300090d7:	push   ebx
300090d8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
300090da:	call   0x30009158
300090df:	add    esp,0xc
300090e2:	test   eax,eax
300090e4:	jne    0x300090e9
300090e6:	add    ebx,0x12
300090e9:	push   0x104
300090ee:	lea    ecx,[ebp-0x224]
300090f4:	call   0x30004286
300090f9:	push   ebx
300090fa:	lea    ecx,[ebp-0x220]
30009100:	push   ecx
30009101:	push   eax
30009102:	call   DWORD PTR ds:0x30045644
30009108:	push   0xffffffff
3000910a:	lea    ecx,[ebp-0x224]
30009110:	call   0x30006c8c
30009115:	mov    esi,DWORD PTR [ebp-0x224]
3000911b:	push   esi
3000911c:	lea    ecx,[ebp-0x224]
30009122:	call   0x30001488
30009127:	mov    ecx,DWORD PTR [ebp-0x228]
3000912d:	mov    eax,DWORD PTR [ebp-0x224]
30009133:	push   0x0
30009135:	mov    DWORD PTR [ecx],eax
30009137:	call   DWORD PTR ds:0x300454e8
3000913d:	lea    ecx,[esi-0x10]
30009140:	call   0x30004017
30009145:	pop    edi
30009146:	xor    eax,eax
30009148:	pop    esi
30009149:	mov    ecx,DWORD PTR [ebp-0x4]
3000914c:	xor    ecx,ebp
3000914e:	pop    ebx
3000914f:	call   0x3000115c
30009154:	leave  
30009155:	ret    0xc
30009158:	jmp    DWORD PTR ds:0x300452fc
3000915e:	mov    al,BYTE PTR [ecx+0x68]
30009161:	ret    
30009162:	push   ebp
30009163:	mov    ebp,esp
30009165:	push   ebx
30009166:	push   esi
30009167:	mov    esi,DWORD PTR [ebp+0xc]
3000916a:	push   edi
3000916b:	test   esi,esi
3000916d:	js     0x30023e68
30009173:	mov    ebx,DWORD PTR [ecx]
30009175:	mov    edi,DWORD PTR [ebx-0xc]
30009178:	cmp    esi,edi
3000917a:	jge    0x3000a381
30009180:	call   0x30008bef
30009185:	mov    ecx,DWORD PTR [ebp+0x8]
30009188:	push   eax
30009189:	sub    edi,esi
3000918b:	push   esi
3000918c:	lea    eax,[ebx+edi*2]
3000918f:	push   eax
30009190:	call   0x30008d53
30009195:	mov    eax,DWORD PTR [ebp+0x8]
30009198:	pop    edi
30009199:	pop    esi
3000919a:	pop    ebx
3000919b:	pop    ebp
3000919c:	ret    0x8
3000919f:	push   ebp
300091a0:	mov    ebp,esp
300091a2:	mov    ecx,DWORD PTR [ebp+0xc]
300091a5:	mov    eax,DWORD PTR [ebp+0x8]
300091a8:	mov    dx,WORD PTR [eax]
300091ab:	cmp    dx,WORD PTR [ecx]
300091ae:	jne    0x300091eb
300091b0:	test   dx,dx
300091b3:	je     0x300091ca
300091b5:	mov    dx,WORD PTR [eax+0x2]
300091b9:	cmp    dx,WORD PTR [ecx+0x2]
300091bd:	jne    0x300091eb
300091bf:	add    eax,0x4
300091c2:	add    ecx,0x4
300091c5:	test   dx,dx
300091c8:	jne    0x300091a8
300091ca:	xor    eax,eax
300091cc:	pop    ebp
300091cd:	ret    
300091ce:	push   ebp
300091cf:	mov    ebp,esp
300091d1:	cmp    DWORD PTR [ebp+0x8],0x0
300091d5:	je     0x3001fed4
300091db:	push   DWORD PTR [ebp+0x8]
300091de:	push   DWORD PTR [ecx]
300091e0:	call   0x3000919f
300091e5:	pop    ecx
300091e6:	pop    ecx
300091e7:	pop    ebp
300091e8:	ret    0x4
300091eb:	sbb    eax,eax
300091ed:	or     eax,0x1
300091f0:	pop    ebp
300091f1:	ret    
300091f2:	push   ebp
300091f3:	mov    ebp,esp
300091f5:	mov    eax,DWORD PTR [ebp+0xc]
300091f8:	push   esi
300091f9:	mov    esi,ecx
300091fb:	test   eax,eax
300091fd:	js     0x300092fc
30009203:	mov    ecx,DWORD PTR [esi]
30009205:	cmp    eax,DWORD PTR [ecx-0xc]
30009208:	jge    0x300092fc
3000920e:	push   DWORD PTR [ebp+0x8]
30009211:	lea    eax,[ecx+eax*2]
30009214:	push   eax
30009215:	call   DWORD PTR ds:0x30045348
3000921b:	pop    ecx
3000921c:	pop    ecx
3000921d:	test   eax,eax
3000921f:	je     0x300092fc
30009225:	sub    eax,DWORD PTR [esi]
30009227:	sar    eax,1
30009229:	pop    esi
3000922a:	pop    ebp
3000922b:	ret    0x8
3000922e:	xor    eax,eax
30009230:	ret    
30009231:	mov    DWORD PTR [ebp+0x8],esi
30009234:	mov    esi,DWORD PTR [esi+0x8]
30009237:	jmp    0x30009500
3000923c:	push   ebp
3000923d:	mov    ebp,esp
3000923f:	cmp    DWORD PTR [ebp+0x8],0x0
30009243:	push   esi
30009244:	mov    esi,ecx
30009246:	je     0x3000926d
30009248:	mov    eax,DWORD PTR [ebp+0xc]
3000924b:	test   eax,eax
3000924d:	js     0x3000926d
3000924f:	mov    ecx,DWORD PTR [esi]
30009251:	cmp    eax,DWORD PTR [ecx-0xc]
30009254:	jg     0x3000926d
30009256:	push   DWORD PTR [ebp+0x8]
30009259:	lea    eax,[ecx+eax*2]
3000925c:	push   eax
3000925d:	call   DWORD PTR ds:0x3004531c
30009263:	pop    ecx
30009264:	pop    ecx
30009265:	test   eax,eax
30009267:	jne    0x30009cb8
3000926d:	or     eax,0xffffffff
30009270:	pop    esi
30009271:	pop    ebp
30009272:	ret    0x8
30009275:	jmp    DWORD PTR ds:0x300453cc
3000927b:	push   ebp
3000927c:	mov    ebp,esp
3000927e:	cmp    DWORD PTR [ebp+0x8],0x0
30009282:	je     0x30023662
30009288:	push   DWORD PTR [ebp+0x8]
3000928b:	push   DWORD PTR [ecx]
3000928d:	call   0x30009275
30009292:	pop    ecx
30009293:	pop    ecx
30009294:	pop    ebp
30009295:	ret    0x4
30009298:	push   0x8
3000929a:	mov    eax,0x3003ff14
3000929f:	call   0x3000116a
300092a4:	mov    esi,edx
300092a6:	mov    edi,ecx
300092a8:	mov    DWORD PTR [ebp-0x14],edi
300092ab:	and    DWORD PTR [ebp-0x4],0x0
300092af:	and    DWORD PTR [ebp-0x10],0x0
300092b3:	mov    ecx,esi
300092b5:	call   0x30008bef
300092ba:	push   eax
300092bb:	mov    ecx,edi
300092bd:	call   0x30004256
300092c2:	and    DWORD PTR [ebp-0x4],0x0
300092c6:	mov    eax,DWORD PTR [ebp+0x8]
300092c9:	mov    ecx,DWORD PTR [esi]
300092cb:	mov    eax,DWORD PTR [eax]
300092cd:	mov    DWORD PTR [ebp-0x10],0x1
300092d4:	push   DWORD PTR [eax-0xc]
300092d7:	push   eax
300092d8:	push   DWORD PTR [ecx-0xc]
300092db:	push   ecx
300092dc:	push   edi
300092dd:	call   0x30008fee
300092e2:	add    esp,0x14
300092e5:	mov    eax,edi
300092e7:	call   0x3000119d
300092ec:	ret    0x4
300092ef:	nop
300092f0:	push   esp
300092f1:	aas    
300092f2:	add    DWORD PTR [eax],esi
300092f4:	bound  esp,QWORD PTR [edx-0x5d36d000]
300092fa:	add    BYTE PTR [eax],dh
300092fc:	or     eax,0xffffffff
300092ff:	jmp    0x30009229
30009304:	push   ebp
30009305:	mov    ebp,esp
30009307:	sub    esp,0x140
3000930d:	mov    eax,ds:0x30043050
30009312:	xor    eax,ebp
30009314:	mov    DWORD PTR [ebp-0x4],eax
30009317:	push   ebx
30009318:	mov    ebx,DWORD PTR [ebp+0x8]
3000931b:	push   esi
3000931c:	push   edi
3000931d:	push   0x0
3000931f:	push   0x3000934c
30009324:	mov    ecx,ebx
30009326:	call   0x3000923c
3000932b:	mov    edi,eax
3000932d:	or     esi,0xffffffff
30009330:	cmp    edi,esi
30009332:	jne    0x30023efa
30009338:	mov    ecx,DWORD PTR [ebp-0x4]
3000933b:	pop    edi
3000933c:	pop    esi
3000933d:	xor    ecx,ebp
3000933f:	pop    ebx
30009340:	call   0x3000115c
30009345:	leave  
30009346:	ret    0x4
30009349:	nop
3000934a:	nop
3000934b:	nop
3000934c:	and    al,0x0
3000934e:	cmp    eax,0x55000000
30009353:	mov    ebp,esp
30009355:	push   ecx
30009356:	push   ebx
30009357:	push   esi
30009358:	push   edi
30009359:	lea    ecx,[ebp-0x4]
3000935c:	call   0x300051c8
30009361:	mov    ebx,DWORD PTR [ebp+0x8]
30009364:	mov    esi,0x208
30009369:	push   esi
3000936a:	lea    ecx,[ebp-0x4]
3000936d:	call   0x30004286
30009372:	push   esi
30009373:	push   eax
30009374:	push   DWORD PTR [ebx]
30009376:	call   DWORD PTR ds:0x300450f8
3000937c:	mov    edi,eax
3000937e:	test   edi,edi
30009380:	jle    0x30023e6f
30009386:	cmp    edi,esi
30009388:	jg     0x3000b880
3000938e:	push   0xffffffff
30009390:	lea    ecx,[ebp-0x4]
30009393:	call   0x30006c8c
30009398:	lea    eax,[ebp-0x4]
3000939b:	push   eax
3000939c:	mov    ecx,ebx
3000939e:	call   0x300014c1
300093a3:	lea    ecx,[ebp-0x4]
300093a6:	call   0x300051a4
300093ab:	pop    edi
300093ac:	pop    esi
300093ad:	pop    ebx
300093ae:	leave  
300093af:	ret    0x4
300093b2:	nop
300093b3:	nop
300093b4:	and    eax,0x2400
300093b9:	add    BYTE PTR [eax+0x941690],dl
300093bf:	xor    BYTE PTR [ebp-0x75],dl
300093c2:	in     al,dx
300093c3:	sub    esp,0x20
300093c6:	push   ebx
300093c7:	mov    ebx,ecx
300093c9:	push   edi
300093ca:	mov    eax,DWORD PTR [ebx]
300093cc:	xor    edi,edi
300093ce:	cmp    DWORD PTR [eax-0xc],edi
300093d1:	jle    0x300093ec
300093d3:	push   esi
300093d4:	push   edi
300093d5:	push   0x300093b4
300093da:	mov    ecx,ebx
300093dc:	call   0x3000923c
300093e1:	mov    esi,eax
300093e3:	test   esi,esi
300093e5:	jns    0x30024446
300093eb:	pop    esi
300093ec:	pop    edi
300093ed:	pop    ebx
300093ee:	leave  
300093ef:	ret    
300093f0:	push   ebp
300093f1:	mov    ebp,esp
300093f3:	mov    eax,DWORD PTR [ecx]
300093f5:	push   DWORD PTR [ebp+0x8]
300093f8:	call   DWORD PTR [eax]
300093fa:	push   DWORD PTR [ebp+0x8]
300093fd:	call   0x30009304
30009402:	push   DWORD PTR [ebp+0x8]
30009405:	call   0x30009352
3000940a:	mov    ecx,DWORD PTR [ebp+0x8]
3000940d:	call   0x300093c0
30009412:	pop    ebp
30009413:	ret    0x4
30009416:	push   ebp
30009417:	mov    ebp,esp
30009419:	sub    esp,0x10
3000941c:	push   esi
3000941d:	push   edi
3000941e:	mov    edi,DWORD PTR [ebp+0x8]
30009421:	push   0x0
30009423:	mov    DWORD PTR [ebp-0x4],ecx
30009426:	push   0x24
30009428:	mov    ecx,edi
3000942a:	call   0x300091f2
3000942f:	mov    esi,eax
30009431:	cmp    esi,0xffffffff
30009434:	jne    0x3000943c
30009436:	pop    edi
30009437:	pop    esi
30009438:	leave  
30009439:	ret    0x4
3000943c:	push   ebx
3000943d:	lea    ebx,[esi+0x1]
30009440:	push   ebx
30009441:	push   0x24
30009443:	mov    ecx,edi
30009445:	call   0x300091f2
3000944a:	cmp    eax,0xffffffff
3000944d:	je     0x3000a3ec
30009453:	sub    eax,esi
30009455:	inc    eax
30009456:	push   eax
30009457:	push   esi
30009458:	lea    eax,[ebp+0x8]
3000945b:	push   eax
3000945c:	mov    ecx,edi
3000945e:	call   0x30008d6e
30009463:	mov    ecx,DWORD PTR [ebp-0x4]
30009466:	lea    eax,[ebp-0x8]
30009469:	push   eax
3000946a:	lea    eax,[ebp-0xc]
3000946d:	push   eax
3000946e:	lea    eax,[ebp-0x10]
30009471:	push   eax
30009472:	push   DWORD PTR [ebp+0x8]
30009475:	lea    ecx,[ecx+0x4]
30009478:	call   0x300094a9
3000947d:	test   eax,eax
3000947f:	je     0x3000948d
30009481:	push   DWORD PTR [eax+0x4]
30009484:	mov    ecx,edi
30009486:	push   DWORD PTR [eax]
30009488:	call   0x300043f1
3000948d:	push   ebx
3000948e:	push   0x24
30009490:	mov    ecx,edi
30009492:	call   0x300091f2
30009497:	lea    ecx,[ebp+0x8]
3000949a:	mov    esi,eax
3000949c:	call   0x300051a4
300094a1:	cmp    esi,0xffffffff
300094a4:	jne    0x3000943d
300094a6:	pop    ebx
300094a7:	jmp    0x30009436
300094a9:	push   ebp
300094aa:	mov    ebp,esp
300094ac:	push   ebx
300094ad:	mov    ebx,DWORD PTR [ebp+0x8]
300094b0:	push   esi
300094b1:	push   edi
300094b2:	mov    esi,ecx
300094b4:	test   ebx,ebx
300094b6:	je     0x30023708
300094bc:	movzx  eax,WORD PTR [ebx]
300094bf:	xor    ecx,ecx
300094c1:	mov    DWORD PTR [ebp+0x8],ecx
300094c4:	mov    edi,ecx
300094c6:	mov    edx,ebx
300094c8:	test   ax,ax
300094cb:	je     0x300094dd
300094cd:	imul   edi,edi,0x21
300094d0:	movzx  eax,ax
300094d3:	lea    edx,[edx+0x2]
300094d6:	add    edi,eax
300094d8:	movzx  eax,WORD PTR [edx]
300094db:	jmp    0x300094c8
300094dd:	mov    eax,DWORD PTR [ebp+0x10]
300094e0:	xor    edx,edx
300094e2:	mov    DWORD PTR [eax],edi
300094e4:	mov    eax,edi
300094e6:	div    DWORD PTR [esi+0x8]
300094e9:	mov    eax,DWORD PTR [ebp+0xc]
300094ec:	mov    esi,DWORD PTR [esi]
300094ee:	mov    DWORD PTR [eax],edx
300094f0:	test   esi,esi
300094f2:	je     0x30009754
300094f8:	mov    eax,DWORD PTR [ebp+0x14]
300094fb:	mov    esi,DWORD PTR [esi+edx*4]
300094fe:	mov    DWORD PTR [eax],ecx
30009500:	test   esi,esi
30009502:	je     0x30009754
30009508:	cmp    DWORD PTR [esi+0xc],edi
3000950b:	jne    0x30009231
30009511:	push   ebx
30009512:	push   DWORD PTR [esi]
30009514:	call   0x3000919f
30009519:	pop    ecx
3000951a:	pop    ecx
3000951b:	test   eax,eax
3000951d:	jne    0x30009231
30009523:	mov    eax,DWORD PTR [ebp+0x8]
30009526:	mov    ecx,DWORD PTR [ebp+0x14]
30009529:	mov    DWORD PTR [ecx],eax
3000952b:	mov    eax,esi
3000952d:	pop    edi
3000952e:	pop    esi
3000952f:	pop    ebx
30009530:	pop    ebp
30009531:	ret    0x10
30009534:	push   ebp
30009535:	mov    ebp,esp
30009537:	push   ecx
30009538:	push   ecx
30009539:	push   esi
3000953a:	mov    esi,DWORD PTR [ebp+0x18]
3000953d:	push   edi
3000953e:	mov    edi,ecx
30009540:	lea    eax,[ebp-0x8]
30009543:	mov    ecx,DWORD PTR [edi+0x8]
30009546:	push   eax
30009547:	xor    edx,edx
30009549:	lea    eax,[ebp-0x4]
3000954c:	mov    DWORD PTR [ebp-0x4],edx
3000954f:	push   eax
30009550:	test   ecx,ecx
30009552:	jne    0x30020562
30009558:	push   edx
30009559:	push   esi
3000955a:	push   DWORD PTR [ebp+0x14]
3000955d:	push   edx
3000955e:	push   edx
3000955f:	push   DWORD PTR [ebp+0xc]
30009562:	push   DWORD PTR [ebp+0x8]
30009565:	call   DWORD PTR ds:0x3004507c
3000956b:	mov    edx,DWORD PTR [ebp+0x20]
3000956e:	mov    ecx,eax
30009570:	test   edx,edx
30009572:	je     0x30009579
30009574:	mov    eax,DWORD PTR [ebp-0x8]
30009577:	mov    DWORD PTR [edx],eax
30009579:	test   ecx,ecx
3000957b:	jne    0x30009594
3000957d:	mov    ecx,edi
3000957f:	call   0x300051ae
30009584:	mov    ecx,eax
30009586:	mov    eax,DWORD PTR [ebp-0x4]
30009589:	and    esi,0x300
3000958f:	mov    DWORD PTR [edi],eax
30009591:	mov    DWORD PTR [edi+0x4],esi
30009594:	pop    edi
30009595:	mov    eax,ecx
30009597:	pop    esi
30009598:	leave  
30009599:	ret    0x1c
3000959c:	xor    eax,eax
3000959e:	cmp    BYTE PTR [ecx+0x68],al
300095a1:	setne  al
300095a4:	ret    
300095a5:	nop
300095a6:	nop
300095a7:	nop
300095a8:	add    BYTE PTR cs:[ebp+0x0],dl
300095ac:	jae    0x300095ae
300095ae:	add    BYTE PTR gs:[edx+0x0],dh
300095b2:	add    BYTE PTR cs:[eax+0x0],dl
300095b6:	imul   eax,DWORD PTR [eax],0x67
300095b9:	add    BYTE PTR [eax+eax*1+0x65],al
300095bd:	add    BYTE PTR [esi+0x0],ah
300095c0:	add    BYTE PTR [eax],al
300095c2:	nop
300095c3:	nop
300095c4:	add    BYTE PTR [eax],al
300095c6:	cmp    BYTE PTR [esi],0x0
300095c9:	add    BYTE PTR [eax+0x3f],al
300095cc:	add    BYTE PTR [eax],al
300095ce:	adc    BYTE PTR [eax+0x55],al
300095d1:	mov    ebp,esp
300095d3:	sub    esp,0x20
300095d6:	and    esp,0xfffffff0
300095d9:	fld    st(0)
300095db:	fst    DWORD PTR [esp+0x18]
300095df:	fistp  QWORD PTR [esp+0x10]
300095e3:	fild   QWORD PTR [esp+0x10]
300095e7:	mov    edx,DWORD PTR [esp+0x18]
300095eb:	mov    eax,DWORD PTR [esp+0x10]
300095ef:	test   eax,eax
300095f1:	je     0x3001eae2
300095f7:	fsubp  st(1),st
300095f9:	test   edx,edx
300095fb:	js     0x3001eac1
30009601:	fstp   DWORD PTR [esp]
30009604:	mov    ecx,DWORD PTR [esp]
30009607:	add    ecx,0x7fffffff
3000960d:	sbb    eax,0x0
30009610:	mov    edx,DWORD PTR [esp+0x14]
30009614:	sbb    edx,0x0
30009617:	leave  
30009618:	ret    
30009619:	push   ebp
3000961a:	mov    ebp,esp
3000961c:	push   ecx
3000961d:	push   esi
3000961e:	mov    esi,ecx
30009620:	mov    eax,DWORD PTR [esi+0x8]
30009623:	fild   DWORD PTR [esi+0x8]
30009626:	test   eax,eax
30009628:	js     0x300236f2
3000962e:	fstp   DWORD PTR [ebp-0x4]
30009631:	fld    DWORD PTR [ebp-0x4]
30009634:	fstp   DWORD PTR [ebp-0x4]
30009637:	fld    DWORD PTR [esi+0x14]
3000963a:	fld    DWORD PTR [ebp-0x4]
3000963d:	fld    st(0)
3000963f:	fmulp  st(2),st
30009641:	fxch   st(1)
30009643:	call   0x300095d0
30009648:	fmul   DWORD PTR [esi+0x10]
3000964b:	mov    DWORD PTR [esi+0x18],eax
3000964e:	call   0x300095d0
30009653:	mov    DWORD PTR [esi+0x1c],eax
30009656:	cmp    eax,0x11
30009659:	sbb    eax,eax
3000965b:	not    eax
3000965d:	and    DWORD PTR [esi+0x1c],eax
30009660:	pop    esi
30009661:	leave  
30009662:	ret    
30009663:	push   ebp
30009664:	mov    ebp,esp
30009666:	fld    DWORD PTR [ebp+0xc]
30009669:	push   esi
3000966a:	mov    esi,ecx
3000966c:	xor    eax,eax
3000966e:	or     DWORD PTR [esi+0x18],0xffffffff
30009672:	fstp   DWORD PTR [esi+0xc]
30009675:	fld    DWORD PTR [ebp+0x10]
30009678:	mov    DWORD PTR [esi],eax
3000967a:	fstp   DWORD PTR [esi+0x10]
3000967d:	mov    DWORD PTR [esi+0x4],eax
30009680:	fld    DWORD PTR [ebp+0x14]
30009683:	mov    DWORD PTR [esi+0x8],0x11
3000968a:	fstp   DWORD PTR [esi+0x14]
3000968d:	mov    DWORD PTR [esi+0x1c],eax
30009690:	mov    DWORD PTR [esi+0x20],eax
30009693:	mov    DWORD PTR [esi+0x24],0xa
3000969a:	mov    DWORD PTR [esi+0x28],eax
3000969d:	mov    DWORD PTR [esi+0x2c],eax
300096a0:	call   0x30009619
300096a5:	mov    eax,esi
300096a7:	pop    esi
300096a8:	pop    ebp
300096a9:	ret    0x14
300096ac:	push   ebp
300096ad:	mov    ebp,esp
300096af:	push   ecx
300096b0:	push   esi
300096b1:	push   edi
300096b2:	mov    edi,ecx
300096b4:	mov    ecx,DWORD PTR [ebp+0x8]
300096b7:	call   0x300051c8
300096bc:	mov    esi,DWORD PTR [edi]
300096be:	push   esi
300096bf:	call   DWORD PTR ds:0x30045624
300096c5:	mov    edx,eax
300096c7:	cmp    WORD PTR [edx],0x0
300096cb:	je     0x300096fe
300096cd:	sub    edx,esi
300096cf:	sar    edx,1
300096d1:	cmp    edx,0xffffffff
300096d4:	je     0x300096fe
300096d6:	mov    eax,DWORD PTR [edi]
300096d8:	mov    ecx,edi
300096da:	mov    eax,DWORD PTR [eax-0xc]
300096dd:	sub    eax,edx
300096df:	push   eax
300096e0:	push   edx
300096e1:	lea    eax,[ebp-0x4]
300096e4:	push   eax
300096e5:	call   0x30008d6e
300096ea:	mov    ecx,DWORD PTR [ebp+0x8]
300096ed:	lea    eax,[ebp-0x4]
300096f0:	push   eax
300096f1:	call   0x300014c1
300096f6:	lea    ecx,[ebp-0x4]
300096f9:	call   0x300051a4
300096fe:	mov    eax,DWORD PTR [ebp+0x8]
30009701:	pop    edi
30009702:	pop    esi
30009703:	leave  
30009704:	ret    0x4
30009707:	nop
30009708:	add    BYTE PTR cs:[eax+0x0],dl
3000970c:	imul   eax,DWORD PTR [eax],0x67
3000970f:	add    BYTE PTR [eax+eax*1+0x65],al
30009713:	add    BYTE PTR [esi+0x0],ah
30009716:	add    BYTE PTR [eax],al
30009718:	fld    DWORD PTR ds:0x300095cc
3000971e:	push   esi
3000971f:	sub    esp,0x14
30009722:	mov    esi,ecx
30009724:	fstp   DWORD PTR [esp+0xc]
30009728:	fld    DWORD PTR ds:0x300095c4
3000972e:	lea    ecx,[esi+0x4]
30009731:	fstp   DWORD PTR [esp+0x8]
30009735:	mov    DWORD PTR [esi],0x30009750
3000973b:	fld    DWORD PTR ds:0x300095c8
30009741:	fstp   DWORD PTR [esp+0x4]
30009745:	call   0x30009663
3000974a:	mov    eax,esi
3000974c:	pop    esi
3000974d:	ret    
3000974e:	nop
3000974f:	nop
30009750:	add    BYTE PTR [esi+0x3],bh
30009753:	xor    BYTE PTR [ebx],dh
30009755:	shr    cl,0xd2
30009758:	std    
30009759:	(bad)  
3000975a:	call   DWORD PTR [ebp-0x75]
3000975d:	in     al,dx
3000975e:	pop    ebp
3000975f:	jmp    0x30006cc2
30009764:	push   ebp
30009765:	mov    ebp,esp
30009767:	mov    eax,DWORD PTR [ebp+0x8]
3000976a:	push   esi
3000976b:	mov    esi,ecx
3000976d:	test   eax,eax
3000976f:	je     0x30009798
30009771:	mov    ecx,DWORD PTR [eax+0x8]
30009774:	test   ecx,ecx
30009776:	jne    0x30009796
30009778:	mov    eax,DWORD PTR [eax+0xc]
3000977b:	xor    edx,edx
3000977d:	div    DWORD PTR [esi+0x8]
30009780:	inc    edx
30009781:	cmp    edx,DWORD PTR [esi+0x8]
30009784:	jae    0x30009796
30009786:	mov    eax,DWORD PTR [esi]
30009788:	cmp    DWORD PTR [eax+edx*4],0x0
3000978c:	je     0x30009791
3000978e:	mov    ecx,DWORD PTR [eax+edx*4]
30009791:	inc    edx
30009792:	test   ecx,ecx
30009794:	je     0x30009781
30009796:	mov    eax,ecx
30009798:	pop    esi
30009799:	pop    ebp
3000979a:	ret    0x4
3000979d:	push   ebp
3000979e:	mov    ebp,esp
300097a0:	mov    eax,DWORD PTR [ebp+0x8]
300097a3:	mov    edx,DWORD PTR [eax]
300097a5:	cmp    DWORD PTR [edx-0xc],0x0
300097a9:	je     0x300097c0
300097ab:	mov    eax,DWORD PTR [ebp+0xc]
300097ae:	mov    eax,DWORD PTR [eax]
300097b0:	cmp    DWORD PTR [eax-0xc],0x0
300097b4:	je     0x300097c0
300097b6:	push   eax
300097b7:	push   edx
300097b8:	add    ecx,0x4
300097bb:	call   0x30009856
300097c0:	pop    ebp
300097c1:	ret    0x8
300097c4:	mov    edx,DWORD PTR [esi+0x24]
300097c7:	push   0x10
300097c9:	lea    ecx,[esi+0x28]
300097cc:	call   0x30008f5d
300097d1:	mov    edx,eax
300097d3:	test   edx,edx
300097d5:	je     0x30023739
300097db:	mov    ecx,DWORD PTR [esi+0x24]
300097de:	mov    eax,ecx
300097e0:	shl    eax,0x4
300097e3:	add    eax,0xfffffff4
300097e6:	add    edx,eax
300097e8:	dec    ecx
300097e9:	js     0x30009806
300097eb:	mov    eax,DWORD PTR [esi+0x2c]
300097ee:	mov    DWORD PTR [edx+0x8],eax
300097f1:	mov    DWORD PTR [esi+0x2c],edx
300097f4:	sub    edx,0x10
300097f7:	jmp    0x300097e8
300097f9:	push   ebp
300097fa:	mov    ebp,esp
300097fc:	push   esi
300097fd:	mov    esi,ecx
300097ff:	push   edi
30009800:	cmp    DWORD PTR [esi+0x2c],0x0
30009804:	je     0x300097c4
30009806:	mov    edi,DWORD PTR [esi+0x2c]
30009809:	test   edi,edi
3000980b:	je     0x30023713
30009811:	mov    eax,DWORD PTR [edi+0x8]
30009814:	push   DWORD PTR [ebp+0x8]
30009817:	mov    ecx,edi
30009819:	mov    DWORD PTR [esi+0x2c],eax
3000981c:	call   0x3000437e
30009821:	lea    ecx,[edi+0x4]
30009824:	call   0x300051c8
30009829:	mov    eax,DWORD PTR [ebp+0x10]
3000982c:	mov    ecx,DWORD PTR [ebp+0xc]
3000982f:	mov    DWORD PTR [edi+0xc],eax
30009832:	inc    DWORD PTR [esi+0x4]
30009835:	mov    eax,DWORD PTR [esi]
30009837:	mov    eax,DWORD PTR [eax+ecx*4]
3000983a:	mov    DWORD PTR [edi+0x8],eax
3000983d:	mov    eax,DWORD PTR [esi]
3000983f:	mov    DWORD PTR [eax+ecx*4],edi
30009842:	mov    eax,DWORD PTR [esi+0x4]
30009845:	cmp    eax,DWORD PTR [esi+0x18]
30009848:	ja     0x3002371a
3000984e:	mov    eax,edi
30009850:	pop    edi
30009851:	pop    esi
30009852:	pop    ebp
30009853:	ret    0xc
30009856:	push   ebp
30009857:	mov    ebp,esp
30009859:	sub    esp,0xc
3000985c:	lea    eax,[ebp-0xc]
3000985f:	push   esi
30009860:	push   edi
30009861:	push   eax
30009862:	lea    eax,[ebp-0x4]
30009865:	push   eax
30009866:	lea    eax,[ebp-0x8]
30009869:	push   eax
3000986a:	push   DWORD PTR [ebp+0x8]
3000986d:	mov    esi,ecx
3000986f:	call   0x300094a9
30009874:	mov    edi,eax
30009876:	test   edi,edi
30009878:	jne    0x30009894
3000987a:	cmp    DWORD PTR [esi],eax
3000987c:	je     0x30009955
30009882:	push   DWORD PTR [ebp-0x4]
30009885:	mov    ecx,esi
30009887:	push   DWORD PTR [ebp-0x8]
3000988a:	push   DWORD PTR [ebp+0x8]
3000988d:	call   0x300097f9
30009892:	mov    edi,eax
30009894:	push   DWORD PTR [ebp+0xc]
30009897:	call   0x300042e4
3000989c:	pop    ecx
3000989d:	push   eax
3000989e:	push   DWORD PTR [ebp+0xc]
300098a1:	lea    ecx,[edi+0x4]
300098a4:	call   0x3000416f
300098a9:	mov    eax,edi
300098ab:	pop    edi
300098ac:	pop    esi
300098ad:	leave  
300098ae:	ret    0x8
300098b1:	push   ebp
300098b2:	mov    ebp,esp
300098b4:	push   esi
300098b5:	push   edi
300098b6:	mov    edi,ecx
300098b8:	mov    ecx,DWORD PTR [ebp+0x8]
300098bb:	call   0x3000996e
300098c0:	mov    esi,eax
300098c2:	test   esi,esi
300098c4:	je     0x300098de
300098c6:	push   DWORD PTR [esi+0x4]
300098c9:	lea    ecx,[edi+0x4]
300098cc:	push   DWORD PTR [esi]
300098ce:	call   0x30009856
300098d3:	mov    ecx,DWORD PTR [ebp+0x8]
300098d6:	push   esi
300098d7:	call   0x30009764
300098dc:	jmp    0x300098c0
300098de:	pop    edi
300098df:	pop    esi
300098e0:	pop    ebp
300098e1:	ret    0x4
300098e4:	push   ebp
300098e5:	mov    ebp,esp
300098e7:	push   esi
300098e8:	mov    esi,ecx
300098ea:	push   edi
300098eb:	cmp    DWORD PTR [esi],0x0
300098ee:	jne    0x300236a6
300098f4:	cmp    BYTE PTR [ebp+0xc],0x0
300098f8:	mov    edi,DWORD PTR [ebp+0x8]
300098fb:	je     0x30009943
300098fd:	push   0x300430f0
30009902:	xor    ecx,ecx
30009904:	push   0x4
30009906:	pop    edx
30009907:	mov    eax,edi
30009909:	mul    edx
3000990b:	seto   cl
3000990e:	neg    ecx
30009910:	or     ecx,eax
30009912:	push   ecx
30009913:	call   0x3000975b
30009918:	pop    ecx
30009919:	pop    ecx
3000991a:	mov    ecx,eax
3000991c:	mov    DWORD PTR [esi],ecx
3000991e:	test   ecx,ecx
30009920:	je     0x300236b7
30009926:	cmp    edi,0x3fffffff
3000992c:	ja     0x300236be
30009932:	mov    eax,edi
30009934:	shl    eax,0x2
30009937:	push   eax
30009938:	push   0x0
3000993a:	push   ecx
3000993b:	call   0x300011b1
30009940:	add    esp,0xc
30009943:	mov    ecx,esi
30009945:	mov    DWORD PTR [esi+0x8],edi
30009948:	call   0x30009619
3000994d:	mov    al,0x1
3000994f:	pop    edi
30009950:	pop    esi
30009951:	pop    ebp
30009952:	ret    0x8
30009955:	push   0x1
30009957:	push   DWORD PTR [esi+0x8]
3000995a:	mov    ecx,esi
3000995c:	call   0x300098e4
30009961:	test   al,al
30009963:	jne    0x30009882
30009969:	jmp    0x300236fd
3000996e:	xor    eax,eax
30009970:	cmp    DWORD PTR [ecx+0x4],eax
30009973:	je     0x3002458f
30009979:	mov    edx,DWORD PTR [ecx+0x8]
3000997c:	push   esi
3000997d:	test   edx,edx
3000997f:	je     0x3002458c
30009985:	mov    esi,DWORD PTR [ecx]
30009987:	mov    ecx,esi
30009989:	cmp    DWORD PTR [ecx],0x0
3000998c:	jne    0x3000999b
3000998e:	inc    eax
3000998f:	add    ecx,0x4
30009992:	cmp    eax,edx
30009994:	jb     0x30009989
30009996:	jmp    0x3002458c
3000999b:	mov    eax,DWORD PTR [esi+eax*4]
3000999e:	pop    esi
3000999f:	ret    
300099a0:	push   ebp
300099a1:	mov    ebp,esp
300099a3:	cmp    BYTE PTR ds:0x300430f1,0x0
300099aa:	push   esi
300099ab:	push   edi
300099ac:	mov    esi,ecx
300099ae:	jne    0x30025d64
300099b4:	lea    ecx,[esi+0x3c]
300099b7:	call   0x300162bb
300099bc:	test   eax,eax
300099be:	js     0x300099f0
300099c0:	lea    ecx,[esi+0x3c]
300099c3:	call   0x3001d91a
300099c8:	mov    eax,DWORD PTR [esi]
300099ca:	mov    ecx,esi
300099cc:	call   DWORD PTR [eax+0x40]
300099cf:	test   eax,eax
300099d1:	js     0x300099f0
300099d3:	push   DWORD PTR [ebp+0x8]
300099d6:	mov    ecx,esi
300099d8:	call   0x3000a8be
300099dd:	test   eax,eax
300099df:	js     0x300099f0
300099e1:	mov    eax,DWORD PTR [esi]
300099e3:	mov    ecx,esi
300099e5:	call   DWORD PTR [eax+0x44]
300099e8:	test   eax,eax
300099ea:	js     0x300099f0
300099ec:	mov    BYTE PTR [esi+0x69],0x1
300099f0:	pop    edi
300099f1:	pop    esi
300099f2:	pop    ebp
300099f3:	ret    0x4
300099f6:	add    edi,0x2
300099f9:	jmp    0x30008e87
300099fe:	push   DWORD PTR [eax-0xc]
30009a01:	sub    edi,eax
30009a03:	mov    ecx,ebx
30009a05:	sar    edi,1
30009a07:	call   0x30004286
30009a0c:	mov    ecx,DWORD PTR [ebx]
30009a0e:	mov    edx,eax
30009a10:	mov    eax,DWORD PTR [ecx-0xc]
30009a13:	mov    esi,eax
30009a15:	sub    esi,edi
30009a17:	lea    eax,[eax*2+0x2]
30009a1e:	lea    ecx,[esi*2+0x2]
30009a25:	push   ecx
30009a26:	lea    ecx,[edx+edi*2]
30009a29:	push   ecx
30009a2a:	push   eax
30009a2b:	push   edx
30009a2c:	call   0x30006cea
30009a31:	add    esp,0x10
30009a34:	mov    ecx,ebx
30009a36:	push   esi
30009a37:	call   0x30004147
30009a3c:	jmp    0x30008ea0
30009a41:	nop
30009a42:	nop
30009a43:	nop
30009a44:	nop
30009a45:	nop
30009a46:	nop
30009a47:	nop
30009a48:	nop
30009a49:	nop
30009a4a:	nop
30009a4b:	nop
30009a4c:	nop
30009a4d:	nop
30009a4e:	nop
30009a4f:	nop
30009a50:	cmp    dx,0x5c
30009a54:	je     0x30009a7b
30009a56:	xor    esi,esi
30009a58:	add    eax,0x2
30009a5b:	movzx  edx,WORD PTR [eax]
30009a5e:	test   dx,dx
30009a61:	jne    0x30009a50
30009a63:	test   esi,esi
30009a65:	je     0x30009a93
30009a67:	sub    esi,DWORD PTR [edi]
30009a69:	sar    esi,1
30009a6b:	push   esi
30009a6c:	call   0x30004286
30009a71:	push   esi
30009a72:	mov    ecx,edi
30009a74:	call   0x30004147
30009a79:	jmp    0x30009a93
30009a7b:	test   esi,esi
30009a7d:	jne    0x30009a58
30009a7f:	mov    esi,eax
30009a81:	jmp    0x30009a58
30009a83:	push   esi
30009a84:	push   edi
30009a85:	mov    edi,ecx
30009a87:	xor    esi,esi
30009a89:	mov    eax,DWORD PTR [edi]
30009a8b:	movzx  edx,WORD PTR [eax]
30009a8e:	test   dx,dx
30009a91:	jne    0x30009a50
30009a93:	mov    eax,edi
30009a95:	pop    edi
30009a96:	pop    esi
30009a97:	ret    0x4
30009a9a:	push   ebp
30009a9b:	mov    ebp,esp
30009a9d:	sub    esp,0x18
30009aa0:	push   ebx
30009aa1:	push   esi
30009aa2:	push   edi
30009aa3:	xor    ebx,ebx
30009aa5:	mov    edi,ecx
30009aa7:	mov    esi,ebx
30009aa9:	lea    ecx,[ebp-0x8]
30009aac:	mov    DWORD PTR [ebp-0xc],esi
30009aaf:	call   0x300051c8
30009ab4:	cmp    BYTE PTR [edi+0x24],bl
30009ab7:	je     0x30026751
30009abd:	mov    eax,DWORD PTR [edi+0x20]
30009ac0:	cmp    DWORD PTR [eax-0xc],ebx
30009ac3:	je     0x3000a996
30009ac9:	lea    esi,[edi+0x8]
30009acc:	xor    ebx,ebx
30009ace:	lea    ecx,[ebp-0x8]
30009ad1:	inc    ebx
30009ad2:	call   0x30004564
30009ad7:	push   ecx
30009ad8:	lea    ecx,[ebp-0x8]
30009adb:	call   0x30009a83
30009ae0:	lea    ecx,[ebp-0xc]
30009ae3:	call   0x300051c8
30009ae8:	lea    eax,[ebp-0xc]
30009aeb:	push   eax
30009aec:	mov    ecx,esi
30009aee:	call   0x30009c23
30009af3:	mov    esi,eax
30009af5:	test   esi,esi
30009af7:	js     0x300267e6
30009afd:	mov    eax,DWORD PTR [ebp-0xc]
30009b00:	lea    ecx,[ebp-0x8]
30009b03:	push   DWORD PTR [eax-0xc]
30009b06:	push   eax
30009b07:	call   0x30008b64
30009b0c:	lea    ecx,[ebp-0xc]
30009b0f:	call   0x300051a4
30009b14:	push   ebx
30009b15:	lea    eax,[ebp-0x18]
30009b18:	push   eax
30009b19:	lea    ecx,[ebp-0x8]
30009b1c:	call   0x30009162
30009b21:	push   0x30008fc4
30009b26:	mov    ecx,eax
30009b28:	call   0x300091ce
30009b2d:	mov    ebx,eax
30009b2f:	neg    ebx
30009b31:	lea    ecx,[ebp-0x18]
30009b34:	sbb    bl,bl
30009b36:	call   0x300051a4
30009b3b:	inc    bl
30009b3d:	jne    0x3000a3e1
30009b43:	xor    ebx,ebx
30009b45:	lea    ecx,[ebp-0x8]
30009b48:	call   0x30008e7a
30009b4d:	mov    eax,DWORD PTR [ebp-0x8]
30009b50:	cmp    DWORD PTR [eax-0xc],ebx
30009b53:	je     0x3000a38f
30009b59:	push   0x2
30009b5b:	push   ebx
30009b5c:	lea    eax,[ebp-0x14]
30009b5f:	push   eax
30009b60:	lea    ecx,[ebp-0x8]
30009b63:	call   0x30008d6e
30009b68:	push   0x30009ccc
30009b6d:	mov    ecx,eax
30009b6f:	call   0x300091ce
30009b74:	mov    ebx,eax
30009b76:	neg    ebx
30009b78:	lea    ecx,[ebp-0x14]
30009b7b:	sbb    bl,bl
30009b7d:	call   0x300051a4
30009b82:	inc    bl
30009b84:	jne    0x3000a38f
30009b8a:	push   0x1
30009b8c:	xor    esi,esi
30009b8e:	push   esi
30009b8f:	lea    eax,[ebp-0x10]
30009b92:	push   eax
30009b93:	lea    ecx,[ebp-0x8]
30009b96:	call   0x30008d6e
30009b9b:	push   0x30008e38
30009ba0:	mov    ecx,eax
30009ba2:	call   0x300091ce
30009ba7:	mov    ebx,eax
30009ba9:	neg    ebx
30009bab:	lea    ecx,[ebp-0x10]
30009bae:	sbb    bl,bl
30009bb0:	call   0x300051a4
30009bb5:	inc    bl
30009bb7:	jne    0x3000a38f
30009bbd:	push   0x1
30009bbf:	push   esi
30009bc0:	lea    eax,[ebp-0x18]
30009bc3:	push   eax
30009bc4:	lea    ecx,[ebp-0x8]
30009bc7:	call   0x30008d6e
30009bcc:	push   0x30009cc8
30009bd1:	mov    ecx,eax
30009bd3:	call   0x300091ce
30009bd8:	mov    ebx,eax
30009bda:	neg    ebx
30009bdc:	lea    ecx,[ebp-0x18]
30009bdf:	sbb    bl,bl
30009be1:	call   0x300051a4
30009be6:	mov    eax,DWORD PTR [edi]
30009be8:	lea    ecx,[ebp-0x8]
30009beb:	inc    bl
30009bed:	jne    0x3000a34d
30009bf3:	push   DWORD PTR [ebp+0x8]
30009bf6:	push   ecx
30009bf7:	mov    ecx,edi
30009bf9:	call   DWORD PTR [eax+0x14]
30009bfc:	test   eax,eax
30009bfe:	js     0x3000b700
30009c04:	mov    ecx,DWORD PTR [ebp+0x8]
30009c07:	lea    esi,[edi+0x20]
30009c0a:	push   esi
30009c0b:	call   0x300014c1
30009c10:	xor    ebx,ebx
30009c12:	lea    ecx,[ebp-0x8]
30009c15:	call   0x300051a4
30009c1a:	pop    edi
30009c1b:	pop    esi
30009c1c:	mov    eax,ebx
30009c1e:	pop    ebx
30009c1f:	leave  
30009c20:	ret    0x4
30009c23:	push   ebp
30009c24:	mov    ebp,esp
30009c26:	push   ecx
30009c27:	push   ecx
30009c28:	push   ebx
30009c29:	mov    ebx,ecx
30009c2b:	push   esi
30009c2c:	mov    edx,DWORD PTR [ebx+0x4]
30009c2f:	mov    eax,DWORD PTR [ebx+0xc]
30009c32:	push   edi
30009c33:	lea    ecx,[edx+eax*2]
30009c36:	mov    eax,DWORD PTR [ebx+0x8]
30009c39:	push   0xa
30009c3b:	lea    edx,[edx+eax*2]
30009c3e:	mov    DWORD PTR [ebp-0x8],ecx
30009c41:	mov    edi,edx
30009c43:	pop    esi
30009c44:	mov    DWORD PTR [ebp-0x4],0xd
30009c4b:	cmp    edi,ecx
30009c4d:	jae    0x30009c62
30009c4f:	movzx  eax,WORD PTR [edi]
30009c52:	cmp    ax,si
30009c55:	je     0x30009c62
30009c57:	cmp    ax,WORD PTR [ebp-0x4]
30009c5b:	je     0x30009c62
30009c5d:	add    edi,0x2
30009c60:	jmp    0x30009c4b
30009c62:	mov    ecx,DWORD PTR [ebp+0x8]
30009c65:	mov    esi,edi
30009c67:	sub    esi,edx
30009c69:	sar    esi,1
30009c6b:	push   esi
30009c6c:	push   edx
30009c6d:	call   0x3000416f
30009c72:	lea    eax,[esi+0x1]
30009c75:	add    DWORD PTR [ebx+0x8],eax
30009c78:	mov    ecx,DWORD PTR [ebx+0x8]
30009c7b:	cmp    edi,DWORD PTR [ebp-0x8]
30009c7e:	jae    0x30009c97
30009c80:	movzx  eax,WORD PTR [edi+0x2]
30009c84:	push   0xa
30009c86:	pop    edx
30009c87:	cmp    ax,dx
30009c8a:	jne    0x30009cae
30009c8c:	cmp    ax,WORD PTR [edi]
30009c8f:	je     0x30009c97
30009c91:	lea    eax,[ecx+0x1]
30009c94:	mov    DWORD PTR [ebx+0x8],eax
30009c97:	push   DWORD PTR [ebp+0x8]
30009c9a:	inc    DWORD PTR [ebx+0x10]
30009c9d:	lea    ecx,[ebx+0x14]
30009ca0:	call   0x300014c1
30009ca5:	pop    edi
30009ca6:	pop    esi
30009ca7:	xor    eax,eax
30009ca9:	pop    ebx
30009caa:	leave  
30009cab:	ret    0x4
30009cae:	push   0xd
30009cb0:	pop    edx
30009cb1:	cmp    ax,dx
30009cb4:	je     0x30009c8c
30009cb6:	jmp    0x30009c97
30009cb8:	sub    eax,DWORD PTR [esi]
30009cba:	sar    eax,1
30009cbc:	jmp    0x30009270
30009cc1:	nop
30009cc2:	nop
30009cc3:	nop
30009cc4:	inc    eax
30009cc5:	add    BYTE PTR [eax],al
30009cc7:	add    BYTE PTR [ebx+0x0],bl
30009cca:	add    BYTE PTR [eax],al
30009ccc:	das    
30009ccd:	add    BYTE PTR [edi],ch
30009ccf:	add    BYTE PTR [eax],al
30009cd1:	add    BYTE PTR [eax+0x3d90],dl
30009cd7:	add    BYTE PTR [esi+esi*2+0x3],al
30009cdb:	xor    BYTE PTR [ebp-0x56],ah
30009cde:	add    BYTE PTR [eax],dh
30009ce0:	int    0xae
30009ce2:	add    BYTE PTR [eax],dh
30009ce4:	call   0xa2:0xef30009a
30009ceb:	xor    BYTE PTR [ebp-0x63],dl
30009cee:	add    BYTE PTR [eax],dh
30009cf0:	xchg   edx,eax
30009cf1:	jbe    0x30009cf6
30009cf3:	xor    BYTE PTR [esi+esi*2+0x3],ah
30009cf7:	xor    BYTE PTR [edx],dh
30009cf9:	shr    bl,0x54
30009cfc:	push   ebp
30009cfd:	mov    ebp,esp
30009cff:	push   ecx
30009d00:	push   ebx
30009d01:	push   esi
30009d02:	push   edi
30009d03:	mov    edi,ecx
30009d05:	mov    eax,DWORD PTR [edi]
30009d07:	mov    esi,DWORD PTR [eax-0xc]
30009d0a:	cmp    esi,0x2
30009d0d:	jl     0x30009cf8
30009d0f:	test   esi,esi
30009d11:	js     0x30026812
30009d17:	push   0x22
30009d19:	pop    ebx
30009d1a:	cmp    WORD PTR [eax],bx
30009d1d:	jne    0x30009cf8
30009d1f:	lea    eax,[esi-0x1]
30009d22:	push   eax
30009d23:	call   0x30008e17
30009d28:	cmp    ax,bx
30009d2b:	jne    0x30009cf8
30009d2d:	lea    eax,[esi-0x2]
30009d30:	push   eax
30009d31:	push   0x1
30009d33:	lea    ecx,[ebp-0x4]
30009d36:	push   ecx
30009d37:	mov    ecx,edi
30009d39:	call   0x30008d6e
30009d3e:	push   eax
30009d3f:	mov    ecx,edi
30009d41:	call   0x300014c1
30009d46:	lea    ecx,[ebp-0x4]
30009d49:	call   0x300051a4
30009d4e:	mov    al,0x1
30009d50:	pop    edi
30009d51:	pop    esi
30009d52:	pop    ebx
30009d53:	leave  
30009d54:	ret    
30009d55:	push   ebp
30009d56:	mov    ebp,esp
30009d58:	sub    esp,0x14
30009d5b:	and    DWORD PTR [ebp-0xc],0x0
30009d5f:	push   ebx
30009d60:	mov    ebx,DWORD PTR [ebp+0x8]
30009d63:	push   esi
30009d64:	mov    esi,ecx
30009d66:	mov    ecx,DWORD PTR [ebx]
30009d68:	mov    DWORD PTR [ebp-0x4],esi
30009d6b:	mov    eax,DWORD PTR [ecx-0xc]
30009d6e:	test   eax,eax
30009d70:	je     0x30026af8
30009d76:	js     0x30026c98
30009d7c:	push   0x22
30009d7e:	xor    eax,eax
30009d80:	pop    edx
30009d81:	inc    eax
30009d82:	mov    DWORD PTR [ebp-0x8],eax
30009d85:	cmp    WORD PTR [ecx],dx
30009d88:	jne    0x30009d94
30009d8a:	push   eax
30009d8b:	push   edx
30009d8c:	mov    ecx,ebx
30009d8e:	call   0x300091f2
30009d93:	inc    eax
30009d94:	push   eax
30009d95:	push   0x30009cd4
30009d9a:	mov    ecx,ebx
30009d9c:	call   0x3000923c
30009da1:	mov    DWORD PTR [ebp-0x14],eax
30009da4:	test   eax,eax
30009da6:	js     0x30026b13
30009dac:	push   edi
30009dad:	push   eax
30009dae:	push   0x0
30009db0:	lea    eax,[ebp-0x10]
30009db3:	push   eax
30009db4:	mov    ecx,ebx
30009db6:	call   0x30008d6e
30009dbb:	mov    edi,DWORD PTR [ebp+0xc]
30009dbe:	push   eax
30009dbf:	lea    ecx,[edi+0x4]
30009dc2:	call   0x300014c1
30009dc7:	lea    ecx,[ebp-0x10]
30009dca:	call   0x300051a4
30009dcf:	mov    eax,DWORD PTR [ebx]
30009dd1:	mov    ecx,DWORD PTR [ebp-0x14]
30009dd4:	mov    eax,DWORD PTR [eax-0xc]
30009dd7:	inc    ecx
30009dd8:	sub    eax,ecx
30009dda:	push   eax
30009ddb:	push   ecx
30009ddc:	lea    eax,[ebp+0xc]
30009ddf:	push   eax
30009de0:	mov    ecx,ebx
30009de2:	call   0x30008d6e
30009de7:	lea    eax,[ebp+0xc]
30009dea:	lea    ebx,[edi+0xc]
30009ded:	push   eax
30009dee:	mov    ecx,ebx
30009df0:	call   0x300014c1
30009df5:	lea    ecx,[ebp+0xc]
30009df8:	call   0x300051a4
30009dfd:	lea    ecx,[edi+0x4]
30009e00:	call   0x30008e3c
30009e05:	mov    ecx,ebx
30009e07:	call   0x30008e3c
30009e0c:	push   0x30009cc4
30009e11:	lea    ecx,[edi+0x4]
30009e14:	call   0x300091ce
30009e19:	test   eax,eax
30009e1b:	je     0x30009e2d
30009e1d:	lea    ecx,[edi+0x4]
30009e20:	call   0x30009cfc
30009e25:	test   al,al
30009e27:	je     0x30026b1c
30009e2d:	mov    ecx,ebx
30009e2f:	call   0x30009cfc
30009e34:	test   al,al
30009e36:	je     0x30009e45
30009e38:	and    DWORD PTR [edi+0x8],0x0
30009e3c:	xor    eax,eax
30009e3e:	pop    edi
30009e3f:	pop    esi
30009e40:	pop    ebx
30009e41:	leave  
30009e42:	ret    0x8
30009e45:	push   0x2
30009e47:	lea    eax,[ebp+0xc]
30009e4a:	push   eax
30009e4b:	mov    ecx,ebx
30009e4d:	call   0x30008de3
30009e52:	push   0x30009f1c
30009e57:	mov    ecx,eax
30009e59:	call   0x300091ce
30009e5e:	mov    ebx,eax
30009e60:	neg    ebx
30009e62:	lea    ecx,[ebp+0xc]
30009e65:	sbb    bl,bl
30009e67:	call   0x300051a4
30009e6c:	inc    bl
30009e6e:	jne    0x30026b2d
30009e74:	push   0x3
30009e76:	lea    eax,[ebp+0xc]
30009e79:	push   eax
30009e7a:	lea    ecx,[edi+0xc]
30009e7d:	call   0x30008de3
30009e82:	push   0x30009f14
30009e87:	mov    ecx,eax
30009e89:	call   0x300091ce
30009e8e:	mov    ebx,eax
30009e90:	neg    ebx
30009e92:	lea    ecx,[ebp+0xc]
30009e95:	sbb    bl,bl
30009e97:	call   0x300051a4
30009e9c:	inc    bl
30009e9e:	jne    0x3000b445
30009ea4:	push   0x4
30009ea6:	pop    eax
30009ea7:	mov    DWORD PTR [ebp+0xc],eax
30009eaa:	push   0x6
30009eac:	lea    eax,[ebp-0x10]
30009eaf:	lea    ebx,[edi+0xc]
30009eb2:	push   eax
30009eb3:	mov    ecx,ebx
30009eb5:	call   0x30008de3
30009eba:	push   0x3000a84c
30009ebf:	mov    ecx,eax
30009ec1:	call   0x300091ce
30009ec6:	test   eax,eax
30009ec8:	jne    0x30026c3f
30009ece:	mov    BYTE PTR [ebp-0xc],0x1
30009ed2:	mov    eax,DWORD PTR [ebp+0xc]
30009ed5:	test   al,0x8
30009ed7:	jne    0x30026c63
30009edd:	test   al,0x4
30009edf:	je     0x30009ee9
30009ee1:	lea    ecx,[ebp-0x10]
30009ee4:	call   0x300051a4
30009ee9:	cmp    BYTE PTR [ebp-0xc],0x0
30009eed:	je     0x30026c79
30009ef3:	lea    eax,[edi+0x20]
30009ef6:	push   eax
30009ef7:	lea    eax,[edi+0x1c]
30009efa:	push   eax
30009efb:	lea    eax,[edi+0x8]
30009efe:	push   eax
30009eff:	push   ebx
30009f00:	mov    ecx,esi
30009f02:	call   0x3000a761
30009f07:	test   eax,eax
30009f09:	js     0x30009e3e
30009f0f:	jmp    0x30009e3c
30009f14:	push   0x78006500
30009f19:	add    BYTE PTR [eax],al
30009f1b:	add    BYTE PTR [ebp+0x0],ah
30009f1e:	cmp    al,BYTE PTR [eax]
30009f20:	add    BYTE PTR [eax],al
30009f22:	xor    al,al
30009f24:	jmp    0x3000a2c2
30009f29:	nop
30009f2a:	nop
30009f2b:	nop
30009f2c:	dec    DWORD PTR [esi+0x3]
30009f2f:	xor    BYTE PTR [edi+ecx*2+0x3],al
30009f33:	xor    cl,cl
30009f35:	mov    ds:0x5cc23000,al
30009f3a:	add    esi,DWORD PTR [eax]
30009f3c:	mov    WORD PTR [esi+0x3],cs
30009f3f:	xor    ah,dh
30009f41:	mov    ds:0x5d033000,eax
30009f46:	add    esi,DWORD PTR [eax]
30009f48:	dec    esp
30009f49:	pop    esi
30009f4a:	add    esi,DWORD PTR [eax]
30009f4c:	pop    esp
30009f4d:	popa   
30009f4e:	add    esi,DWORD PTR [eax]
30009f50:	fsub   DWORD PTR [ecx-0x5db8d000]
30009f56:	add    BYTE PTR [eax],dh
30009f58:	pop    ebp
30009f59:	add    BYTE PTR [eax],al
30009f5b:	add    BYTE PTR [ebx+0x7400f47e],al
30009f61:	sbb    BYTE PTR [ebx-0x3474fd],cl
30009f67:	push   eax
30009f68:	adc    BYTE PTR [ebp+0x78880fc0],al
30009f6e:	add    DWORD PTR [eax],eax
30009f70:	add    BYTE PTR [ebx-0x7bf0fe08],al
30009f76:	jle    0x30009f3d
30009f78:	add    BYTE PTR [eax],al
30009f7a:	lea    eax,[esp+0x40]
30009f7e:	push   eax
30009f7f:	lea    ecx,[esp+0x14]
30009f83:	call   0x300014c1
30009f88:	mov    esi,DWORD PTR [esp+0x10]
30009f8c:	jmp    0x3000a032
30009f91:	push   ebp
30009f92:	mov    ebp,esp
30009f94:	and    esp,0xfffffff8
30009f97:	sub    esp,0x5c
30009f9a:	push   ebx
30009f9b:	push   esi
30009f9c:	mov    ebx,ecx
30009f9e:	push   edi
30009f9f:	lea    ecx,[esp+0x40]
30009fa3:	mov    DWORD PTR [esp+0x14],ebx
30009fa7:	call   0x300051c8
30009fac:	lea    ecx,[esp+0x44]
30009fb0:	call   0x300051c8
30009fb5:	lea    ecx,[esp+0x4c]
30009fb9:	call   0x300051c8
30009fbe:	mov    eax,0x10000
30009fc3:	push   eax
30009fc4:	mov    DWORD PTR [esp+0x5c],eax
30009fc8:	call   0x300089a5
30009fcd:	pop    ecx
30009fce:	mov    edi,eax
30009fd0:	lea    ecx,[esp+0x10]
30009fd4:	mov    DWORD PTR [esp+0x50],edi
30009fd8:	call   0x300051c8
30009fdd:	lea    ecx,[esp+0x18]
30009fe1:	call   0x300051c8
30009fe6:	mov    eax,DWORD PTR [ebx]
30009fe8:	lea    ecx,[esp+0x40]
30009fec:	push   ecx
30009fed:	mov    ecx,ebx
30009fef:	call   DWORD PTR [eax+0x8]
30009ff2:	mov    esi,DWORD PTR [esp+0x10]
30009ff6:	mov    ecx,eax
30009ff8:	xor    eax,eax
30009ffa:	test   ecx,ecx
30009ffc:	js     0x3000a0cd
3000a002:	push   DWORD PTR [esp+0x18]
3000a006:	lea    ecx,[esp+0x44]
3000a00a:	call   0x300091ce
3000a00f:	test   eax,eax
3000a011:	je     0x3000a0b5
3000a017:	push   esi
3000a018:	lea    ecx,[esp+0x44]
3000a01c:	call   0x300091ce
3000a021:	test   eax,eax
3000a023:	setne  al
3000a026:	mov    BYTE PTR [esp+0xf],al
3000a02a:	test   al,al
3000a02c:	jne    0x30009f5c
3000a032:	lea    eax,[ebx+0x2c]
3000a035:	lea    ecx,[esp+0x40]
3000a039:	push   ecx
3000a03a:	mov    ecx,eax
3000a03c:	mov    DWORD PTR [esp+0x20],eax
3000a040:	call   0x300093f0
3000a045:	cmp    BYTE PTR [esp+0xf],0x0
3000a04a:	jne    0x3000a1f7
3000a050:	mov    eax,DWORD PTR [esp+0x44]
3000a054:	cmp    DWORD PTR [eax-0xc],0x0
3000a058:	je     0x3000a0b5
3000a05a:	mov    ebx,DWORD PTR [esp+0x1c]
3000a05e:	lea    eax,[esp+0x44]
3000a062:	push   eax
3000a063:	mov    ecx,ebx
3000a065:	call   0x300093f0
3000a06a:	push   0x30009cc4
3000a06f:	lea    ecx,[esp+0x48]
3000a073:	call   0x300091ce
3000a078:	test   eax,eax
3000a07a:	je     0x3000a6ed
3000a080:	mov    eax,DWORD PTR [esp+0x48]
3000a084:	test   eax,eax
3000a086:	js     0x3000a09d
3000a088:	cmp    eax,0x1
3000a08b:	jg     0x3000a129
3000a091:	lea    eax,[esp+0x4c]
3000a095:	push   eax
3000a096:	mov    ecx,ebx
3000a098:	call   0x300093f0
3000a09d:	mov    ecx,DWORD PTR [esp+0x14]
3000a0a1:	lea    edx,[esp+0x40]
3000a0a5:	mov    eax,DWORD PTR [ecx]
3000a0a7:	push   edx
3000a0a8:	call   DWORD PTR [eax+0x14]
3000a0ab:	mov    ebx,eax
3000a0ad:	test   ebx,ebx
3000a0af:	js     0x3000a0eb
3000a0b1:	mov    ebx,DWORD PTR [esp+0x14]
3000a0b5:	mov    eax,DWORD PTR [ebx]
3000a0b7:	lea    ecx,[esp+0x40]
3000a0bb:	push   ecx
3000a0bc:	mov    ecx,ebx
3000a0be:	call   DWORD PTR [eax+0x8]
3000a0c1:	mov    ecx,eax
3000a0c3:	test   ecx,ecx
3000a0c5:	jns    0x3000a002
3000a0cb:	xor    eax,eax
3000a0cd:	lea    ebx,[ecx+0x7ff8ffda]
3000a0d3:	neg    ebx
3000a0d5:	sbb    ebx,ebx
3000a0d7:	and    ebx,ecx
3000a0d9:	jl     0x3000a0eb
3000a0db:	cmp    DWORD PTR [esi-0xc],eax
3000a0de:	je     0x3000a0eb
3000a0e0:	mov    ecx,DWORD PTR [esp+0x14]
3000a0e4:	mov    eax,DWORD PTR [ecx]
3000a0e6:	call   DWORD PTR [eax+0x10]
3000a0e9:	mov    ebx,eax
3000a0eb:	lea    ecx,[esp+0x18]
3000a0ef:	call   0x300051a4
3000a0f4:	lea    ecx,[esp+0x10]
3000a0f8:	call   0x300051a4
3000a0fd:	push   edi
3000a0fe:	call   DWORD PTR ds:0x300453d4
3000a104:	pop    ecx
3000a105:	lea    ecx,[esp+0x4c]
3000a109:	call   0x300051a4
3000a10e:	lea    ecx,[esp+0x44]
3000a112:	call   0x300051a4
3000a117:	lea    ecx,[esp+0x40]
3000a11b:	call   0x300051a4
3000a120:	pop    edi
3000a121:	pop    esi
3000a122:	mov    eax,ebx
3000a124:	pop    ebx
3000a125:	mov    esp,ebp
3000a127:	pop    ebp
3000a128:	ret    
3000a129:	cmp    eax,0x2
3000a12c:	jne    0x3000a09d
3000a132:	push   ecx
3000a133:	lea    ecx,[esp+0x2c]
3000a137:	call   0x3000704d
3000a13c:	mov    ecx,DWORD PTR [esp+0x50]
3000a140:	lea    edx,[esp+0x28]
3000a144:	call   0x3000bbb4
3000a149:	mov    ebx,eax
3000a14b:	test   ebx,ebx
3000a14d:	js     0x300164ff
3000a153:	mov    eax,DWORD PTR [esp+0x28]
3000a157:	mov    DWORD PTR [esp+0x20],eax
3000a15b:	test   eax,eax
3000a15d:	je     0x3000a17c
3000a15f:	mov    ebx,DWORD PTR [esp+0x1c]
3000a163:	lea    eax,[esp+0x20]
3000a167:	push   eax
3000a168:	call   0x30008fa7
3000a16d:	push   eax
3000a16e:	mov    ecx,ebx
3000a170:	call   0x300093f0
3000a175:	cmp    DWORD PTR [esp+0x20],0x0
3000a17a:	jne    0x3000a163
3000a17c:	mov    edx,DWORD PTR [esp+0x50]
3000a180:	lea    eax,[esp+0x24]
3000a184:	push   eax
3000a185:	mov    eax,DWORD PTR [esp+0x5c]
3000a189:	shr    eax,1
3000a18b:	push   eax
3000a18c:	lea    ecx,[esp+0x30]
3000a190:	call   0x3000badf
3000a195:	mov    ebx,eax
3000a197:	test   ebx,ebx
3000a199:	js     0x300164ff
3000a19f:	mov    eax,DWORD PTR [esp+0x24]
3000a1a3:	add    eax,eax
3000a1a5:	lea    ecx,[esp+0x28]
3000a1a9:	mov    DWORD PTR [esp+0x54],eax
3000a1ad:	call   0x30007014
3000a1b2:	jmp    0x3000a09d
3000a1b7:	nop
3000a1b8:	jg     0x3000a209
3000a1ba:	add    esi,DWORD PTR [eax]
3000a1bc:	mov    WORD PTR [esi+0x3],cs
3000a1bf:	xor    ah,dh
3000a1c1:	mov    ds:0x4fb83000,eax
3000a1c6:	add    esi,DWORD PTR [eax]
3000a1c8:	outs   dx,DWORD PTR ds:[esi]
3000a1c9:	push   eax
3000a1ca:	add    esi,DWORD PTR [eax]
3000a1cc:	jnp    0x3000a21e
3000a1ce:	add    esi,DWORD PTR [eax]
3000a1d0:	fsub   DWORD PTR [ecx-0x5db8d000]
3000a1d6:	add    BYTE PTR [eax],dh
3000a1d8:	push   ebp
3000a1d9:	mov    ebp,esp
3000a1db:	mov    ecx,DWORD PTR [ecx+0x60]
3000a1de:	push   esi
3000a1df:	mov    esi,DWORD PTR [ebp+0x8]
3000a1e2:	mov    eax,DWORD PTR [ecx]
3000a1e4:	push   esi
3000a1e5:	call   DWORD PTR [eax+0x8]
3000a1e8:	test   al,al
3000a1ea:	je     0x30024a3e
3000a1f0:	xor    eax,eax
3000a1f2:	pop    esi
3000a1f3:	pop    ebp
3000a1f4:	ret    0x4
3000a1f7:	mov    eax,DWORD PTR [ebx]
3000a1f9:	lea    ecx,[esp+0x40]
3000a1fd:	push   ecx
3000a1fe:	mov    ecx,ebx
3000a200:	call   DWORD PTR [eax+0x1c]
3000a203:	test   eax,eax
3000a205:	je     0x300164e5
3000a20b:	mov    eax,DWORD PTR [ebx]
3000a20d:	lea    ecx,[esp+0x40]
3000a211:	push   ecx
3000a212:	mov    ecx,ebx
3000a214:	call   DWORD PTR [eax+0x18]
3000a217:	test   eax,eax
3000a219:	js     0x3000a0e9
3000a21f:	mov    eax,DWORD PTR [ebx]
3000a221:	lea    ecx,[esp+0x40]
3000a225:	push   ecx
3000a226:	mov    ecx,ebx
3000a228:	call   DWORD PTR [eax+0xc]
3000a22b:	mov    ebx,eax
3000a22d:	test   ebx,ebx
3000a22f:	js     0x3000a0eb
3000a235:	cmp    ebx,0x1
3000a238:	je     0x30024ad2
3000a23e:	mov    ebx,DWORD PTR [esp+0x14]
3000a242:	jmp    0x3000a050
3000a247:	push   ebp
3000a248:	mov    ebp,esp
3000a24a:	mov    ecx,DWORD PTR [ecx+0x60]
3000a24d:	push   DWORD PTR [ebp+0x8]
3000a250:	mov    eax,DWORD PTR [ecx]
3000a252:	call   DWORD PTR [eax+0x4]
3000a255:	xor    ecx,ecx
3000a257:	test   al,al
3000a259:	sete   cl
3000a25c:	mov    eax,ecx
3000a25e:	pop    ebp
3000a25f:	ret    0x4
3000a262:	push   ebp
3000a263:	mov    ebp,esp
3000a265:	mov    edx,DWORD PTR [ecx+0x18]
3000a268:	mov    ecx,DWORD PTR [ecx+0x14]
3000a26b:	pop    ebp
3000a26c:	jmp    0x3000a26e
3000a26e:	push   ebp
3000a26f:	mov    ebp,esp
3000a271:	push   ebx
3000a272:	push   esi
3000a273:	push   edi
3000a274:	mov    esi,edx
3000a276:	test   ecx,ecx
3000a278:	je     0x30009f22
3000a27e:	test   esi,esi
3000a280:	je     0x30009f22
3000a286:	mov    ebx,DWORD PTR [ebp+0x8]
3000a289:	mov    eax,DWORD PTR [ebx]
3000a28b:	mov    edi,DWORD PTR [eax-0xc]
3000a28e:	cmp    edi,esi
3000a290:	jb     0x30009f22
3000a296:	push   esi
3000a297:	push   eax
3000a298:	push   ecx
3000a299:	call   DWORD PTR ds:0x30045384
3000a29f:	add    esp,0xc
3000a2a2:	test   eax,eax
3000a2a4:	jne    0x30009f22
3000a2aa:	cmp    edi,esi
3000a2ac:	je     0x3000a2c0
3000a2ae:	push   esi
3000a2af:	mov    ecx,ebx
3000a2b1:	call   0x30008e17
3000a2b6:	cmp    ax,0x5c
3000a2ba:	jne    0x30009f22
3000a2c0:	mov    al,0x1
3000a2c2:	pop    edi
3000a2c3:	pop    esi
3000a2c4:	pop    ebx
3000a2c5:	pop    ebp
3000a2c6:	ret    0x4
3000a2c9:	push   ebp
3000a2ca:	mov    ebp,esp
3000a2cc:	cmp    DWORD PTR [ecx+0x8],0x0
3000a2d0:	je     0x3000a2e8
3000a2d2:	mov    edx,DWORD PTR [ecx+0xc]
3000a2d5:	push   DWORD PTR [ebp+0x8]
3000a2d8:	mov    ecx,DWORD PTR [ecx+0x8]
3000a2db:	call   0x3000a26e
3000a2e0:	test   al,al
3000a2e2:	je     0x30025f40
3000a2e8:	xor    eax,eax
3000a2ea:	inc    eax
3000a2eb:	pop    ebp
3000a2ec:	ret    0x4
3000a2ef:	push   ebp
3000a2f0:	mov    ebp,esp
3000a2f2:	push   ebx
3000a2f3:	push   esi
3000a2f4:	mov    esi,DWORD PTR [ebp+0x8]
3000a2f7:	push   edi
3000a2f8:	push   0x1
3000a2fa:	mov    edi,ecx
3000a2fc:	push   0x30009f58
3000a301:	mov    ecx,esi
3000a303:	call   0x3000923c
3000a308:	mov    ebx,eax
3000a30a:	test   ebx,ebx
3000a30c:	js     0x300269f2
3000a312:	mov    eax,DWORD PTR [esi]
3000a314:	mov    ecx,DWORD PTR [eax-0xc]
3000a317:	lea    eax,[ecx-0x1]
3000a31a:	cmp    ebx,eax
3000a31c:	jl     0x30015f6f
3000a322:	lea    eax,[ebx-0x1]
3000a325:	push   eax
3000a326:	push   0x1
3000a328:	lea    eax,[ebp+0x8]
3000a32b:	push   eax
3000a32c:	mov    ecx,esi
3000a32e:	call   0x30008d6e
3000a333:	mov    ecx,DWORD PTR [ebp+0xc]
3000a336:	push   eax
3000a337:	call   0x300014c1
3000a33c:	lea    ecx,[ebp+0x8]
3000a33f:	call   0x300051a4
3000a344:	xor    eax,eax
3000a346:	pop    edi
3000a347:	pop    esi
3000a348:	pop    ebx
3000a349:	pop    ebp
3000a34a:	ret    0x8
3000a34d:	lea    ebx,[edi+0x20]
3000a350:	push   ebx
3000a351:	push   ecx
3000a352:	mov    ecx,edi
3000a354:	call   DWORD PTR [eax+0x10]
3000a357:	mov    esi,eax
3000a359:	test   esi,esi
3000a35b:	js     0x3000b707
3000a361:	mov    esi,DWORD PTR [ebp+0x8]
3000a364:	push   ebx
3000a365:	mov    ecx,esi
3000a367:	call   0x300014c1
3000a36c:	lea    ecx,[esi+0x4]
3000a36f:	call   0x30004564
3000a374:	jmp    0x30009c10
3000a379:	lea    edi,[eax+ebx*2]
3000a37c:	jmp    0x30008bce
3000a381:	push   ecx
3000a382:	mov    ecx,DWORD PTR [ebp+0x8]
3000a385:	call   0x30004340
3000a38a:	jmp    0x30009195
3000a38f:	lea    esi,[edi+0x8]
3000a392:	mov    eax,DWORD PTR [esi+0x8]
3000a395:	cmp    eax,DWORD PTR [esi+0xc]
3000a398:	jb     0x30009acc
3000a39e:	mov    ebx,0x80070026
3000a3a3:	jmp    0x30009c12
3000a3a8:	push   ebp
3000a3a9:	mov    ebp,esp
3000a3ab:	push   ebx
3000a3ac:	push   esi
3000a3ad:	push   edi
3000a3ae:	mov    esi,ecx
3000a3b0:	mov    ebx,0x80070026
3000a3b5:	mov    eax,DWORD PTR [esi+0x4]
3000a3b8:	push   DWORD PTR [ebp+0x8]
3000a3bb:	lea    ecx,[esi+0x4]
3000a3be:	call   DWORD PTR [eax+0xc]
3000a3c1:	cmp    DWORD PTR [esi+0x64],0x0
3000a3c5:	jl     0x3000a3ca
3000a3c7:	mov    DWORD PTR [esi+0x64],eax
3000a3ca:	test   eax,eax
3000a3cc:	js     0x3000b2d4
3000a3d2:	cmp    eax,ebx
3000a3d4:	je     0x3000b2e1
3000a3da:	pop    edi
3000a3db:	pop    esi
3000a3dc:	pop    ebx
3000a3dd:	pop    ebp
3000a3de:	ret    0x4
3000a3e1:	xor    ebx,ebx
3000a3e3:	inc    ebx
3000a3e4:	lea    esi,[edi+0x8]
3000a3e7:	jmp    0x30009ad7
3000a3ec:	or     esi,0xffffffff
3000a3ef:	jmp    0x300094a1
3000a3f4:	push   ebp
3000a3f5:	mov    ebp,esp
3000a3f7:	add    ecx,0x4
3000a3fa:	mov    eax,DWORD PTR [ecx]
3000a3fc:	pop    ebp
3000a3fd:	jmp    DWORD PTR [eax+0xc]
3000a400:	add    ecx,0x64
3000a403:	call   0x300051ae
3000a408:	neg    eax
3000a40a:	sbb    eax,eax
3000a40c:	and    eax,0x80004005
3000a411:	ret    
3000a412:	add    edi,0x2
3000a415:	jmp    0x3000a5d1
3000a41a:	mov    esi,DWORD PTR [edi]
3000a41c:	lea    eax,[ebp-0xc]
3000a41f:	push   eax
3000a420:	lea    edx,[ebp-0x10]
3000a423:	lea    ecx,[ebp-0x2c]
3000a426:	call   0x30009298
3000a42b:	push   eax
3000a42c:	mov    ecx,edi
3000a42e:	call   DWORD PTR [esi+0x20]
3000a431:	lea    ecx,[ebp-0x2c]
3000a434:	mov    ebx,eax
3000a436:	call   0x300051a4
3000a43b:	test   ebx,ebx
3000a43d:	jns    0x3000a62d
3000a443:	jmp    0x3000a689
3000a448:	push   ebp
3000a449:	mov    ebp,esp
3000a44b:	push   ecx
3000a44c:	push   esi
3000a44d:	mov    esi,DWORD PTR [ebp+0x8]
3000a450:	push   edi
3000a451:	mov    edx,ecx
3000a453:	xor    edi,edi
3000a455:	cmp    BYTE PTR ds:0x300430f1,0x0
3000a45c:	mov    DWORD PTR [ebp-0x4],edx
3000a45f:	jne    0x3002582a
3000a465:	mov    eax,DWORD PTR [esi+0x8]
3000a468:	sub    eax,edi
3000a46a:	jne    0x3000a6fb
3000a470:	mov    ecx,DWORD PTR [esi+0xc]
3000a473:	mov    eax,DWORD PTR [ecx-0xc]
3000a476:	lea    eax,[eax*2+0x2]
3000a47d:	push   eax
3000a47e:	push   ecx
3000a47f:	push   0x1
3000a481:	push   edi
3000a482:	push   DWORD PTR [esi+0x4]
3000a485:	push   DWORD PTR [edx+0x64]
3000a488:	call   DWORD PTR ds:0x30045010
3000a48e:	mov    edi,eax
3000a490:	test   edi,edi
3000a492:	js     0x300258e0
3000a498:	mov    eax,edi
3000a49a:	pop    edi
3000a49b:	pop    esi
3000a49c:	leave  
3000a49d:	ret    0x4
3000a4a0:	push   ebp
3000a4a1:	mov    ebp,esp
3000a4a3:	push   esi
3000a4a4:	push   DWORD PTR [ebp+0x8]
3000a4a7:	mov    esi,ecx
3000a4a9:	call   0x30004256
3000a4ae:	mov    eax,esi
3000a4b0:	pop    esi
3000a4b1:	pop    ebp
3000a4b2:	ret    0x4
3000a4b5:	push   ebp
3000a4b6:	mov    ebp,esp
3000a4b8:	sub    esp,0x2c
3000a4bb:	mov    eax,ds:0x30043100
3000a4c0:	push   ebx
3000a4c1:	push   esi
3000a4c2:	push   DWORD PTR [eax-0xc]
3000a4c5:	mov    esi,DWORD PTR [ebp+0x8]
3000a4c8:	lea    eax,[ebp-0x24]
3000a4cb:	mov    DWORD PTR [ebp-0x1c],ecx
3000a4ce:	push   eax
3000a4cf:	mov    ecx,esi
3000a4d1:	call   0x30008de3
3000a4d6:	push   DWORD PTR ds:0x30043100
3000a4dc:	mov    ecx,eax
3000a4de:	call   0x300091ce
3000a4e3:	test   eax,eax
3000a4e5:	lea    ecx,[ebp-0x24]
3000a4e8:	setne  bl
3000a4eb:	call   0x300051a4
3000a4f0:	test   bl,bl
3000a4f2:	jne    0x30025810
3000a4f8:	push   edi
3000a4f9:	xor    ebx,ebx
3000a4fb:	push   ebx
3000a4fc:	mov    edi,0x30008fc4
3000a501:	push   edi
3000a502:	mov    ecx,esi
3000a504:	call   0x3000923c
3000a509:	inc    eax
3000a50a:	push   eax
3000a50b:	lea    eax,[ebp-0x10]
3000a50e:	push   eax
3000a50f:	mov    ecx,esi
3000a511:	call   0x30008de3
3000a516:	lea    ecx,[ebp-0xc]
3000a519:	call   0x300051c8
3000a51e:	and    DWORD PTR [ebp-0x24],ebx
3000a521:	lea    ecx,[ebp-0x4]
3000a524:	call   0x300051c8
3000a529:	mov    eax,DWORD PTR [esi]
3000a52b:	mov    ecx,DWORD PTR [ebp-0x10]
3000a52e:	mov    eax,DWORD PTR [eax-0xc]
3000a531:	sub    eax,DWORD PTR [ecx-0xc]
3000a534:	push   eax
3000a535:	push   DWORD PTR [ecx-0xc]
3000a538:	lea    eax,[ebp-0x8]
3000a53b:	push   eax
3000a53c:	mov    ecx,esi
3000a53e:	call   0x30008d6e
3000a543:	lea    eax,[ebp-0x24]
3000a546:	push   eax
3000a547:	push   edi
3000a548:	lea    eax,[ebp-0x18]
3000a54b:	push   eax
3000a54c:	lea    ecx,[ebp-0x8]
3000a54f:	call   0x30008ea6
3000a554:	push   eax
3000a555:	lea    ecx,[ebp-0x4]
3000a558:	call   0x300014c1
3000a55d:	mov    esi,DWORD PTR [ebp-0x4]
3000a560:	lea    ecx,[ebp-0x18]
3000a563:	mov    edi,DWORD PTR [esi-0xc]
3000a566:	call   0x300051a4
3000a56b:	lea    ecx,[ebp-0x8]
3000a56e:	call   0x300051a4
3000a573:	test   edi,edi
3000a575:	je     0x3000a689
3000a57b:	push   0x5c
3000a57d:	pop    edi
3000a57e:	lea    ecx,[ebp-0x4]
3000a581:	call   0x30008bef
3000a586:	push   eax
3000a587:	lea    ecx,[ebp-0x14]
3000a58a:	call   0x3000a4a0
3000a58f:	mov    DWORD PTR [ebp-0x28],edi
3000a592:	push   DWORD PTR [esi-0xc]
3000a595:	lea    eax,[ebp-0x28]
3000a598:	push   esi
3000a599:	push   0x1
3000a59b:	push   eax
3000a59c:	lea    eax,[ebp-0x14]
3000a59f:	push   eax
3000a5a0:	call   0x30008fee
3000a5a5:	mov    eax,DWORD PTR [ebp-0x14]
3000a5a8:	add    esp,0x14
3000a5ab:	push   DWORD PTR [eax-0xc]
3000a5ae:	lea    ecx,[ebp-0xc]
3000a5b1:	push   eax
3000a5b2:	call   0x30008b64
3000a5b7:	lea    ecx,[ebp-0x14]
3000a5ba:	call   0x300051a4
3000a5bf:	push   ecx
3000a5c0:	lea    ecx,[ebp-0xc]
3000a5c3:	call   0x30009a83
3000a5c8:	mov    ebx,eax
3000a5ca:	push   0x5c
3000a5cc:	mov    ecx,DWORD PTR [ebx]
3000a5ce:	mov    edi,ecx
3000a5d0:	pop    eax
3000a5d1:	cmp    ax,WORD PTR [edi]
3000a5d4:	je     0x3000a412
3000a5da:	cmp    edi,ecx
3000a5dc:	jne    0x3000a6aa
3000a5e2:	and    DWORD PTR [ebp-0x20],0x0
3000a5e6:	mov    edi,DWORD PTR [ebp-0x1c]
3000a5e9:	xor    eax,eax
3000a5eb:	cmp    BYTE PTR ds:0x300430f1,al
3000a5f1:	lea    ecx,[ebp-0x20]
3000a5f4:	sete   al
3000a5f7:	push   ecx
3000a5f8:	push   ecx
3000a5f9:	dec    eax
3000a5fa:	and    eax,0x19
3000a5fd:	add    eax,0x20006
3000a602:	push   eax
3000a603:	push   DWORD PTR [edi+0x70]
3000a606:	push   ecx
3000a607:	push   DWORD PTR [ebp-0xc]
3000a60a:	lea    ecx,[edi+0x64]
3000a60d:	push   0x80000001
3000a612:	call   0x30009534
3000a617:	mov    ebx,eax
3000a619:	test   ebx,ebx
3000a61b:	jg     0x3002581a
3000a621:	js     0x3000a689
3000a623:	cmp    DWORD PTR [ebp-0x20],0x1
3000a627:	je     0x3000a41a
3000a62d:	mov    eax,DWORD PTR [ebp+0x8]
3000a630:	mov    edx,DWORD PTR [ebp-0x10]
3000a633:	mov    ecx,DWORD PTR [eax]
3000a635:	mov    ecx,DWORD PTR [ecx-0xc]
3000a638:	sub    ecx,DWORD PTR [edx-0xc]
3000a63b:	push   ecx
3000a63c:	push   DWORD PTR [edx-0xc]
3000a63f:	lea    ecx,[ebp-0x8]
3000a642:	push   ecx
3000a643:	mov    ecx,eax
3000a645:	call   0x30008d6e
3000a64a:	lea    eax,[ebp-0x24]
3000a64d:	push   eax
3000a64e:	push   0x30008fc4
3000a653:	lea    eax,[ebp-0x18]
3000a656:	push   eax
3000a657:	lea    ecx,[ebp-0x8]
3000a65a:	call   0x30008ea6
3000a65f:	push   eax
3000a660:	lea    ecx,[ebp-0x4]
3000a663:	call   0x300014c1
3000a668:	mov    esi,DWORD PTR [ebp-0x4]
3000a66b:	lea    ecx,[ebp-0x18]
3000a66e:	mov    edi,DWORD PTR [esi-0xc]
3000a671:	call   0x300051a4
3000a676:	lea    ecx,[ebp-0x8]
3000a679:	call   0x300051a4
3000a67e:	push   0x5c
3000a680:	test   edi,edi
3000a682:	pop    edi
3000a683:	jne    0x3000a57e
3000a689:	lea    ecx,[ebp-0x4]
3000a68c:	call   0x300051a4
3000a691:	lea    ecx,[ebp-0xc]
3000a694:	call   0x300051a4
3000a699:	lea    ecx,[ebp-0x10]
3000a69c:	call   0x300051a4
3000a6a1:	mov    eax,ebx
3000a6a3:	pop    edi
3000a6a4:	pop    esi
3000a6a5:	pop    ebx
3000a6a6:	leave  
3000a6a7:	ret    0x4
3000a6aa:	push   DWORD PTR [ecx-0xc]
3000a6ad:	sub    edi,ecx
3000a6af:	mov    ecx,ebx
3000a6b1:	sar    edi,1
3000a6b3:	call   0x30004286
3000a6b8:	mov    ecx,DWORD PTR [ebx]
3000a6ba:	mov    edx,eax
3000a6bc:	mov    eax,DWORD PTR [ecx-0xc]
3000a6bf:	mov    esi,eax
3000a6c1:	sub    esi,edi
3000a6c3:	lea    eax,[eax*2+0x2]
3000a6ca:	lea    ecx,[esi*2+0x2]
3000a6d1:	push   ecx
3000a6d2:	lea    ecx,[edx+edi*2]
3000a6d5:	push   ecx
3000a6d6:	push   eax
3000a6d7:	push   edx
3000a6d8:	call   0x30006cea
3000a6dd:	add    esp,0x10
3000a6e0:	mov    ecx,ebx
3000a6e2:	push   esi
3000a6e3:	call   0x30004147
3000a6e8:	jmp    0x3000a5e2
3000a6ed:	lea    ecx,[esp+0x44]
3000a6f1:	call   0x30004564
3000a6f6:	jmp    0x3000a080
3000a6fb:	dec    eax
3000a6fc:	je     0x300258ca
3000a702:	dec    eax
3000a703:	je     0x3000bc07
3000a709:	dec    eax
3000a70a:	je     0x3000b63a
3000a710:	dec    eax
3000a711:	jne    0x300258b6
3000a717:	push   0x4
3000a719:	lea    eax,[esi+0x1c]
3000a71c:	push   eax
3000a71d:	push   0x4
3000a71f:	jmp    0x3000a481
3000a724:	push   ebp
3000a725:	mov    ebp,esp
3000a727:	push   esi
3000a728:	mov    esi,DWORD PTR [ebp+0x10]
3000a72b:	mov    ecx,esi
3000a72d:	call   0x30008bef
3000a732:	mov    ecx,DWORD PTR [ebp+0x8]
3000a735:	push   eax
3000a736:	call   0x3000a4a0
3000a73b:	mov    eax,DWORD PTR [esi]
3000a73d:	push   DWORD PTR [eax-0xc]
3000a740:	push   eax
3000a741:	push   DWORD PTR [ebp+0xc]
3000a744:	call   0x300042e4
3000a749:	pop    ecx
3000a74a:	push   eax
3000a74b:	push   DWORD PTR [ebp+0xc]
3000a74e:	push   DWORD PTR [ebp+0x8]
3000a751:	call   0x30008fee
3000a756:	mov    eax,DWORD PTR [ebp+0x8]
3000a759:	add    esp,0x14
3000a75c:	pop    esi
3000a75d:	pop    ebp
3000a75e:	ret    0xc
3000a761:	push   ebp
3000a762:	mov    ebp,esp
3000a764:	push   ecx
3000a765:	push   ecx
3000a766:	push   ebx
3000a767:	push   esi
3000a768:	push   edi
3000a769:	mov    edi,ecx
3000a76b:	lea    ecx,[ebp-0x4]
3000a76e:	call   0x300051c8
3000a773:	mov    esi,DWORD PTR [ebp+0x8]
3000a776:	push   0x6
3000a778:	lea    eax,[ebp-0x8]
3000a77b:	push   eax
3000a77c:	mov    ecx,esi
3000a77e:	call   0x30008de3
3000a783:	push   0x3000a84c
3000a788:	mov    ecx,eax
3000a78a:	call   0x300091ce
3000a78f:	mov    ebx,eax
3000a791:	neg    ebx
3000a793:	lea    ecx,[ebp-0x8]
3000a796:	sbb    bl,bl
3000a798:	call   0x300051a4
3000a79d:	mov    ecx,esi
3000a79f:	inc    bl
3000a7a1:	je     0x3002681d
3000a7a7:	mov    eax,DWORD PTR [esi]
3000a7a9:	mov    eax,DWORD PTR [eax-0xc]
3000a7ac:	sub    eax,0x6
3000a7af:	push   eax
3000a7b0:	push   0x6
3000a7b2:	lea    eax,[ebp+0x8]
3000a7b5:	push   eax
3000a7b6:	call   0x30008d6e
3000a7bb:	lea    ecx,[ebp+0x8]
3000a7be:	call   0x30008e3c
3000a7c3:	push   eax
3000a7c4:	lea    ecx,[ebp-0x4]
3000a7c7:	call   0x300014c1
3000a7cc:	lea    ecx,[ebp+0x8]
3000a7cf:	call   0x300051a4
3000a7d4:	push   0x4
3000a7d6:	mov    eax,DWORD PTR [ebp-0x4]
3000a7d9:	pop    ebx
3000a7da:	lea    ecx,[ebx+ebx*1]
3000a7dd:	cmp    DWORD PTR [eax-0xc],ecx
3000a7e0:	jg     0x3002687c
3000a7e6:	lea    eax,[ebp-0x4]
3000a7e9:	push   eax
3000a7ea:	push   0x30006cbc
3000a7ef:	lea    eax,[ebp+0x8]
3000a7f2:	push   eax
3000a7f3:	call   0x3000a724
3000a7f8:	push   eax
3000a7f9:	lea    ecx,[ebp-0x4]
3000a7fc:	call   0x300014c1
3000a801:	lea    ecx,[ebp+0x8]
3000a804:	call   0x300051a4
3000a809:	push   0x4
3000a80b:	pop    ecx
3000a80c:	cmp    ebx,ecx
3000a80e:	jne    0x30026885
3000a814:	push   DWORD PTR [ebp+0x10]
3000a817:	mov    eax,DWORD PTR [ebp+0xc]
3000a81a:	push   0x1
3000a81c:	push   DWORD PTR [ebp-0x4]
3000a81f:	mov    DWORD PTR [eax],ecx
3000a821:	call   DWORD PTR ds:0x30045654
3000a827:	mov    esi,eax
3000a829:	neg    esi
3000a82b:	sbb    esi,esi
3000a82d:	and    esi,0x7fffbffb
3000a833:	add    esi,0x80004005
3000a839:	lea    ecx,[ebp-0x4]
3000a83c:	call   0x300051a4
3000a841:	pop    edi
3000a842:	mov    eax,esi
3000a844:	pop    esi
3000a845:	pop    ebx
3000a846:	leave  
3000a847:	ret    0x10
3000a84a:	nop
3000a84b:	nop
3000a84c:	add    BYTE PTR fs:[edi+0x0],dh
3000a850:	outs   dx,DWORD PTR ds:[esi]
3000a851:	add    BYTE PTR [edx+0x0],dh
3000a854:	add    BYTE PTR fs:[edx],bh
3000a857:	add    BYTE PTR [eax],al
3000a859:	add    BYTE PTR [ebp-0x75],dl
3000a85c:	in     al,dx
3000a85d:	push   esi
3000a85e:	mov    esi,ecx
3000a860:	lea    ecx,[esi+0x64]
3000a863:	call   0x300051ae
3000a868:	mov    ecx,esi
3000a86a:	call   0x3000ae91
3000a86f:	test   BYTE PTR [ebp+0x8],0x1
3000a873:	je     0x3000a87d
3000a875:	push   esi
3000a876:	call   DWORD PTR ds:0x300452ac
3000a87c:	pop    ecx
3000a87d:	mov    eax,esi
3000a87f:	pop    esi
3000a880:	pop    ebp
3000a881:	ret    0x4
3000a884:	lea    eax,[ebx-0x10]
3000a887:	push   eax
3000a888:	call   0x30004306
3000a88d:	pop    ecx
3000a88e:	lea    ecx,[eax+0x10]
3000a891:	mov    eax,DWORD PTR [ebp+0x8]
3000a894:	mov    DWORD PTR [eax],ecx
3000a896:	jmp    0x30008ddc
3000a89b:	push   ebp
3000a89c:	mov    ebp,esp
3000a89e:	mov    ecx,DWORD PTR [ebp+0x8]
3000a8a1:	test   ecx,ecx
3000a8a3:	je     0x3000a8b4
3000a8a5:	mov    edx,DWORD PTR [ebp+0xc]
3000a8a8:	mov    al,BYTE PTR [edx]
3000a8aa:	dec    ecx
3000a8ab:	inc    edx
3000a8ac:	test   al,al
3000a8ae:	je     0x3000a8ba
3000a8b0:	test   ecx,ecx
3000a8b2:	jne    0x3000a8a8
3000a8b4:	xor    al,al
3000a8b6:	pop    ebp
3000a8b7:	ret    0x8
3000a8ba:	mov    al,0x1
3000a8bc:	jmp    0x3000a8b6
3000a8be:	push   ebp
3000a8bf:	mov    ebp,esp
3000a8c1:	push   ecx
3000a8c2:	push   ecx
3000a8c3:	push   esi
3000a8c4:	xor    esi,esi
3000a8c6:	cmp    BYTE PTR ds:0x300430f1,0x0
3000a8cd:	push   edi
3000a8ce:	mov    edi,ecx
3000a8d0:	jne    0x30023972
3000a8d6:	push   0x23f1
3000a8db:	call   0x3000532c
3000a8e0:	mov    eax,DWORD PTR [edi]
3000a8e2:	mov    ecx,edi
3000a8e4:	call   DWORD PTR [eax+0x24]
3000a8e7:	test   al,al
3000a8e9:	jne    0x3000a8fd
3000a8eb:	lea    ecx,[edi+0x48]
3000a8ee:	call   0x300162bb
3000a8f3:	mov    esi,eax
3000a8f5:	test   esi,esi
3000a8f7:	js     0x3000a98e
3000a8fd:	mov    eax,DWORD PTR [edi]
3000a8ff:	push   ebx
3000a900:	mov    ecx,edi
3000a902:	call   DWORD PTR [eax+0x30]
3000a905:	mov    eax,DWORD PTR [edi]
3000a907:	mov    ecx,edi
3000a909:	call   DWORD PTR [eax+0x38]
3000a90c:	mov    ebx,eax
3000a90e:	mov    eax,DWORD PTR [ebp+0x8]
3000a911:	mov    ecx,DWORD PTR [eax+0xc]
3000a914:	mov    DWORD PTR [ebp-0x8],ecx
3000a917:	test   ecx,ecx
3000a919:	je     0x3000a967
3000a91b:	lea    eax,[ebp-0x8]
3000a91e:	push   eax
3000a91f:	call   0x30008fa7
3000a924:	push   eax
3000a925:	lea    ecx,[ebp-0x4]
3000a928:	call   0x30004340
3000a92d:	lea    eax,[ebp-0x4]
3000a930:	push   eax
3000a931:	push   ebx
3000a932:	mov    ecx,edi
3000a934:	call   0x3000adc5
3000a939:	mov    esi,eax
3000a93b:	test   esi,esi
3000a93d:	js     0x300239a6
3000a943:	lea    eax,[ebp-0x4]
3000a946:	push   eax
3000a947:	push   ebx
3000a948:	mov    ecx,edi
3000a94a:	call   0x3000aab1
3000a94f:	mov    esi,eax
3000a951:	test   esi,esi
3000a953:	js     0x3002398a
3000a959:	lea    ecx,[ebp-0x4]
3000a95c:	call   0x300051a4
3000a961:	cmp    DWORD PTR [ebp-0x8],0x0
3000a965:	jne    0x3000a91b
3000a967:	push   0x23f2
3000a96c:	call   0x3000532c
3000a971:	test   esi,esi
3000a973:	js     0x3000a981
3000a975:	mov    eax,DWORD PTR [edi]
3000a977:	push   DWORD PTR [ebp+0x8]
3000a97a:	mov    ecx,edi
3000a97c:	call   DWORD PTR [eax+0x34]
3000a97f:	mov    esi,eax
3000a981:	test   ebx,ebx
3000a983:	je     0x3000a98d
3000a985:	mov    eax,DWORD PTR [ebx]
3000a987:	push   0x1
3000a989:	mov    ecx,ebx
3000a98b:	call   DWORD PTR [eax]
3000a98d:	pop    ebx
3000a98e:	pop    edi
3000a98f:	mov    eax,esi
3000a991:	pop    esi
3000a992:	leave  
3000a993:	ret    0x4
3000a996:	mov    DWORD PTR [ebp-0x10],0x1
3000a99d:	lea    eax,[ebp-0x8]
3000a9a0:	lea    ecx,[edi+0x8]
3000a9a3:	push   eax
3000a9a4:	call   0x30009c23
3000a9a9:	test   eax,eax
3000a9ab:	js     0x3000b700
3000a9b1:	lea    ecx,[ebp-0x8]
3000a9b4:	call   0x30008e7a
3000a9b9:	xor    eax,eax
3000a9bb:	inc    eax
3000a9bc:	push   eax
3000a9bd:	or     esi,eax
3000a9bf:	push   ebx
3000a9c0:	lea    eax,[ebp-0x14]
3000a9c3:	push   eax
3000a9c4:	lea    ecx,[ebp-0x8]
3000a9c7:	mov    DWORD PTR [ebp-0xc],esi
3000a9ca:	call   0x30008d6e
3000a9cf:	push   0x30009cc8
3000a9d4:	mov    ecx,eax
3000a9d6:	call   0x300091ce
3000a9db:	lea    esi,[edi+0x8]
3000a9de:	test   eax,eax
3000a9e0:	jne    0x3000b6d6
3000a9e6:	mov    BYTE PTR [ebp-0x1],bl
3000a9e9:	mov    ecx,DWORD PTR [ebp-0xc]
3000a9ec:	test   cl,0x1
3000a9ef:	je     0x3000aa02
3000a9f1:	and    ecx,0xfffffffe
3000a9f4:	mov    DWORD PTR [ebp-0xc],ecx
3000a9f7:	lea    ecx,[ebp-0x14]
3000a9fa:	call   0x300051a4
3000a9ff:	mov    ecx,DWORD PTR [ebp-0xc]
3000aa02:	cmp    BYTE PTR [ebp-0x1],bl
3000aa05:	jne    0x3000b6eb
3000aa0b:	mov    eax,DWORD PTR [esi+0x8]
3000aa0e:	cmp    eax,DWORD PTR [esi+0xc]
3000aa11:	jae    0x3002675b
3000aa17:	mov    BYTE PTR [ebp-0x10],bl
3000aa1a:	mov    eax,DWORD PTR [ebp-0xc]
3000aa1d:	test   al,0x4
3000aa1f:	jne    0x300267b9
3000aa25:	test   al,0x2
3000aa27:	jne    0x300267cf
3000aa2d:	cmp    BYTE PTR [ebp-0x10],bl
3000aa30:	jne    0x300267dc
3000aa36:	mov    eax,DWORD PTR [edi]
3000aa38:	lea    esi,[edi+0x20]
3000aa3b:	push   esi
3000aa3c:	lea    ecx,[ebp-0x8]
3000aa3f:	push   ecx
3000aa40:	mov    ecx,edi
3000aa42:	call   DWORD PTR [eax+0x10]
3000aa45:	test   eax,eax
3000aa47:	js     0x3000b700
3000aa4d:	push   esi
3000aa4e:	mov    esi,DWORD PTR [ebp+0x8]
3000aa51:	mov    ecx,esi
3000aa53:	call   0x300014c1
3000aa58:	lea    ecx,[esi+0x4]
3000aa5b:	call   0x30004564
3000aa60:	jmp    0x30009c12
3000aa65:	push   ebp
3000aa66:	mov    ebp,esp
3000aa68:	push   ebx
3000aa69:	push   esi
3000aa6a:	push   edi
3000aa6b:	mov    edi,ecx
3000aa6d:	lea    ecx,[edi+0x8]
3000aa70:	call   0x3000aed6
3000aa75:	lea    ebx,[edi+0xc]
3000aa78:	push   ebx
3000aa79:	push   DWORD PTR [ebp+0x8]
3000aa7c:	call   0x3000afe9
3000aa81:	mov    edx,eax
3000aa83:	test   edx,edx
3000aa85:	js     0x3000aaa2
3000aa87:	mov    ecx,DWORD PTR [ebx]
3000aa89:	xor    edx,edx
3000aa8b:	lea    ebx,[ecx+0x2]
3000aa8e:	mov    ax,WORD PTR [ecx]
3000aa91:	add    ecx,0x2
3000aa94:	cmp    ax,dx
3000aa97:	jne    0x3000aa8e
3000aa99:	sub    ecx,ebx
3000aa9b:	sar    ecx,1
3000aa9d:	mov    DWORD PTR [edi+0x14],ecx
3000aaa0:	test   edx,edx
3000aaa2:	setns  cl
3000aaa5:	mov    BYTE PTR [edi+0x24],cl
3000aaa8:	pop    edi
3000aaa9:	pop    esi
3000aaaa:	mov    eax,edx
3000aaac:	pop    ebx
3000aaad:	pop    ebp
3000aaae:	ret    0x4
3000aab1:	push   ebp
3000aab2:	mov    ebp,esp
3000aab4:	sub    esp,0x10
3000aab7:	push   edi
3000aab8:	mov    edi,DWORD PTR [ebp+0xc]
3000aabb:	mov    DWORD PTR [ebp-0xc],ecx
3000aabe:	push   DWORD PTR [edi]
3000aac0:	lea    ecx,[ebp-0x8]
3000aac3:	call   0x300089ae
3000aac8:	cmp    BYTE PTR ds:0x300430f1,0x0
3000aacf:	jne    0x30023aae
3000aad5:	push   ebx
3000aad6:	push   esi
3000aad7:	push   0x30009708
3000aadc:	lea    eax,[ebp-0x10]
3000aadf:	xor    esi,esi
3000aae1:	push   eax
3000aae2:	lea    ecx,[ebp-0x8]
3000aae5:	mov    DWORD PTR [ebp-0x4],esi
3000aae8:	call   0x300096ac
3000aaed:	mov    ecx,eax
3000aaef:	call   0x3000927b
3000aaf4:	mov    ebx,eax
3000aaf6:	neg    ebx
3000aaf8:	lea    ecx,[ebp-0x10]
3000aafb:	sbb    bl,bl
3000aafd:	call   0x300051a4
3000ab02:	inc    bl
3000ab04:	je     0x30023ac4
3000ab0a:	push   0x74
3000ab0c:	call   0x30003fee
3000ab11:	mov    edi,eax
3000ab13:	pop    ecx
3000ab14:	test   edi,edi
3000ab16:	je     0x30023b2a
3000ab1c:	mov    eax,DWORD PTR [ebp-0xc]
3000ab1f:	mov    ecx,eax
3000ab21:	mov    edx,DWORD PTR [eax]
3000ab23:	call   DWORD PTR [edx+0xc]
3000ab26:	push   DWORD PTR [ebp+0x8]
3000ab29:	mov    ecx,edi
3000ab2b:	mov    esi,eax
3000ab2d:	call   0x3000b276
3000ab32:	xor    eax,eax
3000ab34:	mov    DWORD PTR [edi],0x3000aba8
3000ab3a:	mov    DWORD PTR [edi+0x64],eax
3000ab3d:	mov    DWORD PTR [edi+0x68],eax
3000ab40:	mov    DWORD PTR [edi+0x6c],eax
3000ab43:	mov    DWORD PTR [edi+0x70],esi
3000ab46:	mov    esi,edi
3000ab48:	mov    DWORD PTR [ebp-0x4],esi
3000ab4b:	mov    ecx,DWORD PTR [ebp-0xc]
3000ab4e:	lea    edx,[ebp-0x8]
3000ab51:	mov    eax,DWORD PTR [ecx]
3000ab53:	push   edx
3000ab54:	push   esi
3000ab55:	call   DWORD PTR [eax+0x2c]
3000ab58:	mov    edi,eax
3000ab5a:	test   edi,edi
3000ab5c:	js     0x3000ab85
3000ab5e:	mov    ebx,DWORD PTR [ebp+0xc]
3000ab61:	mov    ecx,esi
3000ab63:	push   DWORD PTR [ebx]
3000ab65:	call   0x3000ae78
3000ab6a:	mov    edi,eax
3000ab6c:	test   edi,edi
3000ab6e:	js     0x30023b37
3000ab74:	mov    ecx,esi
3000ab76:	call   0x30009f91
3000ab7b:	mov    edi,eax
3000ab7d:	test   edi,edi
3000ab7f:	js     0x30023b4a
3000ab85:	mov    eax,DWORD PTR [ebp-0x4]
3000ab88:	pop    esi
3000ab89:	pop    ebx
3000ab8a:	test   eax,eax
3000ab8c:	je     0x3000ab96
3000ab8e:	mov    edx,DWORD PTR [eax]
3000ab90:	push   0x1
3000ab92:	mov    ecx,eax
3000ab94:	call   DWORD PTR [edx]
3000ab96:	lea    ecx,[ebp-0x8]
3000ab99:	call   0x300051a4
3000ab9e:	mov    eax,edi
3000aba0:	pop    edi
3000aba1:	leave  
3000aba2:	ret    0x8
3000aba5:	nop
3000aba6:	nop
3000aba7:	nop
3000aba8:	pop    edx
3000aba9:	test   al,0x0
3000abab:	xor    BYTE PTR [esi+ecx*2-0x5c0bcffd],cl
3000abb2:	add    BYTE PTR [eax],dh
3000abb4:	mov    ch,0xa4
3000abb6:	add    BYTE PTR [eax],dh
3000abb8:	add    BYTE PTR [eax+eax*1+0xa44830],ah
3000abbf:	xor    al,bl
3000abc1:	mov    eax,ds:0xa2473000
3000abc6:	add    BYTE PTR [eax],dh
3000abc8:	rcl    BYTE PTR [edx+0x0],0x30
3000abcc:	push   ebp
3000abcd:	mov    ebp,esp
3000abcf:	mov    eax,DWORD PTR [ebp+0x10]
3000abd2:	test   eax,eax
3000abd4:	je     0x3000b6cc
3000abda:	mov    ecx,DWORD PTR [ebp+0xc]
3000abdd:	test   ecx,ecx
3000abdf:	je     0x3000b6cc
3000abe5:	and    DWORD PTR [eax],0x0
3000abe8:	cmp    DWORD PTR [ebp+0x8],0x2
3000abec:	mov    edx,0x80004005
3000abf1:	jb     0x3000ac25
3000abf3:	push   esi
3000abf4:	movzx  esi,WORD PTR [ecx]
3000abf7:	push   edi
3000abf8:	mov    edi,0xfeff
3000abfd:	cmp    di,si
3000ac00:	je     0x3000b6c1
3000ac06:	mov    edi,0xfffe
3000ac0b:	cmp    di,si
3000ac0e:	je     0x30028aa0
3000ac14:	cmp    DWORD PTR [ebp+0x8],0x3
3000ac18:	jb     0x3000ac23
3000ac1a:	cmp    BYTE PTR [ecx],0xef
3000ac1d:	je     0x3000b727
3000ac23:	pop    edi
3000ac24:	pop    esi
3000ac25:	mov    eax,edx
3000ac27:	pop    ebp
3000ac28:	ret    0xc
3000ac2b:	push   DWORD PTR [esi+0x4]
3000ac2e:	call   DWORD PTR ds:0x300454e8
3000ac34:	mov    DWORD PTR [esi+0x4],edi
3000ac37:	jmp    0x3000aee5
3000ac3c:	and    al,0x0
3000ac3e:	push   eax
3000ac3f:	add    BYTE PTR [ecx+0x0],ah
3000ac42:	arpl   WORD PTR [eax],ax
3000ac44:	imul   eax,DWORD PTR [eax],0x61
3000ac47:	add    BYTE PTR [edi+0x0],ah
3000ac4a:	add    BYTE PTR gs:[esi+0x0],al
3000ac4e:	outs   dx,DWORD PTR ds:[esi]
3000ac4f:	add    BYTE PTR [eax+eax*1+0x64],ch
3000ac53:	add    BYTE PTR [ebp+0x0],ah
3000ac56:	jb     0x3000ac58
3000ac58:	and    al,0x0
3000ac5a:	add    BYTE PTR [eax],al
3000ac5c:	and    al,0x0
3000ac5e:	push   edx
3000ac5f:	add    BYTE PTR [edi+0x0],ch
3000ac62:	outs   dx,DWORD PTR ds:[esi]
3000ac63:	add    BYTE PTR [eax+eax*1+0x4b],dh
3000ac67:	add    BYTE PTR [ebp+0x0],ah
3000ac6a:	jns    0x3000ac6c
3000ac6c:	and    al,0x0
3000ac6e:	add    BYTE PTR [eax],al
3000ac70:	push   ebp
3000ac71:	mov    ebp,esp
3000ac73:	push   ecx
3000ac74:	push   ebx
3000ac75:	push   0x300095a8
3000ac7a:	push   0xc
3000ac7c:	lea    eax,[ebp-0x4]
3000ac7f:	push   eax
3000ac80:	call   0x30009162
3000ac85:	mov    ecx,eax
3000ac87:	call   0x3000927b
3000ac8c:	mov    ebx,eax
3000ac8e:	neg    ebx
3000ac90:	sbb    bl,bl
3000ac92:	lea    ecx,[ebp-0x4]
3000ac95:	inc    bl
3000ac97:	call   0x300051a4
3000ac9c:	mov    al,bl
3000ac9e:	pop    ebx
3000ac9f:	leave  
3000aca0:	ret    
3000aca1:	push   ebp
3000aca2:	mov    ebp,esp
3000aca4:	push   ecx
3000aca5:	push   ebx
3000aca6:	push   esi
3000aca7:	mov    esi,ecx
3000aca9:	mov    ecx,DWORD PTR [ebp+0x8]
3000acac:	push   edi
3000acad:	push   DWORD PTR [esi+0x40]
3000acb0:	call   0x300098b1
3000acb5:	mov    ebx,DWORD PTR [ebp+0xc]
3000acb8:	mov    eax,DWORD PTR [ebx]
3000acba:	cmp    DWORD PTR [eax-0xc],0x0
3000acbe:	je     0x3000acfe
3000acc0:	push   ebx
3000acc1:	lea    ecx,[ebp+0xc]
3000acc4:	call   0x30004340
3000acc9:	lea    ecx,[ebp+0xc]
3000accc:	call   0x300089c3
3000acd1:	push   0x3000ac3c
3000acd6:	lea    ecx,[ebp-0x4]
3000acd9:	call   0x3000437e
3000acde:	mov    ecx,DWORD PTR [ebp+0x8]
3000ace1:	lea    eax,[ebp+0xc]
3000ace4:	push   eax
3000ace5:	lea    eax,[ebp-0x4]
3000ace8:	push   eax
3000ace9:	call   0x3000979d
3000acee:	lea    ecx,[ebp-0x4]
3000acf1:	call   0x300051a4
3000acf6:	lea    ecx,[ebp+0xc]
3000acf9:	call   0x300051a4
3000acfe:	lea    edi,[esi+0x3c]
3000ad01:	mov    eax,DWORD PTR [edi]
3000ad03:	cmp    DWORD PTR [eax-0xc],0x0
3000ad07:	je     0x3000ad72
3000ad09:	mov    ecx,ebx
3000ad0b:	call   0x3000ac70
3000ad10:	test   al,al
3000ad12:	lea    eax,[esi+0x50]
3000ad15:	jne    0x3000ad1a
3000ad17:	lea    eax,[esi+0x4c]
3000ad1a:	push   0x3000ac5c
3000ad1f:	lea    ecx,[ebp-0x4]
3000ad22:	mov    DWORD PTR [ebp+0xc],eax
3000ad25:	call   0x3000437e
3000ad2a:	push   DWORD PTR [ebp+0xc]
3000ad2d:	mov    ecx,DWORD PTR [ebp+0x8]
3000ad30:	lea    eax,[ebp-0x4]
3000ad33:	push   eax
3000ad34:	call   0x3000979d
3000ad39:	lea    ecx,[ebp-0x4]
3000ad3c:	call   0x300051a4
3000ad41:	mov    ecx,ebx
3000ad43:	call   0x3000ac70
3000ad48:	test   al,al
3000ad4a:	jne    0x30023ceb
3000ad50:	push   0x3000ad7c
3000ad55:	lea    ecx,[ebp+0xc]
3000ad58:	call   0x3000437e
3000ad5d:	mov    ecx,DWORD PTR [ebp+0x8]
3000ad60:	push   edi
3000ad61:	lea    eax,[ebp+0xc]
3000ad64:	push   eax
3000ad65:	call   0x3000979d
3000ad6a:	lea    ecx,[ebp+0xc]
3000ad6d:	call   0x300051a4
3000ad72:	pop    edi
3000ad73:	pop    esi
3000ad74:	pop    ebx
3000ad75:	leave  
3000ad76:	ret    0x8
3000ad79:	nop
3000ad7a:	nop
3000ad7b:	nop
3000ad7c:	and    al,0x0
3000ad7e:	dec    eax
3000ad7f:	add    BYTE PTR [ecx+0x0],ch
3000ad82:	jbe    0x3000ad84
3000ad84:	add    BYTE PTR gs:[eax+eax*1+0x65],ch
3000ad89:	add    BYTE PTR [ebx+0x0],dh
3000ad8c:	jae    0x3000ad8e
3000ad8e:	push   edx
3000ad8f:	add    BYTE PTR [edi+0x0],ch
3000ad92:	outs   dx,DWORD PTR ds:[esi]
3000ad93:	add    BYTE PTR [eax+eax*1+0x4b],dh
3000ad97:	add    BYTE PTR [ebp+0x0],ah
3000ad9a:	jns    0x3000ad9c
3000ad9c:	and    al,0x0
3000ad9e:	add    BYTE PTR [eax],al
3000ada0:	push   ebp
3000ada1:	mov    ebp,esp
3000ada3:	mov    edx,DWORD PTR [ebp+0xc]
3000ada6:	mov    eax,DWORD PTR [edx]
3000ada8:	cmp    DWORD PTR [eax-0xc],0x0
3000adac:	je     0x30023ce1
3000adb2:	mov    eax,DWORD PTR [ebp+0x8]
3000adb5:	push   edx
3000adb6:	add    eax,0x2c
3000adb9:	push   eax
3000adba:	call   0x3000aca1
3000adbf:	xor    eax,eax
3000adc1:	pop    ebp
3000adc2:	ret    0x8
3000adc5:	push   ebp
3000adc6:	mov    ebp,esp
3000adc8:	push   ecx
3000adc9:	push   esi
3000adca:	push   edi
3000adcb:	push   0x68
3000adcd:	mov    edi,ecx
3000adcf:	call   0x30003fee
3000add4:	mov    esi,eax
3000add6:	pop    ecx
3000add7:	test   esi,esi
3000add9:	je     0x3000ae54
3000addb:	push   DWORD PTR [ebp+0x8]
3000adde:	mov    ecx,esi
3000ade0:	call   0x3000b276
3000ade5:	and    DWORD PTR [esi+0x64],0x0
3000ade9:	mov    DWORD PTR [esi],0x3000ae58
3000adef:	push   ebx
3000adf0:	mov    ebx,DWORD PTR [ebp+0xc]
3000adf3:	lea    ecx,[ebp-0x4]
3000adf6:	push   DWORD PTR [ebx]
3000adf8:	call   0x300089ae
3000adfd:	mov    eax,DWORD PTR [edi]
3000adff:	lea    ecx,[ebp-0x4]
3000ae02:	push   ecx
3000ae03:	push   esi
3000ae04:	mov    ecx,edi
3000ae06:	call   DWORD PTR [eax+0x2c]
3000ae09:	push   DWORD PTR [ebx]
3000ae0b:	mov    edi,eax
3000ae0d:	test   edi,edi
3000ae0f:	js     0x30023d6a
3000ae15:	mov    ecx,esi
3000ae17:	call   0x3000ae78
3000ae1c:	mov    edi,eax
3000ae1e:	test   edi,edi
3000ae20:	js     0x30023d71
3000ae26:	mov    ecx,esi
3000ae28:	call   0x30009f91
3000ae2d:	mov    edi,eax
3000ae2f:	test   edi,edi
3000ae31:	js     0x30023d78
3000ae37:	lea    ecx,[ebp-0x4]
3000ae3a:	call   0x300051a4
3000ae3f:	pop    ebx
3000ae40:	test   esi,esi
3000ae42:	je     0x3000ae4c
3000ae44:	mov    eax,DWORD PTR [esi]
3000ae46:	push   0x1
3000ae48:	mov    ecx,esi
3000ae4a:	call   DWORD PTR [eax]
3000ae4c:	mov    eax,edi
3000ae4e:	pop    edi
3000ae4f:	pop    esi
3000ae50:	leave  
3000ae51:	ret    0x8
3000ae54:	xor    esi,esi
3000ae56:	jmp    0x3000adef
3000ae58:	jmp    0xbc30af0f
3000ae5d:	dec    esi
3000ae5e:	add    esi,DWORD PTR [eax]
3000ae60:	test   al,0xa3
3000ae62:	add    BYTE PTR [eax],dh
3000ae64:	rcl    BYTE PTR [edx+0x0],0x30
3000ae68:	cs xchg edx,eax
3000ae6a:	add    BYTE PTR [eax],dh
3000ae6c:	rcl    BYTE PTR [edx+0x0],0x30
3000ae70:	fsub   DWORD PTR [ecx-0x5db8d000]
3000ae76:	add    BYTE PTR [eax],dh
3000ae78:	push   ebp
3000ae79:	mov    ebp,esp
3000ae7b:	cmp    BYTE PTR ds:0x300430f1,0x0
3000ae82:	jne    0x30024a32
3000ae88:	add    ecx,0x4
3000ae8b:	mov    eax,DWORD PTR [ecx]
3000ae8d:	pop    ebp
3000ae8e:	jmp    DWORD PTR [eax+0x4]
3000ae91:	push   esi
3000ae92:	mov    esi,ecx
3000ae94:	push   edi
3000ae95:	lea    edi,[esi+0x4]
3000ae98:	mov    ecx,edi
3000ae9a:	mov    eax,DWORD PTR [edi]
3000ae9c:	mov    DWORD PTR [esi],0x300052a0
3000aea2:	call   DWORD PTR [eax+0x8]
3000aea5:	lea    ecx,[esi+0x30]
3000aea8:	call   0x30008aad
3000aead:	mov    ecx,edi
3000aeaf:	pop    edi
3000aeb0:	pop    esi
3000aeb1:	push   esi
3000aeb2:	mov    esi,ecx
3000aeb4:	mov    DWORD PTR [esi],0x30009cd8
3000aeba:	call   0x3000aecd
3000aebf:	lea    ecx,[esi+0x20]
3000aec2:	call   0x300051a4
3000aec7:	lea    ecx,[esi+0x8]
3000aeca:	pop    esi
3000aecb:	jmp    0x3000aefb
3000aecd:	mov    BYTE PTR [ecx+0x24],0x0
3000aed1:	add    ecx,0x8
3000aed4:	jmp    0x3000aed6
3000aed6:	push   esi
3000aed7:	push   edi
3000aed8:	mov    esi,ecx
3000aeda:	xor    edi,edi
3000aedc:	cmp    DWORD PTR [esi+0x4],edi
3000aedf:	jne    0x3000ac2b
3000aee5:	lea    ecx,[esi+0x14]
3000aee8:	mov    DWORD PTR [esi+0x10],edi
3000aeeb:	call   0x30004564
3000aef0:	mov    DWORD PTR [esi+0xc],edi
3000aef3:	mov    DWORD PTR [esi+0x8],edi
3000aef6:	pop    edi
3000aef7:	xor    eax,eax
3000aef9:	pop    esi
3000aefa:	ret    
3000aefb:	push   esi
3000aefc:	mov    esi,ecx
3000aefe:	mov    DWORD PTR [esi],0x3000b2d0
3000af04:	call   0x3000aed6
3000af09:	lea    ecx,[esi+0x14]
3000af0c:	pop    esi
3000af0d:	jmp    0x300051a4
3000af12:	push   ebp
3000af13:	mov    ebp,esp
3000af15:	push   ebx
3000af16:	mov    ebx,DWORD PTR [ebp+0x1c]
3000af19:	test   ebx,ebx
3000af1b:	je     0x30028c51
3000af21:	push   esi
3000af22:	push   edi
3000af23:	mov    edi,DWORD PTR [ebp+0x10]
3000af26:	xor    esi,esi
3000af28:	mov    DWORD PTR [ebp+0x1c],esi
3000af2b:	test   edi,edi
3000af2d:	je     0x30028c5b
3000af33:	mov    eax,DWORD PTR [ebp+0x14]
3000af36:	test   eax,eax
3000af38:	je     0x30028c6c
3000af3e:	cmp    DWORD PTR [ebp+0xc],esi
3000af41:	jne    0x30028c76
3000af47:	mov    ecx,DWORD PTR [ebp+0x18]
3000af4a:	mov    DWORD PTR [ebp+0x1c],ecx
3000af4d:	mov    edx,DWORD PTR [ebp+0x8]
3000af50:	and    edx,0xffff
3000af56:	mov    DWORD PTR [ebp+0x10],edx
3000af59:	cmp    edx,0x4b0
3000af5f:	jae    0x3000b66e
3000af65:	cmp    edi,0x1
3000af68:	jbe    0x3000af93
3000af6a:	test   DWORD PTR [ebp+0x8],0x8000000
3000af71:	jne    0x3000af93
3000af73:	lea    ecx,[edi-0x1]
3000af76:	mov    edx,0x1f4
3000af7b:	cmp    ecx,edx
3000af7d:	jb     0x3000af81
3000af7f:	mov    ecx,edx
3000af81:	push   eax
3000af82:	push   ecx
3000af83:	call   0x3000a89b
3000af88:	test   al,al
3000af8a:	jne    0x30028cbf
3000af90:	mov    edx,DWORD PTR [ebp+0x10]
3000af93:	mov    eax,DWORD PTR [ebp+0x1c]
3000af96:	cmp    eax,DWORD PTR [ebp+0x18]
3000af99:	ja     0x3000b809
3000af9f:	test   edx,edx
3000afa1:	jne    0x3000afae
3000afa3:	call   DWORD PTR ds:0x300450b4
3000afa9:	mov    edx,eax
3000afab:	mov    DWORD PTR [ebp+0x10],eax
3000afae:	push   edx
3000afaf:	call   DWORD PTR ds:0x3004508c
3000afb5:	test   eax,eax
3000afb7:	je     0x3000b7ff
3000afbd:	push   DWORD PTR [ebp+0x18]
3000afc0:	push   ebx
3000afc1:	push   edi
3000afc2:	push   DWORD PTR [ebp+0x14]
3000afc5:	push   esi
3000afc6:	push   DWORD PTR [ebp+0x10]
3000afc9:	call   DWORD PTR ds:0x30045170
3000afcf:	cmp    eax,DWORD PTR [ebp+0x18]
3000afd2:	jb     0x30028cc9
3000afd8:	test   eax,eax
3000afda:	je     0x30028cd4
3000afe0:	mov    eax,esi
3000afe2:	pop    edi
3000afe3:	pop    esi
3000afe4:	pop    ebx
3000afe5:	pop    ebp
3000afe6:	ret    0x18
3000afe9:	push   0x2c
3000afeb:	push   0x3000b120
3000aff0:	call   0x30008a54
3000aff5:	xor    edi,edi
3000aff7:	mov    DWORD PTR [ebp-0x38],edi
3000affa:	mov    esi,0x80030002
3000afff:	mov    DWORD PTR [ebp-0x1c],esi
3000b002:	mov    DWORD PTR [ebp-0x20],edi
3000b005:	push   edi
3000b006:	push   0x8000000
3000b00b:	push   0x3
3000b00d:	push   edi
3000b00e:	push   0x1
3000b010:	push   0x80000000
3000b015:	push   DWORD PTR [ebp+0x8]
3000b018:	call   0x3000b1f4
3000b01d:	mov    ebx,eax
3000b01f:	mov    DWORD PTR [ebp-0x30],ebx
3000b022:	cmp    ebx,0xffffffff
3000b025:	je     0x30028aab
3000b02b:	push   edi
3000b02c:	mov    ebx,eax
3000b02e:	push   ebx
3000b02f:	call   DWORD PTR ds:0x30045090
3000b035:	mov    DWORD PTR [ebp-0x24],eax
3000b038:	test   eax,eax
3000b03a:	je     0x30028c27
3000b040:	push   edi
3000b041:	push   edi
3000b042:	push   edi
3000b043:	push   0x2
3000b045:	push   edi
3000b046:	push   ebx
3000b047:	call   DWORD PTR ds:0x30045258
3000b04d:	mov    DWORD PTR [ebp-0x3c],eax
3000b050:	test   eax,eax
3000b052:	je     0x30028c1a
3000b058:	push   edi
3000b059:	push   edi
3000b05a:	push   edi
3000b05b:	push   0x4
3000b05d:	push   eax
3000b05e:	call   DWORD PTR ds:0x3004525c
3000b064:	mov    DWORD PTR [ebp+0x8],eax
3000b067:	test   eax,eax
3000b069:	je     0x30028c0d
3000b06f:	mov    DWORD PTR [ebp-0x4],edi
3000b072:	mov    DWORD PTR [ebp-0x2c],edi
3000b075:	mov    DWORD PTR [ebp-0x28],edi
3000b078:	lea    ecx,[ebp-0x2c]
3000b07b:	push   ecx
3000b07c:	push   eax
3000b07d:	mov    ebx,DWORD PTR [ebp-0x24]
3000b080:	push   ebx
3000b081:	call   0x3000abcc
3000b086:	mov    DWORD PTR [ebp-0x1c],eax
3000b089:	lea    eax,[ebp-0x28]
3000b08c:	push   eax
3000b08d:	push   DWORD PTR [ebp+0x8]
3000b090:	push   ebx
3000b091:	push   DWORD PTR [ebp-0x2c]
3000b094:	call   0x3000b148
3000b099:	mov    esi,eax
3000b09b:	mov    DWORD PTR [ebp-0x1c],esi
3000b09e:	test   esi,esi
3000b0a0:	js     0x3000b0d5
3000b0a2:	push   DWORD PTR [ebp-0x28]
3000b0a5:	push   edi
3000b0a6:	call   DWORD PTR ds:0x300454f0
3000b0ac:	mov    ebx,eax
3000b0ae:	mov    DWORD PTR [ebp-0x20],ebx
3000b0b1:	test   ebx,ebx
3000b0b3:	je     0x3000b111
3000b0b5:	push   ebx
3000b0b6:	push   DWORD PTR [ebp-0x28]
3000b0b9:	push   DWORD PTR [ebp+0x8]
3000b0bc:	push   DWORD PTR [ebp-0x24]
3000b0bf:	push   edi
3000b0c0:	push   DWORD PTR [ebp-0x2c]
3000b0c3:	call   0x3000af12
3000b0c8:	mov    esi,eax
3000b0ca:	mov    DWORD PTR [ebp-0x1c],esi
3000b0cd:	test   esi,esi
3000b0cf:	js     0x30028ab8
3000b0d5:	push   DWORD PTR [ebp+0x8]
3000b0d8:	call   DWORD PTR ds:0x3004524c
3000b0de:	mov    DWORD PTR [ebp-0x4],0xfffffffe
3000b0e5:	push   DWORD PTR [ebp-0x3c]
3000b0e8:	call   DWORD PTR ds:0x300451d0
3000b0ee:	push   DWORD PTR [ebp-0x30]
3000b0f1:	call   DWORD PTR ds:0x300451d0
3000b0f7:	test   edi,edi
3000b0f9:	jne    0x30028c3a
3000b0ff:	mov    ecx,DWORD PTR [ebp+0xc]
3000b102:	mov    eax,DWORD PTR [ebp-0x20]
3000b105:	mov    DWORD PTR [ecx],eax
3000b107:	mov    eax,esi
3000b109:	call   0x30008a99
3000b10e:	ret    0x8
3000b111:	mov    esi,0x8007000e
3000b116:	mov    DWORD PTR [ebp-0x1c],esi
3000b119:	jmp    0x3000b0d5
3000b11b:	nop
3000b11c:	nop
3000b11d:	nop
3000b11e:	nop
3000b11f:	nop
3000b120:	(bad)  
3000b121:	(bad)  
3000b122:	(bad)  
3000b123:	inc    DWORD PTR [eax]
3000b125:	add    BYTE PTR [eax],al
3000b127:	add    BYTE PTR [edi+edi*8+0xffff],dh
3000b12e:	add    BYTE PTR [eax],al
3000b130:	(bad)  
3000b131:	(bad)  
3000b132:	(bad)  
3000b133:	inc    edi
3000b135:	mov    al,BYTE PTR [edx]
3000b137:	xor    bl,cl
3000b139:	mov    al,BYTE PTR [edx]
3000b13b:	xor    dh,bh
3000b13d:	(bad)  
3000b13e:	(bad)  
3000b13f:	call   FWORD PTR [edx-0x61cffd75]
3000b145:	mov    eax,DWORD PTR [edx]
3000b147:	xor    BYTE PTR [ebp-0x75],dl
3000b14a:	in     al,dx
3000b14b:	mov    eax,DWORD PTR [ebp+0x14]
3000b14e:	test   eax,eax
3000b150:	je     0x30028cf2
3000b156:	push   ebx
3000b157:	push   esi
3000b158:	push   edi
3000b159:	mov    edi,DWORD PTR [ebp+0xc]
3000b15c:	xor    esi,esi
3000b15e:	mov    DWORD PTR [eax],esi
3000b160:	mov    ebx,esi
3000b162:	test   edi,edi
3000b164:	je     0x30028cfc
3000b16a:	mov    ecx,DWORD PTR [ebp+0x10]
3000b16d:	test   ecx,ecx
3000b16f:	je     0x30028d03
3000b175:	mov    eax,DWORD PTR [ebp+0x8]
3000b178:	and    eax,0xffff
3000b17d:	mov    DWORD PTR [ebp+0xc],eax
3000b180:	cmp    eax,0x4b0
3000b185:	jae    0x3000b64e
3000b18b:	test   eax,eax
3000b18d:	jne    0x3000b198
3000b18f:	call   DWORD PTR ds:0x300450b4
3000b195:	mov    DWORD PTR [ebp+0xc],eax
3000b198:	push   eax
3000b199:	call   DWORD PTR ds:0x3004508c
3000b19f:	test   eax,eax
3000b1a1:	je     0x3000b839
3000b1a7:	push   esi
3000b1a8:	push   esi
3000b1a9:	push   edi
3000b1aa:	push   DWORD PTR [ebp+0x10]
3000b1ad:	push   esi
3000b1ae:	push   DWORD PTR [ebp+0xc]
3000b1b1:	call   DWORD PTR ds:0x30045170
3000b1b7:	mov    ebx,eax
3000b1b9:	mov    eax,DWORD PTR [ebp+0x14]
3000b1bc:	mov    DWORD PTR [eax],ebx
3000b1be:	mov    eax,esi
3000b1c0:	pop    edi
3000b1c1:	pop    esi
3000b1c2:	pop    ebx
3000b1c3:	pop    ebp
3000b1c4:	ret    0x10
3000b1c7:	push   ebp
3000b1c8:	mov    ebp,esp
3000b1ca:	sub    esp,0x98
3000b1d0:	mov    eax,ds:0x30043050
3000b1d5:	xor    eax,ebp
3000b1d7:	mov    DWORD PTR [ebp-0x4],eax
3000b1da:	mov    eax,ds:0x30043104
3000b1df:	cmp    eax,0xfffffffe
3000b1e2:	je     0x300164b8
3000b1e8:	mov    ecx,DWORD PTR [ebp-0x4]
3000b1eb:	xor    ecx,ebp
3000b1ed:	call   0x3000115c
3000b1f2:	leave  
3000b1f3:	ret    
3000b1f4:	push   ebp
3000b1f5:	mov    ebp,esp
3000b1f7:	sub    esp,0x118
3000b1fd:	mov    eax,ds:0x30043050
3000b202:	xor    eax,ebp
3000b204:	mov    DWORD PTR [ebp-0x4],eax
3000b207:	mov    eax,DWORD PTR [ebp+0x14]
3000b20a:	mov    DWORD PTR [ebp-0x110],eax
3000b210:	mov    eax,DWORD PTR [ebp+0x18]
3000b213:	push   ebx
3000b214:	mov    ebx,DWORD PTR [ebp+0x10]
3000b217:	mov    DWORD PTR [ebp-0x10c],eax
3000b21d:	mov    eax,DWORD PTR [ebp+0x1c]
3000b220:	push   esi
3000b221:	mov    esi,DWORD PTR [ebp+0x8]
3000b224:	mov    DWORD PTR [ebp-0x118],eax
3000b22a:	mov    eax,DWORD PTR [ebp+0x20]
3000b22d:	push   edi
3000b22e:	mov    edi,DWORD PTR [ebp+0xc]
3000b231:	mov    DWORD PTR [ebp-0x114],eax
3000b237:	call   0x3000b1c7
3000b23c:	test   eax,eax
3000b23e:	je     0x30028e73
3000b244:	push   DWORD PTR [ebp-0x114]
3000b24a:	push   DWORD PTR [ebp-0x118]
3000b250:	push   DWORD PTR [ebp-0x10c]
3000b256:	push   DWORD PTR [ebp-0x110]
3000b25c:	push   ebx
3000b25d:	push   edi
3000b25e:	push   esi
3000b25f:	call   DWORD PTR ds:0x30045220
3000b265:	mov    ecx,DWORD PTR [ebp-0x4]
3000b268:	pop    edi
3000b269:	pop    esi
3000b26a:	xor    ecx,ebp
3000b26c:	pop    ebx
3000b26d:	call   0x3000115c
3000b272:	leave  
3000b273:	ret    0x1c
3000b276:	push   ebp
3000b277:	mov    ebp,esp
3000b279:	push   ebx
3000b27a:	push   esi
3000b27b:	push   edi
3000b27c:	mov    edi,ecx
3000b27e:	xor    ebx,ebx
3000b280:	mov    DWORD PTR [edi],0x300052a0
3000b286:	mov    DWORD PTR [edi+0x4],0x30009cd8
3000b28d:	mov    DWORD PTR [edi+0x8],ebx
3000b290:	lea    ecx,[edi+0x20]
3000b293:	mov    DWORD PTR [edi+0xc],0x3000b2d0
3000b29a:	mov    DWORD PTR [edi+0x10],ebx
3000b29d:	mov    DWORD PTR [edi+0x1c],ebx
3000b2a0:	call   0x300051c8
3000b2a5:	lea    ecx,[edi+0x24]
3000b2a8:	call   0x300051c8
3000b2ad:	lea    ecx,[edi+0x2c]
3000b2b0:	mov    BYTE PTR [edi+0x28],bl
3000b2b3:	call   0x30009718
3000b2b8:	mov    eax,DWORD PTR [ebp+0x8]
3000b2bb:	mov    DWORD PTR [edi+0x2c],0x300093bc
3000b2c2:	mov    DWORD PTR [edi+0x60],eax
3000b2c5:	mov    eax,edi
3000b2c7:	pop    edi
3000b2c8:	pop    esi
3000b2c9:	pop    ebx
3000b2ca:	pop    ebp
3000b2cb:	ret    0x4
3000b2ce:	nop
3000b2cf:	nop
3000b2d0:	jno    0x3000b34f
3000b2d2:	add    esi,DWORD PTR [eax]
3000b2d4:	cmp    eax,ebx
3000b2d6:	je     0x3000a3d2
3000b2dc:	jmp    0x3000a3b5
3000b2e1:	mov    eax,DWORD PTR [esi+0x64]
3000b2e4:	jmp    0x3000a3da
3000b2e9:	push   ebp
3000b2ea:	mov    ebp,esp
3000b2ec:	push   esi
3000b2ed:	mov    esi,ecx
3000b2ef:	call   0x3000ae91
3000b2f4:	test   BYTE PTR [ebp+0x8],0x1
3000b2f8:	je     0x3000b302
3000b2fa:	push   esi
3000b2fb:	call   DWORD PTR ds:0x300452ac
3000b301:	pop    ecx
3000b302:	mov    eax,esi
3000b304:	pop    esi
3000b305:	pop    ebp
3000b306:	ret    0x4
3000b309:	push   0x5
3000b30b:	lea    eax,[ecx-0x61]
3000b30e:	pop    esi
3000b30f:	cmp    ax,si
3000b312:	ja     0x300269de
3000b318:	sub    cl,0x57
3000b31b:	jmp    0x3000b32a
3000b31d:	lea    eax,[ecx-0x30]
3000b320:	push   esi
3000b321:	cmp    ax,0x9
3000b325:	ja     0x3000b309
3000b327:	sub    cl,0x30
3000b32a:	mov    BYTE PTR [edx],cl
3000b32c:	mov    al,0x1
3000b32e:	pop    esi
3000b32f:	ret    
3000b330:	push   ebp
3000b331:	mov    ebp,esp
3000b333:	sub    esp,0x14
3000b336:	mov    eax,DWORD PTR [ecx]
3000b338:	push   ebx
3000b339:	mov    ebx,DWORD PTR [eax-0xc]
3000b33c:	push   esi
3000b33d:	push   edi
3000b33e:	mov    edi,DWORD PTR [ebp+0xc]
3000b341:	xor    esi,esi
3000b343:	mov    DWORD PTR [ebp-0x14],edx
3000b346:	mov    DWORD PTR [ebp-0x8],ecx
3000b349:	mov    DWORD PTR [edi],esi
3000b34b:	cmp    DWORD PTR [ebp+0x8],esi
3000b34e:	jl     0x3000b628
3000b354:	cmp    esi,ebx
3000b356:	jge    0x3000b37b
3000b358:	mov    edi,DWORD PTR [ebp-0x8]
3000b35b:	push   esi
3000b35c:	mov    ecx,edi
3000b35e:	call   0x30008e17
3000b363:	mov    ecx,eax
3000b365:	call   0x3000b429
3000b36a:	test   al,al
3000b36c:	jne    0x3000b373
3000b36e:	inc    esi
3000b36f:	cmp    esi,ebx
3000b371:	jl     0x3000b35b
3000b373:	mov    edi,DWORD PTR [ebp+0xc]
3000b376:	mov    ecx,DWORD PTR [ebp-0x8]
3000b379:	cmp    esi,ebx
3000b37b:	je     0x3000b618
3000b381:	lea    eax,[esi+0x1]
3000b384:	cmp    eax,ebx
3000b386:	jge    0x3000b621
3000b38c:	push   eax
3000b38d:	call   0x30008e17
3000b392:	mov    ecx,eax
3000b394:	call   0x3000b429
3000b399:	test   al,al
3000b39b:	je     0x3000b621
3000b3a1:	mov    eax,DWORD PTR [edi]
3000b3a3:	mov    DWORD PTR [ebp-0x10],eax
3000b3a6:	cmp    eax,DWORD PTR [ebp+0x8]
3000b3a9:	je     0x3000b628
3000b3af:	mov    ecx,DWORD PTR [ebp-0x8]
3000b3b2:	lea    eax,[esi+0x1]
3000b3b5:	push   eax
3000b3b6:	call   0x30008e17
3000b3bb:	mov    ecx,DWORD PTR [ebp-0x8]
3000b3be:	movzx  eax,ax
3000b3c1:	push   esi
3000b3c2:	mov    DWORD PTR [ebp-0xc],eax
3000b3c5:	call   0x30008e17
3000b3ca:	lea    edx,[ebp-0x1]
3000b3cd:	mov    ecx,eax
3000b3cf:	call   0x3000b31d
3000b3d4:	test   al,al
3000b3d6:	je     0x3000b621
3000b3dc:	mov    ecx,DWORD PTR [ebp-0xc]
3000b3df:	lea    edx,[ebp-0x2]
3000b3e2:	call   0x3000b31d
3000b3e7:	test   al,al
3000b3e9:	je     0x3000b621
3000b3ef:	mov    al,BYTE PTR [ebp-0x1]
3000b3f2:	mov    ecx,DWORD PTR [ebp-0x10]
3000b3f5:	mov    edx,DWORD PTR [ebp-0x14]
3000b3f8:	shl    al,0x4
3000b3fb:	or     al,BYTE PTR [ebp-0x2]
3000b3fe:	add    esi,0x2
3000b401:	inc    DWORD PTR [edi]
3000b403:	mov    BYTE PTR [ecx+edx*1],al
3000b406:	mov    eax,DWORD PTR [ebp+0x8]
3000b409:	cmp    DWORD PTR [edi],eax
3000b40b:	jg     0x3000b628
3000b411:	mov    ecx,DWORD PTR [ebp-0x8]
3000b414:	jmp    0x3000b354
3000b419:	cmp    cx,0x66
3000b41d:	jbe    0x3000b43e
3000b41f:	jmp    0x3000b42f
3000b421:	cmp    cx,0x46
3000b425:	ja     0x3000b435
3000b427:	jmp    0x3000b43e
3000b429:	cmp    cx,0x61
3000b42d:	jae    0x3000b419
3000b42f:	cmp    cx,0x41
3000b433:	jae    0x3000b421
3000b435:	lea    eax,[ecx-0x30]
3000b438:	cmp    ax,0x9
3000b43c:	ja     0x3000b442
3000b43e:	xor    eax,eax
3000b440:	inc    eax
3000b441:	ret    
3000b442:	xor    eax,eax
3000b444:	ret    
3000b445:	push   0x7
3000b447:	lea    eax,[ebp+0xc]
3000b44a:	push   eax
3000b44b:	lea    ecx,[edi+0xc]
3000b44e:	call   0x30008de3
3000b453:	push   0x3000b5d8
3000b458:	mov    ecx,eax
3000b45a:	call   0x300091ce
3000b45f:	mov    ebx,eax
3000b461:	neg    ebx
3000b463:	lea    ecx,[ebp+0xc]
3000b466:	sbb    bl,bl
3000b468:	call   0x300051a4
3000b46d:	inc    bl
3000b46f:	lea    ebx,[edi+0xc]
3000b472:	jne    0x30026b7d
3000b478:	xor    eax,eax
3000b47a:	inc    eax
3000b47b:	mov    DWORD PTR [ebp+0xc],eax
3000b47e:	push   0x7
3000b480:	lea    eax,[ebp-0x10]
3000b483:	push   eax
3000b484:	mov    ecx,ebx
3000b486:	call   0x30008de3
3000b48b:	push   0x3000b608
3000b490:	mov    ecx,eax
3000b492:	call   0x300091ce
3000b497:	test   eax,eax
3000b499:	je     0x3000b4c2
3000b49b:	push   0x3
3000b49d:	pop    eax
3000b49e:	mov    DWORD PTR [ebp+0xc],eax
3000b4a1:	push   0x7
3000b4a3:	lea    eax,[ebp-0x14]
3000b4a6:	push   eax
3000b4a7:	mov    ecx,ebx
3000b4a9:	call   0x30008de3
3000b4ae:	push   0x3000b5e8
3000b4b3:	mov    ecx,eax
3000b4b5:	call   0x300091ce
3000b4ba:	test   eax,eax
3000b4bc:	je     0x3000b4c2
3000b4be:	mov    BYTE PTR [ebp-0x8],0x0
3000b4c2:	mov    eax,DWORD PTR [ebp+0xc]
3000b4c5:	test   al,0x2
3000b4c7:	je     0x3000b4da
3000b4c9:	and    eax,0xfffffffd
3000b4cc:	lea    ecx,[ebp-0x14]
3000b4cf:	mov    DWORD PTR [ebp+0xc],eax
3000b4d2:	call   0x300051a4
3000b4d7:	mov    eax,DWORD PTR [ebp+0xc]
3000b4da:	test   al,0x1
3000b4dc:	je     0x3000b4e6
3000b4de:	lea    ecx,[ebp-0x10]
3000b4e1:	call   0x300051a4
3000b4e6:	cmp    BYTE PTR [ebp-0x8],0x0
3000b4ea:	jne    0x3000bac6
3000b4f0:	push   0x7
3000b4f2:	lea    eax,[ebp+0xc]
3000b4f5:	push   eax
3000b4f6:	mov    ecx,ebx
3000b4f8:	call   0x30008de3
3000b4fd:	push   0x3000b5f8
3000b502:	mov    ecx,eax
3000b504:	call   0x300091ce
3000b509:	mov    ebx,eax
3000b50b:	neg    ebx
3000b50d:	lea    ecx,[ebp+0xc]
3000b510:	sbb    bl,bl
3000b512:	call   0x300051a4
3000b517:	inc    bl
3000b519:	jne    0x30026b89
3000b51f:	push   0x4
3000b521:	lea    eax,[ebp+0xc]
3000b524:	push   eax
3000b525:	lea    ecx,[edi+0xc]
3000b528:	call   0x30008de3
3000b52d:	push   0x3000b630
3000b532:	mov    ecx,eax
3000b534:	call   0x300091ce
3000b539:	mov    ebx,eax
3000b53b:	neg    ebx
3000b53d:	lea    ecx,[ebp+0xc]
3000b540:	sbb    bl,bl
3000b542:	call   0x300051a4
3000b547:	inc    bl
3000b549:	je     0x30026c31
3000b54f:	mov    DWORD PTR [edi+0x8],0x3
3000b556:	lea    ebx,[edi+0xc]
3000b559:	push   0x0
3000b55b:	push   0x3a
3000b55d:	mov    ecx,ebx
3000b55f:	call   0x300091f2
3000b564:	lea    ecx,[eax+0x1]
3000b567:	mov    eax,DWORD PTR [ebx]
3000b569:	mov    eax,DWORD PTR [eax-0xc]
3000b56c:	sub    eax,ecx
3000b56e:	push   eax
3000b56f:	push   ecx
3000b570:	lea    eax,[ebp+0xc]
3000b573:	push   eax
3000b574:	mov    ecx,ebx
3000b576:	call   0x30008d6e
3000b57b:	mov    edx,DWORD PTR [edi+0x10]
3000b57e:	test   edx,edx
3000b580:	je     0x30026b95
3000b586:	xor    eax,eax
3000b588:	mov    DWORD PTR [edi+0x14],eax
3000b58b:	mov    DWORD PTR [ebp-0x8],eax
3000b58e:	lea    eax,[ebp-0x8]
3000b591:	push   eax
3000b592:	push   DWORD PTR [edi+0x18]
3000b595:	lea    ecx,[ebp+0xc]
3000b598:	call   0x3000b330
3000b59d:	mov    esi,eax
3000b59f:	test   esi,esi
3000b5a1:	js     0x30026ba6
3000b5a7:	mov    eax,DWORD PTR [ebp-0x8]
3000b5aa:	add    DWORD PTR [edi+0x14],eax
3000b5ad:	mov    eax,DWORD PTR [edi+0x8]
3000b5b0:	mov    ecx,DWORD PTR [edi+0x14]
3000b5b3:	dec    eax
3000b5b4:	je     0x30026c11
3000b5ba:	dec    eax
3000b5bb:	je     0x3000bb78
3000b5c1:	sub    eax,0x3
3000b5c4:	je     0x30026bb5
3000b5ca:	lea    ecx,[ebp+0xc]
3000b5cd:	call   0x300051a4
3000b5d2:	jmp    0x30009e3c
3000b5d7:	nop
3000b5d8:	push   0x78006500
3000b5dd:	add    BYTE PTR [eax],ch
3000b5df:	add    BYTE PTR [edx],dh
3000b5e1:	add    BYTE PTR [ecx],ch
3000b5e3:	add    BYTE PTR [edx],bh
3000b5e5:	add    BYTE PTR [eax],al
3000b5e7:	add    BYTE PTR [eax+0x0],ch
3000b5ea:	add    BYTE PTR gs:[eax+0x0],bh
3000b5ee:	sub    BYTE PTR [eax],al
3000b5f0:	ins    DWORD PTR es:[edi],dx
3000b5f1:	add    BYTE PTR [ecx],ch
3000b5f3:	add    BYTE PTR [edx],bh
3000b5f5:	add    BYTE PTR [eax],al
3000b5f7:	add    BYTE PTR [eax+0x0],ch
3000b5fa:	add    BYTE PTR gs:[eax+0x0],bh
3000b5fe:	sub    BYTE PTR [eax],al
3000b600:	bound  eax,QWORD PTR [eax]
3000b602:	sub    DWORD PTR [eax],eax
3000b604:	cmp    al,BYTE PTR [eax]
3000b606:	add    BYTE PTR [eax],al
3000b608:	push   0x78006500
3000b60d:	add    BYTE PTR [eax],ch
3000b60f:	add    BYTE PTR [edi],dh
3000b611:	add    BYTE PTR [ecx],ch
3000b613:	add    BYTE PTR [edx],bh
3000b615:	add    BYTE PTR [eax],al
3000b617:	add    BYTE PTR [ebx],dh
3000b619:	rcr    BYTE PTR [edi+0x5e],0x5b
3000b61d:	leave  
3000b61e:	ret    0x8
3000b621:	mov    eax,0x80004005
3000b626:	jmp    0x3000b61a
3000b628:	mov    eax,0x8007007a
3000b62d:	jmp    0x3000b61a
3000b62f:	nop
3000b630:	push   0x78006500
3000b635:	add    BYTE PTR [edx],bh
3000b637:	add    BYTE PTR [eax],al
3000b639:	add    bh,bh
3000b63b:	jbe    0x3000b651
3000b63d:	push   DWORD PTR [esi+0x10]
3000b640:	push   0x3
3000b642:	jmp    0x3000a481
3000b647:	xor    edx,edx
3000b649:	jmp    0x3000ac23
3000b64e:	cmp    eax,0x4b1
3000b653:	ja     0x3000b813
3000b659:	test   DWORD PTR [ebp+0x8],0x10000
3000b660:	je     0x3000b665
3000b662:	sub    edi,0x2
3000b665:	mov    ebx,edi
3000b667:	shr    ebx,1
3000b669:	jmp    0x3000b1b9
3000b66e:	cmp    edx,0x4b1
3000b674:	ja     0x3000b7c8
3000b67a:	test   DWORD PTR [ebp+0x8],0x10000
3000b681:	je     0x3000b689
3000b683:	sub    edi,0x2
3000b686:	add    eax,0x2
3000b689:	cmp    DWORD PTR [ebp+0x1c],ecx
3000b68c:	ja     0x3000b809
3000b692:	add    ecx,ecx
3000b694:	cmp    edi,ecx
3000b696:	jb     0x3000b69a
3000b698:	mov    edi,ecx
3000b69a:	push   edi
3000b69b:	cmp    edx,0x4b1
3000b6a1:	je     0x30028ca8
3000b6a7:	push   eax
3000b6a8:	push   ebx
3000b6a9:	call   0x3000151c
3000b6ae:	shr    edi,1
3000b6b0:	add    esp,0xc
3000b6b3:	cmp    edi,DWORD PTR [ebp+0x18]
3000b6b6:	jae    0x3000afe0
3000b6bc:	jmp    0x30028cb4
3000b6c1:	mov    DWORD PTR [eax],0x104b0
3000b6c7:	jmp    0x3000b647
3000b6cc:	mov    eax,0x80070057
3000b6d1:	jmp    0x3000ac27
3000b6d6:	mov    eax,DWORD PTR [esi+0x8]
3000b6d9:	mov    BYTE PTR [ebp-0x1],0x1
3000b6dd:	cmp    eax,DWORD PTR [esi+0xc]
3000b6e0:	jb     0x3000a9e9
3000b6e6:	jmp    0x3000a9e6
3000b6eb:	mov    esi,DWORD PTR [ebp-0xc]
3000b6ee:	jmp    0x3000a99d
3000b6f3:	test   eax,eax
3000b6f5:	jne    0x3000aa17
3000b6fb:	jmp    0x3000aa1a
3000b700:	mov    ebx,eax
3000b702:	jmp    0x30009c12
3000b707:	mov    ebx,esi
3000b709:	jmp    0x30009c12
3000b70e:	mov    esi,ecx
3000b710:	sub    esi,edi
3000b712:	jmp    0x30008db0
3000b717:	mov    ebx,DWORD PTR [ebp-0x14]
3000b71a:	jmp    0x300044d7
3000b71f:	mov    esi,DWORD PTR [ecx-0xc]
3000b722:	jmp    0x300042cc
3000b727:	cmp    BYTE PTR [ecx+0x1],0xbb
3000b72b:	jne    0x3000ac23
3000b731:	cmp    BYTE PTR [ecx+0x2],0xbf
3000b735:	jne    0x3000ac23
3000b73b:	mov    DWORD PTR [eax],0x1fde9
3000b741:	jmp    0x3000b647
3000b746:	push   ebp
3000b747:	mov    ebp,esp
3000b749:	sub    esp,0xc
3000b74c:	mov    ecx,DWORD PTR [ebp+0x10]
3000b74f:	mov    eax,DWORD PTR [ebp+0x14]
3000b752:	xor    edx,edx
3000b754:	and    DWORD PTR [ebp-0xc],edx
3000b757:	push   ebx
3000b758:	mov    ebx,DWORD PTR [ebp+0xc]
3000b75b:	lea    eax,[ecx+eax*2]
3000b75e:	push   esi
3000b75f:	mov    esi,ecx
3000b761:	mov    DWORD PTR [ebp+0x14],eax
3000b764:	mov    DWORD PTR [ebp-0x8],edx
3000b767:	mov    DWORD PTR [ebp-0x4],ebx
3000b76a:	cmp    ebx,0xffffffff
3000b76d:	je     0x30028d72
3000b773:	test   ebx,ebx
3000b775:	je     0x3000b7b2
3000b777:	mov    ebx,DWORD PTR [ebp+0x8]
3000b77a:	push   edi
3000b77b:	lea    edi,[ecx+0x2]
3000b77e:	dec    DWORD PTR [ebp-0x4]
3000b781:	cmp    esi,eax
3000b783:	jae    0x3000b7ae
3000b785:	mov    ecx,DWORD PTR [ebp+0x8]
3000b788:	mov    al,BYTE PTR [ecx]
3000b78a:	inc    ecx
3000b78b:	mov    DWORD PTR [ebp+0x8],ecx
3000b78e:	cmp    al,0x7f
3000b790:	ja     0x30028d8c
3000b796:	movzx  eax,al
3000b799:	mov    WORD PTR [esi],ax
3000b79c:	add    esi,0x2
3000b79f:	add    edi,0x2
3000b7a2:	mov    eax,DWORD PTR [ebp+0x14]
3000b7a5:	cmp    DWORD PTR [ebp-0x4],0x0
3000b7a9:	mov    edx,DWORD PTR [ebp-0x8]
3000b7ac:	jne    0x3000b77e
3000b7ae:	mov    ecx,DWORD PTR [ebp+0x10]
3000b7b1:	pop    edi
3000b7b2:	cmp    DWORD PTR [ebp+0xc],0xffffffff
3000b7b6:	je     0x30028e57
3000b7bc:	sub    esi,ecx
3000b7be:	sar    esi,1
3000b7c0:	mov    eax,esi
3000b7c2:	pop    esi
3000b7c3:	pop    ebx
3000b7c4:	leave  
3000b7c5:	ret    0x10
3000b7c8:	cmp    edx,0xfde9
3000b7ce:	jne    0x3000af65
3000b7d4:	test   DWORD PTR [ebp+0x8],0x10000
3000b7db:	je     0x3000b7e3
3000b7dd:	sub    edi,0x3
3000b7e0:	add    eax,0x3
3000b7e3:	cmp    DWORD PTR [ebp+0x1c],ecx
3000b7e6:	ja     0x3000b809
3000b7e8:	push   ecx
3000b7e9:	push   ebx
3000b7ea:	push   edi
3000b7eb:	push   eax
3000b7ec:	call   0x3000b746
3000b7f1:	cmp    eax,DWORD PTR [ebp+0x18]
3000b7f4:	jae    0x3000afe0
3000b7fa:	jmp    0x30028c9d
3000b7ff:	mov    esi,0x80030300
3000b804:	jmp    0x3000afe0
3000b809:	mov    esi,0x8007007a
3000b80e:	jmp    0x3000afe0
3000b813:	cmp    eax,0xfde9
3000b818:	jne    0x3000b18b
3000b81e:	test   DWORD PTR [ebp+0x8],0x10000
3000b825:	je     0x3000b82d
3000b827:	sub    edi,0x3
3000b82a:	add    ecx,0x3
3000b82d:	push   edi
3000b82e:	push   ecx
3000b82f:	call   0x3000b843
3000b834:	jmp    0x3000b1b7
3000b839:	mov    esi,0x80030300
3000b83e:	jmp    0x3000b1b9
3000b843:	push   ebp
3000b844:	mov    ebp,esp
3000b846:	push   ebx
3000b847:	push   esi
3000b848:	mov    esi,DWORD PTR [ebp+0xc]
3000b84b:	xor    ebx,ebx
3000b84d:	mov    edx,ebx
3000b84f:	cmp    esi,0xffffffff
3000b852:	je     0x30028d0d
3000b858:	test   esi,esi
3000b85a:	je     0x3000b878
3000b85c:	mov    ecx,DWORD PTR [ebp+0x8]
3000b85f:	push   edi
3000b860:	mov    edi,DWORD PTR [ebp+0x8]
3000b863:	mov    al,BYTE PTR [ecx]
3000b865:	dec    esi
3000b866:	inc    ecx
3000b867:	mov    DWORD PTR [ebp+0x8],ecx
3000b86a:	cmp    al,0x7f
3000b86c:	ja     0x30028d1f
3000b872:	inc    edx
3000b873:	test   esi,esi
3000b875:	jne    0x3000b863
3000b877:	pop    edi
3000b878:	pop    esi
3000b879:	mov    eax,edx
3000b87b:	pop    ebx
3000b87c:	pop    ebp
3000b87d:	ret    0x8
3000b880:	mov    esi,edi
3000b882:	jmp    0x30009369
3000b887:	mov    edx,DWORD PTR [esi+0x14]
3000b88a:	push   0xc
3000b88c:	lea    ecx,[esi+0xc]
3000b88f:	call   0x30008f5d
3000b894:	mov    edx,eax
3000b896:	test   edx,edx
3000b898:	je     0x30021a3e
3000b89e:	mov    ecx,DWORD PTR [esi+0x14]
3000b8a1:	mov    eax,ecx
3000b8a3:	imul   eax,eax,0xc
3000b8a6:	add    eax,0xfffffff8
3000b8a9:	add    edx,eax
3000b8ab:	dec    ecx
3000b8ac:	js     0x3000b8cf
3000b8ae:	mov    eax,DWORD PTR [esi+0x10]
3000b8b1:	mov    DWORD PTR [edx],eax
3000b8b3:	mov    DWORD PTR [esi+0x10],edx
3000b8b6:	sub    edx,0xc
3000b8b9:	jmp    0x3000b8ab
3000b8bb:	push   0x8
3000b8bd:	mov    eax,0x30040a60
3000b8c2:	call   0x3000116a
3000b8c7:	mov    esi,ecx
3000b8c9:	cmp    DWORD PTR [esi+0x10],0x0
3000b8cd:	je     0x3000b887
3000b8cf:	mov    edi,DWORD PTR [esi+0x10]
3000b8d2:	mov    DWORD PTR [ebp-0x10],edi
3000b8d5:	mov    ebx,DWORD PTR [edi]
3000b8d7:	mov    DWORD PTR [ebp-0x14],edi
3000b8da:	and    DWORD PTR [ebp-0x4],0x0
3000b8de:	test   edi,edi
3000b8e0:	je     0x3000b8ed
3000b8e2:	push   DWORD PTR [ebp+0x8]
3000b8e5:	lea    ecx,[edi+0x8]
3000b8e8:	call   0x3000437e
3000b8ed:	mov    ecx,DWORD PTR [ebp+0xc]
3000b8f0:	mov    DWORD PTR [esi+0x10],ebx
3000b8f3:	and    DWORD PTR [edi],0x0
3000b8f6:	mov    DWORD PTR [edi+0x4],ecx
3000b8f9:	inc    DWORD PTR [esi+0x8]
3000b8fc:	mov    eax,edi
3000b8fe:	call   0x3000119d
3000b903:	ret    0xc
3000b906:	push   ebp
3000b907:	mov    ebp,esp
3000b909:	push   esi
3000b90a:	mov    esi,ecx
3000b90c:	push   ecx
3000b90d:	push   DWORD PTR [esi+0x4]
3000b910:	push   DWORD PTR [ebp+0x8]
3000b913:	call   0x3000b8bb
3000b918:	mov    ecx,DWORD PTR [esi+0x4]
3000b91b:	test   ecx,ecx
3000b91d:	je     0x3000b929
3000b91f:	mov    DWORD PTR [ecx],eax
3000b921:	mov    DWORD PTR [esi+0x4],eax
3000b924:	pop    esi
3000b925:	pop    ebp
3000b926:	ret    0x4
3000b929:	mov    DWORD PTR [esi],eax
3000b92b:	jmp    0x3000b921
3000b92d:	nop
3000b92e:	nop
3000b92f:	nop
3000b930:	jmp    0x3000b942
3000b932:	pop    edi
3000b933:	jno    0x3000b8ce
3000b935:	sahf   
3000b936:	rcl    BYTE PTR [ecx],cl
3000b938:	mov    edi,0x4fc000c2
3000b93d:	cdq    
3000b93e:	add    dh,BYTE PTR ds:0x56ec8b55
3000b944:	push   edi
3000b945:	push   0x104
3000b94a:	mov    edi,ecx
3000b94c:	call   0x30004286
3000b951:	push   DWORD PTR [ebp+0x8]
3000b954:	push   eax
3000b955:	call   DWORD PTR ds:0x30045640
3000b95b:	push   0xffffffff
3000b95d:	mov    ecx,edi
3000b95f:	mov    esi,eax
3000b961:	call   0x30006c8c
3000b966:	pop    edi
3000b967:	mov    eax,esi
3000b969:	pop    esi
3000b96a:	pop    ebp
3000b96b:	ret    0x4
3000b96e:	mov    eax,0x80004001
3000b973:	jmp    0x30007232
3000b978:	push   0xb
3000b97a:	pop    eax
3000b97b:	mov    WORD PTR [edi],ax
3000b97e:	mov    eax,DWORD PTR [ebp+0x8]
3000b981:	mov    eax,DWORD PTR [eax+0x668]
3000b987:	jmp    0x30003fd4
3000b98c:	push   ebp
3000b98d:	mov    ebp,esp
3000b98f:	push   ecx
3000b990:	push   ecx
3000b991:	cmp    DWORD PTR [ebp+0x8],0x0
3000b995:	push   ebx
3000b996:	push   esi
3000b997:	mov    ebx,ecx
3000b999:	je     0x30020531
3000b99f:	mov    eax,DWORD PTR [ebx]
3000b9a1:	push   DWORD PTR [ebp+0xc]
3000b9a4:	mov    esi,DWORD PTR [eax-0xc]
3000b9a7:	push   DWORD PTR [ebp+0x8]
3000b9aa:	mov    DWORD PTR [ebp-0x8],esi
3000b9ad:	call   DWORD PTR ds:0x300452f4
3000b9b3:	pop    ecx
3000b9b4:	pop    ecx
3000b9b5:	mov    DWORD PTR [ebp-0x4],eax
3000b9b8:	test   eax,eax
3000b9ba:	js     0x3002052a
3000b9c0:	add    esi,eax
3000b9c2:	push   esi
3000b9c3:	mov    ecx,ebx
3000b9c5:	call   0x30004286
3000b9ca:	push   DWORD PTR [ebp+0xc]
3000b9cd:	mov    ecx,DWORD PTR [ebp-0x4]
3000b9d0:	push   DWORD PTR [ebp+0x8]
3000b9d3:	inc    ecx
3000b9d4:	push   ecx
3000b9d5:	mov    ecx,DWORD PTR [ebp-0x8]
3000b9d8:	lea    eax,[eax+ecx*2]
3000b9db:	push   eax
3000b9dc:	call   DWORD PTR ds:0x300452f8
3000b9e2:	add    esp,0x10
3000b9e5:	mov    ecx,ebx
3000b9e7:	push   esi
3000b9e8:	call   0x30004147
3000b9ed:	pop    esi
3000b9ee:	pop    ebx
3000b9ef:	leave  
3000b9f0:	ret    0x8
3000b9f3:	push   ebp
3000b9f4:	mov    ebp,esp
3000b9f6:	mov    ecx,DWORD PTR [ebp+0x8]
3000b9f9:	lea    eax,[ebp+0x10]
3000b9fc:	push   eax
3000b9fd:	push   DWORD PTR [ebp+0xc]
3000ba00:	call   0x3000b98c
3000ba05:	pop    ebp
3000ba06:	ret    
3000ba07:	jmp    DWORD PTR ds:0x300453b4
3000ba0d:	push   ebp
3000ba0e:	mov    ebp,esp
3000ba10:	push   esi
3000ba11:	push   edi
3000ba12:	mov    edi,DWORD PTR [ebp+0x8]
3000ba15:	mov    esi,ecx
3000ba17:	cmp    edi,DWORD PTR [esi]
3000ba19:	je     0x3000ba38
3000ba1b:	push   DWORD PTR [esi]
3000ba1d:	call   DWORD PTR ds:0x300454e8
3000ba23:	test   edi,edi
3000ba25:	je     0x3000ba40
3000ba27:	push   edi
3000ba28:	call   DWORD PTR ds:0x300454dc
3000ba2e:	mov    DWORD PTR [esi],eax
3000ba30:	test   eax,eax
3000ba32:	je     0x30020424
3000ba38:	pop    edi
3000ba39:	mov    eax,esi
3000ba3b:	pop    esi
3000ba3c:	pop    ebp
3000ba3d:	ret    0x4
3000ba40:	and    DWORD PTR [esi],0x0
3000ba43:	jmp    0x3000ba38
3000ba45:	push   0x4
3000ba47:	mov    eax,0x3003ff74
3000ba4c:	call   0x3000116a
3000ba51:	mov    esi,DWORD PTR [ebp+0xc]
3000ba54:	and    DWORD PTR [ebp-0x4],0x0
3000ba58:	and    DWORD PTR [ebp-0x10],0x0
3000ba5c:	mov    ecx,esi
3000ba5e:	call   0x30008bef
3000ba63:	mov    ecx,DWORD PTR [ebp+0x8]
3000ba66:	push   eax
3000ba67:	call   0x30004256
3000ba6c:	and    DWORD PTR [ebp-0x4],0x0
3000ba70:	push   DWORD PTR [ebp+0x10]
3000ba73:	mov    esi,DWORD PTR [esi]
3000ba75:	mov    DWORD PTR [ebp-0x10],0x1
3000ba7c:	call   0x300042e4
3000ba81:	push   eax
3000ba82:	push   DWORD PTR [ebp+0x10]
3000ba85:	push   DWORD PTR [esi-0xc]
3000ba88:	push   esi
3000ba89:	push   DWORD PTR [ebp+0x8]
3000ba8c:	call   0x30008fee
3000ba91:	mov    eax,DWORD PTR [ebp+0x8]
3000ba94:	add    esp,0x18
3000ba97:	call   0x3000119d
3000ba9c:	ret    0xc
3000ba9f:	nop
3000baa0:	push   esi
3000baa1:	add    BYTE PTR [ecx+0x0],ch
3000baa4:	jae    0x3000baa6
3000baa6:	jne    0x3000baa8
3000baa8:	popa   
3000baa9:	add    BYTE PTR [eax+eax*1+0x20],ch
3000baad:	add    BYTE PTR [ebx+0x0],dl
3000bab0:	je     0x3000bab2
3000bab2:	jne    0x3000bab4
3000bab4:	add    BYTE PTR fs:[ecx+0x0],ch
3000bab8:	outs   dx,DWORD PTR ds:[esi]
3000bab9:	add    BYTE PTR [eax],ah
3000babb:	add    BYTE PTR [edx],dh
3000babd:	add    BYTE PTR [eax],dh
3000babf:	add    BYTE PTR [ecx],dh
3000bac1:	add    BYTE PTR [edx],dh
3000bac3:	add    BYTE PTR [eax],al
3000bac5:	add    bh,al
3000bac7:	inc    edi
3000bac8:	or     BYTE PTR [edx],al
3000baca:	add    BYTE PTR [eax],al
3000bacc:	add    cl,ch
3000bace:	xchg   edx,edi
3000bad0:	(bad)  
3000bad1:	inc    DWORD PTR [ebp-0xb7bf040]
3000bad7:	jecxz  0x3000bad8
3000bad9:	(bad)  
3000bada:	jmp    0x30009ed2
3000badf:	push   ebp
3000bae0:	mov    ebp,esp
3000bae2:	push   ecx
3000bae3:	push   ecx
3000bae4:	push   esi
3000bae5:	mov    esi,edx
3000bae7:	test   esi,esi
3000bae9:	je     0x300245a4
3000baef:	mov    eax,DWORD PTR [ecx]
3000baf1:	push   ebx
3000baf2:	push   edi
3000baf3:	mov    DWORD PTR [ebp-0x8],edx
3000baf6:	mov    DWORD PTR [ebp-0x4],eax
3000baf9:	test   eax,eax
3000bafb:	je     0x3000bb45
3000bafd:	mov    edi,DWORD PTR [ebp+0x8]
3000bb00:	lea    eax,[ebp-0x4]
3000bb03:	push   eax
3000bb04:	call   0x30008fa7
3000bb09:	mov    ebx,eax
3000bb0b:	mov    edx,DWORD PTR [ebx]
3000bb0d:	mov    ecx,DWORD PTR [edx-0xc]
3000bb10:	test   ecx,ecx
3000bb12:	je     0x3000bb71
3000bb14:	add    ecx,0x2
3000bb17:	cmp    ecx,edi
3000bb19:	jg     0x3000bb6a
3000bb1b:	push   edx
3000bb1c:	push   edi
3000bb1d:	push   esi
3000bb1e:	call   0x30006ce1
3000bb23:	add    esp,0xc
3000bb26:	test   eax,eax
3000bb28:	jne    0x3000bb63
3000bb2a:	mov    eax,DWORD PTR [ebx]
3000bb2c:	mov    ecx,DWORD PTR [eax-0xc]
3000bb2f:	or     eax,0xffffffff
3000bb32:	sub    eax,ecx
3000bb34:	lea    esi,[esi+ecx*2]
3000bb37:	add    esi,0x2
3000bb3a:	add    edi,eax
3000bb3c:	cmp    DWORD PTR [ebp-0x4],0x0
3000bb40:	jne    0x3000bb00
3000bb42:	mov    edx,DWORD PTR [ebp-0x8]
3000bb45:	xor    eax,eax
3000bb47:	mov    WORD PTR [esi],ax
3000bb4a:	mov    eax,DWORD PTR [ebp+0xc]
3000bb4d:	test   eax,eax
3000bb4f:	je     0x3000bb5a
3000bb51:	sub    esi,edx
3000bb53:	add    esi,0x2
3000bb56:	sar    esi,1
3000bb58:	mov    DWORD PTR [eax],esi
3000bb5a:	xor    eax,eax
3000bb5c:	pop    edi
3000bb5d:	pop    ebx
3000bb5e:	pop    esi
3000bb5f:	leave  
3000bb60:	ret    0x8
3000bb63:	mov    eax,0x80004005
3000bb68:	jmp    0x3000bb5c
3000bb6a:	mov    eax,0x8007007a
3000bb6f:	jmp    0x3000bb5c
3000bb71:	mov    eax,0x80070057
3000bb76:	jmp    0x3000bb5c
3000bb78:	lea    eax,[ecx-0x4]
3000bb7b:	cmp    eax,ecx
3000bb7d:	jge    0x3000bb91
3000bb7f:	mov    edx,DWORD PTR [edi+0x10]
3000bb82:	cmp    BYTE PTR [edx+eax*1],0x0
3000bb86:	jne    0x30026bec
3000bb8c:	inc    eax
3000bb8d:	cmp    eax,ecx
3000bb8f:	jl     0x3000bb82
3000bb91:	push   DWORD PTR [edi+0x10]
3000bb94:	call   0x300042e4
3000bb99:	pop    ecx
3000bb9a:	push   eax
3000bb9b:	push   DWORD PTR [edi+0x10]
3000bb9e:	mov    ecx,ebx
3000bba0:	call   0x3000416f
3000bba5:	push   DWORD PTR [edi+0x14]
3000bba8:	mov    ecx,ebx
3000bbaa:	call   0x30006c8c
3000bbaf:	jmp    0x3000b5ca
3000bbb4:	push   ebp
3000bbb5:	mov    ebp,esp
3000bbb7:	push   ecx
3000bbb8:	push   esi
3000bbb9:	mov    esi,ecx
3000bbbb:	push   edi
3000bbbc:	mov    edi,edx
3000bbbe:	test   esi,esi
3000bbc0:	je     0x30024590
3000bbc6:	push   ebx
3000bbc7:	xor    ebx,ebx
3000bbc9:	cmp    DWORD PTR [edi+0x8],ebx
3000bbcc:	ja     0x3002459a
3000bbd2:	cmp    WORD PTR [esi],bx
3000bbd5:	je     0x3000bc00
3000bbd7:	push   esi
3000bbd8:	lea    ecx,[ebp-0x4]
3000bbdb:	call   0x3000437e
3000bbe0:	push   DWORD PTR [ebp-0x4]
3000bbe3:	mov    ecx,edi
3000bbe5:	call   0x3000b906
3000bbea:	mov    eax,DWORD PTR [ebp-0x4]
3000bbed:	lea    ecx,[ebp-0x4]
3000bbf0:	mov    eax,DWORD PTR [eax-0xc]
3000bbf3:	lea    esi,[esi+eax*2]
3000bbf6:	add    esi,0x2
3000bbf9:	call   0x300051a4
3000bbfe:	jmp    0x3000bbd2
3000bc00:	xor    eax,eax
3000bc02:	pop    ebx
3000bc03:	pop    edi
3000bc04:	pop    esi
3000bc05:	leave  
3000bc06:	ret    
3000bc07:	push   DWORD PTR [esi+0x14]
3000bc0a:	push   DWORD PTR [esi+0x10]
3000bc0d:	push   0x7
3000bc0f:	jmp    0x3000a481
3000bc14:	push   ebp
3000bc15:	mov    ebp,esp
3000bc17:	sub    esp,0x21c
3000bc1d:	mov    eax,ds:0x30043050
3000bc22:	xor    eax,ebp
3000bc24:	mov    DWORD PTR [ebp-0x4],eax
3000bc27:	push   ebx
3000bc28:	mov    ebx,DWORD PTR [ebp+0xc]
3000bc2b:	mov    eax,ecx
3000bc2d:	mov    ecx,DWORD PTR [ebp+0x8]
3000bc30:	push   edi
3000bc31:	xor    edi,edi
3000bc33:	mov    DWORD PTR [ebp-0x21c],eax
3000bc39:	mov    DWORD PTR [ebp-0x218],ecx
3000bc3f:	cmp    DWORD PTR [eax],edi
3000bc41:	je     0x3001ff0f
3000bc47:	test   ebx,ebx
3000bc49:	je     0x3001ff19
3000bc4f:	push   esi
3000bc50:	lea    edx,[ebp-0x214]
3000bc56:	push   edx
3000bc57:	lea    edx,[ebp-0x20c]
3000bc5d:	push   edx
3000bc5e:	lea    edx,[ebp-0x210]
3000bc64:	push   edx
3000bc65:	push   edi
3000bc66:	push   ecx
3000bc67:	mov    DWORD PTR [ebx],edi
3000bc69:	push   DWORD PTR [eax]
3000bc6b:	mov    DWORD PTR [ebp-0x214],0x208
3000bc75:	mov    DWORD PTR [ebp-0x210],edi
3000bc7b:	call   DWORD PTR ds:0x3004500c
3000bc81:	mov    esi,eax
3000bc83:	test   esi,esi
3000bc85:	jne    0x3001ff23
3000bc8b:	mov    eax,DWORD PTR [ebp-0x214]
3000bc91:	test   eax,eax
3000bc93:	je     0x3000bcd2
3000bc95:	cmp    DWORD PTR [ebp-0x210],0x1
3000bc9c:	jne    0x3001ff34
3000bca2:	xor    ecx,ecx
3000bca4:	mov    WORD PTR [ebp-0x6],cx
3000bca8:	test   esi,esi
3000bcaa:	jne    0x3001ff55
3000bcb0:	lea    eax,[ebp-0x20c]
3000bcb6:	push   eax
3000bcb7:	call   DWORD PTR ds:0x300454dc
3000bcbd:	mov    DWORD PTR [ebx],eax
3000bcbf:	mov    eax,esi
3000bcc1:	pop    esi
3000bcc2:	mov    ecx,DWORD PTR [ebp-0x4]
3000bcc5:	pop    edi
3000bcc6:	xor    ecx,ebp
3000bcc8:	pop    ebx
3000bcc9:	call   0x3000115c
3000bcce:	leave  
3000bccf:	ret    0x8
3000bcd2:	test   esi,esi
3000bcd4:	jg     0x3001ff9f
3000bcda:	jmp    0x3000bcbf
3000bcdc:	push   0x84
3000bce1:	mov    eax,0x30040caf
3000bce6:	call   0x300045c8
3000bceb:	mov    DWORD PTR [ebp-0x8c],edx
3000bcf1:	mov    eax,ecx
3000bcf3:	mov    DWORD PTR [ebp-0x84],eax
3000bcf9:	mov    ecx,DWORD PTR [ebp+0x10]
3000bcfc:	mov    ebx,DWORD PTR [ebp+0xc]
3000bcff:	mov    DWORD PTR [ebp-0x90],ecx
3000bd05:	test   eax,eax
3000bd07:	je     0x3000ed8f
3000bd0d:	test   ebx,ebx
3000bd0f:	je     0x3000ed72
3000bd15:	xor    esi,esi
3000bd17:	mov    DWORD PTR [ebp-0x80],esi
3000bd1a:	mov    edi,esi
3000bd1c:	mov    DWORD PTR [ebp-0x4],esi
3000bd1f:	mov    DWORD PTR [ebp-0x88],edi
3000bd25:	push   eax
3000bd26:	lea    ecx,[ebp-0x78]
3000bd29:	mov    BYTE PTR [ebp-0x4],0x1
3000bd2d:	call   0x30001488
3000bd32:	mov    DWORD PTR [ebp-0x7c],esi
3000bd35:	mov    BYTE PTR [ebp-0x4],0x3
3000bd39:	test   ebx,ebx
3000bd3b:	je     0x3000bd3f
3000bd3d:	mov    DWORD PTR [ebx],esi
3000bd3f:	xor    eax,eax
3000bd41:	mov    WORD PTR [ebp-0x74],ax
3000bd45:	push   0x32
3000bd47:	lea    eax,[ebp-0x74]
3000bd4a:	push   eax
3000bd4b:	push   DWORD PTR [ebp-0x8c]
3000bd51:	call   DWORD PTR ds:0x300454d0
3000bd57:	push   0x30006310
3000bd5c:	lea    ecx,[ebp-0x78]
3000bd5f:	call   0x300062d8
3000bd64:	test   eax,eax
3000bd66:	js     0x3000ed7c
3000bd6c:	lea    eax,[ebp-0x74]
3000bd6f:	push   eax
3000bd70:	lea    ecx,[ebp-0x78]
3000bd73:	call   0x300062d8
3000bd78:	test   eax,eax
3000bd7a:	js     0x3000ed7c
3000bd80:	push   0x3000be38
3000bd85:	lea    ecx,[ebp-0x78]
3000bd88:	call   0x300062d8
3000bd8d:	test   eax,eax
3000bd8f:	js     0x3000ed7c
3000bd95:	push   0x20019
3000bd9a:	push   DWORD PTR [ebp-0x78]
3000bd9d:	lea    ecx,[ebp-0x7c]
3000bda0:	push   0x80000002
3000bda5:	call   0x300061a4
3000bdaa:	test   eax,eax
3000bdac:	js     0x3000ed82
3000bdb2:	lea    eax,[ebp-0x88]
3000bdb8:	push   eax
3000bdb9:	push   0x3000be54
3000bdbe:	lea    ecx,[ebp-0x7c]
3000bdc1:	call   0x3000bc14
3000bdc6:	lea    eax,[ebp-0x80]
3000bdc9:	push   eax
3000bdca:	push   0x3000be64
3000bdcf:	lea    ecx,[ebp-0x7c]
3000bdd2:	call   0x3000bc14
3000bdd7:	mov    edi,DWORD PTR [ebp-0x88]
3000bddd:	mov    esi,DWORD PTR [ebp-0x80]
3000bde0:	test   edi,edi
3000bde2:	je     0x3000ed82
3000bde8:	test   esi,esi
3000bdea:	je     0x3000ed82
3000bdf0:	push   DWORD PTR [ebp-0x90]
3000bdf6:	mov    ecx,DWORD PTR [ebp-0x84]
3000bdfc:	push   ebx
3000bdfd:	push   DWORD PTR [ebp+0x8]
3000be00:	mov    edx,esi
3000be02:	push   edi
3000be03:	call   0x30007977
3000be08:	lea    ecx,[ebp-0x7c]
3000be0b:	mov    DWORD PTR [ebp-0x84],eax
3000be11:	call   0x300014b2
3000be16:	push   DWORD PTR [ebp-0x78]
3000be19:	mov    ebx,DWORD PTR ds:0x300454e8
3000be1f:	call   ebx
3000be21:	push   edi
3000be22:	call   ebx
3000be24:	push   esi
3000be25:	call   ebx
3000be27:	mov    eax,DWORD PTR [ebp-0x84]
3000be2d:	call   0x300045fe
3000be32:	ret    0xc
3000be35:	nop
3000be36:	nop
3000be37:	nop
3000be38:	pop    esp
3000be39:	add    BYTE PTR [ebx+0x0],dl
3000be3c:	popa   
3000be3d:	add    BYTE PTR [eax+eax*1+0x65],dh
3000be41:	add    BYTE PTR [eax+eax*1+0x6c],ch
3000be45:	add    BYTE PTR [ecx+0x0],ch
3000be48:	je     0x3000be4a
3000be4a:	add    BYTE PTR gs:[eax+eax*1+0x6c],al
3000be4f:	add    BYTE PTR [eax+eax*1+0x0],ch
3000be53:	add    BYTE PTR [eax+eax*1+0x6c],al
3000be57:	add    BYTE PTR [eax+eax*1+0x4e],ch
3000be5b:	add    BYTE PTR [ecx+0x0],ah
3000be5e:	ins    DWORD PTR es:[edi],dx
3000be5f:	add    BYTE PTR [ebp+0x0],ah
3000be62:	add    BYTE PTR [eax],al
3000be64:	push   eax
3000be65:	add    BYTE PTR [ecx+0x0],ah
3000be68:	je     0x3000be6a
3000be6a:	push   0x55000000
3000be6f:	mov    ebp,esp
3000be71:	sub    esp,0xc
3000be74:	and    DWORD PTR [ebp-0xc],0x0
3000be78:	and    DWORD PTR [ebp-0x4],0x0
3000be7c:	cmp    DWORD PTR [ebp+0x8],0x23
3000be80:	push   ebx
3000be81:	push   esi
3000be82:	je     0x3000bf54
3000be88:	mov    eax,DWORD PTR [ecx+0x4]
3000be8b:	push   0x2
3000be8d:	pop    ebx
3000be8e:	add    eax,0x44
3000be91:	push   eax
3000be92:	lea    ecx,[ebp-0x8]
3000be95:	call   0x30004340
3000be9a:	lea    eax,[ebp-0x8]
3000be9d:	lea    ecx,[ebp-0x4]
3000bea0:	push   ecx
3000bea1:	push   DWORD PTR [eax]
3000bea3:	push   DWORD PTR [ebp+0x8]
3000bea6:	call   0x3000904c
3000beab:	mov    esi,eax
3000bead:	test   bl,0x2
3000beb0:	je     0x3000bebd
3000beb2:	lea    ecx,[ebp-0x8]
3000beb5:	and    ebx,0xfffffffd
3000beb8:	call   0x300051a4
3000bebd:	test   bl,0x1
3000bec0:	jne    0x3000bf76
3000bec6:	test   esi,esi
3000bec8:	js     0x3000bedf
3000beca:	push   DWORD PTR [ebp-0x4]
3000becd:	call   0x300042e4
3000bed2:	pop    ecx
3000bed3:	mov    ecx,DWORD PTR [ebp+0xc]
3000bed6:	push   eax
3000bed7:	push   DWORD PTR [ebp-0x4]
3000beda:	call   0x3000416f
3000bedf:	push   DWORD PTR [ebp-0x4]
3000bee2:	call   DWORD PTR ds:0x300454e8
3000bee8:	mov    eax,esi
3000beea:	pop    esi
3000beeb:	pop    ebx
3000beec:	leave  
3000beed:	ret    0x8
3000bef0:	push   ebp
3000bef1:	mov    ebp,esp
3000bef3:	cmp    DWORD PTR [ecx+0x4],0x0
3000bef7:	je     0x300220e6
3000befd:	mov    eax,DWORD PTR [ebp+0x8]
3000bf00:	sub    eax,0x0
3000bf03:	je     0x3000bf24
3000bf05:	dec    eax
3000bf06:	je     0x3000bf1d
3000bf08:	dec    eax
3000bf09:	jne    0x30022111
3000bf0f:	push   DWORD PTR [ebp+0xc]
3000bf12:	push   0x23
3000bf14:	call   0x3000be6e
3000bf19:	pop    ebp
3000bf1a:	ret    0x8
3000bf1d:	push   DWORD PTR [ebp+0xc]
3000bf20:	push   0x1a
3000bf22:	jmp    0x3000bf14
3000bf24:	push   DWORD PTR [ebp+0xc]
3000bf27:	push   0x1c
3000bf29:	jmp    0x3000bf14
3000bf2b:	mov    esi,eax
3000bf2d:	test   esi,esi
3000bf2f:	js     0x30004e45
3000bf35:	push   DWORD PTR [esp+0xc]
3000bf39:	call   DWORD PTR ds:0x300454dc
3000bf3f:	mov    DWORD PTR [edi+0x8],eax
3000bf42:	jmp    0x3000685d
3000bf47:	mov    ecx,DWORD PTR [esi+0x5fc]
3000bf4d:	mov    eax,DWORD PTR [ecx]
3000bf4f:	call   DWORD PTR [eax+0x4]
3000bf52:	jmp    0x3000bf2b
3000bf54:	lea    eax,[ecx+0x30]
3000bf57:	xor    ebx,ebx
3000bf59:	push   eax
3000bf5a:	lea    ecx,[ebp-0xc]
3000bf5d:	inc    ebx
3000bf5e:	call   0x30004340
3000bf63:	jmp    0x3000be9d
3000bf68:	sub    eax,0x7
3000bf6b:	je     0x30009090
3000bf71:	jmp    0x300283bf
3000bf76:	lea    ecx,[ebp-0xc]
3000bf79:	call   0x300051a4
3000bf7e:	jmp    0x3000bec6
3000bf83:	push   0x8
3000bf85:	pop    eax
3000bf86:	mov    WORD PTR [edi],ax
3000bf89:	cmp    DWORD PTR [esi+0x5fc],0x0
3000bf90:	je     0x30004e74
3000bf96:	push   0x3004306c
3000bf9b:	lea    ecx,[esp+0x10]
3000bf9f:	call   0x30004256
3000bfa4:	lea    edx,[esp+0xc]
3000bfa8:	push   edx
3000bfa9:	push   0x2
3000bfab:	jmp    0x3000bf47
3000bfad:	cmp    DWORD PTR ds:0x300434d8,0x0
3000bfb4:	jne    0x3001f28e
3000bfba:	xor    eax,eax
3000bfbc:	ret    0x4
3000bfbf:	push   0x3000baa0
3000bfc4:	lea    ecx,[esp+0x14]
3000bfc8:	call   0x30001488
3000bfcd:	push   0x8
3000bfcf:	pop    eax
3000bfd0:	mov    WORD PTR [edi],ax
3000bfd3:	mov    eax,DWORD PTR [esp+0x10]
3000bfd7:	mov    DWORD PTR [edi+0x8],eax
3000bfda:	push   0x0
3000bfdc:	jmp    0x3000699e
3000bfe1:	push   ebp
3000bfe2:	mov    ebp,esp
3000bfe4:	push   ecx
3000bfe5:	push   esi
3000bfe6:	mov    esi,ecx
3000bfe8:	mov    eax,DWORD PTR [esi+0x4]
3000bfeb:	test   eax,eax
3000bfed:	je     0x3002229e
3000bff3:	cmp    DWORD PTR [esi+0x1c],0x8000000a
3000bffa:	je     0x300222c6
3000c000:	push   edi
3000c001:	add    eax,0x3c
3000c004:	push   eax
3000c005:	lea    ecx,[ebp-0x4]
3000c008:	call   0x30004340
3000c00d:	mov    ecx,DWORD PTR [ebp+0x8]
3000c010:	lea    eax,[ebp-0x4]
3000c013:	push   eax
3000c014:	call   0x300014c1
3000c019:	lea    ecx,[ebp-0x4]
3000c01c:	call   0x300051a4
3000c021:	mov    edi,DWORD PTR [ebp+0xc]
3000c024:	test   edi,edi
3000c026:	jne    0x3000ec35
3000c02c:	xor    eax,eax
3000c02e:	pop    edi
3000c02f:	pop    esi
3000c030:	leave  
3000c031:	ret    0x8
3000c034:	xor    ebx,ebx
3000c036:	cmp    DWORD PTR [esi+0x5fc],ebx
3000c03c:	je     0x300049f8
3000c042:	push   0x8
3000c044:	pop    eax
3000c045:	push   0x3004306c
3000c04a:	lea    ecx,[esp+0x10]
3000c04e:	mov    WORD PTR [edi],ax
3000c051:	call   0x30004256
3000c056:	mov    ecx,DWORD PTR [esi+0x5fc]
3000c05c:	push   ebx
3000c05d:	mov    eax,DWORD PTR [ecx]
3000c05f:	lea    edx,[esp+0x10]
3000c063:	push   edx
3000c064:	call   DWORD PTR [eax+0xc]
3000c067:	jmp    0x3000bf2b
3000c06c:	push   0xb
3000c06e:	pop    eax
3000c06f:	mov    WORD PTR [edi],ax
3000c072:	mov    eax,DWORD PTR [esi+0x5fc]
3000c078:	jmp    0x300070d7
3000c07d:	push   esi
3000c07e:	mov    esi,ecx
3000c080:	lea    ecx,[esi+0x250]
3000c086:	call   0x300051c8
3000c08b:	xor    eax,eax
3000c08d:	push   0x250
3000c092:	push   eax
3000c093:	push   esi
3000c094:	mov    DWORD PTR [esi+0x254],eax
3000c09a:	mov    DWORD PTR [esi+0x258],eax
3000c0a0:	call   0x300011b1
3000c0a5:	add    esp,0xc
3000c0a8:	mov    eax,esi
3000c0aa:	pop    esi
3000c0ab:	ret    
3000c0ac:	push   ebp
3000c0ad:	mov    ebp,esp
3000c0af:	push   esi
3000c0b0:	mov    esi,ecx
3000c0b2:	mov    ecx,DWORD PTR [ebp+0x8]
3000c0b5:	call   0x300051c8
3000c0ba:	cmp    DWORD PTR [esi+0x258],0x0
3000c0c1:	je     0x3000c0d7
3000c0c3:	add    esi,0x2c
3000c0c6:	push   esi
3000c0c7:	call   0x300042e4
3000c0cc:	pop    ecx
3000c0cd:	mov    ecx,DWORD PTR [ebp+0x8]
3000c0d0:	push   eax
3000c0d1:	push   esi
3000c0d2:	call   0x3000416f
3000c0d7:	mov    eax,DWORD PTR [ebp+0x8]
3000c0da:	pop    esi
3000c0db:	pop    ebp
3000c0dc:	ret    0x4
3000c0df:	nop
3000c0e0:	dec    esp
3000c0e1:	add    BYTE PTR [ecx+0x0],ch
3000c0e4:	arpl   WORD PTR [eax],ax
3000c0e6:	add    BYTE PTR gs:[esi+0x0],ch
3000c0ea:	jae    0x3000c0ec
3000c0ec:	add    BYTE PTR gs:[ebx+0x0],dh
3000c0f0:	pop    esp
3000c0f1:	add    BYTE PTR [edi],dh
3000c0f3:	add    BYTE PTR [edi],dh
3000c0f5:	add    BYTE PTR ds:0x30003500,dh
3000c0fb:	add    BYTE PTR [eax+eax*1+0x36],al
3000c0ff:	add    BYTE PTR [edx+0x0],al
3000c102:	sub    eax,0x33003600
3000c107:	add    BYTE PTR ds:0x2d003200,dh
3000c10d:	add    BYTE PTR [eax+eax*1],dh
3000c110:	inc    ebp
3000c111:	add    BYTE PTR [edi],dh
3000c113:	add    BYTE PTR [edi],dh
3000c115:	add    BYTE PTR ds:0x44003900,ch
3000c11b:	add    BYTE PTR [ecx+0x0],al
3000c11e:	xor    eax,DWORD PTR [eax]
3000c120:	sub    eax,0x33003500
3000c125:	add    BYTE PTR [edi],dh
3000c127:	add    BYTE PTR [eax+eax*1],dh
3000c12a:	xor    DWORD PTR [eax],eax
3000c12c:	cmp    DWORD PTR [eax],eax
3000c12e:	inc    esp
3000c12f:	add    BYTE PTR [esi+0x0],al
3000c132:	xor    eax,0x34003600
3000c137:	add    BYTE PTR [edx+0x0],al
3000c13a:	add    BYTE PTR [eax],al
3000c13c:	push   esi
3000c13d:	add    BYTE PTR [ecx+0x0],ch
3000c140:	jae    0x3000c142
3000c142:	jne    0x3000c144
3000c144:	popa   
3000c145:	add    BYTE PTR [eax+eax*1+0x53],ch
3000c149:	add    BYTE PTR [eax+eax*1+0x75],dh
3000c14d:	add    BYTE PTR [eax+eax*1+0x69],ah
3000c151:	add    BYTE PTR [edi+0x0],ch
3000c154:	add    BYTE PTR cs:[ecx],dh
3000c157:	add    BYTE PTR [ecx],dh
3000c159:	add    BYTE PTR [esi],ch
3000c15b:	add    BYTE PTR [eax],dh
3000c15d:	add    BYTE PTR [eax],al
3000c15f:	add    BYTE PTR [eax-0x1],dl
3000c162:	adc    eax,0x300450e4
3000c167:	and    DWORD PTR [esi+0x254],0x0
3000c16e:	jmp    0x3000c189
3000c170:	push   esi
3000c171:	mov    esi,ecx
3000c173:	mov    eax,DWORD PTR [esi+0x254]
3000c179:	and    DWORD PTR [esi+0x258],0x0
3000c180:	test   eax,eax
3000c182:	je     0x3000c189
3000c184:	cmp    eax,0xffffffff
3000c187:	jne    0x3000c160
3000c189:	pop    esi
3000c18a:	ret    
3000c18b:	push   ebp
3000c18c:	mov    ebp,esp
3000c18e:	push   ecx
3000c18f:	push   ecx
3000c190:	push   ebx
3000c191:	push   esi
3000c192:	mov    ebx,ecx
3000c194:	push   edi
3000c195:	mov    DWORD PTR [ebp-0x8],ebx
3000c198:	call   0x3000c170
3000c19d:	mov    eax,DWORD PTR [ebp+0x8]
3000c1a0:	test   eax,eax
3000c1a2:	je     0x3002488e
3000c1a8:	push   eax
3000c1a9:	lea    ecx,[ebp-0x4]
3000c1ac:	call   0x300089ae
3000c1b1:	mov    eax,DWORD PTR [ebp-0x4]
3000c1b4:	lea    ecx,[ebp-0x4]
3000c1b7:	push   DWORD PTR [eax-0xc]
3000c1ba:	call   0x30004286
3000c1bf:	push   eax
3000c1c0:	call   DWORD PTR ds:0x30045610
3000c1c6:	or     edi,0xffffffff
3000c1c9:	push   edi
3000c1ca:	lea    ecx,[ebp-0x4]
3000c1cd:	call   0x30006c8c
3000c1d2:	mov    eax,DWORD PTR [ebp-0x4]
3000c1d5:	lea    ecx,[ebp-0x4]
3000c1d8:	push   DWORD PTR [eax-0xc]
3000c1db:	call   0x30004286
3000c1e0:	push   eax
3000c1e1:	call   DWORD PTR ds:0x30045614
3000c1e7:	push   edi
3000c1e8:	lea    ecx,[ebp-0x4]
3000c1eb:	call   0x30006c8c
3000c1f0:	mov    esi,DWORD PTR [ebp-0x4]
3000c1f3:	lea    ecx,[ebx+0x2c]
3000c1f6:	mov    edx,0x104
3000c1fb:	sub    esi,ecx
3000c1fd:	lea    eax,[edx+0x7ffffefa]
3000c203:	test   eax,eax
3000c205:	je     0x3000c219
3000c207:	movzx  eax,WORD PTR [esi+ecx*1]
3000c20b:	test   ax,ax
3000c20e:	je     0x3000c219
3000c210:	mov    WORD PTR [ecx],ax
3000c213:	add    ecx,0x2
3000c216:	dec    edx
3000c217:	jne    0x3000c1fd
3000c219:	test   edx,edx
3000c21b:	je     0x30024898
3000c221:	push   ebx
3000c222:	push   DWORD PTR [ebp-0x4]
3000c225:	xor    eax,eax
3000c227:	mov    WORD PTR [ecx],ax
3000c22a:	call   DWORD PTR ds:0x300450ec
3000c230:	mov    DWORD PTR [ebx+0x254],eax
3000c236:	cmp    eax,edi
3000c238:	jne    0x3000c24d
3000c23a:	xor    esi,esi
3000c23c:	lea    ecx,[ebp-0x4]
3000c23f:	call   0x300051a4
3000c244:	pop    edi
3000c245:	mov    eax,esi
3000c247:	pop    esi
3000c248:	pop    ebx
3000c249:	leave  
3000c24a:	ret    0x4
3000c24d:	mov    esi,DWORD PTR [ebp-0x4]
3000c250:	add    ebx,0x250
3000c256:	push   0x104
3000c25b:	mov    ecx,ebx
3000c25d:	call   0x30004286
3000c262:	push   0x104
3000c267:	push   esi
3000c268:	push   eax
3000c269:	call   DWORD PTR ds:0x30045350
3000c26f:	add    esp,0xc
3000c272:	mov    ecx,ebx
3000c274:	push   edi
3000c275:	mov    esi,eax
3000c277:	call   0x30006c8c
3000c27c:	test   esi,esi
3000c27e:	je     0x300248a0
3000c284:	push   0x5c
3000c286:	push   DWORD PTR [ebx]
3000c288:	call   DWORD PTR ds:0x30045328
3000c28e:	mov    esi,eax
3000c290:	pop    ecx
3000c291:	pop    ecx
3000c292:	test   esi,esi
3000c294:	je     0x300248b5
3000c29a:	sub    esi,DWORD PTR [ebx]
3000c29c:	sar    esi,1
3000c29e:	push   0x2f
3000c2a0:	push   DWORD PTR [ebx]
3000c2a2:	call   DWORD PTR ds:0x30045328
3000c2a8:	pop    ecx
3000c2a9:	pop    ecx
3000c2aa:	test   eax,eax
3000c2ac:	jne    0x3000c2e5
3000c2ae:	test   esi,esi
3000c2b0:	js     0x3000c2d4
3000c2b2:	cmp    edi,esi
3000c2b4:	jg     0x3000c2b8
3000c2b6:	mov    edi,esi
3000c2b8:	push   edi
3000c2b9:	lea    eax,[ebp+0x8]
3000c2bc:	push   eax
3000c2bd:	mov    ecx,ebx
3000c2bf:	call   0x30008de3
3000c2c4:	push   eax
3000c2c5:	mov    ecx,ebx
3000c2c7:	call   0x300014c1
3000c2cc:	lea    ecx,[ebp+0x8]
3000c2cf:	call   0x300051a4
3000c2d4:	mov    eax,DWORD PTR [ebp-0x8]
3000c2d7:	xor    esi,esi
3000c2d9:	inc    esi
3000c2da:	mov    DWORD PTR [eax+0x258],esi
3000c2e0:	jmp    0x3000c23c
3000c2e5:	mov    edi,eax
3000c2e7:	sub    edi,DWORD PTR [ebx]
3000c2e9:	sar    edi,1
3000c2eb:	js     0x3000c2ae
3000c2ed:	jmp    0x3000c2b2
3000c2ef:	push   0x4
3000c2f1:	mov    eax,0x3003dab9
3000c2f6:	call   0x3000116a
3000c2fb:	and    DWORD PTR [ebp-0x4],0x0
3000c2ff:	and    DWORD PTR [ebp-0x10],0x0
3000c303:	mov    ecx,DWORD PTR [ebp+0x8]
3000c306:	push   0x3004306c
3000c30b:	call   0x30004256
3000c310:	and    DWORD PTR [ebp-0x4],0x0
3000c314:	push   DWORD PTR [ebp+0xc]
3000c317:	mov    DWORD PTR [ebp-0x10],0x1
3000c31e:	push   0x3000c0e0
3000c323:	push   0x3000c340
3000c328:	push   DWORD PTR [ebp+0x8]
3000c32b:	call   0x30005153
3000c330:	mov    eax,DWORD PTR [ebp+0x8]
3000c333:	add    esp,0x10
3000c336:	call   0x3000119d
3000c33b:	ret    0x8
3000c33e:	nop
3000c33f:	nop
3000c340:	and    eax,0x5c007300
3000c345:	add    BYTE PTR ds:0x35003000,ah
3000c34b:	add    BYTE PTR [eax+eax*1+0x0],ah
3000c34f:	add    BYTE PTR [edx+0x0],ch
3000c352:	mov    eax,0x3003da5c
3000c357:	call   0x3000116a
3000c35c:	mov    esi,DWORD PTR [ebp+0xc]
3000c35f:	push   DWORD PTR [ebp+0x8]
3000c362:	lea    eax,[ebp+0xc]
3000c365:	xor    edi,edi
3000c367:	push   eax
3000c368:	mov    DWORD PTR [esi],edi
3000c36a:	mov    DWORD PTR [esi+0x4],edi
3000c36d:	call   0x3000c2ef
3000c372:	mov    DWORD PTR [ebp-0x4],edi
3000c375:	lea    ecx,[ebp+0x8]
3000c378:	push   ecx
3000c379:	push   0x20219
3000c37e:	push   edi
3000c37f:	push   DWORD PTR [eax]
3000c381:	push   0x80000000
3000c386:	call   DWORD PTR ds:0x30045008
3000c38c:	mov    ebx,eax
3000c38e:	neg    ebx
3000c390:	sbb    bl,bl
3000c392:	or     DWORD PTR [ebp-0x4],0xffffffff
3000c396:	mov    ecx,DWORD PTR [ebp+0xc]
3000c399:	add    ecx,0xfffffff0
3000c39c:	call   0x30004017
3000c3a1:	inc    bl
3000c3a3:	je     0x3000c3f4
3000c3a5:	push   esi
3000c3a6:	push   edi
3000c3a7:	lea    eax,[ebp+0xc]
3000c3aa:	push   eax
3000c3ab:	push   edi
3000c3ac:	push   edi
3000c3ad:	push   DWORD PTR [ebp+0x8]
3000c3b0:	mov    DWORD PTR [ebp+0xc],edi
3000c3b3:	mov    edi,DWORD PTR ds:0x3004500c
3000c3b9:	call   edi
3000c3bb:	test   eax,eax
3000c3bd:	jne    0x3000c40d
3000c3bf:	cmp    DWORD PTR [ebp+0xc],0x3
3000c3c3:	jne    0x3000c40d
3000c3c5:	push   DWORD PTR [esi]
3000c3c7:	call   0x300089a5
3000c3cc:	pop    ecx
3000c3cd:	push   esi
3000c3ce:	push   eax
3000c3cf:	mov    DWORD PTR [esi+0x4],eax
3000c3d2:	lea    eax,[ebp+0xc]
3000c3d5:	push   eax
3000c3d6:	push   0x0
3000c3d8:	push   0x0
3000c3da:	push   DWORD PTR [ebp+0x8]
3000c3dd:	call   edi
3000c3df:	test   eax,eax
3000c3e1:	jne    0x3000c404
3000c3e3:	cmp    DWORD PTR [ebp+0xc],0x3
3000c3e7:	jne    0x3000c404
3000c3e9:	xor    edi,edi
3000c3eb:	push   DWORD PTR [ebp+0x8]
3000c3ee:	call   DWORD PTR ds:0x30045004
3000c3f4:	xor    eax,eax
3000c3f6:	cmp    DWORD PTR [esi+0x4],edi
3000c3f9:	setne  al
3000c3fc:	call   0x3000119d
3000c401:	ret    0x8
3000c404:	xor    edi,edi
3000c406:	mov    DWORD PTR [esi],edi
3000c408:	mov    DWORD PTR [esi+0x4],edi
3000c40b:	jmp    0x3000c3eb
3000c40d:	xor    edi,edi
3000c40f:	mov    DWORD PTR [esi],edi
3000c411:	jmp    0x3000c3eb
3000c413:	xor    eax,eax
3000c415:	cmp    DWORD PTR [ecx+0x258],eax
3000c41b:	je     0x3000c425
3000c41d:	mov    eax,DWORD PTR [ecx]
3000c41f:	shr    eax,0x4
3000c422:	and    eax,0x1
3000c425:	ret    
3000c426:	push   ebp
3000c427:	mov    ebp,esp
3000c429:	sub    esp,0xc
3000c42c:	and    DWORD PTR [ebp-0x4],0x0
3000c430:	push   esi
3000c431:	push   edi
3000c432:	lea    eax,[ebp-0x4]
3000c435:	push   eax
3000c436:	mov    edi,0x30008e38
3000c43b:	push   edi
3000c43c:	lea    eax,[ebp-0x8]
3000c43f:	push   eax
3000c440:	mov    esi,ecx
3000c442:	call   0x30008ea6
3000c447:	cmp    DWORD PTR [ebp-0x4],0x0
3000c44b:	jl     0x3000c47b
3000c44d:	push   DWORD PTR [ebp-0x8]
3000c450:	mov    ecx,DWORD PTR [ebp+0x8]
3000c453:	call   0x3000b906
3000c458:	lea    eax,[ebp-0x4]
3000c45b:	push   eax
3000c45c:	push   edi
3000c45d:	lea    eax,[ebp-0xc]
3000c460:	push   eax
3000c461:	mov    ecx,esi
3000c463:	call   0x30008ea6
3000c468:	push   eax
3000c469:	lea    ecx,[ebp-0x8]
3000c46c:	call   0x300014c1
3000c471:	lea    ecx,[ebp-0xc]
3000c474:	call   0x300051a4
3000c479:	jmp    0x3000c447
3000c47b:	lea    ecx,[ebp-0x8]
3000c47e:	call   0x300051a4
3000c483:	pop    edi
3000c484:	pop    esi
3000c485:	leave  
3000c486:	ret    0x4
3000c489:	push   ebp
3000c48a:	mov    ebp,esp
3000c48c:	push   ebx
3000c48d:	push   esi
3000c48e:	mov    esi,DWORD PTR [ebp+0x8]
3000c491:	push   edi
3000c492:	mov    edi,ecx
3000c494:	mov    ecx,esi
3000c496:	lea    eax,[edi+0x250]
3000c49c:	push   eax
3000c49d:	call   0x30004340
3000c4a2:	mov    eax,DWORD PTR [esi]
3000c4a4:	mov    ecx,esi
3000c4a6:	mov    eax,DWORD PTR [eax-0xc]
3000c4a9:	dec    eax
3000c4aa:	push   eax
3000c4ab:	call   0x30008e17
3000c4b0:	push   0x5c
3000c4b2:	pop    ebx
3000c4b3:	cmp    ax,bx
3000c4b6:	je     0x3000c4d4
3000c4b8:	mov    eax,DWORD PTR [esi]
3000c4ba:	mov    ecx,esi
3000c4bc:	mov    eax,DWORD PTR [eax-0xc]
3000c4bf:	dec    eax
3000c4c0:	push   eax
3000c4c1:	call   0x30008e17
3000c4c6:	cmp    ax,0x2f
3000c4ca:	je     0x3000c4d4
3000c4cc:	push   ebx
3000c4cd:	mov    ecx,esi
3000c4cf:	call   0x3000c4fd
3000c4d4:	lea    eax,[ebp+0x8]
3000c4d7:	push   eax
3000c4d8:	mov    ecx,edi
3000c4da:	call   0x3000c0ac
3000c4df:	mov    ecx,DWORD PTR [eax]
3000c4e1:	push   DWORD PTR [ecx-0xc]
3000c4e4:	push   ecx
3000c4e5:	mov    ecx,esi
3000c4e7:	call   0x30008b64
3000c4ec:	lea    ecx,[ebp+0x8]
3000c4ef:	call   0x300051a4
3000c4f4:	pop    edi
3000c4f5:	mov    eax,esi
3000c4f7:	pop    esi
3000c4f8:	pop    ebx
3000c4f9:	pop    ebp
3000c4fa:	ret    0x4
3000c4fd:	push   ebp
3000c4fe:	mov    ebp,esp
3000c500:	push   ebx
3000c501:	mov    ebx,ecx
3000c503:	push   esi
3000c504:	mov    eax,DWORD PTR [ebx]
3000c506:	push   edi
3000c507:	mov    esi,DWORD PTR [eax-0xc]
3000c50a:	lea    edi,[esi+0x1]
3000c50d:	push   edi
3000c50e:	call   0x30004286
3000c513:	mov    dx,WORD PTR [ebp+0x8]
3000c517:	push   edi
3000c518:	mov    ecx,ebx
3000c51a:	mov    WORD PTR [eax+esi*2],dx
3000c51e:	call   0x30004147
3000c523:	pop    edi
3000c524:	pop    esi
3000c525:	pop    ebx
3000c526:	pop    ebp
3000c527:	ret    0x4
3000c52a:	push   ebp
3000c52b:	mov    ebp,esp
3000c52d:	push   ecx
3000c52e:	and    DWORD PTR [ebp-0x4],0x0
3000c532:	push   esi
3000c533:	push   edi
3000c534:	push   0x9
3000c536:	mov    edi,edx
3000c538:	push   0x30009038
3000c53d:	push   edi
3000c53e:	mov    esi,ecx
3000c540:	call   DWORD PTR ds:0x300452fc
3000c546:	add    esp,0xc
3000c549:	mov    ecx,esi
3000c54b:	test   eax,eax
3000c54d:	jne    0x3000c55e
3000c54f:	lea    eax,[edi+0x12]
3000c552:	push   eax
3000c553:	call   0x3000437e
3000c558:	pop    edi
3000c559:	mov    eax,esi
3000c55b:	pop    esi
3000c55c:	leave  
3000c55d:	ret    
3000c55e:	push   edi
3000c55f:	jmp    0x3000c553
3000c561:	push   ebp
3000c562:	mov    ebp,esp
3000c564:	cmp    DWORD PTR [ebp+0x8],0x0
3000c568:	je     0x300283ab
3000c56e:	push   DWORD PTR [ebp+0x8]
3000c571:	xor    eax,eax
3000c573:	push   eax
3000c574:	push   eax
3000c575:	push   DWORD PTR [ebp+0xc]
3000c578:	push   eax
3000c579:	call   DWORD PTR ds:0x300455f8
3000c57f:	pop    ebp
3000c580:	ret    0x8
3000c583:	push   ebp
3000c584:	mov    ebp,esp
3000c586:	sub    esp,0xc
3000c589:	push   esi
3000c58a:	push   edi
3000c58b:	mov    esi,ecx
3000c58d:	call   0x3000c70f
3000c592:	mov    edi,DWORD PTR [ebp+0x8]
3000c595:	test   edi,edi
3000c597:	je     0x3000c5ab
3000c599:	push   edi
3000c59a:	call   0x300089a5
3000c59f:	pop    ecx
3000c5a0:	mov    DWORD PTR [esi+0x4],eax
3000c5a3:	test   eax,eax
3000c5a5:	je     0x3001fa75
3000c5ab:	mov    DWORD PTR [esi],edi
3000c5ad:	pop    edi
3000c5ae:	pop    esi
3000c5af:	leave  
3000c5b0:	ret    0x4
3000c5b3:	nop
3000c5b4:	jbe    0x3000c5b6
3000c5b6:	jae    0x3000c5b8
3000c5b8:	xor    BYTE PTR [eax],al
3000c5ba:	xor    BYTE PTR [eax],al
3000c5bc:	xor    BYTE PTR [eax],al
3000c5be:	xor    al,BYTE PTR [eax]
3000c5c0:	xor    al,BYTE PTR [eax]
3000c5c2:	xor    eax,DWORD PTR [eax]
3000c5c4:	add    BYTE PTR cs:[eax+eax*1+0x61],ah
3000c5c9:	add    BYTE PTR [eax+eax*1+0x0],dh
3000c5cd:	add    BYTE PTR [ebp-0x75],dl
3000c5d0:	in     al,dx
3000c5d1:	sub    esp,0x54
3000c5d4:	mov    eax,ds:0x30043050
3000c5d9:	xor    eax,ebp
3000c5db:	mov    DWORD PTR [ebp-0x4],eax
3000c5de:	push   edi
3000c5df:	mov    edi,DWORD PTR [ebp+0x8]
3000c5e2:	cmp    edi,0x10
3000c5e5:	ja     0x3000c686
3000c5eb:	push   ebx
3000c5ec:	push   esi
3000c5ed:	lea    eax,[ebp-0x54]
3000c5f0:	push   eax
3000c5f1:	push   0x20219
3000c5f6:	xor    ebx,ebx
3000c5f8:	push   ebx
3000c5f9:	push   0x3000c0e0
3000c5fe:	push   0x80000000
3000c603:	or     esi,0xffffffff
3000c606:	call   DWORD PTR ds:0x30045008
3000c60c:	test   eax,eax
3000c60e:	jne    0x3000c673
3000c610:	lea    eax,[ebp-0x50]
3000c613:	push   eax
3000c614:	push   ebx
3000c615:	lea    eax,[ebp-0x4c]
3000c618:	push   eax
3000c619:	push   ebx
3000c61a:	push   ebx
3000c61b:	push   DWORD PTR [ebp-0x54]
3000c61e:	mov    DWORD PTR [ebp-0x4c],ebx
3000c621:	mov    DWORD PTR [ebp-0x50],ebx
3000c624:	mov    ebx,DWORD PTR ds:0x3004500c
3000c62a:	call   ebx
3000c62c:	test   eax,eax
3000c62e:	jne    0x3000c66a
3000c630:	cmp    DWORD PTR [ebp-0x4c],0x3
3000c634:	jne    0x3000c66a
3000c636:	cmp    DWORD PTR [ebp-0x50],0x44
3000c63a:	jne    0x3000c66a
3000c63c:	lea    eax,[ebp-0x50]
3000c63f:	push   eax
3000c640:	lea    eax,[ebp-0x48]
3000c643:	push   eax
3000c644:	lea    eax,[ebp-0x4c]
3000c647:	push   eax
3000c648:	push   0x0
3000c64a:	push   0x0
3000c64c:	push   DWORD PTR [ebp-0x54]
3000c64f:	call   ebx
3000c651:	test   eax,eax
3000c653:	jne    0x3000c66a
3000c655:	cmp    DWORD PTR [ebp-0x4c],0x3
3000c659:	jne    0x3000c66a
3000c65b:	mov    esi,DWORD PTR [ebp+edi*4-0x48]
3000c65f:	add    esi,edi
3000c661:	lea    ecx,[edi*4+0xf5b7]
3000c668:	xor    esi,ecx
3000c66a:	push   DWORD PTR [ebp-0x54]
3000c66d:	call   DWORD PTR ds:0x30045004
3000c673:	mov    eax,esi
3000c675:	pop    esi
3000c676:	pop    ebx
3000c677:	mov    ecx,DWORD PTR [ebp-0x4]
3000c67a:	xor    ecx,ebp
3000c67c:	pop    edi
3000c67d:	call   0x3000115c
3000c682:	leave  
3000c683:	ret    0x4
3000c686:	or     eax,0xffffffff
3000c689:	jmp    0x3000c677
3000c68b:	push   ebp
3000c68c:	mov    ebp,esp
3000c68e:	push   esi
3000c68f:	push   0x8
3000c691:	call   0x30003fee
3000c696:	pop    ecx
3000c697:	push   DWORD PTR [ebp+0x8]
3000c69a:	mov    esi,eax
3000c69c:	and    DWORD PTR [esi],0x0
3000c69f:	and    DWORD PTR [esi+0x4],0x0
3000c6a3:	call   0x3000c5ce
3000c6a8:	test   eax,eax
3000c6aa:	jle    0x3000c6b3
3000c6ac:	push   esi
3000c6ad:	push   eax
3000c6ae:	call   0x3000c350
3000c6b3:	mov    eax,esi
3000c6b5:	pop    esi
3000c6b6:	pop    ebp
3000c6b7:	ret    0x4
3000c6ba:	push   0x4
3000c6bc:	mov    eax,0x3003eb18
3000c6c1:	call   0x3000116a
3000c6c6:	mov    esi,ecx
3000c6c8:	mov    DWORD PTR [ebp-0x10],esi
3000c6cb:	xor    eax,eax
3000c6cd:	mov    DWORD PTR [esi],eax
3000c6cf:	mov    DWORD PTR [esi+0x4],eax
3000c6d2:	mov    DWORD PTR [ebp-0x4],eax
3000c6d5:	mov    eax,DWORD PTR [ebp+0xc]
3000c6d8:	mov    DWORD PTR [esi+0x8],esi
3000c6db:	mov    DWORD PTR [esi+0xc],eax
3000c6de:	call   0x3000c702
3000c6e3:	cmp    DWORD PTR [ebp+0x8],0xffffffff
3000c6e7:	je     0x3000c6f8
3000c6e9:	push   DWORD PTR [ebp+0x8]
3000c6ec:	call   0x3000c68b
3000c6f1:	test   eax,eax
3000c6f3:	je     0x3000c6f8
3000c6f5:	mov    DWORD PTR [esi+0x8],eax
3000c6f8:	mov    eax,esi
3000c6fa:	call   0x3000119d
3000c6ff:	ret    0x8
3000c702:	push   esi
3000c703:	mov    esi,ecx
3000c705:	cmp    DWORD PTR [esi+0x8],esi
3000c708:	jne    0x3000c8e3
3000c70e:	pop    esi
3000c70f:	push   esi
3000c710:	mov    esi,ecx
3000c712:	push   DWORD PTR [esi+0x4]
3000c715:	call   DWORD PTR ds:0x300453d4
3000c71b:	and    DWORD PTR [esi],0x0
3000c71e:	and    DWORD PTR [esi+0x4],0x0
3000c722:	pop    ecx
3000c723:	pop    esi
3000c724:	ret    
3000c725:	push   0x4
3000c727:	mov    eax,0x3003eb18
3000c72c:	call   0x3000116a
3000c731:	mov    esi,ecx
3000c733:	mov    DWORD PTR [ebp-0x10],esi
3000c736:	and    DWORD PTR [ebp-0x4],0x0
3000c73a:	call   0x3000c702
3000c73f:	or     DWORD PTR [ebp-0x4],0xffffffff
3000c743:	mov    ecx,esi
3000c745:	call   0x3000c70f
3000c74a:	call   0x3000119d
3000c74f:	ret    
3000c750:	jle    0x3000c75a
3000c752:	movzx  eax,ax
3000c755:	or     eax,0x80070000
3000c75a:	mov    esi,eax
3000c75c:	lea    ecx,[ebp-0x20]
3000c75f:	call   0x300051ae
3000c764:	mov    eax,esi
3000c766:	jmp    0x3000c82c
3000c76b:	jg     0x3001fa4f
3000c771:	jmp    0x3000c75c
3000c773:	push   0x14
3000c775:	mov    eax,0x3003eb78
3000c77a:	call   0x30006c56
3000c77f:	mov    edi,ecx
3000c781:	call   0x3000c702
3000c786:	xor    ebx,ebx
3000c788:	mov    DWORD PTR [ebp-0x20],ebx
3000c78b:	mov    DWORD PTR [ebp-0x1c],ebx
3000c78e:	mov    DWORD PTR [ebp-0x18],ebx
3000c791:	push   0x20019
3000c796:	mov    DWORD PTR [ebp-0x4],ebx
3000c799:	push   DWORD PTR [ebp+0xc]
3000c79c:	lea    ecx,[ebp-0x20]
3000c79f:	push   DWORD PTR [ebp+0x8]
3000c7a2:	call   0x300051d9
3000c7a7:	mov    esi,eax
3000c7a9:	test   esi,esi
3000c7ab:	jne    0x3000c76b
3000c7ad:	lea    eax,[ebp-0x14]
3000c7b0:	push   eax
3000c7b1:	push   ebx
3000c7b2:	lea    eax,[ebp+0xc]
3000c7b5:	push   eax
3000c7b6:	push   ebx
3000c7b7:	push   0x3000c978
3000c7bc:	push   DWORD PTR [ebp-0x20]
3000c7bf:	mov    DWORD PTR [ebp-0x14],ebx
3000c7c2:	call   DWORD PTR ds:0x3004500c
3000c7c8:	test   eax,eax
3000c7ca:	jne    0x3000c750
3000c7cc:	cmp    DWORD PTR [ebp+0xc],0x3
3000c7d0:	jne    0x3001fa39
3000c7d6:	mov    eax,ebx
3000c7d8:	test   eax,eax
3000c7da:	jne    0x3000c750
3000c7e0:	mov    BYTE PTR [ebp-0x4],0x1
3000c7e4:	push   DWORD PTR [ebp-0x14]
3000c7e7:	mov    ecx,edi
3000c7e9:	call   0x3000c583
3000c7ee:	lea    eax,[ebp-0x14]
3000c7f1:	push   eax
3000c7f2:	push   DWORD PTR [edi+0x4]
3000c7f5:	push   ecx
3000c7f6:	lea    ecx,[ebp-0x20]
3000c7f9:	call   0x3000c945
3000c7fe:	mov    esi,eax
3000c800:	test   esi,esi
3000c802:	jne    0x3001fa41
3000c808:	mov    ecx,DWORD PTR [ebp-0x14]
3000c80b:	cmp    ecx,0x4
3000c80e:	jb     0x3000c822
3000c810:	mov    eax,DWORD PTR [edi+0x4]
3000c813:	add    ecx,0xfffffffc
3000c816:	mov    eax,DWORD PTR [ecx+eax*1]
3000c819:	mov    DWORD PTR [edi+0xc],eax
3000c81c:	cmp    ecx,DWORD PTR [edi]
3000c81e:	ja     0x3000c822
3000c820:	mov    DWORD PTR [edi],ecx
3000c822:	lea    ecx,[ebp-0x20]
3000c825:	call   0x300051ae
3000c82a:	xor    eax,eax
3000c82c:	call   0x3000119d
3000c831:	ret    0x8
3000c834:	push   0x14
3000c836:	mov    eax,0x3003e8e8
3000c83b:	call   0x3000116a
3000c840:	mov    esi,ecx
3000c842:	xor    edi,edi
3000c844:	test   edx,edx
3000c846:	je     0x3000c884
3000c848:	lea    eax,[ebp-0x20]
3000c84b:	mov    DWORD PTR [ebp-0x20],edi
3000c84e:	mov    DWORD PTR [ebp-0x1c],edi
3000c851:	mov    DWORD PTR [ebp-0x18],eax
3000c854:	mov    DWORD PTR [ebp-0x14],edi
3000c857:	push   DWORD PTR [ebp+0x8]
3000c85a:	mov    ecx,eax
3000c85c:	push   edx
3000c85d:	mov    DWORD PTR [ebp-0x4],edi
3000c860:	call   0x3000c773
3000c865:	test   eax,eax
3000c867:	js     0x3000c8a9
3000c869:	lea    eax,[ebp-0x20]
3000c86c:	push   eax
3000c86d:	mov    ecx,esi
3000c86f:	call   0x3000c8f0
3000c874:	test   al,al
3000c876:	jne    0x3000c8a9
3000c878:	or     DWORD PTR [ebp-0x4],0xffffffff
3000c87c:	lea    ecx,[ebp-0x20]
3000c87f:	call   0x3000c725
3000c884:	mov    eax,DWORD PTR [ebp+0xc]
3000c887:	test   eax,eax
3000c889:	je     0x3000c8b9
3000c88b:	cmp    WORD PTR [eax],di
3000c88e:	je     0x3000c8b9
3000c890:	push   eax
3000c891:	call   DWORD PTR ds:0x300451ec
3000c897:	xor    ecx,ecx
3000c899:	cmp    eax,0xffffffff
3000c89c:	setne  cl
3000c89f:	mov    al,cl
3000c8a1:	call   0x3000119d
3000c8a6:	ret    0x8
3000c8a9:	or     DWORD PTR [ebp-0x4],0xffffffff
3000c8ad:	lea    ecx,[ebp-0x20]
3000c8b0:	call   0x3000c725
3000c8b5:	xor    al,al
3000c8b7:	jmp    0x3000c8a1
3000c8b9:	mov    al,0x1
3000c8bb:	jmp    0x3000c8a1
3000c8bd:	push   ebp
3000c8be:	mov    ebp,esp
3000c8c0:	push   esi
3000c8c1:	mov    esi,DWORD PTR [ebp+0x8]
3000c8c4:	test   esi,esi
3000c8c6:	je     0x3000c8de
3000c8c8:	cmp    DWORD PTR [esi+0x4],0x0
3000c8cc:	je     0x3000c8d7
3000c8ce:	push   DWORD PTR [esi+0x4]
3000c8d1:	call   0x30008a26
3000c8d6:	pop    ecx
3000c8d7:	push   esi
3000c8d8:	call   0x3000460f
3000c8dd:	pop    ecx
3000c8de:	pop    esi
3000c8df:	pop    ebp
3000c8e0:	ret    0x4
3000c8e3:	push   DWORD PTR [esi+0x8]
3000c8e6:	call   0x3000c8bd
3000c8eb:	mov    DWORD PTR [esi+0x8],esi
3000c8ee:	pop    esi
3000c8ef:	ret    
3000c8f0:	push   ebp
3000c8f1:	mov    ebp,esp
3000c8f3:	mov    eax,DWORD PTR [ecx+0xc]
3000c8f6:	mov    edx,DWORD PTR [ebp+0x8]
3000c8f9:	test   eax,eax
3000c8fb:	je     0x3000c908
3000c8fd:	cmp    DWORD PTR [edx+0xc],0x0
3000c901:	je     0x3000c908
3000c903:	cmp    eax,DWORD PTR [edx+0xc]
3000c906:	jne    0x3000c93b
3000c908:	mov    ecx,DWORD PTR [ecx+0x8]
3000c90b:	mov    edx,DWORD PTR [edx+0x8]
3000c90e:	mov    eax,DWORD PTR [ecx]
3000c910:	cmp    eax,DWORD PTR [edx]
3000c912:	jne    0x3000c93b
3000c914:	test   eax,eax
3000c916:	je     0x3001fa32
3000c91c:	push   eax
3000c91d:	push   DWORD PTR [edx+0x4]
3000c920:	push   DWORD PTR [ecx+0x4]
3000c923:	call   0x3000c93f
3000c928:	add    esp,0xc
3000c92b:	test   eax,eax
3000c92d:	sete   cl
3000c930:	xor    eax,eax
3000c932:	test   cl,cl
3000c934:	sete   al
3000c937:	pop    ebp
3000c938:	ret    0x4
3000c93b:	xor    cl,cl
3000c93d:	jmp    0x3000c930
3000c93f:	jmp    DWORD PTR ds:0x300453a0
3000c945:	push   ebp
3000c946:	mov    ebp,esp
3000c948:	push   DWORD PTR [ebp+0x10]
3000c94b:	lea    eax,[ebp+0x10]
3000c94e:	push   DWORD PTR [ebp+0xc]
3000c951:	push   eax
3000c952:	push   0x0
3000c954:	push   0x3000c978
3000c959:	push   DWORD PTR [ecx]
3000c95b:	call   DWORD PTR ds:0x3004500c
3000c961:	test   eax,eax
3000c963:	jne    0x3000c972
3000c965:	mov    eax,DWORD PTR [ebp+0x10]
3000c968:	sub    eax,0x3
3000c96b:	neg    eax
3000c96d:	sbb    eax,eax
3000c96f:	and    eax,0xd
3000c972:	pop    ebp
3000c973:	ret    0xc
3000c976:	nop
3000c977:	nop
3000c978:	push   ebx
3000c979:	add    BYTE PTR [eax+0x0],dh
3000c97c:	ins    BYTE PTR es:[edi],dx
3000c97d:	add    BYTE PTR [ecx+0x0],ah
3000c980:	jae    0x3000c982
3000c982:	push   0x61004800
3000c987:	add    BYTE PTR [ebx+0x0],dh
3000c98a:	push   0x6a000000
3000c98f:	or     BYTE PTR [eax+0x33],bl
3000c992:	(bad)  [esi-0x77]
3000c995:	pop    es
3000c996:	cmp    DWORD PTR [esi+0x5fc],ebx
3000c99c:	je     0x30004e69
3000c9a2:	push   0x3004306c
3000c9a7:	lea    ecx,[esp+0x10]
3000c9ab:	call   0x30004256
3000c9b0:	lea    edx,[esp+0xc]
3000c9b4:	push   edx
3000c9b5:	push   ebx
3000c9b6:	jmp    0x3000bf47
3000c9bb:	push   0x8
3000c9bd:	pop    eax
3000c9be:	mov    WORD PTR [edi],ax
3000c9c1:	cmp    DWORD PTR [esi+0x5fc],0x0
3000c9c8:	je     0x30004e56
3000c9ce:	push   0x3004306c
3000c9d3:	lea    ecx,[esp+0x10]
3000c9d7:	call   0x30004256
3000c9dc:	lea    edx,[esp+0xc]
3000c9e0:	push   edx
3000c9e1:	push   0x1
3000c9e3:	jmp    0x3000bf47
3000c9e8:	push   ebp
3000c9e9:	mov    ebp,esp
3000c9eb:	push   ebx
3000c9ec:	mov    ebx,DWORD PTR [ebp+0xc]
3000c9ef:	push   edi
3000c9f0:	cmp    DWORD PTR [ebx],0x0
3000c9f3:	mov    edi,ecx
3000c9f5:	je     0x30020401
3000c9fb:	and    DWORD PTR [ebp+0xc],0x0
3000c9ff:	lea    eax,[ebp+0xc]
3000ca02:	push   eax
3000ca03:	push   0x1
3000ca05:	push   DWORD PTR [edi]
3000ca07:	call   DWORD PTR ds:0x3004551c
3000ca0d:	test   eax,eax
3000ca0f:	js     0x3000ca71
3000ca11:	push   esi
3000ca12:	mov    esi,DWORD PTR [ebp+0x8]
3000ca15:	cmp    esi,DWORD PTR [ebp+0xc]
3000ca18:	jl     0x3000ca6a
3000ca1a:	and    DWORD PTR [ebp+0x8],0x0
3000ca1e:	lea    eax,[ebp+0x8]
3000ca21:	push   eax
3000ca22:	push   0x1
3000ca24:	push   DWORD PTR [edi]
3000ca26:	call   DWORD PTR ds:0x30045520
3000ca2c:	test   eax,eax
3000ca2e:	js     0x3000ca71
3000ca30:	cmp    esi,DWORD PTR [ebp+0x8]
3000ca33:	jg     0x3000ca6a
3000ca35:	mov    eax,DWORD PTR [edi]
3000ca37:	sub    esi,DWORD PTR [ebp+0xc]
3000ca3a:	mov    eax,DWORD PTR [eax+0xc]
3000ca3d:	cmp    DWORD PTR [eax+esi*4],0x0
3000ca41:	jne    0x3002040b
3000ca47:	push   DWORD PTR [ebx]
3000ca49:	call   DWORD PTR ds:0x300454dc
3000ca4f:	mov    ecx,eax
3000ca51:	test   ecx,ecx
3000ca53:	je     0x30020419
3000ca59:	mov    eax,DWORD PTR [edi]
3000ca5b:	mov    eax,DWORD PTR [eax+0xc]
3000ca5e:	mov    DWORD PTR [eax+esi*4],ecx
3000ca61:	xor    eax,eax
3000ca63:	pop    esi
3000ca64:	pop    edi
3000ca65:	pop    ebx
3000ca66:	pop    ebp
3000ca67:	ret    0xc
3000ca6a:	mov    eax,0x80070057
3000ca6f:	jmp    0x3000ca63
3000ca71:	push   eax
3000ca72:	call   0x3002ae0b
3000ca77:	int3   
3000ca78:	push   0x8
3000ca7a:	pop    eax
3000ca7b:	push   0x3000ca84
3000ca80:	jmp    0x3000ca9a
3000ca82:	nop
3000ca83:	nop
3000ca84:	jae    0x3000ca86
3000ca86:	jns    0x3000ca88
3000ca88:	jae    0x3000ca8a
3000ca8a:	je     0x3000ca8c
3000ca8c:	add    BYTE PTR gs:[ebp+0x0],ch
3000ca90:	add    BYTE PTR [eax],al
3000ca92:	push   0x8
3000ca94:	pop    eax
3000ca95:	push   0x3000c13c
3000ca9a:	mov    WORD PTR [edi],ax
3000ca9d:	call   DWORD PTR ds:0x300454dc
3000caa3:	jmp    0x300060bc
3000caa8:	xor    ebx,ebx
3000caaa:	cmp    DWORD PTR [esi+0x5fc],ebx
3000cab0:	je     0x300049f8
3000cab6:	push   0x3004306c
3000cabb:	lea    ecx,[esp+0x10]
3000cabf:	call   0x30004256
3000cac4:	mov    ecx,DWORD PTR [esi+0x5fc]
3000caca:	lea    edx,[esp+0xc]
3000cace:	mov    eax,DWORD PTR [ecx]
3000cad0:	push   edx
3000cad1:	call   DWORD PTR [eax+0x8]
3000cad4:	mov    esi,eax
3000cad6:	test   esi,esi
3000cad8:	js     0x30004e45
3000cade:	push   0x8
3000cae0:	pop    eax
3000cae1:	push   DWORD PTR [esp+0xc]
3000cae5:	lea    ecx,[esp+0x2c]
3000cae9:	mov    WORD PTR [edi],ax
3000caec:	call   0x30001488
3000caf1:	mov    ecx,DWORD PTR [eax]
3000caf3:	mov    DWORD PTR [eax],ebx
3000caf5:	push   DWORD PTR [esp+0x28]
3000caf9:	jmp    0x3000686e
3000cafe:	push   ebp
3000caff:	mov    ebp,esp
3000cb01:	lea    eax,[ecx+0x44]
3000cb04:	mov    ecx,DWORD PTR [ebp+0x8]
3000cb07:	push   eax
3000cb08:	call   0x300014c1
3000cb0d:	xor    eax,eax
3000cb0f:	pop    ebp
3000cb10:	ret    0x4
3000cb13:	xor    ebx,ebx
3000cb15:	cmp    DWORD PTR [esi+0x5fc],ebx
3000cb1b:	je     0x300049f8
3000cb21:	push   0x3004306c
3000cb26:	lea    ecx,[esp+0x10]
3000cb2a:	call   0x30004256
3000cb2f:	mov    ecx,DWORD PTR [esi+0x5fc]
3000cb35:	lea    edx,[esp+0xc]
3000cb39:	mov    eax,DWORD PTR [ecx]
3000cb3b:	push   edx
3000cb3c:	call   DWORD PTR [eax+0x1c]
3000cb3f:	mov    esi,eax
3000cb41:	test   esi,esi
3000cb43:	js     0x30004e45
3000cb49:	push   0x8
3000cb4b:	pop    eax
3000cb4c:	push   DWORD PTR [esp+0xc]
3000cb50:	lea    ecx,[esp+0x1c]
3000cb54:	mov    WORD PTR [edi],ax
3000cb57:	call   0x30001488
3000cb5c:	mov    ecx,DWORD PTR [eax]
3000cb5e:	mov    DWORD PTR [eax],ebx
3000cb60:	push   DWORD PTR [esp+0x18]
3000cb64:	jmp    0x3000686e
3000cb69:	push   ebp
3000cb6a:	mov    ebp,esp
3000cb6c:	lea    eax,[ecx+0x48]
3000cb6f:	mov    ecx,DWORD PTR [ebp+0x8]
3000cb72:	push   eax
3000cb73:	call   0x300014c1
3000cb78:	xor    eax,eax
3000cb7a:	pop    ebp
3000cb7b:	ret    0x4
3000cb7e:	mov    ebx,DWORD PTR [esi+0x5fc]
3000cb84:	test   ebx,ebx
3000cb86:	je     0x300049f8
3000cb8c:	push   ecx
3000cb8d:	lea    ecx,[esp+0x34]
3000cb91:	call   0x3000704d
3000cb96:	mov    eax,DWORD PTR [ebx]
3000cb98:	lea    ecx,[esp+0x30]
3000cb9c:	push   ecx
3000cb9d:	mov    ecx,ebx
3000cb9f:	call   DWORD PTR [eax+0x14]
3000cba2:	mov    esi,eax
3000cba4:	test   esi,esi
3000cba6:	js     0x300053db
3000cbac:	push   ecx
3000cbad:	push   DWORD PTR [esp+0x3c]
3000cbb1:	xor    ebx,ebx
3000cbb3:	lea    ecx,[esp+0x14]
3000cbb7:	mov    DWORD PTR [esp+0x14],ebx
3000cbbb:	call   0x300070e4
3000cbc0:	mov    eax,DWORD PTR [esp+0x30]
3000cbc4:	mov    DWORD PTR [esp+0x10],eax
3000cbc8:	mov    esi,ebx
3000cbca:	test   eax,eax
3000cbcc:	je     0x3000716d
3000cbd2:	jmp    0x30007131
3000cbd7:	push   ebp
3000cbd8:	mov    ebp,esp
3000cbda:	and    esp,0xfffffff8
3000cbdd:	sub    esp,0x290
3000cbe3:	mov    eax,ds:0x30043050
3000cbe8:	xor    eax,esp
3000cbea:	mov    DWORD PTR [esp+0x28c],eax
3000cbf1:	push   esi
3000cbf2:	push   edi
3000cbf3:	mov    edi,DWORD PTR [ebp+0x8]
3000cbf6:	mov    esi,ecx
3000cbf8:	mov    ecx,edi
3000cbfa:	call   0x30007014
3000cbff:	push   ecx
3000cc00:	lea    ecx,[esp+0x1c]
3000cc04:	call   0x3000704d
3000cc09:	lea    eax,[esp+0x18]
3000cc0d:	push   eax
3000cc0e:	lea    ecx,[esi+0x40]
3000cc11:	call   0x3000c426
3000cc16:	mov    eax,DWORD PTR [esp+0x18]
3000cc1a:	mov    DWORD PTR [esp+0x10],eax
3000cc1e:	test   eax,eax
3000cc20:	je     0x3000ccaf
3000cc26:	lea    eax,[esp+0x10]
3000cc2a:	push   eax
3000cc2b:	call   0x30008fa7
3000cc30:	push   eax
3000cc31:	lea    ecx,[esp+0x10]
3000cc35:	call   0x30004340
3000cc3a:	lea    ecx,[esp+0xc]
3000cc3e:	call   0x30008e3c
3000cc43:	lea    ecx,[esp+0x30]
3000cc47:	call   0x3000c07d
3000cc4c:	push   DWORD PTR [esp+0xc]
3000cc50:	lea    ecx,[esp+0x34]
3000cc54:	call   0x3000c18b
3000cc59:	test   eax,eax
3000cc5b:	je     0x3000cc86
3000cc5d:	lea    ecx,[esp+0x30]
3000cc61:	call   0x3000c413
3000cc66:	test   eax,eax
3000cc68:	je     0x3000cc86
3000cc6a:	lea    eax,[esp+0x14]
3000cc6e:	push   eax
3000cc6f:	call   0x3000c489
3000cc74:	push   DWORD PTR [eax]
3000cc76:	mov    ecx,edi
3000cc78:	call   0x3000b906
3000cc7d:	lea    ecx,[esp+0x14]
3000cc81:	call   0x300051a4
3000cc86:	lea    ecx,[esp+0x30]
3000cc8a:	call   0x3000c170
3000cc8f:	lea    ecx,[esp+0x280]
3000cc96:	call   0x300051a4
3000cc9b:	lea    ecx,[esp+0xc]
3000cc9f:	call   0x300051a4
3000cca4:	cmp    DWORD PTR [esp+0x10],0x0
3000cca9:	jne    0x3000cc26
3000ccaf:	lea    ecx,[esp+0x18]
3000ccb3:	call   0x30007014
3000ccb8:	mov    ecx,DWORD PTR [esp+0x294]
3000ccbf:	pop    edi
3000ccc0:	pop    esi
3000ccc1:	xor    ecx,esp
3000ccc3:	xor    eax,eax
3000ccc5:	call   0x3000115c
3000ccca:	mov    esp,ebp
3000cccc:	pop    ebp
3000cccd:	ret    0x4
3000ccd0:	push   0x22c
3000ccd5:	mov    eax,0x3003e954
3000ccda:	call   0x300045c8
3000ccdf:	mov    esi,ecx
3000cce1:	mov    DWORD PTR [ebp-0x228],esi
3000cce7:	mov    edx,esi
3000cce9:	lea    ecx,[ebp-0x224]
3000ccef:	call   0x3000c52a
3000ccf4:	push   DWORD PTR [ebp+0xc]
3000ccf7:	and    DWORD PTR [ebp-0x4],0x0
3000ccfb:	push   DWORD PTR [ebp+0x8]
3000ccfe:	lea    ecx,[ebp-0x238]
3000cd04:	call   0x3000c6ba
3000cd09:	xor    ebx,ebx
3000cd0b:	inc    ebx
3000cd0c:	push   0x3004306c
3000cd11:	lea    ecx,[ebp-0x220]
3000cd17:	mov    BYTE PTR [ebp-0x4],bl
3000cd1a:	call   0x30004256
3000cd1f:	push   0x1a
3000cd21:	lea    eax,[ebp-0x218]
3000cd27:	mov    BYTE PTR [ebp-0x4],0x2
3000cd2b:	mov    edi,DWORD PTR [ebp-0x224]
3000cd31:	push   eax
3000cd32:	call   0x3000c561
3000cd37:	test   eax,eax
3000cd39:	js     0x3000ce61
3000cd3f:	push   0x104
3000cd44:	lea    ecx,[ebp-0x220]
3000cd4a:	call   0x30004286
3000cd4f:	push   edi
3000cd50:	lea    ecx,[ebp-0x218]
3000cd56:	push   ecx
3000cd57:	push   eax
3000cd58:	call   DWORD PTR ds:0x30045644
3000cd5e:	push   0xffffffff
3000cd60:	lea    ecx,[ebp-0x220]
3000cd66:	call   0x30006c8c
3000cd6b:	push   0x3000c5b4
3000cd70:	lea    ecx,[ebp-0x220]
3000cd76:	call   0x3000b940
3000cd7b:	mov    edi,DWORD PTR [ebp-0x220]
3000cd81:	push   edi
3000cd82:	push   esi
3000cd83:	mov    edx,0x80000001
3000cd88:	lea    ecx,[ebp-0x238]
3000cd8e:	call   0x3000c834
3000cd93:	test   al,al
3000cd95:	jne    0x3001f7ca
3000cd9b:	push   0x3004306c
3000cda0:	lea    ecx,[ebp-0x21c]
3000cda6:	call   0x30004256
3000cdab:	push   0x23
3000cdad:	lea    eax,[ebp-0x218]
3000cdb3:	mov    BYTE PTR [ebp-0x4],0x3
3000cdb7:	mov    esi,DWORD PTR [ebp-0x224]
3000cdbd:	push   eax
3000cdbe:	call   0x3000c561
3000cdc3:	test   eax,eax
3000cdc5:	js     0x3000ce6c
3000cdcb:	push   0x104
3000cdd0:	lea    ecx,[ebp-0x21c]
3000cdd6:	call   0x30004286
3000cddb:	push   esi
3000cddc:	lea    ecx,[ebp-0x218]
3000cde2:	push   ecx
3000cde3:	push   eax
3000cde4:	call   DWORD PTR ds:0x30045644
3000cdea:	push   0xffffffff
3000cdec:	lea    ecx,[ebp-0x21c]
3000cdf2:	call   0x30006c8c
3000cdf7:	push   0x3000c5b4
3000cdfc:	lea    ecx,[ebp-0x21c]
3000ce02:	call   0x3000b940
3000ce07:	mov    esi,DWORD PTR [ebp-0x21c]
3000ce0d:	push   esi
3000ce0e:	push   DWORD PTR [ebp-0x228]
3000ce14:	mov    edx,0x80000002
3000ce19:	lea    ecx,[ebp-0x238]
3000ce1f:	call   0x3000c834
3000ce24:	test   al,al
3000ce26:	je     0x3000ce2a
3000ce28:	xor    bl,bl
3000ce2a:	lea    ecx,[esi-0x10]
3000ce2d:	call   0x30004017
3000ce32:	lea    ecx,[edi-0x10]
3000ce35:	call   0x30004017
3000ce3a:	lea    ecx,[ebp-0x238]
3000ce40:	mov    BYTE PTR [ebp-0x4],0x0
3000ce44:	call   0x3000c725
3000ce49:	mov    ecx,DWORD PTR [ebp-0x224]
3000ce4f:	add    ecx,0xfffffff0
3000ce52:	call   0x30004017
3000ce57:	mov    al,bl
3000ce59:	call   0x300045fe
3000ce5e:	ret    0x8
3000ce61:	mov    edi,DWORD PTR [ebp-0x220]
3000ce67:	jmp    0x3000cd9b
3000ce6c:	mov    esi,DWORD PTR [ebp-0x21c]
3000ce72:	jmp    0x3000ce2a
3000ce74:	push   ebp
3000ce75:	mov    ebp,esp
3000ce77:	and    esp,0xfffffff8
3000ce7a:	push   0xffffffff
3000ce7c:	push   0x3003e040
3000ce81:	mov    eax,fs:0x0
3000ce87:	push   eax
3000ce88:	sub    esp,0x40
3000ce8b:	push   ebx
3000ce8c:	push   esi
3000ce8d:	push   edi
3000ce8e:	mov    eax,ds:0x30043050
3000ce93:	xor    eax,esp
3000ce95:	push   eax
3000ce96:	lea    eax,[esp+0x50]
3000ce9a:	mov    fs:0x0,eax
3000cea0:	mov    edi,ecx
3000cea2:	cmp    DWORD PTR ds:0x300434c8,0x0
3000cea9:	jne    0x3001eb8a
3000ceaf:	push   DWORD PTR [ebp+0xc]
3000ceb2:	mov    ecx,DWORD PTR ds:0x300434dc
3000ceb8:	push   DWORD PTR [edi+0x610]
3000cebe:	call   0x3000ccd0
3000cec3:	test   al,al
3000cec5:	jne    0x3001eb8a
3000cecb:	mov    ecx,DWORD PTR [esp+0x50]
3000cecf:	mov    DWORD PTR fs:0x0,ecx
3000ced6:	pop    ecx
3000ced7:	pop    edi
3000ced8:	pop    esi
3000ced9:	pop    ebx
3000ceda:	mov    esp,ebp
3000cedc:	pop    ebp
3000cedd:	ret    0x8
3000cee0:	push   0x8
3000cee2:	mov    eax,0x30040d7c
3000cee7:	call   0x3000116a
3000ceec:	xor    esi,esi
3000ceee:	mov    eax,esi
3000cef0:	mov    DWORD PTR [ebp-0x10],eax
3000cef3:	mov    DWORD PTR [ebp-0x4],esi
3000cef6:	test   ecx,ecx
3000cef8:	je     0x3000cf2c
3000cefa:	mov    eax,DWORD PTR [ecx]
3000cefc:	lea    edx,[ebp-0x10]
3000ceff:	push   edx
3000cf00:	push   0x3000cf44
3000cf05:	push   0x3000cf54
3000cf0a:	push   ecx
3000cf0b:	call   DWORD PTR [eax+0xc]
3000cf0e:	test   eax,eax
3000cf10:	js     0x3000cf29
3000cf12:	mov    eax,DWORD PTR [ebp-0x10]
3000cf15:	lea    edx,[ebp-0x14]
3000cf18:	mov    DWORD PTR [ebp-0x14],esi
3000cf1b:	mov    ecx,DWORD PTR [eax]
3000cf1d:	push   edx
3000cf1e:	push   eax
3000cf1f:	call   DWORD PTR [ecx+0xc]
3000cf22:	test   eax,eax
3000cf24:	js     0x3000cf29
3000cf26:	mov    esi,DWORD PTR [ebp-0x14]
3000cf29:	mov    eax,DWORD PTR [ebp-0x10]
3000cf2c:	or     DWORD PTR [ebp-0x4],0xffffffff
3000cf30:	test   eax,eax
3000cf32:	je     0x3000cf3a
3000cf34:	mov    ecx,DWORD PTR [eax]
3000cf36:	push   eax
3000cf37:	call   DWORD PTR [ecx+0x8]
3000cf3a:	mov    eax,esi
3000cf3c:	call   0x3000119d
3000cf41:	ret    
3000cf42:	nop
3000cf43:	nop
3000cf44:	xor    DWORD PTR [eax+0x2be2c2e],esp
3000cf4a:	rcl    DWORD PTR [ecx],1
3000cf4c:	mov    WORD PTR [ebp-0x3db04000],es
3000cf52:	stos   BYTE PTR es:[edi],al
3000cf53:	mov    DWORD PTR [ecx],esi
3000cf55:	mov    al,ds:0x2be2c2e
3000cf5a:	rcl    DWORD PTR [ecx],1
3000cf5c:	mov    WORD PTR [ebp-0x3db04000],es
3000cf62:	stos   BYTE PTR es:[edi],al
3000cf63:	mov    DWORD PTR [ebx-0x717f3b3],ecx
3000cf69:	jne    0x3000cf6a
3000cf6b:	push   DWORD PTR [ebx]
3000cf6d:	shr    cl,0x33
3000cf70:	add    DWORD PTR [eax],eax
3000cf72:	add    BYTE PTR [ebp-0x75],dl
3000cf75:	in     al,dx
3000cf76:	mov    eax,DWORD PTR [ebp+0x8]
3000cf79:	sub    esp,0xc
3000cf7c:	test   eax,eax
3000cf7e:	je     0x300280c2
3000cf84:	mov    edx,DWORD PTR [ebp+0xc]
3000cf87:	push   ebx
3000cf88:	push   esi
3000cf89:	mov    esi,DWORD PTR [ebp+0x10]
3000cf8c:	xor    ecx,ecx
3000cf8e:	xor    ebx,ebx
3000cf90:	push   edi
3000cf91:	mov    edi,DWORD PTR [ebp+0x14]
3000cf94:	mov    DWORD PTR [ebp-0x4],ecx
3000cf97:	test   edx,edx
3000cf99:	je     0x3000d044
3000cf9f:	movzx  eax,WORD PTR [eax]
3000cfa2:	and    DWORD PTR [ebp-0xc],0x0
3000cfa6:	dec    edx
3000cfa7:	mov    DWORD PTR [ebp+0xc],edx
3000cfaa:	xor    edx,edx
3000cfac:	mov    DWORD PTR [ebp+0x14],eax
3000cfaf:	mov    DWORD PTR [ebp-0x8],edx
3000cfb2:	sub    eax,0x22
3000cfb5:	je     0x3000d6e4
3000cfbb:	sub    eax,0x4
3000cfbe:	je     0x30027f82
3000cfc4:	dec    eax
3000cfc5:	je     0x3000d6e4
3000cfcb:	sub    eax,0x15
3000cfce:	je     0x30027f44
3000cfd4:	dec    eax
3000cfd5:	dec    eax
3000cfd6:	je     0x30027f44
3000cfdc:	mov    ecx,DWORD PTR [ebp+0x8]
3000cfdf:	mov    DWORD PTR [ebp+0x10],0xd800
3000cfe6:	movzx  eax,WORD PTR [ecx]
3000cfe9:	mov    ecx,DWORD PTR [ebp-0x4]
3000cfec:	cmp    ax,WORD PTR [ebp+0x10]
3000cff0:	jae    0x30027fbc
3000cff6:	test   bx,bx
3000cff9:	jne    0x30027ff6
3000cfff:	mov    eax,DWORD PTR [ebp+0x8]
3000d002:	movzx  eax,WORD PTR [eax]
3000d005:	cmp    eax,0x20
3000d008:	jb     0x3000d799
3000d00e:	cmp    eax,0x7e
3000d011:	ja     0x3000d799
3000d017:	test   esi,esi
3000d019:	jne    0x3000d76a
3000d01f:	xor    edx,edx
3000d021:	inc    edx
3000d022:	add    DWORD PTR [ebp+0x8],0x2
3000d026:	mov    eax,DWORD PTR [ebp+0x8]
3000d029:	add    ecx,edx
3000d02b:	sub    edi,edx
3000d02d:	mov    edx,DWORD PTR [ebp+0xc]
3000d030:	mov    DWORD PTR [ebp-0x4],ecx
3000d033:	test   edx,edx
3000d035:	jne    0x3000cf9f
3000d03b:	test   bx,bx
3000d03e:	jne    0x30028082
3000d044:	test   esi,esi
3000d046:	jne    0x3000d77d
3000d04c:	mov    eax,ecx
3000d04e:	pop    edi
3000d04f:	pop    esi
3000d050:	pop    ebx
3000d051:	leave  
3000d052:	ret    0x14
3000d055:	push   ebp
3000d056:	mov    ebp,esp
3000d058:	push   edi
3000d059:	mov    edi,DWORD PTR [ebp+0x8]
3000d05c:	test   edi,edi
3000d05e:	je     0x3000cf64
3000d064:	push   esi
3000d065:	mov    esi,edi
3000d067:	xor    edx,edx
3000d069:	lea    ecx,[esi+0x2]
3000d06c:	mov    ax,WORD PTR [esi]
3000d06f:	add    esi,0x2
3000d072:	cmp    ax,dx
3000d075:	jne    0x3000d06c
3000d077:	push   ebx
3000d078:	push   0x1
3000d07a:	push   edx
3000d07b:	sub    esi,ecx
3000d07d:	push   edx
3000d07e:	sar    esi,1
3000d080:	push   esi
3000d081:	push   edi
3000d082:	call   0x3000cf73
3000d087:	mov    ebx,eax
3000d089:	cmp    ebx,esi
3000d08b:	jg     0x3000d73e
3000d091:	push   edi
3000d092:	call   0x300042e4
3000d097:	pop    ecx
3000d098:	mov    ecx,DWORD PTR [ebp+0xc]
3000d09b:	push   eax
3000d09c:	push   edi
3000d09d:	call   0x3000416f
3000d0a2:	xor    eax,eax
3000d0a4:	pop    ebx
3000d0a5:	pop    esi
3000d0a6:	pop    edi
3000d0a7:	pop    ebp
3000d0a8:	ret    0x8
3000d0ab:	push   0x7c
3000d0ad:	mov    eax,0x3003d60d
3000d0b2:	call   0x300045c8
3000d0b7:	and    DWORD PTR [ebp-0x4],0x0
3000d0bb:	mov    eax,DWORD PTR [ebp+0x8]
3000d0be:	mov    esi,DWORD PTR [ebp+0x14]
3000d0c1:	mov    edi,DWORD PTR [ebp+0x18]
3000d0c4:	mov    ebx,DWORD PTR [ebp+0x24]
3000d0c7:	and    DWORD PTR [ebp-0x84],0x0
3000d0ce:	mov    DWORD PTR [ebp-0x64],eax
3000d0d1:	mov    DWORD PTR [ebp-0x88],eax
3000d0d7:	mov    eax,DWORD PTR [ebp+0x1c]
3000d0da:	mov    DWORD PTR [ebp-0x80],eax
3000d0dd:	mov    eax,DWORD PTR [ebp+0x20]
3000d0e0:	mov    DWORD PTR [ebp-0x68],eax
3000d0e3:	mov    eax,DWORD PTR [ebp+0x38]
3000d0e6:	push   0x3004306c
3000d0eb:	lea    ecx,[ebp-0x7c]
3000d0ee:	mov    DWORD PTR [ebp-0x6c],eax
3000d0f1:	call   0x30004256
3000d0f6:	mov    DWORD PTR [ebp-0x4],0x2
3000d0fd:	lea    eax,[ebp-0x7c]
3000d100:	push   eax
3000d101:	push   esi
3000d102:	call   0x3000d055
3000d107:	mov    esi,0x3004306c
3000d10c:	push   esi
3000d10d:	lea    ecx,[ebp-0x70]
3000d110:	call   0x30004256
3000d115:	mov    BYTE PTR [ebp-0x4],0x4
3000d119:	lea    eax,[ebp-0x70]
3000d11c:	push   eax
3000d11d:	push   edi
3000d11e:	call   0x3000d055
3000d123:	push   esi
3000d124:	lea    ecx,[ebp-0x74]
3000d127:	call   0x30004256
3000d12c:	mov    BYTE PTR [ebp-0x4],0x6
3000d130:	lea    eax,[ebp-0x74]
3000d133:	push   eax
3000d134:	push   ebx
3000d135:	call   0x3000d055
3000d13a:	mov    ebx,DWORD PTR [ebp-0x64]
3000d13d:	push   esi
3000d13e:	mov    ecx,ebx
3000d140:	call   0x30004256
3000d145:	mov    BYTE PTR [ebp-0x4],0x6
3000d149:	push   0x400
3000d14e:	mov    ecx,ebx
3000d150:	mov    DWORD PTR [ebp-0x84],0x1
3000d15a:	call   0x30004286
3000d15f:	mov    esi,0x3000d374
3000d164:	push   esi
3000d165:	call   0x300042e4
3000d16a:	pop    ecx
3000d16b:	push   eax
3000d16c:	push   esi
3000d16d:	mov    ecx,ebx
3000d16f:	call   0x30008b64
3000d174:	mov    esi,0x3000d38c
3000d179:	push   esi
3000d17a:	call   0x300042e4
3000d17f:	pop    ecx
3000d180:	push   eax
3000d181:	push   esi
3000d182:	mov    ecx,ebx
3000d184:	call   0x30008b64
3000d189:	push   DWORD PTR [ebp+0xc]
3000d18c:	push   0x3000d36c
3000d191:	push   ebx
3000d192:	call   0x3000b9f3
3000d197:	mov    esi,0x3000d3a8
3000d19c:	push   esi
3000d19d:	call   0x300042e4
3000d1a2:	add    esp,0x10
3000d1a5:	push   eax
3000d1a6:	push   esi
3000d1a7:	mov    ecx,ebx
3000d1a9:	call   0x30008b64
3000d1ae:	mov    esi,0x3000d3c0
3000d1b3:	push   esi
3000d1b4:	call   0x300042e4
3000d1b9:	pop    ecx
3000d1ba:	push   eax
3000d1bb:	push   esi
3000d1bc:	mov    ecx,ebx
3000d1be:	call   0x30008b64
3000d1c3:	push   0x3004306c
3000d1c8:	lea    ecx,[ebp-0x78]
3000d1cb:	call   0x30004256
3000d1d0:	mov    BYTE PTR [ebp-0x4],0x9
3000d1d4:	movzx  eax,WORD PTR [ebp+0x36]
3000d1d8:	push   eax
3000d1d9:	movzx  eax,WORD PTR [ebp+0x34]
3000d1dd:	push   eax
3000d1de:	movzx  eax,WORD PTR [ebp+0x32]
3000d1e2:	push   eax
3000d1e3:	movzx  eax,WORD PTR [ebp+0x30]
3000d1e7:	push   eax
3000d1e8:	movzx  eax,WORD PTR [ebp+0x2e]
3000d1ec:	push   eax
3000d1ed:	movzx  eax,WORD PTR [ebp+0x2a]
3000d1f1:	push   eax
3000d1f2:	movzx  eax,WORD PTR [ebp+0x28]
3000d1f6:	push   eax
3000d1f7:	lea    eax,[ebp-0x78]
3000d1fa:	push   0x3000d3d8
3000d1ff:	push   eax
3000d200:	call   0x30005153
3000d205:	mov    esi,DWORD PTR [ebp-0x78]
3000d208:	add    esp,0x24
3000d20b:	push   DWORD PTR [esi-0xc]
3000d20e:	mov    ecx,ebx
3000d210:	push   esi
3000d211:	call   0x30008b64
3000d216:	mov    BYTE PTR [ebp-0x4],0x6
3000d21a:	lea    ecx,[esi-0x10]
3000d21d:	call   0x30004017
3000d222:	mov    esi,0x3000d41c
3000d227:	push   esi
3000d228:	call   0x300042e4
3000d22d:	pop    ecx
3000d22e:	push   eax
3000d22f:	push   esi
3000d230:	mov    esi,ebx
3000d232:	mov    ecx,esi
3000d234:	call   0x30008b64
3000d239:	mov    edi,0x3000d430
3000d23e:	push   edi
3000d23f:	call   0x300042e4
3000d244:	pop    ecx
3000d245:	push   eax
3000d246:	push   edi
3000d247:	mov    ecx,esi
3000d249:	call   0x30008b64
3000d24e:	mov    eax,DWORD PTR [ebp+0x10]
3000d251:	dec    eax
3000d252:	je     0x3000d6bc
3000d258:	dec    eax
3000d259:	je     0x3000d6b2
3000d25f:	dec    eax
3000d260:	jne    0x3000d277
3000d262:	mov    edi,0x3000d448
3000d267:	push   edi
3000d268:	call   0x300042e4
3000d26d:	pop    ecx
3000d26e:	push   eax
3000d26f:	push   edi
3000d270:	mov    ecx,esi
3000d272:	call   0x30008b64
3000d277:	mov    edi,0x3000d460
3000d27c:	push   edi
3000d27d:	call   0x300042e4
3000d282:	pop    ecx
3000d283:	push   eax
3000d284:	push   edi
3000d285:	mov    ecx,esi
3000d287:	call   0x30008b64
3000d28c:	mov    edi,0x3000d474
3000d291:	push   edi
3000d292:	call   0x300042e4
3000d297:	pop    ecx
3000d298:	push   eax
3000d299:	push   edi
3000d29a:	mov    ecx,esi
3000d29c:	call   0x30008b64
3000d2a1:	mov    edi,DWORD PTR [ebp-0x7c]
3000d2a4:	mov    ecx,esi
3000d2a6:	push   DWORD PTR [edi-0xc]
3000d2a9:	push   edi
3000d2aa:	call   0x30008b64
3000d2af:	mov    ebx,0x3000d490
3000d2b4:	push   ebx
3000d2b5:	call   0x300042e4
3000d2ba:	pop    ecx
3000d2bb:	push   eax
3000d2bc:	push   ebx
3000d2bd:	mov    ecx,esi
3000d2bf:	call   0x30008b64
3000d2c4:	mov    ebx,0x3000d4a8
3000d2c9:	push   ebx
3000d2ca:	call   0x300042e4
3000d2cf:	pop    ecx
3000d2d0:	push   eax
3000d2d1:	push   ebx
3000d2d2:	mov    ecx,esi
3000d2d4:	call   0x30008b64
3000d2d9:	mov    ebx,DWORD PTR [ebp-0x70]
3000d2dc:	mov    ecx,esi
3000d2de:	push   DWORD PTR [ebx-0xc]
3000d2e1:	push   ebx
3000d2e2:	call   0x30008b64
3000d2e7:	push   0x3000d4cc
3000d2ec:	call   0x300042e4
3000d2f1:	pop    ecx
3000d2f2:	push   eax
3000d2f3:	push   0x3000d4cc
3000d2f8:	mov    ecx,esi
3000d2fa:	call   0x30008b64
3000d2ff:	cmp    DWORD PTR [ebp-0x80],0x0
3000d303:	jne    0x3000d61b
3000d309:	mov    eax,DWORD PTR [ebp-0x68]
3000d30c:	test   eax,eax
3000d30e:	jne    0x3000d6a4
3000d314:	mov    esi,DWORD PTR [ebp-0x74]
3000d317:	cmp    DWORD PTR [esi-0xc],0x0
3000d31b:	jne    0x30027e5b
3000d321:	push   0x3000d4f0
3000d326:	call   0x300042e4
3000d32b:	pop    ecx
3000d32c:	mov    ecx,DWORD PTR [ebp-0x64]
3000d32f:	push   eax
3000d330:	push   0x3000d4f0
3000d335:	call   0x30008b64
3000d33a:	mov    BYTE PTR [ebp-0x4],0x4
3000d33e:	lea    ecx,[esi-0x10]
3000d341:	call   0x30004017
3000d346:	mov    BYTE PTR [ebp-0x4],0x2
3000d34a:	lea    ecx,[ebx-0x10]
3000d34d:	call   0x30004017
3000d352:	and    DWORD PTR [ebp-0x4],0x0
3000d356:	lea    ecx,[edi-0x10]
3000d359:	call   0x30004017
3000d35e:	mov    eax,DWORD PTR [ebp-0x64]
3000d361:	call   0x300045fe
3000d366:	ret    0x34
3000d369:	nop
3000d36a:	nop
3000d36b:	nop
3000d36c:	and    eax,0x6400
3000d371:	add    BYTE PTR [eax+0x20002090],dl
3000d377:	add    BYTE PTR [eax+eax*1],bh
3000d37a:	add    BYTE PTR gs:[esi+0x0],ch
3000d37e:	je     0x3000d380
3000d380:	jb     0x3000d382
3000d382:	jns    0x3000d384
3000d384:	add    BYTE PTR ds:0xa00,cl
3000d38b:	add    BYTE PTR [eax],ah
3000d38d:	add    BYTE PTR [eax],ah
3000d38f:	add    BYTE PTR [eax],ah
3000d391:	add    BYTE PTR [eax],ah
3000d393:	add    BYTE PTR [eax+eax*1],bh
3000d396:	jb     0x3000d398
3000d398:	add    BYTE PTR gs:[ebx+0x0],ah
3000d39c:	outs   dx,DWORD PTR ds:[esi]
3000d39d:	add    BYTE PTR [edx+0x0],dh
3000d3a0:	add    BYTE PTR fs:[esi],bh
3000d3a3:	add    BYTE PTR [eax],al
3000d3a5:	add    BYTE PTR [eax+0x2f003c90],dl
3000d3ab:	add    BYTE PTR [edx+0x0],dh
3000d3ae:	add    BYTE PTR gs:[ebx+0x0],ah
3000d3b2:	outs   dx,DWORD PTR ds:[esi]
3000d3b3:	add    BYTE PTR [edx+0x0],dh
3000d3b6:	add    BYTE PTR fs:[esi],bh
3000d3b9:	add    BYTE PTR ds:0xa00,cl
3000d3bf:	add    BYTE PTR [eax],ah
3000d3c1:	add    BYTE PTR [eax],ah
3000d3c3:	add    BYTE PTR [eax],ah
3000d3c5:	add    BYTE PTR [eax],ah
3000d3c7:	add    BYTE PTR [eax+eax*1],bh
3000d3ca:	je     0x3000d3cc
3000d3cc:	imul   eax,DWORD PTR [eax],0x65006d
3000d3d2:	add    BYTE PTR ds:[eax],al
3000d3d5:	add    BYTE PTR [eax+0x34002590],dl
3000d3db:	add    BYTE PTR [eax+eax*1+0x2f],ah
3000d3df:	add    BYTE PTR ds:0x32003000,ah
3000d3e5:	add    BYTE PTR [eax+eax*1+0x2f],ah
3000d3e9:	add    BYTE PTR ds:0x32003000,ah
3000d3ef:	add    BYTE PTR [eax+eax*1+0x20],ah
3000d3f3:	add    BYTE PTR ds:0x32003000,ah
3000d3f9:	add    BYTE PTR [eax+eax*1+0x3a],ah
3000d3fd:	add    BYTE PTR ds:0x32003000,ah
3000d403:	add    BYTE PTR [eax+eax*1+0x3a],ah
3000d407:	add    BYTE PTR ds:0x32003000,ah
3000d40d:	add    BYTE PTR [eax+eax*1+0x2e],ah
3000d411:	add    BYTE PTR ds:0x33003000,ah
3000d417:	add    BYTE PTR [eax+eax*1+0x0],ah
3000d41b:	add    BYTE PTR [eax+eax*1],bh
3000d41e:	das    
3000d41f:	add    BYTE PTR [eax+eax*1+0x69],dh
3000d423:	add    BYTE PTR [ebp+0x0],ch
3000d426:	add    BYTE PTR gs:[esi],bh
3000d429:	add    BYTE PTR ds:0xa00,cl
3000d42f:	add    BYTE PTR [eax],ah
3000d431:	add    BYTE PTR [eax],ah
3000d433:	add    BYTE PTR [eax],ah
3000d435:	add    BYTE PTR [eax],ah
3000d437:	add    BYTE PTR [eax+eax*1],bh
3000d43a:	je     0x3000d43c
3000d43c:	jns    0x3000d43e
3000d43e:	jo     0x3000d440
3000d440:	add    BYTE PTR gs:[esi],bh
3000d443:	add    BYTE PTR [eax],al
3000d445:	add    BYTE PTR [eax+0x6e004990],dl
3000d44b:	add    BYTE PTR [esi+0x0],ah
3000d44e:	outs   dx,DWORD PTR ds:[esi]
3000d44f:	add    BYTE PTR [edx+0x0],dh
3000d452:	ins    DWORD PTR es:[edi],dx
3000d453:	add    BYTE PTR [ecx+0x0],ah
3000d456:	je     0x3000d458
3000d458:	imul   eax,DWORD PTR [eax],0x6e006f
3000d45e:	add    BYTE PTR [eax],al
3000d460:	cmp    al,0x0
3000d462:	das    
3000d463:	add    BYTE PTR [eax+eax*1+0x79],dh
3000d467:	add    BYTE PTR [eax+0x0],dh
3000d46a:	add    BYTE PTR gs:[esi],bh
3000d46d:	add    BYTE PTR ds:0xa00,cl
3000d473:	add    BYTE PTR [eax],ah
3000d475:	add    BYTE PTR [eax],ah
3000d477:	add    BYTE PTR [eax],ah
3000d479:	add    BYTE PTR [eax],ah
3000d47b:	add    BYTE PTR [eax+eax*1],bh
3000d47e:	jae    0x3000d480
3000d480:	outs   dx,DWORD PTR ds:[esi]
3000d481:	add    BYTE PTR [ebp+0x0],dh
3000d484:	jb     0x3000d486
3000d486:	arpl   WORD PTR [eax],ax
3000d488:	add    BYTE PTR gs:[esi],bh
3000d48b:	add    BYTE PTR [eax],al
3000d48d:	add    BYTE PTR [eax+0x2f003c90],dl
3000d493:	add    BYTE PTR [ebx+0x0],dh
3000d496:	outs   dx,DWORD PTR ds:[esi]
3000d497:	add    BYTE PTR [ebp+0x0],dh
3000d49a:	jb     0x3000d49c
3000d49c:	arpl   WORD PTR [eax],ax
3000d49e:	add    BYTE PTR gs:[esi],bh
3000d4a1:	add    BYTE PTR ds:0xa00,cl
3000d4a7:	add    BYTE PTR [eax],ah
3000d4a9:	add    BYTE PTR [eax],ah
3000d4ab:	add    BYTE PTR [eax],ah
3000d4ad:	add    BYTE PTR [eax],ah
3000d4af:	add    BYTE PTR [eax+eax*1],bh
3000d4b2:	add    BYTE PTR fs:[ebp+0x0],ah
3000d4b6:	jae    0x3000d4b8
3000d4b8:	arpl   WORD PTR [eax],ax
3000d4ba:	jb     0x3000d4bc
3000d4bc:	imul   eax,DWORD PTR [eax],0x740070
3000d4c2:	imul   eax,DWORD PTR [eax],0x6e006f
3000d4c8:	add    BYTE PTR ds:[eax],al
3000d4cb:	add    BYTE PTR [eax+eax*1],bh
3000d4ce:	das    
3000d4cf:	add    BYTE PTR [eax+eax*1+0x65],ah
3000d4d3:	add    BYTE PTR [ebx+0x0],dh
3000d4d6:	arpl   WORD PTR [eax],ax
3000d4d8:	jb     0x3000d4da
3000d4da:	imul   eax,DWORD PTR [eax],0x740070
3000d4e0:	imul   eax,DWORD PTR [eax],0x6e006f
3000d4e6:	add    BYTE PTR ds:0xa00,cl
3000d4ed:	add    BYTE PTR [eax+0x20002090],dl
3000d4f3:	add    BYTE PTR [eax+eax*1],bh
3000d4f6:	das    
3000d4f7:	add    BYTE PTR [ebp+0x0],ah
3000d4fa:	outs   dx,BYTE PTR ds:[esi]
3000d4fb:	add    BYTE PTR [eax+eax*1+0x72],dh
3000d4ff:	add    BYTE PTR [ecx+0x0],bh
3000d502:	add    BYTE PTR ds:0xa00,cl
3000d509:	add    BYTE PTR [ebp-0xaf1fbb],cl
3000d50f:	adc    eax,0x30045224
3000d514:	inc    DWORD PTR [ebx+0x18]
3000d517:	push   0x0
3000d519:	sub    esp,0x10
3000d51c:	mov    edi,esp
3000d51e:	push   DWORD PTR [ebp-0x2c]
3000d521:	lea    esi,[ebp-0x20]
3000d524:	push   DWORD PTR [ebp-0x28]
3000d527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000d528:	push   DWORD PTR [ebp-0x34]
3000d52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000d52c:	push   DWORD PTR [ebp-0x30]
3000d52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000d530:	push   DWORD PTR [ebp-0x38]
3000d533:	lea    eax,[ebp-0x24]
3000d536:	push   DWORD PTR [ebp-0x24]
3000d539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000d53a:	push   DWORD PTR [ebx+0x18]
3000d53d:	push   eax
3000d53e:	call   0x3000d0ab
3000d543:	and    DWORD PTR [ebp-0x4],0x0
3000d547:	mov    ecx,DWORD PTR [ebx+0x18]
3000d54a:	add    ecx,0xd
3000d54d:	push   eax
3000d54e:	lea    ecx,[ebx+ecx*4]
3000d551:	call   0x300014c1
3000d556:	or     DWORD PTR [ebp-0x4],0xffffffff
3000d55a:	mov    ecx,DWORD PTR [ebp-0x24]
3000d55d:	lea    ecx,[ecx-0x10]
3000d560:	call   0x30004017
3000d565:	jmp    0x300046c7
3000d56a:	xor    eax,eax
3000d56c:	push   0x206
3000d571:	mov    WORD PTR [ebp-0x218],ax
3000d578:	lea    eax,[ebp-0x216]
3000d57e:	push   edi
3000d57f:	push   eax
3000d580:	call   0x300011b1
3000d585:	add    esp,0xc
3000d588:	lea    eax,[ebp-0x218]
3000d58e:	push   0x104
3000d593:	push   eax
3000d594:	push   edi
3000d595:	call   DWORD PTR ds:0x3004513c
3000d59b:	push   eax
3000d59c:	call   DWORD PTR ds:0x300451f8
3000d5a2:	lea    eax,[ebp-0x218]
3000d5a8:	push   eax
3000d5a9:	lea    ecx,[ebp-0x21c]
3000d5af:	call   0x3000437e
3000d5b4:	mov    DWORD PTR [ebp-0x4],0x2
3000d5bb:	lea    ecx,[ebp-0x21c]
3000d5c1:	call   0x300089c3
3000d5c6:	lea    eax,[ebp-0x21c]
3000d5cc:	push   eax
3000d5cd:	lea    ecx,[ebp-0x220]
3000d5d3:	call   0x30004340
3000d5d8:	mov    BYTE PTR [ebp-0x4],0x3
3000d5dc:	push   eax
3000d5dd:	mov    ecx,ebx
3000d5df:	call   0x300014c1
3000d5e4:	mov    BYTE PTR [ebp-0x4],0x2
3000d5e8:	mov    ecx,DWORD PTR [ebp-0x220]
3000d5ee:	lea    ecx,[ecx-0x10]
3000d5f1:	call   0x30004017
3000d5f6:	mov    DWORD PTR [ebp-0x4],edi
3000d5f9:	lea    eax,[ebp-0x21c]
3000d5ff:	mov    DWORD PTR [ebp-0x220],eax
3000d605:	mov    DWORD PTR [ebp-0x4],edi
3000d608:	mov    ecx,DWORD PTR [ebp-0x21c]
3000d60e:	lea    ecx,[ecx-0x10]
3000d611:	call   0x30004017
3000d616:	jmp    0x30004745
3000d61b:	push   0x3000d678
3000d620:	call   0x300042e4
3000d625:	pop    ecx
3000d626:	push   eax
3000d627:	push   0x3000d678
3000d62c:	mov    ecx,esi
3000d62e:	call   0x30008b64
3000d633:	push   0x28
3000d635:	lea    eax,[ebp-0x60]
3000d638:	push   eax
3000d639:	push   DWORD PTR [ebp-0x80]
3000d63c:	call   DWORD PTR ds:0x300454d0
3000d642:	lea    eax,[ebp-0x60]
3000d645:	push   eax
3000d646:	call   0x300042e4
3000d64b:	pop    ecx
3000d64c:	push   eax
3000d64d:	lea    eax,[ebp-0x60]
3000d650:	push   eax
3000d651:	mov    ecx,esi
3000d653:	call   0x30008b64
3000d658:	push   0x3000d690
3000d65d:	call   0x300042e4
3000d662:	pop    ecx
3000d663:	push   eax
3000d664:	push   0x3000d690
3000d669:	mov    ecx,esi
3000d66b:	call   0x30008b64
3000d670:	jmp    0x3000d309
3000d675:	nop
3000d676:	nop
3000d677:	nop
3000d678:	and    BYTE PTR [eax],al
3000d67a:	and    BYTE PTR [eax],al
3000d67c:	and    BYTE PTR [eax],al
3000d67e:	and    BYTE PTR [eax],al
3000d680:	cmp    al,0x0
3000d682:	add    BYTE PTR [di+0x0],dh
3000d686:	imul   eax,DWORD PTR [eax],0x3e0064
3000d68c:	add    BYTE PTR [eax],al
3000d68e:	nop
3000d68f:	nop
3000d690:	cmp    al,0x0
3000d692:	das    
3000d693:	add    BYTE PTR [edi+0x0],ah
3000d696:	jne    0x3000d698
3000d698:	imul   eax,DWORD PTR [eax],0x3e0064
3000d69e:	or     eax,0xa00
3000d6a3:	add    BYTE PTR [ebx-0x7bf0ffc8],al
3000d6a9:	addr16 cld 
3000d6ab:	(bad)  
3000d6ac:	(bad)  
3000d6ad:	jmp    0x30027d74
3000d6b2:	mov    edi,0x3000d6d4
3000d6b7:	jmp    0x3000d267
3000d6bc:	mov    edi,0x3000d6c8
3000d6c1:	jmp    0x3000d267
3000d6c6:	nop
3000d6c7:	nop
3000d6c8:	inc    ebp
3000d6c9:	add    BYTE PTR [edx+0x0],dh
3000d6cc:	jb     0x3000d6ce
3000d6ce:	outs   dx,DWORD PTR ds:[esi]
3000d6cf:	add    BYTE PTR [edx+0x0],dh
3000d6d2:	add    BYTE PTR [eax],al
3000d6d4:	push   edi
3000d6d5:	add    BYTE PTR [ecx+0x0],ah
3000d6d8:	jb     0x3000d6da
3000d6da:	outs   dx,BYTE PTR ds:[esi]
3000d6db:	add    BYTE PTR [ecx+0x0],ch
3000d6de:	outs   dx,BYTE PTR ds:[esi]
3000d6df:	add    BYTE PTR [edi+0x0],ah
3000d6e2:	add    BYTE PTR [eax],al
3000d6e4:	test   BYTE PTR [ebp+0x18],0x1
3000d6e8:	je     0x3000cfdc
3000d6ee:	test   esi,esi
3000d6f0:	je     0x3000d725
3000d6f2:	cmp    edi,0x5
3000d6f5:	jle    0x3000d725
3000d6f7:	mov    ecx,DWORD PTR [ebp+0x8]
3000d6fa:	mov    eax,0x3000d730
3000d6ff:	cmp    WORD PTR [ecx],0x27
3000d703:	jne    0x30027fb2
3000d709:	push   0xc
3000d70b:	push   eax
3000d70c:	lea    eax,[edi+edi*1]
3000d70f:	push   eax
3000d710:	push   esi
3000d711:	call   0x3000ba07
3000d716:	add    esp,0x10
3000d719:	push   eax
3000d71a:	call   0x30001432
3000d71f:	mov    ecx,DWORD PTR [ebp-0x4]
3000d722:	add    esi,0xc
3000d725:	push   0x6
3000d727:	pop    edx
3000d728:	jmp    0x3000d022
3000d72d:	nop
3000d72e:	nop
3000d72f:	nop
3000d730:	add    BYTE PTR es:[ecx+0x0],ah
3000d734:	jo     0x3000d736
3000d736:	outs   dx,DWORD PTR ds:[esi]
3000d737:	add    BYTE PTR [ebx+0x0],dh
3000d73a:	cmp    eax,DWORD PTR [eax]
3000d73c:	add    BYTE PTR [eax],al
3000d73e:	mov    ecx,DWORD PTR [ebp+0xc]
3000d741:	push   ebx
3000d742:	call   0x30004286
3000d747:	push   0x1
3000d749:	push   ebx
3000d74a:	push   eax
3000d74b:	push   esi
3000d74c:	push   edi
3000d74d:	call   0x3000cf73
3000d752:	mov    ecx,DWORD PTR [ebp+0xc]
3000d755:	mov    esi,eax
3000d757:	push   esi
3000d758:	call   0x30004147
3000d75d:	test   esi,esi
3000d75f:	jne    0x3000d0a2
3000d765:	jmp    0x300280ea
3000d76a:	test   edi,edi
3000d76c:	jle    0x3000d01f
3000d772:	mov    WORD PTR [esi],ax
3000d775:	add    esi,0x2
3000d778:	jmp    0x3000d01f
3000d77d:	test   edi,edi
3000d77f:	jns    0x3000d04c
3000d785:	jmp    0x300280bb
3000d78a:	xor    ebx,ebx
3000d78c:	test   eax,eax
3000d78e:	je     0x3000cfff
3000d794:	jmp    0x3000d022
3000d799:	test   esi,esi
3000d79b:	jne    0x30028069
3000d7a1:	jmp    0x30028078
3000d7a6:	push   0x14
3000d7a8:	mov    eax,0x30040470
3000d7ad:	call   0x30006c56
3000d7b2:	mov    eax,ecx
3000d7b4:	mov    DWORD PTR [ebp-0x1c],eax
3000d7b7:	test   eax,eax
3000d7b9:	je     0x30020910
3000d7bf:	xor    ecx,ecx
3000d7c1:	push   0x300430f0
3000d7c6:	mov    ebx,0x8007000e
3000d7cb:	push   0x24
3000d7cd:	mov    DWORD PTR [eax],ecx
3000d7cf:	mov    DWORD PTR [ebp-0x14],ebx
3000d7d2:	mov    DWORD PTR [ebp-0x18],ecx
3000d7d5:	mov    DWORD PTR [ebp-0x4],ecx
3000d7d8:	call   0x30006cc2
3000d7dd:	pop    ecx
3000d7de:	mov    esi,eax
3000d7e0:	pop    ecx
3000d7e1:	mov    DWORD PTR [ebp-0x20],esi
3000d7e4:	test   esi,esi
3000d7e6:	je     0x3000d83b
3000d7e8:	and    DWORD PTR [esi+0x4],0x0
3000d7ec:	push   0x6
3000d7ee:	xor    eax,eax
3000d7f0:	pop    ecx
3000d7f1:	lea    edi,[esi+0x8]
3000d7f4:	rep stos DWORD PTR es:[edi],eax
3000d7f6:	mov    BYTE PTR [esi+0x20],al
3000d7f9:	mov    BYTE PTR [ebp-0x4],0x2
3000d7fd:	mov    DWORD PTR [esi],0x30006df0
3000d803:	mov    ecx,DWORD PTR ds:0x300430f4
3000d809:	mov    eax,DWORD PTR [ecx]
3000d80b:	call   DWORD PTR [eax+0x4]
3000d80e:	or     DWORD PTR [ebp-0x4],0xffffffff
3000d812:	test   esi,esi
3000d814:	je     0x3000d82e
3000d816:	lea    ecx,[esi+0x4]
3000d819:	call   0x30006d76
3000d81e:	mov    ebx,eax
3000d820:	test   ebx,ebx
3000d822:	js     0x3000d828
3000d824:	xor    ebx,ebx
3000d826:	test   ebx,ebx
3000d828:	jne    0x3002092b
3000d82e:	mov    eax,DWORD PTR [ebp-0x1c]
3000d831:	mov    DWORD PTR [eax],esi
3000d833:	mov    eax,ebx
3000d835:	call   0x3000119d
3000d83a:	ret    
3000d83b:	xor    esi,esi
3000d83d:	jmp    0x3000d80e
3000d83f:	push   ebp
3000d840:	mov    ebp,esp
3000d842:	mov    eax,DWORD PTR [ebp+0x10]
3000d845:	test   eax,eax
3000d847:	je     0x3002069b
3000d84d:	and    DWORD PTR [eax],0x0
3000d850:	mov    eax,0x80004002
3000d855:	pop    ebp
3000d856:	ret    0xc
3000d859:	nop
3000d85a:	nop
3000d85b:	nop
3000d85c:	dec    ecx
3000d85d:	add    BYTE PTR [esi+0x0],ch
3000d860:	push   eax
3000d861:	add    BYTE PTR [edx+0x0],dh
3000d864:	outs   dx,DWORD PTR ds:[esi]
3000d865:	add    BYTE PTR [ebx+0x0],ah
3000d868:	push   ebx
3000d869:	add    BYTE PTR [ebp+0x0],ah
3000d86c:	jb     0x3000d86e
3000d86e:	jbe    0x3000d870
3000d870:	add    BYTE PTR gs:[edx+0x0],dh
3000d874:	xor    eax,DWORD PTR [eax]
3000d876:	xor    al,BYTE PTR [eax]
3000d878:	add    BYTE PTR [eax],al
3000d87a:	nop
3000d87b:	nop
3000d87c:	inc    ecx
3000d87d:	add    BYTE PTR [ebx+0x0],dh
3000d880:	jae    0x3000d882
3000d882:	add    BYTE PTR gs:[ebp+0x0],ch
3000d886:	bound  eax,QWORD PTR [eax]
3000d888:	ins    BYTE PTR es:[edi],dx
3000d889:	add    BYTE PTR [ecx+0x0],bh
3000d88c:	add    BYTE PTR [eax],al
3000d88e:	push   ebp
3000d88f:	mov    ebp,esp
3000d891:	push   DWORD PTR [ebp+0x10]
3000d894:	push   DWORD PTR [ebp+0xc]
3000d897:	push   0x3000d8ac
3000d89c:	push   DWORD PTR [ebp+0x8]
3000d89f:	call   DWORD PTR ds:0x30045424
3000d8a5:	pop    ebp
3000d8a6:	ret    0xc
3000d8a9:	nop
3000d8aa:	nop
3000d8ab:	nop
3000d8ac:	sbb    dl,0x0
3000d8af:	xor    BYTE PTR [eax],al
3000d8b1:	add    BYTE PTR [eax],al
3000d8b3:	add    BYTE PTR [ecx],al
	...
3000d8c1:	add    BYTE PTR [eax],al
3000d8c3:	add    BYTE PTR [eax+0x18],ch
3000d8c6:	add    al,0x0
3000d8c8:	add    BYTE PTR [eax+0x30040409],bh
3000d8ce:	call   0x300045c8
3000d8d3:	mov    ebx,ecx
3000d8d5:	mov    DWORD PTR [ebp-0x424],ebx
3000d8db:	and    DWORD PTR [ebp-0x418],0x0
3000d8e2:	and    DWORD PTR [ebp-0x4],0x0
3000d8e6:	lea    edx,[ebp-0x418]
3000d8ec:	lea    eax,[ebx+0x4]
3000d8ef:	push   edx
3000d8f0:	mov    ecx,DWORD PTR [eax]
3000d8f2:	push   0x30006b40
3000d8f7:	push   eax
3000d8f8:	call   DWORD PTR [ecx+0x10]
3000d8fb:	mov    esi,eax
3000d8fd:	test   esi,esi
3000d8ff:	js     0x3000da44
3000d905:	and    DWORD PTR [ebp-0x41c],0x0
3000d90c:	mov    BYTE PTR [ebp-0x4],0x1
3000d910:	mov    eax,DWORD PTR [ebp-0x418]
3000d916:	lea    edx,[ebp-0x41c]
3000d91c:	mov    ecx,DWORD PTR [eax]
3000d91e:	push   edx
3000d91f:	push   0x3000da70
3000d924:	push   eax
3000d925:	call   DWORD PTR [ecx+0xc]
3000d928:	mov    esi,eax
3000d92a:	test   esi,esi
3000d92c:	js     0x3000da30
3000d932:	and    DWORD PTR [ebp-0x414],0x0
3000d939:	lea    ecx,[ebp-0x414]
3000d93f:	add    ebx,0x2c
3000d942:	call   0x3000d7a6
3000d947:	mov    esi,eax
3000d949:	test   esi,esi
3000d94b:	js     0x3000da30
3000d951:	mov    edi,DWORD PTR [ebp-0x414]
3000d957:	test   edi,edi
3000d959:	je     0x3000d97c
3000d95b:	mov    eax,DWORD PTR [edi]
3000d95d:	push   edi
3000d95e:	call   DWORD PTR [eax+0x4]
3000d961:	mov    eax,DWORD PTR [edi]
3000d963:	push   ebx
3000d964:	push   0x3000da80
3000d969:	push   edi
3000d96a:	call   DWORD PTR [eax]
3000d96c:	mov    esi,eax
3000d96e:	test   esi,esi
3000d970:	js     0x300206d9
3000d976:	mov    eax,DWORD PTR [edi]
3000d978:	push   edi
3000d979:	call   DWORD PTR [eax+0x8]
3000d97c:	test   esi,esi
3000d97e:	js     0x3000da30
3000d984:	push   DWORD PTR [ebx]
3000d986:	mov    eax,DWORD PTR [ebp-0x41c]
3000d98c:	push   0x3
3000d98e:	mov    ecx,DWORD PTR [eax]
3000d990:	push   eax
3000d991:	call   DWORD PTR [ecx+0xc]
3000d994:	mov    esi,eax
3000d996:	test   esi,esi
3000d998:	js     0x3000da30
3000d99e:	lea    eax,[ebp-0x420]
3000d9a4:	push   eax
3000d9a5:	push   ecx
3000d9a6:	lea    eax,[ebp-0x210]
3000d9ac:	push   eax
3000d9ad:	push   ecx
3000d9ae:	mov    ecx,DWORD PTR [ebp-0x424]
3000d9b4:	lea    eax,[ebp-0x410]
3000d9ba:	push   eax
3000d9bb:	mov    DWORD PTR [ebp-0x420],0x2
3000d9c5:	call   0x3000e37e
3000d9ca:	test   eax,eax
3000d9cc:	jne    0x3000da2e
3000d9ce:	and    DWORD PTR [ebp-0x414],eax
3000d9d4:	mov    BYTE PTR [ebp-0x4],0x2
3000d9d8:	mov    eax,DWORD PTR [ebp-0x418]
3000d9de:	lea    edx,[ebp-0x414]
3000d9e4:	mov    ecx,DWORD PTR [eax]
3000d9e6:	push   edx
3000d9e7:	push   0x3000da60
3000d9ec:	push   eax
3000d9ed:	call   DWORD PTR [ecx+0xc]
3000d9f0:	mov    esi,eax
3000d9f2:	test   esi,esi
3000d9f4:	js     0x300206e1
3000d9fa:	push   DWORD PTR [ebp-0x420]
3000da00:	mov    eax,DWORD PTR [ebp-0x414]
3000da06:	lea    edx,[ebp-0x210]
3000da0c:	mov    ecx,DWORD PTR [eax]
3000da0e:	push   edx
3000da0f:	lea    edx,[ebp-0x410]
3000da15:	push   edx
3000da16:	push   eax
3000da17:	call   DWORD PTR [ecx+0xc]
3000da1a:	mov    BYTE PTR [ebp-0x4],0x1
3000da1e:	mov    eax,DWORD PTR [ebp-0x414]
3000da24:	test   eax,eax
3000da26:	je     0x3000da2e
3000da28:	mov    ecx,DWORD PTR [eax]
3000da2a:	push   eax
3000da2b:	call   DWORD PTR [ecx+0x8]
3000da2e:	xor    esi,esi
3000da30:	mov    BYTE PTR [ebp-0x4],0x0
3000da34:	mov    eax,DWORD PTR [ebp-0x41c]
3000da3a:	test   eax,eax
3000da3c:	je     0x3000da44
3000da3e:	mov    ecx,DWORD PTR [eax]
3000da40:	push   eax
3000da41:	call   DWORD PTR [ecx+0x8]
3000da44:	or     DWORD PTR [ebp-0x4],0xffffffff
3000da48:	mov    ecx,DWORD PTR [ebp-0x418]
3000da4e:	test   ecx,ecx
3000da50:	je     0x3000da58
3000da52:	mov    edx,DWORD PTR [ecx]
3000da54:	push   ecx
3000da55:	call   DWORD PTR [edx+0x8]
3000da58:	mov    eax,esi
3000da5a:	call   0x300045fe
3000da5f:	ret    
3000da60:	mov    ds:0x15270d00,al
3000da65:	mov    cs,WORD PTR [ebx]
3000da67:	dec    ebp
3000da68:	lods   eax,DWORD PTR ds:[esi]
3000da69:	jmp    0x3000daa2
3000da6b:	mov    esp,0x77df473e
3000da70:	xor    al,BYTE PTR [ecx]
3000da72:	push   cs
3000da73:	sbb    eax,0x493de64f
3000da78:	xchg   edx,eax
3000da79:	pusha  
3000da7a:	add    bl,BYTE PTR [esi+ecx*1+0x32]
3000da7e:	shl    DWORD PTR [ebp+0x4b],0xe2
3000da82:	jnp    0x3000dae4
3000da84:	sbb    ebx,ecx
3000da86:	sub    BYTE PTR [esi-0x5e],cl
3000da89:	inc    edx
3000da8a:	popa   
3000da8b:	xchg   DWORD PTR [eiz*8-0x74aaca92],ebx
3000da92:	in     al,dx
3000da93:	push   DWORD PTR [ebp+0x10]
3000da96:	mov    eax,DWORD PTR [ebp+0x8]
3000da99:	push   DWORD PTR [ebp+0xc]
3000da9c:	mov    eax,DWORD PTR [eax+0x28]
3000da9f:	push   eax
3000daa0:	mov    ecx,DWORD PTR [eax]
3000daa2:	call   DWORD PTR [ecx+0xc]
3000daa5:	pop    ebp
3000daa6:	ret    0xc
3000daa9:	jmp    0x3000daab
3000daab:	push   0x8
3000daad:	mov    eax,0x300403a8
3000dab2:	call   0x3000116a
3000dab7:	mov    ebx,DWORD PTR ds:0x30043110
3000dabd:	push   0x1fb2
3000dac2:	call   0x3000532c
3000dac7:	and    DWORD PTR [ebp-0x14],0x0
3000dacb:	and    DWORD PTR [ebp-0x4],0x0
3000dacf:	push   DWORD PTR [ebx+0x8]
3000dad2:	call   0x3000dc9c
3000dad7:	and    DWORD PTR [ebp-0x10],0x0
3000dadb:	lea    eax,[ebp-0x10]
3000dade:	push   eax
3000dadf:	push   0x3
3000dae1:	push   0x0
3000dae3:	push   0x3000dc6c
3000dae8:	call   0x3000de5a
3000daed:	mov    esi,eax
3000daef:	add    esp,0x14
3000daf2:	test   esi,esi
3000daf4:	jns    0x30020708
3000dafa:	mov    ecx,DWORD PTR [ebp-0x10]
3000dafd:	test   ecx,ecx
3000daff:	jne    0x3002071d
3000db05:	test   esi,esi
3000db07:	jns    0x3000db1d
3000db09:	push   ecx
3000db0a:	mov    ecx,DWORD PTR [ebx+0x10]
3000db0d:	push   ebx
3000db0e:	call   0x3000e0da
3000db13:	mov    edi,eax
3000db15:	test   edi,edi
3000db17:	js     0x3000dc3c
3000db1d:	cmp    DWORD PTR [ebp+0xc],0x0
3000db21:	je     0x3000db26
3000db23:	call   DWORD PTR [ebp+0xc]
3000db26:	mov    ecx,DWORD PTR [ebp+0x8]
3000db29:	lea    esi,[ebx+0x4]
3000db2c:	mov    eax,DWORD PTR [ecx]
3000db2e:	push   esi
3000db2f:	push   0x3000dc7c
3000db34:	push   0x3000dc8c
3000db39:	push   ecx
3000db3a:	call   DWORD PTR [eax+0x24]
3000db3d:	mov    edi,eax
3000db3f:	test   edi,edi
3000db41:	js     0x3000dc3c
3000db47:	mov    ecx,DWORD PTR [esi]
3000db49:	test   ecx,ecx
3000db4b:	je     0x3000dc3c
3000db51:	and    DWORD PTR [ebp+0xc],0x0
3000db55:	lea    edx,[ebp+0xc]
3000db58:	mov    BYTE PTR [ebp-0x4],0x1
3000db5c:	mov    eax,DWORD PTR [ecx]
3000db5e:	push   edx
3000db5f:	push   ecx
3000db60:	call   DWORD PTR [eax+0x18]
3000db63:	mov    edi,eax
3000db65:	test   edi,edi
3000db67:	js     0x3000dc2b
3000db6d:	mov    eax,DWORD PTR [ebx+0x8]
3000db70:	push   0x0
3000db72:	push   ecx
3000db73:	sub    eax,0x10
3000db76:	mov    esi,esp
3000db78:	push   eax
3000db79:	lea    edi,[ebp-0x14]
3000db7c:	call   0x30004306
3000db81:	add    eax,0x10
3000db84:	mov    DWORD PTR [esi],eax
3000db86:	mov    eax,DWORD PTR [ebp+0xc]
3000db89:	mov    ecx,esp
3000db8b:	mov    DWORD PTR [ecx],eax
3000db8d:	mov    eax,DWORD PTR [ebp+0xc]
3000db90:	test   eax,eax
3000db92:	je     0x3000db9a
3000db94:	mov    ecx,DWORD PTR [eax]
3000db96:	push   eax
3000db97:	call   DWORD PTR [ecx+0x4]
3000db9a:	mov    edx,edi
3000db9c:	mov    ecx,0x30006b40
3000dba1:	call   0x3000e1d2
3000dba6:	mov    edi,eax
3000dba8:	test   edi,edi
3000dbaa:	js     0x3000dc2b
3000dbac:	mov    ecx,DWORD PTR [ebx]
3000dbae:	mov    esi,DWORD PTR [ebp-0x14]
3000dbb1:	test   ecx,ecx
3000dbb3:	je     0x30020728
3000dbb9:	mov    eax,DWORD PTR [ecx]
3000dbbb:	and    DWORD PTR [ebp-0x10],0x0
3000dbbf:	lea    edx,[ebp-0x10]
3000dbc2:	push   edx
3000dbc3:	push   0x30015c4c
3000dbc8:	push   ecx
3000dbc9:	call   DWORD PTR [eax]
3000dbcb:	mov    edi,eax
3000dbcd:	test   edi,edi
3000dbcf:	js     0x3000dc2b
3000dbd1:	mov    ecx,DWORD PTR [ebp-0x10]
3000dbd4:	test   ecx,ecx
3000dbd6:	je     0x3000dbea
3000dbd8:	mov    eax,DWORD PTR [ecx]
3000dbda:	push   esi
3000dbdb:	push   ecx
3000dbdc:	call   DWORD PTR [eax+0xc]
3000dbdf:	mov    edi,eax
3000dbe1:	mov    eax,DWORD PTR [ebp-0x10]
3000dbe4:	push   eax
3000dbe5:	mov    ecx,DWORD PTR [eax]
3000dbe7:	call   DWORD PTR [ecx+0x8]
3000dbea:	test   edi,edi
3000dbec:	js     0x3000dc2b
3000dbee:	mov    ecx,DWORD PTR [ebx+0x4]
3000dbf1:	push   DWORD PTR [ebx]
3000dbf3:	mov    eax,DWORD PTR [ecx]
3000dbf5:	push   ecx
3000dbf6:	call   DWORD PTR [eax+0x14]
3000dbf9:	mov    edi,eax
3000dbfb:	test   edi,edi
3000dbfd:	js     0x3000dc2b
3000dbff:	mov    edi,DWORD PTR [ebp+0x8]
3000dc02:	push   0x0
3000dc04:	mov    esi,DWORD PTR [edi]
3000dc06:	mov    ecx,ebx
3000dc08:	call   0x3000e2fe
3000dc0d:	push   eax
3000dc0e:	push   edi
3000dc0f:	call   DWORD PTR [esi+0x2c]
3000dc12:	mov    edi,eax
3000dc14:	test   edi,edi
3000dc16:	js     0x3000dc2b
3000dc18:	mov    eax,DWORD PTR [ebx+0x4]
3000dc1b:	push   eax
3000dc1c:	mov    ecx,DWORD PTR [eax]
3000dc1e:	call   DWORD PTR [ecx+0xc]
3000dc21:	mov    edi,eax
3000dc23:	test   edi,edi
3000dc25:	js     0x30020732
3000dc2b:	mov    BYTE PTR [ebp-0x4],0x0
3000dc2f:	mov    eax,DWORD PTR [ebp+0xc]
3000dc32:	test   eax,eax
3000dc34:	je     0x3000dc3c
3000dc36:	mov    ecx,DWORD PTR [eax]
3000dc38:	push   eax
3000dc39:	call   DWORD PTR [ecx+0x8]
3000dc3c:	cmp    DWORD PTR [ebp+0x10],0x0
3000dc40:	je     0x3000dc45
3000dc42:	call   DWORD PTR [ebp+0x10]
3000dc45:	push   0x1fb3
3000dc4a:	call   0x3000532c
3000dc4f:	or     DWORD PTR [ebp-0x4],0xffffffff
3000dc53:	mov    eax,DWORD PTR [ebp-0x14]
3000dc56:	test   eax,eax
3000dc58:	je     0x3000dc60
3000dc5a:	mov    ecx,DWORD PTR [eax]
3000dc5c:	push   eax
3000dc5d:	call   DWORD PTR [ecx+0x8]
3000dc60:	mov    eax,edi
3000dc62:	call   0x3000119d
3000dc67:	ret    0xc
3000dc6a:	nop
3000dc6b:	nop
3000dc6c:	mov    dl,0x1b
3000dc6e:	sub    DWORD PTR [edx],0x48b8303b
3000dc74:	add    dl,0xe0
3000dc77:	sub    DWORD PTR [edx+0x6cf23e2c],esp
3000dc7d:	mov    al,ds:0x771290f1
3000dc82:	bound  eax,QWORD PTR [edi-0x7a]
3000dc85:	mov    ch,0x7a
3000dc87:	pop    esi
3000dc88:	mov    edx,0x6e02db6b
3000dc8d:	mov    al,ds:0x771290f1
3000dc92:	bound  eax,QWORD PTR [edi-0x7a]
3000dc95:	mov    ch,0x7a
3000dc97:	pop    esi
3000dc98:	mov    edx,0x5502db6b
3000dc9d:	mov    ebp,esp
3000dc9f:	push   DWORD PTR [ebp+0x8]
3000dca2:	call   0x300042e4
3000dca7:	pop    ecx
3000dca8:	push   eax
3000dca9:	push   DWORD PTR [ebp+0x8]
3000dcac:	mov    ecx,0x30043114
3000dcb1:	call   0x3000416f
3000dcb6:	pop    ebp
3000dcb7:	ret    
3000dcb8:	push   ebp
3000dcb9:	mov    ebp,esp
3000dcbb:	sub    esp,0x18
3000dcbe:	push   ebx
3000dcbf:	push   esi
3000dcc0:	push   edi
3000dcc1:	mov    ebx,0x3004306c
3000dcc6:	push   ebx
3000dcc7:	lea    ecx,[ebp-0x4]
3000dcca:	mov    DWORD PTR [ebp-0x18],0x1
3000dcd1:	call   0x30004256
3000dcd6:	xor    esi,esi
3000dcd8:	push   ebx
3000dcd9:	lea    ecx,[ebp-0x10]
3000dcdc:	mov    DWORD PTR [ebp-0x14],0x104
3000dce3:	mov    DWORD PTR [ebp-0x8],esi
3000dce6:	mov    DWORD PTR [ebp-0xc],esi
3000dce9:	call   0x30004256
3000dcee:	lea    eax,[ebp-0xc]
3000dcf1:	push   eax
3000dcf2:	push   DWORD PTR [ebp+0x8]
3000dcf5:	call   DWORD PTR ds:0x300454a4
3000dcfb:	mov    edi,eax
3000dcfd:	test   edi,edi
3000dcff:	js     0x3000de13
3000dd05:	push   0x3000e024
3000dd0a:	push   0x30043114
3000dd0f:	lea    eax,[ebp+0x8]
3000dd12:	push   eax
3000dd13:	call   0x3000ba45
3000dd18:	push   eax
3000dd19:	lea    ecx,[ebp-0x10]
3000dd1c:	call   0x300014c1
3000dd21:	mov    ecx,DWORD PTR [ebp+0x8]
3000dd24:	lea    ecx,[ecx-0x10]
3000dd27:	call   0x30004017
3000dd2c:	push   DWORD PTR [ebp-0xc]
3000dd2f:	call   0x300042e4
3000dd34:	pop    ecx
3000dd35:	push   eax
3000dd36:	push   DWORD PTR [ebp-0xc]
3000dd39:	lea    ecx,[ebp-0x10]
3000dd3c:	call   0x30008b64
3000dd41:	lea    eax,[ebp-0x8]
3000dd44:	push   eax
3000dd45:	push   0x20019
3000dd4a:	push   esi
3000dd4b:	push   DWORD PTR [ebp-0x10]
3000dd4e:	mov    edi,0x80004005
3000dd53:	push   0x80000002
3000dd58:	call   DWORD PTR ds:0x30045008
3000dd5e:	mov    ebx,eax
3000dd60:	test   ebx,ebx
3000dd62:	je     0x30028540
3000dd68:	lea    ecx,[ebp-0x10]
3000dd6b:	call   0x30004564
3000dd70:	test   edi,edi
3000dd72:	jns    0x300285fc
3000dd78:	push   0x3004306c
3000dd7d:	lea    ecx,[ebp+0x8]
3000dd80:	call   0x30004256
3000dd85:	mov    esi,0x3000de4c
3000dd8a:	push   esi
3000dd8b:	call   0x300042e4
3000dd90:	pop    ecx
3000dd91:	push   eax
3000dd92:	push   esi
3000dd93:	lea    ecx,[ebp+0x8]
3000dd96:	call   0x3000416f
3000dd9b:	push   DWORD PTR [ebp-0xc]
3000dd9e:	call   0x300042e4
3000dda3:	pop    ecx
3000dda4:	push   eax
3000dda5:	push   DWORD PTR [ebp-0xc]
3000dda8:	lea    ecx,[ebp+0x8]
3000ddab:	call   0x30008b64
3000ddb0:	mov    esi,0x30008fc4
3000ddb5:	push   esi
3000ddb6:	call   0x300042e4
3000ddbb:	pop    ecx
3000ddbc:	push   eax
3000ddbd:	push   esi
3000ddbe:	lea    ecx,[ebp+0x8]
3000ddc1:	call   0x30008b64
3000ddc6:	mov    esi,0x3000d85c
3000ddcb:	push   esi
3000ddcc:	call   0x300042e4
3000ddd1:	pop    ecx
3000ddd2:	push   eax
3000ddd3:	push   esi
3000ddd4:	lea    ecx,[ebp+0x8]
3000ddd7:	call   0x30008b64
3000dddc:	mov    esi,DWORD PTR [ebp+0x8]
3000dddf:	lea    eax,[ebp-0x8]
3000dde2:	push   eax
3000dde3:	push   0x20019
3000dde8:	push   0x0
3000ddea:	push   esi
3000ddeb:	push   0x80000000
3000ddf0:	call   DWORD PTR ds:0x30045008
3000ddf6:	test   eax,eax
3000ddf8:	je     0x300285b1
3000ddfe:	test   ebx,ebx
3000de00:	je     0x300285f4
3000de06:	lea    ecx,[esi-0x10]
3000de09:	mov    edi,0x80004005
3000de0e:	call   0x30004017
3000de13:	cmp    DWORD PTR [ebp-0xc],0x0
3000de17:	je     0x3000de22
3000de19:	push   DWORD PTR [ebp-0xc]
3000de1c:	call   DWORD PTR ds:0x300454b4
3000de22:	cmp    DWORD PTR [ebp-0x8],0x0
3000de26:	jne    0x300286a2
3000de2c:	mov    ecx,DWORD PTR [ebp-0x10]
3000de2f:	lea    ecx,[ecx-0x10]
3000de32:	call   0x30004017
3000de37:	mov    ecx,DWORD PTR [ebp-0x4]
3000de3a:	lea    ecx,[ecx-0x10]
3000de3d:	call   0x30004017
3000de42:	mov    eax,edi
3000de44:	pop    edi
3000de45:	pop    esi
3000de46:	pop    ebx
3000de47:	leave  
3000de48:	ret    0x8
3000de4b:	nop
3000de4c:	inc    ebx
3000de4d:	add    BYTE PTR [eax+eax*1+0x53],cl
3000de51:	add    BYTE PTR [ecx+0x0],cl
3000de54:	inc    esp
3000de55:	add    BYTE PTR [eax+eax*1+0x0],bl
3000de59:	add    BYTE PTR [ebp-0x75],dl
3000de5c:	in     al,dx
3000de5d:	sub    esp,0x38
3000de60:	mov    eax,ds:0x30043050
3000de65:	xor    eax,ebp
3000de67:	mov    DWORD PTR [ebp-0x4],eax
3000de6a:	mov    eax,DWORD PTR [ebp+0xc]
3000de6d:	mov    ecx,DWORD PTR [ebp+0x8]
3000de70:	push   ebx
3000de71:	push   esi
3000de72:	push   edi
3000de73:	mov    DWORD PTR [ebp-0x30],eax
3000de76:	mov    eax,DWORD PTR [ebp+0x14]
3000de79:	mov    esi,0x300071f8
3000de7e:	lea    edi,[ebp-0x14]
3000de81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000de82:	mov    DWORD PTR [ebp-0x24],eax
3000de85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000de86:	lea    eax,[ebp-0x1c]
3000de89:	push   eax
3000de8a:	lea    eax,[ebp-0x18]
3000de8d:	push   eax
3000de8e:	xor    ebx,ebx
3000de90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000de91:	lea    eax,[ebp-0x28]
3000de94:	push   eax
3000de95:	push   ecx
3000de96:	mov    DWORD PTR [ebp-0x34],ecx
3000de99:	mov    DWORD PTR [ebp-0x20],ebx
3000de9c:	mov    DWORD PTR [ebp-0x28],ebx
3000de9f:	mov    DWORD PTR [ebp-0x18],ebx
3000dea2:	mov    DWORD PTR [ebp-0x1c],ebx
3000dea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000dea6:	mov    DWORD PTR [ebp-0x2c],ebx
3000dea9:	call   0x3000df44
3000deae:	mov    edi,DWORD PTR [ebp-0x1c]
3000deb1:	mov    esi,DWORD PTR [ebp-0x28]
3000deb4:	test   eax,eax
3000deb6:	jne    0x30028822
3000debc:	mov    edi,DWORD PTR [ebp-0x34]
3000debf:	lea    eax,[ebp-0x14]
3000dec2:	push   eax
3000dec3:	push   edi
3000dec4:	call   0x3000dcb8
3000dec9:	mov    esi,eax
3000decb:	test   esi,esi
3000decd:	jns    0x3002887e
3000ded3:	push   DWORD PTR [ebp-0x24]
3000ded6:	push   0x3000531c
3000dedb:	push   DWORD PTR [ebp+0x10]
3000dede:	push   DWORD PTR [ebp-0x30]
3000dee1:	push   edi
3000dee2:	call   DWORD PTR ds:0x30045494
3000dee8:	test   eax,eax
3000deea:	jns    0x3000def4
3000deec:	cmp    esi,0x80050200
3000def2:	je     0x3000def6
3000def4:	mov    esi,eax
3000def6:	mov    edi,DWORD PTR ds:0x300454e8
3000defc:	test   ebx,ebx
3000defe:	jne    0x300288d9
3000df04:	cmp    DWORD PTR [ebp-0x28],0x0
3000df08:	jne    0x300288e1
3000df0e:	cmp    DWORD PTR [ebp-0x18],0x0
3000df12:	jne    0x300288eb
3000df18:	cmp    DWORD PTR [ebp-0x1c],0x0
3000df1c:	jne    0x300288f5
3000df22:	mov    ecx,DWORD PTR [ebp-0x2c]
3000df25:	test   ecx,ecx
3000df27:	jne    0x300288ff
3000df2d:	mov    eax,esi
3000df2f:	mov    ecx,DWORD PTR [ebp-0x4]
3000df32:	pop    edi
3000df33:	pop    esi
3000df34:	xor    ecx,ebp
3000df36:	pop    ebx
3000df37:	call   0x3000115c
3000df3c:	leave  
3000df3d:	ret    
3000df3e:	test   esi,esi
3000df40:	js     0x3000ded3
3000df42:	jmp    0x3000def6
3000df44:	push   ebp
3000df45:	mov    ebp,esp
3000df47:	sub    esp,0x10
3000df4a:	push   ebx
3000df4b:	push   esi
3000df4c:	push   edi
3000df4d:	xor    edi,edi
3000df4f:	push   0x3004306c
3000df54:	lea    ecx,[ebp-0x10]
3000df57:	mov    DWORD PTR [ebp-0x4],edi
3000df5a:	mov    DWORD PTR [ebp-0x8],edi
3000df5d:	mov    DWORD PTR [ebp-0xc],edi
3000df60:	call   0x30004256
3000df65:	lea    eax,[ebp-0xc]
3000df68:	push   eax
3000df69:	push   DWORD PTR [ebp+0x8]
3000df6c:	call   DWORD PTR ds:0x300454a4
3000df72:	test   eax,eax
3000df74:	js     0x3000e01f
3000df7a:	push   0x3000e024
3000df7f:	push   0x30043114
3000df84:	lea    eax,[ebp+0x8]
3000df87:	push   eax
3000df88:	call   0x3000ba45
3000df8d:	push   eax
3000df8e:	lea    ecx,[ebp-0x10]
3000df91:	call   0x300014c1
3000df96:	mov    ecx,DWORD PTR [ebp+0x8]
3000df99:	lea    ecx,[ecx-0x10]
3000df9c:	call   0x30004017
3000dfa1:	push   DWORD PTR [ebp-0xc]
3000dfa4:	call   0x300042e4
3000dfa9:	pop    ecx
3000dfaa:	push   eax
3000dfab:	push   DWORD PTR [ebp-0xc]
3000dfae:	lea    ecx,[ebp-0x10]
3000dfb1:	call   0x30008b64
3000dfb6:	mov    esi,DWORD PTR [ebp-0x10]
3000dfb9:	lea    eax,[ebp-0x4]
3000dfbc:	push   eax
3000dfbd:	push   0x20019
3000dfc2:	push   edi
3000dfc3:	push   esi
3000dfc4:	push   0x80000002
3000dfc9:	call   DWORD PTR ds:0x30045008
3000dfcf:	mov    ebx,DWORD PTR [ebp+0xc]
3000dfd2:	test   eax,eax
3000dfd4:	je     0x3002873c
3000dfda:	mov    eax,DWORD PTR [ebp+0x14]
3000dfdd:	cmp    DWORD PTR [eax],edi
3000dfdf:	jne    0x300287c6
3000dfe5:	cmp    DWORD PTR [ebp-0xc],0x0
3000dfe9:	je     0x3000dff4
3000dfeb:	push   DWORD PTR [ebp-0xc]
3000dfee:	call   DWORD PTR ds:0x300454b4
3000dff4:	cmp    DWORD PTR [ebp-0x4],0x0
3000dff8:	mov    ebx,DWORD PTR ds:0x30045004
3000dffe:	jne    0x300287dd
3000e004:	cmp    DWORD PTR [ebp-0x8],0x0
3000e008:	jne    0x300287e7
3000e00e:	lea    ecx,[esi-0x10]
3000e011:	call   0x30004017
3000e016:	mov    eax,edi
3000e018:	pop    edi
3000e019:	pop    esi
3000e01a:	pop    ebx
3000e01b:	leave  
3000e01c:	ret    0x10
3000e01f:	mov    esi,DWORD PTR [ebp-0x10]
3000e022:	jmp    0x3000dfe5
3000e024:	pop    esp
3000e025:	add    BYTE PTR [ebx+0x0],al
3000e028:	dec    esp
3000e029:	add    BYTE PTR [ebx+0x0],dl
3000e02c:	dec    ecx
3000e02d:	add    BYTE PTR [eax+eax*1+0x5c],al
3000e031:	add    BYTE PTR [eax],al
3000e033:	add    BYTE PTR [edx+0x14],ch
3000e036:	mov    eax,0x30040520
3000e03b:	call   0x30006c56
3000e040:	mov    eax,ecx
3000e042:	mov    DWORD PTR [ebp-0x1c],eax
3000e045:	test   eax,eax
3000e047:	je     0x3002093b
3000e04d:	xor    ecx,ecx
3000e04f:	push   0x300430f0
3000e054:	mov    ebx,0x8007000e
3000e059:	push   0x34
3000e05b:	mov    DWORD PTR [eax],ecx
3000e05d:	mov    DWORD PTR [ebp-0x14],ebx
3000e060:	mov    DWORD PTR [ebp-0x18],ecx
3000e063:	mov    DWORD PTR [ebp-0x4],ecx
3000e066:	call   0x30006cc2
3000e06b:	pop    ecx
3000e06c:	mov    esi,eax
3000e06e:	pop    ecx
3000e06f:	mov    DWORD PTR [ebp-0x20],esi
3000e072:	test   esi,esi
3000e074:	je     0x3000e0d6
3000e076:	and    DWORD PTR [esi+0xc],0x0
3000e07a:	xor    eax,eax
3000e07c:	push   0x6
3000e07e:	pop    ecx
3000e07f:	lea    edi,[esi+0x10]
3000e082:	rep stos DWORD PTR es:[edi],eax
3000e084:	mov    BYTE PTR [esi+0x28],al
3000e087:	mov    DWORD PTR [esi+0x8],eax
3000e08a:	mov    DWORD PTR [esi+0x2c],eax
3000e08d:	mov    BYTE PTR [ebp-0x4],0x2
3000e091:	mov    DWORD PTR [esi],0x300069e0
3000e097:	mov    DWORD PTR [esi+0x4],0x300069c8
3000e09e:	mov    ecx,DWORD PTR ds:0x300430f4
3000e0a4:	mov    eax,DWORD PTR [ecx]
3000e0a6:	call   DWORD PTR [eax+0x4]
3000e0a9:	or     DWORD PTR [ebp-0x4],0xffffffff
3000e0ad:	test   esi,esi
3000e0af:	je     0x3000e0c9
3000e0b1:	lea    ecx,[esi+0xc]
3000e0b4:	call   0x30006d76
3000e0b9:	mov    ebx,eax
3000e0bb:	test   ebx,ebx
3000e0bd:	js     0x3000e0c3
3000e0bf:	xor    ebx,ebx
3000e0c1:	test   ebx,ebx
3000e0c3:	jne    0x30020956
3000e0c9:	mov    eax,DWORD PTR [ebp-0x1c]
3000e0cc:	mov    DWORD PTR [eax],esi
3000e0ce:	mov    eax,ebx
3000e0d0:	call   0x3000119d
3000e0d5:	ret    
3000e0d6:	xor    esi,esi
3000e0d8:	jmp    0x3000e0a9
3000e0da:	push   ebp
3000e0db:	mov    ebp,esp
3000e0dd:	push   ecx
3000e0de:	and    DWORD PTR [ebp-0x4],0x0
3000e0e2:	push   ebx
3000e0e3:	mov    ebx,ecx
3000e0e5:	push   edi
3000e0e6:	lea    ecx,[ebp-0x4]
3000e0e9:	call   0x3000e034
3000e0ee:	mov    edi,eax
3000e0f0:	test   edi,edi
3000e0f2:	js     0x3000e124
3000e0f4:	push   esi
3000e0f5:	mov    esi,DWORD PTR [ebp-0x4]
3000e0f8:	test   esi,esi
3000e0fa:	je     0x3000e123
3000e0fc:	mov    eax,DWORD PTR [esi]
3000e0fe:	push   esi
3000e0ff:	call   DWORD PTR [eax+0x4]
3000e102:	mov    DWORD PTR [esi+0x30],ebx
3000e105:	mov    ebx,DWORD PTR [ebp+0x8]
3000e108:	mov    eax,DWORD PTR [esi]
3000e10a:	push   ebx
3000e10b:	push   0x30015d48
3000e110:	push   esi
3000e111:	call   DWORD PTR [eax]
3000e113:	mov    edi,eax
3000e115:	test   edi,edi
3000e117:	js     0x300208e6
3000e11d:	mov    eax,DWORD PTR [esi]
3000e11f:	push   esi
3000e120:	call   DWORD PTR [eax+0x8]
3000e123:	pop    esi
3000e124:	mov    eax,edi
3000e126:	pop    edi
3000e127:	pop    ebx
3000e128:	leave  
3000e129:	ret    0x8
3000e12c:	push   0x14
3000e12e:	mov    eax,0x300404c8
3000e133:	call   0x30006c56
3000e138:	mov    eax,ecx
3000e13a:	mov    DWORD PTR [ebp-0x1c],eax
3000e13d:	test   eax,eax
3000e13f:	je     0x30020967
3000e145:	xor    ecx,ecx
3000e147:	push   0x300430f0
3000e14c:	mov    ebx,0x8007000e
3000e151:	push   0x30
3000e153:	mov    DWORD PTR [eax],ecx
3000e155:	mov    DWORD PTR [ebp-0x14],ebx
3000e158:	mov    DWORD PTR [ebp-0x18],ecx
3000e15b:	mov    DWORD PTR [ebp-0x4],ecx
3000e15e:	call   0x30006cc2
3000e163:	pop    ecx
3000e164:	mov    esi,eax
3000e166:	pop    ecx
3000e167:	mov    DWORD PTR [ebp-0x20],esi
3000e16a:	test   esi,esi
3000e16c:	je     0x3000e1ce
3000e16e:	and    DWORD PTR [esi+0x8],0x0
3000e172:	xor    eax,eax
3000e174:	push   0x6
3000e176:	pop    ecx
3000e177:	lea    edi,[esi+0xc]
3000e17a:	rep stos DWORD PTR es:[edi],eax
3000e17c:	mov    BYTE PTR [esi+0x24],al
3000e17f:	mov    DWORD PTR [esi+0x28],eax
3000e182:	mov    DWORD PTR [esi+0x2c],eax
3000e185:	mov    BYTE PTR [ebp-0x4],0x2
3000e189:	mov    DWORD PTR [esi],0x300069f4
3000e18f:	mov    DWORD PTR [esi+0x4],0x300069ac
3000e196:	mov    ecx,DWORD PTR ds:0x300430f4
3000e19c:	mov    eax,DWORD PTR [ecx]
3000e19e:	call   DWORD PTR [eax+0x4]
3000e1a1:	or     DWORD PTR [ebp-0x4],0xffffffff
3000e1a5:	test   esi,esi
3000e1a7:	je     0x3000e1c1
3000e1a9:	lea    ecx,[esi+0x8]
3000e1ac:	call   0x30006d76
3000e1b1:	mov    ebx,eax
3000e1b3:	test   ebx,ebx
3000e1b5:	js     0x3000e1bb
3000e1b7:	xor    ebx,ebx
3000e1b9:	test   ebx,ebx
3000e1bb:	jne    0x30020982
3000e1c1:	mov    eax,DWORD PTR [ebp-0x1c]
3000e1c4:	mov    DWORD PTR [eax],esi
3000e1c6:	mov    eax,ebx
3000e1c8:	call   0x3000119d
3000e1cd:	ret    
3000e1ce:	xor    esi,esi
3000e1d0:	jmp    0x3000e1a1
3000e1d2:	push   0x8
3000e1d4:	mov    eax,0x30040208
3000e1d9:	call   0x3000116a
3000e1de:	mov    ebx,edx
3000e1e0:	mov    DWORD PTR [ebp-0x14],ecx
3000e1e3:	mov    DWORD PTR [ebp-0x4],0x1
3000e1ea:	and    DWORD PTR [ebp-0x10],0x0
3000e1ee:	lea    ecx,[ebp-0x10]
3000e1f1:	call   0x3000e12c
3000e1f6:	mov    esi,DWORD PTR [ebp-0x10]
3000e1f9:	mov    edi,eax
3000e1fb:	test   edi,edi
3000e1fd:	js     0x3000e253
3000e1ff:	test   esi,esi
3000e201:	je     0x3000e253
3000e203:	mov    eax,DWORD PTR [esi]
3000e205:	push   esi
3000e206:	call   DWORD PTR [eax+0x4]
3000e209:	mov    edi,DWORD PTR [ebp+0x8]
3000e20c:	mov    ecx,DWORD PTR [ebp+0xc]
3000e20f:	mov    DWORD PTR [ebp-0x10],ecx
3000e212:	cmp    DWORD PTR [esi+0x28],edi
3000e215:	je     0x3000e22f
3000e217:	test   edi,edi
3000e219:	je     0x3000e221
3000e21b:	mov    eax,DWORD PTR [edi]
3000e21d:	push   edi
3000e21e:	call   DWORD PTR [eax+0x4]
3000e221:	mov    eax,DWORD PTR [esi+0x28]
3000e224:	mov    DWORD PTR [esi+0x28],edi
3000e227:	test   eax,eax
3000e229:	jne    0x300208ee
3000e22f:	push   DWORD PTR [ebp-0x10]
3000e232:	lea    ecx,[esi+0x2c]
3000e235:	call   0x3000ba0d
3000e23a:	mov    eax,DWORD PTR [esi]
3000e23c:	push   ebx
3000e23d:	push   DWORD PTR [ebp-0x14]
3000e240:	push   esi
3000e241:	call   DWORD PTR [eax]
3000e243:	mov    edi,eax
3000e245:	test   edi,edi
3000e247:	js     0x300208f9
3000e24d:	mov    eax,DWORD PTR [esi]
3000e24f:	push   esi
3000e250:	call   DWORD PTR [eax+0x8]
3000e253:	mov    eax,DWORD PTR [ebp+0x10]
3000e256:	test   eax,eax
3000e258:	jne    0x30020901
3000e25e:	mov    BYTE PTR [ebp-0x4],0x0
3000e262:	mov    eax,DWORD PTR [ebp+0x8]
3000e265:	test   eax,eax
3000e267:	je     0x3000e26f
3000e269:	mov    ecx,DWORD PTR [eax]
3000e26b:	push   eax
3000e26c:	call   DWORD PTR [ecx+0x8]
3000e26f:	mov    ecx,DWORD PTR [ebp+0xc]
3000e272:	lea    ecx,[ecx-0x10]
3000e275:	call   0x30004017
3000e27a:	mov    eax,edi
3000e27c:	call   0x3000119d
3000e281:	ret    0xc
3000e284:	push   0x8
3000e286:	mov    eax,0x30040610
3000e28b:	call   0x3000116a
3000e290:	push   ecx
3000e291:	lea    ecx,[ebp-0x10]
3000e294:	call   0x3000437e
3000e299:	and    DWORD PTR [ebp-0x4],0x0
3000e29d:	mov    esi,0x3000e2ec
3000e2a2:	push   esi
3000e2a3:	call   0x300042e4
3000e2a8:	pop    ecx
3000e2a9:	push   eax
3000e2aa:	push   esi
3000e2ab:	lea    ecx,[ebp-0x10]
3000e2ae:	call   0x30008b64
3000e2b3:	and    DWORD PTR [ebp-0x14],0x0
3000e2b7:	lea    eax,[ebp-0x14]
3000e2ba:	push   eax
3000e2bb:	push   0x20019
3000e2c0:	push   0x0
3000e2c2:	push   DWORD PTR [ebp-0x10]
3000e2c5:	push   0x80000002
3000e2ca:	call   DWORD PTR ds:0x30045008
3000e2d0:	mov    ecx,DWORD PTR [ebp-0x10]
3000e2d3:	neg    eax
3000e2d5:	sbb    esi,esi
3000e2d7:	not    esi
3000e2d9:	and    esi,DWORD PTR [ebp-0x14]
3000e2dc:	add    ecx,0xfffffff0
3000e2df:	call   0x30004017
3000e2e4:	mov    eax,esi
3000e2e6:	call   0x3000119d
3000e2eb:	ret    
3000e2ec:	pop    esp
3000e2ed:	add    BYTE PTR [ebx+0x0],al
3000e2f0:	ins    BYTE PTR es:[edi],dx
3000e2f1:	add    BYTE PTR [edx+0x0],dh
3000e2f4:	dec    eax
3000e2f5:	add    BYTE PTR [edi+0x0],ch
3000e2f8:	jae    0x3000e2fa
3000e2fa:	je     0x3000e2fc
3000e2fc:	add    BYTE PTR [eax],al
3000e2fe:	push   ebp
3000e2ff:	mov    ebp,esp
3000e301:	sub    esp,0xc
3000e304:	push   ebx
3000e305:	push   edi
3000e306:	mov    edi,ecx
3000e308:	mov    ecx,DWORD PTR [edi+0x8]
3000e30b:	call   0x3000e284
3000e310:	mov    ebx,eax
3000e312:	mov    eax,DWORD PTR [edi+0xc]
3000e315:	test   ebx,ebx
3000e317:	je     0x3000e353
3000e319:	and    DWORD PTR [ebp-0x4],0x0
3000e31d:	push   esi
3000e31e:	mov    DWORD PTR [ebp-0x8],eax
3000e321:	lea    eax,[ebp-0xc]
3000e324:	push   eax
3000e325:	lea    eax,[ebp-0x8]
3000e328:	push   eax
3000e329:	lea    eax,[ebp-0x4]
3000e32c:	push   eax
3000e32d:	push   0x0
3000e32f:	push   0x3000e364
3000e334:	push   ebx
3000e335:	mov    DWORD PTR [ebp-0xc],0x4
3000e33c:	call   DWORD PTR ds:0x3004500c
3000e342:	push   ebx
3000e343:	mov    esi,eax
3000e345:	call   DWORD PTR ds:0x30045004
3000e34b:	test   esi,esi
3000e34d:	pop    esi
3000e34e:	je     0x3000e357
3000e350:	mov    eax,DWORD PTR [edi+0xc]
3000e353:	pop    edi
3000e354:	pop    ebx
3000e355:	leave  
3000e356:	ret    
3000e357:	cmp    DWORD PTR [ebp-0x4],0x4
3000e35b:	mov    eax,DWORD PTR [ebp-0x8]
3000e35e:	je     0x3000e353
3000e360:	jmp    0x3000e350
3000e362:	nop
3000e363:	nop
3000e364:	push   ebx
3000e365:	add    BYTE PTR [eax+eax*1+0x61],dh
3000e369:	add    BYTE PTR [edx+0x0],dh
3000e36c:	je     0x3000e36e
3000e36e:	jne    0x3000e370
3000e370:	jo     0x3000e372
3000e372:	inc    esi
3000e373:	add    BYTE PTR [eax+eax*1+0x61],ch
3000e377:	add    BYTE PTR [edi+0x0],ah
3000e37a:	jae    0x3000e37c
3000e37c:	add    BYTE PTR [eax],al
3000e37e:	push   0x10
3000e380:	mov    eax,0x30040570
3000e385:	call   0x3000116a
3000e38a:	xor    edi,edi
3000e38c:	mov    DWORD PTR [ebp-0x18],edi
3000e38f:	lea    eax,[ebp-0x18]
3000e392:	push   eax
3000e393:	mov    DWORD PTR [ebp-0x4],edi
3000e396:	call   0x30006be4
3000e39b:	mov    esi,eax
3000e39d:	test   esi,esi
3000e39f:	js     0x3000e464
3000e3a5:	mov    ecx,DWORD PTR [ebp-0x18]
3000e3a8:	call   0x3000e284
3000e3ad:	mov    ebx,eax
3000e3af:	test   ebx,ebx
3000e3b1:	je     0x300206ba
3000e3b7:	lea    eax,[ebp-0x14]
3000e3ba:	push   eax
3000e3bb:	push   DWORD PTR [ebp+0x8]
3000e3be:	lea    eax,[ebp-0x10]
3000e3c1:	push   eax
3000e3c2:	push   edi
3000e3c3:	push   0x3000d87c
3000e3c8:	push   ebx
3000e3c9:	mov    DWORD PTR [ebp-0x10],edi
3000e3cc:	mov    DWORD PTR [ebp-0x14],0x200
3000e3d3:	call   DWORD PTR ds:0x3004500c
3000e3d9:	xor    esi,esi
3000e3db:	inc    esi
3000e3dc:	test   eax,eax
3000e3de:	jne    0x3000e45d
3000e3e0:	cmp    DWORD PTR [ebp-0x10],esi
3000e3e3:	jne    0x3000e45d
3000e3e5:	lea    eax,[ebp-0x14]
3000e3e8:	push   eax
3000e3e9:	push   DWORD PTR [ebp+0x10]
3000e3ec:	lea    eax,[ebp-0x10]
3000e3ef:	push   eax
3000e3f0:	push   edi
3000e3f1:	push   0x3000e49c
3000e3f6:	push   ebx
3000e3f7:	mov    DWORD PTR [ebp-0x14],0x200
3000e3fe:	call   DWORD PTR ds:0x3004500c
3000e404:	test   eax,eax
3000e406:	jne    0x3000e45d
3000e408:	cmp    DWORD PTR [ebp-0x10],esi
3000e40b:	jne    0x3000e45d
3000e40d:	lea    eax,[ebp-0x14]
3000e410:	push   eax
3000e411:	lea    eax,[ebp-0x1c]
3000e414:	push   eax
3000e415:	lea    eax,[ebp-0x10]
3000e418:	push   eax
3000e419:	push   edi
3000e41a:	push   0x3000e468
3000e41f:	push   ebx
3000e420:	mov    DWORD PTR [ebp-0x1c],edi
3000e423:	mov    DWORD PTR [ebp-0x14],0x4
3000e42a:	call   DWORD PTR ds:0x3004500c
3000e430:	push   ebx
3000e431:	mov    esi,eax
3000e433:	call   DWORD PTR ds:0x30045004
3000e439:	test   esi,esi
3000e43b:	je     0x300206c2
3000e441:	mov    eax,DWORD PTR [ebp+0x18]
3000e444:	mov    DWORD PTR [eax],0x2
3000e44a:	push   DWORD PTR [ebp-0x18]
3000e44d:	call   DWORD PTR ds:0x300454e8
3000e453:	mov    eax,edi
3000e455:	call   0x3000119d
3000e45a:	ret    0x14
3000e45d:	push   ebx
3000e45e:	call   DWORD PTR ds:0x30045004
3000e464:	mov    edi,esi
3000e466:	jmp    0x3000e44a
3000e468:	dec    ecx
3000e469:	add    BYTE PTR [esi+0x0],ch
3000e46c:	imul   eax,DWORD PTR [eax],0x690074
3000e472:	popa   
3000e473:	add    BYTE PTR [eax+eax*1+0x69],ch
3000e477:	add    BYTE PTR [edx+0x0],bh
3000e47a:	add    BYTE PTR gs:[esi+0x0],cl
3000e47e:	add    BYTE PTR gs:[edi+0x0],dh
3000e482:	inc    esp
3000e483:	add    BYTE PTR [edi+0x0],ch
3000e486:	ins    DWORD PTR es:[edi],dx
3000e487:	add    BYTE PTR [ecx+0x0],ah
3000e48a:	imul   eax,DWORD PTR [eax],0x46006e
3000e490:	ins    BYTE PTR es:[edi],dx
3000e491:	add    BYTE PTR [ecx+0x0],ah
3000e494:	add    BYTE PTR [bp+di+0x0],dh
3000e498:	add    BYTE PTR [eax],al
3000e49a:	nop
3000e49b:	nop
3000e49c:	inc    ebx
3000e49d:	add    BYTE PTR [eax+eax*1+0x61],ch
3000e4a1:	add    BYTE PTR [ebx+0x0],dh
3000e4a4:	jae    0x3000e4a6
3000e4a6:	add    BYTE PTR [eax],al
3000e4a8:	push   ebp
3000e4a9:	mov    ebp,esp
3000e4ab:	push   ecx
3000e4ac:	push   esi
3000e4ad:	mov    esi,ecx
3000e4af:	mov    eax,DWORD PTR [esi+0x4]
3000e4b2:	test   eax,eax
3000e4b4:	je     0x3002299c
3000e4ba:	push   edi
3000e4bb:	add    eax,0x44
3000e4be:	push   eax
3000e4bf:	lea    ecx,[ebp-0x4]
3000e4c2:	call   0x30004340
3000e4c7:	mov    ecx,DWORD PTR [ebp+0x8]
3000e4ca:	lea    eax,[ebp-0x4]
3000e4cd:	push   eax
3000e4ce:	call   0x300014c1
3000e4d3:	lea    ecx,[ebp-0x4]
3000e4d6:	call   0x300051a4
3000e4db:	mov    edi,DWORD PTR [ebp+0xc]
3000e4de:	test   edi,edi
3000e4e0:	jne    0x3000ec47
3000e4e6:	xor    eax,eax
3000e4e8:	pop    edi
3000e4e9:	pop    esi
3000e4ea:	leave  
3000e4eb:	ret    0x8
3000e4ee:	nop
3000e4ef:	nop
3000e4f0:	push   ebx
3000e4f1:	add    BYTE PTR [edi+0x0],ch
3000e4f4:	data16 add BYTE PTR [eax+eax*1+0x77],dh
3000e4f9:	add    BYTE PTR [ecx+0x0],ah
3000e4fc:	jb     0x3000e4fe
3000e4fe:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3000e503:	add    BYTE PTR [ecx+0x0],ch
3000e506:	arpl   WORD PTR [eax],ax
3000e508:	jb     0x3000e50a
3000e50a:	outs   dx,DWORD PTR ds:[esi]
3000e50b:	add    BYTE PTR [ebx+0x0],dh
3000e50e:	outs   dx,DWORD PTR ds:[esi]
3000e50f:	add    BYTE PTR [esi+0x0],ah
3000e512:	je     0x3000e514
3000e514:	pop    esp
3000e515:	add    BYTE PTR [esi+0x0],dl
3000e518:	imul   eax,DWORD PTR [eax],0x750073
3000e51e:	popa   
3000e51f:	add    BYTE PTR [eax+eax*1+0x53],ch
3000e523:	add    BYTE PTR [eax+eax*1+0x75],dh
3000e527:	add    BYTE PTR [eax+eax*1+0x69],ah
3000e52b:	add    BYTE PTR [edi+0x0],ch
3000e52e:	pop    esp
3000e52f:	add    BYTE PTR [ecx],dh
3000e531:	add    BYTE PTR [ecx],dh
3000e533:	add    BYTE PTR [esi],ch
3000e535:	add    BYTE PTR [eax],dh
3000e537:	add    BYTE PTR [eax],al
3000e539:	add    BYTE PTR [eax-0x6f6f6f70],dl
3000e53f:	nop
3000e540:	push   ebx
3000e541:	add    BYTE PTR [edi+0x0],ch
3000e544:	data16 add BYTE PTR [eax+eax*1+0x77],dh
3000e549:	add    BYTE PTR [ecx+0x0],ah
3000e54c:	jb     0x3000e54e
3000e54e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3000e553:	add    BYTE PTR [ecx+0x0],ch
3000e556:	arpl   WORD PTR [eax],ax
3000e558:	jb     0x3000e55a
3000e55a:	outs   dx,DWORD PTR ds:[esi]
3000e55b:	add    BYTE PTR [ebx+0x0],dh
3000e55e:	outs   dx,DWORD PTR ds:[esi]
3000e55f:	add    BYTE PTR [esi+0x0],ah
3000e562:	je     0x3000e564
3000e564:	pop    esp
3000e565:	add    BYTE PTR [esi+0x0],dl
3000e568:	push   ebx
3000e569:	add    BYTE PTR [ebx+0x0],al
3000e56c:	outs   dx,DWORD PTR ds:[esi]
3000e56d:	add    BYTE PTR [ebp+0x0],ch
3000e570:	ins    DWORD PTR es:[edi],dx
3000e571:	add    BYTE PTR [edi+0x0],ch
3000e574:	outs   dx,BYTE PTR ds:[esi]
3000e575:	add    BYTE PTR [eax+eax*1+0x31],bl
3000e579:	add    BYTE PTR [ecx],dh
3000e57b:	add    BYTE PTR [esi],ch
3000e57d:	add    BYTE PTR [eax],dh
3000e57f:	add    BYTE PTR [eax+eax*1+0x53],bl
3000e583:	add    BYTE PTR [ecx+0x0],dl
3000e586:	dec    ebp
3000e587:	add    BYTE PTR [eax],al
3000e589:	add    BYTE PTR [eax+0x73006d90],dl
3000e58f:	add    BYTE PTR [ebx+0x0],ah
3000e592:	outs   dx,DWORD PTR ds:[esi]
3000e593:	add    BYTE PTR [edx+0x0],dh
3000e596:	add    BYTE PTR gs:[ebp+0x0],ah
3000e59a:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
3000e59f:	add    BYTE PTR [eax+eax*1+0x0],ch
3000e5a3:	add    BYTE PTR [ebx+0x0],al
3000e5a6:	outs   dx,DWORD PTR ds:[esi]
3000e5a7:	add    BYTE PTR [esi+0x0],ch
3000e5aa:	data16 add BYTE PTR [ecx+0x0],ch
3000e5ae:	add    BYTE PTR [bx+si+0x0],dl
3000e5b2:	imul   eax,DWORD PTR [eax],0x67
3000e5b5:	add    BYTE PTR [eax+eax*1+0x65],al
3000e5b9:	add    BYTE PTR [esi+0x0],ah
3000e5bc:	inc    ebx
3000e5bd:	add    BYTE PTR [ecx+0x0],ah
3000e5c0:	arpl   WORD PTR [eax],ax
3000e5c2:	push   0x4d006500
3000e5c7:	add    BYTE PTR [ebp+0x0],ah
3000e5ca:	je     0x3000e5cc
3000e5cc:	popa   
3000e5cd:	add    BYTE PTR [eax+eax*1+0x61],al
3000e5d1:	add    BYTE PTR [eax+eax*1+0x61],dh
3000e5d5:	add    BYTE PTR [eax],al
3000e5d7:	add    BYTE PTR [ebx+0x151e8ce],cl
3000e5dd:	add    BYTE PTR [eax],al
3000e5df:	jmp    0x3000e728
3000e5e4:	push   ebp
3000e5e5:	mov    ebp,esp
3000e5e7:	push   ecx
3000e5e8:	push   ecx
3000e5e9:	push   esi
3000e5ea:	push   edi
3000e5eb:	lea    eax,[ebp-0x4]
3000e5ee:	push   eax
3000e5ef:	push   0x0
3000e5f1:	lea    eax,[ebp-0x8]
3000e5f4:	push   eax
3000e5f5:	mov    esi,edx
3000e5f7:	push   0x0
3000e5f9:	push   DWORD PTR [esi]
3000e5fb:	mov    edi,ecx
3000e5fd:	push   DWORD PTR [edi]
3000e5ff:	call   DWORD PTR ds:0x3004500c
3000e605:	test   eax,eax
3000e607:	jg     0x300245e5
3000e60d:	js     0x3000e64e
3000e60f:	mov    eax,DWORD PTR [ebp-0x4]
3000e612:	mov    ecx,DWORD PTR [ebp+0x8]
3000e615:	shr    eax,1
3000e617:	push   eax
3000e618:	call   0x30004286
3000e61d:	lea    ecx,[ebp-0x4]
3000e620:	push   ecx
3000e621:	push   eax
3000e622:	lea    eax,[ebp-0x8]
3000e625:	push   eax
3000e626:	push   0x0
3000e628:	push   DWORD PTR [esi]
3000e62a:	push   DWORD PTR [edi]
3000e62c:	call   DWORD PTR ds:0x3004500c
3000e632:	mov    esi,eax
3000e634:	test   esi,esi
3000e636:	jg     0x300245f4
3000e63c:	mov    ecx,DWORD PTR [ebp+0x8]
3000e63f:	js     0x30024604
3000e645:	push   0xffffffff
3000e647:	call   0x30006c8c
3000e64c:	xor    eax,eax
3000e64e:	pop    edi
3000e64f:	pop    esi
3000e650:	leave  
3000e651:	ret    0x4
3000e654:	push   eax
3000e655:	add    BYTE PTR [ebx+0x0],ch
3000e658:	add    BYTE PTR [si+0x0],al
3000e65c:	add    BYTE PTR gs:[esi+0x0],ah
3000e660:	push   ebx
3000e661:	add    BYTE PTR [ebp+0x0],ah
3000e664:	popa   
3000e665:	add    BYTE PTR [edx+0x0],dh
3000e668:	arpl   WORD PTR [eax],ax
3000e66a:	push   0x61005000
3000e66f:	add    BYTE PTR [eax+eax*1+0x68],dh
3000e673:	add    BYTE PTR [eax],al
3000e675:	add    BYTE PTR [eax+0x70004190],dl
3000e67b:	add    BYTE PTR [eax+0x0],dh
3000e67e:	ins    BYTE PTR es:[edi],dx
3000e67f:	add    BYTE PTR [ecx+0x0],ch
3000e682:	arpl   WORD PTR [eax],ax
3000e684:	popa   
3000e685:	add    BYTE PTR [eax+eax*1+0x69],dh
3000e689:	add    BYTE PTR [edi+0x0],ch
3000e68c:	outs   dx,BYTE PTR ds:[esi]
3000e68d:	add    BYTE PTR [ebp+0x0],al
3000e690:	js     0x3000e692
3000e692:	je     0x3000e694
3000e694:	add    BYTE PTR gs:[esi+0x0],ch
3000e698:	jae    0x3000e69a
3000e69a:	imul   eax,DWORD PTR [eax],0x6e006f
3000e6a0:	jae    0x3000e6a2
3000e6a2:	inc    esi
3000e6a3:	add    BYTE PTR [edi+0x0],ch
3000e6a6:	ins    BYTE PTR es:[edi],dx
3000e6a7:	add    BYTE PTR [eax+eax*1+0x65],ah
3000e6ab:	add    BYTE PTR [edx+0x0],dh
3000e6ae:	add    BYTE PTR [eax],al
3000e6b0:	push   edx
3000e6b1:	add    BYTE PTR [ebp+0x0],ah
3000e6b4:	ins    BYTE PTR es:[edi],dx
3000e6b5:	add    BYTE PTR [ecx+0x0],ah
3000e6b8:	je     0x3000e6ba
3000e6ba:	imul   eax,DWORD PTR [eax],0x650076
3000e6c0:	push   edx
3000e6c1:	add    BYTE PTR [edi+0x0],ch
3000e6c4:	outs   dx,DWORD PTR ds:[esi]
3000e6c5:	add    BYTE PTR [eax+eax*1+0x46],dh
3000e6c9:	add    BYTE PTR [edi+0x0],ch
3000e6cc:	ins    BYTE PTR es:[edi],dx
3000e6cd:	add    BYTE PTR [eax+eax*1+0x65],ah
3000e6d1:	add    BYTE PTR [edx+0x0],dh
3000e6d4:	push   eax
3000e6d5:	add    BYTE PTR [ecx+0x0],ah
3000e6d8:	je     0x3000e6da
3000e6da:	push   0x90000000
3000e6df:	nop
3000e6e0:	push   ebp
3000e6e1:	add    BYTE PTR [ebx+0x0],dh
3000e6e4:	add    BYTE PTR gs:[edx+0x0],dh
3000e6e8:	inc    esi
3000e6e9:	add    BYTE PTR [ecx+0x0],ch
3000e6ec:	ins    BYTE PTR es:[edi],dx
3000e6ed:	add    BYTE PTR [ebp+0x0],ah
3000e6f0:	jae    0x3000e6f2
3000e6f2:	inc    esi
3000e6f3:	add    BYTE PTR [edi+0x0],ch
3000e6f6:	ins    BYTE PTR es:[edi],dx
3000e6f7:	add    BYTE PTR [eax+eax*1+0x65],ah
3000e6fb:	add    BYTE PTR [edx+0x0],dh
3000e6fe:	add    BYTE PTR [eax],al
3000e700:	push   edi
3000e701:	mov    edi,DWORD PTR [esi]
3000e703:	test   edi,edi
3000e705:	je     0x3002380e
3000e70b:	mov    eax,DWORD PTR [edi]
3000e70d:	lea    ecx,[edi+0x8]
3000e710:	mov    DWORD PTR [esi],eax
3000e712:	call   0x300051a4
3000e717:	mov    eax,DWORD PTR [esi+0x10]
3000e71a:	mov    DWORD PTR [edi],eax
3000e71c:	dec    DWORD PTR [esi+0x8]
3000e71f:	mov    DWORD PTR [esi+0x10],edi
3000e722:	je     0x3000e5d8
3000e728:	cmp    DWORD PTR [esi+0x8],ebx
3000e72b:	ja     0x3000e701
3000e72d:	pop    edi
3000e72e:	jmp    0x3000e73b
3000e730:	push   ebx
3000e731:	push   esi
3000e732:	mov    esi,ecx
3000e734:	xor    ebx,ebx
3000e736:	cmp    DWORD PTR [esi+0x8],ebx
3000e739:	ja     0x3000e700
3000e73b:	mov    ecx,DWORD PTR [esi+0xc]
3000e73e:	mov    DWORD PTR [esi],ebx
3000e740:	mov    DWORD PTR [esi+0x4],ebx
3000e743:	mov    DWORD PTR [esi+0x10],ebx
3000e746:	test   ecx,ecx
3000e748:	jne    0x3000e74d
3000e74a:	pop    esi
3000e74b:	pop    ebx
3000e74c:	ret    
3000e74d:	call   0x3000898e
3000e752:	mov    DWORD PTR [esi+0xc],ebx
3000e755:	jmp    0x3000e74a
3000e757:	push   ebp
3000e758:	mov    ebp,esp
3000e75a:	push   ebx
3000e75b:	mov    ebx,DWORD PTR [ebp+0xc]
3000e75e:	push   esi
3000e75f:	push   ebx
3000e760:	push   DWORD PTR [ebp+0x8]
3000e763:	mov    esi,ecx
3000e765:	call   0x3001b216
3000e76a:	mov    eax,DWORD PTR [esi+0x4]
3000e76d:	shr    eax,0x2
3000e770:	test   al,0x1
3000e772:	jne    0x30025c66
3000e778:	mov    eax,DWORD PTR [esi]
3000e77a:	push   edi
3000e77b:	mov    ecx,esi
3000e77d:	call   DWORD PTR [eax+0x4]
3000e780:	test   eax,eax
3000e782:	js     0x30025c84
3000e788:	push   DWORD PTR [esi+0x74]
3000e78b:	lea    ecx,[ebp+0xc]
3000e78e:	call   0x3000437e
3000e793:	lea    ecx,[ebp+0xc]
3000e796:	push   ecx
3000e797:	lea    ecx,[esi+0x5c]
3000e79a:	call   0x3001c50e
3000e79f:	lea    ecx,[ebp+0xc]
3000e7a2:	mov    edi,eax
3000e7a4:	call   0x300051a4
3000e7a9:	test   edi,edi
3000e7ab:	js     0x3000e7c9
3000e7ad:	mov    eax,DWORD PTR [esi]
3000e7af:	push   ebx
3000e7b0:	mov    ecx,esi
3000e7b2:	call   DWORD PTR [eax+0x3c]
3000e7b5:	test   al,al
3000e7b7:	je     0x3000eb3c
3000e7bd:	push   0x1
3000e7bf:	lea    ecx,[esi+0x5c]
3000e7c2:	call   0x3001502d
3000e7c7:	mov    edi,eax
3000e7c9:	cmp    DWORD PTR [esi+0x70],0x0
3000e7cd:	je     0x3000e7dc
3000e7cf:	push   DWORD PTR [esi+0x70]
3000e7d2:	call   0x3000eb81
3000e7d7:	and    DWORD PTR [esi+0x70],0x0
3000e7db:	pop    ecx
3000e7dc:	test   edi,edi
3000e7de:	js     0x30025c84
3000e7e4:	mov    eax,edi
3000e7e6:	pop    edi
3000e7e7:	pop    esi
3000e7e8:	pop    ebx
3000e7e9:	pop    ebp
3000e7ea:	ret    0x8
3000e7ed:	push   ebp
3000e7ee:	mov    ebp,esp
3000e7f0:	and    esp,0xfffffff8
3000e7f3:	sub    esp,0xcc
3000e7f9:	mov    eax,ds:0x30043050
3000e7fe:	xor    eax,esp
3000e800:	mov    DWORD PTR [esp+0xc8],eax
3000e807:	push   ebx
3000e808:	mov    ebx,ecx
3000e80a:	push   esi
3000e80b:	cmp    DWORD PTR [ebx+0x1c],0x8000000a
3000e812:	push   edi
3000e813:	mov    DWORD PTR [esp+0x1c],ebx
3000e817:	jne    0x3002355c
3000e81d:	lea    eax,[ebx+0x7c]
3000e820:	push   eax
3000e821:	lea    eax,[ebx+0x64]
3000e824:	push   eax
3000e825:	push   0x1
3000e827:	push   0x1
3000e829:	lea    ecx,[esp+0x80]
3000e830:	call   0x3001bf50
3000e835:	mov    ecx,ebx
3000e837:	call   0x3001c0e7
3000e83c:	mov    esi,eax
3000e83e:	test   esi,esi
3000e840:	js     0x3000ea41
3000e846:	mov    eax,DWORD PTR [ebx]
3000e848:	mov    ecx,ebx
3000e84a:	call   DWORD PTR [eax+0x48]
3000e84d:	xor    edi,edi
3000e84f:	test   al,al
3000e851:	je     0x3000e8bc
3000e853:	lea    ecx,[esp+0x10]
3000e857:	call   0x300051c8
3000e85c:	mov    esi,DWORD PTR [ebx+0x44]
3000e85f:	push   0x104
3000e864:	lea    ecx,[esp+0x14]
3000e868:	call   0x30004286
3000e86d:	push   0x3000ea68
3000e872:	push   esi
3000e873:	push   eax
3000e874:	call   DWORD PTR ds:0x30045644
3000e87a:	push   0xffffffff
3000e87c:	lea    ecx,[esp+0x14]
3000e880:	call   0x30006c8c
3000e885:	lea    eax,[esp+0xb0]
3000e88c:	push   eax
3000e88d:	push   edi
3000e88e:	push   DWORD PTR [esp+0x18]
3000e892:	call   DWORD PTR ds:0x30045108
3000e898:	test   eax,eax
3000e89a:	je     0x3000e8b3
3000e89c:	mov    ecx,DWORD PTR [ebx+0x4]
3000e89f:	mov    eax,DWORD PTR [esp+0xc4]
3000e8a6:	mov    DWORD PTR [ecx+0x18],eax
3000e8a9:	mov    eax,DWORD PTR [esp+0xc8]
3000e8b0:	mov    DWORD PTR [ecx+0x1c],eax
3000e8b3:	lea    ecx,[esp+0x10]
3000e8b7:	call   0x300051a4
3000e8bc:	mov    eax,DWORD PTR [ebx+0x10]
3000e8bf:	shr    eax,0x2
3000e8c2:	test   al,0x1
3000e8c4:	jne    0x3000e909
3000e8c6:	mov    eax,DWORD PTR [ebx]
3000e8c8:	mov    ecx,ebx
3000e8ca:	call   DWORD PTR [eax+0x48]
3000e8cd:	test   al,al
3000e8cf:	je     0x30023566
3000e8d5:	mov    ecx,DWORD PTR [ebx+0x4]
3000e8d8:	mov    eax,DWORD PTR [ecx]
3000e8da:	call   DWORD PTR [eax+0x4]
3000e8dd:	test   eax,eax
3000e8df:	js     0x3001de60
3000e8e5:	mov    ecx,DWORD PTR [ebx+0x4]
3000e8e8:	mov    eax,DWORD PTR [ecx]
3000e8ea:	call   DWORD PTR [eax+0x1c]
3000e8ed:	test   al,al
3000e8ef:	je     0x3001de60
3000e8f5:	mov    eax,DWORD PTR [ebx]
3000e8f7:	mov    ecx,ebx
3000e8f9:	call   DWORD PTR [eax+0x30]
3000e8fc:	test   al,al
3000e8fe:	je     0x3000e909
3000e900:	push   0x1
3000e902:	mov    ecx,ebx
3000e904:	call   0x3001be64
3000e909:	mov    ecx,DWORD PTR [ebx+0x4]
3000e90c:	lea    edx,[esp+0x70]
3000e910:	mov    eax,DWORD PTR [ecx]
3000e912:	push   edx
3000e913:	push   DWORD PTR [ebx+0x10]
3000e916:	call   DWORD PTR [eax+0x18]
3000e919:	push   DWORD PTR [ebx+0x4]
3000e91c:	mov    ecx,ebx
3000e91e:	mov    DWORD PTR [ebx+0x1c],eax
3000e921:	call   0x30011268
3000e926:	cmp    BYTE PTR ds:0x300430f1,0x0
3000e92d:	jne    0x30023597
3000e933:	push   0x23fa
3000e938:	call   0x3000532c
3000e93d:	lea    ecx,[esp+0x28]
3000e941:	call   0x3000eb87
3000e946:	lea    ecx,[esp+0x18]
3000e94a:	call   0x300051c8
3000e94f:	lea    ecx,[esp+0x14]
3000e953:	call   0x300051c8
3000e958:	lea    ecx,[esp+0x10]
3000e95c:	call   0x300051c8
3000e961:	mov    eax,DWORD PTR [ebx]
3000e963:	push   edi
3000e964:	lea    ecx,[esp+0x1c]
3000e968:	push   ecx
3000e969:	mov    ecx,ebx
3000e96b:	call   DWORD PTR [eax+0x20]
3000e96e:	mov    esi,eax
3000e970:	test   esi,esi
3000e972:	js     0x3000e9f0
3000e974:	mov    eax,DWORD PTR [ebx]
3000e976:	push   edi
3000e977:	lea    ecx,[esp+0x18]
3000e97b:	push   ecx
3000e97c:	mov    ecx,ebx
3000e97e:	call   DWORD PTR [eax+0xc]
3000e981:	mov    esi,eax
3000e983:	test   esi,esi
3000e985:	js     0x3000e9f0
3000e987:	push   0x104
3000e98c:	lea    ecx,[esp+0x14]
3000e990:	call   0x30004286
3000e995:	mov    ecx,DWORD PTR [esp+0x18]
3000e999:	mov    edx,DWORD PTR [esp+0x1c]
3000e99d:	mov    edi,DWORD PTR [esp+0x14]
3000e9a1:	mov    ebx,DWORD PTR [ebx+0x24]
3000e9a4:	mov    DWORD PTR [esp+0x20],ecx
3000e9a8:	mov    ecx,DWORD PTR [edx+0x4]
3000e9ab:	mov    esi,ecx
3000e9ad:	push   ecx
3000e9ae:	push   eax
3000e9af:	mov    eax,DWORD PTR [esi]
3000e9b1:	call   DWORD PTR [eax+0x24]
3000e9b4:	movzx  eax,al
3000e9b7:	push   eax
3000e9b8:	mov    eax,DWORD PTR [esi]
3000e9ba:	mov    ecx,esi
3000e9bc:	call   DWORD PTR [eax+0x20]
3000e9bf:	movzx  eax,al
3000e9c2:	push   eax
3000e9c3:	push   edi
3000e9c4:	push   ebx
3000e9c5:	push   DWORD PTR [esp+0x38]
3000e9c9:	lea    ecx,[esp+0x44]
3000e9cd:	call   0x300112f6
3000e9d2:	test   eax,eax
3000e9d4:	js     0x300235af
3000e9da:	push   DWORD PTR [esp+0x10]
3000e9de:	push   0x3000eaa8
3000e9e3:	call   DWORD PTR ds:0x300450fc
3000e9e9:	mov    eax,DWORD PTR [esp+0x1c]
3000e9ed:	mov    esi,DWORD PTR [eax+0x1c]
3000e9f0:	lea    ecx,[esp+0x10]
3000e9f4:	call   0x300051a4
3000e9f9:	lea    ecx,[esp+0x14]
3000e9fd:	call   0x300051a4
3000ea02:	lea    ecx,[esp+0x18]
3000ea06:	call   0x300051a4
3000ea0b:	lea    ecx,[esp+0x54]
3000ea0f:	call   0x30010add
3000ea14:	lea    ecx,[esp+0x3c]
3000ea18:	call   0x30010add
3000ea1d:	lea    ecx,[esp+0x34]
3000ea21:	call   0x300051a4
3000ea26:	lea    ecx,[esp+0x30]
3000ea2a:	call   0x300051a4
3000ea2f:	lea    ecx,[esp+0x2c]
3000ea33:	call   0x300051a4
3000ea38:	lea    ecx,[esp+0x28]
3000ea3c:	call   0x300051a4
3000ea41:	lea    ecx,[esp+0x70]
3000ea45:	call   0x3000eb1e
3000ea4a:	mov    eax,esi
3000ea4c:	mov    ecx,DWORD PTR [esp+0xd4]
3000ea53:	pop    edi
3000ea54:	pop    esi
3000ea55:	pop    ebx
3000ea56:	xor    ecx,esp
3000ea58:	call   0x3000115c
3000ea5d:	mov    esp,ebp
3000ea5f:	pop    ebp
3000ea60:	ret    
3000ea61:	nop
3000ea62:	nop
3000ea63:	nop
3000ea64:	nop
3000ea65:	nop
3000ea66:	nop
3000ea67:	nop
3000ea68:	add    BYTE PTR gs:[eax+0x0],bh
3000ea6c:	je     0x3000ea6e
3000ea6e:	add    BYTE PTR gs:[esi+0x0],ch
3000ea72:	jae    0x3000ea74
3000ea74:	imul   eax,DWORD PTR [eax],0x6e006f
3000ea7a:	jae    0x3000ea7c
3000ea7c:	add    BYTE PTR cs:[ebx+0x0],ah
3000ea80:	outs   dx,DWORD PTR ds:[esi]
3000ea81:	add    BYTE PTR [esi+0x0],ch
3000ea84:	data16 add BYTE PTR [ecx+0x0],ch
3000ea88:	add    BYTE PTR [di+0x0],dh
3000ea8c:	jb     0x3000ea8e
3000ea8e:	popa   
3000ea8f:	add    BYTE PTR [eax+eax*1+0x69],dh
3000ea93:	add    BYTE PTR [edi+0x0],ch
3000ea96:	outs   dx,BYTE PTR ds:[esi]
3000ea97:	add    BYTE PTR [ebx+0x0],ah
3000ea9a:	push   0x6e006100
3000ea9f:	add    BYTE PTR [edi+0x0],ah
3000eaa2:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
3000eaa7:	add    BYTE PTR [eax+0x0],dl
3000eaaa:	imul   eax,DWORD PTR [eax],0x67
3000eaad:	add    BYTE PTR [eax+eax*1+0x65],al
3000eab1:	add    BYTE PTR [esi+0x0],ah
3000eab4:	inc    ecx
3000eab5:	add    BYTE PTR [eax+0x0],dh
3000eab8:	jo     0x3000eaba
3000eaba:	ins    BYTE PTR es:[edi],dx
3000eabb:	add    BYTE PTR [ecx+0x0],ch
3000eabe:	arpl   WORD PTR [eax],ax
3000eac0:	popa   
3000eac1:	add    BYTE PTR [eax+eax*1+0x69],dh
3000eac5:	add    BYTE PTR [edi+0x0],ch
3000eac8:	outs   dx,BYTE PTR ds:[esi]
3000eac9:	add    BYTE PTR [ebx+0x0],al
3000eacc:	outs   dx,DWORD PTR ds:[esi]
3000eacd:	add    BYTE PTR [esi+0x0],ch
3000ead0:	data16 add BYTE PTR [ecx+0x0],ch
3000ead4:	add    BYTE PTR [bp+0x0],al
3000ead8:	imul   eax,DWORD PTR [eax],0x65006c
3000eade:	add    BYTE PTR [eax],al
3000eae0:	push   esi
3000eae1:	push   edi
3000eae2:	mov    edi,ecx
3000eae4:	call   0x3000e7ed
3000eae9:	test   eax,eax
3000eaeb:	js     0x3000eb15
3000eaed:	lea    ecx,[edi+0xa4]
3000eaf3:	mov    eax,DWORD PTR [ecx]
3000eaf5:	cmp    DWORD PTR [eax-0xc],0x0
3000eaf9:	je     0x3001faed
3000eaff:	mov    esi,DWORD PTR [edi]
3000eb01:	mov    ecx,edi
3000eb03:	call   DWORD PTR [esi+0x44]
3000eb06:	movzx  eax,al
3000eb09:	push   eax
3000eb0a:	mov    ecx,edi
3000eb0c:	call   DWORD PTR [esi+0x58]
3000eb0f:	test   eax,eax
3000eb11:	js     0x3000eb15
3000eb13:	xor    eax,eax
3000eb15:	pop    edi
3000eb16:	pop    esi
3000eb17:	ret    
3000eb18:	test   eax,eax
3000eb1a:	jns    0x3000eaff
3000eb1c:	jmp    0x3000eb15
3000eb1e:	push   esi
3000eb1f:	mov    esi,ecx
3000eb21:	lea    ecx,[esi+0x24]
3000eb24:	mov    DWORD PTR [esi],0x3000eb38
3000eb2a:	call   0x30007014
3000eb2f:	lea    ecx,[esi+0xc]
3000eb32:	pop    esi
3000eb33:	jmp    0x3000e730
3000eb38:	mov    al,ds:0x8030033a
3000eb3d:	jle    0x3000eba3
3000eb3f:	add    dh,al
3000eb41:	add    eax,0x30043bcd
3000eb46:	add    DWORD PTR [edi],ecx
3000eb48:	test   BYTE PTR [eax],ah
3000eb4a:	jno    0x3000eb4d
3000eb4c:	add    BYTE PTR [ebx-0x75],dl
3000eb4f:	into   
3000eb50:	call   0x300099a0
3000eb55:	mov    edi,eax
3000eb57:	test   edi,edi
3000eb59:	js     0x3000e7c9
3000eb5f:	cmp    BYTE PTR [esi+0x68],0x0
3000eb63:	jne    0x3000eb72
3000eb65:	test   DWORD PTR [esi+0x4],0x200
3000eb6c:	jne    0x30025c77
3000eb72:	push   0x1
3000eb74:	lea    ecx,[esi+0x5c]
3000eb77:	call   0x3001502d
3000eb7c:	jmp    0x3000e7c9
3000eb81:	jmp    DWORD PTR ds:0x300453c8
3000eb87:	push   esi
3000eb88:	mov    esi,ecx
3000eb8a:	call   0x300051c8
3000eb8f:	lea    ecx,[esi+0x4]
3000eb92:	call   0x300051c8
3000eb97:	lea    ecx,[esi+0x8]
3000eb9a:	call   0x300051c8
3000eb9f:	lea    ecx,[esi+0xc]
3000eba2:	call   0x300051c8
3000eba7:	xor    ecx,ecx
3000eba9:	mov    BYTE PTR [esi+0x10],cl
3000ebac:	mov    DWORD PTR [esi+0x14],ecx
3000ebaf:	mov    DWORD PTR [esi+0x18],ecx
3000ebb2:	mov    DWORD PTR [esi+0x1c],ecx
3000ebb5:	mov    DWORD PTR [esi+0x20],ecx
3000ebb8:	mov    DWORD PTR [esi+0x24],ecx
3000ebbb:	push   0xa
3000ebbd:	pop    eax
3000ebbe:	mov    DWORD PTR [esi+0x28],eax
3000ebc1:	mov    DWORD PTR [esi+0x40],eax
3000ebc4:	mov    DWORD PTR [esi+0x2c],ecx
3000ebc7:	mov    DWORD PTR [esi+0x30],ecx
3000ebca:	mov    DWORD PTR [esi+0x34],ecx
3000ebcd:	mov    DWORD PTR [esi+0x38],ecx
3000ebd0:	mov    DWORD PTR [esi+0x3c],ecx
3000ebd3:	mov    eax,esi
3000ebd5:	pop    esi
3000ebd6:	ret    
3000ebd7:	push   esi
3000ebd8:	mov    esi,DWORD PTR [ecx]
3000ebda:	push   esi
3000ebdb:	call   DWORD PTR ds:0x3004563c
3000ebe1:	cmp    WORD PTR [eax],0x0
3000ebe5:	je     0x30025600
3000ebeb:	sub    eax,esi
3000ebed:	sar    eax,1
3000ebef:	pop    esi
3000ebf0:	ret    
3000ebf1:	push   ebp
3000ebf2:	mov    ebp,esp
3000ebf4:	push   ecx
3000ebf5:	push   ebx
3000ebf6:	push   esi
3000ebf7:	push   edi
3000ebf8:	mov    esi,edx
3000ebfa:	mov    edi,ecx
3000ebfc:	mov    eax,DWORD PTR [esi]
3000ebfe:	push   eax
3000ebff:	push   DWORD PTR [eax-0xc]
3000ec02:	lea    eax,[ebp-0x4]
3000ec05:	push   eax
3000ec06:	call   0x30009162
3000ec0b:	mov    ecx,eax
3000ec0d:	call   0x3000927b
3000ec12:	test   eax,eax
3000ec14:	lea    ecx,[ebp-0x4]
3000ec17:	setne  bl
3000ec1a:	call   0x300051a4
3000ec1f:	test   bl,bl
3000ec21:	je     0x3000ec30
3000ec23:	mov    eax,DWORD PTR [esi]
3000ec25:	mov    ecx,edi
3000ec27:	push   DWORD PTR [eax-0xc]
3000ec2a:	push   eax
3000ec2b:	call   0x30008b64
3000ec30:	pop    edi
3000ec31:	pop    esi
3000ec32:	pop    ebx
3000ec33:	leave  
3000ec34:	ret    
3000ec35:	mov    ecx,DWORD PTR [esi+0x4]
3000ec38:	mov    eax,DWORD PTR [ecx]
3000ec3a:	call   DWORD PTR [eax+0x24]
3000ec3d:	movzx  eax,al
3000ec40:	mov    DWORD PTR [edi],eax
3000ec42:	jmp    0x3000c02c
3000ec47:	mov    ecx,DWORD PTR [esi+0x4]
3000ec4a:	mov    eax,DWORD PTR [ecx]
3000ec4c:	call   DWORD PTR [eax+0x24]
3000ec4f:	movzx  eax,al
3000ec52:	mov    DWORD PTR [edi],eax
3000ec54:	jmp    0x3000e4e6
3000ec59:	mov    eax,ds:0x3004306c
3000ec5e:	push   esi
3000ec5f:	push   edi
3000ec60:	mov    esi,ecx
3000ec62:	mov    edi,0x3004306c
3000ec67:	mov    ecx,edi
3000ec69:	call   DWORD PTR [eax+0xc]
3000ec6c:	add    eax,0x10
3000ec6f:	mov    DWORD PTR [esi+0xc],eax
3000ec72:	mov    eax,ds:0x3004306c
3000ec77:	mov    ecx,edi
3000ec79:	call   DWORD PTR [eax+0xc]
3000ec7c:	add    eax,0x10
3000ec7f:	push   edi
3000ec80:	lea    ecx,[esi+0x14]
3000ec83:	mov    DWORD PTR [esi+0x10],eax
3000ec86:	call   0x30004256
3000ec8b:	push   edi
3000ec8c:	lea    ecx,[esi+0x18]
3000ec8f:	call   0x30004256
3000ec94:	pop    edi
3000ec95:	mov    BYTE PTR [esi+0x1c],0x0
3000ec99:	mov    eax,esi
3000ec9b:	pop    esi
3000ec9c:	ret    0x4
3000ec9f:	push   ebp
3000eca0:	mov    ebp,esp
3000eca2:	mov    edx,DWORD PTR [ebp+0x8]
3000eca5:	test   edx,edx
3000eca7:	js     0x300211c7
3000ecad:	mov    eax,DWORD PTR [ecx]
3000ecaf:	cmp    edx,DWORD PTR [eax-0x8]
3000ecb2:	jg     0x300211c7
3000ecb8:	mov    DWORD PTR [eax-0xc],edx
3000ecbb:	mov    eax,DWORD PTR [ecx]
3000ecbd:	mov    BYTE PTR [edx+eax*1],0x0
3000ecc1:	pop    ebp
3000ecc2:	ret    0x4
3000ecc5:	push   ebp
3000ecc6:	mov    ebp,esp
3000ecc8:	push   esi
3000ecc9:	mov    esi,DWORD PTR [ebp+0x8]
3000eccc:	push   edi
3000eccd:	mov    edi,DWORD PTR [ebp+0xc]
3000ecd0:	cmp    esi,edi
3000ecd2:	jae    0x3000ece7
3000ecd4:	sub    edi,esi
3000ecd6:	push   edi
3000ecd7:	push   0xcc
3000ecdc:	push   esi
3000ecdd:	call   0x300011b1
3000ece2:	add    esp,0xc
3000ece5:	add    esi,edi
3000ece7:	pop    edi
3000ece8:	mov    eax,esi
3000ecea:	pop    esi
3000eceb:	pop    ebp
3000ecec:	ret    0x8
3000ecef:	push   0x4
3000ecf1:	mov    eax,0x3004066e
3000ecf6:	call   0x3000116a
3000ecfb:	mov    edi,ecx
3000ecfd:	test   edi,edi
3000ecff:	je     0x3000ed6b
3000ed01:	xor    ebx,ebx
3000ed03:	cmp    WORD PTR [edi],bx
3000ed06:	je     0x3000ed6b
3000ed08:	cmp    DWORD PTR ds:0x30043110,ebx
3000ed0e:	jne    0x30020591
3000ed14:	push   0x14
3000ed16:	call   0x30003fee
3000ed1b:	mov    esi,eax
3000ed1d:	pop    ecx
3000ed1e:	mov    DWORD PTR [ebp-0x10],esi
3000ed21:	mov    DWORD PTR [ebp-0x4],ebx
3000ed24:	test   esi,esi
3000ed26:	je     0x3000ed67
3000ed28:	mov    DWORD PTR [esi],ebx
3000ed2a:	mov    DWORD PTR [esi+0x4],ebx
3000ed2d:	push   edi
3000ed2e:	lea    ecx,[esi+0x8]
3000ed31:	mov    BYTE PTR [ebp-0x4],0x2
3000ed35:	call   0x3000437e
3000ed3a:	mov    DWORD PTR [esi+0xc],0x20005
3000ed41:	call   DWORD PTR ds:0x300451a4
3000ed47:	mov    DWORD PTR [esi+0x10],eax
3000ed4a:	or     DWORD PTR [ebp-0x4],0xffffffff
3000ed4e:	mov    DWORD PTR ds:0x30043110,esi
3000ed54:	test   esi,esi
3000ed56:	je     0x3002059b
3000ed5c:	call   0x3001165c
3000ed61:	call   0x3000119d
3000ed66:	ret    
3000ed67:	mov    esi,ebx
3000ed69:	jmp    0x3000ed4a
3000ed6b:	mov    eax,0x80070057
3000ed70:	jmp    0x3000ed61
3000ed72:	test   ecx,ecx
3000ed74:	jne    0x3000bd15
3000ed7a:	jmp    0x3000ed8f
3000ed7c:	push   eax
3000ed7d:	call   0x3002ae0b
3000ed82:	lea    ecx,[ebp-0x7c]
3000ed85:	call   0x300014b2
3000ed8a:	jmp    0x300215e5
3000ed8f:	xor    eax,eax
3000ed91:	jmp    0x3000be2d
3000ed96:	cmp    DWORD PTR [ebp-0x848],ebx
3000ed9c:	jne    0x30007a24
3000eda2:	mov    esi,ebx
3000eda4:	jmp    0x30007b34
3000eda9:	xor    esi,esi
3000edab:	inc    esi
3000edac:	jmp    0x30010ee8
3000edb1:	mov    esi,ebx
3000edb3:	jmp    0x30010ee8
3000edb8:	push   ebp
3000edb9:	mov    ebp,esp
3000edbb:	push   ecx
3000edbc:	push   ecx
3000edbd:	cmp    DWORD PTR [ebp+0x8],0x0
3000edc1:	mov    eax,ds:0x300435a8
3000edc6:	mov    DWORD PTR [ebp-0x8],eax
3000edc9:	mov    eax,ds:0x300435ac
3000edce:	push   ebx
3000edcf:	mov    ebx,DWORD PTR ds:0x300435cc
3000edd5:	mov    DWORD PTR [ebp-0x4],eax
3000edd8:	je     0x3001ffdb
3000edde:	push   esi
3000eddf:	push   DWORD PTR [ebp+0x8]
3000ede2:	lea    ecx,[ebx+0x4c]
3000ede5:	call   0x3000ba0d
3000edea:	mov    esi,DWORD PTR [ebp+0x14]
3000eded:	mov    DWORD PTR [ebx+0x50],0x3000ee50
3000edf4:	mov    DWORD PTR [ebx+0x54],0x104
3000edfb:	test   esi,esi
3000edfd:	je     0x3000ee09
3000edff:	push   edi
3000ee00:	push   0x1a
3000ee02:	pop    ecx
3000ee03:	lea    edi,[ebx+0x58]
3000ee06:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000ee08:	pop    edi
3000ee09:	mov    eax,DWORD PTR [ebp+0x18]
3000ee0c:	mov    DWORD PTR [ebx+0xc4],eax
3000ee12:	mov    eax,DWORD PTR [ebp-0x4]
3000ee15:	mov    DWORD PTR [ebx+0xc8],eax
3000ee1b:	mov    eax,DWORD PTR [ebp-0x8]
3000ee1e:	push   0x0
3000ee20:	lea    ecx,[ebx+0x614]
3000ee26:	mov    DWORD PTR [ebx+0xcc],eax
3000ee2c:	mov    DWORD PTR [ebx+0x1e4],0x300436a8
3000ee36:	mov    DWORD PTR [ebx+0x1e8],0x9
3000ee40:	call   0x3000ba0d
3000ee45:	xor    eax,eax
3000ee47:	pop    esi
3000ee48:	pop    ebx
3000ee49:	leave  
3000ee4a:	ret    0x28
3000ee4d:	nop
3000ee4e:	nop
3000ee4f:	nop
3000ee50:	adc    al,0xef
3000ee52:	mov    al,ds:0x2d61668e
3000ee57:	out    dx,al
3000ee58:	mov    edi,0x4fc000c2
3000ee5d:	cdq    
3000ee5e:	add    dh,BYTE PTR ds:0x1a73d574
3000ee64:	cmp    eax,DWORD PTR [ebx-0x5a]
3000ee67:	mov    edx,0x2ed659ad
3000ee6c:	mov    dh,0xd5
3000ee6e:	mov    ah,BYTE PTR [edx]
3000ee70:	aam    0x97
3000ee72:	imul   ecx,DWORD PTR [ebx-0x11d237a1],0xffffffa2
3000ee79:	jae    0x3000ee7b
3000ee7b:	ror    BYTE PTR [edi-0x72],0xf4
3000ee7f:	jmp    FWORD PTR [edx+0x1f976c6f]
3000ee85:	(bad)  
3000ee86:	call   0xb9cc813d
3000ee8b:	or     DWORD PTR [ecx+0xd],esi
3000ee8e:	cmp    DWORD PTR [eax-0x41],0x21625a85
3000ee95:	fnsave [esi]
3000ee97:	mov    bl,0x89
3000ee99:	push   0x50
3000ee9b:	add    al,0x89
3000ee9d:	fsubr  st(0),st
3000ee9f:	out    0x84,eax
3000eea1:	mov    ebx,0xf4ed84a2
3000eea6:	adc    eax,0xc84ea8be
3000eeab:	and    al,BYTE PTR [ebx]
3000eead:	inc    esp
3000eeae:	and    dl,ah
3000eeb0:	je     0x3000ee3f
3000eeb2:	cmp    BYTE PTR [edi+0x59],bh
3000eeb5:	(bad)  
3000eeb6:	xlat   BYTE PTR ds:[ebx]
3000eeb7:	mov    edx,0xe0736986
3000eebc:	sub    eax,0x2c419c1b
3000eec1:	(bad)  
3000eec2:	jp     0x3000ef36
3000eec4:	mov    ds:0x83bb699d,al
3000eec9:	push   esp
3000eeca:	cmp    eax,0xcc0e63ad
3000eecf:	sbb    ecx,DWORD PTR [edi+ebx*2+0x63]
3000eed3:	inc    ebx
3000eed4:	mov    al,0x44
3000eed6:	gs mov ebx,0xa8297c96
3000eedc:	cli    
3000eedd:	jecxz  0x3000eeff
3000eedf:	xchg   cl,bh
3000eee1:	outs   dx,DWORD PTR fs:[esi]
3000eee3:	cwde   
3000eee4:	push   ss
3000eee5:	outs   dx,BYTE PTR ds:[esi]
3000eee6:	shl    DWORD PTR [eax+0x504950ab],0x46
3000eeed:	mov    esi,0x4aae9a9a
3000eef2:	pusha  
3000eef3:	and    eax,0xee2f38db
3000eef8:	scas   al,BYTE PTR es:[edi]
3000eef9:	pop    ds
3000eefa:	add    BYTE PTR [eax-0x3c00f037],ah
3000ef00:	fild   WORD PTR [edx+0x701e4bc]
3000ef06:	sub    eax,0xaea6ee
3000ef0b:	adc    BYTE PTR [ebx-0x34],cl
3000ef0e:	jb     0x3000ef79
3000ef10:	ret    
3000ef11:	repz xor eax,DWORD PTR [eax+0x78]
3000ef15:	nop
3000ef16:	jp     0x3000eed5
3000ef18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3000ef19:	enter  0x61bb,0x60
3000ef1d:	popa   
3000ef1e:	or     BYTE PTR ds:0xcf5181d4,0xfd
3000ef25:	xchg   ebx,eax
3000ef26:	xchg   edx,eax
3000ef27:	mov    dh,0x8e
3000ef29:	inc    ebx
3000ef2a:	test   edi,esi
3000ef2c:	test   eax,0x37f1ef0a
3000ef31:	scas   al,BYTE PTR es:[edi]
3000ef32:	pop    es
3000ef33:	sbb    BYTE PTR [eax-0x4f479463],bl
3000ef39:	(bad)  
3000ef3a:	jnp    0x3000ef06
3000ef3c:	mov    dh,0xda
3000ef3e:	retf   
3000ef3f:	mov    ah,0xaf
3000ef41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
3000ef42:	arpl   bx,cx
3000ef44:	and    BYTE PTR [edx-0x7b6c11db],bl
3000ef4a:	add    BYTE PTR [esi],al
3000ef4c:	pop    ebx
3000ef4d:	test   BYTE PTR [edi+0x21],ch
3000ef50:	in     eax,0x96
3000ef52:	and    BYTE PTR [ebx],0x3
3000ef55:	outs   dx,BYTE PTR ds:[esi]
3000ef56:	test   BYTE PTR [eax-0x7d01c16e],dh
3000ef5c:	pushf  
3000ef5d:	cmp    bl,BYTE PTR [eax]
3000ef5f:	fdiv   st(2),st
3000ef61:	push   0xffffffae
3000ef63:	and    eax,DWORD PTR [edi]
3000ef65:	add    al,0x38
3000ef67:	mov    bh,0xaa
3000ef69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000ef6a:	bnd jnp 0x3000ef71
3000ef6d:	add    eax,0x429b78f2
3000ef72:	stc    
3000ef73:	out    dx,al
3000ef74:	add    al,0x3f
3000ef76:	jmp    0x974b:0x676b81be
3000ef7d:	into   
3000ef7e:	cmp    al,0x82
3000ef80:	pop    edx
3000ef81:	jle    0x3000efac
3000ef83:	mov    BYTE PTR [edx-0x4d4c9fa8],dh
3000ef89:	ins    DWORD PTR es:[edi],dx
3000ef8a:	and    eax,0x1132bbe7
3000ef8f:	jmp    0xd0346a1c
3000ef94:	adc    al,0xb0
3000ef96:	sti    
3000ef97:	mov    dl,0xad
3000ef99:	jb     0x3000ef71
3000ef9b:	(bad)  
3000ef9c:	sub    DWORD PTR [eax+0x56c1cc83],esi
3000efa2:	loop   0x3000ef8f
3000efa4:	pop    eax
3000efa5:	ja     0x3000efd1
3000efa7:	mov    edx,0x11895bb1
3000efac:	jg     0x3000efff
3000efae:	dec    ebp
3000efaf:	fs mov edi,ebx
3000efb2:	enter  0x31e0,0x26
3000efb6:	sar    BYTE PTR [esp+edi*4+0x39ffab4f],cl
3000efbd:	addr16 sbb al,0x5c
3000efc0:	retf   0xd71a
3000efc3:	jae    0x3000effb
3000efc5:	push   esp
3000efc6:	ins    DWORD PTR es:[edi],dx
3000efc7:	mov    al,0xb5
3000efc9:	leave  
3000efca:	ins    BYTE PTR es:[edi],dx
3000efcb:	push   ss
3000efcc:	popa   
3000efcd:	jl     0x3000ef57
3000efcf:	test   BYTE PTR [ebx],al
3000efd1:	js     0x3000efff
3000efd3:	in     eax,0x17
3000efd5:	dec    esi
3000efd6:	fdivr  QWORD PTR [edi+0x22f2fe91]
3000efdc:	pusha  
3000efdd:	mov    dh,0x61
3000efdf:	fstp   TBYTE PTR [ecx+0x3ea5483b]
3000efe5:	push   esp
3000efe6:	cs mov ch,0xa2
3000efe9:	and    al,0x8b
3000efeb:	push   0x75487b67
3000eff0:	add    al,0x71
3000eff2:	push   ebp
3000eff3:	jge    0x3000ef90
3000eff5:	xchg   BYTE PTR [edx],dl
3000eff7:	mov    ebp,0x1ed740a7
3000effc:	xchg   esp,eax
3000effd:	lock imul ebx,DWORD PTR [bp-0x78],0xffffffdc
3000f003:	jnp    0x3000eff6
3000f005:	inc    ebp
3000f006:	inc    ecx
3000f007:	mov    dh,0xba
3000f009:	mov    ah,BYTE PTR [ecx-0xa]
3000f00c:	adc    BYTE PTR [eax+eiz*8],bl
3000f00f:	fisubr DWORD PTR [esi-0x7]
3000f012:	inc    eax
3000f013:	addr16 ret 
3000f015:	sub    eax,0x41a2b768
3000f01a:	pushf  
3000f01b:	cmc    
3000f01c:	mov    esi,0xaf4accfd
3000f021:	and    DWORD PTR [ebp+esi*4-0x17],0xa8ee2f55
3000f029:	lds    eax,FWORD PTR [eax]
3000f02b:	mov    al,ds:0xd2a421c9
3000f030:	dec    esp
3000f031:	push   cs
3000f032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3000f033:	pop    ecx
3000f034:	retf   
3000f035:	push   edx
3000f036:	cs out dx,al
3000f038:	stos   DWORD PTR es:[edi],eax
3000f039:	lods   eax,DWORD PTR ds:[esi]
3000f03a:	add    BYTE PTR [eax-0x6a634739],al
3000f040:	dec    edi
3000f041:	fild   DWORD PTR [ecx+0x2cb9ebe1]
3000f047:	out    dx,al
3000f048:	fwait
3000f049:	mov    DWORD PTR [eax],0xde794fc0
3000f04f:	and    eax,0x1f3f0011
3000f054:	add    BYTE PTR [eax-0x3333e0e1],al
3000f05a:	xchg   ebp,eax
3000f05b:	add    BYTE PTR [ecx],bh
3000f05d:	or     ch,BYTE PTR [ebx-0x2]
3000f060:	push   eax
3000f061:	sub    eax,0xad659471
3000f066:	jle    0x3000f01b
3000f068:	sahf   
3000f069:	xchg   esp,eax
3000f06a:	add    al,0x5a
3000f06c:	xor    esi,DWORD PTR [ecx+0x34]
3000f06f:	outs   dx,BYTE PTR ds:[esi]
3000f070:	push   esi
3000f071:	and    eax,0x80d2d236
3000f076:	sub    eax,0xfc9bee
3000f07b:	ror    BYTE PTR [edi-0x67],0x1
3000f07f:	sar    DWORD PTR [esi-0x1e8b070],1
3000f085:	xchg   edx,eax
3000f086:	sub    eax,0x7daaee
3000f08b:	ror    BYTE PTR [edi-0x67],0x3
3000f08f:	inc    ebx
3000f090:	mov    ecx,0x1bb586ee
3000f095:	out    0x2c,al
3000f097:	out    dx,al
3000f098:	mov    eax,0x4fc0006b
3000f09d:	jns    0x3000f097
3000f09f:	add    al,BYTE PTR [esi-0x11]
3000f0a2:	mov    ah,0xe9
3000f0a4:	dec    DWORD PTR [ebp+0x2f]
3000f0a7:	out    dx,al
3000f0a8:	mov    WORD PTR [ecx+0x0],fs
3000f0ab:	mov    al,ds:0xd5291ec9
3000f0b0:	das    
3000f0b1:	inc    edi
3000f0b2:	mov    BYTE PTR [ecx+0x23],dl
3000f0b5:	xchg   esp,eax
3000f0b6:	sub    eax,0x54b3ee
3000f0bb:	add    al,bh
3000f0bd:	pop    ds
3000f0be:	or     al,0x6
3000f0c0:	ds mov cl,0x1f
3000f0c3:	add    eax,0xee2ccfe0
3000f0c8:	mov    edi,0x4fc0004b
3000f0cd:	jns    0x3000f0be
3000f0cf:	mov    esp,0xe3da79b
3000f0d4:	push   0xa5ee2dcf
3000f0d9:	lds    eax,FWORD PTR [eax]
3000f0db:	ror    BYTE PTR [edi+0x79],0x68
3000f0df:	mov    ah,0xfe
3000f0e1:	pop    es
3000f0e2:	sub    DWORD PTR [ecx-0x40a4b1ed],ebx
3000f0e8:	mov    ebx,0x17863115
3000f0ed:	jmp    0xe3e99e5f
3000f0f2:	cmc    
3000f0f3:	fld    QWORD PTR [ebx-0x4446637f]
3000f0f9:	int3   
3000f0fa:	pop    esi
3000f0fb:	pusha  
3000f0fc:	jl     0x3000f163
3000f0fe:	inc    ebx
3000f0ff:	int    0x89
3000f101:	sub    esp,edx
3000f103:	xlat   BYTE PTR ds:[ebx]
3000f104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3000f105:	je     0x3000f136
3000f107:	out    dx,al
3000f108:	mov    dh,BYTE PTR [eax+eax*1]
3000f10b:	mov    al,ds:0xcd2a1ec9
3000f110:	pop    ecx
3000f111:	hlt    
3000f112:	pop    edx
3000f113:	push   eax
3000f114:	mov    ebx,0x8cbc381e
3000f119:	ret    0x4422
3000f11c:	jns    0x3000f15c
3000f11e:	hlt    
3000f11f:	jmp    0x14fe76e3
3000f124:	mov    esp,0x8dee2f70
3000f129:	adc    DWORD PTR [eax],eax
3000f12b:	mov    al,ds:0x42c91bc9
3000f130:	xor    al,BYTE PTR [edi+0x71]
3000f133:	push   ebp
3000f134:	scas   al,BYTE PTR es:[edi]
3000f135:	test   DWORD PTR [edi],ebp
3000f137:	out    dx,al
3000f138:	xchg   edx,eax
3000f139:	ret    
3000f13a:	add    BYTE PTR [eax+0x458c13c9],ah
3000f140:	mov    dl,0xb3
3000f142:	stos   DWORD PTR es:[edi],eax
3000f143:	lods   al,BYTE PTR ds:[esi]
3000f144:	ret    0xf64f
3000f147:	mov    ebp,0xddd9d0a7
3000f14c:	adc    esp,DWORD PTR [ecx+eax*1-0x544c4d65]
3000f153:	lods   al,BYTE PTR ds:[esi]
3000f154:	pop    es
3000f155:	sbb    al,0x5f
3000f157:	mov    ch,0x81
3000f159:	xchg   ebp,eax
3000f15a:	mov    cl,BYTE PTR [ebp+0x23940116]
3000f160:	test   al,0xb5
3000f162:	and    dh,BYTE PTR [esi]
3000f164:	add    al,0xb8
3000f166:	sub    eax,0xe783ee
3000f16b:	ror    BYTE PTR [edi-0x67],0x2
3000f16f:	shl    DWORD PTR [ebp+0x23],0x88
3000f173:	sub    eax,0xbcfc55e1
3000f178:	mov    WORD PTR [ebx],es
3000f17a:	sbb    al,0x58
3000f17c:	fistp  DWORD PTR [eax]
3000f17e:	jmp    0x3a8e740e
3000f183:	lods   eax,DWORD PTR ds:[esi]
3000f184:	les    eax,FWORD PTR [ecx]
3000f186:	in     eax,dx
3000f187:	mov    bh,0x80
3000f189:	les    ebp,FWORD PTR [edx-0x72]
3000f18c:	jmp    0x3000f178
3000f18e:	mov    ecx,0x59c4d54f
3000f193:	or     edx,DWORD PTR [esi+esi*4-0x2e]
3000f197:	mov    ah,0xaa
3000f199:	pop    ecx
3000f19a:	mov    eax,ds:0x6c02010f
3000f19f:	mov    edi,ebx
3000f1a1:	sbb    BYTE PTR [eax],bl
3000f1a3:	or     bh,dh
3000f1a5:	jmp    0x3000f1d5
3000f1a7:	out    dx,al
3000f1a8:	mov    BYTE PTR [ebx],bh
3000f1aa:	add    BYTE PTR [eax],al
3000f1ac:	clc    
3000f1ad:	jne    0x3000f228
3000f1af:	shr    BYTE PTR [ecx],cl
3000f1b1:	mov    fs,WORD PTR [esi-0x2]
3000f1b4:	jp     0x3000f16f
3000f1b6:	sub    eax,0x8ab4ee
3000f1bb:	add    al,bh
3000f1bd:	jne    0x3000f231
3000f1bf:	jmp    0x3000f180
3000f1c1:	pop    ecx
3000f1c2:	shl    DWORD PTR [ebx+0x3e],1
3000f1c5:	push   esp
3000f1c6:	das    
3000f1c7:	out    dx,al
3000f1c8:	popf   
3000f1c9:	bound  eax,QWORD PTR [eax]
3000f1cb:	ror    BYTE PTR [edi-0x27],0xdf
3000f1cf:	fldcw  WORD PTR [edx+0x17]
3000f1d2:	fwait
3000f1d3:	pop    eax
3000f1d4:	jb     0x3000f184
3000f1d6:	sub    eax,0x899aee
3000f1db:	ror    BYTE PTR [edi+0x79],0xef
3000f1df:	ret    
3000f1e0:	jnp    0x3000f1ff
3000f1e2:	cdq    
3000f1e3:	pop    edi
3000f1e4:	push   esp
3000f1e5:	and    ebp,DWORD PTR ds:0x51b5ee
3000f1eb:	ror    BYTE PTR [edi+0x68],0xd4
3000f1ef:	fcmovnu st,st(7)
3000f1f1:	ret    0x21ca
3000f1f4:	adc    al,0xa9
3000f1f6:	sub    eax,0x19bfee
3000f1fb:	ror    BYTE PTR [edi+0x79],0xef
3000f1ff:	mov    esp,0x6440852e
3000f204:	lods   al,BYTE PTR ds:[esi]
3000f205:	outs   dx,BYTE PTR ds:[esi]
3000f206:	mov    ds:0x6afd88b9,eax
3000f20b:	mov    ds:0x36c19434,al
3000f210:	pop    ss
3000f211:	mov    edx,0x9dc9332f
3000f216:	ret    0xb8b4
3000f219:	and    BYTE PTR [edi-0x38eb2209],dl
3000f21f:	jl     0x3000f240
3000f221:	dec    ebp
3000f222:	mov    edx,esp
3000f224:	in     al,0xe
3000f226:	sub    eax,0xc3afee
3000f22b:	adc    BYTE PTR [edx-0x67],bl
3000f22e:	xchg   ecx,eax
3000f22f:	out    dx,eax
3000f230:	dec    edi
3000f231:	mov    edx,0x5ade50
3000f236:	das    
3000f237:	out    dx,al
3000f238:	mov    dh,0x3f
3000f23a:	add    BYTE PTR [eax+0x51e822c9],ah
3000f240:	std    
3000f241:	test   BYTE PTR [edi],bl
3000f243:	mov    ebx,0xee2cd65a
3000f248:	mov    eax,0x4fc00082
3000f24d:	jns    0x3000f247
3000f24f:	add    ch,BYTE PTR [ebx]
3000f251:	aaa    
3000f252:	cmc    
3000f253:	stos   DWORD PTR es:[edi],eax
3000f254:	add    ebx,DWORD PTR [eax-0x3a504199]
3000f25a:	shl    DWORD PTR [edi+0x4f],0x9c
3000f25e:	push   0x10
3000f260:	pop    ds
3000f261:	cli    
3000f262:	jge    0x3000f20b
3000f264:	pop    ds
3000f265:	cdq    
3000f266:	sub    al,0xee
3000f268:	xchg   BYTE PTR [eax],al
3000f26a:	add    al,al
3000f26c:	dec    edi
3000f26d:	popa   
3000f26e:	and    esi,DWORD PTR [ebx-0x6487bd20]
3000f274:	push   DWORD PTR [ebx+0x7c8eee2d]
3000f27a:	add    BYTE PTR [eax+0x8],ah
3000f27d:	lahf   
3000f27e:	les    eax,FWORD PTR [esi-0x5b98c2c1]
3000f284:	test   BYTE PTR [edx],dh
3000f286:	das    
3000f287:	out    dx,al
3000f288:	xchg   edx,eax
3000f289:	fild   WORD PTR [eax]
3000f28b:	mov    al,ds:0x458c13c9
3000f290:	(bad)  
3000f291:	aad    0xe2
3000f293:	js     0x3000f2f2
3000f295:	in     eax,dx
3000f296:	mov    ebp,0x424094b1
3000f29b:	pop    ebp
3000f29c:	fldcw  WORD PTR [edx]
3000f29e:	inc    ecx
3000f29f:	push   ss
3000f2a0:	mov    WORD PTR [ebp-0x4f2c91a1],?
3000f2a6:	xor    DWORD PTR [ecx-0x593ec753],0xffffff8e
3000f2ad:	jge    0x3000f24f
3000f2af:	pop    esp
3000f2b0:	adc    DWORD PTR [ecx],edx
3000f2b2:	adc    DWORD PTR [ecx],edx
3000f2b4:	mov    ebp,0x8ebd0e6c
3000f2b9:	test   eax,0xa6e8f042
3000f2be:	mov    esi,0x55274d55
3000f2c3:	mov    ebp,DWORD PTR [ebx-0x33]
3000f2c6:	xor    al,0xb6
3000f2c8:	mov    ebx,0xb1bae95d
3000f2cd:	xor    bh,BYTE PTR [edi-0x2110fe2b]
3000f2d3:	and    eax,0xee2d2352
3000f2d8:	xchg   edx,eax
3000f2d9:	sti    
3000f2da:	add    al,al
3000f2dc:	dec    edi
3000f2dd:	mov    ecx,0xeee6486
3000f2e2:	test   al,0x82
3000f2e4:	or     al,0x46
3000f2e6:	sub    eax,0xe08eee
3000f2eb:	ror    BYTE PTR [edi+0x5e],0xc
3000f2ef:	cmp    BYTE PTR [ebx-0x7a],al
3000f2f2:	jbe    0x3000f306
3000f2f4:	ror    BYTE PTR [edi+0x56],1
3000f2f7:	mov    dl,0xa6
3000f2f9:	shl    DWORD PTR [di],cl
3000f2fc:	ins    BYTE PTR es:[edi],dx
3000f2fd:	and    cl,BYTE PTR ss:[edx]
3000f300:	data16 jg 0x3000f32b
3000f303:	add    DWORD PTR [esi],ebp
3000f305:	out    dx,eax
3000f306:	xchg   DWORD PTR [ebp-0x3054c850],esi
3000f30c:	mov    eax,ds:0xd0b307a1
3000f311:	cmp    ch,bh
3000f313:	scas   eax,DWORD PTR es:[edi]
3000f314:	push   esp
3000f315:	mov    ebx,0xe18cbfae
3000f31a:	shr    DWORD PTR [eax+eiz*1-0x27],cl
3000f31e:	mov    DWORD PTR [edi+ecx*2+0x2e190207],esi
3000f325:	or     al,0x2b
3000f327:	out    dx,al
3000f328:	test   DWORD PTR [esi+0x0],esi
3000f32b:	add    ah,BYTE PTR [ebp+0x4ee8ec16]
3000f331:	pop    es
3000f332:	add    bl,BYTE PTR [ecx]
3000f334:	cs or  al,0x2b
3000f337:	out    dx,al
3000f338:	test   DWORD PTR [esi+0x0],esi
3000f33b:	add    ah,BYTE PTR [ebp+0x48e8ec16]
3000f341:	icebp  
3000f342:	loopne 0x3000f321
3000f344:	or     bh,cl
3000f346:	add    BYTE PTR [edx+0x685973ae],bh
3000f34c:	mov    cl,0x67
3000f34e:	iret   
3000f34f:	or     DWORD PTR [eax],eax
3000f351:	in     eax,0x3a
3000f353:	adc    edx,DWORD PTR [esi+0x31]
3000f356:	xchg   BYTE PTR [edi-0x5d804b73],bh
3000f35c:	or     esi,eax
3000f35e:	add    eax,0xa16caa31
3000f363:	dec    ecx
3000f364:	cmp    BYTE PTR [ebx-0x56],bl
3000f367:	mov    bh,0x96
3000f369:	mov    ebx,0x51c83e1d
3000f36e:	dec    esi
3000f36f:	(bad)  
3000f370:	stos   DWORD PTR es:[edi],eax
3000f371:	or     al,0xba
3000f373:	sub    eax,0xbae9c0ba
3000f378:	mov    cl,0xe6
3000f37a:	add    al,0x60
3000f37c:	lea    esp,[ecx+0x4936cc26]
3000f382:	mov    al,0x43
3000f384:	cdq    
3000f385:	inc    edx
3000f386:	shl    BYTE PTR [eax+0xf4afda7],0x32
3000f38d:	jb     0x3000f363
3000f38f:	mov    ch,0x36
3000f391:	pop    ss
3000f392:	rol    DWORD PTR [edx],cl
3000f394:	lock xchg esp,eax
3000f396:	ds mov ebx,0xcb9c80be
3000f39c:	pop    ecx
3000f39d:	mov    dl,0x6e
3000f39f:	jecxz  0x3000f321
3000f3a1:	mov    cl,0x9
3000f3a3:	mov    esi,0xb4d2fe85
3000f3a8:	fwait
3000f3a9:	xor    ax,0xf76d
3000f3ad:	pop    edi
3000f3ae:	mov    bh,0x8c
3000f3b0:	cli    
3000f3b1:	outs   dx,DWORD PTR ds:[esi]
3000f3b2:	lock aaa 
3000f3b4:	sub    BYTE PTR [ebx+eiz*4+0x243e8cb6],dl
3000f3bb:	jno    0x3000f374
3000f3bd:	ins    DWORD PTR es:[edi],dx
3000f3be:	jle    0x3000f3aa
3000f3c0:	push   0x63
3000f3c2:	out    0x33,al
3000f3c4:	xlat   BYTE PTR ds:[ebx]
3000f3c5:	jb     0x3000f3a9
3000f3c7:	mov    ch,0xb4
3000f3c9:	mov    esp,0x4c4e0e76
3000f3ce:	out    dx,al
3000f3cf:	pop    ebx
3000f3d0:	ds mov esi,0xc999d13
3000f3d6:	inc    eax
3000f3d7:	mov    edi,0x8c901780
3000f3dc:	cs das 
3000f3de:	xchg   ecx,eax
3000f3df:	das    
3000f3e0:	and    eax,0x87caa9ed
3000f3e5:	and    DWORD PTR [eax-0x47],esi
3000f3e8:	sahf   
3000f3e9:	rcr    BYTE PTR [eax+edi*4-0x10],1
3000f3ed:	aad    0xfd
3000f3ef:	cmp    DWORD PTR [ecx],ebx
3000f3f1:	ficomp DWORD PTR [ecx+ebx*4]
3000f3f4:	pop    esi
3000f3f5:	je     0x3000f46e
3000f3f7:	mov    ecx,0x6cb8678a
3000f3fc:	out    0x74,eax
3000f3fe:	sbb    eax,0x73830c2a
3000f403:	xchg   esp,eax
3000f404:	xchg   ebp,eax
3000f405:	je     0x3000f408
3000f407:	mov    al,0xa0
3000f409:	cmp    dl,BYTE PTR [edx]
3000f40b:	pop    dx
3000f40d:	jmp    0x2ff6:0x83cc56b4
3000f414:	mov    esi,0x8eb757cb
3000f419:	mov    edi,0x109989c5
3000f41e:	xlat   BYTE PTR ds:[ebx]
3000f41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
3000f420:	sbb    dl,bl
3000f422:	sbb    al,0x99
3000f424:	pop    esi
3000f425:	je     0x3000f49e
3000f427:	mov    ecx,0x6cb8678a
3000f42c:	out    0x74,eax
3000f42e:	sbb    eax,0xe2d4832a
3000f433:	xchg   esi,eax
3000f434:	or     edi,DWORD PTR [ebx-0x34]
3000f437:	mov    al,0xac
3000f439:	cmp    eax,0xc024a3bc
3000f43e:	mov    dh,0xcf
3000f440:	outs   dx,BYTE PTR ds:[esi]
3000f441:	adc    al,0x1b
3000f443:	fs stos DWORD PTR es:[edi],eax
3000f445:	xchg   BYTE PTR ds:0x1db1a7b1,bl
3000f44b:	inc    esp
3000f44c:	fwait
3000f44d:	pop    ebp
3000f44e:	adc    eax,0x36e65577
3000f453:	sub    eax,ebp
3000f455:	in     eax,dx
3000f456:	sbb    eax,0x9b3ba1be
3000f45b:	xchg   edx,eax
3000f45c:	loope  0x3000f3e4
3000f45e:	arpl   WORD PTR ds:0x98663389,ax
3000f464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3000f465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
3000f466:	mov    dl,0xb2
3000f468:	mov    ch,0x91
3000f46a:	and    BYTE PTR [esi],bl
3000f46c:	mov    eax,0xe45d17df
3000f471:	popa   
3000f472:	scas   eax,DWORD PTR es:[edi]
3000f473:	(bad)  
3000f474:	out    0x1f,al
3000f476:	shl    DWORD PTR [ebx+eax*4+0x3044785f],cl
3000f47d:	adc    al,0x4e
3000f47f:	or     BYTE PTR [eax+0x7c],bl
3000f482:	jmp    0xfba6a7a9
3000f487:	mov    ebp,0xcca4b381
3000f48c:	xchg   ecx,eax
3000f48d:	fucomi st,st(2)
3000f48f:	leave  
3000f490:	in     eax,0xd2
3000f492:	pshufw mm1,QWORD PTR [eax-0x594ac8c2],0x2f
3000f49a:	mov    ah,bh
3000f49c:	outs   dx,BYTE PTR ds:[esi]
3000f49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3000f49e:	pop    edi
3000f49f:	push   edi
3000f4a0:	fnstenv [edi]
3000f4a2:	mov    BYTE PTR ss:[edi],0x71
3000f4a6:	xchg   BYTE PTR [edi-0x70bd6a74],bh
3000f4ac:	pop    ebx
3000f4ad:	sbb    al,0x32
3000f4af:	aas    
3000f4b0:	pop    edx
3000f4b1:	xor    al,0x2f
3000f4b3:	fist   DWORD PTR [eax+eiz*1]
3000f4b6:	(bad)  
3000f4b7:	mov    eax,0xd6c3f9b6
3000f4bc:	dec    eax
3000f4bd:	mov    ds:0x500164c5,eax
3000f4c2:	and    al,0xc1
3000f4c4:	call   DWORD PTR [esi-0x5]
3000f4c7:	mov    bl,0xa5
3000f4c9:	cmp    ch,BYTE PTR [eax]
3000f4cb:	xor    esp,DWORD PTR [ebp+edx*2+0x573b85d6]
3000f4d2:	xchg   ebx,eax
3000f4d3:	stc    
3000f4d4:	jg     0x3000f4fa
3000f4d6:	lds    edi,FWORD PTR [eax+0xa6ac81]
3000f4dc:	dec    eax
3000f4dd:	retf   0xdfaa
3000f4e0:	mov    ah,0xae
3000f4e2:	jnp    0x3000f4dd
3000f4e4:	cmp    eax,0x97bf2a2c
3000f4e9:	out    0x96,al
3000f4eb:	lods   eax,DWORD PTR ds:[esi]
3000f4ec:	xchg   ecx,eax
3000f4ed:	xor    BYTE PTR [eax+edi*8-0x38],cl
3000f4f1:	cs xchg edi,eax
3000f4f3:	daa    
3000f4f4:	icebp  
3000f4f5:	das    
3000f4f6:	cs mov edx,0x9a83baf
3000f4fc:	push   eax
3000f4fd:	aad    0x57
3000f4ff:	inc    ecx
3000f500:	mov    dl,0xf7
3000f502:	dec    esi
3000f503:	dec    esp
3000f504:	xchg   ebx,eax
3000f505:	cmp    DWORD PTR [ebx+0x5c79b2b0],esi
3000f50b:	sbb    esp,DWORD PTR [esi-0x3404d5f7]
3000f511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
3000f512:	xchg   esp,eax
3000f513:	sub    eax,0xb9883577
3000f518:	xchg   ecx,eax
3000f519:	sub    ch,bh
3000f51b:	and    dh,dl
3000f51d:	(bad)  
3000f51e:	aad    0x89
3000f520:	outs   dx,DWORD PTR ds:[esi]
3000f521:	sar    bh,1
3000f523:	aaa    
3000f524:	xchg   BYTE PTR [edi+0x7580b2b1],dl
3000f52a:	cmp    BYTE PTR [ebx+0x25],ah
3000f52d:	push   edx
3000f52e:	sbb    BYTE PTR [esi-0x59b99e2a],ch
3000f534:	retf   
3000f535:	sbb    al,0x5a
3000f537:	mov    ebx,0xc4b822b5
3000f53c:	scas   al,BYTE PTR es:[di]
3000f53e:	rcl    al,0x11
3000f541:	jmp    0xae6af90a
3000f546:	jbe    0x3000f4fb
3000f548:	mov    dh,0xdd
3000f54a:	inc    ebp
3000f54b:	xor    bh,BYTE PTR [esp+ecx*4+0x455977a]
3000f552:	xor    esi,esi
3000f554:	sub    bl,BYTE PTR [ecx-0x434a4fd3]
3000f55a:	mov    ecx,0xada8d7b2
3000f55f:	out    dx,eax
3000f560:	adc    ecx,ebp
3000f562:	les    eax,FWORD PTR [ebx]
3000f564:	push   0x7e
3000f566:	jbe    0x3000f51b
3000f568:	mov    dh,0xdd
3000f56a:	inc    ebp
3000f56b:	xor    bh,BYTE PTR [esp+ecx*4+0x45e3987a]
3000f572:	push   edi
3000f573:	sub    dh,BYTE PTR [eax+0x1c]
3000f576:	aaa    
3000f577:	mov    bl,0x98
3000f579:	fisttp WORD PTR [ebp-0x39a35b39]
3000f57f:	inc    esi
3000f580:	nop
3000f581:	cld    
3000f582:	aam    0xb9
3000f584:	mov    dh,0x8c
3000f586:	retf   0x9eb7
3000f589:	and    DWORD PTR [esi-0x6467f13a],edi
3000f58f:	pushf  
3000f590:	push   edx
3000f591:	xor    BYTE PTR [eax-0x6f],bh
3000f594:	cli    
3000f595:	xchg   ebx,eax
3000f596:	and    BYTE PTR [ebp+0x793bd79c],dh
3000f59c:	inc    ebx
3000f59d:	xchg   DWORD PTR [ebx+0x7c],ebx
3000f5a0:	mov    BYTE PTR [edi+0x27b708b3],ch
3000f5a6:	iret   
3000f5a7:	mov    ecx,0xeb0c980
3000f5ac:	push   0x280ccaa1
3000f5b1:	lods   al,BYTE PTR ds:[esi]
3000f5b2:	fwait
3000f5b3:	jl     0x3000f593
3000f5b5:	out    0xbb,al
3000f5b7:	mov    ebp,0xba49538b
3000f5bc:	mov    esi,0xe97de8fd
3000f5c1:	dec    esi
3000f5c2:	and    eax,0xc5d29c3e
3000f5c7:	mov    dh,0xb9
3000f5c9:	jo     0x3000f5db
3000f5cb:	xlat   BYTE PTR ds:[ebx]
3000f5cc:	fisttp QWORD PTR [ebx]
3000f5ce:	inc    edi
3000f5cf:	outs   dx,BYTE PTR ds:[esi]
3000f5d0:	enter  0x5588,0x1e
3000f5d4:	inc    ecx
3000f5d5:	xchg   esi,eax
3000f5d6:	das    
3000f5d7:	mov    esp,0x9e325a4
3000f5dc:	jbe    0x3000f62f
3000f5de:	loope  0x3000f572
3000f5e0:	(bad)  
3000f5e1:	jno    0x3000f660
3000f5e3:	adc    BYTE PTR [edx],cl
3000f5e5:	(bad)  
3000f5e6:	jno    0x3000f59c
3000f5e8:	mov    ds:0xcd0e4ca0,eax
3000f5ed:	sub    BYTE PTR [esi-0xddc066],ah
3000f5f3:	leave  
3000f5f4:	cmp    eax,0x93b312cb
3000f5f9:	aaa    
3000f5fa:	pop    ebx
3000f5fb:	es ins BYTE PTR es:[edi],dx
3000f5fd:	shl    BYTE PTR [ecx-0x56930897],0x78
3000f604:	in     al,dx
3000f605:	mov    bh,0x5f
3000f607:	mov    edi,0xa3d7d09c
3000f60c:	or     BYTE PTR [eax],bh
3000f60e:	retf   0x583f
3000f611:	push   esp
3000f612:	mov    eax,ds:0x73f79dd6
3000f617:	mov    bl,0x99
3000f619:	test   al,0xb0
3000f61b:	pushf  
3000f61c:	or     eax,0xa8f5c26d
3000f621:	clc    
3000f622:	xchg   edi,eax
3000f623:	hlt    
3000f624:	(bad)  
3000f625:	ror    esi,cl
3000f627:	mov    edx,0x5a53fa80
3000f62c:	push   ecx
3000f62d:	js     0x3000f5d9
3000f62f:	cwde   
3000f630:	rdpmc  
3000f632:	add    BYTE PTR [edx],al
3000f634:	pushf  
3000f635:	mov    al,ds:0xad86bfb0
3000f63a:	xor    ebp,DWORD PTR [ecx+0x3f]
3000f63d:	push   esp
3000f63e:	dec    ecx
3000f63f:	dec    eax
3000f640:	fsub   DWORD PTR [ebp+0x3537891]
3000f646:	jecxz  0x3000f5fd
3000f648:	mov    bl,0xc7
3000f64a:	mov    ds:0xbb348bdc,al
3000f64f:	add    bh,BYTE PTR [edx]
3000f651:	repnz add al,BYTE PTR [ebp+ecx*8-0x694ebb7c]
3000f659:	xchg   ebx,eax
3000f65a:	popf   
3000f65b:	popa   
3000f65c:	dec    edx
3000f65d:	mov    esi,0xe876dcb4
3000f662:	rol    ebp,0xca
3000f665:	ror    DWORD PTR [edi-0x48],0x85
3000f669:	addr16 sar bl,cl
3000f66c:	inc    eax
3000f66d:	jl     0x3000f635
3000f66f:	cmp    eax,0x56bfa519
3000f674:	cmp    DWORD PTR [ebp-0xf],esp
3000f677:	mov    al,0xa0
3000f679:	aas    
3000f67a:	jp     0x3000f67a
3000f67c:	inc    ebp
3000f67d:	idiv   ah
3000f67f:	mov    bh,0xa5
3000f681:	mov    dh,0xb0
3000f683:	in     al,0xf5
3000f685:	xlat   BYTE PTR ds:[ebx]
3000f686:	pop    ebx
3000f687:	les    ecx,FWORD PTR [ebp+0x739b9cb0]
3000f68d:	pop    esi
3000f68e:	cwde   
3000f68f:	into   
3000f690:	rcl    DWORD PTR [ebx],0xfe
3000f693:	jno    0x3000f66c
3000f695:	(bad)  
3000f696:	pop    edx
3000f697:	mov    ch,0xb7
3000f699:	and    dl,ah
3000f69b:	mov    WORD PTR [esi],ss
3000f69d:	cmp    BYTE PTR [eax],bl
3000f69f:	out    0x75,al
3000f6a1:	das    
3000f6a2:	cmp    ch,al
3000f6a4:	rcr    DWORD PTR [edi-0x4a7d4dfc],cl
3000f6aa:	mov    cs,WORD PTR [edi]
3000f6ac:	jg     0x3000f6fe
3000f6ae:	leave  
3000f6af:	xlat   BYTE PTR ds:[ebx]
3000f6b0:	retf   0x342e
3000f6b3:	lods   eax,DWORD PTR ds:[esi]
3000f6b4:	push   0x1da7fe0
3000f6b9:	pop    ds
3000f6ba:	(bad)  
3000f6bb:	int    0x5
3000f6bd:	cs inc esp
3000f6bf:	ficomp WORD PTR [ebx+eiz*8]
3000f6c2:	(bad)  
3000f6c3:	(bad)  
3000f6c4:	lds    ecx,FWORD PTR [ebx+0x2789b5aa]
3000f6ca:	inc    edx
3000f6cb:	pop    ss
3000f6cc:	push   esp
3000f6cd:	pop    ds
3000f6ce:	gs pop ss
3000f6d0:	lahf   
3000f6d1:	add    eax,0x6fe65619
3000f6d6:	aam    0xb1
3000f6d8:	lahf   
3000f6d9:	mov    eax,ds:0xb50afa96
3000f6de:	js     0x3000f74b
3000f6e0:	xor    eax,0xb863476a
3000f6e5:	(bad)  
3000f6e7:	mov    edx,0x896857ab
3000f6ec:	push   ecx
3000f6ed:	enter  0xcbf4,0x1c
3000f6f1:	test   eax,0xa5d73092
3000f6f6:	jle    0x3000f6ad
3000f6f8:	mov    dl,0xec
3000f6fa:	je     0x3000f6c7
3000f6fc:	xor    eax,0xd3d7b8ca
3000f701:	(bad)  
3000f702:	mov    BYTE PTR [edi-0x44836752],bl
3000f708:	test   BYTE PTR ds:0x1bc2690,ah
3000f70e:	xchg   DWORD PTR [esi-0x76dcf96],esi
3000f714:	shl    ecx,cl
3000f716:	std    
3000f717:	mov    esp,0xca5bbfbc
3000f71c:	jg     0x3000f6a5
3000f71e:	jecxz  0x3000f70d
3000f720:	(bad)  
3000f721:	push   ebp
3000f722:	sub    cl,BYTE PTR [ebx+esi*2-0x45406163]
3000f729:	cmp    bh,BYTE PTR [edx]
3000f72b:	and    eax,0x590ecda9
3000f730:	imul   ebx,DWORD PTR [edx],0xce1235c6
3000f736:	retf   
3000f737:	mov    ah,0xaa
3000f739:	ss pop edi
3000f73b:	add    al,BYTE PTR [eax+0x45]
3000f73e:	jp     0x3000f7be
3000f740:	dec    esp
3000f741:	retf   
3000f742:	pusha  
3000f743:	mov    WORD PTR [ecx+0x64],ds
3000f746:	test   eax,0xac7891bc
3000f74b:	ds test al,0x1b
3000f74e:	fild   WORD PTR [edi-0x2c]
3000f751:	int    0x26
3000f753:	push   0xbd5498d0
3000f758:	mov    bl,0xcb
3000f75a:	retf   0xaa27
3000f75d:	in     eax,dx
3000f75e:	lock popf 
3000f760:	xor    eax,0x8c0e1b30
3000f765:	mov    edx,0x1887bcba
3000f76a:	jnp    0x3000f74a
3000f76c:	sub    ebx,DWORD PTR [edi]
3000f76e:	or     ebp,eax
3000f770:	repnz (bad) 
3000f772:	hlt    
3000f773:	inc    edi
3000f774:	jae    0x3000f75d
3000f776:	out    0xb4,al
3000f778:	mov    ah,0x83
3000f77a:	ins    BYTE PTR es:[edi],dx
3000f77b:	and    ch,dl
3000f77d:	and    BYTE PTR [ecx-0x52],dh
3000f780:	(bad)  
3000f781:	push   0x7c
3000f783:	leave  
3000f784:	or     al,0xc5
3000f786:	add    eax,0xf49481b8
3000f78b:	mov    ds:0xd70e9ffa,eax
3000f790:	scas   eax,DWORD PTR es:[edi]
3000f791:	xchg   edi,eax
3000f792:	push   esi
3000f793:	or     al,0x51
3000f795:	sbb    eax,0x7892b1ff
3000f79a:	(bad)  
3000f79b:	loop   0x3000f7dc
3000f79d:	and    bl,BYTE PTR [edx+0xd]
3000f7a0:	sti    
3000f7a1:	mov    eax,0x2da8b2a8
3000f7a6:	sub    eax,0xa1b0ee
3000f7ab:	mov    al,ds:0xe6cecfc9
3000f7b0:	ins    BYTE PTR es:[edi],dx
3000f7b1:	test   al,0xf5
3000f7b3:	cld    
3000f7b4:	cli    
3000f7b5:	jnp    0x3000f746
3000f7b7:	mov    ebx,0xd90dc9b4
3000f7bc:	pushf  
3000f7bd:	test   edi,edi
3000f7bf:	clc    
3000f7c0:	fdivr  DWORD PTR ds:0xab71ec40
3000f7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3000f7c7:	mov    al,0xaa
3000f7c9:	or     eax,0x2c4c77df
3000f7ce:	pop    esi
3000f7cf:	fwait
3000f7d0:	rdtsc  
3000f7d2:	inc    eax
3000f7d3:	in     al,dx
3000f7d4:	fst    DWORD PTR [esi]
3000f7d6:	and    DWORD PTR [ecx+eiz*4-0x66f615b4],esi
3000f7dd:	sub    DWORD PTR ds:[edx+eax*8+0x32],0xca68ec40
3000f7e6:	push   0x16acbbb1
3000f7eb:	mov    ds:0x5a4f6593,eax
3000f7f0:	icebp  
3000f7f1:	cmp    DWORD PTR [eax-0x14],eax
3000f7f4:	pop    ebx
3000f7f6:	xor    edi,DWORD PTR [eax+0x70fba2bf]
3000f7fc:	leave  
3000f7fd:	jne    0x3000f84d
3000f7ff:	das    
3000f800:	dec    ebp
3000f801:	jne    0x3000f85d
3000f803:	mov    bl,0x5
3000f805:	out    0x72,eax
3000f807:	mov    al,0x95
3000f809:	aam    0x32
3000f80b:	(bad)  
3000f80d:	jge    0x3000f827
3000f80f:	dec    esp
3000f810:	cmc    
3000f811:	and    DWORD PTR [eax+ebp*1+0x6b],0x8fb2b206
3000f819:	scas   al,BYTE PTR es:[edi]
3000f81a:	retf   0x47e1
3000f81d:	daa    
3000f81e:	sahf   
3000f81f:	and    DWORD PTR [ecx+esi*4+0x1d98a40e],ebx
3000f826:	js     0x3000f7e0
3000f828:	mov    dl,0xb
3000f82a:	mov    eax,0x3b04fd14
3000f82f:	cmp    dl,bh
3000f831:	jl     0x3000f885
3000f833:	mov    dl,0x36
3000f835:	js     0x3000f805
3000f837:	mov    ebx,0xe4ffff99
3000f83c:	adc    esp,DWORD PTR [ebp-0x2e2b461]
3000f842:	or     DWORD PTR [edi+0x31],edx
3000f845:	mov    edi,0x82aeb250
3000f84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3000f84b:	push   edi
3000f84c:	test   eax,0x88b92817
3000f851:	ficomp WORD PTR [esi+0x6e596555]
3000f857:	mov    esp,0xf817f4b2
3000f85c:	test   al,0x8f
3000f85e:	dec    ebx
3000f85f:	mov    edx,0x85b17269
3000f864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3000f865:	mov    ds:0xab9fbbea,al
3000f86a:	(bad)  
3000f86b:	fadd   st(5),st
3000f86d:	outs   dx,DWORD PTR ds:[esi]
3000f86e:	inc    edi
3000f86f:	sti    
3000f870:	scas   al,BYTE PTR es:[edi]
3000f871:	pop    ds
3000f872:	jbe    0x3000f8eb
3000f874:	push   es
3000f875:	dec    eax
3000f876:	jle    0x3000f830
3000f878:	mov    ebx,0xa9362a33
3000f87d:	mov    ebp,0x6ca9a5b3
3000f882:	mov    eax,ds:0xaa5b3849
3000f887:	mov    bh,0x96
3000f889:	mov    ebx,0x51c83e1d
3000f88e:	dec    esi
3000f88f:	(bad)  
3000f890:	imul   ebp,ecx,0xfffffff6
3000f893:	lea    edx,cs:0x1889b422
3000f89a:	js     0x3000f8ce
3000f89c:	dec    esp
3000f89d:	ret    0x4854
3000f8a0:	jo     0x3000f8ce
3000f8a2:	push   0xffffffd3
3000f8a4:	inc    ebx
3000f8a5:	loope  0x3000f86d
3000f8a7:	mov    bh,0x85
3000f8a9:	pop    ds
3000f8aa:	mov    ds:0x2b0b9cd8,eax
3000f8af:	in     eax,dx
3000f8b0:	ja     0x3000f910
3000f8b2:	aam    0xd9
3000f8b4:	push   esi
3000f8b5:	fsubp  st(6),st
3000f8b7:	mov    bh,0x94
3000f8b9:	or     al,0x7b
3000f8bb:	in     al,0x58
3000f8bd:	push   ebx
3000f8be:	xchg   ebx,eax
3000f8bf:	mov    BYTE PTR [esp+esi*1+0x6ea1abf2],dl
3000f8c6:	jmp    0xb3d9a080
3000f8cb:	lea    edx,ds:0x6ea87743
3000f8d1:	push   ebp
3000f8d2:	mov    esp,0x762e7437
3000f8d7:	mov    bh,0x97
3000f8d9:	fisubr WORD PTR [esi]
3000f8db:	sbb    BYTE PTR [ecx],bh
3000f8dd:	ss dec edi
3000f8df:	leave  
3000f8e0:	push   edi
3000f8e1:	lock std 
3000f8e3:	push   0xbc00f36c
3000f8e8:	lahf   
3000f8e9:	xor    DWORD PTR [esi+0x6a],eax
3000f8ec:	mov    dl,0xb8
3000f8ee:	dec    edi
3000f8ef:	in     al,0x7a
3000f8f1:	shl    BYTE PTR [edi-0x7],0xdc
3000f8f5:	xchg   edx,eax
3000f8f6:	xor    edi,DWORD PTR [ebx-0x71fe5762]
3000f8fc:	(bad)  
3000f8fd:	mov    ch,0x3b
3000f8ff:	adc    eax,0x8df03192
3000f904:	dec    eax
3000f905:	(bad)  
3000f906:	in     al,dx
3000f907:	mov    bh,0xb2
3000f909:	mov    edi,0x87ff4289
3000f90e:	lods   eax,DWORD PTR ds:[esi]
3000f90f:	pop    esp
3000f910:	sbb    DWORD PTR [edx+0x1df65696],edx
3000f916:	mov    dl,0xbe
3000f918:	mov    ebx,0x6f50a0ec
3000f91d:	mov    al,0xe9
3000f91f:	and    al,0x39
3000f921:	gs lahf 
3000f923:	pop    esi
3000f924:	outs   dx,BYTE PTR ds:[esi]
3000f925:	xchg   esp,eax
3000f926:	push   ds
3000f927:	mov    ebp,0x856c928b
3000f92c:	xchg   ebx,eax
3000f92d:	retf   
3000f92e:	dec    edx
3000f92f:	lea    ecx,[ebp+0x74b62edf]
3000f935:	enter  0xb005,0xa0
3000f939:	sahf   
3000f93a:	inc    eax
3000f93b:	loopne 0x3000f8f2
3000f93d:	rcl    BYTE PTR [edi+0x23818ccc],1
3000f943:	push   edi
3000f944:	pop    es
3000f945:	xchg   esp,eax
3000f946:	outs   dx,DWORD PTR ds:[esi]
3000f947:	mov    dl,0x84
3000f949:	or     bl,BYTE PTR [edx+0x2b2a8395]
3000f94f:	inc    edi
3000f950:	dec    edi
3000f951:	sti    
3000f952:	stc    
3000f953:	dec    ebp
3000f954:	inc    ebx
3000f955:	lea    ebp,[esi+esi*4-0x406a6d45]
3000f95c:	ror    DWORD PTR es:[edx+edi*8],cl
3000f960:	pushf  
3000f961:	mov    cl,0xe
3000f963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3000f964:	cwde   
3000f965:	sbb    eax,0xbb2b878
3000f96a:	mov    eax,0x3b04fd14
3000f96f:	cmp    BYTE PTR [ebp+0x5f155040],ah
3000f975:	imul   eax,DWORD PTR [eax+0xdb9eb3],0xe7a8caa9
3000f97f:	push   esp
3000f980:	mov    ?,WORD PTR [eax-0x4dfcf43a]
3000f986:	xchg   edi,eax
3000f987:	mov    ebp,0x917dc384
3000f98c:	push   eax
3000f98d:	(bad)
3000f990:	mov    dl,0xd5
3000f992:	adc    eax,0xd967aca5
3000f997:	mov    cl,0xa6
3000f999:	cmp    ah,cl
3000f99b:	mov    ds:0x429abc47,eax
3000f9a0:	sub    DWORD PTR [eax+0x70014803],edx
3000f9a6:	jmp    0x4839:0xaef68ab9
3000f9ad:	push   0xe57e27b3
3000f9b2:	shr    edx,0xa0
3000f9b5:	aad    0x5
3000f9b7:	mov    edx,0x4ee66099
3000f9bc:	pop    edi
3000f9bd:	mov    ds:0x4d181e04,eax
3000f9c2:	int    0xce
3000f9c4:	cmp    eax,esi
3000f9c6:	fdiv   DWORD PTR [ebp-0xa213851]
3000f9cc:	pop    ds
3000f9cd:	inc    eax
3000f9ce:	in     eax,dx
3000f9cf:	inc    eax
3000f9d0:	and    dl,ah
3000f9d2:	dec    edi
3000f9d3:	inc    ecx
3000f9d4:	aam    0x62
3000f9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3000f9d7:	mov    esp,0x5576e7a9
3000f9dc:	jle    0x3000fa09
3000f9de:	imul   edx,DWORD PTR [edx-0x36],0x74
3000f9e2:	(bad)  
3000f9e3:	shl    DWORD PTR ds:0x96ba0ef8,cl
3000f9e9:	mov    ds:0x1cd955be,eax
3000f9ee:	lea    edi,[edx+0x40]
3000f9f1:	sahf   
3000f9f2:	lock ror ecx,cl
3000f9f5:	ret    
3000f9f6:	jae    0x3000f9b1
3000f9f8:	xchg   esp,eax
3000f9f9:	mov    eax,0x57962140
3000f9fe:	dec    ecx
3000f9ff:	out    0xf1,eax
3000fa01:	adc    ebp,ebx
3000fa03:	xor    al,0x8d
3000fa05:	mov    edi,0xe296b518
3000fa0a:	nop
3000fa0b:	cld    
3000fa0c:	iret   
3000fa0d:	xchg   DWORD PTR [ebp-0x3d9528bc],edx
3000fa13:	sar    BYTE PTR [ebx],0x45
3000fa16:	icebp  
3000fa17:	mov    ebp,0x89294781
3000fa1c:	arpl   WORD PTR [eax],ax
3000fa1e:	(bad)
3000fa21:	loop   0x3000fa6d
3000fa23:	mov    ds:0xb48135e1,eax
3000fa28:	xchg   esp,eax
3000fa29:	fxch   st(4)
3000fa2b:	ds ja  0x3000fa47
3000fa2e:	mov    ?,WORD PTR [edx+0x39]
3000fa31:	adc    ah,BYTE PTR [edi+ecx*8-0x2]
3000fa35:	pop    esi
3000fa36:	adc    esi,DWORD PTR [ebx+0x2b305583]
3000fa3c:	outs   dx,DWORD PTR ds:[esi]
3000fa3d:	mov    ebx,0x4dc96329
3000fa42:	jnp    0x3000fa50
3000fa44:	push   esi
3000fa45:	dec    ebx
3000fa46:	in     al,0xbf
3000fa48:	mov    esp,0xe3063158
3000fa4d:	lods   al,BYTE PTR ds:[esi]
3000fa4e:	mov    ds:0x5fff8aec,eax
3000fa53:	pop    ds
3000fa54:	mov    BYTE PTR [esi+0x89ab363],ch
3000fa5a:	mov    ebx,0x88ea6783
3000fa5f:	sub    DWORD PTR [eax+0x14],esi
3000fa62:	adc    esi,DWORD PTR ds:0xb61c9281
3000fa68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000fa69:	retf   
3000fa6a:	xchg   esi,eax
3000fa6b:	push   esi
3000fa6c:	retf   
3000fa6d:	cs jb  0x3000fae9
3000fa70:	leave  
3000fa71:	dec    ebp
3000fa72:	jnp    0x3000fa80
3000fa74:	push   esi
3000fa75:	dec    ebx
3000fa76:	in     al,0xbf
3000fa78:	mov    esp,0xe3063158
3000fa7d:	lods   al,BYTE PTR ds:[esi]
3000fa7e:	mov    ds:0xa94c24ec,eax
3000fa83:	mov    eax,ds:0xba77869b
3000fa88:	lea    ecx,[ecx-0x2d]
3000fa8b:	push   edx
3000fa8c:	cmp    dh,BYTE PTR [edi+0x18cab9bd]
3000fa92:	inc    ebp
3000fa93:	dec    esp
3000fa94:	xchg   ebx,eax
3000fa95:	(bad)  
3000fa96:	iret   
3000fa97:	mov    edi,0x48ef2983
3000fa9c:	out    dx,al
3000fa9d:	fiadd  DWORD PTR [eax+0x36]
3000faa0:	imul   eax,DWORD PTR [esi-0x6a],0x1d
3000faa4:	mov    ss,WORD PTR [eax]
3000faa6:	pop    ds
3000faa7:	mov    bl,0x8b
3000faa9:	int    0x58
3000faab:	sbb    al,0x21
3000faad:	jae    0x3000fb21
3000faaf:	call   0xc10f6b40
3000fab4:	mov    eax,0x94ba0a4c
3000fab9:	push   ebp
3000faba:	test   eax,0xf764603b
3000fabf:	nop
3000fac0:	stos   DWORD PTR es:[edi],eax
3000fac1:	add    ebp,esp
3000fac3:	icebp  
3000fac4:	into   
3000fac5:	ins    DWORD PTR es:[edi],dx
3000fac6:	hlt    
3000fac7:	mov    esi,0x6895748b
3000facc:	pushf  
3000facd:	shl    DWORD PTR [esi],cl
3000facf:	daa    
3000fad0:	stos   BYTE PTR es:[edi],al
3000fad1:	in     eax,0xd7
3000fad3:	adc    cl,BYTE PTR [esi-0x32]
3000fad6:	inc    ebp
3000fad7:	mov    esi,0x4765d38f
3000fadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
3000fadd:	in     eax,0x39
3000fadf:	int    0x9d
3000fae1:	mov    DWORD PTR [esi],0x199bd03f
3000fae7:	mov    ebx,0x118c686
3000faec:	frndint 
3000faee:	sub    al,0xd5
3000faf0:	pop    ebx
3000faf1:	addr16 jb 0x3000fa82
3000faf4:	pushf  
3000faf5:	enter  0xb685,0x89
3000faf9:	xor    BYTE PTR [eax-0x7f],dl
3000fafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3000fafd:	and    eax,0x34beff44
3000fb02:	adc    BYTE PTR [ecx+ebx*8+0x5f],ah
3000fb06:	inc    ebp
3000fb07:	mov    ecx,0x2caa8a9f
3000fb0c:	sbb    DWORD PTR es:[ebx+0x43f51718],edi
3000fb13:	push   ds
3000fb14:	or     ebp,esi
3000fb16:	or     edi,DWORD PTR [esi+0x10de2ab1]
3000fb1c:	popf   
3000fb1d:	mov    ah,0x16
3000fb1f:	(bad)  
3000fb20:	(bad)  [edx+0x1fac90da]
3000fb26:	test   al,0xbc
3000fb28:	mov    al,0xbb
3000fb2a:	xlat   BYTE PTR ds:[ebx]
3000fb2b:	cmp    eax,0xb45e7f57
3000fb30:	add    eax,0x6452ac66
3000fb35:	cs aad 0xb1
3000fb38:	xchg   edi,eax
3000fb39:	clc    
3000fb3a:	push   eax
3000fb3b:	mov    cl,bh
3000fb3d:	xchg   esi,eax
3000fb3e:	and    ebp,DWORD PTR [esi+0x77]
3000fb41:	in     al,0x1d
3000fb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3000fb44:	ja     0x3000fbb7
3000fb46:	and    DWORD PTR [eax+0x5f93ee9f],edi
3000fb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3000fb4d:	test   DWORD PTR [edi-0x36d986c0],ebp
3000fb53:	or     eax,0xbe4de650
3000fb58:	lods   al,BYTE PTR ds:[esi]
3000fb59:	or     cl,bh
3000fb5b:	dec    edi
3000fb5c:	fwait
3000fb5d:	icebp  
3000fb5e:	int3   
3000fb5f:	dec    edx
3000fb60:	push   edi
3000fb61:	cmp    eax,0xa145700a
3000fb66:	call   0x76e28a23
3000fb6b:	mov    dh,0x42
3000fb6d:	jge    0x3000fafe
3000fb6f:	repz sbb dl,BYTE PTR [esp+ebp*1-0x1c]
3000fb74:	mov    ch,bl
3000fb76:	sub    DWORD PTR [edx+eax*4-0x5cc2c907],edi
3000fb7d:	sti    
3000fb7e:	(bad)  
3000fb7f:	and    edi,edx
3000fb81:	xchg   ebx,eax
3000fb82:	test   al,0x18
3000fb84:	mov    esp,edi
3000fb86:	repz mov edx,0x3acf989e
3000fb8c:	or     BYTE PTR [edi-0x73b09660],dl
3000fb92:	in     eax,0x52
3000fb94:	jbe    0x3000fbd1
3000fb96:	arpl   WORD PTR [ebx-0x5a11014f],si
3000fb9c:	dec    esp
3000fb9d:	rcr    DWORD PTR [edx+0x3756a44f],1
3000fba3:	dec    eax
3000fba4:	sbb    eax,DWORD PTR [edi+0x24]
3000fba7:	mov    ch,0x95
3000fba9:	pusha  
3000fbaa:	cmovs  edi,DWORD PTR [ebp+0x14]
3000fbae:	sub    ebx,edi
3000fbb0:	jnp    0x3000fbf3
3000fbb2:	lods   eax,DWORD PTR ds:[esi]
3000fbb3:	retf   
3000fbb4:	sub    edx,eax
3000fbb6:	int3   
3000fbb7:	mov    esi,0xb6ef9d83
3000fbbc:	and    BYTE PTR [ebx-0x29d062ba],cl
3000fbc2:	out    0x5,al
3000fbc4:	jmp    0x3000fbf2
3000fbc6:	push   0x6f4892b7
3000fbcb:	loope  0x3000fbc7
3000fbcd:	cmc    
3000fbce:	or     cl,BYTE PTR [ecx+0x62d77e08]
3000fbd4:	jge    0x3000fbe1
3000fbd6:	xchg   ebx,eax
3000fbd7:	mov    esi,0x83ca648d
3000fbdc:	xor    ah,BYTE PTR [edx+0x50]
3000fbdf:	mov    ecx,0x2ad98cc
3000fbe4:	lea    eax,[edx+0x7e]
3000fbe7:	mov    al,0xbe
3000fbe9:	in     al,dx
3000fbea:	mov    esi,0xf52a6eb0
3000fbef:	lahf   
3000fbf0:	loope  0x3000fc15
3000fbf2:	add    BYTE PTR [ebp+0x38],dl
3000fbf5:	pop    esi
3000fbf6:	inc    ebx
3000fbf7:	mov    eax,0x689edcb3
3000fbfc:	pop    ebp
3000fbfd:	repz xchg ebp,eax
3000fbff:	fwait
3000fc00:	dec    edx
3000fc01:	cmp    eax,0x6b6560e6
3000fc06:	cmp    al,0xbe
3000fc08:	mov    dh,0xf9
3000fc0a:	repz add DWORD PTR [esi-0x627dbd62],0x9e48e75e
3000fc15:	cld    
3000fc16:	icebp  
3000fc17:	mov    ah,0x92
3000fc19:	or     ebx,eax
3000fc1b:	lea    esi,[eax-0x42]
3000fc1e:	pusha  
3000fc1f:	fwait
3000fc20:	add    eax,0x3fdf5507
3000fc25:	jmp    0x3000fc8f
3000fc27:	mov    bh,0x8c
3000fc29:	mov    al,ds:0x2b1e864d
3000fc2e:	adc    dl,BYTE PTR [edx]
3000fc30:	mov    es,ebx
3000fc32:	push   esp
3000fc33:	add    DWORD PTR [eax],0xa5ba8ea6
3000fc39:	repz fs aas 
3000fc3c:	and    eax,0x69e6c25f
3000fc41:	jb     0x3000fbf4
3000fc43:	test   DWORD PTR [edx+eiz*4-0x54604416],esp
3000fc4a:	(bad)  
3000fc4b:	fadd   st(5),st
3000fc4d:	outs   dx,DWORD PTR ds:[esi]
3000fc4e:	inc    edi
3000fc4f:	sti    
3000fc50:	or     BYTE PTR [esi-0x29],bh
3000fc53:	bound  edi,QWORD PTR [ebp+0xb]
3000fc56:	xchg   ebx,eax
3000fc57:	mov    esi,0x83ca648d
3000fc5c:	xor    ah,BYTE PTR [edx+0x50]
3000fc5f:	mov    ecx,0x1f117182
3000fc64:	or     esp,DWORD PTR [bx+di-0x46]
3000fc68:	sahf   
3000fc69:	nop
3000fc6a:	sub    edi,DWORD PTR ds:0xd54a1273
3000fc70:	int3   
3000fc71:	cwde   
3000fc72:	lods   eax,DWORD PTR ds:[esi]
3000fc73:	add    cl,BYTE PTR [ebp-0x414f81be]
3000fc79:	in     al,dx
3000fc7a:	mov    esi,0xf52a6eb0
3000fc7f:	lahf   
3000fc80:	jl     0x3000fc5c
3000fc82:	jno    0x3000fc7d
3000fc84:	(bad)  
3000fc85:	test   esp,0x6c4cafbf
3000fc8b:	sub    cl,BYTE PTR [edi-0x58c173d3]
3000fc91:	enter  0xb7e5,0x2f
3000fc95:	pop    ecx
3000fc96:	pop    ds
3000fc97:	mov    esp,0x2844b8b1
3000fc9c:	mov    esi,0x2a8e2f96
3000fca1:	xor    edx,ebp
3000fca3:	das    
3000fca4:	xor    BYTE PTR [ebx],0x4c
3000fca7:	mov    esi,0xccc0669e
3000fcac:	dec    eax
3000fcad:	pop    ss
3000fcae:	lods   eax,DWORD PTR ds:[esi]
3000fcaf:	cmp    ebx,DWORD PTR [edx+0x3f9bf753]
3000fcb5:	pop    edx
3000fcb6:	data16 mov cl,0xa7
3000fcb9:	fisub  DWORD PTR [esi]
3000fcbb:	data16 fcomip st,st(0)
3000fcbe:	mov    eax,0x17ef397e
3000fcc3:	jl     0x3000fc74
3000fcc5:	xor    esi,DWORD PTR cs:[esi-0x6b9bdc67]
3000fccc:	lods   al,BYTE PTR ds:[esi]
3000fccd:	jmp    0x2f9ed68b
3000fcd2:	outs   dx,BYTE PTR ds:[esi]
3000fcd3:	pop    ds
3000fcd4:	loopne 0x3000fcfb
3000fcd6:	jecxz  0x3000fc96
3000fcd8:	mov    cl,0x52
3000fcda:	mov    ds:0xee9263fc,eax
3000fcdf:	pop    ds
3000fce0:	enter  0x28aa,0xbf
3000fce4:	out    dx,eax
3000fce5:	xor    esi,ebp
3000fce7:	mov    esp,0x166bb0a7
3000fcec:	dec    ebp
3000fced:	add    BYTE PTR [eax+0x5d],0x3c
3000fcf1:	jmp    0x3000fd41
3000fcf3:	mov    ds:0xb4df89df,eax
3000fcf8:	mov    eax,0x63e70df7
3000fcfd:	sar    DWORD PTR [ebp+0xa],0x6c
3000fd01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
3000fd02:	(bad)
3000fd05:	aad    0xdb
3000fd07:	mov    ebx,0xb01311a8
3000fd0c:	addr16 dec ecx
3000fd0e:	repz call 0x1ebb:0x505af459
3000fd16:	cmp    BYTE PTR [esp+ecx*4+0x794422c2],bh
3000fd1d:	ds hlt 
3000fd1f:	jmp    0xfd782c79
3000fd24:	fdivr  QWORD PTR [edx+0x72]
3000fd27:	mov    esp,0xa595d481
3000fd2c:	push   ds
3000fd2d:	rcl    al,0xa6
3000fd30:	(bad)  
3000fd31:	aam    0xf8
3000fd33:	test   eax,0xbd8b09d4
3000fd38:	mov    ss,ebp
3000fd3a:	mov    ds:0x7f485864,al
3000fd3f:	pop    es
3000fd40:	dec    edx
3000fd41:	xor    BYTE PTR [ebx+0x5c1b095b],cl
3000fd47:	mov    bh,0x95
3000fd49:	sbb    ecx,ebx
3000fd4b:	cld    
3000fd4c:	push   ds
3000fd4d:	cld    
3000fd4e:	push   0xffffff94
3000fd50:	cmc    
3000fd51:	jecxz  0x3000fd40
3000fd53:	pop    ss
3000fd54:	and    cl,BYTE PTR [esi-0x272440d]
3000fd5a:	icebp  
3000fd5b:	mov    ah,0xe2
3000fd5d:	and    eax,0x3ba5082
3000fd62:	push   ds
3000fd63:	inc    ebp
3000fd64:	jmp    0xd1ad:0xb7b076ac
3000fd6b:	mov    dh,0x31
3000fd6d:	shr    DWORD PTR es:[edx],cl
3000fd70:	cdq    
3000fd71:	xchg   esp,eax
3000fd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3000fd73:	xor    dh,BYTE PTR [esi-0xe]
3000fd76:	mov    dh,0xb6
3000fd78:	mov    bl,0x56
3000fd7a:	ss sbb al,0xf0
3000fd7d:	xlat   BYTE PTR ds:[ebx]
3000fd7e:	inc    ebx
3000fd7f:	jb     0x3000fd55
3000fd81:	std    
3000fd82:	popf   
3000fd83:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
3000fd85:	(bad)  
3000fd86:	fnstsw WORD PTR [ecx-0x29fc3d4a]
3000fd8c:	test   BYTE PTR [ebx],0x2c
3000fd8f:	cli    
3000fd90:	and    bh,BYTE PTR [esi]
3000fd92:	mov    ebx,0xd983711b
3000fd97:	mov    esi,0x2c39c881
3000fd9c:	arpl   WORD PTR [edi+0x44d7e3eb],di
3000fda2:	sub    ecx,DWORD PTR [edx]
3000fda4:	adc    al,0xdb
3000fda6:	cmp    BYTE PTR [eax-0x69401343],dh
3000fdac:	mov    edx,0x7eea899
3000fdb1:	je     0x3000fda0
3000fdb3:	add    DWORD PTR [ebp-0x5a],ebx
3000fdb6:	sub    BYTE PTR [ecx-0x1e81d571],dh
3000fdbc:	mov    esp,0xd6861c4d
3000fdc1:	sub    BYTE PTR [edx],0x96
3000fdc4:	adc    DWORD PTR [ebx],0x36a6b2b8
3000fdca:	not    DWORD PTR [ebx-0x2357df0e]
3000fdd0:	pusha  
3000fdd1:	mov    cl,0xe3
3000fdd3:	mov    al,ds:0xb2ebca2a
3000fdd8:	scas   al,BYTE PTR es:[edi]
3000fdd9:	test   DWORD PTR [ebx-0x7e],edi
3000fddc:	je     0x3000fe53
3000fdde:	inc    ecx
3000fddf:	aaa    
3000fde0:	popf   
3000fde1:	hlt    
3000fde2:	lahf   
3000fde3:	dec    edi
3000fde4:	cmc    
3000fde5:	pop    eax
3000fde6:	dec    ebx
3000fde7:	mov    esp,0x43ee1f9f
3000fdec:	rcr    ecx,cl
3000fdee:	or     eax,0xda465c80
3000fdf3:	mov    bh,0x1d
3000fdf5:	ins    BYTE PTR es:[edi],dx
3000fdf6:	fdivr  DWORD PTR [eax+edx*4+0x2ef74144]
3000fdfd:	out    0xe5,eax
3000fdff:	leave  
3000fe00:	and    eax,0xafff3262
3000fe05:	mov    WORD PTR [ebx+0x7140a2ba],es
3000fe0b:	mov    ebp,0xdec47f66
3000fe10:	ins    DWORD PTR es:[edi],dx
3000fe11:	loopne 0x3000fe66
3000fe13:	mov    esi,0xbc8b0f84
3000fe18:	mov    ebp,0x8c23a023
3000fe1d:	dec    esp
3000fe1e:	dec    ebx
3000fe1f:	aas    
3000fe20:	jmp    0x7f3193c8
3000fe25:	jl     0x3000fe22
3000fe27:	mov    dl,0xb7
3000fe29:	add    bl,BYTE PTR [ecx]
3000fe2b:	pop    esp
3000fe2c:	xor    eax,0xab87e8c6
3000fe31:	(bad)  
3000fe32:	int3   
3000fe33:	out    0x0,eax
3000fe35:	sub    eax,0xd898bb5c
3000fe3a:	inc    eax
3000fe3b:	push   eax
3000fe3c:	sbb    edx,DWORD PTR [ecx-0x17282b3]
3000fe42:	and    al,0xab
3000fe44:	out    0x33,al
3000fe46:	mov    ebx,0xd5439eb6
3000fe4b:	pop    ss
3000fe4c:	fstp   DWORD PTR [ebx-0xc]
3000fe4f:	xchg   esi,eax
3000fe50:	in     eax,0xc1
3000fe52:	mov    edx,0x29ce2090
3000fe57:	mov    bl,0xaf
3000fe59:	mov    esi,DWORD PTR [edx-0x52]
3000fe5c:	and    al,0x22
3000fe5e:	jb     0x3000fe19
3000fe60:	xchg   ebx,eax
3000fe61:	adc    BYTE PTR [ebx],bh
3000fe63:	ins    DWORD PTR es:[edi],dx
3000fe64:	stos   BYTE PTR es:[edi],al
3000fe65:	movups xmm6,XMMWORD PTR [ebx-0x50061468]
3000fe6c:	(bad)  
3000fe6d:	sbb    DWORD PTR [ebx-0x2650b9b1],edx
3000fe73:	inc    ecx
3000fe74:	push   edi
3000fe75:	fisubr WORD PTR [ebx+0x386b95ba]
3000fe7b:	sbb    DWORD PTR [eax+0x5d],ebp
3000fe7e:	push   edi
3000fe7f:	sbb    BYTE PTR ds:[edx+0x5a6103a7],cl
3000fe86:	cmc    
3000fe87:	mov    ah,0x9b
3000fe89:	pop    ebp
3000fe8b:	adc    eax,0x4940f2f5
3000fe90:	push   ebx
3000fe91:	add    BYTE PTR [edi+0x0],ch
3000fe94:	data16 add BYTE PTR [eax+eax*1+0x77],dh
3000fe99:	add    BYTE PTR [ecx+0x0],ah
3000fe9c:	jb     0x3000fe9e
3000fe9e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3000fea3:	add    BYTE PTR [ecx+0x0],ch
3000fea6:	arpl   WORD PTR [eax],ax
3000fea8:	jb     0x3000feaa
3000feaa:	outs   dx,DWORD PTR ds:[esi]
3000feab:	add    BYTE PTR [ebx+0x0],dh
3000feae:	outs   dx,DWORD PTR ds:[esi]
3000feaf:	add    BYTE PTR [esi+0x0],ah
3000feb2:	je     0x3000feb4
3000feb4:	pop    esp
3000feb5:	add    BYTE PTR [esi+0x0],dl
3000feb8:	imul   eax,DWORD PTR [eax],0x750073
3000febe:	popa   
3000febf:	add    BYTE PTR [eax+eax*1+0x53],ch
3000fec3:	add    BYTE PTR [eax+eax*1+0x75],dh
3000fec7:	add    BYTE PTR [eax+eax*1+0x69],ah
3000fecb:	add    BYTE PTR [edi+0x0],ch
3000fece:	pop    esp
3000fecf:	add    BYTE PTR [edi],dh
3000fed1:	add    BYTE PTR [esi],ch
3000fed3:	add    BYTE PTR [eax],dh
3000fed5:	add    BYTE PTR [eax],al
3000fed7:	add    BYTE PTR [ebx+0x0],dl
3000feda:	outs   dx,DWORD PTR ds:[esi]
3000fedb:	add    BYTE PTR [esi+0x0],ah
3000fede:	je     0x3000fee0
3000fee0:	ja     0x3000fee2
3000fee2:	popa   
3000fee3:	add    BYTE PTR [edx+0x0],dh
3000fee6:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3000feeb:	add    BYTE PTR [ecx+0x0],ch
3000feee:	arpl   WORD PTR [eax],ax
3000fef0:	jb     0x3000fef2
3000fef2:	outs   dx,DWORD PTR ds:[esi]
3000fef3:	add    BYTE PTR [ebx+0x0],dh
3000fef6:	outs   dx,DWORD PTR ds:[esi]
3000fef7:	add    BYTE PTR [esi+0x0],ah
3000fefa:	je     0x3000fefc
3000fefc:	pop    esp
3000fefd:	add    BYTE PTR [esi+0x0],dl
3000ff00:	imul   eax,DWORD PTR [eax],0x750073
3000ff06:	popa   
3000ff07:	add    BYTE PTR [eax+eax*1+0x53],ch
3000ff0b:	add    BYTE PTR [eax+eax*1+0x75],dh
3000ff0f:	add    BYTE PTR [eax+eax*1+0x69],ah
3000ff13:	add    BYTE PTR [edi+0x0],ch
3000ff16:	pop    esp
3000ff17:	add    BYTE PTR [edi],dh
3000ff19:	add    BYTE PTR [esi],ch
3000ff1b:	add    BYTE PTR [ecx],dh
3000ff1d:	add    BYTE PTR [eax],al
3000ff1f:	add    BYTE PTR [ebx+0x0],dl
3000ff22:	outs   dx,DWORD PTR ds:[esi]
3000ff23:	add    BYTE PTR [esi+0x0],ah
3000ff26:	je     0x3000ff28
3000ff28:	ja     0x3000ff2a
3000ff2a:	popa   
3000ff2b:	add    BYTE PTR [edx+0x0],dh
3000ff2e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3000ff33:	add    BYTE PTR [ecx+0x0],ch
3000ff36:	arpl   WORD PTR [eax],ax
3000ff38:	jb     0x3000ff3a
3000ff3a:	outs   dx,DWORD PTR ds:[esi]
3000ff3b:	add    BYTE PTR [ebx+0x0],dh
3000ff3e:	outs   dx,DWORD PTR ds:[esi]
3000ff3f:	add    BYTE PTR [esi+0x0],ah
3000ff42:	je     0x3000ff44
3000ff44:	pop    esp
3000ff45:	add    BYTE PTR [esi+0x0],dl
3000ff48:	imul   eax,DWORD PTR [eax],0x750073
3000ff4e:	popa   
3000ff4f:	add    BYTE PTR [eax+eax*1+0x53],ch
3000ff53:	add    BYTE PTR [eax+eax*1+0x75],dh
3000ff57:	add    BYTE PTR [eax+eax*1+0x69],ah
3000ff5b:	add    BYTE PTR [edi+0x0],ch
3000ff5e:	pop    esp
3000ff5f:	add    BYTE PTR [eax],bh
3000ff61:	add    BYTE PTR [esi],ch
3000ff63:	add    BYTE PTR [eax],dh
3000ff65:	add    BYTE PTR [eax],al
3000ff67:	add    BYTE PTR [ebx+0x0],dl
3000ff6a:	outs   dx,DWORD PTR ds:[esi]
3000ff6b:	add    BYTE PTR [esi+0x0],ah
3000ff6e:	je     0x3000ff70
3000ff70:	ja     0x3000ff72
3000ff72:	popa   
3000ff73:	add    BYTE PTR [edx+0x0],dh
3000ff76:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3000ff7b:	add    BYTE PTR [ecx+0x0],ch
3000ff7e:	arpl   WORD PTR [eax],ax
3000ff80:	jb     0x3000ff82
3000ff82:	outs   dx,DWORD PTR ds:[esi]
3000ff83:	add    BYTE PTR [ebx+0x0],dh
3000ff86:	outs   dx,DWORD PTR ds:[esi]
3000ff87:	add    BYTE PTR [esi+0x0],ah
3000ff8a:	je     0x3000ff8c
3000ff8c:	pop    esp
3000ff8d:	add    BYTE PTR [esi+0x0],dl
3000ff90:	imul   eax,DWORD PTR [eax],0x750073
3000ff96:	popa   
3000ff97:	add    BYTE PTR [eax+eax*1+0x53],ch
3000ff9b:	add    BYTE PTR [eax+eax*1+0x75],dh
3000ff9f:	add    BYTE PTR [eax+eax*1+0x69],ah
3000ffa3:	add    BYTE PTR [edi+0x0],ch
3000ffa6:	pop    esp
3000ffa7:	add    BYTE PTR [ecx],bh
3000ffa9:	add    BYTE PTR [esi],ch
3000ffab:	add    BYTE PTR [eax],dh
3000ffad:	add    BYTE PTR [eax],al
3000ffaf:	add    BYTE PTR [ebx+0x0],dl
3000ffb2:	outs   dx,DWORD PTR ds:[esi]
3000ffb3:	add    BYTE PTR [esi+0x0],ah
3000ffb6:	je     0x3000ffb8
3000ffb8:	ja     0x3000ffba
3000ffba:	popa   
3000ffbb:	add    BYTE PTR [edx+0x0],dh
3000ffbe:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3000ffc3:	add    BYTE PTR [ecx+0x0],ch
3000ffc6:	arpl   WORD PTR [eax],ax
3000ffc8:	jb     0x3000ffca
3000ffca:	outs   dx,DWORD PTR ds:[esi]
3000ffcb:	add    BYTE PTR [ebx+0x0],dh
3000ffce:	outs   dx,DWORD PTR ds:[esi]
3000ffcf:	add    BYTE PTR [esi+0x0],ah
3000ffd2:	je     0x3000ffd4
3000ffd4:	pop    esp
3000ffd5:	add    BYTE PTR [esi+0x0],dl
3000ffd8:	imul   eax,DWORD PTR [eax],0x750073
3000ffde:	popa   
3000ffdf:	add    BYTE PTR [eax+eax*1+0x53],ch
3000ffe3:	add    BYTE PTR [eax+eax*1+0x75],dh
3000ffe7:	add    BYTE PTR [eax+eax*1+0x69],ah
3000ffeb:	add    BYTE PTR [edi+0x0],ch
3000ffee:	pop    esp
3000ffef:	add    BYTE PTR [ecx],dh
3000fff1:	add    BYTE PTR [eax],dh
3000fff3:	add    BYTE PTR [esi],ch
3000fff5:	add    BYTE PTR [eax],dh
3000fff7:	add    BYTE PTR [eax],al
3000fff9:	add    BYTE PTR [eax-0x6f6f6f70],dl
3000ffff:	nop
30010000:	push   ebx
30010001:	add    BYTE PTR [edi+0x0],ch
30010004:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30010009:	add    BYTE PTR [ecx+0x0],ah
3001000c:	jb     0x3001000e
3001000e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
30010013:	add    BYTE PTR [ecx+0x0],ch
30010016:	arpl   WORD PTR [eax],ax
30010018:	jb     0x3001001a
3001001a:	outs   dx,DWORD PTR ds:[esi]
3001001b:	add    BYTE PTR [ebx+0x0],dh
3001001e:	outs   dx,DWORD PTR ds:[esi]
3001001f:	add    BYTE PTR [esi+0x0],ah
30010022:	je     0x30010024
30010024:	pop    esp
30010025:	add    BYTE PTR [esi+0x0],dl
30010028:	imul   eax,DWORD PTR [eax],0x750073
3001002e:	popa   
3001002f:	add    BYTE PTR [eax+eax*1+0x53],ch
30010033:	add    BYTE PTR [eax+eax*1+0x75],dh
30010037:	add    BYTE PTR [eax+eax*1+0x69],ah
3001003b:	add    BYTE PTR [edi+0x0],ch
3001003e:	pop    esp
3001003f:	add    BYTE PTR [ecx],bh
30010041:	add    BYTE PTR [esi],ch
30010043:	add    BYTE PTR [eax],dh
30010045:	add    BYTE PTR [edi+0x0],bl
30010048:	push   esi
30010049:	add    BYTE PTR [ebx+0x0],dl
3001004c:	dec    edi
3001004d:	add    BYTE PTR [esi+0x0],ch
30010050:	ins    BYTE PTR es:[edi],dx
30010051:	add    BYTE PTR [ecx+0x0],bh
30010054:	add    BYTE PTR [eax],al
30010056:	nop
30010057:	nop
30010058:	push   ebx
30010059:	add    BYTE PTR [edi+0x0],ch
3001005c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30010061:	add    BYTE PTR [ecx+0x0],ah
30010064:	jb     0x30010066
30010066:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3001006b:	add    BYTE PTR [ecx+0x0],ch
3001006e:	arpl   WORD PTR [eax],ax
30010070:	jb     0x30010072
30010072:	outs   dx,DWORD PTR ds:[esi]
30010073:	add    BYTE PTR [ebx+0x0],dh
30010076:	outs   dx,DWORD PTR ds:[esi]
30010077:	add    BYTE PTR [esi+0x0],ah
3001007a:	je     0x3001007c
3001007c:	pop    esp
3001007d:	add    BYTE PTR [esi+0x0],dl
30010080:	imul   eax,DWORD PTR [eax],0x750073
30010086:	popa   
30010087:	add    BYTE PTR [eax+eax*1+0x53],ch
3001008b:	add    BYTE PTR [eax+eax*1+0x75],dh
3001008f:	add    BYTE PTR [eax+eax*1+0x69],ah
30010093:	add    BYTE PTR [edi+0x0],ch
30010096:	pop    esp
30010097:	add    BYTE PTR [ecx],dh
30010099:	add    BYTE PTR [eax],dh
3001009b:	add    BYTE PTR [esi],ch
3001009d:	add    BYTE PTR [eax],dh
3001009f:	add    BYTE PTR [edi+0x0],bl
300100a2:	push   esi
300100a3:	add    BYTE PTR [ebx+0x0],dl
300100a6:	dec    edi
300100a7:	add    BYTE PTR [esi+0x0],ch
300100aa:	ins    BYTE PTR es:[edi],dx
300100ab:	add    BYTE PTR [ecx+0x0],bh
300100ae:	add    BYTE PTR [eax],al
300100b0:	push   ebx
300100b1:	add    BYTE PTR [edi+0x0],ch
300100b4:	data16 add BYTE PTR [eax+eax*1+0x77],dh
300100b9:	add    BYTE PTR [ecx+0x0],ah
300100bc:	jb     0x300100be
300100be:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
300100c3:	add    BYTE PTR [ecx+0x0],ch
300100c6:	arpl   WORD PTR [eax],ax
300100c8:	jb     0x300100ca
300100ca:	outs   dx,DWORD PTR ds:[esi]
300100cb:	add    BYTE PTR [ebx+0x0],dh
300100ce:	outs   dx,DWORD PTR ds:[esi]
300100cf:	add    BYTE PTR [esi+0x0],ah
300100d2:	je     0x300100d4
300100d4:	pop    esp
300100d5:	add    BYTE PTR [esi+0x0],dl
300100d8:	imul   eax,DWORD PTR [eax],0x750073
300100de:	popa   
300100df:	add    BYTE PTR [eax+eax*1+0x53],ch
300100e3:	add    BYTE PTR [eax+eax*1+0x75],dh
300100e7:	add    BYTE PTR [eax+eax*1+0x69],ah
300100eb:	add    BYTE PTR [edi+0x0],ch
300100ee:	pop    esp
300100ef:	add    BYTE PTR [ecx],dh
300100f1:	add    BYTE PTR [ecx],dh
300100f3:	add    BYTE PTR [esi],ch
300100f5:	add    BYTE PTR [eax],dh
300100f7:	add    BYTE PTR [edi+0x0],bl
300100fa:	push   esi
300100fb:	add    BYTE PTR [ebx+0x0],dl
300100fe:	dec    edi
300100ff:	add    BYTE PTR [esi+0x0],ch
30010102:	ins    BYTE PTR es:[edi],dx
30010103:	add    BYTE PTR [ecx+0x0],bh
30010106:	add    BYTE PTR [eax],al
30010108:	lea    ebx,[eax]
3001010a:	adc    BYTE PTR [edx+0x48670e8e],0xb3
30010111:	or     al,0x7f
30010113:	test   al,0x38
30010115:	test   al,ch
30010117:	ficom  WORD PTR [ebp-0x75]
3001011a:	in     al,dx
3001011b:	mov    ecx,DWORD PTR [ebp+0x8]
3001011e:	mov    al,BYTE PTR [ecx]
30010120:	cmp    al,0xe9
30010122:	je     0x30010166
30010124:	cmp    al,0xe0
30010126:	je     0x30010166
30010128:	cmp    al,0xc2
3001012a:	je     0x30010166
3001012c:	cmp    al,0xc3
3001012e:	je     0x30010166
30010130:	cmp    al,0xcc
30010132:	je     0x30010166
30010134:	cmp    al,0xff
30010136:	je     0x30027409
3001013c:	cmp    al,0x26
3001013e:	je     0x3001015a
30010140:	cmp    al,0x2e
30010142:	je     0x3001015a
30010144:	cmp    al,0x36
30010146:	je     0x3001015a
30010148:	cmp    al,0xe3
3001014a:	je     0x3001015a
3001014c:	cmp    al,0x64
3001014e:	je     0x3001015a
30010150:	cmp    al,0x65
30010152:	je     0x3001015a
30010154:	xor    eax,eax
30010156:	pop    ebp
30010157:	ret    0x4
3001015a:	cmp    BYTE PTR [ecx+0x1],0xff
3001015e:	je     0x30027418
30010164:	jmp    0x30010154
30010166:	xor    eax,eax
30010168:	inc    eax
30010169:	jmp    0x30010156
3001016b:	push   ebp
3001016c:	mov    ebp,esp
3001016e:	mov    eax,DWORD PTR [ebp+0x10]
30010171:	sub    esp,0x14
30010174:	push   esi
30010175:	push   edi
30010176:	xor    edi,edi
30010178:	mov    esi,edi
3001017a:	test   eax,eax
3001017c:	jne    0x30027473
30010182:	mov    eax,DWORD PTR [ebp+0x14]
30010185:	test   eax,eax
30010187:	jne    0x3002747a
3001018d:	mov    eax,DWORD PTR [ebp+0x18]
30010190:	test   eax,eax
30010192:	jne    0x30027481
30010198:	call   DWORD PTR ds:0x300451a4
3001019e:	cmp    DWORD PTR ds:0x30043690,eax
300101a4:	jne    0x30027488
300101aa:	mov    eax,ds:0x30043694
300101af:	test   eax,eax
300101b1:	jne    0x3001030d
300101b7:	mov    eax,DWORD PTR [ebp+0x8]
300101ba:	test   eax,eax
300101bc:	je     0x30027492
300101c2:	mov    ecx,DWORD PTR [eax]
300101c4:	push   ebx
300101c5:	test   ecx,ecx
300101c7:	je     0x3002749a
300101cd:	push   0x0
300101cf:	push   ecx
300101d0:	mov    ebx,edi
300101d2:	call   0x30014fb1
300101d7:	push   0x0
300101d9:	push   DWORD PTR [ebp+0xc]
300101dc:	mov    DWORD PTR [ebp-0x4],eax
300101df:	call   0x30014fb1
300101e4:	mov    edx,eax
300101e6:	mov    DWORD PTR [ebp-0x14],edx
300101e9:	cmp    edx,DWORD PTR [ebp-0x4]
300101ec:	je     0x300274a5
300101f2:	mov    eax,DWORD PTR [ebp+0x14]
300101f5:	mov    esi,DWORD PTR [ebp-0x4]
300101f8:	test   eax,eax
300101fa:	jne    0x300274af
30010200:	mov    eax,DWORD PTR [ebp+0x18]
30010203:	test   eax,eax
30010205:	jne    0x300274b6
3001020b:	push   0x18
3001020d:	call   0x30003fee
30010212:	mov    edi,eax
30010214:	pop    ecx
30010215:	mov    DWORD PTR [ebp-0x10],edi
30010218:	test   edi,edi
3001021a:	je     0x300274bd
30010220:	push   esi
30010221:	call   0x3001103b
30010226:	mov    ebx,eax
30010228:	test   ebx,ebx
3001022a:	je     0x300274bd
30010230:	mov    eax,DWORD PTR [ebp+0x10]
30010233:	test   eax,eax
30010235:	jne    0x300274c2
3001023b:	mov    edi,DWORD PTR [ebp-0x4]
3001023e:	xor    eax,eax
30010240:	mov    ecx,esi
30010242:	mov    DWORD PTR [ebp+0x14],eax
30010245:	and    DWORD PTR [ebp+0x18],0x0
30010249:	lea    edx,[ebp+0x18]
3001024c:	push   edx
3001024d:	push   0x0
3001024f:	add    eax,ebx
30010251:	push   ecx
30010252:	push   eax
30010253:	mov    DWORD PTR [ebp+0xc],ecx
30010256:	call   0x30015a8b
3001025b:	cmp    DWORD PTR [ebp+0x18],0x0
3001025f:	mov    DWORD PTR [ebp-0xc],eax
30010262:	jne    0x30010313
30010268:	push   DWORD PTR [ebp+0xc]
3001026b:	sub    eax,edi
3001026d:	mov    DWORD PTR [ebp+0x14],eax
30010270:	call   0x30010118
30010275:	test   eax,eax
30010277:	mov    eax,DWORD PTR [ebp+0x14]
3001027a:	jne    0x30010284
3001027c:	mov    ecx,DWORD PTR [ebp-0xc]
3001027f:	cmp    eax,0x5
30010282:	jl     0x30010245
30010284:	mov    edi,DWORD PTR [ebp-0x10]
30010287:	cmp    eax,0x5
3001028a:	jl     0x300274c9
30010290:	cmp    eax,0x12
30010293:	ja     0x300274d7
30010299:	mov    ecx,DWORD PTR [ebp-0x14]
3001029c:	mov    edx,DWORD PTR [ebp-0x4]
3001029f:	mov    esi,DWORD PTR [ebp+0x14]
300102a2:	mov    DWORD PTR [ebx+0x1c],ecx
300102a5:	add    edx,eax
300102a7:	lea    ecx,[ebx+0x17]
300102aa:	mov    DWORD PTR [ebx+0x18],edx
300102ad:	mov    BYTE PTR [ecx],al
300102af:	add    eax,0x5
300102b2:	add    eax,ebx
300102b4:	sub    edx,eax
300102b6:	lea    eax,[esi+0x5]
300102b9:	push   ecx
300102ba:	add    eax,ebx
300102bc:	mov    BYTE PTR [esi+ebx*1],0xe9
300102c0:	push   eax
300102c1:	mov    DWORD PTR [esi+ebx*1+0x1],edx
300102c5:	call   0x3000ecc5
300102ca:	and    DWORD PTR [ebp-0x8],0x0
300102ce:	lea    eax,[ebp-0x8]
300102d1:	push   eax
300102d2:	push   0x40
300102d4:	push   esi
300102d5:	mov    esi,DWORD PTR [ebp-0x4]
300102d8:	push   esi
300102d9:	call   DWORD PTR ds:0x30045118
300102df:	test   eax,eax
300102e1:	je     0x300274db
300102e7:	mov    eax,DWORD PTR [ebp+0x8]
300102ea:	and    DWORD PTR [edi+0x4],0x0
300102ee:	mov    DWORD PTR [edi+0x8],eax
300102f1:	mov    DWORD PTR [edi+0x10],ebx
300102f4:	mov    DWORD PTR [edi+0xc],esi
300102f7:	mov    eax,DWORD PTR [ebp-0x8]
300102fa:	mov    DWORD PTR [edi+0x14],eax
300102fd:	mov    eax,ds:0x300436a0
30010302:	mov    DWORD PTR [edi],eax
30010304:	mov    DWORD PTR ds:0x300436a0,edi
3001030a:	xor    eax,eax
3001030c:	pop    ebx
3001030d:	pop    edi
3001030e:	pop    esi
3001030f:	leave  
30010310:	ret    0x14
30010313:	mov    eax,DWORD PTR [ebp+0x14]
30010316:	jmp    0x30010284
3001031b:	push   ebp
3001031c:	mov    ebp,esp
3001031e:	xor    eax,eax
30010320:	push   eax
30010321:	push   eax
30010322:	push   eax
30010323:	push   DWORD PTR [ebp+0xc]
30010326:	push   DWORD PTR [ebp+0x8]
30010329:	call   0x3001016b
3001032e:	pop    ebp
3001032f:	ret    0x8
30010332:	push   ebp
30010333:	mov    ebp,esp
30010335:	push   ecx
30010336:	call   0x30014f2c
3001033b:	test   eax,eax
3001033d:	jne    0x30020f6f
30010343:	push   esi
30010344:	call   DWORD PTR ds:0x3004526c
3001034a:	push   eax
3001034b:	call   0x30014f8c
30010350:	mov    esi,eax
30010352:	test   esi,esi
30010354:	jne    0x300104f9
3001035a:	push   0x30006f43
3001035f:	push   0x30043108
30010364:	call   0x3001031b
30010369:	mov    esi,eax
3001036b:	test   esi,esi
3001036d:	jne    0x300104f9
30010373:	push   0x30004ccc
30010378:	push   0x300430ac
3001037d:	call   0x3001031b
30010382:	mov    esi,eax
30010384:	test   esi,esi
30010386:	jne    0x300104f9
3001038c:	push   0x3000610c
30010391:	push   0x30043678
30010396:	call   0x3001031b
3001039b:	mov    esi,eax
3001039d:	test   esi,esi
3001039f:	jne    0x300104f9
300103a5:	push   0x30001270
300103aa:	push   0x30043060
300103af:	call   0x3001031b
300103b4:	mov    esi,eax
300103b6:	test   esi,esi
300103b8:	jne    0x300104f9
300103be:	push   0x300011b7
300103c3:	push   0x30043054
300103c8:	call   0x3001031b
300103cd:	mov    esi,eax
300103cf:	test   esi,esi
300103d1:	jne    0x300104f9
300103d7:	push   ebx
300103d8:	push   edi
300103d9:	mov    edi,0x30004cc2
300103de:	push   edi
300103df:	mov    ebx,0x300430b0
300103e4:	push   ebx
300103e5:	call   0x3001031b
300103ea:	mov    esi,eax
300103ec:	test   esi,esi
300103ee:	jne    0x30010503
300103f4:	push   0x300012fb
300103f9:	push   0x30043068
300103fe:	call   0x3001031b
30010403:	mov    esi,eax
30010405:	test   esi,esi
30010407:	jne    0x30010503
3001040d:	push   0x30032322
30010412:	push   0x3004367c
30010417:	call   0x3001031b
3001041c:	mov    esi,eax
3001041e:	test   esi,esi
30010420:	jne    0x30010503
30010426:	push   0x30004d9c
3001042b:	push   0x300430b4
30010430:	call   0x3001031b
30010435:	mov    esi,eax
30010437:	test   esi,esi
30010439:	jne    0x30010503
3001043f:	push   0x30006ed3
30010444:	push   0x3004310c
30010449:	call   0x3001031b
3001044e:	mov    esi,eax
30010450:	test   esi,esi
30010452:	jne    0x30010503
30010458:	push   0x3000130f
3001045d:	push   0x300430a4
30010462:	call   0x3001031b
30010467:	mov    esi,eax
30010469:	test   esi,esi
3001046b:	jne    0x30010503
30010471:	push   0x3003232c
30010476:	push   0x30043680
3001047b:	call   0x3001031b
30010480:	mov    esi,eax
30010482:	test   esi,esi
30010484:	jne    0x30010503
30010486:	push   0x30001319
3001048b:	push   0x300430a8
30010490:	call   0x3001031b
30010495:	mov    esi,eax
30010497:	test   esi,esi
30010499:	jne    0x30010503
3001049b:	push   0x30032336
300104a0:	push   0x30043684
300104a5:	call   0x3001031b
300104aa:	mov    esi,eax
300104ac:	test   esi,esi
300104ae:	jne    0x30010503
300104b0:	push   0x30001305
300104b5:	push   0x300430a0
300104ba:	call   0x3001031b
300104bf:	mov    esi,eax
300104c1:	test   esi,esi
300104c3:	jne    0x30010503
300104c5:	push   edi
300104c6:	push   ebx
300104c7:	call   0x3001031b
300104cc:	mov    esi,eax
300104ce:	test   esi,esi
300104d0:	jne    0x30010503
300104d2:	push   0x300012fb
300104d7:	push   0x30043068
300104dc:	call   0x3001031b
300104e1:	mov    esi,eax
300104e3:	test   esi,esi
300104e5:	jne    0x30010503
300104e7:	call   0x30015c44
300104ec:	test   eax,eax
300104ee:	jne    0x30020fa7
300104f4:	pop    edi
300104f5:	pop    ebx
300104f6:	pop    esi
300104f7:	leave  
300104f8:	ret    
300104f9:	call   0x30016aac
300104fe:	jmp    0x30020f7f
30010503:	call   0x30016aac
30010508:	jmp    0x30020f93
3001050d:	push   ebp
3001050e:	mov    ebp,esp
30010510:	push   ebx
30010511:	mov    bl,BYTE PTR [ebp+0x8]
30010514:	push   esi
30010515:	mov    esi,ecx
30010517:	test   bl,bl
30010519:	jne    0x3001fe1a
3001051f:	mov    eax,DWORD PTR [esi]
30010521:	mov    ecx,esi
30010523:	call   DWORD PTR [eax+0x54]
30010526:	test   bl,bl
30010528:	jne    0x3001fe31
3001052e:	call   0x30010332
30010533:	pop    esi
30010534:	pop    ebx
30010535:	pop    ebp
30010536:	ret    0x4
30010539:	push   ebp
3001053a:	mov    ebp,esp
3001053c:	push   ebx
3001053d:	mov    ebx,ecx
3001053f:	push   esi
30010540:	mov    esi,edx
30010542:	test   ebx,ebx
30010544:	je     0x3002146d
3001054a:	push   0x18
3001054c:	call   0x30004011
30010551:	pop    ecx
30010552:	mov    ecx,eax
30010554:	test   ecx,ecx
30010556:	je     0x30021477
3001055c:	xor    eax,eax
3001055e:	test   esi,esi
30010560:	setne  al
30010563:	push   edi
30010564:	lea    esi,[ebp+0x8]
30010567:	mov    edi,ecx
30010569:	mov    DWORD PTR [ecx+0x10],eax
3001056c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001056d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001056e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001056f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010570:	mov    eax,DWORD PTR [ebx]
30010572:	mov    DWORD PTR [ecx+0x14],eax
30010575:	mov    DWORD PTR [ebx],ecx
30010577:	xor    eax,eax
30010579:	pop    edi
3001057a:	pop    esi
3001057b:	pop    ebx
3001057c:	pop    ebp
3001057d:	ret    0x10
30010580:	push   ebp
30010581:	mov    ebp,esp
30010583:	sub    esp,0x14
30010586:	mov    eax,ds:0x300435cc
3001058b:	push   ebx
3001058c:	mov    DWORD PTR [ebp-0x4],eax
3001058f:	mov    eax,DWORD PTR [eax+0x660]
30010595:	push   esi
30010596:	push   edi
30010597:	cmp    eax,0x7d0
3001059c:	je     0x300105b0
3001059e:	cmp    eax,0x5dc
300105a3:	je     0x300105b0
300105a5:	cmp    eax,0xbb8
300105aa:	jne    0x3001f460
300105b0:	xor    ebx,ebx
300105b2:	inc    ebx
300105b3:	sub    esp,0x10
300105b6:	mov    edi,esp
300105b8:	mov    esi,0x30010998
300105bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105c0:	xor    edx,edx
300105c2:	inc    edx
300105c3:	mov    ecx,0x30043478
300105c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105c9:	call   0x30010539
300105ce:	test   eax,eax
300105d0:	js     0x300108f0
300105d6:	sub    esp,0x10
300105d9:	mov    edi,esp
300105db:	mov    esi,0x300108f8
300105e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105e3:	xor    edx,edx
300105e5:	inc    edx
300105e6:	mov    ecx,0x30043478
300105eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300105ec:	call   0x30010539
300105f1:	test   eax,eax
300105f3:	js     0x300108f0
300105f9:	sub    esp,0x10
300105fc:	mov    edi,esp
300105fe:	mov    esi,0x30010908
30010603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010606:	xor    edx,edx
30010608:	inc    edx
30010609:	mov    ecx,0x30043478
3001060e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001060f:	call   0x30010539
30010614:	test   eax,eax
30010616:	js     0x300108f0
3001061c:	sub    esp,0x10
3001061f:	mov    edi,esp
30010621:	mov    esi,0x30010928
30010626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010629:	xor    edx,edx
3001062b:	inc    edx
3001062c:	mov    ecx,0x30043478
30010631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010632:	call   0x30010539
30010637:	test   eax,eax
30010639:	js     0x300108f0
3001063f:	sub    esp,0x10
30010642:	mov    edi,esp
30010644:	mov    esi,0x30010918
30010649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001064a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001064c:	xor    edx,edx
3001064e:	inc    edx
3001064f:	mov    ecx,0x30043478
30010654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010655:	call   0x30010539
3001065a:	test   eax,eax
3001065c:	js     0x300108f0
30010662:	sub    esp,0x10
30010665:	mov    edi,esp
30010667:	mov    esi,0x30010938
3001066c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001066d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001066e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001066f:	xor    edx,edx
30010671:	inc    edx
30010672:	mov    ecx,0x30043478
30010677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010678:	call   0x30010539
3001067d:	test   eax,eax
3001067f:	js     0x300108f0
30010685:	sub    esp,0x10
30010688:	mov    edi,esp
3001068a:	mov    esi,0x30010948
3001068f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010692:	xor    edx,edx
30010694:	inc    edx
30010695:	mov    ecx,0x30043478
3001069a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001069b:	call   0x30010539
300106a0:	test   eax,eax
300106a2:	js     0x300108f0
300106a8:	sub    esp,0x10
300106ab:	mov    edi,esp
300106ad:	mov    esi,0x30010958
300106b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106b5:	xor    edx,edx
300106b7:	inc    edx
300106b8:	mov    ecx,0x30043478
300106bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106be:	call   0x30010539
300106c3:	test   eax,eax
300106c5:	js     0x300108f0
300106cb:	sub    esp,0x10
300106ce:	mov    edi,esp
300106d0:	mov    esi,0x30010978
300106d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106d8:	xor    edx,edx
300106da:	inc    edx
300106db:	mov    ecx,0x30043478
300106e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106e1:	call   0x30010539
300106e6:	test   eax,eax
300106e8:	js     0x300108f0
300106ee:	sub    esp,0x10
300106f1:	mov    edi,esp
300106f3:	mov    esi,0x30010988
300106f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300106fb:	xor    edx,edx
300106fd:	inc    edx
300106fe:	mov    ecx,0x30043478
30010703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010704:	call   0x30010539
30010709:	test   eax,eax
3001070b:	js     0x300108f0
30010711:	sub    esp,0x10
30010714:	mov    edi,esp
30010716:	mov    esi,0x300109a8
3001071b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001071c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001071d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001071e:	xor    edx,edx
30010720:	mov    ecx,0x30043478
30010725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010726:	call   0x30010539
3001072b:	test   eax,eax
3001072d:	js     0x300108f0
30010733:	sub    esp,0x10
30010736:	mov    edi,esp
30010738:	mov    esi,0x300109b8
3001073d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001073e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001073f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010740:	xor    edx,edx
30010742:	mov    ecx,0x30043478
30010747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010748:	call   0x30010539
3001074d:	test   eax,eax
3001074f:	js     0x300108f0
30010755:	sub    esp,0x10
30010758:	mov    edi,esp
3001075a:	mov    esi,0x300109c8
3001075f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010762:	xor    edx,edx
30010764:	inc    edx
30010765:	mov    ecx,0x30043478
3001076a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001076b:	call   0x30010539
30010770:	test   eax,eax
30010772:	js     0x300108f0
30010778:	sub    esp,0x10
3001077b:	mov    edi,esp
3001077d:	mov    esi,0x300109d8
30010782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010785:	xor    edx,edx
30010787:	inc    edx
30010788:	mov    ecx,0x30043478
3001078d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001078e:	call   0x30010539
30010793:	test   eax,eax
30010795:	js     0x300108f0
3001079b:	sub    esp,0x10
3001079e:	mov    edi,esp
300107a0:	mov    esi,0x300109e8
300107a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107a8:	xor    edx,edx
300107aa:	inc    edx
300107ab:	mov    ecx,0x30043478
300107b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107b1:	call   0x30010539
300107b6:	test   eax,eax
300107b8:	js     0x300108f0
300107be:	sub    esp,0x10
300107c1:	mov    edi,esp
300107c3:	mov    esi,0x300109f8
300107c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107cb:	xor    edx,edx
300107cd:	inc    edx
300107ce:	mov    ecx,0x30043478
300107d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107d4:	call   0x30010539
300107d9:	test   eax,eax
300107db:	js     0x300108f0
300107e1:	sub    esp,0x10
300107e4:	mov    edi,esp
300107e6:	mov    esi,0x30010a08
300107eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107ee:	xor    edx,edx
300107f0:	inc    edx
300107f1:	mov    ecx,0x30043478
300107f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300107f7:	call   0x30010539
300107fc:	test   eax,eax
300107fe:	js     0x300108f0
30010804:	sub    esp,0x10
30010807:	mov    edi,esp
30010809:	mov    esi,0x30010a18
3001080e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001080f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010811:	xor    edx,edx
30010813:	inc    edx
30010814:	mov    ecx,0x30043478
30010819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001081a:	call   0x30010539
3001081f:	test   eax,eax
30010821:	js     0x300108f0
30010827:	sub    esp,0x10
3001082a:	mov    edi,esp
3001082c:	mov    esi,0x30010a28
30010831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010834:	xor    edx,edx
30010836:	inc    edx
30010837:	mov    ecx,0x30043478
3001083c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001083d:	call   0x30010539
30010842:	test   eax,eax
30010844:	js     0x300108f0
3001084a:	sub    esp,0x10
3001084d:	mov    edi,esp
3001084f:	mov    esi,0x30010a38
30010854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010857:	mov    edx,ebx
30010859:	mov    ecx,0x30043478
3001085e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001085f:	call   0x30010539
30010864:	test   eax,eax
30010866:	js     0x300108f0
3001086c:	sub    esp,0x10
3001086f:	mov    edi,esp
30010871:	mov    esi,0x30010a48
30010876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010879:	xor    edx,edx
3001087b:	inc    edx
3001087c:	mov    ecx,0x30043478
30010881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010882:	call   0x30010539
30010887:	test   eax,eax
30010889:	js     0x300108f0
3001088b:	test   ebx,ebx
3001088d:	je     0x3001f467
30010893:	mov    esi,0x30010968
30010898:	sub    esp,0x10
3001089b:	mov    edi,esp
3001089d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001089e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001089f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108a0:	xor    edx,edx
300108a2:	inc    edx
300108a3:	mov    ecx,0x30043478
300108a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108a9:	call   0x30010539
300108ae:	test   eax,eax
300108b0:	js     0x300108f0
300108b2:	sub    esp,0x10
300108b5:	mov    edi,esp
300108b7:	mov    esi,0x30010a68
300108bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108bf:	xor    edx,edx
300108c1:	inc    edx
300108c2:	mov    ecx,0x30043478
300108c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108c8:	call   0x30010539
300108cd:	test   eax,eax
300108cf:	js     0x300108f0
300108d1:	test   ebx,ebx
300108d3:	je     0x300108f0
300108d5:	sub    esp,0x10
300108d8:	mov    edi,esp
300108da:	mov    esi,0x30010a58
300108df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108e2:	xor    edx,edx
300108e4:	inc    edx
300108e5:	mov    ecx,0x30043478
300108ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300108eb:	call   0x30010539
300108f0:	pop    edi
300108f1:	pop    esi
300108f2:	pop    ebx
300108f3:	leave  
300108f4:	ret    
300108f5:	nop
300108f6:	nop
300108f7:	nop
300108f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
300108f9:	xchg   edx,eax
300108fa:	test   BYTE PTR [ebx],dh
300108fc:	push   ecx
300108fd:	aas    
300108fe:	jl     0x30010940
30010900:	(bad)  
30010901:	in     eax,0xd2
30010903:	push   esp
30010904:	inc    ebp
30010905:	mov    edi,0xbb24ddfc
3001090a:	cdq    
3001090b:	retf   0x1434
3001090e:	lods   eax,DWORD PTR ds:[esi]
3001090f:	inc    esp
30010910:	mov    esi,edi
30010912:	in     eax,0x6
30010914:	adc    eax,0x45b39f98
30010919:	popf   
3001091a:	stos   BYTE PTR es:[edi],al
3001091b:	arpl   di,bp
3001091d:	(bad)
30010920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010921:	fwait
30010922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
30010923:	int3   
30010924:	adc    al,0x95
30010926:	sbb    eax,eax
30010928:	je     0x3001092c
3001092a:	xchg   DWORD PTR [esi+esi*8-0x56],eax
3001092e:	jno    0x30010971
30010930:	mov    bl,0x22
30010932:	je     0x300108f1
30010934:	and    dh,ch
30010936:	sub    DWORD PTR [ebp-0x76],esi
30010939:	repz addr16 push cs
3001093c:	(bad)  
3001093e:	loope  0x3001098f
30010940:	mov    ?,WORD PTR [edi-0x17]
30010943:	dec    ebx
30010944:	sbb    eax,0x3c1b0df9
30010949:	test   BYTE PTR [ebp+ecx*8-0xd],0x43
3001094e:	sub    al,0x40
30010950:	mov    edi,0x87631f7b
30010955:	mov    ds:0xe85ed8ae,eax
3001095a:	mov    cl,0x80
3001095c:	loopne 0x300109cf
3001095e:	je     0x300109aa
30010960:	mov    ebx,fs
30010962:	in     al,dx
30010963:	fimul  WORD PTR [edi+0x6f63167]
30010969:	jle    0x300109c7
3001096b:	xchg   esp,eax
3001096c:	cmp    al,0x4d
3001096e:	hlt    
3001096f:	dec    eax
30010970:	mov    ecx,edi
30010972:	jns    0x30010964
30010974:	call   0xfdf7a0a3
30010979:	pop    ebp
3001097a:	out    0x9b,eax
3001097c:	cli    
3001097d:	neg    DWORD PTR [eax+0x44]
30010980:	xchg   edx,eax
30010981:	outs   dx,BYTE PTR ds:[esi]
30010982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30010983:	ret    0x3d15
30010986:	inc    edi
30010987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
30010988:	jg     0x300109bd
3001098a:	xlat   BYTE PTR ds:[ebx]
3001098b:	add    DWORD PTR ds:0xab4ed7ba,ecx
30010991:	inc    ecx
30010992:	pop    edx
30010993:	mov    eax,0x33d4a5da
30010998:	adc    DWORD PTR [ecx],esp
3001099a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
3001099b:	test   al,0xa8
3001099d:	out    0x43,al
3001099f:	dec    esp
300109a0:	mov    ch,0x1
300109a2:	or     BYTE PTR [esi],bl
300109a4:	push   eax
300109a5:	jmp    0x26c:0x28ce7b30
300109ac:	sbb    eax,0x834aefec
300109b1:	cmp    dl,BYTE PTR [edi]
300109b3:	in     al,0x86
300109b5:	mov    es,WORD PTR [ebp-0x4fe1bcf6]
300109bb:	xchg   edx,eax
300109bc:	push   es
300109bd:	leave  
300109be:	or     al,BYTE PTR [edx-0x7a]
300109c1:	fcomp  DWORD PTR [esi+0x34]
300109c4:	pushf  
300109c5:	scas   eax,DWORD PTR es:[edi]
300109c6:	popf   
300109c7:	retf   
300109c8:	out    0x81,eax
300109ca:	push   ds
300109cb:	mov    ?,WORD PTR [esi-0x68bb77ab]
300109d1:	mov    bl,0x81
300109d3:	aas    
300109d4:	shl    BYTE PTR [ecx-0x39],cl
300109d7:	sbb    DWORD PTR [edx+ebp*4-0x20],esi
300109db:	in     al,dx
300109dc:	inc    ecx
300109dd:	mov    dh,0x8e
300109df:	dec    ebp
300109e0:	xchg   ebp,eax
300109e1:	cmc    
300109e2:	adc    ebx,DWORD PTR [eax+0x66]
300109e5:	mov    eax,0xcbf9de2a
300109ea:	out    dx,al
300109eb:	mov    eax,ds:0x4469af7e
300109f0:	scas   eax,DWORD PTR es:[edi]
300109f1:	mov    edx,ebx
300109f3:	mov    eax,ds:0xd98e2c7
300109f8:	mov    bl,0xef
300109fa:	push   ecx
300109fb:	fild   QWORD PTR [ebx+0x65]
300109fe:	xor    eax,0x66c4bc4e
30010a03:	mov    ah,0x9
30010a05:	dec    edx
30010a06:	inc    esi
30010a07:	out    dx,al
30010a08:	xor    esp,DWORD PTR [esi]
30010a0a:	sar    DWORD PTR [edi],0xb2
30010a0d:	jle    0x300109e7
30010a0f:	dec    ebx
30010a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
30010a11:	jmp    FWORD PTR [edx]
30010a13:	popa   
30010a14:	sub    BYTE PTR [ebx+edx*4],0x32
30010a18:	stos   BYTE PTR es:[edi],al
30010a19:	and    eax,0x6be9b72d
30010a1e:	or     BYTE PTR [edi-0x6d],cl
30010a21:	imul   ebp,DWORD PTR [edi+0x30393be0],0xffffffc3
30010a28:	dec    ecx
30010a29:	adc    al,0xa0
30010a2b:	sbb    dh,BYTE PTR [edi]
30010a2d:	(bad)  
30010a2e:	and    eax,0xd0459d4f
30010a33:	mov    edx,0xd7fbfa1f
30010a38:	js     0x30010aa5
30010a3a:	sub    esi,ecx
30010a3c:	iret   
30010a3d:	dec    edi
30010a3e:	add    al,0x49
30010a40:	mov    WORD PTR [edx],ss
30010a42:	sub    ebp,eax
30010a44:	cmp    DWORD PTR [esi-0x67],edi
30010a47:	(bad)  
30010a48:	in     al,dx
30010a49:	dec    edx
30010a4a:	nop
30010a4b:	scas   al,BYTE PTR es:[edi]
30010a4c:	xor    ah,bh
30010a4e:	xchg   DWORD PTR [esp+edi*4-0x4c],eax
30010a52:	inc    ebp
30010a53:	inc    ecx
30010a54:	sub    edi,esp
30010a56:	sar    DWORD PTR [esi-0x6408fc98],cl
30010a5c:	div    ebp
30010a5e:	fisttp WORD PTR [ebp-0x74]
30010a61:	sar    bl,cl
30010a63:	daa    
30010a64:	sti    
30010a65:	loopne 0x30010a24
30010a67:	pushf  
30010a68:	mov    al,ds:0x3d7174c6
30010a6d:	mov    ecx,0xf49f11d1
30010a72:	add    BYTE PTR [eax+0x4f0011c9],ah
30010a78:	push   ebp
30010a79:	mov    ebp,esp
30010a7b:	mov    eax,DWORD PTR [ebp+0x8]
30010a7e:	push   ebx
30010a7f:	push   edi
30010a80:	push   0x2f
30010a82:	pop    ebx
30010a83:	push   0x5c
30010a85:	pop    edi
30010a86:	cmp    bx,WORD PTR [eax]
30010a89:	je     0x300277a8
30010a8f:	add    eax,0x2
30010a92:	mov    ecx,eax
30010a94:	movzx  edx,WORD PTR [eax]
30010a97:	test   dx,dx
30010a9a:	je     0x30010aba
30010a9c:	push   esi
30010a9d:	push   0x2
30010a9f:	pop    esi
30010aa0:	cmp    di,dx
30010aa3:	je     0x30010ac7
30010aa5:	cmp    bx,dx
30010aa8:	je     0x30010ac7
30010aaa:	mov    WORD PTR [ecx],dx
30010aad:	add    ecx,esi
30010aaf:	add    eax,esi
30010ab1:	movzx  edx,WORD PTR [eax]
30010ab4:	test   dx,dx
30010ab7:	jne    0x30010aa0
30010ab9:	pop    esi
30010aba:	xor    eax,eax
30010abc:	pop    edi
30010abd:	mov    WORD PTR [ecx],ax
30010ac0:	mov    eax,ecx
30010ac2:	pop    ebx
30010ac3:	pop    ebp
30010ac4:	ret    0x4
30010ac7:	mov    WORD PTR [ecx],di
30010aca:	add    ecx,esi
30010acc:	add    eax,esi
30010ace:	movzx  edx,WORD PTR [eax]
30010ad1:	cmp    di,dx
30010ad4:	je     0x30010acc
30010ad6:	cmp    bx,dx
30010ad9:	jne    0x30010ab1
30010adb:	jmp    0x30010acc
30010add:	push   esi
30010ade:	push   edi
30010adf:	mov    esi,ecx
30010ae1:	xor    edi,edi
30010ae3:	cmp    DWORD PTR [esi+0x8],edi
30010ae6:	jbe    0x30010b00
30010ae8:	mov    ecx,DWORD PTR [esi]
30010aea:	test   ecx,ecx
30010aec:	je     0x3002369b
30010af2:	mov    eax,DWORD PTR [ecx]
30010af4:	push   ecx
30010af5:	mov    ecx,esi
30010af7:	mov    DWORD PTR [esi],eax
30010af9:	call   0x30012ac0
30010afe:	jmp    0x30010ae3
30010b00:	mov    ecx,DWORD PTR [esi+0xc]
30010b03:	mov    DWORD PTR [esi],edi
30010b05:	mov    DWORD PTR [esi+0x4],edi
30010b08:	mov    DWORD PTR [esi+0x10],edi
30010b0b:	test   ecx,ecx
30010b0d:	jne    0x300122ef
30010b13:	pop    edi
30010b14:	pop    esi
30010b15:	ret    
30010b16:	push   ebp
30010b17:	mov    ebp,esp
30010b19:	mov    edx,DWORD PTR [ebp+0x8]
30010b1c:	push   esi
30010b1d:	mov    esi,ecx
30010b1f:	test   edx,edx
30010b21:	js     0x300211bc
30010b27:	mov    eax,DWORD PTR [esi]
30010b29:	xor    ecx,ecx
30010b2b:	inc    ecx
30010b2c:	sub    ecx,DWORD PTR [eax-0x4]
30010b2f:	mov    eax,DWORD PTR [eax-0x8]
30010b32:	sub    eax,edx
30010b34:	or     ecx,eax
30010b36:	jge    0x30010b40
30010b38:	push   edx
30010b39:	mov    ecx,esi
30010b3b:	call   0x30011855
30010b40:	mov    eax,DWORD PTR [esi]
30010b42:	pop    esi
30010b43:	pop    ebp
30010b44:	ret    0x4
30010b47:	push   ebp
30010b48:	mov    ebp,esp
30010b4a:	push   ebx
30010b4b:	push   esi
30010b4c:	xor    esi,esi
30010b4e:	push   edi
30010b4f:	mov    ebx,ecx
30010b51:	cmp    DWORD PTR [ebp+0x8],esi
30010b54:	je     0x30010b9a
30010b56:	push   esi
30010b57:	push   esi
30010b58:	push   esi
30010b59:	push   esi
30010b5a:	push   0xffffffff
30010b5c:	push   DWORD PTR [ebp+0x8]
30010b5f:	push   esi
30010b60:	push   0x3
30010b62:	call   DWORD PTR ds:0x30045214
30010b68:	lea    edi,[eax-0x1]
30010b6b:	mov    ecx,ebx
30010b6d:	test   edi,edi
30010b6f:	jle    0x30010b9e
30010b71:	push   edi
30010b72:	call   0x30010b16
30010b77:	push   esi
30010b78:	push   esi
30010b79:	push   edi
30010b7a:	push   eax
30010b7b:	push   0xffffffff
30010b7d:	push   DWORD PTR [ebp+0x8]
30010b80:	push   esi
30010b81:	push   0x3
30010b83:	call   DWORD PTR ds:0x30045214
30010b89:	push   edi
30010b8a:	mov    ecx,ebx
30010b8c:	call   0x3000ec9f
30010b91:	pop    edi
30010b92:	pop    esi
30010b93:	mov    eax,ebx
30010b95:	pop    ebx
30010b96:	pop    ebp
30010b97:	ret    0x4
30010b9a:	mov    edi,esi
30010b9c:	jmp    0x30010b6b
30010b9e:	call   0x300323a6
30010ba3:	jmp    0x30010b91
30010ba5:	push   0x20
30010ba7:	mov    eax,0x30040810
30010bac:	call   0x3000116a
30010bb1:	mov    esi,ecx
30010bb3:	push   ecx
30010bb4:	lea    ecx,[ebp-0x2c]
30010bb7:	call   0x3000ec59
30010bbc:	and    DWORD PTR [ebp-0x4],0x0
30010bc0:	mov    eax,DWORD PTR [ebp+0x8]
30010bc3:	push   DWORD PTR [ebp+0xc]
30010bc6:	mov    DWORD PTR [ebp-0x2c],eax
30010bc9:	mov    al,BYTE PTR [ebp+0x18]
30010bcc:	lea    ecx,[ebp-0x20]
30010bcf:	mov    DWORD PTR [ebp-0x28],0x80000001
30010bd6:	mov    BYTE PTR [ebp-0x24],al
30010bd9:	call   0x30010b47
30010bde:	push   DWORD PTR [ebp+0x14]
30010be1:	lea    ecx,[ebp-0x1c]
30010be4:	call   0x30010b47
30010be9:	push   DWORD PTR [ebp+0xc]
30010bec:	call   0x300042e4
30010bf1:	pop    ecx
30010bf2:	push   eax
30010bf3:	push   DWORD PTR [ebp+0xc]
30010bf6:	lea    ecx,[ebp-0x18]
30010bf9:	call   0x3000416f
30010bfe:	push   DWORD PTR [ebp+0x14]
30010c01:	call   0x300042e4
30010c06:	pop    ecx
30010c07:	push   eax
30010c08:	push   DWORD PTR [ebp+0x14]
30010c0b:	lea    ecx,[ebp-0x14]
30010c0e:	call   0x3000416f
30010c13:	mov    ecx,DWORD PTR [esi]
30010c15:	lea    eax,[ebp-0x2c]
30010c18:	push   eax
30010c19:	call   0x300111e5
30010c1e:	lea    ecx,[ebp-0x2c]
30010c21:	call   0x3001506d
30010c26:	xor    eax,eax
30010c28:	call   0x3000119d
30010c2d:	ret    0x18
30010c30:	push   0x18
30010c32:	mov    eax,0x3003f00c
30010c37:	call   0x3000116a
30010c3c:	mov    ebx,ecx
30010c3e:	mov    esi,0x3004306c
30010c43:	push   esi
30010c44:	lea    ecx,[ebp-0x18]
30010c47:	call   0x30004256
30010c4c:	and    DWORD PTR [ebp-0x4],0x0
30010c50:	push   esi
30010c51:	lea    ecx,[ebp-0x14]
30010c54:	call   0x30004256
30010c59:	xor    edi,edi
30010c5b:	push   esi
30010c5c:	lea    ecx,[ebp-0x10]
30010c5f:	mov    BYTE PTR [ebp-0x4],0x1
30010c63:	mov    DWORD PTR [ebp-0x1c],edi
30010c66:	call   0x30004256
30010c6b:	lea    ecx,[ebp-0x20]
30010c6e:	push   ecx
30010c6f:	lea    ecx,[ebp-0x18]
30010c72:	mov    BYTE PTR [ebp-0x4],0x2
30010c76:	mov    eax,DWORD PTR [ebx]
30010c78:	push   ecx
30010c79:	mov    ecx,ebx
30010c7b:	call   DWORD PTR [eax+0xc]
30010c7e:	mov    eax,DWORD PTR [ebx]
30010c80:	lea    ecx,[ebp-0x24]
30010c83:	push   ecx
30010c84:	lea    ecx,[ebp-0x14]
30010c87:	push   ecx
30010c88:	mov    ecx,ebx
30010c8a:	call   DWORD PTR [eax+0x20]
30010c8d:	mov    eax,DWORD PTR [ebx]
30010c8f:	mov    ecx,ebx
30010c91:	call   DWORD PTR [eax+0x44]
30010c94:	test   al,al
30010c96:	jne    0x3001fafc
30010c9c:	mov    esi,DWORD PTR [ebp-0x10]
30010c9f:	cmp    DWORD PTR [ebp-0x20],0x0
30010ca3:	push   ecx
30010ca4:	setne  al
30010ca7:	movzx  eax,al
30010caa:	push   eax
30010cab:	push   DWORD PTR [ebp-0x18]
30010cae:	push   ecx
30010caf:	push   DWORD PTR [ebp-0x14]
30010cb2:	mov    ecx,DWORD PTR [ebx+0xa0]
30010cb8:	push   0x80000002
30010cbd:	call   0x30010ba5
30010cc2:	mov    eax,DWORD PTR [ebx]
30010cc4:	mov    ecx,ebx
30010cc6:	call   DWORD PTR [eax+0x44]
30010cc9:	test   al,al
30010ccb:	jne    0x3001fb45
30010cd1:	cmp    DWORD PTR [ebp-0x20],0x0
30010cd5:	push   ecx
30010cd6:	setne  al
30010cd9:	movzx  eax,al
30010cdc:	push   eax
30010cdd:	push   DWORD PTR [ebp-0x18]
30010ce0:	push   ecx
30010ce1:	push   DWORD PTR [ebx+0xa4]
30010ce7:	mov    ecx,DWORD PTR [ebx+0xa0]
30010ced:	push   0x80000002
30010cf2:	call   0x30010ba5
30010cf7:	push   DWORD PTR [ebx+0xa4]
30010cfd:	lea    ecx,[ebp-0x14]
30010d00:	call   0x300091ce
30010d05:	test   eax,eax
30010d07:	jne    0x3001fb8c
30010d0d:	lea    ecx,[esi-0x10]
30010d10:	call   0x30004017
30010d15:	mov    ecx,DWORD PTR [ebp-0x14]
30010d18:	lea    ecx,[ecx-0x10]
30010d1b:	call   0x30004017
30010d20:	mov    ecx,DWORD PTR [ebp-0x18]
30010d23:	lea    ecx,[ecx-0x10]
30010d26:	call   0x30004017
30010d2b:	call   0x3000119d
30010d30:	ret    
30010d31:	push   ebp
30010d32:	mov    ebp,esp
30010d34:	mov    eax,DWORD PTR [ebp+0x8]
30010d37:	push   ebx
30010d38:	push   esi
30010d39:	mov    esi,DWORD PTR [eax]
30010d3b:	mov    ebx,ecx
30010d3d:	mov    ecx,DWORD PTR [esi-0x10]
30010d40:	push   edi
30010d41:	mov    eax,DWORD PTR [ecx]
30010d43:	call   DWORD PTR [eax+0x10]
30010d46:	lea    edx,[esi-0x4]
30010d49:	mov    ecx,eax
30010d4b:	cmp    DWORD PTR [edx],0x0
30010d4e:	jl     0x30010d6d
30010d50:	cmp    ecx,DWORD PTR [esi-0x10]
30010d53:	jne    0x30010d6d
30010d55:	xor    eax,eax
30010d57:	lea    edi,[esi-0x10]
30010d5a:	inc    eax
30010d5b:	lock xadd DWORD PTR [edx],eax
30010d5f:	lea    eax,[edi+0x10]
30010d62:	pop    edi
30010d63:	mov    DWORD PTR [ebx],eax
30010d65:	pop    esi
30010d66:	mov    eax,ebx
30010d68:	pop    ebx
30010d69:	pop    ebp
30010d6a:	ret    0x4
30010d6d:	mov    eax,DWORD PTR [ecx]
30010d6f:	push   0x1
30010d71:	push   DWORD PTR [esi-0xc]
30010d74:	call   DWORD PTR [eax]
30010d76:	jmp    0x30021191
30010d7b:	push   0x4
30010d7d:	mov    eax,0x30040911
30010d82:	call   0x3000116a
30010d87:	mov    edi,ecx
30010d89:	mov    esi,DWORD PTR [ebp+0x8]
30010d8c:	lea    ecx,[edi+0xc]
30010d8f:	mov    eax,DWORD PTR [esi]
30010d91:	mov    DWORD PTR [edi],eax
30010d93:	mov    eax,DWORD PTR [esi+0x4]
30010d96:	mov    DWORD PTR [edi+0x4],eax
30010d99:	mov    al,BYTE PTR [esi+0x8]
30010d9c:	mov    BYTE PTR [edi+0x8],al
30010d9f:	lea    eax,[esi+0xc]
30010da2:	push   eax
30010da3:	mov    DWORD PTR [ebp-0x10],edi
30010da6:	call   0x30010d31
30010dab:	and    DWORD PTR [ebp-0x4],0x0
30010daf:	lea    eax,[esi+0x10]
30010db2:	push   eax
30010db3:	lea    ecx,[edi+0x10]
30010db6:	call   0x30010d31
30010dbb:	mov    BYTE PTR [ebp-0x4],0x1
30010dbf:	mov    eax,DWORD PTR [esi+0x14]
30010dc2:	sub    eax,0x10
30010dc5:	push   eax
30010dc6:	call   0x30004306
30010dcb:	add    eax,0x10
30010dce:	mov    DWORD PTR [edi+0x14],eax
30010dd1:	mov    BYTE PTR [ebp-0x4],0x2
30010dd5:	mov    eax,DWORD PTR [esi+0x18]
30010dd8:	sub    eax,0x10
30010ddb:	push   eax
30010ddc:	call   0x30004306
30010de1:	add    eax,0x10
30010de4:	mov    DWORD PTR [edi+0x18],eax
30010de7:	mov    al,BYTE PTR [esi+0x1c]
30010dea:	pop    ecx
30010deb:	mov    BYTE PTR [edi+0x1c],al
30010dee:	pop    ecx
30010def:	mov    eax,edi
30010df1:	call   0x3000119d
30010df6:	ret    0x4
30010df9:	push   ebp
30010dfa:	mov    ebp,esp
30010dfc:	sub    esp,0x620
30010e02:	mov    eax,ds:0x30043050
30010e07:	xor    eax,ebp
30010e09:	mov    DWORD PTR [ebp-0x4],eax
30010e0c:	push   ebx
30010e0d:	push   esi
30010e0e:	push   edi
30010e0f:	xor    eax,eax
30010e11:	mov    esi,0x206
30010e16:	push   esi
30010e17:	mov    WORD PTR [ebp-0x20c],ax
30010e1e:	xor    edi,edi
30010e20:	lea    eax,[ebp-0x20a]
30010e26:	push   edi
30010e27:	push   eax
30010e28:	call   0x300011b1
30010e2d:	xor    eax,eax
30010e2f:	push   esi
30010e30:	mov    WORD PTR [ebp-0x61c],ax
30010e37:	lea    eax,[ebp-0x61a]
30010e3d:	push   edi
30010e3e:	push   eax
30010e3f:	call   0x300011b1
30010e44:	add    esp,0x18
30010e47:	lea    eax,[ebp-0x20c]
30010e4d:	push   DWORD PTR [ebp+0x8]
30010e50:	mov    bl,0x1
30010e52:	push   0x104
30010e57:	push   eax
30010e58:	mov    DWORD PTR [ebp-0x620],edi
30010e5e:	call   0x30004c1e
30010e63:	test   eax,eax
30010e65:	js     0x300283c9
30010e6b:	lea    eax,[ebp-0x20c]
30010e71:	push   eax
30010e72:	call   DWORD PTR ds:0x30045614
30010e78:	mov    edi,DWORD PTR ds:0x300451ec
30010e7e:	lea    eax,[ebp-0x20c]
30010e84:	push   eax
30010e85:	call   edi
30010e87:	cmp    eax,0xffffffff
30010e8a:	je     0x30028470
30010e90:	test   al,0x10
30010e92:	je     0x300283d0
30010e98:	xor    eax,eax
30010e9a:	inc    eax
30010e9b:	mov    ecx,DWORD PTR [ebp-0x4]
30010e9e:	pop    edi
30010e9f:	pop    esi
30010ea0:	xor    ecx,ebp
30010ea2:	pop    ebx
30010ea3:	call   0x3000115c
30010ea8:	leave  
30010ea9:	ret    0x4
30010eac:	push   0x4
30010eae:	mov    eax,0x3003faa0
30010eb3:	call   0x3000116a
30010eb8:	mov    edi,ecx
30010eba:	xor    ebx,ebx
30010ebc:	cmp    DWORD PTR [edi+0x5fc],ebx
30010ec2:	je     0x30020162
30010ec8:	mov    eax,DWORD PTR [ebp+0x8]
30010ecb:	sub    eax,0x1a
30010ece:	je     0x3000eda9
30010ed4:	push   0x2
30010ed6:	pop    esi
30010ed7:	sub    eax,esi
30010ed9:	je     0x3000edb1
30010edf:	sub    eax,0x7
30010ee2:	jne    0x30020162
30010ee8:	push   0x3004306c
30010eed:	lea    ecx,[ebp-0x10]
30010ef0:	call   0x30004256
30010ef5:	mov    DWORD PTR [ebp-0x4],ebx
30010ef8:	mov    ecx,DWORD PTR [edi+0x5fc]
30010efe:	lea    edx,[ebp-0x10]
30010f01:	mov    eax,DWORD PTR [ecx]
30010f03:	push   edx
30010f04:	push   esi
30010f05:	call   DWORD PTR [eax+0x4]
30010f08:	test   eax,eax
30010f0a:	js     0x30010f63
30010f0c:	push   DWORD PTR [ebp-0x10]
30010f0f:	lea    ecx,[ebp+0x8]
30010f12:	call   0x3000437e
30010f17:	push   0x104
30010f1c:	lea    ecx,[ebp+0x8]
30010f1f:	mov    BYTE PTR [ebp-0x4],0x1
30010f23:	call   0x30004286
30010f28:	push   eax
30010f29:	call   DWORD PTR ds:0x30045630
30010f2f:	push   0xffffffff
30010f31:	lea    ecx,[ebp+0x8]
30010f34:	call   0x30006c8c
30010f39:	push   DWORD PTR [ebp+0x8]
30010f3c:	call   0x30010df9
30010f41:	mov    esi,DWORD PTR [ebp+0xc]
30010f44:	test   eax,eax
30010f46:	setne  bl
30010f49:	test   esi,esi
30010f4b:	je     0x30010f58
30010f4d:	push   DWORD PTR [ebp+0x8]
30010f50:	call   DWORD PTR ds:0x300454dc
30010f56:	mov    DWORD PTR [esi],eax
30010f58:	mov    ecx,DWORD PTR [ebp+0x8]
30010f5b:	add    ecx,0xfffffff0
30010f5e:	call   0x30004017
30010f63:	mov    ecx,DWORD PTR [ebp-0x10]
30010f66:	add    ecx,0xfffffff0
30010f69:	call   0x30004017
30010f6e:	mov    al,bl
30010f70:	call   0x3000119d
30010f75:	ret    0x8
30010f78:	push   0x4
30010f7a:	mov    eax,0x3003fc84
30010f7f:	call   0x3000116a
30010f84:	mov    esi,DWORD PTR ds:0x300435cc
30010f8a:	xor    ebx,ebx
30010f8c:	cmp    BYTE PTR [ebp+0x8],bl
30010f8f:	jne    0x30010fa3
30010f91:	push   ebx
30010f92:	push   0x23
30010f94:	mov    ecx,esi
30010f96:	call   0x30010eac
30010f9b:	test   al,al
30010f9d:	je     0x30020169
30010fa3:	mov    DWORD PTR [ebp+0x8],ebx
30010fa6:	lea    eax,[ebp+0x8]
30010fa9:	push   eax
30010faa:	push   0x1a
30010fac:	mov    ecx,esi
30010fae:	mov    DWORD PTR [ebp-0x4],ebx
30010fb1:	call   0x30010eac
30010fb6:	push   DWORD PTR [ebp+0x8]
30010fb9:	test   al,al
30010fbb:	je     0x30020181
30010fc1:	call   DWORD PTR ds:0x300454ec
30010fc7:	push   eax
30010fc8:	push   DWORD PTR [ebp+0x8]
30010fcb:	lea    eax,[esi+0x1ec]
30010fd1:	push   0x104
30010fd6:	push   eax
30010fd7:	call   DWORD PTR ds:0x300453b8
30010fdd:	add    esp,0x10
30010fe0:	push   DWORD PTR [ebp+0x8]
30010fe3:	call   DWORD PTR ds:0x300454e8
30010fe9:	mov    DWORD PTR [ebp+0x8],ebx
30010fec:	lea    eax,[ebp+0x8]
30010fef:	push   eax
30010ff0:	push   0x1c
30010ff2:	mov    ecx,esi
30010ff4:	mov    DWORD PTR [ebp-0x4],0x1
30010ffb:	call   0x30010eac
30011000:	test   al,al
30011002:	je     0x30011028
30011004:	push   DWORD PTR [ebp+0x8]
30011007:	call   DWORD PTR ds:0x300454ec
3001100d:	push   eax
3001100e:	push   DWORD PTR [ebp+0x8]
30011011:	lea    eax,[esi+0x3f4]
30011017:	push   0x104
3001101c:	push   eax
3001101d:	call   DWORD PTR ds:0x300453b8
30011023:	add    esp,0x10
30011026:	mov    bl,0x1
30011028:	push   DWORD PTR [ebp+0x8]
3001102b:	call   DWORD PTR ds:0x300454e8
30011031:	mov    al,bl
30011033:	call   0x3000119d
30011038:	ret    0x4
3001103b:	push   ebp
3001103c:	mov    ebp,esp
3001103e:	sub    esp,0x48
30011041:	push   ebx
30011042:	mov    ebx,DWORD PTR [ebp+0x8]
30011045:	push   esi
30011046:	push   edi
30011047:	lea    esi,[ebx-0x7ff80000]
3001104d:	cmp    ebx,0x7ff80000
30011053:	ja     0x3001105a
30011055:	mov    esi,0x10000
3001105a:	mov    DWORD PTR [ebp-0x8],esi
3001105d:	lea    edi,[ebx+0x7ff80000]
30011063:	cmp    ebx,0x80000000
30011069:	jae    0x30027323
3001106f:	mov    edx,DWORD PTR ds:0x300436cc
30011075:	mov    eax,ds:0x30043688
3001107a:	mov    DWORD PTR [ebp-0x4],edi
3001107d:	test   edx,edx
3001107f:	je     0x300110bf
30011081:	mov    ecx,DWORD PTR [edx+0x8]
30011084:	test   ecx,ecx
30011086:	je     0x300110c7
30011088:	cmp    ecx,esi
3001108a:	jb     0x300110c7
3001108c:	cmp    ecx,edi
3001108e:	ja     0x300110c7
30011090:	mov    esi,DWORD PTR [edx+0x8]
30011093:	cmp    esi,DWORD PTR [ebp-0x8]
30011096:	jb     0x300111c8
3001109c:	cmp    esi,edi
3001109e:	ja     0x300111c8
300110a4:	mov    ecx,DWORD PTR [esi+0x18]
300110a7:	mov    DWORD PTR [edx+0x8],ecx
300110aa:	push   0x8
300110ac:	mov    eax,0xcccccccc
300110b1:	pop    ecx
300110b2:	mov    edi,esi
300110b4:	rep stos DWORD PTR es:[edi],eax
300110b6:	mov    eax,esi
300110b8:	pop    edi
300110b9:	pop    esi
300110ba:	pop    ebx
300110bb:	leave  
300110bc:	ret    0x4
300110bf:	test   eax,eax
300110c1:	jne    0x3002732d
300110c7:	mov    edx,eax
300110c9:	test   eax,eax
300110cb:	mov    DWORD PTR ds:0x300436cc,edx
300110d1:	jne    0x3002733a
300110d7:	movzx  eax,bx
300110da:	sub    ebx,eax
300110dc:	xor    eax,eax
300110de:	mov    DWORD PTR [ebp-0x10],eax
300110e1:	mov    DWORD PTR [ebp-0xc],eax
300110e4:	lea    eax,[ebp-0x10]
300110e7:	push   eax
300110e8:	call   DWORD PTR ds:0x300451a0
300110ee:	call   DWORD PTR ds:0x30045260
300110f4:	mov    esi,eax
300110f6:	call   DWORD PTR ds:0x30045218
300110fc:	xor    esi,eax
300110fe:	call   DWORD PTR ds:0x300451a4
30011104:	mov    ecx,DWORD PTR [ebp-0xc]
30011107:	xor    esi,eax
30011109:	mov    eax,DWORD PTR [ebp-0x8]
3001110c:	xor    ecx,esi
3001110e:	xor    ecx,DWORD PTR [ebp-0x10]
30011111:	add    eax,0x10000
30011116:	and    ecx,0xff
3001111c:	shl    ecx,0x10
3001111f:	mov    DWORD PTR [ebp+0x8],ecx
30011122:	add    eax,ecx
30011124:	jmp    0x30011177
30011126:	lea    esi,[eax+0xffff]
3001112c:	and    esi,0xffff0000
30011132:	lea    eax,[esi-0x50000000]
30011138:	cmp    eax,0x30000000
3001113d:	jbe    0x3002735b
30011143:	push   0x7
30011145:	pop    ecx
30011146:	xor    eax,eax
30011148:	lea    edi,[ebp-0x48]
3001114b:	rep stos DWORD PTR es:[edi],eax
3001114d:	push   0x1c
3001114f:	lea    eax,[ebp-0x48]
30011152:	push   eax
30011153:	push   esi
30011154:	call   DWORD PTR ds:0x30045114
3001115a:	test   eax,eax
3001115c:	je     0x30027366
30011162:	mov    edi,0x10000
30011167:	cmp    DWORD PTR [ebp-0x38],edi
3001116a:	je     0x30011180
3001116c:	mov    ecx,DWORD PTR [ebp-0x3c]
3001116f:	mov    eax,DWORD PTR [ebp-0x48]
30011172:	add    eax,ecx
30011174:	mov    ecx,DWORD PTR [ebp+0x8]
30011177:	cmp    eax,ebx
30011179:	jb     0x30011126
3001117b:	jmp    0x30027369
30011180:	mov    ecx,DWORD PTR [ebp-0x3c]
30011183:	cmp    ecx,edi
30011185:	jb     0x3001116f
30011187:	push   0x40
30011189:	push   0x3000
3001118e:	push   edi
3001118f:	push   esi
30011190:	call   DWORD PTR ds:0x3004511c
30011196:	mov    edx,eax
30011198:	mov    DWORD PTR ds:0x300436cc,edx
3001119e:	test   edx,edx
300111a0:	je     0x3001116c
300111a2:	mov    eax,ds:0x30043688
300111a7:	xor    esi,esi
300111a9:	mov    DWORD PTR [edx+0x4],eax
300111ac:	mov    DWORD PTR [edx],0x52727464
300111b2:	mov    DWORD PTR [edx+0x8],esi
300111b5:	mov    DWORD PTR ds:0x30043688,edx
300111bb:	lea    eax,[edx+0xffe0]
300111c1:	mov    ecx,0x7fd
300111c6:	jmp    0x300111cf
300111c8:	xor    eax,eax
300111ca:	jmp    0x300110b8
300111cf:	mov    DWORD PTR [eax+0x18],esi
300111d2:	mov    esi,eax
300111d4:	sub    eax,0x20
300111d7:	dec    ecx
300111d8:	jne    0x300111cf
300111da:	mov    edi,DWORD PTR [ebp-0x4]
300111dd:	mov    DWORD PTR [edx+0x8],esi
300111e0:	jmp    0x30011090
300111e5:	push   0x0
300111e7:	mov    eax,0x30040960
300111ec:	call   0x3000116a
300111f1:	mov    esi,ecx
300111f3:	mov    edi,DWORD PTR [esi+0x4]
300111f6:	mov    ecx,DWORD PTR [esi+0x8]
300111f9:	cmp    edi,ecx
300111fb:	jne    0x30011231
300111fd:	mov    edx,DWORD PTR [esi]
300111ff:	cmp    DWORD PTR [ebp+0x8],edx
30011202:	jb     0x30011214
30011204:	mov    eax,ecx
30011206:	shl    eax,0x5
30011209:	add    eax,edx
3001120b:	cmp    DWORD PTR [ebp+0x8],eax
3001120e:	jb     0x30021174
30011214:	test   ecx,ecx
30011216:	jne    0x30011258
30011218:	xor    edi,edi
3001121a:	inc    edi
3001121b:	push   0x20
3001121d:	push   edi
3001121e:	push   edx
3001121f:	call   DWORD PTR ds:0x300452e8
30011225:	add    esp,0xc
30011228:	test   eax,eax
3001122a:	je     0x30011264
3001122c:	mov    DWORD PTR [esi+0x8],edi
3001122f:	mov    DWORD PTR [esi],eax
30011231:	mov    ecx,DWORD PTR [esi+0x4]
30011234:	shl    ecx,0x5
30011237:	add    ecx,DWORD PTR [esi]
30011239:	mov    DWORD PTR [ebp-0x4],0x0
30011240:	je     0x3001124a
30011242:	push   DWORD PTR [ebp+0x8]
30011245:	call   0x30010d7b
3001124a:	inc    DWORD PTR [esi+0x4]
3001124d:	xor    eax,eax
3001124f:	inc    eax
30011250:	call   0x3000119d
30011255:	ret    0x4
30011258:	add    edi,edi
3001125a:	js     0x30011264
3001125c:	cmp    edi,0x3ffffff
30011262:	jbe    0x3001121b
30011264:	xor    eax,eax
30011266:	jmp    0x30011250
30011268:	push   ebp
30011269:	mov    ebp,esp
3001126b:	sub    esp,0x20
3001126e:	push   esi
3001126f:	mov    esi,ecx
30011271:	mov    eax,DWORD PTR [esi+0x10]
30011274:	shr    eax,0x2
30011277:	test   al,0x1
30011279:	jne    0x3001128b
3001127b:	mov    ecx,DWORD PTR [esi+0x4]
3001127e:	mov    eax,DWORD PTR [ecx]
30011280:	call   DWORD PTR [eax+0x20]
30011283:	test   al,al
30011285:	jne    0x300137f7
3001128b:	xor    eax,eax
3001128d:	pop    esi
3001128e:	leave  
3001128f:	ret    0x4
30011292:	test   edi,edi
30011294:	jns    0x30013845
3001129a:	jmp    0x300138fa
3001129f:	mov    al,BYTE PTR [ecx+0x69]
300112a2:	ret    
300112a3:	push   ebp
300112a4:	mov    ebp,esp
300112a6:	push   edi
300112a7:	mov    edi,DWORD PTR [ebp+0xc]
300112aa:	cmp    edi,0x7ffffffe
300112b0:	ja     0x300257f9
300112b6:	push   ebx
300112b7:	mov    ebx,DWORD PTR [ebp+0x8]
300112ba:	push   esi
300112bb:	xor    edx,edx
300112bd:	mov    esi,0x104
300112c2:	sub    ebx,ecx
300112c4:	lea    eax,[edi-0x104]
300112ca:	add    eax,esi
300112cc:	je     0x300112e0
300112ce:	movzx  eax,WORD PTR [ebx+ecx*1]
300112d2:	test   ax,ax
300112d5:	je     0x300112e0
300112d7:	mov    WORD PTR [ecx],ax
300112da:	add    ecx,0x2
300112dd:	dec    esi
300112de:	jne    0x300112c4
300112e0:	test   esi,esi
300112e2:	pop    esi
300112e3:	pop    ebx
300112e4:	je     0x30025803
300112ea:	xor    eax,eax
300112ec:	mov    WORD PTR [ecx],ax
300112ef:	mov    eax,edx
300112f1:	pop    edi
300112f2:	pop    ebp
300112f3:	ret    0x8
300112f6:	push   ebp
300112f7:	mov    ebp,esp
300112f9:	push   ecx
300112fa:	push   ecx
300112fb:	and    DWORD PTR [ebp-0x4],0x0
300112ff:	cmp    DWORD PTR [ebp+0x8],0x0
30011303:	push   ebx
30011304:	push   esi
30011305:	push   edi
30011306:	mov    ebx,ecx
30011308:	je     0x30013d71
3001130e:	cmp    DWORD PTR [ebp+0xc],0x0
30011312:	je     0x30013d71
30011318:	mov    edi,DWORD PTR [ebp+0x10]
3001131b:	test   edi,edi
3001131d:	je     0x30013d71
30011323:	cmp    DWORD PTR [ebp+0x1c],0x0
30011327:	je     0x30013d71
3001132d:	push   DWORD PTR [ebp+0xc]
30011330:	lea    ecx,[ebp+0xc]
30011333:	call   0x300089ae
30011338:	lea    esi,[ebx+0x4]
3001133b:	push   eax
3001133c:	mov    ecx,esi
3001133e:	call   0x300014c1
30011343:	lea    ecx,[ebp+0xc]
30011346:	call   0x300051a4
3001134b:	push   DWORD PTR [esi]
3001134d:	call   DWORD PTR ds:0x30045638
30011353:	test   eax,eax
30011355:	je     0x30024ae5
3001135b:	push   DWORD PTR [esi]
3001135d:	call   DWORD PTR ds:0x3004562c
30011363:	test   eax,eax
30011365:	jne    0x30024ae5
3001136b:	mov    ecx,esi
3001136d:	call   0x3000ebd7
30011372:	mov    ecx,eax
30011374:	cmp    ecx,0xffffffff
30011377:	je     0x30024ae5
3001137d:	mov    eax,DWORD PTR [esi]
3001137f:	mov    eax,DWORD PTR [eax-0xc]
30011382:	sub    eax,ecx
30011384:	push   eax
30011385:	push   ecx
30011386:	lea    eax,[ebp+0xc]
30011389:	push   eax
3001138a:	mov    ecx,esi
3001138c:	call   0x30008d6e
30011391:	push   0x300114a8
30011396:	call   0x300042e4
3001139b:	pop    ecx
3001139c:	push   eax
3001139d:	push   0x300114a8
300113a2:	lea    ecx,[ebp+0xc]
300113a5:	call   0x30008b64
300113aa:	lea    ecx,[ebx+0x8]
300113ad:	push   esi
300113ae:	call   0x300014c1
300113b3:	lea    ecx,[ebx+0x8]
300113b6:	call   0x300089c3
300113bb:	test   eax,eax
300113bd:	je     0x30024aef
300113c3:	mov    esi,DWORD PTR [ebp+0xc]
300113c6:	push   esi
300113c7:	lea    ecx,[ebx+0x8]
300113ca:	call   0x3000b940
300113cf:	test   eax,eax
300113d1:	je     0x30024af9
300113d7:	mov    al,BYTE PTR [ebp+0x14]
300113da:	mov    BYTE PTR [ebx+0x10],al
300113dd:	mov    al,BYTE PTR [ebp+0x18]
300113e0:	push   edi
300113e1:	mov    BYTE PTR [ebx+0x11],al
300113e4:	call   0x300042e4
300113e9:	pop    ecx
300113ea:	push   eax
300113eb:	push   edi
300113ec:	mov    ecx,ebx
300113ee:	call   0x3000416f
300113f3:	cmp    BYTE PTR [ebx+0x11],0x0
300113f7:	jne    0x30024b03
300113fd:	lea    eax,[ebp-0x4]
30011400:	push   eax
30011401:	push   DWORD PTR [ebp+0x8]
30011404:	push   0x1c
30011406:	call   0x3000904c
3001140b:	mov    edi,eax
3001140d:	test   edi,edi
3001140f:	js     0x3001148d
30011411:	push   DWORD PTR [ebp-0x4]
30011414:	lea    ecx,[ebp+0x14]
30011417:	call   0x300089ae
3001141c:	lea    edi,[ebx+0xc]
3001141f:	push   eax
30011420:	mov    ecx,edi
30011422:	mov    DWORD PTR [ebp+0x18],edi
30011425:	call   0x300014c1
3001142a:	lea    ecx,[ebp+0x14]
3001142d:	call   0x300051a4
30011432:	push   esi
30011433:	mov    ecx,edi
30011435:	call   0x3000b940
3001143a:	test   eax,eax
3001143c:	je     0x30024af9
30011442:	push   0x30008fc4
30011447:	lea    ecx,[ebp+0x14]
3001144a:	call   0x3000437e
3001144f:	lea    edx,[ebp+0x14]
30011452:	mov    ecx,ebx
30011454:	call   0x3000ebf1
30011459:	lea    ecx,[ebp+0x14]
3001145c:	call   0x300051a4
30011461:	mov    ecx,ebx
30011463:	call   0x300114b8
30011468:	test   al,al
3001146a:	jne    0x30013d16
30011470:	cmp    BYTE PTR ds:0x300430f1,0x0
30011477:	jne    0x30024ba5
3001147d:	mov    eax,DWORD PTR [edi]
3001147f:	mov    ecx,DWORD PTR [ebp+0x1c]
30011482:	push   DWORD PTR [eax-0xc]
30011485:	push   eax
30011486:	call   0x300112a3
3001148b:	mov    edi,eax
3001148d:	lea    ecx,[ebp+0xc]
30011490:	call   0x300051a4
30011495:	push   DWORD PTR [ebp-0x4]
30011498:	call   DWORD PTR ds:0x300454e8
3001149e:	mov    eax,edi
300114a0:	pop    edi
300114a1:	pop    esi
300114a2:	pop    ebx
300114a3:	leave  
300114a4:	ret    0x1c
300114a7:	nop
300114a8:	add    BYTE PTR cs:[ebx+0x0],ah
300114ac:	outs   dx,DWORD PTR ds:[esi]
300114ad:	add    BYTE PTR [esi+0x0],ch
300114b0:	data16 add BYTE PTR [ecx+0x0],ch
300114b4:	add    BYTE PTR [bx+si],al
300114b7:	add    BYTE PTR [ebp-0x75],dl
300114ba:	in     al,dx
300114bb:	sub    esp,0x14
300114be:	push   esi
300114bf:	mov    esi,ecx
300114c1:	push   DWORD PTR [esi+0xc]
300114c4:	call   DWORD PTR ds:0x30045638
300114ca:	test   eax,eax
300114cc:	je     0x3001204e
300114d2:	cmp    BYTE PTR [esi+0x10],0x0
300114d6:	jne    0x3001204e
300114dc:	lea    eax,[ebp-0x8]
300114df:	push   eax
300114e0:	push   ecx
300114e1:	push   ecx
300114e2:	push   DWORD PTR [esi+0xc]
300114e5:	call   0x3001d820
300114ea:	test   al,al
300114ec:	je     0x3001150c
300114ee:	lea    eax,[ebp-0x10]
300114f1:	push   eax
300114f2:	push   ecx
300114f3:	push   ecx
300114f4:	push   DWORD PTR [esi+0x8]
300114f7:	call   0x3001d820
300114fc:	test   al,al
300114fe:	je     0x3001150c
30011500:	mov    eax,DWORD PTR [ebp-0x4]
30011503:	cmp    eax,DWORD PTR [ebp-0xc]
30011506:	jbe    0x30024caa
3001150c:	xor    al,al
3001150e:	pop    esi
3001150f:	leave  
30011510:	ret    
30011511:	mov    DWORD PTR ds:0x300436f0,ecx
30011517:	mov    DWORD PTR ds:0x300436ec,ecx
3001151d:	mov    DWORD PTR ds:0x300436e8,ecx
30011523:	mov    DWORD PTR ds:0x300436e4,ecx
30011529:	mov    DWORD PTR ds:0x300436e0,ecx
3001152f:	mov    DWORD PTR ds:0x300436dc,ecx
30011535:	mov    DWORD PTR ds:0x300436d8,ecx
3001153b:	mov    DWORD PTR ds:0x300436d4,ecx
30011541:	ret    
30011542:	push   ebp
30011543:	mov    ebp,esp
30011545:	push   ecx
30011546:	mov    eax,ecx
30011548:	xor    ecx,ecx
3001154a:	call   0x30011511
3001154f:	push   0x3000e540
30011554:	push   0x104
30011559:	push   0x300436fc
3001155e:	mov    ds:0x300436f8,eax
30011563:	call   0x30004c1e
30011568:	xor    eax,eax
3001156a:	mov    ds:0x30043904,ax
30011570:	lea    eax,[ebp-0x4]
30011573:	push   eax
30011574:	mov    DWORD PTR [ebp-0x4],0x7000
3001157b:	call   DWORD PTR ds:0x30045234
30011581:	push   0x30031ab0
30011586:	call   DWORD PTR ds:0x30045238
3001158c:	push   eax
3001158d:	call   DWORD PTR ds:0x30045190
30011593:	push   0x30031b5c
30011598:	mov    ds:0x300436d0,eax
3001159d:	call   DWORD PTR ds:0x30045338
300115a3:	pop    ecx
300115a4:	leave  
300115a5:	ret    
300115a6:	push   0x4
300115a8:	mov    eax,0x300405c0
300115ad:	call   0x3000116a
300115b2:	mov    eax,ds:0x30043b0c
300115b7:	test   eax,eax
300115b9:	jne    0x300115e3
300115bb:	push   0x3000e58c
300115c0:	call   DWORD PTR ds:0x3004516c
300115c6:	test   eax,eax
300115c8:	je     0x3001162e
300115ca:	push   0x3001163c
300115cf:	push   eax
300115d0:	call   DWORD PTR ds:0x30045178
300115d6:	mov    ds:0x30043b0c,eax
300115db:	test   eax,eax
300115dd:	je     0x300205a5
300115e3:	and    DWORD PTR [ebp-0x10],0x0
300115e7:	and    DWORD PTR [ebp-0x4],0x0
300115eb:	lea    ecx,[ebp-0x10]
300115ee:	push   ecx
300115ef:	push   0x3001164c
300115f4:	push   0x30010108
300115f9:	call   eax
300115fb:	mov    esi,eax
300115fd:	mov    eax,DWORD PTR [ebp-0x10]
30011600:	test   esi,esi
30011602:	js     0x30011618
30011604:	test   eax,eax
30011606:	je     0x30011635
30011608:	mov    ecx,DWORD PTR [eax]
3001160a:	push   0x3000daa9
3001160f:	push   eax
30011610:	call   DWORD PTR [ecx+0x1c]
30011613:	mov    esi,eax
30011615:	mov    eax,DWORD PTR [ebp-0x10]
30011618:	or     DWORD PTR [ebp-0x4],0xffffffff
3001161c:	test   eax,eax
3001161e:	je     0x30011626
30011620:	mov    ecx,DWORD PTR [eax]
30011622:	push   eax
30011623:	call   DWORD PTR [ecx+0x8]
30011626:	mov    eax,esi
30011628:	call   0x3000119d
3001162d:	ret    
3001162e:	mov    eax,ds:0x30043b0c
30011633:	jmp    0x300115db
30011635:	mov    esi,0x8000ffff
3001163a:	jmp    0x30011618
3001163c:	inc    ebx
3001163d:	jb     0x300116a4
3001163f:	popa   
30011640:	je     0x300116a7
30011642:	dec    ecx
30011643:	outs   dx,BYTE PTR ds:[esi]
30011644:	je     0x300116ab
30011646:	jb     0x300116ae
30011648:	popa   
30011649:	arpl   WORD PTR [ebp+0x0],sp
3001164c:	sahf   
3001164d:	(bad)  [edx]
3001164f:	shl    DWORD PTR [ebx-0x7dbeda47],cl
30011655:	pop    es
30011656:	mov    eax,ds:0x32f58448
3001165b:	push   ss
3001165c:	push   0x8
3001165e:	push   0x30011680
30011663:	call   0x30008a54
30011668:	and    DWORD PTR [ebp-0x4],0x0
3001166c:	call   0x300115a6
30011671:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30011678:	call   0x30008a99
3001167d:	ret    
3001167e:	nop
3001167f:	nop
30011680:	(bad)  
30011681:	(bad)  
30011682:	(bad)  
30011683:	inc    DWORD PTR [eax]
30011685:	add    BYTE PTR [eax],al
30011687:	add    al,bl
30011689:	(bad)  
3001168a:	(bad)  
3001168b:	inc    DWORD PTR [eax]
3001168d:	add    BYTE PTR [eax],al
3001168f:	add    dh,bh
30011691:	(bad)  
30011692:	(bad)  
30011693:	jmp    DWORD PTR [esi+0x6]
30011696:	add    dh,BYTE PTR [eax]
30011698:	jns    0x300116a0
3001169a:	add    dh,BYTE PTR [eax]
3001169c:	push   ebp
3001169d:	mov    ebp,esp
3001169f:	mov    eax,DWORD PTR [ebp+0xc]
300116a2:	push   esi
300116a3:	xor    esi,esi
300116a5:	test   eax,eax
300116a7:	je     0x300116e5
300116a9:	cmp    eax,0x7fffffff
300116ae:	ja     0x300116e5
300116b0:	test   esi,esi
300116b2:	js     0x300116f6
300116b4:	push   ebx
300116b5:	mov    ebx,DWORD PTR [ebp+0x8]
300116b8:	push   edi
300116b9:	lea    edi,[eax-0x1]
300116bc:	lea    eax,[ebp+0x14]
300116bf:	push   eax
300116c0:	push   DWORD PTR [ebp+0x10]
300116c3:	xor    esi,esi
300116c5:	push   edi
300116c6:	push   ebx
300116c7:	call   DWORD PTR ds:0x30045330
300116cd:	add    esp,0x10
300116d0:	test   eax,eax
300116d2:	js     0x300116ec
300116d4:	cmp    eax,edi
300116d6:	ja     0x300116ec
300116d8:	je     0x30020579
300116de:	pop    edi
300116df:	pop    ebx
300116e0:	mov    eax,esi
300116e2:	pop    esi
300116e3:	pop    ebp
300116e4:	ret    
300116e5:	mov    esi,0x80070057
300116ea:	jmp    0x300116b0
300116ec:	mov    esi,0x8007007a
300116f1:	jmp    0x30020579
300116f6:	test   eax,eax
300116f8:	jne    0x30020584
300116fe:	jmp    0x300116e0
30011700:	push   0xf8
30011705:	mov    eax,0x30040b92
3001170a:	call   0x300045c8
3001170f:	mov    esi,ecx
30011711:	mov    DWORD PTR [ebp-0xa8],esi
30011717:	mov    eax,DWORD PTR [ebp+0x10]
3001171a:	mov    DWORD PTR [ebp-0x94],eax
30011720:	test   esi,esi
30011722:	je     0x300117fc
30011728:	test   eax,eax
3001172a:	je     0x300117fc
30011730:	push   esi
30011731:	lea    ecx,[ebp-0x90]
30011737:	call   0x30001488
3001173c:	xor    ebx,ebx
3001173e:	mov    DWORD PTR [ebp-0x4],ebx
30011741:	mov    DWORD PTR [ebp-0x88],ebx
30011747:	mov    DWORD PTR [ebp-0x8c],ebx
3001174d:	lea    eax,[ebp-0x9c]
30011753:	push   eax
30011754:	push   ebx
30011755:	mov    BYTE PTR [ebp-0x4],0x1
30011759:	push   ebx
3001175a:	mov    edx,0x3000b930
3001175f:	mov    ecx,esi
30011761:	mov    DWORD PTR [ebp-0x9c],ebx
30011767:	call   0x3000bcdc
3001176c:	cmp    DWORD PTR [ebp-0x9c],ebx
30011772:	je     0x30021680
30011778:	push   DWORD PTR [ebp-0x9c]
3001177e:	lea    eax,[ebp-0x7c]
30011781:	push   0x30011804
30011786:	push   0x32
30011788:	push   eax
30011789:	call   0x3001169c
3001178e:	add    esp,0x10
30011791:	lea    eax,[ebp-0x7c]
30011794:	push   eax
30011795:	lea    ecx,[ebp-0x90]
3001179b:	call   0x300062d8
300117a0:	test   eax,eax
300117a2:	js     0x30021695
300117a8:	mov    edi,DWORD PTR [ebp-0x90]
300117ae:	test   edi,edi
300117b0:	je     0x3002169b
300117b6:	mov    eax,DWORD PTR [ebp-0x94]
300117bc:	push   0x20019
300117c1:	push   edi
300117c2:	push   0x80000002
300117c7:	lea    ecx,[ebp-0x8c]
300117cd:	mov    DWORD PTR [eax],ebx
300117cf:	call   0x300061a4
300117d4:	test   eax,eax
300117d6:	jns    0x300216aa
300117dc:	lea    ecx,[ebp-0x8c]
300117e2:	call   0x300014b2
300117e7:	push   edi
300117e8:	call   DWORD PTR ds:0x300454e8
300117ee:	mov    eax,DWORD PTR [ebp-0x88]
300117f4:	call   0x300045fe
300117f9:	ret    0xc
300117fc:	mov    eax,0x80070057
30011801:	jmp    0x300117f4
30011803:	nop
30011804:	pop    esp
30011805:	add    BYTE PTR [ebx+0x0],dl
30011808:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
3001180d:	add    BYTE PTR [eax+0x0],dh
30011810:	pop    esp
30011811:	add    BYTE PTR [ebp+0x0],cl
30011814:	imul   eax,DWORD PTR [eax],0x720067
3001181a:	popa   
3001181b:	add    BYTE PTR [eax+eax*1+0x69],dh
3001181f:	add    BYTE PTR [edi+0x0],ch
30011822:	outs   dx,BYTE PTR ds:[esi]
30011823:	add    BYTE PTR [eax+eax*1+0x25],bl
30011827:	add    BYTE PTR [ebp+0x0],dh
3001182a:	add    BYTE PTR [eax],al
3001182c:	xor    eax,eax
3001182e:	cmp    DWORD PTR [ecx+0x4],eax
30011831:	je     0x30011839
30011833:	cmp    DWORD PTR [ecx+0x1c],eax
30011836:	jne    0x30011839
30011838:	inc    eax
30011839:	ret    
3001183a:	push   esi
3001183b:	mov    esi,ecx
3001183d:	mov    eax,DWORD PTR [esi]
3001183f:	call   DWORD PTR [eax+0x28]
30011842:	xor    edx,edx
30011844:	test   al,al
30011846:	je     0x30011851
30011848:	cmp    DWORD PTR [esi+0x18],edx
3001184b:	je     0x30022db2
30011851:	mov    al,dl
30011853:	pop    esi
30011854:	ret    
30011855:	push   ebp
30011856:	mov    ebp,esp
30011858:	push   esi
30011859:	mov    esi,DWORD PTR [ebp+0x8]
3001185c:	push   edi
3001185d:	mov    edi,ecx
3001185f:	mov    ecx,DWORD PTR [edi]
30011861:	cmp    DWORD PTR [ecx-0xc],esi
30011864:	jg     0x300211d2
3001186a:	cmp    DWORD PTR [ecx-0x4],0x1
3001186e:	jle    0x3001187e
30011870:	push   esi
30011871:	mov    ecx,edi
30011873:	call   0x3001188b
30011878:	pop    edi
30011879:	pop    esi
3001187a:	pop    ebp
3001187b:	ret    0x4
3001187e:	mov    ecx,DWORD PTR [ecx-0x8]
30011881:	cmp    ecx,esi
30011883:	jl     0x300211da
30011889:	jmp    0x30011878
3001188b:	push   ebp
3001188c:	mov    ebp,esp
3001188e:	push   ecx
3001188f:	mov    eax,ecx
30011891:	push   ebx
30011892:	mov    ebx,DWORD PTR [eax]
30011894:	push   esi
30011895:	mov    ecx,DWORD PTR [ebx-0x10]
30011898:	mov    DWORD PTR [ebp-0x4],eax
3001189b:	mov    eax,DWORD PTR [ecx]
3001189d:	push   edi
3001189e:	mov    edi,DWORD PTR [ebx-0xc]
300118a1:	call   DWORD PTR [eax+0x10]
300118a4:	mov    esi,DWORD PTR [ebp+0x8]
300118a7:	mov    edx,DWORD PTR [eax]
300118a9:	push   0x1
300118ab:	push   esi
300118ac:	mov    ecx,eax
300118ae:	call   DWORD PTR [edx]
300118b0:	mov    DWORD PTR [ebp+0x8],eax
300118b3:	test   eax,eax
300118b5:	je     0x30021206
300118bb:	cmp    edi,esi
300118bd:	jge    0x300118c1
300118bf:	mov    esi,edi
300118c1:	lea    edx,[esi+0x1]
300118c4:	push   edx
300118c5:	push   ebx
300118c6:	lea    esi,[eax+0x10]
300118c9:	push   edx
300118ca:	push   esi
300118cb:	call   DWORD PTR ds:0x300453b4
300118d1:	mov    eax,DWORD PTR [ebp+0x8]
300118d4:	add    esp,0x10
300118d7:	lea    ecx,[ebx-0x10]
300118da:	mov    DWORD PTR [eax+0x4],edi
300118dd:	call   0x30004017
300118e2:	mov    eax,DWORD PTR [ebp-0x4]
300118e5:	pop    edi
300118e6:	mov    DWORD PTR [eax],esi
300118e8:	pop    esi
300118e9:	pop    ebx
300118ea:	leave  
300118eb:	ret    0x4
300118ee:	nop
300118ef:	nop
300118f0:	pop    esp
300118f1:	add    BYTE PTR ds:0x7300,ah
300118f7:	add    BYTE PTR [ebx+0x0],dl
300118fa:	push   0x6c006500
300118ff:	add    BYTE PTR [eax+eax*1+0x46],ch
30011903:	add    BYTE PTR [ecx+0x0],ch
30011906:	ins    BYTE PTR es:[edi],dx
30011907:	add    BYTE PTR [ebp+0x0],ah
3001190a:	inc    ecx
3001190b:	add    BYTE PTR [ebx+0x0],dh
3001190e:	jae    0x30011910
30011910:	outs   dx,DWORD PTR ds:[esi]
30011911:	add    BYTE PTR [ebx+0x0],ah
30011914:	imul   eax,DWORD PTR [eax],0x740061
3001191a:	imul   eax,DWORD PTR [eax],0x6e006f
30011920:	jae    0x30011922
30011922:	add    BYTE PTR [eax],al
30011924:	xor    edi,edi
30011926:	jmp    0x30011a8b
3001192b:	push   ebp
3001192c:	mov    ebp,esp
3001192e:	and    esp,0xfffffff8
30011931:	sub    esp,0x22c
30011937:	mov    eax,ds:0x30043050
3001193c:	xor    eax,esp
3001193e:	mov    DWORD PTR [esp+0x228],eax
30011945:	mov    eax,DWORD PTR [ebp+0xc]
30011948:	push   ebx
30011949:	push   esi
3001194a:	mov    esi,DWORD PTR [ebp+0x8]
3001194d:	push   edi
3001194e:	mov    DWORD PTR [esp+0xc],eax
30011952:	mov    eax,DWORD PTR [ebp+0x10]
30011955:	mov    DWORD PTR [esp+0x18],eax
30011959:	lea    eax,[esp+0x10]
3001195d:	push   eax
3001195e:	push   0x20019
30011963:	xor    ebx,ebx
30011965:	push   ebx
30011966:	push   esi
30011967:	push   ecx
30011968:	mov    DWORD PTR [esp+0x30],edx
3001196c:	mov    edi,ebx
3001196e:	mov    DWORD PTR [esp+0x24],ebx
30011972:	call   DWORD PTR ds:0x30045008
30011978:	test   eax,eax
3001197a:	jne    0x300246f7
30011980:	lea    eax,[esp+0x20]
30011984:	push   eax
30011985:	push   ebx
30011986:	push   ebx
30011987:	push   ebx
30011988:	push   ebx
30011989:	push   ebx
3001198a:	push   ebx
3001198b:	push   ebx
3001198c:	push   ebx
3001198d:	push   ebx
3001198e:	push   ebx
3001198f:	push   DWORD PTR [esp+0x3c]
30011993:	call   DWORD PTR ds:0x30045078
30011999:	push   0x30011ac4
3001199e:	push   esi
3001199f:	mov    ebx,eax
300119a1:	call   0x30009275
300119a6:	pop    ecx
300119a7:	pop    ecx
300119a8:	test   eax,eax
300119aa:	je     0x30011924
300119b0:	test   ebx,ebx
300119b2:	mov    ebx,DWORD PTR [esp+0xc]
300119b6:	jne    0x300119cc
300119b8:	push   ebx
300119b9:	lea    eax,[esp+0x24]
300119bd:	push   eax
300119be:	call   DWORD PTR ds:0x3004528c
300119c4:	test   eax,eax
300119c6:	jg     0x30011ed8
300119cc:	cmp    BYTE PTR [ebp+0x18],0x0
300119d0:	jne    0x30011a7e
300119d6:	push   0x30011ab8
300119db:	push   esi
300119dc:	call   0x30009275
300119e1:	pop    ecx
300119e2:	pop    ecx
300119e3:	test   eax,eax
300119e5:	je     0x30011924
300119eb:	push   0x30011ae4
300119f0:	push   esi
300119f1:	call   0x30009275
300119f6:	pop    ecx
300119f7:	pop    ecx
300119f8:	test   eax,eax
300119fa:	je     0x30011924
30011a00:	push   0x30011b0c
30011a05:	push   esi
30011a06:	call   0x30009275
30011a0b:	pop    ecx
30011a0c:	pop    ecx
30011a0d:	test   eax,eax
30011a0f:	je     0x30011924
30011a15:	push   0x30011b1c
30011a1a:	push   esi
30011a1b:	call   0x30009275
30011a20:	pop    ecx
30011a21:	pop    ecx
30011a22:	test   eax,eax
30011a24:	je     0x30011924
30011a2a:	push   0x30011b2c
30011a2f:	push   esi
30011a30:	call   0x30009275
30011a35:	pop    ecx
30011a36:	pop    ecx
30011a37:	test   eax,eax
30011a39:	je     0x30011924
30011a3f:	push   0x30011b40
30011a44:	push   esi
30011a45:	call   0x30009275
30011a4a:	pop    ecx
30011a4b:	pop    ecx
30011a4c:	test   eax,eax
30011a4e:	je     0x30011924
30011a54:	push   0x300118f8
30011a59:	push   esi
30011a5a:	call   0x30009275
30011a5f:	pop    ecx
30011a60:	pop    ecx
30011a61:	test   eax,eax
30011a63:	je     0x30011924
30011a69:	push   0x30011b58
30011a6e:	push   esi
30011a6f:	call   0x30009275
30011a74:	pop    ecx
30011a75:	pop    ecx
30011a76:	test   eax,eax
30011a78:	je     0x30011924
30011a7e:	and    DWORD PTR [esp+0xc],edi
30011a82:	cmp    DWORD PTR [ebp+0x14],edi
30011a85:	jg     0x30011b6a
30011a8b:	cmp    DWORD PTR [esp+0x10],0x0
30011a90:	je     0x30011a9c
30011a92:	push   DWORD PTR [esp+0x10]
30011a96:	call   DWORD PTR ds:0x30045004
30011a9c:	mov    eax,edi
30011a9e:	mov    ecx,DWORD PTR [esp+0x234]
30011aa5:	pop    edi
30011aa6:	pop    esi
30011aa7:	pop    ebx
30011aa8:	xor    ecx,esp
30011aaa:	call   0x3000115c
30011aaf:	mov    esp,ebp
30011ab1:	pop    ebp
30011ab2:	ret    0x14
30011ab5:	nop
30011ab6:	nop
30011ab7:	nop
30011ab8:	inc    ebx
30011ab9:	add    BYTE PTR [eax+eax*1+0x53],cl
30011abd:	add    BYTE PTR [ecx+0x0],cl
30011ac0:	inc    esp
30011ac1:	add    BYTE PTR [eax],al
30011ac3:	add    BYTE PTR [ecx+0x0],cl
30011ac6:	outs   dx,BYTE PTR ds:[esi]
30011ac7:	add    BYTE PTR [ecx+0x0],ch
30011aca:	je     0x30011acc
30011acc:	imul   eax,DWORD PTR [eax],0x6c0061
30011ad2:	imul   eax,DWORD PTR [eax],0x61007a
30011ad8:	je     0x30011ada
30011ada:	imul   eax,DWORD PTR [eax],0x6e006f
30011ae0:	add    BYTE PTR [eax],al
30011ae2:	nop
30011ae3:	nop
30011ae4:	dec    eax
30011ae5:	add    BYTE PTR [ecx+0x0],ah
30011ae8:	outs   dx,BYTE PTR ds:[esi]
30011ae9:	add    BYTE PTR [eax+eax*1+0x6c],ah
30011aed:	add    BYTE PTR [ebp+0x0],ah
30011af0:	dec    ecx
30011af1:	add    BYTE PTR [esi+0x0],ch
30011af4:	inc    ebx
30011af5:	add    BYTE PTR [edi+0x0],ch
30011af8:	ins    DWORD PTR es:[edi],dx
30011af9:	add    BYTE PTR [ecx+0x0],ch
30011afc:	outs   dx,BYTE PTR ds:[esi]
30011afd:	add    BYTE PTR [edi+0x0],ah
30011b00:	inc    ebx
30011b01:	add    BYTE PTR [ecx+0x0],ah
30011b04:	ins    BYTE PTR es:[edi],dx
30011b05:	add    BYTE PTR [eax+eax*1+0x0],ch
30011b09:	add    BYTE PTR [eax+0x64004590],dl
30011b0f:	add    BYTE PTR [ecx+0x0],ch
30011b12:	je     0x30011b14
30011b14:	outs   dx,DWORD PTR ds:[esi]
30011b15:	add    BYTE PTR [edx+0x0],dh
30011b18:	jae    0x30011b1a
30011b1a:	add    BYTE PTR [eax],al
30011b1c:	push   eax
30011b1d:	add    BYTE PTR [edx+0x0],dh
30011b20:	outs   dx,DWORD PTR ds:[esi]
30011b21:	add    BYTE PTR [edi+0x0],ah
30011b24:	dec    ecx
30011b25:	add    BYTE PTR [eax+eax*1+0x0],ah
30011b29:	add    BYTE PTR [eax+0x72005090],dl
30011b2f:	add    BYTE PTR [edi+0x0],ch
30011b32:	push   0x0
30011b34:	add    BYTE PTR gs:[ebx+0x0],ah
30011b38:	je     0x30011b3a
30011b3a:	jae    0x30011b3c
30011b3c:	add    BYTE PTR [eax],al
30011b3e:	nop
30011b3f:	nop
30011b40:	push   esp
30011b41:	add    BYTE PTR [edi+0x0],ch
30011b44:	outs   dx,DWORD PTR ds:[esi]
30011b45:	add    BYTE PTR [eax+eax*1+0x57],ch
30011b49:	add    BYTE PTR [ecx+0x0],ch
30011b4c:	outs   dx,BYTE PTR ds:[esi]
30011b4d:	add    BYTE PTR [eax+eax*1+0x6f],ah
30011b51:	add    BYTE PTR [edi+0x0],dh
30011b54:	jae    0x30011b56
30011b56:	add    BYTE PTR [eax],al
30011b58:	push   ebx
30011b59:	add    BYTE PTR [ebp+0x0],ah
30011b5c:	jb     0x30011b5e
30011b5e:	jbe    0x30011b60
30011b60:	imul   eax,DWORD PTR [eax],0x650063
30011b66:	jae    0x30011b68
30011b68:	add    BYTE PTR [eax],al
30011b6a:	xor    eax,eax
30011b6c:	push   0x206
30011b71:	push   eax
30011b72:	mov    WORD PTR [esp+0x30],ax
30011b77:	lea    eax,[esp+0x32]
30011b7b:	push   eax
30011b7c:	call   0x300011b1
30011b81:	add    esp,0xc
30011b84:	lea    eax,[esp+0x28]
30011b88:	push   0x104
30011b8d:	push   eax
30011b8e:	push   DWORD PTR [esp+0x14]
30011b92:	push   DWORD PTR [esp+0x1c]
30011b96:	call   DWORD PTR ds:0x30045038
30011b9c:	cmp    eax,0x103
30011ba1:	je     0x30011a8b
30011ba7:	test   eax,eax
30011ba9:	jne    0x30011a8b
30011baf:	push   DWORD PTR [esp+0x1c]
30011bb3:	lea    ecx,[esp+0x18]
30011bb7:	call   0x3000437e
30011bbc:	mov    eax,DWORD PTR [esp+0x14]
30011bc0:	push   esi
30011bc1:	cmp    DWORD PTR [eax-0xc],0x0
30011bc5:	je     0x30011c0c
30011bc7:	lea    eax,[esp+0x18]
30011bcb:	push   0x300118f0
30011bd0:	push   eax
30011bd1:	call   0x3000b9f3
30011bd6:	add    esp,0xc
30011bd9:	push   DWORD PTR [ebp+0x18]
30011bdc:	mov    eax,DWORD PTR [ebp+0x14]
30011bdf:	mov    edx,DWORD PTR [esp+0x18]
30011be3:	mov    ecx,DWORD PTR [esp+0x14]
30011be7:	dec    eax
30011be8:	push   eax
30011be9:	push   DWORD PTR [esp+0x20]
30011bed:	lea    eax,[esp+0x34]
30011bf1:	push   ebx
30011bf2:	push   eax
30011bf3:	call   0x3001192b
30011bf8:	lea    ecx,[esp+0x14]
30011bfc:	mov    edi,eax
30011bfe:	call   0x300051a4
30011c03:	inc    DWORD PTR [esp+0xc]
30011c07:	jmp    0x30011b6a
30011c0c:	call   0x300042e4
30011c11:	pop    ecx
30011c12:	push   eax
30011c13:	push   esi
30011c14:	lea    ecx,[esp+0x1c]
30011c18:	call   0x3000416f
30011c1d:	jmp    0x30011bd9
30011c1f:	push   ebp
30011c20:	mov    ebp,esp
30011c22:	push   ecx
30011c23:	push   esi
30011c24:	push   edi
30011c25:	mov    edi,DWORD PTR [ebp+0x8]
30011c28:	push   0x23f7
30011c2d:	and    DWORD PTR [edi],0x0
30011c30:	and    DWORD PTR [edi+0x4],0x0
30011c34:	mov    esi,ecx
30011c36:	call   0x3000532c
30011c3b:	lea    ecx,[ebp+0x8]
30011c3e:	call   0x300051c8
30011c43:	mov    ecx,esi
30011c45:	call   0x30011dea
30011c4a:	mov    al,BYTE PTR [esi+0x14]
30011c4d:	mov    ecx,esi
30011c4f:	mov    BYTE PTR [ebp-0x4],al
30011c52:	call   0x30011dea
30011c57:	push   DWORD PTR [ebp-0x4]
30011c5a:	lea    eax,[ebp+0x8]
30011c5d:	push   DWORD PTR [esi+0x10]
30011c60:	xor    edx,edx
30011c62:	push   eax
30011c63:	push   edi
30011c64:	push   DWORD PTR [esi+0x3c]
30011c67:	mov    ecx,0x80000001
30011c6c:	call   0x3001192b
30011c71:	cmp    BYTE PTR ds:0x300430f1,0x0
30011c78:	jne    0x30023844
30011c7e:	push   0x23f8
30011c83:	call   0x3000532c
30011c88:	lea    ecx,[ebp+0x8]
30011c8b:	call   0x300051a4
30011c90:	mov    eax,edi
30011c92:	pop    edi
30011c93:	pop    esi
30011c94:	leave  
30011c95:	ret    0x4
30011c98:	push   ebp
30011c99:	mov    ebp,esp
30011c9b:	sub    esp,0x20
30011c9e:	cmp    BYTE PTR ds:0x300430f1,0x0
30011ca5:	push   ebx
30011ca6:	push   esi
30011ca7:	push   edi
30011ca8:	mov    edi,ecx
30011caa:	jne    0x30023cf3
30011cb0:	mov    eax,DWORD PTR [edi]
30011cb2:	mov    esi,DWORD PTR [edi+0x48]
30011cb5:	xor    ebx,ebx
30011cb7:	push   ebx
30011cb8:	push   ecx
30011cb9:	push   0x2001f
30011cbe:	mov    ecx,edi
30011cc0:	mov    DWORD PTR [ebp-0x20],ebx
30011cc3:	mov    DWORD PTR [ebp-0x1c],ebx
30011cc6:	mov    DWORD PTR [ebp-0x18],ebx
30011cc9:	call   DWORD PTR [eax+0xc]
30011ccc:	push   eax
30011ccd:	push   ecx
30011cce:	push   esi
30011ccf:	push   0x80000001
30011cd4:	lea    ecx,[ebp-0x20]
30011cd7:	call   0x30009534
30011cdc:	mov    esi,eax
30011cde:	test   esi,esi
30011ce0:	jg     0x30023d0b
30011ce6:	js     0x30011d32
30011ce8:	push   0x300056a0
30011ced:	lea    ecx,[ebp-0x4]
30011cf0:	call   0x3000437e
30011cf5:	lea    eax,[ebp-0x14]
30011cf8:	push   eax
30011cf9:	mov    ecx,edi
30011cfb:	call   0x30011c1f
30011d00:	mov    ecx,DWORD PTR [eax]
30011d02:	mov    eax,DWORD PTR [eax+0x4]
30011d05:	push   0x8
30011d07:	mov    DWORD PTR [ebp-0x8],eax
30011d0a:	lea    eax,[ebp-0xc]
30011d0d:	push   eax
30011d0e:	push   0xb
30011d10:	push   ebx
30011d11:	push   DWORD PTR [ebp-0x4]
30011d14:	mov    DWORD PTR [ebp-0xc],ecx
30011d17:	push   DWORD PTR [ebp-0x20]
30011d1a:	call   DWORD PTR ds:0x30045010
30011d20:	mov    esi,eax
30011d22:	test   esi,esi
30011d24:	jg     0x30023d1b
30011d2a:	lea    ecx,[ebp-0x4]
30011d2d:	call   0x300051a4
30011d32:	lea    ecx,[ebp-0x20]
30011d35:	call   0x300051ae
30011d3a:	pop    edi
30011d3b:	mov    eax,esi
30011d3d:	pop    esi
30011d3e:	pop    ebx
30011d3f:	leave  
30011d40:	ret    0x4
30011d43:	push   ebp
30011d44:	mov    ebp,esp
30011d46:	sub    esp,0xc
30011d49:	push   ebx
30011d4a:	mov    ebx,DWORD PTR [ebp+0x8]
30011d4d:	push   esi
30011d4e:	push   edi
30011d4f:	mov    edi,ecx
30011d51:	cmp    BYTE PTR [edi+0x68],0x0
30011d55:	jne    0x30011dce
30011d57:	cmp    BYTE PTR ds:0x300430f1,0x0
30011d5e:	jne    0x30025dce
30011d64:	mov    esi,DWORD PTR [edi+0x48]
30011d67:	xor    eax,eax
30011d69:	push   eax
30011d6a:	push   ecx
30011d6b:	mov    DWORD PTR [ebp-0xc],eax
30011d6e:	mov    DWORD PTR [ebp-0x8],eax
30011d71:	mov    DWORD PTR [ebp-0x4],eax
30011d74:	mov    eax,DWORD PTR [edi]
30011d76:	push   0x2001f
30011d7b:	mov    ecx,edi
30011d7d:	call   DWORD PTR [eax+0xc]
30011d80:	push   eax
30011d81:	push   ecx
30011d82:	push   esi
30011d83:	push   0x80000001
30011d88:	lea    ecx,[ebp-0xc]
30011d8b:	call   0x30009534
30011d90:	mov    esi,eax
30011d92:	test   esi,esi
30011d94:	jg     0x30025de6
30011d9a:	js     0x30011ddd
30011d9c:	push   0x3000e5a4
30011da1:	lea    ecx,[ebp+0x8]
30011da4:	call   0x3000437e
30011da9:	lea    eax,[ebx+0xc]
30011dac:	push   eax
30011dad:	lea    edx,[ebp+0x8]
30011db0:	lea    ecx,[ebp-0xc]
30011db3:	call   0x30011fe6
30011db8:	lea    ecx,[ebp+0x8]
30011dbb:	mov    esi,eax
30011dbd:	call   0x300051a4
30011dc2:	test   esi,esi
30011dc4:	js     0x30011ddd
30011dc6:	lea    ecx,[ebp-0xc]
30011dc9:	call   0x300051ae
30011dce:	push   ebx
30011dcf:	mov    ecx,edi
30011dd1:	call   0x30011c98
30011dd6:	pop    edi
30011dd7:	pop    esi
30011dd8:	pop    ebx
30011dd9:	leave  
30011dda:	ret    0x4
30011ddd:	lea    ecx,[ebp-0xc]
30011de0:	call   0x300051ae
30011de5:	jmp    0x30025df6
30011dea:	push   ebp
30011deb:	mov    ebp,esp
30011ded:	sub    esp,0x14
30011df0:	push   ebx
30011df1:	push   esi
30011df2:	xor    ebx,ebx
30011df4:	lea    esi,[ecx+0x10]
30011df7:	mov    DWORD PTR [ebp-0x8],ebx
30011dfa:	cmp    DWORD PTR [esi],ebx
30011dfc:	ja     0x30011e8e
30011e02:	push   edi
30011e03:	push   0x3
30011e05:	pop    edi
30011e06:	push   0x20019
30011e0b:	push   DWORD PTR [ecx+0x48]
30011e0e:	lea    ecx,[ebp-0x14]
30011e11:	push   0x80000001
30011e16:	mov    DWORD PTR [esi],edi
30011e18:	mov    DWORD PTR [ebp-0x14],ebx
30011e1b:	mov    DWORD PTR [ebp-0x10],ebx
30011e1e:	mov    DWORD PTR [ebp-0xc],ebx
30011e21:	call   0x300051d9
30011e26:	test   eax,eax
30011e28:	jg     0x30023835
30011e2e:	js     0x30011e85
30011e30:	push   0x30011e98
30011e35:	lea    ecx,[ebp-0x4]
30011e38:	call   0x3000437e
30011e3d:	push   esi
30011e3e:	lea    edx,[ebp-0x4]
30011e41:	lea    ecx,[ebp-0x14]
30011e44:	call   0x3000709d
30011e49:	test   eax,eax
30011e4b:	jns    0x30011e92
30011e4d:	mov    bl,0x1
30011e4f:	lea    ecx,[ebp-0x4]
30011e52:	call   0x300051a4
30011e57:	test   bl,bl
30011e59:	je     0x30011e5d
30011e5b:	mov    DWORD PTR [esi],edi
30011e5d:	and    DWORD PTR [ebp-0x8],0x0
30011e61:	push   0x30011eb4
30011e66:	lea    ecx,[ebp-0x4]
30011e69:	call   0x3000437e
30011e6e:	lea    eax,[ebp-0x8]
30011e71:	push   eax
30011e72:	lea    edx,[ebp-0x4]
30011e75:	lea    ecx,[ebp-0x14]
30011e78:	call   0x3000709d
30011e7d:	lea    ecx,[ebp-0x4]
30011e80:	call   0x300051a4
30011e85:	lea    ecx,[ebp-0x14]
30011e88:	call   0x300051ae
30011e8d:	pop    edi
30011e8e:	pop    esi
30011e8f:	pop    ebx
30011e90:	leave  
30011e91:	ret    
30011e92:	cmp    DWORD PTR [esi],edi
30011e94:	jae    0x30011e4f
30011e96:	jmp    0x30011e4d
30011e98:	push   edx
30011e99:	add    BYTE PTR [ebp+0x0],ah
30011e9c:	add    BYTE PTR [bp+di+0x0],dl
30011ea0:	arpl   WORD PTR [eax],ax
30011ea2:	popa   
30011ea3:	add    BYTE PTR [esi+0x0],ch
30011ea6:	dec    esp
30011ea7:	add    BYTE PTR [ebp+0x0],ah
30011eaa:	jbe    0x30011eac
30011eac:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
30011eb1:	add    BYTE PTR [eax+0x65005290],dl
30011eb7:	add    BYTE PTR [edi+0x0],ah
30011eba:	push   ebx
30011ebb:	add    BYTE PTR [ebx+0x0],ah
30011ebe:	popa   
30011ebf:	add    BYTE PTR [esi+0x0],ch
30011ec2:	dec    esp
30011ec3:	add    BYTE PTR [ecx+0x0],ah
30011ec6:	jb     0x30011ec8
30011ec8:	add    BYTE PTR [di+0x0],ah
30011ecc:	dec    esi
30011ecd:	add    BYTE PTR [edi+0x0],ch
30011ed0:	add    BYTE PTR fs:[ebp+0x0],ah
30011ed4:	jae    0x30011ed6
30011ed6:	add    BYTE PTR [eax],al
30011ed8:	push   DWORD PTR [esp+0x1c]
30011edc:	lea    ecx,[esp+0x10]
30011ee0:	call   0x3000437e
30011ee5:	mov    eax,DWORD PTR [esp+0xc]
30011ee9:	push   esi
30011eea:	cmp    DWORD PTR [eax-0xc],edi
30011eed:	jne    0x3002470a
30011ef3:	call   0x300042e4
30011ef8:	pop    ecx
30011ef9:	mov    ecx,DWORD PTR [esp+0x18]
30011efd:	push   eax
30011efe:	push   esi
30011eff:	call   0x3000416f
30011f04:	mov    eax,DWORD PTR [esp+0x20]
30011f08:	mov    DWORD PTR [ebx],eax
30011f0a:	mov    eax,DWORD PTR [esp+0x24]
30011f0e:	lea    ecx,[esp+0xc]
30011f12:	mov    DWORD PTR [ebx+0x4],eax
30011f15:	call   0x300051a4
30011f1a:	jmp    0x300119cc
30011f1f:	push   ebp
30011f20:	mov    ebp,esp
30011f22:	push   ecx
30011f23:	push   ecx
30011f24:	push   ebx
30011f25:	mov    ebx,ecx
30011f27:	push   esi
30011f28:	mov    eax,DWORD PTR [ebx]
30011f2a:	xor    esi,esi
30011f2c:	push   edi
30011f2d:	mov    DWORD PTR [ebp-0x8],edx
30011f30:	mov    DWORD PTR [ebp-0x4],eax
30011f33:	test   eax,eax
30011f35:	je     0x30011f51
30011f37:	lea    eax,[ebp-0x4]
30011f3a:	push   eax
30011f3b:	call   0x30008fa7
30011f40:	mov    eax,DWORD PTR [eax]
30011f42:	mov    eax,DWORD PTR [eax-0xc]
30011f45:	lea    esi,[esi+eax*2]
30011f48:	add    esi,0xe
30011f4b:	cmp    DWORD PTR [ebp-0x4],0x0
30011f4f:	jne    0x30011f37
30011f51:	mov    eax,DWORD PTR [ebp+0x8]
30011f54:	push   esi
30011f55:	mov    DWORD PTR [eax],esi
30011f57:	call   0x300089a5
30011f5c:	mov    edi,eax
30011f5e:	mov    eax,DWORD PTR [ebp-0x8]
30011f61:	pop    ecx
30011f62:	mov    DWORD PTR [eax],edi
30011f64:	mov    ecx,DWORD PTR [ebx]
30011f66:	mov    DWORD PTR [ebp+0x8],ecx
30011f69:	test   ecx,ecx
30011f6b:	je     0x30011fd6
30011f6d:	lea    eax,[ebp+0x8]
30011f70:	push   eax
30011f71:	call   0x30008fa7
30011f76:	mov    ebx,eax
30011f78:	mov    edx,DWORD PTR [ebx]
30011f7a:	mov    ecx,DWORD PTR [edx-0xc]
30011f7d:	lea    eax,[ecx*2+0x2]
30011f84:	push   eax
30011f85:	push   edx
30011f86:	push   esi
30011f87:	push   edi
30011f88:	mov    DWORD PTR [ebp-0x8],eax
30011f8b:	call   0x3000ba07
30011f90:	add    esp,0x10
30011f93:	test   eax,eax
30011f95:	jne    0x30011fdf
30011f97:	sub    esi,DWORD PTR [ebp-0x8]
30011f9a:	add    edi,DWORD PTR [ebp-0x8]
30011f9d:	push   0x4
30011f9f:	lea    eax,[ebx+0x4]
30011fa2:	push   eax
30011fa3:	push   esi
30011fa4:	push   edi
30011fa5:	call   0x3000ba07
30011faa:	add    esp,0x10
30011fad:	test   eax,eax
30011faf:	jne    0x30011fdf
30011fb1:	push   0x8
30011fb3:	lea    eax,[ebx+0x8]
30011fb6:	push   eax
30011fb7:	sub    esi,0x4
30011fba:	add    edi,0x4
30011fbd:	push   esi
30011fbe:	push   edi
30011fbf:	call   0x3000ba07
30011fc4:	add    esp,0x10
30011fc7:	test   eax,eax
30011fc9:	jne    0x30011fdf
30011fcb:	sub    esi,0x8
30011fce:	add    edi,0x8
30011fd1:	cmp    DWORD PTR [ebp+0x8],eax
30011fd4:	jne    0x30011f6d
30011fd6:	xor    eax,eax
30011fd8:	pop    edi
30011fd9:	pop    esi
30011fda:	pop    ebx
30011fdb:	leave  
30011fdc:	ret    0x4
30011fdf:	mov    eax,0x80004005
30011fe4:	jmp    0x30011fd8
30011fe6:	push   ebp
30011fe7:	mov    ebp,esp
30011fe9:	push   ecx
30011fea:	push   ecx
30011feb:	push   ebx
30011fec:	push   esi
30011fed:	push   edi
30011fee:	lea    eax,[ebp-0x8]
30011ff1:	mov    edi,edx
30011ff3:	mov    ebx,ecx
30011ff5:	mov    ecx,DWORD PTR [ebp+0x8]
30011ff8:	xor    esi,esi
30011ffa:	push   eax
30011ffb:	lea    edx,[ebp-0x4]
30011ffe:	mov    DWORD PTR [ebp-0x4],esi
30012001:	call   0x30011f1f
30012006:	test   eax,eax
30012008:	js     0x3001203a
3001200a:	push   DWORD PTR [ebp-0x8]
3001200d:	push   DWORD PTR [ebp-0x4]
30012010:	push   0x3
30012012:	push   esi
30012013:	push   DWORD PTR [edi]
30012015:	push   DWORD PTR [ebx]
30012017:	call   DWORD PTR ds:0x30045010
3001201d:	test   eax,eax
3001201f:	jg     0x300245d6
30012025:	js     0x3001203a
30012027:	push   DWORD PTR [ebp-0x4]
3001202a:	call   DWORD PTR ds:0x300453d4
30012030:	pop    ecx
30012031:	pop    edi
30012032:	mov    eax,esi
30012034:	pop    esi
30012035:	pop    ebx
30012036:	leave  
30012037:	ret    0x4
3001203a:	mov    esi,eax
3001203c:	jmp    0x30012027
3001203e:	xor    eax,eax
30012040:	cmp    DWORD PTR [ecx+0x80],0x2
30012047:	je     0x300162fe
3001204d:	ret    
3001204e:	mov    al,0x1
30012050:	jmp    0x3001150e
30012055:	mov    eax,DWORD PTR [ebp-0x8]
30012058:	cmp    eax,DWORD PTR [ebp-0x10]
3001205b:	jae    0x3001150c
30012061:	jmp    0x3001204e
30012063:	push   ebp
30012064:	mov    ebp,esp
30012066:	cmp    DWORD PTR [ebp+0x8],0x0
3001206a:	push   edi
3001206b:	mov    edi,ecx
3001206d:	je     0x30025f47
30012073:	push   DWORD PTR [ebp+0x8]
30012076:	call   0x300042e4
3001207b:	pop    ecx
3001207c:	push   eax
3001207d:	push   DWORD PTR [ebp+0x8]
30012080:	lea    ecx,[edi+0x14]
30012083:	call   0x3000416f
30012088:	xor    eax,eax
3001208a:	pop    edi
3001208b:	pop    ebp
3001208c:	ret    0x4
3001208f:	push   ebp
30012090:	mov    ebp,esp
30012092:	cmp    DWORD PTR [ebp+0x8],0x0
30012096:	push   edi
30012097:	mov    edi,ecx
30012099:	je     0x30025f65
3001209f:	push   DWORD PTR [ebp+0x8]
300120a2:	call   0x300042e4
300120a7:	pop    ecx
300120a8:	push   eax
300120a9:	push   DWORD PTR [ebp+0x8]
300120ac:	lea    ecx,[edi+0x1c]
300120af:	call   0x3000416f
300120b4:	xor    eax,eax
300120b6:	pop    edi
300120b7:	pop    ebp
300120b8:	ret    0x4
300120bb:	push   ebp
300120bc:	mov    ebp,esp
300120be:	push   esi
300120bf:	mov    esi,DWORD PTR [ebp+0x8]
300120c2:	test   esi,esi
300120c4:	je     0x300255f6
300120ca:	push   esi
300120cb:	push   0x3001214c
300120d0:	push   0x1
300120d2:	push   0x0
300120d4:	push   0x3001213c
300120d9:	call   DWORD PTR ds:0x30045494
300120df:	test   eax,eax
300120e1:	js     0x30012128
300120e3:	mov    esi,DWORD PTR [esi]
300120e5:	test   esi,esi
300120e7:	je     0x300120ef
300120e9:	mov    eax,DWORD PTR [esi]
300120eb:	push   esi
300120ec:	call   DWORD PTR [eax+0x4]
300120ef:	push   edi
300120f0:	push   0x30012130
300120f5:	lea    ecx,[ebp+0x8]
300120f8:	call   0x30001488
300120fd:	mov    eax,DWORD PTR [esi]
300120ff:	push   0xffffffff
30012101:	push   esi
30012102:	call   DWORD PTR [eax+0x34]
30012105:	mov    edi,eax
30012107:	test   edi,edi
30012109:	js     0x30012116
3001210b:	push   DWORD PTR [ebp+0x8]
3001210e:	mov    eax,DWORD PTR [esi]
30012110:	push   esi
30012111:	call   DWORD PTR [eax+0x24]
30012114:	mov    edi,eax
30012116:	push   DWORD PTR [ebp+0x8]
30012119:	call   DWORD PTR ds:0x300454e8
3001211f:	mov    eax,DWORD PTR [esi]
30012121:	push   esi
30012122:	call   DWORD PTR [eax+0x8]
30012125:	mov    eax,edi
30012127:	pop    edi
30012128:	pop    esi
30012129:	pop    ebp
3001212a:	ret    0x4
3001212d:	nop
3001212e:	nop
3001212f:	nop
30012130:	push   ebp
30012131:	add    BYTE PTR [eax+eax*1+0x46],dl
30012135:	add    BYTE PTR ds:0x3800,ch
3001213b:	add    BYTE PTR [edi],cl
3001213d:	push   0xffffffd9
3001213f:	mov    BYTE PTR [edx-0x59ee2b0f],dl
30012145:	pop    edi
30012146:	add    BYTE PTR [eax-0x6a],al
30012149:	xor    dl,BYTE PTR [ecx-0x1b]
3001214c:	mov    edx,0x654d7ff4
30012151:	adc    eax,0xe1944ea8
30012156:	outs   dx,BYTE PTR ds:[esi]
30012157:	jb     0x300121a3
30012159:	inc    esi
3001215a:	stc    
3001215b:	lea    edx,[ebp-0x75]
3001215e:	in     al,dx
3001215f:	mov    eax,DWORD PTR [ebp+0x8]
30012162:	xor    ecx,ecx
30012164:	mov    edx,DWORD PTR [eax+0xc]
30012167:	test   edx,edx
30012169:	je     0x3001217a
3001216b:	push   DWORD PTR [ebp+0xc]
3001216e:	mov    eax,DWORD PTR [edx]
30012170:	push   edx
30012171:	call   DWORD PTR [eax+0xc]
30012174:	mov    ecx,eax
30012176:	test   ecx,ecx
30012178:	js     0x3001217c
3001217a:	mov    eax,ecx
3001217c:	pop    ebp
3001217d:	ret    0x8
30012180:	push   ebp
30012181:	mov    ebp,esp
30012183:	mov    eax,DWORD PTR [ebp+0x8]
30012186:	xor    ecx,ecx
30012188:	mov    edx,DWORD PTR [eax+0xc]
3001218b:	test   edx,edx
3001218d:	je     0x300121b0
3001218f:	push   DWORD PTR [ebp+0x24]
30012192:	mov    eax,DWORD PTR [edx]
30012194:	push   DWORD PTR [ebp+0x20]
30012197:	push   DWORD PTR [ebp+0x1c]
3001219a:	push   DWORD PTR [ebp+0x18]
3001219d:	push   DWORD PTR [ebp+0x14]
300121a0:	push   DWORD PTR [ebp+0x10]
300121a3:	push   DWORD PTR [ebp+0xc]
300121a6:	push   edx
300121a7:	call   DWORD PTR [eax+0x20]
300121aa:	mov    ecx,eax
300121ac:	test   ecx,ecx
300121ae:	js     0x300121b2
300121b0:	mov    eax,ecx
300121b2:	pop    ebp
300121b3:	ret    0x20
300121b6:	xor    eax,eax
300121b8:	ret    0xc
300121bb:	push   ebp
300121bc:	mov    ebp,esp
300121be:	mov    eax,DWORD PTR [ebp+0x8]
300121c1:	xor    ecx,ecx
300121c3:	mov    edx,DWORD PTR [eax+0xc]
300121c6:	test   edx,edx
300121c8:	je     0x300121e2
300121ca:	push   DWORD PTR [ebp+0x18]
300121cd:	mov    eax,DWORD PTR [edx]
300121cf:	push   DWORD PTR [ebp+0x14]
300121d2:	push   DWORD PTR [ebp+0x10]
300121d5:	push   DWORD PTR [ebp+0xc]
300121d8:	push   edx
300121d9:	call   DWORD PTR [eax+0x18]
300121dc:	mov    ecx,eax
300121de:	test   ecx,ecx
300121e0:	js     0x300121e4
300121e2:	mov    eax,ecx
300121e4:	pop    ebp
300121e5:	ret    0x14
300121e8:	push   ebp
300121e9:	mov    ebp,esp
300121eb:	push   ebx
300121ec:	push   edi
300121ed:	mov    edi,DWORD PTR [ebp+0x8]
300121f0:	mov    ebx,ecx
300121f2:	test   edi,edi
300121f4:	je     0x3002671e
300121fa:	push   esi
300121fb:	mov    esi,DWORD PTR [ebp+0xc]
300121fe:	test   esi,esi
30012200:	je     0x30026728
30012206:	mov    eax,DWORD PTR [edi+0x8]
30012209:	cmp    eax,DWORD PTR [esi+0x8]
3001220c:	jne    0x30026732
30012212:	lea    eax,[ebx+0x8]
30012215:	mov    ecx,eax
30012217:	mov    DWORD PTR [ebp+0xc],eax
3001221a:	call   0x30007014
3001221f:	lea    ecx,[ebx+0x20]
30012222:	call   0x30007014
30012227:	mov    eax,DWORD PTR [edi]
30012229:	mov    DWORD PTR [ebp+0x8],eax
3001222c:	test   eax,eax
3001222e:	je     0x3001225d
30012230:	mov    edi,DWORD PTR [ebp+0xc]
30012233:	lea    eax,[ebp+0x8]
30012236:	push   eax
30012237:	call   0x30008fa7
3001223c:	push   eax
3001223d:	lea    ecx,[ebp+0xc]
30012240:	call   0x30004340
30012245:	push   DWORD PTR [ebp+0xc]
30012248:	mov    ecx,edi
3001224a:	call   0x3000b906
3001224f:	lea    ecx,[ebp+0xc]
30012252:	call   0x300051a4
30012257:	cmp    DWORD PTR [ebp+0x8],0x0
3001225b:	jne    0x30012233
3001225d:	mov    eax,DWORD PTR [esi]
3001225f:	mov    DWORD PTR [ebp+0x8],eax
30012262:	test   eax,eax
30012264:	je     0x30012291
30012266:	lea    eax,[ebp+0x8]
30012269:	push   eax
3001226a:	call   0x30008fa7
3001226f:	push   eax
30012270:	lea    ecx,[ebp+0xc]
30012273:	call   0x30004340
30012278:	push   DWORD PTR [ebp+0xc]
3001227b:	lea    ecx,[ebx+0x20]
3001227e:	call   0x3000b906
30012283:	lea    ecx,[ebp+0xc]
30012286:	call   0x300051a4
3001228b:	cmp    DWORD PTR [ebp+0x8],0x0
3001228f:	jne    0x30012266
30012291:	xor    eax,eax
30012293:	pop    esi
30012294:	pop    edi
30012295:	pop    ebx
30012296:	pop    ebp
30012297:	ret    0x8
3001229a:	push   ebp
3001229b:	mov    ebp,esp
3001229d:	mov    eax,DWORD PTR [ebp+0x8]
300122a0:	xor    ecx,ecx
300122a2:	mov    edx,DWORD PTR [eax+0xc]
300122a5:	test   edx,edx
300122a7:	je     0x300122bb
300122a9:	push   DWORD PTR [ebp+0x10]
300122ac:	mov    eax,DWORD PTR [edx]
300122ae:	push   DWORD PTR [ebp+0xc]
300122b1:	push   edx
300122b2:	call   DWORD PTR [eax+0x1c]
300122b5:	mov    ecx,eax
300122b7:	test   ecx,ecx
300122b9:	js     0x300122bd
300122bb:	mov    eax,ecx
300122bd:	pop    ebp
300122be:	ret    0xc
300122c1:	push   ebp
300122c2:	mov    ebp,esp
300122c4:	mov    eax,DWORD PTR [ebp+0x8]
300122c7:	xor    ecx,ecx
300122c9:	mov    edx,DWORD PTR [eax+0xc]
300122cc:	test   edx,edx
300122ce:	je     0x300122dc
300122d0:	mov    eax,DWORD PTR [edx]
300122d2:	push   edx
300122d3:	call   DWORD PTR [eax+0x14]
300122d6:	mov    ecx,eax
300122d8:	test   ecx,ecx
300122da:	js     0x300122de
300122dc:	mov    eax,ecx
300122de:	pop    ebp
300122df:	ret    0x4
300122e2:	mov    ecx,DWORD PTR [ecx]
300122e4:	test   ecx,ecx
300122e6:	je     0x300122ee
300122e8:	mov    eax,DWORD PTR [ecx]
300122ea:	push   ecx
300122eb:	call   DWORD PTR [eax+0x8]
300122ee:	ret    
300122ef:	call   0x3000898e
300122f4:	mov    DWORD PTR [esi+0xc],edi
300122f7:	jmp    0x30010b13
300122fc:	outs   dx,BYTE PTR ds:[esi]
300122fd:	add    BYTE PTR [ecx+0x0],ah
30012300:	ins    DWORD PTR es:[edi],dx
30012301:	add    BYTE PTR [ebp+0x0],ah
30012304:	add    BYTE PTR [eax],al
30012306:	nop
30012307:	nop
30012308:	jo     0x3001230a
3001230a:	jne    0x3001230c
3001230c:	bound  eax,QWORD PTR [eax]
3001230e:	ins    BYTE PTR es:[edi],dx
3001230f:	add    BYTE PTR [ecx+0x0],ch
30012312:	arpl   WORD PTR [eax],ax
30012314:	dec    ebx
30012315:	add    BYTE PTR [ebp+0x0],ah
30012318:	jns    0x3001231a
3001231a:	push   esp
3001231b:	add    BYTE PTR [edi+0x0],ch
3001231e:	imul   eax,DWORD PTR [eax],0x65
30012321:	add    BYTE PTR [esi+0x0],ch
30012324:	add    BYTE PTR [eax],al
30012326:	nop
30012327:	nop
30012328:	arpl   WORD PTR [eax],ax
3001232a:	outs   dx,DWORD PTR ds:[esi]
3001232b:	add    BYTE PTR [eax+eax*1+0x65],ah
3001232f:	add    BYTE PTR [edx+0x0],al
30012332:	popa   
30012333:	add    BYTE PTR [ebx+0x0],dh
30012336:	add    BYTE PTR gs:[eax],al
30012339:	add    BYTE PTR [eax+0x65006490],dl
3001233f:	add    BYTE PTR [eax+0x0],dh
30012342:	add    BYTE PTR gs:[esi+0x0],ch
30012346:	add    BYTE PTR fs:[ebp+0x0],ah
3001234a:	outs   dx,BYTE PTR ds:[esi]
3001234b:	add    BYTE PTR [eax+eax*1+0x41],dh
3001234f:	add    BYTE PTR [ebx+0x0],dh
30012352:	jae    0x30012354
30012354:	add    BYTE PTR gs:[ebp+0x0],ch
30012358:	bound  eax,QWORD PTR [eax]
3001235a:	ins    BYTE PTR es:[edi],dx
3001235b:	add    BYTE PTR [ecx+0x0],bh
3001235e:	add    BYTE PTR [eax],al
30012360:	popa   
30012361:	add    BYTE PTR [ebx+0x0],dh
30012364:	jae    0x30012366
30012366:	add    BYTE PTR gs:[ebp+0x0],ch
3001236a:	bound  eax,QWORD PTR [eax]
3001236c:	ins    BYTE PTR es:[edi],dx
3001236d:	add    BYTE PTR [ecx+0x0],bh
30012370:	dec    ecx
30012371:	add    BYTE PTR [eax+eax*1+0x65],ah
30012375:	add    BYTE PTR [esi+0x0],ch
30012378:	je     0x3001237a
3001237a:	imul   eax,DWORD PTR [eax],0x790074
30012380:	add    BYTE PTR [eax],al
30012382:	nop
30012383:	nop
30012384:	add    BYTE PTR cs:[eax],al
30012387:	add    BYTE PTR [ebp-0x75],dl
3001238a:	in     al,dx
3001238b:	push   esi
3001238c:	push   0x3004306c
30012391:	push   DWORD PTR [ebp+0xc]
30012394:	mov    esi,ecx
30012396:	push   DWORD PTR [ebp+0x8]
30012399:	call   0x30008d01
3001239e:	mov    eax,esi
300123a0:	pop    esi
300123a1:	pop    ebp
300123a2:	ret    0x8
300123a5:	push   ebp
300123a6:	mov    ebp,esp
300123a8:	sub    esp,0x4c
300123ab:	push   ebx
300123ac:	push   esi
300123ad:	push   edi
300123ae:	mov    edi,DWORD PTR [ebp+0x8]
300123b1:	xor    ebx,ebx
300123b3:	mov    esi,ebx
300123b5:	cmp    DWORD PTR [edi+0xc],ebx
300123b8:	je     0x300123fe
300123ba:	push   DWORD PTR [ebp+0x18]
300123bd:	lea    ecx,[ebp-0x10]
300123c0:	push   DWORD PTR [ebp+0x14]
300123c3:	call   0x30012388
300123c8:	push   0x30012408
300123cd:	lea    ecx,[ebp-0x10]
300123d0:	call   0x3000927b
300123d5:	test   eax,eax
300123d7:	je     0x30012428
300123d9:	push   DWORD PTR [ebp+0x20]
300123dc:	mov    eax,DWORD PTR [edi+0xc]
300123df:	push   DWORD PTR [ebp+0x1c]
300123e2:	mov    ecx,DWORD PTR [eax]
300123e4:	push   DWORD PTR [ebp+0x18]
300123e7:	push   DWORD PTR [ebp+0x14]
300123ea:	push   DWORD PTR [ebp+0x10]
300123ed:	push   DWORD PTR [ebp+0xc]
300123f0:	push   eax
300123f1:	call   DWORD PTR [ecx+0x24]
300123f4:	mov    esi,eax
300123f6:	lea    ecx,[ebp-0x10]
300123f9:	call   0x300051a4
300123fe:	pop    edi
300123ff:	mov    eax,esi
30012401:	pop    esi
30012402:	pop    ebx
30012403:	leave  
30012404:	ret    0x1c
30012407:	nop
30012408:	popa   
30012409:	add    BYTE PTR [ebx+0x0],dh
3001240c:	jae    0x3001240e
3001240e:	add    BYTE PTR gs:[ebp+0x0],ch
30012412:	bound  eax,QWORD PTR [eax]
30012414:	ins    BYTE PTR es:[edi],dx
30012415:	add    BYTE PTR [ecx+0x0],bh
30012418:	inc    edx
30012419:	add    BYTE PTR [ecx+0x0],ch
3001241c:	outs   dx,BYTE PTR ds:[esi]
3001241d:	add    BYTE PTR [eax+eax*1+0x69],ah
30012421:	add    BYTE PTR [esi+0x0],ch
30012424:	add    BYTE PTR [bx+si],al
30012427:	add    BYTE PTR [ecx],bh
30012429:	pop    edi
3001242a:	sbb    BYTE PTR [edi],cl
3001242c:	xchg   BYTE PTR [ebp+0x68000000],bl
30012432:	lock and al,0x1
30012435:	xor    BYTE PTR [ebp+0x40e8f44d],cl
3001243b:	pop    ds
3001243c:	(bad)  
3001243d:	jmp    FWORD PTR [eax-0x58]
30012440:	and    eax,0x4d8d3001
30012445:	clc    
30012446:	call   0x3000437e
3001244b:	push   0x30012660
30012450:	lea    ecx,[ebp-0x4]
30012453:	call   0x3000437e
30012458:	mov    eax,DWORD PTR [edi+0x8]
3001245b:	push   0xffffffff
3001245d:	mov    ecx,DWORD PTR [eax]
3001245f:	push   eax
30012460:	call   DWORD PTR [ecx+0x54]
30012463:	mov    esi,eax
30012465:	test   esi,esi
30012467:	js     0x300124dc
30012469:	mov    eax,DWORD PTR [ebp-0xc]
3001246c:	mov    edx,DWORD PTR [edi+0xc]
3001246f:	push   DWORD PTR [eax-0xc]
30012472:	mov    ecx,DWORD PTR [edx]
30012474:	push   eax
30012475:	push   edx
30012476:	call   DWORD PTR [ecx+0x28]
30012479:	mov    esi,eax
3001247b:	test   esi,esi
3001247d:	js     0x300124dc
3001247f:	mov    eax,DWORD PTR [ebp-0x8]
30012482:	mov    edx,DWORD PTR [edi+0xc]
30012485:	push   DWORD PTR [eax-0xc]
30012488:	mov    ecx,DWORD PTR [edx]
3001248a:	push   eax
3001248b:	push   edx
3001248c:	call   DWORD PTR [ecx+0x28]
3001248f:	mov    esi,eax
30012491:	test   esi,esi
30012493:	js     0x300124dc
30012495:	mov    eax,DWORD PTR [ebp-0x4]
30012498:	mov    edx,DWORD PTR [edi+0xc]
3001249b:	push   DWORD PTR [eax-0xc]
3001249e:	mov    ecx,DWORD PTR [edx]
300124a0:	push   eax
300124a1:	push   edx
300124a2:	call   DWORD PTR [ecx+0x28]
300124a5:	mov    esi,eax
300124a7:	test   esi,esi
300124a9:	js     0x300124dc
300124ab:	mov    eax,DWORD PTR [edi+0x8]
300124ae:	push   ebx
300124af:	mov    ecx,DWORD PTR [eax]
300124b1:	push   eax
300124b2:	call   DWORD PTR [ecx+0x54]
300124b5:	mov    esi,eax
300124b7:	test   esi,esi
300124b9:	js     0x300124dc
300124bb:	mov    eax,DWORD PTR [edi+0x10]
300124be:	mov    DWORD PTR [ebp+0x8],eax
300124c1:	test   eax,eax
300124c3:	jne    0x30012718
300124c9:	jmp    0x3001274c
300124ce:	cmp    DWORD PTR [edi+0x30],ebx
300124d1:	ja     0x30012431
300124d7:	jmp    0x300123d9
300124dc:	lea    ecx,[ebp-0x4]
300124df:	call   0x300051a4
300124e4:	jmp    0x300262c3
300124e9:	nop
300124ea:	nop
300124eb:	nop
300124ec:	nop
300124ed:	nop
300124ee:	nop
300124ef:	nop
300124f0:	or     al,BYTE PTR [eax]
300124f2:	or     DWORD PTR [eax],eax
300124f4:	or     DWORD PTR [eax],eax
300124f6:	or     DWORD PTR [eax],eax
300124f8:	cmp    al,0x0
300124fa:	and    DWORD PTR [eax],eax
300124fc:	sub    eax,0x20002d00
30012501:	add    BYTE PTR [edx],ch
30012503:	add    BYTE PTR [edx],ch
30012505:	add    BYTE PTR [edx],ch
30012507:	add    BYTE PTR [edx],ch
30012509:	add    BYTE PTR [edx],ch
3001250b:	add    BYTE PTR [edx],ch
3001250d:	add    BYTE PTR [edx],ch
3001250f:	add    BYTE PTR [edx],ch
30012511:	add    BYTE PTR [edx],ch
30012513:	add    BYTE PTR [edx],ch
30012515:	add    BYTE PTR [edx],ch
30012517:	add    BYTE PTR [edx],ch
30012519:	add    BYTE PTR [edx],ch
3001251b:	add    BYTE PTR [edx],ch
3001251d:	add    BYTE PTR [edx],ch
3001251f:	add    BYTE PTR [edx],ch
30012521:	add    BYTE PTR [edx],ch
30012523:	add    BYTE PTR [edx],ch
30012525:	add    BYTE PTR [edx],ch
30012527:	add    BYTE PTR [edx],ch
30012529:	add    BYTE PTR [edx],ch
3001252b:	add    BYTE PTR [edx],ch
3001252d:	add    BYTE PTR [edx],ch
3001252f:	add    BYTE PTR [edx],ch
30012531:	add    BYTE PTR [edx],ch
30012533:	add    BYTE PTR [edx],ch
30012535:	add    BYTE PTR [edx],ch
30012537:	add    BYTE PTR [edx],ch
30012539:	add    BYTE PTR [edx],ch
3001253b:	add    BYTE PTR [edx],ch
3001253d:	add    BYTE PTR [edx],ch
3001253f:	add    BYTE PTR [edx],ch
30012541:	add    BYTE PTR [edx],ch
30012543:	add    BYTE PTR [edx],ch
30012545:	add    BYTE PTR [edx],ch
30012547:	add    BYTE PTR [edx],ch
30012549:	add    BYTE PTR [edx],ch
3001254b:	add    BYTE PTR [edx],ch
3001254d:	add    BYTE PTR [edx],ch
3001254f:	add    BYTE PTR [edx],ch
30012551:	add    BYTE PTR [edx],ch
30012553:	add    BYTE PTR [edx],ch
30012555:	add    BYTE PTR [edx],ch
30012557:	add    BYTE PTR [edx],ch
30012559:	add    BYTE PTR [edx],ch
3001255b:	add    BYTE PTR [edx],ch
3001255d:	add    BYTE PTR [edx],ch
3001255f:	add    BYTE PTR [edx],ch
30012561:	add    BYTE PTR [edx],ch
30012563:	add    BYTE PTR [edx],ch
30012565:	add    BYTE PTR [edx],ch
30012567:	add    BYTE PTR [edx],ch
30012569:	add    BYTE PTR [edx],ch
3001256b:	add    BYTE PTR [edx],ch
3001256d:	add    BYTE PTR [edx],ch
3001256f:	add    BYTE PTR [edx],ch
30012571:	add    BYTE PTR [edx],ch
30012573:	add    BYTE PTR [edx],ch
30012575:	add    BYTE PTR [edx],ch
30012577:	add    BYTE PTR [edx],ch
30012579:	add    BYTE PTR [edx],ch
3001257b:	add    BYTE PTR [edx],ch
3001257d:	add    BYTE PTR [edx],ch
3001257f:	add    BYTE PTR [edx],ch
30012581:	add    BYTE PTR [edx],ch
30012583:	add    BYTE PTR [edx],ch
30012585:	add    BYTE PTR [edx],ch
30012587:	add    BYTE PTR [edx],ch
30012589:	add    BYTE PTR [edx],ch
3001258b:	add    BYTE PTR [edx],ch
3001258d:	add    BYTE PTR [edx],ch
3001258f:	add    BYTE PTR [edx],ch
30012591:	add    BYTE PTR [edx],ch
30012593:	add    BYTE PTR [edx],ch
30012595:	add    BYTE PTR [edx],ch
30012597:	add    BYTE PTR [eax],ah
30012599:	add    BYTE PTR ds:0x3e002d00,ch
3001259f:	add    BYTE PTR [edx],cl
300125a1:	add    BYTE PTR [eax],al
300125a3:	add    BYTE PTR [eax+0x9909090],dl
300125a9:	add    BYTE PTR [ecx],cl
300125ab:	add    BYTE PTR [ecx],cl
300125ad:	add    BYTE PTR [eax+eax*1],bh
300125b0:	and    DWORD PTR [eax],eax
300125b2:	sub    eax,0x20002d00
300125b7:	add    BYTE PTR [edx],ch
300125b9:	add    BYTE PTR [edx],ch
300125bb:	add    BYTE PTR [edx],ch
300125bd:	add    BYTE PTR [edx],ch
300125bf:	add    BYTE PTR [edx],ch
300125c1:	add    BYTE PTR [edx],ch
300125c3:	add    BYTE PTR [edx],ch
300125c5:	add    BYTE PTR [edx],ch
300125c7:	add    BYTE PTR [edx],ch
300125c9:	add    BYTE PTR [edx],ch
300125cb:	add    BYTE PTR [edx],ch
300125cd:	add    BYTE PTR [edx],ch
300125cf:	add    BYTE PTR [edx],ch
300125d1:	add    BYTE PTR [edx],ch
300125d3:	add    BYTE PTR [edx],ch
300125d5:	add    BYTE PTR [edx],ch
300125d7:	add    BYTE PTR [edx],ch
300125d9:	add    BYTE PTR [edx],ch
300125db:	add    BYTE PTR [edx],ch
300125dd:	add    BYTE PTR [eax],ah
300125df:	add    BYTE PTR [ebp+0x0],cl
300125e2:	add    BYTE PTR gs:[edx+0x0],dh
300125e6:	add    BYTE PTR [di+0x0],ah
300125ea:	add    BYTE PTR fs:[eax],ah
300125ed:	add    BYTE PTR [eax+eax*1+0x65],ah
300125f1:	add    BYTE PTR [eax+0x0],dh
300125f4:	add    BYTE PTR gs:[esi+0x0],ch
300125f8:	add    BYTE PTR fs:[ebp+0x0],ah
300125fc:	outs   dx,BYTE PTR ds:[esi]
300125fd:	add    BYTE PTR [eax+eax*1+0x41],dh
30012601:	add    BYTE PTR [ebx+0x0],dh
30012604:	jae    0x30012606
30012606:	add    BYTE PTR gs:[ebp+0x0],ch
3001260a:	bound  eax,QWORD PTR [eax]
3001260c:	ins    BYTE PTR es:[edi],dx
3001260d:	add    BYTE PTR [ecx+0x0],bh
30012610:	and    BYTE PTR [eax],al
30012612:	add    BYTE PTR gs:[esi+0x0],ch
30012616:	je     0x30012618
30012618:	jb     0x3001261a
3001261a:	imul   eax,DWORD PTR [eax],0x730065
30012620:	and    BYTE PTR [eax],al
30012622:	sub    al,BYTE PTR [eax]
30012624:	sub    al,BYTE PTR [eax]
30012626:	sub    al,BYTE PTR [eax]
30012628:	sub    al,BYTE PTR [eax]
3001262a:	sub    al,BYTE PTR [eax]
3001262c:	sub    al,BYTE PTR [eax]
3001262e:	sub    al,BYTE PTR [eax]
30012630:	sub    al,BYTE PTR [eax]
30012632:	sub    al,BYTE PTR [eax]
30012634:	sub    al,BYTE PTR [eax]
30012636:	sub    al,BYTE PTR [eax]
30012638:	sub    al,BYTE PTR [eax]
3001263a:	sub    al,BYTE PTR [eax]
3001263c:	sub    al,BYTE PTR [eax]
3001263e:	sub    al,BYTE PTR [eax]
30012640:	sub    al,BYTE PTR [eax]
30012642:	sub    al,BYTE PTR [eax]
30012644:	sub    al,BYTE PTR [eax]
30012646:	sub    al,BYTE PTR [eax]
30012648:	sub    al,BYTE PTR [eax]
3001264a:	sub    al,BYTE PTR [eax]
3001264c:	sub    al,BYTE PTR [eax]
3001264e:	and    BYTE PTR [eax],al
30012650:	sub    eax,0x3e002d00
30012655:	add    BYTE PTR [edx],cl
30012657:	add    BYTE PTR [eax],al
30012659:	add    BYTE PTR [eax-0x6f6f6f70],dl
3001265f:	nop
30012660:	or     DWORD PTR [eax],eax
30012662:	or     DWORD PTR [eax],eax
30012664:	or     DWORD PTR [eax],eax
30012666:	cmp    al,0x0
30012668:	and    DWORD PTR [eax],eax
3001266a:	sub    eax,0x20002d00
3001266f:	add    BYTE PTR [edx],ch
30012671:	add    BYTE PTR [edx],ch
30012673:	add    BYTE PTR [edx],ch
30012675:	add    BYTE PTR [edx],ch
30012677:	add    BYTE PTR [edx],ch
30012679:	add    BYTE PTR [edx],ch
3001267b:	add    BYTE PTR [edx],ch
3001267d:	add    BYTE PTR [edx],ch
3001267f:	add    BYTE PTR [edx],ch
30012681:	add    BYTE PTR [edx],ch
30012683:	add    BYTE PTR [edx],ch
30012685:	add    BYTE PTR [edx],ch
30012687:	add    BYTE PTR [edx],ch
30012689:	add    BYTE PTR [edx],ch
3001268b:	add    BYTE PTR [edx],ch
3001268d:	add    BYTE PTR [edx],ch
3001268f:	add    BYTE PTR [edx],ch
30012691:	add    BYTE PTR [edx],ch
30012693:	add    BYTE PTR [edx],ch
30012695:	add    BYTE PTR [edx],ch
30012697:	add    BYTE PTR [edx],ch
30012699:	add    BYTE PTR [edx],ch
3001269b:	add    BYTE PTR [edx],ch
3001269d:	add    BYTE PTR [edx],ch
3001269f:	add    BYTE PTR [edx],ch
300126a1:	add    BYTE PTR [edx],ch
300126a3:	add    BYTE PTR [edx],ch
300126a5:	add    BYTE PTR [edx],ch
300126a7:	add    BYTE PTR [edx],ch
300126a9:	add    BYTE PTR [edx],ch
300126ab:	add    BYTE PTR [edx],ch
300126ad:	add    BYTE PTR [edx],ch
300126af:	add    BYTE PTR [edx],ch
300126b1:	add    BYTE PTR [edx],ch
300126b3:	add    BYTE PTR [edx],ch
300126b5:	add    BYTE PTR [edx],ch
300126b7:	add    BYTE PTR [edx],ch
300126b9:	add    BYTE PTR [edx],ch
300126bb:	add    BYTE PTR [edx],ch
300126bd:	add    BYTE PTR [edx],ch
300126bf:	add    BYTE PTR [edx],ch
300126c1:	add    BYTE PTR [edx],ch
300126c3:	add    BYTE PTR [edx],ch
300126c5:	add    BYTE PTR [edx],ch
300126c7:	add    BYTE PTR [edx],ch
300126c9:	add    BYTE PTR [edx],ch
300126cb:	add    BYTE PTR [edx],ch
300126cd:	add    BYTE PTR [edx],ch
300126cf:	add    BYTE PTR [edx],ch
300126d1:	add    BYTE PTR [edx],ch
300126d3:	add    BYTE PTR [edx],ch
300126d5:	add    BYTE PTR [edx],ch
300126d7:	add    BYTE PTR [edx],ch
300126d9:	add    BYTE PTR [edx],ch
300126db:	add    BYTE PTR [edx],ch
300126dd:	add    BYTE PTR [edx],ch
300126df:	add    BYTE PTR [edx],ch
300126e1:	add    BYTE PTR [edx],ch
300126e3:	add    BYTE PTR [edx],ch
300126e5:	add    BYTE PTR [edx],ch
300126e7:	add    BYTE PTR [edx],ch
300126e9:	add    BYTE PTR [edx],ch
300126eb:	add    BYTE PTR [edx],ch
300126ed:	add    BYTE PTR [edx],ch
300126ef:	add    BYTE PTR [edx],ch
300126f1:	add    BYTE PTR [edx],ch
300126f3:	add    BYTE PTR [edx],ch
300126f5:	add    BYTE PTR [edx],ch
300126f7:	add    BYTE PTR [edx],ch
300126f9:	add    BYTE PTR [edx],ch
300126fb:	add    BYTE PTR [edx],ch
300126fd:	add    BYTE PTR [edx],ch
300126ff:	add    BYTE PTR [edx],ch
30012701:	add    BYTE PTR [edx],ch
30012703:	add    BYTE PTR [edx],ch
30012705:	add    BYTE PTR [eax],ah
30012707:	add    BYTE PTR ds:0x3e002d00,ch
3001270d:	add    BYTE PTR [edx],cl
3001270f:	add    BYTE PTR [ecx],cl
30012711:	add    BYTE PTR [ecx],cl
30012713:	add    BYTE PTR [ecx],cl
30012715:	add    BYTE PTR [eax],al
30012717:	add    BYTE PTR [ebp-0x17aff7bb],cl
3001271d:	xchg   BYTE PTR [eax-0x1],ch
30012720:	call   DWORD PTR [eax-0x73]
30012723:	dec    ebp
30012724:	(bad)  
30012725:	call   0x3001298b
3001272a:	lea    eax,[ebp-0x3c]
3001272d:	push   eax
3001272e:	mov    ecx,edi
30012730:	call   0x3001300e
30012735:	lea    ecx,[ebp-0x3c]
30012738:	mov    esi,eax
3001273a:	call   0x30012777
3001273f:	test   esi,esi
30012741:	js     0x300124dc
30012747:	cmp    DWORD PTR [ebp+0x8],ebx
3001274a:	jne    0x30012718
3001274c:	mov    eax,DWORD PTR [edi+0x28]
3001274f:	mov    DWORD PTR [ebp+0x8],eax
30012752:	test   eax,eax
30012754:	jne    0x30026289
3001275a:	lea    ecx,[ebp-0x4]
3001275d:	call   0x300051a4
30012762:	lea    ecx,[ebp-0x8]
30012765:	call   0x300051a4
3001276a:	lea    ecx,[ebp-0xc]
3001276d:	call   0x300051a4
30012772:	jmp    0x300123d9
30012777:	push   esi
30012778:	mov    esi,ecx
3001277a:	lea    ecx,[esi+0x20]
3001277d:	call   0x300051a4
30012782:	lea    ecx,[esi+0x1c]
30012785:	call   0x300051a4
3001278a:	lea    ecx,[esi+0x18]
3001278d:	call   0x300051a4
30012792:	lea    ecx,[esi+0x14]
30012795:	pop    esi
30012796:	jmp    0x300051a4
3001279b:	push   ebp
3001279c:	mov    ebp,esp
3001279e:	sub    esp,0x24
300127a1:	mov    DWORD PTR [ebp-0x24],edx
300127a4:	test   ecx,ecx
300127a6:	je     0x30026717
300127ac:	push   ebx
300127ad:	push   esi
300127ae:	push   edi
300127af:	push   ecx
300127b0:	lea    ecx,[ebp-0x8]
300127b3:	call   0x3000437e
300127b8:	lea    eax,[ebp-0x4]
300127bb:	push   eax
300127bc:	mov    esi,0x30012384
300127c1:	push   esi
300127c2:	lea    eax,[ebp-0x18]
300127c5:	xor    edi,edi
300127c7:	push   eax
300127c8:	lea    ecx,[ebp-0x8]
300127cb:	mov    DWORD PTR [ebp-0x4],edi
300127ce:	call   0x30008ea6
300127d3:	or     ebx,0xffffffff
300127d6:	cmp    DWORD PTR [ebp-0x4],ebx
300127d9:	je     0x300128ff
300127df:	mov    eax,DWORD PTR [ebp-0x18]
300127e2:	cmp    DWORD PTR [eax-0xc],edi
300127e5:	jle    0x300128ff
300127eb:	lea    eax,[ebp-0x4]
300127ee:	push   eax
300127ef:	push   esi
300127f0:	lea    eax,[ebp-0x14]
300127f3:	push   eax
300127f4:	lea    ecx,[ebp-0x8]
300127f7:	call   0x30008ea6
300127fc:	cmp    DWORD PTR [ebp-0x4],ebx
300127ff:	je     0x300128f8
30012805:	mov    eax,DWORD PTR [ebp-0x14]
30012808:	cmp    DWORD PTR [eax-0xc],edi
3001280b:	jle    0x300128f8
30012811:	lea    eax,[ebp-0x4]
30012814:	push   eax
30012815:	push   esi
30012816:	lea    eax,[ebp-0x10]
30012819:	push   eax
3001281a:	lea    ecx,[ebp-0x8]
3001281d:	call   0x30008ea6
30012822:	cmp    DWORD PTR [ebp-0x4],ebx
30012825:	je     0x300128f1
3001282b:	mov    eax,DWORD PTR [ebp-0x10]
3001282e:	cmp    DWORD PTR [eax-0xc],edi
30012831:	jle    0x300128f1
30012837:	lea    eax,[ebp-0x4]
3001283a:	push   eax
3001283b:	push   esi
3001283c:	lea    eax,[ebp-0xc]
3001283f:	push   eax
30012840:	lea    ecx,[ebp-0x8]
30012843:	call   0x30008ea6
30012848:	cmp    DWORD PTR [ebp-0x4],ebx
3001284b:	je     0x300128ea
30012851:	mov    eax,DWORD PTR [ebp-0xc]
30012854:	cmp    DWORD PTR [eax-0xc],edi
30012857:	jle    0x300128ea
3001285d:	push   DWORD PTR [ebp-0x18]
30012860:	mov    esi,DWORD PTR ds:0x30045344
30012866:	call   esi
30012868:	push   DWORD PTR [ebp-0x14]
3001286b:	mov    DWORD PTR [ebp-0x4],eax
3001286e:	call   esi
30012870:	push   DWORD PTR [ebp-0x10]
30012873:	mov    ebx,eax
30012875:	call   esi
30012877:	push   DWORD PTR [ebp-0xc]
3001287a:	mov    DWORD PTR [ebp-0x1c],eax
3001287d:	call   esi
3001287f:	mov    edx,DWORD PTR [ebp-0x4]
30012882:	mov    esi,0xffff
30012887:	add    esp,0x10
3001288a:	mov    ecx,eax
3001288c:	cmp    edx,esi
3001288e:	ja     0x300128ea
30012890:	cmp    ebx,esi
30012892:	ja     0x300128ea
30012894:	mov    eax,DWORD PTR [ebp-0x1c]
30012897:	cmp    eax,esi
30012899:	ja     0x300128ea
3001289b:	cmp    ecx,esi
3001289d:	ja     0x300128ea
3001289f:	mov    WORD PTR [ebp-0x1e],ax
300128a3:	lea    eax,[ebp-0x20]
300128a6:	mov    WORD PTR [ebp-0x20],cx
300128aa:	mov    ecx,DWORD PTR [ebp-0x24]
300128ad:	push   eax
300128ae:	mov    WORD PTR [ebp-0x1a],dx
300128b2:	mov    WORD PTR [ebp-0x1c],bx
300128b6:	call   0x30012906
300128bb:	lea    ecx,[ebp-0xc]
300128be:	call   0x300051a4
300128c3:	lea    ecx,[ebp-0x10]
300128c6:	call   0x300051a4
300128cb:	lea    ecx,[ebp-0x14]
300128ce:	call   0x300051a4
300128d3:	lea    ecx,[ebp-0x18]
300128d6:	call   0x300051a4
300128db:	lea    ecx,[ebp-0x8]
300128de:	call   0x300051a4
300128e3:	mov    eax,edi
300128e5:	pop    edi
300128e6:	pop    esi
300128e7:	pop    ebx
300128e8:	leave  
300128e9:	ret    
300128ea:	mov    edi,0x80070057
300128ef:	jmp    0x300128bb
300128f1:	mov    edi,0x80070057
300128f6:	jmp    0x300128c3
300128f8:	mov    edi,0x80070057
300128fd:	jmp    0x300128cb
300128ff:	mov    edi,0x80070057
30012904:	jmp    0x300128d3
30012906:	push   ebp
30012907:	mov    ebp,esp
30012909:	mov    edx,DWORD PTR [ebp+0x8]
3001290c:	mov    ax,WORD PTR [edx+0x6]
30012910:	mov    WORD PTR [ecx+0x6],ax
30012914:	mov    ax,WORD PTR [edx+0x4]
30012918:	mov    WORD PTR [ecx+0x4],ax
3001291c:	mov    ax,WORD PTR [edx+0x2]
30012920:	mov    WORD PTR [ecx+0x2],ax
30012924:	mov    ax,WORD PTR [edx]
30012927:	mov    WORD PTR [ecx],ax
3001292a:	mov    eax,ecx
3001292c:	pop    ebp
3001292d:	ret    0x4
30012930:	push   ebp
30012931:	mov    ebp,esp
30012933:	push   ecx
30012934:	push   ebx
30012935:	mov    ebx,DWORD PTR [ebp+0x8]
30012938:	push   esi
30012939:	push   edi
3001293a:	lea    edi,[ecx+0x4]
3001293d:	lea    esi,[ebx+0x4]
30012940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30012941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30012942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30012943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30012944:	mov    esi,ecx
30012946:	lea    eax,[ebx+0x14]
30012949:	push   eax
3001294a:	lea    ecx,[esi+0x14]
3001294d:	call   0x300014c1
30012952:	lea    eax,[ebx+0x18]
30012955:	push   eax
30012956:	lea    ecx,[esi+0x18]
30012959:	call   0x300014c1
3001295e:	lea    eax,[ebx+0x1c]
30012961:	push   eax
30012962:	lea    ecx,[esi+0x1c]
30012965:	call   0x300014c1
3001296a:	lea    eax,[ebx+0x20]
3001296d:	push   eax
3001296e:	lea    ecx,[esi+0x20]
30012971:	call   0x300014c1
30012976:	lea    eax,[ebx+0x24]
30012979:	push   eax
3001297a:	lea    ecx,[esi+0x24]
3001297d:	call   0x30012906
30012982:	pop    edi
30012983:	mov    eax,esi
30012985:	pop    esi
30012986:	pop    ebx
30012987:	leave  
30012988:	ret    0x4
3001298b:	push   ebp
3001298c:	mov    ebp,esp
3001298e:	push   esi
3001298f:	mov    esi,ecx
30012991:	lea    ecx,[esi+0x14]
30012994:	mov    DWORD PTR [esi],0x30012e34
3001299a:	call   0x300051c8
3001299f:	lea    ecx,[esi+0x18]
300129a2:	call   0x300051c8
300129a7:	lea    ecx,[esi+0x1c]
300129aa:	call   0x300051c8
300129af:	lea    ecx,[esi+0x20]
300129b2:	call   0x300051c8
300129b7:	push   DWORD PTR [ebp+0x8]
300129ba:	xor    eax,eax
300129bc:	mov    DWORD PTR [esi+0x24],eax
300129bf:	mov    ecx,esi
300129c1:	mov    DWORD PTR [esi+0x28],eax
300129c4:	call   0x30012930
300129c9:	mov    eax,esi
300129cb:	pop    esi
300129cc:	pop    ebp
300129cd:	ret    0x4
300129d0:	push   ebp
300129d1:	mov    ebp,esp
300129d3:	sub    esp,0x64
300129d6:	push   ebx
300129d7:	lea    ebx,[ecx+0x14]
300129da:	mov    eax,DWORD PTR [ebx]
300129dc:	mov    DWORD PTR [ebp-0x4],eax
300129df:	test   eax,eax
300129e1:	je     0x30012a42
300129e3:	push   esi
300129e4:	push   edi
300129e5:	lea    eax,[ebp-0x4]
300129e8:	push   eax
300129e9:	call   0x30008fa7
300129ee:	push   eax
300129ef:	lea    ecx,[ebp-0x64]
300129f2:	call   0x3001298b
300129f7:	mov    edi,DWORD PTR [ebp-0x4]
300129fa:	mov    esi,edi
300129fc:	mov    DWORD PTR [ebp-0xc],esi
300129ff:	test   edi,edi
30012a01:	je     0x30012a34
30012a03:	lea    eax,[ebp-0xc]
30012a06:	push   eax
30012a07:	call   0x30008fa7
30012a0c:	push   eax
30012a0d:	lea    ecx,[ebp-0x38]
30012a10:	call   0x3001298b
30012a15:	lea    eax,[ebp-0x38]
30012a18:	push   eax
30012a19:	lea    ecx,[ebp-0x64]
30012a1c:	call   0x30012c28
30012a21:	test   al,al
30012a23:	jne    0x30012a47
30012a25:	lea    ecx,[ebp-0x38]
30012a28:	call   0x30012777
30012a2d:	mov    esi,DWORD PTR [ebp-0xc]
30012a30:	test   esi,esi
30012a32:	jne    0x30012a03
30012a34:	lea    ecx,[ebp-0x64]
30012a37:	call   0x30012777
30012a3c:	test   edi,edi
30012a3e:	jne    0x300129e5
30012a40:	pop    edi
30012a41:	pop    esi
30012a42:	xor    eax,eax
30012a44:	pop    ebx
30012a45:	leave  
30012a46:	ret    
30012a47:	cmp    esi,edi
30012a49:	je     0x300251ba
30012a4f:	lea    ecx,[ebp-0x8]
30012a52:	call   0x300051c8
30012a57:	lea    eax,[ebp-0x8]
30012a5a:	push   eax
30012a5b:	lea    ecx,[ebp-0x38]
30012a5e:	call   0x30012e44
30012a63:	cmp    BYTE PTR ds:0x300430f1,0x0
30012a6a:	jne    0x300251cb
30012a70:	push   esi
30012a71:	mov    ecx,ebx
30012a73:	call   0x30012a82
30012a78:	lea    ecx,[ebp-0x8]
30012a7b:	call   0x300051a4
30012a80:	jmp    0x30012a25
30012a82:	push   ebp
30012a83:	mov    ebp,esp
30012a85:	mov    edx,DWORD PTR [ebp+0x8]
30012a88:	push   esi
30012a89:	mov    esi,ecx
30012a8b:	test   edx,edx
30012a8d:	je     0x30025614
30012a93:	mov    eax,DWORD PTR [edx]
30012a95:	cmp    edx,DWORD PTR [esi]
30012a97:	je     0x30025605
30012a9d:	mov    ecx,DWORD PTR [edx+0x4]
30012aa0:	mov    DWORD PTR [ecx],eax
30012aa2:	mov    eax,DWORD PTR [edx+0x4]
30012aa5:	cmp    edx,DWORD PTR [esi+0x4]
30012aa8:	je     0x3002560c
30012aae:	mov    ecx,DWORD PTR [edx]
30012ab0:	mov    DWORD PTR [ecx+0x4],eax
30012ab3:	push   edx
30012ab4:	mov    ecx,esi
30012ab6:	call   0x30012ac0
30012abb:	pop    esi
30012abc:	pop    ebp
30012abd:	ret    0x4
30012ac0:	push   ebp
30012ac1:	mov    ebp,esp
30012ac3:	push   esi
30012ac4:	mov    esi,DWORD PTR [ebp+0x8]
30012ac7:	push   edi
30012ac8:	mov    edi,ecx
30012aca:	lea    ecx,[esi+0x8]
30012acd:	call   0x30012777
30012ad2:	mov    eax,DWORD PTR [edi+0x10]
30012ad5:	mov    DWORD PTR [esi],eax
30012ad7:	dec    DWORD PTR [edi+0x8]
30012ada:	mov    DWORD PTR [edi+0x10],esi
30012add:	je     0x30012ae5
30012adf:	pop    edi
30012ae0:	pop    esi
30012ae1:	pop    ebp
30012ae2:	ret    0x4
30012ae5:	mov    ecx,edi
30012ae7:	call   0x30010add
30012aec:	jmp    0x30012adf
30012aee:	push   ebp
30012aef:	mov    ebp,esp
30012af1:	mov    edx,DWORD PTR [ebp+0x8]
30012af4:	cmp    edx,DWORD PTR [ecx+0x8]
30012af7:	jae    0x30012b0c
30012af9:	mov    eax,DWORD PTR [ecx]
30012afb:	test   eax,eax
30012afd:	je     0x30012b0c
30012aff:	test   edx,edx
30012b01:	je     0x30012b08
30012b03:	mov    eax,DWORD PTR [eax]
30012b05:	dec    edx
30012b06:	jne    0x30012b03
30012b08:	pop    ebp
30012b09:	ret    0x4
30012b0c:	xor    eax,eax
30012b0e:	jmp    0x30012b08
30012b10:	push   ebp
30012b11:	mov    ebp,esp
30012b13:	mov    eax,DWORD PTR [ebp+0xc]
30012b16:	push   ebx
30012b17:	push   esi
30012b18:	push   edi
30012b19:	test   eax,eax
30012b1b:	js     0x30012b69
30012b1d:	mov    ecx,DWORD PTR [ebp+0x8]
30012b20:	cmp    eax,DWORD PTR [ecx+0x10]
30012b23:	jge    0x30012b69
30012b25:	mov    esi,DWORD PTR [ebp+0x10]
30012b28:	test   esi,esi
30012b2a:	je     0x30012b62
30012b2c:	mov    edi,DWORD PTR [ebp+0x14]
30012b2f:	test   edi,edi
30012b31:	je     0x30012b62
30012b33:	push   eax
30012b34:	add    ecx,0x8
30012b37:	call   0x30012aee
30012b3c:	mov    ebx,eax
30012b3e:	test   ebx,ebx
30012b40:	je     0x30012b69
30012b42:	push   ebx
30012b43:	call   0x30012b70
30012b48:	mov    ecx,DWORD PTR [eax]
30012b4a:	push   ebx
30012b4b:	mov    DWORD PTR [esi],ecx
30012b4d:	call   0x30012b70
30012b52:	mov    eax,DWORD PTR [eax]
30012b54:	mov    eax,DWORD PTR [eax-0xc]
30012b57:	mov    DWORD PTR [edi],eax
30012b59:	xor    eax,eax
30012b5b:	pop    edi
30012b5c:	pop    esi
30012b5d:	pop    ebx
30012b5e:	pop    ebp
30012b5f:	ret    0x10
30012b62:	mov    eax,0x80004003
30012b67:	jmp    0x30012b5b
30012b69:	mov    eax,0x80070057
30012b6e:	jmp    0x30012b5b
30012b70:	push   ebp
30012b71:	mov    ebp,esp
30012b73:	mov    eax,DWORD PTR [ebp+0x8]
30012b76:	test   eax,eax
30012b78:	je     0x30026746
30012b7e:	add    eax,0x8
30012b81:	pop    ebp
30012b82:	ret    0x4
30012b85:	push   ebp
30012b86:	mov    ebp,esp
30012b88:	mov    eax,DWORD PTR [ebp+0xc]
30012b8b:	push   ebx
30012b8c:	push   esi
30012b8d:	push   edi
30012b8e:	test   eax,eax
30012b90:	js     0x30012bde
30012b92:	mov    ecx,DWORD PTR [ebp+0x8]
30012b95:	cmp    eax,DWORD PTR [ecx+0x28]
30012b98:	jge    0x30012bde
30012b9a:	mov    esi,DWORD PTR [ebp+0x10]
30012b9d:	test   esi,esi
30012b9f:	je     0x30012bd7
30012ba1:	mov    edi,DWORD PTR [ebp+0x14]
30012ba4:	test   edi,edi
30012ba6:	je     0x30012bd7
30012ba8:	push   eax
30012ba9:	add    ecx,0x20
30012bac:	call   0x30012aee
30012bb1:	mov    ebx,eax
30012bb3:	test   ebx,ebx
30012bb5:	je     0x30012bde
30012bb7:	push   ebx
30012bb8:	call   0x30012b70
30012bbd:	mov    ecx,DWORD PTR [eax]
30012bbf:	push   ebx
30012bc0:	mov    DWORD PTR [esi],ecx
30012bc2:	call   0x30012b70
30012bc7:	mov    eax,DWORD PTR [eax]
30012bc9:	mov    eax,DWORD PTR [eax-0xc]
30012bcc:	mov    DWORD PTR [edi],eax
30012bce:	xor    eax,eax
30012bd0:	pop    edi
30012bd1:	pop    esi
30012bd2:	pop    ebx
30012bd3:	pop    ebp
30012bd4:	ret    0x10
30012bd7:	mov    eax,0x80004003
30012bdc:	jmp    0x30012bd0
30012bde:	mov    eax,0x80070057
30012be3:	jmp    0x30012bd0
30012be5:	push   DWORD PTR [edi+0x18]
30012be8:	lea    ecx,[esi+0x18]
30012beb:	call   0x3000927b
30012bf0:	test   eax,eax
30012bf2:	jne    0x30012c20
30012bf4:	push   DWORD PTR [edi+0x1c]
30012bf7:	lea    ecx,[esi+0x1c]
30012bfa:	call   0x3000927b
30012bff:	test   eax,eax
30012c01:	jne    0x30012c20
30012c03:	mov    al,0x1
30012c05:	jmp    0x30012c22
30012c07:	push   ebp
30012c08:	mov    ebp,esp
30012c0a:	push   esi
30012c0b:	push   edi
30012c0c:	mov    edi,DWORD PTR [ebp+0x8]
30012c0f:	mov    esi,ecx
30012c11:	push   DWORD PTR [edi+0x14]
30012c14:	lea    ecx,[esi+0x14]
30012c17:	call   0x3000927b
30012c1c:	test   eax,eax
30012c1e:	je     0x30012be5
30012c20:	xor    al,al
30012c22:	pop    edi
30012c23:	pop    esi
30012c24:	pop    ebp
30012c25:	ret    0x4
30012c28:	push   ebp
30012c29:	mov    ebp,esp
30012c2b:	push   esi
30012c2c:	push   edi
30012c2d:	mov    edi,DWORD PTR [ebp+0x8]
30012c30:	push   edi
30012c31:	mov    esi,ecx
30012c33:	call   0x30012c07
30012c38:	test   al,al
30012c3a:	jne    0x30012c44
30012c3c:	xor    al,al
30012c3e:	pop    edi
30012c3f:	pop    esi
30012c40:	pop    ebp
30012c41:	ret    0x4
30012c44:	lea    edx,[edi+0x24]
30012c47:	lea    ecx,[esi+0x24]
30012c4a:	call   0x30012c57
30012c4f:	test   al,al
30012c51:	je     0x30012c3c
30012c53:	mov    al,0x1
30012c55:	jmp    0x30012c3e
30012c57:	mov    ax,WORD PTR [ecx+0x6]
30012c5b:	cmp    ax,WORD PTR [edx+0x6]
30012c5f:	jne    0x30012c81
30012c61:	mov    ax,WORD PTR [ecx+0x4]
30012c65:	cmp    ax,WORD PTR [edx+0x4]
30012c69:	jne    0x30012c81
30012c6b:	mov    ax,WORD PTR [ecx+0x2]
30012c6f:	cmp    ax,WORD PTR [edx+0x2]
30012c73:	jne    0x30012c81
30012c75:	mov    ax,WORD PTR [ecx]
30012c78:	cmp    ax,WORD PTR [edx]
30012c7b:	jne    0x30012c81
30012c7d:	xor    eax,eax
30012c7f:	inc    eax
30012c80:	ret    
30012c81:	xor    eax,eax
30012c83:	ret    
30012c84:	and    DWORD PTR [ecx],0x0
30012c87:	mov    eax,ecx
30012c89:	ret    
30012c8a:	push   edi
30012c8b:	mov    edi,ecx
30012c8d:	test   edi,edi
30012c8f:	je     0x300262e8
30012c95:	and    DWORD PTR [edi],0x0
30012c98:	push   esi
30012c99:	push   0x300430f0
30012c9e:	push   0x38
30012ca0:	call   0x30006cc2
30012ca5:	mov    esi,eax
30012ca7:	pop    ecx
30012ca8:	pop    ecx
30012ca9:	test   esi,esi
30012cab:	je     0x30012cea
30012cad:	lea    ecx,[esi+0x4]
30012cb0:	call   0x30012c84
30012cb5:	push   ecx
30012cb6:	lea    ecx,[esi+0x8]
30012cb9:	call   0x3000704d
30012cbe:	push   ecx
30012cbf:	lea    ecx,[esi+0x20]
30012cc2:	call   0x3000704d
30012cc7:	mov    DWORD PTR [esi],0x300131f8
30012ccd:	mov    ecx,DWORD PTR ds:0x300430f4
30012cd3:	mov    eax,DWORD PTR [ecx]
30012cd5:	call   DWORD PTR [eax+0x4]
30012cd8:	mov    eax,esi
30012cda:	neg    eax
30012cdc:	sbb    eax,eax
30012cde:	mov    DWORD PTR [edi],esi
30012ce0:	not    eax
30012ce2:	pop    esi
30012ce3:	and    eax,0x8007000e
30012ce8:	pop    edi
30012ce9:	ret    
30012cea:	xor    esi,esi
30012cec:	jmp    0x30012cd8
30012cee:	push   ebp
30012cef:	mov    ebp,esp
30012cf1:	push   ecx
30012cf2:	and    DWORD PTR [ebp-0x4],0x0
30012cf6:	push   ebx
30012cf7:	push   edi
30012cf8:	lea    ecx,[ebp-0x4]
30012cfb:	mov    ebx,edx
30012cfd:	call   0x30012c8a
30012d02:	mov    edi,eax
30012d04:	test   edi,edi
30012d06:	js     0x30012d32
30012d08:	push   esi
30012d09:	mov    esi,DWORD PTR [ebp-0x4]
30012d0c:	test   esi,esi
30012d0e:	je     0x30012d31
30012d10:	mov    eax,DWORD PTR [esi]
30012d12:	push   esi
30012d13:	call   DWORD PTR [eax+0x4]
30012d16:	mov    eax,DWORD PTR [esi]
30012d18:	push   ebx
30012d19:	push   0x30012de4
30012d1e:	push   esi
30012d1f:	call   DWORD PTR [eax]
30012d21:	mov    edi,eax
30012d23:	test   edi,edi
30012d25:	js     0x300262d8
30012d2b:	mov    eax,DWORD PTR [esi]
30012d2d:	push   esi
30012d2e:	call   DWORD PTR [eax+0x8]
30012d31:	pop    esi
30012d32:	mov    eax,edi
30012d34:	pop    edi
30012d35:	pop    ebx
30012d36:	leave  
30012d37:	ret    0x4
30012d3a:	push   ebp
30012d3b:	mov    ebp,esp
30012d3d:	mov    eax,DWORD PTR [ebp+0x8]
30012d40:	inc    DWORD PTR [eax+0x4]
30012d43:	mov    eax,DWORD PTR [eax+0x4]
30012d46:	pop    ebp
30012d47:	ret    0x4
30012d4a:	push   ebp
30012d4b:	mov    ebp,esp
30012d4d:	push   ecx
30012d4e:	push   ecx
30012d4f:	and    DWORD PTR [ebp-0x4],0x0
30012d53:	push   ebx
30012d54:	mov    DWORD PTR [ebp-0x8],ecx
30012d57:	push   edi
30012d58:	lea    ecx,[ebp-0x4]
30012d5b:	mov    ebx,edx
30012d5d:	call   0x30012c8a
30012d62:	mov    edi,eax
30012d64:	test   edi,edi
30012d66:	js     0x30012da9
30012d68:	push   esi
30012d69:	mov    esi,DWORD PTR [ebp-0x4]
30012d6c:	test   esi,esi
30012d6e:	je     0x30012da8
30012d70:	mov    eax,DWORD PTR [esi]
30012d72:	push   esi
30012d73:	call   DWORD PTR [eax+0x4]
30012d76:	push   DWORD PTR [ebx]
30012d78:	mov    eax,DWORD PTR [ebp-0x8]
30012d7b:	mov    ecx,esi
30012d7d:	push   DWORD PTR [eax]
30012d7f:	call   0x300121e8
30012d84:	mov    edi,eax
30012d86:	test   edi,edi
30012d88:	js     0x30012da2
30012d8a:	mov    ebx,DWORD PTR [ebp+0xc]
30012d8d:	mov    eax,DWORD PTR [esi]
30012d8f:	push   ebx
30012d90:	push   0x30012de4
30012d95:	push   esi
30012d96:	call   DWORD PTR [eax]
30012d98:	mov    edi,eax
30012d9a:	test   edi,edi
30012d9c:	js     0x300262e0
30012da2:	mov    eax,DWORD PTR [esi]
30012da4:	push   esi
30012da5:	call   DWORD PTR [eax+0x8]
30012da8:	pop    esi
30012da9:	mov    eax,edi
30012dab:	pop    edi
30012dac:	pop    ebx
30012dad:	leave  
30012dae:	ret    0xc
30012db1:	push   ebp
30012db2:	mov    ebp,esp
30012db4:	push   DWORD PTR [ebp+0x10]
30012db7:	push   DWORD PTR [ebp+0xc]
30012dba:	push   0x30012dcc
30012dbf:	push   DWORD PTR [ebp+0x8]
30012dc2:	call   DWORD PTR ds:0x30045424
30012dc8:	pop    ebp
30012dc9:	ret    0xc
30012dcc:	in     al,0x2d
30012dce:	add    DWORD PTR [eax],esi
30012dd0:	add    BYTE PTR [eax],al
30012dd2:	add    BYTE PTR [eax],al
30012dd4:	add    DWORD PTR [eax],eax
	...
30012de2:	add    BYTE PTR [eax],al
30012de4:	loope  0x30012d91
30012de6:	js     0x30012dd8
30012de8:	rol    BYTE PTR [ebp+0x32],cl
30012deb:	dec    eax
30012dec:	xchg   ecx,eax
30012ded:	jmp    0xc925:0x2fce6644
30012df4:	push   esi
30012df5:	mov    esi,ecx
30012df7:	push   edi
30012df8:	lea    ecx,[esi+0x14]
30012dfb:	mov    DWORD PTR [esi],0x30012e34
30012e01:	call   0x300051c8
30012e06:	lea    ecx,[esi+0x18]
30012e09:	call   0x300051c8
30012e0e:	lea    ecx,[esi+0x1c]
30012e11:	call   0x300051c8
30012e16:	lea    ecx,[esi+0x20]
30012e19:	call   0x300051c8
30012e1e:	xor    eax,eax
30012e20:	mov    DWORD PTR [esi+0x24],eax
30012e23:	mov    DWORD PTR [esi+0x28],eax
30012e26:	lea    edi,[esi+0x4]
30012e29:	stos   DWORD PTR es:[edi],eax
30012e2a:	stos   DWORD PTR es:[edi],eax
30012e2b:	stos   DWORD PTR es:[edi],eax
30012e2c:	stos   DWORD PTR es:[edi],eax
30012e2d:	pop    edi
30012e2e:	mov    eax,esi
30012e30:	pop    esi
30012e31:	ret    
30012e32:	nop
30012e33:	nop
30012e34:	push   edx
30012e35:	xor    al,0x1
30012e37:	xor    BYTE PTR [esi+ebp*1+0x1],al
30012e3b:	xor    dl,dl
30012e3d:	cmp    al,0x3
30012e3f:	xor    BYTE PTR [esi],bl
30012e41:	add    DWORD PTR ss:[eax],esi
30012e44:	push   ebp
30012e45:	mov    ebp,esp
30012e47:	push   ecx
30012e48:	push   esi
30012e49:	mov    esi,ecx
30012e4b:	lea    ecx,[ebp-0x4]
30012e4e:	call   0x300051c8
30012e53:	lea    eax,[ebp-0x4]
30012e56:	push   eax
30012e57:	lea    ecx,[esi+0x24]
30012e5a:	call   0x30012ee4
30012e5f:	push   DWORD PTR [esi+0x18]
30012e62:	push   DWORD PTR [esi+0x1c]
30012e65:	push   DWORD PTR [ebp-0x4]
30012e68:	push   DWORD PTR [esi+0x14]
30012e6b:	push   0x30012e88
30012e70:	push   DWORD PTR [ebp+0x8]
30012e73:	call   0x30005153
30012e78:	add    esp,0x18
30012e7b:	lea    ecx,[ebp-0x4]
30012e7e:	call   0x300051a4
30012e83:	pop    esi
30012e84:	leave  
30012e85:	ret    0x4
30012e88:	and    eax,0x2c007300
30012e8d:	add    BYTE PTR [eax],ah
30012e8f:	add    BYTE PTR [esi+0x0],dl
30012e92:	add    BYTE PTR gs:[edx+0x0],dh
30012e96:	jae    0x30012e98
30012e98:	imul   eax,DWORD PTR [eax],0x6e006f
30012e9e:	cmp    eax,0x73002500
30012ea3:	add    BYTE PTR [eax+eax*1],ch
30012ea6:	and    BYTE PTR [eax],al
30012ea8:	inc    ebx
30012ea9:	add    BYTE PTR [ebp+0x0],dh
30012eac:	ins    BYTE PTR es:[edi],dx
30012ead:	add    BYTE PTR [eax+eax*1+0x75],dh
30012eb1:	add    BYTE PTR [edx+0x0],dh
30012eb4:	add    BYTE PTR gs:0x73002500,bh
30012ebb:	add    BYTE PTR [eax+eax*1],ch
30012ebe:	and    BYTE PTR [eax],al
30012ec0:	push   eax
30012ec1:	add    BYTE PTR [ebp+0x0],dh
30012ec4:	bound  eax,QWORD PTR [eax]
30012ec6:	ins    BYTE PTR es:[edi],dx
30012ec7:	add    BYTE PTR [ecx+0x0],ch
30012eca:	arpl   WORD PTR [eax],ax
30012ecc:	dec    ebx
30012ecd:	add    BYTE PTR [ebp+0x0],ah
30012ed0:	jns    0x30012ed2
30012ed2:	push   esp
30012ed3:	add    BYTE PTR [edi+0x0],ch
30012ed6:	imul   eax,DWORD PTR [eax],0x65
30012ed9:	add    BYTE PTR [esi+0x0],ch
30012edc:	cmp    eax,0x73002500
30012ee1:	add    BYTE PTR [eax],al
30012ee3:	add    BYTE PTR [ebp-0x75],dl
30012ee6:	in     al,dx
30012ee7:	movzx  eax,WORD PTR [ecx]
30012eea:	push   eax
30012eeb:	movzx  eax,WORD PTR [ecx+0x2]
30012eef:	push   eax
30012ef0:	movzx  eax,WORD PTR [ecx+0x4]
30012ef4:	push   eax
30012ef5:	movzx  eax,WORD PTR [ecx+0x6]
30012ef9:	push   eax
30012efa:	push   0x30012f10
30012eff:	push   DWORD PTR [ebp+0x8]
30012f02:	call   0x30005153
30012f07:	add    esp,0x18
30012f0a:	pop    ebp
30012f0b:	ret    0x4
30012f0e:	nop
30012f0f:	nop
30012f10:	and    eax,0x2e007500
30012f15:	add    BYTE PTR ds:0x2e007500,ah
30012f1b:	add    BYTE PTR ds:0x2e007500,ah
30012f21:	add    BYTE PTR ds:0x7500,ah
30012f27:	add    BYTE PTR [ebp-0x75],dl
30012f2a:	in     al,dx
30012f2b:	and    esp,0xfffffff8
30012f2e:	sub    esp,0x3c
30012f31:	push   esi
30012f32:	push   ecx
30012f33:	lea    ecx,[esp+0x2c]
30012f37:	call   0x3000704d
30012f3c:	push   ecx
30012f3d:	lea    ecx,[esp+0x14]
30012f41:	call   0x3000704d
30012f46:	lea    ecx,[esp+0x4]
30012f4a:	call   0x300051c8
30012f4f:	mov    esi,DWORD PTR [ebp+0x8]
30012f52:	lea    eax,[esp+0x4]
30012f56:	push   eax
30012f57:	lea    ecx,[esi+0x24]
30012f5a:	call   0x30012ee4
30012f5f:	push   0x30013640
30012f64:	lea    ecx,[esp+0xc]
30012f68:	call   0x3000437e
30012f6d:	push   DWORD PTR [eax]
30012f6f:	lea    ecx,[esp+0x2c]
30012f73:	call   0x3000b906
30012f78:	lea    ecx,[esp+0x8]
30012f7c:	call   0x300051a4
30012f81:	push   0x30013004
30012f86:	lea    ecx,[esp+0xc]
30012f8a:	call   0x3000437e
30012f8f:	push   DWORD PTR [eax]
30012f91:	lea    ecx,[esp+0x2c]
30012f95:	call   0x3000b906
30012f9a:	lea    ecx,[esp+0x8]
30012f9e:	call   0x300051a4
30012fa3:	push   DWORD PTR [esp+0x4]
30012fa7:	lea    ecx,[esp+0x14]
30012fab:	call   0x3000b906
30012fb0:	push   DWORD PTR [esi+0x20]
30012fb3:	lea    ecx,[esp+0x14]
30012fb7:	call   0x3000b906
30012fbc:	push   ecx
30012fbd:	push   DWORD PTR [ebp+0xc]
30012fc0:	lea    eax,[esp+0x18]
30012fc4:	mov    DWORD PTR [esp+0x10],eax
30012fc8:	lea    eax,[esp+0x30]
30012fcc:	push   ecx
30012fcd:	lea    edx,[esp+0x14]
30012fd1:	lea    ecx,[esp+0x18]
30012fd5:	mov    DWORD PTR [esp+0x18],eax
30012fd9:	call   0x30012d4a
30012fde:	lea    ecx,[esp+0x4]
30012fe2:	mov    esi,eax
30012fe4:	call   0x300051a4
30012fe9:	lea    ecx,[esp+0x10]
30012fed:	call   0x30007014
30012ff2:	lea    ecx,[esp+0x28]
30012ff6:	call   0x30007014
30012ffb:	mov    eax,esi
30012ffd:	pop    esi
30012ffe:	mov    esp,ebp
30013000:	pop    ebp
30013001:	ret    0x8
30013004:	push   0x65007200
30013009:	add    BYTE PTR [esi+0x0],ah
3001300c:	add    BYTE PTR [eax],al
3001300e:	push   ebp
3001300f:	mov    ebp,esp
30013011:	sub    esp,0x1c
30013014:	push   ebx
30013015:	push   esi
30013016:	push   edi
30013017:	mov    edi,ecx
30013019:	xor    eax,eax
3001301b:	push   0x3001233c
30013020:	lea    ecx,[ebp-0x1c]
30013023:	mov    WORD PTR [ebp-0x4],ax
30013027:	call   0x3000437e
3001302c:	push   0x30012360
30013031:	lea    ecx,[ebp-0x18]
30013034:	call   0x3000437e
30013039:	push   0x30012328
3001303e:	lea    ecx,[ebp-0x14]
30013041:	call   0x3000437e
30013046:	xor    ebx,ebx
30013048:	push   ecx
30013049:	lea    edx,[ebp-0x10]
3001304c:	mov    DWORD PTR [ebp-0x10],ebx
3001304f:	mov    DWORD PTR [ebp-0xc],ebx
30013052:	mov    DWORD PTR [ebp-0x8],ebx
30013055:	call   0x30012cee
3001305a:	mov    esi,eax
3001305c:	test   esi,esi
3001305e:	js     0x30013147
30013064:	lea    eax,[ebp-0xc]
30013067:	push   eax
30013068:	push   DWORD PTR [ebp+0x8]
3001306b:	call   0x30014456
30013070:	mov    esi,eax
30013072:	test   esi,esi
30013074:	js     0x30013147
3001307a:	lea    eax,[ebp-0x8]
3001307d:	push   eax
3001307e:	push   DWORD PTR [ebp+0x8]
30013081:	call   0x30012f28
30013086:	mov    esi,eax
30013088:	test   esi,esi
3001308a:	js     0x30013147
30013090:	push   DWORD PTR [ebp-0x10]
30013093:	mov    eax,DWORD PTR [ebp-0x1c]
30013096:	mov    edx,DWORD PTR [edi+0xc]
30013099:	push   DWORD PTR [eax-0xc]
3001309c:	mov    ecx,DWORD PTR [edx]
3001309e:	push   eax
3001309f:	push   ebx
300130a0:	lea    eax,[ebp-0x4]
300130a3:	push   eax
300130a4:	push   ebx
300130a5:	push   eax
300130a6:	push   edx
300130a7:	call   DWORD PTR [ecx+0x20]
300130aa:	mov    esi,eax
300130ac:	test   esi,esi
300130ae:	js     0x30013147
300130b4:	push   DWORD PTR [ebp-0xc]
300130b7:	mov    eax,DWORD PTR [ebp-0x18]
300130ba:	mov    edx,DWORD PTR [edi+0xc]
300130bd:	push   DWORD PTR [eax-0xc]
300130c0:	mov    ecx,DWORD PTR [edx]
300130c2:	push   eax
300130c3:	push   ebx
300130c4:	lea    eax,[ebp-0x4]
300130c7:	push   eax
300130c8:	push   ebx
300130c9:	push   eax
300130ca:	push   edx
300130cb:	call   DWORD PTR [ecx+0x20]
300130ce:	mov    esi,eax
300130d0:	test   esi,esi
300130d2:	js     0x30013147
300130d4:	mov    eax,DWORD PTR [ebp-0x18]
300130d7:	mov    edx,DWORD PTR [edi+0xc]
300130da:	push   DWORD PTR [eax-0xc]
300130dd:	mov    ecx,DWORD PTR [edx]
300130df:	push   eax
300130e0:	push   ebx
300130e1:	lea    eax,[ebp-0x4]
300130e4:	push   eax
300130e5:	push   ebx
300130e6:	push   eax
300130e7:	push   edx
300130e8:	call   DWORD PTR [ecx+0x24]
300130eb:	mov    esi,eax
300130ed:	test   esi,esi
300130ef:	js     0x30013147
300130f1:	push   DWORD PTR [ebp-0x8]
300130f4:	mov    eax,DWORD PTR [ebp-0x14]
300130f7:	mov    edx,DWORD PTR [edi+0xc]
300130fa:	push   DWORD PTR [eax-0xc]
300130fd:	mov    ecx,DWORD PTR [edx]
300130ff:	push   eax
30013100:	push   ebx
30013101:	lea    eax,[ebp-0x4]
30013104:	push   eax
30013105:	push   ebx
30013106:	push   eax
30013107:	push   edx
30013108:	call   DWORD PTR [ecx+0x20]
3001310b:	mov    esi,eax
3001310d:	test   esi,esi
3001310f:	js     0x30013147
30013111:	mov    eax,DWORD PTR [ebp-0x14]
30013114:	mov    edx,DWORD PTR [edi+0xc]
30013117:	push   DWORD PTR [eax-0xc]
3001311a:	mov    ecx,DWORD PTR [edx]
3001311c:	push   eax
3001311d:	push   ebx
3001311e:	lea    eax,[ebp-0x4]
30013121:	push   eax
30013122:	push   ebx
30013123:	push   eax
30013124:	push   edx
30013125:	call   DWORD PTR [ecx+0x24]
30013128:	mov    esi,eax
3001312a:	test   esi,esi
3001312c:	js     0x30013147
3001312e:	mov    eax,DWORD PTR [ebp-0x1c]
30013131:	mov    edx,DWORD PTR [edi+0xc]
30013134:	push   DWORD PTR [eax-0xc]
30013137:	mov    ecx,DWORD PTR [edx]
30013139:	push   eax
3001313a:	push   ebx
3001313b:	lea    eax,[ebp-0x4]
3001313e:	push   eax
3001313f:	push   ebx
30013140:	push   eax
30013141:	push   edx
30013142:	call   DWORD PTR [ecx+0x24]
30013145:	mov    esi,eax
30013147:	mov    eax,DWORD PTR [ebp-0x8]
3001314a:	test   eax,eax
3001314c:	je     0x30013154
3001314e:	mov    ecx,DWORD PTR [eax]
30013150:	push   eax
30013151:	call   DWORD PTR [ecx+0x8]
30013154:	mov    eax,DWORD PTR [ebp-0xc]
30013157:	test   eax,eax
30013159:	je     0x30013161
3001315b:	mov    ecx,DWORD PTR [eax]
3001315d:	push   eax
3001315e:	call   DWORD PTR [ecx+0x8]
30013161:	mov    eax,DWORD PTR [ebp-0x10]
30013164:	test   eax,eax
30013166:	je     0x3001316e
30013168:	mov    ecx,DWORD PTR [eax]
3001316a:	push   eax
3001316b:	call   DWORD PTR [ecx+0x8]
3001316e:	lea    ecx,[ebp-0x14]
30013171:	call   0x300051a4
30013176:	lea    ecx,[ebp-0x18]
30013179:	call   0x300051a4
3001317e:	lea    ecx,[ebp-0x1c]
30013181:	call   0x300051a4
30013186:	pop    edi
30013187:	mov    eax,esi
30013189:	pop    esi
3001318a:	pop    ebx
3001318b:	leave  
3001318c:	ret    0x4
3001318f:	push   ebp
30013190:	mov    ebp,esp
30013192:	mov    ecx,DWORD PTR [ebp+0x8]
30013195:	push   esi
30013196:	dec    DWORD PTR [ecx+0x4]
30013199:	mov    esi,DWORD PTR [ecx+0x4]
3001319c:	jne    0x300131a5
3001319e:	mov    edx,DWORD PTR [ecx]
300131a0:	push   0x1
300131a2:	call   DWORD PTR [edx+0x40]
300131a5:	mov    eax,esi
300131a7:	pop    esi
300131a8:	pop    ebp
300131a9:	ret    0x4
300131ac:	push   ebp
300131ad:	mov    ebp,esp
300131af:	push   esi
300131b0:	mov    esi,ecx
300131b2:	call   0x300131cc
300131b7:	test   BYTE PTR [ebp+0x8],0x1
300131bb:	je     0x300131c5
300131bd:	push   esi
300131be:	call   DWORD PTR ds:0x300452ac
300131c4:	pop    ecx
300131c5:	mov    eax,esi
300131c7:	pop    esi
300131c8:	pop    ebp
300131c9:	ret    0x4
300131cc:	push   esi
300131cd:	mov    esi,ecx
300131cf:	mov    DWORD PTR [esi],0x300131f8
300131d5:	mov    DWORD PTR [esi+0x4],0xc0000001
300131dc:	mov    ecx,DWORD PTR ds:0x300430f4
300131e2:	mov    eax,DWORD PTR [ecx]
300131e4:	call   DWORD PTR [eax+0x8]
300131e7:	lea    ecx,[esi+0x20]
300131ea:	call   0x30007014
300131ef:	lea    ecx,[esi+0x8]
300131f2:	pop    esi
300131f3:	jmp    0x30007014
300131f8:	mov    cl,0x2d
300131fa:	add    DWORD PTR [eax],esi
300131fc:	cmp    ch,BYTE PTR ds:0x318f3001
30013202:	add    DWORD PTR [eax],esi
30013204:	cmp    al,0x32
30013206:	add    DWORD PTR [eax],esi
30013208:	push   ecx
30013209:	jno    0x3001320e
3001320b:	xor    BYTE PTR [ecx+0x71],dl
3001320e:	add    esi,DWORD PTR [eax]
30013210:	adc    BYTE PTR [ebx],ch
30013212:	add    DWORD PTR [eax],esi
30013214:	pop    ecx
30013215:	jno    0x3001321a
30013217:	xor    BYTE PTR [esi+0x1c],al
3001321a:	add    esi,DWORD PTR [eax]
3001321c:	push   ecx
3001321d:	jno    0x30013222
3001321f:	xor    BYTE PTR [ecx+0x71],dl
30013222:	add    esi,DWORD PTR [eax]
30013224:	popa   
30013225:	jno    0x3001322a
30013227:	xor    BYTE PTR [ecx+0x71],ch
3001322a:	add    esi,DWORD PTR [eax]
3001322c:	test   DWORD PTR [ebx],ebp
3001322e:	add    DWORD PTR [eax],esi
30013230:	popa   
30013231:	jno    0x30013236
30013233:	xor    BYTE PTR [ecx+0x71],ch
30013236:	add    esi,DWORD PTR [eax]
30013238:	lods   al,BYTE PTR ds:[esi]
30013239:	xor    DWORD PTR [ecx],eax
3001323b:	xor    BYTE PTR [ebp-0x75],dl
3001323e:	in     al,dx
3001323f:	mov    ecx,DWORD PTR [ebp+0xc]
30013242:	test   ecx,ecx
30013244:	je     0x3002673c
3001324a:	mov    eax,DWORD PTR [ebp+0x8]
3001324d:	mov    eax,DWORD PTR [eax+0x10]
30013250:	mov    DWORD PTR [ecx],eax
30013252:	xor    eax,eax
30013254:	pop    ebp
30013255:	ret    0x8
30013258:	mov    edx,DWORD PTR [esi+0x14]
3001325b:	push   0x34
3001325d:	lea    ecx,[esi+0xc]
30013260:	call   0x30008f5d
30013265:	mov    edx,eax
30013267:	test   edx,edx
30013269:	je     0x300257ee
3001326f:	mov    ecx,DWORD PTR [esi+0x14]
30013272:	mov    eax,ecx
30013274:	imul   eax,eax,0x34
30013277:	add    eax,0xffffffd0
3001327a:	add    edx,eax
3001327c:	dec    ecx
3001327d:	js     0x3001329a
3001327f:	mov    eax,DWORD PTR [esi+0x10]
30013282:	mov    DWORD PTR [edx],eax
30013284:	mov    DWORD PTR [esi+0x10],edx
30013287:	sub    edx,0x34
3001328a:	jmp    0x3001327c
3001328c:	push   ebp
3001328d:	mov    ebp,esp
3001328f:	push   ebx
30013290:	push   esi
30013291:	mov    esi,ecx
30013293:	push   edi
30013294:	cmp    DWORD PTR [esi+0x10],0x0
30013298:	je     0x30013258
3001329a:	mov    edi,DWORD PTR [esi+0x10]
3001329d:	mov    ebx,DWORD PTR [edi]
3001329f:	test   edi,edi
300132a1:	je     0x300132ae
300132a3:	push   DWORD PTR [ebp+0x8]
300132a6:	lea    ecx,[edi+0x8]
300132a9:	call   0x3001298b
300132ae:	mov    ecx,DWORD PTR [ebp+0xc]
300132b1:	mov    DWORD PTR [esi+0x10],ebx
300132b4:	and    DWORD PTR [edi],0x0
300132b7:	mov    DWORD PTR [edi+0x4],ecx
300132ba:	inc    DWORD PTR [esi+0x8]
300132bd:	mov    eax,edi
300132bf:	pop    edi
300132c0:	pop    esi
300132c1:	pop    ebx
300132c2:	pop    ebp
300132c3:	ret    0xc
300132c6:	push   ebp
300132c7:	mov    ebp,esp
300132c9:	sub    esp,0x74
300132cc:	mov    eax,ds:0x30043050
300132d1:	xor    eax,ebp
300132d3:	mov    DWORD PTR [ebp-0x4],eax
300132d6:	push   ebx
300132d7:	push   esi
300132d8:	mov    esi,edx
300132da:	push   edi
300132db:	mov    DWORD PTR [ebp-0x6c],esi
300132de:	mov    ebx,ecx
300132e0:	xor    edi,edi
300132e2:	call   0x30010add
300132e7:	push   0x20019
300132ec:	push   DWORD PTR [esi]
300132ee:	xor    eax,eax
300132f0:	push   0x80000001
300132f5:	lea    ecx,[ebp-0x5c]
300132f8:	mov    DWORD PTR [ebp-0x5c],eax
300132fb:	mov    DWORD PTR [ebp-0x58],eax
300132fe:	mov    DWORD PTR [ebp-0x54],eax
30013301:	call   0x300051d9
30013306:	test   eax,eax
30013308:	jne    0x3002561f
3001330e:	and    DWORD PTR [ebp-0x48],edi
30013311:	push   0x32
30013313:	pop    esi
30013314:	lea    ecx,[ebp-0x44]
30013317:	mov    DWORD PTR [ebp-0x50],esi
3001331a:	call   0x300051c8
3001331f:	push   esi
30013320:	lea    ecx,[ebp-0x44]
30013323:	call   0x30004286
30013328:	mov    esi,DWORD PTR [ebp-0x44]
3001332b:	cmp    DWORD PTR [esi-0x4],0x1
3001332f:	jg     0x30025625
30013335:	lea    eax,[ebp-0x74]
30013338:	push   eax
30013339:	xor    eax,eax
3001333b:	push   eax
3001333c:	push   eax
3001333d:	push   eax
3001333e:	lea    eax,[ebp-0x50]
30013341:	push   eax
30013342:	push   esi
30013343:	push   DWORD PTR [ebp-0x48]
30013346:	push   DWORD PTR [ebp-0x5c]
30013349:	call   DWORD PTR ds:0x30045074
3001334f:	test   eax,eax
30013351:	jne    0x30013405
30013357:	lea    eax,[ebp-0x14]
3001335a:	push   eax
3001335b:	push   esi
3001335c:	call   DWORD PTR ds:0x3004549c
30013362:	mov    edi,eax
30013364:	test   edi,edi
30013366:	js     0x30013405
3001336c:	push   0x20019
30013371:	xor    eax,eax
30013373:	push   esi
30013374:	push   DWORD PTR [ebp-0x5c]
30013377:	lea    ecx,[ebp-0x68]
3001337a:	mov    DWORD PTR [ebp-0x68],eax
3001337d:	mov    DWORD PTR [ebp-0x64],eax
30013380:	mov    DWORD PTR [ebp-0x60],eax
30013383:	call   0x300051d9
30013388:	mov    edi,eax
3001338a:	test   edi,edi
3001338c:	jg     0x30025638
30013392:	js     0x300133fd
30013394:	lea    ecx,[ebp-0x40]
30013397:	call   0x30012df4
3001339c:	lea    esi,[ebp-0x14]
3001339f:	lea    edi,[ebp-0x3c]
300133a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300133a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300133a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300133a5:	lea    eax,[ebp-0x68]
300133a8:	push   eax
300133a9:	lea    ecx,[ebp-0x40]
300133ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300133ad:	call   0x30013452
300133b2:	mov    edi,eax
300133b4:	test   edi,edi
300133b6:	js     0x30025648
300133bc:	push   ecx
300133bd:	push   DWORD PTR [ebx+0x4]
300133c0:	lea    eax,[ebp-0x40]
300133c3:	push   eax
300133c4:	mov    ecx,ebx
300133c6:	call   0x3001328c
300133cb:	mov    ecx,DWORD PTR [ebx+0x4]
300133ce:	test   ecx,ecx
300133d0:	je     0x300133f9
300133d2:	mov    DWORD PTR [ecx],eax
300133d4:	mov    esi,DWORD PTR [ebp-0x44]
300133d7:	mov    DWORD PTR [ebx+0x4],eax
300133da:	inc    DWORD PTR [ebp-0x48]
300133dd:	lea    ecx,[ebp-0x40]
300133e0:	mov    DWORD PTR [ebp-0x50],0x32
300133e7:	call   0x30012777
300133ec:	lea    ecx,[ebp-0x68]
300133ef:	call   0x300051ae
300133f4:	jmp    0x3001332b
300133f9:	mov    DWORD PTR [ebx],eax
300133fb:	jmp    0x300133d4
300133fd:	lea    ecx,[ebp-0x68]
30013400:	call   0x300051ae
30013405:	lea    ecx,[ebp-0x44]
30013408:	call   0x300051a4
3001340d:	lea    ecx,[ebp-0x5c]
30013410:	call   0x300051ae
30013415:	mov    ecx,DWORD PTR [ebp-0x4]
30013418:	mov    eax,edi
3001341a:	pop    edi
3001341b:	pop    esi
3001341c:	xor    ecx,ebp
3001341e:	pop    ebx
3001341f:	call   0x3000115c
30013424:	leave  
30013425:	ret    
30013426:	push   ebp
30013427:	mov    ebp,esp
30013429:	cmp    DWORD PTR [ebp+0x8],0x0
3001342d:	push   edi
3001342e:	mov    edi,ecx
30013430:	je     0x30025f6f
30013436:	push   DWORD PTR [ebp+0x8]
30013439:	call   0x300042e4
3001343e:	pop    ecx
3001343f:	push   eax
30013440:	push   DWORD PTR [ebp+0x8]
30013443:	lea    ecx,[edi+0x20]
30013446:	call   0x3000416f
3001344b:	xor    eax,eax
3001344d:	pop    edi
3001344e:	pop    ebp
3001344f:	ret    0x4
30013452:	push   ebp
30013453:	mov    ebp,esp
30013455:	sub    esp,0x28
30013458:	push   ebx
30013459:	push   esi
3001345a:	push   edi
3001345b:	mov    edi,ecx
3001345d:	lea    ecx,[ebp-0x18]
30013460:	call   0x300051c8
30013465:	lea    ecx,[ebp-0x14]
30013468:	call   0x300051c8
3001346d:	lea    ecx,[ebp-0xc]
30013470:	call   0x300051c8
30013475:	lea    ecx,[ebp-0x8]
30013478:	call   0x300051c8
3001347d:	lea    ecx,[ebp-0x10]
30013480:	call   0x300051c8
30013485:	lea    ecx,[ebp-0x1c]
30013488:	call   0x300051c8
3001348d:	mov    eax,DWORD PTR [edi]
3001348f:	lea    ecx,[ebp-0x1c]
30013492:	push   ecx
30013493:	mov    ecx,edi
30013495:	call   DWORD PTR [eax+0xc]
30013498:	push   0x300122fc
3001349d:	lea    ecx,[ebp-0x20]
300134a0:	call   0x3000437e
300134a5:	mov    ebx,DWORD PTR [ebp+0x8]
300134a8:	lea    eax,[ebp-0x18]
300134ab:	push   eax
300134ac:	lea    edx,[ebp-0x20]
300134af:	mov    ecx,ebx
300134b1:	call   0x3000e5e4
300134b6:	lea    ecx,[ebp-0x20]
300134b9:	mov    esi,eax
300134bb:	call   0x300051a4
300134c0:	test   esi,esi
300134c2:	js     0x30025f79
300134c8:	push   0x30012308
300134cd:	lea    ecx,[ebp+0x8]
300134d0:	call   0x3000437e
300134d5:	lea    eax,[ebp-0x14]
300134d8:	push   eax
300134d9:	lea    edx,[ebp+0x8]
300134dc:	mov    ecx,ebx
300134de:	call   0x3000e5e4
300134e3:	lea    ecx,[ebp+0x8]
300134e6:	mov    esi,eax
300134e8:	call   0x300051a4
300134ed:	test   esi,esi
300134ef:	js     0x30025f8f
300134f5:	lea    eax,[ebp-0x10]
300134f8:	push   eax
300134f9:	lea    edx,[ebp-0x1c]
300134fc:	mov    ecx,ebx
300134fe:	call   0x3000e5e4
30013503:	mov    esi,eax
30013505:	test   esi,esi
30013507:	js     0x30025fa5
3001350d:	push   0x30012328
30013512:	lea    ecx,[ebp+0x8]
30013515:	call   0x3000437e
3001351a:	lea    eax,[ebp-0x8]
3001351d:	push   eax
3001351e:	lea    edx,[ebp+0x8]
30013521:	mov    ecx,ebx
30013523:	call   0x3000e5e4
30013528:	lea    ecx,[ebp+0x8]
3001352b:	mov    esi,eax
3001352d:	call   0x300051a4
30013532:	test   esi,esi
30013534:	js     0x30025fbb
3001353a:	push   0x30014540
3001353f:	lea    ecx,[ebp+0x8]
30013542:	call   0x3000437e
30013547:	lea    eax,[ebp-0xc]
3001354a:	push   eax
3001354b:	lea    edx,[ebp+0x8]
3001354e:	mov    ecx,ebx
30013550:	call   0x3000e5e4
30013555:	test   eax,eax
30013557:	lea    ecx,[ebp+0x8]
3001355a:	sets   bl
3001355d:	call   0x300051a4
30013562:	test   bl,bl
30013564:	jne    0x30026003
3001356a:	mov    ecx,DWORD PTR [ebp-0x10]
3001356d:	xor    eax,eax
3001356f:	lea    edx,[ebp-0x24]
30013572:	mov    DWORD PTR [ebp-0x24],eax
30013575:	mov    DWORD PTR [ebp-0x20],eax
30013578:	call   0x3001279b
3001357d:	mov    esi,eax
3001357f:	test   esi,esi
30013581:	js     0x3002601e
30013587:	push   DWORD PTR [ebp-0x18]
3001358a:	mov    ecx,edi
3001358c:	call   0x30012063
30013591:	mov    esi,eax
30013593:	test   esi,esi
30013595:	js     0x30026028
3001359b:	push   DWORD PTR [ebp-0x14]
3001359e:	mov    ecx,edi
300135a0:	call   0x3001372a
300135a5:	mov    esi,eax
300135a7:	test   esi,esi
300135a9:	js     0x30026032
300135af:	push   DWORD PTR [ebp-0xc]
300135b2:	mov    ecx,edi
300135b4:	call   0x3001208f
300135b9:	mov    esi,eax
300135bb:	test   esi,esi
300135bd:	js     0x3002603c
300135c3:	push   DWORD PTR [ebp-0x8]
300135c6:	mov    ecx,edi
300135c8:	call   0x30013426
300135cd:	mov    esi,eax
300135cf:	test   esi,esi
300135d1:	js     0x30026046
300135d7:	lea    eax,[ebp-0x24]
300135da:	push   eax
300135db:	lea    ecx,[edi+0x24]
300135de:	call   0x30012906
300135e3:	xor    esi,esi
300135e5:	lea    ecx,[ebp-0x1c]
300135e8:	call   0x300051a4
300135ed:	lea    ecx,[ebp-0x10]
300135f0:	call   0x300051a4
300135f5:	lea    ecx,[ebp-0x8]
300135f8:	call   0x300051a4
300135fd:	lea    ecx,[ebp-0xc]
30013600:	call   0x300051a4
30013605:	lea    ecx,[ebp-0x14]
30013608:	call   0x300051a4
3001360d:	lea    ecx,[ebp-0x18]
30013610:	call   0x300051a4
30013615:	pop    edi
30013616:	mov    eax,esi
30013618:	pop    esi
30013619:	pop    ebx
3001361a:	leave  
3001361b:	ret    0x4
3001361e:	push   ebp
3001361f:	mov    ebp,esp
30013621:	push   esi
30013622:	mov    esi,0x30013640
30013627:	push   esi
30013628:	call   0x300042e4
3001362d:	pop    ecx
3001362e:	mov    ecx,DWORD PTR [ebp+0x8]
30013631:	push   eax
30013632:	push   esi
30013633:	call   0x3000416f
30013638:	pop    esi
30013639:	pop    ebp
3001363a:	ret    0x4
3001363d:	nop
3001363e:	nop
3001363f:	nop
30013640:	jbe    0x30013642
30013642:	add    BYTE PTR gs:[edx+0x0],dh
30013646:	jae    0x30013648
30013648:	imul   eax,DWORD PTR [eax],0x6e006f
3001364e:	add    BYTE PTR [eax],al
30013650:	push   ebp
30013651:	mov    ebp,esp
30013653:	sub    esp,0xc
30013656:	lea    ecx,[ebp-0xc]
30013659:	push   ebx
3001365a:	push   0x300136f0
3001365f:	call   0x3000437e
30013664:	push   DWORD PTR [ebp+0x8]
30013667:	lea    ecx,[ebp-0xc]
3001366a:	call   0x3000927b
3001366f:	test   eax,eax
30013671:	je     0x3002622a
30013677:	push   DWORD PTR [ebp+0x8]
3001367a:	lea    ecx,[ebp-0x4]
3001367d:	call   0x3000437e
30013682:	mov    eax,DWORD PTR [ebp-0x4]
30013685:	cmp    DWORD PTR [eax-0xc],0x10
30013689:	jne    0x30026231
3001368f:	push   esi
30013690:	push   0x300136fc
30013695:	lea    ecx,[ebp-0x8]
30013698:	call   0x3000437e
3001369d:	mov    eax,DWORD PTR [ebp-0x4]
300136a0:	xor    ebx,ebx
300136a2:	mov    esi,ebx
300136a4:	cmp    DWORD PTR [eax-0xc],ebx
300136a7:	jle    0x300136cd
300136a9:	push   ebx
300136aa:	push   esi
300136ab:	lea    ecx,[ebp-0x4]
300136ae:	call   0x30008e17
300136b3:	movzx  eax,ax
300136b6:	push   eax
300136b7:	lea    ecx,[ebp-0x8]
300136ba:	call   0x300091f2
300136bf:	cmp    eax,0xffffffff
300136c2:	je     0x300136cf
300136c4:	mov    eax,DWORD PTR [ebp-0x4]
300136c7:	inc    esi
300136c8:	cmp    esi,DWORD PTR [eax-0xc]
300136cb:	jl     0x300136a9
300136cd:	mov    bl,0x1
300136cf:	lea    ecx,[ebp-0x8]
300136d2:	call   0x300051a4
300136d7:	pop    esi
300136d8:	lea    ecx,[ebp-0x4]
300136db:	call   0x300051a4
300136e0:	lea    ecx,[ebp-0xc]
300136e3:	call   0x300051a4
300136e8:	mov    al,bl
300136ea:	pop    ebx
300136eb:	leave  
300136ec:	ret    0x4
300136ef:	nop
300136f0:	outs   dx,BYTE PTR ds:[esi]
300136f1:	add    BYTE PTR [ebp+0x0],dh
300136f4:	ins    BYTE PTR es:[edi],dx
300136f5:	add    BYTE PTR [eax+eax*1+0x0],ch
300136f9:	add    BYTE PTR [eax+0x32003190],dl
300136ff:	add    BYTE PTR [ebx],dh
30013701:	add    BYTE PTR [eax+eax*1],dh
30013704:	xor    eax,0x37003600
30013709:	add    BYTE PTR [eax],bh
3001370b:	add    BYTE PTR [ecx],bh
3001370d:	add    BYTE PTR [eax],dh
3001370f:	add    BYTE PTR [ecx+0x0],ah
30013712:	bound  eax,QWORD PTR [eax]
30013714:	arpl   WORD PTR [eax],ax
30013716:	add    BYTE PTR fs:[ebp+0x0],ah
3001371a:	data16 add BYTE PTR [ecx+0x0],al
3001371e:	inc    edx
3001371f:	add    BYTE PTR [ebx+0x0],al
30013722:	inc    esp
30013723:	add    BYTE PTR [ebp+0x0],al
30013726:	inc    esi
30013727:	add    BYTE PTR [eax],al
30013729:	add    BYTE PTR [ebp-0x75],dl
3001372c:	in     al,dx
3001372d:	push   esi
3001372e:	mov    esi,DWORD PTR [ebp+0x8]
30013731:	push   edi
30013732:	mov    edi,ecx
30013734:	test   esi,esi
30013736:	je     0x30025f51
3001373c:	push   esi
3001373d:	call   0x30013650
30013742:	test   al,al
30013744:	je     0x30025f5b
3001374a:	push   esi
3001374b:	lea    ecx,[ebp+0x8]
3001374e:	call   0x3000437e
30013753:	mov    eax,DWORD PTR [ebp+0x8]
30013756:	lea    ecx,[ebp+0x8]
30013759:	mov    esi,DWORD PTR [eax-0xc]
3001375c:	push   esi
3001375d:	call   0x30004286
30013762:	lea    ecx,[esi+0x1]
30013765:	push   ecx
30013766:	push   eax
30013767:	call   DWORD PTR ds:0x30045358
3001376d:	pop    ecx
3001376e:	pop    ecx
3001376f:	push   esi
30013770:	lea    ecx,[ebp+0x8]
30013773:	call   0x30004147
30013778:	lea    eax,[ebp+0x8]
3001377b:	push   eax
3001377c:	lea    ecx,[edi+0x18]
3001377f:	call   0x300014c1
30013784:	lea    ecx,[ebp+0x8]
30013787:	call   0x300051a4
3001378c:	xor    eax,eax
3001378e:	pop    edi
3001378f:	pop    esi
30013790:	pop    ebp
30013791:	ret    0x4
30013794:	push   ebp
30013795:	mov    ebp,esp
30013797:	mov    edx,DWORD PTR [ebp+0xc]
3001379a:	push   esi
3001379b:	mov    esi,ecx
3001379d:	test   edx,edx
3001379f:	je     0x3001f644
300137a5:	push   ebx
300137a6:	mov    ecx,edx
300137a8:	push   edi
300137a9:	lea    edi,[ecx+0x2]
300137ac:	xor    ebx,ebx
300137ae:	mov    ax,WORD PTR [ecx]
300137b1:	add    ecx,0x2
300137b4:	cmp    ax,bx
300137b7:	jne    0x300137ae
300137b9:	sub    ecx,edi
300137bb:	sar    ecx,1
300137bd:	lea    eax,[ecx*2+0x2]
300137c4:	push   eax
300137c5:	push   edx
300137c6:	push   0x1
300137c8:	push   ebx
300137c9:	push   DWORD PTR [ebp+0x8]
300137cc:	push   DWORD PTR [esi]
300137ce:	call   DWORD PTR ds:0x30045010
300137d4:	pop    edi
300137d5:	pop    ebx
300137d6:	pop    esi
300137d7:	pop    ebp
300137d8:	ret    0xc
300137db:	push   ebp
300137dc:	mov    ebp,esp
300137de:	mov    eax,DWORD PTR [ebp+0x8]
300137e1:	push   ecx
300137e2:	push   DWORD PTR [eax]
300137e4:	push   DWORD PTR [edx]
300137e6:	call   0x30013794
300137eb:	test   eax,eax
300137ed:	jg     0x30024612
300137f3:	pop    ebp
300137f4:	ret    0x4
300137f7:	mov    eax,DWORD PTR [ebp+0x8]
300137fa:	push   ebx
300137fb:	add    eax,0x48
300137fe:	push   edi
300137ff:	xor    ebx,ebx
30013801:	push   eax
30013802:	lea    ecx,[ebp-0x4]
30013805:	mov    DWORD PTR [ebp-0x14],ebx
30013808:	mov    DWORD PTR [ebp-0x10],ebx
3001380b:	mov    DWORD PTR [ebp-0xc],ebx
3001380e:	mov    DWORD PTR [ebp-0x8],eax
30013811:	call   0x30004340
30013816:	push   0x20006
3001381b:	push   DWORD PTR [ebp-0x4]
3001381e:	lea    ecx,[ebp-0x14]
30013821:	push   0x80000001
30013826:	call   0x300051d9
3001382b:	mov    edi,eax
3001382d:	test   edi,edi
3001382f:	jg     0x30022f9e
30013835:	lea    ecx,[ebp-0x4]
30013838:	call   0x300051a4
3001383d:	test   edi,edi
3001383f:	js     0x30022fac
30013845:	push   0x3000e6b0
3001384a:	lea    ecx,[ebp-0x4]
3001384d:	call   0x3000437e
30013852:	lea    eax,[esi+0x28]
30013855:	push   eax
30013856:	lea    edx,[ebp-0x4]
30013859:	lea    ecx,[ebp-0x14]
3001385c:	call   0x300137db
30013861:	lea    ecx,[ebp-0x4]
30013864:	mov    edi,eax
30013866:	call   0x300051a4
3001386b:	test   edi,edi
3001386d:	js     0x300138fa
30013873:	push   0x3000e654
30013878:	lea    ecx,[ebp-0x4]
3001387b:	call   0x3000437e
30013880:	lea    eax,[esi+0x40]
30013883:	push   eax
30013884:	lea    edx,[ebp-0x4]
30013887:	lea    ecx,[ebp-0x14]
3001388a:	call   0x300137db
3001388f:	lea    ecx,[ebp-0x4]
30013892:	mov    edi,eax
30013894:	call   0x300051a4
30013899:	test   edi,edi
3001389b:	js     0x300138fa
3001389d:	push   0x3000e6e0
300138a2:	lea    ecx,[ebp-0x4]
300138a5:	call   0x3000437e
300138aa:	lea    eax,[esi+0x3c]
300138ad:	push   eax
300138ae:	lea    edx,[ebp-0x4]
300138b1:	lea    ecx,[ebp-0x14]
300138b4:	call   0x300137db
300138b9:	lea    ecx,[ebp-0x4]
300138bc:	mov    edi,eax
300138be:	call   0x300051a4
300138c3:	test   edi,edi
300138c5:	js     0x300138fa
300138c7:	push   0x3000e678
300138cc:	lea    ecx,[ebp-0x4]
300138cf:	call   0x3000437e
300138d4:	lea    eax,[esi+0x44]
300138d7:	push   eax
300138d8:	lea    edx,[ebp-0x4]
300138db:	lea    ecx,[ebp-0x14]
300138de:	call   0x300137db
300138e3:	lea    ecx,[ebp-0x4]
300138e6:	mov    edi,eax
300138e8:	call   0x300051a4
300138ed:	test   edi,edi
300138ef:	js     0x300138fa
300138f1:	cmp    DWORD PTR [esi+0x54],ebx
300138f4:	ja     0x30022ff4
300138fa:	lea    ecx,[ebp-0x14]
300138fd:	call   0x300051ae
30013902:	mov    eax,edi
30013904:	pop    edi
30013905:	pop    ebx
30013906:	jmp    0x3001128d
3001390b:	push   ebp
3001390c:	mov    ebp,esp
3001390e:	push   esi
3001390f:	mov    esi,DWORD PTR [ebp+0x8]
30013912:	test   esi,esi
30013914:	je     0x300255ec
3001391a:	push   edi
3001391b:	push   esi
3001391c:	push   0x30013978
30013921:	push   0x1
30013923:	push   0x0
30013925:	push   0x30013968
3001392a:	call   DWORD PTR ds:0x30045494
30013930:	mov    edi,eax
30013932:	test   edi,edi
30013934:	js     0x3001395f
30013936:	mov    esi,DWORD PTR [esi]
30013938:	test   esi,esi
3001393a:	je     0x30013942
3001393c:	mov    eax,DWORD PTR [esi]
3001393e:	push   esi
3001393f:	call   DWORD PTR [eax+0x4]
30013942:	cmp    DWORD PTR [ebp+0x10],0x0
30013946:	je     0x30013953
30013948:	push   DWORD PTR [ebp+0x10]
3001394b:	mov    eax,DWORD PTR [esi]
3001394d:	push   esi
3001394e:	call   DWORD PTR [eax+0x28]
30013951:	mov    edi,eax
30013953:	test   esi,esi
30013955:	je     0x3001395d
30013957:	mov    eax,DWORD PTR [esi]
30013959:	push   esi
3001395a:	call   DWORD PTR [eax+0x8]
3001395d:	mov    eax,edi
3001395f:	pop    edi
30013960:	pop    esi
30013961:	pop    ebp
30013962:	ret    0xc
30013965:	nop
30013966:	nop
30013967:	nop
30013968:	or     al,0x6a
3001396a:	(bad)  [eax+0x11d4f192]
30013970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
30013971:	pop    edi
30013972:	add    BYTE PTR [eax-0x6a],al
30013975:	xor    dl,BYTE PTR [ecx-0x1b]
30013978:	shr    BYTE PTR [esi-0x7],1
3001397b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3001397c:	sub    eax,edi
3001397e:	outs   dx,BYTE PTR ds:[esi]
3001397f:	inc    edi
30013980:	add    eax,0x2abdc7cd
30013986:	or     BYTE PTR [edx],al
30013988:	push   ebp
30013989:	mov    ebp,esp
3001398b:	sub    esp,0x3c
3001398e:	and    DWORD PTR [ebp-0xc],0x0
30013992:	push   ebx
30013993:	push   esi
30013994:	push   edi
30013995:	lea    eax,[ebp-0xc]
30013998:	push   eax
30013999:	mov    ebx,ecx
3001399b:	call   0x300120bb
300139a0:	mov    esi,eax
300139a2:	test   esi,esi
300139a4:	js     0x30013b76
300139aa:	and    DWORD PTR [ebp-0x8],0x0
300139ae:	push   0x300430f0
300139b3:	push   0x40
300139b5:	call   0x30006cc2
300139ba:	pop    ecx
300139bb:	pop    ecx
300139bc:	test   eax,eax
300139be:	je     0x30013b8a
300139c4:	push   ecx
300139c5:	mov    ecx,eax
300139c7:	call   0x30013fac
300139cc:	mov    edi,eax
300139ce:	mov    esi,edi
300139d0:	neg    esi
300139d2:	sbb    esi,esi
300139d4:	not    esi
300139d6:	and    esi,0x8007000e
300139dc:	jl     0x30013b69
300139e2:	test   edi,edi
300139e4:	je     0x30013a22
300139e6:	mov    eax,DWORD PTR [edi]
300139e8:	push   edi
300139e9:	call   DWORD PTR [eax+0x4]
300139ec:	lea    eax,[ebx+0x2c]
300139ef:	push   eax
300139f0:	lea    eax,[ebx+0x14]
300139f3:	push   eax
300139f4:	push   DWORD PTR [ebp-0xc]
300139f7:	mov    ecx,edi
300139f9:	call   0x30013c33
300139fe:	mov    esi,eax
30013a00:	test   esi,esi
30013a02:	js     0x30013a1c
30013a04:	mov    eax,DWORD PTR [edi]
30013a06:	lea    ecx,[ebp-0x8]
30013a09:	push   ecx
30013a0a:	push   0x30014070
30013a0f:	push   edi
30013a10:	call   DWORD PTR [eax]
30013a12:	mov    esi,eax
30013a14:	test   esi,esi
30013a16:	js     0x30024cb5
30013a1c:	mov    eax,DWORD PTR [edi]
30013a1e:	push   edi
30013a1f:	call   DWORD PTR [eax+0x8]
30013a22:	test   esi,esi
30013a24:	js     0x30013b69
30013a2a:	push   DWORD PTR [ebp-0x8]
30013a2d:	and    DWORD PTR [ebp-0x18],0x0
30013a31:	push   ecx
30013a32:	lea    eax,[ebp-0x18]
30013a35:	push   eax
30013a36:	call   0x3001390b
30013a3b:	mov    esi,eax
30013a3d:	test   esi,esi
30013a3f:	js     0x30013b5c
30013a45:	lea    edi,[ebx+0xc]
30013a48:	push   edi
30013a49:	lea    ecx,[ebp-0x4]
30013a4c:	call   0x30004340
30013a51:	lea    ecx,[ebp-0x4]
30013a54:	call   0x300089c3
30013a59:	test   eax,eax
30013a5b:	je     0x30013b99
30013a61:	push   DWORD PTR [ebp-0x4]
30013a64:	call   DWORD PTR ds:0x3004560c
30013a6a:	test   eax,eax
30013a6c:	jne    0x30013b99
30013a72:	push   DWORD PTR [ebp-0x4]
30013a75:	call   DWORD PTR ds:0x30045638
30013a7b:	test   eax,eax
30013a7d:	je     0x30024cbe
30013a83:	lea    ecx,[ebp-0x14]
30013a86:	call   0x30012c84
30013a8b:	lea    eax,[ebp-0x14]
30013a8e:	push   eax
30013a8f:	push   0x0
30013a91:	push   0x1
30013a93:	push   0x80
30013a98:	push   0x1022
30013a9d:	push   DWORD PTR [edi]
30013a9f:	call   DWORD PTR ds:0x3004564c
30013aa5:	mov    esi,eax
30013aa7:	test   esi,esi
30013aa9:	js     0x30013b4c
30013aaf:	push   0xd
30013ab1:	pop    eax
30013ab2:	mov    WORD PTR [ebp-0x38],ax
30013ab6:	mov    eax,DWORD PTR [ebp-0x14]
30013ab9:	mov    DWORD PTR [ebp-0x30],eax
30013abc:	test   eax,eax
30013abe:	je     0x30013ac6
30013ac0:	mov    ecx,DWORD PTR [eax]
30013ac2:	push   eax
30013ac3:	call   DWORD PTR [ecx+0x4]
30013ac6:	mov    eax,DWORD PTR [ebp-0xc]
30013ac9:	sub    esp,0x10
30013acc:	mov    ecx,DWORD PTR [eax]
30013ace:	mov    edi,esp
30013ad0:	lea    esi,[ebp-0x38]
30013ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013ad6:	push   eax
30013ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013ad8:	call   DWORD PTR [ecx+0x1c]
30013adb:	mov    esi,eax
30013add:	test   esi,esi
30013adf:	js     0x30013b42
30013ae1:	lea    ecx,[ebp-0x10]
30013ae4:	call   0x30012c84
30013ae9:	lea    eax,[ebp-0x10]
30013aec:	push   eax
30013aed:	xor    eax,eax
30013aef:	push   eax
30013af0:	push   eax
30013af1:	push   eax
30013af2:	push   eax
30013af3:	push   DWORD PTR [ebx+0x8]
30013af6:	call   DWORD PTR ds:0x3004564c
30013afc:	mov    esi,eax
30013afe:	test   esi,esi
30013b00:	js     0x30013b3a
30013b02:	push   0xd
30013b04:	pop    eax
30013b05:	mov    WORD PTR [ebp-0x28],ax
30013b09:	mov    eax,DWORD PTR [ebp-0x10]
30013b0c:	mov    DWORD PTR [ebp-0x20],eax
30013b0f:	test   eax,eax
30013b11:	je     0x30013b19
30013b13:	mov    ecx,DWORD PTR [eax]
30013b15:	push   eax
30013b16:	call   DWORD PTR [ecx+0x4]
30013b19:	mov    eax,DWORD PTR [ebp-0x18]
30013b1c:	sub    esp,0x10
30013b1f:	mov    ecx,DWORD PTR [eax]
30013b21:	mov    edi,esp
30013b23:	lea    esi,[ebp-0x28]
30013b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013b29:	push   eax
30013b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30013b2b:	call   DWORD PTR [ecx+0x4c]
30013b2e:	mov    esi,eax
30013b30:	lea    eax,[ebp-0x28]
30013b33:	push   eax
30013b34:	call   DWORD PTR ds:0x300454e0
30013b3a:	lea    ecx,[ebp-0x10]
30013b3d:	call   0x300122e2
30013b42:	lea    eax,[ebp-0x38]
30013b45:	push   eax
30013b46:	call   DWORD PTR ds:0x300454e0
30013b4c:	lea    ecx,[ebp-0x14]
30013b4f:	call   0x300122e2
30013b54:	lea    ecx,[ebp-0x4]
30013b57:	call   0x300051a4
30013b5c:	mov    eax,DWORD PTR [ebp-0x18]
30013b5f:	test   eax,eax
30013b61:	je     0x30013b69
30013b63:	mov    ecx,DWORD PTR [eax]
30013b65:	push   eax
30013b66:	call   DWORD PTR [ecx+0x8]
30013b69:	mov    eax,DWORD PTR [ebp-0x8]
30013b6c:	test   eax,eax
30013b6e:	je     0x30013b76
30013b70:	mov    ecx,DWORD PTR [eax]
30013b72:	push   eax
30013b73:	call   DWORD PTR [ecx+0x8]
30013b76:	mov    ecx,DWORD PTR [ebp-0xc]
30013b79:	test   ecx,ecx
30013b7b:	je     0x30013b83
30013b7d:	mov    edx,DWORD PTR [ecx]
30013b7f:	push   ecx
30013b80:	call   DWORD PTR [edx+0x8]
30013b83:	pop    edi
30013b84:	mov    eax,esi
30013b86:	pop    esi
30013b87:	pop    ebx
30013b88:	leave  
30013b89:	ret    
30013b8a:	xor    edi,edi
30013b8c:	jmp    0x300139ce
30013b91:	jns    0x30013a83
30013b97:	jmp    0x30013b54
30013b99:	mov    esi,0x8000ffff
30013b9e:	jmp    0x30013b54
30013ba0:	push   ebp
30013ba1:	mov    ebp,esp
30013ba3:	mov    ecx,DWORD PTR [ebp+0x8]
30013ba6:	push   esi
30013ba7:	dec    DWORD PTR [ecx+0x4]
30013baa:	mov    esi,DWORD PTR [ecx+0x4]
30013bad:	je     0x30013bb6
30013baf:	mov    eax,esi
30013bb1:	pop    esi
30013bb2:	pop    ebp
30013bb3:	ret    0x4
30013bb6:	mov    edx,DWORD PTR [ecx]
30013bb8:	push   0x1
30013bba:	call   DWORD PTR [edx+0x38]
30013bbd:	jmp    0x30013baf
30013bbf:	push   ebp
30013bc0:	mov    ebp,esp
30013bc2:	push   esi
30013bc3:	mov    esi,ecx
30013bc5:	call   0x30013bdf
30013bca:	test   BYTE PTR [ebp+0x8],0x1
30013bce:	je     0x30013bd8
30013bd0:	push   esi
30013bd1:	call   DWORD PTR ds:0x300452ac
30013bd7:	pop    ecx
30013bd8:	mov    eax,esi
30013bda:	pop    esi
30013bdb:	pop    ebp
30013bdc:	ret    0x4
30013bdf:	push   esi
30013be0:	mov    esi,ecx
30013be2:	mov    DWORD PTR [esi],0x30014000
30013be8:	mov    DWORD PTR [esi+0x4],0xc0000001
30013bef:	mov    ecx,DWORD PTR ds:0x300430f4
30013bf5:	mov    eax,DWORD PTR [ecx]
30013bf7:	call   DWORD PTR [eax+0x8]
30013bfa:	mov    ecx,esi
30013bfc:	pop    esi
30013bfd:	push   esi
30013bfe:	mov    esi,ecx
30013c00:	lea    ecx,[esi+0x28]
30013c03:	call   0x30010add
30013c08:	lea    ecx,[esi+0x10]
30013c0b:	call   0x30010add
30013c10:	mov    edx,DWORD PTR [esi+0xc]
30013c13:	test   edx,edx
30013c15:	je     0x30013c1d
30013c17:	mov    eax,DWORD PTR [edx]
30013c19:	push   edx
30013c1a:	call   DWORD PTR [eax+0x8]
30013c1d:	mov    ecx,DWORD PTR [esi+0x8]
30013c20:	pop    esi
30013c21:	test   ecx,ecx
30013c23:	je     0x30013c2b
30013c25:	mov    eax,DWORD PTR [ecx]
30013c27:	push   ecx
30013c28:	call   DWORD PTR [eax+0x8]
30013c2b:	ret    
30013c2c:	mov    DWORD PTR [ebx],eax
30013c2e:	jmp    0x30013cd7
30013c33:	push   ebp
30013c34:	mov    ebp,esp
30013c36:	sub    esp,0x3c
30013c39:	push   esi
30013c3a:	push   edi
30013c3b:	mov    edi,DWORD PTR [ebp+0x8]
30013c3e:	mov    esi,ecx
30013c40:	test   edi,edi
30013c42:	je     0x30026238
30013c48:	cmp    DWORD PTR [ebp+0xc],0x0
30013c4c:	je     0x30026238
30013c52:	cmp    DWORD PTR [ebp+0x10],0x0
30013c56:	je     0x30026238
30013c5c:	cmp    DWORD PTR [esi+0x8],edi
30013c5f:	je     0x30013c75
30013c61:	mov    eax,DWORD PTR [edi]
30013c63:	push   edi
30013c64:	call   DWORD PTR [eax+0x4]
30013c67:	mov    eax,DWORD PTR [esi+0x8]
30013c6a:	mov    DWORD PTR [esi+0x8],edi
30013c6d:	test   eax,eax
30013c6f:	jne    0x30026242
30013c75:	mov    ecx,DWORD PTR [esi+0x8]
30013c78:	lea    eax,[esi+0xc]
30013c7b:	mov    edx,DWORD PTR [ecx]
30013c7d:	push   eax
30013c7e:	push   0x30014070
30013c83:	push   ecx
30013c84:	call   DWORD PTR [edx]
30013c86:	mov    DWORD PTR [ebp+0x8],eax
30013c89:	test   eax,eax
30013c8b:	js     0x30013cf5
30013c8d:	push   ebx
30013c8e:	lea    ebx,[esi+0x10]
30013c91:	mov    ecx,ebx
30013c93:	call   0x30010add
30013c98:	lea    edi,[esi+0x28]
30013c9b:	mov    ecx,edi
30013c9d:	call   0x30010add
30013ca2:	mov    eax,DWORD PTR [ebp+0xc]
30013ca5:	mov    esi,DWORD PTR [eax]
30013ca7:	test   esi,esi
30013ca9:	je     0x30013ce4
30013cab:	mov    eax,esi
30013cad:	mov    esi,DWORD PTR [esi]
30013caf:	add    eax,0x8
30013cb2:	push   eax
30013cb3:	lea    ecx,[ebp-0x2c]
30013cb6:	call   0x3001298b
30013cbb:	push   ecx
30013cbc:	push   DWORD PTR [ebx+0x4]
30013cbf:	lea    eax,[ebp-0x2c]
30013cc2:	push   eax
30013cc3:	mov    ecx,ebx
30013cc5:	call   0x3001328c
30013cca:	mov    ecx,DWORD PTR [ebx+0x4]
30013ccd:	test   ecx,ecx
30013ccf:	je     0x30013c2c
30013cd5:	mov    DWORD PTR [ecx],eax
30013cd7:	lea    ecx,[ebp-0x2c]
30013cda:	mov    DWORD PTR [ebx+0x4],eax
30013cdd:	call   0x30012777
30013ce2:	jmp    0x30013ca7
30013ce4:	mov    eax,DWORD PTR [ebp+0x10]
30013ce7:	pop    ebx
30013ce8:	mov    esi,DWORD PTR [eax]
30013cea:	test   esi,esi
30013cec:	jne    0x3002624d
30013cf2:	mov    eax,DWORD PTR [ebp+0x8]
30013cf5:	pop    edi
30013cf6:	pop    esi
30013cf7:	leave  
30013cf8:	ret    0xc
30013cfb:	push   ebp
30013cfc:	mov    ebp,esp
30013cfe:	sub    esp,0xac
30013d04:	mov    eax,DWORD PTR [ecx+0x2c]
30013d07:	mov    DWORD PTR [ebp-0x18],eax
30013d0a:	test   eax,eax
30013d0c:	jne    0x30025256
30013d12:	xor    eax,eax
30013d14:	leave  
30013d15:	ret    
30013d16:	mov    ecx,ebx
30013d18:	call   0x30013e1f
30013d1d:	mov    edi,eax
30013d1f:	test   edi,edi
30013d21:	js     0x3001148d
30013d27:	mov    ecx,ebx
30013d29:	call   0x30013d7b
30013d2e:	mov    edi,eax
30013d30:	test   edi,edi
30013d32:	js     0x3001148d
30013d38:	mov    ecx,ebx
30013d3a:	call   0x300129d0
30013d3f:	mov    edi,eax
30013d41:	test   edi,edi
30013d43:	js     0x3001148d
30013d49:	mov    ecx,ebx
30013d4b:	call   0x30013cfb
30013d50:	mov    edi,eax
30013d52:	test   edi,edi
30013d54:	js     0x3001148d
30013d5a:	mov    ecx,ebx
30013d5c:	call   0x30013988
30013d61:	test   eax,eax
30013d63:	js     0x30024b84
30013d69:	mov    edi,DWORD PTR [ebp+0x18]
30013d6c:	jmp    0x30011470
30013d71:	mov    edi,0x80004003
30013d76:	jmp    0x30011495
30013d7b:	push   ebp
30013d7c:	mov    ebp,esp
30013d7e:	sub    esp,0xb4
30013d84:	mov    eax,ds:0x30043050
30013d89:	xor    eax,ebp
30013d8b:	mov    DWORD PTR [ebp-0x4],eax
30013d8e:	push   ebx
30013d8f:	push   esi
30013d90:	push   edi
30013d91:	lea    edi,[ecx+0x2c]
30013d94:	xor    ebx,ebx
30013d96:	mov    esi,DWORD PTR [edi]
30013d98:	mov    DWORD PTR [ebp-0x8c],edi
30013d9e:	mov    DWORD PTR [ebp-0x80],esi
30013da1:	test   esi,esi
30013da3:	jne    0x30024ce3
30013da9:	mov    ecx,DWORD PTR [ebp-0x4]
30013dac:	pop    edi
30013dad:	pop    esi
30013dae:	mov    eax,ebx
30013db0:	xor    ecx,ebp
30013db2:	pop    ebx
30013db3:	call   0x3000115c
30013db8:	leave  
30013db9:	ret    
30013dba:	push   ebp
30013dbb:	mov    ebp,esp
30013dbd:	sub    esp,0x84
30013dc3:	mov    eax,ds:0x30043050
30013dc8:	xor    eax,ebp
30013dca:	mov    DWORD PTR [ebp-0x4],eax
30013dcd:	push   ebx
30013dce:	push   esi
30013dcf:	mov    esi,edx
30013dd1:	push   edi
30013dd2:	mov    DWORD PTR [ebp-0x7c],esi
30013dd5:	mov    ebx,ecx
30013dd7:	xor    edi,edi
30013dd9:	call   0x30010add
30013dde:	push   0x20019
30013de3:	push   DWORD PTR [esi]
30013de5:	xor    eax,eax
30013de7:	push   0x80000001
30013dec:	lea    ecx,[ebp-0x6c]
30013def:	mov    DWORD PTR [ebp-0x6c],eax
30013df2:	mov    DWORD PTR [ebp-0x68],eax
30013df5:	mov    DWORD PTR [ebp-0x64],eax
30013df8:	call   0x300051d9
30013dfd:	test   eax,eax
30013dff:	je     0x30025686
30013e05:	inc    edi
30013e06:	lea    ecx,[ebp-0x6c]
30013e09:	call   0x300051ae
30013e0e:	mov    ecx,DWORD PTR [ebp-0x4]
30013e11:	mov    eax,edi
30013e13:	pop    edi
30013e14:	pop    esi
30013e15:	xor    ecx,ebp
30013e17:	pop    ebx
30013e18:	call   0x3000115c
30013e1d:	leave  
30013e1e:	ret    
30013e1f:	push   ebp
30013e20:	mov    ebp,esp
30013e22:	push   ecx
30013e23:	push   ecx
30013e24:	push   esi
30013e25:	push   edi
30013e26:	push   0x30013e80
30013e2b:	mov    edi,ecx
30013e2d:	push   edi
30013e2e:	lea    eax,[ebp-0x4]
30013e31:	push   eax
30013e32:	call   0x3000ba45
30013e37:	lea    ecx,[edi+0x14]
30013e3a:	lea    edx,[ebp-0x4]
30013e3d:	call   0x300132c6
30013e42:	lea    ecx,[ebp-0x4]
30013e45:	mov    esi,eax
30013e47:	call   0x300051a4
30013e4c:	test   esi,esi
30013e4e:	js     0x30013e74
30013e50:	push   0x30013ee0
30013e55:	push   edi
30013e56:	lea    eax,[ebp-0x4]
30013e59:	push   eax
30013e5a:	call   0x3000ba45
30013e5f:	lea    ecx,[edi+0x2c]
30013e62:	lea    edx,[ebp-0x4]
30013e65:	call   0x30013dba
30013e6a:	lea    ecx,[ebp-0x4]
30013e6d:	mov    esi,eax
30013e6f:	call   0x300051a4
30013e74:	pop    edi
30013e75:	mov    eax,esi
30013e77:	pop    esi
30013e78:	leave  
30013e79:	ret    
30013e7a:	nop
30013e7b:	nop
30013e7c:	nop
30013e7d:	nop
30013e7e:	nop
30013e7f:	nop
30013e80:	push   edx
30013e81:	add    BYTE PTR [ebp+0x0],dh
30013e84:	outs   dx,BYTE PTR ds:[esi]
30013e85:	add    BYTE PTR [eax+eax*1+0x69],dh
30013e89:	add    BYTE PTR [ebp+0x0],ch
30013e8c:	add    BYTE PTR gs:[ebx+0x0],al
30013e90:	outs   dx,DWORD PTR ds:[esi]
30013e91:	add    BYTE PTR [esi+0x0],ch
30013e94:	data16 add BYTE PTR [ecx+0x0],ch
30013e98:	add    BYTE PTR [di+0x0],dh
30013e9c:	jb     0x30013e9e
30013e9e:	popa   
30013e9f:	add    BYTE PTR [eax+eax*1+0x69],dh
30013ea3:	add    BYTE PTR [edi+0x0],ch
30013ea6:	outs   dx,BYTE PTR ds:[esi]
30013ea7:	add    BYTE PTR [eax+eax*1+0x64],bl
30013eab:	add    BYTE PTR [ebp+0x0],ah
30013eae:	jo     0x30013eb0
30013eb0:	add    BYTE PTR gs:[esi+0x0],ch
30013eb4:	add    BYTE PTR fs:[ebp+0x0],ah
30013eb8:	outs   dx,BYTE PTR ds:[esi]
30013eb9:	add    BYTE PTR [eax+eax*1+0x41],dh
30013ebd:	add    BYTE PTR [ebx+0x0],dh
30013ec0:	jae    0x30013ec2
30013ec2:	add    BYTE PTR gs:[ebp+0x0],ch
30013ec6:	bound  eax,QWORD PTR [eax]
30013ec8:	ins    BYTE PTR es:[edi],dx
30013ec9:	add    BYTE PTR [ecx+0x0],bh
30013ecc:	pop    esp
30013ecd:	add    BYTE PTR [ebx+0x0],ah
30013ed0:	outs   dx,DWORD PTR ds:[esi]
30013ed1:	add    BYTE PTR [eax+eax*1+0x65],ah
30013ed5:	add    BYTE PTR [edx+0x0],al
30013ed8:	popa   
30013ed9:	add    BYTE PTR [ebx+0x0],dh
30013edc:	add    BYTE PTR gs:[eax],al
30013edf:	add    BYTE PTR [edx+0x0],dl
30013ee2:	jne    0x30013ee4
30013ee4:	outs   dx,BYTE PTR ds:[esi]
30013ee5:	add    BYTE PTR [eax+eax*1+0x69],dh
30013ee9:	add    BYTE PTR [ebp+0x0],ch
30013eec:	add    BYTE PTR gs:[ebx+0x0],al
30013ef0:	outs   dx,DWORD PTR ds:[esi]
30013ef1:	add    BYTE PTR [esi+0x0],ch
30013ef4:	data16 add BYTE PTR [ecx+0x0],ch
30013ef8:	add    BYTE PTR [di+0x0],dh
30013efc:	jb     0x30013efe
30013efe:	popa   
30013eff:	add    BYTE PTR [eax+eax*1+0x69],dh
30013f03:	add    BYTE PTR [edi+0x0],ch
30013f06:	outs   dx,BYTE PTR ds:[esi]
30013f07:	add    BYTE PTR [eax+eax*1+0x64],bl
30013f0b:	add    BYTE PTR [ebp+0x0],ah
30013f0e:	jo     0x30013f10
30013f10:	add    BYTE PTR gs:[esi+0x0],ch
30013f14:	add    BYTE PTR fs:[ebp+0x0],ah
30013f18:	outs   dx,BYTE PTR ds:[esi]
30013f19:	add    BYTE PTR [eax+eax*1+0x41],dh
30013f1d:	add    BYTE PTR [ebx+0x0],dh
30013f20:	jae    0x30013f22
30013f22:	add    BYTE PTR gs:[ebp+0x0],ch
30013f26:	bound  eax,QWORD PTR [eax]
30013f28:	ins    BYTE PTR es:[edi],dx
30013f29:	add    BYTE PTR [ecx+0x0],bh
30013f2c:	pop    esp
30013f2d:	add    BYTE PTR [edx+0x0],ah
30013f30:	imul   eax,DWORD PTR [eax],0x64006e
30013f36:	imul   eax,DWORD PTR [eax],0x67006e
30013f3c:	push   edx
30013f3d:	add    BYTE PTR [ebp+0x0],ah
30013f40:	add    BYTE PTR fs:[ecx+0x0],ch
30013f44:	jb     0x30013f46
30013f46:	add    BYTE PTR gs:[ebx+0x0],ah
30013f4a:	je     0x30013f4c
30013f4c:	imul   eax,DWORD PTR [eax],0x6e006f
30013f52:	add    BYTE PTR [eax],al
30013f54:	push   ebp
30013f55:	mov    ebp,esp
30013f57:	push   esi
30013f58:	mov    esi,ecx
30013f5a:	call   0x30013f74
30013f5f:	test   BYTE PTR [ebp+0x8],0x1
30013f63:	je     0x30013f6d
30013f65:	push   esi
30013f66:	call   DWORD PTR ds:0x300452ac
30013f6c:	pop    ecx
30013f6d:	mov    eax,esi
30013f6f:	pop    esi
30013f70:	pop    ebp
30013f71:	ret    0x4
30013f74:	push   esi
30013f75:	mov    esi,ecx
30013f77:	push   edi
30013f78:	and    DWORD PTR [esi+0x8],0x0
30013f7c:	and    DWORD PTR [esi+0x14],0x0
30013f80:	push   0xffffffff
30013f82:	lea    ecx,[esi+0x10]
30013f85:	mov    DWORD PTR [esi],0x300092f0
30013f8b:	call   0x30006c8c
30013f90:	push   0xffffffff
30013f92:	lea    ecx,[esi+0x4]
30013f95:	call   0x30006c8c
30013f9a:	lea    ecx,[esi+0x10]
30013f9d:	call   0x300051a4
30013fa2:	pop    edi
30013fa3:	lea    ecx,[esi+0x4]
30013fa6:	pop    esi
30013fa7:	jmp    0x300051a4
30013fac:	push   esi
30013fad:	mov    esi,ecx
30013faf:	lea    ecx,[esi+0x4]
30013fb2:	call   0x30012c84
30013fb7:	xor    ecx,ecx
30013fb9:	mov    DWORD PTR [esi+0x8],ecx
30013fbc:	mov    DWORD PTR [esi+0xc],ecx
30013fbf:	mov    DWORD PTR [esi+0x10],ecx
30013fc2:	mov    DWORD PTR [esi+0x14],ecx
30013fc5:	mov    DWORD PTR [esi+0x18],ecx
30013fc8:	mov    DWORD PTR [esi+0x1c],ecx
30013fcb:	mov    DWORD PTR [esi+0x20],ecx
30013fce:	push   0xa
30013fd0:	pop    eax
30013fd1:	mov    DWORD PTR [esi+0x24],eax
30013fd4:	mov    DWORD PTR [esi+0x28],ecx
30013fd7:	mov    DWORD PTR [esi+0x2c],ecx
30013fda:	mov    DWORD PTR [esi+0x30],ecx
30013fdd:	mov    DWORD PTR [esi+0x34],ecx
30013fe0:	mov    DWORD PTR [esi+0x38],ecx
30013fe3:	mov    DWORD PTR [esi+0x3c],eax
30013fe6:	mov    DWORD PTR [esi],0x30014000
30013fec:	mov    ecx,DWORD PTR ds:0x300430f4
30013ff2:	mov    eax,DWORD PTR [ecx]
30013ff4:	call   DWORD PTR [eax+0x4]
30013ff7:	mov    eax,esi
30013ff9:	pop    esi
30013ffa:	ret    0x4
30013ffd:	nop
30013ffe:	nop
30013fff:	nop
30014000:	cmp    al,0x40
30014002:	add    DWORD PTR [eax],esi
30014004:	cmp    ch,BYTE PTR ds:0x3ba03001
3001400a:	add    DWORD PTR [eax],esi
3001400c:	pop    esp
3001400d:	and    DWORD PTR [ecx],eax
3001400f:	xor    BYTE PTR [eax-0x3ecffec0],al
30014015:	and    al,BYTE PTR [ecx]
30014017:	xor    BYTE PTR [ebx-0x65cffedf],bh
3001401d:	and    al,BYTE PTR [ecx]
3001401f:	xor    BYTE PTR [eax-0x5acffedf],al
30014025:	and    eax,DWORD PTR [ecx]
30014027:	xor    BYTE PTR [esi+0x71300121],dh
3001402d:	jno    0x30014032
3001402f:	xor    BYTE PTR [eax-0x3acffc8f],bl
30014035:	jno    0x3001403a
30014037:	xor    BYTE PTR [edi+0x5530013b],bh
3001403d:	mov    ebp,esp
3001403f:	push   DWORD PTR [ebp+0x10]
30014042:	push   DWORD PTR [ebp+0xc]
30014045:	push   0x30014058
3001404a:	push   DWORD PTR [ebp+0x8]
3001404d:	call   DWORD PTR ds:0x30045424
30014053:	pop    ebp
30014054:	ret    0xc
30014057:	nop
30014058:	jo     0x3001409a
3001405a:	add    DWORD PTR [eax],esi
3001405c:	add    BYTE PTR [eax],al
3001405e:	add    BYTE PTR [eax],al
30014060:	add    DWORD PTR [eax],eax
	...
3001406e:	add    BYTE PTR [eax],al
30014070:	cli    
30014071:	int    0x45
30014073:	adc    eax,0x44979e4e
30014078:	test   al,0xa4
3001407a:	sub    esi,edi
3001407c:	rcl    BYTE PTR [ecx],1
3001407e:	sub    al,0x44
30014080:	push   ebp
30014081:	mov    ebp,esp
30014083:	push   esi
30014084:	mov    esi,DWORD PTR [ebp+0x8]
30014087:	xor    eax,eax
30014089:	mov    ecx,DWORD PTR [esi+0xc]
3001408c:	test   ecx,ecx
3001408e:	je     0x300140a1
30014090:	mov    eax,DWORD PTR [ecx]
30014092:	push   ecx
30014093:	call   DWORD PTR [eax+0x10]
30014096:	test   eax,eax
30014098:	js     0x300140a1
3001409a:	mov    ecx,esi
3001409c:	call   0x300140a6
300140a1:	pop    esi
300140a2:	pop    ebp
300140a3:	ret    0x4
300140a6:	push   ebp
300140a7:	mov    ebp,esp
300140a9:	sub    esp,0x10
300140ac:	push   esi
300140ad:	push   edi
300140ae:	mov    edi,ecx
300140b0:	xor    esi,esi
300140b2:	cmp    DWORD PTR [edi+0xc],esi
300140b5:	je     0x3001418e
300140bb:	cmp    DWORD PTR [edi+0x8],esi
300140be:	je     0x3001418e
300140c4:	push   0x30014198
300140c9:	lea    ecx,[ebp-0x10]
300140cc:	call   0x3000437e
300140d1:	push   0x30014248
300140d6:	lea    ecx,[ebp-0xc]
300140d9:	call   0x3000437e
300140de:	push   0x300142f8
300140e3:	lea    ecx,[ebp-0x8]
300140e6:	call   0x3000437e
300140eb:	push   0x300143a8
300140f0:	lea    ecx,[ebp-0x4]
300140f3:	call   0x3000437e
300140f8:	mov    eax,DWORD PTR [edi+0x8]
300140fb:	push   0xffffffff
300140fd:	mov    ecx,DWORD PTR [eax]
300140ff:	push   eax
30014100:	call   DWORD PTR [ecx+0x54]
30014103:	mov    esi,eax
30014105:	test   esi,esi
30014107:	js     0x3001416e
30014109:	mov    eax,DWORD PTR [ebp-0x10]
3001410c:	mov    edx,DWORD PTR [edi+0xc]
3001410f:	push   DWORD PTR [eax-0xc]
30014112:	mov    ecx,DWORD PTR [edx]
30014114:	push   eax
30014115:	push   edx
30014116:	call   DWORD PTR [ecx+0x28]
30014119:	mov    esi,eax
3001411b:	test   esi,esi
3001411d:	js     0x3001416e
3001411f:	mov    eax,DWORD PTR [ebp-0xc]
30014122:	mov    edx,DWORD PTR [edi+0xc]
30014125:	push   DWORD PTR [eax-0xc]
30014128:	mov    ecx,DWORD PTR [edx]
3001412a:	push   eax
3001412b:	push   edx
3001412c:	call   DWORD PTR [ecx+0x28]
3001412f:	mov    esi,eax
30014131:	test   esi,esi
30014133:	js     0x3001416e
30014135:	mov    eax,DWORD PTR [ebp-0x8]
30014138:	mov    edx,DWORD PTR [edi+0xc]
3001413b:	push   DWORD PTR [eax-0xc]
3001413e:	mov    ecx,DWORD PTR [edx]
30014140:	push   eax
30014141:	push   edx
30014142:	call   DWORD PTR [ecx+0x28]
30014145:	mov    esi,eax
30014147:	test   esi,esi
30014149:	js     0x3001416e
3001414b:	mov    eax,DWORD PTR [ebp-0x4]
3001414e:	mov    edx,DWORD PTR [edi+0xc]
30014151:	push   DWORD PTR [eax-0xc]
30014154:	mov    ecx,DWORD PTR [edx]
30014156:	push   eax
30014157:	push   edx
30014158:	call   DWORD PTR [ecx+0x28]
3001415b:	mov    esi,eax
3001415d:	test   esi,esi
3001415f:	js     0x3001416e
30014161:	mov    eax,DWORD PTR [edi+0x8]
30014164:	push   0x0
30014166:	mov    ecx,DWORD PTR [eax]
30014168:	push   eax
30014169:	call   DWORD PTR [ecx+0x54]
3001416c:	mov    esi,eax
3001416e:	lea    ecx,[ebp-0x4]
30014171:	call   0x300051a4
30014176:	lea    ecx,[ebp-0x8]
30014179:	call   0x300051a4
3001417e:	lea    ecx,[ebp-0xc]
30014181:	call   0x300051a4
30014186:	lea    ecx,[ebp-0x10]
30014189:	call   0x300051a4
3001418e:	pop    edi
3001418f:	mov    eax,esi
30014191:	pop    esi
30014192:	leave  
30014193:	ret    
30014194:	nop
30014195:	nop
30014196:	nop
30014197:	nop
30014198:	or     al,BYTE PTR [eax]
3001419a:	cmp    al,0x0
3001419c:	and    DWORD PTR [eax],eax
3001419e:	sub    eax,0x20002d00
300141a3:	add    BYTE PTR [edx],ch
300141a5:	add    BYTE PTR [edx],ch
300141a7:	add    BYTE PTR [edx],ch
300141a9:	add    BYTE PTR [edx],ch
300141ab:	add    BYTE PTR [edx],ch
300141ad:	add    BYTE PTR [edx],ch
300141af:	add    BYTE PTR [edx],ch
300141b1:	add    BYTE PTR [edx],ch
300141b3:	add    BYTE PTR [edx],ch
300141b5:	add    BYTE PTR [edx],ch
300141b7:	add    BYTE PTR [edx],ch
300141b9:	add    BYTE PTR [edx],ch
300141bb:	add    BYTE PTR [edx],ch
300141bd:	add    BYTE PTR [edx],ch
300141bf:	add    BYTE PTR [edx],ch
300141c1:	add    BYTE PTR [edx],ch
300141c3:	add    BYTE PTR [edx],ch
300141c5:	add    BYTE PTR [edx],ch
300141c7:	add    BYTE PTR [edx],ch
300141c9:	add    BYTE PTR [edx],ch
300141cb:	add    BYTE PTR [edx],ch
300141cd:	add    BYTE PTR [edx],ch
300141cf:	add    BYTE PTR [edx],ch
300141d1:	add    BYTE PTR [edx],ch
300141d3:	add    BYTE PTR [edx],ch
300141d5:	add    BYTE PTR [edx],ch
300141d7:	add    BYTE PTR [edx],ch
300141d9:	add    BYTE PTR [edx],ch
300141db:	add    BYTE PTR [edx],ch
300141dd:	add    BYTE PTR [edx],ch
300141df:	add    BYTE PTR [edx],ch
300141e1:	add    BYTE PTR [edx],ch
300141e3:	add    BYTE PTR [edx],ch
300141e5:	add    BYTE PTR [edx],ch
300141e7:	add    BYTE PTR [edx],ch
300141e9:	add    BYTE PTR [edx],ch
300141eb:	add    BYTE PTR [edx],ch
300141ed:	add    BYTE PTR [edx],ch
300141ef:	add    BYTE PTR [edx],ch
300141f1:	add    BYTE PTR [edx],ch
300141f3:	add    BYTE PTR [edx],ch
300141f5:	add    BYTE PTR [edx],ch
300141f7:	add    BYTE PTR [edx],ch
300141f9:	add    BYTE PTR [edx],ch
300141fb:	add    BYTE PTR [edx],ch
300141fd:	add    BYTE PTR [edx],ch
300141ff:	add    BYTE PTR [edx],ch
30014201:	add    BYTE PTR [edx],ch
30014203:	add    BYTE PTR [edx],ch
30014205:	add    BYTE PTR [edx],ch
30014207:	add    BYTE PTR [edx],ch
30014209:	add    BYTE PTR [edx],ch
3001420b:	add    BYTE PTR [edx],ch
3001420d:	add    BYTE PTR [edx],ch
3001420f:	add    BYTE PTR [edx],ch
30014211:	add    BYTE PTR [edx],ch
30014213:	add    BYTE PTR [edx],ch
30014215:	add    BYTE PTR [edx],ch
30014217:	add    BYTE PTR [edx],ch
30014219:	add    BYTE PTR [edx],ch
3001421b:	add    BYTE PTR [edx],ch
3001421d:	add    BYTE PTR [edx],ch
3001421f:	add    BYTE PTR [edx],ch
30014221:	add    BYTE PTR [edx],ch
30014223:	add    BYTE PTR [edx],ch
30014225:	add    BYTE PTR [edx],ch
30014227:	add    BYTE PTR [edx],ch
30014229:	add    BYTE PTR [edx],ch
3001422b:	add    BYTE PTR [edx],ch
3001422d:	add    BYTE PTR [edx],ch
3001422f:	add    BYTE PTR [edx],ch
30014231:	add    BYTE PTR [edx],ch
30014233:	add    BYTE PTR [edx],ch
30014235:	add    BYTE PTR [edx],ch
30014237:	add    BYTE PTR [edx],ch
30014239:	add    BYTE PTR [eax],ah
3001423b:	add    BYTE PTR ds:0x3e002d00,ch
30014241:	add    BYTE PTR [edx],cl
30014243:	add    BYTE PTR [eax],al
30014245:	add    BYTE PTR [eax+0x21003c90],dl
3001424b:	add    BYTE PTR ds:0x20002d00,ch
30014251:	add    BYTE PTR [edx],ch
30014253:	add    BYTE PTR [edx],ch
30014255:	add    BYTE PTR [edx],ch
30014257:	add    BYTE PTR [edx],ch
30014259:	add    BYTE PTR [edx],ch
3001425b:	add    BYTE PTR [edx],ch
3001425d:	add    BYTE PTR [edx],ch
3001425f:	add    BYTE PTR [edx],ch
30014261:	add    BYTE PTR [edx],ch
30014263:	add    BYTE PTR [edx],ch
30014265:	add    BYTE PTR [edx],ch
30014267:	add    BYTE PTR [edx],ch
30014269:	add    BYTE PTR [edx],ch
3001426b:	add    BYTE PTR [edx],ch
3001426d:	add    BYTE PTR [eax],ah
3001426f:	add    BYTE PTR [esi+0x0],cl
30014272:	dec    edi
30014273:	add    BYTE PTR [eax+eax*1+0x45],dl
30014277:	add    BYTE PTR [edx],bh
30014279:	add    BYTE PTR [eax],ah
3001427b:	add    BYTE PTR [eax+eax*1+0x68],dl
3001427f:	add    BYTE PTR [ecx+0x0],ch
30014282:	jae    0x30014284
30014284:	and    BYTE PTR [eax],al
30014286:	imul   eax,DWORD PTR [eax],0x200073
3001428c:	popa   
3001428d:	add    BYTE PTR [eax],ah
3001428f:	add    BYTE PTR [edi+0x0],ah
30014292:	add    BYTE PTR gs:[esi+0x0],ch
30014296:	add    BYTE PTR gs:[edx+0x0],dh
3001429a:	popa   
3001429b:	add    BYTE PTR [eax+eax*1+0x65],dh
3001429f:	add    BYTE PTR [eax+eax*1+0x20],ah
300142a3:	add    BYTE PTR [esi+0x0],ah
300142a6:	imul   eax,DWORD PTR [eax],0x65006c
300142ac:	add    BYTE PTR cs:[eax],ah
300142af:	add    BYTE PTR [eax+eax*1+0x6f],al
300142b3:	add    BYTE PTR [eax],ah
300142b5:	add    BYTE PTR [esi+0x0],ch
300142b8:	outs   dx,DWORD PTR ds:[esi]
300142b9:	add    BYTE PTR [eax+eax*1+0x20],dh
300142bd:	add    BYTE PTR [ebp+0x0],ch
300142c0:	outs   dx,DWORD PTR ds:[esi]
300142c1:	add    BYTE PTR [eax+eax*1+0x69],ah
300142c5:	add    BYTE PTR [esi+0x0],ah
300142c8:	jns    0x300142ca
300142ca:	add    BYTE PTR cs:[edx],ch
300142cd:	add    BYTE PTR [edx],ch
300142cf:	add    BYTE PTR [edx],ch
300142d1:	add    BYTE PTR [edx],ch
300142d3:	add    BYTE PTR [edx],ch
300142d5:	add    BYTE PTR [edx],ch
300142d7:	add    BYTE PTR [edx],ch
300142d9:	add    BYTE PTR [edx],ch
300142db:	add    BYTE PTR [edx],ch
300142dd:	add    BYTE PTR [edx],ch
300142df:	add    BYTE PTR [edx],ch
300142e1:	add    BYTE PTR [edx],ch
300142e3:	add    BYTE PTR [edx],ch
300142e5:	add    BYTE PTR [edx],ch
300142e7:	add    BYTE PTR [eax],ah
300142e9:	add    BYTE PTR ds:0x3e002d00,ch
300142ef:	add    BYTE PTR [edx],cl
300142f1:	add    BYTE PTR [eax],al
300142f3:	add    BYTE PTR [eax+0x3c909090],dl
300142f9:	add    BYTE PTR [ecx],ah
300142fb:	add    BYTE PTR ds:0x20002d00,ch
30014301:	add    BYTE PTR [edx],ch
30014303:	add    BYTE PTR [edx],ch
30014305:	add    BYTE PTR [edx],ch
30014307:	add    BYTE PTR [edx],ch
30014309:	add    BYTE PTR [edx],ch
3001430b:	add    BYTE PTR [edx],ch
3001430d:	add    BYTE PTR [edx],ch
3001430f:	add    BYTE PTR [edx],ch
30014311:	add    BYTE PTR [edx],ch
30014313:	add    BYTE PTR [eax],ah
30014315:	add    BYTE PTR [ebp+0x0],cl
30014318:	outs   dx,DWORD PTR ds:[esi]
30014319:	add    BYTE PTR [eax+eax*1+0x69],ah
3001431d:	add    BYTE PTR [esi+0x0],ah
30014320:	imul   eax,DWORD PTR [eax],0x610063
30014326:	je     0x30014328
30014328:	imul   eax,DWORD PTR [eax],0x6e006f
3001432e:	jae    0x30014330
30014330:	and    BYTE PTR [eax],al
30014332:	ja     0x30014334
30014334:	imul   eax,DWORD PTR [eax],0x6c006c
3001433a:	and    BYTE PTR [eax],al
3001433c:	bound  eax,QWORD PTR [eax]
3001433e:	add    BYTE PTR gs:[eax],ah
30014341:	add    BYTE PTR [edi+0x0],ch
30014344:	jbe    0x30014346
30014346:	add    BYTE PTR gs:[edx+0x0],dh
3001434a:	ja     0x3001434c
3001434c:	jb     0x3001434e
3001434e:	imul   eax,DWORD PTR [eax],0x740074
30014354:	add    BYTE PTR gs:[esi+0x0],ch
30014358:	and    BYTE PTR [eax],al
3001435a:	add    BYTE PTR fs:[ebp+0x0],dh
3001435e:	jb     0x30014360
30014360:	imul   eax,DWORD PTR [eax],0x67006e
30014366:	and    BYTE PTR [eax],al
30014368:	jb     0x3001436a
3001436a:	add    BYTE PTR gs:[edi+0x0],ah
3001436e:	add    BYTE PTR gs:[esi+0x0],ch
30014372:	add    BYTE PTR gs:[edx+0x0],dh
30014376:	popa   
30014377:	add    BYTE PTR [eax+eax*1+0x69],dh
3001437b:	add    BYTE PTR [edi+0x0],ch
3001437e:	outs   dx,BYTE PTR ds:[esi]
3001437f:	add    BYTE PTR [esi],ch
30014381:	add    BYTE PTR [eax],ah
30014383:	add    BYTE PTR [edx],ch
30014385:	add    BYTE PTR [edx],ch
30014387:	add    BYTE PTR [edx],ch
30014389:	add    BYTE PTR [edx],ch
3001438b:	add    BYTE PTR [edx],ch
3001438d:	add    BYTE PTR [edx],ch
3001438f:	add    BYTE PTR [edx],ch
30014391:	add    BYTE PTR [edx],ch
30014393:	add    BYTE PTR [edx],ch
30014395:	add    BYTE PTR [edx],ch
30014397:	add    BYTE PTR [eax],ah
30014399:	add    BYTE PTR ds:0x3e002d00,ch
3001439f:	add    BYTE PTR [edx],cl
300143a1:	add    BYTE PTR [eax],al
300143a3:	add    BYTE PTR [eax+0x3c909090],dl
300143a9:	add    BYTE PTR [ecx],ah
300143ab:	add    BYTE PTR ds:0x20002d00,ch
300143b1:	add    BYTE PTR [edx],ch
300143b3:	add    BYTE PTR [edx],ch
300143b5:	add    BYTE PTR [edx],ch
300143b7:	add    BYTE PTR [edx],ch
300143b9:	add    BYTE PTR [edx],ch
300143bb:	add    BYTE PTR [edx],ch
300143bd:	add    BYTE PTR [edx],ch
300143bf:	add    BYTE PTR [edx],ch
300143c1:	add    BYTE PTR [edx],ch
300143c3:	add    BYTE PTR [edx],ch
300143c5:	add    BYTE PTR [edx],ch
300143c7:	add    BYTE PTR [edx],ch
300143c9:	add    BYTE PTR [edx],ch
300143cb:	add    BYTE PTR [edx],ch
300143cd:	add    BYTE PTR [edx],ch
300143cf:	add    BYTE PTR [edx],ch
300143d1:	add    BYTE PTR [edx],ch
300143d3:	add    BYTE PTR [edx],ch
300143d5:	add    BYTE PTR [edx],ch
300143d7:	add    BYTE PTR [edx],ch
300143d9:	add    BYTE PTR [edx],ch
300143db:	add    BYTE PTR [edx],ch
300143dd:	add    BYTE PTR [edx],ch
300143df:	add    BYTE PTR [edx],ch
300143e1:	add    BYTE PTR [edx],ch
300143e3:	add    BYTE PTR [edx],ch
300143e5:	add    BYTE PTR [edx],ch
300143e7:	add    BYTE PTR [edx],ch
300143e9:	add    BYTE PTR [edx],ch
300143eb:	add    BYTE PTR [edx],ch
300143ed:	add    BYTE PTR [edx],ch
300143ef:	add    BYTE PTR [edx],ch
300143f1:	add    BYTE PTR [edx],ch
300143f3:	add    BYTE PTR [edx],ch
300143f5:	add    BYTE PTR [edx],ch
300143f7:	add    BYTE PTR [edx],ch
300143f9:	add    BYTE PTR [edx],ch
300143fb:	add    BYTE PTR [edx],ch
300143fd:	add    BYTE PTR [edx],ch
300143ff:	add    BYTE PTR [edx],ch
30014401:	add    BYTE PTR [edx],ch
30014403:	add    BYTE PTR [edx],ch
30014405:	add    BYTE PTR [edx],ch
30014407:	add    BYTE PTR [edx],ch
30014409:	add    BYTE PTR [edx],ch
3001440b:	add    BYTE PTR [edx],ch
3001440d:	add    BYTE PTR [edx],ch
3001440f:	add    BYTE PTR [edx],ch
30014411:	add    BYTE PTR [edx],ch
30014413:	add    BYTE PTR [edx],ch
30014415:	add    BYTE PTR [edx],ch
30014417:	add    BYTE PTR [edx],ch
30014419:	add    BYTE PTR [edx],ch
3001441b:	add    BYTE PTR [edx],ch
3001441d:	add    BYTE PTR [edx],ch
3001441f:	add    BYTE PTR [edx],ch
30014421:	add    BYTE PTR [edx],ch
30014423:	add    BYTE PTR [edx],ch
30014425:	add    BYTE PTR [edx],ch
30014427:	add    BYTE PTR [edx],ch
30014429:	add    BYTE PTR [edx],ch
3001442b:	add    BYTE PTR [edx],ch
3001442d:	add    BYTE PTR [edx],ch
3001442f:	add    BYTE PTR [edx],ch
30014431:	add    BYTE PTR [edx],ch
30014433:	add    BYTE PTR [edx],ch
30014435:	add    BYTE PTR [edx],ch
30014437:	add    BYTE PTR [edx],ch
30014439:	add    BYTE PTR [edx],ch
3001443b:	add    BYTE PTR [edx],ch
3001443d:	add    BYTE PTR [edx],ch
3001443f:	add    BYTE PTR [edx],ch
30014441:	add    BYTE PTR [edx],ch
30014443:	add    BYTE PTR [edx],ch
30014445:	add    BYTE PTR [edx],ch
30014447:	add    BYTE PTR [eax],ah
30014449:	add    BYTE PTR ds:0x3e002d00,ch
3001444f:	add    BYTE PTR [edx],cl
30014451:	add    BYTE PTR [edx],cl
30014453:	add    BYTE PTR [eax],al
30014455:	add    BYTE PTR [ebp-0x75],dl
30014458:	in     al,dx
30014459:	and    esp,0xfffffff8
3001445c:	sub    esp,0x3c
3001445f:	push   esi
30014460:	push   ecx
30014461:	lea    ecx,[esp+0x2c]
30014465:	call   0x3000704d
3001446a:	push   ecx
3001446b:	lea    ecx,[esp+0x14]
3001446f:	call   0x3000704d
30014474:	push   0x300122fc
30014479:	lea    ecx,[esp+0xc]
3001447d:	call   0x3000437e
30014482:	push   DWORD PTR [eax]
30014484:	lea    ecx,[esp+0x2c]
30014488:	call   0x3000b906
3001448d:	lea    ecx,[esp+0x8]
30014491:	call   0x300051a4
30014496:	push   0x30012308
3001449b:	lea    ecx,[esp+0xc]
3001449f:	call   0x3000437e
300144a4:	push   DWORD PTR [eax]
300144a6:	lea    ecx,[esp+0x2c]
300144aa:	call   0x3000b906
300144af:	lea    ecx,[esp+0x8]
300144b3:	call   0x300051a4
300144b8:	push   0x30014540
300144bd:	lea    ecx,[esp+0xc]
300144c1:	call   0x3000437e
300144c6:	push   DWORD PTR [eax]
300144c8:	lea    ecx,[esp+0x2c]
300144cc:	call   0x3000b906
300144d1:	lea    ecx,[esp+0x8]
300144d5:	call   0x300051a4
300144da:	mov    esi,DWORD PTR [ebp+0x8]
300144dd:	lea    ecx,[esp+0x10]
300144e1:	push   DWORD PTR [esi+0x14]
300144e4:	call   0x3000b906
300144e9:	push   DWORD PTR [esi+0x18]
300144ec:	lea    ecx,[esp+0x14]
300144f0:	call   0x3000b906
300144f5:	push   DWORD PTR [esi+0x1c]
300144f8:	lea    ecx,[esp+0x14]
300144fc:	call   0x3000b906
30014501:	push   ecx
30014502:	push   DWORD PTR [ebp+0xc]
30014505:	lea    eax,[esp+0x18]
30014509:	mov    DWORD PTR [esp+0x10],eax
3001450d:	lea    eax,[esp+0x30]
30014511:	push   ecx
30014512:	lea    edx,[esp+0x14]
30014516:	lea    ecx,[esp+0x18]
3001451a:	mov    DWORD PTR [esp+0x18],eax
3001451e:	call   0x30012d4a
30014523:	lea    ecx,[esp+0x10]
30014527:	mov    esi,eax
30014529:	call   0x30007014
3001452e:	lea    ecx,[esp+0x28]
30014532:	call   0x30007014
30014537:	mov    eax,esi
30014539:	pop    esi
3001453a:	mov    esp,ebp
3001453c:	pop    ebp
3001453d:	ret    0x8
30014540:	arpl   WORD PTR [eax],ax
30014542:	jne    0x30014544
30014544:	ins    BYTE PTR es:[edi],dx
30014545:	add    BYTE PTR [eax+eax*1+0x75],dh
30014549:	add    BYTE PTR [edx+0x0],dh
3001454c:	add    BYTE PTR gs:[eax],al
3001454f:	add    BYTE PTR [edi],cl
30014551:	mov    es,WORD PTR [ebx]
30014553:	xor    edi,edi
30014555:	dec    DWORD PTR [edi]
30014557:	mov    bh,0xc0
30014559:	or     eax,0x80070000
3001455e:	jmp    0x30007659
30014563:	inc    esi
30014564:	cmp    esi,0x7
30014567:	jb     0x300077d0
3001456d:	jmp    0x30028a05
30014572:	push   ebp
30014573:	mov    ebp,esp
30014575:	push   0xffffffff
30014577:	push   0x3003e56f
3001457c:	mov    eax,fs:0x0
30014582:	push   eax
30014583:	mov    eax,0x12a4
30014588:	call   0x300060e6
3001458d:	mov    eax,ds:0x30043050
30014592:	xor    eax,ebp
30014594:	mov    DWORD PTR [ebp-0x10],eax
30014597:	push   ebx
30014598:	push   esi
30014599:	push   edi
3001459a:	push   eax
3001459b:	lea    eax,[ebp-0xc]
3001459e:	mov    fs:0x0,eax
300145a4:	mov    esi,edx
300145a6:	mov    edi,ecx
300145a8:	or     eax,0xffffffff
300145ab:	xor    ebx,ebx
300145ad:	mov    DWORD PTR [ebp-0x1228],eax
300145b3:	mov    DWORD PTR [ebp-0x1234],eax
300145b9:	mov    eax,ebx
300145bb:	push   0x3004306c
300145c0:	lea    ecx,[ebp-0x1230]
300145c6:	mov    DWORD PTR [ebp-0x122c],eax
300145cc:	mov    DWORD PTR [ebp-0x1238],ebx
300145d2:	call   0x30004256
300145d7:	push   ebx
300145d8:	push   0x300430c0
300145dd:	mov    DWORD PTR [ebp-0x4],ebx
300145e0:	call   DWORD PTR ds:0x3004517c
300145e6:	push   0x3000e540
300145eb:	push   esi
300145ec:	mov    esi,0x30043460
300145f1:	mov    edx,edi
300145f3:	mov    ecx,esi
300145f5:	call   0x30017ec1
300145fa:	mov    DWORD PTR [ebp-0x1220],eax
30014600:	test   eax,eax
30014602:	js     0x3001e2a9
30014608:	call   0x3001af68
3001460d:	mov    edx,DWORD PTR ds:0x30043480
30014613:	push   0x30043c20
30014618:	push   ebx
30014619:	push   0x30043484
3001461e:	push   0x30043120
30014623:	mov    ecx,0x3000e4f0
30014628:	call   0x30018695
3001462d:	mov    edi,eax
3001462f:	xor    eax,eax
30014631:	inc    eax
30014632:	test   edi,edi
30014634:	js     0x3001ed8d
3001463a:	mov    ecx,esi
3001463c:	call   0x300180c6
30014641:	test   eax,eax
30014643:	js     0x3001ed9a
30014649:	mov    ecx,DWORD PTR ds:0x300434dc
3001464f:	test   ecx,ecx
30014651:	jne    0x3001467a
30014653:	cmp    DWORD PTR ds:0x30043574,ecx
30014659:	jne    0x3001467a
3001465b:	lea    ecx,[ebp-0x218]
30014661:	call   0x30017f51
30014666:	cmp    WORD PTR [ebp-0x218],0x0
3001466e:	jne    0x3001edac
30014674:	mov    ecx,DWORD PTR ds:0x300434dc
3001467a:	mov    edx,DWORD PTR ds:0x300435a4
30014680:	xor    eax,eax
30014682:	cmp    DWORD PTR ds:0x3004354c,eax
30014688:	setne  al
3001468b:	test   edx,edx
3001468d:	jne    0x3001edd7
30014693:	and    eax,0xfffffeff
30014698:	test   edx,edx
3001469a:	jne    0x3001ede1
300146a0:	and    eax,0xfffffdff
300146a5:	or     eax,0x1800
300146aa:	test   ecx,ecx
300146ac:	jne    0x300146b3
300146ae:	mov    ecx,0x3000e4f0
300146b3:	push   0x1
300146b5:	push   ecx
300146b6:	push   ebx
300146b7:	push   eax
300146b8:	push   DWORD PTR ds:0x30043574
300146be:	mov    ecx,0x300435d0
300146c3:	call   0x3001a545
300146c8:	mov    DWORD PTR [ebp-0x1220],eax
300146ce:	test   eax,eax
300146d0:	js     0x3001e2a9
300146d6:	push   ebx
300146d7:	lea    eax,[ebp-0x1230]
300146dd:	push   eax
300146de:	mov    ecx,0x300435d0
300146e3:	call   0x3000e4a8
300146e8:	mov    ebx,DWORD PTR [ebp-0x1230]
300146ee:	push   ebx
300146ef:	push   0x400
300146f4:	mov    esi,0x30043c60
300146f9:	push   esi
300146fa:	call   DWORD PTR ds:0x300453bc
30014700:	add    esp,0xc
30014703:	mov    DWORD PTR ds:0x300434dc,esi
30014709:	call   0x3001a8b2
3001470e:	mov    ecx,DWORD PTR ds:0x300435cc
30014714:	test   ecx,ecx
30014716:	je     0x3001edeb
3001471c:	mov    eax,DWORD PTR [ecx]
3001471e:	push   ecx
3001471f:	call   DWORD PTR [eax+0x4]
30014722:	push   ecx
30014723:	mov    ecx,DWORD PTR ds:0x300435cc
30014729:	lea    eax,[ecx+0x668]
3001472f:	lea    edx,[ecx+0x664]
30014735:	push   eax
30014736:	add    ecx,0x660
3001473c:	call   0x30019b03
30014741:	mov    ecx,DWORD PTR ds:0x300434dc
30014747:	call   0x30018274
3001474c:	mov    esi,eax
3001474e:	test   esi,esi
30014750:	js     0x30014c25
30014756:	cmp    DWORD PTR ds:0x300434d8,0x0
3001475d:	mov    DWORD PTR [ebp-0x1238],0x1
30014767:	jne    0x3001483c
3001476d:	cmp    DWORD PTR ds:0x300434e0,0x0
30014774:	jne    0x3001483c
3001477a:	cmp    DWORD PTR ds:0x300434c8,0x0
30014781:	jne    0x3001e27a
30014787:	cmp    DWORD PTR ds:0x30043488,0x0
3001478e:	jne    0x30014849
30014794:	cmp    DWORD PTR ds:0x30043498,0x0
3001479b:	jne    0x30014849
300147a1:	cmp    DWORD PTR ds:0x300434b8,0x0
300147a8:	jne    0x30014849
300147ae:	cmp    DWORD PTR ds:0x3004348c,0x0
300147b5:	jne    0x30014849
300147bb:	cmp    DWORD PTR ds:0x300434d0,0x0
300147c2:	jne    0x30014849
300147c8:	cmp    DWORD PTR ds:0x30043494,0x0
300147cf:	jne    0x30014849
300147d1:	cmp    DWORD PTR ds:0x30043490,0x0
300147d8:	jne    0x30014849
300147da:	cmp    DWORD PTR ds:0x300434ac,0x0
300147e1:	jne    0x30014849
300147e3:	cmp    DWORD PTR ds:0x300434b0,0x0
300147ea:	jne    0x30014849
300147ec:	cmp    DWORD PTR ds:0x300435b8,0x0
300147f3:	jne    0x30014849
300147f5:	cmp    DWORD PTR ds:0x300435c0,0x0
300147fc:	jne    0x30014849
300147fe:	cmp    DWORD PTR ds:0x3004355c,0x0
30014805:	jne    0x30014849
30014807:	cmp    DWORD PTR ds:0x30043568,0x0
3001480e:	jne    0x30014849
30014810:	cmp    DWORD PTR ds:0x30043558,0x0
30014817:	jne    0x30014849
30014819:	cmp    DWORD PTR ds:0x3004346c,0x0
30014820:	je     0x30014849
30014822:	mov    eax,ds:0x300435a4
30014827:	test   eax,eax
30014829:	jne    0x3001484e
3001482b:	cmp    DWORD PTR ds:0x3004358c,eax
30014831:	jne    0x3001e27a
30014837:	call   0x3001ce4b
3001483c:	cmp    DWORD PTR ds:0x300434c8,0x0
30014843:	jne    0x3001e27a
30014849:	mov    eax,ds:0x300435a4
3001484e:	cmp    DWORD PTR ds:0x3004358c,0x0
30014855:	jne    0x3001e27a
3001485b:	test   eax,eax
3001485d:	jne    0x3001e27a
30014863:	mov    ecx,0x300435d0
30014868:	call   0x3000eae0
3001486d:	mov    esi,eax
3001486f:	test   esi,esi
30014871:	js     0x30014c25
30014877:	cmp    edi,0x80070057
3001487d:	je     0x3001ee7d
30014883:	cmp    DWORD PTR ds:0x30043584,0x0
3001488a:	jne    0x3001eefd
30014890:	cmp    DWORD PTR ds:0x3004359c,0x0
30014897:	jne    0x300148a4
30014899:	mov    ecx,DWORD PTR ds:0x300434dc
3001489f:	call   0x30011542
300148a4:	mov    ecx,DWORD PTR ds:0x300434dc
300148aa:	call   0x3000ecef
300148af:	mov    esi,eax
300148b1:	test   esi,esi
300148b3:	js     0x30014c25
300148b9:	lea    eax,[ebp-0x1220]
300148bf:	push   eax
300148c0:	push   0x20019
300148c5:	push   0x0
300148c7:	push   DWORD PTR ds:0x300434dc
300148cd:	push   0x80000002
300148d2:	call   DWORD PTR ds:0x30045008
300148d8:	test   eax,eax
300148da:	jne    0x3001ef30
300148e0:	lea    eax,[ebp-0x121c]
300148e6:	push   eax
300148e7:	lea    eax,[ebp-0x218]
300148ed:	push   eax
300148ee:	lea    eax,[ebp-0x1248]
300148f4:	push   eax
300148f5:	push   0x0
300148f7:	push   0x30014e8c
300148fc:	push   DWORD PTR [ebp-0x1220]
30014902:	mov    DWORD PTR [ebp-0x121c],0x208
3001490c:	call   DWORD PTR ds:0x3004500c
30014912:	mov    esi,0x300071f8
30014917:	mov    edx,0x30043500
3001491c:	test   eax,eax
3001491e:	jne    0x3001ef20
30014924:	push   0x30043500
30014929:	lea    eax,[ebp-0x218]
3001492f:	push   eax
30014930:	call   DWORD PTR ds:0x30045498
30014936:	lea    eax,[ebp-0x121c]
3001493c:	push   eax
3001493d:	lea    eax,[ebp-0x218]
30014943:	push   eax
30014944:	lea    eax,[ebp-0x1248]
3001494a:	push   eax
3001494b:	push   0x0
3001494d:	push   0x30014eb4
30014952:	push   DWORD PTR [ebp-0x1220]
30014958:	mov    DWORD PTR [ebp-0x121c],0x208
30014962:	call   DWORD PTR ds:0x3004500c
30014968:	test   eax,eax
3001496a:	jne    0x3001e291
30014970:	push   0x30043510
30014975:	lea    eax,[ebp-0x218]
3001497b:	push   eax
3001497c:	call   DWORD PTR ds:0x30045498
30014982:	push   DWORD PTR [ebp-0x1220]
30014988:	call   DWORD PTR ds:0x30045004
3001498e:	mov    edx,0x30043500
30014993:	cmp    DWORD PTR ds:0x3004355c,0x0
3001499a:	mov    edi,0x300071f8
3001499f:	jne    0x3001ef52
300149a5:	cmp    DWORD PTR ds:0x30043568,0x0
300149ac:	jne    0x3001ef84
300149b2:	and    DWORD PTR [ebp-0x121c],0x0
300149b9:	lea    eax,[ebp-0x121c]
300149bf:	push   eax
300149c0:	push   ecx
300149c1:	push   ecx
300149c2:	mov    ecx,DWORD PTR ds:0x300434dc
300149c8:	call   0x30011700
300149cd:	mov    esi,eax
300149cf:	mov    DWORD PTR [ebp-0x1220],esi
300149d5:	test   esi,esi
300149d7:	js     0x30014c25
300149dd:	cmp    DWORD PTR [ebp-0x121c],0x0
300149e4:	jne    0x30014c25
300149ea:	mov    eax,ds:0x300435d0
300149ef:	mov    esi,DWORD PTR ds:0x300435cc
300149f5:	mov    edi,0x300435d0
300149fa:	mov    ecx,edi
300149fc:	call   DWORD PTR [eax+0x28]
300149ff:	test   al,al
30014a01:	je     0x30014a09
30014a03:	mov    DWORD PTR [esi+0x5fc],edi
30014a09:	mov    eax,ds:0x300435cc
30014a0e:	mov    esi,0x30014f10
30014a13:	mov    DWORD PTR [eax+0x608],0x30014ee8
30014a1d:	mov    DWORD PTR [eax+0x60c],0x5
30014a27:	mov    edi,DWORD PTR ds:0x300435cc
30014a2d:	lea    edi,[edi+0x680]
30014a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30014a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30014a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30014a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30014a37:	cmp    DWORD PTR ds:0x300435a4,0x0
30014a3e:	jne    0x3001efbc
30014a44:	mov    eax,ds:0x300434c8
30014a49:	cmp    DWORD PTR ds:0x300434cc,0x0
30014a50:	jne    0x3001efc9
30014a56:	test   eax,eax
30014a58:	jne    0x3001f027
30014a5e:	cmp    DWORD PTR ds:0x30043558,eax
30014a64:	jne    0x3001f027
30014a6a:	cmp    DWORD PTR ds:0x300435bc,eax
30014a70:	jne    0x3001efd5
30014a76:	mov    ecx,0x300435d0
30014a7b:	call   0x3001183a
30014a80:	movzx  eax,al
30014a83:	push   eax
30014a84:	call   0x30010f78
30014a89:	test   al,al
30014a8b:	je     0x3001f08a
30014a91:	mov    ecx,DWORD PTR ds:0x300435cc
30014a97:	mov    DWORD PTR ds:0x30043520,ecx
30014a9d:	lea    eax,[ecx+0x1ec]
30014aa3:	mov    ds:0x300434fc,eax
30014aa8:	call   0x30010580
30014aad:	mov    esi,eax
30014aaf:	test   esi,esi
30014ab1:	js     0x30014c25
30014ab7:	mov    eax,ds:0x300435cc
30014abc:	and    DWORD PTR [ebp-0x1250],0x0
30014ac3:	sub    esp,0x14
30014ac6:	push   DWORD PTR [eax+0x668]
30014acc:	lea    eax,[ebp-0x12b0]
30014ad2:	push   eax
30014ad3:	push   ecx
30014ad4:	push   ecx
30014ad5:	push   DWORD PTR ds:0x300434dc
30014adb:	mov    DWORD PTR [ebp-0x12b0],0x19f0
30014ae5:	mov    DWORD PTR [ebp-0x12ac],0x1a10
30014aef:	mov    DWORD PTR [ebp-0x12a8],0x1a11
30014af9:	mov    DWORD PTR [ebp-0x12a4],0x30014d38
30014b03:	mov    DWORD PTR [ebp-0x12a0],0x8003
30014b0d:	mov    DWORD PTR [ebp-0x129c],0x19fa
30014b17:	mov    DWORD PTR [ebp-0x1298],0x19fb
30014b21:	mov    DWORD PTR [ebp-0x1294],0x19fc
30014b2b:	mov    DWORD PTR [ebp-0x1290],0x19fd
30014b35:	mov    DWORD PTR [ebp-0x128c],0x19fe
30014b3f:	mov    DWORD PTR [ebp-0x1288],0x19ff
30014b49:	mov    DWORD PTR [ebp-0x1284],0x1a00
30014b53:	mov    DWORD PTR [ebp-0x1280],0x1a01
30014b5d:	mov    DWORD PTR [ebp-0x127c],0x1a02
30014b67:	mov    DWORD PTR [ebp-0x1278],0x1a03
30014b71:	mov    DWORD PTR [ebp-0x1274],0x1a04
30014b7b:	mov    DWORD PTR [ebp-0x1270],0x1a05
30014b85:	mov    DWORD PTR [ebp-0x126c],0x1a06
30014b8f:	mov    DWORD PTR [ebp-0x1268],0x1a07
30014b99:	mov    DWORD PTR [ebp-0x1264],0x1a08
30014ba3:	mov    DWORD PTR [ebp-0x1260],0x1a09
30014bad:	mov    DWORD PTR [ebp-0x125c],0x1a0a
30014bb7:	mov    DWORD PTR [ebp-0x1258],0x1a0b
30014bc1:	mov    DWORD PTR [ebp-0x1254],0x1a0c
30014bcb:	mov    DWORD PTR [ebp-0x124c],0x1a0f
30014bd5:	call   0x3000edb8
30014bda:	cmp    DWORD PTR ds:0x300435b0,0x0
30014be1:	jne    0x3001e29f
30014be7:	cmp    DWORD PTR ds:0x300434c8,0x0
30014bee:	jne    0x3001e29f
30014bf4:	cmp    DWORD PTR ds:0x300435a4,0x0
30014bfb:	jne    0x3001f09f
30014c01:	lea    edx,[ebp-0x1234]
30014c07:	mov    ecx,0x30043460
30014c0c:	call   0x30015d58
30014c11:	test   eax,eax
30014c13:	je     0x3001f0ea
30014c19:	mov    eax,DWORD PTR [ebp-0x1234]
30014c1f:	mov    DWORD PTR [ebp-0x1228],eax
30014c25:	mov    ecx,DWORD PTR ds:0x300435cc
30014c2b:	test   ecx,ecx
30014c2d:	je     0x30014c40
30014c2f:	add    ecx,0x620
30014c35:	call   0x30005260
30014c3a:	mov    ecx,DWORD PTR ds:0x300435cc
30014c40:	test   esi,esi
30014c42:	js     0x3001f10a
30014c48:	call   0x30016a50
30014c4d:	and    DWORD PTR ds:0x300435c4,0x0
30014c54:	mov    esi,DWORD PTR ds:0x30043464
30014c5a:	mov    ecx,0x30043460
30014c5f:	call   0x3001690e
30014c64:	mov    ecx,DWORD PTR ds:0x300435cc
30014c6a:	test   ecx,ecx
30014c6c:	je     0x30014c74
30014c6e:	mov    eax,DWORD PTR [ecx]
30014c70:	push   ecx
30014c71:	call   DWORD PTR [eax+0x8]
30014c74:	cmp    DWORD PTR [ebp-0x1238],0x0
30014c7b:	je     0x30014cac
30014c7d:	cmp    DWORD PTR ds:0x30043110,0x0
30014c84:	je     0x30014ca7
30014c86:	push   0x1ba6
30014c8b:	call   0x3000532c
30014c90:	mov    BYTE PTR [ebp-0x4],0x2
30014c94:	call   0x30017419
30014c99:	push   0x1ba7
30014c9e:	mov    BYTE PTR [ebp-0x4],0x0
30014ca2:	call   0x3000532c
30014ca7:	call   0x30016a68
30014cac:	test   esi,esi
30014cae:	je     0x30014cc9
30014cb0:	push   0x30014f20
30014cb5:	push   esi
30014cb6:	call   DWORD PTR ds:0x30045178
30014cbc:	test   eax,eax
30014cbe:	je     0x3001f1c0
30014cc4:	push   0x0
30014cc6:	call   eax
30014cc8:	pop    ecx
30014cc9:	mov    esi,DWORD PTR ds:0x30043110
30014ccf:	test   esi,esi
30014cd1:	je     0x30014cff
30014cd3:	mov    ecx,DWORD PTR [esi+0x8]
30014cd6:	sub    ecx,0x10
30014cd9:	call   0x30004017
30014cde:	mov    ecx,DWORD PTR [esi+0x4]
30014ce1:	test   ecx,ecx
30014ce3:	je     0x30014ceb
30014ce5:	mov    eax,DWORD PTR [ecx]
30014ce7:	push   ecx
30014ce8:	call   DWORD PTR [eax+0x8]
30014ceb:	mov    ecx,DWORD PTR [esi]
30014ced:	test   ecx,ecx
30014cef:	je     0x30014cf7
30014cf1:	mov    eax,DWORD PTR [ecx]
30014cf3:	push   ecx
30014cf4:	call   DWORD PTR [eax+0x8]
30014cf7:	push   esi
30014cf8:	call   DWORD PTR ds:0x300452ac
30014cfe:	pop    ecx
30014cff:	and    DWORD PTR ds:0x30043110,0x0
30014d06:	mov    ecx,0x300435d0
30014d0b:	call   0x30016eaa
30014d10:	lea    ecx,[ebx-0x10]
30014d13:	call   0x30004017
30014d18:	mov    eax,DWORD PTR [ebp-0x1228]
30014d1e:	mov    ecx,DWORD PTR [ebp-0xc]
30014d21:	mov    DWORD PTR fs:0x0,ecx
30014d28:	pop    ecx
30014d29:	pop    edi
30014d2a:	pop    esi
30014d2b:	pop    ebx
30014d2c:	mov    ecx,DWORD PTR [ebp-0x10]
30014d2f:	xor    ecx,ebp
30014d31:	call   0x3000115c
30014d36:	leave  
30014d37:	ret    
30014d38:	push   edx
30014d39:	add    BYTE PTR [eax+eax*1+0x52],al
30014d3d:	add    BYTE PTR [ebp+0x0],al
30014d40:	push   edx
30014d41:	add    BYTE PTR [edx+0x0],dl
30014d44:	push   edx
30014d45:	add    BYTE PTR [edx+0x0],dl
30014d48:	push   edx
30014d49:	add    BYTE PTR [edx+0x0],dl
30014d4c:	dec    ecx
30014d4d:	add    BYTE PTR [edx],dh
30014d4f:	add    BYTE PTR [edx+0x0],dl
30014d52:	push   edx
30014d53:	add    BYTE PTR [edx+0x0],dl
30014d56:	push   edx
30014d57:	add    BYTE PTR [ecx+0x0],dl
30014d5a:	inc    ebp
30014d5b:	add    BYTE PTR [ecx+0x0],dl
30014d5e:	push   eax
30014d5f:	add    BYTE PTR [eax+0x0],dl
30014d62:	dec    ebx
30014d63:	add    BYTE PTR [ebp+0x0],al
30014d66:	dec    eax
30014d67:	add    BYTE PTR [edx+0x0],dl
30014d6a:	push   edx
30014d6b:	add    BYTE PTR [edx+0x0],dl
30014d6e:	inc    ebp
30014d6f:	add    BYTE PTR [edx+0x0],dl
30014d72:	push   edx
30014d73:	add    BYTE PTR [edx+0x0],dl
30014d76:	push   edx
30014d77:	add    BYTE PTR [edx+0x0],dl
30014d7a:	dec    ecx
30014d7b:	add    BYTE PTR [edx+0x0],dl
30014d7e:	push   edx
30014d7f:	add    BYTE PTR [edx+0x0],dl
30014d82:	dec    ecx
30014d83:	add    BYTE PTR [edx+0x0],dl
30014d86:	push   edx
30014d87:	add    BYTE PTR [eax+0x0],dl
30014d8a:	xor    BYTE PTR [eax],al
30014d8c:	inc    ebp
30014d8d:	add    BYTE PTR [edx],dh
30014d8f:	add    BYTE PTR [eax+0x0],cl
30014d92:	push   eax
30014d93:	add    BYTE PTR [edx+0x0],bl
30014d96:	pop    edx
30014d97:	add    BYTE PTR [edx+0x0],bl
30014d9a:	dec    ebx
30014d9b:	add    BYTE PTR [ebx+0x0],al
30014d9e:	cmp    DWORD PTR [eax],eax
30014da0:	dec    ebx
30014da1:	add    BYTE PTR [eax+0x0],cl
30014da4:	push   ecx
30014da5:	add    BYTE PTR [eax+eax*1+0x4d],dl
30014da9:	add    BYTE PTR [ecx],bh
30014dab:	add    BYTE PTR [eax+0x0],dl
30014dae:	xor    eax,DWORD PTR [eax]
30014db0:	dec    ebx
30014db1:	add    BYTE PTR [ecx+0x0],cl
30014db4:	inc    ebx
30014db5:	add    BYTE PTR [eax+0x0],cl
30014db8:	dec    eax
30014db9:	add    BYTE PTR [ebx+0x0],cl
30014dbc:	pop    edx
30014dbd:	add    BYTE PTR [ebx+0x0],al
30014dc0:	push   eax
30014dc1:	add    BYTE PTR [eax+0x0],cl
30014dc4:	inc    ecx
30014dc5:	add    BYTE PTR [edx+0x0],dl
30014dc8:	push   eax
30014dc9:	add    BYTE PTR [ecx+0x0],dl
30014dcc:	inc    ebp
30014dcd:	add    BYTE PTR [ecx],bh
30014dcf:	add    BYTE PTR [ebx+0x0],al
30014dd2:	xor    eax,DWORD PTR [eax]
30014dd4:	dec    ebx
30014dd5:	add    BYTE PTR [eax],dh
30014dd7:	add    BYTE PTR [ebp+0x0],al
30014dda:	xor    eax,DWORD PTR [eax]
30014ddc:	push   ecx
30014ddd:	add    BYTE PTR [ebx],dh
30014ddf:	add    BYTE PTR [ecx+0x0],al
30014de2:	push   edx
30014de3:	add    BYTE PTR [ebx+0x0],cl
30014de6:	cmp    DWORD PTR [eax],eax
30014de8:	inc    ebp
30014de9:	add    BYTE PTR [edx+0x0],dl
30014dec:	dec    eax
30014ded:	add    BYTE PTR [ebx+0x0],al
30014df0:	push   eax
30014df1:	add    BYTE PTR [ebp+0x0],cl
30014df4:	dec    ebx
30014df5:	add    BYTE PTR [edx+0x0],bl
30014df8:	dec    ecx
30014df9:	add    BYTE PTR [ebx+0x0],al
30014dfc:	dec    ebx
30014dfd:	add    BYTE PTR [ecx],bh
30014dff:	add    BYTE PTR [edx+0x0],bl
30014e02:	push   ecx
30014e03:	add    BYTE PTR [edx+0x0],dl
30014e06:	dec    eax
30014e07:	add    BYTE PTR [eax+0x0],cl
30014e0a:	push   edx
30014e0b:	add    BYTE PTR [ebp+0x0],al
30014e0e:	pop    edx
30014e0f:	add    BYTE PTR [ebp+0x0],al
30014e12:	push   esp
30014e13:	add    BYTE PTR [edx+0x0],dl
30014e16:	inc    ebp
30014e17:	add    BYTE PTR [edx+0x0],bl
30014e1a:	push   ecx
30014e1b:	add    BYTE PTR [eax+0x0],dl
30014e1e:	cmp    BYTE PTR [eax],al
30014e20:	push   ecx
30014e21:	add    BYTE PTR [ecx],dh
30014e23:	add    BYTE PTR [edx+0x0],bl
30014e26:	inc    esp
30014e27:	add    BYTE PTR [ecx+0x0],cl
30014e2a:	dec    ebx
30014e2b:	add    BYTE PTR [eax+eax*1+0x52],al
30014e2f:	add    BYTE PTR [ebp+0x0],al
30014e32:	dec    eax
30014e33:	add    BYTE PTR [edx+0x0],dl
30014e36:	xor    al,BYTE PTR [eax]
30014e38:	inc    ebx
30014e39:	add    BYTE PTR [ebx],dh
30014e3b:	add    BYTE PTR [ebx+0x0],cl
30014e3e:	cmp    DWORD PTR [eax],eax
30014e40:	push   edx
30014e41:	add    BYTE PTR [eax+eax*1+0x50],al
30014e45:	add    BYTE PTR [ecx],bh
30014e47:	add    BYTE PTR [ebp+0x0],cl
30014e4a:	pop    edx
30014e4b:	add    BYTE PTR [ecx+0x0],dl
30014e4e:	cmp    DWORD PTR [eax],eax
30014e50:	dec    edx
30014e51:	add    BYTE PTR [ecx+0x0],dl
30014e54:	dec    eax
30014e55:	add    BYTE PTR [ebx+0x0],al
30014e58:	dec    ebx
30014e59:	add    BYTE PTR [ebp+0x0],al
30014e5c:	dec    ecx
30014e5d:	add    BYTE PTR [ebp+0x0],cl
30014e60:	inc    ecx
30014e61:	add    BYTE PTR [edx+0x0],dl
30014e64:	push   edx
30014e65:	add    BYTE PTR [edx+0x0],bl
30014e68:	inc    ebx
30014e69:	add    BYTE PTR [eax],bh
30014e6b:	add    BYTE PTR [edx+0x0],dl
30014e6e:	pop    edx
30014e6f:	add    BYTE PTR [ebp+0x0],al
30014e72:	xor    BYTE PTR [eax],al
30014e74:	inc    ebp
30014e75:	add    BYTE PTR [edx],dh
30014e77:	add    BYTE PTR [ebp+0x0],al
30014e7a:	dec    ebp
30014e7b:	add    BYTE PTR [ebp+0x0],cl
30014e7e:	push   esp
30014e7f:	add    BYTE PTR [edx+0x0],bl
30014e82:	dec    eax
30014e83:	add    BYTE PTR [ebx+0x0],al
30014e86:	cmp    BYTE PTR [eax],al
30014e88:	add    BYTE PTR [eax],al
30014e8a:	nop
30014e8b:	nop
30014e8c:	push   esp
30014e8d:	add    BYTE PTR [eax+0x0],ch
30014e90:	imul   eax,DWORD PTR [eax],0x560073
30014e96:	add    BYTE PTR gs:[edx+0x0],dh
30014e9a:	jae    0x30014e9c
30014e9c:	imul   eax,DWORD PTR [eax],0x6e006f
30014ea2:	inc    esp
30014ea3:	add    BYTE PTR [eax+eax*1+0x45],dl
30014ea7:	add    BYTE PTR [ebx+0x0],al
30014eaa:	dec    esp
30014eab:	add    BYTE PTR [ebx+0x0],dl
30014eae:	dec    ecx
30014eaf:	add    BYTE PTR [eax+eax*1+0x0],al
30014eb3:	add    BYTE PTR [eax+eax*1+0x68],dl
30014eb7:	add    BYTE PTR [ecx+0x0],ch
30014eba:	jae    0x30014ebc
30014ebc:	push   esi
30014ebd:	add    BYTE PTR [ebp+0x0],ah
30014ec0:	jb     0x30014ec2
30014ec2:	jae    0x30014ec4
30014ec4:	imul   eax,DWORD PTR [eax],0x6e006f
30014eca:	push   ebx
30014ecb:	add    BYTE PTR [edi+0x0],ch
30014ece:	ins    BYTE PTR es:[edi],dx
30014ecf:	add    BYTE PTR [ebp+0x0],dh
30014ed2:	je     0x30014ed4
30014ed4:	imul   eax,DWORD PTR [eax],0x6e006f
30014eda:	inc    ebx
30014edb:	add    BYTE PTR [eax+eax*1+0x53],cl
30014edf:	add    BYTE PTR [ecx+0x0],cl
30014ee2:	inc    esp
30014ee3:	add    BYTE PTR [eax],al
30014ee5:	add    BYTE PTR [eax+0x5f3fb090],dl
30014eeb:	jg     0x30014efe
30014eed:	aad    0xa
30014eef:	cmp    dh,BYTE PTR [ebx]
30014ef1:	scas   al,BYTE PTR es:[edi]
30014ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
30014ef3:	rcl    DWORD PTR [esi],cl
30014ef5:	xchg   ecx,eax
30014ef6:	push   0x91680303
30014efb:	push   ss
30014efc:	shl    DWORD PTR [esi+ebp*4+0x38bf3133],cl
30014f03:	push   esi
30014f04:	lods   eax,DWORD PTR ds:[esi]
30014f05:	ss dec esi
30014f07:	xor    eax,0x565c7ab7
30014f0c:	sbb    DWORD PTR [eax+eiz*8],esi
30014f0f:	mov    esi,edi
30014f11:	and    eax,0x3641eb14
30014f16:	stos   DWORD PTR es:[edi],eax
30014f17:	inc    edi
30014f18:	xchg   esp,eax
30014f19:	test   BYTE PTR [edx],dh
30014f1b:	mov    dh,0x2f
30014f1d:	enter  0xb0b0,0x56
30014f21:	push   ebx
30014f22:	je     0x30014f99
30014f24:	imul   ebp,DWORD PTR fs:[edi+0x54],0x6d7265
30014f2c:	push   ebp
30014f2d:	mov    ebp,esp
30014f2f:	push   ecx
30014f30:	cmp    DWORD PTR ds:0x30043690,0x0
30014f37:	jne    0x300275b8
30014f3d:	push   esi
30014f3e:	xor    esi,esi
30014f40:	push   esi
30014f41:	call   DWORD PTR ds:0x300451a4
30014f47:	push   eax
30014f48:	push   0x30043690
30014f4d:	call   DWORD PTR ds:0x30045130
30014f53:	test   eax,eax
30014f55:	jne    0x300275bf
30014f5b:	mov    DWORD PTR ds:0x3004368c,esi
30014f61:	mov    DWORD PTR ds:0x300436a0,esi
30014f67:	mov    DWORD PTR ds:0x3004369c,esi
30014f6d:	mov    DWORD PTR ds:0x30043694,esi
30014f73:	mov    DWORD PTR ds:0x30043698,esi
30014f79:	mov    esi,DWORD PTR ds:0x30043688
30014f7f:	test   esi,esi
30014f81:	jne    0x3001748c
30014f87:	xor    eax,eax
30014f89:	pop    esi
30014f8a:	leave  
30014f8b:	ret    
30014f8c:	push   ebp
30014f8d:	mov    ebp,esp
30014f8f:	mov    eax,ds:0x30043694
30014f94:	test   eax,eax
30014f96:	jne    0x30014fad
30014f98:	push   ebx
30014f99:	call   DWORD PTR ds:0x3004526c
30014f9f:	mov    ebx,DWORD PTR [ebp+0x8]
30014fa2:	cmp    ebx,eax
30014fa4:	jne    0x300276c1
30014faa:	xor    eax,eax
30014fac:	pop    ebx
30014fad:	pop    ebp
30014fae:	ret    0x4
30014fb1:	push   ebp
30014fb2:	mov    ebp,esp
30014fb4:	push   esi
30014fb5:	mov    esi,DWORD PTR [ebp+0x8]
30014fb8:	test   esi,esi
30014fba:	je     0x30027427
30014fc0:	mov    eax,DWORD PTR [ebp+0xc]
30014fc3:	test   eax,eax
30014fc5:	jne    0x3002742e
30014fcb:	mov    al,BYTE PTR [esi]
30014fcd:	push   edi
30014fce:	cmp    al,0xff
30014fd0:	je     0x30027436
30014fd6:	cmp    al,0xeb
30014fd8:	je     0x30027459
30014fde:	mov    eax,esi
30014fe0:	pop    edi
30014fe1:	pop    esi
30014fe2:	pop    ebp
30014fe3:	ret    0x8
30014fe6:	push   ebp
30014fe7:	mov    ebp,esp
30014fe9:	push   ecx
30014fea:	push   esi
30014feb:	push   edi
30014fec:	call   DWORD PTR ds:0x300451e4
30014ff2:	mov    esi,DWORD PTR ds:0x30043688
30014ff8:	mov    edi,eax
30014ffa:	test   esi,esi
30014ffc:	je     0x30015023
30014ffe:	push   ebx
30014fff:	mov    ebx,0x10000
30015004:	lea    eax,[ebp-0x4]
30015007:	push   eax
30015008:	push   0x20
3001500a:	push   ebx
3001500b:	push   esi
3001500c:	call   DWORD PTR ds:0x30045118
30015012:	push   ebx
30015013:	push   esi
30015014:	push   edi
30015015:	call   DWORD PTR ds:0x30045120
3001501b:	mov    esi,DWORD PTR [esi+0x4]
3001501e:	test   esi,esi
30015020:	jne    0x30015004
30015022:	pop    ebx
30015023:	pop    edi
30015024:	pop    esi
30015025:	leave  
30015026:	ret    
30015027:	mov    al,ds:0x300430f1
3001502c:	ret    
3001502d:	push   ebp
3001502e:	mov    ebp,esp
30015030:	mov    edx,DWORD PTR [ecx+0x4]
30015033:	test   edx,edx
30015035:	je     0x3001e1b2
3001503b:	mov    al,BYTE PTR [ebp+0x8]
3001503e:	cmp    BYTE PTR [ecx+0x9],al
30015041:	je     0x3001762c
30015047:	push   esi
30015048:	push   edi
30015049:	mov    BYTE PTR [ecx+0x9],al
3001504c:	push   0x0
3001504e:	test   al,al
30015050:	je     0x30017616
30015056:	push   edx
30015057:	call   DWORD PTR ds:0x30045200
3001505d:	test   eax,eax
3001505f:	jne    0x300263ea
30015065:	xor    eax,eax
30015067:	pop    edi
30015068:	pop    esi
30015069:	pop    ebp
3001506a:	ret    0x4
3001506d:	push   esi
3001506e:	mov    esi,ecx
30015070:	mov    ecx,DWORD PTR [esi+0x18]
30015073:	sub    ecx,0x10
30015076:	call   0x30004017
3001507b:	mov    ecx,DWORD PTR [esi+0x14]
3001507e:	sub    ecx,0x10
30015081:	call   0x30004017
30015086:	mov    ecx,DWORD PTR [esi+0x10]
30015089:	sub    ecx,0x10
3001508c:	call   0x30004017
30015091:	mov    ecx,DWORD PTR [esi+0xc]
30015094:	sub    ecx,0x10
30015097:	pop    esi
30015098:	jmp    0x30004017
3001509d:	nop
3001509e:	nop
3001509f:	nop
300150a0:	add    BYTE PTR [edx],ah
300150a2:	add    DWORD PTR [eax],eax
300150a4:	test   al,0x58
300150a6:	add    DWORD PTR [eax],esi
300150a8:	add    DWORD PTR [edx],esp
300150aa:	add    DWORD PTR [eax],eax
300150ac:	test   al,0x58
300150ae:	add    DWORD PTR [eax],esi
300150b0:	add    ah,BYTE PTR [edx]
300150b2:	add    DWORD PTR [eax],eax
300150b4:	test   al,0x58
300150b6:	add    DWORD PTR [eax],esi
300150b8:	add    esp,DWORD PTR [edx]
300150ba:	add    DWORD PTR [eax],eax
300150bc:	test   al,0x58
300150be:	add    DWORD PTR [eax],esi
300150c0:	add    al,0x22
300150c2:	add    BYTE PTR [eax],al
300150c4:	test   al,0x58
300150c6:	add    DWORD PTR [eax],esi
300150c8:	add    eax,0xa8000035
300150cd:	pop    eax
300150ce:	add    DWORD PTR [eax],esi
300150d0:	push   es
300150d1:	adc    DWORD PTR [eax],eax
300150d3:	add    BYTE PTR [eax+0x7300158],ch
300150d9:	adc    DWORD PTR [eax],eax
300150db:	add    BYTE PTR [eax+0x8300158],ch
300150e1:	and    al,BYTE PTR [ecx]
300150e3:	add    BYTE PTR [eax+0x9300158],ch
300150e9:	and    al,BYTE PTR [ecx]
300150eb:	add    BYTE PTR [eax+0xa300158],ch
300150f1:	and    al,BYTE PTR [ecx]
300150f3:	add    BYTE PTR [eax+0xb300158],ch
300150f9:	and    al,BYTE PTR [ecx]
300150fb:	add    BYTE PTR [eax+0xc300158],ch
30015101:	and    al,BYTE PTR [eax]
30015103:	add    BYTE PTR [eax+0xd300158],ch
30015109:	xor    eax,0x58a80000
3001510e:	add    DWORD PTR [eax],esi
30015110:	push   cs
30015111:	adc    DWORD PTR [eax],eax
30015113:	add    BYTE PTR [eax+0xf300158],ch
30015119:	adc    DWORD PTR [eax],eax
3001511b:	add    BYTE PTR [esi-0x7c],dh
3001511e:	add    esi,DWORD PTR [eax]
30015120:	adc    BYTE PTR [edx],ah
30015122:	add    DWORD PTR [eax],eax
30015124:	test   al,0x58
30015126:	add    DWORD PTR [eax],esi
30015128:	adc    DWORD PTR [edx],esp
3001512a:	add    DWORD PTR [eax],eax
3001512c:	test   al,0x58
3001512e:	add    DWORD PTR [eax],esi
30015130:	adc    ah,BYTE PTR [edx]
30015132:	add    DWORD PTR [eax],eax
30015134:	test   al,0x58
30015136:	add    DWORD PTR [eax],esi
30015138:	adc    esp,DWORD PTR [edx]
3001513a:	add    DWORD PTR [eax],eax
3001513c:	test   al,0x58
3001513e:	add    DWORD PTR [eax],esi
30015140:	adc    al,0x22
30015142:	add    BYTE PTR [eax],al
30015144:	test   al,0x58
30015146:	add    DWORD PTR [eax],esi
30015148:	adc    eax,0xa8000035
3001514d:	pop    eax
3001514e:	add    DWORD PTR [eax],esi
30015150:	push   ss
30015151:	adc    DWORD PTR [eax],eax
30015153:	add    BYTE PTR [eax+0x17300158],ch
30015159:	adc    DWORD PTR [eax],eax
3001515b:	add    BYTE PTR [eax+0x18300158],ch
30015161:	and    al,BYTE PTR [ecx]
30015163:	add    BYTE PTR [eax+0x19300158],ch
30015169:	and    al,BYTE PTR [ecx]
3001516b:	add    BYTE PTR [eax+0x1a300158],ch
30015171:	and    al,BYTE PTR [ecx]
30015173:	add    BYTE PTR [eax+0x1b300158],ch
30015179:	and    al,BYTE PTR [ecx]
3001517b:	add    BYTE PTR [eax+0x1c300158],ch
30015181:	and    al,BYTE PTR [eax]
30015183:	add    BYTE PTR [eax+0x1d300158],ch
30015189:	xor    eax,0x58a80000
3001518e:	add    DWORD PTR [eax],esi
30015190:	push   ds
30015191:	adc    DWORD PTR [eax],eax
30015193:	add    BYTE PTR [eax+0x1f300158],ch
30015199:	adc    DWORD PTR [eax],eax
3001519b:	add    BYTE PTR [eax+0x20300158],ch
300151a1:	and    al,BYTE PTR [ecx]
300151a3:	add    BYTE PTR [eax+0x21300158],ch
300151a9:	and    al,BYTE PTR [ecx]
300151ab:	add    BYTE PTR [eax+0x22300158],ch
300151b1:	and    al,BYTE PTR [ecx]
300151b3:	add    BYTE PTR [eax+0x23300158],ch
300151b9:	and    al,BYTE PTR [ecx]
300151bb:	add    BYTE PTR [eax+0x24300158],ch
300151c1:	and    al,BYTE PTR [eax]
300151c3:	add    BYTE PTR [eax+0x25300158],ch
300151c9:	xor    eax,0x58a80000
300151ce:	add    DWORD PTR [eax],esi
300151d0:	adc    DWORD PTR es:[eax],eax
300151d3:	add    BYTE PTR [esp+eax*4],dh
300151d6:	add    esi,DWORD PTR [eax]
300151d8:	daa    
300151d9:	adc    DWORD PTR [eax],eax
300151db:	add    BYTE PTR [eax+0x28300158],ch
300151e1:	and    al,BYTE PTR [ecx]
300151e3:	add    BYTE PTR [eax+0x29300158],ch
300151e9:	and    al,BYTE PTR [ecx]
300151eb:	add    BYTE PTR [eax+0x2a300158],ch
300151f1:	and    al,BYTE PTR [ecx]
300151f3:	add    BYTE PTR [eax+0x2b300158],ch
300151f9:	and    al,BYTE PTR [ecx]
300151fb:	add    BYTE PTR [eax+0x2c300158],ch
30015201:	and    al,BYTE PTR [eax]
30015203:	add    BYTE PTR [eax+0x2d300158],ch
30015209:	xor    eax,0x58a80000
3001520e:	add    DWORD PTR [eax],esi
30015210:	adc    DWORD PTR cs:[eax],eax
30015213:	add    BYTE PTR [esp+eax*4],dh
30015216:	add    esi,DWORD PTR [eax]
30015218:	das    
30015219:	adc    DWORD PTR [eax],eax
3001521b:	add    BYTE PTR [eax+0x30300158],ch
30015221:	and    al,BYTE PTR [ecx]
30015223:	add    BYTE PTR [eax+0x31300158],ch
30015229:	and    al,BYTE PTR [ecx]
3001522b:	add    BYTE PTR [eax+0x32300158],ch
30015231:	and    al,BYTE PTR [ecx]
30015233:	add    BYTE PTR [eax+0x33300158],ch
30015239:	and    al,BYTE PTR [ecx]
3001523b:	add    BYTE PTR [eax+0x34300158],ch
30015241:	and    al,BYTE PTR [eax]
30015243:	add    BYTE PTR [eax+0x35300158],ch
30015249:	xor    eax,0x58a80000
3001524e:	add    DWORD PTR [eax],esi
30015250:	adc    DWORD PTR ss:[eax],eax
30015253:	add    BYTE PTR [esp+eax*4],dh
30015256:	add    esi,DWORD PTR [eax]
30015258:	aaa    
30015259:	adc    DWORD PTR [eax],eax
3001525b:	add    BYTE PTR [eax+0x38300158],ch
30015261:	and    al,BYTE PTR [ecx]
30015263:	add    BYTE PTR [eax+0x39300158],ch
30015269:	and    al,BYTE PTR [ecx]
3001526b:	add    BYTE PTR [eax+0x3a300158],ch
30015271:	and    al,BYTE PTR [ecx]
30015273:	add    BYTE PTR [eax+0x3b300158],ch
30015279:	and    al,BYTE PTR [ecx]
3001527b:	add    BYTE PTR [eax+0x3c300158],ch
30015281:	and    al,BYTE PTR [eax]
30015283:	add    BYTE PTR [eax+0x3d300158],ch
30015289:	xor    eax,0x58a80000
3001528e:	add    DWORD PTR [eax],esi
30015290:	adc    DWORD PTR ds:[eax],eax
30015293:	add    BYTE PTR [esp+eax*4],dh
30015296:	add    esi,DWORD PTR [eax]
30015298:	aas    
30015299:	adc    DWORD PTR [eax],eax
3001529b:	add    BYTE PTR [eax+0x40300158],ch
300152a1:	adc    DWORD PTR [eax],eax
300152a3:	add    BYTE PTR [eax+0x41300158],ch
300152a9:	adc    DWORD PTR [eax],eax
300152ab:	add    BYTE PTR [eax+0x42300158],ch
300152b1:	adc    DWORD PTR [eax],eax
300152b3:	add    BYTE PTR [eax+0x43300158],ch
300152b9:	adc    DWORD PTR [eax],eax
300152bb:	add    BYTE PTR [eax+0x44300158],ch
300152c1:	adc    DWORD PTR [eax],eax
300152c3:	add    BYTE PTR [eax+0x45300158],ch
300152c9:	adc    DWORD PTR [eax],eax
300152cb:	add    BYTE PTR [eax+0x46300158],ch
300152d1:	adc    DWORD PTR [eax],eax
300152d3:	add    BYTE PTR [eax+0x47300158],ch
300152d9:	adc    DWORD PTR [eax],eax
300152db:	add    BYTE PTR [eax+0x48300158],ch
300152e1:	adc    DWORD PTR [eax],eax
300152e3:	add    BYTE PTR [eax+0x49300158],ch
300152e9:	adc    DWORD PTR [eax],eax
300152eb:	add    BYTE PTR [eax+0x4a300158],ch
300152f1:	adc    DWORD PTR [eax],eax
300152f3:	add    BYTE PTR [eax+0x4b300158],ch
300152f9:	adc    DWORD PTR [eax],eax
300152fb:	add    BYTE PTR [eax+0x4c300158],ch
30015301:	adc    DWORD PTR [eax],eax
30015303:	add    BYTE PTR [eax+0x4d300158],ch
30015309:	adc    DWORD PTR [eax],eax
3001530b:	add    BYTE PTR [eax+0x4e300158],ch
30015311:	adc    DWORD PTR [eax],eax
30015313:	add    BYTE PTR [eax+0x4f300158],ch
30015319:	adc    DWORD PTR [eax],eax
3001531b:	add    BYTE PTR [eax+0x50300158],ch
30015321:	adc    DWORD PTR [eax],eax
30015323:	add    BYTE PTR [eax+0x51300158],ch
30015329:	adc    DWORD PTR [eax],eax
3001532b:	add    BYTE PTR [eax+0x52300158],ch
30015331:	adc    DWORD PTR [eax],eax
30015333:	add    BYTE PTR [eax+0x53300158],ch
30015339:	adc    DWORD PTR [eax],eax
3001533b:	add    BYTE PTR [eax+0x54300158],ch
30015341:	adc    DWORD PTR [eax],eax
30015343:	add    BYTE PTR [eax+0x55300158],ch
30015349:	adc    DWORD PTR [eax],eax
3001534b:	add    BYTE PTR [eax+0x56300158],ch
30015351:	adc    DWORD PTR [eax],eax
30015353:	add    BYTE PTR [eax+0x57300158],ch
30015359:	adc    DWORD PTR [eax],eax
3001535b:	add    BYTE PTR [eax+0x58300158],ch
30015361:	adc    DWORD PTR [eax],eax
30015363:	add    BYTE PTR [eax+0x59300158],ch
30015369:	adc    DWORD PTR [eax],eax
3001536b:	add    BYTE PTR [eax+0x5a300158],ch
30015371:	adc    DWORD PTR [eax],eax
30015373:	add    BYTE PTR [eax+0x5b300158],ch
30015379:	adc    DWORD PTR [eax],eax
3001537b:	add    BYTE PTR [eax+0x5c300158],ch
30015381:	adc    DWORD PTR [eax],eax
30015383:	add    BYTE PTR [eax+0x5d300158],ch
30015389:	adc    DWORD PTR [eax],eax
3001538b:	add    BYTE PTR [eax+0x5e300158],ch
30015391:	adc    DWORD PTR [eax],eax
30015393:	add    BYTE PTR [eax+0x5f300158],ch
30015399:	adc    DWORD PTR [eax],eax
3001539b:	add    BYTE PTR [eax+0x60300158],ch
300153a1:	adc    DWORD PTR [eax],eax
300153a3:	add    BYTE PTR [eax+0x61300158],ch
300153a9:	adc    DWORD PTR [eax],eax
300153ab:	add    BYTE PTR [eax+0x62300158],ch
300153b1:	and    al,BYTE PTR [ecx]
300153b3:	add    BYTE PTR [eax+0x63300158],ch
300153b9:	and    al,BYTE PTR [ecx]
300153bb:	add    BYTE PTR [eax+0x64300158],ch
300153c1:	adc    DWORD PTR [eax],eax
300153c3:	add    BYTE PTR [esp+eax*4],dh
300153c6:	add    esi,DWORD PTR [eax]
300153c8:	adc    DWORD PTR gs:[eax],eax
300153cb:	add    BYTE PTR [esp+eax*4],dh
300153ce:	add    esi,DWORD PTR [eax]
300153d0:	adc    WORD PTR [eax],ax
300153d3:	add    BYTE PTR [eax+0x6730038c],bh
300153d9:	adc    DWORD PTR [eax],eax
300153db:	add    bh,al
300153dd:	mov    WORD PTR [ebx],es
300153df:	xor    BYTE PTR [eax+0x35],ch
300153e2:	add    BYTE PTR [eax],al
300153e4:	test   al,0x58
300153e6:	add    DWORD PTR [eax],esi
300153e8:	imul   eax,DWORD PTR [esi+0x1],0x158a804
300153ef:	xor    BYTE PTR [edx+0x22],ch
300153f2:	add    BYTE PTR [eax],al
300153f4:	test   al,0x58
300153f6:	add    DWORD PTR [eax],esi
300153f8:	imul   esi,DWORD PTR [ebx],0x1
300153fb:	add    DWORD PTR [eax+0x6c300158],ebp
30015401:	adc    DWORD PTR [eax],eax
30015403:	add    BYTE PTR [eax+0x6d300158],ch
30015409:	adc    DWORD PTR [eax],eax
3001540b:	add    BYTE PTR [eax+0x6e300158],ch
30015411:	adc    DWORD PTR [eax],eax
30015413:	add    BYTE PTR [eax+0x6f300158],ch
30015419:	adc    DWORD PTR [eax],eax
3001541b:	add    BYTE PTR [eax+0x70300158],ch
30015421:	and    dl,BYTE PTR [eax]
30015423:	add    BYTE PTR [eax+0x71300158],ch
30015429:	and    dl,BYTE PTR [eax]
3001542b:	add    BYTE PTR [eax+0x72300158],ch
30015431:	and    dl,BYTE PTR [eax]
30015433:	add    BYTE PTR [eax+0x73300158],ch
30015439:	and    dl,BYTE PTR [eax]
3001543b:	add    BYTE PTR [eax+0x74300158],ch
30015441:	and    dl,BYTE PTR [eax]
30015443:	add    BYTE PTR [eax+0x75300158],ch
30015449:	and    dl,BYTE PTR [eax]
3001544b:	add    BYTE PTR [eax+0x76300158],ch
30015451:	and    dl,BYTE PTR [eax]
30015453:	add    BYTE PTR [eax+0x77300158],ch
30015459:	and    dl,BYTE PTR [eax]
3001545b:	add    BYTE PTR [eax+0x78300158],ch
30015461:	and    dl,BYTE PTR [eax]
30015463:	add    BYTE PTR [eax+0x79300158],ch
30015469:	and    dl,BYTE PTR [eax]
3001546b:	add    BYTE PTR [eax+0x7a300158],ch
30015471:	and    dl,BYTE PTR [eax]
30015473:	add    BYTE PTR [eax+0x7b300158],ch
30015479:	and    dl,BYTE PTR [eax]
3001547b:	add    BYTE PTR [eax+0x7c300158],ch
30015481:	and    dl,BYTE PTR [eax]
30015483:	add    BYTE PTR [eax+0x7d300158],ch
30015489:	and    dl,BYTE PTR [eax]
3001548b:	add    BYTE PTR [eax+0x7e300158],ch
30015491:	and    dl,BYTE PTR [eax]
30015493:	add    BYTE PTR [eax+0x7f300158],ch
30015499:	and    dl,BYTE PTR [eax]
3001549b:	add    BYTE PTR [eax-0x7fcffea8],ch
300154a1:	xor    eax,DWORD PTR [ecx]
300154a3:	add    DWORD PTR [eax-0x7ecffea8],ebp
300154a9:	inc    esi
300154aa:	add    DWORD PTR [eax+ebp*4],eax
300154ad:	pop    eax
300154ae:	add    DWORD PTR [eax],esi
300154b0:	and    BYTE PTR [edx],0x0
300154b3:	add    BYTE PTR [eax-0x7ccffea8],ch
300154b9:	xor    eax,DWORD PTR [ecx]
300154bb:	add    DWORD PTR [eax-0x7bcffea8],ebp
300154c1:	and    al,BYTE PTR [ecx]
300154c3:	add    BYTE PTR [eax-0x7acffea8],ch
300154c9:	and    al,BYTE PTR [ecx]
300154cb:	add    BYTE PTR [eax-0x79cffea8],ch
300154d1:	and    al,BYTE PTR [ecx]
300154d3:	add    BYTE PTR [eax-0x78cffea8],ch
300154d9:	and    al,BYTE PTR [ecx]
300154db:	add    BYTE PTR [eax-0x77cffea8],ch
300154e1:	and    al,BYTE PTR [ecx]
300154e3:	add    BYTE PTR [eax-0x76cffea8],ch
300154e9:	and    al,BYTE PTR [ecx]
300154eb:	add    BYTE PTR [eax-0x75cffea8],ch
300154f1:	and    al,BYTE PTR [ecx]
300154f3:	add    BYTE PTR [eax-0x74cffea8],ch
300154f9:	and    al,BYTE PTR [ecx]
300154fb:	add    BYTE PTR [eax-0x73cffea8],ch
30015501:	and    al,BYTE PTR [ecx]
30015503:	add    BYTE PTR [eax-0x72cffea8],ch
30015509:	and    al,BYTE PTR [ecx]
3001550b:	add    BYTE PTR [eax-0x71cffea8],ch
30015511:	and    al,BYTE PTR [ecx]
30015513:	add    BYTE PTR [eax-0x70cffea8],ch
30015519:	and    al,BYTE PTR [ecx]
3001551b:	add    BYTE PTR [eax-0x6fcffea8],ch
30015521:	adc    DWORD PTR [eax],eax
30015523:	add    BYTE PTR [eax-0x6ecffea8],ch
30015529:	adc    DWORD PTR [eax],eax
3001552b:	add    BYTE PTR [eax-0x6dcffea8],ch
30015531:	adc    DWORD PTR [eax],eax
30015533:	add    BYTE PTR [eax-0x6ccffea8],ch
30015539:	adc    DWORD PTR [eax],eax
3001553b:	add    BYTE PTR [eax-0x6bcffea8],ch
30015541:	adc    DWORD PTR [eax],eax
30015543:	add    BYTE PTR [eax-0x6acffea8],ch
30015549:	adc    DWORD PTR [eax],eax
3001554b:	add    BYTE PTR [eax-0x69cffea8],ch
30015551:	adc    DWORD PTR [eax],eax
30015553:	add    BYTE PTR [eax-0x68cffea8],ch
30015559:	adc    DWORD PTR [eax],eax
3001555b:	add    BYTE PTR [eax-0x67cffea8],ch
30015561:	adc    DWORD PTR [eax],eax
30015563:	add    BYTE PTR [eax-0x66cffea8],ch
30015569:	adc    DWORD PTR [eax],eax
3001556b:	add    BYTE PTR [eax-0x65cffea8],ch
30015571:	push   edi
30015572:	add    BYTE PTR [eax],dl
30015574:	test   al,0x58
30015576:	add    DWORD PTR [eax],esi
30015578:	fwait
30015579:	adc    DWORD PTR [eax],eax
3001557b:	add    BYTE PTR [eax-0x63cffea8],ch
30015581:	adc    DWORD PTR [eax],eax
30015583:	add    BYTE PTR [eax-0x62cffea8],ch
30015589:	adc    DWORD PTR [eax],eax
3001558b:	add    BYTE PTR [eax-0x61cffea8],ch
30015591:	adc    DWORD PTR [eax],eax
30015593:	add    BYTE PTR [eax-0x60cffea8],ch
30015599:	adc    DWORD PTR [eax],eax
3001559b:	add    BYTE PTR [eax-0x5fcffea8],ch
300155a1:	xor    eax,0x58a82000
300155a6:	add    DWORD PTR [eax],esi
300155a8:	mov    eax,ds:0xa8200035
300155ad:	pop    eax
300155ae:	add    DWORD PTR [eax],esi
300155b0:	mov    ds:0xa8200035,al
300155b5:	pop    eax
300155b6:	add    DWORD PTR [eax],esi
300155b8:	mov    ds:0xa8200035,eax
300155bd:	pop    eax
300155be:	add    DWORD PTR [eax],esi
300155c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
300155c1:	adc    DWORD PTR [eax],eax
300155c3:	add    BYTE PTR [eax-0x5acffea8],ch
300155c9:	adc    DWORD PTR [eax],eax
300155cb:	add    BYTE PTR [eax-0x59cffea8],ch
300155d1:	adc    DWORD PTR [eax],eax
300155d3:	add    BYTE PTR [eax-0x58cffea8],ch
300155d9:	adc    DWORD PTR [eax],eax
300155db:	add    BYTE PTR [eax-0x57cffea8],ch
300155e1:	and    al,BYTE PTR [eax]
300155e3:	add    BYTE PTR [eax-0x56cffea8],ch
300155e9:	xor    eax,0x58a80000
300155ee:	add    DWORD PTR [eax],esi
300155f0:	stos   BYTE PTR es:[edi],al
300155f1:	adc    DWORD PTR [eax],eax
300155f3:	add    BYTE PTR [eax-0x54cffea8],ch
300155f9:	adc    DWORD PTR [eax],eax
300155fb:	add    BYTE PTR [eax-0x53cffea8],ch
30015601:	adc    DWORD PTR [eax],eax
30015603:	add    BYTE PTR [eax-0x52cffea8],ch
30015609:	adc    DWORD PTR [eax],eax
3001560b:	add    BYTE PTR [eax-0x51cffea8],ch
30015611:	adc    DWORD PTR [eax],eax
30015613:	add    BYTE PTR [eax-0x50cffea8],ch
30015619:	adc    DWORD PTR [eax],eax
3001561b:	add    BYTE PTR [eax-0x4fcffea8],ch
30015621:	and    al,BYTE PTR [eax]
30015623:	add    BYTE PTR [eax-0x4ecffea8],ch
30015629:	and    al,BYTE PTR [eax]
3001562b:	add    BYTE PTR [eax-0x4dcffea8],ch
30015631:	and    al,BYTE PTR [eax]
30015633:	add    BYTE PTR [eax-0x4ccffea8],ch
30015639:	and    al,BYTE PTR [eax]
3001563b:	add    BYTE PTR [eax-0x4bcffea8],ch
30015641:	and    al,BYTE PTR [eax]
30015643:	add    BYTE PTR [eax-0x4acffea8],ch
30015649:	and    al,BYTE PTR [eax]
3001564b:	add    BYTE PTR [eax-0x49cffea8],ch
30015651:	and    al,BYTE PTR [eax]
30015653:	add    BYTE PTR [eax-0x48cffea8],ch
30015659:	and    al,BYTE PTR [eax]
3001565b:	add    BYTE PTR [eax-0x47cffea8],ch
30015661:	xor    eax,0x58a88000
30015666:	add    DWORD PTR [eax],esi
30015668:	mov    ecx,0xa8000035
3001566d:	pop    eax
3001566e:	add    DWORD PTR [eax],esi
30015670:	mov    edx,0xa8000035
30015675:	pop    eax
30015676:	add    DWORD PTR [eax],esi
30015678:	mov    ebx,0xa8000035
3001567d:	pop    eax
3001567e:	add    DWORD PTR [eax],esi
30015680:	mov    esp,0xa8000035
30015685:	pop    eax
30015686:	add    DWORD PTR [eax],esi
30015688:	mov    ebp,0xa8000035
3001568d:	pop    eax
3001568e:	add    DWORD PTR [eax],esi
30015690:	mov    esi,0xa8000035
30015695:	pop    eax
30015696:	add    DWORD PTR [eax],esi
30015698:	mov    edi,0xa8000035
3001569d:	pop    eax
3001569e:	add    DWORD PTR [eax],esi
300156a0:	shl    BYTE PTR [ebx],0x1
300156a3:	add    DWORD PTR [eax-0x3ecffea8],ebp
300156a9:	xor    eax,DWORD PTR [ecx]
300156ab:	add    DWORD PTR [eax-0x3dcffea8],ebp
300156b1:	xor    eax,DWORD PTR [eax]
300156b3:	add    BYTE PTR [eax-0x3ccffea8],ch
300156b9:	adc    DWORD PTR [eax],eax
300156bb:	add    BYTE PTR [eax-0x3bcffea8],ch
300156c1:	and    al,BYTE PTR [ecx]
300156c3:	add    BYTE PTR [eax-0x3acffea8],ch
300156c9:	and    al,BYTE PTR [ecx]
300156cb:	add    BYTE PTR [eax-0x39cffea8],ch
300156d1:	xor    eax,DWORD PTR [ecx]
300156d3:	add    DWORD PTR [eax-0x38cffea8],ebp
300156d9:	inc    esi
300156da:	add    DWORD PTR [eax+ebp*4],eax
300156dd:	pop    eax
300156de:	add    DWORD PTR [eax],esi
300156e0:	enter  0x44,0x0
300156e4:	test   al,0x58
300156e6:	add    DWORD PTR [eax],esi
300156e8:	leave  
300156e9:	adc    DWORD PTR [eax],eax
300156eb:	add    BYTE PTR [eax-0x35cffea8],ch
300156f1:	xor    eax,DWORD PTR [eax]
300156f3:	adc    BYTE PTR [eax-0x34cffea8],ch
300156f9:	adc    DWORD PTR [eax],eax
300156fb:	adc    BYTE PTR [eax-0x33cffea8],ch
30015701:	adc    DWORD PTR [eax],eax
30015703:	adc    BYTE PTR [eax-0x32cffea8],ch
30015709:	and    al,BYTE PTR [eax]
3001570b:	adc    BYTE PTR [eax-0x31cffea8],ch
30015711:	adc    DWORD PTR [eax],eax
30015713:	adc    BYTE PTR [eax-0x30cffea8],ch
30015719:	adc    DWORD PTR [eax],eax
3001571b:	adc    BYTE PTR [eax-0x2fcffea8],ch
30015721:	and    al,BYTE PTR [ecx]
30015723:	add    BYTE PTR [eax-0x2ecffea8],ch
30015729:	and    al,BYTE PTR [ecx]
3001572b:	add    BYTE PTR [eax-0x2dcffea8],ch
30015731:	and    al,BYTE PTR [ecx]
30015733:	add    BYTE PTR [eax-0x2ccffea8],ch
30015739:	and    al,BYTE PTR [ecx]
3001573b:	add    BYTE PTR [eax-0x2bcffea8],ch
30015741:	and    al,BYTE PTR [eax]
30015743:	add    BYTE PTR [eax-0x2acffea8],ch
30015749:	and    al,BYTE PTR [eax]
3001574b:	add    BYTE PTR [eax-0x29cffea8],ch
30015751:	adc    DWORD PTR [eax],eax
30015753:	add    BYTE PTR [ebx-0x7c],ch
30015756:	add    esi,DWORD PTR [eax]
30015758:	xlat   BYTE PTR ds:[ebx]
30015759:	adc    DWORD PTR [eax],eax
3001575b:	add    BYTE PTR [eax-0x27cffea8],ch
30015761:	and    al,BYTE PTR [ecx]
30015763:	add    BYTE PTR [eax-0x26cffea8],ch
30015769:	and    al,BYTE PTR [ecx]
3001576b:	add    BYTE PTR [eax-0x25cffea8],ch
30015771:	and    al,BYTE PTR [ecx]
30015773:	add    BYTE PTR [eax-0x24cffea8],ch
30015779:	and    al,BYTE PTR [ecx]
3001577b:	add    BYTE PTR [eax-0x23cffea8],ch
30015781:	and    al,BYTE PTR [ecx]
30015783:	add    BYTE PTR [eax-0x22cffea8],ch
30015789:	and    al,BYTE PTR [ecx]
3001578b:	add    BYTE PTR [eax-0x21cffea8],ch
30015791:	and    al,BYTE PTR [ecx]
30015793:	add    BYTE PTR [eax-0x20cffea8],ch
30015799:	and    al,BYTE PTR [ecx]
3001579b:	add    BYTE PTR [eax-0x1fcffea8],ch
300157a1:	and    dl,BYTE PTR [eax]
300157a3:	inc    eax
300157a4:	test   al,0x58
300157a6:	add    DWORD PTR [eax],esi
300157a8:	loope  0x300157cc
300157aa:	adc    BYTE PTR [eax-0x58],al
300157ad:	pop    eax
300157ae:	add    DWORD PTR [eax],esi
300157b0:	loop   0x300157d4
300157b2:	adc    BYTE PTR [eax-0x58],al
300157b5:	pop    eax
300157b6:	add    DWORD PTR [eax],esi
300157b8:	jecxz  0x300157dc
300157ba:	adc    BYTE PTR [eax],al
300157bc:	test   al,0x58
300157be:	add    DWORD PTR [eax],esi
300157c0:	in     al,0x22
300157c2:	add    BYTE PTR [eax],al
300157c4:	test   al,0x58
300157c6:	add    DWORD PTR [eax],esi
300157c8:	in     eax,0x22
300157ca:	add    BYTE PTR [eax],al
300157cc:	test   al,0x58
300157ce:	add    DWORD PTR [eax],esi
300157d0:	out    0x22,al
300157d2:	add    BYTE PTR [eax],al
300157d4:	test   al,0x58
300157d6:	add    DWORD PTR [eax],esi
300157d8:	out    0x22,eax
300157da:	add    BYTE PTR [eax],al
300157dc:	test   al,0x58
300157de:	add    DWORD PTR [eax],esi
300157e0:	call   0xd801681a
300157e5:	pop    eax
300157e6:	add    DWORD PTR [eax],esi
300157e8:	jmp    0xd8016822
300157ed:	pop    eax
300157ee:	add    DWORD PTR [eax],esi
300157f0:	jmp    0x158:0xa8100057
300157f7:	xor    bl,ch
300157f9:	and    dl,BYTE PTR [eax]
300157fb:	add    BYTE PTR [eax-0x13cffea8],ch
30015801:	adc    DWORD PTR [eax],eax
30015803:	add    BYTE PTR [eax-0x12cffea8],ch
30015809:	adc    DWORD PTR [eax],eax
3001580b:	add    BYTE PTR [eax-0x11cffea8],ch
30015811:	adc    DWORD PTR [eax],eax
30015813:	add    BYTE PTR [eax-0x10cffea8],ch
30015819:	adc    DWORD PTR [eax],eax
3001581b:	add    BYTE PTR [eax-0xfcffea8],ch
30015821:	adc    DWORD PTR [eax],eax
30015823:	add    BYTE PTR [esp+eax*4],dh
30015826:	add    esi,DWORD PTR [eax]
30015828:	icebp  
30015829:	adc    DWORD PTR [eax],eax
3001582b:	add    BYTE PTR [ebx-0x7c],ch
3001582e:	add    esi,DWORD PTR [eax]
30015830:	repnz adc DWORD PTR [eax],eax
30015833:	add    BYTE PTR [esp+eax*4],dh
30015836:	add    esi,DWORD PTR [eax]
30015838:	repz adc DWORD PTR [eax],eax
3001583b:	add    BYTE PTR [esp+eax*4],dh
3001583e:	add    esi,DWORD PTR [eax]
30015840:	hlt    
30015841:	adc    DWORD PTR [eax],eax
30015843:	add    BYTE PTR [eax-0xacffea8],ch
30015849:	adc    DWORD PTR [eax],eax
3001584b:	add    BYTE PTR [eax-0x9cffea8],ch
30015851:	add    BYTE PTR [eax],al
30015853:	add    bh,dl
30015855:	mov    WORD PTR [ebx],es
30015857:	xor    bh,dh
30015859:	add    BYTE PTR [eax],al
3001585b:	add    BYTE PTR [eax],bl
3001585d:	lea    eax,[ebx]
3001585f:	xor    al,bh
30015861:	adc    DWORD PTR [eax],eax
30015863:	add    BYTE PTR [eax-0x6cffea8],ch
30015869:	adc    DWORD PTR [eax],eax
3001586b:	add    BYTE PTR [eax-0x5cffea8],ch
30015871:	adc    DWORD PTR [eax],eax
30015873:	add    BYTE PTR [eax-0x4cffea8],ch
30015879:	adc    DWORD PTR [eax],eax
3001587b:	add    BYTE PTR [eax-0x3cffea8],ch
30015881:	adc    DWORD PTR [eax],eax
30015883:	add    BYTE PTR [eax-0x2cffea8],ch
30015889:	adc    DWORD PTR [eax],eax
3001588b:	add    BYTE PTR [eax-0x1cffea8],ch
30015891:	and    al,BYTE PTR [ecx]
30015893:	add    BYTE PTR [eax-0xcffea8],ch
30015899:	add    BYTE PTR [eax],al
3001589b:	add    BYTE PTR [ecx-0x73],bl
3001589e:	add    esi,DWORD PTR [eax]
	...
300158a8:	push   ebp
300158a9:	mov    ebp,esp
300158ab:	mov    edx,DWORD PTR [ebp+0x8]
300158ae:	sub    esp,0xc
300158b1:	mov    edx,DWORD PTR [edx]
300158b3:	push   ebx
300158b4:	push   esi
300158b5:	push   edi
300158b6:	mov    ebx,ecx
300158b8:	mov    esi,edx
300158ba:	test   edx,0x20000000
300158c0:	jne    0x30027718
300158c6:	cmp    DWORD PTR [ebx],0x0
300158c9:	jne    0x30027721
300158cf:	shr    esi,0x8
300158d2:	mov    ecx,edx
300158d4:	and    esi,0xf
300158d7:	shl    ecx,0x8
300158da:	sar    ecx,0x1c
300158dd:	mov    eax,esi
300158df:	sub    eax,ecx
300158e1:	shr    edx,0x10
300158e4:	mov    edi,esi
300158e6:	mov    DWORD PTR [ebp-0xc],ecx
300158e9:	mov    DWORD PTR [ebp-0x8],eax
300158ec:	and    edx,0xf
300158ef:	jbe    0x30015913
300158f1:	mov    eax,DWORD PTR [ebp+0x10]
300158f4:	mov    al,BYTE PTR [edx+eax*1]
300158f7:	mov    BYTE PTR [ebp-0x1],al
300158fa:	movzx  eax,al
300158fd:	mov    al,BYTE PTR [eax+0x30015958]
30015903:	movzx  edi,al
30015906:	and    edi,0xf
30015909:	add    edi,esi
3001590b:	test   al,0x10
3001590d:	jne    0x30027729
30015913:	push   edi
30015914:	push   DWORD PTR [ebp+0x10]
30015917:	push   DWORD PTR [ebp+0xc]
3001591a:	call   0x3000151c
3001591f:	mov    eax,DWORD PTR [ebp-0xc]
30015922:	add    esp,0xc
30015925:	test   eax,eax
30015927:	jne    0x30027757
3001592d:	mov    esi,DWORD PTR [ebp+0x10]
30015930:	mov    ecx,DWORD PTR [ebp+0x8]
30015933:	test   DWORD PTR [ecx],0x40000000
30015939:	jne    0x30027774
3001593f:	test   DWORD PTR [ecx],0x10000000
30015945:	jne    0x3002777e
3001594b:	lea    eax,[edi+esi*1]
3001594e:	pop    edi
3001594f:	pop    esi
30015950:	pop    ebx
30015951:	leave  
30015952:	ret    0xc
30015955:	nop
30015956:	nop
30015957:	nop
30015958:	add    BYTE PTR [eax],al
3001595a:	add    BYTE PTR [eax],al
3001595c:	adc    DWORD PTR [eax+eax*1],esp
3001595f:	add    BYTE PTR [eax],al
30015961:	add    BYTE PTR [eax],al
30015963:	add    BYTE PTR [ecx],dl
30015965:	and    al,0x0
30015967:	add    BYTE PTR [eax],al
30015969:	add    BYTE PTR [eax],al
3001596b:	add    BYTE PTR [ecx],dl
3001596d:	and    al,0x0
3001596f:	add    BYTE PTR [eax],al
30015971:	add    BYTE PTR [eax],al
30015973:	add    BYTE PTR [ecx],dl
30015975:	and    al,0x0
30015977:	add    BYTE PTR [eax],al
30015979:	add    BYTE PTR [eax],al
3001597b:	add    BYTE PTR [ecx],dl
3001597d:	and    al,0x0
3001597f:	add    BYTE PTR [eax],al
30015981:	add    BYTE PTR [eax],al
30015983:	add    BYTE PTR [ecx],dl
30015985:	and    al,0x0
30015987:	add    BYTE PTR [eax],al
30015989:	add    BYTE PTR [eax],al
3001598b:	add    BYTE PTR [ecx],dl
3001598d:	and    al,0x0
3001598f:	add    BYTE PTR [eax],al
30015991:	add    BYTE PTR [eax],al
30015993:	add    BYTE PTR [ecx],dl
30015995:	and    al,0x0
30015997:	add    BYTE PTR [ecx],al
30015999:	add    DWORD PTR [ecx],eax
3001599b:	add    DWORD PTR [edx],eax
3001599d:	add    DWORD PTR [ecx],eax
3001599f:	add    DWORD PTR [ecx],eax
300159a1:	add    DWORD PTR [ecx],eax
300159a3:	add    DWORD PTR [edx],eax
300159a5:	add    DWORD PTR [ecx],eax
300159a7:	add    DWORD PTR [ecx],eax
300159a9:	add    DWORD PTR [ecx],eax
300159ab:	add    DWORD PTR [edx],eax
300159ad:	add    DWORD PTR [ecx],eax
300159af:	add    DWORD PTR [ecx],eax
300159b1:	add    DWORD PTR [ecx],eax
300159b3:	add    DWORD PTR [edx],eax
300159b5:	add    DWORD PTR [ecx],eax
300159b7:	add    DWORD PTR [ecx],eax
300159b9:	add    DWORD PTR [ecx],eax
300159bb:	add    DWORD PTR [edx],eax
300159bd:	add    DWORD PTR [ecx],eax
300159bf:	add    DWORD PTR [ecx],eax
300159c1:	add    DWORD PTR [ecx],eax
300159c3:	add    DWORD PTR [edx],eax
300159c5:	add    DWORD PTR [ecx],eax
300159c7:	add    DWORD PTR [ecx],eax
300159c9:	add    DWORD PTR [ecx],eax
300159cb:	add    DWORD PTR [edx],eax
300159cd:	add    DWORD PTR [ecx],eax
300159cf:	add    DWORD PTR [ecx],eax
300159d1:	add    DWORD PTR [ecx],eax
300159d3:	add    DWORD PTR [edx],eax
300159d5:	add    DWORD PTR [ecx],eax
300159d7:	add    DWORD PTR [esp+eax*1],eax
300159da:	add    al,0x4
300159dc:	add    eax,0x4040404
300159e1:	add    al,0x4
300159e3:	add    al,0x5
300159e5:	add    al,0x4
300159e7:	add    al,0x4
300159e9:	add    al,0x4
300159eb:	add    al,0x5
300159ed:	add    al,0x4
300159ef:	add    al,0x4
300159f1:	add    al,0x4
300159f3:	add    al,0x5
300159f5:	add    al,0x4
300159f7:	add    al,0x4
300159f9:	add    al,0x4
300159fb:	add    al,0x5
300159fd:	add    al,0x4
300159ff:	add    al,0x4
30015a01:	add    al,0x4
30015a03:	add    al,0x5
30015a05:	add    al,0x4
30015a07:	add    al,0x4
30015a09:	add    al,0x4
30015a0b:	add    al,0x5
30015a0d:	add    al,0x4
30015a0f:	add    al,0x4
30015a11:	add    al,0x4
30015a13:	add    al,0x5
30015a15:	add    al,0x4
30015a17:	add    al,0x0
	...
30015a55:	add    BYTE PTR [eax],al
30015a57:	add    BYTE PTR [ebp-0x75],dl
30015a5a:	in     al,dx
30015a5b:	mov    edx,DWORD PTR [ebp+0x8]
30015a5e:	push   esi
30015a5f:	mov    esi,ecx
30015a61:	test   edx,edx
30015a63:	je     0x30027791
30015a69:	mov    ecx,DWORD PTR [ebp+0xc]
30015a6c:	test   ecx,ecx
30015a6e:	je     0x30027799
30015a74:	movzx  eax,BYTE PTR [ecx]
30015a77:	push   ecx
30015a78:	lea    eax,[eax*8+0x300150a0]
30015a7f:	push   edx
30015a80:	push   eax
30015a81:	mov    ecx,esi
30015a83:	call   DWORD PTR [eax+0x4]
30015a86:	pop    esi
30015a87:	pop    ebp
30015a88:	ret    0x8
30015a8b:	push   ebp
30015a8c:	mov    ebp,esp
30015a8e:	sub    esp,0x60
30015a91:	mov    eax,ds:0x30043050
30015a96:	xor    eax,ebp
30015a98:	mov    DWORD PTR [ebp-0x4],eax
30015a9b:	mov    eax,DWORD PTR [ebp+0x10]
30015a9e:	push   esi
30015a9f:	mov    esi,DWORD PTR [ebp+0xc]
30015aa2:	push   edi
30015aa3:	push   DWORD PTR [ebp+0x14]
30015aa6:	mov    edi,DWORD PTR [ebp+0x8]
30015aa9:	push   eax
30015aaa:	lea    ecx,[ebp-0x60]
30015aad:	call   0x30015acc
30015ab2:	push   esi
30015ab3:	push   edi
30015ab4:	lea    ecx,[ebp-0x60]
30015ab7:	call   0x30015a58
30015abc:	mov    ecx,DWORD PTR [ebp-0x4]
30015abf:	pop    edi
30015ac0:	xor    ecx,ebp
30015ac2:	pop    esi
30015ac3:	call   0x3000115c
30015ac8:	leave  
30015ac9:	ret    0x10
30015acc:	push   ebp
30015acd:	mov    ebp,esp
30015acf:	mov    edx,DWORD PTR [ebp+0x8]
30015ad2:	push   esi
30015ad3:	xor    esi,esi
30015ad5:	mov    DWORD PTR [ecx],esi
30015ad7:	mov    DWORD PTR [ecx+0x4],esi
30015ada:	mov    DWORD PTR [ecx+0x8],esi
30015add:	test   edx,edx
30015adf:	jne    0x30015ae4
30015ae1:	lea    edx,[ecx+0x18]
30015ae4:	mov    eax,DWORD PTR [ebp+0xc]
30015ae7:	mov    DWORD PTR [ecx+0xc],edx
30015aea:	test   eax,eax
30015aec:	je     0x30027789
30015af2:	mov    DWORD PTR [ecx+0x10],eax
30015af5:	mov    DWORD PTR [edx],esi
30015af7:	mov    eax,DWORD PTR [ecx+0x10]
30015afa:	mov    DWORD PTR [eax],esi
30015afc:	mov    eax,ecx
30015afe:	pop    esi
30015aff:	pop    ebp
30015b00:	ret    0x8
30015b03:	push   ebp
30015b04:	mov    ebp,esp
30015b06:	sub    esp,0x2d8
30015b0c:	mov    eax,ds:0x30043050
30015b11:	xor    eax,ebp
30015b13:	mov    DWORD PTR [ebp-0x4],eax
30015b16:	push   ebx
30015b17:	mov    ebx,DWORD PTR [ebp+0x8]
30015b1a:	mov    DWORD PTR [ebp-0x2d8],ebx
30015b20:	test   ebx,ebx
30015b22:	jne    0x300275c9
30015b28:	call   DWORD PTR ds:0x300451a4
30015b2e:	cmp    DWORD PTR ds:0x30043690,eax
30015b34:	jne    0x300275d5
30015b3a:	cmp    DWORD PTR ds:0x30043694,0x0
30015b41:	jne    0x300275df
30015b47:	push   esi
30015b48:	mov    esi,DWORD PTR ds:0x300436a0
30015b4e:	push   edi
30015b4f:	test   esi,esi
30015b51:	je     0x30015b8c
30015b53:	cmp    DWORD PTR [esi+0x4],0x0
30015b57:	mov    eax,DWORD PTR [esi+0x10]
30015b5a:	jne    0x30017634
30015b60:	mov    ecx,DWORD PTR [eax+0x1c]
30015b63:	mov    edx,DWORD PTR [esi+0xc]
30015b66:	lea    eax,[edx+0x5]
30015b69:	sub    ecx,eax
30015b6b:	mov    BYTE PTR [edx],0xe9
30015b6e:	mov    DWORD PTR [edx+0x1],ecx
30015b71:	mov    eax,DWORD PTR [esi+0x10]
30015b74:	push   DWORD PTR [eax+0x18]
30015b77:	lea    eax,[edx+0x5]
30015b7a:	push   eax
30015b7b:	call   0x3000ecc5
30015b80:	mov    eax,DWORD PTR [esi+0x10]
30015b83:	mov    ecx,DWORD PTR [esi+0x8]
30015b86:	mov    DWORD PTR [ecx],eax
30015b88:	mov    esi,DWORD PTR [esi]
30015b8a:	jmp    0x30015b4f
30015b8c:	mov    edi,DWORD PTR ds:0x3004369c
30015b92:	test   edi,edi
30015b94:	jne    0x30027600
30015b9a:	call   DWORD PTR ds:0x300451e4
30015ba0:	mov    edi,DWORD PTR ds:0x300436a0
30015ba6:	mov    DWORD PTR [ebp-0x2d4],eax
30015bac:	test   edi,edi
30015bae:	je     0x30015bfe
30015bb0:	mov    ebx,eax
30015bb2:	lea    eax,[ebp-0x2d4]
30015bb8:	push   eax
30015bb9:	mov    eax,DWORD PTR [edi+0x10]
30015bbc:	push   DWORD PTR [edi+0x14]
30015bbf:	movzx  eax,BYTE PTR [eax+0x17]
30015bc3:	push   eax
30015bc4:	push   DWORD PTR [edi+0xc]
30015bc7:	call   DWORD PTR ds:0x30045118
30015bcd:	mov    eax,DWORD PTR [edi+0x10]
30015bd0:	movzx  eax,BYTE PTR [eax+0x17]
30015bd4:	push   eax
30015bd5:	push   DWORD PTR [edi+0xc]
30015bd8:	push   ebx
30015bd9:	call   DWORD PTR ds:0x30045120
30015bdf:	cmp    DWORD PTR [edi+0x4],0x0
30015be3:	jne    0x300176af
30015be9:	mov    esi,DWORD PTR [edi]
30015beb:	push   edi
30015bec:	call   0x3000460f
30015bf1:	pop    ecx
30015bf2:	mov    edi,esi
30015bf4:	test   esi,esi
30015bf6:	jne    0x30015bb2
30015bf8:	mov    ebx,DWORD PTR [ebp-0x2d8]
30015bfe:	and    DWORD PTR ds:0x300436a0,0x0
30015c05:	call   0x30014fe6
30015c0a:	mov    edi,DWORD PTR ds:0x3004369c
30015c10:	test   edi,edi
30015c12:	jne    0x30027697
30015c18:	and    DWORD PTR ds:0x3004369c,0x0
30015c1f:	and    DWORD PTR ds:0x30043690,0x0
30015c26:	pop    edi
30015c27:	pop    esi
30015c28:	test   ebx,ebx
30015c2a:	jne    0x300276b5
30015c30:	mov    eax,ds:0x30043694
30015c35:	mov    ecx,DWORD PTR [ebp-0x4]
30015c38:	xor    ecx,ebp
30015c3a:	pop    ebx
30015c3b:	call   0x3000115c
30015c40:	leave  
30015c41:	ret    0x4
30015c44:	push   0x0
30015c46:	call   0x30015b03
30015c4b:	ret    
30015c4c:	mov    ds:0xa9fc4801,eax
30015c51:	sub    ecx,edi
30015c53:	adc    DWORD PTR [edx+0xaa0029],esp
30015c59:	cmp    eax,0x6c835273
30015c5e:	and    al,0x4
30015c60:	add    al,0xeb
30015c62:	add    BYTE PTR [ebp-0x75],dl
30015c65:	in     al,dx
30015c66:	mov    eax,DWORD PTR [ebp+0x8]
30015c69:	add    eax,0xc
30015c6c:	push   eax
30015c6d:	call   DWORD PTR ds:0x30045150
30015c73:	pop    ebp
30015c74:	ret    0x4
30015c77:	sub    DWORD PTR [esp+0x4],0x4
30015c7c:	jmp    0x30015c7e
30015c7e:	push   ebp
30015c7f:	mov    ebp,esp
30015c81:	push   esi
30015c82:	mov    esi,DWORD PTR [ebp+0x8]
30015c85:	push   edi
30015c86:	lea    eax,[esi+0xc]
30015c89:	push   eax
30015c8a:	call   DWORD PTR ds:0x30045154
30015c90:	mov    edi,eax
30015c92:	test   edi,edi
30015c94:	je     0x300176ca
30015c9a:	mov    eax,edi
30015c9c:	pop    edi
30015c9d:	pop    esi
30015c9e:	pop    ebp
30015c9f:	ret    0x4
30015ca2:	push   ebp
30015ca3:	mov    ebp,esp
30015ca5:	push   esi
30015ca6:	push   edi
30015ca7:	mov    edi,DWORD PTR [ebp+0x8]
30015caa:	test   edi,edi
30015cac:	je     0x30015cdb
30015cae:	add    edi,0xfffffffc
30015cb1:	mov    esi,DWORD PTR [ebp+0xc]
30015cb4:	cmp    DWORD PTR [edi+0x8],esi
30015cb7:	je     0x30015cd3
30015cb9:	test   esi,esi
30015cbb:	je     0x30015cc3
30015cbd:	mov    eax,DWORD PTR [esi]
30015cbf:	push   esi
30015cc0:	call   DWORD PTR [eax+0x4]
30015cc3:	mov    eax,DWORD PTR [edi+0x8]
30015cc6:	mov    DWORD PTR [edi+0x8],esi
30015cc9:	test   eax,eax
30015ccb:	je     0x30015cd3
30015ccd:	mov    ecx,DWORD PTR [eax]
30015ccf:	push   eax
30015cd0:	call   DWORD PTR [ecx+0x8]
30015cd3:	pop    edi
30015cd4:	xor    eax,eax
30015cd6:	pop    esi
30015cd7:	pop    ebp
30015cd8:	ret    0x8
30015cdb:	xor    edi,edi
30015cdd:	jmp    0x30015cb1
30015cdf:	push   ebp
30015ce0:	mov    ebp,esp
30015ce2:	push   esi
30015ce3:	push   DWORD PTR [ebp+0xc]
30015ce6:	mov    esi,DWORD PTR [ebp+0x8]
30015ce9:	push   esi
30015cea:	call   0x30015ca2
30015cef:	test   eax,eax
30015cf1:	js     0x30015d01
30015cf3:	cmp    DWORD PTR [ebp+0xc],0x0
30015cf7:	je     0x30015d01
30015cf9:	lea    ecx,[esi-0x4]
30015cfc:	call   0x3000d8c4
30015d01:	pop    esi
30015d02:	pop    ebp
30015d03:	ret    0x8
30015d06:	push   ebp
30015d07:	mov    ebp,esp
30015d09:	push   DWORD PTR [ebp+0x10]
30015d0c:	push   DWORD PTR [ebp+0xc]
30015d0f:	push   0x30015d24
30015d14:	push   DWORD PTR [ebp+0x8]
30015d17:	call   DWORD PTR ds:0x30045424
30015d1d:	pop    ebp
30015d1e:	ret    0xc
30015d21:	nop
30015d22:	nop
30015d23:	nop
30015d24:	dec    eax
30015d25:	pop    ebp
30015d26:	add    DWORD PTR [eax],esi
30015d28:	add    BYTE PTR [eax],al
30015d2a:	add    BYTE PTR [eax],al
30015d2c:	add    DWORD PTR [eax],eax
30015d2e:	add    BYTE PTR [eax],al
30015d30:	dec    esp
30015d31:	pop    esp
30015d32:	add    DWORD PTR [eax],esi
30015d34:	add    al,0x0
30015d36:	add    BYTE PTR [eax],al
30015d38:	add    DWORD PTR [eax],eax
	...
30015d46:	add    BYTE PTR [eax],al
30015d48:	cmp    al,0x7
30015d4a:	retf   0x7902
30015d4d:	jo     0x30015daf
30015d4f:	dec    eax
30015d50:	mov    BYTE PTR [edx],cl
30015d52:	ret    0xa4f7
30015d55:	dec    ecx
30015d56:	leave  
30015d57:	xchg   ecx,eax
30015d58:	push   0x18
30015d5a:	mov    eax,0x30040b08
30015d5f:	call   0x3000116a
30015d64:	mov    DWORD PTR [ebp-0x24],edx
30015d67:	mov    eax,ecx
30015d69:	mov    DWORD PTR [ebp-0x20],eax
30015d6c:	xor    ebx,ebx
30015d6e:	mov    esi,ebx
30015d70:	mov    DWORD PTR [ebp-0x1c],esi
30015d73:	mov    DWORD PTR [ebp-0x14],ebx
30015d76:	mov    DWORD PTR [ebp-0x4],ebx
30015d79:	cmp    DWORD PTR [eax+0x7c],ebx
30015d7c:	je     0x30015e4e
30015d82:	push   DWORD PTR [eax+0x7c]
30015d85:	lea    ecx,[ebp-0x10]
30015d88:	call   0x30001488
30015d8d:	mov    BYTE PTR [ebp-0x4],0x1
30015d91:	cmp    DWORD PTR [ebp-0x10],ebx
30015d94:	je     0x30015e45
30015d9a:	push   0x241c
30015d9f:	call   0x3000532c
30015da4:	push   0x20019
30015da9:	push   DWORD PTR [ebp-0x10]
30015dac:	lea    ecx,[ebp-0x14]
30015daf:	push   0x80000002
30015db4:	call   0x300061a4
30015db9:	test   eax,eax
30015dbb:	js     0x30015e01
30015dbd:	mov    DWORD PTR [ebp-0x18],ebx
30015dc0:	lea    eax,[ebp-0x18]
30015dc3:	push   eax
30015dc4:	push   0x30015e60
30015dc9:	lea    ecx,[ebp-0x14]
30015dcc:	mov    BYTE PTR [ebp-0x4],0x2
30015dd0:	call   0x3000bc14
30015dd5:	mov    esi,DWORD PTR [ebp-0x18]
30015dd8:	push   esi
30015dd9:	call   DWORD PTR ds:0x300454ec
30015ddf:	test   eax,eax
30015de1:	je     0x30015df3
30015de3:	push   esi
30015de4:	call   0x30010a78
30015de9:	push   esi
30015dea:	call   DWORD PTR ds:0x3004516c
30015df0:	mov    DWORD PTR [ebp-0x1c],eax
30015df3:	push   esi
30015df4:	mov    BYTE PTR [ebp-0x4],0x1
30015df8:	call   DWORD PTR ds:0x300454e8
30015dfe:	mov    esi,DWORD PTR [ebp-0x1c]
30015e01:	push   0x241d
30015e06:	call   0x3000532c
30015e0b:	test   esi,esi
30015e0d:	je     0x30015e45
30015e0f:	push   0x30015e7c
30015e14:	push   esi
30015e15:	call   DWORD PTR ds:0x30045178
30015e1b:	mov    DWORD PTR [ebp-0x1c],eax
30015e1e:	test   eax,eax
30015e20:	je     0x30015e45
30015e22:	mov    ebx,DWORD PTR [ebp-0x20]
30015e25:	push   0x241e
30015e2a:	mov    DWORD PTR [ebx+0x4],esi
30015e2d:	call   0x3000532c
30015e32:	push   ebx
30015e33:	call   DWORD PTR [ebp-0x1c]
30015e36:	pop    ecx
30015e37:	mov    ecx,eax
30015e39:	mov    eax,DWORD PTR [ebp-0x24]
30015e3c:	test   eax,eax
30015e3e:	je     0x30015e42
30015e40:	mov    DWORD PTR [eax],ecx
30015e42:	xor    ebx,ebx
30015e44:	inc    ebx
30015e45:	push   DWORD PTR [ebp-0x10]
30015e48:	call   DWORD PTR ds:0x300454e8
30015e4e:	lea    ecx,[ebp-0x14]
30015e51:	call   0x300014b2
30015e56:	mov    eax,ebx
30015e58:	call   0x3000119d
30015e5d:	ret    
30015e5e:	nop
30015e5f:	nop
30015e60:	dec    ebp
30015e61:	add    BYTE PTR [ebx+0x0],dh
30015e64:	inc    ebp
30015e65:	add    BYTE PTR [esi+0x0],ch
30015e68:	jbe    0x30015e6a
30015e6a:	dec    esp
30015e6b:	add    BYTE PTR [edi+0x0],ch
30015e6e:	arpl   WORD PTR [eax],ax
30015e70:	popa   
30015e71:	add    BYTE PTR [eax+eax*1+0x69],dh
30015e75:	add    BYTE PTR [edi+0x0],ch
30015e78:	outs   dx,BYTE PTR ds:[esi]
30015e79:	add    BYTE PTR [eax],al
30015e7b:	add    BYTE PTR [esi+0x53],dl
30015e7e:	je     0x30015ef5
30015e80:	imul   ebp,DWORD PTR fs:[edi+0x4d],0x6e6961
30015e88:	dec    eax
30015e89:	add    BYTE PTR [ebx+0x0],cl
30015e8c:	inc    ebp
30015e8d:	add    BYTE PTR [ecx+0x0],bl
30015e90:	pop    edi
30015e91:	add    BYTE PTR [ebx+0x0],al
30015e94:	push   ebp
30015e95:	add    BYTE PTR [edx+0x0],dl
30015e98:	push   edx
30015e99:	add    BYTE PTR [ebp+0x0],al
30015e9c:	dec    esi
30015e9d:	add    BYTE PTR [eax+eax*1+0x5f],dl
30015ea1:	add    BYTE PTR [ebp+0x0],dl
30015ea4:	push   ebx
30015ea5:	add    BYTE PTR [ebp+0x0],al
30015ea8:	push   edx
30015ea9:	add    BYTE PTR [eax],al
30015eab:	add    BYTE PTR [ebp-0x75],dl
30015eae:	in     al,dx
30015eaf:	mov    eax,DWORD PTR [ebp+0x8]
30015eb2:	mov    edx,DWORD PTR [eax]
30015eb4:	cmp    DWORD PTR [edx-0xc],0x0
30015eb8:	je     0x30015ecc
30015eba:	mov    eax,DWORD PTR [ebp+0xc]
30015ebd:	mov    eax,DWORD PTR [eax]
30015ebf:	cmp    DWORD PTR [eax-0xc],0x0
30015ec3:	je     0x30015ecc
30015ec5:	push   eax
30015ec6:	push   edx
30015ec7:	call   0x30009856
30015ecc:	pop    ebp
30015ecd:	ret    0x8
30015ed0:	and    al,0x0
30015ed2:	push   ebx
30015ed3:	add    BYTE PTR [eax+0x0],ch
30015ed6:	add    BYTE PTR gs:[eax+eax*1+0x6c],ch
30015edb:	add    BYTE PTR [esi+0x0],al
30015ede:	outs   dx,DWORD PTR ds:[esi]
30015edf:	add    BYTE PTR [eax+eax*1+0x64],ch
30015ee3:	add    BYTE PTR [ebp+0x0],ah
30015ee6:	jb     0x30015ee8
30015ee8:	and    al,0x0
30015eea:	add    BYTE PTR [eax],al
30015eec:	and    al,0x0
30015eee:	inc    edx
30015eef:	add    BYTE PTR [ecx+0x0],ah
30015ef2:	jae    0x30015ef4
30015ef4:	add    BYTE PTR gs:[ecx+0x0],cl
30015ef8:	outs   dx,BYTE PTR ds:[esi]
30015ef9:	add    BYTE PTR [ebx+0x0],dh
30015efc:	je     0x30015efe
30015efe:	popa   
30015eff:	add    BYTE PTR [eax+eax*1+0x6c],ch
30015f03:	add    BYTE PTR [eax+eax*1+0x69],al
30015f07:	add    BYTE PTR [edx+0x0],dh
30015f0a:	and    al,0x0
30015f0c:	add    BYTE PTR [eax],al
30015f0e:	nop
30015f0f:	nop
30015f10:	and    al,0x0
30015f12:	push   edx
30015f13:	add    BYTE PTR [edi+0x0],ch
30015f16:	outs   dx,DWORD PTR ds:[esi]
30015f17:	add    BYTE PTR [eax+eax*1+0x46],dh
30015f1b:	add    BYTE PTR [edi+0x0],ch
30015f1e:	ins    BYTE PTR es:[edi],dx
30015f1f:	add    BYTE PTR [eax+eax*1+0x65],ah
30015f23:	add    BYTE PTR [edx+0x0],dh
30015f26:	and    al,0x0
30015f28:	add    BYTE PTR [eax],al
30015f2a:	nop
30015f2b:	nop
30015f2c:	and    al,0x0
30015f2e:	inc    ecx
30015f2f:	add    BYTE PTR [eax+0x0],dh
30015f32:	jo     0x30015f34
30015f34:	inc    esp
30015f35:	add    BYTE PTR [ecx+0x0],ah
30015f38:	je     0x30015f3a
30015f3a:	popa   
30015f3b:	add    BYTE PTR [eax+eax*1+0x6f],cl
30015f3f:	add    BYTE PTR [ebx+0x0],ah
30015f42:	popa   
30015f43:	add    BYTE PTR [eax+eax*1+0x46],ch
30015f47:	add    BYTE PTR [edi+0x0],ch
30015f4a:	ins    BYTE PTR es:[edi],dx
30015f4b:	add    BYTE PTR [eax+eax*1+0x65],ah
30015f4f:	add    BYTE PTR [edx+0x0],dh
30015f52:	and    al,0x0
30015f54:	add    BYTE PTR [eax],al
30015f56:	sub    esi,DWORD PTR [ebx]
30015f58:	mov    ecx,ebx
30015f5a:	sar    esi,1
30015f5c:	push   esi
30015f5d:	call   0x30004286
30015f62:	push   esi
30015f63:	mov    ecx,ebx
30015f65:	call   0x30004147
30015f6a:	jmp    0x30008e75
30015f6f:	lea    eax,[ebx+0x1]
30015f72:	sub    ecx,eax
30015f74:	push   ecx
30015f75:	push   eax
30015f76:	lea    eax,[ebp+0x8]
30015f79:	push   eax
30015f7a:	mov    ecx,esi
30015f7c:	call   0x30008d6e
30015f81:	lea    ecx,[ebp+0x8]
30015f84:	call   0x30008e3c
30015f89:	mov    eax,DWORD PTR [eax]
30015f8b:	cmp    DWORD PTR [eax-0xc],0x0
30015f8f:	jne    0x30026a0d
30015f95:	lea    ecx,[ebp+0x8]
30015f98:	call   0x300051a4
30015f9d:	jmp    0x3000a322
30015fa2:	cmp    BYTE PTR ds:0x300430f1,al
30015fa8:	lea    ecx,[ebp-0x434]
30015fae:	sete   al
30015fb1:	push   ecx
30015fb2:	lea    ecx,[ebp-0x418]
30015fb8:	push   ecx
30015fb9:	push   esi
30015fba:	dec    eax
30015fbb:	and    eax,0x19
30015fbe:	add    eax,0x20006
30015fc3:	push   eax
30015fc4:	push   DWORD PTR [ebp+0xc]
30015fc7:	lea    eax,[ebp-0x414]
30015fcd:	push   eax
30015fce:	push   esi
30015fcf:	lea    eax,[ebp-0x20c]
30015fd5:	push   eax
30015fd6:	push   ebx
30015fd7:	call   DWORD PTR ds:0x3004507c
30015fdd:	mov    esi,eax
30015fdf:	test   esi,esi
30015fe1:	jne    0x300160d0
30015fe7:	push   DWORD PTR [ebp+0xc]
30015fea:	mov    ecx,DWORD PTR [ebp-0x41c]
30015ff0:	push   DWORD PTR [ebp-0x418]
30015ff6:	lea    edx,[ebp-0x20c]
30015ffc:	call   0x3001602a
30016001:	push   DWORD PTR [ebp-0x418]
30016007:	mov    esi,eax
30016009:	call   DWORD PTR ds:0x30045004
3001600f:	mov    eax,0x104
30016014:	inc    edi
30016015:	mov    DWORD PTR [ebp-0x424],eax
3001601b:	mov    DWORD PTR [ebp-0x430],eax
30016021:	test   esi,esi
30016023:	je     0x30016099
30016025:	jmp    0x300160d0
3001602a:	push   ebp
3001602b:	mov    ebp,esp
3001602d:	sub    esp,0x438
30016033:	mov    eax,ds:0x30043050
30016038:	xor    eax,ebp
3001603a:	mov    DWORD PTR [ebp-0x4],eax
3001603d:	mov    eax,DWORD PTR [ebp+0x8]
30016040:	and    DWORD PTR [ebp-0x41c],0x0
30016047:	push   ebx
30016048:	mov    ebx,edx
3001604a:	push   esi
3001604b:	mov    DWORD PTR [ebp-0x428],ebx
30016051:	mov    DWORD PTR [ebp-0x42c],eax
30016057:	test   ebx,ebx
30016059:	je     0x3001d8fb
3001605f:	lea    eax,[ebp-0x41c]
30016065:	push   eax
30016066:	push   0x20019
3001606b:	push   0x0
3001606d:	push   ebx
3001606e:	push   ecx
3001606f:	call   DWORD PTR ds:0x30045008
30016075:	mov    esi,eax
30016077:	test   esi,esi
30016079:	jne    0x300161f2
3001607f:	mov    ebx,DWORD PTR [ebp-0x42c]
30016085:	mov    eax,0x104
3001608a:	push   edi
3001608b:	mov    DWORD PTR [ebp-0x424],eax
30016091:	mov    DWORD PTR [ebp-0x430],eax
30016097:	xor    edi,edi
30016099:	push   0x0
3001609b:	lea    eax,[ebp-0x430]
300160a1:	push   eax
300160a2:	lea    eax,[ebp-0x414]
300160a8:	push   eax
300160a9:	push   0x0
300160ab:	lea    eax,[ebp-0x424]
300160b1:	push   eax
300160b2:	lea    eax,[ebp-0x20c]
300160b8:	push   eax
300160b9:	push   edi
300160ba:	push   DWORD PTR [ebp-0x41c]
300160c0:	call   DWORD PTR ds:0x30045074
300160c6:	mov    esi,eax
300160c8:	test   esi,esi
300160ca:	je     0x30015fa2
300160d0:	mov    ebx,DWORD PTR [ebp-0x428]
300160d6:	cmp    esi,0x103
300160dc:	jne    0x300161e1
300160e2:	xor    ecx,ecx
300160e4:	push   ecx
300160e5:	push   ecx
300160e6:	lea    eax,[ebp-0x420]
300160ec:	push   eax
300160ed:	push   ecx
300160ee:	push   ecx
300160ef:	push   ecx
300160f0:	push   ecx
300160f1:	push   ecx
300160f2:	push   ecx
300160f3:	push   ecx
300160f4:	push   ecx
300160f5:	push   DWORD PTR [ebp-0x41c]
300160fb:	call   DWORD PTR ds:0x30045078
30016101:	mov    edi,eax
30016103:	test   edi,edi
30016105:	jne    0x300161d5
3001610b:	push   DWORD PTR [ebp-0x420]
30016111:	call   0x300089a5
30016116:	mov    esi,eax
30016118:	pop    ecx
30016119:	test   esi,esi
3001611b:	je     0x3001d912
30016121:	push   DWORD PTR [ebp-0x420]
30016127:	push   edi
30016128:	push   esi
30016129:	call   0x300011b1
3001612e:	mov    eax,DWORD PTR [ebp-0x420]
30016134:	add    esp,0xc
30016137:	mov    DWORD PTR [ebp-0x434],eax
3001613d:	xor    eax,eax
3001613f:	lea    ecx,[ebp-0x420]
30016145:	push   ecx
30016146:	push   esi
30016147:	lea    ecx,[ebp-0x438]
3001614d:	push   ecx
3001614e:	push   0x0
30016150:	lea    ecx,[ebp-0x424]
30016156:	push   ecx
30016157:	lea    ecx,[ebp-0x20c]
3001615d:	push   ecx
3001615e:	push   eax
3001615f:	push   DWORD PTR [ebp-0x41c]
30016165:	mov    DWORD PTR [ebp-0x428],eax
3001616b:	mov    DWORD PTR [ebp-0x424],0x104
30016175:	call   DWORD PTR ds:0x30045040
3001617b:	mov    edi,eax
3001617d:	test   edi,edi
3001617f:	jne    0x300161cd
30016181:	cmp    BYTE PTR ds:0x300430f1,al
30016187:	jne    0x30024721
3001618d:	push   DWORD PTR [ebp-0x420]
30016193:	lea    eax,[ebp-0x20c]
30016199:	push   esi
3001619a:	push   DWORD PTR [ebp-0x438]
300161a0:	push   0x0
300161a2:	push   eax
300161a3:	push   DWORD PTR [ebp-0x42c]
300161a9:	call   DWORD PTR ds:0x30045010
300161af:	mov    edi,eax
300161b1:	test   edi,edi
300161b3:	jne    0x300161cd
300161b5:	mov    eax,DWORD PTR [ebp-0x428]
300161bb:	mov    ecx,DWORD PTR [ebp-0x434]
300161c1:	inc    eax
300161c2:	mov    DWORD PTR [ebp-0x420],ecx
300161c8:	jmp    0x3001613f
300161cd:	push   esi
300161ce:	call   DWORD PTR ds:0x300453d4
300161d4:	pop    ecx
300161d5:	lea    esi,[edi-0x103]
300161db:	neg    esi
300161dd:	sbb    esi,esi
300161df:	and    esi,edi
300161e1:	pop    edi
300161e2:	test   ebx,ebx
300161e4:	je     0x300161f2
300161e6:	push   DWORD PTR [ebp-0x41c]
300161ec:	call   DWORD PTR ds:0x30045004
300161f2:	mov    ecx,DWORD PTR [ebp-0x4]
300161f5:	mov    eax,esi
300161f7:	pop    esi
300161f8:	xor    ecx,ebp
300161fa:	pop    ebx
300161fb:	call   0x3000115c
30016200:	leave  
30016201:	ret    0x8
30016204:	push   ebp
30016205:	mov    ebp,esp
30016207:	and    esp,0xfffffff8
3001620a:	sub    esp,0x224
30016210:	mov    eax,ds:0x30043050
30016215:	xor    eax,esp
30016217:	mov    DWORD PTR [esp+0x220],eax
3001621e:	push   ebx
3001621f:	mov    ebx,DWORD PTR [ebp+0x8]
30016222:	push   esi
30016223:	push   edi
30016224:	xor    eax,eax
30016226:	mov    edi,ecx
30016228:	mov    DWORD PTR [esp+0x14],eax
3001622c:	mov    DWORD PTR [esp+0x18],eax
30016230:	mov    DWORD PTR [esp+0x1c],eax
30016234:	mov    eax,DWORD PTR [edi+0x4]
30016237:	or     eax,0x2001f
3001623c:	push   eax
3001623d:	push   ebx
3001623e:	push   DWORD PTR [edi]
30016240:	lea    ecx,[esp+0x20]
30016244:	call   0x300051d9
30016249:	mov    esi,eax
3001624b:	test   esi,esi
3001624d:	jne    0x30016299
3001624f:	xor    ecx,ecx
30016251:	lea    eax,[esp+0x20]
30016255:	push   eax
30016256:	push   ecx
30016257:	push   ecx
30016258:	push   ecx
30016259:	lea    eax,[esp+0x20]
3001625d:	push   eax
3001625e:	lea    eax,[esp+0x3c]
30016262:	push   eax
30016263:	push   ecx
30016264:	push   DWORD PTR [esp+0x30]
30016268:	mov    DWORD PTR [esp+0x30],0x100
30016270:	call   DWORD PTR ds:0x30045074
30016276:	lea    ecx,[esp+0x14]
3001627a:	test   eax,eax
3001627c:	jne    0x3001628a
3001627e:	lea    eax,[esp+0x28]
30016282:	push   eax
30016283:	call   0x30016204
30016288:	jmp    0x30016249
3001628a:	call   0x300051ae
3001628f:	push   ebx
30016290:	mov    ecx,edi
30016292:	call   0x3001d8a4
30016297:	mov    esi,eax
30016299:	lea    ecx,[esp+0x14]
3001629d:	call   0x300051ae
300162a2:	mov    ecx,DWORD PTR [esp+0x22c]
300162a9:	pop    edi
300162aa:	mov    eax,esi
300162ac:	pop    esi
300162ad:	pop    ebx
300162ae:	xor    ecx,esp
300162b0:	call   0x3000115c
300162b5:	mov    esp,ebp
300162b7:	pop    ebp
300162b8:	ret    0x4
300162bb:	push   ebp
300162bc:	mov    ebp,esp
300162be:	sub    esp,0xc
300162c1:	and    DWORD PTR [ebp-0x8],0x0
300162c5:	and    DWORD PTR [ebp-0x4],0x0
300162c9:	push   esi
300162ca:	push   DWORD PTR [ecx]
300162cc:	lea    ecx,[ebp-0xc]
300162cf:	mov    DWORD PTR [ebp-0xc],0x80000001
300162d6:	call   0x30016204
300162db:	mov    esi,eax
300162dd:	sub    eax,0x0
300162e0:	je     0x3001d8e0
300162e6:	dec    eax
300162e7:	dec    eax
300162e8:	jne    0x30024627
300162ee:	xor    esi,esi
300162f0:	inc    esi
300162f1:	lea    ecx,[ebp-0xc]
300162f4:	call   0x300051ae
300162f9:	mov    eax,esi
300162fb:	pop    esi
300162fc:	leave  
300162fd:	ret    
300162fe:	push   ebp
300162ff:	mov    ebp,esp
30016301:	sub    esp,0x18
30016304:	push   ebx
30016305:	xor    ebx,ebx
30016307:	push   esi
30016308:	push   edi
30016309:	mov    edi,ecx
3001630b:	mov    DWORD PTR [ebp-0x18],ebx
3001630e:	cmp    DWORD PTR [edi+0x84],0x80000001
30016318:	mov    DWORD PTR [ebp-0x14],ebx
3001631b:	mov    DWORD PTR [ebp-0x10],ebx
3001631e:	mov    DWORD PTR [ebp-0xc],ebx
30016321:	mov    DWORD PTR [ebp-0x8],ebx
30016324:	mov    DWORD PTR [ebp-0x4],ebx
30016327:	mov    ecx,0x300163e8
3001632c:	je     0x30016333
3001632e:	mov    ecx,0x30016450
30016333:	push   DWORD PTR [edi+0x88]
30016339:	xor    edx,edx
3001633b:	call   0x3001d890
30016340:	mov    eax,DWORD PTR [edi]
30016342:	mov    esi,DWORD PTR [edi+0x3c]
30016345:	push   ebx
30016346:	push   ecx
30016347:	push   0x2001f
3001634c:	mov    ecx,edi
3001634e:	call   DWORD PTR [eax+0xc]
30016351:	push   eax
30016352:	push   ecx
30016353:	push   esi
30016354:	push   0x80000001
30016359:	lea    ecx,[ebp-0x18]
3001635c:	call   0x30009534
30016361:	mov    esi,eax
30016363:	mov    ebx,0x80070000
30016368:	test   esi,esi
3001636a:	jg     0x300249d6
30016370:	js     0x300163cc
30016372:	push   0x20019
30016377:	push   DWORD PTR [edi+0x88]
3001637d:	lea    ecx,[ebp-0xc]
30016380:	push   DWORD PTR [edi+0x84]
30016386:	call   0x300051d9
3001638b:	mov    esi,eax
3001638d:	test   esi,esi
3001638f:	jg     0x300249e2
30016395:	js     0x300163cc
30016397:	push   0x23f3
3001639c:	call   0x3000532c
300163a1:	mov    eax,DWORD PTR [edi]
300163a3:	mov    ecx,edi
300163a5:	call   DWORD PTR [eax+0xc]
300163a8:	mov    ecx,DWORD PTR [ebp-0xc]
300163ab:	push   eax
300163ac:	push   DWORD PTR [ebp-0x18]
300163af:	xor    edx,edx
300163b1:	call   0x3001602a
300163b6:	mov    esi,eax
300163b8:	test   esi,esi
300163ba:	jg     0x300249ee
300163c0:	js     0x300163cc
300163c2:	push   0x23f4
300163c7:	call   0x3000532c
300163cc:	lea    ecx,[ebp-0xc]
300163cf:	call   0x300051ae
300163d4:	lea    ecx,[ebp-0x18]
300163d7:	call   0x300051ae
300163dc:	pop    edi
300163dd:	mov    eax,esi
300163df:	pop    esi
300163e0:	pop    ebx
300163e1:	leave  
300163e2:	ret    
300163e3:	nop
300163e4:	nop
300163e5:	nop
300163e6:	nop
300163e7:	nop
300163e8:	inc    ebx
300163e9:	add    BYTE PTR [edi+0x0],ch
300163ec:	jo     0x300163ee
300163ee:	jns    0x300163f0
300163f0:	imul   eax,DWORD PTR [eax],0x67006e
300163f6:	and    BYTE PTR [eax],al
300163f8:	data16 add BYTE PTR [edx+0x0],dh
300163fc:	outs   dx,DWORD PTR ds:[esi]
300163fd:	add    BYTE PTR [ebp+0x0],ch
30016400:	and    BYTE PTR [eax],al
30016402:	dec    eax
30016403:	add    BYTE PTR [ebx+0x0],cl
30016406:	inc    ebp
30016407:	add    BYTE PTR [ecx+0x0],bl
3001640a:	pop    edi
3001640b:	add    BYTE PTR [ebx+0x0],al
3001640e:	push   ebp
3001640f:	add    BYTE PTR [edx+0x0],dl
30016412:	push   edx
30016413:	add    BYTE PTR [ebp+0x0],al
30016416:	dec    esi
30016417:	add    BYTE PTR [eax+eax*1+0x5f],dl
3001641b:	add    BYTE PTR [ebp+0x0],dl
3001641e:	push   ebx
3001641f:	add    BYTE PTR [ebp+0x0],al
30016422:	push   edx
30016423:	add    BYTE PTR [eax],ah
30016425:	add    BYTE PTR [eax+eax*1+0x6f],dh
30016429:	add    BYTE PTR [eax],ah
3001642b:	add    BYTE PTR [eax+0x0],dl
3001642e:	imul   eax,DWORD PTR [eax],0x67
30016431:	add    BYTE PTR [eax+eax*1+0x65],al
30016435:	add    BYTE PTR [esi+0x0],ah
30016438:	dec    ebp
30016439:	add    BYTE PTR [ecx+0x0],ah
3001643c:	outs   dx,BYTE PTR ds:[esi]
3001643d:	add    BYTE PTR [ecx+0x0],ah
30016440:	add    BYTE PTR [di+0x0],ah
30016444:	ins    DWORD PTR es:[edi],dx
30016445:	add    BYTE PTR [ebp+0x0],ah
30016448:	outs   dx,BYTE PTR ds:[esi]
30016449:	add    BYTE PTR [eax+eax*1+0x0],dh
3001644d:	add    BYTE PTR [eax+0x6f004390],dl
30016453:	add    BYTE PTR [eax+0x0],dh
30016456:	jns    0x30016458
30016458:	imul   eax,DWORD PTR [eax],0x67006e
3001645e:	and    BYTE PTR [eax],al
30016460:	data16 add BYTE PTR [edx+0x0],dh
30016464:	outs   dx,DWORD PTR ds:[esi]
30016465:	add    BYTE PTR [ebp+0x0],ch
30016468:	and    BYTE PTR [eax],al
3001646a:	dec    eax
3001646b:	add    BYTE PTR [ebx+0x0],cl
3001646e:	inc    ebp
3001646f:	add    BYTE PTR [ecx+0x0],bl
30016472:	pop    edi
30016473:	add    BYTE PTR [eax+eax*1+0x4f],cl
30016477:	add    BYTE PTR [ebx+0x0],al
3001647a:	inc    ecx
3001647b:	add    BYTE PTR [eax+eax*1+0x5f],cl
3001647f:	add    BYTE PTR [ebp+0x0],cl
30016482:	inc    ecx
30016483:	add    BYTE PTR [ebx+0x0],al
30016486:	dec    eax
30016487:	add    BYTE PTR [ecx+0x0],cl
3001648a:	dec    esi
3001648b:	add    BYTE PTR [ebp+0x0],al
3001648e:	and    BYTE PTR [eax],al
30016490:	je     0x30016492
30016492:	outs   dx,DWORD PTR ds:[esi]
30016493:	add    BYTE PTR [eax],ah
30016495:	add    BYTE PTR [eax+0x0],dl
30016498:	imul   eax,DWORD PTR [eax],0x67
3001649b:	add    BYTE PTR [eax+eax*1+0x65],al
3001649f:	add    BYTE PTR [esi+0x0],ah
300164a2:	dec    ebp
300164a3:	add    BYTE PTR [ecx+0x0],ah
300164a6:	outs   dx,BYTE PTR ds:[esi]
300164a7:	add    BYTE PTR [ecx+0x0],ah
300164aa:	add    BYTE PTR [di+0x0],ah
300164ae:	ins    DWORD PTR es:[edi],dx
300164af:	add    BYTE PTR [ebp+0x0],ah
300164b2:	outs   dx,BYTE PTR ds:[esi]
300164b3:	add    BYTE PTR [eax+eax*1+0x0],dh
300164b7:	add    BYTE PTR [ebp-0x977b],cl
300164bd:	call   DWORD PTR [eax-0x39]
300164c0:	test   DWORD PTR [eax-0x1],ebp
300164c3:	(bad)  
300164c4:	call   DWORD PTR [eax+eax*1+0x15ff0000]
300164cb:	mov    al,0x50
300164cd:	add    al,0x30
300164cf:	xor    eax,eax
300164d1:	cmp    DWORD PTR [ebp-0x88],0x2
300164d8:	sete   al
300164db:	mov    ds:0x30043104,eax
300164e0:	jmp    0x3000b1e8
300164e5:	lea    eax,[esp+0x10]
300164e9:	push   eax
300164ea:	lea    ecx,[esp+0x1c]
300164ee:	call   0x300014c1
300164f3:	jmp    0x3000a0b5
300164f8:	xor    eax,eax
300164fa:	jmp    0x3000a0e9
300164ff:	lea    ecx,[esp+0x28]
30016503:	call   0x30007014
30016508:	jmp    0x3000a0eb
3001650d:	push   esi
3001650e:	mov    esi,ecx
30016510:	mov    eax,DWORD PTR [esi]
30016512:	cmp    DWORD PTR [eax-0x4],0x1
30016516:	jg     0x300202fc
3001651c:	mov    eax,DWORD PTR [esi]
3001651e:	pop    esi
3001651f:	ret    
30016520:	push   ebp
30016521:	mov    ebp,esp
30016523:	push   ebx
30016524:	push   esi
30016525:	mov    esi,ecx
30016527:	push   edi
30016528:	lea    ebx,[esi+0x4]
3001652b:	mov    ecx,ebx
3001652d:	mov    DWORD PTR [esi],0x300092f0
30016533:	call   0x300051c8
30016538:	and    DWORD PTR [esi+0x8],0x0
3001653c:	and    DWORD PTR [esi+0xc],0x0
30016540:	lea    edi,[esi+0x10]
30016543:	mov    ecx,edi
30016545:	call   0x300051c8
3001654a:	mov    ecx,DWORD PTR [ebp+0x8]
3001654d:	and    DWORD PTR [esi+0x14],0x0
30016551:	and    DWORD PTR [esi+0x18],0x0
30016555:	mov    eax,DWORD PTR [ecx]
30016557:	cmp    DWORD PTR [eax-0xc],0x0
3001655b:	je     0x30016583
3001655d:	push   eax
3001655e:	push   0x30015e88
30016563:	push   0x3000522c
30016568:	push   ebx
30016569:	call   0x30005153
3001656e:	add    esp,0x10
30016571:	mov    ecx,ebx
30016573:	call   0x3001650d
30016578:	mov    DWORD PTR [esi+0x8],eax
3001657b:	mov    eax,DWORD PTR [ebx]
3001657d:	mov    eax,DWORD PTR [eax-0xc]
30016580:	mov    DWORD PTR [esi+0xc],eax
30016583:	mov    ecx,DWORD PTR [ebp+0xc]
30016586:	mov    eax,DWORD PTR [ecx]
30016588:	cmp    DWORD PTR [eax-0xc],0x0
3001658c:	je     0x300165b4
3001658e:	push   eax
3001658f:	push   0x30015e88
30016594:	push   0x3000522c
30016599:	push   edi
3001659a:	call   0x30005153
3001659f:	add    esp,0x10
300165a2:	mov    ecx,edi
300165a4:	call   0x3001650d
300165a9:	mov    DWORD PTR [esi+0x14],eax
300165ac:	mov    eax,DWORD PTR [edi]
300165ae:	mov    eax,DWORD PTR [eax-0xc]
300165b1:	mov    DWORD PTR [esi+0x18],eax
300165b4:	pop    edi
300165b5:	mov    eax,esi
300165b7:	pop    esi
300165b8:	pop    ebx
300165b9:	pop    ebp
300165ba:	ret    0x8
300165bd:	push   esi
300165be:	push   edi
300165bf:	push   0x1c
300165c1:	mov    edi,ecx
300165c3:	call   0x30003fee
300165c8:	mov    esi,eax
300165ca:	pop    ecx
300165cb:	test   esi,esi
300165cd:	je     0x300165e9
300165cf:	lea    edx,[edi+0x48]
300165d2:	push   edx
300165d3:	lea    ecx,[edi+0x3c]
300165d6:	push   ecx
300165d7:	mov    ecx,esi
300165d9:	call   0x30016520
300165de:	mov    DWORD PTR [esi],0x300092f0
300165e4:	pop    edi
300165e5:	mov    eax,esi
300165e7:	pop    esi
300165e8:	ret    
300165e9:	xor    esi,esi
300165eb:	jmp    0x300165e4
300165ed:	push   ebp
300165ee:	mov    ebp,esp
300165f0:	sub    esp,0x14
300165f3:	push   ebx
300165f4:	push   esi
300165f5:	push   edi
300165f6:	mov    edi,ecx
300165f8:	push   0x30015ed0
300165fd:	lea    ecx,[ebp-0x4]
30016600:	call   0x3000437e
30016605:	mov    ecx,DWORD PTR [edi+0x40]
30016608:	lea    esi,[edi+0x30]
3001660b:	push   esi
3001660c:	lea    eax,[ebp-0x4]
3001660f:	push   eax
30016610:	call   0x30015eac
30016615:	lea    ecx,[ebp-0x4]
30016618:	call   0x300051a4
3001661d:	push   0x30015eec
30016622:	lea    ecx,[ebp-0x4]
30016625:	call   0x3000437e
3001662a:	mov    ecx,DWORD PTR [edi+0x40]
3001662d:	push   esi
3001662e:	lea    eax,[ebp-0x4]
30016631:	push   eax
30016632:	call   0x30015eac
30016637:	lea    ecx,[ebp-0x4]
3001663a:	call   0x300051a4
3001663f:	push   0x30015f10
30016644:	lea    ecx,[ebp-0x4]
30016647:	call   0x3000437e
3001664c:	mov    ecx,DWORD PTR [edi+0x40]
3001664f:	lea    eax,[edi+0x2c]
30016652:	push   eax
30016653:	lea    eax,[ebp-0x4]
30016656:	push   eax
30016657:	call   0x30015eac
3001665c:	lea    ecx,[ebp-0x4]
3001665f:	call   0x300051a4
30016664:	and    DWORD PTR [ebp-0x4],0x0
30016668:	lea    eax,[edi+0x44]
3001666b:	push   eax
3001666c:	lea    ecx,[ebp-0x8]
3001666f:	call   0x30004340
30016674:	lea    eax,[ebp-0x4]
30016677:	push   eax
30016678:	push   DWORD PTR [ebp-0x8]
3001667b:	push   0x1c
3001667d:	call   0x3000904c
30016682:	test   eax,eax
30016684:	lea    ecx,[ebp-0x8]
30016687:	setns  bl
3001668a:	call   0x300051a4
3001668f:	test   bl,bl
30016691:	je     0x300166c8
30016693:	push   0x30015f2c
30016698:	lea    ecx,[ebp-0x8]
3001669b:	call   0x3000437e
300166a0:	push   DWORD PTR [ebp-0x4]
300166a3:	lea    ecx,[ebp-0xc]
300166a6:	call   0x3000437e
300166ab:	mov    ecx,DWORD PTR [edi+0x40]
300166ae:	push   eax
300166af:	lea    eax,[ebp-0x8]
300166b2:	push   eax
300166b3:	call   0x30015eac
300166b8:	lea    ecx,[ebp-0xc]
300166bb:	call   0x300051a4
300166c0:	lea    ecx,[ebp-0x8]
300166c3:	call   0x300051a4
300166c8:	push   DWORD PTR [ebp-0x4]
300166cb:	call   DWORD PTR ds:0x300454e8
300166d1:	push   0x3001674c
300166d6:	lea    ecx,[ebp-0x8]
300166d9:	call   0x3000437e
300166de:	lea    eax,[edi+0x48]
300166e1:	push   eax
300166e2:	push   0x30008fc4
300166e7:	lea    ecx,[ebp-0x14]
300166ea:	call   0x3000437e
300166ef:	push   eax
300166f0:	push   0x30015e88
300166f5:	lea    ecx,[ebp-0x10]
300166f8:	call   0x3000437e
300166fd:	mov    edx,eax
300166ff:	lea    ecx,[ebp-0x4]
30016702:	call   0x30009298
30016707:	mov    edx,eax
30016709:	lea    ecx,[ebp-0xc]
3001670c:	call   0x30009298
30016711:	mov    ecx,DWORD PTR [edi+0x40]
30016714:	push   eax
30016715:	lea    eax,[ebp-0x8]
30016718:	push   eax
30016719:	call   0x30015eac
3001671e:	lea    ecx,[ebp-0xc]
30016721:	call   0x300051a4
30016726:	lea    ecx,[ebp-0x4]
30016729:	call   0x300051a4
3001672e:	lea    ecx,[ebp-0x10]
30016731:	call   0x300051a4
30016736:	lea    ecx,[ebp-0x14]
30016739:	call   0x300051a4
3001673e:	lea    ecx,[ebp-0x8]
30016741:	call   0x300051a4
30016746:	pop    edi
30016747:	pop    esi
30016748:	pop    ebx
30016749:	leave  
3001674a:	ret    
3001674b:	nop
3001674c:	and    al,0x0
3001674e:	dec    ecx
3001674f:	add    BYTE PTR [esi+0x0],ch
30016752:	imul   eax,DWORD PTR [eax],0x690074
30016758:	popa   
30016759:	add    BYTE PTR [eax+eax*1+0x69],ch
3001675d:	add    BYTE PTR [edx+0x0],bh
30016760:	popa   
30016761:	add    BYTE PTR [eax+eax*1+0x69],dh
30016765:	add    BYTE PTR [edi+0x0],ch
30016768:	outs   dx,BYTE PTR ds:[esi]
30016769:	add    BYTE PTR [eax+eax*1],ah
3001676c:	add    BYTE PTR [eax],al
3001676e:	nop
3001676f:	nop
30016770:	push   esi
30016771:	add    BYTE PTR [ebx+0x0],dl
30016774:	inc    ebx
30016775:	add    BYTE PTR [edi+0x0],ch
30016778:	add    BYTE PTR fs:[ebp+0x0],ah
3001677c:	dec    ebp
3001677d:	add    BYTE PTR [ecx+0x0],ah
30016780:	jb     0x30016782
30016782:	imul   eax,DWORD PTR [eax],0x65
30016785:	add    BYTE PTR [edx+0x0],dh
30016788:	jae    0x3001678a
3001678a:	inc    ebp
3001678b:	add    BYTE PTR [esi+0x0],ch
3001678e:	popa   
3001678f:	add    BYTE PTR [edx+0x0],ah
30016792:	ins    BYTE PTR es:[edi],dx
30016793:	add    BYTE PTR [ebp+0x0],ah
30016796:	add    BYTE PTR fs:[eax],al
30016799:	add    BYTE PTR [eax+0x53005690],dl
3001679f:	add    BYTE PTR [ebx+0x0],al
300167a2:	outs   dx,DWORD PTR ds:[esi]
300167a3:	add    BYTE PTR [eax+eax*1+0x65],ah
300167a7:	add    BYTE PTR [ebp+0x0],cl
300167aa:	popa   
300167ab:	add    BYTE PTR [edx+0x0],dh
300167ae:	imul   eax,DWORD PTR [eax],0x65
300167b1:	add    BYTE PTR [edx+0x0],dh
300167b4:	jae    0x300167b6
300167b6:	dec    esp
300167b7:	add    BYTE PTR [edi+0x0],ch
300167ba:	add    BYTE PTR [bx+0x0],ah
300167be:	imul   eax,DWORD PTR [eax],0x67006e
300167c4:	inc    ebp
300167c5:	add    BYTE PTR [esi+0x0],ch
300167c8:	popa   
300167c9:	add    BYTE PTR [edx+0x0],ah
300167cc:	ins    BYTE PTR es:[edi],dx
300167cd:	add    BYTE PTR [ebp+0x0],ah
300167d0:	add    BYTE PTR fs:[eax],al
300167d3:	add    BYTE PTR [edi+ebx*1+0x1f7c3003],bl
300167da:	add    esi,DWORD PTR [eax]
300167dc:	pop    edi
300167dd:	pop    ds
300167de:	add    esi,DWORD PTR [eax]
300167e0:	mov    edi,0x1830031f
300167e5:	jne    0x300167ea
300167e7:	xor    BYTE PTR [eax],bh
300167e9:	jne    0x300167ee
300167eb:	xor    BYTE PTR [ebp-0x75],dl
300167ee:	in     al,dx
300167ef:	and    esp,0xfffffff8
300167f2:	sub    esp,0x14
300167f5:	push   ebx
300167f6:	push   esi
300167f7:	push   edi
300167f8:	xor    ebx,ebx
300167fa:	push   ebx
300167fb:	push   ebx
300167fc:	push   0x1
300167fe:	push   ebx
300167ff:	call   DWORD PTR ds:0x3004514c
30016805:	push   0x30006ce8
3001680a:	call   DWORD PTR ds:0x30045148
30016810:	mov    edi,DWORD PTR ds:0x30045284
30016816:	mov    DWORD PTR [esp+0x10],ebx
3001681a:	mov    DWORD PTR [esp+0x14],ebx
3001681e:	mov    DWORD PTR [esp+0x18],ebx
30016822:	mov    DWORD PTR [esp+0x1c],ebx
30016826:	call   edi
30016828:	mov    ecx,eax
3001682a:	call   0x30019820
3001682f:	mov    edx,DWORD PTR [ebp+0x8]
30016832:	push   ecx
30016833:	push   DWORD PTR [ebp+0x14]
30016836:	lea    ecx,[esp+0x18]
3001683a:	push   eax
3001683b:	call   0x30005915
30016840:	lea    eax,[esp+0x10]
30016844:	push   eax
30016845:	lea    ecx,[esp+0x13]
30016849:	call   0x30018066
3001684e:	mov    esi,0x30043c28
30016853:	cmp    esi,0xffffffff
30016856:	je     0x3001686a
30016858:	mov    DWORD PTR ds:0x30043b90,esi
3001685e:	cmp    DWORD PTR ds:0x30043c28,ebx
30016864:	jne    0x3001f656
3001686a:	mov    esi,DWORD PTR ds:0x30043b24
30016870:	mov    eax,ds:0x30043b28
30016875:	cmp    esi,eax
30016877:	jb     0x3001f668
3001687d:	call   edi
3001687f:	mov    ecx,eax
30016881:	call   0x30019820
30016886:	mov    edx,DWORD PTR [ebp+0x14]
30016889:	mov    ecx,eax
3001688b:	call   0x30014572
30016890:	mov    esi,DWORD PTR ds:0x30043b90
30016896:	mov    edi,eax
30016898:	test   esi,esi
3001689a:	je     0x300168a4
3001689c:	cmp    DWORD PTR [esi],ebx
3001689e:	jne    0x3001f680
300168a4:	mov    esi,DWORD PTR ds:0x30043b24
300168aa:	mov    eax,ds:0x30043b28
300168af:	cmp    esi,eax
300168b1:	jb     0x3001f69c
300168b7:	mov    ecx,0x30043b64
300168bc:	call   0x30017158
300168c1:	lea    ecx,[esp+0xf]
300168c5:	call   0x30016fe8
300168ca:	push   DWORD PTR [esp+0x1c]
300168ce:	mov    esi,DWORD PTR ds:0x300454e8
300168d4:	call   esi
300168d6:	push   DWORD PTR [esp+0x18]
300168da:	call   esi
300168dc:	mov    eax,edi
300168de:	pop    edi
300168df:	pop    esi
300168e0:	pop    ebx
300168e1:	mov    esp,ebp
300168e3:	pop    ebp
300168e4:	ret    0x10
300168e7:	push   ebx
300168e8:	push   esi
300168e9:	push   0x0
300168eb:	push   0x30000000
300168f0:	call   0x300167ec
300168f5:	mov    ds:0x30043ba0,eax
300168fa:	cmp    DWORD PTR ds:0x30043b18,0x0
30016901:	jne    0x300270fd
30016907:	push   eax
30016908:	call   DWORD PTR ds:0x300453ec
3001690e:	push   edi
3001690f:	mov    edi,ecx
30016911:	test   edi,edi
30016913:	je     0x30016948
30016915:	push   esi
30016916:	mov    esi,DWORD PTR [edi+0x24]
30016919:	test   esi,esi
3001691b:	jne    0x30016960
3001691d:	mov    eax,DWORD PTR [edi+0x18]
30016920:	test   eax,eax
30016922:	jne    0x30017404
30016928:	cmp    DWORD PTR [edi+0x20],0x0
3001692c:	pop    esi
3001692d:	je     0x30016938
3001692f:	push   DWORD PTR [edi+0x20]
30016932:	call   0x3001694a
30016937:	pop    ecx
30016938:	push   0x100
3001693d:	push   0x0
3001693f:	push   edi
30016940:	call   0x300011b1
30016945:	add    esp,0xc
30016948:	pop    edi
30016949:	ret    
3001694a:	jmp    DWORD PTR ds:0x300452b4
30016950:	idiv   DWORD PTR [edx+eax*1+0x1d52c30]
30016957:	xor    BYTE PTR [ebx+0x2c3002c2],cl
3001695d:	aad    0x1
3001695f:	xor    BYTE PTR [ebx+0x18768bc6],cl
30016965:	push   eax
30016966:	call   0x3001694a
3001696b:	pop    ecx
3001696c:	mov    eax,esi
3001696e:	test   esi,esi
30016970:	je     0x3001691d
30016972:	jmp    0x30016962
30016974:	push   esi
30016975:	mov    esi,ecx
30016977:	mov    ecx,DWORD PTR [esi+0x10]
3001697a:	test   ecx,ecx
3001697c:	jne    0x300169c8
3001697e:	pop    esi
3001697f:	ret    
30016980:	push   esi
30016981:	push   edi
30016982:	mov    edi,ecx
30016984:	mov    ecx,DWORD PTR [edi+0x20]
30016987:	sub    ecx,0x10
3001698a:	call   0x30004017
3001698f:	lea    ecx,[edi+0x8]
30016992:	call   0x30016974
30016997:	lea    ecx,[edi+0x8]
3001699a:	call   0x30016974
3001699f:	mov    ecx,DWORD PTR [edi+0x4]
300169a2:	pop    edi
300169a3:	sub    ecx,0x10
300169a6:	pop    esi
300169a7:	jmp    0x30004017
300169ac:	xchg   ebp,eax
300169ad:	retf   
300169ae:	add    DWORD PTR [eax],esi
300169b0:	xchg   ebp,eax
300169b1:	retf   
300169b2:	add    DWORD PTR [eax],esi
300169b4:	stos   DWORD PTR es:[edi],eax
300169b5:	lods   eax,DWORD PTR ds:[esi]
300169b6:	add    dh,BYTE PTR [eax]
300169b8:	add    BYTE PTR [esi+0x69dc3002],ch
300169be:	add    DWORD PTR [eax],esi
300169c0:	clc    
300169c1:	imul   eax,DWORD PTR [ecx],0x2ae0630
300169c7:	xor    BYTE PTR [ebx+0xfce3b11],cl
300169cd:	xchg   ebp,eax
300169ce:	ror    BYTE PTR [edi],0xb6
300169d1:	rcl    BYTE PTR [eax-0x1],0x52
300169d5:	adc    BYTE PTR [ebx-0x14ffef9a],al
300169db:	mov    ds:0x56ec8b55,al
300169e0:	mov    esi,ecx
300169e2:	push   0x0
300169e4:	mov    eax,DWORD PTR [esi]
300169e6:	call   DWORD PTR [eax+0x14]
300169e9:	cmp    BYTE PTR [ebp+0x8],0x0
300169ed:	jne    0x3001ed73
300169f3:	pop    esi
300169f4:	pop    ebp
300169f5:	ret    0x4
300169f8:	push   ebp
300169f9:	mov    ebp,esp
300169fb:	push   esi
300169fc:	mov    esi,ecx
300169fe:	call   0x30016a14
30016a03:	test   BYTE PTR [ebp+0x8],0x1
30016a07:	jne    0x3001ed80
30016a0d:	mov    eax,esi
30016a0f:	pop    esi
30016a10:	pop    ebp
30016a11:	ret    0x4
30016a14:	push   esi
30016a15:	mov    esi,ecx
30016a17:	mov    DWORD PTR [esi],0x300169ac
30016a1d:	mov    ecx,DWORD PTR [esi+0x8]
30016a20:	test   ecx,ecx
30016a22:	je     0x30016a29
30016a24:	call   0x30007e20
30016a29:	mov    DWORD PTR [esi],0x30016a34
30016a2f:	pop    esi
30016a30:	ret    
30016a31:	nop
30016a32:	nop
30016a33:	nop
30016a34:	add    BYTE PTR [esi+0x3],bh
30016a37:	xor    BYTE PTR [eax],al
30016a39:	jle    0x30016a3e
30016a3b:	xor    BYTE PTR [eax],al
30016a3d:	jle    0x30016a42
30016a3f:	xor    BYTE PTR [eax],al
30016a41:	jle    0x30016a46
30016a43:	xor    BYTE PTR [eax],al
30016a45:	jle    0x30016a4a
30016a47:	xor    BYTE PTR [edx+0x3002ad],cl
30016a4d:	jle    0x30016a52
30016a4f:	xor    BYTE PTR [ebp-0x75],dl
30016a52:	in     al,dx
30016a53:	push   ecx
30016a54:	push   esi
30016a55:	mov    esi,DWORD PTR ds:0x300435c4
30016a5b:	mov    eax,esi
30016a5d:	test   esi,esi
30016a5f:	jne    0x3002145e
30016a65:	pop    esi
30016a66:	leave  
30016a67:	ret    
30016a68:	push   0x1c
30016a6a:	push   0x30016a90
30016a6f:	call   0x30008a54
30016a74:	and    DWORD PTR [ebp-0x4],0x0
30016a78:	call   DWORD PTR ds:0x300454b8
30016a7e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30016a85:	call   0x30008a99
30016a8a:	ret    
30016a8b:	nop
30016a8c:	nop
30016a8d:	nop
30016a8e:	nop
30016a8f:	nop
30016a90:	(bad)  
30016a91:	(bad)  
30016a92:	(bad)  
30016a93:	inc    DWORD PTR [eax]
30016a95:	add    BYTE PTR [eax],al
30016a97:	add    ah,al
30016a99:	(bad)  
30016a9a:	(bad)  
30016a9b:	inc    DWORD PTR [eax]
30016a9d:	add    BYTE PTR [eax],al
30016a9f:	add    dh,bh
30016aa1:	(bad)  
30016aa2:	(bad)  
30016aa3:	jmp    edx
30016aa5:	adc    al,0x2
30016aa7:	xor    BYTE PTR [ebp+edx*1+0x2],ch
30016aab:	xor    BYTE PTR [ebp-0x75],dl
30016aae:	in     al,dx
30016aaf:	push   ecx
30016ab0:	call   DWORD PTR ds:0x300451a4
30016ab6:	cmp    DWORD PTR ds:0x30043690,eax
30016abc:	jne    0x30027551
30016ac2:	push   ebx
30016ac3:	push   esi
30016ac4:	push   edi
30016ac5:	mov    edi,DWORD PTR ds:0x300436a0
30016acb:	xor    ebx,ebx
30016acd:	test   edi,edi
30016acf:	jne    0x30027558
30016ad5:	mov    DWORD PTR ds:0x300436a0,ebx
30016adb:	call   0x30014fe6
30016ae0:	mov    edi,DWORD PTR ds:0x3004369c
30016ae6:	test   edi,edi
30016ae8:	jne    0x3002759a
30016aee:	pop    edi
30016aef:	pop    esi
30016af0:	mov    DWORD PTR ds:0x3004369c,ebx
30016af6:	mov    DWORD PTR ds:0x30043690,ebx
30016afc:	xor    eax,eax
30016afe:	pop    ebx
30016aff:	leave  
30016b00:	ret    
30016b01:	push   ebp
30016b02:	mov    ebp,esp
30016b04:	sub    esp,0xc
30016b07:	push   esi
30016b08:	mov    esi,ecx
30016b0a:	push   edi
30016b0b:	xor    edi,edi
30016b0d:	cmp    BYTE PTR [esi+0x68],0x0
30016b11:	jne    0x30025e3c
30016b17:	push   edi
30016b18:	lea    ecx,[esi+0x5c]
30016b1b:	call   0x3001502d
30016b20:	cmp    BYTE PTR ds:0x300430f1,0x0
30016b27:	jne    0x30025e86
30016b2d:	pop    edi
30016b2e:	pop    esi
30016b2f:	leave  
30016b30:	ret    
30016b31:	push   esi
30016b32:	mov    esi,ecx
30016b34:	cmp    DWORD PTR [esi+0x4],0x0
30016b38:	mov    DWORD PTR [esi],0x300167e8
30016b3e:	jne    0x30026512
30016b44:	lea    ecx,[esi+0x8]
30016b47:	pop    esi
30016b48:	jmp    0x300051a4
30016b4d:	push   esi
30016b4e:	mov    esi,ecx
30016b50:	push   0x0
30016b52:	mov    DWORD PTR [esi],0x300167e4
30016b58:	call   0x3001502d
30016b5d:	cmp    DWORD PTR [esi+0x4],0x0
30016b61:	je     0x30016b6c
30016b63:	push   DWORD PTR [esi+0x4]
30016b66:	call   DWORD PTR ds:0x300451d0
30016b6c:	pop    esi
30016b6d:	ret    
30016b6e:	mov    ecx,0x30043100
30016b73:	jmp    0x300051a4
30016b78:	mov    ecx,0x30043b94
30016b7d:	jmp    0x300051a4
30016b82:	xor    eax,eax
30016b84:	mov    ecx,0x30043b98
30016b89:	xchg   DWORD PTR [ecx],eax
30016b8b:	test   eax,eax
30016b8d:	jne    0x30028ecd
30016b93:	ret    
30016b94:	mov    eax,ds:0x30043bc4
30016b99:	test   eax,eax
30016b9b:	jne    0x30028f1f
30016ba1:	ret    
30016ba2:	mov    ecx,DWORD PTR ds:0x30043114
30016ba8:	lea    ecx,[ecx-0x10]
30016bab:	jmp    0x30004017
30016bb0:	cmp    BYTE PTR ds:0x30043bb8,0x0
30016bb7:	jne    0x30028ef0
30016bbd:	ret    
30016bbe:	cmp    BYTE PTR ds:0x30043bb0,0x0
30016bc5:	jne    0x30028ed9
30016bcb:	ret    
30016bcc:	cmp    BYTE PTR ds:0x30043ba8,0x0
30016bd3:	jne    0x30028f07
30016bd9:	ret    
30016bda:	push   0x0
30016bdc:	mov    eax,0x3003df30
30016be1:	call   0x3000116a
30016be6:	or     DWORD PTR [ebp-0x4],0xffffffff
30016bea:	mov    ecx,DWORD PTR ds:0x30043b60
30016bf0:	lea    ecx,[ecx-0x10]
30016bf3:	call   0x30004017
30016bf8:	call   0x3000119d
30016bfd:	ret    
30016bfe:	push   0x0
30016c00:	mov    eax,0x3003dc80
30016c05:	call   0x3000116a
30016c0a:	or     DWORD PTR [ebp-0x4],0xffffffff
30016c0e:	mov    ecx,DWORD PTR ds:0x30043b5c
30016c14:	lea    ecx,[ecx-0x10]
30016c17:	call   0x30004017
30016c1c:	call   0x3000119d
30016c21:	ret    
30016c22:	push   0x0
30016c24:	mov    eax,0x3003d7b0
30016c29:	call   0x3000116a
30016c2e:	or     DWORD PTR [ebp-0x4],0xffffffff
30016c32:	mov    ecx,DWORD PTR ds:0x3004309c
30016c38:	lea    ecx,[ecx-0x10]
30016c3b:	call   0x30004017
30016c40:	call   0x3000119d
30016c45:	ret    
30016c46:	mov    DWORD PTR ds:0x3004306c,0x30004048
30016c50:	ret    
30016c51:	push   esi
30016c52:	push   edi
30016c53:	mov    esi,0x30016c6c
30016c58:	mov    edi,0x30016c6c
30016c5d:	cmp    esi,edi
30016c5f:	jb     0x30027236
30016c65:	pop    edi
30016c66:	pop    esi
30016c67:	ret    
	...
30016c70:	xor    al,al
30016c72:	jmp    0x30016cab
30016c74:	push   ebp
30016c75:	mov    ebp,esp
30016c77:	push   esi
30016c78:	mov    esi,ecx
30016c7a:	push   edi
30016c7b:	cmp    DWORD PTR [esi+0x4],0x0
30016c7f:	je     0x30016c70
30016c81:	mov    edi,DWORD PTR [ebp+0x8]
30016c84:	test   edi,edi
30016c86:	je     0x30016c70
30016c88:	mov    eax,DWORD PTR [esi+0x8]
30016c8b:	lea    edx,[esi+0x10]
30016c8e:	push   edx
30016c8f:	mov    ecx,DWORD PTR [edx]
30016c91:	mov    eax,DWORD PTR [eax+ecx*4]
30016c94:	mov    DWORD PTR [edi],eax
30016c96:	mov    ecx,DWORD PTR [edx]
30016c98:	mov    eax,DWORD PTR [esi+0x8]
30016c9b:	and    DWORD PTR [eax+ecx*4],0x0
30016c9f:	mov    ecx,esi
30016ca1:	call   0x3000465c
30016ca6:	dec    DWORD PTR [esi+0x4]
30016ca9:	mov    al,0x1
30016cab:	pop    edi
30016cac:	pop    esi
30016cad:	pop    ebp
30016cae:	ret    0x4
30016cb1:	push   ebp
30016cb2:	mov    ebp,esp
30016cb4:	push   ecx
30016cb5:	push   ebx
30016cb6:	xor    ebx,ebx
30016cb8:	push   esi
30016cb9:	mov    esi,ecx
30016cbb:	mov    DWORD PTR [ebp-0x4],ebx
30016cbe:	lea    eax,[ebp-0x4]
30016cc1:	push   eax
30016cc2:	call   0x30016c74
30016cc7:	test   al,al
30016cc9:	je     0x30016ce5
30016ccb:	cmp    DWORD PTR [ebp-0x4],ebx
30016cce:	je     0x30016ce1
30016cd0:	mov    ecx,DWORD PTR [ebp-0x4]
30016cd3:	call   0x3000490c
30016cd8:	push   DWORD PTR [ebp-0x4]
30016cdb:	call   0x3000460f
30016ce0:	pop    ecx
30016ce1:	mov    ecx,esi
30016ce3:	jmp    0x30016cbe
30016ce5:	push   DWORD PTR [esi+0x8]
30016ce8:	call   0x30008a26
30016ced:	pop    ecx
30016cee:	mov    DWORD PTR [esi+0x8],ebx
30016cf1:	mov    DWORD PTR [esi],ebx
30016cf3:	mov    DWORD PTR [esi+0x4],ebx
30016cf6:	mov    DWORD PTR [esi+0x10],ebx
30016cf9:	mov    DWORD PTR [esi+0xc],ebx
30016cfc:	pop    esi
30016cfd:	pop    ebx
30016cfe:	leave  
30016cff:	ret    
30016d00:	cmp    DWORD PTR ds:0x3004368c,0x0
30016d07:	push   0x9
30016d09:	pop    ebx
30016d0a:	jne    0x30016d12
30016d0c:	mov    DWORD PTR ds:0x30043694,ebx
30016d12:	test   esi,esi
30016d14:	je     0x30016d1d
30016d16:	push   esi
30016d17:	call   0x3000460f
30016d1c:	pop    ecx
30016d1d:	mov    DWORD PTR ds:0x30043698,edi
30016d23:	mov    eax,ebx
30016d25:	jmp    0x30016dec
30016d2a:	push   ebp
30016d2b:	mov    ebp,esp
30016d2d:	push   ecx
30016d2e:	call   DWORD PTR ds:0x300451a4
30016d34:	cmp    DWORD PTR ds:0x30043690,eax
30016d3a:	jne    0x30027517
30016d40:	mov    eax,ds:0x30043694
30016d45:	test   eax,eax
30016d47:	jne    0x30016def
30016d4d:	push   edi
30016d4e:	mov    edi,DWORD PTR [ebp+0x8]
30016d51:	test   edi,edi
30016d53:	je     0x30027521
30016d59:	cmp    DWORD PTR [edi],0x0
30016d5c:	je     0x30027529
30016d62:	push   ebx
30016d63:	push   esi
30016d64:	push   0x18
30016d66:	call   0x30003fee
30016d6b:	mov    esi,eax
30016d6d:	pop    ecx
30016d6e:	test   esi,esi
30016d70:	je     0x3002753c
30016d76:	mov    ebx,DWORD PTR [edi]
30016d78:	push   0x0
30016d7a:	push   DWORD PTR [ebp+0xc]
30016d7d:	call   0x30014fb1
30016d82:	movzx  ecx,BYTE PTR [ebx+0x17]
30016d86:	mov    edx,eax
30016d88:	mov    eax,DWORD PTR [ebx+0x18]
30016d8b:	sub    eax,ecx
30016d8d:	mov    DWORD PTR [ebp+0x8],eax
30016d90:	test   ecx,ecx
30016d92:	je     0x30016d00
30016d98:	cmp    ecx,0x17
30016d9b:	ja     0x30016d00
30016da1:	cmp    DWORD PTR [ebx+0x1c],edx
30016da4:	jne    0x30016d00
30016daa:	and    DWORD PTR [ebp-0x4],0x0
30016dae:	lea    edx,[ebp-0x4]
30016db1:	push   edx
30016db2:	push   0x40
30016db4:	push   ecx
30016db5:	push   eax
30016db6:	call   DWORD PTR ds:0x30045118
30016dbc:	test   eax,eax
30016dbe:	je     0x30027544
30016dc4:	mov    eax,DWORD PTR [ebp+0x8]
30016dc7:	mov    DWORD PTR [esi+0xc],eax
30016dca:	mov    DWORD PTR [esi+0x4],0x1
30016dd1:	mov    DWORD PTR [esi+0x8],edi
30016dd4:	mov    DWORD PTR [esi+0x10],ebx
30016dd7:	mov    eax,DWORD PTR [ebp-0x4]
30016dda:	mov    DWORD PTR [esi+0x14],eax
30016ddd:	mov    eax,ds:0x300436a0
30016de2:	mov    DWORD PTR [esi],eax
30016de4:	mov    DWORD PTR ds:0x300436a0,esi
30016dea:	xor    eax,eax
30016dec:	pop    esi
30016ded:	pop    ebx
30016dee:	pop    edi
30016def:	leave  
30016df0:	ret    0x8
30016df3:	push   ebp
30016df4:	mov    ebp,esp
30016df6:	push   ecx
30016df7:	call   0x30014f2c
30016dfc:	test   eax,eax
30016dfe:	jne    0x30020fc9
30016e04:	push   esi
30016e05:	call   DWORD PTR ds:0x3004526c
30016e0b:	push   eax
30016e0c:	call   0x30014f8c
30016e11:	mov    esi,eax
30016e13:	test   esi,esi
30016e15:	jne    0x30016e30
30016e17:	push   0x30006f43
30016e1c:	push   0x30043108
30016e21:	call   0x30016d2a
30016e26:	mov    esi,eax
30016e28:	test   esi,esi
30016e2a:	je     0x300174a6
30016e30:	call   0x30016aac
30016e35:	test   esi,esi
30016e37:	jle    0x30016e42
30016e39:	movzx  esi,si
30016e3c:	or     esi,0x80070000
30016e42:	mov    eax,esi
30016e44:	pop    esi
30016e45:	leave  
30016e46:	ret    
30016e47:	push   esi
30016e48:	call   0x30016df3
30016e4d:	mov    esi,DWORD PTR ds:0x30043058
30016e53:	test   esi,esi
30016e55:	je     0x30016e66
30016e57:	mov    ecx,esi
30016e59:	call   0x30016e6f
30016e5e:	push   esi
30016e5f:	call   DWORD PTR ds:0x300452ac
30016e65:	pop    ecx
30016e66:	and    DWORD PTR ds:0x30043058,0x0
30016e6d:	pop    esi
30016e6e:	ret    
30016e6f:	push   ebx
30016e70:	push   esi
30016e71:	mov    esi,ecx
30016e73:	xor    ebx,ebx
30016e75:	cmp    DWORD PTR [esi],ebx
30016e77:	je     0x30016ea1
30016e79:	push   edi
30016e7a:	mov    edi,ebx
30016e7c:	cmp    DWORD PTR [esi+0x4],ebx
30016e7f:	jle    0x30016e95
30016e81:	mov    ecx,DWORD PTR [esi]
30016e83:	add    ecx,ebx
30016e85:	call   0x3001506d
30016e8a:	inc    edi
30016e8b:	add    ebx,0x20
30016e8e:	cmp    edi,DWORD PTR [esi+0x4]
30016e91:	jl     0x30016e81
30016e93:	xor    ebx,ebx
30016e95:	push   DWORD PTR [esi]
30016e97:	call   DWORD PTR ds:0x300452b4
30016e9d:	pop    ecx
30016e9e:	mov    DWORD PTR [esi],ebx
30016ea0:	pop    edi
30016ea1:	mov    DWORD PTR [esi+0x4],ebx
30016ea4:	mov    DWORD PTR [esi+0x8],ebx
30016ea7:	pop    esi
30016ea8:	pop    ebx
30016ea9:	ret    
30016eaa:	push   esi
30016eab:	mov    esi,ecx
30016ead:	call   0x30016df3
30016eb2:	mov    eax,DWORD PTR [esi]
30016eb4:	mov    ecx,esi
30016eb6:	call   DWORD PTR [eax+0x44]
30016eb9:	test   al,al
30016ebb:	jne    0x3001fdbc
30016ec1:	mov    ecx,esi
30016ec3:	pop    esi
30016ec4:	push   esi
30016ec5:	mov    esi,ecx
30016ec7:	cmp    DWORD PTR [esi+0x4],0x0
30016ecb:	je     0x30016f14
30016ecd:	cmp    BYTE PTR ds:0x300430f1,0x0
30016ed4:	jne    0x300234b3
30016eda:	mov    ecx,DWORD PTR [esi+0x4]
30016edd:	test   ecx,ecx
30016edf:	je     0x30016ee7
30016ee1:	mov    eax,DWORD PTR [ecx]
30016ee3:	push   0x1
30016ee5:	call   DWORD PTR [eax]
30016ee7:	and    DWORD PTR [esi+0x4],0x0
30016eeb:	push   edi
30016eec:	mov    edi,DWORD PTR [esi+0x8]
30016eef:	test   edi,edi
30016ef1:	je     0x30016f02
30016ef3:	mov    ecx,edi
30016ef5:	call   0x30008aad
30016efa:	push   edi
30016efb:	call   DWORD PTR ds:0x300452ac
30016f01:	pop    ecx
30016f02:	and    DWORD PTR [esi+0x8],0x0
30016f06:	cmp    BYTE PTR ds:0x300430f1,0x0
30016f0d:	pop    edi
30016f0e:	jne    0x300234cb
30016f14:	pop    esi
30016f15:	ret    
30016f16:	push   ebp
30016f17:	mov    ebp,esp
30016f19:	push   esi
30016f1a:	mov    esi,ecx
30016f1c:	call   0x30016f36
30016f21:	test   BYTE PTR [ebp+0x8],0x1
30016f25:	je     0x30016f2f
30016f27:	push   esi
30016f28:	call   DWORD PTR ds:0x300452ac
30016f2e:	pop    ecx
30016f2f:	mov    eax,esi
30016f31:	pop    esi
30016f32:	pop    ebp
30016f33:	ret    0x4
30016f36:	push   esi
30016f37:	mov    esi,ecx
30016f39:	lea    ecx,[esi+0x88]
30016f3f:	mov    DWORD PTR [esi],0x30005588
30016f45:	call   0x300051a4
30016f4a:	mov    ecx,esi
30016f4c:	pop    esi
30016f4d:	push   esi
30016f4e:	mov    esi,ecx
30016f50:	mov    DWORD PTR [esi],0x30005540
30016f56:	call   0x30016b01
30016f5b:	lea    ecx,[esi+0x6c]
30016f5e:	call   0x30016b31
30016f63:	lea    ecx,[esi+0x5c]
30016f66:	call   0x30016b4d
30016f6b:	lea    ecx,[esi+0x58]
30016f6e:	call   0x300051a4
30016f73:	lea    ecx,[esi+0x54]
30016f76:	call   0x300051a4
30016f7b:	mov    ecx,esi
30016f7d:	pop    esi
30016f7e:	push   esi
30016f7f:	mov    esi,ecx
30016f81:	lea    ecx,[esi+0x50]
30016f84:	mov    DWORD PTR [esi],0x300055d0
30016f8a:	call   0x300051a4
30016f8f:	lea    ecx,[esi+0x4c]
30016f92:	call   0x300051a4
30016f97:	lea    ecx,[esi+0x48]
30016f9a:	call   0x300051a4
30016f9f:	lea    ecx,[esi+0x44]
30016fa2:	call   0x300051a4
30016fa7:	lea    ecx,[esi+0x3c]
30016faa:	call   0x300051a4
30016faf:	lea    ecx,[esi+0x38]
30016fb2:	call   0x300051a4
30016fb7:	lea    ecx,[esi+0x34]
30016fba:	call   0x300051a4
30016fbf:	lea    ecx,[esi+0x30]
30016fc2:	call   0x300051a4
30016fc7:	lea    ecx,[esi+0x2c]
30016fca:	call   0x300051a4
30016fcf:	lea    ecx,[esi+0x28]
30016fd2:	call   0x300051a4
30016fd7:	lea    ecx,[esi+0x24]
30016fda:	call   0x300051a4
30016fdf:	lea    ecx,[esi+0x20]
30016fe2:	pop    esi
30016fe3:	jmp    0x300051a4
30016fe8:	call   0x3001702d
30016fed:	nop
30016fee:	nop
30016fef:	mov    ecx,DWORD PTR ds:0x30043098
30016ff5:	test   ecx,ecx
30016ff7:	je     0x3001700d
30016ff9:	mov    eax,DWORD PTR [ecx]
30016ffb:	push   0x1
30016ffd:	call   DWORD PTR [eax]
30016fff:	and    DWORD PTR ds:0x30043098,0x0
30017006:	mov    BYTE PTR ds:0x30043b58,0x1
3001700d:	ret    
3001700e:	push   ebp
3001700f:	mov    ebp,esp
30017011:	push   esi
30017012:	mov    esi,ecx
30017014:	call   0x3001705e
30017019:	test   BYTE PTR [ebp+0x8],0x1
3001701d:	je     0x30017026
3001701f:	push   esi
30017020:	call   0x3000460f
30017025:	pop    ecx
30017026:	mov    eax,esi
30017028:	pop    esi
30017029:	pop    ebp
3001702a:	ret    0x4
3001702d:	push   0x0
3001702f:	call   0x30004615
30017034:	test   eax,eax
30017036:	je     0x300277ec
3001703c:	mov    edx,DWORD PTR [eax]
3001703e:	mov    ecx,eax
30017040:	jmp    DWORD PTR [edx+0x10]
30017043:	add    ecx,0x4
30017046:	jmp    0x30017048
30017048:	push   ebp
30017049:	mov    ebp,esp
3001704b:	push   ecx
3001704c:	push   esi
3001704d:	mov    esi,ecx
3001704f:	cmp    DWORD PTR [esi+0x10],0xffffffff
30017053:	jne    0x30027d45
30017059:	xor    al,al
3001705b:	pop    esi
3001705c:	leave  
3001705d:	ret    
3001705e:	push   0x8
30017060:	mov    eax,0x3003d448
30017065:	call   0x3000116a
3001706a:	mov    esi,ecx
3001706c:	mov    DWORD PTR [ebp-0x10],esi
3001706f:	mov    DWORD PTR [esi],0x30004648
30017075:	mov    DWORD PTR [ebp-0x4],0x3
3001707c:	lea    ecx,[esi+0x4]
3001707f:	call   0x30017048
30017084:	mov    BYTE PTR [ebp-0x4],0x2
30017088:	push   0x300051a4
3001708d:	push   0xa
3001708f:	push   0x4
30017091:	lea    eax,[esi+0x38]
30017094:	push   eax
30017095:	call   0x300170cf
3001709a:	mov    BYTE PTR [ebp-0x4],0x1
3001709e:	lea    ecx,[esi+0x24]
300170a1:	call   0x30016cb1
300170a6:	mov    BYTE PTR [ebp-0x4],0x0
300170aa:	lea    ecx,[esi+0x20]
300170ad:	mov    DWORD PTR [ebp-0x14],ecx
300170b0:	mov    BYTE PTR [ebp-0x4],0x0
300170b4:	mov    ecx,DWORD PTR [ecx]
300170b6:	sub    ecx,0x10
300170b9:	call   0x30004017
300170be:	or     DWORD PTR [ebp-0x4],0xffffffff
300170c2:	mov    ecx,esi
300170c4:	call   0x3001733d
300170c9:	call   0x3000119d
300170ce:	ret    
300170cf:	push   0xc
300170d1:	push   0x30017108
300170d6:	call   0x30008a54
300170db:	and    DWORD PTR [ebp-0x1c],0x0
300170df:	mov    ebx,DWORD PTR [ebp+0xc]
300170e2:	mov    eax,ebx
300170e4:	mov    edi,DWORD PTR [ebp+0x10]
300170e7:	imul   eax,edi
300170ea:	mov    esi,DWORD PTR [ebp+0x8]
300170ed:	add    esi,eax
300170ef:	mov    DWORD PTR [ebp+0x8],esi
300170f2:	and    DWORD PTR [ebp-0x4],0x0
300170f6:	dec    edi
300170f7:	mov    DWORD PTR [ebp+0x10],edi
300170fa:	js     0x30017124
300170fc:	sub    esi,ebx
300170fe:	mov    DWORD PTR [ebp+0x8],esi
30017101:	mov    ecx,esi
30017103:	call   DWORD PTR [ebp+0x14]
30017106:	jmp    0x300170f6
30017108:	(bad)  
30017109:	(bad)  
3001710a:	(bad)  
3001710b:	inc    DWORD PTR [eax]
3001710d:	add    BYTE PTR [eax],al
3001710f:	add    ah,dl
30017111:	(bad)  
30017112:	(bad)  
30017113:	inc    DWORD PTR [eax]
30017115:	add    BYTE PTR [eax],al
30017117:	add    dh,bh
30017119:	(bad)  
3001711a:	(bad)  
3001711b:	inc    DWORD PTR [eax]
3001711d:	add    BYTE PTR [eax],al
3001711f:	add    dh,dl
30017121:	jno    0x30017125
30017123:	xor    BYTE PTR [ebx],dh
30017125:	rol    BYTE PTR [eax-0x77],0x45
30017129:	in     al,0xc7
3001712b:	inc    ebp
3001712c:	cld    
3001712d:	(bad)  
3001712e:	(bad)  
3001712f:	(bad)  
30017130:	(bad)  
30017131:	call   0x3001713e
30017136:	call   0x30008a99
3001713b:	ret    0x10
3001713e:	test   eax,eax
30017140:	je     0x300271e7
30017146:	ret    
30017147:	mov    DWORD PTR ds:0x30043b64,0x30006d14
30017151:	mov    ecx,0x30043b64
30017156:	jmp    0x30017158
30017158:	push   ebx
30017159:	push   esi
3001715a:	mov    esi,ecx
3001715c:	push   edi
3001715d:	lea    edi,[esi+0x4]
30017160:	xor    ebx,ebx
30017162:	cmp    DWORD PTR [edi],ebx
30017164:	je     0x30017186
30017166:	cmp    DWORD PTR [esi+0xc],ebx
30017169:	jne    0x3001f6d1
3001716f:	mov    ecx,DWORD PTR [esi+0x28]
30017172:	test   ecx,ecx
30017174:	jne    0x3001f6e0
3001717a:	lea    eax,[esi+0x10]
3001717d:	push   eax
3001717e:	call   DWORD PTR ds:0x30045158
30017184:	mov    DWORD PTR [edi],ebx
30017186:	pop    edi
30017187:	pop    esi
30017188:	pop    ebx
30017189:	ret    
3001718a:	mov    ecx,0x300435d0
3001718f:	jmp    0x30017191
30017191:	push   esi
30017192:	mov    esi,ecx
30017194:	mov    ecx,DWORD PTR [esi+0xa4]
3001719a:	sub    ecx,0x10
3001719d:	mov    DWORD PTR [esi],0x30005000
300171a3:	mov    DWORD PTR [esi+0x9c],0x300167d4
300171ad:	call   0x30004017
300171b2:	mov    ecx,esi
300171b4:	pop    esi
300171b5:	mov    DWORD PTR [ecx],0x30005060
300171bb:	mov    DWORD PTR [ecx+0x9c],0x300167d4
300171c5:	jmp    0x300171c7
300171c7:	push   esi
300171c8:	mov    esi,ecx
300171ca:	mov    DWORD PTR [esi],0x300050b0
300171d0:	call   0x30016ec4
300171d5:	lea    ecx,[esi+0x98]
300171db:	call   0x300051a4
300171e0:	lea    ecx,[esi+0x94]
300171e6:	call   0x300051a4
300171eb:	lea    ecx,[esi+0x7c]
300171ee:	call   0x30007014
300171f3:	lea    ecx,[esi+0x64]
300171f6:	call   0x30007014
300171fb:	lea    ecx,[esi+0x4c]
300171fe:	call   0x30007014
30017203:	lea    ecx,[esi+0x48]
30017206:	call   0x300051a4
3001720b:	lea    ecx,[esi+0x44]
3001720e:	call   0x300051a4
30017213:	lea    ecx,[esi+0x40]
30017216:	call   0x300051a4
3001721b:	lea    ecx,[esi+0x3c]
3001721e:	call   0x300051a4
30017223:	lea    ecx,[esi+0x38]
30017226:	call   0x300051a4
3001722b:	lea    ecx,[esi+0x34]
3001722e:	call   0x300051a4
30017233:	lea    ecx,[esi+0x30]
30017236:	call   0x300051a4
3001723b:	lea    ecx,[esi+0x2c]
3001723e:	call   0x300051a4
30017243:	lea    ecx,[esi+0x28]
30017246:	call   0x300051a4
3001724b:	lea    ecx,[esi+0x24]
3001724e:	call   0x300051a4
30017253:	lea    ecx,[esi+0x20]
30017256:	pop    esi
30017257:	jmp    0x300051a4
3001725c:	mov    ecx,0x30043bbc
30017261:	jmp    0x30017263
30017263:	push   esi
30017264:	mov    esi,ecx
30017266:	cmp    BYTE PTR [esi+0x4],0x0
3001726a:	jne    0x30028806
30017270:	pop    esi
30017271:	ret    
30017272:	mov    ecx,0x30043b1c
30017277:	jmp    0x30017279
30017279:	push   esi
3001727a:	mov    esi,ecx
3001727c:	cmp    DWORD PTR [esi],0x0
3001727f:	je     0x3001729c
30017281:	push   edi
30017282:	mov    edi,DWORD PTR [esi+0x8]
30017285:	cmp    edi,DWORD PTR [esi+0xc]
30017288:	jb     0x300272b1
3001728e:	lea    eax,[esi+0x10]
30017291:	push   eax
30017292:	call   DWORD PTR ds:0x30045158
30017298:	and    DWORD PTR [esi],0x0
3001729b:	pop    edi
3001729c:	pop    esi
3001729d:	ret    
3001729e:	mov    ecx,0x30043088
300172a3:	jmp    0x300172a5
300172a5:	cmp    BYTE PTR [ecx+0x8],0x0
300172a9:	mov    DWORD PTR [ecx],0x30004034
300172af:	jne    0x30027274
300172b5:	ret    
300172b6:	mov    ecx,0x300430b8
300172bb:	jmp    0x300172bd
300172bd:	push   esi
300172be:	mov    esi,ecx
300172c0:	lea    eax,[esi+0x14]
300172c3:	push   eax
300172c4:	call   DWORD PTR ds:0x30045158
300172ca:	lea    ecx,[esi+0x2c]
300172cd:	pop    esi
300172ce:	push   esi
300172cf:	mov    esi,ecx
300172d1:	cmp    DWORD PTR [esi],0x0
300172d4:	jne    0x3002725d
300172da:	and    DWORD PTR [esi+0x4],0x0
300172de:	and    DWORD PTR [esi+0x8],0x0
300172e2:	pop    esi
300172e3:	ret    
300172e4:	push   0xc
300172e6:	mov    eax,0x3003cf9a
300172eb:	call   0x30006c56
300172f0:	mov    esi,ecx
300172f2:	mov    DWORD PTR [ebp-0x14],esi
300172f5:	xor    edi,edi
300172f7:	inc    edi
300172f8:	mov    DWORD PTR [ebp-0x4],edi
300172fb:	mov    BYTE PTR [ebp-0x4],0x2
300172ff:	call   0x30017048
30017304:	mov    DWORD PTR [ebp-0x4],edi
30017307:	mov    BYTE PTR [ebp-0x4],0x0
3001730b:	lea    ecx,[esi+0x8]
3001730e:	mov    DWORD PTR [ebp-0x18],ecx
30017311:	mov    BYTE PTR [ebp-0x4],0x0
30017315:	mov    ecx,DWORD PTR [ecx]
30017317:	sub    ecx,0x10
3001731a:	call   0x30004017
3001731f:	or     DWORD PTR [ebp-0x4],0xffffffff
30017323:	lea    ecx,[esi+0x4]
30017326:	mov    DWORD PTR [ebp-0x18],ecx
30017329:	or     DWORD PTR [ebp-0x4],0xffffffff
3001732d:	mov    ecx,DWORD PTR [ecx]
3001732f:	sub    ecx,0x10
30017332:	call   0x30004017
30017337:	call   0x3000119d
3001733c:	ret    
3001733d:	push   0x4
3001733f:	mov    eax,0x3003cce0
30017344:	call   0x3000116a
30017349:	mov    DWORD PTR [ebp-0x10],ecx
3001734c:	mov    DWORD PTR [ecx],0x30008a2c
30017352:	or     DWORD PTR [ebp-0x4],0xffffffff
30017356:	add    ecx,0x4
30017359:	call   0x300172e4
3001735e:	call   0x3000119d
30017363:	ret    
30017364:	push   ebp
30017365:	mov    ebp,esp
30017367:	cmp    DWORD PTR ds:0x30043b54,0x0
3001736e:	je     0x300173ee
30017370:	push   DWORD PTR ds:0x30043b10
30017376:	call   DWORD PTR ds:0x30045134
3001737c:	movzx  eax,ax
3001737f:	test   ax,ax
30017382:	je     0x3001738b
30017384:	push   eax
30017385:	call   DWORD PTR ds:0x30045294
3001738b:	push   DWORD PTR ds:0x30043b14
30017391:	call   DWORD PTR ds:0x30045134
30017397:	movzx  eax,ax
3001739a:	test   ax,ax
3001739d:	je     0x300173a6
3001739f:	push   eax
300173a0:	call   DWORD PTR ds:0x30045294
300173a6:	mov    eax,ds:0x30043b48
300173ab:	test   eax,eax
300173ad:	je     0x300173b4
300173af:	push   DWORD PTR [ebp+0x8]
300173b2:	call   eax
300173b4:	push   ebx
300173b5:	push   DWORD PTR ds:0x30043b54
300173bb:	xor    ebx,ebx
300173bd:	mov    DWORD PTR ds:0x30043b44,ebx
300173c3:	mov    DWORD PTR ds:0x30043b48,ebx
300173c9:	mov    DWORD PTR ds:0x300430f8,ebx
300173cf:	mov    DWORD PTR ds:0x30043b4c,ebx
300173d5:	mov    DWORD PTR ds:0x30043b50,ebx
300173db:	mov    BYTE PTR ds:0x300430fc,bl
300173e1:	call   DWORD PTR ds:0x30045168
300173e7:	mov    DWORD PTR ds:0x30043b54,ebx
300173ed:	pop    ebx
300173ee:	pop    ebp
300173ef:	ret    0x4
300173f2:	push   0x225
300173f7:	call   0x3000532c
300173fc:	push   0x33
300173fe:	call   0x30017364
30017403:	ret    
30017404:	mov    esi,DWORD PTR [eax+0x14]
30017407:	push   eax
30017408:	call   0x3001694a
3001740d:	pop    ecx
3001740e:	mov    eax,esi
30017410:	test   esi,esi
30017412:	jne    0x30017404
30017414:	jmp    0x30016928
30017419:	push   0x4
3001741b:	mov    eax,0x300405c0
30017420:	call   0x3000116a
30017425:	mov    esi,DWORD PTR ds:0x30043110
3001742b:	xor    eax,eax
3001742d:	cmp    DWORD PTR [esi+0x4],eax
30017430:	je     0x3002068b
30017436:	mov    ecx,DWORD PTR [esi]
30017438:	mov    DWORD PTR [ebp-0x10],eax
3001743b:	test   ecx,ecx
3001743d:	je     0x30017458
3001743f:	mov    eax,DWORD PTR [ecx]
30017441:	lea    edx,[ebp-0x10]
30017444:	push   edx
30017445:	push   0x30015c4c
3001744a:	push   ecx
3001744b:	call   DWORD PTR [eax]
3001744d:	test   eax,eax
3001744f:	js     0x30020691
30017455:	mov    eax,DWORD PTR [ebp-0x10]
30017458:	and    DWORD PTR [ebp-0x4],0x0
3001745c:	test   eax,eax
3001745e:	je     0x30017468
30017460:	mov    ecx,DWORD PTR [eax]
30017462:	push   0x0
30017464:	push   eax
30017465:	call   DWORD PTR [ecx+0xc]
30017468:	mov    eax,DWORD PTR [esi+0x4]
3001746b:	push   eax
3001746c:	mov    ecx,DWORD PTR [eax]
3001746e:	call   DWORD PTR [ecx+0x10]
30017471:	or     DWORD PTR [ebp-0x4],0xffffffff
30017475:	mov    ecx,DWORD PTR [ebp-0x10]
30017478:	mov    esi,eax
3001747a:	test   ecx,ecx
3001747c:	je     0x30017484
3001747e:	mov    edx,DWORD PTR [ecx]
30017480:	push   ecx
30017481:	call   DWORD PTR [edx+0x8]
30017484:	mov    eax,esi
30017486:	call   0x3000119d
3001748b:	ret    
3001748c:	lea    eax,[ebp-0x4]
3001748f:	push   eax
30017490:	push   0x40
30017492:	push   0x10000
30017497:	push   esi
30017498:	call   DWORD PTR ds:0x30045118
3001749e:	mov    esi,DWORD PTR [esi+0x4]
300174a1:	jmp    0x30014f7f
300174a6:	push   0x30004ccc
300174ab:	push   0x300430ac
300174b0:	call   0x30016d2a
300174b5:	mov    esi,eax
300174b7:	test   esi,esi
300174b9:	jne    0x30016e30
300174bf:	push   0x3000610c
300174c4:	push   0x30043678
300174c9:	call   0x30016d2a
300174ce:	mov    esi,eax
300174d0:	test   esi,esi
300174d2:	jne    0x30016e30
300174d8:	push   0x30001270
300174dd:	push   0x30043060
300174e2:	call   0x30016d2a
300174e7:	mov    esi,eax
300174e9:	test   esi,esi
300174eb:	jne    0x30016e30
300174f1:	push   0x300011b7
300174f6:	push   0x30043054
300174fb:	call   0x30016d2a
30017500:	mov    esi,eax
30017502:	test   esi,esi
30017504:	jne    0x30016e30
3001750a:	push   0x30032322
3001750f:	push   0x3004367c
30017514:	call   0x30016d2a
30017519:	mov    esi,eax
3001751b:	test   esi,esi
3001751d:	jne    0x30016e30
30017523:	push   0x30004d9c
30017528:	push   0x300430b4
3001752d:	call   0x30016d2a
30017532:	mov    esi,eax
30017534:	test   esi,esi
30017536:	jne    0x30016e30
3001753c:	push   0x30006ed3
30017541:	push   0x3004310c
30017546:	call   0x30016d2a
3001754b:	mov    esi,eax
3001754d:	test   esi,esi
3001754f:	jne    0x30016e30
30017555:	push   0x3000130f
3001755a:	push   0x300430a4
3001755f:	call   0x30016d2a
30017564:	mov    esi,eax
30017566:	test   esi,esi
30017568:	jne    0x30016e30
3001756e:	push   0x3003232c
30017573:	push   0x30043680
30017578:	call   0x30016d2a
3001757d:	mov    esi,eax
3001757f:	test   esi,esi
30017581:	jne    0x30016e30
30017587:	push   0x30001319
3001758c:	push   0x300430a8
30017591:	call   0x30016d2a
30017596:	mov    esi,eax
30017598:	test   esi,esi
3001759a:	jne    0x30016e30
300175a0:	push   0x30032336
300175a5:	push   0x30043684
300175aa:	call   0x30016d2a
300175af:	mov    esi,eax
300175b1:	test   esi,esi
300175b3:	jne    0x30016e30
300175b9:	push   0x30001305
300175be:	push   0x300430a0
300175c3:	call   0x30016d2a
300175c8:	mov    esi,eax
300175ca:	test   esi,esi
300175cc:	jne    0x30016e30
300175d2:	push   0x30004cc2
300175d7:	push   0x300430b0
300175dc:	call   0x30016d2a
300175e1:	mov    esi,eax
300175e3:	test   esi,esi
300175e5:	jne    0x30016e30
300175eb:	push   0x300012fb
300175f0:	push   0x30043068
300175f5:	call   0x30016d2a
300175fa:	mov    esi,eax
300175fc:	test   esi,esi
300175fe:	jne    0x30016e30
30017604:	call   0x30015c44
30017609:	test   eax,eax
3001760b:	je     0x30016e44
30017611:	jmp    0x30020fd9
30017616:	push   0x1
30017618:	push   edx
30017619:	call   DWORD PTR ds:0x300450d4
3001761f:	test   eax,eax
30017621:	jne    0x30015065
30017627:	jmp    0x30026430
3001762c:	xor    eax,eax
3001762e:	inc    eax
3001762f:	jmp    0x30015069
30017634:	xor    edi,edi
30017636:	cmp    BYTE PTR [eax+0x17],0x0
3001763a:	jbe    0x30017670
3001763c:	and    DWORD PTR [ebp-0x2d4],0x0
30017643:	lea    ecx,[ebp-0x2d4]
30017649:	push   ecx
3001764a:	push   0x0
3001764c:	push   eax
3001764d:	mov    eax,DWORD PTR [esi+0xc]
30017650:	add    eax,edi
30017652:	push   eax
30017653:	call   0x30015a8b
30017658:	cmp    DWORD PTR [ebp-0x2d4],0x0
3001765f:	jne    0x30017670
30017661:	mov    ecx,DWORD PTR [esi+0x10]
30017664:	mov    edi,eax
30017666:	sub    edi,ecx
30017668:	movzx  ecx,BYTE PTR [ecx+0x17]
3001766c:	cmp    edi,ecx
3001766e:	jl     0x3001763c
30017670:	mov    eax,DWORD PTR [esi+0x10]
30017673:	movzx  eax,BYTE PTR [eax+0x17]
30017677:	cmp    edi,eax
30017679:	jne    0x300275e9
3001767f:	mov    eax,DWORD PTR [esi+0xc]
30017682:	jmp    0x30015b83
30017687:	push   ebp
30017688:	mov    ebp,esp
3001768a:	push   esi
3001768b:	mov    esi,DWORD PTR [ebp+0x8]
3001768e:	push   edi
3001768f:	mov    edx,esi
30017691:	push   0x8
30017693:	and    edx,0xffff0000
30017699:	pop    ecx
3001769a:	xor    eax,eax
3001769c:	mov    edi,esi
3001769e:	rep stos DWORD PTR es:[edi],eax
300176a0:	mov    eax,DWORD PTR [edx+0x8]
300176a3:	mov    DWORD PTR [esi+0x18],eax
300176a6:	pop    edi
300176a7:	mov    DWORD PTR [edx+0x8],esi
300176aa:	pop    esi
300176ab:	pop    ebp
300176ac:	ret    0x4
300176af:	cmp    DWORD PTR [edi+0x10],0x0
300176b3:	je     0x30015be9
300176b9:	push   DWORD PTR [edi+0x10]
300176bc:	call   0x30017687
300176c1:	and    DWORD PTR [edi+0x10],0x0
300176c5:	jmp    0x30015be9
300176ca:	test   esi,esi
300176cc:	je     0x30015c9a
300176d2:	lea    ecx,[esi+0x4]
300176d5:	push   0x1
300176d7:	mov    edx,DWORD PTR [ecx]
300176d9:	call   DWORD PTR [edx+0x14]
300176dc:	jmp    0x30015c9a
300176e1:	sub    ecx,0x4
300176e4:	jmp    0x300176e6
300176e6:	push   ebp
300176e7:	mov    ebp,esp
300176e9:	push   esi
300176ea:	mov    esi,ecx
300176ec:	call   0x300177eb
300176f1:	test   BYTE PTR [ebp+0x8],0x1
300176f5:	je     0x300176ff
300176f7:	push   esi
300176f8:	call   DWORD PTR ds:0x300452ac
300176fe:	pop    ecx
300176ff:	mov    eax,esi
30017701:	pop    esi
30017702:	pop    ebp
30017703:	ret    0x4
30017706:	test   esi,esi
30017708:	je     0x30006a28
3001770e:	mov    edx,DWORD PTR [esi]
30017710:	push   0x1
30017712:	mov    ecx,esi
30017714:	call   DWORD PTR [edx+0x14]
30017717:	jmp    0x30006a28
3001771c:	push   ebp
3001771d:	mov    ebp,esp
3001771f:	push   esi
30017720:	mov    esi,ecx
30017722:	call   0x3001773c
30017727:	test   BYTE PTR [ebp+0x8],0x1
3001772b:	je     0x30017735
3001772d:	push   esi
3001772e:	call   DWORD PTR ds:0x300452ac
30017734:	pop    ecx
30017735:	mov    eax,esi
30017737:	pop    esi
30017738:	pop    ebp
30017739:	ret    0x4
3001773c:	push   0x4
3001773e:	mov    eax,0x300402a8
30017743:	call   0x3000116a
30017748:	mov    esi,ecx
3001774a:	mov    DWORD PTR [ebp-0x10],esi
3001774d:	mov    DWORD PTR [esi],0x300069f4
30017753:	mov    DWORD PTR [esi+0x4],0x300069ac
3001775a:	and    DWORD PTR [ebp-0x4],0x0
3001775e:	mov    DWORD PTR [esi+0x8],0xc0000001
30017765:	mov    ecx,DWORD PTR ds:0x300430f4
3001776b:	mov    eax,DWORD PTR [ecx]
3001776d:	call   DWORD PTR [eax+0x8]
30017770:	or     DWORD PTR [ebp-0x4],0xffffffff
30017774:	push   DWORD PTR [esi+0x2c]
30017777:	call   DWORD PTR ds:0x300454e8
3001777d:	mov    edx,DWORD PTR [esi+0x28]
30017780:	test   edx,edx
30017782:	je     0x3001778a
30017784:	mov    eax,DWORD PTR [edx]
30017786:	push   edx
30017787:	call   DWORD PTR [eax+0x8]
3001778a:	lea    ecx,[esi+0x8]
3001778d:	call   0x3001e3be
30017792:	call   0x3000119d
30017797:	ret    
30017798:	push   0x4
3001779a:	mov    eax,0x30040359
3001779f:	call   0x3000116a
300177a4:	mov    esi,ecx
300177a6:	mov    DWORD PTR [ebp-0x10],esi
300177a9:	mov    DWORD PTR [ebp-0x4],0x2
300177b0:	mov    ecx,DWORD PTR [esi+0x2c]
300177b3:	test   ecx,ecx
300177b5:	je     0x300177bd
300177b7:	mov    eax,DWORD PTR [ecx]
300177b9:	push   ecx
300177ba:	call   DWORD PTR [eax+0x8]
300177bd:	mov    BYTE PTR [ebp-0x4],0x1
300177c1:	mov    ecx,DWORD PTR [esi+0x2c]
300177c4:	test   ecx,ecx
300177c6:	je     0x300177ce
300177c8:	mov    eax,DWORD PTR [ecx]
300177ca:	push   ecx
300177cb:	call   DWORD PTR [eax+0x8]
300177ce:	mov    BYTE PTR [ebp-0x4],0x0
300177d2:	mov    ecx,DWORD PTR [esi+0x8]
300177d5:	test   ecx,ecx
300177d7:	jne    0x300206a5
300177dd:	lea    ecx,[esi+0xc]
300177e0:	call   0x3001e3be
300177e5:	call   0x3000119d
300177ea:	ret    
300177eb:	push   0x4
300177ed:	mov    eax,0x300402f8
300177f2:	call   0x3000116a
300177f7:	mov    esi,ecx
300177f9:	mov    DWORD PTR [ebp-0x10],esi
300177fc:	mov    DWORD PTR [esi],0x300069e0
30017802:	mov    DWORD PTR [esi+0x4],0x300069c8
30017809:	and    DWORD PTR [ebp-0x4],0x0
3001780d:	mov    DWORD PTR [esi+0xc],0xc0000001
30017814:	mov    ecx,DWORD PTR ds:0x300430f4
3001781a:	mov    eax,DWORD PTR [ecx]
3001781c:	call   DWORD PTR [eax+0x8]
3001781f:	or     DWORD PTR [ebp-0x4],0xffffffff
30017823:	mov    ecx,esi
30017825:	call   0x30017798
3001782a:	call   0x3000119d
3001782f:	ret    
30017830:	push   0x4
30017832:	mov    eax,0x30040258
30017837:	call   0x3000116a
3001783c:	mov    DWORD PTR [ebp-0x10],ecx
3001783f:	mov    DWORD PTR [ecx],0x30006df0
30017845:	and    DWORD PTR [ebp-0x4],0x0
30017849:	lea    esi,[ecx+0x4]
3001784c:	mov    DWORD PTR [esi],0xc0000001
30017852:	mov    ecx,DWORD PTR ds:0x300430f4
30017858:	mov    eax,DWORD PTR [ecx]
3001785a:	call   DWORD PTR [eax+0x8]
3001785d:	mov    ecx,esi
3001785f:	call   0x3001e3be
30017864:	call   0x3000119d
30017869:	ret    
3001786a:	push   ebp
3001786b:	mov    ebp,esp
3001786d:	push   esi
3001786e:	mov    esi,ecx
30017870:	call   0x30017830
30017875:	test   BYTE PTR [ebp+0x8],0x1
30017879:	je     0x30017883
3001787b:	push   esi
3001787c:	call   DWORD PTR ds:0x300452ac
30017882:	pop    ecx
30017883:	mov    eax,esi
30017885:	pop    esi
30017886:	pop    ebp
30017887:	ret    0x4
3001788a:	push   DWORD PTR [esi]
3001788c:	call   DWORD PTR ds:0x300454cc
30017892:	mov    ecx,DWORD PTR [esi]
30017894:	test   ecx,ecx
30017896:	je     0x300178a1
30017898:	and    DWORD PTR [esi],0x0
3001789b:	mov    eax,DWORD PTR [ecx]
3001789d:	push   ecx
3001789e:	call   DWORD PTR [eax+0x8]
300178a1:	push   DWORD PTR [esi+0x4]
300178a4:	call   DWORD PTR ds:0x300451d0
300178aa:	and    DWORD PTR [esi+0x4],0x0
300178ae:	xor    eax,eax
300178b0:	pop    esi
300178b1:	ret    
300178b2:	push   esi
300178b3:	push   edi
300178b4:	mov    edi,ecx
300178b6:	push   0x0
300178b8:	push   edi
300178b9:	mov    DWORD PTR [edi],0x3001e304
300178bf:	call   DWORD PTR ds:0x300454c4
300178c5:	lea    ecx,[edi+0x18]
300178c8:	call   0x3001e3d3
300178cd:	mov    ecx,DWORD PTR [edi+0x18]
300178d0:	test   ecx,ecx
300178d2:	jne    0x30020a28
300178d8:	mov    ecx,DWORD PTR [edi+0x14]
300178db:	pop    edi
300178dc:	pop    esi
300178dd:	test   ecx,ecx
300178df:	jne    0x30020a33
300178e5:	ret    
300178e6:	push   0x4
300178e8:	mov    eax,0x3003e73d
300178ed:	call   0x3000116a
300178f2:	mov    esi,ecx
300178f4:	mov    DWORD PTR [ebp-0x10],esi
300178f7:	mov    DWORD PTR [esi],0x30016958
300178fd:	mov    DWORD PTR [ebp-0x4],0x2
30017904:	call   0x30005260
30017909:	cmp    DWORD PTR [esi+0x3c],0x0
3001790d:	je     0x3001791c
3001790f:	push   DWORD PTR [esi+0x3c]
30017912:	call   DWORD PTR ds:0x300451d0
30017918:	and    DWORD PTR [esi+0x3c],0x0
3001791c:	cmp    DWORD PTR [esi+0x38],0x0
30017920:	je     0x3001792f
30017922:	push   DWORD PTR [esi+0x38]
30017925:	call   DWORD PTR ds:0x300451d0
3001792b:	and    DWORD PTR [esi+0x38],0x0
3001792f:	lea    ecx,[esi+0x8]
30017932:	call   0x30016980
30017937:	call   0x3000119d
3001793c:	ret    
3001793d:	mov    edx,DWORD PTR [ecx]
3001793f:	push   0x1
30017941:	call   DWORD PTR [edx+0x24]
30017944:	jmp    0x3000105f
30017949:	push   ebp
3001794a:	mov    ebp,esp
3001794c:	push   esi
3001794d:	mov    esi,ecx
3001794f:	call   0x30017a6c
30017954:	test   BYTE PTR [ebp+0x8],0x1
30017958:	je     0x30017962
3001795a:	push   esi
3001795b:	call   DWORD PTR ds:0x300452ac
30017961:	pop    ecx
30017962:	mov    eax,esi
30017964:	pop    esi
30017965:	pop    ebp
30017966:	ret    0x4
30017969:	push   edi
3001796a:	mov    edi,ecx
3001796c:	push   DWORD PTR [edi+0x14]
3001796f:	call   DWORD PTR ds:0x300454e8
30017975:	push   DWORD PTR [edi+0x10]
30017978:	call   DWORD PTR ds:0x300454e8
3001797e:	mov    ecx,DWORD PTR [edi+0xc]
30017981:	pop    edi
30017982:	test   ecx,ecx
30017984:	jne    0x30020a5e
3001798a:	ret    
3001798b:	push   0x4
3001798d:	mov    eax,0x3003f663
30017992:	call   0x3000116a
30017997:	mov    esi,ecx
30017999:	mov    DWORD PTR [ebp-0x10],esi
3001799c:	mov    DWORD PTR [ebp-0x4],0x1
300179a3:	mov    eax,DWORD PTR [esi+0xe0]
300179a9:	test   eax,eax
300179ab:	jne    0x3001ffc1
300179b1:	mov    eax,DWORD PTR [esi+0xdc]
300179b7:	test   eax,eax
300179b9:	jne    0x3001ffcd
300179bf:	push   DWORD PTR [esi+0x614]
300179c5:	call   DWORD PTR ds:0x300454e8
300179cb:	mov    eax,DWORD PTR [esi+0xd4]
300179d1:	test   eax,eax
300179d3:	je     0x300179e4
300179d5:	push   eax
300179d6:	call   DWORD PTR ds:0x300453d4
300179dc:	and    DWORD PTR [esi+0xd4],0x0
300179e3:	pop    ecx
300179e4:	push   DWORD PTR [esi+0x4c]
300179e7:	call   DWORD PTR ds:0x300454e8
300179ed:	mov    ecx,esi
300179ef:	call   0x30017969
300179f4:	call   0x3000119d
300179f9:	ret    
300179fa:	push   0x4
300179fc:	mov    eax,0x3003e29c
30017a01:	call   0x3000116a
30017a06:	mov    esi,ecx
30017a08:	mov    DWORD PTR [ebp-0x10],esi
30017a0b:	and    DWORD PTR [ebp-0x4],0x0
30017a0f:	lea    ecx,[esi+0x67c]
30017a15:	call   0x300178b2
30017a1a:	mov    ecx,DWORD PTR [esi+0x678]
30017a20:	sub    ecx,0x10
30017a23:	call   0x30004017
30017a28:	mov    ecx,DWORD PTR [esi+0x674]
30017a2e:	sub    ecx,0x10
30017a31:	call   0x30004017
30017a36:	mov    ecx,DWORD PTR [esi+0x670]
30017a3c:	sub    ecx,0x10
30017a3f:	call   0x30004017
30017a44:	push   DWORD PTR [esi+0x66c]
30017a4a:	call   DWORD PTR ds:0x300454e8
30017a50:	lea    ecx,[esi+0x620]
30017a56:	call   0x300178e6
30017a5b:	or     DWORD PTR [ebp-0x4],0xffffffff
30017a5f:	mov    ecx,esi
30017a61:	call   0x3001798b
30017a66:	call   0x3000119d
30017a6b:	ret    
30017a6c:	push   0x4
30017a6e:	mov    eax,0x3003e10c
30017a73:	call   0x3000116a
30017a78:	mov    esi,ecx
30017a7a:	mov    DWORD PTR [ebp-0x10],esi
30017a7d:	mov    DWORD PTR [esi],0x30001000
30017a83:	mov    DWORD PTR [esi+0x4],0x30005238
30017a8a:	mov    DWORD PTR [esi+0x40],0x3000635c
30017a91:	mov    DWORD PTR [esi+0x44],0x30006344
30017a98:	mov    DWORD PTR [esi+0x48],0x30004588
30017a9f:	mov    DWORD PTR [esi+0x618],0x30001408
30017aa9:	mov    DWORD PTR [esi+0x620],0x30016950
30017ab3:	and    DWORD PTR [ebp-0x4],0x0
30017ab7:	mov    DWORD PTR [esi+0x8],0xc0000001
30017abe:	mov    ecx,DWORD PTR ds:0x300430f4
30017ac4:	mov    eax,DWORD PTR [ecx]
30017ac6:	call   DWORD PTR [eax+0x8]
30017ac9:	or     DWORD PTR [ebp-0x4],0xffffffff
30017acd:	mov    ecx,esi
30017acf:	call   0x300179fa
30017ad4:	call   0x3000119d
30017ad9:	ret    
30017ada:	jmp    DWORD PTR ds:0x300453dc
30017ae0:	jmp    DWORD PTR ds:0x30045404
30017ae6:	call   DWORD PTR ds:0x30045144
30017aec:	cmp    al,0x6
30017aee:	jb     0x30026fed
30017af4:	xor    eax,eax
30017af6:	ret    
30017af7:	jmp    DWORD PTR ds:0x300452bc
30017afd:	cmp    DWORD PTR ds:0x3004446c,0x0
30017b04:	je     0x3002711e
30017b0a:	xor    eax,eax
30017b0c:	ret    
30017b0d:	jmp    DWORD PTR ds:0x30045408
30017b13:	push   0x30016c51
30017b18:	call   0x30018824
30017b1d:	mov    eax,ds:0x30043c10
30017b22:	mov    DWORD PTR [esp],0x30043c04
30017b29:	push   DWORD PTR ds:0x30043c0c
30017b2f:	mov    ds:0x30043c04,eax
30017b34:	push   0x30043bfc
30017b39:	push   0x30043bf8
30017b3e:	push   0x30043bf4
30017b43:	call   DWORD PTR ds:0x300453e4
30017b49:	add    esp,0x14
30017b4c:	mov    ds:0x30043c00,eax
30017b51:	test   eax,eax
30017b53:	js     0x30027067
30017b59:	ret    
30017b5a:	call   DWORD PTR ds:0x300451cc
30017b60:	push   0x3001729e
30017b65:	mov    DWORD PTR ds:0x30043088,0x30004034
30017b6f:	mov    ds:0x3004308c,eax
30017b74:	mov    BYTE PTR ds:0x30043090,0x0
30017b7b:	call   0x30018824
30017b80:	pop    ecx
30017b81:	ret    
30017b82:	push   0x30016c46
30017b87:	call   0x30018824
30017b8c:	pop    ecx
30017b8d:	ret    
30017b8e:	push   0x0
30017b90:	mov    eax,0x3003d7b0
30017b95:	call   0x3000116a
30017b9a:	push   0x3004306c
30017b9f:	mov    ecx,0x3004309c
30017ba4:	call   0x30004256
30017ba9:	or     DWORD PTR [ebp-0x4],0xffffffff
30017bad:	push   0x30016c22
30017bb2:	call   0x30018824
30017bb7:	pop    ecx
30017bb8:	call   0x3000119d
30017bbd:	ret    
30017bbe:	push   0x0
30017bc0:	mov    eax,0x3003dc80
30017bc5:	call   0x3000116a
30017bca:	push   0x3004306c
30017bcf:	mov    ecx,0x30043b5c
30017bd4:	call   0x30004256
30017bd9:	or     DWORD PTR [ebp-0x4],0xffffffff
30017bdd:	push   0x30016bfe
30017be2:	call   0x30018824
30017be7:	pop    ecx
30017be8:	call   0x3000119d
30017bed:	ret    
30017bee:	push   0x30017c0c
30017bf3:	mov    ecx,0x30043b60
30017bf8:	call   0x3000437e
30017bfd:	push   0x30016bda
30017c02:	call   0x30018824
30017c07:	pop    ecx
30017c08:	ret    
30017c09:	nop
30017c0a:	nop
30017c0b:	nop
30017c0c:	dec    esi
30017c0d:	add    BYTE PTR [edi+0x0],ch
30017c10:	outs   dx,BYTE PTR ds:[esi]
30017c11:	add    BYTE PTR [ebp+0x0],ah
30017c14:	add    BYTE PTR [eax],al
30017c16:	push   0x30016bcc
30017c1b:	call   0x30018824
30017c20:	pop    ecx
30017c21:	ret    
30017c22:	push   0x30016bbe
30017c27:	call   0x30018824
30017c2c:	pop    ecx
30017c2d:	ret    
30017c2e:	push   0x30016bb0
30017c33:	call   0x30018824
30017c38:	pop    ecx
30017c39:	ret    
30017c3a:	push   0x3001725c
30017c3f:	call   0x30018824
30017c44:	pop    ecx
30017c45:	ret    
30017c46:	push   0x30016b94
30017c4b:	call   0x30018824
30017c50:	pop    ecx
30017c51:	ret    
30017c52:	and    DWORD PTR ds:0x30043b9c,0x0
30017c59:	push   0x30016b82
30017c5e:	mov    DWORD PTR ds:0x30043b98,0x0
30017c68:	call   0x30018824
30017c6d:	pop    ecx
30017c6e:	ret    
30017c6f:	or     eax,0x1
30017c72:	mov    ds:0x30043064,eax
30017c77:	xor    ebx,ebx
30017c79:	push   0xc
30017c7b:	mov    DWORD PTR [ebp-0x4],ebx
30017c7e:	call   0x30003fee
30017c83:	pop    ecx
30017c84:	test   eax,eax
30017c86:	je     0x30017cb2
30017c88:	mov    DWORD PTR [eax],ebx
30017c8a:	mov    DWORD PTR [eax+0x4],ebx
30017c8d:	mov    DWORD PTR [eax+0x8],ebx
30017c90:	push   0x30016e47
30017c95:	mov    ds:0x30043058,eax
30017c9a:	mov    WORD PTR ds:0x3004305c,bx
30017ca1:	mov    BYTE PTR ds:0x3004305e,bl
30017ca7:	call   0x30018824
30017cac:	pop    ecx
30017cad:	jmp    0x300011da
30017cb2:	mov    eax,ebx
30017cb4:	jmp    0x30017c90
30017cb6:	push   esi
30017cb7:	mov    esi,0x30043b64
30017cbc:	mov    ecx,0x30043b74
30017cc1:	mov    DWORD PTR ds:0x300430f4,esi
30017cc7:	call   0x30006d5f
30017ccc:	test   eax,eax
30017cce:	js     0x30028ec1
30017cd4:	mov    DWORD PTR ds:0x30043b68,0x24
30017cde:	push   0x30017147
30017ce3:	mov    DWORD PTR ds:0x30043b64,0x30006d14
30017ced:	mov    DWORD PTR ds:0x30043c50,esi
30017cf3:	call   0x30018824
30017cf8:	pop    ecx
30017cf9:	pop    esi
30017cfa:	ret    
30017cfb:	push   ebp
30017cfc:	mov    ebp,esp
30017cfe:	push   esi
30017cff:	mov    esi,DWORD PTR ds:0x30045178
30017d05:	push   edi
30017d06:	mov    edi,DWORD PTR [ebp+0x8]
30017d09:	push   0x30017d60
30017d0e:	push   edi
30017d0f:	call   esi
30017d11:	push   0x30017d6c
30017d16:	push   edi
30017d17:	mov    ds:0x30043b44,eax
30017d1c:	call   esi
30017d1e:	push   0x30017d80
30017d23:	push   edi
30017d24:	mov    ds:0x300430f8,eax
30017d29:	call   esi
30017d2b:	push   0x30017d90
30017d30:	push   edi
30017d31:	mov    ds:0x30043b48,eax
30017d36:	call   esi
30017d38:	push   0x30017da0
30017d3d:	push   edi
30017d3e:	mov    ds:0x30043b4c,eax
30017d43:	call   esi
30017d45:	mov    DWORD PTR ds:0x30043b54,edi
30017d4b:	pop    edi
30017d4c:	mov    ds:0x30043b50,eax
30017d51:	mov    BYTE PTR ds:0x300430fc,0x1
30017d58:	pop    esi
30017d59:	pop    ebp
30017d5a:	ret    0x4
30017d5d:	nop
30017d5e:	nop
30017d5f:	nop
30017d60:	pop    edi
30017d61:	dec    ecx
30017d62:	outs   dx,BYTE PTR ds:[esi]
30017d63:	imul   esi,DWORD PTR [eax+edx*2+0x65],0x34406672
30017d6b:	add    BYTE PTR [edi+0x50],bl
30017d6e:	gs jb  0x30017dd7
30017d71:	inc    ebx
30017d72:	outs   dx,DWORD PTR ds:[esi]
30017d73:	fs gs dec ebp
30017d76:	popa   
30017d77:	jb     0x30017de4
30017d79:	gs jb  0x30017dbc
30017d7c:	xor    DWORD PTR [edx],esi
30017d7e:	add    BYTE PTR [eax+0x496e555f],dl
30017d84:	outs   dx,BYTE PTR ds:[esi]
30017d85:	imul   esi,DWORD PTR [eax+edx*2+0x65],0x34406672
30017d8d:	add    BYTE PTR [eax+0x65425f90],dl
30017d93:	imul   ebp,DWORD PTR [bp+0x4c],0x6967676f
30017d9b:	outs   dx,BYTE PTR ds:[esi]
30017d9c:	addr16 inc eax
30017d9e:	xor    al,0x0
30017da0:	pop    edi
30017da1:	push   edi
30017da2:	jb     0x30017e0d
30017da4:	je     0x30017e0b
30017da6:	dec    esp
30017da7:	outs   dx,DWORD PTR ds:[esi]
30017da8:	addr16 inc eax
30017daa:	xor    al,0x0
30017dac:	push   ebp
30017dad:	mov    ebp,esp
30017daf:	cmp    BYTE PTR ds:0x300430fc,0x0
30017db6:	je     0x300272df
30017dbc:	cmp    DWORD PTR ds:0x30043b4c,0x0
30017dc3:	je     0x300272e9
30017dc9:	push   DWORD PTR ds:0x30043b14
30017dcf:	call   DWORD PTR ds:0x30045138
30017dd5:	pop    ebp
30017dd6:	jmp    DWORD PTR ds:0x30043b4c
30017ddc:	mov    eax,ds:0x30045058
30017de1:	mov    ds:0x30043108,eax
30017de6:	ret    
30017de7:	mov    eax,ds:0x3004507c
30017dec:	mov    ds:0x300430ac,eax
30017df1:	ret    
30017df2:	mov    eax,ds:0x30045054
30017df7:	mov    ds:0x30043678,eax
30017dfc:	ret    
30017dfd:	mov    eax,ds:0x30045008
30017e02:	mov    ds:0x30043060,eax
30017e07:	ret    
30017e08:	mov    eax,ds:0x30045004
30017e0d:	mov    ds:0x30043054,eax
30017e12:	ret    
30017e13:	mov    eax,ds:0x30045050
30017e18:	mov    ds:0x300430b0,eax
30017e1d:	ret    
30017e1e:	mov    eax,ds:0x3004500c
30017e23:	mov    ds:0x30043068,eax
30017e28:	ret    
30017e29:	mov    eax,ds:0x3004504c
30017e2e:	mov    ds:0x3004367c,eax
30017e33:	ret    
30017e34:	mov    eax,ds:0x30045080
30017e39:	mov    ds:0x300430b4,eax
30017e3e:	ret    
30017e3f:	mov    eax,ds:0x30045048
30017e44:	mov    ds:0x3004310c,eax
30017e49:	ret    
30017e4a:	mov    eax,ds:0x30045074
30017e4f:	mov    ds:0x300430a4,eax
30017e54:	ret    
30017e55:	mov    eax,ds:0x30045044
30017e5a:	mov    ds:0x30043680,eax
30017e5f:	ret    
30017e60:	mov    eax,ds:0x30045040
30017e65:	mov    ds:0x300430a8,eax
30017e6a:	ret    
30017e6b:	mov    eax,ds:0x3004503c
30017e70:	mov    ds:0x30043684,eax
30017e75:	ret    
30017e76:	mov    eax,ds:0x30045078
30017e7b:	mov    ds:0x300430a0,eax
30017e80:	ret    
30017e81:	push   0x30017e9c
30017e86:	mov    ecx,0x30043b94
30017e8b:	call   0x3000437e
30017e90:	push   0x30016b78
30017e95:	call   0x30018824
30017e9a:	pop    ecx
30017e9b:	ret    
30017e9c:	add    BYTE PTR cs:[eax+eax*1+0x6e],ch
30017ea1:	add    BYTE PTR [ebx+0x0],ch
30017ea4:	add    BYTE PTR [eax],al
30017ea6:	push   0x30015e88
30017eab:	mov    ecx,0x30043100
30017eb0:	call   0x3000437e
30017eb5:	push   0x30016b6e
30017eba:	call   0x30018824
30017ebf:	pop    ecx
30017ec0:	ret    
30017ec1:	push   ebp
30017ec2:	mov    ebp,esp
30017ec4:	push   esi
30017ec5:	mov    esi,ecx
30017ec7:	push   edi
30017ec8:	mov    edi,edx
30017eca:	test   esi,esi
30017ecc:	je     0x30021481
30017ed2:	push   ebx
30017ed3:	mov    ebx,0x100
30017ed8:	push   ebx
30017ed9:	xor    eax,eax
30017edb:	push   eax
30017edc:	push   esi
30017edd:	call   0x300011b1
30017ee2:	add    esp,0xc
30017ee5:	mov    DWORD PTR [esi],ebx
30017ee7:	mov    DWORD PTR [esi+0x8],edi
30017eea:	call   DWORD PTR ds:0x30045260
30017ef0:	mov    ecx,DWORD PTR [esi+0x8]
30017ef3:	mov    DWORD PTR [esi+0xe8],eax
30017ef9:	lea    edx,[ecx+0x2]
30017efc:	xor    edi,edi
30017efe:	pop    ebx
30017eff:	mov    ax,WORD PTR [ecx]
30017f02:	add    ecx,0x2
30017f05:	cmp    ax,di
30017f08:	jne    0x30017eff
30017f0a:	sub    ecx,edx
30017f0c:	sar    ecx,1
30017f0e:	lea    edi,[ecx+0x1]
30017f11:	lea    eax,[edi+edi*1]
30017f14:	push   eax
30017f15:	call   0x30004011
30017f1a:	pop    ecx
30017f1b:	mov    DWORD PTR [esi+0x20],eax
30017f1e:	test   eax,eax
30017f20:	je     0x3002148b
30017f26:	push   DWORD PTR [esi+0x8]
30017f29:	push   edi
30017f2a:	push   eax
30017f2b:	call   0x30006ce1
30017f30:	mov    eax,DWORD PTR [ebp+0x8]
30017f33:	mov    DWORD PTR [esi+0xc],eax
30017f36:	mov    eax,DWORD PTR [ebp+0xc]
30017f39:	add    esp,0xc
30017f3c:	mov    DWORD PTR [esi+0xf4],eax
30017f42:	xor    eax,eax
30017f44:	pop    edi
30017f45:	pop    esi
30017f46:	pop    ebp
30017f47:	ret    0x8
30017f4a:	xor    eax,eax
30017f4c:	jmp    0x3001868e
30017f51:	push   ebp
30017f52:	mov    ebp,esp
30017f54:	sub    esp,0x244
30017f5a:	mov    eax,ds:0x30043050
30017f5f:	xor    eax,ebp
30017f61:	mov    DWORD PTR [ebp-0x4],eax
30017f64:	push   ebx
30017f65:	push   esi
30017f66:	push   edi
30017f67:	push   0x6
30017f69:	mov    ebx,ecx
30017f6b:	pop    ecx
30017f6c:	xor    eax,eax
30017f6e:	mov    WORD PTR [ebx],ax
30017f71:	push   0x104
30017f76:	mov    esi,0x30018044
30017f7b:	lea    edi,[ebp-0x1c]
30017f7e:	lea    eax,[ebp-0x240]
30017f84:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
30017f86:	push   eax
30017f87:	xor    edi,edi
30017f89:	push   edi
30017f8a:	call   DWORD PTR ds:0x300451f8
30017f90:	add    eax,eax
30017f92:	cmp    eax,0x222
30017f97:	jae    0x30021992
30017f9d:	xor    ecx,ecx
30017f9f:	mov    WORD PTR [ebp+eax*1-0x240],cx
30017fa7:	lea    ecx,[ebp-0x240]
30017fad:	lea    edx,[ecx+0x2]
30017fb0:	mov    ax,WORD PTR [ecx]
30017fb3:	add    ecx,0x2
30017fb6:	cmp    ax,di
30017fb9:	jne    0x30017fb0
30017fbb:	sub    ecx,edx
30017fbd:	sar    ecx,1
30017fbf:	push   0x3001805c
30017fc4:	lea    esi,[ebp+ecx*2-0x248]
30017fcb:	push   esi
30017fcc:	call   0x30009275
30017fd1:	pop    ecx
30017fd2:	pop    ecx
30017fd3:	test   eax,eax
30017fd5:	jne    0x30021920
30017fdb:	lea    ecx,[ebp-0x240]
30017fe1:	lea    edx,[ecx+0x2]
30017fe4:	mov    ax,WORD PTR [ecx]
30017fe7:	add    ecx,0x2
30017fea:	cmp    ax,di
30017fed:	jne    0x30017fe4
30017fef:	lea    eax,[ebp-0x1c]
30017ff2:	push   eax
30017ff3:	sub    ecx,edx
30017ff5:	sar    ecx,1
30017ff7:	mov    eax,0x115
30017ffc:	sub    eax,ecx
30017ffe:	push   eax
30017fff:	push   esi
30018000:	call   0x30006ce1
30018005:	push   0x30005b84
3001800a:	lea    eax,[ebp-0x240]
30018010:	push   eax
30018011:	lea    eax,[ebp-0x244]
30018017:	push   eax
30018018:	mov    DWORD PTR [ebp-0x244],edi
3001801e:	call   DWORD PTR ds:0x3004535c
30018024:	add    esp,0x18
30018027:	cmp    DWORD PTR [ebp-0x244],edi
3001802d:	jne    0x3002192a
30018033:	mov    ecx,DWORD PTR [ebp-0x4]
30018036:	pop    edi
30018037:	pop    esi
30018038:	xor    ecx,ebp
3001803a:	pop    ebx
3001803b:	call   0x3000115c
30018040:	leave  
30018041:	ret    
30018042:	nop
30018043:	nop
30018044:	add    BYTE PTR cs:[edx+0x0],dh
30018048:	outs   dx,DWORD PTR ds:[esi]
30018049:	add    BYTE PTR [edi+0x0],ch
3001804c:	je     0x3001804e
3001804e:	jae    0x30018050
30018050:	jne    0x30018052
30018052:	data16 add BYTE PTR [esi+0x0],ah
30018056:	imul   eax,DWORD PTR [eax],0x78
3001805c:	add    BYTE PTR cs:[ebp+0x0],ah
30018060:	js     0x30018062
30018062:	add    BYTE PTR gs:[eax],al
30018065:	add    BYTE PTR [ebp-0x75],dl
30018068:	in     al,dx
30018069:	push   esi
3001806a:	push   DWORD PTR [ebp+0x8]
3001806d:	mov    esi,ecx
3001806f:	call   0x30018e1a
30018074:	mov    eax,esi
30018076:	pop    esi
30018077:	pop    ebp
30018078:	ret    0x4
3001807b:	mov    eax,DWORD PTR [ebp+0x8]
3001807e:	test   eax,eax
30018080:	je     0x3001808c
30018082:	mov    ds:0x30043094,eax
30018087:	jmp    0x3000462e
3001808c:	xor    eax,eax
3001808e:	jmp    0x3000463e
30018093:	push   0x223
30018098:	call   0x300072a1
3001809d:	ret    
3001809e:	push   0x221
300180a3:	call   0x300072a1
300180a8:	ret    
300180a9:	push   0x222
300180ae:	call   0x300072a1
300180b3:	ret    
300180b4:	jmp    DWORD PTR ds:0x30045660
300180ba:	jmp    DWORD PTR ds:0x3004565c
300180c0:	jmp    DWORD PTR ds:0x30045664
300180c6:	test   ecx,ecx
300180c8:	je     0x30021495
300180ce:	mov    eax,DWORD PTR [ecx+0x24]
300180d1:	xor    edx,edx
300180d3:	test   eax,eax
300180d5:	jne    0x3001d87e
300180db:	cmp    DWORD PTR [ecx+0x28],edx
300180de:	jne    0x3001d88a
300180e4:	cmp    DWORD PTR [ecx+0x2c],edx
300180e7:	jne    0x3001d88a
300180ed:	cmp    DWORD PTR [ecx+0x30],edx
300180f0:	jne    0x3001d88a
300180f6:	cmp    DWORD PTR [ecx+0x34],edx
300180f9:	jne    0x3001d88a
300180ff:	cmp    DWORD PTR [ecx+0x38],edx
30018102:	jne    0x3001d88a
30018108:	cmp    DWORD PTR [ecx+0xfc],edx
3001810e:	jne    0x3001d88a
30018114:	cmp    DWORD PTR [ecx+0x3c],edx
30018117:	jne    0x3001d88a
3001811d:	cmp    DWORD PTR [ecx+0x4c],edx
30018120:	jne    0x3001d88a
30018126:	cmp    DWORD PTR [ecx+0x50],edx
30018129:	jne    0x3001d88a
3001812f:	test   eax,eax
30018131:	jne    0x3001d87e
30018137:	ret    
30018138:	push   esi
30018139:	push   edi
3001813a:	push   0x104
3001813f:	mov    edi,ecx
30018141:	call   0x30004286
30018146:	push   0x103
3001814b:	push   eax
3001814c:	push   0x0
3001814e:	call   DWORD PTR ds:0x30045174
30018154:	push   eax
30018155:	call   DWORD PTR ds:0x300451f8
3001815b:	push   0xffffffff
3001815d:	mov    ecx,edi
3001815f:	mov    esi,eax
30018161:	call   0x30006c8c
30018166:	test   esi,esi
30018168:	mov    esi,DWORD PTR ds:0x30045160
3001816e:	je     0x3001817c
30018170:	call   esi
30018172:	cmp    eax,0x7a
30018175:	je     0x3001817c
30018177:	xor    eax,eax
30018179:	pop    edi
3001817a:	pop    esi
3001817b:	ret    
3001817c:	call   esi
3001817e:	jmp    0x300246aa
30018183:	push   ebp
30018184:	mov    ebp,esp
30018186:	push   ecx
30018187:	push   ecx
30018188:	push   edi
30018189:	mov    edi,ecx
3001818b:	mov    eax,DWORD PTR [edi]
3001818d:	cmp    DWORD PTR [eax-0xc],0x0
30018191:	je     0x30024678
30018197:	push   ebx
30018198:	push   esi
30018199:	lea    ecx,[ebp-0x8]
3001819c:	call   0x300051c8
300181a1:	push   0x105
300181a6:	lea    ecx,[ebp-0x8]
300181a9:	call   0x30004286
300181ae:	mov    ebx,0x104
300181b3:	push   ebx
300181b4:	push   eax
300181b5:	push   DWORD PTR [edi]
300181b7:	call   DWORD PTR ds:0x300450f0
300181bd:	push   0xffffffff
300181bf:	lea    ecx,[ebp-0x8]
300181c2:	mov    esi,eax
300181c4:	call   0x30006c8c
300181c9:	test   esi,esi
300181cb:	je     0x30024682
300181d1:	cmp    esi,ebx
300181d3:	ja     0x300246a0
300181d9:	push   DWORD PTR [ebp-0x8]
300181dc:	lea    ecx,[ebp-0x4]
300181df:	call   0x300089ae
300181e4:	lea    ecx,[ebp-0x4]
300181e7:	call   0x30018873
300181ec:	mov    esi,eax
300181ee:	test   esi,esi
300181f0:	js     0x30018226
300181f2:	push   DWORD PTR [ebp-0x4]
300181f5:	call   DWORD PTR ds:0x3004562c
300181fb:	test   eax,eax
300181fd:	je     0x30018219
300181ff:	push   ebx
30018200:	lea    ecx,[ebp-0x4]
30018203:	call   0x30004286
30018208:	push   eax
30018209:	call   DWORD PTR ds:0x30045630
3001820f:	push   0xffffffff
30018211:	lea    ecx,[ebp-0x4]
30018214:	call   0x30006c8c
30018219:	lea    eax,[ebp-0x4]
3001821c:	push   eax
3001821d:	mov    ecx,edi
3001821f:	call   0x300014c1
30018224:	xor    esi,esi
30018226:	lea    ecx,[ebp-0x4]
30018229:	call   0x300051a4
3001822e:	lea    ecx,[ebp-0x8]
30018231:	call   0x300051a4
30018236:	mov    eax,esi
30018238:	pop    esi
30018239:	pop    ebx
3001823a:	pop    edi
3001823b:	leave  
3001823c:	ret    
3001823d:	push   esi
3001823e:	mov    esi,ecx
30018240:	mov    eax,DWORD PTR [esi+0x10]
30018243:	shr    eax,0x2
30018246:	test   al,0x1
30018248:	jne    0x30022340
3001824e:	pop    esi
3001824f:	jmp    DWORD PTR ds:0x300451a4
30018255:	cmp    BYTE PTR [ecx],0x0
30018258:	jne    0x30028257
3001825e:	xor    eax,eax
30018260:	inc    eax
30018261:	ret    
30018262:	xor    eax,eax
30018264:	cmp    BYTE PTR [ecx],al
30018266:	sete   al
30018269:	ret    
3001826a:	mov    eax,DWORD PTR [ecx+0x4]
3001826d:	mov    eax,DWORD PTR [eax+0xc4]
30018273:	ret    
30018274:	push   ebp
30018275:	mov    ebp,esp
30018277:	sub    esp,0x234
3001827d:	mov    eax,ds:0x30043050
30018282:	xor    eax,ebp
30018284:	mov    DWORD PTR [ebp-0x4],eax
30018287:	push   ebx
30018288:	push   esi
30018289:	push   edi
3001828a:	mov    esi,0x300071f8
3001828f:	lea    edi,[ebp-0x220]
30018295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30018296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30018297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30018298:	xor    ebx,ebx
3001829a:	inc    ebx
3001829b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001829c:	mov    DWORD PTR [ebp-0x224],ecx
300182a2:	xor    edi,edi
300182a4:	push   0x0
300182a6:	call   DWORD PTR ds:0x300454c0
300182ac:	mov    esi,eax
300182ae:	test   esi,esi
300182b0:	js     0x3002149b
300182b6:	mov    eax,DWORD PTR [ebp-0x224]
300182bc:	test   eax,eax
300182be:	je     0x30018381
300182c4:	lea    ecx,[ebp-0x224]
300182ca:	push   ecx
300182cb:	push   0x20019
300182d0:	push   0x0
300182d2:	push   eax
300182d3:	push   0x80000002
300182d8:	call   DWORD PTR ds:0x30045008
300182de:	test   eax,eax
300182e0:	jne    0x30018381
300182e6:	mov    edi,DWORD PTR ds:0x3004500c
300182ec:	lea    eax,[ebp-0x230]
300182f2:	push   eax
300182f3:	lea    eax,[ebp-0x22c]
300182f9:	push   eax
300182fa:	lea    eax,[ebp-0x228]
30018300:	push   eax
30018301:	push   0x0
30018303:	push   0x30018420
30018308:	push   DWORD PTR [ebp-0x224]
3001830e:	mov    DWORD PTR [ebp-0x230],0x4
30018318:	call   edi
3001831a:	test   eax,eax
3001831c:	je     0x300214ab
30018322:	lea    eax,[ebp-0x234]
30018328:	push   eax
30018329:	lea    eax,[ebp-0x210]
3001832f:	push   eax
30018330:	lea    eax,[ebp-0x228]
30018336:	push   eax
30018337:	push   0x0
30018339:	push   0x30018440
3001833e:	push   DWORD PTR [ebp-0x224]
30018344:	mov    DWORD PTR [ebp-0x234],0x208
3001834e:	call   edi
30018350:	test   eax,eax
30018352:	jne    0x30018371
30018354:	cmp    DWORD PTR [ebp-0x228],0x1
3001835b:	jne    0x30018371
3001835d:	lea    eax,[ebp-0x220]
30018363:	push   eax
30018364:	lea    eax,[ebp-0x210]
3001836a:	push   eax
3001836b:	call   DWORD PTR ds:0x30045498
30018371:	push   DWORD PTR [ebp-0x224]
30018377:	call   DWORD PTR ds:0x30045004
3001837d:	test   ebx,ebx
3001837f:	je     0x300183f3
30018381:	xor    ebx,ebx
30018383:	lea    edx,[ebp-0x220]
30018389:	mov    ecx,ebx
3001838b:	mov    esi,0x300071f8
30018390:	mov    eax,DWORD PTR [edx+ecx*4]
30018393:	cmp    eax,DWORD PTR [esi+ecx*4]
30018396:	je     0x300214c8
3001839c:	push   ebx
3001839d:	push   0x8
3001839f:	push   ebx
300183a0:	push   ebx
300183a1:	push   ebx
300183a2:	push   ebx
300183a3:	push   ebx
300183a4:	push   0xffffffff
300183a6:	lea    eax,[ebp-0x220]
300183ac:	push   eax
300183ad:	call   DWORD PTR ds:0x300454bc
300183b3:	mov    esi,eax
300183b5:	lea    eax,[ebp-0x224]
300183bb:	push   eax
300183bc:	push   0x3001845c
300183c1:	push   0x1
300183c3:	push   ebx
300183c4:	push   0x30018410
300183c9:	call   DWORD PTR ds:0x30045494
300183cf:	test   eax,eax
300183d1:	js     0x300183f3
300183d3:	mov    ecx,DWORD PTR [ebp-0x224]
300183d9:	test   ecx,ecx
300183db:	je     0x300183f3
300183dd:	mov    eax,DWORD PTR [ecx]
300183df:	push   0x2
300183e1:	push   0x1
300183e3:	push   ecx
300183e4:	call   DWORD PTR [eax+0xc]
300183e7:	mov    eax,DWORD PTR [ebp-0x224]
300183ed:	push   eax
300183ee:	mov    ecx,DWORD PTR [eax]
300183f0:	call   DWORD PTR [ecx+0x8]
300183f3:	mov    ecx,DWORD PTR [ebp-0x4]
300183f6:	pop    edi
300183f7:	mov    eax,esi
300183f9:	pop    esi
300183fa:	xor    ecx,ebp
300183fc:	pop    ebx
300183fd:	call   0x3000115c
30018402:	leave  
30018403:	ret    
30018404:	inc    edi
30018405:	cmp    edi,0xf
30018408:	jl     0x300182a4
3001840e:	jmp    0x300183f3
30018410:	dec    ebx
30018411:	add    eax,DWORD PTR [eax]
30018413:	add    BYTE PTR [eax],al
30018415:	add    BYTE PTR [eax],al
30018417:	add    al,al
30018419:	add    BYTE PTR [eax],al
3001841b:	add    BYTE PTR [eax],al
3001841d:	add    BYTE PTR [eax],al
3001841f:	inc    esi
30018420:	inc    ebp
30018421:	add    BYTE PTR [esi+0x0],ch
30018424:	popa   
30018425:	add    BYTE PTR [edx+0x0],ah
30018428:	ins    BYTE PTR es:[edi],dx
30018429:	add    BYTE PTR [ebp+0x0],ah
3001842c:	push   ebx
3001842d:	add    BYTE PTR [ebp+0x0],ah
30018430:	arpl   WORD PTR [eax],ax
30018432:	jne    0x30018434
30018434:	jb     0x30018436
30018436:	imul   eax,DWORD PTR [eax],0x790074
3001843c:	add    BYTE PTR [eax],al
3001843e:	nop
3001843f:	nop
30018440:	push   ebx
30018441:	add    BYTE PTR [ebp+0x0],ah
30018444:	arpl   WORD PTR [eax],ax
30018446:	jne    0x30018448
30018448:	jb     0x3001844a
3001844a:	imul   eax,DWORD PTR [eax],0x790074
30018450:	inc    ecx
30018451:	add    BYTE PTR [eax+0x0],dh
30018454:	jo     0x30018456
30018456:	dec    ecx
30018457:	add    BYTE PTR [eax+eax*1+0x0],al
3001845b:	add    BYTE PTR [ebx+0x1],bl
3001845e:	add    BYTE PTR [eax],al
30018460:	add    BYTE PTR [eax],al
30018462:	add    BYTE PTR [eax],al
30018464:	rol    BYTE PTR [eax],0x0
30018467:	add    BYTE PTR [eax],al
30018469:	add    BYTE PTR [eax],al
3001846b:	inc    esi
3001846c:	push   eax
3001846d:	add    BYTE PTR [ebp+0x0],ah
30018470:	jb     0x30018472
30018472:	data16 add BYTE PTR [edi+0x0],ch
30018476:	jb     0x30018478
30018478:	ins    DWORD PTR es:[edi],dx
30018479:	add    BYTE PTR [ecx+0x0],ah
3001847c:	outs   dx,BYTE PTR ds:[esi]
3001847d:	add    BYTE PTR [ebx+0x0],ah
30018480:	add    BYTE PTR gs:[eax],al
30018483:	add    BYTE PTR [eax+eax*1+0x69],al
30018487:	add    BYTE PTR [ebx+0x0],dh
3001848a:	popa   
3001848b:	add    BYTE PTR [edx+0x0],ah
3001848e:	ins    BYTE PTR es:[edi],dx
3001848f:	add    BYTE PTR [ebp+0x0],ah
30018492:	add    BYTE PTR [eax],al
30018494:	nop
30018495:	nop
30018496:	nop
30018497:	nop
30018498:	dec    ebp
30018499:	add    BYTE PTR [ecx+0x0],ch
3001849c:	arpl   WORD PTR [eax],ax
3001849e:	jb     0x300184a0
300184a0:	outs   dx,DWORD PTR ds:[esi]
300184a1:	add    BYTE PTR [ebx+0x0],dh
300184a4:	outs   dx,DWORD PTR ds:[esi]
300184a5:	add    BYTE PTR [esi+0x0],ah
300184a8:	je     0x300184aa
300184aa:	add    BYTE PTR cs:[ecx+0x0],cl
300184ae:	outs   dx,BYTE PTR ds:[esi]
300184af:	add    BYTE PTR [eax+eax*1+0x65],dh
300184b3:	add    BYTE PTR [edx+0x0],dh
300184b6:	outs   dx,BYTE PTR ds:[esi]
300184b7:	add    BYTE PTR [ecx+0x0],ah
300184ba:	ins    BYTE PTR es:[edi],dx
300184bb:	add    BYTE PTR [esi],ch
300184bd:	add    BYTE PTR [eax+0x0],dl
300184c0:	add    BYTE PTR gs:[edx+0x0],dh
300184c4:	data16 add BYTE PTR [edi+0x0],ch
300184c8:	jb     0x300184ca
300184ca:	ins    DWORD PTR es:[edi],dx
300184cb:	add    BYTE PTR [ecx+0x0],ah
300184ce:	outs   dx,BYTE PTR ds:[esi]
300184cf:	add    BYTE PTR [ebx+0x0],ah
300184d2:	add    BYTE PTR gs:[esi],ch
300184d5:	add    BYTE PTR [ebx+0x0],al
300184d8:	outs   dx,DWORD PTR ds:[esi]
300184d9:	add    BYTE PTR [eax+eax*1+0x65],ah
300184dd:	add    BYTE PTR [ebp+0x0],cl
300184e0:	popa   
300184e1:	add    BYTE PTR [edx+0x0],dh
300184e4:	imul   eax,DWORD PTR [eax],0x65
300184e7:	add    BYTE PTR [edx+0x0],dh
300184ea:	jae    0x300184ec
300184ec:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
300184f1:	add    BYTE PTR [eax+eax*1+0x0],ch
300184f5:	add    BYTE PTR [eax+0x53005690],dl
300184fb:	add    BYTE PTR [eax+eax*1+0x6f],cl
300184ff:	add    BYTE PTR [edi+0x0],ah
30018502:	inc    ecx
30018503:	add    BYTE PTR [ebx+0x0],ah
30018506:	je     0x30018508
30018508:	imul   eax,DWORD PTR [eax],0x690076
3001850e:	je     0x30018510
30018510:	jns    0x30018512
30018512:	add    BYTE PTR [eax],al
30018514:	push   esi
30018515:	add    BYTE PTR [ecx+0x0],ch
30018518:	jae    0x3001851a
3001851a:	jne    0x3001851c
3001851c:	popa   
3001851d:	add    BYTE PTR [eax+eax*1+0x53],ch
30018521:	add    BYTE PTR [eax+eax*1+0x75],dh
30018525:	add    BYTE PTR [eax+eax*1+0x69],ah
30018529:	add    BYTE PTR [edi+0x0],ch
3001852c:	add    BYTE PTR [eax],al
3001852e:	nop
3001852f:	nop
30018530:	sub    al,BYTE PTR [eax]
30018532:	add    BYTE PTR [eax],al
30018534:	pop    esp
30018535:	add    BYTE PTR [ecx+0x0],cl
30018538:	outs   dx,BYTE PTR ds:[esi]
30018539:	add    BYTE PTR [ecx+0x0],ch
3001853c:	je     0x3001853e
3001853e:	imul   eax,DWORD PTR [eax],0x6c0061
30018544:	imul   eax,DWORD PTR [eax],0x61007a
3001854a:	je     0x3001854c
3001854c:	imul   eax,DWORD PTR [eax],0x6e006f
30018552:	add    BYTE PTR [eax],al
30018554:	cmp    al,BYTE PTR [eax]
30018556:	pop    esp
30018557:	add    BYTE PTR [eax],al
30018559:	add    BYTE PTR [eax+0x73002590],dl
3001855f:	add    BYTE PTR ds:0x7300,ah
30018565:	add    BYTE PTR [ebp-0x75],dl
30018568:	in     al,dx
30018569:	push   ecx
3001856a:	push   ecx
3001856b:	push   ebx
3001856c:	mov    eax,ecx
3001856e:	push   esi
3001856f:	push   edi
30018570:	mov    DWORD PTR [ebp-0x4],edx
30018573:	mov    DWORD PTR [ebp-0x8],eax
30018576:	test   eax,eax
30018578:	je     0x30017f4a
3001857e:	test   edx,edx
30018580:	je     0x30017f4a
30018586:	mov    edi,DWORD PTR [ebp+0x8]
30018589:	test   edi,edi
3001858b:	je     0x30017f4a
30018591:	mov    esi,DWORD PTR [eax]
30018593:	movzx  eax,WORD PTR [esi]
30018596:	test   ax,ax
30018599:	je     0x30017f4a
3001859f:	push   0x20
300185a1:	pop    edi
300185a2:	push   0x9
300185a4:	pop    ecx
300185a5:	cmp    ax,di
300185a8:	je     0x3002139a
300185ae:	cmp    ax,cx
300185b1:	je     0x3002139a
300185b7:	movzx  eax,WORD PTR [esi]
300185ba:	mov    edi,DWORD PTR [ebp+0x8]
300185bd:	test   ax,ax
300185c0:	je     0x30017f4a
300185c6:	mov    ebx,DWORD PTR [ebp+0xc]
300185c9:	cmp    ebx,0x5
300185cc:	je     0x300213b7
300185d2:	cmp    eax,0x2d
300185d5:	je     0x3001e0a9
300185db:	cmp    eax,0x2f
300185de:	je     0x3001e0a9
300185e4:	mov    DWORD PTR [edi],0x3
300185ea:	cmp    ebx,0x4
300185ed:	je     0x3001e178
300185f3:	cmp    DWORD PTR [edi],ebx
300185f5:	je     0x300185ff
300185f7:	test   ebx,ebx
300185f9:	jne    0x300213e4
300185ff:	mov    edi,DWORD PTR [ebp-0x4]
30018602:	xor    ebx,ebx
30018604:	mov    edx,ebx
30018606:	mov    DWORD PTR [edi],esi
30018608:	mov    DWORD PTR [ebp+0x8],edx
3001860b:	mov    ecx,ebx
3001860d:	mov    DWORD PTR [ebp-0x4],0x5e
30018614:	movzx  eax,WORD PTR [esi]
30018617:	cmp    WORD PTR [ebp-0x4],ax
3001861b:	je     0x300213ef
30018621:	mov    DWORD PTR [ebp+0xc],0x22
30018628:	cmp    WORD PTR [ebp+0xc],ax
3001862c:	je     0x300213fe
30018632:	mov    DWORD PTR [ebp+0xc],ebx
30018635:	movzx  eax,WORD PTR [esi]
30018638:	test   ax,ax
3001863b:	je     0x30018662
3001863d:	test   edx,edx
3001863f:	jne    0x30018651
30018641:	push   0x20
30018643:	pop    ecx
30018644:	cmp    ax,cx
30018647:	je     0x30018662
30018649:	push   0x9
3001864b:	pop    ecx
3001864c:	cmp    ax,cx
3001864f:	je     0x30018662
30018651:	push   esi
30018652:	call   DWORD PTR ds:0x30045434
30018658:	mov    ecx,DWORD PTR [ebp+0xc]
3001865b:	mov    edx,DWORD PTR [ebp+0x8]
3001865e:	mov    esi,eax
30018660:	jmp    0x30018614
30018662:	push   esi
30018663:	call   DWORD PTR ds:0x30045434
30018669:	mov    ecx,DWORD PTR [ebp-0x8]
3001866c:	push   0x5e
3001866e:	mov    DWORD PTR [ecx],eax
30018670:	xor    eax,eax
30018672:	mov    WORD PTR [esi],ax
30018675:	pop    eax
30018676:	push   eax
30018677:	push   DWORD PTR [edi]
30018679:	call   DWORD PTR ds:0x30045348
3001867f:	pop    ecx
30018680:	pop    ecx
30018681:	mov    edi,eax
30018683:	test   edi,edi
30018685:	jne    0x3002142f
3001868b:	xor    eax,eax
3001868d:	inc    eax
3001868e:	pop    edi
3001868f:	pop    esi
30018690:	pop    ebx
30018691:	leave  
30018692:	ret    0x8
30018695:	push   ebp
30018696:	mov    ebp,esp
30018698:	sub    esp,0x28
3001869b:	mov    DWORD PTR [ebp-0x24],ecx
3001869e:	test   edx,edx
300186a0:	je     0x3002126f
300186a6:	mov    eax,DWORD PTR [ebp+0x8]
300186a9:	test   eax,eax
300186ab:	je     0x3001e15a
300186b1:	mov    ecx,DWORD PTR [ebp+0xc]
300186b4:	test   ecx,ecx
300186b6:	je     0x3001e15a
300186bc:	push   ebx
300186bd:	push   esi
300186be:	xor    esi,esi
300186c0:	lea    ebx,[ebp-0x24]
300186c3:	push   edi
300186c4:	mov    DWORD PTR [ebp-0x1c],ebx
300186c7:	cmp    DWORD PTR [eax],esi
300186c9:	je     0x300186ec
300186cb:	add    eax,0xc
300186ce:	mov    ecx,DWORD PTR [eax-0x8]
300186d1:	test   ecx,ecx
300186d3:	je     0x300186d7
300186d5:	mov    DWORD PTR [ecx],esi
300186d7:	mov    ecx,DWORD PTR [eax]
300186d9:	test   ecx,ecx
300186db:	jne    0x300187c6
300186e1:	add    eax,0x10
300186e4:	cmp    DWORD PTR [eax-0xc],esi
300186e7:	jne    0x300186ce
300186e9:	mov    ecx,DWORD PTR [ebp+0xc]
300186ec:	mov    eax,DWORD PTR [ebp+0x10]
300186ef:	test   eax,eax
300186f1:	jne    0x30021276
300186f7:	mov    eax,DWORD PTR [ebp+0x14]
300186fa:	test   eax,eax
300186fc:	je     0x30018700
300186fe:	mov    DWORD PTR [eax],esi
30018700:	mov    eax,DWORD PTR [ecx]
30018702:	mov    DWORD PTR [ebp-0x18],eax
30018705:	push   0x0
30018707:	lea    eax,[ebp-0x14]
3001870a:	mov    DWORD PTR [ebp-0x20],edx
3001870d:	mov    ebx,esi
3001870f:	push   eax
30018710:	lea    edx,[ebp-0x4]
30018713:	lea    ecx,[ebp-0x20]
30018716:	mov    edi,esi
30018718:	mov    DWORD PTR [ebp-0x14],esi
3001871b:	mov    DWORD PTR [ebp-0x4],esi
3001871e:	mov    DWORD PTR [ebp-0x8],ebx
30018721:	call   0x30018566
30018726:	test   eax,eax
30018728:	je     0x300187bd
3001872e:	mov    eax,DWORD PTR [ebp-0x14]
30018731:	xor    ecx,ecx
30018733:	mov    DWORD PTR [ebp-0xc],ecx
30018736:	dec    eax
30018737:	je     0x3001e146
3001873d:	dec    eax
3001873e:	je     0x3001e0bd
30018744:	dec    eax
30018745:	jne    0x3002127d
3001874b:	test   ebx,ebx
3001874d:	jne    0x3001e169
30018753:	test   esi,esi
30018755:	jne    0x3001e12a
3001875b:	push   0x1c
3001875d:	call   0x30004011
30018762:	mov    esi,eax
30018764:	pop    ecx
30018765:	test   esi,esi
30018767:	je     0x3001e150
3001876d:	xor    ecx,ecx
3001876f:	or     DWORD PTR [esi+0xc],0xffffffff
30018773:	mov    DWORD PTR [esi+0x4],0x1
3001877a:	mov    DWORD PTR [esi+0x8],ecx
3001877d:	mov    DWORD PTR [esi+0x10],ecx
30018780:	mov    DWORD PTR [esi+0x14],ecx
30018783:	mov    DWORD PTR [esi+0x18],ecx
30018786:	mov    eax,DWORD PTR [ebp+0xc]
30018789:	cmp    DWORD PTR [eax],ecx
3001878b:	jne    0x3001878f
3001878d:	mov    DWORD PTR [eax],esi
3001878f:	mov    eax,DWORD PTR [ebp-0x18]
30018792:	test   eax,eax
30018794:	jne    0x3001e137
3001879a:	mov    eax,DWORD PTR [ebp-0x4]
3001879d:	mov    DWORD PTR [esi],eax
3001879f:	mov    DWORD PTR [ebp-0x18],esi
300187a2:	mov    ebx,DWORD PTR [ebp-0xc]
300187a5:	push   ebx
300187a6:	lea    eax,[ebp-0x14]
300187a9:	push   eax
300187aa:	lea    edx,[ebp-0x4]
300187ad:	lea    ecx,[ebp-0x20]
300187b0:	call   0x30018566
300187b5:	test   eax,eax
300187b7:	jne    0x3001e122
300187bd:	mov    eax,edi
300187bf:	pop    edi
300187c0:	pop    esi
300187c1:	pop    ebx
300187c2:	leave  
300187c3:	ret    0x10
300187c6:	mov    DWORD PTR [ecx],esi
300187c8:	jmp    0x300186e1
300187cd:	push   0x14
300187cf:	push   0x30018808
300187d4:	call   0x30008a54
300187d9:	push   DWORD PTR ds:0x3004446c
300187df:	mov    esi,DWORD PTR ds:0x30045194
300187e5:	call   esi
300187e7:	mov    DWORD PTR [ebp-0x1c],eax
300187ea:	cmp    eax,0xffffffff
300187ed:	jne    0x3002714e
300187f3:	push   DWORD PTR [ebp+0x8]
300187f6:	call   DWORD PTR ds:0x300452dc
300187fc:	pop    ecx
300187fd:	call   0x30008a99
30018802:	ret    
30018803:	nop
30018804:	nop
30018805:	nop
30018806:	nop
30018807:	nop
30018808:	(bad)  
30018809:	(bad)  
3001880a:	(bad)  
3001880b:	inc    DWORD PTR [eax]
3001880d:	add    BYTE PTR [eax],al
3001880f:	add    ah,cl
30018811:	(bad)  
30018812:	(bad)  
30018813:	inc    DWORD PTR [eax]
30018815:	add    BYTE PTR [eax],al
30018817:	add    dh,bh
30018819:	(bad)  
3001881a:	(bad)  
3001881b:	inc    DWORD PTR [eax]
3001881d:	add    BYTE PTR [eax],al
3001881f:	add    BYTE PTR [eax+0x55300271],bh
30018825:	mov    ebp,esp
30018827:	push   DWORD PTR [ebp+0x8]
3001882a:	call   0x300187cd
3001882f:	neg    eax
30018831:	sbb    eax,eax
30018833:	neg    eax
30018835:	pop    ecx
30018836:	dec    eax
30018837:	pop    ebp
30018838:	ret    
30018839:	push   0x3004306c
3001883e:	mov    ecx,0x30043114
30018843:	call   0x30004256
30018848:	push   0x30016ba2
3001884d:	call   0x30018824
30018852:	pop    ecx
30018853:	ret    
30018854:	push   esi
30018855:	mov    esi,ecx
30018857:	mov    eax,DWORD PTR [esi]
30018859:	push   DWORD PTR [eax-0xc]
3001885c:	call   0x30004286
30018861:	push   eax
30018862:	call   DWORD PTR ds:0x3004561c
30018868:	push   0xffffffff
3001886a:	mov    ecx,esi
3001886c:	call   0x30006c8c
30018871:	pop    esi
30018872:	ret    
30018873:	push   ebp
30018874:	mov    ebp,esp
30018876:	sub    esp,0x270
3001887c:	mov    eax,ds:0x30043050
30018881:	xor    eax,ebp
30018883:	mov    DWORD PTR [ebp-0x4],eax
30018886:	push   esi
30018887:	mov    esi,ecx
30018889:	push   edi
3001888a:	mov    eax,DWORD PTR [esi]
3001888c:	xor    edi,edi
3001888e:	cmp    DWORD PTR [eax-0xc],edi
30018891:	je     0x30024644
30018897:	push   0x30018a90
3001889c:	push   eax
3001889d:	call   DWORD PTR ds:0x30045354
300188a3:	pop    ecx
300188a4:	pop    ecx
300188a5:	test   eax,eax
300188a7:	jne    0x3002464e
300188ad:	push   ebx
300188ae:	lea    ecx,[ebp-0x26c]
300188b4:	call   0x300051c8
300188b9:	lea    ecx,[ebp-0x268]
300188bf:	call   0x300051c8
300188c4:	push   esi
300188c5:	lea    ecx,[ebp-0x26c]
300188cb:	call   0x300014c1
300188d0:	push   esi
300188d1:	lea    ecx,[ebp-0x268]
300188d7:	call   0x300014c1
300188dc:	lea    ecx,[ebp-0x26c]
300188e2:	call   0x300089c3
300188e7:	test   eax,eax
300188e9:	je     0x30018a96
300188ef:	push   0x1
300188f1:	lea    eax,[ebp-0x264]
300188f7:	push   eax
300188f8:	lea    ecx,[ebp-0x268]
300188fe:	call   0x30009162
30018903:	push   0x30008fc4
30018908:	mov    ecx,eax
3001890a:	call   0x300091ce
3001890f:	mov    ebx,eax
30018911:	neg    ebx
30018913:	lea    ecx,[ebp-0x264]
30018919:	sbb    bl,bl
3001891b:	call   0x300051a4
30018920:	inc    bl
30018922:	jne    0x3001b1b6
30018928:	lea    ecx,[ebp-0x268]
3001892e:	call   0x30018854
30018933:	push   DWORD PTR [esi]
30018935:	call   DWORD PTR ds:0x30045618
3001893b:	test   eax,eax
3001893d:	jne    0x30018954
3001893f:	mov    dl,0x1
30018941:	lea    ecx,[ebp-0x26c]
30018947:	call   0x30018873
3001894c:	test   eax,eax
3001894e:	js     0x3002465a
30018954:	push   0x104
30018959:	lea    ecx,[ebp-0x26c]
3001895f:	call   0x30004286
30018964:	push   eax
30018965:	call   DWORD PTR ds:0x30045630
3001896b:	push   0xffffffff
3001896d:	lea    ecx,[ebp-0x26c]
30018973:	call   0x30006c8c
30018978:	mov    eax,DWORD PTR [ebp-0x268]
3001897e:	cmp    DWORD PTR [eax-0xc],edi
30018981:	je     0x30018a24
30018987:	lea    ecx,[ebp-0x260]
3001898d:	call   0x3000c07d
30018992:	lea    eax,[ebp-0x268]
30018998:	push   eax
30018999:	lea    edx,[ebp-0x26c]
3001899f:	lea    ecx,[ebp-0x264]
300189a5:	call   0x30009298
300189aa:	push   DWORD PTR [eax]
300189ac:	lea    ecx,[ebp-0x260]
300189b2:	call   0x3000c18b
300189b7:	mov    ebx,eax
300189b9:	neg    ebx
300189bb:	lea    ecx,[ebp-0x264]
300189c1:	sbb    bl,bl
300189c3:	call   0x300051a4
300189c8:	lea    ecx,[ebp-0x260]
300189ce:	inc    bl
300189d0:	jne    0x30024661
300189d6:	lea    eax,[ebp-0x270]
300189dc:	push   eax
300189dd:	call   0x3000c0ac
300189e2:	push   DWORD PTR [eax]
300189e4:	lea    ecx,[ebp-0x264]
300189ea:	call   0x300089ae
300189ef:	push   eax
300189f0:	lea    ecx,[ebp-0x268]
300189f6:	call   0x300014c1
300189fb:	lea    ecx,[ebp-0x264]
30018a01:	call   0x300051a4
30018a06:	lea    ecx,[ebp-0x270]
30018a0c:	call   0x300051a4
30018a11:	lea    ecx,[ebp-0x260]
30018a17:	call   0x3000c170
30018a1c:	lea    ecx,[ebp-0x10]
30018a1f:	call   0x300051a4
30018a24:	lea    eax,[ebp-0x268]
30018a2a:	push   eax
30018a2b:	lea    edx,[ebp-0x26c]
30018a31:	lea    ecx,[ebp-0x264]
30018a37:	call   0x30009298
30018a3c:	push   DWORD PTR [eax]
30018a3e:	lea    ecx,[ebp-0x270]
30018a44:	call   0x300089ae
30018a49:	push   eax
30018a4a:	mov    ecx,esi
30018a4c:	call   0x300014c1
30018a51:	lea    ecx,[ebp-0x270]
30018a57:	call   0x300051a4
30018a5c:	lea    ecx,[ebp-0x264]
30018a62:	call   0x300051a4
30018a67:	lea    ecx,[ebp-0x268]
30018a6d:	call   0x300051a4
30018a72:	lea    ecx,[ebp-0x26c]
30018a78:	call   0x300051a4
30018a7d:	mov    eax,edi
30018a7f:	pop    ebx
30018a80:	mov    ecx,DWORD PTR [ebp-0x4]
30018a83:	pop    edi
30018a84:	xor    ecx,ebp
30018a86:	pop    esi
30018a87:	call   0x3000115c
30018a8c:	leave  
30018a8d:	ret    
30018a8e:	nop
30018a8f:	nop
30018a90:	sub    al,BYTE PTR [eax]
30018a92:	aas    
30018a93:	add    BYTE PTR [eax],al
30018a95:	add    BYTE PTR [ebx+0x2e8ce],cl
30018a9b:	add    BYTE PTR [eax],al
30018a9d:	jmp    0x30018a67
30018a9f:	push   esi
30018aa0:	push   edi
30018aa1:	mov    edi,ecx
30018aa3:	mov    eax,DWORD PTR [edi]
30018aa5:	mov    esi,DWORD PTR [eax-0xc]
30018aa8:	push   esi
30018aa9:	call   0x30004286
30018aae:	lea    edx,[esi+0x1]
30018ab1:	push   edx
30018ab2:	push   eax
30018ab3:	call   DWORD PTR ds:0x30045374
30018ab9:	pop    ecx
30018aba:	pop    ecx
30018abb:	push   esi
30018abc:	mov    ecx,edi
30018abe:	call   0x30004147
30018ac3:	mov    eax,edi
30018ac5:	pop    edi
30018ac6:	pop    esi
30018ac7:	ret    
30018ac8:	push   ebp
30018ac9:	mov    ebp,esp
30018acb:	push   ecx
30018acc:	push   ecx
30018acd:	push   ebx
30018ace:	push   esi
30018acf:	mov    esi,ecx
30018ad1:	push   edi
30018ad2:	cmp    DWORD PTR [esi+0x4],0x0
30018ad6:	mov    DWORD PTR [ebp-0x8],esi
30018ad9:	jne    0x30022db8
30018adf:	cmp    DWORD PTR [ebp+0x8],0x0
30018ae3:	jne    0x30022de1
30018ae9:	add    esi,0x24
30018aec:	mov    ecx,esi
30018aee:	call   0x30018138
30018af3:	test   eax,eax
30018af5:	js     0x30018bd7
30018afb:	push   esi
30018afc:	lea    ecx,[ebp+0x8]
30018aff:	call   0x30004340
30018b04:	lea    ecx,[ebp+0x8]
30018b07:	call   0x30018183
30018b0c:	mov    edi,eax
30018b0e:	test   edi,edi
30018b10:	js     0x30018bcd
30018b16:	push   DWORD PTR [ebp+0x8]
30018b19:	lea    ecx,[ebp-0x4]
30018b1c:	call   0x300089ae
30018b21:	push   eax
30018b22:	mov    ecx,esi
30018b24:	call   0x300014c1
30018b29:	lea    ecx,[ebp-0x4]
30018b2c:	call   0x300051a4
30018b31:	push   DWORD PTR [esi]
30018b33:	call   DWORD PTR ds:0x3004562c
30018b39:	test   eax,eax
30018b3b:	jne    0x30022e60
30018b41:	push   DWORD PTR [esi]
30018b43:	call   DWORD PTR ds:0x30045638
30018b49:	test   eax,eax
30018b4b:	je     0x30022e60
30018b51:	lea    eax,[ebp-0x4]
30018b54:	push   eax
30018b55:	mov    ecx,esi
30018b57:	call   0x300096ac
30018b5c:	mov    ecx,eax
30018b5e:	call   0x30018a9f
30018b63:	push   0x30018bec
30018b68:	mov    ecx,eax
30018b6a:	call   0x300091ce
30018b6f:	test   eax,eax
30018b71:	lea    ecx,[ebp-0x4]
30018b74:	setne  bl
30018b77:	call   0x300051a4
30018b7c:	test   bl,bl
30018b7e:	jne    0x30022e07
30018b84:	mov    ebx,DWORD PTR [ebp-0x8]
30018b87:	lea    eax,[ebx+0x24]
30018b8a:	push   eax
30018b8b:	lea    ecx,[ebx+0x20]
30018b8e:	call   0x300014c1
30018b93:	lea    ecx,[ebx+0x20]
30018b96:	call   0x300089c3
30018b9b:	lea    eax,[ebx+0x24]
30018b9e:	lea    esi,[ebx+0x98]
30018ba4:	push   eax
30018ba5:	mov    ecx,esi
30018ba7:	call   0x300014c1
30018bac:	push   0x30009708
30018bb1:	mov    ecx,esi
30018bb3:	call   0x30018bf6
30018bb8:	test   BYTE PTR [ebx+0x10],0x20
30018bbc:	jne    0x30018bde
30018bbe:	cmp    DWORD PTR [ebx+0x18],0xffffffff
30018bc2:	je     0x30018bde
30018bc4:	mov    eax,DWORD PTR [ebx+0x34]
30018bc7:	cmp    DWORD PTR [eax-0xc],0x0
30018bcb:	jne    0x30018bde
30018bcd:	lea    ecx,[ebp+0x8]
30018bd0:	call   0x300051a4
30018bd5:	mov    eax,edi
30018bd7:	pop    edi
30018bd8:	pop    esi
30018bd9:	pop    ebx
30018bda:	leave  
30018bdb:	ret    0x4
30018bde:	mov    ecx,ebx
30018be0:	call   0x30033627
30018be5:	jmp    0x30022e40
30018bea:	nop
30018beb:	nop
30018bec:	add    BYTE PTR cs:[ebp+0x0],al
30018bf0:	pop    eax
30018bf1:	add    BYTE PTR [ebp+0x0],al
30018bf4:	add    BYTE PTR [eax],al
30018bf6:	push   ebp
30018bf7:	mov    ebp,esp
30018bf9:	push   esi
30018bfa:	push   edi
30018bfb:	push   0x104
30018c00:	mov    edi,ecx
30018c02:	call   0x30004286
30018c07:	push   DWORD PTR [ebp+0x8]
30018c0a:	push   eax
30018c0b:	call   DWORD PTR ds:0x30045628
30018c11:	push   0xffffffff
30018c13:	mov    ecx,edi
30018c15:	mov    esi,eax
30018c17:	call   0x30006c8c
30018c1c:	pop    edi
30018c1d:	mov    eax,esi
30018c1f:	pop    esi
30018c20:	pop    ebp
30018c21:	ret    0x4
30018c24:	push   ebp
30018c25:	mov    ebp,esp
30018c27:	push   ecx
30018c28:	mov    eax,DWORD PTR [ebp+0xc]
30018c2b:	push   ebx
30018c2c:	push   esi
30018c2d:	mov    esi,ecx
30018c2f:	push   edi
30018c30:	and    DWORD PTR [esi+0x10],0x0
30018c34:	lea    ebx,[esi+0x20]
30018c37:	mov    ecx,ebx
30018c39:	mov    DWORD PTR [ebp-0x4],esi
30018c3c:	mov    DWORD PTR [esi],0x300055d0
30018c42:	mov    DWORD PTR [esi+0x8],eax
30018c45:	mov    BYTE PTR [esi+0x14],0x0
30018c49:	call   0x300051c8
30018c4e:	push   DWORD PTR [ebp+0x8]
30018c51:	lea    edi,[esi+0x24]
30018c54:	mov    ecx,edi
30018c56:	call   0x300089ae
30018c5b:	add    esi,0x28
30018c5e:	mov    ecx,esi
30018c60:	call   0x300051c8
30018c65:	mov    ecx,DWORD PTR [ebp-0x4]
30018c68:	lea    ecx,[ecx+0x2c]
30018c6b:	call   0x300051c8
30018c70:	mov    ecx,DWORD PTR [ebp-0x4]
30018c73:	lea    ecx,[ecx+0x30]
30018c76:	call   0x300051c8
30018c7b:	mov    ecx,DWORD PTR [ebp-0x4]
30018c7e:	lea    ecx,[ecx+0x34]
30018c81:	call   0x300051c8
30018c86:	mov    ecx,DWORD PTR [ebp-0x4]
30018c89:	lea    ecx,[ecx+0x38]
30018c8c:	call   0x300051c8
30018c91:	mov    ecx,DWORD PTR [ebp-0x4]
30018c94:	lea    ecx,[ecx+0x3c]
30018c97:	call   0x300051c8
30018c9c:	mov    ecx,DWORD PTR [ebp-0x4]
30018c9f:	mov    eax,DWORD PTR [ebp+0x10]
30018ca2:	mov    DWORD PTR [ecx+0x40],eax
30018ca5:	add    ecx,0x44
30018ca8:	call   0x300051c8
30018cad:	mov    ecx,DWORD PTR [ebp-0x4]
30018cb0:	lea    ecx,[ecx+0x48]
30018cb3:	call   0x300051c8
30018cb8:	mov    ecx,DWORD PTR [ebp-0x4]
30018cbb:	lea    ecx,[ecx+0x4c]
30018cbe:	call   0x300051c8
30018cc3:	mov    ecx,DWORD PTR [ebp-0x4]
30018cc6:	lea    ecx,[ecx+0x50]
30018cc9:	call   0x300051c8
30018cce:	push   edi
30018ccf:	mov    ecx,esi
30018cd1:	call   0x300014c1
30018cd6:	push   0x300095a8
30018cdb:	mov    ecx,esi
30018cdd:	call   0x30018bf6
30018ce2:	push   edi
30018ce3:	mov    ecx,ebx
30018ce5:	call   0x300014c1
30018cea:	mov    ecx,ebx
30018cec:	call   0x300089c3
30018cf1:	mov    eax,DWORD PTR [ebp-0x4]
30018cf4:	pop    edi
30018cf5:	and    DWORD PTR [eax+0x18],0x0
30018cf9:	and    DWORD PTR [eax+0x1c],0x0
30018cfd:	pop    esi
30018cfe:	pop    ebx
30018cff:	leave  
30018d00:	ret    0xc
30018d03:	push   ebp
30018d04:	mov    ebp,esp
30018d06:	push   ebx
30018d07:	push   esi
30018d08:	push   DWORD PTR [ebp+0x14]
30018d0b:	mov    esi,ecx
30018d0d:	push   DWORD PTR [ebp+0xc]
30018d10:	push   DWORD PTR [ebp+0x8]
30018d13:	call   0x30018c24
30018d18:	push   DWORD PTR [ebp+0x10]
30018d1b:	lea    ecx,[esi+0x54]
30018d1e:	mov    DWORD PTR [esi],0x30005540
30018d24:	call   0x3000437e
30018d29:	lea    ecx,[esi+0x58]
30018d2c:	call   0x300051c8
30018d31:	xor    ebx,ebx
30018d33:	mov    DWORD PTR [esi+0x5c],0x300167e4
30018d3a:	mov    DWORD PTR [esi+0x60],ebx
30018d3d:	mov    WORD PTR [esi+0x64],bx
30018d41:	mov    WORD PTR [esi+0x68],bx
30018d45:	lea    ecx,[esi+0x74]
30018d48:	mov    DWORD PTR [esi+0x6c],0x300167e8
30018d4f:	mov    DWORD PTR [esi+0x70],ebx
30018d52:	call   0x300051c8
30018d57:	mov    BYTE PTR [esi+0x78],bl
30018d5a:	mov    DWORD PTR [esi+0x7c],ebx
30018d5d:	mov    eax,esi
30018d5f:	pop    esi
30018d60:	pop    ebx
30018d61:	pop    ebp
30018d62:	ret    0x10
30018d65:	push   ebp
30018d66:	mov    ebp,esp
30018d68:	sub    esp,0xc
30018d6b:	mov    eax,DWORD PTR [ebp+0x14]
30018d6e:	and    DWORD PTR [ebp-0x8],0x0
30018d72:	and    DWORD PTR [ebp-0x4],0x0
30018d76:	xor    ecx,ecx
30018d78:	mov    WORD PTR [eax],cx
30018d7b:	mov    eax,DWORD PTR [ebp+0x18]
30018d7e:	push   ebx
30018d7f:	mov    WORD PTR [eax],cx
30018d82:	mov    eax,DWORD PTR [ebp+0x10]
30018d85:	push   esi
30018d86:	mov    WORD PTR [eax],cx
30018d89:	mov    eax,DWORD PTR [ebp+0xc]
30018d8c:	push   edi
30018d8d:	mov    WORD PTR [eax],cx
30018d90:	lea    eax,[ebp-0x8]
30018d93:	push   eax
30018d94:	push   DWORD PTR [ebp+0x8]
30018d97:	xor    ebx,ebx
30018d99:	inc    ebx
30018d9a:	call   0x300180b4
30018d9f:	mov    edi,eax
30018da1:	test   edi,edi
30018da3:	je     0x30018e11
30018da5:	push   edi
30018da6:	call   DWORD PTR ds:0x300454a0
30018dac:	mov    esi,eax
30018dae:	test   esi,esi
30018db0:	je     0x300283a1
30018db6:	push   esi
30018db7:	push   edi
30018db8:	push   0x0
30018dba:	push   DWORD PTR [ebp+0x8]
30018dbd:	call   0x300180ba
30018dc2:	test   eax,eax
30018dc4:	je     0x30018e0a
30018dc6:	lea    eax,[ebp-0xc]
30018dc9:	push   eax
30018dca:	lea    eax,[ebp-0x4]
30018dcd:	push   eax
30018dce:	push   0x30008fc4
30018dd3:	push   esi
30018dd4:	call   0x300180c0
30018dd9:	mov    ecx,DWORD PTR [ebp-0x4]
30018ddc:	test   ecx,ecx
30018dde:	je     0x30018e0a
30018de0:	mov    ax,WORD PTR [ecx+0xa]
30018de4:	mov    edx,DWORD PTR [ebp+0xc]
30018de7:	xor    ebx,ebx
30018de9:	mov    WORD PTR [edx],ax
30018dec:	mov    ax,WORD PTR [ecx+0x8]
30018df0:	mov    edx,DWORD PTR [ebp+0x10]
30018df3:	mov    WORD PTR [edx],ax
30018df6:	mov    ax,WORD PTR [ecx+0xe]
30018dfa:	mov    edx,DWORD PTR [ebp+0x14]
30018dfd:	mov    WORD PTR [edx],ax
30018e00:	mov    ax,WORD PTR [ecx+0xc]
30018e04:	mov    ecx,DWORD PTR [ebp+0x18]
30018e07:	mov    WORD PTR [ecx],ax
30018e0a:	push   esi
30018e0b:	call   DWORD PTR ds:0x300454b4
30018e11:	mov    eax,ebx
30018e13:	pop    edi
30018e14:	pop    esi
30018e15:	pop    ebx
30018e16:	leave  
30018e17:	ret    0x14
30018e1a:	push   0x22c
30018e1f:	mov    eax,0x3003cdaf
30018e24:	call   0x300045c8
30018e29:	mov    eax,DWORD PTR [ebp+0x8]
30018e2c:	push   eax
30018e2d:	call   0x30004615
30018e32:	test   eax,eax
30018e34:	je     0x300190d2
30018e3a:	push   0x3004306c
30018e3f:	lea    ecx,[ebp-0x21c]
30018e45:	call   0x30004256
30018e4a:	mov    DWORD PTR [ebp-0x4],0x1
30018e51:	mov    esi,DWORD PTR ds:0x3004513c
30018e57:	xor    ebx,ebx
30018e59:	push   ebx
30018e5a:	call   esi
30018e5c:	mov    edi,0x30018514
30018e61:	cmp    eax,0x30000000
30018e66:	jne    0x300277ed
30018e6c:	push   0x300190dc
30018e71:	push   0x300190f8
30018e76:	lea    eax,[ebp-0x21c]
30018e7c:	push   0x30019134
30018e81:	push   eax
30018e82:	call   0x30005153
30018e87:	add    esp,0x10
30018e8a:	push   DWORD PTR [ebp-0x21c]
30018e90:	push   edi
30018e91:	push   0x3
30018e93:	call   0x300046d1
30018e98:	mov    esi,0x30019154
30018e9d:	push   esi
30018e9e:	call   0x300042e4
30018ea3:	pop    ecx
30018ea4:	push   eax
30018ea5:	push   esi
30018ea6:	lea    ecx,[ebp-0x21c]
30018eac:	call   0x3000416f
30018eb1:	call   0x30007312
30018eb6:	test   eax,eax
30018eb8:	je     0x30018ed3
30018eba:	mov    esi,0x30019184
30018ebf:	push   esi
30018ec0:	call   0x300042e4
30018ec5:	pop    ecx
30018ec6:	push   eax
30018ec7:	push   esi
30018ec8:	lea    ecx,[ebp-0x21c]
30018ece:	call   0x30008b64
30018ed3:	call   0x30018093
30018ed8:	test   eax,eax
30018eda:	jne    0x300278de
30018ee0:	call   0x3001809e
30018ee5:	test   eax,eax
30018ee7:	je     0x30018f02
30018ee9:	mov    esi,0x300191a4
30018eee:	push   esi
30018eef:	call   0x300042e4
30018ef4:	pop    ecx
30018ef5:	push   eax
30018ef6:	push   esi
30018ef7:	lea    ecx,[ebp-0x21c]
30018efd:	call   0x30008b64
30018f02:	call   0x300180a9
30018f07:	test   eax,eax
30018f09:	jne    0x300278fc
30018f0f:	push   DWORD PTR [ebp-0x21c]
30018f15:	push   edi
30018f16:	push   0x3
30018f18:	call   0x300046d1
30018f1d:	mov    esi,0x300191b4
30018f22:	push   esi
30018f23:	call   0x300042e4
30018f28:	pop    ecx
30018f29:	push   eax
30018f2a:	push   esi
30018f2b:	lea    ecx,[ebp-0x21c]
30018f31:	call   0x3000416f
30018f36:	call   DWORD PTR ds:0x300450c8
30018f3c:	xor    esi,esi
30018f3e:	mov    edx,eax
30018f40:	inc    esi
30018f41:	mov    DWORD PTR [ebp-0x22c],edx
30018f47:	mov    DWORD PTR [ebp-0x228],esi
30018f4d:	xor    eax,eax
30018f4f:	inc    eax
30018f50:	mov    ecx,ebx
30018f52:	shl    eax,cl
30018f54:	test   edx,eax
30018f56:	jne    0x300192e6
30018f5c:	inc    ebx
30018f5d:	cmp    ebx,0x1a
30018f60:	jl     0x30018f4d
30018f62:	push   DWORD PTR [ebp-0x21c]
30018f68:	mov    ebx,0x30018514
30018f6d:	push   ebx
30018f6e:	push   0x3
30018f70:	call   0x300046d1
30018f75:	lea    eax,[ebp-0x220]
30018f7b:	push   eax
30018f7c:	lea    eax,[ebp-0x224]
30018f82:	push   eax
30018f83:	lea    eax,[ebp-0x228]
30018f89:	push   eax
30018f8a:	lea    eax,[ebp-0x22c]
30018f90:	push   eax
30018f91:	push   0x300191e4
30018f96:	call   0x30018d65
30018f9b:	test   eax,eax
30018f9d:	jne    0x3002791a
30018fa3:	movzx  eax,WORD PTR [ebp-0x220]
30018faa:	push   eax
30018fab:	movzx  eax,WORD PTR [ebp-0x224]
30018fb2:	push   eax
30018fb3:	movzx  eax,WORD PTR [ebp-0x228]
30018fba:	push   eax
30018fbb:	movzx  eax,WORD PTR [ebp-0x22c]
30018fc2:	push   eax
30018fc3:	lea    eax,[ebp-0x21c]
30018fc9:	push   0x30019200
30018fce:	push   eax
30018fcf:	call   0x30005153
30018fd4:	add    esp,0x18
30018fd7:	push   DWORD PTR [ebp-0x21c]
30018fdd:	push   ebx
30018fde:	push   0x3
30018fe0:	call   0x300046d1
30018fe5:	lea    eax,[ebp-0x220]
30018feb:	push   eax
30018fec:	lea    eax,[ebp-0x224]
30018ff2:	push   eax
30018ff3:	lea    eax,[ebp-0x228]
30018ff9:	push   eax
30018ffa:	lea    eax,[ebp-0x22c]
30019000:	push   eax
30019001:	push   0x3000e58c
30019006:	call   0x30018d65
3001900b:	test   eax,eax
3001900d:	jne    0x30027941
30019013:	movzx  eax,WORD PTR [ebp-0x220]
3001901a:	push   eax
3001901b:	movzx  eax,WORD PTR [ebp-0x224]
30019022:	push   eax
30019023:	movzx  eax,WORD PTR [ebp-0x228]
3001902a:	push   eax
3001902b:	movzx  eax,WORD PTR [ebp-0x22c]
30019032:	push   eax
30019033:	lea    eax,[ebp-0x21c]
30019039:	push   0x30019250
3001903e:	push   eax
3001903f:	call   0x30005153
30019044:	add    esp,0x18
30019047:	push   DWORD PTR [ebp-0x21c]
3001904d:	push   ebx
3001904e:	push   0x3
30019050:	call   0x300046d1
30019055:	lea    eax,[ebp-0x22c]
3001905b:	push   eax
3001905c:	lea    eax,[ebp-0x228]
30019062:	push   eax
30019063:	lea    eax,[ebp-0x224]
30019069:	push   eax
3001906a:	lea    eax,[ebp-0x220]
30019070:	push   eax
30019071:	push   0x30019298
30019076:	call   0x30018d65
3001907b:	test   eax,eax
3001907d:	jne    0x30027968
30019083:	movzx  eax,WORD PTR [ebp-0x22c]
3001908a:	push   eax
3001908b:	movzx  eax,WORD PTR [ebp-0x228]
30019092:	push   eax
30019093:	movzx  eax,WORD PTR [ebp-0x224]
3001909a:	push   eax
3001909b:	movzx  eax,WORD PTR [ebp-0x220]
300190a2:	push   eax
300190a3:	lea    eax,[ebp-0x21c]
300190a9:	push   0x300192b0
300190ae:	push   eax
300190af:	call   0x30005153
300190b4:	mov    esi,DWORD PTR [ebp-0x21c]
300190ba:	add    esp,0x18
300190bd:	push   esi
300190be:	push   ebx
300190bf:	push   0x3
300190c1:	call   0x300046d1
300190c6:	or     DWORD PTR [ebp-0x4],0xffffffff
300190ca:	lea    ecx,[esi-0x10]
300190cd:	call   0x30004017
300190d2:	call   0x300045fe
300190d7:	ret    0x4
300190da:	nop
300190db:	nop
300190dc:	xor    DWORD PTR [eax],eax
300190de:	xor    DWORD PTR [eax],eax
300190e0:	add    BYTE PTR cs:[eax],dh
300190e3:	add    BYTE PTR [esi],ch
300190e5:	add    BYTE PTR ds:0x37003000,dh
300190eb:	add    BYTE PTR [edx],dh
300190ed:	add    BYTE PTR [edi],dh
300190ef:	add    BYTE PTR [esi],ch
300190f1:	add    BYTE PTR [ecx],dh
300190f3:	add    BYTE PTR [eax],al
300190f5:	add    BYTE PTR [eax+0x69004d90],dl
300190fb:	add    BYTE PTR [ebx+0x0],ah
300190fe:	jb     0x30019100
30019100:	outs   dx,DWORD PTR ds:[esi]
30019101:	add    BYTE PTR [ebx+0x0],dh
30019104:	outs   dx,DWORD PTR ds:[esi]
30019105:	add    BYTE PTR [esi+0x0],ah
30019108:	je     0x3001910a
3001910a:	and    BYTE PTR [eax],al
3001910c:	push   esi
3001910d:	add    BYTE PTR [ecx+0x0],ch
30019110:	jae    0x30019112
30019112:	jne    0x30019114
30019114:	popa   
30019115:	add    BYTE PTR [eax+eax*1+0x20],ch
30019119:	add    BYTE PTR [ebx+0x0],dl
3001911c:	je     0x3001911e
3001911e:	jne    0x30019120
30019120:	add    BYTE PTR fs:[ecx+0x0],ch
30019124:	outs   dx,DWORD PTR ds:[esi]
30019125:	add    BYTE PTR [eax],ah
30019127:	add    BYTE PTR [edx],dh
30019129:	add    BYTE PTR [eax],dh
3001912b:	add    BYTE PTR [ecx],dh
3001912d:	add    BYTE PTR [edx],dh
3001912f:	add    BYTE PTR [eax],al
30019131:	add    BYTE PTR [eax+0x73002590],dl
30019137:	add    BYTE PTR [eax],ah
30019139:	add    BYTE PTR [esi+0x0],dh
3001913c:	add    BYTE PTR gs:[edx+0x0],dh
30019140:	jae    0x30019142
30019142:	imul   eax,DWORD PTR [eax],0x6e006f
30019148:	cmp    al,BYTE PTR [eax]
3001914a:	and    BYTE PTR [eax],al
3001914c:	and    eax,0x7300
30019151:	add    BYTE PTR [eax+0x75005290],dl
30019157:	add    BYTE PTR [esi+0x0],ch
3001915a:	outs   dx,BYTE PTR ds:[esi]
3001915b:	add    BYTE PTR [ecx+0x0],ch
3001915e:	outs   dx,BYTE PTR ds:[esi]
3001915f:	add    BYTE PTR [edi+0x0],ah
30019162:	and    BYTE PTR [eax],al
30019164:	imul   eax,DWORD PTR [eax],0x20006e
3001916a:	push   ebp
3001916b:	add    BYTE PTR [ebx+0x0],dh
3001916e:	add    BYTE PTR gs:[edx+0x0],dh
30019172:	and    BYTE PTR [eax],al
30019174:	inc    edi
30019175:	add    BYTE PTR [edx+0x0],dh
30019178:	outs   dx,DWORD PTR ds:[esi]
30019179:	add    BYTE PTR [ebp+0x0],dh
3001917c:	jo     0x3001917e
3001917e:	jae    0x30019180
30019180:	cmp    al,BYTE PTR [eax]
30019182:	add    BYTE PTR [eax],al
30019184:	and    BYTE PTR [eax],al
30019186:	inc    ecx
30019187:	add    BYTE PTR [eax+eax*1+0x6d],ah
3001918b:	add    BYTE PTR [ecx+0x0],ch
3001918e:	outs   dx,BYTE PTR ds:[esi]
3001918f:	add    BYTE PTR [ecx+0x0],ch
30019192:	jae    0x30019194
30019194:	je     0x30019196
30019196:	jb     0x30019198
30019198:	popa   
30019199:	add    BYTE PTR [eax+eax*1+0x6f],dh
3001919d:	add    BYTE PTR [edx+0x0],dh
300191a0:	jae    0x300191a2
300191a2:	add    BYTE PTR [eax],al
300191a4:	and    BYTE PTR [eax],al
300191a6:	push   ebp
300191a7:	add    BYTE PTR [ebx+0x0],dh
300191aa:	add    BYTE PTR gs:[edx+0x0],dh
300191ae:	jae    0x300191b0
300191b0:	add    BYTE PTR [eax],al
300191b2:	nop
300191b3:	nop
300191b4:	inc    ecx
300191b5:	add    BYTE PTR [esi+0x0],dh
300191b8:	popa   
300191b9:	add    BYTE PTR [ecx+0x0],ch
300191bc:	ins    BYTE PTR es:[edi],dx
300191bd:	add    BYTE PTR [ecx+0x0],ah
300191c0:	bound  eax,QWORD PTR [eax]
300191c2:	ins    BYTE PTR es:[edi],dx
300191c3:	add    BYTE PTR [ebp+0x0],ah
300191c6:	and    BYTE PTR [eax],al
300191c8:	inc    esp
300191c9:	add    BYTE PTR [edx+0x0],dh
300191cc:	imul   eax,DWORD PTR [eax],0x650076
300191d2:	and    BYTE PTR [eax],al
300191d4:	push   ebx
300191d5:	add    BYTE PTR [eax+0x0],dh
300191d8:	popa   
300191d9:	add    BYTE PTR [ebx+0x0],ah
300191dc:	add    BYTE PTR gs:[edx],bh
300191df:	add    BYTE PTR [eax],ah
300191e1:	add    BYTE PTR [eax],al
300191e3:	add    BYTE PTR [ebp+0x0],ch
300191e6:	jae    0x300191e8
300191e8:	push   0x6d007400
300191ed:	add    BYTE PTR [eax+eax*1+0x2e],ch
300191f1:	add    BYTE PTR [eax+eax*1+0x6c],ah
300191f5:	add    BYTE PTR [eax+eax*1+0x0],ch
300191f9:	add    BYTE PTR [eax-0x6f6f6f70],dl
300191ff:	nop
30019200:	dec    ecx
30019201:	add    BYTE PTR [esi+0x0],ch
30019204:	je     0x30019206
30019206:	add    BYTE PTR gs:[edx+0x0],dh
3001920a:	outs   dx,BYTE PTR ds:[esi]
3001920b:	add    BYTE PTR [ebp+0x0],ah
3001920e:	je     0x30019210
30019210:	and    BYTE PTR [eax],al
30019212:	inc    ebp
30019213:	add    BYTE PTR [eax+0x0],bh
30019216:	jo     0x30019218
30019218:	ins    BYTE PTR es:[edi],dx
30019219:	add    BYTE PTR [edi+0x0],ch
3001921c:	jb     0x3001921e
3001921e:	add    BYTE PTR gs:[edx+0x0],dh
30019222:	and    BYTE PTR [eax],al
30019224:	push   esi
30019225:	add    BYTE PTR [ebp+0x0],ah
30019228:	jb     0x3001922a
3001922a:	jae    0x3001922c
3001922c:	imul   eax,DWORD PTR [eax],0x6e006f
30019232:	cmp    al,BYTE PTR [eax]
30019234:	and    BYTE PTR [eax],al
30019236:	and    eax,0x2e006400
3001923b:	add    BYTE PTR ds:0x2e006400,ah
30019241:	add    BYTE PTR ds:0x2e006400,ah
30019247:	add    BYTE PTR ds:0x6400,ah
3001924d:	add    BYTE PTR [eax+0x4e002e90],dl
30019253:	add    BYTE PTR [ebp+0x0],al
30019256:	push   esp
30019257:	add    BYTE PTR [eax],ah
30019259:	add    BYTE PTR [esi+0x0],al
3001925c:	jb     0x3001925e
3001925e:	popa   
3001925f:	add    BYTE PTR [ebp+0x0],ch
30019262:	add    BYTE PTR gs:[edi+0x0],dh
30019266:	outs   dx,DWORD PTR ds:[esi]
30019267:	add    BYTE PTR [edx+0x0],dh
3001926a:	imul   eax,DWORD PTR [eax],0x20
3001926d:	add    BYTE PTR [esi+0x0],dl
30019270:	add    BYTE PTR gs:[edx+0x0],dh
30019274:	jae    0x30019276
30019276:	imul   eax,DWORD PTR [eax],0x6e006f
3001927c:	cmp    al,BYTE PTR [eax]
3001927e:	and    BYTE PTR [eax],al
30019280:	and    eax,0x2e006400
30019285:	add    BYTE PTR ds:0x2e006400,ah
3001928b:	add    BYTE PTR ds:0x2e006400,ah
30019291:	add    BYTE PTR ds:0x6400,ah
30019297:	add    BYTE PTR [ebp+0x0],ch
3001929a:	jae    0x3001929c
3001929c:	js     0x3001929e
3001929e:	ins    DWORD PTR es:[edi],dx
3001929f:	add    BYTE PTR [eax+eax*1+0x36],ch
300192a3:	add    BYTE PTR [esi],ch
300192a5:	add    BYTE PTR [eax+eax*1+0x6c],ah
300192a9:	add    BYTE PTR [eax+eax*1+0x0],ch
300192ad:	add    BYTE PTR [eax+0x53004d90],dl
300192b3:	add    BYTE PTR [eax+0x0],bl
300192b6:	dec    ebp
300192b7:	add    BYTE PTR [eax+eax*1+0x20],cl
300192bb:	add    BYTE PTR [esi+0x0],dl
300192be:	add    BYTE PTR gs:[edx+0x0],dh
300192c2:	jae    0x300192c4
300192c4:	imul   eax,DWORD PTR [eax],0x6e006f
300192ca:	cmp    al,BYTE PTR [eax]
300192cc:	and    BYTE PTR [eax],al
300192ce:	and    eax,0x2e006400
300192d3:	add    BYTE PTR ds:0x2e006400,ah
300192d9:	add    BYTE PTR ds:0x2e006400,ah
300192df:	add    BYTE PTR ds:0x6400,ah
300192e5:	add    BYTE PTR [edi+0x3004306c],bh
300192eb:	push   edi
300192ec:	lea    ecx,[ebp-0x220]
300192f2:	call   0x30004256
300192f7:	mov    BYTE PTR [ebp-0x4],0x5
300192fb:	push   0x1
300192fd:	lea    eax,[ebx+0x41]
30019300:	push   eax
30019301:	lea    ecx,[ebp-0x224]
30019307:	call   0x300194d9
3001930c:	mov    BYTE PTR [ebp-0x4],0x6
30019310:	push   0x30018554
30019315:	call   0x300042e4
3001931a:	pop    ecx
3001931b:	push   eax
3001931c:	push   0x30018554
30019321:	lea    ecx,[ebp-0x224]
30019327:	call   0x30008b64
3001932c:	push   DWORD PTR [ebp-0x224]
30019332:	call   DWORD PTR ds:0x300450cc
30019338:	cmp    eax,0x3
3001933b:	je     0x3001936c
3001933d:	mov    edi,DWORD PTR [ebp-0x220]
30019343:	mov    BYTE PTR [ebp-0x4],0x5
30019347:	mov    ecx,DWORD PTR [ebp-0x224]
3001934d:	lea    ecx,[ecx-0x10]
30019350:	call   0x30004017
30019355:	mov    BYTE PTR [ebp-0x4],0x1
30019359:	lea    ecx,[edi-0x10]
3001935c:	call   0x30004017
30019361:	mov    edx,DWORD PTR [ebp-0x22c]
30019367:	jmp    0x30018f5c
3001936c:	test   esi,esi
3001936e:	je     0x3001948a
30019374:	xor    eax,eax
30019376:	mov    DWORD PTR [ebp-0x228],eax
3001937c:	push   eax
3001937d:	push   eax
3001937e:	mov    DWORD PTR [ebp-0x238],eax
30019384:	mov    DWORD PTR [ebp-0x234],eax
3001938a:	lea    eax,[ebp-0x238]
30019390:	push   eax
30019391:	push   DWORD PTR [ebp-0x224]
30019397:	call   DWORD PTR ds:0x300450d0
3001939d:	push   edi
3001939e:	lea    ecx,[ebp-0x230]
300193a4:	call   0x30004256
300193a9:	mov    BYTE PTR [ebp-0x4],0x8
300193ad:	push   DWORD PTR [ebp-0x234]
300193b3:	lea    eax,[ebp-0x230]
300193b9:	push   DWORD PTR [ebp-0x238]
300193bf:	push   0x30019458
300193c4:	push   eax
300193c5:	call   0x30005153
300193ca:	mov    eax,DWORD PTR [ebp-0x224]
300193d0:	add    esp,0x10
300193d3:	push   DWORD PTR [eax-0xc]
300193d6:	lea    ecx,[ebp-0x220]
300193dc:	push   eax
300193dd:	call   0x30008b64
300193e2:	mov    esi,0x30019464
300193e7:	push   esi
300193e8:	call   0x300042e4
300193ed:	pop    ecx
300193ee:	push   eax
300193ef:	push   esi
300193f0:	lea    ecx,[ebp-0x220]
300193f6:	call   0x30008b64
300193fb:	mov    esi,DWORD PTR [ebp-0x230]
30019401:	lea    ecx,[ebp-0x220]
30019407:	push   DWORD PTR [esi-0xc]
3001940a:	push   esi
3001940b:	call   0x30008b64
30019410:	mov    edi,0x3001947c
30019415:	push   edi
30019416:	call   0x300042e4
3001941b:	pop    ecx
3001941c:	push   eax
3001941d:	push   edi
3001941e:	lea    ecx,[ebp-0x220]
30019424:	call   0x30008b64
30019429:	mov    edi,DWORD PTR [ebp-0x220]
3001942f:	lea    ecx,[ebp-0x21c]
30019435:	push   DWORD PTR [edi-0xc]
30019438:	push   edi
30019439:	call   0x30008b64
3001943e:	mov    BYTE PTR [ebp-0x4],0x6
30019442:	lea    ecx,[esi-0x10]
30019445:	call   0x30004017
3001944a:	mov    esi,DWORD PTR [ebp-0x228]
30019450:	jmp    0x30019343
30019455:	nop
30019456:	nop
30019457:	nop
30019458:	and    eax,0x36004900
3001945d:	add    BYTE PTR [eax+eax*1],dh
30019460:	jne    0x30019462
30019462:	add    BYTE PTR [eax],al
30019464:	and    BYTE PTR [eax],al
30019466:	add    BYTE PTR fs:[edx+0x0],dh
3001946a:	imul   eax,DWORD PTR [eax],0x650076
30019470:	and    BYTE PTR [eax],al
30019472:	push   0x73006100
30019477:	add    BYTE PTR [eax],ah
30019479:	add    BYTE PTR [eax],al
3001947b:	add    BYTE PTR [eax],ah
3001947d:	add    BYTE PTR [edx+0x0],ah
30019480:	jns    0x30019482
30019482:	je     0x30019484
30019484:	add    BYTE PTR gs:[ebx+0x0],dh
30019488:	add    BYTE PTR [eax],al
3001948a:	mov    esi,0x300194ac
3001948f:	push   esi
30019490:	call   0x300042e4
30019495:	pop    ecx
30019496:	push   eax
30019497:	push   esi
30019498:	lea    ecx,[ebp-0x220]
3001949e:	call   0x3000416f
300194a3:	xor    eax,eax
300194a5:	jmp    0x3001937c
300194aa:	nop
300194ab:	nop
300194ac:	cmp    eax,DWORD PTR [eax]
300194ae:	and    BYTE PTR [eax],al
300194b0:	add    BYTE PTR [eax],al
300194b2:	push   ebp
300194b3:	mov    ebp,esp
300194b5:	mov    ecx,DWORD PTR [ebp+0xc]
300194b8:	test   ecx,ecx
300194ba:	jle    0x300194d7
300194bc:	mov    eax,DWORD PTR [ebp+0x8]
300194bf:	movzx  edx,ax
300194c2:	mov    eax,edx
300194c4:	shl    edx,0x10
300194c7:	push   edi
300194c8:	mov    edi,DWORD PTR [ebp+0x10]
300194cb:	or     eax,edx
300194cd:	shr    ecx,1
300194cf:	rep stos DWORD PTR es:[edi],eax
300194d1:	adc    ecx,ecx
300194d3:	rep stos WORD PTR es:[edi],ax
300194d6:	pop    edi
300194d7:	pop    ebp
300194d8:	ret    
300194d9:	push   0x24
300194db:	mov    eax,0x30040064
300194e0:	call   0x300045c8
300194e5:	mov    ebx,ecx
300194e7:	mov    edi,DWORD PTR [ebp+0xc]
300194ea:	push   0x3004306c
300194ef:	mov    DWORD PTR [ebp-0x30],ebx
300194f2:	call   0x30004256
300194f7:	and    DWORD PTR [ebp-0x4],0x0
300194fb:	test   edi,edi
300194fd:	jle    0x30019596
30019503:	mov    ax,WORD PTR [ebp+0x8]
30019507:	xor    esi,esi
30019509:	xor    ecx,ecx
3001950b:	inc    esi
3001950c:	mov    WORD PTR [ebp-0x2c],ax
30019510:	mov    WORD PTR [ebp-0x2a],cx
30019514:	mov    DWORD PTR [ebp-0x28],esi
30019517:	test   ax,ax
3001951a:	je     0x3001952a
3001951c:	lea    eax,[ebp-0x2c]
3001951f:	push   eax
30019520:	call   0x300013e8
30019525:	mov    esi,eax
30019527:	mov    DWORD PTR [ebp-0x28],eax
3001952a:	and    DWORD PTR [ebp-0x24],0x0
3001952e:	inc    esi
3001952f:	push   esi
30019530:	lea    ecx,[ebp-0x24]
30019533:	mov    BYTE PTR [ebp-0x4],0x1
30019537:	call   0x300195ca
3001953c:	push   0x1
3001953e:	lea    eax,[ebp-0x2c]
30019541:	push   eax
30019542:	push   esi
30019543:	push   DWORD PTR [ebp-0x24]
30019546:	call   DWORD PTR ds:0x300453b0
3001954c:	add    esp,0x10
3001954f:	push   eax
30019550:	call   0x30001432
30019555:	mov    esi,DWORD PTR [ebp-0x28]
30019558:	mov    eax,edi
3001955a:	imul   eax,esi
3001955d:	push   eax
3001955e:	mov    ecx,ebx
30019560:	mov    DWORD PTR [ebp-0x28],eax
30019563:	call   0x30004286
30019568:	mov    edx,eax
3001956a:	cmp    esi,0x1
3001956d:	jne    0x300195a0
3001956f:	mov    eax,DWORD PTR [ebp-0x24]
30019572:	push   edx
30019573:	movzx  eax,WORD PTR [eax]
30019576:	push   edi
30019577:	push   eax
30019578:	call   0x300194b2
3001957d:	add    esp,0xc
30019580:	push   DWORD PTR [ebp-0x28]
30019583:	mov    ecx,ebx
30019585:	call   0x30004147
3001958a:	lea    eax,[ebp-0x20]
3001958d:	cmp    DWORD PTR [ebp-0x24],eax
30019590:	jne    0x30020510
30019596:	mov    eax,ebx
30019598:	call   0x300045fe
3001959d:	ret    0x8
300195a0:	test   edi,edi
300195a2:	jle    0x30019580
300195a4:	jmp    0x300204ef
300195a9:	push   ebp
300195aa:	mov    ebp,esp
300195ac:	push   DWORD PTR [ebp+0xc]
300195af:	lea    eax,[ebp+0xc]
300195b2:	push   DWORD PTR [ebp+0x8]
300195b5:	push   eax
300195b6:	call   0x30001464
300195bb:	test   eax,eax
300195bd:	js     0x3002053c
300195c3:	mov    eax,DWORD PTR [ebp+0xc]
300195c6:	pop    ebp
300195c7:	ret    0x8
300195ca:	push   ebp
300195cb:	mov    ebp,esp
300195cd:	push   esi
300195ce:	push   0x2
300195d0:	push   DWORD PTR [ebp+0x8]
300195d3:	mov    esi,ecx
300195d5:	call   0x300195a9
300195da:	cmp    eax,0xa
300195dd:	ja     0x3002051d
300195e3:	lea    eax,[esi+0x4]
300195e6:	mov    DWORD PTR [esi],eax
300195e8:	mov    eax,DWORD PTR [esi]
300195ea:	pop    esi
300195eb:	pop    ebp
300195ec:	ret    0x4
300195ef:	xor    eax,eax
300195f1:	test   edi,edi
300195f3:	sete   al
300195f6:	mov    edi,eax
300195f8:	mov    DWORD PTR [ebp-0x20],edi
300195fb:	jmp    0x300196d9
30019600:	mov    DWORD PTR ds:0x300445a8,esi
30019606:	jmp    0x3001967b
30019608:	push   0x14
3001960a:	push   0x300197a8
3001960f:	call   0x30008a54
30019614:	and    DWORD PTR [ebp-0x20],0x0
30019618:	call   0x30017ada
3001961d:	movzx  ebx,ax
30019620:	and    DWORD PTR [ebp-0x4],0x0
30019624:	mov    eax,fs:0x18
3001962a:	mov    edx,DWORD PTR [eax+0x4]
3001962d:	xor    edi,edi
3001962f:	mov    esi,0x30044460
30019634:	mov    ecx,edx
30019636:	xor    eax,eax
30019638:	lock cmpxchg DWORD PTR [esi],ecx
3001963c:	test   eax,eax
3001963e:	jne    0x30027074
30019644:	xor    esi,esi
30019646:	inc    esi
30019647:	cmp    DWORD PTR ds:0x30044464,esi
3001964d:	je     0x30027086
30019653:	cmp    DWORD PTR ds:0x30044464,0x0
3001965a:	jne    0x30019600
3001965c:	mov    DWORD PTR ds:0x30044464,esi
30019662:	push   0x300197a0
30019667:	push   0x30019788
3001966c:	call   0x30017ae0
30019671:	pop    ecx
30019672:	pop    ecx
30019673:	test   eax,eax
30019675:	jne    0x30027093
3001967b:	cmp    DWORD PTR ds:0x30044464,esi
30019681:	jne    0x3001969e
30019683:	push   0x30019784
30019688:	push   0x300196f4
3001968d:	call   0x30017b0d
30019692:	pop    ecx
30019693:	pop    ecx
30019694:	mov    DWORD PTR ds:0x30044464,0x2
3001969e:	test   edi,edi
300196a0:	jne    0x300196ab
300196a2:	xor    eax,eax
300196a4:	mov    ecx,0x30044460
300196a9:	xchg   DWORD PTR [ecx],eax
300196ab:	cmp    DWORD PTR ds:0x30044470,0x0
300196b2:	jne    0x300270a1
300196b8:	mov    eax,ds:0x3004540c
300196bd:	mov    esi,DWORD PTR [eax]
300196bf:	mov    DWORD PTR [ebp-0x1c],esi
300196c2:	mov    edi,DWORD PTR [ebp-0x20]
300196c5:	mov    cl,BYTE PTR [esi]
300196c7:	cmp    cl,0x20
300196ca:	jbe    0x300197c4
300196d0:	cmp    cl,0x22
300196d3:	je     0x300195ef
300196d9:	movzx  eax,cl
300196dc:	push   eax
300196dd:	call   DWORD PTR ds:0x300453f8
300196e3:	pop    ecx
300196e4:	test   eax,eax
300196e6:	jne    0x300270c5
300196ec:	inc    esi
300196ed:	mov    DWORD PTR [ebp-0x1c],esi
300196f0:	jmp    0x300196c5
300196f2:	nop
300196f3:	nop
300196f4:	add    BYTE PTR [eax],al
300196f6:	add    BYTE PTR [eax],al
300196f8:	adc    edi,DWORD PTR [ebx+0x1]
300196fb:	xor    BYTE PTR [ebx*4+0x7b5a3001],bh
30019702:	add    DWORD PTR [eax],esi
30019704:	cmp    BYTE PTR [ebx+0x1],0x30
30019708:	lods   al,BYTE PTR ds:[esi]
30019709:	popf   
3001970a:	add    DWORD PTR [eax],esi
3001970c:	mov    ?,WORD PTR [ebx+0x1]
3001970f:	xor    BYTE PTR [esi-0x11cffe85],bh
30019715:	jnp    0x30019718
30019717:	xor    BYTE PTR [esi],dl
30019719:	jl     0x3001971c
3001971b:	xor    BYTE PTR [edx],ah
3001971d:	jl     0x30019720
3001971f:	xor    BYTE PTR [esi],ch
30019721:	jl     0x30019724
30019723:	xor    BYTE PTR [edx],bh
30019725:	jl     0x30019728
30019727:	xor    BYTE PTR [ecx],bh
30019729:	mov    BYTE PTR [ecx],al
3001972b:	xor    BYTE PTR [esi+0x7c],al
3001972e:	add    DWORD PTR [eax],esi
30019730:	push   edx
30019731:	jl     0x30019734
30019733:	xor    BYTE PTR [ebx-0x49cffe61],dh
30019739:	jl     0x3001973c
3001973b:	xor    BYTE PTR [edx+ebx*4+0x1],cl
3001973f:	xor    ah,bl
30019741:	jge    0x30019744
30019743:	xor    bh,ah
30019745:	jge    0x30019748
30019747:	xor    dl,dh
30019749:	jge    0x3001974c
3001974b:	xor    ch,bh
3001974d:	jge    0x30019750
3001974f:	xor    BYTE PTR [eax],cl
30019751:	jle    0x30019754
30019753:	xor    BYTE PTR [ebx],dl
30019755:	jle    0x30019758
30019757:	xor    BYTE PTR [esi],bl
30019759:	jle    0x3001975c
3001975b:	xor    BYTE PTR [ecx],ch
3001975d:	jle    0x30019760
3001975f:	xor    BYTE PTR [esi+edi*2],dh
30019762:	add    DWORD PTR [eax],esi
30019764:	aas    
30019765:	jle    0x30019768
30019767:	xor    BYTE PTR [edx+0x7e],cl
3001976a:	add    DWORD PTR [eax],esi
3001976c:	push   ebp
3001976d:	jle    0x30019770
3001976f:	xor    BYTE PTR [eax+0x7e],ah
30019772:	add    DWORD PTR [eax],esi
30019774:	imul   edi,DWORD PTR [esi+0x1],0x30
30019778:	jbe    0x300197f8
3001977a:	add    DWORD PTR [eax],esi
3001977c:	cmp    DWORD PTR [esi+0x1],0x17ea630
30019783:	xor    BYTE PTR [eax],al
30019785:	add    BYTE PTR [eax],al
30019787:	add    BYTE PTR [eax],al
30019789:	add    BYTE PTR [eax],al
3001978b:	add    dh,ah
3001978d:	jp     0x30019790
3001978f:	xor    bh,dh
30019791:	fwait
30019792:	add    DWORD PTR [eax],esi
30019794:	std    
30019795:	jp     0x30019798
30019797:	xor    BYTE PTR [esi],dh
30019799:	scas   al,BYTE PTR es:[edi]
3001979a:	add    DWORD PTR [eax],esi
3001979c:	push   esp
3001979d:	scas   eax,DWORD PTR es:[edi]
3001979e:	add    DWORD PTR [eax],esi
300197a0:	add    BYTE PTR [eax],al
300197a2:	add    BYTE PTR [eax],al
300197a4:	nop
300197a5:	nop
300197a6:	nop
300197a7:	nop
300197a8:	(bad)  
300197a9:	(bad)  
300197aa:	(bad)  
300197ab:	inc    DWORD PTR [eax]
300197ad:	add    BYTE PTR [eax],al
300197af:	add    ah,cl
300197b1:	(bad)  
300197b2:	(bad)  
300197b3:	inc    DWORD PTR [eax]
300197b5:	add    BYTE PTR [eax],al
300197b7:	add    dh,bh
300197b9:	(bad)  
300197ba:	(bad)  
300197bb:	dec    esi
300197bd:	jo     0x300197c1
300197bf:	xor    dl,ah
300197c1:	jo     0x300197c5
300197c3:	xor    BYTE PTR [ecx+ecx*8-0x7af78c],al
300197ca:	jne    0x300196d0
300197d0:	mov    al,BYTE PTR [esi]
300197d2:	test   al,al
300197d4:	je     0x300168e7
300197da:	cmp    al,0x20
300197dc:	ja     0x300168e7
300197e2:	inc    esi
300197e3:	mov    DWORD PTR [ebp-0x1c],esi
300197e6:	jmp    0x300197d0
300197e8:	push   ebp
300197e9:	mov    ebp,esp
300197eb:	mov    eax,DWORD PTR [ebp+0x8]
300197ee:	push   0x20
300197f0:	pop    edx
300197f1:	xor    cl,cl
300197f3:	cmp    dx,ax
300197f6:	je     0x3001e09a
300197fc:	push   esi
300197fd:	mov    esi,0xa0
30019802:	cmp    ax,si
30019805:	jae    0x3002121a
3001980b:	add    eax,0xfffffff7
3001980e:	cmp    ax,0x4
30019812:	jbe    0x30021213
30019818:	pop    esi
30019819:	movsx  eax,cl
3001981c:	pop    ebp
3001981d:	ret    0x4
30019820:	push   esi
30019821:	push   edi
30019822:	mov    edi,ecx
30019824:	mov    esi,edi
30019826:	test   edi,edi
30019828:	je     0x30019867
3001982a:	push   0x30019894
3001982f:	push   esi
30019830:	call   DWORD PTR ds:0x30045354
30019836:	mov    esi,eax
30019838:	pop    ecx
30019839:	pop    ecx
3001983a:	test   esi,esi
3001983c:	je     0x30019867
3001983e:	movzx  eax,WORD PTR [esi]
30019841:	push   0x22
30019843:	pop    ecx
30019844:	cmp    ax,cx
30019847:	jne    0x3001b09c
3001984d:	push   ecx
3001984e:	lea    eax,[esi+0x2]
30019851:	push   eax
30019852:	call   DWORD PTR ds:0x30045348
30019858:	mov    esi,eax
3001985a:	pop    ecx
3001985b:	pop    ecx
3001985c:	test   esi,esi
3001985e:	je     0x30019867
30019860:	add    esi,0x2
30019863:	test   esi,esi
30019865:	jne    0x3001982a
30019867:	mov    ecx,edi
30019869:	lea    edx,[ecx+0x2]
3001986c:	mov    ax,WORD PTR [ecx]
3001986f:	add    ecx,0x2
30019872:	test   ax,ax
30019875:	jne    0x3001986c
30019877:	sub    ecx,edx
30019879:	sar    ecx,1
3001987b:	lea    esi,[edi+ecx*2]
3001987e:	movzx  eax,WORD PTR [esi]
30019881:	push   eax
30019882:	call   0x300197e8
30019887:	test   eax,eax
30019889:	jne    0x3001e0a1
3001988f:	pop    edi
30019890:	mov    eax,esi
30019892:	pop    esi
30019893:	ret    
30019894:	and    al,BYTE PTR [eax]
30019896:	and    BYTE PTR [eax],al
30019898:	add    BYTE PTR [eax],al
3001989a:	push   ebp
3001989b:	mov    ebp,esp
3001989d:	push   ecx
3001989e:	cmp    DWORD PTR [ebp+0xc],0x0
300198a2:	push   edi
300198a3:	je     0x3002730b
300198a9:	push   ebx
300198aa:	push   esi
300198ab:	mov    esi,DWORD PTR ds:0x30045008
300198b1:	lea    eax,[ebp-0x4]
300198b4:	push   eax
300198b5:	push   0x20019
300198ba:	xor    ebx,ebx
300198bc:	push   ebx
300198bd:	push   DWORD PTR [ebp+0xc]
300198c0:	mov    DWORD PTR [ebp-0x4],ebx
300198c3:	push   DWORD PTR [ebp+0x8]
300198c6:	call   esi
300198c8:	test   eax,eax
300198ca:	jne    0x30019902
300198cc:	cmp    DWORD PTR [ebp-0x4],ebx
300198cf:	je     0x30019902
300198d1:	mov    edi,DWORD PTR [ebp+0x10]
300198d4:	push   edi
300198d5:	push   0x20019
300198da:	push   ebx
300198db:	push   DWORD PTR ds:0x30043bdc
300198e1:	push   DWORD PTR [ebp-0x4]
300198e4:	call   esi
300198e6:	push   DWORD PTR [ebp-0x4]
300198e9:	mov    esi,eax
300198eb:	call   DWORD PTR ds:0x30045004
300198f1:	test   esi,esi
300198f3:	jne    0x30019902
300198f5:	cmp    DWORD PTR [edi],ebx
300198f7:	je     0x30019902
300198f9:	xor    eax,eax
300198fb:	pop    esi
300198fc:	pop    ebx
300198fd:	pop    edi
300198fe:	leave  
300198ff:	ret    0xc
30019902:	push   0x2
30019904:	pop    eax
30019905:	jmp    0x300198fb
30019907:	push   ebp
30019908:	mov    ebp,esp
3001990a:	push   ecx
3001990b:	push   esi
3001990c:	lea    eax,[ebp-0x4]
3001990f:	push   eax
30019910:	push   DWORD PTR [ebp+0xc]
30019913:	xor    esi,esi
30019915:	push   DWORD PTR [ebp+0x8]
30019918:	mov    DWORD PTR [ebp-0x4],esi
3001991b:	call   0x3001989a
30019920:	test   eax,eax
30019922:	jne    0x30019965
30019924:	cmp    DWORD PTR [ebp-0x4],esi
30019927:	je     0x30027313
3001992d:	lea    eax,[ebp+0x8]
30019930:	push   eax
30019931:	push   DWORD PTR [ebp+0x14]
30019934:	lea    eax,[ebp+0xc]
30019937:	push   eax
30019938:	push   esi
30019939:	push   DWORD PTR [ebp+0x10]
3001993c:	mov    DWORD PTR [ebp+0xc],esi
3001993f:	push   DWORD PTR [ebp-0x4]
30019942:	mov    DWORD PTR [ebp+0x8],0x4
30019949:	call   DWORD PTR ds:0x3004500c
3001994f:	push   DWORD PTR [ebp-0x4]
30019952:	mov    esi,eax
30019954:	call   DWORD PTR ds:0x30045004
3001995a:	cmp    DWORD PTR [ebp+0xc],0x4
3001995e:	je     0x30019963
30019960:	push   0xd
30019962:	pop    esi
30019963:	mov    eax,esi
30019965:	pop    esi
30019966:	leave  
30019967:	ret    0x10
3001996a:	push   ebp
3001996b:	mov    ebp,esp
3001996d:	cmp    DWORD PTR [ebp+0xc],0x0
30019971:	je     0x30019a0f
30019977:	cmp    DWORD PTR ds:0x30043b54,0x0
3001997e:	jne    0x30019a0f
30019984:	push   DWORD PTR [ebp+0x10]
30019987:	push   DWORD PTR [ebp+0xc]
3001998a:	call   0x3001a028
3001998f:	test   al,al
30019991:	je     0x30019a0f
30019993:	push   DWORD PTR ds:0x30043be4
30019999:	call   DWORD PTR ds:0x3004516c
3001999f:	test   eax,eax
300199a1:	je     0x30019a0f
300199a3:	push   eax
300199a4:	call   0x30017cfb
300199a9:	cmp    DWORD PTR ds:0x30043b44,0x0
300199b0:	je     0x300199d9
300199b2:	cmp    DWORD PTR ds:0x300430f8,0x0
300199b9:	je     0x300199d9
300199bb:	cmp    DWORD PTR ds:0x30043b48,0x0
300199c2:	je     0x300199d9
300199c4:	push   DWORD PTR ds:0x30043b10
300199ca:	call   DWORD PTR ds:0x30045138
300199d0:	push   DWORD PTR [ebp+0x8]
300199d3:	call   DWORD PTR ds:0x30043b44
300199d9:	and    DWORD PTR [ebp+0x10],0x0
300199dd:	lea    eax,[ebp+0x10]
300199e0:	push   eax
300199e1:	push   0x30019a14
300199e6:	push   DWORD PTR [ebp+0xc]
300199e9:	push   0x80000002
300199ee:	call   0x30019907
300199f3:	neg    eax
300199f5:	sbb    eax,eax
300199f7:	not    eax
300199f9:	and    eax,DWORD PTR [ebp+0x10]
300199fc:	mov    DWORD PTR [ebp+0x10],eax
300199ff:	je     0x3002731b
30019a05:	test   eax,eax
30019a07:	je     0x30019a0f
30019a09:	push   eax
30019a0a:	call   0x30017dac
30019a0f:	pop    ebp
30019a10:	ret    0x10
30019a13:	nop
30019a14:	inc    ecx
30019a15:	add    BYTE PTR [ebp+0x0],dh
30019a18:	je     0x30019a1a
30019a1a:	outs   dx,DWORD PTR ds:[esi]
30019a1b:	add    BYTE PTR [ebx+0x0],dl
30019a1e:	je     0x30019a20
30019a20:	popa   
30019a21:	add    BYTE PTR [edx+0x0],dh
30019a24:	je     0x30019a26
30019a26:	jne    0x30019a28
30019a28:	jo     0x30019a2a
30019a2a:	dec    esp
30019a2b:	add    BYTE PTR [edi+0x0],ch
30019a2e:	add    BYTE PTR [bx+0x0],ah
30019a32:	imul   eax,DWORD PTR [eax],0x67006e
30019a38:	inc    ebp
30019a39:	add    BYTE PTR [esi+0x0],ch
30019a3c:	add    BYTE PTR fs:[ebp+0x0],cl
30019a40:	popa   
30019a41:	add    BYTE PTR [edx+0x0],dh
30019a44:	imul   eax,DWORD PTR [eax],0x65
30019a47:	add    BYTE PTR [edx+0x0],dh
30019a4a:	add    BYTE PTR [eax],al
30019a4c:	push   0x0
30019a4e:	push   0x0
30019a50:	push   0x3000e4f0
30019a55:	push   0x33
30019a57:	call   0x3001996a
30019a5c:	push   0x1f4
30019a61:	call   0x3000532c
30019a66:	push   0x300173f2
30019a6b:	call   0x30018824
30019a70:	pop    ecx
30019a71:	ret    
30019a72:	mov    eax,DWORD PTR [ecx+0x4]
30019a75:	test   eax,eax
30019a77:	je     0x3002823e
30019a7d:	cmp    BYTE PTR [ecx+0x1],0x0
30019a81:	je     0x30028233
30019a87:	push   eax
30019a88:	call   DWORD PTR ds:0x3004510c
30019a8e:	ret    
30019a8f:	push   esi
30019a90:	push   edi
30019a91:	mov    edi,ecx
30019a93:	mov    esi,DWORD PTR [edi]
30019a95:	test   esi,esi
30019a97:	je     0x30019aa7
30019a99:	mov    ecx,esi
30019a9b:	call   0x30019a72
30019aa0:	push   esi
30019aa1:	call   0x3000460f
30019aa6:	pop    ecx
30019aa7:	and    DWORD PTR [edi],0x0
30019aaa:	pop    edi
30019aab:	pop    esi
30019aac:	ret    
30019aad:	push   0x0
30019aaf:	mov    eax,0x3003d900
30019ab4:	call   0x3000116a
30019ab9:	push   DWORD PTR [ebp+0x8]
30019abc:	call   0x3001a93d
30019ac1:	test   eax,eax
30019ac3:	js     0x300281cd
30019ac9:	push   eax
30019aca:	call   0x3001aceb
30019acf:	mov    edi,eax
30019ad1:	mov    DWORD PTR [ebp+0x8],edi
30019ad4:	xor    esi,esi
30019ad6:	mov    DWORD PTR [ebp-0x4],esi
30019ad9:	mov    ecx,edi
30019adb:	call   0x30018262
30019ae0:	test   al,al
30019ae2:	je     0x30019aed
30019ae4:	mov    ecx,edi
30019ae6:	call   0x3001826a
30019aeb:	mov    esi,eax
30019aed:	or     DWORD PTR [ebp-0x4],0xffffffff
30019af1:	lea    ecx,[ebp+0x8]
30019af4:	call   0x30019a8f
30019af9:	mov    eax,esi
30019afb:	call   0x3000119d
30019b00:	ret    0x4
30019b03:	push   0x4
30019b05:	mov    eax,0x3003ffc4
30019b0a:	call   0x3000116a
30019b0f:	mov    edi,edx
30019b11:	mov    esi,ecx
30019b13:	test   esi,esi
30019b15:	je     0x30019b5b
30019b17:	test   edi,edi
30019b19:	je     0x30019b5b
30019b1b:	cmp    DWORD PTR [ebp+0x8],0x0
30019b1f:	je     0x30019b5b
30019b21:	push   0x2
30019b23:	call   0x30019aad
30019b28:	dec    eax
30019b29:	je     0x30020471
30019b2f:	dec    eax
30019b30:	je     0x30019b53
30019b32:	dec    eax
30019b33:	je     0x3002042f
30019b39:	dec    eax
30019b3a:	jne    0x30019b5b
30019b3c:	mov    DWORD PTR [esi],0xbb8
30019b42:	mov    DWORD PTR [edi],0x188
30019b48:	xor    eax,eax
30019b4a:	inc    eax
30019b4b:	call   0x3000119d
30019b50:	ret    0x8
30019b53:	mov    DWORD PTR [esi],0x7d0
30019b59:	jmp    0x30019b48
30019b5b:	xor    eax,eax
30019b5d:	jmp    0x30019b4b
30019b5f:	push   0x10
30019b61:	push   0x30019b98
30019b66:	call   0x30008a54
30019b6b:	xor    esi,esi
30019b6d:	mov    DWORD PTR [ebp-0x1c],esi
30019b70:	mov    DWORD PTR [ebp-0x4],esi
30019b73:	mov    DWORD PTR [ebp-0x20],esi
30019b76:	mov    ebx,DWORD PTR [ebp+0xc]
30019b79:	mov    edi,DWORD PTR [ebp+0x8]
30019b7c:	cmp    esi,DWORD PTR [ebp+0x10]
30019b7f:	jge    0x30019bb4
30019b81:	mov    ecx,edi
30019b83:	call   DWORD PTR [ebp+0x14]
30019b86:	add    edi,ebx
30019b88:	mov    DWORD PTR [ebp+0x8],edi
30019b8b:	inc    esi
30019b8c:	mov    DWORD PTR [ebp-0x20],esi
30019b8f:	jmp    0x30019b7c
30019b91:	nop
30019b92:	nop
30019b93:	nop
30019b94:	nop
30019b95:	nop
30019b96:	nop
30019b97:	nop
30019b98:	(bad)  
30019b99:	(bad)  
30019b9a:	(bad)  
30019b9b:	inc    DWORD PTR [eax]
30019b9d:	add    BYTE PTR [eax],al
30019b9f:	add    al,dl
30019ba1:	(bad)  
30019ba2:	(bad)  
30019ba3:	inc    DWORD PTR [eax]
30019ba5:	add    BYTE PTR [eax],al
30019ba7:	add    dh,bh
30019ba9:	(bad)  
30019baa:	(bad)  
30019bab:	inc    DWORD PTR [eax]
30019bad:	add    BYTE PTR [eax],al
30019baf:	add    BYTE PTR [ecx-0x76],al
30019bb2:	add    dh,BYTE PTR [eax]
30019bb4:	xor    eax,eax
30019bb6:	inc    eax
30019bb7:	mov    DWORD PTR [ebp-0x1c],eax
30019bba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30019bc1:	call   0x30019bce
30019bc6:	call   0x30008a99
30019bcb:	ret    0x14
30019bce:	test   eax,eax
30019bd0:	je     0x30028a52
30019bd6:	ret    
30019bd7:	push   esi
30019bd8:	push   0x30000
30019bdd:	push   0x10000
30019be2:	xor    esi,esi
30019be4:	push   esi
30019be5:	call   0x30017af7
30019bea:	add    esp,0xc
30019bed:	test   eax,eax
30019bef:	jne    0x30027246
30019bf5:	pop    esi
30019bf6:	ret    
30019bf7:	mov    eax,0x5a4d
30019bfc:	cmp    WORD PTR ds:0x30000000,ax
30019c03:	jne    0x30019ca7
30019c09:	mov    ecx,DWORD PTR ds:0x3000003c
30019c0f:	cmp    DWORD PTR [ecx+0x30000000],0x4550
30019c19:	jne    0x30019ca7
30019c1f:	mov    eax,0x10b
30019c24:	cmp    WORD PTR [ecx+0x30000018],ax
30019c2b:	jne    0x30019ca7
30019c2d:	xor    eax,eax
30019c2f:	cmp    DWORD PTR [ecx+0x30000074],0xe
30019c36:	jbe    0x30019c41
30019c38:	cmp    DWORD PTR [ecx+0x300000e8],eax
30019c3e:	setne  al
30019c41:	push   0x2
30019c43:	mov    ds:0x30043b18,eax
30019c48:	call   DWORD PTR ds:0x300453e8
30019c4e:	pop    ecx
30019c4f:	push   0xffffffff
30019c51:	call   DWORD PTR ds:0x30045190
30019c57:	mov    ecx,DWORD PTR ds:0x30045410
30019c5d:	mov    ds:0x30044468,eax
30019c62:	mov    ds:0x3004446c,eax
30019c67:	mov    eax,ds:0x30043c14
30019c6c:	mov    DWORD PTR [ecx],eax
30019c6e:	mov    ecx,DWORD PTR ds:0x300453ac
30019c74:	mov    eax,ds:0x30043c08
30019c79:	mov    DWORD PTR [ecx],eax
30019c7b:	call   0x30019cab
30019c80:	call   0x3000922e
30019c85:	cmp    DWORD PTR ds:0x30043bd0,0x0
30019c8c:	je     0x30027048
30019c92:	call   0x30019bd7
30019c97:	cmp    DWORD PTR ds:0x30043bd4,0xffffffff
30019c9e:	je     0x30027059
30019ca4:	xor    eax,eax
30019ca6:	ret    
30019ca7:	xor    eax,eax
30019ca9:	jmp    0x30019c41
30019cab:	push   esi
30019cac:	push   edi
30019cad:	mov    esi,0x30019cc8
30019cb2:	mov    edi,0x30019cc8
30019cb7:	cmp    esi,edi
30019cb9:	jb     0x30027226
30019cbf:	pop    edi
30019cc0:	pop    esi
30019cc1:	ret    
30019cc2:	nop
30019cc3:	nop
	...
30019ccc:	push   esi
30019ccd:	push   edi
30019cce:	mov    esi,ecx
30019cd0:	push   0x18
30019cd2:	xor    edi,edi
30019cd4:	lea    eax,[esi+0x14]
30019cd7:	push   edi
30019cd8:	push   eax
30019cd9:	call   0x300011b1
30019cde:	add    esp,0xc
30019ce1:	mov    DWORD PTR [esi+0x2c],edi
30019ce4:	mov    DWORD PTR [esi+0x30],edi
30019ce7:	mov    DWORD PTR [esi+0x34],edi
30019cea:	pop    edi
30019ceb:	mov    eax,esi
30019ced:	pop    esi
30019cee:	ret    
30019cef:	push   esi
30019cf0:	mov    esi,ecx
30019cf2:	call   0x30019ccc
30019cf7:	mov    eax,0x30000000
30019cfc:	lea    ecx,[esi+0x14]
30019cff:	mov    DWORD PTR [esi],0x38
30019d05:	mov    DWORD PTR [esi+0x8],eax
30019d08:	mov    DWORD PTR [esi+0x4],eax
30019d0b:	mov    DWORD PTR [esi+0xc],0xb00
30019d12:	mov    DWORD PTR [esi+0x10],0x30019d2c
30019d19:	call   0x30006d5f
30019d1e:	test   eax,eax
30019d20:	js     0x30027251
30019d26:	mov    eax,esi
30019d28:	pop    esi
30019d29:	ret    
30019d2a:	nop
30019d2b:	nop
30019d2c:	sub    BYTE PTR [eax],ch
30019d2e:	dec    ecx
30019d2f:	sar    DWORD PTR [eax],cl
30019d31:	inc    ecx
30019d32:	aam    0x4f
30019d34:	mov    bl,0xec
30019d36:	fistp  DWORD PTR [ecx-0x7951a1ed]
30019d3c:	mov    ecx,0x300430b8
30019d41:	call   0x30019cef
30019d46:	push   0x300172b6
30019d4b:	call   0x30018824
30019d50:	pop    ecx
30019d51:	ret    
30019d52:	push   esi
30019d53:	mov    esi,ecx
30019d55:	push   0x18
30019d57:	lea    eax,[esi+0x10]
30019d5a:	push   0x0
30019d5c:	push   eax
30019d5d:	call   0x300011b1
30019d62:	add    esp,0xc
30019d65:	mov    eax,esi
30019d67:	pop    esi
30019d68:	ret    
30019d69:	push   esi
30019d6a:	mov    esi,ecx
30019d6c:	call   0x30019d52
30019d71:	and    DWORD PTR [esi],0x0
30019d74:	lea    ecx,[esi+0x10]
30019d77:	mov    DWORD PTR [esi+0x4],0x30000000
30019d7e:	mov    DWORD PTR [esi+0x8],0x30019da8
30019d85:	mov    DWORD PTR [esi+0xc],0x30019da8
30019d8c:	call   0x30006d5f
30019d91:	test   eax,eax
30019d93:	js     0x300272a5
30019d99:	mov    DWORD PTR [esi],0x28
30019d9f:	mov    eax,esi
30019da1:	pop    esi
30019da2:	ret    
30019da3:	nop
	...
30019dac:	mov    ecx,0x30043b1c
30019db1:	call   0x30019d69
30019db6:	push   0x30017272
30019dbb:	call   0x30018824
30019dc0:	pop    ecx
30019dc1:	ret    
30019dc2:	push   ebx
30019dc3:	xor    ebx,ebx
30019dc5:	push   esi
30019dc6:	mov    ecx,0x300435f0
30019dcb:	mov    DWORD PTR ds:0x300435d0,0x300050b0
30019dd5:	mov    DWORD PTR ds:0x300435d4,ebx
30019ddb:	mov    WORD PTR ds:0x300435dc,bx
30019de2:	mov    BYTE PTR ds:0x300435de,bl
30019de8:	mov    DWORD PTR ds:0x300435e0,ebx
30019dee:	mov    DWORD PTR ds:0x300435e4,ebx
30019df4:	mov    DWORD PTR ds:0x300435e8,0x1
30019dfe:	mov    DWORD PTR ds:0x300435ec,ebx
30019e04:	call   0x300051c8
30019e09:	mov    ecx,0x300435f4
30019e0e:	call   0x300051c8
30019e13:	mov    ecx,0x300435f8
30019e18:	call   0x300051c8
30019e1d:	mov    ecx,0x300435fc
30019e22:	call   0x300051c8
30019e27:	mov    ecx,0x30043600
30019e2c:	call   0x300051c8
30019e31:	mov    ecx,0x30043604
30019e36:	call   0x300051c8
30019e3b:	mov    ecx,0x30043608
30019e40:	call   0x300051c8
30019e45:	push   0x3000baa0
30019e4a:	mov    ecx,0x3004360c
30019e4f:	call   0x3000437e
30019e54:	mov    ecx,0x30043610
30019e59:	call   0x300051c8
30019e5e:	mov    ecx,0x30043614
30019e63:	call   0x300051c8
30019e68:	push   0x30019ef8
30019e6d:	mov    ecx,0x30043618
30019e72:	call   0x3000437e
30019e77:	push   ecx
30019e78:	mov    ecx,0x3004361c
30019e7d:	call   0x3000704d
30019e82:	push   ecx
30019e83:	mov    ecx,0x30043634
30019e88:	call   0x3000704d
30019e8d:	push   ecx
30019e8e:	mov    ecx,0x3004364c
30019e93:	call   0x3000704d
30019e98:	mov    ecx,0x30043664
30019e9d:	call   0x300051c8
30019ea2:	mov    ecx,0x30043668
30019ea7:	call   0x300051c8
30019eac:	push   0x30
30019eae:	call   0x30003fee
30019eb3:	mov    esi,eax
30019eb5:	pop    ecx
30019eb6:	test   esi,esi
30019eb8:	je     0x30019ef0
30019eba:	fld    DWORD PTR ds:0x300095cc
30019ec0:	sub    esp,0x14
30019ec3:	mov    ecx,esi
30019ec5:	fstp   DWORD PTR [esp+0xc]
30019ec9:	fld    DWORD PTR ds:0x300095c4
30019ecf:	fstp   DWORD PTR [esp+0x8]
30019ed3:	fld    DWORD PTR ds:0x300095c8
30019ed9:	fstp   DWORD PTR [esp+0x4]
30019edd:	call   0x30009663
30019ee2:	mov    DWORD PTR ds:0x300435d8,esi
30019ee8:	pop    esi
30019ee9:	mov    eax,0x300435d0
30019eee:	pop    ebx
30019eef:	ret    
30019ef0:	mov    esi,ebx
30019ef2:	jmp    0x30019ee2
30019ef4:	nop
30019ef5:	nop
30019ef6:	nop
30019ef7:	nop
30019ef8:	and    al,0x0
30019efa:	inc    ecx
30019efb:	add    BYTE PTR [eax+0x0],dh
30019efe:	jo     0x30019f00
30019f00:	inc    esp
30019f01:	add    BYTE PTR [ecx+0x0],ah
30019f04:	je     0x30019f06
30019f06:	popa   
30019f07:	add    BYTE PTR [eax+eax*1+0x6f],cl
30019f0b:	add    BYTE PTR [ebx+0x0],ah
30019f0e:	popa   
30019f0f:	add    BYTE PTR [eax+eax*1+0x46],ch
30019f13:	add    BYTE PTR [edi+0x0],ch
30019f16:	ins    BYTE PTR es:[edi],dx
30019f17:	add    BYTE PTR [eax+eax*1+0x65],ah
30019f1b:	add    BYTE PTR [edx+0x0],dh
30019f1e:	and    al,0x0
30019f20:	pop    esp
30019f21:	add    BYTE PTR [ebp+0x0],al
30019f24:	js     0x30019f26
30019f26:	je     0x30019f28
30019f28:	add    BYTE PTR gs:[esi+0x0],ch
30019f2c:	jae    0x30019f2e
30019f2e:	imul   eax,DWORD PTR [eax],0x6e006f
30019f34:	jae    0x30019f36
30019f36:	add    BYTE PTR [eax],al
30019f38:	push   0x4
30019f3a:	mov    eax,0x3003efb2
30019f3f:	call   0x3000116a
30019f44:	mov    esi,0x300435d0
30019f49:	mov    DWORD PTR [ebp-0x10],esi
30019f4c:	call   0x30019dc2
30019f51:	and    DWORD PTR [ebp-0x4],0x0
30019f55:	mov    DWORD PTR ds:0x300435d0,0x30005060
30019f5f:	mov    DWORD PTR ds:0x3004366c,0x300167d4
30019f69:	mov    DWORD PTR ds:0x30043c4c,0x3004366c
30019f73:	mov    DWORD PTR [ebp-0x4],0x1
30019f7a:	mov    DWORD PTR ds:0x300435d0,0x30005000
30019f84:	mov    DWORD PTR ds:0x3004366c,0x300167d4
30019f8e:	call   0x300011c1
30019f93:	push   0x3004306c
30019f98:	mov    ecx,0x30043674
30019f9d:	mov    ds:0x30043670,eax
30019fa2:	call   0x30004256
30019fa7:	or     DWORD PTR [ebp-0x4],0xffffffff
30019fab:	mov    eax,esi
30019fad:	call   0x3000119d
30019fb2:	ret    
30019fb3:	call   0x30019f38
30019fb8:	push   0x3001718a
30019fbd:	call   0x30018824
30019fc2:	pop    ecx
30019fc3:	ret    
30019fc4:	push   ebp
30019fc5:	mov    ebp,esp
30019fc7:	push   ecx
30019fc8:	push   ebx
30019fc9:	lea    eax,[ebp-0x4]
30019fcc:	push   eax
30019fcd:	push   DWORD PTR [ebp+0xc]
30019fd0:	xor    ebx,ebx
30019fd2:	push   DWORD PTR [ebp+0x8]
30019fd5:	mov    DWORD PTR [ebp-0x4],ebx
30019fd8:	call   0x3001989a
30019fdd:	test   eax,eax
30019fdf:	jne    0x3001a024
30019fe1:	cmp    DWORD PTR [ebp-0x4],ebx
30019fe4:	je     0x3001a024
30019fe6:	push   esi
30019fe7:	lea    eax,[ebp+0xc]
30019fea:	push   eax
30019feb:	push   ebx
30019fec:	push   ebx
30019fed:	push   ebx
30019fee:	push   ebx
30019fef:	push   DWORD PTR [ebp-0x4]
30019ff2:	mov    DWORD PTR [ebp+0xc],ebx
30019ff5:	call   DWORD PTR ds:0x3004500c
30019ffb:	push   DWORD PTR [ebp-0x4]
30019ffe:	mov    esi,eax
3001a000:	call   DWORD PTR ds:0x30045004
3001a006:	test   esi,esi
3001a008:	jne    0x3001a01a
3001a00a:	cmp    DWORD PTR [ebp+0xc],ebx
3001a00d:	je     0x3001a012
3001a00f:	xor    ebx,ebx
3001a011:	inc    ebx
3001a012:	mov    al,bl
3001a014:	pop    esi
3001a015:	pop    ebx
3001a016:	leave  
3001a017:	ret    0x8
3001a01a:	cmp    esi,0xea
3001a020:	je     0x3001a00a
3001a022:	jmp    0x3001a012
3001a024:	xor    al,al
3001a026:	jmp    0x3001a015
3001a028:	push   ebp
3001a029:	mov    ebp,esp
3001a02b:	push   ecx
3001a02c:	cmp    DWORD PTR [ebp+0x8],0x0
3001a030:	je     0x300272fc
3001a036:	push   edi
3001a037:	push   DWORD PTR [ebp+0x8]
3001a03a:	mov    edi,0x80000002
3001a03f:	push   edi
3001a040:	call   0x30019fc4
3001a045:	test   al,al
3001a047:	je     0x30027303
3001a04d:	and    DWORD PTR [ebp-0x4],0x0
3001a051:	lea    eax,[ebp-0x4]
3001a054:	push   eax
3001a055:	push   DWORD PTR ds:0x30043be0
3001a05b:	push   DWORD PTR [ebp+0x8]
3001a05e:	push   edi
3001a05f:	call   0x30019907
3001a064:	mov    ecx,eax
3001a066:	neg    ecx
3001a068:	sbb    ecx,ecx
3001a06a:	not    ecx
3001a06c:	xor    eax,eax
3001a06e:	and    ecx,DWORD PTR [ebp-0x4]
3001a071:	sete   al
3001a074:	pop    edi
3001a075:	leave  
3001a076:	ret    0x8
3001a079:	push   ebp
3001a07a:	mov    ebp,esp
3001a07c:	mov    eax,DWORD PTR [ebp+0x8]
3001a07f:	push   esi
3001a080:	mov    esi,ecx
3001a082:	xor    ecx,ecx
3001a084:	push   0x4
3001a086:	pop    edx
3001a087:	mov    DWORD PTR [esi],eax
3001a089:	mul    edx
3001a08b:	mov    DWORD PTR [esi+0x4],ecx
3001a08e:	mov    DWORD PTR [esi+0x8],ecx
3001a091:	mov    DWORD PTR [esi+0xc],ecx
3001a094:	mov    DWORD PTR [esi+0x10],ecx
3001a097:	seto   cl
3001a09a:	neg    ecx
3001a09c:	or     ecx,eax
3001a09e:	push   ecx
3001a09f:	call   0x300089a5
3001a0a4:	mov    DWORD PTR [esi+0x8],eax
3001a0a7:	pop    ecx
3001a0a8:	mov    eax,esi
3001a0aa:	pop    esi
3001a0ab:	pop    ebp
3001a0ac:	ret    0x4
3001a0af:	push   0x4
3001a0b1:	mov    eax,0x3003d3cc
3001a0b6:	call   0x3000116a
3001a0bb:	mov    esi,ecx
3001a0bd:	mov    DWORD PTR [ebp-0x10],esi
3001a0c0:	push   DWORD PTR [ebp+0x8]
3001a0c3:	call   0x3001a228
3001a0c8:	xor    eax,eax
3001a0ca:	mov    DWORD PTR [ebp-0x4],eax
3001a0cd:	lea    ecx,[esi+0x20]
3001a0d0:	push   0x3004306c
3001a0d5:	mov    DWORD PTR [esi],0x30004648
3001a0db:	mov    DWORD PTR [esi+0x18],eax
3001a0de:	mov    BYTE PTR [esi+0x1c],al
3001a0e1:	mov    DWORD PTR [ebp+0x8],ecx
3001a0e4:	call   0x30004256
3001a0e9:	mov    BYTE PTR [ebp-0x4],0x2
3001a0ed:	push   0x64
3001a0ef:	lea    ecx,[esi+0x24]
3001a0f2:	call   0x3001a079
3001a0f7:	mov    BYTE PTR [ebp-0x4],0x3
3001a0fb:	push   0x300051a4
3001a100:	push   0x300051c8
3001a105:	push   0xa
3001a107:	push   0x4
3001a109:	lea    eax,[esi+0x38]
3001a10c:	push   eax
3001a10d:	call   0x30019b5f
3001a112:	or     DWORD PTR [ebp-0x4],0xffffffff
3001a116:	mov    eax,esi
3001a118:	call   0x3000119d
3001a11d:	ret    0x4
3001a120:	cmp    BYTE PTR ds:0x30043b58,0x0
3001a127:	jne    0x3000463c
3001a12d:	cmp    DWORD PTR [eax+0x4],esi
3001a130:	jne    0x30027cc2
3001a136:	push   0x3004306c
3001a13b:	lea    ecx,[ebp+0x8]
3001a13e:	call   0x30004256
3001a143:	mov    DWORD PTR [ebp-0x4],0x2
3001a14a:	push   0x300184f8
3001a14f:	lea    ecx,[ebp+0x8]
3001a152:	call   0x3001a1a5
3001a157:	test   eax,eax
3001a159:	jne    0x30027d02
3001a15f:	push   0x60
3001a161:	call   0x30003fee
3001a166:	pop    ecx
3001a167:	mov    DWORD PTR [ebp-0x10],eax
3001a16a:	mov    BYTE PTR [ebp-0x4],0x4
3001a16e:	test   eax,eax
3001a170:	je     0x3001a181
3001a172:	push   DWORD PTR ds:0x30043094
3001a178:	mov    ecx,eax
3001a17a:	call   0x3001a0af
3001a17f:	mov    esi,eax
3001a181:	mov    BYTE PTR [ebp-0x4],0x2
3001a185:	mov    DWORD PTR ds:0x30043098,esi
3001a18b:	or     DWORD PTR [ebp-0x4],0xffffffff
3001a18f:	mov    ecx,DWORD PTR [ebp+0x8]
3001a192:	lea    ecx,[ecx-0x10]
3001a195:	call   0x30004017
3001a19a:	mov    esi,DWORD PTR ds:0x30043098
3001a1a0:	jmp    0x3000463c
3001a1a5:	push   ebp
3001a1a6:	mov    ebp,esp
3001a1a8:	push   ebx
3001a1a9:	push   esi
3001a1aa:	push   edi
3001a1ab:	xor    esi,esi
3001a1ad:	push   esi
3001a1ae:	push   esi
3001a1af:	push   DWORD PTR [ebp+0x8]
3001a1b2:	mov    edi,ecx
3001a1b4:	call   DWORD PTR ds:0x30045274
3001a1ba:	mov    ebx,eax
3001a1bc:	mov    ecx,edi
3001a1be:	test   ebx,ebx
3001a1c0:	jne    0x30027ca0
3001a1c6:	call   0x30004564
3001a1cb:	pop    edi
3001a1cc:	mov    eax,esi
3001a1ce:	pop    esi
3001a1cf:	pop    ebx
3001a1d0:	pop    ebp
3001a1d1:	ret    0x4
3001a1d4:	push   0x4
3001a1d6:	mov    eax,0x3003cf32
3001a1db:	call   0x3000116a
3001a1e0:	mov    esi,ecx
3001a1e2:	mov    DWORD PTR [ebp-0x10],esi
3001a1e5:	mov    eax,DWORD PTR [ebp+0x8]
3001a1e8:	lea    ecx,[esi+0x4]
3001a1eb:	mov    edi,0x3004306c
3001a1f0:	push   edi
3001a1f1:	mov    DWORD PTR [esi],eax
3001a1f3:	mov    DWORD PTR [ebp+0x8],ecx
3001a1f6:	call   0x30004256
3001a1fb:	mov    DWORD PTR [ebp-0x4],0x1
3001a202:	lea    ecx,[esi+0x8]
3001a205:	push   edi
3001a206:	mov    DWORD PTR [ebp+0x8],ecx
3001a209:	call   0x30004256
3001a20e:	mov    BYTE PTR [ebp-0x4],0x3
3001a212:	or     DWORD PTR [esi+0xc],0xffffffff
3001a216:	or     DWORD PTR [esi+0x10],0xffffffff
3001a21a:	or     DWORD PTR [ebp-0x4],0xffffffff
3001a21e:	mov    eax,esi
3001a220:	call   0x3000119d
3001a225:	ret    0x4
3001a228:	push   0x4
3001a22a:	mov    eax,0x3003cce0
3001a22f:	call   0x3000116a
3001a234:	mov    esi,ecx
3001a236:	mov    DWORD PTR [ebp-0x10],esi
3001a239:	push   DWORD PTR [ebp+0x8]
3001a23c:	lea    ecx,[esi+0x4]
3001a23f:	mov    DWORD PTR [esi],0x30008a2c
3001a245:	call   0x3001a1d4
3001a24a:	or     DWORD PTR [ebp-0x4],0xffffffff
3001a24e:	mov    eax,esi
3001a250:	call   0x3000119d
3001a255:	ret    0x4
3001a258:	push   ebp
3001a259:	mov    ebp,esp
3001a25b:	push   esi
3001a25c:	mov    esi,ecx
3001a25e:	mov    ecx,DWORD PTR [ebp+0x8]
3001a261:	call   0x300051c8
3001a266:	push   DWORD PTR [esi+0x54]
3001a269:	mov    ecx,DWORD PTR [ebp+0xc]
3001a26c:	push   DWORD PTR [ecx]
3001a26e:	push   0x3001855c
3001a273:	push   DWORD PTR [ebp+0x8]
3001a276:	call   0x30005153
3001a27b:	mov    eax,DWORD PTR [ebp+0x8]
3001a27e:	add    esp,0x10
3001a281:	pop    esi
3001a282:	pop    ebp
3001a283:	ret    0x8
3001a286:	push   ebp
3001a287:	mov    ebp,esp
3001a289:	push   ebx
3001a28a:	push   esi
3001a28b:	push   edi
3001a28c:	push   DWORD PTR [ebp+0x8]
3001a28f:	mov    ebx,ecx
3001a291:	lea    ecx,[ebx+0x34]
3001a294:	call   0x300014c1
3001a299:	push   DWORD PTR [ebp+0x8]
3001a29c:	mov    eax,DWORD PTR [ebx]
3001a29e:	lea    ecx,[ebp+0x8]
3001a2a1:	push   ecx
3001a2a2:	mov    ecx,ebx
3001a2a4:	call   DWORD PTR [eax+0x28]
3001a2a7:	lea    esi,[ebx+0x38]
3001a2aa:	push   eax
3001a2ab:	mov    ecx,esi
3001a2ad:	call   0x300014c1
3001a2b2:	lea    ecx,[ebp+0x8]
3001a2b5:	call   0x300051a4
3001a2ba:	push   esi
3001a2bb:	lea    ecx,[ebx+0x44]
3001a2be:	call   0x300014c1
3001a2c3:	push   0x3001a338
3001a2c8:	push   esi
3001a2c9:	lea    eax,[ebp+0x8]
3001a2cc:	push   eax
3001a2cd:	call   0x3000ba45
3001a2d2:	lea    esi,[ebx+0x3c]
3001a2d5:	push   eax
3001a2d6:	mov    ecx,esi
3001a2d8:	call   0x300014c1
3001a2dd:	lea    ecx,[ebp+0x8]
3001a2e0:	call   0x300051a4
3001a2e5:	push   0x30018534
3001a2ea:	push   esi
3001a2eb:	lea    eax,[ebp+0x8]
3001a2ee:	push   eax
3001a2ef:	call   0x3000ba45
3001a2f4:	push   eax
3001a2f5:	lea    ecx,[ebx+0x48]
3001a2f8:	call   0x300014c1
3001a2fd:	lea    ecx,[ebp+0x8]
3001a300:	call   0x300051a4
3001a305:	push   DWORD PTR [ebx+0x44]
3001a308:	mov    edi,0x3000522c
3001a30d:	push   0x30015e88
3001a312:	lea    eax,[ebx+0x50]
3001a315:	push   edi
3001a316:	push   eax
3001a317:	call   0x30005153
3001a31c:	push   DWORD PTR [esi]
3001a31e:	lea    eax,[ebx+0x4c]
3001a321:	push   0x30015e88
3001a326:	push   edi
3001a327:	push   eax
3001a328:	call   0x30005153
3001a32d:	add    esp,0x20
3001a330:	pop    edi
3001a331:	pop    esi
3001a332:	pop    ebx
3001a333:	pop    ebp
3001a334:	ret    0x4
3001a337:	nop
3001a338:	pop    edi
3001a339:	add    BYTE PTR [ebx+0x0],al
3001a33c:	outs   dx,DWORD PTR ds:[esi]
3001a33d:	add    BYTE PTR [esi+0x0],ch
3001a340:	data16 add BYTE PTR [ecx+0x0],ch
3001a344:	add    BYTE PTR [bx+si],al
3001a347:	add    BYTE PTR [esi-0x75],dl
3001a34a:	icebp  
3001a34b:	mov    ecx,DWORD PTR [esi+0x4]
3001a34e:	test   ecx,ecx
3001a350:	je     0x300234e3
3001a356:	lea    edx,[esi+0x30]
3001a359:	mov    eax,DWORD PTR [edx]
3001a35b:	cmp    DWORD PTR [eax-0xc],0x0
3001a35f:	je     0x300234ea
3001a365:	push   edx
3001a366:	call   0x3001a286
3001a36b:	mov    eax,DWORD PTR [esi+0x10]
3001a36e:	shr    eax,0xb
3001a371:	test   al,0x1
3001a373:	je     0x30023510
3001a379:	xor    eax,eax
3001a37b:	pop    esi
3001a37c:	ret    
3001a37d:	push   ebp
3001a37e:	mov    ebp,esp
3001a380:	sub    esp,0xc
3001a383:	push   ebx
3001a384:	push   esi
3001a385:	push   edi
3001a386:	mov    ebx,ecx
3001a388:	push   0x23f9
3001a38d:	mov    DWORD PTR [ebp-0x4],ebx
3001a390:	call   0x3000532c
3001a395:	push   0x30018530
3001a39a:	lea    ecx,[ebp-0x8]
3001a39d:	call   0x3000437e
3001a3a2:	push   0x30009708
3001a3a7:	lea    eax,[ebp-0x8]
3001a3aa:	push   eax
3001a3ab:	lea    eax,[ebp-0xc]
3001a3ae:	push   eax
3001a3af:	call   0x3000ba45
3001a3b4:	push   DWORD PTR [eax]
3001a3b6:	lea    ecx,[ebx+0x64]
3001a3b9:	call   0x3000b906
3001a3be:	lea    ecx,[ebp-0xc]
3001a3c1:	call   0x300051a4
3001a3c6:	push   0x300095a8
3001a3cb:	lea    eax,[ebp-0x8]
3001a3ce:	push   eax
3001a3cf:	lea    eax,[ebp-0xc]
3001a3d2:	push   eax
3001a3d3:	call   0x3000ba45
3001a3d8:	push   DWORD PTR [eax]
3001a3da:	lea    ecx,[ebx+0x7c]
3001a3dd:	call   0x3000b906
3001a3e2:	lea    ecx,[ebp-0xc]
3001a3e5:	call   0x300051a4
3001a3ea:	mov    eax,DWORD PTR [ebp+0x14]
3001a3ed:	mov    cl,al
3001a3ef:	and    cl,0x1
3001a3f2:	mov    BYTE PTR ds:0x300430f1,cl
3001a3f8:	test   eax,0x800
3001a3fd:	je     0x3001a407
3001a3ff:	test   al,0x4
3001a401:	jne    0x300229c4
3001a407:	push   DWORD PTR [ebp+0x8]
3001a40a:	mov    ecx,ebx
3001a40c:	mov    DWORD PTR [ebx+0x10],eax
3001a40f:	call   0x30018ac8
3001a414:	mov    esi,eax
3001a416:	test   esi,esi
3001a418:	js     0x3001a4dd
3001a41e:	mov    ecx,ebx
3001a420:	call   0x3001aff8
3001a425:	mov    eax,DWORD PTR [ebx+0x10]
3001a428:	shr    eax,0x4
3001a42b:	xor    edi,edi
3001a42d:	test   al,0x1
3001a42f:	jne    0x3001a4d2
3001a435:	cmp    DWORD PTR [ebx+0x18],edi
3001a438:	je     0x300229ea
3001a43e:	cmp    BYTE PTR ds:0x300430f1,0x0
3001a445:	jne    0x30022ac5
3001a44b:	push   0x8c
3001a450:	call   0x30003fee
3001a455:	pop    ecx
3001a456:	mov    DWORD PTR [ebp+0x14],eax
3001a459:	test   eax,eax
3001a45b:	je     0x3001a4ee
3001a461:	mov    eax,DWORD PTR [ebp+0xc]
3001a464:	cmp    WORD PTR [eax],di
3001a467:	je     0x30022add
3001a46d:	mov    edi,DWORD PTR [ebx+0x24]
3001a470:	mov    esi,DWORD PTR [ebx+0x8]
3001a473:	mov    ecx,DWORD PTR [ebp-0x4]
3001a476:	mov    ebx,DWORD PTR [ebx+0x18]
3001a479:	call   0x3001823d
3001a47e:	push   esi
3001a47f:	push   DWORD PTR [ebp+0x10]
3001a482:	mov    esi,DWORD PTR [ebp+0x14]
3001a485:	push   eax
3001a486:	push   edi
3001a487:	mov    ecx,esi
3001a489:	call   0x30018d03
3001a48e:	push   DWORD PTR [ebp+0xc]
3001a491:	mov    DWORD PTR [esi],0x30005588
3001a497:	mov    DWORD PTR [esi+0x80],ebx
3001a49d:	mov    DWORD PTR [esi+0x84],0x80000002
3001a4a7:	lea    ecx,[esi+0x88]
3001a4ad:	call   0x3000437e
3001a4b2:	mov    ebx,DWORD PTR [ebp-0x4]
3001a4b5:	xor    edi,edi
3001a4b7:	mov    ecx,ebx
3001a4b9:	mov    DWORD PTR [ebx+0x4],esi
3001a4bc:	mov    DWORD PTR [ebx+0x1c],0x8000000a
3001a4c3:	call   0x3001a348
3001a4c8:	mov    esi,eax
3001a4ca:	test   esi,esi
3001a4cc:	js     0x30022ae8
3001a4d2:	cmp    DWORD PTR [ebx+0x4],edi
3001a4d5:	je     0x30022b16
3001a4db:	mov    esi,edi
3001a4dd:	lea    ecx,[ebp-0x8]
3001a4e0:	call   0x300051a4
3001a4e5:	pop    edi
3001a4e6:	mov    eax,esi
3001a4e8:	pop    esi
3001a4e9:	pop    ebx
3001a4ea:	leave  
3001a4eb:	ret    0x10
3001a4ee:	mov    esi,edi
3001a4f0:	jmp    0x3001a4b7
3001a4f2:	push   ebp
3001a4f3:	mov    ebp,esp
3001a4f5:	push   ecx
3001a4f6:	push   esi
3001a4f7:	push   edi
3001a4f8:	mov    edi,ecx
3001a4fa:	lea    ecx,[ebp-0x4]
3001a4fd:	call   0x300051c8
3001a502:	mov    esi,DWORD PTR [ebp+0x14]
3001a505:	test   esi,esi
3001a507:	je     0x3001a51a
3001a509:	push   esi
3001a50a:	call   0x300042e4
3001a50f:	pop    ecx
3001a510:	push   eax
3001a511:	push   esi
3001a512:	lea    ecx,[edi+0x30]
3001a515:	call   0x3000416f
3001a51a:	push   DWORD PTR [ebp+0xc]
3001a51d:	mov    eax,DWORD PTR [ebp+0x18]
3001a520:	push   DWORD PTR [ebp+0x8]
3001a523:	mov    ecx,edi
3001a525:	push   DWORD PTR [edi+0x30]
3001a528:	mov    DWORD PTR [edi+0x18],eax
3001a52b:	push   DWORD PTR [ebp+0x10]
3001a52e:	call   0x3001a37d
3001a533:	lea    ecx,[ebp-0x4]
3001a536:	mov    esi,eax
3001a538:	call   0x300051a4
3001a53d:	pop    edi
3001a53e:	mov    eax,esi
3001a540:	pop    esi
3001a541:	leave  
3001a542:	ret    0x14
3001a545:	push   ebp
3001a546:	mov    ebp,esp
3001a548:	push   ecx
3001a549:	cmp    DWORD PTR [ebp+0x14],0x0
3001a54d:	push   ebx
3001a54e:	push   esi
3001a54f:	mov    ebx,ecx
3001a551:	je     0x3001fae3
3001a557:	push   DWORD PTR [ebp+0x14]
3001a55a:	lea    esi,[ebx+0xa4]
3001a560:	call   0x300042e4
3001a565:	pop    ecx
3001a566:	push   eax
3001a567:	push   DWORD PTR [ebp+0x14]
3001a56a:	mov    ecx,esi
3001a56c:	call   0x3000416f
3001a571:	push   DWORD PTR [ebp+0x18]
3001a574:	mov    ecx,ebx
3001a576:	push   DWORD PTR [esi]
3001a578:	push   DWORD PTR [ebp+0x10]
3001a57b:	push   DWORD PTR [ebp+0xc]
3001a57e:	push   DWORD PTR [ebp+0x8]
3001a581:	call   0x3001a4f2
3001a586:	test   eax,eax
3001a588:	js     0x3001a58c
3001a58a:	xor    eax,eax
3001a58c:	pop    esi
3001a58d:	pop    ebx
3001a58e:	pop    ecx
3001a58f:	pop    ebp
3001a590:	ret    0x14
3001a593:	push   ebp
3001a594:	mov    ebp,esp
3001a596:	push   ecx
3001a597:	push   esi
3001a598:	push   0x3001a644
3001a59d:	mov    esi,ecx
3001a59f:	call   DWORD PTR ds:0x3004520c
3001a5a5:	mov    DWORD PTR [esi+0x4],eax
3001a5a8:	cmp    eax,0x1
3001a5ab:	jle    0x3001a636
3001a5b1:	push   ebx
3001a5b2:	xor    ebx,ebx
3001a5b4:	push   edi
3001a5b5:	inc    ebx
3001a5b6:	xor    edi,edi
3001a5b8:	test   eax,eax
3001a5ba:	jle    0x3001a60f
3001a5bc:	xor    eax,eax
3001a5be:	inc    eax
3001a5bf:	sub    eax,0x3001a644
3001a5c4:	mov    DWORD PTR [ebp-0x4],eax
3001a5c7:	movsx  eax,BYTE PTR [edi+0x3001a644]
3001a5ce:	push   eax
3001a5cf:	call   DWORD PTR ds:0x30045414
3001a5d5:	neg    eax
3001a5d7:	sbb    eax,eax
3001a5d9:	and    ebx,eax
3001a5db:	mov    eax,DWORD PTR [ebp-0x4]
3001a5de:	pop    ecx
3001a5df:	lea    eax,[eax+0x3001a644]
3001a5e5:	add    eax,edi
3001a5e7:	cmp    eax,DWORD PTR [esi+0x4]
3001a5ea:	jge    0x3001a604
3001a5ec:	mov    cl,BYTE PTR [edi+0x3001a644]
3001a5f2:	cmp    cl,BYTE PTR [eax+0x3001a644]
3001a5f8:	je     0x3002120c
3001a5fe:	inc    eax
3001a5ff:	cmp    eax,DWORD PTR [esi+0x4]
3001a602:	jl     0x3001a5f2
3001a604:	inc    edi
3001a605:	cmp    edi,DWORD PTR [esi+0x4]
3001a608:	jl     0x3001a5c7
3001a60a:	cmp    ebx,0x1
3001a60d:	jne    0x3001a63d
3001a60f:	mov    eax,DWORD PTR [esi+0x4]
3001a612:	inc    eax
3001a613:	push   eax
3001a614:	call   0x300089a5
3001a619:	pop    ecx
3001a61a:	mov    DWORD PTR [esi],eax
3001a61c:	test   eax,eax
3001a61e:	je     0x3001a63d
3001a620:	mov    ecx,DWORD PTR [esi+0x4]
3001a623:	push   0x3001a644
3001a628:	inc    ecx
3001a629:	push   ecx
3001a62a:	push   eax
3001a62b:	call   DWORD PTR ds:0x3004533c
3001a631:	add    esp,0xc
3001a634:	pop    edi
3001a635:	pop    ebx
3001a636:	mov    eax,esi
3001a638:	pop    esi
3001a639:	leave  
3001a63a:	ret    0x4
3001a63d:	and    DWORD PTR [esi+0x4],0x0
3001a641:	jmp    0x3001a634
3001a643:	nop
3001a644:	push   edx
3001a645:	dec    ecx
3001a646:	inc    ebp
3001a647:	push   eax
3001a648:	push   ecx
3001a649:	dec    ebx
3001a64a:	inc    esp
3001a64b:	dec    edx
3001a64c:	inc    ecx
3001a64d:	dec    eax
3001a64e:	inc    ebx
3001a64f:	dec    ebp
3001a650:	pop    edx
3001a651:	xor    edi,DWORD PTR [ecx]
3001a653:	xor    DWORD PTR [edx],esi
3001a655:	xor    BYTE PTR [eax],bh
3001a657:	push   esp
3001a658:	add    BYTE PTR [edx+0x4],ch
3001a65b:	mov    eax,0x3003f663
3001a660:	call   0x3000116a
3001a665:	mov    ebx,ecx
3001a667:	mov    DWORD PTR [ebp-0x10],ebx
3001a66a:	xor    eax,eax
3001a66c:	mov    DWORD PTR [ebx+0x8],eax
3001a66f:	mov    DWORD PTR [ebx+0xc],eax
3001a672:	mov    DWORD PTR [ebx+0x10],eax
3001a675:	mov    DWORD PTR [ebx+0x14],eax
3001a678:	mov    DWORD PTR [ebx+0x18],eax
3001a67b:	mov    ecx,0x300071f8
3001a680:	lea    edi,[ebx+0x1c]
3001a683:	mov    esi,ecx
3001a685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a689:	mov    WORD PTR [ebx+0x3c],ax
3001a68d:	lea    edi,[ebx+0x2c]
3001a690:	mov    esi,ecx
3001a692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a696:	xor    esi,esi
3001a698:	mov    DWORD PTR [ebp-0x4],esi
3001a69b:	mov    DWORD PTR [ebx+0x4c],esi
3001a69e:	push   ecx
3001a69f:	lea    ecx,[ebx+0xd4]
3001a6a5:	mov    BYTE PTR [ebp-0x4],0x1
3001a6a9:	call   0x3001a593
3001a6ae:	push   0x68
3001a6b0:	lea    eax,[ebx+0x58]
3001a6b3:	mov    DWORD PTR [ebx+0x610],0x2
3001a6bd:	mov    DWORD PTR [ebx+0x614],esi
3001a6c3:	push   esi
3001a6c4:	push   eax
3001a6c5:	mov    DWORD PTR [ebx+0x50],esi
3001a6c8:	mov    DWORD PTR [ebx+0x54],esi
3001a6cb:	call   0x300011b1
3001a6d0:	add    esp,0xc
3001a6d3:	mov    DWORD PTR [ebx+0xc0],esi
3001a6d9:	mov    DWORD PTR [ebx+0xc4],esi
3001a6df:	mov    DWORD PTR [ebx+0xc8],esi
3001a6e5:	mov    DWORD PTR [ebx+0xcc],esi
3001a6eb:	mov    DWORD PTR [ebx+0xd0],esi
3001a6f1:	mov    DWORD PTR [ebx+0xdc],esi
3001a6f7:	mov    DWORD PTR [ebx+0xe0],esi
3001a6fd:	mov    DWORD PTR [ebx+0x5fc],esi
3001a703:	mov    DWORD PTR [ebx+0x600],esi
3001a709:	mov    DWORD PTR [ebx+0x604],esi
3001a70f:	mov    DWORD PTR [ebx+0x608],esi
3001a715:	mov    eax,ebx
3001a717:	call   0x3000119d
3001a71c:	ret    0x4
3001a71f:	push   0x4
3001a721:	mov    eax,0x3003e24c
3001a726:	call   0x3000116a
3001a72b:	mov    ebx,ecx
3001a72d:	mov    DWORD PTR [ebp-0x10],ebx
3001a730:	push   ecx
3001a731:	call   0x3001a659
3001a736:	and    DWORD PTR [ebp-0x4],0x0
3001a73a:	mov    esi,0x3004306c
3001a73f:	mov    DWORD PTR [ebx+0x620],0x30016958
3001a749:	lea    ecx,[ebx+0x62c]
3001a74f:	push   esi
3001a750:	mov    BYTE PTR [ebx+0x628],0x0
3001a757:	call   0x30004256
3001a75c:	and    DWORD PTR [ebx+0x640],0x0
3001a763:	lea    ecx,[ebx+0x648]
3001a769:	push   esi
3001a76a:	call   0x30004256
3001a76f:	or     DWORD PTR [ebx+0x64c],0xffffffff
3001a776:	xor    eax,eax
3001a778:	mov    DWORD PTR [ebx+0x650],eax
3001a77e:	mov    DWORD PTR [ebx+0x658],eax
3001a784:	mov    DWORD PTR [ebx+0x65c],eax
3001a78a:	mov    DWORD PTR [ebx+0x66c],eax
3001a790:	lea    ecx,[ebx+0x670]
3001a796:	push   esi
3001a797:	mov    BYTE PTR [ebp-0x4],0x2
3001a79b:	call   0x30004256
3001a7a0:	lea    ecx,[ebx+0x674]
3001a7a6:	push   esi
3001a7a7:	mov    BYTE PTR [ebp-0x4],0x3
3001a7ab:	call   0x30004256
3001a7b0:	lea    ecx,[ebx+0x678]
3001a7b6:	push   esi
3001a7b7:	mov    BYTE PTR [ebp-0x4],0x4
3001a7bb:	call   0x30004256
3001a7c0:	mov    DWORD PTR [ebx+0x67c],0x3001e304
3001a7ca:	xor    eax,eax
3001a7cc:	mov    DWORD PTR [ebx+0x690],eax
3001a7d2:	mov    DWORD PTR [ebx+0x694],eax
3001a7d8:	mov    DWORD PTR [ebx+0x698],eax
3001a7de:	lea    edi,[ebx+0x680]
3001a7e4:	mov    esi,0x300071f8
3001a7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a7ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a7ed:	mov    DWORD PTR [ebx+0x69c],0x1
3001a7f7:	mov    BYTE PTR [ebp-0x4],0x6
3001a7fb:	mov    edi,DWORD PTR ds:0x300454e8
3001a801:	mov    DWORD PTR [ebx+0x668],eax
3001a807:	mov    DWORD PTR [ebx+0x660],eax
3001a80d:	mov    DWORD PTR [ebx+0x664],eax
3001a813:	push   DWORD PTR [ebx+0x10]
3001a816:	call   edi
3001a818:	and    DWORD PTR [ebx+0x10],0x0
3001a81c:	lea    esi,[ebx+0x14]
3001a81f:	mov    DWORD PTR [ebx+0x18],0xbb8
3001a826:	push   DWORD PTR [esi]
3001a828:	call   edi
3001a82a:	and    DWORD PTR [esi],0x0
3001a82d:	push   0x30007e38
3001a832:	mov    ecx,esi
3001a834:	call   0x3000ba0d
3001a839:	lea    edi,[ebx+0x1c]
3001a83c:	mov    esi,0x3000b930
3001a841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001a845:	mov    eax,ebx
3001a847:	call   0x3000119d
3001a84c:	ret    
3001a84d:	push   0x4
3001a84f:	mov    eax,0x3003e10c
3001a854:	call   0x3000116a
3001a859:	mov    esi,ecx
3001a85b:	mov    DWORD PTR [ebp-0x10],esi
3001a85e:	call   0x3001a71f
3001a863:	and    DWORD PTR [ebp-0x4],0x0
3001a867:	mov    DWORD PTR [esi],0x30001000
3001a86d:	mov    DWORD PTR [esi+0x4],0x30005238
3001a874:	mov    DWORD PTR [esi+0x40],0x3000635c
3001a87b:	mov    DWORD PTR [esi+0x44],0x30006344
3001a882:	mov    DWORD PTR [esi+0x48],0x30004588
3001a889:	mov    DWORD PTR [esi+0x618],0x30001408
3001a893:	mov    DWORD PTR [esi+0x620],0x30016950
3001a89d:	mov    ecx,DWORD PTR ds:0x300430f4
3001a8a3:	mov    eax,DWORD PTR [ecx]
3001a8a5:	call   DWORD PTR [eax+0x4]
3001a8a8:	mov    eax,esi
3001a8aa:	call   0x3000119d
3001a8af:	ret    0x4
3001a8b2:	push   0x10
3001a8b4:	mov    eax,0x3003e3ac
3001a8b9:	call   0x30006c56
3001a8be:	xor    esi,esi
3001a8c0:	push   0x300430f0
3001a8c5:	mov    edi,0x8007000e
3001a8ca:	push   0x6a0
3001a8cf:	mov    DWORD PTR ds:0x300435cc,esi
3001a8d5:	mov    DWORD PTR [ebp-0x14],edi
3001a8d8:	mov    DWORD PTR [ebp-0x18],esi
3001a8db:	mov    DWORD PTR [ebp-0x4],esi
3001a8de:	call   0x30006cc2
3001a8e3:	pop    ecx
3001a8e4:	pop    ecx
3001a8e5:	mov    DWORD PTR [ebp-0x1c],eax
3001a8e8:	mov    BYTE PTR [ebp-0x4],0x1
3001a8ec:	test   eax,eax
3001a8ee:	je     0x3001a8fa
3001a8f0:	push   ecx
3001a8f1:	mov    ecx,eax
3001a8f3:	call   0x3001a84d
3001a8f8:	mov    esi,eax
3001a8fa:	mov    eax,esi
3001a8fc:	neg    esi
3001a8fe:	sbb    esi,esi
3001a900:	not    esi
3001a902:	and    esi,edi
3001a904:	mov    ds:0x300435cc,eax
3001a909:	mov    eax,esi
3001a90b:	call   0x3000119d
3001a910:	ret    
3001a911:	push   ebp
3001a912:	mov    ebp,esp
3001a914:	push   esi
3001a915:	mov    esi,DWORD PTR [ebp+0x8]
3001a918:	or     eax,0xffffffff
3001a91b:	push   edi
3001a91c:	mov    edi,ecx
3001a91e:	cmp    esi,0x10
3001a921:	ja     0x3001a937
3001a923:	cmp    esi,eax
3001a925:	je     0x3001a937
3001a927:	cmp    BYTE PTR [edi],0x0
3001a92a:	jne    0x3002823f
3001a930:	mov    eax,DWORD PTR [edi+0x4]
3001a933:	mov    eax,DWORD PTR [eax+esi*8+0x4]
3001a937:	pop    edi
3001a938:	pop    esi
3001a939:	pop    ebp
3001a93a:	ret    0x4
3001a93d:	push   0x4
3001a93f:	mov    eax,0x3003d950
3001a944:	call   0x3000116a
3001a949:	mov    esi,DWORD PTR [ebp+0x8]
3001a94c:	cmp    DWORD PTR ds:0x30043be8,esi
3001a952:	je     0x30028173
3001a958:	call   0x3001ab3a
3001a95d:	mov    edi,eax
3001a95f:	mov    DWORD PTR [ebp-0x10],edi
3001a962:	and    DWORD PTR [ebp-0x4],0x0
3001a966:	mov    ecx,edi
3001a968:	call   0x30018255
3001a96d:	test   al,al
3001a96f:	je     0x3001a9ac
3001a971:	mov    ecx,edi
3001a973:	call   0x3001a9b1
3001a978:	test   al,al
3001a97a:	jne    0x3002817d
3001a980:	push   esi
3001a981:	mov    ecx,edi
3001a983:	mov    DWORD PTR ds:0x30043be8,esi
3001a989:	call   0x3001a911
3001a98e:	mov    esi,eax
3001a990:	mov    DWORD PTR ds:0x30043bec,esi
3001a996:	or     DWORD PTR [ebp-0x4],0xffffffff
3001a99a:	lea    ecx,[ebp-0x10]
3001a99d:	call   0x30019a8f
3001a9a2:	mov    eax,esi
3001a9a4:	call   0x3000119d
3001a9a9:	ret    0x4
3001a9ac:	or     esi,0xffffffff
3001a9af:	jmp    0x3001a996
3001a9b1:	push   ebp
3001a9b2:	mov    ebp,esp
3001a9b4:	sub    esp,0x14
3001a9b7:	mov    eax,ds:0x30043050
3001a9bc:	xor    eax,ebp
3001a9be:	mov    DWORD PTR [ebp-0x4],eax
3001a9c1:	push   esi
3001a9c2:	lea    eax,[ebp-0x14]
3001a9c5:	push   eax
3001a9c6:	mov    esi,ecx
3001a9c8:	call   DWORD PTR ds:0x30045224
3001a9ce:	mov    ecx,DWORD PTR [esi+0x4]
3001a9d1:	movzx  eax,WORD PTR [ebp-0x14]
3001a9d5:	movzx  esi,WORD PTR [ecx+0x8c]
3001a9dc:	movzx  edx,WORD PTR [ecx+0x8e]
3001a9e3:	movzx  ecx,WORD PTR [ecx+0x90]
3001a9ea:	sub    esi,eax
3001a9ec:	movzx  eax,WORD PTR [ebp-0x12]
3001a9f0:	sub    edx,eax
3001a9f2:	movzx  eax,WORD PTR [ebp-0xe]
3001a9f6:	sub    ecx,eax
3001a9f8:	test   esi,esi
3001a9fa:	jg     0x3001aa17
3001a9fc:	jne    0x3001aa08
3001a9fe:	test   edx,edx
3001aa00:	jg     0x3001aa17
3001aa02:	jne    0x3001aa08
3001aa04:	test   ecx,ecx
3001aa06:	jg     0x3001aa17
3001aa08:	xor    eax,eax
3001aa0a:	mov    ecx,DWORD PTR [ebp-0x4]
3001aa0d:	xor    ecx,ebp
3001aa0f:	pop    esi
3001aa10:	call   0x3000115c
3001aa15:	leave  
3001aa16:	ret    
3001aa17:	xor    eax,eax
3001aa19:	inc    eax
3001aa1a:	jmp    0x3001aa0a
3001aa1c:	push   0x8
3001aa1e:	mov    eax,0x3003dc2d
3001aa23:	call   0x3000116a
3001aa28:	and    DWORD PTR [ebp-0x10],0x0
3001aa2c:	push   0x3000c0e0
3001aa31:	lea    ecx,[ebp-0x14]
3001aa34:	call   0x3000437e
3001aa39:	xor    esi,esi
3001aa3b:	inc    esi
3001aa3c:	mov    DWORD PTR [ebp-0x4],esi
3001aa3f:	push   0x3001aa6c
3001aa44:	push   eax
3001aa45:	push   DWORD PTR [ebp+0x8]
3001aa48:	call   0x3000ba45
3001aa4d:	mov    DWORD PTR [ebp-0x10],esi
3001aa50:	and    DWORD PTR [ebp-0x4],0x0
3001aa54:	mov    ecx,DWORD PTR [ebp-0x14]
3001aa57:	add    ecx,0xfffffff0
3001aa5a:	call   0x30004017
3001aa5f:	mov    eax,DWORD PTR [ebp+0x8]
3001aa62:	call   0x3000119d
3001aa67:	ret    0x4
3001aa6a:	nop
3001aa6b:	nop
3001aa6c:	pop    esp
3001aa6d:	add    BYTE PTR [eax],dh
3001aa6f:	add    BYTE PTR [edx+0x0],ah
3001aa72:	arpl   WORD PTR [eax],ax
3001aa74:	popa   
3001aa75:	add    BYTE PTR [eax+eax*1+0x0],ah
3001aa79:	add    BYTE PTR [edx+0x4],ch
3001aa7c:	mov    eax,0x3003dbc8
3001aa81:	call   0x3000116a
3001aa86:	mov    esi,DWORD PTR [ebp+0x8]
3001aa89:	lea    eax,[ebp+0x8]
3001aa8c:	xor    edi,edi
3001aa8e:	push   eax
3001aa8f:	mov    DWORD PTR [esi],edi
3001aa91:	mov    DWORD PTR [esi+0x4],edi
3001aa94:	call   0x3001aa1c
3001aa99:	mov    DWORD PTR [ebp-0x4],edi
3001aa9c:	lea    ecx,[ebp-0x10]
3001aa9f:	push   ecx
3001aaa0:	push   0x20219
3001aaa5:	push   edi
3001aaa6:	push   DWORD PTR [eax]
3001aaa8:	push   0x80000000
3001aaad:	call   DWORD PTR ds:0x30045008
3001aab3:	mov    ebx,eax
3001aab5:	neg    ebx
3001aab7:	sbb    bl,bl
3001aab9:	or     DWORD PTR [ebp-0x4],0xffffffff
3001aabd:	mov    ecx,DWORD PTR [ebp+0x8]
3001aac0:	add    ecx,0xfffffff0
3001aac3:	call   0x30004017
3001aac8:	inc    bl
3001aaca:	je     0x3001ab1b
3001aacc:	push   esi
3001aacd:	push   edi
3001aace:	lea    eax,[ebp+0x8]
3001aad1:	push   eax
3001aad2:	push   edi
3001aad3:	push   edi
3001aad4:	push   DWORD PTR [ebp-0x10]
3001aad7:	mov    DWORD PTR [ebp+0x8],edi
3001aada:	mov    edi,DWORD PTR ds:0x3004500c
3001aae0:	call   edi
3001aae2:	test   eax,eax
3001aae4:	jne    0x3001ab34
3001aae6:	cmp    DWORD PTR [ebp+0x8],0x3
3001aaea:	jne    0x3001ab34
3001aaec:	push   DWORD PTR [esi]
3001aaee:	call   0x300089a5
3001aaf3:	pop    ecx
3001aaf4:	push   esi
3001aaf5:	push   eax
3001aaf6:	mov    DWORD PTR [esi+0x4],eax
3001aaf9:	lea    eax,[ebp+0x8]
3001aafc:	push   eax
3001aafd:	push   0x0
3001aaff:	push   0x0
3001ab01:	push   DWORD PTR [ebp-0x10]
3001ab04:	call   edi
3001ab06:	test   eax,eax
3001ab08:	jne    0x3001ab2b
3001ab0a:	cmp    DWORD PTR [ebp+0x8],0x3
3001ab0e:	jne    0x3001ab2b
3001ab10:	xor    edi,edi
3001ab12:	push   DWORD PTR [ebp-0x10]
3001ab15:	call   DWORD PTR ds:0x30045004
3001ab1b:	xor    eax,eax
3001ab1d:	cmp    DWORD PTR [esi+0x4],edi
3001ab20:	setne  al
3001ab23:	call   0x3000119d
3001ab28:	ret    0x4
3001ab2b:	xor    edi,edi
3001ab2d:	mov    DWORD PTR [esi],edi
3001ab2f:	mov    DWORD PTR [esi+0x4],edi
3001ab32:	jmp    0x3001ab12
3001ab34:	xor    edi,edi
3001ab36:	mov    DWORD PTR [esi],edi
3001ab38:	jmp    0x3001ab12
3001ab3a:	push   ebp
3001ab3b:	mov    ebp,esp
3001ab3d:	sub    esp,0x10
3001ab40:	push   ebx
3001ab41:	push   esi
3001ab42:	call   0x3001abf1
3001ab47:	mov    esi,eax
3001ab49:	lea    eax,[ebp-0x8]
3001ab4c:	mov    BYTE PTR [esi],0x1
3001ab4f:	xor    ebx,ebx
3001ab51:	push   eax
3001ab52:	mov    DWORD PTR [ebp-0x8],ebx
3001ab55:	mov    DWORD PTR [ebp-0x4],ebx
3001ab58:	call   0x3001aa7a
3001ab5d:	test   al,al
3001ab5f:	je     0x3001aba8
3001ab61:	lea    eax,[ebp-0x10]
3001ab64:	push   eax
3001ab65:	push   0x1
3001ab67:	push   ebx
3001ab68:	push   ebx
3001ab69:	push   ebx
3001ab6a:	push   ebx
3001ab6b:	lea    eax,[ebp-0x8]
3001ab6e:	push   eax
3001ab6f:	call   DWORD PTR ds:0x300455e8
3001ab75:	test   eax,eax
3001ab77:	je     0x3001ab9f
3001ab79:	cmp    DWORD PTR [ebp-0x10],0x94
3001ab80:	jne    0x3001ab9f
3001ab82:	push   DWORD PTR [esi+0x4]
3001ab85:	call   0x3000460f
3001ab8a:	mov    BYTE PTR [esi+0x1],0x1
3001ab8e:	mov    eax,DWORD PTR [ebp-0xc]
3001ab91:	mov    DWORD PTR [esi+0x4],eax
3001ab94:	mov    eax,DWORD PTR [ebp-0xc]
3001ab97:	pop    ecx
3001ab98:	cmp    DWORD PTR [eax],0x11
3001ab9b:	jne    0x3001ab9f
3001ab9d:	mov    BYTE PTR [esi],bl
3001ab9f:	push   DWORD PTR [ebp-0x4]
3001aba2:	call   0x3000460f
3001aba7:	pop    ecx
3001aba8:	mov    eax,esi
3001abaa:	pop    esi
3001abab:	pop    ebx
3001abac:	leave  
3001abad:	ret    
3001abae:	push   esi
3001abaf:	mov    esi,ecx
3001abb1:	push   0x94
3001abb6:	mov    WORD PTR [esi],0x0
3001abbb:	call   0x30003fee
3001abc0:	mov    DWORD PTR [esi+0x4],eax
3001abc3:	mov    DWORD PTR [eax],0x11
3001abc9:	mov    eax,DWORD PTR [esi+0x4]
3001abcc:	pop    ecx
3001abcd:	mov    ecx,0xffff
3001abd2:	mov    WORD PTR [eax+0x8c],cx
3001abd9:	mov    eax,DWORD PTR [esi+0x4]
3001abdc:	mov    WORD PTR [eax+0x8e],cx
3001abe3:	mov    eax,DWORD PTR [esi+0x4]
3001abe6:	mov    WORD PTR [eax+0x90],cx
3001abed:	mov    eax,esi
3001abef:	pop    esi
3001abf0:	ret    
3001abf1:	push   0x4
3001abf3:	mov    eax,0x3003d8b0
3001abf8:	call   0x3000116a
3001abfd:	push   0x8
3001abff:	call   0x30003fee
3001ac04:	pop    ecx
3001ac05:	mov    DWORD PTR [ebp-0x10],eax
3001ac08:	xor    esi,esi
3001ac0a:	mov    DWORD PTR [ebp-0x4],esi
3001ac0d:	test   eax,eax
3001ac0f:	je     0x3001ac43
3001ac11:	mov    ecx,eax
3001ac13:	call   0x3001abae
3001ac18:	mov    ecx,eax
3001ac1a:	or     DWORD PTR [ebp-0x4],0xffffffff
3001ac1e:	mov    eax,DWORD PTR [ecx+0x4]
3001ac21:	add    esi,0x8
3001ac24:	mov    DWORD PTR [esi+eax*1],0x7fffffff
3001ac2b:	mov    eax,DWORD PTR [ecx+0x4]
3001ac2e:	or     DWORD PTR [esi+eax*1-0x4],0xffffffff
3001ac33:	cmp    esi,0x88
3001ac39:	jb     0x3001ac1e
3001ac3b:	mov    eax,ecx
3001ac3d:	call   0x3000119d
3001ac42:	ret    
3001ac43:	mov    ecx,esi
3001ac45:	jmp    0x3001ac1a
3001ac47:	push   ebx
3001ac48:	push   esi
3001ac49:	mov    esi,ecx
3001ac4b:	xor    ebx,ebx
3001ac4d:	push   0xe0
3001ac52:	mov    WORD PTR [esi],bx
3001ac55:	call   0x30003fee
3001ac5a:	mov    DWORD PTR [esi+0x4],eax
3001ac5d:	mov    DWORD PTR [eax],ebx
3001ac5f:	mov    eax,DWORD PTR [esi+0x4]
3001ac62:	pop    ecx
3001ac63:	mov    ecx,0xffff
3001ac68:	mov    WORD PTR [eax+0xd0],cx
3001ac6f:	mov    eax,DWORD PTR [esi+0x4]
3001ac72:	mov    WORD PTR [eax+0xd2],cx
3001ac79:	mov    eax,DWORD PTR [esi+0x4]
3001ac7c:	mov    WORD PTR [eax+0xd4],cx
3001ac83:	mov    eax,DWORD PTR [esi+0x4]
3001ac86:	xor    ecx,ecx
3001ac88:	mov    DWORD PTR [eax+0xd8],ebx
3001ac8e:	mov    eax,DWORD PTR [esi+0x4]
3001ac91:	or     DWORD PTR [eax+0xc0],0xffffffff
3001ac98:	mov    eax,DWORD PTR [esi+0x4]
3001ac9b:	mov    DWORD PTR [eax+0xc8],ebx
3001aca1:	mov    eax,DWORD PTR [esi+0x4]
3001aca4:	mov    DWORD PTR [eax+0xc4],ebx
3001acaa:	mov    eax,DWORD PTR [esi+0x4]
3001acad:	mov    WORD PTR [eax+0x4],cx
3001acb1:	mov    eax,DWORD PTR [esi+0x4]
3001acb4:	mov    WORD PTR [eax+0x34],cx
3001acb8:	mov    eax,DWORD PTR [esi+0x4]
3001acbb:	mov    WORD PTR [eax+0x84],cx
3001acc2:	mov    eax,DWORD PTR [esi+0x4]
3001acc5:	mov    BYTE PTR [eax+0xdc],bl
3001accb:	mov    eax,DWORD PTR [esi+0x4]
3001acce:	mov    BYTE PTR [eax+0xdd],bl
3001acd4:	mov    eax,DWORD PTR [esi+0x4]
3001acd7:	mov    BYTE PTR [eax+0xde],bl
3001acdd:	mov    eax,DWORD PTR [esi+0x4]
3001ace0:	mov    DWORD PTR [eax+0xcc],ebx
3001ace6:	mov    eax,esi
3001ace8:	pop    esi
3001ace9:	pop    ebx
3001acea:	ret    
3001aceb:	push   0x14
3001aced:	mov    eax,0x3003db78
3001acf2:	call   0x3000116a
3001acf7:	push   0x8
3001acf9:	call   0x30003fee
3001acfe:	pop    ecx
3001acff:	mov    DWORD PTR [ebp-0x10],eax
3001ad02:	xor    ebx,ebx
3001ad04:	mov    DWORD PTR [ebp-0x4],ebx
3001ad07:	test   eax,eax
3001ad09:	je     0x3001ad9f
3001ad0f:	mov    ecx,eax
3001ad11:	call   0x3001ac47
3001ad16:	mov    esi,eax
3001ad18:	or     DWORD PTR [ebp-0x4],0xffffffff
3001ad1c:	mov    eax,DWORD PTR [esi+0x4]
3001ad1f:	mov    edi,DWORD PTR [ebp+0x8]
3001ad22:	mov    BYTE PTR [esi],0x1
3001ad25:	mov    DWORD PTR [eax],edi
3001ad27:	lea    eax,[ebp-0x18]
3001ad2a:	push   eax
3001ad2b:	push   edi
3001ad2c:	mov    DWORD PTR [ebp-0x18],ebx
3001ad2f:	mov    DWORD PTR [ebp-0x14],ebx
3001ad32:	call   0x3000c350
3001ad37:	test   al,al
3001ad39:	je     0x3001ad95
3001ad3b:	lea    eax,[ebp-0x20]
3001ad3e:	push   eax
3001ad3f:	push   0x1
3001ad41:	push   ebx
3001ad42:	push   ebx
3001ad43:	push   ebx
3001ad44:	push   ebx
3001ad45:	lea    eax,[ebp-0x18]
3001ad48:	push   eax
3001ad49:	call   DWORD PTR ds:0x300455e8
3001ad4f:	test   eax,eax
3001ad51:	je     0x300281d4
3001ad57:	cmp    DWORD PTR [ebp-0x20],0xe0
3001ad5e:	jne    0x3001ad8c
3001ad60:	push   DWORD PTR [esi+0x4]
3001ad63:	call   0x3000460f
3001ad68:	mov    BYTE PTR [esi+0x1],0x1
3001ad6c:	mov    eax,DWORD PTR [ebp-0x1c]
3001ad6f:	mov    DWORD PTR [esi+0x4],eax
3001ad72:	mov    eax,DWORD PTR [ebp-0x1c]
3001ad75:	pop    ecx
3001ad76:	cmp    DWORD PTR [eax],edi
3001ad78:	jne    0x3001ad8c
3001ad7a:	xor    ecx,ecx
3001ad7c:	mov    WORD PTR [eax+0x32],cx
3001ad80:	mov    eax,DWORD PTR [esi+0x4]
3001ad83:	mov    WORD PTR [eax+0xbe],cx
3001ad8a:	mov    BYTE PTR [esi],bl
3001ad8c:	push   DWORD PTR [ebp-0x14]
3001ad8f:	call   0x3000460f
3001ad94:	pop    ecx
3001ad95:	mov    eax,esi
3001ad97:	call   0x3000119d
3001ad9c:	ret    0x4
3001ad9f:	mov    esi,ebx
3001ada1:	jmp    0x3001ad18
3001ada6:	call   0x3001adb0
3001adab:	jmp    0x30019608
3001adb0:	push   ebp
3001adb1:	mov    ebp,esp
3001adb3:	sub    esp,0x14
3001adb6:	mov    eax,ds:0x30043050
3001adbb:	and    DWORD PTR [ebp-0xc],0x0
3001adbf:	and    DWORD PTR [ebp-0x8],0x0
3001adc3:	push   esi
3001adc4:	push   edi
3001adc5:	mov    edi,0xbb40e64e
3001adca:	mov    esi,0xffff0000
3001adcf:	cmp    eax,edi
3001add1:	jne    0x300271f7
3001add7:	lea    eax,[ebp-0xc]
3001adda:	push   eax
3001addb:	call   DWORD PTR ds:0x300451a8
3001ade1:	mov    eax,DWORD PTR [ebp-0x8]
3001ade4:	xor    eax,DWORD PTR [ebp-0xc]
3001ade7:	mov    DWORD PTR [ebp-0x4],eax
3001adea:	call   DWORD PTR ds:0x300451a4
3001adf0:	xor    DWORD PTR [ebp-0x4],eax
3001adf3:	call   DWORD PTR ds:0x300451ac
3001adf9:	xor    DWORD PTR [ebp-0x4],eax
3001adfc:	lea    eax,[ebp-0x14]
3001adff:	push   eax
3001ae00:	call   DWORD PTR ds:0x300451a0
3001ae06:	mov    ecx,DWORD PTR [ebp-0x10]
3001ae09:	xor    ecx,DWORD PTR [ebp-0x14]
3001ae0c:	lea    eax,[ebp-0x4]
3001ae0f:	xor    ecx,DWORD PTR [ebp-0x4]
3001ae12:	xor    ecx,eax
3001ae14:	cmp    ecx,edi
3001ae16:	je     0x3002720b
3001ae1c:	test   esi,ecx
3001ae1e:	je     0x30027215
3001ae24:	mov    DWORD PTR ds:0x30043050,ecx
3001ae2a:	not    ecx
3001ae2c:	mov    DWORD PTR ds:0x30043bd8,ecx
3001ae32:	pop    edi
3001ae33:	pop    esi
3001ae34:	leave  
3001ae35:	ret    
3001ae36:	push   ebp
3001ae37:	mov    ebp,esp
3001ae39:	and    DWORD PTR ds:0x30043c18,0x0
3001ae40:	sub    esp,0x10
3001ae43:	push   ebx
3001ae44:	xor    ebx,ebx
3001ae46:	inc    ebx
3001ae47:	or     DWORD PTR ds:0x30043bf0,ebx
3001ae4d:	push   0xa
3001ae4f:	call   0x3001af4e
3001ae54:	test   eax,eax
3001ae56:	je     0x3001af3e
3001ae5c:	xor    ecx,ecx
3001ae5e:	mov    eax,ebx
3001ae60:	mov    DWORD PTR ds:0x30043c18,ebx
3001ae66:	cpuid  
3001ae68:	push   esi
3001ae69:	mov    esi,DWORD PTR ds:0x30043bf0
3001ae6f:	push   edi
3001ae70:	lea    edi,[ebp-0x10]
3001ae73:	or     esi,0x2
3001ae76:	mov    DWORD PTR [edi],eax
3001ae78:	mov    DWORD PTR [edi+0x4],ebx
3001ae7b:	mov    DWORD PTR [edi+0x8],ecx
3001ae7e:	mov    DWORD PTR [edi+0xc],edx
3001ae81:	test   DWORD PTR [ebp-0x8],0x100000
3001ae88:	mov    DWORD PTR ds:0x30043bf0,esi
3001ae8e:	jne    0x30028a62
3001ae94:	test   DWORD PTR [ebp-0x8],0x10000000
3001ae9b:	jne    0x30028a7a
3001aea1:	push   0x7
3001aea3:	xor    ecx,ecx
3001aea5:	pop    eax
3001aea6:	cpuid  
3001aea8:	lea    esi,[ebp-0x10]
3001aeab:	mov    DWORD PTR [esi],eax
3001aead:	mov    DWORD PTR [esi+0x4],ebx
3001aeb0:	mov    DWORD PTR [esi+0x8],ecx
3001aeb3:	mov    DWORD PTR [esi+0xc],edx
3001aeb6:	test   DWORD PTR [ebp-0xc],0x200
3001aebd:	mov    esi,DWORD PTR ds:0x30043c1c
3001aec3:	jne    0x30028a92
3001aec9:	xor    eax,eax
3001aecb:	xor    ecx,ecx
3001aecd:	cpuid  
3001aecf:	lea    edi,[ebp-0x10]
3001aed2:	mov    DWORD PTR [edi],eax
3001aed4:	mov    DWORD PTR [edi+0x4],ebx
3001aed7:	mov    DWORD PTR [edi+0x8],ecx
3001aeda:	mov    DWORD PTR [edi+0xc],edx
3001aedd:	cmp    DWORD PTR [ebp-0xc],0x756e6547
3001aee4:	jne    0x3001af3c
3001aee6:	cmp    DWORD PTR [ebp-0x4],0x49656e69
3001aeed:	jne    0x3001af3c
3001aeef:	cmp    DWORD PTR [ebp-0x8],0x6c65746e
3001aef6:	jne    0x3001af3c
3001aef8:	xor    eax,eax
3001aefa:	inc    eax
3001aefb:	xor    ecx,ecx
3001aefd:	cpuid  
3001aeff:	mov    DWORD PTR [edi],eax
3001af01:	mov    DWORD PTR [edi+0x4],ebx
3001af04:	mov    DWORD PTR [edi+0x8],ecx
3001af07:	mov    DWORD PTR [edi+0xc],edx
3001af0a:	mov    eax,DWORD PTR [ebp-0x10]
3001af0d:	and    eax,0xfff3ff0
3001af12:	cmp    eax,0x106c0
3001af17:	je     0x3001af43
3001af19:	cmp    eax,0x20660
3001af1e:	je     0x3001af43
3001af20:	cmp    eax,0x20670
3001af25:	je     0x3001af43
3001af27:	cmp    eax,0x30650
3001af2c:	je     0x3001af43
3001af2e:	cmp    eax,0x30660
3001af33:	je     0x3001af43
3001af35:	cmp    eax,0x30670
3001af3a:	je     0x3001af43
3001af3c:	pop    edi
3001af3d:	pop    esi
3001af3e:	xor    eax,eax
3001af40:	pop    ebx
3001af41:	leave  
3001af42:	ret    
3001af43:	or     esi,0x1
3001af46:	mov    DWORD PTR ds:0x30043c1c,esi
3001af4c:	jmp    0x3001af3c
3001af4e:	jmp    DWORD PTR ds:0x3004519c
3001af54:	push   0x3003809e
3001af59:	call   0x3001af62
3001af5e:	pop    ecx
3001af5f:	xor    eax,eax
3001af61:	ret    
3001af62:	jmp    DWORD PTR ds:0x300452c4
3001af68:	cmp    BYTE PTR ds:0x30043c58,0x0
3001af6f:	jne    0x3001afaf
3001af71:	push   0x3001afe0
3001af76:	call   DWORD PTR ds:0x3004516c
3001af7c:	test   eax,eax
3001af7e:	je     0x3001afa8
3001af80:	push   0x3001afb8
3001af85:	push   eax
3001af86:	call   DWORD PTR ds:0x30045178
3001af8c:	mov    ds:0x30043c54,eax
3001af91:	mov    BYTE PTR ds:0x30043c58,0x1
3001af98:	test   eax,eax
3001af9a:	je     0x300219b3
3001afa0:	push   0x3000c13c
3001afa5:	call   eax
3001afa7:	ret    
3001afa8:	mov    eax,ds:0x30043c54
3001afad:	jmp    0x3001af91
3001afaf:	mov    eax,ds:0x30043c54
3001afb4:	jmp    0x3001af98
3001afb6:	nop
3001afb7:	nop
3001afb8:	push   ebx
3001afb9:	gs je  0x3001afff
3001afbc:	jne    0x3001b030
3001afbe:	jb     0x3001b025
3001afc0:	outs   dx,BYTE PTR ds:[esi]
3001afc1:	je     0x3001b013
3001afc3:	jb     0x3001b034
3001afc5:	arpl   WORD PTR [ebp+0x73],sp
3001afc8:	jae    0x3001b00f
3001afca:	js     0x3001b03c
3001afcc:	ins    BYTE PTR es:[edi],dx
3001afcd:	imul   esp,DWORD PTR [ebx+0x69],0x70704174
3001afd4:	push   ebp
3001afd5:	jae    0x3001b03c
3001afd7:	jb     0x3001b026
3001afd9:	outs   dx,DWORD PTR ds:[esi]
3001afda:	fs gs ins BYTE PTR es:[edi],dx
3001afdd:	dec    ecx
3001afde:	inc    esp
3001afdf:	add    BYTE PTR [ebx+0x0],dh
3001afe2:	push   0x6c006500
3001afe7:	add    BYTE PTR [eax+eax*1+0x33],ch
3001afeb:	add    BYTE PTR [edx],dh
3001afed:	add    BYTE PTR [esi],ch
3001afef:	add    BYTE PTR [eax+eax*1+0x6c],ah
3001aff3:	add    BYTE PTR [eax+eax*1+0x0],ch
3001aff7:	add    BYTE PTR [ebp-0x75],dl
3001affa:	in     al,dx
3001affb:	sub    esp,0x14
3001affe:	push   ebx
3001afff:	push   esi
3001b000:	push   edi
3001b001:	mov    esi,ecx
3001b003:	push   0x20019
3001b008:	lea    ebx,[esi+0x30]
3001b00b:	xor    edi,edi
3001b00d:	push   DWORD PTR [ebx]
3001b00f:	lea    ecx,[ebp-0x14]
3001b012:	push   0x80000002
3001b017:	mov    DWORD PTR [ebp-0x14],edi
3001b01a:	mov    DWORD PTR [ebp-0x10],edi
3001b01d:	mov    DWORD PTR [ebp-0xc],edi
3001b020:	call   0x300051d9
3001b025:	test   eax,eax
3001b027:	jg     0x3002200e
3001b02d:	js     0x3001b068
3001b02f:	push   0x3001b078
3001b034:	lea    ecx,[ebp-0x4]
3001b037:	mov    DWORD PTR [ebp-0x8],edi
3001b03a:	call   0x3000437e
3001b03f:	lea    eax,[ebp-0x8]
3001b042:	push   eax
3001b043:	lea    edx,[ebp-0x4]
3001b046:	lea    ecx,[ebp-0x14]
3001b049:	call   0x3000709d
3001b04e:	mov    edi,eax
3001b050:	test   edi,edi
3001b052:	jg     0x3002201d
3001b058:	lea    ecx,[ebp-0x4]
3001b05b:	call   0x300051a4
3001b060:	test   edi,edi
3001b062:	jns    0x3002202b
3001b068:	lea    ecx,[ebp-0x14]
3001b06b:	call   0x300051ae
3001b070:	pop    edi
3001b071:	pop    esi
3001b072:	pop    ebx
3001b073:	leave  
3001b074:	ret    
3001b075:	nop
3001b076:	nop
3001b077:	nop
3001b078:	inc    esp
3001b079:	add    BYTE PTR [ecx+0x0],ch
3001b07c:	jae    0x3001b07e
3001b07e:	popa   
3001b07f:	add    BYTE PTR [edx+0x0],ah
3001b082:	ins    BYTE PTR es:[edi],dx
3001b083:	add    BYTE PTR [ebp+0x0],ah
3001b086:	inc    ebx
3001b087:	add    BYTE PTR [ecx+0x0],ah
3001b08a:	arpl   WORD PTR [eax],ax
3001b08c:	push   0x43006500
3001b091:	add    BYTE PTR [eax+0x0],ch
3001b094:	add    BYTE PTR gs:[ebx+0x0],ah
3001b098:	imul   eax,DWORD PTR [eax],0x0
3001b09b:	add    BYTE PTR [ebx-0x7af0df08],al
3001b0a1:	mov    esi,0x46ffffe7
3001b0a6:	inc    esi
3001b0a7:	jne    0x3001987e
3001b0ad:	jmp    0x30019867
3001b0b2:	push   ebp
3001b0b3:	mov    ebp,esp
3001b0b5:	push   esi
3001b0b6:	mov    esi,edx
3001b0b8:	xor    edx,edx
3001b0ba:	mov    eax,DWORD PTR [esi]
3001b0bc:	push   edi
3001b0bd:	mov    edi,ecx
3001b0bf:	cmp    DWORD PTR [eax-0xc],edx
3001b0c2:	je     0x300245ae
3001b0c8:	push   ebx
3001b0c9:	mov    ebx,DWORD PTR [ebp+0xc]
3001b0cc:	push   ebx
3001b0cd:	push   edx
3001b0ce:	lea    ecx,[ebp+0xc]
3001b0d1:	push   ecx
3001b0d2:	push   edx
3001b0d3:	push   eax
3001b0d4:	push   DWORD PTR [edi]
3001b0d6:	call   DWORD PTR ds:0x3004500c
3001b0dc:	test   eax,eax
3001b0de:	jg     0x300245b8
3001b0e4:	js     0x3001b11e
3001b0e6:	push   DWORD PTR [ebx]
3001b0e8:	call   0x300089a5
3001b0ed:	pop    ecx
3001b0ee:	mov    ecx,DWORD PTR [ebp+0x8]
3001b0f1:	push   ebx
3001b0f2:	push   eax
3001b0f3:	mov    DWORD PTR [ecx],eax
3001b0f5:	lea    eax,[ebp+0xc]
3001b0f8:	push   eax
3001b0f9:	push   0x0
3001b0fb:	push   DWORD PTR [esi]
3001b0fd:	push   DWORD PTR [edi]
3001b0ff:	call   DWORD PTR ds:0x3004500c
3001b105:	test   eax,eax
3001b107:	jg     0x300245c7
3001b10d:	js     0x3001b11e
3001b10f:	mov    eax,DWORD PTR [ebp+0xc]
3001b112:	sub    eax,0x3
3001b115:	neg    eax
3001b117:	sbb    eax,eax
3001b119:	and    eax,0x80004005
3001b11e:	pop    ebx
3001b11f:	pop    edi
3001b120:	pop    esi
3001b121:	pop    ebp
3001b122:	ret    0x8
3001b125:	push   ebp
3001b126:	mov    ebp,esp
3001b128:	push   ecx
3001b129:	push   ecx
3001b12a:	push   esi
3001b12b:	mov    esi,ecx
3001b12d:	test   esi,esi
3001b12f:	je     0x3001b1a8
3001b131:	test   edx,edx
3001b133:	je     0x3001b1a8
3001b135:	push   edi
3001b136:	push   esi
3001b137:	lea    ecx,[ebp-0x4]
3001b13a:	call   0x3000437e
3001b13f:	push   DWORD PTR [ebp-0x4]
3001b142:	lea    ecx,[ebp-0x8]
3001b145:	call   0x300089ae
3001b14a:	mov    edi,DWORD PTR [ebp+0x8]
3001b14d:	push   eax
3001b14e:	mov    ecx,edi
3001b150:	call   0x300014c1
3001b155:	lea    ecx,[ebp-0x8]
3001b158:	call   0x300051a4
3001b15d:	mov    eax,DWORD PTR [ebp-0x4]
3001b160:	push   0x4
3001b162:	mov    eax,DWORD PTR [eax-0xc]
3001b165:	lea    esi,[esi+eax*2]
3001b168:	add    esi,0x2
3001b16b:	push   esi
3001b16c:	lea    eax,[edi+0x4]
3001b16f:	push   0x4
3001b171:	push   eax
3001b172:	call   0x3000ba07
3001b177:	add    esp,0x10
3001b17a:	test   eax,eax
3001b17c:	jne    0x3001b1af
3001b17e:	push   0x8
3001b180:	add    esi,0x4
3001b183:	push   esi
3001b184:	lea    eax,[edi+0x8]
3001b187:	push   0x8
3001b189:	push   eax
3001b18a:	call   0x3000ba07
3001b18f:	add    esp,0x10
3001b192:	test   eax,eax
3001b194:	jne    0x3001b1af
3001b196:	xor    esi,esi
3001b198:	lea    ecx,[ebp-0x4]
3001b19b:	call   0x300051a4
3001b1a0:	mov    eax,esi
3001b1a2:	pop    edi
3001b1a3:	pop    esi
3001b1a4:	leave  
3001b1a5:	ret    0x8
3001b1a8:	mov    eax,0x80070057
3001b1ad:	jmp    0x3001b1a3
3001b1af:	mov    esi,0x80004005
3001b1b4:	jmp    0x3001b198
3001b1b6:	push   0x30006ce8
3001b1bb:	lea    ecx,[ebp-0x264]
3001b1c1:	call   0x300089ae
3001b1c6:	lea    eax,[ebp-0x264]
3001b1cc:	push   eax
3001b1cd:	lea    ecx,[ebp-0x268]
3001b1d3:	call   0x300014c1
3001b1d8:	lea    ecx,[ebp-0x264]
3001b1de:	call   0x300051a4
3001b1e3:	jmp    0x30018933
3001b1e8:	mov    eax,DWORD PTR [ecx+0x10]
3001b1eb:	shr    eax,0xc
3001b1ee:	and    al,0x1
3001b1f0:	ret    
3001b1f1:	jmp    0x3001bb15
3001b1f6:	movzx  eax,ax
3001b1f9:	or     eax,0x80070000
3001b1fe:	jmp    0x3000575b
3001b203:	mov    esi,DWORD PTR [ebp+0x8]
3001b206:	mov    ecx,DWORD PTR [ebp-0xc]
3001b209:	mov    DWORD PTR [esi],ecx
3001b20b:	mov    ecx,DWORD PTR [ebp-0x8]
3001b20e:	mov    DWORD PTR [esi+0x4],ecx
3001b211:	jmp    0x3001baf0
3001b216:	push   ebp
3001b217:	mov    ebp,esp
3001b219:	sub    esp,0x10
3001b21c:	push   ebx
3001b21d:	push   esi
3001b21e:	push   edi
3001b21f:	mov    edi,ecx
3001b221:	xor    ebx,ebx
3001b223:	mov    eax,DWORD PTR [edi+0x30]
3001b226:	cmp    DWORD PTR [eax-0xc],ebx
3001b229:	je     0x30023c98
3001b22f:	mov    eax,DWORD PTR [edi+0x2c]
3001b232:	cmp    DWORD PTR [eax-0xc],ebx
3001b235:	je     0x30023caf
3001b23b:	mov    eax,DWORD PTR [ebp+0x8]
3001b23e:	mov    esi,DWORD PTR [edi+0x38]
3001b241:	push   ebx
3001b242:	push   ecx
3001b243:	mov    DWORD PTR [edi+0x4],eax
3001b246:	mov    eax,DWORD PTR [edi]
3001b248:	push   0x20006
3001b24d:	mov    ecx,edi
3001b24f:	mov    DWORD PTR [ebp-0x10],ebx
3001b252:	mov    DWORD PTR [ebp-0xc],ebx
3001b255:	mov    DWORD PTR [ebp-0x8],ebx
3001b258:	call   DWORD PTR [eax+0xc]
3001b25b:	push   eax
3001b25c:	push   ecx
3001b25d:	push   esi
3001b25e:	push   0x80000001
3001b263:	lea    ecx,[ebp-0x10]
3001b266:	call   0x30009534
3001b26b:	lea    ecx,[ebp-0x10]
3001b26e:	call   0x300051ae
3001b273:	lea    ecx,[ebp-0x10]
3001b276:	call   0x300051ae
3001b27b:	pop    edi
3001b27c:	pop    esi
3001b27d:	xor    eax,eax
3001b27f:	pop    ebx
3001b280:	leave  
3001b281:	ret    0x8
3001b284:	push   ebp
3001b285:	mov    ebp,esp
3001b287:	and    esp,0xfffffff8
3001b28a:	push   ecx
3001b28b:	push   esi
3001b28c:	mov    esi,ecx
3001b28e:	mov    eax,DWORD PTR [esi+0x4]
3001b291:	shr    eax,0xc
3001b294:	test   al,0x1
3001b296:	je     0x30024a0b
3001b29c:	call   0x3001bb15
3001b2a1:	pop    esi
3001b2a2:	mov    esp,ebp
3001b2a4:	pop    ebp
3001b2a5:	ret    0x4
3001b2a8:	and    al,0x0
3001b2aa:	push   edi
3001b2ab:	add    BYTE PTR [ecx+0x0],ch
3001b2ae:	outs   dx,BYTE PTR ds:[esi]
3001b2af:	add    BYTE PTR [eax+eax*1+0x69],al
3001b2b3:	add    BYTE PTR [edx+0x0],dh
3001b2b6:	and    al,0x0
3001b2b8:	add    BYTE PTR [eax],al
3001b2ba:	nop
3001b2bb:	nop
3001b2bc:	dec    esp
3001b2bd:	add    BYTE PTR [edi+0x0],ch
3001b2c0:	popa   
3001b2c1:	add    BYTE PTR [eax+eax*1+0x65],ah
3001b2c5:	add    BYTE PTR [eax+eax*1+0x55],ah
3001b2c9:	add    BYTE PTR [ebx+0x0],dh
3001b2cc:	add    BYTE PTR gs:[edx+0x0],dh
3001b2d0:	inc    ebp
3001b2d1:	add    BYTE PTR [eax+0x0],bh
3001b2d4:	je     0x3001b2d6
3001b2d6:	add    BYTE PTR gs:[esi+0x0],ch
3001b2da:	jae    0x3001b2dc
3001b2dc:	imul   eax,DWORD PTR [eax],0x6e006f
3001b2e2:	jae    0x3001b2e4
3001b2e4:	add    BYTE PTR [eax],al
3001b2e6:	mov    edx,DWORD PTR [ebx+0x14]
3001b2e9:	push   0x18
3001b2eb:	lea    ecx,[ebx+0xc]
3001b2ee:	call   0x30008f5d
3001b2f3:	mov    edx,eax
3001b2f5:	test   edx,edx
3001b2f7:	je     0x30023819
3001b2fd:	mov    ecx,DWORD PTR [ebx+0x14]
3001b300:	mov    eax,ecx
3001b302:	imul   eax,eax,0x18
3001b305:	add    eax,0xffffffec
3001b308:	add    edx,eax
3001b30a:	dec    ecx
3001b30b:	js     0x3001b328
3001b30d:	mov    eax,DWORD PTR [ebx+0x10]
3001b310:	mov    DWORD PTR [edx],eax
3001b312:	mov    DWORD PTR [ebx+0x10],edx
3001b315:	sub    edx,0x18
3001b318:	jmp    0x3001b30a
3001b31a:	push   ebp
3001b31b:	mov    ebp,esp
3001b31d:	push   ecx
3001b31e:	push   ecx
3001b31f:	push   ebx
3001b320:	mov    ebx,ecx
3001b322:	cmp    DWORD PTR [ebx+0x10],0x0
3001b326:	je     0x3001b2e6
3001b328:	mov    eax,DWORD PTR [ebx+0x10]
3001b32b:	mov    DWORD PTR [ebp-0x4],eax
3001b32e:	mov    ecx,DWORD PTR [eax]
3001b330:	mov    DWORD PTR [ebp-0x8],ecx
3001b333:	test   eax,eax
3001b335:	je     0x3001b361
3001b337:	push   esi
3001b338:	mov    esi,DWORD PTR [ebp+0x8]
3001b33b:	push   edi
3001b33c:	lea    edi,[eax+0x8]
3001b33f:	push   esi
3001b340:	mov    ecx,edi
3001b342:	call   0x30004340
3001b347:	mov    eax,DWORD PTR [esi+0x4]
3001b34a:	mov    DWORD PTR [edi+0x4],eax
3001b34d:	mov    eax,DWORD PTR [esi+0x8]
3001b350:	mov    DWORD PTR [edi+0x8],eax
3001b353:	mov    ecx,DWORD PTR [esi+0xc]
3001b356:	mov    eax,DWORD PTR [ebp-0x4]
3001b359:	mov    DWORD PTR [edi+0xc],ecx
3001b35c:	mov    ecx,DWORD PTR [ebp-0x8]
3001b35f:	pop    edi
3001b360:	pop    esi
3001b361:	mov    DWORD PTR [ebx+0x10],ecx
3001b364:	mov    ecx,DWORD PTR [ebp+0xc]
3001b367:	and    DWORD PTR [eax],0x0
3001b36a:	mov    DWORD PTR [eax+0x4],ecx
3001b36d:	inc    DWORD PTR [ebx+0x8]
3001b370:	pop    ebx
3001b371:	leave  
3001b372:	ret    0xc
3001b375:	push   ebp
3001b376:	mov    ebp,esp
3001b378:	push   esi
3001b379:	mov    esi,ecx
3001b37b:	push   ecx
3001b37c:	push   DWORD PTR [esi+0x4]
3001b37f:	push   DWORD PTR [ebp+0x8]
3001b382:	call   0x3001b31a
3001b387:	mov    ecx,DWORD PTR [esi+0x4]
3001b38a:	test   ecx,ecx
3001b38c:	je     0x3001b398
3001b38e:	mov    DWORD PTR [ecx],eax
3001b390:	mov    DWORD PTR [esi+0x4],eax
3001b393:	pop    esi
3001b394:	pop    ebp
3001b395:	ret    0x4
3001b398:	mov    DWORD PTR [esi],eax
3001b39a:	jmp    0x3001b390
3001b39c:	push   ebp
3001b39d:	mov    ebp,esp
3001b39f:	push   ecx
3001b3a0:	mov    eax,DWORD PTR [ebp+0x8]
3001b3a3:	push   ebx
3001b3a4:	push   edi
3001b3a5:	push   DWORD PTR [eax]
3001b3a7:	mov    edi,ecx
3001b3a9:	lea    ecx,[ebp-0x4]
3001b3ac:	call   0x300089ae
3001b3b1:	lea    ecx,[ebp-0x4]
3001b3b4:	call   0x30018854
3001b3b9:	mov    eax,DWORD PTR [edi+0x4]
3001b3bc:	mov    eax,DWORD PTR [eax]
3001b3be:	mov    DWORD PTR [ebp+0x8],eax
3001b3c1:	test   eax,eax
3001b3c3:	je     0x3001b41c
3001b3c5:	lea    eax,[ebp+0x8]
3001b3c8:	push   eax
3001b3c9:	call   0x30008fa7
3001b3ce:	push   DWORD PTR [eax]
3001b3d0:	push   DWORD PTR [ebp-0x4]
3001b3d3:	call   DWORD PTR ds:0x30045620
3001b3d9:	test   eax,eax
3001b3db:	je     0x30023800
3001b3e1:	mov    eax,DWORD PTR [edi+0x8]
3001b3e4:	mov    eax,DWORD PTR [eax]
3001b3e6:	mov    DWORD PTR [ebp+0x8],eax
3001b3e9:	test   eax,eax
3001b3eb:	je     0x3001b40a
3001b3ed:	lea    eax,[ebp+0x8]
3001b3f0:	push   eax
3001b3f1:	call   0x30008fa7
3001b3f6:	push   DWORD PTR [eax]
3001b3f8:	push   DWORD PTR [ebp-0x4]
3001b3fb:	call   DWORD PTR ds:0x30045620
3001b401:	test   eax,eax
3001b403:	jne    0x3001b41c
3001b405:	cmp    DWORD PTR [ebp+0x8],eax
3001b408:	jne    0x3001b3ed
3001b40a:	mov    bl,0x1
3001b40c:	lea    ecx,[ebp-0x4]
3001b40f:	call   0x300051a4
3001b414:	pop    edi
3001b415:	mov    al,bl
3001b417:	pop    ebx
3001b418:	leave  
3001b419:	ret    0x4
3001b41c:	xor    bl,bl
3001b41e:	jmp    0x3001b40c
3001b420:	push   ebp
3001b421:	mov    ebp,esp
3001b423:	sub    esp,0x1c
3001b426:	push   ebx
3001b427:	mov    ebx,DWORD PTR [ebp+0x8]
3001b42a:	push   esi
3001b42b:	push   edi
3001b42c:	lea    eax,[ebp-0x4]
3001b42f:	mov    DWORD PTR [ebp-0x8],ecx
3001b432:	push   eax
3001b433:	mov    ecx,ebx
3001b435:	call   0x3000c489
3001b43a:	mov    esi,DWORD PTR [ebp-0x4]
3001b43d:	xor    edi,edi
3001b43f:	cmp    DWORD PTR [esi-0xc],edi
3001b442:	je     0x300237ee
3001b448:	mov    ecx,DWORD PTR [ebp-0x8]
3001b44b:	lea    eax,[ebp-0x4]
3001b44e:	push   eax
3001b44f:	call   0x3001b39c
3001b454:	test   al,al
3001b456:	je     0x300237f8
3001b45c:	lea    ecx,[ebp-0x18]
3001b45f:	call   0x300051c8
3001b464:	push   esi
3001b465:	lea    ecx,[ebp+0x8]
3001b468:	call   0x300089ae
3001b46d:	lea    eax,[ebp+0x8]
3001b470:	push   eax
3001b471:	lea    ecx,[ebp-0x18]
3001b474:	call   0x300014c1
3001b479:	lea    ecx,[ebp+0x8]
3001b47c:	call   0x300051a4
3001b481:	mov    ecx,DWORD PTR [ebx+0x258]
3001b487:	test   ecx,ecx
3001b489:	je     0x3001b4cb
3001b48b:	cmp    DWORD PTR [ebx+0x1c],edi
3001b48e:	ja     0x3001b4cb
3001b490:	mov    eax,DWORD PTR [ebx+0x20]
3001b493:	mov    DWORD PTR [ebp-0x14],eax
3001b496:	test   ecx,ecx
3001b498:	je     0x3001b4cb
3001b49a:	mov    eax,DWORD PTR [ebx+0x14]
3001b49d:	mov    ecx,DWORD PTR [ebp+0xc]
3001b4a0:	mov    DWORD PTR [ebp-0x10],eax
3001b4a3:	mov    eax,DWORD PTR [ebx+0x18]
3001b4a6:	mov    DWORD PTR [ebp-0xc],eax
3001b4a9:	lea    eax,[ebp-0x18]
3001b4ac:	push   eax
3001b4ad:	call   0x3001b375
3001b4b2:	lea    ecx,[ebp-0x18]
3001b4b5:	call   0x300051a4
3001b4ba:	lea    ecx,[ebp-0x4]
3001b4bd:	call   0x300051a4
3001b4c2:	mov    eax,edi
3001b4c4:	pop    edi
3001b4c5:	pop    esi
3001b4c6:	pop    ebx
3001b4c7:	leave  
3001b4c8:	ret    0x8
3001b4cb:	mov    edi,0x80004005
3001b4d0:	jmp    0x3001b4b2
3001b4d2:	push   ebp
3001b4d3:	mov    ebp,esp
3001b4d5:	and    esp,0xfffffff8
3001b4d8:	sub    esp,0x26c
3001b4de:	mov    eax,ds:0x30043050
3001b4e3:	xor    eax,esp
3001b4e5:	mov    DWORD PTR [esp+0x268],eax
3001b4ec:	push   ebx
3001b4ed:	mov    ebx,DWORD PTR [ebp+0x10]
3001b4f0:	push   esi
3001b4f1:	mov    esi,ecx
3001b4f3:	push   edi
3001b4f4:	mov    edi,DWORD PTR [ebp+0xc]
3001b4f7:	lea    ecx,[ebp+0x8]
3001b4fa:	call   0x30008e3c
3001b4ff:	mov    eax,DWORD PTR [ebp+0x8]
3001b502:	cmp    DWORD PTR [eax-0xc],0x0
3001b506:	je     0x3002375c
3001b50c:	lea    ecx,[esp+0x10]
3001b510:	call   0x3000c07d
3001b515:	push   DWORD PTR [ebp+0x8]
3001b518:	lea    ecx,[esp+0x14]
3001b51c:	call   0x3000c18b
3001b521:	test   eax,eax
3001b523:	je     0x3001da7c
3001b529:	lea    ecx,[esp+0x10]
3001b52d:	call   0x3000c413
3001b532:	test   eax,eax
3001b534:	mov    ecx,esi
3001b536:	lea    eax,[esp+0x10]
3001b53a:	jne    0x3001da43
3001b540:	push   edi
3001b541:	push   eax
3001b542:	call   0x3001b420
3001b547:	mov    esi,eax
3001b549:	lea    ecx,[esp+0x10]
3001b54d:	call   0x3000c170
3001b552:	lea    ecx,[esp+0x260]
3001b559:	call   0x300051a4
3001b55e:	lea    ecx,[ebp+0x8]
3001b561:	call   0x300051a4
3001b566:	mov    ecx,DWORD PTR [esp+0x274]
3001b56d:	pop    edi
3001b56e:	mov    eax,esi
3001b570:	pop    esi
3001b571:	pop    ebx
3001b572:	xor    ecx,esp
3001b574:	call   0x3000115c
3001b579:	mov    esp,ebp
3001b57b:	pop    ebp
3001b57c:	ret    0xc
3001b57f:	push   ebp
3001b580:	mov    ebp,esp
3001b582:	sub    esp,0x34
3001b585:	push   ebx
3001b586:	xor    eax,eax
3001b588:	push   esi
3001b589:	mov    esi,ecx
3001b58b:	push   ecx
3001b58c:	lea    ecx,[ebp-0x34]
3001b58f:	mov    DWORD PTR [ebp-0x1c],eax
3001b592:	mov    DWORD PTR [ebp-0x18],eax
3001b595:	mov    DWORD PTR [ebp-0x14],eax
3001b598:	mov    DWORD PTR [ebp-0x10],eax
3001b59b:	mov    DWORD PTR [ebp-0xc],eax
3001b59e:	mov    DWORD PTR [ebp-0x8],0xa
3001b5a5:	call   0x3000704d
3001b5aa:	lea    eax,[ebp-0x34]
3001b5ad:	push   eax
3001b5ae:	lea    eax,[ebp-0x1c]
3001b5b1:	push   eax
3001b5b2:	push   ecx
3001b5b3:	mov    ecx,esp
3001b5b5:	push   DWORD PTR [ebp+0x8]
3001b5b8:	call   0x30004340
3001b5bd:	mov    ecx,esi
3001b5bf:	call   0x3001b4d2
3001b5c4:	mov    ebx,eax
3001b5c6:	test   ebx,ebx
3001b5c8:	js     0x3001b5e8
3001b5ca:	lea    eax,[ebp-0x34]
3001b5cd:	push   eax
3001b5ce:	lea    ecx,[esi+0x24]
3001b5d1:	call   0x3000731d
3001b5d6:	lea    eax,[ebp-0x1c]
3001b5d9:	push   eax
3001b5da:	mov    ecx,esi
3001b5dc:	call   0x3001b600
3001b5e1:	xor    ebx,ebx
3001b5e3:	test   eax,eax
3001b5e5:	setle  bl
3001b5e8:	lea    ecx,[ebp-0x34]
3001b5eb:	call   0x30007014
3001b5f0:	lea    ecx,[ebp-0x1c]
3001b5f3:	call   0x3000e730
3001b5f8:	pop    esi
3001b5f9:	mov    eax,ebx
3001b5fb:	pop    ebx
3001b5fc:	leave  
3001b5fd:	ret    0x4
3001b600:	push   ebp
3001b601:	mov    ebp,esp
3001b603:	push   ecx
3001b604:	mov    eax,DWORD PTR [ebp+0x8]
3001b607:	push   esi
3001b608:	mov    eax,DWORD PTR [eax]
3001b60a:	xor    esi,esi
3001b60c:	mov    DWORD PTR [ebp-0x4],eax
3001b60f:	test   eax,eax
3001b611:	je     0x3001b659
3001b613:	push   ebx
3001b614:	push   edi
3001b615:	lea    edi,[ecx+0xc]
3001b618:	lea    eax,[ebp-0x4]
3001b61b:	push   eax
3001b61c:	call   0x30008fa7
3001b621:	mov    ebx,eax
3001b623:	mov    eax,DWORD PTR [edi]
3001b625:	mov    DWORD PTR [ebp+0x8],eax
3001b628:	test   eax,eax
3001b62a:	je     0x3001b648
3001b62c:	lea    eax,[ebp+0x8]
3001b62f:	push   eax
3001b630:	call   0x30008fa7
3001b635:	push   DWORD PTR [ebx]
3001b637:	mov    ecx,eax
3001b639:	call   0x300091ce
3001b63e:	test   eax,eax
3001b640:	je     0x3001b651
3001b642:	cmp    DWORD PTR [ebp+0x8],0x0
3001b646:	jne    0x3001b62c
3001b648:	push   ebx
3001b649:	mov    ecx,edi
3001b64b:	inc    esi
3001b64c:	call   0x3001b375
3001b651:	cmp    DWORD PTR [ebp-0x4],0x0
3001b655:	jne    0x3001b618
3001b657:	pop    edi
3001b658:	pop    ebx
3001b659:	mov    eax,esi
3001b65b:	pop    esi
3001b65c:	leave  
3001b65d:	ret    0x4
3001b660:	push   esi
3001b661:	push   edi
3001b662:	mov    esi,edx
3001b664:	mov    edi,ecx
3001b666:	call   0x300051c8
3001b66b:	push   0x105
3001b670:	mov    ecx,edi
3001b672:	call   0x30004286
3001b677:	push   eax
3001b678:	xor    eax,eax
3001b67a:	push   eax
3001b67b:	push   eax
3001b67c:	push   esi
3001b67d:	push   eax
3001b67e:	call   DWORD PTR ds:0x300455f8
3001b684:	push   0xffffffff
3001b686:	mov    ecx,edi
3001b688:	call   0x30006c8c
3001b68d:	mov    eax,edi
3001b68f:	pop    edi
3001b690:	pop    esi
3001b691:	ret    
3001b692:	push   ebp
3001b693:	mov    ebp,esp
3001b695:	push   ecx
3001b696:	push   ecx
3001b697:	push   ebx
3001b698:	push   esi
3001b699:	mov    esi,ecx
3001b69b:	push   edi
3001b69c:	mov    eax,DWORD PTR [esi+0x8]
3001b69f:	cmp    DWORD PTR [eax+0x4],0x0
3001b6a3:	jne    0x3001b7b2
3001b6a9:	push   0x3001b2a8
3001b6ae:	lea    ecx,[ebp-0x4]
3001b6b1:	call   0x3000437e
3001b6b6:	push   0x24
3001b6b8:	pop    edx
3001b6b9:	lea    ecx,[ebp-0x8]
3001b6bc:	call   0x3001b660
3001b6c1:	mov    ecx,DWORD PTR [esi+0x8]
3001b6c4:	push   eax
3001b6c5:	lea    eax,[ebp-0x4]
3001b6c8:	push   eax
3001b6c9:	call   0x30015eac
3001b6ce:	lea    ecx,[ebp-0x8]
3001b6d1:	call   0x300051a4
3001b6d6:	lea    ecx,[ebp-0x4]
3001b6d9:	call   0x300051a4
3001b6de:	push   0x3001b8f0
3001b6e3:	lea    ecx,[ebp-0x4]
3001b6e6:	call   0x3000437e
3001b6eb:	push   0x25
3001b6ed:	pop    edx
3001b6ee:	lea    ecx,[ebp-0x8]
3001b6f1:	call   0x3001b660
3001b6f6:	mov    ecx,DWORD PTR [esi+0x8]
3001b6f9:	push   eax
3001b6fa:	lea    eax,[ebp-0x4]
3001b6fd:	push   eax
3001b6fe:	call   0x30015eac
3001b703:	lea    ecx,[ebp-0x8]
3001b706:	call   0x300051a4
3001b70b:	lea    ecx,[ebp-0x4]
3001b70e:	call   0x300051a4
3001b713:	push   0x3001b904
3001b718:	lea    ecx,[ebp-0x4]
3001b71b:	call   0x3000437e
3001b720:	push   0x5
3001b722:	pop    edx
3001b723:	lea    ecx,[ebp-0x8]
3001b726:	call   0x3001b660
3001b72b:	mov    ecx,DWORD PTR [esi+0x8]
3001b72e:	push   eax
3001b72f:	lea    eax,[ebp-0x4]
3001b732:	push   eax
3001b733:	call   0x30015eac
3001b738:	lea    ecx,[ebp-0x8]
3001b73b:	call   0x300051a4
3001b740:	lea    ecx,[ebp-0x4]
3001b743:	call   0x300051a4
3001b748:	push   0x3001b920
3001b74d:	lea    ecx,[ebp-0x4]
3001b750:	call   0x3000437e
3001b755:	push   0x26
3001b757:	pop    edx
3001b758:	lea    ecx,[ebp-0x8]
3001b75b:	call   0x3001b660
3001b760:	mov    ecx,DWORD PTR [esi+0x8]
3001b763:	push   eax
3001b764:	lea    eax,[ebp-0x4]
3001b767:	push   eax
3001b768:	call   0x30015eac
3001b76d:	lea    ecx,[ebp-0x8]
3001b770:	call   0x300051a4
3001b775:	lea    ecx,[ebp-0x4]
3001b778:	call   0x300051a4
3001b77d:	push   0x3001b940
3001b782:	lea    ecx,[ebp-0x4]
3001b785:	call   0x3000437e
3001b78a:	push   0x2b
3001b78c:	pop    edx
3001b78d:	lea    ecx,[ebp-0x8]
3001b790:	call   0x3001b660
3001b795:	mov    ecx,DWORD PTR [esi+0x8]
3001b798:	push   eax
3001b799:	lea    eax,[ebp-0x4]
3001b79c:	push   eax
3001b79d:	call   0x30015eac
3001b7a2:	lea    ecx,[ebp-0x8]
3001b7a5:	call   0x300051a4
3001b7aa:	lea    ecx,[ebp-0x4]
3001b7ad:	call   0x300051a4
3001b7b2:	mov    edi,DWORD PTR [ebp+0x8]
3001b7b5:	push   DWORD PTR [esi+0x8]
3001b7b8:	mov    ecx,edi
3001b7ba:	call   0x300098b1
3001b7bf:	lea    ebx,[esi+0x2c]
3001b7c2:	mov    eax,DWORD PTR [ebx]
3001b7c4:	cmp    DWORD PTR [eax-0xc],0x0
3001b7c8:	je     0x3001b80c
3001b7ca:	push   0x30015ed0
3001b7cf:	lea    ecx,[ebp+0x8]
3001b7d2:	call   0x3000437e
3001b7d7:	push   ebx
3001b7d8:	lea    eax,[ebp+0x8]
3001b7db:	push   eax
3001b7dc:	mov    ecx,edi
3001b7de:	call   0x3000979d
3001b7e3:	lea    ecx,[ebp+0x8]
3001b7e6:	call   0x300051a4
3001b7eb:	push   0x30015eec
3001b7f0:	lea    ecx,[ebp+0x8]
3001b7f3:	call   0x3000437e
3001b7f8:	push   ebx
3001b7f9:	lea    eax,[ebp+0x8]
3001b7fc:	push   eax
3001b7fd:	mov    ecx,edi
3001b7ff:	call   0x3000979d
3001b804:	lea    ecx,[ebp+0x8]
3001b807:	call   0x300051a4
3001b80c:	lea    ebx,[esi+0x44]
3001b80f:	mov    eax,DWORD PTR [ebx]
3001b811:	cmp    DWORD PTR [eax-0xc],0x0
3001b815:	je     0x3001b838
3001b817:	push   0x3001b9f4
3001b81c:	lea    ecx,[ebp+0x8]
3001b81f:	call   0x3000437e
3001b824:	push   ebx
3001b825:	lea    eax,[ebp+0x8]
3001b828:	push   eax
3001b829:	mov    ecx,edi
3001b82b:	call   0x3000979d
3001b830:	lea    ecx,[ebp+0x8]
3001b833:	call   0x300051a4
3001b838:	lea    ebx,[esi+0x28]
3001b83b:	mov    eax,DWORD PTR [ebx]
3001b83d:	cmp    DWORD PTR [eax-0xc],0x0
3001b841:	je     0x3001b864
3001b843:	push   0x30015f10
3001b848:	lea    ecx,[ebp+0x8]
3001b84b:	call   0x3000437e
3001b850:	push   ebx
3001b851:	lea    eax,[ebp+0x8]
3001b854:	push   eax
3001b855:	mov    ecx,edi
3001b857:	call   0x3000979d
3001b85c:	lea    ecx,[ebp+0x8]
3001b85f:	call   0x300051a4
3001b864:	mov    eax,DWORD PTR [esi+0x4]
3001b867:	test   eax,eax
3001b869:	je     0x3001b8d7
3001b86b:	and    DWORD PTR [ebp+0x8],0x0
3001b86f:	add    eax,0x44
3001b872:	push   eax
3001b873:	lea    ecx,[ebp-0x4]
3001b876:	call   0x30004340
3001b87b:	lea    eax,[ebp+0x8]
3001b87e:	push   eax
3001b87f:	push   DWORD PTR [ebp-0x4]
3001b882:	push   0x1c
3001b884:	call   0x3000904c
3001b889:	test   eax,eax
3001b88b:	lea    ecx,[ebp-0x4]
3001b88e:	setns  bl
3001b891:	call   0x300051a4
3001b896:	test   bl,bl
3001b898:	je     0x3001b8ce
3001b89a:	push   0x30015f2c
3001b89f:	lea    ecx,[ebp-0x4]
3001b8a2:	call   0x3000437e
3001b8a7:	push   DWORD PTR [ebp+0x8]
3001b8aa:	lea    ecx,[ebp-0x8]
3001b8ad:	call   0x3000437e
3001b8b2:	push   eax
3001b8b3:	lea    eax,[ebp-0x4]
3001b8b6:	push   eax
3001b8b7:	mov    ecx,edi
3001b8b9:	call   0x3000979d
3001b8be:	lea    ecx,[ebp-0x8]
3001b8c1:	call   0x300051a4
3001b8c6:	lea    ecx,[ebp-0x4]
3001b8c9:	call   0x300051a4
3001b8ce:	push   DWORD PTR [ebp+0x8]
3001b8d1:	call   DWORD PTR ds:0x300454e8
3001b8d7:	mov    ecx,DWORD PTR [ebp+0xc]
3001b8da:	mov    eax,DWORD PTR [ecx]
3001b8dc:	cmp    DWORD PTR [eax-0xc],0x0
3001b8e0:	jne    0x30022f4e
3001b8e6:	pop    edi
3001b8e7:	pop    esi
3001b8e8:	pop    ebx
3001b8e9:	leave  
3001b8ea:	ret    0x8
3001b8ed:	nop
3001b8ee:	nop
3001b8ef:	nop
3001b8f0:	and    al,0x0
3001b8f2:	push   ebx
3001b8f3:	add    BYTE PTR [ecx+0x0],bh
3001b8f6:	jae    0x3001b8f8
3001b8f8:	je     0x3001b8fa
3001b8fa:	add    BYTE PTR gs:[ebp+0x0],ch
3001b8fe:	and    al,0x0
3001b900:	add    BYTE PTR [eax],al
3001b902:	nop
3001b903:	nop
3001b904:	and    al,0x0
3001b906:	dec    ebp
3001b907:	add    BYTE PTR [ecx+0x0],bh
3001b90a:	inc    esp
3001b90b:	add    BYTE PTR [edi+0x0],ch
3001b90e:	arpl   WORD PTR [eax],ax
3001b910:	jne    0x3001b912
3001b912:	ins    DWORD PTR es:[edi],dx
3001b913:	add    BYTE PTR [ebp+0x0],ah
3001b916:	outs   dx,BYTE PTR ds:[esi]
3001b917:	add    BYTE PTR [eax+eax*1+0x73],dh
3001b91b:	add    BYTE PTR [eax+eax*1],ah
3001b91e:	add    BYTE PTR [eax],al
3001b920:	and    al,0x0
3001b922:	push   eax
3001b923:	add    BYTE PTR [edx+0x0],dh
3001b926:	outs   dx,DWORD PTR ds:[esi]
3001b927:	add    BYTE PTR [edi+0x0],ah
3001b92a:	jb     0x3001b92c
3001b92c:	popa   
3001b92d:	add    BYTE PTR [ebp+0x0],ch
3001b930:	inc    esi
3001b931:	add    BYTE PTR [ecx+0x0],ch
3001b934:	ins    BYTE PTR es:[edi],dx
3001b935:	add    BYTE PTR [ebp+0x0],ah
3001b938:	jae    0x3001b93a
3001b93a:	and    al,0x0
3001b93c:	add    BYTE PTR [eax],al
3001b93e:	nop
3001b93f:	nop
3001b940:	and    al,0x0
3001b942:	inc    ebx
3001b943:	add    BYTE PTR [edi+0x0],ch
3001b946:	ins    DWORD PTR es:[edi],dx
3001b947:	add    BYTE PTR [ebp+0x0],ch
3001b94a:	outs   dx,DWORD PTR ds:[esi]
3001b94b:	add    BYTE PTR [esi+0x0],ch
3001b94e:	inc    esi
3001b94f:	add    BYTE PTR [ecx+0x0],ch
3001b952:	ins    BYTE PTR es:[edi],dx
3001b953:	add    BYTE PTR [ebp+0x0],ah
3001b956:	jae    0x3001b958
3001b958:	and    al,0x0
3001b95a:	add    BYTE PTR [eax],al
3001b95c:	push   ebp
3001b95d:	mov    ebp,esp
3001b95f:	sub    esp,0x38
3001b962:	push   esi
3001b963:	mov    esi,ecx
3001b965:	push   edi
3001b966:	lea    ecx,[ebp-0x38]
3001b969:	call   0x30009718
3001b96e:	push   0x30006ce8
3001b973:	lea    ecx,[ebp-0x4]
3001b976:	mov    DWORD PTR [ebp-0x38],0x300093bc
3001b97d:	call   0x300089ae
3001b982:	lea    eax,[ebp-0x4]
3001b985:	push   eax
3001b986:	lea    eax,[ebp-0x38]
3001b989:	push   eax
3001b98a:	mov    ecx,esi
3001b98c:	call   0x3001b692
3001b991:	lea    ecx,[ebp-0x4]
3001b994:	call   0x300051a4
3001b999:	lea    edi,[esi+0x44]
3001b99c:	mov    eax,DWORD PTR [edi]
3001b99e:	cmp    DWORD PTR [eax-0xc],0x0
3001b9a2:	je     0x3001b9cf
3001b9a4:	push   edi
3001b9a5:	lea    ecx,[ebp-0x38]
3001b9a8:	call   0x300093f0
3001b9ad:	push   0x3001b9f4
3001b9b2:	lea    ecx,[ebp-0x4]
3001b9b5:	call   0x3000437e
3001b9ba:	push   edi
3001b9bb:	lea    eax,[ebp-0x4]
3001b9be:	push   eax
3001b9bf:	lea    ecx,[ebp-0x38]
3001b9c2:	call   0x3000979d
3001b9c7:	lea    ecx,[ebp-0x4]
3001b9ca:	call   0x300051a4
3001b9cf:	lea    eax,[esi+0x40]
3001b9d2:	push   eax
3001b9d3:	lea    ecx,[ebp-0x38]
3001b9d6:	call   0x300093f0
3001b9db:	lea    eax,[esi+0x48]
3001b9de:	push   eax
3001b9df:	lea    ecx,[ebp-0x38]
3001b9e2:	call   0x300093f0
3001b9e7:	lea    ecx,[ebp-0x34]
3001b9ea:	call   0x30008aad
3001b9ef:	pop    edi
3001b9f0:	pop    esi
3001b9f1:	leave  
3001b9f2:	ret    
3001b9f3:	nop
3001b9f4:	and    al,0x0
3001b9f6:	inc    ecx
3001b9f7:	add    BYTE PTR [eax+0x0],dh
3001b9fa:	jo     0x3001b9fc
3001b9fc:	ins    BYTE PTR es:[edi],dx
3001b9fd:	add    BYTE PTR [ecx+0x0],ch
3001ba00:	arpl   WORD PTR [eax],ax
3001ba02:	popa   
3001ba03:	add    BYTE PTR [eax+eax*1+0x69],dh
3001ba07:	add    BYTE PTR [edi+0x0],ch
3001ba0a:	outs   dx,BYTE PTR ds:[esi]
3001ba0b:	add    BYTE PTR [ebp+0x0],al
3001ba0e:	js     0x3001ba10
3001ba10:	je     0x3001ba12
3001ba12:	add    BYTE PTR gs:[esi+0x0],ch
3001ba16:	jae    0x3001ba18
3001ba18:	imul   eax,DWORD PTR [eax],0x6e006f
3001ba1e:	jae    0x3001ba20
3001ba20:	inc    esi
3001ba21:	add    BYTE PTR [edi+0x0],ch
3001ba24:	ins    BYTE PTR es:[edi],dx
3001ba25:	add    BYTE PTR [eax+eax*1+0x65],ah
3001ba29:	add    BYTE PTR [edx+0x0],dh
3001ba2c:	and    al,0x0
3001ba2e:	add    BYTE PTR [eax],al
3001ba30:	push   0x4
3001ba32:	mov    eax,0x3003e15c
3001ba37:	call   0x3000116a
3001ba3c:	mov    esi,ecx
3001ba3e:	mov    DWORD PTR [ebp-0x10],esi
3001ba41:	push   0x3004306c
3001ba46:	call   0x30004256
3001ba4b:	push   DWORD PTR [ebp+0x8]
3001ba4e:	and    DWORD PTR [ebp-0x4],0x0
3001ba52:	mov    ecx,esi
3001ba54:	call   0x30004361
3001ba59:	test   al,al
3001ba5b:	jne    0x3001ba67
3001ba5d:	push   DWORD PTR [ebp+0x8]
3001ba60:	mov    ecx,esi
3001ba62:	call   0x3001bbc8
3001ba67:	mov    eax,esi
3001ba69:	call   0x3000119d
3001ba6e:	ret    0x4
3001ba71:	push   ebp
3001ba72:	mov    ebp,esp
3001ba74:	sub    esp,0x1c
3001ba77:	mov    eax,DWORD PTR [ebp+0x10]
3001ba7a:	push   esi
3001ba7b:	push   edi
3001ba7c:	push   0x20019
3001ba81:	push   DWORD PTR [eax]
3001ba83:	xor    edi,edi
3001ba85:	push   DWORD PTR [ebp+0xc]
3001ba88:	lea    ecx,[ebp-0x18]
3001ba8b:	mov    DWORD PTR [ebp-0xc],edi
3001ba8e:	mov    DWORD PTR [ebp-0x8],edi
3001ba91:	mov    DWORD PTR [ebp-0x18],edi
3001ba94:	mov    DWORD PTR [ebp-0x14],edi
3001ba97:	mov    DWORD PTR [ebp-0x10],edi
3001ba9a:	call   0x300051d9
3001ba9f:	test   eax,eax
3001baa1:	jg     0x300248c0
3001baa7:	js     0x300248cf
3001baad:	push   0x3001bb00
3001bab2:	lea    ecx,[ebp+0x10]
3001bab5:	call   0x3001ba30
3001baba:	lea    eax,[ebp-0xc]
3001babd:	push   eax
3001babe:	lea    edx,[ebp+0x10]
3001bac1:	lea    ecx,[ebp-0x18]
3001bac4:	call   0x3000571e
3001bac9:	lea    ecx,[ebp+0x10]
3001bacc:	mov    esi,eax
3001bace:	call   0x300051a4
3001bad3:	test   esi,esi
3001bad5:	jns    0x3001b203
3001badb:	cmp    BYTE PTR ds:0x300430f1,0x0
3001bae2:	jne    0x300248f1
3001bae8:	mov    esi,DWORD PTR [ebp+0x8]
3001baeb:	mov    DWORD PTR [esi],edi
3001baed:	mov    DWORD PTR [esi+0x4],edi
3001baf0:	lea    ecx,[ebp-0x18]
3001baf3:	call   0x300051ae
3001baf8:	pop    edi
3001baf9:	mov    eax,esi
3001bafb:	pop    esi
3001bafc:	leave  
3001bafd:	ret    0xc
3001bb00:	inc    ebx
3001bb01:	outs   dx,DWORD PTR ds:[esi]
3001bb02:	outs   dx,BYTE PTR ds:[esi]
3001bb03:	imul   sp,WORD PTR [edi+0x75],0x6172
3001bb09:	je     0x3001bb74
3001bb0b:	outs   dx,DWORD PTR ds:[esi]
3001bb0c:	outs   dx,BYTE PTR ds:[esi]
3001bb0d:	inc    ebx
3001bb0e:	push   0x65676e61
3001bb13:	add    BYTE PTR fs:[ebp-0x75],dl
3001bb17:	in     al,dx
3001bb18:	sub    esp,0x20
3001bb1b:	push   esi
3001bb1c:	mov    esi,ecx
3001bb1e:	push   edi
3001bb1f:	mov    eax,DWORD PTR [esi]
3001bb21:	lea    ecx,[ebp-0xc]
3001bb24:	push   ecx
3001bb25:	mov    ecx,esi
3001bb27:	call   DWORD PTR [eax+0x8]
3001bb2a:	cmp    DWORD PTR [ebp-0x8],0x0
3001bb2e:	je     0x3001da38
3001bb34:	lea    eax,[esi+0x44]
3001bb37:	push   eax
3001bb38:	lea    ecx,[ebp-0x4]
3001bb3b:	call   0x30004340
3001bb40:	lea    eax,[ebp-0x4]
3001bb43:	push   eax
3001bb44:	push   0x80000001
3001bb49:	lea    eax,[ebp-0x14]
3001bb4c:	push   eax
3001bb4d:	call   0x3001ba71
3001bb52:	lea    ecx,[ebp-0x4]
3001bb55:	call   0x300051a4
3001bb5a:	mov    edi,DWORD PTR ds:0x3004528c
3001bb60:	lea    eax,[ebp-0x14]
3001bb63:	push   eax
3001bb64:	lea    eax,[ebp-0xc]
3001bb67:	push   eax
3001bb68:	call   edi
3001bb6a:	cmp    eax,0xffffffff
3001bb6d:	je     0x3001da31
3001bb73:	lea    eax,[esi+0x88]
3001bb79:	push   eax
3001bb7a:	push   DWORD PTR [esi+0x84]
3001bb80:	lea    eax,[ebp-0x1c]
3001bb83:	push   eax
3001bb84:	call   0x3001ba71
3001bb89:	lea    eax,[ebp-0x1c]
3001bb8c:	push   eax
3001bb8d:	lea    eax,[ebp-0xc]
3001bb90:	push   eax
3001bb91:	call   edi
3001bb93:	cmp    eax,0xffffffff
3001bb96:	je     0x3001da31
3001bb9c:	lea    eax,[esi+0x18]
3001bb9f:	push   eax
3001bba0:	lea    eax,[ebp-0xc]
3001bba3:	push   eax
3001bba4:	call   edi
3001bba6:	cmp    eax,0xffffffff
3001bba9:	setne  al
3001bbac:	pop    edi
3001bbad:	pop    esi
3001bbae:	leave  
3001bbaf:	ret    
3001bbb0:	push   ebp
3001bbb1:	mov    ebp,esp
3001bbb3:	xor    eax,eax
3001bbb5:	push   eax
3001bbb6:	push   eax
3001bbb7:	push   0xffffffff
3001bbb9:	push   DWORD PTR [ebp+0x8]
3001bbbc:	push   eax
3001bbbd:	push   0x3
3001bbbf:	call   DWORD PTR ds:0x30045170
3001bbc5:	dec    eax
3001bbc6:	pop    ebp
3001bbc7:	ret    
3001bbc8:	push   ebp
3001bbc9:	mov    ebp,esp
3001bbcb:	cmp    DWORD PTR [ebp+0x8],0x0
3001bbcf:	push   esi
3001bbd0:	push   edi
3001bbd1:	mov    edi,ecx
3001bbd3:	je     0x3001bc0d
3001bbd5:	push   DWORD PTR [ebp+0x8]
3001bbd8:	call   0x3001bbb0
3001bbdd:	pop    ecx
3001bbde:	mov    esi,eax
3001bbe0:	mov    ecx,edi
3001bbe2:	test   esi,esi
3001bbe4:	jle    0x3001bc11
3001bbe6:	push   esi
3001bbe7:	call   0x30004286
3001bbec:	push   esi
3001bbed:	push   eax
3001bbee:	push   0xffffffff
3001bbf0:	push   DWORD PTR [ebp+0x8]
3001bbf3:	push   0x0
3001bbf5:	push   0x3
3001bbf7:	call   DWORD PTR ds:0x30045170
3001bbfd:	push   esi
3001bbfe:	mov    ecx,edi
3001bc00:	call   0x30004147
3001bc05:	mov    eax,edi
3001bc07:	pop    edi
3001bc08:	pop    esi
3001bc09:	pop    ebp
3001bc0a:	ret    0x4
3001bc0d:	xor    esi,esi
3001bc0f:	jmp    0x3001bbe0
3001bc11:	call   0x30004564
3001bc16:	jmp    0x3001bc05
3001bc18:	push   ebp
3001bc19:	mov    ebp,esp
3001bc1b:	sub    esp,0x18
3001bc1e:	xor    eax,eax
3001bc20:	push   edi
3001bc21:	mov    edi,ecx
3001bc23:	cmp    BYTE PTR [edi+0xd],al
3001bc26:	jne    0x3001bdc7
3001bc2c:	mov    DWORD PTR [ebp-0x18],eax
3001bc2f:	mov    DWORD PTR [ebp-0x14],eax
3001bc32:	mov    DWORD PTR [ebp-0x10],eax
3001bc35:	mov    eax,DWORD PTR [edi+0x4]
3001bc38:	push   esi
3001bc39:	add    eax,0x48
3001bc3c:	push   eax
3001bc3d:	lea    ecx,[ebp-0x8]
3001bc40:	call   0x30004340
3001bc45:	push   0x2001f
3001bc4a:	push   DWORD PTR [ebp-0x8]
3001bc4d:	lea    ecx,[ebp-0x18]
3001bc50:	push   0x80000001
3001bc55:	call   0x300051d9
3001bc5a:	mov    esi,eax
3001bc5c:	test   esi,esi
3001bc5e:	jg     0x30022f90
3001bc64:	lea    ecx,[ebp-0x8]
3001bc67:	call   0x300051a4
3001bc6c:	test   esi,esi
3001bc6e:	js     0x3001bdbc
3001bc74:	push   ebx
3001bc75:	lea    ecx,[ebp-0x8]
3001bc78:	call   0x300051c8
3001bc7d:	push   0x3000e6b0
3001bc82:	lea    ecx,[ebp-0x4]
3001bc85:	call   0x3000437e
3001bc8a:	lea    eax,[ebp-0x8]
3001bc8d:	push   eax
3001bc8e:	lea    edx,[ebp-0x4]
3001bc91:	lea    ecx,[ebp-0x18]
3001bc94:	call   0x3000e5e4
3001bc99:	test   eax,eax
3001bc9b:	lea    ecx,[ebp-0x4]
3001bc9e:	setns  bl
3001bca1:	call   0x300051a4
3001bca6:	test   bl,bl
3001bca8:	pop    ebx
3001bca9:	je     0x3001bcc7
3001bcab:	push   DWORD PTR [ebp-0x8]
3001bcae:	lea    ecx,[ebp-0xc]
3001bcb1:	call   0x300089ae
3001bcb6:	push   eax
3001bcb7:	lea    ecx,[edi+0x28]
3001bcba:	call   0x300014c1
3001bcbf:	lea    ecx,[ebp-0xc]
3001bcc2:	call   0x300051a4
3001bcc7:	push   0x3000e654
3001bccc:	lea    ecx,[ebp-0x4]
3001bccf:	call   0x3000437e
3001bcd4:	lea    eax,[edi+0x40]
3001bcd7:	push   eax
3001bcd8:	lea    edx,[ebp-0x4]
3001bcdb:	lea    ecx,[ebp-0x18]
3001bcde:	call   0x3000e5e4
3001bce3:	lea    ecx,[ebp-0x4]
3001bce6:	mov    esi,eax
3001bce8:	call   0x300051a4
3001bced:	test   esi,esi
3001bcef:	js     0x3001bdb4
3001bcf5:	push   0x3000e6e0
3001bcfa:	lea    ecx,[ebp-0x4]
3001bcfd:	call   0x3000437e
3001bd02:	lea    eax,[edi+0x3c]
3001bd05:	push   eax
3001bd06:	lea    edx,[ebp-0x4]
3001bd09:	lea    ecx,[ebp-0x18]
3001bd0c:	call   0x3000e5e4
3001bd11:	lea    ecx,[ebp-0x4]
3001bd14:	mov    esi,eax
3001bd16:	call   0x300051a4
3001bd1b:	test   esi,esi
3001bd1d:	js     0x3001bdb4
3001bd23:	push   0x3000e678
3001bd28:	lea    ecx,[ebp-0x4]
3001bd2b:	call   0x3000437e
3001bd30:	lea    eax,[edi+0x44]
3001bd33:	push   eax
3001bd34:	lea    edx,[ebp-0x4]
3001bd37:	lea    ecx,[ebp-0x18]
3001bd3a:	call   0x3000e5e4
3001bd3f:	lea    ecx,[ebp-0x4]
3001bd42:	mov    esi,eax
3001bd44:	call   0x300051a4
3001bd49:	test   esi,esi
3001bd4b:	js     0x3001bdb4
3001bd4d:	lea    ecx,[ebp-0x4]
3001bd50:	call   0x300051c8
3001bd55:	mov    eax,DWORD PTR [edi+0x4]
3001bd58:	add    eax,0x48
3001bd5b:	push   eax
3001bd5c:	lea    ecx,[ebp-0xc]
3001bd5f:	call   0x30004340
3001bd64:	push   0x3001b2bc
3001bd69:	push   DWORD PTR [ebp-0xc]
3001bd6c:	lea    eax,[ebp-0x4]
3001bd6f:	push   0x3000522c
3001bd74:	push   eax
3001bd75:	call   0x30005153
3001bd7a:	add    esp,0x10
3001bd7d:	lea    ecx,[ebp-0xc]
3001bd80:	call   0x300051a4
3001bd85:	lea    ecx,[ebp-0xc]
3001bd88:	call   0x300051c8
3001bd8d:	push   0x1
3001bd8f:	lea    eax,[edi+0x4c]
3001bd92:	push   eax
3001bd93:	lea    eax,[ebp-0xc]
3001bd96:	push   eax
3001bd97:	lea    eax,[ebp-0x4]
3001bd9a:	push   eax
3001bd9b:	call   0x3001bdca
3001bda0:	lea    ecx,[ebp-0xc]
3001bda3:	call   0x300051a4
3001bda8:	lea    ecx,[ebp-0x4]
3001bdab:	mov    BYTE PTR [edi+0xd],0x1
3001bdaf:	call   0x300051a4
3001bdb4:	lea    ecx,[ebp-0x8]
3001bdb7:	call   0x300051a4
3001bdbc:	lea    ecx,[ebp-0x18]
3001bdbf:	call   0x300051ae
3001bdc4:	mov    eax,esi
3001bdc6:	pop    esi
3001bdc7:	pop    edi
3001bdc8:	leave  
3001bdc9:	ret    
3001bdca:	push   ebp
3001bdcb:	mov    ebp,esp
3001bdcd:	sub    esp,0x26c
3001bdd3:	mov    eax,ds:0x30043050
3001bdd8:	xor    eax,ebp
3001bdda:	mov    DWORD PTR [ebp-0x4],eax
3001bddd:	mov    eax,DWORD PTR [ebp+0x10]
3001bde0:	push   ebx
3001bde1:	mov    ebx,DWORD PTR [ebp+0xc]
3001bde4:	push   esi
3001bde5:	push   edi
3001bde6:	mov    edi,DWORD PTR [ebp+0x8]
3001bde9:	mov    ecx,eax
3001bdeb:	mov    DWORD PTR [ebp-0x248],ebx
3001bdf1:	mov    DWORD PTR [ebp-0x24c],eax
3001bdf7:	call   0x30007014
3001bdfc:	push   0x20019
3001be01:	push   DWORD PTR [edi]
3001be03:	xor    esi,esi
3001be05:	push   0x80000001
3001be0a:	lea    ecx,[ebp-0x234]
3001be10:	mov    DWORD PTR [ebp-0x234],esi
3001be16:	mov    DWORD PTR [ebp-0x230],esi
3001be1c:	mov    DWORD PTR [ebp-0x22c],esi
3001be22:	call   0x300051d9
3001be27:	mov    edx,eax
3001be29:	test   edx,edx
3001be2b:	jle    0x3001be38
3001be2d:	movzx  edx,dx
3001be30:	or     edx,0x80070000
3001be36:	test   edx,edx
3001be38:	jns    0x30022409
3001be3e:	cmp    dx,0x2
3001be42:	jne    0x300223f8
3001be48:	lea    ecx,[ebp-0x234]
3001be4e:	call   0x300051ae
3001be53:	mov    ecx,DWORD PTR [ebp-0x4]
3001be56:	pop    edi
3001be57:	pop    esi
3001be58:	xor    ecx,ebp
3001be5a:	pop    ebx
3001be5b:	call   0x3000115c
3001be60:	leave  
3001be61:	ret    0x10
3001be64:	push   ebp
3001be65:	mov    ebp,esp
3001be67:	sub    esp,0xc
3001be6a:	push   esi
3001be6b:	mov    esi,ecx
3001be6d:	cmp    DWORD PTR [esi+0x4],0x0
3001be71:	je     0x3001bf0a
3001be77:	push   edi
3001be78:	lea    ecx,[ebp-0x8]
3001be7b:	call   0x300051c8
3001be80:	mov    eax,DWORD PTR [esi+0x4]
3001be83:	add    eax,0x44
3001be86:	push   eax
3001be87:	lea    ecx,[ebp-0x4]
3001be8a:	call   0x30004340
3001be8f:	push   0x300056d8
3001be94:	push   DWORD PTR [ebp-0x4]
3001be97:	mov    edi,0x3000522c
3001be9c:	lea    eax,[ebp-0x8]
3001be9f:	push   edi
3001bea0:	push   eax
3001bea1:	call   0x30005153
3001bea6:	add    esp,0x10
3001bea9:	lea    ecx,[ebp-0x4]
3001beac:	call   0x300051a4
3001beb1:	lea    ecx,[ebp-0x4]
3001beb4:	call   0x300051c8
3001beb9:	mov    eax,DWORD PTR [esi+0x4]
3001bebc:	add    eax,0x44
3001bebf:	push   eax
3001bec0:	lea    ecx,[ebp-0xc]
3001bec3:	call   0x30004340
3001bec8:	push   0x3001bf10
3001becd:	push   DWORD PTR [ebp-0xc]
3001bed0:	lea    eax,[ebp-0x4]
3001bed3:	push   edi
3001bed4:	push   eax
3001bed5:	call   0x30005153
3001beda:	add    esp,0x10
3001bedd:	lea    ecx,[ebp-0xc]
3001bee0:	call   0x300051a4
3001bee5:	push   DWORD PTR [ebp+0x8]
3001bee8:	lea    eax,[esi+0x4c]
3001beeb:	push   eax
3001beec:	lea    eax,[ebp-0x4]
3001beef:	push   eax
3001bef0:	lea    eax,[ebp-0x8]
3001bef3:	push   eax
3001bef4:	call   0x3001bdca
3001bef9:	lea    ecx,[ebp-0x4]
3001befc:	call   0x300051a4
3001bf01:	lea    ecx,[ebp-0x8]
3001bf04:	call   0x300051a4
3001bf09:	pop    edi
3001bf0a:	pop    esi
3001bf0b:	leave  
3001bf0c:	ret    0x4
3001bf0f:	nop
3001bf10:	inc    ebp
3001bf11:	add    BYTE PTR [eax+0x0],bh
3001bf14:	je     0x3001bf16
3001bf16:	add    BYTE PTR gs:[esi+0x0],ch
3001bf1a:	jae    0x3001bf1c
3001bf1c:	imul   eax,DWORD PTR [eax],0x6e006f
3001bf22:	dec    ebp
3001bf23:	add    BYTE PTR [ecx+0x0],ah
3001bf26:	outs   dx,BYTE PTR ds:[esi]
3001bf27:	add    BYTE PTR [ecx+0x0],ah
3001bf2a:	add    BYTE PTR [di+0x0],ah
3001bf2e:	jb     0x3001bf30
3001bf30:	pop    esp
3001bf31:	add    BYTE PTR [ebp+0x0],al
3001bf34:	js     0x3001bf36
3001bf36:	je     0x3001bf38
3001bf38:	add    BYTE PTR gs:[esi+0x0],ch
3001bf3c:	jae    0x3001bf3e
3001bf3e:	imul   eax,DWORD PTR [eax],0x6e006f
3001bf44:	push   esp
3001bf45:	add    BYTE PTR [ecx+0x0],bh
3001bf48:	jo     0x3001bf4a
3001bf4a:	add    BYTE PTR gs:[ebx+0x0],dh
3001bf4e:	add    BYTE PTR [eax],al
3001bf50:	push   ebp
3001bf51:	mov    ebp,esp
3001bf53:	mov    eax,DWORD PTR [ebp+0x10]
3001bf56:	push   esi
3001bf57:	mov    esi,ecx
3001bf59:	push   ecx
3001bf5a:	mov    DWORD PTR [esi+0x4],eax
3001bf5d:	mov    eax,DWORD PTR [ebp+0x14]
3001bf60:	mov    DWORD PTR [esi+0x8],eax
3001bf63:	mov    DWORD PTR [esi],0x3000eb38
3001bf69:	xor    eax,eax
3001bf6b:	lea    ecx,[esi+0x24]
3001bf6e:	mov    DWORD PTR [esi+0xc],eax
3001bf71:	mov    DWORD PTR [esi+0x10],eax
3001bf74:	mov    DWORD PTR [esi+0x14],eax
3001bf77:	mov    DWORD PTR [esi+0x18],eax
3001bf7a:	mov    DWORD PTR [esi+0x1c],eax
3001bf7d:	mov    DWORD PTR [esi+0x20],0xa
3001bf84:	call   0x3000704d
3001bf89:	mov    al,BYTE PTR [ebp+0x8]
3001bf8c:	mov    BYTE PTR [esi+0x3c],al
3001bf8f:	mov    al,BYTE PTR [ebp+0xc]
3001bf92:	mov    BYTE PTR [esi+0x3d],al
3001bf95:	mov    eax,esi
3001bf97:	pop    esi
3001bf98:	pop    ebp
3001bf99:	ret    0x10
3001bf9c:	push   ebp
3001bf9d:	mov    ebp,esp
3001bf9f:	sub    esp,0x74
3001bfa2:	push   ebx
3001bfa3:	push   esi
3001bfa4:	push   edi
3001bfa5:	mov    edi,ecx
3001bfa7:	xor    ebx,ebx
3001bfa9:	mov    DWORD PTR [ebp-0x10],edi
3001bfac:	cmp    DWORD PTR [edi+0x4],ebx
3001bfaf:	je     0x3002348c
3001bfb5:	mov    eax,DWORD PTR [edi+0x10]
3001bfb8:	shr    eax,0x2
3001bfbb:	test   al,0x1
3001bfbd:	jne    0x30023493
3001bfc3:	lea    ecx,[ebp-0x2c]
3001bfc6:	call   0x300051c8
3001bfcb:	lea    eax,[edi+0x7c]
3001bfce:	push   eax
3001bfcf:	lea    eax,[edi+0x64]
3001bfd2:	push   eax
3001bfd3:	push   ebx
3001bfd4:	push   ebx
3001bfd5:	lea    ecx,[ebp-0x70]
3001bfd8:	call   0x3001bf50
3001bfdd:	mov    eax,DWORD PTR [edi+0x4]
3001bfe0:	add    eax,0x48
3001bfe3:	mov    esi,ebx
3001bfe5:	push   eax
3001bfe6:	lea    ecx,[ebp-0x8]
3001bfe9:	mov    DWORD PTR [ebp-0x1c],ebx
3001bfec:	mov    DWORD PTR [ebp-0x18],ebx
3001bfef:	mov    DWORD PTR [ebp-0x14],ebx
3001bff2:	mov    DWORD PTR [ebp-0x4],esi
3001bff5:	call   0x30004340
3001bffa:	push   0x2001f
3001bfff:	push   DWORD PTR [ebp-0x8]
3001c002:	lea    ecx,[ebp-0x1c]
3001c005:	push   0x80000001
3001c00a:	call   0x300051d9
3001c00f:	mov    edi,eax
3001c011:	test   edi,edi
3001c013:	jg     0x3002349a
3001c019:	lea    ecx,[ebp-0x8]
3001c01c:	call   0x300051a4
3001c021:	test   edi,edi
3001c023:	js     0x3001c0e3
3001c029:	push   0x3000e5a4
3001c02e:	lea    ecx,[ebp-0x8]
3001c031:	call   0x3000437e
3001c036:	lea    eax,[ebp-0xc]
3001c039:	push   eax
3001c03a:	lea    eax,[ebp-0x4]
3001c03d:	push   eax
3001c03e:	lea    edx,[ebp-0x8]
3001c041:	lea    ecx,[ebp-0x1c]
3001c044:	call   0x3001b0b2
3001c049:	lea    ecx,[ebp-0x8]
3001c04c:	mov    esi,eax
3001c04e:	call   0x300051a4
3001c053:	test   esi,esi
3001c055:	mov    esi,DWORD PTR [ebp-0x4]
3001c058:	js     0x3001c0e3
3001c05e:	mov    edx,DWORD PTR [ebp-0xc]
3001c061:	test   edx,edx
3001c063:	je     0x3001c0e3
3001c065:	push   ecx
3001c066:	lea    eax,[ebp-0x2c]
3001c069:	push   eax
3001c06a:	mov    ecx,esi
3001c06c:	call   0x3001b125
3001c071:	test   eax,eax
3001c073:	js     0x3001c0e3
3001c075:	mov    eax,DWORD PTR [ebp-0x10]
3001c078:	add    eax,0x98
3001c07d:	push   eax
3001c07e:	lea    ecx,[ebp-0x70]
3001c081:	call   0x3001b57f
3001c086:	test   eax,eax
3001c088:	js     0x3001c0e3
3001c08a:	mov    edi,DWORD PTR [ebp-0x64]
3001c08d:	test   edi,edi
3001c08f:	je     0x300234a8
3001c095:	push   DWORD PTR [edi+0x8]
3001c098:	lea    ecx,[ebp-0x2c]
3001c09b:	call   0x300091ce
3001c0a0:	test   eax,eax
3001c0a2:	jne    0x3001c0e3
3001c0a4:	mov    eax,DWORD PTR [ebp-0x28]
3001c0a7:	cmp    eax,DWORD PTR [edi+0xc]
3001c0aa:	jne    0x3001c0e3
3001c0ac:	mov    eax,DWORD PTR [ebp-0x20]
3001c0af:	cmp    eax,DWORD PTR [edi+0x14]
3001c0b2:	jne    0x3001c0e3
3001c0b4:	mov    eax,DWORD PTR [ebp-0x24]
3001c0b7:	cmp    eax,DWORD PTR [edi+0x10]
3001c0ba:	jne    0x3001c0e3
3001c0bc:	push   esi
3001c0bd:	call   DWORD PTR ds:0x300453d4
3001c0c3:	pop    ecx
3001c0c4:	lea    ecx,[ebp-0x1c]
3001c0c7:	call   0x300051ae
3001c0cc:	lea    ecx,[ebp-0x70]
3001c0cf:	call   0x3000eb1e
3001c0d4:	lea    ecx,[ebp-0x2c]
3001c0d7:	call   0x300051a4
3001c0dc:	mov    al,bl
3001c0de:	pop    edi
3001c0df:	pop    esi
3001c0e0:	pop    ebx
3001c0e1:	leave  
3001c0e2:	ret    
3001c0e3:	mov    bl,0x1
3001c0e5:	jmp    0x3001c0bc
3001c0e7:	push   ebp
3001c0e8:	mov    ebp,esp
3001c0ea:	push   ecx
3001c0eb:	push   ebx
3001c0ec:	push   esi
3001c0ed:	push   edi
3001c0ee:	xor    edi,edi
3001c0f0:	cmp    BYTE PTR ds:0x300430f1,0x0
3001c0f7:	mov    esi,ecx
3001c0f9:	jne    0x30021b46
3001c0ff:	mov    ecx,esi
3001c101:	call   0x3001bf9c
3001c106:	test   al,al
3001c108:	jne    0x30021b5e
3001c10e:	mov    ecx,esi
3001c110:	call   0x3001bc18
3001c115:	test   eax,eax
3001c117:	js     0x30021b5e
3001c11d:	lea    ebx,[esi+0x44]
3001c120:	mov    eax,DWORD PTR [ebx]
3001c122:	cmp    DWORD PTR [eax-0xc],0x0
3001c126:	je     0x30021b74
3001c12c:	mov    eax,DWORD PTR [esi+0x40]
3001c12f:	cmp    DWORD PTR [eax-0xc],0x0
3001c133:	je     0x30021b91
3001c139:	lea    ecx,[esi+0x2c]
3001c13c:	mov    eax,DWORD PTR [ecx]
3001c13e:	cmp    DWORD PTR [eax-0xc],0x0
3001c142:	jne    0x3001c18f
3001c144:	mov    ecx,DWORD PTR [esi+0x4]
3001c147:	lea    eax,[esi+0x20]
3001c14a:	mov    edx,DWORD PTR [ecx]
3001c14c:	push   eax
3001c14d:	call   DWORD PTR [edx+0x14]
3001c150:	push   eax
3001c151:	lea    ecx,[esi+0x2c]
3001c154:	call   0x300014c1
3001c159:	lea    ecx,[esi+0x28]
3001c15c:	mov    eax,DWORD PTR [ecx]
3001c15e:	cmp    DWORD PTR [eax-0xc],0x0
3001c162:	je     0x30021baf
3001c168:	push   ecx
3001c169:	mov    ecx,DWORD PTR [esi+0x4]
3001c16c:	add    ecx,0x2c
3001c16f:	call   0x300014c1
3001c174:	mov    ecx,esi
3001c176:	call   0x3001b95c
3001c17b:	cmp    BYTE PTR ds:0x300430f1,0x0
3001c182:	jne    0x30021bc8
3001c188:	mov    eax,edi
3001c18a:	pop    edi
3001c18b:	pop    esi
3001c18c:	pop    ebx
3001c18d:	leave  
3001c18e:	ret    
3001c18f:	push   ecx
3001c190:	mov    ecx,DWORD PTR [esi+0x4]
3001c193:	add    ecx,0x30
3001c196:	jmp    0x3001c154
3001c198:	push   ebp
3001c199:	mov    ebp,esp
3001c19b:	sub    esp,0x18
3001c19e:	push   ebx
3001c19f:	mov    ebx,ecx
3001c1a1:	push   edi
3001c1a2:	lea    edi,[ebx+0x30]
3001c1a5:	xor    ecx,ecx
3001c1a7:	mov    eax,DWORD PTR [edi]
3001c1a9:	cmp    DWORD PTR [eax-0xc],ecx
3001c1ac:	jne    0x3001c2dd
3001c1b2:	mov    DWORD PTR [ebp-0x18],ecx
3001c1b5:	mov    DWORD PTR [ebp-0x14],ecx
3001c1b8:	mov    DWORD PTR [ebp-0x10],ecx
3001c1bb:	push   esi
3001c1bc:	lea    ecx,[ebp-0x4]
3001c1bf:	call   0x300051c8
3001c1c4:	push   DWORD PTR [ebp+0x8]
3001c1c7:	lea    ecx,[ebp-0x8]
3001c1ca:	call   0x30004340
3001c1cf:	push   0x20019
3001c1d4:	push   DWORD PTR [ebx+0x34]
3001c1d7:	lea    ecx,[ebp-0x18]
3001c1da:	push   0x80000002
3001c1df:	call   0x300051d9
3001c1e4:	test   eax,eax
3001c1e6:	js     0x300249fa
3001c1ec:	push   0x3001c2e8
3001c1f1:	lea    ecx,[ebp-0xc]
3001c1f4:	call   0x3000437e
3001c1f9:	lea    eax,[ebp-0x4]
3001c1fc:	push   eax
3001c1fd:	lea    edx,[ebp-0xc]
3001c200:	lea    ecx,[ebp-0x18]
3001c203:	call   0x3000e5e4
3001c208:	lea    ecx,[ebp-0xc]
3001c20b:	mov    esi,eax
3001c20d:	call   0x300051a4
3001c212:	test   esi,esi
3001c214:	js     0x300249fa
3001c21a:	lea    ecx,[ebp-0x4]
3001c21d:	call   0x30018183
3001c222:	test   eax,eax
3001c224:	js     0x300249fa
3001c22a:	push   0x104
3001c22f:	lea    ecx,[ebp-0x8]
3001c232:	call   0x30004286
3001c237:	push   eax
3001c238:	call   DWORD PTR ds:0x30045630
3001c23e:	push   0xffffffff
3001c240:	lea    ecx,[ebp-0x8]
3001c243:	call   0x30006c8c
3001c248:	push   DWORD PTR [ebp-0x4]
3001c24b:	lea    ecx,[ebp-0x8]
3001c24e:	call   0x3000927b
3001c253:	test   eax,eax
3001c255:	jne    0x300249fa
3001c25b:	push   0x3001c300
3001c260:	lea    ecx,[ebp-0xc]
3001c263:	call   0x3000437e
3001c268:	lea    eax,[ebp-0x4]
3001c26b:	push   eax
3001c26c:	lea    edx,[ebp-0xc]
3001c26f:	lea    ecx,[ebp-0x18]
3001c272:	call   0x3000e5e4
3001c277:	lea    ecx,[ebp-0xc]
3001c27a:	mov    esi,eax
3001c27c:	call   0x300051a4
3001c281:	test   esi,esi
3001c283:	js     0x300249fa
3001c289:	mov    eax,DWORD PTR [ebp-0x4]
3001c28c:	cmp    DWORD PTR [eax-0xc],0x0
3001c290:	je     0x300249fa
3001c296:	lea    ecx,[ebp-0x4]
3001c299:	call   0x30018183
3001c29e:	test   eax,eax
3001c2a0:	js     0x300249fa
3001c2a6:	push   DWORD PTR [ebp-0x4]
3001c2a9:	lea    ecx,[ebp+0x8]
3001c2ac:	call   0x300089ae
3001c2b1:	lea    eax,[ebp+0x8]
3001c2b4:	push   eax
3001c2b5:	mov    ecx,edi
3001c2b7:	call   0x300014c1
3001c2bc:	lea    ecx,[ebp+0x8]
3001c2bf:	call   0x300051a4
3001c2c4:	lea    ecx,[ebp-0x8]
3001c2c7:	call   0x300051a4
3001c2cc:	lea    ecx,[ebp-0x4]
3001c2cf:	call   0x300051a4
3001c2d4:	lea    ecx,[ebp-0x18]
3001c2d7:	call   0x300051ae
3001c2dc:	pop    esi
3001c2dd:	mov    eax,edi
3001c2df:	pop    edi
3001c2e0:	pop    ebx
3001c2e1:	leave  
3001c2e2:	ret    0x4
3001c2e5:	nop
3001c2e6:	nop
3001c2e7:	nop
3001c2e8:	dec    ecx
3001c2e9:	add    BYTE PTR [esi+0x0],ch
3001c2ec:	jae    0x3001c2ee
3001c2ee:	je     0x3001c2f0
3001c2f0:	popa   
3001c2f1:	add    BYTE PTR [eax+eax*1+0x6c],ch
3001c2f5:	add    BYTE PTR [eax+eax*1+0x69],al
3001c2f9:	add    BYTE PTR [edx+0x0],dh
3001c2fc:	add    BYTE PTR [eax],al
3001c2fe:	nop
3001c2ff:	nop
3001c300:	push   ebx
3001c301:	add    BYTE PTR [eax+0x0],ch
3001c304:	add    BYTE PTR gs:[eax+eax*1+0x6c],ch
3001c309:	add    BYTE PTR [esi+0x0],al
3001c30c:	outs   dx,DWORD PTR ds:[esi]
3001c30d:	add    BYTE PTR [eax+eax*1+0x64],ch
3001c311:	add    BYTE PTR [ebp+0x0],ah
3001c314:	jb     0x3001c316
3001c316:	add    BYTE PTR [eax],al
3001c318:	push   ebp
3001c319:	mov    ebp,esp
3001c31b:	sub    esp,0x54
3001c31e:	mov    eax,ds:0x30043050
3001c323:	xor    eax,ebp
3001c325:	mov    DWORD PTR [ebp-0x4],eax
3001c328:	mov    eax,DWORD PTR [ebp+0x8]
3001c32b:	push   esi
3001c32c:	push   edi
3001c32d:	push   0x10
3001c32f:	push   0x30005b84
3001c334:	push   DWORD PTR [eax]
3001c336:	mov    esi,ecx
3001c338:	xor    edi,edi
3001c33a:	call   DWORD PTR ds:0x30045388
3001c340:	add    esp,0xc
3001c343:	mov    DWORD PTR [esi+0x4],eax
3001c346:	test   eax,eax
3001c348:	je     0x300266f9
3001c34e:	push   eax
3001c34f:	lea    eax,[ebp-0x54]
3001c352:	push   0x27
3001c354:	push   eax
3001c355:	call   DWORD PTR ds:0x30045360
3001c35b:	add    esp,0xc
3001c35e:	test   eax,eax
3001c360:	je     0x300266e4
3001c366:	lea    eax,[ebp-0x54]
3001c369:	push   eax
3001c36a:	call   0x300042e4
3001c36f:	pop    ecx
3001c370:	push   eax
3001c371:	lea    eax,[ebp-0x54]
3001c374:	push   eax
3001c375:	lea    ecx,[esi+0x8]
3001c378:	call   0x3000416f
3001c37d:	mov    eax,DWORD PTR [esi+0x8]
3001c380:	cmp    DWORD PTR [eax-0xc],0x26
3001c384:	jne    0x300266da
3001c38a:	mov    ecx,DWORD PTR [ebp-0x4]
3001c38d:	mov    eax,edi
3001c38f:	pop    edi
3001c390:	xor    ecx,ebp
3001c392:	pop    esi
3001c393:	call   0x3000115c
3001c398:	leave  
3001c399:	ret    0x4
3001c39c:	push   ebp
3001c39d:	mov    ebp,esp
3001c39f:	push   edi
3001c3a0:	mov    edi,ecx
3001c3a2:	cmp    DWORD PTR [edi+0x4],0x0
3001c3a6:	jne    0x30026524
3001c3ac:	push   ebx
3001c3ad:	mov    ebx,DWORD PTR [ebp+0x8]
3001c3b0:	push   esi
3001c3b1:	mov    eax,DWORD PTR [ebx]
3001c3b3:	cmp    DWORD PTR [eax-0xc],0x0
3001c3b7:	je     0x30026547
3001c3bd:	push   eax
3001c3be:	lea    ecx,[ebp+0x8]
3001c3c1:	call   0x300089ae
3001c3c6:	push   0x3001c414
3001c3cb:	lea    ecx,[ebp+0x8]
3001c3ce:	call   0x3000b940
3001c3d3:	push   DWORD PTR [ebp+0x8]
3001c3d6:	call   DWORD PTR ds:0x30045638
3001c3dc:	mov    ecx,edi
3001c3de:	test   eax,eax
3001c3e0:	je     0x30026572
3001c3e6:	lea    eax,[ebp+0x8]
3001c3e9:	push   eax
3001c3ea:	call   0x3001c318
3001c3ef:	mov    esi,eax
3001c3f1:	test   esi,esi
3001c3f3:	js     0x300265a1
3001c3f9:	test   esi,esi
3001c3fb:	js     0x300265a1
3001c401:	lea    ecx,[ebp+0x8]
3001c404:	call   0x300051a4
3001c409:	mov    eax,esi
3001c40b:	pop    esi
3001c40c:	pop    ebx
3001c40d:	pop    edi
3001c40e:	pop    ebp
3001c40f:	ret    0x4
3001c412:	nop
3001c413:	nop
3001c414:	jbe    0x3001c416
3001c416:	jae    0x3001c418
3001c418:	jo     0x3001c41a
3001c41a:	add    BYTE PTR fs:[ebp+0x0],ch
3001c41e:	arpl   WORD PTR [eax],ax
3001c420:	add    BYTE PTR cs:[eax+eax*1+0x6f],ch
3001c425:	add    BYTE PTR [ebx+0x0],ah
3001c428:	imul   eax,DWORD PTR [eax],0x0
3001c42b:	add    BYTE PTR [ebp-0x75],dl
3001c42e:	in     al,dx
3001c42f:	push   ecx
3001c430:	push   ecx
3001c431:	push   esi
3001c432:	mov    esi,ecx
3001c434:	cmp    BYTE PTR [esi+0x78],0x0
3001c438:	jne    0x3001c495
3001c43a:	and    DWORD PTR [ebp-0x4],0x0
3001c43e:	lea    eax,[esi+0x44]
3001c441:	push   eax
3001c442:	lea    ecx,[ebp-0x8]
3001c445:	mov    BYTE PTR [esi+0x78],0x1
3001c449:	call   0x30004340
3001c44e:	lea    eax,[ebp-0x4]
3001c451:	push   eax
3001c452:	push   DWORD PTR [ebp-0x8]
3001c455:	push   0x1c
3001c457:	call   0x3000904c
3001c45c:	lea    ecx,[ebp-0x8]
3001c45f:	mov    DWORD PTR [esi+0x7c],eax
3001c462:	call   0x300051a4
3001c467:	cmp    DWORD PTR [esi+0x7c],0x0
3001c46b:	jl     0x3001c48c
3001c46d:	push   DWORD PTR [ebp-0x4]
3001c470:	lea    ecx,[ebp-0x8]
3001c473:	call   0x3000437e
3001c478:	push   eax
3001c479:	lea    ecx,[esi+0x6c]
3001c47c:	call   0x3001c39c
3001c481:	lea    ecx,[ebp-0x8]
3001c484:	mov    DWORD PTR [esi+0x7c],eax
3001c487:	call   0x300051a4
3001c48c:	push   DWORD PTR [ebp-0x4]
3001c48f:	call   DWORD PTR ds:0x300454e8
3001c495:	mov    eax,DWORD PTR [esi+0x7c]
3001c498:	pop    esi
3001c499:	leave  
3001c49a:	ret    
3001c49b:	push   ebp
3001c49c:	mov    ebp,esp
3001c49e:	push   ecx
3001c49f:	push   ebx
3001c4a0:	push   esi
3001c4a1:	mov    esi,ecx
3001c4a3:	push   edi
3001c4a4:	lea    ecx,[ebp-0x4]
3001c4a7:	mov    edi,edx
3001c4a9:	call   0x300051c8
3001c4ae:	push   DWORD PTR [esi]
3001c4b0:	lea    eax,[ebp-0x4]
3001c4b3:	push   0x3001c4e8
3001c4b8:	push   eax
3001c4b9:	call   0x30005153
3001c4be:	add    esp,0xc
3001c4c1:	lea    eax,[edi+0x4]
3001c4c4:	push   0x0
3001c4c6:	push   eax
3001c4c7:	push   0x1
3001c4c9:	push   DWORD PTR [ebp-0x4]
3001c4cc:	call   DWORD PTR ds:0x30045024
3001c4d2:	test   eax,eax
3001c4d4:	lea    ecx,[ebp-0x4]
3001c4d7:	setne  bl
3001c4da:	call   0x300051a4
3001c4df:	pop    edi
3001c4e0:	pop    esi
3001c4e1:	mov    al,bl
3001c4e3:	pop    ebx
3001c4e4:	leave  
3001c4e5:	ret    
3001c4e6:	nop
3001c4e7:	nop
3001c4e8:	inc    esp
3001c4e9:	add    BYTE PTR [edx],bh
3001c4eb:	add    BYTE PTR [eax],ch
3001c4ed:	add    BYTE PTR [ecx+0x0],al
3001c4f0:	cmp    eax,DWORD PTR [eax]
3001c4f2:	dec    edi
3001c4f3:	add    BYTE PTR [ecx+0x0],cl
3001c4f6:	inc    ebx
3001c4f7:	add    BYTE PTR [ecx+0x0],cl
3001c4fa:	cmp    eax,DWORD PTR [eax]
3001c4fc:	inc    edi
3001c4fd:	add    BYTE PTR [ecx+0x0],al
3001c500:	cmp    eax,DWORD PTR [eax]
3001c502:	cmp    eax,DWORD PTR [eax]
3001c504:	cmp    eax,DWORD PTR [eax]
3001c506:	and    eax,0x29007300
3001c50b:	add    BYTE PTR [eax],al
3001c50d:	add    BYTE PTR [ebp-0x75],dl
3001c510:	in     al,dx
3001c511:	sub    esp,0x14
3001c514:	push   esi
3001c515:	push   edi
3001c516:	mov    edi,ecx
3001c518:	xor    esi,esi
3001c51a:	cmp    DWORD PTR [edi+0x4],esi
3001c51d:	jne    0x3002630d
3001c523:	lea    ecx,[ebp-0x8]
3001c526:	call   0x300051c8
3001c52b:	lea    ecx,[ebp-0x8]
3001c52e:	call   0x3001c5e6
3001c533:	test   al,al
3001c535:	je     0x30026321
3001c53b:	lea    ecx,[ebp-0x4]
3001c53e:	call   0x300051c8
3001c543:	mov    eax,DWORD PTR [ebp+0x8]
3001c546:	push   DWORD PTR [eax]
3001c548:	lea    eax,[ebp-0x4]
3001c54b:	push   DWORD PTR [ebp-0x8]
3001c54e:	push   0x3001c5cc
3001c553:	push   eax
3001c554:	call   0x30005153
3001c559:	add    esp,0x10
3001c55c:	lea    edx,[ebp-0x14]
3001c55f:	lea    ecx,[ebp-0x8]
3001c562:	mov    DWORD PTR [ebp-0x14],0xc
3001c569:	mov    DWORD PTR [ebp-0xc],esi
3001c56c:	call   0x3001c49b
3001c571:	test   al,al
3001c573:	je     0x3002633f
3001c579:	push   DWORD PTR [ebp-0x4]
3001c57c:	mov    eax,0x7a120
3001c581:	push   eax
3001c582:	push   eax
3001c583:	lea    eax,[ebp-0x14]
3001c586:	push   eax
3001c587:	call   DWORD PTR ds:0x300450d8
3001c58d:	push   DWORD PTR [ebp-0x10]
3001c590:	mov    DWORD PTR [edi+0x4],eax
3001c593:	call   DWORD PTR ds:0x3004510c
3001c599:	cmp    DWORD PTR [edi+0x4],esi
3001c59c:	je     0x3002635d
3001c5a2:	call   DWORD PTR ds:0x30045160
3001c5a8:	cmp    eax,0xb7
3001c5ad:	setne  al
3001c5b0:	mov    BYTE PTR [edi+0x8],al
3001c5b3:	lea    ecx,[ebp-0x4]
3001c5b6:	call   0x300051a4
3001c5bb:	lea    ecx,[ebp-0x8]
3001c5be:	call   0x300051a4
3001c5c3:	pop    edi
3001c5c4:	mov    eax,esi
3001c5c6:	pop    esi
3001c5c7:	leave  
3001c5c8:	ret    0x4
3001c5cb:	nop
3001c5cc:	inc    edi
3001c5cd:	add    BYTE PTR [eax+eax*1+0x6f],ch
3001c5d1:	add    BYTE PTR [edx+0x0],ah
3001c5d4:	popa   
3001c5d5:	add    BYTE PTR [eax+eax*1+0x5c],ch
3001c5d9:	add    BYTE PTR ds:0x3a007300,ah
3001c5df:	add    BYTE PTR ds:0x7300,ah
3001c5e5:	add    BYTE PTR [ebp-0x75],dl
3001c5e8:	in     al,dx
3001c5e9:	sub    esp,0x10
3001c5ec:	push   ebx
3001c5ed:	lea    eax,[ebp-0x8]
3001c5f0:	push   eax
3001c5f1:	xor    ebx,ebx
3001c5f3:	push   0x8
3001c5f5:	mov    DWORD PTR [ebp-0x10],ecx
3001c5f8:	mov    DWORD PTR [ebp-0x8],ebx
3001c5fb:	mov    DWORD PTR [ebp-0x4],ebx
3001c5fe:	call   DWORD PTR ds:0x300451e4
3001c604:	push   eax
3001c605:	call   DWORD PTR ds:0x30045034
3001c60b:	test   eax,eax
3001c60d:	je     0x300262ef
3001c613:	push   esi
3001c614:	mov    esi,DWORD PTR ds:0x30045030
3001c61a:	push   edi
3001c61b:	lea    eax,[ebp-0x4]
3001c61e:	push   eax
3001c61f:	push   ebx
3001c620:	push   ebx
3001c621:	push   0x1
3001c623:	push   DWORD PTR [ebp-0x8]
3001c626:	call   esi
3001c628:	push   DWORD PTR [ebp-0x4]
3001c62b:	push   ebx
3001c62c:	mov    ebx,DWORD PTR ds:0x300451cc
3001c632:	call   ebx
3001c634:	push   eax
3001c635:	call   DWORD PTR ds:0x300451bc
3001c63b:	push   DWORD PTR [ebp-0x4]
3001c63e:	mov    edi,eax
3001c640:	push   0x0
3001c642:	push   edi
3001c643:	call   0x300011b1
3001c648:	add    esp,0xc
3001c64b:	lea    eax,[ebp-0x4]
3001c64e:	push   eax
3001c64f:	push   DWORD PTR [ebp-0x4]
3001c652:	push   edi
3001c653:	push   0x1
3001c655:	push   DWORD PTR [ebp-0x8]
3001c658:	call   esi
3001c65a:	test   eax,eax
3001c65c:	je     0x300262f6
3001c662:	push   DWORD PTR [ebp-0x8]
3001c665:	call   DWORD PTR ds:0x300451d0
3001c66b:	push   DWORD PTR [edi]
3001c66d:	call   DWORD PTR ds:0x3004502c
3001c673:	test   eax,eax
3001c675:	je     0x300262f6
3001c67b:	lea    eax,[ebp-0xc]
3001c67e:	xor    esi,esi
3001c680:	push   eax
3001c681:	mov    DWORD PTR [ebp-0xc],esi
3001c684:	push   DWORD PTR [edi]
3001c686:	call   DWORD PTR ds:0x30045028
3001c68c:	test   eax,eax
3001c68e:	je     0x300262fb
3001c694:	push   DWORD PTR [ebp-0xc]
3001c697:	call   0x300042e4
3001c69c:	pop    ecx
3001c69d:	mov    ecx,DWORD PTR [ebp-0x10]
3001c6a0:	push   eax
3001c6a1:	push   DWORD PTR [ebp-0xc]
3001c6a4:	call   0x3000416f
3001c6a9:	push   edi
3001c6aa:	push   esi
3001c6ab:	call   ebx
3001c6ad:	push   eax
3001c6ae:	call   DWORD PTR ds:0x300451c4
3001c6b4:	push   DWORD PTR [ebp-0xc]
3001c6b7:	call   DWORD PTR ds:0x3004510c
3001c6bd:	mov    al,0x1
3001c6bf:	pop    edi
3001c6c0:	pop    esi
3001c6c1:	pop    ebx
3001c6c2:	leave  
3001c6c3:	ret    
3001c6c4:	push   0x4
3001c6c6:	mov    eax,0x3003e66c
3001c6cb:	call   0x3000116a
3001c6d0:	mov    esi,ecx
3001c6d2:	mov    DWORD PTR [ebp-0x10],esi
3001c6d5:	xor    eax,eax
3001c6d7:	mov    DWORD PTR [esi],eax
3001c6d9:	push   eax
3001c6da:	push   eax
3001c6db:	push   0x1
3001c6dd:	push   eax
3001c6de:	mov    DWORD PTR [ebp-0x4],eax
3001c6e1:	call   DWORD PTR ds:0x300451d4
3001c6e7:	mov    DWORD PTR [esi],eax
3001c6e9:	test   eax,eax
3001c6eb:	je     0x3001f791
3001c6f1:	mov    eax,esi
3001c6f3:	call   0x3000119d
3001c6f8:	ret    0x8
3001c6fb:	push   ebp
3001c6fc:	mov    ebp,esp
3001c6fe:	sub    esp,0x14
3001c701:	xor    eax,eax
3001c703:	push   esi
3001c704:	push   edi
3001c705:	mov    edi,ecx
3001c707:	push   0x1
3001c709:	mov    DWORD PTR [edi],eax
3001c70b:	pop    esi
3001c70c:	cmp    DWORD PTR ds:0x30043b98,eax
3001c712:	jne    0x3001c748
3001c714:	push   eax
3001c715:	mov    DWORD PTR [ebp-0x4],eax
3001c718:	mov    DWORD PTR [ebp-0x10],eax
3001c71b:	mov    DWORD PTR [ebp-0xc],eax
3001c71e:	mov    DWORD PTR [ebp-0x8],eax
3001c721:	lea    eax,[ebp-0x14]
3001c724:	push   eax
3001c725:	lea    eax,[ebp-0x4]
3001c728:	push   eax
3001c729:	mov    DWORD PTR [ebp-0x14],esi
3001c72c:	call   DWORD PTR ds:0x3004555c
3001c732:	test   eax,eax
3001c734:	jne    0x3001c748
3001c736:	mov    eax,DWORD PTR [ebp-0x4]
3001c739:	mov    ecx,0x30043b98
3001c73e:	xchg   DWORD PTR [ecx],eax
3001c740:	test   eax,eax
3001c742:	jne    0x3001f797
3001c748:	mov    eax,0x30043b9c
3001c74d:	lock xadd DWORD PTR [eax],esi
3001c751:	inc    esi
3001c752:	mov    eax,edi
3001c754:	pop    edi
3001c755:	pop    esi
3001c756:	leave  
3001c757:	ret    
3001c758:	mov    edx,0x80000001
3001c75d:	jmp    0x3001d0f0
3001c762:	push   ebx
3001c763:	push   esi
3001c764:	mov    esi,ecx
3001c766:	xor    ebx,ebx
3001c768:	push   edi
3001c769:	mov    edi,DWORD PTR ds:0x300455e0
3001c76f:	cmp    DWORD PTR [esi+0x8],ebx
3001c772:	jne    0x30020d8f
3001c778:	cmp    DWORD PTR [esi+0xc],ebx
3001c77b:	jne    0x30020d9e
3001c781:	cmp    DWORD PTR [esi+0x10],ebx
3001c784:	jne    0x30020dad
3001c78a:	cmp    DWORD PTR [esi+0x14],ebx
3001c78d:	je     0x3001c799
3001c78f:	push   DWORD PTR [esi+0x14]
3001c792:	push   DWORD PTR [esi]
3001c794:	call   edi
3001c796:	mov    DWORD PTR [esi+0x14],ebx
3001c799:	pop    edi
3001c79a:	pop    esi
3001c79b:	pop    ebx
3001c79c:	ret    
3001c79d:	test   ebx,ebx
3001c79f:	jne    0x3001c7eb
3001c7a1:	cmp    ecx,0x2d
3001c7a4:	jne    0x3001c7e0
3001c7a6:	jmp    0x3001f9cd
3001c7ab:	push   ebp
3001c7ac:	mov    ebp,esp
3001c7ae:	push   ecx
3001c7af:	push   ebx
3001c7b0:	mov    ebx,ecx
3001c7b2:	push   esi
3001c7b3:	mov    esi,DWORD PTR [ebx]
3001c7b5:	xor    edx,edx
3001c7b7:	movzx  eax,WORD PTR [esi]
3001c7ba:	push   edi
3001c7bb:	mov    DWORD PTR [ebp-0x4],ebx
3001c7be:	mov    edi,edx
3001c7c0:	test   ax,ax
3001c7c3:	je     0x3001c7ee
3001c7c5:	mov    ebx,edx
3001c7c7:	movzx  ecx,ax
3001c7ca:	lea    eax,[ecx-0x30]
3001c7cd:	cmp    ax,0x9
3001c7d1:	ja     0x3001c79d
3001c7d3:	imul   edx,edx,0xa
3001c7d6:	add    edx,0xffffffd0
3001c7d9:	mov    eax,ecx
3001c7db:	xor    ebx,ebx
3001c7dd:	add    edx,eax
3001c7df:	inc    ebx
3001c7e0:	add    esi,0x2
3001c7e3:	movzx  eax,WORD PTR [esi]
3001c7e6:	test   ax,ax
3001c7e9:	jne    0x3001c7c7
3001c7eb:	mov    ebx,DWORD PTR [ebp-0x4]
3001c7ee:	test   edi,edi
3001c7f0:	pop    edi
3001c7f1:	mov    DWORD PTR [ebx],esi
3001c7f3:	pop    esi
3001c7f4:	pop    ebx
3001c7f5:	jne    0x3001f9d5
3001c7fb:	mov    eax,edx
3001c7fd:	leave  
3001c7fe:	ret    
3001c7ff:	push   ebp
3001c800:	mov    ebp,esp
3001c802:	sub    esp,0x50
3001c805:	mov    eax,ds:0x30043050
3001c80a:	xor    eax,ebp
3001c80c:	mov    DWORD PTR [ebp-0x4],eax
3001c80f:	push   esi
3001c810:	mov    esi,edx
3001c812:	test   ecx,ecx
3001c814:	je     0x3001f8d6
3001c81a:	push   ebx
3001c81b:	push   0x20019
3001c820:	push   ecx
3001c821:	xor    ebx,ebx
3001c823:	push   0x80000001
3001c828:	lea    ecx,[ebp-0x50]
3001c82b:	mov    DWORD PTR [ebp-0x50],ebx
3001c82e:	mov    DWORD PTR [ebp-0x4c],ebx
3001c831:	mov    DWORD PTR [ebp-0x48],ebx
3001c834:	call   0x300051d9
3001c839:	test   eax,eax
3001c83b:	jne    0x3001c890
3001c83d:	lea    eax,[ebp-0x44]
3001c840:	push   eax
3001c841:	lea    eax,[ebp-0x40]
3001c844:	push   eax
3001c845:	push   0x3001c8a8
3001c84a:	lea    ecx,[ebp-0x50]
3001c84d:	mov    DWORD PTR [ebp-0x44],0x1e
3001c854:	call   0x3001c8be
3001c859:	test   eax,eax
3001c85b:	jne    0x3001c890
3001c85d:	lea    eax,[ebp-0x40]
3001c860:	lea    ecx,[ebp-0x44]
3001c863:	mov    DWORD PTR [ebp-0x44],eax
3001c866:	call   0x3001c7ab
3001c86b:	lea    ecx,[ebp-0x44]
3001c86e:	mov    DWORD PTR [esi],eax
3001c870:	call   0x3001c7ab
3001c875:	lea    ecx,[ebp-0x44]
3001c878:	mov    DWORD PTR [esi+0x4],eax
3001c87b:	call   0x3001c7ab
3001c880:	lea    ecx,[ebp-0x44]
3001c883:	mov    DWORD PTR [esi+0x8],eax
3001c886:	call   0x3001c7ab
3001c88b:	mov    DWORD PTR [esi+0xc],eax
3001c88e:	mov    bl,0x1
3001c890:	lea    ecx,[ebp-0x50]
3001c893:	call   0x300051ae
3001c898:	mov    al,bl
3001c89a:	pop    ebx
3001c89b:	mov    ecx,DWORD PTR [ebp-0x4]
3001c89e:	xor    ecx,ebp
3001c8a0:	pop    esi
3001c8a1:	call   0x3000115c
3001c8a6:	leave  
3001c8a7:	ret    
3001c8a8:	dec    ebp
3001c8a9:	add    BYTE PTR [ecx+0x0],ah
3001c8ac:	imul   eax,DWORD PTR [eax],0x57006e
3001c8b2:	imul   eax,DWORD PTR [eax],0x64006e
3001c8b8:	outs   dx,DWORD PTR ds:[esi]
3001c8b9:	add    BYTE PTR [edi+0x0],dh
3001c8bc:	add    BYTE PTR [eax],al
3001c8be:	push   ebp
3001c8bf:	mov    ebp,esp
3001c8c1:	push   ecx
3001c8c2:	push   ebx
3001c8c3:	push   esi
3001c8c4:	mov    esi,DWORD PTR [ebp+0xc]
3001c8c7:	push   edi
3001c8c8:	mov    edi,DWORD PTR [ebp+0x10]
3001c8cb:	xor    ebx,ebx
3001c8cd:	mov    eax,DWORD PTR [edi]
3001c8cf:	add    eax,eax
3001c8d1:	mov    DWORD PTR [ebp-0x4],eax
3001c8d4:	lea    eax,[ebp-0x4]
3001c8d7:	push   eax
3001c8d8:	push   esi
3001c8d9:	lea    eax,[ebp+0x10]
3001c8dc:	push   eax
3001c8dd:	push   ebx
3001c8de:	push   DWORD PTR [ebp+0x8]
3001c8e1:	mov    DWORD PTR [edi],ebx
3001c8e3:	push   DWORD PTR [ecx]
3001c8e5:	call   DWORD PTR ds:0x3004500c
3001c8eb:	test   eax,eax
3001c8ed:	jne    0x3001c91a
3001c8ef:	cmp    DWORD PTR [ebp+0x10],0x1
3001c8f3:	jne    0x3001fa23
3001c8f9:	mov    ecx,DWORD PTR [ebp-0x4]
3001c8fc:	test   esi,esi
3001c8fe:	je     0x3001c914
3001c900:	test   ecx,ecx
3001c902:	je     0x3001c926
3001c904:	test   cl,0x1
3001c907:	jne    0x3001c921
3001c909:	mov    eax,ecx
3001c90b:	shr    eax,1
3001c90d:	cmp    WORD PTR [esi+eax*2-0x2],bx
3001c912:	jne    0x3001c921
3001c914:	shr    ecx,1
3001c916:	mov    DWORD PTR [edi],ecx
3001c918:	xor    eax,eax
3001c91a:	pop    edi
3001c91b:	pop    esi
3001c91c:	pop    ebx
3001c91d:	leave  
3001c91e:	ret    0xc
3001c921:	push   0xd
3001c923:	pop    eax
3001c924:	jmp    0x3001c91a
3001c926:	xor    eax,eax
3001c928:	mov    WORD PTR [esi],ax
3001c92b:	jmp    0x3001c914
3001c92d:	push   ebp
3001c92e:	mov    ebp,esp
3001c930:	sub    esp,0x20
3001c933:	push   edi
3001c934:	push   0x6
3001c936:	mov    edx,ecx
3001c938:	pop    ecx
3001c939:	xor    eax,eax
3001c93b:	lea    edi,[ebp-0x1c]
3001c93e:	rep stos DWORD PTR es:[edi],eax
3001c940:	lea    eax,[ebp-0x1c]
3001c943:	push   eax
3001c944:	push   0x18
3001c946:	push   DWORD PTR [edx+0x8]
3001c949:	call   DWORD PTR ds:0x300455dc
3001c94f:	mov    eax,DWORD PTR [ebp+0x8]
3001c952:	mov    ecx,DWORD PTR [ebp-0x18]
3001c955:	mov    DWORD PTR [eax],ecx
3001c957:	mov    ecx,DWORD PTR [ebp-0x14]
3001c95a:	mov    DWORD PTR [eax+0x4],ecx
3001c95d:	pop    edi
3001c95e:	leave  
3001c95f:	ret    0x4
3001c962:	push   ebp
3001c963:	mov    ebp,esp
3001c965:	sub    esp,0x30
3001c968:	mov    al,BYTE PTR [ebp+0x8]
3001c96b:	push   ebx
3001c96c:	push   esi
3001c96d:	push   edi
3001c96e:	mov    BYTE PTR [ebp-0x6],al
3001c971:	xor    ebx,ebx
3001c973:	lea    eax,[ebp-0x18]
3001c976:	push   eax
3001c977:	mov    edi,ecx
3001c979:	mov    DWORD PTR [ebp-0x10],ebx
3001c97c:	mov    DWORD PTR [ebp-0xc],ebx
3001c97f:	mov    WORD PTR [ebp-0x8],bx
3001c983:	mov    BYTE PTR [ebp-0x5],0x1
3001c987:	call   0x3001c92d
3001c98c:	push   ebx
3001c98d:	mov    DWORD PTR [ebp-0x2c],0x1
3001c994:	mov    DWORD PTR [ebp-0x28],ebx
3001c997:	mov    DWORD PTR [ebp-0x24],ebx
3001c99a:	mov    DWORD PTR [ebp-0x20],ebx
3001c99d:	call   DWORD PTR ds:0x300455d4
3001c9a3:	push   DWORD PTR [edi+0x8]
3001c9a6:	mov    esi,eax
3001c9a8:	push   esi
3001c9a9:	mov    DWORD PTR [ebp-0x30],esi
3001c9ac:	call   DWORD PTR ds:0x300455e0
3001c9b2:	push   0x2
3001c9b4:	mov    DWORD PTR [ebp-0x1c],eax
3001c9b7:	lea    eax,[ebp-0x8]
3001c9ba:	push   eax
3001c9bb:	push   ebx
3001c9bc:	lea    eax,[ebp-0x10]
3001c9bf:	push   eax
3001c9c0:	push   esi
3001c9c1:	lea    eax,[ebp-0x18]
3001c9c4:	push   eax
3001c9c5:	push   ebx
3001c9c6:	push   ebx
3001c9c7:	push   DWORD PTR [edi]
3001c9c9:	call   DWORD PTR ds:0x3004547c
3001c9cf:	mov    edi,eax
3001c9d1:	test   esi,esi
3001c9d3:	je     0x3001c9e6
3001c9d5:	lea    ecx,[ebp-0x30]
3001c9d8:	call   0x3001c762
3001c9dd:	push   DWORD PTR [ebp-0x30]
3001c9e0:	call   DWORD PTR ds:0x300455d8
3001c9e6:	mov    eax,edi
3001c9e8:	pop    edi
3001c9e9:	pop    esi
3001c9ea:	pop    ebx
3001c9eb:	leave  
3001c9ec:	ret    0x4
3001c9ef:	cmp    DWORD PTR [esi+0x18],0x0
3001c9f3:	fstp   st(0)
3001c9f5:	mov    ecx,esi
3001c9f7:	setne  al
3001c9fa:	dec    al
3001c9fc:	movzx  eax,al
3001c9ff:	push   eax
3001ca00:	call   0x3001c962
3001ca05:	cmp    DWORD PTR [esi+0xc],0x0
3001ca09:	je     0x3001ca1a
3001ca0b:	push   DWORD PTR [esi+0xc]
3001ca0e:	push   DWORD PTR [esi]
3001ca10:	call   DWORD PTR ds:0x30045470
3001ca16:	and    DWORD PTR [esi+0xc],0x0
3001ca1a:	cmp    DWORD PTR [esi+0x1c],0x1
3001ca1e:	jne    0x3001ca96
3001ca20:	jmp    0x30020d5d
3001ca25:	push   ebp
3001ca26:	mov    ebp,esp
3001ca28:	and    esp,0xfffffff8
3001ca2b:	push   ecx
3001ca2c:	mov    eax,DWORD PTR [ebp+0x8]
3001ca2f:	push   esi
3001ca30:	mov    esi,DWORD PTR ds:0x300435c8
3001ca36:	cmp    eax,DWORD PTR [esi+0xc]
3001ca39:	jne    0x3001ca96
3001ca3b:	call   DWORD PTR ds:0x30045478
3001ca41:	sub    eax,DWORD PTR [esi+0x10]
3001ca44:	mov    DWORD PTR [esp+0x4],eax
3001ca48:	fild   DWORD PTR [esp+0x4]
3001ca4c:	js     0x30020d52
3001ca52:	fstp   DWORD PTR [esp+0x4]
3001ca56:	fld    DWORD PTR [esp+0x4]
3001ca5a:	fdiv   DWORD PTR [esi+0x14]
3001ca5d:	fstp   DWORD PTR [esp+0x4]
3001ca61:	fld1   
3001ca63:	fld    DWORD PTR [esp+0x4]
3001ca67:	fcom   st(1)
3001ca69:	fnstsw ax
3001ca6b:	fstp   st(1)
3001ca6d:	test   ah,0x1
3001ca70:	je     0x3001c9ef
3001ca76:	cmp    DWORD PTR [esi+0x18],0x1
3001ca7a:	je     0x30020d6a
3001ca80:	fmul   QWORD PTR ds:0x3001caa0
3001ca86:	call   0x300095d0
3001ca8b:	movzx  eax,al
3001ca8e:	push   eax
3001ca8f:	mov    ecx,esi
3001ca91:	call   0x3001c962
3001ca96:	pop    esi
3001ca97:	mov    esp,ebp
3001ca99:	pop    ebp
3001ca9a:	ret    0x4
3001ca9d:	nop
3001ca9e:	nop
3001ca9f:	nop
3001caa0:	add    BYTE PTR [eax],al
3001caa2:	add    BYTE PTR [eax],al
3001caa4:	add    al,ah
3001caa6:	outs   dx,DWORD PTR ds:[esi]
3001caa7:	inc    eax
3001caa8:	push   DWORD PTR [ebp+0x10]
3001caab:	call   0x3001ca25
3001cab0:	xor    eax,eax
3001cab2:	pop    esi
3001cab3:	pop    ebp
3001cab4:	ret    0x10
3001cab7:	push   0x4
3001cab9:	mov    eax,0x3003e6da
3001cabe:	call   0x3000116a
3001cac3:	mov    esi,ecx
3001cac5:	mov    DWORD PTR [ebp-0x10],esi
3001cac8:	mov    DWORD PTR [ebp-0x4],0x2
3001cacf:	mov    eax,DWORD PTR [ebp+0x8]
3001cad2:	add    eax,0xfffffff0
3001cad5:	push   eax
3001cad6:	mov    BYTE PTR [esi],0x1
3001cad9:	call   0x30004306
3001cade:	add    eax,0x10
3001cae1:	pop    ecx
3001cae2:	mov    DWORD PTR [esi+0x4],eax
3001cae5:	lea    eax,[ebp+0xc]
3001cae8:	push   eax
3001cae9:	lea    ecx,[esi+0x8]
3001caec:	mov    BYTE PTR [ebp-0x4],0x3
3001caf0:	call   0x3001cb58
3001caf5:	mov    BYTE PTR [ebp-0x4],0x4
3001caf9:	mov    eax,DWORD PTR [ebp+0x24]
3001cafc:	add    eax,0xfffffff0
3001caff:	push   eax
3001cb00:	call   0x30004306
3001cb05:	add    eax,0x10
3001cb08:	mov    DWORD PTR [esi+0x20],eax
3001cb0b:	mov    eax,DWORD PTR [ebp+0x28]
3001cb0e:	pop    ecx
3001cb0f:	mov    ecx,DWORD PTR [ebp+0x8]
3001cb12:	mov    DWORD PTR [esi+0x24],eax
3001cb15:	mov    eax,DWORD PTR [ebp+0x2c]
3001cb18:	lea    ecx,[ecx-0x10]
3001cb1b:	mov    DWORD PTR [esi+0x28],eax
3001cb1e:	call   0x30004017
3001cb23:	mov    BYTE PTR [ebp-0x4],0x0
3001cb27:	mov    ecx,DWORD PTR [ebp+0x1c]
3001cb2a:	test   ecx,ecx
3001cb2c:	je     0x3001cb43
3001cb2e:	mov    edx,DWORD PTR [ecx]
3001cb30:	lea    eax,[ebp+0xc]
3001cb33:	cmp    ecx,eax
3001cb35:	setne  al
3001cb38:	movzx  eax,al
3001cb3b:	push   eax
3001cb3c:	call   DWORD PTR [edx+0x10]
3001cb3f:	and    DWORD PTR [ebp+0x1c],0x0
3001cb43:	mov    ecx,DWORD PTR [ebp+0x24]
3001cb46:	add    ecx,0xfffffff0
3001cb49:	call   0x30004017
3001cb4e:	mov    eax,esi
3001cb50:	call   0x3000119d
3001cb55:	ret    0x28
3001cb58:	push   0x4
3001cb5a:	mov    eax,0x3003e61c
3001cb5f:	call   0x3000116a
3001cb64:	mov    esi,ecx
3001cb66:	mov    DWORD PTR [ebp-0x10],esi
3001cb69:	mov    eax,DWORD PTR [ebp+0x8]
3001cb6c:	xor    edx,edx
3001cb6e:	mov    DWORD PTR [ebp-0x4],edx
3001cb71:	mov    ecx,DWORD PTR [eax+0x10]
3001cb74:	test   ecx,ecx
3001cb76:	je     0x3001fa0b
3001cb7c:	cmp    ecx,eax
3001cb7e:	mov    eax,DWORD PTR [ecx]
3001cb80:	jne    0x3001cb92
3001cb82:	push   esi
3001cb83:	call   DWORD PTR [eax]
3001cb85:	mov    DWORD PTR [esi+0x10],eax
3001cb88:	mov    eax,esi
3001cb8a:	call   0x3000119d
3001cb8f:	ret    0x4
3001cb92:	push   edx
3001cb93:	jmp    0x3001cb83
3001cb95:	push   ebp
3001cb96:	mov    ebp,esp
3001cb98:	push   esi
3001cb99:	mov    esi,DWORD PTR [ebp+0x8]
3001cb9c:	push   edi
3001cb9d:	mov    edi,ecx
3001cb9f:	test   esi,esi
3001cba1:	je     0x3001ed5b
3001cba7:	lea    ecx,[edi+0x4]
3001cbaa:	push   ecx
3001cbab:	lea    ecx,[esi+0x4]
3001cbae:	mov    DWORD PTR [esi],0x300169ac
3001cbb4:	call   0x30007f78
3001cbb9:	pop    edi
3001cbba:	mov    eax,esi
3001cbbc:	pop    esi
3001cbbd:	pop    ebp
3001cbbe:	ret    0x4
3001cbc1:	push   ebp
3001cbc2:	mov    ebp,esp
3001cbc4:	push   ebx
3001cbc5:	mov    ebx,DWORD PTR [ebp+0x8]
3001cbc8:	push   esi
3001cbc9:	mov    al,BYTE PTR [ebx]
3001cbcb:	push   edi
3001cbcc:	mov    edi,ecx
3001cbce:	mov    BYTE PTR [edi],al
3001cbd0:	lea    eax,[ebx+0x4]
3001cbd3:	push   eax
3001cbd4:	lea    ecx,[edi+0x4]
3001cbd7:	call   0x300014c1
3001cbdc:	lea    eax,[ebx+0x8]
3001cbdf:	lea    esi,[edi+0x8]
3001cbe2:	cmp    esi,eax
3001cbe4:	je     0x3001cc07
3001cbe6:	mov    ecx,esi
3001cbe8:	call   0x30016974
3001cbed:	lea    eax,[ebx+0x8]
3001cbf0:	mov    ecx,DWORD PTR [eax+0x10]
3001cbf3:	test   ecx,ecx
3001cbf5:	je     0x3001f846
3001cbfb:	cmp    ecx,eax
3001cbfd:	mov    eax,DWORD PTR [ecx]
3001cbff:	jne    0x3001cc28
3001cc01:	push   esi
3001cc02:	call   DWORD PTR [eax]
3001cc04:	mov    DWORD PTR [esi+0x10],eax
3001cc07:	lea    eax,[ebx+0x20]
3001cc0a:	push   eax
3001cc0b:	lea    ecx,[edi+0x20]
3001cc0e:	call   0x300014c1
3001cc13:	mov    eax,DWORD PTR [ebx+0x24]
3001cc16:	mov    DWORD PTR [edi+0x24],eax
3001cc19:	mov    eax,DWORD PTR [ebx+0x28]
3001cc1c:	mov    DWORD PTR [edi+0x28],eax
3001cc1f:	mov    eax,edi
3001cc21:	pop    edi
3001cc22:	pop    esi
3001cc23:	pop    ebx
3001cc24:	pop    ebp
3001cc25:	ret    0x4
3001cc28:	push   0x0
3001cc2a:	jmp    0x3001cc02
3001cc2c:	push   ebp
3001cc2d:	mov    ebp,esp
3001cc2f:	push   ecx
3001cc30:	push   edi
3001cc31:	mov    edi,ecx
3001cc33:	xor    eax,eax
3001cc35:	test   edi,edi
3001cc37:	je     0x3001cc60
3001cc39:	push   0x2
3001cc3b:	push   eax
3001cc3c:	push   eax
3001cc3d:	mov    DWORD PTR [ebp-0x4],eax
3001cc40:	lea    eax,[ebp-0x4]
3001cc43:	push   eax
3001cc44:	call   DWORD PTR ds:0x300451e4
3001cc4a:	push   eax
3001cc4b:	push   edi
3001cc4c:	call   DWORD PTR ds:0x300451e4
3001cc52:	push   eax
3001cc53:	call   DWORD PTR ds:0x300451e0
3001cc59:	neg    eax
3001cc5b:	sbb    eax,eax
3001cc5d:	and    eax,DWORD PTR [ebp-0x4]
3001cc60:	pop    edi
3001cc61:	leave  
3001cc62:	ret    
3001cc63:	push   0xc
3001cc65:	mov    eax,0x3003e78c
3001cc6a:	call   0x3000116a
3001cc6f:	mov    edi,ecx
3001cc71:	push   ecx
3001cc72:	push   ecx
3001cc73:	lea    ecx,[ebp-0x14]
3001cc76:	call   0x3001c6c4
3001cc7b:	push   ecx
3001cc7c:	push   ecx
3001cc7d:	xor    ebx,ebx
3001cc7f:	lea    ecx,[ebp-0x10]
3001cc82:	mov    DWORD PTR [ebp-0x4],ebx
3001cc85:	call   0x3001c6c4
3001cc8a:	mov    BYTE PTR [ebp-0x4],0x1
3001cc8e:	mov    eax,DWORD PTR [ebp-0x14]
3001cc91:	mov    ecx,DWORD PTR [ebp-0x10]
3001cc94:	test   eax,eax
3001cc96:	je     0x3001cd4a
3001cc9c:	test   ecx,ecx
3001cc9e:	je     0x3001cd4a
3001cca4:	push   0xc
3001cca6:	call   0x30003fee
3001ccab:	mov    esi,eax
3001ccad:	pop    ecx
3001ccae:	test   esi,esi
3001ccb0:	je     0x3001cd3f
3001ccb6:	mov    DWORD PTR [esi+0x4],ebx
3001ccb9:	mov    DWORD PTR [esi+0x8],ebx
3001ccbc:	mov    DWORD PTR [esi],edi
3001ccbe:	mov    ecx,DWORD PTR [ebp-0x14]
3001ccc1:	mov    DWORD PTR [ebp-0x18],esi
3001ccc4:	call   0x3001cc2c
3001ccc9:	mov    DWORD PTR [esi+0x4],eax
3001cccc:	mov    ecx,DWORD PTR [ebp-0x10]
3001cccf:	call   0x3001cc2c
3001ccd4:	mov    DWORD PTR [esi+0x8],eax
3001ccd7:	cmp    DWORD PTR [esi+0x4],ebx
3001ccda:	je     0x3001cd46
3001ccdc:	test   eax,eax
3001ccde:	je     0x3001cd46
3001cce0:	push   ebx
3001cce1:	push   0x10004
3001cce6:	push   esi
3001cce7:	push   0x3001e8bf
3001ccec:	push   0x10000
3001ccf1:	push   ebx
3001ccf2:	call   DWORD PTR ds:0x300451fc
3001ccf8:	mov    esi,eax
3001ccfa:	test   esi,esi
3001ccfc:	je     0x3001cd46
3001ccfe:	mov    eax,DWORD PTR [ebp-0x14]
3001cd01:	mov    DWORD PTR [edi+0x38],eax
3001cd04:	mov    eax,DWORD PTR [ebp-0x10]
3001cd07:	mov    DWORD PTR [ebp-0x14],ebx
3001cd0a:	mov    DWORD PTR [ebp-0x10],ebx
3001cd0d:	mov    DWORD PTR [edi+0x3c],eax
3001cd10:	mov    DWORD PTR [ebp-0x18],ebx
3001cd13:	lea    ecx,[ebp-0x18]
3001cd16:	call   0x3001e881
3001cd1b:	mov    eax,DWORD PTR [ebp-0x14]
3001cd1e:	mov    ecx,DWORD PTR [ebp-0x10]
3001cd21:	mov    edi,DWORD PTR ds:0x300451d0
3001cd27:	test   ecx,ecx
3001cd29:	jne    0x3001f9dc
3001cd2f:	test   eax,eax
3001cd31:	jne    0x3001f9ea
3001cd37:	mov    eax,esi
3001cd39:	call   0x3000119d
3001cd3e:	ret    
3001cd3f:	mov    esi,ebx
3001cd41:	jmp    0x3001ccbc
3001cd46:	mov    esi,ebx
3001cd48:	jmp    0x3001cd13
3001cd4a:	mov    esi,ebx
3001cd4c:	jmp    0x3001cd21
3001cd4e:	push   0x68
3001cd50:	mov    eax,0x3003e88c
3001cd55:	call   0x300045c8
3001cd5a:	mov    ebx,ecx
3001cd5c:	mov    eax,DWORD PTR [ebp+0xc]
3001cd5f:	mov    ecx,DWORD PTR [ebp+0x18]
3001cd62:	and    DWORD PTR [ebp-0x4],0x0
3001cd66:	cmp    DWORD PTR ds:0x300435c8,0x0
3001cd6d:	jne    0x3001ce27
3001cd73:	cmp    DWORD PTR [ebx+0x38],0x0
3001cd77:	jne    0x3001ce27
3001cd7d:	push   ecx
3001cd7e:	push   DWORD PTR [ebp+0x10]
3001cd81:	push   ecx
3001cd82:	mov    ecx,esp
3001cd84:	mov    DWORD PTR [ebp-0x50],esp
3001cd87:	push   eax
3001cd88:	call   0x3000437e
3001cd8d:	sub    esp,0x18
3001cd90:	mov    BYTE PTR [ebp-0x4],0x1
3001cd94:	lea    eax,[ebp+0x1c]
3001cd97:	mov    ecx,esp
3001cd99:	mov    DWORD PTR [ebp-0x4c],esp
3001cd9c:	push   eax
3001cd9d:	call   0x3001cb58
3001cda2:	push   ecx
3001cda3:	mov    ecx,esp
3001cda5:	push   0x3000c5b4
3001cdaa:	mov    BYTE PTR [ebp-0x4],0x2
3001cdae:	call   0x3000437e
3001cdb3:	lea    ecx,[ebp-0x44]
3001cdb6:	mov    BYTE PTR [ebp-0x4],0x0
3001cdba:	call   0x3001cab7
3001cdbf:	lea    eax,[ebp-0x44]
3001cdc2:	push   eax
3001cdc3:	lea    ecx,[ebx+0x8]
3001cdc6:	mov    BYTE PTR [ebp-0x4],0x3
3001cdca:	call   0x3001cbc1
3001cdcf:	cmp    DWORD PTR [ebp+0x14],0x0
3001cdd3:	jne    0x3001f7d1
3001cdd9:	push   0x9
3001cddb:	pop    ecx
3001cddc:	xor    eax,eax
3001cdde:	lea    edi,[ebp-0x74]
3001cde1:	rep stos DWORD PTR es:[edi],eax
3001cde3:	lea    eax,[ebp-0x74]
3001cde6:	push   eax
3001cde7:	call   DWORD PTR ds:0x300451e8
3001cded:	cmp    DWORD PTR [ebp-0x60],0x1
3001cdf1:	jbe    0x3001f7d1
3001cdf7:	mov    ecx,ebx
3001cdf9:	call   0x3001cc63
3001cdfe:	mov    esi,eax
3001ce00:	test   esi,esi
3001ce02:	je     0x3001f7d1
3001ce08:	push   0xffffffff
3001ce0a:	push   esi
3001ce0b:	call   DWORD PTR ds:0x300451f0
3001ce11:	push   esi
3001ce12:	call   DWORD PTR ds:0x300451f4
3001ce18:	push   esi
3001ce19:	call   DWORD PTR ds:0x300451d0
3001ce1f:	lea    ecx,[ebp-0x44]
3001ce22:	call   0x30016980
3001ce27:	or     DWORD PTR [ebp-0x4],0xffffffff
3001ce2b:	mov    ecx,DWORD PTR [ebp+0x2c]
3001ce2e:	test   ecx,ecx
3001ce30:	je     0x3001ce43
3001ce32:	mov    edx,DWORD PTR [ecx]
3001ce34:	lea    eax,[ebp+0x1c]
3001ce37:	cmp    ecx,eax
3001ce39:	setne  al
3001ce3c:	movzx  eax,al
3001ce3f:	push   eax
3001ce40:	call   DWORD PTR [edx+0x10]
3001ce43:	call   0x300045fe
3001ce48:	ret    0x2c
3001ce4b:	push   ebp
3001ce4c:	mov    ebp,esp
3001ce4e:	and    esp,0xfffffff8
3001ce51:	push   0xffffffff
3001ce53:	push   0x3003dfe0
3001ce58:	mov    eax,fs:0x0
3001ce5e:	push   eax
3001ce5f:	sub    esp,0x24
3001ce62:	push   esi
3001ce63:	push   edi
3001ce64:	mov    eax,ds:0x30043050
3001ce69:	xor    eax,esp
3001ce6b:	push   eax
3001ce6c:	lea    eax,[esp+0x30]
3001ce70:	mov    fs:0x0,eax
3001ce76:	mov    edi,DWORD PTR ds:0x300435cc
3001ce7c:	lea    ecx,[esp+0x24]
3001ce80:	mov    eax,DWORD PTR [edi]
3001ce82:	push   ecx
3001ce83:	mov    ecx,edi
3001ce85:	call   DWORD PTR [eax+0x40]
3001ce88:	and    DWORD PTR [esp+0x38],0x0
3001ce8d:	lea    eax,[esp+0x24]
3001ce91:	push   eax
3001ce92:	lea    ecx,[esp+0x20]
3001ce96:	call   0x30007f78
3001ce9b:	mov    BYTE PTR [esp+0x38],0x1
3001cea0:	and    DWORD PTR [esp+0x14],0x0
3001cea5:	mov    eax,DWORD PTR [edi]
3001cea7:	lea    ecx,[esp+0x14]
3001ceab:	push   ecx
3001ceac:	push   0x1
3001ceae:	mov    ecx,edi
3001ceb0:	call   DWORD PTR [eax+0x2c]
3001ceb3:	sub    esp,0x18
3001ceb6:	mov    esi,esp
3001ceb8:	je     0x3001cf35
3001ceba:	lea    eax,[esp+0x34]
3001cebe:	mov    DWORD PTR [esi],0x30016a34
3001cec4:	lea    ecx,[esi+0x4]
3001cec7:	push   eax
3001cec8:	mov    DWORD PTR [esi],0x300169ac
3001cece:	call   0x30007f78
3001ced3:	mov    eax,esi
3001ced5:	mov    DWORD PTR [esi+0x10],eax
3001ced8:	mov    BYTE PTR [esp+0x50],0x1
3001cedd:	push   DWORD PTR [esp+0x2c]
3001cee1:	push   DWORD PTR ds:0x30043560
3001cee7:	push   DWORD PTR [edi+0x610]
3001ceed:	push   DWORD PTR ds:0x300434dc
3001cef3:	push   ecx
3001cef4:	lea    ecx,[edi+0x620]
3001cefa:	call   0x3001cd4e
3001ceff:	mov    BYTE PTR [esp+0x38],0x0
3001cf04:	mov    ecx,DWORD PTR [esp+0x20]
3001cf08:	test   ecx,ecx
3001cf0a:	je     0x3001cf11
3001cf0c:	call   0x30007e20
3001cf11:	or     DWORD PTR [esp+0x38],0xffffffff
3001cf16:	mov    ecx,DWORD PTR [esp+0x28]
3001cf1a:	test   ecx,ecx
3001cf1c:	je     0x3001cf23
3001cf1e:	call   0x30007e20
3001cf23:	mov    ecx,DWORD PTR [esp+0x30]
3001cf27:	mov    DWORD PTR fs:0x0,ecx
3001cf2e:	pop    ecx
3001cf2f:	pop    edi
3001cf30:	pop    esi
3001cf31:	mov    esp,ebp
3001cf33:	pop    ebp
3001cf34:	ret    
3001cf35:	xor    eax,eax
3001cf37:	jmp    0x3001ced5
3001cf39:	push   0x3004306c
3001cf3e:	lea    ecx,[ebp-0x220]
3001cf44:	mov    DWORD PTR [esi],0x1
3001cf4a:	call   0x30004256
3001cf4f:	and    DWORD PTR [ebp-0x4],0x0
3001cf53:	push   DWORD PTR [esi+0x4]
3001cf56:	call   edi
3001cf58:	mov    DWORD PTR [ebp-0x228],eax
3001cf5e:	mov    eax,DWORD PTR [esi+0x8]
3001cf61:	mov    DWORD PTR [ebp-0x224],eax
3001cf67:	push   0x1a
3001cf69:	lea    eax,[ebp-0x21c]
3001cf6f:	push   eax
3001cf70:	call   0x3000c561
3001cf75:	test   eax,eax
3001cf77:	js     0x3001f8f2
3001cf7d:	push   0x104
3001cf82:	lea    ecx,[ebp-0x220]
3001cf88:	call   0x30004286
3001cf8d:	push   DWORD PTR [ebp-0x224]
3001cf93:	lea    ecx,[ebp-0x21c]
3001cf99:	push   ecx
3001cf9a:	push   eax
3001cf9b:	call   DWORD PTR ds:0x30045644
3001cfa1:	push   0xffffffff
3001cfa3:	lea    ecx,[ebp-0x220]
3001cfa9:	call   0x30006c8c
3001cfae:	push   DWORD PTR [ebp-0x228]
3001cfb4:	jmp    0x3001d060
3001cfb9:	push   0x21c
3001cfbe:	mov    eax,0x3003ea69
3001cfc3:	call   0x300045c8
3001cfc8:	mov    esi,ecx
3001cfca:	mov    eax,DWORD PTR [esi]
3001cfcc:	mov    edi,DWORD PTR ds:0x3004563c
3001cfd2:	sub    eax,0x0
3001cfd5:	je     0x3001cf39
3001cfdb:	dec    eax
3001cfdc:	jne    0x3001f8dd
3001cfe2:	push   0x3004306c
3001cfe7:	lea    ecx,[ebp-0x220]
3001cfed:	mov    DWORD PTR [esi],0x2
3001cff3:	call   0x30004256
3001cff8:	mov    DWORD PTR [ebp-0x4],0x1
3001cfff:	push   DWORD PTR [esi+0x4]
3001d002:	call   edi
3001d004:	mov    DWORD PTR [ebp-0x224],eax
3001d00a:	mov    eax,DWORD PTR [esi+0x8]
3001d00d:	mov    DWORD PTR [ebp-0x228],eax
3001d013:	push   0x23
3001d015:	lea    eax,[ebp-0x21c]
3001d01b:	push   eax
3001d01c:	call   0x3000c561
3001d021:	test   eax,eax
3001d023:	js     0x3001f909
3001d029:	push   0x104
3001d02e:	lea    ecx,[ebp-0x220]
3001d034:	call   0x30004286
3001d039:	push   DWORD PTR [ebp-0x228]
3001d03f:	lea    ecx,[ebp-0x21c]
3001d045:	push   ecx
3001d046:	push   eax
3001d047:	call   DWORD PTR ds:0x30045644
3001d04d:	push   0xffffffff
3001d04f:	lea    ecx,[ebp-0x220]
3001d055:	call   0x30006c8c
3001d05a:	push   DWORD PTR [ebp-0x224]
3001d060:	lea    ecx,[ebp-0x220]
3001d066:	call   0x3000b940
3001d06b:	lea    eax,[ebp-0x220]
3001d071:	push   eax
3001d072:	lea    ecx,[esi+0x4]
3001d075:	call   0x300014c1
3001d07a:	mov    ecx,DWORD PTR [ebp-0x220]
3001d080:	lea    ecx,[ecx-0x10]
3001d083:	call   0x30004017
3001d088:	call   0x300045fe
3001d08d:	ret    
3001d08e:	push   0x20
3001d090:	mov    eax,0x3003ea08
3001d095:	call   0x3000116a
3001d09a:	mov    edi,edx
3001d09c:	mov    DWORD PTR [ebp-0x10],edi
3001d09f:	mov    esi,ecx
3001d0a1:	push   DWORD PTR [ebp+0xc]
3001d0a4:	lea    ecx,[ebp-0x2c]
3001d0a7:	push   DWORD PTR [ebp+0x8]
3001d0aa:	call   0x3000c6ba
3001d0af:	and    DWORD PTR [ebp-0x4],0x0
3001d0b3:	and    DWORD PTR [ebp-0x1c],0x0
3001d0b7:	push   esi
3001d0b8:	lea    ecx,[ebp-0x18]
3001d0bb:	call   0x3000437e
3001d0c0:	xor    ebx,ebx
3001d0c2:	inc    ebx
3001d0c3:	mov    edx,edi
3001d0c5:	lea    ecx,[ebp-0x14]
3001d0c8:	mov    BYTE PTR [ebp-0x4],bl
3001d0cb:	call   0x3000c52a
3001d0d0:	mov    BYTE PTR [ebp-0x4],0x2
3001d0d4:	mov    eax,DWORD PTR [ebp-0x1c]
3001d0d7:	cmp    eax,0x4
3001d0da:	je     0x3001f9a6
3001d0e0:	dec    eax
3001d0e1:	je     0x3001c758
3001d0e7:	dec    eax
3001d0e8:	je     0x3001d18b
3001d0ee:	xor    edx,edx
3001d0f0:	push   DWORD PTR [ebp-0x18]
3001d0f3:	lea    ecx,[ebp-0x2c]
3001d0f6:	push   edi
3001d0f7:	call   0x3000c834
3001d0fc:	test   al,al
3001d0fe:	jne    0x3001d10a
3001d100:	lea    ecx,[ebp-0x1c]
3001d103:	call   0x3001cfb9
3001d108:	jmp    0x3001d0d4
3001d10a:	mov    edi,DWORD PTR [ebp-0x18]
3001d10d:	test   edi,edi
3001d10f:	je     0x3001d199
3001d115:	push   edi
3001d116:	call   DWORD PTR ds:0x30045638
3001d11c:	test   eax,eax
3001d11e:	je     0x3001d199
3001d120:	push   0x10
3001d122:	call   DWORD PTR ds:0x300455ac
3001d128:	mov    esi,eax
3001d12a:	test   esi,esi
3001d12c:	je     0x3001d195
3001d12e:	and    DWORD PTR [ebp+0xc],0x0
3001d132:	lea    eax,[ebp+0xc]
3001d135:	push   eax
3001d136:	push   edi
3001d137:	mov    DWORD PTR [esi],0x3001d404
3001d13d:	call   DWORD PTR ds:0x3004556c
3001d143:	mov    DWORD PTR [esi+0x8],eax
3001d146:	mov    eax,DWORD PTR [ebp+0xc]
3001d149:	mov    DWORD PTR [esi+0x4],eax
3001d14c:	test   esi,esi
3001d14e:	je     0x3001d199
3001d150:	mov    edi,DWORD PTR [ebp+0x10]
3001d153:	mov    ecx,DWORD PTR [edi]
3001d155:	test   ecx,ecx
3001d157:	jne    0x3001f9c3
3001d15d:	mov    ecx,DWORD PTR [ebp-0x14]
3001d160:	mov    DWORD PTR [edi],esi
3001d162:	lea    ecx,[ecx-0x10]
3001d165:	call   0x30004017
3001d16a:	mov    ecx,DWORD PTR [ebp-0x18]
3001d16d:	lea    ecx,[ecx-0x10]
3001d170:	call   0x30004017
3001d175:	or     DWORD PTR [ebp-0x4],0xffffffff
3001d179:	lea    ecx,[ebp-0x2c]
3001d17c:	call   0x3000c725
3001d181:	mov    al,bl
3001d183:	call   0x3000119d
3001d188:	ret    0xc
3001d18b:	mov    edx,0x80000002
3001d190:	jmp    0x3001d0f0
3001d195:	xor    esi,esi
3001d197:	jmp    0x3001d14c
3001d199:	mov    edi,DWORD PTR [ebp-0x10]
3001d19c:	jmp    0x3001d100
3001d1a1:	push   ebp
3001d1a2:	mov    ebp,esp
3001d1a4:	sub    esp,0x14
3001d1a7:	mov    eax,ds:0x30043050
3001d1ac:	xor    eax,ebp
3001d1ae:	mov    DWORD PTR [ebp-0x4],eax
3001d1b1:	push   ebx
3001d1b2:	mov    ebx,DWORD PTR [ebp+0xc]
3001d1b5:	push   esi
3001d1b6:	mov    esi,DWORD PTR [ebp+0x8]
3001d1b9:	call   0x3001d281
3001d1be:	test   eax,eax
3001d1c0:	je     0x300282b2
3001d1c6:	push   ebx
3001d1c7:	push   esi
3001d1c8:	call   DWORD PTR ds:0x30044484
3001d1ce:	mov    esi,eax
3001d1d0:	test   esi,esi
3001d1d2:	je     0x3001d1e1
3001d1d4:	cmp    DWORD PTR ds:0x30044494,0x0
3001d1db:	je     0x30028291
3001d1e1:	mov    eax,esi
3001d1e3:	mov    ecx,DWORD PTR [ebp-0x4]
3001d1e6:	pop    esi
3001d1e7:	xor    ecx,ebp
3001d1e9:	pop    ebx
3001d1ea:	call   0x3000115c
3001d1ef:	leave  
3001d1f0:	ret    0x8
3001d1f3:	push   ebp
3001d1f4:	mov    ebp,esp
3001d1f6:	sub    esp,0x44
3001d1f9:	mov    eax,ds:0x30043050
3001d1fe:	xor    eax,ebp
3001d200:	mov    DWORD PTR [ebp-0x8],eax
3001d203:	push   esi
3001d204:	push   edi
3001d205:	xor    edi,edi
3001d207:	push   edi
3001d208:	mov    esi,ecx
3001d20a:	mov    DWORD PTR [ebp-0x14],edi
3001d20d:	mov    DWORD PTR [ebp-0x18],edi
3001d210:	call   0x3001d2b4
3001d215:	push   0x1
3001d217:	mov    DWORD PTR [ebp-0x10],eax
3001d21a:	call   0x3001d2b4
3001d21f:	mov    ecx,DWORD PTR [esi+0x20]
3001d222:	mov    DWORD PTR [ebp-0xc],eax
3001d225:	cmp    DWORD PTR [ecx-0xc],edi
3001d228:	je     0x3001d232
3001d22a:	lea    edx,[ebp-0x18]
3001d22d:	call   0x3001c7ff
3001d232:	push   0x2
3001d234:	lea    eax,[ebp-0x18]
3001d237:	push   eax
3001d238:	call   0x3001d26a
3001d23d:	lea    ecx,[ebp-0x40]
3001d240:	push   ecx
3001d241:	push   eax
3001d242:	mov    DWORD PTR [ebp-0x40],0x28
3001d249:	call   0x3001d1a1
3001d24e:	mov    eax,DWORD PTR [ebp+0x8]
3001d251:	mov    ecx,DWORD PTR [ebp-0x8]
3001d254:	lea    esi,[ebp-0x3c]
3001d257:	mov    edi,eax
3001d259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d25d:	pop    edi
3001d25e:	xor    ecx,ebp
3001d260:	pop    esi
3001d261:	call   0x3000115c
3001d266:	leave  
3001d267:	ret    0x4
3001d26a:	push   ebp
3001d26b:	mov    ebp,esp
3001d26d:	call   0x3001d281
3001d272:	test   eax,eax
3001d274:	je     0x30028365
3001d27a:	pop    ebp
3001d27b:	jmp    DWORD PTR ds:0x3004447c
3001d281:	cmp    DWORD PTR ds:0x30044490,0x0
3001d288:	je     0x3001d587
3001d28e:	xor    eax,eax
3001d290:	cmp    DWORD PTR ds:0x30044484,eax
3001d296:	setne  al
3001d299:	ret    
3001d29a:	push   0x3001d2a4
3001d29f:	jmp    0x3001d63e
3001d2a4:	inc    edi
3001d2a5:	gs je  0x3001d2f5
3001d2a8:	outs   dx,DWORD PTR ds:[esi]
3001d2a9:	outs   dx,BYTE PTR ds:[esi]
3001d2aa:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
3001d2b2:	inc    ecx
3001d2b3:	add    BYTE PTR [ebp-0x75],dl
3001d2b6:	in     al,dx
3001d2b7:	call   0x3001d281
3001d2bc:	test   eax,eax
3001d2be:	je     0x3002832c
3001d2c4:	pop    ebp
3001d2c5:	jmp    DWORD PTR ds:0x30044474
3001d2cb:	push   esi
3001d2cc:	mov    esi,ecx
3001d2ce:	mov    ecx,DWORD PTR [esi]
3001d2d0:	test   ecx,ecx
3001d2d2:	jne    0x3001f7a5
3001d2d8:	and    DWORD PTR [esi],0x0
3001d2db:	mov    ecx,0x30043b9c
3001d2e0:	or     eax,0xffffffff
3001d2e3:	lock xadd DWORD PTR [ecx],eax
3001d2e7:	jne    0x3001d2fd
3001d2e9:	xor    eax,eax
3001d2eb:	mov    ecx,0x30043b98
3001d2f0:	xchg   DWORD PTR [ecx],eax
3001d2f2:	test   eax,eax
3001d2f4:	je     0x3001d2fd
3001d2f6:	push   eax
3001d2f7:	call   DWORD PTR ds:0x300455b4
3001d2fd:	mov    ecx,DWORD PTR [esi]
3001d2ff:	test   ecx,ecx
3001d301:	jne    0x3001f7b0
3001d307:	and    DWORD PTR [esi],0x0
3001d30a:	pop    esi
3001d30b:	ret    
3001d30c:	push   0x8
3001d30e:	mov    eax,0x3003fcd4
3001d313:	call   0x3000116a
3001d318:	mov    esi,ecx
3001d31a:	push   0x1ba0
3001d31f:	call   0x3000532c
3001d324:	lea    ecx,[ebp-0x10]
3001d327:	call   0x3001c6fb
3001d32c:	lea    eax,[ebp-0x10]
3001d32f:	push   eax
3001d330:	push   DWORD PTR [ebp+0x8]
3001d333:	xor    ebx,ebx
3001d335:	mov    ecx,esi
3001d337:	mov    DWORD PTR [ebp-0x4],ebx
3001d33a:	call   0x3001d452
3001d33f:	test   al,al
3001d341:	je     0x3001d37a
3001d343:	lea    ecx,[ebp-0x10]
3001d346:	call   0x3001d390
3001d34b:	push   0x20
3001d34d:	mov    esi,eax
3001d34f:	call   0x30003fee
3001d354:	pop    ecx
3001d355:	test   eax,eax
3001d357:	je     0x3001d38c
3001d359:	xor    ecx,ecx
3001d35b:	mov    DWORD PTR [eax],ebx
3001d35d:	mov    WORD PTR [eax+0x4],cx
3001d361:	mov    DWORD PTR [eax+0x8],esi
3001d364:	mov    DWORD PTR [eax+0xc],ebx
3001d367:	mov    DWORD PTR [eax+0x10],ebx
3001d36a:	mov    DWORD PTR [eax+0x18],ebx
3001d36d:	mov    DWORD PTR [eax+0x1c],ebx
3001d370:	test   eax,eax
3001d372:	mov    ds:0x300435c8,eax
3001d377:	setne  bl
3001d37a:	lea    ecx,[ebp-0x10]
3001d37d:	call   0x3001d2cb
3001d382:	mov    al,bl
3001d384:	call   0x3000119d
3001d389:	ret    0x4
3001d38c:	mov    eax,ebx
3001d38e:	jmp    0x3001d370
3001d390:	push   ebp
3001d391:	mov    ebp,esp
3001d393:	push   ecx
3001d394:	push   esi
3001d395:	mov    esi,ecx
3001d397:	push   edi
3001d398:	mov    edi,DWORD PTR [esi]
3001d39a:	test   edi,edi
3001d39c:	je     0x3001d3d5
3001d39e:	and    DWORD PTR [ebp-0x4],0x0
3001d3a2:	push   0x0
3001d3a4:	lea    eax,[ebp-0x4]
3001d3a7:	push   eax
3001d3a8:	push   DWORD PTR [edi+0x4]
3001d3ab:	call   DWORD PTR ds:0x30045560
3001d3b1:	test   eax,eax
3001d3b3:	jne    0x3001f7bb
3001d3b9:	xor    eax,eax
3001d3bb:	test   eax,eax
3001d3bd:	jne    0x3001d3d5
3001d3bf:	mov    ecx,DWORD PTR [esi]
3001d3c1:	test   ecx,ecx
3001d3c3:	je     0x3001d3cb
3001d3c5:	mov    eax,DWORD PTR [ecx]
3001d3c7:	push   0x1
3001d3c9:	call   DWORD PTR [eax]
3001d3cb:	and    DWORD PTR [esi],0x0
3001d3ce:	mov    eax,DWORD PTR [ebp-0x4]
3001d3d1:	pop    edi
3001d3d2:	pop    esi
3001d3d3:	leave  
3001d3d4:	ret    
3001d3d5:	xor    eax,eax
3001d3d7:	jmp    0x3001d3d1
3001d3d9:	push   ebp
3001d3da:	mov    ebp,esp
3001d3dc:	push   esi
3001d3dd:	mov    esi,ecx
3001d3df:	push   DWORD PTR [esi+0x4]
3001d3e2:	mov    DWORD PTR [esi],0x3001d404
3001d3e8:	call   DWORD PTR ds:0x30045588
3001d3ee:	test   BYTE PTR [ebp+0x8],0x1
3001d3f2:	je     0x3001d3fb
3001d3f4:	push   esi
3001d3f5:	call   DWORD PTR ds:0x300455b0
3001d3fb:	mov    eax,esi
3001d3fd:	pop    esi
3001d3fe:	pop    ebp
3001d3ff:	ret    0x4
3001d402:	nop
3001d403:	nop
3001d404:	(bad)  
3001d406:	add    DWORD PTR [eax],esi
3001d408:	and    eax,eax
3001d40a:	add    dh,BYTE PTR [eax]
3001d40c:	push   ebp
3001d40d:	mov    ebp,esp
3001d40f:	push   ecx
3001d410:	push   edi
3001d411:	mov    edi,DWORD PTR [ecx]
3001d413:	test   edi,edi
3001d415:	je     0x3001f7c3
3001d41b:	push   esi
3001d41c:	push   0x8
3001d41e:	call   DWORD PTR ds:0x300455ac
3001d424:	mov    esi,eax
3001d426:	test   esi,esi
3001d428:	je     0x3001d44e
3001d42a:	xor    eax,eax
3001d42c:	mov    DWORD PTR [ebp-0x4],eax
3001d42f:	test   edi,edi
3001d431:	je     0x3001d446
3001d433:	lea    eax,[ebp-0x4]
3001d436:	push   eax
3001d437:	push   DWORD PTR [edi+0x4]
3001d43a:	call   DWORD PTR ds:0x30045584
3001d440:	mov    DWORD PTR [esi+0x4],eax
3001d443:	mov    eax,DWORD PTR [ebp-0x4]
3001d446:	mov    DWORD PTR [esi],eax
3001d448:	mov    eax,esi
3001d44a:	pop    esi
3001d44b:	pop    edi
3001d44c:	leave  
3001d44d:	ret    
3001d44e:	xor    esi,esi
3001d450:	jmp    0x3001d448
3001d452:	push   0x1c
3001d454:	mov    eax,0x3003e7dc
3001d459:	call   0x3000116a
3001d45e:	mov    DWORD PTR [ebp-0x20],ecx
3001d461:	mov    ebx,DWORD PTR [ebp+0x8]
3001d464:	mov    edi,DWORD PTR [ebp+0xc]
3001d467:	mov    ecx,DWORD PTR [ebx+0x4]
3001d46a:	cmp    DWORD PTR [ecx-0xc],0x0
3001d46e:	je     0x3001d47f
3001d470:	mov    edx,DWORD PTR [ebx+0x20]
3001d473:	push   edi
3001d474:	push   DWORD PTR [ebx+0x28]
3001d477:	push   DWORD PTR [ebx+0x24]
3001d47a:	call   0x3001d08e
3001d47f:	mov    esi,DWORD PTR [edi]
3001d481:	test   esi,esi
3001d483:	je     0x3001f84e
3001d489:	lea    eax,[ebp+0x8]
3001d48c:	push   eax
3001d48d:	push   DWORD PTR [esi+0x4]
3001d490:	xor    ebx,ebx
3001d492:	mov    DWORD PTR [ebp+0x8],ebx
3001d495:	call   DWORD PTR ds:0x30045570
3001d49b:	test   eax,eax
3001d49d:	jne    0x3001f8b6
3001d4a3:	mov    eax,DWORD PTR [ebp+0x8]
3001d4a6:	mov    esi,DWORD PTR [edi]
3001d4a8:	mov    DWORD PTR [ebp-0x28],eax
3001d4ab:	lea    eax,[ebp+0x8]
3001d4ae:	push   eax
3001d4af:	push   DWORD PTR [esi+0x4]
3001d4b2:	mov    DWORD PTR [ebp+0x8],ebx
3001d4b5:	call   DWORD PTR ds:0x300455bc
3001d4bb:	test   eax,eax
3001d4bd:	jne    0x3001f8be
3001d4c3:	mov    eax,DWORD PTR [ebp+0x8]
3001d4c6:	mov    ecx,edi
3001d4c8:	mov    DWORD PTR [ebp-0x24],eax
3001d4cb:	call   0x3001d40c
3001d4d0:	mov    edi,eax
3001d4d2:	lea    eax,[ebp+0x8]
3001d4d5:	push   eax
3001d4d6:	push   DWORD PTR [edi]
3001d4d8:	mov    DWORD PTR [ebp-0x1c],edi
3001d4db:	mov    DWORD PTR [ebp+0x8],ebx
3001d4de:	call   DWORD PTR ds:0x3004557c
3001d4e4:	test   eax,eax
3001d4e6:	jne    0x3001f8c6
3001d4ec:	mov    esi,DWORD PTR [ebp+0x8]
3001d4ef:	mov    DWORD PTR [ebp-0x18],esi
3001d4f2:	mov    ecx,DWORD PTR [ebp-0x20]
3001d4f5:	lea    edx,[ebp-0x28]
3001d4f8:	mov    DWORD PTR [ebp-0x4],ebx
3001d4fb:	mov    eax,DWORD PTR [ecx]
3001d4fd:	push   edx
3001d4fe:	push   esi
3001d4ff:	call   DWORD PTR [eax+0x4]
3001d502:	push   esi
3001d503:	push   DWORD PTR [edi]
3001d505:	call   DWORD PTR ds:0x30045578
3001d50b:	test   eax,eax
3001d50d:	jne    0x3001f8ce
3001d513:	push   DWORD PTR [edi]
3001d515:	call   DWORD PTR ds:0x30045580
3001d51b:	push   edi
3001d51c:	call   DWORD PTR ds:0x300455b0
3001d522:	mov    al,0x1
3001d524:	call   0x3000119d
3001d529:	ret    0x8
3001d52c:	ret    0x8
3001d52f:	push   ebp
3001d530:	mov    ebp,esp
3001d532:	sub    esp,0x98
3001d538:	mov    eax,ds:0x30043050
3001d53d:	xor    eax,ebp
3001d53f:	mov    DWORD PTR [ebp-0x4],eax
3001d542:	push   0x90
3001d547:	lea    eax,[ebp-0x94]
3001d54d:	push   0x0
3001d54f:	push   eax
3001d550:	call   0x300011b1
3001d555:	add    esp,0xc
3001d558:	lea    eax,[ebp-0x98]
3001d55e:	push   eax
3001d55f:	mov    DWORD PTR [ebp-0x98],0x94
3001d569:	call   DWORD PTR ds:0x300450b0
3001d56f:	mov    ecx,DWORD PTR [ebp-0x4]
3001d572:	xor    eax,eax
3001d574:	cmp    DWORD PTR [ebp-0x88],0x2
3001d57b:	sete   al
3001d57e:	xor    ecx,ebp
3001d580:	call   0x3000115c
3001d585:	leave  
3001d586:	ret    
3001d587:	push   esi
3001d588:	push   edi
3001d589:	call   0x3001d52f
3001d58e:	push   0x3001d660
3001d593:	mov    ds:0x30044494,eax
3001d598:	call   DWORD PTR ds:0x30045174
3001d59e:	mov    esi,eax
3001d5a0:	test   esi,esi
3001d5a2:	je     0x30028267
3001d5a8:	mov    edi,DWORD PTR ds:0x30045178
3001d5ae:	push   0x3001d670
3001d5b3:	push   esi
3001d5b4:	call   edi
3001d5b6:	mov    ds:0x30044474,eax
3001d5bb:	test   eax,eax
3001d5bd:	je     0x30028267
3001d5c3:	push   0x3001d684
3001d5c8:	push   esi
3001d5c9:	call   edi
3001d5cb:	mov    ds:0x30044478,eax
3001d5d0:	test   eax,eax
3001d5d2:	je     0x30028267
3001d5d8:	push   0x3001d698
3001d5dd:	push   esi
3001d5de:	call   edi
3001d5e0:	mov    ds:0x3004447c,eax
3001d5e5:	test   eax,eax
3001d5e7:	je     0x30028267
3001d5ed:	push   0x3001d6a8
3001d5f2:	push   esi
3001d5f3:	call   edi
3001d5f5:	mov    ds:0x30044480,eax
3001d5fa:	test   eax,eax
3001d5fc:	je     0x30028267
3001d602:	push   0x3001d6bc
3001d607:	push   esi
3001d608:	call   edi
3001d60a:	mov    ds:0x30044488,eax
3001d60f:	test   eax,eax
3001d611:	je     0x30028267
3001d617:	push   0x3001d6d0
3001d61c:	push   esi
3001d61d:	call   edi
3001d61f:	mov    ds:0x3004448c,eax
3001d624:	test   eax,eax
3001d626:	je     0x30028267
3001d62c:	cmp    DWORD PTR ds:0x30044494,0x0
3001d633:	je     0x3001d29a
3001d639:	push   0x3001d6e4
3001d63e:	push   esi
3001d63f:	call   edi
3001d641:	mov    ds:0x30044484,eax
3001d646:	test   eax,eax
3001d648:	je     0x30028267
3001d64e:	xor    eax,eax
3001d650:	inc    eax
3001d651:	pop    edi
3001d652:	mov    DWORD PTR ds:0x30044490,0x1
3001d65c:	pop    esi
3001d65d:	ret    
3001d65e:	nop
3001d65f:	nop
3001d660:	push   ebp
3001d661:	add    BYTE PTR [ebx+0x0],dl
3001d664:	inc    ebp
3001d665:	add    BYTE PTR [edx+0x0],dl
3001d668:	xor    eax,DWORD PTR [eax]
3001d66a:	xor    al,BYTE PTR [eax]
3001d66c:	add    BYTE PTR [eax],al
3001d66e:	nop
3001d66f:	nop
3001d670:	inc    edi
3001d671:	gs je  0x3001d6c7
3001d674:	jns    0x3001d6e9
3001d676:	je     0x3001d6dd
3001d678:	ins    DWORD PTR es:[edi],dx
3001d679:	dec    ebp
3001d67a:	gs je  0x3001d6ef
3001d67d:	imul   esp,DWORD PTR [ebx+0x73],0x90909000
3001d684:	dec    ebp
3001d685:	outs   dx,DWORD PTR ds:[esi]
3001d686:	outs   dx,BYTE PTR ds:[esi]
3001d687:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
3001d68f:	push   edi
3001d690:	imul   ebp,DWORD PTR [esi+0x64],0x9000776f
3001d697:	nop
3001d698:	dec    ebp
3001d699:	outs   dx,DWORD PTR ds:[esi]
3001d69a:	outs   dx,BYTE PTR ds:[esi]
3001d69b:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
3001d6a3:	push   edx
3001d6a4:	arpl   WORD PTR gs:[eax+eax*1+0x4d],si
3001d6a9:	outs   dx,DWORD PTR ds:[esi]
3001d6aa:	outs   dx,BYTE PTR ds:[esi]
3001d6ab:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
3001d6b3:	push   eax
3001d6b4:	outs   dx,DWORD PTR ds:[esi]
3001d6b5:	imul   ebp,DWORD PTR [esi+0x74],0x90909000
3001d6bc:	inc    ebp
3001d6bd:	outs   dx,BYTE PTR ds:[esi]
3001d6be:	jne    0x3001d72d
3001d6c0:	inc    esp
3001d6c1:	imul   esi,DWORD PTR [ebx+0x70],0x4d79616c
3001d6c8:	outs   dx,DWORD PTR ds:[esi]
3001d6c9:	outs   dx,BYTE PTR ds:[esi]
3001d6ca:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6e450073
3001d6d2:	jne    0x3001d741
3001d6d4:	inc    esp
3001d6d5:	imul   esi,DWORD PTR [ebx+0x70],0x4479616c
3001d6dc:	gs jbe 0x3001d748
3001d6df:	arpl   WORD PTR [ebp+0x73],sp
3001d6e2:	push   edi
3001d6e3:	add    BYTE PTR [edi+0x65],al
3001d6e6:	je     0x3001d735
3001d6e8:	outs   dx,DWORD PTR ds:[esi]
3001d6e9:	outs   dx,BYTE PTR ds:[esi]
3001d6ea:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
3001d6f2:	push   edi
3001d6f3:	add    BYTE PTR [ebp-0x75],dl
3001d6f6:	in     al,dx
3001d6f7:	sub    esp,0x34
3001d6fa:	push   ebx
3001d6fb:	mov    ebx,DWORD PTR ds:0x300435c8
3001d701:	push   esi
3001d702:	push   edi
3001d703:	xor    edi,edi
3001d705:	cmp    DWORD PTR [ebx],edi
3001d707:	jne    0x3001d7d3
3001d70d:	cmp    WORD PTR [ebx+0x4],di
3001d711:	jne    0x3001d74b
3001d713:	push   0xa
3001d715:	pop    ecx
3001d716:	xor    eax,eax
3001d718:	lea    edi,[ebp-0x30]
3001d71b:	rep stos DWORD PTR es:[edi],eax
3001d71d:	lea    eax,[ebp-0x30]
3001d720:	push   eax
3001d721:	mov    DWORD PTR [ebp-0x2c],0x3001e854
3001d728:	mov    DWORD PTR [ebp-0x20],0x30000000
3001d72f:	mov    DWORD PTR [ebp-0xc],0x3001d7d8
3001d736:	call   DWORD PTR ds:0x30045460
3001d73c:	mov    WORD PTR [ebx+0x4],ax
3001d740:	test   ax,ax
3001d743:	je     0x3001d7d3
3001d749:	xor    edi,edi
3001d74b:	lea    eax,[ebp-0x8]
3001d74e:	push   eax
3001d74f:	mov    ecx,ebx
3001d751:	call   0x3001c92d
3001d756:	mov    ecx,DWORD PTR [ebp+0x8]
3001d759:	push   edi
3001d75a:	mov    eax,DWORD PTR [ecx+0x8]
3001d75d:	sub    eax,DWORD PTR [ecx]
3001d75f:	push   0x30000000
3001d764:	sub    eax,DWORD PTR [ebp-0x8]
3001d767:	push   edi
3001d768:	cdq    
3001d769:	sub    eax,edx
3001d76b:	mov    esi,eax
3001d76d:	mov    eax,DWORD PTR [ecx+0xc]
3001d770:	sub    eax,DWORD PTR [ecx+0x4]
3001d773:	push   edi
3001d774:	sub    eax,DWORD PTR [ebp-0x4]
3001d777:	push   DWORD PTR [ebp-0x4]
3001d77a:	cdq    
3001d77b:	push   DWORD PTR [ebp-0x8]
3001d77e:	sub    eax,edx
3001d780:	sar    eax,1
3001d782:	add    eax,DWORD PTR [ecx+0x4]
3001d785:	sar    esi,1
3001d787:	add    esi,DWORD PTR [ecx]
3001d789:	push   eax
3001d78a:	movzx  eax,WORD PTR [ebx+0x4]
3001d78e:	push   esi
3001d78f:	push   0x80000000
3001d794:	push   edi
3001d795:	push   eax
3001d796:	push   0x80080
3001d79b:	call   DWORD PTR ds:0x30045464
3001d7a1:	mov    DWORD PTR [ebx],eax
3001d7a3:	test   eax,eax
3001d7a5:	je     0x3001d7d3
3001d7a7:	push   0x8
3001d7a9:	push   eax
3001d7aa:	call   DWORD PTR ds:0x30045468
3001d7b0:	cmp    DWORD PTR [ebp+0xc],0x0
3001d7b4:	mov    ecx,ebx
3001d7b6:	je     0x30020d38
3001d7bc:	push   DWORD PTR [ebp+0xc]
3001d7bf:	mov    DWORD PTR [ebx+0x1c],edi
3001d7c2:	mov    DWORD PTR [ebx+0x18],edi
3001d7c5:	call   0x3001d7ea
3001d7ca:	mov    al,0x1
3001d7cc:	pop    edi
3001d7cd:	pop    esi
3001d7ce:	pop    ebx
3001d7cf:	leave  
3001d7d0:	ret    0x8
3001d7d3:	xor    al,al
3001d7d5:	jmp    0x3001d7cc
3001d7d7:	nop
3001d7d8:	push   esi
3001d7d9:	add    BYTE PTR [ebx+0x0],dl
3001d7dc:	push   ebx
3001d7dd:	add    BYTE PTR [eax+0x0],dh
3001d7e0:	ins    BYTE PTR es:[edi],dx
3001d7e1:	add    BYTE PTR [ecx+0x0],ah
3001d7e4:	jae    0x3001d7e6
3001d7e6:	push   0x55000000
3001d7eb:	mov    ebp,esp
3001d7ed:	push   esi
3001d7ee:	mov    esi,ecx
3001d7f0:	call   DWORD PTR ds:0x30045260
3001d7f6:	fild   DWORD PTR [ebp+0x8]
3001d7f9:	mov    DWORD PTR [esi+0x10],eax
3001d7fc:	mov    eax,DWORD PTR [ebp+0x8]
3001d7ff:	test   eax,eax
3001d801:	js     0x30020d47
3001d807:	push   0x0
3001d809:	fstp   DWORD PTR [esi+0x14]
3001d80c:	push   0x10
3001d80e:	push   0x1
3001d810:	push   DWORD PTR [esi]
3001d812:	call   DWORD PTR ds:0x30045474
3001d818:	mov    DWORD PTR [esi+0xc],eax
3001d81b:	pop    esi
3001d81c:	pop    ebp
3001d81d:	ret    0x4
3001d820:	push   ebp
3001d821:	mov    ebp,esp
3001d823:	sub    esp,0x25c
3001d829:	mov    eax,ds:0x30043050
3001d82e:	xor    eax,ebp
3001d830:	mov    DWORD PTR [ebp-0x4],eax
3001d833:	mov    eax,DWORD PTR [ebp+0x8]
3001d836:	push   esi
3001d837:	mov    esi,DWORD PTR [ebp+0x14]
3001d83a:	lea    ecx,[ebp-0x258]
3001d840:	push   ecx
3001d841:	push   eax
3001d842:	call   DWORD PTR ds:0x300450ec
3001d848:	cmp    eax,0xffffffff
3001d84b:	je     0x3001d87a
3001d84d:	test   esi,esi
3001d84f:	je     0x3001d862
3001d851:	mov    ecx,DWORD PTR [ebp-0x244]
3001d857:	mov    DWORD PTR [esi],ecx
3001d859:	mov    ecx,DWORD PTR [ebp-0x240]
3001d85f:	mov    DWORD PTR [esi+0x4],ecx
3001d862:	push   eax
3001d863:	call   DWORD PTR ds:0x300450e4
3001d869:	mov    al,0x1
3001d86b:	mov    ecx,DWORD PTR [ebp-0x4]
3001d86e:	xor    ecx,ebp
3001d870:	pop    esi
3001d871:	call   0x3000115c
3001d876:	leave  
3001d877:	ret    0x10
3001d87a:	xor    al,al
3001d87c:	jmp    0x3001d86b
3001d87e:	cmp    DWORD PTR [eax],edx
3001d880:	je     0x3001d88a
3001d882:	mov    eax,DWORD PTR [eax+0x18]
3001d885:	jmp    0x3001812f
3001d88a:	mov    eax,0x80070057
3001d88f:	ret    
3001d890:	push   ebp
3001d891:	mov    ebp,esp
3001d893:	cmp    BYTE PTR ds:0x300430f1,0x0
3001d89a:	jne    0x30023824
3001d8a0:	pop    ebp
3001d8a1:	ret    0x4
3001d8a4:	push   ebp
3001d8a5:	mov    ebp,esp
3001d8a7:	push   esi
3001d8a8:	mov    esi,ecx
3001d8aa:	mov    ecx,DWORD PTR [esi+0x8]
3001d8ad:	test   ecx,ecx
3001d8af:	jne    0x30020543
3001d8b5:	cmp    BYTE PTR ds:0x30043bcc,0x0
3001d8bc:	je     0x3001e03c
3001d8c2:	mov    eax,ds:0x30043bc8
3001d8c7:	test   eax,eax
3001d8c9:	je     0x30020552
3001d8cf:	push   0x0
3001d8d1:	push   DWORD PTR [esi+0x4]
3001d8d4:	push   DWORD PTR [ebp+0x8]
3001d8d7:	push   DWORD PTR [esi]
3001d8d9:	call   eax
3001d8db:	pop    esi
3001d8dc:	pop    ebp
3001d8dd:	ret    0x4
3001d8e0:	xor    esi,esi
3001d8e2:	jmp    0x300162f1
3001d8e7:	xor    eax,eax
3001d8e9:	cmp    DWORD PTR [ecx+0x80],0x1
3001d8f0:	je     0x300162fe
3001d8f6:	jmp    0x30024a31
3001d8fb:	test   ecx,ecx
3001d8fd:	je     0x3001d90a
3001d8ff:	mov    DWORD PTR [ebp-0x41c],ecx
3001d905:	jmp    0x3001607f
3001d90a:	push   0x57
3001d90c:	pop    esi
3001d90d:	jmp    0x30016077
3001d912:	push   0xe
3001d914:	pop    edi
3001d915:	jmp    0x300161cd
3001d91a:	push   ebp
3001d91b:	mov    ebp,esp
3001d91d:	and    esp,0xfffffff8
3001d920:	sub    esp,0x26c
3001d926:	mov    eax,ds:0x30043050
3001d92b:	xor    eax,esp
3001d92d:	mov    DWORD PTR [esp+0x268],eax
3001d934:	push   ebx
3001d935:	push   esi
3001d936:	push   edi
3001d937:	push   DWORD PTR [ecx]
3001d939:	xor    ebx,ebx
3001d93b:	lea    ecx,[esp+0x18]
3001d93f:	mov    DWORD PTR [esp+0x2c],ebx
3001d943:	mov    DWORD PTR [esp+0x30],ebx
3001d947:	mov    DWORD PTR [esp+0x34],ebx
3001d94b:	call   0x300089ae
3001d950:	lea    ecx,[esp+0x14]
3001d954:	call   0x300089c3
3001d959:	push   0x20019
3001d95e:	push   DWORD PTR [esp+0x18]
3001d962:	lea    ecx,[esp+0x30]
3001d966:	push   0x80000001
3001d96b:	call   0x300051d9
3001d970:	test   eax,eax
3001d972:	jne    0x3001da0a
3001d978:	mov    esi,0x3001d9e4
3001d97d:	lea    edi,[esp+0x54]
3001d981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001d985:	push   ecx
3001d986:	lea    ecx,[esp+0x38]
3001d98a:	mov    DWORD PTR [esp+0x1c],0x104
3001d992:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
3001d994:	call   0x3000704d
3001d999:	mov    esi,ebx
3001d99b:	lea    eax,[esp+0x4c]
3001d99f:	push   eax
3001d9a0:	push   ebx
3001d9a1:	push   ebx
3001d9a2:	push   ebx
3001d9a3:	lea    eax,[esp+0x28]
3001d9a7:	push   eax
3001d9a8:	lea    eax,[esp+0x7c]
3001d9ac:	push   eax
3001d9ad:	push   esi
3001d9ae:	push   DWORD PTR [esp+0x44]
3001d9b2:	call   DWORD PTR ds:0x30045074
3001d9b8:	test   eax,eax
3001d9ba:	jne    0x3001d9f6
3001d9bc:	lea    eax,[esp+0x54]
3001d9c0:	push   eax
3001d9c1:	lea    eax,[esp+0x6c]
3001d9c5:	push   eax
3001d9c6:	call   DWORD PTR ds:0x3004531c
3001d9cc:	pop    ecx
3001d9cd:	pop    ecx
3001d9ce:	test   eax,eax
3001d9d0:	jne    0x30025a2a
3001d9d6:	inc    esi
3001d9d7:	mov    DWORD PTR [esp+0x18],0x104
3001d9df:	jmp    0x3001d99b
3001d9e1:	nop
3001d9e2:	nop
3001d9e3:	nop
3001d9e4:	pop    edi
3001d9e5:	add    BYTE PTR [ebx+0x0],al
3001d9e8:	outs   dx,DWORD PTR ds:[esi]
3001d9e9:	add    BYTE PTR [esi+0x0],ch
3001d9ec:	data16 add BYTE PTR [ecx+0x0],ch
3001d9f0:	add    BYTE PTR [bx+0x0],bl
3001d9f4:	add    BYTE PTR [eax],al
3001d9f6:	cmp    DWORD PTR [esp+0x3c],0x0
3001d9fb:	jne    0x30025abd
3001da01:	lea    ecx,[esp+0x34]
3001da05:	call   0x30007014
3001da0a:	lea    ecx,[esp+0x14]
3001da0e:	call   0x300051a4
3001da13:	lea    ecx,[esp+0x28]
3001da17:	call   0x300051ae
3001da1c:	mov    ecx,DWORD PTR [esp+0x274]
3001da23:	pop    edi
3001da24:	pop    esi
3001da25:	pop    ebx
3001da26:	xor    ecx,esp
3001da28:	call   0x3000115c
3001da2d:	mov    esp,ebp
3001da2f:	pop    ebp
3001da30:	ret    
3001da31:	xor    al,al
3001da33:	jmp    0x3001bbac
3001da38:	cmp    DWORD PTR [ebp-0xc],0x0
3001da3c:	je     0x3001da31
3001da3e:	jmp    0x3001bb34
3001da43:	push   ebx
3001da44:	push   edi
3001da45:	push   eax
3001da46:	call   0x3001db03
3001da4b:	jmp    0x3001b547
3001da50:	xor    edi,edi
3001da52:	jmp    0x3001dce9
3001da57:	xor    edi,edi
3001da59:	inc    edi
3001da5a:	jmp    0x3001dd07
3001da5f:	lea    eax,[ebp+0x8]
3001da62:	push   eax
3001da63:	call   0x30008fa7
3001da68:	push   DWORD PTR [eax]
3001da6a:	mov    ecx,esi
3001da6c:	call   0x3000b906
3001da71:	cmp    DWORD PTR [ebp+0x8],0x0
3001da75:	jne    0x3001da5f
3001da77:	jmp    0x3000733b
3001da7c:	mov    esi,0x80030002
3001da81:	jmp    0x3001b549
3001da86:	nop
3001da87:	nop
3001da88:	add    BYTE PTR cs:[eax+0x0],dl
3001da8c:	imul   eax,DWORD PTR [eax],0x67
3001da8f:	add    BYTE PTR [ebp+0x0],dl
3001da92:	outs   dx,BYTE PTR ds:[esi]
3001da93:	add    BYTE PTR [eax+eax*1+0x65],al
3001da97:	add    BYTE PTR [esi+0x0],ah
3001da9a:	add    BYTE PTR [eax],al
3001da9c:	lea    ecx,[ebp-0x268]
3001daa2:	call   0x3000c413
3001daa7:	test   eax,eax
3001daa9:	jne    0x3001dac5
3001daab:	push   DWORD PTR [ebp-0x278]
3001dab1:	mov    eax,ecx
3001dab3:	push   eax
3001dab4:	mov    ecx,ebx
3001dab6:	call   0x3001b420
3001dabb:	mov    edi,eax
3001dabd:	test   edi,edi
3001dabf:	js     0x3001dce9
3001dac5:	lea    ecx,[ebp-0x268]
3001dacb:	call   0x3001dad5
3001dad0:	jmp    0x3001dbd0
3001dad5:	push   esi
3001dad6:	mov    esi,ecx
3001dad8:	mov    eax,DWORD PTR [esi+0x254]
3001dade:	test   eax,eax
3001dae0:	je     0x300248bc
3001dae6:	cmp    DWORD PTR [esi+0x258],0x0
3001daed:	je     0x300248bc
3001daf3:	push   esi
3001daf4:	push   eax
3001daf5:	call   DWORD PTR ds:0x300450e8
3001dafb:	mov    DWORD PTR [esi+0x258],eax
3001db01:	pop    esi
3001db02:	ret    
3001db03:	push   ebp
3001db04:	mov    ebp,esp
3001db06:	sub    esp,0x280
3001db0c:	mov    eax,ds:0x30043050
3001db11:	xor    eax,ebp
3001db13:	mov    DWORD PTR [ebp-0x4],eax
3001db16:	mov    eax,DWORD PTR [ebp+0xc]
3001db19:	push   ebx
3001db1a:	push   esi
3001db1b:	push   edi
3001db1c:	mov    edi,DWORD PTR [ebp+0x10]
3001db1f:	mov    DWORD PTR [ebp-0x278],eax
3001db25:	lea    eax,[ebp-0x274]
3001db2b:	mov    ebx,ecx
3001db2d:	mov    ecx,DWORD PTR [ebp+0x8]
3001db30:	push   eax
3001db31:	mov    DWORD PTR [ebp-0x27c],edi
3001db37:	call   0x3000c489
3001db3c:	mov    esi,DWORD PTR [ebp-0x274]
3001db42:	cmp    DWORD PTR [esi-0xc],0x0
3001db46:	je     0x30023766
3001db4c:	push   ecx
3001db4d:	push   esi
3001db4e:	lea    ecx,[ebx+0x24]
3001db51:	call   0x3001dd25
3001db56:	test   eax,eax
3001db58:	jne    0x3001da57
3001db5e:	push   ecx
3001db5f:	push   esi
3001db60:	mov    ecx,edi
3001db62:	call   0x3001dd25
3001db67:	test   eax,eax
3001db69:	jne    0x3001da57
3001db6f:	push   esi
3001db70:	mov    ecx,edi
3001db72:	call   0x3000b906
3001db77:	lea    ecx,[ebp-0x268]
3001db7d:	call   0x3000c07d
3001db82:	lea    ecx,[ebp-0x270]
3001db88:	call   0x300051c8
3001db8d:	mov    eax,DWORD PTR [ebx+0x4]
3001db90:	mov    eax,DWORD PTR [eax]
3001db92:	mov    DWORD PTR [ebp-0x26c],eax
3001db98:	test   eax,eax
3001db9a:	je     0x3001dbe6
3001db9c:	lea    eax,[ebp-0x26c]
3001dba2:	push   eax
3001dba3:	call   0x30008fa7
3001dba8:	push   DWORD PTR [eax]
3001dbaa:	lea    eax,[ebp-0x270]
3001dbb0:	push   esi
3001dbb1:	push   0x3000522c
3001dbb6:	push   eax
3001dbb7:	call   0x30005153
3001dbbc:	add    esp,0x10
3001dbbf:	lea    ecx,[ebp-0x268]
3001dbc5:	push   DWORD PTR [ebp-0x270]
3001dbcb:	call   0x3000c18b
3001dbd0:	test   eax,eax
3001dbd2:	jne    0x3001da9c
3001dbd8:	cmp    DWORD PTR [ebp-0x26c],eax
3001dbde:	jne    0x3001db9c
3001dbe0:	mov    edi,DWORD PTR [ebp-0x27c]
3001dbe6:	push   DWORD PTR ds:0x30043b94
3001dbec:	lea    eax,[ebp-0x270]
3001dbf2:	push   esi
3001dbf3:	push   0x3001dc80
3001dbf8:	push   eax
3001dbf9:	call   0x30005153
3001dbfe:	add    esp,0x10
3001dc01:	lea    ecx,[ebp-0x268]
3001dc07:	push   DWORD PTR [ebp-0x270]
3001dc0d:	call   0x3000c18b
3001dc12:	test   eax,eax
3001dc14:	jne    0x30023770
3001dc1a:	cmp    BYTE PTR [ebx+0x3c],0x0
3001dc1e:	je     0x3001da50
3001dc24:	push   esi
3001dc25:	lea    eax,[ebp-0x270]
3001dc2b:	push   0x3001dc90
3001dc30:	push   eax
3001dc31:	call   0x30005153
3001dc36:	add    esp,0xc
3001dc39:	lea    ecx,[ebp-0x268]
3001dc3f:	push   DWORD PTR [ebp-0x270]
3001dc45:	call   0x3000c18b
3001dc4a:	test   eax,eax
3001dc4c:	je     0x3001da50
3001dc52:	push   0x2e
3001dc54:	pop    esi
3001dc55:	lea    ecx,[ebp-0x268]
3001dc5b:	call   0x3000c413
3001dc60:	test   eax,eax
3001dc62:	jne    0x3001dc9e
3001dc64:	lea    ecx,[ebp-0x268]
3001dc6a:	call   0x3001dad5
3001dc6f:	test   eax,eax
3001dc71:	je     0x3001da50
3001dc77:	mov    edi,DWORD PTR [ebp-0x27c]
3001dc7d:	jmp    0x3001dc55
3001dc7f:	nop
3001dc80:	and    eax,0x5c007300
3001dc85:	add    BYTE PTR [edx],ch
3001dc87:	add    BYTE PTR ds:0x7300,ah
3001dc8d:	add    BYTE PTR [eax+0x73002590],dl
3001dc93:	add    BYTE PTR [eax+eax*1+0x2a],bl
3001dc97:	add    BYTE PTR [esi],ch
3001dc99:	add    BYTE PTR [edx],ch
3001dc9b:	add    BYTE PTR [eax],al
3001dc9d:	add    BYTE PTR [ebx+0x7400f07d],al
3001dca3:	cmp    WORD PTR es:[ebp-0x23c],si
3001dcab:	jne    0x3001dcca
3001dcad:	cmp    WORD PTR [ebp-0x23a],0x0
3001dcb5:	je     0x3001dc64
3001dcb7:	cmp    WORD PTR [ebp-0x23a],si
3001dcbe:	jne    0x3001dcca
3001dcc0:	cmp    WORD PTR [ebp-0x238],0x0
3001dcc8:	je     0x3001dc64
3001dcca:	push   edi
3001dccb:	push   DWORD PTR [ebp-0x278]
3001dcd1:	lea    eax,[ebp-0x268]
3001dcd7:	push   eax
3001dcd8:	mov    ecx,ebx
3001dcda:	call   0x3001db03
3001dcdf:	mov    edi,eax
3001dce1:	test   edi,edi
3001dce3:	jns    0x3001dc64
3001dce9:	lea    ecx,[ebp-0x270]
3001dcef:	call   0x300051a4
3001dcf4:	lea    ecx,[ebp-0x268]
3001dcfa:	call   0x3000c170
3001dcff:	lea    ecx,[ebp-0x18]
3001dd02:	call   0x300051a4
3001dd07:	lea    ecx,[ebp-0x274]
3001dd0d:	call   0x300051a4
3001dd12:	mov    ecx,DWORD PTR [ebp-0x4]
3001dd15:	mov    eax,edi
3001dd17:	pop    edi
3001dd18:	pop    esi
3001dd19:	xor    ecx,ebp
3001dd1b:	pop    ebx
3001dd1c:	call   0x3000115c
3001dd21:	leave  
3001dd22:	ret    0xc
3001dd25:	push   ebp
3001dd26:	mov    ebp,esp
3001dd28:	push   esi
3001dd29:	mov    esi,DWORD PTR [ecx]
3001dd2b:	test   esi,esi
3001dd2d:	je     0x3001dd44
3001dd2f:	push   DWORD PTR [ebp+0x8]
3001dd32:	push   DWORD PTR [esi+0x8]
3001dd35:	call   0x3000919f
3001dd3a:	pop    ecx
3001dd3b:	pop    ecx
3001dd3c:	test   eax,eax
3001dd3e:	je     0x3001dd4b
3001dd40:	mov    esi,DWORD PTR [esi]
3001dd42:	jmp    0x3001dd2b
3001dd44:	xor    eax,eax
3001dd46:	pop    esi
3001dd47:	pop    ebp
3001dd48:	ret    0x8
3001dd4b:	mov    eax,esi
3001dd4d:	jmp    0x3001dd46
3001dd4f:	push   ebp
3001dd50:	mov    ebp,esp
3001dd52:	sub    esp,0x7c
3001dd55:	push   esi
3001dd56:	push   edi
3001dd57:	mov    esi,ecx
3001dd59:	push   0x30018530
3001dd5e:	lea    ecx,[ebp-0xc]
3001dd61:	call   0x3000437e
3001dd66:	push   ecx
3001dd67:	lea    ecx,[ebp-0x3c]
3001dd6a:	call   0x3000704d
3001dd6f:	push   ecx
3001dd70:	lea    ecx,[ebp-0x24]
3001dd73:	call   0x3000704d
3001dd78:	mov    edi,0x3001da88
3001dd7d:	push   edi
3001dd7e:	lea    eax,[ebp-0xc]
3001dd81:	push   eax
3001dd82:	lea    eax,[ebp-0x8]
3001dd85:	push   eax
3001dd86:	call   0x3000ba45
3001dd8b:	push   DWORD PTR [eax]
3001dd8d:	lea    ecx,[ebp-0x3c]
3001dd90:	call   0x3000b906
3001dd95:	lea    ecx,[ebp-0x8]
3001dd98:	call   0x300051a4
3001dd9d:	push   0x30009708
3001dda2:	lea    eax,[ebp-0xc]
3001dda5:	push   eax
3001dda6:	lea    eax,[ebp-0x8]
3001dda9:	push   eax
3001ddaa:	call   0x3000ba45
3001ddaf:	push   DWORD PTR [eax]
3001ddb1:	lea    ecx,[ebp-0x24]
3001ddb4:	call   0x3000b906
3001ddb9:	lea    ecx,[ebp-0x8]
3001ddbc:	call   0x300051a4
3001ddc1:	lea    eax,[ebp-0x24]
3001ddc4:	push   eax
3001ddc5:	lea    eax,[ebp-0x3c]
3001ddc8:	push   eax
3001ddc9:	push   0x0
3001ddcb:	push   0x0
3001ddcd:	lea    ecx,[ebp-0x7c]
3001ddd0:	call   0x3001bf50
3001ddd5:	lea    eax,[esi+0x98]
3001dddb:	push   eax
3001dddc:	lea    ecx,[ebp-0x8]
3001dddf:	call   0x30004340
3001dde4:	push   0x104
3001dde9:	lea    ecx,[ebp-0x8]
3001ddec:	call   0x30004286
3001ddf1:	push   edi
3001ddf2:	push   eax
3001ddf3:	call   DWORD PTR ds:0x30045628
3001ddf9:	push   0xffffffff
3001ddfb:	lea    ecx,[ebp-0x8]
3001ddfe:	call   0x30006c8c
3001de03:	lea    eax,[ebp-0x8]
3001de06:	push   eax
3001de07:	lea    ecx,[ebp-0x7c]
3001de0a:	call   0x3001b57f
3001de0f:	mov    esi,eax
3001de11:	test   esi,esi
3001de13:	jns    0x30021a49
3001de19:	cmp    si,0x2
3001de1d:	jne    0x3001de51
3001de1f:	xor    esi,esi
3001de21:	lea    ecx,[ebp-0x8]
3001de24:	call   0x300051a4
3001de29:	lea    ecx,[ebp-0x7c]
3001de2c:	call   0x3000eb1e
3001de31:	lea    ecx,[ebp-0x24]
3001de34:	call   0x30007014
3001de39:	lea    ecx,[ebp-0x3c]
3001de3c:	call   0x30007014
3001de41:	lea    ecx,[ebp-0xc]
3001de44:	call   0x300051a4
3001de49:	pop    edi
3001de4a:	mov    eax,esi
3001de4c:	pop    esi
3001de4d:	leave  
3001de4e:	ret    0x4
3001de51:	cmp    BYTE PTR ds:0x300430f1,0x0
3001de58:	jne    0x30021a80
3001de5e:	jmp    0x3001de21
3001de60:	lea    eax,[esp+0x70]
3001de64:	push   eax
3001de65:	mov    ecx,ebx
3001de67:	call   0x3001de91
3001de6c:	mov    esi,eax
3001de6e:	test   esi,esi
3001de70:	js     0x3000ea41
3001de76:	lea    eax,[esp+0x70]
3001de7a:	push   eax
3001de7b:	mov    ecx,ebx
3001de7d:	call   0x3001dd4f
3001de82:	mov    esi,eax
3001de84:	test   esi,esi
3001de86:	jns    0x3000e8f5
3001de8c:	jmp    0x3000ea41
3001de91:	push   ebp
3001de92:	mov    ebp,esp
3001de94:	sub    esp,0x20
3001de97:	push   ebx
3001de98:	push   esi
3001de99:	mov    esi,ecx
3001de9b:	push   edi
3001de9c:	cmp    BYTE PTR [esi+0xc],0x0
3001dea0:	jne    0x30021f22
3001dea6:	push   0x23f5
3001deab:	mov    BYTE PTR [esi+0xc],0x1
3001deaf:	call   0x3000532c
3001deb4:	mov    edi,DWORD PTR [ebp+0x8]
3001deb7:	lea    ecx,[edi+0xc]
3001deba:	call   0x3000e730
3001debf:	lea    ecx,[edi+0x24]
3001dec2:	call   0x30007014
3001dec7:	cmp    BYTE PTR ds:0x300430f1,0x0
3001dece:	jne    0x30021f29
3001ded4:	push   ecx
3001ded5:	lea    ecx,[ebp-0x20]
3001ded8:	call   0x3000704d
3001dedd:	push   DWORD PTR [esi+0x98]
3001dee3:	lea    ecx,[ebp-0x20]
3001dee6:	call   0x3000b906
3001deeb:	lea    eax,[ebp-0x20]
3001deee:	push   eax
3001deef:	lea    ecx,[esi+0x40]
3001def2:	call   0x3000c426
3001def7:	mov    eax,DWORD PTR [esi]
3001def9:	mov    ecx,esi
3001defb:	call   DWORD PTR [eax+0x30]
3001defe:	mov    BYTE PTR [ebp+0xb],al
3001df01:	test   al,al
3001df03:	je     0x3001df1a
3001df05:	push   0x0
3001df07:	mov    ecx,esi
3001df09:	call   0x3001be64
3001df0e:	lea    ecx,[esi+0x4c]
3001df11:	push   ecx
3001df12:	lea    ecx,[ebp-0x20]
3001df15:	call   0x3000731d
3001df1a:	lea    eax,[ebp-0x20]
3001df1d:	push   eax
3001df1e:	mov    ecx,edi
3001df20:	call   0x3001df62
3001df25:	mov    ebx,eax
3001df27:	test   ebx,ebx
3001df29:	js     0x3001df51
3001df2b:	push   0x23f6
3001df30:	call   0x3000532c
3001df35:	cmp    BYTE PTR ds:0x300430f1,0x0
3001df3c:	jne    0x30021f40
3001df42:	cmp    BYTE PTR [ebp+0xb],0x0
3001df46:	je     0x3001df51
3001df48:	push   0x1
3001df4a:	mov    ecx,esi
3001df4c:	call   0x3001be64
3001df51:	lea    ecx,[ebp-0x20]
3001df54:	call   0x30007014
3001df59:	mov    eax,ebx
3001df5b:	pop    edi
3001df5c:	pop    esi
3001df5d:	pop    ebx
3001df5e:	leave  
3001df5f:	ret    0x4
3001df62:	push   ebp
3001df63:	mov    ebp,esp
3001df65:	push   ecx
3001df66:	push   ecx
3001df67:	mov    eax,DWORD PTR [ebp+0x8]
3001df6a:	push   ebx
3001df6b:	mov    eax,DWORD PTR [eax]
3001df6d:	push   esi
3001df6e:	xor    bl,bl
3001df70:	push   edi
3001df71:	mov    edi,ecx
3001df73:	mov    DWORD PTR [ebp-0x4],eax
3001df76:	test   eax,eax
3001df78:	je     0x3001dfb0
3001df7a:	lea    eax,[ebp-0x4]
3001df7d:	push   eax
3001df7e:	call   0x30008fa7
3001df83:	push   eax
3001df84:	lea    ecx,[ebp+0x8]
3001df87:	call   0x30004340
3001df8c:	lea    eax,[ebp+0x8]
3001df8f:	push   eax
3001df90:	mov    ecx,edi
3001df92:	call   0x3001b57f
3001df97:	mov    esi,eax
3001df99:	test   esi,esi
3001df9b:	js     0x3001dfbe
3001df9d:	sete   al
3001dfa0:	lea    ecx,[ebp+0x8]
3001dfa3:	or     bl,al
3001dfa5:	call   0x300051a4
3001dfaa:	cmp    DWORD PTR [ebp-0x4],0x0
3001dfae:	jne    0x3001df7a
3001dfb0:	xor    eax,eax
3001dfb2:	test   bl,bl
3001dfb4:	sete   al
3001dfb7:	pop    edi
3001dfb8:	pop    esi
3001dfb9:	pop    ebx
3001dfba:	leave  
3001dfbb:	ret    0x4
3001dfbe:	mov    ecx,esi
3001dfc0:	and    ecx,0xffff
3001dfc6:	cmp    ecx,0x2
3001dfc9:	jne    0x30023744
3001dfcf:	push   DWORD PTR [ebp+0x8]
3001dfd2:	mov    edx,esi
3001dfd4:	mov    ecx,0x3001dfe8
3001dfd9:	call   0x3001d890
3001dfde:	test   esi,esi
3001dfe0:	jmp    0x3001df9d
3001dfe2:	nop
3001dfe3:	nop
3001dfe4:	nop
3001dfe5:	nop
3001dfe6:	nop
3001dfe7:	nop
3001dfe8:	dec    ebp
3001dfe9:	add    BYTE PTR [ecx+0x0],ch
3001dfec:	jae    0x3001dfee
3001dfee:	jae    0x3001dff0
3001dff0:	imul   eax,DWORD PTR [eax],0x67006e
3001dff6:	and    BYTE PTR [eax],al
3001dff8:	data16 add BYTE PTR [edi+0x0],ch
3001dffc:	ins    BYTE PTR es:[edi],dx
3001dffd:	add    BYTE PTR [eax+eax*1+0x65],ah
3001e001:	add    BYTE PTR [edx+0x0],dh
3001e004:	and    BYTE PTR [eax],al
3001e006:	outs   dx,DWORD PTR ds:[esi]
3001e007:	add    BYTE PTR [edx+0x0],dh
3001e00a:	and    BYTE PTR [eax],al
3001e00c:	data16 add BYTE PTR [ecx+0x0],ch
3001e010:	ins    BYTE PTR es:[edi],dx
3001e011:	add    BYTE PTR [ebp+0x0],ah
3001e014:	and    BYTE PTR [eax],al
3001e016:	add    BYTE PTR fs:[ebp+0x0],dh
3001e01a:	jb     0x3001e01c
3001e01c:	imul   eax,DWORD PTR [eax],0x67006e
3001e022:	and    BYTE PTR [eax],al
3001e024:	push   eax
3001e025:	add    BYTE PTR [ebx+0x0],ch
3001e028:	add    BYTE PTR [si+0x0],al
3001e02c:	add    BYTE PTR gs:[esi+0x0],ah
3001e030:	and    BYTE PTR [eax],al
3001e032:	jae    0x3001e034
3001e034:	arpl   WORD PTR [eax],ax
3001e036:	popa   
3001e037:	add    BYTE PTR [esi+0x0],ch
3001e03a:	add    BYTE PTR [eax],al
3001e03c:	push   0x3001e080
3001e041:	call   DWORD PTR ds:0x30045174
3001e047:	test   eax,eax
3001e049:	je     0x3001e068
3001e04b:	push   0x3001e070
3001e050:	push   eax
3001e051:	call   DWORD PTR ds:0x30045178
3001e057:	mov    ds:0x30043bc8,eax
3001e05c:	mov    BYTE PTR ds:0x30043bcc,0x1
3001e063:	jmp    0x3001d8c7
3001e068:	mov    eax,ds:0x30043bc8
3001e06d:	jmp    0x3001e05c
3001e06f:	nop
3001e070:	push   edx
3001e071:	gs addr16 inc esp
3001e074:	gs ins BYTE PTR es:[edi],dx
3001e076:	gs je  0x3001e0de
3001e079:	dec    ebx
3001e07a:	gs jns 0x3001e0c2
3001e07d:	js     0x3001e0d6
3001e07f:	add    BYTE PTR [ecx+0x0],al
3001e082:	add    BYTE PTR fs:[esi+0x0],dh
3001e086:	popa   
3001e087:	add    BYTE PTR [eax+0x0],dh
3001e08a:	imul   eax,DWORD PTR [eax],0x320033
3001e090:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
3001e095:	add    BYTE PTR [eax+eax*1+0x0],ch
3001e099:	add    dh,bh
3001e09b:	shr    ecx,0x78
3001e09e:	mov    bh,0xff
3001e0a0:	inc    DWORD PTR [ebx-0x2a16fd3a]
3001e0a6:	mov    bh,0xff
3001e0a8:	call   DWORD PTR [esi-0x39]
3001e0ab:	pop    es
3001e0ac:	add    al,BYTE PTR [eax]
3001e0ae:	add    BYTE PTR [eax],al
3001e0b0:	call   DWORD PTR ds:0x30045434
3001e0b6:	mov    esi,eax
3001e0b8:	jmp    0x300185ea
3001e0bd:	mov    eax,DWORD PTR [ebp+0x8]
3001e0c0:	mov    DWORD PTR [ebp-0x8],ecx
3001e0c3:	mov    DWORD PTR [ebp-0x10],ecx
3001e0c6:	mov    ebx,eax
3001e0c8:	cmp    DWORD PTR [eax],ecx
3001e0ca:	je     0x3001e0e8
3001e0cc:	push   DWORD PTR [ebx]
3001e0ce:	push   DWORD PTR [ebp-0x4]
3001e0d1:	call   0x30009275
3001e0d6:	pop    ecx
3001e0d7:	pop    ecx
3001e0d8:	test   eax,eax
3001e0da:	je     0x30005aac
3001e0e0:	add    ebx,0x10
3001e0e3:	cmp    DWORD PTR [ebx],0x0
3001e0e6:	jne    0x3001e0cc
3001e0e8:	mov    ecx,DWORD PTR [ebp+0x10]
3001e0eb:	mov    ebx,DWORD PTR [ebp-0x4]
3001e0ee:	test   ecx,ecx
3001e0f0:	jne    0x30021292
3001e0f6:	mov    eax,DWORD PTR [ebp+0x14]
3001e0f9:	test   eax,eax
3001e0fb:	je     0x3001e104
3001e0fd:	cmp    DWORD PTR [eax],0x0
3001e100:	jne    0x3001e104
3001e102:	mov    DWORD PTR [eax],ebx
3001e104:	xor    ebx,ebx
3001e106:	mov    edi,0x80070057
3001e10b:	test   ecx,ecx
3001e10d:	jne    0x300187bd
3001e113:	mov    ecx,ebx
3001e115:	test   ecx,ecx
3001e117:	je     0x300187a5
3001e11d:	jmp    0x3002130e
3001e122:	mov    ebx,DWORD PTR [ebp-0x8]
3001e125:	jmp    0x3001872e
3001e12a:	cmp    DWORD PTR [esi],ecx
3001e12c:	jne    0x3001875b
3001e132:	jmp    0x30018786
3001e137:	mov    DWORD PTR [eax+0x18],esi
3001e13a:	jmp    0x3001879a
3001e13f:	push   0x5
3001e141:	jmp    0x30005b02
3001e146:	mov    edi,0x80070057
3001e14b:	jmp    0x300187bd
3001e150:	mov    edi,0x8007000e
3001e155:	jmp    0x300187bd
3001e15a:	mov    eax,0x80004003
3001e15f:	jmp    0x300187c2
3001e164:	push   0x3
3001e166:	pop    ebx
3001e167:	jmp    0x3001e115
3001e169:	mov    eax,DWORD PTR [ebp-0x4]
3001e16c:	mov    DWORD PTR [ebx],eax
3001e16e:	mov    DWORD PTR [ebp-0x8],ecx
3001e171:	mov    ebx,ecx
3001e173:	jmp    0x300187a5
3001e178:	cmp    DWORD PTR [edi],0x2
3001e17b:	je     0x300213dc
3001e181:	push   0x3
3001e183:	pop    ebx
3001e184:	jmp    0x300185f3
3001e189:	movzx  esi,si
3001e18c:	or     esi,0x80070000
3001e192:	test   esi,esi
3001e194:	jmp    0x30007405
3001e199:	cmp    si,0x2
3001e19d:	jne    0x30023160
3001e1a3:	mov    bl,0x1
3001e1a5:	jmp    0x3000745d
3001e1aa:	mov    ebx,DWORD PTR [ebp-0xc]
3001e1ad:	jmp    0x3001e115
3001e1b2:	mov    eax,0x80070006
3001e1b7:	jmp    0x30015069
3001e1bc:	push   ebp
3001e1bd:	mov    ebp,esp
3001e1bf:	sub    esp,0x34
3001e1c2:	mov    eax,ds:0x30043050
3001e1c7:	xor    eax,ebp
3001e1c9:	mov    DWORD PTR [ebp-0x4],eax
3001e1cc:	push   ebx
3001e1cd:	push   esi
3001e1ce:	push   edi
3001e1cf:	lea    eax,[ebp-0x14]
3001e1d2:	push   eax
3001e1d3:	call   DWORD PTR ds:0x30045224
3001e1d9:	lea    eax,[ebp-0x30]
3001e1dc:	push   eax
3001e1dd:	lea    eax,[ebp-0x14]
3001e1e0:	push   eax
3001e1e1:	call   DWORD PTR ds:0x30045228
3001e1e7:	mov    esi,DWORD PTR [ebp-0x30]
3001e1ea:	mov    edi,DWORD PTR [ebp-0x2c]
3001e1ed:	push   0x2
3001e1ef:	xor    ebx,ebx
3001e1f1:	push   0x30043c60
3001e1f6:	push   0x80000002
3001e1fb:	lea    ecx,[ebp-0x20]
3001e1fe:	mov    DWORD PTR [ebp-0x20],ebx
3001e201:	mov    DWORD PTR [ebp-0x1c],ebx
3001e204:	mov    DWORD PTR [ebp-0x18],ebx
3001e207:	call   0x300051d9
3001e20c:	test   eax,eax
3001e20e:	jne    0x30021574
3001e214:	push   0x8
3001e216:	lea    eax,[ebp-0x28]
3001e219:	push   eax
3001e21a:	push   0xb
3001e21c:	push   ebx
3001e21d:	push   0x3001e250
3001e222:	push   DWORD PTR [ebp-0x20]
3001e225:	mov    DWORD PTR [ebp-0x28],esi
3001e228:	mov    DWORD PTR [ebp-0x24],edi
3001e22b:	call   DWORD PTR ds:0x30045010
3001e231:	lea    ecx,[ebp-0x20]
3001e234:	call   0x300051ae
3001e239:	mov    ecx,DWORD PTR [ebp-0x4]
3001e23c:	pop    edi
3001e23d:	pop    esi
3001e23e:	xor    ecx,ebp
3001e240:	pop    ebx
3001e241:	call   0x3000115c
3001e246:	leave  
3001e247:	ret    
3001e248:	test   eax,eax
3001e24a:	jne    0x3001e231
3001e24c:	jmp    0x3001e214
3001e24e:	nop
3001e24f:	nop
3001e250:	inc    ebx
3001e251:	add    BYTE PTR [edi+0x0],ch
3001e254:	outs   dx,BYTE PTR ds:[esi]
3001e255:	add    BYTE PTR [esi+0x0],ah
3001e258:	imul   eax,DWORD PTR [eax],0x750067
3001e25e:	jb     0x3001e260
3001e260:	popa   
3001e261:	add    BYTE PTR [eax+eax*1+0x69],dh
3001e265:	add    BYTE PTR [edi+0x0],ch
3001e268:	outs   dx,BYTE PTR ds:[esi]
3001e269:	add    BYTE PTR [ebx+0x0],al
3001e26c:	push   0x6e006100
3001e271:	add    BYTE PTR [edi+0x0],ah
3001e274:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
3001e279:	add    al,ch
3001e27b:	cmp    eax,0x83ffffff
3001e280:	cmp    eax,0x3004358c
3001e285:	add    BYTE PTR [edi],cl
3001e287:	test   DWORD PTR [ecx-0x16000097],ebx
3001e28d:	or     eax,DWORD PTR fs:[eax]
3001e290:	add    BYTE PTR [edi+0x30043510],bh
3001e296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e29a:	jmp    0x30014982
3001e29f:	call   0x3002e1d9
3001e2a4:	jmp    0x30014bf4
3001e2a9:	mov    ebx,DWORD PTR [ebp-0x1230]
3001e2af:	jmp    0x3001f0ff
3001e2b4:	push   ebp
3001e2b5:	mov    ebp,esp
3001e2b7:	cmp    DWORD PTR [ebp+0xc],0xffffde7f
3001e2be:	je     0x3001f2fb
3001e2c4:	cmp    DWORD PTR [ebp+0xc],0xffffdeb4
3001e2cb:	jne    0x3001f2f1
3001e2d1:	movsx  eax,WORD PTR [ebp+0x18]
3001e2d5:	mov    ecx,DWORD PTR [ebp+0x8]
3001e2d8:	push   eax
3001e2d9:	lea    ecx,[ecx+0x67c]
3001e2df:	call   0x3001e2e8
3001e2e4:	pop    ebp
3001e2e5:	ret    0x18
3001e2e8:	push   ebp
3001e2e9:	mov    ebp,esp
3001e2eb:	cmp    DWORD PTR [ebp+0x8],0x0
3001e2ef:	jne    0x3001e458
3001e2f5:	add    ecx,0x18
3001e2f8:	call   0x3001e3d3
3001e2fd:	pop    ebp
3001e2fe:	ret    0x4
3001e301:	nop
3001e302:	nop
3001e303:	nop
3001e304:	pop    ebp
3001e305:	jecxz  0x3001e308
3001e307:	xor    BYTE PTR [eax-0x1d],cl
3001e30a:	add    DWORD PTR [eax],esi
3001e30c:	sbb    bl,ah
3001e30e:	add    DWORD PTR [eax],esi
3001e310:	mov    ecx,0x3230031c
3001e315:	sbb    eax,0x8b553003
3001e31a:	in     al,dx
3001e31b:	push   esi
3001e31c:	mov    esi,DWORD PTR [ebp+0x8]
3001e31f:	dec    DWORD PTR [esi+0x20]
3001e322:	je     0x30020a48
3001e328:	mov    eax,DWORD PTR [esi+0x20]
3001e32b:	pop    esi
3001e32c:	pop    ebp
3001e32d:	ret    0x4
3001e330:	js     0x3001e391
3001e332:	repz out 0x2c,eax
3001e335:	mov    cl,BYTE PTR ss:[ebp-0x71]
3001e339:	jbe    0x3001e375
3001e33b:	jge    0x3001e2f7
3001e33d:	loopne 0x3001e2e1
3001e33f:	aaa    
3001e340:	mov    eax,DWORD PTR [ecx]
3001e342:	push   ecx
3001e343:	call   DWORD PTR [eax+0x4]
3001e346:	jmp    0x3001e359
3001e348:	push   ebp
3001e349:	mov    ebp,esp
3001e34b:	mov    ecx,DWORD PTR [ebp+0x8]
3001e34e:	mov    eax,DWORD PTR [ecx+0x20]
3001e351:	inc    eax
3001e352:	mov    DWORD PTR [ecx+0x20],eax
3001e355:	pop    ebp
3001e356:	ret    0x4
3001e359:	xor    eax,eax
3001e35b:	jmp    0x3001e39c
3001e35d:	push   ebp
3001e35e:	mov    ebp,esp
3001e360:	push   esi
3001e361:	mov    esi,DWORD PTR [ebp+0x10]
3001e364:	test   esi,esi
3001e366:	je     0x30020a3e
3001e36c:	push   DWORD PTR [ebp+0xc]
3001e36f:	and    DWORD PTR [esi],0x0
3001e372:	push   0x3000531c
3001e377:	call   0x30004c93
3001e37c:	test   al,al
3001e37e:	jne    0x3001e3a1
3001e380:	push   DWORD PTR [ebp+0xc]
3001e383:	push   0x3001e330
3001e388:	call   0x30004c93
3001e38d:	test   al,al
3001e38f:	jne    0x3001e3a1
3001e391:	mov    ecx,DWORD PTR [esi]
3001e393:	test   ecx,ecx
3001e395:	jne    0x3001e340
3001e397:	mov    eax,0x80004002
3001e39c:	pop    esi
3001e39d:	pop    ebp
3001e39e:	ret    0xc
3001e3a1:	mov    eax,DWORD PTR [ebp+0x8]
3001e3a4:	mov    DWORD PTR [esi],eax
3001e3a6:	jmp    0x3001e391
3001e3a8:	test   esi,esi
3001e3aa:	je     0x30006e34
3001e3b0:	mov    edx,DWORD PTR [esi]
3001e3b2:	push   0x1
3001e3b4:	mov    ecx,esi
3001e3b6:	call   DWORD PTR [edx+0x10]
3001e3b9:	jmp    0x30006e34
3001e3be:	add    ecx,0x4
3001e3c1:	cmp    BYTE PTR [ecx+0x18],0x0
3001e3c5:	je     0x3001e3d2
3001e3c7:	push   ecx
3001e3c8:	mov    BYTE PTR [ecx+0x18],0x0
3001e3cc:	call   DWORD PTR ds:0x30045158
3001e3d2:	ret    
3001e3d3:	push   esi
3001e3d4:	mov    esi,ecx
3001e3d6:	cmp    DWORD PTR [esi+0x4],0x0
3001e3da:	jne    0x3001788a
3001e3e0:	xor    eax,eax
3001e3e2:	inc    eax
3001e3e3:	pop    esi
3001e3e4:	ret    
3001e3e5:	push   0x4
3001e3e7:	mov    eax,0x3003f610
3001e3ec:	call   0x3000116a
3001e3f1:	mov    esi,ecx
3001e3f3:	mov    DWORD PTR [ebp-0x10],esi
3001e3f6:	mov    DWORD PTR [esi],0x30006da0
3001e3fc:	and    DWORD PTR [ebp-0x4],0x0
3001e400:	mov    DWORD PTR [esi+0x4],0xc0000001
3001e407:	mov    ecx,DWORD PTR ds:0x300430f4
3001e40d:	mov    eax,DWORD PTR [ecx]
3001e40f:	call   DWORD PTR [eax+0x8]
3001e412:	or     DWORD PTR [ebp-0x4],0xffffffff
3001e416:	lea    ecx,[esi+0x2c]
3001e419:	call   0x30007ef2
3001e41e:	mov    ecx,DWORD PTR [esi+0x28]
3001e421:	test   ecx,ecx
3001e423:	je     0x3001e42a
3001e425:	call   0x30007e20
3001e42a:	lea    ecx,[esi+0x4]
3001e42d:	call   0x3001e3be
3001e432:	call   0x3000119d
3001e437:	ret    
3001e438:	push   ebp
3001e439:	mov    ebp,esp
3001e43b:	push   esi
3001e43c:	mov    esi,ecx
3001e43e:	call   0x3001e3e5
3001e443:	test   BYTE PTR [ebp+0x8],0x1
3001e447:	je     0x3001e451
3001e449:	push   esi
3001e44a:	call   DWORD PTR ds:0x300452ac
3001e450:	pop    ecx
3001e451:	mov    eax,esi
3001e453:	pop    esi
3001e454:	pop    ebp
3001e455:	ret    0x4
3001e458:	push   ecx
3001e459:	lea    eax,[ecx+0x4]
3001e45c:	push   eax
3001e45d:	add    ecx,0x18
3001e460:	call   0x3001e7cf
3001e465:	jmp    0x3001e2fd
3001e46a:	push   ebp
3001e46b:	mov    ebp,esp
3001e46d:	and    esp,0xfffffff8
3001e470:	push   0xffffffff
3001e472:	push   0x300406c0
3001e477:	mov    eax,fs:0x0
3001e47d:	push   eax
3001e47e:	sub    esp,0x68
3001e481:	mov    eax,ds:0x30043050
3001e486:	xor    eax,esp
3001e488:	mov    DWORD PTR [esp+0x60],eax
3001e48c:	push   ebx
3001e48d:	push   esi
3001e48e:	push   edi
3001e48f:	mov    eax,ds:0x30043050
3001e494:	xor    eax,esp
3001e496:	push   eax
3001e497:	lea    eax,[esp+0x78]
3001e49b:	mov    fs:0x0,eax
3001e4a1:	mov    eax,edx
3001e4a3:	mov    DWORD PTR [esp+0x14],eax
3001e4a7:	mov    DWORD PTR [esp+0x20],ecx
3001e4ab:	mov    ecx,DWORD PTR [ebp+0x8]
3001e4ae:	mov    edx,DWORD PTR [ebp+0xc]
3001e4b1:	xor    esi,esi
3001e4b3:	mov    DWORD PTR [eax],esi
3001e4b5:	push   esi
3001e4b6:	mov    DWORD PTR [ecx],esi
3001e4b8:	push   0x2
3001e4ba:	mov    DWORD PTR [esp+0x20],ecx
3001e4be:	mov    DWORD PTR [esp+0x24],edx
3001e4c2:	mov    DWORD PTR [edx],esi
3001e4c4:	call   DWORD PTR ds:0x30045250
3001e4ca:	mov    ebx,eax
3001e4cc:	test   ebx,ebx
3001e4ce:	je     0x300209f6
3001e4d4:	mov    DWORD PTR [esp+0x10],esi
3001e4d8:	lea    eax,[esp+0x10]
3001e4dc:	push   eax
3001e4dd:	push   0x1
3001e4df:	push   ebx
3001e4e0:	mov    DWORD PTR [esp+0x8c],esi
3001e4e7:	call   DWORD PTR ds:0x300454d4
3001e4ed:	mov    edi,eax
3001e4ef:	test   edi,edi
3001e4f1:	js     0x300209df
3001e4f7:	push   0x1
3001e4f9:	push   esi
3001e4fa:	push   esi
3001e4fb:	push   DWORD PTR [esp+0x2c]
3001e4ff:	push   0x3001e5c4
3001e504:	push   DWORD PTR [esp+0x24]
3001e508:	call   DWORD PTR ds:0x300454c8
3001e50e:	mov    edi,eax
3001e510:	test   edi,edi
3001e512:	js     0x3001e5be
3001e518:	mov    eax,DWORD PTR [esp+0x10]
3001e51c:	push   esi
3001e51d:	mov    ecx,DWORD PTR [eax]
3001e51f:	push   esi
3001e520:	push   esi
3001e521:	push   esi
3001e522:	push   eax
3001e523:	call   DWORD PTR [ecx+0x14]
3001e526:	push   0x44
3001e528:	lea    eax,[esp+0x2c]
3001e52c:	push   esi
3001e52d:	push   eax
3001e52e:	mov    DWORD PTR [esp+0x30],esi
3001e532:	call   0x300011b1
3001e537:	mov    eax,DWORD PTR [esp+0x1c]
3001e53b:	add    esp,0xc
3001e53e:	mov    ecx,DWORD PTR [eax]
3001e540:	push   0x1
3001e542:	lea    edx,[esp+0x28]
3001e546:	push   edx
3001e547:	push   eax
3001e548:	call   DWORD PTR [ecx+0x30]
3001e54b:	mov    edi,eax
3001e54d:	test   edi,edi
3001e54f:	js     0x3001e5b0
3001e551:	cmp    DWORD PTR [esp+0x30],esi
3001e555:	jne    0x3001e5ab
3001e557:	mov    ecx,DWORD PTR [esp+0x2c]
3001e55b:	test   ecx,ecx
3001e55d:	je     0x3001e5ab
3001e55f:	mov    eax,DWORD PTR [esp+0x10]
3001e563:	mov    edx,DWORD PTR [esp+0x14]
3001e567:	mov    DWORD PTR [esp+0x10],esi
3001e56b:	mov    DWORD PTR [edx],eax
3001e56d:	mov    eax,DWORD PTR [esp+0x18]
3001e571:	mov    DWORD PTR [eax],ebx
3001e573:	mov    eax,DWORD PTR [esp+0x1c]
3001e577:	mov    DWORD PTR [eax],ecx
3001e579:	or     DWORD PTR [esp+0x80],0xffffffff
3001e581:	test   esi,esi
3001e583:	jne    0x300209eb
3001e589:	mov    eax,edi
3001e58b:	mov    ecx,DWORD PTR [esp+0x78]
3001e58f:	mov    DWORD PTR fs:0x0,ecx
3001e596:	pop    ecx
3001e597:	pop    edi
3001e598:	pop    esi
3001e599:	pop    ebx
3001e59a:	mov    ecx,DWORD PTR [esp+0x60]
3001e59e:	xor    ecx,esp
3001e5a0:	call   0x3000115c
3001e5a5:	mov    esp,ebp
3001e5a7:	pop    ebp
3001e5a8:	ret    0x8
3001e5ab:	mov    edi,0x80004005
3001e5b0:	mov    esi,DWORD PTR [esp+0x10]
3001e5b4:	test   esi,esi
3001e5b6:	jne    0x300209d3
3001e5bc:	jmp    0x3001e579
3001e5be:	mov    esi,DWORD PTR [esp+0x10]
3001e5c2:	jmp    0x3001e579
3001e5c4:	js     0x3001e625
3001e5c6:	repz out 0x2c,eax
3001e5c9:	mov    cl,BYTE PTR ss:[ebp-0x71]
3001e5cd:	jbe    0x3001e609
3001e5cf:	jge    0x3001e58b
3001e5d1:	loopne 0x3001e575
3001e5d3:	aaa    
3001e5d4:	push   ebp
3001e5d5:	mov    ebp,esp
3001e5d7:	sub    esp,0x64
3001e5da:	mov    eax,ds:0x30043050
3001e5df:	xor    eax,ebp
3001e5e1:	mov    DWORD PTR [ebp-0x4],eax
3001e5e4:	mov    eax,DWORD PTR [ebp+0x8]
3001e5e7:	push   ebx
3001e5e8:	push   esi
3001e5e9:	push   edi
3001e5ea:	push   0x11
3001e5ec:	mov    ebx,edx
3001e5ee:	mov    DWORD PTR [ebp-0x64],ecx
3001e5f1:	and    DWORD PTR [ebx],0x0
3001e5f4:	and    DWORD PTR [eax],0x0
3001e5f7:	pop    ecx
3001e5f8:	mov    esi,0x3001e690
3001e5fd:	lea    edi,[ebp-0x5c]
3001e600:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e602:	mov    DWORD PTR [ebp-0x60],eax
3001e605:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
3001e607:	xor    eax,eax
3001e609:	lea    edi,[ebp-0x16]
3001e60c:	stos   DWORD PTR es:[edi],eax
3001e60d:	stos   DWORD PTR es:[edi],eax
3001e60e:	stos   DWORD PTR es:[edi],eax
3001e60f:	push   0x10
3001e611:	stos   DWORD PTR es:[edi],eax
3001e612:	push   0x9
3001e614:	lea    eax,[ebp-0x18]
3001e617:	push   eax
3001e618:	call   DWORD PTR ds:0x30045218
3001e61e:	push   eax
3001e61f:	call   DWORD PTR ds:0x30045324
3001e625:	add    esp,0x10
3001e628:	lea    eax,[ebp-0x5c]
3001e62b:	push   eax
3001e62c:	push   0x4000
3001e631:	xor    edi,edi
3001e633:	push   edi
3001e634:	push   0x4
3001e636:	push   edi
3001e637:	push   0xffffffff
3001e639:	call   DWORD PTR ds:0x30045258
3001e63f:	mov    esi,eax
3001e641:	test   esi,esi
3001e643:	je     0x30020a02
3001e649:	call   DWORD PTR ds:0x30045160
3001e64f:	cmp    eax,0xb7
3001e654:	je     0x30020a0c
3001e65a:	push   DWORD PTR [ebp-0x64]
3001e65d:	push   edi
3001e65e:	push   edi
3001e65f:	push   0x2
3001e661:	push   esi
3001e662:	call   DWORD PTR ds:0x3004525c
3001e668:	test   eax,eax
3001e66a:	je     0x30020a13
3001e670:	mov    ecx,DWORD PTR [ebp-0x60]
3001e673:	mov    DWORD PTR [ebx],esi
3001e675:	mov    DWORD PTR [ecx],eax
3001e677:	xor    eax,eax
3001e679:	mov    ecx,DWORD PTR [ebp-0x4]
3001e67c:	pop    edi
3001e67d:	pop    esi
3001e67e:	xor    ecx,ebp
3001e680:	pop    ebx
3001e681:	call   0x3000115c
3001e686:	leave  
3001e687:	ret    0x4
3001e68a:	nop
3001e68b:	nop
3001e68c:	nop
3001e68d:	nop
3001e68e:	nop
3001e68f:	nop
3001e690:	dec    esp
3001e691:	add    BYTE PTR [edi+0x0],ch
3001e694:	arpl   WORD PTR [eax],ax
3001e696:	popa   
3001e697:	add    BYTE PTR [eax+eax*1+0x5c],ch
3001e69b:	add    BYTE PTR [ebp+0x0],cl
3001e69e:	imul   eax,DWORD PTR [eax],0x720063
3001e6a4:	outs   dx,DWORD PTR ds:[esi]
3001e6a5:	add    BYTE PTR [ebx+0x0],dh
3001e6a8:	outs   dx,DWORD PTR ds:[esi]
3001e6a9:	add    BYTE PTR [esi+0x0],ah
3001e6ac:	je     0x3001e6ae
3001e6ae:	pop    edi
3001e6af:	add    BYTE PTR [esi+0x0],dl
3001e6b2:	push   ebx
3001e6b3:	add    BYTE PTR [eax],bh
3001e6b5:	add    BYTE PTR [eax],dh
3001e6b7:	add    BYTE PTR [edi+0x0],bl
3001e6ba:	dec    edx
3001e6bb:	add    BYTE PTR [ecx+0x0],cl
3001e6be:	push   esp
3001e6bf:	add    BYTE PTR [edi+0x0],bl
3001e6c2:	inc    esp
3001e6c3:	add    BYTE PTR [ebp+0x0],ah
3001e6c6:	bound  eax,QWORD PTR [eax]
3001e6c8:	jne    0x3001e6ca
3001e6ca:	add    BYTE PTR [bx+0x0],ah
3001e6ce:	add    BYTE PTR gs:[edx+0x0],dh
3001e6d2:	sub    eax,0x6a000000
3001e6d7:	sbb    BYTE PTR [eax+0x3004071c],bh
3001e6dd:	call   0x3000116a
3001e6e2:	mov    eax,edx
3001e6e4:	mov    DWORD PTR [ebp-0x24],ecx
3001e6e7:	mov    edx,DWORD PTR [ebp+0x8]
3001e6ea:	xor    ebx,ebx
3001e6ec:	mov    DWORD PTR [edx],ebx
3001e6ee:	mov    edx,DWORD PTR [ebp+0xc]
3001e6f1:	mov    DWORD PTR [ebp-0x10],ebx
3001e6f4:	mov    DWORD PTR [edx],ebx
3001e6f6:	lea    ecx,[ebp-0x18]
3001e6f9:	push   ecx
3001e6fa:	lea    ecx,[ebp-0x1c]
3001e6fd:	push   ecx
3001e6fe:	lea    edx,[ebp-0x10]
3001e701:	mov    ecx,eax
3001e703:	mov    DWORD PTR [ebp-0x4],ebx
3001e706:	call   0x3001e46a
3001e70b:	mov    esi,eax
3001e70d:	test   esi,esi
3001e70f:	js     0x3001e7ca
3001e715:	mov    ecx,DWORD PTR [ebp-0x18]
3001e718:	add    ecx,0x18
3001e71b:	cmp    ecx,0x4000
3001e721:	ja     0x300209b2
3001e727:	lea    eax,[ebp-0x14]
3001e72a:	push   eax
3001e72b:	lea    edx,[ebp-0x20]
3001e72e:	call   0x3001e5d4
3001e733:	mov    esi,eax
3001e735:	test   esi,esi
3001e737:	js     0x3001e7c5
3001e73d:	push   DWORD PTR [ebp-0x1c]
3001e740:	call   DWORD PTR ds:0x30045244
3001e746:	mov    edx,eax
3001e748:	test   edx,edx
3001e74a:	je     0x3002099d
3001e750:	mov    eax,DWORD PTR [ebp-0x14]
3001e753:	mov    esi,DWORD PTR [ebp-0x24]
3001e756:	mov    ecx,DWORD PTR [ebp-0x18]
3001e759:	mov    DWORD PTR [eax],ebx
3001e75b:	lea    edi,[eax+0x4]
3001e75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e761:	push   ecx
3001e762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e763:	mov    DWORD PTR [eax+0x14],ecx
3001e766:	push   edx
3001e767:	add    eax,0x18
3001e76a:	push   eax
3001e76b:	call   0x3000151c
3001e770:	mov    edi,DWORD PTR [ebp-0x14]
3001e773:	mov    ecx,DWORD PTR [ebp+0x8]
3001e776:	mov    eax,DWORD PTR [ebp-0x10]
3001e779:	mov    DWORD PTR [edi],0x4a495438
3001e77f:	mov    DWORD PTR [ecx],eax
3001e781:	mov    ecx,DWORD PTR [ebp+0xc]
3001e784:	mov    eax,DWORD PTR [ebp-0x20]
3001e787:	add    esp,0xc
3001e78a:	mov    DWORD PTR [ecx],eax
3001e78c:	push   DWORD PTR [ebp-0x1c]
3001e78f:	mov    esi,ebx
3001e791:	call   DWORD PTR ds:0x30045248
3001e797:	mov    eax,ebx
3001e799:	push   eax
3001e79a:	call   DWORD PTR ds:0x300451d0
3001e7a0:	push   edi
3001e7a1:	call   DWORD PTR ds:0x3004524c
3001e7a7:	test   ebx,ebx
3001e7a9:	jne    0x300209bc
3001e7af:	or     DWORD PTR [ebp-0x4],0xffffffff
3001e7b3:	test   ebx,ebx
3001e7b5:	jne    0x300209c8
3001e7bb:	mov    eax,esi
3001e7bd:	call   0x3000119d
3001e7c2:	ret    0x8
3001e7c5:	mov    ebx,DWORD PTR [ebp-0x10]
3001e7c8:	jmp    0x3001e7a7
3001e7ca:	mov    ebx,DWORD PTR [ebp-0x10]
3001e7cd:	jmp    0x3001e7af
3001e7cf:	push   0x4
3001e7d1:	mov    eax,0x3004076c
3001e7d6:	call   0x3000116a
3001e7db:	mov    edi,ecx
3001e7dd:	mov    edx,DWORD PTR [ebp+0xc]
3001e7e0:	test   edx,edx
3001e7e2:	je     0x3001e84d
3001e7e4:	xor    eax,eax
3001e7e6:	cmp    DWORD PTR [edi],eax
3001e7e8:	jne    0x3001e846
3001e7ea:	cmp    DWORD PTR [edi+0x4],eax
3001e7ed:	jne    0x3001e846
3001e7ef:	mov    DWORD PTR [ebp+0xc],eax
3001e7f2:	mov    ecx,DWORD PTR [ebp+0x8]
3001e7f5:	mov    DWORD PTR [ebp-0x4],eax
3001e7f8:	lea    eax,[ebp-0x10]
3001e7fb:	push   eax
3001e7fc:	lea    eax,[ebp+0xc]
3001e7ff:	push   eax
3001e800:	call   0x3001e6d6
3001e805:	mov    esi,DWORD PTR [ebp+0xc]
3001e808:	mov    ebx,eax
3001e80a:	test   ebx,ebx
3001e80c:	js     0x3001e82e
3001e80e:	cmp    DWORD PTR [edi],esi
3001e810:	je     0x3001e828
3001e812:	test   esi,esi
3001e814:	je     0x3001e81c
3001e816:	mov    eax,DWORD PTR [esi]
3001e818:	push   esi
3001e819:	call   DWORD PTR [eax+0x4]
3001e81c:	mov    eax,DWORD PTR [edi]
3001e81e:	mov    DWORD PTR [edi],esi
3001e820:	test   eax,eax
3001e822:	jne    0x30020992
3001e828:	mov    eax,DWORD PTR [ebp-0x10]
3001e82b:	mov    DWORD PTR [edi+0x4],eax
3001e82e:	or     DWORD PTR [ebp-0x4],0xffffffff
3001e832:	test   esi,esi
3001e834:	je     0x3001e83c
3001e836:	mov    eax,DWORD PTR [esi]
3001e838:	push   esi
3001e839:	call   DWORD PTR [eax+0x8]
3001e83c:	mov    eax,ebx
3001e83e:	call   0x3000119d
3001e843:	ret    0x8
3001e846:	mov    eax,0x800704df
3001e84b:	jmp    0x3001e83e
3001e84d:	mov    ebx,0x80070057
3001e852:	jmp    0x3001e83c
3001e854:	push   ebp
3001e855:	mov    ebp,esp
3001e857:	mov    eax,DWORD PTR [ebp+0xc]
3001e85a:	push   esi
3001e85b:	sub    eax,0x82
3001e860:	je     0x3001ea05
3001e866:	dec    eax
3001e867:	dec    eax
3001e868:	je     0x3001ea1a
3001e86e:	sub    eax,0x8f
3001e873:	je     0x3001caa8
3001e879:	pop    esi
3001e87a:	pop    ebp
3001e87b:	jmp    DWORD PTR ds:0x30045480
3001e881:	push   esi
3001e882:	push   edi
3001e883:	mov    edi,ecx
3001e885:	mov    esi,DWORD PTR [edi]
3001e887:	test   esi,esi
3001e889:	je     0x3001e8b9
3001e88b:	cmp    DWORD PTR [esi+0x8],0x0
3001e88f:	je     0x3001e89e
3001e891:	push   DWORD PTR [esi+0x8]
3001e894:	call   DWORD PTR ds:0x300451d0
3001e89a:	and    DWORD PTR [esi+0x8],0x0
3001e89e:	cmp    DWORD PTR [esi+0x4],0x0
3001e8a2:	je     0x3001e8b1
3001e8a4:	push   DWORD PTR [esi+0x4]
3001e8a7:	call   DWORD PTR ds:0x300451d0
3001e8ad:	and    DWORD PTR [esi+0x4],0x0
3001e8b1:	push   esi
3001e8b2:	call   DWORD PTR ds:0x300452ac
3001e8b8:	pop    ecx
3001e8b9:	and    DWORD PTR [edi],0x0
3001e8bc:	pop    edi
3001e8bd:	pop    esi
3001e8be:	ret    
3001e8bf:	push   ebp
3001e8c0:	mov    ebp,esp
3001e8c2:	and    esp,0xfffffff8
3001e8c5:	push   0xffffffff
3001e8c7:	push   0x3003eac8
3001e8cc:	mov    eax,fs:0x0
3001e8d2:	push   eax
3001e8d3:	sub    esp,0x30
3001e8d6:	push   ebx
3001e8d7:	push   esi
3001e8d8:	push   edi
3001e8d9:	mov    eax,ds:0x30043050
3001e8de:	xor    eax,esp
3001e8e0:	push   eax
3001e8e1:	lea    eax,[esp+0x40]
3001e8e5:	mov    fs:0x0,eax
3001e8eb:	mov    ebx,DWORD PTR [ebp+0x8]
3001e8ee:	mov    DWORD PTR [esp+0x18],ebx
3001e8f2:	and    DWORD PTR [esp+0x48],0x0
3001e8f7:	mov    ecx,DWORD PTR [ebx]
3001e8f9:	lea    eax,[ecx+0x8]
3001e8fc:	push   eax
3001e8fd:	call   0x3001d30c
3001e902:	test   al,al
3001e904:	je     0x3001e979
3001e906:	push   0x0
3001e908:	push   DWORD PTR [ebx+0x4]
3001e90b:	call   DWORD PTR ds:0x30045200
3001e911:	test   eax,eax
3001e913:	je     0x3001e974
3001e915:	push   0x1000
3001e91a:	call   0x3001d2b4
3001e91f:	mov    ecx,DWORD PTR [ebx]
3001e921:	test   eax,eax
3001e923:	setne  al
3001e926:	movzx  eax,al
3001e929:	neg    eax
3001e92b:	sbb    eax,eax
3001e92d:	and    eax,0xffffff38
3001e932:	add    eax,0xc8
3001e937:	mov    DWORD PTR [esp+0x14],eax
3001e93b:	lea    eax,[esp+0x2c]
3001e93f:	add    ecx,0x8
3001e942:	push   eax
3001e943:	call   0x3001d1f3
3001e948:	cmp    DWORD PTR ds:0x300435c8,0x0
3001e94f:	mov    esi,eax
3001e951:	lea    edi,[esp+0x1c]
3001e955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001e959:	je     0x3001e999
3001e95b:	push   DWORD PTR [esp+0x14]
3001e95f:	lea    eax,[esp+0x20]
3001e963:	push   eax
3001e964:	call   0x3001d6f4
3001e969:	test   al,al
3001e96b:	je     0x3001e974
3001e96d:	mov    ecx,ebx
3001e96f:	call   0x3001e99d
3001e974:	call   0x30005270
3001e979:	lea    ecx,[esp+0x18]
3001e97d:	call   0x3001e881
3001e982:	xor    eax,eax
3001e984:	mov    ecx,DWORD PTR [esp+0x40]
3001e988:	mov    DWORD PTR fs:0x0,ecx
3001e98f:	pop    ecx
3001e990:	pop    edi
3001e991:	pop    esi
3001e992:	pop    ebx
3001e993:	mov    esp,ebp
3001e995:	pop    ebp
3001e996:	ret    0x4
3001e999:	xor    eax,eax
3001e99b:	jmp    0x3001e969
3001e99d:	push   ebp
3001e99e:	mov    ebp,esp
3001e9a0:	sub    esp,0x28
3001e9a3:	push   ebx
3001e9a4:	push   esi
3001e9a5:	mov    esi,ecx
3001e9a7:	xor    ebx,ebx
3001e9a9:	mov    eax,DWORD PTR [esi+0x4]
3001e9ac:	mov    DWORD PTR [ebp-0x8],eax
3001e9af:	mov    eax,DWORD PTR [esi+0x8]
3001e9b2:	mov    DWORD PTR [ebp-0x4],eax
3001e9b5:	push   0x4
3001e9b7:	push   0x4ff
3001e9bc:	push   0xffffffff
3001e9be:	lea    eax,[ebp-0x8]
3001e9c1:	push   eax
3001e9c2:	push   0x2
3001e9c4:	call   DWORD PTR ds:0x30045444
3001e9ca:	cmp    eax,0x2
3001e9cd:	jne    0x3001e9f8
3001e9cf:	push   0x3
3001e9d1:	push   ebx
3001e9d2:	push   ebx
3001e9d3:	push   ebx
3001e9d4:	lea    eax,[ebp-0x24]
3001e9d7:	push   eax
3001e9d8:	call   DWORD PTR ds:0x30045448
3001e9de:	test   eax,eax
3001e9e0:	je     0x3001e9b5
3001e9e2:	lea    eax,[ebp-0x24]
3001e9e5:	push   eax
3001e9e6:	call   DWORD PTR ds:0x3004544c
3001e9ec:	lea    eax,[ebp-0x24]
3001e9ef:	push   eax
3001e9f0:	call   DWORD PTR ds:0x30045450
3001e9f6:	jmp    0x3001e9cf
3001e9f8:	cmp    eax,0x1
3001e9fb:	je     0x3001f9f2
3001ea01:	pop    esi
3001ea02:	pop    ebx
3001ea03:	leave  
3001ea04:	ret    
3001ea05:	mov    esi,DWORD PTR ds:0x300435c8
3001ea0b:	cmp    DWORD PTR [esi+0xc],0x0
3001ea0f:	je     0x3001e879
3001ea15:	jmp    0x30020d7b
3001ea1a:	push   0x2
3001ea1c:	pop    eax
3001ea1d:	jmp    0x3001cab2
3001ea22:	push   ecx
3001ea23:	call   0x3001ea2d
3001ea28:	jmp    0x3000527e
3001ea2d:	push   0x4
3001ea2f:	mov    eax,0x300407c0
3001ea34:	call   0x3000116a
3001ea39:	mov    esi,ecx
3001ea3b:	mov    DWORD PTR [ebp-0x10],esi
3001ea3e:	xor    edi,edi
3001ea40:	mov    DWORD PTR [ebp-0x4],edi
3001ea43:	cmp    DWORD PTR [esi],edi
3001ea45:	je     0x3001ea7a
3001ea47:	push   DWORD PTR [esi]
3001ea49:	call   DWORD PTR ds:0x3004545c
3001ea4f:	mov    DWORD PTR [esi],edi
3001ea51:	cmp    WORD PTR [esi+0x4],di
3001ea55:	je     0x3001ea70
3001ea57:	push   edi
3001ea58:	call   DWORD PTR ds:0x30045174
3001ea5e:	push   eax
3001ea5f:	movzx  eax,WORD PTR [esi+0x4]
3001ea63:	push   eax
3001ea64:	call   DWORD PTR ds:0x30045438
3001ea6a:	xor    eax,eax
3001ea6c:	mov    WORD PTR [esi+0x4],ax
3001ea70:	push   0x1ba1
3001ea75:	call   0x3000532c
3001ea7a:	cmp    DWORD PTR [esi+0x8],edi
3001ea7d:	je     0x3001ea8f
3001ea7f:	push   DWORD PTR [esi+0x8]
3001ea82:	call   DWORD PTR ds:0x300455d0
3001ea88:	test   eax,eax
3001ea8a:	je     0x3001ea8f
3001ea8c:	mov    DWORD PTR [esi+0x8],edi
3001ea8f:	push   esi
3001ea90:	call   DWORD PTR ds:0x300452ac
3001ea96:	pop    ecx
3001ea97:	mov    eax,esi
3001ea99:	call   0x3000119d
3001ea9e:	ret    0x4
3001eaa1:	cmp    DWORD PTR ds:0x30043c18,0x0
3001eaa8:	je     0x300095d0
3001eaae:	push   ebp
3001eaaf:	mov    ebp,esp
3001eab1:	sub    esp,0x8
3001eab4:	and    esp,0xfffffff8
3001eab7:	fstp   QWORD PTR [esp]
3001eaba:	cvttsd2si eax,QWORD PTR [esp]
3001eabf:	leave  
3001eac0:	ret    
3001eac1:	fstp   DWORD PTR [esp]
3001eac4:	mov    ecx,DWORD PTR [esp]
3001eac7:	xor    ecx,0x80000000
3001eacd:	add    ecx,0x7fffffff
3001ead3:	adc    eax,0x0
3001ead6:	mov    edx,DWORD PTR [esp+0x14]
3001eada:	adc    edx,0x0
3001eadd:	jmp    0x30009617
3001eae2:	mov    edx,DWORD PTR [esp+0x14]
3001eae6:	test   edx,0x7fffffff
3001eaec:	jne    0x300095f7
3001eaf2:	fstp   DWORD PTR [esp+0x18]
3001eaf6:	fstp   DWORD PTR [esp+0x18]
3001eafa:	jmp    0x30009617
3001eaff:	push   0x30038235
3001eb04:	push   DWORD PTR fs:0x0
3001eb0b:	mov    eax,DWORD PTR [esp+0x10]
3001eb0f:	mov    DWORD PTR [esp+0x10],ebp
3001eb13:	lea    ebp,[esp+0x10]
3001eb17:	sub    esp,eax
3001eb19:	push   ebx
3001eb1a:	push   esi
3001eb1b:	push   edi
3001eb1c:	mov    eax,ds:0x30043050
3001eb21:	xor    DWORD PTR [ebp-0x4],eax
3001eb24:	xor    eax,ebp
3001eb26:	mov    DWORD PTR [ebp-0x1c],eax
3001eb29:	push   eax
3001eb2a:	mov    DWORD PTR [ebp-0x18],esp
3001eb2d:	push   DWORD PTR [ebp-0x8]
3001eb30:	mov    eax,DWORD PTR [ebp-0x4]
3001eb33:	mov    DWORD PTR [ebp-0x4],0xfffffffe
3001eb3a:	mov    DWORD PTR [ebp-0x8],eax
3001eb3d:	lea    eax,[ebp-0x10]
3001eb40:	mov    fs:0x0,eax
3001eb46:	ret    
3001eb47:	mov    ecx,DWORD PTR [ebp-0x1c]
3001eb4a:	xor    ecx,ebp
3001eb4c:	call   0x3000115c
3001eb51:	jmp    0x30008a99
3001eb56:	mov    eax,DWORD PTR [esp+0x8]
3001eb5a:	mov    ecx,DWORD PTR [esp+0x10]
3001eb5e:	or     ecx,eax
3001eb60:	mov    ecx,DWORD PTR [esp+0xc]
3001eb64:	jne    0x3001eb6f
3001eb66:	mov    eax,DWORD PTR [esp+0x4]
3001eb6a:	mul    ecx
3001eb6c:	ret    0x10
3001eb6f:	push   ebx
3001eb70:	mul    ecx
3001eb72:	mov    ebx,eax
3001eb74:	mov    eax,DWORD PTR [esp+0x8]
3001eb78:	mul    DWORD PTR [esp+0x14]
3001eb7c:	add    ebx,eax
3001eb7e:	mov    eax,DWORD PTR [esp+0x8]
3001eb82:	mul    ecx
3001eb84:	add    edx,ebx
3001eb86:	pop    ebx
3001eb87:	ret    0x10
3001eb8a:	push   DWORD PTR [ebp+0xc]
3001eb8d:	lea    ecx,[esp+0x24]
3001eb91:	push   DWORD PTR [edi+0x610]
3001eb97:	call   0x3000c6ba
3001eb9c:	xor    ebx,ebx
3001eb9e:	mov    DWORD PTR [esp+0x58],ebx
3001eba2:	cmp    DWORD PTR ds:0x300434c8,ebx
3001eba8:	je     0x3001ebc6
3001ebaa:	push   DWORD PTR ds:0x300434dc
3001ebb0:	lea    ecx,[esp+0x24]
3001ebb4:	push   0x80000002
3001ebb9:	call   0x3002c400
3001ebbe:	test   eax,eax
3001ebc0:	js     0x3001ed33
3001ebc6:	mov    eax,DWORD PTR [edi]
3001ebc8:	lea    ecx,[esp+0x18]
3001ebcc:	push   ecx
3001ebcd:	mov    ecx,edi
3001ebcf:	call   DWORD PTR [eax+0x40]
3001ebd2:	mov    BYTE PTR [esp+0x58],0x1
3001ebd7:	mov    ecx,DWORD PTR [esp+0x18]
3001ebdb:	call   0x30008596
3001ebe0:	mov    esi,eax
3001ebe2:	mov    DWORD PTR [esp+0x38],ebx
3001ebe6:	push   DWORD PTR [ebp+0x8]
3001ebe9:	mov    BYTE PTR [esp+0x5c],0x2
3001ebee:	mov    ecx,DWORD PTR ds:0x300434dc
3001ebf4:	mov    DWORD PTR [esp+0x38],ecx
3001ebf8:	lea    ecx,[esp+0x3c]
3001ebfc:	mov    DWORD PTR [esp+0x34],0x3000c5b4
3001ec04:	call   0x30006e3c
3001ec09:	mov    eax,ds:0x300430c0
3001ec0e:	mov    ecx,DWORD PTR [esp+0x18]
3001ec12:	mov    DWORD PTR [esp+0x3c],eax
3001ec16:	call   0x300082f7
3001ec1b:	mov    DWORD PTR [esp+0x40],eax
3001ec1f:	test   esi,esi
3001ec21:	jne    0x3001ec29
3001ec23:	mov    DWORD PTR [esp+0x44],ebx
3001ec27:	jmp    0x3001ec2f
3001ec29:	mov    eax,DWORD PTR [esi]
3001ec2b:	mov    DWORD PTR [esp+0x44],eax
3001ec2f:	mov    eax,ds:0x300434c8
3001ec34:	lea    edx,[esp+0x14]
3001ec38:	lea    ecx,[esp+0x30]
3001ec3c:	mov    DWORD PTR [esp+0x48],eax
3001ec40:	call   0x3002d738
3001ec45:	test   eax,eax
3001ec47:	js     0x3001ed0f
3001ec4d:	cmp    DWORD PTR ds:0x300434c8,0x0
3001ec54:	jne    0x3001ed0f
3001ec5a:	mov    eax,DWORD PTR [esp+0x14]
3001ec5e:	dec    eax
3001ec5f:	je     0x3001ecd7
3001ec61:	dec    eax
3001ec62:	jne    0x3001eceb
3001ec68:	mov    eax,ds:0x30043670
3001ec6d:	lea    ecx,[esp+0x20]
3001ec71:	mov    bl,BYTE PTR [eax+0x6]
3001ec74:	mov    BYTE PTR [eax+0x6],0x1
3001ec78:	push   DWORD PTR ds:0x300434dc
3001ec7e:	push   0x80000002
3001ec83:	call   0x3002c400
3001ec88:	mov    eax,ds:0x30043670
3001ec8d:	push   0x3004306c
3001ec92:	lea    ecx,[esp+0x18]
3001ec96:	mov    BYTE PTR [eax+0x6],bl
3001ec99:	call   0x30004256
3001ec9e:	xor    ebx,ebx
3001eca0:	push   ebx
3001eca1:	lea    eax,[esp+0x18]
3001eca5:	push   eax
3001eca6:	mov    ecx,0x300435d0
3001ecab:	mov    BYTE PTR [esp+0x60],0x3
3001ecb0:	call   0x3000bfe1
3001ecb5:	mov    esi,DWORD PTR [esp+0x14]
3001ecb9:	push   esi
3001ecba:	push   0x80000001
3001ecbf:	lea    ecx,[esp+0x28]
3001ecc3:	call   0x3002c400
3001ecc8:	lea    ecx,[esi-0x10]
3001eccb:	mov    BYTE PTR [esp+0x58],0x2
3001ecd0:	call   0x30004017
3001ecd5:	jmp    0x3001eceb
3001ecd7:	push   DWORD PTR ds:0x300434dc
3001ecdd:	lea    ecx,[esp+0x24]
3001ece1:	push   0x80000001
3001ece6:	call   0x3002c400
3001eceb:	lea    ecx,[edi+0x620]
3001ecf1:	lea    edx,[ecx+0x8]
3001ecf4:	cmp    BYTE PTR [edx],0x0
3001ecf7:	je     0x3001ed0f
3001ecf9:	mov    eax,DWORD PTR [ecx+0x3c]
3001ecfc:	test   eax,eax
3001ecfe:	je     0x3001ed09
3001ed00:	push   eax
3001ed01:	call   DWORD PTR ds:0x300451dc
3001ed07:	jmp    0x3001ed0f
3001ed09:	push   edx
3001ed0a:	call   0x3002c318
3001ed0f:	mov    BYTE PTR [esp+0x58],0x1
3001ed14:	mov    ecx,DWORD PTR [esp+0x38]
3001ed18:	test   ecx,ecx
3001ed1a:	je     0x3001ed22
3001ed1c:	mov    eax,DWORD PTR [ecx]
3001ed1e:	push   ecx
3001ed1f:	call   DWORD PTR [eax+0x8]
3001ed22:	mov    BYTE PTR [esp+0x58],bl
3001ed26:	mov    ecx,DWORD PTR [esp+0x1c]
3001ed2a:	test   ecx,ecx
3001ed2c:	je     0x3001ed33
3001ed2e:	call   0x30007e20
3001ed33:	or     DWORD PTR [esp+0x58],0xffffffff
3001ed38:	lea    ecx,[esp+0x20]
3001ed3c:	call   0x3000c725
3001ed41:	jmp    0x3000cecb
3001ed46:	call   0x30007e20
3001ed4b:	jmp    0x30007fa8
3001ed50:	push   0x80004005
3001ed55:	call   0x3002ae0b
3001ed5a:	int3   
3001ed5b:	push   0x10
3001ed5d:	call   0x30003fee
3001ed62:	mov    esi,eax
3001ed64:	pop    ecx
3001ed65:	test   esi,esi
3001ed67:	jne    0x3001cba7
3001ed6d:	call   DWORD PTR ds:0x300455c4
3001ed73:	push   esi
3001ed74:	call   DWORD PTR ds:0x300452ac
3001ed7a:	pop    ecx
3001ed7b:	jmp    0x300169f3
3001ed80:	push   esi
3001ed81:	call   DWORD PTR ds:0x300452ac
3001ed87:	pop    ecx
3001ed88:	jmp    0x30016a0d
3001ed8d:	cmp    edi,0x80070057
3001ed93:	jne    0x3001ed9d
3001ed95:	jmp    0x30014649
3001ed9a:	xor    eax,eax
3001ed9c:	inc    eax
3001ed9d:	mov    ds:0x300434b8,eax
3001eda2:	mov    ds:0x30044d08,eax
3001eda7:	jmp    0x30014649
3001edac:	push   0x103
3001edb1:	lea    eax,[ebp-0x218]
3001edb7:	push   eax
3001edb8:	push   0x104
3001edbd:	mov    esi,0x30044d28
3001edc2:	push   esi
3001edc3:	call   DWORD PTR ds:0x300453b8
3001edc9:	add    esp,0x10
3001edcc:	mov    DWORD PTR ds:0x30043574,esi
3001edd2:	jmp    0x30014674
3001edd7:	or     eax,0x100
3001eddc:	jmp    0x30014698
3001ede1:	or     eax,0x200
3001ede6:	jmp    0x300146a5
3001edeb:	mov    esi,0x8007000e
3001edf0:	jmp    0x3001f10a
3001edf5:	cmp    DWORD PTR ds:0x300434c8,0x0
3001edfc:	je     0x30014863
3001ee02:	and    DWORD PTR [ebp-0x121c],0x0
3001ee09:	mov    BYTE PTR [ebp-0x4],0x1
3001ee0d:	mov    esi,DWORD PTR ds:0x300435cc
3001ee13:	mov    ecx,esi
3001ee15:	mov    eax,DWORD PTR [esi]
3001ee17:	call   DWORD PTR [eax+0x38]
3001ee1a:	shr    eax,0x4
3001ee1d:	test   al,0x1
3001ee1f:	je     0x3001ee60
3001ee21:	lea    eax,[ebp-0x121c]
3001ee27:	push   eax
3001ee28:	mov    ecx,esi
3001ee2a:	call   0x3002fcce
3001ee2f:	test   eax,eax
3001ee31:	js     0x3001ee60
3001ee33:	mov    eax,DWORD PTR [ebp-0x121c]
3001ee39:	lea    edx,[ebp-0x1220]
3001ee3f:	mov    ecx,DWORD PTR [eax]
3001ee41:	push   edx
3001ee42:	push   eax
3001ee43:	call   DWORD PTR [ecx+0xc]
3001ee46:	test   eax,eax
3001ee48:	js     0x3001ee60
3001ee4a:	mov    edx,DWORD PTR [ebp-0x1220]
3001ee50:	mov    ecx,DWORD PTR ds:0x300434dc
3001ee56:	push   DWORD PTR [edx+0x4]
3001ee59:	mov    edx,DWORD PTR [edx]
3001ee5b:	call   0x30030c22
3001ee60:	mov    BYTE PTR [ebp-0x4],0x0
3001ee64:	mov    eax,DWORD PTR [ebp-0x121c]
3001ee6a:	test   eax,eax
3001ee6c:	je     0x30014863
3001ee72:	mov    ecx,DWORD PTR [eax]
3001ee74:	push   eax
3001ee75:	call   DWORD PTR [ecx+0x8]
3001ee78:	jmp    0x30014863
3001ee7d:	mov    esi,0x30043460
3001ee82:	mov    ecx,esi
3001ee84:	call   0x30032748
3001ee89:	and    DWORD PTR ds:0x30043c20,0x0
3001ee90:	call   0x30016a50
3001ee95:	mov    edx,DWORD PTR ds:0x30043480
3001ee9b:	mov    ecx,DWORD PTR ds:0x300434dc
3001eea1:	and    DWORD PTR ds:0x300435c4,0x0
3001eea8:	push   0x30043c20
3001eead:	push   0x300435c4
3001eeb2:	push   0x30043484
3001eeb7:	push   0x30043120
3001eebc:	call   0x30018695
3001eec1:	test   eax,eax
3001eec3:	jns    0x3001eed2
3001eec5:	xor    eax,eax
3001eec7:	inc    eax
3001eec8:	mov    ds:0x30044d08,eax
3001eecd:	mov    ds:0x300434b8,eax
3001eed2:	mov    ecx,esi
3001eed4:	mov    DWORD PTR ds:0x300434dc,0x30043c60
3001eede:	call   0x300180c6
3001eee3:	test   eax,eax
3001eee5:	jns    0x30014883
3001eeeb:	xor    eax,eax
3001eeed:	inc    eax
3001eeee:	mov    ds:0x30044d08,eax
3001eef3:	mov    ds:0x300434b8,eax
3001eef8:	jmp    0x30014883
3001eefd:	cmp    DWORD PTR ds:0x3004354c,0x0
3001ef04:	je     0x30014890
3001ef0a:	push   0x3001f1d0
3001ef0f:	push   0x30018514
3001ef14:	push   0x2
3001ef16:	call   0x300046d1
3001ef1b:	jmp    0x30014890
3001ef20:	mov    edi,edx
3001ef22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef26:	mov    esi,0x300071f8
3001ef2b:	jmp    0x30014936
3001ef30:	mov    eax,0x300071f8
3001ef35:	mov    edx,0x30043500
3001ef3a:	mov    esi,eax
3001ef3c:	mov    edi,edx
3001ef3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef42:	mov    esi,eax
3001ef44:	mov    edi,0x30043510
3001ef49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001ef4d:	jmp    0x30014993
3001ef52:	xor    ecx,ecx
3001ef54:	mov    eax,DWORD PTR [edx+ecx*4]
3001ef57:	cmp    eax,DWORD PTR [edi+ecx*4]
3001ef5a:	jne    0x3001ef68
3001ef5c:	inc    ecx
3001ef5d:	cmp    ecx,0x4
3001ef60:	je     0x300149a5
3001ef66:	jmp    0x3001ef54
3001ef68:	push   0x30043484
3001ef6d:	push   ecx
3001ef6e:	mov    ecx,edx
3001ef70:	call   0x30032ad7
3001ef75:	mov    esi,eax
3001ef77:	test   esi,esi
3001ef79:	js     0x300149a5
3001ef7f:	jmp    0x30014c25
3001ef84:	xor    ecx,ecx
3001ef86:	mov    edx,0x30043500
3001ef8b:	mov    eax,DWORD PTR [edx+ecx*4]
3001ef8e:	cmp    eax,DWORD PTR [edi+ecx*4]
3001ef91:	jne    0x3001ef9f
3001ef93:	inc    ecx
3001ef94:	cmp    ecx,0x4
3001ef97:	je     0x300149b2
3001ef9d:	jmp    0x3001ef8b
3001ef9f:	push   DWORD PTR ds:0x30043564
3001efa5:	push   ecx
3001efa6:	mov    ecx,edx
3001efa8:	call   0x30032d5f
3001efad:	mov    esi,eax
3001efaf:	test   esi,esi
3001efb1:	js     0x300149b2
3001efb7:	jmp    0x30014c25
3001efbc:	xor    eax,eax
3001efbe:	inc    eax
3001efbf:	mov    ds:0x300434c8,eax
3001efc4:	jmp    0x30014a49
3001efc9:	and    DWORD PTR [ebp-0x1228],0x0
3001efd0:	jmp    0x3001f0ff
3001efd5:	and    DWORD PTR [ebp-0x121c],eax
3001efdb:	push   0x3001f258
3001efe0:	lea    eax,[ebp-0x121c]
3001efe6:	push   0x3001f25c
3001efeb:	push   eax
3001efec:	call   DWORD PTR ds:0x300453c0
3001eff2:	add    esp,0xc
3001eff5:	cmp    DWORD PTR [ebp-0x121c],0x0
3001effc:	je     0x3001f0ff
3001f002:	push   0x3001f268
3001f007:	push   DWORD PTR [ebp-0x121c]
3001f00d:	call   DWORD PTR ds:0x300453c4
3001f013:	push   DWORD PTR [ebp-0x121c]
3001f019:	call   DWORD PTR ds:0x300453c8
3001f01f:	add    esp,0xc
3001f022:	jmp    0x3001f0ff
3001f027:	mov    eax,ds:0x30043670
3001f02c:	push   0x20006
3001f031:	mov    BYTE PTR [eax+0x6],0x1
3001f035:	push   DWORD PTR ds:0x300434dc
3001f03b:	xor    eax,eax
3001f03d:	push   0x80000002
3001f042:	lea    ecx,[ebp-0x1244]
3001f048:	mov    DWORD PTR [ebp-0x1244],eax
3001f04e:	mov    DWORD PTR [ebp-0x1240],eax
3001f054:	mov    DWORD PTR [ebp-0x123c],eax
3001f05a:	call   0x300051d9
3001f05f:	test   eax,eax
3001f061:	jne    0x3001f07a
3001f063:	push   ecx
3001f064:	push   DWORD PTR ds:0x30043468
3001f06a:	lea    ecx,[ebp-0x1244]
3001f070:	push   0x3001f234
3001f075:	call   0x30013794
3001f07a:	lea    ecx,[ebp-0x1244]
3001f080:	call   0x300051ae
3001f085:	jmp    0x30014a76
3001f08a:	mov    eax,0xbef
3001f08f:	mov    esi,0x80004005
3001f094:	mov    DWORD PTR [ebp-0x122c],eax
3001f09a:	jmp    0x30014c25
3001f09f:	call   0x300331b8
3001f0a4:	mov    esi,DWORD PTR ds:0x300435cc
3001f0aa:	lea    eax,[esi+0x1ec]
3001f0b0:	push   eax
3001f0b1:	call   0x3002f1d7
3001f0b6:	mov    BYTE PTR [ebp-0x1221],al
3001f0bc:	lea    eax,[esi+0x3f4]
3001f0c2:	push   eax
3001f0c3:	call   0x3002f1d7
3001f0c8:	cmp    BYTE PTR [ebp-0x1221],0x0
3001f0cf:	je     0x3001f0d9
3001f0d1:	test   al,al
3001f0d3:	je     0x3001f0d9
3001f0d5:	xor    esi,esi
3001f0d7:	jmp    0x3001f0de
3001f0d9:	mov    esi,0x80004005
3001f0de:	and    DWORD PTR [ebp-0x1228],0x0
3001f0e5:	jmp    0x30014c25
3001f0ea:	mov    eax,0xbeb
3001f0ef:	mov    esi,0x80004005
3001f0f4:	mov    DWORD PTR [ebp-0x122c],eax
3001f0fa:	jmp    0x30014c19
3001f0ff:	mov    esi,DWORD PTR [ebp-0x1220]
3001f105:	jmp    0x30014c25
3001f10a:	cmp    DWORD PTR ds:0x300434dc,0x0
3001f111:	jne    0x3001f11d
3001f113:	mov    DWORD PTR ds:0x300434dc,0x3000e4f0
3001f11d:	mov    eax,DWORD PTR [ecx]
3001f11f:	push   0x0
3001f121:	push   0x0
3001f123:	call   DWORD PTR [eax+0x2c]
3001f126:	mov    edi,DWORD PTR ds:0x300430c0
3001f12c:	test   edi,edi
3001f12e:	je     0x3001f181
3001f130:	mov    eax,DWORD PTR [ebp-0x122c]
3001f136:	test   eax,eax
3001f138:	jne    0x3001f15b
3001f13a:	cmp    esi,0x8007000e
3001f140:	je     0x3001f156
3001f142:	cmp    esi,0x80070057
3001f148:	sete   al
3001f14b:	dec    eax
3001f14c:	and    eax,0x3
3001f14f:	add    eax,0xbeb
3001f154:	jmp    0x3001f15b
3001f156:	mov    eax,0xbed
3001f15b:	xor    ecx,ecx
3001f15d:	push   0x800
3001f162:	mov    WORD PTR [ebp-0x1218],cx
3001f169:	lea    ecx,[ebp-0x1218]
3001f16f:	push   ecx
3001f170:	push   eax
3001f171:	push   edi
3001f172:	call   DWORD PTR ds:0x3004543c
3001f178:	mov    edx,0xbb8
3001f17d:	mov    ecx,edi
3001f17f:	jmp    0x3001f1af
3001f181:	mov    esi,DWORD PTR ds:0x300430bc
3001f187:	xor    eax,eax
3001f189:	push   0x800
3001f18e:	mov    WORD PTR [ebp-0x1218],ax
3001f195:	lea    eax,[ebp-0x1218]
3001f19b:	push   eax
3001f19c:	push   0x19e7
3001f1a1:	push   esi
3001f1a2:	call   DWORD PTR ds:0x3004543c
3001f1a8:	mov    edx,0x19e6
3001f1ad:	mov    ecx,esi
3001f1af:	lea    eax,[ebp-0x1218]
3001f1b5:	push   eax
3001f1b6:	call   0x3003279b
3001f1bb:	jmp    0x30014c48
3001f1c0:	call   DWORD PTR ds:0x30045160
3001f1c6:	jmp    0x30014cc9
3001f1cb:	nop
3001f1cc:	nop
3001f1cd:	nop
3001f1ce:	nop
3001f1cf:	nop
3001f1d0:	dec    ecx
3001f1d1:	add    BYTE PTR [edi+0x0],ah
3001f1d4:	outs   dx,BYTE PTR ds:[esi]
3001f1d5:	add    BYTE PTR [edi+0x0],ch
3001f1d8:	jb     0x3001f1da
3001f1da:	imul   eax,DWORD PTR [eax],0x67006e
3001f1e0:	and    BYTE PTR [eax],al
3001f1e2:	push   edx
3001f1e3:	add    BYTE PTR [ecx+0x0],al
3001f1e6:	dec    esi
3001f1e7:	add    BYTE PTR [ebp+0x0],dl
3001f1ea:	and    BYTE PTR [eax],al
3001f1ec:	arpl   WORD PTR [eax],ax
3001f1ee:	outs   dx,DWORD PTR ds:[esi]
3001f1ef:	add    BYTE PTR [ebp+0x0],ch
3001f1f2:	ins    DWORD PTR es:[edi],dx
3001f1f3:	add    BYTE PTR [ecx+0x0],ah
3001f1f6:	outs   dx,BYTE PTR ds:[esi]
3001f1f7:	add    BYTE PTR [eax+eax*1+0x2d],ah
3001f1fb:	add    BYTE PTR [eax+eax*1+0x69],ch
3001f1ff:	add    BYTE PTR [esi+0x0],ch
3001f202:	add    BYTE PTR gs:[eax],ah
3001f205:	add    BYTE PTR [ecx+0x0],ah
3001f208:	jb     0x3001f20a
3001f20a:	add    BYTE PTR [di+0x0],dh
3001f20e:	ins    DWORD PTR es:[edi],dx
3001f20f:	add    BYTE PTR [ebp+0x0],ah
3001f212:	outs   dx,BYTE PTR ds:[esi]
3001f213:	add    BYTE PTR [eax+eax*1+0x20],dh
3001f217:	add    BYTE PTR [eax],ch
3001f219:	add    BYTE PTR [eax+eax*1+0x65],ah
3001f21d:	add    BYTE PTR [eax+0x0],dh
3001f220:	jb     0x3001f222
3001f222:	add    BYTE PTR gs:[ebx+0x0],ah
3001f226:	popa   
3001f227:	add    BYTE PTR [eax+eax*1+0x65],dh
3001f22b:	add    BYTE PTR [eax+eax*1+0x29],ah
3001f22f:	add    BYTE PTR [eax],al
3001f231:	add    BYTE PTR [eax+0x65005390],dl
3001f237:	add    BYTE PTR [eax+eax*1+0x75],dh
3001f23b:	add    BYTE PTR [eax+0x0],dh
3001f23e:	inc    ebx
3001f23f:	add    BYTE PTR [edi+0x0],ch
3001f242:	ins    DWORD PTR es:[edi],dx
3001f243:	add    BYTE PTR [ebp+0x0],ch
3001f246:	popa   
3001f247:	add    BYTE PTR [esi+0x0],ch
3001f24a:	add    BYTE PTR fs:[eax+eax*1+0x69],cl
3001f24f:	add    BYTE PTR [esi+0x0],ch
3001f252:	add    BYTE PTR gs:[eax],al
3001f255:	add    BYTE PTR [eax+0x2b7790],dl
3001f25b:	nop
3001f25c:	fs gs jbe 0x3001f2c5
3001f260:	outs   dx,BYTE PTR ds:[esi]
3001f261:	jbe    0x3001f291
3001f263:	jbe    0x3001f2ca
3001f265:	jb     0x3001f267
3001f267:	nop
3001f268:	push   ebx
3001f269:	outs   dx,DWORD PTR ds:[esi]
3001f26a:	data16 je 0x3001f2e4
3001f26d:	popa   
3001f26e:	jb     0x3001f2d5
3001f270:	pop    esp
3001f271:	dec    ebp
3001f272:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
3001f279:	je     0x3001f2d7
3001f27b:	push   esi
3001f27c:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
3001f283:	jne    0x3001f2e9
3001f285:	imul   ebp,DWORD PTR [edi+0x5c],0x302e3131
3001f28c:	or     al,BYTE PTR [eax]
3001f28e:	call   0x3001ce4b
3001f293:	jmp    0x3000bfba
3001f298:	mov    eax,DWORD PTR [esi+0xc]
3001f29b:	cmp    DWORD PTR [eax],0x0
3001f29e:	je     0x30006035
3001f2a4:	mov    DWORD PTR [ebp-0x4],0x8007000e
3001f2ab:	jmp    0x30006035
3001f2b0:	push   DWORD PTR [esi]
3001f2b2:	push   DWORD PTR [ebp+0xc]
3001f2b5:	call   DWORD PTR ds:0x300453cc
3001f2bb:	pop    ecx
3001f2bc:	pop    ecx
3001f2bd:	test   eax,eax
3001f2bf:	je     0x3001f2c9
3001f2c1:	mov    esi,DWORD PTR [esi+0x8]
3001f2c4:	jmp    0x30005ff6
3001f2c9:	mov    DWORD PTR [edi],0x1
3001f2cf:	cmp    DWORD PTR [esi+0x4],0x0
3001f2d3:	je     0x30005ffe
3001f2d9:	push   DWORD PTR [esi+0x4]
3001f2dc:	lea    ecx,[ebp+0xc]
3001f2df:	call   0x30001488
3001f2e4:	mov    eax,DWORD PTR [ebp+0xc]
3001f2e7:	test   eax,eax
3001f2e9:	jne    0x30006033
3001f2ef:	jmp    0x3001f2a4
3001f2f1:	mov    eax,0x80004001
3001f2f6:	jmp    0x3001e2e4
3001f2fb:	cmp    WORD PTR [ebp+0x10],0x8
3001f300:	je     0x3001f30c
3001f302:	mov    eax,0x80070057
3001f307:	jmp    0x3001e2e4
3001f30c:	cmp    DWORD PTR [ebp+0x18],0x0
3001f310:	jne    0x3001f31c
3001f312:	xor    eax,eax
3001f314:	mov    ds:0x30043904,ax
3001f31a:	jmp    0x3001f32e
3001f31c:	push   DWORD PTR [ebp+0x18]
3001f31f:	push   0x104
3001f324:	push   0x30043904
3001f329:	call   0x30004c1e
3001f32e:	xor    eax,eax
3001f330:	jmp    0x3001e2e4
3001f335:	add    esi,0x680
3001f33b:	lea    edi,[ebp-0x21c]
3001f341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f345:	lea    esi,[ebp-0x21c]
3001f34b:	jmp    0x30007090
3001f350:	cmp    DWORD PTR ds:0x300434c8,0x0
3001f357:	jne    0x3000708b
3001f35d:	lea    eax,[esi+0x2c]
3001f360:	push   0x300071f8
3001f365:	push   eax
3001f366:	mov    DWORD PTR [ebp-0x20c],eax
3001f36c:	call   0x30004c93
3001f371:	test   al,al
3001f373:	je     0x3001f432
3001f379:	mov    ecx,DWORD PTR [esi+0xc]
3001f37c:	test   ecx,ecx
3001f37e:	je     0x3001f432
3001f384:	lea    edx,[ebp-0x208]
3001f38a:	push   edx
3001f38b:	mov    edx,0x30028f34
3001f390:	push   edx
3001f391:	xor    edi,edi
3001f393:	mov    DWORD PTR [ebp-0x208],edi
3001f399:	mov    eax,DWORD PTR [ecx]
3001f39b:	push   edx
3001f39c:	push   ecx
3001f39d:	call   DWORD PTR [eax+0xc]
3001f3a0:	cmp    DWORD PTR [ebp-0x208],edi
3001f3a6:	je     0x3001f432
3001f3ac:	mov    eax,DWORD PTR [esi]
3001f3ae:	push   edi
3001f3af:	push   edi
3001f3b0:	mov    ecx,esi
3001f3b2:	call   DWORD PTR [eax+0x2c]
3001f3b5:	mov    esi,0x3001f440
3001f3ba:	lea    edi,[ebp-0x204]
3001f3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f3c3:	push   0x1f0
3001f3c8:	lea    eax,[ebp-0x1f4]
3001f3ce:	push   0x0
3001f3d0:	push   eax
3001f3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f3d2:	call   0x300011b1
3001f3d7:	add    esp,0xc
3001f3da:	lea    eax,[ebp-0x204]
3001f3e0:	push   0x100
3001f3e5:	push   eax
3001f3e6:	push   0xbb9
3001f3eb:	push   DWORD PTR ds:0x300430c0
3001f3f1:	call   DWORD PTR ds:0x3004543c
3001f3f7:	mov    eax,DWORD PTR [ebp-0x208]
3001f3fd:	push   0x0
3001f3ff:	mov    ecx,DWORD PTR [eax]
3001f401:	push   0x1
3001f403:	lea    edx,[ebp-0x204]
3001f409:	push   edx
3001f40a:	mov    esi,0x3001f450
3001f40f:	push   esi
3001f410:	push   eax
3001f411:	call   DWORD PTR [ecx+0x10]
3001f414:	test   eax,eax
3001f416:	jne    0x3001f422
3001f418:	mov    edi,DWORD PTR [ebp-0x20c]
3001f41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f422:	mov    eax,DWORD PTR [ebp-0x208]
3001f428:	test   eax,eax
3001f42a:	je     0x3001f432
3001f42c:	mov    ecx,DWORD PTR [eax]
3001f42e:	push   eax
3001f42f:	call   DWORD PTR [ecx+0x8]
3001f432:	mov    esi,DWORD PTR [ebp-0x20c]
3001f438:	jmp    0x30007090
3001f43d:	nop
3001f43e:	nop
3001f43f:	nop
3001f440:	inc    edi
3001f441:	add    BYTE PTR [ebp+0x0],ah
3001f444:	outs   dx,BYTE PTR ds:[esi]
3001f445:	add    BYTE PTR [ebp+0x0],ah
3001f448:	jb     0x3001f44a
3001f44a:	popa   
3001f44b:	add    BYTE PTR [eax+eax*1+0x0],ch
3001f44f:	add    BYTE PTR [ecx-0x6ec3db2b],al
3001f455:	push   ebp
3001f456:	test   BYTE PTR [eax-0x5b],cl
3001f459:	jno    0x3001f3fa
3001f45b:	call   0x94cf09f9
3001f460:	xor    ebx,ebx
3001f462:	jmp    0x300105b3
3001f467:	mov    ecx,DWORD PTR [ebp-0x4]
3001f46a:	mov    edx,0x3e8
3001f46f:	mov    eax,DWORD PTR [ecx+0x660]
3001f475:	cmp    eax,edx
3001f477:	jne    0x300108b2
3001f47d:	cmp    DWORD PTR [ecx+0x664],0x10
3001f484:	je     0x30010893
3001f48a:	cmp    eax,edx
3001f48c:	jne    0x300108b2
3001f492:	sub    esp,0x10
3001f495:	mov    edi,esp
3001f497:	mov    esi,0x3001f4fc
3001f49c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f49f:	xor    edx,edx
3001f4a1:	inc    edx
3001f4a2:	mov    ecx,0x30043478
3001f4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f4a8:	call   0x30010539
3001f4ad:	test   eax,eax
3001f4af:	js     0x300108f0
3001f4b5:	sub    esp,0x10
3001f4b8:	mov    edi,esp
3001f4ba:	mov    esi,0x3001f50c
3001f4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f4c2:	xor    edx,edx
3001f4c4:	inc    edx
3001f4c5:	mov    ecx,0x30043478
3001f4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3001f4cb:	call   0x30010539
3001f4d0:	test   eax,eax
3001f4d2:	js     0x300108f0
3001f4d8:	mov    DWORD PTR [ebp-0x14],0x2d32aa54
3001f4df:	mov    DWORD PTR [ebp-0x10],0x49641f84
3001f4e6:	mov    DWORD PTR [ebp-0xc],0xb8ec13bc
3001f4ed:	mov    DWORD PTR [ebp-0x8],0x97379471
3001f4f4:	lea    esi,[ebp-0x14]
3001f4f7:	jmp    0x30010898
3001f4fc:	sbb    bl,ch
3001f4fe:	mov    ds:0x2e404ec8,al
3001f503:	inc    edi
3001f504:	mov    ebx,0x5e05a128
3001f509:	in     al,dx
3001f50a:	lahf   
3001f50b:	jp     0x3001f4d7
3001f50d:	push   ds
3001f50e:	mov    WORD PTR [eax+0x48],?
3001f511:	call   edx
3001f513:	adc    DWORD PTR [eax+0x4fc0004f],edx
3001f519:	mov    ds:0xb70fa102,eax
3001f51e:	rcl    BYTE PTR [eax-0x18],0x6f
3001f522:	mov    DWORD PTR [eax],0xe901b200
3001f528:	dec    esp
3001f529:	dec    esi
3001f52a:	(bad)  
3001f52b:	jmp    FWORD PTR [eax+0x57]
3001f52e:	add    BYTE PTR [edi],al
3001f530:	sub    al,0xd5
3001f533:	mov    eax,0x68cc0000
3001f538:	push   edi
3001f539:	add    BYTE PTR [edi],al
3001f53b:	sub    al,0xca
3001f53e:	mov    eax,0x81cc0000
3001f543:	rol    DWORD PTR [eax],0x0
3001f546:	adc    BYTE PTR [eax],al
3001f548:	jmp    0x30008c2a
3001f54d:	mov    edi,eax
3001f54f:	test   edi,edi
3001f551:	je     0x3001f574
3001f553:	mov    eax,DWORD PTR [esi+0x4]
3001f556:	mov    DWORD PTR [edi+0x4],eax
3001f559:	mov    ecx,DWORD PTR [esi+0x4]
3001f55c:	inc    ecx
3001f55d:	push   ecx
3001f55e:	lea    eax,[esi+0x10]
3001f561:	push   eax
3001f562:	push   ecx
3001f563:	lea    eax,[edi+0x10]
3001f566:	push   eax
3001f567:	call   0x300041d1
3001f56c:	add    esp,0x10
3001f56f:	jmp    0x3000432c
3001f574:	call   0x3002bcb8
3001f579:	int3   
3001f57a:	call   0x3002bcb8
3001f57f:	int3   
3001f580:	int3   
3001f581:	lea    ecx,[edx+ecx*2]
3001f584:	push   ecx
3001f585:	mov    ecx,DWORD PTR [edi]
3001f587:	push   DWORD PTR [ecx-0x8]
3001f58a:	push   edx
3001f58b:	call   0x3002bcc3
3001f590:	jmp    0x300041c0
3001f595:	push   0x80070057
3001f59a:	call   0x3002ae0b
3001f59f:	int3   
3001f5a0:	push   eax
3001f5a1:	mov    ecx,esi
3001f5a3:	call   0x30004147
3001f5a8:	jmp    0x3000457a
3001f5ad:	mov    eax,0x3001f5b3
3001f5b2:	ret    
3001f5b3:	mov    esi,DWORD PTR [ebp-0x14]
3001f5b6:	mov    eax,DWORD PTR [ebp-0x18]
3001f5b9:	jmp    0x3001a904
3001f5be:	call   DWORD PTR ds:0x30045160
3001f5c4:	jmp    0x30007e74
3001f5c9:	push   esi
3001f5ca:	call   DWORD PTR ds:0x300452ac
3001f5d0:	pop    ecx
3001f5d1:	jmp    0x30007e98
3001f5d6:	push   DWORD PTR [ebp+0x10]
3001f5d9:	call   0x300013e8
3001f5de:	inc    eax
3001f5df:	jmp    0x30008490
3001f5e4:	cmp    eax,0xc
3001f5e7:	je     0x3001f604
3001f5e9:	cmp    eax,0x16
3001f5ec:	je     0x3001f5fd
3001f5ee:	cmp    eax,0x22
3001f5f1:	je     0x3001f5fd
3001f5f3:	cmp    eax,0x50
3001f5f6:	jne    0x3001f60b
3001f5f8:	jmp    0x30001440
3001f5fd:	push   0x80070057
3001f602:	jmp    0x3001f610
3001f604:	push   0x8007000e
3001f609:	jmp    0x3001f610
3001f60b:	push   0x80004005
3001f610:	call   0x3002ae0b
3001f615:	int3   
3001f616:	mov    eax,0x80070057
3001f61b:	jmp    0x300062ca
3001f620:	mov    eax,0x8007000e
3001f625:	jmp    0x300062ca
3001f62a:	xor    edx,edx
3001f62c:	jmp    0x30006300
3001f631:	and    DWORD PTR [esi],0x0
3001f634:	jmp    0x300014ab
3001f639:	push   0x8007000e
3001f63e:	call   0x3002ae0b
3001f643:	int3   
3001f644:	push   0xd
3001f646:	pop    eax
3001f647:	jmp    0x300137d6
3001f64c:	call   0x3002be14
3001f651:	jmp    0x30005206
3001f656:	push   0x1
3001f658:	call   DWORD PTR [esi+0x20]
3001f65b:	lea    esi,[esi+0x24]
3001f65e:	cmp    DWORD PTR [esi],ebx
3001f660:	je     0x3001686a
3001f666:	jmp    0x3001f656
3001f668:	mov    ecx,DWORD PTR [esi]
3001f66a:	test   ecx,ecx
3001f66c:	je     0x3001f678
3001f66e:	push   0x1
3001f670:	call   DWORD PTR [ecx+0x1c]
3001f673:	mov    eax,ds:0x30043b28
3001f678:	add    esi,0x4
3001f67b:	jmp    0x30016875
3001f680:	mov    ecx,DWORD PTR [esi+0x10]
3001f683:	test   ecx,ecx
3001f685:	je     0x3001f68d
3001f687:	mov    eax,DWORD PTR [ecx]
3001f689:	push   ecx
3001f68a:	call   DWORD PTR [eax+0x8]
3001f68d:	push   ebx
3001f68e:	mov    DWORD PTR [esi+0x10],ebx
3001f691:	call   DWORD PTR [esi+0x20]
3001f694:	add    esi,0x24
3001f697:	jmp    0x3001689c
3001f69c:	mov    ecx,DWORD PTR [esi]
3001f69e:	test   ecx,ecx
3001f6a0:	je     0x3001f6ab
3001f6a2:	push   ebx
3001f6a3:	call   DWORD PTR [ecx+0x1c]
3001f6a6:	mov    eax,ds:0x30043b28
3001f6ab:	add    esi,0x4
3001f6ae:	jmp    0x300168af
3001f6b3:	call   DWORD PTR ds:0x30045160
3001f6b9:	mov    esi,eax
3001f6bb:	test   esi,esi
3001f6bd:	jle    0x30006d72
3001f6c3:	movzx  esi,si
3001f6c6:	or     esi,0x80070000
3001f6cc:	jmp    0x30006d72
3001f6d1:	push   edi
3001f6d2:	call   DWORD PTR ds:0x30045420
3001f6d8:	mov    DWORD PTR [esi+0xc],ebx
3001f6db:	jmp    0x3001716f
3001f6e0:	mov    eax,DWORD PTR [ecx]
3001f6e2:	push   ecx
3001f6e3:	call   DWORD PTR [eax+0x8]
3001f6e6:	jmp    0x3001717a
3001f6eb:	push   esi
3001f6ec:	call   DWORD PTR ds:0x30045168
3001f6f2:	test   eax,eax
3001f6f4:	jne    0x3000877e
3001f6fa:	call   DWORD PTR ds:0x30045160
3001f700:	jmp    0x3000877e
3001f705:	mov    eax,DWORD PTR [esi+0xc]
3001f708:	mov    ebx,0x3e8
3001f70d:	cmp    eax,ebx
3001f70f:	je     0x3001f726
3001f711:	cmp    eax,0x7d0
3001f716:	je     0x3001f729
3001f718:	cmp    eax,0xbb8
3001f71d:	jne    0x3001f729
3001f71f:	mov    edi,0x188
3001f724:	jmp    0x3001f729
3001f726:	push   0x10
3001f728:	pop    edi
3001f729:	push   edi
3001f72a:	push   eax
3001f72b:	push   DWORD PTR [ebp-0x14]
3001f72e:	mov    edi,0x3000881c
3001f733:	lea    eax,[ebp-0x10]
3001f736:	push   edi
3001f737:	push   eax
3001f738:	call   0x30005153
3001f73d:	add    esp,0x10
3001f740:	lea    eax,[ebp-0x10]
3001f743:	push   eax
3001f744:	mov    ecx,esi
3001f746:	call   0x3000873a
3001f74b:	test   al,al
3001f74d:	jne    0x30008800
3001f753:	cmp    DWORD PTR [esi+0xc],ebx
3001f756:	je     0x30008800
3001f75c:	push   0x10
3001f75e:	push   ebx
3001f75f:	push   DWORD PTR [ebp-0x14]
3001f762:	lea    eax,[ebp-0x10]
3001f765:	push   edi
3001f766:	push   eax
3001f767:	call   0x30005153
3001f76c:	add    esp,0x10
3001f76f:	lea    eax,[ebp-0x10]
3001f772:	push   eax
3001f773:	mov    ecx,esi
3001f775:	call   0x3000873a
3001f77a:	jmp    0x30008800
3001f77f:	push   0x80004005
3001f784:	jmp    0x3001f78b
3001f786:	push   0x80070057
3001f78b:	call   0x3002ae0b
3001f790:	int3   
3001f791:	call   0x3002c3b4
3001f796:	int3   
3001f797:	push   DWORD PTR [ebp-0x4]
3001f79a:	call   DWORD PTR ds:0x300455b4
3001f7a0:	jmp    0x3001c748
3001f7a5:	mov    eax,DWORD PTR [ecx]
3001f7a7:	push   0x1
3001f7a9:	call   DWORD PTR [eax]
3001f7ab:	jmp    0x3001d2d8
3001f7b0:	mov    eax,DWORD PTR [ecx]
3001f7b2:	push   0x1
3001f7b4:	call   DWORD PTR [eax]
3001f7b6:	jmp    0x3001d307
3001f7bb:	mov    DWORD PTR [edi+0x8],eax
3001f7be:	jmp    0x3001d3bb
3001f7c3:	xor    eax,eax
3001f7c5:	jmp    0x3001d44b
3001f7ca:	xor    bl,bl
3001f7cc:	jmp    0x3000ce32
3001f7d1:	lea    eax,[ebp-0x44]
3001f7d4:	push   eax
3001f7d5:	mov    ecx,ebx
3001f7d7:	call   0x3002c2c0
3001f7dc:	cmp    DWORD PTR [ebp+0x14],0x0
3001f7e0:	je     0x3001ce1f
3001f7e6:	push   0x0
3001f7e8:	push   0x3001f800
3001f7ed:	push   0x3001f81c
3001f7f2:	push   0x0
3001f7f4:	call   DWORD PTR ds:0x30045440
3001f7fa:	jmp    0x3001ce1f
3001f7ff:	nop
3001f800:	push   ebx
3001f801:	add    BYTE PTR [eax+0x0],dh
3001f804:	ins    BYTE PTR es:[edi],dx
3001f805:	add    BYTE PTR [ecx+0x0],ah
3001f808:	jae    0x3001f80a
3001f80a:	push   0x53002000
3001f80f:	add    BYTE PTR [ebx+0x0],ah
3001f812:	jb     0x3001f814
3001f814:	add    BYTE PTR gs:[ebp+0x0],ah
3001f818:	outs   dx,BYTE PTR ds:[esi]
3001f819:	add    BYTE PTR [eax],al
3001f81b:	add    BYTE PTR [ebx+0x0],al
3001f81e:	ins    BYTE PTR es:[edi],dx
3001f81f:	add    BYTE PTR [ecx+0x0],ch
3001f822:	arpl   WORD PTR [eax],ax
3001f824:	imul   eax,DWORD PTR [eax],0x20
3001f827:	add    BYTE PTR [edi+0x0],cl
3001f82a:	dec    ebx
3001f82b:	add    BYTE PTR [eax],ah
3001f82d:	add    BYTE PTR [eax+eax*1+0x6f],dh
3001f831:	add    BYTE PTR [eax],ah
3001f833:	add    BYTE PTR [ebx+0x0],ah
3001f836:	outs   dx,DWORD PTR ds:[esi]
3001f837:	add    BYTE PTR [esi+0x0],ch
3001f83a:	je     0x3001f83c
3001f83c:	imul   eax,DWORD PTR [eax],0x75006e
3001f842:	add    BYTE PTR gs:[eax],al
3001f845:	add    BYTE PTR [ecx],ah
3001f847:	dec    esi
3001f848:	adc    cl,ch
3001f84a:	mov    ecx,0x8bffffd3
3001f84f:	dec    ebx
3001f850:	sbb    BYTE PTR [ebp+0x4589ec45],cl
3001f856:	or     al,0x8d
3001f858:	inc    ebp
3001f859:	call   0xb5f23de7
3001f85e:	leave  
3001f85f:	jne    0x3001f867
3001f861:	call   DWORD PTR ds:0x300455c8
3001f867:	mov    eax,DWORD PTR [ecx]
3001f869:	lea    edx,[ebp+0xc]
3001f86c:	push   edx
3001f86d:	lea    edx,[ebp-0x10]
3001f870:	push   edx
3001f871:	call   DWORD PTR [eax+0x8]
3001f874:	test   al,al
3001f876:	jne    0x3001f87f
3001f878:	xor    al,al
3001f87a:	jmp    0x3001d524
3001f87f:	mov    ebx,DWORD PTR [ebp-0x18]
3001f882:	mov    esi,DWORD PTR [ebp-0x14]
3001f885:	test   ebx,ebx
3001f887:	je     0x3001f8aa
3001f889:	test   esi,esi
3001f88b:	je     0x3001f8aa
3001f88d:	push   0x3002a33c
3001f892:	push   esi
3001f893:	push   ebx
3001f894:	mov    ecx,edi
3001f896:	call   0x3002c09e
3001f89b:	test   eax,eax
3001f89d:	jns    0x3001f8aa
3001f89f:	push   0x2
3001f8a1:	push   esi
3001f8a2:	push   ebx
3001f8a3:	mov    ecx,edi
3001f8a5:	call   0x3002c09e
3001f8aa:	mov    esi,DWORD PTR [edi]
3001f8ac:	test   esi,esi
3001f8ae:	jne    0x3001d489
3001f8b4:	jmp    0x3001f878
3001f8b6:	mov    DWORD PTR [esi+0x8],eax
3001f8b9:	jmp    0x3001d4a3
3001f8be:	mov    DWORD PTR [esi+0x8],eax
3001f8c1:	jmp    0x3001d4c3
3001f8c6:	mov    DWORD PTR [edi+0x4],eax
3001f8c9:	jmp    0x3001d4ec
3001f8ce:	mov    DWORD PTR [edi+0x4],eax
3001f8d1:	jmp    0x3001d513
3001f8d6:	xor    al,al
3001f8d8:	jmp    0x3001c89b
3001f8dd:	dec    eax
3001f8de:	je     0x3001f91b
3001f8e0:	dec    eax
3001f8e1:	jne    0x3001d088
3001f8e7:	mov    DWORD PTR [esi],0x4
3001f8ed:	jmp    0x3001d088
3001f8f2:	or     DWORD PTR [ebp-0x4],0xffffffff
3001f8f6:	mov    ecx,DWORD PTR [ebp-0x220]
3001f8fc:	lea    ecx,[ecx-0x10]
3001f8ff:	call   0x30004017
3001f904:	jmp    0x3001cfe2
3001f909:	or     DWORD PTR [ebp-0x4],0xffffffff
3001f90d:	mov    ecx,DWORD PTR [ebp-0x220]
3001f913:	lea    ecx,[ecx-0x10]
3001f916:	call   0x30004017
3001f91b:	xor    eax,eax
3001f91d:	push   0x208
3001f922:	push   eax
3001f923:	mov    WORD PTR [ebp-0x21c],ax
3001f92a:	lea    eax,[ebp-0x21a]
3001f930:	push   eax
3001f931:	mov    DWORD PTR [esi],0x3
3001f937:	call   0x300011b1
3001f93c:	add    esp,0xc
3001f93f:	lea    eax,[ebp-0x21c]
3001f945:	push   0x105
3001f94a:	push   eax
3001f94b:	push   0x0
3001f94d:	call   DWORD PTR ds:0x300451f8
3001f953:	test   eax,eax
3001f955:	je     0x3001f8e7
3001f957:	lea    eax,[ebp-0x21c]
3001f95d:	push   eax
3001f95e:	lea    ecx,[ebp-0x224]
3001f964:	call   0x3000437e
3001f969:	lea    ecx,[ebp-0x224]
3001f96f:	mov    DWORD PTR [ebp-0x4],0x2
3001f976:	call   0x300089c3
3001f97b:	push   DWORD PTR [esi+0x4]
3001f97e:	call   edi
3001f980:	push   eax
3001f981:	lea    ecx,[ebp-0x224]
3001f987:	call   0x3000b940
3001f98c:	lea    eax,[ebp-0x224]
3001f992:	push   eax
3001f993:	lea    ecx,[esi+0x4]
3001f996:	call   0x300014c1
3001f99b:	mov    ecx,DWORD PTR [ebp-0x224]
3001f9a1:	jmp    0x3001d080
3001f9a6:	mov    ecx,DWORD PTR [ebp-0x14]
3001f9a9:	lea    ecx,[ecx-0x10]
3001f9ac:	call   0x30004017
3001f9b1:	mov    ecx,DWORD PTR [ebp-0x18]
3001f9b4:	lea    ecx,[ecx-0x10]
3001f9b7:	call   0x30004017
3001f9bc:	xor    bl,bl
3001f9be:	jmp    0x3001d175
3001f9c3:	mov    eax,DWORD PTR [ecx]
3001f9c5:	push   ebx
3001f9c6:	call   DWORD PTR [eax]
3001f9c8:	jmp    0x3001d15d
3001f9cd:	xor    edi,edi
3001f9cf:	inc    edi
3001f9d0:	jmp    0x3001c7e0
3001f9d5:	neg    edx
3001f9d7:	jmp    0x3001c7fb
3001f9dc:	push   ecx
3001f9dd:	call   edi
3001f9df:	mov    eax,DWORD PTR [ebp-0x14]
3001f9e2:	mov    DWORD PTR [ebp-0x10],ebx
3001f9e5:	jmp    0x3001cd2f
3001f9ea:	push   eax
3001f9eb:	call   edi
3001f9ed:	jmp    0x3001cd37
3001f9f2:	mov    ecx,DWORD PTR [esi]
3001f9f4:	lea    eax,[ecx+0x8]
3001f9f7:	push   eax
3001f9f8:	call   0x3002c318
3001f9fd:	push   DWORD PTR [esi+0x8]
3001fa00:	call   DWORD PTR ds:0x300451d8
3001fa06:	jmp    0x3001e9b5
3001fa0b:	mov    DWORD PTR [esi+0x10],edx
3001fa0e:	jmp    0x3001cb88
3001fa13:	push   DWORD PTR [ecx-0xc]
3001fa16:	push   ecx
3001fa17:	mov    ecx,ebx
3001fa19:	call   0x3000416f
3001fa1e:	jmp    0x30001504
3001fa23:	cmp    DWORD PTR [ebp+0x10],0x2
3001fa27:	jne    0x3001c921
3001fa2d:	jmp    0x3001c8f9
3001fa32:	mov    cl,0x1
3001fa34:	jmp    0x3000c930
3001fa39:	push   0xd
3001fa3b:	pop    eax
3001fa3c:	jmp    0x3000c752
3001fa41:	mov    ecx,edi
3001fa43:	call   0x3000c702
3001fa48:	test   esi,esi
3001fa4a:	jmp    0x3000c76b
3001fa4f:	movzx  esi,si
3001fa52:	or     esi,0x80070000
3001fa58:	jmp    0x3000c75c
3001fa5d:	mov    eax,0x3001fa63
3001fa62:	ret    
3001fa63:	lea    ecx,[ebp-0x20]
3001fa66:	call   0x300051ae
3001fa6b:	mov    eax,0x8007000e
3001fa70:	jmp    0x3000c82c
3001fa75:	push   0x1
3001fa77:	lea    eax,[ebp+0x8]
3001fa7a:	push   eax
3001fa7b:	lea    ecx,[ebp-0xc]
3001fa7e:	mov    DWORD PTR [ebp+0x8],0x3001faa4
3001fa85:	call   DWORD PTR ds:0x30045304
3001fa8b:	push   0x3001fab4
3001fa90:	lea    eax,[ebp-0xc]
3001fa93:	push   eax
3001fa94:	mov    DWORD PTR [ebp-0xc],0x3002a344
3001fa9b:	call   0x3003c7b0
3001faa0:	int3   
3001faa1:	nop
3001faa2:	nop
3001faa3:	nop
3001faa4:	bound  esp,QWORD PTR [ecx+0x64]
3001faa7:	and    BYTE PTR [ecx+0x6c],ah
3001faaa:	ins    BYTE PTR es:[edi],dx
3001faab:	outs   dx,DWORD PTR ds:[esi]
3001faac:	arpl   WORD PTR [ecx+0x74],sp
3001faaf:	imul   ebp,DWORD PTR [edi+0x6e],0x9000
3001fab6:	add    BYTE PTR [eax],al
3001fab8:	int    0xc3
3001faba:	add    dh,BYTE PTR [eax]
3001fabc:	add    BYTE PTR [eax],al
3001fabe:	add    BYTE PTR [eax],al
3001fac0:	int3   
3001fac1:	push   ss
3001fac2:	add    al,0x30
3001fac4:	mov    ecx,DWORD PTR [ebp+0x8]
3001fac7:	xor    eax,eax
3001fac9:	mov    WORD PTR [ecx],ax
3001facc:	jmp    0x30004c72
3001fad1:	xor    esi,esi
3001fad3:	jmp    0x30008ba7
3001fad8:	push   0x80070057
3001fadd:	call   0x3002ae0b
3001fae2:	int3   
3001fae3:	mov    eax,0x80004005
3001fae8:	jmp    0x3001a58c
3001faed:	mov    eax,DWORD PTR [edi]
3001faef:	push   0x0
3001faf1:	push   ecx
3001faf2:	mov    ecx,edi
3001faf4:	call   DWORD PTR [eax+0x20]
3001faf7:	jmp    0x3000eb18
3001fafc:	xor    eax,eax
3001fafe:	inc    eax
3001faff:	push   eax
3001fb00:	mov    DWORD PTR [ebp-0x1c],eax
3001fb03:	lea    eax,[ebp-0x10]
3001fb06:	push   0x3001fce8
3001fb0b:	push   eax
3001fb0c:	call   0x30005153
3001fb11:	mov    esi,DWORD PTR [ebp-0x10]
3001fb14:	add    esp,0xc
3001fb17:	lea    edi,[ebx+0x9c]
3001fb1d:	push   0x0
3001fb1f:	push   DWORD PTR [ebp-0x14]
3001fb22:	mov    eax,DWORD PTR [edi]
3001fb24:	push   esi
3001fb25:	push   0x3
3001fb27:	mov    ecx,edi
3001fb29:	call   DWORD PTR [eax]
3001fb2b:	mov    eax,DWORD PTR [edi]
3001fb2d:	push   0x0
3001fb2f:	push   DWORD PTR [ebp-0x18]
3001fb32:	mov    ecx,edi
3001fb34:	push   0x3001fd2c
3001fb39:	push   0x3
3001fb3b:	call   DWORD PTR [eax]
3001fb3d:	mov    edi,DWORD PTR [ebp-0x1c]
3001fb40:	jmp    0x30010c9f
3001fb45:	inc    edi
3001fb46:	push   edi
3001fb47:	lea    eax,[ebp-0x10]
3001fb4a:	push   0x3001fce8
3001fb4f:	push   eax
3001fb50:	mov    DWORD PTR [ebp-0x1c],edi
3001fb53:	call   0x30005153
3001fb58:	mov    esi,DWORD PTR [ebp-0x10]
3001fb5b:	add    esp,0xc
3001fb5e:	lea    edi,[ebx+0x9c]
3001fb64:	push   0x0
3001fb66:	push   DWORD PTR [ebx+0xa4]
3001fb6c:	mov    eax,DWORD PTR [edi]
3001fb6e:	push   esi
3001fb6f:	push   0x3
3001fb71:	mov    ecx,edi
3001fb73:	call   DWORD PTR [eax]
3001fb75:	mov    eax,DWORD PTR [edi]
3001fb77:	push   0x0
3001fb79:	push   DWORD PTR [ebp-0x18]
3001fb7c:	mov    ecx,edi
3001fb7e:	push   0x3001fd2c
3001fb83:	push   0x3
3001fb85:	call   DWORD PTR [eax]
3001fb87:	jmp    0x30010cd1
3001fb8c:	mov    eax,DWORD PTR [ebx]
3001fb8e:	mov    ecx,ebx
3001fb90:	call   DWORD PTR [eax+0x44]
3001fb93:	test   al,al
3001fb95:	je     0x3001fbd9
3001fb97:	mov    eax,DWORD PTR [ebp-0x1c]
3001fb9a:	inc    eax
3001fb9b:	push   eax
3001fb9c:	mov    DWORD PTR [ebp-0x1c],eax
3001fb9f:	lea    eax,[ebp-0x10]
3001fba2:	push   0x3001fd50
3001fba7:	push   eax
3001fba8:	call   0x30005153
3001fbad:	mov    esi,DWORD PTR [ebp-0x10]
3001fbb0:	add    esp,0xc
3001fbb3:	lea    edi,[ebx+0x9c]
3001fbb9:	push   0x0
3001fbbb:	push   DWORD PTR [ebp-0x18]
3001fbbe:	mov    eax,DWORD PTR [edi]
3001fbc0:	push   esi
3001fbc1:	push   0x3
3001fbc3:	mov    ecx,edi
3001fbc5:	call   DWORD PTR [eax]
3001fbc7:	mov    eax,DWORD PTR [edi]
3001fbc9:	push   0x0
3001fbcb:	push   DWORD PTR [ebp-0x18]
3001fbce:	mov    ecx,edi
3001fbd0:	push   0x3001fd2c
3001fbd5:	push   0x3
3001fbd7:	call   DWORD PTR [eax]
3001fbd9:	cmp    DWORD PTR [ebp-0x20],0x0
3001fbdd:	push   ecx
3001fbde:	setne  al
3001fbe1:	movzx  eax,al
3001fbe4:	push   eax
3001fbe5:	push   DWORD PTR [ebp-0x18]
3001fbe8:	push   ecx
3001fbe9:	push   DWORD PTR [ebp-0x18]
3001fbec:	mov    ecx,DWORD PTR [ebx+0xa0]
3001fbf2:	push   0x80000001
3001fbf7:	call   0x30010ba5
3001fbfc:	mov    eax,DWORD PTR [ebx]
3001fbfe:	mov    ecx,ebx
3001fc00:	call   DWORD PTR [eax+0x44]
3001fc03:	test   al,al
3001fc05:	je     0x3001fc49
3001fc07:	mov    eax,DWORD PTR [ebp-0x1c]
3001fc0a:	inc    eax
3001fc0b:	push   eax
3001fc0c:	mov    DWORD PTR [ebp-0x1c],eax
3001fc0f:	lea    eax,[ebp-0x10]
3001fc12:	push   0x3001fd50
3001fc17:	push   eax
3001fc18:	call   0x30005153
3001fc1d:	mov    esi,DWORD PTR [ebp-0x10]
3001fc20:	add    esp,0xc
3001fc23:	lea    edi,[ebx+0x9c]
3001fc29:	push   0x0
3001fc2b:	push   DWORD PTR [ebp-0x14]
3001fc2e:	mov    eax,DWORD PTR [edi]
3001fc30:	push   esi
3001fc31:	push   0x3
3001fc33:	mov    ecx,edi
3001fc35:	call   DWORD PTR [eax]
3001fc37:	mov    eax,DWORD PTR [edi]
3001fc39:	push   0x0
3001fc3b:	push   DWORD PTR [ebp-0x14]
3001fc3e:	mov    ecx,edi
3001fc40:	push   0x3001fd94
3001fc45:	push   0x3
3001fc47:	call   DWORD PTR [eax]
3001fc49:	cmp    DWORD PTR [ebp-0x24],0x0
3001fc4d:	push   ecx
3001fc4e:	setne  al
3001fc51:	movzx  eax,al
3001fc54:	push   eax
3001fc55:	push   DWORD PTR [ebp-0x14]
3001fc58:	push   ecx
3001fc59:	push   DWORD PTR [ebp-0x14]
3001fc5c:	mov    ecx,DWORD PTR [ebx+0xa0]
3001fc62:	push   0x80000001
3001fc67:	call   0x30010ba5
3001fc6c:	mov    eax,DWORD PTR [ebx]
3001fc6e:	mov    ecx,ebx
3001fc70:	call   DWORD PTR [eax+0x44]
3001fc73:	test   al,al
3001fc75:	je     0x3001fcb9
3001fc77:	mov    eax,DWORD PTR [ebp-0x1c]
3001fc7a:	inc    eax
3001fc7b:	push   eax
3001fc7c:	lea    eax,[ebp-0x10]
3001fc7f:	push   0x3001fd50
3001fc84:	push   eax
3001fc85:	call   0x30005153
3001fc8a:	mov    esi,DWORD PTR [ebp-0x10]
3001fc8d:	add    esp,0xc
3001fc90:	lea    edi,[ebx+0x9c]
3001fc96:	push   0x0
3001fc98:	push   DWORD PTR [ebx+0xa4]
3001fc9e:	mov    eax,DWORD PTR [edi]
3001fca0:	push   esi
3001fca1:	push   0x3
3001fca3:	mov    ecx,edi
3001fca5:	call   DWORD PTR [eax]
3001fca7:	mov    eax,DWORD PTR [edi]
3001fca9:	push   0x0
3001fcab:	push   DWORD PTR [ebp-0x14]
3001fcae:	mov    ecx,edi
3001fcb0:	push   0x3001fd94
3001fcb5:	push   0x3
3001fcb7:	call   DWORD PTR [eax]
3001fcb9:	cmp    DWORD PTR [ebp-0x20],0x0
3001fcbd:	push   ecx
3001fcbe:	setne  al
3001fcc1:	movzx  eax,al
3001fcc4:	push   eax
3001fcc5:	push   DWORD PTR [ebp-0x14]
3001fcc8:	push   ecx
3001fcc9:	push   DWORD PTR [ebx+0xa4]
3001fccf:	mov    ecx,DWORD PTR [ebx+0xa0]
3001fcd5:	push   0x80000001
3001fcda:	call   0x30010ba5
3001fcdf:	jmp    0x30010d0d
3001fce4:	nop
3001fce5:	nop
3001fce6:	nop
3001fce7:	nop
3001fce8:	inc    ecx
3001fce9:	add    BYTE PTR [eax+eax*1+0x64],ah
3001fced:	add    BYTE PTR [ecx+0x0],ch
3001fcf0:	outs   dx,BYTE PTR ds:[esi]
3001fcf1:	add    BYTE PTR [edi+0x0],ah
3001fcf4:	and    BYTE PTR [eax],al
3001fcf6:	add    BYTE PTR fs:[ebp+0x0],ah
3001fcfa:	je     0x3001fcfc
3001fcfc:	outs   dx,DWORD PTR ds:[esi]
3001fcfd:	add    BYTE PTR [ebp+0x0],dh
3001fd00:	jb     0x3001fd02
3001fd02:	and    BYTE PTR [eax],al
3001fd04:	jb     0x3001fd06
3001fd06:	jne    0x3001fd08
3001fd08:	ins    BYTE PTR es:[edi],dx
3001fd09:	add    BYTE PTR [ebp+0x0],ah
3001fd0c:	and    BYTE PTR [eax],al
3001fd0e:	and    eax,0x3a006400
3001fd13:	add    BYTE PTR [eax],ah
3001fd15:	add    BYTE PTR [esi+0x0],ah
3001fd18:	jb     0x3001fd1a
3001fd1a:	outs   dx,DWORD PTR ds:[esi]
3001fd1b:	add    BYTE PTR [ebp+0x0],ch
3001fd1e:	and    BYTE PTR [eax],al
3001fd20:	dec    eax
3001fd21:	add    BYTE PTR [ebx+0x0],cl
3001fd24:	dec    esp
3001fd25:	add    BYTE PTR [ebp+0x0],cl
3001fd28:	add    BYTE PTR [eax],al
3001fd2a:	nop
3001fd2b:	nop
3001fd2c:	inc    esp
3001fd2d:	add    BYTE PTR [ebp+0x0],ah
3001fd30:	je     0x3001fd32
3001fd32:	outs   dx,DWORD PTR ds:[esi]
3001fd33:	add    BYTE PTR [ebp+0x0],dh
3001fd36:	jb     0x3001fd38
3001fd38:	and    BYTE PTR [eax],al
3001fd3a:	je     0x3001fd3c
3001fd3c:	outs   dx,DWORD PTR ds:[esi]
3001fd3d:	add    BYTE PTR [eax],ah
3001fd3f:	add    BYTE PTR [eax+0x0],cl
3001fd42:	dec    ebx
3001fd43:	add    BYTE PTR [ebx+0x0],al
3001fd46:	push   ebp
3001fd47:	add    BYTE PTR [eax],al
3001fd49:	add    BYTE PTR [eax-0x6f6f6f70],dl
3001fd4f:	nop
3001fd50:	inc    ecx
3001fd51:	add    BYTE PTR [eax+eax*1+0x64],ah
3001fd55:	add    BYTE PTR [ecx+0x0],ch
3001fd58:	outs   dx,BYTE PTR ds:[esi]
3001fd59:	add    BYTE PTR [edi+0x0],ah
3001fd5c:	and    BYTE PTR [eax],al
3001fd5e:	add    BYTE PTR fs:[ebp+0x0],ah
3001fd62:	je     0x3001fd64
3001fd64:	outs   dx,DWORD PTR ds:[esi]
3001fd65:	add    BYTE PTR [ebp+0x0],dh
3001fd68:	jb     0x3001fd6a
3001fd6a:	and    BYTE PTR [eax],al
3001fd6c:	jb     0x3001fd6e
3001fd6e:	jne    0x3001fd70
3001fd70:	ins    BYTE PTR es:[edi],dx
3001fd71:	add    BYTE PTR [ebp+0x0],ah
3001fd74:	and    BYTE PTR [eax],al
3001fd76:	and    eax,0x3a006400
3001fd7b:	add    BYTE PTR [eax],ah
3001fd7d:	add    BYTE PTR [esi+0x0],ah
3001fd80:	jb     0x3001fd82
3001fd82:	outs   dx,DWORD PTR ds:[esi]
3001fd83:	add    BYTE PTR [ebp+0x0],ch
3001fd86:	and    BYTE PTR [eax],al
3001fd88:	dec    eax
3001fd89:	add    BYTE PTR [ebx+0x0],cl
3001fd8c:	inc    ebx
3001fd8d:	add    BYTE PTR [ebp+0x0],dl
3001fd90:	add    BYTE PTR [eax],al
3001fd92:	nop
3001fd93:	nop
3001fd94:	inc    esp
3001fd95:	add    BYTE PTR [ebp+0x0],ah
3001fd98:	je     0x3001fd9a
3001fd9a:	outs   dx,DWORD PTR ds:[esi]
3001fd9b:	add    BYTE PTR [ebp+0x0],dh
3001fd9e:	jb     0x3001fda0
3001fda0:	and    BYTE PTR [eax],al
3001fda2:	jb     0x3001fda4
3001fda4:	jne    0x3001fda6
3001fda6:	ins    BYTE PTR es:[edi],dx
3001fda7:	add    BYTE PTR [ebp+0x0],ah
3001fdaa:	and    BYTE PTR [eax],al
3001fdac:	je     0x3001fdae
3001fdae:	outs   dx,DWORD PTR ds:[esi]
3001fdaf:	add    BYTE PTR [eax],ah
3001fdb1:	add    BYTE PTR [eax+0x0],cl
3001fdb4:	dec    ebx
3001fdb5:	add    BYTE PTR [ebx+0x0],al
3001fdb8:	push   ebp
3001fdb9:	add    BYTE PTR [eax],al
3001fdbb:	add    BYTE PTR [ebp+0x9c8e],cl
3001fdc1:	add    BYTE PTR [eax-0x28],ch
3001fdc4:	std    
3001fdc5:	add    DWORD PTR [eax],esi
3001fdc7:	mov    eax,DWORD PTR [ecx]
3001fdc9:	push   0x3
3001fdcb:	call   DWORD PTR [eax+0x8]
3001fdce:	jmp    0x30016ec1
3001fdd3:	nop
3001fdd4:	nop
3001fdd5:	nop
3001fdd6:	nop
3001fdd7:	nop
3001fdd8:	inc    ecx
3001fdd9:	add    BYTE PTR [eax+0x0],dh
3001fddc:	jo     0x3001fdde
3001fdde:	dec    ecx
3001fddf:	add    BYTE PTR [eax+eax*1+0x20],ah
3001fde3:	add    BYTE PTR [ebx+0x0],dh
3001fde6:	je     0x3001fde8
3001fde8:	outs   dx,DWORD PTR ds:[esi]
3001fde9:	add    BYTE PTR [eax+0x0],dh
3001fdec:	jo     0x3001fdee
3001fdee:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
3001fdf3:	add    BYTE PTR [edx+0x0],dh
3001fdf6:	add    BYTE PTR gs:[edi+0x0],ah
3001fdfa:	imul   eax,DWORD PTR [eax],0x740073
3001fe00:	jb     0x3001fe02
3001fe02:	jns    0x3001fe04
3001fe04:	and    BYTE PTR [eax],al
3001fe06:	add    BYTE PTR fs:[ebp+0x0],ah
3001fe0a:	je     0x3001fe0c
3001fe0c:	outs   dx,DWORD PTR ds:[esi]
3001fe0d:	add    BYTE PTR [ebp+0x0],dh
3001fe10:	jb     0x3001fe12
3001fe12:	imul   eax,DWORD PTR [eax],0x67006e
3001fe18:	add    BYTE PTR [eax],al
3001fe1a:	lea    ecx,[esi+0x9c]
3001fe20:	push   0x3001fe48
3001fe25:	mov    eax,DWORD PTR [ecx]
3001fe27:	push   0x3
3001fe29:	call   DWORD PTR [eax+0x8]
3001fe2c:	jmp    0x3001051f
3001fe31:	lea    ecx,[esi+0x9c]
3001fe37:	push   0x3001fe90
3001fe3c:	mov    eax,DWORD PTR [ecx]
3001fe3e:	push   0x3
3001fe40:	call   DWORD PTR [eax+0x8]
3001fe43:	jmp    0x3001052e
3001fe48:	inc    ecx
3001fe49:	add    BYTE PTR [eax+0x0],dh
3001fe4c:	jo     0x3001fe4e
3001fe4e:	dec    ecx
3001fe4f:	add    BYTE PTR [eax+eax*1+0x20],ah
3001fe53:	add    BYTE PTR [ebx+0x0],dh
3001fe56:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
3001fe5b:	add    BYTE PTR [ecx+0x0],ch
3001fe5e:	outs   dx,BYTE PTR ds:[esi]
3001fe5f:	add    BYTE PTR [edi+0x0],ah
3001fe62:	and    BYTE PTR [eax],al
3001fe64:	jne    0x3001fe66
3001fe66:	jo     0x3001fe68
3001fe68:	and    BYTE PTR [eax],al
3001fe6a:	jb     0x3001fe6c
3001fe6c:	add    BYTE PTR gs:[edi+0x0],ah
3001fe70:	imul   eax,DWORD PTR [eax],0x740073
3001fe76:	jb     0x3001fe78
3001fe78:	jns    0x3001fe7a
3001fe7a:	and    BYTE PTR [eax],al
3001fe7c:	add    BYTE PTR fs:[ebp+0x0],ah
3001fe80:	je     0x3001fe82
3001fe82:	outs   dx,DWORD PTR ds:[esi]
3001fe83:	add    BYTE PTR [ebp+0x0],dh
3001fe86:	jb     0x3001fe88
3001fe88:	imul   eax,DWORD PTR [eax],0x67006e
3001fe8e:	add    BYTE PTR [eax],al
3001fe90:	inc    ecx
3001fe91:	add    BYTE PTR [eax+0x0],dh
3001fe94:	jo     0x3001fe96
3001fe96:	dec    ecx
3001fe97:	add    BYTE PTR [eax+eax*1+0x20],ah
3001fe9b:	add    BYTE PTR [ebx+0x0],dh
3001fe9e:	je     0x3001fea0
3001fea0:	popa   
3001fea1:	add    BYTE PTR [edx+0x0],dh
3001fea4:	je     0x3001fea6
3001fea6:	imul   eax,DWORD PTR [eax],0x67006e
3001feac:	and    BYTE PTR [eax],al
3001feae:	jb     0x3001feb0
3001feb0:	add    BYTE PTR gs:[edi+0x0],ah
3001feb4:	imul   eax,DWORD PTR [eax],0x740073
3001feba:	jb     0x3001febc
3001febc:	jns    0x3001febe
3001febe:	and    BYTE PTR [eax],al
3001fec0:	add    BYTE PTR fs:[ebp+0x0],ah
3001fec4:	je     0x3001fec6
3001fec6:	outs   dx,DWORD PTR ds:[esi]
3001fec7:	add    BYTE PTR [ebp+0x0],dh
3001feca:	jb     0x3001fecc
3001fecc:	imul   eax,DWORD PTR [eax],0x67006e
3001fed2:	add    BYTE PTR [eax],al
3001fed4:	push   0x80004005
3001fed9:	call   0x3002ae0b
3001fede:	int3   
3001fedf:	movzx  eax,ax
3001fee2:	or     eax,0x80070000
3001fee7:	jmp    0x300014bf
3001feec:	mov    eax,0x8000ffff
3001fef1:	jmp    0x3000765b
3001fef6:	mov    eax,0x80004003
3001fefb:	jmp    0x3000765a
3001ff00:	and    DWORD PTR [esi],0x0
3001ff03:	mov    eax,0x3f4
3001ff08:	test   eax,eax
3001ff0a:	jmp    0x30014550
3001ff0f:	mov    eax,0x8000ffff
3001ff14:	jmp    0x3000bcc2
3001ff19:	mov    eax,0x80004003
3001ff1e:	jmp    0x3000bcc2
3001ff23:	cmp    esi,0xea
3001ff29:	je     0x3000bc8b
3001ff2f:	jmp    0x3000bcd2
3001ff34:	cmp    DWORD PTR [ebp-0x210],0x7
3001ff3b:	je     0x3000bca2
3001ff41:	cmp    DWORD PTR [ebp-0x210],0x2
3001ff48:	je     0x3000bca2
3001ff4e:	mov    esi,0x3f4
3001ff53:	jmp    0x3001ff9f
3001ff55:	shr    eax,1
3001ff57:	dec    eax
3001ff58:	push   eax
3001ff59:	push   edi
3001ff5a:	call   DWORD PTR ds:0x300454f0
3001ff60:	mov    edi,eax
3001ff62:	test   edi,edi
3001ff64:	je     0x3001ffad
3001ff66:	lea    eax,[ebp-0x214]
3001ff6c:	push   eax
3001ff6d:	mov    eax,DWORD PTR [ebp-0x21c]
3001ff73:	push   edi
3001ff74:	push   0x0
3001ff76:	push   0x0
3001ff78:	push   DWORD PTR [ebp-0x218]
3001ff7e:	push   DWORD PTR [eax]
3001ff80:	call   DWORD PTR ds:0x3004500c
3001ff86:	mov    esi,eax
3001ff88:	test   esi,esi
3001ff8a:	jne    0x3001ff93
3001ff8c:	mov    DWORD PTR [ebx],edi
3001ff8e:	jmp    0x3000bcbf
3001ff93:	push   edi
3001ff94:	call   DWORD PTR ds:0x300454e8
3001ff9a:	jmp    0x3000bcd2
3001ff9f:	movzx  esi,si
3001ffa2:	or     esi,0x80070000
3001ffa8:	jmp    0x3000bcbf
3001ffad:	mov    eax,0x8007000e
3001ffb2:	jmp    0x3000bcc1
3001ffb7:	mov    eax,0x80004005
3001ffbc:	jmp    0x30008410
3001ffc1:	push   eax
3001ffc2:	call   DWORD PTR ds:0x30045014
3001ffc8:	jmp    0x300179b1
3001ffcd:	push   0x0
3001ffcf:	push   eax
3001ffd0:	call   DWORD PTR ds:0x30045018
3001ffd6:	jmp    0x300179bf
3001ffdb:	mov    eax,0x80070057
3001ffe0:	jmp    0x3000ee48
3001ffe5:	mov    eax,0x80004003
3001ffea:	jmp    0x300065a2
3001ffef:	mov    eax,0x8000ffff
3001fff4:	jmp    0x300065a2
3001fff9:	mov    eax,0x80004003
3001fffe:	jmp    0x3000673c
30020003:	push   0x4
30020005:	pop    ebx
30020006:	jmp    0x30006542
3002000b:	cmp    DWORD PTR ds:0x30044d1c,eax
30020011:	jne    0x3002002f
30020013:	mov    DWORD PTR ds:0x30044d1c,0x1
3002001d:	cmp    DWORD PTR [edi+0xc4],eax
30020023:	je     0x3002002f
30020025:	push   DWORD PTR [edi+0x6c]
30020028:	mov    ecx,edi
3002002a:	call   0x3002e0e3
3002002f:	or     ebx,0x4
30020032:	jmp    0x30006559
30020037:	mov    eax,DWORD PTR [edi+0xb8]
3002003d:	test   eax,eax
3002003f:	je     0x3002004c
30020041:	push   DWORD PTR [ebp+0x8]
30020044:	mov    ecx,edi
30020046:	push   eax
30020047:	call   0x3002e169
3002004c:	push   0x4
3002004e:	pop    ebx
3002004f:	jmp    0x30006559
30020054:	cmp    DWORD PTR [edi+0xcc],eax
3002005a:	je     0x300200be
3002005c:	cmp    DWORD PTR ds:0x30044d18,eax
30020062:	jne    0x300067e5
30020068:	push   DWORD PTR [edi+0x70]
3002006b:	mov    ecx,edi
3002006d:	mov    DWORD PTR ds:0x30044d18,0x1
30020077:	call   0x3002e0e3
3002007c:	jmp    0x300067e5
30020081:	lea    eax,[esp+0x14]
30020085:	push   eax
30020086:	push   DWORD PTR [ebp+0x8]
30020089:	mov    ecx,edi
3002008b:	call   0x3002de00
30020090:	test   eax,eax
30020092:	jne    0x300200e3
30020094:	cmp    DWORD PTR [edi+0xc4],0x0
3002009b:	mov    eax,DWORD PTR [edi+0x80]
300200a1:	je     0x300200b2
300200a3:	test   eax,eax
300200a5:	je     0x300200b2
300200a7:	push   DWORD PTR [ebp+0x8]
300200aa:	mov    ecx,edi
300200ac:	push   eax
300200ad:	call   0x3002e169
300200b2:	mov    esi,DWORD PTR [esp+0x14]
300200b6:	or     ebx,0x21
300200b9:	jmp    0x3000684d
300200be:	cmp    DWORD PTR ds:0x30044d18,eax
300200c4:	jne    0x30006556
300200ca:	push   DWORD PTR [edi+0x74]
300200cd:	mov    ecx,edi
300200cf:	mov    DWORD PTR ds:0x30044d18,0x1
300200d9:	call   0x3002e0e3
300200de:	jmp    0x30006556
300200e3:	push   DWORD PTR [ebp+0x8]
300200e6:	mov    esi,DWORD PTR [esp+0x18]
300200ea:	mov    eax,DWORD PTR [edi]
300200ec:	push   esi
300200ed:	mov    ecx,edi
300200ef:	call   DWORD PTR [eax+0x34]
300200f2:	test   eax,eax
300200f4:	jne    0x30006837
300200fa:	push   0x2
300200fc:	push   DWORD PTR [ebp+0x8]
300200ff:	mov    ecx,edi
30020101:	call   0x3002e2e4
30020106:	mov    eax,DWORD PTR [edi+0xb8]
3002010c:	test   eax,eax
3002010e:	je     0x3002011b
30020110:	push   DWORD PTR [ebp+0x8]
30020113:	mov    ecx,edi
30020115:	push   eax
30020116:	call   0x3002e169
3002011b:	or     ebx,0x4
3002011e:	jmp    0x3000684d
30020123:	test   eax,eax
30020125:	je     0x3000684a
3002012b:	push   DWORD PTR [ebp+0x8]
3002012e:	mov    ecx,edi
30020130:	push   eax
30020131:	call   0x3002e169
30020136:	jmp    0x3000684a
3002013b:	mov    eax,0x80004003
30020140:	jmp    0x30006697
30020145:	mov    edi,0x8007000e
3002014a:	jmp    0x30006684
3002014f:	push   ebx
30020150:	push   0x3002a354
30020155:	lea    ecx,[ebp-0x10]
30020158:	call   0x30007605
3002015d:	jmp    0x30006684
30020162:	xor    al,al
30020164:	jmp    0x30010f70
30020169:	push   0x30020190
3002016e:	push   0x30018514
30020173:	push   0x1
30020175:	call   0x300046d1
3002017a:	xor    al,al
3002017c:	jmp    0x30011033
30020181:	call   DWORD PTR ds:0x300454e8
30020187:	jmp    0x3002017a
30020189:	nop
3002018a:	nop
3002018b:	nop
3002018c:	nop
3002018d:	nop
3002018e:	nop
3002018f:	nop
30020190:	inc    ecx
30020191:	add    BYTE PTR [eax],ah
30020193:	add    BYTE PTR [esi+0x0],ah
30020196:	popa   
30020197:	add    BYTE PTR [ecx+0x0],ch
3002019a:	ins    BYTE PTR es:[edi],dx
3002019b:	add    BYTE PTR [ebp+0x0],dh
3002019e:	jb     0x300201a0
300201a0:	add    BYTE PTR gs:[eax],ah
300201a3:	add    BYTE PTR [eax+0x0],ch
300201a6:	add    BYTE PTR gs:[edx+0x0],dh
300201aa:	add    BYTE PTR gs:[eax],ah
300201ad:	add    BYTE PTR [ebp+0x0],dh
300201b0:	jae    0x300201b2
300201b2:	jne    0x300201b4
300201b4:	popa   
300201b5:	add    BYTE PTR [eax+eax*1+0x6c],ch
300201b9:	add    BYTE PTR [ecx+0x0],bh
300201bc:	and    BYTE PTR [eax],al
300201be:	ins    DWORD PTR es:[edi],dx
300201bf:	add    BYTE PTR [ebp+0x0],ah
300201c2:	popa   
300201c3:	add    BYTE PTR [esi+0x0],ch
300201c6:	jae    0x300201c8
300201c8:	and    BYTE PTR [eax],al
300201ca:	je     0x300201cc
300201cc:	push   0x74006100
300201d1:	add    BYTE PTR [eax],ah
300201d3:	add    BYTE PTR [eax+eax*1+0x68],dh
300201d7:	add    BYTE PTR [ebp+0x0],ah
300201da:	and    BYTE PTR [eax],al
300201dc:	arpl   WORD PTR [eax],ax
300201de:	outs   dx,DWORD PTR ds:[esi]
300201df:	add    BYTE PTR [ebp+0x0],ch
300201e2:	ins    DWORD PTR es:[edi],dx
300201e3:	add    BYTE PTR [edi+0x0],ch
300201e6:	outs   dx,BYTE PTR ds:[esi]
300201e7:	add    BYTE PTR [eax],ah
300201e9:	add    BYTE PTR [ecx+0x0],ah
300201ec:	jo     0x300201ee
300201ee:	jo     0x300201f0
300201f0:	add    BYTE PTR fs:[ecx+0x0],ah
300201f4:	je     0x300201f6
300201f6:	popa   
300201f7:	add    BYTE PTR [eax],ah
300201f9:	add    BYTE PTR [esi+0x0],ah
300201fc:	outs   dx,DWORD PTR ds:[esi]
300201fd:	add    BYTE PTR [eax+eax*1+0x64],ch
30020201:	add    BYTE PTR [ebp+0x0],ah
30020204:	jb     0x30020206
30020206:	and    BYTE PTR [eax],al
30020208:	arpl   WORD PTR [eax],ax
3002020a:	outs   dx,DWORD PTR ds:[esi]
3002020b:	add    BYTE PTR [ebp+0x0],dh
3002020e:	ins    BYTE PTR es:[edi],dx
3002020f:	add    BYTE PTR [eax+eax*1+0x20],ah
30020213:	add    BYTE PTR [esi+0x0],ch
30020216:	outs   dx,DWORD PTR ds:[esi]
30020217:	add    BYTE PTR [eax+eax*1+0x20],dh
3002021b:	add    BYTE PTR [edx+0x0],ah
3002021e:	add    BYTE PTR gs:[eax],ah
30020221:	add    BYTE PTR [ebx+0x0],ah
30020224:	jb     0x30020226
30020226:	add    BYTE PTR gs:[ecx+0x0],ah
3002022a:	je     0x3002022c
3002022c:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
30020231:	add    BYTE PTR [eax],ah
30020233:	add    BYTE PTR [eax+eax*1+0x68],dl
30020237:	add    BYTE PTR [ecx+0x0],ch
3002023a:	jae    0x3002023c
3002023c:	and    BYTE PTR [eax],al
3002023e:	imul   eax,DWORD PTR [eax],0x200073
30020244:	jne    0x30020246
30020246:	jae    0x30020248
30020248:	jne    0x3002024a
3002024a:	popa   
3002024b:	add    BYTE PTR [eax+eax*1+0x6c],ch
3002024f:	add    BYTE PTR [ecx+0x0],bh
30020252:	and    BYTE PTR [eax],al
30020254:	bound  eax,QWORD PTR [eax]
30020256:	add    BYTE PTR gs:[ebx+0x0],ah
3002025a:	popa   
3002025b:	add    BYTE PTR [ebp+0x0],dh
3002025e:	jae    0x30020260
30020260:	add    BYTE PTR gs:[eax],ah
30020263:	add    BYTE PTR [edx],ah
30020265:	add    BYTE PTR [eax+eax*1+0x65],ah
30020269:	add    BYTE PTR [esi+0x0],dh
3002026c:	add    BYTE PTR gs:[esi+0x0],ch
30020270:	jbe    0x30020272
30020272:	and    BYTE PTR [eax],al
30020274:	das    
30020275:	add    BYTE PTR [ebx+0x0],dh
30020278:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
3002027d:	add    BYTE PTR [eax+0x0],dh
30020280:	and    al,BYTE PTR [eax]
30020282:	and    BYTE PTR [eax],al
30020284:	ja     0x30020286
30020286:	popa   
30020287:	add    BYTE PTR [ebx+0x0],dh
3002028a:	and    BYTE PTR [eax],al
3002028c:	outs   dx,BYTE PTR ds:[esi]
3002028d:	add    BYTE PTR [edi+0x0],ch
30020290:	je     0x30020292
30020292:	and    BYTE PTR [eax],al
30020294:	jb     0x30020296
30020296:	jne    0x30020298
30020298:	outs   dx,BYTE PTR ds:[esi]
30020299:	add    BYTE PTR [eax],ah
3002029b:	add    BYTE PTR [ecx+0x0],ah
3002029e:	jae    0x300202a0
300202a0:	and    BYTE PTR [eax],al
300202a2:	popa   
300202a3:	add    BYTE PTR [eax+eax*1+0x6d],ah
300202a7:	add    BYTE PTR [ecx+0x0],ch
300202aa:	outs   dx,BYTE PTR ds:[esi]
300202ab:	add    BYTE PTR [ecx+0x0],ch
300202ae:	jae    0x300202b0
300202b0:	je     0x300202b2
300202b2:	jb     0x300202b4
300202b4:	popa   
300202b5:	add    BYTE PTR [eax+eax*1+0x6f],dh
300202b9:	add    BYTE PTR [edx+0x0],dh
300202bc:	add    BYTE PTR cs:[eax],al
300202bf:	add    bh,bh
300202c1:	call   DWORD PTR ss:0x30045504
300202c8:	test   eax,eax
300202ca:	js     0x3000712f
300202d0:	push   DWORD PTR [esi]
300202d2:	call   DWORD PTR ds:0x30045508
300202d8:	test   eax,eax
300202da:	js     0x3000712f
300202e0:	and    DWORD PTR [esi],0x0
300202e3:	jmp    0x3000712f
300202e8:	mov    eax,0x80004005
300202ed:	jmp    0x3000711e
300202f2:	mov    eax,0x8007000e
300202f7:	jmp    0x3000711e
300202fc:	push   DWORD PTR [eax-0xc]
300202ff:	call   0x300041f1
30020304:	jmp    0x3001651c
30020309:	push   0x80004005
3002030e:	call   0x3002ae0b
30020313:	int3   
30020314:	push   ecx
30020315:	lea    ecx,[ebp-0x30]
30020318:	mov    DWORD PTR [ebp-0x30],edi
3002031b:	mov    DWORD PTR [ebp-0x2c],edi
3002031e:	call   0x3002fe59
30020323:	push   0x2
30020325:	lea    eax,[ebp-0x30]
30020328:	pop    ecx
30020329:	jmp    0x300085de
3002032e:	mov    ecx,DWORD PTR [ebp-0x2c]
30020331:	and    eax,0xfffffffd
30020334:	mov    DWORD PTR [ebp-0x18],eax
30020337:	mov    DWORD PTR [ebp-0x24],eax
3002033a:	test   ecx,ecx
3002033c:	je     0x300085f8
30020342:	call   0x30007e20
30020347:	mov    eax,DWORD PTR [ebp-0x18]
3002034a:	jmp    0x300085f8
3002034f:	call   0x30007e20
30020354:	jmp    0x3000860b
30020359:	mov    eax,DWORD PTR [esi]
3002035b:	lea    ecx,[ebp-0x1c]
3002035e:	push   ecx
3002035f:	mov    ecx,esi
30020361:	call   DWORD PTR [eax+0x44]
30020364:	test   eax,eax
30020366:	jns    0x30020372
30020368:	mov    ebx,0x80004001
3002036d:	jmp    0x300086b0
30020372:	mov    eax,DWORD PTR [ebp-0x1c]
30020375:	jmp    0x30008639
3002037a:	mov    ecx,DWORD PTR [ebp-0x28]
3002037d:	lea    edx,[ebp-0x20]
30020380:	mov    eax,DWORD PTR [ecx]
30020382:	push   edx
30020383:	call   DWORD PTR [eax+0x48]
30020386:	test   eax,eax
30020388:	js     0x300086d4
3002038e:	mov    eax,DWORD PTR [ebp-0x20]
30020391:	jmp    0x3000868c
30020396:	mov    eax,0x80004003
3002039b:	jmp    0x300081ff
300203a0:	push   0x80004005
300203a5:	call   0x3002ae0b
300203aa:	int3   
300203ab:	and    DWORD PTR [ebx],0x0
300203ae:	jmp    0x300082c0
300203b3:	call   0x30007e20
300203b8:	jmp    0x3000815d
300203bd:	mov    eax,0x80004003
300203c2:	jmp    0x30008984
300203c7:	mov    eax,0x300203cd
300203cc:	ret    
300203cd:	mov    ebx,DWORD PTR [ebp-0x14]
300203d0:	mov    esi,DWORD PTR [ebp-0x18]
300203d3:	jmp    0x3000897d
300203d8:	mov    eax,DWORD PTR [esi]
300203da:	push   0x1
300203dc:	mov    ecx,esi
300203de:	call   DWORD PTR [eax+0x10]
300203e1:	xor    esi,esi
300203e3:	jmp    0x3000897d
300203e8:	xor    eax,eax
300203ea:	pop    esi
300203eb:	ret    
300203ec:	push   0x8007000e
300203f1:	call   0x3002ae0b
300203f6:	int3   
300203f7:	mov    eax,0x80004003
300203fc:	jmp    0x300081e2
30020401:	mov    eax,0x80070057
30020406:	jmp    0x3000ca64
3002040b:	push   DWORD PTR [eax+esi*4]
3002040e:	call   DWORD PTR ds:0x300454e8
30020414:	jmp    0x3000ca47
30020419:	mov    eax,0x8007000e
3002041e:	jmp    0x3000ca63
30020423:	int3   
30020424:	push   0x8007000e
30020429:	call   0x3002ae0b
3002042e:	int3   
3002042f:	mov    DWORD PTR [esi],0xbb8
30020435:	push   0x300204c4
3002043a:	lea    ecx,[ebp+0x8]
3002043d:	mov    DWORD PTR [edi],0x80
30020443:	call   0x3000437e
30020448:	and    DWORD PTR [ebp-0x4],0x0
3002044c:	lea    ecx,[ebp+0x8]
3002044f:	call   0x30030a9d
30020454:	mov    ecx,DWORD PTR [ebp+0x8]
30020457:	add    ecx,0xfffffff0
3002045a:	mov    esi,eax
3002045c:	call   0x30004017
30020461:	test   esi,esi
30020463:	je     0x30019b48
30020469:	or     DWORD PTR [edi],0x8
3002046c:	jmp    0x30019b48
30020471:	mov    DWORD PTR [esi],0x3e8
30020477:	and    DWORD PTR [edi],0x0
3002047a:	push   0x300204d8
3002047f:	lea    ecx,[ebp-0x10]
30020482:	call   0x3000437e
30020487:	lea    ecx,[ebp-0x10]
3002048a:	mov    DWORD PTR [ebp-0x4],0x1
30020491:	call   0x30030a9d
30020496:	mov    ecx,DWORD PTR [ebp-0x10]
30020499:	add    ecx,0xfffffff0
3002049c:	mov    esi,eax
3002049e:	call   0x30004017
300204a3:	test   esi,esi
300204a5:	je     0x300204ad
300204a7:	or     DWORD PTR [edi],0x2000
300204ad:	cmp    DWORD PTR [edi],0x0
300204b0:	jne    0x30019b48
300204b6:	mov    DWORD PTR [edi],0x10
300204bc:	jmp    0x30019b48
300204c1:	nop
300204c2:	nop
300204c3:	nop
300204c4:	push   esi
300204c5:	add    BYTE PTR [ebx+0x0],dl
300204c8:	push   esp
300204c9:	add    BYTE PTR [ecx+0x0],al
300204cc:	inc    ebx
300204cd:	add    BYTE PTR [edi+0x0],ch
300204d0:	jb     0x300204d2
300204d2:	add    BYTE PTR gs:[eax],al
300204d5:	add    BYTE PTR [eax+0x53005390],dl
300204db:	add    BYTE PTR [eax+eax*1+0x54],al
300204df:	add    BYTE PTR [eax],al
300204e1:	add    BYTE PTR [ecx+0x3004306c],bh
300204e7:	mov    eax,ds:0x3004306c
300204ec:	jmp    DWORD PTR [eax+0x10]
300204ef:	xor    ecx,ecx
300204f1:	test   esi,esi
300204f3:	jle    0x30020507
300204f5:	mov    eax,DWORD PTR [ebp-0x24]
300204f8:	mov    ax,WORD PTR [eax+ecx*2]
300204fc:	mov    WORD PTR [edx],ax
300204ff:	add    edx,0x2
30020502:	inc    ecx
30020503:	cmp    ecx,esi
30020505:	jl     0x300204f5
30020507:	dec    edi
30020508:	je     0x30019580
3002050e:	jmp    0x300204ef
30020510:	lea    ecx,[ebp-0x24]
30020513:	call   0x30030faa
30020518:	jmp    0x30019596
3002051d:	push   eax
3002051e:	mov    ecx,esi
30020520:	call   0x30030fb4
30020525:	jmp    0x300195e8
3002052a:	push   0x80004005
3002052f:	jmp    0x30020536
30020531:	push   0x80070057
30020536:	call   0x3002ae0b
3002053b:	int3   
3002053c:	push   eax
3002053d:	call   0x3002ae0b
30020542:	int3   
30020543:	push   DWORD PTR [ebp+0x8]
30020546:	push   DWORD PTR [esi]
30020548:	call   0x30030fdd
3002054d:	jmp    0x3001d8db
30020552:	push   DWORD PTR [ebp+0x8]
30020555:	push   DWORD PTR [esi]
30020557:	call   DWORD PTR ds:0x3004505c
3002055d:	jmp    0x3001d8db
30020562:	push   ecx
30020563:	push   esi
30020564:	push   DWORD PTR [ebp+0x14]
30020567:	push   ecx
30020568:	push   ecx
30020569:	push   DWORD PTR [ebp+0xc]
3002056c:	push   DWORD PTR [ebp+0x8]
3002056f:	call   0x30031048
30020574:	jmp    0x3000956b
30020579:	xor    eax,eax
3002057b:	mov    WORD PTR [ebx+edi*2],ax
3002057f:	jmp    0x300116de
30020584:	mov    ecx,DWORD PTR [ebp+0x8]
30020587:	xor    eax,eax
30020589:	mov    WORD PTR [ecx],ax
3002058c:	jmp    0x300116e0
30020591:	mov    eax,0x8000ffff
30020596:	jmp    0x3000ed61
3002059b:	mov    eax,0x8007000e
300205a0:	jmp    0x3000ed61
300205a5:	push   0x300205d8
300205aa:	push   0x30018514
300205af:	push   0x1
300205b1:	call   0x300046d1
300205b6:	call   DWORD PTR ds:0x30045160
300205bc:	test   eax,eax
300205be:	jle    0x30011628
300205c4:	movzx  eax,ax
300205c7:	or     eax,0x80070000
300205cc:	jmp    0x30011628
300205d1:	nop
300205d2:	nop
300205d3:	nop
300205d4:	nop
300205d5:	nop
300205d6:	nop
300205d7:	nop
300205d8:	inc    ebx
300205d9:	add    BYTE PTR [edi+0x0],ch
300205dc:	jne    0x300205de
300205de:	ins    BYTE PTR es:[edi],dx
300205df:	add    BYTE PTR [eax+eax*1+0x20],ah
300205e3:	add    BYTE PTR [esi+0x0],ch
300205e6:	outs   dx,DWORD PTR ds:[esi]
300205e7:	add    BYTE PTR [eax+eax*1+0x20],dh
300205eb:	add    BYTE PTR [eax+eax*1+0x6f],ch
300205ef:	add    BYTE PTR [ebx+0x0],ah
300205f2:	popa   
300205f3:	add    BYTE PTR [eax+eax*1+0x65],dh
300205f7:	add    BYTE PTR [eax],ah
300205f9:	add    BYTE PTR [ecx+0x0],ah
300205fc:	jo     0x300205fe
300205fe:	jo     0x30020600
30020600:	jb     0x30020602
30020602:	outs   dx,DWORD PTR ds:[esi]
30020603:	add    BYTE PTR [eax+0x0],dh
30020606:	jb     0x30020608
30020608:	imul   eax,DWORD PTR [eax],0x740061
3002060e:	add    BYTE PTR gs:[eax],ah
30020611:	add    BYTE PTR [ebx+0x0],al
30020614:	dec    esp
30020615:	add    BYTE PTR [edx+0x0],dl
30020618:	and    BYTE PTR [eax],al
3002061a:	jbe    0x3002061c
3002061c:	add    BYTE PTR gs:[edx+0x0],dh
30020620:	jae    0x30020622
30020622:	imul   eax,DWORD PTR [eax],0x6e006f
30020628:	add    BYTE PTR cs:[eax],ah
3002062b:	add    BYTE PTR [eax+eax*1+0x72],dl
3002062f:	add    BYTE PTR [ecx+0x0],bh
30020632:	and    BYTE PTR [eax],al
30020634:	jb     0x30020636
30020636:	add    BYTE PTR gs:[edx+0x0],ah
3002063a:	outs   dx,DWORD PTR ds:[esi]
3002063b:	add    BYTE PTR [edi+0x0],ch
3002063e:	je     0x30020640
30020640:	imul   eax,DWORD PTR [eax],0x67006e
30020646:	sub    al,0x0
30020648:	and    BYTE PTR [eax],al
3002064a:	jb     0x3002064c
3002064c:	add    BYTE PTR gs:[ecx+0x0],ch
30020650:	outs   dx,BYTE PTR ds:[esi]
30020651:	add    BYTE PTR [ebx+0x0],dh
30020654:	je     0x30020656
30020656:	popa   
30020657:	add    BYTE PTR [eax+eax*1+0x6c],ch
3002065b:	add    BYTE PTR [ecx+0x0],ch
3002065e:	outs   dx,BYTE PTR ds:[esi]
3002065f:	add    BYTE PTR [edi+0x0],ah
30020662:	add    BYTE PTR cs:[eax],al
30020665:	add    BYTE PTR [ebx+0x8bec45],cl
3002066b:	xor    ecx,ecx
3002066d:	cmp    DWORD PTR [eax],0xc06d007e
30020673:	sete   cl
30020676:	mov    eax,ecx
30020678:	ret    
30020679:	mov    esp,DWORD PTR [ebp-0x18]
3002067c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30020683:	xor    eax,eax
30020685:	inc    eax
30020686:	jmp    0x30011678
3002068b:	inc    eax
3002068c:	jmp    0x30017486
30020691:	xor    eax,eax
30020693:	mov    DWORD PTR [ebp-0x10],eax
30020696:	jmp    0x30017458
3002069b:	mov    eax,0x80004003
300206a0:	jmp    0x3000d855
300206a5:	mov    eax,DWORD PTR [ecx]
300206a7:	push   ecx
300206a8:	call   DWORD PTR [eax+0x8]
300206ab:	jmp    0x300177dd
300206b0:	xor    eax,eax
300206b2:	mov    DWORD PTR [ebp+0x10],eax
300206b5:	jmp    0x30006a58
300206ba:	xor    esi,esi
300206bc:	inc    esi
300206bd:	jmp    0x3000e464
300206c2:	cmp    DWORD PTR [ebp-0x10],0x4
300206c6:	jne    0x3000e441
300206cc:	mov    ecx,DWORD PTR [ebp+0x18]
300206cf:	mov    eax,DWORD PTR [ebp-0x1c]
300206d2:	mov    DWORD PTR [ecx],eax
300206d4:	jmp    0x3000e44a
300206d9:	and    DWORD PTR [ebx],0x0
300206dc:	jmp    0x3000d976
300206e1:	mov    BYTE PTR [ebp-0x4],0x1
300206e5:	mov    eax,DWORD PTR [ebp-0x414]
300206eb:	test   eax,eax
300206ed:	je     0x3000da30
300206f3:	mov    ecx,DWORD PTR [eax]
300206f5:	push   eax
300206f6:	call   DWORD PTR [ecx+0x8]
300206f9:	jmp    0x3000da30
300206fe:	mov    eax,0x80004003
30020703:	jmp    0x30006bdf
30020708:	mov    eax,DWORD PTR [ebp-0x10]
3002070b:	push   ebx
3002070c:	mov    ecx,DWORD PTR [eax]
3002070e:	push   0x30015d48
30020713:	push   eax
30020714:	call   DWORD PTR [ecx]
30020716:	mov    esi,eax
30020718:	jmp    0x3000dafa
3002071d:	mov    eax,DWORD PTR [ecx]
3002071f:	push   ecx
30020720:	call   DWORD PTR [eax+0x8]
30020723:	jmp    0x3000db05
30020728:	mov    edi,0x80004003
3002072d:	jmp    0x3000dc2b
30020732:	mov    esi,DWORD PTR ds:0x30045240
30020738:	push   0x30020750
3002073d:	call   esi
3002073f:	push   0x30020820
30020744:	call   esi
30020746:	jmp    0x3000dc2b
3002074b:	nop
3002074c:	nop
3002074d:	nop
3002074e:	nop
3002074f:	nop
30020750:	inc    esi
30020751:	add    BYTE PTR [ecx+0x0],ah
30020754:	imul   eax,DWORD PTR [eax],0x65006c
3002075a:	add    BYTE PTR fs:[eax],ah
3002075d:	add    BYTE PTR [eax+eax*1+0x6f],dh
30020761:	add    BYTE PTR [eax],ah
30020763:	add    BYTE PTR [ebx+0x0],dh
30020766:	je     0x30020768
30020768:	popa   
30020769:	add    BYTE PTR [edx+0x0],dh
3002076c:	je     0x3002076e
3002076e:	and    BYTE PTR [eax],al
30020770:	inc    ebx
30020771:	add    BYTE PTR [eax+eax*1+0x52],cl
30020775:	add    BYTE PTR [esi],ch
30020777:	add    BYTE PTR [eax],ah
30020779:	add    BYTE PTR [ecx+0x0],al
3002077c:	and    BYTE PTR [eax],al
3002077e:	ins    BYTE PTR es:[edi],dx
3002077f:	add    BYTE PTR [ecx+0x0],ch
30020782:	imul   eax,DWORD PTR [eax],0x65
30020785:	add    BYTE PTR [eax+eax*1+0x79],ch
30020789:	add    BYTE PTR [eax],ah
3002078b:	add    BYTE PTR [ebx+0x0],ah
3002078e:	popa   
3002078f:	add    BYTE PTR [ebp+0x0],dh
30020792:	jae    0x30020794
30020794:	add    BYTE PTR gs:[eax],ah
30020797:	add    BYTE PTR [ebx+0x0],ah
3002079a:	popa   
3002079b:	add    BYTE PTR [esi+0x0],ch
3002079e:	and    BYTE PTR [eax],al
300207a0:	bound  eax,QWORD PTR [eax]
300207a2:	add    BYTE PTR gs:[eax],ah
300207a5:	add    BYTE PTR [ebp+0x0],ch
300207a8:	imul   eax,DWORD PTR [eax],0x730073
300207ae:	imul   eax,DWORD PTR [eax],0x67006e
300207b4:	and    BYTE PTR [eax],al
300207b6:	inc    ecx
300207b7:	add    BYTE PTR [eax+0x0],dh
300207ba:	jo     0x300207bc
300207bc:	inc    esp
300207bd:	add    BYTE PTR [edi+0x0],ch
300207c0:	ins    DWORD PTR es:[edi],dx
300207c1:	add    BYTE PTR [ecx+0x0],ah
300207c4:	imul   eax,DWORD PTR [eax],0x4d006e
300207ca:	popa   
300207cb:	add    BYTE PTR [esi+0x0],ch
300207ce:	popa   
300207cf:	add    BYTE PTR [edi+0x0],ah
300207d2:	add    BYTE PTR gs:[edx+0x0],dh
300207d6:	and    BYTE PTR [eax],al
300207d8:	je     0x300207da
300207da:	jns    0x300207dc
300207dc:	jo     0x300207de
300207de:	add    BYTE PTR gs:[eax],ah
300207e1:	add    BYTE PTR [edi+0x0],ch
300207e4:	jb     0x300207e6
300207e6:	and    BYTE PTR [eax],al
300207e8:	popa   
300207e9:	add    BYTE PTR [ebx+0x0],dh
300207ec:	jae    0x300207ee
300207ee:	add    BYTE PTR gs:[ebp+0x0],ch
300207f2:	bound  eax,QWORD PTR [eax]
300207f4:	ins    BYTE PTR es:[edi],dx
300207f5:	add    BYTE PTR [ecx+0x0],bh
300207f8:	and    BYTE PTR [eax],al
300207fa:	arpl   WORD PTR [eax],ax
300207fc:	outs   dx,DWORD PTR ds:[esi]
300207fd:	add    BYTE PTR [esi+0x0],ch
30020800:	je     0x30020802
30020802:	popa   
30020803:	add    BYTE PTR [ecx+0x0],ch
30020806:	outs   dx,BYTE PTR ds:[esi]
30020807:	add    BYTE PTR [ecx+0x0],ch
3002080a:	outs   dx,BYTE PTR ds:[esi]
3002080b:	add    BYTE PTR [edi+0x0],ah
3002080e:	and    BYTE PTR [eax],al
30020810:	imul   eax,DWORD PTR [eax],0x2e0074
30020816:	or     al,BYTE PTR [eax]
30020818:	add    BYTE PTR [eax],al
3002081a:	nop
3002081b:	nop
3002081c:	nop
3002081d:	nop
3002081e:	nop
3002081f:	nop
30020820:	dec    esp
30020821:	add    BYTE PTR [edi+0x0],ch
30020824:	outs   dx,DWORD PTR ds:[esi]
30020825:	add    BYTE PTR [ebx+0x0],ch
30020828:	and    BYTE PTR [eax],al
3002082a:	jne    0x3002082c
3002082c:	outs   dx,BYTE PTR ds:[esi]
3002082d:	add    BYTE PTR [eax+eax*1+0x65],ah
30020831:	add    BYTE PTR [edx+0x0],dh
30020834:	and    BYTE PTR [eax],al
30020836:	dec    eax
30020837:	add    BYTE PTR [ebx+0x0],cl
3002083a:	dec    esp
3002083b:	add    BYTE PTR [ebp+0x0],cl
3002083e:	and    BYTE PTR [eax],al
30020840:	pop    esp
30020841:	add    BYTE PTR [eax+eax*1],bh
30020844:	inc    ecx
30020845:	add    BYTE PTR [eax+0x0],dl
30020848:	push   eax
30020849:	add    BYTE PTR [eax+eax*1+0x49],al
3002084d:	add    BYTE PTR [eax+eax*1+0x52],al
30020851:	add    BYTE PTR [edi+0x0],cl
30020854:	dec    edi
30020855:	add    BYTE PTR [eax+eax*1+0x3e],dl
30020859:	add    BYTE PTR [eax+eax*1+0x43],bl
3002085d:	add    BYTE PTR [eax+eax*1+0x72],ch
30020861:	add    BYTE PTR [eax+0x0],cl
30020864:	outs   dx,DWORD PTR ds:[esi]
30020865:	add    BYTE PTR [ebx+0x0],dh
30020868:	je     0x3002086a
3002086a:	and    BYTE PTR [eax],al
3002086c:	jb     0x3002086e
3002086e:	add    BYTE PTR gs:[edi+0x0],ah
30020872:	imul   eax,DWORD PTR [eax],0x740073
30020878:	jb     0x3002087a
3002087a:	jns    0x3002087c
3002087c:	and    BYTE PTR [eax],al
3002087e:	popa   
3002087f:	add    BYTE PTR [esi+0x0],ch
30020882:	add    BYTE PTR fs:[eax],ah
30020885:	add    BYTE PTR [ebp+0x0],ah
30020888:	outs   dx,BYTE PTR ds:[esi]
30020889:	add    BYTE PTR [ebx+0x0],dh
3002088c:	jne    0x3002088e
3002088e:	jb     0x30020890
30020890:	add    BYTE PTR gs:[eax],ah
30020893:	add    BYTE PTR [eax+eax*1+0x68],dh
30020897:	add    BYTE PTR [ecx+0x0],ah
3002089a:	je     0x3002089c
3002089c:	and    BYTE PTR [eax],al
3002089e:	popa   
3002089f:	add    BYTE PTR [ebx+0x0],dh
300208a2:	jae    0x300208a4
300208a4:	add    BYTE PTR gs:[ebp+0x0],ch
300208a8:	bound  eax,QWORD PTR [eax]
300208aa:	ins    BYTE PTR es:[edi],dx
300208ab:	add    BYTE PTR [ecx+0x0],bh
300208ae:	and    BYTE PTR [eax],al
300208b0:	popa   
300208b1:	add    BYTE PTR [esi+0x0],ch
300208b4:	add    BYTE PTR fs:[eax],ah
300208b7:	add    BYTE PTR [eax+eax*1+0x68],dh
300208bb:	add    BYTE PTR [ebp+0x0],ah
300208be:	and    BYTE PTR [eax],al
300208c0:	arpl   WORD PTR [eax],ax
300208c2:	ins    BYTE PTR es:[edi],dx
300208c3:	add    BYTE PTR [ecx+0x0],ah
300208c6:	jae    0x300208c8
300208c8:	jae    0x300208ca
300208ca:	and    BYTE PTR [eax],al
300208cc:	outs   dx,BYTE PTR ds:[esi]
300208cd:	add    BYTE PTR [ecx+0x0],ah
300208d0:	ins    DWORD PTR es:[edi],dx
300208d1:	add    BYTE PTR [ebp+0x0],ah
300208d4:	and    BYTE PTR [eax],al
300208d6:	add    BYTE PTR gs:[eax+0x0],bh
300208da:	imul   eax,DWORD PTR [eax],0x740073
300208e0:	add    BYTE PTR cs:[edx],cl
300208e3:	add    BYTE PTR [eax],al
300208e5:	add    BYTE PTR [ebx+0x2fe90023],al
300208eb:	fdivr  st,st(6)
300208ed:	dec    DWORD PTR [ebx+0x51ff5008]
300208f3:	or     cl,ch
300208f5:	ss fsin 
300208f8:	inc    DWORD PTR [ebx+0x4ce90023]
300208fe:	fsin   
30020900:	inc    DWORD PTR [ebp+0x55880fff]
30020906:	fsin   
30020908:	dec    DWORD PTR [ecx-0x26b116d0]
3002090e:	(bad)  
3002090f:	(bad)  
30020910:	mov    eax,0x80004003
30020915:	jmp    0x3000d835
3002091a:	mov    eax,0x30020920
3002091f:	ret    
30020920:	mov    ebx,DWORD PTR [ebp-0x14]
30020923:	mov    esi,DWORD PTR [ebp-0x18]
30020926:	jmp    0x3000d82e
3002092b:	mov    eax,DWORD PTR [esi]
3002092d:	push   0x1
3002092f:	mov    ecx,esi
30020931:	call   DWORD PTR [eax+0x10]
30020934:	xor    esi,esi
30020936:	jmp    0x3000d82e
3002093b:	mov    eax,0x80004003
30020940:	jmp    0x3000e0d0
30020945:	mov    eax,0x3002094b
3002094a:	ret    
3002094b:	mov    ebx,DWORD PTR [ebp-0x14]
3002094e:	mov    esi,DWORD PTR [ebp-0x18]
30020951:	jmp    0x3000e0c9
30020956:	lea    ecx,[esi+0x4]
30020959:	push   0x1
3002095b:	mov    eax,DWORD PTR [ecx]
3002095d:	call   DWORD PTR [eax+0x14]
30020960:	xor    esi,esi
30020962:	jmp    0x3000e0c9
30020967:	mov    eax,0x80004003
3002096c:	jmp    0x3000e1c8
30020971:	mov    eax,0x30020977
30020976:	ret    
30020977:	mov    ebx,DWORD PTR [ebp-0x14]
3002097a:	mov    esi,DWORD PTR [ebp-0x18]
3002097d:	jmp    0x3000e1c1
30020982:	mov    eax,DWORD PTR [esi]
30020984:	push   0x1
30020986:	mov    ecx,esi
30020988:	call   DWORD PTR [eax+0x14]
3002098b:	xor    esi,esi
3002098d:	jmp    0x3000e1c1
30020992:	mov    ecx,DWORD PTR [eax]
30020994:	push   eax
30020995:	call   DWORD PTR [ecx+0x8]
30020998:	jmp    0x3001e828
3002099d:	call   0x30031c9d
300209a2:	mov    ebx,DWORD PTR [ebp-0x10]
300209a5:	mov    edi,DWORD PTR [ebp-0x14]
300209a8:	mov    esi,eax
300209aa:	mov    eax,DWORD PTR [ebp-0x20]
300209ad:	jmp    0x3001e799
300209b2:	mov    esi,0x8000ffff
300209b7:	jmp    0x3001e7c5
300209bc:	push   ebx
300209bd:	call   DWORD PTR ds:0x300454cc
300209c3:	jmp    0x3001e7af
300209c8:	mov    eax,DWORD PTR [ebx]
300209ca:	push   ebx
300209cb:	call   DWORD PTR [eax+0x8]
300209ce:	jmp    0x3001e7bb
300209d3:	push   esi
300209d4:	call   DWORD PTR ds:0x300454cc
300209da:	jmp    0x3001e5be
300209df:	push   ebx
300209e0:	call   DWORD PTR ds:0x30045254
300209e6:	jmp    0x3001e5be
300209eb:	mov    eax,DWORD PTR [esi]
300209ed:	push   esi
300209ee:	call   DWORD PTR [eax+0x8]
300209f1:	jmp    0x3001e589
300209f6:	call   0x30031c9d
300209fb:	mov    edi,eax
300209fd:	jmp    0x3001e589
30020a02:	call   0x30031c9d
30020a07:	jmp    0x3001e679
30020a0c:	mov    edi,0x800700b7
30020a11:	jmp    0x30020a1a
30020a13:	call   0x30031c9d
30020a18:	mov    edi,eax
30020a1a:	push   esi
30020a1b:	call   DWORD PTR ds:0x300451d0
30020a21:	mov    eax,edi
30020a23:	jmp    0x3001e679
30020a28:	mov    eax,DWORD PTR [ecx]
30020a2a:	push   ecx
30020a2b:	call   DWORD PTR [eax+0x8]
30020a2e:	jmp    0x300178d8
30020a33:	mov    eax,DWORD PTR [ecx]
30020a35:	push   ecx
30020a36:	call   DWORD PTR [eax+0x8]
30020a39:	jmp    0x300178e5
30020a3e:	mov    eax,0x80004003
30020a43:	jmp    0x3001e39c
30020a48:	mov    ecx,esi
30020a4a:	call   0x300178b2
30020a4f:	push   esi
30020a50:	call   DWORD PTR ds:0x300452ac
30020a56:	pop    ecx
30020a57:	xor    eax,eax
30020a59:	jmp    0x3001e32b
30020a5e:	mov    eax,DWORD PTR [ecx]
30020a60:	push   ecx
30020a61:	call   DWORD PTR [eax+0x8]
30020a64:	jmp    0x3001798a
30020a69:	mov    eax,0x80004003
30020a6e:	jmp    0x300060ab
30020a73:	xor    eax,eax
30020a75:	cmp    DWORD PTR [esi+0xc],0x0
30020a79:	mov    BYTE PTR [ebp-0x119],al
30020a7f:	mov    DWORD PTR [ebp-0x118],eax
30020a85:	mov    eax,0x80004005
30020a8a:	je     0x300060ab
30020a90:	lea    eax,[ebp-0x118]
30020a96:	push   eax
30020a97:	lea    eax,[ebp-0x119]
30020a9d:	push   eax
30020a9e:	push   0x1
30020aa0:	push   DWORD PTR [esi+0xc]
30020aa3:	call   0x30039068
30020aa8:	test   eax,eax
30020aaa:	js     0x300060ab
30020ab0:	mov    eax,DWORD PTR [ebp-0x118]
30020ab6:	push   0x3
30020ab8:	mov    DWORD PTR [ebx+0x8],eax
30020abb:	pop    eax
30020abc:	mov    WORD PTR [ebx],ax
30020abf:	jmp    0x30007254
30020ac4:	push   0x700a
30020ac9:	push   DWORD PTR [esi+0x14]
30020acc:	and    DWORD PTR [ebp-0x118],0x0
30020ad3:	call   DWORD PTR ds:0x30045174
30020ad9:	push   eax
30020ada:	lea    ecx,[ebp-0x118]
30020ae0:	call   0x300054b7
30020ae5:	test   al,al
30020ae7:	jne    0x30020afa
30020ae9:	push   DWORD PTR [ebp-0x118]
30020aef:	call   DWORD PTR ds:0x300454e8
30020af5:	jmp    0x300060a6
30020afa:	push   0x8
30020afc:	pop    eax
30020afd:	lea    ecx,[ebp-0x118]
30020b03:	mov    WORD PTR [ebx],ax
30020b06:	call   0x30006b6b
30020b0b:	push   DWORD PTR [ebp-0x118]
30020b11:	mov    DWORD PTR [ebx+0x8],eax
30020b14:	call   DWORD PTR ds:0x300454e8
30020b1a:	jmp    0x30007254
30020b1f:	push   0x700b
30020b24:	jmp    0x30020ac9
30020b26:	push   0xb
30020b28:	pop    eax
30020b29:	mov    WORD PTR [ebx],ax
30020b2c:	xor    eax,eax
30020b2e:	mov    WORD PTR [ebx+0x8],ax
30020b32:	jmp    0x30007254
30020b37:	push   0x3004306c
30020b3c:	lea    ecx,[ebp-0x118]
30020b42:	call   0x30004256
30020b47:	push   0x3
30020b49:	lea    eax,[ebp-0x110]
30020b4f:	push   ecx
30020b50:	lea    ecx,[ebp-0x114]
30020b56:	mov    DWORD PTR [ebp-0x114],eax
30020b5c:	call   0x30031db8
30020b61:	sub    esp,0x104
30020b67:	lea    esi,[ebp-0x114]
30020b6d:	push   0x41
30020b6f:	pop    ecx
30020b70:	mov    edi,esp
30020b72:	push   0x1
30020b74:	push   0xc627
30020b79:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
30020b7b:	xor    edi,edi
30020b7d:	push   edi
30020b7e:	push   0xb
30020b80:	lea    eax,[ebp-0x118]
30020b86:	push   0x30020d10
30020b8b:	push   eax
30020b8c:	call   0x30005153
30020b91:	lea    eax,[ebp-0x110]
30020b97:	add    esp,0x11c
30020b9d:	cmp    DWORD PTR [ebp-0x114],eax
30020ba3:	je     0x30020bb2
30020ba5:	push   DWORD PTR [ebp-0x114]
30020bab:	call   DWORD PTR ds:0x300452b4
30020bb1:	pop    ecx
30020bb2:	mov    esi,DWORD PTR [ebp-0x118]
30020bb8:	push   0x8
30020bba:	pop    eax
30020bbb:	push   esi
30020bbc:	lea    ecx,[ebp-0x120]
30020bc2:	mov    WORD PTR [ebx],ax
30020bc5:	call   0x30001488
30020bca:	mov    ecx,DWORD PTR [eax]
30020bcc:	mov    DWORD PTR [eax],edi
30020bce:	push   DWORD PTR [ebp-0x120]
30020bd4:	mov    DWORD PTR [ebx+0x8],ecx
30020bd7:	call   DWORD PTR ds:0x300454e8
30020bdd:	lea    ecx,[esi-0x10]
30020be0:	call   0x30004017
30020be5:	jmp    0x30007254
30020bea:	xor    eax,eax
30020bec:	lea    edi,[ebp-0x134]
30020bf2:	stos   DWORD PTR es:[edi],eax
30020bf3:	stos   DWORD PTR es:[edi],eax
30020bf4:	stos   DWORD PTR es:[edi],eax
30020bf5:	stos   DWORD PTR es:[edi],eax
30020bf6:	lea    eax,[ebp-0x134]
30020bfc:	push   eax
30020bfd:	call   DWORD PTR ds:0x300454e4
30020c03:	mov    eax,DWORD PTR [esi]
30020c05:	lea    ecx,[ebp-0x134]
30020c0b:	push   ecx
30020c0c:	push   0xffffde72
30020c11:	push   esi
30020c12:	call   DWORD PTR [eax+0x10]
30020c15:	test   eax,eax
30020c17:	js     0x30020c6b
30020c19:	xor    edi,edi
30020c1b:	push   edi
30020c1c:	push   DWORD PTR [ebp-0x12c]
30020c22:	call   0x3003a887
30020c27:	cmp    eax,0xffffffff
30020c2a:	je     0x30020c6b
30020c2c:	push   0x3
30020c2e:	pop    ecx
30020c2f:	mov    WORD PTR [ebx],cx
30020c32:	test   eax,eax
30020c34:	je     0x30020c52
30020c36:	jle    0x30020c4d
30020c38:	push   0x2
30020c3a:	pop    edx
30020c3b:	cmp    eax,edx
30020c3d:	jle    0x30020c48
30020c3f:	cmp    eax,ecx
30020c41:	jne    0x30020c4d
30020c43:	mov    DWORD PTR [ebx+0x8],ecx
30020c46:	jmp    0x30020c59
30020c48:	mov    DWORD PTR [ebx+0x8],edx
30020c4b:	jmp    0x30020c59
30020c4d:	mov    DWORD PTR [ebx+0x8],edi
30020c50:	jmp    0x30020c59
30020c52:	mov    DWORD PTR [ebx+0x8],0x1
30020c59:	lea    eax,[ebp-0x134]
30020c5f:	push   eax
30020c60:	call   DWORD PTR ds:0x300454e0
30020c66:	jmp    0x30007254
30020c6b:	lea    eax,[ebp-0x134]
30020c71:	push   eax
30020c72:	call   DWORD PTR ds:0x300454e0
30020c78:	jmp    0x300060a6
30020c7d:	push   0x8
30020c7f:	pop    eax
30020c80:	lea    ecx,[esi+0x10]
30020c83:	mov    WORD PTR [ebx],ax
30020c86:	call   0x30006b6b
30020c8b:	jmp    0x30007251
30020c90:	push   0x3
30020c92:	pop    eax
30020c93:	mov    WORD PTR [ebx],ax
30020c96:	movzx  eax,WORD PTR [esi+0x3c]
30020c9a:	push   eax
30020c9b:	push   edi
30020c9c:	call   DWORD PTR ds:0x30045174
30020ca2:	push   eax
30020ca3:	call   DWORD PTR ds:0x30045454
30020ca9:	jmp    0x30007251
30020cae:	push   0x3
30020cb0:	pop    eax
30020cb1:	push   0x8000
30020cb6:	push   0x32
30020cb8:	mov    WORD PTR [ebx],ax
30020cbb:	call   0x3001d2b4
30020cc0:	push   eax
30020cc1:	push   0x31
30020cc3:	call   0x3001d2b4
30020cc8:	jmp    0x30020cf4
30020cca:	xor    edi,edi
30020ccc:	cmp    WORD PTR [esi+0x3c],di
30020cd0:	je     0x300060a6
30020cd6:	push   0x3
30020cd8:	pop    eax
30020cd9:	push   0x8000
30020cde:	push   0xb
30020ce0:	mov    WORD PTR [ebx],ax
30020ce3:	call   0x3001d2b4
30020ce8:	add    eax,eax
30020cea:	push   eax
30020ceb:	push   0xb
30020ced:	call   0x3001d2b4
30020cf2:	add    eax,eax
30020cf4:	push   eax
30020cf5:	movzx  eax,WORD PTR [esi+0x3c]
30020cf9:	push   0x1
30020cfb:	push   eax
30020cfc:	push   edi
30020cfd:	call   DWORD PTR ds:0x30045174
30020d03:	push   eax
30020d04:	call   DWORD PTR ds:0x30045458
30020d0a:	jmp    0x30007251
30020d0f:	nop
30020d10:	and    eax,0x2e006400
30020d15:	add    BYTE PTR ds:0x2e006400,ah
30020d1b:	add    BYTE PTR ds:0x2e006400,ah
30020d21:	add    BYTE PTR ds:0x20006400,ah
30020d27:	add    BYTE PTR ds:0x7300,ah
30020d2d:	add    BYTE PTR [eax-0x7fffbffd],bh
30020d33:	jmp    0x30007232
30020d38:	push   0xff
30020d3d:	call   0x3001c962
30020d42:	jmp    0x3001d7ca
30020d47:	fadd   DWORD PTR ds:0x3002a9cc
30020d4d:	jmp    0x3001d807
30020d52:	fadd   DWORD PTR ds:0x3002a9cc
30020d58:	jmp    0x3001ca52
30020d5d:	push   DWORD PTR [esi]
30020d5f:	call   DWORD PTR ds:0x3004545c
30020d65:	jmp    0x3001ca96
30020d6a:	fld1   
30020d6c:	fsubrp st(1),st
30020d6e:	fstp   DWORD PTR [esp+0x4]
30020d72:	fld    DWORD PTR [esp+0x4]
30020d76:	jmp    0x3001ca80
30020d7b:	push   DWORD PTR [esi+0xc]
30020d7e:	push   DWORD PTR [esi]
30020d80:	call   DWORD PTR ds:0x30045470
30020d86:	and    DWORD PTR [esi+0xc],0x0
30020d8a:	jmp    0x3001e879
30020d8f:	push   DWORD PTR [esi+0x8]
30020d92:	push   DWORD PTR [esi]
30020d94:	call   edi
30020d96:	mov    DWORD PTR [esi+0x8],ebx
30020d99:	jmp    0x3001c778
30020d9e:	push   DWORD PTR [esi+0xc]
30020da1:	push   DWORD PTR [esi]
30020da3:	call   edi
30020da5:	mov    DWORD PTR [esi+0xc],ebx
30020da8:	jmp    0x3001c781
30020dad:	push   DWORD PTR [esi+0x10]
30020db0:	push   DWORD PTR [esi]
30020db2:	call   edi
30020db4:	mov    DWORD PTR [esi+0x10],ebx
30020db7:	jmp    0x3001c78a
30020dbc:	mov    eax,DWORD PTR [ebp+0x8]
30020dbf:	test   eax,eax
30020dc1:	jne    0x30020dc7
30020dc3:	test   edi,edi
30020dc5:	jne    0x30020dd3
30020dc7:	cmp    edi,0x7fffffff
30020dcd:	jbe    0x30004add
30020dd3:	mov    esi,ebx
30020dd5:	jmp    0x30004add
30020dda:	test   edx,edx
30020ddc:	jne    0x30004af8
30020de2:	mov    edx,0x30006ce8
30020de7:	jmp    0x30004af8
30020dec:	mov    esi,0x80070057
30020df1:	test   edi,edi
30020df3:	je     0x30020dfa
30020df5:	xor    edx,edx
30020df7:	mov    WORD PTR [eax],dx
30020dfa:	test   ecx,0x1c00
30020e00:	je     0x30020e1d
30020e02:	test   edi,edi
30020e04:	je     0x30020e1d
30020e06:	push   ecx
30020e07:	lea    ecx,[ebp-0x4]
30020e0a:	push   ecx
30020e0b:	lea    ecx,[ebp+0xc]
30020e0e:	push   ecx
30020e0f:	push   ecx
30020e10:	lea    edx,[edi+edi*1]
30020e13:	mov    ecx,eax
30020e15:	call   0x30032230
30020e1a:	mov    ebx,DWORD PTR [ebp-0x4]
30020e1d:	test   esi,esi
30020e1f:	jns    0x30020e2d
30020e21:	cmp    esi,0x8007007a
30020e27:	jne    0x30004b60
30020e2d:	mov    edx,DWORD PTR [ebp+0xc]
30020e30:	jmp    0x30004b4e
30020e35:	cmp    WORD PTR [edx],cx
30020e38:	mov    ecx,DWORD PTR [ebp+0x1c]
30020e3b:	je     0x30020e2d
30020e3d:	mov    esi,eax
30020e3f:	neg    esi
30020e41:	sbb    esi,esi
30020e43:	and    esi,0x23
30020e46:	add    esi,0x80070057
30020e4c:	jmp    0x30020dfa
30020e4e:	cmp    ebx,0x1
30020e51:	jbe    0x30004b4e
30020e57:	lea    eax,[ebx+ebx*1]
30020e5a:	cmp    eax,0x2
30020e5d:	jbe    0x30004b4e
30020e63:	add    eax,0xfffffffe
30020e66:	push   eax
30020e67:	movzx  eax,cl
30020e6a:	push   eax
30020e6b:	lea    eax,[edx+0x2]
30020e6e:	push   eax
30020e6f:	call   0x300011b1
30020e74:	add    esp,0xc
30020e77:	jmp    0x30020e2d
30020e79:	xor    ecx,ecx
30020e7b:	mov    WORD PTR [eax],cx
30020e7e:	jmp    0x30004b60
30020e83:	or     eax,0x1
30020e86:	mov    DWORD PTR [edx],eax
30020e88:	jmp    0x30004a3d
30020e8d:	xor    bl,bl
30020e8f:	cmp    BYTE PTR [ecx+0x6],bl
30020e92:	jne    0x30004bed
30020e98:	push   DWORD PTR [ebp+0x10]
30020e9b:	push   0x3002a680
30020ea0:	push   0x30018514
30020ea5:	push   0x2
30020ea7:	call   0x3000536f
30020eac:	jmp    0x30004bed
30020eb1:	push   ebx
30020eb2:	push   DWORD PTR [ebp+0x1c]
30020eb5:	push   edi
30020eb6:	call   0x300011c1
30020ebb:	mov    ecx,eax
30020ebd:	call   0x300322c5
30020ec2:	test   al,al
30020ec4:	je     0x30006fd1
30020eca:	mov    edi,DWORD PTR [ebp-0x220]
30020ed0:	mov    esi,DWORD PTR [ebp-0x224]
30020ed6:	lea    ebx,[ebp-0x20c]
30020edc:	jmp    0x30006fd1
30020ee1:	push   DWORD PTR [ebp-0x214]
30020ee7:	or     esi,0x1
30020eea:	push   DWORD PTR [ebp-0x218]
30020ef0:	push   DWORD PTR [ebp-0x21c]
30020ef6:	push   DWORD PTR [ebp+0x1c]
30020ef9:	push   esi
30020efa:	push   DWORD PTR [ebp-0x210]
30020f00:	push   DWORD PTR [ebp+0x10]
30020f03:	push   ebx
30020f04:	push   edi
30020f05:	call   DWORD PTR ds:0x30043108
30020f0b:	jmp    0x30007003
30020f10:	push   ebx
30020f11:	push   DWORD PTR [ebp+0x1c]
30020f14:	push   edi
30020f15:	call   0x300011c1
30020f1a:	mov    ecx,eax
30020f1c:	call   0x30004bd4
30020f21:	test   al,al
30020f23:	je     0x30004d59
30020f29:	mov    edi,DWORD PTR [ebp-0x428]
30020f2f:	mov    esi,DWORD PTR [ebp-0x42c]
30020f35:	lea    ebx,[ebp-0x414]
30020f3b:	jmp    0x30004d59
30020f40:	push   DWORD PTR [ebp-0x41c]
30020f46:	or     esi,0x1
30020f49:	push   DWORD PTR [ebp-0x420]
30020f4f:	push   DWORD PTR [ebp-0x424]
30020f55:	push   DWORD PTR [ebp+0x1c]
30020f58:	push   esi
30020f59:	push   DWORD PTR [ebp-0x418]
30020f5f:	push   DWORD PTR [ebp+0x10]
30020f62:	push   ebx
30020f63:	push   edi
30020f64:	call   DWORD PTR ds:0x300430ac
30020f6a:	jmp    0x30004d8b
30020f6f:	jle    0x300104f7
30020f75:	movzx  eax,ax
30020f78:	or     eax,0x80070000
30020f7d:	leave  
30020f7e:	ret    
30020f7f:	test   esi,esi
30020f81:	jle    0x30020f8c
30020f83:	movzx  esi,si
30020f86:	or     esi,0x80070000
30020f8c:	mov    eax,esi
30020f8e:	jmp    0x300104f6
30020f93:	test   esi,esi
30020f95:	jle    0x30020fa0
30020f97:	movzx  esi,si
30020f9a:	or     esi,0x80070000
30020fa0:	mov    eax,esi
30020fa2:	jmp    0x300104f4
30020fa7:	and    DWORD PTR [ebp-0x4],0x0
30020fab:	lea    eax,[ebp-0x4]
30020fae:	push   eax
30020faf:	call   0x30015b03
30020fb4:	test   eax,eax
30020fb6:	jle    0x300104f4
30020fbc:	movzx  eax,ax
30020fbf:	or     eax,0x80070000
30020fc4:	jmp    0x300104f4
30020fc9:	jle    0x30016e45
30020fcf:	movzx  eax,ax
30020fd2:	or     eax,0x80070000
30020fd7:	leave  
30020fd8:	ret    
30020fd9:	and    DWORD PTR [ebp-0x4],0x0
30020fdd:	lea    eax,[ebp-0x4]
30020fe0:	push   eax
30020fe1:	call   0x30015b03
30020fe6:	test   eax,eax
30020fe8:	jle    0x30016e44
30020fee:	movzx  eax,ax
30020ff1:	or     eax,0x80070000
30020ff6:	jmp    0x30016e44
30020ffb:	mov    edx,ebx
30020ffd:	lea    ecx,[edx+0x1]
30021000:	mov    al,BYTE PTR [edx]
30021002:	inc    edx
30021003:	test   al,al
30021005:	jne    0x30021000
30021007:	sub    edx,ecx
30021009:	mov    ecx,DWORD PTR [edi+0xc]
3002100c:	lea    eax,[ecx+0x1]
3002100f:	mov    DWORD PTR [ebp-0x10],eax
30021012:	mov    al,BYTE PTR [ecx]
30021014:	inc    ecx
30021015:	test   al,al
30021017:	jne    0x30021012
30021019:	sub    ecx,DWORD PTR [ebp-0x10]
3002101c:	cmp    edx,ecx
3002101e:	jb     0x30006f23
30021024:	mov    eax,DWORD PTR [edi+0xc]
30021027:	push   DWORD PTR [eax-0xc]
3002102a:	push   eax
3002102b:	push   DWORD PTR [eax-0xc]
3002102e:	push   ebx
3002102f:	push   0x1
30021031:	push   0x7f
30021033:	call   DWORD PTR ds:0x30045264
30021039:	cmp    eax,0x2
3002103c:	sete   al
3002103f:	test   al,al
30021041:	je     0x30006f23
30021047:	cmp    BYTE PTR [esi+0x5],0x0
3002104b:	jne    0x3002105a
3002104d:	cmp    BYTE PTR [esi+0x4],0x0
30021051:	jne    0x3002105a
30021053:	mov    al,BYTE PTR [edi+0x1c]
30021056:	test   al,al
30021058:	je     0x300210c0
3002105a:	push   0x3004306c
3002105f:	lea    ecx,[ebp+0xc]
30021062:	call   0x30004256
30021067:	and    DWORD PTR [ebp-0x4],0x0
3002106b:	push   ebx
3002106c:	lea    ecx,[ebp+0x8]
3002106f:	call   0x3001ba30
30021074:	mov    BYTE PTR [ebp-0x4],0x1
30021078:	push   DWORD PTR [ebp+0x8]
3002107b:	lea    eax,[ebp+0xc]
3002107e:	push   0x300210ec
30021083:	push   0x3002a6fc
30021088:	push   eax
30021089:	call   0x30005153
3002108e:	add    esp,0x10
30021091:	cmp    BYTE PTR [esi+0x4],0x0
30021095:	mov    esi,DWORD PTR [ebp+0xc]
30021098:	jne    0x300210a0
3002109a:	cmp    BYTE PTR [edi+0x1c],0x0
3002109e:	je     0x300210ad
300210a0:	push   esi
300210a1:	push   0x30018514
300210a6:	push   0x1
300210a8:	call   0x300046d1
300210ad:	mov    ecx,DWORD PTR [ebp+0x8]
300210b0:	lea    ecx,[ecx-0x10]
300210b3:	call   0x30004017
300210b8:	lea    ecx,[esi-0x10]
300210bb:	call   0x30004017
300210c0:	push   ecx
300210c1:	push   DWORD PTR [ebp+0x18]
300210c4:	mov    ecx,edi
300210c6:	push   ebx
300210c7:	call   0x30032340
300210cc:	test   eax,eax
300210ce:	js     0x30006f34
300210d4:	push   DWORD PTR [ebp+0x20]
300210d7:	mov    ecx,edi
300210d9:	push   DWORD PTR [ebp+0x14]
300210dc:	push   DWORD PTR [ebp+0x10]
300210df:	call   0x30004a17
300210e4:	jmp    0x30006f34
300210e9:	nop
300210ea:	nop
300210eb:	nop
300210ec:	inc    ecx
300210ed:	add    BYTE PTR [esi+0x0],cl
300210f0:	push   ebx
300210f1:	add    BYTE PTR [ecx+0x0],cl
300210f4:	add    BYTE PTR [eax],al
300210f6:	push   0x3004306c
300210fb:	lea    ecx,[ebp+0xc]
300210fe:	call   0x30004256
30021103:	and    DWORD PTR [ebp-0x4],0x0
30021107:	push   ebx
30021108:	lea    ecx,[ebp+0x8]
3002110b:	call   0x3000437e
30021110:	mov    BYTE PTR [ebp-0x4],0x1
30021114:	push   DWORD PTR [ebp+0x8]
30021117:	lea    eax,[ebp+0xc]
3002111a:	push   0x30021164
3002111f:	push   0x3002a6fc
30021124:	push   eax
30021125:	call   0x30005153
3002112a:	add    esp,0x10
3002112d:	cmp    BYTE PTR [esi+0x4],0x0
30021131:	mov    esi,DWORD PTR [ebp+0xc]
30021134:	jne    0x3002113c
30021136:	cmp    BYTE PTR [edi+0x1c],0x0
3002113a:	je     0x30021149
3002113c:	push   esi
3002113d:	push   0x30018514
30021142:	push   0x1
30021144:	call   0x300046d1
30021149:	mov    ecx,DWORD PTR [ebp+0x8]
3002114c:	lea    ecx,[ecx-0x10]
3002114f:	call   0x30004017
30021154:	lea    ecx,[esi-0x10]
30021157:	call   0x30004017
3002115c:	jmp    0x300013b1
30021161:	nop
30021162:	nop
30021163:	nop
30021164:	push   ebp
30021165:	add    BYTE PTR [esi+0x0],cl
30021168:	dec    ecx
30021169:	add    BYTE PTR [ebx+0x0],al
3002116c:	dec    edi
3002116d:	add    BYTE PTR [eax+eax*1+0x45],al
30021171:	add    BYTE PTR [eax],al
30021173:	add    BYTE PTR [eax+0x5],ch
30021176:	inc    eax
30021177:	add    BYTE PTR [eax+0x9c8de8],al
3002117d:	add    ah,cl
3002117f:	push   0x0
30021181:	push   0x0
30021183:	push   0x1
30021185:	push   0xc000008c
3002118a:	call   DWORD PTR ds:0x30045140
30021190:	int3   
30021191:	mov    edi,eax
30021193:	test   edi,edi
30021195:	je     0x300211b6
30021197:	mov    eax,DWORD PTR [esi-0xc]
3002119a:	mov    DWORD PTR [edi+0x4],eax
3002119d:	mov    ecx,DWORD PTR [esi-0xc]
300211a0:	inc    ecx
300211a1:	push   ecx
300211a2:	push   esi
300211a3:	push   ecx
300211a4:	lea    eax,[edi+0x10]
300211a7:	push   eax
300211a8:	call   DWORD PTR ds:0x300453b4
300211ae:	add    esp,0x10
300211b1:	jmp    0x30010d5f
300211b6:	call   0x3002bcb8
300211bb:	int3   
300211bc:	push   0x80070057
300211c1:	call   0x3002ae0b
300211c6:	int3   
300211c7:	push   0x80070057
300211cc:	call   0x3002ae0b
300211d1:	int3   
300211d2:	mov    esi,DWORD PTR [ecx-0xc]
300211d5:	jmp    0x3001186a
300211da:	cmp    ecx,0x40000000
300211e0:	jle    0x300211ea
300211e2:	add    ecx,0x100000
300211e8:	jmp    0x300211f3
300211ea:	mov    eax,ecx
300211ec:	cdq    
300211ed:	sub    eax,edx
300211ef:	sar    eax,1
300211f1:	add    ecx,eax
300211f3:	cmp    ecx,esi
300211f5:	jge    0x300211f9
300211f7:	mov    ecx,esi
300211f9:	push   ecx
300211fa:	mov    ecx,edi
300211fc:	call   0x300323ea
30021201:	jmp    0x30011878
30021206:	call   0x3002bcb8
3002120b:	int3   
3002120c:	xor    ebx,ebx
3002120e:	jmp    0x3001a5fe
30021213:	mov    cl,0x1
30021215:	jmp    0x30019818
3002121a:	push   edi
3002121b:	mov    edi,0x303f
30021220:	cmp    ax,di
30021223:	ja     0x30021269
30021225:	mov    edx,0x200b
3002122a:	cmp    ax,dx
3002122d:	ja     0x3002123e
3002122f:	cmp    si,ax
30021232:	je     0x30021267
30021234:	add    edx,0xfffffff5
30021237:	cmp    ax,dx
3002123a:	jae    0x30021267
3002123c:	jmp    0x30021269
3002123e:	mov    edx,0x2028
30021243:	cmp    dx,ax
30021246:	je     0x30021267
30021248:	inc    edx
30021249:	cmp    dx,ax
3002124c:	je     0x30021267
3002124e:	mov    edx,0x202f
30021253:	cmp    dx,ax
30021256:	je     0x30021267
30021258:	mov    edx,0x3000
3002125d:	cmp    dx,ax
30021260:	je     0x30021267
30021262:	cmp    di,ax
30021265:	jne    0x30021269
30021267:	mov    cl,0x1
30021269:	pop    edi
3002126a:	jmp    0x30019818
3002126f:	xor    eax,eax
30021271:	jmp    0x300187c2
30021276:	mov    DWORD PTR [eax],esi
30021278:	jmp    0x300186f7
3002127d:	dec    eax
3002127e:	dec    eax
3002127f:	jne    0x3001e171
30021285:	test   ebx,ebx
30021287:	jne    0x3001e169
3002128d:	jmp    0x3001e146
30021292:	lea    eax,[ebp-0x28]
30021295:	push   eax
30021296:	mov    eax,DWORD PTR [ebp-0x1c]
30021299:	mov    ecx,ebx
3002129b:	mov    edx,DWORD PTR [eax]
3002129d:	call   0x3003258a
300212a2:	test   eax,eax
300212a4:	jne    0x30021306
300212a6:	push   0xc
300212a8:	call   0x30004011
300212ad:	pop    ecx
300212ae:	mov    ecx,eax
300212b0:	test   ecx,ecx
300212b2:	je     0x3001e150
300212b8:	mov    edx,DWORD PTR [ebp+0x10]
300212bb:	mov    eax,DWORD PTR [edx]
300212bd:	mov    DWORD PTR [ecx+0x8],eax
300212c0:	mov    eax,DWORD PTR [ebp-0x28]
300212c3:	mov    DWORD PTR [edx],ecx
300212c5:	mov    DWORD PTR [ecx],ebx
300212c7:	add    ecx,0x4
300212ca:	and    DWORD PTR [ecx],0x0
300212cd:	sub    eax,0x0
300212d0:	je     0x300212ff
300212d2:	dec    eax
300212d3:	je     0x300212fb
300212d5:	dec    eax
300212d6:	jne    0x300187a2
300212dc:	push   0x5
300212de:	pop    ebx
300212df:	mov    DWORD PTR [ebp-0x8],ecx
300212e2:	jmp    0x300187a5
300212e7:	cmp    DWORD PTR [ebx+0xc],eax
300212ea:	je     0x30005ac2
300212f0:	mov    eax,DWORD PTR [ebx+0xc]
300212f3:	mov    DWORD PTR [ebp-0x1c],eax
300212f6:	jmp    0x30005ac2
300212fb:	push   0x3
300212fd:	jmp    0x300212de
300212ff:	xor    ebx,ebx
30021301:	jmp    0x300187a5
30021306:	mov    ecx,DWORD PTR [ebp+0x10]
30021309:	jmp    0x3001e0f6
3002130e:	cmp    ecx,0xa
30021311:	je     0x300187a5
30021317:	cmp    ecx,0x8
3002131a:	je     0x300187a5
30021320:	cmp    ecx,0xb
30021323:	je     0x300187a5
30021329:	test   esi,esi
3002132b:	je     0x30021347
3002132d:	lea    eax,[ecx-0x6]
30021330:	cmp    eax,0x1
30021333:	ja     0x3002133b
30021335:	cmp    DWORD PTR [esi+0xc],0xffffffff
30021339:	jmp    0x3002133f
3002133b:	cmp    DWORD PTR [esi+0x8],0x0
3002133f:	jne    0x3001e146
30021345:	jmp    0x30021373
30021347:	push   0x1c
30021349:	call   0x30004011
3002134e:	mov    esi,eax
30021350:	pop    ecx
30021351:	test   esi,esi
30021353:	je     0x3001e150
30021359:	mov    ecx,DWORD PTR [ebp-0x10]
3002135c:	xor    eax,eax
3002135e:	or     DWORD PTR [esi+0xc],0xffffffff
30021362:	mov    DWORD PTR [esi],eax
30021364:	mov    DWORD PTR [esi+0x4],eax
30021367:	mov    DWORD PTR [esi+0x8],eax
3002136a:	mov    DWORD PTR [esi+0x10],eax
3002136d:	mov    DWORD PTR [esi+0x14],eax
30021370:	mov    DWORD PTR [esi+0x18],eax
30021373:	lea    eax,[ecx-0x6]
30021376:	cmp    eax,0x1
30021379:	ja     0x3002138b
3002137b:	xor    eax,eax
3002137d:	cmp    ecx,0x6
30021380:	sete   al
30021383:	mov    DWORD PTR [esi+0xc],eax
30021386:	jmp    0x300187a5
3002138b:	mov    DWORD PTR [esi+0x4],ecx
3002138e:	mov    DWORD PTR [esi+0x8],0x1
30021395:	jmp    0x300187a5
3002139a:	push   esi
3002139b:	call   DWORD PTR ds:0x30045434
300213a1:	mov    esi,eax
300213a3:	push   0x9
300213a5:	movzx  eax,WORD PTR [esi]
300213a8:	pop    ecx
300213a9:	test   ax,ax
300213ac:	je     0x300185b7
300213b2:	jmp    0x300185a5
300213b7:	mov    eax,DWORD PTR [ebp-0x4]
300213ba:	xor    ebx,ebx
300213bc:	mov    DWORD PTR [eax],esi
300213be:	push   esi
300213bf:	call   DWORD PTR ds:0x30045434
300213c5:	mov    esi,eax
300213c7:	cmp    WORD PTR [esi],bx
300213ca:	jne    0x300213be
300213cc:	mov    ecx,DWORD PTR [ebp-0x8]
300213cf:	mov    DWORD PTR [edi],0x5
300213d5:	mov    DWORD PTR [ecx],esi
300213d7:	jmp    0x3001868b
300213dc:	and    DWORD PTR [edi],0x0
300213df:	jmp    0x3001868b
300213e4:	mov    DWORD PTR [edi],0x1
300213ea:	jmp    0x300185ff
300213ef:	xor    eax,eax
300213f1:	test   ecx,ecx
300213f3:	sete   al
300213f6:	mov    DWORD PTR [ebp+0xc],eax
300213f9:	jmp    0x30018635
300213fe:	test   ecx,ecx
30021400:	jne    0x30018632
30021406:	test   edx,edx
30021408:	jne    0x30021418
3002140a:	push   esi
3002140b:	call   DWORD PTR ds:0x30045434
30021411:	mov    edx,DWORD PTR [ebp+0x8]
30021414:	mov    DWORD PTR [edi],eax
30021416:	jmp    0x3002141e
30021418:	push   0x20
3002141a:	pop    eax
3002141b:	mov    WORD PTR [esi],ax
3002141e:	xor    eax,eax
30021420:	test   edx,edx
30021422:	sete   al
30021425:	mov    edx,eax
30021427:	mov    DWORD PTR [ebp+0x8],edx
3002142a:	jmp    0x30018632
3002142f:	lea    ecx,[edi+0x2]
30021432:	cmp    WORD PTR [ecx],bx
30021435:	je     0x3001868b
3002143b:	mov    eax,esi
3002143d:	sub    eax,edi
3002143f:	push   eax
30021440:	push   ecx
30021441:	push   edi
30021442:	call   DWORD PTR ds:0x3004534c
30021448:	push   0x5e
3002144a:	pop    eax
3002144b:	push   eax
3002144c:	lea    eax,[edi+0x4]
3002144f:	push   eax
30021450:	call   DWORD PTR ds:0x30045348
30021456:	add    esp,0x14
30021459:	jmp    0x30018681
3002145e:	mov    esi,DWORD PTR [esi+0x8]
30021461:	push   eax
30021462:	call   0x3001694a
30021467:	pop    ecx
30021468:	jmp    0x30016a5b
3002146d:	mov    eax,0x80004003
30021472:	jmp    0x3001057a
30021477:	mov    eax,0x8007000e
3002147c:	jmp    0x3001057a
30021481:	mov    eax,0x80004003
30021486:	jmp    0x30017f44
3002148b:	mov    eax,0x8007000e
30021490:	jmp    0x30017f44
30021495:	mov    eax,0x80004003
3002149a:	ret    
3002149b:	push   0x1388
300214a0:	call   DWORD PTR ds:0x30045280
300214a6:	jmp    0x30018404
300214ab:	cmp    DWORD PTR [ebp-0x228],0x4
300214b2:	jne    0x30018322
300214b8:	xor    ebx,ebx
300214ba:	cmp    DWORD PTR [ebp-0x22c],ebx
300214c0:	sete   bl
300214c3:	jmp    0x30018322
300214c8:	inc    ecx
300214c9:	cmp    ecx,0x4
300214cc:	jne    0x30018390
300214d2:	push   ebx
300214d3:	push   ebx
300214d4:	push   ebx
300214d5:	push   0x2
300214d7:	push   ebx
300214d8:	push   ebx
300214d9:	push   ebx
300214da:	push   0xffffffff
300214dc:	push   ebx
300214dd:	jmp    0x300183ad
300214e2:	mov    ecx,DWORD PTR [ebp-0x14]
300214e5:	mov    eax,DWORD PTR [ecx]
300214e7:	mov    eax,DWORD PTR [eax]
300214e9:	mov    DWORD PTR [ebp-0x2c],eax
300214ec:	mov    DWORD PTR [ebp-0x20],ecx
300214ef:	mov    DWORD PTR [ebp-0x28],eax
300214f2:	cmp    DWORD PTR [ebp-0x28],0xc0000005
300214f9:	jne    0x30021504
300214fb:	mov    DWORD PTR [ebp-0x24],0x1
30021502:	jmp    0x30021568
30021504:	cmp    DWORD PTR [ebp-0x28],0xc0020001
3002150b:	jne    0x30021561
3002150d:	cmp    DWORD PTR [ebp-0x20],0x0
30021511:	je     0x3002151f
30021513:	mov    eax,DWORD PTR [ebp-0x20]
30021516:	cmp    DWORD PTR [eax],0x0
30021519:	je     0x3002151f
3002151b:	mov    al,0x1
3002151d:	jmp    0x30021521
3002151f:	xor    al,al
30021521:	mov    BYTE PTR [ebp-0x19],al
30021524:	cmp    BYTE PTR [ebp-0x19],0x0
30021528:	je     0x30021539
3002152a:	mov    eax,DWORD PTR [ebp-0x20]
3002152d:	mov    eax,DWORD PTR [eax]
3002152f:	cmp    DWORD PTR [eax+0x10],0x1
30021533:	jne    0x30021539
30021535:	mov    al,0x1
30021537:	jmp    0x3002153b
30021539:	xor    al,al
3002153b:	mov    BYTE PTR [ebp-0x1a],al
3002153e:	cmp    BYTE PTR [ebp-0x1a],0x0
30021542:	je     0x30021556
30021544:	mov    eax,DWORD PTR [ebp-0x20]
30021547:	mov    eax,DWORD PTR [eax]
30021549:	cmp    DWORD PTR [eax+0x14],0x8007042b
30021550:	jne    0x30021556
30021552:	mov    al,0x1
30021554:	jmp    0x30021558
30021556:	xor    al,al
30021558:	mov    BYTE PTR [ebp-0x1b],al
3002155b:	cmp    BYTE PTR [ebp-0x1b],0x0
3002155f:	jne    0x300214fb
30021561:	mov    DWORD PTR [ebp-0x24],0x0
30021568:	mov    eax,DWORD PTR [ebp-0x24]
3002156b:	ret    
3002156c:	mov    esp,DWORD PTR [ebp-0x18]
3002156f:	jmp    0x30016a7e
30021574:	push   0x2
30021576:	push   0x30043c60
3002157b:	push   0x80000001
30021580:	lea    ecx,[ebp-0x20]
30021583:	call   0x300051d9
30021588:	jmp    0x3001e248
3002158d:	push   eax
3002158e:	call   0x3002ae0b
30021593:	push   ebx
30021594:	push   ebx
30021595:	lea    eax,[ebp-0x834]
3002159b:	push   eax
3002159c:	mov    eax,DWORD PTR [ebp-0x834]
300215a2:	lea    ecx,[ebp-0x628]
300215a8:	sub    eax,ecx
300215aa:	sar    eax,1
300215ac:	push   edi
300215ad:	mov    ecx,0x208
300215b2:	sub    ecx,eax
300215b4:	push   ecx
300215b5:	push   DWORD PTR [ebp-0x834]
300215bb:	call   0x30004aa2
300215c0:	mov    esi,eax
300215c2:	jmp    0x30008583
300215c7:	call   DWORD PTR ds:0x30045160
300215cd:	mov    esi,eax
300215cf:	test   esi,esi
300215d1:	jle    0x30007b1f
300215d7:	movzx  esi,si
300215da:	or     esi,0x80070000
300215e0:	jmp    0x30007b1f
300215e5:	push   DWORD PTR [ebp-0x78]
300215e8:	mov    ebx,DWORD PTR ds:0x300454e8
300215ee:	call   ebx
300215f0:	push   edi
300215f1:	call   ebx
300215f3:	push   esi
300215f4:	call   ebx
300215f6:	jmp    0x3000ed8f
300215fb:	cmp    DWORD PTR ds:0x30043118,eax
30021601:	je     0x3000694a
30021607:	push   DWORD PTR [edi]
30021609:	call   DWORD PTR ds:0x30045168
3002160f:	and    DWORD PTR [edi],0x0
30021612:	and    DWORD PTR ds:0x30043118,0x0
30021619:	jmp    0x30006929
3002161e:	mov    ecx,DWORD PTR [ebp-0x4]
30021621:	push   0x30043118
30021626:	push   edi
30021627:	push   ebx
30021628:	push   0x30007e38
3002162d:	mov    edx,0x3002165c
30021632:	call   0x30007977
30021637:	test   eax,eax
30021639:	jne    0x3000694a
3002163f:	mov    ecx,DWORD PTR [ebp-0x4]
30021642:	push   0x30043118
30021647:	push   edi
30021648:	push   ebx
30021649:	push   0x30007e38
3002164e:	xor    edx,edx
30021650:	call   0x30007977
30021655:	mov    esi,eax
30021657:	jmp    0x3000694a
3002165c:	jbe    0x3002165e
3002165e:	jae    0x30021660
30021660:	jo     0x30021662
30021662:	imul   eax,DWORD PTR [eax],0x67
30021665:	add    BYTE PTR [ebx+0x0],dh
30021668:	add    BYTE PTR [eax],al
3002166a:	cmp    ax,WORD PTR [esi+0x2]
3002166e:	je     0x300080b7
30021674:	jmp    0x300080a2
30021679:	push   eax
3002167a:	call   0x3002ae0b
3002167f:	int3   
30021680:	mov    edi,DWORD PTR [ebp-0x90]
30021686:	mov    DWORD PTR [ebp-0x88],0x80070057
30021690:	jmp    0x300117dc
30021695:	push   eax
30021696:	call   0x3002ae0b
3002169b:	mov    DWORD PTR [ebp-0x88],0x8007000e
300216a5:	jmp    0x300117dc
300216aa:	xor    eax,eax
300216ac:	mov    ebx,eax
300216ae:	mov    DWORD PTR [ebp-0xa4],ebx
300216b4:	mov    esi,eax
300216b6:	mov    DWORD PTR [ebp-0x98],esi
300216bc:	mov    ecx,eax
300216be:	mov    BYTE PTR [ebp-0x4],0x3
300216c2:	mov    DWORD PTR [ebp-0xa0],ecx
300216c8:	cmp    DWORD PTR [ebp-0x8c],ecx
300216ce:	je     0x300216f5
300216d0:	push   eax
300216d1:	push   eax
300216d2:	push   eax
300216d3:	push   eax
300216d4:	lea    ecx,[ebp-0xa0]
300216da:	push   ecx
300216db:	push   eax
300216dc:	push   eax
300216dd:	push   eax
300216de:	push   eax
300216df:	push   eax
300216e0:	push   eax
300216e1:	push   DWORD PTR [ebp-0x8c]
300216e7:	call   DWORD PTR ds:0x30045078
300216ed:	mov    ecx,DWORD PTR [ebp-0xa0]
300216f3:	xor    eax,eax
300216f5:	mov    edx,eax
300216f7:	mov    DWORD PTR [ebp-0x80],edx
300216fa:	test   ecx,ecx
300216fc:	je     0x300217b9
30021702:	mov    DWORD PTR [ebp-0x84],eax
30021708:	push   ecx
30021709:	lea    eax,[ebp-0x84]
3002170f:	push   eax
30021710:	push   edx
30021711:	lea    ecx,[ebp-0x8c]
30021717:	mov    BYTE PTR [ebp-0x4],0x4
3002171b:	call   0x300324e9
30021720:	mov    esi,DWORD PTR [ebp-0x84]
30021726:	push   esi
30021727:	call   DWORD PTR ds:0x300454ec
3002172d:	test   eax,eax
3002172f:	je     0x30021792
30021731:	push   0x3002191c
30021736:	lea    ecx,[ebp-0x98]
3002173c:	call   0x300062d8
30021741:	test   eax,eax
30021743:	js     0x30021695
30021749:	push   esi
3002174a:	lea    ecx,[ebp-0x98]
30021750:	call   0x30030a28
30021755:	test   eax,eax
30021757:	js     0x30021695
3002175d:	push   0x3002a738
30021762:	lea    ecx,[ebp-0x98]
30021768:	call   0x300062d8
3002176d:	test   eax,eax
3002176f:	js     0x30021695
30021775:	test   ebx,ebx
30021777:	jne    0x30021792
30021779:	lea    eax,[ebp-0xa4]
3002177f:	push   eax
30021780:	push   esi
30021781:	lea    ecx,[ebp-0x8c]
30021787:	call   0x3000bc14
3002178c:	mov    ebx,DWORD PTR [ebp-0xa4]
30021792:	push   esi
30021793:	mov    BYTE PTR [ebp-0x4],0x3
30021797:	call   DWORD PTR ds:0x300454e8
3002179d:	mov    edx,DWORD PTR [ebp-0x80]
300217a0:	inc    edx
300217a1:	mov    DWORD PTR [ebp-0x80],edx
300217a4:	cmp    edx,DWORD PTR [ebp-0xa0]
300217aa:	jae    0x300217b3
300217ac:	xor    eax,eax
300217ae:	jmp    0x30021702
300217b3:	mov    esi,DWORD PTR [ebp-0x98]
300217b9:	push   esi
300217ba:	call   DWORD PTR ds:0x300454ec
300217c0:	test   eax,eax
300217c2:	je     0x30021907
300217c8:	push   ebx
300217c9:	call   DWORD PTR ds:0x300454ec
300217cf:	test   eax,eax
300217d1:	je     0x30021907
300217d7:	mov    eax,DWORD PTR [ebp-0x94]
300217dd:	lea    ecx,[ebp-0x94]
300217e3:	mov    DWORD PTR [eax],0x1
300217e9:	xor    eax,eax
300217eb:	push   eax
300217ec:	push   ecx
300217ed:	mov    ecx,DWORD PTR [ebp-0xa8]
300217f3:	push   eax
300217f4:	mov    edx,0x3000b930
300217f9:	call   0x3000bcdc
300217fe:	test   eax,eax
30021800:	jne    0x30021811
30021802:	mov    DWORD PTR [ebp-0x88],0x80070057
3002180c:	jmp    0x30021907
30021811:	xor    eax,eax
30021813:	mov    DWORD PTR [ebp-0x80],eax
30021816:	mov    DWORD PTR [ebp-0x84],eax
3002181c:	push   0xbb8
30021821:	mov    BYTE PTR [ebp-0x4],0x6
30021825:	push   DWORD PTR [ebp-0x94]
3002182b:	lea    ecx,[ebp-0x84]
30021831:	call   0x300054b7
30021836:	mov    ecx,DWORD PTR [ebp-0x94]
3002183c:	lea    eax,[ebp-0x80]
3002183f:	push   eax
30021840:	push   esi
30021841:	mov    edx,0x1a36
30021846:	call   0x30032950
3002184b:	cmp    DWORD PTR [ebp-0x80],0x0
3002184f:	jne    0x30021860
30021851:	mov    DWORD PTR [ebp-0x88],0x8007000e
3002185b:	jmp    0x300218f2
30021860:	push   0x11
30021862:	push   DWORD PTR [ebp-0x84]
30021868:	push   DWORD PTR [ebp-0x80]
3002186b:	push   0x0
3002186d:	call   DWORD PTR ds:0x30045440
30021873:	cmp    eax,0x1
30021876:	jne    0x300218f2
30021878:	push   0x40
3002187a:	lea    eax,[ebp-0x100]
30021880:	push   0x0
30021882:	push   eax
30021883:	call   0x300011b1
30021888:	xor    ecx,ecx
3002188a:	xor    eax,eax
3002188c:	mov    DWORD PTR [ebp-0xb8],ecx
30021892:	add    esp,0xc
30021895:	lea    edi,[ebp-0xb4]
3002189b:	stos   DWORD PTR es:[edi],eax
3002189c:	stos   DWORD PTR es:[edi],eax
3002189d:	stos   DWORD PTR es:[edi],eax
3002189e:	lea    eax,[ebp-0xb8]
300218a4:	push   eax
300218a5:	lea    eax,[ebp-0x104]
300218ab:	push   eax
300218ac:	push   ecx
300218ad:	push   ecx
300218ae:	push   0x8
300218b0:	push   0x1
300218b2:	push   ecx
300218b3:	push   ecx
300218b4:	push   ecx
300218b5:	push   ebx
300218b6:	mov    DWORD PTR [ebp-0x104],0x44
300218c0:	call   DWORD PTR ds:0x30045288
300218c6:	test   eax,eax
300218c8:	jne    0x300218d6
300218ca:	mov    DWORD PTR [ebp-0x88],0x80070057
300218d4:	jmp    0x300218ec
300218d6:	push   DWORD PTR [ebp-0xb4]
300218dc:	mov    edi,DWORD PTR ds:0x300451d0
300218e2:	call   edi
300218e4:	push   DWORD PTR [ebp-0xb8]
300218ea:	call   edi
300218ec:	mov    edi,DWORD PTR [ebp-0x90]
300218f2:	push   DWORD PTR [ebp-0x84]
300218f8:	call   DWORD PTR ds:0x300454e8
300218fe:	push   DWORD PTR [ebp-0x80]
30021901:	call   DWORD PTR ds:0x300454e8
30021907:	push   esi
30021908:	call   DWORD PTR ds:0x300454e8
3002190e:	push   ebx
3002190f:	call   DWORD PTR ds:0x300454e8
30021915:	jmp    0x300117dc
3002191a:	nop
3002191b:	nop
3002191c:	or     DWORD PTR [eax],eax
3002191e:	add    BYTE PTR [eax],al
30021920:	xor    eax,eax
30021922:	mov    WORD PTR [ebx],ax
30021925:	jmp    0x30018033
3002192a:	push   DWORD PTR [ebp-0x244]
30021930:	push   0x104
30021935:	push   ebx
30021936:	call   DWORD PTR ds:0x30045360
3002193c:	add    esp,0xc
3002193f:	test   eax,eax
30021941:	je     0x3002197c
30021943:	mov    ecx,ebx
30021945:	lea    edx,[ecx+0x2]
30021948:	mov    ax,WORD PTR [ecx]
3002194b:	add    ecx,0x2
3002194e:	cmp    ax,di
30021951:	jne    0x30021948
30021953:	sub    ecx,edx
30021955:	sar    ecx,1
30021957:	je     0x30021968
30021959:	cmp    WORD PTR [ebx+ecx*2-0x2],0xa
3002195f:	jne    0x30021968
30021961:	xor    eax,eax
30021963:	mov    WORD PTR [ebx+ecx*2-0x2],ax
30021968:	dec    ecx
30021969:	je     0x30021981
3002196b:	cmp    WORD PTR [ebx+ecx*2-0x2],0x20
30021971:	jne    0x30021981
30021973:	xor    eax,eax
30021975:	mov    WORD PTR [ebx+ecx*2-0x2],ax
3002197a:	jmp    0x30021981
3002197c:	xor    eax,eax
3002197e:	mov    WORD PTR [ebx],ax
30021981:	push   DWORD PTR [ebp-0x244]
30021987:	call   0x3000eb81
3002198c:	pop    ecx
3002198d:	jmp    0x30018033
30021992:	call   0x30037fc6
30021997:	int3   
30021998:	mov    eax,0x80004003
3002199d:	jmp    0x30005a6e
300219a2:	lea    eax,[ebp-0x214]
300219a8:	mov    DWORD PTR [ebp-0x348],eax
300219ae:	jmp    0x30005a5d
300219b3:	xor    eax,eax
300219b5:	inc    eax
300219b6:	ret    
300219b7:	push   0x80070057
300219bc:	call   0x3002ae0b
300219c1:	mov    ecx,edi
300219c3:	call   0x30008bef
300219c8:	mov    ecx,DWORD PTR [ebx]
300219ca:	push   eax
300219cb:	lea    edi,[esi+ecx*2]
300219ce:	mov    esi,DWORD PTR [ebp+0x8]
300219d1:	mov    ecx,esi
300219d3:	call   0x30004256
300219d8:	and    DWORD PTR [ebp-0x4],0x0
300219dc:	push   edi
300219dd:	mov    ecx,esi
300219df:	call   0x30004361
300219e4:	test   al,al
300219e6:	jne    0x300219f8
300219e8:	push   edi
300219e9:	call   0x300042e4
300219ee:	pop    ecx
300219ef:	push   eax
300219f0:	push   edi
300219f1:	mov    ecx,esi
300219f3:	call   0x3000416f
300219f8:	mov    eax,esi
300219fa:	jmp    0x30008f24
300219ff:	xor    edi,edi
30021a01:	jmp    0x30008d86
30021a06:	xor    esi,esi
30021a08:	jmp    0x30008d91
30021a0d:	xor    esi,esi
30021a0f:	jmp    0x30008db8
30021a14:	push   0x80070216
30021a19:	call   0x3002ae0b
30021a1e:	int3   
30021a1f:	test   esi,esi
30021a21:	je     0x30008d20
30021a27:	push   0x80070057
30021a2c:	jmp    0x30021a33
30021a2e:	push   0x80004005
30021a33:	call   0x3002ae0b
30021a38:	call   0x3002bcb8
30021a3d:	int3   
30021a3e:	push   0x8007000e
30021a43:	call   0x3002ae0b
30021a48:	int3   
30021a49:	cmp    DWORD PTR [ebp-0x68],0x1
30021a4d:	jne    0x3001de51
30021a53:	cmp    BYTE PTR ds:0x300430f1,0x0
30021a5a:	je     0x30021a6f
30021a5c:	call   0x30033b12
30021a61:	mov    edx,DWORD PTR [eax]
30021a63:	push   0x30021a98
30021a68:	push   0x3
30021a6a:	mov    ecx,eax
30021a6c:	call   DWORD PTR [edx+0x8]
30021a6f:	mov    ecx,DWORD PTR [ebp+0x8]
30021a72:	lea    eax,[ebp-0x70]
30021a75:	push   eax
30021a76:	call   0x3001b600
30021a7b:	jmp    0x3001de21
30021a80:	push   0x0
30021a82:	push   0x30021b00
30021a87:	push   0x3
30021a89:	mov    edx,esi
30021a8b:	pop    ecx
30021a8c:	call   0x30033ac0
30021a91:	jmp    0x3001de21
30021a96:	nop
30021a97:	nop
30021a98:	inc    esi
30021a99:	add    BYTE PTR [edi+0x0],ch
30021a9c:	jne    0x30021a9e
30021a9e:	outs   dx,BYTE PTR ds:[esi]
30021a9f:	add    BYTE PTR [eax+eax*1+0x20],ah
30021aa3:	add    BYTE PTR [eax+0x0],dl
30021aa6:	imul   eax,DWORD PTR [eax],0x67
30021aa9:	add    BYTE PTR [ebp+0x0],dl
30021aac:	outs   dx,BYTE PTR ds:[esi]
30021aad:	add    BYTE PTR [eax+eax*1+0x65],al
30021ab1:	add    BYTE PTR [esi+0x0],ah
30021ab4:	and    BYTE PTR [eax],al
30021ab6:	data16 add BYTE PTR [ecx+0x0],ch
30021aba:	ins    BYTE PTR es:[edi],dx
30021abb:	add    BYTE PTR [ebp+0x0],ah
30021abe:	sub    al,0x0
30021ac0:	and    BYTE PTR [eax],al
30021ac2:	popa   
30021ac3:	add    BYTE PTR [eax+eax*1+0x64],ah
30021ac7:	add    BYTE PTR [ecx+0x0],ch
30021aca:	outs   dx,BYTE PTR ds:[esi]
30021acb:	add    BYTE PTR [edi+0x0],ah
30021ace:	and    BYTE PTR [eax],al
30021ad0:	je     0x30021ad2
30021ad2:	outs   dx,DWORD PTR ds:[esi]
30021ad3:	add    BYTE PTR [eax],ah
30021ad5:	add    BYTE PTR [ebx+0x0],ah
30021ad8:	outs   dx,DWORD PTR ds:[esi]
30021ad9:	add    BYTE PTR [esi+0x0],ch
30021adc:	data16 add BYTE PTR [ecx+0x0],ch
30021ae0:	add    BYTE PTR [di+0x0],dh
30021ae4:	jb     0x30021ae6
30021ae6:	popa   
30021ae7:	add    BYTE PTR [eax+eax*1+0x69],dh
30021aeb:	add    BYTE PTR [edi+0x0],ch
30021aee:	outs   dx,BYTE PTR ds:[esi]
30021aef:	add    BYTE PTR [eax],ah
30021af1:	add    BYTE PTR [ebx+0x0],dh
30021af4:	add    BYTE PTR gs:[eax+eax*1+0x0],dh
30021af9:	add    BYTE PTR [eax-0x6f6f6f70],dl
30021aff:	nop
30021b00:	inc    ebp
30021b01:	add    BYTE PTR [edx+0x0],dh
30021b04:	jb     0x30021b06
30021b06:	outs   dx,DWORD PTR ds:[esi]
30021b07:	add    BYTE PTR [edx+0x0],dh
30021b0a:	and    BYTE PTR [eax],al
30021b0c:	ja     0x30021b0e
30021b0e:	push   0x6c006900
30021b13:	add    BYTE PTR [ebp+0x0],ah
30021b16:	and    BYTE PTR [eax],al
30021b18:	ins    BYTE PTR es:[edi],dx
30021b19:	add    BYTE PTR [edi+0x0],ch
30021b1c:	arpl   WORD PTR [eax],ax
30021b1e:	popa   
30021b1f:	add    BYTE PTR [eax+eax*1+0x69],dh
30021b23:	add    BYTE PTR [esi+0x0],ch
30021b26:	add    BYTE PTR [bx+si],ah
30021b29:	add    BYTE PTR [eax+0x0],dl
30021b2c:	imul   eax,DWORD PTR [eax],0x67
30021b2f:	add    BYTE PTR [ebp+0x0],dl
30021b32:	outs   dx,BYTE PTR ds:[esi]
30021b33:	add    BYTE PTR [eax+eax*1+0x65],al
30021b37:	add    BYTE PTR [esi+0x0],ah
30021b3a:	and    BYTE PTR [eax],al
30021b3c:	data16 add BYTE PTR [ecx+0x0],ch
30021b40:	ins    BYTE PTR es:[edi],dx
30021b41:	add    BYTE PTR [ebp+0x0],ah
30021b44:	add    BYTE PTR [eax],al
30021b46:	call   0x30033b12
30021b4b:	mov    edx,DWORD PTR [eax]
30021b4d:	push   0x30021cd8
30021b52:	push   0x3
30021b54:	mov    ecx,eax
30021b56:	call   DWORD PTR [edx+0x8]
30021b59:	jmp    0x3001c0ff
30021b5e:	mov    ecx,esi
30021b60:	call   0x30033627
30021b65:	mov    edi,eax
30021b67:	test   edi,edi
30021b69:	jns    0x3001c11d
30021b6f:	jmp    0x3001c188
30021b74:	push   0x30021d20
30021b79:	call   0x300042e4
30021b7e:	pop    ecx
30021b7f:	push   eax
30021b80:	push   0x30021d20
30021b85:	mov    ecx,ebx
30021b87:	call   0x3000416f
30021b8c:	jmp    0x3001c12c
30021b91:	push   0x30021d68
30021b96:	call   0x300042e4
30021b9b:	pop    ecx
30021b9c:	push   eax
30021b9d:	push   0x30021d68
30021ba2:	lea    ecx,[esi+0x40]
30021ba5:	call   0x3000416f
30021baa:	jmp    0x3001c139
30021baf:	mov    ecx,DWORD PTR [esi+0x4]
30021bb2:	lea    eax,[esi+0x20]
30021bb5:	mov    edx,DWORD PTR [ecx]
30021bb7:	push   eax
30021bb8:	lea    eax,[esi+0x28]
30021bbb:	push   eax
30021bbc:	call   DWORD PTR [edx+0x10]
30021bbf:	push   eax
30021bc0:	lea    ecx,[esi+0x28]
30021bc3:	jmp    0x3001c16f
30021bc8:	push   0x0
30021bca:	push   DWORD PTR [ebx]
30021bcc:	lea    ecx,[esi+0x40]
30021bcf:	call   0x3000923c
30021bd4:	cmp    eax,0xffffffff
30021bd7:	jne    0x30021bf9
30021bd9:	cmp    BYTE PTR ds:0x300430f1,0x0
30021be0:	je     0x30021c80
30021be6:	call   0x30033b12
30021beb:	mov    edx,DWORD PTR [eax]
30021bed:	push   0x30021df8
30021bf2:	push   0x2
30021bf4:	mov    ecx,eax
30021bf6:	call   DWORD PTR [edx+0x8]
30021bf9:	cmp    BYTE PTR ds:0x300430f1,0x0
30021c00:	je     0x30021c80
30021c02:	call   0x30033b12
30021c07:	mov    edx,DWORD PTR [eax]
30021c09:	push   0x30021ea4
30021c0e:	push   0x3
30021c10:	mov    ecx,eax
30021c12:	call   DWORD PTR [edx+0x8]
30021c15:	cmp    BYTE PTR ds:0x300430f1,0x0
30021c1c:	je     0x30021c80
30021c1e:	push   DWORD PTR [esi+0x28]
30021c21:	xor    edx,edx
30021c23:	push   0x3002a750
30021c28:	push   0x3
30021c2a:	pop    ecx
30021c2b:	call   0x30033ac0
30021c30:	cmp    BYTE PTR ds:0x300430f1,0x0
30021c37:	je     0x30021c80
30021c39:	push   DWORD PTR [esi+0x2c]
30021c3c:	xor    edx,edx
30021c3e:	push   0x3001c300
30021c43:	push   0x3
30021c45:	pop    ecx
30021c46:	call   0x30033ac0
30021c4b:	cmp    BYTE PTR ds:0x300430f1,0x0
30021c52:	je     0x30021c80
30021c54:	push   DWORD PTR [esi+0x40]
30021c57:	xor    edx,edx
30021c59:	push   0x3000e654
30021c5e:	push   0x3
30021c60:	pop    ecx
30021c61:	call   0x30033ac0
30021c66:	cmp    BYTE PTR ds:0x300430f1,0x0
30021c6d:	je     0x30021c80
30021c6f:	push   DWORD PTR [ebx]
30021c71:	xor    edx,edx
30021c73:	push   0x3000e678
30021c78:	push   0x3
30021c7a:	pop    ecx
30021c7b:	call   0x30033ac0
30021c80:	lea    ecx,[ebp-0x4]
30021c83:	call   0x300051c8
30021c88:	push   DWORD PTR [esi+0x18]
30021c8b:	mov    eax,DWORD PTR [esi+0x10]
30021c8e:	shr    eax,0x4
30021c91:	push   0x3002a768
30021c96:	and    eax,0x1
30021c99:	push   eax
30021c9a:	push   0x3002a784
30021c9f:	lea    eax,[ebp-0x4]
30021ca2:	push   0x30021ee0
30021ca7:	push   eax
30021ca8:	call   0x30005153
30021cad:	add    esp,0x18
30021cb0:	cmp    BYTE PTR ds:0x300430f1,0x0
30021cb7:	je     0x30021cca
30021cb9:	call   0x30033b12
30021cbe:	push   DWORD PTR [ebp-0x4]
30021cc1:	mov    edx,DWORD PTR [eax]
30021cc3:	push   0x3
30021cc5:	mov    ecx,eax
30021cc7:	call   DWORD PTR [edx+0x8]
30021cca:	lea    ecx,[ebp-0x4]
30021ccd:	call   0x300051a4
30021cd2:	jmp    0x3001c188
30021cd7:	nop
30021cd8:	inc    esp
30021cd9:	add    BYTE PTR [edi+0x0],ch
30021cdc:	jne    0x30021cde
30021cde:	bound  eax,QWORD PTR [eax]
30021ce0:	ins    BYTE PTR es:[edi],dx
30021ce1:	add    BYTE PTR [ebp+0x0],ah
30021ce4:	sub    eax,0x68006300
30021ce9:	add    BYTE PTR [ebp+0x0],ah
30021cec:	arpl   WORD PTR [eax],ax
30021cee:	imul   eax,DWORD PTR [eax],0x69
30021cf1:	add    BYTE PTR [esi+0x0],ch
30021cf4:	add    BYTE PTR [bx+si],ah
30021cf7:	add    BYTE PTR [ebp+0x0],ch
30021cfa:	popa   
30021cfb:	add    BYTE PTR [ebx+0x0],dh
30021cfe:	je     0x30021d00
30021d00:	add    BYTE PTR gs:[edx+0x0],dh
30021d04:	and    BYTE PTR [eax],al
30021d06:	jo     0x30021d08
30021d08:	imul   eax,DWORD PTR [eax],0x67
30021d0b:	add    BYTE PTR [eax+eax*1+0x65],ah
30021d0f:	add    BYTE PTR [esi+0x0],ah
30021d12:	and    BYTE PTR [eax],al
30021d14:	data16 add BYTE PTR [ecx+0x0],ch
30021d18:	ins    BYTE PTR es:[edi],dx
30021d19:	add    BYTE PTR [ebp+0x0],ah
30021d1c:	add    BYTE PTR [eax],al
30021d1e:	nop
30021d1f:	nop
30021d20:	and    al,0x0
30021d22:	push   edx
30021d23:	add    BYTE PTR [edi+0x0],ch
30021d26:	outs   dx,DWORD PTR ds:[esi]
30021d27:	add    BYTE PTR [eax+eax*1+0x46],dh
30021d2b:	add    BYTE PTR [edi+0x0],ch
30021d2e:	ins    BYTE PTR es:[edi],dx
30021d2f:	add    BYTE PTR [eax+eax*1+0x65],ah
30021d33:	add    BYTE PTR [edx+0x0],dh
30021d36:	and    al,0x0
30021d38:	inc    ebx
30021d39:	add    BYTE PTR [edi+0x0],ch
30021d3c:	ins    DWORD PTR es:[edi],dx
30021d3d:	add    BYTE PTR [ebp+0x0],ch
30021d40:	outs   dx,DWORD PTR ds:[esi]
30021d41:	add    BYTE PTR [esi+0x0],ch
30021d44:	aaa    
30021d45:	add    BYTE PTR [eax+eax*1+0x49],bl
30021d49:	add    BYTE PTR [eax+eax*1+0x45],al
30021d4d:	add    BYTE PTR [eax+eax*1+0x45],bl
30021d51:	add    BYTE PTR [eax+0x0],bh
30021d54:	je     0x30021d56
30021d56:	add    BYTE PTR gs:[esi+0x0],ch
30021d5a:	jae    0x30021d5c
30021d5c:	imul   eax,DWORD PTR [eax],0x6e006f
30021d62:	jae    0x30021d64
30021d64:	add    BYTE PTR [eax],al
30021d66:	nop
30021d67:	nop
30021d68:	and    al,0x0
30021d6a:	inc    ecx
30021d6b:	add    BYTE PTR [eax+0x0],dh
30021d6e:	jo     0x30021d70
30021d70:	ins    BYTE PTR es:[edi],dx
30021d71:	add    BYTE PTR [ecx+0x0],ch
30021d74:	arpl   WORD PTR [eax],ax
30021d76:	popa   
30021d77:	add    BYTE PTR [eax+eax*1+0x69],dh
30021d7b:	add    BYTE PTR [edi+0x0],ch
30021d7e:	outs   dx,BYTE PTR ds:[esi]
30021d7f:	add    BYTE PTR [ebp+0x0],al
30021d82:	js     0x30021d84
30021d84:	je     0x30021d86
30021d86:	add    BYTE PTR gs:[esi+0x0],ch
30021d8a:	jae    0x30021d8c
30021d8c:	imul   eax,DWORD PTR [eax],0x6e006f
30021d92:	jae    0x30021d94
30021d94:	inc    esi
30021d95:	add    BYTE PTR [edi+0x0],ch
30021d98:	ins    BYTE PTR es:[edi],dx
30021d99:	add    BYTE PTR [eax+eax*1+0x65],ah
30021d9d:	add    BYTE PTR [edx+0x0],dh
30021da0:	and    al,0x0
30021da2:	cmp    eax,DWORD PTR [eax]
30021da4:	and    al,0x0
30021da6:	push   edx
30021da7:	add    BYTE PTR [edi+0x0],ch
30021daa:	outs   dx,DWORD PTR ds:[esi]
30021dab:	add    BYTE PTR [eax+eax*1+0x46],dh
30021daf:	add    BYTE PTR [edi+0x0],ch
30021db2:	ins    BYTE PTR es:[edi],dx
30021db3:	add    BYTE PTR [eax+eax*1+0x65],ah
30021db7:	add    BYTE PTR [edx+0x0],dh
30021dba:	and    al,0x0
30021dbc:	inc    ebx
30021dbd:	add    BYTE PTR [edi+0x0],ch
30021dc0:	ins    DWORD PTR es:[edi],dx
30021dc1:	add    BYTE PTR [ebp+0x0],ch
30021dc4:	outs   dx,DWORD PTR ds:[esi]
30021dc5:	add    BYTE PTR [esi+0x0],ch
30021dc8:	aaa    
30021dc9:	add    BYTE PTR [eax+eax*1+0x49],bl
30021dcd:	add    BYTE PTR [eax+eax*1+0x45],al
30021dd1:	add    BYTE PTR [eax+eax*1+0x43],bl
30021dd5:	add    BYTE PTR [edi+0x0],ch
30021dd8:	ins    DWORD PTR es:[edi],dx
30021dd9:	add    BYTE PTR [ebp+0x0],ch
30021ddc:	outs   dx,DWORD PTR ds:[esi]
30021ddd:	add    BYTE PTR [esi+0x0],ch
30021de0:	inc    ebp
30021de1:	add    BYTE PTR [eax+0x0],bh
30021de4:	je     0x30021de6
30021de6:	add    BYTE PTR gs:[esi+0x0],ch
30021dea:	jae    0x30021dec
30021dec:	imul   eax,DWORD PTR [eax],0x6e006f
30021df2:	jae    0x30021df4
30021df4:	add    BYTE PTR [eax],al
30021df6:	nop
30021df7:	nop
30021df8:	push   eax
30021df9:	add    BYTE PTR [ebx+0x0],ch
30021dfc:	add    BYTE PTR [si+0x0],al
30021e00:	add    BYTE PTR gs:[esi+0x0],ah
30021e04:	and    BYTE PTR [eax],al
30021e06:	arpl   WORD PTR [eax],ax
30021e08:	outs   dx,DWORD PTR ds:[esi]
30021e09:	add    BYTE PTR [esi+0x0],ch
30021e0c:	data16 add BYTE PTR [ecx+0x0],ch
30021e10:	add    BYTE PTR [di+0x0],dh
30021e14:	jb     0x30021e16
30021e16:	popa   
30021e17:	add    BYTE PTR [eax+eax*1+0x69],dh
30021e1b:	add    BYTE PTR [edi+0x0],ch
30021e1e:	outs   dx,BYTE PTR ds:[esi]
30021e1f:	add    BYTE PTR [eax],ah
30021e21:	add    BYTE PTR [ebp+0x0],ah
30021e24:	jb     0x30021e26
30021e26:	jb     0x30021e28
30021e28:	outs   dx,DWORD PTR ds:[esi]
30021e29:	add    BYTE PTR [edx+0x0],dh
30021e2c:	add    BYTE PTR cs:[eax],ah
30021e2f:	add    BYTE PTR [ecx+0x0],al
30021e32:	jo     0x30021e34
30021e34:	jo     0x30021e36
30021e36:	ins    BYTE PTR es:[edi],dx
30021e37:	add    BYTE PTR [ecx+0x0],ch
30021e3a:	arpl   WORD PTR [eax],ax
30021e3c:	popa   
30021e3d:	add    BYTE PTR [eax+eax*1+0x69],dh
30021e41:	add    BYTE PTR [edi+0x0],ch
30021e44:	outs   dx,BYTE PTR ds:[esi]
30021e45:	add    BYTE PTR [ebp+0x0],al
30021e48:	js     0x30021e4a
30021e4a:	je     0x30021e4c
30021e4c:	add    BYTE PTR gs:[esi+0x0],ch
30021e50:	jae    0x30021e52
30021e52:	imul   eax,DWORD PTR [eax],0x6e006f
30021e58:	jae    0x30021e5a
30021e5a:	inc    esi
30021e5b:	add    BYTE PTR [edi+0x0],ch
30021e5e:	ins    BYTE PTR es:[edi],dx
30021e5f:	add    BYTE PTR [eax+eax*1+0x65],ah
30021e63:	add    BYTE PTR [edx+0x0],dh
30021e66:	and    BYTE PTR [eax],al
30021e68:	outs   dx,DWORD PTR ds:[esi]
30021e69:	add    BYTE PTR [ebp+0x0],ch
30021e6c:	imul   eax,DWORD PTR [eax],0x740074
30021e72:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30021e77:	add    BYTE PTR [esi+0x0],ah
30021e7a:	jb     0x30021e7c
30021e7c:	outs   dx,DWORD PTR ds:[esi]
30021e7d:	add    BYTE PTR [ebp+0x0],ch
30021e80:	and    BYTE PTR [eax],al
30021e82:	push   eax
30021e83:	add    BYTE PTR [ebx+0x0],ch
30021e86:	add    BYTE PTR [si+0x0],al
30021e8a:	add    BYTE PTR gs:[esi+0x0],ah
30021e8e:	push   ebx
30021e8f:	add    BYTE PTR [ebp+0x0],ah
30021e92:	popa   
30021e93:	add    BYTE PTR [edx+0x0],dh
30021e96:	arpl   WORD PTR [eax],ax
30021e98:	push   0x61005000
30021e9d:	add    BYTE PTR [eax+eax*1+0x68],dh
30021ea1:	add    BYTE PTR [eax],al
30021ea3:	add    BYTE PTR [eax+0x0],dl
30021ea6:	imul   eax,DWORD PTR [eax],0x67
30021ea9:	add    BYTE PTR [eax+eax*1+0x65],al
30021ead:	add    BYTE PTR [esi+0x0],ah
30021eb0:	dec    ebp
30021eb1:	add    BYTE PTR [ecx+0x0],ah
30021eb4:	outs   dx,BYTE PTR ds:[esi]
30021eb5:	add    BYTE PTR [ecx+0x0],ah
30021eb8:	add    BYTE PTR [di+0x0],ah
30021ebc:	ins    DWORD PTR es:[edi],dx
30021ebd:	add    BYTE PTR [ebp+0x0],ah
30021ec0:	outs   dx,BYTE PTR ds:[esi]
30021ec1:	add    BYTE PTR [eax+eax*1+0x20],dh
30021ec5:	add    BYTE PTR [ecx+0x0],ch
30021ec8:	outs   dx,BYTE PTR ds:[esi]
30021ec9:	add    BYTE PTR [ecx+0x0],ch
30021ecc:	je     0x30021ece
30021ece:	imul   eax,DWORD PTR [eax],0x6c0061
30021ed4:	imul   eax,DWORD PTR [eax],0x65007a
30021eda:	add    BYTE PTR fs:[eax],al
30021edd:	add    BYTE PTR [eax+0x25002290],dl
30021ee3:	add    BYTE PTR [ebx+0x0],dh
30021ee6:	and    al,BYTE PTR [eax]
30021ee8:	and    BYTE PTR [eax],al
30021eea:	cmp    eax,0x64002000
30021eef:	add    BYTE PTR [edi+0x0],dh
30021ef2:	outs   dx,DWORD PTR ds:[esi]
30021ef3:	add    BYTE PTR [edx+0x0],dh
30021ef6:	add    BYTE PTR fs:[edx],bh
30021ef9:	add    BYTE PTR ds:0x2c006400,ah
30021eff:	add    BYTE PTR [eax],ah
30021f01:	add    BYTE PTR [edx],ah
30021f03:	add    BYTE PTR ds:0x22007300,ah
30021f09:	add    BYTE PTR [eax],ah
30021f0b:	add    BYTE PTR ds:0x64002000,bh
30021f11:	add    BYTE PTR [edi+0x0],dh
30021f14:	outs   dx,DWORD PTR ds:[esi]
30021f15:	add    BYTE PTR [edx+0x0],dh
30021f18:	add    BYTE PTR fs:[edx],bh
30021f1b:	add    BYTE PTR ds:0x6400,ah
30021f21:	add    BYTE PTR [ebx],dh
30021f23:	shr    cl,0x32
30021f26:	sar    bh,0xff
30021f29:	push   DWORD PTR [esi+0x40]
30021f2c:	xor    edx,edx
30021f2e:	push   0x30021f88
30021f33:	push   0x3
30021f35:	pop    ecx
30021f36:	call   0x30033ac0
30021f3b:	jmp    0x3001ded4
30021f40:	lea    ecx,[ebp-0x8]
30021f43:	call   0x300051c8
30021f48:	push   DWORD PTR [edi+0x14]
30021f4b:	lea    eax,[ebp-0x8]
30021f4e:	push   0x30021fd8
30021f53:	push   eax
30021f54:	call   0x30005153
30021f59:	add    esp,0xc
30021f5c:	cmp    BYTE PTR ds:0x300430f1,0x0
30021f63:	je     0x30021f76
30021f65:	call   0x30033b12
30021f6a:	push   DWORD PTR [ebp-0x8]
30021f6d:	mov    edx,DWORD PTR [eax]
30021f6f:	push   0x3
30021f71:	mov    ecx,eax
30021f73:	call   DWORD PTR [edx+0x8]
30021f76:	lea    ecx,[ebp-0x8]
30021f79:	call   0x300051a4
30021f7e:	jmp    0x3001df42
30021f83:	nop
30021f84:	nop
30021f85:	nop
30021f86:	nop
30021f87:	nop
30021f88:	push   ebx
30021f89:	add    BYTE PTR [ebp+0x0],ah
30021f8c:	popa   
30021f8d:	add    BYTE PTR [edx+0x0],dh
30021f90:	arpl   WORD PTR [eax],ax
30021f92:	push   0x6e006900
30021f97:	add    BYTE PTR [edi+0x0],ah
30021f9a:	and    BYTE PTR [eax],al
30021f9c:	data16 add BYTE PTR [edi+0x0],ch
30021fa0:	jb     0x30021fa2
30021fa2:	and    BYTE PTR [eax],al
30021fa4:	push   eax
30021fa5:	add    BYTE PTR [ebx+0x0],ch
30021fa8:	add    BYTE PTR [si+0x0],al
30021fac:	add    BYTE PTR gs:[esi+0x0],ah
30021fb0:	jae    0x30021fb2
30021fb2:	and    BYTE PTR [eax],al
30021fb4:	data16 add BYTE PTR [edx+0x0],dh
30021fb8:	outs   dx,DWORD PTR ds:[esi]
30021fb9:	add    BYTE PTR [ebp+0x0],ch
30021fbc:	and    BYTE PTR [eax],al
30021fbe:	jae    0x30021fc0
30021fc0:	add    BYTE PTR gs:[ecx+0x0],ah
30021fc4:	jb     0x30021fc6
30021fc6:	arpl   WORD PTR [eax],ax
30021fc8:	push   0x70002000
30021fcd:	add    BYTE PTR [ecx+0x0],ah
30021fd0:	je     0x30021fd2
30021fd2:	push   0x90000000
30021fd7:	nop
30021fd8:	inc    esp
30021fd9:	add    BYTE PTR [ecx+0x0],ch
30021fdc:	jae    0x30021fde
30021fde:	arpl   WORD PTR [eax],ax
30021fe0:	outs   dx,DWORD PTR ds:[esi]
30021fe1:	add    BYTE PTR [esi+0x0],dh
30021fe4:	add    BYTE PTR gs:[edx+0x0],dh
30021fe8:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30021fed:	add    BYTE PTR ds:0x20006400,ah
30021ff3:	add    BYTE PTR [eax+0x0],dl
30021ff6:	imul   eax,DWORD PTR [eax],0x67
30021ff9:	add    BYTE PTR [eax+eax*1+0x65],al
30021ffd:	add    BYTE PTR [esi+0x0],ah
30022000:	and    BYTE PTR [eax],al
30022002:	data16 add BYTE PTR [ecx+0x0],ch
30022006:	ins    BYTE PTR es:[edi],dx
30022007:	add    BYTE PTR [ebp+0x0],ah
3002200a:	jae    0x3002200c
3002200c:	add    BYTE PTR [eax],al
3002200e:	movzx  eax,ax
30022011:	or     eax,0x80070000
30022016:	test   eax,eax
30022018:	jmp    0x3001b02d
3002201d:	movzx  edi,di
30022020:	or     edi,0x80070000
30022026:	jmp    0x3001b058
3002202b:	cmp    DWORD PTR [ebp-0x8],0x0
3002202f:	je     0x3001b068
30022035:	push   0x3001b078
3002203a:	push   ebx
3002203b:	lea    eax,[ebp-0x4]
3002203e:	push   eax
3002203f:	call   0x3000ba45
30022044:	cmp    BYTE PTR ds:0x300430f1,0x0
3002204b:	je     0x3002205e
3002204d:	push   DWORD PTR [eax]
3002204f:	xor    edx,edx
30022051:	push   0x30022078
30022056:	push   0x2
30022058:	pop    ecx
30022059:	call   0x30033ac0
3002205e:	lea    ecx,[ebp-0x4]
30022061:	call   0x300051a4
30022066:	or     DWORD PTR [esi+0x10],0x4
3002206a:	call   DWORD PTR ds:0x300451a4
30022070:	mov    DWORD PTR [esi+0x14],eax
30022073:	jmp    0x3001b068
30022078:	push   esp
30022079:	add    BYTE PTR [ebp+0x0],dh
3002207c:	jb     0x3002207e
3002207e:	outs   dx,BYTE PTR ds:[esi]
3002207f:	add    BYTE PTR [ecx+0x0],ch
30022082:	outs   dx,BYTE PTR ds:[esi]
30022083:	add    BYTE PTR [edi+0x0],ah
30022086:	and    BYTE PTR [eax],al
30022088:	outs   dx,DWORD PTR ds:[esi]
30022089:	add    BYTE PTR [esi+0x0],ah
3002208c:	data16 add BYTE PTR [eax],ah
3002208f:	add    BYTE PTR [ebx+0x0],ah
30022092:	popa   
30022093:	add    BYTE PTR [ebx+0x0],ah
30022096:	push   0x20006500
3002209b:	add    BYTE PTR [ebx+0x0],ah
3002209e:	push   0x63006500
300220a3:	add    BYTE PTR [ebx+0x0],ch
300220a6:	and    BYTE PTR [eax],al
300220a8:	bound  eax,QWORD PTR [eax]
300220aa:	popa   
300220ab:	add    BYTE PTR [ebx+0x0],dh
300220ae:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
300220b3:	add    BYTE PTR [edi+0x0],ch
300220b6:	outs   dx,BYTE PTR ds:[esi]
300220b7:	add    BYTE PTR [eax],ah
300220b9:	add    BYTE PTR [eax+0x0],cl
300220bc:	dec    ebx
300220bd:	add    BYTE PTR [eax+eax*1+0x4d],cl
300220c1:	add    BYTE PTR [eax],ah
300220c3:	add    BYTE PTR [edx+0x0],dh
300220c6:	add    BYTE PTR gs:[edi+0x0],ah
300220ca:	imul   eax,DWORD PTR [eax],0x740073
300220d0:	jb     0x300220d2
300220d2:	jns    0x300220d4
300220d4:	and    BYTE PTR [eax],al
300220d6:	jae    0x300220d8
300220d8:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
300220dd:	add    BYTE PTR [ecx+0x0],ch
300220e0:	outs   dx,BYTE PTR ds:[esi]
300220e1:	add    BYTE PTR [edi+0x0],ah
300220e4:	add    BYTE PTR [eax],al
300220e6:	cmp    BYTE PTR ds:0x300430f1,0x0
300220ed:	push   esi
300220ee:	mov    esi,0x8000ffff
300220f3:	je     0x30022109
300220f5:	call   0x30033b12
300220fa:	mov    edx,DWORD PTR [eax]
300220fc:	push   esi
300220fd:	push   0x3002a7a0
30022102:	push   0x1
30022104:	mov    ecx,eax
30022106:	call   DWORD PTR [edx+0x4]
30022109:	mov    eax,esi
3002210b:	pop    esi
3002210c:	jmp    0x3000bf19
30022111:	dec    eax
30022112:	je     0x3002211e
30022114:	mov    eax,0x80070057
30022119:	jmp    0x3000bf19
3002211e:	push   DWORD PTR [ebp+0xc]
30022121:	call   0x3003332e
30022126:	jmp    0x3000bf19
3002212b:	cmp    BYTE PTR ds:0x300430f1,0x0
30022132:	push   esi
30022133:	mov    esi,0x8000ffff
30022138:	je     0x3002214e
3002213a:	call   0x30033b12
3002213f:	mov    edx,DWORD PTR [eax]
30022141:	push   esi
30022142:	push   0x3002a7a0
30022147:	push   0x1
30022149:	mov    ecx,eax
3002214b:	call   DWORD PTR [edx+0x4]
3002214e:	mov    eax,esi
30022150:	pop    esi
30022151:	jmp    0x300068e6
30022156:	cmp    BYTE PTR ds:0x300430f1,0x0
3002215d:	mov    esi,0x80070057
30022162:	je     0x300058d0
30022168:	call   0x30033b12
3002216d:	push   esi
3002216e:	push   0x300221e8
30022173:	mov    edx,DWORD PTR [eax]
30022175:	push   0x1
30022177:	mov    ecx,eax
30022179:	call   DWORD PTR [edx+0x4]
3002217c:	jmp    0x300058d0
30022181:	mov    esi,0x8000ffff
30022186:	cmp    BYTE PTR ds:0x300430f1,cl
3002218c:	je     0x300058d0
30022192:	call   0x30033b12
30022197:	push   esi
30022198:	push   0x3002a7a0
3002219d:	jmp    0x30022173
3002219f:	cmp    eax,DWORD PTR [ebp-0x10]
300221a2:	ja     0x300058d7
300221a8:	jmp    0x300058b1
300221ad:	call   DWORD PTR ds:0x30045160
300221b3:	mov    esi,eax
300221b5:	test   esi,esi
300221b7:	jle    0x300221c2
300221b9:	movzx  esi,si
300221bc:	or     esi,0x80070000
300221c2:	cmp    BYTE PTR ds:0x300430f1,0x0
300221c9:	je     0x300058c8
300221cf:	push   0x0
300221d1:	xor    ecx,ecx
300221d3:	push   0x30022248
300221d8:	mov    edx,esi
300221da:	inc    ecx
300221db:	call   0x30033ac0
300221e0:	jmp    0x300058c8
300221e5:	nop
300221e6:	nop
300221e7:	nop
300221e8:	dec    ecx
300221e9:	add    BYTE PTR [esi+0x0],ch
300221ec:	jbe    0x300221ee
300221ee:	popa   
300221ef:	add    BYTE PTR [eax+eax*1+0x69],ch
300221f3:	add    BYTE PTR [eax+eax*1+0x20],ah
300221f7:	add    BYTE PTR [ecx+0x0],ah
300221fa:	jb     0x300221fc
300221fc:	add    BYTE PTR [di+0x0],dh
30022200:	ins    DWORD PTR es:[edi],dx
30022201:	add    BYTE PTR [ebp+0x0],ah
30022204:	outs   dx,BYTE PTR ds:[esi]
30022205:	add    BYTE PTR [eax+eax*1+0x20],dh
30022209:	add    BYTE PTR [eax+eax*1+0x6f],dh
3002220d:	add    BYTE PTR [eax],ah
3002220f:	add    BYTE PTR [edi+0x0],al
30022212:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
30022217:	add    BYTE PTR [edi+0x0],ch
3002221a:	outs   dx,BYTE PTR ds:[esi]
3002221b:	add    BYTE PTR [esi+0x0],ah
3002221e:	imul   eax,DWORD PTR [eax],0x750067
30022224:	jb     0x30022226
30022226:	popa   
30022227:	add    BYTE PTR [eax+eax*1+0x69],dh
3002222b:	add    BYTE PTR [edi+0x0],ch
3002222e:	outs   dx,BYTE PTR ds:[esi]
3002222f:	add    BYTE PTR [eax+eax*1+0x69],dl
30022233:	add    BYTE PTR [ebp+0x0],ch
30022236:	add    BYTE PTR gs:[ebx+0x0],dh
3002223a:	je     0x3002223c
3002223c:	popa   
3002223d:	add    BYTE PTR [ebp+0x0],ch
30022240:	jo     0x30022242
30022242:	add    BYTE PTR [eax],al
30022244:	nop
30022245:	nop
30022246:	nop
30022247:	nop
30022248:	inc    ebx
30022249:	add    BYTE PTR [edi+0x0],ch
3002224c:	jne    0x3002224e
3002224e:	ins    BYTE PTR es:[edi],dx
3002224f:	add    BYTE PTR [eax+eax*1+0x20],ah
30022253:	add    BYTE PTR [esi+0x0],ch
30022256:	outs   dx,DWORD PTR ds:[esi]
30022257:	add    BYTE PTR [eax+eax*1+0x20],dh
3002225b:	add    BYTE PTR [ebx+0x0],ah
3002225e:	outs   dx,DWORD PTR ds:[esi]
3002225f:	add    BYTE PTR [esi+0x0],ch
30022262:	jbe    0x30022264
30022264:	add    BYTE PTR gs:[edx+0x0],dh
30022268:	je     0x3002226a
3002226a:	and    BYTE PTR [eax],al
3002226c:	data16 add BYTE PTR [ecx+0x0],ch
30022270:	ins    BYTE PTR es:[edi],dx
30022271:	add    BYTE PTR [ebp+0x0],ah
30022274:	and    BYTE PTR [eax],al
30022276:	je     0x30022278
30022278:	imul   eax,DWORD PTR [eax],0x65006d
3002227e:	and    BYTE PTR [eax],al
30022280:	je     0x30022282
30022282:	outs   dx,DWORD PTR ds:[esi]
30022283:	add    BYTE PTR [eax],ah
30022285:	add    BYTE PTR [ebx+0x0],dh
30022288:	jns    0x3002228a
3002228a:	jae    0x3002228c
3002228c:	je     0x3002228e
3002228e:	add    BYTE PTR gs:[ebp+0x0],ch
30022292:	and    BYTE PTR [eax],al
30022294:	je     0x30022296
30022296:	imul   eax,DWORD PTR [eax],0x65006d
3002229c:	add    BYTE PTR [eax],al
3002229e:	mov    esi,0x8000ffff
300222a3:	cmp    BYTE PTR ds:0x300430f1,al
300222a9:	je     0x300222bf
300222ab:	call   0x30033b12
300222b0:	push   esi
300222b1:	push   0x3002a7a0
300222b6:	mov    edx,DWORD PTR [eax]
300222b8:	push   0x1
300222ba:	mov    ecx,eax
300222bc:	call   DWORD PTR [edx+0x4]
300222bf:	mov    eax,esi
300222c1:	jmp    0x3000c02f
300222c6:	cmp    BYTE PTR ds:0x300430f1,0x0
300222cd:	mov    esi,0x8000ffff
300222d2:	je     0x300222bf
300222d4:	call   0x30033b12
300222d9:	push   esi
300222da:	push   0x300222e8
300222df:	jmp    0x300222b6
300222e1:	nop
300222e2:	nop
300222e3:	nop
300222e4:	nop
300222e5:	nop
300222e6:	nop
300222e7:	nop
300222e8:	push   eax
300222e9:	add    BYTE PTR [ebx+0x0],ch
300222ec:	add    BYTE PTR [si+0x0],al
300222f0:	add    BYTE PTR gs:[esi+0x0],ah
300222f4:	dec    ebp
300222f5:	add    BYTE PTR [ecx+0x0],ah
300222f8:	outs   dx,BYTE PTR ds:[esi]
300222f9:	add    BYTE PTR [ecx+0x0],ah
300222fc:	add    BYTE PTR [di+0x0],ah
30022300:	ins    DWORD PTR es:[edi],dx
30022301:	add    BYTE PTR [ebp+0x0],ah
30022304:	outs   dx,BYTE PTR ds:[esi]
30022305:	add    BYTE PTR [eax+eax*1+0x20],dh
30022309:	add    BYTE PTR [edi+0x0],ch
3002230c:	outs   dx,BYTE PTR ds:[esi]
3002230d:	add    BYTE PTR [eax+eax*1+0x79],ch
30022311:	add    BYTE PTR [eax],ah
30022313:	add    BYTE PTR [eax+0x0],dh
30022316:	popa   
30022317:	add    BYTE PTR [edx+0x0],dh
3002231a:	je     0x3002231c
3002231c:	imul   eax,DWORD PTR [eax],0x6c0061
30022322:	ins    BYTE PTR es:[edi],dx
30022323:	add    BYTE PTR [ecx+0x0],bh
30022326:	and    BYTE PTR [eax],al
30022328:	imul   eax,DWORD PTR [eax],0x69006e
3002232e:	je     0x30022330
30022330:	imul   eax,DWORD PTR [eax],0x6c0061
30022336:	imul   eax,DWORD PTR [eax],0x65007a
3002233c:	add    BYTE PTR fs:[eax],al
3002233f:	add    BYTE PTR [ebx+0x7400147e],al
30022345:	sbb    al,0x80
30022347:	cmp    eax,0x300430f1
3002234c:	add    BYTE PTR [ebx+edx*1-0x18],dh
30022350:	mov    esi,0x8b000117
30022355:	adc    BYTE PTR [eax+0x68],ch
30022358:	and    eax,DWORD PTR [edx]
3002235a:	xor    BYTE PTR [edx+0x2],ch
3002235d:	mov    ecx,eax
3002235f:	call   DWORD PTR [edx+0x8]
30022362:	mov    eax,DWORD PTR [esi+0x14]
30022365:	pop    esi
30022366:	ret    
30022367:	nop
30022368:	push   esp
30022369:	add    BYTE PTR [eax+0x0],ch
3002236c:	jb     0x3002236e
3002236e:	add    BYTE PTR gs:[ecx+0x0],ah
30022372:	add    BYTE PTR fs:[ecx+0x0],cl
30022376:	inc    esp
30022377:	add    BYTE PTR [eax],ah
30022379:	add    BYTE PTR [ebp+0x0],ch
3002237c:	jne    0x3002237e
3002237e:	jae    0x30022380
30022380:	je     0x30022382
30022382:	and    BYTE PTR [eax],al
30022384:	bound  eax,QWORD PTR [eax]
30022386:	add    BYTE PTR gs:[eax],ah
30022389:	add    BYTE PTR [ebx+0x0],dh
3002238c:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
30022391:	add    BYTE PTR [edi+0x0],dh
30022394:	push   0x6e006500
30022399:	add    BYTE PTR [eax],ah
3002239b:	add    BYTE PTR [ebp+0x0],dh
3002239e:	jae    0x300223a0
300223a0:	imul   eax,DWORD PTR [eax],0x67006e
300223a6:	and    BYTE PTR [eax],al
300223a8:	je     0x300223aa
300223aa:	push   0x20006500
300223af:	add    BYTE PTR [esi+0x0],dl
300223b2:	outs   dx,DWORD PTR ds:[esi]
300223b3:	add    BYTE PTR [eax+eax*1+0x61],ch
300223b7:	add    BYTE PTR [eax+eax*1+0x69],dh
300223bb:	add    BYTE PTR [eax+eax*1+0x65],ch
300223bf:	add    BYTE PTR [eax],ah
300223c1:	add    BYTE PTR [ebx+0x0],ch
300223c4:	add    BYTE PTR gs:[ecx+0x0],bh
300223c8:	and    BYTE PTR [eax],al
300223ca:	ja     0x300223cc
300223cc:	imul   eax,DWORD PTR [eax],0x680074
300223d2:	and    BYTE PTR [eax],al
300223d4:	inc    esp
300223d5:	add    BYTE PTR [ecx+0x0],cl
300223d8:	push   ebx
300223d9:	add    BYTE PTR [ecx+0x0],al
300223dc:	inc    edx
300223dd:	add    BYTE PTR [eax+eax*1+0x45],cl
300223e1:	add    BYTE PTR [ebx+0x0],al
300223e4:	inc    ecx
300223e5:	add    BYTE PTR [ebx+0x0],al
300223e8:	dec    eax
300223e9:	add    BYTE PTR [ebp+0x0],al
300223ec:	inc    ebx
300223ed:	add    BYTE PTR [eax+0x0],cl
300223f0:	inc    ebp
300223f1:	add    BYTE PTR [ebx+0x0],al
300223f4:	dec    ebx
300223f5:	add    BYTE PTR [eax],al
300223f7:	add    bh,bh
300223f9:	aaa    
300223fa:	mov    ecx,0x30022748
300223ff:	call   0x30033b4c
30022404:	jmp    0x3001be48
30022409:	cmp    BYTE PTR [ebp+0x14],0x0
3002240d:	mov    DWORD PTR [ebp-0x264],esi
30022413:	mov    DWORD PTR [ebp-0x260],esi
30022419:	mov    DWORD PTR [ebp-0x25c],esi
3002241f:	jne    0x3002245b
30022421:	push   0x20019
30022426:	push   DWORD PTR [ebx]
30022428:	lea    ecx,[ebp-0x264]
3002242e:	push   0x80000001
30022433:	call   0x300051d9
30022438:	test   eax,eax
3002243a:	jle    0x30022446
3002243c:	movzx  eax,ax
3002243f:	or     eax,0x80070000
30022444:	test   eax,eax
30022446:	jns    0x3002245b
30022448:	push   DWORD PTR [ebx]
3002244a:	mov    edx,eax
3002244c:	mov    ecx,0x300227a0
30022451:	call   0x30033b68
30022456:	jmp    0x30022736
3002245b:	lea    ecx,[ebp-0x218]
30022461:	mov    DWORD PTR [ebp-0x214],0x105
3002246b:	call   0x300051c8
30022470:	and    DWORD PTR [ebp-0x224],esi
30022476:	push   0x0
30022478:	push   0x0
3002247a:	lea    eax,[ebp-0x228]
30022480:	push   eax
30022481:	push   0x0
30022483:	lea    eax,[ebp-0x214]
30022489:	push   eax
3002248a:	lea    eax,[ebp-0x210]
30022490:	push   eax
30022491:	push   0x0
30022493:	jmp    0x30022711
30022498:	test   esi,esi
3002249a:	jle    0x300224a7
3002249c:	movzx  esi,si
3002249f:	or     esi,0x80070000
300224a5:	test   esi,esi
300224a7:	jns    0x300224f8
300224a9:	lea    eax,[ebp-0x210]
300224af:	push   eax
300224b0:	push   0x30008fc4
300224b5:	push   edi
300224b6:	lea    eax,[ebp-0x254]
300224bc:	push   eax
300224bd:	call   0x3000ba45
300224c2:	push   eax
300224c3:	lea    eax,[ebp-0x240]
300224c9:	push   eax
300224ca:	call   0x3000ba45
300224cf:	push   DWORD PTR [eax]
300224d1:	mov    edx,esi
300224d3:	mov    ecx,0x30022800
300224d8:	call   0x30033b68
300224dd:	lea    ecx,[ebp-0x240]
300224e3:	call   0x300051a4
300224e8:	lea    ecx,[ebp-0x254]
300224ee:	call   0x300051a4
300224f3:	jmp    0x300226de
300224f8:	cmp    DWORD PTR [ebp-0x228],0x1
300224ff:	je     0x30022572
30022501:	lea    eax,[ebp-0x210]
30022507:	push   eax
30022508:	push   0x30008fc4
3002250d:	push   edi
3002250e:	lea    eax,[ebp-0x238]
30022514:	push   eax
30022515:	call   0x3000ba45
3002251a:	push   eax
3002251b:	lea    eax,[ebp-0x26c]
30022521:	push   eax
30022522:	call   0x3000ba45
30022527:	cmp    BYTE PTR ds:0x300430f1,0x0
3002252e:	mov    ecx,DWORD PTR [eax]
30022530:	je     0x3002255c
30022532:	call   0x30033b12
30022537:	mov    edx,DWORD PTR [eax]
30022539:	push   0x8000ffff
3002253e:	test   ecx,ecx
30022540:	jne    0x30022550
30022542:	push   0x30022850
30022547:	push   0x1
30022549:	mov    ecx,eax
3002254b:	call   DWORD PTR [edx+0x4]
3002254e:	jmp    0x3002255c
30022550:	push   ecx
30022551:	push   0x30022850
30022556:	push   0x1
30022558:	mov    ecx,eax
3002255a:	call   DWORD PTR [edx]
3002255c:	lea    ecx,[ebp-0x26c]
30022562:	call   0x300051a4
30022567:	lea    ecx,[ebp-0x238]
3002256d:	jmp    0x300224ee
30022572:	xor    bl,bl
30022574:	cmp    BYTE PTR [ebp+0x14],bl
30022577:	jne    0x30022648
3002257d:	lea    ecx,[ebp-0x21c]
30022583:	call   0x300051c8
30022588:	mov    eax,0x104
3002258d:	push   eax
3002258e:	lea    ecx,[ebp-0x21c]
30022594:	mov    DWORD PTR [ebp-0x268],eax
3002259a:	call   0x30004286
3002259f:	lea    ecx,[ebp-0x268]
300225a5:	push   ecx
300225a6:	push   eax
300225a7:	lea    eax,[ebp-0x210]
300225ad:	push   eax
300225ae:	lea    ecx,[ebp-0x264]
300225b4:	call   0x3001c8be
300225b9:	mov    esi,eax
300225bb:	test   esi,esi
300225bd:	jle    0x300225ca
300225bf:	movzx  esi,si
300225c2:	or     esi,0x80070000
300225c8:	test   esi,esi
300225ca:	jns    0x3002261d
300225cc:	lea    eax,[ebp-0x210]
300225d2:	push   eax
300225d3:	push   0x30008fc4
300225d8:	push   DWORD PTR [ebp-0x248]
300225de:	lea    eax,[ebp-0x250]
300225e4:	push   eax
300225e5:	call   0x3000ba45
300225ea:	push   eax
300225eb:	lea    eax,[ebp-0x258]
300225f1:	push   eax
300225f2:	call   0x3000ba45
300225f7:	push   DWORD PTR [eax]
300225f9:	mov    edx,esi
300225fb:	mov    ecx,0x300228b8
30022600:	call   0x30033b4c
30022605:	lea    ecx,[ebp-0x258]
3002260b:	call   0x300051a4
30022610:	lea    ecx,[ebp-0x250]
30022616:	call   0x300051a4
3002261b:	jmp    0x30022635
3002261d:	push   0x30022900
30022622:	lea    ecx,[ebp-0x21c]
30022628:	call   0x3000927b
3002262d:	mov    ebx,eax
3002262f:	neg    ebx
30022631:	sbb    bl,bl
30022633:	inc    bl
30022635:	lea    ecx,[ebp-0x21c]
3002263b:	call   0x300051a4
30022640:	test   bl,bl
30022642:	jne    0x300226de
30022648:	lea    eax,[ebp-0x210]
3002264e:	push   eax
3002264f:	lea    ecx,[ebp-0x220]
30022655:	call   0x3000437e
3002265a:	lea    eax,[ebp-0x218]
30022660:	push   eax
30022661:	lea    edx,[ebp-0x220]
30022667:	lea    ecx,[ebp-0x234]
3002266d:	call   0x3000e5e4
30022672:	lea    ecx,[ebp-0x220]
30022678:	mov    esi,eax
3002267a:	call   0x300051a4
3002267f:	test   esi,esi
30022681:	jns    0x300226cd
30022683:	lea    eax,[ebp-0x210]
30022689:	push   eax
3002268a:	push   0x30008fc4
3002268f:	push   edi
30022690:	lea    eax,[ebp-0x244]
30022696:	push   eax
30022697:	call   0x3000ba45
3002269c:	push   eax
3002269d:	lea    eax,[ebp-0x23c]
300226a3:	push   eax
300226a4:	call   0x3000ba45
300226a9:	push   DWORD PTR [eax]
300226ab:	mov    edx,esi
300226ad:	mov    ecx,0x30022940
300226b2:	call   0x30033b68
300226b7:	lea    ecx,[ebp-0x23c]
300226bd:	call   0x300051a4
300226c2:	lea    ecx,[ebp-0x244]
300226c8:	jmp    0x300224ee
300226cd:	push   DWORD PTR [ebp-0x218]
300226d3:	mov    ecx,DWORD PTR [ebp-0x24c]
300226d9:	call   0x3000b906
300226de:	mov    eax,DWORD PTR [ebp-0x224]
300226e4:	push   0x0
300226e6:	push   0x0
300226e8:	lea    ecx,[ebp-0x228]
300226ee:	push   ecx
300226ef:	push   0x0
300226f1:	lea    ecx,[ebp-0x214]
300226f7:	push   ecx
300226f8:	lea    ecx,[ebp-0x210]
300226fe:	inc    eax
300226ff:	push   ecx
30022700:	mov    DWORD PTR [ebp-0x224],eax
30022706:	mov    DWORD PTR [ebp-0x214],0x105
30022710:	push   eax
30022711:	push   DWORD PTR [ebp-0x234]
30022717:	call   DWORD PTR ds:0x30045040
3002271d:	mov    esi,eax
3002271f:	cmp    esi,0x103
30022725:	jne    0x30022498
3002272b:	lea    ecx,[ebp-0x218]
30022731:	call   0x300051a4
30022736:	lea    ecx,[ebp-0x264]
3002273c:	call   0x300051ae
30022741:	jmp    0x3001be48
30022746:	nop
30022747:	nop
30022748:	inc    ebp
30022749:	add    BYTE PTR [edx+0x0],dh
3002274c:	jb     0x3002274e
3002274e:	outs   dx,DWORD PTR ds:[esi]
3002274f:	add    BYTE PTR [edx+0x0],dh
30022752:	and    BYTE PTR [eax],al
30022754:	ja     0x30022756
30022756:	push   0x6c006900
3002275b:	add    BYTE PTR [ebp+0x0],ah
3002275e:	and    BYTE PTR [eax],al
30022760:	popa   
30022761:	add    BYTE PTR [ebx+0x0],ah
30022764:	arpl   WORD PTR [eax],ax
30022766:	add    BYTE PTR gs:[ebx+0x0],dh
3002276a:	jae    0x3002276c
3002276c:	imul   eax,DWORD PTR [eax],0x67006e
30022772:	and    BYTE PTR [eax],al
30022774:	ins    BYTE PTR es:[edi],dx
30022775:	add    BYTE PTR [ecx+0x0],ch
30022778:	jae    0x3002277a
3002277a:	je     0x3002277c
3002277c:	and    BYTE PTR [eax],al
3002277e:	outs   dx,DWORD PTR ds:[esi]
3002277f:	add    BYTE PTR [esi+0x0],ah
30022782:	and    BYTE PTR [eax],al
30022784:	add    BYTE PTR gs:[eax+0x0],bh
30022788:	je     0x3002278a
3002278a:	add    BYTE PTR gs:[esi+0x0],ch
3002278e:	jae    0x30022790
30022790:	imul   eax,DWORD PTR [eax],0x6e006f
30022796:	jae    0x30022798
30022798:	add    BYTE PTR [eax],al
3002279a:	nop
3002279b:	nop
3002279c:	nop
3002279d:	nop
3002279e:	nop
3002279f:	nop
300227a0:	inc    ebp
300227a1:	add    BYTE PTR [edx+0x0],dh
300227a4:	jb     0x300227a6
300227a6:	outs   dx,DWORD PTR ds:[esi]
300227a7:	add    BYTE PTR [edx+0x0],dh
300227aa:	and    BYTE PTR [eax],al
300227ac:	ja     0x300227ae
300227ae:	push   0x6c006900
300227b3:	add    BYTE PTR [ebp+0x0],ah
300227b6:	and    BYTE PTR [eax],al
300227b8:	popa   
300227b9:	add    BYTE PTR [ebx+0x0],ah
300227bc:	arpl   WORD PTR [eax],ax
300227be:	add    BYTE PTR gs:[ebx+0x0],dh
300227c2:	jae    0x300227c4
300227c4:	imul   eax,DWORD PTR [eax],0x67006e
300227ca:	and    BYTE PTR [eax],al
300227cc:	ins    BYTE PTR es:[edi],dx
300227cd:	add    BYTE PTR [ecx+0x0],ch
300227d0:	jae    0x300227d2
300227d2:	je     0x300227d4
300227d4:	and    BYTE PTR [eax],al
300227d6:	outs   dx,DWORD PTR ds:[esi]
300227d7:	add    BYTE PTR [esi+0x0],ah
300227da:	and    BYTE PTR [eax],al
300227dc:	add    BYTE PTR gs:[eax+0x0],bh
300227e0:	je     0x300227e2
300227e2:	add    BYTE PTR gs:[esi+0x0],ch
300227e6:	jae    0x300227e8
300227e8:	imul   eax,DWORD PTR [eax],0x6e006f
300227ee:	and    BYTE PTR [eax],al
300227f0:	je     0x300227f2
300227f2:	jns    0x300227f4
300227f4:	jo     0x300227f6
300227f6:	add    BYTE PTR gs:[ebx+0x0],dh
300227fa:	add    BYTE PTR [eax],al
300227fc:	nop
300227fd:	nop
300227fe:	nop
300227ff:	nop
30022800:	inc    ebp
30022801:	add    BYTE PTR [edx+0x0],dh
30022804:	jb     0x30022806
30022806:	outs   dx,DWORD PTR ds:[esi]
30022807:	add    BYTE PTR [edx+0x0],dh
3002280a:	and    BYTE PTR [eax],al
3002280c:	ja     0x3002280e
3002280e:	push   0x6c006900
30022813:	add    BYTE PTR [ebp+0x0],ah
30022816:	and    BYTE PTR [eax],al
30022818:	add    BYTE PTR gs:[esi+0x0],ch
3002281c:	jne    0x3002281e
3002281e:	ins    DWORD PTR es:[edi],dx
3002281f:	add    BYTE PTR [ebp+0x0],ah
30022822:	jb     0x30022824
30022824:	popa   
30022825:	add    BYTE PTR [eax+eax*1+0x69],dh
30022829:	add    BYTE PTR [esi+0x0],ch
3002282c:	add    BYTE PTR [bx+si],ah
3002282f:	add    BYTE PTR [ebp+0x0],ah
30022832:	js     0x30022834
30022834:	je     0x30022836
30022836:	add    BYTE PTR gs:[esi+0x0],ch
3002283a:	jae    0x3002283c
3002283c:	imul   eax,DWORD PTR [eax],0x6e006f
30022842:	jae    0x30022844
30022844:	and    BYTE PTR [eax],al
30022846:	ins    BYTE PTR es:[edi],dx
30022847:	add    BYTE PTR [ecx+0x0],ch
3002284a:	jae    0x3002284c
3002284c:	je     0x3002284e
3002284e:	add    BYTE PTR [eax],al
30022850:	inc    ebp
30022851:	add    BYTE PTR [eax+0x0],bh
30022854:	jo     0x30022856
30022856:	add    BYTE PTR gs:[ebx+0x0],ah
3002285a:	je     0x3002285c
3002285c:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30022861:	add    BYTE PTR [edi+0x0],ch
30022864:	outs   dx,BYTE PTR ds:[esi]
30022865:	add    BYTE PTR [eax+eax*1+0x79],ch
30022869:	add    BYTE PTR [eax],ah
3002286b:	add    BYTE PTR [ebx+0x0],dh
3002286e:	je     0x30022870
30022870:	jb     0x30022872
30022872:	imul   eax,DWORD PTR [eax],0x67006e
30022878:	jae    0x3002287a
3002287a:	and    BYTE PTR [eax],al
3002287c:	imul   eax,DWORD PTR [eax],0x20006e
30022882:	add    BYTE PTR gs:[esi+0x0],ch
30022886:	popa   
30022887:	add    BYTE PTR [edx+0x0],ah
3002288a:	ins    BYTE PTR es:[edi],dx
3002288b:	add    BYTE PTR [ebp+0x0],ah
3002288e:	add    BYTE PTR fs:[eax],ah
30022891:	add    BYTE PTR [ebp+0x0],ah
30022894:	js     0x30022896
30022896:	je     0x30022898
30022898:	add    BYTE PTR gs:[esi+0x0],ch
3002289c:	jae    0x3002289e
3002289e:	imul   eax,DWORD PTR [eax],0x6e006f
300228a4:	jae    0x300228a6
300228a6:	and    BYTE PTR [eax],al
300228a8:	ins    BYTE PTR es:[edi],dx
300228a9:	add    BYTE PTR [ecx+0x0],ch
300228ac:	jae    0x300228ae
300228ae:	je     0x300228b0
300228b0:	add    BYTE PTR [eax],al
300228b2:	nop
300228b3:	nop
300228b4:	nop
300228b5:	nop
300228b6:	nop
300228b7:	nop
300228b8:	inc    ebx
300228b9:	add    BYTE PTR [edi+0x0],ch
300228bc:	jne    0x300228be
300228be:	ins    BYTE PTR es:[edi],dx
300228bf:	add    BYTE PTR [eax+eax*1+0x20],ah
300228c3:	add    BYTE PTR [esi+0x0],ch
300228c6:	outs   dx,DWORD PTR ds:[esi]
300228c7:	add    BYTE PTR [eax+eax*1+0x20],dh
300228cb:	add    BYTE PTR [ecx+0x0],dh
300228ce:	jne    0x300228d0
300228d0:	add    BYTE PTR gs:[edx+0x0],dh
300228d4:	jns    0x300228d6
300228d6:	and    BYTE PTR [eax],al
300228d8:	je     0x300228da
300228da:	jns    0x300228dc
300228dc:	jo     0x300228de
300228de:	add    BYTE PTR gs:[eax],ah
300228e1:	add    BYTE PTR [esi+0x0],ah
300228e4:	outs   dx,DWORD PTR ds:[esi]
300228e5:	add    BYTE PTR [edx+0x0],dh
300228e8:	and    BYTE PTR [eax],al
300228ea:	add    BYTE PTR gs:[eax+0x0],bh
300228ee:	je     0x300228f0
300228f0:	add    BYTE PTR gs:[esi+0x0],ch
300228f4:	jae    0x300228f6
300228f6:	imul   eax,DWORD PTR [eax],0x6e006f
300228fc:	add    BYTE PTR cs:[eax],al
300228ff:	add    BYTE PTR [ebp+0x0],cl
30022902:	imul   eax,DWORD PTR [eax],0x720063
30022908:	outs   dx,DWORD PTR ds:[esi]
30022909:	add    BYTE PTR [ebx+0x0],dh
3002290c:	outs   dx,DWORD PTR ds:[esi]
3002290d:	add    BYTE PTR [esi+0x0],ah
30022910:	je     0x30022912
30022912:	add    BYTE PTR cs:[esi+0x0],dl
30022916:	imul   eax,DWORD PTR [eax],0x750073
3002291c:	popa   
3002291d:	add    BYTE PTR [eax+eax*1+0x53],ch
30022921:	add    BYTE PTR [eax+eax*1+0x75],dh
30022925:	add    BYTE PTR [eax+eax*1+0x69],ah
30022929:	add    BYTE PTR [edi+0x0],ch
3002292c:	add    BYTE PTR cs:[ebx+0x0],dl
30022930:	popa   
30022931:	add    BYTE PTR [ebp+0x0],ch
30022934:	jo     0x30022936
30022936:	ins    BYTE PTR es:[edi],dx
30022937:	add    BYTE PTR [ebp+0x0],ah
3002293a:	add    BYTE PTR [eax],al
3002293c:	nop
3002293d:	nop
3002293e:	nop
3002293f:	nop
30022940:	inc    ebp
30022941:	add    BYTE PTR [edx+0x0],dh
30022944:	jb     0x30022946
30022946:	outs   dx,DWORD PTR ds:[esi]
30022947:	add    BYTE PTR [edx+0x0],dh
3002294a:	and    BYTE PTR [eax],al
3002294c:	ja     0x3002294e
3002294e:	push   0x6c006900
30022953:	add    BYTE PTR [ebp+0x0],ah
30022956:	and    BYTE PTR [eax],al
30022958:	jb     0x3002295a
3002295a:	add    BYTE PTR gs:[eax+eax*1+0x72],dh
3002295f:	add    BYTE PTR [ecx+0x0],ch
30022962:	add    BYTE PTR gs:[esi+0x0],dh
30022966:	imul   eax,DWORD PTR [eax],0x67006e
3002296c:	and    BYTE PTR [eax],al
3002296e:	add    BYTE PTR gs:[esi+0x0],ch
30022972:	popa   
30022973:	add    BYTE PTR [edx+0x0],ah
30022976:	ins    BYTE PTR es:[edi],dx
30022977:	add    BYTE PTR [ebp+0x0],ah
3002297a:	add    BYTE PTR fs:[eax],ah
3002297d:	add    BYTE PTR [ebp+0x0],ah
30022980:	js     0x30022982
30022982:	je     0x30022984
30022984:	add    BYTE PTR gs:[esi+0x0],ch
30022988:	jae    0x3002298a
3002298a:	imul   eax,DWORD PTR [eax],0x6e006f
30022990:	and    BYTE PTR [eax],al
30022992:	jo     0x30022994
30022994:	popa   
30022995:	add    BYTE PTR [eax+eax*1+0x68],dh
30022999:	add    BYTE PTR [eax],al
3002299b:	add    BYTE PTR [esi-0x7fff0001],bh
300229a1:	cmp    BYTE PTR ds:0x300430f1,al
300229a7:	je     0x300229bd
300229a9:	call   0x30033b12
300229ae:	mov    edx,DWORD PTR [eax]
300229b0:	push   esi
300229b1:	push   0x3002a7a0
300229b6:	push   0x1
300229b8:	mov    ecx,eax
300229ba:	call   DWORD PTR [edx+0x4]
300229bd:	mov    eax,esi
300229bf:	jmp    0x3000e4e9
300229c4:	mov    esi,0x80070057
300229c9:	test   cl,cl
300229cb:	je     0x3001a4dd
300229d1:	call   0x30033b12
300229d6:	mov    edx,DWORD PTR [eax]
300229d8:	push   esi
300229d9:	push   0x30022bc0
300229de:	push   0x1
300229e0:	mov    ecx,eax
300229e2:	call   DWORD PTR [edx+0x4]
300229e5:	jmp    0x3001a4dd
300229ea:	mov    eax,DWORD PTR [ebx+0x34]
300229ed:	cmp    DWORD PTR [eax-0xc],edi
300229f0:	je     0x30022a6b
300229f2:	cmp    BYTE PTR ds:0x300430f1,0x0
300229f9:	je     0x30022a0e
300229fb:	call   0x30033b12
30022a00:	mov    edx,DWORD PTR [eax]
30022a02:	push   0x30022c84
30022a07:	push   0x3
30022a09:	mov    ecx,eax
30022a0b:	call   DWORD PTR [edx+0x8]
30022a0e:	push   0x88
30022a13:	call   0x30003fee
30022a18:	pop    ecx
30022a19:	mov    DWORD PTR [ebp+0xc],eax
30022a1c:	test   eax,eax
30022a1e:	je     0x3001a4ee
30022a24:	mov    ecx,DWORD PTR [ebp-0x4]
30022a27:	mov    eax,DWORD PTR [ebx+0x38]
30022a2a:	mov    ebx,DWORD PTR [ebx+0x34]
30022a2d:	mov    edi,DWORD PTR [ecx+0x24]
30022a30:	mov    esi,DWORD PTR [ecx+0x8]
30022a33:	mov    DWORD PTR [ebp+0x14],eax
30022a36:	call   0x3001823d
30022a3b:	push   esi
30022a3c:	push   DWORD PTR [ebp+0x10]
30022a3f:	mov    esi,DWORD PTR [ebp+0xc]
30022a42:	push   eax
30022a43:	push   edi
30022a44:	mov    ecx,esi
30022a46:	call   0x30018d03
30022a4b:	push   ebx
30022a4c:	lea    ecx,[esi+0x80]
30022a52:	mov    DWORD PTR [esi],0x30005610
30022a58:	call   0x3000437e
30022a5d:	push   DWORD PTR [ebp+0x14]
30022a60:	lea    ecx,[esi+0x84]
30022a66:	jmp    0x3001a4ad
30022a6b:	cmp    BYTE PTR ds:0x300430f1,0x0
30022a72:	je     0x30022a87
30022a74:	call   0x30033b12
30022a79:	mov    edx,DWORD PTR [eax]
30022a7b:	push   0x30022cc0
30022a80:	push   0x3
30022a82:	mov    ecx,eax
30022a84:	call   DWORD PTR [edx+0x8]
30022a87:	push   0x80
30022a8c:	call   0x30003fee
30022a91:	pop    ecx
30022a92:	mov    DWORD PTR [ebp+0xc],eax
30022a95:	test   eax,eax
30022a97:	je     0x3001a4ee
30022a9d:	mov    edi,DWORD PTR [ebx+0x24]
30022aa0:	mov    esi,DWORD PTR [ebx+0x8]
30022aa3:	mov    ecx,ebx
30022aa5:	call   0x3001823d
30022aaa:	push   esi
30022aab:	push   DWORD PTR [ebp+0x10]
30022aae:	mov    esi,DWORD PTR [ebp+0xc]
30022ab1:	push   eax
30022ab2:	push   edi
30022ab3:	mov    ecx,esi
30022ab5:	call   0x30018d03
30022aba:	mov    DWORD PTR [esi],0x30005658
30022ac0:	jmp    0x3001a4b5
30022ac5:	call   0x30033b12
30022aca:	mov    edx,DWORD PTR [eax]
30022acc:	push   0x30022d00
30022ad1:	push   0x3
30022ad3:	mov    ecx,eax
30022ad5:	call   DWORD PTR [edx+0x8]
30022ad8:	jmp    0x3001a44b
30022add:	mov    eax,DWORD PTR [ebx+0x30]
30022ae0:	mov    DWORD PTR [ebp+0xc],eax
30022ae3:	jmp    0x3001a46d
30022ae8:	cmp    BYTE PTR ds:0x300430f1,0x0
30022aef:	je     0x30022b01
30022af1:	push   edi
30022af2:	push   0x30022d40
30022af7:	push   0x2
30022af9:	mov    edx,esi
30022afb:	pop    ecx
30022afc:	call   0x30033ac0
30022b01:	mov    ecx,DWORD PTR [ebx+0x4]
30022b04:	test   ecx,ecx
30022b06:	je     0x30022b0e
30022b08:	mov    eax,DWORD PTR [ecx]
30022b0a:	push   0x1
30022b0c:	call   DWORD PTR [eax]
30022b0e:	mov    DWORD PTR [ebx+0x4],edi
30022b11:	jmp    0x3001a4d2
30022b16:	cmp    DWORD PTR [ebx+0x18],edi
30022b19:	jne    0x3001a4dd
30022b1f:	cmp    BYTE PTR ds:0x300430f1,0x0
30022b26:	je     0x30022b3b
30022b28:	call   0x30033b12
30022b2d:	mov    edx,DWORD PTR [eax]
30022b2f:	push   0x30022d78
30022b34:	push   0x3
30022b36:	mov    ecx,eax
30022b38:	call   DWORD PTR [edx+0x8]
30022b3b:	push   0x54
30022b3d:	call   0x30003fee
30022b42:	pop    ecx
30022b43:	mov    DWORD PTR [ebp+0x10],eax
30022b46:	test   eax,eax
30022b48:	je     0x30022b6e
30022b4a:	mov    edi,DWORD PTR [ebx+0x24]
30022b4d:	mov    esi,DWORD PTR [ebx+0x8]
30022b50:	mov    ecx,ebx
30022b52:	call   0x3001823d
30022b57:	push   esi
30022b58:	mov    esi,DWORD PTR [ebp+0x10]
30022b5b:	push   eax
30022b5c:	push   edi
30022b5d:	mov    ecx,esi
30022b5f:	call   0x30018c24
30022b64:	mov    DWORD PTR [esi],0x30005168
30022b6a:	xor    edi,edi
30022b6c:	jmp    0x30022b70
30022b6e:	mov    esi,edi
30022b70:	mov    ecx,ebx
30022b72:	mov    DWORD PTR [ebx+0x4],esi
30022b75:	mov    DWORD PTR [ebx+0x1c],0x8000000a
30022b7c:	call   0x3001a348
30022b81:	mov    esi,eax
30022b83:	test   esi,esi
30022b85:	jns    0x3001a4db
30022b8b:	cmp    BYTE PTR ds:0x300430f1,0x0
30022b92:	je     0x30022ba4
30022b94:	push   edi
30022b95:	push   0x30022d40
30022b9a:	push   0x2
30022b9c:	mov    edx,esi
30022b9e:	pop    ecx
30022b9f:	call   0x30033ac0
30022ba4:	mov    ecx,DWORD PTR [ebx+0x4]
30022ba7:	test   ecx,ecx
30022ba9:	je     0x30022bb1
30022bab:	mov    eax,DWORD PTR [ecx]
30022bad:	push   0x1
30022baf:	call   DWORD PTR [eax]
30022bb1:	mov    DWORD PTR [ebx+0x4],edi
30022bb4:	jmp    0x3001a4dd
30022bb9:	nop
30022bba:	nop
30022bbb:	nop
30022bbc:	nop
30022bbd:	nop
30022bbe:	nop
30022bbf:	nop
30022bc0:	push   eax
30022bc1:	add    BYTE PTR [ebx+0x0],cl
30022bc4:	inc    edi
30022bc5:	add    BYTE PTR [eax+eax*1+0x45],al
30022bc9:	add    BYTE PTR [esi+0x0],al
30022bcc:	dec    ebp
30022bcd:	add    BYTE PTR [ecx+0x0],al
30022bd0:	dec    esi
30022bd1:	add    BYTE PTR [ecx+0x0],al
30022bd4:	inc    edi
30022bd5:	add    BYTE PTR [ebp+0x0],al
30022bd8:	dec    ebp
30022bd9:	add    BYTE PTR [ebp+0x0],al
30022bdc:	dec    esi
30022bdd:	add    BYTE PTR [eax+eax*1+0x5f],dl
30022be1:	add    BYTE PTR [eax+eax*1+0x45],al
30022be5:	add    BYTE PTR [eax+eax*1+0x41],cl
30022be9:	add    BYTE PTR [ecx+0x0],bl
30022bec:	inc    ebx
30022bed:	add    BYTE PTR [ecx+0x0],al
30022bf0:	inc    ebx
30022bf1:	add    BYTE PTR [eax+0x0],cl
30022bf4:	inc    ebp
30022bf5:	add    BYTE PTR [ebx+0x0],al
30022bf8:	dec    eax
30022bf9:	add    BYTE PTR [ebp+0x0],al
30022bfc:	inc    ebx
30022bfd:	add    BYTE PTR [ebx+0x0],cl
30022c00:	and    BYTE PTR [eax],al
30022c02:	popa   
30022c03:	add    BYTE PTR [esi+0x0],ch
30022c06:	add    BYTE PTR fs:[eax],ah
30022c09:	add    BYTE PTR [eax+0x0],dl
30022c0c:	dec    ebx
30022c0d:	add    BYTE PTR [edi+0x0],al
30022c10:	inc    esp
30022c11:	add    BYTE PTR [ebp+0x0],al
30022c14:	inc    esi
30022c15:	add    BYTE PTR [ebp+0x0],cl
30022c18:	inc    ecx
30022c19:	add    BYTE PTR [esi+0x0],cl
30022c1c:	inc    ecx
30022c1d:	add    BYTE PTR [edi+0x0],al
30022c20:	inc    ebp
30022c21:	add    BYTE PTR [ebp+0x0],cl
30022c24:	inc    ebp
30022c25:	add    BYTE PTR [esi+0x0],cl
30022c28:	push   esp
30022c29:	add    BYTE PTR [edi+0x0],bl
30022c2c:	inc    esp
30022c2d:	add    BYTE PTR [ecx+0x0],cl
30022c30:	push   ebx
30022c31:	add    BYTE PTR [ecx+0x0],al
30022c34:	inc    edx
30022c35:	add    BYTE PTR [eax+eax*1+0x45],cl
30022c39:	add    BYTE PTR [ebx+0x0],al
30022c3c:	inc    ecx
30022c3d:	add    BYTE PTR [ebx+0x0],al
30022c40:	dec    eax
30022c41:	add    BYTE PTR [ebp+0x0],al
30022c44:	inc    ebx
30022c45:	add    BYTE PTR [eax+0x0],cl
30022c48:	inc    ebp
30022c49:	add    BYTE PTR [ebx+0x0],al
30022c4c:	dec    ebx
30022c4d:	add    BYTE PTR [eax],ah
30022c4f:	add    BYTE PTR [ebp+0x0],ch
30022c52:	jne    0x30022c54
30022c54:	jae    0x30022c56
30022c56:	je     0x30022c58
30022c58:	and    BYTE PTR [eax],al
30022c5a:	bound  eax,QWORD PTR [eax]
30022c5c:	add    BYTE PTR gs:[eax],ah
30022c5f:	add    BYTE PTR [ebp+0x0],dh
30022c62:	jae    0x30022c64
30022c64:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30022c69:	add    BYTE PTR [ebp+0x0],ah
30022c6c:	js     0x30022c6e
30022c6e:	arpl   WORD PTR [eax],ax
30022c70:	ins    BYTE PTR es:[edi],dx
30022c71:	add    BYTE PTR [ebp+0x0],dh
30022c74:	jae    0x30022c76
30022c76:	imul   eax,DWORD PTR [eax],0x650076
30022c7c:	ins    BYTE PTR es:[edi],dx
30022c7d:	add    BYTE PTR [ecx+0x0],bh
30022c80:	add    BYTE PTR [eax],al
30022c82:	nop
30022c83:	nop
30022c84:	inc    ebx
30022c85:	add    BYTE PTR [edx+0x0],dh
30022c88:	add    BYTE PTR gs:[ecx+0x0],ah
30022c8c:	je     0x30022c8e
30022c8e:	imul   eax,DWORD PTR [eax],0x67006e
30022c94:	and    BYTE PTR [eax],al
30022c96:	push   eax
30022c97:	add    BYTE PTR [ebx+0x0],ch
30022c9a:	add    BYTE PTR [si+0x0],al
30022c9e:	add    BYTE PTR gs:[esi+0x0],ah
30022ca2:	inc    ebx
30022ca3:	add    BYTE PTR [ecx+0x0],ah
30022ca6:	arpl   WORD PTR [eax],ax
30022ca8:	push   0x42006500
30022cad:	add    BYTE PTR [edi+0x0],ch
30022cb0:	jne    0x30022cb2
30022cb2:	je     0x30022cb4
30022cb4:	imul   eax,DWORD PTR [eax],0x750071
30022cba:	add    BYTE PTR gs:[eax],al
30022cbd:	add    BYTE PTR [eax+0x72004390],dl
30022cc3:	add    BYTE PTR [ebp+0x0],ah
30022cc6:	popa   
30022cc7:	add    BYTE PTR [eax+eax*1+0x69],dh
30022ccb:	add    BYTE PTR [esi+0x0],ch
30022cce:	add    BYTE PTR [bx+si],ah
30022cd1:	add    BYTE PTR [eax+0x0],dl
30022cd4:	imul   eax,DWORD PTR [eax],0x67
30022cd7:	add    BYTE PTR [eax+eax*1+0x65],al
30022cdb:	add    BYTE PTR [esi+0x0],ah
30022cde:	inc    ebx
30022cdf:	add    BYTE PTR [ecx+0x0],ah
30022ce2:	arpl   WORD PTR [eax],ax
30022ce4:	push   0x50006500
30022ce9:	add    BYTE PTR [edi+0x0],ch
30022cec:	jb     0x30022cee
30022cee:	je     0x30022cf0
30022cf0:	popa   
30022cf1:	add    BYTE PTR [edx+0x0],ah
30022cf4:	ins    BYTE PTR es:[edi],dx
30022cf5:	add    BYTE PTR [ebp+0x0],ah
30022cf8:	add    BYTE PTR [eax],al
30022cfa:	nop
30022cfb:	nop
30022cfc:	nop
30022cfd:	nop
30022cfe:	nop
30022cff:	nop
30022d00:	inc    ebx
30022d01:	add    BYTE PTR [edx+0x0],dh
30022d04:	add    BYTE PTR gs:[ecx+0x0],ah
30022d08:	je     0x30022d0a
30022d0a:	imul   eax,DWORD PTR [eax],0x67006e
30022d10:	and    BYTE PTR [eax],al
30022d12:	push   eax
30022d13:	add    BYTE PTR [ebx+0x0],ch
30022d16:	add    BYTE PTR [si+0x0],al
30022d1a:	add    BYTE PTR gs:[esi+0x0],ah
30022d1e:	inc    ebx
30022d1f:	add    BYTE PTR [ecx+0x0],ah
30022d22:	arpl   WORD PTR [eax],ax
30022d24:	push   0x4e006500
30022d29:	add    BYTE PTR [edi+0x0],ch
30022d2c:	outs   dx,BYTE PTR ds:[esi]
30022d2d:	add    BYTE PTR [esi+0x0],dl
30022d30:	outs   dx,DWORD PTR ds:[esi]
30022d31:	add    BYTE PTR [eax+eax*1+0x61],ch
30022d35:	add    BYTE PTR [eax+eax*1+0x69],dh
30022d39:	add    BYTE PTR [eax+eax*1+0x65],ch
30022d3d:	add    BYTE PTR [eax],al
30022d3f:	add    BYTE PTR [ebp+0x0],dl
30022d42:	outs   dx,BYTE PTR ds:[esi]
30022d43:	add    BYTE PTR [ecx+0x0],ah
30022d46:	bound  eax,QWORD PTR [eax]
30022d48:	ins    BYTE PTR es:[edi],dx
30022d49:	add    BYTE PTR [ebp+0x0],ah
30022d4c:	and    BYTE PTR [eax],al
30022d4e:	je     0x30022d50
30022d50:	outs   dx,DWORD PTR ds:[esi]
30022d51:	add    BYTE PTR [eax],ah
30022d53:	add    BYTE PTR [ecx+0x0],ch
30022d56:	outs   dx,BYTE PTR ds:[esi]
30022d57:	add    BYTE PTR [ecx+0x0],ch
30022d5a:	je     0x30022d5c
30022d5c:	imul   eax,DWORD PTR [eax],0x6c0061
30022d62:	imul   eax,DWORD PTR [eax],0x65007a
30022d68:	and    BYTE PTR [eax],al
30022d6a:	arpl   WORD PTR [eax],ax
30022d6c:	popa   
30022d6d:	add    BYTE PTR [ebx+0x0],ah
30022d70:	push   0x6500
30022d75:	add    BYTE PTR [eax+0x72004390],dl
30022d7b:	add    BYTE PTR [ebp+0x0],ah
30022d7e:	popa   
30022d7f:	add    BYTE PTR [eax+eax*1+0x69],dh
30022d83:	add    BYTE PTR [esi+0x0],ch
30022d86:	add    BYTE PTR [bx+si],ah
30022d89:	add    BYTE PTR [eax+0x0],dl
30022d8c:	imul   eax,DWORD PTR [eax],0x67
30022d8f:	add    BYTE PTR [eax+eax*1+0x65],al
30022d93:	add    BYTE PTR [esi+0x0],ah
30022d96:	inc    ebx
30022d97:	add    BYTE PTR [ecx+0x0],ah
30022d9a:	arpl   WORD PTR [eax],ax
30022d9c:	push   0x56006500
30022da1:	add    BYTE PTR [edi+0x0],ch
30022da4:	ins    BYTE PTR es:[edi],dx
30022da5:	add    BYTE PTR [ecx+0x0],ah
30022da8:	je     0x30022daa
30022daa:	imul   eax,DWORD PTR [eax],0x65006c
30022db0:	add    BYTE PTR [eax],al
30022db2:	inc    edx
30022db3:	jmp    0x30011851
30022db8:	cmp    BYTE PTR ds:0x300430f1,0x0
30022dbf:	mov    esi,0x8000ffff
30022dc4:	je     0x30022dda
30022dc6:	call   0x30033b12
30022dcb:	mov    edx,DWORD PTR [eax]
30022dcd:	push   esi
30022dce:	push   0x30022e98
30022dd3:	push   0x1
30022dd5:	mov    ecx,eax
30022dd7:	call   DWORD PTR [edx+0x4]
30022dda:	mov    eax,esi
30022ddc:	jmp    0x30018bd7
30022de1:	push   DWORD PTR [ebp+0x8]
30022de4:	lea    ecx,[ebp+0x8]
30022de7:	call   0x300089ae
30022dec:	lea    eax,[ebp+0x8]
30022def:	add    esi,0x24
30022df2:	push   eax
30022df3:	mov    ecx,esi
30022df5:	call   0x300014c1
30022dfa:	lea    ecx,[ebp+0x8]
30022dfd:	call   0x300051a4
30022e02:	jmp    0x30018afb
30022e07:	cmp    BYTE PTR ds:0x300430f1,0x0
30022e0e:	mov    ecx,DWORD PTR [esi]
30022e10:	mov    edi,0x80070057
30022e15:	je     0x30018bcd
30022e1b:	call   0x30033b12
30022e20:	mov    edx,DWORD PTR [eax]
30022e22:	push   edi
30022e23:	test   ecx,ecx
30022e25:	jne    0x30022e38
30022e27:	push   0x30022f1c
30022e2c:	push   0x1
30022e2e:	mov    ecx,eax
30022e30:	call   DWORD PTR [edx+0x4]
30022e33:	jmp    0x30018bcd
30022e38:	push   ecx
30022e39:	push   0x30022f1c
30022e3e:	jmp    0x30022e8d
30022e40:	mov    edi,eax
30022e42:	test   edi,edi
30022e44:	js     0x30018bcd
30022e4a:	cmp    DWORD PTR [ebx+0x18],0xffffffff
30022e4e:	jne    0x30018bcd
30022e54:	mov    DWORD PTR [ebx+0x18],0x1
30022e5b:	jmp    0x30018bcd
30022e60:	cmp    BYTE PTR ds:0x300430f1,0x0
30022e67:	mov    ecx,DWORD PTR [esi]
30022e69:	mov    edi,0x80030002
30022e6e:	je     0x30018bcd
30022e74:	call   0x30033b12
30022e79:	mov    edx,DWORD PTR [eax]
30022e7b:	push   edi
30022e7c:	test   ecx,ecx
30022e7e:	jne    0x30022e87
30022e80:	push   0x30022ee4
30022e85:	jmp    0x30022e2c
30022e87:	push   ecx
30022e88:	push   0x30022ee4
30022e8d:	push   0x1
30022e8f:	mov    ecx,eax
30022e91:	call   DWORD PTR [edx]
30022e93:	jmp    0x30018bcd
30022e98:	push   eax
30022e99:	add    BYTE PTR [ebx+0x0],ch
30022e9c:	add    BYTE PTR [si+0x0],al
30022ea0:	add    BYTE PTR gs:[esi+0x0],ah
30022ea4:	dec    ebp
30022ea5:	add    BYTE PTR [ecx+0x0],ah
30022ea8:	outs   dx,BYTE PTR ds:[esi]
30022ea9:	add    BYTE PTR [ecx+0x0],ah
30022eac:	add    BYTE PTR [di+0x0],ah
30022eb0:	ins    DWORD PTR es:[edi],dx
30022eb1:	add    BYTE PTR [ebp+0x0],ah
30022eb4:	outs   dx,BYTE PTR ds:[esi]
30022eb5:	add    BYTE PTR [eax+eax*1+0x20],dh
30022eb9:	add    BYTE PTR [ecx+0x0],ah
30022ebc:	ins    BYTE PTR es:[edi],dx
30022ebd:	add    BYTE PTR [edx+0x0],dh
30022ec0:	add    BYTE PTR gs:[ecx+0x0],ah
30022ec4:	add    BYTE PTR fs:[ecx+0x0],bh
30022ec8:	and    BYTE PTR [eax],al
30022eca:	imul   eax,DWORD PTR [eax],0x69006e
30022ed0:	je     0x30022ed2
30022ed2:	imul   eax,DWORD PTR [eax],0x6c0061
30022ed8:	imul   eax,DWORD PTR [eax],0x65007a
30022ede:	add    BYTE PTR fs:[eax],al
30022ee1:	add    BYTE PTR [eax+0x6f004390],dl
30022ee7:	add    BYTE PTR [ebp+0x0],dh
30022eea:	ins    BYTE PTR es:[edi],dx
30022eeb:	add    BYTE PTR [eax+eax*1+0x20],ah
30022eef:	add    BYTE PTR [esi+0x0],ch
30022ef2:	outs   dx,DWORD PTR ds:[esi]
30022ef3:	add    BYTE PTR [eax+eax*1+0x20],dh
30022ef7:	add    BYTE PTR [eax+eax*1+0x6f],ch
30022efb:	add    BYTE PTR [ebx+0x0],ah
30022efe:	popa   
30022eff:	add    BYTE PTR [eax+eax*1+0x65],dh
30022f03:	add    BYTE PTR [eax],ah
30022f05:	add    BYTE PTR [ebp+0x0],ah
30022f08:	js     0x30022f0a
30022f0a:	add    BYTE PTR gs:[ebx+0x0],ah
30022f0e:	jne    0x30022f10
30022f10:	je     0x30022f12
30022f12:	popa   
30022f13:	add    BYTE PTR [edx+0x0],ah
30022f16:	ins    BYTE PTR es:[edi],dx
30022f17:	add    BYTE PTR [ebp+0x0],ah
30022f1a:	add    BYTE PTR [eax],al
30022f1c:	inc    ebp
30022f1d:	add    BYTE PTR [eax+0x0],bh
30022f20:	add    BYTE PTR gs:[ebx+0x0],ah
30022f24:	jne    0x30022f26
30022f26:	je     0x30022f28
30022f28:	popa   
30022f29:	add    BYTE PTR [edx+0x0],ah
30022f2c:	ins    BYTE PTR es:[edi],dx
30022f2d:	add    BYTE PTR [ebp+0x0],ah
30022f30:	and    BYTE PTR [eax],al
30022f32:	imul   eax,DWORD PTR [eax],0x200073
30022f38:	outs   dx,BYTE PTR ds:[esi]
30022f39:	add    BYTE PTR [edi+0x0],ch
30022f3c:	je     0x30022f3e
30022f3e:	and    BYTE PTR [eax],al
30022f40:	daa    
30022f41:	add    BYTE PTR [esi],ch
30022f43:	add    BYTE PTR [ebp+0x0],al
30022f46:	pop    eax
30022f47:	add    BYTE PTR [ebp+0x0],al
30022f4a:	daa    
30022f4b:	add    BYTE PTR [eax],al
30022f4d:	add    BYTE PTR [ecx-0x73],dl
30022f50:	dec    ebp
30022f51:	or     al,ch
30022f53:	jmp    0xbe022d6b
30022f58:	dec    ebp
30022f59:	or     al,ch
30022f5b:	fs pop edx
30022f5d:	(bad)  
30022f5e:	jmp    FWORD PTR [eax+0x3c]
30022f61:	lods   al,BYTE PTR ds:[esi]
30022f62:	add    BYTE PTR [eax],dh
30022f64:	lea    ecx,[ebp+0xc]
30022f67:	call   0x3000437e
30022f6c:	lea    eax,[ebp+0x8]
30022f6f:	push   eax
30022f70:	lea    eax,[ebp+0xc]
30022f73:	push   eax
30022f74:	mov    ecx,edi
30022f76:	call   0x3000979d
30022f7b:	lea    ecx,[ebp+0xc]
30022f7e:	call   0x300051a4
30022f83:	lea    ecx,[ebp+0x8]
30022f86:	call   0x300051a4
30022f8b:	jmp    0x3001b8e6
30022f90:	movzx  esi,si
30022f93:	or     esi,0x80070000
30022f99:	jmp    0x3001bc64
30022f9e:	movzx  edi,di
30022fa1:	or     edi,0x80070000
30022fa7:	jmp    0x30013835
30022fac:	push   DWORD PTR [ebp-0x8]
30022faf:	lea    ecx,[ebp-0x4]
30022fb2:	call   0x30004340
30022fb7:	push   ebx
30022fb8:	push   ecx
30022fb9:	mov    ecx,DWORD PTR [ebp+0x8]
30022fbc:	push   0x2001f
30022fc1:	mov    eax,DWORD PTR [ecx]
30022fc3:	call   DWORD PTR [eax+0xc]
30022fc6:	push   eax
30022fc7:	push   ecx
30022fc8:	push   DWORD PTR [ebp-0x4]
30022fcb:	lea    ecx,[ebp-0x14]
30022fce:	push   0x80000001
30022fd3:	call   0x30009534
30022fd8:	mov    edi,eax
30022fda:	test   edi,edi
30022fdc:	jle    0x30022fe7
30022fde:	movzx  edi,di
30022fe1:	or     edi,0x80070000
30022fe7:	lea    ecx,[ebp-0x4]
30022fea:	call   0x300051a4
30022fef:	jmp    0x30011292
30022ff4:	push   ebx
30022ff5:	push   ecx
30022ff6:	mov    ecx,DWORD PTR [ebp+0x8]
30022ff9:	push   0x2001f
30022ffe:	mov    eax,DWORD PTR [ecx]
30023000:	mov    DWORD PTR [ebp-0x20],ebx
30023003:	mov    DWORD PTR [ebp-0x1c],ebx
30023006:	mov    DWORD PTR [ebp-0x18],ebx
30023009:	call   DWORD PTR [eax+0xc]
3002300c:	push   eax
3002300d:	push   ecx
3002300e:	push   0x3001b2bc
30023013:	push   DWORD PTR [ebp-0x14]
30023016:	lea    ecx,[ebp-0x20]
30023019:	call   0x30009534
3002301e:	mov    edi,eax
30023020:	test   edi,edi
30023022:	jle    0x3002302f
30023024:	movzx  edi,di
30023027:	or     edi,0x80070000
3002302d:	test   edi,edi
3002302f:	js     0x30023079
30023031:	mov    esi,DWORD PTR [esi+0x4c]
30023034:	lea    ecx,[ebp+0x8]
30023037:	mov    DWORD PTR [ebp-0x4],esi
3002303a:	call   0x300051c8
3002303f:	test   esi,esi
30023041:	je     0x30023071
30023043:	inc    ebx
30023044:	push   ebx
30023045:	lea    eax,[ebp+0x8]
30023048:	push   0x30023088
3002304d:	push   eax
3002304e:	call   0x30005153
30023053:	add    esp,0xc
30023056:	lea    eax,[ebp-0x4]
30023059:	push   eax
3002305a:	call   0x30008fa7
3002305f:	push   eax
30023060:	lea    edx,[ebp+0x8]
30023063:	lea    ecx,[ebp-0x20]
30023066:	call   0x300137db
3002306b:	cmp    DWORD PTR [ebp-0x4],0x0
3002306f:	jne    0x30023043
30023071:	lea    ecx,[ebp+0x8]
30023074:	call   0x300051a4
30023079:	lea    ecx,[ebp-0x20]
3002307c:	call   0x300051ae
30023081:	jmp    0x300138fa
30023086:	nop
30023087:	nop
30023088:	add    BYTE PTR gs:[eax+0x0],bh
3002308c:	je     0x3002308e
3002308e:	and    eax,0x33002e00
30023093:	add    BYTE PTR [eax+eax*1+0x0],ah
30023097:	add    BYTE PTR [eax],bh
30023099:	sbb    eax,0x300430f1
3002309e:	je     0x300230b8
300230a0:	call   0x30033b12
300230a5:	mov    edx,DWORD PTR [eax]
300230a7:	push   0x8000ffff
300230ac:	push   0x30023210
300230b1:	push   0x1
300230b3:	mov    ecx,eax
300230b5:	call   DWORD PTR [edx+0x4]
300230b8:	xor    al,al
300230ba:	jmp    0x30007470
300230bf:	movzx  esi,si
300230c2:	or     esi,0x80070000
300230c8:	jmp    0x300075a5
300230cd:	cmp    DWORD PTR [ebp-0x8],ebx
300230d0:	je     0x300073b6
300230d6:	push   0x300075bc
300230db:	push   0x30008fc4
300230e0:	lea    eax,[ebp-0x4]
300230e3:	push   eax
300230e4:	push   0x3002a7ec
300230e9:	lea    eax,[ebp-0x1c]
300230ec:	push   eax
300230ed:	call   0x3000a724
300230f2:	push   eax
300230f3:	lea    eax,[ebp-0x18]
300230f6:	push   eax
300230f7:	call   0x3000ba45
300230fc:	push   eax
300230fd:	lea    eax,[ebp-0xc]
30023100:	push   eax
30023101:	call   0x3000ba45
30023106:	cmp    BYTE PTR ds:0x300430f1,bl
3002310c:	je     0x3002311f
3002310e:	push   DWORD PTR [eax]
30023110:	xor    edx,edx
30023112:	push   0x30023288
30023117:	push   0x3
30023119:	pop    ecx
3002311a:	call   0x30033ac0
3002311f:	lea    ecx,[ebp-0xc]
30023122:	call   0x300051a4
30023127:	lea    ecx,[ebp-0x18]
3002312a:	call   0x300051a4
3002312f:	lea    ecx,[ebp-0x1c]
30023132:	jmp    0x30007458
30023137:	lea    eax,[ebp-0x4]
3002313a:	push   eax
3002313b:	push   0x30023300
30023140:	lea    eax,[ebp-0x1c]
30023143:	push   eax
30023144:	call   0x3000a724
30023149:	mov    ecx,DWORD PTR [eax]
3002314b:	push   ebx
3002314c:	mov    edx,esi
3002314e:	call   0x30033b4c
30023153:	lea    ecx,[ebp-0x1c]
30023156:	call   0x300051a4
3002315b:	jmp    0x300073b6
30023160:	lea    eax,[ebp-0x4]
30023163:	push   eax
30023164:	push   0x30023378
30023169:	lea    eax,[ebp-0x1c]
3002316c:	push   eax
3002316d:	call   0x3000a724
30023172:	mov    ecx,DWORD PTR [eax]
30023174:	push   ebx
30023175:	mov    edx,esi
30023177:	call   0x30033b4c
3002317c:	lea    ecx,[ebp-0x1c]
3002317f:	call   0x300051a4
30023184:	jmp    0x3001e1a3
30023189:	mov    eax,0x300233d0
3002318e:	jmp    0x3000741d
30023193:	movzx  eax,ax
30023196:	or     eax,0x80070000
3002319b:	test   eax,eax
3002319d:	jmp    0x3000743d
300231a2:	lea    ecx,[ebp-0xc]
300231a5:	call   0x300051c8
300231aa:	lea    ecx,[ebp-0x8]
300231ad:	call   0x300051c8
300231b2:	mov    eax,0x300233fc
300231b7:	cmp    DWORD PTR [ebp-0x10],ebx
300231ba:	jne    0x300231c1
300231bc:	mov    eax,0x3002340c
300231c1:	push   eax
300231c2:	lea    eax,[ebp-0xc]
300231c5:	push   0x30023420
300231ca:	push   eax
300231cb:	call   0x30005153
300231d0:	push   DWORD PTR [ebp-0x14]
300231d3:	lea    eax,[ebp-0x8]
300231d6:	push   DWORD PTR [ebp-0x4]
300231d9:	push   0x3002345c
300231de:	push   eax
300231df:	call   0x30005153
300231e4:	mov    ecx,DWORD PTR [ebp-0xc]
300231e7:	add    esp,0x1c
300231ea:	xor    edx,edx
300231ec:	push   DWORD PTR [ebp-0x8]
300231ef:	call   0x3001d890
300231f4:	lea    ecx,[ebp-0x8]
300231f7:	call   0x300051a4
300231fc:	lea    ecx,[ebp-0xc]
300231ff:	call   0x300051a4
30023204:	jmp    0x3000744f
30023209:	nop
3002320a:	nop
3002320b:	nop
3002320c:	nop
3002320d:	nop
3002320e:	nop
3002320f:	nop
30023210:	inc    ebx
30023211:	add    BYTE PTR [ecx+0x0],ah
30023214:	outs   dx,BYTE PTR ds:[esi]
30023215:	add    BYTE PTR [esi+0x0],ch
30023218:	outs   dx,DWORD PTR ds:[esi]
30023219:	add    BYTE PTR [eax+eax*1+0x20],dh
3002321d:	add    BYTE PTR [ebx+0x0],ah
30023220:	push   0x63006500
30023225:	add    BYTE PTR [ebx+0x0],ch
30023228:	and    BYTE PTR [eax],al
3002322a:	jne    0x3002322c
3002322c:	jae    0x3002322e
3002322e:	add    BYTE PTR gs:[edx+0x0],dh
30023232:	and    BYTE PTR [eax],al
30023234:	add    BYTE PTR gs:[eax+0x0],bh
30023238:	je     0x3002323a
3002323a:	add    BYTE PTR gs:[esi+0x0],ch
3002323e:	jae    0x30023240
30023240:	imul   eax,DWORD PTR [eax],0x6e006f
30023246:	jae    0x30023248
30023248:	and    BYTE PTR [eax],al
3002324a:	bound  eax,QWORD PTR [eax]
3002324c:	add    BYTE PTR gs:[esi+0x0],ah
30023250:	outs   dx,DWORD PTR ds:[esi]
30023251:	add    BYTE PTR [edx+0x0],dh
30023254:	add    BYTE PTR gs:[eax],ah
30023257:	add    BYTE PTR [eax+0x0],dh
3002325a:	imul   eax,DWORD PTR [eax],0x67
3002325d:	add    BYTE PTR [eax+eax*1+0x65],ah
30023261:	add    BYTE PTR [esi+0x0],ah
30023264:	and    BYTE PTR [eax],al
30023266:	arpl   WORD PTR [eax],ax
30023268:	popa   
30023269:	add    BYTE PTR [ebx+0x0],ah
3002326c:	push   0x20006500
30023271:	add    BYTE PTR [ecx+0x0],ch
30023274:	jae    0x30023276
30023276:	and    BYTE PTR [eax],al
30023278:	arpl   WORD PTR [eax],ax
3002327a:	jb     0x3002327c
3002327c:	add    BYTE PTR gs:[ecx+0x0],ah
30023280:	je     0x30023282
30023282:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
30023287:	add    BYTE PTR [ebp+0x0],dl
3002328a:	jae    0x3002328c
3002328c:	add    BYTE PTR gs:[edx+0x0],dh
30023290:	and    BYTE PTR [eax],al
30023292:	add    BYTE PTR gs:[eax+0x0],bh
30023296:	je     0x30023298
30023298:	add    BYTE PTR gs:[esi+0x0],ch
3002329c:	jae    0x3002329e
3002329e:	imul   eax,DWORD PTR [eax],0x6e006f
300232a4:	jae    0x300232a6
300232a6:	and    BYTE PTR [eax],al
300232a8:	add    BYTE PTR fs:[ecx+0x0],ch
300232ac:	jae    0x300232ae
300232ae:	popa   
300232af:	add    BYTE PTR [edx+0x0],ah
300232b2:	ins    BYTE PTR es:[edi],dx
300232b3:	add    BYTE PTR [ebp+0x0],ah
300232b6:	add    BYTE PTR fs:[eax],ah
300232b9:	add    BYTE PTR [edx+0x0],ah
300232bc:	jns    0x300232be
300232be:	and    BYTE PTR [eax],al
300232c0:	add    BYTE PTR [si+0x0],ch
300232c4:	outs   dx,DWORD PTR ds:[esi]
300232c5:	add    BYTE PTR [edx+0x0],ah
300232c8:	popa   
300232c9:	add    BYTE PTR [eax+eax*1+0x20],ch
300232cd:	add    BYTE PTR [ebp+0x0],dh
300232d0:	jae    0x300232d2
300232d2:	add    BYTE PTR gs:[edx+0x0],dh
300232d6:	and    BYTE PTR [eax],al
300232d8:	add    BYTE PTR gs:[eax+0x0],bh
300232dc:	je     0x300232de
300232de:	add    BYTE PTR gs:[esi+0x0],ch
300232e2:	jae    0x300232e4
300232e4:	imul   eax,DWORD PTR [eax],0x6e006f
300232ea:	jae    0x300232ec
300232ec:	and    BYTE PTR [eax],al
300232ee:	jae    0x300232f0
300232f0:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
300232f5:	add    BYTE PTR [ecx+0x0],ch
300232f8:	outs   dx,BYTE PTR ds:[esi]
300232f9:	add    BYTE PTR [edi+0x0],ah
300232fc:	add    BYTE PTR [eax],al
300232fe:	nop
300232ff:	nop
30023300:	inc    ebp
30023301:	add    BYTE PTR [edx+0x0],dh
30023304:	jb     0x30023306
30023306:	outs   dx,DWORD PTR ds:[esi]
30023307:	add    BYTE PTR [edx+0x0],dh
3002330a:	and    BYTE PTR [eax],al
3002330c:	ja     0x3002330e
3002330e:	push   0x6c006900
30023313:	add    BYTE PTR [ebp+0x0],ah
30023316:	and    BYTE PTR [eax],al
30023318:	arpl   WORD PTR [eax],ax
3002331a:	push   0x63006500
3002331f:	add    BYTE PTR [ebx+0x0],ch
30023322:	imul   eax,DWORD PTR [eax],0x67006e
30023328:	and    BYTE PTR [eax],al
3002332a:	data16 add BYTE PTR [edi+0x0],ch
3002332e:	jb     0x30023330
30023330:	and    BYTE PTR [eax],al
30023332:	add    BYTE PTR [si+0x0],ch
30023336:	outs   dx,DWORD PTR ds:[esi]
30023337:	add    BYTE PTR [edx+0x0],ah
3002333a:	popa   
3002333b:	add    BYTE PTR [eax+eax*1+0x20],ch
3002333f:	add    BYTE PTR [ebp+0x0],dh
30023342:	jae    0x30023344
30023344:	add    BYTE PTR gs:[edx+0x0],dh
30023348:	and    BYTE PTR [eax],al
3002334a:	add    BYTE PTR gs:[eax+0x0],bh
3002334e:	je     0x30023350
30023350:	add    BYTE PTR gs:[esi+0x0],ch
30023354:	jae    0x30023356
30023356:	imul   eax,DWORD PTR [eax],0x6e006f
3002335c:	jae    0x3002335e
3002335e:	and    BYTE PTR [eax],al
30023360:	jae    0x30023362
30023362:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
30023367:	add    BYTE PTR [ecx+0x0],ch
3002336a:	outs   dx,BYTE PTR ds:[esi]
3002336b:	add    BYTE PTR [edi+0x0],ah
3002336e:	cmp    al,BYTE PTR [eax]
30023370:	and    BYTE PTR [eax],al
30023372:	add    BYTE PTR [eax],al
30023374:	nop
30023375:	nop
30023376:	nop
30023377:	nop
30023378:	inc    ebp
30023379:	add    BYTE PTR [edx+0x0],dh
3002337c:	jb     0x3002337e
3002337e:	outs   dx,DWORD PTR ds:[esi]
3002337f:	add    BYTE PTR [edx+0x0],dh
30023382:	and    BYTE PTR [eax],al
30023384:	ja     0x30023386
30023386:	push   0x6c006900
3002338b:	add    BYTE PTR [ebp+0x0],ah
3002338e:	and    BYTE PTR [eax],al
30023390:	arpl   WORD PTR [eax],ax
30023392:	push   0x63006500
30023397:	add    BYTE PTR [ebx+0x0],ch
3002339a:	imul   eax,DWORD PTR [eax],0x67006e
300233a0:	and    BYTE PTR [eax],al
300233a2:	data16 add BYTE PTR [edi+0x0],ch
300233a6:	jb     0x300233a8
300233a8:	and    BYTE PTR [eax],al
300233aa:	jne    0x300233ac
300233ac:	jae    0x300233ae
300233ae:	add    BYTE PTR gs:[edx+0x0],dh
300233b2:	and    BYTE PTR [eax],al
300233b4:	add    BYTE PTR gs:[eax+0x0],bh
300233b8:	je     0x300233ba
300233ba:	add    BYTE PTR gs:[esi+0x0],ch
300233be:	jae    0x300233c0
300233c0:	imul   eax,DWORD PTR [eax],0x6e006f
300233c6:	jae    0x300233c8
300233c8:	cmp    al,BYTE PTR [eax]
300233ca:	and    BYTE PTR [eax],al
300233cc:	add    BYTE PTR [eax],al
300233ce:	nop
300233cf:	nop
300233d0:	inc    ebp
300233d1:	add    BYTE PTR [esi+0x0],ch
300233d4:	popa   
300233d5:	add    BYTE PTR [edx+0x0],ah
300233d8:	ins    BYTE PTR es:[edi],dx
300233d9:	add    BYTE PTR [ebp+0x0],ah
300233dc:	push   ebp
300233dd:	add    BYTE PTR [ebx+0x0],dh
300233e0:	add    BYTE PTR gs:[edx+0x0],dh
300233e4:	inc    ebp
300233e5:	add    BYTE PTR [eax+0x0],bh
300233e8:	je     0x300233ea
300233ea:	add    BYTE PTR gs:[esi+0x0],ch
300233ee:	jae    0x300233f0
300233f0:	imul   eax,DWORD PTR [eax],0x6e006f
300233f6:	jae    0x300233f8
300233f8:	add    BYTE PTR [eax],al
300233fa:	nop
300233fb:	nop
300233fc:	add    BYTE PTR gs:[esi+0x0],ch
30023400:	popa   
30023401:	add    BYTE PTR [edx+0x0],ah
30023404:	ins    BYTE PTR es:[edi],dx
30023405:	add    BYTE PTR [ebp+0x0],ah
30023408:	add    BYTE PTR fs:[eax],al
3002340b:	add    BYTE PTR [eax+eax*1+0x69],ah
3002340f:	add    BYTE PTR [ebx+0x0],dh
30023412:	popa   
30023413:	add    BYTE PTR [edx+0x0],ah
30023416:	ins    BYTE PTR es:[edi],dx
30023417:	add    BYTE PTR [ebp+0x0],ah
3002341a:	add    BYTE PTR fs:[eax],al
3002341d:	add    BYTE PTR [eax+0x73005590],dl
30023423:	add    BYTE PTR [ebp+0x0],ah
30023426:	jb     0x30023428
30023428:	and    BYTE PTR [eax],al
3002342a:	add    BYTE PTR gs:[eax+0x0],bh
3002342e:	je     0x30023430
30023430:	add    BYTE PTR gs:[esi+0x0],ch
30023434:	jae    0x30023436
30023436:	imul   eax,DWORD PTR [eax],0x6e006f
3002343c:	jae    0x3002343e
3002343e:	and    BYTE PTR [eax],al
30023440:	and    eax,0x20007300
30023445:	add    BYTE PTR [edx+0x0],ah
30023448:	jns    0x3002344a
3002344a:	and    BYTE PTR [eax],al
3002344c:	jae    0x3002344e
3002344e:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
30023453:	add    BYTE PTR [ecx+0x0],ch
30023456:	outs   dx,BYTE PTR ds:[esi]
30023457:	add    BYTE PTR [edi+0x0],ah
3002345a:	add    BYTE PTR [eax],al
3002345c:	dec    eax
3002345d:	add    BYTE PTR [ebx+0x0],cl
30023460:	inc    ebp
30023461:	add    BYTE PTR [ecx+0x0],bl
30023464:	pop    edi
30023465:	add    BYTE PTR [ebx+0x0],al
30023468:	push   ebp
30023469:	add    BYTE PTR [edx+0x0],dl
3002346c:	push   edx
3002346d:	add    BYTE PTR [ebp+0x0],al
30023470:	dec    esi
30023471:	add    BYTE PTR [eax+eax*1+0x5f],dl
30023475:	add    BYTE PTR [ebp+0x0],dl
30023478:	push   ebx
30023479:	add    BYTE PTR [ebp+0x0],al
3002347c:	push   edx
3002347d:	add    BYTE PTR [eax+eax*1+0x25],bl
30023481:	add    BYTE PTR [ebx+0x0],dh
30023484:	pop    esp
30023485:	add    BYTE PTR ds:0x7300,ah
3002348b:	add    BYTE PTR [eax-0x73b416ff],dh
30023491:	(bad)  
30023492:	push   DWORD PTR [edx]
30023494:	shr    cl,0x44
30023497:	mov    edi,?
30023499:	dec    DWORD PTR [edi]
3002349b:	mov    bh,0xff
3002349d:	or     edi,0x80070000
300234a3:	jmp    0x3001c019
300234a8:	push   0x80004005
300234ad:	call   0x3002ae0b
300234b2:	int3   
300234b3:	call   0x30033b12
300234b8:	mov    edx,DWORD PTR [eax]
300234ba:	push   0x3002a814
300234bf:	push   0x3
300234c1:	mov    ecx,eax
300234c3:	call   DWORD PTR [edx+0x8]
300234c6:	jmp    0x30016eda
300234cb:	call   0x30033b12
300234d0:	mov    edx,DWORD PTR [eax]
300234d2:	push   0x3002a850
300234d7:	push   0x3
300234d9:	mov    ecx,eax
300234db:	call   DWORD PTR [edx+0x8]
300234de:	jmp    0x30016f14
300234e3:	mov    eax,0x8000ffff
300234e8:	pop    esi
300234e9:	ret    
300234ea:	cmp    BYTE PTR ds:0x300430f1,0x0
300234f1:	mov    esi,0x80070057
300234f6:	je     0x3002350c
300234f8:	call   0x30033b12
300234fd:	mov    edx,DWORD PTR [eax]
300234ff:	push   esi
30023500:	push   0x30023518
30023505:	push   0x3
30023507:	mov    ecx,eax
30023509:	call   DWORD PTR [edx+0x4]
3002350c:	mov    eax,esi
3002350e:	pop    esi
3002350f:	ret    
30023510:	mov    eax,DWORD PTR [esi]
30023512:	mov    ecx,esi
30023514:	pop    esi
30023515:	jmp    DWORD PTR [eax+0x40]
30023518:	push   edx
30023519:	add    BYTE PTR [ebp+0x0],ah
3002351c:	add    BYTE PTR [bx+di+0x0],ch
30023520:	jae    0x30023522
30023522:	je     0x30023524
30023524:	jb     0x30023526
30023526:	jns    0x30023528
30023528:	and    BYTE PTR [eax],al
3002352a:	jb     0x3002352c
3002352c:	outs   dx,DWORD PTR ds:[esi]
3002352d:	add    BYTE PTR [edi+0x0],ch
30023530:	je     0x30023532
30023532:	and    BYTE PTR [eax],al
30023534:	ja     0x30023536
30023536:	popa   
30023537:	add    BYTE PTR [ebx+0x0],dh
3002353a:	and    BYTE PTR [eax],al
3002353c:	outs   dx,BYTE PTR ds:[esi]
3002353d:	add    BYTE PTR [ebp+0x0],ah
30023540:	jbe    0x30023542
30023542:	add    BYTE PTR gs:[edx+0x0],dh
30023546:	and    BYTE PTR [eax],al
30023548:	jae    0x3002354a
3002354a:	jo     0x3002354c
3002354c:	add    BYTE PTR gs:[ebx+0x0],ah
30023550:	imul   eax,DWORD PTR [eax],0x690066
30023556:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
3002355b:	add    BYTE PTR [eax-0x7fff0001],bh
30023561:	jmp    0x3000ea4c
30023566:	lea    eax,[esp+0x70]
3002356a:	push   eax
3002356b:	mov    ecx,ebx
3002356d:	call   0x3001de91
30023572:	mov    esi,eax
30023574:	test   esi,esi
30023576:	js     0x3000ea41
3002357c:	lea    eax,[esp+0x70]
30023580:	push   eax
30023581:	mov    ecx,ebx
30023583:	call   0x3001dd4f
30023588:	mov    esi,eax
3002358a:	test   esi,esi
3002358c:	jns    0x3000e909
30023592:	jmp    0x3000ea41
30023597:	call   0x30033b12
3002359c:	mov    edx,DWORD PTR [eax]
3002359e:	push   0x300235d8
300235a3:	push   0x3
300235a5:	mov    ecx,eax
300235a7:	call   DWORD PTR [edx+0x8]
300235aa:	jmp    0x3000e933
300235af:	cmp    BYTE PTR ds:0x300430f1,0x0
300235b6:	je     0x300235c9
300235b8:	push   0x0
300235ba:	push   0x30023620
300235bf:	push   0x2
300235c1:	mov    edx,eax
300235c3:	pop    ecx
300235c4:	call   0x30033ac0
300235c9:	lea    ecx,[esp+0x10]
300235cd:	call   0x30004564
300235d2:	jmp    0x3000e9da
300235d7:	nop
300235d8:	push   eax
300235d9:	add    BYTE PTR [ebx+0x0],ch
300235dc:	add    BYTE PTR [si+0x0],al
300235e0:	add    BYTE PTR gs:[esi+0x0],ah
300235e4:	dec    ebp
300235e5:	add    BYTE PTR [ecx+0x0],ah
300235e8:	outs   dx,BYTE PTR ds:[esi]
300235e9:	add    BYTE PTR [ecx+0x0],ah
300235ec:	add    BYTE PTR [di+0x0],ah
300235f0:	ins    DWORD PTR es:[edi],dx
300235f1:	add    BYTE PTR [ebp+0x0],ah
300235f4:	outs   dx,BYTE PTR ds:[esi]
300235f5:	add    BYTE PTR [eax+eax*1+0x20],dh
300235f9:	add    BYTE PTR [ebx+0x0],dh
300235fc:	je     0x300235fe
300235fe:	popa   
300235ff:	add    BYTE PTR [edx+0x0],dh
30023602:	je     0x30023604
30023604:	jne    0x30023606
30023606:	jo     0x30023608
30023608:	and    BYTE PTR [eax],al
3002360a:	arpl   WORD PTR [eax],ax
3002360c:	outs   dx,DWORD PTR ds:[esi]
3002360d:	add    BYTE PTR [ebp+0x0],ch
30023610:	jo     0x30023612
30023612:	ins    BYTE PTR es:[edi],dx
30023613:	add    BYTE PTR [ebp+0x0],ah
30023616:	je     0x30023618
30023618:	add    BYTE PTR gs:[eax],al
3002361b:	add    BYTE PTR [eax+0x43909090],dl
30023621:	add    BYTE PTR [edi+0x0],ch
30023624:	outs   dx,BYTE PTR ds:[esi]
30023625:	add    BYTE PTR [esi+0x0],ah
30023628:	imul   eax,DWORD PTR [eax],0x750067
3002362e:	jb     0x30023630
30023630:	popa   
30023631:	add    BYTE PTR [eax+eax*1+0x69],dh
30023635:	add    BYTE PTR [edi+0x0],ch
30023638:	outs   dx,BYTE PTR ds:[esi]
30023639:	add    BYTE PTR [eax],ah
3002363b:	add    BYTE PTR [esi+0x0],ah
3002363e:	imul   eax,DWORD PTR [eax],0x65006c
30023644:	and    BYTE PTR [eax],al
30023646:	ins    DWORD PTR es:[edi],dx
30023647:	add    BYTE PTR [ebp+0x0],ah
3002364a:	jb     0x3002364c
3002364c:	add    BYTE PTR [di+0x0],ah
30023650:	and    BYTE PTR [eax],al
30023652:	data16 add BYTE PTR [ecx+0x0],ah
30023656:	imul   eax,DWORD PTR [eax],0x65006c
3002365c:	add    BYTE PTR fs:[esi],ch
3002365f:	add    BYTE PTR [eax],al
30023661:	add    BYTE PTR [eax+0x5],ch
30023664:	inc    eax
30023665:	add    BYTE PTR [eax+0x779fe8],al
3002366b:	add    ah,cl
3002366d:	push   0x80004005
30023672:	call   0x3002ae0b
30023677:	int3   
30023678:	push   ebx
30023679:	push   ebx
3002367a:	mov    ecx,esi
3002367c:	call   0x30033874
30023681:	push   eax
30023682:	mov    ecx,esi
30023684:	call   0x300098e4
30023689:	jmp    0x30008ae9
3002368e:	call   0x3000898e
30023693:	mov    DWORD PTR [esi+0x28],ebx
30023696:	jmp    0x30008af7
3002369b:	push   0x80004005
300236a0:	call   0x3002ae0b
300236a5:	int3   
300236a6:	push   DWORD PTR [esi]
300236a8:	call   DWORD PTR ds:0x300453d4
300236ae:	and    DWORD PTR [esi],0x0
300236b1:	pop    ecx
300236b2:	jmp    0x300098f4
300236b7:	xor    al,al
300236b9:	jmp    0x3000994f
300236be:	push   0x80004005
300236c3:	call   0x3002ae0b
300236c8:	int3   
300236c9:	cmp    DWORD PTR [esi+0x20],edi
300236cc:	jne    0x30008b45
300236d2:	push   eax
300236d3:	mov    ecx,esi
300236d5:	call   0x30033874
300236da:	push   eax
300236db:	mov    ecx,esi
300236dd:	call   0x300339b4
300236e2:	jmp    0x30008b45
300236e7:	push   0x80004005
300236ec:	call   0x3002ae0b
300236f1:	int3   
300236f2:	fadd   DWORD PTR ds:0x3002a9cc
300236f8:	jmp    0x3000962e
300236fd:	push   0x8007000e
30023702:	call   0x3002ae0b
30023707:	int3   
30023708:	push   0x80004005
3002370d:	call   0x3002ae0b
30023712:	int3   
30023713:	push   0x80004005
30023718:	jmp    0x3002373e
3002371a:	cmp    DWORD PTR [esi+0x20],0x0
3002371e:	jne    0x3000984e
30023724:	push   eax
30023725:	mov    ecx,esi
30023727:	call   0x30033874
3002372c:	push   eax
3002372d:	mov    ecx,esi
3002372f:	call   0x300339b4
30023734:	jmp    0x3000984e
30023739:	push   0x8007000e
3002373e:	call   0x3002ae0b
30023743:	int3   
30023744:	cmp    ecx,0x3
30023747:	je     0x3001dfcf
3002374d:	lea    ecx,[ebp+0x8]
30023750:	call   0x300051a4
30023755:	mov    eax,esi
30023757:	jmp    0x3001dfb7
3002375c:	mov    esi,0x80070057
30023761:	jmp    0x3001b55e
30023766:	mov    edi,0x80070057
3002376b:	jmp    0x3001dd07
30023770:	mov    esi,DWORD PTR [ebp-0x278]
30023776:	lea    eax,[ebp-0x280]
3002377c:	push   eax
3002377d:	lea    ecx,[ebp-0x268]
30023783:	call   0x3000c489
30023788:	push   DWORD PTR [eax]
3002378a:	lea    ecx,[ebp-0x26c]
30023790:	call   0x300089ae
30023795:	lea    ecx,[ebp-0x280]
3002379b:	call   0x300051a4
300237a0:	lea    edx,[ebp-0x26c]
300237a6:	mov    ecx,edx
300237a8:	call   0x30033ef0
300237ad:	test   eax,eax
300237af:	js     0x300237c9
300237b1:	push   edi
300237b2:	push   esi
300237b3:	push   ecx
300237b4:	lea    eax,[ebp-0x26c]
300237ba:	mov    ecx,esp
300237bc:	push   eax
300237bd:	call   0x30004340
300237c2:	mov    ecx,ebx
300237c4:	call   0x3001b4d2
300237c9:	lea    ecx,[ebp-0x26c]
300237cf:	call   0x300051a4
300237d4:	lea    ecx,[ebp-0x268]
300237da:	call   0x3001dad5
300237df:	test   eax,eax
300237e1:	jne    0x30023776
300237e3:	mov    esi,DWORD PTR [ebp-0x274]
300237e9:	jmp    0x3001dc1a
300237ee:	mov    edi,0x80070057
300237f3:	jmp    0x3001b4ba
300237f8:	xor    edi,edi
300237fa:	inc    edi
300237fb:	jmp    0x3001b4ba
30023800:	cmp    DWORD PTR [ebp+0x8],eax
30023803:	je     0x3001b41c
30023809:	jmp    0x3001b3c5
3002380e:	push   0x80004005
30023813:	call   0x3002ae0b
30023818:	int3   
30023819:	push   0x8007000e
3002381e:	call   0x3002ae0b
30023823:	int3   
30023824:	push   DWORD PTR [ebp+0x8]
30023827:	push   ecx
30023828:	push   0x3
3002382a:	pop    ecx
3002382b:	call   0x30033ac0
30023830:	jmp    0x3001d8a0
30023835:	movzx  eax,ax
30023838:	or     eax,0x80070000
3002383d:	test   eax,eax
3002383f:	jmp    0x30011e2e
30023844:	push   DWORD PTR [ebp+0x8]
30023847:	xor    edx,edx
30023849:	push   0x3002385c
3002384e:	push   0x3
30023850:	pop    ecx
30023851:	call   0x30033ac0
30023856:	jmp    0x30011c7e
3002385b:	nop
3002385c:	dec    esi
3002385d:	add    BYTE PTR [ebp+0x0],ah
30023860:	ja     0x30023862
30023862:	add    BYTE PTR gs:[ebx+0x0],dh
30023866:	je     0x30023868
30023868:	and    BYTE PTR [eax],al
3002386a:	outs   dx,BYTE PTR ds:[esi]
3002386b:	add    BYTE PTR [edi+0x0],ch
3002386e:	add    BYTE PTR fs:[ebp+0x0],ah
30023872:	and    BYTE PTR [eax],al
30023874:	imul   eax,DWORD PTR [eax],0x20006e
3002387a:	jo     0x3002387c
3002387c:	imul   eax,DWORD PTR [eax],0x67
3002387f:	add    BYTE PTR [eax+eax*1+0x65],ah
30023883:	add    BYTE PTR [esi+0x0],ah
30023886:	and    BYTE PTR [eax],al
30023888:	arpl   WORD PTR [eax],ax
3002388a:	popa   
3002388b:	add    BYTE PTR [ebx+0x0],ah
3002388e:	push   0x6500
30023893:	add    BYTE PTR [edi],cl
30023895:	mov    bh,0xc0
30023897:	or     eax,0x80070000
3002389c:	test   eax,eax
3002389e:	jmp    0x300057a9
300238a3:	cmp    BYTE PTR ds:0x300430f1,0x0
300238aa:	je     0x300238bc
300238ac:	push   edi
300238ad:	push   0x300238dc
300238b2:	mov    edx,eax
300238b4:	push   0x2
300238b6:	pop    ecx
300238b7:	call   0x30033ac0
300238bc:	mov    esi,DWORD PTR [ebp+0x8]
300238bf:	mov    DWORD PTR [esi],edi
300238c1:	mov    DWORD PTR [esi+0x4],edi
300238c4:	jmp    0x300057eb
300238c9:	cmp    BYTE PTR ds:0x300430f1,0x0
300238d0:	je     0x300238bc
300238d2:	push   edi
300238d3:	push   0x30023918
300238d8:	mov    edx,esi
300238da:	jmp    0x300238b4
300238dc:	dec    esi
300238dd:	add    BYTE PTR [edi+0x0],ch
300238e0:	and    BYTE PTR [eax],al
300238e2:	jo     0x300238e4
300238e4:	jb     0x300238e6
300238e6:	add    BYTE PTR gs:[esi+0x0],dh
300238ea:	imul   eax,DWORD PTR [eax],0x75006f
300238f0:	jae    0x300238f2
300238f2:	and    BYTE PTR [eax],al
300238f4:	jo     0x300238f6
300238f6:	imul   eax,DWORD PTR [eax],0x67
300238f9:	add    BYTE PTR [eax+eax*1+0x65],ah
300238fd:	add    BYTE PTR [esi+0x0],ah
30023900:	and    BYTE PTR [eax],al
30023902:	arpl   WORD PTR [eax],ax
30023904:	popa   
30023905:	add    BYTE PTR [ebx+0x0],ah
30023908:	push   0x20006500
3002390d:	add    BYTE PTR [eax+eax*1+0x61],ah
30023911:	add    BYTE PTR [eax+eax*1+0x61],dh
30023915:	add    BYTE PTR [eax],al
30023917:	add    BYTE PTR [eax+0x0],dl
3002391a:	jb     0x3002391c
3002391c:	add    BYTE PTR gs:[esi+0x0],dh
30023920:	imul   eax,DWORD PTR [eax],0x75006f
30023926:	jae    0x30023928
30023928:	and    BYTE PTR [eax],al
3002392a:	jo     0x3002392c
3002392c:	imul   eax,DWORD PTR [eax],0x67
3002392f:	add    BYTE PTR [eax+eax*1+0x65],ah
30023933:	add    BYTE PTR [esi+0x0],ah
30023936:	and    BYTE PTR [eax],al
30023938:	arpl   WORD PTR [eax],ax
3002393a:	popa   
3002393b:	add    BYTE PTR [ebx+0x0],ah
3002393e:	push   0x20006500
30023943:	add    BYTE PTR [eax+eax*1+0x69],dh
30023947:	add    BYTE PTR [ebp+0x0],ch
3002394a:	add    BYTE PTR gs:[ebx+0x0],dh
3002394e:	je     0x30023950
30023950:	popa   
30023951:	add    BYTE PTR [ebp+0x0],ch
30023954:	jo     0x30023956
30023956:	and    BYTE PTR [eax],al
30023958:	imul   eax,DWORD PTR [eax],0x200073
3002395e:	outs   dx,BYTE PTR ds:[esi]
3002395f:	add    BYTE PTR [edi+0x0],ch
30023962:	je     0x30023964
30023964:	and    BYTE PTR [eax],al
30023966:	jbe    0x30023968
30023968:	popa   
30023969:	add    BYTE PTR [eax+eax*1+0x69],ch
3002396d:	add    BYTE PTR [eax+eax*1+0x0],ah
30023971:	add    al,ch
30023973:	fwait
30023974:	add    DWORD PTR [ecx],eax
30023976:	add    BYTE PTR [ebx+0x3a086810],cl
3002397c:	add    dh,BYTE PTR [eax]
3002397e:	push   0x3
30023980:	mov    ecx,eax
30023982:	call   DWORD PTR [edx+0x8]
30023985:	jmp    0x3000a8d6
3002398a:	cmp    BYTE PTR ds:0x300430f1,0x0
30023991:	je     0x300239f5
30023993:	push   0x0
30023995:	xor    ecx,ecx
30023997:	push   0x30023a48
3002399c:	mov    edx,esi
3002399e:	inc    ecx
3002399f:	call   0x30033ac0
300239a4:	jmp    0x300239f5
300239a6:	call   0x30033b12
300239ab:	mov    edx,DWORD PTR [eax]
300239ad:	push   DWORD PTR [ebp-0x4]
300239b0:	mov    ecx,eax
300239b2:	call   DWORD PTR [edx+0xc]
300239b5:	push   DWORD PTR [ebp-0x4]
300239b8:	mov    edx,esi
300239ba:	mov    ecx,0x30023a78
300239bf:	test   al,al
300239c1:	je     0x300239cf
300239c3:	call   0x30033b4c
300239c8:	xor    esi,esi
300239ca:	jmp    0x3000a959
300239cf:	call   0x30033b68
300239d4:	cmp    BYTE PTR ds:0x300430f1,0x0
300239db:	je     0x300239f5
300239dd:	call   0x30033b12
300239e2:	mov    edx,DWORD PTR [eax]
300239e4:	push   0x80004005
300239e9:	push   0x30023a48
300239ee:	push   0x1
300239f0:	mov    ecx,eax
300239f2:	call   DWORD PTR [edx+0x4]
300239f5:	lea    ecx,[ebp-0x4]
300239f8:	call   0x300051a4
300239fd:	jmp    0x3000a967
30023a02:	nop
30023a03:	nop
30023a04:	nop
30023a05:	nop
30023a06:	nop
30023a07:	nop
30023a08:	dec    esp
30023a09:	add    BYTE PTR [edi+0x0],ch
30023a0c:	popa   
30023a0d:	add    BYTE PTR [eax+eax*1+0x69],ah
30023a11:	add    BYTE PTR [esi+0x0],ch
30023a14:	add    BYTE PTR [bx+si],ah
30023a17:	add    BYTE PTR [eax+eax*1+0x69],ah
30023a1b:	add    BYTE PTR [ebx+0x0],dh
30023a1e:	arpl   WORD PTR [eax],ax
30023a20:	outs   dx,DWORD PTR ds:[esi]
30023a21:	add    BYTE PTR [esi+0x0],dh
30023a24:	add    BYTE PTR gs:[edx+0x0],dh
30023a28:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30023a2d:	add    BYTE PTR [eax+0x0],dh
30023a30:	imul   eax,DWORD PTR [eax],0x67
30023a33:	add    BYTE PTR [eax+eax*1+0x65],ah
30023a37:	add    BYTE PTR [esi+0x0],ah
30023a3a:	and    BYTE PTR [eax],al
30023a3c:	data16 add BYTE PTR [ecx+0x0],ch
30023a40:	ins    BYTE PTR es:[edi],dx
30023a41:	add    BYTE PTR [ebp+0x0],ah
30023a44:	jae    0x30023a46
30023a46:	add    BYTE PTR [eax],al
30023a48:	push   eax
30023a49:	add    BYTE PTR [ebx+0x0],ch
30023a4c:	add    BYTE PTR [si+0x0],al
30023a50:	add    BYTE PTR gs:[esi+0x0],ah
30023a54:	and    BYTE PTR [eax],al
30023a56:	ins    BYTE PTR es:[edi],dx
30023a57:	add    BYTE PTR [edi+0x0],ch
30023a5a:	popa   
30023a5b:	add    BYTE PTR [eax+eax*1+0x69],ah
30023a5f:	add    BYTE PTR [esi+0x0],ch
30023a62:	add    BYTE PTR [bx+si],ah
30023a65:	add    BYTE PTR [ecx+0x0],ah
30023a68:	bound  eax,QWORD PTR [eax]
30023a6a:	outs   dx,DWORD PTR ds:[esi]
30023a6b:	add    BYTE PTR [edx+0x0],dh
30023a6e:	je     0x30023a70
30023a70:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
30023a75:	add    BYTE PTR [eax+0x72004590],dl
30023a7b:	add    BYTE PTR [edx+0x0],dh
30023a7e:	outs   dx,DWORD PTR ds:[esi]
30023a7f:	add    BYTE PTR [edx+0x0],dh
30023a82:	and    BYTE PTR [eax],al
30023a84:	jae    0x30023a86
30023a86:	arpl   WORD PTR [eax],ax
30023a88:	popa   
30023a89:	add    BYTE PTR [esi+0x0],ch
30023a8c:	outs   dx,BYTE PTR ds:[esi]
30023a8d:	add    BYTE PTR [ecx+0x0],ch
30023a90:	outs   dx,BYTE PTR ds:[esi]
30023a91:	add    BYTE PTR [edi+0x0],ah
30023a94:	and    BYTE PTR [eax],al
30023a96:	push   eax
30023a97:	add    BYTE PTR [ebx+0x0],ch
30023a9a:	add    BYTE PTR [si+0x0],al
30023a9e:	add    BYTE PTR gs:[esi+0x0],ah
30023aa2:	and    BYTE PTR [eax],al
30023aa4:	data16 add BYTE PTR [ecx+0x0],ch
30023aa8:	ins    BYTE PTR es:[edi],dx
30023aa9:	add    BYTE PTR [ebp+0x0],ah
30023aac:	add    BYTE PTR [eax],al
30023aae:	push   DWORD PTR [edi]
30023ab0:	xor    edx,edx
30023ab2:	push   0x30023b94
30023ab7:	push   0x3
30023ab9:	pop    ecx
30023aba:	call   0x30033ac0
30023abf:	jmp    0x3000aad5
30023ac4:	push   0x3001da88
30023ac9:	lea    eax,[ebp-0x10]
30023acc:	push   eax
30023acd:	lea    ecx,[ebp-0x8]
30023ad0:	call   0x300096ac
30023ad5:	mov    ecx,eax
30023ad7:	call   0x3000927b
30023adc:	mov    ebx,eax
30023ade:	neg    ebx
30023ae0:	lea    ecx,[ebp-0x10]
30023ae3:	sbb    bl,bl
30023ae5:	call   0x300051a4
30023aea:	inc    bl
30023aec:	je     0x30023b51
30023aee:	push   0x78
30023af0:	call   0x30003fee
30023af5:	mov    esi,eax
30023af7:	pop    ecx
30023af8:	test   esi,esi
30023afa:	je     0x30023b2a
30023afc:	push   DWORD PTR [ebp+0x8]
30023aff:	mov    ecx,esi
30023b01:	call   0x3000b276
30023b06:	xor    eax,eax
30023b08:	mov    DWORD PTR [esi],0x30009f38
30023b0e:	lea    ecx,[esi+0x70]
30023b11:	mov    DWORD PTR [esi+0x64],eax
30023b14:	mov    DWORD PTR [esi+0x68],eax
30023b17:	mov    DWORD PTR [esi+0x6c],eax
30023b1a:	call   0x300051c8
30023b1f:	xor    eax,eax
30023b21:	mov    WORD PTR [esi+0x74],ax
30023b25:	mov    DWORD PTR [ebp-0x4],esi
30023b28:	jmp    0x30023b2f
30023b2a:	xor    eax,eax
30023b2c:	mov    DWORD PTR [ebp-0x4],eax
30023b2f:	mov    esi,DWORD PTR [ebp-0x4]
30023b32:	jmp    0x3000ab4b
30023b37:	mov    ecx,0x30023c24
30023b3c:	push   DWORD PTR [ebx]
30023b3e:	mov    edx,edi
30023b40:	call   0x30033b68
30023b45:	jmp    0x3000ab85
30023b4a:	mov    ecx,0x30023c5c
30023b4f:	jmp    0x30023b3c
30023b51:	cmp    BYTE PTR ds:0x300430f1,0x0
30023b58:	mov    ecx,DWORD PTR [edi]
30023b5a:	mov    edi,0x80070057
30023b5f:	je     0x3000ab85
30023b65:	call   0x30033b12
30023b6a:	mov    edx,DWORD PTR [eax]
30023b6c:	push   edi
30023b6d:	test   ecx,ecx
30023b6f:	jne    0x30023b82
30023b71:	push   0x30023bc0
30023b76:	push   0x1
30023b78:	mov    ecx,eax
30023b7a:	call   DWORD PTR [edx+0x4]
30023b7d:	jmp    0x3000ab85
30023b82:	push   ecx
30023b83:	push   0x30023bc0
30023b88:	push   0x1
30023b8a:	mov    ecx,eax
30023b8c:	call   DWORD PTR [edx]
30023b8e:	jmp    0x3000ab85
30023b93:	nop
30023b94:	dec    ecx
30023b95:	add    BYTE PTR [ebp+0x0],ch
30023b98:	jo     0x30023b9a
30023b9a:	outs   dx,DWORD PTR ds:[esi]
30023b9b:	add    BYTE PTR [edx+0x0],dh
30023b9e:	je     0x30023ba0
30023ba0:	imul   eax,DWORD PTR [eax],0x67006e
30023ba6:	and    BYTE PTR [eax],al
30023ba8:	jo     0x30023baa
30023baa:	imul   eax,DWORD PTR [eax],0x67
30023bad:	add    BYTE PTR [eax+eax*1+0x65],ah
30023bb1:	add    BYTE PTR [esi+0x0],ah
30023bb4:	and    BYTE PTR [eax],al
30023bb6:	data16 add BYTE PTR [ecx+0x0],ch
30023bba:	ins    BYTE PTR es:[edi],dx
30023bbb:	add    BYTE PTR [ebp+0x0],ah
30023bbe:	add    BYTE PTR [eax],al
30023bc0:	inc    esp
30023bc1:	add    BYTE PTR [ecx+0x0],ch
30023bc4:	add    BYTE PTR fs:[eax],ah
30023bc7:	add    BYTE PTR [esi+0x0],ch
30023bca:	outs   dx,DWORD PTR ds:[esi]
30023bcb:	add    BYTE PTR [eax+eax*1+0x20],dh
30023bcf:	add    BYTE PTR [edx+0x0],dh
30023bd2:	add    BYTE PTR gs:[ebx+0x0],ah
30023bd6:	outs   dx,DWORD PTR ds:[esi]
30023bd7:	add    BYTE PTR [edi+0x0],ah
30023bda:	outs   dx,BYTE PTR ds:[esi]
30023bdb:	add    BYTE PTR [ecx+0x0],ch
30023bde:	jp     0x30023be0
30023be0:	add    BYTE PTR gs:[eax],ah
30023be3:	add    BYTE PTR [eax+eax*1+0x79],dh
30023be7:	add    BYTE PTR [eax+0x0],dh
30023bea:	add    BYTE PTR gs:[eax],ah
30023bed:	add    BYTE PTR [eax],ch
30023bef:	add    BYTE PTR [ebp+0x0],ah
30023bf2:	js     0x30023bf4
30023bf4:	je     0x30023bf6
30023bf6:	add    BYTE PTR gs:[esi+0x0],ch
30023bfa:	jae    0x30023bfc
30023bfc:	imul   eax,DWORD PTR [eax],0x6e006f
30023c02:	sub    DWORD PTR [eax],eax
30023c04:	and    BYTE PTR [eax],al
30023c06:	outs   dx,DWORD PTR ds:[esi]
30023c07:	add    BYTE PTR [esi+0x0],ah
30023c0a:	and    BYTE PTR [eax],al
30023c0c:	push   eax
30023c0d:	add    BYTE PTR [ebx+0x0],ch
30023c10:	add    BYTE PTR [si+0x0],al
30023c14:	add    BYTE PTR gs:[esi+0x0],ah
30023c18:	and    BYTE PTR [eax],al
30023c1a:	data16 add BYTE PTR [ecx+0x0],ch
30023c1e:	ins    BYTE PTR es:[edi],dx
30023c1f:	add    BYTE PTR [ebp+0x0],ah
30023c22:	add    BYTE PTR [eax],al
30023c24:	inc    esi
30023c25:	add    BYTE PTR [ecx+0x0],ah
30023c28:	imul   eax,DWORD PTR [eax],0x65006c
30023c2e:	add    BYTE PTR fs:[eax],ah
30023c31:	add    BYTE PTR [eax+eax*1+0x6f],dh
30023c35:	add    BYTE PTR [eax],ah
30023c37:	add    BYTE PTR [edi+0x0],ch
30023c3a:	jo     0x30023c3c
30023c3c:	add    BYTE PTR gs:[esi+0x0],ch
30023c40:	and    BYTE PTR [eax],al
30023c42:	push   eax
30023c43:	add    BYTE PTR [ebx+0x0],ch
30023c46:	add    BYTE PTR [si+0x0],al
30023c4a:	add    BYTE PTR gs:[esi+0x0],ah
30023c4e:	and    BYTE PTR [eax],al
30023c50:	data16 add BYTE PTR [ecx+0x0],ch
30023c54:	ins    BYTE PTR es:[edi],dx
30023c55:	add    BYTE PTR [ebp+0x0],ah
30023c58:	add    BYTE PTR [eax],al
30023c5a:	nop
30023c5b:	nop
30023c5c:	inc    esi
30023c5d:	add    BYTE PTR [ecx+0x0],ah
30023c60:	imul   eax,DWORD PTR [eax],0x65006c
30023c66:	add    BYTE PTR fs:[eax],ah
30023c69:	add    BYTE PTR [eax+eax*1+0x6f],dh
30023c6d:	add    BYTE PTR [eax],ah
30023c6f:	add    BYTE PTR [eax+0x0],dh
30023c72:	jb     0x30023c74
30023c74:	outs   dx,DWORD PTR ds:[esi]
30023c75:	add    BYTE PTR [ebx+0x0],ah
30023c78:	add    BYTE PTR gs:[ebx+0x0],dh
30023c7c:	jae    0x30023c7e
30023c7e:	and    BYTE PTR [eax],al
30023c80:	push   eax
30023c81:	add    BYTE PTR [ebx+0x0],ch
30023c84:	add    BYTE PTR [si+0x0],al
30023c88:	add    BYTE PTR gs:[esi+0x0],ah
30023c8c:	and    BYTE PTR [eax],al
30023c8e:	data16 add BYTE PTR [ecx+0x0],ch
30023c92:	ins    BYTE PTR es:[edi],dx
30023c93:	add    BYTE PTR [ebp+0x0],ah
30023c96:	add    BYTE PTR [eax],al
30023c98:	mov    edx,DWORD PTR [edi]
30023c9a:	lea    eax,[edi+0x20]
30023c9d:	push   eax
30023c9e:	call   DWORD PTR [edx+0x14]
30023ca1:	push   eax
30023ca2:	lea    ecx,[edi+0x30]
30023ca5:	call   0x300014c1
30023caa:	jmp    0x3001b22f
30023caf:	push   0x30006ce8
30023cb4:	lea    ecx,[ebp-0x4]
30023cb7:	call   0x300089ae
30023cbc:	mov    edx,DWORD PTR [edi]
30023cbe:	lea    eax,[edi+0x20]
30023cc1:	push   eax
30023cc2:	lea    eax,[ebp-0x4]
30023cc5:	push   eax
30023cc6:	mov    ecx,edi
30023cc8:	call   DWORD PTR [edx+0x10]
30023ccb:	push   eax
30023ccc:	lea    ecx,[edi+0x2c]
30023ccf:	call   0x300014c1
30023cd4:	lea    ecx,[ebp-0x4]
30023cd7:	call   0x300051a4
30023cdc:	jmp    0x3001b23b
30023ce1:	mov    eax,0x80070057
30023ce6:	jmp    0x3000adc1
30023ceb:	lea    edi,[esi+0x44]
30023cee:	jmp    0x3000ad50
30023cf3:	call   0x30033b12
30023cf8:	mov    edx,DWORD PTR [eax]
30023cfa:	push   0x30023d2c
30023cff:	push   0x3
30023d01:	mov    ecx,eax
30023d03:	call   DWORD PTR [edx+0x8]
30023d06:	jmp    0x30011cb0
30023d0b:	movzx  esi,si
30023d0e:	or     esi,0x80070000
30023d14:	test   esi,esi
30023d16:	jmp    0x30011ce6
30023d1b:	movzx  esi,si
30023d1e:	or     esi,0x80070000
30023d24:	jmp    0x30011d2a
30023d29:	nop
30023d2a:	nop
30023d2b:	nop
30023d2c:	push   ebx
30023d2d:	add    BYTE PTR [ecx+0x0],ah
30023d30:	jbe    0x30023d32
30023d32:	imul   eax,DWORD PTR [eax],0x67006e
30023d38:	and    BYTE PTR [eax],al
30023d3a:	jo     0x30023d3c
30023d3c:	imul   eax,DWORD PTR [eax],0x67
30023d3f:	add    BYTE PTR [eax+eax*1+0x65],ah
30023d43:	add    BYTE PTR [esi+0x0],ah
30023d46:	and    BYTE PTR [eax],al
30023d48:	arpl   WORD PTR [eax],ax
30023d4a:	popa   
30023d4b:	add    BYTE PTR [ebx+0x0],ah
30023d4e:	push   0x20006500
30023d53:	add    BYTE PTR [eax+eax*1+0x69],dh
30023d57:	add    BYTE PTR [ebp+0x0],ch
30023d5a:	add    BYTE PTR gs:[eax],ah
30023d5d:	add    BYTE PTR [ebx+0x0],dh
30023d60:	je     0x30023d62
30023d62:	popa   
30023d63:	add    BYTE PTR [ebp+0x0],ch
30023d66:	jo     0x30023d68
30023d68:	add    BYTE PTR [eax],al
30023d6a:	mov    ecx,0x30023d90
30023d6f:	jmp    0x30023d7f
30023d71:	mov    ecx,0x30023df4
30023d76:	jmp    0x30023d7d
30023d78:	mov    ecx,0x30023e2c
30023d7d:	push   DWORD PTR [ebx]
30023d7f:	mov    edx,edi
30023d81:	call   0x30033b68
30023d86:	jmp    0x3000ae37
30023d8b:	nop
30023d8c:	nop
30023d8d:	nop
30023d8e:	nop
30023d8f:	nop
30023d90:	inc    ebx
30023d91:	add    BYTE PTR [edi+0x0],ch
30023d94:	jne    0x30023d96
30023d96:	ins    BYTE PTR es:[edi],dx
30023d97:	add    BYTE PTR [eax+eax*1+0x20],ah
30023d9b:	add    BYTE PTR [esi+0x0],ch
30023d9e:	outs   dx,DWORD PTR ds:[esi]
30023d9f:	add    BYTE PTR [eax+eax*1+0x20],dh
30023da3:	add    BYTE PTR [eax+0x0],dl
30023da6:	jb     0x30023da8
30023da8:	add    BYTE PTR gs:[eax+0x0],dh
30023dac:	popa   
30023dad:	add    BYTE PTR [edx+0x0],dh
30023db0:	add    BYTE PTR gs:[eax+0x0],dl
30023db4:	imul   eax,DWORD PTR [eax],0x67
30023db7:	add    BYTE PTR [eax+eax*1+0x65],al
30023dbb:	add    BYTE PTR [esi+0x0],ah
30023dbe:	push   eax
30023dbf:	add    BYTE PTR [edx+0x0],dh
30023dc2:	outs   dx,DWORD PTR ds:[esi]
30023dc3:	add    BYTE PTR [ebx+0x0],ah
30023dc6:	add    BYTE PTR gs:[ebx+0x0],dh
30023dca:	jae    0x30023dcc
30023dcc:	outs   dx,DWORD PTR ds:[esi]
30023dcd:	add    BYTE PTR [edx+0x0],dh
30023dd0:	and    BYTE PTR [eax],al
30023dd2:	data16 add BYTE PTR [edi+0x0],ch
30023dd6:	jb     0x30023dd8
30023dd8:	and    BYTE PTR [eax],al
30023dda:	push   eax
30023ddb:	add    BYTE PTR [ebx+0x0],ch
30023dde:	add    BYTE PTR [si+0x0],al
30023de2:	add    BYTE PTR gs:[esi+0x0],ah
30023de6:	and    BYTE PTR [eax],al
30023de8:	data16 add BYTE PTR [ecx+0x0],ch
30023dec:	ins    BYTE PTR es:[edi],dx
30023ded:	add    BYTE PTR [ebp+0x0],ah
30023df0:	add    BYTE PTR [eax],al
30023df2:	nop
30023df3:	nop
30023df4:	inc    ebx
30023df5:	add    BYTE PTR [edi+0x0],ch
30023df8:	jne    0x30023dfa
30023dfa:	ins    BYTE PTR es:[edi],dx
30023dfb:	add    BYTE PTR [eax+eax*1+0x20],ah
30023dff:	add    BYTE PTR [esi+0x0],ch
30023e02:	outs   dx,DWORD PTR ds:[esi]
30023e03:	add    BYTE PTR [eax+eax*1+0x20],dh
30023e07:	add    BYTE PTR [edi+0x0],ch
30023e0a:	jo     0x30023e0c
30023e0c:	add    BYTE PTR gs:[esi+0x0],ch
30023e10:	and    BYTE PTR [eax],al
30023e12:	push   eax
30023e13:	add    BYTE PTR [ebx+0x0],ch
30023e16:	add    BYTE PTR [si+0x0],al
30023e1a:	add    BYTE PTR gs:[esi+0x0],ah
30023e1e:	and    BYTE PTR [eax],al
30023e20:	data16 add BYTE PTR [ecx+0x0],ch
30023e24:	ins    BYTE PTR es:[edi],dx
30023e25:	add    BYTE PTR [ebp+0x0],ah
30023e28:	add    BYTE PTR [eax],al
30023e2a:	nop
30023e2b:	nop
30023e2c:	inc    ebx
30023e2d:	add    BYTE PTR [edi+0x0],ch
30023e30:	jne    0x30023e32
30023e32:	ins    BYTE PTR es:[edi],dx
30023e33:	add    BYTE PTR [eax+eax*1+0x20],ah
30023e37:	add    BYTE PTR [esi+0x0],ch
30023e3a:	outs   dx,DWORD PTR ds:[esi]
30023e3b:	add    BYTE PTR [eax+eax*1+0x20],dh
30023e3f:	add    BYTE PTR [eax+0x0],dh
30023e42:	jb     0x30023e44
30023e44:	outs   dx,DWORD PTR ds:[esi]
30023e45:	add    BYTE PTR [ebx+0x0],ah
30023e48:	add    BYTE PTR gs:[ebx+0x0],dh
30023e4c:	jae    0x30023e4e
30023e4e:	and    BYTE PTR [eax],al
30023e50:	push   eax
30023e51:	add    BYTE PTR [ebx+0x0],ch
30023e54:	add    BYTE PTR [si+0x0],al
30023e58:	add    BYTE PTR gs:[esi+0x0],ah
30023e5c:	and    BYTE PTR [eax],al
30023e5e:	data16 add BYTE PTR [ecx+0x0],ch
30023e62:	ins    BYTE PTR es:[edi],dx
30023e63:	add    BYTE PTR [ebp+0x0],ah
30023e66:	add    BYTE PTR [eax],al
30023e68:	xor    esi,esi
30023e6a:	jmp    0x30009173
30023e6f:	cmp    BYTE PTR ds:0x300430f1,0x0
30023e76:	je     0x30009386
30023e7c:	call   0x30033b12
30023e81:	mov    edx,DWORD PTR [eax]
30023e83:	push   0x80004005
30023e88:	push   0x30023ea0
30023e8d:	push   0x1
30023e8f:	mov    ecx,eax
30023e91:	call   DWORD PTR [edx+0x4]
30023e94:	jmp    0x30009386
30023e99:	nop
30023e9a:	nop
30023e9b:	nop
30023e9c:	nop
30023e9d:	nop
30023e9e:	nop
30023e9f:	nop
30023ea0:	inc    ebp
30023ea1:	add    BYTE PTR [edx+0x0],dh
30023ea4:	jb     0x30023ea6
30023ea6:	outs   dx,DWORD PTR ds:[esi]
30023ea7:	add    BYTE PTR [edx+0x0],dh
30023eaa:	and    BYTE PTR [eax],al
30023eac:	ja     0x30023eae
30023eae:	push   0x6c006900
30023eb3:	add    BYTE PTR [ebp+0x0],ah
30023eb6:	and    BYTE PTR [eax],al
30023eb8:	add    BYTE PTR gs:[eax+0x0],bh
30023ebc:	jo     0x30023ebe
30023ebe:	popa   
30023ebf:	add    BYTE PTR [esi+0x0],ch
30023ec2:	add    BYTE PTR fs:[ecx+0x0],ch
30023ec6:	outs   dx,BYTE PTR ds:[esi]
30023ec7:	add    BYTE PTR [edi+0x0],ah
30023eca:	and    BYTE PTR [eax],al
30023ecc:	add    BYTE PTR gs:[esi+0x0],ch
30023ed0:	jbe    0x30023ed2
30023ed2:	imul   eax,DWORD PTR [eax],0x6f0072
30023ed8:	outs   dx,BYTE PTR ds:[esi]
30023ed9:	add    BYTE PTR [ebp+0x0],ch
30023edc:	add    BYTE PTR gs:[esi+0x0],ch
30023ee0:	je     0x30023ee2
30023ee2:	and    BYTE PTR [eax],al
30023ee4:	jbe    0x30023ee6
30023ee6:	popa   
30023ee7:	add    BYTE PTR [edx+0x0],dh
30023eea:	imul   eax,DWORD PTR [eax],0x620061
30023ef0:	ins    BYTE PTR es:[edi],dx
30023ef1:	add    BYTE PTR [ebp+0x0],ah
30023ef4:	jae    0x30023ef6
30023ef6:	add    BYTE PTR cs:[eax],al
30023ef9:	add    BYTE PTR [ebp+0x6851014f],cl
30023eff:	jo     0x30023f44
30023f01:	add    dh,BYTE PTR [eax]
30023f03:	mov    ecx,ebx
30023f05:	call   0x3000923c
30023f0a:	mov    DWORD PTR [ebp-0x110],eax
30023f10:	cmp    eax,esi
30023f12:	je     0x30009338
30023f18:	push   edi
30023f19:	push   0x0
30023f1b:	lea    eax,[ebp-0x130]
30023f21:	push   eax
30023f22:	mov    ecx,ebx
30023f24:	call   0x30008d6e
30023f29:	mov    eax,DWORD PTR [ebx]
30023f2b:	mov    ecx,DWORD PTR [ebp-0x110]
30023f31:	mov    eax,DWORD PTR [eax-0xc]
30023f34:	sub    eax,ecx
30023f36:	dec    eax
30023f37:	push   eax
30023f38:	lea    eax,[ecx+0x1]
30023f3b:	push   eax
30023f3c:	lea    eax,[ebp-0x134]
30023f42:	push   eax
30023f43:	mov    ecx,ebx
30023f45:	call   0x30008d6e
30023f4a:	mov    eax,DWORD PTR [ebp-0x110]
30023f50:	sub    eax,edi
30023f52:	sub    eax,0x2
30023f55:	push   eax
30023f56:	lea    eax,[edi+0x2]
30023f59:	push   eax
30023f5a:	lea    eax,[ebp-0x10c]
30023f60:	push   eax
30023f61:	mov    ecx,ebx
30023f63:	call   0x30008d6e
30023f68:	lea    ecx,[ebp-0x10c]
30023f6e:	call   0x30008e3c
30023f73:	push   eax
30023f74:	lea    ecx,[ebp-0x10c]
30023f7a:	call   0x300014c1
30023f7f:	push   0x3002a7ec
30023f84:	lea    ecx,[ebp-0x120]
30023f8a:	call   0x3000437e
30023f8f:	push   0x30024374
30023f94:	lea    ecx,[ebp-0x118]
30023f9a:	call   0x3000437e
30023f9f:	push   0x3002439c
30023fa4:	lea    ecx,[ebp-0x11c]
30023faa:	call   0x3000437e
30023faf:	xor    edi,edi
30023fb1:	push   edi
30023fb2:	push   DWORD PTR [ebp-0x120]
30023fb8:	lea    ecx,[ebp-0x10c]
30023fbe:	call   0x3000923c
30023fc3:	test   eax,eax
30023fc5:	jne    0x30023fd4
30023fc7:	mov    eax,DWORD PTR [ebp-0x120]
30023fcd:	mov    edi,0x80000002
30023fd2:	jmp    0x3002401c
30023fd4:	push   edi
30023fd5:	push   DWORD PTR [ebp-0x118]
30023fdb:	lea    ecx,[ebp-0x10c]
30023fe1:	call   0x3000923c
30023fe6:	test   eax,eax
30023fe8:	jne    0x30023ff7
30023fea:	mov    eax,DWORD PTR [ebp-0x118]
30023ff0:	mov    edi,0x80000001
30023ff5:	jmp    0x3002401c
30023ff7:	push   edi
30023ff8:	push   DWORD PTR [ebp-0x11c]
30023ffe:	lea    ecx,[ebp-0x10c]
30024004:	call   0x3000923c
30024009:	test   eax,eax
3002400b:	jne    0x3002430f
30024011:	mov    eax,DWORD PTR [ebp-0x11c]
30024017:	mov    edi,0x80000000
3002401c:	mov    ecx,DWORD PTR [eax-0xc]
3002401f:	mov    eax,DWORD PTR [ebp-0x10c]
30024025:	mov    eax,DWORD PTR [eax-0xc]
30024028:	sub    eax,ecx
3002402a:	push   eax
3002402b:	push   ecx
3002402c:	lea    eax,[ebp-0x110]
30024032:	push   eax
30024033:	lea    ecx,[ebp-0x10c]
30024039:	call   0x30008d6e
3002403e:	lea    eax,[ebp-0x110]
30024044:	push   eax
30024045:	lea    ecx,[ebp-0x10c]
3002404b:	call   0x300014c1
30024050:	lea    ecx,[ebp-0x110]
30024056:	call   0x300051a4
3002405b:	push   0x30006ce8
30024060:	lea    ecx,[ebp-0x124]
30024066:	call   0x3000437e
3002406b:	mov    eax,DWORD PTR [ebp-0x10c]
30024071:	lea    ecx,[ebp-0x10c]
30024077:	push   DWORD PTR [eax-0xc]
3002407a:	call   0x30008e17
3002407f:	push   0x5c
30024081:	pop    ecx
30024082:	cmp    ax,cx
30024085:	jne    0x30024094
30024087:	mov    eax,DWORD PTR [ebp-0x10c]
3002408d:	mov    eax,DWORD PTR [eax-0xc]
30024090:	dec    eax
30024091:	push   eax
30024092:	jmp    0x300240e4
30024094:	push   ecx
30024095:	push   DWORD PTR [ebp-0x10c]
3002409b:	call   DWORD PTR ds:0x30045328
300240a1:	pop    ecx
300240a2:	pop    ecx
300240a3:	mov    ecx,DWORD PTR [ebp-0x10c]
300240a9:	test   eax,eax
300240ab:	je     0x300240b3
300240ad:	mov    esi,eax
300240af:	sub    esi,ecx
300240b1:	sar    esi,1
300240b3:	mov    eax,DWORD PTR [ecx-0xc]
300240b6:	sub    eax,esi
300240b8:	dec    eax
300240b9:	push   eax
300240ba:	lea    eax,[ebp-0x110]
300240c0:	push   eax
300240c1:	lea    ecx,[ebp-0x10c]
300240c7:	call   0x30009162
300240cc:	push   eax
300240cd:	lea    ecx,[ebp-0x124]
300240d3:	call   0x300014c1
300240d8:	lea    ecx,[ebp-0x110]
300240de:	call   0x300051a4
300240e3:	push   esi
300240e4:	lea    eax,[ebp-0x110]
300240ea:	push   eax
300240eb:	lea    ecx,[ebp-0x10c]
300240f1:	call   0x30008de3
300240f6:	push   eax
300240f7:	lea    ecx,[ebp-0x10c]
300240fd:	call   0x300014c1
30024102:	lea    ecx,[ebp-0x110]
30024108:	call   0x300051a4
3002410d:	mov    esi,0x104
30024112:	lea    ecx,[ebp-0x128]
30024118:	mov    DWORD PTR [ebp-0x110],esi
3002411e:	call   0x300051c8
30024123:	push   DWORD PTR [ebp-0x10c]
30024129:	xor    eax,eax
3002412b:	lea    ecx,[ebp-0x108]
30024131:	mov    DWORD PTR [ebp-0x140],eax
30024137:	mov    DWORD PTR [ebp-0x13c],eax
3002413d:	mov    DWORD PTR [ebp-0x138],eax
30024143:	call   0x30033e53
30024148:	push   0x20019
3002414d:	push   DWORD PTR [eax]
3002414f:	lea    ecx,[ebp-0x140]
30024155:	push   edi
30024156:	call   0x300051d9
3002415b:	lea    eax,[ebp-0x104]
30024161:	cmp    DWORD PTR [ebp-0x108],eax
30024167:	je     0x30024176
30024169:	push   DWORD PTR [ebp-0x108]
3002416f:	call   DWORD PTR ds:0x300452b4
30024175:	pop    ecx
30024176:	push   esi
30024177:	lea    ecx,[ebp-0x128]
3002417d:	call   0x30004286
30024182:	push   DWORD PTR [ebp-0x124]
30024188:	lea    ecx,[ebp-0x108]
3002418e:	mov    esi,eax
30024190:	call   0x30033e53
30024195:	lea    ecx,[ebp-0x110]
3002419b:	push   ecx
3002419c:	push   esi
3002419d:	push   DWORD PTR [eax]
3002419f:	lea    ecx,[ebp-0x140]
300241a5:	call   0x3001c8be
300241aa:	mov    esi,eax
300241ac:	lea    eax,[ebp-0x104]
300241b2:	cmp    DWORD PTR [ebp-0x108],eax
300241b8:	je     0x300241c7
300241ba:	push   DWORD PTR [ebp-0x108]
300241c0:	call   DWORD PTR ds:0x300452b4
300241c6:	pop    ecx
300241c7:	test   esi,esi
300241c9:	jne    0x30024223
300241cb:	mov    eax,DWORD PTR [ebp-0x110]
300241d1:	dec    eax
300241d2:	push   eax
300241d3:	lea    ecx,[ebp-0x128]
300241d9:	call   0x30006c8c
300241de:	lea    eax,[ebp-0x134]
300241e4:	push   eax
300241e5:	lea    eax,[ebp-0x128]
300241eb:	push   eax
300241ec:	lea    ecx,[ebp-0x12c]
300241f2:	call   0x30004340
300241f7:	push   eax
300241f8:	lea    edx,[ebp-0x130]
300241fe:	lea    ecx,[ebp-0x114]
30024204:	call   0x30009298
30024209:	mov    edx,eax
3002420b:	lea    ecx,[ebp-0x110]
30024211:	call   0x30009298
30024216:	push   eax
30024217:	mov    ecx,ebx
30024219:	call   0x300014c1
3002421e:	jmp    0x300242cb
30024223:	lea    ecx,[ebp-0x12c]
30024229:	call   0x300051c8
3002422e:	lea    ecx,[ebp-0x114]
30024234:	call   0x300051c8
30024239:	cmp    edi,0x80000002
3002423f:	jne    0x30024249
30024241:	lea    eax,[ebp-0x120]
30024247:	jmp    0x30024267
30024249:	cmp    edi,0x80000001
3002424f:	jne    0x30024259
30024251:	lea    eax,[ebp-0x118]
30024257:	jmp    0x30024267
30024259:	cmp    edi,0x80000000
3002425f:	jne    0x30024273
30024261:	lea    eax,[ebp-0x11c]
30024267:	push   eax
30024268:	lea    ecx,[ebp-0x114]
3002426e:	call   0x300014c1
30024273:	cmp    BYTE PTR ds:0x300430f1,0x0
3002427a:	je     0x300242d6
3002427c:	lea    ecx,[ebp-0x110]
30024282:	call   0x300051c8
30024287:	push   DWORD PTR [ebp-0x10c]
3002428d:	lea    eax,[ebp-0x110]
30024293:	push   DWORD PTR [ebp-0x114]
30024299:	push   DWORD PTR [ebp-0x124]
3002429f:	push   0x300243f8
300242a4:	push   eax
300242a5:	call   0x30005153
300242aa:	add    esp,0x14
300242ad:	cmp    BYTE PTR ds:0x300430f1,0x0
300242b4:	je     0x300242cb
300242b6:	push   DWORD PTR [ebp-0x110]
300242bc:	xor    edx,edx
300242be:	push   0x30024418
300242c3:	push   0x2
300242c5:	pop    ecx
300242c6:	call   0x30033ac0
300242cb:	lea    ecx,[ebp-0x110]
300242d1:	call   0x300051a4
300242d6:	lea    ecx,[ebp-0x114]
300242dc:	call   0x300051a4
300242e1:	lea    ecx,[ebp-0x12c]
300242e7:	call   0x300051a4
300242ec:	lea    ecx,[ebp-0x140]
300242f2:	call   0x300051ae
300242f7:	lea    ecx,[ebp-0x128]
300242fd:	call   0x300051a4
30024302:	lea    ecx,[ebp-0x124]
30024308:	call   0x300051a4
3002430d:	jmp    0x30024329
3002430f:	cmp    BYTE PTR ds:0x300430f1,0x0
30024316:	je     0x30024329
30024318:	push   DWORD PTR [ebx]
3002431a:	xor    edx,edx
3002431c:	push   0x300243c4
30024321:	push   0x2
30024323:	pop    ecx
30024324:	call   0x30033ac0
30024329:	lea    ecx,[ebp-0x11c]
3002432f:	call   0x300051a4
30024334:	lea    ecx,[ebp-0x118]
3002433a:	call   0x300051a4
3002433f:	lea    ecx,[ebp-0x120]
30024345:	call   0x300051a4
3002434a:	lea    ecx,[ebp-0x10c]
30024350:	call   0x300051a4
30024355:	lea    ecx,[ebp-0x134]
3002435b:	call   0x300051a4
30024360:	lea    ecx,[ebp-0x130]
30024366:	call   0x300051a4
3002436b:	jmp    0x30009338
30024370:	and    al,0x0
30024372:	add    BYTE PTR [eax],al
30024374:	dec    eax
30024375:	add    BYTE PTR [ebx+0x0],cl
30024378:	inc    ebp
30024379:	add    BYTE PTR [ecx+0x0],bl
3002437c:	pop    edi
3002437d:	add    BYTE PTR [ebx+0x0],al
30024380:	push   ebp
30024381:	add    BYTE PTR [edx+0x0],dl
30024384:	push   edx
30024385:	add    BYTE PTR [ebp+0x0],al
30024388:	dec    esi
30024389:	add    BYTE PTR [eax+eax*1+0x5f],dl
3002438d:	add    BYTE PTR [ebp+0x0],dl
30024390:	push   ebx
30024391:	add    BYTE PTR [ebp+0x0],al
30024394:	push   edx
30024395:	add    BYTE PTR [eax+eax*1+0x0],bl
30024399:	add    BYTE PTR [eax+0x4b004890],dl
3002439f:	add    BYTE PTR [ebp+0x0],al
300243a2:	pop    ecx
300243a3:	add    BYTE PTR [edi+0x0],bl
300243a6:	inc    ebx
300243a7:	add    BYTE PTR [eax+eax*1+0x41],cl
300243ab:	add    BYTE PTR [ebx+0x0],dl
300243ae:	push   ebx
300243af:	add    BYTE PTR [ebp+0x0],al
300243b2:	push   ebx
300243b3:	add    BYTE PTR [edi+0x0],bl
300243b6:	push   edx
300243b7:	add    BYTE PTR [edi+0x0],cl
300243ba:	dec    edi
300243bb:	add    BYTE PTR [eax+eax*1+0x5c],dl
300243bf:	add    BYTE PTR [eax],al
300243c1:	add    BYTE PTR [eax+0x6b005090],dl
300243c7:	add    BYTE PTR [edi+0x0],ah
300243ca:	inc    esp
300243cb:	add    BYTE PTR [ebp+0x0],ah
300243ce:	data16 add BYTE PTR [edx],bh
300243d1:	add    BYTE PTR [eax],ah
300243d3:	add    BYTE PTR [ebp+0x0],dl
300243d6:	outs   dx,BYTE PTR ds:[esi]
300243d7:	add    BYTE PTR [ebx+0x0],ch
300243da:	outs   dx,BYTE PTR ds:[esi]
300243db:	add    BYTE PTR [edi+0x0],ch
300243de:	ja     0x300243e0
300243e0:	outs   dx,BYTE PTR ds:[esi]
300243e1:	add    BYTE PTR [eax],ah
300243e3:	add    BYTE PTR [edx+0x0],dh
300243e6:	outs   dx,DWORD PTR ds:[esi]
300243e7:	add    BYTE PTR [edi+0x0],ch
300243ea:	je     0x300243ec
300243ec:	and    BYTE PTR [eax],al
300243ee:	imul   eax,DWORD PTR [eax],0x65
300243f1:	add    BYTE PTR [ecx+0x0],bh
300243f4:	add    BYTE PTR [eax],al
300243f6:	nop
300243f7:	nop
300243f8:	and    eax,0x20007300
300243fd:	add    BYTE PTR [ecx+0x0],ah
30024400:	je     0x30024402
30024402:	and    BYTE PTR [eax],al
30024404:	imul   eax,DWORD PTR [eax],0x65
30024407:	add    BYTE PTR [ecx+0x0],bh
3002440a:	and    BYTE PTR [eax],al
3002440c:	and    eax,0x5c007300
30024411:	add    BYTE PTR ds:0x7300,ah
30024417:	add    BYTE PTR [ebx+0x0],al
3002441a:	popa   
3002441b:	add    BYTE PTR [esi+0x0],ch
3002441e:	outs   dx,BYTE PTR ds:[esi]
3002441f:	add    BYTE PTR [edi+0x0],ch
30024422:	je     0x30024424
30024424:	and    BYTE PTR [eax],al
30024426:	jno    0x30024428
30024428:	jne    0x3002442a
3002442a:	add    BYTE PTR gs:[edx+0x0],dh
3002442e:	jns    0x30024430
30024430:	and    BYTE PTR [eax],al
30024432:	je     0x30024434
30024434:	push   0x20006500
30024439:	add    BYTE PTR [esi+0x0],dh
3002443c:	popa   
3002443d:	add    BYTE PTR [eax+eax*1+0x75],ch
30024441:	add    BYTE PTR [ebp+0x0],ah
30024444:	add    BYTE PTR [eax],al
30024446:	lea    eax,[esi+0x2]
30024449:	push   eax
3002444a:	push   0x30024550
3002444f:	mov    ecx,ebx
30024451:	mov    DWORD PTR [ebp-0x20],eax
30024454:	call   0x3000923c
30024459:	mov    edi,eax
3002445b:	test   edi,edi
3002445d:	js     0x300093eb
30024463:	mov    ecx,edi
30024465:	sub    ecx,esi
30024467:	sub    ecx,0x2
3002446a:	push   ecx
3002446b:	lea    eax,[esi+0x2]
3002446e:	push   eax
3002446f:	lea    eax,[ebp-0x4]
30024472:	push   eax
30024473:	mov    ecx,ebx
30024475:	call   0x30008d6e
3002447a:	push   0x30024558
3002447f:	push   0x30024550
30024484:	lea    ecx,[ebp-0xc]
30024487:	call   0x3000437e
3002448c:	push   eax
3002448d:	lea    eax,[ebp-0x8]
30024490:	push   eax
30024491:	call   0x3000ba45
30024496:	push   DWORD PTR [eax]
30024498:	push   DWORD PTR [ebp-0x4]
3002449b:	call   DWORD PTR ds:0x30045354
300244a1:	mov    esi,eax
300244a3:	pop    ecx
300244a4:	pop    ecx
300244a5:	test   esi,esi
300244a7:	jne    0x300244ae
300244a9:	or     esi,0xffffffff
300244ac:	jmp    0x300244b3
300244ae:	sub    esi,DWORD PTR [ebp-0x4]
300244b1:	sar    esi,1
300244b3:	lea    ecx,[ebp-0x8]
300244b6:	call   0x300051a4
300244bb:	lea    ecx,[ebp-0xc]
300244be:	call   0x300051a4
300244c3:	test   esi,esi
300244c5:	jns    0x30024534
300244c7:	mov    ecx,0x30024568
300244cc:	push   ecx
300244cd:	lea    eax,[ebp-0x4]
300244d0:	push   eax
300244d1:	push   ecx
300244d2:	lea    eax,[ebp-0x1c]
300244d5:	push   eax
300244d6:	call   0x3000a724
300244db:	push   eax
300244dc:	lea    eax,[ebp-0x18]
300244df:	push   eax
300244e0:	call   0x3000ba45
300244e5:	mov    esi,DWORD PTR [eax]
300244e7:	push   0x30024550
300244ec:	lea    eax,[ebp-0x4]
300244ef:	push   eax
300244f0:	push   0x300093b4
300244f5:	lea    eax,[ebp-0x14]
300244f8:	push   eax
300244f9:	call   0x3000a724
300244fe:	push   eax
300244ff:	lea    eax,[ebp-0x10]
30024502:	push   eax
30024503:	call   0x3000ba45
30024508:	push   esi
30024509:	push   DWORD PTR [eax]
3002450b:	mov    ecx,ebx
3002450d:	call   0x300043f1
30024512:	lea    ecx,[ebp-0x10]
30024515:	call   0x300051a4
3002451a:	lea    ecx,[ebp-0x14]
3002451d:	call   0x300051a4
30024522:	lea    ecx,[ebp-0x18]
30024525:	call   0x300051a4
3002452a:	lea    ecx,[ebp-0x1c]
3002452d:	call   0x300051a4
30024532:	jmp    0x30024537
30024534:	mov    edi,DWORD PTR [ebp-0x20]
30024537:	lea    ecx,[ebp-0x4]
3002453a:	call   0x300051a4
3002453f:	mov    eax,DWORD PTR [ebx]
30024541:	cmp    edi,DWORD PTR [eax-0xc]
30024544:	jl     0x300093d4
3002454a:	jmp    0x300093eb
3002454f:	nop
30024550:	and    al,0x0
30024552:	and    eax,0x90000000
30024557:	nop
30024558:	or     DWORD PTR [eax],eax
3002455a:	or     al,BYTE PTR [eax]
3002455c:	or     eax,DWORD PTR [eax]
3002455e:	or     al,0x0
30024560:	or     eax,0x2000
30024565:	add    BYTE PTR [eax+0x2590],dl
3002456b:	add    BYTE PTR [ebx],dh
3002456d:	imul   cl
3002456f:	or     BYTE PTR [eax-0x2],0xff
30024573:	push   ecx
30024574:	mov    ecx,DWORD PTR [ebp+0x8]
30024577:	call   0x30004340
3002457c:	jmp    0x30008e0e
30024581:	push   0x80070057
30024586:	call   0x3002ae0b
3002458b:	int3   
3002458c:	xor    eax,eax
3002458e:	pop    esi
3002458f:	ret    
30024590:	mov    eax,0x80070057
30024595:	jmp    0x3000bc03
3002459a:	mov    eax,0x80070057
3002459f:	jmp    0x3000bc02
300245a4:	mov    eax,0x80070057
300245a9:	jmp    0x3000bb5e
300245ae:	mov    eax,0x80070057
300245b3:	jmp    0x3001b11f
300245b8:	movzx  eax,ax
300245bb:	or     eax,0x80070000
300245c0:	test   eax,eax
300245c2:	jmp    0x3001b0e4
300245c7:	movzx  eax,ax
300245ca:	or     eax,0x80070000
300245cf:	test   eax,eax
300245d1:	jmp    0x3001b10d
300245d6:	movzx  eax,ax
300245d9:	or     eax,0x80070000
300245de:	test   eax,eax
300245e0:	jmp    0x30012025
300245e5:	movzx  eax,ax
300245e8:	or     eax,0x80070000
300245ed:	test   eax,eax
300245ef:	jmp    0x3000e60d
300245f4:	movzx  esi,si
300245f7:	or     esi,0x80070000
300245fd:	test   esi,esi
300245ff:	jmp    0x3000e63c
30024604:	push   0x0
30024606:	call   0x30004147
3002460b:	mov    eax,esi
3002460d:	jmp    0x3000e64e
30024612:	movzx  eax,ax
30024615:	or     eax,0x80070000
3002461a:	jmp    0x300137f3
3002461f:	push   0xd
30024621:	pop    eax
30024622:	jmp    0x3001b1f6
30024627:	dec    eax
30024628:	je     0x300162ee
3002462e:	test   esi,esi
30024630:	jle    0x300162f1
30024636:	movzx  esi,si
30024639:	or     esi,0x80070000
3002463f:	jmp    0x300162f1
30024644:	mov    eax,0x80070057
30024649:	jmp    0x30018a80
3002464e:	sub    eax,DWORD PTR [esi]
30024650:	sar    eax,1
30024652:	js     0x300188ad
30024658:	jmp    0x30024644
3002465a:	mov    edi,eax
3002465c:	jmp    0x30018a67
30024661:	call   0x3000c170
30024666:	lea    ecx,[ebp-0x10]
30024669:	call   0x300051a4
3002466e:	mov    edi,0x80030002
30024673:	jmp    0x30018a67
30024678:	mov    eax,0x80070057
3002467d:	jmp    0x3001823a
30024682:	call   DWORD PTR ds:0x30045160
30024688:	mov    esi,eax
3002468a:	test   esi,esi
3002468c:	jle    0x3001822e
30024692:	movzx  esi,si
30024695:	or     esi,0x80070000
3002469b:	jmp    0x3001822e
300246a0:	mov    esi,0x80010135
300246a5:	jmp    0x3001822e
300246aa:	test   eax,eax
300246ac:	jle    0x30018179
300246b2:	movzx  eax,ax
300246b5:	or     eax,0x80070000
300246ba:	jmp    0x30018179
300246bf:	cmp    DWORD PTR [ebp-0x4],esi
300246c2:	je     0x3000590c
300246c8:	lea    eax,[ebp-0xc]
300246cb:	push   eax
300246cc:	push   esi
300246cd:	push   esi
300246ce:	push   esi
300246cf:	push   esi
300246d0:	push   esi
300246d1:	push   esi
300246d2:	push   esi
300246d3:	push   esi
300246d4:	push   esi
300246d5:	push   esi
300246d6:	push   DWORD PTR [ebp-0x4]
300246d9:	call   DWORD PTR ds:0x30045078
300246df:	test   eax,eax
300246e1:	je     0x300246e9
300246e3:	mov    DWORD PTR [ebp-0xc],esi
300246e6:	mov    DWORD PTR [ebp-0x8],esi
300246e9:	push   DWORD PTR [ebp-0x4]
300246ec:	call   DWORD PTR ds:0x30045004
300246f2:	jmp    0x3000590c
300246f7:	jle    0x30011a9e
300246fd:	movzx  eax,ax
30024700:	or     eax,0x80070000
30024705:	jmp    0x30011a9e
3002470a:	push   eax
3002470b:	push   0x3000522c
30024710:	push   DWORD PTR [esp+0x24]
30024714:	call   0x30005153
30024719:	add    esp,0x10
3002471c:	jmp    0x30011f04
30024721:	push   eax
30024722:	push   eax
30024723:	push   eax
30024724:	push   eax
30024725:	lea    eax,[ebp-0x20c]
3002472b:	push   eax
3002472c:	push   DWORD PTR [ebp-0x42c]
30024732:	call   DWORD PTR ds:0x3004500c
30024738:	mov    edi,eax
3002473a:	cmp    edi,0x2
3002473d:	je     0x3001618d
30024743:	lea    ecx,[ebp-0x418]
30024749:	call   0x300051c8
3002474e:	lea    eax,[ebp-0x20c]
30024754:	push   eax
30024755:	lea    eax,[ebp-0x418]
3002475b:	test   edi,edi
3002475d:	jne    0x3002478c
3002475f:	push   0x300247c8
30024764:	push   eax
30024765:	call   0x30005153
3002476a:	add    esp,0xc
3002476d:	cmp    BYTE PTR ds:0x300430f1,0x0
30024774:	je     0x300247b6
30024776:	call   0x30033b12
3002477b:	push   DWORD PTR [ebp-0x418]
30024781:	mov    edx,DWORD PTR [eax]
30024783:	push   0x2
30024785:	mov    ecx,eax
30024787:	call   DWORD PTR [edx+0x8]
3002478a:	jmp    0x300247b6
3002478c:	push   0x30024850
30024791:	push   eax
30024792:	call   0x30005153
30024797:	add    esp,0xc
3002479a:	test   edi,edi
3002479c:	jle    0x300247a7
3002479e:	movzx  edi,di
300247a1:	or     edi,0x80070000
300247a7:	mov    ecx,DWORD PTR [ebp-0x418]
300247ad:	push   0x0
300247af:	mov    edx,edi
300247b1:	call   0x30033b68
300247b6:	lea    ecx,[ebp-0x418]
300247bc:	call   0x300051a4
300247c1:	jmp    0x3001618d
300247c6:	nop
300247c7:	nop
300247c8:	push   eax
300247c9:	add    BYTE PTR [ebx+0x0],ch
300247cc:	add    BYTE PTR [si+0x0],al
300247d0:	add    BYTE PTR gs:[esi+0x0],ah
300247d4:	and    BYTE PTR [eax],al
300247d6:	ins    DWORD PTR es:[edi],dx
300247d7:	add    BYTE PTR [ebp+0x0],ah
300247da:	jb     0x300247dc
300247dc:	add    BYTE PTR [di+0x0],ah
300247e0:	and    BYTE PTR [eax],al
300247e2:	jb     0x300247e4
300247e4:	add    BYTE PTR gs:[edi+0x0],ah
300247e8:	imul   eax,DWORD PTR [eax],0x740073
300247ee:	jb     0x300247f0
300247f0:	jns    0x300247f2
300247f2:	and    BYTE PTR [eax],al
300247f4:	add    BYTE PTR gs:[esi+0x0],ch
300247f8:	arpl   WORD PTR [eax],ax
300247fa:	outs   dx,DWORD PTR ds:[esi]
300247fb:	add    BYTE PTR [ebp+0x0],dh
300247fe:	outs   dx,BYTE PTR ds:[esi]
300247ff:	add    BYTE PTR [eax+eax*1+0x65],dh
30024803:	add    BYTE PTR [edx+0x0],dh
30024806:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
3002480b:	add    BYTE PTR [eax+eax*1+0x61],ah
3002480f:	add    BYTE PTR [eax+eax*1+0x61],dh
30024813:	add    BYTE PTR [eax],ah
30024815:	add    BYTE PTR [ebx+0x0],ah
30024818:	outs   dx,DWORD PTR ds:[esi]
30024819:	add    BYTE PTR [eax+eax*1+0x6c],ch
3002481d:	add    BYTE PTR [ecx+0x0],ch
30024820:	jae    0x30024822
30024822:	imul   eax,DWORD PTR [eax],0x6e006f
30024828:	and    BYTE PTR [eax],al
3002482a:	data16 add BYTE PTR [edi+0x0],ch
3002482e:	jb     0x30024830
30024830:	and    BYTE PTR [eax],al
30024832:	imul   eax,DWORD PTR [eax],0x65
30024835:	add    BYTE PTR [ecx+0x0],bh
30024838:	and    BYTE PTR [eax],al
3002483a:	jbe    0x3002483c
3002483c:	popa   
3002483d:	add    BYTE PTR [eax+eax*1+0x75],ch
30024841:	add    BYTE PTR [ebp+0x0],ah
30024844:	and    BYTE PTR [eax],al
30024846:	daa    
30024847:	add    BYTE PTR ds:0x27007300,ah
3002484d:	add    BYTE PTR [eax],al
3002484f:	add    BYTE PTR [ebp+0x0],al
30024852:	jb     0x30024854
30024854:	jb     0x30024856
30024856:	outs   dx,DWORD PTR ds:[esi]
30024857:	add    BYTE PTR [edx+0x0],dh
3002485a:	and    BYTE PTR [eax],al
3002485c:	ja     0x3002485e
3002485e:	push   0x6c006900
30024863:	add    BYTE PTR [ebp+0x0],ah
30024866:	and    BYTE PTR [eax],al
30024868:	ins    DWORD PTR es:[edi],dx
30024869:	add    BYTE PTR [ebp+0x0],ah
3002486c:	jb     0x3002486e
3002486e:	add    BYTE PTR [bx+di+0x0],ch
30024872:	outs   dx,BYTE PTR ds:[esi]
30024873:	add    BYTE PTR [edi+0x0],ah
30024876:	and    BYTE PTR [eax],al
30024878:	jbe    0x3002487a
3002487a:	popa   
3002487b:	add    BYTE PTR [eax+eax*1+0x75],ch
3002487f:	add    BYTE PTR [ebp+0x0],ah
30024882:	and    BYTE PTR [eax],al
30024884:	daa    
30024885:	add    BYTE PTR ds:0x27007300,ah
3002488b:	add    BYTE PTR [eax],al
3002488d:	add    BYTE PTR [eax+0x3002a894],bh
30024893:	jmp    0x3000c1a8
30024898:	sub    ecx,0x2
3002489b:	jmp    0x3000c221
300248a0:	mov    ecx,DWORD PTR [ebp-0x8]
300248a3:	call   0x3000c170
300248a8:	push   0x7b
300248aa:	call   DWORD PTR ds:0x30045110
300248b0:	jmp    0x3000c23a
300248b5:	mov    esi,edi
300248b7:	jmp    0x3000c29e
300248bc:	xor    eax,eax
300248be:	pop    esi
300248bf:	ret    
300248c0:	movzx  eax,ax
300248c3:	or     eax,0x80070000
300248c8:	test   eax,eax
300248ca:	jmp    0x3001baa7
300248cf:	cmp    BYTE PTR ds:0x300430f1,0x0
300248d6:	je     0x3001bae8
300248dc:	push   edi
300248dd:	push   0x30024900
300248e2:	mov    edx,eax
300248e4:	push   0x3
300248e6:	pop    ecx
300248e7:	call   0x30033ac0
300248ec:	jmp    0x3001bae8
300248f1:	push   edi
300248f2:	push   0x30024978
300248f7:	mov    edx,esi
300248f9:	jmp    0x300248e4
300248fb:	nop
300248fc:	nop
300248fd:	nop
300248fe:	nop
300248ff:	nop
30024900:	inc    ebx
30024901:	add    BYTE PTR [edi+0x0],ch
30024904:	jne    0x30024906
30024906:	ins    BYTE PTR es:[edi],dx
30024907:	add    BYTE PTR [eax+eax*1+0x20],ah
3002490b:	add    BYTE PTR [esi+0x0],ch
3002490e:	outs   dx,DWORD PTR ds:[esi]
3002490f:	add    BYTE PTR [eax+eax*1+0x20],dh
30024913:	add    BYTE PTR [edi+0x0],ch
30024916:	jo     0x30024918
30024918:	add    BYTE PTR gs:[esi+0x0],ch
3002491c:	and    BYTE PTR [eax],al
3002491e:	imul   eax,DWORD PTR [eax],0x65
30024921:	add    BYTE PTR [ecx+0x0],bh
30024924:	and    BYTE PTR [eax],al
30024926:	je     0x30024928
30024928:	outs   dx,DWORD PTR ds:[esi]
30024929:	add    BYTE PTR [eax],ah
3002492b:	add    BYTE PTR [ebx+0x0],ah
3002492e:	push   0x63006500
30024933:	add    BYTE PTR [ebx+0x0],ch
30024936:	and    BYTE PTR [eax],al
30024938:	inc    ebx
30024939:	add    BYTE PTR [edi+0x0],ch
3002493c:	outs   dx,BYTE PTR ds:[esi]
3002493d:	add    BYTE PTR [esi+0x0],ah
30024940:	imul   eax,DWORD PTR [eax],0x750067
30024946:	jb     0x30024948
30024948:	popa   
30024949:	add    BYTE PTR [eax+eax*1+0x69],dh
3002494d:	add    BYTE PTR [edi+0x0],ch
30024950:	outs   dx,BYTE PTR ds:[esi]
30024951:	add    BYTE PTR [ebx+0x0],al
30024954:	push   0x6e006100
30024959:	add    BYTE PTR [edi+0x0],ah
3002495c:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30024961:	add    BYTE PTR [eax+eax*1+0x69],dh
30024965:	add    BYTE PTR [ebp+0x0],ch
30024968:	add    BYTE PTR gs:[ebx+0x0],dh
3002496c:	je     0x3002496e
3002496e:	popa   
3002496f:	add    BYTE PTR [ebp+0x0],ch
30024972:	jo     0x30024974
30024974:	add    BYTE PTR cs:[eax],al
30024977:	add    BYTE PTR [ebx+0x0],al
3002497a:	outs   dx,DWORD PTR ds:[esi]
3002497b:	add    BYTE PTR [ebp+0x0],dh
3002497e:	ins    BYTE PTR es:[edi],dx
3002497f:	add    BYTE PTR [eax+eax*1+0x20],ah
30024983:	add    BYTE PTR [esi+0x0],ch
30024986:	outs   dx,DWORD PTR ds:[esi]
30024987:	add    BYTE PTR [eax+eax*1+0x20],dh
3002498b:	add    BYTE PTR [esi+0x0],ah
3002498e:	imul   eax,DWORD PTR [eax],0x64006e
30024994:	and    BYTE PTR [eax],al
30024996:	inc    ebx
30024997:	add    BYTE PTR [edi+0x0],ch
3002499a:	outs   dx,BYTE PTR ds:[esi]
3002499b:	add    BYTE PTR [esi+0x0],ah
3002499e:	imul   eax,DWORD PTR [eax],0x750067
300249a4:	jb     0x300249a6
300249a6:	popa   
300249a7:	add    BYTE PTR [eax+eax*1+0x69],dh
300249ab:	add    BYTE PTR [edi+0x0],ch
300249ae:	outs   dx,BYTE PTR ds:[esi]
300249af:	add    BYTE PTR [ebx+0x0],al
300249b2:	push   0x6e006100
300249b7:	add    BYTE PTR [edi+0x0],ah
300249ba:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
300249bf:	add    BYTE PTR [eax+eax*1+0x69],dh
300249c3:	add    BYTE PTR [ebp+0x0],ch
300249c6:	add    BYTE PTR gs:[ebx+0x0],dh
300249ca:	je     0x300249cc
300249cc:	popa   
300249cd:	add    BYTE PTR [ebp+0x0],ch
300249d0:	jo     0x300249d2
300249d2:	add    BYTE PTR cs:[eax],al
300249d5:	add    BYTE PTR [edi],cl
300249d7:	mov    bh,0xf6
300249d9:	or     esi,ebx
300249db:	test   esi,esi
300249dd:	jmp    0x30016370
300249e2:	movzx  esi,si
300249e5:	or     esi,ebx
300249e7:	test   esi,esi
300249e9:	jmp    0x30016395
300249ee:	movzx  esi,si
300249f1:	or     esi,ebx
300249f3:	test   esi,esi
300249f5:	jmp    0x300163c0
300249fa:	push   DWORD PTR [ebp+0x8]
300249fd:	mov    ecx,ebx
300249ff:	call   0x30033cac
30024a04:	mov    edi,eax
30024a06:	jmp    0x3001c2c4
30024a0b:	push   DWORD PTR [ebp+0x8]
30024a0e:	call   0x300365a8
30024a13:	test   al,al
30024a15:	jne    0x30024a2a
30024a17:	mov    ecx,esi
30024a19:	call   0x30034680
30024a1e:	test   al,al
30024a20:	jne    0x30024a2a
30024a22:	xor    eax,eax
30024a24:	inc    eax
30024a25:	jmp    0x3001b2a1
30024a2a:	xor    eax,eax
30024a2c:	jmp    0x3001b2a1
30024a31:	ret    
30024a32:	mov    DWORD PTR [ecx+0x8],0x30034d8f
30024a39:	jmp    0x3000ae88
30024a3e:	mov    ecx,DWORD PTR [esi]
30024a40:	mov    esi,0x80070005
30024a45:	cmp    BYTE PTR ds:0x300430f1,al
30024a4b:	je     0x30024a73
30024a4d:	call   0x30033b12
30024a52:	mov    edx,DWORD PTR [eax]
30024a54:	push   esi
30024a55:	test   ecx,ecx
30024a57:	jne    0x30024a67
30024a59:	push   0x30024a80
30024a5e:	push   0x1
30024a60:	mov    ecx,eax
30024a62:	call   DWORD PTR [edx+0x4]
30024a65:	jmp    0x30024a73
30024a67:	push   ecx
30024a68:	push   0x30024a80
30024a6d:	push   0x1
30024a6f:	mov    ecx,eax
30024a71:	call   DWORD PTR [edx]
30024a73:	mov    eax,esi
30024a75:	jmp    0x3000a1f2
30024a7a:	nop
30024a7b:	nop
30024a7c:	nop
30024a7d:	nop
30024a7e:	nop
30024a7f:	nop
30024a80:	push   eax
30024a81:	add    BYTE PTR [ebx+0x0],ch
30024a84:	add    BYTE PTR [si+0x0],al
30024a88:	add    BYTE PTR gs:[esi+0x0],ah
30024a8c:	and    BYTE PTR [eax],al
30024a8e:	jae    0x30024a90
30024a90:	add    BYTE PTR gs:[ebx+0x0],ah
30024a94:	je     0x30024a96
30024a96:	imul   eax,DWORD PTR [eax],0x6e006f
30024a9c:	and    BYTE PTR [eax],al
30024a9e:	data16 add BYTE PTR [ecx+0x0],ah
30024aa2:	imul   eax,DWORD PTR [eax],0x73006c
30024aa8:	and    BYTE PTR [eax],al
30024aaa:	je     0x30024aac
30024aac:	push   0x20006500
30024ab1:	add    BYTE PTR [ebx+0x0],dh
30024ab4:	add    BYTE PTR gs:[ebx+0x0],ah
30024ab8:	jne    0x30024aba
30024aba:	jb     0x30024abc
30024abc:	imul   eax,DWORD PTR [eax],0x790074
30024ac2:	and    BYTE PTR [eax],al
30024ac4:	arpl   WORD PTR [eax],ax
30024ac6:	push   0x63006500
30024acb:	add    BYTE PTR [ebx+0x0],ch
30024ace:	add    BYTE PTR cs:[eax],al
30024ad1:	add    BYTE PTR [ebp+0x50102444],cl
30024ad7:	lea    ecx,[esp+0x1c]
30024adb:	call   0x300014c1
30024ae0:	jmp    0x3000a0b1
30024ae5:	mov    edi,0x80070057
30024aea:	jmp    0x30011495
30024aef:	mov    edi,0x8000ffff
30024af4:	jmp    0x3001148d
30024af9:	mov    edi,0x8007000e
30024afe:	jmp    0x3001148d
30024b03:	lea    ecx,[ebp+0x14]
30024b06:	call   0x300051c8
30024b0b:	lea    eax,[ebp+0xc]
30024b0e:	push   eax
30024b0f:	lea    eax,[ebp+0x14]
30024b12:	push   eax
30024b13:	push   esi
30024b14:	call   0x30035aec
30024b19:	mov    edi,eax
30024b1b:	test   edi,edi
30024b1d:	jns    0x30024b2c
30024b1f:	lea    ecx,[ebp+0x14]
30024b22:	call   0x300051a4
30024b27:	jmp    0x3001148d
30024b2c:	push   DWORD PTR [ebp+0x14]
30024b2f:	lea    ecx,[ebp+0x18]
30024b32:	call   0x30001488
30024b37:	mov    ecx,DWORD PTR [ebp-0x4]
30024b3a:	mov    esi,eax
30024b3c:	cmp    ecx,DWORD PTR [esi]
30024b3e:	je     0x30024b4f
30024b40:	push   ecx
30024b41:	call   DWORD PTR ds:0x300454e8
30024b47:	mov    ecx,DWORD PTR [esi]
30024b49:	mov    DWORD PTR [ebp-0x4],ecx
30024b4c:	and    DWORD PTR [esi],0x0
30024b4f:	push   DWORD PTR [ebp+0x18]
30024b52:	call   DWORD PTR ds:0x300454e8
30024b58:	cmp    BYTE PTR ds:0x300430f1,0x0
30024b5f:	je     0x30024b74
30024b61:	call   0x30033b12
30024b66:	mov    edx,DWORD PTR [eax]
30024b68:	push   0x30024bbc
30024b6d:	push   0x3
30024b6f:	mov    ecx,eax
30024b71:	call   DWORD PTR [edx+0x8]
30024b74:	lea    ecx,[ebp+0x14]
30024b77:	call   0x300051a4
30024b7c:	mov    esi,DWORD PTR [ebp+0xc]
30024b7f:	jmp    0x30011411
30024b84:	lea    edi,[ebx+0xc]
30024b87:	mov    edx,eax
30024b89:	push   DWORD PTR [edi]
30024b8b:	mov    ecx,0x30024bf8
30024b90:	call   0x30033b68
30024b95:	lea    eax,[ebx+0x8]
30024b98:	push   eax
30024b99:	mov    ecx,edi
30024b9b:	call   0x300014c1
30024ba0:	jmp    0x30011470
30024ba5:	push   DWORD PTR [edi]
30024ba7:	xor    edx,edx
30024ba9:	push   0x30024c40
30024bae:	push   0x3
30024bb0:	pop    ecx
30024bb1:	call   0x30033ac0
30024bb6:	jmp    0x3001147d
30024bbb:	nop
30024bbc:	inc    ebx
30024bbd:	add    BYTE PTR [edi+0x0],ch
30024bc0:	outs   dx,BYTE PTR ds:[esi]
30024bc1:	add    BYTE PTR [esi+0x0],ah
30024bc4:	imul   eax,DWORD PTR [eax],0x750067
30024bca:	jb     0x30024bcc
30024bcc:	popa   
30024bcd:	add    BYTE PTR [eax+eax*1+0x69],dh
30024bd1:	add    BYTE PTR [edi+0x0],ch
30024bd4:	outs   dx,BYTE PTR ds:[esi]
30024bd5:	add    BYTE PTR [eax],ah
30024bd7:	add    BYTE PTR [ecx+0x0],ch
30024bda:	jae    0x30024bdc
30024bdc:	and    BYTE PTR [eax],al
30024bde:	push   esi
30024bdf:	add    BYTE PTR [edi+0x0],ch
30024be2:	ins    BYTE PTR es:[edi],dx
30024be3:	add    BYTE PTR [ecx+0x0],ah
30024be6:	je     0x30024be8
30024be8:	imul   eax,DWORD PTR [eax],0x65006c
30024bee:	add    BYTE PTR cs:[eax],al
30024bf1:	add    BYTE PTR [eax-0x6f6f6f70],dl
30024bf7:	nop
30024bf8:	inc    ebp
30024bf9:	add    BYTE PTR [edx+0x0],dh
30024bfc:	jb     0x30024bfe
30024bfe:	outs   dx,DWORD PTR ds:[esi]
30024bff:	add    BYTE PTR [edx+0x0],dh
30024c02:	and    BYTE PTR [eax],al
30024c04:	ins    DWORD PTR es:[edi],dx
30024c05:	add    BYTE PTR [ebp+0x0],ah
30024c08:	jb     0x30024c0a
30024c0a:	add    BYTE PTR [bx+di+0x0],ch
30024c0e:	outs   dx,BYTE PTR ds:[esi]
30024c0f:	add    BYTE PTR [edi+0x0],ah
30024c12:	and    BYTE PTR [eax],al
30024c14:	arpl   WORD PTR [eax],ax
30024c16:	outs   dx,DWORD PTR ds:[esi]
30024c17:	add    BYTE PTR [esi+0x0],ch
30024c1a:	data16 add BYTE PTR [ecx+0x0],ch
30024c1e:	add    BYTE PTR [di+0x0],dh
30024c22:	jb     0x30024c24
30024c24:	popa   
30024c25:	add    BYTE PTR [eax+eax*1+0x69],dh
30024c29:	add    BYTE PTR [edi+0x0],ch
30024c2c:	outs   dx,BYTE PTR ds:[esi]
30024c2d:	add    BYTE PTR [eax],ah
30024c2f:	add    BYTE PTR [esi+0x0],ah
30024c32:	imul   eax,DWORD PTR [eax],0x65006c
30024c38:	add    BYTE PTR [eax],al
30024c3a:	nop
30024c3b:	nop
30024c3c:	nop
30024c3d:	nop
30024c3e:	nop
30024c3f:	nop
30024c40:	inc    ebx
30024c41:	add    BYTE PTR [edi+0x0],ch
30024c44:	outs   dx,BYTE PTR ds:[esi]
30024c45:	add    BYTE PTR [esi+0x0],ah
30024c48:	imul   eax,DWORD PTR [eax],0x750067
30024c4e:	jb     0x30024c50
30024c50:	popa   
30024c51:	add    BYTE PTR [eax+eax*1+0x69],dh
30024c55:	add    BYTE PTR [edi+0x0],ch
30024c58:	outs   dx,BYTE PTR ds:[esi]
30024c59:	add    BYTE PTR [eax],ah
30024c5b:	add    BYTE PTR [esi+0x0],ah
30024c5e:	imul   eax,DWORD PTR [eax],0x65006c
30024c64:	and    BYTE PTR [eax],al
30024c66:	je     0x30024c68
30024c68:	outs   dx,DWORD PTR ds:[esi]
30024c69:	add    BYTE PTR [eax],ah
30024c6b:	add    BYTE PTR [edx+0x0],ah
30024c6e:	add    BYTE PTR gs:[eax],ah
30024c71:	add    BYTE PTR [ebp+0x0],dh
30024c74:	jae    0x30024c76
30024c76:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30024c7b:	add    BYTE PTR [esi+0x0],ah
30024c7e:	outs   dx,DWORD PTR ds:[esi]
30024c7f:	add    BYTE PTR [edx+0x0],dh
30024c82:	and    BYTE PTR [eax],al
30024c84:	inc    ebx
30024c85:	add    BYTE PTR [eax+eax*1+0x52],cl
30024c89:	add    BYTE PTR [eax],ah
30024c8b:	add    BYTE PTR [ecx+0x0],ch
30024c8e:	outs   dx,BYTE PTR ds:[esi]
30024c8f:	add    BYTE PTR [ecx+0x0],ch
30024c92:	je     0x30024c94
30024c94:	imul   eax,DWORD PTR [eax],0x6c0061
30024c9a:	imul   eax,DWORD PTR [eax],0x61007a
30024ca0:	je     0x30024ca2
30024ca2:	imul   eax,DWORD PTR [eax],0x6e006f
30024ca8:	add    BYTE PTR [eax],al
30024caa:	jae    0x30012055
30024cb0:	jmp    0x3001204e
30024cb5:	and    DWORD PTR [ebp-0x8],0x0
30024cb9:	jmp    0x30013a1c
30024cbe:	push   eax
30024cbf:	push   DWORD PTR [ebp-0x4]
30024cc2:	push   eax
30024cc3:	call   DWORD PTR ds:0x300455f4
30024cc9:	mov    esi,eax
30024ccb:	test   esi,esi
30024ccd:	jle    0x30013b91
30024cd3:	movzx  esi,si
30024cd6:	or     esi,0x80070000
30024cdc:	test   esi,esi
30024cde:	jmp    0x30013b91
30024ce3:	lea    eax,[ebp-0x80]
30024ce6:	push   eax
30024ce7:	mov    DWORD PTR [ebp-0xb0],esi
30024ced:	call   0x30008fa7
30024cf2:	push   eax
30024cf3:	lea    ecx,[ebp-0x40]
30024cf6:	call   0x30035abc
30024cfb:	mov    edi,DWORD PTR [edi]
30024cfd:	mov    esi,DWORD PTR [ebp-0x80]
30024d00:	mov    DWORD PTR [ebp-0xa4],edi
30024d06:	test   edi,edi
30024d08:	je     0x30024fbb
30024d0e:	lea    eax,[ebp-0xa4]
30024d14:	push   eax
30024d15:	call   0x30008fa7
30024d1a:	push   eax
30024d1b:	lea    ecx,[ebp-0x7c]
30024d1e:	call   0x30035abc
30024d23:	lea    edx,[ebp-0x3c]
30024d26:	xor    ecx,ecx
30024d28:	mov    eax,DWORD PTR [edx+ecx*4]
30024d2b:	lea    edx,[ebp-0x78]
30024d2e:	cmp    eax,DWORD PTR [edx+ecx*4]
30024d31:	lea    edx,[ebp-0x3c]
30024d34:	jne    0x30024d42
30024d36:	inc    ecx
30024d37:	cmp    ecx,0x4
30024d3a:	je     0x30024fa8
30024d40:	jmp    0x30024d28
30024d42:	lea    eax,[ebp-0x7c]
30024d45:	push   eax
30024d46:	lea    ecx,[ebp-0x40]
30024d49:	call   0x30012c28
30024d4e:	test   al,al
30024d50:	je     0x30024dc1
30024d52:	lea    eax,[ebp-0x50]
30024d55:	push   eax
30024d56:	lea    ecx,[ebp-0x14]
30024d59:	call   0x30036eab
30024d5e:	test   al,al
30024d60:	je     0x30024dc1
30024d62:	cmp    esi,edi
30024d64:	jne    0x30024d72
30024d66:	lea    eax,[ebp-0x80]
30024d69:	push   eax
30024d6a:	call   0x30008fa7
30024d6f:	mov    esi,DWORD PTR [ebp-0x80]
30024d72:	lea    ecx,[ebp-0x90]
30024d78:	call   0x300051c8
30024d7d:	lea    eax,[ebp-0x90]
30024d83:	push   eax
30024d84:	lea    ecx,[ebp-0x40]
30024d87:	call   0x30036e0e
30024d8c:	cmp    BYTE PTR ds:0x300430f1,0x0
30024d93:	je     0x30024daa
30024d95:	push   DWORD PTR [ebp-0x90]
30024d9b:	xor    edx,edx
30024d9d:	push   0x30025010
30024da2:	push   0x2
30024da4:	pop    ecx
30024da5:	call   0x30033ac0
30024daa:	mov    ecx,DWORD PTR [ebp-0x8c]
30024db0:	push   edi
30024db1:	call   0x30012a82
30024db6:	lea    ecx,[ebp-0x90]
30024dbc:	jmp    0x30024fa3
30024dc1:	lea    eax,[ebp-0x7c]
30024dc4:	push   eax
30024dc5:	lea    ecx,[ebp-0x40]
30024dc8:	call   0x30012c07
30024dcd:	test   al,al
30024dcf:	je     0x30024fa8
30024dd5:	lea    edx,[ebp-0x50]
30024dd8:	lea    ecx,[ebp-0xc]
30024ddb:	call   0x30035c05
30024de0:	test   al,al
30024de2:	jne    0x30024fa8
30024de8:	lea    edx,[ebp-0x14]
30024deb:	lea    ecx,[ebp-0x48]
30024dee:	call   0x30035c05
30024df3:	test   al,al
30024df5:	jne    0x30024fa8
30024dfb:	lea    ecx,[ebp-0x84]
30024e01:	call   0x300051c8
30024e06:	lea    ecx,[ebp-0x88]
30024e0c:	call   0x300051c8
30024e11:	lea    eax,[ebp-0x84]
30024e17:	push   eax
30024e18:	lea    ecx,[ebp-0x40]
30024e1b:	call   0x30036e0e
30024e20:	lea    eax,[ebp-0x88]
30024e26:	push   eax
30024e27:	lea    ecx,[ebp-0x7c]
30024e2a:	call   0x30036e0e
30024e2f:	lea    edx,[ebp-0x14]
30024e32:	lea    ecx,[ebp-0x50]
30024e35:	call   0x30035c05
30024e3a:	test   al,al
30024e3c:	lea    eax,[ebp-0x50]
30024e3f:	jne    0x30024e44
30024e41:	lea    eax,[ebp-0x14]
30024e44:	xor    ecx,ecx
30024e46:	mov    DWORD PTR [ebp-0xac],ecx
30024e4c:	mov    DWORD PTR [ebp-0xa8],ecx
30024e52:	push   eax
30024e53:	lea    ecx,[ebp-0xac]
30024e59:	call   0x30012906
30024e5e:	lea    edx,[ebp-0x48]
30024e61:	lea    ecx,[ebp-0xc]
30024e64:	call   0x30035c05
30024e69:	test   al,al
30024e6b:	lea    eax,[ebp-0x48]
30024e6e:	jne    0x30024e73
30024e70:	lea    eax,[ebp-0xc]
30024e73:	xor    ecx,ecx
30024e75:	mov    DWORD PTR [ebp-0xa0],ecx
30024e7b:	mov    DWORD PTR [ebp-0x9c],ecx
30024e81:	push   eax
30024e82:	lea    ecx,[ebp-0xa0]
30024e88:	call   0x30012906
30024e8d:	lea    edx,[ebp-0x58]
30024e90:	lea    ecx,[ebp-0x1c]
30024e93:	call   0x30035c05
30024e98:	test   al,al
30024e9a:	je     0x30024ebd
30024e9c:	lea    eax,[ebp-0x58]
30024e9f:	push   eax
30024ea0:	lea    ecx,[ebp-0x1c]
30024ea3:	call   0x30012906
30024ea8:	push   DWORD PTR [ebp-0x5c]
30024eab:	lea    ecx,[ebp-0x40]
30024eae:	call   0x30013426
30024eb3:	mov    ebx,eax
30024eb5:	test   ebx,ebx
30024eb7:	js     0x30024fd6
30024ebd:	lea    eax,[ebp-0xa0]
30024ec3:	push   eax
30024ec4:	lea    eax,[ebp-0xac]
30024eca:	push   eax
30024ecb:	lea    ecx,[ebp-0x40]
30024ece:	call   0x30036c41
30024ed3:	mov    ebx,eax
30024ed5:	test   ebx,ebx
30024ed7:	js     0x30024fd6
30024edd:	cmp    esi,edi
30024edf:	jne    0x30024eed
30024ee1:	lea    eax,[ebp-0x80]
30024ee4:	push   eax
30024ee5:	call   0x30008fa7
30024eea:	mov    esi,DWORD PTR [ebp-0x80]
30024eed:	mov    ecx,DWORD PTR [ebp-0x8c]
30024ef3:	push   edi
30024ef4:	call   0x30012a82
30024ef9:	mov    eax,DWORD PTR [ebp-0xb0]
30024eff:	test   eax,eax
30024f01:	je     0x30025001
30024f07:	lea    ecx,[ebp-0x40]
30024f0a:	push   ecx
30024f0b:	lea    ecx,[eax+0x8]
30024f0e:	call   0x30036c0f
30024f13:	lea    ecx,[ebp-0x94]
30024f19:	call   0x300051c8
30024f1e:	lea    eax,[ebp-0x94]
30024f24:	push   eax
30024f25:	lea    ecx,[ebp-0x40]
30024f28:	call   0x30036e0e
30024f2d:	lea    ecx,[ebp-0x98]
30024f33:	call   0x300051c8
30024f38:	push   DWORD PTR [ebp-0x94]
30024f3e:	lea    eax,[ebp-0x98]
30024f44:	push   DWORD PTR [ebp-0x88]
30024f4a:	push   DWORD PTR [ebp-0x84]
30024f50:	push   0x30025090
30024f55:	push   eax
30024f56:	call   0x30005153
30024f5b:	add    esp,0x14
30024f5e:	cmp    BYTE PTR ds:0x300430f1,0x0
30024f65:	je     0x30024f7c
30024f67:	push   DWORD PTR [ebp-0x98]
30024f6d:	xor    edx,edx
30024f6f:	push   0x30025130
30024f74:	push   0x2
30024f76:	pop    ecx
30024f77:	call   0x30033ac0
30024f7c:	lea    ecx,[ebp-0x98]
30024f82:	call   0x300051a4
30024f87:	lea    ecx,[ebp-0x94]
30024f8d:	call   0x300051a4
30024f92:	lea    ecx,[ebp-0x88]
30024f98:	call   0x300051a4
30024f9d:	lea    ecx,[ebp-0x84]
30024fa3:	call   0x300051a4
30024fa8:	lea    ecx,[ebp-0x7c]
30024fab:	call   0x30012777
30024fb0:	mov    edi,DWORD PTR [ebp-0xa4]
30024fb6:	jmp    0x30024d06
30024fbb:	lea    ecx,[ebp-0x40]
30024fbe:	call   0x30012777
30024fc3:	test   esi,esi
30024fc5:	je     0x30013da9
30024fcb:	mov    edi,DWORD PTR [ebp-0x8c]
30024fd1:	jmp    0x30024ce3
30024fd6:	lea    ecx,[ebp-0x88]
30024fdc:	call   0x300051a4
30024fe1:	lea    ecx,[ebp-0x84]
30024fe7:	call   0x300051a4
30024fec:	lea    ecx,[ebp-0x7c]
30024fef:	call   0x30012777
30024ff4:	lea    ecx,[ebp-0x40]
30024ff7:	call   0x30012777
30024ffc:	jmp    0x30013da9
30025001:	push   0x80004005
30025006:	call   0x3002ae0b
3002500b:	int3   
3002500c:	nop
3002500d:	nop
3002500e:	nop
3002500f:	nop
30025010:	inc    esi
30025011:	add    BYTE PTR [edi+0x0],ch
30025014:	jne    0x30025016
30025016:	outs   dx,BYTE PTR ds:[esi]
30025017:	add    BYTE PTR [eax+eax*1+0x20],ah
3002501b:	add    BYTE PTR [eax+eax*1+0x75],ah
3002501f:	add    BYTE PTR [eax+0x0],dh
30025022:	ins    BYTE PTR es:[edi],dx
30025023:	add    BYTE PTR [ecx+0x0],ch
30025026:	arpl   WORD PTR [eax],ax
30025028:	popa   
30025029:	add    BYTE PTR [eax+eax*1+0x65],dh
3002502d:	add    BYTE PTR [eax],ah
3002502f:	add    BYTE PTR [edx+0x0],al
30025032:	imul   eax,DWORD PTR [eax],0x64006e
30025038:	imul   eax,DWORD PTR [eax],0x67006e
3002503e:	and    BYTE PTR [eax],al
30025040:	push   edx
30025041:	add    BYTE PTR [ebp+0x0],ah
30025044:	add    BYTE PTR fs:[ecx+0x0],ch
30025048:	jb     0x3002504a
3002504a:	add    BYTE PTR gs:[ebx+0x0],ah
3002504e:	je     0x30025050
30025050:	and    BYTE PTR [eax],al
30025052:	add    BYTE PTR gs:[esi+0x0],ch
30025056:	je     0x30025058
30025058:	jb     0x3002505a
3002505a:	imul   eax,DWORD PTR [eax],0x730065
30025060:	add    BYTE PTR cs:[eax],ah
30025063:	add    BYTE PTR [ecx+0x0],cl
30025066:	add    BYTE PTR [bp+0x0],ch
3002506a:	outs   dx,DWORD PTR ds:[esi]
3002506b:	add    BYTE PTR [edx+0x0],dh
3002506e:	imul   eax,DWORD PTR [eax],0x67006e
30025074:	and    BYTE PTR [eax],al
30025076:	add    BYTE PTR fs:[ebp+0x0],dh
3002507a:	jo     0x3002507c
3002507c:	ins    BYTE PTR es:[edi],dx
3002507d:	add    BYTE PTR [ecx+0x0],ch
30025080:	arpl   WORD PTR [eax],ax
30025082:	popa   
30025083:	add    BYTE PTR [eax+eax*1+0x65],dh
30025087:	add    BYTE PTR [esi],ch
30025089:	add    BYTE PTR [eax],al
3002508b:	add    BYTE PTR [eax+0x46909090],dl
30025091:	add    BYTE PTR [ecx+0x0],ch
30025094:	jb     0x30025096
30025096:	jae    0x30025098
30025098:	je     0x3002509a
3002509a:	and    BYTE PTR [eax],al
3002509c:	inc    edx
3002509d:	add    BYTE PTR [ecx+0x0],ch
300250a0:	outs   dx,BYTE PTR ds:[esi]
300250a1:	add    BYTE PTR [eax+eax*1+0x69],ah
300250a5:	add    BYTE PTR [esi+0x0],ch
300250a8:	add    BYTE PTR [bx+si],ah
300250ab:	add    BYTE PTR [edx+0x0],dl
300250ae:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
300250b3:	add    BYTE PTR [edx+0x0],dh
300250b6:	add    BYTE PTR gs:[ebx+0x0],ah
300250ba:	je     0x300250bc
300250bc:	cmp    al,BYTE PTR [eax]
300250be:	and    BYTE PTR [eax],al
300250c0:	sub    BYTE PTR [eax],al
300250c2:	and    eax,0x29007300
300250c7:	add    BYTE PTR [eax],ah
300250c9:	add    BYTE PTR [ebx+0x0],dl
300250cc:	add    BYTE PTR gs:[ebx+0x0],ah
300250d0:	outs   dx,DWORD PTR ds:[esi]
300250d1:	add    BYTE PTR [esi+0x0],ch
300250d4:	add    BYTE PTR fs:[eax],ah
300250d7:	add    BYTE PTR [edx+0x0],al
300250da:	imul   eax,DWORD PTR [eax],0x64006e
300250e0:	imul   eax,DWORD PTR [eax],0x67006e
300250e6:	and    BYTE PTR [eax],al
300250e8:	push   edx
300250e9:	add    BYTE PTR [ebp+0x0],ah
300250ec:	add    BYTE PTR fs:[ecx+0x0],ch
300250f0:	jb     0x300250f2
300250f2:	add    BYTE PTR gs:[ebx+0x0],ah
300250f6:	je     0x300250f8
300250f8:	cmp    al,BYTE PTR [eax]
300250fa:	and    BYTE PTR [eax],al
300250fc:	sub    BYTE PTR [eax],al
300250fe:	and    eax,0x29007300
30025103:	add    BYTE PTR [eax],ah
30025105:	add    BYTE PTR [ebx+0x0],al
30025108:	outs   dx,DWORD PTR ds:[esi]
30025109:	add    BYTE PTR [esi+0x0],ch
3002510c:	jbe    0x3002510e
3002510e:	add    BYTE PTR gs:[edx+0x0],dh
30025112:	je     0x30025114
30025114:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30025119:	add    BYTE PTR [eax+eax*1+0x6f],dh
3002511d:	add    BYTE PTR [edx],bh
3002511f:	add    BYTE PTR [eax],ah
30025121:	add    BYTE PTR [eax],ch
30025123:	add    BYTE PTR ds:0x29007300,ah
30025129:	add    BYTE PTR [eax],al
3002512b:	add    BYTE PTR [eax+0x46909090],dl
30025131:	add    BYTE PTR [edi+0x0],ch
30025134:	jne    0x30025136
30025136:	outs   dx,BYTE PTR ds:[esi]
30025137:	add    BYTE PTR [eax+eax*1+0x20],ah
3002513b:	add    BYTE PTR [edi+0x0],ch
3002513e:	jbe    0x30025140
30025140:	add    BYTE PTR gs:[edx+0x0],dh
30025144:	ins    BYTE PTR es:[edi],dx
30025145:	add    BYTE PTR [ecx+0x0],ah
30025148:	jo     0x3002514a
3002514a:	jo     0x3002514c
3002514c:	imul   eax,DWORD PTR [eax],0x67006e
30025152:	and    BYTE PTR [eax],al
30025154:	jbe    0x30025156
30025156:	add    BYTE PTR gs:[edx+0x0],dh
3002515a:	jae    0x3002515c
3002515c:	imul   eax,DWORD PTR [eax],0x6e006f
30025162:	and    BYTE PTR [eax],al
30025164:	jb     0x30025166
30025166:	popa   
30025167:	add    BYTE PTR [esi+0x0],ch
3002516a:	add    BYTE PTR [di+0x0],ah
3002516e:	jae    0x30025170
30025170:	and    BYTE PTR [eax],al
30025172:	data16 add BYTE PTR [edi+0x0],ch
30025176:	jb     0x30025178
30025178:	and    BYTE PTR [eax],al
3002517a:	popa   
3002517b:	add    BYTE PTR [eax],ah
3002517d:	add    BYTE PTR [edx+0x0],al
30025180:	imul   eax,DWORD PTR [eax],0x64006e
30025186:	imul   eax,DWORD PTR [eax],0x67006e
3002518c:	and    BYTE PTR [eax],al
3002518e:	push   edx
3002518f:	add    BYTE PTR [ebp+0x0],ah
30025192:	add    BYTE PTR fs:[ecx+0x0],ch
30025196:	jb     0x30025198
30025198:	add    BYTE PTR gs:[ebx+0x0],ah
3002519c:	je     0x3002519e
3002519e:	add    BYTE PTR cs:[eax],ah
300251a1:	add    BYTE PTR [ebx+0x0],al
300251a4:	outs   dx,DWORD PTR ds:[esi]
300251a5:	add    BYTE PTR [ecx+0x0],ah
300251a8:	ins    BYTE PTR es:[edi],dx
300251a9:	add    BYTE PTR [ebp+0x0],ah
300251ac:	jae    0x300251ae
300251ae:	arpl   WORD PTR [eax],ax
300251b0:	imul   eax,DWORD PTR [eax],0x67006e
300251b6:	add    BYTE PTR cs:[eax],al
300251b9:	add    BYTE PTR [ebp-0x17af03bb],cl
300251bf:	in     al,0x3d
300251c1:	(bad)  
300251c2:	dec    DWORD PTR [ebx-0x7b160383]
300251c8:	fdivr  st,st(6)
300251ca:	(bad)  
300251cb:	push   DWORD PTR [ebp-0x8]
300251ce:	xor    edx,edx
300251d0:	push   0x300251e8
300251d5:	push   0x2
300251d7:	pop    ecx
300251d8:	call   0x30033ac0
300251dd:	jmp    0x30012a70
300251e2:	nop
300251e3:	nop
300251e4:	nop
300251e5:	nop
300251e6:	nop
300251e7:	nop
300251e8:	inc    esi
300251e9:	add    BYTE PTR [edi+0x0],ch
300251ec:	jne    0x300251ee
300251ee:	outs   dx,BYTE PTR ds:[esi]
300251ef:	add    BYTE PTR [eax+eax*1+0x20],ah
300251f3:	add    BYTE PTR [eax+eax*1+0x75],ah
300251f7:	add    BYTE PTR [eax+0x0],dh
300251fa:	ins    BYTE PTR es:[edi],dx
300251fb:	add    BYTE PTR [ecx+0x0],ch
300251fe:	arpl   WORD PTR [eax],ax
30025200:	popa   
30025201:	add    BYTE PTR [eax+eax*1+0x65],dh
30025205:	add    BYTE PTR [eax],ah
30025207:	add    BYTE PTR [ebx+0x0],al
3002520a:	outs   dx,DWORD PTR ds:[esi]
3002520b:	add    BYTE PTR [eax+eax*1+0x65],ah
3002520f:	add    BYTE PTR [eax],ah
30025211:	add    BYTE PTR [edx+0x0],al
30025214:	popa   
30025215:	add    BYTE PTR [ebx+0x0],dh
30025218:	add    BYTE PTR gs:[eax],ah
3002521b:	add    BYTE PTR [ebp+0x0],ah
3002521e:	outs   dx,BYTE PTR ds:[esi]
3002521f:	add    BYTE PTR [eax+eax*1+0x72],dh
30025223:	add    BYTE PTR [ecx+0x0],ch
30025226:	add    BYTE PTR gs:[ebx+0x0],dh
3002522a:	add    BYTE PTR cs:[eax],ah
3002522d:	add    BYTE PTR [ecx+0x0],cl
30025230:	add    BYTE PTR [bp+0x0],ch
30025234:	outs   dx,DWORD PTR ds:[esi]
30025235:	add    BYTE PTR [edx+0x0],dh
30025238:	imul   eax,DWORD PTR [eax],0x67006e
3002523e:	and    BYTE PTR [eax],al
30025240:	add    BYTE PTR fs:[ebp+0x0],dh
30025244:	jo     0x30025246
30025246:	ins    BYTE PTR es:[edi],dx
30025247:	add    BYTE PTR [ecx+0x0],ch
3002524a:	arpl   WORD PTR [eax],ax
3002524c:	popa   
3002524d:	add    BYTE PTR [eax+eax*1+0x65],dh
30025251:	add    BYTE PTR [esi],ch
30025253:	add    BYTE PTR [eax],al
30025255:	add    BYTE PTR [ebx+0x56],dl
30025258:	push   edi
30025259:	lea    edi,[ecx+0x14]
3002525c:	lea    eax,[ebp-0x18]
3002525f:	push   eax
30025260:	call   0x30008fa7
30025265:	push   eax
30025266:	lea    ecx,[ebp-0x80]
30025269:	call   0x30035abc
3002526e:	mov    esi,DWORD PTR [edi]
30025270:	mov    DWORD PTR [ebp-0x14],esi
30025273:	jmp    0x300253bb
30025278:	lea    eax,[ebp-0x14]
3002527b:	push   eax
3002527c:	call   0x30008fa7
30025281:	push   eax
30025282:	lea    ecx,[ebp-0x44]
30025285:	call   0x3001298b
3002528a:	lea    eax,[ebp-0x44]
3002528d:	push   eax
3002528e:	lea    eax,[ebp-0x80]
30025291:	push   eax
30025292:	lea    ecx,[ebp-0xac]
30025298:	call   0x3001298b
3002529d:	mov    ecx,eax
3002529f:	call   0x30012c28
300252a4:	lea    ecx,[ebp-0xac]
300252aa:	mov    bl,al
300252ac:	call   0x30012777
300252b1:	test   bl,bl
300252b3:	je     0x300252f4
300252b5:	lea    ecx,[ebp-0xc]
300252b8:	call   0x300051c8
300252bd:	lea    eax,[ebp-0xc]
300252c0:	push   eax
300252c1:	lea    ecx,[ebp-0x44]
300252c4:	call   0x30012e44
300252c9:	cmp    BYTE PTR ds:0x300430f1,0x0
300252d0:	je     0x300252e4
300252d2:	push   DWORD PTR [ebp-0xc]
300252d5:	xor    edx,edx
300252d7:	push   0x300253e0
300252dc:	push   0x2
300252de:	pop    ecx
300252df:	call   0x30033ac0
300252e4:	push   esi
300252e5:	mov    ecx,edi
300252e7:	call   0x30012a82
300252ec:	lea    ecx,[ebp-0xc]
300252ef:	jmp    0x300253ab
300252f4:	lea    eax,[ebp-0x44]
300252f7:	push   eax
300252f8:	lea    ecx,[ebp-0x80]
300252fb:	call   0x30012c07
30025300:	test   al,al
30025302:	je     0x300253b0
30025308:	lea    edx,[ebp-0x54]
3002530b:	lea    ecx,[ebp-0x20]
3002530e:	call   0x30035c05
30025313:	test   al,al
30025315:	jne    0x300253b0
3002531b:	lea    edx,[ebp-0x20]
3002531e:	lea    ecx,[ebp-0x4c]
30025321:	call   0x30035c05
30025326:	test   al,al
30025328:	jne    0x300253b0
3002532e:	lea    ecx,[ebp-0x10]
30025331:	call   0x300051c8
30025336:	lea    eax,[ebp-0x10]
30025339:	push   eax
3002533a:	lea    ecx,[ebp-0x44]
3002533d:	call   0x30012e44
30025342:	lea    ecx,[ebp-0x8]
30025345:	call   0x300051c8
3002534a:	lea    eax,[ebp-0x8]
3002534d:	push   eax
3002534e:	lea    ecx,[ebp-0x80]
30025351:	call   0x30036e0e
30025356:	lea    ecx,[ebp-0x4]
30025359:	call   0x300051c8
3002535e:	push   DWORD PTR [ebp-0x10]
30025361:	lea    eax,[ebp-0x4]
30025364:	push   DWORD PTR [ebp-0x8]
30025367:	push   0x300254e8
3002536c:	push   eax
3002536d:	call   0x30005153
30025372:	add    esp,0x10
30025375:	cmp    BYTE PTR ds:0x300430f1,0x0
3002537c:	je     0x30025390
3002537e:	push   DWORD PTR [ebp-0x4]
30025381:	xor    edx,edx
30025383:	push   0x30025538
30025388:	push   0x2
3002538a:	pop    ecx
3002538b:	call   0x30033ac0
30025390:	push   esi
30025391:	mov    ecx,edi
30025393:	call   0x30012a82
30025398:	lea    ecx,[ebp-0x4]
3002539b:	call   0x300051a4
300253a0:	lea    ecx,[ebp-0x8]
300253a3:	call   0x300051a4
300253a8:	lea    ecx,[ebp-0x10]
300253ab:	call   0x300051a4
300253b0:	lea    ecx,[ebp-0x44]
300253b3:	call   0x30012777
300253b8:	mov    esi,DWORD PTR [ebp-0x14]
300253bb:	test   esi,esi
300253bd:	jne    0x30025278
300253c3:	lea    ecx,[ebp-0x80]
300253c6:	call   0x30012777
300253cb:	cmp    DWORD PTR [ebp-0x18],esi
300253ce:	jne    0x3002525c
300253d4:	pop    edi
300253d5:	pop    esi
300253d6:	pop    ebx
300253d7:	jmp    0x30013d12
300253dc:	nop
300253dd:	nop
300253de:	nop
300253df:	nop
300253e0:	inc    esi
300253e1:	add    BYTE PTR [edi+0x0],ch
300253e4:	jne    0x300253e6
300253e6:	outs   dx,BYTE PTR ds:[esi]
300253e7:	add    BYTE PTR [eax+eax*1+0x20],ah
300253eb:	add    BYTE PTR [edx+0x0],ah
300253ee:	outs   dx,DWORD PTR ds:[esi]
300253ef:	add    BYTE PTR [eax+eax*1+0x68],dh
300253f3:	add    BYTE PTR [eax],ah
300253f5:	add    BYTE PTR [ecx+0x0],ah
300253f8:	and    BYTE PTR [eax],al
300253fa:	inc    edx
300253fb:	add    BYTE PTR [ecx+0x0],ch
300253fe:	outs   dx,BYTE PTR ds:[esi]
300253ff:	add    BYTE PTR [eax+eax*1+0x69],ah
30025403:	add    BYTE PTR [esi+0x0],ch
30025406:	add    BYTE PTR [bx+si],ah
30025409:	add    BYTE PTR [edx+0x0],dl
3002540c:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
30025411:	add    BYTE PTR [edx+0x0],dh
30025414:	add    BYTE PTR gs:[ebx+0x0],ah
30025418:	je     0x3002541a
3002541a:	imul   eax,DWORD PTR [eax],0x6e006f
30025420:	and    BYTE PTR [eax],al
30025422:	popa   
30025423:	add    BYTE PTR [esi+0x0],ch
30025426:	add    BYTE PTR fs:[eax],ah
30025429:	add    BYTE PTR [ecx+0x0],ah
3002542c:	and    BYTE PTR [eax],al
3002542e:	inc    ebx
3002542f:	add    BYTE PTR [edi+0x0],ch
30025432:	add    BYTE PTR fs:[ebp+0x0],ah
30025436:	and    BYTE PTR [eax],al
30025438:	inc    edx
30025439:	add    BYTE PTR [ecx+0x0],ah
3002543c:	jae    0x3002543e
3002543e:	add    BYTE PTR gs:[eax],ah
30025441:	add    BYTE PTR [ebp+0x0],ah
30025444:	outs   dx,BYTE PTR ds:[esi]
30025445:	add    BYTE PTR [eax+eax*1+0x72],dh
30025449:	add    BYTE PTR [ecx+0x0],ch
3002544c:	add    BYTE PTR gs:[ebx+0x0],dh
30025450:	and    BYTE PTR [eax],al
30025452:	data16 add BYTE PTR [edi+0x0],ch
30025456:	jb     0x30025458
30025458:	and    BYTE PTR [eax],al
3002545a:	je     0x3002545c
3002545c:	push   0x20006500
30025461:	add    BYTE PTR [ebx+0x0],dh
30025464:	popa   
30025465:	add    BYTE PTR [ebp+0x0],ch
30025468:	add    BYTE PTR gs:[eax],ah
3002546b:	add    BYTE PTR [ecx+0x0],al
3002546e:	jae    0x30025470
30025470:	jae    0x30025472
30025472:	add    BYTE PTR gs:[ebp+0x0],ch
30025476:	bound  eax,QWORD PTR [eax]
30025478:	ins    BYTE PTR es:[edi],dx
30025479:	add    BYTE PTR [ecx+0x0],bh
3002547c:	add    BYTE PTR cs:[eax],ah
3002547f:	add    BYTE PTR [ecx+0x0],cl
30025482:	add    BYTE PTR [bp+0x0],ch
30025486:	outs   dx,DWORD PTR ds:[esi]
30025487:	add    BYTE PTR [edx+0x0],dh
3002548a:	imul   eax,DWORD PTR [eax],0x67006e
30025490:	and    BYTE PTR [eax],al
30025492:	inc    ebx
30025493:	add    BYTE PTR [edi+0x0],ch
30025496:	add    BYTE PTR fs:[ebp+0x0],ah
3002549a:	and    BYTE PTR [eax],al
3002549c:	inc    edx
3002549d:	add    BYTE PTR [ecx+0x0],ah
300254a0:	jae    0x300254a2
300254a2:	add    BYTE PTR gs:[eax+eax*1],ch
300254a6:	and    BYTE PTR [eax],al
300254a8:	imul   eax,DWORD PTR [eax],0x65
300254ab:	add    BYTE PTR [ebp+0x0],ah
300254ae:	jo     0x300254b0
300254b0:	imul   eax,DWORD PTR [eax],0x67006e
300254b6:	and    BYTE PTR [eax],al
300254b8:	inc    edx
300254b9:	add    BYTE PTR [ecx+0x0],ch
300254bc:	outs   dx,BYTE PTR ds:[esi]
300254bd:	add    BYTE PTR [eax+eax*1+0x69],ah
300254c1:	add    BYTE PTR [esi+0x0],ch
300254c4:	add    BYTE PTR [bx+si],ah
300254c7:	add    BYTE PTR [edx+0x0],dl
300254ca:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
300254cf:	add    BYTE PTR [edx+0x0],dh
300254d2:	add    BYTE PTR gs:[ebx+0x0],ah
300254d6:	je     0x300254d8
300254d8:	imul   eax,DWORD PTR [eax],0x6e006f
300254de:	add    BYTE PTR cs:[eax],al
300254e1:	add    BYTE PTR [eax-0x6f6f6f70],dl
300254e7:	nop
300254e8:	inc    edx
300254e9:	add    BYTE PTR [ecx+0x0],ch
300254ec:	outs   dx,BYTE PTR ds:[esi]
300254ed:	add    BYTE PTR [eax+eax*1+0x69],ah
300254f1:	add    BYTE PTR [esi+0x0],ch
300254f4:	add    BYTE PTR [bx+si],ah
300254f7:	add    BYTE PTR [edx+0x0],dl
300254fa:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
300254ff:	add    BYTE PTR [edx+0x0],dh
30025502:	add    BYTE PTR gs:[ebx+0x0],ah
30025506:	je     0x30025508
30025508:	cmp    al,BYTE PTR [eax]
3002550a:	and    BYTE PTR [eax],al
3002550c:	sub    BYTE PTR [eax],al
3002550e:	and    eax,0x29007300
30025513:	add    BYTE PTR [eax],ah
30025515:	add    BYTE PTR [ebx+0x0],al
30025518:	outs   dx,DWORD PTR ds:[esi]
30025519:	add    BYTE PTR [eax+eax*1+0x65],ah
3002551d:	add    BYTE PTR [eax],ah
3002551f:	add    BYTE PTR [edx+0x0],al
30025522:	popa   
30025523:	add    BYTE PTR [ebx+0x0],dh
30025526:	add    BYTE PTR gs:[edx],bh
30025529:	add    BYTE PTR [eax],ah
3002552b:	add    BYTE PTR [eax],ch
3002552d:	add    BYTE PTR ds:0x29007300,ah
30025533:	add    BYTE PTR [eax],al
30025535:	add    BYTE PTR [eax+0x6f004690],dl
3002553b:	add    BYTE PTR [ebp+0x0],dh
3002553e:	outs   dx,BYTE PTR ds:[esi]
3002553f:	add    BYTE PTR [eax+eax*1+0x20],ah
30025543:	add    BYTE PTR [ecx+0x0],ah
30025546:	and    BYTE PTR [eax],al
30025548:	inc    ebx
30025549:	add    BYTE PTR [edi+0x0],ch
3002554c:	add    BYTE PTR fs:[ebp+0x0],ah
30025550:	and    BYTE PTR [eax],al
30025552:	inc    edx
30025553:	add    BYTE PTR [ecx+0x0],ah
30025556:	jae    0x30025558
30025558:	add    BYTE PTR gs:[eax],ah
3002555b:	add    BYTE PTR [eax+eax*1+0x68],dh
3002555f:	add    BYTE PTR [ecx+0x0],ah
30025562:	je     0x30025564
30025564:	and    BYTE PTR [eax],al
30025566:	bound  eax,QWORD PTR [eax]
30025568:	add    BYTE PTR gs:[ebx+0x0],ah
3002556c:	outs   dx,DWORD PTR ds:[esi]
3002556d:	add    BYTE PTR [ebp+0x0],ch
30025570:	add    BYTE PTR gs:[ebx+0x0],dh
30025574:	and    BYTE PTR [eax],al
30025576:	jne    0x30025578
30025578:	outs   dx,BYTE PTR ds:[esi]
30025579:	add    BYTE PTR [esi+0x0],ch
3002557c:	add    BYTE PTR gs:[ebx+0x0],ah
30025580:	add    BYTE PTR gs:[ebx+0x0],dh
30025584:	jae    0x30025586
30025586:	popa   
30025587:	add    BYTE PTR [edx+0x0],dh
3002558a:	jns    0x3002558c
3002558c:	and    BYTE PTR [eax],al
3002558e:	add    BYTE PTR fs:[ebp+0x0],dh
30025592:	add    BYTE PTR gs:[eax],ah
30025595:	add    BYTE PTR [eax+eax*1+0x6f],dh
30025599:	add    BYTE PTR [eax],ah
3002559b:	add    BYTE PTR [ecx+0x0],ah
3002559e:	and    BYTE PTR [eax],al
300255a0:	inc    edx
300255a1:	add    BYTE PTR [ecx+0x0],ch
300255a4:	outs   dx,BYTE PTR ds:[esi]
300255a5:	add    BYTE PTR [eax+eax*1+0x69],ah
300255a9:	add    BYTE PTR [esi+0x0],ch
300255ac:	add    BYTE PTR [bx+si],ah
300255af:	add    BYTE PTR [edx+0x0],dl
300255b2:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
300255b7:	add    BYTE PTR [edx+0x0],dh
300255ba:	add    BYTE PTR gs:[ebx+0x0],ah
300255be:	je     0x300255c0
300255c0:	add    BYTE PTR cs:[eax],ah
300255c3:	add    BYTE PTR [ecx+0x0],cl
300255c6:	add    BYTE PTR [bp+0x0],ch
300255ca:	outs   dx,DWORD PTR ds:[esi]
300255cb:	add    BYTE PTR [edx+0x0],dh
300255ce:	imul   eax,DWORD PTR [eax],0x67006e
300255d4:	and    BYTE PTR [eax],al
300255d6:	inc    ebx
300255d7:	add    BYTE PTR [edi+0x0],ch
300255da:	add    BYTE PTR fs:[ebp+0x0],ah
300255de:	and    BYTE PTR [eax],al
300255e0:	inc    edx
300255e1:	add    BYTE PTR [ecx+0x0],ah
300255e4:	jae    0x300255e6
300255e6:	add    BYTE PTR gs:[esi],ch
300255e9:	add    BYTE PTR [eax],al
300255eb:	add    BYTE PTR [eax-0x7fffbffd],bh
300255f1:	jmp    0x30013960
300255f6:	mov    eax,0x80004003
300255fb:	jmp    0x30012128
30025600:	or     eax,0xffffffff
30025603:	pop    esi
30025604:	ret    
30025605:	mov    DWORD PTR [esi],eax
30025607:	jmp    0x30012aa2
3002560c:	mov    DWORD PTR [esi+0x4],eax
3002560f:	jmp    0x30012ab3
30025614:	push   0x80004005
30025619:	call   0x3002ae0b
3002561e:	int3   
3002561f:	inc    edi
30025620:	jmp    0x3001340d
30025625:	push   DWORD PTR [esi-0xc]
30025628:	lea    ecx,[ebp-0x44]
3002562b:	call   0x300041f1
30025630:	mov    esi,DWORD PTR [ebp-0x44]
30025633:	jmp    0x30013335
30025638:	movzx  edi,di
3002563b:	or     edi,0x80070000
30025641:	test   edi,edi
30025643:	jmp    0x30013392
30025648:	push   DWORD PTR [ebp-0x6c]
3002564b:	lea    ecx,[ebp-0x4c]
3002564e:	call   0x30004340
30025653:	mov    esi,DWORD PTR [ebp-0x44]
30025656:	push   esi
30025657:	lea    eax,[ebp-0x4c]
3002565a:	push   0x300118f0
3002565f:	push   eax
30025660:	call   0x3000b9f3
30025665:	add    esp,0xc
30025668:	mov    edx,edi
3002566a:	push   DWORD PTR [ebp-0x4c]
3002566d:	mov    ecx,0x3002a8d8
30025672:	call   0x30033b68
30025677:	lea    ecx,[ebp-0x4c]
3002567a:	xor    edi,edi
3002567c:	call   0x300051a4
30025681:	jmp    0x300133da
30025686:	and    DWORD PTR [ebp-0x58],edi
30025689:	push   0x32
3002568b:	pop    esi
3002568c:	lea    ecx,[ebp-0x54]
3002568f:	mov    DWORD PTR [ebp-0x60],esi
30025692:	call   0x300051c8
30025697:	push   esi
30025698:	lea    ecx,[ebp-0x54]
3002569b:	call   0x30004286
300256a0:	mov    esi,DWORD PTR [ebp-0x54]
300256a3:	cmp    DWORD PTR [esi-0x4],0x1
300256a7:	jle    0x300256b7
300256a9:	push   DWORD PTR [esi-0xc]
300256ac:	lea    ecx,[ebp-0x54]
300256af:	call   0x300041f1
300256b4:	mov    esi,DWORD PTR [ebp-0x54]
300256b7:	lea    eax,[ebp-0x84]
300256bd:	push   eax
300256be:	xor    eax,eax
300256c0:	push   eax
300256c1:	push   eax
300256c2:	push   eax
300256c3:	lea    eax,[ebp-0x60]
300256c6:	push   eax
300256c7:	push   esi
300256c8:	push   DWORD PTR [ebp-0x58]
300256cb:	push   DWORD PTR [ebp-0x6c]
300256ce:	call   DWORD PTR ds:0x30045074
300256d4:	test   eax,eax
300256d6:	jne    0x300257e1
300256dc:	lea    eax,[ebp-0x50]
300256df:	push   eax
300256e0:	push   esi
300256e1:	call   DWORD PTR ds:0x3004549c
300256e7:	mov    edi,eax
300256e9:	test   edi,edi
300256eb:	js     0x300257e1
300256f1:	push   0x20019
300256f6:	xor    eax,eax
300256f8:	push   esi
300256f9:	push   DWORD PTR [ebp-0x6c]
300256fc:	lea    ecx,[ebp-0x78]
300256ff:	mov    DWORD PTR [ebp-0x78],eax
30025702:	mov    DWORD PTR [ebp-0x74],eax
30025705:	mov    DWORD PTR [ebp-0x70],eax
30025708:	call   0x300051d9
3002570d:	mov    edi,eax
3002570f:	test   edi,edi
30025711:	jle    0x3002571e
30025713:	movzx  edi,di
30025716:	or     edi,0x80070000
3002571c:	test   edi,edi
3002571e:	js     0x300257d9
30025724:	lea    ecx,[ebp-0x40]
30025727:	call   0x30012df4
3002572c:	xor    eax,eax
3002572e:	mov    DWORD PTR [ebp-0x14],eax
30025731:	mov    DWORD PTR [ebp-0x10],eax
30025734:	mov    DWORD PTR [ebp-0xc],eax
30025737:	mov    DWORD PTR [ebp-0x8],eax
3002573a:	mov    DWORD PTR [ebp-0x40],0x30008204
30025741:	lea    esi,[ebp-0x50]
30025744:	lea    edi,[ebp-0x3c]
30025747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30025748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30025749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002574a:	lea    eax,[ebp-0x78]
3002574d:	push   eax
3002574e:	lea    ecx,[ebp-0x40]
30025751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30025752:	call   0x30036c93
30025757:	mov    edi,eax
30025759:	test   edi,edi
3002575b:	js     0x30025781
3002575d:	push   ecx
3002575e:	push   DWORD PTR [ebx+0x4]
30025761:	lea    eax,[ebp-0x40]
30025764:	push   eax
30025765:	mov    ecx,ebx
30025767:	call   0x30035c4d
3002576c:	mov    ecx,DWORD PTR [ebx+0x4]
3002576f:	test   ecx,ecx
30025771:	je     0x30025777
30025773:	mov    DWORD PTR [ecx],eax
30025775:	jmp    0x30025779
30025777:	mov    DWORD PTR [ebx],eax
30025779:	mov    esi,DWORD PTR [ebp-0x54]
3002577c:	mov    DWORD PTR [ebx+0x4],eax
3002577f:	jmp    0x300257ba
30025781:	push   DWORD PTR [ebp-0x7c]
30025784:	lea    ecx,[ebp-0x5c]
30025787:	call   0x30004340
3002578c:	mov    esi,DWORD PTR [ebp-0x54]
3002578f:	push   esi
30025790:	lea    eax,[ebp-0x5c]
30025793:	push   0x300118f0
30025798:	push   eax
30025799:	call   0x3000b9f3
3002579e:	add    esp,0xc
300257a1:	mov    edx,edi
300257a3:	push   DWORD PTR [ebp-0x5c]
300257a6:	mov    ecx,0x3002a8d8
300257ab:	call   0x30033b68
300257b0:	lea    ecx,[ebp-0x5c]
300257b3:	xor    edi,edi
300257b5:	call   0x300051a4
300257ba:	inc    DWORD PTR [ebp-0x58]
300257bd:	lea    ecx,[ebp-0x40]
300257c0:	mov    DWORD PTR [ebp-0x60],0x32
300257c7:	call   0x30012777
300257cc:	lea    ecx,[ebp-0x78]
300257cf:	call   0x300051ae
300257d4:	jmp    0x300256a3
300257d9:	lea    ecx,[ebp-0x78]
300257dc:	call   0x300051ae
300257e1:	lea    ecx,[ebp-0x54]
300257e4:	call   0x300051a4
300257e9:	jmp    0x30013e06
300257ee:	push   0x8007000e
300257f3:	call   0x3002ae0b
300257f8:	int3   
300257f9:	mov    edx,0x80070057
300257fe:	jmp    0x300112ea
30025803:	sub    ecx,0x2
30025806:	mov    edx,0x8007007a
3002580b:	jmp    0x300112ea
30025810:	mov    eax,0x80070057
30025815:	jmp    0x3000a6a4
3002581a:	movzx  ebx,bx
3002581d:	or     ebx,0x80070000
30025823:	test   ebx,ebx
30025825:	jmp    0x3000a621
3002582a:	push   ebx
3002582b:	push   edi
3002582c:	push   edi
3002582d:	push   edi
3002582e:	push   edi
3002582f:	push   DWORD PTR [esi+0x4]
30025832:	push   DWORD PTR [edx+0x64]
30025835:	call   DWORD PTR ds:0x3004500c
3002583b:	mov    ebx,eax
3002583d:	cmp    ebx,0x2
30025840:	je     0x300258ad
30025842:	lea    ecx,[ebp+0x8]
30025845:	call   0x300051c8
3002584a:	push   DWORD PTR [esi+0x4]
3002584d:	lea    eax,[ebp+0x8]
30025850:	push   DWORD PTR [esi]
30025852:	test   ebx,ebx
30025854:	jne    0x3002587f
30025856:	push   0x300258f8
3002585b:	push   eax
3002585c:	call   0x30005153
30025861:	add    esp,0x10
30025864:	cmp    BYTE PTR ds:0x300430f1,bl
3002586a:	je     0x300258a5
3002586c:	call   0x30033b12
30025871:	push   DWORD PTR [ebp+0x8]
30025874:	mov    edx,DWORD PTR [eax]
30025876:	push   0x2
30025878:	mov    ecx,eax
3002587a:	call   DWORD PTR [edx+0x8]
3002587d:	jmp    0x300258a5
3002587f:	push   0x30025980
30025884:	push   eax
30025885:	call   0x30005153
3002588a:	add    esp,0x10
3002588d:	test   ebx,ebx
3002588f:	jle    0x3002589a
30025891:	movzx  ebx,bx
30025894:	or     ebx,0x80070000
3002589a:	mov    ecx,DWORD PTR [ebp+0x8]
3002589d:	push   edi
3002589e:	mov    edx,ebx
300258a0:	call   0x30033b68
300258a5:	lea    ecx,[ebp+0x8]
300258a8:	call   0x300051a4
300258ad:	mov    edx,DWORD PTR [ebp-0x4]
300258b0:	pop    ebx
300258b1:	jmp    0x3000a465
300258b6:	dec    eax
300258b7:	jne    0x3000a498
300258bd:	push   0x8
300258bf:	lea    eax,[esi+0x20]
300258c2:	push   eax
300258c3:	push   0xb
300258c5:	jmp    0x3000a481
300258ca:	mov    ecx,DWORD PTR [esi+0xc]
300258cd:	mov    eax,DWORD PTR [ecx-0xc]
300258d0:	lea    eax,[eax*2+0x2]
300258d7:	push   eax
300258d8:	push   ecx
300258d9:	push   0x2
300258db:	jmp    0x3000a481
300258e0:	push   DWORD PTR [esi+0x4]
300258e3:	mov    edx,edi
300258e5:	mov    ecx,0x300259e0
300258ea:	call   0x30033b68
300258ef:	jmp    0x3000a498
300258f4:	nop
300258f5:	nop
300258f6:	nop
300258f7:	nop
300258f8:	push   eax
300258f9:	add    BYTE PTR [ebx+0x0],ch
300258fc:	add    BYTE PTR [si+0x0],al
30025900:	add    BYTE PTR gs:[esi+0x0],ah
30025904:	and    BYTE PTR [eax],al
30025906:	add    BYTE PTR gs:[esi+0x0],ch
3002590a:	arpl   WORD PTR [eax],ax
3002590c:	outs   dx,DWORD PTR ds:[esi]
3002590d:	add    BYTE PTR [ebp+0x0],dh
30025910:	outs   dx,BYTE PTR ds:[esi]
30025911:	add    BYTE PTR [eax+eax*1+0x65],dh
30025915:	add    BYTE PTR [edx+0x0],dh
30025918:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
3002591d:	add    BYTE PTR [eax+eax*1+0x61],ah
30025921:	add    BYTE PTR [eax+eax*1+0x61],dh
30025925:	add    BYTE PTR [eax],ah
30025927:	add    BYTE PTR [ebx+0x0],ah
3002592a:	outs   dx,DWORD PTR ds:[esi]
3002592b:	add    BYTE PTR [eax+eax*1+0x6c],ch
3002592f:	add    BYTE PTR [ecx+0x0],ch
30025932:	jae    0x30025934
30025934:	imul   eax,DWORD PTR [eax],0x6e006f
3002593a:	and    BYTE PTR [eax],al
3002593c:	imul   eax,DWORD PTR [eax],0x20006e
30025942:	jae    0x30025944
30025944:	add    BYTE PTR gs:[ebx+0x0],ah
30025948:	je     0x3002594a
3002594a:	imul   eax,DWORD PTR [eax],0x6e006f
30025950:	and    BYTE PTR [eax],al
30025952:	daa    
30025953:	add    BYTE PTR ds:0x27007300,ah
30025959:	add    BYTE PTR [eax],ah
3002595b:	add    BYTE PTR [esi+0x0],ah
3002595e:	outs   dx,DWORD PTR ds:[esi]
3002595f:	add    BYTE PTR [edx+0x0],dh
30025962:	and    BYTE PTR [eax],al
30025964:	jbe    0x30025966
30025966:	popa   
30025967:	add    BYTE PTR [eax+eax*1+0x75],ch
3002596b:	add    BYTE PTR [ebp+0x0],ah
3002596e:	and    BYTE PTR [eax],al
30025970:	daa    
30025971:	add    BYTE PTR ds:0x27007300,ah
30025977:	add    BYTE PTR [eax],al
30025979:	add    BYTE PTR [eax-0x6f6f6f70],dl
3002597f:	nop
30025980:	inc    ebp
30025981:	add    BYTE PTR [edx+0x0],dh
30025984:	jb     0x30025986
30025986:	outs   dx,DWORD PTR ds:[esi]
30025987:	add    BYTE PTR [edx+0x0],dh
3002598a:	and    BYTE PTR [eax],al
3002598c:	ja     0x3002598e
3002598e:	push   0x6c006900
30025993:	add    BYTE PTR [ebp+0x0],ah
30025996:	and    BYTE PTR [eax],al
30025998:	jo     0x3002599a
3002599a:	jb     0x3002599c
3002599c:	outs   dx,DWORD PTR ds:[esi]
3002599d:	add    BYTE PTR [ebx+0x0],ah
300259a0:	add    BYTE PTR gs:[ebx+0x0],dh
300259a4:	jae    0x300259a6
300259a6:	imul   eax,DWORD PTR [eax],0x67006e
300259ac:	and    BYTE PTR [eax],al
300259ae:	jae    0x300259b0
300259b0:	add    BYTE PTR gs:[ebx+0x0],ah
300259b4:	je     0x300259b6
300259b6:	imul   eax,DWORD PTR [eax],0x6e006f
300259bc:	and    BYTE PTR [eax],al
300259be:	daa    
300259bf:	add    BYTE PTR ds:0x27007300,ah
300259c5:	add    BYTE PTR [eax+eax*1],ch
300259c8:	and    BYTE PTR [eax],al
300259ca:	jbe    0x300259cc
300259cc:	popa   
300259cd:	add    BYTE PTR [eax+eax*1+0x75],ch
300259d1:	add    BYTE PTR [ebp+0x0],ah
300259d4:	and    BYTE PTR [eax],al
300259d6:	daa    
300259d7:	add    BYTE PTR ds:0x27007300,ah
300259dd:	add    BYTE PTR [eax],al
300259df:	add    BYTE PTR [ebp+0x0],al
300259e2:	jb     0x300259e4
300259e4:	jb     0x300259e6
300259e6:	outs   dx,DWORD PTR ds:[esi]
300259e7:	add    BYTE PTR [edx+0x0],dh
300259ea:	and    BYTE PTR [eax],al
300259ec:	ja     0x300259ee
300259ee:	jb     0x300259f0
300259f0:	imul   eax,DWORD PTR [eax],0x690074
300259f6:	outs   dx,BYTE PTR ds:[esi]
300259f7:	add    BYTE PTR [edi+0x0],ah
300259fa:	and    BYTE PTR [eax],al
300259fc:	je     0x300259fe
300259fe:	outs   dx,DWORD PTR ds:[esi]
300259ff:	add    BYTE PTR [eax],ah
30025a01:	add    BYTE PTR [edx+0x0],dh
30025a04:	add    BYTE PTR gs:[edi+0x0],ah
30025a08:	imul   eax,DWORD PTR [eax],0x740073
30025a0e:	jb     0x30025a10
30025a10:	jns    0x30025a12
30025a12:	and    BYTE PTR [eax],al
30025a14:	jbe    0x30025a16
30025a16:	popa   
30025a17:	add    BYTE PTR [eax+eax*1+0x75],ch
30025a1b:	add    BYTE PTR [ebp+0x0],ah
30025a1e:	and    BYTE PTR [eax],al
30025a20:	outs   dx,BYTE PTR ds:[esi]
30025a21:	add    BYTE PTR [ecx+0x0],ah
30025a24:	ins    DWORD PTR es:[edi],dx
30025a25:	add    BYTE PTR [ebp+0x0],ah
30025a28:	add    BYTE PTR [eax],al
30025a2a:	lea    eax,[esp+0x68]
30025a2e:	push   eax
30025a2f:	lea    ecx,[esp+0x14]
30025a33:	mov    DWORD PTR [esp+0x20],0x300167e4
30025a3b:	mov    DWORD PTR [esp+0x24],ebx
30025a3f:	mov    WORD PTR [esp+0x28],0x0
30025a46:	call   0x3000437e
30025a4b:	lea    eax,[esp+0x10]
30025a4f:	push   eax
30025a50:	lea    ecx,[esp+0x20]
30025a54:	call   0x3001c50e
30025a59:	lea    ecx,[esp+0x10]
30025a5d:	mov    edi,eax
30025a5f:	call   0x300051a4
30025a64:	test   edi,edi
30025a66:	jns    0x30025a93
30025a68:	cmp    BYTE PTR ds:0x300430f1,0x0
30025a6f:	je     0x30025a85
30025a71:	lea    eax,[esp+0x68]
30025a75:	push   eax
30025a76:	xor    ecx,ecx
30025a78:	push   0x30025b60
30025a7d:	mov    edx,edi
30025a7f:	inc    ecx
30025a80:	call   0x30033ac0
30025a85:	lea    ecx,[esp+0x1c]
30025a89:	call   0x30016b4d
30025a8e:	jmp    0x3001d9d6
30025a93:	cmp    BYTE PTR [esp+0x24],0x0
30025a98:	lea    ecx,[esp+0x1c]
30025a9c:	setne  bl
30025a9f:	call   0x30016b4d
30025aa4:	test   bl,bl
30025aa6:	je     0x30025ab6
30025aa8:	lea    eax,[esp+0x68]
30025aac:	push   eax
30025aad:	lea    ecx,[esp+0x38]
30025ab1:	call   0x3000b906
30025ab6:	xor    ebx,ebx
30025ab8:	jmp    0x3001d9d6
30025abd:	mov    esi,DWORD PTR [esp+0x38]
30025ac1:	test   esi,esi
30025ac3:	je     0x30025b51
30025ac9:	lea    eax,[esi+0x8]
30025acc:	push   eax
30025acd:	lea    ecx,[esp+0x14]
30025ad1:	call   0x30004340
30025ad6:	mov    eax,DWORD PTR [esi+0x4]
30025ad9:	mov    DWORD PTR [esp+0x38],eax
30025add:	test   eax,eax
30025adf:	je     0x30025ae5
30025ae1:	mov    DWORD PTR [eax],ebx
30025ae3:	jmp    0x30025ae9
30025ae5:	mov    DWORD PTR [esp+0x34],ebx
30025ae9:	push   esi
30025aea:	lea    ecx,[esp+0x38]
30025aee:	call   0x300089f5
30025af3:	cmp    BYTE PTR ds:0x300430f1,0x0
30025afa:	je     0x30025b0f
30025afc:	push   DWORD PTR [esp+0x10]
30025b00:	xor    edx,edx
30025b02:	push   0x30025bb8
30025b07:	push   0x3
30025b09:	pop    ecx
30025b0a:	call   0x30033ac0
30025b0f:	push   DWORD PTR [esp+0x10]
30025b13:	lea    ecx,[esp+0x2c]
30025b17:	call   0x30016204
30025b1c:	test   eax,eax
30025b1e:	je     0x30025b43
30025b20:	jle    0x30025b2a
30025b22:	movzx  eax,ax
30025b25:	or     eax,0x80070000
30025b2a:	cmp    BYTE PTR ds:0x300430f1,0x0
30025b31:	je     0x30025b43
30025b33:	push   ebx
30025b34:	xor    ecx,ecx
30025b36:	push   0x30025c08
30025b3b:	mov    edx,eax
30025b3d:	inc    ecx
30025b3e:	call   0x30033ac0
30025b43:	lea    ecx,[esp+0x10]
30025b47:	call   0x300051a4
30025b4c:	jmp    0x3001d9f6
30025b51:	push   0x80004005
30025b56:	call   0x3002ae0b
30025b5b:	int3   
30025b5c:	nop
30025b5d:	nop
30025b5e:	nop
30025b5f:	nop
30025b60:	inc    ebx
30025b61:	add    BYTE PTR [edi+0x0],ch
30025b64:	jne    0x30025b66
30025b66:	ins    BYTE PTR es:[edi],dx
30025b67:	add    BYTE PTR [eax+eax*1+0x20],ah
30025b6b:	add    BYTE PTR [esi+0x0],ch
30025b6e:	outs   dx,DWORD PTR ds:[esi]
30025b6f:	add    BYTE PTR [eax+eax*1+0x20],dh
30025b73:	add    BYTE PTR [ebx+0x0],ah
30025b76:	jb     0x30025b78
30025b78:	add    BYTE PTR gs:[ecx+0x0],ah
30025b7c:	je     0x30025b7e
30025b7e:	add    BYTE PTR gs:[eax],ah
30025b81:	add    BYTE PTR [edi+0x0],ch
30025b84:	jb     0x30025b86
30025b86:	and    BYTE PTR [eax],al
30025b88:	data16 add BYTE PTR [ecx+0x0],ch
30025b8c:	outs   dx,BYTE PTR ds:[esi]
30025b8d:	add    BYTE PTR [eax+eax*1+0x20],ah
30025b91:	add    BYTE PTR [eax+0x0],dh
30025b94:	imul   eax,DWORD PTR [eax],0x67
30025b97:	add    BYTE PTR [eax+eax*1+0x65],ah
30025b9b:	add    BYTE PTR [esi+0x0],ah
30025b9e:	and    BYTE PTR [eax],al
30025ba0:	push   ebx
30025ba1:	add    BYTE PTR [ebp+0x0],ah
30025ba4:	ins    DWORD PTR es:[edi],dx
30025ba5:	add    BYTE PTR [ecx+0x0],ah
30025ba8:	jo     0x30025baa
30025baa:	push   0x72006f00
30025baf:	add    BYTE PTR [ebp+0x0],ah
30025bb2:	add    BYTE PTR [eax],al
30025bb4:	nop
30025bb5:	nop
30025bb6:	nop
30025bb7:	nop
30025bb8:	push   edx
30025bb9:	add    BYTE PTR [ebp+0x0],ah
30025bbc:	ins    DWORD PTR es:[edi],dx
30025bbd:	add    BYTE PTR [edi+0x0],ch
30025bc0:	jbe    0x30025bc2
30025bc2:	imul   eax,DWORD PTR [eax],0x67006e
30025bc8:	and    BYTE PTR [eax],al
30025bca:	popa   
30025bcb:	add    BYTE PTR [edx+0x0],ah
30025bce:	popa   
30025bcf:	add    BYTE PTR [esi+0x0],ch
30025bd2:	add    BYTE PTR fs:[edi+0x0],ch
30025bd6:	outs   dx,BYTE PTR ds:[esi]
30025bd7:	add    BYTE PTR [ebp+0x0],ah
30025bda:	add    BYTE PTR fs:[eax],ah
30025bdd:	add    BYTE PTR [ebx+0x0],ah
30025be0:	outs   dx,DWORD PTR ds:[esi]
30025be1:	add    BYTE PTR [esi+0x0],ch
30025be4:	data16 add BYTE PTR [ecx+0x0],ch
30025be8:	add    BYTE PTR [di+0x0],dh
30025bec:	jb     0x30025bee
30025bee:	popa   
30025bef:	add    BYTE PTR [eax+eax*1+0x69],dh
30025bf3:	add    BYTE PTR [edi+0x0],ch
30025bf6:	outs   dx,BYTE PTR ds:[esi]
30025bf7:	add    BYTE PTR [eax],ah
30025bf9:	add    BYTE PTR [ebx+0x0],ah
30025bfc:	popa   
30025bfd:	add    BYTE PTR [ebx+0x0],ah
30025c00:	push   0x6500
30025c05:	add    BYTE PTR [eax+0x6f004390],dl
30025c0b:	add    BYTE PTR [ebp+0x0],dh
30025c0e:	ins    BYTE PTR es:[edi],dx
30025c0f:	add    BYTE PTR [eax+eax*1+0x20],ah
30025c13:	add    BYTE PTR [esi+0x0],ch
30025c16:	outs   dx,DWORD PTR ds:[esi]
30025c17:	add    BYTE PTR [eax+eax*1+0x20],dh
30025c1b:	add    BYTE PTR [edx+0x0],dh
30025c1e:	add    BYTE PTR gs:[ebp+0x0],ch
30025c22:	outs   dx,DWORD PTR ds:[esi]
30025c23:	add    BYTE PTR [esi+0x0],dh
30025c26:	add    BYTE PTR gs:[eax],ah
30025c29:	add    BYTE PTR [ecx+0x0],ah
30025c2c:	bound  eax,QWORD PTR [eax]
30025c2e:	popa   
30025c2f:	add    BYTE PTR [esi+0x0],ch
30025c32:	add    BYTE PTR fs:[edi+0x0],ch
30025c36:	outs   dx,BYTE PTR ds:[esi]
30025c37:	add    BYTE PTR [ebp+0x0],ah
30025c3a:	add    BYTE PTR fs:[eax],ah
30025c3d:	add    BYTE PTR [ebx+0x0],ah
30025c40:	outs   dx,DWORD PTR ds:[esi]
30025c41:	add    BYTE PTR [esi+0x0],ch
30025c44:	data16 add BYTE PTR [ecx+0x0],ch
30025c48:	add    BYTE PTR [di+0x0],dh
30025c4c:	jb     0x30025c4e
30025c4e:	popa   
30025c4f:	add    BYTE PTR [eax+eax*1+0x69],dh
30025c53:	add    BYTE PTR [edi+0x0],ch
30025c56:	outs   dx,BYTE PTR ds:[esi]
30025c57:	add    BYTE PTR [eax],ah
30025c59:	add    BYTE PTR [ebx+0x0],ah
30025c5c:	popa   
30025c5d:	add    BYTE PTR [ebx+0x0],ah
30025c60:	push   0x6500
30025c65:	add    BYTE PTR [ebx],dh
30025c67:	shr    cl,0x7a
30025c6a:	mov    edi,esi
30025c6c:	(bad)  
30025c6d:	mov    edi,0x8000ffff
30025c72:	jmp    0x3000e7c9
30025c77:	lea    ecx,[esi+0x44]
30025c7a:	call   0x300162bb
30025c7f:	jmp    0x3000eb72
30025c84:	mov    ecx,esi
30025c86:	call   0x30036356
30025c8b:	push   DWORD PTR [esi+0x3c]
30025c8e:	lea    ecx,[ebp+0xc]
30025c91:	call   0x300089ae
30025c96:	lea    ecx,[ebp+0xc]
30025c99:	call   0x30018854
30025c9e:	lea    eax,[ebp+0xc]
30025ca1:	push   eax
30025ca2:	lea    ecx,[esi+0x5c]
30025ca5:	call   0x3001c50e
30025caa:	push   ebx
30025cab:	mov    ecx,esi
30025cad:	call   0x300099a0
30025cb2:	lea    ecx,[ebp+0xc]
30025cb5:	mov    edi,eax
30025cb7:	call   0x300051a4
30025cbc:	test   edi,edi
30025cbe:	jns    0x3000e7e4
30025cc4:	cmp    BYTE PTR ds:0x300430f1,0x0
30025ccb:	je     0x3000e7e4
30025cd1:	push   0x0
30025cd3:	xor    ecx,ecx
30025cd5:	push   0x30025ce8
30025cda:	mov    edx,edi
30025cdc:	inc    ecx
30025cdd:	call   0x30033ac0
30025ce2:	jmp    0x3000e7e4
30025ce7:	nop
30025ce8:	inc    ebp
30025ce9:	add    BYTE PTR [edx+0x0],dh
30025cec:	jb     0x30025cee
30025cee:	outs   dx,DWORD PTR ds:[esi]
30025cef:	add    BYTE PTR [edx+0x0],dh
30025cf2:	and    BYTE PTR [eax],al
30025cf4:	outs   dx,DWORD PTR ds:[esi]
30025cf5:	add    BYTE PTR [edx+0x0],dh
30025cf8:	and    BYTE PTR [eax],al
30025cfa:	je     0x30025cfc
30025cfc:	imul   eax,DWORD PTR [eax],0x65006d
30025d02:	outs   dx,DWORD PTR ds:[esi]
30025d03:	add    BYTE PTR [ebp+0x0],dh
30025d06:	je     0x30025d08
30025d08:	and    BYTE PTR [eax],al
30025d0a:	ja     0x30025d0c
30025d0c:	push   0x6c006900
30025d11:	add    BYTE PTR [ebp+0x0],ah
30025d14:	and    BYTE PTR [eax],al
30025d16:	imul   eax,DWORD PTR [eax],0x69006e
30025d1c:	je     0x30025d1e
30025d1e:	imul   eax,DWORD PTR [eax],0x6c0061
30025d24:	imul   eax,DWORD PTR [eax],0x69007a
30025d2a:	outs   dx,BYTE PTR ds:[esi]
30025d2b:	add    BYTE PTR [edi+0x0],ah
30025d2e:	and    BYTE PTR [eax],al
30025d30:	outs   dx,BYTE PTR ds:[esi]
30025d31:	add    BYTE PTR [edi+0x0],ch
30025d34:	outs   dx,BYTE PTR ds:[esi]
30025d35:	add    BYTE PTR ds:0x6f007600,ch
30025d3b:	add    BYTE PTR [eax+eax*1+0x61],ch
30025d3f:	add    BYTE PTR [eax+eax*1+0x69],dh
30025d43:	add    BYTE PTR [eax+eax*1+0x65],ch
30025d47:	add    BYTE PTR [eax],ah
30025d49:	add    BYTE PTR [eax+0x0],dh
30025d4c:	imul   eax,DWORD PTR [eax],0x67
30025d4f:	add    BYTE PTR [eax+eax*1+0x65],ah
30025d53:	add    BYTE PTR [esi+0x0],ah
30025d56:	and    BYTE PTR [eax],al
30025d58:	arpl   WORD PTR [eax],ax
30025d5a:	popa   
30025d5b:	add    BYTE PTR [ebx+0x0],ah
30025d5e:	push   0x6500
30025d63:	add    al,ch
30025d65:	test   eax,0x8b0000dd
30025d6a:	adc    BYTE PTR [eax-0x80],ch
30025d6d:	pop    ebp
30025d6e:	add    dh,BYTE PTR [eax]
30025d70:	push   0x3
30025d72:	mov    ecx,eax
30025d74:	call   DWORD PTR [edx+0x8]
30025d77:	jmp    0x300099b4
30025d7c:	nop
30025d7d:	nop
30025d7e:	nop
30025d7f:	nop
30025d80:	dec    ecx
30025d81:	add    BYTE PTR [esi+0x0],ch
30025d84:	imul   eax,DWORD PTR [eax],0x690074
30025d8a:	popa   
30025d8b:	add    BYTE PTR [eax+eax*1+0x69],ch
30025d8f:	add    BYTE PTR [edx+0x0],bh
30025d92:	imul   eax,DWORD PTR [eax],0x67006e
30025d98:	and    BYTE PTR [eax],al
30025d9a:	outs   dx,BYTE PTR ds:[esi]
30025d9b:	add    BYTE PTR [edi+0x0],ch
30025d9e:	outs   dx,BYTE PTR ds:[esi]
30025d9f:	add    BYTE PTR ds:0x6f007600,ch
30025da5:	add    BYTE PTR [eax+eax*1+0x61],ch
30025da9:	add    BYTE PTR [eax+eax*1+0x69],dh
30025dad:	add    BYTE PTR [eax+eax*1+0x65],ch
30025db1:	add    BYTE PTR [eax],ah
30025db3:	add    BYTE PTR [eax+0x0],dh
30025db6:	imul   eax,DWORD PTR [eax],0x67
30025db9:	add    BYTE PTR [eax+eax*1+0x65],ah
30025dbd:	add    BYTE PTR [esi+0x0],ah
30025dc0:	and    BYTE PTR [eax],al
30025dc2:	arpl   WORD PTR [eax],ax
30025dc4:	popa   
30025dc5:	add    BYTE PTR [ebx+0x0],ah
30025dc8:	push   0x6500
30025dcd:	add    al,ch
30025dcf:	aas    
30025dd0:	fld    QWORD PTR [eax]
30025dd2:	add    BYTE PTR [ebx+0x5e006810],cl
30025dd8:	add    dh,BYTE PTR [eax]
30025dda:	push   0x3
30025ddc:	mov    ecx,eax
30025dde:	call   DWORD PTR [edx+0x8]
30025de1:	jmp    0x30011d64
30025de6:	movzx  esi,si
30025de9:	or     esi,0x80070000
30025def:	test   esi,esi
30025df1:	jmp    0x30011d9a
30025df6:	mov    eax,esi
30025df8:	jmp    0x30011dd6
30025dfd:	nop
30025dfe:	nop
30025dff:	nop
30025e00:	push   ebx
30025e01:	add    BYTE PTR [ecx+0x0],ah
30025e04:	jbe    0x30025e06
30025e06:	imul   eax,DWORD PTR [eax],0x67006e
30025e0c:	and    BYTE PTR [eax],al
30025e0e:	jo     0x30025e10
30025e10:	imul   eax,DWORD PTR [eax],0x67
30025e13:	add    BYTE PTR [eax+eax*1+0x65],ah
30025e17:	add    BYTE PTR [esi+0x0],ah
30025e1a:	and    BYTE PTR [eax],al
30025e1c:	arpl   WORD PTR [eax],ax
30025e1e:	popa   
30025e1f:	add    BYTE PTR [ebx+0x0],ah
30025e22:	push   0x20006500
30025e27:	add    BYTE PTR [ebp+0x0],ch
30025e2a:	add    BYTE PTR gs:[eax+eax*1+0x61],dh
30025e2f:	add    BYTE PTR [eax],ah
30025e31:	add    BYTE PTR [eax+eax*1+0x61],ah
30025e35:	add    BYTE PTR [eax+eax*1+0x61],dh
30025e39:	add    BYTE PTR [eax],al
30025e3b:	add    bh,bh
30025e3d:	jbe    0x30025e7b
30025e3f:	lea    ecx,[ebp-0xc]
30025e42:	mov    DWORD PTR [ebp-0xc],0x80000001
30025e49:	mov    DWORD PTR [ebp-0x8],edi
30025e4c:	mov    DWORD PTR [ebp-0x4],edi
30025e4f:	call   0x30016204
30025e54:	test   eax,eax
30025e56:	jle    0x30025e60
30025e58:	movzx  eax,ax
30025e5b:	or     eax,0x80070000
30025e60:	cmp    BYTE PTR ds:0x300430f1,0x0
30025e67:	je     0x30025e79
30025e69:	push   edi
30025e6a:	push   0x30025ea0
30025e6f:	push   0x3
30025e71:	mov    edx,eax
30025e73:	pop    ecx
30025e74:	call   0x30033ac0
30025e79:	lea    ecx,[ebp-0xc]
30025e7c:	call   0x300051ae
30025e81:	jmp    0x30016b17
30025e86:	push   edi
30025e87:	push   0x30025ef8
30025e8c:	push   0x3
30025e8e:	mov    edx,eax
30025e90:	pop    ecx
30025e91:	call   0x30033ac0
30025e96:	jmp    0x30016b2d
30025e9b:	nop
30025e9c:	nop
30025e9d:	nop
30025e9e:	nop
30025e9f:	nop
30025ea0:	inc    esp
30025ea1:	add    BYTE PTR [ebp+0x0],ah
30025ea4:	ins    BYTE PTR es:[edi],dx
30025ea5:	add    BYTE PTR [ebp+0x0],ah
30025ea8:	je     0x30025eaa
30025eaa:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30025eaf:	add    BYTE PTR [esi+0x0],dh
30025eb2:	outs   dx,DWORD PTR ds:[esi]
30025eb3:	add    BYTE PTR [eax+eax*1+0x61],ch
30025eb7:	add    BYTE PTR [eax+eax*1+0x69],dh
30025ebb:	add    BYTE PTR [eax+eax*1+0x65],ch
30025ebf:	add    BYTE PTR [eax],ah
30025ec1:	add    BYTE PTR [eax+0x0],dh
30025ec4:	imul   eax,DWORD PTR [eax],0x67
30025ec7:	add    BYTE PTR [eax+eax*1+0x65],ah
30025ecb:	add    BYTE PTR [esi+0x0],ah
30025ece:	and    BYTE PTR [eax],al
30025ed0:	inc    ebx
30025ed1:	add    BYTE PTR [edi+0x0],ch
30025ed4:	outs   dx,BYTE PTR ds:[esi]
30025ed5:	add    BYTE PTR [esi+0x0],ah
30025ed8:	imul   eax,DWORD PTR [eax],0x750067
30025ede:	jb     0x30025ee0
30025ee0:	popa   
30025ee1:	add    BYTE PTR [eax+eax*1+0x69],dh
30025ee5:	add    BYTE PTR [edi+0x0],ch
30025ee8:	outs   dx,BYTE PTR ds:[esi]
30025ee9:	add    BYTE PTR [eax],ah
30025eeb:	add    BYTE PTR [ebx+0x0],ah
30025eee:	popa   
30025eef:	add    BYTE PTR [ebx+0x0],ah
30025ef2:	push   0x6500
30025ef7:	add    BYTE PTR [edx+0x0],dl
30025efa:	add    BYTE PTR gs:[eax+eax*1+0x65],ch
30025eff:	add    BYTE PTR [ecx+0x0],ah
30025f02:	jae    0x30025f04
30025f04:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30025f09:	add    BYTE PTR [eax+0x0],dh
30025f0c:	imul   eax,DWORD PTR [eax],0x67
30025f0f:	add    BYTE PTR [eax+eax*1+0x65],ah
30025f13:	add    BYTE PTR [esi+0x0],ah
30025f16:	and    BYTE PTR [eax],al
30025f18:	arpl   WORD PTR [eax],ax
30025f1a:	popa   
30025f1b:	add    BYTE PTR [ebx+0x0],ah
30025f1e:	push   0x20006500
30025f23:	add    BYTE PTR [ebp+0x0],dh
30025f26:	jae    0x30025f28
30025f28:	popa   
30025f29:	add    BYTE PTR [edi+0x0],ah
30025f2c:	add    BYTE PTR gs:[eax],ah
30025f2f:	add    BYTE PTR [eax+eax*1+0x72],dh
30025f33:	add    BYTE PTR [ecx+0x0],ah
30025f36:	arpl   WORD PTR [eax],ax
30025f38:	imul   eax,DWORD PTR [eax],0x65
30025f3b:	add    BYTE PTR [edx+0x0],dh
30025f3e:	add    BYTE PTR [eax],al
30025f40:	xor    eax,eax
30025f42:	jmp    0x3000a2eb
30025f47:	mov    eax,0x80004003
30025f4c:	jmp    0x3001208a
30025f51:	mov    eax,0x80004003
30025f56:	jmp    0x3001378e
30025f5b:	mov    eax,0x80070057
30025f60:	jmp    0x3001378e
30025f65:	mov    eax,0x80004003
30025f6a:	jmp    0x300120b6
30025f6f:	mov    eax,0x80004003
30025f74:	jmp    0x3001344d
30025f79:	cmp    BYTE PTR ds:0x300430f1,0x0
30025f80:	je     0x300135e5
30025f86:	push   0x0
30025f88:	push   0x3002605c
30025f8d:	jmp    0x30025fd9
30025f8f:	cmp    BYTE PTR ds:0x300430f1,0x0
30025f96:	je     0x300135e5
30025f9c:	push   0x0
30025f9e:	push   0x30026088
30025fa3:	jmp    0x30025fd9
30025fa5:	cmp    BYTE PTR ds:0x300430f1,0x0
30025fac:	je     0x300135e5
30025fb2:	push   0x0
30025fb4:	push   0x300260c8
30025fb9:	jmp    0x30025fd9
30025fbb:	mov    eax,DWORD PTR [edi]
30025fbd:	mov    ecx,edi
30025fbf:	call   DWORD PTR [eax+0x8]
30025fc2:	test   al,al
30025fc4:	jne    0x30025fe8
30025fc6:	cmp    BYTE PTR ds:0x300430f1,al
30025fcc:	je     0x300135e5
30025fd2:	push   0x0
30025fd4:	push   0x300260f8
30025fd9:	xor    ecx,ecx
30025fdb:	mov    edx,esi
30025fdd:	inc    ecx
30025fde:	call   0x30033ac0
30025fe3:	jmp    0x300135e5
30025fe8:	mov    esi,0x30006ce8
30025fed:	push   esi
30025fee:	call   0x300042e4
30025ff3:	pop    ecx
30025ff4:	push   eax
30025ff5:	push   esi
30025ff6:	lea    ecx,[ebp-0x8]
30025ff9:	call   0x3000416f
30025ffe:	jmp    0x3001353a
30026003:	mov    esi,0x30026128
30026008:	push   esi
30026009:	call   0x300042e4
3002600e:	pop    ecx
3002600f:	push   eax
30026010:	push   esi
30026011:	lea    ecx,[ebp-0xc]
30026014:	call   0x3000416f
30026019:	jmp    0x3001356a
3002601e:	push   DWORD PTR [ebp-0x10]
30026021:	mov    ecx,0x30026138
30026026:	jmp    0x3002604e
30026028:	push   DWORD PTR [ebp-0x18]
3002602b:	mov    ecx,0x30026168
30026030:	jmp    0x3002604e
30026032:	push   DWORD PTR [ebp-0x14]
30026035:	mov    ecx,0x30026190
3002603a:	jmp    0x3002604e
3002603c:	push   DWORD PTR [ebp-0xc]
3002603f:	mov    ecx,0x300261d0
30026044:	jmp    0x3002604e
30026046:	push   DWORD PTR [ebp-0x8]
30026049:	mov    ecx,0x300261fc
3002604e:	mov    edx,esi
30026050:	call   0x30033b68
30026055:	jmp    0x300135e5
3002605a:	nop
3002605b:	nop
3002605c:	inc    esi
3002605d:	add    BYTE PTR [ecx+0x0],ah
30026060:	imul   eax,DWORD PTR [eax],0x65006c
30026066:	add    BYTE PTR fs:[eax],ah
30026069:	add    BYTE PTR [eax+eax*1+0x6f],dh
3002606d:	add    BYTE PTR [eax],ah
3002606f:	add    BYTE PTR [edx+0x0],dh
30026072:	add    BYTE PTR gs:[ecx+0x0],ah
30026076:	add    BYTE PTR fs:[eax],ah
30026079:	add    BYTE PTR [esi+0x0],cl
3002607c:	popa   
3002607d:	add    BYTE PTR [ebp+0x0],ch
30026080:	add    BYTE PTR gs:[eax],al
30026083:	add    BYTE PTR [eax+0x46909090],dl
30026089:	add    BYTE PTR [ecx+0x0],ah
3002608c:	imul   eax,DWORD PTR [eax],0x65006c
30026092:	add    BYTE PTR fs:[eax],ah
30026095:	add    BYTE PTR [eax+eax*1+0x6f],dh
30026099:	add    BYTE PTR [eax],ah
3002609b:	add    BYTE PTR [edx+0x0],dh
3002609e:	add    BYTE PTR gs:[ecx+0x0],ah
300260a2:	add    BYTE PTR fs:[eax],ah
300260a5:	add    BYTE PTR [eax+0x0],dl
300260a8:	jne    0x300260aa
300260aa:	bound  eax,QWORD PTR [eax]
300260ac:	ins    BYTE PTR es:[edi],dx
300260ad:	add    BYTE PTR [ecx+0x0],ch
300260b0:	arpl   WORD PTR [eax],ax
300260b2:	and    BYTE PTR [eax],al
300260b4:	dec    ebx
300260b5:	add    BYTE PTR [ebp+0x0],ah
300260b8:	jns    0x300260ba
300260ba:	and    BYTE PTR [eax],al
300260bc:	push   esp
300260bd:	add    BYTE PTR [edi+0x0],ch
300260c0:	imul   eax,DWORD PTR [eax],0x65
300260c3:	add    BYTE PTR [esi+0x0],ch
300260c6:	add    BYTE PTR [eax],al
300260c8:	inc    esi
300260c9:	add    BYTE PTR [ecx+0x0],ah
300260cc:	imul   eax,DWORD PTR [eax],0x65006c
300260d2:	add    BYTE PTR fs:[eax],ah
300260d5:	add    BYTE PTR [eax+eax*1+0x6f],dh
300260d9:	add    BYTE PTR [eax],ah
300260db:	add    BYTE PTR [edx+0x0],dh
300260de:	add    BYTE PTR gs:[ecx+0x0],ah
300260e2:	add    BYTE PTR fs:[eax],ah
300260e5:	add    BYTE PTR [esi+0x0],dl
300260e8:	add    BYTE PTR gs:[edx+0x0],dh
300260ec:	jae    0x300260ee
300260ee:	imul   eax,DWORD PTR [eax],0x6e006f
300260f4:	add    BYTE PTR [eax],al
300260f6:	nop
300260f7:	nop
300260f8:	inc    esi
300260f9:	add    BYTE PTR [ecx+0x0],ah
300260fc:	imul   eax,DWORD PTR [eax],0x65006c
30026102:	add    BYTE PTR fs:[eax],ah
30026105:	add    BYTE PTR [eax+eax*1+0x6f],dh
30026109:	add    BYTE PTR [eax],ah
3002610b:	add    BYTE PTR [edx+0x0],dh
3002610e:	add    BYTE PTR gs:[ecx+0x0],ah
30026112:	add    BYTE PTR fs:[eax],ah
30026115:	add    BYTE PTR [ebx+0x0],al
30026118:	outs   dx,DWORD PTR ds:[esi]
30026119:	add    BYTE PTR [eax+eax*1+0x65],ah
3002611d:	add    BYTE PTR [edx+0x0],al
30026120:	popa   
30026121:	add    BYTE PTR [ebx+0x0],dh
30026124:	add    BYTE PTR gs:[eax],al
30026127:	add    BYTE PTR [esi+0x0],ch
3002612a:	add    BYTE PTR gs:[ebp+0x0],dh
3002612e:	je     0x30026130
30026130:	jb     0x30026132
30026132:	popa   
30026133:	add    BYTE PTR [eax+eax*1+0x0],ch
30026137:	add    BYTE PTR [esi+0x0],al
3002613a:	popa   
3002613b:	add    BYTE PTR [ecx+0x0],ch
3002613e:	ins    BYTE PTR es:[edi],dx
3002613f:	add    BYTE PTR [ebp+0x0],ah
30026142:	add    BYTE PTR fs:[eax],ah
30026145:	add    BYTE PTR [eax+eax*1+0x6f],dh
30026149:	add    BYTE PTR [eax],ah
3002614b:	add    BYTE PTR [eax+0x0],dh
3002614e:	popa   
3002614f:	add    BYTE PTR [edx+0x0],dh
30026152:	jae    0x30026154
30026154:	add    BYTE PTR gs:[eax],ah
30026157:	add    BYTE PTR [esi+0x0],dl
3002615a:	add    BYTE PTR gs:[edx+0x0],dh
3002615e:	jae    0x30026160
30026160:	imul   eax,DWORD PTR [eax],0x6e006f
30026166:	add    BYTE PTR [eax],al
30026168:	inc    esi
30026169:	add    BYTE PTR [ecx+0x0],ah
3002616c:	imul   eax,DWORD PTR [eax],0x65006c
30026172:	add    BYTE PTR fs:[eax],ah
30026175:	add    BYTE PTR [eax+eax*1+0x6f],dh
30026179:	add    BYTE PTR [eax],ah
3002617b:	add    BYTE PTR [ebx+0x0],dh
3002617e:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
30026183:	add    BYTE PTR [esi+0x0],cl
30026186:	popa   
30026187:	add    BYTE PTR [ebp+0x0],ch
3002618a:	add    BYTE PTR gs:[eax],al
3002618d:	add    BYTE PTR [eax+0x61004690],dl
30026193:	add    BYTE PTR [ecx+0x0],ch
30026196:	ins    BYTE PTR es:[edi],dx
30026197:	add    BYTE PTR [ebp+0x0],ah
3002619a:	add    BYTE PTR fs:[eax],ah
3002619d:	add    BYTE PTR [eax+eax*1+0x6f],dh
300261a1:	add    BYTE PTR [eax],ah
300261a3:	add    BYTE PTR [ebx+0x0],dh
300261a6:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
300261ab:	add    BYTE PTR [eax+0x0],dl
300261ae:	jne    0x300261b0
300261b0:	bound  eax,QWORD PTR [eax]
300261b2:	ins    BYTE PTR es:[edi],dx
300261b3:	add    BYTE PTR [ecx+0x0],ch
300261b6:	arpl   WORD PTR [eax],ax
300261b8:	and    BYTE PTR [eax],al
300261ba:	dec    ebx
300261bb:	add    BYTE PTR [ebp+0x0],ah
300261be:	jns    0x300261c0
300261c0:	and    BYTE PTR [eax],al
300261c2:	push   esp
300261c3:	add    BYTE PTR [edi+0x0],ch
300261c6:	imul   eax,DWORD PTR [eax],0x65
300261c9:	add    BYTE PTR [esi+0x0],ch
300261cc:	add    BYTE PTR [eax],al
300261ce:	nop
300261cf:	nop
300261d0:	inc    esi
300261d1:	add    BYTE PTR [ecx+0x0],ah
300261d4:	imul   eax,DWORD PTR [eax],0x65006c
300261da:	add    BYTE PTR fs:[eax],ah
300261dd:	add    BYTE PTR [eax+eax*1+0x6f],dh
300261e1:	add    BYTE PTR [eax],ah
300261e3:	add    BYTE PTR [ebx+0x0],dh
300261e6:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
300261eb:	add    BYTE PTR [ebx+0x0],al
300261ee:	jne    0x300261f0
300261f0:	ins    BYTE PTR es:[edi],dx
300261f1:	add    BYTE PTR [eax+eax*1+0x75],dh
300261f5:	add    BYTE PTR [edx+0x0],dh
300261f8:	add    BYTE PTR gs:[eax],al
300261fb:	add    BYTE PTR [esi+0x0],al
300261fe:	popa   
300261ff:	add    BYTE PTR [ecx+0x0],ch
30026202:	ins    BYTE PTR es:[edi],dx
30026203:	add    BYTE PTR [ebp+0x0],ah
30026206:	add    BYTE PTR fs:[eax],ah
30026209:	add    BYTE PTR [eax+eax*1+0x6f],dh
3002620d:	add    BYTE PTR [eax],ah
3002620f:	add    BYTE PTR [ebx+0x0],dh
30026212:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
30026217:	add    BYTE PTR [ebx+0x0],al
3002621a:	outs   dx,DWORD PTR ds:[esi]
3002621b:	add    BYTE PTR [eax+eax*1+0x65],ah
3002621f:	add    BYTE PTR [edx+0x0],al
30026222:	popa   
30026223:	add    BYTE PTR [ebx+0x0],dh
30026226:	add    BYTE PTR gs:[eax],al
30026229:	add    BYTE PTR [ebx-0x2b5016ff],dh
3002622f:	(bad)  
30026230:	push   DWORD PTR [edx]
30026232:	fucomi st,st(1)
30026234:	mov    al,ds:0xb8fffed4
30026239:	add    eax,DWORD PTR [eax+0x0]
3002623c:	sub    cl,0xb3
3002623f:	(bad)  
30026241:	dec    DWORD PTR [ebx+0x51ff5008]
30026247:	or     cl,ch
30026249:	sub    dl,bl
3002624b:	(bad)  
3002624c:	dec    DWORD PTR [ebx-0x7cc9743a]
30026252:	ror    BYTE PTR [eax],0x50
30026255:	lea    ecx,[ebp-0x3c]
30026258:	call   0x30035abc
3002625d:	push   ecx
3002625e:	push   DWORD PTR [edi+0x4]
30026261:	lea    eax,[ebp-0x3c]
30026264:	push   eax
30026265:	mov    ecx,edi
30026267:	call   0x30035c4d
3002626c:	mov    ecx,DWORD PTR [edi+0x4]
3002626f:	test   ecx,ecx
30026271:	je     0x30026277
30026273:	mov    DWORD PTR [ecx],eax
30026275:	jmp    0x30026279
30026277:	mov    DWORD PTR [edi],eax
30026279:	lea    ecx,[ebp-0x3c]
3002627c:	mov    DWORD PTR [edi+0x4],eax
3002627f:	call   0x30012777
30026284:	jmp    0x30013cea
30026289:	lea    eax,[ebp+0x8]
3002628c:	push   eax
3002628d:	call   0x30008fa7
30026292:	push   eax
30026293:	lea    ecx,[ebp-0x4c]
30026296:	call   0x30035abc
3002629b:	lea    eax,[ebp-0x4c]
3002629e:	push   eax
3002629f:	mov    ecx,edi
300262a1:	call   0x300371ec
300262a6:	lea    ecx,[ebp-0x4c]
300262a9:	mov    esi,eax
300262ab:	call   0x30012777
300262b0:	test   esi,esi
300262b2:	js     0x300124dc
300262b8:	cmp    DWORD PTR [ebp+0x8],ebx
300262bb:	je     0x3001275a
300262c1:	jmp    0x30026289
300262c3:	lea    ecx,[ebp-0x8]
300262c6:	call   0x300051a4
300262cb:	lea    ecx,[ebp-0xc]
300262ce:	call   0x300051a4
300262d3:	jmp    0x300123f6
300262d8:	and    DWORD PTR [ebx],0x0
300262db:	jmp    0x30012d2b
300262e0:	and    DWORD PTR [ebx],0x0
300262e3:	jmp    0x30012da2
300262e8:	mov    eax,0x80004003
300262ed:	pop    edi
300262ee:	ret    
300262ef:	xor    al,al
300262f1:	jmp    0x3001c6c1
300262f6:	push   edi
300262f7:	push   0x0
300262f9:	jmp    0x300262fd
300262fb:	push   edi
300262fc:	push   esi
300262fd:	call   ebx
300262ff:	push   eax
30026300:	call   DWORD PTR ds:0x300451c4
30026306:	xor    al,al
30026308:	jmp    0x3001c6bf
3002630d:	push   esi
3002630e:	call   0x3001502d
30026313:	push   DWORD PTR [edi+0x4]
30026316:	call   DWORD PTR ds:0x300451d0
3002631c:	jmp    0x3001c523
30026321:	call   DWORD PTR ds:0x30045160
30026327:	mov    esi,eax
30026329:	test   esi,esi
3002632b:	jle    0x3001c5bb
30026331:	movzx  esi,si
30026334:	or     esi,0x80070000
3002633a:	jmp    0x3001c5bb
3002633f:	call   DWORD PTR ds:0x30045160
30026345:	mov    esi,eax
30026347:	test   esi,esi
30026349:	jle    0x3001c5b3
3002634f:	movzx  esi,si
30026352:	or     esi,0x80070000
30026358:	jmp    0x3001c5b3
3002635d:	mov    esi,DWORD PTR ds:0x30045160
30026363:	call   esi
30026365:	mov    edi,0x80070000
3002636a:	test   eax,eax
3002636c:	jle    0x30026373
3002636e:	movzx  eax,ax
30026371:	or     eax,edi
30026373:	push   DWORD PTR [ebp-0x4]
30026376:	mov    edx,eax
30026378:	mov    ecx,0x30026398
3002637d:	call   0x30033b68
30026382:	call   esi
30026384:	mov    esi,eax
30026386:	test   esi,esi
30026388:	jle    0x3001c5b3
3002638e:	movzx  esi,si
30026391:	or     esi,edi
30026393:	jmp    0x3001c5b3
30026398:	inc    esi
30026399:	add    BYTE PTR [ecx+0x0],ah
3002639c:	imul   eax,DWORD PTR [eax],0x65006c
300263a2:	add    BYTE PTR fs:[eax],ah
300263a5:	add    BYTE PTR [eax+eax*1+0x6f],dh
300263a9:	add    BYTE PTR [eax],ah
300263ab:	add    BYTE PTR [ebx+0x0],ah
300263ae:	jb     0x300263b0
300263b0:	add    BYTE PTR gs:[ecx+0x0],ah
300263b4:	je     0x300263b6
300263b6:	add    BYTE PTR gs:[edi],ch
300263b9:	add    BYTE PTR [edi+0x0],ch
300263bc:	bound  eax,QWORD PTR [eax]
300263be:	je     0x300263c0
300263c0:	popa   
300263c1:	add    BYTE PTR [ecx+0x0],ch
300263c4:	outs   dx,BYTE PTR ds:[esi]
300263c5:	add    BYTE PTR [eax],ah
300263c7:	add    BYTE PTR [eax+0x0],dl
300263ca:	imul   eax,DWORD PTR [eax],0x67
300263cd:	add    BYTE PTR [eax+eax*1+0x65],al
300263d1:	add    BYTE PTR [esi+0x0],ah
300263d4:	and    BYTE PTR [eax],al
300263d6:	push   ebx
300263d7:	add    BYTE PTR [ebp+0x0],ah
300263da:	ins    DWORD PTR es:[edi],dx
300263db:	add    BYTE PTR [ecx+0x0],ah
300263de:	jo     0x300263e0
300263e0:	push   0x72006f00
300263e5:	add    BYTE PTR [ebp+0x0],ah
300263e8:	add    BYTE PTR [eax],al
300263ea:	cmp    eax,0x102
300263ef:	je     0x30026428
300263f1:	cmp    eax,0xffffffff
300263f4:	je     0x30026400
300263f6:	mov    eax,0x80004005
300263fb:	jmp    0x30015067
30026400:	mov    edi,DWORD PTR ds:0x30045160
30026406:	call   edi
30026408:	mov    esi,0x80070000
3002640d:	test   eax,eax
3002640f:	jle    0x30026416
30026411:	movzx  eax,ax
30026414:	or     eax,esi
30026416:	cmp    BYTE PTR ds:0x300430f1,0x0
3002641d:	je     0x30026460
3002641f:	push   0x0
30026421:	push   0x30026478
30026426:	jmp    0x30026456
30026428:	xor    eax,eax
3002642a:	inc    eax
3002642b:	jmp    0x30015067
30026430:	mov    edi,DWORD PTR ds:0x30045160
30026436:	call   edi
30026438:	mov    esi,0x80070000
3002643d:	test   eax,eax
3002643f:	jle    0x30026446
30026441:	movzx  eax,ax
30026444:	or     eax,esi
30026446:	cmp    BYTE PTR ds:0x300430f1,0x0
3002644d:	je     0x30026460
3002644f:	push   0x0
30026451:	push   0x300264c8
30026456:	xor    ecx,ecx
30026458:	mov    edx,eax
3002645a:	inc    ecx
3002645b:	call   0x30033ac0
30026460:	call   edi
30026462:	test   eax,eax
30026464:	jle    0x30015067
3002646a:	movzx  eax,ax
3002646d:	or     eax,esi
3002646f:	jmp    0x30015067
30026474:	nop
30026475:	nop
30026476:	nop
30026477:	nop
30026478:	inc    esi
30026479:	add    BYTE PTR [ecx+0x0],ah
3002647c:	imul   eax,DWORD PTR [eax],0x65006c
30026482:	add    BYTE PTR fs:[eax],ah
30026485:	add    BYTE PTR [eax+eax*1+0x6f],dh
30026489:	add    BYTE PTR [eax],ah
3002648b:	add    BYTE PTR [ecx+0x0],ch
3002648e:	outs   dx,BYTE PTR ds:[esi]
3002648f:	add    BYTE PTR [ebx+0x0],ah
30026492:	jb     0x30026494
30026494:	add    BYTE PTR gs:[ebp+0x0],ch
30026498:	add    BYTE PTR gs:[esi+0x0],ch
3002649c:	je     0x3002649e
3002649e:	and    BYTE PTR [eax],al
300264a0:	push   eax
300264a1:	add    BYTE PTR [ebx+0x0],ch
300264a4:	add    BYTE PTR [si+0x0],al
300264a8:	add    BYTE PTR gs:[esi+0x0],ah
300264ac:	and    BYTE PTR [eax],al
300264ae:	push   ebx
300264af:	add    BYTE PTR [ebp+0x0],ah
300264b2:	ins    DWORD PTR es:[edi],dx
300264b3:	add    BYTE PTR [ecx+0x0],ah
300264b6:	jo     0x300264b8
300264b8:	push   0x72006f00
300264bd:	add    BYTE PTR [ebp+0x0],ah
300264c0:	add    BYTE PTR [eax],al
300264c2:	nop
300264c3:	nop
300264c4:	nop
300264c5:	nop
300264c6:	nop
300264c7:	nop
300264c8:	inc    esi
300264c9:	add    BYTE PTR [ecx+0x0],ah
300264cc:	imul   eax,DWORD PTR [eax],0x65006c
300264d2:	add    BYTE PTR fs:[eax],ah
300264d5:	add    BYTE PTR [eax+eax*1+0x6f],dh
300264d9:	add    BYTE PTR [eax],ah
300264db:	add    BYTE PTR [eax+eax*1+0x65],ah
300264df:	add    BYTE PTR [ebx+0x0],ah
300264e2:	jb     0x300264e4
300264e4:	add    BYTE PTR gs:[ebp+0x0],ch
300264e8:	add    BYTE PTR gs:[esi+0x0],ch
300264ec:	je     0x300264ee
300264ee:	and    BYTE PTR [eax],al
300264f0:	push   eax
300264f1:	add    BYTE PTR [ebx+0x0],ch
300264f4:	add    BYTE PTR [si+0x0],al
300264f8:	add    BYTE PTR gs:[esi+0x0],ah
300264fc:	and    BYTE PTR [eax],al
300264fe:	push   ebx
300264ff:	add    BYTE PTR [ebp+0x0],ah
30026502:	ins    DWORD PTR es:[edi],dx
30026503:	add    BYTE PTR [ecx+0x0],ah
30026506:	jo     0x30026508
30026508:	push   0x72006f00
3002650d:	add    BYTE PTR [ebp+0x0],ah
30026510:	add    BYTE PTR [eax],al
30026512:	push   DWORD PTR [esi+0x4]
30026515:	call   0x3000eb81
3002651a:	and    DWORD PTR [esi+0x4],0x0
3002651e:	pop    ecx
3002651f:	jmp    0x30016b44
30026524:	cmp    BYTE PTR ds:0x300430f1,0x0
3002652b:	je     0x30026540
3002652d:	call   0x30033b12
30026532:	mov    edx,DWORD PTR [eax]
30026534:	push   0x300265e0
30026539:	push   0x2
3002653b:	mov    ecx,eax
3002653d:	call   DWORD PTR [edx+0x8]
30026540:	xor    eax,eax
30026542:	jmp    0x3001c40d
30026547:	cmp    BYTE PTR ds:0x300430f1,0x0
3002654e:	mov    esi,0x80070057
30026553:	je     0x3001c409
30026559:	call   0x30033b12
3002655e:	mov    edx,DWORD PTR [eax]
30026560:	push   esi
30026561:	push   0x30026630
30026566:	push   0x1
30026568:	mov    ecx,eax
3002656a:	call   DWORD PTR [edx+0x4]
3002656d:	jmp    0x3001c409
30026572:	call   0x30037558
30026577:	mov    esi,eax
30026579:	test   esi,esi
3002657b:	js     0x300265a1
3002657d:	push   DWORD PTR [ebx]
3002657f:	call   0x30010df9
30026584:	test   eax,eax
30026586:	jne    0x3002658f
30026588:	mov    esi,0x80070003
3002658d:	jmp    0x300265a1
3002658f:	lea    eax,[ebp+0x8]
30026592:	push   eax
30026593:	mov    ecx,edi
30026595:	call   0x300375d4
3002659a:	mov    esi,eax
3002659c:	jmp    0x3001c3f9
300265a1:	push   DWORD PTR [ebp+0x8]
300265a4:	call   DWORD PTR ds:0x30045638
300265aa:	test   eax,eax
300265ac:	je     0x300265c6
300265ae:	cmp    DWORD PTR [edi+0x4],0x0
300265b2:	je     0x300265bd
300265b4:	push   DWORD PTR [edi+0x4]
300265b7:	call   0x3000eb81
300265bc:	pop    ecx
300265bd:	push   DWORD PTR [ebp+0x8]
300265c0:	call   DWORD PTR ds:0x30045208
300265c6:	push   DWORD PTR [ebp+0x8]
300265c9:	mov    edx,esi
300265cb:	mov    ecx,0x30026680
300265d0:	call   0x30033b68
300265d5:	jmp    0x3001c401
300265da:	nop
300265db:	nop
300265dc:	nop
300265dd:	nop
300265de:	nop
300265df:	nop
300265e0:	push   ebx
300265e1:	add    BYTE PTR [ebp+0x0],ah
300265e4:	arpl   WORD PTR [eax],ax
300265e6:	outs   dx,DWORD PTR ds:[esi]
300265e7:	add    BYTE PTR [esi+0x0],ch
300265ea:	add    BYTE PTR fs:[eax],ah
300265ed:	add    BYTE PTR [eax+eax*1+0x6f],ch
300265f1:	add    BYTE PTR [ebx+0x0],ah
300265f4:	imul   eax,DWORD PTR [eax],0x20
300265f7:	add    BYTE PTR [edx+0x0],dh
300265fa:	add    BYTE PTR gs:[ecx+0x0],dh
300265fe:	jne    0x30026600
30026600:	add    BYTE PTR gs:[ebx+0x0],dh
30026604:	je     0x30026606
30026606:	and    BYTE PTR [eax],al
30026608:	data16 add BYTE PTR [edi+0x0],ch
3002660c:	jb     0x3002660e
3002660e:	and    BYTE PTR [eax],al
30026610:	push   eax
30026611:	add    BYTE PTR [ebx+0x0],ch
30026614:	add    BYTE PTR [si+0x0],al
30026618:	add    BYTE PTR gs:[esi+0x0],ah
3002661c:	and    BYTE PTR [eax],al
3002661e:	ins    DWORD PTR es:[edi],dx
3002661f:	add    BYTE PTR [ebp+0x0],dh
30026622:	je     0x30026624
30026624:	add    BYTE PTR gs:[eax+0x0],bh
30026628:	add    BYTE PTR [eax],al
3002662a:	nop
3002662b:	nop
3002662c:	nop
3002662d:	nop
3002662e:	nop
3002662f:	nop
30026630:	push   esp
30026631:	add    BYTE PTR [eax+0x0],ch
30026634:	add    BYTE PTR gs:[eax],ah
30026637:	add    BYTE PTR [eax+0x0],dl
3002663a:	imul   eax,DWORD PTR [eax],0x67
3002663d:	add    BYTE PTR [eax+eax*1+0x65],al
30026641:	add    BYTE PTR [esi+0x0],ah
30026644:	and    BYTE PTR [eax],al
30026646:	ins    BYTE PTR es:[edi],dx
30026647:	add    BYTE PTR [edi+0x0],ch
3002664a:	arpl   WORD PTR [eax],ax
3002664c:	imul   eax,DWORD PTR [eax],0x20
3002664f:	add    BYTE PTR [esi+0x0],ah
30026652:	imul   eax,DWORD PTR [eax],0x65006c
30026658:	and    BYTE PTR [eax],al
3002665a:	jo     0x3002665c
3002665c:	popa   
3002665d:	add    BYTE PTR [eax+eax*1+0x68],dh
30026661:	add    BYTE PTR [eax],ah
30026663:	add    BYTE PTR [ecx+0x0],ch
30026666:	jae    0x30026668
30026668:	and    BYTE PTR [eax],al
3002666a:	ins    DWORD PTR es:[edi],dx
3002666b:	add    BYTE PTR [ecx+0x0],ch
3002666e:	jae    0x30026670
30026670:	jae    0x30026672
30026672:	imul   eax,DWORD PTR [eax],0x67006e
30026678:	add    BYTE PTR [eax],al
3002667a:	nop
3002667b:	nop
3002667c:	nop
3002667d:	nop
3002667e:	nop
3002667f:	nop
30026680:	inc    esi
30026681:	add    BYTE PTR [ecx+0x0],ah
30026684:	imul   eax,DWORD PTR [eax],0x65006c
3002668a:	add    BYTE PTR fs:[eax],ah
3002668d:	add    BYTE PTR [eax+eax*1+0x6f],dh
30026691:	add    BYTE PTR [eax],ah
30026693:	add    BYTE PTR [ebx+0x0],ah
30026696:	jb     0x30026698
30026698:	add    BYTE PTR gs:[ecx+0x0],ah
3002669c:	je     0x3002669e
3002669e:	add    BYTE PTR gs:[eax],ah
300266a1:	add    BYTE PTR [edi+0x0],ch
300266a4:	jb     0x300266a6
300266a6:	and    BYTE PTR [eax],al
300266a8:	outs   dx,DWORD PTR ds:[esi]
300266a9:	add    BYTE PTR [edx+0x0],ah
300266ac:	je     0x300266ae
300266ae:	popa   
300266af:	add    BYTE PTR [ecx+0x0],ch
300266b2:	outs   dx,BYTE PTR ds:[esi]
300266b3:	add    BYTE PTR [eax],ah
300266b5:	add    BYTE PTR [eax+0x0],dl
300266b8:	imul   eax,DWORD PTR [eax],0x67
300266bb:	add    BYTE PTR [eax+eax*1+0x65],al
300266bf:	add    BYTE PTR [esi+0x0],ah
300266c2:	and    BYTE PTR [eax],al
300266c4:	arpl   WORD PTR [eax],ax
300266c6:	popa   
300266c7:	add    BYTE PTR [ebx+0x0],ah
300266ca:	push   0x20006500
300266cf:	add    BYTE PTR [eax+eax*1+0x6f],ch
300266d3:	add    BYTE PTR [ebx+0x0],ah
300266d6:	imul   eax,DWORD PTR [eax],0x0
300266d9:	add    BYTE PTR [edi-0x7ff8fff3],bh
300266df:	jmp    0x3001c38a
300266e4:	push   DWORD PTR [esi+0x4]
300266e7:	call   DWORD PTR ds:0x3004538c
300266ed:	mov    edi,eax
300266ef:	pop    ecx
300266f0:	test   edi,edi
300266f2:	jne    0x30026703
300266f4:	push   0xd
300266f6:	pop    edi
300266f7:	jmp    0x30026701
300266f9:	call   DWORD PTR ds:0x30045160
300266ff:	mov    edi,eax
30026701:	test   edi,edi
30026703:	jle    0x3001c38a
30026709:	movzx  edi,di
3002670c:	or     edi,0x80070000
30026712:	jmp    0x3001c38a
30026717:	mov    eax,0x80004003
3002671c:	leave  
3002671d:	ret    
3002671e:	mov    eax,0x80004003
30026723:	jmp    0x30012294
30026728:	mov    eax,0x80004003
3002672d:	jmp    0x30012293
30026732:	mov    eax,0x80070057
30026737:	jmp    0x30012293
3002673c:	mov    eax,0x80004003
30026741:	jmp    0x30013254
30026746:	push   0x80004005
3002674b:	call   0x3002ae0b
30026750:	int3   
30026751:	mov    eax,0x80070006
30026756:	jmp    0x3000b700
3002675b:	mov    eax,DWORD PTR [ebp-0x8]
3002675e:	cmp    DWORD PTR [eax-0xc],ebx
30026761:	je     0x3000aa1a
30026767:	push   0x2
30026769:	or     ecx,0x2
3002676c:	push   ebx
3002676d:	lea    eax,[ebp-0x18]
30026770:	mov    DWORD PTR [ebp-0xc],ecx
30026773:	push   eax
30026774:	lea    ecx,[ebp-0x8]
30026777:	call   0x30008d6e
3002677c:	push   0x30009ccc
30026781:	mov    ecx,eax
30026783:	call   0x300091ce
30026788:	test   eax,eax
3002678a:	je     0x3000aa1a
30026790:	mov    esi,DWORD PTR [ebp-0xc]
30026793:	push   0x1
30026795:	push   ebx
30026796:	lea    eax,[ebp-0x14]
30026799:	or     esi,0x4
3002679c:	push   eax
3002679d:	lea    ecx,[ebp-0x8]
300267a0:	mov    DWORD PTR [ebp-0xc],esi
300267a3:	call   0x30008d6e
300267a8:	push   0x30008e38
300267ad:	mov    ecx,eax
300267af:	call   0x300091ce
300267b4:	jmp    0x3000b6f3
300267b9:	and    eax,0xfffffffb
300267bc:	lea    ecx,[ebp-0x14]
300267bf:	mov    DWORD PTR [ebp-0xc],eax
300267c2:	call   0x300051a4
300267c7:	mov    eax,DWORD PTR [ebp-0xc]
300267ca:	jmp    0x3000aa25
300267cf:	lea    ecx,[ebp-0x18]
300267d2:	call   0x300051a4
300267d7:	jmp    0x3000aa2d
300267dc:	mov    eax,0x80070026
300267e1:	jmp    0x3000b700
300267e6:	cmp    esi,0x80070026
300267ec:	jne    0x30026805
300267ee:	mov    eax,DWORD PTR [ebp-0xc]
300267f1:	xor    ebx,ebx
300267f3:	cmp    DWORD PTR [eax-0xc],ebx
300267f6:	je     0x30026805
300267f8:	lea    ecx,[ebp-0xc]
300267fb:	call   0x300051a4
30026800:	jmp    0x30009b45
30026805:	lea    ecx,[ebp-0xc]
30026808:	call   0x300051a4
3002680d:	jmp    0x3000b707
30026812:	push   0x80070057
30026817:	call   0x3002ae0b
3002681c:	int3   
3002681d:	push   0x6
3002681f:	lea    eax,[ebp+0x8]
30026822:	push   eax
30026823:	call   0x30008de3
30026828:	push   0x3002a9b0
3002682d:	mov    ecx,eax
3002682f:	call   0x300091ce
30026834:	mov    ebx,eax
30026836:	neg    ebx
30026838:	lea    ecx,[ebp+0x8]
3002683b:	sbb    bl,bl
3002683d:	call   0x300051a4
30026842:	inc    bl
30026844:	je     0x300268b0
30026846:	mov    eax,DWORD PTR [esi]
30026848:	mov    ecx,esi
3002684a:	mov    eax,DWORD PTR [eax-0xc]
3002684d:	sub    eax,0x6
30026850:	push   eax
30026851:	push   0x6
30026853:	lea    eax,[ebp+0x8]
30026856:	push   eax
30026857:	call   0x30008d6e
3002685c:	lea    ecx,[ebp+0x8]
3002685f:	call   0x30008e3c
30026864:	push   eax
30026865:	lea    ecx,[ebp-0x4]
30026868:	call   0x300014c1
3002686d:	lea    ecx,[ebp+0x8]
30026870:	call   0x300051a4
30026875:	push   0x8
30026877:	jmp    0x3000a7d6
3002687c:	push   DWORD PTR [esi]
3002687e:	push   0x30026918
30026883:	jmp    0x300268b7
30026885:	cmp    ebx,0x8
30026888:	je     0x30026894
3002688a:	push   DWORD PTR [ebp-0x4]
3002688d:	push   0x30026980
30026892:	jmp    0x300268b7
30026894:	push   DWORD PTR [ebp+0x14]
30026897:	mov    eax,DWORD PTR [ebp+0xc]
3002689a:	push   0x1
3002689c:	push   DWORD PTR [ebp-0x4]
3002689f:	mov    DWORD PTR [eax],0x5
300268a5:	call   DWORD PTR ds:0x30045604
300268ab:	jmp    0x3000a827
300268b0:	push   DWORD PTR [esi]
300268b2:	push   0x300268d0
300268b7:	mov    eax,DWORD PTR [edi]
300268b9:	mov    esi,0x80004005
300268be:	push   esi
300268bf:	mov    ecx,edi
300268c1:	call   DWORD PTR [eax+0x18]
300268c4:	jmp    0x3000a839
300268c9:	nop
300268ca:	nop
300268cb:	nop
300268cc:	nop
300268cd:	nop
300268ce:	nop
300268cf:	nop
300268d0:	push   esi
300268d1:	add    BYTE PTR [ecx+0x0],ah
300268d4:	ins    BYTE PTR es:[edi],dx
300268d5:	add    BYTE PTR [ebp+0x0],dh
300268d8:	add    BYTE PTR gs:[edx],bh
300268db:	add    BYTE PTR [eax],ah
300268dd:	add    BYTE PTR [ebp+0x0],dh
300268e0:	outs   dx,BYTE PTR ds:[esi]
300268e1:	add    BYTE PTR [edx+0x0],dh
300268e4:	add    BYTE PTR gs:[ebx+0x0],ah
300268e8:	outs   dx,DWORD PTR ds:[esi]
300268e9:	add    BYTE PTR [edi+0x0],ah
300268ec:	outs   dx,BYTE PTR ds:[esi]
300268ed:	add    BYTE PTR [ecx+0x0],ch
300268f0:	jp     0x300268f2
300268f2:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
300268f7:	add    BYTE PTR [esi+0x0],ch
300268fa:	jne    0x300268fc
300268fc:	ins    DWORD PTR es:[edi],dx
300268fd:	add    BYTE PTR [ebp+0x0],ah
30026900:	jb     0x30026902
30026902:	imul   eax,DWORD PTR [eax],0x200063
30026908:	jo     0x3002690a
3002690a:	jb     0x3002690c
3002690c:	add    BYTE PTR gs:[esi+0x0],ah
30026910:	imul   eax,DWORD PTR [eax],0x78
30026916:	nop
30026917:	nop
30026918:	push   esi
30026919:	add    BYTE PTR [ecx+0x0],ah
3002691c:	ins    BYTE PTR es:[edi],dx
3002691d:	add    BYTE PTR [ebp+0x0],dh
30026920:	add    BYTE PTR gs:[edx],bh
30026923:	add    BYTE PTR [eax],ah
30026925:	add    BYTE PTR [eax+eax*1+0x6f],dh
30026929:	add    BYTE PTR [edi+0x0],ch
3002692c:	and    BYTE PTR [eax],al
3002692e:	ins    DWORD PTR es:[edi],dx
3002692f:	add    BYTE PTR [ecx+0x0],ah
30026932:	outs   dx,BYTE PTR ds:[esi]
30026933:	add    BYTE PTR [ecx+0x0],bh
30026936:	and    BYTE PTR [eax],al
30026938:	arpl   WORD PTR [eax],ax
3002693a:	push   0x72006100
3002693f:	add    BYTE PTR [ecx+0x0],ah
30026942:	arpl   WORD PTR [eax],ax
30026944:	je     0x30026946
30026946:	add    BYTE PTR gs:[edx+0x0],dh
3002694a:	jae    0x3002694c
3002694c:	das    
3002694d:	add    BYTE PTR [eax+eax*1+0x69],ah
30026951:	add    BYTE PTR [edi+0x0],ah
30026954:	imul   eax,DWORD PTR [eax],0x730074
3002695a:	and    BYTE PTR [eax],al
3002695c:	data16 add BYTE PTR [edi+0x0],ch
30026960:	jb     0x30026962
30026962:	and    BYTE PTR [eax],al
30026964:	outs   dx,BYTE PTR ds:[esi]
30026965:	add    BYTE PTR [ebp+0x0],dh
30026968:	ins    DWORD PTR es:[edi],dx
30026969:	add    BYTE PTR [ebp+0x0],ah
3002696c:	jb     0x3002696e
3002696e:	imul   eax,DWORD PTR [eax],0x200063
30026974:	jae    0x30026976
30026976:	imul   eax,DWORD PTR [eax],0x65007a
3002697c:	add    BYTE PTR [eax],al
3002697e:	nop
3002697f:	nop
30026980:	push   esi
30026981:	add    BYTE PTR [ecx+0x0],ah
30026984:	ins    BYTE PTR es:[edi],dx
30026985:	add    BYTE PTR [ebp+0x0],dh
30026988:	add    BYTE PTR gs:[edx],bh
3002698b:	add    BYTE PTR [eax],ah
3002698d:	add    BYTE PTR [ebp+0x0],dh
30026990:	outs   dx,BYTE PTR ds:[esi]
30026991:	add    BYTE PTR [ebx+0x0],dh
30026994:	jne    0x30026996
30026996:	jo     0x30026998
30026998:	jo     0x3002699a
3002699a:	outs   dx,DWORD PTR ds:[esi]
3002699b:	add    BYTE PTR [edx+0x0],dh
3002699e:	je     0x300269a0
300269a0:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
300269a5:	add    BYTE PTR [edx+0x0],ah
300269a8:	jns    0x300269aa
300269aa:	je     0x300269ac
300269ac:	add    BYTE PTR gs:[eax],ah
300269af:	add    BYTE PTR [ebx+0x0],dh
300269b2:	imul   eax,DWORD PTR [eax],0x65007a
300269b8:	and    BYTE PTR [eax],al
300269ba:	sub    BYTE PTR [eax],al
300269bc:	add    BYTE PTR gs:[eax+0x0],bh
300269c0:	jo     0x300269c2
300269c2:	add    BYTE PTR gs:[ebx+0x0],ah
300269c6:	je     0x300269c8
300269c8:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
300269cd:	add    BYTE PTR [eax+eax*1],dh
300269d0:	and    BYTE PTR [eax],al
300269d2:	outs   dx,DWORD PTR ds:[esi]
300269d3:	add    BYTE PTR [edx+0x0],dh
300269d6:	and    BYTE PTR [eax],al
300269d8:	cmp    BYTE PTR [eax],al
300269da:	sub    DWORD PTR [eax],eax
300269dc:	add    BYTE PTR [eax],al
300269de:	lea    eax,[ecx-0x41]
300269e1:	cmp    ax,si
300269e4:	ja     0x300269ee
300269e6:	sub    cl,0x37
300269e9:	jmp    0x3000b32a
300269ee:	xor    al,al
300269f0:	pop    esi
300269f1:	ret    
300269f2:	push   DWORD PTR [esi]
300269f4:	mov    edx,DWORD PTR [edi]
300269f6:	push   0x30026a30
300269fb:	mov    esi,0x80004005
30026a00:	push   esi
30026a01:	mov    ecx,edi
30026a03:	call   DWORD PTR [edx+0x18]
30026a06:	mov    eax,esi
30026a08:	jmp    0x3000a346
30026a0d:	push   DWORD PTR [esi]
30026a0f:	mov    eax,DWORD PTR [edi]
30026a11:	push   0x30026a80
30026a16:	mov    esi,0x80004005
30026a1b:	push   esi
30026a1c:	mov    ecx,edi
30026a1e:	call   DWORD PTR [eax+0x18]
30026a21:	lea    ecx,[ebp+0x8]
30026a24:	call   0x300051a4
30026a29:	jmp    0x30026a06
30026a2b:	nop
30026a2c:	nop
30026a2d:	nop
30026a2e:	nop
30026a2f:	nop
30026a30:	push   ebx
30026a31:	add    BYTE PTR [ebp+0x0],ah
30026a34:	arpl   WORD PTR [eax],ax
30026a36:	je     0x30026a38
30026a38:	imul   eax,DWORD PTR [eax],0x6e006f
30026a3e:	and    BYTE PTR [eax],al
30026a40:	push   0x61006500
30026a45:	add    BYTE PTR [eax+eax*1+0x65],ah
30026a49:	add    BYTE PTR [edx+0x0],dh
30026a4c:	cmp    al,BYTE PTR [eax]
30026a4e:	and    BYTE PTR [eax],al
30026a50:	ins    DWORD PTR es:[edi],dx
30026a51:	add    BYTE PTR [ecx+0x0],ch
30026a54:	jae    0x30026a56
30026a56:	jae    0x30026a58
30026a58:	imul   eax,DWORD PTR [eax],0x67006e
30026a5e:	and    BYTE PTR [eax],al
30026a60:	arpl   WORD PTR [eax],ax
30026a62:	ins    BYTE PTR es:[edi],dx
30026a63:	add    BYTE PTR [edi+0x0],ch
30026a66:	jae    0x30026a68
30026a68:	imul   eax,DWORD PTR [eax],0x67006e
30026a6e:	and    BYTE PTR [eax],al
30026a70:	bound  eax,QWORD PTR [eax]
30026a72:	jb     0x30026a74
30026a74:	popa   
30026a75:	add    BYTE PTR [ebx+0x0],ah
30026a78:	imul   eax,DWORD PTR [eax],0x65
30026a7b:	add    BYTE PTR [eax+eax*1+0x0],dh
30026a7f:	add    BYTE PTR [ebx+0x0],dl
30026a82:	add    BYTE PTR gs:[ebx+0x0],ah
30026a86:	je     0x30026a88
30026a88:	imul   eax,DWORD PTR [eax],0x6e006f
30026a8e:	and    BYTE PTR [eax],al
30026a90:	push   0x61006500
30026a95:	add    BYTE PTR [eax+eax*1+0x65],ah
30026a99:	add    BYTE PTR [edx+0x0],dh
30026a9c:	cmp    al,BYTE PTR [eax]
30026a9e:	and    BYTE PTR [eax],al
30026aa0:	popa   
30026aa1:	add    BYTE PTR [eax+eax*1+0x64],ah
30026aa5:	add    BYTE PTR [ecx+0x0],ch
30026aa8:	je     0x30026aaa
30026aaa:	imul   eax,DWORD PTR [eax],0x6e006f
30026ab0:	popa   
30026ab1:	add    BYTE PTR [eax+eax*1+0x20],ch
30026ab5:	add    BYTE PTR [ebx+0x0],ah
30026ab8:	push   0x72006100
30026abd:	add    BYTE PTR [ecx+0x0],ah
30026ac0:	arpl   WORD PTR [eax],ax
30026ac2:	je     0x30026ac4
30026ac4:	add    BYTE PTR gs:[edx+0x0],dh
30026ac8:	jae    0x30026aca
30026aca:	and    BYTE PTR [eax],al
30026acc:	popa   
30026acd:	add    BYTE PTR [esi+0x0],ah
30026ad0:	je     0x30026ad2
30026ad2:	add    BYTE PTR gs:[edx+0x0],dh
30026ad6:	and    BYTE PTR [eax],al
30026ad8:	arpl   WORD PTR [eax],ax
30026ada:	ins    BYTE PTR es:[edi],dx
30026adb:	add    BYTE PTR [edi+0x0],ch
30026ade:	jae    0x30026ae0
30026ae0:	imul   eax,DWORD PTR [eax],0x67006e
30026ae6:	and    BYTE PTR [eax],al
30026ae8:	bound  eax,QWORD PTR [eax]
30026aea:	jb     0x30026aec
30026aec:	popa   
30026aed:	add    BYTE PTR [ebx+0x0],ah
30026af0:	imul   eax,DWORD PTR [eax],0x65
30026af3:	add    BYTE PTR [eax+eax*1+0x0],dh
30026af7:	add    BYTE PTR [ecx+0x68],dl
30026afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
30026afb:	ins    BYTE PTR es:[edi],dx
30026afc:	add    dh,BYTE PTR [eax]
30026afe:	mov    eax,DWORD PTR [esi]
30026b00:	mov    ecx,DWORD PTR [ebp-0x4]
30026b03:	mov    esi,0x80004005
30026b08:	push   esi
30026b09:	call   DWORD PTR [eax+0x18]
30026b0c:	mov    eax,esi
30026b0e:	jmp    0x30009e3f
30026b13:	push   DWORD PTR [ebx]
30026b15:	push   0x30026cd4
30026b1a:	jmp    0x30026afe
30026b1c:	mov    eax,DWORD PTR [esi]
30026b1e:	mov    esi,DWORD PTR [ebp+0x8]
30026b21:	push   DWORD PTR [esi]
30026b23:	push   0x30026d0c
30026b28:	jmp    0x30026c85
30026b2d:	lea    ebx,[edi+0xc]
30026b30:	mov    DWORD PTR [edi+0x8],0x1
30026b37:	mov    eax,DWORD PTR [ebx]
30026b39:	mov    ecx,ebx
30026b3b:	mov    eax,DWORD PTR [eax-0xc]
30026b3e:	sub    eax,0x2
30026b41:	push   eax
30026b42:	push   0x2
30026b44:	lea    eax,[ebp+0x8]
30026b47:	push   eax
30026b48:	call   0x30008d6e
30026b4d:	lea    eax,[ebp+0x8]
30026b50:	push   eax
30026b51:	mov    ecx,ebx
30026b53:	call   0x300014c1
30026b58:	lea    ecx,[ebp+0x8]
30026b5b:	call   0x300051a4
30026b60:	push   0x30008fc4
30026b65:	push   0x3002a9c0
30026b6a:	mov    ecx,ebx
30026b6c:	call   0x300043f1
30026b71:	mov    ecx,ebx
30026b73:	call   0x30009cfc
30026b78:	jmp    0x30009e3c
30026b7d:	mov    DWORD PTR [edi+0x8],0x1
30026b84:	jmp    0x3000b559
30026b89:	mov    DWORD PTR [edi+0x8],0x5
30026b90:	jmp    0x3000b556
30026b95:	mov    eax,DWORD PTR [esi]
30026b97:	mov    esi,DWORD PTR [ebp+0x8]
30026b9a:	mov    ecx,DWORD PTR [ebp-0x4]
30026b9d:	push   DWORD PTR [esi]
30026b9f:	push   0x30026da0
30026ba4:	jmp    0x30026bc9
30026ba6:	mov    ecx,DWORD PTR [ebp-0x4]
30026ba9:	push   DWORD PTR [ebp+0xc]
30026bac:	mov    eax,DWORD PTR [ecx]
30026bae:	push   0x30026e60
30026bb3:	jmp    0x30026bce
30026bb5:	cmp    ecx,0x8
30026bb8:	je     0x30026bd4
30026bba:	mov    esi,DWORD PTR [ebp+0x8]
30026bbd:	mov    ecx,DWORD PTR [ebp-0x4]
30026bc0:	push   DWORD PTR [esi]
30026bc2:	mov    eax,DWORD PTR [ecx]
30026bc4:	push   0x30026ea8
30026bc9:	mov    esi,0x80004005
30026bce:	push   esi
30026bcf:	call   DWORD PTR [eax+0x18]
30026bd2:	jmp    0x30026c04
30026bd4:	push   0x8
30026bd6:	push   DWORD PTR [edi+0x10]
30026bd9:	lea    eax,[edi+0x20]
30026bdc:	push   0x8
30026bde:	push   eax
30026bdf:	call   0x3000ba07
30026be4:	add    esp,0x10
30026be7:	jmp    0x3000b5ca
30026bec:	mov    esi,DWORD PTR [ebp+0x8]
30026bef:	mov    ecx,DWORD PTR [ebp-0x4]
30026bf2:	push   DWORD PTR [esi]
30026bf4:	mov    edx,DWORD PTR [ecx]
30026bf6:	push   0x30026f18
30026bfb:	mov    esi,0x80004005
30026c00:	push   esi
30026c01:	call   DWORD PTR [edx+0x18]
30026c04:	lea    ecx,[ebp+0xc]
30026c07:	call   0x300051a4
30026c0c:	jmp    0x30026c91
30026c11:	push   DWORD PTR [edi+0x10]
30026c14:	call   0x300042e4
30026c19:	pop    ecx
30026c1a:	push   eax
30026c1b:	push   DWORD PTR [edi+0x10]
30026c1e:	mov    ecx,ebx
30026c20:	call   0x3000416f
30026c25:	mov    eax,DWORD PTR [edi+0x14]
30026c28:	shr    eax,1
30026c2a:	dec    eax
30026c2b:	push   eax
30026c2c:	jmp    0x3000bba8
30026c31:	mov    eax,DWORD PTR [esi]
30026c33:	mov    esi,DWORD PTR [ebp+0x8]
30026c36:	push   DWORD PTR [esi]
30026c38:	push   0x30026d50
30026c3d:	jmp    0x30026c85
30026c3f:	push   0xc
30026c41:	pop    eax
30026c42:	mov    DWORD PTR [ebp+0xc],eax
30026c45:	push   0x6
30026c47:	lea    eax,[ebp-0x14]
30026c4a:	push   eax
30026c4b:	mov    ecx,ebx
30026c4d:	call   0x30008de3
30026c52:	push   0x3002a9b0
30026c57:	mov    ecx,eax
30026c59:	call   0x300091ce
30026c5e:	jmp    0x3000bad2
30026c63:	and    eax,0xfffffff7
30026c66:	lea    ecx,[ebp-0x14]
30026c69:	mov    DWORD PTR [ebp+0xc],eax
30026c6c:	call   0x300051a4
30026c71:	mov    eax,DWORD PTR [ebp+0xc]
30026c74:	jmp    0x30009edd
30026c79:	mov    eax,DWORD PTR [esi]
30026c7b:	mov    esi,DWORD PTR [ebp+0x8]
30026c7e:	push   DWORD PTR [esi]
30026c80:	push   0x30026f90
30026c85:	mov    ecx,DWORD PTR [ebp-0x4]
30026c88:	mov    esi,0x80004005
30026c8d:	push   esi
30026c8e:	call   DWORD PTR [eax+0x18]
30026c91:	mov    eax,esi
30026c93:	jmp    0x30009e3e
30026c98:	push   0x80070057
30026c9d:	call   0x3002ae0b
30026ca2:	int3   
30026ca3:	nop
30026ca4:	dec    esi
30026ca5:	add    BYTE PTR [ecx+0x0],ah
30026ca8:	ins    DWORD PTR es:[edi],dx
30026ca9:	add    BYTE PTR [ebp+0x0],ah
30026cac:	and    BYTE PTR [eax],al
30026cae:	jbe    0x30026cb0
30026cb0:	popa   
30026cb1:	add    BYTE PTR [eax+eax*1+0x75],ch
30026cb5:	add    BYTE PTR [ebp+0x0],ah
30026cb8:	cmp    al,BYTE PTR [eax]
30026cba:	and    BYTE PTR [eax],al
30026cbc:	add    BYTE PTR gs:[ebp+0x0],ch
30026cc0:	jo     0x30026cc2
30026cc2:	je     0x30026cc4
30026cc4:	jns    0x30026cc6
30026cc6:	and    BYTE PTR [eax],al
30026cc8:	ins    BYTE PTR es:[edi],dx
30026cc9:	add    BYTE PTR [ecx+0x0],ch
30026ccc:	outs   dx,BYTE PTR ds:[esi]
30026ccd:	add    BYTE PTR [ebp+0x0],ah
30026cd0:	add    BYTE PTR [eax],al
30026cd2:	nop
30026cd3:	nop
30026cd4:	dec    esi
30026cd5:	add    BYTE PTR [ecx+0x0],ah
30026cd8:	ins    DWORD PTR es:[edi],dx
30026cd9:	add    BYTE PTR [ebp+0x0],ah
30026cdc:	and    BYTE PTR [eax],al
30026cde:	jbe    0x30026ce0
30026ce0:	popa   
30026ce1:	add    BYTE PTR [eax+eax*1+0x75],ch
30026ce5:	add    BYTE PTR [ebp+0x0],ah
30026ce8:	cmp    al,BYTE PTR [eax]
30026cea:	and    BYTE PTR [eax],al
30026cec:	outs   dx,BYTE PTR ds:[esi]
30026ced:	add    BYTE PTR [edi+0x0],ch
30026cf0:	and    BYTE PTR [eax],al
30026cf2:	add    BYTE PTR gs:[ecx+0x0],dh
30026cf6:	jne    0x30026cf8
30026cf8:	popa   
30026cf9:	add    BYTE PTR [eax+eax*1+0x73],ch
30026cfd:	add    BYTE PTR [eax],ah
30026cff:	add    BYTE PTR [ebx+0x0],dh
30026d02:	imul   eax,DWORD PTR [eax],0x6e0067
30026d08:	add    BYTE PTR [eax],al
30026d0a:	nop
30026d0b:	nop
30026d0c:	dec    esi
30026d0d:	add    BYTE PTR [ecx+0x0],ah
30026d10:	ins    DWORD PTR es:[edi],dx
30026d11:	add    BYTE PTR [ebp+0x0],ah
30026d14:	and    BYTE PTR [eax],al
30026d16:	outs   dx,BYTE PTR ds:[esi]
30026d17:	add    BYTE PTR [edi+0x0],ch
30026d1a:	je     0x30026d1c
30026d1c:	and    BYTE PTR [eax],al
30026d1e:	imul   eax,DWORD PTR [eax],0x20006e
30026d24:	jno    0x30026d26
30026d26:	jne    0x30026d28
30026d28:	outs   dx,DWORD PTR ds:[esi]
30026d29:	add    BYTE PTR [eax+eax*1+0x65],dh
30026d2d:	add    BYTE PTR [ebx+0x0],dh
30026d30:	and    BYTE PTR [eax],al
30026d32:	popa   
30026d33:	add    BYTE PTR [esi+0x0],ch
30026d36:	add    BYTE PTR fs:[eax],ah
30026d39:	add    BYTE PTR [esi+0x0],ch
30026d3c:	outs   dx,DWORD PTR ds:[esi]
30026d3d:	add    BYTE PTR [eax+eax*1+0x20],dh
30026d41:	add    BYTE PTR [edi],ah
30026d43:	add    BYTE PTR [eax+0x0],al
30026d46:	daa    
30026d47:	add    BYTE PTR [eax],al
30026d49:	add    BYTE PTR [eax-0x6f6f6f70],dl
30026d4f:	nop
30026d50:	push   esi
30026d51:	add    BYTE PTR [ecx+0x0],ah
30026d54:	ins    BYTE PTR es:[edi],dx
30026d55:	add    BYTE PTR [ebp+0x0],dh
30026d58:	add    BYTE PTR gs:[edx],bh
30026d5b:	add    BYTE PTR [eax],ah
30026d5d:	add    BYTE PTR [ebp+0x0],dh
30026d60:	outs   dx,BYTE PTR ds:[esi]
30026d61:	add    BYTE PTR [edx+0x0],dh
30026d64:	add    BYTE PTR gs:[ebx+0x0],ah
30026d68:	outs   dx,DWORD PTR ds:[esi]
30026d69:	add    BYTE PTR [edi+0x0],ah
30026d6c:	outs   dx,BYTE PTR ds:[esi]
30026d6d:	add    BYTE PTR [ecx+0x0],ch
30026d70:	jp     0x30026d72
30026d72:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30026d77:	add    BYTE PTR [eax+0x0],dh
30026d7a:	jb     0x30026d7c
30026d7c:	add    BYTE PTR gs:[esi+0x0],ah
30026d80:	imul   eax,DWORD PTR [eax],0x200078
30026d86:	popa   
30026d87:	add    BYTE PTR [esi+0x0],ah
30026d8a:	je     0x30026d8c
30026d8c:	add    BYTE PTR gs:[edx+0x0],dh
30026d90:	and    BYTE PTR [eax],al
30026d92:	daa    
30026d93:	add    BYTE PTR [eax+0x0],ch
30026d96:	add    BYTE PTR gs:[eax+0x0],bh
30026d9a:	daa    
30026d9b:	add    BYTE PTR [eax],al
30026d9d:	add    BYTE PTR [eax+0x61005690],dl
30026da3:	add    BYTE PTR [eax+eax*1+0x75],ch
30026da7:	add    BYTE PTR [ebp+0x0],ah
30026daa:	cmp    al,BYTE PTR [eax]
30026dac:	and    BYTE PTR [eax],al
30026dae:	imul   eax,DWORD PTR [eax],0x74006e
30026db4:	add    BYTE PTR gs:[edx+0x0],dh
30026db8:	outs   dx,BYTE PTR ds:[esi]
30026db9:	add    BYTE PTR [ecx+0x0],ah
30026dbc:	ins    BYTE PTR es:[edi],dx
30026dbd:	add    BYTE PTR [eax],ah
30026dbf:	add    BYTE PTR [ebp+0x0],ah
30026dc2:	jb     0x30026dc4
30026dc4:	jb     0x30026dc6
30026dc6:	outs   dx,DWORD PTR ds:[esi]
30026dc7:	add    BYTE PTR [edx+0x0],dh
30026dca:	and    BYTE PTR [eax],al
30026dcc:	sub    eax,0x42002000
30026dd1:	add    BYTE PTR [ecx+0x0],ch
30026dd4:	outs   dx,BYTE PTR ds:[esi]
30026dd5:	add    BYTE PTR [ecx+0x0],ah
30026dd8:	jb     0x30026dda
30026dda:	jns    0x30026ddc
30026ddc:	and    BYTE PTR [eax],al
30026dde:	add    BYTE PTR fs:[ecx+0x0],ah
30026de2:	je     0x30026de4
30026de4:	popa   
30026de5:	add    BYTE PTR [eax],ah
30026de7:	add    BYTE PTR [ebp+0x0],ah
30026dea:	outs   dx,BYTE PTR ds:[esi]
30026deb:	add    BYTE PTR [ebx+0x0],ah
30026dee:	outs   dx,DWORD PTR ds:[esi]
30026def:	add    BYTE PTR [ebp+0x0],dh
30026df2:	outs   dx,BYTE PTR ds:[esi]
30026df3:	add    BYTE PTR [eax+eax*1+0x65],dh
30026df7:	add    BYTE PTR [edx+0x0],dh
30026dfa:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30026dff:	add    BYTE PTR [edx+0x0],ah
30026e02:	jne    0x30026e04
30026e04:	je     0x30026e06
30026e06:	and    BYTE PTR [eax],al
30026e08:	outs   dx,BYTE PTR ds:[esi]
30026e09:	add    BYTE PTR [edi+0x0],ch
30026e0c:	and    BYTE PTR [eax],al
30026e0e:	bound  eax,QWORD PTR [eax]
30026e10:	jne    0x30026e12
30026e12:	data16 add BYTE PTR [esi+0x0],ah
30026e16:	add    BYTE PTR gs:[edx+0x0],dh
30026e1a:	and    BYTE PTR [eax],al
30026e1c:	push   0x73006100
30026e21:	add    BYTE PTR [eax],ah
30026e23:	add    BYTE PTR [edx+0x0],ah
30026e26:	add    BYTE PTR gs:[ebp+0x0],ah
30026e2a:	outs   dx,BYTE PTR ds:[esi]
30026e2b:	add    BYTE PTR [eax],ah
30026e2d:	add    BYTE PTR [ecx+0x0],ah
30026e30:	ins    BYTE PTR es:[edi],dx
30026e31:	add    BYTE PTR [eax+eax*1+0x6f],ch
30026e35:	add    BYTE PTR [ebx+0x0],ah
30026e38:	popa   
30026e39:	add    BYTE PTR [eax+eax*1+0x65],dh
30026e3d:	add    BYTE PTR [eax+eax*1+0x20],ah
30026e41:	add    BYTE PTR [edx+0x0],ah
30026e44:	jns    0x30026e46
30026e46:	and    BYTE PTR [eax],al
30026e48:	je     0x30026e4a
30026e4a:	push   0x20006500
30026e4f:	add    BYTE PTR [ebx+0x0],ah
30026e52:	popa   
30026e53:	add    BYTE PTR [eax+eax*1+0x6c],ch
30026e57:	add    BYTE PTR [ebp+0x0],ah
30026e5a:	jb     0x30026e5c
30026e5c:	add    BYTE PTR [eax],al
30026e5e:	nop
30026e5f:	nop
30026e60:	push   esi
30026e61:	add    BYTE PTR [ecx+0x0],ah
30026e64:	ins    BYTE PTR es:[edi],dx
30026e65:	add    BYTE PTR [ebp+0x0],dh
30026e68:	add    BYTE PTR gs:[edx],bh
30026e6b:	add    BYTE PTR [eax],ah
30026e6d:	add    BYTE PTR [ebx+0x0],ah
30026e70:	outs   dx,DWORD PTR ds:[esi]
30026e71:	add    BYTE PTR [ebp+0x0],dh
30026e74:	ins    BYTE PTR es:[edi],dx
30026e75:	add    BYTE PTR [eax+eax*1+0x20],ah
30026e79:	add    BYTE PTR [esi+0x0],ch
30026e7c:	outs   dx,DWORD PTR ds:[esi]
30026e7d:	add    BYTE PTR [eax+eax*1+0x20],dh
30026e81:	add    BYTE PTR [ebx+0x0],ah
30026e84:	outs   dx,DWORD PTR ds:[esi]
30026e85:	add    BYTE PTR [esi+0x0],ch
30026e88:	jbe    0x30026e8a
30026e8a:	add    BYTE PTR gs:[edx+0x0],dh
30026e8e:	je     0x30026e90
30026e90:	and    BYTE PTR [eax],al
30026e92:	push   0x78006500
30026e97:	add    BYTE PTR [eax],ah
30026e99:	add    BYTE PTR [esi+0x0],dh
30026e9c:	popa   
30026e9d:	add    BYTE PTR [eax+eax*1+0x75],ch
30026ea1:	add    BYTE PTR [ebp+0x0],ah
30026ea4:	add    BYTE PTR [eax],al
30026ea6:	nop
30026ea7:	nop
30026ea8:	push   esi
30026ea9:	add    BYTE PTR [ecx+0x0],ah
30026eac:	ins    BYTE PTR es:[edi],dx
30026ead:	add    BYTE PTR [ebp+0x0],dh
30026eb0:	add    BYTE PTR gs:[edx],bh
30026eb3:	add    BYTE PTR [eax],ah
30026eb5:	add    BYTE PTR [esi+0x0],dh
30026eb8:	popa   
30026eb9:	add    BYTE PTR [eax+eax*1+0x75],ch
30026ebd:	add    BYTE PTR [ebp+0x0],ah
30026ec0:	and    BYTE PTR [eax],al
30026ec2:	jae    0x30026ec4
30026ec4:	imul   eax,DWORD PTR [eax],0x65007a
30026eca:	and    BYTE PTR [eax],al
30026ecc:	ins    DWORD PTR es:[edi],dx
30026ecd:	add    BYTE PTR [ecx+0x0],ch
30026ed0:	jae    0x30026ed2
30026ed2:	sub    eax,0x61006d00
30026ed7:	add    BYTE PTR [eax+eax*1+0x63],dh
30026edb:	add    BYTE PTR [eax+0x0],ch
30026ede:	cmp    eax,DWORD PTR [eax]
30026ee0:	and    BYTE PTR [eax],al
30026ee2:	add    BYTE PTR gs:[eax+0x0],bh
30026ee6:	jo     0x30026ee8
30026ee8:	add    BYTE PTR gs:[ebx+0x0],ah
30026eec:	je     0x30026eee
30026eee:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30026ef3:	add    BYTE PTR [eax],bh
30026ef5:	add    BYTE PTR [eax],ah
30026ef7:	add    BYTE PTR [edx+0x0],ah
30026efa:	jns    0x30026efc
30026efc:	je     0x30026efe
30026efe:	add    BYTE PTR gs:[ebx+0x0],dh
30026f02:	and    BYTE PTR [eax],al
30026f04:	data16 add BYTE PTR [edi+0x0],ch
30026f08:	jb     0x30026f0a
30026f0a:	and    BYTE PTR [eax],al
30026f0c:	push   ecx
30026f0d:	add    BYTE PTR [edi+0x0],dl
30026f10:	dec    edi
30026f11:	add    BYTE PTR [edx+0x0],dl
30026f14:	inc    esp
30026f15:	add    BYTE PTR [eax],al
30026f17:	add    BYTE PTR [esi+0x0],dl
30026f1a:	popa   
30026f1b:	add    BYTE PTR [eax+eax*1+0x75],ch
30026f1f:	add    BYTE PTR [ebp+0x0],ah
30026f22:	cmp    al,BYTE PTR [eax]
30026f24:	and    BYTE PTR [eax],al
30026f26:	add    BYTE PTR gs:[eax+0x0],bh
30026f2a:	jo     0x30026f2c
30026f2c:	add    BYTE PTR gs:[ebx+0x0],ah
30026f30:	je     0x30026f32
30026f32:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30026f37:	add    BYTE PTR [eax+eax*1+0x77],dh
30026f3b:	add    BYTE PTR [edi+0x0],ch
30026f3e:	and    BYTE PTR [eax],al
30026f40:	dec    esi
30026f41:	add    BYTE PTR [ebp+0x0],dl
30026f44:	dec    esp
30026f45:	add    BYTE PTR [eax+eax*1+0x20],cl
30026f49:	add    BYTE PTR [esi+0x0],dh
30026f4c:	popa   
30026f4d:	add    BYTE PTR [eax+eax*1+0x75],ch
30026f51:	add    BYTE PTR [ebp+0x0],ah
30026f54:	jae    0x30026f56
30026f56:	and    BYTE PTR [eax],al
30026f58:	je     0x30026f5a
30026f5a:	outs   dx,DWORD PTR ds:[esi]
30026f5b:	add    BYTE PTR [eax],ah
30026f5d:	add    BYTE PTR [eax+eax*1+0x65],dh
30026f61:	add    BYTE PTR [edx+0x0],dh
30026f64:	ins    DWORD PTR es:[edi],dx
30026f65:	add    BYTE PTR [ecx+0x0],ch
30026f68:	outs   dx,BYTE PTR ds:[esi]
30026f69:	add    BYTE PTR [ecx+0x0],ah
30026f6c:	je     0x30026f6e
30026f6e:	add    BYTE PTR gs:[eax],ah
30026f71:	add    BYTE PTR [ebp+0x0],ch
30026f74:	jne    0x30026f76
30026f76:	ins    BYTE PTR es:[edi],dx
30026f77:	add    BYTE PTR [eax+eax*1+0x69],dh
30026f7b:	add    BYTE PTR ds:0x74007300,ch
30026f81:	add    BYTE PTR [edx+0x0],dh
30026f84:	imul   eax,DWORD PTR [eax],0x67006e
30026f8a:	add    BYTE PTR [eax],al
30026f8c:	nop
30026f8d:	nop
30026f8e:	nop
30026f8f:	nop
30026f90:	push   esi
30026f91:	add    BYTE PTR [ecx+0x0],ah
30026f94:	ins    BYTE PTR es:[edi],dx
30026f95:	add    BYTE PTR [ebp+0x0],dh
30026f98:	add    BYTE PTR gs:[edx],bh
30026f9b:	add    BYTE PTR [eax],ah
30026f9d:	add    BYTE PTR [ebp+0x0],dh
30026fa0:	outs   dx,BYTE PTR ds:[esi]
30026fa1:	add    BYTE PTR [edx+0x0],dh
30026fa4:	add    BYTE PTR gs:[ebx+0x0],ah
30026fa8:	outs   dx,DWORD PTR ds:[esi]
30026fa9:	add    BYTE PTR [edi+0x0],ah
30026fac:	outs   dx,BYTE PTR ds:[esi]
30026fad:	add    BYTE PTR [ecx+0x0],ch
30026fb0:	jp     0x30026fb2
30026fb2:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30026fb7:	add    BYTE PTR [eax+eax*1+0x61],ah
30026fbb:	add    BYTE PTR [eax+eax*1+0x61],dh
30026fbf:	add    BYTE PTR [eax],ah
30026fc1:	add    BYTE PTR [eax+eax*1+0x79],dh
30026fc5:	add    BYTE PTR [eax+0x0],dh
30026fc8:	add    BYTE PTR gs:[eax],ah
30026fcb:	add    BYTE PTR [ebx+0x0],dh
30026fce:	jo     0x30026fd0
30026fd0:	add    BYTE PTR gs:[ebx+0x0],ah
30026fd4:	imul   eax,DWORD PTR [eax],0x690066
30026fda:	add    BYTE PTR gs:[edx+0x0],dh
30026fde:	add    BYTE PTR [eax],al
30026fe0:	push   DWORD PTR [ebp+0x8]
30026fe3:	call   0x30037d91
30026fe8:	jmp    0x3000400a
30026fed:	push   0x30027018
30026ff2:	call   DWORD PTR ds:0x30045174
30026ff8:	push   0x30027034
30026ffd:	push   eax
30026ffe:	call   DWORD PTR ds:0x30045178
30027004:	test   eax,eax
30027006:	je     0x30017af4
3002700c:	push   0x1
3002700e:	call   eax
30027010:	jmp    0x30017af4
30027015:	nop
30027016:	nop
30027017:	nop
30027018:	dec    ebx
30027019:	add    BYTE PTR [ebp+0x0],al
3002701c:	push   edx
3002701d:	add    BYTE PTR [esi+0x0],cl
30027020:	inc    ebp
30027021:	add    BYTE PTR [eax+eax*1+0x33],cl
30027025:	add    BYTE PTR [edx],dh
30027027:	add    BYTE PTR [esi],ch
30027029:	add    BYTE PTR [eax+eax*1+0x4c],al
3002702d:	add    BYTE PTR [eax+eax*1+0x0],cl
30027031:	add    BYTE PTR [eax+0x74655390],dl
30027037:	push   eax
30027038:	jb     0x300270a9
3002703a:	arpl   WORD PTR [ebp+0x73],sp
3002703d:	jae    0x30027083
3002703f:	inc    ebp
30027040:	push   eax
30027041:	push   eax
30027042:	outs   dx,DWORD PTR ds:[esi]
30027043:	ins    BYTE PTR es:[edi],dx
30027044:	imul   esp,DWORD PTR [ebx+0x79],0x922e6800
3002704b:	add    BYTE PTR [eax],dh
3002704d:	call   DWORD PTR ds:0x30045400
30027053:	pop    ecx
30027054:	jmp    0x30019c92
30027059:	push   0xffffffff
3002705b:	call   DWORD PTR ds:0x300453fc
30027061:	pop    ecx
30027062:	jmp    0x30019ca4
30027067:	push   0x8
30027069:	call   0x300380e5
3002706e:	pop    ecx
3002706f:	jmp    0x30017b59
30027074:	cmp    eax,edx
30027076:	jne    0x30019634
3002707c:	xor    esi,esi
3002707e:	inc    esi
3002707f:	mov    edi,esi
30027081:	jmp    0x30019647
30027086:	push   0x1f
30027088:	call   0x300380e5
3002708d:	pop    ecx
3002708e:	jmp    0x3001967b
30027093:	mov    DWORD PTR [ebp-0x4],0xfffffffe
3002709a:	mov    eax,0xff
3002709f:	jmp    0x30027118
300270a1:	push   0x30044470
300270a6:	call   0x3003812e
300270ab:	pop    ecx
300270ac:	test   eax,eax
300270ae:	je     0x300196b8
300270b4:	push   0x0
300270b6:	push   0x2
300270b8:	push   0x0
300270ba:	call   DWORD PTR ds:0x30044470
300270c0:	jmp    0x300196b8
300270c5:	inc    esi
300270c6:	mov    DWORD PTR [ebp-0x1c],esi
300270c9:	jmp    0x300196ec
300270ce:	mov    ecx,DWORD PTR [ebp-0x14]
300270d1:	mov    eax,DWORD PTR [ecx]
300270d3:	mov    eax,DWORD PTR [eax]
300270d5:	mov    DWORD PTR [ebp-0x24],eax
300270d8:	push   ecx
300270d9:	push   eax
300270da:	call   0x300380df
300270df:	pop    ecx
300270e0:	pop    ecx
300270e1:	ret    
300270e2:	mov    esp,DWORD PTR [ebp-0x18]
300270e5:	mov    eax,DWORD PTR [ebp-0x24]
300270e8:	mov    ds:0x30043ba0,eax
300270ed:	cmp    DWORD PTR ds:0x30043b18,0x0
300270f4:	jne    0x300270fd
300270f6:	push   eax
300270f7:	call   DWORD PTR ds:0x300453f0
300270fd:	cmp    DWORD PTR ds:0x300445a8,0x0
30027104:	jne    0x30027111
30027106:	call   DWORD PTR ds:0x300453f4
3002710c:	mov    eax,ds:0x30043ba0
30027111:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30027118:	call   0x30008a99
3002711d:	ret    
3002711e:	push   esi
3002711f:	push   0x4
30027121:	push   0x20
30027123:	call   DWORD PTR ds:0x300452e4
30027129:	pop    ecx
3002712a:	pop    ecx
3002712b:	mov    esi,eax
3002712d:	push   esi
3002712e:	call   DWORD PTR ds:0x30045190
30027134:	mov    ds:0x3004446c,eax
30027139:	mov    ds:0x30044468,eax
3002713e:	test   esi,esi
30027140:	jne    0x30027147
30027142:	push   0x18
30027144:	pop    eax
30027145:	pop    esi
30027146:	ret    
30027147:	and    DWORD PTR [esi],0x0
3002714a:	xor    eax,eax
3002714c:	pop    esi
3002714d:	ret    
3002714e:	push   0x8
30027150:	call   0x3003825e
30027155:	pop    ecx
30027156:	and    DWORD PTR [ebp-0x4],0x0
3002715a:	push   DWORD PTR ds:0x3004446c
30027160:	call   esi
30027162:	mov    DWORD PTR [ebp-0x1c],eax
30027165:	push   DWORD PTR ds:0x30044468
3002716b:	call   esi
3002716d:	mov    DWORD PTR [ebp-0x20],eax
30027170:	lea    eax,[ebp-0x20]
30027173:	push   eax
30027174:	lea    eax,[ebp-0x1c]
30027177:	push   eax
30027178:	push   DWORD PTR [ebp+0x8]
3002717b:	mov    esi,DWORD PTR ds:0x30045190
30027181:	call   esi
30027183:	push   eax
30027184:	call   0x3003826a
30027189:	add    esp,0xc
3002718c:	mov    edi,eax
3002718e:	mov    DWORD PTR [ebp-0x24],edi
30027191:	push   DWORD PTR [ebp-0x1c]
30027194:	call   esi
30027196:	mov    ds:0x3004446c,eax
3002719b:	push   DWORD PTR [ebp-0x20]
3002719e:	call   esi
300271a0:	mov    ds:0x30044468,eax
300271a5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
300271ac:	call   0x300271bb
300271b1:	mov    eax,edi
300271b3:	jmp    0x300187fd
300271b8:	mov    edi,DWORD PTR [ebp-0x24]
300271bb:	push   0x8
300271bd:	call   0x30038264
300271c2:	pop    ecx
300271c3:	ret    
300271c4:	and    DWORD PTR [ebp-0x14],0x0
300271c8:	mov    eax,0x300271ce
300271cd:	ret    
300271ce:	mov    eax,DWORD PTR [ebp-0x14]
300271d1:	jmp    0x30006cdb
300271d6:	mov    edi,DWORD PTR [ebp+0x10]
300271d9:	mov    ebx,DWORD PTR [ebp+0xc]
300271dc:	mov    esi,DWORD PTR [ebp+0x8]
300271df:	mov    eax,DWORD PTR [ebp-0x1c]
300271e2:	jmp    0x3001713e
300271e7:	push   DWORD PTR [ebp+0x14]
300271ea:	push   edi
300271eb:	push   ebx
300271ec:	push   esi
300271ed:	call   0x30037e1a
300271f2:	jmp    0x30017146
300271f7:	test   esi,eax
300271f9:	je     0x3001add7
300271ff:	not    eax
30027201:	mov    ds:0x30043bd8,eax
30027206:	jmp    0x3001ae32
3002720b:	mov    ecx,0xbb40e64f
30027210:	jmp    0x3001ae24
30027215:	mov    eax,ecx
30027217:	or     eax,0x4711
3002721c:	shl    eax,0x10
3002721f:	or     ecx,eax
30027221:	jmp    0x3001ae24
30027226:	mov    eax,DWORD PTR [esi]
30027228:	test   eax,eax
3002722a:	je     0x3002722e
3002722c:	call   eax
3002722e:	add    esi,0x4
30027231:	jmp    0x30019cb7
30027236:	mov    eax,DWORD PTR [esi]
30027238:	test   eax,eax
3002723a:	je     0x3002723e
3002723c:	call   eax
3002723e:	add    esi,0x4
30027241:	jmp    0x30016c5d
30027246:	push   esi
30027247:	push   esi
30027248:	push   esi
30027249:	push   esi
3002724a:	push   esi
3002724b:	call   0x3003828e
30027250:	int3   
30027251:	mov    BYTE PTR ds:0x30044d14,0x1
30027258:	jmp    0x30019d26
3002725d:	push   DWORD PTR [esi]
3002725f:	call   0x3001694a
30027264:	and    DWORD PTR [esi],0x0
30027267:	pop    ecx
30027268:	jmp    0x300172da
3002726d:	mov    eax,0x80070216
30027272:	pop    ebp
30027273:	ret    
30027274:	cmp    DWORD PTR [ecx+0x4],0x0
30027278:	je     0x300172b5
3002727e:	push   DWORD PTR [ecx+0x4]
30027281:	call   DWORD PTR ds:0x300451b8
30027287:	jmp    0x300172b5
3002728c:	mov    eax,DWORD PTR [ecx]
3002728e:	push   DWORD PTR [ebp+0xc]
30027291:	call   DWORD PTR [eax]
30027293:	jmp    0x30008cfd
30027298:	mov    eax,DWORD PTR [ecx]
3002729a:	push   edx
3002729b:	call   DWORD PTR [eax+0x4]
3002729e:	xor    eax,eax
300272a0:	jmp    0x30008cfd
300272a5:	mov    BYTE PTR ds:0x30044d14,0x1
300272ac:	jmp    0x30019d9f
300272b1:	push   ebx
300272b2:	mov    eax,DWORD PTR [edi]
300272b4:	test   eax,eax
300272b6:	je     0x300272d1
300272b8:	mov    ebx,DWORD PTR [eax+0x10]
300272bb:	cmp    DWORD PTR [ebx],0x0
300272be:	je     0x300272d1
300272c0:	push   DWORD PTR [ebx]
300272c2:	call   DWORD PTR ds:0x30045194
300272c8:	mov    ecx,DWORD PTR [eax]
300272ca:	push   eax
300272cb:	call   DWORD PTR [ecx+0x8]
300272ce:	and    DWORD PTR [ebx],0x0
300272d1:	add    edi,0x4
300272d4:	cmp    edi,DWORD PTR [esi+0xc]
300272d7:	jb     0x300272b2
300272d9:	pop    ebx
300272da:	jmp    0x3001728e
300272df:	call   0x3003835d
300272e4:	jmp    0x30017dbc
300272e9:	mov    eax,0x80004005
300272ee:	pop    ebp
300272ef:	ret    0x4
300272f2:	call   0x3003835d
300272f7:	jmp    0x3000533c
300272fc:	xor    al,al
300272fe:	jmp    0x3001a075
30027303:	mov    al,BYTE PTR [ebp+0xc]
30027306:	jmp    0x3001a074
3002730b:	push   0xd
3002730d:	pop    eax
3002730e:	jmp    0x300198fd
30027313:	push   0x2
30027315:	pop    eax
30027316:	jmp    0x30019965
3002731b:	mov    eax,DWORD PTR [ebp+0x14]
3002731e:	jmp    0x30019a05
30027323:	mov    edi,0xfff80000
30027328:	jmp    0x3001106f
3002732d:	mov    edx,eax
3002732f:	mov    DWORD PTR ds:0x300436cc,edx
30027335:	jmp    0x30011081
3002733a:	test   edx,edx
3002733c:	je     0x30027351
3002733e:	mov    eax,DWORD PTR [edx+0x8]
30027341:	test   eax,eax
30027343:	je     0x30027351
30027345:	cmp    eax,esi
30027347:	jb     0x30027351
30027349:	cmp    eax,edi
3002734b:	jbe    0x30011090
30027351:	mov    edx,DWORD PTR [edx+0x4]
30027354:	test   edx,edx
30027356:	jmp    0x300110cb
3002735b:	lea    esi,[ecx-0x7fff0000]
30027361:	jmp    0x30011143
30027366:	mov    ecx,DWORD PTR [ebp+0x8]
30027369:	lea    esi,[ecx+ebx*1]
3002736c:	mov    ebx,DWORD PTR [ebp-0x4]
3002736f:	cmp    esi,ebx
30027371:	jae    0x300111c8
30027377:	lea    eax,[esi-0x50000000]
3002737d:	cmp    eax,0x30000000
30027382:	ja     0x3002738a
30027384:	lea    esi,[ecx-0x7fff0000]
3002738a:	push   0x7
3002738c:	pop    ecx
3002738d:	xor    eax,eax
3002738f:	lea    edi,[ebp-0x2c]
30027392:	rep stos DWORD PTR es:[edi],eax
30027394:	push   0x1c
30027396:	lea    eax,[ebp-0x2c]
30027399:	push   eax
3002739a:	push   esi
3002739b:	call   DWORD PTR ds:0x30045114
300273a1:	test   eax,eax
300273a3:	je     0x300111c8
300273a9:	mov    edi,0x10000
300273ae:	cmp    DWORD PTR [ebp-0x1c],edi
300273b1:	jne    0x300273f1
300273b3:	mov    ecx,DWORD PTR [ebp-0x20]
300273b6:	cmp    ecx,edi
300273b8:	jb     0x300273f4
300273ba:	movzx  edx,si
300273bd:	test   edx,edx
300273bf:	je     0x300273d2
300273c1:	mov    esi,DWORD PTR [ebp-0x2c]
300273c4:	mov    eax,edi
300273c6:	sub    eax,edx
300273c8:	sub    ecx,eax
300273ca:	add    esi,eax
300273cc:	mov    DWORD PTR [ebp-0x20],ecx
300273cf:	mov    DWORD PTR [ebp-0x2c],esi
300273d2:	push   0x40
300273d4:	push   0x3000
300273d9:	push   edi
300273da:	push   esi
300273db:	call   DWORD PTR ds:0x3004511c
300273e1:	mov    edx,eax
300273e3:	mov    DWORD PTR ds:0x300436cc,edx
300273e9:	test   edx,edx
300273eb:	jne    0x300111a2
300273f1:	mov    ecx,DWORD PTR [ebp-0x20]
300273f4:	mov    esi,DWORD PTR [ebp-0x2c]
300273f7:	add    esi,ecx
300273f9:	cmp    esi,ebx
300273fb:	jae    0x300111c8
30027401:	mov    ecx,DWORD PTR [ebp+0x8]
30027404:	jmp    0x30027377
30027409:	cmp    BYTE PTR [ecx+0x1],0x25
3002740d:	jne    0x3001013c
30027413:	jmp    0x30010166
30027418:	cmp    BYTE PTR [ecx+0x2],0x25
3002741c:	jne    0x30010154
30027422:	jmp    0x30010166
30027427:	xor    eax,eax
30027429:	jmp    0x30014fe1
3002742e:	and    DWORD PTR [eax],0x0
30027431:	jmp    0x30014fcb
30027436:	cmp    BYTE PTR [esi+0x1],0x25
3002743a:	jne    0x30014fd6
30027440:	mov    edi,DWORD PTR [esi+0x2]
30027443:	push   edi
30027444:	push   esi
30027445:	call   0x3003839e
3002744a:	test   al,al
3002744c:	je     0x30014fde
30027452:	mov    eax,DWORD PTR [edi]
30027454:	jmp    0x30014fe0
30027459:	movsx  eax,BYTE PTR [esi+0x1]
3002745d:	add    eax,0x2
30027460:	add    eax,esi
30027462:	cmp    BYTE PTR [eax],0xe9
30027465:	jne    0x30014fe0
3002746b:	add    eax,DWORD PTR [eax+0x1]
3002746e:	jmp    0x30014fe0
30027473:	mov    DWORD PTR [eax],edi
30027475:	jmp    0x30010182
3002747a:	mov    DWORD PTR [eax],edi
3002747c:	jmp    0x3001018d
30027481:	mov    DWORD PTR [eax],edi
30027483:	jmp    0x30010198
30027488:	mov    eax,0x10dd
3002748d:	jmp    0x3001030d
30027492:	push   0x6
30027494:	pop    eax
30027495:	jmp    0x3001030d
3002749a:	push   0x6
3002749c:	pop    esi
3002749d:	mov    DWORD PTR ds:0x30043694,esi
300274a3:	jmp    0x3002750b
300274a5:	cmp    DWORD PTR ds:0x3004368c,ebx
300274ab:	je     0x300274e3
300274ad:	jmp    0x30027508
300274af:	mov    DWORD PTR [eax],esi
300274b1:	jmp    0x30010200
300274b6:	mov    DWORD PTR [eax],edx
300274b8:	jmp    0x3001020b
300274bd:	push   0x8
300274bf:	pop    esi
300274c0:	jmp    0x300274e3
300274c2:	mov    DWORD PTR [eax],ebx
300274c4:	jmp    0x3001023b
300274c9:	cmp    DWORD PTR ds:0x3004368c,0x0
300274d0:	push   0x9
300274d2:	pop    esi
300274d3:	je     0x300274e3
300274d5:	jmp    0x300274e9
300274d7:	push   0x6
300274d9:	jmp    0x300274bf
300274db:	call   DWORD PTR ds:0x30045160
300274e1:	mov    esi,eax
300274e3:	mov    DWORD PTR ds:0x30043694,esi
300274e9:	test   ebx,ebx
300274eb:	je     0x300274fd
300274ed:	push   ebx
300274ee:	call   0x30017687
300274f3:	mov    eax,DWORD PTR [ebp+0x10]
300274f6:	test   eax,eax
300274f8:	je     0x300274fd
300274fa:	and    DWORD PTR [eax],0x0
300274fd:	test   edi,edi
300274ff:	je     0x30027508
30027501:	push   edi
30027502:	call   0x3000460f
30027507:	pop    ecx
30027508:	mov    eax,DWORD PTR [ebp+0x8]
3002750b:	mov    ds:0x30043698,eax
30027510:	mov    eax,esi
30027512:	jmp    0x3001030c
30027517:	mov    eax,0x10dd
3002751c:	jmp    0x30016def
30027521:	push   0x6
30027523:	pop    eax
30027524:	jmp    0x30016dee
30027529:	push   0x6
3002752b:	pop    eax
3002752c:	mov    ds:0x30043694,eax
30027531:	mov    DWORD PTR ds:0x30043698,edi
30027537:	jmp    0x30016dee
3002753c:	push   0x8
3002753e:	pop    ebx
3002753f:	jmp    0x30016d0c
30027544:	call   DWORD PTR ds:0x30045160
3002754a:	mov    ebx,eax
3002754c:	jmp    0x30016d0c
30027551:	mov    eax,0x10dd
30027556:	leave  
30027557:	ret    
30027558:	lea    eax,[ebp-0x4]
3002755b:	push   eax
3002755c:	mov    eax,DWORD PTR [edi+0x10]
3002755f:	push   DWORD PTR [edi+0x14]
30027562:	movzx  eax,BYTE PTR [eax+0x17]
30027566:	push   eax
30027567:	push   DWORD PTR [edi+0xc]
3002756a:	call   DWORD PTR ds:0x30045118
30027570:	cmp    DWORD PTR [edi+0x4],ebx
30027573:	jne    0x30027585
30027575:	cmp    DWORD PTR [edi+0x10],ebx
30027578:	je     0x30027585
3002757a:	push   DWORD PTR [edi+0x10]
3002757d:	call   0x30017687
30027582:	mov    DWORD PTR [edi+0x10],ebx
30027585:	mov    esi,DWORD PTR [edi]
30027587:	push   edi
30027588:	call   0x3000460f
3002758d:	pop    ecx
3002758e:	mov    edi,esi
30027590:	test   esi,esi
30027592:	je     0x30016ad5
30027598:	jmp    0x30027558
3002759a:	push   DWORD PTR [edi+0x4]
3002759d:	call   DWORD PTR ds:0x300451f4
300275a3:	mov    esi,DWORD PTR [edi]
300275a5:	push   edi
300275a6:	call   0x3000460f
300275ab:	pop    ecx
300275ac:	mov    edi,esi
300275ae:	test   esi,esi
300275b0:	je     0x30016aee
300275b6:	jmp    0x3002759a
300275b8:	mov    eax,0x10dd
300275bd:	leave  
300275be:	ret    
300275bf:	mov    eax,0x10dd
300275c4:	jmp    0x30014f89
300275c9:	mov    eax,ds:0x30043698
300275ce:	mov    DWORD PTR [ebx],eax
300275d0:	jmp    0x30015b28
300275d5:	mov    eax,0x10dd
300275da:	jmp    0x30015c35
300275df:	call   0x30016aac
300275e4:	jmp    0x30015c30
300275e9:	mov    eax,DWORD PTR [esi+0x8]
300275ec:	mov    DWORD PTR ds:0x30043694,0xd
300275f6:	mov    ds:0x30043698,eax
300275fb:	jmp    0x3001767f
30027600:	lea    eax,[ebp-0x2d0]
30027606:	push   eax
30027607:	push   DWORD PTR [edi+0x4]
3002760a:	mov    DWORD PTR [ebp-0x2d0],0x10001
30027614:	call   DWORD PTR ds:0x30045128
3002761a:	test   eax,eax
3002761c:	je     0x30027690
3002761e:	mov    esi,DWORD PTR ds:0x300436a0
30027624:	test   esi,esi
30027626:	je     0x30027690
30027628:	mov    ecx,DWORD PTR [ebp-0x218]
3002762e:	cmp    DWORD PTR [esi+0x4],0x0
30027632:	je     0x3002764f
30027634:	mov    edx,DWORD PTR [esi+0x10]
30027637:	cmp    ecx,edx
30027639:	jb     0x3002768a
3002763b:	lea    eax,[edx+0x4]
3002763e:	cmp    ecx,eax
30027640:	jae    0x3002768a
30027642:	sub    ecx,edx
30027644:	mov    DWORD PTR [ebp-0x218],ecx
3002764a:	add    ecx,DWORD PTR [esi+0xc]
3002764d:	jmp    0x3002766e
3002764f:	cmp    ecx,DWORD PTR [esi+0xc]
30027652:	jb     0x3002768a
30027654:	mov    eax,DWORD PTR [esi+0x10]
30027657:	movzx  eax,BYTE PTR [eax+0x17]
3002765b:	add    eax,DWORD PTR [esi+0xc]
3002765e:	cmp    ecx,eax
30027660:	jae    0x3002768a
30027662:	sub    ecx,DWORD PTR [esi+0xc]
30027665:	mov    DWORD PTR [ebp-0x218],ecx
3002766b:	add    ecx,DWORD PTR [esi+0x10]
3002766e:	lea    eax,[ebp-0x2d0]
30027674:	push   eax
30027675:	push   DWORD PTR [edi+0x4]
30027678:	mov    DWORD PTR [ebp-0x218],ecx
3002767e:	call   DWORD PTR ds:0x30045124
30027684:	mov    ecx,DWORD PTR [ebp-0x218]
3002768a:	mov    esi,DWORD PTR [esi]
3002768c:	test   esi,esi
3002768e:	jne    0x3002762e
30027690:	mov    edi,DWORD PTR [edi]
30027692:	jmp    0x30015b92
30027697:	push   DWORD PTR [edi+0x4]
3002769a:	call   DWORD PTR ds:0x300451f4
300276a0:	mov    esi,DWORD PTR [edi]
300276a2:	push   edi
300276a3:	call   0x3000460f
300276a8:	pop    ecx
300276a9:	mov    edi,esi
300276ab:	test   esi,esi
300276ad:	je     0x30015c18
300276b3:	jmp    0x30027697
300276b5:	mov    eax,ds:0x30043698
300276ba:	mov    DWORD PTR [ebx],eax
300276bc:	jmp    0x30015c30
300276c1:	push   esi
300276c2:	push   edi
300276c3:	push   0x8
300276c5:	pop    esi
300276c6:	push   esi
300276c7:	call   0x30003fee
300276cc:	mov    edi,eax
300276ce:	pop    ecx
300276cf:	test   edi,edi
300276d1:	je     0x300276ee
300276d3:	push   ebx
300276d4:	call   DWORD PTR ds:0x3004512c
300276da:	cmp    eax,0xffffffff
300276dd:	jne    0x300276ff
300276df:	call   DWORD PTR ds:0x30045160
300276e5:	push   edi
300276e6:	mov    esi,eax
300276e8:	call   0x3000460f
300276ed:	pop    ecx
300276ee:	and    DWORD PTR ds:0x30043698,0x0
300276f5:	mov    DWORD PTR ds:0x30043694,esi
300276fb:	mov    eax,esi
300276fd:	jmp    0x30027711
300276ff:	mov    eax,ds:0x3004369c
30027704:	mov    DWORD PTR [edi],eax
30027706:	mov    DWORD PTR [edi+0x4],ebx
30027709:	mov    DWORD PTR ds:0x3004369c,edi
3002770f:	xor    eax,eax
30027711:	pop    edi
30027712:	pop    esi
30027713:	jmp    0x30014fac
30027718:	cmp    DWORD PTR [ebx+0x4],0x0
3002771c:	jmp    0x300158c9
30027721:	shr    esi,0xc
30027724:	jmp    0x300158d2
30027729:	mov    eax,DWORD PTR [ebp+0x10]
3002772c:	mov    al,BYTE PTR [edx+eax*1+0x1]
30027730:	and    al,0x7
30027732:	cmp    al,0x5
30027734:	jne    0x3002774b
30027736:	mov    al,BYTE PTR [ebp-0x1]
30027739:	and    al,0xc0
3002773b:	je     0x30027748
3002773d:	cmp    al,0x40
3002773f:	jne    0x30027744
30027741:	inc    edi
30027742:	jmp    0x3002774b
30027744:	cmp    al,0x80
30027746:	jne    0x3002774b
30027748:	add    edi,0x4
3002774b:	mov    eax,edi
3002774d:	sub    eax,ecx
3002774f:	mov    DWORD PTR [ebp-0x8],eax
30027752:	jmp    0x30015913
30027757:	push   DWORD PTR [ebp-0x8]
3002775a:	mov    ecx,ebx
3002775c:	push   eax
3002775d:	push   esi
3002775e:	mov    esi,DWORD PTR [ebp+0x10]
30027761:	push   esi
30027762:	push   DWORD PTR [ebp+0xc]
30027765:	call   0x30038db5
3002776a:	mov    ecx,DWORD PTR [ebx+0xc]
3002776d:	mov    DWORD PTR [ecx],eax
3002776f:	jmp    0x30015930
30027774:	mov    eax,DWORD PTR [ebx+0x10]
30027777:	neg    DWORD PTR [eax]
30027779:	jmp    0x3001593f
3002777e:	mov    eax,DWORD PTR [ebx+0xc]
30027781:	or     DWORD PTR [eax],0xffffffff
30027784:	jmp    0x3001594b
30027789:	lea    eax,[ecx+0x14]
3002778c:	jmp    0x30015af2
30027791:	lea    edx,[esi+0x1c]
30027794:	jmp    0x30015a69
30027799:	push   0xd
3002779b:	call   DWORD PTR ds:0x30045110
300277a1:	xor    eax,eax
300277a3:	jmp    0x30015a86
300277a8:	mov    WORD PTR [eax],di
300277ab:	jmp    0x30010a8f
300277b0:	mov    eax,0x8000ffff
300277b5:	jmp    0x300046f8
300277ba:	mov    eax,0x8000ffff
300277bf:	jmp    0x300066f0
300277c4:	mov    eax,0x8000ffff
300277c9:	jmp    0x30006413
300277ce:	mov    eax,0x8000ffff
300277d3:	jmp    0x3000678f
300277d8:	mov    eax,0x8000ffff
300277dd:	jmp    0x30007285
300277e2:	mov    eax,0x8000ffff
300277e7:	jmp    0x30005398
300277ec:	ret    
300277ed:	xor    eax,eax
300277ef:	push   0x206
300277f4:	mov    WORD PTR [ebp-0x218],ax
300277fb:	lea    eax,[ebp-0x216]
30027801:	push   ebx
30027802:	push   eax
30027803:	call   0x300011b1
30027808:	add    esp,0xc
3002780b:	lea    eax,[ebp-0x218]
30027811:	push   0x104
30027816:	push   eax
30027817:	push   ebx
30027818:	call   esi
3002781a:	push   eax
3002781b:	call   DWORD PTR ds:0x300451f8
30027821:	cmp    WORD PTR [ebp-0x218],bx
30027828:	je     0x300278cc
3002782e:	lea    eax,[ebp-0x218]
30027834:	push   eax
30027835:	lea    eax,[ebp-0x230]
3002783b:	push   eax
3002783c:	call   0x300398a4
30027841:	mov    BYTE PTR [ebp-0x4],0x2
30027845:	lea    eax,[ebp-0x220]
3002784b:	push   eax
3002784c:	lea    eax,[ebp-0x224]
30027852:	push   eax
30027853:	lea    eax,[ebp-0x228]
30027859:	push   eax
3002785a:	lea    eax,[ebp-0x22c]
30027860:	push   eax
30027861:	lea    eax,[ebp-0x218]
30027867:	push   eax
30027868:	call   0x30018d65
3002786d:	movzx  eax,WORD PTR [ebp-0x220]
30027874:	push   eax
30027875:	movzx  eax,WORD PTR [ebp-0x224]
3002787c:	push   eax
3002787d:	movzx  eax,WORD PTR [ebp-0x228]
30027884:	push   eax
30027885:	movzx  eax,WORD PTR [ebp-0x22c]
3002788c:	push   eax
3002788d:	push   DWORD PTR [ebp-0x230]
30027893:	lea    eax,[ebp-0x21c]
30027899:	push   0x30027a78
3002789e:	push   eax
3002789f:	call   0x30005153
300278a4:	add    esp,0x1c
300278a7:	push   DWORD PTR [ebp-0x21c]
300278ad:	push   edi
300278ae:	push   0x3
300278b0:	call   0x300046d1
300278b5:	mov    BYTE PTR [ebp-0x4],0x1
300278b9:	mov    ecx,DWORD PTR [ebp-0x230]
300278bf:	lea    ecx,[ecx-0x10]
300278c2:	call   0x30004017
300278c7:	jmp    0x30018e6c
300278cc:	push   0x30027aa8
300278d1:	push   edi
300278d2:	push   0x2
300278d4:	call   0x300046d1
300278d9:	jmp    0x30018e6c
300278de:	mov    esi,0x30027afc
300278e3:	push   esi
300278e4:	call   0x300042e4
300278e9:	pop    ecx
300278ea:	push   eax
300278eb:	push   esi
300278ec:	lea    ecx,[ebp-0x21c]
300278f2:	call   0x30008b64
300278f7:	jmp    0x30018ee0
300278fc:	mov    esi,0x30027b14
30027901:	push   esi
30027902:	call   0x300042e4
30027907:	pop    ecx
30027908:	push   eax
30027909:	push   esi
3002790a:	lea    ecx,[ebp-0x21c]
30027910:	call   0x30008b64
30027915:	jmp    0x30018f0f
3002791a:	mov    esi,0x30027b28
3002791f:	push   esi
30027920:	call   0x300042e4
30027925:	pop    ecx
30027926:	push   eax
30027927:	push   esi
30027928:	lea    ecx,[ebp-0x21c]
3002792e:	call   0x3000416f
30027933:	push   DWORD PTR [ebp-0x21c]
30027939:	push   ebx
3002793a:	push   0x2
3002793c:	jmp    0x30018fe0
30027941:	mov    esi,0x30027b88
30027946:	push   esi
30027947:	call   0x300042e4
3002794c:	pop    ecx
3002794d:	push   eax
3002794e:	push   esi
3002794f:	lea    ecx,[ebp-0x21c]
30027955:	call   0x3000416f
3002795a:	push   DWORD PTR [ebp-0x21c]
30027960:	push   ebx
30027961:	push   0x2
30027963:	jmp    0x30019050
30027968:	lea    eax,[ebp-0x22c]
3002796e:	push   eax
3002796f:	lea    eax,[ebp-0x228]
30027975:	push   eax
30027976:	lea    eax,[ebp-0x224]
3002797c:	push   eax
3002797d:	lea    eax,[ebp-0x220]
30027983:	push   eax
30027984:	push   0x30027be4
30027989:	call   0x30018d65
3002798e:	test   eax,eax
30027990:	je     0x30019083
30027996:	lea    eax,[ebp-0x22c]
3002799c:	push   eax
3002799d:	lea    eax,[ebp-0x228]
300279a3:	push   eax
300279a4:	lea    eax,[ebp-0x224]
300279aa:	push   eax
300279ab:	lea    eax,[ebp-0x220]
300279b1:	push   eax
300279b2:	push   0x30027bfc
300279b7:	call   0x30018d65
300279bc:	test   eax,eax
300279be:	je     0x30019083
300279c4:	lea    eax,[ebp-0x22c]
300279ca:	push   eax
300279cb:	lea    eax,[ebp-0x228]
300279d1:	push   eax
300279d2:	lea    eax,[ebp-0x224]
300279d8:	push   eax
300279d9:	lea    eax,[ebp-0x220]
300279df:	push   eax
300279e0:	push   0x30027c14
300279e5:	call   0x30018d65
300279ea:	test   eax,eax
300279ec:	je     0x30019083
300279f2:	lea    eax,[ebp-0x22c]
300279f8:	push   eax
300279f9:	lea    eax,[ebp-0x228]
300279ff:	push   eax
30027a00:	lea    eax,[ebp-0x224]
30027a06:	push   eax
30027a07:	lea    eax,[ebp-0x220]
30027a0d:	push   eax
30027a0e:	push   0x30027c2c
30027a13:	call   0x30018d65
30027a18:	test   eax,eax
30027a1a:	je     0x30019083
30027a20:	lea    eax,[ebp-0x22c]
30027a26:	push   eax
30027a27:	lea    eax,[ebp-0x228]
30027a2d:	push   eax
30027a2e:	lea    eax,[ebp-0x224]
30027a34:	push   eax
30027a35:	lea    eax,[ebp-0x220]
30027a3b:	push   eax
30027a3c:	push   0x30027c44
30027a41:	call   0x30018d65
30027a46:	test   eax,eax
30027a48:	je     0x30019083
30027a4e:	mov    esi,0x30027c58
30027a53:	push   esi
30027a54:	call   0x300042e4
30027a59:	pop    ecx
30027a5a:	push   eax
30027a5b:	push   esi
30027a5c:	lea    ecx,[ebp-0x21c]
30027a62:	call   0x3000416f
30027a67:	mov    esi,DWORD PTR [ebp-0x21c]
30027a6d:	push   esi
30027a6e:	push   ebx
30027a6f:	push   0x2
30027a71:	jmp    0x300190c1
30027a76:	nop
30027a77:	nop
30027a78:	and    eax,0x20007300
30027a7d:	add    BYTE PTR [esi+0x0],dh
30027a80:	add    BYTE PTR gs:[edx+0x0],dh
30027a84:	jae    0x30027a86
30027a86:	imul   eax,DWORD PTR [eax],0x6e006f
30027a8c:	cmp    al,BYTE PTR [eax]
30027a8e:	and    BYTE PTR [eax],al
30027a90:	and    eax,0x2e006400
30027a95:	add    BYTE PTR ds:0x2e006400,ah
30027a9b:	add    BYTE PTR ds:0x2e006400,ah
30027aa1:	add    BYTE PTR ds:0x6400,ah
30027aa7:	add    BYTE PTR [ebp+0x0],dl
30027aaa:	outs   dx,BYTE PTR ds:[esi]
30027aab:	add    BYTE PTR [ecx+0x0],ah
30027aae:	bound  eax,QWORD PTR [eax]
30027ab0:	ins    BYTE PTR es:[edi],dx
30027ab1:	add    BYTE PTR [ebp+0x0],ah
30027ab4:	and    BYTE PTR [eax],al
30027ab6:	je     0x30027ab8
30027ab8:	outs   dx,DWORD PTR ds:[esi]
30027ab9:	add    BYTE PTR [eax],ah
30027abb:	add    BYTE PTR [eax+eax*1+0x65],ah
30027abf:	add    BYTE PTR [eax+eax*1+0x65],dh
30027ac3:	add    BYTE PTR [edx+0x0],dh
30027ac6:	ins    DWORD PTR es:[edi],dx
30027ac7:	add    BYTE PTR [ecx+0x0],ch
30027aca:	outs   dx,BYTE PTR ds:[esi]
30027acb:	add    BYTE PTR [ebp+0x0],ah
30027ace:	and    BYTE PTR [eax],al
30027ad0:	push   esi
30027ad1:	add    BYTE PTR [ecx+0x0],ch
30027ad4:	jae    0x30027ad6
30027ad6:	jne    0x30027ad8
30027ad8:	popa   
30027ad9:	add    BYTE PTR [eax+eax*1+0x20],ch
30027add:	add    BYTE PTR [ebx+0x0],dl
30027ae0:	je     0x30027ae2
30027ae2:	jne    0x30027ae4
30027ae4:	add    BYTE PTR fs:[ecx+0x0],ch
30027ae8:	outs   dx,DWORD PTR ds:[esi]
30027ae9:	add    BYTE PTR [eax],ah
30027aeb:	add    BYTE PTR [esi+0x0],dh
30027aee:	add    BYTE PTR gs:[edx+0x0],dh
30027af2:	jae    0x30027af4
30027af4:	imul   eax,DWORD PTR [eax],0x6e006f
30027afa:	add    BYTE PTR [eax],al
30027afc:	and    BYTE PTR [eax],al
30027afe:	push   eax
30027aff:	add    BYTE PTR [edi+0x0],ch
30027b02:	ja     0x30027b04
30027b04:	add    BYTE PTR gs:[edx+0x0],dh
30027b08:	push   ebp
30027b09:	add    BYTE PTR [ebx+0x0],dh
30027b0c:	add    BYTE PTR gs:[edx+0x0],dh
30027b10:	jae    0x30027b12
30027b12:	add    BYTE PTR [eax],al
30027b14:	and    BYTE PTR [eax],al
30027b16:	inc    edi
30027b17:	add    BYTE PTR [ebp+0x0],dh
30027b1a:	add    BYTE PTR gs:[ebx+0x0],dh
30027b1e:	je     0x30027b20
30027b20:	jae    0x30027b22
30027b22:	add    BYTE PTR [eax],al
30027b24:	nop
30027b25:	nop
30027b26:	nop
30027b27:	nop
30027b28:	dec    ecx
30027b29:	add    BYTE PTR [esi+0x0],ch
30027b2c:	je     0x30027b2e
30027b2e:	add    BYTE PTR gs:[edx+0x0],dh
30027b32:	outs   dx,BYTE PTR ds:[esi]
30027b33:	add    BYTE PTR [ebp+0x0],ah
30027b36:	je     0x30027b38
30027b38:	and    BYTE PTR [eax],al
30027b3a:	inc    ebp
30027b3b:	add    BYTE PTR [eax+0x0],bh
30027b3e:	jo     0x30027b40
30027b40:	ins    BYTE PTR es:[edi],dx
30027b41:	add    BYTE PTR [edi+0x0],ch
30027b44:	jb     0x30027b46
30027b46:	add    BYTE PTR gs:[edx+0x0],dh
30027b4a:	and    BYTE PTR [eax],al
30027b4c:	push   esi
30027b4d:	add    BYTE PTR [ebp+0x0],ah
30027b50:	jb     0x30027b52
30027b52:	jae    0x30027b54
30027b54:	imul   eax,DWORD PTR [eax],0x6e006f
30027b5a:	cmp    al,BYTE PTR [eax]
30027b5c:	and    BYTE PTR [eax],al
30027b5e:	ins    DWORD PTR es:[edi],dx
30027b5f:	add    BYTE PTR [ebx+0x0],dh
30027b62:	push   0x6d007400
30027b67:	add    BYTE PTR [eax+eax*1+0x2e],ch
30027b6b:	add    BYTE PTR [eax+eax*1+0x6c],ah
30027b6f:	add    BYTE PTR [eax+eax*1+0x20],ch
30027b73:	add    BYTE PTR [esi+0x0],ch
30027b76:	outs   dx,DWORD PTR ds:[esi]
30027b77:	add    BYTE PTR [eax+eax*1+0x20],dh
30027b7b:	add    BYTE PTR [esi+0x0],ah
30027b7e:	outs   dx,DWORD PTR ds:[esi]
30027b7f:	add    BYTE PTR [ebp+0x0],dh
30027b82:	outs   dx,BYTE PTR ds:[esi]
30027b83:	add    BYTE PTR [eax+eax*1+0x0],ah
30027b87:	add    BYTE PTR [esi],ch
30027b89:	add    BYTE PTR [esi+0x0],cl
30027b8c:	inc    ebp
30027b8d:	add    BYTE PTR [eax+eax*1+0x20],dl
30027b91:	add    BYTE PTR [esi+0x0],al
30027b94:	jb     0x30027b96
30027b96:	popa   
30027b97:	add    BYTE PTR [ebp+0x0],ch
30027b9a:	add    BYTE PTR gs:[edi+0x0],dh
30027b9e:	outs   dx,DWORD PTR ds:[esi]
30027b9f:	add    BYTE PTR [edx+0x0],dh
30027ba2:	imul   eax,DWORD PTR [eax],0x20
30027ba5:	add    BYTE PTR [esi+0x0],dl
30027ba8:	add    BYTE PTR gs:[edx+0x0],dh
30027bac:	jae    0x30027bae
30027bae:	imul   eax,DWORD PTR [eax],0x6e006f
30027bb4:	cmp    al,BYTE PTR [eax]
30027bb6:	and    BYTE PTR [eax],al
30027bb8:	ins    DWORD PTR es:[edi],dx
30027bb9:	add    BYTE PTR [ebx+0x0],dh
30027bbc:	arpl   WORD PTR [eax],ax
30027bbe:	outs   dx,DWORD PTR ds:[esi]
30027bbf:	add    BYTE PTR [edx+0x0],dh
30027bc2:	add    BYTE PTR gs:[ebp+0x0],ah
30027bc6:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
30027bcb:	add    BYTE PTR [eax+eax*1+0x20],ch
30027bcf:	add    BYTE PTR [esi+0x0],ch
30027bd2:	outs   dx,DWORD PTR ds:[esi]
30027bd3:	add    BYTE PTR [eax+eax*1+0x20],dh
30027bd7:	add    BYTE PTR [esi+0x0],ah
30027bda:	outs   dx,DWORD PTR ds:[esi]
30027bdb:	add    BYTE PTR [ebp+0x0],dh
30027bde:	outs   dx,BYTE PTR ds:[esi]
30027bdf:	add    BYTE PTR [eax+eax*1+0x0],ah
30027be3:	add    BYTE PTR [ebp+0x0],ch
30027be6:	jae    0x30027be8
30027be8:	js     0x30027bea
30027bea:	ins    DWORD PTR es:[edi],dx
30027beb:	add    BYTE PTR [eax+eax*1+0x35],ch
30027bef:	add    BYTE PTR [esi],ch
30027bf1:	add    BYTE PTR [eax+eax*1+0x6c],ah
30027bf5:	add    BYTE PTR [eax+eax*1+0x0],ch
30027bf9:	add    BYTE PTR [eax+0x73006d90],dl
30027bff:	add    BYTE PTR [eax+0x0],bh
30027c02:	ins    DWORD PTR es:[edi],dx
30027c03:	add    BYTE PTR [eax+eax*1+0x34],ch
30027c07:	add    BYTE PTR [esi],ch
30027c09:	add    BYTE PTR [eax+eax*1+0x6c],ah
30027c0d:	add    BYTE PTR [eax+eax*1+0x0],ch
30027c11:	add    BYTE PTR [eax+0x73006d90],dl
30027c17:	add    BYTE PTR [eax+0x0],bh
30027c1a:	ins    DWORD PTR es:[edi],dx
30027c1b:	add    BYTE PTR [eax+eax*1+0x33],ch
30027c1f:	add    BYTE PTR [esi],ch
30027c21:	add    BYTE PTR [eax+eax*1+0x6c],ah
30027c25:	add    BYTE PTR [eax+eax*1+0x0],ch
30027c29:	add    BYTE PTR [eax+0x73006d90],dl
30027c2f:	add    BYTE PTR [eax+0x0],bh
30027c32:	ins    DWORD PTR es:[edi],dx
30027c33:	add    BYTE PTR [eax+eax*1+0x32],ch
30027c37:	add    BYTE PTR [esi],ch
30027c39:	add    BYTE PTR [eax+eax*1+0x6c],ah
30027c3d:	add    BYTE PTR [eax+eax*1+0x0],ch
30027c41:	add    BYTE PTR [eax+0x73006d90],dl
30027c47:	add    BYTE PTR [eax+0x0],bh
30027c4a:	ins    DWORD PTR es:[edi],dx
30027c4b:	add    BYTE PTR [eax+eax*1+0x2e],ch
30027c4f:	add    BYTE PTR [eax+eax*1+0x6c],ah
30027c53:	add    BYTE PTR [eax+eax*1+0x0],ch
30027c57:	add    BYTE PTR [ebp+0x0],cl
30027c5a:	push   ebx
30027c5b:	add    BYTE PTR [eax+0x0],bl
30027c5e:	dec    ebp
30027c5f:	add    BYTE PTR [eax+eax*1+0x20],cl
30027c63:	add    BYTE PTR [esi+0x0],dl
30027c66:	add    BYTE PTR gs:[edx+0x0],dh
30027c6a:	jae    0x30027c6c
30027c6c:	imul   eax,DWORD PTR [eax],0x6e006f
30027c72:	cmp    al,BYTE PTR [eax]
30027c74:	and    BYTE PTR [eax],al
30027c76:	ins    DWORD PTR es:[edi],dx
30027c77:	add    BYTE PTR [ebx+0x0],dh
30027c7a:	js     0x30027c7c
30027c7c:	ins    DWORD PTR es:[edi],dx
30027c7d:	add    BYTE PTR [eax+eax*1+0x2a],ch
30027c81:	add    BYTE PTR [esi],ch
30027c83:	add    BYTE PTR [eax+eax*1+0x6c],ah
30027c87:	add    BYTE PTR [eax+eax*1+0x20],ch
30027c8b:	add    BYTE PTR [esi+0x0],ch
30027c8e:	outs   dx,DWORD PTR ds:[esi]
30027c8f:	add    BYTE PTR [eax+eax*1+0x20],dh
30027c93:	add    BYTE PTR [esi+0x0],ah
30027c96:	outs   dx,DWORD PTR ds:[esi]
30027c97:	add    BYTE PTR [ebp+0x0],dh
30027c9a:	outs   dx,BYTE PTR ds:[esi]
30027c9b:	add    BYTE PTR [eax+eax*1+0x0],ah
30027c9f:	add    BYTE PTR [ebx-0x18],dl
30027ca2:	loopne 0x30027c69
30027ca4:	std    
30027ca5:	call   DWORD PTR [ebx+0x50]
30027ca8:	push   DWORD PTR [ebp+0x8]
30027cab:	call   DWORD PTR ds:0x30045274
30027cb1:	push   0xffffffff
30027cb3:	mov    ecx,edi
30027cb5:	call   0x30006c8c
30027cba:	xor    esi,esi
30027cbc:	inc    esi
30027cbd:	jmp    0x3001a1cb
30027cc2:	push   0x30027d2c
30027cc7:	push   0x300184f8
30027ccc:	call   DWORD PTR ds:0x300450fc
30027cd2:	push   0x1c
30027cd4:	call   0x30003fee
30027cd9:	pop    ecx
30027cda:	mov    DWORD PTR [ebp+0x8],eax
30027cdd:	mov    DWORD PTR [ebp-0x4],esi
30027ce0:	test   eax,eax
30027ce2:	je     0x30027cf3
30027ce4:	push   DWORD PTR ds:0x30043094
30027cea:	mov    ecx,eax
30027cec:	call   0x3003a186
30027cf1:	mov    esi,eax
30027cf3:	or     DWORD PTR [ebp-0x4],0xffffffff
30027cf7:	mov    DWORD PTR ds:0x30043098,esi
30027cfd:	jmp    0x3000463c
30027d02:	push   0x1c
30027d04:	call   0x30003fee
30027d09:	pop    ecx
30027d0a:	mov    DWORD PTR [ebp-0x10],eax
30027d0d:	mov    BYTE PTR [ebp-0x4],0x3
30027d11:	test   eax,eax
30027d13:	je     0x3001a181
30027d19:	push   DWORD PTR ds:0x30043094
30027d1f:	mov    ecx,eax
30027d21:	call   0x3003a186
30027d26:	jmp    0x3001a17f
30027d2b:	nop
30027d2c:	xor    DWORD PTR [eax],eax
30027d2e:	add    BYTE PTR [eax],al
30027d30:	mov    eax,0x30027d36
30027d35:	ret    
30027d36:	mov    DWORD PTR [ebp-0x4],0x1
30027d3d:	mov    esi,DWORD PTR [ebp-0x14]
30027d40:	jmp    0x30017307
30027d45:	and    DWORD PTR [ebp-0x4],0x0
30027d49:	push   0x1
30027d4b:	lea    eax,[ebp-0x4]
30027d4e:	push   eax
30027d4f:	push   0x0
30027d51:	push   DWORD PTR [esi+0x10]
30027d54:	call   DWORD PTR ds:0x300450c4
30027d5a:	push   DWORD PTR [esi+0x10]
30027d5d:	mov    DWORD PTR [esi+0xc],eax
30027d60:	call   DWORD PTR ds:0x300451d0
30027d66:	test   eax,eax
30027d68:	setne  al
30027d6b:	or     DWORD PTR [esi+0x10],0xffffffff
30027d6f:	jmp    0x3001705b
30027d74:	push   0x30027ea0
30027d79:	call   0x300042e4
30027d7e:	pop    ecx
30027d7f:	push   eax
30027d80:	push   0x30027ea0
30027d85:	mov    ecx,esi
30027d87:	call   0x30008b64
30027d8c:	mov    eax,DWORD PTR [ebp-0x68]
30027d8f:	push   DWORD PTR [eax]
30027d91:	push   0x30027eb4
30027d96:	push   esi
30027d97:	call   0x3000b9f3
30027d9c:	mov    eax,DWORD PTR [ebp-0x68]
30027d9f:	add    esp,0xc
30027da2:	push   DWORD PTR [eax]
30027da4:	call   0x3003a564
30027da9:	test   eax,eax
30027dab:	je     0x30027de4
30027dad:	push   0x30027ec0
30027db2:	call   0x300042e4
30027db7:	pop    ecx
30027db8:	push   eax
30027db9:	push   0x30027ec0
30027dbe:	mov    ecx,esi
30027dc0:	call   0x30008b64
30027dc5:	mov    eax,DWORD PTR [ebp-0x68]
30027dc8:	push   DWORD PTR [eax]
30027dca:	call   0x3003a564
30027dcf:	mov    esi,eax
30027dd1:	push   esi
30027dd2:	call   0x300042e4
30027dd7:	pop    ecx
30027dd8:	push   eax
30027dd9:	push   esi
30027dda:	mov    esi,DWORD PTR [ebp-0x64]
30027ddd:	mov    ecx,esi
30027ddf:	call   0x30008b64
30027de4:	push   0x30027ec8
30027de9:	call   0x300042e4
30027dee:	pop    ecx
30027def:	push   eax
30027df0:	push   0x30027ec8
30027df5:	mov    ecx,esi
30027df7:	call   0x30008b64
30027dfc:	mov    eax,DWORD PTR [ebp-0x68]
30027dff:	cmp    DWORD PTR [eax],0x0
30027e02:	je     0x3000d314
30027e08:	cmp    DWORD PTR [ebp-0x6c],0x0
30027e0c:	je     0x3000d314
30027e12:	push   0x30027ed8
30027e17:	call   0x300042e4
30027e1c:	pop    ecx
30027e1d:	push   eax
30027e1e:	push   0x30027ed8
30027e23:	mov    ecx,esi
30027e25:	call   0x30008b64
30027e2a:	push   DWORD PTR [ebp-0x6c]
30027e2d:	call   0x300042e4
30027e32:	pop    ecx
30027e33:	push   eax
30027e34:	push   DWORD PTR [ebp-0x6c]
30027e37:	mov    ecx,esi
30027e39:	call   0x30008b64
30027e3e:	push   0x30027ef8
30027e43:	call   0x300042e4
30027e48:	pop    ecx
30027e49:	push   eax
30027e4a:	push   0x30027ef8
30027e4f:	mov    ecx,esi
30027e51:	call   0x30008b64
30027e56:	jmp    0x3000d314
30027e5b:	push   0x30027f18
30027e60:	call   0x300042e4
30027e65:	pop    ecx
30027e66:	mov    ecx,DWORD PTR [ebp-0x64]
30027e69:	push   eax
30027e6a:	push   0x30027f18
30027e6f:	call   0x30008b64
30027e74:	push   DWORD PTR [esi-0xc]
30027e77:	mov    ecx,DWORD PTR [ebp-0x64]
30027e7a:	push   esi
30027e7b:	call   0x30008b64
30027e80:	push   0x30027f30
30027e85:	call   0x300042e4
30027e8a:	pop    ecx
30027e8b:	mov    ecx,DWORD PTR [ebp-0x64]
30027e8e:	push   eax
30027e8f:	push   0x30027f30
30027e94:	call   0x30008b64
30027e99:	jmp    0x3000d321
30027e9e:	nop
30027e9f:	nop
30027ea0:	and    BYTE PTR [eax],al
30027ea2:	and    BYTE PTR [eax],al
30027ea4:	and    BYTE PTR [eax],al
30027ea6:	and    BYTE PTR [eax],al
30027ea8:	cmp    al,0x0
30027eaa:	push   0x3e007200
30027eaf:	add    BYTE PTR [eax],al
30027eb1:	add    BYTE PTR [eax+0x30002590],dl
30027eb7:	add    BYTE PTR [eax],bh
30027eb9:	add    BYTE PTR [eax+0x0],bh
30027ebc:	add    BYTE PTR [eax],al
30027ebe:	nop
30027ebf:	nop
30027ec0:	and    BYTE PTR [eax],al
30027ec2:	sub    eax,0x2000
30027ec7:	add    BYTE PTR [eax+eax*1],bh
30027eca:	das    
30027ecb:	add    BYTE PTR [eax+0x0],ch
30027ece:	jb     0x30027ed0
30027ed0:	add    BYTE PTR ds:0xa00,cl
30027ed7:	add    BYTE PTR [eax],ah
30027ed9:	add    BYTE PTR [eax],ah
30027edb:	add    BYTE PTR [eax],ah
30027edd:	add    BYTE PTR [eax],ah
30027edf:	add    BYTE PTR [eax+eax*1],bh
30027ee2:	add    BYTE PTR gs:[edx+0x0],dh
30027ee6:	jb     0x30027ee8
30027ee8:	outs   dx,DWORD PTR ds:[esi]
30027ee9:	add    BYTE PTR [edx+0x0],dh
30027eec:	imul   eax,DWORD PTR [eax],0x66006e
30027ef2:	outs   dx,DWORD PTR ds:[esi]
30027ef3:	add    BYTE PTR [esi],bh
30027ef5:	add    BYTE PTR [eax],al
30027ef7:	add    BYTE PTR [eax+eax*1],bh
30027efa:	das    
30027efb:	add    BYTE PTR [ebp+0x0],ah
30027efe:	jb     0x30027f00
30027f00:	jb     0x30027f02
30027f02:	outs   dx,DWORD PTR ds:[esi]
30027f03:	add    BYTE PTR [edx+0x0],dh
30027f06:	imul   eax,DWORD PTR [eax],0x66006e
30027f0c:	outs   dx,DWORD PTR ds:[esi]
30027f0d:	add    BYTE PTR [esi],bh
30027f0f:	add    BYTE PTR ds:0xa00,cl
30027f15:	add    BYTE PTR [eax+0x20002090],dl
30027f1b:	add    BYTE PTR [eax],ah
30027f1d:	add    BYTE PTR [eax],ah
30027f1f:	add    BYTE PTR [eax+eax*1],bh
30027f22:	jo     0x30027f24
30027f24:	popa   
30027f25:	add    BYTE PTR [eax+eax*1+0x68],dh
30027f29:	add    BYTE PTR [esi],bh
30027f2b:	add    BYTE PTR [eax],al
30027f2d:	add    BYTE PTR [eax+0x2f003c90],dl
30027f33:	add    BYTE PTR [eax+0x0],dh
30027f36:	popa   
30027f37:	add    BYTE PTR [eax+eax*1+0x68],dh
30027f3b:	add    BYTE PTR [esi],bh
30027f3d:	add    BYTE PTR ds:0xa00,cl
30027f43:	add    BYTE PTR [ebp-0x7ccc8b0a],al
30027f49:	inc    DWORD PTR [ebx]
30027f4b:	jle    0x30027f7b
30027f4d:	mov    edx,DWORD PTR [ebp+0x8]
30027f50:	push   0x26
30027f52:	pop    eax
30027f53:	mov    WORD PTR [esi],ax
30027f56:	xor    eax,eax
30027f58:	cmp    WORD PTR [edx],0x3c
30027f5c:	push   0x74
30027f5e:	setne  al
30027f61:	dec    eax
30027f62:	and    eax,0x5
30027f65:	add    eax,0x67
30027f68:	mov    WORD PTR [esi+0x2],ax
30027f6c:	pop    eax
30027f6d:	mov    WORD PTR [esi+0x4],ax
30027f71:	push   0x3b
30027f73:	pop    eax
30027f74:	mov    WORD PTR [esi+0x6],ax
30027f78:	add    esi,0x8
30027f7b:	push   0x4
30027f7d:	jmp    0x3000d727
30027f82:	test   esi,esi
30027f84:	je     0x30027fab
30027f86:	cmp    edi,0x4
30027f89:	jle    0x30027fab
30027f8b:	push   0xa
30027f8d:	push   0x300280d0
30027f92:	lea    eax,[edi+edi*1]
30027f95:	push   eax
30027f96:	push   esi
30027f97:	call   0x3000ba07
30027f9c:	add    esp,0x10
30027f9f:	push   eax
30027fa0:	call   0x30001432
30027fa5:	mov    ecx,DWORD PTR [ebp-0x4]
30027fa8:	add    esi,0xa
30027fab:	push   0x5
30027fad:	jmp    0x3000d727
30027fb2:	mov    eax,0x300280dc
30027fb7:	jmp    0x3000d709
30027fbc:	mov    DWORD PTR [ebp+0x10],0xdbff
30027fc3:	cmp    ax,WORD PTR [ebp+0x10]
30027fc7:	ja     0x3000cff6
30027fcd:	test   bx,bx
30027fd0:	je     0x30027feb
30027fd2:	test   esi,esi
30027fd4:	je     0x30027fe8
30027fd6:	cmp    edi,0x7
30027fd9:	jle    0x30027fe8
30027fdb:	push   esi
30027fdc:	push   ebx
30027fdd:	call   0x3003a744
30027fe2:	mov    ecx,DWORD PTR [ebp-0x4]
30027fe5:	add    esi,0x10
30027fe8:	push   0x8
30027fea:	pop    edx
30027feb:	mov    eax,DWORD PTR [ebp+0x8]
30027fee:	movzx  ebx,WORD PTR [eax]
30027ff1:	jmp    0x3000d022
30027ff6:	mov    DWORD PTR [ebp+0x10],0xdc00
30027ffd:	cmp    ax,WORD PTR [ebp+0x10]
30028001:	jb     0x3002803f
30028003:	mov    DWORD PTR [ebp+0x10],0xdfff
3002800a:	cmp    ax,WORD PTR [ebp+0x10]
3002800e:	ja     0x3002803f
30028010:	test   esi,esi
30028012:	je     0x30028034
30028014:	cmp    edi,0x9
30028017:	jle    0x30028034
30028019:	movzx  eax,bx
3002801c:	sub    eax,0xd7f7
30028021:	shl    eax,0xa
30028024:	add    eax,DWORD PTR [ebp+0x14]
30028027:	push   esi
30028028:	push   eax
30028029:	call   0x3003a7ae
3002802e:	mov    ecx,DWORD PTR [ebp-0x4]
30028031:	add    esi,0x14
30028034:	push   0xa
30028036:	xor    eax,eax
30028038:	pop    edx
30028039:	inc    eax
3002803a:	jmp    0x3000d78a
3002803f:	test   esi,esi
30028041:	je     0x30028058
30028043:	cmp    edi,0x7
30028046:	jle    0x30028058
30028048:	push   esi
30028049:	push   ebx
3002804a:	call   0x3003a744
3002804f:	mov    ecx,DWORD PTR [ebp-0x4]
30028052:	mov    edx,DWORD PTR [ebp-0x8]
30028055:	add    esi,0x10
30028058:	mov    eax,DWORD PTR [ebp-0xc]
3002805b:	sub    edi,0x8
3002805e:	add    ecx,0x8
30028061:	mov    DWORD PTR [ebp-0x4],ecx
30028064:	jmp    0x3000d78a
30028069:	cmp    edi,0x7
3002806c:	jle    0x30028078
3002806e:	push   esi
3002806f:	push   eax
30028070:	call   0x3003a744
30028075:	add    esi,0x10
30028078:	mov    ecx,DWORD PTR [ebp-0x4]
3002807b:	push   0x8
3002807d:	jmp    0x3000d727
30028082:	lea    eax,[ebx-0x20]
30028085:	cmp    ax,0x5e
30028089:	ja     0x3002809d
3002808b:	test   esi,esi
3002808d:	je     0x30028096
3002808f:	test   edi,edi
30028091:	jle    0x30028096
30028093:	mov    WORD PTR [esi],bx
30028096:	dec    edi
30028097:	inc    ecx
30028098:	jmp    0x3000d044
3002809d:	test   esi,esi
3002809f:	je     0x300280b0
300280a1:	cmp    edi,0x7
300280a4:	jle    0x300280b0
300280a6:	push   esi
300280a7:	push   ebx
300280a8:	call   0x3003a744
300280ad:	mov    ecx,DWORD PTR [ebp-0x4]
300280b0:	sub    edi,0x8
300280b3:	add    ecx,0x8
300280b6:	jmp    0x3000d044
300280bb:	xor    eax,eax
300280bd:	jmp    0x3000d04e
300280c2:	push   0x80004005
300280c7:	call   0x3002ae0b
300280cc:	int3   
300280cd:	nop
300280ce:	nop
300280cf:	nop
300280d0:	add    BYTE PTR es:[ecx+0x0],ah
300280d4:	ins    DWORD PTR es:[edi],dx
300280d5:	add    BYTE PTR [eax+0x0],dh
300280d8:	cmp    eax,DWORD PTR [eax]
300280da:	add    BYTE PTR [eax],al
300280dc:	add    BYTE PTR es:[ecx+0x0],dh
300280e0:	jne    0x300280e2
300280e2:	outs   dx,DWORD PTR ds:[esi]
300280e3:	add    BYTE PTR [eax+eax*1+0x3b],dh
300280e7:	add    BYTE PTR [eax],al
300280e9:	add    BYTE PTR [eax-0x7fffbffb],bh
300280ef:	jmp    0x3000d0a4
300280f4:	and    DWORD PTR [ebp+0x8],0x0
300280f8:	mov    BYTE PTR [ebp-0x4],0xa
300280fc:	lea    eax,[ebp+0x8]
300280ff:	push   eax
30028100:	push   0x0
30028102:	call   DWORD PTR ds:0x30045528
30028108:	test   eax,eax
3002810a:	jne    0x30028159
3002810c:	cmp    DWORD PTR [ebp+0x8],eax
3002810f:	je     0x30028159
30028111:	and    DWORD PTR [ebp+0xc],eax
30028114:	mov    BYTE PTR [ebp-0x4],0xb
30028118:	mov    eax,DWORD PTR [ebp+0x8]
3002811b:	lea    edx,[ebp+0xc]
3002811e:	mov    ecx,DWORD PTR [eax]
30028120:	push   edx
30028121:	push   eax
30028122:	call   DWORD PTR [ecx+0x14]
30028125:	test   eax,eax
30028127:	jne    0x30028141
30028129:	mov    esi,DWORD PTR [ebp+0xc]
3002812c:	test   esi,esi
3002812e:	je     0x30028141
30028130:	push   esi
30028131:	call   0x300042e4
30028136:	pop    ecx
30028137:	push   eax
30028138:	push   esi
30028139:	lea    ecx,[ebx+0x2c]
3002813c:	call   0x3000416f
30028141:	push   DWORD PTR [ebp+0x8]
30028144:	push   0x0
30028146:	call   DWORD PTR ds:0x300454f8
3002814c:	mov    BYTE PTR [ebp-0x4],0xa
30028150:	push   DWORD PTR [ebp+0xc]
30028153:	call   DWORD PTR ds:0x300454e8
30028159:	mov    BYTE PTR [ebp-0x4],0x4
3002815d:	mov    eax,DWORD PTR [ebp+0x8]
30028160:	test   eax,eax
30028162:	je     0x30004848
30028168:	mov    ecx,DWORD PTR [eax]
3002816a:	push   eax
3002816b:	call   DWORD PTR [ecx+0x8]
3002816e:	jmp    0x30004848
30028173:	mov    eax,ds:0x30043bec
30028178:	jmp    0x3001a9a4
3002817d:	push   esi
3002817e:	mov    ecx,edi
30028180:	call   0x3001a911
30028185:	push   eax
30028186:	call   0x3001aceb
3002818b:	mov    ebx,eax
3002818d:	mov    DWORD PTR [ebp+0x8],ebx
30028190:	mov    BYTE PTR [ebp-0x4],0x1
30028194:	mov    ecx,ebx
30028196:	call   0x30018262
3002819b:	test   al,al
3002819d:	je     0x300281bc
3002819f:	mov    ecx,ebx
300281a1:	call   0x3003ae08
300281a6:	cmp    eax,0x4
300281a9:	jne    0x300281bc
300281ab:	mov    BYTE PTR [ebp-0x4],0x0
300281af:	lea    ecx,[ebp+0x8]
300281b2:	call   0x30019a8f
300281b7:	jmp    0x3001a9ac
300281bc:	mov    BYTE PTR [ebp-0x4],0x0
300281c0:	lea    ecx,[ebp+0x8]
300281c3:	call   0x30019a8f
300281c8:	jmp    0x3001a980
300281cd:	xor    eax,eax
300281cf:	jmp    0x30019afb
300281d4:	call   0x3003b5db
300281d9:	test   al,al
300281db:	je     0x3001ad8c
300281e1:	mov    eax,DWORD PTR [ebp-0x18]
300281e4:	and    DWORD PTR [ebp-0x10],0x0
300281e8:	mov    ebx,DWORD PTR [ebp-0x14]
300281eb:	shr    eax,0x2
300281ee:	dec    eax
300281ef:	je     0x30028210
300281f1:	mov    edi,DWORD PTR [ebp-0x10]
300281f4:	push   edi
300281f5:	push   DWORD PTR [ebx]
300281f7:	call   0x3003a816
300281fc:	mov    DWORD PTR [ebx],eax
300281fe:	mov    eax,DWORD PTR [ebp-0x18]
30028201:	shr    eax,0x2
30028204:	inc    edi
30028205:	dec    eax
30028206:	lea    ebx,[ebx+0x4]
30028209:	cmp    edi,eax
3002820b:	jb     0x300281f4
3002820d:	mov    edi,DWORD PTR [ebp+0x8]
30028210:	mov    ecx,DWORD PTR [ebp-0x14]
30028213:	cmp    DWORD PTR [ecx+0xc0],edi
30028219:	jne    0x3001ad8c
3002821f:	mov    eax,DWORD PTR [esi+0x4]
30028222:	push   ecx
30028223:	mov    BYTE PTR [esi],0x0
30028226:	push   esi
30028227:	mov    DWORD PTR [eax],edi
30028229:	call   0x3003abf8
3002822e:	jmp    0x3001ad8c
30028233:	test   eax,eax
30028235:	je     0x3002823e
30028237:	push   eax
30028238:	call   0x3000460f
3002823d:	pop    ecx
3002823e:	ret    
3002823f:	call   0x3003b5db
30028244:	test   al,al
30028246:	je     0x3001a930
3002824c:	push   esi
3002824d:	call   0x3000c5ce
30028252:	jmp    0x3001a937
30028257:	call   0x3003b5db
3002825c:	test   al,al
3002825e:	jne    0x3001825e
30028264:	xor    eax,eax
30028266:	ret    
30028267:	xor    eax,eax
30028269:	mov    ds:0x30044474,eax
3002826e:	mov    ds:0x30044478,eax
30028273:	mov    ds:0x3004447c,eax
30028278:	mov    ds:0x30044480,eax
3002827d:	mov    ds:0x30044484,eax
30028282:	mov    ds:0x30044488,eax
30028287:	mov    ds:0x3004448c,eax
3002828c:	jmp    0x3001d651
30028291:	cmp    DWORD PTR [ebx],0x68
30028294:	jb     0x3001d1e1
3002829a:	push   0x20
3002829c:	lea    eax,[ebx+0x28]
3002829f:	push   eax
300282a0:	push   0xffffffff
300282a2:	push   eax
300282a3:	push   0x0
300282a5:	push   0x0
300282a7:	call   DWORD PTR ds:0x30045170
300282ad:	jmp    0x3001d1e1
300282b2:	cmp    esi,0x12340042
300282b8:	jne    0x3002831a
300282ba:	test   ebx,ebx
300282bc:	je     0x3002831a
300282be:	cmp    DWORD PTR [ebx],0x28
300282c1:	jb     0x3002831a
300282c3:	xor    esi,esi
300282c5:	push   esi
300282c6:	lea    eax,[ebp-0x14]
300282c9:	push   eax
300282ca:	push   esi
300282cb:	push   0x30
300282cd:	call   DWORD PTR ds:0x30045488
300282d3:	test   eax,eax
300282d5:	je     0x3002831a
300282d7:	push   edi
300282d8:	mov    DWORD PTR [ebx+0x4],esi
300282db:	mov    DWORD PTR [ebx+0x8],esi
300282de:	push   esi
300282df:	mov    esi,DWORD PTR ds:0x3004548c
300282e5:	call   esi
300282e7:	push   0x1
300282e9:	mov    DWORD PTR [ebx+0xc],eax
300282ec:	call   esi
300282ee:	lea    edi,[ebx+0x14]
300282f1:	lea    esi,[ebp-0x14]
300282f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300282f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300282f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300282f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300282f8:	xor    esi,esi
300282fa:	inc    esi
300282fb:	cmp    DWORD PTR [ebx],0x68
300282fe:	mov    DWORD PTR [ebx+0x10],eax
30028301:	mov    DWORD PTR [ebx+0x24],esi
30028304:	pop    edi
30028305:	jb     0x3001d1e1
3002830b:	push   0x20
3002830d:	lea    ecx,[ebx+0x28]
30028310:	push   ecx
30028311:	push   0xffffffff
30028313:	push   0x30028324
30028318:	jmp    0x300282a3
3002831a:	xor    eax,eax
3002831c:	jmp    0x3001d1e3
30028321:	nop
30028322:	nop
30028323:	nop
30028324:	inc    esp
30028325:	dec    ecx
30028326:	push   ebx
30028327:	push   eax
30028328:	dec    esp
30028329:	inc    ecx
3002832a:	pop    ecx
3002832b:	add    BYTE PTR [ebx-0x57cf7ab],cl
30028331:	dec    esp
30028332:	jl     0x3002834d
30028334:	cmp    edx,0x4d
30028337:	jle    0x30028361
30028339:	cmp    edx,0x4e
3002833c:	je     0x3002835d
3002833e:	cmp    edx,0x4f
30028341:	je     0x30028358
30028343:	xor    eax,eax
30028345:	lea    ecx,[edx-0x50]
30028348:	inc    eax
30028349:	cmp    ecx,eax
3002834b:	jbe    0x30028354
3002834d:	push   edx
3002834e:	call   DWORD PTR ds:0x3004548c
30028354:	pop    ebp
30028355:	ret    0x4
30028358:	xor    edx,edx
3002835a:	inc    edx
3002835b:	jmp    0x3002834d
3002835d:	xor    edx,edx
3002835f:	jmp    0x3002834d
30028361:	xor    eax,eax
30028363:	jmp    0x30028354
30028365:	test   BYTE PTR [ebp+0xc],0x3
30028369:	push   esi
3002836a:	jne    0x30028397
3002836c:	mov    esi,DWORD PTR [ebp+0x8]
3002836f:	xor    eax,eax
30028371:	cmp    DWORD PTR [esi+0x8],eax
30028374:	jle    0x30028393
30028376:	cmp    DWORD PTR [esi+0xc],eax
30028379:	jle    0x30028393
3002837b:	push   eax
3002837c:	call   DWORD PTR ds:0x3004548c
30028382:	cmp    DWORD PTR [esi],eax
30028384:	jge    0x30028393
30028386:	push   0x1
30028388:	call   DWORD PTR ds:0x3004548c
3002838e:	cmp    DWORD PTR [esi+0x4],eax
30028391:	jl     0x30028397
30028393:	xor    eax,eax
30028395:	jmp    0x3002839c
30028397:	mov    eax,0x12340042
3002839c:	pop    esi
3002839d:	pop    ebp
3002839e:	ret    0x8
300283a1:	mov    eax,0x8007000e
300283a6:	jmp    0x30018e13
300283ab:	mov    eax,0x80004003
300283b0:	jmp    0x3000c57f
300283b5:	mov    eax,0x80004003
300283ba:	jmp    0x30009149
300283bf:	mov    eax,0x80070057
300283c4:	jmp    0x30009149
300283c9:	xor    eax,eax
300283cb:	jmp    0x30010e9b
300283d0:	xor    eax,eax
300283d2:	push   esi
300283d3:	mov    WORD PTR [ebp-0x414],ax
300283da:	xor    esi,esi
300283dc:	lea    eax,[ebp-0x412]
300283e2:	push   esi
300283e3:	push   eax
300283e4:	call   0x300011b1
300283e9:	add    esp,0xc
300283ec:	lea    eax,[ebp-0x20c]
300283f2:	test   esi,esi
300283f4:	jne    0x30028412
300283f6:	push   eax
300283f7:	push   0x3002851c
300283fc:	lea    eax,[ebp-0x414]
30028402:	push   0x104
30028407:	push   eax
30028408:	call   0x3001169c
3002840d:	add    esp,0x10
30028410:	jmp    0x3002842d
30028412:	push   esi
30028413:	push   eax
30028414:	push   0x3002852c
30028419:	lea    eax,[ebp-0x414]
3002841f:	push   0x104
30028424:	push   eax
30028425:	call   0x3001169c
3002842a:	add    esp,0x14
3002842d:	test   eax,eax
3002842f:	js     0x300283c9
30028431:	lea    eax,[ebp-0x414]
30028437:	push   eax
30028438:	call   edi
3002843a:	cmp    eax,0xffffffff
3002843d:	je     0x30028448
3002843f:	inc    esi
30028440:	cmp    esi,0x400
30028446:	jl     0x300283ec
30028448:	cmp    esi,0x400
3002844e:	je     0x300283c9
30028454:	lea    eax,[ebp-0x414]
3002845a:	push   eax
3002845b:	lea    eax,[ebp-0x20c]
30028461:	push   eax
30028462:	call   DWORD PTR ds:0x300450a8
30028468:	test   eax,eax
3002846a:	je     0x300283c9
30028470:	push   0x5c
30028472:	pop    ecx
30028473:	lea    esi,[ebp-0x20c]
30028479:	cmp    WORD PTR [ebp-0x20c],cx
30028480:	jne    0x30028490
30028482:	cmp    WORD PTR [ebp-0x20a],cx
30028489:	sete   al
3002848c:	dec    al
3002848e:	and    bl,al
30028490:	cmp    WORD PTR [ebp-0x20c],0x0
30028498:	lea    edi,[ebp-0x61c]
3002849e:	je     0x30010e98
300284a4:	jmp    0x300284d6
300284a6:	cmp    ax,cx
300284a9:	jne    0x300284cd
300284ab:	mov    WORD PTR [edi],cx
300284ae:	add    edi,0x2
300284b1:	add    esi,0x2
300284b4:	test   bl,bl
300284b6:	jne    0x300284de
300284b8:	mov    eax,DWORD PTR [ebp-0x620]
300284be:	inc    eax
300284bf:	cmp    eax,0x3
300284c2:	mov    DWORD PTR [ebp-0x620],eax
300284c8:	sete   bl
300284cb:	jmp    0x300284d6
300284cd:	mov    WORD PTR [edi],ax
300284d0:	add    edi,0x2
300284d3:	add    esi,0x2
300284d6:	movzx  eax,WORD PTR [esi]
300284d9:	test   ax,ax
300284dc:	jne    0x300284a6
300284de:	xor    eax,eax
300284e0:	mov    WORD PTR [edi],ax
300284e3:	lea    eax,[ebp-0x61c]
300284e9:	push   eax
300284ea:	call   DWORD PTR ds:0x300451ec
300284f0:	cmp    eax,0xffffffff
300284f3:	jne    0x3002850c
300284f5:	push   0x0
300284f7:	lea    eax,[ebp-0x61c]
300284fd:	push   eax
300284fe:	call   DWORD PTR ds:0x300450ac
30028504:	test   eax,eax
30028506:	je     0x300283c9
3002850c:	xor    eax,eax
3002850e:	cmp    WORD PTR [esi],ax
30028511:	je     0x30010e98
30028517:	push   0x5c
30028519:	pop    ecx
3002851a:	jmp    0x300284d6
3002851c:	and    eax,0x2e007300
30028521:	add    BYTE PTR [edx+0x0],ah
30028524:	popa   
30028525:	add    BYTE PTR [ebx+0x0],ch
30028528:	add    BYTE PTR [eax],al
3002852a:	nop
3002852b:	nop
3002852c:	and    eax,0x2e007300
30028531:	add    BYTE PTR [edx+0x0],ah
30028534:	popa   
30028535:	add    BYTE PTR [ebx+0x0],ch
30028538:	sub    eax,0x64002500
3002853d:	add    BYTE PTR [eax],al
3002853f:	add    bh,bh
30028541:	jne    0x3002852f
30028543:	lea    ecx,[ebp-0x4]
30028546:	call   0x30004286
3002854b:	lea    ecx,[ebp-0x14]
3002854e:	push   ecx
3002854f:	push   eax
30028550:	lea    eax,[ebp-0x18]
30028553:	push   eax
30028554:	push   esi
30028555:	push   0x300286b0
3002855a:	push   DWORD PTR [ebp-0x8]
3002855d:	call   DWORD PTR ds:0x3004500c
30028563:	push   0xffffffff
30028565:	lea    ecx,[ebp-0x4]
30028568:	mov    esi,eax
3002856a:	call   0x30006c8c
3002856f:	test   esi,esi
30028571:	jne    0x30028588
30028573:	push   esi
30028574:	lea    ecx,[ebp-0x4]
30028577:	call   0x3000c4fd
3002857c:	mov    eax,DWORD PTR [ebp-0x4]
3002857f:	cmp    DWORD PTR [eax-0xc],esi
30028582:	je     0x300285a0
30028584:	mov    edi,esi
30028586:	jmp    0x300285a0
30028588:	mov    esi,0x30006ce8
3002858d:	push   esi
3002858e:	call   0x300042e4
30028593:	pop    ecx
30028594:	push   eax
30028595:	push   esi
30028596:	lea    ecx,[ebp-0x4]
30028599:	call   0x3000416f
3002859e:	xor    esi,esi
300285a0:	push   DWORD PTR [ebp-0x8]
300285a3:	call   DWORD PTR ds:0x30045004
300285a9:	mov    DWORD PTR [ebp-0x8],esi
300285ac:	jmp    0x3000dd68
300285b1:	mov    eax,0x104
300285b6:	push   eax
300285b7:	lea    ecx,[ebp-0x4]
300285ba:	mov    DWORD PTR [ebp-0x14],eax
300285bd:	call   0x30004286
300285c2:	lea    ecx,[ebp-0x14]
300285c5:	push   ecx
300285c6:	push   eax
300285c7:	lea    eax,[ebp-0x18]
300285ca:	push   eax
300285cb:	push   0x0
300285cd:	push   0x300286b0
300285d2:	push   DWORD PTR [ebp-0x8]
300285d5:	call   DWORD PTR ds:0x3004500c
300285db:	push   0xffffffff
300285dd:	lea    ecx,[ebp-0x4]
300285e0:	mov    edi,eax
300285e2:	call   0x30006c8c
300285e7:	test   edi,edi
300285e9:	jne    0x30028627
300285eb:	push   edi
300285ec:	lea    ecx,[ebp-0x4]
300285ef:	call   0x3000c4fd
300285f4:	lea    ecx,[esi-0x10]
300285f7:	call   0x30004017
300285fc:	mov    ebx,DWORD PTR [ebp+0xc]
300285ff:	mov    esi,0x300071f8
30028604:	mov    edi,ebx
30028606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30028607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30028608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30028609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002860a:	xor    edi,edi
3002860c:	push   0x300286d0
30028611:	lea    ecx,[ebp-0x4]
30028614:	mov    DWORD PTR [ebp+0x8],edi
30028617:	call   0x300091ce
3002861c:	test   eax,eax
3002861e:	jne    0x3002863f
30028620:	mov    esi,0x3002871c
30028625:	jmp    0x3002867c
30028627:	mov    ebx,0x30006ce8
3002862c:	push   ebx
3002862d:	call   0x300042e4
30028632:	pop    ecx
30028633:	push   eax
30028634:	push   ebx
30028635:	lea    ecx,[ebp-0x4]
30028638:	call   0x3000416f
3002863d:	jmp    0x300285f4
3002863f:	push   0x300286e4
30028644:	lea    ecx,[ebp-0x4]
30028647:	call   0x300091ce
3002864c:	test   eax,eax
3002864e:	jne    0x30028657
30028650:	mov    esi,0x3002870c
30028655:	jmp    0x3002867c
30028657:	push   0x300286f0
3002865c:	lea    ecx,[ebp-0x4]
3002865f:	call   0x300091ce
30028664:	test   eax,eax
30028666:	jne    0x3002866f
30028668:	mov    esi,0x300286fc
3002866d:	jmp    0x3002867c
3002866f:	mov    eax,DWORD PTR [ebp-0x4]
30028672:	cmp    DWORD PTR [eax-0xc],edi
30028675:	jne    0x30028685
30028677:	mov    esi,0x3002872c
3002867c:	mov    edi,ebx
3002867e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002867f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30028680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30028681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30028682:	mov    edi,DWORD PTR [ebp+0x8]
30028685:	push   0x300071f8
3002868a:	push   ebx
3002868b:	call   0x30004c93
30028690:	test   al,al
30028692:	je     0x3000de13
30028698:	mov    edi,0x80004005
3002869d:	jmp    0x3000de13
300286a2:	push   DWORD PTR [ebp-0x8]
300286a5:	call   DWORD PTR ds:0x30045004
300286ab:	jmp    0x3000de2c
300286b0:	push   esp
300286b1:	add    BYTE PTR [eax+0x0],ch
300286b4:	jb     0x300286b6
300286b6:	add    BYTE PTR gs:[ecx+0x0],ah
300286ba:	add    BYTE PTR fs:[ecx+0x0],ch
300286be:	outs   dx,BYTE PTR ds:[esi]
300286bf:	add    BYTE PTR [edi+0x0],ah
300286c2:	dec    ebp
300286c3:	add    BYTE PTR [edi+0x0],ch
300286c6:	add    BYTE PTR fs:[ebp+0x0],ah
300286ca:	ins    BYTE PTR es:[edi],dx
300286cb:	add    BYTE PTR [eax],al
300286cd:	add    BYTE PTR [eax+0x70004190],dl
300286d3:	add    BYTE PTR [ecx+0x0],ah
300286d6:	jb     0x300286d8
300286d8:	je     0x300286da
300286da:	ins    DWORD PTR es:[edi],dx
300286db:	add    BYTE PTR [ebp+0x0],ah
300286de:	outs   dx,BYTE PTR ds:[esi]
300286df:	add    BYTE PTR [eax+eax*1+0x0],dh
300286e3:	add    BYTE PTR [edx+0x0],al
300286e6:	outs   dx,DWORD PTR ds:[esi]
300286e7:	add    BYTE PTR [eax+eax*1+0x68],dh
300286eb:	add    BYTE PTR [eax],al
300286ed:	add    BYTE PTR [eax+0x72004690],dl
300286f3:	add    BYTE PTR [ebp+0x0],ah
300286f6:	add    BYTE PTR gs:[eax],al
300286f9:	add    BYTE PTR [eax+0x40832590],dl
300286ff:	inc    esi
30028700:	jo     0x300286b1
30028702:	mov    al,0x4a
30028704:	nop
30028705:	fnstcw WORD PTR [ebx+0x17]
30028708:	jns    0x300286cb
3002870a:	lods   eax,DWORD PTR ds:[esi]
3002870b:	xchg   DWORD PTR [eax],esi
3002870d:	cmp    dl,BYTE PTR [edx]
3002870f:	xchg   DWORD PTR [ebp+0x9],esi
30028712:	jge    0x30028755
30028714:	xchg   esp,eax
30028715:	push   edi
30028716:	adc    BYTE PTR [esi],al
30028718:	ins    BYTE PTR es:[edi],dx
30028719:	pop    ebx
3002871a:	imul   eax,ebx,0xca554a15
30028720:	adc    BYTE PTR [ecx+ecx*8+0x45],al
30028724:	mov    ch,0xc1
30028726:	and    dh,bl
30028728:	add    eax,0x61d39c2d
3002872d:	xor    BYTE PTR [ecx],ah
3002872f:	jb     0x300286ed
30028731:	leave  
30028732:	mov    esi,0xa216a940
30028737:	(bad)  
30028738:	pop    edi
30028739:	mov    edx,0x75ff1e09
3002873e:	adc    al,0x68
30028740:	pushf  
30028741:	in     al,0x0
30028743:	xor    bh,bh
30028745:	jne    0x30028743
30028747:	call   0x3003bfa3
3002874c:	test   eax,eax
3002874e:	je     0x3002876b
30028750:	push   DWORD PTR [ebp+0x10]
30028753:	push   0x3000d87c
30028758:	push   DWORD PTR [ebp-0x4]
3002875b:	call   0x3003bfa3
30028760:	push   ebx
30028761:	push   0x300287f4
30028766:	push   DWORD PTR [ebp-0x4]
30028769:	jmp    0x300287bc
3002876b:	lea    eax,[ebp-0x8]
3002876e:	push   eax
3002876f:	push   0x20019
30028774:	push   edi
30028775:	push   0x3002a36c
3002877a:	push   DWORD PTR [ebp-0x4]
3002877d:	call   DWORD PTR ds:0x30045008
30028783:	test   eax,eax
30028785:	jne    0x3000dfda
3002878b:	push   DWORD PTR [ebp+0x14]
3002878e:	push   0x3000e49c
30028793:	push   DWORD PTR [ebp-0x8]
30028796:	call   0x3003bfa3
3002879b:	test   eax,eax
3002879d:	je     0x3000dfda
300287a3:	push   DWORD PTR [ebp+0x10]
300287a6:	push   0x3000d87c
300287ab:	push   DWORD PTR [ebp-0x8]
300287ae:	call   0x3003bfa3
300287b3:	push   ebx
300287b4:	push   0x300287f4
300287b9:	push   DWORD PTR [ebp-0x8]
300287bc:	call   0x3003bfa3
300287c1:	jmp    0x3000dfda
300287c6:	mov    eax,DWORD PTR [ebp+0x10]
300287c9:	cmp    DWORD PTR [eax],edi
300287cb:	jne    0x300287d5
300287cd:	cmp    DWORD PTR [ebx],edi
300287cf:	je     0x3000dfe5
300287d5:	xor    edi,edi
300287d7:	inc    edi
300287d8:	jmp    0x3000dfe5
300287dd:	push   DWORD PTR [ebp-0x4]
300287e0:	call   ebx
300287e2:	jmp    0x3000e004
300287e7:	push   DWORD PTR [ebp-0x8]
300287ea:	call   ebx
300287ec:	jmp    0x3000e00e
300287f1:	nop
300287f2:	nop
300287f3:	nop
300287f4:	inc    ebx
300287f5:	add    BYTE PTR [edi+0x0],ch
300287f8:	add    BYTE PTR fs:[ebp+0x0],ah
300287fc:	inc    edx
300287fd:	add    BYTE PTR [ecx+0x0],ah
30028800:	jae    0x30028802
30028802:	add    BYTE PTR gs:[eax],al
30028805:	add    BYTE PTR [edi-0x75],dl
30028808:	mov    ecx,DWORD PTR ds:[edi]
3002880b:	test   ecx,ecx
3002880d:	je     0x30028818
3002880f:	mov    eax,DWORD PTR [ecx]
30028811:	push   ecx
30028812:	call   DWORD PTR [eax+0x8]
30028815:	and    DWORD PTR [edi],0x0
30028818:	mov    BYTE PTR [esi+0x4],0x0
3002881c:	pop    edi
3002881d:	jmp    0x30017270
30028822:	test   esi,esi
30028824:	jne    0x3002882f
30028826:	cmp    DWORD PTR [ebp-0x18],ebx
30028829:	je     0x3000debc
3002882f:	test   edi,edi
30028831:	je     0x3000debc
30028837:	push   DWORD PTR [ebp-0x24]
3002883a:	push   0x3000531c
3002883f:	push   DWORD PTR [ebp-0x30]
30028842:	push   edi
30028843:	push   DWORD PTR [ebp-0x18]
30028846:	push   esi
30028847:	call   0x3003c340
3002884c:	add    esp,0x18
3002884f:	mov    DWORD PTR [ebp-0x38],eax
30028852:	test   eax,eax
30028854:	js     0x3000debc
3002885a:	mov    eax,DWORD PTR [ebp-0x24]
3002885d:	cmp    DWORD PTR [eax],ebx
3002885f:	je     0x3000debc
30028865:	push   esi
30028866:	mov    esi,DWORD PTR ds:0x300454e8
3002886c:	call   esi
3002886e:	push   DWORD PTR [ebp-0x18]
30028871:	call   esi
30028873:	push   edi
30028874:	call   esi
30028876:	mov    eax,DWORD PTR [ebp-0x38]
30028879:	jmp    0x3000df2f
3002887e:	lea    eax,[ebp-0x20]
30028881:	push   eax
30028882:	push   edi
30028883:	call   0x3003be6b
30028888:	mov    esi,eax
3002888a:	test   esi,esi
3002888c:	js     0x300288d1
3002888e:	lea    eax,[ebp-0x2c]
30028891:	push   eax
30028892:	push   0x3002890c
30028897:	push   DWORD PTR [ebp+0x10]
3002889a:	lea    eax,[ebp-0x14]
3002889d:	push   ebx
3002889e:	push   eax
3002889f:	call   DWORD PTR ds:0x30045494
300288a5:	mov    ebx,DWORD PTR [ebp-0x20]
300288a8:	test   eax,eax
300288aa:	jns    0x300288b6
300288ac:	mov    esi,0x80050200
300288b1:	jmp    0x3000ded3
300288b6:	push   DWORD PTR [ebp-0x24]
300288b9:	mov    eax,DWORD PTR [ebp-0x2c]
300288bc:	push   DWORD PTR [ebp+0x10]
300288bf:	mov    ecx,DWORD PTR [eax]
300288c1:	push   DWORD PTR [ebp-0x30]
300288c4:	push   edi
300288c5:	push   ebx
300288c6:	push   eax
300288c7:	call   DWORD PTR [ecx+0x1c]
300288ca:	mov    esi,eax
300288cc:	jmp    0x3000df3e
300288d1:	mov    ebx,DWORD PTR [ebp-0x20]
300288d4:	jmp    0x3000ded3
300288d9:	push   ebx
300288da:	call   edi
300288dc:	jmp    0x3000df04
300288e1:	push   DWORD PTR [ebp-0x28]
300288e4:	call   edi
300288e6:	jmp    0x3000df0e
300288eb:	push   DWORD PTR [ebp-0x18]
300288ee:	call   edi
300288f0:	jmp    0x3000df18
300288f5:	push   DWORD PTR [ebp-0x1c]
300288f8:	call   edi
300288fa:	jmp    0x3000df22
300288ff:	mov    eax,DWORD PTR [ecx]
30028901:	push   ecx
30028902:	call   DWORD PTR [eax+0x8]
30028905:	jmp    0x3000df2d
3002890a:	nop
3002890b:	nop
3002890c:	dec    esp
3002890d:	and    eax,0x6d7310e4
30028912:	cmp    BYTE PTR [eax+esi*4+0x11],cl
30028916:	loopne 0x3002891c
30028918:	fwait
30028919:	or     cl,BYTE PTR cs:[edi]
3002891c:	mov    eax,esi
3002891e:	mov    DWORD PTR [ebp-0x10],eax
30028921:	jmp    0x30007d99
30028926:	mov    eax,0x80070003
3002892b:	jmp    0x30007958
30028930:	lea    eax,[ebp-0x61c]
30028936:	push   eax
30028937:	push   0x208
3002893c:	lea    eax,[ebp-0x620]
30028942:	push   eax
30028943:	push   DWORD PTR [ebp+0x18]
30028946:	lea    eax,[ebp-0x20c]
3002894c:	push   DWORD PTR [ebp-0x624]
30028952:	push   esi
30028953:	push   eax
30028954:	call   0x3003c60c
30028959:	test   eax,eax
3002895b:	jne    0x30007933
30028961:	cmp    DWORD PTR [ebp-0x624],eax
30028967:	je     0x30007933
3002896d:	lea    eax,[ebp-0x61c]
30028973:	push   eax
30028974:	push   0x208
30028979:	lea    eax,[ebp-0x620]
3002897f:	push   eax
30028980:	push   0x0
30028982:	push   0x0
30028984:	push   esi
30028985:	lea    eax,[ebp-0x20c]
3002898b:	push   eax
3002898c:	call   0x3003c60c
30028991:	jmp    0x30007933
30028996:	push   DWORD PTR [ebp+0x8]
30028999:	push   DWORD PTR [ebp+0x18]
3002899c:	call   DWORD PTR [ebp+0x14]
3002899f:	mov    esi,eax
300289a1:	jmp    0x300076f7
300289a6:	push   0x30008fc4
300289ab:	push   DWORD PTR [ebp+0xc]
300289ae:	push   esi
300289af:	call   0x3003c7b6
300289b4:	add    esp,0xc
300289b7:	jmp    0x3000786e
300289bc:	mov    ecx,esi
300289be:	lea    edx,[ecx+0x2]
300289c1:	mov    ax,WORD PTR [ecx]
300289c4:	add    ecx,0x2
300289c7:	cmp    ax,WORD PTR [ebp+0x8]
300289cb:	jne    0x300289c1
300289cd:	sub    ecx,edx
300289cf:	sar    ecx,1
300289d1:	movzx  eax,WORD PTR [esi+ecx*2-0x4]
300289d6:	cmp    eax,0x73
300289d9:	je     0x300289e7
300289db:	cmp    eax,0x53
300289de:	je     0x300289e7
300289e0:	xor    eax,eax
300289e2:	jmp    0x30007881
300289e7:	xor    eax,eax
300289e9:	push   esi
300289ea:	mov    WORD PTR [esi+ecx*2-0x4],bx
300289ef:	mov    WORD PTR [esi+ecx*2-0x2],ax
300289f4:	call   DWORD PTR ds:0x300451ec
300289fa:	cmp    eax,0xffffffff
300289fd:	jne    0x3000787e
30028a03:	jmp    0x300289e0
30028a05:	xor    eax,eax
30028a07:	mov    WORD PTR [edi],ax
30028a0a:	jmp    0x30007804
30028a0f:	mov    eax,0x80004003
30028a14:	jmp    0x30007c47
30028a19:	mov    eax,0x80004003
30028a1e:	jmp    0x30007c7a
30028a23:	mov    eax,0x80043f01
30028a28:	jmp    0x30007c7a
30028a2d:	mov    eax,0x80043f02
30028a32:	jmp    0x30007c7a
30028a37:	mov    eax,0x80043f00
30028a3c:	jmp    0x30007c1a
30028a41:	mov    ebx,DWORD PTR [ebp+0xc]
30028a44:	mov    edi,DWORD PTR [ebp+0x8]
30028a47:	mov    eax,DWORD PTR [ebp-0x1c]
30028a4a:	mov    esi,DWORD PTR [ebp-0x20]
30028a4d:	jmp    0x30019bce
30028a52:	push   DWORD PTR [ebp+0x18]
30028a55:	push   esi
30028a56:	push   ebx
30028a57:	push   edi
30028a58:	call   0x30037e1a
30028a5d:	jmp    0x30019bd6
30028a62:	or     esi,0x4
30028a65:	mov    DWORD PTR ds:0x30043c18,0x2
30028a6f:	mov    DWORD PTR ds:0x30043bf0,esi
30028a75:	jmp    0x3001ae94
30028a7a:	or     esi,0x8
30028a7d:	mov    DWORD PTR ds:0x30043c18,0x3
30028a87:	mov    DWORD PTR ds:0x30043bf0,esi
30028a8d:	jmp    0x3001aea1
30028a92:	or     esi,0x2
30028a95:	mov    DWORD PTR ds:0x30043c1c,esi
30028a9b:	jmp    0x3001aec9
30028aa0:	mov    DWORD PTR [eax],0x104b1
30028aa6:	jmp    0x3000b647
30028aab:	call   DWORD PTR ds:0x30045160
30028ab1:	mov    edi,eax
30028ab3:	jmp    0x3000b0f7
30028ab8:	push   ebx
30028ab9:	call   DWORD PTR ds:0x300454e8
30028abf:	mov    DWORD PTR [ebp-0x20],edi
30028ac2:	jmp    0x3000b0d5
30028ac7:	xor    eax,eax
30028ac9:	inc    eax
30028aca:	ret    
30028acb:	mov    esp,DWORD PTR [ebp-0x18]
30028ace:	xor    edi,edi
30028ad0:	mov    DWORD PTR [ebp-0x34],edi
30028ad3:	push   DWORD PTR [ebp+0x8]
30028ad6:	call   DWORD PTR ds:0x3004524c
30028adc:	mov    ebx,DWORD PTR [ebp-0x24]
30028adf:	push   ebx
30028ae0:	push   edi
30028ae1:	mov    esi,DWORD PTR ds:0x300451cc
30028ae7:	call   esi
30028ae9:	push   eax
30028aea:	call   DWORD PTR ds:0x300451bc
30028af0:	mov    DWORD PTR [ebp+0x8],eax
30028af3:	test   eax,eax
30028af5:	je     0x30028bfb
30028afb:	push   edi
30028afc:	lea    eax,[ebp-0x34]
30028aff:	push   eax
30028b00:	push   ebx
30028b01:	lea    eax,[ebp+0x8]
30028b04:	push   eax
30028b05:	push   DWORD PTR [ebp-0x30]
30028b08:	call   DWORD PTR ds:0x30045270
30028b0e:	test   eax,eax
30028b10:	je     0x30028bd4
30028b16:	mov    DWORD PTR [ebp-0x4],0x1
30028b1d:	mov    DWORD PTR [ebp-0x28],edi
30028b20:	mov    DWORD PTR [ebp-0x2c],edi
30028b23:	lea    eax,[ebp-0x28]
30028b26:	push   eax
30028b27:	push   DWORD PTR [ebp+0x8]
30028b2a:	push   ebx
30028b2b:	call   0x3000abcc
30028b30:	mov    DWORD PTR [ebp-0x1c],eax
30028b33:	lea    eax,[ebp-0x2c]
30028b36:	push   eax
30028b37:	push   DWORD PTR [ebp+0x8]
30028b3a:	push   ebx
30028b3b:	push   DWORD PTR [ebp-0x28]
30028b3e:	call   0x3000b148
30028b43:	mov    esi,eax
30028b45:	mov    DWORD PTR [ebp-0x1c],esi
30028b48:	test   esi,esi
30028b4a:	js     0x30028b8f
30028b4c:	push   DWORD PTR [ebp-0x2c]
30028b4f:	push   edi
30028b50:	call   DWORD PTR ds:0x300454f0
30028b56:	mov    ebx,eax
30028b58:	mov    DWORD PTR [ebp-0x20],ebx
30028b5b:	test   ebx,ebx
30028b5d:	je     0x30028b87
30028b5f:	push   ebx
30028b60:	push   DWORD PTR [ebp-0x2c]
30028b63:	push   DWORD PTR [ebp+0x8]
30028b66:	push   DWORD PTR [ebp-0x24]
30028b69:	push   edi
30028b6a:	push   DWORD PTR [ebp-0x28]
30028b6d:	call   0x3000af12
30028b72:	mov    esi,eax
30028b74:	mov    DWORD PTR [ebp-0x1c],esi
30028b77:	test   esi,esi
30028b79:	jns    0x30028b8f
30028b7b:	push   ebx
30028b7c:	call   DWORD PTR ds:0x300454e8
30028b82:	mov    DWORD PTR [ebp-0x20],edi
30028b85:	jmp    0x30028b8f
30028b87:	mov    esi,0x8007000e
30028b8c:	mov    DWORD PTR [ebp-0x1c],esi
30028b8f:	push   DWORD PTR [ebp+0x8]
30028b92:	call   DWORD PTR ds:0x3004524c
30028b98:	jmp    0x30028bcb
30028b9a:	xor    eax,eax
30028b9c:	inc    eax
30028b9d:	ret    
30028b9e:	mov    esp,DWORD PTR [ebp-0x18]
30028ba1:	push   DWORD PTR [ebp+0x8]
30028ba4:	push   0x0
30028ba6:	call   DWORD PTR ds:0x300451cc
30028bac:	push   eax
30028bad:	call   DWORD PTR ds:0x300451c4
30028bb3:	call   DWORD PTR ds:0x30045160
30028bb9:	mov    esi,eax
30028bbb:	test   esi,esi
30028bbd:	jle    0x30028bc8
30028bbf:	movzx  esi,si
30028bc2:	or     esi,0x80070000
30028bc8:	mov    DWORD PTR [ebp-0x1c],esi
30028bcb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30028bd2:	jmp    0x30028bfe
30028bd4:	push   DWORD PTR [ebp+0x8]
30028bd7:	push   edi
30028bd8:	call   esi
30028bda:	push   eax
30028bdb:	call   DWORD PTR ds:0x300451c4
30028be1:	call   DWORD PTR ds:0x30045160
30028be7:	mov    esi,eax
30028be9:	test   esi,esi
30028beb:	jle    0x30028bf6
30028bed:	movzx  esi,si
30028bf0:	or     esi,0x80070000
30028bf6:	mov    DWORD PTR [ebp-0x1c],esi
30028bf9:	jmp    0x30028bfe
30028bfb:	mov    esi,DWORD PTR [ebp-0x1c]
30028bfe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30028c05:	mov    edi,DWORD PTR [ebp-0x38]
30028c08:	jmp    0x3000b0e5
30028c0d:	call   DWORD PTR ds:0x30045160
30028c13:	mov    edi,eax
30028c15:	jmp    0x3000b0e5
30028c1a:	call   DWORD PTR ds:0x30045160
30028c20:	mov    edi,eax
30028c22:	jmp    0x3000b0ee
30028c27:	push   0x30006ce8
30028c2c:	call   DWORD PTR ds:0x300454dc
30028c32:	mov    DWORD PTR [ebp-0x20],eax
30028c35:	jmp    0x3000b0ee
30028c3a:	jg     0x30028c43
30028c3c:	mov    esi,edi
30028c3e:	jmp    0x3000b0ff
30028c43:	movzx  esi,di
30028c46:	or     esi,0x80070000
30028c4c:	jmp    0x3000b0ff
30028c51:	mov    eax,0x80004003
30028c56:	jmp    0x3000afe4
30028c5b:	cmp    DWORD PTR [ebp+0x18],esi
30028c5e:	je     0x30028c65
30028c60:	xor    eax,eax
30028c62:	mov    WORD PTR [ebx],ax
30028c65:	xor    eax,eax
30028c67:	jmp    0x3000afe2
30028c6c:	mov    eax,0x80070057
30028c71:	jmp    0x3000afe2
30028c76:	lea    ecx,[ebp+0x1c]
30028c79:	push   ecx
30028c7a:	push   eax
30028c7b:	push   edi
30028c7c:	push   DWORD PTR [ebp+0x8]
30028c7f:	call   0x3000b148
30028c84:	test   eax,eax
30028c86:	js     0x3000afe2
30028c8c:	mov    eax,DWORD PTR [ebp+0x1c]
30028c8f:	mov    ecx,DWORD PTR [ebp+0x18]
30028c92:	mov    DWORD PTR [ebp+0x1c],eax
30028c95:	mov    eax,DWORD PTR [ebp+0x14]
30028c98:	jmp    0x3000af4d
30028c9d:	xor    ecx,ecx
30028c9f:	mov    WORD PTR [ebx+eax*2],cx
30028ca3:	jmp    0x3000afe0
30028ca8:	push   ebx
30028ca9:	push   eax
30028caa:	call   0x3003ca7f
30028caf:	jmp    0x3000b6ae
30028cb4:	xor    eax,eax
30028cb6:	mov    WORD PTR [ebx+edi*2],ax
30028cba:	jmp    0x3000afe0
30028cbf:	mov    esi,0x80030302
30028cc4:	jmp    0x3000afe0
30028cc9:	xor    ecx,ecx
30028ccb:	mov    WORD PTR [ebx+eax*2],cx
30028ccf:	jmp    0x3000afd8
30028cd4:	call   DWORD PTR ds:0x30045160
30028cda:	mov    esi,eax
30028cdc:	test   esi,esi
30028cde:	jle    0x3000afe0
30028ce4:	movzx  esi,si
30028ce7:	or     esi,0x80070000
30028ced:	jmp    0x3000afe0
30028cf2:	mov    eax,0x80004003
30028cf7:	jmp    0x3000b1c3
30028cfc:	xor    eax,eax
30028cfe:	jmp    0x3000b1c0
30028d03:	mov    eax,0x80070057
30028d08:	jmp    0x3000b1c0
30028d0d:	push   DWORD PTR [ebp+0x8]
30028d10:	call   0x3003c815
30028d15:	xor    edx,edx
30028d17:	mov    esi,eax
30028d19:	inc    edx
30028d1a:	jmp    0x3000b858
30028d1f:	test   al,0x40
30028d21:	jne    0x30028d54
30028d23:	test   ebx,ebx
30028d25:	je     0x3000b872
30028d2b:	movzx  eax,al
30028d2e:	and    eax,0x3f
30028d31:	shl    edi,0x6
30028d34:	or     edi,eax
30028d36:	dec    ebx
30028d37:	jne    0x3000b873
30028d3d:	lea    eax,[edi-0x10000]
30028d43:	inc    edx
30028d44:	cmp    eax,0xfffff
30028d49:	jbe    0x3000b872
30028d4f:	jmp    0x3000b873
30028d54:	test   ebx,ebx
30028d56:	je     0x30028d59
30028d58:	inc    edx
30028d59:	test   al,al
30028d5b:	jns    0x30028d62
30028d5d:	inc    ebx
30028d5e:	add    al,al
30028d60:	js     0x30028d5d
30028d62:	movzx  edi,al
30028d65:	mov    cl,bl
30028d67:	shr    edi,cl
30028d69:	mov    ecx,DWORD PTR [ebp+0x8]
30028d6c:	dec    ebx
30028d6d:	jmp    0x3000b873
30028d72:	push   DWORD PTR [ebp+0x8]
30028d75:	call   0x3003c815
30028d7a:	mov    edx,DWORD PTR [ebp-0x8]
30028d7d:	mov    ebx,eax
30028d7f:	mov    eax,DWORD PTR [ebp+0x14]
30028d82:	mov    DWORD PTR [ebp-0x4],ebx
30028d85:	mov    ecx,esi
30028d87:	jmp    0x3000b773
30028d8c:	test   al,0x40
30028d8e:	jne    0x30028e27
30028d94:	test   edx,edx
30028d96:	je     0x30028db8
30028d98:	movzx  eax,al
30028d9b:	and    eax,0x3f
30028d9e:	shl    ebx,0x6
30028da1:	or     ebx,eax
30028da3:	dec    edx
30028da4:	mov    DWORD PTR [ebp-0x8],edx
30028da7:	jne    0x3000b7a2
30028dad:	push   ebx
30028dae:	call   0x3003c82f
30028db3:	cmp    DWORD PTR [ebp-0xc],eax
30028db6:	jle    0x30028dc2
30028db8:	mov    eax,0xfffd
30028dbd:	jmp    0x3000b799
30028dc2:	mov    eax,DWORD PTR [ebp+0x14]
30028dc5:	cmp    ebx,0xffff
30028dcb:	ja     0x30028dd2
30028dcd:	mov    WORD PTR [esi],bx
30028dd0:	jmp    0x30028e1c
30028dd2:	cmp    edi,eax
30028dd4:	jae    0x3000b7ae
30028dda:	cmp    ebx,0x10ffff
30028de0:	ja     0x30028e14
30028de2:	sub    ebx,0x10000
30028de8:	mov    eax,ebx
30028dea:	shr    eax,0xa
30028ded:	sub    eax,0x2800
30028df2:	mov    WORD PTR [esi],ax
30028df5:	push   0x2
30028df7:	pop    ecx
30028df8:	mov    eax,ebx
30028dfa:	add    esi,ecx
30028dfc:	and    eax,0x3ff
30028e01:	sub    eax,0x2400
30028e06:	add    edi,ecx
30028e08:	mov    WORD PTR [esi],ax
30028e0b:	add    esi,ecx
30028e0d:	add    edi,ecx
30028e0f:	jmp    0x3000b7a2
30028e14:	mov    ecx,0xfffd
30028e19:	mov    WORD PTR [esi],cx
30028e1c:	add    esi,0x2
30028e1f:	add    edi,0x2
30028e22:	jmp    0x3000b7a5
30028e27:	test   edx,edx
30028e29:	je     0x30028e3b
30028e2b:	mov    ecx,0xfffd
30028e30:	mov    WORD PTR [esi],cx
30028e33:	add    esi,0x2
30028e36:	add    edi,0x2
30028e39:	xor    edx,edx
30028e3b:	test   al,al
30028e3d:	jns    0x30028e44
30028e3f:	inc    edx
30028e40:	add    al,al
30028e42:	js     0x30028e3f
30028e44:	movzx  ebx,al
30028e47:	mov    cl,dl
30028e49:	shr    ebx,cl
30028e4b:	mov    DWORD PTR [ebp-0xc],edx
30028e4e:	dec    edx
30028e4f:	mov    DWORD PTR [ebp-0x8],edx
30028e52:	jmp    0x3000b7a2
30028e57:	cmp    esi,eax
30028e59:	jae    0x30028e68
30028e5b:	xor    eax,eax
30028e5d:	mov    WORD PTR [esi],ax
30028e60:	add    esi,0x2
30028e63:	jmp    0x3000b7bc
30028e68:	xor    edx,edx
30028e6a:	mov    WORD PTR [eax-0x2],dx
30028e6e:	jmp    0x3000b7bc
30028e73:	xor    ecx,ecx
30028e75:	push   ecx
30028e76:	push   ecx
30028e77:	push   0x104
30028e7c:	lea    eax,[ebp-0x108]
30028e82:	push   eax
30028e83:	push   0xffffffff
30028e85:	push   esi
30028e86:	push   ecx
30028e87:	push   ecx
30028e88:	call   DWORD PTR ds:0x30045214
30028e8e:	push   DWORD PTR [ebp-0x114]
30028e94:	neg    eax
30028e96:	push   DWORD PTR [ebp-0x118]
30028e9c:	sbb    al,al
30028e9e:	push   DWORD PTR [ebp-0x10c]
30028ea4:	and    BYTE PTR [ebp-0x5],al
30028ea7:	push   DWORD PTR [ebp-0x110]
30028ead:	lea    eax,[ebp-0x108]
30028eb3:	push   ebx
30028eb4:	push   edi
30028eb5:	push   eax
30028eb6:	call   DWORD PTR ds:0x300450bc
30028ebc:	jmp    0x3000b265
30028ec1:	mov    BYTE PTR ds:0x30044d14,0x1
30028ec8:	jmp    0x30017cde
30028ecd:	push   eax
30028ece:	call   DWORD PTR ds:0x300455b4
30028ed4:	jmp    0x30016b93
30028ed9:	mov    eax,ds:0x30043bac
30028ede:	push   eax
30028edf:	mov    ecx,DWORD PTR [eax]
30028ee1:	call   DWORD PTR [ecx+0x8]
30028ee4:	mov    BYTE PTR ds:0x30043bb0,0x0
30028eeb:	jmp    0x30016bcb
30028ef0:	mov    eax,ds:0x30043bb4
30028ef5:	push   eax
30028ef6:	mov    ecx,DWORD PTR [eax]
30028ef8:	call   DWORD PTR [ecx+0x8]
30028efb:	mov    BYTE PTR ds:0x30043bb8,0x0
30028f02:	jmp    0x30016bbd
30028f07:	push   DWORD PTR ds:0x30043ba4
30028f0d:	call   DWORD PTR ds:0x30045168
30028f13:	mov    BYTE PTR ds:0x30043ba8,0x0
30028f1a:	jmp    0x30016bd9
30028f1f:	mov    ecx,DWORD PTR [eax]
30028f21:	push   eax
30028f22:	call   DWORD PTR [ecx+0x8]
30028f25:	jmp    0x30016ba1
30028f2a:	nop
30028f2b:	nop
30028f2c:	mov    al,0x45
30028f2e:	add    al,0x30
30028f30:	add    BYTE PTR [esi+0x4],al
30028f33:	xor    BYTE PTR [ecx],dl
30028f35:	lods   eax,DWORD PTR ds:[esi]
30028f36:	aas    
30028f37:	push   ebx
30028f38:	jg     0x30028f38
30028f3a:	out    dx,al
30028f3b:	inc    ecx
30028f3c:	mov    ds:0x79678b81,eax
30028f41:	sub    al,0xd6
30028f43:	xchg   edx,eax
30028f44:	push   ss
30028f45:	or     edx,DWORD PTR [esi-0x2f850783]
30028f4b:	adc    DWORD PTR [esi-0x365fffa2],ecx
30028f51:	adc    DWORD PTR [eax],eax
30028f53:	pop    edx
30028f54:	nop
30028f55:	nop
30028f56:	nop
30028f57:	nop
30028f58:	push   ebx
30028f59:	add    BYTE PTR [edi+0x0],ch
30028f5c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30028f61:	add    BYTE PTR [ecx+0x0],ah
30028f64:	jb     0x30028f66
30028f66:	add    BYTE PTR gs:[eax+eax*1+0x50],bl
30028f6b:	add    BYTE PTR [edi+0x0],ch
30028f6e:	ins    BYTE PTR es:[edi],dx
30028f6f:	add    BYTE PTR [ecx+0x0],ch
30028f72:	arpl   WORD PTR [eax],ax
30028f74:	imul   eax,DWORD PTR [eax],0x730065
30028f7a:	pop    esp
30028f7b:	add    BYTE PTR [ebp+0x0],cl
30028f7e:	imul   eax,DWORD PTR [eax],0x720063
30028f84:	outs   dx,DWORD PTR ds:[esi]
30028f85:	add    BYTE PTR [ebx+0x0],dh
30028f88:	outs   dx,DWORD PTR ds:[esi]
30028f89:	add    BYTE PTR [esi+0x0],ah
30028f8c:	je     0x30028f8e
30028f8e:	pop    esp
30028f8f:	add    BYTE PTR [esi+0x0],dl
30028f92:	imul   eax,DWORD PTR [eax],0x750073
30028f98:	popa   
30028f99:	add    BYTE PTR [eax+eax*1+0x53],ch
30028f9d:	add    BYTE PTR [eax+eax*1+0x75],dh
30028fa1:	add    BYTE PTR [eax+eax*1+0x69],ah
30028fa5:	add    BYTE PTR [edi+0x0],ch
30028fa8:	pop    esp
30028fa9:	add    BYTE PTR [ebx+0x0],dl
30028fac:	push   ecx
30028fad:	add    BYTE PTR [ebp+0x0],cl
30028fb0:	add    BYTE PTR [eax],al
30028fb2:	nop
30028fb3:	nop
30028fb4:	dec    edi
30028fb5:	add    BYTE PTR [eax+0x0],dh
30028fb8:	je     0x30028fba
30028fba:	dec    ecx
30028fbb:	add    BYTE PTR [esi+0x0],ch
30028fbe:	add    BYTE PTR [eax],al
30028fc0:	cmp    al,0x0
30028fc2:	aas    
30028fc3:	add    BYTE PTR [eax+0x0],bh
30028fc6:	ins    DWORD PTR es:[edi],dx
30028fc7:	add    BYTE PTR [eax+eax*1+0x20],ch
30028fcb:	add    BYTE PTR [esi+0x0],dh
30028fce:	add    BYTE PTR gs:[edx+0x0],dh
30028fd2:	jae    0x30028fd4
30028fd4:	imul   eax,DWORD PTR [eax],0x6e006f
30028fda:	cmp    eax,0x31002200
30028fdf:	add    BYTE PTR [esi],ch
30028fe1:	add    BYTE PTR [eax],dh
30028fe3:	add    BYTE PTR [edx],ah
30028fe5:	add    BYTE PTR [eax],ah
30028fe7:	add    BYTE PTR [ebp+0x0],ah
30028fea:	outs   dx,BYTE PTR ds:[esi]
30028feb:	add    BYTE PTR [ebx+0x0],ah
30028fee:	outs   dx,DWORD PTR ds:[esi]
30028fef:	add    BYTE PTR [eax+eax*1+0x69],ah
30028ff3:	add    BYTE PTR [esi+0x0],ch
30028ff6:	add    BYTE PTR [di],bh
30028ff9:	add    BYTE PTR [edx],ah
30028ffb:	add    BYTE PTR [ebp+0x0],dh
30028ffe:	je     0x30029000
30029000:	data16 add BYTE PTR ds:0x36003100,ch
30029007:	add    BYTE PTR [edx],ah
30029009:	add    BYTE PTR [edi],bh
3002900b:	add    BYTE PTR [esi],bh
3002900d:	add    BYTE PTR ds:0x3c000a00,cl
30029013:	add    BYTE PTR [edi],bh
30029015:	add    BYTE PTR [eax+0x0],bh
30029018:	ins    DWORD PTR es:[edi],dx
30029019:	add    BYTE PTR [eax+eax*1+0x2d],ch
3002901d:	add    BYTE PTR [ebx+0x0],dh
30029020:	je     0x30029022
30029022:	jns    0x30029024
30029024:	ins    BYTE PTR es:[edi],dx
30029025:	add    BYTE PTR [ebp+0x0],ah
30029028:	jae    0x3002902a
3002902a:	push   0x65006500
3002902f:	add    BYTE PTR [eax+eax*1+0x20],dh
30029033:	add    BYTE PTR [eax+eax*1+0x79],dh
30029037:	add    BYTE PTR [eax+0x0],dh
3002903a:	add    BYTE PTR gs:0x74002200,bh
30029041:	add    BYTE PTR [ebp+0x0],ah
30029044:	js     0x30029046
30029046:	je     0x30029048
30029048:	das    
30029049:	add    BYTE PTR [eax+0x0],bh
3002904c:	jae    0x3002904e
3002904e:	ins    BYTE PTR es:[edi],dx
3002904f:	add    BYTE PTR [edx],ah
30029051:	add    BYTE PTR [eax],ah
30029053:	add    BYTE PTR [eax+0x0],ch
30029056:	jb     0x30029058
30029058:	add    BYTE PTR gs:[esi+0x0],ah
3002905c:	cmp    eax,0x41002200
30029061:	add    BYTE PTR [ebx+0x0],ah
30029064:	je     0x30029066
30029066:	imul   eax,DWORD PTR [eax],0x690076
3002906c:	je     0x3002906e
3002906e:	jns    0x30029070
30029070:	dec    esp
30029071:	add    BYTE PTR [edi+0x0],ch
30029074:	add    BYTE PTR ds:0x7800,ch
30029079:	add    BYTE PTR [ebx+0x0],dh
3002907c:	ins    BYTE PTR es:[edi],dx
3002907d:	add    BYTE PTR [edx],ah
3002907f:	add    BYTE PTR [edi],bh
30029081:	add    BYTE PTR [esi],bh
30029083:	add    BYTE PTR ds:0x3c000a00,cl
30029089:	add    BYTE PTR [ecx+0x0],ah
3002908c:	arpl   WORD PTR [eax],ax
3002908e:	je     0x30029090
30029090:	imul   eax,DWORD PTR [eax],0x690076
30029096:	je     0x30029098
30029098:	jns    0x3002909a
3002909a:	add    BYTE PTR ds:0xa00,cl
300290a1:	add    BYTE PTR [eax+0x49004090],dl
300290a7:	add    BYTE PTR [eax+eax*1+0x0],al
300290ab:	add    BYTE PTR [eax+0x909090],dl
300290b1:	add    BYTE PTR [eax],al
300290b3:	add    BYTE PTR [eax],al
300290b5:	add    BYTE PTR [eax],al
300290b7:	add    ah,ah
300290b9:	pop    es
300290ba:	add    BYTE PTR [eax],al
300290bc:	add    DWORD PTR [eax],eax
300290be:	add    BYTE PTR [eax],al
300290c0:	add    DWORD PTR [eax],eax
	...
300290ca:	add    BYTE PTR [eax],al
300290cc:	daa    
300290cd:	pushf  
300290ce:	cdq    
300290cf:	xchg   BYTE PTR [edx+edx*1+0x3b],ah
300290d3:	dec    esp
300290d4:	mov    bl,0x11
300290d6:	xor    eax,0xd4484f27
300290db:	fwait
300290dc:	add    al,0x0
300290de:	add    BYTE PTR [eax],al
300290e0:	push   ds
300290e1:	add    BYTE PTR [eax],al
300290e3:	add    bh,bh
300290e5:	(bad)  
300290e6:	(bad)  
300290e7:	(bad)  
300290e8:	(bad)  
300290e9:	(bad)  
300290ea:	(bad)  
300290eb:	(bad)  
300290ec:	(bad)  
300290ed:	(bad)  
300290ee:	(bad)  
300290ef:	call   FWORD PTR [esi]
300290f1:	add    BYTE PTR [eax],al
300290f3:	add    BYTE PTR [ecx],al
300290f5:	add    BYTE PTR [eax],al
300290f7:	add    ah,dl
300290f9:	leave  
300290fa:	and    BYTE PTR [edx+0x43297272],ah
30029100:	test   eax,0xf8ce174c
30029105:	pop    ds
30029106:	xor    ecx,DWORD PTR [ecx]
30029108:	add    al,0x0
3002910a:	add    BYTE PTR [eax],al
3002910c:	cmp    al,0x0
3002910e:	add    BYTE PTR [eax],al
30029110:	(bad)  
30029111:	(bad)  
30029112:	(bad)  
30029113:	(bad)  
30029114:	(bad)  
30029115:	(bad)  
30029116:	(bad)  
30029117:	(bad)  
30029118:	(bad)  
30029119:	(bad)  
3002911a:	(bad)  
3002911b:	(bad)  
3002911c:	cmp    al,0x0
3002911e:	add    BYTE PTR [eax],al
30029120:	add    eax,DWORD PTR [eax]
30029122:	add    BYTE PTR [eax],al
30029124:	inc    eax
30029125:	jmp    0x4183:0x396d1eb9
3002912c:	xchg   BYTE PTR [edx],dl
3002912e:	ret    
3002912f:	sti    
30029130:	pop    esp
30029131:	add    ah,al
30029133:	inc    esp
30029134:	add    al,0x0
30029136:	add    BYTE PTR [eax],al
30029138:	pop    edx
30029139:	add    BYTE PTR [eax],al
3002913b:	add    bh,bh
3002913d:	(bad)  
3002913e:	(bad)  
3002913f:	(bad)  
30029140:	(bad)  
30029141:	(bad)  
30029142:	(bad)  
30029143:	(bad)  
30029144:	(bad)  
30029145:	(bad)  
30029146:	(bad)  
30029147:	call   FWORD PTR [edx+0x0]
3002914a:	add    BYTE PTR [eax],al
3002914c:	add    DWORD PTR [eax],eax
3002914e:	add    BYTE PTR [eax],al
30029150:	addr16 mov eax,0x7d5aa3ee
30029156:	ret    0xb948
30029159:	xlat   BYTE PTR ds:[ebx]
3002915a:	arpl   si,ax
3002915c:	xor    BYTE PTR [ebx+0x21],ch
3002915f:	add    BYTE PTR [ebx],cl
30029161:	add    BYTE PTR [eax],al
30029163:	add    BYTE PTR [eax],al
30029165:	add    BYTE PTR [eax],al
30029167:	add    bh,bh
30029169:	(bad)  
3002916a:	(bad)  
3002916b:	(bad)  
3002916c:	(bad)  
3002916d:	(bad)  
3002916e:	(bad)  
3002916f:	(bad)  
30029170:	(bad)  
30029171:	(bad)  
30029172:	(bad)  
30029173:	push   esp
30029175:	add    DWORD PTR [eax],eax
30029177:	add    BYTE PTR [edx],al
30029179:	add    BYTE PTR [eax],al
3002917b:	add    BYTE PTR [ebx+0x5d],bh
3002917e:	outs   dx,DWORD PTR ds:[esi]
3002917f:	xchg   edi,eax
30029180:	xor    edx,ecx
30029182:	fisttp QWORD PTR [esi-0x49]
30029185:	sub    dl,BYTE PTR [ebp+0x3c77d5b0]
3002918b:	cmp    BYTE PTR [eax],al
3002918d:	add    BYTE PTR [eax],al
3002918f:	add    BYTE PTR [eax],al
30029191:	add    BYTE PTR [eax],al
30029193:	add    ah,ah
30029195:	pop    es
30029196:	add    BYTE PTR [eax],al
30029198:	add    DWORD PTR [eax],eax
3002919a:	add    BYTE PTR [eax],al
3002919c:	add    DWORD PTR [eax],eax
	...
300291a6:	add    BYTE PTR [eax],al
300291a8:	jg     0x3002918c
300291aa:	cmp    bh,BYTE PTR [ecx]
300291ac:	sar    DWORD PTR [eax],cl
300291ae:	ror    DWORD PTR [ecx-0x6c],0x21
300291b2:	loop   0x300291b6
300291b4:	jmp    0x3002916f
300291b6:	mov    ebp,0x4a0
300291bb:	add    BYTE PTR [esi],bl
300291bd:	add    BYTE PTR [eax],al
300291bf:	add    bh,bh
300291c1:	(bad)  
300291c2:	(bad)  
300291c3:	(bad)  
300291c4:	(bad)  
300291c5:	(bad)  
300291c6:	(bad)  
300291c7:	(bad)  
300291c8:	(bad)  
300291c9:	(bad)  
300291ca:	(bad)  
300291cb:	call   FWORD PTR [esi]
300291cd:	add    BYTE PTR [eax],al
300291cf:	add    BYTE PTR [ecx],al
300291d1:	add    BYTE PTR [eax],al
300291d3:	add    cl,dh
300291d5:	das    
300291d6:	pop    ss
300291d7:	bound  ecx,QWORD PTR [edi]
300291d9:	dec    esp
300291da:	cld    
300291db:	inc    eax
300291dc:	or     BYTE PTR [ebx+0x3b],0x7
300291e0:	mov    al,0x4b
300291e2:	cmp    eax,0x439
300291e7:	add    BYTE PTR [eax+eax*1],bh
300291ea:	add    BYTE PTR [eax],al
300291ec:	(bad)  
300291ed:	(bad)  
300291ee:	(bad)  
300291ef:	(bad)  
300291f0:	(bad)  
300291f1:	(bad)  
300291f2:	(bad)  
300291f3:	(bad)  
300291f4:	(bad)  
300291f5:	(bad)  
300291f6:	(bad)  
300291f7:	(bad)  
300291f8:	cmp    al,0x0
300291fa:	add    BYTE PTR [eax],al
300291fc:	add    eax,DWORD PTR [eax]
300291fe:	add    BYTE PTR [eax],al
30029200:	ja     0x30029240
30029202:	ins    DWORD PTR es:[edi],dx
30029203:	xchg   ebx,eax
30029204:	lods   al,BYTE PTR ds:[esi]
30029205:	loop   0x30029237
30029207:	inc    esp
30029208:	xchg   ebx,eax
30029209:	mov    DWORD PTR [ecx+0x1a],ebx
3002920c:	std    
3002920d:	fs aas 
3002920f:	inc    esi
30029210:	add    al,0x0
30029212:	add    BYTE PTR [eax],al
30029214:	pop    edx
30029215:	add    BYTE PTR [eax],al
30029217:	add    bh,bh
30029219:	(bad)  
3002921a:	(bad)  
3002921b:	(bad)  
3002921c:	(bad)  
3002921d:	(bad)  
3002921e:	(bad)  
3002921f:	(bad)  
30029220:	(bad)  
30029221:	(bad)  
30029222:	(bad)  
30029223:	call   FWORD PTR [edx+0x0]
30029226:	add    BYTE PTR [eax],al
30029228:	add    DWORD PTR [eax],eax
3002922a:	add    BYTE PTR [eax],al
3002922c:	sti    
3002922d:	aas    
3002922e:	push   ebx
3002922f:	pop    ss
30029230:	inc    ebx
30029231:	dec    edi
30029232:	adc    BYTE PTR [edx-0x5d],al
30029235:	repnz fnstenv [edx+ebx*8+0xbe244fd]
3002923d:	add    BYTE PTR [eax],al
3002923f:	add    BYTE PTR [eax],al
30029241:	add    BYTE PTR [eax],al
30029243:	add    bh,bh
30029245:	(bad)  
30029246:	(bad)  
30029247:	(bad)  
30029248:	(bad)  
30029249:	(bad)  
3002924a:	(bad)  
3002924b:	(bad)  
3002924c:	(bad)  
3002924d:	(bad)  
3002924e:	(bad)  
3002924f:	push   esp
30029251:	add    DWORD PTR [eax],eax
30029253:	add    BYTE PTR [edx],al
30029255:	add    BYTE PTR [eax],al
30029257:	add    BYTE PTR [esi+0x74],dl
3002925a:	push   esp
3002925b:	pop    es
3002925c:	(bad)  
3002925d:	mov    ecx,0xb2bf4c1a
30029262:	cs dec edi
30029264:	outs   dx,BYTE PTR ds:[esi]
30029265:	mov    eax,ds:0x310b9
3002926a:	add    BYTE PTR [eax],al
3002926c:	add    BYTE PTR [eax],al
3002926e:	add    BYTE PTR [eax],al
30029270:	fld    QWORD PTR [edi]
30029272:	add    BYTE PTR [eax],al
30029274:	add    DWORD PTR [eax],eax
30029276:	add    BYTE PTR [eax],al
30029278:	sldt   WORD PTR [eax]
	...
30029283:	add    BYTE PTR [eax+0x6f],ah
30029286:	inc    esi
30029287:	mov    dl,0x5e
30029289:	aad    0x97
3002928b:	dec    esp
3002928c:	stos   BYTE PTR es:[edi],al
3002928d:	cli    
3002928e:	dec    eax
3002928f:	jmp    0x3002930f
30029291:	les    esp,FWORD PTR [edi+0x15]
30029294:	add    al,0x0
30029296:	add    BYTE PTR [eax],al
30029298:	push   ds
30029299:	add    BYTE PTR [eax],al
3002929b:	add    bh,bh
3002929d:	(bad)  
3002929e:	(bad)  
3002929f:	(bad)  
300292a0:	(bad)  
300292a1:	(bad)  
300292a2:	(bad)  
300292a3:	(bad)  
300292a4:	(bad)  
300292a5:	(bad)  
300292a6:	(bad)  
300292a7:	call   FWORD PTR [esi]
300292a9:	add    BYTE PTR [eax],al
300292ab:	add    BYTE PTR [ecx],al
300292ad:	add    BYTE PTR [eax],al
300292af:	add    BYTE PTR [edi],ah
300292b1:	pushf  
300292b2:	cdq    
300292b3:	xchg   BYTE PTR [edx+edx*1+0x3b],ah
300292b7:	dec    esp
300292b8:	mov    bl,0x11
300292ba:	xor    eax,0xd4484f27
300292bf:	fwait
300292c0:	add    al,0x0
300292c2:	add    BYTE PTR [eax],al
300292c4:	cmp    al,0x0
300292c6:	add    BYTE PTR [eax],al
300292c8:	(bad)  
300292c9:	(bad)  
300292ca:	(bad)  
300292cb:	(bad)  
300292cc:	(bad)  
300292cd:	(bad)  
300292ce:	(bad)  
300292cf:	(bad)  
300292d0:	(bad)  
300292d1:	(bad)  
300292d2:	(bad)  
300292d3:	(bad)  
300292d4:	cmp    al,0x0
300292d6:	add    BYTE PTR [eax],al
300292d8:	add    eax,DWORD PTR [eax]
300292da:	add    BYTE PTR [eax],al
300292dc:	aam    0xc9
300292de:	and    BYTE PTR [edx+0x43297272],ah
300292e4:	test   eax,0xf8ce174c
300292e9:	pop    ds
300292ea:	xor    ecx,DWORD PTR [ecx]
300292ec:	or     al,0x0
300292ee:	add    BYTE PTR [eax],al
300292f0:	add    BYTE PTR [eax],al
300292f2:	add    BYTE PTR [eax],al
300292f4:	(bad)  
300292f5:	(bad)  
300292f6:	(bad)  
300292f7:	(bad)  
300292f8:	(bad)  
300292f9:	(bad)  
300292fa:	(bad)  
300292fb:	(bad)  
300292fc:	(bad)  
300292fd:	(bad)  
300292fe:	(bad)  
300292ff:	dec    DWORD PTR [ebp+0x1]
30029302:	add    BYTE PTR [eax],al
30029304:	add    al,BYTE PTR [eax]
30029306:	add    BYTE PTR [eax],al
30029308:	pop    edi
30029309:	push   esi
3002930a:	sub    ebx,DWORD PTR [edx]
3002930c:	jno    0x300292db
3002930e:	xchg   esp,eax
3002930f:	inc    edi
30029310:	mov    eax,ds:0x96ea8c15
30029315:	dec    ebp
30029316:	js     0x300292bf
30029318:	or     al,BYTE PTR [eax]
3002931a:	add    BYTE PTR [eax],al
3002931c:	add    BYTE PTR [eax],al
3002931e:	add    BYTE PTR [eax],al
30029320:	(bad)  
30029321:	(bad)  
30029322:	(bad)  
30029323:	(bad)  
30029324:	(bad)  
30029325:	(bad)  
30029326:	(bad)  
30029327:	(bad)  
30029328:	(bad)  
30029329:	(bad)  
3002932a:	(bad)  
3002932b:	push   esp
3002932d:	add    DWORD PTR [eax],eax
3002932f:	add    BYTE PTR [edx],al
30029331:	add    BYTE PTR [eax],al
30029333:	add    al,ch
30029335:	mov    esp,0x8b01a906
3002933a:	add    cl,BYTE PTR [ebx-0x4f]
3002933d:	inc    edi
3002933e:	fisttp WORD PTR [esi+ebx*8+0xb742e7d]
30029345:	add    BYTE PTR [eax],al
30029347:	add    BYTE PTR [eax],al
30029349:	add    BYTE PTR [eax],al
3002934b:	add    bh,bh
3002934d:	(bad)  
3002934e:	(bad)  
3002934f:	(bad)  
30029350:	(bad)  
30029351:	(bad)  
30029352:	(bad)  
30029353:	(bad)  
30029354:	(bad)  
30029355:	(bad)  
30029356:	(bad)  
30029357:	push   esp
30029359:	add    DWORD PTR [eax],eax
3002935b:	add    BYTE PTR [edx],al
3002935d:	add    BYTE PTR [eax],al
3002935f:	add    BYTE PTR [esi+0x4c],ch
30029362:	popa   
30029363:	inc    esp
30029364:	jo     0x30029335
30029366:	xor    DWORD PTR [ecx-0x7c],ecx
30029369:	or     ebx,DWORD PTR [ecx]
3002936b:	dec    edx
3002936c:	add    BYTE PTR [esi+0x3eee7],dl
30029372:	add    BYTE PTR [eax],al
30029374:	add    BYTE PTR [eax],al
30029376:	add    BYTE PTR [eax],al
30029378:	fld    QWORD PTR [edi]
3002937a:	add    BYTE PTR [eax],al
3002937c:	add    DWORD PTR [eax],eax
3002937e:	add    BYTE PTR [eax],al
30029380:	sldt   WORD PTR [eax]
	...
3002938b:	add    BYTE PTR [eax+0x6f],ah
3002938e:	inc    esi
3002938f:	mov    dl,0x5e
30029391:	aad    0x97
30029393:	dec    esp
30029394:	stos   BYTE PTR es:[edi],al
30029395:	cli    
30029396:	dec    eax
30029397:	jmp    0x30029417
30029399:	les    esp,FWORD PTR [edi+0x15]
3002939c:	add    al,0x0
3002939e:	add    BYTE PTR [eax],al
300293a0:	push   ds
300293a1:	add    BYTE PTR [eax],al
300293a3:	add    bh,bh
300293a5:	(bad)  
300293a6:	(bad)  
300293a7:	(bad)  
300293a8:	(bad)  
300293a9:	(bad)  
300293aa:	(bad)  
300293ab:	(bad)  
300293ac:	(bad)  
300293ad:	(bad)  
300293ae:	(bad)  
300293af:	call   FWORD PTR [esi]
300293b1:	add    BYTE PTR [eax],al
300293b3:	add    BYTE PTR [ecx],al
300293b5:	add    BYTE PTR [eax],al
300293b7:	add    BYTE PTR [eax-0x16],al
300293ba:	mov    ecx,0x83396d1e
300293bf:	inc    ecx
300293c0:	xchg   BYTE PTR [edx],dl
300293c2:	ret    
300293c3:	sti    
300293c4:	pop    esp
300293c5:	add    ah,al
300293c7:	inc    esp
300293c8:	add    al,0x0
300293ca:	add    BYTE PTR [eax],al
300293cc:	cmp    al,0x0
300293ce:	add    BYTE PTR [eax],al
300293d0:	(bad)  
300293d1:	(bad)  
300293d2:	(bad)  
300293d3:	(bad)  
300293d4:	(bad)  
300293d5:	(bad)  
300293d6:	(bad)  
300293d7:	(bad)  
300293d8:	(bad)  
300293d9:	(bad)  
300293da:	(bad)  
300293db:	(bad)  
300293dc:	cmp    al,0x0
300293de:	add    BYTE PTR [eax],al
300293e0:	add    eax,DWORD PTR [eax]
300293e2:	add    BYTE PTR [eax],al
300293e4:	addr16 mov eax,0x7d5aa3ee
300293ea:	ret    0xb948
300293ed:	xlat   BYTE PTR ds:[ebx]
300293ee:	arpl   si,ax
300293f0:	xor    BYTE PTR [ebx+0x21],ch
300293f3:	add    BYTE PTR [eax+eax*1],cl
300293f6:	add    BYTE PTR [eax],al
300293f8:	add    BYTE PTR [eax],al
300293fa:	add    BYTE PTR [eax],al
300293fc:	(bad)  
300293fd:	(bad)  
300293fe:	(bad)  
300293ff:	(bad)  
30029400:	(bad)  
30029401:	(bad)  
30029402:	(bad)  
30029403:	(bad)  
30029404:	(bad)  
30029405:	(bad)  
30029406:	(bad)  
30029407:	dec    DWORD PTR [ebp+0x1]
3002940a:	add    BYTE PTR [eax],al
3002940c:	add    al,BYTE PTR [eax]
3002940e:	add    BYTE PTR [eax],al
30029410:	call   0xebc0:0xac1813ee
30029417:	dec    edx
30029418:	xchg   edi,eax
30029419:	call   0x9c66ae0e
3002941e:	enter  0xa21,0x0
30029422:	add    BYTE PTR [eax],al
30029424:	add    BYTE PTR [eax],al
30029426:	add    BYTE PTR [eax],al
30029428:	(bad)  
30029429:	(bad)  
3002942a:	(bad)  
3002942b:	(bad)  
3002942c:	(bad)  
3002942d:	(bad)  
3002942e:	(bad)  
3002942f:	(bad)  
30029430:	(bad)  
30029431:	(bad)  
30029432:	(bad)  
30029433:	push   esp
30029435:	add    DWORD PTR [eax],eax
30029437:	add    BYTE PTR [edx],al
30029439:	add    BYTE PTR [eax],al
3002943b:	add    cl,cl
3002943d:	(bad)  
3002943e:	cmc    
3002943f:	jns    0x3002943d
30029441:	pop    ebp
30029442:	outs   dx,BYTE PTR ds:[esi]
30029443:	dec    ebx
30029444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30029445:	sti    
30029446:	stos   DWORD PTR es:[edi],eax
30029447:	dec    ecx
30029448:	in     eax,0xb6
3002944a:	push   ebp
3002944b:	sahf   
3002944c:	or     eax,DWORD PTR [eax]
3002944e:	add    BYTE PTR [eax],al
30029450:	add    BYTE PTR [eax],al
30029452:	add    BYTE PTR [eax],al
30029454:	(bad)  
30029455:	(bad)  
30029456:	(bad)  
30029457:	(bad)  
30029458:	(bad)  
30029459:	(bad)  
3002945a:	(bad)  
3002945b:	(bad)  
3002945c:	(bad)  
3002945d:	(bad)  
3002945e:	(bad)  
3002945f:	push   esp
30029461:	add    DWORD PTR [eax],eax
30029463:	add    BYTE PTR [edx],al
30029465:	add    BYTE PTR [eax],al
30029467:	add    BYTE PTR [ebp-0x7095581d],bl
3002946d:	pop    ecx
3002946e:	ror    DWORD PTR [esi+eax*4-0x47],cl
30029472:	rcr    ecx,cl
30029474:	jle    0x300294e6
30029476:	mov    ch,0x19
30029478:	add    eax,DWORD PTR [eax]
3002947a:	add    BYTE PTR [eax],al
3002947c:	add    BYTE PTR [eax],al
3002947e:	add    BYTE PTR [eax],al
30029480:	fld    QWORD PTR [edi]
30029482:	add    BYTE PTR [eax],al
30029484:	add    DWORD PTR [eax],eax
30029486:	add    BYTE PTR [eax],al
30029488:	sldt   WORD PTR [eax]
	...
30029493:	add    BYTE PTR [eax+0x6f],ah
30029496:	inc    esi
30029497:	mov    dl,0x5e
30029499:	aad    0x97
3002949b:	dec    esp
3002949c:	stos   BYTE PTR es:[edi],al
3002949d:	cli    
3002949e:	dec    eax
3002949f:	jmp    0x3002951f
300294a1:	les    esp,FWORD PTR [edi+0x15]
300294a4:	add    al,0x0
300294a6:	add    BYTE PTR [eax],al
300294a8:	push   ds
300294a9:	add    BYTE PTR [eax],al
300294ab:	add    bh,bh
300294ad:	(bad)  
300294ae:	(bad)  
300294af:	(bad)  
300294b0:	(bad)  
300294b1:	(bad)  
300294b2:	(bad)  
300294b3:	(bad)  
300294b4:	(bad)  
300294b5:	(bad)  
300294b6:	(bad)  
300294b7:	call   FWORD PTR [esi]
300294b9:	add    BYTE PTR [eax],al
300294bb:	add    BYTE PTR [ecx],al
300294bd:	add    BYTE PTR [eax],al
300294bf:	add    BYTE PTR [ebx+0x5d],bh
300294c2:	outs   dx,DWORD PTR ds:[esi]
300294c3:	xchg   edi,eax
300294c4:	xor    edx,ecx
300294c6:	fisttp QWORD PTR [esi-0x49]
300294c9:	sub    dl,BYTE PTR [ebp+0x3c77d5b0]
300294cf:	cmp    BYTE PTR [eax+eax*1],al
300294d2:	add    BYTE PTR [eax],al
300294d4:	cmp    al,0x0
300294d6:	add    BYTE PTR [eax],al
300294d8:	(bad)  
300294d9:	(bad)  
300294da:	(bad)  
300294db:	(bad)  
300294dc:	(bad)  
300294dd:	(bad)  
300294de:	(bad)  
300294df:	(bad)  
300294e0:	(bad)  
300294e1:	(bad)  
300294e2:	(bad)  
300294e3:	(bad)  
300294e4:	cmp    al,0x0
300294e6:	add    BYTE PTR [eax],al
300294e8:	add    eax,DWORD PTR [eax]
300294ea:	add    BYTE PTR [eax],al
300294ec:	jg     0x300294d0
300294ee:	cmp    bh,BYTE PTR [ecx]
300294f0:	sar    DWORD PTR [eax],cl
300294f2:	ror    DWORD PTR [ecx-0x6c],0x21
300294f6:	loop   0x300294fa
300294f8:	jmp    0x300294b3
300294fa:	mov    ebp,0x6a0
300294ff:	add    BYTE PTR [eax],al
30029501:	add    BYTE PTR [eax],al
30029503:	add    bh,bh
30029505:	(bad)  
30029506:	(bad)  
30029507:	(bad)  
30029508:	(bad)  
30029509:	(bad)  
3002950a:	(bad)  
3002950b:	(bad)  
3002950c:	(bad)  
3002950d:	(bad)  
3002950e:	(bad)  
3002950f:	jmp    DWORD PTR [eax+eax*1+0x0]
30029513:	add    BYTE PTR [edx],al
30029515:	add    BYTE PTR [eax],al
30029517:	add    cl,dl
30029519:	int3   
3002951a:	fistp  QWORD PTR [ecx-0x4b]
3002951d:	dec    edi
3002951e:	pop    edi
3002951f:	inc    edx
30029520:	mov    bl,0x3a
30029522:	cmp    al,0x37
30029524:	or     ebx,DWORD PTR [esi]
30029526:	(bad)  
30029527:	pop    ss
30029528:	or     al,0x0
3002952a:	add    BYTE PTR [eax],al
3002952c:	add    BYTE PTR [eax],al
3002952e:	add    BYTE PTR [eax],al
30029530:	(bad)  
30029531:	(bad)  
30029532:	(bad)  
30029533:	(bad)  
30029534:	(bad)  
30029535:	(bad)  
30029536:	(bad)  
30029537:	(bad)  
30029538:	(bad)  
30029539:	(bad)  
3002953a:	(bad)  
3002953b:	dec    DWORD PTR [ebp+0x1]
3002953e:	add    BYTE PTR [eax],al
30029540:	add    al,BYTE PTR [eax]
30029542:	add    BYTE PTR [eax],al
30029544:	scas   al,BYTE PTR es:[edi]
30029545:	mov    ebp,DWORD PTR [eax+0x23]
30029548:	xchg   DWORD PTR [edx+0x3d],ecx
3002954b:	dec    ecx
3002954c:	mov    ds:0x32a9ddda,al
30029551:	xor    al,0x5c
30029553:	popa   
30029554:	or     al,BYTE PTR [eax]
30029556:	add    BYTE PTR [eax],al
30029558:	add    BYTE PTR [eax],al
3002955a:	add    BYTE PTR [eax],al
3002955c:	(bad)  
3002955d:	(bad)  
3002955e:	(bad)  
3002955f:	(bad)  
30029560:	(bad)  
30029561:	(bad)  
30029562:	(bad)  
30029563:	(bad)  
30029564:	(bad)  
30029565:	(bad)  
30029566:	(bad)  
30029567:	push   esp
30029569:	add    DWORD PTR [eax],eax
3002956b:	add    BYTE PTR [edx],al
3002956d:	add    BYTE PTR [eax],al
3002956f:	add    cl,bh
30029571:	ins    BYTE PTR es:[edi],dx
30029572:	test   eax,0xff716e55
30029577:	inc    edi
30029578:	mov    ds:0x1d86a193,al
3002957d:	ins    BYTE PTR es:[edi],dx
3002957e:	xchg   edi,eax
3002957f:	jo     0x3002958b
30029581:	add    BYTE PTR [eax],al
30029583:	add    BYTE PTR [eax],al
30029585:	add    BYTE PTR [eax],al
30029587:	add    bh,bh
30029589:	(bad)  
3002958a:	(bad)  
3002958b:	(bad)  
3002958c:	(bad)  
3002958d:	(bad)  
3002958e:	(bad)  
3002958f:	(bad)  
30029590:	(bad)  
30029591:	(bad)  
30029592:	(bad)  
30029593:	push   esp
30029595:	add    DWORD PTR [eax],eax
30029597:	add    BYTE PTR [edx],al
30029599:	add    BYTE PTR [eax],al
3002959b:	add    BYTE PTR [edi-0x3e],al
3002959e:	popa   
3002959f:	dec    esp
300295a0:	pusha  
300295a1:	fcom   QWORD PTR [eax+0x46]
300295a4:	mov    edi,0xf5fadab6
300295a9:	cmp    bl,BYTE PTR [edi+0x60]
300295ac:	or     eax,DWORD PTR [eax]
300295ae:	add    BYTE PTR [eax],al
300295b0:	add    BYTE PTR [eax],al
300295b2:	add    BYTE PTR [eax],al
300295b4:	(bad)  
300295b5:	(bad)  
300295b6:	(bad)  
300295b7:	(bad)  
300295b8:	(bad)  
300295b9:	(bad)  
300295ba:	(bad)  
300295bb:	(bad)  
300295bc:	(bad)  
300295bd:	(bad)  
300295be:	(bad)  
300295bf:	push   esp
300295c1:	add    DWORD PTR [eax],eax
300295c3:	add    BYTE PTR [edx],al
300295c5:	add    BYTE PTR [eax],al
300295c7:	add    BYTE PTR [ecx],al
300295c9:	jge    0x3002961d
300295cb:	xor    ebp,DWORD PTR [ebx-0x52bfa047]
300295d1:	loop   0x300295fa
300295d3:	dec    edx
300295d4:	cmc    
300295d5:	in     al,dx
300295d6:	retf   
300295d7:	stc    
300295d8:	or     eax,DWORD PTR [eax]
300295da:	add    BYTE PTR [eax],al
300295dc:	add    BYTE PTR [eax],al
300295de:	add    BYTE PTR [eax],al
300295e0:	(bad)  
300295e1:	(bad)  
300295e2:	(bad)  
300295e3:	(bad)  
300295e4:	(bad)  
300295e5:	(bad)  
300295e6:	(bad)  
300295e7:	(bad)  
300295e8:	(bad)  
300295e9:	(bad)  
300295ea:	(bad)  
300295eb:	push   esp
300295ed:	add    DWORD PTR [eax],eax
300295ef:	add    BYTE PTR [edx],al
300295f1:	add    BYTE PTR [eax],al
300295f3:	add    BYTE PTR [ebx+0x30],al
300295f6:	stos   DWORD PTR es:[edi],eax
300295f7:	je     0x3002958c
300295f9:	inc    eax
300295fa:	push   esp
300295fb:	inc    esi
300295fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300295fd:	aad    0x92
300295ff:	adc    DWORD PTR [ebp-0x34],0xfffffffd
30029603:	mov    ch,0xb
30029605:	add    BYTE PTR [eax],al
30029607:	add    BYTE PTR [eax],al
30029609:	add    BYTE PTR [eax],al
3002960b:	add    bh,bh
3002960d:	(bad)  
3002960e:	(bad)  
3002960f:	(bad)  
30029610:	(bad)  
30029611:	(bad)  
30029612:	(bad)  
30029613:	(bad)  
30029614:	(bad)  
30029615:	(bad)  
30029616:	(bad)  
30029617:	push   esp
30029619:	add    DWORD PTR [eax],eax
3002961b:	add    BYTE PTR [edx],al
3002961d:	add    BYTE PTR [eax],al
3002961f:	add    BYTE PTR [edi+0x1173f5b3],bh
30029625:	call   0x61a0d7ee
3002962a:	sbb    ebx,DWORD PTR [eax*2+0xb46f056]
30029631:	add    BYTE PTR [eax],al
30029633:	add    BYTE PTR [eax],al
30029635:	add    BYTE PTR [eax],al
30029637:	add    bh,bh
30029639:	(bad)  
3002963a:	(bad)  
3002963b:	(bad)  
3002963c:	(bad)  
3002963d:	(bad)  
3002963e:	(bad)  
3002963f:	(bad)  
30029640:	(bad)  
30029641:	(bad)  
30029642:	(bad)  
30029643:	push   esp
30029645:	add    DWORD PTR [eax],eax
30029647:	add    BYTE PTR [edx],al
30029649:	add    BYTE PTR [eax],al
3002964b:	add    BYTE PTR [edi+eax*2-0x1b],ah
3002964f:	add    edx,DWORD PTR [edx]
30029651:	push   ebx
30029652:	jp     0x30029699
30029654:	stos   DWORD PTR es:[edi],eax
30029655:	lahf   
30029656:	jecxz  0x30029669
30029658:	mov    edi,0x3c186ab
3002965d:	add    BYTE PTR [eax],al
3002965f:	add    BYTE PTR [eax],al
30029661:	add    BYTE PTR [eax],al
30029663:	add    ch,bl
30029665:	pop    es
30029666:	add    BYTE PTR [eax],al
30029668:	add    DWORD PTR [eax],eax
3002966a:	add    BYTE PTR [eax],al
3002966c:	sldt   WORD PTR [eax]
	...
30029677:	add    BYTE PTR [eax+0x6f],ah
3002967a:	inc    esi
3002967b:	mov    dl,0x5e
3002967d:	aad    0x97
3002967f:	dec    esp
30029680:	stos   BYTE PTR es:[edi],al
30029681:	cli    
30029682:	dec    eax
30029683:	jmp    0x30029703
30029685:	les    esp,FWORD PTR [edi+0x15]
30029688:	or     BYTE PTR [eax],al
3002968a:	add    BYTE PTR [eax],al
3002968c:	add    BYTE PTR [eax],al
3002968e:	add    BYTE PTR [eax],al
30029690:	(bad)  
30029691:	(bad)  
30029692:	(bad)  
30029693:	(bad)  
30029694:	(bad)  
30029695:	(bad)  
30029696:	(bad)  
30029697:	(bad)  
30029698:	(bad)  
30029699:	(bad)  
3002969a:	(bad)  
3002969b:	jmp    DWORD PTR [eax+eax*1+0x0]
3002969f:	add    BYTE PTR [eax],al
300296a1:	add    BYTE PTR [eax],al
300296a3:	add    BYTE PTR [ebp-0x6e717c49],ch
300296a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
300296aa:	mov    bh,0x4b
300296ac:	xchg   ebx,eax
300296ad:	xor    eax,0xeeda9bfc
300296b2:	sbb    DWORD PTR [esi],esi
300296b4:	add    eax,DWORD PTR [eax]
300296b6:	add    BYTE PTR [eax],al
300296b8:	add    BYTE PTR [eax],al
300296ba:	add    BYTE PTR [eax],al
300296bc:	fld    QWORD PTR [edi]
300296be:	add    BYTE PTR [eax],al
300296c0:	add    DWORD PTR [eax],eax
300296c2:	add    BYTE PTR [eax],al
300296c4:	sldt   WORD PTR [eax]
	...
300296cf:	add    BYTE PTR [eax+0x6f],ah
300296d2:	inc    esi
300296d3:	mov    dl,0x5e
300296d5:	aad    0x97
300296d7:	dec    esp
300296d8:	stos   BYTE PTR es:[edi],al
300296d9:	cli    
300296da:	dec    eax
300296db:	jmp    0x3002975b
300296dd:	les    esp,FWORD PTR [edi+0x15]
300296e0:	or     BYTE PTR [eax],al
300296e2:	add    BYTE PTR [eax],al
300296e4:	add    BYTE PTR [eax],al
300296e6:	add    BYTE PTR [eax],al
300296e8:	(bad)  
300296e9:	(bad)  
300296ea:	(bad)  
300296eb:	(bad)  
300296ec:	(bad)  
300296ed:	(bad)  
300296ee:	(bad)  
300296ef:	(bad)  
300296f0:	(bad)  
300296f1:	(bad)  
300296f2:	(bad)  
300296f3:	jmp    DWORD PTR [eax+eax*1+0x0]
300296f7:	add    BYTE PTR [eax],al
300296f9:	add    BYTE PTR [eax],al
300296fb:	add    BYTE PTR [edx+ebx*1+0x65],ch
300296ff:	hlt    
30029700:	iret   
30029701:	pushf  
30029702:	and    BYTE PTR [edi-0x67],cl
30029705:	(bad)  
30029706:	sbb    eax,0xb4dd7787
3002970b:	aad    0x3
3002970d:	add    BYTE PTR [eax],al
3002970f:	add    BYTE PTR [eax],al
30029711:	add    BYTE PTR [eax],al
30029713:	add    ch,bl
30029715:	pop    es
30029716:	add    BYTE PTR [eax],al
30029718:	add    DWORD PTR [eax],eax
3002971a:	add    BYTE PTR [eax],al
3002971c:	sldt   WORD PTR [eax]
	...
30029727:	add    BYTE PTR [eax+0x6f],ah
3002972a:	inc    esi
3002972b:	mov    dl,0x5e
3002972d:	aad    0x97
3002972f:	dec    esp
30029730:	stos   BYTE PTR es:[edi],al
30029731:	cli    
30029732:	dec    eax
30029733:	jmp    0x300297b3
30029735:	les    esp,FWORD PTR [edi+0x15]
30029738:	or     BYTE PTR [eax],al
3002973a:	add    BYTE PTR [eax],al
3002973c:	add    BYTE PTR [eax],al
3002973e:	add    BYTE PTR [eax],al
30029740:	(bad)  
30029741:	(bad)  
30029742:	(bad)  
30029743:	(bad)  
30029744:	(bad)  
30029745:	(bad)  
30029746:	(bad)  
30029747:	(bad)  
30029748:	(bad)  
30029749:	(bad)  
3002974a:	(bad)  
3002974b:	jmp    DWORD PTR [eax+eax*1+0x0]
3002974f:	add    BYTE PTR [eax],al
30029751:	add    BYTE PTR [eax],al
30029753:	add    BYTE PTR [edx],cl
30029755:	lods   al,BYTE PTR ds:[esi]
30029756:	out    dx,eax
30029757:	ins    BYTE PTR es:[edi],dx
30029758:	gs loope 0x300297d3
3002975b:	dec    esp
3002975c:	mov    DWORD PTR [ebx+0x7],ebp
3002975f:	retf   0xb19b
30029762:	lock sbb BYTE PTR [ebx],al
30029765:	add    BYTE PTR [eax],al
30029767:	add    BYTE PTR [eax],al
30029769:	add    BYTE PTR [eax],al
3002976b:	add    ch,bl
3002976d:	pop    es
3002976e:	add    BYTE PTR [eax],al
30029770:	add    DWORD PTR [eax],eax
30029772:	add    BYTE PTR [eax],al
30029774:	sldt   WORD PTR [eax]
	...
3002977f:	add    BYTE PTR [eax+0x6f],ah
30029782:	inc    esi
30029783:	mov    dl,0x5e
30029785:	aad    0x97
30029787:	dec    esp
30029788:	stos   BYTE PTR es:[edi],al
30029789:	cli    
3002978a:	dec    eax
3002978b:	jmp    0x3002980b
3002978d:	les    esp,FWORD PTR [edi+0x15]
30029790:	or     BYTE PTR [eax],al
30029792:	add    BYTE PTR [eax],al
30029794:	add    BYTE PTR [eax],al
30029796:	add    BYTE PTR [eax],al
30029798:	(bad)  
30029799:	(bad)  
3002979a:	(bad)  
3002979b:	(bad)  
3002979c:	(bad)  
3002979d:	(bad)  
3002979e:	(bad)  
3002979f:	(bad)  
300297a0:	(bad)  
300297a1:	(bad)  
300297a2:	(bad)  
300297a3:	jmp    DWORD PTR [eax+eax*1+0x0]
300297a7:	add    BYTE PTR [eax],al
300297a9:	add    BYTE PTR [eax],al
300297ab:	add    bh,cl
300297ad:	sub    BYTE PTR [edi+0x3c],al
300297b0:	xchg   ebp,eax
300297b1:	int    0x2
300297b3:	inc    edi
300297b4:	lods   eax,DWORD PTR ds:[esi]
300297b5:	lock jp 0x3002981a
300297b8:	mov    BYTE PTR [ecx+0x39255],ah
300297be:	add    BYTE PTR [eax],al
300297c0:	add    BYTE PTR [eax],al
300297c2:	add    BYTE PTR [eax],al
300297c4:	fld    QWORD PTR [edi]
300297c6:	add    BYTE PTR [eax],al
300297c8:	add    DWORD PTR [eax],eax
300297ca:	add    BYTE PTR [eax],al
300297cc:	sldt   WORD PTR [eax]
	...
300297d7:	add    BYTE PTR [eax+0x6f],ah
300297da:	inc    esi
300297db:	mov    dl,0x5e
300297dd:	aad    0x97
300297df:	dec    esp
300297e0:	stos   BYTE PTR es:[edi],al
300297e1:	cli    
300297e2:	dec    eax
300297e3:	jmp    0x30029863
300297e5:	les    esp,FWORD PTR [edi+0x15]
300297e8:	add    al,0x0
300297ea:	add    BYTE PTR [eax],al
300297ec:	pop    edx
300297ed:	add    BYTE PTR [eax],al
300297ef:	add    bh,bh
300297f1:	(bad)  
300297f2:	(bad)  
300297f3:	(bad)  
300297f4:	(bad)  
300297f5:	(bad)  
300297f6:	(bad)  
300297f7:	(bad)  
300297f8:	(bad)  
300297f9:	(bad)  
300297fa:	(bad)  
300297fb:	call   FWORD PTR [edx+0x0]
300297fe:	add    BYTE PTR [eax],al
30029800:	add    DWORD PTR [eax],eax
30029802:	add    BYTE PTR [eax],al
30029804:	ja     0x30029844
30029806:	ins    DWORD PTR es:[edi],dx
30029807:	xchg   ebx,eax
30029808:	lods   al,BYTE PTR ds:[esi]
30029809:	loop   0x3002983b
3002980b:	inc    esp
3002980c:	xchg   ebx,eax
3002980d:	mov    DWORD PTR [ecx+0x1a],ebx
30029810:	std    
30029811:	fs aas 
30029813:	inc    esi
30029814:	or     al,0x0
30029816:	add    BYTE PTR [eax],al
30029818:	add    BYTE PTR [eax],al
3002981a:	add    BYTE PTR [eax],al
3002981c:	(bad)  
3002981d:	(bad)  
3002981e:	(bad)  
3002981f:	(bad)  
30029820:	(bad)  
30029821:	(bad)  
30029822:	(bad)  
30029823:	(bad)  
30029824:	(bad)  
30029825:	(bad)  
30029826:	(bad)  
30029827:	dec    DWORD PTR [ebp+0x1]
3002982a:	add    BYTE PTR [eax],al
3002982c:	add    al,BYTE PTR [eax]
3002982e:	add    BYTE PTR [eax],al
30029830:	fisub  DWORD PTR [ebx+eax*2]
30029833:	mov    ebp,0x46018ea5
30029838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
30029839:	arpl   WORD PTR cs:[ebx-0x7],sp
3002983d:	mov    esp,0xaf1c5
30029842:	add    BYTE PTR [eax],al
30029844:	add    BYTE PTR [eax],al
30029846:	add    BYTE PTR [eax],al
30029848:	(bad)  
30029849:	(bad)  
3002984a:	(bad)  
3002984b:	(bad)  
3002984c:	(bad)  
3002984d:	(bad)  
3002984e:	(bad)  
3002984f:	(bad)  
30029850:	(bad)  
30029851:	(bad)  
30029852:	(bad)  
30029853:	push   esp
30029855:	add    DWORD PTR [eax],eax
30029857:	add    BYTE PTR [edx],al
30029859:	add    BYTE PTR [eax],al
3002985b:	add    bh,ah
3002985d:	add    DWORD PTR [ecx-0x22f3f659],eax
30029863:	inc    edi
30029864:	scas   al,BYTE PTR es:[edi]
30029865:	pop    ebp
30029866:	test   al,0xcb
30029868:	cmp    esi,eax
3002986a:	xchg   ebp,eax
3002986b:	push   edx
3002986c:	or     eax,DWORD PTR [eax]
3002986e:	add    BYTE PTR [eax],al
30029870:	add    BYTE PTR [eax],al
30029872:	add    BYTE PTR [eax],al
30029874:	(bad)  
30029875:	(bad)  
30029876:	(bad)  
30029877:	(bad)  
30029878:	(bad)  
30029879:	(bad)  
3002987a:	(bad)  
3002987b:	(bad)  
3002987c:	(bad)  
3002987d:	(bad)  
3002987e:	(bad)  
3002987f:	push   esp
30029881:	add    DWORD PTR [eax],eax
30029883:	add    BYTE PTR [edx],al
30029885:	add    BYTE PTR [eax],al
30029887:	add    cl,dh
30029889:	nop
3002988a:	cli    
3002988b:	push   ecx
3002988c:	xlat   BYTE PTR ds:[ebx]
3002988d:	(bad)  
3002988e:	sub    BYTE PTR [esi-0x78],al
30029891:	push   0x2f
30029893:	popf   
30029894:	dec    ebx
30029895:	mov    ds:0xc0328,eax
3002989a:	add    BYTE PTR [eax],al
3002989c:	add    BYTE PTR [eax],al
3002989e:	add    BYTE PTR [eax],al
300298a0:	(bad)  
300298a1:	(bad)  
300298a2:	(bad)  
300298a3:	(bad)  
300298a4:	(bad)  
300298a5:	(bad)  
300298a6:	(bad)  
300298a7:	(bad)  
300298a8:	(bad)  
300298a9:	(bad)  
300298aa:	(bad)  
300298ab:	dec    DWORD PTR [ebp+0x1]
300298ae:	add    BYTE PTR [eax],al
300298b0:	add    al,BYTE PTR [eax]
300298b2:	add    BYTE PTR [eax],al
300298b4:	call   0xebc0:0xac1813ee
300298bb:	dec    edx
300298bc:	xchg   edi,eax
300298bd:	call   0x9c66b2b2
300298c2:	enter  0xa21,0x0
300298c6:	add    BYTE PTR [eax],al
300298c8:	add    BYTE PTR [eax],al
300298ca:	add    BYTE PTR [eax],al
300298cc:	(bad)  
300298cd:	(bad)  
300298ce:	(bad)  
300298cf:	(bad)  
300298d0:	(bad)  
300298d1:	(bad)  
300298d2:	(bad)  
300298d3:	(bad)  
300298d4:	(bad)  
300298d5:	(bad)  
300298d6:	(bad)  
300298d7:	push   esp
300298d9:	add    DWORD PTR [eax],eax
300298db:	add    BYTE PTR [edx],al
300298dd:	add    BYTE PTR [eax],al
300298df:	add    cl,cl
300298e1:	(bad)  
300298e2:	cmc    
300298e3:	jns    0x300298e1
300298e5:	pop    ebp
300298e6:	outs   dx,BYTE PTR ds:[esi]
300298e7:	dec    ebx
300298e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300298e9:	sti    
300298ea:	stos   DWORD PTR es:[edi],eax
300298eb:	dec    ecx
300298ec:	in     eax,0xb6
300298ee:	push   ebp
300298ef:	sahf   
300298f0:	or     eax,DWORD PTR [eax]
300298f2:	add    BYTE PTR [eax],al
300298f4:	add    BYTE PTR [eax],al
300298f6:	add    BYTE PTR [eax],al
300298f8:	(bad)  
300298f9:	(bad)  
300298fa:	(bad)  
300298fb:	(bad)  
300298fc:	(bad)  
300298fd:	(bad)  
300298fe:	(bad)  
300298ff:	(bad)  
30029900:	(bad)  
30029901:	(bad)  
30029902:	(bad)  
30029903:	push   esp
30029905:	add    DWORD PTR [eax],eax
30029907:	add    BYTE PTR [edx],al
30029909:	add    BYTE PTR [eax],al
3002990b:	add    BYTE PTR [ebp-0x7095581d],bl
30029911:	pop    ecx
30029912:	ror    DWORD PTR [esi+eax*4-0x47],cl
30029916:	rcr    ecx,cl
30029918:	jle    0x3002998a
3002991a:	mov    ch,0x19
3002991c:	or     al,0x0
3002991e:	add    BYTE PTR [eax],al
30029920:	add    BYTE PTR [eax],al
30029922:	add    BYTE PTR [eax],al
30029924:	(bad)  
30029925:	(bad)  
30029926:	(bad)  
30029927:	(bad)  
30029928:	(bad)  
30029929:	(bad)  
3002992a:	(bad)  
3002992b:	(bad)  
3002992c:	(bad)  
3002992d:	(bad)  
3002992e:	(bad)  
3002992f:	dec    DWORD PTR [ebp+0x1]
30029932:	add    BYTE PTR [eax],al
30029934:	add    al,BYTE PTR [eax]
30029936:	add    BYTE PTR [eax],al
30029938:	pop    edi
30029939:	push   esi
3002993a:	sub    ebx,DWORD PTR [edx]
3002993c:	jno    0x3002990b
3002993e:	xchg   esp,eax
3002993f:	inc    edi
30029940:	mov    eax,ds:0x96ea8c15
30029945:	dec    ebp
30029946:	js     0x300298ef
30029948:	or     al,BYTE PTR [eax]
3002994a:	add    BYTE PTR [eax],al
3002994c:	add    BYTE PTR [eax],al
3002994e:	add    BYTE PTR [eax],al
30029950:	(bad)  
30029951:	(bad)  
30029952:	(bad)  
30029953:	(bad)  
30029954:	(bad)  
30029955:	(bad)  
30029956:	(bad)  
30029957:	(bad)  
30029958:	(bad)  
30029959:	(bad)  
3002995a:	(bad)  
3002995b:	push   esp
3002995d:	add    DWORD PTR [eax],eax
3002995f:	add    BYTE PTR [edx],al
30029961:	add    BYTE PTR [eax],al
30029963:	add    al,ch
30029965:	mov    esp,0x8b01a906
3002996a:	add    cl,BYTE PTR [ebx-0x4f]
3002996d:	inc    edi
3002996e:	fisttp WORD PTR [esi+ebx*8+0xb742e7d]
30029975:	add    BYTE PTR [eax],al
30029977:	add    BYTE PTR [eax],al
30029979:	add    BYTE PTR [eax],al
3002997b:	add    bh,bh
3002997d:	(bad)  
3002997e:	(bad)  
3002997f:	(bad)  
30029980:	(bad)  
30029981:	(bad)  
30029982:	(bad)  
30029983:	(bad)  
30029984:	(bad)  
30029985:	(bad)  
30029986:	(bad)  
30029987:	push   esp
30029989:	add    DWORD PTR [eax],eax
3002998b:	add    BYTE PTR [edx],al
3002998d:	add    BYTE PTR [eax],al
3002998f:	add    BYTE PTR [esi+0x4c],ch
30029992:	popa   
30029993:	inc    esp
30029994:	jo     0x30029965
30029996:	xor    DWORD PTR [ecx-0x7c],ecx
30029999:	or     ebx,DWORD PTR [ecx]
3002999b:	dec    edx
3002999c:	add    BYTE PTR [esi+0x3eee7],dl
300299a2:	add    BYTE PTR [eax],al
300299a4:	add    BYTE PTR [eax],al
300299a6:	add    BYTE PTR [eax],al
300299a8:	fld    QWORD PTR [edi]
300299aa:	add    BYTE PTR [eax],al
300299ac:	add    DWORD PTR [eax],eax
300299ae:	add    BYTE PTR [eax],al
300299b0:	sldt   WORD PTR [eax]
	...
300299bb:	add    BYTE PTR [eax+0x6f],ah
300299be:	inc    esi
300299bf:	mov    dl,0x5e
300299c1:	aad    0x97
300299c3:	dec    esp
300299c4:	stos   BYTE PTR es:[edi],al
300299c5:	cli    
300299c6:	dec    eax
300299c7:	jmp    0x30029a47
300299c9:	les    esp,FWORD PTR [edi+0x15]
300299cc:	or     BYTE PTR [eax],al
300299ce:	add    BYTE PTR [eax],al
300299d0:	add    BYTE PTR [eax],al
300299d2:	add    BYTE PTR [eax],al
300299d4:	(bad)  
300299d5:	(bad)  
300299d6:	(bad)  
300299d7:	(bad)  
300299d8:	(bad)  
300299d9:	(bad)  
300299da:	(bad)  
300299db:	(bad)  
300299dc:	(bad)  
300299dd:	(bad)  
300299de:	(bad)  
300299df:	jmp    DWORD PTR [eax+eax*1+0x0]
300299e3:	add    BYTE PTR [eax],al
300299e5:	add    BYTE PTR [eax],al
300299e7:	add    BYTE PTR [ecx],al
300299e9:	or     al,0x61
300299eb:	out    0xb8,eax
300299ed:	push   0x5b
300299ef:	inc    ecx
300299f0:	mov    esp,0x989ee10f
300299f5:	enter  0x6c22,0x3
300299f9:	add    BYTE PTR [eax],al
300299fb:	add    BYTE PTR [eax],al
300299fd:	add    BYTE PTR [eax],al
300299ff:	add    ch,bl
30029a01:	pop    es
30029a02:	add    BYTE PTR [eax],al
30029a04:	add    DWORD PTR [eax],eax
30029a06:	add    BYTE PTR [eax],al
30029a08:	sldt   WORD PTR [eax]
	...
30029a13:	add    BYTE PTR [eax+0x6f],ah
30029a16:	inc    esi
30029a17:	mov    dl,0x5e
30029a19:	aad    0x97
30029a1b:	dec    esp
30029a1c:	stos   BYTE PTR es:[edi],al
30029a1d:	cli    
30029a1e:	dec    eax
30029a1f:	jmp    0x30029a9f
30029a21:	les    esp,FWORD PTR [edi+0x15]
30029a24:	add    al,0x0
30029a26:	add    BYTE PTR [eax],al
30029a28:	push   ds
30029a29:	add    BYTE PTR [eax],al
30029a2b:	add    bh,bh
30029a2d:	(bad)  
30029a2e:	(bad)  
30029a2f:	(bad)  
30029a30:	(bad)  
30029a31:	(bad)  
30029a32:	(bad)  
30029a33:	(bad)  
30029a34:	(bad)  
30029a35:	(bad)  
30029a36:	(bad)  
30029a37:	call   FWORD PTR [esi]
30029a39:	add    BYTE PTR [eax],al
30029a3b:	add    BYTE PTR [ecx],al
30029a3d:	add    BYTE PTR [eax],al
30029a3f:	add    bl,bh
30029a41:	aas    
30029a42:	push   ebx
30029a43:	pop    ss
30029a44:	inc    ebx
30029a45:	dec    edi
30029a46:	adc    BYTE PTR [edx-0x5d],al
30029a49:	repnz fnstenv [edx+ebx*8+0xce244fd]
30029a51:	add    BYTE PTR [eax],al
30029a53:	add    BYTE PTR [eax],al
30029a55:	add    BYTE PTR [eax],al
30029a57:	add    bh,bh
30029a59:	(bad)  
30029a5a:	(bad)  
30029a5b:	(bad)  
30029a5c:	(bad)  
30029a5d:	(bad)  
30029a5e:	(bad)  
30029a5f:	(bad)  
30029a60:	(bad)  
30029a61:	(bad)  
30029a62:	(bad)  
30029a63:	dec    DWORD PTR [ebp+0x1]
30029a66:	add    BYTE PTR [eax],al
30029a68:	add    al,BYTE PTR [eax]
30029a6a:	add    BYTE PTR [eax],al
30029a6c:	cmp    BYTE PTR gs:[ebx-0x44d91c5c],0x44
30029a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30029a75:	cmp    dh,BYTE PTR [ebx-0x4b47fd62]
30029a7b:	mov    al,0xa
30029a7d:	add    BYTE PTR [eax],al
30029a7f:	add    BYTE PTR [eax],al
30029a81:	add    BYTE PTR [eax],al
30029a83:	add    bh,bh
30029a85:	(bad)  
30029a86:	(bad)  
30029a87:	(bad)  
30029a88:	(bad)  
30029a89:	(bad)  
30029a8a:	(bad)  
30029a8b:	(bad)  
30029a8c:	(bad)  
30029a8d:	(bad)  
30029a8e:	(bad)  
30029a8f:	push   esp
30029a91:	add    DWORD PTR [eax],eax
30029a93:	add    BYTE PTR [edx],al
30029a95:	add    BYTE PTR [eax],al
30029a97:	add    BYTE PTR [ecx+0x15],ch
30029a9a:	aaa    
30029a9b:	or     ch,al
30029a9d:	je     0x30029a2b
30029a9f:	inc    ecx
30029aa0:	cdq    
30029aa1:	adc    al,0x7c
30029aa3:	and    WORD PTR [edx+0x3cacf],dx
30029aaa:	add    BYTE PTR [eax],al
30029aac:	add    BYTE PTR [eax],al
30029aae:	add    BYTE PTR [eax],al
30029ab0:	fld    QWORD PTR [edi]
30029ab2:	add    BYTE PTR [eax],al
30029ab4:	add    DWORD PTR [eax],eax
30029ab6:	add    BYTE PTR [eax],al
30029ab8:	sldt   WORD PTR [eax]
	...
30029ac3:	add    BYTE PTR [eax+0x6f],ah
30029ac6:	inc    esi
30029ac7:	mov    dl,0x5e
30029ac9:	aad    0x97
30029acb:	dec    esp
30029acc:	stos   BYTE PTR es:[edi],al
30029acd:	cli    
30029ace:	dec    eax
30029acf:	jmp    0x30029b4f
30029ad1:	les    esp,FWORD PTR [edi+0x15]
30029ad4:	add    al,0x0
30029ad6:	add    BYTE PTR [eax],al
30029ad8:	push   ds
30029ad9:	add    BYTE PTR [eax],al
30029adb:	add    bh,bh
30029add:	(bad)  
30029ade:	(bad)  
30029adf:	(bad)  
30029ae0:	(bad)  
30029ae1:	(bad)  
30029ae2:	(bad)  
30029ae3:	(bad)  
30029ae4:	(bad)  
30029ae5:	(bad)  
30029ae6:	(bad)  
30029ae7:	call   FWORD PTR [esi]
30029ae9:	add    BYTE PTR [eax],al
30029aeb:	add    BYTE PTR [ecx],al
30029aed:	add    BYTE PTR [eax],al
30029aef:	add    BYTE PTR [esi+0x74],dl
30029af2:	push   esp
30029af3:	pop    es
30029af4:	(bad)  
30029af5:	mov    ecx,0xb2bf4c1a
30029afa:	cs dec edi
30029afc:	outs   dx,BYTE PTR ds:[esi]
30029afd:	mov    eax,ds:0xc10b9
30029b02:	add    BYTE PTR [eax],al
30029b04:	add    BYTE PTR [eax],al
30029b06:	add    BYTE PTR [eax],al
30029b08:	(bad)  
30029b09:	(bad)  
30029b0a:	(bad)  
30029b0b:	(bad)  
30029b0c:	(bad)  
30029b0d:	(bad)  
30029b0e:	(bad)  
30029b0f:	(bad)  
30029b10:	(bad)  
30029b11:	(bad)  
30029b12:	(bad)  
30029b13:	dec    DWORD PTR [ebp+0x1]
30029b16:	add    BYTE PTR [eax],al
30029b18:	add    al,BYTE PTR [eax]
30029b1a:	add    BYTE PTR [eax],al
30029b1c:	dec    esp
30029b1d:	fcomp  st(0)
30029b1f:	in     al,0x56
30029b21:	fimul  WORD PTR [ebp-0x214a6fba]
30029b27:	cmp    DWORD PTR [edx+0xa683f71],eax
30029b2d:	add    BYTE PTR [eax],al
30029b2f:	add    BYTE PTR [eax],al
30029b31:	add    BYTE PTR [eax],al
30029b33:	add    bh,bh
30029b35:	(bad)  
30029b36:	(bad)  
30029b37:	(bad)  
30029b38:	(bad)  
30029b39:	(bad)  
30029b3a:	(bad)  
30029b3b:	(bad)  
30029b3c:	(bad)  
30029b3d:	(bad)  
30029b3e:	(bad)  
30029b3f:	push   esp
30029b41:	add    DWORD PTR [eax],eax
30029b43:	add    BYTE PTR [edx],al
30029b45:	add    BYTE PTR [eax],al
30029b47:	add    BYTE PTR [ecx+eiz*2+0x6f],ah
30029b4b:	dec    esi
30029b4c:	cdq    
30029b4d:	mov    ah,0x78
30029b4f:	dec    ebx
30029b50:	test   al,0xf8
30029b52:	into   
30029b53:	lock jno 0x30029ada
30029b56:	add    bl,al
30029b58:	add    eax,DWORD PTR [eax]
30029b5a:	add    BYTE PTR [eax],al
30029b5c:	add    BYTE PTR [eax],al
30029b5e:	add    BYTE PTR [eax],al
30029b60:	fld    QWORD PTR [edi]
30029b62:	add    BYTE PTR [eax],al
30029b64:	add    DWORD PTR [eax],eax
30029b66:	add    BYTE PTR [eax],al
30029b68:	sldt   WORD PTR [eax]
	...
30029b73:	add    BYTE PTR [eax+0x6f],ah
30029b76:	inc    esi
30029b77:	mov    dl,0x5e
30029b79:	aad    0x97
30029b7b:	dec    esp
30029b7c:	stos   BYTE PTR es:[edi],al
30029b7d:	cli    
30029b7e:	dec    eax
30029b7f:	jmp    0x30029bff
30029b81:	les    esp,FWORD PTR [edi+0x15]
30029b84:	add    al,0x0
30029b86:	add    BYTE PTR [eax],al
30029b88:	pop    edx
30029b89:	add    BYTE PTR [eax],al
30029b8b:	add    bh,bh
30029b8d:	(bad)  
30029b8e:	(bad)  
30029b8f:	(bad)  
30029b90:	(bad)  
30029b91:	(bad)  
30029b92:	(bad)  
30029b93:	(bad)  
30029b94:	(bad)  
30029b95:	(bad)  
30029b96:	(bad)  
30029b97:	call   FWORD PTR [edx+0x0]
30029b9a:	add    BYTE PTR [eax],al
30029b9c:	add    DWORD PTR [eax],eax
30029b9e:	add    BYTE PTR [eax],al
30029ba0:	pop    eax
30029ba1:	call   0x4197:0xd5f965d8
30029ba8:	mov    dh,0x22
30029baa:	pop    edi
30029bab:	fild   QWORD PTR [edx-0x4e]
30029bae:	mov    bl,dl
30029bb0:	add    al,0x0
30029bb2:	add    BYTE PTR [eax],al
30029bb4:	push   ds
30029bb5:	add    BYTE PTR [eax],al
30029bb7:	add    bh,bh
30029bb9:	(bad)  
30029bba:	(bad)  
30029bbb:	(bad)  
30029bbc:	(bad)  
30029bbd:	(bad)  
30029bbe:	(bad)  
30029bbf:	(bad)  
30029bc0:	(bad)  
30029bc1:	(bad)  
30029bc2:	(bad)  
30029bc3:	jmp    DWORD PTR [eax+eax*1+0x0]
30029bc7:	add    BYTE PTR [ebx],al
30029bc9:	add    BYTE PTR [eax],al
30029bcb:	add    BYTE PTR [ebx],cl
30029bcd:	push   0x258cf886
30029bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
30029bd3:	dec    edx
30029bd4:	xchg   ecx,eax
30029bd5:	lods   al,BYTE PTR ds:[esi]
30029bd6:	sbb    BYTE PTR ds:0xbd19bee7,bh
30029bdc:	or     al,0x0
30029bde:	add    BYTE PTR [eax],al
30029be0:	add    BYTE PTR [eax],al
30029be2:	add    BYTE PTR [eax],al
30029be4:	(bad)  
30029be5:	(bad)  
30029be6:	(bad)  
30029be7:	(bad)  
30029be8:	(bad)  
30029be9:	(bad)  
30029bea:	(bad)  
30029beb:	(bad)  
30029bec:	(bad)  
30029bed:	(bad)  
30029bee:	(bad)  
30029bef:	dec    DWORD PTR [ebp+0x1]
30029bf2:	add    BYTE PTR [eax],al
30029bf4:	add    al,BYTE PTR [eax]
30029bf6:	add    BYTE PTR [eax],al
30029bf8:	xchg   esp,eax
30029bf9:	jmp    0x488f:0x1c4f1d40
30029c00:	xchg   edx,eax
30029c01:	mov    esi,0xd486706
30029c06:	stos   BYTE PTR es:[edi],al
30029c07:	xor    ecx,DWORD PTR [edx]
30029c09:	add    BYTE PTR [eax],al
30029c0b:	add    BYTE PTR [eax],al
30029c0d:	add    BYTE PTR [eax],al
30029c0f:	add    bh,bh
30029c11:	(bad)  
30029c12:	(bad)  
30029c13:	(bad)  
30029c14:	(bad)  
30029c15:	(bad)  
30029c16:	(bad)  
30029c17:	(bad)  
30029c18:	(bad)  
30029c19:	(bad)  
30029c1a:	(bad)  
30029c1b:	push   esp
30029c1d:	add    DWORD PTR [eax],eax
30029c1f:	add    BYTE PTR [edx],al
30029c21:	add    BYTE PTR [eax],al
30029c23:	add    BYTE PTR [ecx-0x60f2e551],bh
30029c29:	mov    WORD PTR [edi],fs
30029c2b:	dec    ecx
30029c2c:	call   0x1e66:0x7a32456c
30029c33:	sbb    eax,0xb
30029c38:	add    BYTE PTR [eax],al
30029c3a:	add    BYTE PTR [eax],al
30029c3c:	(bad)  
30029c3d:	(bad)  
30029c3e:	(bad)  
30029c3f:	(bad)  
30029c40:	(bad)  
30029c41:	(bad)  
30029c42:	(bad)  
30029c43:	(bad)  
30029c44:	(bad)  
30029c45:	(bad)  
30029c46:	(bad)  
30029c47:	push   esp
30029c49:	add    DWORD PTR [eax],eax
30029c4b:	add    BYTE PTR [edx],al
30029c4d:	add    BYTE PTR [eax],al
30029c4f:	add    BYTE PTR [eax+eiz*4-0x5f596541],bl
30029c56:	mov    ds:0x47f8b546,eax
30029c5b:	cmp    eax,0x88f34a0
30029c60:	add    eax,DWORD PTR [eax]
30029c62:	add    BYTE PTR [eax],al
30029c64:	add    BYTE PTR [eax],al
30029c66:	add    BYTE PTR [eax],al
30029c68:	fld    QWORD PTR [edi]
30029c6a:	add    BYTE PTR [eax],al
30029c6c:	add    DWORD PTR [eax],eax
30029c6e:	add    BYTE PTR [eax],al
30029c70:	sldt   WORD PTR [eax]
	...
30029c7b:	add    BYTE PTR [eax+0x6f],ah
30029c7e:	inc    esi
30029c7f:	mov    dl,0x5e
30029c81:	aad    0x97
30029c83:	dec    esp
30029c84:	stos   BYTE PTR es:[edi],al
30029c85:	cli    
30029c86:	dec    eax
30029c87:	jmp    0x30029d07
30029c89:	les    esp,FWORD PTR [edi+0x15]
30029c8c:	add    al,0x0
30029c8e:	add    BYTE PTR [eax],al
30029c90:	push   ds
30029c91:	add    BYTE PTR [eax],al
30029c93:	add    bh,bh
30029c95:	(bad)  
30029c96:	(bad)  
30029c97:	(bad)  
30029c98:	(bad)  
30029c99:	(bad)  
30029c9a:	(bad)  
30029c9b:	(bad)  
30029c9c:	(bad)  
30029c9d:	(bad)  
30029c9e:	(bad)  
30029c9f:	call   FWORD PTR [esi]
30029ca1:	add    BYTE PTR [eax],al
30029ca3:	add    BYTE PTR [ecx],al
30029ca5:	add    BYTE PTR [eax],al
30029ca7:	add    bl,ah
30029ca9:	pop    DWORD PTR [ebp+0x52f7a866]
30029caf:	inc    esi
30029cb0:	mov    BYTE PTR [esi],al
30029cb2:	mov    eax,0x52086a08
30029cb7:	fs or  al,0x0
30029cba:	add    BYTE PTR [eax],al
30029cbc:	add    BYTE PTR [eax],al
30029cbe:	add    BYTE PTR [eax],al
30029cc0:	(bad)  
30029cc1:	(bad)  
30029cc2:	(bad)  
30029cc3:	(bad)  
30029cc4:	(bad)  
30029cc5:	(bad)  
30029cc6:	(bad)  
30029cc7:	(bad)  
30029cc8:	(bad)  
30029cc9:	(bad)  
30029cca:	(bad)  
30029ccb:	dec    DWORD PTR [ebp+0x1]
30029cce:	add    BYTE PTR [eax],al
30029cd0:	add    al,BYTE PTR [eax]
30029cd2:	add    BYTE PTR [eax],al
30029cd4:	(bad)
30029cd9:	mov    ebx,DWORD PTR [edx-0xbdb57b7]
30029cdf:	scas   al,BYTE PTR es:[edi]
30029ce0:	adc    DWORD PTR [eax+0x71],eax
30029ce3:	aas    
30029ce4:	or     al,BYTE PTR [eax]
30029ce6:	add    BYTE PTR [eax],al
30029ce8:	add    BYTE PTR [eax],al
30029cea:	add    BYTE PTR [eax],al
30029cec:	(bad)  
30029ced:	(bad)  
30029cee:	(bad)  
30029cef:	(bad)  
30029cf0:	(bad)  
30029cf1:	(bad)  
30029cf2:	(bad)  
30029cf3:	(bad)  
30029cf4:	(bad)  
30029cf5:	(bad)  
30029cf6:	(bad)  
30029cf7:	push   esp
30029cf9:	add    DWORD PTR [eax],eax
30029cfb:	add    BYTE PTR [edx],al
30029cfd:	add    BYTE PTR [eax],al
30029cff:	add    BYTE PTR [ecx-0x6d62782e],dh
30029d05:	inc    edi
30029d06:	inc    ebp
30029d07:	dec    eax
30029d08:	popf   
30029d09:	push   ebp
30029d0a:	xor    al,BYTE PTR [ecx-0x5]
30029d0d:	lock aas 
30029d0f:	pop    ecx
30029d10:	add    eax,DWORD PTR [eax]
30029d12:	add    BYTE PTR [eax],al
30029d14:	add    BYTE PTR [eax],al
30029d16:	add    BYTE PTR [eax],al
30029d18:	fld    QWORD PTR [edi]
30029d1a:	add    BYTE PTR [eax],al
30029d1c:	add    eax,DWORD PTR [eax]
30029d1e:	add    BYTE PTR [eax],al
30029d20:	pop    ds
	...
30029d29:	add    BYTE PTR [eax],al
30029d2b:	add    BYTE PTR [eax+0x6f],ah
30029d2e:	inc    esi
30029d2f:	mov    dl,0x5e
30029d31:	aad    0x97
30029d33:	dec    esp
30029d34:	stos   BYTE PTR es:[edi],al
30029d35:	cli    
30029d36:	dec    eax
30029d37:	jmp    0x30029db7
30029d39:	les    esp,FWORD PTR [edi+0x15]
30029d3c:	add    al,0x0
30029d3e:	add    BYTE PTR [eax],al
30029d40:	push   ds
30029d41:	add    BYTE PTR [eax],al
30029d43:	add    bh,bh
30029d45:	(bad)  
30029d46:	(bad)  
30029d47:	(bad)  
30029d48:	(bad)  
30029d49:	(bad)  
30029d4a:	(bad)  
30029d4b:	(bad)  
30029d4c:	(bad)  
30029d4d:	(bad)  
30029d4e:	(bad)  
30029d4f:	call   FWORD PTR [esi]
30029d51:	add    BYTE PTR [eax],al
30029d53:	add    BYTE PTR [ecx],al
30029d55:	add    BYTE PTR [eax],al
30029d57:	add    BYTE PTR [esi+0x5cfa0993],bh
30029d5d:	ds out dx,eax
30029d5f:	inc    esp
30029d60:	xchg   DWORD PTR [edx],esi
30029d62:	into   
30029d63:	add    DWORD PTR [edi+0x28],ecx
30029d66:	pop    ss
30029d67:	xor    al,0xc
30029d69:	add    BYTE PTR [eax],al
30029d6b:	add    BYTE PTR [eax],al
30029d6d:	add    BYTE PTR [eax],al
30029d6f:	add    bh,bh
30029d71:	(bad)  
30029d72:	(bad)  
30029d73:	(bad)  
30029d74:	(bad)  
30029d75:	(bad)  
30029d76:	(bad)  
30029d77:	(bad)  
30029d78:	(bad)  
30029d79:	(bad)  
30029d7a:	(bad)  
30029d7b:	dec    DWORD PTR [ebp+0x1]
30029d7e:	add    BYTE PTR [eax],al
30029d80:	add    al,BYTE PTR [eax]
30029d82:	add    BYTE PTR [eax],al
30029d84:	mov    esp,0xa121b721
30029d89:	aas    
30029d8a:	lds    ecx,FWORD PTR [ebx+edi*4-0x69]
30029d8e:	push   0xfffffffb
30029d90:	push   esi
30029d91:	sbb    eax,0xad406
30029d96:	add    BYTE PTR [eax],al
30029d98:	add    BYTE PTR [eax],al
30029d9a:	add    BYTE PTR [eax],al
30029d9c:	(bad)  
30029d9d:	(bad)  
30029d9e:	(bad)  
30029d9f:	(bad)  
30029da0:	(bad)  
30029da1:	(bad)  
30029da2:	(bad)  
30029da3:	(bad)  
30029da4:	(bad)  
30029da5:	(bad)  
30029da6:	(bad)  
30029da7:	push   esp
30029da9:	add    DWORD PTR [eax],eax
30029dab:	add    BYTE PTR [edx],al
30029dad:	add    BYTE PTR [eax],al
30029daf:	add    BYTE PTR [edx],dl
30029db1:	or     al,0x78
30029db3:	sub    BYTE PTR [eax],0xdc
30029db6:	inc    edx
30029db7:	inc    eax
30029db8:	test   BYTE PTR [ecx-0x294580ef],dh
30029dbe:	sub    BYTE PTR [eax],0x3
30029dc1:	add    BYTE PTR [eax],al
30029dc3:	add    BYTE PTR [eax],al
30029dc5:	add    BYTE PTR [eax],al
30029dc7:	add    ch,bl
30029dc9:	pop    es
30029dca:	add    BYTE PTR [eax],al
30029dcc:	add    al,BYTE PTR [eax]
30029dce:	add    BYTE PTR [eax],al
30029dd0:	sldt   WORD PTR [eax]
	...
30029ddb:	add    BYTE PTR [eax+0x6f],ah
30029dde:	inc    esi
30029ddf:	mov    dl,0x5e
30029de1:	aad    0x97
30029de3:	dec    esp
30029de4:	stos   BYTE PTR es:[edi],al
30029de5:	cli    
30029de6:	dec    eax
30029de7:	jmp    0x30029e67
30029de9:	les    esp,FWORD PTR [edi+0x15]
30029dec:	add    al,0x0
30029dee:	add    BYTE PTR [eax],al
30029df0:	push   ds
30029df1:	add    BYTE PTR [eax],al
30029df3:	add    bh,bh
30029df5:	(bad)  
30029df6:	(bad)  
30029df7:	(bad)  
30029df8:	(bad)  
30029df9:	(bad)  
30029dfa:	(bad)  
30029dfb:	(bad)  
30029dfc:	(bad)  
30029dfd:	(bad)  
30029dfe:	(bad)  
30029dff:	call   FWORD PTR [esi]
30029e01:	add    BYTE PTR [eax],al
30029e03:	add    BYTE PTR [ecx],al
30029e05:	add    BYTE PTR [eax],al
30029e07:	add    BYTE PTR [edi-0x4c],al
30029e0a:	fs cdq 
30029e0c:	mov    ss,WORD PTR [eax+0x19b74ce7]
30029e12:	inc    ecx
30029e13:	sbb    ecx,DWORD PTR [ebp+0xc748f75]
30029e19:	add    BYTE PTR [eax],al
30029e1b:	add    BYTE PTR [eax],al
30029e1d:	add    BYTE PTR [eax],al
30029e1f:	add    bh,bh
30029e21:	(bad)  
30029e22:	(bad)  
30029e23:	(bad)  
30029e24:	(bad)  
30029e25:	(bad)  
30029e26:	(bad)  
30029e27:	(bad)  
30029e28:	(bad)  
30029e29:	(bad)  
30029e2a:	(bad)  
30029e2b:	dec    DWORD PTR [ebp+0x1]
30029e2e:	add    BYTE PTR [eax],al
30029e30:	add    al,BYTE PTR [eax]
30029e32:	add    BYTE PTR [eax],al
30029e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
30029e35:	aas    
30029e36:	push   ds
30029e37:	les    ecx,FWORD PTR [ebx+edi*8+0xa]
30029e3b:	dec    esi
30029e3c:	mov    al,ds:0x6033a4b0
30029e41:	xchg   edx,eax
30029e42:	sbb    dh,BYTE PTR [esi]
30029e44:	or     al,BYTE PTR [eax]
30029e46:	add    BYTE PTR [eax],al
30029e48:	add    BYTE PTR [eax],al
30029e4a:	add    BYTE PTR [eax],al
30029e4c:	(bad)  
30029e4d:	(bad)  
30029e4e:	(bad)  
30029e4f:	(bad)  
30029e50:	(bad)  
30029e51:	(bad)  
30029e52:	(bad)  
30029e53:	(bad)  
30029e54:	(bad)  
30029e55:	(bad)  
30029e56:	(bad)  
30029e57:	push   esp
30029e59:	add    DWORD PTR [eax],eax
30029e5b:	add    BYTE PTR [edx],al
30029e5d:	add    BYTE PTR [eax],al
30029e5f:	add    BYTE PTR [edx+eiz*4-0x3aff834e],al
30029e66:	pop    ebx
30029e67:	inc    esi
30029e68:	stos   BYTE PTR es:[edi],al
30029e69:	test   DWORD PTR [esi],esi
30029e6b:	(bad)  
30029e6c:	arpl   WORD PTR [esp+ecx*8],bp
30029e6f:	out    dx,al
30029e70:	lahf   
30029e71:	xchg   BYTE PTR [ecx],al
30029e73:	add    BYTE PTR [eax+0x13002a0],dl
30029e79:	add    BYTE PTR [eax],al
30029e7b:	add    BYTE PTR [eax],dl
30029e7d:	add    BYTE PTR [eax],al
30029e7f:	add    BYTE PTR [ecx],al
30029e81:	add    BYTE PTR [eax],al
30029e83:	add    BYTE PTR [eax+eax*1],al
30029e86:	add    BYTE PTR [eax],al
30029e88:	add    BYTE PTR [eax],al
30029e8a:	add    BYTE PTR [eax],al
30029e8c:	add    eax,0x38000000
30029e91:	pop    ebx
30029e92:	add    DWORD PTR [eax],eax
30029e94:	mov    eax,0x13002a0
30029e99:	add    BYTE PTR [eax],al
30029e9b:	add    BYTE PTR [eax],dl
30029e9d:	add    BYTE PTR [eax],al
30029e9f:	add    BYTE PTR [edx],al
30029ea1:	add    BYTE PTR [eax],al
30029ea3:	add    BYTE PTR [edx],al
30029ea5:	add    BYTE PTR [eax],al
30029ea7:	add    BYTE PTR ds:0xa000000,al
30029ead:	add    BYTE PTR [eax],al
30029eaf:	add    BYTE PTR [ebx+edx*1+0x0],cl
30029eb3:	add    al,ah
30029eb5:	mov    al,ds:0x13002
30029eba:	add    BYTE PTR [eax],al
30029ebc:	add    al,BYTE PTR [eax]
30029ebe:	add    BYTE PTR [eax],al
30029ec0:	add    DWORD PTR [eax],eax
30029ec2:	add    BYTE PTR [eax],al
30029ec4:	add    al,0x0
30029ec6:	add    BYTE PTR [eax],al
30029ec8:	or     al,BYTE PTR [eax]
30029eca:	add    BYTE PTR [eax],al
30029ecc:	adc    BYTE PTR [eax],al
30029ece:	add    BYTE PTR [eax],al
30029ed0:	dec    ebp
30029ed1:	adc    eax,DWORD PTR [eax]
30029ed3:	add    BYTE PTR [eax],cl
30029ed5:	mov    eax,ds:0x13002
30029eda:	add    BYTE PTR [eax],al
30029edc:	add    al,BYTE PTR [eax]
30029ede:	add    BYTE PTR [eax],al
30029ee0:	add    eax,DWORD PTR [eax]
30029ee2:	add    BYTE PTR [eax],al
30029ee4:	add    eax,DWORD PTR [eax]
30029ee6:	add    BYTE PTR [eax],al
30029ee8:	adc    BYTE PTR [eax],al
30029eea:	add    BYTE PTR [eax],al
30029eec:	push   ss
30029eed:	add    BYTE PTR [eax],al
30029eef:	add    BYTE PTR [edx+0x13],cl
30029ef2:	add    BYTE PTR [eax],al
30029ef4:	xor    BYTE PTR [ecx+0x13002],ah
30029efa:	add    BYTE PTR [eax],al
30029efc:	add    al,BYTE PTR [eax]
30029efe:	add    BYTE PTR [eax],al
30029f00:	add    eax,0x2000000
30029f05:	add    BYTE PTR [eax],al
30029f07:	add    BYTE PTR [esi],dl
30029f09:	add    BYTE PTR [eax],al
30029f0b:	add    BYTE PTR [ecx],ah
30029f0d:	add    BYTE PTR [eax],al
30029f0f:	add    BYTE PTR [edx+0x13],al
30029f12:	add    BYTE PTR [eax],al
30029f14:	pop    eax
30029f15:	mov    eax,ds:0x3002
30029f1a:	add    BYTE PTR [eax],al
30029f1c:	add    DWORD PTR [eax],eax
30029f1e:	add    BYTE PTR [eax],al
30029f20:	pop    es
30029f21:	add    BYTE PTR [eax],al
30029f23:	add    BYTE PTR [eax],al
30029f25:	add    BYTE PTR [eax],al
30029f27:	add    BYTE PTR [ecx],ah
30029f29:	add    BYTE PTR [eax],al
30029f2b:	add    BYTE PTR [ebx],ah
30029f2d:	add    BYTE PTR [eax],al
30029f2f:	add    BYTE PTR [ebx+edx*1+0x0],al
30029f33:	add    BYTE PTR [eax+0x3002a1],al
30029f39:	add    BYTE PTR [eax],al
30029f3b:	add    BYTE PTR [edx],al
30029f3d:	add    BYTE PTR [eax],al
30029f3f:	add    BYTE PTR [eax],cl
30029f41:	add    BYTE PTR [eax],al
30029f43:	add    BYTE PTR [ecx],al
30029f45:	add    BYTE PTR [eax],al
30029f47:	add    BYTE PTR [ebx],ah
30029f49:	add    BYTE PTR [eax],al
30029f4b:	add    BYTE PTR ds:0x58000000,ah
30029f51:	adc    eax,DWORD PTR [eax]
30029f53:	add    BYTE PTR [eax+0x3002a1],ch
30029f59:	add    BYTE PTR [eax],al
30029f5b:	add    BYTE PTR [edi],al
30029f5d:	add    BYTE PTR [eax],al
30029f5f:	add    BYTE PTR [ecx],al
30029f61:	add    BYTE PTR [eax],al
30029f63:	add    BYTE PTR [eax],al
30029f65:	add    BYTE PTR [eax],al
30029f67:	add    BYTE PTR ds:0x27000000,ah
30029f6d:	add    BYTE PTR [eax],al
30029f6f:	add    BYTE PTR [ecx+0x13],bl
30029f72:	add    BYTE PTR [eax],al
30029f74:	test   al,0xa1
30029f76:	add    dh,BYTE PTR [eax]
30029f78:	add    BYTE PTR fs:[eax],al
30029f7b:	add    BYTE PTR [eax],cl
30029f7d:	add    BYTE PTR [eax],al
30029f7f:	add    BYTE PTR [ecx],al
30029f81:	add    BYTE PTR [eax],al
30029f83:	add    BYTE PTR [eax],al
30029f85:	add    BYTE PTR [eax],al
30029f87:	add    BYTE PTR [edi],ah
30029f89:	add    BYTE PTR [eax],al
30029f8b:	add    BYTE PTR [ecx],ch
30029f8d:	add    BYTE PTR [eax],al
30029f8f:	add    BYTE PTR [esi+0x13],cl
30029f92:	add    BYTE PTR [eax],al
30029f94:	shl    BYTE PTR [ecx+0x3002],1
30029f9a:	add    BYTE PTR [eax],al
30029f9c:	or     DWORD PTR [eax],eax
30029f9e:	add    BYTE PTR [eax],al
30029fa0:	add    DWORD PTR [eax],eax
30029fa2:	add    BYTE PTR [eax],al
30029fa4:	add    BYTE PTR [eax],al
30029fa6:	add    BYTE PTR [eax],al
30029fa8:	sub    DWORD PTR [eax],eax
30029faa:	add    BYTE PTR [eax],al
30029fac:	xor    al,0x0
30029fae:	add    BYTE PTR [eax],al
30029fb0:	push   ebp
30029fb1:	adc    eax,DWORD PTR [eax]
30029fb3:	add    al,bh
30029fb5:	mov    eax,ds:0x3002
30029fba:	add    BYTE PTR [eax],al
30029fbc:	or     al,BYTE PTR [eax]
30029fbe:	add    BYTE PTR [eax],al
30029fc0:	add    DWORD PTR [eax],eax
30029fc2:	add    BYTE PTR [eax],al
30029fc4:	add    BYTE PTR [eax],al
30029fc6:	add    BYTE PTR [eax],al
30029fc8:	xor    al,0x0
30029fca:	add    BYTE PTR [eax],al
30029fcc:	add    BYTE PTR ss:[eax],al
30029fcf:	add    BYTE PTR [edi+0x13],al
30029fd2:	add    BYTE PTR [eax],al
30029fd4:	and    BYTE PTR [edx+0x3002],ah
30029fda:	add    BYTE PTR [eax],al
30029fdc:	add    al,0x0
30029fde:	add    BYTE PTR [eax],al
30029fe0:	add    DWORD PTR [eax],eax
30029fe2:	add    BYTE PTR [eax],al
30029fe4:	add    BYTE PTR [eax],al
30029fe6:	add    BYTE PTR [eax],al
30029fe8:	add    BYTE PTR ss:[eax],al
30029feb:	add    BYTE PTR [edx],bh
30029fed:	add    BYTE PTR [eax],al
30029fef:	add    BYTE PTR [ebp+0x13],al
30029ff2:	add    BYTE PTR [eax],al
30029ff4:	dec    eax
30029ff5:	mov    ds:0x3002,al
30029ffa:	add    BYTE PTR [eax],al
30029ffc:	add    eax,DWORD PTR [eax]
30029ffe:	add    BYTE PTR [eax],al
3002a000:	add    DWORD PTR [eax],eax
3002a002:	add    BYTE PTR [eax],al
3002a004:	add    BYTE PTR [eax],al
3002a006:	add    BYTE PTR [eax],al
3002a008:	cmp    al,BYTE PTR [eax]
3002a00a:	add    BYTE PTR [eax],al
3002a00c:	add    BYTE PTR ds:[eax],al
3002a00f:	add    BYTE PTR [edx+0x13],dl
3002a012:	add    BYTE PTR [eax],al
3002a014:	jo     0x30029fb8
3002a016:	add    dh,BYTE PTR [eax]
3002a018:	add    BYTE PTR fs:[eax],al
3002a01b:	add    BYTE PTR [esi],al
3002a01d:	add    BYTE PTR [eax],al
3002a01f:	add    BYTE PTR [ecx],al
3002a021:	add    BYTE PTR [eax],al
3002a023:	add    BYTE PTR [eax],al
3002a025:	add    BYTE PTR [eax],al
3002a027:	add    BYTE PTR [esi],bh
3002a029:	add    BYTE PTR [eax],al
3002a02b:	add    BYTE PTR [eax+eax*1+0x0],al
3002a02f:	add    BYTE PTR [ebx+edx*1+0x0],dl
3002a033:	add    BYTE PTR [eax+0x13002a2],bl
3002a039:	add    BYTE PTR [eax],al
3002a03b:	add    BYTE PTR [esi],al
3002a03d:	add    BYTE PTR [eax],al
3002a03f:	add    BYTE PTR ds:0x0,al
3002a045:	add    BYTE PTR [eax],al
3002a047:	add    BYTE PTR [eax+eax*1+0x0],al
3002a04b:	add    BYTE PTR [eax+0x0],cl
3002a04e:	add    BYTE PTR [eax],al
3002a050:	dec    ecx
3002a051:	adc    eax,DWORD PTR [eax]
3002a053:	add    al,al
3002a055:	mov    ds:0x3002,al
3002a05a:	add    BYTE PTR [eax],al
3002a05c:	add    eax,0x1000000
3002a061:	add    BYTE PTR [eax],al
3002a063:	add    BYTE PTR [eax],al
3002a065:	add    BYTE PTR [eax],al
3002a067:	add    BYTE PTR [eax+0x0],cl
3002a06a:	add    BYTE PTR [eax],al
3002a06c:	dec    esp
3002a06d:	add    BYTE PTR [eax],al
3002a06f:	add    BYTE PTR [edi],bh
3002a071:	push   ss
3002a072:	add    BYTE PTR [eax],al
3002a074:	call   0x3032a31b
3002a079:	add    BYTE PTR [eax],al
3002a07b:	add    BYTE PTR [ebx],cl
3002a07d:	add    BYTE PTR [eax],al
3002a07f:	add    BYTE PTR [ecx],al
3002a081:	add    BYTE PTR [eax],al
3002a083:	add    BYTE PTR [eax],al
3002a085:	add    BYTE PTR [eax],al
3002a087:	add    BYTE PTR [eax+eax*1+0x0],cl
3002a08b:	add    BYTE PTR [eax+0x0],dl
3002a08e:	add    BYTE PTR [eax],al
3002a090:	xor    eax,0x46304139
3002a095:	inc    esp
3002a096:	ss inc edx
3002a098:	sub    eax,0x34413442
3002a09d:	sub    eax,0x36433433
3002a0a2:	sub    eax,0x44344541
3002a0a7:	sub    eax,0x44324138
3002a0ac:	xor    al,0x31
3002a0ae:	xor    BYTE PTR [esi+0x44],al
3002a0b1:	inc    ebx
3002a0b2:	inc    ebx
3002a0b3:	add    BYTE PTR ss:[eax+0x38389090],dl
3002a0ba:	xor    DWORD PTR [eax],edi
3002a0bc:	inc    ebp
3002a0bd:	xor    dh,BYTE PTR ss:[esi]
3002a0c0:	sub    eax,0x44423244
3002a0c5:	sub    eax,0x37374633
3002a0ca:	sub    eax,0x45323339
3002a0cf:	sub    eax,0x36353838
3002a0d4:	cmp    BYTE PTR [ecx+0x31],al
3002a0d7:	aaa    
3002a0d8:	inc    ebp
3002a0d9:	cmp    DWORD PTR ds:0x90900035,esi
3002a0df:	nop
3002a0e0:	xor    BYTE PTR ds:0x31383730,dh
3002a0e6:	xor    ebp,DWORD PTR ss:0x38413446
3002a0ed:	sub    eax,0x33333733
3002a0f2:	sub    eax,0x37413438
3002a0f7:	sub    eax,0x35453445
3002a0fc:	inc    esp
3002a0fd:	xor    al,BYTE PTR [ebx+0x37]
3002a100:	cmp    DWORD PTR [ecx],edi
3002a102:	inc    esi
3002a103:	xor    eax,0x90909000
3002a108:	xor    BYTE PTR ds:0x43383239,dh
3002a10e:	inc    esp
3002a10f:	cmp    DWORD PTR ds:0x46323241,ebp
3002a115:	sub    eax,0x33393333
3002a11a:	sub    eax,0x35444339
3002a11f:	sub    eax,0x32443938
3002a124:	xor    al,BYTE PTR [ebp+0x42]
3002a127:	inc    ebp
3002a128:	inc    ebp
3002a129:	inc    ecx
3002a12a:	inc    ebp
3002a12b:	inc    ecx
3002a12c:	add    BYTE PTR [eax+0x36419090],dl
3002a132:	inc    ebp
3002a133:	inc    edx
3002a134:	cmp    DWORD PTR [ecx+0x32],eax
3002a137:	ss sub eax,0x31374130
3002a13d:	sub    eax,0x46463233
3002a142:	sub    eax,0x35413738
3002a147:	sub    eax,0x30393744
3002a14c:	inc    esi
3002a14d:	inc    esi
3002a14e:	inc    ebp
3002a14f:	inc    ebx
3002a150:	inc    ecx
3002a151:	inc    esi
3002a152:	xor    DWORD PTR [ebx],esi
3002a154:	add    BYTE PTR [eax+0x32399090],dl
3002a15a:	xor    dh,BYTE PTR [eax*2+0x2d453338]
3002a161:	aaa    
3002a162:	inc    esp
3002a163:	inc    ebp
3002a164:	ss sub eax,0x33303733
3002a16a:	sub    eax,0x42423441
3002a16f:	sub    eax,0x38384443
3002a174:	xor    eax,DWORD PTR [ebp+0x30]
3002a177:	cmp    BYTE PTR [ebx],dh
3002a179:	inc    ebx
3002a17a:	xor    edi,DWORD PTR [ecx]
3002a17c:	add    BYTE PTR [eax+0x43369090],dl
3002a182:	inc    ebx
3002a183:	cmp    BYTE PTR [ecx],bh
3002a185:	inc    esp
3002a186:	xor    dh,BYTE PTR [edi]
3002a188:	sub    eax,0x33343446
3002a18d:	sub    eax,0x41424433
3002a192:	sub    eax,0x44413438
3002a197:	sub    eax,0x30363037
3002a19c:	xor    bh,BYTE PTR [ecx]
3002a19e:	xor    BYTE PTR [eax],bh
3002a1a0:	xor    BYTE PTR [edx],dh
3002a1a2:	xor    BYTE PTR [edx+0x0],al
3002a1a5:	nop
3002a1a6:	nop
3002a1a7:	nop
3002a1a8:	xor    DWORD PTR [edx+0x33],eax
3002a1ab:	xor    BYTE PTR [esi+0x37],al
3002a1ae:	xor    dh,BYTE PTR ds:0x3738442d
3002a1b4:	cmp    BYTE PTR ds:0x45303133,ch
3002a1ba:	sub    eax,0x42363742
3002a1bf:	sub    eax,0x35423439
3002a1c4:	cmp    DWORD PTR [ebx],esi
3002a1c6:	xor    eax,DWORD PTR [ebx+0x39]
3002a1c9:	cmp    BYTE PTR [eax],bh
3002a1cb:	xor    DWORD PTR [eax],eax
3002a1cd:	nop
3002a1ce:	nop
3002a1cf:	nop
3002a1d0:	xor    esi,DWORD PTR [ebx]
3002a1d2:	ss aaa 
3002a1d4:	aaa    
3002a1d5:	xor    al,0x39
3002a1d7:	aaa    
3002a1d8:	sub    eax,0x43364331
3002a1dd:	sub    eax,0x30313133
3002a1e2:	sub    eax,0x33444238
3002a1e7:	sub    eax,0x33423232
3002a1ec:	xor    al,0x44
3002a1ee:	cmp    DWORD PTR [ecx],esi
3002a1f0:	aaa    
3002a1f1:	cmp    DWORD PTR ss:[edx],esi
3002a1f4:	add    BYTE PTR [eax+0x45379090],dl
3002a1fa:	inc    esi
3002a1fb:	inc    ebp
3002a1fc:	cmp    BYTE PTR [edx],dh
3002a1fe:	xor    al,0x45
3002a200:	sub    eax,0x38354342
3002a205:	sub    eax,0x42413733
3002a20a:	sub    eax,0x41384139
3002a20f:	sub    eax,0x43343445
3002a214:	inc    ecx
3002a215:	xor    bh,BYTE PTR [eax]
3002a217:	ss inc ebp
3002a219:	xor    al,0x46
3002a21b:	inc    ecx
3002a21c:	add    BYTE PTR [eax+0x44439090],dl
3002a222:	inc    esi
3002a223:	cmp    BYTE PTR [edi],dh
3002a225:	cmp    DWORD PTR [ebp+0x44],eax
3002a228:	sub    eax,0x41363441
3002a22d:	sub    eax,0x46383733
3002a232:	sub    eax,0x38383539
3002a237:	sub    eax,0x34313337
3002a23c:	inc    edx
3002a23d:	inc    ebx
3002a23e:	inc    esp
3002a23f:	inc    edx
3002a240:	cmp    BYTE PTR [edx+0x30],al
3002a243:	inc    esp
3002a244:	add    BYTE PTR [eax+0x37449090],dl
3002a24a:	inc    esp
3002a24b:	inc    ebx
3002a24c:	xor    bh,BYTE PTR [eax]
3002a24e:	cmp    BYTE PTR [ecx+0x2d],al
3002a251:	aaa    
3002a252:	cmp    DWORD PTR [ecx+0x35],eax
3002a255:	sub    eax,0x42363333
3002a25a:	sub    eax,0x46433242
3002a25f:	sub    eax,0x35354238
3002a264:	xor    eax,0x35393745
3002a269:	inc    esp
3002a26a:	xor    BYTE PTR [ebx+0x0],al
3002a26d:	nop
3002a26e:	nop
3002a26f:	nop
3002a270:	inc    edx
3002a271:	xor    eax,0x38343230
3002a276:	xor    DWORD PTR [eax],edi
3002a278:	sub    eax,0x32394244
3002a27d:	sub    eax,0x30413433
3002a282:	sub    eax,0x31303341
3002a287:	sub    eax,0x33434334
3002a28c:	xor    esi,DWORD PTR [edx]
3002a28e:	ss inc ecx
3002a290:	xor    esi,DWORD PTR ss:[ebx]
3002a293:	cmp    BYTE PTR [eax],al
3002a295:	nop
3002a296:	nop
3002a297:	nop
3002a298:	inc    edx
3002a299:	inc    ebx
3002a29a:	inc    ebx
3002a29b:	inc    ecx
3002a29c:	xor    eax,0x2d393044
3002a2a1:	xor    BYTE PTR [ebx+0x36],al
3002a2a4:	ss sub eax,0x31363033
3002a2aa:	sub    eax,0x30394539
3002a2af:	sub    eax,0x31393444
3002a2b4:	aaa    
3002a2b5:	inc    ebp
3002a2b6:	aaa    
3002a2b7:	xor    BYTE PTR [ecx],dh
3002a2b9:	xor    dh,BYTE PTR [edi]
3002a2bb:	inc    ebp
3002a2bc:	add    BYTE PTR [eax+0x36419090],dl
3002a2c2:	xor    eax,0x38413143
3002a2c7:	cmp    DWORD PTR ds:0x41424539,ebp
3002a2cd:	sub    eax,0x46353133
3002a2d2:	sub    eax,0x45324241
3002a2d7:	sub    eax,0x38393031
3002a2dc:	cmp    BYTE PTR [edx],dh
3002a2de:	xor    eax,0x34413233
3002a2e3:	aaa    
3002a2e4:	add    BYTE PTR [eax+0x42359090],dl
3002a2ea:	aaa    
3002a2eb:	xor    eax,DWORD PTR [ebp+0x35]
3002a2ee:	inc    ebp
3002a2ef:	inc    edx
3002a2f0:	sub    eax,0x36393538
3002a2f5:	sub    eax,0x35444433
3002a2fa:	sub    eax,0x46394438
3002a2ff:	sub    eax,0x43354430
3002a304:	inc    esi
3002a305:	inc    edx
3002a306:	xor    BYTE PTR [ebx+esi*1],dh
3002a309:	cmp    DWORD PTR [edi],esi
3002a30b:	inc    esp
3002a30c:	add    BYTE PTR [eax+0x7b9090],dl
3002a312:	and    eax,0x7d007300
3002a317:	add    BYTE PTR [eax],al
3002a319:	add    BYTE PTR [eax-0x6f6f6f70],dl
3002a31f:	nop
3002a320:	sub    DWORD PTR [ecx-0x32],edx
3002a323:	mov    al,ds:0xbed845c8
3002a328:	xor    DWORD PTR [eax],eax
3002a32a:	add    BYTE PTR [eax],al
3002a32c:	push   0x52
3002a32e:	stos   BYTE PTR es:[edi],al
3002a32f:	push   ds
3002a330:	cwde   
3002a331:	or     bl,dl
3002a333:	adc    DWORD PTR [eax+0x4fc00068],edi
3002a339:	jns    0x3002a333
3002a33b:	add    dl,BYTE PTR [eax+0x0]
3002a33e:	dec    esi
3002a33f:	add    BYTE PTR [edi+0x0],al
3002a342:	add    BYTE PTR [eax],al
3002a344:	fld    st(3)
3002a346:	add    dh,BYTE PTR [eax]
3002a348:	cwde   
3002a349:	mov    DWORD PTR [ebx],0x2c55b30
3002a34f:	xor    BYTE PTR [eax*8+0x533002],al
3002a356:	imul   eax,DWORD PTR [eax],0x69
3002a359:	add    BYTE PTR [eax+0x0],dh
3002a35c:	dec    esp
3002a35d:	add    BYTE PTR [edi+0x0],ch
3002a360:	popa   
3002a361:	add    BYTE PTR [eax+eax*1+0x69],ah
3002a365:	add    BYTE PTR [esi+0x0],ch
3002a368:	add    BYTE PTR [bx+si],al
3002a36b:	add    BYTE PTR [ecx+0x0],cl
3002a36e:	outs   dx,BYTE PTR ds:[esi]
3002a36f:	add    BYTE PTR [eax+0x0],dh
3002a372:	jb     0x3002a374
3002a374:	outs   dx,DWORD PTR ds:[esi]
3002a375:	add    BYTE PTR [ebx+0x0],ah
3002a378:	push   ebx
3002a379:	add    BYTE PTR [ebp+0x0],ah
3002a37c:	jb     0x3002a37e
3002a37e:	jbe    0x3002a380
3002a380:	add    BYTE PTR gs:[edx+0x0],dh
3002a384:	xor    eax,DWORD PTR [eax]
3002a386:	xor    al,BYTE PTR [eax]
3002a388:	add    BYTE PTR [eax],al
3002a38a:	nop
3002a38b:	nop
3002a38c:	nop
3002a38d:	nop
3002a38e:	nop
3002a38f:	nop
3002a390:	dec    ebp
3002a391:	add    BYTE PTR [ecx+0x0],ch
3002a394:	arpl   WORD PTR [eax],ax
3002a396:	jb     0x3002a398
3002a398:	outs   dx,DWORD PTR ds:[esi]
3002a399:	add    BYTE PTR [ebx+0x0],dh
3002a39c:	outs   dx,DWORD PTR ds:[esi]
3002a39d:	add    BYTE PTR [esi+0x0],ah
3002a3a0:	je     0x3002a3a2
3002a3a2:	and    BYTE PTR [eax],al
3002a3a4:	push   esi
3002a3a5:	add    BYTE PTR [ecx+0x0],ch
3002a3a8:	jae    0x3002a3aa
3002a3aa:	jne    0x3002a3ac
3002a3ac:	popa   
3002a3ad:	add    BYTE PTR [eax+eax*1+0x20],ch
3002a3b1:	add    BYTE PTR [ebx+0x0],dl
3002a3b4:	je     0x3002a3b6
3002a3b6:	jne    0x3002a3b8
3002a3b8:	add    BYTE PTR fs:[ecx+0x0],ch
3002a3bc:	outs   dx,DWORD PTR ds:[esi]
3002a3bd:	add    BYTE PTR [eax],ah
3002a3bf:	add    BYTE PTR [ecx+0x0],al
3002a3c2:	jo     0x3002a3c4
3002a3c4:	jo     0x3002a3c6
3002a3c6:	imul   eax,DWORD PTR [eax],0x200064
3002a3cc:	push   ebx
3002a3cd:	add    BYTE PTR [eax+eax*1+0x75],dh
3002a3d1:	add    BYTE PTR [edx+0x0],ah
3002a3d4:	add    BYTE PTR [eax],al
3002a3d6:	nop
3002a3d7:	nop
3002a3d8:	push   eax
3002a3d9:	add    BYTE PTR [ecx+0x0],cl
3002a3dc:	inc    esp
3002a3dd:	add    BYTE PTR [eax],al
3002a3df:	add    BYTE PTR [ebx+0x0],al
3002a3e2:	push   esp
3002a3e3:	add    BYTE PTR [ecx+0x0],ch
3002a3e6:	ins    DWORD PTR es:[edi],dx
3002a3e7:	add    BYTE PTR [ebp+0x0],ah
3002a3ea:	add    BYTE PTR [eax],al
3002a3ec:	push   ebx
3002a3ed:	add    BYTE PTR [eax+eax*1+0x69],dh
3002a3f1:	add    BYTE PTR [eax+eax*1+0x6c],ch
3002a3f5:	add    BYTE PTR [ecx+0x0],al
3002a3f8:	ins    BYTE PTR es:[edi],dx
3002a3f9:	add    BYTE PTR [ecx+0x0],ch
3002a3fc:	jbe    0x3002a3fe
3002a3fe:	add    BYTE PTR gs:[eax],al
3002a401:	add    BYTE PTR [eax+0x70004f90],dl
3002a407:	add    BYTE PTR [eax+eax*1+0x65],dh
3002a40b:	add    BYTE PTR [eax+eax*1+0x49],ah
3002a40f:	add    BYTE PTR [esi+0x0],ch
3002a412:	add    BYTE PTR [eax],al
3002a414:	dec    edi
3002a415:	add    BYTE PTR [ebx+0x0],dl
3002a418:	push   esi
3002a419:	add    BYTE PTR [ebp+0x0],ah
3002a41c:	jb     0x3002a41e
3002a41e:	jae    0x3002a420
3002a420:	imul   eax,DWORD PTR [eax],0x6e006f
3002a426:	add    BYTE PTR [eax],al
3002a428:	dec    edi
3002a429:	add    BYTE PTR [ebx+0x0],dl
3002a42c:	push   ebx
3002a42d:	add    BYTE PTR [ebp+0x0],ah
3002a430:	jb     0x3002a432
3002a432:	jbe    0x3002a434
3002a434:	imul   eax,DWORD PTR [eax],0x650063
3002a43a:	push   eax
3002a43b:	add    BYTE PTR [ecx+0x0],ah
3002a43e:	arpl   WORD PTR [eax],ax
3002a440:	imul   eax,DWORD PTR [eax],0x0
3002a443:	add    BYTE PTR [edi+0x0],cl
3002a446:	push   ebx
3002a447:	add    BYTE PTR [eax+eax*1+0x6f],cl
3002a44b:	add    BYTE PTR [ebx+0x0],ah
3002a44e:	popa   
3002a44f:	add    BYTE PTR [eax+eax*1+0x65],ch
3002a453:	add    BYTE PTR [eax],al
3002a455:	add    BYTE PTR [eax+0x53005690],dl
3002a45b:	add    BYTE PTR [edx+0x0],al
3002a45e:	jne    0x3002a460
3002a460:	imul   eax,DWORD PTR [eax],0x64006c
3002a466:	push   esp
3002a467:	add    BYTE PTR [ecx+0x0],bh
3002a46a:	jo     0x3002a46c
3002a46c:	add    BYTE PTR gs:[eax],al
3002a46f:	add    BYTE PTR [esi+0x0],dl
3002a472:	push   ebx
3002a473:	add    BYTE PTR [edx+0x0],al
3002a476:	jne    0x3002a478
3002a478:	imul   eax,DWORD PTR [eax],0x64006c
3002a47e:	dec    esi
3002a47f:	add    BYTE PTR [ebp+0x0],dh
3002a482:	ins    DWORD PTR es:[edi],dx
3002a483:	add    BYTE PTR [edx+0x0],ah
3002a486:	add    BYTE PTR gs:[edx+0x0],dh
3002a48a:	add    BYTE PTR [eax],al
3002a48c:	push   esi
3002a48d:	add    BYTE PTR [ebx+0x0],dl
3002a490:	inc    edx
3002a491:	add    BYTE PTR [ebp+0x0],dh
3002a494:	imul   eax,DWORD PTR [eax],0x64006c
3002a49a:	push   edx
3002a49b:	add    BYTE PTR [ebx+0x0],ah
3002a49e:	dec    esi
3002a49f:	add    BYTE PTR [ebp+0x0],dh
3002a4a2:	ins    DWORD PTR es:[edi],dx
3002a4a3:	add    BYTE PTR [eax],al
3002a4a5:	add    BYTE PTR [eax+0x68005390],dl
3002a4ab:	add    BYTE PTR [ebp+0x0],dh
3002a4ae:	je     0x3002a4b0
3002a4b0:	add    BYTE PTR fs:[edi+0x0],ch
3002a4b4:	ja     0x3002a4b6
3002a4b6:	outs   dx,BYTE PTR ds:[esi]
3002a4b7:	add    BYTE PTR [edx+0x0],dl
3002a4ba:	add    BYTE PTR gs:[ecx+0x0],ah
3002a4be:	jae    0x3002a4c0
3002a4c0:	outs   dx,DWORD PTR ds:[esi]
3002a4c1:	add    BYTE PTR [esi+0x0],ch
3002a4c4:	add    BYTE PTR [eax],al
3002a4c6:	nop
3002a4c7:	nop
3002a4c8:	inc    ebx
3002a4c9:	add    BYTE PTR [edx+0x0],dh
3002a4cc:	popa   
3002a4cd:	add    BYTE PTR [ebx+0x0],dh
3002a4d0:	push   0x69005400
3002a4d5:	add    BYTE PTR [ebp+0x0],ch
3002a4d8:	add    BYTE PTR gs:[eax],al
3002a4db:	add    BYTE PTR [ebp+0x0],dl
3002a4de:	jae    0x3002a4e0
3002a4e0:	add    BYTE PTR gs:[edx+0x0],dh
3002a4e4:	push   esp
3002a4e5:	add    BYTE PTR [ecx+0x0],bh
3002a4e8:	jo     0x3002a4ea
3002a4ea:	add    BYTE PTR gs:[eax],al
3002a4ed:	add    BYTE PTR [eax+0x73005590],dl
3002a4f3:	add    BYTE PTR [ebp+0x0],ah
3002a4f6:	jb     0x3002a4f8
3002a4f8:	push   eax
3002a4f9:	add    BYTE PTR [edx+0x0],dh
3002a4fc:	imul   eax,DWORD PTR [eax],0x76
3002a502:	nop
3002a503:	nop
3002a504:	push   esi
3002a505:	add    BYTE PTR [ebx+0x0],dl
3002a508:	push   ebx
3002a509:	add    BYTE PTR [ebx+0x0],cl
3002a50c:	push   ebp
3002a50d:	add    BYTE PTR [eax],al
3002a50f:	add    BYTE PTR [esi+0x0],dl
3002a512:	push   ebx
3002a513:	add    BYTE PTR [ecx+0x0],cl
3002a516:	push   eax
3002a517:	add    BYTE PTR [eax+eax*1+0x69],cl
3002a51b:	add    BYTE PTR [ebx+0x0],ah
3002a51e:	add    BYTE PTR gs:[esi+0x0],ch
3002a522:	jae    0x3002a524
3002a524:	add    BYTE PTR gs:[eax],al
3002a527:	add    BYTE PTR [ebp+0x0],al
3002a52a:	js     0x3002a52c
3002a52c:	add    BYTE PTR gs:[esi+0x0],cl
3002a530:	popa   
3002a531:	add    BYTE PTR [ebp+0x0],ch
3002a534:	add    BYTE PTR gs:[eax],al
3002a537:	add    BYTE PTR [eax+0x0],dl
3002a53a:	add    BYTE PTR gs:[edx+0x0],dh
3002a53e:	data16 add BYTE PTR [ebp+0x0],cl
3002a542:	add    BYTE PTR gs:[ebp+0x0],ch
3002a546:	outs   dx,DWORD PTR ds:[esi]
3002a547:	add    BYTE PTR [edx+0x0],dh
3002a54a:	jns    0x3002a54c
3002a54c:	add    BYTE PTR [eax],al
3002a54e:	nop
3002a54f:	nop
3002a550:	push   eax
3002a551:	add    BYTE PTR [edx+0x0],dh
3002a554:	outs   dx,DWORD PTR ds:[esi]
3002a555:	add    BYTE PTR [eax+eax*1+0x75],ah
3002a559:	add    BYTE PTR [ebx+0x0],ah
3002a55c:	je     0x3002a55e
3002a55e:	dec    esp
3002a55f:	add    BYTE PTR [edi+0x0],ch
3002a562:	arpl   WORD PTR [eax],ax
3002a564:	popa   
3002a565:	add    BYTE PTR [eax+eax*1+0x65],ch
3002a569:	add    BYTE PTR [eax],al
3002a56b:	add    BYTE PTR [eax+0x0],dl
3002a56e:	jb     0x3002a570
3002a570:	outs   dx,DWORD PTR ds:[esi]
3002a571:	add    BYTE PTR [esi+0x0],ah
3002a574:	imul   eax,DWORD PTR [eax],0x65006c
3002a57a:	dec    eax
3002a57b:	add    BYTE PTR [ecx+0x0],ah
3002a57e:	jae    0x3002a580
3002a580:	push   0x48000000
3002a585:	add    BYTE PTR [eax+eax*1+0x53],al
3002a589:	add    BYTE PTR [ecx+0x0],ch
3002a58c:	jp     0x3002a58e
3002a58e:	add    BYTE PTR gs:[eax],al
3002a591:	add    BYTE PTR [eax+0x73004990],dl
3002a597:	add    BYTE PTR [eax+eax*1+0x6f],al
3002a59b:	add    BYTE PTR [ebp+0x0],ch
3002a59e:	popa   
3002a59f:	add    BYTE PTR [ecx+0x0],ch
3002a5a2:	outs   dx,BYTE PTR ds:[esi]
3002a5a3:	add    BYTE PTR [ebp+0x0],cl
3002a5a6:	add    BYTE PTR gs:[ebp+0x0],ch
3002a5aa:	bound  eax,QWORD PTR [eax]
3002a5ac:	add    BYTE PTR gs:[edx+0x0],dh
3002a5b0:	add    BYTE PTR [eax],al
3002a5b2:	nop
3002a5b3:	nop
3002a5b4:	dec    edi
3002a5b5:	add    BYTE PTR [ebx+0x0],dl
3002a5b8:	inc    ecx
3002a5b9:	add    BYTE PTR [edx+0x0],dh
3002a5bc:	arpl   WORD PTR [eax],ax
3002a5be:	push   0x90000000
3002a5c3:	nop
3002a5c4:	inc    ebx
3002a5c5:	add    BYTE PTR [edi+0x0],ch
3002a5c8:	ins    DWORD PTR es:[edi],dx
3002a5c9:	add    BYTE PTR [eax+0x0],dh
3002a5cc:	jne    0x3002a5ce
3002a5ce:	je     0x3002a5d0
3002a5d0:	add    BYTE PTR gs:[edx+0x0],dh
3002a5d4:	dec    esi
3002a5d5:	add    BYTE PTR [ecx+0x0],ah
3002a5d8:	ins    DWORD PTR es:[edi],dx
3002a5d9:	add    BYTE PTR [ebp+0x0],ah
3002a5dc:	add    BYTE PTR [eax],al
3002a5de:	nop
3002a5df:	nop
3002a5e0:	inc    esp
3002a5e1:	add    BYTE PTR [edi+0x0],ch
3002a5e4:	ins    DWORD PTR es:[edi],dx
3002a5e5:	add    BYTE PTR [ecx+0x0],ah
3002a5e8:	imul   eax,DWORD PTR [eax],0x4e006e
3002a5ee:	popa   
3002a5ef:	add    BYTE PTR [ebp+0x0],ch
3002a5f2:	add    BYTE PTR gs:[eax],al
3002a5f5:	add    BYTE PTR [eax+0x72004290],dl
3002a5fb:	add    BYTE PTR [ecx+0x0],ah
3002a5fe:	outs   dx,BYTE PTR ds:[esi]
3002a5ff:	add    BYTE PTR [ebx+0x0],ah
3002a602:	push   0x61004e00
3002a607:	add    BYTE PTR [ebp+0x0],ch
3002a60a:	add    BYTE PTR gs:[eax],al
3002a60d:	add    BYTE PTR [eax+0x53004f90],dl
3002a613:	add    BYTE PTR [ebp+0x0],dl
3002a616:	jae    0x3002a618
3002a618:	add    BYTE PTR gs:[edx+0x0],dh
3002a61c:	dec    esp
3002a61d:	add    BYTE PTR [edi+0x0],ch
3002a620:	arpl   WORD PTR [eax],ax
3002a622:	popa   
3002a623:	add    BYTE PTR [eax+eax*1+0x65],ch
3002a627:	add    BYTE PTR [eax],al
3002a629:	add    BYTE PTR [eax+0x73005590],dl
3002a62f:	add    BYTE PTR [ebp+0x0],ah
3002a632:	jb     0x3002a634
3002a634:	dec    edi
3002a635:	add    BYTE PTR [ebx+0x0],dl
3002a638:	push   ebp
3002a639:	add    BYTE PTR [ecx+0x0],cl
3002a63c:	dec    esp
3002a63d:	add    BYTE PTR [edi+0x0],ch
3002a640:	arpl   WORD PTR [eax],ax
3002a642:	popa   
3002a643:	add    BYTE PTR [eax+eax*1+0x65],ch
3002a647:	add    BYTE PTR [eax],al
3002a649:	add    BYTE PTR [eax+0x64005c90],dl
3002a64f:	add    BYTE PTR [ebp+0x0],ah
3002a652:	bound  eax,QWORD PTR [eax]
3002a654:	jne    0x3002a656
3002a656:	add    BYTE PTR [bx+0x0],ah
3002a65a:	add    BYTE PTR gs:[ebp+0x0],ah
3002a65e:	add    BYTE PTR cs:[ebp+0x0],ch
3002a662:	add    BYTE PTR fs:[ebp+0x0],ch
3002a666:	jo     0x3002a668
3002a668:	add    BYTE PTR [eax],al
3002a66a:	nop
3002a66b:	nop
3002a66c:	jae    0x3002a66e
3002a66e:	jno    0x3002a670
3002a670:	ins    DWORD PTR es:[edi],dx
3002a671:	add    BYTE PTR [eax+eax*1+0x61],ah
3002a675:	add    BYTE PTR [eax+eax*1+0x61],dh
3002a679:	add    BYTE PTR [eax],al
3002a67b:	add    BYTE PTR [eax+0x41909090],dl
3002a681:	add    BYTE PTR [eax+eax*1+0x74],dh
3002a685:	add    BYTE PTR [ebp+0x0],ah
3002a688:	ins    DWORD PTR es:[edi],dx
3002a689:	add    BYTE PTR [eax+0x0],dh
3002a68c:	je     0x3002a68e
3002a68e:	and    BYTE PTR [eax],al
3002a690:	je     0x3002a692
3002a692:	outs   dx,DWORD PTR ds:[esi]
3002a693:	add    BYTE PTR [eax],ah
3002a695:	add    BYTE PTR [edi+0x0],dh
3002a698:	jb     0x3002a69a
3002a69a:	imul   eax,DWORD PTR [eax],0x650074
3002a6a0:	and    BYTE PTR [eax],al
3002a6a2:	je     0x3002a6a4
3002a6a4:	outs   dx,DWORD PTR ds:[esi]
3002a6a5:	add    BYTE PTR [eax],ah
3002a6a7:	add    BYTE PTR [eax+0x0],cl
3002a6aa:	dec    ebx
3002a6ab:	add    BYTE PTR [ebp+0x0],al
3002a6ae:	pop    ecx
3002a6af:	add    BYTE PTR [edi+0x0],bl
3002a6b2:	dec    esp
3002a6b3:	add    BYTE PTR [edi+0x0],cl
3002a6b6:	inc    ebx
3002a6b7:	add    BYTE PTR [ecx+0x0],al
3002a6ba:	dec    esp
3002a6bb:	add    BYTE PTR [edi+0x0],bl
3002a6be:	dec    ebp
3002a6bf:	add    BYTE PTR [ecx+0x0],al
3002a6c2:	inc    ebx
3002a6c3:	add    BYTE PTR [eax+0x0],cl
3002a6c6:	dec    ecx
3002a6c7:	add    BYTE PTR [esi+0x0],cl
3002a6ca:	inc    ebp
3002a6cb:	add    BYTE PTR [eax],ah
3002a6cd:	add    BYTE PTR [edi+0x0],dh
3002a6d0:	imul   eax,DWORD PTR [eax],0x680074
3002a6d6:	outs   dx,DWORD PTR ds:[esi]
3002a6d7:	add    BYTE PTR [ebp+0x0],dh
3002a6da:	je     0x3002a6dc
3002a6dc:	and    BYTE PTR [eax],al
3002a6de:	das    
3002a6df:	add    BYTE PTR [ebx+0x0],dh
3002a6e2:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
3002a6e7:	add    BYTE PTR [eax+0x0],dh
3002a6ea:	and    BYTE PTR [eax],al
3002a6ec:	arpl   WORD PTR [eax],ax
3002a6ee:	outs   dx,DWORD PTR ds:[esi]
3002a6ef:	add    BYTE PTR [ebp+0x0],ch
3002a6f2:	ins    DWORD PTR es:[edi],dx
3002a6f3:	add    BYTE PTR [ecx+0x0],ah
3002a6f6:	outs   dx,BYTE PTR ds:[esi]
3002a6f7:	add    BYTE PTR [eax+eax*1+0x0],ah
3002a6fb:	add    BYTE PTR [esi+0x0],dl
3002a6fe:	jae    0x3002a700
3002a700:	inc    esp
3002a701:	add    BYTE PTR [ebp+0x0],ah
3002a704:	je     0x3002a706
3002a706:	outs   dx,DWORD PTR ds:[esi]
3002a707:	add    BYTE PTR [ebp+0x0],dh
3002a70a:	jb     0x3002a70c
3002a70c:	cmp    al,BYTE PTR [eax]
3002a70e:	and    BYTE PTR [eax],al
3002a710:	ins    DWORD PTR es:[edi],dx
3002a711:	add    BYTE PTR [ecx+0x0],ah
3002a714:	je     0x3002a716
3002a716:	arpl   WORD PTR [eax],ax
3002a718:	push   0x64006500
3002a71d:	add    BYTE PTR [eax],ah
3002a71f:	add    BYTE PTR [eax],ch
3002a721:	add    BYTE PTR ds:0x29007300,ah
3002a727:	add    BYTE PTR [edx],bh
3002a729:	add    BYTE PTR [eax],ah
3002a72b:	add    BYTE PTR ds:0xd007300,ah
3002a731:	add    BYTE PTR [edx],cl
3002a733:	add    BYTE PTR [eax],al
3002a735:	add    BYTE PTR [eax+0xa000d90],dl
3002a73b:	add    BYTE PTR [eax],al
3002a73d:	add    BYTE PTR [eax-0x58dceb70],dl
3002a743:	add    al,0xe9
3002a745:	xor    ah,dl
3002a747:	dec    eax
3002a748:	fwait
3002a749:	xchg   DWORD PTR [esi+0x4f450336],esp
3002a74f:	ds push edx
3002a751:	add    BYTE PTR [edi+0x0],ch
3002a754:	outs   dx,DWORD PTR ds:[esi]
3002a755:	add    BYTE PTR [eax+eax*1+0x46],dh
3002a759:	add    BYTE PTR [edi+0x0],ch
3002a75c:	ins    BYTE PTR es:[edi],dx
3002a75d:	add    BYTE PTR [eax+eax*1+0x65],ah
3002a761:	add    BYTE PTR [edx+0x0],dh
3002a764:	add    BYTE PTR [eax],al
3002a766:	nop
3002a767:	nop
3002a768:	dec    ebp
3002a769:	add    BYTE PTR [ebp+0x0],ah
3002a76c:	jb     0x3002a76e
3002a76e:	add    BYTE PTR [di+0x0],ah
3002a772:	push   edx
3002a773:	add    BYTE PTR [ebp+0x0],ah
3002a776:	add    BYTE PTR [bx+di+0x0],ch
3002a77a:	jae    0x3002a77c
3002a77c:	je     0x3002a77e
3002a77e:	jb     0x3002a780
3002a780:	jns    0x3002a782
3002a782:	add    BYTE PTR [eax],al
3002a784:	pop    edx
3002a785:	add    BYTE PTR [ebp+0x0],ah
3002a788:	jb     0x3002a78a
3002a78a:	outs   dx,DWORD PTR ds:[esi]
3002a78b:	add    BYTE PTR [ecx+0x0],cl
3002a78e:	ins    DWORD PTR es:[edi],dx
3002a78f:	add    BYTE PTR [eax+0x0],dh
3002a792:	popa   
3002a793:	add    BYTE PTR [ebx+0x0],ah
3002a796:	je     0x3002a798
3002a798:	add    BYTE PTR [eax],al
3002a79a:	nop
3002a79b:	nop
3002a79c:	nop
3002a79d:	nop
3002a79e:	nop
3002a79f:	nop
3002a7a0:	push   eax
3002a7a1:	add    BYTE PTR [ebx+0x0],ch
3002a7a4:	add    BYTE PTR [si+0x0],al
3002a7a8:	add    BYTE PTR gs:[esi+0x0],ah
3002a7ac:	dec    ebp
3002a7ad:	add    BYTE PTR [ecx+0x0],ah
3002a7b0:	outs   dx,BYTE PTR ds:[esi]
3002a7b1:	add    BYTE PTR [ecx+0x0],ah
3002a7b4:	add    BYTE PTR [di+0x0],ah
3002a7b8:	ins    DWORD PTR es:[edi],dx
3002a7b9:	add    BYTE PTR [ebp+0x0],ah
3002a7bc:	outs   dx,BYTE PTR ds:[esi]
3002a7bd:	add    BYTE PTR [eax+eax*1+0x20],dh
3002a7c1:	add    BYTE PTR [esi+0x0],ch
3002a7c4:	outs   dx,DWORD PTR ds:[esi]
3002a7c5:	add    BYTE PTR [eax+eax*1+0x20],dh
3002a7c9:	add    BYTE PTR [ecx+0x0],bh
3002a7cc:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
3002a7d1:	add    BYTE PTR [ecx+0x0],ch
3002a7d4:	outs   dx,BYTE PTR ds:[esi]
3002a7d5:	add    BYTE PTR [ecx+0x0],ch
3002a7d8:	je     0x3002a7da
3002a7da:	imul   eax,DWORD PTR [eax],0x6c0061
3002a7e0:	imul   eax,DWORD PTR [eax],0x65007a
3002a7e6:	add    BYTE PTR fs:[eax],al
3002a7e9:	add    BYTE PTR [eax+0x4b004890],dl
3002a7ef:	add    BYTE PTR [ebp+0x0],al
3002a7f2:	pop    ecx
3002a7f3:	add    BYTE PTR [edi+0x0],bl
3002a7f6:	dec    esp
3002a7f7:	add    BYTE PTR [edi+0x0],cl
3002a7fa:	inc    ebx
3002a7fb:	add    BYTE PTR [ecx+0x0],al
3002a7fe:	dec    esp
3002a7ff:	add    BYTE PTR [edi+0x0],bl
3002a802:	dec    ebp
3002a803:	add    BYTE PTR [ecx+0x0],al
3002a806:	inc    ebx
3002a807:	add    BYTE PTR [eax+0x0],cl
3002a80a:	dec    ecx
3002a80b:	add    BYTE PTR [esi+0x0],cl
3002a80e:	inc    ebp
3002a80f:	add    BYTE PTR [eax+eax*1+0x0],bl
3002a813:	add    BYTE PTR [ebx+0x0],dl
3002a816:	push   0x74007500
3002a81b:	add    BYTE PTR [eax+eax*1+0x69],dh
3002a81f:	add    BYTE PTR [esi+0x0],ch
3002a822:	add    BYTE PTR [bx+si],ah
3002a825:	add    BYTE PTR [eax+eax*1+0x6f],ah
3002a829:	add    BYTE PTR [edi+0x0],dh
3002a82c:	outs   dx,BYTE PTR ds:[esi]
3002a82d:	add    BYTE PTR [eax],ah
3002a82f:	add    BYTE PTR [eax+0x0],dh
3002a832:	imul   eax,DWORD PTR [eax],0x67
3002a835:	add    BYTE PTR [eax+eax*1+0x65],ah
3002a839:	add    BYTE PTR [esi+0x0],ah
3002a83c:	and    BYTE PTR [eax],al
3002a83e:	jb     0x3002a840
3002a840:	add    BYTE PTR gs:[edi+0x0],ah
3002a844:	imul   eax,DWORD PTR [eax],0x740073
3002a84a:	jb     0x3002a84c
3002a84c:	jns    0x3002a84e
3002a84e:	add    BYTE PTR [eax],al
3002a850:	push   eax
3002a851:	add    BYTE PTR [ebx+0x0],ch
3002a854:	add    BYTE PTR [si+0x0],al
3002a858:	add    BYTE PTR gs:[esi+0x0],ah
3002a85c:	and    BYTE PTR [eax],al
3002a85e:	jb     0x3002a860
3002a860:	add    BYTE PTR gs:[edi+0x0],ah
3002a864:	imul   eax,DWORD PTR [eax],0x740073
3002a86a:	jb     0x3002a86c
3002a86c:	jns    0x3002a86e
3002a86e:	and    BYTE PTR [eax],al
3002a870:	jae    0x3002a872
3002a872:	push   0x74007500
3002a877:	add    BYTE PTR [eax+eax*1+0x6f],ah
3002a87b:	add    BYTE PTR [edi+0x0],dh
3002a87e:	outs   dx,BYTE PTR ds:[esi]
3002a87f:	add    BYTE PTR [eax],ah
3002a881:	add    BYTE PTR [ebx+0x0],ah
3002a884:	outs   dx,DWORD PTR ds:[esi]
3002a885:	add    BYTE PTR [ebp+0x0],ch
3002a888:	jo     0x3002a88a
3002a88a:	ins    BYTE PTR es:[edi],dx
3002a88b:	add    BYTE PTR [ebp+0x0],ah
3002a88e:	je     0x3002a890
3002a890:	add    BYTE PTR gs:[eax],al
3002a893:	add    BYTE PTR [edx],ch
3002a895:	add    BYTE PTR [esi],ch
3002a897:	add    BYTE PTR [edx],ch
3002a899:	add    BYTE PTR [eax],al
3002a89b:	add    BYTE PTR [edx+0x0],dl
3002a89e:	add    BYTE PTR gs:[edi+0x0],ah
3002a8a2:	imul   eax,DWORD PTR [eax],0x740073
3002a8a8:	jb     0x3002a8aa
3002a8aa:	jns    0x3002a8ac
3002a8ac:	push   edx
3002a8ad:	add    BYTE PTR [edi+0x0],ch
3002a8b0:	outs   dx,DWORD PTR ds:[esi]
3002a8b1:	add    BYTE PTR [eax+eax*1+0x0],dh
3002a8b5:	add    BYTE PTR [eax+0x73005590],dl
3002a8bb:	add    BYTE PTR [ebp+0x0],ah
3002a8be:	inc    esi
3002a8bf:	add    BYTE PTR [ecx+0x0],ah
3002a8c2:	jae    0x3002a8c4
3002a8c4:	je     0x3002a8c6
3002a8c6:	inc    ebx
3002a8c7:	add    BYTE PTR [eax+0x0],ch
3002a8ca:	add    BYTE PTR gs:[ebx+0x0],ah
3002a8ce:	imul   eax,DWORD PTR [eax],0x0
3002a8d1:	add    BYTE PTR [eax-0x6f6f6f70],dl
3002a8d7:	nop
3002a8d8:	inc    edx
3002a8d9:	add    BYTE PTR [ecx+0x0],ch
3002a8dc:	outs   dx,BYTE PTR ds:[esi]
3002a8dd:	add    BYTE PTR [eax+eax*1+0x69],ah
3002a8e1:	add    BYTE PTR [esi+0x0],ch
3002a8e4:	add    BYTE PTR [bx+si],ah
3002a8e7:	add    BYTE PTR [edx+0x0],dl
3002a8ea:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
3002a8ef:	add    BYTE PTR [edx+0x0],dh
3002a8f2:	add    BYTE PTR gs:[ebx+0x0],ah
3002a8f6:	je     0x3002a8f8
3002a8f8:	and    BYTE PTR [eax],al
3002a8fa:	das    
3002a8fb:	add    BYTE PTR [eax],ah
3002a8fd:	add    BYTE PTR [ebx+0x0],al
3002a900:	outs   dx,DWORD PTR ds:[esi]
3002a901:	add    BYTE PTR [eax+eax*1+0x65],ah
3002a905:	add    BYTE PTR [edx+0x0],al
3002a908:	popa   
3002a909:	add    BYTE PTR [ebx+0x0],dh
3002a90c:	add    BYTE PTR gs:[eax],ah
3002a90f:	add    BYTE PTR [ebp+0x0],ah
3002a912:	outs   dx,BYTE PTR ds:[esi]
3002a913:	add    BYTE PTR [eax+eax*1+0x72],dh
3002a917:	add    BYTE PTR [ecx+0x0],bh
3002a91a:	and    BYTE PTR [eax],al
3002a91c:	data16 add BYTE PTR [edx+0x0],dh
3002a920:	outs   dx,DWORD PTR ds:[esi]
3002a921:	add    BYTE PTR [ebp+0x0],ch
3002a924:	and    BYTE PTR [eax],al
3002a926:	arpl   WORD PTR [eax],ax
3002a928:	outs   dx,DWORD PTR ds:[esi]
3002a929:	add    BYTE PTR [esi+0x0],ch
3002a92c:	data16 add BYTE PTR [ecx+0x0],ch
3002a930:	add    BYTE PTR [di+0x0],dh
3002a934:	jb     0x3002a936
3002a936:	popa   
3002a937:	add    BYTE PTR [eax+eax*1+0x69],dh
3002a93b:	add    BYTE PTR [edi+0x0],ch
3002a93e:	outs   dx,BYTE PTR ds:[esi]
3002a93f:	add    BYTE PTR [eax],ah
3002a941:	add    BYTE PTR [eax+0x0],ch
3002a944:	imul   eax,DWORD PTR [eax],0x650076
3002a94a:	and    BYTE PTR [eax],al
3002a94c:	imul   eax,DWORD PTR [eax],0x200073
3002a952:	ins    DWORD PTR es:[edi],dx
3002a953:	add    BYTE PTR [ecx+0x0],ah
3002a956:	ins    BYTE PTR es:[edi],dx
3002a957:	add    BYTE PTR [esi+0x0],ah
3002a95a:	outs   dx,DWORD PTR ds:[esi]
3002a95b:	add    BYTE PTR [edx+0x0],dh
3002a95e:	ins    DWORD PTR es:[edi],dx
3002a95f:	add    BYTE PTR [ebp+0x0],ah
3002a962:	add    BYTE PTR fs:[eax+eax*1],ch
3002a966:	and    BYTE PTR [eax],al
3002a968:	imul   eax,DWORD PTR [eax],0x6e0067
3002a96e:	outs   dx,DWORD PTR ds:[esi]
3002a96f:	add    BYTE PTR [edx+0x0],dh
3002a972:	imul   eax,DWORD PTR [eax],0x67006e
3002a978:	add    BYTE PTR cs:[eax],al
3002a97b:	add    BYTE PTR [edi+eiz*2],bh
3002a97e:	add    esi,DWORD PTR [eax]
3002a980:	outs   dx,DWORD PTR ds:[esi]
3002a981:	add    BYTE PTR [eax+eax*1+0x64],ch
3002a985:	add    BYTE PTR [esi+0x0],dl
3002a988:	add    BYTE PTR gs:[edx+0x0],dh
3002a98c:	jae    0x3002a98e
3002a98e:	imul   eax,DWORD PTR [eax],0x6e006f
3002a994:	add    BYTE PTR [eax],al
3002a996:	nop
3002a997:	nop
3002a998:	outs   dx,BYTE PTR ds:[esi]
3002a999:	add    BYTE PTR [ebp+0x0],ah
3002a99c:	ja     0x3002a99e
3002a99e:	push   esi
3002a99f:	add    BYTE PTR [ebp+0x0],ah
3002a9a2:	jb     0x3002a9a4
3002a9a4:	jae    0x3002a9a6
3002a9a6:	imul   eax,DWORD PTR [eax],0x6e006f
3002a9ac:	add    BYTE PTR [eax],al
3002a9ae:	nop
3002a9af:	nop
3002a9b0:	jno    0x3002a9b2
3002a9b2:	ja     0x3002a9b4
3002a9b4:	outs   dx,DWORD PTR ds:[esi]
3002a9b5:	add    BYTE PTR [edx+0x0],dh
3002a9b8:	add    BYTE PTR fs:[edx],bh
3002a9bb:	add    BYTE PTR [eax],al
3002a9bd:	add    BYTE PTR [eax+0x5c005c90],dl
3002a9c3:	add    BYTE PTR [eax],al
3002a9c5:	add    BYTE PTR [eax+0x376ba90],dl
3002a9cb:	xor    BYTE PTR [eax],al
3002a9cd:	add    BYTE PTR [eax+0x484f],al
	...
3002aa0b:	add    BYTE PTR [eax+0x30],dl
3002aa0e:	add    al,0x30
3002aa10:	sbb    BYTE PTR [edx+0xb93002],ch
3002aa16:	add    BYTE PTR [eax],al
3002aa18:	xor    eax,0x85000382
3002aa1d:	retf   0x3
3002aa20:	aam    0xca
3002aa22:	add    eax,DWORD PTR [eax]
3002aa24:	cmp    al,0xcb
3002aa26:	add    eax,DWORD PTR [eax]
3002aa28:	xchg   esp,eax
3002aa29:	retf   
3002aa2a:	add    eax,DWORD PTR [eax]
3002aa2c:	in     al,0xcb
3002aa2e:	add    eax,DWORD PTR [eax]
3002aa30:	cmp    al,0xcc
3002aa32:	add    eax,DWORD PTR [eax]
3002aa34:	mov    esp,cs
3002aa36:	add    eax,DWORD PTR [eax]
3002aa38:	loopne 0x3002aa06
3002aa3a:	add    eax,DWORD PTR [eax]
3002aa3c:	scas   eax,DWORD PTR es:[edi]
3002aa3d:	int    0x3
3002aa3f:	add    BYTE PTR [esi-0x32],al
3002aa42:	add    eax,DWORD PTR [eax]
3002aa44:	retf   0x3ce
3002aa47:	add    BYTE PTR [edx],dh
3002aa49:	iret   
3002aa4a:	add    eax,DWORD PTR [eax]
3002aa4c:	call   0x3d0:0x40003cf
3002aa53:	add    BYTE PTR [ebx],ch
3002aa55:	rol    DWORD PTR [ebx],1
3002aa57:	add    BYTE PTR [eax+0x180003d1],bl
3002aa5d:	rol    BYTE PTR [ebx],cl
3002aa5f:	add    BYTE PTR [ebp-0x2bfffc2e],al
3002aa65:	rol    BYTE PTR [ebx],cl
3002aa67:	add    BYTE PTR [ebx+edx*8+0x3],al
3002aa6b:	add    ah,cl
3002aa6d:	rol    DWORD PTR [ebx],cl
3002aa6f:	add    BYTE PTR [eax-0x2c],cl
3002aa72:	add    eax,DWORD PTR [eax]
3002aa74:	cwde   
3002aa75:	aam    0x3
3002aa77:	add    al,ch
3002aa79:	aam    0x3
3002aa7b:	add    BYTE PTR [ebp+edx*8+0x3],al
3002aa7f:	add    BYTE PTR ds:0xd00003d6,cl
3002aa85:	(bad)  
3002aa86:	add    eax,DWORD PTR [eax]
3002aa88:	pop    esp
3002aa89:	xlat   BYTE PTR ds:[ebx]
3002aa8a:	add    eax,DWORD PTR [eax]
3002aa8c:	mov    al,0xd7
3002aa8e:	add    eax,DWORD PTR [eax]
3002aa90:	push   eax
3002aa91:	fadd   DWORD PTR [ebx]
3002aa93:	add    BYTE PTR [eax+0x3d8],dh
3002aa99:	fld    DWORD PTR [ebx]
3002aa9b:	add    BYTE PTR [eax-0x27],dl
3002aa9e:	add    eax,DWORD PTR [eax]
3002aaa0:	mov    ebp,0xc0003d9
3002aaa5:	fiadd  DWORD PTR [ebx]
3002aaa7:	add    BYTE PTR [edx+ebx*8+0x3],bl
3002aaab:	add    BYTE PTR [ecx+0x180003da],bh
3002aab1:	fild   DWORD PTR [ebx]
3002aab3:	add    BYTE PTR [eax-0x25],bh
3002aab6:	add    eax,DWORD PTR [eax]
3002aab8:	enter  0x3db,0x0
3002aabc:	sub    eax,0x800003dc
3002aac1:	fadd   QWORD PTR [ebx]
3002aac3:	add    al,bl
3002aac5:	fadd   QWORD PTR [ebx]
3002aac7:	add    BYTE PTR [ebx*8-0x2263fffd],bh
3002aace:	add    eax,DWORD PTR [eax]
3002aad0:	adc    al,0xde
3002aad2:	add    eax,DWORD PTR [eax]
3002aad4:	je     0x3002aab4
3002aad6:	add    eax,DWORD PTR [eax]
3002aad8:	(bad)  
3002aada:	add    eax,DWORD PTR [eax]
3002aadc:	xor    bh,bl
3002aade:	add    eax,DWORD PTR [eax]
3002aae0:	mov    bh,bl
3002aae2:	add    eax,DWORD PTR [eax]
3002aae4:	loopne 0x3002aac5
3002aae6:	add    eax,DWORD PTR [eax]
3002aae8:	inc    eax
3002aae9:	loopne 0x3002aaee
3002aaeb:	add    BYTE PTR [edx+0xc0003e0],bh
3002aaf1:	loope  0x3002aaf6
3002aaf3:	add    BYTE PTR [ecx+eiz*8+0x3],bl
3002aaf7:	add    BYTE PTR [edi+0x4c0003e1],ch
3002aafd:	loop   0x3002ab02
3002aaff:	add    BYTE PTR [edx+eiz*8-0x1d13fffd],bl
3002ab06:	add    eax,DWORD PTR [eax]
3002ab08:	inc    esp
3002ab09:	jecxz  0x3002ab0e
3002ab0b:	add    BYTE PTR [ebx+eiz*8-0x1c03fffd],ch
3002ab12:	add    eax,DWORD PTR [eax]
3002ab14:	dec    esp
3002ab15:	in     al,0x3
3002ab17:	add    BYTE PTR [eax+0x140003e4],ch
3002ab1d:	in     eax,0x3
3002ab1f:	add    BYTE PTR [edi-0x1b],ch
3002ab22:	add    eax,DWORD PTR [eax]
3002ab24:	int3   
3002ab25:	in     eax,0x3
3002ab27:	add    BYTE PTR [esi+eiz*8],bl
3002ab2a:	add    eax,DWORD PTR [eax]
3002ab2c:	ins    BYTE PTR es:[edi],dx
3002ab2d:	out    0x3,al
3002ab2f:	add    dl,bl
3002ab31:	out    0x3,al
3002ab33:	add    BYTE PTR ds:0x8c0003e7,bh
3002ab39:	out    0x3,eax
3002ab3b:	add    ah,bl
3002ab3d:	out    0x3,eax
3002ab3f:	add    BYTE PTR [eax+ebp*8],ch
3002ab42:	add    eax,DWORD PTR [eax]
3002ab44:	mov    eax,gs
3002ab46:	add    eax,DWORD PTR [eax]
3002ab48:	call   0x8402af35
3002ab4d:	jmp    0x19b2ab55
3002ab52:	add    eax,DWORD PTR [eax]
3002ab54:	or     dl,ch
3002ab56:	add    eax,DWORD PTR [eax]
3002ab58:	imul   ebp,edx,0xeac80003
3002ab5e:	add    eax,DWORD PTR [eax]
3002ab60:	sbb    bl,ch
3002ab62:	add    eax,DWORD PTR [eax]
3002ab64:	js     0x3002ab51
3002ab66:	add    eax,DWORD PTR [eax]
3002ab68:	enter  0x3eb,0x0
3002ab6c:	mov    ch,0xec
3002ab6e:	add    eax,DWORD PTR [eax]
3002ab70:	sub    al,0xed
3002ab72:	add    eax,DWORD PTR [eax]
3002ab74:	cwde   
3002ab75:	in     eax,dx
3002ab76:	add    eax,DWORD PTR [eax]
3002ab78:	call   0x6802af6a
3002ab7d:	out    dx,al
3002ab7e:	add    eax,DWORD PTR [eax]
3002ab80:	mov    dh,ch
3002ab82:	add    eax,DWORD PTR [eax]
3002ab84:	jmp    0x7802af77
3002ab89:	out    dx,eax
3002ab8a:	add    eax,DWORD PTR [eax]
3002ab8c:	mov    dl,0xef
3002ab8e:	add    eax,DWORD PTR [eax]
3002ab90:	or     al,0xf0
3002ab92:	add    eax,DWORD PTR [eax]
3002ab94:	pop    esp
3002ab95:	lock add eax,DWORD PTR [eax]
3002ab98:	lods   al,BYTE PTR ds:[esi]
3002ab99:	lock add eax,DWORD PTR [eax]
3002ab9c:	cld    
3002ab9d:	lock add eax,DWORD PTR [eax]
3002aba0:	dec    esp
3002aba1:	icebp  
3002aba2:	add    eax,DWORD PTR [eax]
3002aba4:	pushf  
3002aba5:	icebp  
3002aba6:	add    eax,DWORD PTR [eax]
3002aba8:	in     al,dx
3002aba9:	icebp  
3002abaa:	add    eax,DWORD PTR [eax]
3002abac:	push   ecx
3002abad:	repnz add eax,DWORD PTR [eax]
3002abb0:	mov    ch,0xf2
3002abb2:	add    eax,DWORD PTR [eax]
3002abb4:	sbb    ebx,esi
3002abb6:	add    eax,DWORD PTR [eax]
3002abb8:	xor    bl,0x3
3002abbb:	add    cl,ch
3002abbd:	repz add eax,DWORD PTR [eax]
3002abc0:	sub    ah,dh
3002abc2:	add    eax,DWORD PTR [eax]
3002abc4:	jle    0x3002abba
3002abc6:	add    eax,DWORD PTR [eax]
3002abc8:	shl    ah,1
3002abca:	add    eax,DWORD PTR [eax]
3002abcc:	and    ch,dh
3002abce:	add    eax,DWORD PTR [eax]
3002abd0:	jo     0x3002abc7
3002abd2:	add    eax,DWORD PTR [eax]
3002abd4:	shl    ch,0x3
3002abd7:	add    BYTE PTR [eax],dl
3002abd9:	test   BYTE PTR [ebx],0x0
3002abdc:	arpl   si,si
3002abde:	add    eax,DWORD PTR [eax]
3002abe0:	mov    ah,0xf6
3002abe2:	add    eax,DWORD PTR [eax]
3002abe4:	add    al,0xf7
3002abe6:	add    eax,DWORD PTR [eax]
3002abe8:	test   DWORD PTR fs:[ebx],0x3f7b400
3002abef:	add    BYTE PTR [eax+edi*8],cl
3002abf2:	add    eax,DWORD PTR [eax]
3002abf4:	ins    BYTE PTR es:[edi],dx
3002abf5:	clc    
3002abf6:	add    eax,DWORD PTR [eax]
3002abf8:	sar    al,1
3002abfa:	add    eax,DWORD PTR [eax]
3002abfc:	cmp    cl,bh
3002abfe:	add    eax,DWORD PTR [eax]
3002ac00:	nop
3002ac01:	stc    
3002ac02:	add    eax,DWORD PTR [eax]
3002ac04:	clc    
3002ac05:	stc    
3002ac06:	add    eax,DWORD PTR [eax]
3002ac08:	push   eax
3002ac09:	cli    
3002ac0a:	add    eax,DWORD PTR [eax]
3002ac0c:	mov    al,ds:0x10003fa
3002ac11:	sti    
3002ac12:	add    eax,DWORD PTR [eax]
3002ac14:	pusha  
3002ac15:	sti    
3002ac16:	add    eax,DWORD PTR [eax]
3002ac18:	(bad)  
3002ac19:	sti    
3002ac1a:	add    eax,DWORD PTR [eax]
3002ac1c:	sub    ah,bh
3002ac1e:	add    eax,DWORD PTR [eax]
3002ac20:	test   ah,bh
3002ac22:	add    eax,DWORD PTR [eax]
3002ac24:	aam    0xfc
3002ac26:	add    eax,DWORD PTR [eax]
3002ac28:	and    al,0xfd
3002ac2a:	add    eax,DWORD PTR [eax]
3002ac2c:	je     0x3002ac2b
3002ac2e:	add    eax,DWORD PTR [eax]
3002ac30:	(bad)  
3002ac31:	std    
3002ac32:	add    eax,DWORD PTR [eax]
3002ac34:	adc    al,0xfe
3002ac36:	add    eax,DWORD PTR [eax]
3002ac38:	inc    BYTE PTR fs:[ebx]
3002ac3b:	add    BYTE PTR [esi+edi*8-0xebfffd],dh
3002ac42:	add    eax,DWORD PTR [eax]
3002ac44:	je     0x3002ac45
3002ac46:	add    eax,DWORD PTR [eax]
3002ac48:	(bad)  
3002ac49:	inc    DWORD PTR [ebx]
3002ac4b:	add    BYTE PTR [eax+eax*1],dl
3002ac4e:	add    al,0x0
3002ac50:	add    BYTE PTR fs:[eax+eax*1],al
3002ac54:	rol    BYTE PTR [eax],0x4
3002ac57:	add    BYTE PTR [eax+0x1],dl
3002ac5a:	add    al,0x0
3002ac5c:	lods   al,BYTE PTR ds:[esi]
3002ac5d:	add    DWORD PTR [eax+eax*1],eax
3002ac60:	or     BYTE PTR [edx],al
3002ac62:	add    al,0x0
3002ac64:	pop    eax
3002ac65:	add    al,BYTE PTR [eax+eax*1]
3002ac68:	test   al,0x2
3002ac6a:	add    al,0x0
3002ac6c:	clc    
3002ac6d:	add    al,BYTE PTR [eax+eax*1]
3002ac70:	pop    ecx
3002ac71:	add    eax,DWORD PTR [eax+eax*1]
3002ac74:	test   al,0x3
3002ac76:	add    al,0x0
3002ac78:	or     DWORD PTR [esp+eax*1],eax
3002ac7b:	add    BYTE PTR [eax+0x4],dh
3002ac7e:	add    al,0x0
3002ac80:	enter  0x404,0x0
3002ac84:	and    BYTE PTR ds:0x5700004,al
3002ac8a:	add    al,0x0
3002ac8c:	rol    BYTE PTR ds:0x6100004,0x4
3002ac93:	add    BYTE PTR [esi+0x6],ch
3002ac96:	add    al,0x0
3002ac98:	rol    BYTE PTR [esi],0x4
3002ac9b:	add    BYTE PTR [edi+eax*1],bl
3002ac9e:	add    al,0x0
3002aca0:	ins    BYTE PTR es:[edi],dx
3002aca1:	pop    es
3002aca2:	add    al,0x0
3002aca4:	rol    BYTE PTR [edi],0x4
3002aca7:	add    BYTE PTR [eax],dl
3002aca9:	or     BYTE PTR [eax+eax*1],al
3002acac:	pusha  
3002acad:	or     BYTE PTR [eax+eax*1],al
3002acb0:	mov    al,0x8
3002acb2:	add    al,0x0
3002acb4:	adc    DWORD PTR [ecx],ecx
3002acb6:	add    al,0x0
3002acb8:	pusha  
3002acb9:	or     DWORD PTR [eax+eax*1],eax
3002acbc:	mov    eax,0x8000409
3002acc1:	or     al,BYTE PTR [eax+eax*1]
3002acc4:	pusha  
3002acc5:	or     al,BYTE PTR [eax+eax*1]
3002acc8:	mov    al,0xa
3002acca:	add    al,0x0
3002accc:	or     BYTE PTR [ebx],cl
3002acce:	add    al,0x0
3002acd0:	xchg   edx,eax
3002acd1:	or     eax,DWORD PTR [eax+eax*1]
3002acd4:	lock or eax,DWORD PTR [eax+eax*1]
3002acd8:	inc    eax
3002acd9:	or     al,0x4
3002acdb:	add    BYTE PTR [edi+0x1d00040c],ch
3002ace1:	or     eax,0xd7c0004
3002ace6:	add    al,0x0
3002ace8:	ror    BYTE PTR ds:0xe300004,cl
3002acee:	add    al,0x0
3002acf0:	test   BYTE PTR [esi],cl
3002acf2:	add    al,0x0
3002acf4:	add    BYTE PTR [edi],cl
3002acf6:	add    al,0x0
3002acf8:	or     BYTE PTR [edi],0x4
3002acfb:	add    BYTE PTR [eax],al
3002acfd:	add    BYTE PTR [eax+esi*1],0x1
3002ad01:	add    BYTE PTR [eax+esi*1],0x4
3002ad05:	dec    ebp
3002ad06:	add    al,0x30
3002ad08:	sbb    BYTE PTR [ebp+0x3002],ch
	...
3002ad1a:	add    BYTE PTR [eax],al
3002ad1c:	pop    es
3002ad1d:	add    BYTE PTR [eax],al
3002ad1f:	add    BYTE PTR [ebx-0x65000000],bl
	...
3002ad31:	add    BYTE PTR [eax],al
3002ad33:	add    BYTE PTR [ecx],al
3002ad35:	add    BYTE PTR [eax],al
3002ad37:	add    BYTE PTR [ebp*4-0x52bbcffe],bh
3002ad3e:	add    dh,BYTE PTR [eax]
3002ad40:	add    BYTE PTR [eax+0x44989090],dl
3002ad46:	add    al,0x30
	...
3002ad50:	(bad)  
3002ad51:	(bad)  
3002ad52:	(bad)  
3002ad53:	inc    DWORD PTR [eax]
3002ad55:	add    BYTE PTR [eax],al
3002ad57:	add    BYTE PTR [eax+0x0],al
3002ad5a:	add    BYTE PTR [eax],al
3002ad5c:	sub    al,0xad
3002ad5e:	add    dh,BYTE PTR [eax]
3002ad60:	mov    ecx,DWORD PTR [ecx+0x4]
3002ad63:	test   ecx,ecx
3002ad65:	jne    0x30007e20
3002ad6b:	ret    
3002ad6c:	mov    ecx,DWORD PTR [ecx+0x8]
3002ad6f:	test   ecx,ecx
3002ad71:	je     0x3002ad79
3002ad73:	mov    eax,DWORD PTR [ecx]
3002ad75:	push   ecx
3002ad76:	call   DWORD PTR [eax+0x8]
3002ad79:	ret    
3002ad7a:	push   esi
3002ad7b:	mov    esi,ecx
3002ad7d:	call   0x30016974
3002ad82:	mov    ecx,esi
3002ad84:	pop    esi
3002ad85:	jmp    0x30016974
3002ad8a:	push   ebp
3002ad8b:	mov    ebp,esp
3002ad8d:	test   BYTE PTR [ebp+0x8],0x1
3002ad91:	push   esi
3002ad92:	mov    esi,ecx
3002ad94:	mov    DWORD PTR [esi],0x30016a34
3002ad9a:	je     0x3002ada4
3002ad9c:	push   esi
3002ad9d:	call   DWORD PTR ds:0x300452ac
3002ada3:	pop    ecx
3002ada4:	mov    eax,esi
3002ada6:	pop    esi
3002ada7:	pop    ebp
3002ada8:	ret    0x4
3002adab:	push   ebp
3002adac:	mov    ebp,esp
3002adae:	push   ecx
3002adaf:	mov    eax,DWORD PTR [ebp+0xc]
3002adb2:	push   ebx
3002adb3:	push   esi
3002adb4:	push   edi
3002adb5:	mov    edi,DWORD PTR [eax]
3002adb7:	mov    eax,DWORD PTR [ebp+0x8]
3002adba:	xor    ebx,ebx
3002adbc:	mov    esi,DWORD PTR [eax]
3002adbe:	mov    DWORD PTR [ebp-0x4],ecx
3002adc1:	cmp    DWORD PTR [ecx+0x4],ebx
3002adc4:	je     0x3002adf7
3002adc6:	test   esi,esi
3002adc8:	je     0x3002adf7
3002adca:	mov    DWORD PTR [esi],ebx
3002adcc:	test   edi,edi
3002adce:	je     0x3002adf7
3002add0:	mov    DWORD PTR [edi],ebx
3002add2:	mov    ecx,DWORD PTR [ecx+0x4]
3002add5:	call   0x30008596
3002adda:	mov    DWORD PTR [ebp+0xc],eax
3002addd:	test   eax,eax
3002addf:	je     0x3002adf7
3002ade1:	mov    ecx,DWORD PTR [ebp-0x4]
3002ade4:	mov    ecx,DWORD PTR [ecx+0x4]
3002ade7:	call   0x300082f7
3002adec:	mov    DWORD PTR [esi],eax
3002adee:	mov    eax,DWORD PTR [ebp+0xc]
3002adf1:	mov    bl,0x1
3002adf3:	mov    eax,DWORD PTR [eax]
3002adf5:	mov    DWORD PTR [edi],eax
3002adf7:	pop    edi
3002adf8:	pop    esi
3002adf9:	mov    al,bl
3002adfb:	pop    ebx
3002adfc:	leave  
3002adfd:	ret    0x8
3002ae00:	mov    eax,0x300444c0
3002ae05:	ret    
3002ae06:	lea    eax,[ecx+0x4]
3002ae09:	ret    
3002ae0a:	ret    
3002ae0b:	push   ebp
3002ae0c:	mov    ebp,esp
3002ae0e:	mov    eax,DWORD PTR [ebp+0x8]
3002ae11:	mov    DWORD PTR [ebp+0x8],eax
3002ae14:	push   0x3002ae24
3002ae19:	lea    eax,[ebp+0x8]
3002ae1c:	push   eax
3002ae1d:	call   0x3003c7b0
3002ae22:	int3   
3002ae23:	nop
	...
3002ae30:	test   al,0x16
3002ae32:	add    al,0x30
3002ae34:	cmp    DWORD PTR [ecx],0x0
3002ae37:	je     0x3002ae41
3002ae39:	push   DWORD PTR [ecx]
3002ae3b:	call   DWORD PTR ds:0x30045000
3002ae41:	ret    
3002ae42:	mov    DWORD PTR [ecx],0x3000150c
3002ae48:	ret    
3002ae49:	xor    eax,eax
3002ae4b:	cmp    DWORD PTR [ecx+0x28],eax
3002ae4e:	je     0x3002ae5e
3002ae50:	cmp    DWORD PTR [ecx+0xc4],eax
3002ae56:	jne    0x3002ae5e
3002ae58:	mov    eax,0xc1c
3002ae5d:	ret    
3002ae5e:	cmp    DWORD PTR [ecx+0x2c],eax
3002ae61:	je     0x3002ae71
3002ae63:	cmp    DWORD PTR [ecx+0xc4],eax
3002ae69:	jne    0x3002ae71
3002ae6b:	mov    eax,0xc1d
3002ae70:	ret    
3002ae71:	cmp    DWORD PTR [ecx+0x30],eax
3002ae74:	je     0x3002ae84
3002ae76:	cmp    DWORD PTR [ecx+0xc4],eax
3002ae7c:	jne    0x3002ae84
3002ae7e:	mov    eax,0xc1e
3002ae83:	ret    
3002ae84:	cmp    DWORD PTR [ecx+0x34],eax
3002ae87:	je     0x3002ae97
3002ae89:	cmp    DWORD PTR [ecx+0xc4],eax
3002ae8f:	jne    0x3002ae97
3002ae91:	mov    eax,0xc1f
3002ae96:	ret    
3002ae97:	cmp    DWORD PTR [ecx+0xe0],eax
3002ae9d:	je     0x3002aead
3002ae9f:	cmp    DWORD PTR [ecx+0xc8],eax
3002aea5:	jne    0x3002aead
3002aea7:	mov    eax,0xc20
3002aeac:	ret    
3002aead:	cmp    DWORD PTR [ecx+0xe4],eax
3002aeb3:	je     0x3002aec3
3002aeb5:	cmp    DWORD PTR [ecx+0xdc],eax
3002aebb:	jne    0x3002aec3
3002aebd:	mov    eax,0xc21
3002aec2:	ret    
3002aec3:	xor    eax,eax
3002aec5:	ret    
3002aec6:	push   0x8
3002aec8:	mov    eax,0x3003e2ec
3002aecd:	call   0x3000116a
3002aed2:	mov    edi,ecx
3002aed4:	cmp    DWORD PTR [ebp+0x8],0x0
3002aed8:	jne    0x3002aee1
3002aeda:	xor    eax,eax
3002aedc:	jmp    0x3002aff3
3002aee1:	push   DWORD PTR [ebp+0x8]
3002aee4:	lea    ecx,[ebp+0x8]
3002aee7:	call   0x30001488
3002aeec:	and    DWORD PTR [ebp-0x4],0x0
3002aef0:	mov    ecx,DWORD PTR [ebp+0x8]
3002aef3:	lea    eax,[ebp-0x14]
3002aef6:	push   eax
3002aef7:	lea    edx,[ebp-0x10]
3002aefa:	call   0x30033092
3002aeff:	mov    edx,DWORD PTR [ebp-0x10]
3002af02:	mov    ecx,0x3002affc
3002af07:	mov    eax,edx
3002af09:	mov    bx,WORD PTR [eax]
3002af0c:	xor    esi,esi
3002af0e:	inc    esi
3002af0f:	cmp    bx,WORD PTR [ecx]
3002af12:	jne    0x3002af32
3002af14:	test   bx,bx
3002af17:	je     0x3002af2e
3002af19:	mov    bx,WORD PTR [eax+0x2]
3002af1d:	cmp    bx,WORD PTR [ecx+0x2]
3002af21:	jne    0x3002af32
3002af23:	add    eax,0x4
3002af26:	add    ecx,0x4
3002af29:	test   bx,bx
3002af2c:	jne    0x3002af09
3002af2e:	xor    eax,eax
3002af30:	jmp    0x3002af36
3002af32:	sbb    eax,eax
3002af34:	or     eax,esi
3002af36:	test   eax,eax
3002af38:	jne    0x3002af41
3002af3a:	mov    eax,0x7d0
3002af3f:	jmp    0x3002afb5
3002af41:	mov    ecx,0x3002b018
3002af46:	mov    eax,edx
3002af48:	mov    bx,WORD PTR [eax]
3002af4b:	cmp    bx,WORD PTR [ecx]
3002af4e:	jne    0x3002af6e
3002af50:	test   bx,bx
3002af53:	je     0x3002af6a
3002af55:	mov    bx,WORD PTR [eax+0x2]
3002af59:	cmp    bx,WORD PTR [ecx+0x2]
3002af5d:	jne    0x3002af6e
3002af5f:	add    eax,0x4
3002af62:	add    ecx,0x4
3002af65:	test   bx,bx
3002af68:	jne    0x3002af48
3002af6a:	xor    eax,eax
3002af6c:	jmp    0x3002af72
3002af6e:	sbb    eax,eax
3002af70:	or     eax,esi
3002af72:	test   eax,eax
3002af74:	jne    0x3002af7d
3002af76:	mov    eax,0xbb8
3002af7b:	jmp    0x3002afb5
3002af7d:	mov    eax,0x3002b030
3002af82:	mov    cx,WORD PTR [edx]
3002af85:	cmp    cx,WORD PTR [eax]
3002af88:	jne    0x3002afa8
3002af8a:	test   cx,cx
3002af8d:	je     0x3002afa4
3002af8f:	mov    cx,WORD PTR [edx+0x2]
3002af93:	cmp    cx,WORD PTR [eax+0x2]
3002af97:	jne    0x3002afa8
3002af99:	add    edx,0x4
3002af9c:	add    eax,0x4
3002af9f:	test   cx,cx
3002afa2:	jne    0x3002af82
3002afa4:	xor    eax,eax
3002afa6:	jmp    0x3002afac
3002afa8:	sbb    eax,eax
3002afaa:	or     eax,esi
3002afac:	test   eax,eax
3002afae:	jne    0x3002afd7
3002afb0:	mov    eax,0x3e8
3002afb5:	cmp    DWORD PTR [edi+0x660],eax
3002afbb:	jl     0x3002afd7
3002afbd:	mov    ecx,DWORD PTR [ebp-0x14]
3002afc0:	test   ecx,ecx
3002afc2:	je     0x3002afe8
3002afc4:	call   0x3003302a
3002afc9:	test   eax,eax
3002afcb:	je     0x3002afe8
3002afcd:	push   DWORD PTR [ebp+0xc]
3002afd0:	push   0x1a12
3002afd5:	jmp    0x3002afdf
3002afd7:	push   DWORD PTR [ebp+0xc]
3002afda:	push   0x1a0e
3002afdf:	mov    ecx,edi
3002afe1:	call   0x3002e169
3002afe6:	xor    esi,esi
3002afe8:	push   DWORD PTR [ebp+0x8]
3002afeb:	call   DWORD PTR ds:0x300454e8
3002aff1:	mov    eax,esi
3002aff3:	call   0x3000119d
3002aff8:	ret    0x8
3002affb:	nop
3002affc:	jo     0x3002affe
3002affe:	jb     0x3002b000
3002b000:	outs   dx,DWORD PTR ds:[esi]
3002b001:	add    BYTE PTR [esi+0x0],ah
3002b004:	add    BYTE PTR gs:[ebx+0x0],dh
3002b008:	jae    0x3002b00a
3002b00a:	imul   eax,DWORD PTR [eax],0x6e006f
3002b010:	popa   
3002b011:	add    BYTE PTR [eax+eax*1+0x0],ch
3002b015:	add    BYTE PTR [eax+0x6e006590],dl
3002b01b:	add    BYTE PTR [eax+eax*1+0x65],dh
3002b01f:	add    BYTE PTR [edx+0x0],dh
3002b022:	jo     0x3002b024
3002b024:	jb     0x3002b026
3002b026:	imul   eax,DWORD PTR [eax],0x650073
3002b02c:	add    BYTE PTR [eax],al
3002b02e:	nop
3002b02f:	nop
3002b030:	jae    0x3002b032
3002b032:	je     0x3002b034
3002b034:	popa   
3002b035:	add    BYTE PTR [esi+0x0],ch
3002b038:	add    BYTE PTR fs:[ecx+0x0],ah
3002b03c:	jb     0x3002b03e
3002b03e:	add    BYTE PTR fs:[eax],al
3002b041:	add    BYTE PTR [ebp-0x75],dl
3002b044:	in     al,dx
3002b045:	sub    esp,0x18
3002b048:	mov    eax,ds:0x30043050
3002b04d:	xor    eax,ebp
3002b04f:	mov    DWORD PTR [ebp-0x4],eax
3002b052:	mov    al,BYTE PTR [ecx]
3002b054:	not    al
3002b056:	mov    BYTE PTR [ebp-0x14],al
3002b059:	mov    al,BYTE PTR [ecx+0x2]
3002b05c:	not    al
3002b05e:	mov    BYTE PTR [ebp-0x13],al
3002b061:	mov    al,BYTE PTR [ecx+0x4]
3002b064:	not    al
3002b066:	mov    BYTE PTR [ebp-0x12],al
3002b069:	mov    al,BYTE PTR [ecx+0x6]
3002b06c:	not    al
3002b06e:	mov    BYTE PTR [ebp-0x11],al
3002b071:	mov    al,BYTE PTR [ecx+0x8]
3002b074:	not    al
3002b076:	mov    BYTE PTR [ebp-0x10],al
3002b079:	mov    al,BYTE PTR [ecx+0xa]
3002b07c:	not    al
3002b07e:	mov    BYTE PTR [ebp-0xf],al
3002b081:	mov    al,BYTE PTR [ecx+0xc]
3002b084:	not    al
3002b086:	mov    BYTE PTR [ebp-0xe],al
3002b089:	mov    al,BYTE PTR [ecx+0xe]
3002b08c:	not    al
3002b08e:	mov    BYTE PTR [ebp-0xd],al
3002b091:	mov    al,BYTE PTR [ecx+0x10]
3002b094:	not    al
3002b096:	mov    BYTE PTR [ebp-0xc],al
3002b099:	mov    al,BYTE PTR [ecx+0x12]
3002b09c:	not    al
3002b09e:	mov    BYTE PTR [ebp-0xb],al
3002b0a1:	mov    al,BYTE PTR [ecx+0x14]
3002b0a4:	not    al
3002b0a6:	mov    BYTE PTR [ebp-0xa],al
3002b0a9:	mov    al,BYTE PTR [ecx+0x16]
3002b0ac:	not    al
3002b0ae:	mov    BYTE PTR [ebp-0x9],al
3002b0b1:	mov    al,BYTE PTR [ecx+0x18]
3002b0b4:	not    al
3002b0b6:	mov    BYTE PTR [ebp-0x8],al
3002b0b9:	mov    al,BYTE PTR [ecx+0x1a]
3002b0bc:	not    al
3002b0be:	mov    BYTE PTR [ebp-0x7],al
3002b0c1:	mov    al,BYTE PTR [ecx+0x1c]
3002b0c4:	not    al
3002b0c6:	mov    BYTE PTR [ebp-0x6],al
3002b0c9:	mov    al,BYTE PTR [ecx+0x1e]
3002b0cc:	not    al
3002b0ce:	mov    DWORD PTR [ebp-0x18],edx
3002b0d1:	mov    BYTE PTR [ebp-0x5],al
3002b0d4:	xor    ecx,ecx
3002b0d6:	push   esi
3002b0d7:	cmp    edx,DWORD PTR [ecx+0x3002b118]
3002b0dd:	jne    0x3002b0f8
3002b0df:	lea    esi,[ebp-0xf]
3002b0e2:	mov    eax,DWORD PTR [esi]
3002b0e4:	cmp    eax,DWORD PTR [ecx+0x3002b121]
3002b0ea:	jne    0x3002b0f8
3002b0ec:	movzx  eax,BYTE PTR [esi+0x4]
3002b0f0:	cmp    al,BYTE PTR [ecx+0x3002b125]
3002b0f6:	je     0x3002b112
3002b0f8:	add    ecx,0x14
3002b0fb:	cmp    ecx,0x654
3002b101:	jb     0x3002b0d7
3002b103:	xor    al,al
3002b105:	mov    ecx,DWORD PTR [ebp-0x4]
3002b108:	xor    ecx,ebp
3002b10a:	pop    esi
3002b10b:	call   0x3000115c
3002b110:	leave  
3002b111:	ret    
3002b112:	mov    al,0x1
3002b114:	jmp    0x3002b105
3002b116:	nop
3002b117:	nop
3002b118:	rol    BYTE PTR [edi],1
3002b11a:	add    BYTE PTR [eax],al
3002b11c:	(bad)  
3002b11d:	into   
3002b11e:	leave  
3002b11f:	iret   
3002b120:	retf   0xcdd2
3002b123:	enter  0xd2cf,0xcf
3002b127:	iret   
3002b128:	iret   
3002b129:	iret   
3002b12a:	iret   
3002b12b:	into   
3002b12c:	rol    BYTE PTR [edi],1
3002b12e:	add    BYTE PTR [eax],al
3002b130:	(bad)  
3002b131:	into   
3002b132:	mov    bh,0xcb
3002b135:	ror    ch,cl
3002b137:	enter  0xd2cf,0xcf
3002b13b:	iret   
3002b13c:	iret   
3002b13d:	iret   
3002b13e:	iret   
3002b13f:	into   
3002b140:	rol    BYTE PTR [edi],1
3002b142:	add    BYTE PTR [eax],al
3002b144:	(bad)  
3002b145:	into   
3002b146:	mov    bh,0xca
3002b149:	ror    ch,cl
3002b14b:	enter  0xd2cf,0xcf
3002b14f:	iret   
3002b150:	iret   
3002b151:	iret   
3002b152:	iret   
3002b153:	into   
3002b154:	rol    BYTE PTR [edi],1
3002b156:	add    BYTE PTR [eax],al
3002b158:	(bad)  
3002b159:	into   
3002b15a:	mov    bh,0xc9
3002b15d:	ror    ch,cl
3002b15f:	enter  0xd2cf,0xcf
3002b163:	iret   
3002b164:	iret   
3002b165:	iret   
3002b166:	iret   
3002b167:	into   
3002b168:	rol    BYTE PTR [edi],1
3002b16a:	add    BYTE PTR [eax],al
3002b16c:	(bad)  
3002b16d:	into   
3002b16e:	mov    bh,0xc8
3002b171:	ror    ch,cl
3002b173:	enter  0xd2cf,0xcf
3002b177:	iret   
3002b178:	iret   
3002b179:	iret   
3002b17a:	iret   
3002b17b:	into   
3002b17c:	rol    BYTE PTR [edi],1
3002b17e:	add    BYTE PTR [eax],al
3002b180:	(bad)  
3002b181:	into   
3002b182:	mov    bh,0xc7
3002b185:	ror    ch,cl
3002b187:	enter  0xd2cf,0xcf
3002b18b:	iret   
3002b18c:	iret   
3002b18d:	iret   
3002b18e:	iret   
3002b18f:	into   
3002b190:	rol    BYTE PTR [edi],1
3002b192:	add    BYTE PTR [eax],al
3002b194:	(bad)  
3002b195:	into   
3002b196:	mov    bh,0xc6
3002b199:	ror    ch,cl
3002b19b:	enter  0xd2cf,0xcf
3002b19f:	iret   
3002b1a0:	iret   
3002b1a1:	iret   
3002b1a2:	iret   
3002b1a3:	into   
3002b1a4:	rol    BYTE PTR [edi],1
3002b1a6:	add    BYTE PTR [eax],al
3002b1a8:	(bad)  
3002b1a9:	into   
3002b1aa:	mov    dh,0xcf
3002b1ad:	ror    ch,cl
3002b1af:	enter  0xd2cf,0xcf
3002b1b3:	iret   
3002b1b4:	iret   
3002b1b5:	iret   
3002b1b6:	iret   
3002b1b7:	into   
3002b1b8:	rol    BYTE PTR [edi],1
3002b1ba:	add    BYTE PTR [eax],al
3002b1bc:	(bad)  
3002b1bd:	into   
3002b1be:	mov    dh,0xce
3002b1c1:	ror    ch,cl
3002b1c3:	enter  0xd2cf,0xcf
3002b1c7:	iret   
3002b1c8:	iret   
3002b1c9:	iret   
3002b1ca:	iret   
3002b1cb:	into   
3002b1cc:	mov    eax,0xc600000b
3002b1d1:	into   
3002b1d2:	mov    esi,0xc8cdd2c6
3002b1d8:	iret   
3002b1d9:	ror    bh,cl
3002b1db:	iret   
3002b1dc:	iret   
3002b1dd:	iret   
3002b1de:	iret   
3002b1df:	iret   
3002b1e0:	mov    eax,0xc600000b
3002b1e5:	into   
3002b1e6:	mov    dh,0xcd
3002b1e9:	ror    ch,cl
3002b1eb:	enter  0xd2cf,0xcf
3002b1ef:	iret   
3002b1f0:	iret   
3002b1f1:	iret   
3002b1f2:	iret   
3002b1f3:	iret   
3002b1f4:	mov    eax,0xc600000b
3002b1f9:	into   
3002b1fa:	mov    dh,0xcc
3002b1fd:	ror    ch,cl
3002b1ff:	enter  0xd2cf,0xcf
3002b203:	iret   
3002b204:	iret   
3002b205:	iret   
3002b206:	iret   
3002b207:	iret   
3002b208:	mov    eax,0xc600000b
3002b20d:	into   
3002b20e:	mov    dh,0xcb
3002b211:	ror    ch,cl
3002b213:	enter  0xd2cf,0xcf
3002b217:	iret   
3002b218:	iret   
3002b219:	iret   
3002b21a:	iret   
3002b21b:	iret   
3002b21c:	mov    eax,0xc600000b
3002b221:	into   
3002b222:	mov    dh,0xca
3002b225:	ror    ch,cl
3002b227:	enter  0xd2cf,0xcf
3002b22b:	iret   
3002b22c:	iret   
3002b22d:	iret   
3002b22e:	iret   
3002b22f:	iret   
3002b230:	mov    eax,0xc600000b
3002b235:	into   
3002b236:	mov    dh,0xc9
3002b239:	ror    ch,cl
3002b23b:	enter  0xd2cf,0xcf
3002b23f:	iret   
3002b240:	iret   
3002b241:	iret   
3002b242:	iret   
3002b243:	iret   
3002b244:	mov    eax,0xc600000b
3002b249:	into   
3002b24a:	mov    dh,0xc7
3002b24d:	ror    ch,cl
3002b24f:	enter  0xd2cf,0xcf
3002b253:	iret   
3002b254:	iret   
3002b255:	iret   
3002b256:	iret   
3002b257:	iret   
3002b258:	mov    eax,0xc600000b
3002b25d:	into   
3002b25e:	mov    dh,0xc6
3002b261:	ror    ch,cl
3002b263:	enter  0xd2cf,0xcf
3002b267:	iret   
3002b268:	iret   
3002b269:	iret   
3002b26a:	iret   
3002b26b:	iret   
3002b26c:	mov    eax,0xc600000b
3002b271:	int    0xcf
3002b273:	iret   
3002b274:	iret   
3002b275:	ror    ch,cl
3002b277:	enter  0xd2cf,0xcf
3002b27b:	iret   
3002b27c:	iret   
3002b27d:	iret   
3002b27e:	iret   
3002b27f:	iret   
3002b280:	mov    eax,0xc600000b
3002b285:	into   
3002b286:	(bad)  
3002b287:	iret   
3002b288:	int3   
3002b289:	ror    ch,cl
3002b28b:	enter  0xd2cf,0xcf
3002b28f:	iret   
3002b290:	iret   
3002b291:	iret   
3002b292:	iret   
3002b293:	int    0xb8
3002b295:	or     eax,DWORD PTR [eax]
3002b297:	add    dh,al
3002b299:	int    0xcf
3002b29b:	iret   
3002b29c:	int    0xd2
3002b29e:	int    0xc8
3002b2a0:	iret   
3002b2a1:	ror    bh,cl
3002b2a3:	iret   
3002b2a4:	iret   
3002b2a5:	iret   
3002b2a6:	iret   
3002b2a7:	int    0xb8
3002b2a9:	or     eax,DWORD PTR [eax]
3002b2ab:	add    dh,al
3002b2ad:	int    0xcf
3002b2af:	iret   
3002b2b0:	int3   
3002b2b1:	ror    ch,cl
3002b2b3:	enter  0xd2cf,0xcf
3002b2b7:	iret   
3002b2b8:	iret   
3002b2b9:	iret   
3002b2ba:	iret   
3002b2bb:	int    0xb8
3002b2bd:	or     eax,DWORD PTR [eax]
3002b2bf:	add    dh,al
3002b2c1:	int    0xcf
3002b2c3:	iret   
3002b2c4:	retf   
3002b2c5:	ror    ch,cl
3002b2c7:	enter  0xd2cf,0xcf
3002b2cb:	iret   
3002b2cc:	iret   
3002b2cd:	iret   
3002b2ce:	iret   
3002b2cf:	int    0xb8
3002b2d1:	or     eax,DWORD PTR [eax]
3002b2d3:	add    dh,al
3002b2d5:	int    0xcf
3002b2d7:	iret   
3002b2d8:	retf   0xcdd2
3002b2db:	enter  0xd2cf,0xcf
3002b2df:	iret   
3002b2e0:	iret   
3002b2e1:	iret   
3002b2e2:	iret   
3002b2e3:	int    0xb8
3002b2e5:	or     eax,DWORD PTR [eax]
3002b2e7:	add    dh,al
3002b2e9:	int    0xcf
3002b2eb:	iret   
3002b2ec:	enter  0xcdd2,0xc8
3002b2f0:	iret   
3002b2f1:	ror    bh,cl
3002b2f3:	iret   
3002b2f4:	iret   
3002b2f5:	iret   
3002b2f6:	iret   
3002b2f7:	int    0xb8
3002b2f9:	or     eax,DWORD PTR [eax]
3002b2fb:	add    dh,al
3002b2fd:	int    0xcf
3002b2ff:	iret   
3002b300:	(bad)  
3002b301:	ror    ch,cl
3002b303:	enter  0xd2cf,0xcf
3002b307:	iret   
3002b308:	iret   
3002b309:	iret   
3002b30a:	iret   
3002b30b:	int    0xb8
3002b30d:	or     eax,DWORD PTR [eax]
3002b30f:	add    dh,al
3002b311:	int    0xcf
3002b313:	iret   
3002b314:	(bad)  
3002b315:	ror    ch,cl
3002b317:	enter  0xd2cf,0xcf
3002b31b:	iret   
3002b31c:	iret   
3002b31d:	iret   
3002b31e:	iret   
3002b31f:	int    0xb8
3002b321:	or     eax,DWORD PTR [eax]
3002b323:	add    dh,al
3002b325:	int    0xcf
3002b327:	into   
3002b328:	iret   
3002b329:	ror    ch,cl
3002b32b:	enter  0xd2cf,0xcf
3002b32f:	iret   
3002b330:	iret   
3002b331:	iret   
3002b332:	iret   
3002b333:	int    0xb8
3002b335:	or     eax,DWORD PTR [eax]
3002b337:	add    dh,al
3002b339:	into   
3002b33a:	(bad)  
3002b33b:	iret   
3002b33c:	retf   
3002b33d:	ror    ch,cl
3002b33f:	enter  0xd2cf,0xcf
3002b343:	iret   
3002b344:	iret   
3002b345:	iret   
3002b346:	iret   
3002b347:	int3   
3002b348:	mov    eax,0xc600000b
3002b34d:	int    0xcf
3002b34f:	int3   
3002b350:	iret   
3002b351:	ror    ch,cl
3002b353:	enter  0xd2cf,0xcf
3002b357:	iret   
3002b358:	iret   
3002b359:	iret   
3002b35a:	iret   
3002b35b:	int3   
3002b35c:	mov    eax,0xc600000b
3002b361:	int    0xcf
3002b363:	int3   
3002b364:	int3   
3002b365:	ror    ch,cl
3002b367:	enter  0xd2cf,0xcf
3002b36b:	iret   
3002b36c:	iret   
3002b36d:	iret   
3002b36e:	iret   
3002b36f:	int3   
3002b370:	mov    eax,0xc600000b
3002b375:	int    0xcf
3002b377:	int3   
3002b378:	retf   0xcdd2
3002b37b:	enter  0xd2cf,0xcf
3002b37f:	iret   
3002b380:	iret   
3002b381:	iret   
3002b382:	iret   
3002b383:	int3   
3002b384:	mov    eax,0xc600000b
3002b389:	int    0xcf
3002b38b:	int3   
3002b38c:	leave  
3002b38d:	ror    ch,cl
3002b38f:	enter  0xd2cf,0xcf
3002b393:	iret   
3002b394:	iret   
3002b395:	iret   
3002b396:	iret   
3002b397:	int3   
3002b398:	mov    eax,0xc600000b
3002b39d:	int    0xcf
3002b39f:	int3   
3002b3a0:	enter  0xcdd2,0xc8
3002b3a4:	iret   
3002b3a5:	ror    bh,cl
3002b3a7:	iret   
3002b3a8:	iret   
3002b3a9:	iret   
3002b3aa:	iret   
3002b3ab:	int3   
3002b3ac:	mov    eax,0xc600000b
3002b3b1:	int    0xcf
3002b3b3:	retf   
3002b3b4:	iret   
3002b3b5:	ror    ch,cl
3002b3b7:	enter  0xd2cf,0xcf
3002b3bb:	iret   
3002b3bc:	iret   
3002b3bd:	iret   
3002b3be:	iret   
3002b3bf:	int3   
3002b3c0:	mov    eax,0xc600000b
3002b3c5:	int    0xcf
3002b3c7:	retf   
3002b3c8:	into   
3002b3c9:	ror    ch,cl
3002b3cb:	enter  0xd2cf,0xcf
3002b3cf:	iret   
3002b3d0:	iret   
3002b3d1:	iret   
3002b3d2:	iret   
3002b3d3:	int3   
3002b3d4:	mov    eax,0xc600000b
3002b3d9:	int    0xcf
3002b3db:	retf   
3002b3dc:	int    0xd2
3002b3de:	int    0xc8
3002b3e0:	iret   
3002b3e1:	ror    bh,cl
3002b3e3:	iret   
3002b3e4:	iret   
3002b3e5:	iret   
3002b3e6:	iret   
3002b3e7:	int3   
3002b3e8:	mov    eax,0xc600000b
3002b3ed:	into   
3002b3ee:	(bad)  
3002b3ef:	iret   
3002b3f0:	retf   0xcdd2
3002b3f3:	enter  0xd2cf,0xcf
3002b3f7:	iret   
3002b3f8:	iret   
3002b3f9:	iret   
3002b3fa:	iret   
3002b3fb:	retf   
3002b3fc:	mov    eax,0xc600000b
3002b401:	int    0xcf
3002b403:	retf   
3002b404:	int3   
3002b405:	ror    ch,cl
3002b407:	enter  0xd2cf,0xcf
3002b40b:	iret   
3002b40c:	iret   
3002b40d:	iret   
3002b40e:	iret   
3002b40f:	retf   
3002b410:	mov    eax,0xc600000b
3002b415:	int    0xcf
3002b417:	retf   
3002b418:	retf   0xcdd2
3002b41b:	enter  0xd2cf,0xcf
3002b41f:	iret   
3002b420:	iret   
3002b421:	iret   
3002b422:	iret   
3002b423:	retf   
3002b424:	mov    eax,0xc600000b
3002b429:	int    0xcf
3002b42b:	retf   
3002b42c:	enter  0xcdd2,0xc8
3002b430:	iret   
3002b431:	ror    bh,cl
3002b433:	iret   
3002b434:	iret   
3002b435:	iret   
3002b436:	iret   
3002b437:	retf   
3002b438:	mov    eax,0xc600000b
3002b43d:	int    0xcf
3002b43f:	retf   
3002b440:	(bad)  
3002b441:	ror    ch,cl
3002b443:	enter  0xd2cf,0xcf
3002b447:	iret   
3002b448:	iret   
3002b449:	iret   
3002b44a:	iret   
3002b44b:	retf   
3002b44c:	mov    eax,0xc600000b
3002b451:	int    0xcf
3002b453:	retf   0xd2ce
3002b456:	int    0xc8
3002b458:	iret   
3002b459:	ror    bh,cl
3002b45b:	iret   
3002b45c:	iret   
3002b45d:	iret   
3002b45e:	iret   
3002b45f:	retf   
3002b460:	mov    eax,0xc600000b
3002b465:	int    0xcf
3002b467:	retf   0xd2ca
3002b46a:	int    0xc8
3002b46c:	iret   
3002b46d:	ror    bh,cl
3002b46f:	iret   
3002b470:	iret   
3002b471:	iret   
3002b472:	iret   
3002b473:	retf   
3002b474:	mov    eax,0xc600000b
3002b479:	int    0xcf
3002b47b:	retf   0xd2c8
3002b47e:	int    0xc8
3002b480:	iret   
3002b481:	ror    bh,cl
3002b483:	iret   
3002b484:	iret   
3002b485:	iret   
3002b486:	iret   
3002b487:	retf   
3002b488:	mov    eax,0xc600000b
3002b48d:	int    0xcf
3002b48f:	retf   0xd2c6
3002b492:	int    0xc8
3002b494:	iret   
3002b495:	ror    bh,cl
3002b497:	iret   
3002b498:	iret   
3002b499:	iret   
3002b49a:	iret   
3002b49b:	retf   
3002b49c:	mov    eax,0xc600000b
3002b4a1:	into   
3002b4a2:	(bad)  
3002b4a3:	iret   
3002b4a4:	into   
3002b4a5:	ror    ch,cl
3002b4a7:	enter  0xd2cf,0xcf
3002b4ab:	iret   
3002b4ac:	iret   
3002b4ad:	iret   
3002b4ae:	iret   
3002b4af:	retf   0xbb8
3002b4b2:	add    BYTE PTR [eax],al
3002b4b4:	(bad)  
3002b4b5:	int    0xcf
3002b4b7:	leave  
3002b4b8:	iret   
3002b4b9:	ror    ch,cl
3002b4bb:	enter  0xd2cf,0xcf
3002b4bf:	iret   
3002b4c0:	iret   
3002b4c1:	iret   
3002b4c2:	iret   
3002b4c3:	retf   0xbb8
3002b4c6:	add    BYTE PTR [eax],al
3002b4c8:	(bad)  
3002b4c9:	int    0xcf
3002b4cb:	leave  
3002b4cc:	int    0xd2
3002b4ce:	int    0xc8
3002b4d0:	iret   
3002b4d1:	ror    bh,cl
3002b4d3:	iret   
3002b4d4:	iret   
3002b4d5:	iret   
3002b4d6:	iret   
3002b4d7:	retf   0xbb8
3002b4da:	add    BYTE PTR [eax],al
3002b4dc:	(bad)  
3002b4dd:	int    0xcf
3002b4df:	leave  
3002b4e0:	retf   
3002b4e1:	ror    ch,cl
3002b4e3:	enter  0xd2cf,0xcf
3002b4e7:	iret   
3002b4e8:	iret   
3002b4e9:	iret   
3002b4ea:	iret   
3002b4eb:	retf   0xbb8
3002b4ee:	add    BYTE PTR [eax],al
3002b4f0:	(bad)  
3002b4f1:	int    0xcc
3002b4f3:	(bad)  
3002b4f4:	int3   
3002b4f5:	ror    ch,cl
3002b4f7:	enter  0xd2cf,0xcf
3002b4fb:	iret   
3002b4fc:	iret   
3002b4fd:	iret   
3002b4fe:	iret   
3002b4ff:	retf   0xbb8
3002b502:	add    BYTE PTR [eax],al
3002b504:	(bad)  
3002b505:	int    0xcc
3002b507:	(bad)  
3002b508:	retf   
3002b509:	ror    ch,cl
3002b50b:	enter  0xd2cf,0xcf
3002b50f:	iret   
3002b510:	iret   
3002b511:	iret   
3002b512:	iret   
3002b513:	retf   0xbb8
3002b516:	add    BYTE PTR [eax],al
3002b518:	(bad)  
3002b519:	int    0xcc
3002b51b:	(bad)  
3002b51c:	retf   0xcdd2
3002b51f:	enter  0xd2cf,0xcf
3002b523:	iret   
3002b524:	iret   
3002b525:	iret   
3002b526:	iret   
3002b527:	retf   0xbb8
3002b52a:	add    BYTE PTR [eax],al
3002b52c:	(bad)  
3002b52d:	int    0xcc
3002b52f:	(bad)  
3002b530:	enter  0xcdd2,0xc8
3002b534:	iret   
3002b535:	ror    bh,cl
3002b537:	iret   
3002b538:	iret   
3002b539:	iret   
3002b53a:	iret   
3002b53b:	retf   0xbb8
3002b53e:	add    BYTE PTR [eax],al
3002b540:	(bad)  
3002b541:	int    0xcc
3002b543:	mov    esi,0xcfc8cdd2
3002b549:	ror    bh,cl
3002b54b:	iret   
3002b54c:	iret   
3002b54d:	iret   
3002b54e:	iret   
3002b54f:	retf   0xbb8
3002b552:	add    BYTE PTR [eax],al
3002b554:	(bad)  
3002b555:	into   
3002b556:	(bad)  
3002b557:	iret   
3002b558:	leave  
3002b559:	ror    ch,cl
3002b55b:	enter  0xd2cf,0xcf
3002b55f:	iret   
3002b560:	iret   
3002b561:	iret   
3002b562:	iret   
3002b563:	leave  
3002b564:	mov    eax,0xc600000b
3002b569:	int    0xcc
3002b56b:	(bad)  
3002b56c:	iret   
3002b56d:	ror    ch,cl
3002b56f:	enter  0xd2cf,0xcf
3002b573:	iret   
3002b574:	iret   
3002b575:	iret   
3002b576:	iret   
3002b577:	leave  
3002b578:	mov    eax,0xc600000b
3002b57d:	int    0xcc
3002b57f:	(bad)  
3002b580:	into   
3002b581:	ror    ch,cl
3002b583:	enter  0xd2cf,0xcf
3002b587:	iret   
3002b588:	iret   
3002b589:	iret   
3002b58a:	iret   
3002b58b:	leave  
3002b58c:	mov    eax,0xc600000b
3002b591:	int    0xcc
3002b593:	(bad)  
3002b594:	int    0xd2
3002b596:	int    0xc8
3002b598:	iret   
3002b599:	ror    bh,cl
3002b59b:	iret   
3002b59c:	iret   
3002b59d:	iret   
3002b59e:	iret   
3002b59f:	leave  
3002b5a0:	mov    eax,0xc600000b
3002b5a5:	int    0xcc
3002b5a7:	(bad)  
3002b5a8:	int3   
3002b5a9:	ror    ch,cl
3002b5ab:	enter  0xd2cf,0xcf
3002b5af:	iret   
3002b5b0:	iret   
3002b5b1:	iret   
3002b5b2:	iret   
3002b5b3:	leave  
3002b5b4:	mov    eax,0xc600000b
3002b5b9:	int    0xcc
3002b5bb:	(bad)  
3002b5bc:	retf   0xcdd2
3002b5bf:	enter  0xd2cf,0xcf
3002b5c3:	iret   
3002b5c4:	iret   
3002b5c5:	iret   
3002b5c6:	iret   
3002b5c7:	leave  
3002b5c8:	mov    eax,0xc600000b
3002b5cd:	int    0xcc
3002b5cf:	(bad)  
3002b5d0:	enter  0xcdd2,0xc8
3002b5d4:	iret   
3002b5d5:	ror    bh,cl
3002b5d7:	iret   
3002b5d8:	iret   
3002b5d9:	iret   
3002b5da:	iret   
3002b5db:	leave  
3002b5dc:	mov    eax,0xc600000b
3002b5e1:	int    0xcc
3002b5e3:	mov    bh,0xd2
3002b5e6:	int    0xc8
3002b5e8:	iret   
3002b5e9:	ror    bh,cl
3002b5eb:	iret   
3002b5ec:	iret   
3002b5ed:	iret   
3002b5ee:	iret   
3002b5ef:	leave  
3002b5f0:	mov    eax,0xc600000b
3002b5f5:	int    0xcc
3002b5f7:	mov    dh,0xd2
3002b5fa:	int    0xc8
3002b5fc:	iret   
3002b5fd:	ror    bh,cl
3002b5ff:	iret   
3002b600:	iret   
3002b601:	iret   
3002b602:	iret   
3002b603:	leave  
3002b604:	mov    eax,0xc600000b
3002b609:	into   
3002b60a:	(bad)  
3002b60b:	iret   
3002b60c:	int    0xd2
3002b60e:	int    0xc8
3002b610:	iret   
3002b611:	ror    bh,cl
3002b613:	iret   
3002b614:	iret   
3002b615:	iret   
3002b616:	iret   
3002b617:	enter  0xbb8,0x0
3002b61b:	add    dh,al
3002b61d:	int    0xcb
3002b61f:	iret   
3002b620:	into   
3002b621:	ror    ch,cl
3002b623:	enter  0xd2cf,0xcf
3002b627:	iret   
3002b628:	iret   
3002b629:	iret   
3002b62a:	iret   
3002b62b:	enter  0xbb8,0x0
3002b62f:	add    dh,al
3002b631:	int    0xcb
3002b633:	iret   
3002b634:	int3   
3002b635:	ror    ch,cl
3002b637:	enter  0xd2cf,0xcf
3002b63b:	iret   
3002b63c:	iret   
3002b63d:	iret   
3002b63e:	iret   
3002b63f:	enter  0xbb8,0x0
3002b643:	add    dh,al
3002b645:	int    0xcb
3002b647:	iret   
3002b648:	retf   0xcdd2
3002b64b:	enter  0xd2cf,0xcf
3002b64f:	iret   
3002b650:	iret   
3002b651:	iret   
3002b652:	iret   
3002b653:	enter  0xbb8,0x0
3002b657:	add    dh,al
3002b659:	int    0xcb
3002b65b:	iret   
3002b65c:	leave  
3002b65d:	ror    ch,cl
3002b65f:	enter  0xd2cf,0xcf
3002b663:	iret   
3002b664:	iret   
3002b665:	iret   
3002b666:	iret   
3002b667:	enter  0xbb8,0x0
3002b66b:	add    dh,al
3002b66d:	int    0xcb
3002b66f:	iret   
3002b670:	enter  0xcdd2,0xc8
3002b674:	iret   
3002b675:	ror    bh,cl
3002b677:	iret   
3002b678:	iret   
3002b679:	iret   
3002b67a:	iret   
3002b67b:	enter  0xbb8,0x0
3002b67f:	add    dh,al
3002b681:	int    0xcb
3002b683:	iret   
3002b684:	(bad)  
3002b685:	ror    ch,cl
3002b687:	enter  0xd2cf,0xcf
3002b68b:	iret   
3002b68c:	iret   
3002b68d:	iret   
3002b68e:	iret   
3002b68f:	enter  0xbb8,0x0
3002b693:	add    dh,al
3002b695:	int    0xcb
3002b697:	iret   
3002b698:	(bad)  
3002b699:	ror    ch,cl
3002b69b:	enter  0xd2cf,0xcf
3002b69f:	iret   
3002b6a0:	iret   
3002b6a1:	iret   
3002b6a2:	iret   
3002b6a3:	enter  0xbb8,0x0
3002b6a7:	add    dh,al
3002b6a9:	int    0xcb
3002b6ab:	into   
3002b6ac:	iret   
3002b6ad:	ror    ch,cl
3002b6af:	enter  0xd2cf,0xcf
3002b6b3:	iret   
3002b6b4:	iret   
3002b6b5:	iret   
3002b6b6:	iret   
3002b6b7:	enter  0x7d0,0x0
3002b6bb:	add    dh,al
3002b6bd:	into   
3002b6be:	leave  
3002b6bf:	iret   
3002b6c0:	retf   0xced2
3002b6c3:	leave  
3002b6c4:	int3   
3002b6c5:	ror    bh,cl
3002b6c7:	iret   
3002b6c8:	iret   
3002b6c9:	iret   
3002b6ca:	iret   
3002b6cb:	into   
3002b6cc:	rol    BYTE PTR [edi],1
3002b6ce:	add    BYTE PTR [eax],al
3002b6d0:	(bad)  
3002b6d1:	into   
3002b6d2:	mov    bh,0xcb
3002b6d5:	ror    dh,cl
3002b6d7:	leave  
3002b6d8:	int3   
3002b6d9:	ror    bh,cl
3002b6db:	iret   
3002b6dc:	iret   
3002b6dd:	iret   
3002b6de:	iret   
3002b6df:	into   
3002b6e0:	rol    BYTE PTR [edi],1
3002b6e2:	add    BYTE PTR [eax],al
3002b6e4:	(bad)  
3002b6e5:	into   
3002b6e6:	mov    bh,0xca
3002b6e9:	ror    dh,cl
3002b6eb:	leave  
3002b6ec:	int3   
3002b6ed:	ror    bh,cl
3002b6ef:	iret   
3002b6f0:	iret   
3002b6f1:	iret   
3002b6f2:	iret   
3002b6f3:	into   
3002b6f4:	rol    BYTE PTR [edi],1
3002b6f6:	add    BYTE PTR [eax],al
3002b6f8:	(bad)  
3002b6f9:	into   
3002b6fa:	mov    bh,0xc9
3002b6fd:	ror    dh,cl
3002b6ff:	leave  
3002b700:	int3   
3002b701:	ror    bh,cl
3002b703:	iret   
3002b704:	iret   
3002b705:	iret   
3002b706:	iret   
3002b707:	into   
3002b708:	rol    BYTE PTR [edi],1
3002b70a:	add    BYTE PTR [eax],al
3002b70c:	(bad)  
3002b70d:	into   
3002b70e:	mov    bh,0xc8
3002b711:	ror    dh,cl
3002b713:	leave  
3002b714:	int3   
3002b715:	ror    bh,cl
3002b717:	iret   
3002b718:	iret   
3002b719:	iret   
3002b71a:	iret   
3002b71b:	into   
3002b71c:	rol    BYTE PTR [edi],1
3002b71e:	add    BYTE PTR [eax],al
3002b720:	(bad)  
3002b721:	into   
3002b722:	mov    bh,0xc7
3002b725:	ror    dh,cl
3002b727:	leave  
3002b728:	int3   
3002b729:	ror    bh,cl
3002b72b:	iret   
3002b72c:	iret   
3002b72d:	iret   
3002b72e:	iret   
3002b72f:	into   
3002b730:	rol    BYTE PTR [edi],1
3002b732:	add    BYTE PTR [eax],al
3002b734:	(bad)  
3002b735:	into   
3002b736:	mov    bh,0xc6
3002b739:	ror    dh,cl
3002b73b:	leave  
3002b73c:	int3   
3002b73d:	ror    bh,cl
3002b73f:	iret   
3002b740:	iret   
3002b741:	iret   
3002b742:	iret   
3002b743:	into   
3002b744:	rol    BYTE PTR [edi],1
3002b746:	add    BYTE PTR [eax],al
3002b748:	(bad)  
3002b749:	into   
3002b74a:	mov    dh,0xcf
3002b74d:	ror    dh,cl
3002b74f:	leave  
3002b750:	int3   
3002b751:	ror    bh,cl
3002b753:	iret   
3002b754:	iret   
3002b755:	iret   
3002b756:	iret   
3002b757:	into   
3002b758:	rol    BYTE PTR [edi],1
3002b75a:	add    BYTE PTR [eax],al
3002b75c:	(bad)  
3002b75d:	into   
3002b75e:	mov    dh,0xce
3002b761:	ror    dh,cl
3002b763:	leave  
3002b764:	int3   
3002b765:	ror    bh,cl
3002b767:	iret   
3002b768:	iret   
3002b769:	iret   
3002b76a:	iret   
3002b76b:	into   
3002b76c:	push   0x6c
3002b76e:	mov    eax,0x3003e44c
3002b773:	call   0x300045c8
3002b778:	mov    edi,ecx
3002b77a:	mov    eax,DWORD PTR [ebp+0x8]
3002b77d:	mov    esi,DWORD PTR [ebp+0xc]
3002b780:	xor    ebx,ebx
3002b782:	mov    DWORD PTR [ebp-0x6c],ebx
3002b785:	lea    ecx,[ebp-0x70]
3002b788:	push   ecx
3002b789:	push   0x20019
3002b78e:	push   ebx
3002b78f:	push   eax
3002b790:	push   0x80000002
3002b795:	mov    DWORD PTR [ebp-0x4],ebx
3002b798:	mov    BYTE PTR [ebp-0x65],bl
3002b79b:	call   DWORD PTR ds:0x30045008
3002b7a1:	test   eax,eax
3002b7a3:	jne    0x3002b7fd
3002b7a5:	lea    eax,[ebp-0x74]
3002b7a8:	push   eax
3002b7a9:	lea    eax,[ebp-0x64]
3002b7ac:	push   eax
3002b7ad:	lea    eax,[ebp-0x78]
3002b7b0:	push   eax
3002b7b1:	push   ebx
3002b7b2:	push   0x3002b810
3002b7b7:	push   DWORD PTR [ebp-0x70]
3002b7ba:	mov    DWORD PTR [ebp-0x74],0x50
3002b7c1:	call   DWORD PTR ds:0x3004500c
3002b7c7:	test   eax,eax
3002b7c9:	jne    0x3002b7dc
3002b7cb:	push   esi
3002b7cc:	lea    eax,[ebp-0x64]
3002b7cf:	push   eax
3002b7d0:	call   DWORD PTR ds:0x3004549c
3002b7d6:	test   eax,eax
3002b7d8:	setns  BYTE PTR [ebp-0x65]
3002b7dc:	push   DWORD PTR [ebp-0x70]
3002b7df:	call   DWORD PTR ds:0x30045004
3002b7e5:	cmp    BYTE PTR [ebp-0x65],0x0
3002b7e9:	je     0x3002b7fd
3002b7eb:	lea    eax,[ebp-0x6c]
3002b7ee:	push   eax
3002b7ef:	push   esi
3002b7f0:	mov    ecx,edi
3002b7f2:	call   0x3002b8a0
3002b7f7:	test   al,al
3002b7f9:	je     0x3002b7fd
3002b7fb:	mov    bl,0x1
3002b7fd:	push   DWORD PTR [ebp-0x6c]
3002b800:	call   DWORD PTR ds:0x300454e8
3002b806:	mov    al,bl
3002b808:	call   0x300045fe
3002b80d:	ret    0x8
3002b810:	push   esi
3002b811:	add    BYTE PTR [ecx+0x0],ch
3002b814:	jb     0x3002b816
3002b816:	je     0x3002b818
3002b818:	jne    0x3002b81a
3002b81a:	popa   
3002b81b:	add    BYTE PTR [eax+eax*1+0x69],ch
3002b81f:	add    BYTE PTR [edx+0x0],bh
3002b822:	popa   
3002b823:	add    BYTE PTR [eax+eax*1+0x69],dh
3002b827:	add    BYTE PTR [edi+0x0],ch
3002b82a:	outs   dx,BYTE PTR ds:[esi]
3002b82b:	add    BYTE PTR [ecx+0x0],cl
3002b82e:	inc    esp
3002b82f:	add    BYTE PTR [eax],al
3002b831:	add    BYTE PTR [edx+0x18],ch
3002b834:	mov    eax,0x3003e4a8
3002b839:	call   0x300045c8
3002b83e:	mov    esi,ecx
3002b840:	mov    edi,DWORD PTR [ebp+0x8]
3002b843:	xor    ebx,ebx
3002b845:	mov    DWORD PTR [ebp-0x24],ebx
3002b848:	lea    eax,[ebp-0x24]
3002b84b:	push   eax
3002b84c:	push   0x2
3002b84e:	mov    DWORD PTR [ebp-0x4],ebx
3002b851:	call   0x30038e8c
3002b856:	test   eax,eax
3002b858:	js     0x3002b88d
3002b85a:	mov    edx,DWORD PTR [esi+0x660]
3002b860:	mov    ecx,DWORD PTR [ebp-0x24]
3002b863:	call   0x3002b042
3002b868:	test   al,al
3002b86a:	je     0x3002b88d
3002b86c:	lea    eax,[ebp-0x20]
3002b86f:	push   eax
3002b870:	push   edi
3002b871:	mov    ecx,esi
3002b873:	call   0x3002b76c
3002b878:	test   al,al
3002b87a:	je     0x3002b88d
3002b87c:	lea    eax,[ebp-0x20]
3002b87f:	push   eax
3002b880:	mov    ecx,esi
3002b882:	call   0x3002bb56
3002b887:	test   al,al
3002b889:	je     0x3002b88d
3002b88b:	mov    bl,0x1
3002b88d:	push   DWORD PTR [ebp-0x24]
3002b890:	call   DWORD PTR ds:0x300454e8
3002b896:	mov    al,bl
3002b898:	call   0x300045fe
3002b89d:	ret    0x4
3002b8a0:	push   0x1c
3002b8a2:	mov    eax,0x3003e344
3002b8a7:	call   0x3000116a
3002b8ac:	mov    esi,ecx
3002b8ae:	and    DWORD PTR [ebp-0x20],0x0
3002b8b2:	and    DWORD PTR [ebp-0x1c],0x0
3002b8b6:	lea    eax,[ebp-0x1c]
3002b8b9:	push   eax
3002b8ba:	lea    eax,[ebp-0x20]
3002b8bd:	push   eax
3002b8be:	push   0x3002b9a0
3002b8c3:	xor    bl,bl
3002b8c5:	call   0x3002e564
3002b8ca:	xor    edi,edi
3002b8cc:	test   eax,eax
3002b8ce:	je     0x3002b975
3002b8d4:	mov    DWORD PTR [ebp-0x18],edi
3002b8d7:	mov    DWORD PTR [ebp-0x4],edi
3002b8da:	mov    DWORD PTR [ebp-0x14],edi
3002b8dd:	lea    eax,[ebp-0x18]
3002b8e0:	push   eax
3002b8e1:	lea    eax,[ebp-0x24]
3002b8e4:	push   eax
3002b8e5:	push   DWORD PTR [ebp+0xc]
3002b8e8:	lea    eax,[ebp-0x14]
3002b8eb:	push   eax
3002b8ec:	push   DWORD PTR [ebp+0x8]
3002b8ef:	mov    BYTE PTR [ebp-0x4],0x1
3002b8f3:	mov    ecx,esi
3002b8f5:	mov    DWORD PTR [ebp-0x24],edi
3002b8f8:	call   0x3002e73e
3002b8fd:	test   eax,eax
3002b8ff:	je     0x3002b965
3002b901:	push   0x3002baf8
3002b906:	lea    ecx,[ebp-0x14]
3002b909:	call   0x300062d8
3002b90e:	test   eax,eax
3002b910:	jns    0x3002b918
3002b912:	push   eax
3002b913:	call   0x3002ae0b
3002b918:	mov    DWORD PTR [ebp-0x10],edi
3002b91b:	lea    eax,[ebp-0x10]
3002b91e:	push   eax
3002b91f:	mov    BYTE PTR [ebp-0x4],0x2
3002b923:	push   DWORD PTR [ebp-0x20]
3002b926:	lea    eax,[ebp-0x14]
3002b929:	push   0x8004
3002b92e:	push   eax
3002b92f:	mov    ecx,esi
3002b931:	call   0x3002ed16
3002b936:	test   eax,eax
3002b938:	je     0x3002b956
3002b93a:	push   DWORD PTR [ebp-0x1c]
3002b93d:	mov    ecx,esi
3002b93f:	push   DWORD PTR [ebp-0x18]
3002b942:	push   DWORD PTR [ebp-0x24]
3002b945:	push   DWORD PTR [ebp+0x8]
3002b948:	push   DWORD PTR [ebp-0x10]
3002b94b:	call   0x3002ee19
3002b950:	test   eax,eax
3002b952:	je     0x3002b956
3002b954:	mov    bl,0x1
3002b956:	cmp    DWORD PTR [ebp-0x10],0x0
3002b95a:	je     0x3002b965
3002b95c:	push   DWORD PTR [ebp-0x10]
3002b95f:	call   DWORD PTR ds:0x30045000
3002b965:	push   DWORD PTR [ebp-0x14]
3002b968:	mov    esi,DWORD PTR ds:0x300454e8
3002b96e:	call   esi
3002b970:	push   DWORD PTR [ebp-0x18]
3002b973:	call   esi
3002b975:	cmp    DWORD PTR [ebp-0x1c],0x0
3002b979:	je     0x3002b984
3002b97b:	push   DWORD PTR [ebp-0x1c]
3002b97e:	call   DWORD PTR ds:0x30045014
3002b984:	cmp    DWORD PTR [ebp-0x20],0x0
3002b988:	je     0x3002b994
3002b98a:	push   edi
3002b98b:	push   DWORD PTR [ebp-0x20]
3002b98e:	call   DWORD PTR ds:0x30045018
3002b994:	mov    al,bl
3002b996:	call   0x3000119d
3002b99b:	ret    0x8
3002b99e:	nop
3002b99f:	nop
3002b9a0:	push   edx
3002b9a1:	add    BYTE PTR [eax+eax*1+0x52],al
3002b9a5:	add    BYTE PTR [ebp+0x0],al
3002b9a8:	push   edx
3002b9a9:	add    BYTE PTR [edx+0x0],dl
3002b9ac:	push   edx
3002b9ad:	add    BYTE PTR [edx+0x0],dl
3002b9b0:	push   edx
3002b9b1:	add    BYTE PTR [edx+0x0],dl
3002b9b4:	dec    ecx
3002b9b5:	add    BYTE PTR [edx],dh
3002b9b7:	add    BYTE PTR [edx+0x0],dl
3002b9ba:	push   edx
3002b9bb:	add    BYTE PTR [edx+0x0],dl
3002b9be:	push   edx
3002b9bf:	add    BYTE PTR [ecx+0x0],dl
3002b9c2:	inc    ebp
3002b9c3:	add    BYTE PTR [ecx+0x0],dl
3002b9c6:	push   eax
3002b9c7:	add    BYTE PTR [eax+0x0],dl
3002b9ca:	dec    ebx
3002b9cb:	add    BYTE PTR [ebp+0x0],al
3002b9ce:	dec    eax
3002b9cf:	add    BYTE PTR [edx+0x0],dl
3002b9d2:	push   edx
3002b9d3:	add    BYTE PTR [edx+0x0],dl
3002b9d6:	inc    ebp
3002b9d7:	add    BYTE PTR [edx+0x0],dl
3002b9da:	push   edx
3002b9db:	add    BYTE PTR [edx+0x0],dl
3002b9de:	push   edx
3002b9df:	add    BYTE PTR [edx+0x0],dl
3002b9e2:	dec    ecx
3002b9e3:	add    BYTE PTR [edx+0x0],dl
3002b9e6:	push   edx
3002b9e7:	add    BYTE PTR [edx+0x0],dl
3002b9ea:	dec    ecx
3002b9eb:	add    BYTE PTR [edx+0x0],dl
3002b9ee:	push   edx
3002b9ef:	add    BYTE PTR [ecx+0x0],dl
3002b9f2:	xor    DWORD PTR [eax],eax
3002b9f4:	push   ecx
3002b9f5:	add    BYTE PTR [ebp+0x0],cl
3002b9f8:	dec    ecx
3002b9f9:	add    BYTE PTR [ebp+0x0],al
3002b9fc:	inc    ebx
3002b9fd:	add    BYTE PTR [eax+eax*1+0x52],dl
3002ba01:	add    BYTE PTR [ebp+0x0],al
3002ba04:	push   edx
3002ba05:	add    BYTE PTR [ebx],dh
3002ba07:	add    BYTE PTR [eax+0x0],cl
3002ba0a:	push   edx
3002ba0b:	add    BYTE PTR [ecx+0x0],dl
3002ba0e:	inc    ecx
3002ba0f:	add    BYTE PTR [ecx+0x0],al
3002ba12:	dec    ecx
3002ba13:	add    BYTE PTR [edx+0x0],cl
3002ba16:	push   ecx
3002ba17:	add    BYTE PTR [eax+eax*1+0x5a],al
3002ba1b:	add    BYTE PTR [ebp+0x0],cl
3002ba1e:	xor    eax,DWORD PTR [eax]
3002ba20:	dec    edx
3002ba21:	add    BYTE PTR [edx],dh
3002ba23:	add    BYTE PTR [ebp+0x0],cl
3002ba26:	push   esp
3002ba27:	add    BYTE PTR [edx+0x0],cl
3002ba2a:	xor    eax,DWORD PTR [eax]
3002ba2c:	dec    ecx
3002ba2d:	add    BYTE PTR [ebx+0x0],cl
3002ba30:	pop    edx
3002ba31:	add    BYTE PTR [ebp+0x0],al
3002ba34:	inc    esp
3002ba35:	add    BYTE PTR [eax+0x0],dl
3002ba38:	inc    esp
3002ba39:	add    BYTE PTR [ecx],bh
3002ba3b:	add    BYTE PTR [edx+0x0],bl
3002ba3e:	push   eax
3002ba3f:	add    BYTE PTR [eax+eax*1+0x4d],al
3002ba43:	add    BYTE PTR [ecx+0x0],dl
3002ba46:	push   esp
3002ba47:	add    BYTE PTR [edx+0x0],cl
3002ba4a:	xor    BYTE PTR [eax],al
3002ba4c:	push   eax
3002ba4d:	add    BYTE PTR [ecx+0x0],cl
3002ba50:	pop    edx
3002ba51:	add    BYTE PTR [ebx],dh
3002ba53:	add    BYTE PTR [eax+0x0],cl
3002ba56:	push   esp
3002ba57:	add    BYTE PTR [ecx+0x0],cl
3002ba5a:	push   esp
3002ba5b:	add    BYTE PTR [eax+0x0],dl
3002ba5e:	push   edx
3002ba5f:	add    BYTE PTR [ecx+0x0],al
3002ba62:	inc    ebp
3002ba63:	add    BYTE PTR [ebp+0x0],al
3002ba66:	dec    eax
3002ba67:	add    BYTE PTR [ebp+0x0],cl
3002ba6a:	inc    ebx
3002ba6b:	add    BYTE PTR [ebx+0x0],al
3002ba6e:	xor    DWORD PTR [eax],eax
3002ba70:	dec    eax
3002ba71:	add    BYTE PTR [ebx+0x0],al
3002ba74:	dec    ebx
3002ba75:	add    BYTE PTR [ecx+0x0],cl
3002ba78:	pop    edx
3002ba79:	add    BYTE PTR [ebx],dh
3002ba7b:	add    BYTE PTR [ebx+0x0],al
3002ba7e:	cmp    BYTE PTR [eax],al
3002ba80:	push   ecx
3002ba81:	add    BYTE PTR [edx+0x0],bl
3002ba84:	dec    ebp
3002ba85:	add    BYTE PTR [edx+0x0],cl
3002ba88:	inc    ebx
3002ba89:	add    BYTE PTR [edx+0x0],dl
3002ba8c:	inc    esp
3002ba8d:	add    BYTE PTR [ecx],dh
3002ba8f:	add    BYTE PTR [eax+0x0],dl
3002ba92:	cmp    DWORD PTR [eax],eax
3002ba94:	inc    ecx
3002ba95:	add    BYTE PTR [eax+eax*1+0x52],al
3002ba99:	add    BYTE PTR [ecx],dh
3002ba9b:	add    BYTE PTR [edx+0x0],dl
3002ba9e:	xor    DWORD PTR [eax],eax
3002baa0:	push   eax
3002baa1:	add    BYTE PTR [eax+eax*1+0x44],dl
3002baa5:	add    BYTE PTR [eax+0x0],cl
3002baa8:	inc    ecx
3002baa9:	add    BYTE PTR [eax],bh
3002baab:	add    BYTE PTR [ebp+0x0],cl
3002baae:	push   esp
3002baaf:	add    BYTE PTR [ebx+0x0],al
3002bab2:	inc    ecx
3002bab3:	add    BYTE PTR [ecx+0x0],cl
3002bab6:	dec    edx
3002bab7:	add    BYTE PTR [edx+0x0],bl
3002baba:	dec    eax
3002babb:	add    BYTE PTR [eax+0x0],cl
3002babe:	dec    ebp
3002babf:	add    BYTE PTR [edx+0x0],dl
3002bac2:	inc    ebp
3002bac3:	add    BYTE PTR [eax+0x0],cl
3002bac6:	push   esp
3002bac7:	add    BYTE PTR [eax+0x0],cl
3002baca:	dec    edx
3002bacb:	add    BYTE PTR [ebp+0x0],cl
3002bace:	push   edx
3002bacf:	add    BYTE PTR [ebp+0x0],al
3002bad2:	cmp    DWORD PTR [eax],eax
3002bad4:	inc    esp
3002bad5:	add    BYTE PTR [eax+0x0],cl
3002bad8:	dec    ebx
3002bad9:	add    BYTE PTR [ecx+0x0],al
3002badc:	dec    ebx
3002badd:	add    BYTE PTR [ebx+0x0],al
3002bae0:	inc    esp
3002bae1:	add    BYTE PTR [eax],dh
3002bae3:	add    BYTE PTR [ecx+0x0],dl
3002bae6:	inc    ebx
3002bae7:	add    BYTE PTR [eax+0x0],dl
3002baea:	push   ecx
3002baeb:	add    BYTE PTR [ecx+0x0],al
3002baee:	dec    edx
3002baef:	add    BYTE PTR [eax],al
3002baf1:	add    BYTE PTR [eax-0x6f6f6f70],dl
3002baf7:	nop
3002baf8:	push   ebx
3002baf9:	add    BYTE PTR [edi+0x0],ch
3002bafc:	data16 add BYTE PTR [eax+eax*1+0x77],dh
3002bb01:	add    BYTE PTR [ecx+0x0],ah
3002bb04:	jb     0x3002bb06
3002bb06:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3002bb0b:	add    BYTE PTR [ecx+0x0],ch
3002bb0e:	arpl   WORD PTR [eax],ax
3002bb10:	jb     0x3002bb12
3002bb12:	outs   dx,DWORD PTR ds:[esi]
3002bb13:	add    BYTE PTR [ebx+0x0],dh
3002bb16:	outs   dx,DWORD PTR ds:[esi]
3002bb17:	add    BYTE PTR [esi+0x0],ah
3002bb1a:	je     0x3002bb1c
3002bb1c:	pop    esp
3002bb1d:	add    BYTE PTR [esi+0x0],dl
3002bb20:	imul   eax,DWORD PTR [eax],0x750073
3002bb26:	popa   
3002bb27:	add    BYTE PTR [eax+eax*1+0x53],ch
3002bb2b:	add    BYTE PTR [eax+eax*1+0x75],dh
3002bb2f:	add    BYTE PTR [eax+eax*1+0x69],ah
3002bb33:	add    BYTE PTR [edi+0x0],ch
3002bb36:	pop    esp
3002bb37:	add    BYTE PTR [esi+0x0],dl
3002bb3a:	outs   dx,DWORD PTR ds:[esi]
3002bb3b:	add    BYTE PTR [eax+eax*1+0x75],ch
3002bb3f:	add    BYTE PTR [ebp+0x0],ch
3002bb42:	add    BYTE PTR gs:[eax+eax*1+0x69],cl
3002bb47:	add    BYTE PTR [ebx+0x0],ah
3002bb4a:	add    BYTE PTR gs:[esi+0x0],ch
3002bb4e:	jae    0x3002bb50
3002bb50:	add    BYTE PTR gs:[ebx],bh
3002bb53:	add    BYTE PTR [eax],al
3002bb55:	add    BYTE PTR [edx+0x10],ch
3002bb58:	mov    eax,0x3003e514
3002bb5d:	call   0x3000116a
3002bb62:	xor    ebx,ebx
3002bb64:	mov    DWORD PTR [ebp-0x14],ebx
3002bb67:	mov    DWORD PTR [ebp-0x4],ebx
3002bb6a:	mov    DWORD PTR [ebp-0x10],ebx
3002bb6d:	lea    eax,[ebp-0x14]
3002bb70:	push   eax
3002bb71:	push   ebx
3002bb72:	push   ebx
3002bb73:	lea    eax,[ebp-0x10]
3002bb76:	push   eax
3002bb77:	mov    BYTE PTR [ebp-0x4],0x1
3002bb7b:	push   DWORD PTR [ebp+0x8]
3002bb7e:	call   0x3002e73e
3002bb83:	test   eax,eax
3002bb85:	jne    0x3002bb9c
3002bb87:	push   DWORD PTR [ebp-0x10]
3002bb8a:	mov    esi,DWORD PTR ds:0x300454e8
3002bb90:	call   esi
3002bb92:	push   DWORD PTR [ebp-0x14]
3002bb95:	call   esi
3002bb97:	jmp    0x3002bc43
3002bb9c:	mov    esi,DWORD PTR [ebp-0x14]
3002bb9f:	push   esi
3002bba0:	call   DWORD PTR ds:0x3004516c
3002bba6:	mov    DWORD PTR [ebp-0x1c],eax
3002bba9:	test   eax,eax
3002bbab:	jne    0x3002bbc0
3002bbad:	push   DWORD PTR [ebp-0x10]
3002bbb0:	mov    edi,DWORD PTR ds:0x300454e8
3002bbb6:	call   edi
3002bbb8:	push   esi
3002bbb9:	call   edi
3002bbbb:	jmp    0x3002bc43
3002bbc0:	push   0x3002bc60
3002bbc5:	push   eax
3002bbc6:	call   DWORD PTR ds:0x30045178
3002bbcc:	test   eax,eax
3002bbce:	je     0x3002bc2c
3002bbd0:	mov    DWORD PTR [ebp+0x8],ebx
3002bbd3:	lea    ecx,[ebp+0x8]
3002bbd6:	push   ecx
3002bbd7:	push   0x3002bc74
3002bbdc:	push   0x3002bc84
3002bbe1:	mov    BYTE PTR [ebp-0x4],0x2
3002bbe5:	call   eax
3002bbe7:	test   eax,eax
3002bbe9:	js     0x3002bc1b
3002bbeb:	mov    DWORD PTR [ebp-0x18],ebx
3002bbee:	lea    edx,[ebp-0x18]
3002bbf1:	push   edx
3002bbf2:	mov    BYTE PTR [ebp-0x4],0x3
3002bbf6:	mov    eax,DWORD PTR [ebp+0x8]
3002bbf9:	push   0x3002bc50
3002bbfe:	mov    ecx,DWORD PTR [eax]
3002bc00:	push   ebx
3002bc01:	push   eax
3002bc02:	call   DWORD PTR [ecx+0xc]
3002bc05:	test   eax,eax
3002bc07:	mov    BYTE PTR [ebp-0x4],0x2
3002bc0b:	mov    eax,DWORD PTR [ebp-0x18]
3002bc0e:	setns  bl
3002bc11:	test   eax,eax
3002bc13:	je     0x3002bc1b
3002bc15:	mov    ecx,DWORD PTR [eax]
3002bc17:	push   eax
3002bc18:	call   DWORD PTR [ecx+0x8]
3002bc1b:	mov    BYTE PTR [ebp-0x4],0x1
3002bc1f:	mov    eax,DWORD PTR [ebp+0x8]
3002bc22:	test   eax,eax
3002bc24:	je     0x3002bc2c
3002bc26:	mov    ecx,DWORD PTR [eax]
3002bc28:	push   eax
3002bc29:	call   DWORD PTR [ecx+0x8]
3002bc2c:	push   DWORD PTR [ebp-0x10]
3002bc2f:	mov    edi,DWORD PTR ds:0x300454e8
3002bc35:	call   edi
3002bc37:	push   esi
3002bc38:	call   edi
3002bc3a:	push   DWORD PTR [ebp-0x1c]
3002bc3d:	call   DWORD PTR ds:0x30045168
3002bc43:	mov    al,bl
3002bc45:	call   0x3000119d
3002bc4a:	ret    0x4
3002bc4d:	nop
3002bc4e:	nop
3002bc4f:	nop
	...
3002bc58:	rol    BYTE PTR [eax],0x0
3002bc5b:	add    BYTE PTR [eax],al
3002bc5d:	add    BYTE PTR [eax],al
3002bc5f:	inc    esi
3002bc60:	inc    esp
3002bc61:	ins    BYTE PTR es:[edi],dx
3002bc62:	ins    BYTE PTR es:[edi],dx
3002bc63:	inc    edi
3002bc64:	gs je  0x3002bcaa
3002bc67:	ins    BYTE PTR es:[edi],dx
3002bc68:	popa   
3002bc69:	jae    0x3002bcde
3002bc6b:	dec    edi
3002bc6c:	bound  ebp,QWORD PTR [edx+0x65]
3002bc6f:	arpl   WORD PTR [eax+eax*1-0x70],si
3002bc73:	nop
3002bc74:	add    DWORD PTR [eax],eax
3002bc76:	add    BYTE PTR [eax],al
3002bc78:	add    BYTE PTR [eax],al
3002bc7a:	add    BYTE PTR [eax],al
3002bc7c:	rol    BYTE PTR [eax],0x0
3002bc7f:	add    BYTE PTR [eax],al
3002bc81:	add    BYTE PTR [eax],al
3002bc83:	inc    esi
3002bc84:	and    DWORD PTR [edi-0x63],ebp
3002bc87:	les    edx,FWORD PTR [edx-0x65b6e109]
3002bc8d:	jbe    0x3002bc70
3002bc8f:	sub    al,0x92
3002bc91:	and    eax,0x8b554cfb
3002bc96:	in     al,dx
3002bc97:	push   esi
3002bc98:	push   0x0
3002bc9a:	push   DWORD PTR [ebp+0x8]
3002bc9d:	mov    esi,ecx
3002bc9f:	call   0x3002bd46
3002bca4:	test   eax,eax
3002bca6:	je     0x3002bcb3
3002bca8:	push   DWORD PTR [ebp+0x8]
3002bcab:	mov    ecx,esi
3002bcad:	push   eax
3002bcae:	call   0x300084a4
3002bcb3:	pop    esi
3002bcb4:	pop    ebp
3002bcb5:	ret    0x4
3002bcb8:	push   0x8007000e
3002bcbd:	call   0x3002ae0b
3002bcc2:	int3   
3002bcc3:	push   ebp
3002bcc4:	mov    ebp,esp
3002bcc6:	mov    eax,DWORD PTR [ebp+0x14]
3002bcc9:	add    eax,eax
3002bccb:	push   eax
3002bccc:	push   DWORD PTR [ebp+0x10]
3002bccf:	mov    eax,DWORD PTR [ebp+0xc]
3002bcd2:	add    eax,eax
3002bcd4:	push   eax
3002bcd5:	push   DWORD PTR [ebp+0x8]
3002bcd8:	call   DWORD PTR ds:0x300453d0
3002bcde:	add    esp,0x10
3002bce1:	pop    ebp
3002bce2:	ret    
3002bce3:	sub    DWORD PTR [esp+0x4],0x40
3002bce8:	jmp    0x30001076
3002bced:	sub    DWORD PTR [esp+0x4],0x4
3002bcf2:	jmp    0x30001076
3002bcf7:	sub    ecx,0x620
3002bcfd:	jmp    0x30017949
3002bd02:	sub    DWORD PTR [esp+0x4],0x44
3002bd07:	jmp    0x30001076
3002bd0c:	sub    DWORD PTR [esp+0x4],0x48
3002bd11:	jmp    0x30001076
3002bd16:	push   ebp
3002bd17:	mov    ebp,esp
3002bd19:	mov    eax,DWORD PTR [ebp+0xc]
3002bd1c:	push   DWORD PTR [ebp+0x10]
3002bd1f:	shr    eax,0x4
3002bd22:	inc    eax
3002bd23:	movzx  eax,ax
3002bd26:	push   eax
3002bd27:	push   0x6
3002bd29:	push   DWORD PTR [ebp+0x8]
3002bd2c:	call   DWORD PTR ds:0x30045164
3002bd32:	test   eax,eax
3002bd34:	je     0x3002bd42
3002bd36:	push   DWORD PTR [ebp+0xc]
3002bd39:	push   eax
3002bd3a:	push   DWORD PTR [ebp+0x8]
3002bd3d:	call   0x3000542c
3002bd42:	pop    ebp
3002bd43:	ret    0xc
3002bd46:	push   ebp
3002bd47:	mov    ebp,esp
3002bd49:	push   ebx
3002bd4a:	push   esi
3002bd4b:	push   edi
3002bd4c:	mov    ebx,0x300430b8
3002bd51:	push   0x0
3002bd53:	mov    ecx,ebx
3002bd55:	call   0x300382c4
3002bd5a:	xor    edi,edi
3002bd5c:	inc    edi
3002bd5d:	jmp    0x3002bd78
3002bd5f:	push   DWORD PTR [ebp+0xc]
3002bd62:	push   DWORD PTR [ebp+0x8]
3002bd65:	push   esi
3002bd66:	call   0x3002bd16
3002bd6b:	test   eax,eax
3002bd6d:	jne    0x3002bd85
3002bd6f:	push   edi
3002bd70:	mov    ecx,ebx
3002bd72:	call   0x300382c4
3002bd77:	inc    edi
3002bd78:	mov    esi,eax
3002bd7a:	test   esi,esi
3002bd7c:	jne    0x3002bd5f
3002bd7e:	pop    edi
3002bd7f:	pop    esi
3002bd80:	pop    ebx
3002bd81:	pop    ebp
3002bd82:	ret    0x8
3002bd85:	mov    eax,esi
3002bd87:	jmp    0x3002bd7e
3002bd89:	push   ebp
3002bd8a:	mov    ebp,esp
3002bd8c:	push   ecx
3002bd8d:	push   ebx
3002bd8e:	mov    ebx,ecx
3002bd90:	test   ebx,ebx
3002bd92:	je     0x3002bde0
3002bd94:	push   esi
3002bd95:	push   edi
3002bd96:	xor    esi,esi
3002bd98:	push   esi
3002bd99:	push   esi
3002bd9a:	push   0xffffffff
3002bd9c:	push   ebx
3002bd9d:	push   esi
3002bd9e:	push   0x3
3002bda0:	call   DWORD PTR ds:0x30045170
3002bda6:	lea    ecx,[eax-0x1]
3002bda9:	push   ecx
3002bdaa:	push   esi
3002bdab:	mov    DWORD PTR [ebp-0x4],eax
3002bdae:	call   DWORD PTR ds:0x300454f0
3002bdb4:	mov    edi,eax
3002bdb6:	test   edi,edi
3002bdb8:	je     0x3002bdd8
3002bdba:	push   DWORD PTR [ebp-0x4]
3002bdbd:	push   edi
3002bdbe:	push   0xffffffff
3002bdc0:	push   ebx
3002bdc1:	push   esi
3002bdc2:	push   0x3
3002bdc4:	call   DWORD PTR ds:0x30045170
3002bdca:	cmp    eax,DWORD PTR [ebp-0x4]
3002bdcd:	je     0x3002bdd8
3002bdcf:	push   edi
3002bdd0:	call   DWORD PTR ds:0x300454e8
3002bdd6:	jmp    0x3002bdda
3002bdd8:	mov    esi,edi
3002bdda:	pop    edi
3002bddb:	mov    eax,esi
3002bddd:	pop    esi
3002bdde:	jmp    0x3002bde2
3002bde0:	xor    eax,eax
3002bde2:	pop    ebx
3002bde3:	leave  
3002bde4:	ret    
3002bde5:	push   ebp
3002bde6:	mov    ebp,esp
3002bde8:	push   esi
3002bde9:	mov    esi,ecx
3002bdeb:	mov    ecx,DWORD PTR [ebp+0x8]
3002bdee:	test   ecx,ecx
3002bdf0:	je     0x3002bdff
3002bdf2:	call   0x3002bd89
3002bdf7:	mov    DWORD PTR [esi],eax
3002bdf9:	test   eax,eax
3002bdfb:	je     0x3002be09
3002bdfd:	jmp    0x3002be02
3002bdff:	and    DWORD PTR [esi],0x0
3002be02:	mov    eax,esi
3002be04:	pop    esi
3002be05:	pop    ebp
3002be06:	ret    0x4
3002be09:	push   0x8007000e
3002be0e:	call   0x3002ae0b
3002be13:	int3   
3002be14:	push   ebp
3002be15:	mov    ebp,esp
3002be17:	push   esi
3002be18:	mov    esi,ecx
3002be1a:	cmp    DWORD PTR [esi],0x0
3002be1d:	je     0x3002be55
3002be1f:	push   0x3001e080
3002be24:	call   DWORD PTR ds:0x30045174
3002be2a:	test   eax,eax
3002be2c:	je     0x3002be63
3002be2e:	push   0x3002be6c
3002be33:	push   eax
3002be34:	call   DWORD PTR ds:0x30045178
3002be3a:	test   eax,eax
3002be3c:	je     0x3002be63
3002be3e:	push   0x0
3002be40:	push   DWORD PTR [esi]
3002be42:	push   DWORD PTR [ebp+0x18]
3002be45:	push   DWORD PTR [ebp+0x14]
3002be48:	push   DWORD PTR [ebp+0x10]
3002be4b:	push   DWORD PTR [ebp+0xc]
3002be4e:	push   DWORD PTR [ebp+0x8]
3002be51:	call   eax
3002be53:	jmp    0x3002be66
3002be55:	cmp    DWORD PTR [esi+0x4],0x0
3002be59:	je     0x3002be63
3002be5b:	pop    esi
3002be5c:	pop    ebp
3002be5d:	jmp    DWORD PTR ds:0x30045008
3002be63:	xor    eax,eax
3002be65:	inc    eax
3002be66:	pop    esi
3002be67:	pop    ebp
3002be68:	ret    0x14
3002be6b:	nop
3002be6c:	push   edx
3002be6d:	gs addr16 dec edi
3002be70:	jo     0x3002bed7
3002be72:	outs   dx,BYTE PTR ds:[esi]
3002be73:	dec    ebx
3002be74:	gs jns 0x3002becb
3002be77:	jb     0x3002beda
3002be79:	outs   dx,BYTE PTR ds:[esi]
3002be7a:	jae    0x3002bedd
3002be7c:	arpl   WORD PTR [ebp+eiz*2+0x64],si
3002be80:	push   edi
3002be81:	add    BYTE PTR [esi-0x75],dl
3002be84:	icebp  
3002be85:	jmp    0x3002be95
3002be87:	mov    ecx,DWORD PTR [esi]
3002be89:	push   ecx
3002be8a:	mov    eax,DWORD PTR [ecx]
3002be8c:	mov    DWORD PTR [esi],eax
3002be8e:	call   DWORD PTR ds:0x300452b4
3002be94:	pop    ecx
3002be95:	cmp    DWORD PTR [esi],0x0
3002be98:	jne    0x3002be87
3002be9a:	pop    esi
3002be9b:	ret    
3002be9c:	push   DWORD PTR [ecx]
3002be9e:	call   DWORD PTR ds:0x300454e8
3002bea4:	ret    
3002bea5:	push   ebp
3002bea6:	mov    ebp,esp
3002bea8:	push   esi
3002bea9:	mov    esi,ecx
3002beab:	mov    DWORD PTR [esi],0x30006d14
3002beb1:	call   0x30017158
3002beb6:	test   BYTE PTR [ebp+0x8],0x1
3002beba:	je     0x3002bec4
3002bebc:	push   esi
3002bebd:	call   DWORD PTR ds:0x300452ac
3002bec3:	pop    ecx
3002bec4:	mov    eax,esi
3002bec6:	pop    esi
3002bec7:	pop    ebp
3002bec8:	ret    0x4
3002becb:	mov    eax,DWORD PTR [ecx+0x8]
3002bece:	ret    
3002becf:	push   ebp
3002bed0:	mov    ebp,esp
3002bed2:	push   ebx
3002bed3:	mov    ebx,DWORD PTR [ebp+0x8]
3002bed6:	test   ebx,ebx
3002bed8:	jne    0x3002bee1
3002beda:	mov    eax,0x80004003
3002bedf:	jmp    0x3002bf16
3002bee1:	push   esi
3002bee2:	push   edi
3002bee3:	lea    edi,[ecx+0x28]
3002bee6:	xor    esi,esi
3002bee8:	cmp    DWORD PTR [edi],esi
3002beea:	jne    0x3002bf06
3002beec:	push   edi
3002beed:	push   0x3002bf2c
3002bef2:	push   0x1
3002bef4:	push   esi
3002bef5:	push   0x3002bf1c
3002befa:	call   DWORD PTR ds:0x30045494
3002bf00:	mov    esi,eax
3002bf02:	test   esi,esi
3002bf04:	js     0x3002bf12
3002bf06:	mov    ecx,DWORD PTR [edi]
3002bf08:	mov    DWORD PTR [ebx],ecx
3002bf0a:	mov    ecx,DWORD PTR [edi]
3002bf0c:	push   ecx
3002bf0d:	mov    edx,DWORD PTR [ecx]
3002bf0f:	call   DWORD PTR [edx+0x4]
3002bf12:	pop    edi
3002bf13:	mov    eax,esi
3002bf15:	pop    esi
3002bf16:	pop    ebx
3002bf17:	pop    ebp
3002bf18:	ret    0x4
3002bf1b:	nop
3002bf1c:	and    eax,DWORD PTR [ebx]
3002bf1e:	add    BYTE PTR [eax],al
3002bf20:	add    BYTE PTR [eax],al
3002bf22:	add    BYTE PTR [eax],al
3002bf24:	rol    BYTE PTR [eax],0x0
3002bf27:	add    BYTE PTR [eax],al
3002bf29:	add    BYTE PTR [eax],al
3002bf2b:	inc    esi
3002bf2c:	inc    esi
3002bf2d:	add    DWORD PTR [eax],eax
3002bf2f:	add    BYTE PTR [eax],al
3002bf31:	add    BYTE PTR [eax],al
3002bf33:	add    al,al
3002bf35:	add    BYTE PTR [eax],al
3002bf37:	add    BYTE PTR [eax],al
3002bf39:	add    BYTE PTR [eax],al
3002bf3b:	inc    esi
3002bf3c:	push   ebp
3002bf3d:	mov    ebp,esp
3002bf3f:	mov    eax,DWORD PTR [ebp+0x8]
3002bf42:	push   0x30006ce8
3002bf47:	mov    ecx,DWORD PTR [eax]
3002bf49:	push   0x3002bf58
3002bf4e:	push   eax
3002bf4f:	call   DWORD PTR [ecx+0xc]
3002bf52:	pop    ebp
3002bf53:	ret    0x4
3002bf56:	nop
3002bf57:	nop
3002bf58:	inc    ecx
3002bf59:	add    BYTE PTR [eax+0x0],dl
3002bf5c:	push   eax
3002bf5d:	add    BYTE PTR [ecx+0x0],cl
3002bf60:	inc    esp
3002bf61:	add    BYTE PTR [eax],al
3002bf63:	add    BYTE PTR [ebp-0x75],dl
3002bf66:	in     al,dx
3002bf67:	push   DWORD PTR [ebp+0x14]
3002bf6a:	movzx  edx,WORD PTR [ebp+0xc]
3002bf6e:	push   DWORD PTR [ebp+0x10]
3002bf71:	mov    ecx,DWORD PTR [ebp+0x8]
3002bf74:	call   0x3002bf7d
3002bf79:	pop    ebp
3002bf7a:	ret    0x10
3002bf7d:	push   ebp
3002bf7e:	mov    ebp,esp
3002bf80:	push   ecx
3002bf81:	and    DWORD PTR [ebp-0x4],0x0
3002bf85:	push   ebx
3002bf86:	push   esi
3002bf87:	push   edi
3002bf88:	lea    eax,[ebp-0x4]
3002bf8b:	push   eax
3002bf8c:	mov    ebx,edx
3002bf8e:	mov    edi,ecx
3002bf90:	call   DWORD PTR ds:0x3004542c
3002bf96:	mov    esi,eax
3002bf98:	test   esi,esi
3002bf9a:	js     0x3002bfe2
3002bf9c:	mov    esi,DWORD PTR [ebp+0xc]
3002bf9f:	test   esi,esi
3002bfa1:	jne    0x3002bfb5
3002bfa3:	jmp    0x3002bfbb
3002bfa5:	push   DWORD PTR [esi+0x4]
3002bfa8:	mov    eax,DWORD PTR [ebp-0x4]
3002bfab:	push   edx
3002bfac:	mov    ecx,DWORD PTR [eax]
3002bfae:	push   eax
3002bfaf:	call   DWORD PTR [ecx+0xc]
3002bfb2:	lea    esi,[esi+0x8]
3002bfb5:	mov    edx,DWORD PTR [esi]
3002bfb7:	test   edx,edx
3002bfb9:	jne    0x3002bfa5
3002bfbb:	mov    eax,DWORD PTR [edi]
3002bfbd:	push   DWORD PTR [ebp-0x4]
3002bfc0:	mov    ecx,edi
3002bfc2:	call   DWORD PTR [eax+0x14]
3002bfc5:	mov    esi,eax
3002bfc7:	test   esi,esi
3002bfc9:	js     0x3002bfe2
3002bfcb:	push   DWORD PTR [ebp-0x4]
3002bfce:	push   0x0
3002bfd0:	push   DWORD PTR [ebp+0x8]
3002bfd3:	push   ebx
3002bfd4:	push   DWORD PTR ds:0x300430bc
3002bfda:	call   DWORD PTR ds:0x30045428
3002bfe0:	mov    esi,eax
3002bfe2:	mov    eax,DWORD PTR [ebp-0x4]
3002bfe5:	test   eax,eax
3002bfe7:	je     0x3002bfef
3002bfe9:	mov    ecx,DWORD PTR [eax]
3002bfeb:	push   eax
3002bfec:	call   DWORD PTR [ecx+0x8]
3002bfef:	pop    edi
3002bff0:	mov    eax,esi
3002bff2:	pop    esi
3002bff3:	pop    ebx
3002bff4:	leave  
3002bff5:	ret    0x8
3002bff8:	push   ebp
3002bff9:	mov    ebp,esp
3002bffb:	mov    edx,DWORD PTR [ebp+0xc]
3002bffe:	test   edx,edx
3002c000:	jne    0x3002c009
3002c002:	mov    eax,0x80070057
3002c007:	jmp    0x3002c017
3002c009:	push   DWORD PTR [ebp+0x14]
3002c00c:	mov    ecx,DWORD PTR [ebp+0x8]
3002c00f:	push   DWORD PTR [ebp+0x10]
3002c012:	call   0x3002bf7d
3002c017:	pop    ebp
3002c018:	ret    0x10
3002c01b:	mov    eax,0x80004005
3002c020:	ret    0x10
3002c023:	push   ebp
3002c024:	mov    ebp,esp
3002c026:	push   ecx
3002c027:	and    DWORD PTR [ebp-0x4],0x0
3002c02b:	push   esi
3002c02c:	lea    eax,[ebp-0x4]
3002c02f:	mov    esi,ecx
3002c031:	push   eax
3002c032:	push   DWORD PTR [esi+0x4]
3002c035:	call   DWORD PTR ds:0x30045574
3002c03b:	test   eax,eax
3002c03d:	je     0x3002c042
3002c03f:	mov    DWORD PTR [esi+0x8],eax
3002c042:	push   0x10
3002c044:	call   DWORD PTR ds:0x300455ac
3002c04a:	mov    edx,eax
3002c04c:	test   edx,edx
3002c04e:	je     0x3002c064
3002c050:	mov    ecx,DWORD PTR [esi+0x8]
3002c053:	mov    eax,DWORD PTR [ebp-0x4]
3002c056:	mov    DWORD PTR [edx],0x3001d404
3002c05c:	mov    DWORD PTR [edx+0x4],eax
3002c05f:	mov    DWORD PTR [edx+0x8],ecx
3002c062:	jmp    0x3002c066
3002c064:	xor    edx,edx
3002c066:	mov    eax,edx
3002c068:	pop    esi
3002c069:	leave  
3002c06a:	ret    
3002c06b:	push   esi
3002c06c:	push   edi
3002c06d:	mov    edi,ecx
3002c06f:	mov    esi,DWORD PTR [edi]
3002c071:	push   DWORD PTR [edi+0x4]
3002c074:	push   DWORD PTR [esi]
3002c076:	call   DWORD PTR ds:0x30045578
3002c07c:	test   eax,eax
3002c07e:	je     0x3002c083
3002c080:	mov    DWORD PTR [esi+0x4],eax
3002c083:	mov    esi,DWORD PTR [edi]
3002c085:	test   esi,esi
3002c087:	je     0x3002c098
3002c089:	push   DWORD PTR [esi]
3002c08b:	call   DWORD PTR ds:0x30045580
3002c091:	push   esi
3002c092:	call   DWORD PTR ds:0x300455b0
3002c098:	and    DWORD PTR [edi],0x0
3002c09b:	pop    edi
3002c09c:	pop    esi
3002c09d:	ret    
3002c09e:	push   0x0
3002c0a0:	mov    eax,0x3003e9b0
3002c0a5:	call   0x3000116a
3002c0aa:	mov    ebx,ecx
3002c0ac:	mov    edi,DWORD PTR [ebp+0x8]
3002c0af:	test   edi,edi
3002c0b1:	je     0x3002c1b7
3002c0b7:	mov    ecx,DWORD PTR [ebp+0xc]
3002c0ba:	test   ecx,ecx
3002c0bc:	je     0x3002c1b7
3002c0c2:	mov    eax,DWORD PTR [ebp+0x10]
3002c0c5:	test   eax,eax
3002c0c7:	je     0x3002c1b7
3002c0cd:	cmp    eax,0x2
3002c0d0:	jne    0x3002c12c
3002c0d2:	push   0x10
3002c0d4:	call   DWORD PTR ds:0x300455ac
3002c0da:	mov    esi,eax
3002c0dc:	test   esi,esi
3002c0de:	je     0x3002c107
3002c0e0:	and    DWORD PTR [ebp+0x8],0x0
3002c0e4:	lea    eax,[ebp+0x8]
3002c0e7:	push   eax
3002c0e8:	mov    eax,DWORD PTR [ebp+0xc]
3002c0eb:	movzx  ecx,ax
3002c0ee:	push   ecx
3002c0ef:	push   edi
3002c0f0:	mov    DWORD PTR [esi],0x3001d404
3002c0f6:	call   DWORD PTR ds:0x30045564
3002c0fc:	mov    DWORD PTR [esi+0x8],eax
3002c0ff:	mov    eax,DWORD PTR [ebp+0x8]
3002c102:	mov    DWORD PTR [esi+0x4],eax
3002c105:	jmp    0x3002c109
3002c107:	xor    esi,esi
3002c109:	test   esi,esi
3002c10b:	jne    0x3002c117
3002c10d:	mov    eax,0x80004005
3002c112:	jmp    0x3002c1bc
3002c117:	mov    ecx,DWORD PTR [ebx]
3002c119:	test   ecx,ecx
3002c11b:	je     0x3002c123
3002c11d:	mov    eax,DWORD PTR [ecx]
3002c11f:	push   0x1
3002c121:	call   DWORD PTR [eax]
3002c123:	mov    DWORD PTR [ebx],esi
3002c125:	xor    eax,eax
3002c127:	jmp    0x3002c1bc
3002c12c:	push   eax
3002c12d:	movzx  eax,cx
3002c130:	push   eax
3002c131:	push   edi
3002c132:	call   DWORD PTR ds:0x3004518c
3002c138:	test   eax,eax
3002c13a:	je     0x3002c1b7
3002c13c:	and    DWORD PTR [ebp+0xc],0x0
3002c140:	and    DWORD PTR [ebp-0x4],0x0
3002c144:	lea    ecx,[ebp+0xc]
3002c147:	push   ecx
3002c148:	mov    edx,eax
3002c14a:	mov    ecx,edi
3002c14c:	call   0x3002c1c4
3002c151:	mov    esi,DWORD PTR [ebp+0xc]
3002c154:	mov    edi,eax
3002c156:	test   edi,edi
3002c158:	js     0x3002c1a5
3002c15a:	push   0x10
3002c15c:	call   DWORD PTR ds:0x300455ac
3002c162:	mov    edi,eax
3002c164:	test   edi,edi
3002c166:	je     0x3002c188
3002c168:	and    DWORD PTR [ebp+0x8],0x0
3002c16c:	lea    eax,[ebp+0x8]
3002c16f:	push   eax
3002c170:	push   esi
3002c171:	mov    DWORD PTR [edi],0x3001d404
3002c177:	call   DWORD PTR ds:0x30045568
3002c17d:	mov    DWORD PTR [edi+0x8],eax
3002c180:	mov    eax,DWORD PTR [ebp+0x8]
3002c183:	mov    DWORD PTR [edi+0x4],eax
3002c186:	jmp    0x3002c18a
3002c188:	xor    edi,edi
3002c18a:	test   edi,edi
3002c18c:	jne    0x3002c195
3002c18e:	mov    edi,0x80004005
3002c193:	jmp    0x3002c1a5
3002c195:	mov    ecx,DWORD PTR [ebx]
3002c197:	test   ecx,ecx
3002c199:	je     0x3002c1a1
3002c19b:	mov    eax,DWORD PTR [ecx]
3002c19d:	push   0x1
3002c19f:	call   DWORD PTR [eax]
3002c1a1:	mov    DWORD PTR [ebx],edi
3002c1a3:	xor    edi,edi
3002c1a5:	or     DWORD PTR [ebp-0x4],0xffffffff
3002c1a9:	test   esi,esi
3002c1ab:	je     0x3002c1b3
3002c1ad:	mov    ecx,DWORD PTR [esi]
3002c1af:	push   esi
3002c1b0:	call   DWORD PTR [ecx+0x8]
3002c1b3:	mov    eax,edi
3002c1b5:	jmp    0x3002c1bc
3002c1b7:	mov    eax,0x80070057
3002c1bc:	call   0x3000119d
3002c1c1:	ret    0xc
3002c1c4:	push   0x14
3002c1c6:	mov    eax,0x3003e82c
3002c1cb:	call   0x3000116a
3002c1d0:	mov    eax,edx
3002c1d2:	mov    DWORD PTR [ebp-0x18],eax
3002c1d5:	mov    DWORD PTR [ebp-0x1c],ecx
3002c1d8:	cmp    DWORD PTR [ebp+0x8],0x0
3002c1dc:	jne    0x3002c1e8
3002c1de:	mov    eax,0x80004003
3002c1e3:	jmp    0x3002c283
3002c1e8:	test   eax,eax
3002c1ea:	jne    0x3002c1f6
3002c1ec:	mov    eax,0x80070057
3002c1f1:	jmp    0x3002c283
3002c1f6:	push   eax
3002c1f7:	push   ecx
3002c1f8:	call   DWORD PTR ds:0x30045188
3002c1fe:	mov    DWORD PTR [ebp-0x20],eax
3002c201:	test   eax,eax
3002c203:	je     0x3002c1ec
3002c205:	xor    ebx,ebx
3002c207:	mov    DWORD PTR [ebp-0x10],ebx
3002c20a:	lea    eax,[ebp-0x10]
3002c20d:	push   eax
3002c20e:	push   0x1
3002c210:	push   ebx
3002c211:	mov    DWORD PTR [ebp-0x4],ebx
3002c214:	call   DWORD PTR ds:0x300454d4
3002c21a:	test   eax,eax
3002c21c:	js     0x3002c26e
3002c21e:	mov    esi,DWORD PTR [ebp-0x10]
3002c221:	lea    eax,[ebp-0x14]
3002c224:	push   eax
3002c225:	push   DWORD PTR [ebp-0x18]
3002c228:	mov    DWORD PTR [ebp-0x14],ebx
3002c22b:	push   DWORD PTR [ebp-0x1c]
3002c22e:	mov    edi,DWORD PTR [esi]
3002c230:	call   DWORD PTR ds:0x30045184
3002c236:	push   eax
3002c237:	push   DWORD PTR [ebp-0x20]
3002c23a:	call   DWORD PTR ds:0x30045180
3002c240:	push   eax
3002c241:	push   esi
3002c242:	call   DWORD PTR [edi+0x10]
3002c245:	test   eax,eax
3002c247:	js     0x3002c26e
3002c249:	mov    eax,DWORD PTR [ebp-0x10]
3002c24c:	push   ebx
3002c24d:	mov    ecx,DWORD PTR [eax]
3002c24f:	push   ebx
3002c250:	push   ebx
3002c251:	push   ebx
3002c252:	push   eax
3002c253:	call   DWORD PTR [ecx+0x14]
3002c256:	test   eax,eax
3002c258:	js     0x3002c26e
3002c25a:	mov    eax,DWORD PTR [ebp-0x10]
3002c25d:	mov    ecx,DWORD PTR [ebp+0x8]
3002c260:	mov    DWORD PTR [ecx],eax
3002c262:	test   eax,eax
3002c264:	je     0x3002c273
3002c266:	mov    ecx,DWORD PTR [eax]
3002c268:	push   eax
3002c269:	call   DWORD PTR [ecx+0x4]
3002c26c:	jmp    0x3002c270
3002c26e:	mov    ebx,eax
3002c270:	mov    eax,DWORD PTR [ebp-0x10]
3002c273:	or     DWORD PTR [ebp-0x4],0xffffffff
3002c277:	test   eax,eax
3002c279:	je     0x3002c281
3002c27b:	mov    ecx,DWORD PTR [eax]
3002c27d:	push   eax
3002c27e:	call   DWORD PTR [ecx+0x8]
3002c281:	mov    eax,ebx
3002c283:	call   0x3000119d
3002c288:	ret    0x4
3002c28b:	push   ebp
3002c28c:	mov    ebp,esp
3002c28e:	push   esi
3002c28f:	mov    esi,ecx
3002c291:	call   0x300178e6
3002c296:	test   BYTE PTR [ebp+0x8],0x1
3002c29a:	je     0x3002c2a4
3002c29c:	push   esi
3002c29d:	call   DWORD PTR ds:0x300452ac
3002c2a3:	pop    ecx
3002c2a4:	mov    eax,esi
3002c2a6:	pop    esi
3002c2a7:	pop    ebp
3002c2a8:	ret    0x4
3002c2ab:	push   esi
3002c2ac:	mov    esi,ecx
3002c2ae:	cmp    DWORD PTR [esi],0x0
3002c2b1:	je     0x3002c2be
3002c2b3:	push   DWORD PTR [esi]
3002c2b5:	call   DWORD PTR ds:0x300451d0
3002c2bb:	and    DWORD PTR [esi],0x0
3002c2be:	pop    esi
3002c2bf:	ret    
3002c2c0:	push   ebp
3002c2c1:	mov    ebp,esp
3002c2c3:	sub    esp,0x24
3002c2c6:	push   esi
3002c2c7:	push   edi
3002c2c8:	push   DWORD PTR [ebp+0x8]
3002c2cb:	call   0x3001d30c
3002c2d0:	test   al,al
3002c2d2:	jne    0x3002c2d8
3002c2d4:	xor    al,al
3002c2d6:	jmp    0x3002c312
3002c2d8:	mov    ecx,DWORD PTR [ebp+0x8]
3002c2db:	lea    eax,[ebp-0x24]
3002c2de:	push   eax
3002c2df:	call   0x3001d1f3
3002c2e4:	cmp    DWORD PTR ds:0x300435c8,0x0
3002c2eb:	mov    esi,eax
3002c2ed:	lea    edi,[ebp-0x14]
3002c2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002c2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002c2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002c2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002c2f4:	je     0x3002c303
3002c2f6:	push   0x0
3002c2f8:	lea    eax,[ebp-0x14]
3002c2fb:	push   eax
3002c2fc:	call   0x3001d6f4
3002c301:	jmp    0x3002c305
3002c303:	xor    al,al
3002c305:	test   al,al
3002c307:	jne    0x3002c310
3002c309:	call   0x30005270
3002c30e:	jmp    0x3002c2d4
3002c310:	mov    al,0x1
3002c312:	pop    edi
3002c313:	pop    esi
3002c314:	leave  
3002c315:	ret    0x4
3002c318:	push   0x8
3002c31a:	mov    eax,0x3003fcd4
3002c31f:	call   0x3000116a
3002c324:	mov    esi,ecx
3002c326:	lea    ecx,[ebp-0x10]
3002c329:	call   0x3001c6fb
3002c32e:	lea    eax,[ebp-0x10]
3002c331:	push   eax
3002c332:	push   DWORD PTR [ebp+0x8]
3002c335:	xor    ebx,ebx
3002c337:	mov    ecx,esi
3002c339:	mov    DWORD PTR [ebp-0x4],ebx
3002c33c:	call   0x3001d452
3002c341:	test   al,al
3002c343:	je     0x3002c35d
3002c345:	lea    ecx,[ebp-0x10]
3002c348:	call   0x3001d390
3002c34d:	cmp    DWORD PTR ds:0x300435c8,ebx
3002c353:	je     0x3002c35d
3002c355:	push   eax
3002c356:	call   0x30031ebe
3002c35b:	mov    bl,al
3002c35d:	lea    ecx,[ebp-0x10]
3002c360:	call   0x3001d2cb
3002c365:	mov    al,bl
3002c367:	call   0x3000119d
3002c36c:	ret    0x4
3002c36f:	push   esi
3002c370:	mov    esi,ecx
3002c372:	mov    ecx,DWORD PTR [esi+0x8]
3002c375:	sub    ecx,0x10
3002c378:	call   0x30004017
3002c37d:	mov    ecx,DWORD PTR [esi+0x4]
3002c380:	sub    ecx,0x10
3002c383:	pop    esi
3002c384:	jmp    0x30004017
3002c389:	push   ebp
3002c38a:	mov    ebp,esp
3002c38c:	push   esi
3002c38d:	push   0x104
3002c392:	mov    esi,ecx
3002c394:	call   0x30004286
3002c399:	push   DWORD PTR [ebp+0xc]
3002c39c:	push   DWORD PTR [ebp+0x8]
3002c39f:	push   eax
3002c3a0:	call   DWORD PTR ds:0x30045644
3002c3a6:	push   0xffffffff
3002c3a8:	mov    ecx,esi
3002c3aa:	call   0x30006c8c
3002c3af:	pop    esi
3002c3b0:	pop    ebp
3002c3b1:	ret    0x8
3002c3b4:	call   DWORD PTR ds:0x30045160
3002c3ba:	test   eax,eax
3002c3bc:	jle    0x3002c3c6
3002c3be:	movzx  eax,ax
3002c3c1:	or     eax,0x80070000
3002c3c6:	push   eax
3002c3c7:	call   0x3002ae0b
3002c3cc:	int3   
3002c3cd:	mov    DWORD PTR [ecx],0x3002a344
3002c3d3:	jmp    DWORD PTR ds:0x30045418
3002c3d9:	push   ebp
3002c3da:	mov    ebp,esp
3002c3dc:	push   esi
3002c3dd:	mov    esi,ecx
3002c3df:	mov    DWORD PTR [esi],0x3002a344
3002c3e5:	call   DWORD PTR ds:0x30045418
3002c3eb:	test   BYTE PTR [ebp+0x8],0x1
3002c3ef:	je     0x3002c3f9
3002c3f1:	push   esi
3002c3f2:	call   DWORD PTR ds:0x300452ac
3002c3f8:	pop    ecx
3002c3f9:	mov    eax,esi
3002c3fb:	pop    esi
3002c3fc:	pop    ebp
3002c3fd:	ret    0x4
3002c400:	push   0x1c
3002c402:	mov    eax,0x3003ebc8
3002c407:	call   0x30006c56
3002c40c:	mov    ebx,ecx
3002c40e:	xor    edi,edi
3002c410:	mov    DWORD PTR [ebp-0x28],edi
3002c413:	mov    DWORD PTR [ebp-0x24],edi
3002c416:	mov    DWORD PTR [ebp-0x20],edi
3002c419:	push   0x20006
3002c41e:	push   DWORD PTR [ebp+0xc]
3002c421:	lea    ecx,[ebp-0x28]
3002c424:	push   DWORD PTR [ebp+0x8]
3002c427:	mov    DWORD PTR [ebp-0x4],edi
3002c42a:	call   0x300051d9
3002c42f:	mov    esi,eax
3002c431:	test   esi,esi
3002c433:	je     0x3002c442
3002c435:	jle    0x3002c4a9
3002c437:	movzx  esi,si
3002c43a:	or     esi,0x80070000
3002c440:	jmp    0x3002c4a9
3002c442:	mov    DWORD PTR [ebp-0x1c],edi
3002c445:	mov    DWORD PTR [ebp-0x18],edi
3002c448:	mov    BYTE PTR [ebp-0x4],0x2
3002c44c:	mov    eax,DWORD PTR [ebx+0x8]
3002c44f:	lea    ecx,[ebp-0x1c]
3002c452:	mov    esi,DWORD PTR [eax]
3002c454:	lea    eax,[esi+0x4]
3002c457:	push   eax
3002c458:	call   0x3000c583
3002c45d:	mov    eax,DWORD PTR [ebx+0x8]
3002c460:	mov    edi,DWORD PTR [ebp-0x18]
3002c463:	push   esi
3002c464:	push   DWORD PTR [eax+0x4]
3002c467:	push   edi
3002c468:	call   0x3000151c
3002c46d:	mov    eax,DWORD PTR [ebx+0xc]
3002c470:	add    esp,0xc
3002c473:	mov    DWORD PTR [edi+esi*1],eax
3002c476:	push   DWORD PTR [ebp-0x1c]
3002c479:	push   edi
3002c47a:	push   0x3
3002c47c:	push   0x0
3002c47e:	push   0x3000c978
3002c483:	push   DWORD PTR [ebp-0x28]
3002c486:	call   DWORD PTR ds:0x30045010
3002c48c:	mov    esi,eax
3002c48e:	test   esi,esi
3002c490:	je     0x3002c4b5
3002c492:	jle    0x3002c49d
3002c494:	movzx  esi,si
3002c497:	or     esi,0x80070000
3002c49d:	push   edi
3002c49e:	mov    BYTE PTR [ebp-0x4],0x1
3002c4a2:	call   DWORD PTR ds:0x300453d4
3002c4a8:	pop    ecx
3002c4a9:	lea    ecx,[ebp-0x28]
3002c4ac:	call   0x300051ae
3002c4b1:	mov    eax,esi
3002c4b3:	jmp    0x3002c4e0
3002c4b5:	push   edi
3002c4b6:	mov    BYTE PTR [ebp-0x4],0x1
3002c4ba:	call   DWORD PTR ds:0x300453d4
3002c4c0:	pop    ecx
3002c4c1:	lea    ecx,[ebp-0x28]
3002c4c4:	call   0x300051ae
3002c4c9:	xor    eax,eax
3002c4cb:	jmp    0x3002c4e0
3002c4cd:	mov    eax,0x3002c4d3
3002c4d2:	ret    
3002c4d3:	lea    ecx,[ebp-0x28]
3002c4d6:	call   0x300051ae
3002c4db:	mov    eax,0x8007000e
3002c4e0:	call   0x3000119d
3002c4e5:	ret    0x8
3002c4e8:	push   ebp
3002c4e9:	mov    ebp,esp
3002c4eb:	push   esi
3002c4ec:	push   DWORD PTR [ebp+0x8]
3002c4ef:	mov    esi,ecx
3002c4f1:	call   DWORD PTR ds:0x30045308
3002c4f7:	mov    DWORD PTR [esi],0x3002a344
3002c4fd:	mov    eax,esi
3002c4ff:	pop    esi
3002c500:	pop    ebp
3002c501:	ret    0x4
3002c504:	push   ebp
3002c505:	mov    ebp,esp
3002c507:	push   ecx
3002c508:	and    DWORD PTR [ebp-0x4],0x0
3002c50c:	push   esi
3002c50d:	push   edi
3002c50e:	lea    eax,[ebp-0x4]
3002c511:	mov    edi,ecx
3002c513:	push   eax
3002c514:	push   DWORD PTR [edi+0x4]
3002c517:	call   DWORD PTR ds:0x30045554
3002c51d:	test   eax,eax
3002c51f:	je     0x3002c524
3002c521:	mov    DWORD PTR [edi+0x8],eax
3002c524:	push   0xc
3002c526:	call   DWORD PTR ds:0x300455ac
3002c52c:	mov    esi,eax
3002c52e:	test   esi,esi
3002c530:	je     0x3002c546
3002c532:	mov    eax,DWORD PTR [edi+0x8]
3002c535:	mov    ecx,DWORD PTR [ebp-0x4]
3002c538:	mov    DWORD PTR [esi],0x3002a34c
3002c53e:	mov    DWORD PTR [esi+0x8],eax
3002c541:	mov    DWORD PTR [esi+0x4],ecx
3002c544:	jmp    0x3002c548
3002c546:	xor    esi,esi
3002c548:	test   esi,esi
3002c54a:	jne    0x3002c555
3002c54c:	push   DWORD PTR [ebp-0x4]
3002c54f:	call   DWORD PTR ds:0x300455a4
3002c555:	pop    edi
3002c556:	mov    eax,esi
3002c558:	pop    esi
3002c559:	leave  
3002c55a:	ret    
3002c55b:	push   ebp
3002c55c:	mov    ebp,esp
3002c55e:	push   esi
3002c55f:	mov    esi,ecx
3002c561:	push   DWORD PTR [esi+0x4]
3002c564:	mov    DWORD PTR [esi],0x3002a34c
3002c56a:	call   DWORD PTR ds:0x300455a4
3002c570:	test   BYTE PTR [ebp+0x8],0x1
3002c574:	je     0x3002c57d
3002c576:	push   esi
3002c577:	call   DWORD PTR ds:0x300455b0
3002c57d:	mov    eax,esi
3002c57f:	pop    esi
3002c580:	pop    ebp
3002c581:	ret    0x4
3002c584:	push   ebp
3002c585:	mov    ebp,esp
3002c587:	push   ecx
3002c588:	mov    eax,DWORD PTR [ebp+0x8]
3002c58b:	and    DWORD PTR [ebp-0x4],0x0
3002c58f:	push   esi
3002c590:	mov    esi,ecx
3002c592:	lea    ecx,[ebp-0x4]
3002c595:	push   ecx
3002c596:	mov    DWORD PTR [esi+0x8],0x6
3002c59d:	mov    DWORD PTR [esi],0x3002a34c
3002c5a3:	push   DWORD PTR [eax]
3002c5a5:	call   DWORD PTR ds:0x30045550
3002c5ab:	mov    DWORD PTR [esi+0x8],eax
3002c5ae:	mov    eax,DWORD PTR [ebp-0x4]
3002c5b1:	mov    DWORD PTR [esi+0x4],eax
3002c5b4:	mov    eax,esi
3002c5b6:	pop    esi
3002c5b7:	leave  
3002c5b8:	ret    0x4
3002c5bb:	push   DWORD PTR [ecx+0x4]
3002c5be:	mov    DWORD PTR [ecx],0x3002a34c
3002c5c4:	call   DWORD PTR ds:0x300455a4
3002c5ca:	ret    
3002c5cb:	push   ebp
3002c5cc:	mov    ebp,esp
3002c5ce:	mov    eax,DWORD PTR [ebp+0x1c]
3002c5d1:	push   esi
3002c5d2:	mov    esi,ecx
3002c5d4:	test   eax,eax
3002c5d6:	je     0x3002c5dd
3002c5d8:	mov    edx,DWORD PTR [eax+0x4]
3002c5db:	jmp    0x3002c5df
3002c5dd:	xor    edx,edx
3002c5df:	mov    eax,DWORD PTR [ebp+0x18]
3002c5e2:	test   eax,eax
3002c5e4:	je     0x3002c5ea
3002c5e6:	mov    ecx,DWORD PTR [eax]
3002c5e8:	jmp    0x3002c5ec
3002c5ea:	xor    ecx,ecx
3002c5ec:	mov    eax,DWORD PTR [ebp+0x10]
3002c5ef:	test   eax,eax
3002c5f1:	je     0x3002c5f7
3002c5f3:	mov    eax,DWORD PTR [eax]
3002c5f5:	jmp    0x3002c5f9
3002c5f7:	xor    eax,eax
3002c5f9:	push   edx
3002c5fa:	push   ecx
3002c5fb:	push   DWORD PTR [ebp+0x14]
3002c5fe:	push   eax
3002c5ff:	push   DWORD PTR [ebp+0xc]
3002c602:	push   DWORD PTR [ebp+0x8]
3002c605:	push   DWORD PTR [esi]
3002c607:	call   DWORD PTR ds:0x30045538
3002c60d:	test   eax,eax
3002c60f:	je     0x3002c616
3002c611:	mov    DWORD PTR [esi+0x4],eax
3002c614:	jmp    0x3002c618
3002c616:	xor    eax,eax
3002c618:	pop    esi
3002c619:	pop    ebp
3002c61a:	ret    0x18
3002c61d:	push   DWORD PTR [ecx]
3002c61f:	call   DWORD PTR ds:0x30045530
3002c625:	ret    
3002c626:	push   ebp
3002c627:	mov    ebp,esp
3002c629:	push   ecx
3002c62a:	mov    edx,DWORD PTR [ebp+0x8]
3002c62d:	xor    eax,eax
3002c62f:	push   esi
3002c630:	mov    esi,ecx
3002c632:	mov    DWORD PTR [ebp-0x4],eax
3002c635:	test   edx,edx
3002c637:	je     0x3002c63b
3002c639:	mov    eax,DWORD PTR [edx]
3002c63b:	fld    DWORD PTR [ebp+0xc]
3002c63e:	lea    ecx,[ebp-0x4]
3002c641:	push   ecx
3002c642:	push   0x2
3002c644:	push   DWORD PTR [ebp+0x10]
3002c647:	push   ecx
3002c648:	fstp   DWORD PTR [esp]
3002c64b:	push   eax
3002c64c:	call   DWORD PTR ds:0x30045558
3002c652:	mov    DWORD PTR [esi+0x4],eax
3002c655:	mov    eax,DWORD PTR [ebp-0x4]
3002c658:	mov    DWORD PTR [esi],eax
3002c65a:	mov    eax,esi
3002c65c:	pop    esi
3002c65d:	leave  
3002c65e:	ret    0x10
3002c661:	push   DWORD PTR [ecx]
3002c663:	call   DWORD PTR ds:0x300455a8
3002c669:	ret    
3002c66a:	push   ebp
3002c66b:	mov    ebp,esp
3002c66d:	sub    esp,0x5c
3002c670:	mov    eax,ds:0x30043050
3002c675:	xor    eax,ebp
3002c677:	mov    DWORD PTR [ebp-0x4],eax
3002c67a:	push   ebx
3002c67b:	mov    ebx,DWORD PTR [ebp+0x8]
3002c67e:	push   esi
3002c67f:	push   edi
3002c680:	push   0x54
3002c682:	lea    eax,[ebp-0x58]
3002c685:	push   0x0
3002c687:	push   eax
3002c688:	mov    edi,ecx
3002c68a:	call   0x300011b1
3002c68f:	add    esp,0xc
3002c692:	lea    eax,[ebp-0x58]
3002c695:	push   eax
3002c696:	push   0x54
3002c698:	push   ebx
3002c699:	call   DWORD PTR ds:0x300455dc
3002c69f:	test   eax,eax
3002c6a1:	je     0x3002c6b6
3002c6a3:	cmp    WORD PTR [ebp-0x46],0x20
3002c6a8:	jne    0x3002c6b6
3002c6aa:	lea    ecx,[ebp-0x58]
3002c6ad:	call   0x3002c838
3002c6b2:	mov    esi,eax
3002c6b4:	jmp    0x3002c6e8
3002c6b6:	push   0x10
3002c6b8:	call   DWORD PTR ds:0x300455ac
3002c6be:	mov    esi,eax
3002c6c0:	test   esi,esi
3002c6c2:	je     0x3002c6e6
3002c6c4:	and    DWORD PTR [ebp-0x5c],0x0
3002c6c8:	lea    eax,[ebp-0x5c]
3002c6cb:	push   eax
3002c6cc:	push   0x0
3002c6ce:	push   ebx
3002c6cf:	mov    DWORD PTR [esi],0x3001d404
3002c6d5:	call   DWORD PTR ds:0x30045594
3002c6db:	mov    DWORD PTR [esi+0x8],eax
3002c6de:	mov    eax,DWORD PTR [ebp-0x5c]
3002c6e1:	mov    DWORD PTR [esi+0x4],eax
3002c6e4:	jmp    0x3002c6e8
3002c6e6:	xor    esi,esi
3002c6e8:	test   esi,esi
3002c6ea:	je     0x3002c6fa
3002c6ec:	mov    ecx,DWORD PTR [edi]
3002c6ee:	test   ecx,ecx
3002c6f0:	je     0x3002c6f8
3002c6f2:	mov    eax,DWORD PTR [ecx]
3002c6f4:	push   0x1
3002c6f6:	call   DWORD PTR [eax]
3002c6f8:	mov    DWORD PTR [edi],esi
3002c6fa:	mov    ecx,DWORD PTR [ebp-0x4]
3002c6fd:	pop    edi
3002c6fe:	pop    esi
3002c6ff:	xor    ecx,ebp
3002c701:	pop    ebx
3002c702:	call   0x3000115c
3002c707:	leave  
3002c708:	ret    0x4
3002c70b:	push   0x18
3002c70d:	mov    eax,0x3003ef48
3002c712:	call   0x300045c8
3002c717:	mov    eax,ecx
3002c719:	mov    DWORD PTR [ebp-0x24],eax
3002c71c:	cmp    DWORD PTR [ebp+0x8],0x0
3002c720:	jne    0x3002c72c
3002c722:	mov    eax,0x80070057
3002c727:	jmp    0x3002c81d
3002c72c:	xor    edi,edi
3002c72e:	cmp    DWORD PTR [eax],edi
3002c730:	jne    0x3002c73c
3002c732:	mov    eax,0x80004005
3002c737:	jmp    0x3002c81d
3002c73c:	lea    eax,[ebp-0x18]
3002c73f:	push   eax
3002c740:	lea    eax,[ebp-0x20]
3002c743:	push   eax
3002c744:	call   DWORD PTR ds:0x30045590
3002c74a:	test   eax,eax
3002c74c:	jne    0x3002c732
3002c74e:	mov    esi,edi
3002c750:	mov    DWORD PTR [ebp-0x14],esi
3002c753:	mov    DWORD PTR [ebp-0x4],edi
3002c756:	mov    eax,DWORD PTR [ebp-0x18]
3002c759:	cmp    eax,0x400
3002c75e:	ja     0x3002c77c
3002c760:	mov    ecx,eax
3002c762:	call   0x3002d9d3
3002c767:	test   al,al
3002c769:	je     0x3002c779
3002c76b:	mov    ebx,DWORD PTR [ebp-0x18]
3002c76e:	mov    eax,ebx
3002c770:	call   0x3000618e
3002c775:	mov    eax,esp
3002c777:	jmp    0x3002c78b
3002c779:	mov    eax,DWORD PTR [ebp-0x18]
3002c77c:	push   eax
3002c77d:	lea    ecx,[ebp-0x14]
3002c780:	call   0x3002d994
3002c785:	mov    ebx,DWORD PTR [ebp-0x18]
3002c788:	mov    esi,DWORD PTR [ebp-0x14]
3002c78b:	mov    DWORD PTR [ebp-0x1c],eax
3002c78e:	test   eax,eax
3002c790:	jne    0x3002c799
3002c792:	mov    edi,0x8007000e
3002c797:	jmp    0x3002c817
3002c799:	push   eax
3002c79a:	push   ebx
3002c79b:	push   DWORD PTR [ebp-0x20]
3002c79e:	call   DWORD PTR ds:0x3004558c
3002c7a4:	test   eax,eax
3002c7a6:	jne    0x3002c806
3002c7a8:	mov    ebx,edi
3002c7aa:	cmp    DWORD PTR [ebp-0x20],ebx
3002c7ad:	je     0x3002c806
3002c7af:	mov    eax,DWORD PTR [ebp-0x1c]
3002c7b2:	add    eax,0x10
3002c7b5:	mov    DWORD PTR [ebp-0x14],eax
3002c7b8:	push   0x3002c828
3002c7bd:	push   eax
3002c7be:	call   0x30004c93
3002c7c3:	test   al,al
3002c7c5:	jne    0x3002c7d8
3002c7c7:	mov    eax,DWORD PTR [ebp-0x14]
3002c7ca:	inc    ebx
3002c7cb:	add    eax,0x4c
3002c7ce:	mov    DWORD PTR [ebp-0x14],eax
3002c7d1:	cmp    ebx,DWORD PTR [ebp-0x20]
3002c7d4:	je     0x3002c806
3002c7d6:	jmp    0x3002c7b8
3002c7d8:	mov    eax,DWORD PTR [ebp-0x24]
3002c7db:	imul   ebx,ebx,0x4c
3002c7de:	add    ebx,DWORD PTR [ebp-0x1c]
3002c7e1:	mov    eax,DWORD PTR [eax]
3002c7e3:	push   edi
3002c7e4:	push   ebx
3002c7e5:	push   DWORD PTR [ebp+0x8]
3002c7e8:	mov    DWORD PTR [ebp-0x24],eax
3002c7eb:	push   DWORD PTR [eax+0x4]
3002c7ee:	call   DWORD PTR ds:0x3004559c
3002c7f4:	test   eax,eax
3002c7f6:	je     0x3002c800
3002c7f8:	mov    ecx,DWORD PTR [ebp-0x24]
3002c7fb:	mov    DWORD PTR [ecx+0x8],eax
3002c7fe:	jmp    0x3002c802
3002c800:	mov    eax,edi
3002c802:	test   eax,eax
3002c804:	je     0x3002c817
3002c806:	mov    edi,0x80004005
3002c80b:	jmp    0x3002c817
3002c80d:	push   esi
3002c80e:	mov    esi,DWORD PTR [esi]
3002c810:	call   DWORD PTR ds:0x300452b4
3002c816:	pop    ecx
3002c817:	test   esi,esi
3002c819:	jne    0x3002c80d
3002c81b:	mov    eax,edi
3002c81d:	lea    esp,[ebp-0x34]
3002c820:	call   0x300045fe
3002c825:	ret    0x8
3002c828:	scas   eax,DWORD PTR es:[edi]
3002c829:	cmp    al,0x6b
3002c82b:	mov    ecx,0x11d30728
3002c830:	popf   
3002c831:	jnp    0x3002c833
3002c833:	add    al,bh
3002c835:	push   ds
3002c836:	repz cs push ebp
3002c839:	mov    ebp,esp
3002c83b:	push   ecx
3002c83c:	push   ecx
3002c83d:	push   ebx
3002c83e:	mov    eax,ecx
3002c840:	push   esi
3002c841:	mov    ecx,DWORD PTR [eax+0x14]
3002c844:	mov    ebx,DWORD PTR [eax+0xc]
3002c847:	push   edi
3002c848:	mov    edi,DWORD PTR [eax+0x20]
3002c84b:	mov    DWORD PTR [ebp-0x8],eax
3002c84e:	mov    DWORD PTR [ebp-0x4],ecx
3002c851:	test   edi,edi
3002c853:	jns    0x3002c859
3002c855:	neg    edi
3002c857:	jmp    0x3002c866
3002c859:	lea    eax,[edi-0x1]
3002c85c:	imul   eax,ebx
3002c85f:	add    ecx,eax
3002c861:	mov    DWORD PTR [ebp-0x4],ecx
3002c864:	neg    ebx
3002c866:	push   0x10
3002c868:	call   DWORD PTR ds:0x300455ac
3002c86e:	mov    esi,eax
3002c870:	test   esi,esi
3002c872:	je     0x3002c8a4
3002c874:	mov    eax,DWORD PTR [ebp-0x8]
3002c877:	and    DWORD PTR [ebp-0x8],0x0
3002c87b:	mov    eax,DWORD PTR [eax+0x1c]
3002c87e:	lea    ecx,[ebp-0x8]
3002c881:	push   ecx
3002c882:	push   DWORD PTR [ebp-0x4]
3002c885:	mov    DWORD PTR [esi],0x3001d404
3002c88b:	push   0x26200a
3002c890:	push   ebx
3002c891:	push   edi
3002c892:	push   eax
3002c893:	call   DWORD PTR ds:0x30045598
3002c899:	mov    DWORD PTR [esi+0x8],eax
3002c89c:	mov    eax,DWORD PTR [ebp-0x8]
3002c89f:	mov    DWORD PTR [esi+0x4],eax
3002c8a2:	jmp    0x3002c8a6
3002c8a4:	xor    esi,esi
3002c8a6:	pop    edi
3002c8a7:	mov    eax,esi
3002c8a9:	pop    esi
3002c8aa:	pop    ebx
3002c8ab:	leave  
3002c8ac:	ret    
3002c8ad:	push   0x844
3002c8b2:	mov    eax,0x3003eee9
3002c8b7:	call   0x300045c8
3002c8bc:	mov    ebx,edx
3002c8be:	mov    DWORD PTR [ebp-0x844],ecx
3002c8c4:	mov    eax,DWORD PTR [ebp+0x8]
3002c8c7:	mov    edi,DWORD PTR [ebp+0xc]
3002c8ca:	mov    DWORD PTR [ebp-0x850],eax
3002c8d0:	test   eax,eax
3002c8d2:	jne    0x3002c8de
3002c8d4:	mov    eax,0x80004003
3002c8d9:	jmp    0x3002cac3
3002c8de:	test   ebx,ebx
3002c8e0:	je     0x3002c8d4
3002c8e2:	test   edi,edi
3002c8e4:	je     0x3002c8d4
3002c8e6:	xor    eax,eax
3002c8e8:	xor    esi,esi
3002c8ea:	mov    WORD PTR [ebx],ax
3002c8ed:	mov    DWORD PTR [ebp-0x848],esi
3002c8f3:	mov    edx,0x105
3002c8f8:	push   edx
3002c8f9:	lea    eax,[ebp-0x83c]
3002c8ff:	push   eax
3002c900:	push   edx
3002c901:	lea    eax,[ebp-0x630]
3002c907:	push   eax
3002c908:	push   esi
3002c909:	push   esi
3002c90a:	push   esi
3002c90b:	mov    DWORD PTR [ebp-0x4],esi
3002c90e:	push   esi
3002c90f:	push   DWORD PTR [ecx]
3002c911:	call   DWORD PTR ds:0x30045314
3002c917:	lea    eax,[ebp-0x83c]
3002c91d:	push   eax
3002c91e:	lea    eax,[ebp-0x630]
3002c924:	push   eax
3002c925:	push   esi
3002c926:	push   esi
3002c927:	lea    eax,[ebp-0x424]
3002c92d:	push   0x105
3002c932:	push   eax
3002c933:	call   DWORD PTR ds:0x30045318
3002c939:	mov    edx,DWORD PTR [ebp-0x844]
3002c93f:	add    esp,0x3c
3002c942:	mov    edx,DWORD PTR [edx+0x4]
3002c945:	lea    ecx,[ebp-0x84c]
3002c94b:	call   0x3000c52a
3002c950:	push   0x3004306c
3002c955:	lea    ecx,[ebp-0x840]
3002c95b:	mov    BYTE PTR [ebp-0x4],0x1
3002c95f:	call   0x30004256
3002c964:	mov    eax,DWORD PTR [ebp-0x844]
3002c96a:	mov    BYTE PTR [ebp-0x4],0x2
3002c96e:	cmp    DWORD PTR [eax+0x18],esi
3002c971:	mov    eax,DWORD PTR [ebp-0x84c]
3002c977:	mov    DWORD PTR [ebp-0x844],eax
3002c97d:	lea    eax,[ebp-0x218]
3002c983:	je     0x3002c9f1
3002c985:	push   0x23
3002c987:	push   eax
3002c988:	call   0x3000c561
3002c98d:	test   eax,eax
3002c98f:	js     0x3002ca6f
3002c995:	push   0x104
3002c99a:	lea    ecx,[ebp-0x840]
3002c9a0:	call   0x30004286
3002c9a5:	push   DWORD PTR [ebp-0x844]
3002c9ab:	lea    ecx,[ebp-0x218]
3002c9b1:	push   ecx
3002c9b2:	push   eax
3002c9b3:	call   DWORD PTR ds:0x30045644
3002c9b9:	push   0xffffffff
3002c9bb:	lea    ecx,[ebp-0x840]
3002c9c1:	call   0x30006c8c
3002c9c6:	lea    eax,[ebp-0x424]
3002c9cc:	push   eax
3002c9cd:	lea    ecx,[ebp-0x840]
3002c9d3:	call   0x3000b940
3002c9d8:	push   DWORD PTR [ebp-0x840]
3002c9de:	push   0x104
3002c9e3:	push   ebx
3002c9e4:	call   0x30004c1e
3002c9e9:	mov    DWORD PTR [edi],0x2
3002c9ef:	jmp    0x3002ca57
3002c9f1:	push   0x1a
3002c9f3:	push   eax
3002c9f4:	call   0x3000c561
3002c9f9:	test   eax,eax
3002c9fb:	js     0x3002ca6f
3002c9fd:	push   0x104
3002ca02:	lea    ecx,[ebp-0x840]
3002ca08:	call   0x30004286
3002ca0d:	push   DWORD PTR [ebp-0x844]
3002ca13:	lea    ecx,[ebp-0x218]
3002ca19:	push   ecx
3002ca1a:	push   eax
3002ca1b:	call   DWORD PTR ds:0x30045644
3002ca21:	push   0xffffffff
3002ca23:	lea    ecx,[ebp-0x840]
3002ca29:	call   0x30006c8c
3002ca2e:	lea    eax,[ebp-0x424]
3002ca34:	push   eax
3002ca35:	lea    ecx,[ebp-0x840]
3002ca3b:	call   0x3000b940
3002ca40:	push   DWORD PTR [ebp-0x840]
3002ca46:	push   0x104
3002ca4b:	push   ebx
3002ca4c:	call   0x30004c1e
3002ca51:	mov    DWORD PTR [edi],0x1
3002ca57:	lea    eax,[ebp-0x848]
3002ca5d:	push   eax
3002ca5e:	push   esi
3002ca5f:	push   0x1
3002ca61:	push   0x2
3002ca63:	push   0x1001
3002ca68:	push   ebx
3002ca69:	call   DWORD PTR ds:0x3004564c
3002ca6f:	mov    eax,DWORD PTR [ebp-0x848]
3002ca75:	test   eax,eax
3002ca77:	jne    0x3002ca83
3002ca79:	or     DWORD PTR [edi],0xffffffff
3002ca7c:	mov    esi,0x80004005
3002ca81:	jmp    0x3002ca91
3002ca83:	mov    ecx,DWORD PTR [ebp-0x850]
3002ca89:	mov    DWORD PTR [ebp-0x848],esi
3002ca8f:	mov    DWORD PTR [ecx],eax
3002ca91:	mov    ecx,DWORD PTR [ebp-0x840]
3002ca97:	lea    ecx,[ecx-0x10]
3002ca9a:	call   0x30004017
3002ca9f:	mov    ecx,DWORD PTR [ebp-0x84c]
3002caa5:	lea    ecx,[ecx-0x10]
3002caa8:	call   0x30004017
3002caad:	or     DWORD PTR [ebp-0x4],0xffffffff
3002cab1:	mov    ecx,DWORD PTR [ebp-0x848]
3002cab7:	test   ecx,ecx
3002cab9:	je     0x3002cac1
3002cabb:	mov    edx,DWORD PTR [ecx]
3002cabd:	push   ecx
3002cabe:	call   DWORD PTR [edx+0x8]
3002cac1:	mov    eax,esi
3002cac3:	call   0x300045fe
3002cac8:	ret    0x8
3002cacb:	push   ebp
3002cacc:	mov    ebp,esp
3002cace:	sub    esp,0x14
3002cad1:	fild   DWORD PTR [ebp+0x8]
3002cad4:	push   esi
3002cad5:	push   edi
3002cad6:	mov    edi,edx
3002cad8:	fstp   DWORD PTR [ebp+0x8]
3002cadb:	push   edi
3002cadc:	fld    DWORD PTR [ebp+0x8]
3002cadf:	mov    esi,ecx
3002cae1:	fstp   DWORD PTR [ebp-0x4]
3002cae4:	fild   DWORD PTR [ebp+0xc]
3002cae7:	fstp   DWORD PTR [ebp+0x8]
3002caea:	fld    DWORD PTR [ebp+0x8]
3002caed:	fstp   DWORD PTR [ebp+0x8]
3002caf0:	call   DWORD PTR ds:0x30045204
3002caf6:	fld    DWORD PTR [ebp-0x4]
3002caf9:	mov    ecx,DWORD PTR [ebp+0x14]
3002cafc:	fstp   DWORD PTR [ebp-0x14]
3002caff:	mov    edx,eax
3002cb01:	fld    DWORD PTR [ebp+0x8]
3002cb04:	fstp   DWORD PTR [ebp-0x10]
3002cb07:	fldz   
3002cb09:	fst    DWORD PTR [ebp-0xc]
3002cb0c:	fstp   DWORD PTR [ebp-0x8]
3002cb0f:	test   ecx,ecx
3002cb11:	je     0x3002cb18
3002cb13:	mov    ecx,DWORD PTR [ecx+0x4]
3002cb16:	jmp    0x3002cb1a
3002cb18:	xor    ecx,ecx
3002cb1a:	mov    eax,DWORD PTR [ebp+0x10]
3002cb1d:	test   eax,eax
3002cb1f:	je     0x3002cb25
3002cb21:	mov    eax,DWORD PTR [eax]
3002cb23:	jmp    0x3002cb27
3002cb25:	xor    eax,eax
3002cb27:	push   ecx
3002cb28:	push   0x0
3002cb2a:	lea    ecx,[ebp-0x14]
3002cb2d:	push   ecx
3002cb2e:	push   eax
3002cb2f:	push   edx
3002cb30:	push   edi
3002cb31:	push   DWORD PTR [esi]
3002cb33:	call   DWORD PTR ds:0x30045538
3002cb39:	test   eax,eax
3002cb3b:	je     0x3002cb42
3002cb3d:	mov    DWORD PTR [esi+0x4],eax
3002cb40:	jmp    0x3002cb44
3002cb42:	xor    eax,eax
3002cb44:	pop    edi
3002cb45:	pop    esi
3002cb46:	leave  
3002cb47:	ret    0x10
3002cb4a:	push   ebp
3002cb4b:	mov    ebp,esp
3002cb4d:	sub    esp,0x20
3002cb50:	and    DWORD PTR [ebp-0xc],0x0
3002cb54:	push   esi
3002cb55:	push   edi
3002cb56:	lea    eax,[ebp-0xc]
3002cb59:	push   eax
3002cb5a:	push   0x0
3002cb5c:	push   0x0
3002cb5e:	mov    esi,edx
3002cb60:	mov    edi,ecx
3002cb62:	call   DWORD PTR ds:0x3004554c
3002cb68:	push   0x2
3002cb6a:	push   DWORD PTR [ebp-0xc]
3002cb6d:	mov    DWORD PTR [ebp-0x8],eax
3002cb70:	call   DWORD PTR ds:0x30045544
3002cb76:	test   eax,eax
3002cb78:	je     0x3002cb7d
3002cb7a:	mov    DWORD PTR [ebp-0x8],eax
3002cb7d:	fild   DWORD PTR [ebp+0x8]
3002cb80:	push   esi
3002cb81:	fstp   DWORD PTR [ebp+0x8]
3002cb84:	fld    DWORD PTR [ebp+0x8]
3002cb87:	fstp   DWORD PTR [ebp-0x4]
3002cb8a:	fild   DWORD PTR [ebp+0xc]
3002cb8d:	fstp   DWORD PTR [ebp+0x8]
3002cb90:	fld    DWORD PTR [ebp+0x8]
3002cb93:	fstp   DWORD PTR [ebp+0x8]
3002cb96:	call   DWORD PTR ds:0x30045204
3002cb9c:	fld    DWORD PTR [ebp-0x4]
3002cb9f:	mov    ecx,DWORD PTR [ebp+0x14]
3002cba2:	fstp   DWORD PTR [ebp-0x1c]
3002cba5:	mov    edx,eax
3002cba7:	fld    DWORD PTR [ebp+0x8]
3002cbaa:	fstp   DWORD PTR [ebp-0x18]
3002cbad:	fldz   
3002cbaf:	fst    DWORD PTR [ebp-0x14]
3002cbb2:	fstp   DWORD PTR [ebp-0x10]
3002cbb5:	test   ecx,ecx
3002cbb7:	je     0x3002cbbe
3002cbb9:	mov    ecx,DWORD PTR [ecx+0x4]
3002cbbc:	jmp    0x3002cbc0
3002cbbe:	xor    ecx,ecx
3002cbc0:	mov    eax,DWORD PTR [ebp+0x10]
3002cbc3:	test   eax,eax
3002cbc5:	je     0x3002cbcb
3002cbc7:	mov    eax,DWORD PTR [eax]
3002cbc9:	jmp    0x3002cbcd
3002cbcb:	xor    eax,eax
3002cbcd:	push   ecx
3002cbce:	push   DWORD PTR [ebp-0xc]
3002cbd1:	lea    ecx,[ebp-0x1c]
3002cbd4:	push   ecx
3002cbd5:	push   eax
3002cbd6:	push   edx
3002cbd7:	push   esi
3002cbd8:	push   DWORD PTR [edi]
3002cbda:	call   DWORD PTR ds:0x30045538
3002cbe0:	mov    esi,eax
3002cbe2:	test   esi,esi
3002cbe4:	je     0x3002cbeb
3002cbe6:	mov    DWORD PTR [edi+0x4],esi
3002cbe9:	jmp    0x3002cbed
3002cbeb:	xor    esi,esi
3002cbed:	push   DWORD PTR [ebp-0xc]
3002cbf0:	call   DWORD PTR ds:0x30045548
3002cbf6:	pop    edi
3002cbf7:	mov    eax,esi
3002cbf9:	pop    esi
3002cbfa:	leave  
3002cbfb:	ret    0x10
3002cbfe:	push   ebp
3002cbff:	mov    ebp,esp
3002cc01:	sub    esp,0x18
3002cc04:	push   ebx
3002cc05:	push   esi
3002cc06:	mov    DWORD PTR [ebp-0x8],ecx
3002cc09:	mov    ecx,DWORD PTR [ebp+0x8]
3002cc0c:	push   edi
3002cc0d:	mov    esi,DWORD PTR [ecx]
3002cc0f:	mov    edi,DWORD PTR [ecx+0x4]
3002cc12:	mov    eax,DWORD PTR [ecx+0x8]
3002cc15:	mov    DWORD PTR [ebp+0x8],esi
3002cc18:	fild   DWORD PTR [ebp+0x8]
3002cc1b:	mov    DWORD PTR [ebp+0x8],edi
3002cc1e:	sub    eax,esi
3002cc20:	mov    esi,0x30044d0c
3002cc25:	fstp   DWORD PTR [ebp-0x18]
3002cc28:	push   esi
3002cc29:	fild   DWORD PTR [ebp+0x8]
3002cc2c:	mov    DWORD PTR [ebp+0x8],eax
3002cc2f:	mov    eax,DWORD PTR [ecx+0xc]
3002cc32:	sub    eax,edi
3002cc34:	fstp   DWORD PTR [ebp-0x14]
3002cc37:	mov    ebx,edx
3002cc39:	fild   DWORD PTR [ebp+0x8]
3002cc3c:	mov    DWORD PTR [ebp+0x8],eax
3002cc3f:	fstp   DWORD PTR [ebp-0x10]
3002cc42:	fild   DWORD PTR [ebp+0x8]
3002cc45:	fstp   DWORD PTR [ebp-0xc]
3002cc48:	call   DWORD PTR ds:0x30045540
3002cc4e:	push   DWORD PTR [ebp+0x10]
3002cc51:	mov    ds:0x30044d10,eax
3002cc56:	push   esi
3002cc57:	lea    eax,[ebp-0x18]
3002cc5a:	push   eax
3002cc5b:	push   DWORD PTR [ebp+0xc]
3002cc5e:	push   ebx
3002cc5f:	call   DWORD PTR ds:0x30045204
3002cc65:	mov    ecx,DWORD PTR [ebp-0x8]
3002cc68:	push   eax
3002cc69:	push   ebx
3002cc6a:	call   0x3002c5cb
3002cc6f:	pop    edi
3002cc70:	pop    esi
3002cc71:	pop    ebx
3002cc72:	leave  
3002cc73:	ret    0xc
3002cc76:	push   ebp
3002cc77:	mov    ebp,esp
3002cc79:	sub    esp,0x20
3002cc7c:	push   ebx
3002cc7d:	push   esi
3002cc7e:	push   edi
3002cc7f:	lea    eax,[ebp-0xc]
3002cc82:	mov    ebx,ecx
3002cc84:	xor    ecx,ecx
3002cc86:	push   eax
3002cc87:	push   ecx
3002cc88:	push   ecx
3002cc89:	mov    edi,edx
3002cc8b:	mov    DWORD PTR [ebp-0xc],ecx
3002cc8e:	call   DWORD PTR ds:0x3004554c
3002cc94:	push   0x2
3002cc96:	push   DWORD PTR [ebp-0xc]
3002cc99:	mov    DWORD PTR [ebp-0x8],eax
3002cc9c:	call   DWORD PTR ds:0x300455b8
3002cca2:	test   eax,eax
3002cca4:	je     0x3002cca9
3002cca6:	mov    DWORD PTR [ebp-0x8],eax
3002cca9:	mov    esi,DWORD PTR [ebp+0x8]
3002ccac:	push   DWORD PTR [ebp+0x10]
3002ccaf:	mov    ecx,DWORD PTR [esi]
3002ccb1:	mov    edx,DWORD PTR [esi+0x4]
3002ccb4:	mov    eax,DWORD PTR [esi+0x8]
3002ccb7:	mov    DWORD PTR [ebp+0x8],ecx
3002ccba:	fild   DWORD PTR [ebp+0x8]
3002ccbd:	sub    eax,ecx
3002ccbf:	mov    DWORD PTR [ebp+0x8],edx
3002ccc2:	fstp   DWORD PTR [ebp-0x1c]
3002ccc5:	fild   DWORD PTR [ebp+0x8]
3002ccc8:	mov    DWORD PTR [ebp+0x8],eax
3002cccb:	mov    eax,DWORD PTR [esi+0xc]
3002ccce:	sub    eax,edx
3002ccd0:	fstp   DWORD PTR [ebp-0x18]
3002ccd3:	fild   DWORD PTR [ebp+0x8]
3002ccd6:	mov    DWORD PTR [ebp+0x8],eax
3002ccd9:	lea    eax,[ebp-0xc]
3002ccdc:	push   eax
3002ccdd:	lea    eax,[ebp-0x1c]
3002cce0:	fstp   DWORD PTR [ebp-0x14]
3002cce3:	fild   DWORD PTR [ebp+0x8]
3002cce6:	push   eax
3002cce7:	push   DWORD PTR [ebp+0xc]
3002ccea:	push   edi
3002cceb:	fstp   DWORD PTR [ebp-0x10]
3002ccee:	call   DWORD PTR ds:0x30045204
3002ccf4:	push   eax
3002ccf5:	push   edi
3002ccf6:	mov    ecx,ebx
3002ccf8:	call   0x3002c5cb
3002ccfd:	push   DWORD PTR [ebp-0xc]
3002cd00:	mov    esi,eax
3002cd02:	call   DWORD PTR ds:0x30045548
3002cd08:	pop    edi
3002cd09:	mov    eax,esi
3002cd0b:	pop    esi
3002cd0c:	pop    ebx
3002cd0d:	leave  
3002cd0e:	ret    0xc
3002cd11:	push   0x8
3002cd13:	mov    eax,0x3003ff14
3002cd18:	call   0x3000116a
3002cd1d:	mov    esi,edx
3002cd1f:	mov    edi,ecx
3002cd21:	mov    DWORD PTR [ebp-0x14],edi
3002cd24:	and    DWORD PTR [ebp-0x4],0x0
3002cd28:	and    DWORD PTR [ebp-0x10],0x0
3002cd2c:	push   0x3004306c
3002cd31:	call   0x30004256
3002cd36:	push   DWORD PTR [ebp+0x8]
3002cd39:	and    DWORD PTR [ebp-0x4],0x0
3002cd3d:	push   esi
3002cd3e:	mov    ecx,edi
3002cd40:	mov    DWORD PTR [ebp-0x10],0x1
3002cd47:	call   0x300084a4
3002cd4c:	mov    eax,edi
3002cd4e:	call   0x3000119d
3002cd53:	ret    0x4
3002cd56:	push   0xc
3002cd58:	mov    eax,0x3003ed98
3002cd5d:	call   0x3000116a
3002cd62:	mov    edi,edx
3002cd64:	mov    esi,ecx
3002cd66:	mov    DWORD PTR [ebp-0x18],esi
3002cd69:	xor    ebx,ebx
3002cd6b:	mov    DWORD PTR [ebp-0x4],ebx
3002cd6e:	push   0x3004306c
3002cd73:	mov    DWORD PTR [ebp-0x14],ebx
3002cd76:	call   0x30004256
3002cd7b:	lea    eax,[ebp-0x10]
3002cd7e:	push   eax
3002cd7f:	push   ebx
3002cd80:	push   DWORD PTR [ebp+0x8]
3002cd83:	mov    DWORD PTR [ebp-0x4],ebx
3002cd86:	mov    ecx,edi
3002cd88:	mov    DWORD PTR [ebp-0x14],0x1
3002cd8f:	mov    DWORD PTR [ebp-0x10],ebx
3002cd92:	call   0x3001c8be
3002cd97:	test   eax,eax
3002cd99:	jne    0x3002cdbd
3002cd9b:	push   DWORD PTR [ebp-0x10]
3002cd9e:	mov    ecx,esi
3002cda0:	call   0x30004286
3002cda5:	lea    ecx,[ebp-0x10]
3002cda8:	push   ecx
3002cda9:	push   eax
3002cdaa:	push   DWORD PTR [ebp+0x8]
3002cdad:	mov    ecx,edi
3002cdaf:	call   0x3001c8be
3002cdb4:	push   0xffffffff
3002cdb6:	mov    ecx,esi
3002cdb8:	call   0x30006c8c
3002cdbd:	mov    eax,esi
3002cdbf:	call   0x3000119d
3002cdc4:	ret    0x4
3002cdc7:	push   0x14
3002cdc9:	mov    eax,0x3003ee38
3002cdce:	call   0x3000116a
3002cdd3:	mov    esi,edx
3002cdd5:	mov    edi,ecx
3002cdd7:	xor    ebx,ebx
3002cdd9:	push   0x3004306c
3002cdde:	lea    ecx,[ebp-0x10]
3002cde1:	mov    DWORD PTR [ebp-0x14],ebx
3002cde4:	call   0x30004256
3002cde9:	push   esi
3002cdea:	lea    eax,[ebp-0x10]
3002cded:	push   0x3002ce58
3002cdf2:	push   eax
3002cdf3:	mov    DWORD PTR [ebp-0x4],ebx
3002cdf6:	call   0x30005153
3002cdfb:	add    esp,0xc
3002cdfe:	mov    DWORD PTR [ebp-0x20],ebx
3002ce01:	mov    DWORD PTR [ebp-0x1c],ebx
3002ce04:	mov    DWORD PTR [ebp-0x18],ebx
3002ce07:	mov    BYTE PTR [ebp-0x4],0x1
3002ce0b:	mov    esi,DWORD PTR [ebp-0x10]
3002ce0e:	push   0x20019
3002ce13:	push   esi
3002ce14:	push   0x80000002
3002ce19:	lea    ecx,[ebp-0x20]
3002ce1c:	call   0x300051d9
3002ce21:	mov    ecx,edi
3002ce23:	test   eax,eax
3002ce25:	jne    0x3002ce36
3002ce27:	push   0x3002ce78
3002ce2c:	lea    edx,[ebp-0x20]
3002ce2f:	call   0x3002cd56
3002ce34:	jmp    0x3002ce40
3002ce36:	push   0x3004306c
3002ce3b:	call   0x30004256
3002ce40:	lea    ecx,[ebp-0x20]
3002ce43:	call   0x300051ae
3002ce48:	lea    ecx,[esi-0x10]
3002ce4b:	call   0x30004017
3002ce50:	mov    eax,edi
3002ce52:	call   0x3000119d
3002ce57:	ret    
3002ce58:	and    eax,0x5c007300
3002ce5d:	add    BYTE PTR [edx+0x0],dl
3002ce60:	add    BYTE PTR gs:[edi+0x0],ah
3002ce64:	imul   eax,DWORD PTR [eax],0x740073
3002ce6a:	jb     0x3002ce6c
3002ce6c:	popa   
3002ce6d:	add    BYTE PTR [eax+eax*1+0x69],dh
3002ce71:	add    BYTE PTR [edi+0x0],ch
3002ce74:	outs   dx,BYTE PTR ds:[esi]
3002ce75:	add    BYTE PTR [eax],al
3002ce77:	add    BYTE PTR [ebp+0x0],dl
3002ce7a:	jae    0x3002ce7c
3002ce7c:	add    BYTE PTR gs:[edx+0x0],dh
3002ce80:	dec    esi
3002ce81:	add    BYTE PTR [ecx+0x0],ah
3002ce84:	ins    DWORD PTR es:[edi],dx
3002ce85:	add    BYTE PTR [ebp+0x0],ah
3002ce88:	add    BYTE PTR [eax],al
3002ce8a:	push   0x10
3002ce8c:	mov    eax,0x3003ede8
3002ce91:	call   0x3000116a
3002ce96:	mov    esi,ecx
3002ce98:	xor    eax,eax
3002ce9a:	mov    DWORD PTR [ebp-0x10],eax
3002ce9d:	mov    DWORD PTR [ebp-0x1c],eax
3002cea0:	mov    DWORD PTR [ebp-0x18],eax
3002cea3:	mov    DWORD PTR [ebp-0x14],eax
3002cea6:	mov    edi,0x20019
3002ceab:	push   edi
3002ceac:	push   0x3002cf08
3002ceb1:	mov    ebx,0x80000002
3002ceb6:	push   ebx
3002ceb7:	lea    ecx,[ebp-0x1c]
3002ceba:	mov    DWORD PTR [ebp-0x4],eax
3002cebd:	call   0x300051d9
3002cec2:	test   eax,eax
3002cec4:	je     0x3002cee7
3002cec6:	push   edi
3002cec7:	push   0x3002cf68
3002cecc:	push   ebx
3002cecd:	lea    ecx,[ebp-0x1c]
3002ced0:	call   0x300051d9
3002ced5:	test   eax,eax
3002ced7:	je     0x3002cee7
3002ced9:	push   0x3004306c
3002cede:	mov    ecx,esi
3002cee0:	call   0x30004256
3002cee5:	jmp    0x3002cef6
3002cee7:	push   0x3002cfbc
3002ceec:	lea    edx,[ebp-0x1c]
3002ceef:	mov    ecx,esi
3002cef1:	call   0x3002cd56
3002cef6:	lea    ecx,[ebp-0x1c]
3002cef9:	call   0x300051ae
3002cefe:	mov    eax,esi
3002cf00:	call   0x3000119d
3002cf05:	ret    
3002cf06:	nop
3002cf07:	nop
3002cf08:	push   ebx
3002cf09:	add    BYTE PTR [edi+0x0],ch
3002cf0c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
3002cf11:	add    BYTE PTR [ecx+0x0],ah
3002cf14:	jb     0x3002cf16
3002cf16:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3002cf1b:	add    BYTE PTR [ecx+0x0],ch
3002cf1e:	arpl   WORD PTR [eax],ax
3002cf20:	jb     0x3002cf22
3002cf22:	outs   dx,DWORD PTR ds:[esi]
3002cf23:	add    BYTE PTR [ebx+0x0],dh
3002cf26:	outs   dx,DWORD PTR ds:[esi]
3002cf27:	add    BYTE PTR [esi+0x0],ah
3002cf2a:	je     0x3002cf2c
3002cf2c:	pop    esp
3002cf2d:	add    BYTE PTR [edi+0x0],dl
3002cf30:	imul   eax,DWORD PTR [eax],0x64006e
3002cf36:	outs   dx,DWORD PTR ds:[esi]
3002cf37:	add    BYTE PTR [edi+0x0],dh
3002cf3a:	jae    0x3002cf3c
3002cf3c:	and    BYTE PTR [eax],al
3002cf3e:	dec    esi
3002cf3f:	add    BYTE PTR [eax+eax*1+0x5c],dl
3002cf43:	add    BYTE PTR [ebx+0x0],al
3002cf46:	jne    0x3002cf48
3002cf48:	jb     0x3002cf4a
3002cf4a:	jb     0x3002cf4c
3002cf4c:	add    BYTE PTR gs:[esi+0x0],ch
3002cf50:	je     0x3002cf52
3002cf52:	push   esi
3002cf53:	add    BYTE PTR [ebp+0x0],ah
3002cf56:	jb     0x3002cf58
3002cf58:	jae    0x3002cf5a
3002cf5a:	imul   eax,DWORD PTR [eax],0x6e006f
3002cf60:	add    BYTE PTR [eax],al
3002cf62:	nop
3002cf63:	nop
3002cf64:	nop
3002cf65:	nop
3002cf66:	nop
3002cf67:	nop
3002cf68:	push   ebx
3002cf69:	add    BYTE PTR [edi+0x0],ch
3002cf6c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
3002cf71:	add    BYTE PTR [ecx+0x0],ah
3002cf74:	jb     0x3002cf76
3002cf76:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3002cf7b:	add    BYTE PTR [ecx+0x0],ch
3002cf7e:	arpl   WORD PTR [eax],ax
3002cf80:	jb     0x3002cf82
3002cf82:	outs   dx,DWORD PTR ds:[esi]
3002cf83:	add    BYTE PTR [ebx+0x0],dh
3002cf86:	outs   dx,DWORD PTR ds:[esi]
3002cf87:	add    BYTE PTR [esi+0x0],ah
3002cf8a:	je     0x3002cf8c
3002cf8c:	pop    esp
3002cf8d:	add    BYTE PTR [edi+0x0],dl
3002cf90:	imul   eax,DWORD PTR [eax],0x64006e
3002cf96:	outs   dx,DWORD PTR ds:[esi]
3002cf97:	add    BYTE PTR [edi+0x0],dh
3002cf9a:	jae    0x3002cf9c
3002cf9c:	pop    esp
3002cf9d:	add    BYTE PTR [ebx+0x0],al
3002cfa0:	jne    0x3002cfa2
3002cfa2:	jb     0x3002cfa4
3002cfa4:	jb     0x3002cfa6
3002cfa6:	add    BYTE PTR gs:[esi+0x0],ch
3002cfaa:	je     0x3002cfac
3002cfac:	push   esi
3002cfad:	add    BYTE PTR [ebp+0x0],ah
3002cfb0:	jb     0x3002cfb2
3002cfb2:	jae    0x3002cfb4
3002cfb4:	imul   eax,DWORD PTR [eax],0x6e006f
3002cfba:	add    BYTE PTR [eax],al
3002cfbc:	push   edx
3002cfbd:	add    BYTE PTR [ebp+0x0],ah
3002cfc0:	add    BYTE PTR [bx+di+0x0],ch
3002cfc4:	jae    0x3002cfc6
3002cfc6:	je     0x3002cfc8
3002cfc8:	add    BYTE PTR gs:[edx+0x0],dh
3002cfcc:	add    BYTE PTR gs:[eax+eax*1+0x4f],ah
3002cfd1:	add    BYTE PTR [edx+0x0],dh
3002cfd4:	add    BYTE PTR [bx+di+0x0],ah
3002cfd8:	outs   dx,BYTE PTR ds:[esi]
3002cfd9:	add    BYTE PTR [ecx+0x0],ch
3002cfdc:	jp     0x3002cfde
3002cfde:	popa   
3002cfdf:	add    BYTE PTR [eax+eax*1+0x69],dh
3002cfe3:	add    BYTE PTR [edi+0x0],ch
3002cfe6:	outs   dx,BYTE PTR ds:[esi]
3002cfe7:	add    BYTE PTR [eax],al
3002cfe9:	add    BYTE PTR [eax-0x30],ch
3002cfec:	add    BYTE PTR [eax],al
3002cfee:	add    BYTE PTR [eax+0x3003ecb5],bh
3002cff4:	call   0x3000116a
3002cff9:	mov    ebx,edx
3002cffb:	mov    esi,ecx
3002cffd:	mov    DWORD PTR [ebp-0x20],esi
3002d000:	push   0x5
3002d002:	push   DWORD PTR [esi]
3002d004:	call   DWORD PTR ds:0x3004553c
3002d00a:	test   eax,eax
3002d00c:	je     0x3002d011
3002d00e:	mov    DWORD PTR [esi+0x4],eax
3002d011:	mov    esi,DWORD PTR ds:0x30045534
3002d017:	lea    eax,[ebp-0x40]
3002d01a:	push   eax
3002d01b:	xor    edi,edi
3002d01d:	push   edi
3002d01e:	push   0x3002d6b0
3002d023:	mov    DWORD PTR [ebp-0x40],edi
3002d026:	call   esi
3002d028:	mov    DWORD PTR [ebp-0x3c],eax
3002d02b:	lea    eax,[ebp-0x5c]
3002d02e:	push   eax
3002d02f:	push   edi
3002d030:	mov    DWORD PTR [ebp-0x4],edi
3002d033:	push   0x3002d6c4
3002d038:	mov    DWORD PTR [ebp-0x5c],edi
3002d03b:	call   esi
3002d03d:	mov    DWORD PTR [ebp-0x58],eax
3002d040:	mov    edx,DWORD PTR [ebp+0x8]
3002d043:	mov    BYTE PTR [ebp-0x4],0x1
3002d047:	mov    edx,DWORD PTR [edx+0xc]
3002d04a:	push   0x7800
3002d04f:	lea    ecx,[ebp-0x14]
3002d052:	call   0x3002cd11
3002d057:	push   DWORD PTR [eax]
3002d059:	call   DWORD PTR ds:0x30045650
3002d05f:	mov    ecx,DWORD PTR [ebp-0x14]
3002d062:	add    ecx,0xfffffff0
3002d065:	movzx  esi,ax
3002d068:	call   0x30004017
3002d06d:	mov    DWORD PTR [ebp-0x10],esi
3002d070:	fild   DWORD PTR [ebp-0x10]
3002d073:	fstp   QWORD PTR [ebp-0xd0]
3002d079:	fld    QWORD PTR [ebp-0xd0]
3002d07f:	fst    QWORD PTR [ebp-0x48]
3002d082:	fcomp  QWORD PTR ds:0x3002d710
3002d088:	fnstsw ax
3002d08a:	test   ah,0x41
3002d08d:	jne    0x3002d094
3002d08f:	fild   DWORD PTR [ebp-0x10]
3002d092:	jmp    0x3002d09a
3002d094:	fld    DWORD PTR ds:0x3002d734
3002d09a:	fstp   DWORD PTR [ebp-0x10]
3002d09d:	push   ecx
3002d09e:	fld    DWORD PTR [ebp-0x10]
3002d0a1:	push   edi
3002d0a2:	fmul   QWORD PTR ds:0x3002d720
3002d0a8:	push   ecx
3002d0a9:	lea    eax,[ebp-0x5c]
3002d0ac:	lea    ecx,[ebp-0xac]
3002d0b2:	fdiv   QWORD PTR ds:0x3002d718
3002d0b8:	fstp   DWORD PTR [ebp-0x14]
3002d0bb:	fld    DWORD PTR [ebp-0x14]
3002d0be:	fstp   DWORD PTR [esp]
3002d0c1:	push   eax
3002d0c2:	call   0x3002c626
3002d0c7:	fld    QWORD PTR ds:0x3002d700
3002d0cd:	fcomp  QWORD PTR [ebp-0x48]
3002d0d0:	mov    DWORD PTR [ebp-0x10],esi
3002d0d3:	fnstsw ax
3002d0d5:	fld    DWORD PTR ds:0x3002d72c
3002d0db:	test   ah,0x5
3002d0de:	jp     0x3002d0e5
3002d0e0:	fstp   st(0)
3002d0e2:	fild   DWORD PTR [ebp-0x10]
3002d0e5:	fstp   DWORD PTR [ebp-0x10]
3002d0e8:	push   ecx
3002d0e9:	fld    DWORD PTR [ebp-0x10]
3002d0ec:	push   edi
3002d0ed:	fmul   QWORD PTR ds:0x3002d720
3002d0f3:	push   ecx
3002d0f4:	lea    eax,[ebp-0x40]
3002d0f7:	lea    ecx,[ebp-0x38]
3002d0fa:	fdiv   QWORD PTR ds:0x3002d718
3002d100:	fstp   DWORD PTR [ebp-0x14]
3002d103:	fld    DWORD PTR [ebp-0x14]
3002d106:	fstp   DWORD PTR [esp]
3002d109:	push   eax
3002d10a:	call   0x3002c626
3002d10f:	fld    QWORD PTR [ebp-0x48]
3002d112:	fcomp  QWORD PTR ds:0x3002d700
3002d118:	mov    DWORD PTR [ebp-0x10],esi
3002d11b:	fnstsw ax
3002d11d:	test   ah,0x41
3002d120:	jne    0x3002d127
3002d122:	fild   DWORD PTR [ebp-0x10]
3002d125:	jmp    0x3002d12d
3002d127:	fld    DWORD PTR ds:0x3002d72c
3002d12d:	fstp   DWORD PTR [ebp-0x10]
3002d130:	push   ecx
3002d131:	fld    DWORD PTR [ebp-0x10]
3002d134:	push   0x1
3002d136:	fmul   QWORD PTR ds:0x3002d720
3002d13c:	push   ecx
3002d13d:	lea    eax,[ebp-0x40]
3002d140:	lea    ecx,[ebp-0xa4]
3002d146:	fdiv   QWORD PTR ds:0x3002d718
3002d14c:	fstp   DWORD PTR [ebp-0x14]
3002d14f:	fld    DWORD PTR [ebp-0x14]
3002d152:	fstp   DWORD PTR [esp]
3002d155:	push   eax
3002d156:	call   0x3002c626
3002d15b:	fld    QWORD PTR ds:0x3002d6f8
3002d161:	fcomp  QWORD PTR [ebp-0x48]
3002d164:	mov    DWORD PTR [ebp-0x10],esi
3002d167:	fnstsw ax
3002d169:	test   ah,0x5
3002d16c:	jp     0x3002d173
3002d16e:	fild   DWORD PTR [ebp-0x10]
3002d171:	jmp    0x3002d179
3002d173:	fld    DWORD PTR ds:0x3002d728
3002d179:	fstp   DWORD PTR [ebp-0x10]
3002d17c:	push   ecx
3002d17d:	fld    DWORD PTR [ebp-0x10]
3002d180:	push   edi
3002d181:	fmul   QWORD PTR ds:0x3002d720
3002d187:	push   ecx
3002d188:	lea    eax,[ebp-0x40]
3002d18b:	lea    ecx,[ebp-0x9c]
3002d191:	fdiv   QWORD PTR ds:0x3002d718
3002d197:	fstp   DWORD PTR [ebp-0x14]
3002d19a:	fld    DWORD PTR [ebp-0x14]
3002d19d:	fstp   DWORD PTR [esp]
3002d1a0:	push   eax
3002d1a1:	call   0x3002c626
3002d1a6:	fld    QWORD PTR ds:0x3002d708
3002d1ac:	fcomp  QWORD PTR [ebp-0x48]
3002d1af:	mov    DWORD PTR [ebp-0x10],esi
3002d1b2:	fnstsw ax
3002d1b4:	test   ah,0x5
3002d1b7:	jp     0x3002d1be
3002d1b9:	fild   DWORD PTR [ebp-0x10]
3002d1bc:	jmp    0x3002d1c4
3002d1be:	fld    DWORD PTR ds:0x3002d730
3002d1c4:	fstp   DWORD PTR [ebp-0x10]
3002d1c7:	push   ecx
3002d1c8:	fld    DWORD PTR [ebp-0x10]
3002d1cb:	push   edi
3002d1cc:	fmul   QWORD PTR ds:0x3002d720
3002d1d2:	push   ecx
3002d1d3:	lea    eax,[ebp-0x40]
3002d1d6:	lea    ecx,[ebp-0x94]
3002d1dc:	fdiv   QWORD PTR ds:0x3002d718
3002d1e2:	fstp   DWORD PTR [ebp-0x14]
3002d1e5:	fld    DWORD PTR [ebp-0x14]
3002d1e8:	fstp   DWORD PTR [esp]
3002d1eb:	push   eax
3002d1ec:	call   0x3002c626
3002d1f1:	push   0x3004306c
3002d1f6:	lea    ecx,[ebp-0x84]
3002d1fc:	mov    BYTE PTR [ebp-0x4],0x6
3002d200:	call   0x30004256
3002d205:	mov    edi,DWORD PTR [ebp-0x84]
3002d20b:	cmp    DWORD PTR [edi-0xc],0x0
3002d20f:	je     0x3002d275
3002d211:	mov    ecx,DWORD PTR [ebx+0x38]
3002d214:	movzx  edx,cl
3002d217:	mov    eax,ecx
3002d219:	shr    eax,0x8
3002d21c:	or     edx,0xffffff00
3002d222:	movzx  eax,al
3002d225:	shl    edx,0x8
3002d228:	or     edx,eax
3002d22a:	shr    ecx,0x10
3002d22d:	movzx  eax,cl
3002d230:	shl    edx,0x8
3002d233:	or     edx,eax
3002d235:	lea    eax,[ebp-0x28]
3002d238:	push   eax
3002d239:	lea    ecx,[ebp-0xb8]
3002d23f:	mov    DWORD PTR [ebp-0x28],edx
3002d242:	call   0x3002c584
3002d247:	mov    esi,DWORD PTR [ebp-0x20]
3002d24a:	lea    eax,[ebp-0xb8]
3002d250:	push   eax
3002d251:	lea    eax,[ebp-0x94]
3002d257:	push   eax
3002d258:	push   DWORD PTR [ebx+0x40]
3002d25b:	mov    edx,edi
3002d25d:	push   DWORD PTR [ebx+0x3c]
3002d260:	mov    ecx,esi
3002d262:	call   0x3002cb4a
3002d267:	push   DWORD PTR [ebp-0xb4]
3002d26d:	call   DWORD PTR ds:0x300455a4
3002d273:	jmp    0x3002d278
3002d275:	mov    esi,DWORD PTR [ebp-0x20]
3002d278:	cmp    DWORD PTR [ebx+0x44],0x0
3002d27c:	je     0x3002d2dc
3002d27e:	mov    ecx,DWORD PTR [ebx+0x48]
3002d281:	movzx  edx,cl
3002d284:	mov    eax,ecx
3002d286:	shr    eax,0x8
3002d289:	or     edx,0xffffff00
3002d28f:	movzx  eax,al
3002d292:	shl    edx,0x8
3002d295:	or     edx,eax
3002d297:	shr    ecx,0x10
3002d29a:	movzx  eax,cl
3002d29d:	shl    edx,0x8
3002d2a0:	or     edx,eax
3002d2a2:	lea    eax,[ebp-0x70]
3002d2a5:	push   eax
3002d2a6:	lea    ecx,[ebp-0xc4]
3002d2ac:	mov    DWORD PTR [ebp-0x70],edx
3002d2af:	call   0x3002c584
3002d2b4:	mov    edx,DWORD PTR [ebx+0x44]
3002d2b7:	lea    eax,[ebp-0xc4]
3002d2bd:	push   eax
3002d2be:	lea    eax,[ebp-0xac]
3002d2c4:	push   eax
3002d2c5:	lea    eax,[ebx+0x4c]
3002d2c8:	push   eax
3002d2c9:	mov    ecx,esi
3002d2cb:	call   0x3002cbfe
3002d2d0:	push   DWORD PTR [ebp-0xc0]
3002d2d6:	call   DWORD PTR ds:0x300455a4
3002d2dc:	mov    ecx,DWORD PTR [ebx+0x4]
3002d2df:	movzx  edx,cl
3002d2e2:	mov    eax,ecx
3002d2e4:	shr    eax,0x8
3002d2e7:	or     edx,0xffffff00
3002d2ed:	movzx  eax,al
3002d2f0:	shl    edx,0x8
3002d2f3:	or     edx,eax
3002d2f5:	shr    ecx,0x10
3002d2f8:	movzx  eax,cl
3002d2fb:	shl    edx,0x8
3002d2fe:	or     edx,eax
3002d300:	lea    eax,[ebp-0x74]
3002d303:	push   eax
3002d304:	lea    ecx,[ebp-0x68]
3002d307:	mov    DWORD PTR [ebp-0x74],edx
3002d30a:	call   0x3002c584
3002d30f:	mov    BYTE PTR [ebp-0x4],0x8
3002d313:	cmp    DWORD PTR [ebx+0x30],0x0
3002d317:	je     0x3002d357
3002d319:	cmp    DWORD PTR [ebx+0x34],0x0
3002d31d:	je     0x3002d357
3002d31f:	mov    eax,DWORD PTR [ebp+0x8]
3002d322:	push   0x7801
3002d327:	mov    edx,DWORD PTR [eax+0xc]
3002d32a:	lea    ecx,[ebp-0x7c]
3002d32d:	call   0x3002cd11
3002d332:	mov    edx,DWORD PTR [eax]
3002d334:	lea    ecx,[ebp-0x68]
3002d337:	push   ecx
3002d338:	lea    ecx,[ebp-0xa4]
3002d33e:	push   ecx
3002d33f:	push   DWORD PTR [ebx+0x34]
3002d342:	mov    ecx,esi
3002d344:	push   DWORD PTR [ebx+0x30]
3002d347:	call   0x3002cacb
3002d34c:	mov    ecx,DWORD PTR [ebp-0x7c]
3002d34f:	lea    ecx,[ecx-0x10]
3002d352:	call   0x30004017
3002d357:	lea    eax,[ebp-0x19]
3002d35a:	push   eax
3002d35b:	mov    eax,DWORD PTR [ebp+0x8]
3002d35e:	push   DWORD PTR [eax+0x8]
3002d361:	call   0x30039101
3002d366:	test   eax,eax
3002d368:	sets   al
3002d36b:	dec    al
3002d36d:	and    al,BYTE PTR [ebp-0x19]
3002d370:	mov    eax,DWORD PTR [ebp+0x8]
3002d373:	je     0x3002d3a2
3002d375:	mov    edx,DWORD PTR [eax+0xc]
3002d378:	push   0x7802
3002d37d:	lea    ecx,[ebp-0x6c]
3002d380:	call   0x3002cd11
3002d385:	mov    edx,DWORD PTR [eax]
3002d387:	lea    eax,[ebp-0x68]
3002d38a:	push   eax
3002d38b:	lea    eax,[ebp-0x38]
3002d38e:	push   eax
3002d38f:	lea    eax,[ebx+0x8]
3002d392:	push   eax
3002d393:	mov    ecx,esi
3002d395:	call   0x3002cbfe
3002d39a:	mov    ecx,DWORD PTR [ebp-0x6c]
3002d39d:	jmp    0x3002d4d8
3002d3a2:	mov    edx,DWORD PTR [eax+0x4]
3002d3a5:	lea    ecx,[ebp-0x2c]
3002d3a8:	call   0x3002cdc7
3002d3ad:	lea    ecx,[ebp-0x4c]
3002d3b0:	mov    BYTE PTR [ebp-0x4],0x9
3002d3b4:	call   0x3002ce8a
3002d3b9:	push   0x3004306c
3002d3be:	lea    ecx,[ebp-0x30]
3002d3c1:	mov    BYTE PTR [ebp-0x4],0xa
3002d3c5:	call   0x30004256
3002d3ca:	mov    BYTE PTR [ebp-0x4],0xb
3002d3ce:	mov    eax,DWORD PTR [ebp-0x2c]
3002d3d1:	cmp    DWORD PTR [eax-0xc],0x0
3002d3d5:	mov    eax,DWORD PTR [ebp+0x8]
3002d3d8:	mov    edx,DWORD PTR [eax+0xc]
3002d3db:	je     0x3002d3fc
3002d3dd:	push   0x7803
3002d3e2:	lea    ecx,[ebp-0x80]
3002d3e5:	call   0x3002cd11
3002d3ea:	push   eax
3002d3eb:	lea    ecx,[ebp-0x30]
3002d3ee:	mov    BYTE PTR [ebp-0x4],0xc
3002d3f2:	call   0x300014c1
3002d3f7:	mov    ecx,DWORD PTR [ebp-0x80]
3002d3fa:	jmp    0x3002d41f
3002d3fc:	push   0x7804
3002d401:	lea    ecx,[ebp-0x8c]
3002d407:	call   0x3002cd11
3002d40c:	push   eax
3002d40d:	lea    ecx,[ebp-0x30]
3002d410:	mov    BYTE PTR [ebp-0x4],0xd
3002d414:	call   0x300014c1
3002d419:	mov    ecx,DWORD PTR [ebp-0x8c]
3002d41f:	lea    ecx,[ecx-0x10]
3002d422:	call   0x30004017
3002d427:	lea    eax,[ebp-0x78]
3002d42a:	push   eax
3002d42b:	push   DWORD PTR [esi]
3002d42d:	push   DWORD PTR [ebp-0x38]
3002d430:	call   DWORD PTR ds:0x300455a0
3002d436:	test   eax,eax
3002d438:	je     0x3002d43d
3002d43a:	mov    DWORD PTR [ebp-0x34],eax
3002d43d:	fld    DWORD PTR [ebp-0x78]
3002d440:	fadd   QWORD PTR ds:0x3002d6f0
3002d446:	call   0x3001eaa1
3002d44b:	mov    ecx,DWORD PTR [ebx+0xc]
3002d44e:	mov    esi,DWORD PTR [ebp-0x30]
3002d451:	lea    edx,[ebp-0x68]
3002d454:	push   edx
3002d455:	lea    edx,[ebp-0x38]
3002d458:	push   edx
3002d459:	mov    DWORD PTR [ebp-0x28],eax
3002d45c:	mov    eax,DWORD PTR [ebx+0x8]
3002d45f:	push   ecx
3002d460:	mov    DWORD PTR [ebp-0x10],ecx
3002d463:	mov    ecx,DWORD PTR [ebp-0x20]
3002d466:	push   eax
3002d467:	mov    edx,esi
3002d469:	mov    DWORD PTR [ebp-0x14],eax
3002d46c:	call   0x3002cacb
3002d471:	mov    eax,DWORD PTR [ebp-0x10]
3002d474:	mov    ecx,DWORD PTR [ebp-0x28]
3002d477:	mov    edx,DWORD PTR [ebp-0x2c]
3002d47a:	add    eax,ecx
3002d47c:	cmp    DWORD PTR [edx-0xc],0x0
3002d480:	mov    DWORD PTR [ebp-0x10],eax
3002d483:	je     0x3002d49f
3002d485:	lea    ecx,[ebp-0x68]
3002d488:	push   ecx
3002d489:	lea    ecx,[ebp-0x38]
3002d48c:	push   ecx
3002d48d:	mov    ecx,DWORD PTR [ebp-0x20]
3002d490:	push   eax
3002d491:	push   DWORD PTR [ebp-0x14]
3002d494:	call   0x3002cacb
3002d499:	mov    eax,DWORD PTR [ebp-0x10]
3002d49c:	mov    ecx,DWORD PTR [ebp-0x28]
3002d49f:	mov    edx,DWORD PTR [ebp-0x4c]
3002d4a2:	add    eax,ecx
3002d4a4:	cmp    DWORD PTR [edx-0xc],0x0
3002d4a8:	je     0x3002d4be
3002d4aa:	lea    ecx,[ebp-0x68]
3002d4ad:	push   ecx
3002d4ae:	lea    ecx,[ebp-0x38]
3002d4b1:	push   ecx
3002d4b2:	mov    ecx,DWORD PTR [ebp-0x20]
3002d4b5:	push   eax
3002d4b6:	push   DWORD PTR [ebp-0x14]
3002d4b9:	call   0x3002cacb
3002d4be:	lea    ecx,[esi-0x10]
3002d4c1:	call   0x30004017
3002d4c6:	mov    ecx,DWORD PTR [ebp-0x4c]
3002d4c9:	lea    ecx,[ecx-0x10]
3002d4cc:	call   0x30004017
3002d4d1:	mov    BYTE PTR [ebp-0x4],0x8
3002d4d5:	mov    ecx,DWORD PTR [ebp-0x2c]
3002d4d8:	lea    ecx,[ecx-0x10]
3002d4db:	call   0x30004017
3002d4e0:	push   0x3004306c
3002d4e5:	lea    ecx,[ebp-0x18]
3002d4e8:	call   0x30004256
3002d4ed:	mov    esi,DWORD PTR [ebp+0x8]
3002d4f0:	mov    BYTE PTR [ebp-0x4],0xe
3002d4f4:	mov    edx,DWORD PTR [esi+0xc]
3002d4f7:	push   0x7805
3002d4fc:	lea    ecx,[ebp-0x88]
3002d502:	call   0x3002cd11
3002d507:	push   eax
3002d508:	lea    ecx,[ebp-0x18]
3002d50b:	mov    BYTE PTR [ebp-0x4],0xf
3002d50f:	call   0x300014c1
3002d514:	mov    BYTE PTR [ebp-0x4],0xe
3002d518:	mov    ecx,DWORD PTR [ebp-0x88]
3002d51e:	lea    ecx,[ecx-0x10]
3002d521:	call   0x30004017
3002d526:	push   0xa
3002d528:	lea    ecx,[ebp-0x18]
3002d52b:	call   0x3000c4fd
3002d530:	mov    edx,DWORD PTR [esi+0xc]
3002d533:	push   0x7806
3002d538:	lea    ecx,[ebp-0x50]
3002d53b:	call   0x3002cd11
3002d540:	mov    BYTE PTR [ebp-0x4],0x10
3002d544:	mov    eax,DWORD PTR [ebp-0x50]
3002d547:	cmp    DWORD PTR [eax-0xc],0x0
3002d54b:	je     0x3002d563
3002d54d:	push   DWORD PTR [eax-0xc]
3002d550:	lea    ecx,[ebp-0x18]
3002d553:	push   eax
3002d554:	call   0x30008b64
3002d559:	push   0xa
3002d55b:	lea    ecx,[ebp-0x18]
3002d55e:	call   0x3000c4fd
3002d563:	mov    edx,DWORD PTR [esi+0xc]
3002d566:	push   0x7807
3002d56b:	lea    ecx,[ebp-0x54]
3002d56e:	call   0x3002cd11
3002d573:	mov    BYTE PTR [ebp-0x4],0x11
3002d577:	mov    eax,DWORD PTR [ebp-0x54]
3002d57a:	cmp    DWORD PTR [eax-0xc],0x0
3002d57e:	je     0x3002d596
3002d580:	push   DWORD PTR [eax-0xc]
3002d583:	lea    ecx,[ebp-0x18]
3002d586:	push   eax
3002d587:	call   0x30008b64
3002d58c:	push   0xa
3002d58e:	lea    ecx,[ebp-0x18]
3002d591:	call   0x3000c4fd
3002d596:	mov    edx,DWORD PTR [esi+0xc]
3002d599:	push   0x7808
3002d59e:	lea    ecx,[ebp-0x24]
3002d5a1:	call   0x3002cd11
3002d5a6:	mov    BYTE PTR [ebp-0x4],0x12
3002d5aa:	mov    eax,DWORD PTR [ebp-0x24]
3002d5ad:	cmp    DWORD PTR [eax-0xc],0x0
3002d5b1:	je     0x3002d5d4
3002d5b3:	push   0x3002d6e4
3002d5b8:	push   0x3002d6e8
3002d5bd:	lea    ecx,[ebp-0x24]
3002d5c0:	call   0x300043f1
3002d5c5:	mov    eax,DWORD PTR [ebp-0x24]
3002d5c8:	lea    ecx,[ebp-0x18]
3002d5cb:	push   DWORD PTR [eax-0xc]
3002d5ce:	push   eax
3002d5cf:	call   0x30008b64
3002d5d4:	mov    ecx,DWORD PTR [ebx+0x18]
3002d5d7:	movzx  edx,cl
3002d5da:	mov    eax,ecx
3002d5dc:	shr    eax,0x8
3002d5df:	or     edx,0xffffff00
3002d5e5:	movzx  eax,al
3002d5e8:	shl    edx,0x8
3002d5eb:	or     edx,eax
3002d5ed:	shr    ecx,0x10
3002d5f0:	movzx  eax,cl
3002d5f3:	shl    edx,0x8
3002d5f6:	or     edx,eax
3002d5f8:	lea    eax,[ebp-0x44]
3002d5fb:	push   eax
3002d5fc:	lea    ecx,[ebp-0xdc]
3002d602:	mov    DWORD PTR [ebp-0x44],edx
3002d605:	call   0x3002c584
3002d60a:	mov    esi,DWORD PTR [ebp-0x18]
3002d60d:	mov    ecx,DWORD PTR [ebp-0x20]
3002d610:	lea    eax,[ebp-0xdc]
3002d616:	push   eax
3002d617:	lea    eax,[ebp-0x9c]
3002d61d:	push   eax
3002d61e:	lea    eax,[ebx+0x1c]
3002d621:	push   eax
3002d622:	mov    edx,esi
3002d624:	call   0x3002cc76
3002d629:	mov    ebx,DWORD PTR ds:0x300455a4
3002d62f:	push   DWORD PTR [ebp-0xd8]
3002d635:	call   ebx
3002d637:	mov    ecx,DWORD PTR [ebp-0x24]
3002d63a:	lea    ecx,[ecx-0x10]
3002d63d:	call   0x30004017
3002d642:	mov    ecx,DWORD PTR [ebp-0x54]
3002d645:	lea    ecx,[ecx-0x10]
3002d648:	call   0x30004017
3002d64d:	mov    ecx,DWORD PTR [ebp-0x50]
3002d650:	lea    ecx,[ecx-0x10]
3002d653:	call   0x30004017
3002d658:	lea    ecx,[esi-0x10]
3002d65b:	call   0x30004017
3002d660:	push   DWORD PTR [ebp-0x64]
3002d663:	call   ebx
3002d665:	lea    ecx,[edi-0x10]
3002d668:	call   0x30004017
3002d66d:	push   DWORD PTR [ebp-0x94]
3002d673:	mov    esi,DWORD PTR ds:0x300455a8
3002d679:	call   esi
3002d67b:	push   DWORD PTR [ebp-0x9c]
3002d681:	call   esi
3002d683:	push   DWORD PTR [ebp-0xa4]
3002d689:	call   esi
3002d68b:	push   DWORD PTR [ebp-0x38]
3002d68e:	call   esi
3002d690:	push   DWORD PTR [ebp-0xac]
3002d696:	call   esi
3002d698:	push   DWORD PTR [ebp-0x5c]
3002d69b:	mov    esi,DWORD PTR ds:0x30045530
3002d6a1:	call   esi
3002d6a3:	push   DWORD PTR [ebp-0x40]
3002d6a6:	call   esi
3002d6a8:	call   0x3000119d
3002d6ad:	ret    0x4
3002d6b0:	push   ebx
3002d6b1:	add    BYTE PTR [ebp+0x0],ah
3002d6b4:	add    BYTE PTR [bx+0x0],ch
3002d6b8:	add    BYTE PTR gs:[eax],ah
3002d6bb:	add    BYTE PTR [ebp+0x0],dl
3002d6be:	dec    ecx
3002d6bf:	add    BYTE PTR [eax],al
3002d6c1:	add    BYTE PTR [eax+0x65005390],dl
3002d6c7:	add    BYTE PTR [edi+0x0],ah
3002d6ca:	outs   dx,DWORD PTR ds:[esi]
3002d6cb:	add    BYTE PTR [ebp+0x0],ah
3002d6ce:	and    BYTE PTR [eax],al
3002d6d0:	push   ebp
3002d6d1:	add    BYTE PTR [ecx+0x0],cl
3002d6d4:	and    BYTE PTR [eax],al
3002d6d6:	dec    esp
3002d6d7:	add    BYTE PTR [ecx+0x0],ch
3002d6da:	add    BYTE PTR [bx+si+0x0],ch
3002d6de:	je     0x3002d6e0
3002d6e0:	add    BYTE PTR [eax],al
3002d6e2:	nop
3002d6e3:	nop
3002d6e4:	test   eax,0x28000000
3002d6e9:	add    BYTE PTR [ebx+0x0],ah
3002d6ec:	sub    DWORD PTR [eax],eax
	...
3002d6f6:	loopne 0x3002d737
3002d6f8:	add    BYTE PTR [eax],al
3002d6fa:	add    BYTE PTR [eax],al
3002d6fc:	add    BYTE PTR [eax],al
3002d6fe:	and    al,BYTE PTR [eax+0x0]
3002d701:	add    BYTE PTR [eax],al
3002d703:	add    BYTE PTR [eax],al
3002d705:	add    BYTE PTR ds:0x40,ah
3002d70b:	add    BYTE PTR [eax],al
3002d70d:	add    BYTE PTR [eax],ch
3002d70f:	inc    eax
3002d710:	add    BYTE PTR [eax],al
3002d712:	add    BYTE PTR [eax],al
3002d714:	add    al,al
3002d716:	xor    al,BYTE PTR [eax+0x0]
3002d719:	add    BYTE PTR [eax],al
3002d71b:	add    BYTE PTR [eax],al
3002d71d:	add    BYTE PTR [edx+0x40],dl
3002d720:	add    BYTE PTR [eax],al
3002d722:	add    BYTE PTR [eax],al
3002d724:	add    BYTE PTR [eax],al
3002d726:	pop    eax
3002d727:	inc    eax
3002d728:	add    BYTE PTR [eax],al
3002d72a:	adc    BYTE PTR [ecx+0x0],al
3002d72d:	add    BYTE PTR [eax],ch
3002d72f:	inc    ecx
3002d730:	add    BYTE PTR [eax],al
3002d732:	inc    eax
3002d733:	inc    ecx
3002d734:	add    BYTE PTR [eax],al
3002d736:	xchg   esi,eax
3002d737:	inc    ecx
3002d738:	push   0x22c
3002d73d:	mov    eax,0x3003ed2c
3002d742:	call   0x300045c8
3002d747:	mov    ebx,ecx
3002d749:	mov    DWORD PTR [ebp-0x228],ebx
3002d74f:	test   ebx,ebx
3002d751:	jne    0x3002d75d
3002d753:	mov    eax,0x80070057
3002d758:	jmp    0x3002d910
3002d75d:	test   edx,edx
3002d75f:	jne    0x3002d76b
3002d761:	mov    eax,0x80004003
3002d766:	jmp    0x3002d910
3002d76b:	or     DWORD PTR [edx],0xffffffff
3002d76e:	xor    esi,esi
3002d770:	mov    DWORD PTR [ebp-0x22c],esi
3002d776:	push   edx
3002d777:	lea    eax,[ebp-0x22c]
3002d77d:	push   eax
3002d77e:	lea    edx,[ebp-0x220]
3002d784:	mov    ecx,ebx
3002d786:	mov    DWORD PTR [ebp-0x4],esi
3002d789:	call   0x3002c8ad
3002d78e:	mov    edi,eax
3002d790:	test   edi,edi
3002d792:	js     0x3002d8fa
3002d798:	lea    ecx,[ebp-0x224]
3002d79e:	call   0x3001c6fb
3002d7a3:	mov    DWORD PTR [ebp-0x230],esi
3002d7a9:	mov    DWORD PTR [ebp-0x234],esi
3002d7af:	mov    BYTE PTR [ebp-0x4],0x2
3002d7b3:	mov    ecx,DWORD PTR [ebx+0x8]
3002d7b6:	lea    edx,[ebp-0x234]
3002d7bc:	call   0x30003ee4
3002d7c1:	mov    ebx,DWORD PTR [ebp-0x234]
3002d7c7:	test   eax,eax
3002d7c9:	js     0x3002d7e0
3002d7cb:	mov    eax,DWORD PTR [ebx]
3002d7cd:	lea    ecx,[ebp-0x230]
3002d7d3:	push   ecx
3002d7d4:	push   ebx
3002d7d5:	call   DWORD PTR [eax+0xc]
3002d7d8:	mov    eax,DWORD PTR [ebp-0x230]
3002d7de:	jmp    0x3002d7eb
3002d7e0:	mov    eax,0x3002d918
3002d7e5:	mov    DWORD PTR [ebp-0x230],eax
3002d7eb:	cmp    DWORD PTR [eax],0x0
3002d7ee:	je     0x3002d7fd
3002d7f0:	push   DWORD PTR [eax]
3002d7f2:	lea    ecx,[ebp-0x224]
3002d7f8:	call   0x3002c66a
3002d7fd:	cmp    DWORD PTR [ebp-0x224],0x0
3002d804:	mov    esi,DWORD PTR [ebp-0x22c]
3002d80a:	jne    0x3002d858
3002d80c:	mov    eax,DWORD PTR [ebp-0x228]
3002d812:	push   0x3002a33c
3002d817:	mov    edi,DWORD PTR [eax+0x14]
3002d81a:	mov    eax,DWORD PTR [eax+0x10]
3002d81d:	push   edi
3002d81e:	push   eax
3002d81f:	lea    ecx,[ebp-0x224]
3002d825:	mov    DWORD PTR [ebp-0x238],eax
3002d82b:	call   0x3002c09e
3002d830:	test   eax,eax
3002d832:	jns    0x3002d848
3002d834:	push   0x2
3002d836:	push   edi
3002d837:	push   DWORD PTR [ebp-0x238]
3002d83d:	lea    ecx,[ebp-0x224]
3002d843:	call   0x3002c09e
3002d848:	cmp    DWORD PTR [ebp-0x224],0x0
3002d84f:	jne    0x3002d858
3002d851:	mov    edi,0x80004005
3002d856:	jmp    0x3002d8b6
3002d858:	lea    ecx,[ebp-0x224]
3002d85e:	call   0x3001d40c
3002d863:	mov    edi,eax
3002d865:	mov    DWORD PTR [ebp-0x238],edi
3002d86b:	mov    BYTE PTR [ebp-0x4],0x3
3002d86f:	test   edi,edi
3002d871:	je     0x3002d886
3002d873:	push   DWORD PTR [ebp-0x228]
3002d879:	mov    edx,DWORD PTR [ebp-0x230]
3002d87f:	mov    ecx,edi
3002d881:	call   0x3002cfea
3002d886:	push   ecx
3002d887:	push   esi
3002d888:	lea    ecx,[ebp-0x224]
3002d88e:	call   0x3002c70b
3002d893:	mov    DWORD PTR [ebp-0x228],eax
3002d899:	mov    BYTE PTR [ebp-0x4],0x2
3002d89d:	test   edi,edi
3002d89f:	je     0x3002d8b0
3002d8a1:	push   DWORD PTR [edi]
3002d8a3:	call   DWORD PTR ds:0x30045580
3002d8a9:	push   edi
3002d8aa:	call   DWORD PTR ds:0x300455b0
3002d8b0:	mov    edi,DWORD PTR [ebp-0x228]
3002d8b6:	test   esi,esi
3002d8b8:	je     0x3002d8ce
3002d8ba:	mov    eax,esi
3002d8bc:	xor    esi,esi
3002d8be:	mov    DWORD PTR [ebp-0x22c],esi
3002d8c4:	test   eax,eax
3002d8c6:	je     0x3002d8ce
3002d8c8:	mov    ecx,DWORD PTR [eax]
3002d8ca:	push   eax
3002d8cb:	call   DWORD PTR [ecx+0x8]
3002d8ce:	test   edi,edi
3002d8d0:	jns    0x3002d8df
3002d8d2:	lea    eax,[ebp-0x220]
3002d8d8:	push   eax
3002d8d9:	call   DWORD PTR ds:0x30045208
3002d8df:	mov    BYTE PTR [ebp-0x4],0x1
3002d8e3:	test   ebx,ebx
3002d8e5:	je     0x3002d8ed
3002d8e7:	mov    eax,DWORD PTR [ebx]
3002d8e9:	push   ebx
3002d8ea:	call   DWORD PTR [eax+0x8]
3002d8ed:	lea    ecx,[ebp-0x224]
3002d8f3:	call   0x3001d2cb
3002d8f8:	jmp    0x3002d900
3002d8fa:	mov    esi,DWORD PTR [ebp-0x22c]
3002d900:	or     DWORD PTR [ebp-0x4],0xffffffff
3002d904:	test   esi,esi
3002d906:	je     0x3002d90e
3002d908:	mov    eax,DWORD PTR [esi]
3002d90a:	push   esi
3002d90b:	call   DWORD PTR [eax+0x8]
3002d90e:	mov    eax,edi
3002d910:	call   0x300045fe
3002d915:	ret    
3002d916:	nop
3002d917:	nop
3002d918:	add    BYTE PTR [eax],al
3002d91a:	add    BYTE PTR [eax],al
3002d91c:	icebp  
3002d91d:	icebp  
3002d91e:	icebp  
3002d91f:	add    BYTE PTR [eax],ah
3002d921:	add    BYTE PTR [eax],al
3002d923:	add    dl,bh
3002d925:	add    DWORD PTR [eax],eax
3002d927:	add    BYTE PTR [edx+0x4e000001],ch
3002d92d:	add    al,BYTE PTR [eax]
3002d92f:	add    BYTE PTR [ecx+0x20009999],bl
3002d935:	add    BYTE PTR [eax],al
3002d937:	add    BYTE PTR [eax],bl
3002d939:	add    DWORD PTR [eax],eax
3002d93b:	add    BYTE PTR [edx-0x47ffffff],ch
3002d941:	add    DWORD PTR [eax],eax
3002d943:	add    cl,dh
3002d945:	icebp  
3002d946:	icebp  
	...
3002d94f:	add    bh,bh
3002d951:	(bad)  
3002d952:	inc    DWORD PTR [eax]
3002d954:	mov    eax,0xf000001
3002d959:	add    BYTE PTR [eax],al
3002d95b:	add    BYTE PTR [eax],al
3002d95d:	add    BYTE PTR [eax],al
3002d95f:	add    bh,bh
3002d961:	(bad)  
3002d962:	inc    DWORD PTR [eax]
3002d964:	sbb    al,0x0
3002d966:	add    BYTE PTR [eax],al
3002d968:	pusha  
3002d969:	add    BYTE PTR [eax],al
3002d96b:	add    BYTE PTR [esi+0x18000001],ch
3002d971:	add    DWORD PTR [eax],eax
3002d973:	add    BYTE PTR [esi-0x75],dl
3002d976:	xor    DWORD PTR [ebp-0xf08b0a],eax
3002d97c:	call   DWORD PTR ss:0x30045580
3002d983:	push   esi
3002d984:	call   DWORD PTR ds:0x300455b0
3002d98a:	pop    esi
3002d98b:	ret    
3002d98c:	push   ecx
3002d98d:	call   DWORD PTR ds:0x300454e0
3002d993:	ret    
3002d994:	push   ebp
3002d995:	mov    ebp,esp
3002d997:	mov    edx,DWORD PTR [ebp+0x8]
3002d99a:	or     eax,0xffffffff
3002d99d:	sub    eax,edx
3002d99f:	push   esi
3002d9a0:	mov    esi,ecx
3002d9a2:	cmp    eax,0x8
3002d9a5:	jb     0x3002d9c8
3002d9a7:	lea    eax,[edx+0x8]
3002d9aa:	push   eax
3002d9ab:	call   DWORD PTR ds:0x300452a4
3002d9b1:	pop    ecx
3002d9b2:	mov    ecx,eax
3002d9b4:	test   ecx,ecx
3002d9b6:	jne    0x3002d9bd
3002d9b8:	pop    esi
3002d9b9:	pop    ebp
3002d9ba:	ret    0x4
3002d9bd:	mov    eax,DWORD PTR [esi]
3002d9bf:	mov    DWORD PTR [ecx],eax
3002d9c1:	mov    DWORD PTR [esi],ecx
3002d9c3:	lea    eax,[ecx+0x8]
3002d9c6:	jmp    0x3002d9b8
3002d9c8:	push   0x80070216
3002d9cd:	call   0x3002ae0b
3002d9d2:	int3   
3002d9d3:	push   0x10
3002d9d5:	push   0x3002da40
3002d9da:	call   0x3001eaff
3002d9df:	mov    bl,0x1
3002d9e1:	and    DWORD PTR [ebp-0x4],0x0
3002d9e5:	or     eax,0xffffffff
3002d9e8:	sub    eax,ecx
3002d9ea:	cmp    eax,0x2000
3002d9ef:	jb     0x3002da01
3002d9f1:	lea    eax,[ecx+0x2000]
3002d9f7:	call   0x3000618e
3002d9fc:	mov    DWORD PTR [ebp-0x18],esp
3002d9ff:	jmp    0x3002da29
3002da01:	xor    bl,bl
3002da03:	mov    BYTE PTR [ebp-0x1d],bl
3002da06:	jmp    0x3002da29
3002da08:	mov    eax,DWORD PTR [ebp-0x14]
3002da0b:	mov    eax,DWORD PTR [eax]
3002da0d:	xor    ecx,ecx
3002da0f:	cmp    DWORD PTR [eax],0xc00000fd
3002da15:	sete   cl
3002da18:	mov    eax,ecx
3002da1a:	ret    
3002da1b:	mov    esp,DWORD PTR [ebp-0x18]
3002da1e:	xor    bl,bl
3002da20:	mov    BYTE PTR [ebp-0x1d],bl
3002da23:	call   DWORD PTR ds:0x30045310
3002da29:	mov    DWORD PTR [ebp-0x4],0xfffffffe
3002da30:	mov    al,bl
3002da32:	lea    esp,[ebp-0x30]
3002da35:	call   0x3001eb47
3002da3a:	ret    
3002da3b:	nop
3002da3c:	nop
3002da3d:	nop
3002da3e:	nop
3002da3f:	nop
3002da40:	in     al,0xff
3002da42:	(bad)  
3002da43:	inc    DWORD PTR [eax]
3002da45:	add    BYTE PTR [eax],al
3002da47:	add    al,dl
3002da49:	(bad)  
3002da4a:	(bad)  
3002da4b:	inc    DWORD PTR [eax]
3002da4d:	add    BYTE PTR [eax],al
3002da4f:	add    dh,bh
3002da51:	(bad)  
3002da52:	(bad)  
3002da53:	dec    DWORD PTR [eax]
3002da55:	fiadd  DWORD PTR [edx]
3002da57:	xor    BYTE PTR [ebx],bl
3002da59:	fiadd  DWORD PTR [edx]
3002da5b:	xor    BYTE PTR [ebp-0x75],dl
3002da5e:	in     al,dx
3002da5f:	push   esi
3002da60:	mov    esi,ecx
3002da62:	call   0x30017191
3002da67:	test   BYTE PTR [ebp+0x8],0x1
3002da6b:	je     0x3002da75
3002da6d:	push   esi
3002da6e:	call   DWORD PTR ds:0x300452ac
3002da74:	pop    ecx
3002da75:	mov    eax,esi
3002da77:	pop    esi
3002da78:	pop    ebp
3002da79:	ret    0x4
3002da7c:	push   ebp
3002da7d:	mov    ebp,esp
3002da7f:	cmp    DWORD PTR [ebp+0x18],0x0
3002da83:	push   edi
3002da84:	mov    edi,ecx
3002da86:	je     0x3002daa0
3002da88:	push   DWORD PTR [ebp+0x18]
3002da8b:	call   0x300042e4
3002da90:	pop    ecx
3002da91:	push   eax
3002da92:	push   DWORD PTR [ebp+0x18]
3002da95:	lea    ecx,[edi+0xa4]
3002da9b:	call   0x3000416f
3002daa0:	push   DWORD PTR [ebp+0x1c]
3002daa3:	mov    ecx,edi
3002daa5:	push   DWORD PTR [edi+0xa4]
3002daab:	push   DWORD PTR [ebp+0x14]
3002daae:	push   0x3002dacc
3002dab3:	push   DWORD PTR [ebp+0x10]
3002dab6:	push   DWORD PTR [ebp+0xc]
3002dab9:	push   DWORD PTR [ebp+0x8]
3002dabc:	call   0x300333d2
3002dac1:	pop    edi
3002dac2:	test   eax,eax
3002dac4:	js     0x3002dac8
3002dac6:	xor    eax,eax
3002dac8:	pop    ebp
3002dac9:	ret    0x18
3002dacc:	xor    DWORD PTR [eax],eax
3002dace:	xor    DWORD PTR [eax],eax
3002dad0:	add    BYTE PTR cs:[eax],dh
3002dad3:	add    BYTE PTR [eax],al
3002dad5:	add    BYTE PTR [ebx+0x7750039],al
3002dadb:	mov    eax,0x8000ffff
3002dae0:	jmp    0x3002dafb
3002dae2:	push   0x3002a354
3002dae7:	push   DWORD PTR [ecx]
3002dae9:	call   DWORD PTR ds:0x30045080
3002daef:	test   eax,eax
3002daf1:	jle    0x3002dafb
3002daf3:	movzx  eax,ax
3002daf6:	or     eax,0x80070000
3002dafb:	ret    0x4
3002dafe:	push   ebp
3002daff:	mov    ebp,esp
3002db01:	push   ecx
3002db02:	cmp    DWORD PTR [ebp+0xc],0x0
3002db06:	push   edi
3002db07:	mov    edi,ecx
3002db09:	jne    0x3002db12
3002db0b:	mov    eax,0x80004003
3002db10:	jmp    0x3002db56
3002db12:	push   esi
3002db13:	xor    ecx,ecx
3002db15:	push   ecx
3002db16:	lea    eax,[ebp-0x4]
3002db19:	push   eax
3002db1a:	push   ecx
3002db1b:	push   0x2001f
3002db20:	push   ecx
3002db21:	push   ecx
3002db22:	push   ecx
3002db23:	push   DWORD PTR [ebp+0xc]
3002db26:	mov    DWORD PTR [ebp-0x4],ecx
3002db29:	push   0x80000001
3002db2e:	call   DWORD PTR ds:0x3004507c
3002db34:	mov    esi,eax
3002db36:	test   esi,esi
3002db38:	jne    0x3002db48
3002db3a:	mov    ecx,edi
3002db3c:	call   0x300014b2
3002db41:	mov    ecx,DWORD PTR [ebp-0x4]
3002db44:	mov    DWORD PTR [edi],ecx
3002db46:	test   esi,esi
3002db48:	jle    0x3002db53
3002db4a:	movzx  esi,si
3002db4d:	or     esi,0x80070000
3002db53:	mov    eax,esi
3002db55:	pop    esi
3002db56:	pop    edi
3002db57:	leave  
3002db58:	ret    0x1c
3002db5b:	push   ebp
3002db5c:	mov    ebp,esp
3002db5e:	sub    esp,0xc
3002db61:	mov    eax,ecx
3002db63:	mov    DWORD PTR [ebp-0xc],eax
3002db66:	cmp    DWORD PTR [eax],0x0
3002db69:	jne    0x3002db75
3002db6b:	mov    eax,0x8000ffff
3002db70:	jmp    0x3002dc1d
3002db75:	push   ebx
3002db76:	push   esi
3002db77:	push   edi
3002db78:	xor    edx,edx
3002db7a:	push   edx
3002db7b:	push   edx
3002db7c:	push   edx
3002db7d:	push   edx
3002db7e:	push   edx
3002db7f:	lea    ecx,[ebp-0x8]
3002db82:	push   ecx
3002db83:	lea    ecx,[ebp-0x4]
3002db86:	push   ecx
3002db87:	push   edx
3002db88:	push   edx
3002db89:	push   edx
3002db8a:	push   edx
3002db8b:	push   DWORD PTR [eax]
3002db8d:	mov    esi,edx
3002db8f:	call   DWORD PTR ds:0x30045078
3002db95:	mov    edi,eax
3002db97:	test   edi,edi
3002db99:	jne    0x3002dc00
3002db9b:	mov    ebx,DWORD PTR [ebp+0xc]
3002db9e:	test   ebx,ebx
3002dba0:	je     0x3002dbc9
3002dba2:	push   DWORD PTR [ebp-0x4]
3002dba5:	push   eax
3002dba6:	call   DWORD PTR ds:0x300454f0
3002dbac:	mov    edi,eax
3002dbae:	test   edi,edi
3002dbb0:	je     0x3002dbc2
3002dbb2:	push   esi
3002dbb3:	call   DWORD PTR ds:0x300454e8
3002dbb9:	inc    DWORD PTR [ebp-0x4]
3002dbbc:	mov    esi,edi
3002dbbe:	xor    ecx,ecx
3002dbc0:	jmp    0x3002dbce
3002dbc2:	mov    edi,0x8007000e
3002dbc7:	jmp    0x3002dc0b
3002dbc9:	xor    ecx,ecx
3002dbcb:	mov    DWORD PTR [ebp-0x4],ecx
3002dbce:	push   ecx
3002dbcf:	lea    eax,[ebp-0x8]
3002dbd2:	push   eax
3002dbd3:	push   ecx
3002dbd4:	push   ecx
3002dbd5:	lea    eax,[ebp-0x4]
3002dbd8:	push   eax
3002dbd9:	mov    eax,DWORD PTR [ebp-0xc]
3002dbdc:	push   esi
3002dbdd:	push   DWORD PTR [ebp+0x8]
3002dbe0:	mov    DWORD PTR [ebp-0x8],ecx
3002dbe3:	push   DWORD PTR [eax]
3002dbe5:	call   DWORD PTR ds:0x30045074
3002dbeb:	mov    edi,eax
3002dbed:	test   edi,edi
3002dbef:	jne    0x3002dc00
3002dbf1:	test   ebx,ebx
3002dbf3:	je     0x3002dc0b
3002dbf5:	push   esi
3002dbf6:	call   DWORD PTR ds:0x300454dc
3002dbfc:	mov    DWORD PTR [ebx],eax
3002dbfe:	jmp    0x3002dc0b
3002dc00:	jle    0x3002dc0b
3002dc02:	movzx  edi,di
3002dc05:	or     edi,0x80070000
3002dc0b:	mov    ebx,DWORD PTR ds:0x300454e8
3002dc11:	push   0x0
3002dc13:	call   ebx
3002dc15:	push   esi
3002dc16:	call   ebx
3002dc18:	mov    eax,edi
3002dc1a:	pop    edi
3002dc1b:	pop    esi
3002dc1c:	pop    ebx
3002dc1d:	leave  
3002dc1e:	ret    0x10
3002dc21:	push   0x8
3002dc23:	mov    eax,0x3003fcd4
3002dc28:	call   0x3000116a
3002dc2d:	mov    edi,edx
3002dc2f:	mov    ebx,ecx
3002dc31:	lea    ecx,[ebp-0x10]
3002dc34:	call   0x3001c6fb
3002dc39:	and    DWORD PTR [ebp-0x4],0x0
3002dc3d:	mov    eax,DWORD PTR [edi]
3002dc3f:	push   0x3002a33c
3002dc44:	push   eax
3002dc45:	push   ebx
3002dc46:	lea    ecx,[ebp-0x10]
3002dc49:	mov    DWORD PTR [ebp-0x14],eax
3002dc4c:	call   0x3002c09e
3002dc51:	mov    esi,eax
3002dc53:	test   esi,esi
3002dc55:	jns    0x3002dc6b
3002dc57:	push   0x2
3002dc59:	push   DWORD PTR [ebp-0x14]
3002dc5c:	lea    ecx,[ebp-0x10]
3002dc5f:	push   ebx
3002dc60:	call   0x3002c09e
3002dc65:	mov    esi,eax
3002dc67:	test   esi,esi
3002dc69:	js     0x3002dc77
3002dc6b:	lea    ecx,[ebp-0x10]
3002dc6e:	call   0x3001d390
3002dc73:	mov    DWORD PTR [edi],eax
3002dc75:	xor    esi,esi
3002dc77:	lea    ecx,[ebp-0x10]
3002dc7a:	call   0x3001d2cb
3002dc7f:	mov    eax,esi
3002dc81:	call   0x3000119d
3002dc86:	ret    
3002dc87:	push   ebp
3002dc88:	mov    ebp,esp
3002dc8a:	sub    esp,0xc
3002dc8d:	push   edi
3002dc8e:	mov    edi,DWORD PTR [ebp+0x8]
3002dc91:	cmp    DWORD PTR [edi+0xc],0x0
3002dc95:	jne    0x3002dca1
3002dc97:	mov    eax,0x8000ffff
3002dc9c:	jmp    0x3002dddf
3002dca1:	and    DWORD PTR [ebp+0x8],0x0
3002dca5:	push   ebx
3002dca6:	push   esi
3002dca7:	lea    eax,[ebp+0x8]
3002dcaa:	push   eax
3002dcab:	push   DWORD PTR [ebp+0xc]
3002dcae:	lea    ebx,[edi-0x40]
3002dcb1:	push   DWORD PTR [edi+0x1c]
3002dcb4:	mov    ecx,ebx
3002dcb6:	call   0x30005e58
3002dcbb:	mov    esi,DWORD PTR [ebp+0x8]
3002dcbe:	push   esi
3002dcbf:	call   DWORD PTR ds:0x300454ec
3002dcc5:	test   eax,eax
3002dcc7:	je     0x3002ddaf
3002dccd:	and    DWORD PTR [ebp-0x4],0x0
3002dcd1:	lea    eax,[ebp-0x4]
3002dcd4:	push   eax
3002dcd5:	push   0x0
3002dcd7:	call   DWORD PTR ds:0x30045528
3002dcdd:	test   eax,eax
3002dcdf:	mov    eax,DWORD PTR [ebp-0x4]
3002dce2:	js     0x3002dd3b
3002dce4:	test   eax,eax
3002dce6:	je     0x3002dd3b
3002dce8:	and    DWORD PTR [ebp-0x8],0x0
3002dcec:	mov    ecx,DWORD PTR [eax]
3002dcee:	lea    edx,[ebp-0x8]
3002dcf1:	push   edx
3002dcf2:	push   eax
3002dcf3:	call   DWORD PTR [ecx+0x14]
3002dcf6:	test   eax,eax
3002dcf8:	js     0x3002dd2f
3002dcfa:	push   DWORD PTR [ebp-0x8]
3002dcfd:	call   DWORD PTR ds:0x300454ec
3002dd03:	test   eax,eax
3002dd05:	je     0x3002dd2f
3002dd07:	push   0x3002ddf4
3002dd0c:	lea    ecx,[ebp+0x8]
3002dd0f:	call   0x300062d8
3002dd14:	push   DWORD PTR [ebp-0x8]
3002dd17:	lea    ecx,[ebp+0x8]
3002dd1a:	call   0x30030a28
3002dd1f:	push   0x3002ddfc
3002dd24:	lea    ecx,[ebp+0x8]
3002dd27:	call   0x300062d8
3002dd2c:	mov    esi,DWORD PTR [ebp+0x8]
3002dd2f:	push   DWORD PTR [ebp-0x8]
3002dd32:	call   DWORD PTR ds:0x300454e8
3002dd38:	mov    eax,DWORD PTR [ebp-0x4]
3002dd3b:	mov    ecx,DWORD PTR [edi-0x34]
3002dd3e:	and    DWORD PTR [ebp-0xc],0x0
3002dd42:	test   ecx,ecx
3002dd44:	je     0x3002dda5
3002dd46:	mov    eax,DWORD PTR [ecx]
3002dd48:	lea    edx,[ebp-0xc]
3002dd4b:	push   edx
3002dd4c:	mov    edx,0x3002dde4
3002dd51:	push   edx
3002dd52:	push   edx
3002dd53:	push   ecx
3002dd54:	call   DWORD PTR [eax+0xc]
3002dd57:	test   eax,eax
3002dd59:	js     0x3002dd95
3002dd5b:	mov    eax,DWORD PTR [ebp-0xc]
3002dd5e:	test   eax,eax
3002dd60:	je     0x3002dda2
3002dd62:	and    DWORD PTR [ebp+0x8],0x0
3002dd66:	mov    ecx,DWORD PTR [eax]
3002dd68:	lea    edx,[ebp+0x8]
3002dd6b:	push   edx
3002dd6c:	xor    edx,edx
3002dd6e:	push   edx
3002dd6f:	push   0x3
3002dd71:	push   edx
3002dd72:	push   0x4
3002dd74:	push   0xffffffff
3002dd76:	push   edx
3002dd77:	push   esi
3002dd78:	push   edx
3002dd79:	push   0x300071f8
3002dd7e:	push   edx
3002dd7f:	push   eax
3002dd80:	call   DWORD PTR [ecx+0x58]
3002dd83:	cmp    DWORD PTR [ebp+0x8],0x7
3002dd87:	jne    0x3002dd95
3002dd89:	push   0x1
3002dd8b:	push   DWORD PTR [ebp+0xc]
3002dd8e:	mov    ecx,ebx
3002dd90:	call   0x3002e2e4
3002dd95:	mov    eax,DWORD PTR [ebp-0xc]
3002dd98:	test   eax,eax
3002dd9a:	je     0x3002dda2
3002dd9c:	mov    ecx,DWORD PTR [eax]
3002dd9e:	push   eax
3002dd9f:	call   DWORD PTR [ecx+0x8]
3002dda2:	mov    eax,DWORD PTR [ebp-0x4]
3002dda5:	test   eax,eax
3002dda7:	je     0x3002ddaf
3002dda9:	mov    ecx,DWORD PTR [eax]
3002ddab:	push   eax
3002ddac:	call   DWORD PTR [ecx+0x8]
3002ddaf:	cmp    DWORD PTR [edi+0x8c],0x0
3002ddb6:	jne    0x3002ddd4
3002ddb8:	cmp    DWORD PTR [ebx+0xc4],0x0
3002ddbf:	je     0x3002ddd4
3002ddc1:	cmp    DWORD PTR [edi+0x20],0x0
3002ddc5:	je     0x3002ddd4
3002ddc7:	push   DWORD PTR [ebp+0xc]
3002ddca:	mov    ecx,ebx
3002ddcc:	push   DWORD PTR [edi+0x20]
3002ddcf:	call   0x3002e169
3002ddd4:	push   esi
3002ddd5:	call   DWORD PTR ds:0x300454e8
3002dddb:	pop    esi
3002dddc:	xor    eax,eax
3002ddde:	pop    ebx
3002dddf:	pop    edi
3002dde0:	leave  
3002dde1:	ret    0x8
3002dde4:	pop    ebx
3002dde5:	ret    
3002dde6:	pop    ds
3002dde7:	mov    dh,0xbf
3002dde9:	out    dx,al
3002ddea:	in     al,dx
3002ddeb:	dec    ebp
3002ddec:	mov    edi,0xdda228f1
3002ddf1:	inc    ebx
3002ddf2:	ret    
3002ddf3:	(bad)
3002ddf7:	add    BYTE PTR [eax],ch
3002ddf9:	add    BYTE PTR [eax],al
3002ddfb:	add    BYTE PTR [ecx],ch
3002ddfd:	add    BYTE PTR [eax],al
3002ddff:	add    BYTE PTR [edx+0x18],ch
3002de02:	mov    eax,0x3003f764
3002de07:	call   0x3000116a
3002de0c:	mov    esi,ecx
3002de0e:	xor    edx,edx
3002de10:	mov    ebx,edx
3002de12:	mov    DWORD PTR [ebp-0x1c],ebx
3002de15:	mov    DWORD PTR [ebp-0x4],edx
3002de18:	mov    DWORD PTR [ebp-0x24],edx
3002de1b:	mov    DWORD PTR [ebp-0x20],edx
3002de1e:	xor    eax,eax
3002de20:	inc    eax
3002de21:	mov    BYTE PTR [ebp-0x4],al
3002de24:	mov    edi,DWORD PTR ds:0x300454e8
3002de2a:	mov    DWORD PTR [ebp-0x14],eax
3002de2d:	cmp    DWORD PTR [esi+0x1e4],edx
3002de33:	je     0x3002df70
3002de39:	cmp    DWORD PTR [esi+0x1e8],edx
3002de3f:	je     0x3002df70
3002de45:	lea    ecx,[esi+0xdc]
3002de4b:	cmp    DWORD PTR [ecx],edx
3002de4d:	jne    0x3002de61
3002de4f:	lea    eax,[esi+0xe0]
3002de55:	push   eax
3002de56:	push   ecx
3002de57:	push   DWORD PTR [esi+0x64]
3002de5a:	mov    ecx,esi
3002de5c:	call   0x3002e564
3002de61:	test   eax,eax
3002de63:	je     0x3002df70
3002de69:	lea    eax,[ebp-0x1c]
3002de6c:	push   eax
3002de6d:	lea    eax,[ebp-0x24]
3002de70:	push   eax
3002de71:	push   DWORD PTR [ebp+0xc]
3002de74:	lea    eax,[ebp-0x20]
3002de77:	push   eax
3002de78:	push   DWORD PTR [ebp+0x8]
3002de7b:	mov    ecx,esi
3002de7d:	call   0x3002e73e
3002de82:	mov    ebx,DWORD PTR [ebp-0x1c]
3002de85:	test   eax,eax
3002de87:	je     0x3002df70
3002de8d:	and    DWORD PTR [ebp-0x18],0x0
3002de91:	cmp    DWORD PTR [esi+0x1e8],0x0
3002de98:	jbe    0x3002df53
3002de9e:	and    DWORD PTR [ebp-0x10],0x0
3002dea2:	lea    eax,[ebp-0x20]
3002dea5:	push   eax
3002dea6:	lea    ecx,[ebp+0xc]
3002dea9:	mov    BYTE PTR [ebp-0x4],0x2
3002dead:	call   0x30006b8a
3002deb2:	mov    ecx,DWORD PTR [ebp-0x18]
3002deb5:	mov    BYTE PTR [ebp-0x4],0x3
3002deb9:	mov    eax,DWORD PTR [esi+0x1e4]
3002debf:	push   DWORD PTR [eax+ecx*4]
3002dec2:	lea    ecx,[ebp+0xc]
3002dec5:	call   0x300062d8
3002deca:	test   eax,eax
3002decc:	js     0x3002dfa1
3002ded2:	push   0x30008e38
3002ded7:	lea    ecx,[ebp+0xc]
3002deda:	call   0x300062d8
3002dedf:	test   eax,eax
3002dee1:	js     0x3002dfa1
3002dee7:	cmp    DWORD PTR [ebp+0xc],0x0
3002deeb:	je     0x3002df87
3002def1:	lea    eax,[ebp-0x10]
3002def4:	push   eax
3002def5:	push   DWORD PTR [esi+0xdc]
3002defb:	lea    eax,[ebp+0xc]
3002defe:	push   DWORD PTR [esi+0x68]
3002df01:	mov    ecx,esi
3002df03:	push   eax
3002df04:	call   0x3002ed16
3002df09:	test   eax,eax
3002df0b:	je     0x3002df87
3002df0d:	push   DWORD PTR [esi+0xe0]
3002df13:	mov    ecx,esi
3002df15:	push   ebx
3002df16:	push   DWORD PTR [ebp-0x24]
3002df19:	push   DWORD PTR [ebp+0x8]
3002df1c:	push   DWORD PTR [ebp-0x10]
3002df1f:	call   0x3002ee19
3002df24:	test   eax,eax
3002df26:	jne    0x3002df8b
3002df28:	push   DWORD PTR [ebp+0xc]
3002df2b:	call   edi
3002df2d:	mov    BYTE PTR [ebp-0x4],0x1
3002df31:	cmp    DWORD PTR [ebp-0x10],0x0
3002df35:	je     0x3002df40
3002df37:	push   DWORD PTR [ebp-0x10]
3002df3a:	call   DWORD PTR ds:0x30045000
3002df40:	mov    eax,DWORD PTR [ebp-0x18]
3002df43:	inc    eax
3002df44:	mov    DWORD PTR [ebp-0x18],eax
3002df47:	cmp    eax,DWORD PTR [esi+0x1e8]
3002df4d:	jb     0x3002de9e
3002df53:	mov    esi,DWORD PTR [ebp+0x8]
3002df56:	sub    esp,0x10
3002df59:	mov    edi,esp
3002df5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002df5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002df5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002df5e:	push   0x3002dfa8
3002df63:	push   ecx
3002df64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002df65:	call   0x3002f137
3002df6a:	mov    edi,DWORD PTR ds:0x300454e8
3002df70:	and    DWORD PTR [ebp-0x14],0x0
3002df74:	push   DWORD PTR [ebp-0x20]
3002df77:	call   edi
3002df79:	push   ebx
3002df7a:	call   edi
3002df7c:	mov    eax,DWORD PTR [ebp-0x14]
3002df7f:	call   0x3000119d
3002df84:	ret    0x8
3002df87:	and    DWORD PTR [ebp-0x14],0x0
3002df8b:	push   DWORD PTR [ebp+0xc]
3002df8e:	call   edi
3002df90:	cmp    DWORD PTR [ebp-0x10],0x0
3002df94:	je     0x3002df74
3002df96:	push   DWORD PTR [ebp-0x10]
3002df99:	call   DWORD PTR ds:0x30045000
3002df9f:	jmp    0x3002df74
3002dfa1:	push   eax
3002dfa2:	call   0x3002ae0b
3002dfa7:	int3   
3002dfa8:	inc    ebx
3002dfa9:	add    BYTE PTR [eax+0x0],ch
3002dfac:	add    BYTE PTR gs:[ebx+0x0],ah
3002dfb0:	imul   eax,DWORD PTR [eax],0x50
3002dfb3:	add    BYTE PTR [ecx+0x0],ah
3002dfb6:	arpl   WORD PTR [eax],ax
3002dfb8:	imul   eax,DWORD PTR [eax],0x61
3002dfbb:	add    BYTE PTR [edi+0x0],ah
3002dfbe:	add    BYTE PTR gs:[ebx+0x0],dl
3002dfc2:	imul   eax,DWORD PTR [eax],0x6e0067
3002dfc8:	popa   
3002dfc9:	add    BYTE PTR [eax+eax*1+0x75],dh
3002dfcd:	add    BYTE PTR [edx+0x0],dh
3002dfd0:	add    BYTE PTR gs:[eax],ah
3002dfd3:	add    BYTE PTR [esi+0x0],ah
3002dfd6:	popa   
3002dfd7:	add    BYTE PTR [ecx+0x0],ch
3002dfda:	ins    BYTE PTR es:[edi],dx
3002dfdb:	add    BYTE PTR [ebp+0x0],ah
3002dfde:	add    BYTE PTR fs:[ebx],bh
3002dfe1:	add    BYTE PTR [eax],ah
3002dfe3:	add    BYTE PTR [ecx+0x0],ch
3002dfe6:	outs   dx,BYTE PTR ds:[esi]
3002dfe7:	add    BYTE PTR [esi+0x0],dh
3002dfea:	popa   
3002dfeb:	add    BYTE PTR [eax+eax*1+0x69],ch
3002dfef:	add    BYTE PTR [eax+eax*1+0x20],ah
3002dff3:	add    BYTE PTR [eax+0x0],dl
3002dff6:	popa   
3002dff7:	add    BYTE PTR [ebx+0x0],ah
3002dffa:	imul   eax,DWORD PTR [eax],0x61
3002dffd:	add    BYTE PTR [edi+0x0],ah
3002e000:	add    BYTE PTR gs:[eax],ah
3002e003:	add    BYTE PTR [eax+eax*1+0x6f],cl
3002e007:	add    BYTE PTR [ecx+0x0],ah
3002e00a:	add    BYTE PTR fs:[eax],ah
3002e00d:	add    BYTE PTR [ebx+0x0],cl
3002e010:	add    BYTE PTR gs:[ecx+0x0],bh
3002e014:	add    BYTE PTR [eax],al
3002e016:	push   0x20
3002e018:	mov    eax,0x3003fb60
3002e01d:	call   0x300045c8
3002e022:	mov    ebx,ecx
3002e024:	mov    eax,DWORD PTR [ebp+0x8]
3002e027:	xor    ecx,ecx
3002e029:	mov    DWORD PTR [ebp-0x2c],eax
3002e02c:	cmp    DWORD PTR [ebx+0xd0],ecx
3002e032:	jne    0x3002e0d9
3002e038:	test   eax,eax
3002e03a:	je     0x3002e0d9
3002e040:	cmp    DWORD PTR [ebx+0xc],ecx
3002e043:	je     0x3002e0d9
3002e049:	mov    DWORD PTR [ebx+0xd0],0x1
3002e053:	mov    esi,0x300071f8
3002e058:	lea    edi,[ebp-0x24]
3002e05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e05d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e05f:	mov    DWORD PTR [ebp-0x28],ecx
3002e062:	mov    DWORD PTR [ebp-0x4],ecx
3002e065:	mov    DWORD PTR [eax],ecx
3002e067:	mov    eax,DWORD PTR [ebx]
3002e069:	lea    ecx,[ebp-0x24]
3002e06c:	push   ecx
3002e06d:	push   0xffffdeb9
3002e072:	push   ebx
3002e073:	call   DWORD PTR [eax+0x18]
3002e076:	lea    eax,[ebp-0x24]
3002e079:	push   0x300071f8
3002e07e:	push   eax
3002e07f:	call   0x30030a6b
3002e084:	test   eax,eax
3002e086:	jne    0x3002e0b3
3002e088:	mov    eax,DWORD PTR [ebx+0xc]
3002e08b:	lea    edx,[ebp-0x28]
3002e08e:	mov    ecx,DWORD PTR [eax]
3002e090:	push   edx
3002e091:	mov    edx,0x30028f34
3002e096:	push   edx
3002e097:	push   edx
3002e098:	push   eax
3002e099:	call   DWORD PTR [ecx+0xc]
3002e09c:	mov    eax,DWORD PTR [ebp-0x28]
3002e09f:	mov    esi,DWORD PTR [ebp-0x2c]
3002e0a2:	test   eax,eax
3002e0a4:	je     0x3002e0b9
3002e0a6:	mov    ecx,DWORD PTR [eax]
3002e0a8:	push   esi
3002e0a9:	lea    edx,[ebp-0x24]
3002e0ac:	push   edx
3002e0ad:	push   eax
3002e0ae:	call   DWORD PTR [ecx+0xc]
3002e0b1:	jmp    0x3002e0b6
3002e0b3:	mov    esi,DWORD PTR [ebp-0x2c]
3002e0b6:	mov    eax,DWORD PTR [ebp-0x28]
3002e0b9:	and    DWORD PTR [ebx+0xd0],0x0
3002e0c0:	xor    ebx,ebx
3002e0c2:	cmp    DWORD PTR [esi],ebx
3002e0c4:	setne  bl
3002e0c7:	or     DWORD PTR [ebp-0x4],0xffffffff
3002e0cb:	test   eax,eax
3002e0cd:	je     0x3002e0d5
3002e0cf:	mov    ecx,DWORD PTR [eax]
3002e0d1:	push   eax
3002e0d2:	call   DWORD PTR [ecx+0x8]
3002e0d5:	mov    eax,ebx
3002e0d7:	jmp    0x3002e0db
3002e0d9:	xor    eax,eax
3002e0db:	call   0x300045fe
3002e0e0:	ret    0x4
3002e0e3:	push   0x8
3002e0e5:	mov    eax,0x3003fd74
3002e0ea:	call   0x3000116a
3002e0ef:	mov    esi,ecx
3002e0f1:	cmp    DWORD PTR [ebp+0x8],0x0
3002e0f5:	je     0x3002e161
3002e0f7:	and    DWORD PTR [ebp-0x10],0x0
3002e0fb:	and    DWORD PTR [ebp-0x4],0x0
3002e0ff:	lea    eax,[ebp-0x10]
3002e102:	push   eax
3002e103:	call   0x3002e016
3002e108:	mov    eax,DWORD PTR [ebp-0x10]
3002e10b:	test   eax,eax
3002e10d:	je     0x3002e153
3002e10f:	mov    ecx,esi
3002e111:	call   0x3002f0e5
3002e116:	test   eax,eax
3002e118:	je     0x3002e150
3002e11a:	and    DWORD PTR [ebp-0x14],0x0
3002e11e:	push   DWORD PTR [ebp+0x8]
3002e121:	lea    ecx,[ebp-0x14]
3002e124:	push   eax
3002e125:	mov    BYTE PTR [ebp-0x4],0x1
3002e129:	call   0x300054b7
3002e12e:	push   DWORD PTR [ebp-0x14]
3002e131:	call   DWORD PTR ds:0x300454ec
3002e137:	test   eax,eax
3002e139:	je     0x3002e147
3002e13b:	mov    eax,DWORD PTR [ebp-0x10]
3002e13e:	push   DWORD PTR [ebp-0x14]
3002e141:	mov    ecx,DWORD PTR [eax]
3002e143:	push   eax
3002e144:	call   DWORD PTR [ecx+0xc]
3002e147:	push   DWORD PTR [ebp-0x14]
3002e14a:	call   DWORD PTR ds:0x300454e8
3002e150:	mov    eax,DWORD PTR [ebp-0x10]
3002e153:	or     DWORD PTR [ebp-0x4],0xffffffff
3002e157:	test   eax,eax
3002e159:	je     0x3002e161
3002e15b:	mov    ecx,DWORD PTR [eax]
3002e15d:	push   eax
3002e15e:	call   DWORD PTR [ecx+0x8]
3002e161:	call   0x3000119d
3002e166:	ret    0x4
3002e169:	push   0xc
3002e16b:	mov    eax,0x3003fd24
3002e170:	call   0x3000116a
3002e175:	mov    esi,ecx
3002e177:	and    DWORD PTR [ebp-0x10],0x0
3002e17b:	and    DWORD PTR [ebp-0x4],0x0
3002e17f:	lea    eax,[ebp-0x10]
3002e182:	push   eax
3002e183:	call   0x3002e016
3002e188:	mov    eax,DWORD PTR [ebp-0x10]
3002e18b:	test   eax,eax
3002e18d:	je     0x3002e1c3
3002e18f:	and    DWORD PTR [ebp-0x14],0x0
3002e193:	lea    eax,[ebp-0x14]
3002e196:	push   eax
3002e197:	push   DWORD PTR [ebp+0xc]
3002e19a:	mov    ecx,esi
3002e19c:	push   DWORD PTR [ebp+0x8]
3002e19f:	mov    BYTE PTR [ebp-0x4],0x1
3002e1a3:	call   0x30005e58
3002e1a8:	mov    esi,DWORD PTR [ebp-0x14]
3002e1ab:	test   esi,esi
3002e1ad:	je     0x3002e1b9
3002e1af:	mov    eax,DWORD PTR [ebp-0x10]
3002e1b2:	push   esi
3002e1b3:	mov    ecx,DWORD PTR [eax]
3002e1b5:	push   eax
3002e1b6:	call   DWORD PTR [ecx+0xc]
3002e1b9:	push   esi
3002e1ba:	call   DWORD PTR ds:0x300454e8
3002e1c0:	mov    eax,DWORD PTR [ebp-0x10]
3002e1c3:	or     DWORD PTR [ebp-0x4],0xffffffff
3002e1c7:	test   eax,eax
3002e1c9:	je     0x3002e1d1
3002e1cb:	mov    ecx,DWORD PTR [eax]
3002e1cd:	push   eax
3002e1ce:	call   DWORD PTR [ecx+0x8]
3002e1d1:	call   0x3000119d
3002e1d6:	ret    0x8
3002e1d9:	push   0x14
3002e1db:	mov    eax,0x3003fe14
3002e1e0:	call   0x3000116a
3002e1e5:	mov    eax,ds:0x300435cc
3002e1ea:	add    eax,0x4c
3002e1ed:	push   eax
3002e1ee:	lea    ecx,[ebp-0x1c]
3002e1f1:	call   0x30006b8a
3002e1f6:	xor    edi,edi
3002e1f8:	mov    DWORD PTR [ebp-0x4],edi
3002e1fb:	mov    DWORD PTR [ebp-0x10],edi
3002e1fe:	mov    BYTE PTR [ebp-0x4],0x1
3002e202:	push   0x3002e2d0
3002e207:	lea    ecx,[ebp-0x1c]
3002e20a:	mov    DWORD PTR [ebp-0x18],edi
3002e20d:	call   0x300062d8
3002e212:	test   eax,eax
3002e214:	jns    0x3002e21c
3002e216:	push   eax
3002e217:	call   0x3002ae0b
3002e21c:	push   0x9
3002e21e:	push   DWORD PTR [ebp-0x1c]
3002e221:	lea    ecx,[ebp-0x10]
3002e224:	push   0x80000001
3002e229:	call   0x300061a4
3002e22e:	test   eax,eax
3002e230:	js     0x3002e2b9
3002e236:	cmp    DWORD PTR [ebp-0x10],0x0
3002e23a:	je     0x3002e2b9
3002e23c:	push   edi
3002e23d:	push   edi
3002e23e:	push   edi
3002e23f:	push   edi
3002e240:	push   edi
3002e241:	push   edi
3002e242:	push   edi
3002e243:	lea    eax,[ebp-0x18]
3002e246:	push   eax
3002e247:	push   edi
3002e248:	push   edi
3002e249:	push   edi
3002e24a:	push   DWORD PTR [ebp-0x10]
3002e24d:	call   DWORD PTR ds:0x30045078
3002e253:	test   eax,eax
3002e255:	jle    0x3002e261
3002e257:	movzx  eax,ax
3002e25a:	or     eax,0x80070000
3002e25f:	test   eax,eax
3002e261:	js     0x3002e2b9
3002e263:	mov    ebx,edi
3002e265:	cmp    DWORD PTR [ebp-0x18],ebx
3002e268:	jbe    0x3002e2b9
3002e26a:	push   ecx
3002e26b:	push   ecx
3002e26c:	lea    eax,[ebp-0x20]
3002e26f:	push   eax
3002e270:	push   ebx
3002e271:	lea    ecx,[ebp-0x10]
3002e274:	mov    DWORD PTR [ebp-0x20],edi
3002e277:	mov    DWORD PTR [ebp-0x14],edi
3002e27a:	call   0x3002db5b
3002e27f:	mov    edi,DWORD PTR [ebp-0x20]
3002e282:	test   edi,edi
3002e284:	je     0x3002e2a1
3002e286:	push   0x2
3002e288:	push   edi
3002e289:	push   DWORD PTR [ebp-0x10]
3002e28c:	lea    ecx,[ebp-0x14]
3002e28f:	call   0x300061a4
3002e294:	test   eax,eax
3002e296:	js     0x3002e2a1
3002e298:	push   ecx
3002e299:	lea    ecx,[ebp-0x14]
3002e29c:	call   0x3002dad6
3002e2a1:	lea    ecx,[ebp-0x14]
3002e2a4:	call   0x300014b2
3002e2a9:	push   edi
3002e2aa:	call   DWORD PTR ds:0x300454e8
3002e2b0:	inc    ebx
3002e2b1:	push   0x0
3002e2b3:	pop    edi
3002e2b4:	cmp    ebx,DWORD PTR [ebp-0x18]
3002e2b7:	jb     0x3002e26a
3002e2b9:	lea    ecx,[ebp-0x10]
3002e2bc:	call   0x300014b2
3002e2c1:	push   DWORD PTR [ebp-0x1c]
3002e2c4:	call   DWORD PTR ds:0x300454e8
3002e2ca:	call   0x3000119d
3002e2cf:	ret    
3002e2d0:	pop    esp
3002e2d1:	add    BYTE PTR [eax+0x0],dl
3002e2d4:	popa   
3002e2d5:	add    BYTE PTR [ebx+0x0],ah
3002e2d8:	imul   eax,DWORD PTR [eax],0x61
3002e2db:	add    BYTE PTR [edi+0x0],ah
3002e2de:	add    BYTE PTR gs:[ebx+0x0],dh
3002e2e2:	add    BYTE PTR [eax],al
3002e2e4:	push   0x8
3002e2e6:	mov    eax,0x3003feb4
3002e2eb:	call   0x3000116a
3002e2f0:	xor    edi,edi
3002e2f2:	mov    DWORD PTR [ebp-0x14],edi
3002e2f5:	mov    DWORD PTR [ebp-0x4],edi
3002e2f8:	mov    DWORD PTR [ebp-0x10],edi
3002e2fb:	mov    BYTE PTR [ebp-0x4],0x1
3002e2ff:	mov    edx,DWORD PTR [ebp+0x8]
3002e302:	mov    ecx,DWORD PTR [ecx+0x4c]
3002e305:	lea    eax,[ebp-0x10]
3002e308:	push   eax
3002e309:	call   0x300065a7
3002e30e:	cmp    DWORD PTR [ebp-0x10],edi
3002e311:	je     0x3002e360
3002e313:	sub    esp,0x14
3002e316:	push   DWORD PTR [ebp-0x10]
3002e319:	push   ecx
3002e31a:	lea    ecx,[ebp-0x14]
3002e31d:	call   0x3002dafe
3002e322:	test   eax,eax
3002e324:	js     0x3002e360
3002e326:	mov    eax,DWORD PTR [ebp+0xc]
3002e329:	mov    DWORD PTR [ebp+0x8],eax
3002e32c:	cmp    DWORD PTR [ebp-0x14],edi
3002e32f:	jne    0x3002e338
3002e331:	mov    edi,0x8000ffff
3002e336:	jmp    0x3002e365
3002e338:	push   0x4
3002e33a:	lea    eax,[ebp+0x8]
3002e33d:	push   eax
3002e33e:	push   0x4
3002e340:	push   edi
3002e341:	push   0x3002a354
3002e346:	push   DWORD PTR [ebp-0x14]
3002e349:	call   DWORD PTR ds:0x30045010
3002e34f:	mov    edi,eax
3002e351:	test   edi,edi
3002e353:	jle    0x3002e365
3002e355:	movzx  edi,di
3002e358:	or     edi,0x80070000
3002e35e:	jmp    0x3002e365
3002e360:	mov    edi,0x80004005
3002e365:	push   DWORD PTR [ebp-0x10]
3002e368:	call   DWORD PTR ds:0x300454e8
3002e36e:	lea    ecx,[ebp-0x14]
3002e371:	call   0x300014b2
3002e376:	mov    eax,edi
3002e378:	call   0x3000119d
3002e37d:	ret    0x8
3002e380:	push   ebp
3002e381:	mov    ebp,esp
3002e383:	push   ecx
3002e384:	mov    eax,DWORD PTR [ebp+0x8]
3002e387:	mov    ecx,DWORD PTR [eax+0x8]
3002e38a:	test   ecx,ecx
3002e38c:	jne    0x3002e395
3002e38e:	mov    eax,0x8000ffff
3002e393:	jmp    0x3002e3ef
3002e395:	mov    edx,DWORD PTR [ebp+0xc]
3002e398:	and    DWORD PTR [ebp-0x4],0x0
3002e39c:	and    DWORD PTR [ebp+0x8],0x0
3002e3a0:	push   edi
3002e3a1:	lea    eax,[ebp+0x8]
3002e3a4:	push   eax
3002e3a5:	call   0x300065a7
3002e3aa:	cmp    DWORD PTR [ebp+0x8],0x0
3002e3ae:	je     0x3002e3d6
3002e3b0:	push   0x2001f
3002e3b5:	push   DWORD PTR [ebp+0x8]
3002e3b8:	lea    ecx,[ebp-0x4]
3002e3bb:	push   0x80000001
3002e3c0:	call   0x300061a4
3002e3c5:	test   eax,eax
3002e3c7:	js     0x3002e3d6
3002e3c9:	push   ecx
3002e3ca:	lea    ecx,[ebp-0x4]
3002e3cd:	call   0x3002dad6
3002e3d2:	mov    edi,eax
3002e3d4:	jmp    0x3002e3db
3002e3d6:	mov    edi,0x80004005
3002e3db:	push   DWORD PTR [ebp+0x8]
3002e3de:	call   DWORD PTR ds:0x300454e8
3002e3e4:	lea    ecx,[ebp-0x4]
3002e3e7:	call   0x300014b2
3002e3ec:	mov    eax,edi
3002e3ee:	pop    edi
3002e3ef:	leave  
3002e3f0:	ret    0x8
3002e3f3:	push   ebp
3002e3f4:	mov    ebp,esp
3002e3f6:	push   ebx
3002e3f7:	mov    ebx,DWORD PTR [ebp+0xc]
3002e3fa:	test   ebx,ebx
3002e3fc:	jne    0x3002e405
3002e3fe:	xor    eax,eax
3002e400:	jmp    0x3002e498
3002e405:	push   esi
3002e406:	mov    esi,DWORD PTR [ebp+0x14]
3002e409:	test   esi,esi
3002e40b:	jne    0x3002e417
3002e40d:	mov    eax,0x80004003
3002e412:	jmp    0x3002e497
3002e417:	push   edi
3002e418:	mov    edi,DWORD PTR [ebp+0x8]
3002e41b:	cmp    DWORD PTR [edi+0x84],0x0
3002e422:	je     0x3002e434
3002e424:	cmp    DWORD PTR [edi+0x5c4],0x0
3002e42b:	jne    0x3002e434
3002e42d:	mov    eax,0x80004005
3002e432:	jmp    0x3002e496
3002e434:	xor    ecx,ecx
3002e436:	mov    DWORD PTR [ebp+0x14],ecx
3002e439:	test   ebx,ebx
3002e43b:	jle    0x3002e494
3002e43d:	mov    ebx,DWORD PTR [ebp+0x10]
3002e440:	push   esi
3002e441:	push   DWORD PTR [ebx+ecx*4]
3002e444:	lea    edx,[edi-0x44]
3002e447:	push   edx
3002e448:	mov    eax,DWORD PTR [edx]
3002e44a:	call   DWORD PTR [eax+0x30]
3002e44d:	mov    ebx,DWORD PTR [ebp+0xc]
3002e450:	test   eax,eax
3002e452:	js     0x3002e496
3002e454:	cmp    WORD PTR [esi],0xffff
3002e458:	jne    0x3002e486
3002e45a:	cmp    DWORD PTR [edi+0x84],0x0
3002e461:	je     0x3002e486
3002e463:	mov    eax,DWORD PTR [ebp+0x14]
3002e466:	push   esi
3002e467:	push   ecx
3002e468:	push   DWORD PTR [edi+0x5c8]
3002e46e:	mov    ecx,DWORD PTR [ebp+0x10]
3002e471:	push   DWORD PTR [edi+0x5c4]
3002e477:	push   DWORD PTR [ecx+eax*4]
3002e47a:	lea    ecx,[edi-0x44]
3002e47d:	call   0x3002f241
3002e482:	test   eax,eax
3002e484:	js     0x3002e496
3002e486:	mov    ecx,DWORD PTR [ebp+0x14]
3002e489:	inc    ecx
3002e48a:	add    esi,0x2
3002e48d:	mov    DWORD PTR [ebp+0x14],ecx
3002e490:	cmp    ecx,ebx
3002e492:	jl     0x3002e43d
3002e494:	xor    eax,eax
3002e496:	pop    edi
3002e497:	pop    esi
3002e498:	pop    ebx
3002e499:	pop    ebp
3002e49a:	ret    0x10
3002e49d:	push   ebp
3002e49e:	mov    ebp,esp
3002e4a0:	mov    eax,DWORD PTR [ebp+0x10]
3002e4a3:	test   eax,eax
3002e4a5:	jne    0x3002e4ae
3002e4a7:	mov    eax,0x80004003
3002e4ac:	jmp    0x3002e4b6
3002e4ae:	or     ecx,0xffffffff
3002e4b1:	mov    WORD PTR [eax],cx
3002e4b4:	xor    eax,eax
3002e4b6:	pop    ebp
3002e4b7:	ret    0xc
3002e4ba:	push   0x4
3002e4bc:	mov    eax,0x3003f6b4
3002e4c1:	call   0x3000116a
3002e4c6:	mov    ebx,ecx
3002e4c8:	cmp    DWORD PTR [ebp+0xc],0x0
3002e4cc:	jne    0x3002e4d5
3002e4ce:	xor    eax,eax
3002e4d0:	jmp    0x3002e55c
3002e4d5:	xor    edi,edi
3002e4d7:	mov    DWORD PTR [ebp-0x10],edi
3002e4da:	mov    ecx,DWORD PTR [ebp+0x8]
3002e4dd:	lea    eax,[ebp-0x10]
3002e4e0:	push   eax
3002e4e1:	push   DWORD PTR [ebp+0xc]
3002e4e4:	mov    DWORD PTR [ebp-0x4],edi
3002e4e7:	call   0x3000bc14
3002e4ec:	mov    esi,DWORD PTR [ebp-0x10]
3002e4ef:	test   eax,eax
3002e4f1:	js     0x3002e538
3002e4f3:	test   esi,esi
3002e4f5:	je     0x3002e538
3002e4f7:	push   esi
3002e4f8:	call   DWORD PTR ds:0x300454ec
3002e4fe:	test   eax,eax
3002e500:	je     0x3002e538
3002e502:	mov    ecx,DWORD PTR [ebp+0x18]
3002e505:	push   esi
3002e506:	call   0x30030a28
3002e50b:	test   eax,eax
3002e50d:	jns    0x3002e515
3002e50f:	push   eax
3002e510:	call   0x3002ae0b
3002e515:	mov    ecx,DWORD PTR [ebp+0x18]
3002e518:	push   0x30008e38
3002e51d:	call   0x300062d8
3002e522:	test   eax,eax
3002e524:	js     0x3002e50f
3002e526:	mov    ecx,DWORD PTR [ebp+0x1c]
3002e529:	test   ecx,ecx
3002e52b:	je     0x3002e533
3002e52d:	mov    eax,esi
3002e52f:	mov    esi,edi
3002e531:	mov    DWORD PTR [ecx],eax
3002e533:	xor    edi,edi
3002e535:	inc    edi
3002e536:	jmp    0x3002e553
3002e538:	cmp    DWORD PTR [ebx+0xc4],edi
3002e53e:	je     0x3002e553
3002e540:	cmp    DWORD PTR [ebp+0x10],0x0
3002e544:	je     0x3002e553
3002e546:	push   DWORD PTR [ebp+0x14]
3002e549:	mov    ecx,ebx
3002e54b:	push   DWORD PTR [ebp+0x10]
3002e54e:	call   0x3002e169
3002e553:	push   esi
3002e554:	call   DWORD PTR ds:0x300454e8
3002e55a:	mov    eax,edi
3002e55c:	call   0x3000119d
3002e561:	ret    0x18
3002e564:	push   ebp
3002e565:	mov    ebp,esp
3002e567:	sub    esp,0xa0
3002e56d:	mov    eax,ds:0x30043050
3002e572:	xor    eax,ebp
3002e574:	mov    DWORD PTR [ebp-0x4],eax
3002e577:	mov    eax,DWORD PTR [ebp+0x10]
3002e57a:	push   ebx
3002e57b:	mov    ebx,DWORD PTR [ebp+0x8]
3002e57e:	push   esi
3002e57f:	push   edi
3002e580:	mov    edi,DWORD PTR [ebp+0xc]
3002e583:	mov    esi,ecx
3002e585:	mov    DWORD PTR [ebp-0x9c],eax
3002e58b:	test   ebx,ebx
3002e58d:	je     0x3002e6d5
3002e593:	test   edi,edi
3002e595:	je     0x3002e6d5
3002e59b:	test   eax,eax
3002e59d:	je     0x3002e6d5
3002e5a3:	push   0xf0000000
3002e5a8:	push   0x1
3002e5aa:	xor    ecx,ecx
3002e5ac:	push   0x3002e6e8
3002e5b1:	push   ecx
3002e5b2:	mov    DWORD PTR [edi],ecx
3002e5b4:	push   edi
3002e5b5:	mov    DWORD PTR [ebp-0x94],ecx
3002e5bb:	mov    DWORD PTR [eax],ecx
3002e5bd:	call   DWORD PTR ds:0x30045070
3002e5c3:	test   eax,eax
3002e5c5:	jne    0x3002e5de
3002e5c7:	cmp    DWORD PTR [esi+0xc4],eax
3002e5cd:	je     0x3002e6d5
3002e5d3:	push   DWORD PTR [esi+0x88]
3002e5d9:	jmp    0x3002e6ce
3002e5de:	mov    ecx,ebx
3002e5e0:	xor    eax,eax
3002e5e2:	mov    DWORD PTR [ebp-0x98],eax
3002e5e8:	lea    edx,[ecx+0x2]
3002e5eb:	mov    ax,WORD PTR [ecx]
3002e5ee:	add    ecx,0x2
3002e5f1:	cmp    ax,WORD PTR [ebp-0x94]
3002e5f8:	jne    0x3002e5eb
3002e5fa:	sub    ecx,edx
3002e5fc:	sar    ecx,1
3002e5fe:	je     0x3002e6b5
3002e604:	push   0x3
3002e606:	lea    eax,[ebp-0x8c]
3002e60c:	push   ebx
3002e60d:	lea    ecx,[ebp-0x90]
3002e613:	mov    DWORD PTR [ebp-0x90],eax
3002e619:	call   0x3002f6ad
3002e61e:	mov    ecx,DWORD PTR [ebp-0x90]
3002e624:	test   ecx,ecx
3002e626:	je     0x3002e695
3002e628:	lea    edx,[ecx+0x1]
3002e62b:	mov    al,BYTE PTR [ecx]
3002e62d:	inc    ecx
3002e62e:	test   al,al
3002e630:	jne    0x3002e62b
3002e632:	sub    ecx,edx
3002e634:	lea    eax,[ecx+0x1]
3002e637:	push   eax
3002e638:	xor    eax,eax
3002e63a:	push   eax
3002e63b:	call   DWORD PTR ds:0x300451cc
3002e641:	push   eax
3002e642:	call   DWORD PTR ds:0x300451bc
3002e648:	mov    ebx,eax
3002e64a:	test   ebx,ebx
3002e64c:	je     0x3002e68f
3002e64e:	push   ebx
3002e64f:	push   DWORD PTR [ebp-0x90]
3002e655:	lea    ecx,[esi+0xd4]
3002e65b:	call   0x30032442
3002e660:	test   eax,eax
3002e662:	je     0x3002e67e
3002e664:	push   DWORD PTR [ebp-0x9c]
3002e66a:	xor    ecx,ecx
3002e66c:	push   ecx
3002e66d:	push   ecx
3002e66e:	push   eax
3002e66f:	push   ebx
3002e670:	push   DWORD PTR [edi]
3002e672:	call   DWORD PTR ds:0x3004506c
3002e678:	mov    DWORD PTR [ebp-0x98],eax
3002e67e:	push   ebx
3002e67f:	xor    eax,eax
3002e681:	push   eax
3002e682:	call   DWORD PTR ds:0x300451cc
3002e688:	push   eax
3002e689:	call   DWORD PTR ds:0x300451c4
3002e68f:	mov    ecx,DWORD PTR [ebp-0x90]
3002e695:	lea    eax,[ebp-0x8c]
3002e69b:	cmp    ecx,eax
3002e69d:	je     0x3002e6a7
3002e69f:	push   ecx
3002e6a0:	call   DWORD PTR ds:0x300452b4
3002e6a6:	pop    ecx
3002e6a7:	cmp    DWORD PTR [ebp-0x98],0x0
3002e6ae:	je     0x3002e6b5
3002e6b0:	xor    eax,eax
3002e6b2:	inc    eax
3002e6b3:	jmp    0x3002e6d7
3002e6b5:	xor    ebx,ebx
3002e6b7:	push   ebx
3002e6b8:	push   DWORD PTR [edi]
3002e6ba:	call   DWORD PTR ds:0x30045018
3002e6c0:	cmp    DWORD PTR [esi+0xc4],ebx
3002e6c6:	je     0x3002e6d5
3002e6c8:	push   DWORD PTR [esi+0x8c]
3002e6ce:	mov    ecx,esi
3002e6d0:	call   0x3002e0e3
3002e6d5:	xor    eax,eax
3002e6d7:	mov    ecx,DWORD PTR [ebp-0x4]
3002e6da:	pop    edi
3002e6db:	pop    esi
3002e6dc:	xor    ecx,ebp
3002e6de:	pop    ebx
3002e6df:	call   0x3000115c
3002e6e4:	leave  
3002e6e5:	ret    0xc
3002e6e8:	dec    ebp
3002e6e9:	add    BYTE PTR [ecx+0x0],ch
3002e6ec:	arpl   WORD PTR [eax],ax
3002e6ee:	jb     0x3002e6f0
3002e6f0:	outs   dx,DWORD PTR ds:[esi]
3002e6f1:	add    BYTE PTR [ebx+0x0],dh
3002e6f4:	outs   dx,DWORD PTR ds:[esi]
3002e6f5:	add    BYTE PTR [esi+0x0],ah
3002e6f8:	je     0x3002e6fa
3002e6fa:	and    BYTE PTR [eax],al
3002e6fc:	inc    edx
3002e6fd:	add    BYTE PTR [ecx+0x0],ah
3002e700:	jae    0x3002e702
3002e702:	add    BYTE PTR gs:[eax],ah
3002e705:	add    BYTE PTR [ebx+0x0],al
3002e708:	jb     0x3002e70a
3002e70a:	jns    0x3002e70c
3002e70c:	jo     0x3002e70e
3002e70e:	je     0x3002e710
3002e710:	outs   dx,DWORD PTR ds:[esi]
3002e711:	add    BYTE PTR [edi+0x0],ah
3002e714:	jb     0x3002e716
3002e716:	popa   
3002e717:	add    BYTE PTR [eax+0x0],dh
3002e71a:	push   0x63006900
3002e71f:	add    BYTE PTR [eax],ah
3002e721:	add    BYTE PTR [eax+0x0],dl
3002e724:	jb     0x3002e726
3002e726:	outs   dx,DWORD PTR ds:[esi]
3002e727:	add    BYTE PTR [esi+0x0],dh
3002e72a:	imul   eax,DWORD PTR [eax],0x650064
3002e730:	jb     0x3002e732
3002e732:	and    BYTE PTR [eax],al
3002e734:	jbe    0x3002e736
3002e736:	xor    DWORD PTR [eax],eax
3002e738:	add    BYTE PTR cs:[eax],dh
3002e73b:	add    BYTE PTR [eax],al
3002e73d:	add    BYTE PTR [eax-0x80],ch
3002e740:	add    BYTE PTR [eax],al
3002e742:	add    BYTE PTR [eax+0x3003fbc7],bh
3002e748:	call   0x300045c8
3002e74d:	mov    edi,ecx
3002e74f:	mov    eax,DWORD PTR [ebp+0x10]
3002e752:	mov    esi,DWORD PTR [ebp+0x8]
3002e755:	mov    ebx,DWORD PTR [ebp+0xc]
3002e758:	mov    DWORD PTR [ebp-0x84],eax
3002e75e:	mov    eax,DWORD PTR [ebp+0x14]
3002e761:	mov    DWORD PTR [ebp-0x80],eax
3002e764:	mov    eax,DWORD PTR [ebp+0x18]
3002e767:	mov    DWORD PTR [ebp-0x88],eax
3002e76d:	xor    eax,eax
3002e76f:	mov    DWORD PTR [ebp-0x7c],eax
3002e772:	mov    DWORD PTR [ebp-0x4],eax
3002e775:	mov    DWORD PTR [ebp-0x78],eax
3002e778:	lea    eax,[ebp-0x7c]
3002e77b:	mov    BYTE PTR [ebp-0x4],0x1
3002e77f:	mov    ecx,DWORD PTR [edi+0x4c]
3002e782:	push   eax
3002e783:	mov    edx,esi
3002e785:	call   0x300065a7
3002e78a:	push   0x20019
3002e78f:	push   DWORD PTR [ebp-0x7c]
3002e792:	lea    ecx,[ebp-0x78]
3002e795:	push   0x80000002
3002e79a:	call   0x300061a4
3002e79f:	test   eax,eax
3002e7a1:	jns    0x3002e7cc
3002e7a3:	cmp    DWORD PTR [edi+0xc4],0x0
3002e7aa:	je     0x3002e7bd
3002e7ac:	cmp    DWORD PTR [edi+0x7c],0x0
3002e7b0:	je     0x3002e7bd
3002e7b2:	push   esi
3002e7b3:	push   DWORD PTR [edi+0x7c]
3002e7b6:	mov    ecx,edi
3002e7b8:	call   0x3002e169
3002e7bd:	sub    esp,0x10
3002e7c0:	mov    edi,esp
3002e7c2:	push   0x3002e9b0
3002e7c7:	jmp    0x3002e87d
3002e7cc:	push   0x0
3002e7ce:	push   ebx
3002e7cf:	push   esi
3002e7d0:	push   DWORD PTR [edi+0x90]
3002e7d6:	lea    eax,[ebp-0x78]
3002e7d9:	push   0x3002e9f4
3002e7de:	push   eax
3002e7df:	mov    ecx,edi
3002e7e1:	call   0x3002e4ba
3002e7e6:	test   eax,eax
3002e7e8:	jne    0x3002e7f9
3002e7ea:	sub    esp,0x10
3002e7ed:	mov    edi,esp
3002e7ef:	push   0x3002ea10
3002e7f4:	jmp    0x3002e87d
3002e7f9:	push   0x32
3002e7fb:	lea    eax,[ebp-0x74]
3002e7fe:	push   eax
3002e7ff:	push   esi
3002e800:	call   DWORD PTR ds:0x300454d0
3002e806:	lea    eax,[ebp-0x74]
3002e809:	push   eax
3002e80a:	mov    ecx,ebx
3002e80c:	call   0x300062d8
3002e811:	test   eax,eax
3002e813:	jns    0x3002e81b
3002e815:	push   eax
3002e816:	call   0x3002ae0b
3002e81b:	push   0x30008e38
3002e820:	mov    ecx,ebx
3002e822:	call   0x300062d8
3002e827:	test   eax,eax
3002e829:	js     0x3002e815
3002e82b:	push   0x0
3002e82d:	push   ebx
3002e82e:	push   esi
3002e82f:	push   DWORD PTR [edi+0x94]
3002e835:	lea    eax,[ebp-0x78]
3002e838:	push   0x3002ea80
3002e83d:	push   eax
3002e83e:	mov    ecx,edi
3002e840:	call   0x3002e4ba
3002e845:	test   eax,eax
3002e847:	jne    0x3002e855
3002e849:	sub    esp,0x10
3002e84c:	mov    edi,esp
3002e84e:	push   0x3002ea98
3002e853:	jmp    0x3002e87d
3002e855:	push   0x0
3002e857:	push   ebx
3002e858:	push   esi
3002e859:	push   DWORD PTR [edi+0x98]
3002e85f:	lea    eax,[ebp-0x78]
3002e862:	push   0x3002eb08
3002e867:	push   eax
3002e868:	mov    ecx,edi
3002e86a:	call   0x3002e4ba
3002e86f:	test   eax,eax
3002e871:	jne    0x3002e88e
3002e873:	sub    esp,0x10
3002e876:	mov    edi,esp
3002e878:	push   0x3002eb28
3002e87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e880:	push   ecx
3002e881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e882:	call   0x3002f137
3002e887:	xor    esi,esi
3002e889:	jmp    0x3002e992
3002e88e:	push   0x3002eba0
3002e893:	mov    ecx,ebx
3002e895:	call   0x300062d8
3002e89a:	test   eax,eax
3002e89c:	js     0x3002e815
3002e8a2:	and    DWORD PTR [ebp-0x8c],0x0
3002e8a9:	push   DWORD PTR [ebp-0x84]
3002e8af:	mov    BYTE PTR [ebp-0x4],0x2
3002e8b3:	push   ebx
3002e8b4:	push   esi
3002e8b5:	push   DWORD PTR [edi+0x9c]
3002e8bb:	lea    eax,[ebp-0x78]
3002e8be:	push   0x3002ebac
3002e8c3:	push   eax
3002e8c4:	mov    ecx,edi
3002e8c6:	call   0x3002e4ba
3002e8cb:	test   eax,eax
3002e8cd:	jne    0x3002e8de
3002e8cf:	sub    esp,0x10
3002e8d2:	mov    edi,esp
3002e8d4:	push   0x3002ebc8
3002e8d9:	jmp    0x3002e979
3002e8de:	mov    ebx,DWORD PTR [ebp-0x80]
3002e8e1:	test   ebx,ebx
3002e8e3:	je     0x3002e937
3002e8e5:	mov    eax,DWORD PTR [edi+0x614]
3002e8eb:	test   eax,eax
3002e8ed:	je     0x3002e8fd
3002e8ef:	push   ebx
3002e8f0:	push   eax
3002e8f1:	lea    ecx,[ebp-0x78]
3002e8f4:	call   0x30007605
3002e8f9:	test   eax,eax
3002e8fb:	jns    0x3002e937
3002e8fd:	push   ebx
3002e8fe:	push   0x3002ec38
3002e903:	lea    ecx,[ebp-0x78]
3002e906:	call   0x30007605
3002e90b:	test   eax,eax
3002e90d:	jns    0x3002e937
3002e90f:	cmp    DWORD PTR [edi+0xc4],0x0
3002e916:	mov    eax,DWORD PTR [edi+0xa0]
3002e91c:	je     0x3002e92b
3002e91e:	test   eax,eax
3002e920:	je     0x3002e92b
3002e922:	push   esi
3002e923:	push   eax
3002e924:	mov    ecx,edi
3002e926:	call   0x3002e169
3002e92b:	sub    esp,0x10
3002e92e:	mov    edi,esp
3002e930:	push   0x3002ec40
3002e935:	jmp    0x3002e979
3002e937:	mov    eax,DWORD PTR [ebp-0x88]
3002e93d:	test   eax,eax
3002e93f:	je     0x3002e987
3002e941:	push   eax
3002e942:	push   0x3002a36c
3002e947:	lea    ecx,[ebp-0x78]
3002e94a:	call   0x3000bc14
3002e94f:	test   eax,eax
3002e951:	jns    0x3002e987
3002e953:	cmp    DWORD PTR [edi+0xc4],0x0
3002e95a:	mov    eax,DWORD PTR [edi+0xa4]
3002e960:	je     0x3002e96f
3002e962:	test   eax,eax
3002e964:	je     0x3002e96f
3002e966:	push   esi
3002e967:	push   eax
3002e968:	mov    ecx,edi
3002e96a:	call   0x3002e169
3002e96f:	sub    esp,0x10
3002e972:	mov    edi,esp
3002e974:	push   0x3002eca0
3002e979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e97c:	push   ecx
3002e97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002e97e:	call   0x3002f137
3002e983:	xor    esi,esi
3002e985:	jmp    0x3002e98a
3002e987:	xor    esi,esi
3002e989:	inc    esi
3002e98a:	push   0x0
3002e98c:	call   DWORD PTR ds:0x300454e8
3002e992:	lea    ecx,[ebp-0x78]
3002e995:	call   0x300014b2
3002e99a:	push   DWORD PTR [ebp-0x7c]
3002e99d:	call   DWORD PTR ds:0x300454e8
3002e9a3:	mov    eax,esi
3002e9a5:	call   0x300045fe
3002e9aa:	ret    0x14
3002e9ad:	nop
3002e9ae:	nop
3002e9af:	nop
3002e9b0:	push   eax
3002e9b1:	add    BYTE PTR [ecx+0x0],ah
3002e9b4:	arpl   WORD PTR [eax],ax
3002e9b6:	imul   eax,DWORD PTR [eax],0x61
3002e9b9:	add    BYTE PTR [edi+0x0],ah
3002e9bc:	add    BYTE PTR gs:[eax],ah
3002e9bf:	add    BYTE PTR [esi+0x0],ch
3002e9c2:	outs   dx,DWORD PTR ds:[esi]
3002e9c3:	add    BYTE PTR [eax+eax*1+0x20],dh
3002e9c7:	add    BYTE PTR [esi+0x0],ah
3002e9ca:	outs   dx,DWORD PTR ds:[esi]
3002e9cb:	add    BYTE PTR [ebp+0x0],dh
3002e9ce:	outs   dx,BYTE PTR ds:[esi]
3002e9cf:	add    BYTE PTR [eax+eax*1+0x20],ah
3002e9d3:	add    BYTE PTR [ecx+0x0],ch
3002e9d6:	outs   dx,BYTE PTR ds:[esi]
3002e9d7:	add    BYTE PTR [eax],ah
3002e9d9:	add    BYTE PTR [eax+eax*1+0x68],dh
3002e9dd:	add    BYTE PTR [ebp+0x0],ah
3002e9e0:	and    BYTE PTR [eax],al
3002e9e2:	jb     0x3002e9e4
3002e9e4:	add    BYTE PTR gs:[edi+0x0],ah
3002e9e8:	imul   eax,DWORD PTR [eax],0x740073
3002e9ee:	jb     0x3002e9f0
3002e9f0:	jns    0x3002e9f2
3002e9f2:	add    BYTE PTR [eax],al
3002e9f4:	inc    ebx
3002e9f5:	add    BYTE PTR [edi+0x0],ch
3002e9f8:	ins    DWORD PTR es:[edi],dx
3002e9f9:	add    BYTE PTR [eax+0x0],dh
3002e9fc:	popa   
3002e9fd:	add    BYTE PTR [esi+0x0],ch
3002ea00:	jns    0x3002ea02
3002ea02:	dec    esi
3002ea03:	add    BYTE PTR [ecx+0x0],ah
3002ea06:	ins    DWORD PTR es:[edi],dx
3002ea07:	add    BYTE PTR [ebp+0x0],ah
3002ea0a:	add    BYTE PTR [eax],al
3002ea0c:	nop
3002ea0d:	nop
3002ea0e:	nop
3002ea0f:	nop
3002ea10:	dec    ebp
3002ea11:	add    BYTE PTR [ecx+0x0],ch
3002ea14:	jae    0x3002ea16
3002ea16:	jae    0x3002ea18
3002ea18:	imul   eax,DWORD PTR [eax],0x67006e
3002ea1e:	das    
3002ea1f:	add    BYTE PTR [ecx+0x0],ch
3002ea22:	outs   dx,BYTE PTR ds:[esi]
3002ea23:	add    BYTE PTR [esi+0x0],dh
3002ea26:	popa   
3002ea27:	add    BYTE PTR [eax+eax*1+0x69],ch
3002ea2b:	add    BYTE PTR [eax+eax*1+0x20],ah
3002ea2f:	add    BYTE PTR [edi],ah
3002ea31:	add    BYTE PTR [ebx+0x0],al
3002ea34:	outs   dx,DWORD PTR ds:[esi]
3002ea35:	add    BYTE PTR [ebp+0x0],ch
3002ea38:	jo     0x3002ea3a
3002ea3a:	popa   
3002ea3b:	add    BYTE PTR [esi+0x0],ch
3002ea3e:	jns    0x3002ea40
3002ea40:	dec    esi
3002ea41:	add    BYTE PTR [ecx+0x0],ah
3002ea44:	ins    DWORD PTR es:[edi],dx
3002ea45:	add    BYTE PTR [ebp+0x0],ah
3002ea48:	daa    
3002ea49:	add    BYTE PTR [eax],ah
3002ea4b:	add    BYTE PTR [esi+0x0],ah
3002ea4e:	imul   eax,DWORD PTR [eax],0x6c0065
3002ea54:	add    BYTE PTR fs:[eax],ah
3002ea57:	add    BYTE PTR [ecx+0x0],ch
3002ea5a:	outs   dx,BYTE PTR ds:[esi]
3002ea5b:	add    BYTE PTR [eax],ah
3002ea5d:	add    BYTE PTR [eax+0x0],dh
3002ea60:	popa   
3002ea61:	add    BYTE PTR [ebx+0x0],ah
3002ea64:	imul   eax,DWORD PTR [eax],0x61
3002ea67:	add    BYTE PTR [edi+0x0],ah
3002ea6a:	add    BYTE PTR gs:[eax],ah
3002ea6d:	add    BYTE PTR [edx+0x0],dh
3002ea70:	add    BYTE PTR gs:[edi+0x0],ah
3002ea74:	imul   eax,DWORD PTR [eax],0x740073
3002ea7a:	jb     0x3002ea7c
3002ea7c:	jns    0x3002ea7e
3002ea7e:	add    BYTE PTR [eax],al
3002ea80:	push   eax
3002ea81:	add    BYTE PTR [edx+0x0],dh
3002ea84:	outs   dx,DWORD PTR ds:[esi]
3002ea85:	add    BYTE PTR [eax+eax*1+0x75],ah
3002ea89:	add    BYTE PTR [ebx+0x0],ah
3002ea8c:	je     0x3002ea8e
3002ea8e:	dec    esi
3002ea8f:	add    BYTE PTR [ecx+0x0],ah
3002ea92:	ins    DWORD PTR es:[edi],dx
3002ea93:	add    BYTE PTR [ebp+0x0],ah
3002ea96:	add    BYTE PTR [eax],al
3002ea98:	dec    ebp
3002ea99:	add    BYTE PTR [ecx+0x0],ch
3002ea9c:	jae    0x3002ea9e
3002ea9e:	jae    0x3002eaa0
3002eaa0:	imul   eax,DWORD PTR [eax],0x67006e
3002eaa6:	das    
3002eaa7:	add    BYTE PTR [ecx+0x0],ch
3002eaaa:	outs   dx,BYTE PTR ds:[esi]
3002eaab:	add    BYTE PTR [esi+0x0],dh
3002eaae:	popa   
3002eaaf:	add    BYTE PTR [eax+eax*1+0x69],ch
3002eab3:	add    BYTE PTR [eax+eax*1+0x20],ah
3002eab7:	add    BYTE PTR [edi],ah
3002eab9:	add    BYTE PTR [eax+0x0],dl
3002eabc:	jb     0x3002eabe
3002eabe:	outs   dx,DWORD PTR ds:[esi]
3002eabf:	add    BYTE PTR [eax+eax*1+0x75],ah
3002eac3:	add    BYTE PTR [ebx+0x0],ah
3002eac6:	je     0x3002eac8
3002eac8:	dec    esi
3002eac9:	add    BYTE PTR [ecx+0x0],ah
3002eacc:	ins    DWORD PTR es:[edi],dx
3002eacd:	add    BYTE PTR [ebp+0x0],ah
3002ead0:	daa    
3002ead1:	add    BYTE PTR [eax],ah
3002ead3:	add    BYTE PTR [esi+0x0],ah
3002ead6:	imul   eax,DWORD PTR [eax],0x6c0065
3002eadc:	add    BYTE PTR fs:[eax],ah
3002eadf:	add    BYTE PTR [ecx+0x0],ch
3002eae2:	outs   dx,BYTE PTR ds:[esi]
3002eae3:	add    BYTE PTR [eax],ah
3002eae5:	add    BYTE PTR [eax+0x0],dh
3002eae8:	popa   
3002eae9:	add    BYTE PTR [ebx+0x0],ah
3002eaec:	imul   eax,DWORD PTR [eax],0x61
3002eaef:	add    BYTE PTR [edi+0x0],ah
3002eaf2:	add    BYTE PTR gs:[eax],ah
3002eaf5:	add    BYTE PTR [edx+0x0],dh
3002eaf8:	add    BYTE PTR gs:[edi+0x0],ah
3002eafc:	imul   eax,DWORD PTR [eax],0x740073
3002eb02:	jb     0x3002eb04
3002eb04:	jns    0x3002eb06
3002eb06:	add    BYTE PTR [eax],al
3002eb08:	push   eax
3002eb09:	add    BYTE PTR [edx+0x0],dh
3002eb0c:	outs   dx,DWORD PTR ds:[esi]
3002eb0d:	add    BYTE PTR [eax+eax*1+0x75],ah
3002eb11:	add    BYTE PTR [ebx+0x0],ah
3002eb14:	je     0x3002eb16
3002eb16:	push   esi
3002eb17:	add    BYTE PTR [ebp+0x0],ah
3002eb1a:	jb     0x3002eb1c
3002eb1c:	jae    0x3002eb1e
3002eb1e:	imul   eax,DWORD PTR [eax],0x6e006f
3002eb24:	add    BYTE PTR [eax],al
3002eb26:	nop
3002eb27:	nop
3002eb28:	dec    ebp
3002eb29:	add    BYTE PTR [ecx+0x0],ch
3002eb2c:	jae    0x3002eb2e
3002eb2e:	jae    0x3002eb30
3002eb30:	imul   eax,DWORD PTR [eax],0x67006e
3002eb36:	das    
3002eb37:	add    BYTE PTR [ecx+0x0],ch
3002eb3a:	outs   dx,BYTE PTR ds:[esi]
3002eb3b:	add    BYTE PTR [esi+0x0],dh
3002eb3e:	popa   
3002eb3f:	add    BYTE PTR [eax+eax*1+0x69],ch
3002eb43:	add    BYTE PTR [eax+eax*1+0x20],ah
3002eb47:	add    BYTE PTR [edi],ah
3002eb49:	add    BYTE PTR [eax+0x0],dl
3002eb4c:	jb     0x3002eb4e
3002eb4e:	outs   dx,DWORD PTR ds:[esi]
3002eb4f:	add    BYTE PTR [eax+eax*1+0x75],ah
3002eb53:	add    BYTE PTR [ebx+0x0],ah
3002eb56:	je     0x3002eb58
3002eb58:	push   esi
3002eb59:	add    BYTE PTR [ebp+0x0],ah
3002eb5c:	jb     0x3002eb5e
3002eb5e:	jae    0x3002eb60
3002eb60:	imul   eax,DWORD PTR [eax],0x6e006f
3002eb66:	daa    
3002eb67:	add    BYTE PTR [eax],ah
3002eb69:	add    BYTE PTR [esi+0x0],ah
3002eb6c:	imul   eax,DWORD PTR [eax],0x6c0065
3002eb72:	add    BYTE PTR fs:[eax],ah
3002eb75:	add    BYTE PTR [ecx+0x0],ch
3002eb78:	outs   dx,BYTE PTR ds:[esi]
3002eb79:	add    BYTE PTR [eax],ah
3002eb7b:	add    BYTE PTR [eax+0x0],dh
3002eb7e:	popa   
3002eb7f:	add    BYTE PTR [ebx+0x0],ah
3002eb82:	imul   eax,DWORD PTR [eax],0x61
3002eb85:	add    BYTE PTR [edi+0x0],ah
3002eb88:	add    BYTE PTR gs:[eax],ah
3002eb8b:	add    BYTE PTR [edx+0x0],dh
3002eb8e:	add    BYTE PTR gs:[edi+0x0],ah
3002eb92:	imul   eax,DWORD PTR [eax],0x740073
3002eb98:	jb     0x3002eb9a
3002eb9a:	jns    0x3002eb9c
3002eb9c:	add    BYTE PTR [eax],al
3002eb9e:	nop
3002eb9f:	nop
3002eba0:	outs   dx,BYTE PTR ds:[esi]
3002eba1:	add    BYTE PTR [edi],ch
3002eba3:	add    BYTE PTR [ecx+0x0],ah
3002eba6:	cmp    eax,DWORD PTR [eax]
3002eba8:	add    BYTE PTR [eax],al
3002ebaa:	nop
3002ebab:	nop
3002ebac:	dec    ebp
3002ebad:	add    BYTE PTR [ecx+0x0],ch
3002ebb0:	outs   dx,BYTE PTR ds:[esi]
3002ebb1:	add    BYTE PTR [ebp+0x0],al
3002ebb4:	add    BYTE PTR fs:[ecx+0x0],ch
3002ebb8:	je     0x3002ebba
3002ebba:	imul   eax,DWORD PTR [eax],0x6e006f
3002ebc0:	add    BYTE PTR [eax],al
3002ebc2:	nop
3002ebc3:	nop
3002ebc4:	nop
3002ebc5:	nop
3002ebc6:	nop
3002ebc7:	nop
3002ebc8:	dec    ebp
3002ebc9:	add    BYTE PTR [ecx+0x0],ch
3002ebcc:	jae    0x3002ebce
3002ebce:	jae    0x3002ebd0
3002ebd0:	imul   eax,DWORD PTR [eax],0x67006e
3002ebd6:	das    
3002ebd7:	add    BYTE PTR [ecx+0x0],ch
3002ebda:	outs   dx,BYTE PTR ds:[esi]
3002ebdb:	add    BYTE PTR [esi+0x0],dh
3002ebde:	popa   
3002ebdf:	add    BYTE PTR [eax+eax*1+0x69],ch
3002ebe3:	add    BYTE PTR [eax+eax*1+0x20],ah
3002ebe7:	add    BYTE PTR [edi],ah
3002ebe9:	add    BYTE PTR [ebp+0x0],cl
3002ebec:	imul   eax,DWORD PTR [eax],0x45006e
3002ebf2:	add    BYTE PTR fs:[ecx+0x0],ch
3002ebf6:	je     0x3002ebf8
3002ebf8:	imul   eax,DWORD PTR [eax],0x6e006f
3002ebfe:	daa    
3002ebff:	add    BYTE PTR [eax],ah
3002ec01:	add    BYTE PTR [esi+0x0],ah
3002ec04:	imul   eax,DWORD PTR [eax],0x6c0065
3002ec0a:	add    BYTE PTR fs:[eax],ah
3002ec0d:	add    BYTE PTR [ecx+0x0],ch
3002ec10:	outs   dx,BYTE PTR ds:[esi]
3002ec11:	add    BYTE PTR [eax],ah
3002ec13:	add    BYTE PTR [eax+0x0],dh
3002ec16:	popa   
3002ec17:	add    BYTE PTR [ebx+0x0],ah
3002ec1a:	imul   eax,DWORD PTR [eax],0x61
3002ec1d:	add    BYTE PTR [edi+0x0],ah
3002ec20:	add    BYTE PTR gs:[eax],ah
3002ec23:	add    BYTE PTR [edx+0x0],dh
3002ec26:	add    BYTE PTR gs:[edi+0x0],ah
3002ec2a:	imul   eax,DWORD PTR [eax],0x740073
3002ec30:	jb     0x3002ec32
3002ec32:	jns    0x3002ec34
3002ec34:	add    BYTE PTR [eax],al
3002ec36:	nop
3002ec37:	nop
3002ec38:	dec    ecx
3002ec39:	add    BYTE PTR [eax+eax*1+0x0],al
3002ec3d:	add    BYTE PTR [eax+0x69004d90],dl
3002ec43:	add    BYTE PTR [ebx+0x0],dh
3002ec46:	jae    0x3002ec48
3002ec48:	imul   eax,DWORD PTR [eax],0x67006e
3002ec4e:	das    
3002ec4f:	add    BYTE PTR [ecx+0x0],ch
3002ec52:	outs   dx,BYTE PTR ds:[esi]
3002ec53:	add    BYTE PTR [esi+0x0],dh
3002ec56:	popa   
3002ec57:	add    BYTE PTR [eax+eax*1+0x69],ch
3002ec5b:	add    BYTE PTR [eax+eax*1+0x20],ah
3002ec5f:	add    BYTE PTR [edi],ah
3002ec61:	add    BYTE PTR [ecx+0x0],cl
3002ec64:	inc    esp
3002ec65:	add    BYTE PTR [edi],ah
3002ec67:	add    BYTE PTR [eax],ah
3002ec69:	add    BYTE PTR [esi+0x0],ah
3002ec6c:	imul   eax,DWORD PTR [eax],0x6c0065
3002ec72:	add    BYTE PTR fs:[eax],ah
3002ec75:	add    BYTE PTR [ecx+0x0],ch
3002ec78:	outs   dx,BYTE PTR ds:[esi]
3002ec79:	add    BYTE PTR [eax],ah
3002ec7b:	add    BYTE PTR [eax+0x0],dh
3002ec7e:	popa   
3002ec7f:	add    BYTE PTR [ebx+0x0],ah
3002ec82:	imul   eax,DWORD PTR [eax],0x61
3002ec85:	add    BYTE PTR [edi+0x0],ah
3002ec88:	add    BYTE PTR gs:[eax],ah
3002ec8b:	add    BYTE PTR [edx+0x0],dh
3002ec8e:	add    BYTE PTR gs:[edi+0x0],ah
3002ec92:	imul   eax,DWORD PTR [eax],0x740073
3002ec98:	jb     0x3002ec9a
3002ec9a:	jns    0x3002ec9c
3002ec9c:	add    BYTE PTR [eax],al
3002ec9e:	nop
3002ec9f:	nop
3002eca0:	dec    ebp
3002eca1:	add    BYTE PTR [ecx+0x0],ch
3002eca4:	jae    0x3002eca6
3002eca6:	jae    0x3002eca8
3002eca8:	imul   eax,DWORD PTR [eax],0x67006e
3002ecae:	das    
3002ecaf:	add    BYTE PTR [ecx+0x0],ch
3002ecb2:	outs   dx,BYTE PTR ds:[esi]
3002ecb3:	add    BYTE PTR [esi+0x0],dh
3002ecb6:	popa   
3002ecb7:	add    BYTE PTR [eax+eax*1+0x69],ch
3002ecbb:	add    BYTE PTR [eax+eax*1+0x20],ah
3002ecbf:	add    BYTE PTR [edi],ah
3002ecc1:	add    BYTE PTR [ecx+0x0],cl
3002ecc4:	outs   dx,BYTE PTR ds:[esi]
3002ecc5:	add    BYTE PTR [eax+0x0],dh
3002ecc8:	jb     0x3002ecca
3002ecca:	outs   dx,DWORD PTR ds:[esi]
3002eccb:	add    BYTE PTR [ebx+0x0],ah
3002ecce:	push   ebx
3002eccf:	add    BYTE PTR [ebp+0x0],ah
3002ecd2:	jb     0x3002ecd4
3002ecd4:	jbe    0x3002ecd6
3002ecd6:	add    BYTE PTR gs:[edx+0x0],dh
3002ecda:	xor    eax,DWORD PTR [eax]
3002ecdc:	xor    al,BYTE PTR [eax]
3002ecde:	daa    
3002ecdf:	add    BYTE PTR [eax],ah
3002ece1:	add    BYTE PTR [esi+0x0],ah
3002ece4:	imul   eax,DWORD PTR [eax],0x6c0065
3002ecea:	add    BYTE PTR fs:[eax],ah
3002eced:	add    BYTE PTR [ecx+0x0],ch
3002ecf0:	outs   dx,BYTE PTR ds:[esi]
3002ecf1:	add    BYTE PTR [eax],ah
3002ecf3:	add    BYTE PTR [eax+0x0],dh
3002ecf6:	popa   
3002ecf7:	add    BYTE PTR [ebx+0x0],ah
3002ecfa:	imul   eax,DWORD PTR [eax],0x61
3002ecfd:	add    BYTE PTR [edi+0x0],ah
3002ed00:	add    BYTE PTR gs:[eax],ah
3002ed03:	add    BYTE PTR [edx+0x0],dh
3002ed06:	add    BYTE PTR gs:[edi+0x0],ah
3002ed0a:	imul   eax,DWORD PTR [eax],0x740073
3002ed10:	jb     0x3002ed12
3002ed12:	jns    0x3002ed14
3002ed14:	add    BYTE PTR [eax],al
3002ed16:	push   0x94
3002ed1b:	mov    eax,0x3003f86c
3002ed20:	call   0x300045c8
3002ed25:	mov    ebx,ecx
3002ed27:	mov    eax,DWORD PTR [ebp+0x14]
3002ed2a:	mov    esi,DWORD PTR [ebp+0x8]
3002ed2d:	mov    DWORD PTR [ebp-0x9c],eax
3002ed33:	test   eax,eax
3002ed35:	je     0x3002ed6b
3002ed37:	cmp    DWORD PTR [ebp+0x10],0x0
3002ed3b:	je     0x3002ed6b
3002ed3d:	xor    edi,edi
3002ed3f:	cmp    DWORD PTR [esi],edi
3002ed41:	je     0x3002ed6b
3002ed43:	push   eax
3002ed44:	push   edi
3002ed45:	push   edi
3002ed46:	push   DWORD PTR [ebp+0xc]
3002ed49:	push   DWORD PTR [ebp+0x10]
3002ed4c:	call   DWORD PTR ds:0x30045068
3002ed52:	test   eax,eax
3002ed54:	jne    0x3002ed75
3002ed56:	cmp    DWORD PTR [ebx+0xc4],edi
3002ed5c:	je     0x3002ed6b
3002ed5e:	push   DWORD PTR [ebx+0xa8]
3002ed64:	mov    ecx,ebx
3002ed66:	call   0x3002e0e3
3002ed6b:	xor    eax,eax
3002ed6d:	call   0x300045fe
3002ed72:	ret    0x10
3002ed75:	push   0x3
3002ed77:	push   DWORD PTR [esi]
3002ed79:	lea    eax,[ebp-0x94]
3002ed7f:	lea    ecx,[ebp-0x98]
3002ed85:	mov    DWORD PTR [ebp-0x98],eax
3002ed8b:	call   0x3002f6ad
3002ed90:	mov    DWORD PTR [ebp-0x4],edi
3002ed93:	mov    ecx,DWORD PTR [ebp-0x98]
3002ed99:	test   ecx,ecx
3002ed9b:	je     0x3002ede5
3002ed9d:	mov    edx,ecx
3002ed9f:	lea    esi,[edx+0x1]
3002eda2:	mov    al,BYTE PTR [edx]
3002eda4:	inc    edx
3002eda5:	test   al,al
3002eda7:	jne    0x3002eda2
3002eda9:	sub    edx,esi
3002edab:	lea    eax,[edx+0x1]
3002edae:	push   eax
3002edaf:	push   ecx
3002edb0:	call   DWORD PTR ds:0x30045320
3002edb6:	mov    esi,DWORD PTR [ebp-0x98]
3002edbc:	pop    ecx
3002edbd:	pop    ecx
3002edbe:	push   edi
3002edbf:	push   esi
3002edc0:	call   DWORD PTR ds:0x3004520c
3002edc6:	push   eax
3002edc7:	mov    eax,DWORD PTR [ebp-0x9c]
3002edcd:	push   esi
3002edce:	push   DWORD PTR [eax]
3002edd0:	call   DWORD PTR ds:0x30045064
3002edd6:	mov    ecx,DWORD PTR [ebp-0x98]
3002eddc:	test   eax,eax
3002edde:	je     0x3002ede5
3002ede0:	xor    edi,edi
3002ede2:	inc    edi
3002ede3:	jmp    0x3002ee00
3002ede5:	cmp    DWORD PTR [ebx+0xc4],edi
3002edeb:	je     0x3002ee00
3002eded:	push   DWORD PTR [ebx+0xac]
3002edf3:	mov    ecx,ebx
3002edf5:	call   0x3002e0e3
3002edfa:	mov    ecx,DWORD PTR [ebp-0x98]
3002ee00:	lea    eax,[ebp-0x94]
3002ee06:	cmp    ecx,eax
3002ee08:	je     0x3002ee12
3002ee0a:	push   ecx
3002ee0b:	call   DWORD PTR ds:0x300452b4
3002ee11:	pop    ecx
3002ee12:	mov    eax,edi
3002ee14:	jmp    0x3002ed6d
3002ee19:	push   0x60
3002ee1b:	mov    eax,0x3003f80c
3002ee20:	call   0x300045c8
3002ee25:	mov    esi,ecx
3002ee27:	cmp    DWORD PTR [ebp+0x8],0x0
3002ee2b:	mov    eax,DWORD PTR [ebp+0xc]
3002ee2e:	mov    DWORD PTR [ebp-0x6c],eax
3002ee31:	mov    eax,DWORD PTR [ebp+0x14]
3002ee34:	je     0x3002ee61
3002ee36:	test   eax,eax
3002ee38:	je     0x3002ee61
3002ee3a:	push   0x2
3002ee3c:	xor    ebx,ebx
3002ee3e:	push   ebx
3002ee3f:	push   eax
3002ee40:	call   DWORD PTR ds:0x30045210
3002ee46:	mov    edi,eax
3002ee48:	test   edi,edi
3002ee4a:	jne    0x3002ee6b
3002ee4c:	cmp    DWORD PTR [esi+0xc4],ebx
3002ee52:	je     0x3002ee61
3002ee54:	push   DWORD PTR [esi+0xb0]
3002ee5a:	mov    ecx,esi
3002ee5c:	call   0x3002e0e3
3002ee61:	xor    eax,eax
3002ee63:	call   0x300045fe
3002ee68:	ret    0x14
3002ee6b:	mov    DWORD PTR [ebp-0x5c],ebx
3002ee6e:	push   DWORD PTR [ebp+0x10]
3002ee71:	lea    ecx,[ebp-0x5c]
3002ee74:	push   edi
3002ee75:	mov    DWORD PTR [ebp-0x4],ebx
3002ee78:	call   0x300054b7
3002ee7d:	push   edi
3002ee7e:	call   DWORD PTR ds:0x30045168
3002ee84:	push   DWORD PTR [ebp+0x18]
3002ee87:	mov    ecx,esi
3002ee89:	push   DWORD PTR [ebp-0x5c]
3002ee8c:	push   DWORD PTR [ebp+0x8]
3002ee8f:	call   0x3002efe8
3002ee94:	mov    edi,DWORD PTR ds:0x300454e8
3002ee9a:	test   eax,eax
3002ee9c:	jne    0x3002efb8
3002eea2:	push   DWORD PTR [ebp-0x5c]
3002eea5:	call   edi
3002eea7:	mov    eax,ebx
3002eea9:	mov    DWORD PTR [ebp-0x5c],ebx
3002eeac:	mov    DWORD PTR [ebp-0x60],eax
3002eeaf:	mov    BYTE PTR [ebp-0x4],0x1
3002eeb3:	mov    ecx,DWORD PTR [esi+0xc]
3002eeb6:	test   ecx,ecx
3002eeb8:	je     0x3002ef99
3002eebe:	mov    eax,DWORD PTR [ecx]
3002eec0:	lea    edx,[ebp-0x60]
3002eec3:	push   edx
3002eec4:	push   0x3002efc8
3002eec9:	push   0x3002efd8
3002eece:	push   ecx
3002eecf:	call   DWORD PTR [eax+0xc]
3002eed2:	test   eax,eax
3002eed4:	js     0x3002ef82
3002eeda:	cmp    DWORD PTR [ebp-0x60],0x0
3002eede:	je     0x3002ef82
3002eee4:	xor    eax,eax
3002eee6:	push   0x40
3002eee8:	mov    WORD PTR [ebp-0x58],ax
3002eeec:	lea    eax,[ebp-0x56]
3002eeef:	push   ebx
3002eef0:	push   eax
3002eef1:	call   0x300011b1
3002eef6:	or     DWORD PTR [ebp-0x68],0xffffffff
3002eefa:	add    esp,0xc
3002eefd:	mov    DWORD PTR [ebp-0x64],ebx
3002ef00:	lea    edx,[ebp-0x64]
3002ef03:	push   edx
3002ef04:	mov    edx,0x3000cf54
3002ef09:	mov    BYTE PTR [ebp-0x4],0x2
3002ef0d:	mov    eax,DWORD PTR [esi+0xc]
3002ef10:	push   edx
3002ef11:	mov    ecx,DWORD PTR [eax]
3002ef13:	push   edx
3002ef14:	push   eax
3002ef15:	call   DWORD PTR [ecx+0xc]
3002ef18:	test   eax,eax
3002ef1a:	js     0x3002ef2d
3002ef1c:	mov    eax,DWORD PTR [ebp-0x64]
3002ef1f:	test   eax,eax
3002ef21:	je     0x3002ef2d
3002ef23:	mov    ecx,DWORD PTR [eax]
3002ef25:	lea    edx,[ebp-0x68]
3002ef28:	push   edx
3002ef29:	push   eax
3002ef2a:	call   DWORD PTR [ecx+0xc]
3002ef2d:	push   0xa
3002ef2f:	push   0x21
3002ef31:	lea    eax,[ebp-0x58]
3002ef34:	push   eax
3002ef35:	push   DWORD PTR [ebp+0x10]
3002ef38:	call   DWORD PTR ds:0x30045324
3002ef3e:	mov    eax,DWORD PTR [ebp-0x60]
3002ef41:	add    esp,0x10
3002ef44:	mov    ecx,DWORD PTR [eax]
3002ef46:	lea    edx,[ebp-0x5c]
3002ef49:	push   edx
3002ef4a:	lea    edx,[ebp-0x58]
3002ef4d:	push   edx
3002ef4e:	push   DWORD PTR [ebp-0x68]
3002ef51:	push   DWORD PTR [ebp-0x6c]
3002ef54:	push   eax
3002ef55:	call   DWORD PTR [ecx+0xc]
3002ef58:	test   eax,eax
3002ef5a:	jns    0x3002ef71
3002ef5c:	cmp    DWORD PTR [esi+0xc4],ebx
3002ef62:	je     0x3002ef71
3002ef64:	push   DWORD PTR [esi+0xb4]
3002ef6a:	mov    ecx,esi
3002ef6c:	call   0x3002e0e3
3002ef71:	mov    BYTE PTR [ebp-0x4],0x1
3002ef75:	mov    eax,DWORD PTR [ebp-0x64]
3002ef78:	test   eax,eax
3002ef7a:	je     0x3002ef82
3002ef7c:	mov    ecx,DWORD PTR [eax]
3002ef7e:	push   eax
3002ef7f:	call   DWORD PTR [ecx+0x8]
3002ef82:	push   DWORD PTR [ebp+0x18]
3002ef85:	mov    ecx,esi
3002ef87:	push   DWORD PTR [ebp-0x5c]
3002ef8a:	push   DWORD PTR [ebp+0x8]
3002ef8d:	call   0x3002efe8
3002ef92:	test   eax,eax
3002ef94:	jne    0x3002efa8
3002ef96:	mov    eax,DWORD PTR [ebp-0x60]
3002ef99:	mov    BYTE PTR [ebp-0x4],bl
3002ef9c:	test   eax,eax
3002ef9e:	je     0x3002efbb
3002efa0:	mov    ecx,DWORD PTR [eax]
3002efa2:	push   eax
3002efa3:	call   DWORD PTR [ecx+0x8]
3002efa6:	jmp    0x3002efbb
3002efa8:	mov    BYTE PTR [ebp-0x4],bl
3002efab:	mov    eax,DWORD PTR [ebp-0x60]
3002efae:	test   eax,eax
3002efb0:	je     0x3002efb8
3002efb2:	mov    ecx,DWORD PTR [eax]
3002efb4:	push   eax
3002efb5:	call   DWORD PTR [ecx+0x8]
3002efb8:	xor    ebx,ebx
3002efba:	inc    ebx
3002efbb:	push   DWORD PTR [ebp-0x5c]
3002efbe:	call   edi
3002efc0:	mov    eax,ebx
3002efc2:	jmp    0x3002ee63
3002efc7:	nop
3002efc8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
3002efca:	xlat   BYTE PTR ds:[ebx]
3002efcb:	lock and al,bh
3002efce:	mov    dh,0x4a
3002efd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002efd1:	fld    st(7)
3002efd3:	call   DWORD PTR [ebx]
3002efd5:	add    dh,BYTE PTR [eax+edx*1-0xa]
3002efd9:	outs   dx,BYTE PTR ds:[esi]
3002efda:	jo     0x3002efc5
3002efdc:	jbe    0x3002f02d
3002efde:	outs   dx,BYTE PTR ds:[esi]
3002efdf:	dec    esp
3002efe0:	mov    esi,eax
3002efe2:	outs   dx,BYTE PTR ds:[esi]
3002efe3:	inc    esp
3002efe4:	test   DWORD PTR [eax+0x47],edx
3002efe7:	or     edx,DWORD PTR [ebp-0x75]
3002efea:	in     al,dx
3002efeb:	sub    esp,0x8c
3002eff1:	mov    eax,ds:0x30043050
3002eff6:	xor    eax,ebp
3002eff8:	mov    DWORD PTR [ebp-0x4],eax
3002effb:	cmp    DWORD PTR [ebp+0x10],0x0
3002efff:	mov    eax,DWORD PTR [ebp+0xc]
3002f002:	push   ebx
3002f003:	mov    DWORD PTR [ebp-0x8c],ecx
3002f009:	je     0x3002f0d4
3002f00f:	cmp    DWORD PTR [ebp+0x8],0x0
3002f013:	je     0x3002f0d4
3002f019:	test   eax,eax
3002f01b:	je     0x3002f0d4
3002f021:	xor    ebx,ebx
3002f023:	cmp    WORD PTR [eax],bx
3002f026:	je     0x3002f0d4
3002f02c:	push   edi
3002f02d:	lea    ecx,[ebp-0x84]
3002f033:	push   0x3
3002f035:	mov    DWORD PTR [ebp-0x88],ecx
3002f03b:	push   eax
3002f03c:	lea    ecx,[ebp-0x88]
3002f042:	mov    edi,ebx
3002f044:	call   0x3002f6ad
3002f049:	mov    ecx,DWORD PTR [ebp-0x88]
3002f04f:	test   ecx,ecx
3002f051:	je     0x3002f0bd
3002f053:	lea    edx,[ecx+0x1]
3002f056:	mov    al,BYTE PTR [ecx]
3002f058:	inc    ecx
3002f059:	test   al,al
3002f05b:	jne    0x3002f056
3002f05d:	sub    ecx,edx
3002f05f:	push   esi
3002f060:	lea    eax,[ecx+0x1]
3002f063:	push   eax
3002f064:	push   ebx
3002f065:	mov    ebx,DWORD PTR ds:0x300451cc
3002f06b:	call   ebx
3002f06d:	push   eax
3002f06e:	call   DWORD PTR ds:0x300451bc
3002f074:	mov    esi,eax
3002f076:	test   esi,esi
3002f078:	je     0x3002f0b6
3002f07a:	mov    ecx,DWORD PTR [ebp-0x8c]
3002f080:	push   esi
3002f081:	push   DWORD PTR [ebp-0x88]
3002f087:	add    ecx,0xd4
3002f08d:	call   0x30032442
3002f092:	test   eax,eax
3002f094:	je     0x3002f0aa
3002f096:	push   0x0
3002f098:	push   0x0
3002f09a:	push   DWORD PTR [ebp+0x10]
3002f09d:	push   eax
3002f09e:	push   esi
3002f09f:	push   DWORD PTR [ebp+0x8]
3002f0a2:	call   DWORD PTR ds:0x30045060
3002f0a8:	mov    edi,eax
3002f0aa:	push   esi
3002f0ab:	push   0x0
3002f0ad:	call   ebx
3002f0af:	push   eax
3002f0b0:	call   DWORD PTR ds:0x300451c4
3002f0b6:	mov    ecx,DWORD PTR [ebp-0x88]
3002f0bc:	pop    esi
3002f0bd:	lea    eax,[ebp-0x84]
3002f0c3:	cmp    ecx,eax
3002f0c5:	je     0x3002f0cf
3002f0c7:	push   ecx
3002f0c8:	call   DWORD PTR ds:0x300452b4
3002f0ce:	pop    ecx
3002f0cf:	mov    eax,edi
3002f0d1:	pop    edi
3002f0d2:	jmp    0x3002f0d6
3002f0d4:	xor    eax,eax
3002f0d6:	mov    ecx,DWORD PTR [ebp-0x4]
3002f0d9:	xor    ecx,ebp
3002f0db:	pop    ebx
3002f0dc:	call   0x3000115c
3002f0e1:	leave  
3002f0e2:	ret    0xc
3002f0e5:	push   ebp
3002f0e6:	mov    ebp,esp
3002f0e8:	sub    esp,0x18
3002f0eb:	mov    eax,ds:0x30043050
3002f0f0:	xor    eax,ebp
3002f0f2:	mov    DWORD PTR [ebp-0x4],eax
3002f0f5:	push   esi
3002f0f6:	mov    esi,ecx
3002f0f8:	push   edi
3002f0f9:	lea    edi,[esi+0xc0]
3002f0ff:	cmp    DWORD PTR [edi],0x0
3002f102:	jne    0x3002f127
3002f104:	mov    eax,DWORD PTR [esi]
3002f106:	lea    ecx,[ebp-0x14]
3002f109:	push   ecx
3002f10a:	push   0xffffdecb
3002f10f:	push   esi
3002f110:	call   DWORD PTR [eax+0x18]
3002f113:	test   eax,eax
3002f115:	js     0x3002f127
3002f117:	mov    ecx,DWORD PTR [esi+0x4c]
3002f11a:	push   0x0
3002f11c:	push   edi
3002f11d:	push   0x0
3002f11f:	lea    edx,[ebp-0x14]
3002f122:	call   0x3000bcdc
3002f127:	mov    eax,DWORD PTR [edi]
3002f129:	mov    ecx,DWORD PTR [ebp-0x4]
3002f12c:	pop    edi
3002f12d:	xor    ecx,ebp
3002f12f:	pop    esi
3002f130:	call   0x3000115c
3002f135:	leave  
3002f136:	ret    
3002f137:	push   0x4
3002f139:	mov    eax,0x3003fe64
3002f13e:	call   0x3000116a
3002f143:	push   DWORD PTR [ebp+0xc]
3002f146:	lea    ecx,[ebp-0x10]
3002f149:	call   0x30001488
3002f14e:	mov    ebx,eax
3002f150:	and    DWORD PTR [ebp-0x4],0x0
3002f154:	push   0x3002a390
3002f159:	lea    ecx,[ebp+0xc]
3002f15c:	call   0x30001488
3002f161:	sub    esp,0x10
3002f164:	mov    BYTE PTR [ebp-0x4],0x1
3002f168:	mov    edi,esp
3002f16a:	push   DWORD PTR [ebx]
3002f16c:	lea    esi,[ebp+0x10]
3002f16f:	push   DWORD PTR [eax]
3002f171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f174:	push   0x2
3002f176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f177:	call   0x300066a6
3002f17c:	mov    esi,DWORD PTR ds:0x300454e8
3002f182:	push   DWORD PTR [ebp+0xc]
3002f185:	call   esi
3002f187:	push   DWORD PTR [ebp-0x10]
3002f18a:	call   esi
3002f18c:	call   0x3000119d
3002f191:	ret    0x18
3002f194:	push   ebp
3002f195:	mov    ebp,esp
3002f197:	push   esi
3002f198:	push   edi
3002f199:	push   DWORD PTR [ebp+0x28]
3002f19c:	lea    esi,[ebp+0x18]
3002f19f:	sub    esp,0x10
3002f1a2:	mov    edi,esp
3002f1a4:	push   DWORD PTR [ebp+0x14]
3002f1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f1a8:	push   DWORD PTR [ebp+0x10]
3002f1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f1ac:	push   DWORD PTR [ebp+0xc]
3002f1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f1b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f1b1:	call   0x300397f2
3002f1b6:	pop    edi
3002f1b7:	pop    esi
3002f1b8:	pop    ebp
3002f1b9:	ret    0x24
3002f1bc:	push   ebp
3002f1bd:	mov    ebp,esp
3002f1bf:	push   DWORD PTR [ebp+0x1c]
3002f1c2:	push   DWORD PTR [ebp+0x18]
3002f1c5:	push   DWORD PTR [ebp+0x14]
3002f1c8:	push   DWORD PTR [ebp+0x10]
3002f1cb:	push   DWORD PTR [ebp+0xc]
3002f1ce:	call   0x30039853
3002f1d3:	pop    ebp
3002f1d4:	ret    0x18
3002f1d7:	push   ebp
3002f1d8:	mov    ebp,esp
3002f1da:	sub    esp,0x20
3002f1dd:	push   ebx
3002f1de:	push   esi
3002f1df:	push   edi
3002f1e0:	push   DWORD PTR [ebp+0x8]
3002f1e3:	lea    ecx,[ebp+0x8]
3002f1e6:	call   0x30001488
3002f1eb:	and    DWORD PTR [ebp-0x20],0x0
3002f1ef:	mov    esi,DWORD PTR [ebp+0x8]
3002f1f2:	push   0x6
3002f1f4:	pop    ecx
3002f1f5:	xor    eax,eax
3002f1f7:	lea    edi,[ebp-0x1c]
3002f1fa:	rep stos DWORD PTR es:[edi],eax
3002f1fc:	push   esi
3002f1fd:	stos   WORD PTR es:[edi],ax
3002f1ff:	call   DWORD PTR ds:0x300454ec
3002f205:	xor    ecx,ecx
3002f207:	mov    WORD PTR [esi+eax*2-0x2],cx
3002f20c:	mov    eax,0x414
3002f211:	mov    WORD PTR [ebp-0x10],ax
3002f215:	lea    eax,[ebp-0x20]
3002f218:	push   eax
3002f219:	mov    DWORD PTR [ebp-0x1c],0x3
3002f220:	mov    DWORD PTR [ebp-0x18],esi
3002f223:	call   DWORD PTR ds:0x300455fc
3002f229:	mov    ebx,eax
3002f22b:	neg    ebx
3002f22d:	sbb    bl,bl
3002f22f:	push   esi
3002f230:	inc    bl
3002f232:	call   DWORD PTR ds:0x300454e8
3002f238:	pop    edi
3002f239:	pop    esi
3002f23a:	mov    al,bl
3002f23c:	pop    ebx
3002f23d:	leave  
3002f23e:	ret    0x4
3002f241:	push   0x18
3002f243:	mov    eax,0x3003f704
3002f248:	call   0x3000116a
3002f24d:	mov    DWORD PTR [ebp-0x20],ecx
3002f250:	mov    edi,DWORD PTR [ebp+0x18]
3002f253:	xor    eax,eax
3002f255:	mov    WORD PTR [edi],ax
3002f258:	lea    eax,[ebp-0x24]
3002f25b:	push   eax
3002f25c:	lea    eax,[ebp-0x1c]
3002f25f:	push   eax
3002f260:	lea    eax,[ebp-0x18]
3002f263:	push   eax
3002f264:	lea    eax,[ebp-0x14]
3002f267:	xor    ebx,ebx
3002f269:	push   eax
3002f26a:	push   DWORD PTR [ebp+0x8]
3002f26d:	mov    DWORD PTR [ebp-0x18],ebx
3002f270:	mov    DWORD PTR [ebp-0x24],ebx
3002f273:	mov    DWORD PTR [ebp-0x14],ebx
3002f276:	mov    DWORD PTR [ebp-0x1c],ebx
3002f279:	call   DWORD PTR ds:0x30043000
3002f27f:	test   al,al
3002f281:	je     0x3002f2f2
3002f283:	cmp    DWORD PTR [ebp-0x18],ebx
3002f286:	jbe    0x3002f2f2
3002f288:	mov    ecx,DWORD PTR [ebp-0x14]
3002f28b:	test   ecx,ecx
3002f28d:	je     0x3002f2f2
3002f28f:	mov    esi,ebx
3002f291:	cmp    DWORD PTR [ebp+0x10],ebx
3002f294:	jbe    0x3002f338
3002f29a:	mov    edx,DWORD PTR [ebp+0xc]
3002f29d:	cmp    DWORD PTR [ebp-0x18],0x8
3002f2a1:	jne    0x3002f2b1
3002f2a3:	mov    eax,DWORD PTR [ecx]
3002f2a5:	cmp    eax,DWORD PTR [edx]
3002f2a7:	jne    0x3002f2b1
3002f2a9:	mov    eax,DWORD PTR [ecx+0x4]
3002f2ac:	cmp    eax,DWORD PTR [edx+0x4]
3002f2af:	je     0x3002f2bc
3002f2b1:	inc    esi
3002f2b2:	add    edx,0x8
3002f2b5:	cmp    esi,DWORD PTR [ebp+0x10]
3002f2b8:	jae    0x3002f338
3002f2ba:	jmp    0x3002f29d
3002f2bc:	mov    ecx,DWORD PTR [ebp-0x20]
3002f2bf:	lea    eax,[ebp+0x10]
3002f2c2:	push   eax
3002f2c3:	call   0x3002f3a2
3002f2c8:	mov    ebx,eax
3002f2ca:	test   ebx,ebx
3002f2cc:	js     0x3002f335
3002f2ce:	cmp    DWORD PTR [ebp+0x10],0x0
3002f2d2:	lea    eax,[ebp-0xd]
3002f2d5:	sete   cl
3002f2d8:	movzx  ecx,cl
3002f2db:	push   eax
3002f2dc:	push   ecx
3002f2dd:	push   DWORD PTR [ebp+0x8]
3002f2e0:	call   DWORD PTR ds:0x30043004
3002f2e6:	test   al,al
3002f2e8:	je     0x3002f335
3002f2ea:	or     eax,0xffffffff
3002f2ed:	mov    WORD PTR [edi],ax
3002f2f0:	jmp    0x3002f335
3002f2f2:	push   0x3002a390
3002f2f7:	lea    ecx,[ebp+0xc]
3002f2fa:	call   0x30001488
3002f2ff:	mov    edi,DWORD PTR [ebp-0x20]
3002f302:	push   DWORD PTR [ebp+0x8]
3002f305:	mov    DWORD PTR [ebp-0x4],ebx
3002f308:	mov    esi,DWORD PTR [eax]
3002f30a:	add    edi,0x48
3002f30d:	mov    ebx,DWORD PTR [edi]
3002f30f:	call   DWORD PTR ds:0x30043008
3002f315:	push   eax
3002f316:	push   0x3002f360
3002f31b:	push   esi
3002f31c:	push   0x2
3002f31e:	push   edi
3002f31f:	call   DWORD PTR [ebx+0x24]
3002f322:	push   DWORD PTR [ebp+0xc]
3002f325:	call   DWORD PTR ds:0x300454e8
3002f32b:	mov    eax,DWORD PTR [ebp+0x18]
3002f32e:	xor    ecx,ecx
3002f330:	mov    WORD PTR [eax],cx
3002f333:	xor    ebx,ebx
3002f335:	mov    ecx,DWORD PTR [ebp-0x14]
3002f338:	mov    esi,DWORD PTR ds:0x3004300c
3002f33e:	test   ecx,ecx
3002f340:	je     0x3002f345
3002f342:	push   ecx
3002f343:	call   esi
3002f345:	cmp    DWORD PTR [ebp-0x1c],0x0
3002f349:	je     0x3002f350
3002f34b:	push   DWORD PTR [ebp-0x1c]
3002f34e:	call   esi
3002f350:	mov    eax,ebx
3002f352:	call   0x3000119d
3002f357:	ret    0x14
3002f35a:	nop
3002f35b:	nop
3002f35c:	nop
3002f35d:	nop
3002f35e:	nop
3002f35f:	nop
3002f360:	inc    ebx
3002f361:	add    BYTE PTR [eax+0x0],ch
3002f364:	add    BYTE PTR gs:[ebx+0x0],ah
3002f368:	imul   eax,DWORD PTR [eax],0x43
3002f36b:	add    BYTE PTR [edi+0x0],ch
3002f36e:	ins    DWORD PTR es:[edi],dx
3002f36f:	add    BYTE PTR [eax+0x0],dh
3002f372:	outs   dx,DWORD PTR ds:[esi]
3002f373:	add    BYTE PTR [esi+0x0],ch
3002f376:	add    BYTE PTR gs:[esi+0x0],ch
3002f37a:	je     0x3002f37c
3002f37c:	push   eax
3002f37d:	add    BYTE PTR [ebp+0x0],dh
3002f380:	bound  eax,QWORD PTR [eax]
3002f382:	ins    BYTE PTR es:[edi],dx
3002f383:	add    BYTE PTR [ecx+0x0],ch
3002f386:	arpl   WORD PTR [eax],ax
3002f388:	dec    ebx
3002f389:	add    BYTE PTR [ebp+0x0],ah
3002f38c:	jns    0x3002f38e
3002f38e:	and    BYTE PTR [eax],al
3002f390:	data16 add BYTE PTR [ecx+0x0],ah
3002f394:	imul   eax,DWORD PTR [eax],0x65006c
3002f39a:	add    BYTE PTR fs:[ebx],bh
3002f39d:	add    BYTE PTR [eax],ah
3002f39f:	add    BYTE PTR [eax],al
3002f3a1:	add    BYTE PTR [eax+0x18],ch
3002f3a4:	add    al,BYTE PTR [eax]
3002f3a6:	add    BYTE PTR [eax+0x3003fc28],bh
3002f3ac:	call   0x300045c8
3002f3b1:	mov    ebx,ecx
3002f3b3:	mov    eax,DWORD PTR [ebp+0x8]
3002f3b6:	xor    edi,edi
3002f3b8:	mov    DWORD PTR [ebp-0x224],eax
3002f3be:	cmp    DWORD PTR [ebx+0x600],edi
3002f3c4:	jne    0x3002f4d1
3002f3ca:	push   0x3004306c
3002f3cf:	lea    ecx,[ebp-0x21c]
3002f3d5:	call   0x30004256
3002f3da:	push   edi
3002f3db:	mov    DWORD PTR [ebp-0x4],edi
3002f3de:	call   DWORD PTR ds:0x30045174
3002f3e4:	test   eax,eax
3002f3e6:	jne    0x3002f410
3002f3e8:	call   DWORD PTR ds:0x30045160
3002f3ee:	mov    edi,eax
3002f3f0:	test   edi,edi
3002f3f2:	jle    0x3002f3fd
3002f3f4:	movzx  edi,di
3002f3f7:	or     edi,0x80070000
3002f3fd:	mov    ecx,DWORD PTR [ebp-0x21c]
3002f403:	lea    ecx,[ecx-0x10]
3002f406:	call   0x30004017
3002f40b:	jmp    0x3002f4d9
3002f410:	push   0x104
3002f415:	lea    ecx,[ebp-0x218]
3002f41b:	push   ecx
3002f41c:	push   eax
3002f41d:	call   DWORD PTR ds:0x300451f8
3002f423:	test   eax,eax
3002f425:	je     0x3002f3e8
3002f427:	lea    eax,[ebp-0x218]
3002f42d:	push   eax
3002f42e:	call   0x300042e4
3002f433:	pop    ecx
3002f434:	push   eax
3002f435:	lea    eax,[ebp-0x218]
3002f43b:	push   eax
3002f43c:	lea    ecx,[ebp-0x21c]
3002f442:	call   0x3000416f
3002f447:	mov    esi,DWORD PTR [ebp-0x21c]
3002f44d:	push   0x5c
3002f44f:	push   esi
3002f450:	call   DWORD PTR ds:0x30045328
3002f456:	pop    ecx
3002f457:	pop    ecx
3002f458:	test   eax,eax
3002f45a:	je     0x3002f4b9
3002f45c:	sub    eax,esi
3002f45e:	sar    eax,1
3002f460:	cmp    eax,0xffffffff
3002f463:	je     0x3002f4b9
3002f465:	push   ecx
3002f466:	inc    eax
3002f467:	push   eax
3002f468:	lea    ecx,[ebp-0x21c]
3002f46e:	call   0x3002f500
3002f473:	push   ecx
3002f474:	push   ecx
3002f475:	lea    ecx,[ebp-0x21c]
3002f47b:	call   0x3002f58a
3002f480:	mov    esi,DWORD PTR [ebp-0x21c]
3002f486:	cmp    DWORD PTR [esi-0xc],0x104
3002f48d:	jge    0x3002f4b9
3002f48f:	push   esi
3002f490:	call   DWORD PTR ds:0x300451ec
3002f496:	cmp    eax,0xffffffff
3002f499:	je     0x3002f4b9
3002f49b:	lea    eax,[ebp-0x21d]
3002f4a1:	push   eax
3002f4a2:	push   0x1
3002f4a4:	push   esi
3002f4a5:	call   DWORD PTR ds:0x30043004
3002f4ab:	test   al,al
3002f4ad:	jne    0x3002f4b9
3002f4af:	mov    DWORD PTR [ebx+0x604],0x1
3002f4b9:	lea    ecx,[esi-0x10]
3002f4bc:	mov    DWORD PTR [ebx+0x600],0x1
3002f4c6:	call   0x30004017
3002f4cb:	mov    eax,DWORD PTR [ebp-0x224]
3002f4d1:	mov    ecx,DWORD PTR [ebx+0x604]
3002f4d7:	mov    DWORD PTR [eax],ecx
3002f4d9:	mov    eax,edi
3002f4db:	call   0x300045fe
3002f4e0:	ret    0x4
3002f4e3:	push   ebp
3002f4e4:	mov    ebp,esp
3002f4e6:	mov    eax,DWORD PTR [ebp+0x8]
3002f4e9:	test   eax,eax
3002f4eb:	jne    0x3002f4f4
3002f4ed:	mov    eax,0x80004003
3002f4f2:	jmp    0x3002f4fc
3002f4f4:	and    DWORD PTR [eax],0x0
3002f4f7:	mov    eax,0x80004001
3002f4fc:	pop    ebp
3002f4fd:	ret    0x4
3002f500:	push   ebp
3002f501:	mov    ebp,esp
3002f503:	push   ecx
3002f504:	push   ebx
3002f505:	push   edi
3002f506:	mov    edi,DWORD PTR [ebp+0x8]
3002f509:	mov    edx,ecx
3002f50b:	mov    DWORD PTR [ebp-0x4],edx
3002f50e:	mov    ebx,0x104
3002f513:	test   edi,edi
3002f515:	jns    0x3002f519
3002f517:	xor    edi,edi
3002f519:	mov    eax,DWORD PTR [edx]
3002f51b:	mov    ecx,DWORD PTR [eax-0xc]
3002f51e:	mov    DWORD PTR [ebp+0x8],ecx
3002f521:	cmp    edi,0x7ffffefb
3002f527:	jg     0x3002f57f
3002f529:	lea    eax,[edi+0x104]
3002f52f:	cmp    eax,ecx
3002f531:	jle    0x3002f53b
3002f533:	mov    ebx,ecx
3002f535:	sub    ebx,edi
3002f537:	test   ebx,ebx
3002f539:	jle    0x3002f574
3002f53b:	push   esi
3002f53c:	mov    esi,ecx
3002f53e:	sub    esi,edi
3002f540:	sub    esi,ebx
3002f542:	mov    ecx,edx
3002f544:	inc    esi
3002f545:	call   0x3001650d
3002f54a:	lea    edx,[esi+esi*1]
3002f54d:	push   edx
3002f54e:	lea    ecx,[edi+ebx*1]
3002f551:	lea    ecx,[eax+ecx*2]
3002f554:	push   ecx
3002f555:	push   edx
3002f556:	lea    eax,[eax+edi*2]
3002f559:	push   eax
3002f55a:	call   0x30006cea
3002f55f:	mov    eax,DWORD PTR [ebp+0x8]
3002f562:	mov    ecx,DWORD PTR [ebp-0x4]
3002f565:	add    esp,0x10
3002f568:	sub    eax,ebx
3002f56a:	push   eax
3002f56b:	call   0x30004147
3002f570:	mov    edx,DWORD PTR [ebp-0x4]
3002f573:	pop    esi
3002f574:	mov    eax,DWORD PTR [edx]
3002f576:	pop    edi
3002f577:	mov    eax,DWORD PTR [eax-0xc]
3002f57a:	pop    ebx
3002f57b:	leave  
3002f57c:	ret    0x8
3002f57f:	push   0x80070216
3002f584:	call   0x3002ae0b
3002f589:	int3   
3002f58a:	push   ebp
3002f58b:	mov    ebp,esp
3002f58d:	push   ecx
3002f58e:	push   ecx
3002f58f:	push   ebx
3002f590:	mov    eax,ecx
3002f592:	mov    DWORD PTR [ebp-0x8],eax
3002f595:	mov    eax,DWORD PTR [eax]
3002f597:	push   esi
3002f598:	push   edi
3002f599:	mov    edi,DWORD PTR [eax-0xc]
3002f59c:	mov    ebx,0x104
3002f5a1:	cmp    edi,ebx
3002f5a3:	jge    0x3002f5a7
3002f5a5:	mov    ebx,edi
3002f5a7:	push   0x3002f618
3002f5ac:	call   0x300043c9
3002f5b1:	mov    esi,eax
3002f5b3:	pop    ecx
3002f5b4:	mov    DWORD PTR [ebp-0x4],esi
3002f5b7:	test   esi,esi
3002f5b9:	jle    0x3002f608
3002f5bb:	mov    ecx,DWORD PTR [ebp-0x8]
3002f5be:	add    edi,esi
3002f5c0:	push   edi
3002f5c1:	call   0x30004286
3002f5c6:	mov    ecx,edi
3002f5c8:	sub    ecx,esi
3002f5ca:	mov    edx,eax
3002f5cc:	mov    eax,DWORD PTR [ebp-0x4]
3002f5cf:	sub    ecx,ebx
3002f5d1:	lea    esi,[edx+ebx*2]
3002f5d4:	lea    ecx,[ecx*2+0x2]
3002f5db:	push   ecx
3002f5dc:	add    eax,ebx
3002f5de:	push   esi
3002f5df:	push   ecx
3002f5e0:	lea    eax,[edx+eax*2]
3002f5e3:	push   eax
3002f5e4:	call   0x30006cea
3002f5e9:	mov    eax,DWORD PTR [ebp-0x4]
3002f5ec:	lea    ecx,[eax+eax*1]
3002f5ef:	push   ecx
3002f5f0:	push   0x3002f618
3002f5f5:	push   ecx
3002f5f6:	push   esi
3002f5f7:	call   0x30001444
3002f5fc:	mov    ecx,DWORD PTR [ebp-0x8]
3002f5ff:	add    esp,0x20
3002f602:	push   edi
3002f603:	call   0x30004147
3002f608:	mov    eax,edi
3002f60a:	pop    edi
3002f60b:	pop    esi
3002f60c:	pop    ebx
3002f60d:	leave  
3002f60e:	ret    0x8
3002f611:	nop
3002f612:	nop
3002f613:	nop
3002f614:	nop
3002f615:	nop
3002f616:	nop
3002f617:	nop
3002f618:	push   eax
3002f619:	add    BYTE PTR [edx+0x0],dh
3002f61c:	imul   eax,DWORD PTR [eax],0x610076
3002f622:	je     0x3002f624
3002f624:	add    BYTE PTR gs:[ecx+0x0],al
3002f628:	jae    0x3002f62a
3002f62a:	jae    0x3002f62c
3002f62c:	add    BYTE PTR gs:[ebp+0x0],ch
3002f630:	bound  eax,QWORD PTR [eax]
3002f632:	ins    BYTE PTR es:[edi],dx
3002f633:	add    BYTE PTR [ecx+0x0],ch
3002f636:	add    BYTE PTR gs:[ebx+0x0],dh
3002f63a:	pop    esp
3002f63b:	add    BYTE PTR [ebp+0x0],cl
3002f63e:	imul   eax,DWORD PTR [eax],0x720063
3002f644:	outs   dx,DWORD PTR ds:[esi]
3002f645:	add    BYTE PTR [ebx+0x0],dh
3002f648:	outs   dx,DWORD PTR ds:[esi]
3002f649:	add    BYTE PTR [esi+0x0],ah
3002f64c:	je     0x3002f64e
3002f64e:	add    BYTE PTR cs:[esi+0x0],dl
3002f652:	imul   eax,DWORD PTR [eax],0x750073
3002f658:	popa   
3002f659:	add    BYTE PTR [eax+eax*1+0x53],ch
3002f65d:	add    BYTE PTR [eax+eax*1+0x75],dh
3002f661:	add    BYTE PTR [eax+eax*1+0x69],ah
3002f665:	add    BYTE PTR [edi+0x0],ch
3002f668:	add    BYTE PTR cs:[ebp+0x0],al
3002f66c:	js     0x3002f66e
3002f66e:	je     0x3002f670
3002f670:	add    BYTE PTR gs:[esi+0x0],ch
3002f674:	jae    0x3002f676
3002f676:	imul   eax,DWORD PTR [eax],0x690062
3002f67c:	ins    BYTE PTR es:[edi],dx
3002f67d:	add    BYTE PTR [ecx+0x0],ch
3002f680:	je     0x3002f682
3002f682:	jns    0x3002f684
3002f684:	dec    eax
3002f685:	add    BYTE PTR [edi+0x0],ch
3002f688:	jae    0x3002f68a
3002f68a:	je     0x3002f68c
3002f68c:	imul   eax,DWORD PTR [eax],0x67006e
3002f692:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
3002f697:	add    BYTE PTR [eax+eax*1+0x0],ch
3002f69b:	add    BYTE PTR [ebp+0x1390441],cl
3002f6a1:	je     0x3002f6ac
3002f6a3:	push   DWORD PTR [ecx]
3002f6a5:	call   DWORD PTR ds:0x300452b4
3002f6ab:	pop    ecx
3002f6ac:	ret    
3002f6ad:	push   ebp
3002f6ae:	mov    ebp,esp
3002f6b0:	push   ebx
3002f6b1:	push   edi
3002f6b2:	mov    edi,DWORD PTR [ebp+0x8]
3002f6b5:	mov    ebx,ecx
3002f6b7:	test   edi,edi
3002f6b9:	jne    0x3002f6c2
3002f6bb:	and    DWORD PTR [ebx],edi
3002f6bd:	jmp    0x3002f760
3002f6c2:	mov    ecx,edi
3002f6c4:	push   esi
3002f6c5:	lea    edx,[ecx+0x2]
3002f6c8:	xor    esi,esi
3002f6ca:	mov    ax,WORD PTR [ecx]
3002f6cd:	add    ecx,0x2
3002f6d0:	cmp    ax,si
3002f6d3:	jne    0x3002f6ca
3002f6d5:	sub    ecx,edx
3002f6d7:	sar    ecx,1
3002f6d9:	push   ecx
3002f6da:	lea    eax,[ecx+0x1]
3002f6dd:	mov    esi,eax
3002f6df:	mov    DWORD PTR [ebp+0x8],eax
3002f6e2:	lea    eax,[ebx+0x4]
3002f6e5:	shl    esi,0x2
3002f6e8:	push   eax
3002f6e9:	mov    edx,esi
3002f6eb:	mov    ecx,ebx
3002f6ed:	call   0x3002fec4
3002f6f2:	xor    eax,eax
3002f6f4:	push   eax
3002f6f5:	push   eax
3002f6f6:	push   esi
3002f6f7:	push   DWORD PTR [ebx]
3002f6f9:	push   DWORD PTR [ebp+0x8]
3002f6fc:	push   edi
3002f6fd:	push   eax
3002f6fe:	push   DWORD PTR [ebp+0xc]
3002f701:	call   DWORD PTR ds:0x30045214
3002f707:	mov    esi,eax
3002f709:	neg    esi
3002f70b:	sbb    esi,esi
3002f70d:	inc    esi
3002f70e:	je     0x3002f75f
3002f710:	call   DWORD PTR ds:0x30045160
3002f716:	cmp    eax,0x7a
3002f719:	jne    0x3002f75b
3002f71b:	xor    eax,eax
3002f71d:	push   eax
3002f71e:	push   eax
3002f71f:	push   eax
3002f720:	push   eax
3002f721:	push   DWORD PTR [ebp+0x8]
3002f724:	push   edi
3002f725:	push   eax
3002f726:	push   DWORD PTR [ebp+0xc]
3002f729:	call   DWORD PTR ds:0x30045214
3002f72f:	mov    esi,eax
3002f731:	push   ecx
3002f732:	lea    eax,[ebx+0x4]
3002f735:	push   eax
3002f736:	mov    edx,esi
3002f738:	mov    ecx,ebx
3002f73a:	call   0x3002fec4
3002f73f:	xor    eax,eax
3002f741:	push   eax
3002f742:	push   eax
3002f743:	push   esi
3002f744:	push   DWORD PTR [ebx]
3002f746:	push   DWORD PTR [ebp+0x8]
3002f749:	push   edi
3002f74a:	push   eax
3002f74b:	push   DWORD PTR [ebp+0xc]
3002f74e:	call   DWORD PTR ds:0x30045214
3002f754:	mov    esi,eax
3002f756:	neg    esi
3002f758:	sbb    esi,esi
3002f75a:	inc    esi
3002f75b:	test   esi,esi
3002f75d:	jne    0x3002f766
3002f75f:	pop    esi
3002f760:	pop    edi
3002f761:	pop    ebx
3002f762:	pop    ebp
3002f763:	ret    0x8
3002f766:	call   0x3002c3b4
3002f76b:	int3   
3002f76c:	push   0xf8
3002f771:	mov    eax,0x3003f380
3002f776:	call   0x3000116a
3002f77b:	mov    esi,ecx
3002f77d:	mov    DWORD PTR [ebp-0x34],esi
3002f780:	xor    edi,edi
3002f782:	mov    DWORD PTR [ebp-0x38],edi
3002f785:	mov    eax,DWORD PTR [esi]
3002f787:	call   DWORD PTR [eax+0x3c]
3002f78a:	xor    ebx,ebx
3002f78c:	inc    ebx
3002f78d:	mov    BYTE PTR [ebp-0x11],al
3002f790:	test   al,al
3002f792:	je     0x3002f7a3
3002f794:	mov    edx,DWORD PTR [esi]
3002f796:	lea    eax,[ebp-0x40]
3002f799:	push   eax
3002f79a:	mov    ecx,esi
3002f79c:	call   DWORD PTR [edx+0x40]
3002f79f:	mov    ecx,ebx
3002f7a1:	jmp    0x3002f7b8
3002f7a3:	push   ecx
3002f7a4:	lea    ecx,[ebp-0x30]
3002f7a7:	mov    DWORD PTR [ebp-0x30],edi
3002f7aa:	mov    DWORD PTR [ebp-0x2c],edi
3002f7ad:	call   0x3002fe59
3002f7b2:	push   0x2
3002f7b4:	lea    eax,[ebp-0x30]
3002f7b7:	pop    ecx
3002f7b8:	mov    DWORD PTR [ebp-0x18],ecx
3002f7bb:	push   eax
3002f7bc:	lea    ecx,[ebp-0x28]
3002f7bf:	call   0x30008076
3002f7c4:	mov    DWORD PTR [ebp-0x4],ebx
3002f7c7:	mov    eax,DWORD PTR [ebp-0x18]
3002f7ca:	test   al,0x2
3002f7cc:	je     0x3002f7e6
3002f7ce:	mov    ecx,DWORD PTR [ebp-0x2c]
3002f7d1:	and    eax,0xfffffffd
3002f7d4:	mov    DWORD PTR [ebp-0x18],eax
3002f7d7:	mov    DWORD PTR [ebp-0x38],eax
3002f7da:	test   ecx,ecx
3002f7dc:	je     0x3002f7e6
3002f7de:	call   0x30007e20
3002f7e3:	mov    eax,DWORD PTR [ebp-0x18]
3002f7e6:	mov    BYTE PTR [ebp-0x4],0x2
3002f7ea:	test   al,0x1
3002f7ec:	je     0x3002f7fa
3002f7ee:	mov    ecx,DWORD PTR [ebp-0x3c]
3002f7f1:	test   ecx,ecx
3002f7f3:	je     0x3002f7fa
3002f7f5:	call   0x30007e20
3002f7fa:	cmp    BYTE PTR [ebp-0x11],0x0
3002f7fe:	mov    edi,DWORD PTR [ebp-0x28]
3002f801:	je     0x3002f81e
3002f803:	test   edi,edi
3002f805:	je     0x3002f82d
3002f807:	mov    ecx,edi
3002f809:	call   0x30008596
3002f80e:	test   eax,eax
3002f810:	je     0x3002f82d
3002f812:	mov    ecx,edi
3002f814:	call   0x30008596
3002f819:	mov    DWORD PTR [ebp-0x1c],eax
3002f81c:	jmp    0x3002f83a
3002f81e:	mov    eax,DWORD PTR [esi]
3002f820:	lea    ecx,[ebp-0x1c]
3002f823:	push   ecx
3002f824:	mov    ecx,esi
3002f826:	call   DWORD PTR [eax+0x44]
3002f829:	test   eax,eax
3002f82b:	jns    0x3002f837
3002f82d:	mov    ebx,0x80004001
3002f832:	jmp    0x3002f93a
3002f837:	mov    eax,DWORD PTR [ebp-0x1c]
3002f83a:	push   0x17
3002f83c:	pop    ecx
3002f83d:	mov    esi,eax
3002f83f:	lea    edi,[ebp-0x104]
3002f845:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f847:	push   0x3004306c
3002f84c:	lea    ecx,[ebp-0x48]
3002f84f:	call   0x30004256
3002f854:	lea    eax,[ebp-0xa4]
3002f85a:	push   0x5c
3002f85c:	push   0x0
3002f85e:	push   eax
3002f85f:	call   0x300011b1
3002f864:	add    esp,0xc
3002f867:	mov    BYTE PTR [ebp-0x4],0x3
3002f86b:	mov    eax,DWORD PTR [ebp-0xa4]
3002f871:	test   eax,0xffff0000
3002f876:	je     0x3002f883
3002f878:	test   eax,eax
3002f87a:	je     0x3002f883
3002f87c:	push   eax
3002f87d:	call   DWORD PTR ds:0x300455d0
3002f883:	cmp    BYTE PTR [ebp-0x11],0x0
3002f887:	push   0x17
3002f889:	pop    ecx
3002f88a:	lea    eax,[ebp-0x18]
3002f88d:	lea    esi,[ebp-0x104]
3002f893:	lea    edi,[ebp-0xa4]
3002f899:	push   eax
3002f89a:	push   DWORD PTR [ebp+0x8]
3002f89d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002f89f:	je     0x3002f8b2
3002f8a1:	push   ecx
3002f8a2:	lea    edx,[ebp-0xa4]
3002f8a8:	lea    ecx,[ebp-0x28]
3002f8ab:	call   0x3003036b
3002f8b0:	jmp    0x3002f8bd
3002f8b2:	lea    ecx,[ebp-0xa4]
3002f8b8:	call   0x30030427
3002f8bd:	test   eax,eax
3002f8bf:	js     0x3002f92a
3002f8c1:	cmp    BYTE PTR [ebp-0x11],0x0
3002f8c5:	mov    edi,DWORD PTR [ebp-0x18]
3002f8c8:	je     0x3002f8d9
3002f8ca:	mov    ecx,DWORD PTR [ebp-0x28]
3002f8cd:	call   0x300082f7
3002f8d2:	mov    esi,eax
3002f8d4:	mov    DWORD PTR [ebp-0x20],esi
3002f8d7:	jmp    0x3002f8ec
3002f8d9:	mov    ecx,DWORD PTR [ebp-0x34]
3002f8dc:	lea    edx,[ebp-0x20]
3002f8df:	mov    eax,DWORD PTR [ecx]
3002f8e1:	push   edx
3002f8e2:	call   DWORD PTR [eax+0x48]
3002f8e5:	test   eax,eax
3002f8e7:	js     0x3002f92a
3002f8e9:	mov    esi,DWORD PTR [ebp-0x20]
3002f8ec:	test   esi,esi
3002f8ee:	je     0x3002f92a
3002f8f0:	test   DWORD PTR [edi+0x2c],0xffff0000
3002f8f7:	jne    0x3002f92f
3002f8f9:	lea    edx,[edi+0x70]
3002f8fc:	cmp    DWORD PTR [edx],0x0
3002f8ff:	je     0x3002f91a
3002f901:	lea    eax,[edi+0x88]
3002f907:	push   eax
3002f908:	mov    ecx,esi
3002f90a:	call   0x300083af
3002f90f:	test   eax,eax
3002f911:	jns    0x3002f91a
3002f913:	mov    ebx,0x80004005
3002f918:	jmp    0x3002f926
3002f91a:	lea    edx,[edi+0x2c]
3002f91d:	mov    ecx,esi
3002f91f:	call   0x3002dc21
3002f924:	mov    ebx,eax
3002f926:	test   ebx,ebx
3002f928:	jns    0x3002f92f
3002f92a:	mov    ebx,0x80004001
3002f92f:	lea    ecx,[ebp-0xa4]
3002f935:	call   0x3002ff37
3002f93a:	or     DWORD PTR [ebp-0x4],0xffffffff
3002f93e:	mov    ecx,DWORD PTR [ebp-0x24]
3002f941:	test   ecx,ecx
3002f943:	je     0x3002f94a
3002f945:	call   0x30007e20
3002f94a:	mov    eax,ebx
3002f94c:	call   0x3000119d
3002f951:	ret    0x4
3002f954:	push   0x48
3002f956:	mov    eax,0x3003f251
3002f95b:	call   0x3000116a
3002f960:	mov    ebx,ecx
3002f962:	mov    DWORD PTR [ebp-0x28],ebx
3002f965:	xor    edi,edi
3002f967:	mov    DWORD PTR [ebp-0x20],edi
3002f96a:	mov    eax,DWORD PTR [ebx]
3002f96c:	call   DWORD PTR [eax+0x3c]
3002f96f:	xor    esi,esi
3002f971:	inc    esi
3002f972:	mov    BYTE PTR [ebp-0xd],al
3002f975:	test   al,al
3002f977:	je     0x3002f988
3002f979:	mov    edx,DWORD PTR [ebx]
3002f97b:	lea    eax,[ebp-0x44]
3002f97e:	push   eax
3002f97f:	mov    ecx,ebx
3002f981:	call   DWORD PTR [edx+0x40]
3002f984:	mov    ecx,esi
3002f986:	jmp    0x3002f99d
3002f988:	push   ecx
3002f989:	lea    ecx,[ebp-0x30]
3002f98c:	mov    DWORD PTR [ebp-0x30],edi
3002f98f:	mov    DWORD PTR [ebp-0x2c],edi
3002f992:	call   0x3002fe59
3002f997:	push   0x2
3002f999:	lea    eax,[ebp-0x30]
3002f99c:	pop    ecx
3002f99d:	mov    DWORD PTR [ebp-0x14],ecx
3002f9a0:	push   eax
3002f9a1:	lea    ecx,[ebp-0x3c]
3002f9a4:	call   0x30008076
3002f9a9:	mov    DWORD PTR [ebp-0x4],esi
3002f9ac:	mov    eax,DWORD PTR [ebp-0x14]
3002f9af:	test   al,0x2
3002f9b1:	je     0x3002f9cb
3002f9b3:	mov    ecx,DWORD PTR [ebp-0x2c]
3002f9b6:	and    eax,0xfffffffd
3002f9b9:	mov    DWORD PTR [ebp-0x14],eax
3002f9bc:	mov    DWORD PTR [ebp-0x20],eax
3002f9bf:	test   ecx,ecx
3002f9c1:	je     0x3002f9cb
3002f9c3:	call   0x30007e20
3002f9c8:	mov    eax,DWORD PTR [ebp-0x14]
3002f9cb:	mov    BYTE PTR [ebp-0x4],0x2
3002f9cf:	test   al,0x1
3002f9d1:	je     0x3002f9df
3002f9d3:	mov    ecx,DWORD PTR [ebp-0x40]
3002f9d6:	test   ecx,ecx
3002f9d8:	je     0x3002f9df
3002f9da:	call   0x30007e20
3002f9df:	cmp    BYTE PTR [ebp-0xd],0x0
3002f9e3:	mov    esi,DWORD PTR [ebp-0x3c]
3002f9e6:	je     0x3002fa03
3002f9e8:	test   esi,esi
3002f9ea:	je     0x3002fa12
3002f9ec:	mov    ecx,esi
3002f9ee:	call   0x30008596
3002f9f3:	test   eax,eax
3002f9f5:	je     0x3002fa12
3002f9f7:	mov    ecx,esi
3002f9f9:	call   0x30008596
3002f9fe:	mov    DWORD PTR [ebp-0x18],eax
3002fa01:	jmp    0x3002fa1f
3002fa03:	mov    eax,DWORD PTR [ebx]
3002fa05:	lea    ecx,[ebp-0x18]
3002fa08:	push   ecx
3002fa09:	mov    ecx,ebx
3002fa0b:	call   DWORD PTR [eax+0x44]
3002fa0e:	test   eax,eax
3002fa10:	jns    0x3002fa1c
3002fa12:	mov    ebx,0x80004001
3002fa17:	jmp    0x3002fb35
3002fa1c:	mov    eax,DWORD PTR [ebp-0x18]
3002fa1f:	lea    esi,[eax+0x5c]
3002fa22:	lea    edi,[ebp-0x34]
3002fa25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa28:	xor    eax,eax
3002fa2a:	lea    edi,[ebp-0x48]
3002fa2d:	stos   DWORD PTR es:[edi],eax
3002fa2e:	stos   DWORD PTR es:[edi],eax
3002fa2f:	stos   DWORD PTR es:[edi],eax
3002fa30:	mov    BYTE PTR [ebp-0x4],0x3
3002fa34:	mov    eax,DWORD PTR [ebp-0x40]
3002fa37:	test   eax,0xffff0000
3002fa3c:	je     0x3002fa49
3002fa3e:	test   eax,eax
3002fa40:	je     0x3002fa49
3002fa42:	push   eax
3002fa43:	call   DWORD PTR ds:0x300455d0
3002fa49:	cmp    BYTE PTR [ebp-0xd],0x0
3002fa4d:	lea    esi,[ebp-0x34]
3002fa50:	lea    edi,[ebp-0x48]
3002fa53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa56:	je     0x3002fac4
3002fa58:	and    DWORD PTR [ebp-0x14],0x0
3002fa5c:	lea    ecx,[ebp-0x14]
3002fa5f:	call   0x3003075a
3002fa64:	mov    esi,eax
3002fa66:	test   esi,esi
3002fa68:	js     0x3002fb28
3002fa6e:	mov    ebx,DWORD PTR [ebp-0x14]
3002fa71:	test   ebx,ebx
3002fa73:	je     0x3002fabe
3002fa75:	mov    eax,DWORD PTR [ebx]
3002fa77:	push   ebx
3002fa78:	call   DWORD PTR [eax+0x4]
3002fa7b:	lea    esi,[ebp-0x34]
3002fa7e:	lea    edi,[ebp-0x54]
3002fa81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa83:	lea    eax,[ebp-0x3c]
3002fa86:	push   eax
3002fa87:	lea    ecx,[ebx+0x24]
3002fa8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa8b:	call   0x3000812a
3002fa90:	lea    edi,[ebx+0x2c]
3002fa93:	lea    esi,[ebp-0x34]
3002fa96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa98:	lea    ecx,[ebp-0x54]
3002fa9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3002fa9c:	call   0x3002ffb1
3002faa1:	mov    edi,DWORD PTR [ebp+0x8]
3002faa4:	mov    eax,DWORD PTR [ebx]
3002faa6:	push   edi
3002faa7:	push   0x300082e0
3002faac:	push   ebx
3002faad:	call   DWORD PTR [eax]
3002faaf:	mov    esi,eax
3002fab1:	test   esi,esi
3002fab3:	jns    0x3002fab8
3002fab5:	and    DWORD PTR [edi],0x0
3002fab8:	mov    eax,DWORD PTR [ebx]
3002faba:	push   ebx
3002fabb:	call   DWORD PTR [eax+0x8]
3002fabe:	test   esi,esi
3002fac0:	jns    0x3002fada
3002fac2:	jmp    0x3002fb28
3002fac4:	mov    edx,DWORD PTR [ebp+0x8]
3002fac7:	lea    eax,[ebp-0x24]
3002faca:	push   eax
3002facb:	lea    ecx,[ebp-0x48]
3002face:	call   0x30030209
3002fad3:	test   eax,eax
3002fad5:	js     0x3002fb28
3002fad7:	mov    ebx,DWORD PTR [ebp-0x24]
3002fada:	cmp    BYTE PTR [ebp-0xd],0x0
3002fade:	je     0x3002faed
3002fae0:	mov    ecx,DWORD PTR [ebp-0x3c]
3002fae3:	call   0x300082f7
3002fae8:	mov    DWORD PTR [ebp-0x1c],eax
3002faeb:	jmp    0x3002fb00
3002faed:	mov    ecx,DWORD PTR [ebp-0x28]
3002faf0:	lea    edx,[ebp-0x1c]
3002faf3:	mov    eax,DWORD PTR [ecx]
3002faf5:	push   edx
3002faf6:	call   DWORD PTR [eax+0x48]
3002faf9:	test   eax,eax
3002fafb:	js     0x3002fb28
3002fafd:	mov    eax,DWORD PTR [ebp-0x1c]
3002fb00:	test   eax,eax
3002fb02:	je     0x3002fb28
3002fb04:	lea    edx,[ebx+0x34]
3002fb07:	test   DWORD PTR [edx],0xffff0000
3002fb0d:	je     0x3002fb14
3002fb0f:	xor    ebx,ebx
3002fb11:	inc    ebx
3002fb12:	jmp    0x3002fb2d
3002fb14:	mov    ecx,eax
3002fb16:	mov    DWORD PTR [ebx+0x2c],0xc
3002fb1d:	call   0x3002dc21
3002fb22:	mov    ebx,eax
3002fb24:	test   ebx,ebx
3002fb26:	jns    0x3002fb2d
3002fb28:	mov    ebx,0x80004001
3002fb2d:	lea    ecx,[ebp-0x48]
3002fb30:	call   0x3002ffb1
3002fb35:	or     DWORD PTR [ebp-0x4],0xffffffff
3002fb39:	mov    ecx,DWORD PTR [ebp-0x38]
3002fb3c:	test   ecx,ecx
3002fb3e:	je     0x3002fb45
3002fb40:	call   0x30007e20
3002fb45:	mov    eax,ebx
3002fb47:	call   0x3000119d
3002fb4c:	ret    0x4
3002fb4f:	push   0x30
3002fb51:	mov    eax,0x3003f319
3002fb56:	call   0x3000116a
3002fb5b:	mov    edi,ecx
3002fb5d:	mov    DWORD PTR [ebp-0x20],edi
3002fb60:	xor    esi,esi
3002fb62:	mov    DWORD PTR [ebp-0x1c],esi
3002fb65:	mov    eax,DWORD PTR [edi]
3002fb67:	call   DWORD PTR [eax+0x3c]
3002fb6a:	xor    ebx,ebx
3002fb6c:	inc    ebx
3002fb6d:	mov    BYTE PTR [ebp-0xd],al
3002fb70:	test   al,al
3002fb72:	je     0x3002fb83
3002fb74:	mov    edx,DWORD PTR [edi]
3002fb76:	lea    eax,[ebp-0x3c]
3002fb79:	push   eax
3002fb7a:	mov    ecx,edi
3002fb7c:	call   DWORD PTR [edx+0x40]
3002fb7f:	mov    ecx,ebx
3002fb81:	jmp    0x3002fb98
3002fb83:	push   ecx
3002fb84:	lea    ecx,[ebp-0x2c]
3002fb87:	mov    DWORD PTR [ebp-0x2c],esi
3002fb8a:	mov    DWORD PTR [ebp-0x28],esi
3002fb8d:	call   0x3002fe59
3002fb92:	push   0x2
3002fb94:	lea    eax,[ebp-0x2c]
3002fb97:	pop    ecx
3002fb98:	mov    DWORD PTR [ebp-0x14],ecx
3002fb9b:	push   eax
3002fb9c:	lea    ecx,[ebp-0x34]
3002fb9f:	call   0x30008076
3002fba4:	mov    DWORD PTR [ebp-0x4],ebx
3002fba7:	mov    eax,DWORD PTR [ebp-0x14]
3002fbaa:	test   al,0x2
3002fbac:	je     0x3002fbc6
3002fbae:	mov    ecx,DWORD PTR [ebp-0x28]
3002fbb1:	and    eax,0xfffffffd
3002fbb4:	mov    DWORD PTR [ebp-0x14],eax
3002fbb7:	mov    DWORD PTR [ebp-0x1c],eax
3002fbba:	test   ecx,ecx
3002fbbc:	je     0x3002fbc6
3002fbbe:	call   0x30007e20
3002fbc3:	mov    eax,DWORD PTR [ebp-0x14]
3002fbc6:	mov    BYTE PTR [ebp-0x4],0x2
3002fbca:	test   al,0x1
3002fbcc:	je     0x3002fbda
3002fbce:	mov    ecx,DWORD PTR [ebp-0x38]
3002fbd1:	test   ecx,ecx
3002fbd3:	je     0x3002fbda
3002fbd5:	call   0x30007e20
3002fbda:	cmp    BYTE PTR [ebp-0xd],0x0
3002fbde:	mov    edi,DWORD PTR [ebp-0x34]
3002fbe1:	je     0x3002fbfe
3002fbe3:	test   edi,edi
3002fbe5:	je     0x3002fc0e
3002fbe7:	mov    ecx,edi
3002fbe9:	call   0x30008596
3002fbee:	test   eax,eax
3002fbf0:	je     0x3002fc0e
3002fbf2:	mov    ecx,edi
3002fbf4:	call   0x30008596
3002fbf9:	mov    DWORD PTR [ebp-0x18],eax
3002fbfc:	jmp    0x3002fc1b
3002fbfe:	mov    ecx,DWORD PTR [ebp-0x20]
3002fc01:	lea    edx,[ebp-0x18]
3002fc04:	mov    eax,DWORD PTR [ecx]
3002fc06:	push   edx
3002fc07:	call   DWORD PTR [eax+0x44]
3002fc0a:	test   eax,eax
3002fc0c:	jns    0x3002fc18
3002fc0e:	mov    ebx,0x80004001
3002fc13:	jmp    0x3002fcb4
3002fc18:	mov    eax,DWORD PTR [ebp-0x18]
3002fc1b:	mov    edi,DWORD PTR [eax+0x68]
3002fc1e:	mov    BYTE PTR [ebp-0x4],0x3
3002fc22:	test   esi,0xffff0000
3002fc28:	je     0x3002fc35
3002fc2a:	test   esi,esi
3002fc2c:	je     0x3002fc35
3002fc2e:	push   esi
3002fc2f:	call   DWORD PTR ds:0x300455d0
3002fc35:	cmp    BYTE PTR [ebp-0xd],0x0
3002fc39:	lea    eax,[ebp-0x1c]
3002fc3c:	mov    DWORD PTR [ebp-0x14],edi
3002fc3f:	push   eax
3002fc40:	je     0x3002fc52
3002fc42:	push   DWORD PTR [ebp+0x8]
3002fc45:	lea    edx,[ebp-0x14]
3002fc48:	lea    ecx,[ebp-0x34]
3002fc4b:	call   0x30030282
3002fc50:	jmp    0x3002fc5d
3002fc52:	mov    edx,DWORD PTR [ebp+0x8]
3002fc55:	lea    ecx,[ebp-0x14]
3002fc58:	call   0x300302fc
3002fc5d:	test   eax,eax
3002fc5f:	js     0x3002fca7
3002fc61:	cmp    BYTE PTR [ebp-0xd],0x0
3002fc65:	mov    esi,DWORD PTR [ebp-0x1c]
3002fc68:	je     0x3002fc77
3002fc6a:	mov    ecx,DWORD PTR [ebp-0x34]
3002fc6d:	call   0x300082f7
3002fc72:	mov    DWORD PTR [ebp-0x24],eax
3002fc75:	jmp    0x3002fc8a
3002fc77:	mov    ecx,DWORD PTR [ebp-0x20]
3002fc7a:	lea    edx,[ebp-0x24]
3002fc7d:	mov    eax,DWORD PTR [ecx]
3002fc7f:	push   edx
3002fc80:	call   DWORD PTR [eax+0x48]
3002fc83:	test   eax,eax
3002fc85:	js     0x3002fca7
3002fc87:	mov    eax,DWORD PTR [ebp-0x24]
3002fc8a:	test   eax,eax
3002fc8c:	je     0x3002fca7
3002fc8e:	test   DWORD PTR [esi+0x2c],0xffff0000
3002fc95:	jne    0x3002fcac
3002fc97:	lea    edx,[esi+0x2c]
3002fc9a:	mov    ecx,eax
3002fc9c:	call   0x3002dc21
3002fca1:	mov    ebx,eax
3002fca3:	test   ebx,ebx
3002fca5:	jns    0x3002fcac
3002fca7:	mov    ebx,0x80004001
3002fcac:	lea    ecx,[ebp-0x14]
3002fcaf:	call   0x30030022
3002fcb4:	or     DWORD PTR [ebp-0x4],0xffffffff
3002fcb8:	mov    ecx,DWORD PTR [ebp-0x30]
3002fcbb:	test   ecx,ecx
3002fcbd:	je     0x3002fcc4
3002fcbf:	call   0x30007e20
3002fcc4:	mov    eax,ebx
3002fcc6:	call   0x3000119d
3002fccb:	ret    0x4
3002fcce:	push   0x38
3002fcd0:	mov    eax,0x3003f2b5
3002fcd5:	call   0x3000116a
3002fcda:	mov    esi,ecx
3002fcdc:	mov    DWORD PTR [ebp-0x28],esi
3002fcdf:	xor    edi,edi
3002fce1:	mov    DWORD PTR [ebp-0x24],edi
3002fce4:	mov    eax,DWORD PTR [esi]
3002fce6:	call   DWORD PTR [eax+0x3c]
3002fce9:	xor    ebx,ebx
3002fceb:	inc    ebx
3002fcec:	mov    BYTE PTR [ebp-0x11],al
3002fcef:	test   al,al
3002fcf1:	je     0x3002fd02
3002fcf3:	mov    edx,DWORD PTR [esi]
3002fcf5:	lea    eax,[ebp-0x44]
3002fcf8:	push   eax
3002fcf9:	mov    ecx,esi
3002fcfb:	call   DWORD PTR [edx+0x40]
3002fcfe:	mov    ecx,ebx
3002fd00:	jmp    0x3002fd17
3002fd02:	push   ecx
3002fd03:	lea    ecx,[ebp-0x30]
3002fd06:	mov    DWORD PTR [ebp-0x30],edi
3002fd09:	mov    DWORD PTR [ebp-0x2c],edi
3002fd0c:	call   0x3002fe59
3002fd11:	push   0x2
3002fd13:	lea    eax,[ebp-0x30]
3002fd16:	pop    ecx
3002fd17:	mov    DWORD PTR [ebp-0x18],ecx
3002fd1a:	push   eax
3002fd1b:	lea    ecx,[ebp-0x3c]
3002fd1e:	call   0x30008076
3002fd23:	mov    DWORD PTR [ebp-0x4],ebx
3002fd26:	mov    eax,DWORD PTR [ebp-0x18]
3002fd29:	test   al,0x2
3002fd2b:	je     0x3002fd45
3002fd2d:	mov    ecx,DWORD PTR [ebp-0x2c]
3002fd30:	and    eax,0xfffffffd
3002fd33:	mov    DWORD PTR [ebp-0x18],eax
3002fd36:	mov    DWORD PTR [ebp-0x24],eax
3002fd39:	test   ecx,ecx
3002fd3b:	je     0x3002fd45
3002fd3d:	call   0x30007e20
3002fd42:	mov    eax,DWORD PTR [ebp-0x18]
3002fd45:	mov    BYTE PTR [ebp-0x4],0x2
3002fd49:	test   al,0x1
3002fd4b:	je     0x3002fd59
3002fd4d:	mov    ecx,DWORD PTR [ebp-0x40]
3002fd50:	test   ecx,ecx
3002fd52:	je     0x3002fd59
3002fd54:	call   0x30007e20
3002fd59:	cmp    BYTE PTR [ebp-0x11],0x0
3002fd5d:	mov    edi,DWORD PTR [ebp-0x3c]
3002fd60:	je     0x3002fd7d
3002fd62:	test   edi,edi
3002fd64:	je     0x3002fd8c
3002fd66:	mov    ecx,edi
3002fd68:	call   0x30008596
3002fd6d:	test   eax,eax
3002fd6f:	je     0x3002fd8c
3002fd71:	mov    ecx,edi
3002fd73:	call   0x30008596
3002fd78:	mov    DWORD PTR [ebp-0x1c],eax
3002fd7b:	jmp    0x3002fd99
3002fd7d:	mov    eax,DWORD PTR [esi]
3002fd7f:	lea    ecx,[ebp-0x1c]
3002fd82:	push   ecx
3002fd83:	mov    ecx,esi
3002fd85:	call   DWORD PTR [eax+0x44]
3002fd88:	test   eax,eax
3002fd8a:	jns    0x3002fd96
3002fd8c:	mov    ebx,0x80004001
3002fd91:	jmp    0x3002fe3f
3002fd96:	mov    eax,DWORD PTR [ebp-0x1c]
3002fd99:	mov    esi,DWORD PTR [eax+0x78]
3002fd9c:	mov    edi,DWORD PTR [eax+0x7c]
3002fd9f:	push   0x3004306c
3002fda4:	lea    ecx,[ebp-0x2c]
3002fda7:	call   0x30004256
3002fdac:	and    DWORD PTR [ebp-0x34],0x0
3002fdb0:	and    DWORD PTR [ebp-0x30],0x0
3002fdb4:	cmp    BYTE PTR [ebp-0x11],0x0
3002fdb8:	lea    eax,[ebp-0x18]
3002fdbb:	mov    BYTE PTR [ebp-0x4],0x3
3002fdbf:	push   eax
3002fdc0:	push   DWORD PTR [ebp+0x8]
3002fdc3:	mov    DWORD PTR [ebp-0x34],esi
3002fdc6:	mov    DWORD PTR [ebp-0x30],edi
3002fdc9:	je     0x3002fdd9
3002fdcb:	push   ecx
3002fdcc:	lea    edx,[ebp-0x34]
3002fdcf:	lea    ecx,[ebp-0x3c]
3002fdd2:	call   0x3003055b
3002fdd7:	jmp    0x3002fde1
3002fdd9:	lea    ecx,[ebp-0x34]
3002fddc:	call   0x30030618
3002fde1:	test   eax,eax
3002fde3:	js     0x3002fe2f
3002fde5:	cmp    BYTE PTR [ebp-0x11],0x0
3002fde9:	mov    esi,DWORD PTR [ebp-0x18]
3002fdec:	je     0x3002fdfd
3002fdee:	mov    ecx,DWORD PTR [ebp-0x3c]
3002fdf1:	call   0x300082f7
3002fdf6:	mov    ecx,eax
3002fdf8:	mov    DWORD PTR [ebp-0x20],ecx
3002fdfb:	jmp    0x3002fe10
3002fdfd:	mov    ecx,DWORD PTR [ebp-0x28]
3002fe00:	lea    edx,[ebp-0x20]
3002fe03:	mov    eax,DWORD PTR [ecx]
3002fe05:	push   edx
3002fe06:	call   DWORD PTR [eax+0x48]
3002fe09:	test   eax,eax
3002fe0b:	js     0x3002fe2f
3002fe0d:	mov    ecx,DWORD PTR [ebp-0x20]
3002fe10:	test   ecx,ecx
3002fe12:	je     0x3002fe2f
3002fe14:	test   DWORD PTR [esi+0x2c],0xffff0000
3002fe1b:	jne    0x3002fe34
3002fe1d:	lea    eax,[esi+0x34]
3002fe20:	push   eax
3002fe21:	lea    edx,[esi+0x2c]
3002fe24:	call   0x300083af
3002fe29:	mov    ebx,eax
3002fe2b:	test   ebx,ebx
3002fe2d:	jns    0x3002fe34
3002fe2f:	mov    ebx,0x80004001
3002fe34:	mov    ecx,DWORD PTR [ebp-0x2c]
3002fe37:	lea    ecx,[ecx-0x10]
3002fe3a:	call   0x30004017
3002fe3f:	or     DWORD PTR [ebp-0x4],0xffffffff
3002fe43:	mov    ecx,DWORD PTR [ebp-0x38]
3002fe46:	test   ecx,ecx
3002fe48:	je     0x3002fe4f
3002fe4a:	call   0x30007e20
3002fe4f:	mov    eax,ebx
3002fe51:	call   0x3000119d
3002fe56:	ret    0x4
3002fe59:	push   0x4
3002fe5b:	mov    eax,0x3003f428
3002fe60:	call   0x30006c56
3002fe65:	mov    ebx,ecx
3002fe67:	and    DWORD PTR [ebp-0x4],0x0
3002fe6b:	push   0x10
3002fe6d:	call   0x30003fee
3002fe72:	mov    edi,eax
3002fe74:	pop    ecx
3002fe75:	test   edi,edi
3002fe77:	je     0x3002fe8e
3002fe79:	xor    eax,eax
3002fe7b:	inc    eax
3002fe7c:	and    DWORD PTR [edi+0xc],0x0
3002fe80:	mov    DWORD PTR [edi+0x4],eax
3002fe83:	mov    DWORD PTR [edi+0x8],eax
3002fe86:	mov    DWORD PTR [edi],0x3002feb4
3002fe8c:	jmp    0x3002fe90
3002fe8e:	xor    edi,edi
3002fe90:	mov    ecx,DWORD PTR [ebx+0x4]
3002fe93:	test   ecx,ecx
3002fe95:	je     0x3002fe9c
3002fe97:	call   0x30007e20
3002fe9c:	mov    DWORD PTR [ebx+0x4],edi
3002fe9f:	and    DWORD PTR [ebx],0x0
3002fea2:	call   0x3000119d
3002fea7:	ret    0x4
3002feaa:	push   0x0
3002feac:	push   0x0
3002feae:	call   0x3003c7b0
3002feb3:	int3   
3002feb4:	xlat   BYTE PTR ds:[ebx]
3002feb5:	add    BYTE PTR [ebx],al
3002feb7:	xor    ch,al
3002feb9:	jle    0x3002febb
3002febb:	xor    cl,dl
3002febd:	jle    0x3002febf
3002febf:	xor    al,al
3002fec1:	push   edx
3002fec2:	add    BYTE PTR [eax],dh
3002fec4:	push   ebp
3002fec5:	mov    ebp,esp
3002fec7:	push   esi
3002fec8:	mov    esi,ecx
3002feca:	push   edi
3002fecb:	test   esi,esi
3002fecd:	je     0x3002ff2c
3002fecf:	test   edx,edx
3002fed1:	js     0x3002ff2c
3002fed3:	mov    edi,DWORD PTR [ebp+0x8]
3002fed6:	test   edi,edi
3002fed8:	je     0x3002ff2c
3002feda:	cmp    DWORD PTR [esi],edi
3002fedc:	je     0x3002ff15
3002fede:	cmp    edx,0x80
3002fee4:	jle    0x3002feff
3002fee6:	push   0x1
3002fee8:	push   edx
3002fee9:	push   DWORD PTR [esi]
3002feeb:	call   DWORD PTR ds:0x300452e8
3002fef1:	add    esp,0xc
3002fef4:	test   eax,eax
3002fef6:	jne    0x3002ff28
3002fef8:	push   0x8007000e
3002fefd:	jmp    0x3002ff31
3002feff:	push   DWORD PTR [esi]
3002ff01:	call   DWORD PTR ds:0x300452b4
3002ff07:	pop    ecx
3002ff08:	mov    DWORD PTR [esi],edi
3002ff0a:	cmp    DWORD PTR [esi],0x0
3002ff0d:	pop    edi
3002ff0e:	pop    esi
3002ff0f:	je     0x3002fef8
3002ff11:	pop    ebp
3002ff12:	ret    0x8
3002ff15:	cmp    edx,0x80
3002ff1b:	jle    0x3002ff08
3002ff1d:	push   0x1
3002ff1f:	push   edx
3002ff20:	call   DWORD PTR ds:0x3004532c
3002ff26:	pop    ecx
3002ff27:	pop    ecx
3002ff28:	mov    DWORD PTR [esi],eax
3002ff2a:	jmp    0x3002ff0a
3002ff2c:	push   0x80070057
3002ff31:	call   0x3002ae0b
3002ff36:	int3   
3002ff37:	push   esi
3002ff38:	mov    esi,ecx
3002ff3a:	test   DWORD PTR [esi],0xffff0000
3002ff40:	je     0x3002ff52
3002ff42:	cmp    DWORD PTR [esi],0x0
3002ff45:	je     0x3002ff52
3002ff47:	push   DWORD PTR [esi]
3002ff49:	call   DWORD PTR ds:0x300455d0
3002ff4f:	and    DWORD PTR [esi],0x0
3002ff52:	mov    ecx,DWORD PTR [esi+0x5c]
3002ff55:	sub    ecx,0x10
3002ff58:	pop    esi
3002ff59:	jmp    0x30004017
3002ff5e:	push   0x4
3002ff60:	mov    eax,0x3003f5c0
3002ff65:	call   0x3000116a
3002ff6a:	mov    esi,ecx
3002ff6c:	mov    DWORD PTR [ebp-0x10],esi
3002ff6f:	mov    DWORD PTR [esi],0x30006ddc
3002ff75:	and    DWORD PTR [ebp-0x4],0x0
3002ff79:	mov    DWORD PTR [esi+0x4],0xc0000001
3002ff80:	mov    ecx,DWORD PTR ds:0x300430f4
3002ff86:	mov    eax,DWORD PTR [ecx]
3002ff88:	call   DWORD PTR [eax+0x8]
3002ff8b:	or     DWORD PTR [ebp-0x4],0xffffffff
3002ff8f:	lea    ecx,[esi+0x2c]
3002ff92:	call   0x3002ff37
3002ff97:	mov    ecx,DWORD PTR [esi+0x28]
3002ff9a:	test   ecx,ecx
3002ff9c:	je     0x3002ffa3
3002ff9e:	call   0x30007e20
3002ffa3:	lea    ecx,[esi+0x4]
3002ffa6:	call   0x3001e3be
3002ffab:	call   0x3000119d
3002ffb0:	ret    
3002ffb1:	push   esi
3002ffb2:	mov    esi,ecx
3002ffb4:	mov    eax,DWORD PTR [esi+0x8]
3002ffb7:	test   eax,0xffff0000
3002ffbc:	je     0x3002ffcd
3002ffbe:	test   eax,eax
3002ffc0:	je     0x3002ffcd
3002ffc2:	push   eax
3002ffc3:	call   DWORD PTR ds:0x300455d0
3002ffc9:	and    DWORD PTR [esi+0x8],0x0
3002ffcd:	pop    esi
3002ffce:	ret    
3002ffcf:	push   0x4
3002ffd1:	mov    eax,0x3003f520
3002ffd6:	call   0x3000116a
3002ffdb:	mov    esi,ecx
3002ffdd:	mov    DWORD PTR [ebp-0x10],esi
3002ffe0:	mov    DWORD PTR [esi],0x30006dc8
3002ffe6:	and    DWORD PTR [ebp-0x4],0x0
3002ffea:	mov    DWORD PTR [esi+0x4],0xc0000001
3002fff1:	mov    ecx,DWORD PTR ds:0x300430f4
3002fff7:	mov    eax,DWORD PTR [ecx]
3002fff9:	call   DWORD PTR [eax+0x8]
3002fffc:	or     DWORD PTR [ebp-0x4],0xffffffff
30030000:	lea    ecx,[esi+0x2c]
30030003:	call   0x3002ffb1
30030008:	mov    ecx,DWORD PTR [esi+0x28]
3003000b:	test   ecx,ecx
3003000d:	je     0x30030014
3003000f:	call   0x30007e20
30030014:	lea    ecx,[esi+0x4]
30030017:	call   0x3001e3be
3003001c:	call   0x3000119d
30030021:	ret    
30030022:	push   esi
30030023:	mov    esi,ecx
30030025:	test   DWORD PTR [esi],0xffff0000
3003002b:	je     0x3003003d
3003002d:	cmp    DWORD PTR [esi],0x0
30030030:	je     0x3003003d
30030032:	push   DWORD PTR [esi]
30030034:	call   DWORD PTR ds:0x300455d0
3003003a:	and    DWORD PTR [esi],0x0
3003003d:	pop    esi
3003003e:	ret    
3003003f:	push   0x4
30030041:	mov    eax,0x3003f570
30030046:	call   0x3000116a
3003004b:	mov    esi,ecx
3003004d:	mov    DWORD PTR [ebp-0x10],esi
30030050:	mov    DWORD PTR [esi],0x30006db4
30030056:	and    DWORD PTR [ebp-0x4],0x0
3003005a:	mov    DWORD PTR [esi+0x4],0xc0000001
30030061:	mov    ecx,DWORD PTR ds:0x300430f4
30030067:	mov    eax,DWORD PTR [ecx]
30030069:	call   DWORD PTR [eax+0x8]
3003006c:	or     DWORD PTR [ebp-0x4],0xffffffff
30030070:	lea    ecx,[esi+0x2c]
30030073:	call   0x30030022
30030078:	mov    ecx,DWORD PTR [esi+0x28]
3003007b:	test   ecx,ecx
3003007d:	je     0x30030084
3003007f:	call   0x30007e20
30030084:	lea    ecx,[esi+0x4]
30030087:	call   0x3001e3be
3003008c:	call   0x3000119d
30030091:	ret    
30030092:	mov    ecx,DWORD PTR [ecx+0x8]
30030095:	sub    ecx,0x10
30030098:	jmp    0x30004017
3003009d:	push   0x4
3003009f:	mov    eax,0x3003f4d0
300300a4:	call   0x3000116a
300300a9:	mov    esi,ecx
300300ab:	mov    DWORD PTR [ebp-0x10],esi
300300ae:	mov    DWORD PTR [esi],0x30006e04
300300b4:	and    DWORD PTR [ebp-0x4],0x0
300300b8:	mov    DWORD PTR [esi+0x4],0xc0000001
300300bf:	mov    ecx,DWORD PTR ds:0x300430f4
300300c5:	mov    eax,DWORD PTR [ecx]
300300c7:	call   DWORD PTR [eax+0x8]
300300ca:	mov    ecx,esi
300300cc:	call   0x300301e6
300300d1:	call   0x3000119d
300300d6:	ret    
300300d7:	mov    ecx,DWORD PTR [ecx+0xc]
300300da:	test   ecx,ecx
300300dc:	je     0x300300e5
300300de:	push   0x1
300300e0:	call   0x30007e52
300300e5:	ret    
300300e6:	push   ebp
300300e7:	mov    ebp,esp
300300e9:	push   esi
300300ea:	mov    esi,ecx
300300ec:	call   0x3002ff5e
300300f1:	test   BYTE PTR [ebp+0x8],0x1
300300f5:	je     0x300300ff
300300f7:	push   esi
300300f8:	call   DWORD PTR ds:0x300452ac
300300fe:	pop    ecx
300300ff:	mov    eax,esi
30030101:	pop    esi
30030102:	pop    ebp
30030103:	ret    0x4
30030106:	push   esi
30030107:	mov    esi,ecx
30030109:	lea    ecx,[esi+0x2c]
3003010c:	call   0x3002ff37
30030111:	mov    ecx,DWORD PTR [esi+0x28]
30030114:	test   ecx,ecx
30030116:	je     0x3003011d
30030118:	call   0x30007e20
3003011d:	lea    ecx,[esi+0x4]
30030120:	pop    esi
30030121:	jmp    0x3001e3be
30030126:	push   ebp
30030127:	mov    ebp,esp
30030129:	push   esi
3003012a:	mov    esi,ecx
3003012c:	call   0x3002ffcf
30030131:	test   BYTE PTR [ebp+0x8],0x1
30030135:	je     0x3003013f
30030137:	push   esi
30030138:	call   DWORD PTR ds:0x300452ac
3003013e:	pop    ecx
3003013f:	mov    eax,esi
30030141:	pop    esi
30030142:	pop    ebp
30030143:	ret    0x4
30030146:	push   esi
30030147:	mov    esi,ecx
30030149:	lea    ecx,[esi+0x2c]
3003014c:	call   0x3002ffb1
30030151:	mov    ecx,DWORD PTR [esi+0x28]
30030154:	test   ecx,ecx
30030156:	je     0x3003015d
30030158:	call   0x30007e20
3003015d:	lea    ecx,[esi+0x4]
30030160:	pop    esi
30030161:	jmp    0x3001e3be
30030166:	push   ebp
30030167:	mov    ebp,esp
30030169:	push   esi
3003016a:	mov    esi,ecx
3003016c:	call   0x3003003f
30030171:	test   BYTE PTR [ebp+0x8],0x1
30030175:	je     0x3003017f
30030177:	push   esi
30030178:	call   DWORD PTR ds:0x300452ac
3003017e:	pop    ecx
3003017f:	mov    eax,esi
30030181:	pop    esi
30030182:	pop    ebp
30030183:	ret    0x4
30030186:	push   esi
30030187:	mov    esi,ecx
30030189:	lea    ecx,[esi+0x2c]
3003018c:	call   0x30030022
30030191:	mov    ecx,DWORD PTR [esi+0x28]
30030194:	test   ecx,ecx
30030196:	je     0x3003019d
30030198:	call   0x30007e20
3003019d:	lea    ecx,[esi+0x4]
300301a0:	pop    esi
300301a1:	jmp    0x3001e3be
300301a6:	push   esi
300301a7:	mov    esi,ecx
300301a9:	lea    ecx,[esi+0x2c]
300301ac:	call   0x30007ef2
300301b1:	mov    ecx,DWORD PTR [esi+0x28]
300301b4:	test   ecx,ecx
300301b6:	je     0x300301bd
300301b8:	call   0x30007e20
300301bd:	lea    ecx,[esi+0x4]
300301c0:	pop    esi
300301c1:	jmp    0x3001e3be
300301c6:	push   ebp
300301c7:	mov    ebp,esp
300301c9:	push   esi
300301ca:	mov    esi,ecx
300301cc:	call   0x3003009d
300301d1:	test   BYTE PTR [ebp+0x8],0x1
300301d5:	je     0x300301df
300301d7:	push   esi
300301d8:	call   DWORD PTR ds:0x300452ac
300301de:	pop    ecx
300301df:	mov    eax,esi
300301e1:	pop    esi
300301e2:	pop    ebp
300301e3:	ret    0x4
300301e6:	push   esi
300301e7:	mov    esi,ecx
300301e9:	mov    ecx,DWORD PTR [esi+0x34]
300301ec:	sub    ecx,0x10
300301ef:	call   0x30004017
300301f4:	mov    ecx,DWORD PTR [esi+0x28]
300301f7:	test   ecx,ecx
300301f9:	je     0x30030200
300301fb:	call   0x30007e20
30030200:	lea    ecx,[esi+0x4]
30030203:	pop    esi
30030204:	jmp    0x3001e3be
30030209:	push   ebp
3003020a:	mov    ebp,esp
3003020c:	sub    esp,0x14
3003020f:	and    DWORD PTR [ebp-0x4],0x0
30030213:	push   ebx
30030214:	push   esi
30030215:	push   edi
30030216:	mov    edi,ecx
30030218:	lea    ecx,[ebp-0x4]
3003021b:	mov    DWORD PTR [ebp-0x8],edx
3003021e:	call   0x3003075a
30030223:	mov    ebx,DWORD PTR [ebp-0x4]
30030226:	mov    esi,eax
30030228:	test   esi,esi
3003022a:	js     0x3003026c
3003022c:	test   ebx,ebx
3003022e:	je     0x3003026c
30030230:	mov    eax,DWORD PTR [ebx]
30030232:	push   ebx
30030233:	call   DWORD PTR [eax+0x4]
30030236:	mov    esi,edi
30030238:	lea    edi,[ebp-0x14]
3003023b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003023c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003023d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003023e:	lea    edi,[ebx+0x2c]
30030241:	lea    esi,[ebp-0x14]
30030244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30030245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30030246:	lea    ecx,[ebp-0x14]
30030249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003024a:	call   0x3002ffb1
3003024f:	mov    edi,DWORD PTR [ebp-0x8]
30030252:	mov    eax,DWORD PTR [ebx]
30030254:	push   edi
30030255:	push   0x300082e0
3003025a:	push   ebx
3003025b:	call   DWORD PTR [eax]
3003025d:	mov    esi,eax
3003025f:	test   esi,esi
30030261:	jns    0x30030266
30030263:	and    DWORD PTR [edi],0x0
30030266:	mov    eax,DWORD PTR [ebx]
30030268:	push   ebx
30030269:	call   DWORD PTR [eax+0x8]
3003026c:	mov    eax,DWORD PTR [ebp+0x8]
3003026f:	test   eax,eax
30030271:	je     0x30030279
30030273:	test   esi,esi
30030275:	js     0x30030279
30030277:	mov    DWORD PTR [eax],ebx
30030279:	pop    edi
3003027a:	mov    eax,esi
3003027c:	pop    esi
3003027d:	pop    ebx
3003027e:	leave  
3003027f:	ret    0x4
30030282:	push   ebp
30030283:	mov    ebp,esp
30030285:	push   ecx
30030286:	push   ecx
30030287:	and    DWORD PTR [ebp-0x4],0x0
3003028b:	push   ebx
3003028c:	push   esi
3003028d:	mov    DWORD PTR [ebp-0x8],ecx
30030290:	push   edi
30030291:	lea    ecx,[ebp-0x4]
30030294:	mov    ebx,edx
30030296:	call   0x3003081a
3003029b:	mov    edi,DWORD PTR [ebp-0x4]
3003029e:	mov    esi,eax
300302a0:	test   esi,esi
300302a2:	js     0x300302e6
300302a4:	test   edi,edi
300302a6:	je     0x300302e6
300302a8:	mov    eax,DWORD PTR [edi]
300302aa:	push   edi
300302ab:	call   DWORD PTR [eax+0x4]
300302ae:	mov    esi,DWORD PTR [ebx]
300302b0:	push   DWORD PTR [ebp-0x8]
300302b3:	lea    ecx,[edi+0x24]
300302b6:	mov    DWORD PTR [ebp-0x4],esi
300302b9:	call   0x3000812a
300302be:	lea    ecx,[ebp-0x4]
300302c1:	mov    DWORD PTR [edi+0x2c],esi
300302c4:	call   0x30030022
300302c9:	mov    ebx,DWORD PTR [ebp+0x8]
300302cc:	mov    eax,DWORD PTR [edi]
300302ce:	push   ebx
300302cf:	push   0x300082e0
300302d4:	push   edi
300302d5:	call   DWORD PTR [eax]
300302d7:	mov    esi,eax
300302d9:	test   esi,esi
300302db:	jns    0x300302e0
300302dd:	and    DWORD PTR [ebx],0x0
300302e0:	mov    eax,DWORD PTR [edi]
300302e2:	push   edi
300302e3:	call   DWORD PTR [eax+0x8]
300302e6:	mov    eax,DWORD PTR [ebp+0xc]
300302e9:	test   eax,eax
300302eb:	je     0x300302f3
300302ed:	test   esi,esi
300302ef:	js     0x300302f3
300302f1:	mov    DWORD PTR [eax],edi
300302f3:	pop    edi
300302f4:	mov    eax,esi
300302f6:	pop    esi
300302f7:	pop    ebx
300302f8:	leave  
300302f9:	ret    0x8
300302fc:	push   ebp
300302fd:	mov    ebp,esp
300302ff:	push   ecx
30030300:	push   ecx
30030301:	and    DWORD PTR [ebp-0x4],0x0
30030305:	push   ebx
30030306:	push   esi
30030307:	mov    DWORD PTR [ebp-0x8],ecx
3003030a:	push   edi
3003030b:	lea    ecx,[ebp-0x4]
3003030e:	mov    ebx,edx
30030310:	call   0x3003081a
30030315:	mov    esi,DWORD PTR [ebp-0x4]
30030318:	mov    edi,eax
3003031a:	test   edi,edi
3003031c:	js     0x30030355
3003031e:	test   esi,esi
30030320:	je     0x30030355
30030322:	mov    eax,DWORD PTR [esi]
30030324:	push   esi
30030325:	call   DWORD PTR [eax+0x4]
30030328:	mov    ecx,DWORD PTR [ebp-0x8]
3003032b:	mov    eax,DWORD PTR [ecx]
3003032d:	lea    ecx,[ebp-0x8]
30030330:	mov    DWORD PTR [ebp-0x8],eax
30030333:	mov    DWORD PTR [esi+0x2c],eax
30030336:	call   0x30030022
3003033b:	mov    eax,DWORD PTR [esi]
3003033d:	push   ebx
3003033e:	push   0x300082e0
30030343:	push   esi
30030344:	call   DWORD PTR [eax]
30030346:	mov    edi,eax
30030348:	test   edi,edi
3003034a:	jns    0x3003034f
3003034c:	and    DWORD PTR [ebx],0x0
3003034f:	mov    eax,DWORD PTR [esi]
30030351:	push   esi
30030352:	call   DWORD PTR [eax+0x8]
30030355:	mov    eax,DWORD PTR [ebp+0x8]
30030358:	test   eax,eax
3003035a:	je     0x30030362
3003035c:	test   edi,edi
3003035e:	js     0x30030362
30030360:	mov    DWORD PTR [eax],esi
30030362:	mov    eax,edi
30030364:	pop    edi
30030365:	pop    esi
30030366:	pop    ebx
30030367:	leave  
30030368:	ret    0x4
3003036b:	push   0x6c
3003036d:	mov    eax,0x3003f19c
30030372:	call   0x3000116a
30030377:	mov    edi,edx
30030379:	mov    DWORD PTR [ebp-0x14],edi
3003037c:	mov    DWORD PTR [ebp-0x18],ecx
3003037f:	and    DWORD PTR [ebp-0x10],0x0
30030383:	lea    ecx,[ebp-0x10]
30030386:	call   0x300306c4
3003038b:	mov    ebx,DWORD PTR [ebp-0x10]
3003038e:	mov    esi,eax
30030390:	test   esi,esi
30030392:	js     0x30030410
30030394:	test   ebx,ebx
30030396:	je     0x30030410
30030398:	mov    eax,DWORD PTR [ebx]
3003039a:	push   ebx
3003039b:	call   DWORD PTR [eax+0x4]
3003039e:	mov    eax,DWORD PTR [ebp-0x14]
300303a1:	push   0x17
300303a3:	mov    eax,DWORD PTR [eax+0x5c]
300303a6:	pop    ecx
300303a7:	mov    esi,edi
300303a9:	sub    eax,0x10
300303ac:	lea    edi,[ebp-0x78]
300303af:	push   eax
300303b0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
300303b2:	call   0x30004306
300303b7:	add    eax,0x10
300303ba:	pop    ecx
300303bb:	mov    DWORD PTR [ebp-0x1c],eax
300303be:	push   DWORD PTR [ebp-0x18]
300303c1:	and    DWORD PTR [ebp-0x4],0x0
300303c5:	lea    ecx,[ebx+0x24]
300303c8:	call   0x3000812a
300303cd:	push   0x17
300303cf:	pop    ecx
300303d0:	lea    esi,[ebp-0x78]
300303d3:	lea    edi,[ebx+0x2c]
300303d6:	lea    eax,[ebp-0x1c]
300303d9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
300303db:	lea    ecx,[ebx+0x88]
300303e1:	push   eax
300303e2:	call   0x300014c1
300303e7:	or     DWORD PTR [ebp-0x4],0xffffffff
300303eb:	lea    ecx,[ebp-0x78]
300303ee:	call   0x3002ff37
300303f3:	mov    edi,DWORD PTR [ebp+0xc]
300303f6:	mov    eax,DWORD PTR [ebx]
300303f8:	push   edi
300303f9:	push   0x300082e0
300303fe:	push   ebx
300303ff:	call   DWORD PTR [eax]
30030401:	mov    esi,eax
30030403:	test   esi,esi
30030405:	jns    0x3003040a
30030407:	and    DWORD PTR [edi],0x0
3003040a:	mov    eax,DWORD PTR [ebx]
3003040c:	push   ebx
3003040d:	call   DWORD PTR [eax+0x8]
30030410:	mov    eax,DWORD PTR [ebp+0x10]
30030413:	test   eax,eax
30030415:	je     0x3003041d
30030417:	test   esi,esi
30030419:	js     0x3003041d
3003041b:	mov    DWORD PTR [eax],ebx
3003041d:	mov    eax,esi
3003041f:	call   0x3000119d
30030424:	ret    0xc
30030427:	push   0x68
30030429:	mov    eax,0x3003f0ac
3003042e:	call   0x3000116a
30030433:	mov    edi,ecx
30030435:	mov    DWORD PTR [ebp-0x14],edi
30030438:	and    DWORD PTR [ebp-0x10],0x0
3003043c:	lea    ecx,[ebp-0x10]
3003043f:	call   0x300306c4
30030444:	mov    ebx,DWORD PTR [ebp-0x10]
30030447:	mov    esi,eax
30030449:	test   esi,esi
3003044b:	js     0x300304be
3003044d:	test   ebx,ebx
3003044f:	je     0x300304be
30030451:	mov    eax,DWORD PTR [ebx]
30030453:	push   ebx
30030454:	call   DWORD PTR [eax+0x4]
30030457:	mov    eax,DWORD PTR [ebp-0x14]
3003045a:	push   0x17
3003045c:	mov    eax,DWORD PTR [eax+0x5c]
3003045f:	pop    ecx
30030460:	mov    esi,edi
30030462:	sub    eax,0x10
30030465:	lea    edi,[ebp-0x74]
30030468:	push   eax
30030469:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003046b:	call   0x30004306
30030470:	add    eax,0x10
30030473:	pop    ecx
30030474:	mov    DWORD PTR [ebp-0x18],eax
30030477:	and    DWORD PTR [ebp-0x4],0x0
3003047b:	push   0x17
3003047d:	pop    ecx
3003047e:	lea    esi,[ebp-0x74]
30030481:	lea    edi,[ebx+0x2c]
30030484:	lea    eax,[ebp-0x18]
30030487:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
30030489:	lea    ecx,[ebx+0x88]
3003048f:	push   eax
30030490:	call   0x300014c1
30030495:	or     DWORD PTR [ebp-0x4],0xffffffff
30030499:	lea    ecx,[ebp-0x74]
3003049c:	call   0x3002ff37
300304a1:	mov    edi,DWORD PTR [ebp+0x8]
300304a4:	mov    eax,DWORD PTR [ebx]
300304a6:	push   edi
300304a7:	push   0x300082e0
300304ac:	push   ebx
300304ad:	call   DWORD PTR [eax]
300304af:	mov    esi,eax
300304b1:	test   esi,esi
300304b3:	jns    0x300304b8
300304b5:	and    DWORD PTR [edi],0x0
300304b8:	mov    eax,DWORD PTR [ebx]
300304ba:	push   ebx
300304bb:	call   DWORD PTR [eax+0x8]
300304be:	mov    eax,DWORD PTR [ebp+0xc]
300304c1:	test   eax,eax
300304c3:	je     0x300304cb
300304c5:	test   esi,esi
300304c7:	js     0x300304cb
300304c9:	mov    DWORD PTR [eax],ebx
300304cb:	mov    eax,esi
300304cd:	call   0x3000119d
300304d2:	ret    0x8
300304d5:	push   0x1c
300304d7:	mov    eax,0x3003f0fc
300304dc:	call   0x3000116a
300304e1:	mov    ebx,ecx
300304e3:	and    DWORD PTR [ebp-0x10],0x0
300304e7:	lea    ecx,[ebp-0x10]
300304ea:	call   0x300088e7
300304ef:	mov    esi,DWORD PTR [ebp-0x10]
300304f2:	mov    edi,eax
300304f4:	test   edi,edi
300304f6:	js     0x30030544
300304f8:	test   esi,esi
300304fa:	je     0x30030544
300304fc:	mov    eax,DWORD PTR [esi]
300304fe:	push   esi
300304ff:	call   DWORD PTR [eax+0x4]
30030502:	push   ebx
30030503:	lea    ecx,[ebp-0x28]
30030506:	call   0x300080c4
3003050b:	and    DWORD PTR [ebp-0x4],0x0
3003050f:	lea    eax,[ebp-0x28]
30030512:	push   eax
30030513:	lea    ecx,[esi+0x2c]
30030516:	call   0x30008165
3003051b:	or     DWORD PTR [ebp-0x4],0xffffffff
3003051f:	lea    ecx,[ebp-0x28]
30030522:	call   0x30007ef2
30030527:	mov    ebx,DWORD PTR [ebp+0x8]
3003052a:	mov    eax,DWORD PTR [esi]
3003052c:	push   ebx
3003052d:	push   0x300082e0
30030532:	push   esi
30030533:	call   DWORD PTR [eax]
30030535:	mov    edi,eax
30030537:	test   edi,edi
30030539:	jns    0x3003053e
3003053b:	and    DWORD PTR [ebx],0x0
3003053e:	mov    eax,DWORD PTR [esi]
30030540:	push   esi
30030541:	call   DWORD PTR [eax+0x8]
30030544:	mov    eax,DWORD PTR [ebp+0xc]
30030547:	test   eax,eax
30030549:	je     0x30030551
3003054b:	test   edi,edi
3003054d:	js     0x30030551
3003054f:	mov    DWORD PTR [eax],esi
30030551:	mov    eax,edi
30030553:	call   0x3000119d
30030558:	ret    0x8
3003055b:	push   0x18
3003055d:	mov    eax,0x3003f14c
30030562:	call   0x3000116a
30030567:	mov    edi,edx
30030569:	mov    DWORD PTR [ebp-0x14],edi
3003056c:	mov    DWORD PTR [ebp-0x18],ecx
3003056f:	and    DWORD PTR [ebp-0x10],0x0
30030573:	lea    ecx,[ebp-0x10]
30030576:	call   0x300308d7
3003057b:	mov    ebx,DWORD PTR [ebp-0x10]
3003057e:	mov    esi,eax
30030580:	test   esi,esi
30030582:	js     0x30030601
30030584:	test   ebx,ebx
30030586:	je     0x30030601
30030588:	mov    eax,DWORD PTR [ebx]
3003058a:	push   ebx
3003058b:	call   DWORD PTR [eax+0x4]
3003058e:	mov    eax,DWORD PTR [ebp-0x14]
30030591:	mov    ebx,DWORD PTR [edi]
30030593:	mov    eax,DWORD PTR [eax+0x8]
30030596:	mov    edi,DWORD PTR [edi+0x4]
30030599:	sub    eax,0x10
3003059c:	push   eax
3003059d:	mov    DWORD PTR [ebp-0x24],ebx
300305a0:	mov    DWORD PTR [ebp-0x20],edi
300305a3:	call   0x30004306
300305a8:	lea    esi,[eax+0x10]
300305ab:	pop    ecx
300305ac:	mov    DWORD PTR [ebp-0x1c],esi
300305af:	and    DWORD PTR [ebp-0x4],0x0
300305b3:	mov    ecx,DWORD PTR [ebp-0x10]
300305b6:	push   DWORD PTR [ebp-0x18]
300305b9:	add    ecx,0x24
300305bc:	call   0x3000812a
300305c1:	mov    eax,DWORD PTR [ebp-0x10]
300305c4:	mov    DWORD PTR [eax+0x2c],ebx
300305c7:	mov    ebx,eax
300305c9:	lea    eax,[ebp-0x1c]
300305cc:	lea    ecx,[ebx+0x34]
300305cf:	push   eax
300305d0:	mov    DWORD PTR [ebx+0x30],edi
300305d3:	call   0x300014c1
300305d8:	or     DWORD PTR [ebp-0x4],0xffffffff
300305dc:	lea    ecx,[esi-0x10]
300305df:	call   0x30004017
300305e4:	mov    edi,DWORD PTR [ebp+0xc]
300305e7:	mov    eax,DWORD PTR [ebx]
300305e9:	push   edi
300305ea:	push   0x300082e0
300305ef:	push   ebx
300305f0:	call   DWORD PTR [eax]
300305f2:	mov    esi,eax
300305f4:	test   esi,esi
300305f6:	jns    0x300305fb
300305f8:	and    DWORD PTR [edi],0x0
300305fb:	mov    eax,DWORD PTR [ebx]
300305fd:	push   ebx
300305fe:	call   DWORD PTR [eax+0x8]
30030601:	mov    eax,DWORD PTR [ebp+0x10]
30030604:	test   eax,eax
30030606:	je     0x3003060e
30030608:	test   esi,esi
3003060a:	js     0x3003060e
3003060c:	mov    DWORD PTR [eax],ebx
3003060e:	mov    eax,esi
30030610:	call   0x3000119d
30030615:	ret    0xc
30030618:	push   0x14
3003061a:	mov    eax,0x3003f05c
3003061f:	call   0x3000116a
30030624:	mov    edi,ecx
30030626:	mov    DWORD PTR [ebp-0x14],edi
30030629:	and    DWORD PTR [ebp-0x10],0x0
3003062d:	lea    ecx,[ebp-0x10]
30030630:	call   0x300308d7
30030635:	mov    ebx,DWORD PTR [ebp-0x10]
30030638:	mov    esi,eax
3003063a:	test   esi,esi
3003063c:	js     0x300306ad
3003063e:	test   ebx,ebx
30030640:	je     0x300306ad
30030642:	mov    eax,DWORD PTR [ebx]
30030644:	push   ebx
30030645:	call   DWORD PTR [eax+0x4]
30030648:	mov    eax,DWORD PTR [ebp-0x14]
3003064b:	mov    ebx,DWORD PTR [edi]
3003064d:	mov    eax,DWORD PTR [eax+0x8]
30030650:	mov    edi,DWORD PTR [edi+0x4]
30030653:	sub    eax,0x10
30030656:	push   eax
30030657:	mov    DWORD PTR [ebp-0x20],ebx
3003065a:	mov    DWORD PTR [ebp-0x1c],edi
3003065d:	call   0x30004306
30030662:	lea    esi,[eax+0x10]
30030665:	pop    ecx
30030666:	mov    DWORD PTR [ebp-0x18],esi
30030669:	and    DWORD PTR [ebp-0x4],0x0
3003066d:	mov    eax,DWORD PTR [ebp-0x10]
30030670:	mov    DWORD PTR [eax+0x2c],ebx
30030673:	mov    ebx,eax
30030675:	lea    eax,[ebp-0x18]
30030678:	lea    ecx,[ebx+0x34]
3003067b:	push   eax
3003067c:	mov    DWORD PTR [ebx+0x30],edi
3003067f:	call   0x300014c1
30030684:	or     DWORD PTR [ebp-0x4],0xffffffff
30030688:	lea    ecx,[esi-0x10]
3003068b:	call   0x30004017
30030690:	mov    edi,DWORD PTR [ebp+0x8]
30030693:	mov    eax,DWORD PTR [ebx]
30030695:	push   edi
30030696:	push   0x300082e0
3003069b:	push   ebx
3003069c:	call   DWORD PTR [eax]
3003069e:	mov    esi,eax
300306a0:	test   esi,esi
300306a2:	jns    0x300306a7
300306a4:	and    DWORD PTR [edi],0x0
300306a7:	mov    eax,DWORD PTR [ebx]
300306a9:	push   ebx
300306aa:	call   DWORD PTR [eax+0x8]
300306ad:	mov    eax,DWORD PTR [ebp+0xc]
300306b0:	test   eax,eax
300306b2:	je     0x300306ba
300306b4:	test   esi,esi
300306b6:	js     0x300306ba
300306b8:	mov    DWORD PTR [eax],ebx
300306ba:	mov    eax,esi
300306bc:	call   0x3000119d
300306c1:	ret    0x8
300306c4:	push   0x14
300306c6:	mov    eax,0x3003f9f8
300306cb:	call   0x30006c56
300306d0:	mov    ebx,ecx
300306d2:	mov    DWORD PTR [ebp-0x14],ebx
300306d5:	test   ebx,ebx
300306d7:	jne    0x300306e0
300306d9:	mov    eax,0x80004003
300306de:	jmp    0x30030743
300306e0:	xor    edi,edi
300306e2:	push   0x300430f0
300306e7:	mov    esi,0x8007000e
300306ec:	push   0x8c
300306f1:	mov    DWORD PTR [ebx],edi
300306f3:	mov    DWORD PTR [ebp-0x18],esi
300306f6:	mov    DWORD PTR [ebp-0x1c],edi
300306f9:	mov    DWORD PTR [ebp-0x4],edi
300306fc:	call   0x30006cc2
30030701:	pop    ecx
30030702:	pop    ecx
30030703:	mov    DWORD PTR [ebp-0x20],eax
30030706:	mov    BYTE PTR [ebp-0x4],0x1
3003070a:	test   eax,eax
3003070c:	je     0x30030718
3003070e:	push   ecx
3003070f:	mov    ecx,eax
30030711:	call   0x3003096a
30030716:	mov    edi,eax
30030718:	or     DWORD PTR [ebp-0x4],0xffffffff
3003071c:	test   edi,edi
3003071e:	je     0x3003073f
30030720:	lea    ecx,[edi+0x4]
30030723:	call   0x30006d76
30030728:	mov    esi,eax
3003072a:	test   esi,esi
3003072c:	js     0x30030732
3003072e:	xor    esi,esi
30030730:	test   esi,esi
30030732:	je     0x3003073f
30030734:	mov    eax,DWORD PTR [edi]
30030736:	push   0x1
30030738:	mov    ecx,edi
3003073a:	call   DWORD PTR [eax+0x10]
3003073d:	xor    edi,edi
3003073f:	mov    DWORD PTR [ebx],edi
30030741:	mov    eax,esi
30030743:	call   0x3000119d
30030748:	ret    
30030749:	mov    eax,0x3003074f
3003074e:	ret    
3003074f:	mov    ebx,DWORD PTR [ebp-0x14]
30030752:	mov    esi,DWORD PTR [ebp-0x18]
30030755:	mov    edi,DWORD PTR [ebp-0x1c]
30030758:	jmp    0x3003073f
3003075a:	push   0x14
3003075c:	mov    eax,0x3003f8d0
30030761:	call   0x30006c56
30030766:	mov    eax,ecx
30030768:	mov    DWORD PTR [ebp-0x1c],eax
3003076b:	test   eax,eax
3003076d:	jne    0x30030779
3003076f:	mov    eax,0x80004003
30030774:	jmp    0x30030814
30030779:	xor    ecx,ecx
3003077b:	push   0x300430f0
30030780:	mov    ebx,0x8007000e
30030785:	push   0x38
30030787:	mov    DWORD PTR [eax],ecx
30030789:	mov    DWORD PTR [ebp-0x14],ebx
3003078c:	mov    DWORD PTR [ebp-0x18],ecx
3003078f:	mov    DWORD PTR [ebp-0x4],ecx
30030792:	call   0x30006cc2
30030797:	pop    ecx
30030798:	mov    esi,eax
3003079a:	pop    ecx
3003079b:	mov    DWORD PTR [ebp-0x20],esi
3003079e:	test   esi,esi
300307a0:	je     0x300307e4
300307a2:	and    DWORD PTR [esi+0x4],0x0
300307a6:	xor    eax,eax
300307a8:	push   0x6
300307aa:	pop    ecx
300307ab:	lea    edi,[esi+0x8]
300307ae:	rep stos DWORD PTR es:[edi],eax
300307b0:	mov    BYTE PTR [esi+0x20],al
300307b3:	mov    DWORD PTR [esi+0x24],eax
300307b6:	mov    DWORD PTR [esi+0x28],eax
300307b9:	lea    edi,[esi+0x2c]
300307bc:	stos   DWORD PTR es:[edi],eax
300307bd:	stos   DWORD PTR es:[edi],eax
300307be:	stos   DWORD PTR es:[edi],eax
300307bf:	mov    BYTE PTR [ebp-0x4],0x2
300307c3:	mov    DWORD PTR [esi],0x30006dc8
300307c9:	mov    ecx,DWORD PTR ds:0x300430f4
300307cf:	mov    eax,DWORD PTR [ecx]
300307d1:	call   DWORD PTR [eax+0x4]
300307d4:	jmp    0x300307e6
300307d6:	mov    eax,0x300307dc
300307db:	ret    
300307dc:	mov    ebx,DWORD PTR [ebp-0x14]
300307df:	mov    esi,DWORD PTR [ebp-0x18]
300307e2:	jmp    0x3003080d
300307e4:	xor    esi,esi
300307e6:	or     DWORD PTR [ebp-0x4],0xffffffff
300307ea:	test   esi,esi
300307ec:	je     0x3003080d
300307ee:	lea    ecx,[esi+0x4]
300307f1:	call   0x30006d76
300307f6:	mov    ebx,eax
300307f8:	test   ebx,ebx
300307fa:	js     0x30030800
300307fc:	xor    ebx,ebx
300307fe:	test   ebx,ebx
30030800:	je     0x3003080d
30030802:	mov    eax,DWORD PTR [esi]
30030804:	push   0x1
30030806:	mov    ecx,esi
30030808:	call   DWORD PTR [eax+0x10]
3003080b:	xor    esi,esi
3003080d:	mov    eax,DWORD PTR [ebp-0x1c]
30030810:	mov    DWORD PTR [eax],esi
30030812:	mov    eax,ebx
30030814:	call   0x3000119d
30030819:	ret    
3003081a:	push   0x14
3003081c:	mov    eax,0x3003f990
30030821:	call   0x30006c56
30030826:	mov    eax,ecx
30030828:	mov    DWORD PTR [ebp-0x1c],eax
3003082b:	test   eax,eax
3003082d:	jne    0x30030839
3003082f:	mov    eax,0x80004003
30030834:	jmp    0x300308d1
30030839:	xor    ecx,ecx
3003083b:	push   0x300430f0
30030840:	mov    ebx,0x8007000e
30030845:	push   0x30
30030847:	mov    DWORD PTR [eax],ecx
30030849:	mov    DWORD PTR [ebp-0x14],ebx
3003084c:	mov    DWORD PTR [ebp-0x18],ecx
3003084f:	mov    DWORD PTR [ebp-0x4],ecx
30030852:	call   0x30006cc2
30030857:	pop    ecx
30030858:	mov    esi,eax
3003085a:	pop    ecx
3003085b:	mov    DWORD PTR [ebp-0x20],esi
3003085e:	test   esi,esi
30030860:	je     0x300308a1
30030862:	and    DWORD PTR [esi+0x4],0x0
30030866:	xor    eax,eax
30030868:	push   0x6
3003086a:	pop    ecx
3003086b:	lea    edi,[esi+0x8]
3003086e:	rep stos DWORD PTR es:[edi],eax
30030870:	mov    BYTE PTR [esi+0x20],al
30030873:	mov    DWORD PTR [esi+0x24],eax
30030876:	mov    DWORD PTR [esi+0x28],eax
30030879:	mov    DWORD PTR [esi+0x2c],eax
3003087c:	mov    BYTE PTR [ebp-0x4],0x2
30030880:	mov    DWORD PTR [esi],0x30006db4
30030886:	mov    ecx,DWORD PTR ds:0x300430f4
3003088c:	mov    eax,DWORD PTR [ecx]
3003088e:	call   DWORD PTR [eax+0x4]
30030891:	jmp    0x300308a3
30030893:	mov    eax,0x30030899
30030898:	ret    
30030899:	mov    ebx,DWORD PTR [ebp-0x14]
3003089c:	mov    esi,DWORD PTR [ebp-0x18]
3003089f:	jmp    0x300308ca
300308a1:	xor    esi,esi
300308a3:	or     DWORD PTR [ebp-0x4],0xffffffff
300308a7:	test   esi,esi
300308a9:	je     0x300308ca
300308ab:	lea    ecx,[esi+0x4]
300308ae:	call   0x30006d76
300308b3:	mov    ebx,eax
300308b5:	test   ebx,ebx
300308b7:	js     0x300308bd
300308b9:	xor    ebx,ebx
300308bb:	test   ebx,ebx
300308bd:	je     0x300308ca
300308bf:	mov    eax,DWORD PTR [esi]
300308c1:	push   0x1
300308c3:	mov    ecx,esi
300308c5:	call   DWORD PTR [eax+0x10]
300308c8:	xor    esi,esi
300308ca:	mov    eax,DWORD PTR [ebp-0x1c]
300308cd:	mov    DWORD PTR [eax],esi
300308cf:	mov    eax,ebx
300308d1:	call   0x3000119d
300308d6:	ret    
300308d7:	push   0x14
300308d9:	mov    eax,0x3003f938
300308de:	call   0x30006c56
300308e3:	mov    ebx,ecx
300308e5:	mov    DWORD PTR [ebp-0x14],ebx
300308e8:	test   ebx,ebx
300308ea:	jne    0x300308f3
300308ec:	mov    eax,0x80004003
300308f1:	jmp    0x30030953
300308f3:	xor    edi,edi
300308f5:	push   0x300430f0
300308fa:	mov    esi,0x8007000e
300308ff:	push   0x38
30030901:	mov    DWORD PTR [ebx],edi
30030903:	mov    DWORD PTR [ebp-0x18],esi
30030906:	mov    DWORD PTR [ebp-0x1c],edi
30030909:	mov    DWORD PTR [ebp-0x4],edi
3003090c:	call   0x30006cc2
30030911:	pop    ecx
30030912:	pop    ecx
30030913:	mov    DWORD PTR [ebp-0x20],eax
30030916:	mov    BYTE PTR [ebp-0x4],0x1
3003091a:	test   eax,eax
3003091c:	je     0x30030928
3003091e:	push   ecx
3003091f:	mov    ecx,eax
30030921:	call   0x300309ce
30030926:	mov    edi,eax
30030928:	or     DWORD PTR [ebp-0x4],0xffffffff
3003092c:	test   edi,edi
3003092e:	je     0x3003094f
30030930:	lea    ecx,[edi+0x4]
30030933:	call   0x30006d76
30030938:	mov    esi,eax
3003093a:	test   esi,esi
3003093c:	js     0x30030942
3003093e:	xor    esi,esi
30030940:	test   esi,esi
30030942:	je     0x3003094f
30030944:	mov    eax,DWORD PTR [edi]
30030946:	push   0x1
30030948:	mov    ecx,edi
3003094a:	call   DWORD PTR [eax+0x10]
3003094d:	xor    edi,edi
3003094f:	mov    DWORD PTR [ebx],edi
30030951:	mov    eax,esi
30030953:	call   0x3000119d
30030958:	ret    
30030959:	mov    eax,0x3003095f
3003095e:	ret    
3003095f:	mov    ebx,DWORD PTR [ebp-0x14]
30030962:	mov    esi,DWORD PTR [ebp-0x18]
30030965:	mov    edi,DWORD PTR [ebp-0x1c]
30030968:	jmp    0x3003094f
3003096a:	push   0x4
3003096c:	mov    eax,0x3003f5c0
30030971:	call   0x3000116a
30030976:	mov    ebx,ecx
30030978:	mov    DWORD PTR [ebp-0x10],ebx
3003097b:	and    DWORD PTR [ebx+0x4],0x0
3003097f:	push   0x6
30030981:	xor    eax,eax
30030983:	pop    ecx
30030984:	lea    edi,[ebx+0x8]
30030987:	rep stos DWORD PTR es:[edi],eax
30030989:	lea    esi,[ebx+0x2c]
3003098c:	mov    BYTE PTR [ebx+0x20],al
3003098f:	lea    ecx,[esi+0x5c]
30030992:	push   0x3004306c
30030997:	mov    DWORD PTR [ebx+0x24],eax
3003099a:	mov    DWORD PTR [ebx+0x28],eax
3003099d:	call   0x30004256
300309a2:	push   0x5c
300309a4:	push   0x0
300309a6:	push   esi
300309a7:	call   0x300011b1
300309ac:	add    esp,0xc
300309af:	and    DWORD PTR [ebp-0x4],0x0
300309b3:	mov    DWORD PTR [ebx],0x30006ddc
300309b9:	mov    ecx,DWORD PTR ds:0x300430f4
300309bf:	mov    eax,DWORD PTR [ecx]
300309c1:	call   DWORD PTR [eax+0x4]
300309c4:	mov    eax,ebx
300309c6:	call   0x3000119d
300309cb:	ret    0x4
300309ce:	push   0x4
300309d0:	mov    eax,0x3003f4d0
300309d5:	call   0x3000116a
300309da:	mov    esi,ecx
300309dc:	mov    DWORD PTR [ebp-0x10],esi
300309df:	xor    ebx,ebx
300309e1:	push   0x6
300309e3:	mov    DWORD PTR [esi+0x4],ebx
300309e6:	pop    ecx
300309e7:	xor    eax,eax
300309e9:	lea    edi,[esi+0x8]
300309ec:	rep stos DWORD PTR es:[edi],eax
300309ee:	mov    BYTE PTR [esi+0x20],bl
300309f1:	lea    ecx,[esi+0x34]
300309f4:	push   0x3004306c
300309f9:	mov    DWORD PTR [esi+0x24],ebx
300309fc:	mov    DWORD PTR [esi+0x28],ebx
300309ff:	call   0x30004256
30030a04:	mov    DWORD PTR [esi+0x2c],ebx
30030a07:	mov    DWORD PTR [esi+0x30],ebx
30030a0a:	mov    DWORD PTR [ebp-0x4],ebx
30030a0d:	mov    DWORD PTR [esi],0x30006e04
30030a13:	mov    ecx,DWORD PTR ds:0x300430f4
30030a19:	mov    eax,DWORD PTR [ecx]
30030a1b:	call   DWORD PTR [eax+0x4]
30030a1e:	mov    eax,esi
30030a20:	call   0x3000119d
30030a25:	ret    0x4
30030a28:	push   ebp
30030a29:	mov    ebp,esp
30030a2b:	push   ecx
30030a2c:	push   esi
30030a2d:	push   DWORD PTR [ebp+0x8]
30030a30:	mov    esi,ecx
30030a32:	call   DWORD PTR ds:0x300454ec
30030a38:	test   eax,eax
30030a3a:	je     0x30030a66
30030a3c:	and    DWORD PTR [ebp-0x4],0x0
30030a40:	push   edi
30030a41:	lea    eax,[ebp-0x4]
30030a44:	push   eax
30030a45:	push   DWORD PTR [ebp+0x8]
30030a48:	push   DWORD PTR [esi]
30030a4a:	call   DWORD PTR ds:0x30045524
30030a50:	mov    edi,eax
30030a52:	test   edi,edi
30030a54:	js     0x30030a63
30030a56:	push   DWORD PTR [esi]
30030a58:	call   DWORD PTR ds:0x300454e8
30030a5e:	mov    ecx,DWORD PTR [ebp-0x4]
30030a61:	mov    DWORD PTR [esi],ecx
30030a63:	mov    eax,edi
30030a65:	pop    edi
30030a66:	pop    esi
30030a67:	leave  
30030a68:	ret    0x4
30030a6b:	push   ebp
30030a6c:	mov    ebp,esp
30030a6e:	mov    ecx,DWORD PTR [ebp+0x8]
30030a71:	mov    edx,DWORD PTR [ebp+0xc]
30030a74:	mov    eax,DWORD PTR [ecx]
30030a76:	cmp    eax,DWORD PTR [edx]
30030a78:	jne    0x30030a97
30030a7a:	mov    eax,DWORD PTR [ecx+0x4]
30030a7d:	cmp    eax,DWORD PTR [edx+0x4]
30030a80:	jne    0x30030a97
30030a82:	mov    eax,DWORD PTR [ecx+0x8]
30030a85:	cmp    eax,DWORD PTR [edx+0x8]
30030a88:	jne    0x30030a97
30030a8a:	mov    eax,DWORD PTR [ecx+0xc]
30030a8d:	cmp    eax,DWORD PTR [edx+0xc]
30030a90:	jne    0x30030a97
30030a92:	xor    eax,eax
30030a94:	inc    eax
30030a95:	jmp    0x30030a99
30030a97:	xor    eax,eax
30030a99:	pop    ebp
30030a9a:	ret    0x8
30030a9d:	push   0x10
30030a9f:	mov    eax,0x30040014
30030aa4:	call   0x3000116a
30030aa9:	mov    esi,ecx
30030aab:	push   0x30030b38
30030ab0:	lea    ecx,[ebp-0x18]
30030ab3:	call   0x3000437e
30030ab8:	and    DWORD PTR [ebp-0x4],0x0
30030abc:	push   0x30008fc4
30030ac1:	push   eax
30030ac2:	lea    eax,[ebp-0x14]
30030ac5:	push   eax
30030ac6:	call   0x3000ba45
30030acb:	push   esi
30030acc:	mov    edx,eax
30030ace:	lea    ecx,[ebp-0x10]
30030ad1:	mov    BYTE PTR [ebp-0x4],0x1
30030ad5:	call   0x30009298
30030ada:	lea    ecx,[ebp-0x1c]
30030add:	push   ecx
30030ade:	push   0x20219
30030ae3:	push   0x0
30030ae5:	push   DWORD PTR [eax]
30030ae7:	push   0x80000002
30030aec:	call   DWORD PTR ds:0x30045008
30030af2:	mov    ecx,DWORD PTR [ebp-0x10]
30030af5:	mov    ebx,eax
30030af7:	neg    ebx
30030af9:	sbb    bl,bl
30030afb:	add    ecx,0xfffffff0
30030afe:	call   0x30004017
30030b03:	mov    ecx,DWORD PTR [ebp-0x14]
30030b06:	add    ecx,0xfffffff0
30030b09:	call   0x30004017
30030b0e:	mov    ecx,DWORD PTR [ebp-0x18]
30030b11:	add    ecx,0xfffffff0
30030b14:	call   0x30004017
30030b19:	inc    bl
30030b1b:	je     0x30030b2b
30030b1d:	push   DWORD PTR [ebp-0x1c]
30030b20:	call   DWORD PTR ds:0x30045004
30030b26:	xor    eax,eax
30030b28:	inc    eax
30030b29:	jmp    0x30030b2d
30030b2b:	xor    eax,eax
30030b2d:	call   0x3000119d
30030b32:	ret    
30030b33:	nop
30030b34:	nop
30030b35:	nop
30030b36:	nop
30030b37:	nop
30030b38:	push   ebx
30030b39:	add    BYTE PTR [edi+0x0],ch
30030b3c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30030b41:	add    BYTE PTR [ecx+0x0],ah
30030b44:	jb     0x30030b46
30030b46:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
30030b4b:	add    BYTE PTR [ecx+0x0],ch
30030b4e:	arpl   WORD PTR [eax],ax
30030b50:	jb     0x30030b52
30030b52:	outs   dx,DWORD PTR ds:[esi]
30030b53:	add    BYTE PTR [ebx+0x0],dh
30030b56:	outs   dx,DWORD PTR ds:[esi]
30030b57:	add    BYTE PTR [esi+0x0],ah
30030b5a:	je     0x30030b5c
30030b5c:	pop    esp
30030b5d:	add    BYTE PTR [eax+eax*1+0x65],al
30030b61:	add    BYTE PTR [esi+0x0],dh
30030b64:	add    BYTE PTR fs:[ecx+0x0],ch
30030b68:	jbe    0x30030b6a
30030b6a:	pop    esp
30030b6b:	add    BYTE PTR [esi+0x0],dl
30030b6e:	push   ebx
30030b6f:	add    BYTE PTR [eax+eax*1+0x53],bl
30030b73:	add    BYTE PTR [ebp+0x0],ah
30030b76:	jb     0x30030b78
30030b78:	jbe    0x30030b7a
30030b7a:	imul   eax,DWORD PTR [eax],0x690063
30030b80:	outs   dx,BYTE PTR ds:[esi]
30030b81:	add    BYTE PTR [edi+0x0],ah
30030b84:	pop    esp
30030b85:	add    BYTE PTR [ecx],dh
30030b87:	add    BYTE PTR [ecx],dh
30030b89:	add    BYTE PTR [esi],ch
30030b8b:	add    BYTE PTR [eax],dh
30030b8d:	add    BYTE PTR [eax],al
30030b8f:	add    BYTE PTR [edx+0x8],ch
30030b92:	mov    eax,0x300400c0
30030b97:	call   0x3000116a
30030b9c:	mov    edi,ecx
30030b9e:	push   0x3004306c
30030ba3:	lea    ecx,[ebp-0x10]
30030ba6:	call   0x30004256
30030bab:	mov    esi,0x104
30030bb0:	xor    ebx,ebx
30030bb2:	push   esi
30030bb3:	lea    ecx,[ebp-0x10]
30030bb6:	mov    DWORD PTR [ebp-0x4],ebx
30030bb9:	call   0x30004286
30030bbe:	push   esi
30030bbf:	push   eax
30030bc0:	push   ebx
30030bc1:	call   DWORD PTR ds:0x300451f8
30030bc7:	cmp    eax,esi
30030bc9:	mov    esi,DWORD PTR [ebp-0x10]
30030bcc:	je     0x30030bd2
30030bce:	test   eax,eax
30030bd0:	jne    0x30030bdc
30030bd2:	call   DWORD PTR ds:0x30045160
30030bd8:	test   eax,eax
30030bda:	jne    0x30030c0d
30030bdc:	push   esi
30030bdd:	lea    ecx,[ebp-0x14]
30030be0:	call   0x3000437e
30030be5:	lea    eax,[ebp-0x14]
30030be8:	push   eax
30030be9:	mov    ecx,edi
30030beb:	mov    BYTE PTR [ebp-0x4],0x1
30030bef:	call   0x300014c1
30030bf4:	mov    BYTE PTR [ebp-0x4],bl
30030bf7:	mov    ecx,DWORD PTR [ebp-0x14]
30030bfa:	lea    ecx,[ecx-0x10]
30030bfd:	call   0x30004017
30030c02:	mov    ecx,edi
30030c04:	call   0x300089c3
30030c09:	test   eax,eax
30030c0b:	jne    0x30030c12
30030c0d:	mov    ebx,0x80004005
30030c12:	lea    ecx,[esi-0x10]
30030c15:	call   0x30004017
30030c1a:	mov    eax,ebx
30030c1c:	call   0x3000119d
30030c21:	ret    
30030c22:	push   0x58
30030c24:	mov    eax,0x30040150
30030c29:	call   0x3000116a
30030c2e:	mov    edi,edx
30030c30:	mov    esi,ecx
30030c32:	test   esi,esi
30030c34:	setne  al
30030c37:	test   al,al
30030c39:	jne    0x30030c45
30030c3b:	mov    eax,0x80004003
30030c40:	jmp    0x30030f19
30030c45:	test   edi,edi
30030c47:	setne  al
30030c4a:	test   al,al
30030c4c:	je     0x30030c3b
30030c4e:	xor    eax,eax
30030c50:	mov    DWORD PTR [ebp-0x40],eax
30030c53:	mov    DWORD PTR [ebp-0x3c],eax
30030c56:	mov    DWORD PTR [ebp-0x38],eax
30030c59:	mov    DWORD PTR [ebp-0x4],eax
30030c5c:	mov    DWORD PTR [ebp-0x64],eax
30030c5f:	mov    DWORD PTR [ebp-0x60],eax
30030c62:	mov    DWORD PTR [ebp-0x5c],eax
30030c65:	mov    DWORD PTR [ebp-0x4c],eax
30030c68:	mov    DWORD PTR [ebp-0x48],eax
30030c6b:	mov    DWORD PTR [ebp-0x44],eax
30030c6e:	push   esi
30030c6f:	lea    ecx,[ebp-0x1c]
30030c72:	mov    BYTE PTR [ebp-0x4],0x2
30030c76:	call   0x3000437e
30030c7b:	push   0x30030f24
30030c80:	mov    ebx,0x300118f0
30030c85:	lea    eax,[ebp-0x1c]
30030c88:	push   ebx
30030c89:	push   eax
30030c8a:	mov    BYTE PTR [ebp-0x4],0x3
30030c8e:	call   0x3000b9f3
30030c93:	add    esp,0xc
30030c96:	lea    ecx,[ebp-0x24]
30030c99:	push   esi
30030c9a:	call   0x3000437e
30030c9f:	push   0x300118f8
30030ca4:	lea    eax,[ebp-0x24]
30030ca7:	push   ebx
30030ca8:	push   eax
30030ca9:	mov    BYTE PTR [ebp-0x4],0x4
30030cad:	call   0x3000b9f3
30030cb2:	add    esp,0xc
30030cb5:	mov    ebx,0x80000002
30030cba:	push   0x2000e
30030cbf:	push   DWORD PTR [ebp-0x1c]
30030cc2:	lea    ecx,[ebp-0x40]
30030cc5:	push   ebx
30030cc6:	call   0x300051d9
30030ccb:	mov    esi,0x80070000
30030cd0:	test   eax,eax
30030cd2:	je     0x30030d03
30030cd4:	push   0x0
30030cd6:	push   ecx
30030cd7:	push   0x20006
30030cdc:	push   0x0
30030cde:	push   ecx
30030cdf:	push   DWORD PTR [ebp-0x1c]
30030ce2:	lea    ecx,[ebp-0x40]
30030ce5:	push   ebx
30030ce6:	call   0x30009534
30030ceb:	mov    ebx,eax
30030ced:	test   ebx,ebx
30030cef:	jle    0x30030cf8
30030cf1:	movzx  ebx,bx
30030cf4:	or     ebx,esi
30030cf6:	test   ebx,ebx
30030cf8:	js     0x30030ee9
30030cfe:	mov    ebx,0x80000002
30030d03:	push   0x20019
30030d08:	push   DWORD PTR [ebp-0x24]
30030d0b:	lea    ecx,[ebp-0x4c]
30030d0e:	push   ebx
30030d0f:	call   0x300051d9
30030d14:	mov    ebx,eax
30030d16:	test   ebx,ebx
30030d18:	jle    0x30030d21
30030d1a:	movzx  ebx,bx
30030d1d:	or     ebx,esi
30030d1f:	test   ebx,ebx
30030d21:	js     0x30030ee9
30030d27:	mov    esi,0x3004306c
30030d2c:	push   esi
30030d2d:	lea    ecx,[ebp-0x20]
30030d30:	call   0x30004256
30030d35:	push   esi
30030d36:	lea    ecx,[ebp-0x18]
30030d39:	mov    BYTE PTR [ebp-0x4],0x5
30030d3d:	call   0x30004256
30030d42:	lea    ecx,[ebp-0x18]
30030d45:	mov    BYTE PTR [ebp-0x4],0x6
30030d49:	call   0x30030b90
30030d4e:	mov    ebx,eax
30030d50:	test   ebx,ebx
30030d52:	js     0x30030ed3
30030d58:	push   edi
30030d59:	lea    ecx,[ebp-0x18]
30030d5c:	call   0x3000b940
30030d61:	push   DWORD PTR [ebp+0x8]
30030d64:	mov    esi,DWORD PTR [ebp-0x18]
30030d67:	push   esi
30030d68:	lea    eax,[ebp-0x20]
30030d6b:	push   0x30030f40
30030d70:	push   eax
30030d71:	call   0x30005153
30030d76:	mov    edi,DWORD PTR [ebp-0x20]
30030d79:	add    esp,0xc
30030d7c:	lea    ecx,[ebp-0x40]
30030d7f:	push   edi
30030d80:	push   0x30030f50
30030d85:	call   0x30013794
30030d8a:	mov    ebx,eax
30030d8c:	test   ebx,ebx
30030d8e:	jle    0x30030d9b
30030d90:	movzx  ebx,bx
30030d93:	or     ebx,0x80070000
30030d99:	test   ebx,ebx
30030d9b:	js     0x30030ed9
30030da1:	mov    ebx,0x30030f80
30030da6:	push   ebx
30030da7:	lea    ecx,[ebp-0x40]
30030daa:	call   0x3001d8a4
30030daf:	push   0x0
30030db1:	push   ecx
30030db2:	push   0x20006
30030db7:	push   0x0
30030db9:	push   ecx
30030dba:	push   ebx
30030dbb:	push   DWORD PTR [ebp-0x40]
30030dbe:	lea    ecx,[ebp-0x64]
30030dc1:	call   0x30009534
30030dc6:	mov    ebx,eax
30030dc8:	test   ebx,ebx
30030dca:	jle    0x30030dd7
30030dcc:	movzx  ebx,bx
30030dcf:	or     ebx,0x80070000
30030dd5:	test   ebx,ebx
30030dd7:	js     0x30030ed9
30030ddd:	mov    eax,0x104
30030de2:	xor    esi,esi
30030de4:	push   eax
30030de5:	push   esi
30030de6:	lea    ecx,[ebp-0x14]
30030de9:	mov    DWORD PTR [ebp-0x28],eax
30030dec:	call   0x300194d9
30030df1:	mov    BYTE PTR [ebp-0x4],0x7
30030df5:	mov    eax,DWORD PTR [ebp-0x14]
30030df8:	cmp    DWORD PTR [eax-0x4],0x1
30030dfc:	jle    0x30030e0c
30030dfe:	push   DWORD PTR [eax-0xc]
30030e01:	lea    ecx,[ebp-0x14]
30030e04:	call   0x300041f1
30030e09:	mov    eax,DWORD PTR [ebp-0x14]
30030e0c:	lea    ecx,[ebp-0x34]
30030e0f:	push   ecx
30030e10:	xor    ecx,ecx
30030e12:	push   ecx
30030e13:	push   ecx
30030e14:	push   ecx
30030e15:	lea    ecx,[ebp-0x28]
30030e18:	push   ecx
30030e19:	push   eax
30030e1a:	push   esi
30030e1b:	push   DWORD PTR [ebp-0x4c]
30030e1e:	call   DWORD PTR ds:0x30045074
30030e24:	test   eax,eax
30030e26:	jne    0x30030ec6
30030e2c:	mov    ecx,0x104
30030e31:	mov    DWORD PTR [ebp-0x2c],ecx
30030e34:	mov    DWORD PTR [ebp-0x58],eax
30030e37:	mov    DWORD PTR [ebp-0x54],eax
30030e3a:	mov    DWORD PTR [ebp-0x50],eax
30030e3d:	push   ecx
30030e3e:	push   eax
30030e3f:	lea    ecx,[ebp+0x8]
30030e42:	mov    BYTE PTR [ebp-0x4],0x8
30030e46:	call   0x300194d9
30030e4b:	push   0x20019
30030e50:	mov    BYTE PTR [ebp-0x4],0x9
30030e54:	push   DWORD PTR [ebp-0x14]
30030e57:	lea    ecx,[ebp-0x58]
30030e5a:	push   DWORD PTR [ebp-0x4c]
30030e5d:	call   0x300051d9
30030e62:	test   eax,eax
30030e64:	jne    0x30030ea2
30030e66:	mov    eax,DWORD PTR [ebp+0x8]
30030e69:	cmp    DWORD PTR [eax-0x4],0x1
30030e6d:	jle    0x30030e7d
30030e6f:	push   DWORD PTR [eax-0xc]
30030e72:	lea    ecx,[ebp+0x8]
30030e75:	call   0x300041f1
30030e7a:	mov    eax,DWORD PTR [ebp+0x8]
30030e7d:	lea    ecx,[ebp-0x2c]
30030e80:	push   ecx
30030e81:	push   eax
30030e82:	push   0x30006ce8
30030e87:	lea    ecx,[ebp-0x58]
30030e8a:	call   0x3001c8be
30030e8f:	test   eax,eax
30030e91:	jne    0x30030ea2
30030e93:	push   ecx
30030e94:	push   DWORD PTR [ebp+0x8]
30030e97:	lea    ecx,[ebp-0x64]
30030e9a:	push   DWORD PTR [ebp-0x14]
30030e9d:	call   0x30013794
30030ea2:	mov    ecx,DWORD PTR [ebp+0x8]
30030ea5:	mov    DWORD PTR [ebp-0x28],0x104
30030eac:	lea    ecx,[ecx-0x10]
30030eaf:	inc    esi
30030eb0:	call   0x30004017
30030eb5:	lea    ecx,[ebp-0x58]
30030eb8:	mov    BYTE PTR [ebp-0x4],0x7
30030ebc:	call   0x300051ae
30030ec1:	jmp    0x30030df5
30030ec6:	mov    ecx,DWORD PTR [ebp-0x14]
30030ec9:	lea    ecx,[ecx-0x10]
30030ecc:	call   0x30004017
30030ed1:	jmp    0x30030ed6
30030ed3:	mov    edi,DWORD PTR [ebp-0x20]
30030ed6:	mov    esi,DWORD PTR [ebp-0x18]
30030ed9:	lea    ecx,[esi-0x10]
30030edc:	call   0x30004017
30030ee1:	lea    ecx,[edi-0x10]
30030ee4:	call   0x30004017
30030ee9:	mov    ecx,DWORD PTR [ebp-0x24]
30030eec:	lea    ecx,[ecx-0x10]
30030eef:	call   0x30004017
30030ef4:	mov    ecx,DWORD PTR [ebp-0x1c]
30030ef7:	lea    ecx,[ecx-0x10]
30030efa:	call   0x30004017
30030eff:	lea    ecx,[ebp-0x4c]
30030f02:	call   0x300051ae
30030f07:	lea    ecx,[ebp-0x64]
30030f0a:	call   0x300051ae
30030f0f:	lea    ecx,[ebp-0x40]
30030f12:	call   0x300051ae
30030f17:	mov    eax,ebx
30030f19:	call   0x3000119d
30030f1e:	ret    0x4
30030f21:	nop
30030f22:	nop
30030f23:	nop
30030f24:	inc    ebx
30030f25:	add    BYTE PTR [ecx+0x0],ah
30030f28:	jo     0x30030f2a
30030f2a:	popa   
30030f2b:	add    BYTE PTR [edx+0x0],ah
30030f2e:	imul   eax,DWORD PTR [eax],0x69006c
30030f34:	je     0x30030f36
30030f36:	imul   eax,DWORD PTR [eax],0x730065
30030f3c:	add    BYTE PTR [eax],al
30030f3e:	nop
30030f3f:	nop
30030f40:	inc    eax
30030f41:	add    BYTE PTR ds:0x2c007300,ah
30030f47:	add    BYTE PTR ds:0x64002500,ch
30030f4d:	add    BYTE PTR [eax],al
30030f4f:	add    BYTE PTR [ecx+0x0],al
30030f52:	jo     0x30030f54
30030f54:	jo     0x30030f56
30030f56:	ins    BYTE PTR es:[edi],dx
30030f57:	add    BYTE PTR [ecx+0x0],ch
30030f5a:	arpl   WORD PTR [eax],ax
30030f5c:	popa   
30030f5d:	add    BYTE PTR [eax+eax*1+0x69],dh
30030f61:	add    BYTE PTR [edi+0x0],ch
30030f64:	outs   dx,BYTE PTR ds:[esi]
30030f65:	add    BYTE PTR [eax+eax*1+0x65],al
30030f69:	add    BYTE PTR [ebx+0x0],dh
30030f6c:	arpl   WORD PTR [eax],ax
30030f6e:	jb     0x30030f70
30030f70:	imul   eax,DWORD PTR [eax],0x740070
30030f76:	imul   eax,DWORD PTR [eax],0x6e006f
30030f7c:	add    BYTE PTR [eax],al
30030f7e:	nop
30030f7f:	nop
30030f80:	inc    esi
30030f81:	add    BYTE PTR [ecx+0x0],ch
30030f84:	ins    BYTE PTR es:[edi],dx
30030f85:	add    BYTE PTR [ebp+0x0],ah
30030f88:	inc    ecx
30030f89:	add    BYTE PTR [ebx+0x0],dh
30030f8c:	jae    0x30030f8e
30030f8e:	outs   dx,DWORD PTR ds:[esi]
30030f8f:	add    BYTE PTR [ebx+0x0],ah
30030f92:	imul   eax,DWORD PTR [eax],0x740061
30030f98:	imul   eax,DWORD PTR [eax],0x6e006f
30030f9e:	jae    0x30030fa0
30030fa0:	add    BYTE PTR [eax],al
30030fa2:	lea    eax,[ecx+0x4]
30030fa5:	cmp    DWORD PTR [ecx],eax
30030fa7:	jne    0x30030faa
30030fa9:	ret    
30030faa:	push   DWORD PTR [ecx]
30030fac:	call   DWORD PTR ds:0x300452b4
30030fb2:	pop    ecx
30030fb3:	ret    
30030fb4:	push   ebp
30030fb5:	mov    ebp,esp
30030fb7:	push   esi
30030fb8:	push   DWORD PTR [ebp+0x8]
30030fbb:	mov    esi,ecx
30030fbd:	call   DWORD PTR ds:0x300452a4
30030fc3:	pop    ecx
30030fc4:	test   eax,eax
30030fc6:	je     0x30030fcf
30030fc8:	mov    DWORD PTR [esi],eax
30030fca:	pop    esi
30030fcb:	pop    ebp
30030fcc:	ret    0x4
30030fcf:	push   0x8007000e
30030fd4:	call   0x3002ae0b
30030fd9:	int3   
30030fda:	nop
30030fdb:	nop
30030fdc:	nop
30030fdd:	push   ebp
30030fde:	mov    ebp,esp
30030fe0:	push   esi
30030fe1:	push   edi
30030fe2:	mov    esi,ecx
30030fe4:	xor    edi,edi
30030fe6:	cmp    DWORD PTR [esi],edi
30030fe8:	je     0x30031018
30030fea:	push   0x3001e080
30030fef:	call   DWORD PTR ds:0x30045174
30030ff5:	test   eax,eax
30030ff7:	je     0x30031026
30030ff9:	push   0x30031030
30030ffe:	push   eax
30030fff:	call   DWORD PTR ds:0x30045178
30031005:	test   eax,eax
30031007:	je     0x30031026
30031009:	push   edi
3003100a:	push   DWORD PTR [esi]
3003100c:	push   edi
3003100d:	push   edi
3003100e:	push   DWORD PTR [ebp+0xc]
30031011:	push   DWORD PTR [ebp+0x8]
30031014:	call   eax
30031016:	jmp    0x30031029
30031018:	cmp    DWORD PTR [esi+0x4],edi
3003101b:	je     0x30031026
3003101d:	pop    edi
3003101e:	pop    esi
3003101f:	pop    ebp
30031020:	jmp    DWORD PTR ds:0x3004505c
30031026:	xor    eax,eax
30031028:	inc    eax
30031029:	pop    edi
3003102a:	pop    esi
3003102b:	pop    ebp
3003102c:	ret    0x8
3003102f:	nop
30031030:	push   edx
30031031:	gs addr16 inc esp
30031034:	gs ins BYTE PTR es:[edi],dx
30031036:	gs je  0x3003109e
30031039:	dec    ebx
3003103a:	gs jns 0x30031091
3003103d:	jb     0x300310a0
3003103f:	outs   dx,BYTE PTR ds:[esi]
30031040:	jae    0x300310a3
30031042:	arpl   WORD PTR [ebp+eiz*2+0x64],si
30031046:	push   edi
30031047:	add    BYTE PTR [ebp-0x75],dl
3003104a:	in     al,dx
3003104b:	push   esi
3003104c:	push   edi
3003104d:	mov    esi,ecx
3003104f:	xor    edi,edi
30031051:	cmp    DWORD PTR [esi],edi
30031053:	je     0x30031090
30031055:	push   0x3001e080
3003105a:	call   DWORD PTR ds:0x30045174
30031060:	test   eax,eax
30031062:	je     0x300310b2
30031064:	push   0x300310bc
30031069:	push   eax
3003106a:	call   DWORD PTR ds:0x30045178
30031070:	test   eax,eax
30031072:	je     0x300310b2
30031074:	push   edi
30031075:	push   DWORD PTR [esi]
30031077:	push   DWORD PTR [ebp+0x28]
3003107a:	push   DWORD PTR [ebp+0x24]
3003107d:	push   edi
3003107e:	push   DWORD PTR [ebp+0x1c]
30031081:	push   DWORD PTR [ebp+0x18]
30031084:	push   edi
30031085:	push   edi
30031086:	push   DWORD PTR [ebp+0xc]
30031089:	push   DWORD PTR [ebp+0x8]
3003108c:	call   eax
3003108e:	jmp    0x300310b5
30031090:	cmp    DWORD PTR [esi+0x4],edi
30031093:	je     0x300310b2
30031095:	push   DWORD PTR [ebp+0x28]
30031098:	push   DWORD PTR [ebp+0x24]
3003109b:	push   edi
3003109c:	push   DWORD PTR [ebp+0x1c]
3003109f:	push   DWORD PTR [ebp+0x18]
300310a2:	push   edi
300310a3:	push   edi
300310a4:	push   DWORD PTR [ebp+0xc]
300310a7:	push   DWORD PTR [ebp+0x8]
300310aa:	call   DWORD PTR ds:0x3004507c
300310b0:	jmp    0x300310b5
300310b2:	xor    eax,eax
300310b4:	inc    eax
300310b5:	pop    edi
300310b6:	pop    esi
300310b7:	pop    ebp
300310b8:	ret    0x24
300310bb:	nop
300310bc:	push   edx
300310bd:	gs addr16 inc ebx
300310c0:	jb     0x30031127
300310c2:	popa   
300310c3:	je     0x3003112a
300310c5:	dec    ebx
300310c6:	gs jns 0x3003111d
300310c9:	jb     0x3003112c
300310cb:	outs   dx,BYTE PTR ds:[esi]
300310cc:	jae    0x3003112f
300310ce:	arpl   WORD PTR [ebp+eiz*2+0x64],si
300310d2:	push   edi
300310d3:	add    BYTE PTR [ebp-0x75],dl
300310d6:	in     al,dx
300310d7:	push   ebx
300310d8:	push   esi
300310d9:	mov    esi,DWORD PTR [ebp+0xc]
300310dc:	xor    ebx,ebx
300310de:	push   edi
300310df:	mov    edx,ebx
300310e1:	mov    edi,0x80070057
300310e6:	test   esi,esi
300310e8:	je     0x300310f2
300310ea:	cmp    esi,0x7fffffff
300310f0:	jbe    0x300310f4
300310f2:	mov    edx,edi
300310f4:	test   edx,edx
300310f6:	js     0x30031166
300310f8:	mov    ecx,DWORD PTR [ebp+0x8]
300310fb:	mov    eax,esi
300310fd:	mov    edx,ebx
300310ff:	test   esi,esi
30031101:	je     0x30031118
30031103:	cmp    WORD PTR [ecx],bx
30031106:	je     0x3003110e
30031108:	add    ecx,0x2
3003110b:	dec    eax
3003110c:	jne    0x30031103
3003110e:	test   eax,eax
30031110:	je     0x30031118
30031112:	mov    ebx,esi
30031114:	sub    ebx,eax
30031116:	jmp    0x3003111a
30031118:	mov    edx,edi
3003111a:	test   edx,edx
3003111c:	js     0x30031166
3003111e:	mov    eax,DWORD PTR [ebp+0x8]
30031121:	mov    edi,esi
30031123:	push   0x0
30031125:	lea    ecx,[eax+ebx*2]
30031128:	pop    edx
30031129:	sub    edi,ebx
3003112b:	je     0x30031159
3003112d:	mov    eax,edi
3003112f:	add    ebx,0x7ffffffe
30031135:	sub    eax,esi
30031137:	add    eax,ebx
30031139:	mov    ebx,DWORD PTR [ebp+0x10]
3003113c:	sub    ebx,ecx
3003113e:	test   eax,eax
30031140:	je     0x30031155
30031142:	movzx  esi,WORD PTR [ebx+ecx*1]
30031146:	test   si,si
30031149:	je     0x30031155
3003114b:	mov    WORD PTR [ecx],si
3003114e:	add    ecx,0x2
30031151:	dec    eax
30031152:	dec    edi
30031153:	jne    0x3003113e
30031155:	test   edi,edi
30031157:	jne    0x30031161
30031159:	sub    ecx,0x2
3003115c:	mov    edx,0x8007007a
30031161:	xor    eax,eax
30031163:	mov    WORD PTR [ecx],ax
30031166:	pop    edi
30031167:	pop    esi
30031168:	mov    eax,edx
3003116a:	pop    ebx
3003116b:	pop    ebp
3003116c:	ret    0xc
3003116f:	push   ebp
30031170:	mov    ebp,esp
30031172:	sub    esp,0xc50
30031178:	mov    eax,ds:0x30043050
3003117d:	xor    eax,ebp
3003117f:	mov    DWORD PTR [ebp-0x4],eax
30031182:	push   ebx
30031183:	xor    eax,eax
30031185:	mov    ebx,edx
30031187:	movzx  edx,ax
3003118a:	push   esi
3003118b:	mov    eax,edx
3003118d:	push   edi
3003118e:	mov    DWORD PTR [ebp-0xc48],ecx
30031194:	shl    edx,0x10
30031197:	or     eax,edx
30031199:	xor    esi,esi
3003119b:	mov    ecx,0x82
300311a0:	lea    edi,[ebp-0xc34]
300311a6:	mov    DWORD PTR [ebp-0xc38],esi
300311ac:	rep stos DWORD PTR es:[edi],eax
300311ae:	call   DWORD PTR ds:0x30045218
300311b4:	push   eax
300311b5:	push   ebx
300311b6:	push   0x30031458
300311bb:	lea    eax,[ebp-0xc34]
300311c1:	push   0x104
300311c6:	push   eax
300311c7:	call   0x3001169c
300311cc:	add    esp,0x14
300311cf:	lea    eax,[ebp-0xc38]
300311d5:	push   eax
300311d6:	push   0x1
300311d8:	push   esi
300311d9:	lea    eax,[ebp-0xc34]
300311df:	push   eax
300311e0:	push   0x80000001
300311e5:	call   DWORD PTR ds:0x30045008
300311eb:	test   eax,eax
300311ed:	jne    0x30031440
300311f3:	lea    eax,[ebp-0xc4c]
300311f9:	push   eax
300311fa:	lea    eax,[ebp-0xc40]
30031200:	push   eax
30031201:	lea    eax,[ebp-0xc50]
30031207:	push   eax
30031208:	push   esi
30031209:	push   0x300314a0
3003120e:	push   DWORD PTR [ebp-0xc38]
30031214:	mov    DWORD PTR [ebp-0xc4c],0x4
3003121e:	call   DWORD PTR ds:0x3004500c
30031224:	test   eax,eax
30031226:	jne    0x30031440
3003122c:	push   DWORD PTR [ebp-0xc38]
30031232:	mov    esi,DWORD PTR ds:0x30045004
30031238:	call   esi
3003123a:	xor    eax,eax
3003123c:	movzx  edx,ax
3003123f:	mov    eax,edx
30031241:	shl    edx,0x10
30031244:	or     eax,edx
30031246:	mov    ecx,0x82
3003124b:	lea    edi,[ebp-0x61c]
30031251:	rep stos DWORD PTR es:[edi],eax
30031253:	xor    eax,eax
30031255:	movzx  edx,ax
30031258:	mov    eax,edx
3003125a:	shl    edx,0x10
3003125d:	or     eax,edx
3003125f:	mov    ecx,0x82
30031264:	lea    edi,[ebp-0x824]
3003126a:	rep stos DWORD PTR es:[edi],eax
3003126c:	call   DWORD PTR ds:0x30045218
30031272:	mov    edi,0x104
30031277:	push   eax
30031278:	push   0x300314b0
3003127d:	lea    eax,[ebp-0x61c]
30031283:	push   edi
30031284:	push   eax
30031285:	call   0x3001169c
3003128a:	push   ebx
3003128b:	push   0x300314e0
30031290:	mov    ebx,edi
30031292:	lea    eax,[ebp-0x824]
30031298:	push   ebx
30031299:	push   eax
3003129a:	call   0x3001169c
3003129f:	add    esp,0x20
300312a2:	lea    eax,[ebp-0xc3c]
300312a8:	push   eax
300312a9:	push   0x20006
300312ae:	push   0x0
300312b0:	lea    eax,[ebp-0x824]
300312b6:	push   eax
300312b7:	push   0x80000001
300312bc:	call   DWORD PTR ds:0x30045008
300312c2:	test   eax,eax
300312c4:	jne    0x300312e1
300312c6:	lea    eax,[ebp-0x61c]
300312cc:	push   eax
300312cd:	push   DWORD PTR [ebp-0xc3c]
300312d3:	call   DWORD PTR ds:0x3004505c
300312d9:	push   DWORD PTR [ebp-0xc3c]
300312df:	call   esi
300312e1:	push   DWORD PTR [ebp-0xc40]
300312e7:	push   0x1
300312e9:	push   0x1fffff
300312ee:	call   DWORD PTR ds:0x3004521c
300312f4:	mov    DWORD PTR [ebp-0xc44],eax
300312fa:	test   eax,eax
300312fc:	je     0x30031440
30031302:	xor    eax,eax
30031304:	movzx  edx,ax
30031307:	mov    eax,edx
30031309:	shl    edx,0x10
3003130c:	or     eax,edx
3003130e:	mov    esi,0x82
30031313:	mov    ecx,esi
30031315:	lea    edi,[ebp-0xa2c]
3003131b:	rep stos DWORD PTR es:[edi],eax
3003131d:	xor    eax,eax
3003131f:	movzx  edx,ax
30031322:	mov    eax,edx
30031324:	shl    edx,0x10
30031327:	or     eax,edx
30031329:	mov    ecx,esi
3003132b:	lea    edi,[ebp-0x414]
30031331:	rep stos DWORD PTR es:[edi],eax
30031333:	push   ebx
30031334:	lea    eax,[ebp-0x414]
3003133a:	push   eax
3003133b:	push   0x0
3003133d:	call   DWORD PTR ds:0x300451f8
30031343:	mov    esi,DWORD PTR ds:0x3004516c
30031349:	test   eax,eax
3003134b:	je     0x3003138a
3003134d:	lea    eax,[ebp-0x414]
30031353:	push   0x5c
30031355:	push   eax
30031356:	call   DWORD PTR ds:0x30045328
3003135c:	xor    ecx,ecx
3003135e:	mov    WORD PTR [eax],cx
30031361:	lea    eax,[ebp-0x414]
30031367:	push   eax
30031368:	push   0x300314f8
3003136d:	lea    eax,[ebp-0xa2c]
30031373:	push   ebx
30031374:	push   eax
30031375:	call   0x3001169c
3003137a:	add    esp,0x18
3003137d:	lea    eax,[ebp-0xa2c]
30031383:	push   eax
30031384:	call   esi
30031386:	test   eax,eax
30031388:	jne    0x30031399
3003138a:	push   0x30031518
3003138f:	call   esi
30031391:	test   eax,eax
30031393:	je     0x30031440
30031399:	push   0x30031530
3003139e:	push   eax
3003139f:	call   DWORD PTR ds:0x30045178
300313a5:	mov    ebx,eax
300313a7:	test   ebx,ebx
300313a9:	je     0x30031440
300313af:	push   DWORD PTR [ebp-0xc48]
300313b5:	xor    eax,eax
300313b7:	movzx  edx,ax
300313ba:	mov    eax,edx
300313bc:	shl    edx,0x10
300313bf:	or     eax,edx
300313c1:	mov    ecx,0x82
300313c6:	lea    edi,[ebp-0x20c]
300313cc:	rep stos DWORD PTR es:[edi],eax
300313ce:	mov    edi,0x104
300313d3:	push   edi
300313d4:	lea    eax,[ebp-0x20c]
300313da:	push   eax
300313db:	call   0x30004c1e
300313e0:	lea    eax,[ebp-0x20c]
300313e6:	push   0x3002a64c
300313eb:	push   edi
300313ec:	push   eax
300313ed:	call   0x300310d4
300313f2:	xor    edi,edi
300313f4:	push   edi
300313f5:	push   0x80
300313fa:	push   0x2
300313fc:	push   edi
300313fd:	push   0x2
300313ff:	push   0x40000000
30031404:	lea    eax,[ebp-0x20c]
3003140a:	push   eax
3003140b:	call   DWORD PTR ds:0x30045220
30031411:	mov    esi,eax
30031413:	cmp    esi,0xffffffff
30031416:	je     0x30031440
30031418:	push   edi
30031419:	push   edi
3003141a:	push   edi
3003141b:	push   edi
3003141c:	push   esi
3003141d:	push   DWORD PTR [ebp-0xc40]
30031423:	push   DWORD PTR [ebp-0xc44]
30031429:	call   ebx
3003142b:	push   esi
3003142c:	test   eax,eax
3003142e:	je     0x3003143a
30031430:	call   DWORD PTR ds:0x300451d0
30031436:	mov    al,0x1
30031438:	jmp    0x30031442
3003143a:	call   DWORD PTR ds:0x300451d0
30031440:	xor    al,al
30031442:	mov    ecx,DWORD PTR [ebp-0x4]
30031445:	pop    edi
30031446:	pop    esi
30031447:	xor    ecx,ebp
30031449:	pop    ebx
3003144a:	call   0x3000115c
3003144f:	leave  
30031450:	ret    
30031451:	nop
30031452:	nop
30031453:	nop
30031454:	nop
30031455:	nop
30031456:	nop
30031457:	nop
30031458:	and    eax,0x5c007300
3003145d:	add    BYTE PTR [eax+eax*1+0x65],al
30031461:	add    BYTE PTR [edx+0x0],ah
30031464:	jne    0x30031466
30031466:	add    BYTE PTR [bx+0x0],ah
3003146a:	add    BYTE PTR gs:[edx+0x0],dh
3003146e:	pop    esp
3003146f:	add    BYTE PTR [ebp+0x0],cl
30031472:	popa   
30031473:	add    BYTE PTR [esi+0x0],ch
30031476:	popa   
30031477:	add    BYTE PTR [edi+0x0],ah
3003147a:	add    BYTE PTR gs:[eax+eax*1+0x44],ah
3003147f:	add    BYTE PTR [ebp+0x0],ah
30031482:	bound  eax,QWORD PTR [eax]
30031484:	jne    0x30031486
30031486:	add    BYTE PTR [bx+0x0],ah
3003148a:	add    BYTE PTR gs:[ebp+0x0],ah
3003148e:	push   eax
3003148f:	add    BYTE PTR [ecx+0x0],cl
30031492:	inc    esp
30031493:	add    BYTE PTR [ebx+0x0],dh
30031496:	pop    edi
30031497:	add    BYTE PTR ds:0x6900,ah
3003149d:	add    BYTE PTR [eax+0x72005090],dl
300314a3:	add    BYTE PTR [edi+0x0],ch
300314a6:	arpl   WORD PTR [eax],ax
300314a8:	add    BYTE PTR gs:[ebx+0x0],dh
300314ac:	jae    0x300314ae
300314ae:	add    BYTE PTR [eax],al
300314b0:	dec    ebp
300314b1:	add    BYTE PTR [ecx+0x0],ah
300314b4:	outs   dx,BYTE PTR ds:[esi]
300314b5:	add    BYTE PTR [ecx+0x0],ah
300314b8:	add    BYTE PTR [di+0x0],ah
300314bc:	add    BYTE PTR fs:[eax+eax*1+0x65],al
300314c1:	add    BYTE PTR [edx+0x0],ah
300314c4:	jne    0x300314c6
300314c6:	add    BYTE PTR [bx+0x0],ah
300314ca:	add    BYTE PTR gs:[ebp+0x0],ah
300314ce:	push   eax
300314cf:	add    BYTE PTR [ecx+0x0],cl
300314d2:	inc    esp
300314d3:	add    BYTE PTR [ebx+0x0],dh
300314d6:	pop    edi
300314d7:	add    BYTE PTR ds:0x6900,ah
300314dd:	add    BYTE PTR [eax+0x73002590],dl
300314e3:	add    BYTE PTR [eax+eax*1+0x44],bl
300314e7:	add    BYTE PTR [ebp+0x0],ah
300314ea:	bound  eax,QWORD PTR [eax]
300314ec:	jne    0x300314ee
300314ee:	add    BYTE PTR [bx+0x0],ah
300314f2:	add    BYTE PTR gs:[edx+0x0],dh
300314f6:	add    BYTE PTR [eax],al
300314f8:	and    eax,0x5c007300
300314fd:	add    BYTE PTR [eax+eax*1+0x62],ah
30031501:	add    BYTE PTR [edi+0x0],ah
30031504:	push   0x6c006500
30031509:	add    BYTE PTR [eax+0x0],dh
3003150c:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
30031511:	add    BYTE PTR [eax+eax*1+0x0],ch
30031515:	add    BYTE PTR [eax+0x42004490],dl
3003151b:	add    BYTE PTR [edi+0x0],al
3003151e:	dec    eax
3003151f:	add    BYTE PTR [ebp+0x0],al
30031522:	dec    esp
30031523:	add    BYTE PTR [eax+0x0],dl
30031526:	add    BYTE PTR cs:[eax+eax*1+0x4c],al
3003152b:	add    BYTE PTR [eax+eax*1+0x0],cl
3003152f:	add    BYTE PTR [ebp+0x69],cl
30031532:	outs   dx,BYTE PTR ds:[esi]
30031533:	imul   eax,DWORD PTR [ebp+esi*2+0x6d],0x69725770
3003153b:	je     0x300315a2
3003153d:	inc    esp
3003153e:	jne    0x300315ad
30031540:	jo     0x30031542
30031542:	push   0xa5c
30031547:	mov    eax,0x300401ac
3003154c:	call   0x300045c8
30031551:	mov    edi,edx
30031553:	mov    DWORD PTR [ebp-0xa60],edi
30031559:	mov    DWORD PTR [ebp-0xa5c],ecx
3003155f:	mov    esi,DWORD PTR [ebp+0x8]
30031562:	xor    eax,eax
30031564:	push   0x206
30031569:	mov    WORD PTR [ebp-0x420],ax
30031570:	xor    ebx,ebx
30031572:	lea    eax,[ebp-0x41e]
30031578:	push   ebx
30031579:	push   eax
3003157a:	call   0x300011b1
3003157f:	xor    eax,eax
30031581:	push   0x206
30031586:	mov    WORD PTR [ebp-0x218],ax
3003158d:	lea    eax,[ebp-0x216]
30031593:	push   ebx
30031594:	push   eax
30031595:	call   0x300011b1
3003159a:	add    esp,0x18
3003159d:	call   DWORD PTR ds:0x30045218
300315a3:	push   eax
300315a4:	push   edi
300315a5:	lea    eax,[ebp-0xa38]
300315ab:	push   0x30031920
300315b0:	push   eax
300315b1:	call   0x30031b67
300315b6:	add    esp,0x10
300315b9:	lea    eax,[ebp-0x420]
300315bf:	push   eax
300315c0:	push   ebx
300315c1:	push   ebx
300315c2:	push   0x1c
300315c4:	push   ebx
300315c5:	call   DWORD PTR ds:0x300455f8
300315cb:	test   eax,eax
300315cd:	js     0x30031916
300315d3:	lea    eax,[ebp-0xa49]
300315d9:	push   eax
300315da:	lea    eax,[ebp-0xa4b]
300315e0:	push   eax
300315e1:	push   edi
300315e2:	mov    BYTE PTR [ebp-0xa4b],bl
300315e8:	mov    BYTE PTR [ebp-0xa49],bl
300315ee:	call   0x3003936e
300315f3:	mov    ebx,0x104
300315f8:	test   eax,eax
300315fa:	js     0x30031883
30031600:	cmp    BYTE PTR [ebp-0xa49],0x0
30031607:	je     0x30031883
3003160d:	lea    eax,[ebp-0xa58]
30031613:	push   eax
30031614:	push   0x20006
30031619:	xor    ecx,ecx
3003161b:	push   ecx
3003161c:	lea    eax,[ebp-0xa38]
30031622:	push   eax
30031623:	push   0x80000001
30031628:	mov    DWORD PTR [ebp-0xa58],ecx
3003162e:	call   DWORD PTR ds:0x30045008
30031634:	test   eax,eax
30031636:	jne    0x300316e1
3003163c:	push   0x4
3003163e:	lea    eax,[ebp-0xa50]
30031644:	push   eax
30031645:	push   0x4
30031647:	xor    edi,edi
30031649:	push   edi
3003164a:	push   DWORD PTR ds:0x30031964
30031650:	mov    edi,DWORD PTR ds:0x30045010
30031656:	push   DWORD PTR [ebp-0xa58]
3003165c:	mov    DWORD PTR [ebp-0xa50],0x1
30031666:	call   edi
30031668:	push   0x4
3003166a:	lea    eax,[ebp-0xa54]
30031670:	push   eax
30031671:	push   0x4
30031673:	xor    eax,eax
30031675:	push   eax
30031676:	push   DWORD PTR ds:0x30031980
3003167c:	mov    DWORD PTR [ebp-0xa54],0x2
30031686:	push   DWORD PTR [ebp-0xa58]
3003168c:	call   edi
3003168e:	lea    eax,[ebp-0xa48]
30031694:	push   eax
30031695:	call   DWORD PTR ds:0x30045224
3003169b:	lea    eax,[ebp-0xa68]
300316a1:	push   eax
300316a2:	lea    eax,[ebp-0xa48]
300316a8:	push   eax
300316a9:	call   DWORD PTR ds:0x30045228
300316af:	test   eax,eax
300316b1:	je     0x300316cf
300316b3:	push   0x8
300316b5:	lea    eax,[ebp-0xa68]
300316bb:	push   eax
300316bc:	push   0xb
300316be:	xor    eax,eax
300316c0:	push   eax
300316c1:	push   DWORD PTR ds:0x30031984
300316c7:	push   DWORD PTR [ebp-0xa58]
300316cd:	call   edi
300316cf:	push   DWORD PTR [ebp-0xa58]
300316d5:	call   DWORD PTR ds:0x30045004
300316db:	mov    edi,DWORD PTR [ebp-0xa60]
300316e1:	xor    eax,eax
300316e3:	mov    BYTE PTR [ebp-0xa4a],al
300316e9:	test   esi,esi
300316eb:	je     0x30031720
300316ed:	cmp    ax,WORD PTR [esi]
300316f0:	je     0x30031720
300316f2:	push   esi
300316f3:	call   DWORD PTR ds:0x300451ec
300316f9:	cmp    eax,0xffffffff
300316fc:	sete   al
300316ff:	test   al,al
30031701:	jne    0x30031720
30031703:	push   esi
30031704:	push   ebx
30031705:	lea    eax,[ebp-0x218]
3003170b:	push   eax
3003170c:	call   0x30004c1e
30031711:	test   eax,eax
30031713:	js     0x30031895
30031719:	mov    al,0x1
3003171b:	jmp    0x30031864
30031720:	xor    eax,eax
30031722:	push   0x206
30031727:	push   eax
30031728:	mov    WORD PTR [ebp-0x628],ax
3003172f:	lea    eax,[ebp-0x626]
30031735:	push   eax
30031736:	call   0x300011b1
3003173b:	add    esp,0xc
3003173e:	lea    eax,[ebp-0x628]
30031744:	push   ebx
30031745:	push   eax
30031746:	push   edi
30031747:	call   0x300396b6
3003174c:	push   0x30031938
30031751:	push   0x3002a66c
30031756:	lea    eax,[ebp-0x628]
3003175c:	push   eax
3003175d:	push   0x30031940
30031762:	lea    eax,[ebp-0x218]
30031768:	push   0x103
3003176d:	push   eax
3003176e:	call   DWORD PTR ds:0x30045334
30031774:	add    esp,0x18
30031777:	lea    ecx,[ebp-0xa50]
3003177d:	push   0x3004306c
30031782:	call   0x30004256
30031787:	xor    ecx,ecx
30031789:	lea    eax,[ebp-0xa54]
3003178f:	push   eax
30031790:	push   ecx
30031791:	mov    DWORD PTR [ebp-0x4],ecx
30031794:	push   ecx
30031795:	mov    DWORD PTR [ebp-0xa54],ecx
3003179b:	call   0x30039234
300317a0:	test   eax,eax
300317a2:	js     0x3003187b
300317a8:	push   DWORD PTR [ebp-0xa54]
300317ae:	lea    ecx,[ebp-0xa50]
300317b4:	call   0x30004286
300317b9:	lea    ecx,[ebp-0xa54]
300317bf:	push   ecx
300317c0:	push   DWORD PTR [ebp-0xa54]
300317c6:	push   eax
300317c7:	call   0x30039234
300317cc:	push   0xffffffff
300317ce:	lea    ecx,[ebp-0xa50]
300317d4:	mov    esi,eax
300317d6:	call   0x30006c8c
300317db:	test   esi,esi
300317dd:	js     0x3003187b
300317e3:	mov    esi,DWORD PTR [ebp-0xa50]
300317e9:	xor    eax,eax
300317eb:	push   eax
300317ec:	push   eax
300317ed:	push   esi
300317ee:	call   DWORD PTR ds:0x3004301c
300317f4:	mov    ebx,eax
300317f6:	test   ebx,ebx
300317f8:	je     0x3003184d
300317fa:	mov    edi,DWORD PTR ds:0x30043014
30031800:	push   0x2
30031802:	push   0x15
30031804:	push   ebx
30031805:	call   edi
30031807:	xor    eax,eax
30031809:	push   eax
3003180a:	push   0x1b
3003180c:	push   ebx
3003180d:	call   edi
3003180f:	push   0x1
30031811:	push   0xf
30031813:	lea    eax,[ebp-0x218]
30031819:	push   eax
3003181a:	push   ebx
3003181b:	call   DWORD PTR ds:0x30043018
30031821:	lea    eax,[ebp-0x218]
30031827:	push   eax
30031828:	call   DWORD PTR ds:0x300451ec
3003182e:	cmp    eax,0xffffffff
30031831:	je     0x3003184d
30031833:	lea    eax,[ebp-0x218]
30031839:	push   eax
3003183a:	lea    eax,[ebp-0x628]
30031840:	push   eax
30031841:	mov    BYTE PTR [ebp-0xa4a],0x1
30031848:	call   0x30039434
3003184d:	mov    ebx,0x104
30031852:	or     DWORD PTR [ebp-0x4],0xffffffff
30031856:	lea    ecx,[esi-0x10]
30031859:	call   0x30004017
3003185e:	mov    al,BYTE PTR [ebp-0xa4a]
30031864:	test   al,al
30031866:	je     0x30031895
30031868:	push   0x2
3003186a:	push   0x2
3003186c:	lea    eax,[ebp-0x218]
30031872:	push   eax
30031873:	call   DWORD PTR ds:0x3004522c
30031879:	jmp    0x30031895
3003187b:	mov    esi,DWORD PTR [ebp-0xa50]
30031881:	jmp    0x30031852
30031883:	lea    eax,[ebp-0xa38]
30031889:	push   eax
3003188a:	push   0x80000001
3003188f:	call   DWORD PTR ds:0x3004505c
30031895:	mov    edx,DWORD PTR [ebp-0xa5c]
3003189b:	lea    ecx,[ebp-0x420]
300318a1:	call   0x3003116f
300318a6:	cmp    al,0x1
300318a8:	jne    0x30031916
300318aa:	xor    eax,eax
300318ac:	movzx  edx,ax
300318af:	mov    eax,edx
300318b1:	shl    edx,0x10
300318b4:	or     eax,edx
300318b6:	mov    ecx,0x82
300318bb:	lea    edi,[ebp-0x830]
300318c1:	rep stos DWORD PTR es:[edi],eax
300318c3:	lea    eax,[ebp-0x420]
300318c9:	push   eax
300318ca:	push   ebx
300318cb:	lea    eax,[ebp-0x830]
300318d1:	push   eax
300318d2:	call   0x30004c1e
300318d7:	lea    ecx,[ebp-0x420]
300318dd:	xor    edi,edi
300318df:	lea    edx,[ecx+0x2]
300318e2:	mov    ax,WORD PTR [ecx]
300318e5:	add    ecx,0x2
300318e8:	cmp    ax,di
300318eb:	jne    0x300318e2
300318ed:	sub    ecx,edx
300318ef:	sar    ecx,1
300318f1:	push   0x3002a64c
300318f6:	sub    ebx,ecx
300318f8:	push   ebx
300318f9:	lea    eax,[ebp-0x830]
300318ff:	push   eax
30031900:	call   0x300310d4
30031905:	push   0x1
30031907:	push   0x2
30031909:	lea    eax,[ebp-0x830]
3003190f:	push   eax
30031910:	call   DWORD PTR ds:0x3004522c
30031916:	call   0x300045fe
3003191b:	ret    0x4
3003191e:	nop
3003191f:	nop
30031920:	and    eax,0x5c007300
30031925:	add    BYTE PTR [eax+0x0],dl
30031928:	dec    ecx
30031929:	add    BYTE PTR [eax+eax*1+0x73],al
3003192d:	add    BYTE PTR [eax+eax*1+0x25],bl
30031931:	add    BYTE PTR [eax+eax*1+0x0],ah
30031935:	add    BYTE PTR [eax+0x76006390],dl
3003193b:	add    BYTE PTR [edx+0x0],dh
3003193e:	add    BYTE PTR [eax],al
30031940:	and    eax,0x5c007300
30031945:	add    BYTE PTR ds:0x2e007300,ah
3003194b:	add    BYTE PTR ds:0x7300,ah
30031951:	add    BYTE PTR [eax-0x6f6f6f70],dl
30031957:	nop
30031958:	fsub   DWORD PTR [ebx-0x5c1fcffe]
3003195e:	add    dh,BYTE PTR [eax]
30031960:	in     al,dx
30031961:	mov    ds:0xa4043002,eax
30031966:	add    dh,BYTE PTR [eax]
30031968:	adc    al,0xa4
3003196a:	add    dh,BYTE PTR [eax]
3003196c:	sub    BYTE PTR [edx+eax*1+0x2a44430],ah
30031973:	xor    BYTE PTR [eax-0x5c],bl
30031976:	add    dh,BYTE PTR [eax]
30031978:	jo     0x3003191e
3003197a:	add    dh,BYTE PTR [eax]
3003197c:	mov    WORD PTR [edx+eax*1+0x2a4a830],fs
30031983:	xor    al,cl
30031985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
30031986:	add    dh,BYTE PTR [eax]
30031988:	fsub   QWORD PTR [edx+eax*1+0x2a4f030]
3003198f:	xor    BYTE PTR [eiz*4-0x5aefcffe],al
30031996:	add    dh,BYTE PTR [eax]
30031998:	sub    BYTE PTR [ebp-0x5ac7cffe],ah
3003199e:	add    dh,BYTE PTR [eax]
300319a0:	push   eax
300319a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300319a2:	add    dh,BYTE PTR [eax]
300319a4:	ins    BYTE PTR es:[edi],dx
300319a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300319a6:	add    dh,BYTE PTR [eax]
300319a8:	test   BYTE PTR [ebp-0x5a6bcffe],ah
300319ae:	add    dh,BYTE PTR [eax]
300319b0:	mov    ah,0xa5
300319b2:	add    dh,BYTE PTR [eax]
300319b4:	js     0x30031984
300319b6:	add    dh,BYTE PTR [eax]
300319b8:	les    esp,FWORD PTR [ebp-0x5a1fcffe]
300319be:	add    dh,BYTE PTR [eax]
300319c0:	clc    
300319c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
300319c2:	add    dh,BYTE PTR [eax]
300319c4:	adc    BYTE PTR [esi-0x59d3cffe],ah
300319ca:	add    dh,BYTE PTR [eax]
300319cc:	push   ebp
300319cd:	mov    ebp,esp
300319cf:	sub    esp,0x1c
300319d2:	push   esi
300319d3:	call   DWORD PTR ds:0x30045218
300319d9:	push   eax
300319da:	push   0x0
300319dc:	push   0x410
300319e1:	call   DWORD PTR ds:0x3004521c
300319e7:	mov    esi,eax
300319e9:	test   esi,esi
300319eb:	jne    0x300319fa
300319ed:	or     ecx,0xffffffff
300319f0:	call   0x30011511
300319f5:	jmp    0x30031aad
300319fa:	xor    ecx,ecx
300319fc:	call   0x30011511
30031a01:	push   0x1c
30031a03:	lea    eax,[ebp-0x1c]
30031a06:	push   eax
30031a07:	push   ecx
30031a08:	jmp    0x30031a97
30031a0d:	mov    eax,DWORD PTR [ebp-0xc]
30031a10:	mov    ecx,DWORD PTR [ebp-0x10]
30031a13:	and    eax,0x10000
30031a18:	je     0x30031a30
30031a1a:	add    DWORD PTR ds:0x300436ec,ecx
30031a20:	cmp    ecx,DWORD PTR ds:0x300436f0
30031a26:	jbe    0x30031a56
30031a28:	mov    DWORD PTR ds:0x300436f0,ecx
30031a2e:	jmp    0x30031a56
30031a30:	test   DWORD PTR [ebp-0xc],0x1000
30031a37:	je     0x30031a41
30031a39:	add    DWORD PTR ds:0x300436e4,ecx
30031a3f:	jmp    0x30031a50
30031a41:	test   DWORD PTR [ebp-0xc],0x2000
30031a48:	je     0x30031a56
30031a4a:	add    DWORD PTR ds:0x300436e0,ecx
30031a50:	add    DWORD PTR ds:0x300436e8,ecx
30031a56:	test   eax,eax
30031a58:	jne    0x30031a8b
30031a5a:	test   DWORD PTR [ebp-0x4],0x1000000
30031a61:	je     0x30031a6b
30031a63:	add    DWORD PTR ds:0x300436dc,ecx
30031a69:	jmp    0x30031a8b
30031a6b:	test   DWORD PTR [ebp-0x4],0x40000
30031a72:	je     0x30031a7c
30031a74:	add    DWORD PTR ds:0x300436d8,ecx
30031a7a:	jmp    0x30031a8b
30031a7c:	test   DWORD PTR [ebp-0x4],0x20000
30031a83:	je     0x30031a8b
30031a85:	add    DWORD PTR ds:0x300436d4,ecx
30031a8b:	mov    eax,DWORD PTR [ebp-0x1c]
30031a8e:	add    eax,ecx
30031a90:	push   0x1c
30031a92:	lea    ecx,[ebp-0x1c]
30031a95:	push   ecx
30031a96:	push   eax
30031a97:	push   esi
30031a98:	call   DWORD PTR ds:0x30045230
30031a9e:	test   eax,eax
30031aa0:	jne    0x30031a0d
30031aa6:	push   esi
30031aa7:	call   DWORD PTR ds:0x300451d0
30031aad:	pop    esi
30031aae:	leave  
30031aaf:	ret    
30031ab0:	push   0x8
30031ab2:	push   0x30031b40
30031ab7:	call   0x30008a54
30031abc:	xor    esi,esi
30031abe:	mov    DWORD PTR [ebp-0x4],esi
30031ac1:	call   0x300319cc
30031ac6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30031acd:	jmp    0x30031ae7
30031acf:	xor    eax,eax
30031ad1:	inc    eax
30031ad2:	ret    
30031ad3:	mov    esp,DWORD PTR [ebp-0x18]
30031ad6:	or     ecx,0xffffffff
30031ad9:	call   0x30011511
30031ade:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30031ae5:	xor    esi,esi
30031ae7:	mov    edi,DWORD PTR [ebp+0x8]
30031aea:	test   edi,edi
30031aec:	je     0x30031b1a
30031aee:	mov    eax,DWORD PTR [edi]
30031af0:	cmp    DWORD PTR [eax],0x80000003
30031af6:	je     0x30031b1a
30031af8:	call   DWORD PTR ds:0x30045198
30031afe:	test   eax,eax
30031b00:	jne    0x30031b1a
30031b02:	push   0x30043904
30031b07:	mov    edx,0x300436fc
30031b0c:	mov    ecx,DWORD PTR ds:0x300436f8
30031b12:	call   0x30031542
30031b17:	xor    esi,esi
30031b19:	inc    esi
30031b1a:	test   esi,esi
30031b1c:	jne    0x30031b33
30031b1e:	push   DWORD PTR ds:0x300436d0
30031b24:	call   DWORD PTR ds:0x30045194
30031b2a:	test   eax,eax
30031b2c:	je     0x30031b33
30031b2e:	push   edi
30031b2f:	call   eax
30031b31:	jmp    0x30031b35
30031b33:	xor    eax,eax
30031b35:	call   0x30008a99
30031b3a:	ret    0x4
30031b3d:	nop
30031b3e:	nop
30031b3f:	nop
30031b40:	(bad)  
30031b41:	(bad)  
30031b42:	(bad)  
30031b43:	inc    DWORD PTR [eax]
30031b45:	add    BYTE PTR [eax],al
30031b47:	add    al,bl
30031b49:	(bad)  
30031b4a:	(bad)  
30031b4b:	inc    DWORD PTR [eax]
30031b4d:	add    BYTE PTR [eax],al
30031b4f:	add    dh,bh
30031b51:	(bad)  
30031b52:	(bad)  
30031b53:	dec    edi
30031b55:	sbb    al,BYTE PTR [ebx]
30031b57:	xor    bl,dl
30031b59:	sbb    al,BYTE PTR [ebx]
30031b5b:	xor    bh,al
30031b5d:	add    eax,0x0
30031b62:	add    BYTE PTR [eax],al
30031b64:	add    BYTE PTR [eax],al
30031b66:	ret    
30031b67:	push   ebp
30031b68:	mov    ebp,esp
30031b6a:	lea    eax,[ebp+0x10]
30031b6d:	push   eax
30031b6e:	push   DWORD PTR [ebp+0xc]
30031b71:	push   0x104
30031b76:	push   DWORD PTR [ebp+0x8]
30031b79:	call   DWORD PTR ds:0x300452f8
30031b7f:	add    esp,0x10
30031b82:	pop    ebp
30031b83:	ret    
30031b84:	add    ecx,0x4
30031b87:	jmp    0x3001e3be
30031b8c:	push   ebp
30031b8d:	mov    ebp,esp
30031b8f:	cmp    DWORD PTR [ebp+0xc],0x3
30031b93:	je     0x30031b9a
30031b95:	xor    eax,eax
30031b97:	inc    eax
30031b98:	jmp    0x30031bb9
30031b9a:	mov    eax,DWORD PTR [ebp+0x10]
30031b9d:	test   eax,eax
30031b9f:	je     0x30031bac
30031ba1:	cmp    DWORD PTR [eax+0x4],0x0
30031ba5:	je     0x30031bac
30031ba7:	push   DWORD PTR [eax+0x4]
30031baa:	jmp    0x30031bb1
30031bac:	push   0x30044518
30031bb1:	call   DWORD PTR ds:0x3004523c
30031bb7:	xor    eax,eax
30031bb9:	pop    ebp
30031bba:	ret    0xc
30031bbd:	push   ebp
30031bbe:	mov    ebp,esp
30031bc0:	push   DWORD PTR [ebp+0x10]
30031bc3:	mov    eax,DWORD PTR [ebp+0x8]
30031bc6:	push   DWORD PTR [ebp+0xc]
30031bc9:	mov    eax,DWORD PTR [eax+0x28]
30031bcc:	push   eax
30031bcd:	mov    ecx,DWORD PTR [eax]
30031bcf:	call   DWORD PTR [ecx+0x10]
30031bd2:	pop    ebp
30031bd3:	ret    0xc
30031bd6:	push   ebp
30031bd7:	mov    ebp,esp
30031bd9:	sub    esp,0x18
30031bdc:	mov    eax,ds:0x30043050
30031be1:	xor    eax,ebp
30031be3:	mov    DWORD PTR [ebp-0x4],eax
30031be6:	mov    eax,DWORD PTR [ebp+0x1c]
30031be9:	and    DWORD PTR [ebp-0x18],0x0
30031bed:	push   ebx
30031bee:	mov    ebx,DWORD PTR [ebp+0x28]
30031bf1:	push   esi
30031bf2:	push   edi
30031bf3:	lea    esi,[ebp+0xc]
30031bf6:	lea    edi,[ebp-0x14]
30031bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30031bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30031bfb:	lea    ecx,[ebp-0x18]
30031bfe:	push   ecx
30031bff:	push   DWORD PTR [ebp+0x24]
30031c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30031c03:	push   eax
30031c04:	lea    eax,[ebp-0x14]
30031c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30031c08:	mov    edi,DWORD PTR [ebp+0x20]
30031c0b:	push   eax
30031c0c:	call   0x3000de5a
30031c11:	mov    esi,eax
30031c13:	add    esp,0x10
30031c16:	test   esi,esi
30031c18:	js     0x30031c26
30031c1a:	mov    eax,DWORD PTR [ebp-0x18]
30031c1d:	push   ebx
30031c1e:	mov    ecx,DWORD PTR [eax]
30031c20:	push   edi
30031c21:	push   eax
30031c22:	call   DWORD PTR [ecx]
30031c24:	mov    esi,eax
30031c26:	mov    ecx,DWORD PTR [ebp-0x18]
30031c29:	test   ecx,ecx
30031c2b:	je     0x30031c33
30031c2d:	mov    eax,DWORD PTR [ecx]
30031c2f:	push   ecx
30031c30:	call   DWORD PTR [eax+0x8]
30031c33:	mov    ecx,DWORD PTR [ebp-0x4]
30031c36:	pop    edi
30031c37:	mov    eax,esi
30031c39:	pop    esi
30031c3a:	xor    ecx,ebp
30031c3c:	pop    ebx
30031c3d:	call   0x3000115c
30031c42:	leave  
30031c43:	ret    0x24
30031c46:	mov    eax,0x80004001
30031c4b:	ret    0x18
30031c4e:	push   0x1ba7
30031c53:	call   0x3000532c
30031c58:	ret    
30031c59:	mov    ecx,DWORD PTR [ecx+0x4]
30031c5c:	test   ecx,ecx
30031c5e:	je     0x30031c66
30031c60:	mov    eax,DWORD PTR [ecx]
30031c62:	push   ecx
30031c63:	call   DWORD PTR [eax+0x8]
30031c66:	ret    
30031c67:	push   esi
30031c68:	mov    esi,ecx
30031c6a:	push   DWORD PTR [esi+0x2c]
30031c6d:	call   DWORD PTR ds:0x300454e8
30031c73:	mov    edx,DWORD PTR [esi+0x28]
30031c76:	test   edx,edx
30031c78:	je     0x30031c80
30031c7a:	mov    eax,DWORD PTR [edx]
30031c7c:	push   edx
30031c7d:	call   DWORD PTR [eax+0x8]
30031c80:	lea    ecx,[esi+0x8]
30031c83:	pop    esi
30031c84:	jmp    0x3001e3be
30031c89:	sub    DWORD PTR [esp+0x4],0x4
30031c8e:	jmp    0x30006af3
30031c93:	sub    DWORD PTR [esp+0x4],0x4
30031c98:	jmp    0x30015d06
30031c9d:	call   DWORD PTR ds:0x30045160
30031ca3:	test   eax,eax
30031ca5:	jle    0x30031cb1
30031ca7:	movzx  eax,ax
30031caa:	or     eax,0x80070000
30031caf:	test   eax,eax
30031cb1:	js     0x30031cb8
30031cb3:	mov    eax,0x80004005
30031cb8:	ret    
30031cb9:	push   ebp
30031cba:	mov    ebp,esp
30031cbc:	push   ecx
30031cbd:	mov    eax,DWORD PTR [ebp+0x8]
30031cc0:	and    DWORD PTR [ebp-0x4],0x0
30031cc4:	mov    ecx,DWORD PTR [eax+0x14]
30031cc7:	push   esi
30031cc8:	mov    esi,0x80004005
30031ccd:	test   ecx,ecx
30031ccf:	je     0x30031d2b
30031cd1:	mov    eax,DWORD PTR [ecx]
30031cd3:	lea    edx,[ebp-0x4]
30031cd6:	push   edx
30031cd7:	mov    edx,0x30028f44
30031cdc:	push   edx
30031cdd:	push   edx
30031cde:	push   ecx
30031cdf:	call   DWORD PTR [eax+0xc]
30031ce2:	mov    esi,eax
30031ce4:	test   esi,esi
30031ce6:	js     0x30031d1e
30031ce8:	mov    eax,DWORD PTR [ebp-0x4]
30031ceb:	and    DWORD PTR [ebp+0x8],0x0
30031cef:	mov    ecx,DWORD PTR [eax]
30031cf1:	lea    edx,[ebp+0x8]
30031cf4:	push   edx
30031cf5:	push   0x3001e330
30031cfa:	push   eax
30031cfb:	call   DWORD PTR [ecx]
30031cfd:	mov    esi,eax
30031cff:	test   esi,esi
30031d01:	js     0x30031d11
30031d03:	mov    eax,DWORD PTR [ebp+0x8]
30031d06:	push   DWORD PTR [ebp+0xc]
30031d09:	mov    ecx,DWORD PTR [eax]
30031d0b:	push   eax
30031d0c:	call   DWORD PTR [ecx+0xc]
30031d0f:	mov    esi,eax
30031d11:	mov    eax,DWORD PTR [ebp+0x8]
30031d14:	test   eax,eax
30031d16:	je     0x30031d1e
30031d18:	mov    ecx,DWORD PTR [eax]
30031d1a:	push   eax
30031d1b:	call   DWORD PTR [ecx+0x8]
30031d1e:	mov    eax,DWORD PTR [ebp-0x4]
30031d21:	test   eax,eax
30031d23:	je     0x30031d2b
30031d25:	mov    ecx,DWORD PTR [eax]
30031d27:	push   eax
30031d28:	call   DWORD PTR [ecx+0x8]
30031d2b:	mov    eax,esi
30031d2d:	pop    esi
30031d2e:	leave  
30031d2f:	ret    0x8
30031d32:	push   ebp
30031d33:	mov    ebp,esp
30031d35:	push   ecx
30031d36:	mov    eax,DWORD PTR [ebp+0x8]
30031d39:	push   esi
30031d3a:	mov    ecx,DWORD PTR [eax+0x14]
30031d3d:	push   edi
30031d3e:	xor    edi,edi
30031d40:	inc    edi
30031d41:	mov    esi,edi
30031d43:	test   ecx,ecx
30031d45:	je     0x30031da6
30031d47:	and    DWORD PTR [ebp-0x4],0x0
30031d4b:	mov    eax,DWORD PTR [ecx]
30031d4d:	lea    edx,[ebp-0x4]
30031d50:	push   edx
30031d51:	mov    edx,0x30028f44
30031d56:	push   edx
30031d57:	push   edx
30031d58:	push   ecx
30031d59:	call   DWORD PTR [eax+0xc]
30031d5c:	mov    esi,eax
30031d5e:	test   esi,esi
30031d60:	js     0x30031d95
30031d62:	mov    eax,DWORD PTR [ebp-0x4]
30031d65:	and    DWORD PTR [ebp+0x8],0x0
30031d69:	mov    ecx,DWORD PTR [eax]
30031d6b:	lea    edx,[ebp+0x8]
30031d6e:	push   edx
30031d6f:	push   0x3001e330
30031d74:	push   eax
30031d75:	call   DWORD PTR [ecx]
30031d77:	mov    esi,eax
30031d79:	test   esi,esi
30031d7b:	js     0x30031d88
30031d7d:	mov    eax,DWORD PTR [ebp+0x8]
30031d80:	push   eax
30031d81:	mov    ecx,DWORD PTR [eax]
30031d83:	call   DWORD PTR [ecx+0x10]
30031d86:	mov    esi,eax
30031d88:	mov    eax,DWORD PTR [ebp+0x8]
30031d8b:	test   eax,eax
30031d8d:	je     0x30031d95
30031d8f:	mov    ecx,DWORD PTR [eax]
30031d91:	push   eax
30031d92:	call   DWORD PTR [ecx+0x8]
30031d95:	mov    eax,DWORD PTR [ebp-0x4]
30031d98:	test   eax,eax
30031d9a:	je     0x30031da2
30031d9c:	mov    ecx,DWORD PTR [eax]
30031d9e:	push   eax
30031d9f:	call   DWORD PTR [ecx+0x8]
30031da2:	test   esi,esi
30031da4:	js     0x30031da8
30031da6:	mov    edi,esi
30031da8:	mov    eax,edi
30031daa:	pop    edi
30031dab:	pop    esi
30031dac:	leave  
30031dad:	ret    0x4
30031db0:	mov    eax,0x80004001
30031db5:	ret    0xc
30031db8:	push   ebp
30031db9:	mov    ebp,esp
30031dbb:	push   ebx
30031dbc:	push   esi
30031dbd:	push   edi
30031dbe:	mov    edi,ecx
30031dc0:	push   ecx
30031dc1:	lea    eax,[edi+0x4]
30031dc4:	push   eax
30031dc5:	push   0x7
30031dc7:	pop    edx
30031dc8:	call   0x30031e4b
30031dcd:	mov    ebx,DWORD PTR ds:0x30045170
30031dd3:	push   0x7
30031dd5:	push   DWORD PTR [edi]
30031dd7:	push   0x7
30031dd9:	push   0x30031e44
30031dde:	push   0x0
30031de0:	push   DWORD PTR [ebp+0xc]
30031de3:	call   ebx
30031de5:	mov    esi,eax
30031de7:	neg    esi
30031de9:	sbb    esi,esi
30031deb:	inc    esi
30031dec:	je     0x30031e36
30031dee:	call   DWORD PTR ds:0x30045160
30031df4:	cmp    eax,0x7a
30031df7:	jne    0x30031e32
30031df9:	xor    eax,eax
30031dfb:	push   eax
30031dfc:	push   eax
30031dfd:	push   0x7
30031dff:	push   0x30031e44
30031e04:	push   eax
30031e05:	push   DWORD PTR [ebp+0xc]
30031e08:	call   ebx
30031e0a:	mov    esi,eax
30031e0c:	push   ecx
30031e0d:	lea    eax,[edi+0x4]
30031e10:	push   eax
30031e11:	mov    edx,esi
30031e13:	mov    ecx,edi
30031e15:	call   0x30031e4b
30031e1a:	push   esi
30031e1b:	push   DWORD PTR [edi]
30031e1d:	push   0x7
30031e1f:	push   0x30031e44
30031e24:	push   0x0
30031e26:	push   DWORD PTR [ebp+0xc]
30031e29:	call   ebx
30031e2b:	mov    esi,eax
30031e2d:	neg    esi
30031e2f:	sbb    esi,esi
30031e31:	inc    esi
30031e32:	test   esi,esi
30031e34:	jne    0x30031e3d
30031e36:	pop    edi
30031e37:	pop    esi
30031e38:	pop    ebx
30031e39:	pop    ebp
30031e3a:	ret    0x8
30031e3d:	call   0x3002c3b4
30031e42:	int3   
30031e43:	nop
30031e44:	push   edx
30031e45:	push   esp
30031e46:	dec    ebp
30031e47:	push   edx
30031e48:	inc    ebp
30031e49:	dec    esp
30031e4a:	add    BYTE PTR [ebp-0x75],dl
30031e4d:	in     al,dx
30031e4e:	push   esi
30031e4f:	mov    esi,ecx
30031e51:	push   edi
30031e52:	test   esi,esi
30031e54:	je     0x30031eb3
30031e56:	test   edx,edx
30031e58:	js     0x30031eb3
30031e5a:	mov    edi,DWORD PTR [ebp+0x8]
30031e5d:	test   edi,edi
30031e5f:	je     0x30031eb3
30031e61:	cmp    DWORD PTR [esi],edi
30031e63:	je     0x30031e9c
30031e65:	cmp    edx,0x80
30031e6b:	jle    0x30031e86
30031e6d:	push   0x2
30031e6f:	push   edx
30031e70:	push   DWORD PTR [esi]
30031e72:	call   DWORD PTR ds:0x300452e8
30031e78:	add    esp,0xc
30031e7b:	test   eax,eax
30031e7d:	jne    0x30031eaf
30031e7f:	push   0x8007000e
30031e84:	jmp    0x30031eb8
30031e86:	push   DWORD PTR [esi]
30031e88:	call   DWORD PTR ds:0x300452b4
30031e8e:	pop    ecx
30031e8f:	mov    DWORD PTR [esi],edi
30031e91:	cmp    DWORD PTR [esi],0x0
30031e94:	pop    edi
30031e95:	pop    esi
30031e96:	je     0x30031e7f
30031e98:	pop    ebp
30031e99:	ret    0x8
30031e9c:	cmp    edx,0x80
30031ea2:	jle    0x30031e8f
30031ea4:	push   0x2
30031ea6:	push   edx
30031ea7:	call   DWORD PTR ds:0x3004532c
30031ead:	pop    ecx
30031eae:	pop    ecx
30031eaf:	mov    DWORD PTR [esi],eax
30031eb1:	jmp    0x30031e91
30031eb3:	push   0x80070057
30031eb8:	call   0x3002ae0b
30031ebd:	int3   
30031ebe:	push   ebp
30031ebf:	mov    ebp,esp
30031ec1:	push   ecx
30031ec2:	push   ecx
30031ec3:	push   esi
30031ec4:	mov    esi,DWORD PTR ds:0x300435c8
30031eca:	cmp    DWORD PTR [esi+0x8],0x0
30031ece:	je     0x30031ee1
30031ed0:	push   DWORD PTR [esi+0x8]
30031ed3:	call   DWORD PTR ds:0x300455d0
30031ed9:	test   eax,eax
30031edb:	je     0x30031ee1
30031edd:	and    DWORD PTR [esi+0x8],0x0
30031ee1:	mov    eax,DWORD PTR [ebp+0x8]
30031ee4:	mov    DWORD PTR [esi+0x8],eax
30031ee7:	cmp    DWORD PTR [esi],0x0
30031eea:	je     0x30031f0a
30031eec:	push   DWORD PTR [esi]
30031eee:	call   DWORD PTR ds:0x3004546c
30031ef4:	test   eax,eax
30031ef6:	je     0x30031f0a
30031ef8:	cmp    DWORD PTR [esi+0xc],0x0
30031efc:	jne    0x30031f0a
30031efe:	push   0xff
30031f03:	mov    ecx,esi
30031f05:	call   0x3001c962
30031f0a:	mov    al,0x1
30031f0c:	pop    esi
30031f0d:	leave  
30031f0e:	ret    0x4
30031f11:	push   esi
30031f12:	mov    esi,ecx
30031f14:	cmp    DWORD PTR [esi],0x0
30031f17:	je     0x30031f28
30031f19:	push   DWORD PTR [esi]
30031f1b:	call   DWORD PTR ds:0x300455d0
30031f21:	test   eax,eax
30031f23:	je     0x30031f28
30031f25:	and    DWORD PTR [esi],0x0
30031f28:	pop    esi
30031f29:	ret    
30031f2a:	push   ebp
30031f2b:	mov    ebp,esp
30031f2d:	push   esi
30031f2e:	mov    esi,ecx
30031f30:	call   0x300171b5
30031f35:	test   BYTE PTR [ebp+0x8],0x1
30031f39:	je     0x30031f43
30031f3b:	push   esi
30031f3c:	call   DWORD PTR ds:0x300452ac
30031f42:	pop    ecx
30031f43:	mov    eax,esi
30031f45:	pop    esi
30031f46:	pop    ebp
30031f47:	ret    0x4
30031f4a:	dec    ecx
30031f4b:	je     0x30031f5b
30031f4d:	dec    ecx
30031f4e:	je     0x30031f57
30031f50:	dec    ecx
30031f51:	jne    0x30031f5b
30031f53:	push   0x3
30031f55:	jmp    0x30031f59
30031f57:	push   0x2
30031f59:	pop    eax
30031f5a:	ret    
30031f5b:	xor    eax,eax
30031f5d:	inc    eax
30031f5e:	ret    
30031f5f:	push   ebp
30031f60:	mov    ebp,esp
30031f62:	push   DWORD PTR [ebp+0xc]
30031f65:	mov    ecx,DWORD PTR [ebp+0x8]
30031f68:	push   0x30018514
30031f6d:	call   0x30031f4a
30031f72:	push   eax
30031f73:	call   0x300046d1
30031f78:	pop    ebp
30031f79:	ret    0x8
30031f7c:	push   ebp
30031f7d:	mov    ebp,esp
30031f7f:	push   DWORD PTR [ebp+0x10]
30031f82:	mov    ecx,DWORD PTR [ebp+0x8]
30031f85:	push   DWORD PTR [ebp+0xc]
30031f88:	push   0x30018514
30031f8d:	call   0x30031f4a
30031f92:	push   eax
30031f93:	call   0x3000725b
30031f98:	pop    ebp
30031f99:	ret    0xc
30031f9c:	push   ebp
30031f9d:	mov    ebp,esp
30031f9f:	push   DWORD PTR [ebp+0x10]
30031fa2:	mov    ecx,DWORD PTR [ebp+0x8]
30031fa5:	push   DWORD PTR [ebp+0x14]
30031fa8:	push   DWORD PTR [ebp+0xc]
30031fab:	push   0x30018514
30031fb0:	call   0x30031f4a
30031fb5:	push   eax
30031fb6:	call   0x30039853
30031fbb:	pop    ebp
30031fbc:	ret    0x10
30031fbf:	mov    al,0x1
30031fc1:	ret    0x4
30031fc4:	push   ebp
30031fc5:	mov    ebp,esp
30031fc7:	mov    eax,DWORD PTR [ebp+0xc]
30031fca:	xor    ecx,ecx
30031fcc:	test   eax,eax
30031fce:	je     0x30031fd7
30031fd0:	cmp    eax,0x7fffffff
30031fd5:	jbe    0x30031fdc
30031fd7:	mov    ecx,0x80070057
30031fdc:	test   ecx,ecx
30031fde:	js     0x30031ff4
30031fe0:	push   ecx
30031fe1:	push   DWORD PTR [ebp+0x10]
30031fe4:	mov    ecx,DWORD PTR [ebp+0x8]
30031fe7:	push   0x0
30031fe9:	mov    edx,eax
30031feb:	call   0x3003214e
30031ff0:	mov    ecx,eax
30031ff2:	jmp    0x30031ffe
30031ff4:	test   eax,eax
30031ff6:	je     0x30031ffe
30031ff8:	mov    eax,DWORD PTR [ebp+0x8]
30031ffb:	mov    BYTE PTR [eax],0x0
30031ffe:	mov    eax,ecx
30032000:	pop    ebp
30032001:	ret    0xc
30032004:	push   ebp
30032005:	mov    ebp,esp
30032007:	push   ecx
30032008:	mov    ecx,DWORD PTR [ebp+0x1c]
3003200b:	push   ebx
3003200c:	push   esi
3003200d:	mov    edx,ecx
3003200f:	xor    esi,esi
30032011:	push   edi
30032012:	mov    edi,DWORD PTR [ebp+0xc]
30032015:	mov    ebx,0x80070057
3003201a:	and    edx,0x100
30032020:	je     0x30032039
30032022:	mov    eax,DWORD PTR [ebp+0x8]
30032025:	test   eax,eax
30032027:	jne    0x3003202d
30032029:	test   edi,edi
3003202b:	jne    0x30032035
3003202d:	cmp    edi,0x7fffffff
30032033:	jbe    0x3003204c
30032035:	mov    esi,ebx
30032037:	jmp    0x3003204c
30032039:	xor    esi,esi
3003203b:	test   edi,edi
3003203d:	je     0x30032047
3003203f:	cmp    edi,0x7fffffff
30032045:	jbe    0x30032049
30032047:	mov    esi,ebx
30032049:	mov    eax,DWORD PTR [ebp+0x8]
3003204c:	test   esi,esi
3003204e:	js     0x3003213d
30032054:	mov    ebx,edi
30032056:	test   edx,edx
30032058:	mov    edx,DWORD PTR [ebp+0x10]
3003205b:	mov    DWORD PTR [ebp+0xc],eax
3003205e:	mov    DWORD PTR [ebp-0x4],ebx
30032061:	je     0x3003206c
30032063:	test   edx,edx
30032065:	jne    0x3003206c
30032067:	mov    edx,0x3003214d
3003206c:	xor    esi,esi
3003206e:	test   ecx,0xffffe000
30032074:	je     0x300320cb
30032076:	mov    esi,0x80070057
3003207b:	test   edi,edi
3003207d:	je     0x30032082
3003207f:	mov    BYTE PTR [eax],0x0
30032082:	test   ecx,0x1c00
30032088:	je     0x300320a4
3003208a:	test   edi,edi
3003208c:	je     0x300320a4
3003208e:	push   ecx
3003208f:	lea    ecx,[ebp-0x4]
30032092:	push   ecx
30032093:	lea    ecx,[ebp+0xc]
30032096:	push   ecx
30032097:	push   ecx
30032098:	mov    edx,edi
3003209a:	mov    ecx,eax
3003209c:	call   0x3003219e
300320a1:	mov    ebx,DWORD PTR [ebp-0x4]
300320a4:	test   esi,esi
300320a6:	jns    0x300320b4
300320a8:	cmp    esi,0x8007007a
300320ae:	jne    0x30032144
300320b4:	mov    edx,DWORD PTR [ebp+0xc]
300320b7:	mov    eax,DWORD PTR [ebp+0x14]
300320ba:	test   eax,eax
300320bc:	je     0x300320c0
300320be:	mov    DWORD PTR [eax],edx
300320c0:	mov    eax,DWORD PTR [ebp+0x18]
300320c3:	test   eax,eax
300320c5:	je     0x30032144
300320c7:	mov    DWORD PTR [eax],ebx
300320c9:	jmp    0x30032144
300320cb:	test   edi,edi
300320cd:	jne    0x300320e5
300320cf:	cmp    BYTE PTR [edx],0x0
300320d2:	je     0x300320b4
300320d4:	mov    esi,eax
300320d6:	neg    esi
300320d8:	sbb    esi,esi
300320da:	and    esi,0x23
300320dd:	add    esi,0x80070057
300320e3:	jmp    0x30032082
300320e5:	and    DWORD PTR [ebp+0xc],esi
300320e8:	push   ecx
300320e9:	push   edx
300320ea:	lea    ecx,[ebp+0xc]
300320ed:	push   ecx
300320ee:	mov    edx,edi
300320f0:	mov    ecx,eax
300320f2:	call   0x3003214e
300320f7:	mov    ecx,DWORD PTR [ebp+0xc]
300320fa:	mov    esi,eax
300320fc:	mov    eax,DWORD PTR [ebp+0x8]
300320ff:	mov    ebx,edi
30032101:	sub    ebx,ecx
30032103:	lea    edx,[ecx+eax*1]
30032106:	mov    ecx,DWORD PTR [ebp+0x1c]
30032109:	mov    DWORD PTR [ebp+0xc],edx
3003210c:	mov    DWORD PTR [ebp-0x4],ebx
3003210f:	test   esi,esi
30032111:	js     0x30032082
30032117:	test   ecx,0x200
3003211d:	je     0x300320b7
3003211f:	cmp    ebx,0x1
30032122:	jbe    0x300320b7
30032124:	lea    eax,[ebx-0x1]
30032127:	push   eax
30032128:	movzx  eax,cl
3003212b:	push   eax
3003212c:	lea    eax,[edx+0x1]
3003212f:	push   eax
30032130:	call   0x300011b1
30032135:	add    esp,0xc
30032138:	jmp    0x300320b4
3003213d:	test   edi,edi
3003213f:	je     0x30032144
30032141:	mov    BYTE PTR [eax],0x0
30032144:	pop    edi
30032145:	mov    eax,esi
30032147:	pop    esi
30032148:	pop    ebx
30032149:	leave  
3003214a:	ret    0x18
3003214d:	add    BYTE PTR [ebp-0x75],dl
30032150:	in     al,dx
30032151:	push   ecx
30032152:	push   esi
30032153:	xor    eax,eax
30032155:	xor    esi,esi
30032157:	mov    DWORD PTR [ebp-0x4],eax
3003215a:	test   edx,edx
3003215c:	je     0x30032186
3003215e:	push   ebx
3003215f:	push   edi
30032160:	mov    edi,DWORD PTR [ebp+0xc]
30032163:	mov    ebx,0x7ffffffe
30032168:	sub    edi,ecx
3003216a:	test   ebx,ebx
3003216c:	je     0x3003217d
3003216e:	mov    al,BYTE PTR [edi+ecx*1]
30032171:	test   al,al
30032173:	je     0x3003217d
30032175:	mov    BYTE PTR [ecx],al
30032177:	inc    ecx
30032178:	dec    ebx
30032179:	inc    esi
3003217a:	dec    edx
3003217b:	jne    0x3003216a
3003217d:	mov    eax,DWORD PTR [ebp-0x4]
30032180:	pop    edi
30032181:	pop    ebx
30032182:	test   edx,edx
30032184:	jne    0x3003218d
30032186:	dec    ecx
30032187:	dec    esi
30032188:	mov    eax,0x8007007a
3003218d:	mov    BYTE PTR [ecx],0x0
30032190:	mov    ecx,DWORD PTR [ebp+0x8]
30032193:	test   ecx,ecx
30032195:	je     0x30032199
30032197:	mov    DWORD PTR [ecx],esi
30032199:	pop    esi
3003219a:	leave  
3003219b:	ret    0xc
3003219e:	push   ebp
3003219f:	mov    ebp,esp
300321a1:	push   ebx
300321a2:	push   edi
300321a3:	mov    edi,edx
300321a5:	mov    ebx,ecx
300321a7:	test   edi,edi
300321a9:	je     0x300321c1
300321ab:	test   DWORD PTR [ebp+0x14],0x1000
300321b2:	je     0x300321c1
300321b4:	mov    eax,DWORD PTR [ebp+0xc]
300321b7:	mov    BYTE PTR [ebx],0x0
300321ba:	mov    DWORD PTR [eax],ebx
300321bc:	mov    eax,DWORD PTR [ebp+0x10]
300321bf:	mov    DWORD PTR [eax],edi
300321c1:	test   DWORD PTR [ebp+0x14],0x400
300321c8:	je     0x3003220e
300321ca:	push   esi
300321cb:	mov    esi,DWORD PTR [ebp+0x14]
300321ce:	push   edi
300321cf:	and    esi,0xff
300321d5:	push   esi
300321d6:	push   ebx
300321d7:	call   0x300011b1
300321dc:	add    esp,0xc
300321df:	test   esi,esi
300321e1:	pop    esi
300321e2:	jne    0x300321f0
300321e4:	mov    ecx,DWORD PTR [ebp+0xc]
300321e7:	mov    eax,DWORD PTR [ebp+0x10]
300321ea:	mov    DWORD PTR [ecx],ebx
300321ec:	mov    DWORD PTR [eax],edi
300321ee:	jmp    0x30032214
300321f0:	test   edi,edi
300321f2:	je     0x30032228
300321f4:	mov    ecx,DWORD PTR [ebp+0xc]
300321f7:	lea    eax,[edi-0x1]
300321fa:	add    eax,ebx
300321fc:	mov    DWORD PTR [ecx],eax
300321fe:	mov    ecx,DWORD PTR [ebp+0x10]
30032201:	mov    BYTE PTR [eax],0x0
30032204:	mov    DWORD PTR [ecx],0x1
3003220a:	mov    eax,ecx
3003220c:	jmp    0x30032211
3003220e:	mov    eax,DWORD PTR [ebp+0x10]
30032211:	mov    ecx,DWORD PTR [ebp+0xc]
30032214:	test   edi,edi
30032216:	je     0x30032228
30032218:	test   DWORD PTR [ebp+0x14],0x800
3003221f:	je     0x30032228
30032221:	mov    DWORD PTR [ecx],ebx
30032223:	mov    DWORD PTR [eax],edi
30032225:	mov    BYTE PTR [ebx],0x0
30032228:	pop    edi
30032229:	xor    eax,eax
3003222b:	pop    ebx
3003222c:	pop    ebp
3003222d:	ret    0x10
30032230:	push   ebp
30032231:	mov    ebp,esp
30032233:	push   ebx
30032234:	push   edi
30032235:	mov    edi,edx
30032237:	shr    edi,1
30032239:	mov    ebx,ecx
3003223b:	je     0x30032255
3003223d:	test   DWORD PTR [ebp+0x14],0x1000
30032244:	je     0x30032255
30032246:	mov    eax,DWORD PTR [ebp+0xc]
30032249:	mov    DWORD PTR [eax],ebx
3003224b:	mov    eax,DWORD PTR [ebp+0x10]
3003224e:	mov    DWORD PTR [eax],edi
30032250:	xor    eax,eax
30032252:	mov    WORD PTR [ebx],ax
30032255:	test   DWORD PTR [ebp+0x14],0x400
3003225c:	je     0x300322a1
3003225e:	push   esi
3003225f:	mov    esi,DWORD PTR [ebp+0x14]
30032262:	push   edx
30032263:	and    esi,0xff
30032269:	push   esi
3003226a:	push   ebx
3003226b:	call   0x300011b1
30032270:	add    esp,0xc
30032273:	test   esi,esi
30032275:	pop    esi
30032276:	jne    0x30032284
30032278:	mov    ecx,DWORD PTR [ebp+0xc]
3003227b:	mov    eax,DWORD PTR [ebp+0x10]
3003227e:	mov    DWORD PTR [ecx],ebx
30032280:	mov    DWORD PTR [eax],edi
30032282:	jmp    0x300322a7
30032284:	test   edi,edi
30032286:	je     0x300322bd
30032288:	mov    ecx,DWORD PTR [ebp+0xc]
3003228b:	lea    eax,[ebx-0x2]
3003228e:	lea    eax,[eax+edi*2]
30032291:	mov    DWORD PTR [ecx],eax
30032293:	mov    ecx,DWORD PTR [ebp+0x10]
30032296:	mov    DWORD PTR [ecx],0x1
3003229c:	xor    ecx,ecx
3003229e:	mov    WORD PTR [eax],cx
300322a1:	mov    ecx,DWORD PTR [ebp+0xc]
300322a4:	mov    eax,DWORD PTR [ebp+0x10]
300322a7:	test   edi,edi
300322a9:	je     0x300322bd
300322ab:	test   DWORD PTR [ebp+0x14],0x800
300322b2:	je     0x300322bd
300322b4:	mov    DWORD PTR [eax],edi
300322b6:	xor    eax,eax
300322b8:	mov    DWORD PTR [ecx],ebx
300322ba:	mov    WORD PTR [ebx],ax
300322bd:	pop    edi
300322be:	xor    eax,eax
300322c0:	pop    ebx
300322c1:	pop    ebp
300322c2:	ret    0x10
300322c5:	push   0x0
300322c7:	mov    eax,0x30040a08
300322cc:	call   0x3000116a
300322d1:	cmp    DWORD PTR [ebp+0x8],0x80000002
300322d8:	jne    0x30032316
300322da:	test   BYTE PTR [ebp+0xc],0x6
300322de:	je     0x30032316
300322e0:	xor    ebx,ebx
300322e2:	cmp    BYTE PTR [ecx+0x6],bl
300322e5:	jne    0x30032318
300322e7:	push   DWORD PTR [ebp+0x10]
300322ea:	lea    ecx,[ebp+0x8]
300322ed:	call   0x3001ba30
300322f2:	mov    DWORD PTR [ebp-0x4],ebx
300322f5:	push   DWORD PTR [ebp+0x8]
300322f8:	push   0x3002a680
300322fd:	push   0x30018514
30032302:	push   0x2
30032304:	call   0x3000536f
30032309:	mov    ecx,DWORD PTR [ebp+0x8]
3003230c:	lea    ecx,[ecx-0x10]
3003230f:	call   0x30004017
30032314:	jmp    0x30032318
30032316:	mov    bl,0x1
30032318:	mov    al,bl
3003231a:	call   0x3000119d
3003231f:	ret    0xc
30032322:	push   ebp
30032323:	mov    ebp,esp
30032325:	pop    ebp
30032326:	jmp    DWORD PTR ds:0x3004367c
3003232c:	push   ebp
3003232d:	mov    ebp,esp
3003232f:	pop    ebp
30032330:	jmp    DWORD PTR ds:0x30043680
30032336:	push   ebp
30032337:	mov    ebp,esp
30032339:	pop    ebp
3003233a:	jmp    DWORD PTR ds:0x30043684
30032340:	push   ebp
30032341:	mov    ebp,esp
30032343:	push   ecx
30032344:	push   esi
30032345:	push   edi
30032346:	xor    esi,esi
30032348:	push   esi
30032349:	lea    eax,[ebp-0x4]
3003234c:	push   eax
3003234d:	mov    edi,ecx
3003234f:	lea    eax,[ebp+0xc]
30032352:	push   eax
30032353:	push   DWORD PTR [edi+0x10]
30032356:	mov    ecx,0x208
3003235b:	push   ecx
3003235c:	push   DWORD PTR [ebp+0xc]
3003235f:	mov    DWORD PTR [ebp-0x4],ecx
30032362:	call   0x30032004
30032367:	mov    ecx,eax
30032369:	test   ecx,ecx
3003236b:	js     0x300323a0
3003236d:	mov    edx,DWORD PTR [ebp+0x8]
30032370:	test   edx,edx
30032372:	je     0x30032384
30032374:	mov    esi,edx
30032376:	push   ebx
30032377:	lea    ebx,[esi+0x1]
3003237a:	mov    al,BYTE PTR [esi]
3003237c:	inc    esi
3003237d:	test   al,al
3003237f:	jne    0x3003237a
30032381:	sub    esi,ebx
30032383:	pop    ebx
30032384:	mov    eax,DWORD PTR [edi+0xc]
30032387:	mov    eax,DWORD PTR [eax-0xc]
3003238a:	cmp    esi,eax
3003238c:	jbe    0x3003239e
3003238e:	add    eax,edx
30032390:	push   eax
30032391:	push   DWORD PTR [ebp-0x4]
30032394:	push   DWORD PTR [ebp+0xc]
30032397:	call   0x30031fc4
3003239c:	mov    ecx,eax
3003239e:	mov    eax,ecx
300323a0:	pop    edi
300323a1:	pop    esi
300323a2:	leave  
300323a3:	ret    0xc
300323a6:	push   esi
300323a7:	mov    esi,ecx
300323a9:	xor    edx,edx
300323ab:	mov    eax,DWORD PTR [esi]
300323ad:	push   edi
300323ae:	lea    ecx,[eax-0x10]
300323b1:	mov    edi,DWORD PTR [ecx]
300323b3:	cmp    DWORD PTR [ecx+0x4],edx
300323b6:	je     0x300323dc
300323b8:	cmp    DWORD PTR [ecx+0xc],edx
300323bb:	jge    0x300323cb
300323bd:	cmp    DWORD PTR [eax-0x8],edx
300323c0:	jl     0x300323df
300323c2:	mov    DWORD PTR [eax-0xc],edx
300323c5:	mov    eax,DWORD PTR [esi]
300323c7:	mov    BYTE PTR [eax],dl
300323c9:	jmp    0x300323dc
300323cb:	call   0x30004017
300323d0:	mov    eax,DWORD PTR [edi]
300323d2:	mov    ecx,edi
300323d4:	call   DWORD PTR [eax+0xc]
300323d7:	add    eax,0x10
300323da:	mov    DWORD PTR [esi],eax
300323dc:	pop    edi
300323dd:	pop    esi
300323de:	ret    
300323df:	push   0x80070057
300323e4:	call   0x3002ae0b
300323e9:	int3   
300323ea:	push   ebp
300323eb:	mov    ebp,esp
300323ed:	push   esi
300323ee:	mov    esi,DWORD PTR [ebp+0x8]
300323f1:	push   edi
300323f2:	mov    edi,ecx
300323f4:	mov    edx,DWORD PTR [edi]
300323f6:	sub    edx,0x10
300323f9:	mov    ecx,DWORD PTR [edx]
300323fb:	cmp    DWORD PTR [edx+0x8],esi
300323fe:	jge    0x3003241c
30032400:	test   esi,esi
30032402:	jle    0x3003241c
30032404:	mov    eax,DWORD PTR [ecx]
30032406:	push   0x1
30032408:	push   esi
30032409:	push   edx
3003240a:	call   DWORD PTR [eax+0x8]
3003240d:	test   eax,eax
3003240f:	je     0x3003241c
30032411:	add    eax,0x10
30032414:	mov    DWORD PTR [edi],eax
30032416:	pop    edi
30032417:	pop    esi
30032418:	pop    ebp
30032419:	ret    0x4
3003241c:	call   0x3002bcb8
30032421:	int3   
30032422:	push   esi
30032423:	mov    esi,DWORD PTR [ecx+0x4]
30032426:	cmp    esi,0x2
30032429:	jge    0x3003242f
3003242b:	xor    eax,eax
3003242d:	pop    esi
3003242e:	ret    
3003242f:	mov    eax,0xff
30032434:	xor    ecx,ecx
30032436:	cdq    
30032437:	idiv   esi
30032439:	inc    ecx
3003243a:	test   eax,eax
3003243c:	jg     0x30032436
3003243e:	mov    eax,ecx
30032440:	pop    esi
30032441:	ret    
30032442:	push   ebp
30032443:	mov    ebp,esp
30032445:	sub    esp,0x14
30032448:	push   esi
30032449:	push   edi
3003244a:	mov    esi,ecx
3003244c:	call   0x30032422
30032451:	mov    edi,eax
30032453:	mov    eax,DWORD PTR [ebp+0x8]
30032456:	mov    DWORD PTR [ebp-0x10],edi
30032459:	test   eax,eax
3003245b:	je     0x300324e1
30032461:	cmp    DWORD PTR [ebp+0xc],0x0
30032465:	je     0x300324e1
30032467:	cmp    DWORD PTR [esi+0x4],0x2
3003246b:	jl     0x300324e1
3003246d:	push   eax
3003246e:	call   DWORD PTR ds:0x3004520c
30032474:	cdq    
30032475:	idiv   edi
30032477:	mov    DWORD PTR [ebp-0x14],eax
3003247a:	test   edx,edx
3003247c:	jne    0x300324e1
3003247e:	mov    DWORD PTR [ebp-0x8],edx
30032481:	test   eax,eax
30032483:	jle    0x300324e3
30032485:	and    DWORD PTR [ebp-0x4],edx
30032488:	mov    ecx,DWORD PTR [ebp+0xc]
3003248b:	push   ebx
3003248c:	xor    ebx,ebx
3003248e:	and    DWORD PTR [ebp-0xc],ebx
30032491:	test   edi,edi
30032493:	jle    0x300324d0
30032495:	mov    edx,DWORD PTR [ebp-0xc]
30032498:	imul   ebx,DWORD PTR [esi+0x4]
3003249c:	xor    ecx,ecx
3003249e:	cmp    DWORD PTR [esi+0x4],ecx
300324a1:	jle    0x300324be
300324a3:	mov    eax,DWORD PTR [ebp-0x4]
300324a6:	mov    edi,DWORD PTR [ebp+0x8]
300324a9:	add    eax,edx
300324ab:	mov    al,BYTE PTR [eax+edi*1]
300324ae:	mov    edi,DWORD PTR [esi]
300324b0:	cmp    BYTE PTR [edi+ecx*1],al
300324b3:	mov    edi,DWORD PTR [ebp-0x10]
300324b6:	je     0x300324c0
300324b8:	inc    ecx
300324b9:	cmp    ecx,DWORD PTR [esi+0x4]
300324bc:	jl     0x300324ae
300324be:	xor    ecx,ecx
300324c0:	add    ebx,ecx
300324c2:	inc    edx
300324c3:	cmp    edx,edi
300324c5:	jl     0x30032498
300324c7:	mov    edx,DWORD PTR [ebp-0x8]
300324ca:	mov    eax,DWORD PTR [ebp-0x14]
300324cd:	mov    ecx,DWORD PTR [ebp+0xc]
300324d0:	add    DWORD PTR [ebp-0x4],edi
300324d3:	mov    BYTE PTR [edx+ecx*1],bl
300324d6:	inc    edx
300324d7:	mov    DWORD PTR [ebp-0x8],edx
300324da:	cmp    edx,eax
300324dc:	jl     0x3003248c
300324de:	pop    ebx
300324df:	jmp    0x300324e3
300324e1:	xor    eax,eax
300324e3:	pop    edi
300324e4:	pop    esi
300324e5:	leave  
300324e6:	ret    0x8
300324e9:	push   ebp
300324ea:	mov    ebp,esp
300324ec:	push   ecx
300324ed:	mov    eax,ecx
300324ef:	mov    DWORD PTR [ebp-0x4],eax
300324f2:	cmp    DWORD PTR [eax],0x0
300324f5:	jne    0x30032501
300324f7:	mov    eax,0x8000ffff
300324fc:	jmp    0x30032586
30032501:	push   ebx
30032502:	mov    ebx,DWORD PTR [ebp+0xc]
30032505:	test   ebx,ebx
30032507:	jne    0x30032510
30032509:	mov    eax,0x80004003
3003250e:	jmp    0x30032585
30032510:	push   esi
30032511:	push   edi
30032512:	xor    edi,edi
30032514:	push   edi
30032515:	push   edi
30032516:	push   edi
30032517:	lea    ecx,[ebp+0xc]
3003251a:	push   ecx
3003251b:	push   edi
3003251c:	push   edi
3003251d:	push   edi
3003251e:	push   edi
3003251f:	push   edi
30032520:	push   edi
30032521:	push   edi
30032522:	push   DWORD PTR [eax]
30032524:	call   DWORD PTR ds:0x30045078
3003252a:	mov    esi,eax
3003252c:	test   esi,esi
3003252e:	jne    0x30032576
30032530:	push   DWORD PTR [ebp+0xc]
30032533:	push   edi
30032534:	call   DWORD PTR ds:0x300454f0
3003253a:	mov    edi,eax
3003253c:	test   edi,edi
3003253e:	jne    0x30032547
30032540:	mov    eax,0x8007000e
30032545:	jmp    0x30032583
30032547:	inc    DWORD PTR [ebp+0xc]
3003254a:	xor    eax,eax
3003254c:	push   eax
3003254d:	push   eax
3003254e:	push   eax
3003254f:	push   eax
30032550:	lea    eax,[ebp+0xc]
30032553:	push   eax
30032554:	mov    eax,DWORD PTR [ebp-0x4]
30032557:	push   edi
30032558:	push   DWORD PTR [ebp+0x8]
3003255b:	push   DWORD PTR [eax]
3003255d:	call   DWORD PTR ds:0x30045040
30032563:	mov    esi,eax
30032565:	test   esi,esi
30032567:	jne    0x3003256d
30032569:	mov    DWORD PTR [ebx],edi
3003256b:	jmp    0x30032581
3003256d:	push   edi
3003256e:	call   DWORD PTR ds:0x300454e8
30032574:	test   esi,esi
30032576:	jle    0x30032581
30032578:	movzx  esi,si
3003257b:	or     esi,0x80070000
30032581:	mov    eax,esi
30032583:	pop    edi
30032584:	pop    esi
30032585:	pop    ebx
30032586:	leave  
30032587:	ret    0xc
3003258a:	push   0x10
3003258c:	mov    eax,0x30040e30
30032591:	call   0x3000116a
30032596:	mov    eax,edx
30032598:	mov    DWORD PTR [ebp-0x18],eax
3003259b:	mov    esi,ecx
3003259d:	mov    DWORD PTR [ebp-0x1c],esi
300325a0:	test   esi,esi
300325a2:	je     0x300326e3
300325a8:	cmp    DWORD PTR [ebp+0x8],0x0
300325ac:	je     0x300326e3
300325b2:	test   eax,eax
300325b4:	je     0x300326e3
300325ba:	push   eax
300325bb:	lea    ecx,[ebp-0x10]
300325be:	call   0x30001488
300325c3:	xor    ebx,ebx
300325c5:	mov    DWORD PTR [ebp-0x4],ebx
300325c8:	mov    DWORD PTR [ebp-0x14],ebx
300325cb:	push   0x300326f0
300325d0:	lea    ecx,[ebp-0x10]
300325d3:	mov    BYTE PTR [ebp-0x4],0x1
300325d7:	call   0x300062d8
300325dc:	test   eax,eax
300325de:	jns    0x300325e6
300325e0:	push   eax
300325e1:	call   0x3002ae0b
300325e6:	push   esi
300325e7:	lea    ecx,[ebp-0x10]
300325ea:	call   0x300062d8
300325ef:	test   eax,eax
300325f1:	js     0x300325e0
300325f3:	mov    edi,DWORD PTR [ebp-0x10]
300325f6:	push   0x20019
300325fb:	push   edi
300325fc:	push   0x80000002
30032601:	lea    ecx,[ebp-0x14]
30032604:	call   0x300061a4
30032609:	mov    esi,eax
3003260b:	test   esi,esi
3003260d:	js     0x30032636
3003260f:	lea    eax,[ebp-0x10]
30032612:	push   eax
30032613:	push   0x30032714
30032618:	lea    ecx,[ebp-0x14]
3003261b:	mov    DWORD PTR [ebp-0x10],ebx
3003261e:	call   0x3000bc14
30032623:	mov    eax,DWORD PTR [ebp-0x10]
30032626:	test   eax,eax
30032628:	je     0x3003262d
3003262a:	movzx  ebx,WORD PTR [eax]
3003262d:	push   eax
3003262e:	call   DWORD PTR ds:0x300454e8
30032634:	jmp    0x300326ac
30032636:	push   DWORD PTR [ebp-0x18]
30032639:	lea    ecx,[ebp-0x10]
3003263c:	call   0x3000ba0d
30032641:	push   0x30032728
30032646:	lea    ecx,[ebp-0x10]
30032649:	call   0x300062d8
3003264e:	test   eax,eax
30032650:	js     0x300325e0
30032652:	mov    edi,DWORD PTR [ebp-0x10]
30032655:	push   0x20019
3003265a:	push   edi
3003265b:	push   0x80000002
30032660:	lea    ecx,[ebp-0x14]
30032663:	call   0x300061a4
30032668:	mov    esi,eax
3003266a:	test   esi,esi
3003266c:	js     0x300326d0
3003266e:	lea    eax,[ebp-0x10]
30032671:	push   eax
30032672:	push   DWORD PTR [ebp-0x1c]
30032675:	lea    ecx,[ebp-0x14]
30032678:	mov    DWORD PTR [ebp-0x10],ebx
3003267b:	call   0x3000bc14
30032680:	mov    esi,DWORD PTR [ebp-0x10]
30032683:	mov    DWORD PTR [ebp-0x1c],eax
30032686:	test   esi,esi
30032688:	je     0x300326a2
3003268a:	push   0x2c
3003268c:	push   esi
3003268d:	call   DWORD PTR ds:0x30045348
30032693:	pop    ecx
30032694:	pop    ecx
30032695:	test   eax,eax
30032697:	je     0x3003269f
30032699:	movzx  ebx,WORD PTR [eax+0x2]
3003269d:	jmp    0x300326a2
3003269f:	movzx  ebx,WORD PTR [esi]
300326a2:	push   esi
300326a3:	call   DWORD PTR ds:0x300454e8
300326a9:	mov    esi,DWORD PTR [ebp-0x1c]
300326ac:	test   esi,esi
300326ae:	js     0x300326d0
300326b0:	movzx  ecx,bx
300326b3:	cmp    ecx,0x2a
300326b6:	je     0x300326c7
300326b8:	xor    eax,eax
300326ba:	cmp    ecx,0x31
300326bd:	mov    ecx,DWORD PTR [ebp+0x8]
300326c0:	sete   al
300326c3:	mov    DWORD PTR [ecx],eax
300326c5:	jmp    0x300326d0
300326c7:	mov    eax,DWORD PTR [ebp+0x8]
300326ca:	mov    DWORD PTR [eax],0x2
300326d0:	lea    ecx,[ebp-0x14]
300326d3:	call   0x300014b2
300326d8:	push   edi
300326d9:	call   DWORD PTR ds:0x300454e8
300326df:	mov    eax,esi
300326e1:	jmp    0x300326e8
300326e3:	mov    eax,0x80070057
300326e8:	call   0x3000119d
300326ed:	ret    0x4
300326f0:	pop    esp
300326f1:	add    BYTE PTR [ecx+0x0],al
300326f4:	jo     0x300326f6
300326f6:	jo     0x300326f8
300326f8:	inc    ebx
300326f9:	add    BYTE PTR [edi+0x0],ch
300326fc:	ins    DWORD PTR es:[edi],dx
300326fd:	add    BYTE PTR [ebp+0x0],ch
30032700:	popa   
30032701:	add    BYTE PTR [esi+0x0],ch
30032704:	add    BYTE PTR fs:[eax+eax*1+0x69],cl
30032709:	add    BYTE PTR [esi+0x0],ch
3003270c:	add    BYTE PTR gs:[eax+eax*1+0x0],bl
30032711:	add    BYTE PTR [eax+0x72004190],dl
30032717:	add    BYTE PTR [edi+0x0],ah
3003271a:	jne    0x3003271c
3003271c:	ins    DWORD PTR es:[edi],dx
3003271d:	add    BYTE PTR [ebp+0x0],ah
30032720:	outs   dx,BYTE PTR ds:[esi]
30032721:	add    BYTE PTR [eax+eax*1+0x73],dh
30032725:	add    BYTE PTR [eax],al
30032727:	add    BYTE PTR [eax+eax*1+0x41],bl
3003272b:	add    BYTE PTR [eax+0x0],dh
3003272e:	jo     0x30032730
30032730:	inc    ebx
30032731:	add    BYTE PTR [edi+0x0],ch
30032734:	ins    DWORD PTR es:[edi],dx
30032735:	add    BYTE PTR [ebp+0x0],ch
30032738:	popa   
30032739:	add    BYTE PTR [esi+0x0],ch
3003273c:	add    BYTE PTR fs:[eax+eax*1+0x69],cl
30032741:	add    BYTE PTR [esi+0x0],ch
30032744:	add    BYTE PTR gs:[eax],al
30032747:	add    BYTE PTR [ebx+0x56],dl
3003274a:	push   edi
3003274b:	mov    edi,ecx
3003274d:	xor    ebx,ebx
3003274f:	mov    esi,DWORD PTR [edi+0x24]
30032752:	test   esi,esi
30032754:	je     0x3003276b
30032756:	mov    eax,esi
30032758:	mov    esi,DWORD PTR [esi+0x18]
3003275b:	push   eax
3003275c:	call   0x3001694a
30032761:	pop    ecx
30032762:	mov    eax,esi
30032764:	test   esi,esi
30032766:	jne    0x30032758
30032768:	mov    DWORD PTR [edi+0x24],ebx
3003276b:	cmp    DWORD PTR [edi+0x20],ebx
3003276e:	je     0x30032797
30032770:	mov    ecx,DWORD PTR [edi+0x8]
30032773:	lea    edx,[ecx+0x2]
30032776:	mov    ax,WORD PTR [ecx]
30032779:	add    ecx,0x2
3003277c:	cmp    ax,bx
3003277f:	jne    0x30032776
30032781:	push   DWORD PTR [edi+0x8]
30032784:	sub    ecx,edx
30032786:	sar    ecx,1
30032788:	lea    eax,[ecx+0x1]
3003278b:	push   eax
3003278c:	push   DWORD PTR [edi+0x20]
3003278f:	call   0x30006ce1
30032794:	add    esp,0xc
30032797:	pop    edi
30032798:	pop    esi
30032799:	pop    ebx
3003279a:	ret    
3003279b:	push   0x21c
300327a0:	mov    eax,0x30040e84
300327a5:	call   0x300045c8
300327aa:	mov    edi,edx
300327ac:	mov    DWORD PTR [ebp-0x220],ecx
300327b2:	mov    ebx,DWORD PTR [ebp+0x8]
300327b5:	xor    eax,eax
300327b7:	mov    esi,eax
300327b9:	mov    DWORD PTR [ebp-0x21c],ebx
300327bf:	mov    DWORD PTR [ebp-0x218],esi
300327c5:	push   0xfffffff5
300327c7:	mov    DWORD PTR [ebp-0x4],eax
300327ca:	call   DWORD PTR ds:0x30045278
300327d0:	mov    DWORD PTR [ebp-0x228],eax
300327d6:	test   eax,eax
300327d8:	je     0x3003280f
300327da:	cmp    eax,0xffffffff
300327dd:	je     0x3003280f
300327df:	cmp    eax,0x7
300327e2:	je     0x3003280f
300327e4:	xor    eax,eax
300327e6:	mov    DWORD PTR [ebp-0x214],eax
300327ec:	push   0x2
300327ee:	lea    eax,[ebp-0x214]
300327f4:	push   eax
300327f5:	push   0x30032930
300327fa:	call   DWORD PTR ds:0x30045274
30032800:	xor    eax,eax
30032802:	cmp    WORD PTR [ebp-0x214],0x31
3003280a:	sete   al
3003280d:	jmp    0x30032811
3003280f:	xor    eax,eax
30032811:	test   eax,eax
30032813:	je     0x300328db
30032819:	test   ebx,ebx
3003281b:	je     0x30032920
30032821:	mov    ecx,ebx
30032823:	xor    ebx,ebx
30032825:	lea    edx,[ecx+0x2]
30032828:	mov    ax,WORD PTR [ecx]
3003282b:	add    ecx,0x2
3003282e:	cmp    ax,bx
30032831:	jne    0x30032828
30032833:	sub    ecx,edx
30032835:	sar    ecx,1
30032837:	lea    eax,[ecx+0x1]
3003283a:	cdq    
3003283b:	mov    edi,eax
3003283d:	shld   edx,edi,0x1
30032841:	add    edi,edi
30032843:	mov    eax,edi
30032845:	add    eax,0x80000000
3003284a:	adc    edx,ebx
3003284c:	mov    DWORD PTR [ebp-0x220],edx
30032852:	jne    0x300328b6
30032854:	cmp    eax,0xffffffff
30032857:	ja     0x300328b6
30032859:	cmp    edi,0x400
3003285f:	jg     0x30032877
30032861:	mov    ecx,edi
30032863:	call   0x3002d9d3
30032868:	test   al,al
3003286a:	je     0x30032877
3003286c:	mov    eax,edi
3003286e:	call   0x3000618e
30032873:	mov    ebx,esp
30032875:	jmp    0x3003288b
30032877:	push   edi
30032878:	lea    ecx,[ebp-0x218]
3003287e:	call   0x3002d994
30032883:	mov    esi,DWORD PTR [ebp-0x218]
30032889:	mov    ebx,eax
3003288b:	test   ebx,ebx
3003288d:	je     0x300328b4
3003288f:	xor    eax,eax
30032891:	push   eax
30032892:	push   eax
30032893:	push   edi
30032894:	push   ebx
30032895:	push   0xffffffff
30032897:	push   DWORD PTR [ebp-0x21c]
3003289d:	mov    BYTE PTR [ebx],al
3003289f:	push   eax
300328a0:	push   0x3
300328a2:	call   DWORD PTR ds:0x30045214
300328a8:	mov    edi,eax
300328aa:	neg    edi
300328ac:	sbb    edi,edi
300328ae:	and    edi,ebx
300328b0:	xor    ebx,ebx
300328b2:	jmp    0x300328b8
300328b4:	xor    ebx,ebx
300328b6:	mov    edi,ebx
300328b8:	test   edi,edi
300328ba:	je     0x3003291c
300328bc:	push   ebx
300328bd:	lea    eax,[ebp-0x220]
300328c3:	push   eax
300328c4:	push   edi
300328c5:	call   DWORD PTR ds:0x3004520c
300328cb:	push   eax
300328cc:	push   edi
300328cd:	push   DWORD PTR [ebp-0x228]
300328d3:	call   DWORD PTR ds:0x3004527c
300328d9:	jmp    0x3003291c
300328db:	xor    eax,eax
300328dd:	push   0x100
300328e2:	mov    WORD PTR [ebp-0x210],ax
300328e9:	lea    eax,[ebp-0x210]
300328ef:	push   eax
300328f0:	push   edi
300328f1:	push   DWORD PTR [ebp-0x220]
300328f7:	call   DWORD PTR ds:0x3004543c
300328fd:	push   0x10
300328ff:	lea    eax,[ebp-0x210]
30032905:	push   eax
30032906:	push   ebx
30032907:	xor    eax,eax
30032909:	push   eax
3003290a:	call   DWORD PTR ds:0x30045440
30032910:	jmp    0x3003291c
30032912:	push   esi
30032913:	mov    esi,DWORD PTR [esi]
30032915:	call   DWORD PTR ds:0x300452b4
3003291b:	pop    ecx
3003291c:	test   esi,esi
3003291e:	jne    0x30032912
30032920:	lea    esp,[ebp-0x238]
30032926:	call   0x300045fe
3003292b:	ret    0x4
3003292e:	nop
3003292f:	nop
30032930:	jbe    0x30032932
30032932:	jae    0x30032934
30032934:	arpl   WORD PTR [eax],ax
30032936:	outs   dx,DWORD PTR ds:[esi]
30032937:	add    BYTE PTR [esi+0x0],ch
3003293a:	jae    0x3003293c
3003293c:	outs   dx,DWORD PTR ds:[esi]
3003293d:	add    BYTE PTR [eax+eax*1+0x65],ch
30032941:	add    BYTE PTR [edi+0x0],ch
30032944:	jne    0x30032946
30032946:	je     0x30032948
30032948:	jo     0x3003294a
3003294a:	jne    0x3003294c
3003294c:	je     0x3003294e
3003294e:	add    BYTE PTR [eax],al
30032950:	push   0xc
30032952:	mov    eax,0x30040bf0
30032957:	call   0x3000116a
3003295c:	cmp    DWORD PTR [ebp+0xc],0x0
30032960:	je     0x300329ea
30032966:	cmp    DWORD PTR [ebp+0x8],0x0
3003296a:	je     0x300329ea
3003296c:	xor    edi,edi
3003296e:	mov    DWORD PTR [ebp-0x10],edi
30032971:	push   edx
30032972:	push   ecx
30032973:	lea    ecx,[ebp-0x10]
30032976:	mov    DWORD PTR [ebp-0x4],edi
30032979:	call   0x300054b7
3003297e:	mov    esi,DWORD PTR [ebp-0x10]
30032981:	test   esi,esi
30032983:	je     0x300329df
30032985:	mov    edi,DWORD PTR [ebp+0x8]
30032988:	xor    edx,edx
3003298a:	lea    ecx,[edi+0x2]
3003298d:	mov    ax,WORD PTR [edi]
30032990:	add    edi,0x2
30032993:	cmp    ax,dx
30032996:	jne    0x3003298d
30032998:	sub    edi,ecx
3003299a:	push   esi
3003299b:	sar    edi,1
3003299d:	call   DWORD PTR ds:0x300454ec
300329a3:	add    eax,edi
300329a5:	push   eax
300329a6:	lea    ecx,[ebp-0x14]
300329a9:	mov    DWORD PTR [ebp-0x18],eax
300329ac:	call   0x300332d4
300329b1:	mov    edi,DWORD PTR [ebp-0x14]
300329b4:	test   edi,edi
300329b6:	jne    0x300329be
300329b8:	xor    eax,eax
300329ba:	mov    edi,eax
300329bc:	jmp    0x300329d8
300329be:	push   DWORD PTR [ebp+0x8]
300329c1:	push   esi
300329c2:	push   DWORD PTR [ebp-0x18]
300329c5:	push   edi
300329c6:	call   0x3001169c
300329cb:	mov    eax,DWORD PTR [ebp+0xc]
300329ce:	add    esp,0x10
300329d1:	mov    DWORD PTR [eax],edi
300329d3:	xor    edi,edi
300329d5:	inc    edi
300329d6:	xor    eax,eax
300329d8:	push   eax
300329d9:	call   DWORD PTR ds:0x300454e8
300329df:	push   esi
300329e0:	call   DWORD PTR ds:0x300454e8
300329e6:	mov    eax,edi
300329e8:	jmp    0x300329ec
300329ea:	xor    eax,eax
300329ec:	call   0x3000119d
300329f1:	ret    0x8
300329f4:	push   0xc
300329f6:	mov    eax,0x30040bf0
300329fb:	call   0x3000116a
30032a00:	cmp    DWORD PTR [ebp+0x10],0x0
30032a04:	jne    0x30032a0d
30032a06:	xor    eax,eax
30032a08:	jmp    0x30032acf
30032a0d:	xor    ebx,ebx
30032a0f:	mov    DWORD PTR [ebp-0x10],ebx
30032a12:	push   edx
30032a13:	push   ecx
30032a14:	lea    ecx,[ebp-0x10]
30032a17:	mov    DWORD PTR [ebp-0x4],ebx
30032a1a:	call   0x300054b7
30032a1f:	mov    esi,DWORD PTR [ebp-0x10]
30032a22:	test   esi,esi
30032a24:	jne    0x30032a2d
30032a26:	mov    edi,ebx
30032a28:	jmp    0x30032ac6
30032a2d:	mov    eax,DWORD PTR [ebp+0x8]
30032a30:	test   eax,eax
30032a32:	je     0x30032a4a
30032a34:	mov    edi,eax
30032a36:	lea    ecx,[edi+0x2]
30032a39:	mov    ax,WORD PTR [edi]
30032a3c:	add    edi,0x2
30032a3f:	cmp    ax,bx
30032a42:	jne    0x30032a39
30032a44:	sub    edi,ecx
30032a46:	sar    edi,1
30032a48:	jmp    0x30032a4c
30032a4a:	mov    edi,ebx
30032a4c:	mov    ebx,DWORD PTR [ebp+0xc]
30032a4f:	xor    edx,edx
30032a51:	test   ebx,ebx
30032a53:	je     0x30032a69
30032a55:	lea    ecx,[ebx+0x2]
30032a58:	mov    ax,WORD PTR [ebx]
30032a5b:	add    ebx,0x2
30032a5e:	cmp    ax,dx
30032a61:	jne    0x30032a58
30032a63:	sub    ebx,ecx
30032a65:	sar    ebx,1
30032a67:	jmp    0x30032a6b
30032a69:	mov    ebx,edx
30032a6b:	push   esi
30032a6c:	call   DWORD PTR ds:0x300454ec
30032a72:	add    eax,ebx
30032a74:	add    eax,edi
30032a76:	push   eax
30032a77:	lea    ecx,[ebp-0x14]
30032a7a:	mov    DWORD PTR [ebp-0x18],eax
30032a7d:	call   0x300332d4
30032a82:	mov    edi,DWORD PTR [ebp-0x14]
30032a85:	test   edi,edi
30032a87:	jne    0x30032a8f
30032a89:	xor    eax,eax
30032a8b:	mov    edi,eax
30032a8d:	jmp    0x30032abf
30032a8f:	mov    eax,DWORD PTR [ebp+0xc]
30032a92:	mov    edx,0x30006ce8
30032a97:	test   eax,eax
30032a99:	jne    0x30032a9d
30032a9b:	mov    eax,edx
30032a9d:	mov    ecx,DWORD PTR [ebp+0x8]
30032aa0:	test   ecx,ecx
30032aa2:	jne    0x30032aa6
30032aa4:	mov    ecx,edx
30032aa6:	push   eax
30032aa7:	push   ecx
30032aa8:	push   esi
30032aa9:	push   DWORD PTR [ebp-0x18]
30032aac:	push   edi
30032aad:	call   0x3001169c
30032ab2:	mov    eax,DWORD PTR [ebp+0x10]
30032ab5:	add    esp,0x14
30032ab8:	mov    DWORD PTR [eax],edi
30032aba:	xor    edi,edi
30032abc:	inc    edi
30032abd:	xor    eax,eax
30032abf:	push   eax
30032ac0:	call   DWORD PTR ds:0x300454e8
30032ac6:	push   esi
30032ac7:	call   DWORD PTR ds:0x300454e8
30032acd:	mov    eax,edi
30032acf:	call   0x3000119d
30032ad4:	ret    0xc
30032ad7:	push   0x22c
30032adc:	mov    eax,0x30040f82
30032ae1:	call   0x300045c8
30032ae6:	mov    ebx,DWORD PTR [ebp+0xc]
30032ae9:	xor    edx,edx
30032aeb:	mov    DWORD PTR [ebp-0x234],ebx
30032af1:	mov    DWORD PTR [ebp-0x22c],edx
30032af7:	mov    DWORD PTR [ebp-0x4],edx
30032afa:	mov    DWORD PTR [ebp-0x224],edx
30032b00:	lea    eax,[ebp-0x224]
30032b06:	push   eax
30032b07:	push   edx
30032b08:	push   ecx
30032b09:	mov    BYTE PTR [ebp-0x4],0x1
30032b0d:	call   DWORD PTR ds:0x300454fc
30032b13:	mov    ecx,DWORD PTR [ebp-0x224]
30032b19:	mov    esi,eax
30032b1b:	test   esi,esi
30032b1d:	js     0x30032d0c
30032b23:	test   ecx,ecx
30032b25:	je     0x30032d0c
30032b2b:	mov    eax,DWORD PTR [ecx]
30032b2d:	lea    edx,[ebp-0x22c]
30032b33:	push   edx
30032b34:	push   0x3002a740
30032b39:	push   ecx
30032b3a:	call   DWORD PTR [eax]
30032b3c:	mov    esi,eax
30032b3e:	test   esi,esi
30032b40:	js     0x30032d06
30032b46:	mov    eax,DWORD PTR [ebp-0x22c]
30032b4c:	test   eax,eax
30032b4e:	je     0x30032d06
30032b54:	and    DWORD PTR [ebp-0x228],0x0
30032b5b:	and    DWORD PTR [ebp-0x220],0x0
30032b62:	lea    edx,[ebp-0x220]
30032b68:	mov    BYTE PTR [ebp-0x4],0x2
30032b6c:	mov    ecx,DWORD PTR [eax]
30032b6e:	push   edx
30032b6f:	push   eax
30032b70:	call   DWORD PTR [ecx+0x38]
30032b73:	mov    esi,eax
30032b75:	mov    DWORD PTR [ebp-0x238],esi
30032b7b:	test   esi,esi
30032b7d:	js     0x30032bba
30032b7f:	mov    eax,DWORD PTR [ebp-0x220]
30032b85:	test   eax,eax
30032b87:	je     0x30032bc0
30032b89:	mov    ecx,DWORD PTR [eax]
30032b8b:	push   eax
30032b8c:	call   DWORD PTR [ecx+0x9c]
30032b92:	mov    eax,DWORD PTR [ebp-0x220]
30032b98:	lea    edx,[ebp-0x228]
30032b9e:	mov    ecx,DWORD PTR [eax]
30032ba0:	push   edx
30032ba1:	push   eax
30032ba2:	call   DWORD PTR [ecx+0x6c]
30032ba5:	cmp    DWORD PTR [ebp-0x228],0x0
30032bac:	je     0x30032bba
30032bae:	push   DWORD PTR [ebp-0x228]
30032bb4:	call   DWORD PTR ds:0x30045484
30032bba:	mov    eax,DWORD PTR [ebp-0x220]
30032bc0:	mov    BYTE PTR [ebp-0x4],0x1
30032bc4:	test   eax,eax
30032bc6:	je     0x30032bce
30032bc8:	mov    ecx,DWORD PTR [eax]
30032bca:	push   eax
30032bcb:	call   DWORD PTR [ecx+0x8]
30032bce:	mov    edi,DWORD PTR [ebx]
30032bd0:	and    DWORD PTR [ebp-0x230],0x0
30032bd7:	xor    al,al
30032bd9:	mov    BYTE PTR [ebp-0x219],al
30032bdf:	test   edi,edi
30032be1:	je     0x30032d06
30032be7:	mov    esi,DWORD PTR [ebp-0x230]
30032bed:	mov    ebx,DWORD PTR [edi+0x18]
30032bf0:	push   0x104
30032bf5:	push   DWORD PTR [edi]
30032bf7:	lea    eax,[ebp-0x218]
30032bfd:	push   eax
30032bfe:	call   DWORD PTR ds:0x30045350
30032c04:	add    esp,0xc
30032c07:	test   eax,eax
30032c09:	je     0x30032ce9
30032c0f:	lea    eax,[ebp-0x218]
30032c15:	push   eax
30032c16:	lea    ecx,[ebp-0x230]
30032c1c:	call   0x30001488
30032c21:	push   0x30032d38
30032c26:	lea    ecx,[ebp-0x228]
30032c2c:	mov    BYTE PTR [ebp-0x4],0x3
30032c30:	call   0x3002bde5
30032c35:	and    DWORD PTR [ebp-0x220],0x0
30032c3c:	lea    eax,[ebp-0x218]
30032c42:	push   eax
30032c43:	mov    BYTE PTR [ebp-0x4],0x5
30032c47:	call   DWORD PTR ds:0x300451ec
30032c4d:	cmp    eax,0xffffffff
30032c50:	je     0x30032cb0
30032c52:	test   al,0x10
30032c54:	jne    0x30032cb0
30032c56:	mov    eax,DWORD PTR [ebp-0x22c]
30032c5c:	lea    edx,[ebp-0x220]
30032c62:	mov    ecx,DWORD PTR [eax]
30032c64:	push   edx
30032c65:	push   DWORD PTR [ebp-0x230]
30032c6b:	push   DWORD PTR [ebp-0x228]
30032c71:	push   eax
30032c72:	call   DWORD PTR [ecx+0x64]
30032c75:	test   eax,eax
30032c77:	js     0x30032cb0
30032c79:	test   esi,esi
30032c7b:	jne    0x30032c87
30032c7d:	mov    eax,DWORD PTR [ebp-0x234]
30032c83:	mov    DWORD PTR [eax],ebx
30032c85:	jmp    0x30032c8a
30032c87:	mov    DWORD PTR [esi+0x18],ebx
30032c8a:	push   edi
30032c8b:	call   0x3001694a
30032c90:	mov    eax,DWORD PTR [ebp-0x220]
30032c96:	pop    ecx
30032c97:	mov    ecx,DWORD PTR [eax]
30032c99:	push   0xffffffff
30032c9b:	push   eax
30032c9c:	call   DWORD PTR [ecx+0x24]
30032c9f:	mov    eax,DWORD PTR [ebp-0x220]
30032ca5:	push   eax
30032ca6:	mov    ecx,DWORD PTR [eax]
30032ca8:	call   DWORD PTR [ecx+0x9c]
30032cae:	jmp    0x30032cb9
30032cb0:	mov    BYTE PTR [ebp-0x219],0x1
30032cb7:	mov    esi,edi
30032cb9:	mov    BYTE PTR [ebp-0x4],0x4
30032cbd:	mov    eax,DWORD PTR [ebp-0x220]
30032cc3:	mov    edi,ebx
30032cc5:	test   eax,eax
30032cc7:	je     0x30032ccf
30032cc9:	mov    ecx,DWORD PTR [eax]
30032ccb:	push   eax
30032ccc:	call   DWORD PTR [ecx+0x8]
30032ccf:	push   DWORD PTR [ebp-0x228]
30032cd5:	mov    ebx,DWORD PTR ds:0x300454e8
30032cdb:	call   ebx
30032cdd:	mov    BYTE PTR [ebp-0x4],0x1
30032ce1:	push   DWORD PTR [ebp-0x230]
30032ce7:	call   ebx
30032ce9:	test   edi,edi
30032ceb:	jne    0x30032bed
30032cf1:	mov    al,BYTE PTR [ebp-0x219]
30032cf7:	mov    esi,DWORD PTR [ebp-0x238]
30032cfd:	test   al,al
30032cff:	je     0x30032d06
30032d01:	mov    esi,0x80004005
30032d06:	mov    ecx,DWORD PTR [ebp-0x224]
30032d0c:	mov    BYTE PTR [ebp-0x4],0x0
30032d10:	test   ecx,ecx
30032d12:	je     0x30032d1a
30032d14:	mov    eax,DWORD PTR [ecx]
30032d16:	push   ecx
30032d17:	call   DWORD PTR [eax+0x8]
30032d1a:	or     DWORD PTR [ebp-0x4],0xffffffff
30032d1e:	mov    eax,DWORD PTR [ebp-0x22c]
30032d24:	test   eax,eax
30032d26:	je     0x30032d2e
30032d28:	mov    ecx,DWORD PTR [eax]
30032d2a:	push   eax
30032d2b:	call   DWORD PTR [ecx+0x8]
30032d2e:	mov    eax,esi
30032d30:	call   0x300045fe
30032d35:	ret    0x8
30032d38:	jnp    0x30032d71
30032d3a:	ss xor eax,0x30374131
30032d40:	xor    ebp,DWORD PTR ds:0x35453630
30032d46:	sub    eax,0x31443131
30032d4b:	sub    eax,0x44424538
30032d50:	sub    eax,0x30413030
30032d55:	inc    ebx
30032d56:	cmp    DWORD PTR [eax],esi
30032d58:	inc    esi
30032d59:	xor    dh,BYTE PTR [esi]
30032d5b:	inc    ebp
30032d5c:	inc    ecx
30032d5d:	jge    0x30032d5f
30032d5f:	push   0x1c
30032d61:	mov    eax,0x30040f00
30032d66:	call   0x3000116a
30032d6b:	cmp    DWORD PTR [ebp+0xc],0x0
30032d6f:	mov    esi,0x80070057
30032d74:	je     0x30032f3d
30032d7a:	xor    ebx,ebx
30032d7c:	mov    DWORD PTR [ebp-0x18],ebx
30032d7f:	mov    DWORD PTR [ebp-0x4],ebx
30032d82:	mov    DWORD PTR [ebp-0x14],ebx
30032d85:	mov    DWORD PTR [ebp-0x20],ebx
30032d88:	mov    DWORD PTR [ebp-0x10],ebx
30032d8b:	mov    DWORD PTR [ebp-0x28],ebx
30032d8e:	lea    eax,[ebp-0x14]
30032d91:	push   eax
30032d92:	push   ebx
30032d93:	push   ecx
30032d94:	mov    BYTE PTR [ebp-0x4],0x4
30032d98:	call   DWORD PTR ds:0x300454fc
30032d9e:	mov    esi,eax
30032da0:	test   esi,esi
30032da2:	js     0x30032ee0
30032da8:	mov    ecx,DWORD PTR [ebp-0x14]
30032dab:	test   ecx,ecx
30032dad:	je     0x30032ee0
30032db3:	mov    eax,DWORD PTR [ecx]
30032db5:	lea    edx,[ebp-0x18]
30032db8:	push   edx
30032db9:	push   0x3002a740
30032dbe:	push   ecx
30032dbf:	call   DWORD PTR [eax]
30032dc1:	mov    esi,eax
30032dc3:	test   esi,esi
30032dc5:	js     0x30032ee0
30032dcb:	cmp    DWORD PTR [ebp-0x18],ebx
30032dce:	je     0x30032ee0
30032dd4:	mov    eax,DWORD PTR [ebp-0x14]
30032dd7:	lea    edx,[ebp-0x20]
30032dda:	mov    ecx,DWORD PTR [eax]
30032ddc:	push   edx
30032ddd:	push   0x30032f68
30032de2:	push   eax
30032de3:	call   DWORD PTR [ecx]
30032de5:	mov    esi,eax
30032de7:	test   esi,esi
30032de9:	js     0x30032ee0
30032def:	mov    eax,DWORD PTR [ebp-0x20]
30032df2:	test   eax,eax
30032df4:	je     0x30032ee0
30032dfa:	mov    ecx,DWORD PTR [eax]
30032dfc:	lea    edx,[ebp-0x10]
30032dff:	push   edx
30032e00:	push   0x30032f58
30032e05:	push   0x30032f48
30032e0a:	push   eax
30032e0b:	call   DWORD PTR [ecx+0xc]
30032e0e:	mov    esi,eax
30032e10:	test   esi,esi
30032e12:	js     0x30032ee0
30032e18:	cmp    DWORD PTR [ebp-0x10],ebx
30032e1b:	je     0x30032ee0
30032e21:	mov    DWORD PTR [ebp-0x24],ebx
30032e24:	mov    DWORD PTR [ebp-0x1c],ebx
30032e27:	mov    BYTE PTR [ebp-0x4],0x5
30032e2b:	mov    eax,DWORD PTR [ebp-0x18]
30032e2e:	lea    edx,[ebp-0x1c]
30032e31:	mov    ecx,DWORD PTR [eax]
30032e33:	push   edx
30032e34:	push   eax
30032e35:	call   DWORD PTR [ecx+0x38]
30032e38:	test   eax,eax
30032e3a:	js     0x30032e67
30032e3c:	mov    eax,DWORD PTR [ebp-0x1c]
30032e3f:	test   eax,eax
30032e41:	je     0x30032e67
30032e43:	mov    ecx,DWORD PTR [eax]
30032e45:	push   eax
30032e46:	call   DWORD PTR [ecx+0x9c]
30032e4c:	mov    eax,DWORD PTR [ebp-0x1c]
30032e4f:	lea    edx,[ebp-0x24]
30032e52:	mov    ecx,DWORD PTR [eax]
30032e54:	push   edx
30032e55:	push   eax
30032e56:	call   DWORD PTR [ecx+0x6c]
30032e59:	cmp    DWORD PTR [ebp-0x24],ebx
30032e5c:	je     0x30032e67
30032e5e:	push   DWORD PTR [ebp-0x24]
30032e61:	call   DWORD PTR ds:0x30045484
30032e67:	mov    eax,DWORD PTR [ebp-0x10]
30032e6a:	lea    edx,[ebp-0x28]
30032e6d:	mov    ecx,DWORD PTR [eax]
30032e6f:	push   edx
30032e70:	push   DWORD PTR [ebp+0xc]
30032e73:	push   eax
30032e74:	call   DWORD PTR [ecx+0x10]
30032e77:	mov    BYTE PTR [ebp-0x4],0x4
30032e7b:	mov    ecx,DWORD PTR [ebp-0x1c]
30032e7e:	mov    esi,eax
30032e80:	test   ecx,ecx
30032e82:	je     0x30032e8a
30032e84:	mov    edx,DWORD PTR [ecx]
30032e86:	push   ecx
30032e87:	call   DWORD PTR [edx+0x8]
30032e8a:	mov    BYTE PTR [ebp-0x4],0x3
30032e8e:	mov    eax,DWORD PTR [ebp-0x28]
30032e91:	test   eax,eax
30032e93:	je     0x30032e9b
30032e95:	mov    ecx,DWORD PTR [eax]
30032e97:	push   eax
30032e98:	call   DWORD PTR [ecx+0x8]
30032e9b:	mov    BYTE PTR [ebp-0x4],0x2
30032e9f:	mov    eax,DWORD PTR [ebp-0x10]
30032ea2:	test   eax,eax
30032ea4:	je     0x30032eac
30032ea6:	mov    ecx,DWORD PTR [eax]
30032ea8:	push   eax
30032ea9:	call   DWORD PTR [ecx+0x8]
30032eac:	mov    BYTE PTR [ebp-0x4],0x1
30032eb0:	mov    eax,DWORD PTR [ebp-0x20]
30032eb3:	test   eax,eax
30032eb5:	je     0x30032ebd
30032eb7:	mov    ecx,DWORD PTR [eax]
30032eb9:	push   eax
30032eba:	call   DWORD PTR [ecx+0x8]
30032ebd:	mov    BYTE PTR [ebp-0x4],bl
30032ec0:	mov    eax,DWORD PTR [ebp-0x14]
30032ec3:	test   eax,eax
30032ec5:	je     0x30032ecd
30032ec7:	mov    ecx,DWORD PTR [eax]
30032ec9:	push   eax
30032eca:	call   DWORD PTR [ecx+0x8]
30032ecd:	or     DWORD PTR [ebp-0x4],0xffffffff
30032ed1:	mov    eax,DWORD PTR [ebp-0x18]
30032ed4:	test   eax,eax
30032ed6:	je     0x30032f3d
30032ed8:	mov    ecx,DWORD PTR [eax]
30032eda:	push   eax
30032edb:	call   DWORD PTR [ecx+0x8]
30032ede:	jmp    0x30032f3d
30032ee0:	mov    BYTE PTR [ebp-0x4],0x3
30032ee4:	mov    eax,DWORD PTR [ebp-0x28]
30032ee7:	test   eax,eax
30032ee9:	je     0x30032ef1
30032eeb:	mov    ecx,DWORD PTR [eax]
30032eed:	push   eax
30032eee:	call   DWORD PTR [ecx+0x8]
30032ef1:	mov    BYTE PTR [ebp-0x4],0x2
30032ef5:	mov    eax,DWORD PTR [ebp-0x10]
30032ef8:	test   eax,eax
30032efa:	je     0x30032f02
30032efc:	mov    ecx,DWORD PTR [eax]
30032efe:	push   eax
30032eff:	call   DWORD PTR [ecx+0x8]
30032f02:	mov    BYTE PTR [ebp-0x4],0x1
30032f06:	mov    eax,DWORD PTR [ebp-0x20]
30032f09:	test   eax,eax
30032f0b:	je     0x30032f13
30032f0d:	mov    ecx,DWORD PTR [eax]
30032f0f:	push   eax
30032f10:	call   DWORD PTR [ecx+0x8]
30032f13:	mov    BYTE PTR [ebp-0x4],bl
30032f16:	mov    ecx,DWORD PTR [ebp-0x14]
30032f19:	test   ecx,ecx
30032f1b:	je     0x30032f23
30032f1d:	mov    eax,DWORD PTR [ecx]
30032f1f:	push   ecx
30032f20:	call   DWORD PTR [eax+0x8]
30032f23:	or     DWORD PTR [ebp-0x4],0xffffffff
30032f27:	mov    eax,DWORD PTR [ebp-0x18]
30032f2a:	test   eax,eax
30032f2c:	je     0x30032f34
30032f2e:	mov    ecx,DWORD PTR [eax]
30032f30:	push   eax
30032f31:	call   DWORD PTR [ecx+0x8]
30032f34:	test   esi,esi
30032f36:	js     0x30032f3d
30032f38:	mov    esi,0x80004005
30032f3d:	mov    eax,esi
30032f3f:	call   0x3000119d
30032f44:	ret    0x8
30032f47:	nop
30032f48:	jne    0x30032fa8
30032f4a:	adc    DWORD PTR [edi-0x62],esi
30032f4d:	out    dx,eax
30032f4e:	xor    BYTE PTR [edi-0x6e],cl
30032f51:	repnz aas 
30032f53:	out    0x8b,eax
30032f55:	retf   0xcff6
30032f58:	mov    esi,0x7ae20e53
30032f5d:	mov    ecx,DWORD PTR [edi-0x3f5851c0]
30032f63:	stos   BYTE PTR es:[edi],al
30032f64:	(bad)  
30032f65:	sar    DWORD PTR [ecx+0x5140c146],1
30032f6b:	ins    DWORD PTR es:[edi],dx
30032f6c:	ss je  0x30032f3d
30032f6f:	adc    DWORD PTR [eax+0xaa0034],eax
30032f75:	pusha  
30032f76:	or     edx,edi
30032f78:	push   ebp
30032f79:	mov    ebp,esp
30032f7b:	push   ecx
30032f7c:	push   ebx
30032f7d:	push   esi
30032f7e:	mov    ebx,ecx
30032f80:	push   edi
30032f81:	mov    esi,edx
30032f83:	test   ebx,ebx
30032f85:	je     0x30033023
30032f8b:	test   esi,esi
30032f8d:	je     0x30033023
30032f93:	xor    eax,eax
30032f95:	mov    edi,esi
30032f97:	stos   DWORD PTR es:[edi],eax
30032f98:	stos   DWORD PTR es:[edi],eax
30032f99:	stos   DWORD PTR es:[edi],eax
30032f9a:	push   0x2f
30032f9c:	stos   DWORD PTR es:[edi],eax
30032f9d:	pop    eax
30032f9e:	push   eax
30032f9f:	push   ebx
30032fa0:	call   DWORD PTR ds:0x30045348
30032fa6:	mov    edi,eax
30032fa8:	pop    ecx
30032fa9:	pop    ecx
30032faa:	test   edi,edi
30032fac:	je     0x30033023
30032fae:	xor    eax,eax
30032fb0:	push   ebx
30032fb1:	mov    ebx,DWORD PTR ds:0x30045344
30032fb7:	mov    WORD PTR [edi],ax
30032fba:	call   ebx
30032fbc:	pop    ecx
30032fbd:	push   0x2f
30032fbf:	mov    WORD PTR [esi+0x2],ax
30032fc3:	pop    ecx
30032fc4:	mov    WORD PTR [edi],cx
30032fc7:	movzx  eax,WORD PTR [esi+0x2]
30032fcb:	xor    edx,edx
30032fcd:	inc    edx
30032fce:	cmp    ax,dx
30032fd1:	jb     0x30033023
30032fd3:	cmp    eax,0xc
30032fd6:	ja     0x30033023
30032fd8:	lea    eax,[edi+0x2]
30032fdb:	push   ecx
30032fdc:	push   eax
30032fdd:	mov    DWORD PTR [ebp-0x4],eax
30032fe0:	call   DWORD PTR ds:0x30045348
30032fe6:	mov    edi,eax
30032fe8:	pop    ecx
30032fe9:	pop    ecx
30032fea:	test   edi,edi
30032fec:	je     0x30033023
30032fee:	push   DWORD PTR [ebp-0x4]
30032ff1:	xor    eax,eax
30032ff3:	mov    WORD PTR [edi],ax
30032ff6:	call   ebx
30032ff8:	pop    ecx
30032ff9:	mov    WORD PTR [esi+0x6],ax
30032ffd:	push   0x2f
30032fff:	pop    eax
30033000:	mov    WORD PTR [edi],ax
30033003:	movzx  ecx,WORD PTR [esi+0x6]
30033007:	xor    eax,eax
30033009:	inc    eax
3003300a:	cmp    cx,ax
3003300d:	jb     0x30033023
3003300f:	cmp    ecx,0x1f
30033012:	ja     0x30033023
30033014:	lea    ecx,[edi+0x2]
30033017:	push   ecx
30033018:	call   ebx
3003301a:	mov    WORD PTR [esi],ax
3003301d:	xor    eax,eax
3003301f:	pop    ecx
30033020:	inc    eax
30033021:	jmp    0x30033025
30033023:	xor    eax,eax
30033025:	pop    edi
30033026:	pop    esi
30033027:	pop    ebx
30033028:	leave  
30033029:	ret    
3003302a:	push   ebp
3003302b:	mov    ebp,esp
3003302d:	sub    esp,0x34
30033030:	mov    eax,ds:0x30043050
30033035:	xor    eax,ebp
30033037:	mov    DWORD PTR [ebp-0x4],eax
3003303a:	lea    edx,[ebp-0x24]
3003303d:	call   0x30032f78
30033042:	test   eax,eax
30033044:	jne    0x30033049
30033046:	inc    eax
30033047:	jmp    0x30033086
30033049:	lea    eax,[ebp-0x14]
3003304c:	push   eax
3003304d:	call   DWORD PTR ds:0x30045224
30033053:	lea    eax,[ebp-0x2c]
30033056:	push   eax
30033057:	lea    eax,[ebp-0x24]
3003305a:	push   eax
3003305b:	call   DWORD PTR ds:0x30045228
30033061:	lea    eax,[ebp-0x34]
30033064:	push   eax
30033065:	lea    eax,[ebp-0x14]
30033068:	push   eax
30033069:	call   DWORD PTR ds:0x30045228
3003306f:	lea    eax,[ebp-0x34]
30033072:	push   eax
30033073:	lea    eax,[ebp-0x2c]
30033076:	push   eax
30033077:	call   DWORD PTR ds:0x3004528c
3003307d:	xor    ecx,ecx
3003307f:	test   eax,eax
30033081:	sets   cl
30033084:	mov    eax,ecx
30033086:	mov    ecx,DWORD PTR [ebp-0x4]
30033089:	xor    ecx,ebp
3003308b:	call   0x3000115c
30033090:	leave  
30033091:	ret    
30033092:	push   ebp
30033093:	mov    ebp,esp
30033095:	push   ecx
30033096:	push   ebx
30033097:	push   esi
30033098:	push   edi
30033099:	mov    edi,edx
3003309b:	xor    eax,eax
3003309d:	mov    ebx,ecx
3003309f:	mov    DWORD PTR [ebp-0x4],eax
300330a2:	test   edi,edi
300330a4:	je     0x300330a8
300330a6:	mov    DWORD PTR [edi],eax
300330a8:	mov    esi,DWORD PTR [ebp+0x8]
300330ab:	test   esi,esi
300330ad:	je     0x300330b1
300330af:	mov    DWORD PTR [esi],eax
300330b1:	test   ebx,ebx
300330b3:	je     0x30033124
300330b5:	lea    edx,[ecx+0x2]
300330b8:	mov    ax,WORD PTR [ecx]
300330bb:	add    ecx,0x2
300330be:	cmp    ax,WORD PTR [ebp-0x4]
300330c2:	jne    0x300330b8
300330c4:	sub    ecx,edx
300330c6:	sar    ecx,1
300330c8:	lea    eax,[ecx+0x1]
300330cb:	push   eax
300330cc:	push   ebx
300330cd:	call   DWORD PTR ds:0x30045358
300330d3:	push   0x3b
300330d5:	push   ebx
300330d6:	call   DWORD PTR ds:0x30045348
300330dc:	add    esp,0x10
300330df:	test   eax,eax
300330e1:	je     0x300330eb
300330e3:	xor    ecx,ecx
300330e5:	mov    WORD PTR [eax],cx
300330e8:	add    eax,0x2
300330eb:	test   edi,edi
300330ed:	je     0x300330f1
300330ef:	mov    DWORD PTR [edi],ebx
300330f1:	test   esi,esi
300330f3:	je     0x30033124
300330f5:	test   eax,eax
300330f7:	je     0x30033124
300330f9:	push   0x3003312c
300330fe:	push   eax
300330ff:	call   DWORD PTR ds:0x3004531c
30033105:	pop    ecx
30033106:	pop    ecx
30033107:	test   eax,eax
30033109:	je     0x30033124
3003310b:	add    eax,0x10
3003310e:	push   0x3b
30033110:	push   eax
30033111:	mov    DWORD PTR [esi],eax
30033113:	call   DWORD PTR ds:0x30045348
30033119:	pop    ecx
3003311a:	pop    ecx
3003311b:	test   eax,eax
3003311d:	je     0x30033124
3003311f:	xor    ecx,ecx
30033121:	mov    WORD PTR [eax],cx
30033124:	pop    edi
30033125:	pop    esi
30033126:	pop    ebx
30033127:	leave  
30033128:	ret    0x4
3003312b:	nop
3003312c:	add    BYTE PTR gs:[eax+0x0],bh
30033130:	jo     0x30033132
30033132:	add    BYTE PTR fs:[ecx+0x0],ah
30033136:	je     0x30033138
30033138:	add    BYTE PTR gs:[edx],bh
3003313b:	add    BYTE PTR [eax],al
3003313d:	add    BYTE PTR [eax+0x44d243d],al
30033143:	xor    BYTE PTR [eax],al
30033145:	push   esi
30033146:	mov    esi,ecx
30033148:	jne    0x3003317a
3003314a:	push   0x3001afe0
3003314f:	call   DWORD PTR ds:0x3004516c
30033155:	test   eax,eax
30033157:	je     0x3003316c
30033159:	push   0x30033190
3003315e:	push   eax
3003315f:	call   DWORD PTR ds:0x30045178
30033165:	mov    ds:0x30044d20,eax
3003316a:	jmp    0x30033171
3003316c:	mov    eax,ds:0x30044d20
30033171:	mov    BYTE PTR ds:0x30044d24,0x1
30033178:	jmp    0x3003317f
3003317a:	mov    eax,ds:0x30044d20
3003317f:	test   eax,eax
30033181:	je     0x30033188
30033183:	push   esi
30033184:	call   eax
30033186:	pop    esi
30033187:	ret    
30033188:	mov    eax,0x80004005
3003318d:	pop    esi
3003318e:	ret    
3003318f:	nop
30033190:	inc    edi
30033191:	gs je  0x300331d7
30033194:	jne    0x30033208
30033196:	jb     0x300331fd
30033198:	outs   dx,BYTE PTR ds:[esi]
30033199:	je     0x300331eb
3003319b:	jb     0x3003320c
3003319d:	arpl   WORD PTR [ebp+0x73],sp
300331a0:	jae    0x300331e7
300331a2:	js     0x30033214
300331a4:	ins    BYTE PTR es:[edi],dx
300331a5:	imul   esp,DWORD PTR [ebx+0x69],0x70704174
300331ac:	push   ebp
300331ad:	jae    0x30033214
300331af:	jb     0x300331fe
300331b1:	outs   dx,DWORD PTR ds:[esi]
300331b2:	fs gs ins BYTE PTR es:[edi],dx
300331b5:	dec    ecx
300331b6:	inc    esp
300331b7:	add    BYTE PTR [eax+0x20],ch
300331ba:	add    DWORD PTR [eax],eax
300331bc:	add    BYTE PTR [eax+0x30040dd2],bh
300331c2:	call   0x300045c8
300331c7:	xor    ebx,ebx
300331c9:	push   0x110
300331ce:	lea    eax,[ebp-0x120]
300331d4:	push   ebx
300331d5:	push   eax
300331d6:	mov    esi,ebx
300331d8:	call   0x300011b1
300331dd:	add    esp,0xc
300331e0:	lea    eax,[ebp-0x124]
300331e6:	push   eax
300331e7:	mov    DWORD PTR [ebp-0x124],0x114
300331f1:	call   DWORD PTR ds:0x30045290
300331f7:	cmp    DWORD PTR [ebp-0x120],0x6
300331fe:	ja     0x30033213
30033200:	jne    0x3003329c
30033206:	cmp    DWORD PTR [ebp-0x11c],0x1
3003320d:	jb     0x3003329c
30033213:	mov    DWORD PTR [ebp-0x12c],ebx
30033219:	lea    ecx,[ebp-0x12c]
3003321f:	mov    DWORD PTR [ebp-0x4],ebx
30033222:	call   0x3003313e
30033227:	mov    esi,eax
30033229:	test   esi,esi
3003322b:	js     0x30033290
3003322d:	mov    DWORD PTR [ebp-0x128],ebx
30033233:	lea    eax,[ebp-0x128]
30033239:	push   eax
3003323a:	push   0x300332b4
3003323f:	push   0x1
30033241:	push   ebx
30033242:	push   0x300332a4
30033247:	mov    BYTE PTR [ebp-0x4],0x1
3003324b:	call   DWORD PTR ds:0x30045494
30033251:	mov    esi,eax
30033253:	test   esi,esi
30033255:	js     0x3003327d
30033257:	mov    eax,DWORD PTR [ebp-0x128]
3003325d:	push   DWORD PTR [ebp-0x12c]
30033263:	mov    ecx,DWORD PTR [eax]
30033265:	push   eax
30033266:	call   DWORD PTR [ecx+0xc]
30033269:	mov    esi,eax
3003326b:	test   esi,esi
3003326d:	js     0x3003327d
3003326f:	mov    eax,DWORD PTR [ebp-0x128]
30033275:	push   eax
30033276:	mov    ecx,DWORD PTR [eax]
30033278:	call   DWORD PTR [ecx+0x14]
3003327b:	mov    esi,eax
3003327d:	mov    BYTE PTR [ebp-0x4],bl
30033280:	mov    eax,DWORD PTR [ebp-0x128]
30033286:	test   eax,eax
30033288:	je     0x30033290
3003328a:	mov    ecx,DWORD PTR [eax]
3003328c:	push   eax
3003328d:	call   DWORD PTR [ecx+0x8]
30033290:	push   DWORD PTR [ebp-0x12c]
30033296:	call   DWORD PTR ds:0x300454b4
3003329c:	mov    eax,esi
3003329e:	call   0x300045fe
300332a3:	ret    
300332a4:	add    eax,DWORD PTR [eax-0x3f]
300332a7:	xchg   BYTE PTR [ebx+0x4d],ch
300332aa:	repz dec esi
300332ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
300332ad:	mov    ah,0x5
300332af:	push   es
300332b0:	cmp    bp,WORD PTR [esi]
300332b3:	push   0x12337d35
300332b8:	(bad)  
300332b9:	xchg   esp,eax
300332ba:	mov    al,ds:0x6ae7bc48
300332bf:	pushf  
300332c0:	imul   edx,esp,0x8b5600d6
300332c6:	icebp  
300332c7:	push   DWORD PTR [esi]
300332c9:	call   DWORD PTR ds:0x300454b4
300332cf:	and    DWORD PTR [esi],0x0
300332d2:	pop    esi
300332d3:	ret    
300332d4:	push   ebp
300332d5:	mov    ebp,esp
300332d7:	mov    eax,DWORD PTR [ebp+0x8]
300332da:	push   esi
300332db:	mov    esi,ecx
300332dd:	test   eax,eax
300332df:	js     0x30033303
300332e1:	jne    0x300332ed
300332e3:	and    DWORD PTR [esi],0x0
300332e6:	mov    eax,esi
300332e8:	pop    esi
300332e9:	pop    ebp
300332ea:	ret    0x4
300332ed:	push   eax
300332ee:	push   0x0
300332f0:	call   DWORD PTR ds:0x300454f0
300332f6:	mov    DWORD PTR [esi],eax
300332f8:	test   eax,eax
300332fa:	jne    0x300332e6
300332fc:	push   0x8007000e
30033301:	jmp    0x30033308
30033303:	push   0x80070057
30033308:	call   0x3002ae0b
3003330d:	int3   
3003330e:	push   ebp
3003330f:	mov    ebp,esp
30033311:	push   esi
30033312:	mov    esi,ecx
30033314:	call   0x300171c7
30033319:	test   BYTE PTR [ebp+0x8],0x1
3003331d:	je     0x30033327
3003331f:	push   esi
30033320:	call   DWORD PTR ds:0x300452ac
30033326:	pop    ecx
30033327:	mov    eax,esi
30033329:	pop    esi
3003332a:	pop    ebp
3003332b:	ret    0x4
3003332e:	push   ebp
3003332f:	mov    ebp,esp
30033331:	sub    esp,0x210
30033337:	mov    eax,ds:0x30043050
3003333c:	xor    eax,ebp
3003333e:	mov    DWORD PTR [ebp-0x4],eax
30033341:	push   ebx
30033342:	mov    ebx,DWORD PTR [ebp+0x8]
30033345:	push   esi
30033346:	xor    eax,eax
30033348:	push   edi
30033349:	mov    WORD PTR [ebp-0x20c],ax
30033350:	lea    eax,[ebp-0x20c]
30033356:	push   eax
30033357:	xor    eax,eax
30033359:	push   eax
3003335a:	push   eax
3003335b:	push   0x5
3003335d:	push   eax
3003335e:	mov    esi,ecx
30033360:	call   DWORD PTR ds:0x300455f8
30033366:	mov    edi,eax
30033368:	test   edi,edi
3003336a:	js     0x300333bf
3003336c:	lea    ecx,[ebp-0x210]
30033372:	call   0x300051c8
30033377:	mov    esi,DWORD PTR [esi+0x3c]
3003337a:	push   0x104
3003337f:	lea    ecx,[ebp-0x210]
30033385:	call   0x30004286
3003338a:	push   esi
3003338b:	lea    ecx,[ebp-0x20c]
30033391:	push   ecx
30033392:	push   eax
30033393:	call   DWORD PTR ds:0x30045644
30033399:	push   0xffffffff
3003339b:	lea    ecx,[ebp-0x210]
300333a1:	call   0x30006c8c
300333a6:	lea    eax,[ebp-0x210]
300333ac:	push   eax
300333ad:	mov    ecx,ebx
300333af:	call   0x300014c1
300333b4:	lea    ecx,[ebp-0x210]
300333ba:	call   0x300051a4
300333bf:	mov    ecx,DWORD PTR [ebp-0x4]
300333c2:	mov    eax,edi
300333c4:	pop    edi
300333c5:	pop    esi
300333c6:	xor    ecx,ebp
300333c8:	pop    ebx
300333c9:	call   0x3000115c
300333ce:	leave  
300333cf:	ret    0x4
300333d2:	push   ebp
300333d3:	mov    ebp,esp
300333d5:	push   ecx
300333d6:	test   BYTE PTR [ebp+0xc],0x30
300333da:	push   ebx
300333db:	push   esi
300333dc:	push   edi
300333dd:	mov    esi,ecx
300333df:	jne    0x300334ea
300333e5:	mov    edi,DWORD PTR [ebp+0x8]
300333e8:	test   edi,edi
300333ea:	je     0x300334ea
300333f0:	mov    ecx,edi
300333f2:	xor    ebx,ebx
300333f4:	lea    edx,[ecx+0x2]
300333f7:	mov    DWORD PTR [ebp+0x8],ebx
300333fa:	mov    ax,WORD PTR [ecx]
300333fd:	add    ecx,0x2
30033400:	cmp    ax,bx
30033403:	jne    0x300333fa
30033405:	sub    ecx,edx
30033407:	sar    ecx,1
30033409:	je     0x300334ea
3003340f:	mov    ebx,DWORD PTR [ebp+0x14]
30033412:	test   ebx,ebx
30033414:	je     0x300334ea
3003341a:	mov    ecx,ebx
3003341c:	lea    edx,[ecx+0x2]
3003341f:	mov    ax,WORD PTR [ecx]
30033422:	add    ecx,0x2
30033425:	cmp    ax,WORD PTR [ebp+0x8]
30033429:	jne    0x3003341f
3003342b:	sub    ecx,edx
3003342d:	sar    ecx,1
3003342f:	je     0x300334ea
30033435:	push   edi
30033436:	call   0x300042e4
3003343b:	pop    ecx
3003343c:	push   eax
3003343d:	push   edi
3003343e:	lea    ecx,[esi+0x34]
30033441:	call   0x3000416f
30033446:	push   ebx
30033447:	call   0x300042e4
3003344c:	pop    ecx
3003344d:	push   eax
3003344e:	push   ebx
3003344f:	lea    ecx,[esi+0x38]
30033452:	call   0x3000416f
30033457:	push   edi
30033458:	call   0x300042e4
3003345d:	pop    ecx
3003345e:	push   eax
3003345f:	push   edi
30033460:	lea    ecx,[esi+0x3c]
30033463:	call   0x3000416f
30033468:	mov    edi,DWORD PTR [ebp+0x1c]
3003346b:	test   edi,edi
3003346d:	je     0x30033480
3003346f:	push   edi
30033470:	call   0x300042e4
30033475:	pop    ecx
30033476:	push   eax
30033477:	push   edi
30033478:	lea    ecx,[esi+0x30]
3003347b:	call   0x3000416f
30033480:	mov    edi,DWORD PTR [ebp+0x18]
30033483:	xor    ebx,ebx
30033485:	mov    DWORD PTR [esi+0x18],ebx
30033488:	test   edi,edi
3003348a:	je     0x300334d7
3003348c:	push   edi
3003348d:	lea    ecx,[ebp+0x8]
30033490:	call   0x3000437e
30033495:	lea    ecx,[ebp+0x8]
30033498:	call   0x30018183
3003349d:	test   eax,eax
3003349f:	js     0x300334c2
300334a1:	push   DWORD PTR [ebp+0x8]
300334a4:	lea    ecx,[ebp+0x14]
300334a7:	call   0x300089ae
300334ac:	lea    eax,[ebp+0x14]
300334af:	push   eax
300334b0:	lea    ecx,[esi+0x28]
300334b3:	call   0x300014c1
300334b8:	lea    ecx,[ebp+0x14]
300334bb:	call   0x300051a4
300334c0:	jmp    0x300334cf
300334c2:	push   edi
300334c3:	xor    edx,edx
300334c5:	mov    ecx,0x300335a0
300334ca:	call   0x30033b4c
300334cf:	lea    ecx,[ebp+0x8]
300334d2:	call   0x300051a4
300334d7:	push   DWORD PTR [ebp+0xc]
300334da:	mov    ecx,esi
300334dc:	push   DWORD PTR [ebp+0x20]
300334df:	push   ebx
300334e0:	push   DWORD PTR [ebp+0x10]
300334e3:	call   0x3001a37d
300334e8:	jmp    0x3003350e
300334ea:	cmp    BYTE PTR ds:0x300430f1,0x0
300334f1:	mov    esi,0x80070057
300334f6:	je     0x3003350c
300334f8:	call   0x30033b12
300334fd:	mov    edx,DWORD PTR [eax]
300334ff:	push   esi
30033500:	push   0x30033518
30033505:	push   0x1
30033507:	mov    ecx,eax
30033509:	call   DWORD PTR [edx+0x4]
3003350c:	mov    eax,esi
3003350e:	pop    edi
3003350f:	pop    esi
30033510:	pop    ebx
30033511:	leave  
30033512:	ret    0x1c
30033515:	nop
30033516:	nop
30033517:	nop
30033518:	push   ebp
30033519:	add    BYTE PTR [esi+0x0],ch
3003351c:	jae    0x3003351e
3003351e:	jne    0x30033520
30033520:	jo     0x30033522
30033522:	jo     0x30033524
30033524:	outs   dx,DWORD PTR ds:[esi]
30033525:	add    BYTE PTR [edx+0x0],dh
30033528:	je     0x3003352a
3003352a:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
3003352f:	add    BYTE PTR [esi+0x0],ah
30033532:	ins    BYTE PTR es:[edi],dx
30033533:	add    BYTE PTR [ecx+0x0],ah
30033536:	add    BYTE PTR [bx+si],ah
30033539:	add    BYTE PTR [edi+0x0],ch
3003353c:	jb     0x3003353e
3003353e:	and    BYTE PTR [eax],al
30033540:	ins    DWORD PTR es:[edi],dx
30033541:	add    BYTE PTR [ecx+0x0],ch
30033544:	jae    0x30033546
30033546:	jae    0x30033548
30033548:	imul   eax,DWORD PTR [eax],0x67006e
3003354e:	and    BYTE PTR [eax],al
30033550:	popa   
30033551:	add    BYTE PTR [edx+0x0],dh
30033554:	add    BYTE PTR [di+0x0],dh
30033558:	ins    DWORD PTR es:[edi],dx
30033559:	add    BYTE PTR [ebp+0x0],ah
3003355c:	outs   dx,BYTE PTR ds:[esi]
3003355d:	add    BYTE PTR [eax+eax*1+0x20],dh
30033561:	add    BYTE PTR [esi+0x0],ah
30033564:	outs   dx,DWORD PTR ds:[esi]
30033565:	add    BYTE PTR [edx+0x0],dh
30033568:	and    BYTE PTR [eax],al
3003356a:	inc    edx
3003356b:	add    BYTE PTR [edi+0x0],ch
3003356e:	jne    0x30033570
30033570:	je     0x30033572
30033572:	imul   eax,DWORD PTR [eax],0x750071
30033578:	add    BYTE PTR gs:[eax],ah
3003357b:	add    BYTE PTR [eax+0x0],dl
3003357e:	imul   eax,DWORD PTR [eax],0x67
30033581:	add    BYTE PTR [eax+eax*1+0x65],al
30033585:	add    BYTE PTR [esi+0x0],ah
30033588:	dec    ebp
30033589:	add    BYTE PTR [ecx+0x0],ah
3003358c:	outs   dx,BYTE PTR ds:[esi]
3003358d:	add    BYTE PTR [ecx+0x0],ah
30033590:	add    BYTE PTR [di+0x0],ah
30033594:	ins    DWORD PTR es:[edi],dx
30033595:	add    BYTE PTR [ebp+0x0],ah
30033598:	outs   dx,BYTE PTR ds:[esi]
30033599:	add    BYTE PTR [eax+eax*1+0x0],dh
3003359d:	add    BYTE PTR [eax+0x6e004990],dl
300335a3:	add    BYTE PTR [esi+0x0],dh
300335a6:	popa   
300335a7:	add    BYTE PTR [eax+eax*1+0x69],ch
300335ab:	add    BYTE PTR [eax+eax*1+0x20],ah
300335af:	add    BYTE PTR [eax+0x0],dh
300335b2:	popa   
300335b3:	add    BYTE PTR [eax+eax*1+0x68],dh
300335b7:	add    BYTE PTR [eax],ah
300335b9:	add    BYTE PTR [ebx+0x0],dh
300335bc:	jo     0x300335be
300335be:	add    BYTE PTR gs:[ebx+0x0],ah
300335c2:	imul   eax,DWORD PTR [eax],0x690066
300335c8:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
300335cd:	add    BYTE PTR [esi+0x0],ah
300335d0:	outs   dx,DWORD PTR ds:[esi]
300335d1:	add    BYTE PTR [edx+0x0],dh
300335d4:	and    BYTE PTR [eax],al
300335d6:	popa   
300335d7:	add    BYTE PTR [eax+0x0],dh
300335da:	jo     0x300335dc
300335dc:	ins    BYTE PTR es:[edi],dx
300335dd:	add    BYTE PTR [ecx+0x0],ch
300335e0:	arpl   WORD PTR [eax],ax
300335e2:	popa   
300335e3:	add    BYTE PTR [eax+eax*1+0x69],dh
300335e7:	add    BYTE PTR [edi+0x0],ch
300335ea:	outs   dx,BYTE PTR ds:[esi]
300335eb:	add    BYTE PTR [eax],ah
300335ed:	add    BYTE PTR [edx+0x0],dh
300335f0:	outs   dx,DWORD PTR ds:[esi]
300335f1:	add    BYTE PTR [edi+0x0],ch
300335f4:	je     0x300335f6
300335f6:	and    BYTE PTR [eax],al
300335f8:	data16 add BYTE PTR [edi+0x0],ch
300335fc:	ins    BYTE PTR es:[edi],dx
300335fd:	add    BYTE PTR [eax+eax*1+0x65],ah
30033601:	add    BYTE PTR [edx+0x0],dh
30033604:	add    BYTE PTR [eax],al
30033606:	push   esi
30033607:	mov    esi,ecx
30033609:	mov    eax,DWORD PTR [esi]
3003360b:	call   DWORD PTR [eax+0x28]
3003360e:	test   al,al
30033610:	je     0x30033623
30033612:	mov    ecx,DWORD PTR [esi+0x4]
30033615:	mov    eax,DWORD PTR [ecx]
30033617:	call   DWORD PTR [eax+0x20]
3003361a:	test   al,al
3003361c:	je     0x30033623
3003361e:	xor    eax,eax
30033620:	inc    eax
30033621:	pop    esi
30033622:	ret    
30033623:	xor    eax,eax
30033625:	pop    esi
30033626:	ret    
30033627:	push   ebp
30033628:	mov    ebp,esp
3003362a:	and    esp,0xfffffff8
3003362d:	sub    esp,0xbc
30033633:	push   ebx
30033634:	push   esi
30033635:	mov    esi,ecx
30033637:	push   edi
30033638:	cmp    BYTE PTR [esi+0xe],0x0
3003363c:	je     0x30033645
3003363e:	xor    eax,eax
30033640:	jmp    0x300337c3
30033645:	cmp    BYTE PTR ds:0x300430f1,0x0
3003364c:	mov    BYTE PTR [esi+0xe],0x1
30033650:	je     0x30033667
30033652:	push   DWORD PTR [esi+0x98]
30033658:	xor    edx,edx
3003365a:	push   0x300337cc
3003365f:	push   0x3
30033661:	pop    ecx
30033662:	call   0x30033ac0
30033667:	lea    ecx,[esp+0x10]
3003366b:	call   0x300051c8
30033670:	lea    eax,[esp+0x10]
30033674:	push   eax
30033675:	lea    ecx,[esp+0xa4]
3003367c:	call   0x30034e94
30033681:	lea    eax,[esp+0xa0]
30033688:	push   eax
30033689:	lea    ecx,[esp+0x34]
3003368d:	call   0x3000b276
30033692:	xor    ebx,ebx
30033694:	lea    ecx,[esp+0x9c]
3003369b:	mov    DWORD PTR [esp+0x30],0x3000a1b8
300336a3:	mov    DWORD PTR [esp+0x94],esi
300336aa:	mov    BYTE PTR [esp+0x98],bl
300336b1:	call   0x300051c8
300336b6:	lea    edi,[esi+0x98]
300336bc:	mov    eax,DWORD PTR [edi]
300336be:	cmp    DWORD PTR [eax-0xc],ebx
300336c1:	je     0x3003379c
300336c7:	push   edi
300336c8:	lea    eax,[esp+0x60]
300336cc:	push   eax
300336cd:	mov    ecx,esi
300336cf:	call   0x3001b692
300336d4:	push   DWORD PTR [edi]
300336d6:	lea    ecx,[esp+0x34]
300336da:	call   0x3000ae78
300336df:	test   eax,eax
300336e1:	jns    0x30033707
300336e3:	cmp    BYTE PTR ds:0x300430f1,bl
300336e9:	je     0x300337a1
300336ef:	call   0x30033b12
300336f4:	mov    edx,DWORD PTR [eax]
300336f6:	push   0x30033810
300336fb:	push   0x3
300336fd:	mov    ecx,eax
300336ff:	call   DWORD PTR [edx+0x8]
30033702:	jmp    0x300337a1
30033707:	lea    ecx,[esp+0x30]
3003370b:	call   0x30009f91
30033710:	mov    edi,eax
30033712:	test   edi,edi
30033714:	js     0x300337a3
3003371a:	push   ecx
3003371b:	lea    ecx,[esp+0x1c]
3003371f:	call   0x3000704d
30033724:	lea    eax,[esp+0x18]
30033728:	add    esi,0x40
3003372b:	push   eax
3003372c:	mov    ecx,esi
3003372e:	call   0x3000c426
30033733:	mov    ecx,esi
30033735:	call   0x30004564
3003373a:	mov    eax,DWORD PTR [esp+0x18]
3003373e:	mov    DWORD PTR [esp+0x14],eax
30033742:	test   eax,eax
30033744:	je     0x30033791
30033746:	lea    eax,[esp+0x14]
3003374a:	push   eax
3003374b:	call   0x30008fa7
30033750:	push   eax
30033751:	lea    ecx,[esp+0x10]
30033755:	call   0x30004340
3003375a:	lea    ecx,[esp+0xc]
3003375e:	call   0x30008e3c
30033763:	mov    eax,DWORD PTR [esi]
30033765:	cmp    DWORD PTR [eax-0xc],ebx
30033768:	je     0x30033773
3003376a:	push   0x3b
3003376c:	mov    ecx,esi
3003376e:	call   0x3000c4fd
30033773:	mov    eax,DWORD PTR [esp+0xc]
30033777:	mov    ecx,esi
30033779:	push   DWORD PTR [eax-0xc]
3003377c:	push   eax
3003377d:	call   0x30008b64
30033782:	lea    ecx,[esp+0xc]
30033786:	call   0x300051a4
3003378b:	cmp    DWORD PTR [esp+0x14],ebx
3003378f:	jne    0x30033746
30033791:	lea    ecx,[esp+0x18]
30033795:	call   0x30007014
3003379a:	jmp    0x300337a3
3003379c:	mov    ebx,0x80070057
300337a1:	mov    edi,ebx
300337a3:	lea    ecx,[esp+0x30]
300337a7:	call   0x30034f9f
300337ac:	lea    ecx,[esp+0xa0]
300337b3:	call   0x30034f1f
300337b8:	lea    ecx,[esp+0x10]
300337bc:	call   0x300051a4
300337c1:	mov    eax,edi
300337c3:	pop    edi
300337c4:	pop    esi
300337c5:	pop    ebx
300337c6:	mov    esp,ebp
300337c8:	pop    ebp
300337c9:	ret    
300337ca:	nop
300337cb:	nop
300337cc:	dec    esp
300337cd:	add    BYTE PTR [edi+0x0],ch
300337d0:	outs   dx,DWORD PTR ds:[esi]
300337d1:	add    BYTE PTR [ebx+0x0],ch
300337d4:	imul   eax,DWORD PTR [eax],0x67006e
300337da:	and    BYTE PTR [eax],al
300337dc:	data16 add BYTE PTR [edi+0x0],ch
300337e0:	jb     0x300337e2
300337e2:	and    BYTE PTR [eax],al
300337e4:	ins    DWORD PTR es:[edi],dx
300337e5:	add    BYTE PTR [ecx+0x0],ah
300337e8:	jae    0x300337ea
300337ea:	je     0x300337ec
300337ec:	add    BYTE PTR gs:[edx+0x0],dh
300337f0:	and    BYTE PTR [eax],al
300337f2:	push   eax
300337f3:	add    BYTE PTR [ebx+0x0],ch
300337f6:	add    BYTE PTR [si+0x0],al
300337fa:	add    BYTE PTR gs:[esi+0x0],ah
300337fe:	and    BYTE PTR [eax],al
30033800:	data16 add BYTE PTR [ecx+0x0],ch
30033804:	ins    BYTE PTR es:[edi],dx
30033805:	add    BYTE PTR [ebp+0x0],ah
30033808:	add    BYTE PTR [eax],al
3003380a:	nop
3003380b:	nop
3003380c:	nop
3003380d:	nop
3003380e:	nop
3003380f:	nop
30033810:	push   ebp
30033811:	add    BYTE PTR [esi+0x0],ch
30033814:	popa   
30033815:	add    BYTE PTR [edx+0x0],ah
30033818:	ins    BYTE PTR es:[edi],dx
30033819:	add    BYTE PTR [ebp+0x0],ah
3003381c:	and    BYTE PTR [eax],al
3003381e:	je     0x30033820
30033820:	outs   dx,DWORD PTR ds:[esi]
30033821:	add    BYTE PTR [eax],ah
30033823:	add    BYTE PTR [esi+0x0],ah
30033826:	imul   eax,DWORD PTR [eax],0x64006e
3003382c:	and    BYTE PTR [eax],al
3003382e:	ins    DWORD PTR es:[edi],dx
3003382f:	add    BYTE PTR [ecx+0x0],ah
30033832:	jae    0x30033834
30033834:	je     0x30033836
30033836:	add    BYTE PTR gs:[edx+0x0],dh
3003383a:	and    BYTE PTR [eax],al
3003383c:	push   eax
3003383d:	add    BYTE PTR [ebx+0x0],ch
30033840:	add    BYTE PTR [si+0x0],al
30033844:	add    BYTE PTR gs:[esi+0x0],ah
30033848:	and    BYTE PTR [eax],al
3003384a:	data16 add BYTE PTR [ecx+0x0],ch
3003384e:	ins    BYTE PTR es:[edi],dx
3003384f:	add    BYTE PTR [ebp+0x0],ah
30033852:	add    BYTE PTR cs:[eax],ah
30033855:	add    BYTE PTR [ebp+0x0],dl
30033858:	jae    0x3003385a
3003385a:	imul   eax,DWORD PTR [eax],0x67006e
30033860:	and    BYTE PTR [eax],al
30033862:	add    BYTE PTR fs:[ebp+0x0],ah
30033866:	data16 add BYTE PTR [ecx+0x0],ah
3003386a:	jne    0x3003386c
3003386c:	ins    BYTE PTR es:[edi],dx
3003386d:	add    BYTE PTR [eax+eax*1+0x73],dh
30033871:	add    BYTE PTR [eax],al
30033873:	add    BYTE PTR [ebp-0x75],dl
30033876:	in     al,dx
30033877:	mov    eax,DWORD PTR [ebp+0x8]
3003387a:	fild   DWORD PTR [ebp+0x8]
3003387d:	test   eax,eax
3003387f:	jns    0x30033887
30033881:	fadd   DWORD PTR ds:0x3002a9cc
30033887:	fstp   DWORD PTR [ebp+0x8]
3003388a:	fld    DWORD PTR [ebp+0x8]
3003388d:	fdiv   DWORD PTR [ecx+0xc]
30033890:	call   0x300095d0
30033895:	cmp    eax,0xffffffff
30033898:	jbe    0x3003389d
3003389a:	or     eax,0xffffffff
3003389d:	xor    ecx,ecx
3003389f:	cmp    eax,0x11
300338a2:	jbe    0x300338ae
300338a4:	inc    ecx
300338a5:	cmp    eax,DWORD PTR [ecx*4+0x300338c0]
300338ac:	ja     0x300338a4
300338ae:	mov    ecx,DWORD PTR [ecx*4+0x300338c0]
300338b5:	cmp    ecx,0xffffffff
300338b8:	je     0x300338bc
300338ba:	mov    eax,ecx
300338bc:	pop    ebp
300338bd:	ret    0x4
300338c0:	adc    DWORD PTR [eax],eax
300338c2:	add    BYTE PTR [eax],al
300338c4:	pop    ss
300338c5:	add    BYTE PTR [eax],al
300338c7:	add    BYTE PTR ds:0x25000000,bl
300338cd:	add    BYTE PTR [eax],al
300338cf:	add    BYTE PTR [ecx],ch
300338d1:	add    BYTE PTR [eax],al
300338d3:	add    BYTE PTR ds:0x43000000,dh
300338d9:	add    BYTE PTR [eax],al
300338db:	add    BYTE PTR [ebx+0x0],dl
300338de:	add    BYTE PTR [eax],al
300338e0:	add    BYTE PTR [bx+si],al
300338e3:	add    BYTE PTR [ebx-0x5d000000],al
300338e9:	add    BYTE PTR [eax],al
300338eb:	add    bl,dl
300338ed:	add    BYTE PTR [eax],al
300338ef:	add    BYTE PTR [ecx],al
300338f1:	add    DWORD PTR [eax],eax
300338f3:	add    BYTE PTR [ebx+0x1],cl
300338f6:	add    BYTE PTR [eax],al
300338f8:	cdq    
300338f9:	add    DWORD PTR [eax],eax
300338fb:	add    BYTE PTR [ecx],cl
300338fd:	add    al,BYTE PTR [eax]
300338ff:	add    BYTE PTR [edi+0x35000002],al
30033905:	add    eax,DWORD PTR [eax]
30033907:	add    BYTE PTR [edi],al
30033909:	add    al,0x0
3003390b:	add    BYTE PTR [ebx],cl
3003390d:	add    eax,0x65b0000
30033912:	add    BYTE PTR [eax],al
30033914:	add    eax,0x1f000008
30033919:	or     al,BYTE PTR [eax]
3003391b:	add    BYTE PTR [ebx+0x300000c],dh
30033921:	adc    BYTE PTR [eax],al
30033923:	add    BYTE PTR [edi],ch
30033925:	adc    al,0x0
30033927:	add    BYTE PTR [ecx+0x19],bh
3003392a:	add    BYTE PTR [eax],al
3003392c:	adc    DWORD PTR [eax],esp
3003392e:	add    BYTE PTR [eax],al
30033930:	pop    ebx
30033931:	sub    BYTE PTR [eax],al
30033933:	add    bh,cl
30033935:	xor    al,BYTE PTR [eax]
30033937:	add    BYTE PTR [ebx],bl
30033939:	inc    eax
3003393a:	add    BYTE PTR [eax],al
3003393c:	mov    bh,0x50
3003393e:	add    BYTE PTR [eax],al
30033940:	mov    eax,ds:0x3000065
30033945:	add    BYTE PTR [eax],0x0
30033948:	push   ebx
30033949:	mov    eax,ds:0xcb350000
3003394e:	add    BYTE PTR [eax],al
30033950:	add    DWORD PTR [eax],eax
30033952:	add    DWORD PTR [eax],eax
30033954:	mov    eax,DWORD PTR [edx+0x1]
30033957:	add    BYTE PTR [ecx-0x6a],ah
3003395a:	add    DWORD PTR [eax],eax
3003395c:	sbb    eax,0x29000200
30033961:	test   DWORD PTR [edx],eax
30033963:	add    bl,al
30033965:	sub    al,0x3
30033967:	add    BYTE PTR [ebx],al
30033969:	add    BYTE PTR [eax+eax*1],al
3003396c:	das    
3003396d:	or     al,BYTE PTR ds:0x6599300
30033973:	add    BYTE PTR ds:0x53000800,dl
30033979:	adc    al,0xa
3003397b:	add    BYTE PTR [ebx],ah
3003397d:	mov    bl,0xc
3003397f:	add    BYTE PTR [edi],al
30033981:	add    BYTE PTR [eax],dl
30033983:	add    BYTE PTR [ebx+0x1f001428],dh
30033989:	sbb    WORD PTR [eax],ax
3003398c:	adc    DWORD PTR [eax],eax
3003398e:	and    BYTE PTR [eax],al
30033990:	push   ecx
30033991:	push   ecx
30033992:	sub    BYTE PTR [eax],al
30033994:	dec    ebx
30033996:	xor    al,BYTE PTR [eax]
30033998:	sldt   WORD PTR [eax+0x0]
3003399c:	lea    esp,[edx-0x67feffb0]
300339a2:	add    BYTE PTR gs:[ecx],cl
300339a5:	add    BYTE PTR [eax-0x5ebadf00],al
300339ab:	add    cl,bh
300339ad:	das    
300339ae:	retf   
300339af:	add    bh,bh
300339b1:	(bad)  
300339b2:	(bad)  
300339b3:	call   DWORD PTR [ebp-0x75]
300339b6:	in     al,dx
300339b7:	sub    esp,0xc
300339ba:	push   esi
300339bb:	push   edi
300339bc:	mov    edi,DWORD PTR [ebp+0x8]
300339bf:	mov    esi,ecx
300339c1:	mov    DWORD PTR [ebp-0xc],esi
300339c4:	test   edi,edi
300339c6:	jne    0x300339d2
300339c8:	push   DWORD PTR [esi+0x4]
300339cb:	call   0x30033874
300339d0:	mov    edi,eax
300339d2:	cmp    edi,DWORD PTR [esi+0x8]
300339d5:	je     0x30033a8f
300339db:	push   ebx
300339dc:	xor    ebx,ebx
300339de:	mov    DWORD PTR [ebp+0x8],ebx
300339e1:	cmp    DWORD PTR [esi],ebx
300339e3:	jne    0x300339f3
300339e5:	push   ebx
300339e6:	push   edi
300339e7:	mov    ecx,esi
300339e9:	call   0x300098e4
300339ee:	jmp    0x30033a8e
300339f3:	push   0x300430f0
300339f8:	xor    ecx,ecx
300339fa:	push   0x4
300339fc:	pop    edx
300339fd:	mov    eax,edi
300339ff:	mul    edx
30033a01:	seto   cl
30033a04:	neg    ecx
30033a06:	or     ecx,eax
30033a08:	push   ecx
30033a09:	call   0x3000975b
30033a0e:	pop    ecx
30033a0f:	pop    ecx
30033a10:	mov    ecx,eax
30033a12:	mov    DWORD PTR [ebp-0x4],ecx
30033a15:	test   ecx,ecx
30033a17:	je     0x30033a95
30033a19:	cmp    edi,0x3fffffff
30033a1f:	jbe    0x30033a28
30033a21:	push   0x80004005
30033a26:	jmp    0x30033a9a
30033a28:	mov    eax,edi
30033a2a:	shl    eax,0x2
30033a2d:	push   eax
30033a2e:	push   ebx
30033a2f:	push   ecx
30033a30:	call   0x300011b1
30033a35:	add    esp,0xc
30033a38:	cmp    DWORD PTR [esi+0x8],ebx
30033a3b:	jbe    0x30033a76
30033a3d:	mov    eax,DWORD PTR [esi]
30033a3f:	mov    eax,DWORD PTR [eax+ebx*4]
30033a42:	mov    DWORD PTR [ebp-0x8],eax
30033a45:	test   eax,eax
30033a47:	je     0x30033a6d
30033a49:	mov    esi,DWORD PTR [ebp-0x4]
30033a4c:	mov    ebx,eax
30033a4e:	mov    eax,DWORD PTR [ebx+0xc]
30033a51:	xor    edx,edx
30033a53:	div    edi
30033a55:	mov    ecx,DWORD PTR [ebx+0x8]
30033a58:	mov    eax,DWORD PTR [esi+edx*4]
30033a5b:	mov    DWORD PTR [ebx+0x8],eax
30033a5e:	mov    DWORD PTR [esi+edx*4],ebx
30033a61:	mov    ebx,ecx
30033a63:	test   ecx,ecx
30033a65:	jne    0x30033a4e
30033a67:	mov    esi,DWORD PTR [ebp-0xc]
30033a6a:	mov    ebx,DWORD PTR [ebp+0x8]
30033a6d:	inc    ebx
30033a6e:	mov    DWORD PTR [ebp+0x8],ebx
30033a71:	cmp    ebx,DWORD PTR [esi+0x8]
30033a74:	jb     0x30033a3d
30033a76:	push   DWORD PTR [esi]
30033a78:	call   DWORD PTR ds:0x300453d4
30033a7e:	mov    eax,DWORD PTR [ebp-0x4]
30033a81:	pop    ecx
30033a82:	mov    ecx,esi
30033a84:	mov    DWORD PTR [esi],eax
30033a86:	mov    DWORD PTR [esi+0x8],edi
30033a89:	call   0x30009619
30033a8e:	pop    ebx
30033a8f:	pop    edi
30033a90:	pop    esi
30033a91:	leave  
30033a92:	ret    0x4
30033a95:	push   0x8007000e
30033a9a:	call   0x3002ae0b
30033a9f:	int3   
30033aa0:	push   ebp
30033aa1:	mov    ebp,esp
30033aa3:	push   esi
30033aa4:	mov    esi,ecx
30033aa6:	call   0x3000eb1e
30033aab:	test   BYTE PTR [ebp+0x8],0x1
30033aaf:	je     0x30033ab9
30033ab1:	push   esi
30033ab2:	call   DWORD PTR ds:0x300452ac
30033ab8:	pop    ecx
30033ab9:	mov    eax,esi
30033abb:	pop    esi
30033abc:	pop    ebp
30033abd:	ret    0x4
30033ac0:	push   ebp
30033ac1:	mov    ebp,esp
30033ac3:	push   esi
30033ac4:	mov    esi,DWORD PTR [ebp+0xc]
30033ac7:	push   edi
30033ac8:	mov    edi,edx
30033aca:	test   edi,edi
30033acc:	jne    0x30033ae4
30033ace:	test   esi,esi
30033ad0:	jne    0x30033afb
30033ad2:	call   0x30033b12
30033ad7:	push   DWORD PTR [ebp+0x8]
30033ada:	mov    edx,DWORD PTR [eax]
30033adc:	push   ecx
30033add:	mov    ecx,eax
30033adf:	call   DWORD PTR [edx+0x8]
30033ae2:	jmp    0x30033b0c
30033ae4:	test   esi,esi
30033ae6:	jne    0x30033afb
30033ae8:	call   0x30033b12
30033aed:	mov    edx,DWORD PTR [eax]
30033aef:	push   edi
30033af0:	push   DWORD PTR [ebp+0x8]
30033af3:	push   ecx
30033af4:	mov    ecx,eax
30033af6:	call   DWORD PTR [edx+0x4]
30033af9:	jmp    0x30033b0c
30033afb:	call   0x30033b12
30033b00:	mov    edx,DWORD PTR [eax]
30033b02:	push   edi
30033b03:	push   esi
30033b04:	push   DWORD PTR [ebp+0x8]
30033b07:	push   ecx
30033b08:	mov    ecx,eax
30033b0a:	call   DWORD PTR [edx]
30033b0c:	pop    edi
30033b0d:	pop    esi
30033b0e:	pop    ebp
30033b0f:	ret    0x8
30033b12:	mov    eax,ds:0x30043c4c
30033b17:	test   eax,eax
30033b19:	jne    0x30033b3b
30033b1b:	mov    eax,ds:0x30044f38
30033b20:	test   al,0x1
30033b22:	jne    0x30033b36
30033b24:	or     eax,0x1
30033b27:	mov    ds:0x30044f38,eax
30033b2c:	mov    DWORD PTR ds:0x30044f3c,0x30033b3c
30033b36:	mov    eax,0x30044f3c
30033b3b:	ret    
30033b3c:	adc    BYTE PTR [ebx+eax*1],bh
30033b3f:	xor    ah,al
30033b41:	cmp    eax,DWORD PTR [ebx]
30033b43:	xor    BYTE PTR [ebx+edi*1+0x1fbf3003],al
30033b4a:	add    esi,DWORD PTR [eax]
30033b4c:	push   ebp
30033b4d:	mov    ebp,esp
30033b4f:	cmp    BYTE PTR ds:0x300430f1,0x0
30033b56:	je     0x30033b64
30033b58:	push   DWORD PTR [ebp+0x8]
30033b5b:	push   ecx
30033b5c:	push   0x2
30033b5e:	pop    ecx
30033b5f:	call   0x30033ac0
30033b64:	pop    ebp
30033b65:	ret    0x4
30033b68:	push   ebp
30033b69:	mov    ebp,esp
30033b6b:	cmp    BYTE PTR ds:0x300430f1,0x0
30033b72:	je     0x30033b80
30033b74:	push   DWORD PTR [ebp+0x8]
30033b77:	push   ecx
30033b78:	xor    ecx,ecx
30033b7a:	inc    ecx
30033b7b:	call   0x30033ac0
30033b80:	pop    ebp
30033b81:	ret    0x4
30033b84:	push   ebp
30033b85:	mov    ebp,esp
30033b87:	push   ecx
30033b88:	lea    ecx,[ebp-0x4]
30033b8b:	call   0x300051c8
30033b90:	push   DWORD PTR [ebp+0xc]
30033b93:	lea    eax,[ebp-0x4]
30033b96:	push   0x30033bbc
30033b9b:	push   eax
30033b9c:	call   0x30005153
30033ba1:	add    esp,0xc
30033ba4:	push   DWORD PTR [ebp-0x4]
30033ba7:	call   DWORD PTR ds:0x30045240
30033bad:	lea    ecx,[ebp-0x4]
30033bb0:	call   0x300051a4
30033bb5:	leave  
30033bb6:	ret    0x8
30033bb9:	nop
30033bba:	nop
30033bbb:	nop
30033bbc:	and    eax,0xa007300
30033bc1:	add    BYTE PTR [eax],al
30033bc3:	add    BYTE PTR [ebp-0x75],dl
30033bc6:	in     al,dx
30033bc7:	push   ecx
30033bc8:	lea    ecx,[ebp-0x4]
30033bcb:	call   0x300051c8
30033bd0:	push   DWORD PTR [ebp+0x10]
30033bd3:	lea    eax,[ebp-0x4]
30033bd6:	push   DWORD PTR [ebp+0xc]
30033bd9:	push   0x30033bfc
30033bde:	push   eax
30033bdf:	call   0x30005153
30033be4:	add    esp,0x10
30033be7:	push   DWORD PTR [ebp-0x4]
30033bea:	call   DWORD PTR ds:0x30045240
30033bf0:	lea    ecx,[ebp-0x4]
30033bf3:	call   0x300051a4
30033bf8:	leave  
30033bf9:	ret    0xc
30033bfc:	and    eax,0x20007300
30033c01:	add    BYTE PTR [eax],ch
30033c03:	add    BYTE PTR ds:0x64007500,ah
30033c09:	add    BYTE PTR [ecx],ch
30033c0b:	add    BYTE PTR [edx],cl
30033c0d:	add    BYTE PTR [eax],al
30033c0f:	add    BYTE PTR [ebp-0x75],dl
30033c12:	in     al,dx
30033c13:	push   ecx
30033c14:	lea    ecx,[ebp-0x4]
30033c17:	call   0x300051c8
30033c1c:	push   DWORD PTR [ebp+0x10]
30033c1f:	lea    eax,[ebp-0x4]
30033c22:	push   DWORD PTR [ebp+0x14]
30033c25:	push   DWORD PTR [ebp+0xc]
30033c28:	push   0x30033c4c
30033c2d:	push   eax
30033c2e:	call   0x30005153
30033c33:	add    esp,0x14
30033c36:	push   DWORD PTR [ebp-0x4]
30033c39:	call   DWORD PTR ds:0x30045240
30033c3f:	lea    ecx,[ebp-0x4]
30033c42:	call   0x300051a4
30033c47:	leave  
30033c48:	ret    0x10
30033c4b:	nop
30033c4c:	and    eax,0x20007300
30033c51:	add    BYTE PTR [eax],ch
30033c53:	add    BYTE PTR ds:0x64007500,ah
30033c59:	add    BYTE PTR [ecx],ch
30033c5b:	add    BYTE PTR [eax],ah
30033c5d:	add    BYTE PTR ds:0xa007300,ah
30033c63:	add    BYTE PTR [eax],al
30033c65:	add    BYTE PTR [ebp-0x75],dl
30033c68:	in     al,dx
30033c69:	push   esi
30033c6a:	mov    esi,ecx
30033c6c:	call   0x30016f7e
30033c71:	test   BYTE PTR [ebp+0x8],0x1
30033c75:	je     0x30033c7f
30033c77:	push   esi
30033c78:	call   DWORD PTR ds:0x300452ac
30033c7e:	pop    ecx
30033c7f:	mov    eax,esi
30033c81:	pop    esi
30033c82:	pop    ebp
30033c83:	ret    0x4
30033c86:	push   ebp
30033c87:	mov    ebp,esp
30033c89:	push   esi
30033c8a:	push   DWORD PTR [ebp+0xc]
30033c8d:	lea    esi,[ecx+0x2c]
30033c90:	mov    ecx,esi
30033c92:	call   0x300014c1
30033c97:	mov    ecx,esi
30033c99:	call   0x300089c3
30033c9e:	mov    ecx,esi
30033ca0:	call   0x300089c3
30033ca5:	mov    eax,esi
30033ca7:	pop    esi
30033ca8:	pop    ebp
30033ca9:	ret    0x8
30033cac:	push   ebp
30033cad:	mov    ebp,esp
30033caf:	push   esi
30033cb0:	push   DWORD PTR [ebp+0x8]
30033cb3:	lea    esi,[ecx+0x30]
30033cb6:	mov    ecx,esi
30033cb8:	call   0x300014c1
30033cbd:	mov    ecx,esi
30033cbf:	call   0x300089c3
30033cc4:	mov    ecx,esi
30033cc6:	call   0x300089c3
30033ccb:	mov    eax,esi
30033ccd:	pop    esi
30033cce:	pop    ebp
30033ccf:	ret    0x4
30033cd2:	xor    al,al
30033cd4:	ret    
30033cd5:	push   ebp
30033cd6:	mov    ebp,esp
30033cd8:	push   ecx
30033cd9:	mov    eax,DWORD PTR [ebp+0x8]
30033cdc:	push   ebx
30033cdd:	mov    ebx,DWORD PTR [eax]
30033cdf:	push   esi
30033ce0:	mov    eax,DWORD PTR [ebx-0xc]
30033ce3:	mov    DWORD PTR [ebp-0x4],eax
30033ce6:	movzx  eax,WORD PTR [ebx]
30033ce9:	push   edi
30033cea:	mov    edi,DWORD PTR [ecx]
30033cec:	push   eax
30033ced:	call   DWORD PTR ds:0x3004537c
30033cf3:	mov    DWORD PTR [ebp+0x8],eax
30033cf6:	xor    eax,eax
30033cf8:	pop    ecx
30033cf9:	mov    esi,edi
30033cfb:	cmp    WORD PTR [edi],ax
30033cfe:	je     0x30033d2c
30033d00:	movzx  eax,WORD PTR [esi]
30033d03:	push   eax
30033d04:	call   DWORD PTR ds:0x3004537c
30033d0a:	pop    ecx
30033d0b:	cmp    eax,DWORD PTR [ebp+0x8]
30033d0e:	jne    0x30033d22
30033d10:	push   DWORD PTR [ebp-0x4]
30033d13:	push   ebx
30033d14:	push   esi
30033d15:	call   DWORD PTR ds:0x300452fc
30033d1b:	add    esp,0xc
30033d1e:	test   eax,eax
30033d20:	je     0x30033d36
30033d22:	add    esi,0x2
30033d25:	xor    eax,eax
30033d27:	cmp    WORD PTR [esi],ax
30033d2a:	jne    0x30033d00
30033d2c:	or     eax,0xffffffff
30033d2f:	pop    edi
30033d30:	pop    esi
30033d31:	pop    ebx
30033d32:	leave  
30033d33:	ret    0x4
30033d36:	sub    esi,edi
30033d38:	sar    esi,1
30033d3a:	mov    eax,esi
30033d3c:	jmp    0x30033d2f
30033d3e:	push   ebp
30033d3f:	mov    ebp,esp
30033d41:	sub    esp,0x14
30033d44:	lea    eax,[ecx+0x4]
30033d47:	push   ebx
30033d48:	mov    ecx,eax
30033d4a:	mov    DWORD PTR [ebp-0x10],eax
30033d4d:	call   0x3000996e
30033d52:	mov    ebx,eax
30033d54:	test   ebx,ebx
30033d56:	je     0x30033e4e
30033d5c:	push   esi
30033d5d:	push   edi
30033d5e:	mov    edi,DWORD PTR [ebp+0x8]
30033d61:	mov    ecx,DWORD PTR [ebp-0x10]
30033d64:	mov    esi,ebx
30033d66:	push   ebx
30033d67:	mov    DWORD PTR [ebp-0x8],esi
30033d6a:	call   0x30009764
30033d6f:	mov    ebx,eax
30033d71:	mov    eax,DWORD PTR [edi]
30033d73:	mov    DWORD PTR [ebp-0x14],ebx
30033d76:	cmp    DWORD PTR [eax-0xc],0x0
30033d7a:	jle    0x30033d86
30033d7c:	push   esi
30033d7d:	mov    ecx,edi
30033d7f:	call   0x30033cd5
30033d84:	jmp    0x30033d89
30033d86:	or     eax,0xffffffff
30033d89:	mov    DWORD PTR [ebp-0x4],eax
30033d8c:	test   eax,eax
30033d8e:	js     0x30033e44
30033d94:	mov    eax,DWORD PTR [esi]
30033d96:	mov    ecx,DWORD PTR [ebp-0x8]
30033d99:	mov    esi,DWORD PTR [eax-0xc]
30033d9c:	mov    eax,DWORD PTR [edi]
30033d9e:	mov    ecx,DWORD PTR [ecx+0x4]
30033da1:	mov    edi,DWORD PTR [eax-0xc]
30033da4:	mov    eax,esi
30033da6:	sub    eax,DWORD PTR [ecx-0xc]
30033da9:	mov    ecx,DWORD PTR [ebp+0x8]
30033dac:	cdq    
30033dad:	mov    ebx,eax
30033daf:	xor    ebx,edx
30033db1:	sub    ebx,edx
30033db3:	add    ebx,edi
30033db5:	sub    edi,esi
30033db7:	sub    edi,DWORD PTR [ebp-0x4]
30033dba:	lea    eax,[ebp-0xc]
30033dbd:	push   edi
30033dbe:	push   eax
30033dbf:	call   0x30009162
30033dc4:	mov    ecx,DWORD PTR [ebp+0x8]
30033dc7:	push   ebx
30033dc8:	call   0x30004286
30033dcd:	mov    edi,DWORD PTR [ebp-0x4]
30033dd0:	mov    esi,eax
30033dd2:	mov    eax,DWORD PTR [ebp-0x8]
30033dd5:	push   0xffffffff
30033dd7:	push   DWORD PTR [eax+0x4]
30033dda:	mov    ecx,ebx
30033ddc:	sub    ecx,edi
30033dde:	push   ecx
30033ddf:	lea    ecx,[esi+edi*2]
30033de2:	push   ecx
30033de3:	call   0x30037e06
30033de8:	mov    eax,DWORD PTR [ebp-0x8]
30033deb:	push   DWORD PTR [ebp-0xc]
30033dee:	mov    eax,DWORD PTR [eax+0x4]
30033df1:	mov    eax,DWORD PTR [eax-0xc]
30033df4:	sub    ebx,eax
30033df6:	sub    ebx,edi
30033df8:	add    eax,edi
30033dfa:	inc    ebx
30033dfb:	lea    eax,[esi+eax*2]
30033dfe:	push   ebx
30033dff:	push   eax
30033e00:	call   0x30006ce1
30033e05:	mov    edi,DWORD PTR [ebp+0x8]
30033e08:	add    esp,0x1c
30033e0b:	mov    ecx,edi
30033e0d:	push   0xffffffff
30033e0f:	call   0x30006c8c
30033e14:	mov    eax,DWORD PTR [edi]
30033e16:	mov    esi,DWORD PTR [ebp-0x8]
30033e19:	cmp    DWORD PTR [eax-0xc],0x0
30033e1d:	jle    0x30033e2b
30033e1f:	push   esi
30033e20:	mov    ecx,edi
30033e22:	call   0x30033cd5
30033e27:	mov    ebx,eax
30033e29:	jmp    0x30033e2e
30033e2b:	or     ebx,0xffffffff
30033e2e:	lea    ecx,[ebp-0xc]
30033e31:	mov    DWORD PTR [ebp-0x4],ebx
30033e34:	call   0x300051a4
30033e39:	test   ebx,ebx
30033e3b:	jns    0x30033d94
30033e41:	mov    ebx,DWORD PTR [ebp-0x14]
30033e44:	test   ebx,ebx
30033e46:	jne    0x30033d61
30033e4c:	pop    edi
30033e4d:	pop    esi
30033e4e:	pop    ebx
30033e4f:	leave  
30033e50:	ret    0x4
30033e53:	push   ebp
30033e54:	mov    ebp,esp
30033e56:	push   ecx
30033e57:	cmp    DWORD PTR [ebp+0x8],0x0
30033e5b:	push   edi
30033e5c:	mov    edi,ecx
30033e5e:	lea    ecx,[edi+0x4]
30033e61:	mov    DWORD PTR [edi],ecx
30033e63:	jne    0x30033e6a
30033e65:	and    DWORD PTR [edi],0x0
30033e68:	jmp    0x30033ea4
30033e6a:	and    DWORD PTR [ebp-0x4],0x0
30033e6e:	push   esi
30033e6f:	mov    esi,DWORD PTR [ebp+0x8]
30033e72:	lea    edx,[esi+0x2]
30033e75:	mov    ax,WORD PTR [esi]
30033e78:	add    esi,0x2
30033e7b:	cmp    ax,WORD PTR [ebp-0x4]
30033e7f:	jne    0x30033e75
30033e81:	sub    esi,edx
30033e83:	push   ecx
30033e84:	sar    esi,1
30033e86:	inc    esi
30033e87:	push   ecx
30033e88:	mov    edx,esi
30033e8a:	mov    ecx,edi
30033e8c:	call   0x30031e4b
30033e91:	lea    eax,[esi+esi*1]
30033e94:	push   eax
30033e95:	push   DWORD PTR [ebp+0x8]
30033e98:	push   eax
30033e99:	push   DWORD PTR [edi]
30033e9b:	call   0x30001444
30033ea0:	add    esp,0x10
30033ea3:	pop    esi
30033ea4:	mov    eax,edi
30033ea6:	pop    edi
30033ea7:	leave  
30033ea8:	ret    0x4
30033eab:	push   esi
30033eac:	push   0x30033eec
30033eb1:	push   0x30018554
30033eb6:	mov    esi,ecx
30033eb8:	call   0x300043f1
30033ebd:	push   ecx
30033ebe:	push   0x20
30033ec0:	mov    ecx,esi
30033ec2:	call   0x30034225
30033ec7:	push   ecx
30033ec8:	push   0x5c
30033eca:	mov    ecx,esi
30033ecc:	call   0x30034225
30033ed1:	push   ecx
30033ed2:	push   0x2f
30033ed4:	mov    ecx,esi
30033ed6:	call   0x30034225
30033edb:	push   ecx
30033edc:	push   0x3a
30033ede:	mov    ecx,esi
30033ee0:	call   0x30034225
30033ee5:	mov    eax,esi
30033ee7:	pop    esi
30033ee8:	ret    
30033ee9:	nop
30033eea:	nop
30033eeb:	nop
30033eec:	pop    edi
30033eed:	add    BYTE PTR [eax],al
30033eef:	add    BYTE PTR [ebp-0x75],dl
30033ef2:	in     al,dx
30033ef3:	sub    esp,0x26c
30033ef9:	mov    eax,ds:0x30043050
30033efe:	xor    eax,ebp
30033f00:	mov    DWORD PTR [ebp-0x4],eax
30033f03:	push   ebx
30033f04:	push   esi
30033f05:	push   edi
30033f06:	xor    esi,esi
30033f08:	push   esi
30033f09:	mov    ebx,edx
30033f0b:	mov    edi,ecx
30033f0d:	mov    DWORD PTR [ebp-0x25c],esi
30033f13:	mov    DWORD PTR [ebp-0x264],esi
30033f19:	call   DWORD PTR ds:0x300454b0
30033f1f:	push   DWORD PTR [edi]
30033f21:	call   DWORD PTR ds:0x30045638
30033f27:	test   eax,eax
30033f29:	jne    0x30033f35
30033f2b:	mov    esi,0x80030002
30033f30:	jmp    0x3003403a
30033f35:	lea    eax,[ebp-0x25c]
30033f3b:	push   eax
30033f3c:	push   0x30034074
30033f41:	push   0x1
30033f43:	push   esi
30033f44:	push   0x30034084
30033f49:	call   DWORD PTR ds:0x30045494
30033f4f:	mov    esi,eax
30033f51:	test   esi,esi
30033f53:	js     0x3003403a
30033f59:	mov    eax,DWORD PTR [ebp-0x25c]
30033f5f:	lea    edx,[ebp-0x264]
30033f65:	mov    ecx,DWORD PTR [eax]
30033f67:	push   edx
30033f68:	push   0x30034094
30033f6d:	push   eax
30033f6e:	call   DWORD PTR [ecx]
30033f70:	mov    esi,eax
30033f72:	test   esi,esi
30033f74:	js     0x3003403a
30033f7a:	mov    eax,DWORD PTR [ebp-0x264]
30033f80:	test   eax,eax
30033f82:	je     0x30034038
30033f88:	mov    ecx,DWORD PTR [eax]
30033f8a:	push   0x0
30033f8c:	push   DWORD PTR [edi]
30033f8e:	push   eax
30033f8f:	call   DWORD PTR [ecx+0x14]
30033f92:	mov    esi,eax
30033f94:	test   esi,esi
30033f96:	js     0x3003403a
30033f9c:	mov    eax,DWORD PTR [ebp-0x25c]
30033fa2:	push   0x0
30033fa4:	mov    ecx,DWORD PTR [eax]
30033fa6:	push   0x0
30033fa8:	push   eax
30033fa9:	call   DWORD PTR [ecx+0x4c]
30033fac:	mov    esi,eax
30033fae:	test   esi,esi
30033fb0:	js     0x3003403a
30033fb6:	lea    ecx,[ebp-0x260]
30033fbc:	call   0x300051c8
30033fc1:	mov    esi,DWORD PTR [ebp-0x25c]
30033fc7:	mov    edi,0x104
30033fcc:	push   edi
30033fcd:	lea    ecx,[ebp-0x260]
30033fd3:	call   0x30004286
30033fd8:	mov    ecx,DWORD PTR [esi]
30033fda:	push   0x1
30033fdc:	lea    edx,[ebp-0x258]
30033fe2:	push   edx
30033fe3:	push   edi
30033fe4:	push   eax
30033fe5:	push   esi
30033fe6:	call   DWORD PTR [ecx+0xc]
30033fe9:	push   0xffffffff
30033feb:	lea    ecx,[ebp-0x260]
30033ff1:	mov    esi,eax
30033ff3:	call   0x30006c8c
30033ff8:	test   esi,esi
30033ffa:	jns    0x30034009
30033ffc:	lea    ecx,[ebp-0x260]
30034002:	call   0x300051a4
30034007:	jmp    0x3003403a
30034009:	push   DWORD PTR [ebp-0x260]
3003400f:	lea    ecx,[ebp-0x268]
30034015:	call   0x300089ae
3003401a:	push   eax
3003401b:	mov    ecx,ebx
3003401d:	call   0x300014c1
30034022:	lea    ecx,[ebp-0x268]
30034028:	call   0x300051a4
3003402d:	lea    ecx,[ebp-0x260]
30034033:	call   0x300051a4
30034038:	xor    esi,esi
3003403a:	call   DWORD PTR ds:0x300454ac
30034040:	mov    eax,DWORD PTR [ebp-0x264]
30034046:	test   eax,eax
30034048:	je     0x30034050
3003404a:	mov    ecx,DWORD PTR [eax]
3003404c:	push   eax
3003404d:	call   DWORD PTR [ecx+0x8]
30034050:	mov    ecx,DWORD PTR [ebp-0x25c]
30034056:	test   ecx,ecx
30034058:	je     0x30034060
3003405a:	mov    edx,DWORD PTR [ecx]
3003405c:	push   ecx
3003405d:	call   DWORD PTR [edx+0x8]
30034060:	mov    ecx,DWORD PTR [ebp-0x4]
30034063:	pop    edi
30034064:	mov    eax,esi
30034066:	pop    esi
30034067:	xor    ecx,ebp
30034069:	pop    ebx
3003406a:	call   0x3000115c
3003406f:	leave  
30034070:	ret    
30034071:	nop
30034072:	nop
30034073:	nop
30034074:	stc    
30034075:	adc    al,0x2
30034077:	add    BYTE PTR [eax],al
30034079:	add    BYTE PTR [eax],al
3003407b:	add    al,al
3003407d:	add    BYTE PTR [eax],al
3003407f:	add    BYTE PTR [eax],al
30034081:	add    BYTE PTR [eax],al
30034083:	inc    esi
30034084:	add    DWORD PTR [edx+eax*1],edx
30034087:	add    BYTE PTR [eax],al
30034089:	add    BYTE PTR [eax],al
3003408b:	add    al,al
3003408d:	add    BYTE PTR [eax],al
3003408f:	add    BYTE PTR [eax],al
30034091:	add    BYTE PTR [eax],al
30034093:	inc    esi
30034094:	or     eax,DWORD PTR [ecx]
30034096:	add    BYTE PTR [eax],al
30034098:	add    BYTE PTR [eax],al
3003409a:	add    BYTE PTR [eax],al
3003409c:	rol    BYTE PTR [eax],0x0
3003409f:	add    BYTE PTR [eax],al
300340a1:	add    BYTE PTR [eax],al
300340a3:	inc    esi
300340a4:	push   ebp
300340a5:	mov    ebp,esp
300340a7:	push   ecx
300340a8:	push   ecx
300340a9:	push   esi
300340aa:	mov    esi,ecx
300340ac:	push   edi
300340ad:	lea    ecx,[ebp-0x4]
300340b0:	mov    edi,edx
300340b2:	call   0x300051c8
300340b7:	push   esi
300340b8:	lea    ecx,[ebp-0x4]
300340bb:	call   0x300014c1
300340c0:	push   0x5c
300340c2:	push   DWORD PTR [ebp-0x4]
300340c5:	call   DWORD PTR ds:0x30045328
300340cb:	pop    ecx
300340cc:	pop    ecx
300340cd:	test   eax,eax
300340cf:	je     0x30034162
300340d5:	sub    eax,DWORD PTR [ebp-0x4]
300340d8:	sar    eax,1
300340da:	js     0x30034162
300340e0:	push   ebx
300340e1:	inc    eax
300340e2:	push   eax
300340e3:	xor    esi,esi
300340e5:	push   esi
300340e6:	lea    eax,[ebp-0x8]
300340e9:	push   eax
300340ea:	lea    ecx,[ebp-0x4]
300340ed:	call   0x30008d6e
300340f2:	push   eax
300340f3:	lea    ecx,[ebp-0x4]
300340f6:	call   0x300014c1
300340fb:	lea    ecx,[ebp-0x8]
300340fe:	call   0x300051a4
30034103:	mov    eax,DWORD PTR [edi]
30034105:	lea    ecx,[ebp-0x4]
30034108:	push   DWORD PTR [eax-0xc]
3003410b:	push   eax
3003410c:	call   0x30008b64
30034111:	mov    ecx,DWORD PTR [ebp+0x8]
30034114:	push   0x105
30034119:	call   0x30004286
3003411e:	push   esi
3003411f:	push   eax
30034120:	mov    ebx,0x104
30034125:	push   ebx
30034126:	push   DWORD PTR [ebp-0x4]
30034129:	call   DWORD PTR ds:0x300450f4
3003412f:	mov    ecx,DWORD PTR [ebp+0x8]
30034132:	push   0xffffffff
30034134:	mov    edi,eax
30034136:	call   0x30006c8c
3003413b:	cmp    edi,ebx
3003413d:	pop    ebx
3003413e:	jbe    0x30034147
30034140:	mov    esi,0x80004005
30034145:	jmp    0x30034167
30034147:	test   edi,edi
30034149:	jne    0x30034167
3003414b:	call   DWORD PTR ds:0x30045160
30034151:	mov    esi,eax
30034153:	test   esi,esi
30034155:	jle    0x30034167
30034157:	movzx  esi,si
3003415a:	or     esi,0x80070000
30034160:	jmp    0x30034167
30034162:	mov    esi,0x80070057
30034167:	lea    ecx,[ebp-0x4]
3003416a:	call   0x300051a4
3003416f:	pop    edi
30034170:	mov    eax,esi
30034172:	pop    esi
30034173:	leave  
30034174:	ret    0x4
30034177:	push   ebp
30034178:	mov    ebp,esp
3003417a:	and    esp,0xfffffff8
3003417d:	sub    esp,0x14
30034180:	mov    eax,DWORD PTR [edx]
30034182:	push   ebx
30034183:	push   esi
30034184:	xor    esi,esi
30034186:	mov    ebx,ecx
30034188:	mov    ecx,DWORD PTR [eax-0xc]
3003418b:	mov    eax,esi
3003418d:	push   edi
3003418e:	mov    DWORD PTR [esp+0x18],edx
30034192:	mov    DWORD PTR [esp+0x1c],ebx
30034196:	mov    edi,esi
30034198:	mov    DWORD PTR [esp+0x10],esi
3003419c:	mov    DWORD PTR [esp+0x14],ecx
300341a0:	mov    DWORD PTR [esp+0xc],eax
300341a4:	test   ecx,ecx
300341a6:	jle    0x300341f0
300341a8:	xor    ebx,ebx
300341aa:	push   eax
300341ab:	mov    ecx,edx
300341ad:	call   0x30008e17
300341b2:	push   DWORD PTR [esp+0x10]
300341b6:	movzx  eax,ax
300341b9:	cdq    
300341ba:	mov    esi,eax
300341bc:	mov    eax,DWORD PTR [esp+0x10]
300341c0:	mov    edi,edx
300341c2:	cdq    
300341c3:	push   ebx
300341c4:	push   edx
300341c5:	push   eax
300341c6:	call   0x3001eb56
300341cb:	add    esi,eax
300341cd:	mov    eax,DWORD PTR [esp+0xc]
300341d1:	adc    edi,edx
300341d3:	mov    edx,DWORD PTR [esp+0x18]
300341d7:	inc    eax
300341d8:	mov    ebx,esi
300341da:	mov    DWORD PTR [esp+0x10],edi
300341de:	mov    DWORD PTR [esp+0xc],eax
300341e2:	cmp    eax,DWORD PTR [esp+0x14]
300341e6:	jl     0x300341aa
300341e8:	mov    DWORD PTR [esp+0x18],ebx
300341ec:	mov    ebx,DWORD PTR [esp+0x1c]
300341f0:	mov    ecx,ebx
300341f2:	call   0x300051c8
300341f7:	push   0x24
300341f9:	mov    eax,0xfa
300341fe:	push   eax
300341ff:	push   eax
30034200:	mov    ecx,ebx
30034202:	call   0x30004286
30034207:	push   eax
30034208:	push   edi
30034209:	push   esi
3003420a:	call   DWORD PTR ds:0x30045380
30034210:	add    esp,0x14
30034213:	mov    ecx,ebx
30034215:	push   0xffffffff
30034217:	call   0x30006c8c
3003421c:	pop    edi
3003421d:	pop    esi
3003421e:	mov    eax,ebx
30034220:	pop    ebx
30034221:	mov    esp,ebp
30034223:	pop    ebp
30034224:	ret    
30034225:	push   ebp
30034226:	mov    ebp,esp
30034228:	sub    esp,0xc
3003422b:	push   ebx
3003422c:	push   edi
3003422d:	push   0x5f
3003422f:	pop    eax
30034230:	mov    edi,ecx
30034232:	xor    ebx,ebx
30034234:	mov    DWORD PTR [ebp-0x8],edi
30034237:	cmp    WORD PTR [ebp+0x8],ax
3003423b:	je     0x30034296
3003423d:	mov    edx,DWORD PTR [edi]
3003423f:	push   esi
30034240:	mov    esi,DWORD PTR [edx-0xc]
30034243:	mov    cl,bl
30034245:	mov    eax,ebx
30034247:	test   esi,esi
30034249:	jle    0x30034295
3003424b:	mov    di,WORD PTR [ebp+0x8]
3003424f:	add    eax,eax
30034251:	mov    DWORD PTR [ebp-0xc],eax
30034254:	cmp    WORD PTR [eax+edx*1],di
30034258:	mov    edi,DWORD PTR [ebp-0x8]
3003425b:	jne    0x30034280
3003425d:	test   cl,cl
3003425f:	jne    0x30034275
30034261:	push   esi
30034262:	mov    ecx,edi
30034264:	mov    BYTE PTR [ebp-0x1],0x1
30034268:	call   0x30004286
3003426d:	mov    cl,BYTE PTR [ebp-0x1]
30034270:	mov    edx,eax
30034272:	mov    eax,DWORD PTR [ebp-0xc]
30034275:	push   0x5f
30034277:	pop    edi
30034278:	mov    WORD PTR [eax+edx*1],di
3003427c:	mov    edi,DWORD PTR [ebp-0x8]
3003427f:	inc    ebx
30034280:	add    eax,0x2
30034283:	sar    eax,1
30034285:	cmp    eax,esi
30034287:	jl     0x3003424b
30034289:	test   cl,cl
3003428b:	je     0x30034295
3003428d:	push   esi
3003428e:	mov    ecx,edi
30034290:	call   0x30004147
30034295:	pop    esi
30034296:	pop    edi
30034297:	mov    eax,ebx
30034299:	pop    ebx
3003429a:	leave  
3003429b:	ret    0x8
3003429e:	push   ebp
3003429f:	mov    ebp,esp
300342a1:	push   esi
300342a2:	mov    esi,ecx
300342a4:	call   0x300342be
300342a9:	test   BYTE PTR [ebp+0x8],0x1
300342ad:	je     0x300342b7
300342af:	push   esi
300342b0:	call   DWORD PTR ds:0x300452ac
300342b6:	pop    ecx
300342b7:	mov    eax,esi
300342b9:	pop    esi
300342ba:	pop    ebp
300342bb:	ret    0x4
300342be:	push   esi
300342bf:	mov    esi,ecx
300342c1:	lea    ecx,[esi+0x84]
300342c7:	mov    DWORD PTR [esi],0x30005610
300342cd:	call   0x300051a4
300342d2:	lea    ecx,[esi+0x80]
300342d8:	call   0x300051a4
300342dd:	mov    ecx,esi
300342df:	pop    esi
300342e0:	jmp    0x30016f4d
300342e5:	push   ebp
300342e6:	mov    ebp,esp
300342e8:	push   esi
300342e9:	push   edi
300342ea:	mov    edi,DWORD PTR [ebp+0xc]
300342ed:	mov    esi,ecx
300342ef:	mov    ecx,DWORD PTR [ebp+0x8]
300342f2:	push   edi
300342f3:	call   0x30004340
300342f8:	mov    edx,DWORD PTR [esi+0x54]
300342fb:	test   edx,edx
300342fd:	je     0x30034328
300342ff:	lea    ecx,[edx+0x2]
30034302:	mov    ax,WORD PTR [edx]
30034305:	add    edx,0x2
30034308:	test   ax,ax
3003430b:	jne    0x30034302
3003430d:	sub    edx,ecx
3003430f:	sar    edx,1
30034311:	je     0x30034328
30034313:	push   DWORD PTR [esi+0x54]
30034316:	push   DWORD PTR [edi]
30034318:	push   0x30034334
3003431d:	push   DWORD PTR [ebp+0x8]
30034320:	call   0x30005153
30034325:	add    esp,0x10
30034328:	mov    eax,DWORD PTR [ebp+0x8]
3003432b:	pop    edi
3003432c:	pop    esi
3003432d:	pop    ebp
3003432e:	ret    0x8
30034331:	nop
30034332:	nop
30034333:	nop
30034334:	and    eax,0x5f007300
30034339:	add    BYTE PTR ds:0x7300,ah
3003433f:	add    BYTE PTR [ebp-0x75],dl
30034342:	in     al,dx
30034343:	sub    esp,0xc
30034346:	push   ebx
30034347:	push   esi
30034348:	mov    esi,ecx
3003434a:	push   edi
3003434b:	lea    edi,[esi+0x2c]
3003434e:	xor    ebx,ebx
30034350:	mov    edx,DWORD PTR [edi]
30034352:	cmp    DWORD PTR [edx-0xc],ebx
30034355:	jne    0x30034412
3003435b:	mov    ecx,DWORD PTR [ebp+0x8]
3003435e:	mov    eax,DWORD PTR [ecx]
30034360:	cmp    DWORD PTR [eax-0xc],ebx
30034363:	je     0x30034372
30034365:	push   ecx
30034366:	mov    ecx,edi
30034368:	call   0x300014c1
3003436d:	jmp    0x30034412
30034372:	push   DWORD PTR [ebp+0xc]
30034375:	mov    ecx,edi
30034377:	call   0x300014c1
3003437c:	lea    ecx,[ebp+0x8]
3003437f:	mov    DWORD PTR [ebp-0xc],ebx
30034382:	mov    DWORD PTR [ebp-0x8],ebx
30034385:	mov    DWORD PTR [ebp-0x4],ebx
30034388:	call   0x300051c8
3003438d:	push   0x20019
30034392:	push   DWORD PTR [esi+0x34]
30034395:	lea    ecx,[ebp-0xc]
30034398:	push   0x80000002
3003439d:	call   0x300051d9
300343a2:	test   eax,eax
300343a4:	js     0x30034402
300343a6:	push   0x3002a750
300343ab:	lea    ecx,[ebp+0xc]
300343ae:	call   0x3000437e
300343b3:	lea    eax,[ebp+0x8]
300343b6:	push   eax
300343b7:	lea    edx,[ebp+0xc]
300343ba:	lea    ecx,[ebp-0xc]
300343bd:	call   0x3000e5e4
300343c2:	lea    ecx,[ebp+0xc]
300343c5:	mov    esi,eax
300343c7:	call   0x300051a4
300343cc:	test   esi,esi
300343ce:	js     0x30034402
300343d0:	mov    eax,DWORD PTR [ebp+0x8]
300343d3:	cmp    DWORD PTR [eax-0xc],ebx
300343d6:	je     0x30034402
300343d8:	lea    ecx,[ebp+0x8]
300343db:	call   0x30018183
300343e0:	test   eax,eax
300343e2:	js     0x30034402
300343e4:	push   DWORD PTR [ebp+0x8]
300343e7:	lea    ecx,[ebp+0xc]
300343ea:	call   0x300089ae
300343ef:	lea    eax,[ebp+0xc]
300343f2:	push   eax
300343f3:	mov    ecx,edi
300343f5:	call   0x300014c1
300343fa:	lea    ecx,[ebp+0xc]
300343fd:	call   0x300051a4
30034402:	lea    ecx,[ebp+0x8]
30034405:	call   0x300051a4
3003440a:	lea    ecx,[ebp-0xc]
3003440d:	call   0x300051ae
30034412:	mov    eax,edi
30034414:	pop    edi
30034415:	pop    esi
30034416:	pop    ebx
30034417:	leave  
30034418:	ret    0x8
3003441b:	push   ebp
3003441c:	mov    ebp,esp
3003441e:	sub    esp,0x14
30034421:	push   ebx
30034422:	push   esi
30034423:	mov    esi,ecx
30034425:	push   edi
30034426:	lea    edi,[esi+0x30]
30034429:	xor    ebx,ebx
3003442b:	mov    edx,DWORD PTR [edi]
3003442d:	cmp    DWORD PTR [edx-0xc],ebx
30034430:	jne    0x30034510
30034436:	push   DWORD PTR [ebp+0x8]
30034439:	mov    ecx,edi
3003443b:	call   0x300014c1
30034440:	lea    ecx,[ebp+0x8]
30034443:	mov    DWORD PTR [ebp-0x14],ebx
30034446:	mov    DWORD PTR [ebp-0x10],ebx
30034449:	mov    DWORD PTR [ebp-0xc],ebx
3003444c:	call   0x300051c8
30034451:	lea    ecx,[ebp-0x4]
30034454:	call   0x300051c8
30034459:	mov    esi,DWORD PTR [esi+0x84]
3003445f:	push   0x104
30034464:	lea    ecx,[ebp-0x4]
30034467:	call   0x30004286
3003446c:	push   esi
3003446d:	push   0x3003451c
30034472:	push   eax
30034473:	call   DWORD PTR ds:0x30045644
30034479:	push   0xffffffff
3003447b:	lea    ecx,[ebp-0x4]
3003447e:	call   0x30006c8c
30034483:	push   0x20019
30034488:	push   DWORD PTR [ebp-0x4]
3003448b:	lea    ecx,[ebp-0x14]
3003448e:	push   0x80000002
30034493:	call   0x300051d9
30034498:	test   eax,eax
3003449a:	js     0x300344f8
3003449c:	push   0x3001c300
300344a1:	lea    ecx,[ebp-0x8]
300344a4:	call   0x3000437e
300344a9:	lea    eax,[ebp+0x8]
300344ac:	push   eax
300344ad:	lea    edx,[ebp-0x8]
300344b0:	lea    ecx,[ebp-0x14]
300344b3:	call   0x3000e5e4
300344b8:	lea    ecx,[ebp-0x8]
300344bb:	mov    esi,eax
300344bd:	call   0x300051a4
300344c2:	test   esi,esi
300344c4:	js     0x300344f8
300344c6:	mov    eax,DWORD PTR [ebp+0x8]
300344c9:	cmp    DWORD PTR [eax-0xc],ebx
300344cc:	je     0x300344f8
300344ce:	lea    ecx,[ebp+0x8]
300344d1:	call   0x30018183
300344d6:	test   eax,eax
300344d8:	js     0x300344f8
300344da:	push   DWORD PTR [ebp+0x8]
300344dd:	lea    ecx,[ebp-0x8]
300344e0:	call   0x300089ae
300344e5:	lea    eax,[ebp-0x8]
300344e8:	push   eax
300344e9:	mov    ecx,edi
300344eb:	call   0x300014c1
300344f0:	lea    ecx,[ebp-0x8]
300344f3:	call   0x300051a4
300344f8:	lea    ecx,[ebp-0x4]
300344fb:	call   0x300051a4
30034500:	lea    ecx,[ebp+0x8]
30034503:	call   0x300051a4
30034508:	lea    ecx,[ebp-0x14]
3003450b:	call   0x300051ae
30034510:	mov    eax,edi
30034512:	pop    edi
30034513:	pop    esi
30034514:	pop    ebx
30034515:	leave  
30034516:	ret    0x4
30034519:	nop
3003451a:	nop
3003451b:	nop
3003451c:	push   ebx
3003451d:	add    BYTE PTR [edi+0x0],ch
30034520:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30034525:	add    BYTE PTR [ecx+0x0],ah
30034528:	jb     0x3003452a
3003452a:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3003452f:	add    BYTE PTR [ecx+0x0],ch
30034532:	arpl   WORD PTR [eax],ax
30034534:	jb     0x30034536
30034536:	outs   dx,DWORD PTR ds:[esi]
30034537:	add    BYTE PTR [ebx+0x0],dh
3003453a:	outs   dx,DWORD PTR ds:[esi]
3003453b:	add    BYTE PTR [esi+0x0],ah
3003453e:	je     0x30034540
30034540:	pop    esp
30034541:	add    BYTE PTR [ecx+0x0],al
30034544:	jo     0x30034546
30034546:	jo     0x30034548
30034548:	inc    ebp
30034549:	add    BYTE PTR [esi+0x0],ch
3003454c:	jbe    0x3003454e
3003454e:	add    BYTE PTR [eax],al
30034550:	push   ebp
30034551:	mov    ebp,esp
30034553:	push   ecx
30034554:	push   esi
30034555:	mov    esi,ecx
30034557:	call   0x300165ed
3003455c:	push   0x30034588
30034561:	lea    ecx,[ebp-0x4]
30034564:	call   0x3000437e
30034569:	mov    ecx,DWORD PTR [esi+0x40]
3003456c:	lea    eax,[esi+0x80]
30034572:	push   eax
30034573:	lea    eax,[ebp-0x4]
30034576:	push   eax
30034577:	call   0x30015eac
3003457c:	lea    ecx,[ebp-0x4]
3003457f:	call   0x300051a4
30034584:	pop    esi
30034585:	leave  
30034586:	ret    
30034587:	nop
30034588:	and    al,0x0
3003458a:	inc    ecx
3003458b:	add    BYTE PTR [eax+0x0],dh
3003458e:	jo     0x30034590
30034590:	dec    esi
30034591:	add    BYTE PTR [ecx+0x0],ah
30034594:	ins    DWORD PTR es:[edi],dx
30034595:	add    BYTE PTR [ebp+0x0],ah
30034598:	and    al,0x0
3003459a:	add    BYTE PTR [eax],al
3003459c:	push   ebp
3003459d:	mov    ebp,esp
3003459f:	push   esi
300345a0:	mov    esi,ecx
300345a2:	mov    DWORD PTR [esi],0x30005658
300345a8:	call   0x30016f4d
300345ad:	test   BYTE PTR [ebp+0x8],0x1
300345b1:	je     0x300345bb
300345b3:	push   esi
300345b4:	call   DWORD PTR ds:0x300452ac
300345ba:	pop    ecx
300345bb:	mov    eax,esi
300345bd:	pop    esi
300345be:	pop    ebp
300345bf:	ret    0x4
300345c2:	push   ebp
300345c3:	mov    ebp,esp
300345c5:	push   ecx
300345c6:	push   ecx
300345c7:	push   esi
300345c8:	mov    esi,ecx
300345ca:	lea    ecx,[ebp-0x4]
300345cd:	lea    edx,[esi+0x24]
300345d0:	call   0x30034177
300345d5:	lea    ecx,[ebp-0x4]
300345d8:	call   0x30033eab
300345dd:	mov    eax,DWORD PTR [esi+0x54]
300345e0:	pop    esi
300345e1:	cmp    DWORD PTR [eax-0xc],0x0
300345e5:	jne    0x300345ec
300345e7:	mov    eax,0x30034630
300345ec:	push   eax
300345ed:	lea    ecx,[ebp-0x8]
300345f0:	call   0x3000437e
300345f5:	mov    ecx,DWORD PTR [ebp+0x8]
300345f8:	call   0x300051c8
300345fd:	push   DWORD PTR [ebp-0x4]
30034600:	mov    ecx,DWORD PTR [ebp+0xc]
30034603:	push   DWORD PTR [ebp-0x8]
30034606:	push   DWORD PTR [ecx]
30034608:	push   0x3003463c
3003460d:	push   DWORD PTR [ebp+0x8]
30034610:	call   0x30005153
30034615:	add    esp,0x14
30034618:	lea    ecx,[ebp-0x8]
3003461b:	call   0x300051a4
30034620:	lea    ecx,[ebp-0x4]
30034623:	call   0x300051a4
30034628:	mov    eax,DWORD PTR [ebp+0x8]
3003462b:	leave  
3003462c:	ret    0x8
3003462f:	nop
30034630:	push   esi
30034631:	add    BYTE PTR [ebx+0x0],dh
30034634:	dec    esi
30034635:	add    BYTE PTR [edi+0x0],ch
30034638:	ja     0x3003463a
3003463a:	add    BYTE PTR [eax],al
3003463c:	and    eax,0x25007300
30034641:	add    BYTE PTR [ebx+0x0],dh
30034644:	pop    esp
30034645:	add    BYTE PTR ds:0x7300,ah
3003464b:	add    BYTE PTR [ebp-0x75],dl
3003464e:	in     al,dx
3003464f:	push   esi
30034650:	lea    esi,[ecx+0x2c]
30034653:	mov    eax,DWORD PTR [esi]
30034655:	cmp    DWORD PTR [eax-0xc],0x0
30034659:	jne    0x30034679
3003465b:	lea    edx,[ecx+0x30]
3003465e:	mov    eax,DWORD PTR [edx]
30034660:	cmp    DWORD PTR [eax-0xc],0x0
30034664:	jne    0x30034671
30034666:	mov    eax,DWORD PTR [ecx]
30034668:	push   DWORD PTR [ebp+0xc]
3003466b:	call   DWORD PTR [eax+0x14]
3003466e:	push   eax
3003466f:	jmp    0x30034672
30034671:	push   edx
30034672:	mov    ecx,esi
30034674:	call   0x300014c1
30034679:	mov    eax,esi
3003467b:	pop    esi
3003467c:	pop    ebp
3003467d:	ret    0x8
30034680:	push   ebp
30034681:	mov    ebp,esp
30034683:	sub    esp,0x24
30034686:	push   ebx
30034687:	push   esi
30034688:	push   edi
30034689:	mov    esi,ecx
3003468b:	push   0x2001f
30034690:	push   DWORD PTR [esi+0x48]
30034693:	xor    ebx,ebx
30034695:	push   0x80000001
3003469a:	lea    ecx,[ebp-0x20]
3003469d:	mov    DWORD PTR [ebp-0x20],ebx
300346a0:	mov    DWORD PTR [ebp-0x1c],ebx
300346a3:	mov    DWORD PTR [ebp-0x18],ebx
300346a6:	call   0x300051d9
300346ab:	test   eax,eax
300346ad:	jle    0x300346b9
300346af:	movzx  eax,ax
300346b2:	or     eax,0x80070000
300346b7:	test   eax,eax
300346b9:	je     0x300346c2
300346bb:	mov    bl,0x1
300346bd:	jmp    0x300347b2
300346c2:	mov    edx,DWORD PTR [esi+0x3c]
300346c5:	mov    DWORD PTR [ebp-0x14],ebx
300346c8:	mov    DWORD PTR [ebp-0x10],ebx
300346cb:	call   0x300058df
300346d0:	cmp    DWORD PTR [esi+0x84],0x80000001
300346da:	mov    DWORD PTR [ebp-0x4],eax
300346dd:	mov    edi,edx
300346df:	mov    ecx,0x300347c8
300346e4:	je     0x300346eb
300346e6:	mov    ecx,0x30034830
300346eb:	push   DWORD PTR [esi+0x88]
300346f1:	xor    edx,edx
300346f3:	call   0x3001d890
300346f8:	push   0x23f7
300346fd:	call   0x3000532c
30034702:	lea    ecx,[ebp-0x8]
30034705:	call   0x300051c8
3003470a:	mov    ecx,esi
3003470c:	call   0x30011dea
30034711:	mov    al,BYTE PTR [esi+0x14]
30034714:	mov    ecx,esi
30034716:	mov    BYTE PTR [ebp-0xc],al
30034719:	call   0x30011dea
3003471e:	push   DWORD PTR [ebp-0xc]
30034721:	mov    ecx,DWORD PTR [esi+0x84]
30034727:	push   DWORD PTR [esi+0x10]
3003472a:	lea    eax,[ebp-0x8]
3003472d:	push   eax
3003472e:	lea    eax,[ebp-0x14]
30034731:	push   eax
30034732:	push   DWORD PTR [esi+0x88]
30034738:	xor    edx,edx
3003473a:	call   0x3001192b
3003473f:	cmp    BYTE PTR ds:0x300430f1,bl
30034745:	je     0x30034759
30034747:	push   DWORD PTR [ebp-0x8]
3003474a:	xor    edx,edx
3003474c:	push   0x30034898
30034751:	push   0x3
30034753:	pop    ecx
30034754:	call   0x30033ac0
30034759:	push   0x23f8
3003475e:	call   0x3000532c
30034763:	mov    eax,DWORD PTR [ebp-0x10]
30034766:	mov    esi,DWORD PTR [ebp-0x4]
30034769:	cmp    eax,edi
3003476b:	ja     0x3003477b
3003476d:	jb     0x30034774
3003476f:	cmp    DWORD PTR [ebp-0x14],esi
30034772:	ja     0x3003477b
30034774:	mov    ecx,0x30034928
30034779:	jmp    0x30034780
3003477b:	mov    ecx,0x300348d0
30034780:	cmp    BYTE PTR ds:0x300430f1,bl
30034786:	je     0x3003479a
30034788:	call   0x30033b12
3003478d:	mov    edx,DWORD PTR [eax]
3003478f:	push   ecx
30034790:	push   0x3
30034792:	mov    ecx,eax
30034794:	call   DWORD PTR [edx+0x8]
30034797:	mov    eax,DWORD PTR [ebp-0x10]
3003479a:	cmp    eax,edi
3003479c:	jbe    0x300347a2
3003479e:	mov    bl,0x1
300347a0:	jmp    0x300347aa
300347a2:	jb     0x300347aa
300347a4:	cmp    DWORD PTR [ebp-0x14],esi
300347a7:	seta   bl
300347aa:	lea    ecx,[ebp-0x8]
300347ad:	call   0x300051a4
300347b2:	lea    ecx,[ebp-0x20]
300347b5:	call   0x300051ae
300347ba:	pop    edi
300347bb:	pop    esi
300347bc:	mov    al,bl
300347be:	pop    ebx
300347bf:	leave  
300347c0:	ret    
300347c1:	nop
300347c2:	nop
300347c3:	nop
300347c4:	nop
300347c5:	nop
300347c6:	nop
300347c7:	nop
300347c8:	inc    ebx
300347c9:	add    BYTE PTR [eax+0x0],ch
300347cc:	add    BYTE PTR gs:[ebx+0x0],ah
300347d0:	imul   eax,DWORD PTR [eax],0x69
300347d3:	add    BYTE PTR [esi+0x0],ch
300347d6:	add    BYTE PTR [bx+si],ah
300347d9:	add    BYTE PTR [ecx+0x0],ah
300347dc:	add    BYTE PTR [di+0x0],ah
300347e0:	and    BYTE PTR [eax],al
300347e2:	outs   dx,DWORD PTR ds:[esi]
300347e3:	add    BYTE PTR [esi+0x0],ah
300347e6:	and    BYTE PTR [eax],al
300347e8:	dec    eax
300347e9:	add    BYTE PTR [ebx+0x0],cl
300347ec:	inc    ebp
300347ed:	add    BYTE PTR [ecx+0x0],bl
300347f0:	pop    edi
300347f1:	add    BYTE PTR [ebx+0x0],al
300347f4:	push   ebp
300347f5:	add    BYTE PTR [edx+0x0],dl
300347f8:	push   edx
300347f9:	add    BYTE PTR [ebp+0x0],al
300347fc:	dec    esi
300347fd:	add    BYTE PTR [eax+eax*1+0x5f],dl
30034801:	add    BYTE PTR [ebp+0x0],dl
30034804:	push   ebx
30034805:	add    BYTE PTR [ebp+0x0],al
30034808:	push   edx
30034809:	add    BYTE PTR [eax],ah
3003480b:	add    BYTE PTR [esi+0x0],dh
3003480e:	jae    0x30034810
30034810:	and    BYTE PTR [eax],al
30034812:	push   eax
30034813:	add    BYTE PTR [ebx+0x0],ch
30034816:	add    BYTE PTR [si+0x0],al
3003481a:	add    BYTE PTR gs:[esi+0x0],ah
3003481e:	and    BYTE PTR [eax],al
30034820:	arpl   WORD PTR [eax],ax
30034822:	popa   
30034823:	add    BYTE PTR [ebx+0x0],ah
30034826:	push   0x6500
3003482b:	add    BYTE PTR [eax+0x43909090],dl
30034831:	add    BYTE PTR [eax+0x0],ch
30034834:	add    BYTE PTR gs:[ebx+0x0],ah
30034838:	imul   eax,DWORD PTR [eax],0x69
3003483b:	add    BYTE PTR [esi+0x0],ch
3003483e:	add    BYTE PTR [bx+si],ah
30034841:	add    BYTE PTR [ecx+0x0],ah
30034844:	add    BYTE PTR [di+0x0],ah
30034848:	and    BYTE PTR [eax],al
3003484a:	outs   dx,DWORD PTR ds:[esi]
3003484b:	add    BYTE PTR [esi+0x0],ah
3003484e:	and    BYTE PTR [eax],al
30034850:	dec    eax
30034851:	add    BYTE PTR [ebx+0x0],cl
30034854:	inc    ebp
30034855:	add    BYTE PTR [ecx+0x0],bl
30034858:	pop    edi
30034859:	add    BYTE PTR [eax+eax*1+0x4f],cl
3003485d:	add    BYTE PTR [ebx+0x0],al
30034860:	inc    ecx
30034861:	add    BYTE PTR [eax+eax*1+0x5f],cl
30034865:	add    BYTE PTR [ebp+0x0],cl
30034868:	inc    ecx
30034869:	add    BYTE PTR [ebx+0x0],al
3003486c:	dec    eax
3003486d:	add    BYTE PTR [ecx+0x0],cl
30034870:	dec    esi
30034871:	add    BYTE PTR [ebp+0x0],al
30034874:	and    BYTE PTR [eax],al
30034876:	jbe    0x30034878
30034878:	jae    0x3003487a
3003487a:	and    BYTE PTR [eax],al
3003487c:	push   eax
3003487d:	add    BYTE PTR [ebx+0x0],ch
30034880:	add    BYTE PTR [si+0x0],al
30034884:	add    BYTE PTR gs:[esi+0x0],ah
30034888:	and    BYTE PTR [eax],al
3003488a:	arpl   WORD PTR [eax],ax
3003488c:	popa   
3003488d:	add    BYTE PTR [ebx+0x0],ah
30034890:	push   0x6500
30034895:	add    BYTE PTR [eax+0x65004e90],dl
3003489b:	add    BYTE PTR [edi+0x0],dh
3003489e:	add    BYTE PTR gs:[ebx+0x0],dh
300348a2:	je     0x300348a4
300348a4:	and    BYTE PTR [eax],al
300348a6:	outs   dx,BYTE PTR ds:[esi]
300348a7:	add    BYTE PTR [edi+0x0],ch
300348aa:	add    BYTE PTR fs:[ebp+0x0],ah
300348ae:	and    BYTE PTR [eax],al
300348b0:	imul   eax,DWORD PTR [eax],0x20006e
300348b6:	ins    DWORD PTR es:[edi],dx
300348b7:	add    BYTE PTR [ebp+0x0],ah
300348ba:	jb     0x300348bc
300348bc:	add    BYTE PTR [di+0x0],ah
300348c0:	and    BYTE PTR [eax],al
300348c2:	jae    0x300348c4
300348c4:	outs   dx,DWORD PTR ds:[esi]
300348c5:	add    BYTE PTR [ebp+0x0],dh
300348c8:	jb     0x300348ca
300348ca:	arpl   WORD PTR [eax],ax
300348cc:	add    BYTE PTR gs:[eax],al
300348cf:	add    BYTE PTR [eax+0x0],dl
300348d2:	imul   eax,DWORD PTR [eax],0x67
300348d5:	add    BYTE PTR [eax+eax*1+0x65],al
300348d9:	add    BYTE PTR [esi+0x0],ah
300348dc:	and    BYTE PTR [eax],al
300348de:	arpl   WORD PTR [eax],ax
300348e0:	outs   dx,DWORD PTR ds:[esi]
300348e1:	add    BYTE PTR [esi+0x0],ch
300348e4:	data16 add BYTE PTR [ecx+0x0],ch
300348e8:	add    BYTE PTR [di+0x0],dh
300348ec:	jb     0x300348ee
300348ee:	popa   
300348ef:	add    BYTE PTR [eax+eax*1+0x69],dh
300348f3:	add    BYTE PTR [edi+0x0],ch
300348f6:	outs   dx,BYTE PTR ds:[esi]
300348f7:	add    BYTE PTR [eax],ah
300348f9:	add    BYTE PTR [ebx+0x0],ah
300348fc:	popa   
300348fd:	add    BYTE PTR [ebx+0x0],ah
30034900:	push   0x20006500
30034905:	add    BYTE PTR [ecx+0x0],ch
30034908:	jae    0x3003490a
3003490a:	and    BYTE PTR [eax],al
3003490c:	dec    edi
3003490d:	add    BYTE PTR [ebp+0x0],dl
30034910:	push   esp
30034911:	add    BYTE PTR [eax],ah
30034913:	add    BYTE PTR [edi+0x0],cl
30034916:	inc    esi
30034917:	add    BYTE PTR [eax],ah
30034919:	add    BYTE PTR [eax+eax*1+0x41],al
3003491d:	add    BYTE PTR [eax+eax*1+0x45],dl
30034921:	add    BYTE PTR [eax],al
30034923:	add    BYTE PTR [eax+0x50909090],dl
30034929:	add    BYTE PTR [ebx+0x0],ch
3003492c:	add    BYTE PTR [si+0x0],al
30034930:	add    BYTE PTR gs:[esi+0x0],ah
30034934:	and    BYTE PTR [eax],al
30034936:	arpl   WORD PTR [eax],ax
30034938:	outs   dx,DWORD PTR ds:[esi]
30034939:	add    BYTE PTR [esi+0x0],ch
3003493c:	data16 add BYTE PTR [ecx+0x0],ch
30034940:	add    BYTE PTR [di+0x0],dh
30034944:	jb     0x30034946
30034946:	popa   
30034947:	add    BYTE PTR [eax+eax*1+0x69],dh
3003494b:	add    BYTE PTR [edi+0x0],ch
3003494e:	outs   dx,BYTE PTR ds:[esi]
3003494f:	add    BYTE PTR [eax],ah
30034951:	add    BYTE PTR [ebx+0x0],ah
30034954:	popa   
30034955:	add    BYTE PTR [ebx+0x0],ah
30034958:	push   0x20006500
3003495d:	add    BYTE PTR [ecx+0x0],ch
30034960:	jae    0x30034962
30034962:	and    BYTE PTR [eax],al
30034964:	dec    edi
30034965:	add    BYTE PTR [ebx+0x0],cl
30034968:	add    BYTE PTR [eax],al
3003496a:	push   ebp
3003496b:	mov    ebp,esp
3003496d:	push   esi
3003496e:	mov    esi,ecx
30034970:	call   0x3003498a
30034975:	test   BYTE PTR [ebp+0x8],0x1
30034979:	je     0x30034983
3003497b:	push   esi
3003497c:	call   DWORD PTR ds:0x300452ac
30034982:	pop    ecx
30034983:	mov    eax,esi
30034985:	pop    esi
30034986:	pop    ebp
30034987:	ret    0x4
3003498a:	push   esi
3003498b:	mov    esi,ecx
3003498d:	mov    DWORD PTR [esi],0x30005168
30034993:	call   0x30034cda
30034998:	mov    ecx,esi
3003499a:	pop    esi
3003499b:	jmp    0x30016f7e
300349a0:	push   ebp
300349a1:	mov    ebp,esp
300349a3:	and    esp,0xfffffff8
300349a6:	sub    esp,0x60
300349a9:	push   esi
300349aa:	mov    esi,ecx
300349ac:	push   edi
300349ad:	mov    eax,DWORD PTR [esi+0x4]
300349b0:	shr    eax,0x2
300349b3:	test   al,0x1
300349b5:	je     0x300349be
300349b7:	xor    eax,eax
300349b9:	jmp    0x30034ab6
300349be:	test   BYTE PTR [esi+0x4],0x80
300349c2:	je     0x300349b7
300349c4:	lea    ecx,[esp+0x10]
300349c8:	call   0x300366ee
300349cd:	push   0x30015f10
300349d2:	lea    ecx,[esp+0xc]
300349d6:	call   0x3000437e
300349db:	lea    eax,[esp+0x8]
300349df:	push   eax
300349e0:	lea    eax,[esi+0x2c]
300349e3:	push   eax
300349e4:	lea    ecx,[esp+0x38]
300349e8:	call   0x3000979d
300349ed:	lea    ecx,[esp+0x8]
300349f1:	call   0x300051a4
300349f6:	push   0x3000ac5c
300349fb:	lea    ecx,[esp+0xc]
300349ff:	call   0x3000437e
30034a04:	lea    eax,[esp+0x8]
30034a08:	push   eax
30034a09:	lea    edi,[esi+0x44]
30034a0c:	push   edi
30034a0d:	lea    ecx,[esp+0x38]
30034a11:	call   0x3000979d
30034a16:	lea    ecx,[esp+0x8]
30034a1a:	call   0x300051a4
30034a1f:	push   0x30015ed0
30034a24:	lea    ecx,[esp+0xc]
30034a28:	call   0x3000437e
30034a2d:	lea    eax,[esp+0x8]
30034a31:	push   eax
30034a32:	lea    eax,[esi+0x30]
30034a35:	push   eax
30034a36:	lea    ecx,[esp+0x38]
30034a3a:	call   0x3000979d
30034a3f:	lea    ecx,[esp+0x8]
30034a43:	call   0x300051a4
30034a48:	push   0x3001b2a8
30034a4d:	lea    ecx,[esp+0xc]
30034a51:	call   0x3000437e
30034a56:	push   0x24
30034a58:	pop    edx
30034a59:	lea    ecx,[esp+0xc]
30034a5d:	call   0x3001b660
30034a62:	lea    ecx,[esp+0x8]
30034a66:	push   ecx
30034a67:	push   eax
30034a68:	lea    ecx,[esp+0x38]
30034a6c:	call   0x3000979d
30034a71:	lea    ecx,[esp+0xc]
30034a75:	call   0x300051a4
30034a7a:	lea    ecx,[esp+0x8]
30034a7e:	call   0x300051a4
30034a83:	lea    eax,[esi+0x28]
30034a86:	push   eax
30034a87:	lea    ecx,[esp+0x14]
30034a8b:	call   0x3003678b
30034a90:	mov    esi,eax
30034a92:	test   esi,esi
30034a94:	js     0x30034aab
30034a96:	push   edi
30034a97:	lea    ecx,[esp+0x14]
30034a9b:	call   0x30036823
30034aa0:	lea    ecx,[esp+0x10]
30034aa4:	call   0x300367e6
30034aa9:	mov    esi,eax
30034aab:	lea    ecx,[esp+0x10]
30034aaf:	call   0x3003675c
30034ab4:	mov    eax,esi
30034ab6:	pop    edi
30034ab7:	pop    esi
30034ab8:	mov    esp,ebp
30034aba:	pop    ebp
30034abb:	ret    
30034abc:	push   ebp
30034abd:	mov    ebp,esp
30034abf:	push   ecx
30034ac0:	push   ecx
30034ac1:	push   esi
30034ac2:	mov    esi,ecx
30034ac4:	lea    ecx,[ebp-0x8]
30034ac7:	lea    eax,[esi+0x24]
30034aca:	push   eax
30034acb:	call   0x30004340
30034ad0:	lea    ecx,[ebp-0x8]
30034ad3:	call   0x30018854
30034ad8:	lea    eax,[ebp-0x8]
30034adb:	push   eax
30034adc:	lea    ecx,[ebp-0x4]
30034adf:	call   0x30004340
30034ae4:	mov    ecx,DWORD PTR [ebp+0x8]
30034ae7:	call   0x300051c8
30034aec:	lea    ecx,[ebp-0x4]
30034aef:	call   0x30033eab
30034af4:	push   DWORD PTR [esi+0x8]
30034af7:	push   DWORD PTR [ebp-0x4]
30034afa:	push   0x30034b28
30034aff:	push   0x30034b84
30034b04:	push   DWORD PTR [ebp+0x8]
30034b07:	call   0x30005153
30034b0c:	add    esp,0x14
30034b0f:	lea    ecx,[ebp-0x4]
30034b12:	call   0x300051a4
30034b17:	lea    ecx,[ebp-0x8]
30034b1a:	call   0x300051a4
30034b1f:	mov    eax,DWORD PTR [ebp+0x8]
30034b22:	pop    esi
30034b23:	leave  
30034b24:	ret    0x8
30034b27:	nop
30034b28:	push   ebx
30034b29:	add    BYTE PTR [edi+0x0],ch
30034b2c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30034b31:	add    BYTE PTR [ecx+0x0],ah
30034b34:	jb     0x30034b36
30034b36:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
30034b3b:	add    BYTE PTR [ecx+0x0],ch
30034b3e:	arpl   WORD PTR [eax],ax
30034b40:	jb     0x30034b42
30034b42:	outs   dx,DWORD PTR ds:[esi]
30034b43:	add    BYTE PTR [ebx+0x0],dh
30034b46:	outs   dx,DWORD PTR ds:[esi]
30034b47:	add    BYTE PTR [esi+0x0],ah
30034b4a:	je     0x30034b4c
30034b4c:	pop    esp
30034b4d:	add    BYTE PTR [esi+0x0],dl
30034b50:	imul   eax,DWORD PTR [eax],0x750073
30034b56:	popa   
30034b57:	add    BYTE PTR [eax+eax*1+0x53],ch
30034b5b:	add    BYTE PTR [eax+eax*1+0x75],dh
30034b5f:	add    BYTE PTR [eax+eax*1+0x69],ah
30034b63:	add    BYTE PTR [edi+0x0],ch
30034b66:	pop    esp
30034b67:	add    BYTE PTR [edx+0x0],bl
30034b6a:	add    BYTE PTR gs:[edx+0x0],dh
30034b6e:	outs   dx,DWORD PTR ds:[esi]
30034b6f:	add    BYTE PTR [ebx+0x0],dl
30034b72:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
30034b77:	add    BYTE PTR [eax+0x0],dh
30034b7a:	push   edx
30034b7b:	add    BYTE PTR [edi+0x0],ch
30034b7e:	outs   dx,DWORD PTR ds:[esi]
30034b7f:	add    BYTE PTR [eax+eax*1+0x0],dh
30034b83:	add    BYTE PTR ds:0x5c007300,ah
30034b89:	add    BYTE PTR ds:0x5f007300,ah
30034b8f:	add    BYTE PTR ds:0x6400,ah
30034b95:	add    BYTE PTR [ebx],dh
30034b97:	rol    BYTE PTR [eax-0x3d],0x55
30034b9b:	mov    ebp,esp
30034b9d:	sub    esp,0x24
30034ba0:	push   edi
30034ba1:	mov    edi,ecx
30034ba3:	test   BYTE PTR [edi+0x4],0x40
30034ba7:	jne    0x30034bad
30034ba9:	xor    eax,eax
30034bab:	jmp    0x30034c1e
30034bad:	push   ebx
30034bae:	lea    ebx,[edi+0x44]
30034bb1:	push   esi
30034bb2:	mov    ecx,ebx
30034bb4:	call   0x300162bb
30034bb9:	mov    esi,eax
30034bbb:	test   esi,esi
30034bbd:	js     0x30034c1c
30034bbf:	push   DWORD PTR [edi+0x28]
30034bc2:	call   DWORD PTR ds:0x30045638
30034bc8:	test   eax,eax
30034bca:	je     0x30034c1a
30034bcc:	push   ebx
30034bcd:	lea    ecx,[ebp-0x4]
30034bd0:	call   0x30004340
30034bd5:	lea    ecx,[ebp-0x8]
30034bd8:	call   0x300051c8
30034bdd:	push   eax
30034bde:	lea    eax,[ebp-0x4]
30034be1:	push   eax
30034be2:	lea    ecx,[ebp-0x24]
30034be5:	call   0x30016520
30034bea:	lea    ecx,[ebp-0x8]
30034bed:	call   0x300051a4
30034bf2:	lea    ecx,[ebp-0x4]
30034bf5:	mov    DWORD PTR [ebp-0x24],0x300092f0
30034bfc:	call   0x300051a4
30034c01:	lea    eax,[edi+0x28]
30034c04:	push   eax
30034c05:	lea    eax,[ebp-0x24]
30034c08:	push   eax
30034c09:	mov    ecx,edi
30034c0b:	call   0x3000aab1
30034c10:	lea    ecx,[ebp-0x24]
30034c13:	mov    esi,eax
30034c15:	call   0x30013f74
30034c1a:	mov    eax,esi
30034c1c:	pop    esi
30034c1d:	pop    ebx
30034c1e:	pop    edi
30034c1f:	leave  
30034c20:	ret    
30034c21:	push   ebp
30034c22:	mov    ebp,esp
30034c24:	push   esi
30034c25:	push   DWORD PTR [ebp+0xc]
30034c28:	mov    esi,ecx
30034c2a:	push   DWORD PTR [ebp+0x8]
30034c2d:	call   0x3001b216
30034c32:	test   eax,eax
30034c34:	js     0x30034c40
30034c36:	push   DWORD PTR [ebp+0xc]
30034c39:	mov    ecx,esi
30034c3b:	call   0x30034c45
30034c40:	pop    esi
30034c41:	pop    ebp
30034c42:	ret    0x8
30034c45:	push   ebp
30034c46:	mov    ebp,esp
30034c48:	push   esi
30034c49:	mov    esi,ecx
30034c4b:	mov    eax,DWORD PTR [esi+0x4]
30034c4e:	shr    eax,0x2
30034c51:	test   al,0x1
30034c53:	je     0x30034c59
30034c55:	xor    eax,eax
30034c57:	jmp    0x30034c96
30034c59:	cmp    BYTE PTR ds:0x300430f1,0x0
30034c60:	je     0x30034c75
30034c62:	call   0x30033b12
30034c67:	mov    edx,DWORD PTR [eax]
30034c69:	push   0x30034c9c
30034c6e:	push   0x3
30034c70:	mov    ecx,eax
30034c72:	call   DWORD PTR [edx+0x8]
30034c75:	lea    ecx,[esi+0x3c]
30034c78:	call   0x300162bb
30034c7d:	test   eax,eax
30034c7f:	js     0x30034c96
30034c81:	push   DWORD PTR [ebp+0x8]
30034c84:	mov    ecx,esi
30034c86:	call   0x3000a8be
30034c8b:	test   eax,eax
30034c8d:	js     0x30034c96
30034c8f:	mov    ecx,esi
30034c91:	call   0x30034b9a
30034c96:	pop    esi
30034c97:	pop    ebp
30034c98:	ret    0x4
30034c9b:	nop
30034c9c:	dec    ecx
30034c9d:	add    BYTE PTR [esi+0x0],ch
30034ca0:	imul   eax,DWORD PTR [eax],0x690074
30034ca6:	popa   
30034ca7:	add    BYTE PTR [eax+eax*1+0x69],ch
30034cab:	add    BYTE PTR [edx+0x0],bh
30034cae:	imul   eax,DWORD PTR [eax],0x67006e
30034cb4:	and    BYTE PTR [eax],al
30034cb6:	jbe    0x30034cb8
30034cb8:	outs   dx,DWORD PTR ds:[esi]
30034cb9:	add    BYTE PTR [eax+eax*1+0x61],ch
30034cbd:	add    BYTE PTR [eax+eax*1+0x69],dh
30034cc1:	add    BYTE PTR [eax+eax*1+0x65],ch
30034cc5:	add    BYTE PTR [eax],ah
30034cc7:	add    BYTE PTR [edx+0x0],dh
30034cca:	add    BYTE PTR gs:[edi+0x0],ah
30034cce:	imul   eax,DWORD PTR [eax],0x740073
30034cd4:	jb     0x30034cd6
30034cd6:	jns    0x30034cd8
30034cd8:	add    BYTE PTR [eax],al
30034cda:	push   ebp
30034cdb:	mov    ebp,esp
30034cdd:	sub    esp,0xc
30034ce0:	cmp    BYTE PTR ds:0x300430f1,0x0
30034ce7:	push   esi
30034ce8:	mov    esi,ecx
30034cea:	je     0x30034cff
30034cec:	call   0x30033b12
30034cf1:	mov    edx,DWORD PTR [eax]
30034cf3:	push   0x3002a814
30034cf8:	push   0x3
30034cfa:	mov    ecx,eax
30034cfc:	call   DWORD PTR [edx+0x8]
30034cff:	push   ebx
30034d00:	mov    ecx,esi
30034d02:	call   0x300349a0
30034d07:	mov    ecx,DWORD PTR [esi+0x4]
30034d0a:	shr    ecx,0x2
30034d0d:	mov    ebx,eax
30034d0f:	test   cl,0x1
30034d12:	je     0x30034d18
30034d14:	xor    esi,esi
30034d16:	jmp    0x30034d6b
30034d18:	and    DWORD PTR [ebp-0x8],0x0
30034d1c:	and    DWORD PTR [ebp-0x4],0x0
30034d20:	push   edi
30034d21:	push   DWORD PTR [esi+0x44]
30034d24:	lea    ecx,[ebp-0xc]
30034d27:	mov    DWORD PTR [ebp-0xc],0x80000001
30034d2e:	call   0x30016204
30034d33:	mov    edi,eax
30034d35:	test   edi,edi
30034d37:	jle    0x30034d42
30034d39:	movzx  edi,di
30034d3c:	or     edi,0x80070000
30034d42:	push   DWORD PTR [esi+0x3c]
30034d45:	lea    ecx,[ebp-0xc]
30034d48:	call   0x30016204
30034d4d:	mov    esi,eax
30034d4f:	test   esi,esi
30034d51:	jle    0x30034d5c
30034d53:	movzx  esi,si
30034d56:	or     esi,0x80070000
30034d5c:	test   edi,edi
30034d5e:	jns    0x30034d62
30034d60:	mov    esi,edi
30034d62:	lea    ecx,[ebp-0xc]
30034d65:	call   0x300051ae
30034d6a:	pop    edi
30034d6b:	test   ebx,ebx
30034d6d:	jns    0x30034d71
30034d6f:	mov    esi,ebx
30034d71:	cmp    BYTE PTR ds:0x300430f1,0x0
30034d78:	pop    ebx
30034d79:	je     0x30034d8c
30034d7b:	push   0x0
30034d7d:	push   0x3002a850
30034d82:	push   0x3
30034d84:	mov    edx,esi
30034d86:	pop    ecx
30034d87:	call   0x30033ac0
30034d8c:	pop    esi
30034d8d:	leave  
30034d8e:	ret    
30034d8f:	push   ebp
30034d90:	mov    ebp,esp
30034d92:	push   ecx
30034d93:	lea    ecx,[ebp-0x4]
30034d96:	call   0x300051c8
30034d9b:	cmp    DWORD PTR [ebp+0xc],0x0
30034d9f:	lea    eax,[ebp-0x4]
30034da2:	je     0x30034dba
30034da4:	push   DWORD PTR [ebp+0xc]
30034da7:	push   DWORD PTR [ebp+0x14]
30034daa:	push   0x30034de8
30034daf:	push   eax
30034db0:	call   0x30005153
30034db5:	add    esp,0x10
30034db8:	jmp    0x30034dcb
30034dba:	push   DWORD PTR [ebp+0x14]
30034dbd:	push   0x30034e40
30034dc2:	push   eax
30034dc3:	call   0x30005153
30034dc8:	add    esp,0xc
30034dcb:	push   DWORD PTR [ebp+0x10]
30034dce:	mov    edx,DWORD PTR [ebp+0x8]
30034dd1:	mov    ecx,DWORD PTR [ebp-0x4]
30034dd4:	call   0x30033b68
30034dd9:	lea    ecx,[ebp-0x4]
30034ddc:	call   0x300051a4
30034de1:	leave  
30034de2:	ret    0x10
30034de5:	nop
30034de6:	nop
30034de7:	nop
30034de8:	push   eax
30034de9:	add    BYTE PTR [ebx+0x0],ch
30034dec:	add    BYTE PTR [si+0x0],al
30034df0:	add    BYTE PTR gs:[esi+0x0],ah
30034df4:	and    BYTE PTR [eax],al
30034df6:	jae    0x30034df8
30034df8:	jns    0x30034dfa
30034dfa:	outs   dx,BYTE PTR ds:[esi]
30034dfb:	add    BYTE PTR [eax+eax*1+0x61],dh
30034dff:	add    BYTE PTR [eax+0x0],bh
30034e02:	and    BYTE PTR [eax],al
30034e04:	outs   dx,DWORD PTR ds:[esi]
30034e05:	add    BYTE PTR [edx+0x0],dh
30034e08:	and    BYTE PTR [eax],al
30034e0a:	dec    ecx
30034e0b:	add    BYTE PTR [edi],ch
30034e0d:	add    BYTE PTR [edi+0x0],cl
30034e10:	and    BYTE PTR [eax],al
30034e12:	add    BYTE PTR gs:[edx+0x0],dh
30034e16:	jb     0x30034e18
30034e18:	outs   dx,DWORD PTR ds:[esi]
30034e19:	add    BYTE PTR [edx+0x0],dh
30034e1c:	and    BYTE PTR [eax],al
30034e1e:	popa   
30034e1f:	add    BYTE PTR [eax+eax*1+0x20],dh
30034e23:	add    BYTE PTR [eax+eax*1+0x69],ch
30034e27:	add    BYTE PTR [esi+0x0],ch
30034e2a:	add    BYTE PTR gs:[eax],ah
30034e2d:	add    BYTE PTR ds:0x3a007500,ah
30034e33:	add    BYTE PTR [eax],ah
30034e35:	add    BYTE PTR ds:0x7300,ah
30034e3b:	add    BYTE PTR [eax+0x50909090],dl
30034e41:	add    BYTE PTR [ebx+0x0],ch
30034e44:	add    BYTE PTR [si+0x0],al
30034e48:	add    BYTE PTR gs:[esi+0x0],ah
30034e4c:	and    BYTE PTR [eax],al
30034e4e:	jae    0x30034e50
30034e50:	jns    0x30034e52
30034e52:	outs   dx,BYTE PTR ds:[esi]
30034e53:	add    BYTE PTR [eax+eax*1+0x61],dh
30034e57:	add    BYTE PTR [eax+0x0],bh
30034e5a:	and    BYTE PTR [eax],al
30034e5c:	outs   dx,DWORD PTR ds:[esi]
30034e5d:	add    BYTE PTR [edx+0x0],dh
30034e60:	and    BYTE PTR [eax],al
30034e62:	dec    ecx
30034e63:	add    BYTE PTR [edi],ch
30034e65:	add    BYTE PTR [edi+0x0],cl
30034e68:	and    BYTE PTR [eax],al
30034e6a:	add    BYTE PTR gs:[edx+0x0],dh
30034e6e:	jb     0x30034e70
30034e70:	outs   dx,DWORD PTR ds:[esi]
30034e71:	add    BYTE PTR [edx+0x0],dh
30034e74:	and    BYTE PTR [eax],al
30034e76:	popa   
30034e77:	add    BYTE PTR [eax+eax*1+0x20],dh
30034e7b:	add    BYTE PTR [eax+eax*1+0x69],ch
30034e7f:	add    BYTE PTR [esi+0x0],ch
30034e82:	add    BYTE PTR gs:[eax],ah
30034e85:	add    BYTE PTR ds:0x7500,ah
30034e8b:	add    BYTE PTR [ebx+0x18b04c1],al
30034e91:	jmp    DWORD PTR [eax+0x8]
30034e94:	push   ebp
30034e95:	mov    ebp,esp
30034e97:	push   ebx
30034e98:	push   esi
30034e99:	push   edi
30034e9a:	push   DWORD PTR [ebp+0x8]
30034e9d:	mov    edi,ecx
30034e9f:	lea    ecx,[ebp+0x8]
30034ea2:	call   0x300051c8
30034ea7:	push   eax
30034ea8:	mov    ecx,edi
30034eaa:	call   0x30016520
30034eaf:	lea    ecx,[ebp+0x8]
30034eb2:	call   0x300051a4
30034eb7:	lea    esi,[edi+0x1c]
30034eba:	mov    ecx,esi
30034ebc:	mov    DWORD PTR [edi],0x30009f2c
30034ec2:	call   0x300051c8
30034ec7:	and    DWORD PTR [edi+0x20],0x0
30034ecb:	and    DWORD PTR [edi+0x24],0x0
30034ecf:	mov    ebx,0x3001674c
30034ed4:	push   ebx
30034ed5:	call   0x300042e4
30034eda:	pop    ecx
30034edb:	push   eax
30034edc:	push   ebx
30034edd:	mov    ecx,esi
30034edf:	call   0x3000416f
30034ee4:	mov    ecx,esi
30034ee6:	call   0x3001650d
30034eeb:	mov    DWORD PTR [edi+0x20],eax
30034eee:	mov    eax,DWORD PTR [esi]
30034ef0:	mov    eax,DWORD PTR [eax-0xc]
30034ef3:	mov    DWORD PTR [edi+0x24],eax
30034ef6:	mov    eax,edi
30034ef8:	pop    edi
30034ef9:	pop    esi
30034efa:	pop    ebx
30034efb:	pop    ebp
30034efc:	ret    0x4
30034eff:	push   ebp
30034f00:	mov    ebp,esp
30034f02:	push   esi
30034f03:	mov    esi,ecx
30034f05:	call   0x30034f1f
30034f0a:	test   BYTE PTR [ebp+0x8],0x1
30034f0e:	je     0x30034f18
30034f10:	push   esi
30034f11:	call   DWORD PTR ds:0x300452ac
30034f17:	pop    ecx
30034f18:	mov    eax,esi
30034f1a:	pop    esi
30034f1b:	pop    ebp
30034f1c:	ret    0x4
30034f1f:	push   esi
30034f20:	push   edi
30034f21:	mov    edi,ecx
30034f23:	push   0xffffffff
30034f25:	lea    ecx,[edi+0x1c]
30034f28:	mov    DWORD PTR [edi],0x30009f2c
30034f2e:	call   0x30006c8c
30034f33:	lea    ecx,[edi+0x1c]
30034f36:	call   0x300051a4
30034f3b:	mov    ecx,edi
30034f3d:	pop    edi
30034f3e:	pop    esi
30034f3f:	jmp    0x30013f74
30034f44:	push   ebp
30034f45:	mov    ebp,esp
30034f47:	push   esi
30034f48:	push   DWORD PTR [ebp+0x8]
30034f4b:	mov    esi,ecx
30034f4d:	mov    edx,DWORD PTR [esi+0x18]
30034f50:	mov    ecx,DWORD PTR [esi+0x14]
30034f53:	call   0x3000a26e
30034f58:	test   al,al
30034f5a:	je     0x30034f60
30034f5c:	mov    cl,0x1
30034f5e:	jmp    0x30034f73
30034f60:	push   DWORD PTR [ebp+0x8]
30034f63:	mov    edx,DWORD PTR [esi+0x24]
30034f66:	mov    ecx,DWORD PTR [esi+0x20]
30034f69:	call   0x3000a26e
30034f6e:	test   al,al
30034f70:	setne  cl
30034f73:	xor    eax,eax
30034f75:	test   cl,cl
30034f77:	sete   al
30034f7a:	pop    esi
30034f7b:	pop    ebp
30034f7c:	ret    0x4
30034f7f:	push   ebp
30034f80:	mov    ebp,esp
30034f82:	push   esi
30034f83:	mov    esi,ecx
30034f85:	call   0x30034f9f
30034f8a:	test   BYTE PTR [ebp+0x8],0x1
30034f8e:	je     0x30034f98
30034f90:	push   esi
30034f91:	call   DWORD PTR ds:0x300452ac
30034f97:	pop    ecx
30034f98:	mov    eax,esi
30034f9a:	pop    esi
30034f9b:	pop    ebp
30034f9c:	ret    0x4
30034f9f:	push   esi
30034fa0:	mov    esi,ecx
30034fa2:	lea    ecx,[esi+0x6c]
30034fa5:	mov    DWORD PTR [esi],0x3000a1b8
30034fab:	call   0x300051a4
30034fb0:	mov    ecx,esi
30034fb2:	pop    esi
30034fb3:	jmp    0x3000ae91
30034fb8:	push   ebp
30034fb9:	mov    ebp,esp
30034fbb:	sub    esp,0x10
30034fbe:	push   ebx
30034fbf:	push   esi
30034fc0:	push   edi
30034fc1:	mov    edi,ecx
30034fc3:	xor    ecx,ecx
30034fc5:	mov    ebx,ecx
30034fc7:	lea    esi,[edi+0x6c]
30034fca:	mov    DWORD PTR [ebp-0x10],ebx
30034fcd:	mov    eax,DWORD PTR [esi]
30034fcf:	mov    DWORD PTR [ebp-0x4],ecx
30034fd2:	cmp    DWORD PTR [eax-0xc],ecx
30034fd5:	jne    0x30034fea
30034fd7:	mov    ecx,DWORD PTR [ebp+0x8]
30034fda:	push   0x3001674c
30034fdf:	call   0x300091ce
30034fe4:	test   eax,eax
30034fe6:	je     0x30035029
30034fe8:	xor    ecx,ecx
30034fea:	mov    eax,DWORD PTR [esi]
30034fec:	cmp    DWORD PTR [eax-0xc],ecx
30034fef:	je     0x3003502d
30034ff1:	push   0x7
30034ff3:	pop    ebx
30034ff4:	push   esi
30034ff5:	push   0x30008fc4
30034ffa:	push   0x30015e88
30034fff:	lea    ecx,[ebp-0x10]
30035002:	call   0x3000437e
30035007:	push   eax
30035008:	lea    eax,[ebp-0xc]
3003500b:	push   eax
3003500c:	call   0x3000ba45
30035011:	mov    edx,eax
30035013:	lea    ecx,[ebp-0x8]
30035016:	call   0x30009298
3003501b:	push   DWORD PTR [eax]
3003501d:	mov    ecx,DWORD PTR [ebp+0x8]
30035020:	call   0x300091ce
30035025:	test   eax,eax
30035027:	jne    0x3003502d
30035029:	mov    BYTE PTR [ebp-0x4],0x1
3003502d:	test   bl,0x4
30035030:	je     0x3003503d
30035032:	lea    ecx,[ebp-0x8]
30035035:	and    ebx,0xfffffffb
30035038:	call   0x300051a4
3003503d:	test   bl,0x2
30035040:	je     0x3003504d
30035042:	lea    ecx,[ebp-0xc]
30035045:	and    ebx,0xfffffffd
30035048:	call   0x300051a4
3003504d:	test   bl,0x1
30035050:	je     0x3003505a
30035052:	lea    ecx,[ebp-0x10]
30035055:	call   0x300051a4
3003505a:	xor    eax,eax
3003505c:	cmp    BYTE PTR [ebp-0x4],al
3003505f:	je     0x30035067
30035061:	mov    BYTE PTR [edi+0x68],0x1
30035065:	jmp    0x30035068
30035067:	inc    eax
30035068:	pop    edi
30035069:	pop    esi
3003506a:	pop    ebx
3003506b:	leave  
3003506c:	ret    0x4
3003506f:	xor    eax,eax
30035071:	cmp    BYTE PTR [ecx+0x68],al
30035074:	je     0x3003507a
30035076:	mov    BYTE PTR [ecx+0x68],al
30035079:	inc    eax
3003507a:	ret    
3003507b:	push   ebp
3003507c:	mov    ebp,esp
3003507e:	push   ecx
3003507f:	push   ebx
30035080:	mov    ebx,DWORD PTR [ebp+0x8]
30035083:	push   esi
30035084:	push   edi
30035085:	mov    DWORD PTR [ebp-0x4],ecx
30035088:	lea    edi,[ebx+0x4]
3003508b:	push   0x3000e6b0
30035090:	mov    ecx,edi
30035092:	xor    esi,esi
30035094:	call   0x300091ce
30035099:	test   eax,eax
3003509b:	jne    0x300350ae
3003509d:	mov    ecx,DWORD PTR [ebp-0x4]
300350a0:	lea    eax,[ebx+0xc]
300350a3:	push   eax
300350a4:	call   0x300355ec
300350a9:	jmp    0x300351de
300350ae:	push   0x3002a784
300350b3:	mov    ecx,edi
300350b5:	call   0x300091ce
300350ba:	test   eax,eax
300350bc:	jne    0x300350d6
300350be:	cmp    DWORD PTR [ebx+0x1c],0x1
300350c2:	mov    ecx,DWORD PTR [ebp-0x4]
300350c5:	sete   al
300350c8:	movzx  eax,al
300350cb:	push   eax
300350cc:	call   0x30035994
300350d1:	jmp    0x300351de
300350d6:	push   0x3000e654
300350db:	mov    ecx,edi
300350dd:	call   0x300091ce
300350e2:	test   eax,eax
300350e4:	jne    0x300350f1
300350e6:	mov    ecx,DWORD PTR [ebp-0x4]
300350e9:	mov    ecx,DWORD PTR [ecx+0x64]
300350ec:	add    ecx,0x40
300350ef:	jmp    0x3003516c
300350f1:	push   0x3002a768
300350f6:	mov    ecx,edi
300350f8:	call   0x300091ce
300350fd:	test   eax,eax
300350ff:	jne    0x30035111
30035101:	push   DWORD PTR [ebx+0x1c]
30035104:	mov    ecx,DWORD PTR [ebp-0x4]
30035107:	call   0x30035344
3003510c:	jmp    0x300351de
30035111:	push   0x3002a89c
30035116:	mov    ecx,edi
30035118:	call   0x300091ce
3003511d:	test   eax,eax
3003511f:	jne    0x30035132
30035121:	mov    ecx,DWORD PTR [ebp-0x4]
30035124:	lea    eax,[ebx+0xc]
30035127:	push   eax
30035128:	call   0x30035500
3003512d:	jmp    0x300351de
30035132:	push   0x3000e678
30035137:	mov    ecx,edi
30035139:	call   0x300091ce
3003513e:	test   eax,eax
30035140:	jne    0x30035153
30035142:	mov    ecx,DWORD PTR [ebp-0x4]
30035145:	lea    eax,[ebx+0xc]
30035148:	push   eax
30035149:	call   0x30035808
3003514e:	jmp    0x300351de
30035153:	push   0x30035208
30035158:	mov    ecx,edi
3003515a:	call   0x300091ce
3003515f:	test   eax,eax
30035161:	jne    0x3003517a
30035163:	mov    ecx,DWORD PTR [ebp-0x4]
30035166:	mov    ecx,DWORD PTR [ecx+0x64]
30035169:	add    ecx,0x48
3003516c:	lea    eax,[ebx+0xc]
3003516f:	push   eax
30035170:	call   0x300014c1
30035175:	jmp    0x300351fc
3003517a:	push   0x3000e6e0
3003517f:	mov    ecx,edi
30035181:	call   0x300091ce
30035186:	test   eax,eax
30035188:	jne    0x300351bb
3003518a:	mov    ecx,DWORD PTR [ebp-0x4]
3003518d:	mov    ecx,DWORD PTR [ecx+0x64]
30035190:	mov    eax,DWORD PTR [ecx+0x34]
30035193:	cmp    DWORD PTR [eax-0xc],esi
30035196:	je     0x3003519d
30035198:	add    ecx,0x3c
3003519b:	jmp    0x3003516c
3003519d:	cmp    BYTE PTR ds:0x300430f1,0x0
300351a4:	je     0x300351fc
300351a6:	call   0x30033b12
300351ab:	mov    edx,DWORD PTR [eax]
300351ad:	push   0x300352d0
300351b2:	push   0x2
300351b4:	mov    ecx,eax
300351b6:	call   DWORD PTR [edx+0x8]
300351b9:	jmp    0x300351fc
300351bb:	push   0x3002a8b8
300351c0:	mov    ecx,edi
300351c2:	call   0x300091ce
300351c7:	test   eax,eax
300351c9:	jne    0x300351e2
300351cb:	cmp    DWORD PTR [ebx+0x1c],0x1
300351cf:	mov    ecx,DWORD PTR [ebp-0x4]
300351d2:	sete   al
300351d5:	movzx  eax,al
300351d8:	push   eax
300351d9:	call   0x3003585c
300351de:	mov    esi,eax
300351e0:	jmp    0x300351fc
300351e2:	cmp    BYTE PTR ds:0x300430f1,0x0
300351e9:	je     0x300351fc
300351eb:	push   DWORD PTR [edi]
300351ed:	xor    edx,edx
300351ef:	push   0x30035240
300351f4:	push   0x2
300351f6:	pop    ecx
300351f7:	call   0x30033ac0
300351fc:	pop    edi
300351fd:	mov    eax,esi
300351ff:	pop    esi
30035200:	pop    ebx
30035201:	leave  
30035202:	ret    0x4
30035205:	nop
30035206:	nop
30035207:	nop
30035208:	push   ebp
30035209:	add    BYTE PTR [ebx+0x0],dh
3003520c:	add    BYTE PTR gs:[edx+0x0],dh
30035210:	inc    ebp
30035211:	add    BYTE PTR [eax+0x0],bh
30035214:	je     0x30035216
30035216:	add    BYTE PTR gs:[esi+0x0],ch
3003521a:	jae    0x3003521c
3003521c:	imul   eax,DWORD PTR [eax],0x6e006f
30035222:	jae    0x30035224
30035224:	push   edx
30035225:	add    BYTE PTR [edi+0x0],ch
30035228:	outs   dx,DWORD PTR ds:[esi]
30035229:	add    BYTE PTR [eax+eax*1+0x46],dh
3003522d:	add    BYTE PTR [edi+0x0],ch
30035230:	ins    BYTE PTR es:[edi],dx
30035231:	add    BYTE PTR [eax+eax*1+0x65],ah
30035235:	add    BYTE PTR [edx+0x0],dh
30035238:	add    BYTE PTR [eax],al
3003523a:	nop
3003523b:	nop
3003523c:	nop
3003523d:	nop
3003523e:	nop
3003523f:	nop
30035240:	dec    ecx
30035241:	add    BYTE PTR [edi+0x0],ah
30035244:	outs   dx,BYTE PTR ds:[esi]
30035245:	add    BYTE PTR [edi+0x0],ch
30035248:	jb     0x3003524a
3003524a:	imul   eax,DWORD PTR [eax],0x67006e
30035250:	and    BYTE PTR [eax],al
30035252:	jne    0x30035254
30035254:	outs   dx,BYTE PTR ds:[esi]
30035255:	add    BYTE PTR [edx+0x0],dh
30035258:	add    BYTE PTR gs:[ebx+0x0],ah
3003525c:	outs   dx,DWORD PTR ds:[esi]
3003525d:	add    BYTE PTR [edi+0x0],ah
30035260:	outs   dx,BYTE PTR ds:[esi]
30035261:	add    BYTE PTR [ecx+0x0],ch
30035264:	jp     0x30035266
30035266:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
3003526b:	add    BYTE PTR [ecx+0x0],ch
3003526e:	je     0x30035270
30035270:	add    BYTE PTR gs:[ebp+0x0],ch
30035274:	and    BYTE PTR [eax],al
30035276:	imul   eax,DWORD PTR [eax],0x20006e
3003527c:	ins    DWORD PTR es:[edi],dx
3003527d:	add    BYTE PTR [ecx+0x0],ah
30035280:	jae    0x30035282
30035282:	je     0x30035284
30035284:	add    BYTE PTR gs:[edx+0x0],dh
30035288:	and    BYTE PTR [eax],al
3003528a:	push   eax
3003528b:	add    BYTE PTR [ebx+0x0],ch
3003528e:	add    BYTE PTR [si+0x0],al
30035292:	add    BYTE PTR gs:[esi+0x0],ah
30035296:	and    BYTE PTR [eax],al
30035298:	data16 add BYTE PTR [ecx+0x0],ch
3003529c:	ins    BYTE PTR es:[edi],dx
3003529d:	add    BYTE PTR [ebp+0x0],ah
300352a0:	and    BYTE PTR [eax],al
300352a2:	imul   eax,DWORD PTR [eax],0x69006e
300352a8:	je     0x300352aa
300352aa:	imul   eax,DWORD PTR [eax],0x6c0061
300352b0:	imul   eax,DWORD PTR [eax],0x61007a
300352b6:	je     0x300352b8
300352b8:	imul   eax,DWORD PTR [eax],0x6e006f
300352be:	and    BYTE PTR [eax],al
300352c0:	jae    0x300352c2
300352c2:	add    BYTE PTR gs:[ebx+0x0],ah
300352c6:	je     0x300352c8
300352c8:	imul   eax,DWORD PTR [eax],0x6e006f
300352ce:	add    BYTE PTR [eax],al
300352d0:	push   ebp
300352d1:	add    BYTE PTR [ebx+0x0],dh
300352d4:	add    BYTE PTR gs:[edx+0x0],dh
300352d8:	inc    esi
300352d9:	add    BYTE PTR [ecx+0x0],ch
300352dc:	ins    BYTE PTR es:[edi],dx
300352dd:	add    BYTE PTR [ebp+0x0],ah
300352e0:	jae    0x300352e2
300352e2:	inc    esi
300352e3:	add    BYTE PTR [edi+0x0],ch
300352e6:	ins    BYTE PTR es:[edi],dx
300352e7:	add    BYTE PTR [eax+eax*1+0x65],ah
300352eb:	add    BYTE PTR [edx+0x0],dh
300352ee:	and    BYTE PTR [eax],al
300352f0:	imul   eax,DWORD PTR [eax],0x650074
300352f6:	ins    DWORD PTR es:[edi],dx
300352f7:	add    BYTE PTR [eax],ah
300352f9:	add    BYTE PTR [ecx+0x0],ch
300352fc:	add    BYTE PTR [bp+0x0],ch
30035300:	outs   dx,DWORD PTR ds:[esi]
30035301:	add    BYTE PTR [edx+0x0],dh
30035304:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30035309:	add    BYTE PTR [esi+0x0],ah
3003530c:	outs   dx,DWORD PTR ds:[esi]
3003530d:	add    BYTE PTR [edx+0x0],dh
30035310:	and    BYTE PTR [eax],al
30035312:	outs   dx,BYTE PTR ds:[esi]
30035313:	add    BYTE PTR [edi+0x0],ch
30035316:	outs   dx,BYTE PTR ds:[esi]
30035317:	add    BYTE PTR ds:0x6f004200,ch
3003531d:	add    BYTE PTR [ebp+0x0],dh
30035320:	je     0x30035322
30035322:	imul   eax,DWORD PTR [eax],0x750071
30035328:	add    BYTE PTR gs:[eax],ah
3003532b:	add    BYTE PTR [ecx+0x0],ah
3003532e:	jo     0x30035330
30035330:	jo     0x30035332
30035332:	ins    BYTE PTR es:[edi],dx
30035333:	add    BYTE PTR [ecx+0x0],ch
30035336:	arpl   WORD PTR [eax],ax
30035338:	popa   
30035339:	add    BYTE PTR [eax+eax*1+0x69],dh
3003533d:	add    BYTE PTR [edi+0x0],ch
30035340:	outs   dx,BYTE PTR ds:[esi]
30035341:	add    BYTE PTR [eax],al
30035343:	add    BYTE PTR [ebp-0x75],dl
30035346:	in     al,dx
30035347:	push   ecx
30035348:	push   ebx
30035349:	push   edi
3003534a:	or     edi,0xffffffff
3003534d:	cmp    DWORD PTR [ebp+0x8],0x2
30035351:	mov    ebx,ecx
30035353:	ja     0x3003535a
30035355:	mov    edi,DWORD PTR [ebp+0x8]
30035358:	jmp    0x300353a6
3003535a:	cmp    BYTE PTR ds:0x300430f1,0x0
30035361:	je     0x300353a6
30035363:	lea    ecx,[ebp-0x4]
30035366:	call   0x300051c8
3003536b:	push   DWORD PTR [ebp+0x8]
3003536e:	lea    eax,[ebp-0x4]
30035371:	push   0x3002a768
30035376:	push   0x30035418
3003537b:	push   eax
3003537c:	call   0x30005153
30035381:	add    esp,0x10
30035384:	cmp    BYTE PTR ds:0x300430f1,0x0
3003538b:	je     0x3003539e
3003538d:	call   0x30033b12
30035392:	push   DWORD PTR [ebp-0x4]
30035395:	mov    edx,DWORD PTR [eax]
30035397:	push   0x2
30035399:	mov    ecx,eax
3003539b:	call   DWORD PTR [edx+0x8]
3003539e:	lea    ecx,[ebp-0x4]
300353a1:	call   0x300051a4
300353a6:	mov    eax,DWORD PTR [ebx+0x64]
300353a9:	cmp    DWORD PTR [eax+0x18],0xffffffff
300353ad:	jne    0x300353b4
300353af:	mov    DWORD PTR [eax+0x18],edi
300353b2:	jmp    0x3003540b
300353b4:	cmp    BYTE PTR ds:0x300430f1,0x0
300353bb:	je     0x3003540b
300353bd:	cmp    edi,DWORD PTR [eax+0x18]
300353c0:	je     0x3003540b
300353c2:	lea    ecx,[ebp-0x4]
300353c5:	call   0x300051c8
300353ca:	mov    eax,DWORD PTR [ebx+0x64]
300353cd:	push   DWORD PTR [eax+0x18]
300353d0:	lea    eax,[ebp-0x4]
300353d3:	push   DWORD PTR [ebp+0x8]
300353d6:	push   0x3002a768
300353db:	push   0x30035490
300353e0:	push   eax
300353e1:	call   0x30005153
300353e6:	add    esp,0x14
300353e9:	cmp    BYTE PTR ds:0x300430f1,0x0
300353f0:	je     0x30035403
300353f2:	call   0x30033b12
300353f7:	push   DWORD PTR [ebp-0x4]
300353fa:	mov    edx,DWORD PTR [eax]
300353fc:	push   0x2
300353fe:	mov    ecx,eax
30035400:	call   DWORD PTR [edx+0x8]
30035403:	lea    ecx,[ebp-0x4]
30035406:	call   0x300051a4
3003540b:	pop    edi
3003540c:	xor    eax,eax
3003540e:	pop    ebx
3003540f:	leave  
30035410:	ret    0x4
30035413:	nop
30035414:	nop
30035415:	nop
30035416:	nop
30035417:	nop
30035418:	dec    ecx
30035419:	add    BYTE PTR [edi+0x0],ah
3003541c:	outs   dx,BYTE PTR ds:[esi]
3003541d:	add    BYTE PTR [edi+0x0],ch
30035420:	jb     0x30035422
30035422:	imul   eax,DWORD PTR [eax],0x67006e
30035428:	and    BYTE PTR [eax],al
3003542a:	and    eax,0x3d007300
3003542f:	add    BYTE PTR ds:0x20006400,ah
30035435:	add    BYTE PTR [ebp+0x0],ah
30035438:	outs   dx,BYTE PTR ds:[esi]
30035439:	add    BYTE PTR [eax+eax*1+0x72],dh
3003543d:	add    BYTE PTR [ecx+0x0],bh
30035440:	and    BYTE PTR [eax],al
30035442:	bound  eax,QWORD PTR [eax]
30035444:	add    BYTE PTR gs:[ebx+0x0],ah
30035448:	popa   
30035449:	add    BYTE PTR [ebp+0x0],dh
3003544c:	jae    0x3003544e
3003544e:	add    BYTE PTR gs:[eax],ah
30035451:	add    BYTE PTR [esi+0x0],dh
30035454:	popa   
30035455:	add    BYTE PTR [eax+eax*1+0x69],ch
30035459:	add    BYTE PTR [eax+eax*1+0x20],ah
3003545d:	add    BYTE PTR [esi+0x0],dh
30035460:	popa   
30035461:	add    BYTE PTR [eax+eax*1+0x75],ch
30035465:	add    BYTE PTR [ebp+0x0],ah
30035468:	jae    0x3003546a
3003546a:	and    BYTE PTR [eax],al
3003546c:	popa   
3003546d:	add    BYTE PTR [edx+0x0],dh
30035470:	add    BYTE PTR gs:[eax],ah
30035473:	add    BYTE PTR [eax],dh
30035475:	add    BYTE PTR [eax+eax*1],ch
30035478:	and    BYTE PTR [eax],al
3003547a:	xor    DWORD PTR [eax],eax
3003547c:	sub    al,0x0
3003547e:	and    BYTE PTR [eax],al
30035480:	outs   dx,DWORD PTR ds:[esi]
30035481:	add    BYTE PTR [edx+0x0],dh
30035484:	and    BYTE PTR [eax],al
30035486:	xor    al,BYTE PTR [eax]
30035488:	add    BYTE PTR [eax],al
3003548a:	nop
3003548b:	nop
3003548c:	nop
3003548d:	nop
3003548e:	nop
3003548f:	nop
30035490:	and    eax,0x3d007300
30035495:	add    BYTE PTR ds:0x20006400,ah
3003549b:	add    BYTE PTR [ebp+0x0],ah
3003549e:	outs   dx,BYTE PTR ds:[esi]
3003549f:	add    BYTE PTR [eax+eax*1+0x72],dh
300354a3:	add    BYTE PTR [ecx+0x0],bh
300354a6:	and    BYTE PTR [eax],al
300354a8:	add    BYTE PTR fs:[edi+0x0],ch
300354ac:	add    BYTE PTR gs:[ebx+0x0],dh
300354b0:	and    BYTE PTR [eax],al
300354b2:	outs   dx,BYTE PTR ds:[esi]
300354b3:	add    BYTE PTR [edi+0x0],ch
300354b6:	je     0x300354b8
300354b8:	and    BYTE PTR [eax],al
300354ba:	ins    DWORD PTR es:[edi],dx
300354bb:	add    BYTE PTR [ecx+0x0],ah
300354be:	je     0x300354c0
300354c0:	arpl   WORD PTR [eax],ax
300354c2:	push   0x76002000
300354c7:	add    BYTE PTR [ecx+0x0],ah
300354ca:	ins    BYTE PTR es:[edi],dx
300354cb:	add    BYTE PTR [ebp+0x0],dh
300354ce:	add    BYTE PTR gs:[eax],ah
300354d1:	add    BYTE PTR [ebx+0x0],dh
300354d4:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
300354d9:	add    BYTE PTR [edx+0x0],ah
300354dc:	jns    0x300354de
300354de:	and    BYTE PTR [eax],al
300354e0:	popa   
300354e1:	add    BYTE PTR [eax+0x0],dh
300354e4:	jo     0x300354e6
300354e6:	ins    BYTE PTR es:[edi],dx
300354e7:	add    BYTE PTR [ecx+0x0],ch
300354ea:	arpl   WORD PTR [eax],ax
300354ec:	popa   
300354ed:	add    BYTE PTR [eax+eax*1+0x69],dh
300354f1:	add    BYTE PTR [edi+0x0],ch
300354f4:	outs   dx,BYTE PTR ds:[esi]
300354f5:	add    BYTE PTR [edx],bh
300354f7:	add    BYTE PTR [eax],ah
300354f9:	add    BYTE PTR ds:0x6400,ah
300354ff:	add    BYTE PTR [ebp-0x75],dl
30035502:	in     al,dx
30035503:	push   edi
30035504:	mov    edi,ecx
30035506:	mov    ecx,DWORD PTR [edi+0x64]
30035509:	add    ecx,0x30
3003550c:	mov    eax,DWORD PTR [ecx]
3003550e:	cmp    DWORD PTR [eax-0xc],0x0
30035512:	jne    0x3003551e
30035514:	push   DWORD PTR [ebp+0x8]
30035517:	call   0x300014c1
3003551c:	jmp    0x3003557f
3003551e:	cmp    BYTE PTR ds:0x300430f1,0x0
30035525:	je     0x3003557f
30035527:	push   esi
30035528:	mov    esi,DWORD PTR [ebp+0x8]
3003552b:	push   DWORD PTR [esi]
3003552d:	call   0x3000927b
30035532:	test   eax,eax
30035534:	je     0x3003557e
30035536:	lea    ecx,[ebp+0x8]
30035539:	call   0x300051c8
3003553e:	mov    eax,DWORD PTR [edi+0x64]
30035541:	push   DWORD PTR [eax+0x30]
30035544:	lea    eax,[ebp+0x8]
30035547:	push   DWORD PTR [esi]
30035549:	push   0x3002a89c
3003554e:	push   0x30035588
30035553:	push   eax
30035554:	call   0x30005153
30035559:	add    esp,0x14
3003555c:	cmp    BYTE PTR ds:0x300430f1,0x0
30035563:	je     0x30035576
30035565:	call   0x30033b12
3003556a:	push   DWORD PTR [ebp+0x8]
3003556d:	mov    edx,DWORD PTR [eax]
3003556f:	push   0x2
30035571:	mov    ecx,eax
30035573:	call   DWORD PTR [edx+0x8]
30035576:	lea    ecx,[ebp+0x8]
30035579:	call   0x300051a4
3003557e:	pop    esi
3003557f:	xor    eax,eax
30035581:	pop    edi
30035582:	pop    ebp
30035583:	ret    0x4
30035586:	nop
30035587:	nop
30035588:	and    eax,0x3d007300
3003558d:	add    BYTE PTR ds:0x20007300,ah
30035593:	add    BYTE PTR [eax+eax*1+0x6f],ah
30035597:	add    BYTE PTR [ebp+0x0],ah
3003559a:	jae    0x3003559c
3003559c:	and    BYTE PTR [eax],al
3003559e:	outs   dx,BYTE PTR ds:[esi]
3003559f:	add    BYTE PTR [edi+0x0],ch
300355a2:	je     0x300355a4
300355a4:	and    BYTE PTR [eax],al
300355a6:	ins    DWORD PTR es:[edi],dx
300355a7:	add    BYTE PTR [ecx+0x0],ah
300355aa:	je     0x300355ac
300355ac:	arpl   WORD PTR [eax],ax
300355ae:	push   0x76002000
300355b3:	add    BYTE PTR [ecx+0x0],ah
300355b6:	ins    BYTE PTR es:[edi],dx
300355b7:	add    BYTE PTR [ebp+0x0],dh
300355ba:	add    BYTE PTR gs:[eax],ah
300355bd:	add    BYTE PTR [ebx+0x0],dh
300355c0:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
300355c5:	add    BYTE PTR [edx+0x0],ah
300355c8:	jns    0x300355ca
300355ca:	and    BYTE PTR [eax],al
300355cc:	popa   
300355cd:	add    BYTE PTR [eax+0x0],dh
300355d0:	jo     0x300355d2
300355d2:	ins    BYTE PTR es:[edi],dx
300355d3:	add    BYTE PTR [ecx+0x0],ch
300355d6:	arpl   WORD PTR [eax],ax
300355d8:	popa   
300355d9:	add    BYTE PTR [eax+eax*1+0x69],dh
300355dd:	add    BYTE PTR [edi+0x0],ch
300355e0:	outs   dx,BYTE PTR ds:[esi]
300355e1:	add    BYTE PTR [edx],bh
300355e3:	add    BYTE PTR [eax],ah
300355e5:	add    BYTE PTR ds:0x7300,ah
300355eb:	add    BYTE PTR [ebp-0x75],dl
300355ee:	in     al,dx
300355ef:	push   ebx
300355f0:	push   edi
300355f1:	mov    edi,ecx
300355f3:	mov    ecx,DWORD PTR [edi+0x64]
300355f6:	cmp    DWORD PTR [ecx+0x18],0x1
300355fa:	je     0x300356a6
30035600:	cmp    DWORD PTR [ecx+0x18],0x2
30035604:	je     0x300356a6
3003560a:	mov    edx,DWORD PTR [ebp+0x8]
3003560d:	lea    eax,[ecx+0x28]
30035610:	add    ecx,0x24
30035613:	push   eax
30035614:	call   0x300340a4
30035619:	mov    ebx,eax
3003561b:	test   ebx,ebx
3003561d:	js     0x300356c4
30035623:	mov    ecx,DWORD PTR [edi+0x64]
30035626:	push   esi
30035627:	lea    eax,[ecx+0x28]
3003562a:	push   eax
3003562b:	add    ecx,0x2c
3003562e:	call   0x300014c1
30035633:	push   0x30015f10
30035638:	lea    ecx,[ebp+0x8]
3003563b:	call   0x3000437e
30035640:	mov    eax,DWORD PTR [edi+0x64]
30035643:	add    eax,0x28
30035646:	push   eax
30035647:	lea    eax,[ebp+0x8]
3003564a:	push   eax
3003564b:	lea    ecx,[edi+0x2c]
3003564e:	call   0x3000979d
30035653:	lea    ecx,[ebp+0x8]
30035656:	call   0x300051a4
3003565b:	push   0x30015ed0
30035660:	lea    ecx,[ebp+0x8]
30035663:	call   0x3000437e
30035668:	mov    eax,DWORD PTR [edi+0x64]
3003566b:	add    eax,0x2c
3003566e:	push   eax
3003566f:	lea    eax,[ebp+0x8]
30035672:	push   eax
30035673:	lea    ecx,[edi+0x2c]
30035676:	call   0x3000979d
3003567b:	lea    ecx,[ebp+0x8]
3003567e:	call   0x300051a4
30035683:	cmp    BYTE PTR ds:0x300430f1,0x0
3003568a:	pop    esi
3003568b:	je     0x300356a2
3003568d:	mov    eax,DWORD PTR [edi+0x64]
30035690:	xor    edx,edx
30035692:	push   DWORD PTR [eax+0x28]
30035695:	push   0x30035770
3003569a:	push   0x3
3003569c:	pop    ecx
3003569d:	call   0x30033ac0
300356a2:	mov    eax,ebx
300356a4:	jmp    0x300356c4
300356a6:	cmp    BYTE PTR ds:0x300430f1,0x0
300356ad:	je     0x300356c2
300356af:	call   0x30033b12
300356b4:	mov    edx,DWORD PTR [eax]
300356b6:	push   0x300356d0
300356bb:	push   0x3
300356bd:	mov    ecx,eax
300356bf:	call   DWORD PTR [edx+0x8]
300356c2:	xor    eax,eax
300356c4:	pop    edi
300356c5:	pop    ebx
300356c6:	pop    ebp
300356c7:	ret    0x4
300356ca:	nop
300356cb:	nop
300356cc:	nop
300356cd:	nop
300356ce:	nop
300356cf:	nop
300356d0:	push   edx
300356d1:	add    BYTE PTR [ebp+0x0],ah
300356d4:	ins    BYTE PTR es:[edi],dx
300356d5:	add    BYTE PTR [ecx+0x0],ah
300356d8:	je     0x300356da
300356da:	imul   eax,DWORD PTR [eax],0x650076
300356e0:	push   edx
300356e1:	add    BYTE PTR [edi+0x0],ch
300356e4:	outs   dx,DWORD PTR ds:[esi]
300356e5:	add    BYTE PTR [eax+eax*1+0x46],dh
300356e9:	add    BYTE PTR [edi+0x0],ch
300356ec:	ins    BYTE PTR es:[edi],dx
300356ed:	add    BYTE PTR [eax+eax*1+0x65],ah
300356f1:	add    BYTE PTR [edx+0x0],dh
300356f4:	push   eax
300356f5:	add    BYTE PTR [ecx+0x0],ah
300356f8:	je     0x300356fa
300356fa:	push   0x69002000
300356ff:	add    BYTE PTR [eax+eax*1+0x65],dh
30035703:	add    BYTE PTR [ebp+0x0],ch
30035706:	and    BYTE PTR [eax],al
30035708:	imul   eax,DWORD PTR [eax],0x6e0067
3003570e:	outs   dx,DWORD PTR ds:[esi]
3003570f:	add    BYTE PTR [edx+0x0],dh
30035712:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30035717:	add    BYTE PTR [esi+0x0],ah
3003571a:	outs   dx,DWORD PTR ds:[esi]
3003571b:	add    BYTE PTR [edx+0x0],dh
3003571e:	and    BYTE PTR [eax],al
30035720:	outs   dx,BYTE PTR ds:[esi]
30035721:	add    BYTE PTR [edi+0x0],ch
30035724:	outs   dx,BYTE PTR ds:[esi]
30035725:	add    BYTE PTR ds:0x6f007000,ch
3003572b:	add    BYTE PTR [edx+0x0],dh
3003572e:	je     0x30035730
30035730:	popa   
30035731:	add    BYTE PTR [edx+0x0],ah
30035734:	ins    BYTE PTR es:[edi],dx
30035735:	add    BYTE PTR [ebp+0x0],ah
30035738:	and    BYTE PTR [eax],al
3003573a:	imul   eax,DWORD PTR [eax],0x73006e
30035740:	je     0x30035742
30035742:	popa   
30035743:	add    BYTE PTR [esi+0x0],ch
30035746:	arpl   WORD PTR [eax],ax
30035748:	add    BYTE PTR gs:[eax],ah
3003574b:	add    BYTE PTR [edi+0x0],ch
3003574e:	data16 add BYTE PTR [eax],ah
30035751:	add    BYTE PTR [ecx+0x0],ah
30035754:	jo     0x30035756
30035756:	jo     0x30035758
30035758:	ins    BYTE PTR es:[edi],dx
30035759:	add    BYTE PTR [ecx+0x0],ch
3003575c:	arpl   WORD PTR [eax],ax
3003575e:	popa   
3003575f:	add    BYTE PTR [eax+eax*1+0x69],dh
30035763:	add    BYTE PTR [edi+0x0],ch
30035766:	outs   dx,BYTE PTR ds:[esi]
30035767:	add    BYTE PTR [eax],al
30035769:	add    BYTE PTR [eax-0x6f6f6f70],dl
3003576f:	nop
30035770:	push   edx
30035771:	add    BYTE PTR [ebp+0x0],ah
30035774:	ins    BYTE PTR es:[edi],dx
30035775:	add    BYTE PTR [ecx+0x0],ah
30035778:	je     0x3003577a
3003577a:	imul   eax,DWORD PTR [eax],0x650076
30035780:	push   edx
30035781:	add    BYTE PTR [edi+0x0],ch
30035784:	outs   dx,DWORD PTR ds:[esi]
30035785:	add    BYTE PTR [eax+eax*1+0x46],dh
30035789:	add    BYTE PTR [edi+0x0],ch
3003578c:	ins    BYTE PTR es:[edi],dx
3003578d:	add    BYTE PTR [eax+eax*1+0x65],ah
30035791:	add    BYTE PTR [edx+0x0],dh
30035794:	push   eax
30035795:	add    BYTE PTR [ecx+0x0],ah
30035798:	je     0x3003579a
3003579a:	push   0x69002000
3003579f:	add    BYTE PTR [eax+eax*1+0x65],dh
300357a3:	add    BYTE PTR [ebp+0x0],ch
300357a6:	and    BYTE PTR [eax],al
300357a8:	add    BYTE PTR gs:[esi+0x0],ch
300357ac:	arpl   WORD PTR [eax],ax
300357ae:	outs   dx,DWORD PTR ds:[esi]
300357af:	add    BYTE PTR [ebp+0x0],dh
300357b2:	outs   dx,BYTE PTR ds:[esi]
300357b3:	add    BYTE PTR [eax+eax*1+0x65],dh
300357b7:	add    BYTE PTR [edx+0x0],dh
300357ba:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
300357bf:	add    BYTE PTR [eax],ah
300357c1:	add    BYTE PTR [eax+eax*1],ah
300357c4:	push   ebx
300357c5:	add    BYTE PTR [eax+0x0],ch
300357c8:	add    BYTE PTR gs:[eax+eax*1+0x6c],ch
300357cd:	add    BYTE PTR [esi+0x0],al
300357d0:	outs   dx,DWORD PTR ds:[esi]
300357d1:	add    BYTE PTR [eax+eax*1+0x64],ch
300357d5:	add    BYTE PTR [ebp+0x0],ah
300357d8:	jb     0x300357da
300357da:	and    al,0x0
300357dc:	and    BYTE PTR [eax],al
300357de:	popa   
300357df:	add    BYTE PTR [esi+0x0],ch
300357e2:	add    BYTE PTR fs:[eax],ah
300357e5:	add    BYTE PTR [eax+eax*1],ah
300357e8:	push   edx
300357e9:	add    BYTE PTR [edi+0x0],ch
300357ec:	outs   dx,DWORD PTR ds:[esi]
300357ed:	add    BYTE PTR [eax+eax*1+0x46],dh
300357f1:	add    BYTE PTR [edi+0x0],ch
300357f4:	ins    BYTE PTR es:[edi],dx
300357f5:	add    BYTE PTR [eax+eax*1+0x65],ah
300357f9:	add    BYTE PTR [edx+0x0],dh
300357fc:	and    al,0x0
300357fe:	and    BYTE PTR [eax],al
30035800:	jae    0x30035802
30035802:	add    BYTE PTR gs:[eax+eax*1+0x0],dh
30035807:	add    BYTE PTR [ebp-0x75],dl
3003580a:	in     al,dx
3003580b:	push   esi
3003580c:	push   edi
3003580d:	push   DWORD PTR [ebp+0x8]
30035810:	mov    edi,ecx
30035812:	mov    ecx,DWORD PTR [edi+0x64]
30035815:	add    ecx,0x44
30035818:	call   0x300014c1
3003581d:	push   0x3001b9f4
30035822:	lea    ecx,[ebp+0x8]
30035825:	call   0x3000437e
3003582a:	mov    eax,DWORD PTR [edi+0x64]
3003582d:	add    eax,0x44
30035830:	push   eax
30035831:	lea    eax,[ebp+0x8]
30035834:	push   eax
30035835:	lea    ecx,[edi+0x2c]
30035838:	call   0x3000979d
3003583d:	lea    ecx,[ebp+0x8]
30035840:	call   0x300051a4
30035845:	mov    eax,DWORD PTR [edi+0x64]
30035848:	add    eax,0x40
3003584b:	push   eax
3003584c:	lea    ecx,[edi+0x2c]
3003584f:	call   0x300093f0
30035854:	pop    edi
30035855:	xor    eax,eax
30035857:	pop    esi
30035858:	pop    ebp
30035859:	ret    0x4
3003585c:	push   ebp
3003585d:	mov    ebp,esp
3003585f:	cmp    BYTE PTR ds:0x300430f1,0x0
30035866:	push   ebx
30035867:	mov    bl,BYTE PTR [ebp+0x8]
3003586a:	push   esi
3003586b:	mov    esi,ecx
3003586d:	je     0x300358cb
3003586f:	mov    ecx,DWORD PTR [esi+0x64]
30035872:	mov    eax,DWORD PTR [ecx]
30035874:	call   DWORD PTR [eax+0x48]
30035877:	cmp    al,bl
30035879:	je     0x300358cb
3003587b:	lea    ecx,[ebp+0x8]
3003587e:	call   0x300051c8
30035883:	xor    eax,eax
30035885:	test   bl,bl
30035887:	setne  al
3003588a:	push   eax
3003588b:	xor    eax,eax
3003588d:	test   bl,bl
3003588f:	sete   al
30035892:	push   eax
30035893:	push   0x3002a8b8
30035898:	lea    eax,[ebp+0x8]
3003589b:	push   0x300358f0
300358a0:	push   eax
300358a1:	call   0x30005153
300358a6:	add    esp,0x14
300358a9:	cmp    BYTE PTR ds:0x300430f1,0x0
300358b0:	je     0x300358c3
300358b2:	call   0x30033b12
300358b7:	push   DWORD PTR [ebp+0x8]
300358ba:	mov    edx,DWORD PTR [eax]
300358bc:	push   0x3
300358be:	mov    ecx,eax
300358c0:	call   DWORD PTR [edx+0x8]
300358c3:	lea    ecx,[ebp+0x8]
300358c6:	call   0x300051a4
300358cb:	mov    eax,DWORD PTR [esi+0x64]
300358ce:	test   bl,bl
300358d0:	je     0x300358db
300358d2:	or     DWORD PTR [eax+0x10],0x1000
300358d9:	jmp    0x300358e2
300358db:	and    DWORD PTR [eax+0x10],0xffffefff
300358e2:	pop    esi
300358e3:	xor    eax,eax
300358e5:	pop    ebx
300358e6:	pop    ebp
300358e7:	ret    0x4
300358ea:	nop
300358eb:	nop
300358ec:	nop
300358ed:	nop
300358ee:	nop
300358ef:	nop
300358f0:	dec    edi
300358f1:	add    BYTE PTR [esi+0x0],dh
300358f4:	add    BYTE PTR gs:[edx+0x0],dh
300358f8:	jb     0x300358fa
300358fa:	imul   eax,DWORD PTR [eax],0x690064
30035900:	outs   dx,BYTE PTR ds:[esi]
30035901:	add    BYTE PTR [edi+0x0],ah
30035904:	and    BYTE PTR [eax],al
30035906:	and    eax,0x20007300
3003590b:	add    BYTE PTR [ebx+0x0],dh
3003590e:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
30035913:	add    BYTE PTR [ecx+0x0],ch
30035916:	outs   dx,BYTE PTR ds:[esi]
30035917:	add    BYTE PTR [edi+0x0],ah
3003591a:	add    BYTE PTR cs:[eax],ah
3003591d:	add    BYTE PTR [ecx+0x0],al
30035920:	jo     0x30035922
30035922:	jo     0x30035924
30035924:	ins    BYTE PTR es:[edi],dx
30035925:	add    BYTE PTR [ecx+0x0],ch
30035928:	arpl   WORD PTR [eax],ax
3003592a:	popa   
3003592b:	add    BYTE PTR [eax+eax*1+0x69],dh
3003592f:	add    BYTE PTR [edi+0x0],ch
30035932:	outs   dx,BYTE PTR ds:[esi]
30035933:	add    BYTE PTR [eax],ah
30035935:	add    BYTE PTR [ebx+0x0],dh
30035938:	jo     0x3003593a
3003593a:	add    BYTE PTR gs:[ebx+0x0],ah
3003593e:	imul   eax,DWORD PTR [eax],0x690066
30035944:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30035949:	add    BYTE PTR ds:0x2c006400,ah
3003594f:	add    BYTE PTR [eax],ah
30035951:	add    BYTE PTR [edx+0x0],ah
30035954:	jne    0x30035956
30035956:	je     0x30035958
30035958:	and    BYTE PTR [eax],al
3003595a:	ins    DWORD PTR es:[edi],dx
3003595b:	add    BYTE PTR [ecx+0x0],ah
3003595e:	jae    0x30035960
30035960:	je     0x30035962
30035962:	add    BYTE PTR gs:[edx+0x0],dh
30035966:	and    BYTE PTR [eax],al
30035968:	jo     0x3003596a
3003596a:	imul   eax,DWORD PTR [eax],0x67
3003596d:	add    BYTE PTR [eax+eax*1+0x65],ah
30035971:	add    BYTE PTR [esi+0x0],ah
30035974:	and    BYTE PTR [eax],al
30035976:	jae    0x30035978
30035978:	jo     0x3003597a
3003597a:	add    BYTE PTR gs:[ebx+0x0],ah
3003597e:	imul   eax,DWORD PTR [eax],0x690066
30035984:	add    BYTE PTR gs:[ebx+0x0],dh
30035988:	and    BYTE PTR [eax],al
3003598a:	and    eax,0x2e006400
3003598f:	add    BYTE PTR [edx],cl
30035991:	add    BYTE PTR [eax],al
30035993:	add    BYTE PTR [ebp-0x75],dl
30035996:	in     al,dx
30035997:	push   esi
30035998:	mov    esi,ecx
3003599a:	mov    eax,DWORD PTR [esi+0x64]
3003599d:	mov    edx,DWORD PTR [eax+0x10]
300359a0:	test   dl,0x20
300359a3:	je     0x300359b8
300359a5:	cmp    BYTE PTR [ebp+0x8],0x0
300359a9:	je     0x300359b0
300359ab:	or     edx,0x10
300359ae:	jmp    0x300359b3
300359b0:	and    edx,0xffffffef
300359b3:	mov    DWORD PTR [eax+0x10],edx
300359b6:	jmp    0x30035a28
300359b8:	cmp    BYTE PTR ds:0x300430f1,0x0
300359bf:	je     0x30035a28
300359c1:	push   ebx
300359c2:	mov    bl,BYTE PTR [ebp+0x8]
300359c5:	shr    edx,0x4
300359c8:	movzx  eax,bl
300359cb:	and    edx,0x1
300359ce:	xor    edx,eax
300359d0:	je     0x30035a27
300359d2:	lea    ecx,[ebp+0x8]
300359d5:	call   0x300051c8
300359da:	mov    eax,DWORD PTR [esi+0x64]
300359dd:	mov    eax,DWORD PTR [eax+0x10]
300359e0:	shr    eax,0x4
300359e3:	and    eax,0x1
300359e6:	push   eax
300359e7:	xor    eax,eax
300359e9:	test   bl,bl
300359eb:	setne  al
300359ee:	push   eax
300359ef:	push   0x3002a784
300359f4:	lea    eax,[ebp+0x8]
300359f7:	push   0x30035a30
300359fc:	push   eax
300359fd:	call   0x30005153
30035a02:	add    esp,0x14
30035a05:	cmp    BYTE PTR ds:0x300430f1,0x0
30035a0c:	je     0x30035a1f
30035a0e:	call   0x30033b12
30035a13:	push   DWORD PTR [ebp+0x8]
30035a16:	mov    edx,DWORD PTR [eax]
30035a18:	push   0x2
30035a1a:	mov    ecx,eax
30035a1c:	call   DWORD PTR [edx+0x8]
30035a1f:	lea    ecx,[ebp+0x8]
30035a22:	call   0x300051a4
30035a27:	pop    ebx
30035a28:	xor    eax,eax
30035a2a:	pop    esi
30035a2b:	pop    ebp
30035a2c:	ret    0x4
30035a2f:	nop
30035a30:	dec    ecx
30035a31:	add    BYTE PTR [edi+0x0],ah
30035a34:	outs   dx,BYTE PTR ds:[esi]
30035a35:	add    BYTE PTR [edi+0x0],ch
30035a38:	jb     0x30035a3a
30035a3a:	imul   eax,DWORD PTR [eax],0x67006e
30035a40:	and    BYTE PTR [eax],al
30035a42:	and    eax,0x3d007300
30035a47:	add    BYTE PTR ds:0x20006400,ah
30035a4d:	add    BYTE PTR [ebp+0x0],ah
30035a50:	outs   dx,BYTE PTR ds:[esi]
30035a51:	add    BYTE PTR [eax+eax*1+0x72],dh
30035a55:	add    BYTE PTR [ecx+0x0],bh
30035a58:	and    BYTE PTR [eax],al
30035a5a:	bound  eax,QWORD PTR [eax]
30035a5c:	add    BYTE PTR gs:[ebx+0x0],ah
30035a60:	popa   
30035a61:	add    BYTE PTR [ebp+0x0],dh
30035a64:	jae    0x30035a66
30035a66:	add    BYTE PTR gs:[eax],ah
30035a69:	add    BYTE PTR [eax+eax*1+0x68],dh
30035a6d:	add    BYTE PTR [ebp+0x0],ah
30035a70:	and    BYTE PTR [eax],al
30035a72:	popa   
30035a73:	add    BYTE PTR [eax+0x0],dh
30035a76:	jo     0x30035a78
30035a78:	ins    BYTE PTR es:[edi],dx
30035a79:	add    BYTE PTR [ecx+0x0],ch
30035a7c:	arpl   WORD PTR [eax],ax
30035a7e:	popa   
30035a7f:	add    BYTE PTR [eax+eax*1+0x69],dh
30035a83:	add    BYTE PTR [edi+0x0],ch
30035a86:	outs   dx,BYTE PTR ds:[esi]
30035a87:	add    BYTE PTR [eax],ah
30035a89:	add    BYTE PTR [edx+0x0],dh
30035a8c:	add    BYTE PTR gs:[ecx+0x0],dh
30035a90:	jne    0x30035a92
30035a92:	imul   eax,DWORD PTR [eax],0x650072
30035a98:	jae    0x30035a9a
30035a9a:	and    BYTE PTR [eax],al
30035a9c:	popa   
30035a9d:	add    BYTE PTR [eax],ah
30035a9f:	add    BYTE PTR [esi+0x0],dh
30035aa2:	popa   
30035aa3:	add    BYTE PTR [eax+eax*1+0x75],ch
30035aa7:	add    BYTE PTR [ebp+0x0],ah
30035aaa:	and    BYTE PTR [eax],al
30035aac:	outs   dx,DWORD PTR ds:[esi]
30035aad:	add    BYTE PTR [esi+0x0],ah
30035ab0:	and    BYTE PTR [eax],al
30035ab2:	and    eax,0x2e006400
30035ab7:	add    BYTE PTR [edx],cl
30035ab9:	add    BYTE PTR [eax],al
30035abb:	add    BYTE PTR [ebp-0x75],dl
30035abe:	in     al,dx
30035abf:	push   esi
30035ac0:	mov    esi,ecx
30035ac2:	call   0x30012df4
30035ac7:	push   DWORD PTR [ebp+0x8]
30035aca:	xor    eax,eax
30035acc:	mov    DWORD PTR [esi],0x30008204
30035ad2:	mov    DWORD PTR [esi+0x2c],eax
30035ad5:	mov    DWORD PTR [esi+0x30],eax
30035ad8:	mov    DWORD PTR [esi+0x34],eax
30035adb:	mov    ecx,esi
30035add:	mov    DWORD PTR [esi+0x38],eax
30035ae0:	call   0x30036c0f
30035ae5:	mov    eax,esi
30035ae7:	pop    esi
30035ae8:	pop    ebp
30035ae9:	ret    0x4
30035aec:	push   ebp
30035aed:	mov    ebp,esp
30035aef:	sub    esp,0xc
30035af2:	lea    ecx,[ebp-0x8]
30035af5:	push   esi
30035af6:	call   0x300051c8
30035afb:	mov    esi,0x104
30035b00:	push   esi
30035b01:	lea    ecx,[ebp-0x8]
30035b04:	call   0x30004286
30035b09:	push   eax
30035b0a:	push   esi
30035b0b:	call   DWORD PTR ds:0x300450e0
30035b11:	test   eax,eax
30035b13:	jne    0x30035b33
30035b15:	call   DWORD PTR ds:0x30045160
30035b1b:	mov    esi,eax
30035b1d:	test   esi,esi
30035b1f:	jle    0x30035bf6
30035b25:	movzx  esi,si
30035b28:	or     esi,0x80070000
30035b2e:	jmp    0x30035bf6
30035b33:	cmp    eax,esi
30035b35:	jb     0x30035b41
30035b37:	mov    esi,0x8000ffff
30035b3c:	jmp    0x30035bf6
30035b41:	lea    ecx,[ebp-0xc]
30035b44:	call   0x300051c8
30035b49:	push   esi
30035b4a:	lea    ecx,[ebp-0xc]
30035b4d:	call   0x30004286
30035b52:	push   eax
30035b53:	call   DWORD PTR ds:0x30045260
30035b59:	push   eax
30035b5a:	push   DWORD PTR [ebp+0x8]
30035b5d:	push   DWORD PTR [ebp-0x8]
30035b60:	call   DWORD PTR ds:0x300450dc
30035b66:	test   eax,eax
30035b68:	jne    0x30035b81
30035b6a:	call   DWORD PTR ds:0x30045160
30035b70:	mov    esi,eax
30035b72:	test   esi,esi
30035b74:	jle    0x30035bee
30035b76:	movzx  esi,si
30035b79:	or     esi,0x80070000
30035b7f:	jmp    0x30035bee
30035b81:	cmp    eax,0x6f
30035b84:	jne    0x30035b8d
30035b86:	mov    esi,0x8007006f
30035b8b:	jmp    0x30035bee
30035b8d:	push   DWORD PTR [ebp-0xc]
30035b90:	lea    ecx,[ebp-0x4]
30035b93:	call   0x300089ae
30035b98:	lea    ecx,[ebp-0x4]
30035b9b:	call   0x3000ebd7
30035ba0:	mov    ecx,eax
30035ba2:	cmp    ecx,0xffffffff
30035ba5:	jne    0x30035bae
30035ba7:	mov    esi,0x8000ffff
30035bac:	jmp    0x30035be6
30035bae:	mov    eax,DWORD PTR [ebp-0x4]
30035bb1:	mov    eax,DWORD PTR [eax-0xc]
30035bb4:	sub    eax,ecx
30035bb6:	push   eax
30035bb7:	push   ecx
30035bb8:	lea    eax,[ebp+0x8]
30035bbb:	push   eax
30035bbc:	lea    ecx,[ebp-0x4]
30035bbf:	call   0x30008d6e
30035bc4:	mov    ecx,DWORD PTR [ebp+0x10]
30035bc7:	lea    eax,[ebp+0x8]
30035bca:	push   eax
30035bcb:	call   0x300014c1
30035bd0:	lea    ecx,[ebp+0x8]
30035bd3:	call   0x300051a4
30035bd8:	mov    ecx,DWORD PTR [ebp+0xc]
30035bdb:	lea    eax,[ebp-0x8]
30035bde:	push   eax
30035bdf:	call   0x300014c1
30035be4:	xor    esi,esi
30035be6:	lea    ecx,[ebp-0x4]
30035be9:	call   0x300051a4
30035bee:	lea    ecx,[ebp-0xc]
30035bf1:	call   0x300051a4
30035bf6:	lea    ecx,[ebp-0x8]
30035bf9:	call   0x300051a4
30035bfe:	mov    eax,esi
30035c00:	pop    esi
30035c01:	leave  
30035c02:	ret    0xc
30035c05:	movzx  eax,WORD PTR [ecx+0x6]
30035c09:	push   esi
30035c0a:	movzx  esi,WORD PTR [edx+0x6]
30035c0e:	cmp    ax,si
30035c11:	jb     0x30035c48
30035c13:	cmp    si,ax
30035c16:	jb     0x30035c44
30035c18:	movzx  eax,WORD PTR [ecx+0x4]
30035c1c:	movzx  esi,WORD PTR [edx+0x4]
30035c20:	cmp    ax,si
30035c23:	jb     0x30035c48
30035c25:	cmp    si,ax
30035c28:	jb     0x30035c44
30035c2a:	movzx  eax,WORD PTR [ecx+0x2]
30035c2e:	movzx  esi,WORD PTR [edx+0x2]
30035c32:	cmp    ax,si
30035c35:	jb     0x30035c48
30035c37:	cmp    si,ax
30035c3a:	jb     0x30035c44
30035c3c:	mov    ax,WORD PTR [ecx]
30035c3f:	cmp    ax,WORD PTR [edx]
30035c42:	jb     0x30035c48
30035c44:	xor    eax,eax
30035c46:	pop    esi
30035c47:	ret    
30035c48:	xor    eax,eax
30035c4a:	inc    eax
30035c4b:	pop    esi
30035c4c:	ret    
30035c4d:	push   ebp
30035c4e:	mov    ebp,esp
30035c50:	push   ebx
30035c51:	push   esi
30035c52:	mov    esi,ecx
30035c54:	push   edi
30035c55:	cmp    DWORD PTR [esi+0x10],0x0
30035c59:	jne    0x30035c8b
30035c5b:	mov    edx,DWORD PTR [esi+0x14]
30035c5e:	push   0x44
30035c60:	lea    ecx,[esi+0xc]
30035c63:	call   0x30008f5d
30035c68:	mov    edx,eax
30035c6a:	test   edx,edx
30035c6c:	je     0x30035cb7
30035c6e:	mov    ecx,DWORD PTR [esi+0x14]
30035c71:	mov    eax,ecx
30035c73:	imul   eax,eax,0x44
30035c76:	add    eax,0xffffffc0
30035c79:	add    edx,eax
30035c7b:	jmp    0x30035c88
30035c7d:	mov    eax,DWORD PTR [esi+0x10]
30035c80:	mov    DWORD PTR [edx],eax
30035c82:	mov    DWORD PTR [esi+0x10],edx
30035c85:	sub    edx,0x44
30035c88:	dec    ecx
30035c89:	jns    0x30035c7d
30035c8b:	mov    edi,DWORD PTR [esi+0x10]
30035c8e:	mov    ebx,DWORD PTR [edi]
30035c90:	test   edi,edi
30035c92:	je     0x30035c9f
30035c94:	push   DWORD PTR [ebp+0x8]
30035c97:	lea    ecx,[edi+0x8]
30035c9a:	call   0x30035abc
30035c9f:	mov    ecx,DWORD PTR [ebp+0xc]
30035ca2:	mov    DWORD PTR [esi+0x10],ebx
30035ca5:	and    DWORD PTR [edi],0x0
30035ca8:	mov    DWORD PTR [edi+0x4],ecx
30035cab:	inc    DWORD PTR [esi+0x8]
30035cae:	mov    eax,edi
30035cb0:	pop    edi
30035cb1:	pop    esi
30035cb2:	pop    ebx
30035cb3:	pop    ebp
30035cb4:	ret    0xc
30035cb7:	push   0x8007000e
30035cbc:	call   0x3002ae0b
30035cc1:	int3   
30035cc2:	push   ebp
30035cc3:	mov    ebp,esp
30035cc5:	push   esi
30035cc6:	mov    esi,ecx
30035cc8:	call   0x30035ce2
30035ccd:	test   BYTE PTR [ebp+0x8],0x1
30035cd1:	je     0x30035cdb
30035cd3:	push   esi
30035cd4:	call   DWORD PTR ds:0x300452ac
30035cda:	pop    ecx
30035cdb:	mov    eax,esi
30035cdd:	pop    esi
30035cde:	pop    ebp
30035cdf:	ret    0x4
30035ce2:	push   esi
30035ce3:	mov    esi,ecx
30035ce5:	lea    ecx,[esi+0x70]
30035ce8:	mov    DWORD PTR [esi],0x30009f38
30035cee:	call   0x300051a4
30035cf3:	lea    ecx,[esi+0x64]
30035cf6:	call   0x300051ae
30035cfb:	mov    ecx,esi
30035cfd:	pop    esi
30035cfe:	jmp    0x3000ae91
30035d03:	push   ebp
30035d04:	mov    ebp,esp
30035d06:	push   ebx
30035d07:	push   esi
30035d08:	mov    esi,DWORD PTR [ebp+0x8]
30035d0b:	push   edi
30035d0c:	xor    ebx,ebx
30035d0e:	push   ebx
30035d0f:	mov    edi,ecx
30035d11:	push   0x30008fc4
30035d16:	mov    ecx,esi
30035d18:	call   0x3000923c
30035d1d:	lea    edx,[eax+0x1]
30035d20:	mov    eax,DWORD PTR [esi]
30035d22:	mov    ecx,esi
30035d24:	mov    eax,DWORD PTR [eax-0xc]
30035d27:	sub    eax,edx
30035d29:	push   eax
30035d2a:	push   edx
30035d2b:	lea    eax,[ebp+0x8]
30035d2e:	push   eax
30035d2f:	call   0x30008d6e
30035d34:	lea    eax,[ebp+0x8]
30035d37:	lea    esi,[edi+0x70]
30035d3a:	push   eax
30035d3b:	mov    ecx,esi
30035d3d:	call   0x300014c1
30035d42:	lea    ecx,[ebp+0x8]
30035d45:	call   0x300051a4
30035d4a:	push   0x2001f
30035d4f:	push   DWORD PTR [esi]
30035d51:	lea    ecx,[edi+0x64]
30035d54:	push   0x80000001
30035d59:	mov    WORD PTR [edi+0x74],bx
30035d5d:	call   0x300051d9
30035d62:	mov    ecx,eax
30035d64:	sub    ecx,ebx
30035d66:	je     0x30035daf
30035d68:	dec    ecx
30035d69:	dec    ecx
30035d6a:	je     0x30035d8d
30035d6c:	test   eax,eax
30035d6e:	jle    0x30035d78
30035d70:	movzx  eax,ax
30035d73:	or     eax,0x80070000
30035d78:	push   DWORD PTR [esi]
30035d7a:	mov    edx,eax
30035d7c:	mov    ecx,0x30035e14
30035d81:	call   0x30033b68
30035d86:	mov    eax,0x80004005
30035d8b:	jmp    0x30035db1
30035d8d:	cmp    BYTE PTR ds:0x300430f1,bl
30035d93:	je     0x30035da6
30035d95:	push   DWORD PTR [esi]
30035d97:	xor    edx,edx
30035d99:	push   0x30035db8
30035d9e:	push   0x2
30035da0:	pop    ecx
30035da1:	call   0x30033ac0
30035da6:	xor    eax,eax
30035da8:	mov    BYTE PTR [edi+0x75],0x1
30035dac:	inc    eax
30035dad:	jmp    0x30035db1
30035daf:	xor    eax,eax
30035db1:	pop    edi
30035db2:	pop    esi
30035db3:	pop    ebx
30035db4:	pop    ebp
30035db5:	ret    0x4
30035db8:	push   eax
30035db9:	add    BYTE PTR [ebx+0x0],ch
30035dbc:	add    BYTE PTR [di+0x0],dl
30035dc0:	outs   dx,BYTE PTR ds:[esi]
30035dc1:	add    BYTE PTR [eax+eax*1+0x65],al
30035dc5:	add    BYTE PTR [esi+0x0],ah
30035dc8:	cmp    al,BYTE PTR [eax]
30035dca:	and    BYTE PTR [eax],al
30035dcc:	inc    esp
30035dcd:	add    BYTE PTR [ecx+0x0],ch
30035dd0:	add    BYTE PTR fs:[eax],ah
30035dd3:	add    BYTE PTR [esi+0x0],ch
30035dd6:	outs   dx,DWORD PTR ds:[esi]
30035dd7:	add    BYTE PTR [eax+eax*1+0x20],dh
30035ddb:	add    BYTE PTR [esi+0x0],ah
30035dde:	imul   eax,DWORD PTR [eax],0x64006e
30035de4:	and    BYTE PTR [eax],al
30035de6:	imul   eax,DWORD PTR [eax],0x65
30035de9:	add    BYTE PTR [ecx+0x0],bh
30035dec:	and    BYTE PTR [eax],al
30035dee:	je     0x30035df0
30035df0:	outs   dx,DWORD PTR ds:[esi]
30035df1:	add    BYTE PTR [eax],ah
30035df3:	add    BYTE PTR [edi+0x0],ch
30035df6:	jo     0x30035df8
30035df8:	add    BYTE PTR gs:[esi+0x0],ch
30035dfc:	add    BYTE PTR cs:[eax],ah
30035dff:	add    BYTE PTR [ebx+0x0],dl
30035e02:	imul   eax,DWORD PTR [eax],0x69
30035e05:	add    BYTE PTR [eax+0x0],dh
30035e08:	jo     0x30035e0a
30035e0a:	imul   eax,DWORD PTR [eax],0x67006e
30035e10:	add    BYTE PTR [eax],al
30035e12:	nop
30035e13:	nop
30035e14:	push   eax
30035e15:	add    BYTE PTR [ebx+0x0],ch
30035e18:	add    BYTE PTR [di+0x0],dl
30035e1c:	outs   dx,BYTE PTR ds:[esi]
30035e1d:	add    BYTE PTR [eax+eax*1+0x65],al
30035e21:	add    BYTE PTR [esi+0x0],ah
30035e24:	cmp    al,BYTE PTR [eax]
30035e26:	and    BYTE PTR [eax],al
30035e28:	inc    ebp
30035e29:	add    BYTE PTR [edx+0x0],dh
30035e2c:	jb     0x30035e2e
30035e2e:	outs   dx,DWORD PTR ds:[esi]
30035e2f:	add    BYTE PTR [edx+0x0],dh
30035e32:	and    BYTE PTR [eax],al
30035e34:	outs   dx,DWORD PTR ds:[esi]
30035e35:	add    BYTE PTR [eax+0x0],dh
30035e38:	add    BYTE PTR gs:[esi+0x0],ch
30035e3c:	imul   eax,DWORD PTR [eax],0x67006e
30035e42:	and    BYTE PTR [eax],al
30035e44:	imul   eax,DWORD PTR [eax],0x65
30035e47:	add    BYTE PTR [ecx+0x0],bh
30035e4a:	add    BYTE PTR [eax],al
30035e4c:	push   ebp
30035e4d:	mov    ebp,esp
30035e4f:	sub    esp,0x10
30035e52:	push   ebx
30035e53:	mov    ebx,ecx
30035e55:	cmp    BYTE PTR [ebx+0x75],0x0
30035e59:	je     0x30035e62
30035e5b:	xor    eax,eax
30035e5d:	jmp    0x30036065
30035e62:	cmp    BYTE PTR [ebx+0x74],0x0
30035e66:	push   esi
30035e67:	push   edi
30035e68:	jne    0x30035f1e
30035e6e:	lea    ecx,[ebx+0x64]
30035e71:	call   0x300051ae
30035e76:	lea    edi,[ebx+0x70]
30035e79:	push   0x5c
30035e7b:	push   DWORD PTR [edi]
30035e7d:	call   DWORD PTR ds:0x30045328
30035e83:	mov    esi,eax
30035e85:	pop    ecx
30035e86:	pop    ecx
30035e87:	test   esi,esi
30035e89:	jne    0x30035e90
30035e8b:	or     esi,0xffffffff
30035e8e:	jmp    0x30035e94
30035e90:	sub    esi,DWORD PTR [edi]
30035e92:	sar    esi,1
30035e94:	push   esi
30035e95:	lea    eax,[ebp-0x4]
30035e98:	push   eax
30035e99:	mov    ecx,edi
30035e9b:	call   0x30008de3
30035ea0:	push   0x2001f
30035ea5:	push   DWORD PTR [ebp-0x4]
30035ea8:	lea    ecx,[ebx+0x64]
30035eab:	push   0x80000001
30035eb0:	call   0x300051d9
30035eb5:	test   eax,eax
30035eb7:	jne    0x30035f85
30035ebd:	mov    eax,DWORD PTR [edi]
30035ebf:	lea    edx,[esi+0x1]
30035ec2:	mov    eax,DWORD PTR [eax-0xc]
30035ec5:	sub    eax,edx
30035ec7:	push   eax
30035ec8:	push   edx
30035ec9:	lea    eax,[ebp-0x8]
30035ecc:	push   eax
30035ecd:	mov    ecx,edi
30035ecf:	call   0x30008d6e
30035ed4:	push   DWORD PTR [ebp-0x8]
30035ed7:	lea    ecx,[ebx+0x64]
30035eda:	call   0x30016204
30035edf:	lea    ecx,[ebp-0x8]
30035ee2:	mov    esi,eax
30035ee4:	call   0x300051a4
30035ee9:	test   esi,esi
30035eeb:	jne    0x30035f85
30035ef1:	cmp    BYTE PTR ds:0x300430f1,0x0
30035ef8:	je     0x30035f0b
30035efa:	push   DWORD PTR [edi]
30035efc:	xor    edx,edx
30035efe:	push   0x300360d0
30035f03:	push   0x3
30035f05:	pop    ecx
30035f06:	call   0x30033ac0
30035f0b:	lea    eax,[ebp-0x4]
30035f0e:	push   eax
30035f0f:	mov    ecx,edi
30035f11:	call   0x300014c1
30035f16:	lea    ecx,[ebp-0x4]
30035f19:	call   0x300051a4
30035f1e:	xor    ecx,ecx
30035f20:	push   ecx
30035f21:	push   ecx
30035f22:	push   ecx
30035f23:	push   ecx
30035f24:	lea    eax,[ebp-0x10]
30035f27:	push   eax
30035f28:	push   ecx
30035f29:	push   ecx
30035f2a:	lea    eax,[ebp-0xc]
30035f2d:	push   eax
30035f2e:	push   ecx
30035f2f:	push   ecx
30035f30:	lea    esi,[ebx+0x64]
30035f33:	push   ecx
30035f34:	push   DWORD PTR [esi]
30035f36:	call   DWORD PTR ds:0x30045078
30035f3c:	test   eax,eax
30035f3e:	jle    0x30035f4a
30035f40:	movzx  eax,ax
30035f43:	or     eax,0x80070000
30035f48:	test   eax,eax
30035f4a:	js     0x30036063
30035f50:	mov    ecx,esi
30035f52:	call   0x300051ae
30035f57:	cmp    DWORD PTR [ebp-0xc],0x0
30035f5b:	ja     0x3003605a
30035f61:	cmp    DWORD PTR [ebp-0x10],0x0
30035f65:	ja     0x3003605a
30035f6b:	lea    edi,[ebx+0x70]
30035f6e:	push   0x5c
30035f70:	push   DWORD PTR [edi]
30035f72:	call   DWORD PTR ds:0x30045328
30035f78:	mov    esi,eax
30035f7a:	pop    ecx
30035f7b:	pop    ecx
30035f7c:	test   esi,esi
30035f7e:	jne    0x30035fba
30035f80:	or     esi,0xffffffff
30035f83:	jmp    0x30035fbe
30035f85:	cmp    BYTE PTR ds:0x300430f1,0x0
30035f8c:	mov    ecx,DWORD PTR [edi]
30035f8e:	mov    esi,0x80004005
30035f93:	je     0x3003604e
30035f99:	call   0x30033b12
30035f9e:	mov    edx,DWORD PTR [eax]
30035fa0:	push   esi
30035fa1:	test   ecx,ecx
30035fa3:	jne    0x30035faf
30035fa5:	push   0x30036068
30035faa:	jmp    0x30036039
30035faf:	push   ecx
30035fb0:	push   0x30036068
30035fb5:	jmp    0x30036048
30035fba:	sub    esi,DWORD PTR [edi]
30035fbc:	sar    esi,1
30035fbe:	push   esi
30035fbf:	lea    eax,[ebp-0x4]
30035fc2:	push   eax
30035fc3:	mov    ecx,edi
30035fc5:	call   0x30008de3
30035fca:	push   0x2001f
30035fcf:	push   DWORD PTR [ebp-0x4]
30035fd2:	lea    ecx,[ebx+0x64]
30035fd5:	push   0x80000001
30035fda:	call   0x300051d9
30035fdf:	test   eax,eax
30035fe1:	jne    0x30036017
30035fe3:	mov    eax,DWORD PTR [edi]
30035fe5:	lea    ecx,[esi+0x1]
30035fe8:	mov    eax,DWORD PTR [eax-0xc]
30035feb:	sub    eax,ecx
30035fed:	push   eax
30035fee:	push   ecx
30035fef:	lea    eax,[ebp-0x8]
30035ff2:	push   eax
30035ff3:	mov    ecx,edi
30035ff5:	call   0x30008d6e
30035ffa:	push   DWORD PTR [ebp-0x8]
30035ffd:	lea    ecx,[ebx+0x64]
30036000:	call   0x3001d8a4
30036005:	lea    ecx,[ebp-0x8]
30036008:	mov    esi,eax
3003600a:	call   0x300051a4
3003600f:	test   esi,esi
30036011:	je     0x30035ef1
30036017:	cmp    BYTE PTR ds:0x300430f1,0x0
3003601e:	mov    ecx,DWORD PTR [ebx+0x70]
30036021:	mov    esi,0x80004005
30036026:	je     0x3003604e
30036028:	call   0x30033b12
3003602d:	mov    edx,DWORD PTR [eax]
3003602f:	push   esi
30036030:	test   ecx,ecx
30036032:	jne    0x30036042
30036034:	push   0x30036100
30036039:	push   0x1
3003603b:	mov    ecx,eax
3003603d:	call   DWORD PTR [edx+0x4]
30036040:	jmp    0x3003604e
30036042:	push   ecx
30036043:	push   0x30036100
30036048:	push   0x1
3003604a:	mov    ecx,eax
3003604c:	call   DWORD PTR [edx]
3003604e:	lea    ecx,[ebp-0x4]
30036051:	call   0x300051a4
30036056:	mov    eax,esi
30036058:	jmp    0x30036063
3003605a:	mov    ecx,esi
3003605c:	call   0x300051ae
30036061:	xor    eax,eax
30036063:	pop    edi
30036064:	pop    esi
30036065:	pop    ebx
30036066:	leave  
30036067:	ret    
30036068:	push   eax
30036069:	add    BYTE PTR [ebx+0x0],ch
3003606c:	add    BYTE PTR [di+0x0],dl
30036070:	outs   dx,BYTE PTR ds:[esi]
30036071:	add    BYTE PTR [eax+eax*1+0x65],al
30036075:	add    BYTE PTR [esi+0x0],ah
30036078:	cmp    al,BYTE PTR [eax]
3003607a:	and    BYTE PTR [eax],al
3003607c:	add    BYTE PTR gs:[edx+0x0],dh
30036080:	jb     0x30036082
30036082:	outs   dx,DWORD PTR ds:[esi]
30036083:	add    BYTE PTR [edx+0x0],dh
30036086:	and    BYTE PTR [eax],al
30036088:	outs   dx,DWORD PTR ds:[esi]
30036089:	add    BYTE PTR [ebx+0x0],ah
3003608c:	arpl   WORD PTR [eax],ax
3003608e:	jne    0x30036090
30036090:	jb     0x30036092
30036092:	jb     0x30036094
30036094:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30036099:	add    BYTE PTR [eax+eax*1+0x72],dh
3003609d:	add    BYTE PTR [ecx+0x0],bh
300360a0:	imul   eax,DWORD PTR [eax],0x67006e
300360a6:	and    BYTE PTR [eax],al
300360a8:	je     0x300360aa
300360aa:	outs   dx,DWORD PTR ds:[esi]
300360ab:	add    BYTE PTR [eax],ah
300360ad:	add    BYTE PTR [eax+eax*1+0x65],ah
300360b1:	add    BYTE PTR [eax+eax*1+0x65],ch
300360b5:	add    BYTE PTR [eax+eax*1+0x65],dh
300360b9:	add    BYTE PTR [eax],ah
300360bb:	add    BYTE PTR [esi+0x0],ah
300360be:	jne    0x300360c0
300360c0:	ins    BYTE PTR es:[edi],dx
300360c1:	add    BYTE PTR [eax+eax*1+0x20],ch
300360c5:	add    BYTE PTR [ebx+0x0],ch
300360c8:	add    BYTE PTR gs:[ecx+0x0],bh
300360cc:	add    BYTE PTR [eax],al
300360ce:	nop
300360cf:	nop
300360d0:	push   eax
300360d1:	add    BYTE PTR [ebx+0x0],ch
300360d4:	add    BYTE PTR [di+0x0],dl
300360d8:	outs   dx,BYTE PTR ds:[esi]
300360d9:	add    BYTE PTR [eax+eax*1+0x65],al
300360dd:	add    BYTE PTR [esi+0x0],ah
300360e0:	cmp    al,BYTE PTR [eax]
300360e2:	and    BYTE PTR [eax],al
300360e4:	inc    esp
300360e5:	add    BYTE PTR [ebp+0x0],ah
300360e8:	ins    BYTE PTR es:[edi],dx
300360e9:	add    BYTE PTR [ebp+0x0],ah
300360ec:	je     0x300360ee
300360ee:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
300360f3:	add    BYTE PTR [ebx+0x0],ch
300360f6:	add    BYTE PTR gs:[ecx+0x0],bh
300360fa:	add    BYTE PTR [eax],al
300360fc:	nop
300360fd:	nop
300360fe:	nop
300360ff:	nop
30036100:	push   eax
30036101:	add    BYTE PTR [ebx+0x0],ch
30036104:	add    BYTE PTR [di+0x0],dl
30036108:	outs   dx,BYTE PTR ds:[esi]
30036109:	add    BYTE PTR [eax+eax*1+0x65],al
3003610d:	add    BYTE PTR [esi+0x0],ah
30036110:	cmp    al,BYTE PTR [eax]
30036112:	and    BYTE PTR [eax],al
30036114:	add    BYTE PTR gs:[edx+0x0],dh
30036118:	jb     0x3003611a
3003611a:	outs   dx,DWORD PTR ds:[esi]
3003611b:	add    BYTE PTR [edx+0x0],dh
3003611e:	and    BYTE PTR [eax],al
30036120:	outs   dx,DWORD PTR ds:[esi]
30036121:	add    BYTE PTR [ebx+0x0],ah
30036124:	arpl   WORD PTR [eax],ax
30036126:	jne    0x30036128
30036128:	jb     0x3003612a
3003612a:	jb     0x3003612c
3003612c:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30036131:	add    BYTE PTR [eax+eax*1+0x72],dh
30036135:	add    BYTE PTR [ecx+0x0],bh
30036138:	imul   eax,DWORD PTR [eax],0x67006e
3003613e:	and    BYTE PTR [eax],al
30036140:	je     0x30036142
30036142:	outs   dx,DWORD PTR ds:[esi]
30036143:	add    BYTE PTR [eax],ah
30036145:	add    BYTE PTR [eax+eax*1+0x65],ah
30036149:	add    BYTE PTR [eax+eax*1+0x65],ch
3003614d:	add    BYTE PTR [eax+eax*1+0x65],dh
30036151:	add    BYTE PTR [eax],ah
30036153:	add    BYTE PTR [ebx+0x0],ch
30036156:	add    BYTE PTR gs:[ecx+0x0],bh
3003615a:	add    BYTE PTR [eax],al
3003615c:	push   ebp
3003615d:	mov    ebp,esp
3003615f:	sub    esp,0x14
30036162:	push   esi
30036163:	mov    esi,ecx
30036165:	cmp    BYTE PTR [esi+0x75],0x0
30036169:	je     0x30036172
3003616b:	xor    eax,eax
3003616d:	jmp    0x30036272
30036172:	push   ebx
30036173:	mov    ebx,DWORD PTR [ebp+0x8]
30036176:	push   edi
30036177:	add    ebx,0x4
3003617a:	push   DWORD PTR [ebx]
3003617c:	push   DWORD PTR [esi+0x64]
3003617f:	call   DWORD PTR ds:0x30045080
30036185:	mov    edi,eax
30036187:	push   ebx
30036188:	mov    BYTE PTR [esi+0x74],0x1
3003618c:	push   0x30008fc4
30036191:	sub    eax,0x0
30036194:	je     0x3003622d
3003619a:	dec    eax
3003619b:	dec    eax
3003619c:	lea    eax,[esi+0x70]
3003619f:	push   eax
300361a0:	je     0x300361eb
300361a2:	lea    eax,[ebp-0x4]
300361a5:	push   eax
300361a6:	call   0x3000ba45
300361ab:	mov    edx,eax
300361ad:	lea    ecx,[ebp+0x8]
300361b0:	call   0x30009298
300361b5:	mov    ecx,DWORD PTR [eax]
300361b7:	test   edi,edi
300361b9:	jle    0x300361c4
300361bb:	movzx  edi,di
300361be:	or     edi,0x80070000
300361c4:	push   ecx
300361c5:	mov    edx,edi
300361c7:	mov    ecx,0x300362f8
300361cc:	call   0x30033b68
300361d1:	lea    ecx,[ebp+0x8]
300361d4:	call   0x300051a4
300361d9:	lea    ecx,[ebp-0x4]
300361dc:	call   0x300051a4
300361e1:	mov    eax,0x80004005
300361e6:	jmp    0x30036270
300361eb:	lea    eax,[ebp-0xc]
300361ee:	push   eax
300361ef:	call   0x3000ba45
300361f4:	mov    edx,eax
300361f6:	lea    ecx,[ebp-0x8]
300361f9:	call   0x30009298
300361fe:	cmp    BYTE PTR ds:0x300430f1,0x0
30036205:	je     0x30036218
30036207:	push   DWORD PTR [eax]
30036209:	xor    edx,edx
3003620b:	push   0x300362a8
30036210:	push   0x2
30036212:	pop    ecx
30036213:	call   0x30033ac0
30036218:	lea    ecx,[ebp-0x8]
3003621b:	call   0x300051a4
30036220:	lea    ecx,[ebp-0xc]
30036223:	call   0x300051a4
30036228:	xor    eax,eax
3003622a:	inc    eax
3003622b:	jmp    0x30036270
3003622d:	lea    eax,[esi+0x70]
30036230:	push   eax
30036231:	lea    eax,[ebp-0x14]
30036234:	push   eax
30036235:	call   0x3000ba45
3003623a:	mov    edx,eax
3003623c:	lea    ecx,[ebp-0x10]
3003623f:	call   0x30009298
30036244:	cmp    BYTE PTR ds:0x300430f1,0x0
3003624b:	je     0x3003625e
3003624d:	push   DWORD PTR [eax]
3003624f:	xor    edx,edx
30036251:	push   0x30036278
30036256:	push   0x3
30036258:	pop    ecx
30036259:	call   0x30033ac0
3003625e:	lea    ecx,[ebp-0x10]
30036261:	call   0x300051a4
30036266:	lea    ecx,[ebp-0x14]
30036269:	call   0x300051a4
3003626e:	xor    eax,eax
30036270:	pop    edi
30036271:	pop    ebx
30036272:	pop    esi
30036273:	leave  
30036274:	ret    0x4
30036277:	nop
30036278:	push   eax
30036279:	add    BYTE PTR [ebx+0x0],ch
3003627c:	add    BYTE PTR [di+0x0],dl
30036280:	outs   dx,BYTE PTR ds:[esi]
30036281:	add    BYTE PTR [eax+eax*1+0x65],al
30036285:	add    BYTE PTR [esi+0x0],ah
30036288:	cmp    al,BYTE PTR [eax]
3003628a:	and    BYTE PTR [eax],al
3003628c:	inc    esp
3003628d:	add    BYTE PTR [ebp+0x0],ah
30036290:	ins    BYTE PTR es:[edi],dx
30036291:	add    BYTE PTR [ebp+0x0],ah
30036294:	je     0x30036296
30036296:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
3003629b:	add    BYTE PTR [esi+0x0],dh
3003629e:	popa   
3003629f:	add    BYTE PTR [eax+eax*1+0x75],ch
300362a3:	add    BYTE PTR [ebp+0x0],ah
300362a6:	add    BYTE PTR [eax],al
300362a8:	push   eax
300362a9:	add    BYTE PTR [ebx+0x0],ch
300362ac:	add    BYTE PTR [di+0x0],dl
300362b0:	outs   dx,BYTE PTR ds:[esi]
300362b1:	add    BYTE PTR [eax+eax*1+0x65],al
300362b5:	add    BYTE PTR [esi+0x0],ah
300362b8:	cmp    al,BYTE PTR [eax]
300362ba:	and    BYTE PTR [eax],al
300362bc:	inc    esp
300362bd:	add    BYTE PTR [ecx+0x0],ch
300362c0:	add    BYTE PTR fs:[eax],ah
300362c3:	add    BYTE PTR [esi+0x0],ch
300362c6:	outs   dx,DWORD PTR ds:[esi]
300362c7:	add    BYTE PTR [eax+eax*1+0x20],dh
300362cb:	add    BYTE PTR [esi+0x0],ah
300362ce:	imul   eax,DWORD PTR [eax],0x64006e
300362d4:	and    BYTE PTR [eax],al
300362d6:	jbe    0x300362d8
300362d8:	popa   
300362d9:	add    BYTE PTR [eax+eax*1+0x75],ch
300362dd:	add    BYTE PTR [ebp+0x0],ah
300362e0:	and    BYTE PTR [eax],al
300362e2:	je     0x300362e4
300362e4:	outs   dx,DWORD PTR ds:[esi]
300362e5:	add    BYTE PTR [eax],ah
300362e7:	add    BYTE PTR [eax+eax*1+0x65],ah
300362eb:	add    BYTE PTR [eax+eax*1+0x65],ch
300362ef:	add    BYTE PTR [eax+eax*1+0x65],dh
300362f3:	add    BYTE PTR [eax],al
300362f5:	add    BYTE PTR [eax+0x6b005090],dl
300362fb:	add    BYTE PTR [edi+0x0],ah
300362fe:	push   ebp
300362ff:	add    BYTE PTR [esi+0x0],ch
30036302:	inc    esp
30036303:	add    BYTE PTR [ebp+0x0],ah
30036306:	data16 add BYTE PTR [edx],bh
30036309:	add    BYTE PTR [eax],ah
3003630b:	add    BYTE PTR [ebp+0x0],al
3003630e:	jb     0x30036310
30036310:	jb     0x30036312
30036312:	outs   dx,DWORD PTR ds:[esi]
30036313:	add    BYTE PTR [edx+0x0],dh
30036316:	and    BYTE PTR [eax],al
30036318:	add    BYTE PTR fs:[ebp+0x0],ah
3003631c:	ins    BYTE PTR es:[edi],dx
3003631d:	add    BYTE PTR [ebp+0x0],ah
30036320:	je     0x30036322
30036322:	imul   eax,DWORD PTR [eax],0x67006e
30036328:	and    BYTE PTR [eax],al
3003632a:	jbe    0x3003632c
3003632c:	popa   
3003632d:	add    BYTE PTR [eax+eax*1+0x75],ch
30036331:	add    BYTE PTR [ebp+0x0],ah
30036334:	add    BYTE PTR [eax],al
30036336:	push   ebp
30036337:	mov    ebp,esp
30036339:	push   esi
3003633a:	mov    esi,ecx
3003633c:	call   0x30016f4d
30036341:	test   BYTE PTR [ebp+0x8],0x1
30036345:	je     0x3003634f
30036347:	push   esi
30036348:	call   DWORD PTR ds:0x300452ac
3003634e:	pop    ecx
3003634f:	mov    eax,esi
30036351:	pop    esi
30036352:	pop    ebp
30036353:	ret    0x4
30036356:	push   ebp
30036357:	mov    ebp,esp
30036359:	push   ecx
3003635a:	push   ecx
3003635b:	push   edi
3003635c:	mov    edi,ecx
3003635e:	cmp    BYTE PTR [edi+0x68],0x0
30036362:	jne    0x300363f2
30036368:	push   ebx
30036369:	push   esi
3003636a:	lea    ebx,[edi+0x3c]
3003636d:	push   ebx
3003636e:	lea    ecx,[ebp-0x4]
30036371:	call   0x30004340
30036376:	push   DWORD PTR [edi+0x8]
30036379:	push   DWORD PTR [ebp-0x4]
3003637c:	push   0x300363f8
30036381:	push   ebx
30036382:	call   0x30005153
30036387:	add    esp,0x10
3003638a:	lea    eax,[ebp-0x8]
3003638d:	push   0x30018534
30036392:	push   ebx
30036393:	push   eax
30036394:	call   0x3000ba45
30036399:	push   eax
3003639a:	lea    ecx,[edi+0x48]
3003639d:	call   0x300014c1
300363a2:	lea    ecx,[ebp-0x8]
300363a5:	call   0x300051a4
300363aa:	lea    esi,[edi+0x4c]
300363ad:	push   esi
300363ae:	lea    ecx,[ebp-0x4]
300363b1:	call   0x300014c1
300363b6:	push   DWORD PTR [edi+0x8]
300363b9:	push   DWORD PTR [ebp-0x4]
300363bc:	push   0x300363f8
300363c1:	push   esi
300363c2:	call   0x30005153
300363c7:	add    esp,0x10
300363ca:	cmp    BYTE PTR ds:0x300430f1,0x0
300363d1:	je     0x300363e4
300363d3:	push   DWORD PTR [ebx]
300363d5:	xor    edx,edx
300363d7:	push   0x30036408
300363dc:	push   0x3
300363de:	pop    ecx
300363df:	call   0x30033ac0
300363e4:	lea    ecx,[ebp-0x4]
300363e7:	mov    BYTE PTR [edi+0x68],0x1
300363eb:	call   0x300051a4
300363f0:	pop    esi
300363f1:	pop    ebx
300363f2:	pop    edi
300363f3:	leave  
300363f4:	ret    
300363f5:	nop
300363f6:	nop
300363f7:	nop
300363f8:	and    eax,0x5f007300
300363fd:	add    BYTE PTR ds:0x6400,ah
30036403:	add    BYTE PTR [eax+0x52909090],dl
30036409:	add    BYTE PTR [ebp+0x0],ah
3003640c:	arpl   WORD PTR [eax],ax
3003640e:	popa   
3003640f:	add    BYTE PTR [eax+eax*1+0x63],ch
30036413:	add    BYTE PTR [ebp+0x0],dh
30036416:	ins    BYTE PTR es:[edi],dx
30036417:	add    BYTE PTR [ecx+0x0],ah
3003641a:	je     0x3003641c
3003641c:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
30036421:	add    BYTE PTR [eax+0x0],dh
30036424:	imul   eax,DWORD PTR [eax],0x67
30036427:	add    BYTE PTR [eax+eax*1+0x65],ah
3003642b:	add    BYTE PTR [esi+0x0],ah
3003642e:	and    BYTE PTR [eax],al
30036430:	arpl   WORD PTR [eax],ax
30036432:	outs   dx,DWORD PTR ds:[esi]
30036433:	add    BYTE PTR [esi+0x0],ch
30036436:	data16 add BYTE PTR [ecx+0x0],ch
3003643a:	add    BYTE PTR [di+0x0],dh
3003643e:	jb     0x30036440
30036440:	popa   
30036441:	add    BYTE PTR [eax+eax*1+0x69],dh
30036445:	add    BYTE PTR [edi+0x0],ch
30036448:	outs   dx,BYTE PTR ds:[esi]
30036449:	add    BYTE PTR [eax],ah
3003644b:	add    BYTE PTR [edx+0x0],dh
3003644e:	outs   dx,DWORD PTR ds:[esi]
3003644f:	add    BYTE PTR [edi+0x0],ch
30036452:	je     0x30036454
30036454:	add    BYTE PTR [eax],al
30036456:	push   ebp
30036457:	mov    ebp,esp
30036459:	push   DWORD PTR [ebp+0x8]
3003645c:	call   0x300365a8
30036461:	xor    ecx,ecx
30036463:	test   al,al
30036465:	sete   cl
30036468:	mov    al,cl
3003646a:	pop    ebp
3003646b:	ret    0x4
3003646e:	push   ebp
3003646f:	mov    ebp,esp
30036471:	sub    esp,0x14
30036474:	push   esi
30036475:	mov    esi,ecx
30036477:	lea    ecx,[ebp-0x8]
3003647a:	mov    eax,DWORD PTR [esi]
3003647c:	push   ecx
3003647d:	mov    ecx,esi
3003647f:	call   DWORD PTR [eax+0x8]
30036482:	cmp    DWORD PTR [ebp-0x4],0x0
30036486:	jne    0x30036492
30036488:	cmp    DWORD PTR [ebp-0x8],0x0
3003648c:	jne    0x30036492
3003648e:	xor    al,al
30036490:	jmp    0x300364f7
30036492:	lea    eax,[ebp-0x10]
30036495:	push   eax
30036496:	mov    ecx,esi
30036498:	call   0x30011c1f
3003649d:	mov    eax,DWORD PTR [ebp-0x4]
300364a0:	cmp    eax,DWORD PTR [ebp-0xc]
300364a3:	jne    0x300364c4
300364a5:	mov    eax,DWORD PTR [ebp-0x8]
300364a8:	cmp    eax,DWORD PTR [ebp-0x10]
300364ab:	jne    0x300364c4
300364ad:	cmp    BYTE PTR ds:0x300430f1,0x0
300364b4:	je     0x300364e0
300364b6:	call   0x30033b12
300364bb:	push   0x30036500
300364c0:	push   0x3
300364c2:	jmp    0x300364d9
300364c4:	cmp    BYTE PTR ds:0x300430f1,0x0
300364cb:	je     0x300364e0
300364cd:	call   0x30033b12
300364d2:	push   0x30036550
300364d7:	push   0x2
300364d9:	mov    edx,DWORD PTR [eax]
300364db:	mov    ecx,eax
300364dd:	call   DWORD PTR [edx+0x8]
300364e0:	mov    eax,DWORD PTR [ebp-0x4]
300364e3:	cmp    eax,DWORD PTR [ebp-0xc]
300364e6:	jne    0x300364f5
300364e8:	mov    eax,DWORD PTR [ebp-0x8]
300364eb:	cmp    eax,DWORD PTR [ebp-0x10]
300364ee:	jne    0x300364f5
300364f0:	xor    eax,eax
300364f2:	inc    eax
300364f3:	jmp    0x300364f7
300364f5:	xor    eax,eax
300364f7:	pop    esi
300364f8:	leave  
300364f9:	ret    
300364fa:	nop
300364fb:	nop
300364fc:	nop
300364fd:	nop
300364fe:	nop
300364ff:	nop
30036500:	inc    ebx
30036501:	add    BYTE PTR [ebp+0x0],dh
30036504:	jb     0x30036506
30036506:	jb     0x30036508
30036508:	add    BYTE PTR gs:[esi+0x0],ch
3003650c:	je     0x3003650e
3003650e:	and    BYTE PTR [eax],al
30036510:	jo     0x30036512
30036512:	imul   eax,DWORD PTR [eax],0x67
30036515:	add    BYTE PTR [eax+eax*1+0x65],ah
30036519:	add    BYTE PTR [esi+0x0],ah
3003651c:	and    BYTE PTR [eax],al
3003651e:	arpl   WORD PTR [eax],ax
30036520:	popa   
30036521:	add    BYTE PTR [ebx+0x0],ah
30036524:	push   0x20006500
30036529:	add    BYTE PTR [eax+eax*1+0x69],dh
3003652d:	add    BYTE PTR [ebp+0x0],ch
30036530:	add    BYTE PTR gs:[ebx+0x0],dh
30036534:	je     0x30036536
30036536:	popa   
30036537:	add    BYTE PTR [ebp+0x0],ch
3003653a:	jo     0x3003653c
3003653c:	and    BYTE PTR [eax],al
3003653e:	imul   eax,DWORD PTR [eax],0x200073
30036544:	jbe    0x30036546
30036546:	popa   
30036547:	add    BYTE PTR [eax+eax*1+0x69],ch
3003654b:	add    BYTE PTR [eax+eax*1+0x0],ah
3003654f:	add    BYTE PTR [ebx+0x0],al
30036552:	jne    0x30036554
30036554:	jb     0x30036556
30036556:	jb     0x30036558
30036558:	add    BYTE PTR gs:[esi+0x0],ch
3003655c:	je     0x3003655e
3003655e:	and    BYTE PTR [eax],al
30036560:	jo     0x30036562
30036562:	imul   eax,DWORD PTR [eax],0x67
30036565:	add    BYTE PTR [eax+eax*1+0x65],ah
30036569:	add    BYTE PTR [esi+0x0],ah
3003656c:	and    BYTE PTR [eax],al
3003656e:	arpl   WORD PTR [eax],ax
30036570:	popa   
30036571:	add    BYTE PTR [ebx+0x0],ah
30036574:	push   0x20006500
30036579:	add    BYTE PTR [eax+eax*1+0x69],dh
3003657d:	add    BYTE PTR [ebp+0x0],ch
30036580:	add    BYTE PTR gs:[ebx+0x0],dh
30036584:	je     0x30036586
30036586:	popa   
30036587:	add    BYTE PTR [ebp+0x0],ch
3003658a:	jo     0x3003658c
3003658c:	and    BYTE PTR [eax],al
3003658e:	imul   eax,DWORD PTR [eax],0x200073
30036594:	outs   dx,BYTE PTR ds:[esi]
30036595:	add    BYTE PTR [edi+0x0],ch
30036598:	je     0x3003659a
3003659a:	and    BYTE PTR [eax],al
3003659c:	jbe    0x3003659e
3003659e:	popa   
3003659f:	add    BYTE PTR [eax+eax*1+0x69],ch
300365a3:	add    BYTE PTR [eax+eax*1+0x0],ah
300365a7:	add    BYTE PTR [ebp-0x75],dl
300365aa:	in     al,dx
300365ab:	sub    esp,0x20
300365ae:	push   ebx
300365af:	push   esi
300365b0:	push   edi
300365b1:	mov    eax,ecx
300365b3:	xor    ebx,ebx
300365b5:	push   0x2001f
300365ba:	push   DWORD PTR [eax+0x48]
300365bd:	mov    esi,ebx
300365bf:	push   0x80000001
300365c4:	lea    ecx,[ebp-0x20]
300365c7:	mov    DWORD PTR [ebp-0x14],eax
300365ca:	mov    DWORD PTR [ebp-0x20],ebx
300365cd:	mov    DWORD PTR [ebp-0x1c],ebx
300365d0:	mov    DWORD PTR [ebp-0x18],ebx
300365d3:	mov    DWORD PTR [ebp-0x8],ebx
300365d6:	mov    DWORD PTR [ebp-0x4],esi
300365d9:	call   0x300051d9
300365de:	test   eax,eax
300365e0:	jle    0x300365ec
300365e2:	movzx  eax,ax
300365e5:	or     eax,0x80070000
300365ea:	test   eax,eax
300365ec:	js     0x30036684
300365f2:	push   0x3000e5a4
300365f7:	lea    ecx,[ebp-0xc]
300365fa:	call   0x3000437e
300365ff:	lea    eax,[ebp-0x10]
30036602:	push   eax
30036603:	lea    eax,[ebp-0x8]
30036606:	push   eax
30036607:	lea    edx,[ebp-0xc]
3003660a:	lea    ecx,[ebp-0x20]
3003660d:	call   0x3001b0b2
30036612:	lea    ecx,[ebp-0xc]
30036615:	mov    edi,eax
30036617:	call   0x300051a4
3003661c:	test   edi,edi
3003661e:	js     0x30036684
30036620:	mov    ecx,DWORD PTR [ebp+0x8]
30036623:	lea    eax,[ebp-0xc]
30036626:	push   eax
30036627:	lea    ecx,[ecx+0xc]
3003662a:	lea    edx,[ebp-0x4]
3003662d:	call   0x30011f1f
30036632:	mov    esi,DWORD PTR [ebp-0x4]
30036635:	test   eax,eax
30036637:	js     0x30036684
30036639:	mov    eax,DWORD PTR [ebp-0xc]
3003663c:	cmp    eax,DWORD PTR [ebp-0x10]
3003663f:	jne    0x30036684
30036641:	push   eax
30036642:	push   esi
30036643:	push   DWORD PTR [ebp-0x8]
30036646:	call   0x3000c93f
3003664b:	add    esp,0xc
3003664e:	test   eax,eax
30036650:	jne    0x30036684
30036652:	mov    edi,DWORD PTR [ebp-0x14]
30036655:	mov    ecx,edi
30036657:	call   0x3003646e
3003665c:	test   al,al
3003665e:	je     0x30036684
30036660:	test   DWORD PTR [edi+0x4],0x100
30036667:	je     0x30036686
30036669:	cmp    BYTE PTR ds:0x300430f1,bl
3003666f:	je     0x30036684
30036671:	call   0x30033b12
30036676:	mov    edx,DWORD PTR [eax]
30036678:	push   0x300366a8
3003667d:	push   0x3
3003667f:	mov    ecx,eax
30036681:	call   DWORD PTR [edx+0x8]
30036684:	mov    bl,0x1
30036686:	push   esi
30036687:	mov    esi,DWORD PTR ds:0x300453d4
3003668d:	call   esi
3003668f:	pop    ecx
30036690:	push   DWORD PTR [ebp-0x8]
30036693:	call   esi
30036695:	pop    ecx
30036696:	lea    ecx,[ebp-0x20]
30036699:	call   0x300051ae
3003669e:	pop    edi
3003669f:	pop    esi
300366a0:	mov    al,bl
300366a2:	pop    ebx
300366a3:	leave  
300366a4:	ret    0x4
300366a7:	nop
300366a8:	inc    esi
300366a9:	add    BYTE PTR [edi+0x0],ch
300366ac:	jb     0x300366ae
300366ae:	arpl   WORD PTR [eax],ax
300366b0:	imul   eax,DWORD PTR [eax],0x67006e
300366b6:	and    BYTE PTR [eax],al
300366b8:	arpl   WORD PTR [eax],ax
300366ba:	popa   
300366bb:	add    BYTE PTR [ebx+0x0],ah
300366be:	push   0x20006500
300366c3:	add    BYTE PTR [edx+0x0],dh
300366c6:	add    BYTE PTR gs:[esi+0x0],ah
300366ca:	jb     0x300366cc
300366cc:	add    BYTE PTR gs:[ebx+0x0],dh
300366d0:	push   0x62002000
300366d5:	add    BYTE PTR [ecx+0x0],ah
300366d8:	jae    0x300366da
300366da:	add    BYTE PTR gs:[eax],ah
300366dd:	add    BYTE PTR [edi+0x0],ch
300366e0:	outs   dx,BYTE PTR ds:[esi]
300366e1:	add    BYTE PTR [eax],ah
300366e3:	add    BYTE PTR [esi+0x0],ah
300366e6:	ins    BYTE PTR es:[edi],dx
300366e7:	add    BYTE PTR [ecx+0x0],ah
300366ea:	add    BYTE PTR [bx+si],al
300366ed:	add    BYTE PTR [esi+0x57],dl
300366f0:	mov    edi,ecx
300366f2:	lea    ecx,[edi+0x4]
300366f5:	mov    DWORD PTR [edi],0x3002a97c
300366fb:	call   0x300051c8
30036700:	lea    ecx,[edi+0x8]
30036703:	call   0x300051c8
30036708:	mov    DWORD PTR [edi+0xc],0x3002a9c8
3003670f:	and    DWORD PTR [edi+0x10],0x0
30036713:	and    DWORD PTR [edi+0x14],0x0
30036717:	lea    ecx,[edi+0x18]
3003671a:	call   0x300051c8
3003671f:	lea    ecx,[edi+0x20]
30036722:	call   0x30009718
30036727:	mov    DWORD PTR [edi+0x20],0x30036738
3003672e:	mov    BYTE PTR [edi+0x54],0x0
30036732:	mov    eax,edi
30036734:	pop    edi
30036735:	pop    esi
30036736:	ret    
30036737:	nop
30036738:	ds cmp eax,0x8b553003
3003673e:	in     al,dx
3003673f:	push   esi
30036740:	mov    esi,ecx
30036742:	call   0x3003675c
30036747:	test   BYTE PTR [ebp+0x8],0x1
3003674b:	je     0x30036755
3003674d:	push   esi
3003674e:	call   DWORD PTR ds:0x300452ac
30036754:	pop    ecx
30036755:	mov    eax,esi
30036757:	pop    esi
30036758:	pop    ebp
30036759:	ret    0x4
3003675c:	push   esi
3003675d:	mov    esi,ecx
3003675f:	mov    DWORD PTR [esi],0x3002a97c
30036765:	call   0x300367e6
3003676a:	lea    ecx,[esi+0x24]
3003676d:	call   0x30008aad
30036772:	lea    ecx,[esi+0xc]
30036775:	call   0x300376da
3003677a:	lea    ecx,[esi+0x8]
3003677d:	call   0x300051a4
30036782:	lea    ecx,[esi+0x4]
30036785:	pop    esi
30036786:	jmp    0x300051a4
3003678b:	push   ebp
3003678c:	mov    ebp,esp
3003678e:	push   esi
3003678f:	push   edi
30036790:	push   DWORD PTR [ebp+0x8]
30036793:	mov    edi,ecx
30036795:	lea    esi,[edi+0x4]
30036798:	mov    ecx,esi
3003679a:	call   0x300014c1
3003679f:	push   0x300367dc
300367a4:	push   esi
300367a5:	lea    eax,[ebp+0x8]
300367a8:	push   eax
300367a9:	call   0x3000ba45
300367ae:	lea    esi,[edi+0x8]
300367b1:	push   eax
300367b2:	mov    ecx,esi
300367b4:	call   0x300014c1
300367b9:	lea    ecx,[ebp+0x8]
300367bc:	call   0x300051a4
300367c1:	push   ecx
300367c2:	push   esi
300367c3:	lea    ecx,[edi+0xc]
300367c6:	call   0x30037705
300367cb:	test   eax,eax
300367cd:	js     0x300367d5
300367cf:	mov    BYTE PTR [edi+0x54],0x1
300367d3:	xor    eax,eax
300367d5:	pop    edi
300367d6:	pop    esi
300367d7:	pop    ebp
300367d8:	ret    0x4
300367db:	nop
300367dc:	add    BYTE PTR cs:[eax+eax*1+0x6d],dh
300367e1:	add    BYTE PTR [eax+0x0],dh
300367e4:	add    BYTE PTR [eax],al
300367e6:	push   esi
300367e7:	mov    esi,ecx
300367e9:	cmp    BYTE PTR [esi+0x54],0x0
300367ed:	jne    0x300367f4
300367ef:	xor    eax,eax
300367f1:	inc    eax
300367f2:	pop    esi
300367f3:	ret    
300367f4:	push   edi
300367f5:	lea    ecx,[esi+0xc]
300367f8:	call   0x300377a4
300367fd:	mov    edi,eax
300367ff:	test   edi,edi
30036801:	js     0x30036820
30036803:	push   0x0
30036805:	push   DWORD PTR [esi+0x4]
30036808:	push   DWORD PTR [esi+0x8]
3003680b:	call   DWORD PTR ds:0x30045104
30036811:	push   DWORD PTR [esi+0x8]
30036814:	call   DWORD PTR ds:0x30045208
3003681a:	mov    BYTE PTR [esi+0x54],0x0
3003681e:	mov    eax,edi
30036820:	pop    edi
30036821:	pop    esi
30036822:	ret    
30036823:	push   ebp
30036824:	mov    ebp,esp
30036826:	sub    esp,0x220
3003682c:	mov    eax,ds:0x30043050
30036831:	xor    eax,ebp
30036833:	mov    DWORD PTR [ebp-0x4],eax
30036836:	or     DWORD PTR [ebp-0x20c],0xffffffff
3003683d:	push   ebx
3003683e:	mov    ebx,DWORD PTR [ebp+0x8]
30036841:	push   esi
30036842:	push   edi
30036843:	lea    eax,[ebp-0x20c]
30036849:	push   eax
3003684a:	push   0x20019
3003684f:	push   0x0
30036851:	push   DWORD PTR [ebx]
30036853:	mov    edi,ecx
30036855:	push   0x80000001
3003685a:	mov    DWORD PTR [ebp-0x21c],edi
30036860:	call   DWORD PTR ds:0x30045008
30036866:	mov    esi,eax
30036868:	test   esi,esi
3003686a:	jle    0x30036877
3003686c:	movzx  esi,si
3003686f:	or     esi,0x80070000
30036875:	test   esi,esi
30036877:	js     0x30036943
3003687d:	and    DWORD PTR [ebp-0x210],0x0
30036884:	lea    eax,[ebp-0x210]
3003688a:	push   eax
3003688b:	push   ebx
3003688c:	push   DWORD PTR [ebp-0x20c]
30036892:	mov    ecx,edi
30036894:	call   0x3003696b
30036899:	mov    esi,eax
3003689b:	test   esi,esi
3003689d:	js     0x30036943
300368a3:	xor    edi,edi
300368a5:	cmp    DWORD PTR [ebp-0x210],edi
300368ab:	jbe    0x30036943
300368b1:	push   0x0
300368b3:	push   0x0
300368b5:	push   0x0
300368b7:	push   0x0
300368b9:	lea    eax,[ebp-0x218]
300368bf:	push   eax
300368c0:	lea    eax,[ebp-0x208]
300368c6:	push   eax
300368c7:	push   edi
300368c8:	push   DWORD PTR [ebp-0x20c]
300368ce:	mov    DWORD PTR [ebp-0x218],0xff
300368d8:	call   DWORD PTR ds:0x30045074
300368de:	test   eax,eax
300368e0:	jne    0x30036936
300368e2:	lea    eax,[ebp-0x208]
300368e8:	push   eax
300368e9:	push   0x30008fc4
300368ee:	push   ebx
300368ef:	lea    eax,[ebp-0x220]
300368f5:	push   eax
300368f6:	call   0x3000ba45
300368fb:	push   eax
300368fc:	lea    eax,[ebp-0x214]
30036902:	push   eax
30036903:	call   0x3000ba45
30036908:	lea    ecx,[ebp-0x220]
3003690e:	call   0x300051a4
30036913:	mov    ecx,DWORD PTR [ebp-0x21c]
30036919:	lea    eax,[ebp-0x214]
3003691f:	push   eax
30036920:	call   0x30036823
30036925:	lea    ecx,[ebp-0x214]
3003692b:	mov    esi,eax
3003692d:	call   0x300051a4
30036932:	test   esi,esi
30036934:	js     0x30036943
30036936:	inc    edi
30036937:	cmp    edi,DWORD PTR [ebp-0x210]
3003693d:	jb     0x300368b1
30036943:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
3003694a:	je     0x30036958
3003694c:	push   DWORD PTR [ebp-0x20c]
30036952:	call   DWORD PTR ds:0x30045004
30036958:	mov    ecx,DWORD PTR [ebp-0x4]
3003695b:	pop    edi
3003695c:	mov    eax,esi
3003695e:	pop    esi
3003695f:	xor    ecx,ebp
30036961:	pop    ebx
30036962:	call   0x3000115c
30036967:	leave  
30036968:	ret    0x4
3003696b:	push   ebp
3003696c:	mov    ebp,esp
3003696e:	sub    esp,0x68
30036971:	push   ebx
30036972:	push   esi
30036973:	mov    esi,ecx
30036975:	push   edi
30036976:	lea    ecx,[ebp-0x64]
30036979:	call   0x300051c8
3003697e:	lea    ecx,[ebp-0x60]
30036981:	call   0x300051c8
30036986:	lea    ecx,[ebp-0x58]
30036989:	call   0x300051c8
3003698e:	mov    eax,DWORD PTR [ebp+0x10]
30036991:	xor    edx,edx
30036993:	push   edx
30036994:	push   edx
30036995:	lea    ecx,[ebp-0x8]
30036998:	push   ecx
30036999:	lea    ecx,[ebp-0x14]
3003699c:	push   ecx
3003699d:	lea    ecx,[ebp-0x10]
300369a0:	push   ecx
300369a1:	push   edx
300369a2:	push   edx
300369a3:	push   eax
300369a4:	push   edx
300369a5:	push   edx
300369a6:	push   edx
300369a7:	push   DWORD PTR [ebp+0x8]
300369aa:	mov    DWORD PTR [ebp-0x54],edx
300369ad:	mov    DWORD PTR [ebp-0x10],edx
300369b0:	mov    DWORD PTR [ebp-0x14],edx
300369b3:	mov    DWORD PTR [ebp-0x8],edx
300369b6:	mov    DWORD PTR [eax],edx
300369b8:	call   DWORD PTR ds:0x30045078
300369be:	mov    edi,eax
300369c0:	test   edi,edi
300369c2:	jle    0x300369cf
300369c4:	movzx  edi,di
300369c7:	or     edi,0x80070000
300369cd:	test   edi,edi
300369cf:	js     0x30036b83
300369d5:	push   DWORD PTR [ebp+0xc]
300369d8:	lea    ecx,[ebp-0x64]
300369db:	call   0x300014c1
300369e0:	lea    ebx,[esi+0x20]
300369e3:	lea    ecx,[ebp-0x64]
300369e6:	mov    eax,DWORD PTR [ebx]
300369e8:	push   ecx
300369e9:	mov    ecx,ebx
300369eb:	call   DWORD PTR [eax]
300369ed:	lea    eax,[esi+0xc]
300369f0:	lea    ecx,[ebp-0x64]
300369f3:	push   ecx
300369f4:	mov    ecx,eax
300369f6:	mov    DWORD PTR [ebp-0x24],eax
300369f9:	call   0x300378f8
300369fe:	mov    edi,eax
30036a00:	test   edi,edi
30036a02:	js     0x30036b83
30036a08:	mov    ecx,DWORD PTR [ebp-0x8]
30036a0b:	add    ecx,0x2
30036a0e:	push   ecx
30036a0f:	mov    DWORD PTR [ebp-0x4c],ecx
30036a12:	call   0x300089a5
30036a17:	mov    esi,eax
30036a19:	pop    ecx
30036a1a:	mov    DWORD PTR [ebp-0x54],esi
30036a1d:	test   esi,esi
30036a1f:	jne    0x30036a2b
30036a21:	mov    edi,0x8007000e
30036a26:	jmp    0x30036b7b
30036a2b:	and    DWORD PTR [ebp+0x10],0x0
30036a2f:	cmp    DWORD PTR [ebp-0x10],0x0
30036a33:	jbe    0x30036b7b
30036a39:	mov    ecx,DWORD PTR [ebp-0x14]
30036a3c:	mov    eax,DWORD PTR [ebp-0x8]
30036a3f:	inc    ecx
30036a40:	mov    DWORD PTR [ebp-0x18],ecx
30036a43:	push   ecx
30036a44:	lea    ecx,[ebp-0x60]
30036a47:	mov    DWORD PTR [ebp-0xc],eax
30036a4a:	call   0x30004286
30036a4f:	lea    ecx,[ebp-0xc]
30036a52:	push   ecx
30036a53:	push   DWORD PTR [ebp-0x54]
30036a56:	lea    ecx,[ebp-0x1c]
30036a59:	push   ecx
30036a5a:	push   0x0
30036a5c:	lea    ecx,[ebp-0x18]
30036a5f:	push   ecx
30036a60:	push   eax
30036a61:	push   DWORD PTR [ebp+0x10]
30036a64:	push   DWORD PTR [ebp+0x8]
30036a67:	call   DWORD PTR ds:0x30045040
30036a6d:	mov    edi,eax
30036a6f:	test   edi,edi
30036a71:	jle    0x30036a7e
30036a73:	movzx  edi,di
30036a76:	or     edi,0x80070000
30036a7c:	test   edi,edi
30036a7e:	js     0x30036b7b
30036a84:	push   DWORD PTR [ebp-0x18]
30036a87:	lea    ecx,[ebp-0x60]
30036a8a:	call   0x30006c8c
30036a8f:	mov    edi,DWORD PTR [ebp-0xc]
30036a92:	push   ecx
30036a93:	lea    ecx,[ebp-0x3c]
30036a96:	mov    DWORD PTR [ebp-0x50],edi
30036a99:	call   0x3000704d
30036a9e:	mov    eax,DWORD PTR [ebp-0x1c]
30036aa1:	dec    eax
30036aa2:	je     0x30036bb6
30036aa8:	dec    eax
30036aa9:	je     0x30036bad
30036aaf:	dec    eax
30036ab0:	je     0x30036ba4
30036ab6:	dec    eax
30036ab7:	je     0x30036b53
30036abd:	sub    eax,0x3
30036ac0:	je     0x30036ae0
30036ac2:	sub    eax,0x4
30036ac5:	jne    0x30036be0
30036acb:	push   edi
30036acc:	push   DWORD PTR [ebp-0x54]
30036acf:	mov    DWORD PTR [ebp-0x5c],0x5
30036ad6:	push   0x8
30036ad8:	lea    eax,[ebp-0x44]
30036adb:	jmp    0x30036b61
30036ae0:	mov    eax,DWORD PTR [ebp-0x54]
30036ae3:	mov    DWORD PTR [ebp-0x5c],0x2
30036aea:	mov    BYTE PTR [edi+eax*1],0x0
30036aee:	mov    ecx,DWORD PTR [ebp-0x54]
30036af1:	mov    eax,DWORD PTR [ebp-0xc]
30036af4:	lea    edx,[ebp-0x3c]
30036af7:	mov    BYTE PTR [eax+ecx*1+0x1],0x0
30036afc:	mov    ecx,DWORD PTR [ebp-0x54]
30036aff:	call   0x3000bbb4
30036b04:	mov    edi,eax
30036b06:	test   edi,edi
30036b08:	js     0x30036b73
30036b0a:	mov    eax,DWORD PTR [ebp-0x3c]
30036b0d:	mov    DWORD PTR [ebp+0xc],eax
30036b10:	test   eax,eax
30036b12:	je     0x30036b2b
30036b14:	lea    eax,[ebp+0xc]
30036b17:	push   eax
30036b18:	call   0x30008fa7
30036b1d:	push   eax
30036b1e:	mov    ecx,ebx
30036b20:	call   0x300093f0
30036b25:	cmp    DWORD PTR [ebp+0xc],0x0
30036b29:	jne    0x30036b14
30036b2b:	mov    edx,DWORD PTR [ebp-0x54]
30036b2e:	lea    eax,[ebp-0x20]
30036b31:	push   eax
30036b32:	mov    eax,DWORD PTR [ebp-0x4c]
30036b35:	shr    eax,1
30036b37:	push   eax
30036b38:	lea    ecx,[ebp-0x3c]
30036b3b:	call   0x3000badf
30036b40:	mov    edi,eax
30036b42:	test   edi,edi
30036b44:	js     0x30036b73
30036b46:	mov    eax,DWORD PTR [ebp-0x20]
30036b49:	add    eax,eax
30036b4b:	mov    DWORD PTR [ebp-0x50],eax
30036b4e:	jmp    0x30036be0
30036b53:	push   0x4
30036b55:	pop    eax
30036b56:	push   edi
30036b57:	push   DWORD PTR [ebp-0x54]
30036b5a:	mov    DWORD PTR [ebp-0x5c],eax
30036b5d:	push   eax
30036b5e:	lea    eax,[ebp-0x48]
30036b61:	push   eax
30036b62:	call   0x3000ba07
30036b67:	add    esp,0x10
30036b6a:	test   eax,eax
30036b6c:	je     0x30036be0
30036b6e:	mov    edi,0x80004005
30036b73:	lea    ecx,[ebp-0x3c]
30036b76:	call   0x30007014
30036b7b:	push   esi
30036b7c:	call   DWORD PTR ds:0x300453d4
30036b82:	pop    ecx
30036b83:	lea    ecx,[ebp-0x58]
30036b86:	call   0x300051a4
30036b8b:	lea    ecx,[ebp-0x60]
30036b8e:	call   0x300051a4
30036b93:	lea    ecx,[ebp-0x64]
30036b96:	call   0x300051a4
30036b9b:	mov    eax,edi
30036b9d:	pop    edi
30036b9e:	pop    esi
30036b9f:	pop    ebx
30036ba0:	leave  
30036ba1:	ret    0xc
30036ba4:	mov    DWORD PTR [ebp-0x5c],0x3
30036bab:	jmp    0x30036be0
30036bad:	mov    DWORD PTR [ebp-0x5c],0x1
30036bb4:	jmp    0x30036bba
30036bb6:	and    DWORD PTR [ebp-0x5c],0x0
30036bba:	mov    eax,DWORD PTR [ebp-0x54]
30036bbd:	mov    BYTE PTR [edi+eax*1],0x0
30036bc1:	push   DWORD PTR [ebp-0x54]
30036bc4:	call   0x300042e4
30036bc9:	pop    ecx
30036bca:	push   eax
30036bcb:	push   DWORD PTR [ebp-0x54]
30036bce:	lea    ecx,[ebp-0x58]
30036bd1:	call   0x3000416f
30036bd6:	mov    eax,DWORD PTR [ebx]
30036bd8:	lea    ecx,[ebp-0x58]
30036bdb:	push   ecx
30036bdc:	mov    ecx,ebx
30036bde:	call   DWORD PTR [eax]
30036be0:	mov    ecx,DWORD PTR [ebp-0x24]
30036be3:	lea    eax,[ebp-0x64]
30036be6:	push   eax
30036be7:	call   0x300378f8
30036bec:	mov    edi,eax
30036bee:	test   edi,edi
30036bf0:	js     0x30036b73
30036bf2:	lea    ecx,[ebp-0x3c]
30036bf5:	call   0x30007014
30036bfa:	mov    eax,DWORD PTR [ebp+0x10]
30036bfd:	inc    eax
30036bfe:	mov    DWORD PTR [ebp+0x10],eax
30036c01:	cmp    eax,DWORD PTR [ebp-0x10]
30036c04:	jae    0x30036b7b
30036c0a:	jmp    0x30036a39
30036c0f:	push   ebp
30036c10:	mov    ebp,esp
30036c12:	push   ebx
30036c13:	push   esi
30036c14:	mov    esi,DWORD PTR [ebp+0x8]
30036c17:	push   edi
30036c18:	push   esi
30036c19:	mov    ebx,ecx
30036c1b:	call   0x30012930
30036c20:	add    esi,0x2c
30036c23:	push   esi
30036c24:	lea    ecx,[ebx+0x2c]
30036c27:	call   0x30012906
30036c2c:	lea    eax,[esi+0x8]
30036c2f:	push   eax
30036c30:	lea    ecx,[ebx+0x34]
30036c33:	call   0x30012906
30036c38:	pop    edi
30036c39:	pop    esi
30036c3a:	mov    eax,ebx
30036c3c:	pop    ebx
30036c3d:	pop    ebp
30036c3e:	ret    0x4
30036c41:	push   ebp
30036c42:	mov    ebp,esp
30036c44:	sub    esp,0x14
30036c47:	push   esi
30036c48:	push   DWORD PTR [ebp+0xc]
30036c4b:	xor    eax,eax
30036c4d:	push   DWORD PTR [ebp+0x8]
30036c50:	mov    esi,ecx
30036c52:	lea    ecx,[ebp-0x10]
30036c55:	mov    DWORD PTR [ebp-0x10],eax
30036c58:	mov    DWORD PTR [ebp-0xc],eax
30036c5b:	mov    DWORD PTR [ebp-0x8],eax
30036c5e:	mov    DWORD PTR [ebp-0x4],eax
30036c61:	call   0x30036edb
30036c66:	test   eax,eax
30036c68:	js     0x30036c89
30036c6a:	lea    ecx,[esi+0x24]
30036c6d:	lea    edx,[ebp-0x8]
30036c70:	call   0x30035c05
30036c75:	test   al,al
30036c77:	jne    0x30036c89
30036c79:	push   DWORD PTR [ebp+0xc]
30036c7c:	lea    ecx,[esi+0x2c]
30036c7f:	push   DWORD PTR [ebp+0x8]
30036c82:	call   0x30036edb
30036c87:	jmp    0x30036c8e
30036c89:	mov    eax,0x80070057
30036c8e:	pop    esi
30036c8f:	leave  
30036c90:	ret    0x8
30036c93:	push   ebp
30036c94:	mov    ebp,esp
30036c96:	sub    esp,0x1c
30036c99:	push   esi
30036c9a:	push   edi
30036c9b:	push   DWORD PTR [ebp+0x8]
30036c9e:	mov    edi,ecx
30036ca0:	call   0x30013452
30036ca5:	test   eax,eax
30036ca7:	js     0x30036d6a
30036cad:	lea    ecx,[ebp-0x8]
30036cb0:	call   0x300051c8
30036cb5:	push   0x3002a980
30036cba:	lea    ecx,[ebp-0xc]
30036cbd:	call   0x3000437e
30036cc2:	mov    ecx,DWORD PTR [ebp+0x8]
30036cc5:	lea    eax,[ebp-0x8]
30036cc8:	push   eax
30036cc9:	lea    edx,[ebp-0xc]
30036ccc:	call   0x3000e5e4
30036cd1:	lea    ecx,[ebp-0xc]
30036cd4:	mov    esi,eax
30036cd6:	call   0x300051a4
30036cdb:	test   esi,esi
30036cdd:	jns    0x30036cfb
30036cdf:	cmp    BYTE PTR ds:0x300430f1,0x0
30036ce6:	je     0x30036d60
30036ce8:	push   0x0
30036cea:	xor    ecx,ecx
30036cec:	push   0x30036d70
30036cf1:	mov    edx,esi
30036cf3:	inc    ecx
30036cf4:	call   0x30033ac0
30036cf9:	jmp    0x30036d60
30036cfb:	mov    ecx,DWORD PTR [ebp-0x8]
30036cfe:	xor    eax,eax
30036d00:	lea    edx,[ebp-0x1c]
30036d03:	mov    DWORD PTR [ebp-0x1c],eax
30036d06:	mov    DWORD PTR [ebp-0x18],eax
30036d09:	mov    DWORD PTR [ebp-0x14],eax
30036d0c:	mov    DWORD PTR [ebp-0x10],eax
30036d0f:	call   0x30036f94
30036d14:	mov    esi,eax
30036d16:	test   esi,esi
30036d18:	jns    0x30036d21
30036d1a:	mov    ecx,0x30036da4
30036d1f:	jmp    0x30036d56
30036d21:	lea    ecx,[edi+0x24]
30036d24:	lea    edx,[ebp-0x14]
30036d27:	call   0x30035c05
30036d2c:	test   al,al
30036d2e:	jne    0x30036d4c
30036d30:	lea    eax,[ebp-0x1c]
30036d33:	push   eax
30036d34:	lea    ecx,[edi+0x2c]
30036d37:	call   0x30012906
30036d3c:	lea    eax,[ebp-0x14]
30036d3f:	push   eax
30036d40:	lea    ecx,[edi+0x34]
30036d43:	call   0x30012906
30036d48:	xor    esi,esi
30036d4a:	jmp    0x30036d60
30036d4c:	mov    esi,0x80070057
30036d51:	mov    ecx,0x30036ddc
30036d56:	push   DWORD PTR [ebp-0x8]
30036d59:	mov    edx,esi
30036d5b:	call   0x30033b68
30036d60:	lea    ecx,[ebp-0x8]
30036d63:	call   0x300051a4
30036d68:	mov    eax,esi
30036d6a:	pop    edi
30036d6b:	pop    esi
30036d6c:	leave  
30036d6d:	ret    0x4
30036d70:	inc    esi
30036d71:	add    BYTE PTR [ecx+0x0],ah
30036d74:	imul   eax,DWORD PTR [eax],0x65006c
30036d7a:	add    BYTE PTR fs:[eax],ah
30036d7d:	add    BYTE PTR [eax+eax*1+0x6f],dh
30036d81:	add    BYTE PTR [eax],ah
30036d83:	add    BYTE PTR [edx+0x0],dh
30036d86:	add    BYTE PTR gs:[ecx+0x0],ah
30036d8a:	add    BYTE PTR fs:[eax],ah
30036d8d:	add    BYTE PTR [edi+0x0],cl
30036d90:	ins    BYTE PTR es:[edi],dx
30036d91:	add    BYTE PTR [eax+eax*1+0x56],ah
30036d95:	add    BYTE PTR [ebp+0x0],ah
30036d98:	jb     0x30036d9a
30036d9a:	jae    0x30036d9c
30036d9c:	imul   eax,DWORD PTR [eax],0x6e006f
30036da2:	add    BYTE PTR [eax],al
30036da4:	inc    esi
30036da5:	add    BYTE PTR [ecx+0x0],ah
30036da8:	imul   eax,DWORD PTR [eax],0x65006c
30036dae:	add    BYTE PTR fs:[eax],ah
30036db1:	add    BYTE PTR [eax+eax*1+0x6f],dh
30036db5:	add    BYTE PTR [eax],ah
30036db7:	add    BYTE PTR [eax+0x0],dh
30036dba:	popa   
30036dbb:	add    BYTE PTR [edx+0x0],dh
30036dbe:	jae    0x30036dc0
30036dc0:	add    BYTE PTR gs:[eax],ah
30036dc3:	add    BYTE PTR [edi+0x0],cl
30036dc6:	ins    BYTE PTR es:[edi],dx
30036dc7:	add    BYTE PTR [eax+eax*1+0x56],ah
30036dcb:	add    BYTE PTR [ebp+0x0],ah
30036dce:	jb     0x30036dd0
30036dd0:	jae    0x30036dd2
30036dd2:	imul   eax,DWORD PTR [eax],0x6e006f
30036dd8:	add    BYTE PTR [eax],al
30036dda:	nop
30036ddb:	nop
30036ddc:	inc    esi
30036ddd:	add    BYTE PTR [ecx+0x0],ah
30036de0:	imul   eax,DWORD PTR [eax],0x65006c
30036de6:	add    BYTE PTR fs:[eax],ah
30036de9:	add    BYTE PTR [eax+eax*1+0x6f],dh
30036ded:	add    BYTE PTR [eax],ah
30036def:	add    BYTE PTR [ebx+0x0],dh
30036df2:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
30036df7:	add    BYTE PTR [edi+0x0],cl
30036dfa:	ins    BYTE PTR es:[edi],dx
30036dfb:	add    BYTE PTR [eax+eax*1+0x56],ah
30036dff:	add    BYTE PTR [ebp+0x0],ah
30036e02:	jb     0x30036e04
30036e04:	jae    0x30036e06
30036e06:	imul   eax,DWORD PTR [eax],0x6e006f
30036e0c:	add    BYTE PTR [eax],al
30036e0e:	push   ebp
30036e0f:	mov    ebp,esp
30036e11:	push   ecx
30036e12:	push   ecx
30036e13:	push   esi
30036e14:	mov    esi,ecx
30036e16:	lea    ecx,[ebp-0x8]
30036e19:	call   0x300051c8
30036e1e:	lea    ecx,[ebp-0x4]
30036e21:	call   0x300051c8
30036e26:	lea    eax,[ebp-0x8]
30036e29:	push   eax
30036e2a:	mov    ecx,esi
30036e2c:	call   0x30012e44
30036e31:	lea    eax,[ebp-0x4]
30036e34:	push   eax
30036e35:	lea    ecx,[esi+0x2c]
30036e38:	call   0x30036f13
30036e3d:	push   DWORD PTR [ebp-0x4]
30036e40:	push   DWORD PTR [ebp-0x8]
30036e43:	push   0x30036e68
30036e48:	push   DWORD PTR [ebp+0x8]
30036e4b:	call   0x30005153
30036e50:	add    esp,0x10
30036e53:	lea    ecx,[ebp-0x4]
30036e56:	call   0x300051a4
30036e5b:	lea    ecx,[ebp-0x8]
30036e5e:	call   0x300051a4
30036e63:	pop    esi
30036e64:	leave  
30036e65:	ret    0x4
30036e68:	and    eax,0x2c007300
30036e6d:	add    BYTE PTR [eax],ah
30036e6f:	add    BYTE PTR [edi+0x0],cl
30036e72:	ins    BYTE PTR es:[edi],dx
30036e73:	add    BYTE PTR [eax+eax*1+0x56],ah
30036e77:	add    BYTE PTR [ebp+0x0],ah
30036e7a:	jb     0x30036e7c
30036e7c:	jae    0x30036e7e
30036e7e:	imul   eax,DWORD PTR [eax],0x6e006f
30036e84:	cmp    eax,0x73002500
30036e89:	add    BYTE PTR [eax],al
30036e8b:	add    BYTE PTR [ebp-0x75],dl
30036e8e:	in     al,dx
30036e8f:	push   esi
30036e90:	mov    esi,0x3002a998
30036e95:	push   esi
30036e96:	call   0x300042e4
30036e9b:	pop    ecx
30036e9c:	mov    ecx,DWORD PTR [ebp+0x8]
30036e9f:	push   eax
30036ea0:	push   esi
30036ea1:	call   0x3000416f
30036ea6:	pop    esi
30036ea7:	pop    ebp
30036ea8:	ret    0x4
30036eab:	push   ebp
30036eac:	mov    ebp,esp
30036eae:	push   esi
30036eaf:	push   edi
30036eb0:	mov    edi,DWORD PTR [ebp+0x8]
30036eb3:	mov    edx,edi
30036eb5:	mov    esi,ecx
30036eb7:	call   0x30012c57
30036ebc:	test   al,al
30036ebe:	je     0x30036ed3
30036ec0:	lea    edx,[edi+0x8]
30036ec3:	lea    ecx,[esi+0x8]
30036ec6:	call   0x30012c57
30036ecb:	test   al,al
30036ecd:	je     0x30036ed3
30036ecf:	mov    al,0x1
30036ed1:	jmp    0x30036ed5
30036ed3:	xor    al,al
30036ed5:	pop    edi
30036ed6:	pop    esi
30036ed7:	pop    ebp
30036ed8:	ret    0x4
30036edb:	push   ebp
30036edc:	mov    ebp,esp
30036ede:	mov    edx,DWORD PTR [ebp+0x8]
30036ee1:	push   esi
30036ee2:	mov    esi,ecx
30036ee4:	mov    ecx,DWORD PTR [ebp+0xc]
30036ee7:	call   0x30035c05
30036eec:	test   al,al
30036eee:	je     0x30036ef7
30036ef0:	mov    eax,0x80070057
30036ef5:	jmp    0x30036f0e
30036ef7:	push   DWORD PTR [ebp+0x8]
30036efa:	mov    ecx,esi
30036efc:	call   0x30012906
30036f01:	push   DWORD PTR [ebp+0xc]
30036f04:	lea    ecx,[esi+0x8]
30036f07:	call   0x30012906
30036f0c:	xor    eax,eax
30036f0e:	pop    esi
30036f0f:	pop    ebp
30036f10:	ret    0x8
30036f13:	push   ebp
30036f14:	mov    ebp,esp
30036f16:	push   ecx
30036f17:	push   ecx
30036f18:	push   esi
30036f19:	mov    esi,ecx
30036f1b:	push   edi
30036f1c:	lea    edx,[esi+0x8]
30036f1f:	call   0x30012c57
30036f24:	test   al,al
30036f26:	je     0x30036f34
30036f28:	push   DWORD PTR [ebp+0x8]
30036f2b:	mov    ecx,esi
30036f2d:	call   0x30012ee4
30036f32:	jmp    0x30036f81
30036f34:	lea    ecx,[ebp-0x8]
30036f37:	call   0x300051c8
30036f3c:	lea    ecx,[ebp-0x4]
30036f3f:	call   0x300051c8
30036f44:	lea    eax,[ebp-0x8]
30036f47:	push   eax
30036f48:	mov    ecx,esi
30036f4a:	call   0x30012ee4
30036f4f:	lea    eax,[ebp-0x4]
30036f52:	push   eax
30036f53:	lea    ecx,[esi+0x8]
30036f56:	call   0x30012ee4
30036f5b:	push   DWORD PTR [ebp-0x4]
30036f5e:	push   DWORD PTR [ebp-0x8]
30036f61:	push   0x30036f88
30036f66:	push   DWORD PTR [ebp+0x8]
30036f69:	call   0x30005153
30036f6e:	add    esp,0x10
30036f71:	lea    ecx,[ebp-0x4]
30036f74:	call   0x300051a4
30036f79:	lea    ecx,[ebp-0x8]
30036f7c:	call   0x300051a4
30036f81:	pop    edi
30036f82:	pop    esi
30036f83:	leave  
30036f84:	ret    0x4
30036f87:	nop
30036f88:	and    eax,0x2d007300
30036f8d:	add    BYTE PTR ds:0x7300,ah
30036f93:	add    BYTE PTR [ebp-0x75],dl
30036f96:	in     al,dx
30036f97:	sub    esp,0x24
30036f9a:	push   ebx
30036f9b:	push   esi
30036f9c:	push   edi
30036f9d:	mov    edi,edx
30036f9f:	test   ecx,ecx
30036fa1:	jne    0x30036fad
30036fa3:	mov    eax,0x80004003
30036fa8:	jmp    0x300370be
30036fad:	push   ecx
30036fae:	lea    ecx,[ebp-0x4]
30036fb1:	call   0x3000437e
30036fb6:	push   0x20
30036fb8:	lea    ecx,[ebp-0x4]
30036fbb:	call   0x300370c8
30036fc0:	push   0x9
30036fc2:	lea    ecx,[ebp-0x4]
30036fc5:	call   0x300370c8
30036fca:	xor    esi,esi
30036fcc:	push   esi
30036fcd:	push   0x2d
30036fcf:	lea    ecx,[ebp-0x4]
30036fd2:	call   0x300091f2
30036fd7:	cmp    eax,0xffffffff
30036fda:	je     0x3003708d
30036fe0:	lea    eax,[ebp-0x8]
30036fe3:	push   eax
30036fe4:	mov    ebx,0x300370c4
30036fe9:	push   ebx
30036fea:	lea    eax,[ebp-0x14]
30036fed:	push   eax
30036fee:	lea    ecx,[ebp-0x4]
30036ff1:	mov    DWORD PTR [ebp-0x8],esi
30036ff4:	call   0x30008ea6
30036ff9:	mov    eax,DWORD PTR [ebp-0x14]
30036ffc:	cmp    DWORD PTR [eax-0xc],esi
30036fff:	jle    0x30037086
30037005:	cmp    DWORD PTR [ebp-0x8],0xffffffff
30037009:	je     0x30037086
3003700b:	lea    eax,[ebp-0x8]
3003700e:	push   eax
3003700f:	push   ebx
30037010:	lea    eax,[ebp-0x10]
30037013:	push   eax
30037014:	lea    ecx,[ebp-0x4]
30037017:	call   0x30008ea6
3003701c:	mov    eax,DWORD PTR [ebp-0x10]
3003701f:	cmp    DWORD PTR [eax-0xc],esi
30037022:	jle    0x3003707f
30037024:	cmp    DWORD PTR [ebp-0x8],0xffffffff
30037028:	je     0x3003707f
3003702a:	mov    ecx,DWORD PTR [ebp-0x14]
3003702d:	xor    eax,eax
3003702f:	lea    edx,[ebp-0x20]
30037032:	mov    DWORD PTR [ebp-0x20],eax
30037035:	mov    DWORD PTR [ebp-0x1c],eax
30037038:	call   0x3001279b
3003703d:	mov    esi,eax
3003703f:	test   esi,esi
30037041:	js     0x3003706d
30037043:	mov    ecx,DWORD PTR [ebp-0x10]
30037046:	xor    eax,eax
30037048:	lea    edx,[ebp-0xc]
3003704b:	mov    DWORD PTR [ebp-0xc],eax
3003704e:	mov    DWORD PTR [ebp-0x8],eax
30037051:	call   0x3001279b
30037056:	mov    esi,eax
30037058:	test   esi,esi
3003705a:	js     0x3003706d
3003705c:	lea    eax,[ebp-0xc]
3003705f:	push   eax
30037060:	lea    eax,[ebp-0x20]
30037063:	push   eax
30037064:	mov    ecx,edi
30037066:	call   0x30036edb
3003706b:	mov    esi,eax
3003706d:	lea    ecx,[ebp-0x10]
30037070:	call   0x300051a4
30037075:	lea    ecx,[ebp-0x14]
30037078:	call   0x300051a4
3003707d:	jmp    0x300370b4
3003707f:	mov    esi,0x80070057
30037084:	jmp    0x3003706d
30037086:	mov    esi,0x80070057
3003708b:	jmp    0x30037075
3003708d:	mov    ecx,DWORD PTR [ebp-0x4]
30037090:	xor    eax,eax
30037092:	lea    edx,[ebp-0x18]
30037095:	mov    DWORD PTR [ebp-0x18],eax
30037098:	mov    DWORD PTR [ebp-0x14],eax
3003709b:	call   0x3001279b
300370a0:	mov    esi,eax
300370a2:	test   esi,esi
300370a4:	js     0x300370b4
300370a6:	lea    eax,[ebp-0x18]
300370a9:	push   eax
300370aa:	push   eax
300370ab:	mov    ecx,edi
300370ad:	call   0x30036edb
300370b2:	mov    esi,eax
300370b4:	lea    ecx,[ebp-0x4]
300370b7:	call   0x300051a4
300370bc:	mov    eax,esi
300370be:	pop    edi
300370bf:	pop    esi
300370c0:	pop    ebx
300370c1:	leave  
300370c2:	ret    
300370c3:	nop
300370c4:	sub    eax,0x55000000
300370c9:	mov    ebp,esp
300370cb:	sub    esp,0x10
300370ce:	mov    eax,DWORD PTR [ecx]
300370d0:	push   ebx
300370d1:	push   esi
300370d2:	push   edi
300370d3:	mov    edi,DWORD PTR [eax-0xc]
300370d6:	push   edi
300370d7:	mov    DWORD PTR [ebp-0x10],ecx
300370da:	call   0x30004286
300370df:	mov    esi,eax
300370e1:	mov    edx,esi
300370e3:	lea    ebx,[esi+edi*2]
300370e6:	mov    DWORD PTR [ebp-0x4],ebx
300370e9:	cmp    esi,ebx
300370eb:	jae    0x30037134
300370ed:	mov    cx,WORD PTR [ebp+0x8]
300370f1:	mov    eax,ebx
300370f3:	lea    ebx,[esi+0x2]
300370f6:	cmp    WORD PTR [esi],cx
300370f9:	je     0x3003712e
300370fb:	mov    ecx,ebx
300370fd:	sub    ecx,esi
300370ff:	sar    ecx,1
30037101:	lea    eax,[edx+ecx*2]
30037104:	mov    DWORD PTR [ebp-0xc],eax
30037107:	xor    eax,eax
30037109:	mov    DWORD PTR [ebp-0x8],eax
3003710c:	cmp    edx,DWORD PTR [ebp-0xc]
3003710f:	je     0x30037127
30037111:	cmp    eax,ecx
30037113:	jae    0x30037127
30037115:	mov    ax,WORD PTR [esi]
30037118:	mov    WORD PTR [edx],ax
3003711b:	mov    eax,DWORD PTR [ebp-0x8]
3003711e:	add    esi,0x2
30037121:	add    edx,0x2
30037124:	inc    eax
30037125:	jmp    0x30037109
30037127:	mov    cx,WORD PTR [ebp+0x8]
3003712b:	mov    eax,DWORD PTR [ebp-0x4]
3003712e:	mov    esi,ebx
30037130:	cmp    ebx,eax
30037132:	jb     0x300370f3
30037134:	mov    ecx,DWORD PTR [ebp-0x10]
30037137:	sub    esi,edx
30037139:	sar    esi,1
3003713b:	sub    edi,esi
3003713d:	xor    eax,eax
3003713f:	push   edi
30037140:	mov    WORD PTR [edx],ax
30037143:	call   0x30004147
30037148:	pop    edi
30037149:	mov    eax,esi
3003714b:	pop    esi
3003714c:	pop    ebx
3003714d:	leave  
3003714e:	ret    0x4
30037151:	mov    eax,0x80004001
30037156:	ret    0x10
30037159:	mov    eax,0x80004001
3003715e:	ret    0x20
30037161:	mov    eax,0x80004001
30037166:	ret    0x1c
30037169:	mov    eax,0x80004001
3003716e:	ret    0x14
30037171:	push   ebp
30037172:	mov    ebp,esp
30037174:	mov    eax,DWORD PTR [ebp+0x8]
30037177:	xor    ecx,ecx
30037179:	mov    edx,DWORD PTR [eax+0xc]
3003717c:	test   edx,edx
3003717e:	je     0x30037192
30037180:	push   DWORD PTR [ebp+0x10]
30037183:	mov    eax,DWORD PTR [edx]
30037185:	push   DWORD PTR [ebp+0xc]
30037188:	push   edx
30037189:	call   DWORD PTR [eax+0x2c]
3003718c:	mov    ecx,eax
3003718e:	test   ecx,ecx
30037190:	js     0x30037194
30037192:	mov    eax,ecx
30037194:	pop    ebp
30037195:	ret    0xc
30037198:	push   ebp
30037199:	mov    ebp,esp
3003719b:	mov    eax,DWORD PTR [ebp+0x8]
3003719e:	xor    ecx,ecx
300371a0:	mov    edx,DWORD PTR [eax+0xc]
300371a3:	test   edx,edx
300371a5:	je     0x300371bf
300371a7:	push   DWORD PTR [ebp+0x18]
300371aa:	mov    eax,DWORD PTR [edx]
300371ac:	push   DWORD PTR [ebp+0x14]
300371af:	push   DWORD PTR [ebp+0x10]
300371b2:	push   DWORD PTR [ebp+0xc]
300371b5:	push   edx
300371b6:	call   DWORD PTR [eax+0x30]
300371b9:	mov    ecx,eax
300371bb:	test   ecx,ecx
300371bd:	js     0x300371c1
300371bf:	mov    eax,ecx
300371c1:	pop    ebp
300371c2:	ret    0x14
300371c5:	push   ebp
300371c6:	mov    ebp,esp
300371c8:	mov    eax,DWORD PTR [ebp+0x8]
300371cb:	xor    ecx,ecx
300371cd:	mov    edx,DWORD PTR [eax+0xc]
300371d0:	test   edx,edx
300371d2:	je     0x300371e6
300371d4:	push   DWORD PTR [ebp+0x10]
300371d7:	mov    eax,DWORD PTR [edx]
300371d9:	push   DWORD PTR [ebp+0xc]
300371dc:	push   edx
300371dd:	call   DWORD PTR [eax+0x34]
300371e0:	mov    ecx,eax
300371e2:	test   ecx,ecx
300371e4:	js     0x300371e8
300371e6:	mov    eax,ecx
300371e8:	pop    ebp
300371e9:	ret    0xc
300371ec:	push   ebp
300371ed:	mov    ebp,esp
300371ef:	sub    esp,0x24
300371f2:	push   ebx
300371f3:	push   esi
300371f4:	mov    ebx,ecx
300371f6:	xor    eax,eax
300371f8:	push   0x3001233c
300371fd:	lea    ecx,[ebp-0x24]
30037200:	mov    WORD PTR [ebp-0x4],ax
30037204:	call   0x3000437e
30037209:	push   0x30012360
3003720e:	lea    ecx,[ebp-0x20]
30037211:	call   0x3000437e
30037216:	push   0x300373fc
3003721b:	lea    ecx,[ebp-0x1c]
3003721e:	call   0x3000437e
30037223:	push   0x30012328
30037228:	lea    ecx,[ebp-0x18]
3003722b:	call   0x3000437e
30037230:	xor    eax,eax
30037232:	push   ecx
30037233:	lea    edx,[ebp-0x14]
30037236:	mov    DWORD PTR [ebp-0x14],eax
30037239:	mov    DWORD PTR [ebp-0x10],eax
3003723c:	mov    DWORD PTR [ebp-0xc],eax
3003723f:	mov    DWORD PTR [ebp-0x8],eax
30037242:	call   0x30012cee
30037247:	mov    esi,eax
30037249:	test   esi,esi
3003724b:	js     0x3003739e
30037251:	push   edi
30037252:	mov    edi,DWORD PTR [ebp+0x8]
30037255:	lea    eax,[ebp-0x10]
30037258:	push   eax
30037259:	push   edi
3003725a:	call   0x30014456
3003725f:	mov    esi,eax
30037261:	test   esi,esi
30037263:	js     0x3003739d
30037269:	lea    eax,[ebp-0xc]
3003726c:	push   eax
3003726d:	push   edi
3003726e:	call   0x3003741c
30037273:	mov    esi,eax
30037275:	test   esi,esi
30037277:	js     0x3003739d
3003727d:	mov    eax,DWORD PTR [edi+0x20]
30037280:	cmp    DWORD PTR [eax-0xc],0x0
30037284:	je     0x3003729a
30037286:	lea    eax,[ebp-0x8]
30037289:	push   eax
3003728a:	push   edi
3003728b:	call   0x30012f28
30037290:	mov    esi,eax
30037292:	test   esi,esi
30037294:	js     0x3003739d
3003729a:	push   DWORD PTR [ebp-0x14]
3003729d:	mov    eax,DWORD PTR [ebp-0x24]
300372a0:	mov    edx,DWORD PTR [ebx+0xc]
300372a3:	push   DWORD PTR [eax-0xc]
300372a6:	mov    ecx,DWORD PTR [edx]
300372a8:	push   eax
300372a9:	xor    edi,edi
300372ab:	push   edi
300372ac:	lea    eax,[ebp-0x4]
300372af:	push   eax
300372b0:	push   edi
300372b1:	push   eax
300372b2:	push   edx
300372b3:	call   DWORD PTR [ecx+0x20]
300372b6:	mov    esi,eax
300372b8:	test   esi,esi
300372ba:	js     0x3003739d
300372c0:	push   DWORD PTR [ebp-0x10]
300372c3:	mov    eax,DWORD PTR [ebp-0x20]
300372c6:	mov    edx,DWORD PTR [ebx+0xc]
300372c9:	push   DWORD PTR [eax-0xc]
300372cc:	mov    ecx,DWORD PTR [edx]
300372ce:	push   eax
300372cf:	push   edi
300372d0:	lea    eax,[ebp-0x4]
300372d3:	push   eax
300372d4:	push   edi
300372d5:	push   eax
300372d6:	push   edx
300372d7:	call   DWORD PTR [ecx+0x20]
300372da:	mov    esi,eax
300372dc:	test   esi,esi
300372de:	js     0x3003739d
300372e4:	mov    eax,DWORD PTR [ebp-0x20]
300372e7:	mov    edx,DWORD PTR [ebx+0xc]
300372ea:	push   DWORD PTR [eax-0xc]
300372ed:	mov    ecx,DWORD PTR [edx]
300372ef:	push   eax
300372f0:	push   edi
300372f1:	lea    eax,[ebp-0x4]
300372f4:	push   eax
300372f5:	push   edi
300372f6:	push   eax
300372f7:	push   edx
300372f8:	call   DWORD PTR [ecx+0x24]
300372fb:	mov    esi,eax
300372fd:	test   esi,esi
300372ff:	js     0x3003739d
30037305:	push   DWORD PTR [ebp-0xc]
30037308:	mov    eax,DWORD PTR [ebp-0x1c]
3003730b:	mov    edx,DWORD PTR [ebx+0xc]
3003730e:	push   DWORD PTR [eax-0xc]
30037311:	mov    ecx,DWORD PTR [edx]
30037313:	push   eax
30037314:	push   edi
30037315:	lea    eax,[ebp-0x4]
30037318:	push   eax
30037319:	push   edi
3003731a:	push   eax
3003731b:	push   edx
3003731c:	call   DWORD PTR [ecx+0x20]
3003731f:	mov    esi,eax
30037321:	test   esi,esi
30037323:	js     0x3003739d
30037325:	mov    eax,DWORD PTR [ebp-0x1c]
30037328:	mov    edx,DWORD PTR [ebx+0xc]
3003732b:	push   DWORD PTR [eax-0xc]
3003732e:	mov    ecx,DWORD PTR [edx]
30037330:	push   eax
30037331:	push   edi
30037332:	lea    eax,[ebp-0x4]
30037335:	push   eax
30037336:	push   edi
30037337:	push   eax
30037338:	push   edx
30037339:	call   DWORD PTR [ecx+0x24]
3003733c:	mov    esi,eax
3003733e:	test   esi,esi
30037340:	js     0x3003739d
30037342:	cmp    DWORD PTR [ebp-0x8],edi
30037345:	je     0x30037384
30037347:	push   DWORD PTR [ebp-0x8]
3003734a:	mov    eax,DWORD PTR [ebp-0x18]
3003734d:	mov    edx,DWORD PTR [ebx+0xc]
30037350:	push   DWORD PTR [eax-0xc]
30037353:	mov    ecx,DWORD PTR [edx]
30037355:	push   eax
30037356:	push   edi
30037357:	lea    eax,[ebp-0x4]
3003735a:	push   eax
3003735b:	push   edi
3003735c:	push   eax
3003735d:	push   edx
3003735e:	call   DWORD PTR [ecx+0x20]
30037361:	mov    esi,eax
30037363:	test   esi,esi
30037365:	js     0x3003739d
30037367:	mov    eax,DWORD PTR [ebp-0x18]
3003736a:	mov    edx,DWORD PTR [ebx+0xc]
3003736d:	push   DWORD PTR [eax-0xc]
30037370:	mov    ecx,DWORD PTR [edx]
30037372:	push   eax
30037373:	push   edi
30037374:	lea    eax,[ebp-0x4]
30037377:	push   eax
30037378:	push   edi
30037379:	push   eax
3003737a:	push   edx
3003737b:	call   DWORD PTR [ecx+0x24]
3003737e:	mov    esi,eax
30037380:	test   esi,esi
30037382:	js     0x3003739d
30037384:	mov    eax,DWORD PTR [ebp-0x24]
30037387:	mov    edx,DWORD PTR [ebx+0xc]
3003738a:	push   DWORD PTR [eax-0xc]
3003738d:	mov    ecx,DWORD PTR [edx]
3003738f:	push   eax
30037390:	push   edi
30037391:	lea    eax,[ebp-0x4]
30037394:	push   eax
30037395:	push   edi
30037396:	push   eax
30037397:	push   edx
30037398:	call   DWORD PTR [ecx+0x24]
3003739b:	mov    esi,eax
3003739d:	pop    edi
3003739e:	mov    eax,DWORD PTR [ebp-0x8]
300373a1:	test   eax,eax
300373a3:	je     0x300373ab
300373a5:	mov    ecx,DWORD PTR [eax]
300373a7:	push   eax
300373a8:	call   DWORD PTR [ecx+0x8]
300373ab:	mov    eax,DWORD PTR [ebp-0xc]
300373ae:	test   eax,eax
300373b0:	je     0x300373b8
300373b2:	mov    ecx,DWORD PTR [eax]
300373b4:	push   eax
300373b5:	call   DWORD PTR [ecx+0x8]
300373b8:	mov    eax,DWORD PTR [ebp-0x10]
300373bb:	test   eax,eax
300373bd:	je     0x300373c5
300373bf:	mov    ecx,DWORD PTR [eax]
300373c1:	push   eax
300373c2:	call   DWORD PTR [ecx+0x8]
300373c5:	mov    eax,DWORD PTR [ebp-0x14]
300373c8:	test   eax,eax
300373ca:	je     0x300373d2
300373cc:	mov    ecx,DWORD PTR [eax]
300373ce:	push   eax
300373cf:	call   DWORD PTR [ecx+0x8]
300373d2:	lea    ecx,[ebp-0x18]
300373d5:	call   0x300051a4
300373da:	lea    ecx,[ebp-0x1c]
300373dd:	call   0x300051a4
300373e2:	lea    ecx,[ebp-0x20]
300373e5:	call   0x300051a4
300373ea:	lea    ecx,[ebp-0x24]
300373ed:	call   0x300051a4
300373f2:	mov    eax,esi
300373f4:	pop    esi
300373f5:	pop    ebx
300373f6:	leave  
300373f7:	ret    0x4
300373fa:	nop
300373fb:	nop
300373fc:	bound  eax,QWORD PTR [eax]
300373fe:	imul   eax,DWORD PTR [eax],0x64006e
30037404:	imul   eax,DWORD PTR [eax],0x67006e
3003740a:	push   edx
3003740b:	add    BYTE PTR [ebp+0x0],ah
3003740e:	add    BYTE PTR fs:[ecx+0x0],ch
30037412:	jb     0x30037414
30037414:	add    BYTE PTR gs:[ebx+0x0],ah
30037418:	je     0x3003741a
3003741a:	add    BYTE PTR [eax],al
3003741c:	push   ebp
3003741d:	mov    ebp,esp
3003741f:	and    esp,0xfffffff8
30037422:	sub    esp,0x44
30037425:	push   esi
30037426:	push   ecx
30037427:	lea    ecx,[esp+0x34]
3003742b:	call   0x3000704d
30037430:	push   ecx
30037431:	lea    ecx,[esp+0x1c]
30037435:	call   0x3000704d
3003743a:	lea    ecx,[esp+0xc]
3003743e:	call   0x300051c8
30037443:	lea    ecx,[esp+0x8]
30037447:	call   0x300051c8
3003744c:	mov    esi,DWORD PTR [ebp+0x8]
3003744f:	lea    eax,[esp+0xc]
30037453:	push   eax
30037454:	lea    ecx,[esi+0x24]
30037457:	call   0x30012ee4
3003745c:	lea    eax,[esp+0x8]
30037460:	push   eax
30037461:	lea    ecx,[esi+0x2c]
30037464:	call   0x30036f13
30037469:	push   0x3002a980
3003746e:	lea    ecx,[esp+0x14]
30037472:	call   0x3000437e
30037477:	push   DWORD PTR [eax]
30037479:	lea    ecx,[esp+0x34]
3003747d:	call   0x3000b906
30037482:	lea    ecx,[esp+0x10]
30037486:	call   0x300051a4
3003748b:	push   0x3002a998
30037490:	lea    ecx,[esp+0x14]
30037494:	call   0x3000437e
30037499:	push   DWORD PTR [eax]
3003749b:	lea    ecx,[esp+0x34]
3003749f:	call   0x3000b906
300374a4:	lea    ecx,[esp+0x10]
300374a8:	call   0x300051a4
300374ad:	push   DWORD PTR [esp+0x8]
300374b1:	lea    ecx,[esp+0x1c]
300374b5:	call   0x3000b906
300374ba:	push   DWORD PTR [esp+0xc]
300374be:	lea    ecx,[esp+0x1c]
300374c2:	call   0x3000b906
300374c7:	push   ecx
300374c8:	push   DWORD PTR [ebp+0xc]
300374cb:	lea    eax,[esp+0x20]
300374cf:	mov    DWORD PTR [esp+0x18],eax
300374d3:	lea    eax,[esp+0x38]
300374d7:	push   ecx
300374d8:	lea    edx,[esp+0x1c]
300374dc:	lea    ecx,[esp+0x20]
300374e0:	mov    DWORD PTR [esp+0x20],eax
300374e4:	call   0x30012d4a
300374e9:	lea    ecx,[esp+0x8]
300374ed:	mov    esi,eax
300374ef:	call   0x300051a4
300374f4:	lea    ecx,[esp+0xc]
300374f8:	call   0x300051a4
300374fd:	lea    ecx,[esp+0x18]
30037501:	call   0x30007014
30037506:	lea    ecx,[esp+0x30]
3003750a:	call   0x30007014
3003750f:	mov    eax,esi
30037511:	pop    esi
30037512:	mov    esp,ebp
30037514:	pop    ebp
30037515:	ret    0x8
30037518:	push   ebp
30037519:	mov    ebp,esp
3003751b:	push   esi
3003751c:	mov    esi,ecx
3003751e:	call   0x30016b4d
30037523:	test   BYTE PTR [ebp+0x8],0x1
30037527:	je     0x30037531
30037529:	push   esi
3003752a:	call   DWORD PTR ds:0x300452ac
30037530:	pop    ecx
30037531:	mov    eax,esi
30037533:	pop    esi
30037534:	pop    ebp
30037535:	ret    0x4
30037538:	push   ebp
30037539:	mov    ebp,esp
3003753b:	push   esi
3003753c:	mov    esi,ecx
3003753e:	call   0x30016b31
30037543:	test   BYTE PTR [ebp+0x8],0x1
30037547:	je     0x30037551
30037549:	push   esi
3003754a:	call   DWORD PTR ds:0x300452ac
30037550:	pop    ecx
30037551:	mov    eax,esi
30037553:	pop    esi
30037554:	pop    ebp
30037555:	ret    0x4
30037558:	push   ebp
30037559:	mov    ebp,esp
3003755b:	sub    esp,0x18
3003755e:	mov    eax,ds:0x30043050
30037563:	xor    eax,ebp
30037565:	mov    DWORD PTR [ebp-0x4],eax
30037568:	and    DWORD PTR [ebp-0x18],0x0
3003756c:	push   ebx
3003756d:	push   esi
3003756e:	push   edi
3003756f:	mov    esi,0x300071f8
30037574:	lea    edi,[ebp-0x14]
30037577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30037578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30037579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003757a:	lea    eax,[ebp-0x14]
3003757d:	push   eax
3003757e:	mov    ebx,ecx
30037580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30037581:	call   DWORD PTR ds:0x300454a8
30037587:	test   eax,eax
30037589:	js     0x300375c5
3003758b:	lea    eax,[ebp-0x18]
3003758e:	push   eax
3003758f:	lea    eax,[ebp-0x14]
30037592:	push   eax
30037593:	call   DWORD PTR ds:0x300454a4
30037599:	mov    esi,eax
3003759b:	test   esi,esi
3003759d:	js     0x300375c5
3003759f:	push   DWORD PTR [ebp-0x18]
300375a2:	call   0x300042e4
300375a7:	pop    ecx
300375a8:	push   eax
300375a9:	push   DWORD PTR [ebp-0x18]
300375ac:	lea    ecx,[ebx+0x8]
300375af:	call   0x3000416f
300375b4:	cmp    DWORD PTR [ebp-0x18],0x0
300375b8:	je     0x300375c3
300375ba:	push   DWORD PTR [ebp-0x18]
300375bd:	call   DWORD PTR ds:0x300454b4
300375c3:	mov    eax,esi
300375c5:	mov    ecx,DWORD PTR [ebp-0x4]
300375c8:	pop    edi
300375c9:	pop    esi
300375ca:	xor    ecx,ebp
300375cc:	pop    ebx
300375cd:	call   0x3000115c
300375d2:	leave  
300375d3:	ret    
300375d4:	push   ebp
300375d5:	mov    ebp,esp
300375d7:	mov    eax,DWORD PTR [ebp+0x8]
300375da:	push   esi
300375db:	push   edi
300375dc:	push   0x10
300375de:	push   0x30037640
300375e3:	push   DWORD PTR [eax]
300375e5:	mov    edi,ecx
300375e7:	xor    esi,esi
300375e9:	call   DWORD PTR ds:0x30045388
300375ef:	add    esp,0xc
300375f2:	mov    DWORD PTR [edi+0x4],eax
300375f5:	test   eax,eax
300375f7:	je     0x30037621
300375f9:	push   eax
300375fa:	push   DWORD PTR [edi+0x8]
300375fd:	call   DWORD PTR ds:0x30045390
30037603:	pop    ecx
30037604:	pop    ecx
30037605:	cmp    eax,0xffff
3003760a:	jne    0x30037636
3003760c:	push   DWORD PTR [edi+0x4]
3003760f:	call   DWORD PTR ds:0x3004538c
30037615:	mov    esi,eax
30037617:	pop    ecx
30037618:	test   esi,esi
3003761a:	jne    0x3003762b
3003761c:	push   0xd
3003761e:	pop    esi
3003761f:	jmp    0x30037629
30037621:	call   DWORD PTR ds:0x30045160
30037627:	mov    esi,eax
30037629:	test   esi,esi
3003762b:	jle    0x30037636
3003762d:	movzx  esi,si
30037630:	or     esi,0x80070000
30037636:	pop    edi
30037637:	mov    eax,esi
30037639:	pop    esi
3003763a:	pop    ebp
3003763b:	ret    0x4
3003763e:	nop
3003763f:	nop
30037640:	ja     0x30037642
30037642:	add    BYTE PTR [eax],al
30037644:	push   ebp
30037645:	mov    ebp,esp
30037647:	push   esi
30037648:	mov    esi,ecx
3003764a:	call   0x3000aeb1
3003764f:	test   BYTE PTR [ebp+0x8],0x1
30037653:	je     0x3003765d
30037655:	push   esi
30037656:	call   DWORD PTR ds:0x300452ac
3003765c:	pop    ecx
3003765d:	mov    eax,esi
3003765f:	pop    esi
30037660:	pop    ebp
30037661:	ret    0x4
30037664:	push   esi
30037665:	mov    esi,ecx
30037667:	push   edi
30037668:	cmp    BYTE PTR [esi+0x24],0x0
3003766c:	je     0x30037688
3003766e:	xor    edi,edi
30037670:	lea    ecx,[esi+0x1c]
30037673:	mov    DWORD PTR [esi+0x10],edi
30037676:	mov    DWORD PTR [esi+0x18],edi
30037679:	call   0x30004564
3003767e:	lea    ecx,[esi+0x20]
30037681:	call   0x30004564
30037686:	jmp    0x3003768d
30037688:	mov    edi,0x80004005
3003768d:	mov    eax,edi
3003768f:	pop    edi
30037690:	pop    esi
30037691:	ret    
30037692:	push   ebp
30037693:	mov    ebp,esp
30037695:	mov    edx,DWORD PTR [ecx+0x4]
30037698:	test   edx,edx
3003769a:	je     0x300376b6
3003769c:	cmp    DWORD PTR [ecx+0xc],0x0
300376a0:	je     0x300376a7
300376a2:	mov    eax,DWORD PTR [ecx+0x18]
300376a5:	jmp    0x300376aa
300376a7:	or     eax,0xffffffff
300376aa:	push   eax
300376ab:	push   DWORD PTR [ebp+0x10]
300376ae:	push   DWORD PTR [ebp+0xc]
300376b1:	push   DWORD PTR [ebp+0x8]
300376b4:	call   edx
300376b6:	pop    ebp
300376b7:	ret    0xc
300376ba:	push   ebp
300376bb:	mov    ebp,esp
300376bd:	push   esi
300376be:	mov    esi,ecx
300376c0:	call   0x300376da
300376c5:	test   BYTE PTR [ebp+0x8],0x1
300376c9:	je     0x300376d3
300376cb:	push   esi
300376cc:	call   DWORD PTR ds:0x300452ac
300376d2:	pop    ecx
300376d3:	mov    eax,esi
300376d5:	pop    esi
300376d6:	pop    ebp
300376d7:	ret    0x4
300376da:	push   esi
300376db:	mov    esi,ecx
300376dd:	mov    DWORD PTR [esi],0x3002a9c8
300376e3:	call   0x300377a4
300376e8:	lea    ecx,[esi+0xc]
300376eb:	call   0x300051a4
300376f0:	cmp    DWORD PTR [esi+0x4],0x0
300376f4:	je     0x30037703
300376f6:	push   DWORD PTR [esi+0x4]
300376f9:	call   DWORD PTR ds:0x300451d0
300376ff:	and    DWORD PTR [esi+0x4],0x0
30037703:	pop    esi
30037704:	ret    
30037705:	push   ebp
30037706:	mov    ebp,esp
30037708:	mov    eax,DWORD PTR [ebp+0x8]
3003770b:	push   esi
3003770c:	mov    eax,DWORD PTR [eax]
3003770e:	push   edi
3003770f:	mov    edi,ecx
30037711:	xor    esi,esi
30037713:	mov    ecx,DWORD PTR [edi+0x8]
30037716:	test   ecx,ecx
30037718:	je     0x30037729
3003771a:	push   ecx
3003771b:	push   ecx
3003771c:	push   0x2
3003771e:	sub    esp,0xc
30037721:	push   eax
30037722:	call   0x30037cb8
30037727:	jmp    0x30037740
30037729:	push   esi
3003772a:	push   0x80
3003772f:	push   0x2
30037731:	push   esi
30037732:	push   0x1
30037734:	push   0x40000000
30037739:	push   eax
3003773a:	call   DWORD PTR ds:0x30045220
30037740:	cmp    eax,0xffffffff
30037743:	jne    0x3003774c
30037745:	call   0x30037d5e
3003774a:	jmp    0x30037751
3003774c:	mov    DWORD PTR [edi+0x4],eax
3003774f:	mov    eax,esi
30037751:	test   eax,eax
30037753:	js     0x30037798
30037755:	lea    ecx,[edi+0xc]
30037758:	mov    BYTE PTR [edi+0x10],0x1
3003775c:	call   0x30004564
30037761:	cmp    BYTE PTR [edi+0x10],0x0
30037765:	jne    0x3003776e
30037767:	mov    esi,0x80004005
3003776c:	jmp    0x30037792
3003776e:	push   esi
3003776f:	lea    eax,[ebp+0x8]
30037772:	push   eax
30037773:	push   0x3
30037775:	push   0x300377a0
3003777a:	push   DWORD PTR [edi+0x4]
3003777d:	call   DWORD PTR ds:0x3004527c
30037783:	test   eax,eax
30037785:	jne    0x3003778e
30037787:	call   0x30037d5e
3003778c:	mov    esi,eax
3003778e:	test   esi,esi
30037790:	jns    0x30037796
30037792:	mov    eax,esi
30037794:	jmp    0x30037798
30037796:	xor    eax,eax
30037798:	pop    edi
30037799:	pop    esi
3003779a:	pop    ebp
3003779b:	ret    0x8
3003779e:	nop
3003779f:	nop
300377a0:	out    dx,eax
300377a1:	mov    ebx,0x8b5600bf
300377a6:	icebp  
300377a7:	cmp    BYTE PTR [esi+0x10],0x0
300377ab:	je     0x300377e2
300377ad:	push   DWORD PTR [esi+0x4]
300377b0:	call   DWORD PTR ds:0x30045094
300377b6:	test   eax,eax
300377b8:	jne    0x300377c1
300377ba:	call   0x30037d5e
300377bf:	jmp    0x300377c3
300377c1:	xor    eax,eax
300377c3:	test   eax,eax
300377c5:	js     0x300377e5
300377c7:	cmp    DWORD PTR [esi+0x4],0x0
300377cb:	je     0x300377da
300377cd:	push   DWORD PTR [esi+0x4]
300377d0:	call   DWORD PTR ds:0x300451d0
300377d6:	and    DWORD PTR [esi+0x4],0x0
300377da:	mov    BYTE PTR [esi+0x10],0x0
300377de:	xor    eax,eax
300377e0:	pop    esi
300377e1:	ret    
300377e2:	xor    eax,eax
300377e4:	inc    eax
300377e5:	pop    esi
300377e6:	ret    
300377e7:	push   ebp
300377e8:	mov    ebp,esp
300377ea:	sub    esp,0xc
300377ed:	push   ebx
300377ee:	mov    ebx,DWORD PTR [ebp+0xc]
300377f1:	push   edi
300377f2:	xor    edi,edi
300377f4:	mov    DWORD PTR [ebp-0x4],ecx
300377f7:	test   ebx,ebx
300377f9:	jns    0x30037815
300377fb:	mov    ebx,DWORD PTR [ebp+0x8]
300377fe:	lea    ecx,[ebx+0x2]
30037801:	mov    ax,WORD PTR [ebx]
30037804:	add    ebx,0x2
30037807:	cmp    ax,di
3003780a:	jne    0x30037801
3003780c:	sub    ebx,ecx
3003780e:	sar    ebx,1
30037810:	mov    DWORD PTR [ebp+0xc],ebx
30037813:	test   ebx,ebx
30037815:	jne    0x3003781e
30037817:	xor    eax,eax
30037819:	jmp    0x300378e6
3003781e:	fild   DWORD PTR [ebp+0xc]
30037821:	push   esi
30037822:	fstp   QWORD PTR [ebp-0xc]
30037825:	fld    QWORD PTR [ebp-0xc]
30037828:	fmul   QWORD PTR ds:0x300378f0
3003782e:	call   0x3001eaa1
30037833:	mov    edi,eax
30037835:	push   edi
30037836:	call   0x300089a5
3003783b:	pop    ecx
3003783c:	mov    esi,eax
3003783e:	xor    eax,eax
30037840:	push   eax
30037841:	push   eax
30037842:	push   edi
30037843:	push   esi
30037844:	push   ebx
30037845:	push   DWORD PTR [ebp+0x8]
30037848:	push   eax
30037849:	push   0xfde9
3003784e:	call   DWORD PTR ds:0x30045214
30037854:	test   eax,eax
30037856:	jne    0x300378bb
30037858:	call   DWORD PTR ds:0x30045160
3003785e:	mov    edi,eax
30037860:	cmp    edi,0x7a
30037863:	je     0x30037874
30037865:	test   edi,edi
30037867:	jle    0x300378db
30037869:	movzx  edi,di
3003786c:	or     edi,0x80070000
30037872:	jmp    0x300378db
30037874:	xor    eax,eax
30037876:	push   eax
30037877:	push   eax
30037878:	push   eax
30037879:	push   eax
3003787a:	push   ebx
3003787b:	push   DWORD PTR [ebp+0x8]
3003787e:	push   eax
3003787f:	push   0xfde9
30037884:	call   DWORD PTR ds:0x30045214
3003788a:	push   esi
3003788b:	mov    edi,eax
3003788d:	call   DWORD PTR ds:0x300453d4
30037893:	push   edi
30037894:	call   0x300089a5
30037899:	pop    ecx
3003789a:	pop    ecx
3003789b:	mov    esi,eax
3003789d:	xor    eax,eax
3003789f:	push   eax
300378a0:	push   eax
300378a1:	push   edi
300378a2:	push   esi
300378a3:	push   ebx
300378a4:	push   DWORD PTR [ebp+0x8]
300378a7:	push   eax
300378a8:	push   0xfde9
300378ad:	call   DWORD PTR ds:0x30045214
300378b3:	test   eax,eax
300378b5:	jne    0x300378bb
300378b7:	xor    edi,edi
300378b9:	jmp    0x300378db
300378bb:	xor    edi,edi
300378bd:	push   edi
300378be:	lea    ecx,[ebp+0xc]
300378c1:	push   ecx
300378c2:	push   eax
300378c3:	mov    eax,DWORD PTR [ebp-0x4]
300378c6:	push   esi
300378c7:	push   DWORD PTR [eax+0x4]
300378ca:	call   DWORD PTR ds:0x3004527c
300378d0:	test   eax,eax
300378d2:	jne    0x300378db
300378d4:	call   0x30037d5e
300378d9:	mov    edi,eax
300378db:	push   esi
300378dc:	call   DWORD PTR ds:0x300453d4
300378e2:	pop    ecx
300378e3:	mov    eax,edi
300378e5:	pop    esi
300378e6:	pop    edi
300378e7:	pop    ebx
300378e8:	leave  
300378e9:	ret    0x8
300378ec:	nop
300378ed:	nop
300378ee:	nop
300378ef:	nop
300378f0:	add    BYTE PTR [eax],al
300378f2:	add    BYTE PTR [eax],al
300378f4:	add    BYTE PTR [eax],al
300378f6:	clc    
300378f7:	aas    
300378f8:	push   ebp
300378f9:	mov    ebp,esp
300378fb:	sub    esp,0x44
300378fe:	mov    eax,ds:0x30043050
30037903:	xor    eax,ebp
30037905:	mov    DWORD PTR [ebp-0x4],eax
30037908:	push   ebx
30037909:	mov    ebx,DWORD PTR [ebp+0x8]
3003790c:	push   esi
3003790d:	push   edi
3003790e:	mov    edi,ecx
30037910:	xor    ecx,ecx
30037912:	mov    esi,ecx
30037914:	cmp    BYTE PTR [edi+0x10],cl
30037917:	jne    0x30037923
30037919:	mov    eax,0x80070006
3003791e:	jmp    0x30037af7
30037923:	mov    eax,DWORD PTR [ebx]
30037925:	cmp    DWORD PTR [eax-0xc],ecx
30037928:	jne    0x30037934
3003792a:	mov    eax,0x80070057
3003792f:	jmp    0x30037af7
30037934:	lea    ecx,[edi+0xc]
30037937:	push   eax
30037938:	call   0x300091ce
3003793d:	test   eax,eax
3003793f:	je     0x300379c7
30037945:	mov    eax,DWORD PTR [edi+0xc]
30037948:	xor    ecx,ecx
3003794a:	cmp    DWORD PTR [eax-0xc],ecx
3003794d:	je     0x30037965
3003794f:	push   0x2
30037951:	push   0x3002a738
30037956:	mov    ecx,edi
30037958:	call   0x300377e7
3003795d:	test   eax,eax
3003795f:	js     0x30037af7
30037965:	push   0x1
30037967:	push   0x30009cc8
3003796c:	mov    ecx,edi
3003796e:	call   0x300377e7
30037973:	test   eax,eax
30037975:	js     0x30037af7
3003797b:	mov    eax,DWORD PTR [ebx]
3003797d:	mov    ecx,edi
3003797f:	push   DWORD PTR [eax-0xc]
30037982:	push   eax
30037983:	call   0x300377e7
30037988:	test   eax,eax
3003798a:	js     0x30037af7
30037990:	push   0x1
30037992:	push   0x30009f58
30037997:	mov    ecx,edi
30037999:	call   0x300377e7
3003799e:	test   eax,eax
300379a0:	js     0x30037af7
300379a6:	push   0x2
300379a8:	push   0x3002a738
300379ad:	mov    ecx,edi
300379af:	call   0x300377e7
300379b4:	mov    esi,eax
300379b6:	test   esi,esi
300379b8:	js     0x30037af5
300379be:	push   ebx
300379bf:	lea    ecx,[edi+0xc]
300379c2:	call   0x300014c1
300379c7:	lea    ecx,[ebx+0x4]
300379ca:	xor    edx,edx
300379cc:	mov    eax,DWORD PTR [ecx]
300379ce:	cmp    DWORD PTR [eax-0xc],edx
300379d1:	je     0x30037af5
300379d7:	push   0x30009cc4
300379dc:	call   0x300091ce
300379e1:	mov    esi,0x30037c0c
300379e6:	mov    ecx,edi
300379e8:	test   eax,eax
300379ea:	jne    0x30037a8c
300379f0:	mov    eax,DWORD PTR [ebx+0x4]
300379f3:	push   DWORD PTR [eax-0xc]
300379f6:	push   eax
300379f7:	call   0x300377e7
300379fc:	test   eax,eax
300379fe:	js     0x30037af7
30037a04:	push   0x1
30037a06:	push   0x30009cd4
30037a0b:	mov    ecx,edi
30037a0d:	call   0x300377e7
30037a12:	test   eax,eax
30037a14:	js     0x30037af7
30037a1a:	lea    ecx,[ebp-0x44]
30037a1d:	call   0x300051c8
30037a22:	mov    eax,DWORD PTR [ebx+0x8]
30037a25:	xor    ecx,ecx
30037a27:	sub    eax,ecx
30037a29:	je     0x30037bd2
30037a2f:	dec    eax
30037a30:	je     0x30037b7f
30037a36:	dec    eax
30037a37:	je     0x30037b76
30037a3d:	dec    eax
30037a3e:	je     0x30037b50
30037a44:	dec    eax
30037a45:	je     0x30037b08
30037a4b:	dec    eax
30037a4c:	jne    0x30037add
30037a52:	push   0x6
30037a54:	push   0x3002a9b0
30037a59:	mov    ecx,edi
30037a5b:	call   0x300377e7
30037a60:	mov    esi,eax
30037a62:	test   esi,esi
30037a64:	js     0x30037aed
30037a6a:	push   0x10
30037a6c:	push   0x1e
30037a6e:	lea    eax,[ebp-0x40]
30037a71:	push   eax
30037a72:	push   DWORD PTR [ebx+0x24]
30037a75:	push   DWORD PTR [ebx+0x20]
30037a78:	call   DWORD PTR ds:0x30045380
30037a7e:	add    esp,0x14
30037a81:	test   eax,eax
30037a83:	je     0x30037ab4
30037a85:	mov    esi,0x80004005
30037a8a:	jmp    0x30037aed
30037a8c:	push   0x1
30037a8e:	push   esi
30037a8f:	call   0x300377e7
30037a94:	test   eax,eax
30037a96:	js     0x30037af7
30037a98:	mov    eax,DWORD PTR [ebx+0x4]
30037a9b:	mov    ecx,edi
30037a9d:	push   DWORD PTR [eax-0xc]
30037aa0:	push   eax
30037aa1:	call   0x300377e7
30037aa6:	test   eax,eax
30037aa8:	js     0x30037af7
30037aaa:	push   0x1
30037aac:	push   esi
30037aad:	mov    ecx,edi
30037aaf:	jmp    0x300379f7
30037ab4:	lea    ecx,[ebp-0x40]
30037ab7:	xor    esi,esi
30037ab9:	lea    edx,[ecx+0x2]
30037abc:	mov    ax,WORD PTR [ecx]
30037abf:	add    ecx,0x2
30037ac2:	cmp    ax,si
30037ac5:	jne    0x30037abc
30037ac7:	sub    ecx,edx
30037ac9:	sar    ecx,1
30037acb:	push   ecx
30037acc:	lea    eax,[ebp-0x40]
30037acf:	push   eax
30037ad0:	mov    ecx,edi
30037ad2:	call   0x300377e7
30037ad7:	mov    esi,eax
30037ad9:	test   esi,esi
30037adb:	js     0x30037aed
30037add:	push   0x2
30037adf:	push   0x3002a738
30037ae4:	mov    ecx,edi
30037ae6:	call   0x300377e7
30037aeb:	mov    esi,eax
30037aed:	lea    ecx,[ebp-0x44]
30037af0:	call   0x300051a4
30037af5:	mov    eax,esi
30037af7:	mov    ecx,DWORD PTR [ebp-0x4]
30037afa:	pop    edi
30037afb:	pop    esi
30037afc:	xor    ecx,ebp
30037afe:	pop    ebx
30037aff:	call   0x3000115c
30037b04:	leave  
30037b05:	ret    0x4
30037b08:	push   0x6
30037b0a:	push   0x3000a84c
30037b0f:	mov    ecx,edi
30037b11:	call   0x300377e7
30037b16:	mov    esi,eax
30037b18:	test   esi,esi
30037b1a:	js     0x30037aed
30037b1c:	push   0x10
30037b1e:	push   0x1e
30037b20:	lea    eax,[ebp-0x40]
30037b23:	push   eax
30037b24:	push   DWORD PTR [ebx+0x1c]
30037b27:	call   0x3003c7a4
30037b2c:	add    esp,0x10
30037b2f:	test   eax,eax
30037b31:	jne    0x30037a85
30037b37:	lea    ecx,[ebp-0x40]
30037b3a:	xor    esi,esi
30037b3c:	lea    edx,[ecx+0x2]
30037b3f:	mov    ax,WORD PTR [ecx]
30037b42:	add    ecx,0x2
30037b45:	cmp    ax,si
30037b48:	je     0x30037ac7
30037b4e:	jmp    0x30037b3f
30037b50:	push   0x4
30037b52:	push   0x3000b630
30037b57:	mov    ecx,edi
30037b59:	call   0x300377e7
30037b5e:	mov    esi,eax
30037b60:	test   esi,esi
30037b62:	js     0x30037aed
30037b64:	push   DWORD PTR [ebx+0x14]
30037b67:	mov    ecx,edi
30037b69:	push   DWORD PTR [ebx+0x10]
30037b6c:	call   0x30037c10
30037b71:	jmp    0x30037ad7
30037b76:	push   0x7
30037b78:	push   0x3000b608
30037b7d:	jmp    0x30037b57
30037b7f:	push   0x2
30037b81:	push   0x30009f1c
30037b86:	mov    ecx,edi
30037b88:	call   0x300377e7
30037b8d:	mov    esi,eax
30037b8f:	test   esi,esi
30037b91:	js     0x30037aed
30037b97:	push   0x1
30037b99:	push   0x30037c0c
30037b9e:	mov    ecx,edi
30037ba0:	call   0x300377e7
30037ba5:	mov    esi,eax
30037ba7:	test   esi,esi
30037ba9:	js     0x30037aed
30037baf:	lea    eax,[ebx+0xc]
30037bb2:	push   eax
30037bb3:	lea    ecx,[ebp-0x44]
30037bb6:	call   0x300014c1
30037bbb:	push   0x3002a9c0
30037bc0:	push   0x30008fc4
30037bc5:	lea    ecx,[ebp-0x44]
30037bc8:	call   0x300043f1
30037bcd:	mov    eax,DWORD PTR [ebp-0x44]
30037bd0:	jmp    0x30037be9
30037bd2:	push   0x1
30037bd4:	push   esi
30037bd5:	mov    ecx,edi
30037bd7:	call   0x300377e7
30037bdc:	mov    esi,eax
30037bde:	test   esi,esi
30037be0:	js     0x30037aed
30037be6:	mov    eax,DWORD PTR [ebx+0xc]
30037be9:	push   DWORD PTR [eax-0xc]
30037bec:	mov    ecx,edi
30037bee:	push   eax
30037bef:	call   0x300377e7
30037bf4:	mov    esi,eax
30037bf6:	test   esi,esi
30037bf8:	js     0x30037aed
30037bfe:	push   0x1
30037c00:	push   0x30037c0c
30037c05:	jmp    0x30037ad0
30037c0a:	nop
30037c0b:	nop
30037c0c:	and    al,BYTE PTR [eax]
30037c0e:	add    BYTE PTR [eax],al
30037c10:	push   ebp
30037c11:	mov    ebp,esp
30037c13:	sub    esp,0xc
30037c16:	mov    eax,ds:0x30043050
30037c1b:	xor    eax,ebp
30037c1d:	mov    DWORD PTR [ebp-0x4],eax
30037c20:	push   ebx
30037c21:	mov    ebx,ecx
30037c23:	push   esi
30037c24:	cmp    BYTE PTR [ebx+0x10],0x0
30037c28:	mov    esi,DWORD PTR [ebp+0x8]
30037c2b:	jne    0x30037c34
30037c2d:	mov    eax,0x80004005
30037c32:	jmp    0x30037c9b
30037c34:	mov    eax,DWORD PTR [ebp+0xc]
30037c37:	push   edi
30037c38:	lea    edi,[esi+eax*1]
30037c3b:	jmp    0x30037c94
30037c3d:	mov    al,BYTE PTR [esi]
30037c3f:	cmp    al,0x10
30037c41:	movzx  eax,al
30037c44:	jb     0x30037c4f
30037c46:	push   0x10
30037c48:	push   0x3
30037c4a:	lea    ecx,[ebp-0xc]
30037c4d:	jmp    0x30037c5d
30037c4f:	push   0x30
30037c51:	pop    ecx
30037c52:	push   0x10
30037c54:	mov    WORD PTR [ebp-0xc],cx
30037c58:	push   0x2
30037c5a:	lea    ecx,[ebp-0xa]
30037c5d:	push   ecx
30037c5e:	push   eax
30037c5f:	call   DWORD PTR ds:0x300452a0
30037c65:	add    esp,0x10
30037c68:	test   eax,eax
30037c6a:	jne    0x30037cab
30037c6c:	push   0xffffffff
30037c6e:	lea    eax,[ebp-0xc]
30037c71:	push   eax
30037c72:	mov    ecx,ebx
30037c74:	call   0x300377e7
30037c79:	test   eax,eax
30037c7b:	js     0x30037c9a
30037c7d:	inc    esi
30037c7e:	cmp    esi,edi
30037c80:	jae    0x30037c98
30037c82:	push   0xffffffff
30037c84:	push   0x30037cb4
30037c89:	mov    ecx,ebx
30037c8b:	call   0x300377e7
30037c90:	test   eax,eax
30037c92:	js     0x30037c9a
30037c94:	cmp    esi,edi
30037c96:	jb     0x30037c3d
30037c98:	xor    eax,eax
30037c9a:	pop    edi
30037c9b:	mov    ecx,DWORD PTR [ebp-0x4]
30037c9e:	pop    esi
30037c9f:	xor    ecx,ebp
30037ca1:	pop    ebx
30037ca2:	call   0x3000115c
30037ca7:	leave  
30037ca8:	ret    0x8
30037cab:	mov    eax,0x80004005
30037cb0:	jmp    0x30037c9a
30037cb2:	nop
30037cb3:	nop
30037cb4:	sub    al,0x0
30037cb6:	add    BYTE PTR [eax],al
30037cb8:	push   ebp
30037cb9:	mov    ebp,esp
30037cbb:	push   esi
30037cbc:	push   edi
30037cbd:	mov    esi,ecx
30037cbf:	xor    edi,edi
30037cc1:	cmp    DWORD PTR [esi],edi
30037cc3:	je     0x30037d00
30037cc5:	push   0x30037d2c
30037cca:	call   DWORD PTR ds:0x30045174
30037cd0:	test   eax,eax
30037cd2:	je     0x30037d21
30037cd4:	push   0x30037d48
30037cd9:	push   eax
30037cda:	call   DWORD PTR ds:0x30045178
30037ce0:	test   eax,eax
30037ce2:	je     0x30037d21
30037ce4:	push   edi
30037ce5:	push   edi
30037ce6:	push   DWORD PTR [esi]
30037ce8:	push   edi
30037ce9:	push   0x80
30037cee:	push   DWORD PTR [ebp+0x18]
30037cf1:	push   edi
30037cf2:	push   0x1
30037cf4:	push   0x40000000
30037cf9:	push   DWORD PTR [ebp+0x8]
30037cfc:	call   eax
30037cfe:	jmp    0x30037d24
30037d00:	cmp    DWORD PTR [esi+0x4],edi
30037d03:	je     0x30037d21
30037d05:	push   edi
30037d06:	push   0x80
30037d0b:	push   DWORD PTR [ebp+0x18]
30037d0e:	push   edi
30037d0f:	push   0x1
30037d11:	push   0x40000000
30037d16:	push   DWORD PTR [ebp+0x8]
30037d19:	call   DWORD PTR ds:0x30045220
30037d1f:	jmp    0x30037d24
30037d21:	or     eax,0xffffffff
30037d24:	pop    edi
30037d25:	pop    esi
30037d26:	pop    ebp
30037d27:	ret    0x1c
30037d2a:	nop
30037d2b:	nop
30037d2c:	imul   eax,DWORD PTR [eax],0x65
30037d2f:	add    BYTE PTR [edx+0x0],dh
30037d32:	outs   dx,BYTE PTR ds:[esi]
30037d33:	add    BYTE PTR [ebp+0x0],ah
30037d36:	ins    BYTE PTR es:[edi],dx
30037d37:	add    BYTE PTR [ebx],dh
30037d39:	add    BYTE PTR [edx],dh
30037d3b:	add    BYTE PTR [esi],ch
30037d3d:	add    BYTE PTR [eax+eax*1+0x6c],ah
30037d41:	add    BYTE PTR [eax+eax*1+0x0],ch
30037d45:	add    BYTE PTR [eax+0x65724390],dl
30037d4b:	popa   
30037d4c:	je     0x30037db3
30037d4e:	inc    esi
30037d4f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x736e6172
30037d57:	popa   
30037d58:	arpl   WORD PTR [ebp+eiz*2+0x64],si
30037d5c:	push   edi
30037d5d:	add    bh,bh
30037d5f:	adc    eax,0x30045160
30037d64:	test   eax,eax
30037d66:	jle    0x30037d70
30037d68:	movzx  eax,ax
30037d6b:	or     eax,0x80070000
30037d70:	ret    
30037d71:	push   ebp
30037d72:	mov    ebp,esp
30037d74:	push   esi
30037d75:	mov    esi,ecx
30037d77:	call   0x3000aefb
30037d7c:	test   BYTE PTR [ebp+0x8],0x1
30037d80:	je     0x30037d8a
30037d82:	push   esi
30037d83:	call   DWORD PTR ds:0x300452ac
30037d89:	pop    ecx
30037d8a:	mov    eax,esi
30037d8c:	pop    esi
30037d8d:	pop    ebp
30037d8e:	ret    0x4
30037d91:	jmp    DWORD PTR ds:0x300452a8
30037d97:	push   ebp
30037d98:	mov    ebp,esp
30037d9a:	test   BYTE PTR [ebp+0x8],0x2
30037d9e:	push   esi
30037d9f:	mov    esi,ecx
30037da1:	je     0x30037dc8
30037da3:	push   edi
30037da4:	push   0x30038258
30037da9:	lea    edi,[esi-0x4]
30037dac:	push   DWORD PTR [edi]
30037dae:	push   0xc
30037db0:	push   esi
30037db1:	call   0x300170cf
30037db6:	test   BYTE PTR [ebp+0x8],0x1
30037dba:	je     0x30037dc3
30037dbc:	push   edi
30037dbd:	call   0x3000460f
30037dc2:	pop    ecx
30037dc3:	mov    eax,edi
30037dc5:	pop    edi
30037dc6:	jmp    0x30037ddc
30037dc8:	call   0x30038258
30037dcd:	test   BYTE PTR [ebp+0x8],0x1
30037dd1:	je     0x30037dda
30037dd3:	push   esi
30037dd4:	call   0x3000460f
30037dd9:	pop    ecx
30037dda:	mov    eax,esi
30037ddc:	pop    esi
30037ddd:	pop    ebp
30037dde:	ret    0x4
30037de1:	nop
30037de2:	nop
30037de3:	nop
30037de4:	in     al,dx
30037de5:	jge    0x30037dea
30037de7:	xor    BYTE PTR [edi+0x30037d],dl
	...
30037df5:	add    BYTE PTR [eax],al
30037df7:	add    BYTE PTR [eax+0x2c300444],bl
30037dfd:	lods   eax,DWORD PTR ds:[esi]
30037dfe:	add    dh,BYTE PTR [eax]
30037e00:	jmp    DWORD PTR ds:0x300452b0
30037e06:	jmp    DWORD PTR ds:0x300453b8
30037e0c:	push   ebp
30037e0d:	mov    ebp,esp
30037e0f:	push   DWORD PTR [ebp+0x8]
30037e12:	call   0x3000460f
30037e17:	pop    ecx
30037e18:	pop    ebp
30037e19:	ret    
30037e1a:	push   0x14
30037e1c:	push   0x30037e78
30037e21:	call   0x30008a54
30037e26:	and    DWORD PTR [ebp-0x4],0x0
30037e2a:	dec    DWORD PTR [ebp+0x10]
30037e2d:	js     0x30037e69
30037e2f:	mov    ecx,DWORD PTR [ebp+0x8]
30037e32:	sub    ecx,DWORD PTR [ebp+0xc]
30037e35:	mov    DWORD PTR [ebp+0x8],ecx
30037e38:	call   DWORD PTR [ebp+0x14]
30037e3b:	jmp    0x30037e2a
30037e3d:	mov    eax,DWORD PTR [ebp-0x14]
30037e40:	mov    DWORD PTR [ebp-0x1c],eax
30037e43:	mov    eax,DWORD PTR [ebp-0x1c]
30037e46:	mov    eax,DWORD PTR [eax]
30037e48:	mov    DWORD PTR [ebp-0x20],eax
30037e4b:	mov    eax,DWORD PTR [ebp-0x20]
30037e4e:	cmp    DWORD PTR [eax],0xe06d7363
30037e54:	je     0x30037e61
30037e56:	mov    DWORD PTR [ebp-0x24],0x0
30037e5d:	mov    eax,DWORD PTR [ebp-0x24]
30037e60:	ret    
30037e61:	call   0x30038276
30037e66:	mov    esp,DWORD PTR [ebp-0x18]
30037e69:	mov    DWORD PTR [ebp-0x4],0xfffffffe
30037e70:	call   0x30008a99
30037e75:	ret    0x10
30037e78:	(bad)  
30037e79:	(bad)  
30037e7a:	(bad)  
30037e7b:	inc    DWORD PTR [eax]
30037e7d:	add    BYTE PTR [eax],al
30037e7f:	add    ah,cl
30037e81:	(bad)  
30037e82:	(bad)  
30037e83:	inc    DWORD PTR [eax]
30037e85:	add    BYTE PTR [eax],al
30037e87:	add    dh,bh
30037e89:	(bad)  
30037e8a:	(bad)  
30037e8b:	(bad)  
30037e8c:	cmp    eax,0x6630037e
30037e91:	jle    0x30037e96
30037e93:	xor    BYTE PTR [ebp-0x75],dl
30037e96:	in     al,dx
30037e97:	call   DWORD PTR ds:0x30045198
30037e9d:	push   0x1
30037e9f:	mov    ds:0x300448cc,eax
30037ea4:	call   0x3003827c
30037ea9:	push   DWORD PTR [ebp+0x8]
30037eac:	call   0x30038282
30037eb1:	cmp    DWORD PTR ds:0x300448cc,0x0
30037eb8:	pop    ecx
30037eb9:	pop    ecx
30037eba:	jne    0x30037ec4
30037ebc:	push   0x1
30037ebe:	call   0x3003827c
30037ec3:	pop    ecx
30037ec4:	push   0xc0000409
30037ec9:	call   0x30038288
30037ece:	pop    ecx
30037ecf:	pop    ebp
30037ed0:	ret    
30037ed1:	push   ebp
30037ed2:	mov    ebp,esp
30037ed4:	sub    esp,0x324
30037eda:	push   0x17
30037edc:	call   0x3001af4e
30037ee1:	test   eax,eax
30037ee3:	je     0x30037eea
30037ee5:	push   0x2
30037ee7:	pop    ecx
30037ee8:	int    0x29
30037eea:	mov    ds:0x300446b0,eax
30037eef:	mov    DWORD PTR ds:0x300446ac,ecx
30037ef5:	mov    DWORD PTR ds:0x300446a8,edx
30037efb:	mov    DWORD PTR ds:0x300446a4,ebx
30037f01:	mov    DWORD PTR ds:0x300446a0,esi
30037f07:	mov    DWORD PTR ds:0x3004469c,edi
30037f0d:	mov    WORD PTR ds:0x300446c8,ss
30037f13:	mov    WORD PTR ds:0x300446bc,cs
30037f19:	mov    WORD PTR ds:0x30044698,ds
30037f1f:	mov    WORD PTR ds:0x30044694,es
30037f25:	mov    WORD PTR ds:0x30044690,fs
30037f2b:	mov    WORD PTR ds:0x3004468c,gs
30037f31:	pushf  
30037f32:	pop    DWORD PTR ds:0x300446c0
30037f38:	mov    eax,DWORD PTR [ebp+0x0]
30037f3b:	mov    ds:0x300446b4,eax
30037f40:	mov    eax,DWORD PTR [ebp+0x4]
30037f43:	mov    ds:0x300446b8,eax
30037f48:	lea    eax,[ebp+0x8]
30037f4b:	mov    ds:0x300446c4,eax
30037f50:	mov    eax,DWORD PTR [ebp-0x324]
30037f56:	mov    DWORD PTR ds:0x30044600,0x10001
30037f60:	mov    eax,ds:0x300446b8
30037f65:	mov    ds:0x300445bc,eax
30037f6a:	mov    DWORD PTR ds:0x300445b0,0xc0000409
30037f74:	mov    DWORD PTR ds:0x300445b4,0x1
30037f7e:	mov    DWORD PTR ds:0x300445c0,0x1
30037f88:	push   0x4
30037f8a:	pop    eax
30037f8b:	imul   eax,eax,0x0
30037f8e:	mov    DWORD PTR [eax+0x300445c4],0x2
30037f98:	push   0x4
30037f9a:	pop    eax
30037f9b:	imul   eax,eax,0x0
30037f9e:	mov    ecx,DWORD PTR ds:0x30043050
30037fa4:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
30037fa8:	push   0x4
30037faa:	pop    eax
30037fab:	shl    eax,0x0
30037fae:	mov    ecx,DWORD PTR ds:0x30043bd8
30037fb4:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
30037fb8:	push   0x30028f2c
30037fbd:	call   0x30037e94
30037fc2:	jmp    0x30037fc4
30037fc4:	leave  
30037fc5:	ret    
30037fc6:	push   ebp
30037fc7:	mov    ebp,esp
30037fc9:	push   0x8
30037fcb:	call   0x30037fd4
30037fd0:	jmp    0x30037fd2
30037fd2:	pop    ebp
30037fd3:	ret    
30037fd4:	push   ebp
30037fd5:	mov    ebp,esp
30037fd7:	sub    esp,0x31c
30037fdd:	push   0x17
30037fdf:	call   0x3001af4e
30037fe4:	test   eax,eax
30037fe6:	je     0x30037fed
30037fe8:	mov    ecx,DWORD PTR [ebp+0x8]
30037feb:	int    0x29
30037fed:	mov    ds:0x300446b0,eax
30037ff2:	mov    DWORD PTR ds:0x300446ac,ecx
30037ff8:	mov    DWORD PTR ds:0x300446a8,edx
30037ffe:	mov    DWORD PTR ds:0x300446a4,ebx
30038004:	mov    DWORD PTR ds:0x300446a0,esi
3003800a:	mov    DWORD PTR ds:0x3004469c,edi
30038010:	mov    WORD PTR ds:0x300446c8,ss
30038016:	mov    WORD PTR ds:0x300446bc,cs
3003801c:	mov    WORD PTR ds:0x30044698,ds
30038022:	mov    WORD PTR ds:0x30044694,es
30038028:	mov    WORD PTR ds:0x30044690,fs
3003802e:	mov    WORD PTR ds:0x3004468c,gs
30038034:	pushf  
30038035:	pop    DWORD PTR ds:0x300446c0
3003803b:	mov    eax,DWORD PTR [ebp+0x0]
3003803e:	mov    ds:0x300446b4,eax
30038043:	mov    eax,DWORD PTR [ebp+0x4]
30038046:	mov    ds:0x300446b8,eax
3003804b:	lea    eax,[ebp+0x8]
3003804e:	mov    ds:0x300446c4,eax
30038053:	mov    eax,DWORD PTR [ebp-0x31c]
30038059:	mov    eax,ds:0x300446b8
3003805e:	mov    ds:0x300445bc,eax
30038063:	mov    DWORD PTR ds:0x300445b0,0xc0000409
3003806d:	mov    DWORD PTR ds:0x300445b4,0x1
30038077:	mov    DWORD PTR ds:0x300445c0,0x1
30038081:	push   0x4
30038083:	pop    eax
30038084:	imul   eax,eax,0x0
30038087:	mov    ecx,DWORD PTR [ebp+0x8]
3003808a:	mov    DWORD PTR [eax+0x300445c4],ecx
30038090:	push   0x30028f2c
30038095:	call   0x30037e94
3003809a:	jmp    0x3003809c
3003809c:	leave  
3003809d:	ret    
3003809e:	push   ebp
3003809f:	mov    ebp,esp
300380a1:	mov    eax,DWORD PTR [ebp+0x8]
300380a4:	mov    eax,DWORD PTR [eax]
300380a6:	cmp    DWORD PTR [eax],0xe06d7363
300380ac:	jne    0x300380d3
300380ae:	cmp    DWORD PTR [eax+0x10],0x3
300380b2:	jne    0x300380d3
300380b4:	mov    eax,DWORD PTR [eax+0x14]
300380b7:	cmp    eax,0x19930520
300380bc:	je     0x300380d9
300380be:	cmp    eax,0x19930521
300380c3:	je     0x300380d9
300380c5:	cmp    eax,0x19930522
300380ca:	je     0x300380d9
300380cc:	cmp    eax,0x1994000
300380d1:	je     0x300380d9
300380d3:	xor    eax,eax
300380d5:	pop    ebp
300380d6:	ret    0x4
300380d9:	call   0x30038276
300380de:	int3   
300380df:	jmp    DWORD PTR ds:0x300453d8
300380e5:	jmp    DWORD PTR ds:0x300453e0
300380eb:	push   ebp
300380ec:	mov    ebp,esp
300380ee:	mov    eax,DWORD PTR [ebp+0x8]
300380f1:	push   ebx
300380f2:	mov    ecx,DWORD PTR [eax+0x3c]
300380f5:	add    ecx,eax
300380f7:	push   esi
300380f8:	movzx  eax,WORD PTR [ecx+0x14]
300380fc:	movzx  ebx,WORD PTR [ecx+0x6]
30038100:	add    eax,0x18
30038103:	xor    edx,edx
30038105:	add    eax,ecx
30038107:	push   edi
30038108:	test   ebx,ebx
3003810a:	je     0x30038127
3003810c:	mov    edi,DWORD PTR [ebp+0xc]
3003810f:	mov    esi,DWORD PTR [eax+0xc]
30038112:	cmp    edi,esi
30038114:	jb     0x3003811f
30038116:	mov    ecx,DWORD PTR [eax+0x8]
30038119:	add    ecx,esi
3003811b:	cmp    edi,ecx
3003811d:	jb     0x30038129
3003811f:	inc    edx
30038120:	add    eax,0x28
30038123:	cmp    edx,ebx
30038125:	jb     0x3003810f
30038127:	xor    eax,eax
30038129:	pop    edi
3003812a:	pop    esi
3003812b:	pop    ebx
3003812c:	pop    ebp
3003812d:	ret    
3003812e:	push   ebp
3003812f:	mov    ebp,esp
30038131:	push   0xfffffffe
30038133:	push   0x300381e8
30038138:	push   0x30038235
3003813d:	mov    eax,fs:0x0
30038143:	push   eax
30038144:	sub    esp,0x8
30038147:	push   ebx
30038148:	push   esi
30038149:	push   edi
3003814a:	mov    eax,ds:0x30043050
3003814f:	xor    DWORD PTR [ebp-0x8],eax
30038152:	xor    eax,ebp
30038154:	push   eax
30038155:	lea    eax,[ebp-0x10]
30038158:	mov    fs:0x0,eax
3003815e:	mov    DWORD PTR [ebp-0x18],esp
30038161:	mov    DWORD PTR [ebp-0x4],0x0
30038168:	push   0x30000000
3003816d:	call   0x30038204
30038172:	add    esp,0x4
30038175:	test   eax,eax
30038177:	je     0x300381cd
30038179:	mov    eax,DWORD PTR [ebp+0x8]
3003817c:	sub    eax,0x30000000
30038181:	push   eax
30038182:	push   0x30000000
30038187:	call   0x300380eb
3003818c:	add    esp,0x8
3003818f:	test   eax,eax
30038191:	je     0x300381cd
30038193:	mov    eax,DWORD PTR [eax+0x24]
30038196:	shr    eax,0x1f
30038199:	not    eax
3003819b:	and    eax,0x1
3003819e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
300381a5:	mov    ecx,DWORD PTR [ebp-0x10]
300381a8:	mov    DWORD PTR fs:0x0,ecx
300381af:	pop    ecx
300381b0:	pop    edi
300381b1:	pop    esi
300381b2:	pop    ebx
300381b3:	mov    esp,ebp
300381b5:	pop    ebp
300381b6:	ret    
300381b7:	mov    eax,DWORD PTR [ebp-0x14]
300381ba:	mov    eax,DWORD PTR [eax]
300381bc:	xor    ecx,ecx
300381be:	cmp    DWORD PTR [eax],0xc0000005
300381c4:	sete   cl
300381c7:	mov    eax,ecx
300381c9:	ret    
300381ca:	mov    esp,DWORD PTR [ebp-0x18]
300381cd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
300381d4:	xor    eax,eax
300381d6:	mov    ecx,DWORD PTR [ebp-0x10]
300381d9:	mov    DWORD PTR fs:0x0,ecx
300381e0:	pop    ecx
300381e1:	pop    edi
300381e2:	pop    esi
300381e3:	pop    ebx
300381e4:	mov    esp,ebp
300381e6:	pop    ebp
300381e7:	ret    
300381e8:	(bad)  
300381e9:	(bad)  
300381ea:	(bad)  
300381eb:	inc    DWORD PTR [eax]
300381ed:	add    BYTE PTR [eax],al
300381ef:	add    al,bl
300381f1:	(bad)  
300381f2:	(bad)  
300381f3:	inc    DWORD PTR [eax]
300381f5:	add    BYTE PTR [eax],al
300381f7:	add    dh,bh
300381f9:	(bad)  
300381fa:	(bad)  
300381fb:	push   DWORD PTR [edi-0x35cffc7f]
30038201:	add    DWORD PTR [ebx],0xec8b5530
30038207:	mov    eax,DWORD PTR [ebp+0x8]
3003820a:	mov    ecx,0x5a4d
3003820f:	cmp    WORD PTR [eax],cx
30038212:	je     0x30038218
30038214:	xor    eax,eax
30038216:	pop    ebp
30038217:	ret    
30038218:	mov    ecx,DWORD PTR [eax+0x3c]
3003821b:	add    ecx,eax
3003821d:	xor    eax,eax
3003821f:	cmp    DWORD PTR [ecx],0x4550
30038225:	jne    0x30038233
30038227:	mov    edx,0x10b
3003822c:	cmp    WORD PTR [ecx+0x18],dx
30038230:	sete   al
30038233:	pop    ebp
30038234:	ret    
30038235:	push   ebp
30038236:	mov    ebp,esp
30038238:	push   DWORD PTR [ebp+0x14]
3003823b:	push   DWORD PTR [ebp+0x10]
3003823e:	push   DWORD PTR [ebp+0xc]
30038241:	push   DWORD PTR [ebp+0x8]
30038244:	push   0x3000115c
30038249:	push   0x30043050
3003824e:	call   0x30038294
30038253:	add    esp,0x18
30038256:	pop    ebp
30038257:	ret    
30038258:	jmp    DWORD PTR ds:0x300453a8
3003825e:	jmp    DWORD PTR ds:0x300453a4
30038264:	jmp    DWORD PTR ds:0x30045300
3003826a:	jmp    DWORD PTR ds:0x300452e0
30038270:	jmp    DWORD PTR ds:0x300452d8
30038276:	jmp    DWORD PTR ds:0x300452d4
3003827c:	jmp    DWORD PTR ds:0x300452d0
30038282:	jmp    DWORD PTR ds:0x300452cc
30038288:	jmp    DWORD PTR ds:0x300452c8
3003828e:	jmp    DWORD PTR ds:0x300452c0
30038294:	jmp    DWORD PTR ds:0x300452b8
3003829a:	push   ebp
3003829b:	mov    ebp,esp
3003829d:	mov    edx,DWORD PTR [ebp+0x8]
300382a0:	test   edx,edx
300382a2:	js     0x300382b2
300382a4:	cmp    edx,DWORD PTR [ecx+0x4]
300382a7:	jge    0x300382b2
300382a9:	mov    eax,DWORD PTR [ecx]
300382ab:	lea    eax,[eax+edx*4]
300382ae:	pop    ebp
300382af:	ret    0x4
300382b2:	push   0x0
300382b4:	push   0x0
300382b6:	push   0x1
300382b8:	push   0xc000008c
300382bd:	call   DWORD PTR ds:0x30045140
300382c3:	int3   
300382c4:	push   ebp
300382c5:	mov    ebp,esp
300382c7:	push   esi
300382c8:	mov    esi,ecx
300382ca:	push   edi
300382cb:	lea    edi,[esi+0x14]
300382ce:	push   edi
300382cf:	call   DWORD PTR ds:0x300451b0
300382d5:	mov    eax,DWORD PTR [ebp+0x8]
300382d8:	cmp    eax,DWORD PTR [esi+0x30]
300382db:	jg     0x300382f8
300382dd:	test   eax,eax
300382df:	js     0x300382f8
300382e1:	cmp    eax,DWORD PTR [esi+0x30]
300382e4:	jne    0x300382eb
300382e6:	mov    esi,DWORD PTR [esi+0x8]
300382e9:	jmp    0x300382fa
300382eb:	push   eax
300382ec:	lea    ecx,[esi+0x2c]
300382ef:	call   0x3003829a
300382f4:	mov    esi,DWORD PTR [eax]
300382f6:	jmp    0x300382fa
300382f8:	xor    esi,esi
300382fa:	push   edi
300382fb:	call   DWORD PTR ds:0x300451b4
30038301:	pop    edi
30038302:	mov    eax,esi
30038304:	pop    esi
30038305:	pop    ebp
30038306:	ret    0x4
30038309:	push   ebp
3003830a:	mov    ebp,esp
3003830c:	test   BYTE PTR [ebp+0x8],0x1
30038310:	push   esi
30038311:	mov    esi,ecx
30038313:	mov    DWORD PTR [esi],0x30004048
30038319:	je     0x30038322
3003831b:	push   esi
3003831c:	call   0x3000460f
30038321:	pop    ecx
30038322:	mov    eax,esi
30038324:	pop    esi
30038325:	pop    ebp
30038326:	ret    0x4
30038329:	push   ebp
3003832a:	mov    ebp,esp
3003832c:	push   esi
3003832d:	mov    esi,ecx
3003832f:	call   0x300172a5
30038334:	test   BYTE PTR [ebp+0x8],0x1
30038338:	je     0x30038341
3003833a:	push   esi
3003833b:	call   0x3000460f
30038340:	pop    ecx
30038341:	mov    eax,esi
30038343:	pop    esi
30038344:	pop    ebp
30038345:	ret    0x4
30038348:	push   ebp
30038349:	mov    ebp,esp
3003834b:	push   DWORD PTR [ebp+0x8]
3003834e:	push   0x0
30038350:	push   DWORD PTR [ecx+0x4]
30038353:	call   DWORD PTR ds:0x300451c8
30038359:	pop    ebp
3003835a:	ret    0x4
3003835d:	cmp    BYTE PTR ds:0x300430fc,0x0
30038364:	jne    0x3003839d
30038366:	cmp    DWORD PTR ds:0x30043b54,0x0
3003836d:	mov    BYTE PTR ds:0x300430fc,0x1
30038374:	jne    0x3003839d
30038376:	push   DWORD PTR ds:0x30043b10
3003837c:	call   DWORD PTR ds:0x30045134
30038382:	test   ax,ax
30038385:	je     0x3003839d
30038387:	push   DWORD PTR ds:0x30043be4
3003838d:	call   DWORD PTR ds:0x30045174
30038393:	test   eax,eax
30038395:	je     0x3003839d
30038397:	push   eax
30038398:	call   0x30017cfb
3003839d:	ret    
3003839e:	push   0x24
300383a0:	push   0x30038418
300383a5:	call   0x30008a54
300383aa:	push   0x1c
300383ac:	lea    eax,[ebp-0x34]
300383af:	push   eax
300383b0:	push   DWORD PTR [ebp+0x8]
300383b3:	call   DWORD PTR ds:0x30045114
300383b9:	and    DWORD PTR [ebp-0x4],0x0
300383bd:	mov    eax,0x5a4d
300383c2:	mov    ecx,DWORD PTR [ebp-0x30]
300383c5:	cmp    WORD PTR [ecx],ax
300383c8:	jne    0x30038407
300383ca:	mov    edx,DWORD PTR [ecx+0x3c]
300383cd:	cmp    DWORD PTR [edx+ecx*1],0x4550
300383d4:	jne    0x30038407
300383d6:	mov    esi,DWORD PTR [edx+ecx*1+0xd8]
300383dd:	lea    eax,[esi+ecx*1]
300383e0:	cmp    DWORD PTR [ebp+0xc],eax
300383e3:	jb     0x30038407
300383e5:	mov    eax,DWORD PTR [edx+ecx*1+0xdc]
300383ec:	add    eax,esi
300383ee:	add    eax,ecx
300383f0:	cmp    DWORD PTR [ebp+0xc],eax
300383f3:	jae    0x30038407
300383f5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
300383fc:	mov    al,0x1
300383fe:	jmp    0x30038410
30038400:	xor    eax,eax
30038402:	inc    eax
30038403:	ret    
30038404:	mov    esp,DWORD PTR [ebp-0x18]
30038407:	mov    DWORD PTR [ebp-0x4],0xfffffffe
3003840e:	xor    al,al
30038410:	call   0x30008a99
30038415:	ret    0x8
30038418:	(bad)  
30038419:	(bad)  
3003841a:	(bad)  
3003841b:	inc    DWORD PTR [eax]
3003841d:	add    BYTE PTR [eax],al
3003841f:	add    BYTE PTR [edi+edi*8+0xffff],bh
30038426:	add    BYTE PTR [eax],al
30038428:	(bad)  
30038429:	(bad)  
3003842a:	(bad)  
3003842b:	inc    DWORD PTR [eax]
3003842d:	test   BYTE PTR [ebx],al
3003842f:	xor    BYTE PTR [esp+eax*4],al
30038432:	add    esi,DWORD PTR [eax]
30038434:	push   ebp
30038435:	mov    ebp,esp
30038437:	push   ebx
30038438:	push   esi
30038439:	mov    esi,DWORD PTR [ebp+0x10]
3003843c:	push   edi
3003843d:	mov    edi,DWORD PTR [ebp+0xc]
30038440:	push   esi
30038441:	push   edi
30038442:	push   DWORD PTR [ebp+0x8]
30038445:	mov    ebx,ecx
30038447:	call   0x300158a8
3003844c:	lea    edx,[esi+0x1]
3003844f:	push   edx
30038450:	movzx  eax,BYTE PTR [edx]
30038453:	mov    ecx,ebx
30038455:	lea    esi,[eax*8+0x300150a0]
3003845c:	lea    eax,[edi+0x1]
3003845f:	push   eax
30038460:	push   esi
30038461:	call   DWORD PTR [esi+0x4]
30038464:	pop    edi
30038465:	pop    esi
30038466:	pop    ebx
30038467:	pop    ebp
30038468:	ret    0xc
3003846b:	push   ebp
3003846c:	mov    ebp,esp
3003846e:	mov    eax,DWORD PTR [ebp+0x10]
30038471:	inc    eax
30038472:	pop    ebp
30038473:	ret    0xc
30038476:	push   ebp
30038477:	mov    ebp,esp
30038479:	push   ebx
3003847a:	push   esi
3003847b:	mov    esi,DWORD PTR [ebp+0x10]
3003847e:	push   edi
3003847f:	mov    edi,DWORD PTR [ebp+0xc]
30038482:	push   esi
30038483:	push   edi
30038484:	push   DWORD PTR [ebp+0x8]
30038487:	mov    ebx,ecx
30038489:	call   0x300158a8
3003848e:	lea    edx,[esi+0x1]
30038491:	push   edx
30038492:	movzx  eax,BYTE PTR [edx]
30038495:	mov    ecx,ebx
30038497:	lea    esi,[eax*8+0x300384b0]
3003849e:	lea    eax,[edi+0x1]
300384a1:	push   eax
300384a2:	push   esi
300384a3:	call   DWORD PTR [esi+0x4]
300384a6:	pop    edi
300384a7:	pop    esi
300384a8:	pop    ebx
300384a9:	pop    ebp
300384aa:	ret    0xc
300384ad:	nop
300384ae:	nop
300384af:	nop
300384b0:	add    BYTE PTR [edx],ah
300384b2:	add    DWORD PTR [eax],eax
300384b4:	test   al,0x58
300384b6:	add    DWORD PTR [eax],esi
300384b8:	add    DWORD PTR [edx],esp
300384ba:	add    DWORD PTR [eax],eax
300384bc:	test   al,0x58
300384be:	add    DWORD PTR [eax],esi
300384c0:	add    ah,BYTE PTR [edx]
300384c2:	add    DWORD PTR [eax],eax
300384c4:	test   al,0x58
300384c6:	add    DWORD PTR [eax],esi
300384c8:	add    esp,DWORD PTR [edx]
300384ca:	add    DWORD PTR [eax],eax
300384cc:	test   al,0x58
300384ce:	add    DWORD PTR [eax],esi
300384d0:	add    al,0x11
300384d2:	add    BYTE PTR [eax],al
300384d4:	imul   eax,DWORD PTR [ebx+eax*1+0x110530],0x0
300384dc:	imul   eax,DWORD PTR [ebx+eax*1+0x220630],0x0
300384e4:	test   al,0x58
300384e6:	add    DWORD PTR [eax],esi
300384e8:	pop    es
300384e9:	adc    DWORD PTR [eax],eax
300384eb:	add    BYTE PTR [ebx-0x7c],ch
300384ee:	add    esi,DWORD PTR [eax]
300384f0:	or     BYTE PTR [edx],ah
300384f2:	add    BYTE PTR [eax],al
300384f4:	test   al,0x58
300384f6:	add    DWORD PTR [eax],esi
300384f8:	or     DWORD PTR [edx],esp
300384fa:	add    BYTE PTR [eax],al
300384fc:	test   al,0x58
300384fe:	add    DWORD PTR [eax],esi
30038500:	or     dl,BYTE PTR [ecx]
30038502:	add    BYTE PTR [eax],al
30038504:	imul   eax,DWORD PTR [ebx+eax*1+0x220b30],0x0
3003850c:	test   al,0x58
3003850e:	add    DWORD PTR [eax],esi
30038510:	or     al,0x11
30038512:	add    BYTE PTR [eax],al
30038514:	imul   eax,DWORD PTR [ebx+eax*1+0x1220d30],0x0
3003851c:	test   al,0x58
3003851e:	add    DWORD PTR [eax],esi
30038520:	push   cs
30038521:	and    al,BYTE PTR [eax]
30038523:	add    BYTE PTR [eax+0xf300158],ch
30038529:	xor    eax,DWORD PTR [edx]
3003852b:	add    BYTE PTR [eax+0x10300158],ch
30038531:	and    al,BYTE PTR [ecx]
30038533:	add    BYTE PTR [eax+0x11300158],ch
30038539:	and    al,BYTE PTR [ecx]
3003853b:	add    BYTE PTR [eax+0x12300158],ch
30038541:	and    al,BYTE PTR [ecx]
30038543:	add    BYTE PTR [eax+0x13300158],ch
30038549:	and    al,BYTE PTR [ecx]
3003854b:	add    BYTE PTR [eax+0x14300158],ch
30038551:	and    al,BYTE PTR [ecx]
30038553:	add    BYTE PTR [eax+0x15300158],ch
30038559:	and    al,BYTE PTR [ecx]
3003855b:	add    BYTE PTR [eax+0x16300158],ch
30038561:	and    al,BYTE PTR [ecx]
30038563:	add    BYTE PTR [eax+0x17300158],ch
30038569:	and    al,BYTE PTR [ecx]
3003856b:	add    BYTE PTR [eax+0x18300158],ch
30038571:	and    al,BYTE PTR [ecx]
30038573:	add    BYTE PTR [eax+0x19300158],ch
30038579:	adc    DWORD PTR [eax],eax
3003857b:	add    BYTE PTR [ebx-0x7c],ch
3003857e:	add    esi,DWORD PTR [eax]
30038580:	sbb    dl,BYTE PTR [ecx]
30038582:	add    BYTE PTR [eax],al
30038584:	imul   eax,DWORD PTR [ebx+eax*1+0x111b30],0x0
3003858c:	imul   eax,DWORD PTR [ebx+eax*1+0x111c30],0x0
30038594:	imul   eax,DWORD PTR [ebx+eax*1+0x111d30],0x0
3003859c:	imul   eax,DWORD PTR [ebx+eax*1+0x111e30],0x0
300385a4:	imul   eax,DWORD PTR [ebx+eax*1+0x111f30],0x0
300385ac:	imul   eax,DWORD PTR [ebx+eax*1+0x1222030],0x0
300385b4:	test   al,0x58
300385b6:	add    DWORD PTR [eax],esi
300385b8:	and    DWORD PTR [edx],esp
300385ba:	add    DWORD PTR [eax],eax
300385bc:	test   al,0x58
300385be:	add    DWORD PTR [eax],esi
300385c0:	and    ah,BYTE PTR [edx]
300385c2:	add    DWORD PTR [eax],eax
300385c4:	test   al,0x58
300385c6:	add    DWORD PTR [eax],esi
300385c8:	and    esp,DWORD PTR [edx]
300385ca:	add    DWORD PTR [eax],eax
300385cc:	test   al,0x58
300385ce:	add    DWORD PTR [eax],esi
300385d0:	and    al,0x11
300385d2:	add    BYTE PTR [eax],al
300385d4:	imul   eax,DWORD PTR [ebx+eax*1+0x112530],0x0
300385dc:	imul   eax,DWORD PTR [ebx+eax*1+0x112630],0x0
300385e4:	imul   eax,DWORD PTR [ebx+eax*1+0x112730],0x0
300385ec:	imul   eax,DWORD PTR [ebx+eax*1+0x1222830],0x0
300385f4:	test   al,0x58
300385f6:	add    DWORD PTR [eax],esi
300385f8:	sub    DWORD PTR [edx],esp
300385fa:	add    DWORD PTR [eax],eax
300385fc:	test   al,0x58
300385fe:	add    DWORD PTR [eax],esi
30038600:	sub    ah,BYTE PTR [edx]
30038602:	add    DWORD PTR [eax],eax
30038604:	test   al,0x58
30038606:	add    DWORD PTR [eax],esi
30038608:	sub    esp,DWORD PTR [edx]
3003860a:	add    DWORD PTR [eax],eax
3003860c:	test   al,0x58
3003860e:	add    DWORD PTR [eax],esi
30038610:	sub    al,0x22
30038612:	add    DWORD PTR [eax],eax
30038614:	test   al,0x58
30038616:	add    DWORD PTR [eax],esi
30038618:	sub    eax,0xa8000122
3003861d:	pop    eax
3003861e:	add    DWORD PTR [eax],esi
30038620:	and    al,BYTE PTR cs:[ecx]
30038623:	add    BYTE PTR [eax+0x2f300158],ch
30038629:	and    al,BYTE PTR [ecx]
3003862b:	add    BYTE PTR [eax+0x30300158],ch
30038631:	and    al,BYTE PTR [eax]
30038633:	add    BYTE PTR [eax+0x31300158],ch
30038639:	and    al,BYTE PTR [eax]
3003863b:	add    BYTE PTR [eax+0x32300158],ch
30038641:	and    al,BYTE PTR [eax]
30038643:	add    BYTE PTR [eax+0x33300158],ch
30038649:	and    al,BYTE PTR [eax]
3003864b:	add    BYTE PTR [eax+0x34300158],ch
30038651:	and    al,BYTE PTR [eax]
30038653:	add    BYTE PTR [eax+0x35300158],ch
30038659:	and    al,BYTE PTR [eax]
3003865b:	add    BYTE PTR [eax+0x36300158],ch
30038661:	adc    DWORD PTR [eax],eax
30038663:	add    BYTE PTR [ebx-0x7c],ch
30038666:	add    esi,DWORD PTR [eax]
30038668:	aaa    
30038669:	adc    DWORD PTR [eax],eax
3003866b:	add    BYTE PTR [ebx-0x7c],ch
3003866e:	add    esi,DWORD PTR [eax]
30038670:	cmp    BYTE PTR [ecx],dl
30038672:	add    BYTE PTR [eax],al
30038674:	imul   eax,DWORD PTR [ebx+eax*1+0x113930],0x0
3003867c:	imul   eax,DWORD PTR [ebx+eax*1+0x113a30],0x0
30038684:	imul   eax,DWORD PTR [ebx+eax*1+0x113b30],0x0
3003868c:	imul   eax,DWORD PTR [ebx+eax*1+0x113c30],0x0
30038694:	imul   eax,DWORD PTR [ebx+eax*1+0x113d30],0x0
3003869c:	imul   eax,DWORD PTR [ebx+eax*1+0x113e30],0x0
300386a4:	imul   eax,DWORD PTR [ebx+eax*1+0x113f30],0x0
300386ac:	imul   eax,DWORD PTR [ebx+eax*1+0x1224030],0x0
300386b4:	test   al,0x58
300386b6:	add    DWORD PTR [eax],esi
300386b8:	inc    ecx
300386b9:	and    al,BYTE PTR [ecx]
300386bb:	add    BYTE PTR [eax+0x42300158],ch
300386c1:	and    al,BYTE PTR [ecx]
300386c3:	add    BYTE PTR [eax+0x43300158],ch
300386c9:	and    al,BYTE PTR [ecx]
300386cb:	add    BYTE PTR [eax+0x44300158],ch
300386d1:	and    al,BYTE PTR [ecx]
300386d3:	add    BYTE PTR [eax+0x45300158],ch
300386d9:	and    al,BYTE PTR [ecx]
300386db:	add    BYTE PTR [eax+0x46300158],ch
300386e1:	and    al,BYTE PTR [ecx]
300386e3:	add    BYTE PTR [eax+0x47300158],ch
300386e9:	and    al,BYTE PTR [ecx]
300386eb:	add    BYTE PTR [eax+0x48300158],ch
300386f1:	and    al,BYTE PTR [ecx]
300386f3:	add    BYTE PTR [eax+0x49300158],ch
300386f9:	and    al,BYTE PTR [ecx]
300386fb:	add    BYTE PTR [eax+0x4a300158],ch
30038701:	and    al,BYTE PTR [ecx]
30038703:	add    BYTE PTR [eax+0x4b300158],ch
30038709:	and    al,BYTE PTR [ecx]
3003870b:	add    BYTE PTR [eax+0x4c300158],ch
30038711:	and    al,BYTE PTR [ecx]
30038713:	add    BYTE PTR [eax+0x4d300158],ch
30038719:	and    al,BYTE PTR [ecx]
3003871b:	add    BYTE PTR [eax+0x4e300158],ch
30038721:	and    al,BYTE PTR [ecx]
30038723:	add    BYTE PTR [eax+0x4f300158],ch
30038729:	and    al,BYTE PTR [ecx]
3003872b:	add    BYTE PTR [eax+0x50300158],ch
30038731:	and    al,BYTE PTR [ecx]
30038733:	add    BYTE PTR [eax+0x51300158],ch
30038739:	and    al,BYTE PTR [ecx]
3003873b:	add    BYTE PTR [eax+0x52300158],ch
30038741:	and    al,BYTE PTR [ecx]
30038743:	add    BYTE PTR [eax+0x53300158],ch
30038749:	and    al,BYTE PTR [ecx]
3003874b:	add    BYTE PTR [eax+0x54300158],ch
30038751:	and    al,BYTE PTR [ecx]
30038753:	add    BYTE PTR [eax+0x55300158],ch
30038759:	and    al,BYTE PTR [ecx]
3003875b:	add    BYTE PTR [eax+0x56300158],ch
30038761:	and    al,BYTE PTR [ecx]
30038763:	add    BYTE PTR [eax+0x57300158],ch
30038769:	and    al,BYTE PTR [ecx]
3003876b:	add    BYTE PTR [eax+0x58300158],ch
30038771:	and    al,BYTE PTR [ecx]
30038773:	add    BYTE PTR [eax+0x59300158],ch
30038779:	and    al,BYTE PTR [ecx]
3003877b:	add    BYTE PTR [eax+0x5a300158],ch
30038781:	and    al,BYTE PTR [ecx]
30038783:	add    BYTE PTR [eax+0x5b300158],ch
30038789:	and    al,BYTE PTR [ecx]
3003878b:	add    BYTE PTR [eax+0x5c300158],ch
30038791:	and    al,BYTE PTR [ecx]
30038793:	add    BYTE PTR [eax+0x5d300158],ch
30038799:	and    al,BYTE PTR [ecx]
3003879b:	add    BYTE PTR [eax+0x5e300158],ch
300387a1:	and    al,BYTE PTR [ecx]
300387a3:	add    BYTE PTR [eax+0x5f300158],ch
300387a9:	and    al,BYTE PTR [ecx]
300387ab:	add    BYTE PTR [eax+0x60300158],ch
300387b1:	and    al,BYTE PTR [ecx]
300387b3:	add    BYTE PTR [eax+0x61300158],ch
300387b9:	and    al,BYTE PTR [ecx]
300387bb:	add    BYTE PTR [eax+0x62300158],ch
300387c1:	and    al,BYTE PTR [ecx]
300387c3:	add    BYTE PTR [eax+0x63300158],ch
300387c9:	and    al,BYTE PTR [ecx]
300387cb:	add    BYTE PTR [eax+0x64300158],ch
300387d1:	and    al,BYTE PTR [ecx]
300387d3:	add    BYTE PTR [eax+0x65300158],ch
300387d9:	and    al,BYTE PTR [ecx]
300387db:	add    BYTE PTR [eax+0x66300158],ch
300387e1:	and    al,BYTE PTR [ecx]
300387e3:	add    BYTE PTR [eax+0x67300158],ch
300387e9:	and    al,BYTE PTR [ecx]
300387eb:	add    BYTE PTR [eax+0x68300158],ch
300387f1:	and    al,BYTE PTR [ecx]
300387f3:	add    BYTE PTR [eax+0x69300158],ch
300387f9:	and    al,BYTE PTR [ecx]
300387fb:	add    BYTE PTR [eax+0x6a300158],ch
30038801:	and    al,BYTE PTR [ecx]
30038803:	add    BYTE PTR [eax+0x6b300158],ch
30038809:	and    al,BYTE PTR [ecx]
3003880b:	add    BYTE PTR [eax+0x6c300158],ch
30038811:	and    al,BYTE PTR [ecx]
30038813:	add    BYTE PTR [eax+0x6d300158],ch
30038819:	and    al,BYTE PTR [ecx]
3003881b:	add    BYTE PTR [eax+0x6e300158],ch
30038821:	and    al,BYTE PTR [ecx]
30038823:	add    BYTE PTR [eax+0x6f300158],ch
30038829:	and    al,BYTE PTR [ecx]
3003882b:	add    BYTE PTR [eax+0x70300158],ch
30038831:	xor    eax,DWORD PTR [ecx]
30038833:	add    DWORD PTR [eax+0x71300158],ebp
30038839:	xor    eax,DWORD PTR [ecx]
3003883b:	add    DWORD PTR [eax+0x72300158],ebp
30038841:	xor    eax,DWORD PTR [ecx]
30038843:	add    DWORD PTR [eax+0x73300158],ebp
30038849:	xor    eax,DWORD PTR [ecx]
3003884b:	add    DWORD PTR [eax+0x74300158],ebp
30038851:	and    al,BYTE PTR [ecx]
30038853:	add    BYTE PTR [eax+0x75300158],ch
30038859:	and    al,BYTE PTR [ecx]
3003885b:	add    BYTE PTR [eax+0x76300158],ch
30038861:	and    al,BYTE PTR [ecx]
30038863:	add    BYTE PTR [eax+0x77300158],ch
30038869:	and    al,BYTE PTR [eax]
3003886b:	add    BYTE PTR [eax+0x78300158],ch
30038871:	adc    DWORD PTR [eax],eax
30038873:	add    BYTE PTR [ebx-0x7c],ch
30038876:	add    esi,DWORD PTR [eax]
30038878:	jns    0x3003888b
3003887a:	add    BYTE PTR [eax],al
3003887c:	imul   eax,DWORD PTR [ebx+eax*1+0x117a30],0x0
30038884:	imul   eax,DWORD PTR [ebx+eax*1+0x117b30],0x0
3003888c:	imul   eax,DWORD PTR [ebx+eax*1+0x117c30],0x0
30038894:	imul   eax,DWORD PTR [ebx+eax*1+0x117d30],0x0
3003889c:	imul   eax,DWORD PTR [ebx+eax*1+0x1227e30],0x0
300388a4:	test   al,0x58
300388a6:	add    DWORD PTR [eax],esi
300388a8:	jg     0x300388cc
300388aa:	add    DWORD PTR [eax],eax
300388ac:	test   al,0x58
300388ae:	add    DWORD PTR [eax],esi
300388b0:	xor    BYTE PTR ds:0x58a80010,0x1
300388b7:	xor    BYTE PTR [ecx-0x57ffefcb],al
300388bd:	pop    eax
300388be:	add    DWORD PTR [eax],esi
300388c0:	xor    BYTE PTR ds:0x58a80010,0x1
300388c7:	xor    BYTE PTR [ebx-0x57ffefcb],al
300388cd:	pop    eax
300388ce:	add    DWORD PTR [eax],esi
300388d0:	test   BYTE PTR ds:0x58a80010,dh
300388d6:	add    DWORD PTR [eax],esi
300388d8:	test   DWORD PTR ds:0x58a80010,esi
300388de:	add    DWORD PTR [eax],esi
300388e0:	xchg   BYTE PTR ds:0x58a80010,dh
300388e6:	add    DWORD PTR [eax],esi
300388e8:	xchg   DWORD PTR ds:0x58a80010,esi
300388ee:	add    DWORD PTR [eax],esi
300388f0:	mov    BYTE PTR ds:0x58a80010,dh
300388f6:	add    DWORD PTR [eax],esi
300388f8:	mov    DWORD PTR ds:0x58a80010,esi
300388fe:	add    DWORD PTR [eax],esi
30038900:	mov    dh,BYTE PTR ds:0x58a80010
30038906:	add    DWORD PTR [eax],esi
30038908:	mov    esi,DWORD PTR ds:0x58a80010
3003890e:	add    DWORD PTR [eax],esi
30038910:	mov    WORD PTR ds:0x58a80010,?
30038916:	add    DWORD PTR [eax],esi
30038918:	lea    esi,ds:0x58a80010
3003891e:	add    DWORD PTR [eax],esi
30038920:	mov    ?,WORD PTR ds:0x58a80010
30038926:	add    DWORD PTR [eax],esi
30038928:	(bad)  
30038929:	xor    eax,0x58a80010
3003892e:	add    DWORD PTR [eax],esi
30038930:	nop
30038931:	and    al,BYTE PTR [ecx]
30038933:	add    BYTE PTR [eax-0x6ecffea8],ch
30038939:	and    al,BYTE PTR [ecx]
3003893b:	add    BYTE PTR [eax-0x6dcffea8],ch
30038941:	and    al,BYTE PTR [ecx]
30038943:	add    BYTE PTR [eax-0x6ccffea8],ch
30038949:	and    al,BYTE PTR [ecx]
3003894b:	add    BYTE PTR [eax-0x6bcffea8],ch
30038951:	and    al,BYTE PTR [ecx]
30038953:	add    BYTE PTR [eax-0x6acffea8],ch
30038959:	and    al,BYTE PTR [ecx]
3003895b:	add    BYTE PTR [eax-0x69cffea8],ch
30038961:	and    al,BYTE PTR [ecx]
30038963:	add    BYTE PTR [eax-0x68cffea8],ch
30038969:	and    al,BYTE PTR [ecx]
3003896b:	add    BYTE PTR [eax-0x67cffea8],ch
30038971:	and    al,BYTE PTR [ecx]
30038973:	add    BYTE PTR [eax-0x66cffea8],ch
30038979:	and    al,BYTE PTR [ecx]
3003897b:	add    BYTE PTR [eax-0x65cffea8],ch
30038981:	and    al,BYTE PTR [ecx]
30038983:	add    BYTE PTR [eax-0x64cffea8],ch
30038989:	and    al,BYTE PTR [ecx]
3003898b:	add    BYTE PTR [eax-0x63cffea8],ch
30038991:	and    al,BYTE PTR [ecx]
30038993:	add    BYTE PTR [eax-0x62cffea8],ch
30038999:	and    al,BYTE PTR [ecx]
3003899b:	add    BYTE PTR [eax-0x61cffea8],ch
300389a1:	and    al,BYTE PTR [ecx]
300389a3:	add    BYTE PTR [eax-0x60cffea8],ch
300389a9:	and    al,BYTE PTR [ecx]
300389ab:	add    BYTE PTR [eax-0x5fcffea8],ch
300389b1:	and    al,BYTE PTR [eax]
300389b3:	add    BYTE PTR [eax-0x5ecffea8],ch
300389b9:	and    al,BYTE PTR [eax]
300389bb:	add    BYTE PTR [eax-0x5dcffea8],ch
300389c1:	and    al,BYTE PTR [eax]
300389c3:	add    BYTE PTR [eax-0x5ccffea8],ch
300389c9:	and    al,BYTE PTR [ecx]
300389cb:	add    BYTE PTR [eax-0x5bcffea8],ch
300389d1:	xor    eax,DWORD PTR [ecx]
300389d3:	add    DWORD PTR [eax-0x5acffea8],ebp
300389d9:	and    al,BYTE PTR [ecx]
300389db:	add    BYTE PTR [eax-0x59cffea8],ch
300389e1:	adc    DWORD PTR [eax],eax
300389e3:	add    BYTE PTR [ebx-0x7c],ch
300389e6:	add    esi,DWORD PTR [eax]
300389e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
300389e9:	adc    DWORD PTR [eax],eax
300389eb:	add    BYTE PTR [ebx-0x7c],ch
300389ee:	add    esi,DWORD PTR [eax]
300389f0:	test   al,0x22
300389f2:	add    BYTE PTR [eax],al
300389f4:	test   al,0x58
300389f6:	add    DWORD PTR [eax],esi
300389f8:	test   eax,0xa8000022
300389fd:	pop    eax
300389fe:	add    DWORD PTR [eax],esi
30038a00:	stos   BYTE PTR es:[edi],al
30038a01:	and    al,BYTE PTR [eax]
30038a03:	add    BYTE PTR [eax-0x54cffea8],ch
30038a09:	and    al,BYTE PTR [ecx]
30038a0b:	add    BYTE PTR [eax-0x53cffea8],ch
30038a11:	xor    eax,DWORD PTR [ecx]
30038a13:	add    DWORD PTR [eax-0x52cffea8],ebp
30038a19:	and    al,BYTE PTR [ecx]
30038a1b:	add    BYTE PTR [eax-0x51cffea8],ch
30038a21:	and    al,BYTE PTR [ecx]
30038a23:	add    BYTE PTR [eax-0x50cffea8],ch
30038a29:	and    al,BYTE PTR [ecx]
30038a2b:	add    BYTE PTR [eax-0x4fcffea8],ch
30038a31:	and    al,BYTE PTR [ecx]
30038a33:	add    BYTE PTR [eax-0x4ecffea8],ch
30038a39:	and    al,BYTE PTR [ecx]
30038a3b:	add    BYTE PTR [eax-0x4dcffea8],ch
30038a41:	and    al,BYTE PTR [ecx]
30038a43:	add    BYTE PTR [eax-0x4ccffea8],ch
30038a49:	and    al,BYTE PTR [ecx]
30038a4b:	add    BYTE PTR [eax-0x4bcffea8],ch
30038a51:	and    al,BYTE PTR [ecx]
30038a53:	add    BYTE PTR [eax-0x4acffea8],ch
30038a59:	and    al,BYTE PTR [ecx]
30038a5b:	add    BYTE PTR [eax-0x49cffea8],ch
30038a61:	and    al,BYTE PTR [ecx]
30038a63:	add    BYTE PTR [eax-0x48cffea8],ch
30038a69:	and    al,BYTE PTR [ecx]
30038a6b:	add    BYTE PTR [eax-0x47cffea8],ch
30038a71:	adc    DWORD PTR [eax],eax
30038a73:	add    BYTE PTR [ebx-0x7c],ch
30038a76:	add    esi,DWORD PTR [eax]
30038a78:	mov    ecx,0x6b000011
30038a7d:	test   BYTE PTR [ebx],al
30038a7f:	xor    BYTE PTR [edx-0x57fefecd],bh
30038a85:	pop    eax
30038a86:	add    DWORD PTR [eax],esi
30038a88:	mov    ebx,0xa8000122
30038a8d:	pop    eax
30038a8e:	add    DWORD PTR [eax],esi
30038a90:	mov    esp,0xa8000122
30038a95:	pop    eax
30038a96:	add    DWORD PTR [eax],esi
30038a98:	mov    ebp,0xa8000122
30038a9d:	pop    eax
30038a9e:	add    DWORD PTR [eax],esi
30038aa0:	mov    esi,0xa8000122
30038aa5:	pop    eax
30038aa6:	add    DWORD PTR [eax],esi
30038aa8:	mov    edi,0xa8000122
30038aad:	pop    eax
30038aae:	add    DWORD PTR [eax],esi
30038ab0:	shl    BYTE PTR [edx],0x1
30038ab3:	add    BYTE PTR [eax-0x3ecffea8],ch
30038ab9:	and    al,BYTE PTR [ecx]
30038abb:	add    BYTE PTR [eax-0x3dcffea8],ch
30038ac1:	and    al,BYTE PTR [ecx]
30038ac3:	add    BYTE PTR [eax-0x3ccffea8],ch
30038ac9:	and    al,BYTE PTR [ecx]
30038acb:	add    BYTE PTR [eax-0x3bcffea8],ch
30038ad1:	xor    eax,DWORD PTR [ecx]
30038ad3:	add    DWORD PTR [eax-0x3acffea8],ebp
30038ad9:	xor    eax,DWORD PTR [ecx]
30038adb:	add    DWORD PTR [eax-0x39cffea8],ebp
30038ae1:	xor    eax,DWORD PTR [ecx]
30038ae3:	add    DWORD PTR [eax-0x38cffea8],ebp
30038ae9:	and    al,BYTE PTR [ecx]
30038aeb:	add    BYTE PTR [eax-0x37cffea8],ch
30038af1:	and    al,BYTE PTR [eax]
30038af3:	add    BYTE PTR [eax-0x36cffea8],ch
30038af9:	and    al,BYTE PTR [eax]
30038afb:	add    BYTE PTR [eax-0x35cffea8],ch
30038b01:	and    al,BYTE PTR [eax]
30038b03:	add    BYTE PTR [eax-0x34cffea8],ch
30038b09:	and    al,BYTE PTR [eax]
30038b0b:	add    BYTE PTR [eax-0x33cffea8],ch
30038b11:	and    al,BYTE PTR [eax]
30038b13:	add    BYTE PTR [eax-0x32cffea8],ch
30038b19:	and    al,BYTE PTR [eax]
30038b1b:	add    BYTE PTR [eax-0x31cffea8],ch
30038b21:	and    al,BYTE PTR [eax]
30038b23:	add    BYTE PTR [eax-0x30cffea8],ch
30038b29:	and    al,BYTE PTR [eax]
30038b2b:	add    BYTE PTR [eax-0x2fcffea8],ch
30038b31:	adc    DWORD PTR [eax],eax
30038b33:	add    BYTE PTR [ebx-0x7c],ch
30038b36:	add    esi,DWORD PTR [eax]
30038b38:	shl    DWORD PTR [edx],1
30038b3a:	add    DWORD PTR [eax],eax
30038b3c:	test   al,0x58
30038b3e:	add    DWORD PTR [eax],esi
30038b40:	shl    BYTE PTR [edx],cl
30038b42:	add    DWORD PTR [eax],eax
30038b44:	test   al,0x58
30038b46:	add    DWORD PTR [eax],esi
30038b48:	shl    DWORD PTR [edx],cl
30038b4a:	add    DWORD PTR [eax],eax
30038b4c:	test   al,0x58
30038b4e:	add    DWORD PTR [eax],esi
30038b50:	aam    0x22
30038b52:	add    DWORD PTR [eax],eax
30038b54:	test   al,0x58
30038b56:	add    DWORD PTR [eax],esi
30038b58:	aad    0x22
30038b5a:	add    DWORD PTR [eax],eax
30038b5c:	test   al,0x58
30038b5e:	add    DWORD PTR [eax],esi
30038b60:	(bad)  
30038b61:	and    al,BYTE PTR [ecx]
30038b63:	add    BYTE PTR [eax-0x28cffea8],ch
30038b69:	and    al,BYTE PTR [ecx]
30038b6b:	add    BYTE PTR [eax-0x27cffea8],ch
30038b71:	and    al,BYTE PTR [ecx]
30038b73:	add    BYTE PTR [eax-0x26cffea8],ch
30038b79:	and    al,BYTE PTR [ecx]
30038b7b:	add    BYTE PTR [eax-0x25cffea8],ch
30038b81:	and    al,BYTE PTR [ecx]
30038b83:	add    BYTE PTR [eax-0x24cffea8],ch
30038b89:	and    al,BYTE PTR [ecx]
30038b8b:	add    BYTE PTR [eax-0x23cffea8],ch
30038b91:	and    al,BYTE PTR [ecx]
30038b93:	add    BYTE PTR [eax-0x22cffea8],ch
30038b99:	and    al,BYTE PTR [ecx]
30038b9b:	add    BYTE PTR [eax-0x21cffea8],ch
30038ba1:	and    al,BYTE PTR [ecx]
30038ba3:	add    BYTE PTR [eax-0x20cffea8],ch
30038ba9:	and    al,BYTE PTR [ecx]
30038bab:	add    BYTE PTR [eax-0x1fcffea8],ch
30038bb1:	and    al,BYTE PTR [ecx]
30038bb3:	add    BYTE PTR [eax-0x1ecffea8],ch
30038bb9:	and    al,BYTE PTR [ecx]
30038bbb:	add    BYTE PTR [eax-0x1dcffea8],ch
30038bc1:	and    al,BYTE PTR [ecx]
30038bc3:	add    BYTE PTR [eax-0x1ccffea8],ch
30038bc9:	and    al,BYTE PTR [ecx]
30038bcb:	add    BYTE PTR [eax-0x1bcffea8],ch
30038bd1:	and    al,BYTE PTR [ecx]
30038bd3:	add    BYTE PTR [eax-0x1acffea8],ch
30038bd9:	and    al,BYTE PTR [ecx]
30038bdb:	add    BYTE PTR [eax-0x19cffea8],ch
30038be1:	and    al,BYTE PTR [ecx]
30038be3:	add    BYTE PTR [eax-0x18cffea8],ch
30038be9:	and    al,BYTE PTR [ecx]
30038beb:	add    BYTE PTR [eax-0x17cffea8],ch
30038bf1:	and    al,BYTE PTR [ecx]
30038bf3:	add    BYTE PTR [eax-0x16cffea8],ch
30038bf9:	and    al,BYTE PTR [ecx]
30038bfb:	add    BYTE PTR [eax-0x15cffea8],ch
30038c01:	and    al,BYTE PTR [ecx]
30038c03:	add    BYTE PTR [eax-0x14cffea8],ch
30038c09:	and    al,BYTE PTR [ecx]
30038c0b:	add    BYTE PTR [eax-0x13cffea8],ch
30038c11:	and    al,BYTE PTR [ecx]
30038c13:	add    BYTE PTR [eax-0x12cffea8],ch
30038c19:	and    al,BYTE PTR [ecx]
30038c1b:	add    BYTE PTR [eax-0x11cffea8],ch
30038c21:	and    al,BYTE PTR [ecx]
30038c23:	add    BYTE PTR [eax-0x10cffea8],ch
30038c29:	and    al,BYTE PTR [ecx]
30038c2b:	add    BYTE PTR [eax-0xfcffea8],ch
30038c31:	adc    DWORD PTR [eax],eax
30038c33:	add    BYTE PTR [ebx-0x7c],ch
30038c36:	add    esi,DWORD PTR [eax]
30038c38:	icebp  
30038c39:	and    al,BYTE PTR [ecx]
30038c3b:	add    BYTE PTR [eax-0xdcffea8],ch
30038c41:	and    al,BYTE PTR [ecx]
30038c43:	add    BYTE PTR [eax-0xccffea8],ch
30038c49:	and    al,BYTE PTR [ecx]
30038c4b:	add    BYTE PTR [eax-0xbcffea8],ch
30038c51:	and    al,BYTE PTR [ecx]
30038c53:	add    BYTE PTR [eax-0xacffea8],ch
30038c59:	and    al,BYTE PTR [ecx]
30038c5b:	add    BYTE PTR [eax-0x9cffea8],ch
30038c61:	and    al,BYTE PTR [ecx]
30038c63:	add    BYTE PTR [eax-0x8cffea8],ch
30038c69:	and    al,BYTE PTR [ecx]
30038c6b:	add    BYTE PTR [eax-0x7cffea8],ch
30038c71:	and    al,BYTE PTR [ecx]
30038c73:	add    BYTE PTR [eax-0x6cffea8],ch
30038c79:	and    al,BYTE PTR [ecx]
30038c7b:	add    BYTE PTR [eax-0x5cffea8],ch
30038c81:	and    al,BYTE PTR [ecx]
30038c83:	add    BYTE PTR [eax-0x4cffea8],ch
30038c89:	and    al,BYTE PTR [ecx]
30038c8b:	add    BYTE PTR [eax-0x3cffea8],ch
30038c91:	and    al,BYTE PTR [ecx]
30038c93:	add    BYTE PTR [eax-0x2cffea8],ch
30038c99:	and    al,BYTE PTR [ecx]
30038c9b:	add    BYTE PTR [eax-0x1cffea8],ch
30038ca1:	and    al,BYTE PTR [ecx]
30038ca3:	add    BYTE PTR [eax-0xcffea8],ch
30038ca9:	adc    DWORD PTR [eax],eax
30038cab:	add    BYTE PTR [ebx-0x7c],ch
30038cae:	add    esi,DWORD PTR [eax]
	...
30038cb8:	push   ebp
30038cb9:	mov    ebp,esp
30038cbb:	mov    DWORD PTR [ecx],0x1
30038cc1:	pop    ebp
30038cc2:	jmp    0x30038434
30038cc7:	push   ebp
30038cc8:	mov    ebp,esp
30038cca:	mov    DWORD PTR [ecx+0x4],0x1
30038cd1:	pop    ebp
30038cd2:	jmp    0x30038434
30038cd7:	push   ebp
30038cd8:	mov    ebp,esp
30038cda:	mov    eax,DWORD PTR [ebp+0x10]
30038cdd:	sub    esp,0x10
30038ce0:	test   BYTE PTR [eax+0x1],0x38
30038ce4:	push   eax
30038ce5:	push   DWORD PTR [ebp+0xc]
30038ce8:	jne    0x30038cfd
30038cea:	mov    DWORD PTR [ebp-0x8],0x10133f6
30038cf1:	mov    DWORD PTR [ebp-0x4],0x300158a8
30038cf8:	lea    eax,[ebp-0x8]
30038cfb:	jmp    0x30038d0e
30038cfd:	mov    DWORD PTR [ebp-0x10],0x122f6
30038d04:	mov    DWORD PTR [ebp-0xc],0x300158a8
30038d0b:	lea    eax,[ebp-0x10]
30038d0e:	push   eax
30038d0f:	call   0x300158a8
30038d14:	leave  
30038d15:	ret    0xc
30038d18:	push   ebp
30038d19:	mov    ebp,esp
30038d1b:	mov    eax,DWORD PTR [ebp+0x10]
30038d1e:	sub    esp,0x10
30038d21:	test   BYTE PTR [eax+0x1],0x38
30038d25:	push   eax
30038d26:	push   DWORD PTR [ebp+0xc]
30038d29:	jne    0x30038d3e
30038d2b:	mov    DWORD PTR [ebp-0x8],0x40146f7
30038d32:	mov    DWORD PTR [ebp-0x4],0x300158a8
30038d39:	lea    eax,[ebp-0x8]
30038d3c:	jmp    0x30038d4f
30038d3e:	mov    DWORD PTR [ebp-0x10],0x122f7
30038d45:	mov    DWORD PTR [ebp-0xc],0x300158a8
30038d4c:	lea    eax,[ebp-0x10]
30038d4f:	push   eax
30038d50:	call   0x300158a8
30038d55:	leave  
30038d56:	ret    0xc
30038d59:	push   ebp
30038d5a:	mov    ebp,esp
30038d5c:	push   ecx
30038d5d:	push   ecx
30038d5e:	push   esi
30038d5f:	mov    esi,DWORD PTR [ebp+0x10]
30038d62:	mov    edx,ecx
30038d64:	mov    al,BYTE PTR [esi+0x1]
30038d67:	cmp    al,0x15
30038d69:	je     0x30038d89
30038d6b:	cmp    al,0x25
30038d6d:	je     0x30038d89
30038d6f:	and    al,0x38
30038d71:	cmp    al,0x10
30038d73:	je     0x30038d81
30038d75:	cmp    al,0x18
30038d77:	je     0x30038d81
30038d79:	cmp    al,0x20
30038d7b:	je     0x30038d81
30038d7d:	cmp    al,0x28
30038d7f:	jne    0x30038d93
30038d81:	mov    eax,DWORD PTR [edx+0xc]
30038d84:	or     DWORD PTR [eax],0xffffffff
30038d87:	jmp    0x30038d93
30038d89:	mov    eax,DWORD PTR [esi+0x2]
30038d8c:	mov    ecx,DWORD PTR [edx+0xc]
30038d8f:	mov    eax,DWORD PTR [eax]
30038d91:	mov    DWORD PTR [ecx],eax
30038d93:	push   esi
30038d94:	push   DWORD PTR [ebp+0xc]
30038d97:	lea    eax,[ebp-0x8]
30038d9a:	push   eax
30038d9b:	mov    ecx,edx
30038d9d:	mov    DWORD PTR [ebp-0x8],0x122ff
30038da4:	mov    DWORD PTR [ebp-0x4],0x300158a8
30038dab:	call   0x300158a8
30038db0:	pop    esi
30038db1:	leave  
30038db2:	ret    0xc
30038db5:	push   ebp
30038db6:	mov    ebp,esp
30038db8:	mov    eax,DWORD PTR [ebp+0x18]
30038dbb:	push   ebx
30038dbc:	push   esi
30038dbd:	mov    esi,DWORD PTR [ebp+0x8]
30038dc0:	xor    edx,edx
30038dc2:	push   edi
30038dc3:	mov    edi,DWORD PTR [ebp+0x14]
30038dc6:	mov    ebx,ecx
30038dc8:	dec    eax
30038dc9:	je     0x30038de2
30038dcb:	dec    eax
30038dcc:	je     0x30038ddc
30038dce:	dec    eax
30038dcf:	dec    eax
30038dd0:	je     0x30038dd7
30038dd2:	sub    eax,0x4
30038dd5:	jne    0x30038de6
30038dd7:	mov    edx,DWORD PTR [esi+edi*1]
30038dda:	jmp    0x30038de6
30038ddc:	movsx  edx,WORD PTR [esi+edi*1]
30038de0:	jmp    0x30038de6
30038de2:	movsx  edx,BYTE PTR [esi+edi*1]
30038de6:	mov    eax,DWORD PTR [ebp+0xc]
30038de9:	lea    ecx,[edx+eax*1]
30038dec:	add    ecx,DWORD PTR [ebp+0x10]
30038def:	sub    edx,esi
30038df1:	mov    DWORD PTR [ebp+0x8],ecx
30038df4:	mov    ecx,DWORD PTR [ebp+0x18]
30038df7:	add    edx,eax
30038df9:	dec    ecx
30038dfa:	je     0x30038e47
30038dfc:	dec    ecx
30038dfd:	je     0x30038e28
30038dff:	dec    ecx
30038e00:	dec    ecx
30038e01:	je     0x30038e0d
30038e03:	sub    ecx,0x4
30038e06:	jne    0x30038e5d
30038e08:	mov    DWORD PTR [esi+edi*1],edx
30038e0b:	jmp    0x30038e5d
30038e0d:	mov    DWORD PTR [esi+edi*1],edx
30038e10:	cmp    edx,0x80000000
30038e16:	jl     0x30038e20
30038e18:	cmp    edx,0x7fffffff
30038e1e:	jle    0x30038e5d
30038e20:	mov    eax,DWORD PTR [ebx+0x10]
30038e23:	and    DWORD PTR [eax],0x0
30038e26:	jmp    0x30038e5d
30038e28:	mov    WORD PTR [esi+edi*1],dx
30038e2c:	cmp    edx,0xffff8000
30038e32:	jl     0x30038e3c
30038e34:	cmp    edx,0x7fff
30038e3a:	jle    0x30038e5d
30038e3c:	mov    eax,DWORD PTR [ebx+0x10]
30038e3f:	mov    DWORD PTR [eax],0x2
30038e45:	jmp    0x30038e5d
30038e47:	mov    BYTE PTR [esi+edi*1],dl
30038e4a:	cmp    edx,0xffffff80
30038e4d:	jl     0x30038e54
30038e4f:	cmp    edx,0x7f
30038e52:	jle    0x30038e5d
30038e54:	mov    ecx,DWORD PTR [ebx+0x10]
30038e57:	mov    DWORD PTR [ecx],0x3
30038e5d:	mov    eax,DWORD PTR [ebp+0x8]
30038e60:	pop    edi
30038e61:	pop    esi
30038e62:	pop    ebx
30038e63:	pop    ebp
30038e64:	ret    0x14
30038e67:	push   0x4
30038e69:	mov    eax,0x3003cad4
30038e6e:	call   0x3000116a
30038e73:	mov    DWORD PTR [ebp-0x10],ecx
30038e76:	or     DWORD PTR [ebp-0x4],0xffffffff
30038e7a:	mov    ecx,DWORD PTR [ecx]
30038e7c:	test   ecx,ecx
30038e7e:	je     0x30038e86
30038e80:	mov    eax,DWORD PTR [ecx]
30038e82:	push   ecx
30038e83:	call   DWORD PTR [eax+0x8]
30038e86:	call   0x3000119d
30038e8b:	ret    
30038e8c:	push   0x0
30038e8e:	mov    eax,0x3003cb3c
30038e93:	call   0x3000116a
30038e98:	mov    ebx,DWORD PTR [ebp+0xc]
30038e9b:	xor    edi,edi
30038e9d:	test   ebx,ebx
30038e9f:	jne    0x30038ea8
30038ea1:	mov    eax,0x80070057
30038ea6:	jmp    0x30038f09
30038ea8:	push   0x3004306c
30038ead:	lea    ecx,[ebp+0xc]
30038eb0:	mov    DWORD PTR [ebx],edi
30038eb2:	call   0x30004256
30038eb7:	mov    DWORD PTR [ebp-0x4],0x1
30038ebe:	push   DWORD PTR [ebp+0x8]
30038ec1:	lea    eax,[ebp+0x8]
30038ec4:	push   eax
30038ec5:	call   0x3003a8f2
30038eca:	mov    BYTE PTR [ebp-0x4],0x2
30038ece:	push   eax
30038ecf:	lea    ecx,[ebp+0xc]
30038ed2:	call   0x300014c1
30038ed7:	mov    BYTE PTR [ebp-0x4],0x1
30038edb:	mov    ecx,DWORD PTR [ebp+0x8]
30038ede:	lea    ecx,[ecx-0x10]
30038ee1:	call   0x30004017
30038ee6:	mov    esi,DWORD PTR [ebp+0xc]
30038ee9:	push   esi
30038eea:	call   DWORD PTR ds:0x300454dc
30038ef0:	mov    DWORD PTR [ebx],eax
30038ef2:	test   eax,eax
30038ef4:	jne    0x30038efb
30038ef6:	mov    edi,0x8007000e
30038efb:	or     DWORD PTR [ebp-0x4],0xffffffff
30038eff:	lea    ecx,[esi-0x10]
30038f02:	call   0x30004017
30038f07:	mov    eax,edi
30038f09:	call   0x3000119d
30038f0e:	ret    0x8
30038f11:	push   0x0
30038f13:	mov    eax,0x3003cb94
30038f18:	call   0x3000116a
30038f1d:	mov    esi,DWORD PTR [ebp+0xc]
30038f20:	test   esi,esi
30038f22:	je     0x30038f70
30038f24:	mov    ecx,DWORD PTR [ebp+0x8]
30038f27:	test   ecx,ecx
30038f29:	je     0x30038f70
30038f2b:	or     DWORD PTR [esi],0xffffffff
30038f2e:	and    DWORD PTR [ebp+0xc],0x0
30038f32:	mov    DWORD PTR [ebp-0x4],0x1
30038f39:	mov    eax,DWORD PTR [ecx]
30038f3b:	lea    edx,[ebp+0xc]
30038f3e:	push   edx
30038f3f:	mov    edx,0x3002a32c
30038f44:	push   edx
30038f45:	push   edx
30038f46:	push   ecx
30038f47:	call   DWORD PTR [eax+0xc]
30038f4a:	mov    edi,eax
30038f4c:	test   edi,edi
30038f4e:	js     0x30038f5b
30038f50:	push   esi
30038f51:	push   DWORD PTR [ebp+0xc]
30038f54:	call   0x30038f7d
30038f59:	mov    edi,eax
30038f5b:	or     DWORD PTR [ebp-0x4],0xffffffff
30038f5f:	mov    ecx,DWORD PTR [ebp+0xc]
30038f62:	test   ecx,ecx
30038f64:	je     0x30038f6c
30038f66:	mov    edx,DWORD PTR [ecx]
30038f68:	push   ecx
30038f69:	call   DWORD PTR [edx+0x8]
30038f6c:	mov    eax,edi
30038f6e:	jmp    0x30038f75
30038f70:	mov    eax,0x80070057
30038f75:	call   0x3000119d
30038f7a:	ret    0x8
30038f7d:	push   0x10
30038f7f:	mov    eax,0x3003cbe4
30038f84:	call   0x3000116a
30038f89:	mov    esi,DWORD PTR [ebp+0xc]
30038f8c:	test   esi,esi
30038f8e:	je     0x30038ff5
30038f90:	mov    ebx,DWORD PTR [ebp+0x8]
30038f93:	test   ebx,ebx
30038f95:	je     0x30038ff5
30038f97:	or     DWORD PTR [esi],0xffffffff
30038f9a:	xor    eax,eax
30038f9c:	lea    edi,[ebp-0x1c]
30038f9f:	stos   DWORD PTR es:[edi],eax
30038fa0:	stos   DWORD PTR es:[edi],eax
30038fa1:	stos   DWORD PTR es:[edi],eax
30038fa2:	stos   DWORD PTR es:[edi],eax
30038fa3:	lea    eax,[ebp-0x1c]
30038fa6:	push   eax
30038fa7:	call   DWORD PTR ds:0x300454e4
30038fad:	and    DWORD PTR [ebp-0x4],0x0
30038fb1:	mov    eax,DWORD PTR [ebx]
30038fb3:	lea    ecx,[ebp-0x1c]
30038fb6:	push   ecx
30038fb7:	push   0xffffde72
30038fbc:	push   ebx
30038fbd:	call   DWORD PTR [eax+0x10]
30038fc0:	test   eax,eax
30038fc2:	js     0x30038fde
30038fc4:	cmp    WORD PTR [ebp-0x1c],0x3
30038fc9:	jne    0x30038fde
30038fcb:	mov    eax,DWORD PTR [ebp-0x14]
30038fce:	cmp    eax,0x10
30038fd1:	ja     0x30038fde
30038fd3:	xor    ebx,ebx
30038fd5:	test   eax,eax
30038fd7:	mov    DWORD PTR [esi],eax
30038fd9:	sete   bl
30038fdc:	jmp    0x30038fe3
30038fde:	mov    ebx,0x80004005
30038fe3:	or     DWORD PTR [ebp-0x4],0xffffffff
30038fe7:	lea    eax,[ebp-0x1c]
30038fea:	push   eax
30038feb:	call   DWORD PTR ds:0x300454e0
30038ff1:	mov    eax,ebx
30038ff3:	jmp    0x30038ffa
30038ff5:	mov    eax,0x80070057
30038ffa:	call   0x3000119d
30038fff:	ret    0x8
30039002:	push   ebp
30039003:	mov    ebp,esp
30039005:	push   ebx
30039006:	push   esi
30039007:	mov    esi,DWORD PTR [ebp+0x10]
3003900a:	push   edi
3003900b:	test   esi,esi
3003900d:	je     0x30039012
3003900f:	or     DWORD PTR [esi],0xffffffff
30039012:	mov    edi,DWORD PTR [ebp+0xc]
30039015:	test   edi,edi
30039017:	je     0x3003901c
30039019:	mov    BYTE PTR [edi],0x1
3003901c:	push   0x0
3003901e:	push   DWORD PTR [ebp+0x8]
30039021:	call   0x3003a887
30039026:	push   0x0
30039028:	push   DWORD PTR [ebp+0x8]
3003902b:	mov    ebx,eax
3003902d:	call   0x3003a82e
30039032:	cmp    eax,0xffffffff
30039035:	jne    0x30039058
30039037:	cmp    ebx,0x3
3003903a:	jle    0x30039051
3003903c:	push   DWORD PTR [ebp+0x8]
3003903f:	push   ebx
30039040:	call   0x30039147
30039045:	test   al,al
30039047:	jne    0x30039051
30039049:	test   edi,edi
3003904b:	je     0x3003905f
3003904d:	mov    BYTE PTR [edi],al
3003904f:	jmp    0x3003905f
30039051:	mov    eax,0x80004005
30039056:	jmp    0x30039061
30039058:	test   esi,esi
3003905a:	je     0x3003905f
3003905c:	dec    eax
3003905d:	mov    DWORD PTR [esi],eax
3003905f:	xor    eax,eax
30039061:	pop    edi
30039062:	pop    esi
30039063:	pop    ebx
30039064:	pop    ebp
30039065:	ret    0xc
30039068:	push   ebp
30039069:	mov    ebp,esp
3003906b:	push   edi
3003906c:	mov    edi,DWORD PTR [ebp+0x10]
3003906f:	lea    eax,[ebp+0x10]
30039072:	push   eax
30039073:	push   DWORD PTR [ebp+0x8]
30039076:	mov    BYTE PTR [edi],0x1
30039079:	call   0x30038f11
3003907e:	test   eax,eax
30039080:	js     0x300390fc
30039082:	push   ebx
30039083:	mov    ebx,DWORD PTR [ebp+0x10]
30039086:	test   ebx,ebx
30039088:	jne    0x3003908e
3003908a:	mov    BYTE PTR [edi],bl
3003908c:	jmp    0x300390fb
3003908e:	or     DWORD PTR [ebp+0x10],0xffffffff
30039092:	push   esi
30039093:	lea    eax,[ebp+0x10]
30039096:	push   eax
30039097:	push   edi
30039098:	push   ebx
30039099:	call   0x30039002
3003909e:	mov    esi,eax
300390a0:	test   esi,esi
300390a2:	js     0x300390fa
300390a4:	mov    eax,DWORD PTR [ebp+0x14]
300390a7:	mov    ecx,DWORD PTR [ebp+0x10]
300390aa:	test   eax,eax
300390ac:	je     0x300390b0
300390ae:	mov    DWORD PTR [eax],ecx
300390b0:	cmp    BYTE PTR [ebp+0xc],0x0
300390b4:	jne    0x300390f8
300390b6:	cmp    BYTE PTR [edi],0x0
300390b9:	je     0x300390f8
300390bb:	test   ecx,ecx
300390bd:	js     0x300390d7
300390bf:	push   ebx
300390c0:	call   0x3003a97f
300390c5:	test   al,al
300390c7:	je     0x300390f8
300390c9:	mov    eax,DWORD PTR [ebp+0x10]
300390cc:	inc    eax
300390cd:	push   eax
300390ce:	push   ebx
300390cf:	call   0x30039173
300390d4:	mov    DWORD PTR [ebp+0x10],eax
300390d7:	push   DWORD PTR [ebp+0x8]
300390da:	call   0x3003919f
300390df:	lea    eax,[ebp+0x10]
300390e2:	push   eax
300390e3:	push   edi
300390e4:	push   ebx
300390e5:	call   0x30039002
300390ea:	mov    ecx,DWORD PTR [ebp+0x14]
300390ed:	mov    esi,eax
300390ef:	test   ecx,ecx
300390f1:	je     0x300390f8
300390f3:	mov    eax,DWORD PTR [ebp+0x10]
300390f6:	mov    DWORD PTR [ecx],eax
300390f8:	mov    eax,esi
300390fa:	pop    esi
300390fb:	pop    ebx
300390fc:	pop    edi
300390fd:	pop    ebp
300390fe:	ret    0x10
30039101:	push   ebp
30039102:	mov    ebp,esp
30039104:	push   ecx
30039105:	push   esi
30039106:	lea    eax,[ebp-0x4]
30039109:	push   eax
3003910a:	push   DWORD PTR [ebp+0x8]
3003910d:	call   0x30038f11
30039112:	mov    esi,eax
30039114:	test   esi,esi
30039116:	js     0x30039142
30039118:	push   0x0
3003911a:	push   DWORD PTR [ebp-0x4]
3003911d:	call   0x3003a887
30039122:	cmp    eax,0xffffffff
30039125:	jne    0x3003912c
30039127:	mov    esi,0x80004005
3003912c:	push   edi
3003912d:	mov    edi,DWORD PTR [ebp+0xc]
30039130:	test   edi,edi
30039132:	je     0x3003913f
30039134:	push   DWORD PTR [ebp-0x4]
30039137:	push   eax
30039138:	call   0x30039147
3003913d:	mov    BYTE PTR [edi],al
3003913f:	mov    eax,esi
30039141:	pop    edi
30039142:	pop    esi
30039143:	leave  
30039144:	ret    0x8
30039147:	push   ebp
30039148:	mov    ebp,esp
3003914a:	push   DWORD PTR [ebp+0xc]
3003914d:	call   0x3001a93d
30039152:	push   eax
30039153:	call   0x3003a9ca
30039158:	test   al,al
3003915a:	je     0x30039166
3003915c:	cmp    DWORD PTR [ebp+0x8],0xffffffff
30039160:	jne    0x30039166
30039162:	mov    al,0x1
30039164:	jmp    0x3003916f
30039166:	xor    eax,eax
30039168:	cmp    DWORD PTR [ebp+0x8],0x4
3003916c:	sete   al
3003916f:	pop    ebp
30039170:	ret    0x8
30039173:	push   ebp
30039174:	mov    ebp,esp
30039176:	push   esi
30039177:	mov    esi,DWORD PTR [ebp+0xc]
3003917a:	cmp    esi,0x7
3003917d:	jg     0x30039182
3003917f:	dec    esi
30039180:	jmp    0x3003918f
30039182:	cmp    esi,0xe
30039185:	jge    0x3003918c
30039187:	push   0x7
30039189:	pop    esi
3003918a:	jmp    0x3003918f
3003918c:	sub    esi,0x7
3003918f:	push   esi
30039190:	push   DWORD PTR [ebp+0x8]
30039193:	call   0x3003aa36
30039198:	mov    eax,esi
3003919a:	pop    esi
3003919b:	pop    ebp
3003919c:	ret    0x8
3003919f:	push   0x4
300391a1:	mov    eax,0x3003cc3c
300391a6:	call   0x3000116a
300391ab:	mov    edi,DWORD PTR [ebp+0x8]
300391ae:	lea    eax,[ebp-0x10]
300391b1:	push   eax
300391b2:	push   edi
300391b3:	call   0x30038f11
300391b8:	mov    esi,eax
300391ba:	test   esi,esi
300391bc:	js     0x30039209
300391be:	mov    eax,DWORD PTR [ebp-0x10]
300391c1:	and    DWORD PTR [ebp+0x8],0x0
300391c5:	mov    ds:0x300444b0,eax
300391ca:	mov    DWORD PTR [ebp-0x4],0x1
300391d1:	mov    eax,DWORD PTR [edi]
300391d3:	lea    ecx,[ebp+0x8]
300391d6:	push   ecx
300391d7:	push   0x30039224
300391dc:	push   0x30039214
300391e1:	push   edi
300391e2:	call   DWORD PTR [eax+0xc]
300391e5:	test   eax,eax
300391e7:	js     0x300391f6
300391e9:	mov    eax,DWORD PTR [ebp+0x8]
300391ec:	push   0x0
300391ee:	mov    ecx,DWORD PTR [eax]
300391f0:	push   eax
300391f1:	call   DWORD PTR [ecx+0xc]
300391f4:	mov    esi,eax
300391f6:	or     DWORD PTR [ebp-0x4],0xffffffff
300391fa:	mov    eax,DWORD PTR [ebp+0x8]
300391fd:	test   eax,eax
300391ff:	je     0x30039207
30039201:	mov    ecx,DWORD PTR [eax]
30039203:	push   eax
30039204:	call   DWORD PTR [ecx+0x8]
30039207:	mov    eax,esi
30039209:	call   0x3000119d
3003920e:	ret    0x4
30039211:	nop
30039212:	nop
30039213:	nop
30039214:	push   ebp
30039215:	retf   0x4bd1
30039218:	lock xor ebp,edx
3003921b:	dec    edi
3003921c:	call   0x39b0:0x208f6e82
30039223:	mov    esp,0x73c0d4a6
30039228:	(bad)
3003922b:	inc    esp
3003922c:	xchg   esp,eax
3003922d:	pop    ebx
3003922e:	xlat   BYTE PTR ds:[ebx]
3003922f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
30039230:	dec    ebp
30039231:	mov    edi,0x8b55018b
30039236:	in     al,dx
30039237:	sub    esp,0x3c
3003923a:	mov    eax,ds:0x30043050
3003923f:	xor    eax,ebp
30039241:	mov    DWORD PTR [ebp-0x4],eax
30039244:	mov    eax,DWORD PTR [ebp+0x10]
30039247:	push   ebx
30039248:	mov    ebx,DWORD PTR [ebp+0x8]
3003924b:	test   eax,eax
3003924d:	jne    0x30039256
3003924f:	mov    eax,0x80070057
30039254:	jmp    0x3003929e
30039256:	push   esi
30039257:	push   edi
30039258:	push   0xd
3003925a:	pop    ecx
3003925b:	mov    esi,0x300392b0
30039260:	lea    edi,[ebp-0x3c]
30039263:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
30039265:	push   0x25
30039267:	pop    ecx
30039268:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
3003926a:	pop    edi
3003926b:	mov    DWORD PTR [eax],ecx
3003926d:	pop    esi
3003926e:	test   ebx,ebx
30039270:	jne    0x30039276
30039272:	xor    eax,eax
30039274:	jmp    0x3003929e
30039276:	cmp    DWORD PTR [ebp+0xc],ecx
30039279:	jge    0x30039282
3003927b:	mov    eax,0x80004005
30039280:	jmp    0x3003929e
30039282:	call   DWORD PTR ds:0x30045218
30039288:	push   eax
30039289:	lea    eax,[ebp-0x3c]
3003928c:	push   eax
3003928d:	push   0x300392e8
30039292:	push   DWORD PTR [ebp+0xc]
30039295:	push   ebx
30039296:	call   0x3001169c
3003929b:	add    esp,0x14
3003929e:	mov    ecx,DWORD PTR [ebp-0x4]
300392a1:	xor    ecx,ebp
300392a3:	pop    ebx
300392a4:	call   0x3000115c
300392a9:	leave  
300392aa:	ret    0xc
300392ad:	nop
300392ae:	nop
300392af:	nop
300392b0:	push   esi
300392b1:	add    BYTE PTR [ecx+0x0],ch
300392b4:	jae    0x300392b6
300392b6:	jne    0x300392b8
300392b8:	popa   
300392b9:	add    BYTE PTR [eax+eax*1+0x53],ch
300392bd:	add    BYTE PTR [eax+eax*1+0x75],dh
300392c1:	add    BYTE PTR [eax+eax*1+0x69],ah
300392c5:	add    BYTE PTR [edi+0x0],ch
300392c8:	dec    ebp
300392c9:	add    BYTE PTR [ecx+0x0],ah
300392cc:	imul   eax,DWORD PTR [eax],0x53006e
300392d2:	jno    0x300392d4
300392d4:	ins    DWORD PTR es:[edi],dx
300392d5:	add    BYTE PTR [ebx+0x0],dl
300392d8:	add    BYTE PTR gs:[ebx+0x0],dh
300392dc:	jae    0x300392de
300392de:	imul   eax,DWORD PTR [eax],0x6e006f
300392e4:	add    BYTE PTR [eax],al
300392e6:	nop
300392e7:	nop
300392e8:	and    eax,0x5f007300
300392ed:	add    BYTE PTR ds:0x38003000,ah
300392f3:	add    BYTE PTR [eax+0x0],bh
300392f6:	add    BYTE PTR [eax],al
300392f8:	push   ebp
300392f9:	mov    ebp,esp
300392fb:	push   ecx
300392fc:	mov    eax,ds:0x300448d0
30039301:	test   eax,eax
30039303:	jne    0x30039343
30039305:	lea    eax,[ebp-0x4]
30039308:	push   eax
30039309:	mov    ecx,0x201
3003930e:	push   ecx
3003930f:	push   0x0
30039311:	push   0x30039348
30039316:	push   0x80000001
3003931b:	mov    DWORD PTR ds:0x300448d0,ecx
30039321:	call   DWORD PTR ds:0x30045008
30039327:	test   eax,eax
30039329:	jne    0x3003933b
3003932b:	push   DWORD PTR [ebp-0x4]
3003932e:	call   DWORD PTR ds:0x30045004
30039334:	mov    eax,ds:0x300448d0
30039339:	leave  
3003933a:	ret    
3003933b:	xor    eax,eax
3003933d:	inc    eax
3003933e:	mov    ds:0x300448d0,eax
30039343:	leave  
30039344:	ret    
30039345:	nop
30039346:	nop
30039347:	nop
30039348:	push   ebx
30039349:	add    BYTE PTR [edi+0x0],ch
3003934c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
30039351:	add    BYTE PTR [ecx+0x0],ah
30039354:	jb     0x30039356
30039356:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3003935b:	add    BYTE PTR [ecx+0x0],ch
3003935e:	arpl   WORD PTR [eax],ax
30039360:	jb     0x30039362
30039362:	outs   dx,DWORD PTR ds:[esi]
30039363:	add    BYTE PTR [ebx+0x0],dh
30039366:	outs   dx,DWORD PTR ds:[esi]
30039367:	add    BYTE PTR [esi+0x0],ah
3003936a:	je     0x3003936c
3003936c:	add    BYTE PTR [eax],al
3003936e:	push   ebp
3003936f:	mov    ebp,esp
30039371:	push   ecx
30039372:	cmp    DWORD PTR [ebp+0x8],0x0
30039376:	push   esi
30039377:	push   edi
30039378:	je     0x30039429
3003937e:	mov    esi,DWORD PTR [ebp+0xc]
30039381:	test   esi,esi
30039383:	je     0x30039429
30039389:	mov    edi,DWORD PTR [ebp+0x10]
3003938c:	test   edi,edi
3003938e:	je     0x30039429
30039394:	push   edi
30039395:	push   esi
30039396:	call   0x300395cc
3003939b:	test   eax,eax
3003939d:	js     0x3003942e
300393a3:	cmp    BYTE PTR [esi],0x0
300393a6:	jne    0x3003942e
300393ac:	push   ebx
300393ad:	xor    ebx,ebx
300393af:	mov    DWORD PTR [ebp+0xc],ebx
300393b2:	call   0x300392f8
300393b7:	lea    ecx,[ebp+0xc]
300393ba:	push   ecx
300393bb:	push   eax
300393bc:	push   ebx
300393bd:	push   DWORD PTR [ebp+0x8]
300393c0:	mov    BYTE PTR [esi],bl
300393c2:	push   0x80000002
300393c7:	mov    BYTE PTR [edi],bl
300393c9:	call   DWORD PTR ds:0x30045008
300393cf:	test   eax,eax
300393d1:	jne    0x30039424
300393d3:	cmp    DWORD PTR [ebp+0xc],ebx
300393d6:	je     0x30039424
300393d8:	lea    eax,[ebp-0x4]
300393db:	push   eax
300393dc:	lea    eax,[ebp+0x10]
300393df:	push   eax
300393e0:	lea    eax,[ebp+0x8]
300393e3:	push   eax
300393e4:	push   ebx
300393e5:	push   DWORD PTR ds:0x300444b8
300393eb:	mov    DWORD PTR [ebp+0x10],ebx
300393ee:	push   DWORD PTR [ebp+0xc]
300393f1:	mov    DWORD PTR [ebp-0x4],0x4
300393f8:	mov    DWORD PTR [ebp+0x8],ebx
300393fb:	call   DWORD PTR ds:0x3004500c
30039401:	test   eax,eax
30039403:	jne    0x3003941b
30039405:	cmp    DWORD PTR [ebp+0x8],0x4
30039409:	jne    0x3003941b
3003940b:	cmp    DWORD PTR [ebp+0x10],0x1
3003940f:	jne    0x30039416
30039411:	mov    BYTE PTR [edi],0x1
30039414:	jmp    0x30039418
30039416:	mov    BYTE PTR [edi],bl
30039418:	mov    BYTE PTR [esi],0x1
3003941b:	push   DWORD PTR [ebp+0xc]
3003941e:	call   DWORD PTR ds:0x30045004
30039424:	xor    eax,eax
30039426:	pop    ebx
30039427:	jmp    0x3003942e
30039429:	mov    eax,0x80070057
3003942e:	pop    edi
3003942f:	pop    esi
30039430:	leave  
30039431:	ret    0xc
30039434:	push   ebp
30039435:	mov    ebp,esp
30039437:	sub    esp,0x244
3003943d:	mov    eax,ds:0x30043050
30039442:	xor    eax,ebp
30039444:	mov    DWORD PTR [ebp-0x4],eax
30039447:	mov    eax,DWORD PTR [ebp+0x8]
3003944a:	push   esi
3003944b:	push   edi
3003944c:	mov    edi,DWORD PTR [ebp+0xc]
3003944f:	mov    DWORD PTR [ebp-0x244],eax
30039455:	lea    eax,[ebp-0x230]
3003945b:	push   eax
3003945c:	xor    esi,esi
3003945e:	push   esi
3003945f:	push   edi
30039460:	call   DWORD PTR ds:0x30045108
30039466:	test   eax,eax
30039468:	je     0x3003952d
3003946e:	mov    DWORD PTR [ebp-0x234],esi
30039474:	or     DWORD PTR [ebp-0x234],0xffffffff
3003947b:	mov    DWORD PTR [ebp-0x240],esi
30039481:	mov    DWORD PTR [ebp-0x23c],esi
30039487:	mov    DWORD PTR [ebp-0x238],esi
3003948d:	push   0x300395ac
30039492:	push   0x3002a66c
30039497:	push   esi
30039498:	push   DWORD PTR [ebp-0x244]
3003949e:	lea    eax,[ebp-0x20c]
300394a4:	push   0x300395b4
300394a9:	push   0x103
300394ae:	push   eax
300394af:	call   0x3001169c
300394b4:	add    esp,0x1c
300394b7:	lea    eax,[ebp-0x230]
300394bd:	push   eax
300394be:	push   0x0
300394c0:	push   edi
300394c1:	call   DWORD PTR ds:0x30045108
300394c7:	test   eax,eax
300394c9:	jne    0x3003953d
300394cb:	call   DWORD PTR ds:0x30045160
300394d1:	cmp    eax,0x2
300394d4:	jne    0x300394df
300394d6:	push   0xf
300394d8:	mov    DWORD PTR [ebp-0x234],esi
300394de:	pop    esi
300394df:	mov    eax,DWORD PTR [ebp-0x234]
300394e5:	test   eax,eax
300394e7:	js     0x30039523
300394e9:	push   0x300395ac
300394ee:	push   0x3002a66c
300394f3:	push   esi
300394f4:	push   DWORD PTR [ebp-0x244]
300394fa:	lea    eax,[ebp-0x20c]
30039500:	push   0x300395b4
30039505:	push   0x103
3003950a:	push   eax
3003950b:	call   0x3001169c
30039510:	add    esp,0x1c
30039513:	lea    eax,[ebp-0x20c]
30039519:	push   0x0
3003951b:	push   eax
3003951c:	push   edi
3003951d:	call   DWORD PTR ds:0x30045104
30039523:	inc    esi
30039524:	cmp    esi,0xf
30039527:	jl     0x3003948d
3003952d:	mov    ecx,DWORD PTR [ebp-0x4]
30039530:	pop    edi
30039531:	xor    ecx,ebp
30039533:	pop    esi
30039534:	call   0x3000115c
30039539:	leave  
3003953a:	ret    0x8
3003953d:	mov    ecx,DWORD PTR [ebp-0x240]
30039543:	mov    edx,DWORD PTR [ebp-0x23c]
30039549:	mov    eax,ecx
3003954b:	or     eax,edx
3003954d:	jne    0x3003956c
3003954f:	mov    eax,DWORD PTR [ebp-0x22c]
30039555:	mov    DWORD PTR [ebp-0x240],eax
3003955b:	mov    eax,DWORD PTR [ebp-0x228]
30039561:	mov    DWORD PTR [ebp-0x23c],eax
30039567:	jmp    0x300394df
3003956c:	cmp    edx,DWORD PTR [ebp-0x228]
30039572:	jb     0x300394df
30039578:	ja     0x30039586
3003957a:	cmp    ecx,DWORD PTR [ebp-0x22c]
30039580:	jbe    0x300394df
30039586:	mov    eax,DWORD PTR [ebp-0x22c]
3003958c:	mov    DWORD PTR [ebp-0x240],eax
30039592:	mov    eax,DWORD PTR [ebp-0x228]
30039598:	mov    DWORD PTR [ebp-0x23c],eax
3003959e:	mov    eax,esi
300395a0:	mov    DWORD PTR [ebp-0x234],eax
300395a6:	jmp    0x300394e5
300395ab:	nop
300395ac:	jae    0x300395ae
300395ae:	jno    0x300395b0
300395b0:	ins    DWORD PTR es:[edi],dx
300395b1:	add    BYTE PTR [eax],al
300395b3:	add    BYTE PTR ds:0x25007300,ah
300395b9:	add    BYTE PTR [eax],dh
300395bb:	add    BYTE PTR [eax+eax*1+0x5c],ah
300395bf:	add    BYTE PTR ds:0x2e007300,ah
300395c5:	add    BYTE PTR ds:0x7300,ah
300395cb:	add    BYTE PTR [ebp-0x75],dl
300395ce:	in     al,dx
300395cf:	push   ecx
300395d0:	push   ecx
300395d1:	push   edi
300395d2:	mov    edi,DWORD PTR [ebp+0x8]
300395d5:	test   edi,edi
300395d7:	jne    0x300395e3
300395d9:	mov    eax,0x80070057
300395de:	jmp    0x30039673
300395e3:	push   ebx
300395e4:	xor    ebx,ebx
300395e6:	push   esi
300395e7:	mov    DWORD PTR [ebp+0x8],ebx
300395ea:	call   0x300392f8
300395ef:	mov    esi,DWORD PTR [ebp+0xc]
300395f2:	mov    BYTE PTR [edi],bl
300395f4:	test   esi,esi
300395f6:	je     0x300395fa
300395f8:	mov    BYTE PTR [esi],bl
300395fa:	lea    ecx,[ebp+0x8]
300395fd:	push   ecx
300395fe:	push   eax
300395ff:	push   ebx
30039600:	push   DWORD PTR ds:0x300444b4
30039606:	push   0x80000002
3003960b:	call   DWORD PTR ds:0x30045008
30039611:	test   eax,eax
30039613:	jne    0x3003966f
30039615:	cmp    DWORD PTR [ebp+0x8],ebx
30039618:	je     0x3003966f
3003961a:	or     DWORD PTR [ebp-0x4],0xffffffff
3003961e:	lea    eax,[ebp-0x8]
30039621:	push   eax
30039622:	lea    eax,[ebp-0x4]
30039625:	push   eax
30039626:	lea    eax,[ebp+0xc]
30039629:	push   eax
3003962a:	push   ebx
3003962b:	push   DWORD PTR ds:0x300444b8
30039631:	mov    DWORD PTR [ebp-0x8],0x4
30039638:	push   DWORD PTR [ebp+0x8]
3003963b:	mov    DWORD PTR [ebp+0xc],ebx
3003963e:	call   DWORD PTR ds:0x3004500c
30039644:	test   eax,eax
30039646:	jne    0x30039666
30039648:	cmp    DWORD PTR [ebp+0xc],0x4
3003964c:	jne    0x30039666
3003964e:	cmp    DWORD PTR [ebp-0x4],0x1
30039652:	jne    0x3003965d
30039654:	test   esi,esi
30039656:	je     0x30039663
30039658:	mov    BYTE PTR [esi],0x1
3003965b:	jmp    0x30039663
3003965d:	test   esi,esi
3003965f:	je     0x30039663
30039661:	mov    BYTE PTR [esi],bl
30039663:	mov    BYTE PTR [edi],0x1
30039666:	push   DWORD PTR [ebp+0x8]
30039669:	call   DWORD PTR ds:0x30045004
3003966f:	pop    esi
30039670:	xor    eax,eax
30039672:	pop    ebx
30039673:	pop    edi
30039674:	leave  
30039675:	ret    0x8
30039678:	push   ebp
30039679:	mov    ebp,esp
3003967b:	cmp    DWORD PTR [ebp+0xc],0x104
30039682:	jge    0x3003968e
30039684:	mov    eax,DWORD PTR [ebp+0x8]
30039687:	xor    ecx,ecx
30039689:	mov    WORD PTR [eax],cx
3003968c:	jmp    0x300396b2
3003968e:	push   edi
3003968f:	push   DWORD PTR [ebp+0x8]
30039692:	xor    edi,edi
30039694:	push   edi
30039695:	push   edi
30039696:	push   0x1c
30039698:	push   edi
30039699:	call   DWORD PTR ds:0x300455f8
3003969f:	test   eax,eax
300396a1:	je     0x300396b1
300396a3:	push   DWORD PTR [ebp+0x8]
300396a6:	push   edi
300396a7:	push   edi
300396a8:	push   0x5
300396aa:	push   edi
300396ab:	call   DWORD PTR ds:0x300455f8
300396b1:	pop    edi
300396b2:	pop    ebp
300396b3:	ret    0x8
300396b6:	push   ebp
300396b7:	mov    ebp,esp
300396b9:	sub    esp,0x20c
300396bf:	mov    eax,ds:0x30043050
300396c4:	xor    eax,ebp
300396c6:	mov    DWORD PTR [ebp-0x4],eax
300396c9:	push   ebx
300396ca:	push   esi
300396cb:	mov    esi,DWORD PTR [ebp+0x8]
300396ce:	push   edi
300396cf:	mov    edi,DWORD PTR [ebp+0xc]
300396d2:	xor    eax,eax
300396d4:	push   0x206
300396d9:	push   eax
300396da:	mov    WORD PTR [ebp-0x20c],ax
300396e1:	lea    eax,[ebp-0x20a]
300396e7:	push   eax
300396e8:	call   0x300011b1
300396ed:	add    esp,0xc
300396f0:	mov    ebx,0x104
300396f5:	push   ebx
300396f6:	lea    eax,[ebp-0x20c]
300396fc:	push   eax
300396fd:	call   0x30039678
30039702:	push   0x30039764
30039707:	push   esi
30039708:	call   0x3003c79e
3003970d:	pop    ecx
3003970e:	pop    ecx
3003970f:	test   eax,eax
30039711:	jne    0x30039728
30039713:	push   0x5c
30039715:	push   0x3000e4f0
3003971a:	call   0x3003c7aa
3003971f:	pop    ecx
30039720:	pop    ecx
30039721:	test   eax,eax
30039723:	je     0x30039745
30039725:	add    eax,0x2
30039728:	push   eax
30039729:	lea    eax,[ebp-0x20c]
3003972f:	push   eax
30039730:	mov    eax,DWORD PTR [ebp+0x10]
30039733:	push   0x3000522c
30039738:	dec    eax
30039739:	push   eax
3003973a:	push   edi
3003973b:	call   0x3001169c
30039740:	add    esp,0x14
30039743:	jmp    0x30039751
30039745:	push   0x30039778
3003974a:	push   ebx
3003974b:	push   edi
3003974c:	call   0x30004c1e
30039751:	mov    ecx,DWORD PTR [ebp-0x4]
30039754:	pop    edi
30039755:	pop    esi
30039756:	xor    ecx,ebp
30039758:	pop    ebx
30039759:	call   0x3000115c
3003975e:	leave  
3003975f:	ret    0xc
30039762:	nop
30039763:	nop
30039764:	dec    ebp
30039765:	add    BYTE PTR [ecx+0x0],ch
30039768:	arpl   WORD PTR [eax],ax
3003976a:	jb     0x3003976c
3003976c:	outs   dx,DWORD PTR ds:[esi]
3003976d:	add    BYTE PTR [ebx+0x0],dh
30039770:	outs   dx,DWORD PTR ds:[esi]
30039771:	add    BYTE PTR [esi+0x0],ah
30039774:	je     0x30039776
30039776:	add    BYTE PTR [eax],al
30039778:	arpl   WORD PTR [eax],ax
3003977a:	cmp    al,BYTE PTR [eax]
3003977c:	pop    esp
3003977d:	add    BYTE PTR [eax],al
3003977f:	add    BYTE PTR [edx+0x4],ch
30039782:	mov    eax,0x3003cc8c
30039787:	call   0x3000116a
3003978c:	cmp    DWORD PTR [ebp+0x8],0x0
30039790:	jne    0x30039799
30039792:	mov    eax,0x80004003
30039797:	jmp    0x300397ea
30039799:	xor    esi,esi
3003979b:	push   esi
3003979c:	call   0x30004615
300397a1:	mov    ecx,eax
300397a3:	test   ecx,ecx
300397a5:	jne    0x300397ae
300397a7:	mov    eax,0x8000ffff
300397ac:	jmp    0x300397ea
300397ae:	mov    eax,DWORD PTR [ecx]
300397b0:	lea    edx,[ebp-0x10]
300397b3:	push   edx
300397b4:	call   DWORD PTR [eax+0x8]
300397b7:	mov    DWORD PTR [ebp-0x4],esi
300397ba:	mov    eax,DWORD PTR [ebp-0x10]
300397bd:	mov    ecx,DWORD PTR [ebp+0xc]
300397c0:	cmp    DWORD PTR [eax-0xc],ecx
300397c3:	jb     0x300397cc
300397c5:	mov    esi,0x80004005
300397ca:	jmp    0x300397d9
300397cc:	push   eax
300397cd:	push   ecx
300397ce:	push   DWORD PTR [ebp+0x8]
300397d1:	call   0x30006ce1
300397d6:	add    esp,0xc
300397d9:	or     DWORD PTR [ebp-0x4],0xffffffff
300397dd:	mov    ecx,DWORD PTR [ebp-0x10]
300397e0:	add    ecx,0xfffffff0
300397e3:	call   0x30004017
300397e8:	mov    eax,esi
300397ea:	call   0x3000119d
300397ef:	ret    0x8
300397f2:	push   ebp
300397f3:	mov    ebp,esp
300397f5:	sub    esp,0x18
300397f8:	mov    eax,ds:0x30043050
300397fd:	xor    eax,ebp
300397ff:	mov    DWORD PTR [ebp-0x4],eax
30039802:	mov    eax,DWORD PTR [ebp+0x10]
30039805:	push   ebx
30039806:	mov    ebx,DWORD PTR [ebp+0xc]
30039809:	push   esi
3003980a:	push   edi
3003980b:	lea    esi,[ebp+0x14]
3003980e:	lea    edi,[ebp-0x14]
30039811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30039812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30039813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30039814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
30039815:	mov    esi,DWORD PTR [ebp+0x24]
30039818:	push   0x0
3003981a:	mov    DWORD PTR [ebp-0x18],eax
3003981d:	call   0x30004615
30039822:	mov    ecx,eax
30039824:	test   ecx,ecx
30039826:	jne    0x3003982f
30039828:	mov    eax,0x8000ffff
3003982d:	jmp    0x30039842
3003982f:	mov    eax,DWORD PTR [ecx]
30039831:	push   esi
30039832:	push   0x0
30039834:	lea    edx,[ebp-0x14]
30039837:	push   edx
30039838:	push   DWORD PTR [ebp-0x18]
3003983b:	push   ebx
3003983c:	push   DWORD PTR [ebp+0x8]
3003983f:	call   DWORD PTR [eax+0x4]
30039842:	mov    ecx,DWORD PTR [ebp-0x4]
30039845:	pop    edi
30039846:	pop    esi
30039847:	xor    ecx,ebp
30039849:	pop    ebx
3003984a:	call   0x3000115c
3003984f:	leave  
30039850:	ret    0x20
30039853:	push   ebp
30039854:	mov    ebp,esp
30039856:	push   0x0
30039858:	call   0x30004615
3003985d:	mov    ecx,eax
3003985f:	test   ecx,ecx
30039861:	jne    0x3003986a
30039863:	mov    eax,0x8000ffff
30039868:	jmp    0x30039881
3003986a:	push   DWORD PTR [ebp+0x18]
3003986d:	mov    eax,DWORD PTR [ecx]
3003986f:	lea    edx,[ebp+0x14]
30039872:	push   edx
30039873:	push   0x0
30039875:	push   DWORD PTR [ebp+0x10]
30039878:	push   DWORD PTR [ebp+0xc]
3003987b:	push   DWORD PTR [ebp+0x8]
3003987e:	call   DWORD PTR [eax+0x4]
30039881:	pop    ebp
30039882:	ret    0x14
30039885:	push   ebp
30039886:	mov    ebp,esp
30039888:	push   esi
30039889:	mov    esi,ecx
3003988b:	call   0x3001733d
30039890:	test   BYTE PTR [ebp+0x8],0x1
30039894:	je     0x3003989d
30039896:	push   esi
30039897:	call   0x3000460f
3003989c:	pop    ecx
3003989d:	mov    eax,esi
3003989f:	pop    esi
300398a0:	pop    ebp
300398a1:	ret    0x4
300398a4:	push   0x2c8
300398a9:	mov    eax,0x3003ce46
300398ae:	call   0x300045c8
300398b3:	mov    ebx,DWORD PTR [ebp+0xc]
300398b6:	mov    edi,DWORD PTR [ebp+0x8]
300398b9:	xor    esi,esi
300398bb:	mov    DWORD PTR [ebp-0x2d4],edi
300398c1:	mov    DWORD PTR [ebp-0x2d0],esi
300398c7:	push   0x3004306c
300398cc:	test   ebx,ebx
300398ce:	jne    0x300398e9
300398d0:	mov    ecx,edi
300398d2:	call   0x30004256
300398d7:	mov    DWORD PTR [ebp-0x4],esi
300398da:	mov    DWORD PTR [ebp-0x2d0],0x1
300398e4:	jmp    0x300399d2
300398e9:	lea    ecx,[ebp-0x2c8]
300398ef:	call   0x30004256
300398f4:	mov    DWORD PTR [ebp-0x4],0x3
300398fb:	lea    eax,[ebp-0x2cc]
30039901:	push   eax
30039902:	push   esi
30039903:	push   esi
30039904:	push   ebx
30039905:	push   0x4
30039907:	mov    DWORD PTR [ebp-0x2cc],esi
3003990d:	mov    esi,DWORD PTR ds:0x30045608
30039913:	push   0x42
30039915:	call   esi
30039917:	cmp    eax,0x1
3003991a:	jne    0x3003995e
3003991c:	mov    eax,DWORD PTR [ebp-0x2cc]
30039922:	inc    eax
30039923:	push   eax
30039924:	lea    ecx,[ebp-0x2c8]
3003992a:	call   0x30004286
3003992f:	lea    ecx,[ebp-0x2cc]
30039935:	push   ecx
30039936:	push   eax
30039937:	push   0x0
30039939:	push   ebx
3003993a:	push   0x4
3003993c:	push   0x42
3003993e:	call   esi
30039940:	push   0xffffffff
30039942:	lea    ecx,[ebp-0x2c8]
30039948:	mov    esi,eax
3003994a:	call   0x30006c8c
3003994f:	test   esi,esi
30039951:	je     0x3003995e
30039953:	lea    ecx,[ebp-0x2c8]
30039959:	call   0x30004564
3003995e:	mov    esi,DWORD PTR [ebp-0x2c8]
30039964:	cmp    DWORD PTR [esi-0xc],0x0
30039968:	jne    0x300399ae
3003996a:	push   0x200
3003996f:	push   0x2b4
30039974:	lea    eax,[ebp-0x2c4]
3003997a:	push   eax
3003997b:	push   0x0
3003997d:	push   ebx
3003997e:	call   DWORD PTR ds:0x300455f0
30039984:	test   eax,eax
30039986:	je     0x300399ae
30039988:	lea    eax,[ebp-0x2b8]
3003998e:	push   eax
3003998f:	call   0x300042e4
30039994:	pop    ecx
30039995:	push   eax
30039996:	lea    eax,[ebp-0x2b8]
3003999c:	push   eax
3003999d:	lea    ecx,[ebp-0x2c8]
300399a3:	call   0x3000416f
300399a8:	mov    esi,DWORD PTR [ebp-0x2c8]
300399ae:	lea    eax,[ebp-0x2c8]
300399b4:	push   eax
300399b5:	mov    ecx,edi
300399b7:	call   0x30004340
300399bc:	mov    DWORD PTR [ebp-0x2d0],0x1
300399c6:	and    DWORD PTR [ebp-0x4],0x0
300399ca:	lea    ecx,[esi-0x10]
300399cd:	call   0x30004017
300399d2:	mov    eax,edi
300399d4:	call   0x300045fe
300399d9:	ret    0x8
300399dc:	push   0x4
300399de:	mov    eax,0x3003d198
300399e3:	call   0x3000116a
300399e8:	and    DWORD PTR [ebp-0x10],0x0
300399ec:	push   DWORD PTR [ebp+0x8]
300399ef:	add    ecx,0x4
300399f2:	call   0x3003a119
300399f7:	and    DWORD PTR [ebp-0x4],0x0
300399fb:	mov    DWORD PTR [ebp-0x10],0x1
30039a02:	mov    eax,DWORD PTR [ebp+0x8]
30039a05:	call   0x3000119d
30039a0a:	ret    0x4
30039a0d:	xor    eax,eax
30039a0f:	ret    0x18
30039a12:	push   0xc
30039a14:	mov    eax,0x3003d004
30039a19:	call   0x3000116a
30039a1e:	mov    esi,ecx
30039a20:	mov    eax,DWORD PTR [esi]
30039a22:	test   eax,eax
30039a24:	je     0x30039b1b
30039a2a:	cmp    DWORD PTR [eax],0x0
30039a2d:	je     0x30039b1b
30039a33:	push   0x0
30039a35:	push   0x65
30039a37:	push   0x30039b44
30039a3c:	push   DWORD PTR [eax]
30039a3e:	call   DWORD PTR ds:0x30045164
30039a44:	mov    edi,eax
30039a46:	test   edi,edi
30039a48:	je     0x30039b1b
30039a4e:	mov    ecx,DWORD PTR [esi]
30039a50:	push   edi
30039a51:	push   DWORD PTR [ecx]
30039a53:	call   DWORD PTR ds:0x30045188
30039a59:	mov    ecx,DWORD PTR [esi]
30039a5b:	push   edi
30039a5c:	push   DWORD PTR [ecx]
30039a5e:	mov    ebx,eax
30039a60:	call   DWORD PTR ds:0x30045184
30039a66:	mov    DWORD PTR [ebp-0x18],eax
30039a69:	test   ebx,ebx
30039a6b:	je     0x30039b1b
30039a71:	push   ebx
30039a72:	call   DWORD PTR ds:0x30045180
30039a78:	mov    edi,eax
30039a7a:	test   edi,edi
30039a7c:	je     0x30039b1b
30039a82:	lea    eax,[ebp-0x10]
30039a85:	push   0x3004306c
30039a8a:	mov    ecx,eax
30039a8c:	mov    DWORD PTR [ebp-0x14],eax
30039a8f:	call   0x30004256
30039a94:	push   0x2
30039a96:	pop    ebx
30039a97:	mov    DWORD PTR [ebp-0x4],ebx
30039a9a:	mov    ecx,esi
30039a9c:	call   0x3003a020
30039aa1:	mov    esi,DWORD PTR [eax]
30039aa3:	push   0x104
30039aa8:	lea    ecx,[ebp-0x10]
30039aab:	call   0x30004286
30039ab0:	push   0x30039b24
30039ab5:	push   esi
30039ab6:	push   eax
30039ab7:	call   DWORD PTR ds:0x30045644
30039abd:	push   0xffffffff
30039abf:	lea    ecx,[ebp-0x10]
30039ac2:	call   0x30006c8c
30039ac7:	push   0x0
30039ac9:	push   0x80
30039ace:	push   ebx
30039acf:	xor    ebx,ebx
30039ad1:	push   ebx
30039ad2:	push   ebx
30039ad3:	push   0xc0000000
30039ad8:	push   DWORD PTR [ebp-0x10]
30039adb:	call   DWORD PTR ds:0x30045220
30039ae1:	mov    esi,eax
30039ae3:	cmp    esi,0xffffffff
30039ae6:	je     0x30039b02
30039ae8:	push   ebx
30039ae9:	lea    eax,[ebp-0x14]
30039aec:	push   eax
30039aed:	push   DWORD PTR [ebp-0x18]
30039af0:	mov    DWORD PTR [ebp-0x14],ebx
30039af3:	push   edi
30039af4:	push   esi
30039af5:	call   DWORD PTR ds:0x3004527c
30039afb:	push   esi
30039afc:	call   DWORD PTR ds:0x300451d0
30039b02:	or     DWORD PTR [ebp-0x4],0xffffffff
30039b06:	lea    eax,[ebp-0x10]
30039b09:	mov    DWORD PTR [ebp-0x18],eax
30039b0c:	or     DWORD PTR [ebp-0x4],0xffffffff
30039b10:	mov    ecx,DWORD PTR [ebp-0x10]
30039b13:	lea    ecx,[ecx-0x10]
30039b16:	call   0x30004017
30039b1b:	call   0x3000119d
30039b20:	ret    
30039b21:	nop
30039b22:	nop
30039b23:	nop
30039b24:	inc    ecx
30039b25:	add    BYTE PTR [ebx+0x0],ah
30039b28:	je     0x30039b2a
30039b2a:	imul   eax,DWORD PTR [eax],0x690076
30039b30:	je     0x30039b32
30039b32:	jns    0x30039b34
30039b34:	dec    esp
30039b35:	add    BYTE PTR [edi+0x0],ch
30039b38:	add    BYTE PTR ds:0x7800,ch
30039b3d:	add    BYTE PTR [ebx+0x0],dh
30039b40:	ins    BYTE PTR es:[edi],dx
30039b41:	add    BYTE PTR [eax],al
30039b43:	add    BYTE PTR [eax+0x0],bl
30039b46:	push   ebx
30039b47:	add    BYTE PTR [eax+eax*1+0x54],cl
30039b4b:	add    BYTE PTR [eax],al
30039b4d:	add    BYTE PTR [eax+0x68],ch
30039b50:	add    al,BYTE PTR [eax]
30039b52:	add    BYTE PTR [eax+0x3003d12b],bh
30039b58:	call   0x300045c8
30039b5d:	mov    edi,ecx
30039b5f:	mov    eax,DWORD PTR [edi+0x8]
30039b62:	cmp    DWORD PTR [eax-0xc],0x0
30039b66:	je     0x30039bb5
30039b68:	xor    ebx,ebx
30039b6a:	push   ebx
30039b6b:	push   0x80
30039b70:	push   0x3
30039b72:	push   ebx
30039b73:	push   0x1
30039b75:	push   0x40000000
30039b7a:	push   eax
30039b7b:	call   DWORD PTR ds:0x30045220
30039b81:	mov    DWORD PTR [edi+0x10],eax
30039b84:	cmp    eax,0xffffffff
30039b87:	je     0x30039ba7
30039b89:	cmp    DWORD PTR [edi+0xc],0xffffffff
30039b8d:	je     0x30039ba7
30039b8f:	push   ebx
30039b90:	lea    ecx,[ebp-0x264]
30039b96:	push   ecx
30039b97:	push   DWORD PTR [edi+0xc]
30039b9a:	mov    DWORD PTR [ebp-0x264],ebx
30039ba0:	push   eax
30039ba1:	call   DWORD PTR ds:0x300450c4
30039ba7:	xor    eax,eax
30039ba9:	cmp    DWORD PTR [edi+0x10],0xffffffff
30039bad:	setne  al
30039bb0:	jmp    0x30039ea2
30039bb5:	call   0x30039a12
30039bba:	lea    eax,[ebp-0x270]
30039bc0:	push   eax
30039bc1:	mov    ecx,edi
30039bc3:	call   0x30039fa0
30039bc8:	xor    ebx,ebx
30039bca:	mov    DWORD PTR [ebp-0x4],ebx
30039bcd:	mov    eax,DWORD PTR [edi]
30039bcf:	test   eax,eax
30039bd1:	je     0x30039bfb
30039bd3:	cmp    DWORD PTR [eax+0x8],ebx
30039bd6:	je     0x30039bfb
30039bd8:	push   ebx
30039bd9:	push   0x80
30039bde:	push   0x2
30039be0:	push   ebx
30039be1:	push   0x1
30039be3:	push   0x40000000
30039be8:	push   DWORD PTR [ebp-0x270]
30039bee:	call   DWORD PTR ds:0x30045220
30039bf4:	mov    esi,eax
30039bf6:	jmp    0x30039e33
30039bfb:	lea    eax,[ebp-0x26c]
30039c01:	push   0x3004306c
30039c06:	mov    ecx,eax
30039c08:	mov    DWORD PTR [ebp-0x264],eax
30039c0e:	call   0x30004256
30039c13:	mov    BYTE PTR [ebp-0x4],0x3
30039c17:	mov    ecx,edi
30039c19:	call   0x3003a020
30039c1e:	mov    esi,DWORD PTR [eax]
30039c20:	push   0x104
30039c25:	lea    ecx,[ebp-0x26c]
30039c2b:	call   0x30004286
30039c30:	push   0x30039ed0
30039c35:	push   esi
30039c36:	push   eax
30039c37:	call   DWORD PTR ds:0x30045644
30039c3d:	push   0xffffffff
30039c3f:	lea    ecx,[ebp-0x26c]
30039c45:	call   0x30006c8c
30039c4a:	lea    eax,[ebp-0x260]
30039c50:	push   eax
30039c51:	push   DWORD PTR [ebp-0x26c]
30039c57:	call   DWORD PTR ds:0x300450ec
30039c5d:	mov    DWORD PTR [ebp-0x264],eax
30039c63:	cmp    eax,0xffffffff
30039c66:	je     0x30039d0c
30039c6c:	lea    eax,[ebp-0x268]
30039c72:	push   0x3004306c
30039c77:	mov    ecx,eax
30039c79:	mov    DWORD PTR [ebp-0x274],eax
30039c7f:	call   0x30004256
30039c84:	mov    BYTE PTR [ebp-0x4],0x6
30039c88:	mov    ebx,DWORD PTR [ebp-0x264]
30039c8e:	mov    ecx,edi
30039c90:	call   0x3003a020
30039c95:	mov    esi,DWORD PTR [eax]
30039c97:	push   0x104
30039c9c:	lea    ecx,[ebp-0x268]
30039ca2:	call   0x30004286
30039ca7:	lea    ecx,[ebp-0x234]
30039cad:	push   ecx
30039cae:	push   esi
30039caf:	push   eax
30039cb0:	call   DWORD PTR ds:0x30045644
30039cb6:	push   0xffffffff
30039cb8:	lea    ecx,[ebp-0x268]
30039cbe:	call   0x30006c8c
30039cc3:	push   DWORD PTR [ebp-0x268]
30039cc9:	call   DWORD PTR ds:0x30045208
30039ccf:	lea    eax,[ebp-0x260]
30039cd5:	push   eax
30039cd6:	push   ebx
30039cd7:	call   DWORD PTR ds:0x300450e8
30039cdd:	test   eax,eax
30039cdf:	jne    0x30039c8e
30039ce1:	push   ebx
30039ce2:	call   DWORD PTR ds:0x300450e4
30039ce8:	mov    BYTE PTR [ebp-0x4],0x3
30039cec:	lea    eax,[ebp-0x268]
30039cf2:	mov    DWORD PTR [ebp-0x264],eax
30039cf8:	mov    BYTE PTR [ebp-0x4],0x3
30039cfc:	mov    ecx,DWORD PTR [ebp-0x268]
30039d02:	lea    ecx,[ecx-0x10]
30039d05:	call   0x30004017
30039d0a:	xor    ebx,ebx
30039d0c:	mov    ecx,edi
30039d0e:	call   0x3003a020
30039d13:	push   DWORD PTR [eax]
30039d15:	call   0x30010df9
30039d1a:	test   eax,eax
30039d1c:	jne    0x30039d43
30039d1e:	mov    BYTE PTR [ebp-0x4],bl
30039d21:	lea    eax,[ebp-0x26c]
30039d27:	mov    DWORD PTR [ebp-0x264],eax
30039d2d:	mov    BYTE PTR [ebp-0x4],bl
30039d30:	mov    ecx,DWORD PTR [ebp-0x26c]
30039d36:	lea    ecx,[ecx-0x10]
30039d39:	call   0x30004017
30039d3e:	jmp    0x30039e7e
30039d43:	push   ebx
30039d44:	push   0x80
30039d49:	push   0x1
30039d4b:	push   ebx
30039d4c:	push   0x1
30039d4e:	push   0x40000000
30039d53:	push   DWORD PTR [ebp-0x270]
30039d59:	call   DWORD PTR ds:0x30045220
30039d5f:	mov    esi,eax
30039d61:	cmp    esi,0xffffffff
30039d64:	jne    0x30039e13
30039d6a:	xor    esi,esi
30039d6c:	inc    esi
30039d6d:	mov    DWORD PTR [ebp-0x274],esi
30039d73:	push   0x3004306c
30039d78:	lea    ecx,[ebp-0x268]
30039d7e:	call   0x30004256
30039d83:	mov    BYTE PTR [ebp-0x4],0xe
30039d87:	push   esi
30039d88:	lea    eax,[ebp-0x268]
30039d8e:	push   0x30039eac
30039d93:	push   eax
30039d94:	call   0x30005153
30039d99:	add    esp,0xc
30039d9c:	mov    ecx,edi
30039d9e:	call   0x3003a020
30039da3:	mov    esi,DWORD PTR [ebp-0x268]
30039da9:	push   esi
30039daa:	push   DWORD PTR [eax]
30039dac:	lea    ecx,[ebp-0x270]
30039db2:	call   0x3002c389
30039db7:	push   ebx
30039db8:	push   0x80
30039dbd:	push   0x1
30039dbf:	push   ebx
30039dc0:	push   0x1
30039dc2:	push   0x40000000
30039dc7:	push   DWORD PTR [ebp-0x270]
30039dcd:	call   DWORD PTR ds:0x30045220
30039dd3:	mov    DWORD PTR [ebp-0x264],eax
30039dd9:	cmp    eax,0xffffffff
30039ddc:	jne    0x30039e01
30039dde:	mov    BYTE PTR [ebp-0x4],0x3
30039de2:	lea    ecx,[esi-0x10]
30039de5:	call   0x30004017
30039dea:	mov    esi,DWORD PTR [ebp-0x274]
30039df0:	inc    esi
30039df1:	mov    DWORD PTR [ebp-0x274],esi
30039df7:	cmp    esi,0x40
30039dfa:	jg     0x30039e0d
30039dfc:	jmp    0x30039d73
30039e01:	mov    BYTE PTR [ebp-0x4],0x3
30039e05:	lea    ecx,[esi-0x10]
30039e08:	call   0x30004017
30039e0d:	mov    esi,DWORD PTR [ebp-0x264]
30039e13:	mov    BYTE PTR [ebp-0x4],bl
30039e16:	lea    eax,[ebp-0x26c]
30039e1c:	mov    DWORD PTR [ebp-0x264],eax
30039e22:	mov    BYTE PTR [ebp-0x4],bl
30039e25:	mov    ecx,DWORD PTR [ebp-0x26c]
30039e2b:	lea    ecx,[ecx-0x10]
30039e2e:	call   0x30004017
30039e33:	cmp    esi,0xffffffff
30039e36:	je     0x30039e68
30039e38:	lea    eax,[ebp-0x270]
30039e3e:	push   eax
30039e3f:	lea    ecx,[ebp-0x264]
30039e45:	call   0x30004340
30039e4a:	mov    BYTE PTR [ebp-0x4],0x13
30039e4e:	push   eax
30039e4f:	lea    ecx,[edi+0x8]
30039e52:	call   0x300014c1
30039e57:	mov    BYTE PTR [ebp-0x4],bl
30039e5a:	mov    ecx,DWORD PTR [ebp-0x264]
30039e60:	lea    ecx,[ecx-0x10]
30039e63:	call   0x30004017
30039e68:	push   0x30039ea8
30039e6d:	mov    ecx,edi
30039e6f:	mov    DWORD PTR [edi+0x10],esi
30039e72:	call   0x30039ef2
30039e77:	cmp    DWORD PTR [edi+0x10],0xffffffff
30039e7b:	setne  bl
30039e7e:	or     DWORD PTR [ebp-0x4],0xffffffff
30039e82:	lea    eax,[ebp-0x270]
30039e88:	mov    DWORD PTR [ebp-0x264],eax
30039e8e:	or     DWORD PTR [ebp-0x4],0xffffffff
30039e92:	mov    ecx,DWORD PTR [ebp-0x270]
30039e98:	add    ecx,0xfffffff0
30039e9b:	call   0x30004017
30039ea0:	mov    al,bl
30039ea2:	call   0x300045fe
30039ea7:	ret    
30039ea8:	(bad)  
30039ea9:	inc    BYTE PTR [eax]
30039eab:	add    BYTE PTR [ecx+0x0],al
30039eae:	arpl   WORD PTR [eax],ax
30039eb0:	je     0x30039eb2
30039eb2:	imul   eax,DWORD PTR [eax],0x690076
30039eb8:	je     0x30039eba
30039eba:	jns    0x30039ebc
30039ebc:	dec    esp
30039ebd:	add    BYTE PTR [edi+0x0],ch
30039ec0:	add    BYTE PTR [di],ah
30039ec3:	add    BYTE PTR [eax+eax*1+0x2e],ah
30039ec7:	add    BYTE PTR [eax+0x0],bh
30039eca:	ins    DWORD PTR es:[edi],dx
30039ecb:	add    BYTE PTR [eax+eax*1+0x0],ch
30039ecf:	add    BYTE PTR [ecx+0x0],al
30039ed2:	arpl   WORD PTR [eax],ax
30039ed4:	je     0x30039ed6
30039ed6:	imul   eax,DWORD PTR [eax],0x690076
30039edc:	je     0x30039ede
30039ede:	jns    0x30039ee0
30039ee0:	dec    esp
30039ee1:	add    BYTE PTR [edi+0x0],ch
30039ee4:	add    BYTE PTR [bp+si],ch
30039ee7:	add    BYTE PTR [esi],ch
30039ee9:	add    BYTE PTR [eax+0x0],bh
30039eec:	ins    DWORD PTR es:[edi],dx
30039eed:	add    BYTE PTR [eax+eax*1+0x0],ch
30039ef1:	add    BYTE PTR [ebp-0x75],dl
30039ef4:	in     al,dx
30039ef5:	push   ecx
30039ef6:	push   esi
30039ef7:	mov    esi,DWORD PTR [ecx+0x10]
30039efa:	cmp    esi,0xffffffff
30039efd:	jne    0x30039f03
30039eff:	xor    al,al
30039f01:	jmp    0x30039f24
30039f03:	push   0x0
30039f05:	lea    eax,[ebp-0x4]
30039f08:	push   eax
30039f09:	push   DWORD PTR [ebp+0x8]
30039f0c:	call   0x300042e4
30039f11:	pop    ecx
30039f12:	add    eax,eax
30039f14:	push   eax
30039f15:	push   DWORD PTR [ebp+0x8]
30039f18:	push   esi
30039f19:	call   DWORD PTR ds:0x3004527c
30039f1f:	test   eax,eax
30039f21:	setne  al
30039f24:	pop    esi
30039f25:	leave  
30039f26:	ret    0x4
30039f29:	push   ebp
30039f2a:	mov    ebp,esp
30039f2c:	push   ecx
30039f2d:	push   ecx
30039f2e:	push   esi
30039f2f:	mov    esi,ecx
30039f31:	cmp    DWORD PTR [esi+0x10],0xffffffff
30039f35:	jne    0x30039f3b
30039f37:	xor    al,al
30039f39:	jmp    0x30039f9b
30039f3b:	push   ebx
30039f3c:	push   0x1
30039f3e:	lea    eax,[ebp-0x4]
30039f41:	push   eax
30039f42:	xor    ebx,ebx
30039f44:	push   ebx
30039f45:	push   DWORD PTR [esi+0x10]
30039f48:	mov    DWORD PTR [ebp-0x4],ebx
30039f4b:	call   DWORD PTR ds:0x300450c4
30039f51:	mov    DWORD PTR [ebp-0x8],eax
30039f54:	cmp    eax,0xffffffff
30039f57:	jne    0x30039f63
30039f59:	call   DWORD PTR ds:0x30045160
30039f5f:	test   eax,eax
30039f61:	jne    0x30039f71
30039f63:	push   DWORD PTR [ebp+0x8]
30039f66:	mov    ecx,esi
30039f68:	call   0x30039ef2
30039f6d:	test   al,al
30039f6f:	jne    0x30039f75
30039f71:	xor    al,al
30039f73:	jmp    0x30039f9a
30039f75:	push   ebx
30039f76:	lea    eax,[ebp-0x4]
30039f79:	push   eax
30039f7a:	push   DWORD PTR [ebp-0x8]
30039f7d:	push   DWORD PTR [esi+0x10]
30039f80:	call   DWORD PTR ds:0x300450c4
30039f86:	cmp    eax,0xffffffff
30039f89:	jne    0x30039f95
30039f8b:	call   DWORD PTR ds:0x30045160
30039f91:	test   eax,eax
30039f93:	jne    0x30039f98
30039f95:	xor    ebx,ebx
30039f97:	inc    ebx
30039f98:	mov    al,bl
30039f9a:	pop    ebx
30039f9b:	pop    esi
30039f9c:	leave  
30039f9d:	ret    0x4
30039fa0:	push   0x4
30039fa2:	mov    eax,0x3003d198
30039fa7:	call   0x3000116a
30039fac:	mov    edi,ecx
30039fae:	xor    ebx,ebx
30039fb0:	mov    DWORD PTR [ebp-0x4],ebx
30039fb3:	mov    DWORD PTR [ebp-0x10],ebx
30039fb6:	mov    ecx,DWORD PTR [ebp+0x8]
30039fb9:	call   0x300051c8
30039fbe:	mov    DWORD PTR [ebp-0x4],ebx
30039fc1:	mov    eax,DWORD PTR [edi]
30039fc3:	mov    DWORD PTR [ebp-0x10],0x1
30039fca:	test   eax,eax
30039fcc:	je     0x30039fdf
30039fce:	mov    ebx,DWORD PTR [eax+0x8]
30039fd1:	test   ebx,ebx
30039fd3:	je     0x30039fdf
30039fd5:	mov    ecx,edi
30039fd7:	call   0x3003a020
30039fdc:	push   ebx
30039fdd:	jmp    0x30039feb
30039fdf:	mov    ecx,edi
30039fe1:	call   0x3003a020
30039fe6:	push   0x3003a000
30039feb:	push   DWORD PTR [eax]
30039fed:	mov    ecx,DWORD PTR [ebp+0x8]
30039ff0:	call   0x3002c389
30039ff5:	mov    eax,DWORD PTR [ebp+0x8]
30039ff8:	call   0x3000119d
30039ffd:	ret    0x4
3003a000:	inc    ecx
3003a001:	add    BYTE PTR [ebx+0x0],ah
3003a004:	je     0x3003a006
3003a006:	imul   eax,DWORD PTR [eax],0x690076
3003a00c:	je     0x3003a00e
3003a00e:	jns    0x3003a010
3003a010:	dec    esp
3003a011:	add    BYTE PTR [edi+0x0],ch
3003a014:	add    BYTE PTR ds:0x7800,ch
3003a019:	add    BYTE PTR [ebp+0x0],ch
3003a01c:	ins    BYTE PTR es:[edi],dx
3003a01d:	add    BYTE PTR [eax],al
3003a01f:	add    BYTE PTR [edx+0xc],ch
3003a022:	mov    eax,0x3003d218
3003a027:	call   0x3000116a
3003a02c:	mov    edi,ecx
3003a02e:	lea    esi,[edi+0x4]
3003a031:	mov    eax,DWORD PTR [esi]
3003a033:	cmp    DWORD PTR [eax-0xc],0x0
3003a037:	jne    0x3003a111
3003a03d:	xor    ebx,ebx
3003a03f:	mov    DWORD PTR [ebp-0x14],ebx
3003a042:	mov    DWORD PTR [ebp-0x4],ebx
3003a045:	mov    eax,DWORD PTR [edi]
3003a047:	lea    ecx,[ebp-0x14]
3003a04a:	push   ecx
3003a04b:	push   DWORD PTR [eax+0xc]
3003a04e:	push   0x1a
3003a050:	call   0x3000904c
3003a055:	test   eax,eax
3003a057:	js     0x3003a07e
3003a059:	push   DWORD PTR [ebp-0x14]
3003a05c:	lea    ecx,[ebp-0x10]
3003a05f:	call   0x3000437e
3003a064:	mov    BYTE PTR [ebp-0x4],0x1
3003a068:	push   eax
3003a069:	mov    ecx,esi
3003a06b:	call   0x300014c1
3003a070:	mov    BYTE PTR [ebp-0x4],bl
3003a073:	mov    ecx,DWORD PTR [ebp-0x10]
3003a076:	lea    ecx,[ecx-0x10]
3003a079:	call   0x30004017
3003a07e:	mov    eax,DWORD PTR [edi]
3003a080:	test   eax,eax
3003a082:	je     0x3003a0ef
3003a084:	cmp    DWORD PTR [eax+0x8],ebx
3003a087:	je     0x3003a0ef
3003a089:	lea    eax,[ebp-0x10]
3003a08c:	push   0x3004306c
3003a091:	mov    ecx,eax
3003a093:	mov    DWORD PTR [ebp-0x18],eax
3003a096:	call   0x30004256
3003a09b:	mov    BYTE PTR [ebp-0x4],0x5
3003a09f:	mov    eax,DWORD PTR [edi]
3003a0a1:	lea    ecx,[ebp-0x10]
3003a0a4:	push   DWORD PTR [eax+0x8]
3003a0a7:	push   DWORD PTR [esi]
3003a0a9:	call   0x3002c389
3003a0ae:	lea    ecx,[ebp-0x10]
3003a0b1:	call   0x300089c3
3003a0b6:	push   DWORD PTR [ebp-0x10]
3003a0b9:	mov    ecx,esi
3003a0bb:	call   0x3000927b
3003a0c0:	test   eax,eax
3003a0c2:	je     0x3003a0d8
3003a0c4:	push   DWORD PTR [ebp-0x10]
3003a0c7:	call   0x300042e4
3003a0cc:	pop    ecx
3003a0cd:	push   eax
3003a0ce:	push   DWORD PTR [ebp-0x10]
3003a0d1:	mov    ecx,esi
3003a0d3:	call   0x3000416f
3003a0d8:	mov    BYTE PTR [ebp-0x4],bl
3003a0db:	lea    eax,[ebp-0x10]
3003a0de:	mov    DWORD PTR [ebp-0x18],eax
3003a0e1:	mov    BYTE PTR [ebp-0x4],bl
3003a0e4:	mov    ecx,DWORD PTR [ebp-0x10]
3003a0e7:	lea    ecx,[ecx-0x10]
3003a0ea:	call   0x30004017
3003a0ef:	mov    edi,0x30008fc4
3003a0f4:	push   edi
3003a0f5:	call   0x300042e4
3003a0fa:	pop    ecx
3003a0fb:	push   eax
3003a0fc:	push   edi
3003a0fd:	mov    ecx,esi
3003a0ff:	call   0x30008b64
3003a104:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a108:	push   DWORD PTR [ebp-0x14]
3003a10b:	call   DWORD PTR ds:0x300454e8
3003a111:	mov    eax,esi
3003a113:	call   0x3000119d
3003a118:	ret    
3003a119:	push   0xc
3003a11b:	mov    eax,0x3003d285
3003a120:	call   0x3000116a
3003a125:	xor    edi,edi
3003a127:	lea    edx,[ecx+0x8]
3003a12a:	mov    DWORD PTR [ebp-0x10],edi
3003a12d:	mov    eax,DWORD PTR [edx]
3003a12f:	cmp    DWORD PTR [eax-0xc],edi
3003a132:	je     0x3003a149
3003a134:	mov    ecx,DWORD PTR [ebp+0x8]
3003a137:	push   edx
3003a138:	call   0x30004340
3003a13d:	mov    DWORD PTR [ebp-0x4],edi
3003a140:	mov    DWORD PTR [ebp-0x10],0x1
3003a147:	jmp    0x3003a17b
3003a149:	lea    eax,[ebp-0x14]
3003a14c:	push   eax
3003a14d:	call   0x30039fa0
3003a152:	xor    esi,esi
3003a154:	inc    esi
3003a155:	mov    DWORD PTR [ebp-0x4],esi
3003a158:	mov    ecx,DWORD PTR [ebp+0x8]
3003a15b:	push   eax
3003a15c:	call   0x30004340
3003a161:	mov    DWORD PTR [ebp-0x10],esi
3003a164:	mov    DWORD PTR [ebp-0x4],edi
3003a167:	lea    eax,[ebp-0x14]
3003a16a:	mov    DWORD PTR [ebp-0x18],eax
3003a16d:	mov    DWORD PTR [ebp-0x4],edi
3003a170:	mov    ecx,DWORD PTR [ebp-0x14]
3003a173:	add    ecx,0xfffffff0
3003a176:	call   0x30004017
3003a17b:	mov    eax,DWORD PTR [ebp+0x8]
3003a17e:	call   0x3000119d
3003a183:	ret    0x4
3003a186:	push   0x4
3003a188:	mov    eax,0x3003d2d4
3003a18d:	call   0x3000116a
3003a192:	mov    esi,ecx
3003a194:	mov    DWORD PTR [ebp-0x10],esi
3003a197:	push   DWORD PTR [ebp+0x8]
3003a19a:	call   0x3001a228
3003a19f:	and    DWORD PTR [ebp-0x4],0x0
3003a1a3:	and    DWORD PTR [esi+0x18],0x0
3003a1a7:	lea    ecx,[esi+0x4]
3003a1aa:	mov    DWORD PTR [esi],0x30008a40
3003a1b0:	call   0x30039b4e
3003a1b5:	push   0x30028fc0
3003a1ba:	mov    ecx,esi
3003a1bc:	call   0x3003a48a
3003a1c1:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a1c5:	mov    eax,esi
3003a1c7:	call   0x3000119d
3003a1cc:	ret    0x4
3003a1cf:	push   0x4
3003a1d1:	mov    eax,0x3003d2d4
3003a1d6:	call   0x3000116a
3003a1db:	mov    esi,ecx
3003a1dd:	mov    DWORD PTR [ebp-0x10],esi
3003a1e0:	mov    DWORD PTR [esi],0x30008a40
3003a1e6:	and    DWORD PTR [ebp-0x4],0x0
3003a1ea:	lea    ecx,[esi+0x4]
3003a1ed:	call   0x30017048
3003a1f2:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a1f6:	mov    ecx,esi
3003a1f8:	call   0x3001733d
3003a1fd:	call   0x3000119d
3003a202:	ret    
3003a203:	push   ebp
3003a204:	mov    ebp,esp
3003a206:	push   esi
3003a207:	mov    esi,ecx
3003a209:	call   0x3003a1cf
3003a20e:	test   BYTE PTR [ebp+0x8],0x1
3003a212:	je     0x3003a21b
3003a214:	push   esi
3003a215:	call   0x3000460f
3003a21a:	pop    ecx
3003a21b:	mov    eax,esi
3003a21d:	pop    esi
3003a21e:	pop    ebp
3003a21f:	ret    0x4
3003a222:	push   0x38
3003a224:	mov    eax,0x3003d344
3003a229:	call   0x300045c8
3003a22e:	mov    esi,ecx
3003a230:	mov    DWORD PTR [ebp-0x3c],esi
3003a233:	mov    eax,DWORD PTR [ebp+0x8]
3003a236:	mov    ebx,DWORD PTR [ebp+0x18]
3003a239:	mov    DWORD PTR [ebp-0x34],eax
3003a23c:	mov    eax,DWORD PTR [ebp+0xc]
3003a23f:	mov    DWORD PTR [ebp-0x40],eax
3003a242:	mov    eax,DWORD PTR [ebp+0x10]
3003a245:	mov    DWORD PTR [ebp-0x38],eax
3003a248:	mov    eax,DWORD PTR [ebp+0x14]
3003a24b:	mov    DWORD PTR [ebp-0x30],eax
3003a24e:	mov    eax,DWORD PTR [ebp+0x1c]
3003a251:	mov    DWORD PTR [ebp-0x44],eax
3003a254:	lea    eax,[ebp-0x20]
3003a257:	push   eax
3003a258:	call   DWORD PTR ds:0x30045224
3003a25e:	xor    ecx,ecx
3003a260:	mov    DWORD PTR [ebp-0x28],ecx
3003a263:	mov    DWORD PTR [ebp-0x4],ecx
3003a266:	test   ebx,ebx
3003a268:	je     0x3003a2b1
3003a26a:	cmp    DWORD PTR [ebx],ecx
3003a26c:	je     0x3003a2b1
3003a26e:	mov    DWORD PTR [ebp-0x24],ecx
3003a271:	mov    BYTE PTR [ebp-0x4],0x2
3003a275:	lea    eax,[ebp-0x24]
3003a278:	push   eax
3003a279:	push   ecx
3003a27a:	call   DWORD PTR ds:0x30045528
3003a280:	test   eax,eax
3003a282:	jne    0x3003a2a0
3003a284:	mov    eax,DWORD PTR [ebp-0x24]
3003a287:	test   eax,eax
3003a289:	je     0x3003a2a0
3003a28b:	mov    ecx,DWORD PTR [eax]
3003a28d:	lea    edx,[ebp-0x28]
3003a290:	push   edx
3003a291:	push   eax
3003a292:	call   DWORD PTR [ecx+0x14]
3003a295:	push   DWORD PTR [ebp-0x24]
3003a298:	push   0x0
3003a29a:	call   DWORD PTR ds:0x300454f8
3003a2a0:	mov    BYTE PTR [ebp-0x4],0x0
3003a2a4:	mov    eax,DWORD PTR [ebp-0x24]
3003a2a7:	test   eax,eax
3003a2a9:	je     0x3003a2b1
3003a2ab:	mov    ecx,DWORD PTR [eax]
3003a2ad:	push   eax
3003a2ae:	call   DWORD PTR [ecx+0x8]
3003a2b1:	push   DWORD PTR [ebp-0x28]
3003a2b4:	inc    DWORD PTR [esi+0x18]
3003a2b7:	sub    esp,0x10
3003a2ba:	mov    edi,esp
3003a2bc:	push   DWORD PTR [ebp-0x44]
3003a2bf:	lea    esi,[ebp-0x20]
3003a2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a2c3:	push   ebx
3003a2c4:	push   DWORD PTR [ebp-0x30]
3003a2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a2c8:	push   DWORD PTR [ebp-0x38]
3003a2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a2cc:	push   DWORD PTR [ebp-0x40]
3003a2cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a2d0:	push   DWORD PTR [ebp-0x34]
3003a2d3:	mov    esi,DWORD PTR [ebp-0x3c]
3003a2d6:	lea    eax,[ebp-0x2c]
3003a2d9:	push   DWORD PTR [esi+0x18]
3003a2dc:	push   eax
3003a2dd:	call   0x3000d0ab
3003a2e2:	mov    BYTE PTR [ebp-0x4],0x4
3003a2e6:	push   DWORD PTR [ebp-0x2c]
3003a2e9:	mov    ecx,esi
3003a2eb:	call   0x3003a48a
3003a2f0:	mov    esi,eax
3003a2f2:	mov    BYTE PTR [ebp-0x4],0x0
3003a2f6:	mov    ecx,DWORD PTR [ebp-0x2c]
3003a2f9:	add    ecx,0xfffffff0
3003a2fc:	call   0x30004017
3003a301:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a305:	push   DWORD PTR [ebp-0x28]
3003a308:	call   DWORD PTR ds:0x300454e8
3003a30e:	mov    eax,esi
3003a310:	call   0x300045fe
3003a315:	ret    0x18
3003a318:	push   0x30
3003a31a:	mov    eax,0x3003d498
3003a31f:	call   0x3000116a
3003a324:	mov    ebx,ecx
3003a326:	mov    DWORD PTR [ebp-0x24],ebx
3003a329:	lea    esi,[ebx+0x4]
3003a32c:	mov    ecx,esi
3003a32e:	mov    DWORD PTR [ebp-0x2c],esi
3003a331:	call   0x30039b4e
3003a336:	cmp    BYTE PTR [ebx+0x1c],0x0
3003a33a:	jne    0x3003a347
3003a33c:	mov    ecx,ebx
3003a33e:	call   0x3003a454
3003a343:	mov    BYTE PTR [ebx+0x1c],0x1
3003a347:	lea    eax,[ebx+0x24]
3003a34a:	lea    ecx,[ebp-0x10]
3003a34d:	push   ecx
3003a34e:	mov    ecx,eax
3003a350:	mov    DWORD PTR [ebp-0x28],eax
3003a353:	call   0x30016c74
3003a358:	test   al,al
3003a35a:	je     0x3003a40d
3003a360:	mov    ecx,DWORD PTR [ebp-0x10]
3003a363:	test   ecx,ecx
3003a365:	je     0x3003a40a
3003a36b:	mov    eax,DWORD PTR [ecx+0x2c]
3003a36e:	lea    esi,[ecx+0x1c]
3003a371:	lea    edi,[ebp-0x3c]
3003a374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a377:	mov    DWORD PTR [ebp-0x18],eax
3003a37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a37b:	call   0x3003a522
3003a380:	mov    ecx,DWORD PTR [ebp-0x10]
3003a383:	mov    eax,DWORD PTR [eax]
3003a385:	mov    ebx,DWORD PTR [ecx+0x10]
3003a388:	mov    DWORD PTR [ebp-0x1c],eax
3003a38b:	mov    eax,DWORD PTR [ecx+0x14]
3003a38e:	mov    DWORD PTR [ebp-0x20],eax
3003a391:	call   0x3003a4e0
3003a396:	lea    esi,[ebp-0x3c]
3003a399:	push   DWORD PTR [ebp-0x18]
3003a39c:	mov    ecx,DWORD PTR [eax]
3003a39e:	mov    eax,DWORD PTR [ebp-0x10]
3003a3a1:	sub    esp,0x10
3003a3a4:	mov    edi,esp
3003a3a6:	push   DWORD PTR [ebp-0x1c]
3003a3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a3aa:	push   ebx
3003a3ab:	push   DWORD PTR [ebp-0x20]
3003a3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a3af:	push   ecx
3003a3b0:	push   DWORD PTR [eax+0x8]
3003a3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a3b4:	push   DWORD PTR [eax+0x4]
3003a3b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
3003a3b8:	push   DWORD PTR [eax]
3003a3ba:	lea    eax,[ebp-0x14]
3003a3bd:	push   eax
3003a3be:	call   0x3000d0ab
3003a3c3:	and    DWORD PTR [ebp-0x4],0x0
3003a3c7:	push   DWORD PTR [ebp-0x14]
3003a3ca:	mov    ecx,DWORD PTR [ebp-0x24]
3003a3cd:	call   0x3003a48a
3003a3d2:	mov    esi,DWORD PTR [ebp-0x10]
3003a3d5:	test   esi,esi
3003a3d7:	je     0x3003a3e7
3003a3d9:	mov    ecx,esi
3003a3db:	call   0x3000490c
3003a3e0:	push   esi
3003a3e1:	call   0x3000460f
3003a3e6:	pop    ecx
3003a3e7:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a3eb:	mov    ecx,DWORD PTR [ebp-0x14]
3003a3ee:	lea    ecx,[ecx-0x10]
3003a3f1:	call   0x30004017
3003a3f6:	mov    ecx,DWORD PTR [ebp-0x28]
3003a3f9:	lea    eax,[ebp-0x10]
3003a3fc:	push   eax
3003a3fd:	call   0x30016c74
3003a402:	test   al,al
3003a404:	jne    0x3003a360
3003a40a:	mov    esi,DWORD PTR [ebp-0x2c]
3003a40d:	mov    ecx,esi
3003a40f:	call   0x30017048
3003a414:	xor    eax,eax
3003a416:	call   0x3000119d
3003a41b:	ret    
3003a41c:	push   0x4
3003a41e:	mov    eax,0x3003d198
3003a423:	call   0x3000116a
3003a428:	mov    esi,ecx
3003a42a:	and    DWORD PTR [ebp-0x10],0x0
3003a42e:	mov    eax,DWORD PTR [esi]
3003a430:	call   DWORD PTR [eax+0xc]
3003a433:	push   DWORD PTR [ebp+0x8]
3003a436:	lea    ecx,[esi+0x4]
3003a439:	call   0x3003a119
3003a43e:	and    DWORD PTR [ebp-0x4],0x0
3003a442:	mov    DWORD PTR [ebp-0x10],0x1
3003a449:	mov    eax,DWORD PTR [ebp+0x8]
3003a44c:	call   0x3000119d
3003a451:	ret    0x4
3003a454:	push   ebx
3003a455:	push   esi
3003a456:	push   edi
3003a457:	push   0x30028fc0
3003a45c:	mov    ebx,ecx
3003a45e:	call   0x3003a48a
3003a463:	push   0xa
3003a465:	lea    esi,[ebx+0x38]
3003a468:	pop    edi
3003a469:	mov    eax,DWORD PTR [esi]
3003a46b:	cmp    DWORD PTR [eax-0xc],0x0
3003a46f:	je     0x3003a480
3003a471:	push   eax
3003a472:	mov    ecx,ebx
3003a474:	call   0x3003a48a
3003a479:	mov    ecx,esi
3003a47b:	call   0x30004564
3003a480:	add    esi,0x4
3003a483:	dec    edi
3003a484:	jne    0x3003a469
3003a486:	pop    edi
3003a487:	pop    esi
3003a488:	pop    ebx
3003a489:	ret    
3003a48a:	push   ebp
3003a48b:	mov    ebp,esp
3003a48d:	push   esi
3003a48e:	push   DWORD PTR [ebp+0x8]
3003a491:	lea    esi,[ecx+0x4]
3003a494:	mov    ecx,esi
3003a496:	call   0x30039ef2
3003a49b:	mov    dl,al
3003a49d:	test   dl,dl
3003a49f:	je     0x3003a4af
3003a4a1:	push   0x3003a4c4
3003a4a6:	mov    ecx,esi
3003a4a8:	call   0x30039f29
3003a4ad:	mov    dl,al
3003a4af:	xor    eax,eax
3003a4b1:	test   dl,dl
3003a4b3:	setne  al
3003a4b6:	pop    esi
3003a4b7:	dec    eax
3003a4b8:	and    eax,0x80004005
3003a4bd:	pop    ebp
3003a4be:	ret    0x4
3003a4c1:	nop
3003a4c2:	nop
3003a4c3:	nop
3003a4c4:	cmp    al,0x0
3003a4c6:	das    
3003a4c7:	add    BYTE PTR [ecx+0x0],ah
3003a4ca:	arpl   WORD PTR [eax],ax
3003a4cc:	je     0x3003a4ce
3003a4ce:	imul   eax,DWORD PTR [eax],0x690076
3003a4d4:	je     0x3003a4d6
3003a4d6:	jns    0x3003a4d8
3003a4d8:	add    BYTE PTR ds:0xa00,cl
3003a4df:	add    BYTE PTR [edx+0x4],ch
3003a4e2:	mov    eax,0x3003d544
3003a4e7:	call   0x3000116a
3003a4ec:	mov    esi,ecx
3003a4ee:	lea    eax,[ebp-0x10]
3003a4f1:	push   eax
3003a4f2:	call   0x30004712
3003a4f7:	and    DWORD PTR [ebp-0x4],0x0
3003a4fb:	push   DWORD PTR [eax]
3003a4fd:	lea    ecx,[esi+0xc]
3003a500:	push   0x300290a4
3003a505:	call   0x300043f1
3003a50a:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a50e:	mov    ecx,DWORD PTR [ebp-0x10]
3003a511:	add    ecx,0xfffffff0
3003a514:	call   0x30004017
3003a519:	lea    eax,[esi+0xc]
3003a51c:	call   0x3000119d
3003a521:	ret    
3003a522:	push   0x4
3003a524:	mov    eax,0x3003d544
3003a529:	call   0x3000116a
3003a52e:	mov    esi,ecx
3003a530:	lea    eax,[ebp-0x10]
3003a533:	push   eax
3003a534:	call   0x30004712
3003a539:	and    DWORD PTR [ebp-0x4],0x0
3003a53d:	push   DWORD PTR [eax]
3003a53f:	lea    ecx,[esi+0x18]
3003a542:	push   0x300290a4
3003a547:	call   0x300043f1
3003a54c:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a550:	mov    ecx,DWORD PTR [ebp-0x10]
3003a553:	add    ecx,0xfffffff0
3003a556:	call   0x30004017
3003a55b:	lea    eax,[esi+0x18]
3003a55e:	call   0x3000119d
3003a563:	ret    
3003a564:	push   ebp
3003a565:	mov    ebp,esp
3003a567:	mov    eax,DWORD PTR [ebp+0x8]
3003a56a:	mov    ecx,0x8000ffff
3003a56f:	cmp    eax,ecx
3003a571:	jg     0x3003a5d0
3003a573:	je     0x3003a5c9
3003a575:	cmp    eax,0x8000000a
3003a57a:	je     0x3003a5c2
3003a57c:	cmp    eax,0x80004001
3003a581:	je     0x3003a5bb
3003a583:	cmp    eax,0x80004002
3003a588:	je     0x3003a5b4
3003a58a:	cmp    eax,0x80004003
3003a58f:	je     0x3003a5ad
3003a591:	cmp    eax,0x80004004
3003a596:	je     0x3003a5a6
3003a598:	cmp    eax,0x80004005
3003a59d:	jne    0x3003a5f5
3003a59f:	mov    eax,0x3003a700
3003a5a4:	jmp    0x3003a621
3003a5a6:	mov    eax,0x3003a6f0
3003a5ab:	jmp    0x3003a621
3003a5ad:	mov    eax,0x3003a6c8
3003a5b2:	jmp    0x3003a621
3003a5b4:	mov    eax,0x3003a6ac
3003a5b9:	jmp    0x3003a621
3003a5bb:	mov    eax,0x3003a660
3003a5c0:	jmp    0x3003a621
3003a5c2:	mov    eax,0x3003a730
3003a5c7:	jmp    0x3003a621
3003a5c9:	mov    eax,0x3003a644
3003a5ce:	jmp    0x3003a621
3003a5d0:	cmp    eax,0x80070005
3003a5d5:	je     0x3003a61c
3003a5d7:	cmp    eax,0x80070006
3003a5dc:	je     0x3003a615
3003a5de:	cmp    eax,0x8007000e
3003a5e3:	je     0x3003a60e
3003a5e5:	cmp    eax,0x80070057
3003a5ea:	je     0x3003a607
3003a5ec:	test   eax,eax
3003a5ee:	je     0x3003a600
3003a5f0:	cmp    eax,0x1
3003a5f3:	je     0x3003a5f9
3003a5f5:	xor    eax,eax
3003a5f7:	jmp    0x3003a621
3003a5f9:	mov    eax,0x3003a634
3003a5fe:	jmp    0x3003a621
3003a600:	mov    eax,0x3003a628
3003a605:	jmp    0x3003a621
3003a607:	mov    eax,0x3003a690
3003a60c:	jmp    0x3003a621
3003a60e:	mov    eax,0x3003a674
3003a613:	jmp    0x3003a621
3003a615:	mov    eax,0x3003a6dc
3003a61a:	jmp    0x3003a621
3003a61c:	mov    eax,0x3003a710
3003a621:	pop    ebp
3003a622:	ret    0x4
3003a625:	nop
3003a626:	nop
3003a627:	nop
3003a628:	push   ebx
3003a629:	add    BYTE PTR [edi+0x0],bl
3003a62c:	dec    edi
3003a62d:	add    BYTE PTR [ebx+0x0],cl
3003a630:	add    BYTE PTR [eax],al
3003a632:	nop
3003a633:	nop
3003a634:	push   ebx
3003a635:	add    BYTE PTR [edi+0x0],bl
3003a638:	inc    esi
3003a639:	add    BYTE PTR [ecx+0x0],al
3003a63c:	dec    esp
3003a63d:	add    BYTE PTR [ebx+0x0],dl
3003a640:	inc    ebp
3003a641:	add    BYTE PTR [eax],al
3003a643:	add    BYTE PTR [ebp+0x0],al
3003a646:	pop    edi
3003a647:	add    BYTE PTR [ebp+0x0],dl
3003a64a:	dec    esi
3003a64b:	add    BYTE PTR [ebp+0x0],al
3003a64e:	pop    eax
3003a64f:	add    BYTE PTR [eax+0x0],dl
3003a652:	inc    ebp
3003a653:	add    BYTE PTR [ebx+0x0],al
3003a656:	push   esp
3003a657:	add    BYTE PTR [ebp+0x0],al
3003a65a:	inc    esp
3003a65b:	add    BYTE PTR [eax],al
3003a65d:	add    BYTE PTR [eax+0x5f004590],dl
3003a663:	add    BYTE PTR [esi+0x0],cl
3003a666:	dec    edi
3003a667:	add    BYTE PTR [eax+eax*1+0x49],dl
3003a66b:	add    BYTE PTR [ebp+0x0],cl
3003a66e:	push   eax
3003a66f:	add    BYTE PTR [eax+eax*1+0x0],cl
3003a673:	add    BYTE PTR [ebp+0x0],al
3003a676:	pop    edi
3003a677:	add    BYTE PTR [edi+0x0],cl
3003a67a:	push   ebp
3003a67b:	add    BYTE PTR [eax+eax*1+0x4f],dl
3003a67f:	add    BYTE PTR [esi+0x0],al
3003a682:	dec    ebp
3003a683:	add    BYTE PTR [ebp+0x0],al
3003a686:	dec    ebp
3003a687:	add    BYTE PTR [edi+0x0],cl
3003a68a:	push   edx
3003a68b:	add    BYTE PTR [ecx+0x0],bl
3003a68e:	add    BYTE PTR [eax],al
3003a690:	inc    ebp
3003a691:	add    BYTE PTR [edi+0x0],bl
3003a694:	dec    ecx
3003a695:	add    BYTE PTR [esi+0x0],cl
3003a698:	push   esi
3003a699:	add    BYTE PTR [ecx+0x0],al
3003a69c:	dec    esp
3003a69d:	add    BYTE PTR [ecx+0x0],cl
3003a6a0:	inc    esp
3003a6a1:	add    BYTE PTR [ecx+0x0],al
3003a6a4:	push   edx
3003a6a5:	add    BYTE PTR [edi+0x0],al
3003a6a8:	add    BYTE PTR [eax],al
3003a6aa:	nop
3003a6ab:	nop
3003a6ac:	inc    ebp
3003a6ad:	add    BYTE PTR [edi+0x0],bl
3003a6b0:	dec    esi
3003a6b1:	add    BYTE PTR [edi+0x0],cl
3003a6b4:	dec    ecx
3003a6b5:	add    BYTE PTR [esi+0x0],cl
3003a6b8:	push   esp
3003a6b9:	add    BYTE PTR [ebp+0x0],al
3003a6bc:	push   edx
3003a6bd:	add    BYTE PTR [esi+0x0],al
3003a6c0:	inc    ecx
3003a6c1:	add    BYTE PTR [ebx+0x0],al
3003a6c4:	inc    ebp
3003a6c5:	add    BYTE PTR [eax],al
3003a6c7:	add    BYTE PTR [ebp+0x0],al
3003a6ca:	pop    edi
3003a6cb:	add    BYTE PTR [eax+0x0],dl
3003a6ce:	dec    edi
3003a6cf:	add    BYTE PTR [ecx+0x0],cl
3003a6d2:	dec    esi
3003a6d3:	add    BYTE PTR [eax+eax*1+0x45],dl
3003a6d7:	add    BYTE PTR [edx+0x0],dl
3003a6da:	add    BYTE PTR [eax],al
3003a6dc:	inc    ebp
3003a6dd:	add    BYTE PTR [edi+0x0],bl
3003a6e0:	dec    eax
3003a6e1:	add    BYTE PTR [ecx+0x0],al
3003a6e4:	dec    esi
3003a6e5:	add    BYTE PTR [eax+eax*1+0x4c],al
3003a6e9:	add    BYTE PTR [ebp+0x0],al
3003a6ec:	add    BYTE PTR [eax],al
3003a6ee:	nop
3003a6ef:	nop
3003a6f0:	inc    ebp
3003a6f1:	add    BYTE PTR [edi+0x0],bl
3003a6f4:	inc    ecx
3003a6f5:	add    BYTE PTR [edx+0x0],al
3003a6f8:	dec    edi
3003a6f9:	add    BYTE PTR [edx+0x0],dl
3003a6fc:	push   esp
3003a6fd:	add    BYTE PTR [eax],al
3003a6ff:	add    BYTE PTR [ebp+0x0],al
3003a702:	pop    edi
3003a703:	add    BYTE PTR [esi+0x0],al
3003a706:	inc    ecx
3003a707:	add    BYTE PTR [ecx+0x0],cl
3003a70a:	dec    esp
3003a70b:	add    BYTE PTR [eax],al
3003a70d:	add    BYTE PTR [eax+0x5f004590],dl
3003a713:	add    BYTE PTR [ecx+0x0],al
3003a716:	inc    ebx
3003a717:	add    BYTE PTR [ebx+0x0],al
3003a71a:	inc    ebp
3003a71b:	add    BYTE PTR [ebx+0x0],dl
3003a71e:	push   ebx
3003a71f:	add    BYTE PTR [eax+eax*1+0x45],al
3003a723:	add    BYTE PTR [esi+0x0],cl
3003a726:	dec    ecx
3003a727:	add    BYTE PTR [ebp+0x0],al
3003a72a:	inc    esp
3003a72b:	add    BYTE PTR [eax],al
3003a72d:	add    BYTE PTR [eax+0x5f004590],dl
3003a733:	add    BYTE PTR [eax+0x0],dl
3003a736:	inc    ebp
3003a737:	add    BYTE PTR [esi+0x0],cl
3003a73a:	inc    esp
3003a73b:	add    BYTE PTR [ecx+0x0],cl
3003a73e:	dec    esi
3003a73f:	add    BYTE PTR [edi+0x0],al
3003a742:	add    BYTE PTR [eax],al
3003a744:	push   ebp
3003a745:	mov    ebp,esp
3003a747:	sub    esp,0x18
3003a74a:	mov    eax,ds:0x30043050
3003a74f:	xor    eax,ebp
3003a751:	mov    DWORD PTR [ebp-0x4],eax
3003a754:	movzx  eax,WORD PTR [ebp+0x8]
3003a758:	push   esi
3003a759:	push   edi
3003a75a:	mov    edi,DWORD PTR [ebp+0xc]
3003a75d:	push   eax
3003a75e:	push   0x3003a79c
3003a763:	lea    eax,[ebp-0x18]
3003a766:	push   0x9
3003a768:	push   eax
3003a769:	call   0x3000766b
3003a76e:	mov    esi,eax
3003a770:	push   0x10
3003a772:	lea    eax,[ebp-0x18]
3003a775:	push   eax
3003a776:	push   0x12
3003a778:	push   edi
3003a779:	call   0x3000ba07
3003a77e:	add    esp,0x20
3003a781:	push   eax
3003a782:	call   0x30001432
3003a787:	mov    ecx,DWORD PTR [ebp-0x4]
3003a78a:	pop    edi
3003a78b:	mov    eax,esi
3003a78d:	xor    ecx,ebp
3003a78f:	pop    esi
3003a790:	call   0x3000115c
3003a795:	leave  
3003a796:	ret    0x8
3003a799:	nop
3003a79a:	nop
3003a79b:	nop
3003a79c:	add    BYTE PTR es:[ebx],ah
3003a79f:	add    BYTE PTR [eax+0x0],bh
3003a7a2:	and    eax,0x34003000
3003a7a7:	add    BYTE PTR [eax+0x0],bl
3003a7aa:	cmp    eax,DWORD PTR [eax]
3003a7ac:	add    BYTE PTR [eax],al
3003a7ae:	push   ebp
3003a7af:	mov    ebp,esp
3003a7b1:	sub    esp,0x1c
3003a7b4:	mov    eax,ds:0x30043050
3003a7b9:	xor    eax,ebp
3003a7bb:	mov    DWORD PTR [ebp-0x4],eax
3003a7be:	push   esi
3003a7bf:	push   edi
3003a7c0:	push   DWORD PTR [ebp+0x8]
3003a7c3:	mov    edi,DWORD PTR [ebp+0xc]
3003a7c6:	push   0x3003a804
3003a7cb:	lea    eax,[ebp-0x1c]
3003a7ce:	push   0xb
3003a7d0:	push   eax
3003a7d1:	call   0x3000766b
3003a7d6:	mov    esi,eax
3003a7d8:	push   0x14
3003a7da:	lea    eax,[ebp-0x1c]
3003a7dd:	push   eax
3003a7de:	push   0x16
3003a7e0:	push   edi
3003a7e1:	call   0x3000ba07
3003a7e6:	add    esp,0x20
3003a7e9:	push   eax
3003a7ea:	call   0x30001432
3003a7ef:	mov    ecx,DWORD PTR [ebp-0x4]
3003a7f2:	pop    edi
3003a7f3:	mov    eax,esi
3003a7f5:	xor    ecx,ebp
3003a7f7:	pop    esi
3003a7f8:	call   0x3000115c
3003a7fd:	leave  
3003a7fe:	ret    0x8
3003a801:	nop
3003a802:	nop
3003a803:	nop
3003a804:	add    BYTE PTR es:[ebx],ah
3003a807:	add    BYTE PTR [eax+0x0],bh
3003a80a:	and    eax,0x36003000
3003a80f:	add    BYTE PTR [eax+0x0],bl
3003a812:	cmp    eax,DWORD PTR [eax]
3003a814:	add    BYTE PTR [eax],al
3003a816:	push   ebp
3003a817:	mov    ebp,esp
3003a819:	mov    edx,DWORD PTR [ebp+0xc]
3003a81c:	mov    ecx,DWORD PTR [ebp+0x8]
3003a81f:	lea    eax,[edx*4+0xf5b7]
3003a826:	add    ecx,edx
3003a828:	xor    eax,ecx
3003a82a:	pop    ebp
3003a82b:	ret    0x8
3003a82e:	push   0x0
3003a830:	mov    eax,0x3003d900
3003a835:	call   0x3000116a
3003a83a:	push   DWORD PTR [ebp+0x8]
3003a83d:	call   0x3001a93d
3003a842:	test   eax,eax
3003a844:	jns    0x3003a84a
3003a846:	xor    eax,eax
3003a848:	jmp    0x3003a87f
3003a84a:	push   eax
3003a84b:	call   0x3001aceb
3003a850:	mov    edi,eax
3003a852:	mov    DWORD PTR [ebp+0x8],edi
3003a855:	xor    esi,esi
3003a857:	mov    DWORD PTR [ebp-0x4],esi
3003a85a:	mov    ecx,edi
3003a85c:	call   0x30018262
3003a861:	test   al,al
3003a863:	je     0x3003a871
3003a865:	push   DWORD PTR [ebp+0xc]
3003a868:	mov    ecx,edi
3003a86a:	call   0x3003acd2
3003a86f:	mov    esi,eax
3003a871:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a875:	lea    ecx,[ebp+0x8]
3003a878:	call   0x30019a8f
3003a87d:	mov    eax,esi
3003a87f:	call   0x3000119d
3003a884:	ret    0x8
3003a887:	push   0x0
3003a889:	mov    eax,0x3003d900
3003a88e:	call   0x3000116a
3003a893:	push   DWORD PTR [ebp+0x8]
3003a896:	call   0x3001a93d
3003a89b:	test   eax,eax
3003a89d:	jns    0x3003a8a4
3003a89f:	or     eax,0xffffffff
3003a8a2:	jmp    0x3003a8ea
3003a8a4:	push   eax
3003a8a5:	call   0x3001aceb
3003a8aa:	mov    esi,eax
3003a8ac:	mov    DWORD PTR [ebp+0x8],esi
3003a8af:	and    DWORD PTR [ebp-0x4],0x0
3003a8b3:	mov    ecx,esi
3003a8b5:	call   0x30018262
3003a8ba:	test   al,al
3003a8bc:	jne    0x3003a8c3
3003a8be:	or     esi,0xffffffff
3003a8c1:	jmp    0x3003a8dc
3003a8c3:	mov    edi,DWORD PTR [ebp+0xc]
3003a8c6:	test   edi,edi
3003a8c8:	je     0x3003a8d3
3003a8ca:	mov    ecx,esi
3003a8cc:	call   0x3003ae12
3003a8d1:	mov    DWORD PTR [edi],eax
3003a8d3:	mov    ecx,esi
3003a8d5:	call   0x3003ae08
3003a8da:	mov    esi,eax
3003a8dc:	or     DWORD PTR [ebp-0x4],0xffffffff
3003a8e0:	lea    ecx,[ebp+0x8]
3003a8e3:	call   0x30019a8f
3003a8e8:	mov    eax,esi
3003a8ea:	call   0x3000119d
3003a8ef:	ret    0x8
3003a8f2:	push   0x4
3003a8f4:	mov    eax,0x3003d9bd
3003a8f9:	call   0x3000116a
3003a8fe:	xor    ebx,ebx
3003a900:	mov    DWORD PTR [ebp-0x10],ebx
3003a903:	push   DWORD PTR [ebp+0xc]
3003a906:	call   0x3001a93d
3003a90b:	test   eax,eax
3003a90d:	jns    0x3003a928
3003a90f:	mov    ecx,DWORD PTR [ebp+0x8]
3003a912:	push   0x3004306c
3003a917:	call   0x30004256
3003a91c:	mov    DWORD PTR [ebp-0x4],ebx
3003a91f:	mov    DWORD PTR [ebp-0x10],0x1
3003a926:	jmp    0x3003a974
3003a928:	push   eax
3003a929:	call   0x3001aceb
3003a92e:	mov    esi,eax
3003a930:	mov    DWORD PTR [ebp+0xc],esi
3003a933:	mov    DWORD PTR [ebp-0x4],0x2
3003a93a:	mov    ecx,esi
3003a93c:	call   0x30018262
3003a941:	test   al,al
3003a943:	jne    0x3003a958
3003a945:	mov    ecx,DWORD PTR [ebp+0x8]
3003a948:	push   0x3004306c
3003a94d:	call   0x30004256
3003a952:	mov    BYTE PTR [ebp-0x4],0x2
3003a956:	jmp    0x3003a962
3003a958:	push   DWORD PTR [ebp+0x8]
3003a95b:	mov    ecx,esi
3003a95d:	call   0x3003ae1c
3003a962:	mov    DWORD PTR [ebp-0x10],0x1
3003a969:	mov    BYTE PTR [ebp-0x4],bl
3003a96c:	lea    ecx,[ebp+0xc]
3003a96f:	call   0x30019a8f
3003a974:	mov    eax,DWORD PTR [ebp+0x8]
3003a977:	call   0x3000119d
3003a97c:	ret    0x8
3003a97f:	push   ebp
3003a980:	mov    ebp,esp
3003a982:	push   ecx
3003a983:	push   esi
3003a984:	push   0x0
3003a986:	push   DWORD PTR [ebp+0x8]
3003a989:	call   0x3003a82e
3003a98e:	mov    esi,eax
3003a990:	cmp    esi,0xffffffff
3003a993:	je     0x3003a9c3
3003a995:	test   esi,esi
3003a997:	je     0x3003a9c3
3003a999:	push   DWORD PTR [ebp+0x8]
3003a99c:	call   0x3001a93d
3003a9a1:	test   eax,eax
3003a9a3:	js     0x3003a9c3
3003a9a5:	push   eax
3003a9a6:	lea    ecx,[ebp-0x1]
3003a9a9:	call   0x3003b181
3003a9ae:	push   eax
3003a9af:	lea    ecx,[ebp-0x2]
3003a9b2:	call   0x3003b3ce
3003a9b7:	test   eax,eax
3003a9b9:	js     0x3003a9c3
3003a9bb:	cmp    esi,eax
3003a9bd:	jg     0x3003a9c3
3003a9bf:	mov    al,0x1
3003a9c1:	jmp    0x3003a9c5
3003a9c3:	xor    al,al
3003a9c5:	pop    esi
3003a9c6:	leave  
3003a9c7:	ret    0x4
3003a9ca:	push   0x0
3003a9cc:	mov    eax,0x3003d900
3003a9d1:	call   0x3000116a
3003a9d6:	cmp    DWORD PTR [ebp+0x8],0x0
3003a9da:	jge    0x3003a9e0
3003a9dc:	xor    al,al
3003a9de:	jmp    0x3003aa2e
3003a9e0:	push   DWORD PTR [ebp+0x8]
3003a9e3:	call   0x3001aceb
3003a9e8:	mov    esi,eax
3003a9ea:	mov    DWORD PTR [ebp+0x8],esi
3003a9ed:	xor    ebx,ebx
3003a9ef:	mov    DWORD PTR [ebp-0x4],ebx
3003a9f2:	mov    ecx,esi
3003a9f4:	call   0x30018262
3003a9f9:	test   al,al
3003a9fb:	je     0x3003aa20
3003a9fd:	mov    ecx,esi
3003a9ff:	call   0x3003b000
3003aa04:	test   al,al
3003aa06:	je     0x3003aa20
3003aa08:	mov    ecx,esi
3003aa0a:	call   0x3003b00a
3003aa0f:	test   al,al
3003aa11:	jne    0x3003aa17
3003aa13:	mov    bl,0x1
3003aa15:	jmp    0x3003aa20
3003aa17:	mov    ecx,esi
3003aa19:	call   0x3003b014
3003aa1e:	mov    bl,al
3003aa20:	or     DWORD PTR [ebp-0x4],0xffffffff
3003aa24:	lea    ecx,[ebp+0x8]
3003aa27:	call   0x30019a8f
3003aa2c:	mov    al,bl
3003aa2e:	call   0x3000119d
3003aa33:	ret    0x4
3003aa36:	push   ebp
3003aa37:	mov    ebp,esp
3003aa39:	push   ecx
3003aa3a:	push   DWORD PTR [ebp+0x8]
3003aa3d:	call   0x3001a93d
3003aa42:	test   eax,eax
3003aa44:	js     0x3003aa5d
3003aa46:	push   eax
3003aa47:	lea    ecx,[ebp+0xb]
3003aa4a:	call   0x3003b181
3003aa4f:	push   0x0
3003aa51:	push   DWORD PTR [ebp+0xc]
3003aa54:	lea    ecx,[ebp-0x1]
3003aa57:	push   eax
3003aa58:	call   0x3003b533
3003aa5d:	leave  
3003aa5e:	ret    0x8
3003aa61:	push   ebp
3003aa62:	mov    ebp,esp
3003aa64:	push   ecx
3003aa65:	push   ecx
3003aa66:	fld    QWORD PTR [ecx]
3003aa68:	push   esi
3003aa69:	push   ecx
3003aa6a:	push   ecx
3003aa6b:	fstp   QWORD PTR [esp]
3003aa6e:	call   0x3003aca3
3003aa73:	mov    eax,DWORD PTR [ebp+0xc]
3003aa76:	fstp   QWORD PTR [ebp-0x8]
3003aa79:	push   ecx
3003aa7a:	fld    QWORD PTR [eax]
3003aa7c:	push   ecx
3003aa7d:	fstp   QWORD PTR [esp]
3003aa80:	call   0x3003aca3
3003aa85:	mov    esi,DWORD PTR [ebp+0x8]
3003aa88:	fsubr  QWORD PTR [ebp-0x8]
3003aa8b:	mov    ecx,esi
3003aa8d:	and    DWORD PTR [esi+0x8],0x0
3003aa91:	fstp   QWORD PTR [esi]
3003aa93:	call   0x3003abc0
3003aa98:	mov    eax,esi
3003aa9a:	pop    esi
3003aa9b:	leave  
3003aa9c:	ret    0x8
3003aa9f:	push   ebp
3003aaa0:	mov    ebp,esp
3003aaa2:	mov    eax,DWORD PTR [ebp+0x18]
3003aaa5:	push   esi
3003aaa6:	mov    esi,DWORD PTR ds:0x300453b8
3003aaac:	push   edi
3003aaad:	mov    edi,ecx
3003aaaf:	push   0x27
3003aab1:	mov    edx,DWORD PTR [edi+0x4]
3003aab4:	push   DWORD PTR [ebp+0x10]
3003aab7:	add    DWORD PTR [edx+0xc8],eax
3003aabd:	mov    eax,DWORD PTR [edi+0x4]
3003aac0:	push   0x28
3003aac2:	mov    BYTE PTR [eax+0xdc],0x1
3003aac9:	mov    edx,DWORD PTR [edi+0x4]
3003aacc:	mov    eax,DWORD PTR [ebp+0x14]
3003aacf:	mov    DWORD PTR [edx+0xc0],eax
3003aad5:	mov    ecx,DWORD PTR [edi+0x4]
3003aad8:	mov    al,BYTE PTR [ebp+0x1c]
3003aadb:	mov    BYTE PTR [ecx+0xde],al
3003aae1:	mov    eax,DWORD PTR [edi+0x4]
3003aae4:	add    eax,0x34
3003aae7:	push   eax
3003aae8:	call   esi
3003aaea:	mov    eax,DWORD PTR [edi+0x4]
3003aaed:	push   0x17
3003aaef:	push   DWORD PTR [ebp+0xc]
3003aaf2:	add    eax,0x4
3003aaf5:	push   0x18
3003aaf7:	push   eax
3003aaf8:	call   esi
3003aafa:	mov    eax,DWORD PTR [edi+0x4]
3003aafd:	push   0x1d
3003aaff:	push   DWORD PTR [ebp+0x8]
3003ab02:	add    eax,0x84
3003ab07:	push   0x1e
3003ab09:	push   eax
3003ab0a:	call   esi
3003ab0c:	add    esp,0x30
3003ab0f:	pop    edi
3003ab10:	pop    esi
3003ab11:	pop    ebp
3003ab12:	ret    0x18
3003ab15:	push   ebp
3003ab16:	mov    ebp,esp
3003ab18:	sub    esp,0x14
3003ab1b:	mov    eax,ds:0x30043050
3003ab20:	xor    eax,ebp
3003ab22:	mov    DWORD PTR [ebp-0x4],eax
3003ab25:	push   ebx
3003ab26:	mov    ebx,DWORD PTR [ebp+0xc]
3003ab29:	push   esi
3003ab2a:	mov    esi,DWORD PTR [ebp+0x8]
3003ab2d:	test   ebx,ebx
3003ab2f:	je     0x3003abb5
3003ab35:	push   edi
3003ab36:	push   ebx
3003ab37:	push   esi
3003ab38:	call   DWORD PTR ds:0x30045518
3003ab3e:	mov    ecx,eax
3003ab40:	xor    eax,eax
3003ab42:	lea    edi,[ebp-0x14]
3003ab45:	stos   DWORD PTR es:[edi],eax
3003ab46:	stos   DWORD PTR es:[edi],eax
3003ab47:	stos   DWORD PTR es:[edi],eax
3003ab48:	stos   DWORD PTR es:[edi],eax
3003ab49:	pop    edi
3003ab4a:	test   ecx,ecx
3003ab4c:	je     0x3003aba3
3003ab4e:	fld    QWORD PTR [ebx]
3003ab50:	lea    eax,[ebp-0x14]
3003ab53:	push   eax
3003ab54:	push   ecx
3003ab55:	push   ecx
3003ab56:	fstp   QWORD PTR [esp]
3003ab59:	call   DWORD PTR ds:0x300454f4
3003ab5f:	test   eax,eax
3003ab61:	je     0x3003aba3
3003ab63:	mov    ax,WORD PTR [esi]
3003ab66:	cmp    ax,WORD PTR [ebp-0x14]
3003ab6a:	jne    0x3003aba3
3003ab6c:	mov    ax,WORD PTR [esi+0x2]
3003ab70:	cmp    ax,WORD PTR [ebp-0x12]
3003ab74:	jne    0x3003aba3
3003ab76:	mov    ax,WORD PTR [esi+0x6]
3003ab7a:	cmp    ax,WORD PTR [ebp-0xe]
3003ab7e:	jne    0x3003aba3
3003ab80:	mov    ax,WORD PTR [esi+0x8]
3003ab84:	cmp    ax,WORD PTR [ebp-0xc]
3003ab88:	jne    0x3003aba3
3003ab8a:	mov    ax,WORD PTR [esi+0xa]
3003ab8e:	cmp    ax,WORD PTR [ebp-0xa]
3003ab92:	jne    0x3003aba3
3003ab94:	mov    ax,WORD PTR [esi+0xc]
3003ab98:	cmp    ax,WORD PTR [ebp-0x8]
3003ab9c:	jne    0x3003aba3
3003ab9e:	xor    eax,eax
3003aba0:	inc    eax
3003aba1:	jmp    0x3003aba5
3003aba3:	xor    eax,eax
3003aba5:	mov    ecx,DWORD PTR [ebp-0x4]
3003aba8:	pop    esi
3003aba9:	xor    ecx,ebp
3003abab:	pop    ebx
3003abac:	call   0x3000115c
3003abb1:	leave  
3003abb2:	ret    0x8
3003abb5:	push   0x80004005
3003abba:	call   0x3002ae0b
3003abbf:	int3   
3003abc0:	fld    QWORD PTR ds:0x3003abf0
3003abc6:	fcomp  QWORD PTR [ecx]
3003abc8:	fnstsw ax
3003abca:	test   ah,0x41
3003abcd:	je     0x3003abde
3003abcf:	fld    QWORD PTR ds:0x3003abe8
3003abd5:	fcomp  QWORD PTR [ecx]
3003abd7:	fnstsw ax
3003abd9:	test   ah,0x5
3003abdc:	jp     0x3003abe5
3003abde:	mov    DWORD PTR [ecx+0x8],0x1
3003abe5:	ret    
3003abe6:	nop
3003abe7:	nop
3003abe8:	add    BYTE PTR [eax],al
3003abea:	add    BYTE PTR [eax+0x414b964c],al
3003abf0:	add    BYTE PTR [eax],al
3003abf2:	add    BYTE PTR [eax-0x3eb469b4],al
3003abf8:	push   0x0
3003abfa:	mov    eax,0x3003da0c
3003abff:	call   0x3000116a
3003ac04:	mov    edi,DWORD PTR [ebp+0x8]
3003ac07:	test   edi,edi
3003ac09:	je     0x3003ac9b
3003ac0f:	mov    esi,DWORD PTR [ebp+0xc]
3003ac12:	test   esi,esi
3003ac14:	je     0x3003ac9b
3003ac1a:	and    DWORD PTR [ebp+0xc],0x0
3003ac1e:	lea    eax,[esi+0x2]
3003ac21:	push   eax
3003ac22:	lea    ecx,[ebp+0x8]
3003ac25:	call   0x3000437e
3003ac2a:	and    DWORD PTR [ebp-0x4],0x0
3003ac2e:	lea    eax,[ebp+0xc]
3003ac31:	push   eax
3003ac32:	lea    eax,[ebp+0x8]
3003ac35:	push   eax
3003ac36:	push   DWORD PTR [esi+0xc0]
3003ac3c:	call   0x3003aece
3003ac41:	mov    ebx,eax
3003ac43:	or     DWORD PTR [ebp-0x4],0xffffffff
3003ac47:	mov    ecx,DWORD PTR [ebp+0x8]
3003ac4a:	add    ecx,0xfffffff0
3003ac4d:	call   0x30004017
3003ac52:	test   ebx,ebx
3003ac54:	je     0x3003ac9b
3003ac56:	mov    ecx,DWORD PTR [edi+0x4]
3003ac59:	mov    al,BYTE PTR [esi]
3003ac5b:	mov    BYTE PTR [ecx+0xdd],al
3003ac61:	mov    ecx,DWORD PTR [edi+0x4]
3003ac64:	mov    eax,DWORD PTR [ebp+0xc]
3003ac67:	mov    DWORD PTR [ecx+0xc4],eax
3003ac6d:	push   0x0
3003ac6f:	push   DWORD PTR [ebx+0x14]
3003ac72:	lea    eax,[esi+0x2]
3003ac75:	push   DWORD PTR [ebx]
3003ac77:	mov    ecx,edi
3003ac79:	push   eax
3003ac7a:	lea    eax,[esi+0x52]
3003ac7d:	push   eax
3003ac7e:	lea    eax,[esi+0x82]
3003ac84:	push   eax
3003ac85:	call   0x3003aa9f
3003ac8a:	push   0x0
3003ac8c:	mov    eax,0xffff
3003ac91:	push   eax
3003ac92:	push   eax
3003ac93:	push   eax
3003ac94:	mov    ecx,edi
3003ac96:	call   0x3003b01e
3003ac9b:	call   0x3000119d
3003aca0:	ret    0x8
3003aca3:	push   ebp
3003aca4:	mov    ebp,esp
3003aca6:	fld    QWORD PTR ds:0x3002a320
3003acac:	fld    QWORD PTR [ebp+0x8]
3003acaf:	fcom   st(1)
3003acb1:	fnstsw ax
3003acb3:	fstp   st(1)
3003acb5:	test   ah,0x41
3003acb8:	je     0x3003acce
3003acba:	push   ecx
3003acbb:	push   ecx
3003acbc:	fstp   QWORD PTR [esp]
3003acbf:	call   DWORD PTR ds:0x30045394
3003acc5:	fld    QWORD PTR [ebp+0x8]
3003acc8:	pop    ecx
3003acc9:	fsub   st,st(1)
3003accb:	pop    ecx
3003accc:	fsubp  st(1),st
3003acce:	pop    ebp
3003accf:	ret    0x8
3003acd2:	push   ebp
3003acd3:	mov    ebp,esp
3003acd5:	sub    esp,0x3c
3003acd8:	mov    eax,ds:0x30043050
3003acdd:	xor    eax,ebp
3003acdf:	mov    DWORD PTR [ebp-0x4],eax
3003ace2:	push   ebx
3003ace3:	push   esi
3003ace4:	mov    esi,DWORD PTR [ebp+0x8]
3003ace7:	mov    ebx,ecx
3003ace9:	test   esi,esi
3003aceb:	je     0x3003acf0
3003aced:	and    DWORD PTR [esi],0x0
3003acf0:	mov    eax,DWORD PTR [ebx+0x4]
3003acf3:	cmp    BYTE PTR [eax+0xdd],0x0
3003acfa:	je     0x3003adf6
3003ad00:	cmp    BYTE PTR [eax+0xdc],0x0
3003ad07:	je     0x3003adf6
3003ad0d:	mov    ecx,0xffff
3003ad12:	cmp    WORD PTR [eax+0xd0],cx
3003ad19:	jne    0x3003ad23
3003ad1b:	or     eax,0xffffffff
3003ad1e:	jmp    0x3003adf8
3003ad23:	push   edi
3003ad24:	lea    eax,[ebp-0x24]
3003ad27:	push   eax
3003ad28:	call   DWORD PTR ds:0x30045224
3003ad2e:	xor    eax,eax
3003ad30:	lea    edi,[ebp-0x14]
3003ad33:	stos   DWORD PTR es:[edi],eax
3003ad34:	stos   DWORD PTR es:[edi],eax
3003ad35:	stos   DWORD PTR es:[edi],eax
3003ad36:	stos   DWORD PTR es:[edi],eax
3003ad37:	mov    ax,WORD PTR [ebp-0x24]
3003ad3b:	mov    WORD PTR [ebp-0x14],ax
3003ad3f:	mov    ax,WORD PTR [ebp-0x22]
3003ad43:	mov    WORD PTR [ebp-0x12],ax
3003ad47:	mov    ax,WORD PTR [ebp-0x1e]
3003ad4b:	mov    WORD PTR [ebp-0xe],ax
3003ad4f:	xor    eax,eax
3003ad51:	mov    DWORD PTR [ebp-0xc],eax
3003ad54:	mov    WORD PTR [ebp-0x8],ax
3003ad58:	lea    eax,[ebp-0x3c]
3003ad5b:	push   eax
3003ad5c:	lea    eax,[ebp-0x14]
3003ad5f:	push   eax
3003ad60:	call   0x3003ab15
3003ad65:	mov    ecx,DWORD PTR [ebx+0x4]
3003ad68:	neg    eax
3003ad6a:	sbb    eax,eax
3003ad6c:	inc    eax
3003ad6d:	mov    DWORD PTR [ebp-0x34],eax
3003ad70:	xor    eax,eax
3003ad72:	lea    edi,[ebp-0x14]
3003ad75:	stos   DWORD PTR es:[edi],eax
3003ad76:	stos   DWORD PTR es:[edi],eax
3003ad77:	stos   DWORD PTR es:[edi],eax
3003ad78:	stos   DWORD PTR es:[edi],eax
3003ad79:	mov    ax,WORD PTR [ecx+0xd0]
3003ad80:	mov    WORD PTR [ebp-0x14],ax
3003ad84:	mov    ax,WORD PTR [ecx+0xd2]
3003ad8b:	mov    WORD PTR [ebp-0x12],ax
3003ad8f:	mov    ax,WORD PTR [ecx+0xd4]
3003ad96:	mov    WORD PTR [ebp-0xe],ax
3003ad9a:	xor    eax,eax
3003ad9c:	mov    DWORD PTR [ebp-0xc],eax
3003ad9f:	mov    WORD PTR [ebp-0x8],ax
3003ada3:	lea    eax,[ebp-0x30]
3003ada6:	push   eax
3003ada7:	lea    eax,[ebp-0x14]
3003adaa:	push   eax
3003adab:	call   0x3003ab15
3003adb0:	neg    eax
3003adb2:	sbb    eax,eax
3003adb4:	inc    eax
3003adb5:	mov    DWORD PTR [ebp-0x28],eax
3003adb8:	lea    eax,[ebp-0x3c]
3003adbb:	push   eax
3003adbc:	lea    eax,[ebp-0x10]
3003adbf:	push   eax
3003adc0:	lea    ecx,[ebp-0x30]
3003adc3:	call   0x3003aa61
3003adc8:	lea    ecx,[ebp-0x10]
3003adcb:	call   0x3003afc0
3003add0:	call   0x3001eaa1
3003add5:	pop    edi
3003add6:	test   eax,eax
3003add8:	jns    0x3003ade2
3003adda:	test   esi,esi
3003addc:	je     0x3003ade0
3003adde:	mov    DWORD PTR [esi],eax
3003ade0:	xor    eax,eax
3003ade2:	mov    ecx,DWORD PTR [ebx+0x4]
3003ade5:	cmp    DWORD PTR [ecx+0xc0],0x4
3003adec:	jl     0x3003adf8
3003adee:	cmp    eax,DWORD PTR [ecx+0xd8]
3003adf4:	jle    0x3003adf8
3003adf6:	xor    eax,eax
3003adf8:	mov    ecx,DWORD PTR [ebp-0x4]
3003adfb:	pop    esi
3003adfc:	xor    ecx,ebp
3003adfe:	pop    ebx
3003adff:	call   0x3000115c
3003ae04:	leave  
3003ae05:	ret    0x4
3003ae08:	mov    eax,DWORD PTR [ecx+0x4]
3003ae0b:	mov    eax,DWORD PTR [eax+0xc0]
3003ae11:	ret    
3003ae12:	mov    eax,DWORD PTR [ecx+0x4]
3003ae15:	mov    eax,DWORD PTR [eax+0xc8]
3003ae1b:	ret    
3003ae1c:	push   0x4
3003ae1e:	mov    eax,0x3003dab9
3003ae23:	call   0x3000116a
3003ae28:	and    DWORD PTR [ebp-0x10],0x0
3003ae2c:	cmp    BYTE PTR [ecx],0x0
3003ae2f:	jne    0x3003ae4c
3003ae31:	mov    ecx,DWORD PTR [ecx+0x4]
3003ae34:	mov    al,BYTE PTR [ecx+0xdc]
3003ae3a:	test   al,al
3003ae3c:	je     0x3003ae4c
3003ae3e:	lea    eax,[ecx+0x4]
3003ae41:	mov    ecx,DWORD PTR [ebp+0x8]
3003ae44:	push   eax
3003ae45:	call   0x3000437e
3003ae4a:	jmp    0x3003ae59
3003ae4c:	mov    ecx,DWORD PTR [ebp+0x8]
3003ae4f:	push   0x3004306c
3003ae54:	call   0x30004256
3003ae59:	and    DWORD PTR [ebp-0x4],0x0
3003ae5d:	mov    DWORD PTR [ebp-0x10],0x1
3003ae64:	mov    eax,DWORD PTR [ebp+0x8]
3003ae67:	call   0x3000119d
3003ae6c:	ret    0x4
3003ae6f:	push   0x4
3003ae71:	mov    eax,0x3003dab9
3003ae76:	call   0x3000116a
3003ae7b:	and    DWORD PTR [ebp-0x10],0x0
3003ae7f:	cmp    BYTE PTR [ecx],0x0
3003ae82:	jne    0x3003aeab
3003ae84:	mov    edx,DWORD PTR [ecx+0x4]
3003ae87:	mov    al,BYTE PTR [edx+0xdc]
3003ae8d:	test   al,al
3003ae8f:	je     0x3003aeab
3003ae91:	xor    eax,eax
3003ae93:	mov    WORD PTR [edx+0x82],ax
3003ae9a:	mov    eax,DWORD PTR [ecx+0x4]
3003ae9d:	mov    ecx,DWORD PTR [ebp+0x8]
3003aea0:	add    eax,0x34
3003aea3:	push   eax
3003aea4:	call   0x3000437e
3003aea9:	jmp    0x3003aeb8
3003aeab:	mov    ecx,DWORD PTR [ebp+0x8]
3003aeae:	push   0x3004306c
3003aeb3:	call   0x30004256
3003aeb8:	and    DWORD PTR [ebp-0x4],0x0
3003aebc:	mov    DWORD PTR [ebp-0x10],0x1
3003aec3:	mov    eax,DWORD PTR [ebp+0x8]
3003aec6:	call   0x3000119d
3003aecb:	ret    0x4
3003aece:	push   0x1c
3003aed0:	mov    eax,0x3003db18
3003aed5:	call   0x300045c8
3003aeda:	mov    edi,DWORD PTR [ebp+0xc]
3003aedd:	mov    edx,DWORD PTR [ebp+0x10]
3003aee0:	mov    esi,DWORD PTR [ebp+0x8]
3003aee3:	xor    ebx,ebx
3003aee5:	mov    eax,ebx
3003aee7:	mov    ecx,0x30029e70
3003aeec:	cmp    esi,DWORD PTR [ecx]
3003aeee:	jne    0x3003aef2
3003aef0:	mov    eax,ecx
3003aef2:	add    ecx,0x20
3003aef5:	cmp    ecx,0x3002a090
3003aefb:	jl     0x3003aeec
3003aefd:	mov    DWORD PTR [ebp-0x24],eax
3003af00:	test   eax,eax
3003af02:	je     0x3003afb6
3003af08:	test   edx,edx
3003af0a:	je     0x3003af11
3003af0c:	mov    eax,DWORD PTR [eax+0x14]
3003af0f:	mov    DWORD PTR [edx],eax
3003af11:	push   0x3004306c
3003af16:	lea    ecx,[ebp-0x28]
3003af19:	call   0x30004256
3003af1e:	mov    DWORD PTR [ebp-0x4],0x1
3003af25:	push   DWORD PTR [edi]
3003af27:	lea    eax,[ebp-0x28]
3003af2a:	push   0x3002a310
3003af2f:	push   eax
3003af30:	call   0x30005153
3003af35:	mov    esi,DWORD PTR [ebp-0x28]
3003af38:	xor    eax,eax
3003af3a:	mov    DWORD PTR [ebp-0x20],ebx
3003af3d:	lea    edi,[ebp-0x1c]
3003af40:	stos   DWORD PTR es:[edi],eax
3003af41:	stos   DWORD PTR es:[edi],eax
3003af42:	add    esp,0xc
3003af45:	stos   DWORD PTR es:[edi],eax
3003af46:	lea    eax,[ebp-0x20]
3003af49:	push   eax
3003af4a:	push   esi
3003af4b:	call   DWORD PTR ds:0x30045498
3003af51:	test   eax,eax
3003af53:	js     0x3003af91
3003af55:	mov    eax,DWORD PTR [ebp-0x24]
3003af58:	mov    edx,DWORD PTR [eax+0x18]
3003af5b:	mov    eax,DWORD PTR [eax+0x1c]
3003af5e:	mov    DWORD PTR [ebp-0x24],eax
3003af61:	cmp    edx,eax
3003af63:	jge    0x3003afaa
3003af65:	mov    ecx,edx
3003af67:	imul   ecx,ecx,0x2c
3003af6a:	add    ecx,0x300290cc
3003af70:	mov    edi,ebx
3003af72:	mov    eax,DWORD PTR [ecx+edi*4]
3003af75:	lea    esi,[ebp-0x20]
3003af78:	cmp    eax,DWORD PTR [esi+edi*4]
3003af7b:	mov    esi,DWORD PTR [ebp-0x28]
3003af7e:	jne    0x3003afa1
3003af80:	inc    edi
3003af81:	cmp    edi,0x4
3003af84:	jne    0x3003af72
3003af86:	mov    ebx,edx
3003af88:	imul   ebx,ebx,0x2c
3003af8b:	add    ebx,0x300290b0
3003af91:	or     DWORD PTR [ebp-0x4],0xffffffff
3003af95:	lea    ecx,[esi-0x10]
3003af98:	call   0x30004017
3003af9d:	mov    eax,ebx
3003af9f:	jmp    0x3003afb8
3003afa1:	inc    edx
3003afa2:	add    ecx,0x2c
3003afa5:	cmp    edx,DWORD PTR [ebp-0x24]
3003afa8:	jl     0x3003af70
3003afaa:	or     DWORD PTR [ebp-0x4],0xffffffff
3003afae:	lea    ecx,[esi-0x10]
3003afb1:	call   0x30004017
3003afb6:	xor    eax,eax
3003afb8:	call   0x300045fe
3003afbd:	ret    0xc
3003afc0:	push   ebp
3003afc1:	mov    ebp,esp
3003afc3:	push   ecx
3003afc4:	push   ecx
3003afc5:	fldz   
3003afc7:	fcomp  QWORD PTR [ecx]
3003afc9:	fnstsw ax
3003afcb:	test   ah,0x41
3003afce:	jne    0x3003afd8
3003afd0:	fld    QWORD PTR ds:0x3002a320
3003afd6:	jmp    0x3003afde
3003afd8:	fld    QWORD PTR ds:0x3003aff8
3003afde:	fadd   QWORD PTR [ecx]
3003afe0:	call   0x300095d0
3003afe5:	mov    DWORD PTR [ebp-0x8],eax
3003afe8:	mov    DWORD PTR [ebp-0x4],edx
3003afeb:	fild   QWORD PTR [ebp-0x8]
3003afee:	fstp   QWORD PTR [ebp-0x8]
3003aff1:	fld    QWORD PTR [ebp-0x8]
3003aff4:	leave  
3003aff5:	ret    
3003aff6:	nop
3003aff7:	nop
3003aff8:	sub    DWORD PTR [ecx-0x32],edx
3003affb:	mov    al,ds:0x3ed845c8
3003b000:	mov    eax,DWORD PTR [ecx+0x4]
3003b003:	mov    al,BYTE PTR [eax+0xdd]
3003b009:	ret    
3003b00a:	mov    eax,DWORD PTR [ecx+0x4]
3003b00d:	mov    al,BYTE PTR [eax+0xdc]
3003b013:	ret    
3003b014:	mov    eax,DWORD PTR [ecx+0x4]
3003b017:	mov    al,BYTE PTR [eax+0xde]
3003b01d:	ret    
3003b01e:	push   ebp
3003b01f:	mov    ebp,esp
3003b021:	push   esi
3003b022:	mov    esi,ecx
3003b024:	mov    cx,WORD PTR [ebp+0x8]
3003b028:	mov    edx,0xffff
3003b02d:	push   edi
3003b02e:	cmp    cx,dx
3003b031:	jne    0x3003b053
3003b033:	mov    eax,DWORD PTR [esi+0x4]
3003b036:	mov    WORD PTR [eax+0xd0],dx
3003b03d:	mov    eax,DWORD PTR [esi+0x4]
3003b040:	mov    WORD PTR [eax+0xd2],dx
3003b047:	mov    eax,DWORD PTR [esi+0x4]
3003b04a:	mov    WORD PTR [eax+0xd4],dx
3003b051:	jmp    0x3003b0b0
3003b053:	mov    eax,0x7d0
3003b058:	cmp    cx,ax
3003b05b:	jb     0x3003b0bf
3003b05d:	mov    dx,WORD PTR [ebp+0xc]
3003b061:	xor    eax,eax
3003b063:	inc    eax
3003b064:	cmp    dx,ax
3003b067:	jb     0x3003b0bf
3003b069:	mov    di,WORD PTR [ebp+0x10]
3003b06d:	cmp    di,ax
3003b070:	jb     0x3003b0bf
3003b072:	mov    eax,DWORD PTR [esi+0x4]
3003b075:	push   0x0
3003b077:	mov    WORD PTR [eax+0xd0],cx
3003b07e:	mov    eax,DWORD PTR [esi+0x4]
3003b081:	mov    ecx,esi
3003b083:	mov    WORD PTR [eax+0xd2],dx
3003b08a:	mov    eax,DWORD PTR [esi+0x4]
3003b08d:	mov    WORD PTR [eax+0xd4],di
3003b094:	mov    eax,DWORD PTR [esi+0x4]
3003b097:	mov    DWORD PTR [eax+0xd8],0x7fffffff
3003b0a1:	call   0x3003acd2
3003b0a6:	mov    ecx,DWORD PTR [esi+0x4]
3003b0a9:	inc    eax
3003b0aa:	mov    DWORD PTR [ecx+0xd8],eax
3003b0b0:	cmp    BYTE PTR [ebp+0x14],0x0
3003b0b4:	je     0x3003b0bf
3003b0b6:	mov    eax,DWORD PTR [esi+0x4]
3003b0b9:	inc    DWORD PTR [eax+0xcc]
3003b0bf:	pop    edi
3003b0c0:	pop    esi
3003b0c1:	pop    ebp
3003b0c2:	ret    0x10
3003b0c5:	push   0x20
3003b0c7:	mov    eax,0x3003dcd8
3003b0cc:	call   0x300045c8
3003b0d1:	mov    eax,DWORD PTR [ebp+0x10]
3003b0d4:	mov    esi,DWORD PTR [ebp+0xc]
3003b0d7:	mov    DWORD PTR [ebp-0x2c],eax
3003b0da:	test   eax,eax
3003b0dc:	je     0x3003b0e1
3003b0de:	or     DWORD PTR [eax],0xffffffff
3003b0e1:	push   0x3004306c
3003b0e6:	lea    ecx,[ebp-0x24]
3003b0e9:	call   0x30004256
3003b0ee:	mov    DWORD PTR [ebp-0x4],0x1
3003b0f5:	push   DWORD PTR [esi]
3003b0f7:	lea    eax,[ebp-0x24]
3003b0fa:	push   0x3002a310
3003b0ff:	push   eax
3003b100:	call   0x30005153
3003b105:	mov    esi,DWORD PTR [ebp-0x24]
3003b108:	add    esp,0xc
3003b10b:	lea    eax,[ebp-0x20]
3003b10e:	push   eax
3003b10f:	push   esi
3003b110:	call   DWORD PTR ds:0x30045498
3003b116:	test   eax,eax
3003b118:	js     0x3003b155
3003b11a:	push   DWORD PTR [ebp+0x8]
3003b11d:	call   0x3003b20e
3003b122:	test   eax,eax
3003b124:	je     0x3003b155
3003b126:	mov    edi,DWORD PTR [eax+0x18]
3003b129:	mov    eax,DWORD PTR [eax+0x1c]
3003b12c:	mov    DWORD PTR [ebp-0x28],eax
3003b12f:	cmp    edi,eax
3003b131:	jge    0x3003b155
3003b133:	mov    ebx,edi
3003b135:	imul   ebx,ebx,0x2c
3003b138:	add    ebx,0x300290cc
3003b13e:	push   ebx
3003b13f:	lea    eax,[ebp-0x20]
3003b142:	push   eax
3003b143:	call   0x30004c93
3003b148:	test   al,al
3003b14a:	jne    0x3003b16d
3003b14c:	inc    edi
3003b14d:	add    ebx,0x2c
3003b150:	cmp    edi,DWORD PTR [ebp-0x28]
3003b153:	jl     0x3003b13e
3003b155:	xor    edi,edi
3003b157:	or     DWORD PTR [ebp-0x4],0xffffffff
3003b15b:	lea    ecx,[esi-0x10]
3003b15e:	call   0x30004017
3003b163:	mov    eax,edi
3003b165:	call   0x300045fe
3003b16a:	ret    0xc
3003b16d:	mov    eax,DWORD PTR [ebp-0x2c]
3003b170:	test   eax,eax
3003b172:	je     0x3003b176
3003b174:	mov    DWORD PTR [eax],edi
3003b176:	imul   edi,edi,0x2c
3003b179:	add    edi,0x300290b0
3003b17f:	jmp    0x3003b157
3003b181:	push   0xc
3003b183:	mov    eax,0x3003dd3c
3003b188:	call   0x3000116a
3003b18d:	push   DWORD PTR [ebp+0x8]
3003b190:	call   0x3001aceb
3003b195:	mov    esi,eax
3003b197:	mov    DWORD PTR [ebp-0x18],esi
3003b19a:	and    DWORD PTR [ebp-0x4],0x0
3003b19e:	mov    ecx,esi
3003b1a0:	call   0x30018262
3003b1a5:	test   al,al
3003b1a7:	je     0x3003b1f5
3003b1a9:	mov    ecx,esi
3003b1ab:	call   0x3003b000
3003b1b0:	test   al,al
3003b1b2:	je     0x3003b1f5
3003b1b4:	mov    ecx,esi
3003b1b6:	call   0x3003b00a
3003b1bb:	test   al,al
3003b1bd:	je     0x3003b1f5
3003b1bf:	lea    eax,[ebp-0x10]
3003b1c2:	push   eax
3003b1c3:	mov    ecx,esi
3003b1c5:	call   0x3003ae6f
3003b1ca:	mov    BYTE PTR [ebp-0x4],0x1
3003b1ce:	lea    ecx,[ebp-0x14]
3003b1d1:	push   ecx
3003b1d2:	push   eax
3003b1d3:	push   DWORD PTR [ebp+0x8]
3003b1d6:	call   0x3003b0c5
3003b1db:	mov    esi,eax
3003b1dd:	mov    BYTE PTR [ebp-0x4],0x0
3003b1e1:	mov    ecx,DWORD PTR [ebp-0x10]
3003b1e4:	add    ecx,0xfffffff0
3003b1e7:	call   0x30004017
3003b1ec:	test   esi,esi
3003b1ee:	je     0x3003b1f5
3003b1f0:	mov    esi,DWORD PTR [ebp-0x14]
3003b1f3:	jmp    0x3003b1f8
3003b1f5:	or     esi,0xffffffff
3003b1f8:	or     DWORD PTR [ebp-0x4],0xffffffff
3003b1fc:	lea    ecx,[ebp-0x18]
3003b1ff:	call   0x30019a8f
3003b204:	mov    eax,esi
3003b206:	call   0x3000119d
3003b20b:	ret    0x4
3003b20e:	push   ebp
3003b20f:	mov    ebp,esp
3003b211:	mov    edx,DWORD PTR [ebp+0x8]
3003b214:	push   esi
3003b215:	mov    esi,0x30029e70
3003b21a:	xor    eax,eax
3003b21c:	mov    ecx,esi
3003b21e:	cmp    edx,DWORD PTR [ecx]
3003b220:	je     0x3003b232
3003b222:	add    ecx,0x20
3003b225:	inc    eax
3003b226:	cmp    ecx,0x3002a090
3003b22c:	jl     0x3003b21e
3003b22e:	xor    eax,eax
3003b230:	jmp    0x3003b237
3003b232:	shl    eax,0x5
3003b235:	add    eax,esi
3003b237:	pop    esi
3003b238:	pop    ebp
3003b239:	ret    0x4
3003b23c:	push   0x4
3003b23e:	mov    eax,0x3003dab9
3003b243:	call   0x3000116a
3003b248:	and    DWORD PTR [ebp-0x4],0x0
3003b24c:	and    DWORD PTR [ebp-0x10],0x0
3003b250:	mov    ecx,DWORD PTR [ebp+0x8]
3003b253:	push   0x3004306c
3003b258:	call   0x30004256
3003b25d:	and    DWORD PTR [ebp-0x4],0x0
3003b261:	push   DWORD PTR [ebp+0xc]
3003b264:	mov    DWORD PTR [ebp-0x10],0x1
3003b26b:	push   0x3003b290
3003b270:	push   0x3003b318
3003b275:	push   DWORD PTR [ebp+0x8]
3003b278:	call   0x30005153
3003b27d:	mov    eax,DWORD PTR [ebp+0x8]
3003b280:	add    esp,0x10
3003b283:	call   0x3000119d
3003b288:	ret    0x8
3003b28b:	nop
3003b28c:	nop
3003b28d:	nop
3003b28e:	nop
3003b28f:	nop
3003b290:	push   ebx
3003b291:	add    BYTE PTR [edi+0x0],ch
3003b294:	data16 add BYTE PTR [eax+eax*1+0x77],dh
3003b299:	add    BYTE PTR [ecx+0x0],ah
3003b29c:	jb     0x3003b29e
3003b29e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
3003b2a3:	add    BYTE PTR [ecx+0x0],ch
3003b2a6:	arpl   WORD PTR [eax],ax
3003b2a8:	jb     0x3003b2aa
3003b2aa:	outs   dx,DWORD PTR ds:[esi]
3003b2ab:	add    BYTE PTR [ebx+0x0],dh
3003b2ae:	outs   dx,DWORD PTR ds:[esi]
3003b2af:	add    BYTE PTR [esi+0x0],ah
3003b2b2:	je     0x3003b2b4
3003b2b4:	pop    esp
3003b2b5:	add    BYTE PTR [eax+eax*1+0x44],al
3003b2b9:	add    BYTE PTR [ebx+0x0],al
3003b2bc:	outs   dx,DWORD PTR ds:[esi]
3003b2bd:	add    BYTE PTR [esi+0x0],ch
3003b2c0:	data16 add BYTE PTR [ecx+0x0],ch
3003b2c4:	add    BYTE PTR [si+0x0],bl
3003b2c8:	jnp    0x3003b2ca
3003b2ca:	inc    ecx
3003b2cb:	add    BYTE PTR [edx],dh
3003b2cd:	add    BYTE PTR [ebx],dh
3003b2cf:	add    BYTE PTR [esi],dh
3003b2d1:	add    BYTE PTR [edi],dh
3003b2d3:	add    BYTE PTR [esi],dh
3003b2d5:	add    BYTE PTR [ecx],dh
3003b2d7:	add    BYTE PTR [edi],dh
3003b2d9:	add    BYTE PTR ds:0x46003600,ch
3003b2df:	add    BYTE PTR [edx],dh
3003b2e1:	add    BYTE PTR [ecx],dh
3003b2e3:	add    BYTE PTR ds:0x45003400,ch
3003b2e9:	add    BYTE PTR [ebp+0x0],al
3003b2ec:	cmp    DWORD PTR [eax],eax
3003b2ee:	sub    eax,0x37004200
3003b2f3:	add    BYTE PTR [edx+0x0],al
3003b2f6:	inc    ebp
3003b2f7:	add    BYTE PTR ds:0x43003700,ch
3003b2fd:	add    BYTE PTR [ebx],dh
3003b2ff:	add    BYTE PTR ds:0x45003900,dh
3003b305:	add    BYTE PTR [eax],dh
3003b307:	add    BYTE PTR [ebp+0x0],al
3003b30a:	cmp    BYTE PTR [eax],al
3003b30c:	aaa    
3003b30d:	add    BYTE PTR [ecx+0x0],al
3003b310:	inc    ecx
3003b311:	add    BYTE PTR [ebp+0x0],bh
3003b314:	add    BYTE PTR [eax],al
3003b316:	add    BYTE PTR [eax],al
3003b318:	and    eax,0x5c007300
3003b31d:	add    BYTE PTR ds:0x6400,ah
3003b323:	add    BYTE PTR [edx+0x8],ch
3003b326:	mov    eax,0x3003dd9c
3003b32b:	call   0x3000116a
3003b330:	and    DWORD PTR [ebp-0x4],0x0
3003b334:	push   0xfffffffe
3003b336:	pop    edi
3003b337:	push   DWORD PTR [ebp+0x8]
3003b33a:	lea    eax,[ebp-0x14]
3003b33d:	push   eax
3003b33e:	mov    DWORD PTR [ebp-0x10],edi
3003b341:	call   0x3003b23c
3003b346:	mov    BYTE PTR [ebp-0x4],0x1
3003b34a:	lea    ecx,[ebp+0x8]
3003b34d:	push   ecx
3003b34e:	push   0x20019
3003b353:	push   0x0
3003b355:	push   DWORD PTR [eax]
3003b357:	push   DWORD PTR [ebp+0xc]
3003b35a:	call   DWORD PTR ds:0x30045008
3003b360:	mov    ebx,eax
3003b362:	neg    ebx
3003b364:	sbb    bl,bl
3003b366:	mov    BYTE PTR [ebp-0x4],0x0
3003b36a:	mov    ecx,DWORD PTR [ebp-0x14]
3003b36d:	add    ecx,0xfffffff0
3003b370:	call   0x30004017
3003b375:	inc    bl
3003b377:	je     0x3003b3b2
3003b379:	and    DWORD PTR [ebp-0x14],0x0
3003b37d:	lea    eax,[ebp+0xc]
3003b380:	push   eax
3003b381:	lea    eax,[ebp-0x10]
3003b384:	push   eax
3003b385:	lea    eax,[ebp-0x14]
3003b388:	push   eax
3003b389:	push   0x0
3003b38b:	push   DWORD PTR [ebp+0x10]
3003b38e:	mov    DWORD PTR [ebp+0xc],0x4
3003b395:	push   DWORD PTR [ebp+0x8]
3003b398:	call   DWORD PTR ds:0x3004500c
3003b39e:	push   DWORD PTR [ebp+0x8]
3003b3a1:	mov    esi,eax
3003b3a3:	call   DWORD PTR ds:0x30045004
3003b3a9:	test   esi,esi
3003b3ab:	je     0x3003b3b2
3003b3ad:	mov    DWORD PTR [ebp-0x10],edi
3003b3b0:	jmp    0x3003b3b5
3003b3b2:	mov    edi,DWORD PTR [ebp-0x10]
3003b3b5:	or     DWORD PTR [ebp-0x4],0xffffffff
3003b3b9:	mov    ecx,DWORD PTR [ebp+0x10]
3003b3bc:	add    ecx,0xfffffff0
3003b3bf:	call   0x30004017
3003b3c4:	mov    eax,edi
3003b3c6:	call   0x3000119d
3003b3cb:	ret    0xc
3003b3ce:	push   0x10
3003b3d0:	mov    eax,0x3003de14
3003b3d5:	call   0x3000116a
3003b3da:	mov    edi,ecx
3003b3dc:	push   DWORD PTR [ebp+0x8]
3003b3df:	lea    eax,[ebp-0x14]
3003b3e2:	push   eax
3003b3e3:	call   0x3003b23c
3003b3e8:	and    DWORD PTR [ebp-0x4],0x0
3003b3ec:	push   ecx
3003b3ed:	mov    ecx,esp
3003b3ef:	mov    DWORD PTR [ebp-0x10],esp
3003b3f2:	push   0x3004306c
3003b3f7:	mov    DWORD PTR [ebp-0x18],ecx
3003b3fa:	call   0x30004256
3003b3ff:	mov    BYTE PTR [ebp-0x4],0x2
3003b403:	push   0x80000001
3003b408:	push   DWORD PTR [ebp+0x8]
3003b40b:	mov    BYTE PTR [ebp-0x4],0x0
3003b40f:	mov    ecx,edi
3003b411:	call   0x3003b324
3003b416:	push   ecx
3003b417:	mov    ecx,esp
3003b419:	mov    DWORD PTR [ebp-0x18],esp
3003b41c:	push   0x3002a328
3003b421:	mov    ebx,eax
3003b423:	call   0x3000437e
3003b428:	mov    BYTE PTR [ebp-0x4],0x3
3003b42c:	push   0x80000001
3003b431:	push   DWORD PTR [ebp+0x8]
3003b434:	mov    BYTE PTR [ebp-0x4],0x0
3003b438:	mov    ecx,edi
3003b43a:	call   0x3003b324
3003b43f:	push   ecx
3003b440:	mov    ecx,esp
3003b442:	mov    DWORD PTR [ebp-0x18],esp
3003b445:	push   0x3004306c
3003b44a:	mov    DWORD PTR [ebp-0x10],eax
3003b44d:	mov    DWORD PTR [ebp-0x1c],ecx
3003b450:	call   0x30004256
3003b455:	mov    BYTE PTR [ebp-0x4],0x5
3003b459:	push   0x80000002
3003b45e:	push   DWORD PTR [ebp+0x8]
3003b461:	mov    BYTE PTR [ebp-0x4],0x0
3003b465:	mov    ecx,edi
3003b467:	call   0x3003b324
3003b46c:	cmp    ebx,0xfffffffe
3003b46f:	je     0x3003b476
3003b471:	cmp    DWORD PTR [ebp-0x10],eax
3003b474:	je     0x3003b478
3003b476:	mov    ebx,eax
3003b478:	or     DWORD PTR [ebp-0x4],0xffffffff
3003b47c:	mov    ecx,DWORD PTR [ebp-0x14]
3003b47f:	add    ecx,0xfffffff0
3003b482:	call   0x30004017
3003b487:	mov    eax,ebx
3003b489:	call   0x3000119d
3003b48e:	ret    0x4
3003b491:	push   0x0
3003b493:	mov    eax,0x3003de74
3003b498:	call   0x3000116a
3003b49d:	xor    ebx,ebx
3003b49f:	mov    DWORD PTR [ebp-0x4],ebx
3003b4a2:	mov    esi,DWORD PTR [ebp+0xc]
3003b4a5:	cmp    esi,0xffffffff
3003b4a8:	jge    0x3003b4ad
3003b4aa:	or     esi,0xffffffff
3003b4ad:	push   DWORD PTR [ebp+0x8]
3003b4b0:	lea    eax,[ebp+0x8]
3003b4b3:	push   eax
3003b4b4:	call   0x3003b23c
3003b4b9:	mov    BYTE PTR [ebp-0x4],0x1
3003b4bd:	push   ebx
3003b4be:	lea    ecx,[ebp+0xc]
3003b4c1:	push   ecx
3003b4c2:	push   ebx
3003b4c3:	push   0x20006
3003b4c8:	push   ebx
3003b4c9:	push   ebx
3003b4ca:	push   ebx
3003b4cb:	push   DWORD PTR [eax]
3003b4cd:	xor    eax,eax
3003b4cf:	cmp    BYTE PTR [ebp+0x10],al
3003b4d2:	setne  al
3003b4d5:	add    eax,0x80000001
3003b4da:	push   eax
3003b4db:	call   DWORD PTR ds:0x3004507c
3003b4e1:	mov    ebx,eax
3003b4e3:	neg    ebx
3003b4e5:	sbb    bl,bl
3003b4e7:	mov    BYTE PTR [ebp-0x4],0x0
3003b4eb:	mov    ecx,DWORD PTR [ebp+0x8]
3003b4ee:	add    ecx,0xfffffff0
3003b4f1:	call   0x30004017
3003b4f6:	inc    bl
3003b4f8:	je     0x3003b51c
3003b4fa:	push   0x4
3003b4fc:	lea    eax,[ebp+0x10]
3003b4ff:	push   eax
3003b500:	push   0x4
3003b502:	push   0x0
3003b504:	push   DWORD PTR [ebp+0x14]
3003b507:	mov    DWORD PTR [ebp+0x10],esi
3003b50a:	push   DWORD PTR [ebp+0xc]
3003b50d:	call   DWORD PTR ds:0x30045010
3003b513:	push   DWORD PTR [ebp+0xc]
3003b516:	call   DWORD PTR ds:0x30045004
3003b51c:	or     DWORD PTR [ebp-0x4],0xffffffff
3003b520:	mov    ecx,DWORD PTR [ebp+0x14]
3003b523:	lea    ecx,[ecx-0x10]
3003b526:	call   0x30004017
3003b52b:	call   0x3000119d
3003b530:	ret    0x10
3003b533:	push   0x4
3003b535:	mov    eax,0x3003dedc
3003b53a:	call   0x3000116a
3003b53f:	mov    edi,ecx
3003b541:	mov    esi,DWORD PTR [ebp+0xc]
3003b544:	or     ebx,0xffffffff
3003b547:	cmp    esi,ebx
3003b549:	jge    0x3003b54d
3003b54b:	mov    esi,ebx
3003b54d:	push   ecx
3003b54e:	mov    ecx,esp
3003b550:	mov    DWORD PTR [ebp+0xc],esp
3003b553:	push   0x3004306c
3003b558:	mov    DWORD PTR [ebp-0x10],ecx
3003b55b:	call   0x30004256
3003b560:	mov    DWORD PTR [ebp-0x4],0x1
3003b567:	push   DWORD PTR [ebp+0x10]
3003b56a:	push   esi
3003b56b:	push   DWORD PTR [ebp+0x8]
3003b56e:	mov    DWORD PTR [ebp-0x4],ebx
3003b571:	mov    ecx,edi
3003b573:	call   0x3003b491
3003b578:	cmp    BYTE PTR [ebp+0x10],0x0
3003b57c:	jne    0x3003b5d3
3003b57e:	push   ecx
3003b57f:	mov    ecx,esp
3003b581:	mov    DWORD PTR [ebp+0x10],esp
3003b584:	push   0x3004306c
3003b589:	mov    DWORD PTR [ebp+0xc],ecx
3003b58c:	call   0x30004256
3003b591:	mov    DWORD PTR [ebp-0x4],0x3
3003b598:	push   0x80000002
3003b59d:	push   DWORD PTR [ebp+0x8]
3003b5a0:	mov    DWORD PTR [ebp-0x4],ebx
3003b5a3:	mov    ecx,edi
3003b5a5:	call   0x3003b324
3003b5aa:	push   ecx
3003b5ab:	mov    ecx,esp
3003b5ad:	mov    DWORD PTR [ebp+0x10],esp
3003b5b0:	push   0x3002a328
3003b5b5:	mov    esi,eax
3003b5b7:	call   0x3000437e
3003b5bc:	mov    DWORD PTR [ebp-0x4],0x4
3003b5c3:	push   0x0
3003b5c5:	push   esi
3003b5c6:	push   DWORD PTR [ebp+0x8]
3003b5c9:	mov    DWORD PTR [ebp-0x4],ebx
3003b5cc:	mov    ecx,edi
3003b5ce:	call   0x3003b491
3003b5d3:	call   0x3000119d
3003b5d8:	ret    0xc
3003b5db:	push   0x4
3003b5dd:	mov    eax,0x3003df88
3003b5e2:	call   0x3000116a
3003b5e7:	cmp    BYTE PTR ds:0x300448d5,0x0
3003b5ee:	jne    0x3003b69a
3003b5f4:	push   0x3004306c
3003b5f9:	lea    ecx,[ebp-0x10]
3003b5fc:	call   0x30004256
3003b601:	mov    DWORD PTR [ebp-0x4],0x1
3003b608:	call   DWORD PTR ds:0x30045218
3003b60e:	push   eax
3003b60f:	lea    eax,[ebp-0x10]
3003b612:	push   0x3003b6a8
3003b617:	push   eax
3003b618:	call   0x30005153
3003b61d:	mov    esi,DWORD PTR [ebp-0x10]
3003b620:	add    esp,0xc
3003b623:	xor    ebx,ebx
3003b625:	push   esi
3003b626:	push   ebx
3003b627:	push   0x80000000
3003b62c:	call   DWORD PTR ds:0x300450c0
3003b632:	mov    edi,eax
3003b634:	test   edi,edi
3003b636:	je     0x3003b63f
3003b638:	mov    ebx,0x3003b6c8
3003b63d:	jmp    0x3003b666
3003b63f:	push   ebx
3003b640:	push   0x80
3003b645:	push   0x3
3003b647:	push   ebx
3003b648:	push   0x3
3003b64a:	push   0xc0000000
3003b64f:	push   0x3003b6d0
3003b654:	call   DWORD PTR ds:0x30045220
3003b65a:	mov    edi,eax
3003b65c:	cmp    edi,0xffffffff
3003b65f:	je     0x3003b687
3003b661:	mov    ebx,0x3003b6f4
3003b666:	push   ebx
3003b667:	call   0x300042e4
3003b66c:	pop    ecx
3003b66d:	push   eax
3003b66e:	push   ebx
3003b66f:	mov    ecx,0x30043b60
3003b674:	call   0x3000416f
3003b679:	push   edi
3003b67a:	mov    BYTE PTR ds:0x300448d4,0x1
3003b681:	call   DWORD PTR ds:0x300451d0
3003b687:	mov    BYTE PTR ds:0x300448d5,0x1
3003b68e:	or     DWORD PTR [ebp-0x4],0xffffffff
3003b692:	lea    ecx,[esi-0x10]
3003b695:	call   0x30004017
3003b69a:	mov    al,ds:0x300448d4
3003b69f:	call   0x3000119d
3003b6a4:	ret    
3003b6a5:	nop
3003b6a6:	nop
3003b6a7:	nop
3003b6a8:	inc    ecx
3003b6a9:	add    BYTE PTR [eax+0x0],dh
3003b6ac:	jo     0x3003b6ae
3003b6ae:	push   esi
3003b6af:	add    BYTE PTR [esi+0x0],dl
3003b6b2:	imul   eax,DWORD PTR [eax],0x740072
3003b6b8:	jne    0x3003b6ba
3003b6ba:	popa   
3003b6bb:	add    BYTE PTR [eax+eax*1+0x2d],ch
3003b6bf:	add    BYTE PTR ds:0x6400,ah
3003b6c5:	add    BYTE PTR [eax+0x2e003590],dl
3003b6cb:	add    BYTE PTR [eax],dh
3003b6cd:	add    BYTE PTR [eax],al
3003b6cf:	add    BYTE PTR [eax+eax*1+0x5c],bl
3003b6d3:	add    BYTE PTR [esi],ch
3003b6d5:	add    BYTE PTR [eax+eax*1+0x47],bl
3003b6d9:	add    BYTE PTR [eax+eax*1+0x4f],cl
3003b6dd:	add    BYTE PTR [edx+0x0],al
3003b6e0:	inc    ecx
3003b6e1:	add    BYTE PTR [eax+eax*1+0x5c],cl
3003b6e5:	add    BYTE PTR [esi+0x0],dl
3003b6e8:	inc    ebp
3003b6e9:	add    BYTE PTR ds:0x4d005500,ch
3003b6ef:	add    BYTE PTR [eax],al
3003b6f1:	add    BYTE PTR [eax+0x2e003490],dl
3003b6f7:	add    BYTE PTR [esi],dh
3003b6f9:	add    BYTE PTR [eax],al
3003b6fb:	add    BYTE PTR [ebp-0x75],dl
3003b6fe:	in     al,dx
3003b6ff:	push   esi
3003b700:	mov    esi,ecx
3003b702:	mov    ecx,DWORD PTR [ebp+0x8]
3003b705:	and    DWORD PTR [esi],0x0
3003b708:	test   ecx,ecx
3003b70a:	je     0x3003b71e
3003b70c:	mov    eax,DWORD PTR [ecx]
3003b70e:	push   esi
3003b70f:	push   0x3003b728
3003b714:	push   ecx
3003b715:	call   DWORD PTR [eax]
3003b717:	test   eax,eax
3003b719:	jns    0x3003b71e
3003b71b:	and    DWORD PTR [esi],0x0
3003b71e:	mov    eax,esi
3003b720:	pop    esi
3003b721:	pop    ebp
3003b722:	ret    0x4
3003b725:	nop
3003b726:	nop
3003b727:	nop
3003b728:	lods   eax,DWORD PTR ds:[esi]
3003b729:	ja     0x3003b796
3003b72b:	jle    0x3003b6b3
3003b72d:	pop    eax
3003b72e:	imul   ecx,DWORD PTR [eax-0x76],0x79bcd273
3003b735:	inc    edi
3003b736:	sub    al,0x54
3003b738:	push   ebp
3003b739:	mov    ebp,esp
3003b73b:	mov    eax,DWORD PTR [ebp+0x8]
3003b73e:	push   esi
3003b73f:	mov    esi,DWORD PTR [eax]
3003b741:	push   edi
3003b742:	mov    edi,ecx
3003b744:	cmp    DWORD PTR [edi],esi
3003b746:	je     0x3003b760
3003b748:	test   esi,esi
3003b74a:	je     0x3003b752
3003b74c:	mov    eax,DWORD PTR [esi]
3003b74e:	push   esi
3003b74f:	call   DWORD PTR [eax+0x4]
3003b752:	mov    eax,DWORD PTR [edi]
3003b754:	mov    DWORD PTR [edi],esi
3003b756:	test   eax,eax
3003b758:	je     0x3003b760
3003b75a:	mov    ecx,DWORD PTR [eax]
3003b75c:	push   eax
3003b75d:	call   DWORD PTR [ecx+0x8]
3003b760:	mov    eax,DWORD PTR [edi]
3003b762:	pop    edi
3003b763:	pop    esi
3003b764:	pop    ebp
3003b765:	ret    0x4
3003b768:	push   ebp
3003b769:	mov    ebp,esp
3003b76b:	mov    eax,DWORD PTR [ebp+0xc]
3003b76e:	push   esi
3003b76f:	xor    edx,edx
3003b771:	push   edi
3003b772:	test   eax,eax
3003b774:	je     0x3003b7b0
3003b776:	movzx  ecx,WORD PTR [eax]
3003b779:	cmp    ecx,0x73
3003b77c:	je     0x3003b783
3003b77e:	cmp    ecx,0x53
3003b781:	jne    0x3003b7b0
3003b783:	movzx  ecx,WORD PTR [eax+0x2]
3003b787:	cmp    ecx,0x76
3003b78a:	je     0x3003b791
3003b78c:	cmp    ecx,0x56
3003b78f:	jne    0x3003b7b0
3003b791:	movzx  ecx,WORD PTR [eax+0x4]
3003b795:	cmp    ecx,0x72
3003b798:	je     0x3003b79f
3003b79a:	cmp    ecx,0x52
3003b79d:	jne    0x3003b7b0
3003b79f:	cmp    WORD PTR [eax+0x6],dx
3003b7a3:	jne    0x3003b7b0
3003b7a5:	mov    esi,DWORD PTR [ebp+0x10]
3003b7a8:	or     esi,0x1000
3003b7ae:	jmp    0x3003b7b3
3003b7b0:	mov    esi,DWORD PTR [ebp+0x10]
3003b7b3:	mov    edi,DWORD PTR [ebp+0x8]
3003b7b6:	push   edx
3003b7b7:	mov    eax,DWORD PTR [edi]
3003b7b9:	push   edx
3003b7ba:	lea    ecx,[ebp+0x10]
3003b7bd:	push   ecx
3003b7be:	push   edi
3003b7bf:	mov    DWORD PTR [ebp+0x10],edx
3003b7c2:	call   DWORD PTR [eax+0x30]
3003b7c5:	test   eax,eax
3003b7c7:	js     0x3003b7de
3003b7c9:	mov    ecx,DWORD PTR [ebp+0x10]
3003b7cc:	push   DWORD PTR [ebp+0x14]
3003b7cf:	mov    eax,DWORD PTR [edi]
3003b7d1:	and    ecx,0xfffffffe
3003b7d4:	or     ecx,esi
3003b7d6:	push   ecx
3003b7d7:	push   edi
3003b7d8:	mov    DWORD PTR [ebp+0x10],ecx
3003b7db:	call   DWORD PTR [eax+0x2c]
3003b7de:	pop    edi
3003b7df:	pop    esi
3003b7e0:	pop    ebp
3003b7e1:	ret    0x10
3003b7e4:	push   ebp
3003b7e5:	mov    ebp,esp
3003b7e7:	push   ecx
3003b7e8:	and    DWORD PTR [ebp-0x4],0x0
3003b7ec:	lea    eax,[ebp-0x4]
3003b7ef:	push   eax
3003b7f0:	call   0x3003bde0
3003b7f5:	test   eax,eax
3003b7f7:	js     0x3003b82a
3003b7f9:	push   0x3003b830
3003b7fe:	push   DWORD PTR [ebp-0x4]
3003b801:	call   DWORD PTR ds:0x30045178
3003b807:	test   eax,eax
3003b809:	jne    0x3003b81f
3003b80b:	call   DWORD PTR ds:0x30045160
3003b811:	test   eax,eax
3003b813:	jle    0x3003b82a
3003b815:	movzx  eax,ax
3003b818:	or     eax,0x80070000
3003b81d:	jmp    0x3003b82a
3003b81f:	push   DWORD PTR [ebp+0x10]
3003b822:	push   DWORD PTR [ebp+0xc]
3003b825:	push   DWORD PTR [ebp+0x8]
3003b828:	call   eax
3003b82a:	leave  
3003b82b:	ret    0xc
3003b82e:	nop
3003b82f:	nop
3003b830:	inc    ebx
3003b831:	dec    esp
3003b832:	push   edx
3003b833:	inc    ebx
3003b834:	jb     0x3003b89b
3003b836:	popa   
3003b837:	je     0x3003b89e
3003b839:	dec    ecx
3003b83a:	outs   dx,BYTE PTR ds:[esi]
3003b83b:	jae    0x3003b8b1
3003b83d:	popa   
3003b83e:	outs   dx,BYTE PTR ds:[esi]
3003b83f:	arpl   WORD PTR [ebp+0x0],sp
3003b842:	push   ebp
3003b843:	mov    ebp,esp
3003b845:	sub    esp,0x424
3003b84b:	mov    eax,ds:0x30043050
3003b850:	xor    eax,ebp
3003b852:	mov    DWORD PTR [ebp-0x4],eax
3003b855:	mov    eax,DWORD PTR [ebp+0x14]
3003b858:	mov    DWORD PTR [ebp-0x410],eax
3003b85e:	mov    eax,DWORD PTR [ebp+0x18]
3003b861:	push   ebx
3003b862:	push   esi
3003b863:	mov    esi,DWORD PTR [ebp+0xc]
3003b866:	mov    DWORD PTR [ebp-0x418],eax
3003b86c:	mov    eax,DWORD PTR [ebp+0x1c]
3003b86f:	push   edi
3003b870:	mov    edi,DWORD PTR [ebp+0x8]
3003b873:	mov    DWORD PTR [ebp-0x40c],esi
3003b879:	mov    DWORD PTR [ebp-0x414],eax
3003b87f:	call   0x3003c0f6
3003b884:	test   al,al
3003b886:	je     0x3003b915
3003b88c:	mov    eax,0x200
3003b891:	mov    DWORD PTR [ebp-0x40c],eax
3003b897:	test   edi,edi
3003b899:	je     0x3003b8ae
3003b89b:	push   0xffffffff
3003b89d:	push   edi
3003b89e:	push   eax
3003b89f:	lea    eax,[ebp-0x404]
3003b8a5:	push   eax
3003b8a6:	call   0x30037e06
3003b8ab:	add    esp,0x10
3003b8ae:	xor    ebx,ebx
3003b8b0:	mov    eax,edi
3003b8b2:	neg    eax
3003b8b4:	sbb    eax,eax
3003b8b6:	lea    ecx,[ebp-0x40c]
3003b8bc:	and    eax,ecx
3003b8be:	push   eax
3003b8bf:	neg    edi
3003b8c1:	sbb    edi,edi
3003b8c3:	lea    eax,[ebp-0x404]
3003b8c9:	and    edi,eax
3003b8cb:	push   edi
3003b8cc:	push   ebx
3003b8cd:	push   ebx
3003b8ce:	lea    eax,[ebp-0x408]
3003b8d4:	push   eax
3003b8d5:	mov    DWORD PTR [ebp-0x408],ebx
3003b8db:	call   0x3003baec
3003b8e0:	test   eax,eax
3003b8e2:	js     0x3003b983
3003b8e8:	push   ebx
3003b8e9:	push   DWORD PTR [ebp+0x10]
3003b8ec:	push   esi
3003b8ed:	mov    esi,DWORD PTR [ebp-0x408]
3003b8f3:	push   esi
3003b8f4:	call   0x3003b768
3003b8f9:	push   DWORD PTR [ebp-0x414]
3003b8ff:	mov    eax,DWORD PTR [esi]
3003b901:	push   DWORD PTR [ebp-0x418]
3003b907:	push   DWORD PTR [ebp-0x410]
3003b90d:	push   esi
3003b90e:	call   DWORD PTR [eax+0x24]
3003b911:	mov    esi,eax
3003b913:	jmp    0x3003b981
3003b915:	lea    eax,[ebp-0x408]
3003b91b:	xor    ebx,ebx
3003b91d:	push   eax
3003b91e:	mov    WORD PTR [ebp-0x420],bx
3003b925:	mov    DWORD PTR [ebp-0x408],ebx
3003b92b:	call   0x3003bde0
3003b930:	mov    esi,eax
3003b932:	test   esi,esi
3003b934:	js     0x3003b976
3003b936:	push   0x3003b994
3003b93b:	push   DWORD PTR [ebp-0x408]
3003b941:	lea    ecx,[ebp-0x424]
3003b947:	call   0x3003c132
3003b94c:	mov    esi,eax
3003b94e:	test   esi,esi
3003b950:	js     0x3003b976
3003b952:	push   DWORD PTR [ebp-0x414]
3003b958:	push   DWORD PTR [ebp-0x418]
3003b95e:	push   DWORD PTR [ebp-0x410]
3003b964:	push   DWORD PTR [ebp+0x10]
3003b967:	push   DWORD PTR [ebp-0x40c]
3003b96d:	push   edi
3003b96e:	call   DWORD PTR [ebp-0x41c]
3003b974:	mov    esi,eax
3003b976:	lea    ecx,[ebp-0x424]
3003b97c:	call   0x3003c189
3003b981:	mov    eax,esi
3003b983:	mov    ecx,DWORD PTR [ebp-0x4]
3003b986:	pop    edi
3003b987:	pop    esi
3003b988:	xor    ecx,ebp
3003b98a:	pop    ebx
3003b98b:	call   0x3000115c
3003b990:	leave  
3003b991:	ret    0x18
3003b994:	inc    ebx
3003b995:	outs   dx,DWORD PTR ds:[esi]
3003b996:	jb     0x3003b9da
3003b998:	imul   ebp,DWORD PTR [esi+0x64],0x75526f54
3003b99f:	outs   dx,BYTE PTR ds:[esi]
3003b9a0:	je     0x3003ba0b
3003b9a2:	ins    DWORD PTR es:[edi],dx
3003b9a3:	gs inc ebp
3003b9a5:	js     0x3003b9a7
3003b9a7:	push   ebp
3003b9a8:	mov    ebp,esp
3003b9aa:	mov    ecx,DWORD PTR ds:0x300448dc
3003b9b0:	sub    esp,0xc
3003b9b3:	push   ebx
3003b9b4:	xor    ebx,ebx
3003b9b6:	push   esi
3003b9b7:	mov    esi,ebx
3003b9b9:	test   ecx,ecx
3003b9bb:	jne    0x3003ba23
3003b9bd:	lea    eax,[ebp-0x4]
3003b9c0:	push   eax
3003b9c1:	push   0x3003ba30
3003b9c6:	push   0x30010108
3003b9cb:	mov    DWORD PTR [ebp-0x4],ebx
3003b9ce:	call   0x3003b7e4
3003b9d3:	mov    esi,eax
3003b9d5:	test   esi,esi
3003b9d7:	js     0x3003ba2a
3003b9d9:	lea    ecx,[ebp-0xc]
3003b9dc:	mov    WORD PTR [ebp-0x8],bx
3003b9e0:	call   0x3003c1a8
3003b9e5:	mov    eax,DWORD PTR [ebp-0x4]
3003b9e8:	push   ebx
3003b9e9:	push   eax
3003b9ea:	push   0x300448dc
3003b9ef:	mov    DWORD PTR [ebp-0xc],eax
3003b9f2:	mov    BYTE PTR [ebp-0x8],0x1
3003b9f6:	call   DWORD PTR ds:0x30045130
3003b9fc:	test   eax,eax
3003b9fe:	jne    0x3003ba15
3003ba00:	mov    eax,ds:0x300448dc
3003ba05:	mov    ds:0x30043bac,eax
3003ba0a:	mov    BYTE PTR ds:0x30043bb0,0x1
3003ba11:	mov    BYTE PTR [ebp-0x7],0x1
3003ba15:	lea    ecx,[ebp-0xc]
3003ba18:	call   0x3003c1a8
3003ba1d:	mov    ecx,DWORD PTR ds:0x300448dc
3003ba23:	mov    eax,DWORD PTR [ebp+0x8]
3003ba26:	mov    DWORD PTR [eax],ecx
3003ba28:	mov    eax,esi
3003ba2a:	pop    esi
3003ba2b:	pop    ebx
3003ba2c:	leave  
3003ba2d:	ret    0x4
3003ba30:	sahf   
3003ba31:	(bad)  [edx]
3003ba33:	shl    DWORD PTR [ebx-0x7dbeda47],cl
3003ba39:	pop    es
3003ba3a:	mov    eax,ds:0x32f58448
3003ba3f:	push   ss
3003ba40:	push   ebp
3003ba41:	mov    ebp,esp
3003ba43:	mov    ecx,DWORD PTR ds:0x300448e0
3003ba49:	sub    esp,0xc
3003ba4c:	push   ebx
3003ba4d:	xor    ebx,ebx
3003ba4f:	push   esi
3003ba50:	mov    esi,ebx
3003ba52:	test   ecx,ecx
3003ba54:	jne    0x3003babc
3003ba56:	lea    eax,[ebp-0x4]
3003ba59:	push   eax
3003ba5a:	push   0x3003badc
3003ba5f:	push   0x3003bacc
3003ba64:	mov    DWORD PTR [ebp-0x4],ebx
3003ba67:	call   0x3003b7e4
3003ba6c:	mov    esi,eax
3003ba6e:	test   esi,esi
3003ba70:	js     0x3003bac3
3003ba72:	lea    ecx,[ebp-0xc]
3003ba75:	mov    WORD PTR [ebp-0x8],bx
3003ba79:	call   0x3003c1a8
3003ba7e:	mov    eax,DWORD PTR [ebp-0x4]
3003ba81:	push   ebx
3003ba82:	push   eax
3003ba83:	push   0x300448e0
3003ba88:	mov    DWORD PTR [ebp-0xc],eax
3003ba8b:	mov    BYTE PTR [ebp-0x8],0x1
3003ba8f:	call   DWORD PTR ds:0x30045130
3003ba95:	test   eax,eax
3003ba97:	jne    0x3003baae
3003ba99:	mov    eax,ds:0x300448e0
3003ba9e:	mov    ds:0x30043bb4,eax
3003baa3:	mov    BYTE PTR ds:0x30043bb8,0x1
3003baaa:	mov    BYTE PTR [ebp-0x7],0x1
3003baae:	lea    ecx,[ebp-0xc]
3003bab1:	call   0x3003c1a8
3003bab6:	mov    ecx,DWORD PTR ds:0x300448e0
3003babc:	mov    eax,DWORD PTR [ebp+0x8]
3003babf:	mov    DWORD PTR [eax],ecx
3003bac1:	mov    eax,esi
3003bac3:	pop    esi
3003bac4:	pop    ebx
3003bac5:	leave  
3003bac6:	ret    0x4
3003bac9:	nop
3003baca:	nop
3003bacb:	nop
3003bacc:	call   0x611b:0x472ebcd4
3003bad3:	dec    edx
3003bad4:	mov    cl,0x3a
3003bad6:	dec    edx
3003bad7:	add    esi,DWORD PTR [eax+0x1e]
3003bada:	pop    ecx
3003badb:	dec    ebx
3003badc:	xchg   ebp,eax
3003badd:	push   es
3003bade:	sbb    edx,esp
3003bae0:	mov    dl,0x77
3003bae2:	cs dec ecx
3003bae4:	mov    ss,WORD PTR [esp+eax*8]
3003bae7:	mov    bl,0xa7
3003bae9:	std    
3003baea:	aad    0x93
3003baec:	push   ebp
3003baed:	mov    ebp,esp
3003baef:	push   ecx
3003baf0:	push   DWORD PTR [ebp+0x18]
3003baf3:	and    DWORD PTR [ebp-0x4],0x0
3003baf7:	push   DWORD PTR [ebp+0x14]
3003bafa:	lea    eax,[ebp-0x4]
3003bafd:	push   DWORD PTR [ebp+0x10]
3003bb00:	push   DWORD PTR [ebp+0xc]
3003bb03:	push   eax
3003bb04:	call   0x3003c02d
3003bb09:	mov    edx,eax
3003bb0b:	test   edx,edx
3003bb0d:	js     0x3003bb1b
3003bb0f:	mov    eax,DWORD PTR [ebp-0x4]
3003bb12:	mov    ecx,DWORD PTR [eax]
3003bb14:	mov    eax,DWORD PTR [ebp+0x8]
3003bb17:	mov    DWORD PTR [eax],ecx
3003bb19:	mov    eax,edx
3003bb1b:	leave  
3003bb1c:	ret    0x14
3003bb1f:	push   ebp
3003bb20:	mov    ebp,esp
3003bb22:	sub    esp,0x43c
3003bb28:	mov    eax,ds:0x30043050
3003bb2d:	xor    eax,ebp
3003bb2f:	mov    DWORD PTR [ebp-0x4],eax
3003bb32:	mov    eax,DWORD PTR [ebp+0x8]
3003bb35:	and    DWORD PTR [ebp-0x41c],0x0
3003bb3c:	mov    DWORD PTR [ebp-0x428],eax
3003bb42:	mov    eax,DWORD PTR [ebp+0x10]
3003bb45:	mov    DWORD PTR [ebp-0x42c],eax
3003bb4b:	mov    eax,DWORD PTR [ebp+0x14]
3003bb4e:	push   ebx
3003bb4f:	mov    ebx,DWORD PTR [ebp+0x20]
3003bb52:	mov    DWORD PTR [ebp-0x424],eax
3003bb58:	mov    eax,DWORD PTR [ebp+0x18]
3003bb5b:	push   esi
3003bb5c:	mov    esi,DWORD PTR [ebp+0xc]
3003bb5f:	push   edi
3003bb60:	mov    edi,DWORD PTR [ebp+0x1c]
3003bb63:	mov    DWORD PTR [ebp-0x420],eax
3003bb69:	lea    eax,[ebp-0x41c]
3003bb6f:	push   eax
3003bb70:	mov    DWORD PTR [ebp-0x418],esi
3003bb76:	call   0x3003ba40
3003bb7b:	test   eax,eax
3003bb7d:	js     0x3003bd96
3003bb83:	push   DWORD PTR [ebp-0x428]
3003bb89:	mov    ecx,DWORD PTR [ebp-0x41c]
3003bb8f:	and    DWORD PTR [ebp-0x430],0x0
3003bb96:	mov    eax,DWORD PTR [ecx]
3003bb98:	push   0x3003bdd0
3003bb9d:	lea    edx,[ebp-0x430]
3003bba3:	push   edx
3003bba4:	push   ebx
3003bba5:	push   edi
3003bba6:	push   DWORD PTR [ebp-0x420]
3003bbac:	push   DWORD PTR [ebp-0x424]
3003bbb2:	push   DWORD PTR [ebp-0x42c]
3003bbb8:	push   esi
3003bbb9:	push   0x40
3003bbbb:	push   ecx
3003bbbc:	call   DWORD PTR [eax+0xc]
3003bbbf:	mov    esi,eax
3003bbc1:	test   esi,esi
3003bbc3:	je     0x3003bd78
3003bbc9:	mov    eax,DWORD PTR [ebp-0x418]
3003bbcf:	mov    ecx,DWORD PTR [ebp-0x42c]
3003bbd5:	mov    edx,DWORD PTR [ebp-0x424]
3003bbdb:	test   eax,eax
3003bbdd:	jne    0x3003bc4f
3003bbdf:	test   ecx,ecx
3003bbe1:	jne    0x3003bc4f
3003bbe3:	test   edx,edx
3003bbe5:	jne    0x3003bc4f
3003bbe7:	mov    eax,0x100
3003bbec:	push   0x3003bda8
3003bbf1:	push   eax
3003bbf2:	mov    DWORD PTR [ebp-0x420],eax
3003bbf8:	lea    eax,[ebp-0x204]
3003bbfe:	push   eax
3003bbff:	call   0x30006ce1
3003bc04:	mov    ecx,DWORD PTR [ebp-0x41c]
3003bc0a:	add    esp,0xc
3003bc0d:	mov    eax,DWORD PTR [ecx]
3003bc0f:	push   DWORD PTR [ebp-0x428]
3003bc15:	lea    edx,[ebp-0x430]
3003bc1b:	push   0x3003bdd0
3003bc20:	push   edx
3003bc21:	push   ebx
3003bc22:	push   edi
3003bc23:	lea    edx,[ebp-0x420]
3003bc29:	push   edx
3003bc2a:	lea    edx,[ebp-0x204]
3003bc30:	push   edx
3003bc31:	push   0x0
3003bc33:	push   0x0
3003bc35:	push   0x48
3003bc37:	push   ecx
3003bc38:	call   DWORD PTR [eax+0xc]
3003bc3b:	mov    ecx,DWORD PTR [ebp-0x42c]
3003bc41:	mov    edx,DWORD PTR [ebp-0x424]
3003bc47:	mov    esi,eax
3003bc49:	mov    eax,DWORD PTR [ebp-0x418]
3003bc4f:	test   esi,esi
3003bc51:	je     0x3003bd78
3003bc57:	test   eax,eax
3003bc59:	jne    0x3003bd74
3003bc5f:	test   ecx,ecx
3003bc61:	jne    0x3003bd74
3003bc67:	test   edx,edx
3003bc69:	jne    0x3003bd74
3003bc6f:	and    DWORD PTR [ebp-0x418],edx
3003bc75:	lea    eax,[ebp-0x418]
3003bc7b:	push   eax
3003bc7c:	call   0x3003bde0
3003bc81:	test   eax,eax
3003bc83:	js     0x3003bd96
3003bc89:	push   0x3003bdb8
3003bc8e:	push   DWORD PTR [ebp-0x418]
3003bc94:	lea    ecx,[ebp-0x43c]
3003bc9a:	mov    WORD PTR [ebp-0x438],0x0
3003bca3:	call   0x3003c132
3003bca8:	mov    esi,eax
3003bcaa:	test   esi,esi
3003bcac:	js     0x3003bcf8
3003bcae:	mov    ecx,0x104
3003bcb3:	lea    eax,[ebp-0x41c]
3003bcb9:	push   eax
3003bcba:	push   ecx
3003bcbb:	lea    eax,[ebp-0x20c]
3003bcc1:	push   eax
3003bcc2:	lea    eax,[ebp-0x420]
3003bcc8:	push   eax
3003bcc9:	push   ecx
3003bcca:	lea    eax,[ebp-0x414]
3003bcd0:	push   eax
3003bcd1:	push   0x41
3003bcd3:	xor    eax,eax
3003bcd5:	push   eax
3003bcd6:	push   eax
3003bcd7:	push   eax
3003bcd8:	push   eax
3003bcd9:	mov    DWORD PTR [ebp-0x420],ecx
3003bcdf:	mov    DWORD PTR [ebp-0x41c],ecx
3003bce5:	call   DWORD PTR [ebp-0x434]
3003bceb:	mov    esi,eax
3003bced:	test   esi,esi
3003bcef:	js     0x3003bcf8
3003bcf1:	je     0x3003bd08
3003bcf3:	mov    esi,0x80131700
3003bcf8:	lea    ecx,[ebp-0x43c]
3003bcfe:	call   0x3003c189
3003bd03:	jmp    0x3003bd94
3003bd08:	and    DWORD PTR [ebp-0x418],0x0
3003bd0f:	lea    eax,[ebp-0x418]
3003bd15:	push   eax
3003bd16:	call   0x3003b9a7
3003bd1b:	mov    esi,eax
3003bd1d:	test   esi,esi
3003bd1f:	js     0x3003bcf8
3003bd21:	push   DWORD PTR [ebp-0x428]
3003bd27:	mov    eax,DWORD PTR [ebp-0x418]
3003bd2d:	push   0x3003bdd0
3003bd32:	mov    ecx,DWORD PTR [eax]
3003bd34:	lea    edx,[ebp-0x20c]
3003bd3a:	push   edx
3003bd3b:	push   eax
3003bd3c:	call   DWORD PTR [ecx+0xc]
3003bd3f:	mov    esi,eax
3003bd41:	test   esi,esi
3003bd43:	jne    0x3003bcf3
3003bd45:	test   edi,edi
3003bd47:	je     0x3003bd69
3003bd49:	push   DWORD PTR [ebp-0x41c]
3003bd4f:	lea    eax,[ebp-0x20c]
3003bd55:	push   eax
3003bd56:	push   DWORD PTR [ebx]
3003bd58:	push   edi
3003bd59:	call   0x30037e06
3003bd5e:	mov    eax,DWORD PTR [ebp-0x41c]
3003bd64:	add    esp,0x10
3003bd67:	mov    DWORD PTR [ebx],eax
3003bd69:	lea    ecx,[ebp-0x43c]
3003bd6f:	call   0x3003c189
3003bd74:	test   esi,esi
3003bd76:	jne    0x3003bd94
3003bd78:	mov    eax,DWORD PTR [ebp-0x430]
3003bd7e:	and    al,0x3
3003bd80:	cmp    al,0x1
3003bd82:	jne    0x3003bd94
3003bd84:	mov    eax,DWORD PTR [ebp-0x428]
3003bd8a:	mov    eax,DWORD PTR [eax]
3003bd8c:	push   eax
3003bd8d:	mov    ecx,DWORD PTR [eax]
3003bd8f:	call   DWORD PTR [ecx+0x34]
3003bd92:	mov    esi,eax
3003bd94:	mov    eax,esi
3003bd96:	mov    ecx,DWORD PTR [ebp-0x4]
3003bd99:	pop    edi
3003bd9a:	pop    esi
3003bd9b:	xor    ecx,ebp
3003bd9d:	pop    ebx
3003bd9e:	call   0x3000115c
3003bda3:	leave  
3003bda4:	ret    0x1c
3003bda7:	nop
3003bda8:	jbe    0x3003bdaa
3003bdaa:	xor    al,0x0
3003bdac:	add    BYTE PTR cs:[eax],dh
3003bdaf:	add    BYTE PTR [esi],ch
3003bdb1:	add    BYTE PTR [eax],dh
3003bdb3:	add    BYTE PTR [eax],al
3003bdb5:	add    BYTE PTR [eax+0x74654790],dl
3003bdbb:	push   edx
3003bdbc:	gs jno 0x3003be34
3003bdbf:	gs jae 0x3003be36
3003bdc2:	gs fs push edx
3003bdc5:	jne    0x3003be35
3003bdc7:	je     0x3003be32
3003bdc9:	ins    DWORD PTR es:[edi],dx
3003bdca:	gs dec ecx
3003bdcc:	outs   dx,BYTE PTR ds:[esi]
3003bdcd:	outs   dx,WORD PTR ds:[esi]
3003bdcf:	add    dl,dl
3003bdd1:	sar    DWORD PTR [ecx],1
3003bdd3:	mov    ebp,0x486aba2f
3003bdd8:	mov    DWORD PTR [eax+0x46cbb0b4],esi
3003bdde:	push   0xec8b5591
3003bde3:	push   ecx
3003bde4:	push   ecx
3003bde5:	mov    ecx,DWORD PTR ds:0x300448d8
3003bdeb:	push   esi
3003bdec:	test   ecx,ecx
3003bdee:	jne    0x3003be5f
3003bdf0:	push   0x3000e58c
3003bdf5:	call   DWORD PTR ds:0x3004516c
3003bdfb:	mov    esi,eax
3003bdfd:	test   esi,esi
3003bdff:	jne    0x3003be15
3003be01:	call   DWORD PTR ds:0x30045160
3003be07:	test   eax,eax
3003be09:	jle    0x3003be66
3003be0b:	movzx  eax,ax
3003be0e:	or     eax,0x80070000
3003be13:	jmp    0x3003be66
3003be15:	lea    ecx,[ebp-0x8]
3003be18:	mov    WORD PTR [ebp-0x4],0x0
3003be1e:	call   0x3003c189
3003be23:	push   0x0
3003be25:	push   esi
3003be26:	push   0x300448d8
3003be2b:	mov    DWORD PTR [ebp-0x8],esi
3003be2e:	mov    BYTE PTR [ebp-0x4],0x1
3003be32:	call   DWORD PTR ds:0x30045130
3003be38:	test   eax,eax
3003be3a:	jne    0x3003be51
3003be3c:	mov    eax,ds:0x300448d8
3003be41:	mov    ds:0x30043ba4,eax
3003be46:	mov    BYTE PTR ds:0x30043ba8,0x1
3003be4d:	mov    BYTE PTR [ebp-0x3],0x1
3003be51:	lea    ecx,[ebp-0x8]
3003be54:	call   0x3003c189
3003be59:	mov    ecx,DWORD PTR ds:0x300448d8
3003be5f:	mov    eax,DWORD PTR [ebp+0x8]
3003be62:	mov    DWORD PTR [eax],ecx
3003be64:	xor    eax,eax
3003be66:	pop    esi
3003be67:	leave  
3003be68:	ret    0x4
3003be6b:	push   ebp
3003be6c:	mov    ebp,esp
3003be6e:	sub    esp,0x24
3003be71:	push   ebx
3003be72:	xor    eax,eax
3003be74:	push   esi
3003be75:	push   edi
3003be76:	push   0x3000e024
3003be7b:	mov    DWORD PTR [ebp-0x24],eax
3003be7e:	mov    DWORD PTR [ebp-0x20],eax
3003be81:	mov    DWORD PTR [ebp-0x1c],eax
3003be84:	mov    DWORD PTR [ebp-0x18],eax
3003be87:	mov    DWORD PTR [ebp-0x14],eax
3003be8a:	mov    DWORD PTR [ebp-0x10],eax
3003be8d:	mov    DWORD PTR [ebp-0x8],eax
3003be90:	push   0x30043114
3003be95:	lea    eax,[ebp-0x4]
3003be98:	push   eax
3003be99:	call   0x3000ba45
3003be9e:	push   0x3004306c
3003bea3:	lea    ecx,[ebp-0xc]
3003bea6:	call   0x30004256
3003beab:	lea    eax,[ebp-0x8]
3003beae:	push   eax
3003beaf:	push   DWORD PTR [ebp+0x8]
3003beb2:	call   DWORD PTR ds:0x300454a4
3003beb8:	mov    edi,eax
3003beba:	test   edi,edi
3003bebc:	js     0x3003bf65
3003bec2:	push   DWORD PTR [ebp-0x8]
3003bec5:	call   0x300042e4
3003beca:	pop    ecx
3003becb:	push   eax
3003becc:	push   DWORD PTR [ebp-0x8]
3003becf:	lea    ecx,[ebp-0x4]
3003bed2:	call   0x30008b64
3003bed7:	mov    esi,DWORD PTR [ebp-0x4]
3003beda:	mov    ebx,0x20019
3003bedf:	push   ebx
3003bee0:	push   esi
3003bee1:	push   0x80000002
3003bee6:	lea    ecx,[ebp-0x24]
3003bee9:	call   0x300051d9
3003beee:	test   eax,eax
3003bef0:	je     0x3003bef9
3003bef2:	mov    edi,0x80004005
3003bef7:	jmp    0x3003bf68
3003bef9:	push   DWORD PTR [ebp+0xc]
3003befc:	push   0x3000d85c
3003bf01:	push   DWORD PTR [ebp-0x24]
3003bf04:	call   0x3003bfa3
3003bf09:	test   eax,eax
3003bf0b:	jne    0x3003bf68
3003bf0d:	mov    esi,0x30008fc4
3003bf12:	push   esi
3003bf13:	call   0x300042e4
3003bf18:	pop    ecx
3003bf19:	push   eax
3003bf1a:	push   esi
3003bf1b:	lea    ecx,[ebp-0x4]
3003bf1e:	call   0x30008b64
3003bf23:	mov    esi,0x3002a36c
3003bf28:	push   esi
3003bf29:	call   0x300042e4
3003bf2e:	pop    ecx
3003bf2f:	push   eax
3003bf30:	push   esi
3003bf31:	lea    ecx,[ebp-0x4]
3003bf34:	call   0x30008b64
3003bf39:	mov    esi,DWORD PTR [ebp-0x4]
3003bf3c:	push   ebx
3003bf3d:	push   esi
3003bf3e:	push   0x80000002
3003bf43:	lea    ecx,[ebp-0x18]
3003bf46:	call   0x300051d9
3003bf4b:	test   eax,eax
3003bf4d:	jne    0x3003bef2
3003bf4f:	push   DWORD PTR [ebp+0xc]
3003bf52:	push   0x30006ce8
3003bf57:	push   DWORD PTR [ebp-0x18]
3003bf5a:	call   0x3003bfa3
3003bf5f:	test   eax,eax
3003bf61:	je     0x3003bef2
3003bf63:	jmp    0x3003bf68
3003bf65:	mov    esi,DWORD PTR [ebp-0x4]
3003bf68:	cmp    DWORD PTR [ebp-0x8],0x0
3003bf6c:	je     0x3003bf77
3003bf6e:	push   DWORD PTR [ebp-0x8]
3003bf71:	call   DWORD PTR ds:0x300454b4
3003bf77:	mov    ecx,DWORD PTR [ebp-0xc]
3003bf7a:	lea    ecx,[ecx-0x10]
3003bf7d:	call   0x30004017
3003bf82:	lea    ecx,[esi-0x10]
3003bf85:	call   0x30004017
3003bf8a:	lea    ecx,[ebp-0x18]
3003bf8d:	call   0x300051ae
3003bf92:	lea    ecx,[ebp-0x24]
3003bf95:	call   0x300051ae
3003bf9a:	mov    eax,edi
3003bf9c:	pop    edi
3003bf9d:	pop    esi
3003bf9e:	pop    ebx
3003bf9f:	leave  
3003bfa0:	ret    0x8
3003bfa3:	push   ebp
3003bfa4:	mov    ebp,esp
3003bfa6:	push   ecx
3003bfa7:	push   ecx
3003bfa8:	push   esi
3003bfa9:	push   edi
3003bfaa:	push   0x3004306c
3003bfaf:	lea    ecx,[ebp-0x4]
3003bfb2:	xor    edi,edi
3003bfb4:	call   0x30004256
3003bfb9:	push   0x104
3003bfbe:	lea    ecx,[ebp-0x4]
3003bfc1:	mov    DWORD PTR [ebp-0x8],0x208
3003bfc8:	call   0x30004286
3003bfcd:	lea    ecx,[ebp-0x8]
3003bfd0:	push   ecx
3003bfd1:	push   eax
3003bfd2:	push   edi
3003bfd3:	push   edi
3003bfd4:	push   DWORD PTR [ebp+0xc]
3003bfd7:	push   DWORD PTR [ebp+0x8]
3003bfda:	call   DWORD PTR ds:0x3004500c
3003bfe0:	push   0xffffffff
3003bfe2:	lea    ecx,[ebp-0x4]
3003bfe5:	mov    esi,eax
3003bfe7:	call   0x30006c8c
3003bfec:	test   esi,esi
3003bfee:	jne    0x3003c014
3003bff0:	push   edi
3003bff1:	lea    ecx,[ebp-0x4]
3003bff4:	call   0x3000c4fd
3003bff9:	mov    esi,DWORD PTR [ebp-0x4]
3003bffc:	push   DWORD PTR [esi-0xc]
3003bfff:	push   esi
3003c000:	call   DWORD PTR ds:0x300454f0
3003c006:	mov    ecx,eax
3003c008:	test   ecx,ecx
3003c00a:	je     0x3003c027
3003c00c:	mov    eax,DWORD PTR [ebp+0x10]
3003c00f:	inc    edi
3003c010:	mov    DWORD PTR [eax],ecx
3003c012:	jmp    0x3003c017
3003c014:	mov    esi,DWORD PTR [ebp-0x4]
3003c017:	lea    ecx,[esi-0x10]
3003c01a:	call   0x30004017
3003c01f:	mov    eax,edi
3003c021:	pop    edi
3003c022:	pop    esi
3003c023:	leave  
3003c024:	ret    0xc
3003c027:	call   0x3002bcb8
3003c02c:	int3   
3003c02d:	push   ebp
3003c02e:	mov    ebp,esp
3003c030:	push   ecx
3003c031:	push   ecx
3003c032:	push   ebx
3003c033:	push   esi
3003c034:	xor    ebx,ebx
3003c036:	push   edi
3003c037:	mov    esi,ebx
3003c039:	mov    edi,0x300448e8
3003c03e:	cmp    DWORD PTR ds:0x300448e4,ebx
3003c044:	jne    0x3003c0e8
3003c04a:	lea    ecx,[ebp-0x8]
3003c04d:	mov    WORD PTR [ebp-0x4],bx
3003c051:	call   0x3003c1c7
3003c056:	lea    eax,[ebp-0x8]
3003c059:	push   eax
3003c05a:	mov    DWORD PTR [ebp-0x8],0x30044cf0
3003c061:	mov    BYTE PTR [ebp-0x4],0x1
3003c065:	call   0x3003c166
3003c06a:	cmp    DWORD PTR ds:0x300448e4,ebx
3003c070:	jne    0x3003c0e0
3003c072:	push   0x300448ec
3003c077:	push   0x300448f0
3003c07c:	push   DWORD PTR [ebp+0x18]
3003c07f:	xor    eax,eax
3003c081:	push   DWORD PTR [ebp+0x14]
3003c084:	mov    DWORD PTR ds:0x300448e8,ebx
3003c08a:	push   DWORD PTR [ebp+0x10]
3003c08d:	mov    DWORD PTR ds:0x300448ec,0x200
3003c097:	push   DWORD PTR [ebp+0xc]
3003c09a:	mov    ds:0x300448f0,ax
3003c0a0:	push   edi
3003c0a1:	call   0x3003bb1f
3003c0a6:	mov    esi,eax
3003c0a8:	test   esi,esi
3003c0aa:	jns    0x3003c0b6
3003c0ac:	lea    ecx,[ebp-0x8]
3003c0af:	call   0x3003c1c7
3003c0b4:	jmp    0x3003c0ed
3003c0b6:	mov    ecx,0x30043bbc
3003c0bb:	mov    BYTE PTR ds:0x30043bc0,bl
3003c0c1:	call   0x30017263
3003c0c6:	push   0x1
3003c0c8:	push   0x300448e4
3003c0cd:	mov    DWORD PTR ds:0x30043bbc,edi
3003c0d3:	mov    BYTE PTR ds:0x30043bc0,0x1
3003c0da:	call   DWORD PTR ds:0x3004517c
3003c0e0:	lea    ecx,[ebp-0x8]
3003c0e3:	call   0x3003c1c7
3003c0e8:	mov    eax,DWORD PTR [ebp+0x8]
3003c0eb:	mov    DWORD PTR [eax],edi
3003c0ed:	pop    edi
3003c0ee:	mov    eax,esi
3003c0f0:	pop    esi
3003c0f1:	pop    ebx
3003c0f2:	leave  
3003c0f3:	ret    0x14
3003c0f6:	push   ebp
3003c0f7:	mov    ebp,esp
3003c0f9:	push   ecx
3003c0fa:	mov    ecx,DWORD PTR ds:0x300444bc
3003c100:	cmp    ecx,0xffffffff
3003c103:	jne    0x3003c129
3003c105:	lea    eax,[ebp-0x4]
3003c108:	push   eax
3003c109:	call   0x3003b9a7
3003c10e:	xor    ecx,ecx
3003c110:	test   eax,eax
3003c112:	setns  cl
3003c115:	push   0xffffffff
3003c117:	push   ecx
3003c118:	push   0x300444bc
3003c11d:	call   DWORD PTR ds:0x30045130
3003c123:	mov    ecx,DWORD PTR ds:0x300444bc
3003c129:	xor    eax,eax
3003c12b:	test   ecx,ecx
3003c12d:	setne  al
3003c130:	leave  
3003c131:	ret    
3003c132:	push   ebp
3003c133:	mov    ebp,esp
3003c135:	push   esi
3003c136:	push   DWORD PTR [ebp+0xc]
3003c139:	mov    esi,ecx
3003c13b:	push   DWORD PTR [ebp+0x8]
3003c13e:	call   DWORD PTR ds:0x30045178
3003c144:	test   eax,eax
3003c146:	jne    0x3003c15c
3003c148:	call   DWORD PTR ds:0x30045160
3003c14e:	test   eax,eax
3003c150:	jle    0x3003c161
3003c152:	movzx  eax,ax
3003c155:	or     eax,0x80070000
3003c15a:	jmp    0x3003c161
3003c15c:	mov    DWORD PTR [esi+0x8],eax
3003c15f:	xor    eax,eax
3003c161:	pop    esi
3003c162:	pop    ebp
3003c163:	ret    0x8
3003c166:	push   ebp
3003c167:	mov    ebp,esp
3003c169:	push   esi
3003c16a:	mov    esi,DWORD PTR [ebp+0x8]
3003c16d:	jmp    0x3003c175
3003c16f:	call   DWORD PTR ds:0x300450a4
3003c175:	push   0x1
3003c177:	push   DWORD PTR [esi]
3003c179:	call   DWORD PTR ds:0x3004517c
3003c17f:	cmp    eax,0x1
3003c182:	je     0x3003c16f
3003c184:	pop    esi
3003c185:	pop    ebp
3003c186:	ret    0x4
3003c189:	push   esi
3003c18a:	mov    esi,ecx
3003c18c:	cmp    BYTE PTR [esi+0x4],0x0
3003c190:	je     0x3003c1a6
3003c192:	cmp    BYTE PTR [esi+0x5],0x0
3003c196:	jne    0x3003c1a0
3003c198:	push   DWORD PTR [esi]
3003c19a:	call   DWORD PTR ds:0x30045168
3003c1a0:	mov    WORD PTR [esi+0x4],0x0
3003c1a6:	pop    esi
3003c1a7:	ret    
3003c1a8:	push   esi
3003c1a9:	mov    esi,ecx
3003c1ab:	cmp    BYTE PTR [esi+0x4],0x0
3003c1af:	je     0x3003c1c5
3003c1b1:	cmp    BYTE PTR [esi+0x5],0x0
3003c1b5:	jne    0x3003c1bf
3003c1b7:	mov    eax,DWORD PTR [esi]
3003c1b9:	push   eax
3003c1ba:	mov    ecx,DWORD PTR [eax]
3003c1bc:	call   DWORD PTR [ecx+0x8]
3003c1bf:	mov    WORD PTR [esi+0x4],0x0
3003c1c5:	pop    esi
3003c1c6:	ret    
3003c1c7:	push   esi
3003c1c8:	mov    esi,ecx
3003c1ca:	cmp    BYTE PTR [esi+0x4],0x0
3003c1ce:	je     0x3003c1e6
3003c1d0:	cmp    BYTE PTR [esi+0x5],0x0
3003c1d4:	jne    0x3003c1e0
3003c1d6:	push   0x0
3003c1d8:	push   DWORD PTR [esi]
3003c1da:	call   DWORD PTR ds:0x3004517c
3003c1e0:	mov    WORD PTR [esi+0x4],0x0
3003c1e6:	pop    esi
3003c1e7:	ret    
3003c1e8:	push   ebp
3003c1e9:	mov    ebp,esp
3003c1eb:	sub    esp,0x104
3003c1f1:	mov    eax,ds:0x30043050
3003c1f6:	xor    eax,ebp
3003c1f8:	mov    DWORD PTR [ebp-0x4],eax
3003c1fb:	push   esi
3003c1fc:	mov    esi,DWORD PTR [ebp+0x8]
3003c1ff:	push   edi
3003c200:	push   0x3000e58c
3003c205:	call   DWORD PTR ds:0x3004516c
3003c20b:	mov    edi,eax
3003c20d:	test   edi,edi
3003c20f:	jne    0x3003c218
3003c211:	mov    eax,0x80004005
3003c216:	jmp    0x3003c26e
3003c218:	push   esi
3003c219:	push   0x3003c320
3003c21e:	push   0x3003c330
3003c223:	xor    eax,eax
3003c225:	push   eax
3003c226:	push   eax
3003c227:	push   eax
3003c228:	call   0x3003b842
3003c22d:	mov    esi,eax
3003c22f:	test   esi,esi
3003c231:	jns    0x3003c25c
3003c233:	push   0xffffffff
3003c235:	push   esi
3003c236:	push   0x3003c280
3003c23b:	lea    eax,[ebp-0x104]
3003c241:	push   0x80
3003c246:	push   eax
3003c247:	call   0x3000766b
3003c24c:	add    esp,0x14
3003c24f:	lea    eax,[ebp-0x104]
3003c255:	push   eax
3003c256:	call   DWORD PTR ds:0x30045240
3003c25c:	cmp    esi,0x1
3003c25f:	je     0x3003c265
3003c261:	test   esi,esi
3003c263:	jns    0x3003c26c
3003c265:	push   edi
3003c266:	call   DWORD PTR ds:0x30045168
3003c26c:	mov    eax,esi
3003c26e:	mov    ecx,DWORD PTR [ebp-0x4]
3003c271:	pop    edi
3003c272:	xor    ecx,ebp
3003c274:	pop    esi
3003c275:	call   0x3000115c
3003c27a:	leave  
3003c27b:	ret    0x4
3003c27e:	nop
3003c27f:	nop
3003c280:	inc    ebx
3003c281:	add    BYTE PTR [edi+0x0],ch
3003c284:	jb     0x3003c286
3003c286:	inc    edx
3003c287:	add    BYTE PTR [ecx+0x0],ch
3003c28a:	outs   dx,BYTE PTR ds:[esi]
3003c28b:	add    BYTE PTR [eax+eax*1+0x54],ah
3003c28f:	add    BYTE PTR [edi+0x0],ch
3003c292:	push   edx
3003c293:	add    BYTE PTR [ebp+0x0],dh
3003c296:	outs   dx,BYTE PTR ds:[esi]
3003c297:	add    BYTE PTR [eax+eax*1+0x69],dh
3003c29b:	add    BYTE PTR [ebp+0x0],ch
3003c29e:	add    BYTE PTR gs:[ebp+0x0],al
3003c2a2:	js     0x3003c2a4
3003c2a4:	sub    BYTE PTR [eax],al
3003c2a6:	add    BYTE PTR cs:[esi],ch
3003c2a9:	add    BYTE PTR [esi],ch
3003c2ab:	add    BYTE PTR [eax+eax*1],ch
3003c2ae:	inc    ebx
3003c2af:	add    BYTE PTR [eax+eax*1+0x53],cl
3003c2b3:	add    BYTE PTR [ecx+0x0],cl
3003c2b6:	inc    esp
3003c2b7:	add    BYTE PTR [edi+0x0],bl
3003c2ba:	inc    ebx
3003c2bb:	add    BYTE PTR [edi+0x0],ch
3003c2be:	jb     0x3003c2c0
3003c2c0:	push   edx
3003c2c1:	add    BYTE PTR [ebp+0x0],dh
3003c2c4:	outs   dx,BYTE PTR ds:[esi]
3003c2c5:	add    BYTE PTR [eax+eax*1+0x69],dh
3003c2c9:	add    BYTE PTR [ebp+0x0],ch
3003c2cc:	add    BYTE PTR gs:[eax+0x0],cl
3003c2d0:	outs   dx,DWORD PTR ds:[esi]
3003c2d1:	add    BYTE PTR [ebx+0x0],dh
3003c2d4:	je     0x3003c2d6
3003c2d6:	sub    al,0x0
3003c2d8:	add    BYTE PTR cs:[esi],ch
3003c2db:	add    BYTE PTR [esi],ch
3003c2dd:	add    BYTE PTR [ecx],ch
3003c2df:	add    BYTE PTR [eax],ah
3003c2e1:	add    BYTE PTR [esi+0x0],ah
3003c2e4:	popa   
3003c2e5:	add    BYTE PTR [ecx+0x0],ch
3003c2e8:	ins    BYTE PTR es:[edi],dx
3003c2e9:	add    BYTE PTR [ebp+0x0],ah
3003c2ec:	add    BYTE PTR fs:[eax],ah
3003c2ef:	add    BYTE PTR [edi+0x0],dh
3003c2f2:	imul   eax,DWORD PTR [eax],0x680074
3003c2f8:	and    BYTE PTR [eax],al
3003c2fa:	add    BYTE PTR gs:[edx+0x0],dh
3003c2fe:	jb     0x3003c300
3003c300:	outs   dx,DWORD PTR ds:[esi]
3003c301:	add    BYTE PTR [edx+0x0],dh
3003c304:	and    BYTE PTR [eax],al
3003c306:	dec    eax
3003c307:	add    BYTE PTR [edx+0x0],dl
3003c30a:	cmp    al,BYTE PTR [eax]
3003c30c:	and    BYTE PTR [eax],al
3003c30e:	and    eax,0x30002300
3003c313:	add    BYTE PTR [esi],ch
3003c315:	add    BYTE PTR [eax],bh
3003c317:	add    BYTE PTR [eax+0x0],bh
3003c31a:	or     al,BYTE PTR [eax]
3003c31c:	add    BYTE PTR [eax],al
3003c31e:	nop
3003c31f:	nop
3003c320:	and    ah,BYTE PTR [edi+0x2f]
3003c323:	retf   
3003c324:	cmp    ch,BYTE PTR [ebx+0x409c11d2]
3003c32a:	add    al,al
3003c32c:	dec    edi
3003c32d:	mov    ds:0x67233e0a,eax
3003c332:	das    
3003c333:	retf   
3003c334:	cmp    ch,BYTE PTR [ebx+0x409c11d2]
3003c33a:	add    al,al
3003c33c:	dec    edi
3003c33d:	mov    ds:0x8b553e0a,eax
3003c342:	in     al,dx
3003c343:	sub    esp,0x28
3003c346:	cmp    DWORD PTR [ebp+0x8],0x0
3003c34a:	push   edi
3003c34b:	mov    edi,DWORD PTR [ebp+0xc]
3003c34e:	jne    0x3003c35e
3003c350:	test   edi,edi
3003c352:	jne    0x3003c35e
3003c354:	mov    eax,0x80004003
3003c359:	jmp    0x3003c5e6
3003c35e:	cmp    DWORD PTR [ebp+0x10],0x0
3003c362:	je     0x3003c354
3003c364:	push   ebx
3003c365:	mov    ebx,DWORD PTR [ebp+0x1c]
3003c368:	test   ebx,ebx
3003c36a:	jne    0x3003c376
3003c36c:	mov    eax,0x80004003
3003c371:	jmp    0x3003c5e5
3003c376:	xor    eax,eax
3003c378:	mov    DWORD PTR [ebp-0x10],eax
3003c37b:	mov    DWORD PTR [ebp-0x14],eax
3003c37e:	mov    DWORD PTR [ebp-0xc],eax
3003c381:	mov    DWORD PTR [ebp-0x8],eax
3003c384:	mov    DWORD PTR [ebx],eax
3003c386:	push   esi
3003c387:	lea    eax,[ebp-0x10]
3003c38a:	push   eax
3003c38b:	call   0x3003c1e8
3003c390:	mov    esi,eax
3003c392:	test   esi,esi
3003c394:	js     0x3003c5ae
3003c39a:	mov    eax,DWORD PTR [ebp-0x10]
3003c39d:	push   eax
3003c39e:	mov    ecx,DWORD PTR [eax]
3003c3a0:	call   DWORD PTR [ecx+0x28]
3003c3a3:	mov    esi,eax
3003c3a5:	test   esi,esi
3003c3a7:	js     0x3003c5ae
3003c3ad:	cmp    DWORD PTR [ebp+0x14],0x0
3003c3b1:	je     0x3003c480
3003c3b7:	mov    eax,ds:0x30043bc4
3003c3bc:	test   eax,eax
3003c3be:	jne    0x3003c43a
3003c3c0:	and    DWORD PTR [ebp-0x4],eax
3003c3c3:	lea    eax,[ebp-0x4]
3003c3c6:	push   eax
3003c3c7:	push   0x1
3003c3c9:	push   0x0
3003c3cb:	push   0x3003c5ec
3003c3d0:	call   0x3000de5a
3003c3d5:	mov    esi,eax
3003c3d7:	add    esp,0x10
3003c3da:	test   esi,esi
3003c3dc:	jns    0x3003c3f4
3003c3de:	mov    eax,DWORD PTR [ebp-0x4]
3003c3e1:	test   eax,eax
3003c3e3:	je     0x3003c5ae
3003c3e9:	mov    ecx,DWORD PTR [eax]
3003c3eb:	push   eax
3003c3ec:	call   DWORD PTR [ecx+0x8]
3003c3ef:	jmp    0x3003c5ae
3003c3f4:	push   DWORD PTR [ebp-0x4]
3003c3f7:	lea    ecx,[ebp-0x18]
3003c3fa:	call   0x3003b6fc
3003c3ff:	lea    eax,[ebp-0x18]
3003c402:	push   eax
3003c403:	mov    ecx,0x30043bc4
3003c408:	call   0x3003b738
3003c40d:	mov    eax,DWORD PTR [ebp-0x18]
3003c410:	test   eax,eax
3003c412:	je     0x3003c41a
3003c414:	mov    ecx,DWORD PTR [eax]
3003c416:	push   eax
3003c417:	call   DWORD PTR [ecx+0x8]
3003c41a:	mov    eax,DWORD PTR [ebp-0x4]
3003c41d:	test   eax,eax
3003c41f:	je     0x3003c427
3003c421:	mov    ecx,DWORD PTR [eax]
3003c423:	push   eax
3003c424:	call   DWORD PTR [ecx+0x8]
3003c427:	mov    eax,ds:0x30043bc4
3003c42c:	test   eax,eax
3003c42e:	jne    0x3003c43a
3003c430:	mov    esi,0x8000ffff
3003c435:	jmp    0x3003c5ae
3003c43a:	test   edi,edi
3003c43c:	je     0x3003c453
3003c43e:	mov    ecx,DWORD PTR [eax]
3003c440:	push   ebx
3003c441:	push   DWORD PTR [ebp+0x10]
3003c444:	push   edi
3003c445:	push   DWORD PTR [ebp+0x14]
3003c448:	push   eax
3003c449:	call   DWORD PTR [ecx+0xc]
3003c44c:	mov    esi,eax
3003c44e:	mov    eax,ds:0x30043bc4
3003c453:	cmp    DWORD PTR [ebp+0x8],0x0
3003c457:	je     0x3003c5ae
3003c45d:	test   esi,esi
3003c45f:	js     0x3003c469
3003c461:	test   edi,edi
3003c463:	jne    0x3003c5ae
3003c469:	mov    ecx,DWORD PTR [eax]
3003c46b:	push   ebx
3003c46c:	push   DWORD PTR [ebp+0x10]
3003c46f:	push   DWORD PTR [ebp+0x8]
3003c472:	push   DWORD PTR [ebp+0x14]
3003c475:	push   eax
3003c476:	call   DWORD PTR [ecx+0x10]
3003c479:	mov    esi,eax
3003c47b:	jmp    0x3003c5ae
3003c480:	mov    eax,DWORD PTR [ebp-0x10]
3003c483:	lea    edx,[ebp-0x14]
3003c486:	mov    ecx,DWORD PTR [eax]
3003c488:	push   edx
3003c489:	push   eax
3003c48a:	call   DWORD PTR [ecx+0x34]
3003c48d:	mov    esi,eax
3003c48f:	test   esi,esi
3003c491:	js     0x3003c5ae
3003c497:	mov    eax,DWORD PTR [ebp-0x14]
3003c49a:	lea    edx,[ebp-0xc]
3003c49d:	mov    ecx,DWORD PTR [eax]
3003c49f:	push   edx
3003c4a0:	push   0x3003c5fc
3003c4a5:	push   eax
3003c4a6:	call   DWORD PTR [ecx]
3003c4a8:	mov    esi,eax
3003c4aa:	test   esi,esi
3003c4ac:	js     0x3003c5ae
3003c4b2:	test   edi,edi
3003c4b4:	je     0x3003c4f6
3003c4b6:	push   DWORD PTR [ebp+0x10]
3003c4b9:	mov    edi,DWORD PTR [ebp-0xc]
3003c4bc:	lea    ecx,[ebp-0x4]
3003c4bf:	call   0x30001488
3003c4c4:	push   DWORD PTR [ebp+0xc]
3003c4c7:	mov    esi,DWORD PTR [eax]
3003c4c9:	lea    ecx,[ebp-0x18]
3003c4cc:	call   0x30001488
3003c4d1:	mov    ecx,DWORD PTR [edi]
3003c4d3:	lea    edx,[ebp-0x8]
3003c4d6:	push   edx
3003c4d7:	push   esi
3003c4d8:	push   DWORD PTR [eax]
3003c4da:	push   edi
3003c4db:	call   DWORD PTR [ecx+0x94]
3003c4e1:	push   DWORD PTR [ebp-0x18]
3003c4e4:	mov    edi,DWORD PTR ds:0x300454e8
3003c4ea:	mov    esi,eax
3003c4ec:	call   edi
3003c4ee:	push   DWORD PTR [ebp-0x4]
3003c4f1:	call   edi
3003c4f3:	mov    edi,DWORD PTR [ebp+0xc]
3003c4f6:	cmp    DWORD PTR [ebp+0x8],0x0
3003c4fa:	je     0x3003c541
3003c4fc:	test   esi,esi
3003c4fe:	js     0x3003c504
3003c500:	test   edi,edi
3003c502:	jne    0x3003c541
3003c504:	push   DWORD PTR [ebp+0x10]
3003c507:	mov    edi,DWORD PTR [ebp-0xc]
3003c50a:	lea    ecx,[ebp-0x4]
3003c50d:	call   0x30001488
3003c512:	push   DWORD PTR [ebp+0x8]
3003c515:	mov    esi,DWORD PTR [eax]
3003c517:	lea    ecx,[ebp-0x18]
3003c51a:	call   0x30001488
3003c51f:	mov    ecx,DWORD PTR [edi]
3003c521:	lea    edx,[ebp-0x8]
3003c524:	push   edx
3003c525:	push   esi
3003c526:	push   DWORD PTR [eax]
3003c528:	push   edi
3003c529:	call   DWORD PTR [ecx+0x98]
3003c52f:	push   DWORD PTR [ebp-0x18]
3003c532:	mov    edi,DWORD PTR ds:0x300454e8
3003c538:	mov    esi,eax
3003c53a:	call   edi
3003c53c:	push   DWORD PTR [ebp-0x4]
3003c53f:	call   edi
3003c541:	test   esi,esi
3003c543:	js     0x3003c5ae
3003c545:	lea    eax,[ebp-0x28]
3003c548:	push   eax
3003c549:	call   DWORD PTR ds:0x300454e4
3003c54f:	mov    eax,DWORD PTR [ebp-0x8]
3003c552:	lea    edx,[ebp-0x28]
3003c555:	mov    ecx,DWORD PTR [eax]
3003c557:	push   edx
3003c558:	push   eax
3003c559:	call   DWORD PTR [ecx+0x38]
3003c55c:	mov    esi,eax
3003c55e:	test   esi,esi
3003c560:	js     0x3003c5ae
3003c562:	cmp    WORD PTR [ebp-0x28],0x9
3003c567:	mov    esi,0x80004005
3003c56c:	je     0x3003c575
3003c56e:	cmp    WORD PTR [ebp-0x28],0xd
3003c573:	jne    0x3003c5a4
3003c575:	mov    ecx,DWORD PTR [ebp-0x20]
3003c578:	test   ecx,ecx
3003c57a:	je     0x3003c59f
3003c57c:	mov    eax,DWORD PTR [ecx]
3003c57e:	push   ebx
3003c57f:	push   DWORD PTR [ebp+0x18]
3003c582:	push   ecx
3003c583:	call   DWORD PTR [eax]
3003c585:	mov    esi,eax
3003c587:	test   esi,esi
3003c589:	js     0x3003c5a4
3003c58b:	mov    esi,DWORD PTR [ebx]
3003c58d:	neg    esi
3003c58f:	sbb    esi,esi
3003c591:	and    esi,0x7fff0001
3003c597:	add    esi,0x8000ffff
3003c59d:	jmp    0x3003c5a4
3003c59f:	mov    esi,0x8000ffff
3003c5a4:	lea    eax,[ebp-0x28]
3003c5a7:	push   eax
3003c5a8:	call   DWORD PTR ds:0x300454e0
3003c5ae:	mov    eax,DWORD PTR [ebp-0x8]
3003c5b1:	test   eax,eax
3003c5b3:	je     0x3003c5bb
3003c5b5:	mov    ecx,DWORD PTR [eax]
3003c5b7:	push   eax
3003c5b8:	call   DWORD PTR [ecx+0x8]
3003c5bb:	mov    eax,DWORD PTR [ebp-0xc]
3003c5be:	test   eax,eax
3003c5c0:	je     0x3003c5c8
3003c5c2:	mov    ecx,DWORD PTR [eax]
3003c5c4:	push   eax
3003c5c5:	call   DWORD PTR [ecx+0x8]
3003c5c8:	mov    eax,DWORD PTR [ebp-0x14]
3003c5cb:	test   eax,eax
3003c5cd:	je     0x3003c5d5
3003c5cf:	mov    ecx,DWORD PTR [eax]
3003c5d1:	push   eax
3003c5d2:	call   DWORD PTR [ecx+0x8]
3003c5d5:	mov    ecx,DWORD PTR [ebp-0x10]
3003c5d8:	test   ecx,ecx
3003c5da:	je     0x3003c5e2
3003c5dc:	mov    edx,DWORD PTR [ecx]
3003c5de:	push   ecx
3003c5df:	call   DWORD PTR [edx+0x8]
3003c5e2:	mov    eax,esi
3003c5e4:	pop    esi
3003c5e5:	pop    ebx
3003c5e6:	pop    edi
3003c5e7:	leave  
3003c5e8:	ret    
3003c5e9:	nop
3003c5ea:	nop
3003c5eb:	nop
3003c5ec:	mov    al,ds:0x33182c9f
3003c5f1:	xchg   edx,eax
3003c5f2:	pop    edx
3003c5f3:	dec    esi
3003c5f4:	cdq    
3003c5f5:	dec    esi
3003c5f6:	cdq    
3003c5f7:	xor    al,0xb4
3003c5f9:	mov    ebx,0x96dca42e
3003c5fe:	test   BYTE PTR ds:0x36632b29,0xad
3003c605:	mov    eax,esp
3003c607:	cmp    BYTE PTR [edx+esi*8-0x74aaec59],bl
3003c60e:	in     al,dx
3003c60f:	sub    esp,0x268
3003c615:	mov    eax,ds:0x30043050
3003c61a:	xor    eax,ebp
3003c61c:	mov    DWORD PTR [ebp-0x4],eax
3003c61f:	mov    eax,DWORD PTR [ebp+0x8]
3003c622:	mov    ecx,DWORD PTR [ebp+0xc]
3003c625:	push   ebx
3003c626:	mov    ebx,DWORD PTR [ebp+0x20]
3003c629:	push   esi
3003c62a:	push   edi
3003c62b:	push   0x3002a894
3003c630:	push   eax
3003c631:	mov    DWORD PTR [ebp-0x25c],ecx
3003c637:	mov    ecx,DWORD PTR [ebp+0x10]
3003c63a:	push   0x3001855c
3003c63f:	push   DWORD PTR [ebp+0x1c]
3003c642:	mov    DWORD PTR [ebp-0x268],ecx
3003c648:	mov    ecx,DWORD PTR [ebp+0x18]
3003c64b:	push   ebx
3003c64c:	mov    DWORD PTR [ebp-0x264],eax
3003c652:	mov    DWORD PTR [ebp-0x260],ecx
3003c658:	xor    esi,esi
3003c65a:	call   0x3000766b
3003c65f:	add    esp,0x14
3003c662:	lea    eax,[ebp-0x254]
3003c668:	push   eax
3003c669:	push   ebx
3003c66a:	call   DWORD PTR ds:0x300450ec
3003c670:	mov    edi,eax
3003c672:	mov    DWORD PTR [ebp-0x258],edi
3003c678:	cmp    edi,0xffffffff
3003c67b:	je     0x3003c771
3003c681:	test   BYTE PTR [ebp-0x254],0x10
3003c688:	je     0x3003c73e
3003c68e:	mov    ecx,0x30012384
3003c693:	lea    eax,[ebp-0x228]
3003c699:	mov    dx,WORD PTR [eax]
3003c69c:	cmp    dx,WORD PTR [ecx]
3003c69f:	jne    0x3003c6bf
3003c6a1:	test   dx,dx
3003c6a4:	je     0x3003c6bb
3003c6a6:	mov    dx,WORD PTR [eax+0x2]
3003c6aa:	cmp    dx,WORD PTR [ecx+0x2]
3003c6ae:	jne    0x3003c6bf
3003c6b0:	add    eax,0x4
3003c6b3:	add    ecx,0x4
3003c6b6:	test   dx,dx
3003c6b9:	jne    0x3003c699
3003c6bb:	mov    eax,esi
3003c6bd:	jmp    0x3003c6c4
3003c6bf:	sbb    eax,eax
3003c6c1:	or     eax,0x1
3003c6c4:	test   eax,eax
3003c6c6:	je     0x3003c73e
3003c6c8:	mov    ecx,0x3003c78c
3003c6cd:	lea    eax,[ebp-0x228]
3003c6d3:	mov    dx,WORD PTR [eax]
3003c6d6:	cmp    dx,WORD PTR [ecx]
3003c6d9:	jne    0x3003c6f9
3003c6db:	test   dx,dx
3003c6de:	je     0x3003c6f5
3003c6e0:	mov    dx,WORD PTR [eax+0x2]
3003c6e4:	cmp    dx,WORD PTR [ecx+0x2]
3003c6e8:	jne    0x3003c6f9
3003c6ea:	add    eax,0x4
3003c6ed:	add    ecx,0x4
3003c6f0:	test   dx,dx
3003c6f3:	jne    0x3003c6d3
3003c6f5:	mov    eax,esi
3003c6f7:	jmp    0x3003c6fe
3003c6f9:	sbb    eax,eax
3003c6fb:	or     eax,0x1
3003c6fe:	test   eax,eax
3003c700:	je     0x3003c73e
3003c702:	lea    eax,[ebp-0x228]
3003c708:	push   eax
3003c709:	call   0x3003c7bc
3003c70e:	mov    edi,eax
3003c710:	pop    ecx
3003c711:	test   edi,edi
3003c713:	je     0x3003c738
3003c715:	push   ebx
3003c716:	push   DWORD PTR [ebp+0x1c]
3003c719:	push   DWORD PTR [ebp+0x14]
3003c71c:	push   DWORD PTR [ebp-0x268]
3003c722:	push   DWORD PTR [ebp-0x25c]
3003c728:	push   DWORD PTR [ebp-0x264]
3003c72e:	push   edi
3003c72f:	call   0x300076bb
3003c734:	test   eax,eax
3003c736:	jne    0x3003c755
3003c738:	mov    edi,DWORD PTR [ebp-0x258]
3003c73e:	lea    eax,[ebp-0x254]
3003c744:	push   eax
3003c745:	push   edi
3003c746:	call   DWORD PTR ds:0x300450e8
3003c74c:	test   eax,eax
3003c74e:	je     0x3003c766
3003c750:	jmp    0x3003c681
3003c755:	mov    eax,DWORD PTR [ebp-0x260]
3003c75b:	xor    esi,esi
3003c75d:	mov    DWORD PTR [eax],edi
3003c75f:	mov    edi,DWORD PTR [ebp-0x258]
3003c765:	inc    esi
3003c766:	push   edi
3003c767:	call   DWORD PTR ds:0x300450e4
3003c76d:	test   esi,esi
3003c76f:	jne    0x3003c776
3003c771:	xor    eax,eax
3003c773:	mov    WORD PTR [ebx],ax
3003c776:	mov    ecx,DWORD PTR [ebp-0x4]
3003c779:	pop    edi
3003c77a:	mov    eax,esi
3003c77c:	pop    esi
3003c77d:	xor    ecx,ebp
3003c77f:	pop    ebx
3003c780:	call   0x3000115c
3003c785:	leave  
3003c786:	ret    0x1c
3003c789:	nop
3003c78a:	nop
3003c78b:	nop
3003c78c:	add    BYTE PTR cs:[esi],ch
3003c78f:	add    BYTE PTR [eax],al
3003c791:	add    bh,bh
3003c793:	and    eax,0x30045308
3003c798:	jmp    DWORD PTR ds:0x3004530c
3003c79e:	jmp    DWORD PTR ds:0x3004531c
3003c7a4:	jmp    DWORD PTR ds:0x30045324
3003c7aa:	jmp    DWORD PTR ds:0x30045348
3003c7b0:	jmp    DWORD PTR ds:0x30045370
3003c7b6:	jmp    DWORD PTR ds:0x30045398
3003c7bc:	jmp    DWORD PTR ds:0x3004539c
3003c7c2:	mov    eax,0x30043000
3003c7c7:	jmp    0x3003c7c9
3003c7c9:	push   ecx
3003c7ca:	push   edx
3003c7cb:	push   eax
3003c7cc:	push   0x30042084
3003c7d1:	call   0x3003c868
3003c7d6:	pop    edx
3003c7d7:	pop    ecx
3003c7d8:	jmp    eax
3003c7da:	mov    eax,0x30043004
3003c7df:	jmp    0x3003c7c9
3003c7e1:	mov    eax,0x30043008
3003c7e6:	jmp    0x3003c7c9
3003c7e8:	mov    eax,0x3004300c
3003c7ed:	jmp    0x3003c7c9
3003c7ef:	mov    eax,0x3004301c
3003c7f4:	jmp    0x3003c7f6
3003c7f6:	push   ecx
3003c7f7:	push   edx
3003c7f8:	push   eax
3003c7f9:	push   0x300420a4
3003c7fe:	call   0x3003c868
3003c803:	pop    edx
3003c804:	pop    ecx
3003c805:	jmp    eax
3003c807:	mov    eax,0x30043014
3003c80c:	jmp    0x3003c7f6
3003c80e:	mov    eax,0x30043018
3003c813:	jmp    0x3003c7f6
3003c815:	push   ebp
3003c816:	mov    ebp,esp
3003c818:	mov    eax,DWORD PTR [ebp+0x8]
3003c81b:	test   eax,eax
3003c81d:	je     0x3003c82b
3003c81f:	lea    edx,[eax+0x1]
3003c822:	mov    cl,BYTE PTR [eax]
3003c824:	inc    eax
3003c825:	test   cl,cl
3003c827:	jne    0x3003c822
3003c829:	sub    eax,edx
3003c82b:	pop    ebp
3003c82c:	ret    0x4
3003c82f:	push   ebp
3003c830:	mov    ebp,esp
3003c832:	mov    ecx,DWORD PTR [ebp+0x8]
3003c835:	mov    al,0x2
3003c837:	cmp    ecx,0x80
3003c83d:	jae    0x3003c843
3003c83f:	dec    al
3003c841:	jmp    0x3003c861
3003c843:	cmp    ecx,0x800
3003c849:	jb     0x3003c861
3003c84b:	cmp    ecx,0x10000
3003c851:	jae    0x3003c857
3003c853:	mov    al,0x3
3003c855:	jmp    0x3003c861
3003c857:	cmp    ecx,0x10ffff
3003c85d:	ja     0x3003c861
3003c85f:	mov    al,0x4
3003c861:	movsx  eax,al
3003c864:	pop    ebp
3003c865:	ret    0x4
3003c868:	mov    edi,edi
3003c86a:	push   ebp
3003c86b:	mov    ebp,esp
3003c86d:	sub    esp,0x30
3003c870:	push   ebx
3003c871:	mov    ebx,DWORD PTR [ebp+0x8]
3003c874:	push   esi
3003c875:	mov    eax,DWORD PTR [ebx+0x4]
3003c878:	mov    esi,DWORD PTR [ebx+0x8]
3003c87b:	mov    ecx,DWORD PTR [ebx+0xc]
3003c87e:	mov    edx,DWORD PTR [ebx+0x10]
3003c881:	push   edi
3003c882:	mov    edi,0x30000000
3003c887:	add    eax,edi
3003c889:	add    esi,edi
3003c88b:	add    ecx,edi
3003c88d:	add    edx,edi
3003c88f:	mov    edi,DWORD PTR [ebx+0x14]
3003c892:	add    edi,0x30000000
3003c898:	mov    DWORD PTR [ebp-0xc],edi
3003c89b:	mov    edi,DWORD PTR [ebx+0x1c]
3003c89e:	mov    DWORD PTR [ebp-0x4],edi
3003c8a1:	mov    edi,DWORD PTR [ebp+0xc]
3003c8a4:	mov    DWORD PTR [ebp-0x28],edi
3003c8a7:	xor    edi,edi
3003c8a9:	test   DWORD PTR [ebx],0x1
3003c8af:	mov    DWORD PTR [ebp+0x8],esi
3003c8b2:	mov    DWORD PTR [ebp-0x30],0x24
3003c8b9:	mov    DWORD PTR [ebp-0x2c],ebx
3003c8bc:	mov    DWORD PTR [ebp-0x24],eax
3003c8bf:	mov    DWORD PTR [ebp-0x20],edi
3003c8c2:	mov    DWORD PTR [ebp-0x1c],edi
3003c8c5:	mov    DWORD PTR [ebp-0x18],edi
3003c8c8:	mov    DWORD PTR [ebp-0x14],edi
3003c8cb:	mov    DWORD PTR [ebp-0x10],edi
3003c8ce:	jne    0x3003c8ef
3003c8d0:	lea    eax,[ebp-0x30]
3003c8d3:	mov    DWORD PTR [ebp+0xc],eax
3003c8d6:	lea    eax,[ebp+0xc]
3003c8d9:	push   eax
3003c8da:	push   0x1
3003c8dc:	push   edi
3003c8dd:	push   0xc06d0057
3003c8e2:	call   DWORD PTR ds:0x30045140
3003c8e8:	xor    eax,eax
3003c8ea:	jmp    0x3003ca78
3003c8ef:	mov    eax,DWORD PTR [ebp+0xc]
3003c8f2:	mov    edi,DWORD PTR [esi]
3003c8f4:	sub    eax,ecx
3003c8f6:	sar    eax,0x2
3003c8f9:	mov    DWORD PTR [ebp-0x8],eax
3003c8fc:	mov    ecx,DWORD PTR [edx+eax*4]
3003c8ff:	mov    eax,ecx
3003c901:	shr    eax,0x1f
3003c904:	not    eax
3003c906:	and    eax,0x1
3003c909:	mov    DWORD PTR [ebp-0x20],eax
3003c90c:	lea    eax,[ecx+0x30000002]
3003c912:	jne    0x3003c917
3003c914:	movzx  eax,cx
3003c917:	mov    DWORD PTR [ebp-0x1c],eax
3003c91a:	mov    eax,ds:0x30044cfc
3003c91f:	xor    esi,esi
3003c921:	test   eax,eax
3003c923:	je     0x3003c93b
3003c925:	lea    ecx,[ebp-0x30]
3003c928:	push   ecx
3003c929:	push   esi
3003c92a:	call   eax
3003c92c:	mov    esi,eax
3003c92e:	test   esi,esi
3003c930:	jne    0x3003ca5b
3003c936:	mov    eax,ds:0x30044cfc
3003c93b:	test   edi,edi
3003c93d:	jne    0x3003c9c3
3003c943:	test   eax,eax
3003c945:	je     0x3003c955
3003c947:	lea    ecx,[ebp-0x30]
3003c94a:	push   ecx
3003c94b:	push   0x1
3003c94d:	call   eax
3003c94f:	mov    edi,eax
3003c951:	test   edi,edi
3003c953:	jne    0x3003c9a9
3003c955:	push   0x0
3003c957:	push   0x0
3003c959:	push   DWORD PTR [ebp-0x24]
3003c95c:	call   DWORD PTR ds:0x300450b8
3003c962:	mov    edi,eax
3003c964:	test   edi,edi
3003c966:	jne    0x3003c9a9
3003c968:	call   DWORD PTR ds:0x30045160
3003c96e:	mov    DWORD PTR [ebp-0x10],eax
3003c971:	mov    eax,ds:0x30044d00
3003c976:	test   eax,eax
3003c978:	je     0x3003c988
3003c97a:	lea    ecx,[ebp-0x30]
3003c97d:	push   ecx
3003c97e:	push   0x3
3003c980:	call   eax
3003c982:	mov    edi,eax
3003c984:	test   edi,edi
3003c986:	jne    0x3003c9a9
3003c988:	lea    eax,[ebp-0x30]
3003c98b:	mov    DWORD PTR [ebp+0xc],eax
3003c98e:	lea    eax,[ebp+0xc]
3003c991:	push   eax
3003c992:	push   0x1
3003c994:	push   0x0
3003c996:	push   0xc06d007e
3003c99b:	call   DWORD PTR ds:0x30045140
3003c9a1:	mov    eax,DWORD PTR [ebp-0x14]
3003c9a4:	jmp    0x3003ca78
3003c9a9:	push   edi
3003c9aa:	push   DWORD PTR [ebp+0x8]
3003c9ad:	call   DWORD PTR ds:0x3004517c
3003c9b3:	cmp    eax,edi
3003c9b5:	jne    0x3003c9be
3003c9b7:	push   edi
3003c9b8:	call   DWORD PTR ds:0x30045168
3003c9be:	mov    eax,ds:0x30044cfc
3003c9c3:	mov    DWORD PTR [ebp-0x18],edi
3003c9c6:	test   eax,eax
3003c9c8:	je     0x3003c9d4
3003c9ca:	lea    ecx,[ebp-0x30]
3003c9cd:	push   ecx
3003c9ce:	push   0x2
3003c9d0:	call   eax
3003c9d2:	mov    esi,eax
3003c9d4:	test   esi,esi
3003c9d6:	jne    0x3003ca56
3003c9d8:	cmp    DWORD PTR [ebx+0x14],esi
3003c9db:	je     0x3003ca0a
3003c9dd:	cmp    DWORD PTR [ebx+0x1c],esi
3003c9e0:	je     0x3003ca0a
3003c9e2:	mov    eax,DWORD PTR [edi+0x3c]
3003c9e5:	cmp    DWORD PTR [eax+edi*1],0x4550
3003c9ec:	jne    0x3003ca0a
3003c9ee:	mov    ecx,DWORD PTR [ebp-0x4]
3003c9f1:	cmp    DWORD PTR [eax+edi*1+0x8],ecx
3003c9f5:	jne    0x3003ca0a
3003c9f7:	cmp    edi,DWORD PTR [eax+edi*1+0x34]
3003c9fb:	jne    0x3003ca0a
3003c9fd:	mov    esi,DWORD PTR [ebp-0x8]
3003ca00:	mov    eax,DWORD PTR [ebp-0xc]
3003ca03:	mov    esi,DWORD PTR [eax+esi*4]
3003ca06:	test   esi,esi
3003ca08:	jne    0x3003ca56
3003ca0a:	push   DWORD PTR [ebp-0x1c]
3003ca0d:	push   edi
3003ca0e:	call   DWORD PTR ds:0x30045178
3003ca14:	mov    esi,eax
3003ca16:	test   esi,esi
3003ca18:	jne    0x3003ca56
3003ca1a:	call   DWORD PTR ds:0x30045160
3003ca20:	mov    DWORD PTR [ebp-0x10],eax
3003ca23:	mov    eax,ds:0x30044d00
3003ca28:	test   eax,eax
3003ca2a:	je     0x3003ca3a
3003ca2c:	lea    ecx,[ebp-0x30]
3003ca2f:	push   ecx
3003ca30:	push   0x4
3003ca32:	call   eax
3003ca34:	mov    esi,eax
3003ca36:	test   esi,esi
3003ca38:	jne    0x3003ca56
3003ca3a:	lea    eax,[ebp-0x30]
3003ca3d:	mov    DWORD PTR [ebp+0x8],eax
3003ca40:	lea    eax,[ebp+0x8]
3003ca43:	push   eax
3003ca44:	push   0x1
3003ca46:	push   0x0
3003ca48:	push   0xc06d007f
3003ca4d:	call   DWORD PTR ds:0x30045140
3003ca53:	mov    esi,DWORD PTR [ebp-0x14]
3003ca56:	mov    eax,DWORD PTR [ebp+0xc]
3003ca59:	mov    DWORD PTR [eax],esi
3003ca5b:	mov    eax,ds:0x30044cfc
3003ca60:	test   eax,eax
3003ca62:	je     0x3003ca76
3003ca64:	and    DWORD PTR [ebp-0x10],0x0
3003ca68:	lea    ecx,[ebp-0x30]
3003ca6b:	push   ecx
3003ca6c:	push   0x5
3003ca6e:	mov    DWORD PTR [ebp-0x18],edi
3003ca71:	mov    DWORD PTR [ebp-0x14],esi
3003ca74:	call   eax
3003ca76:	mov    eax,esi
3003ca78:	pop    edi
3003ca79:	pop    esi
3003ca7a:	pop    ebx
3003ca7b:	leave  
3003ca7c:	ret    0x8
3003ca7f:	jmp    DWORD PTR ds:0x3004529c
3003ca85:	mov    edx,DWORD PTR [esp+0x8]
3003ca89:	lea    eax,[edx+0xc]
3003ca8c:	mov    ecx,DWORD PTR [edx-0x18]
3003ca8f:	xor    ecx,eax
3003ca91:	call   0x3000115c
3003ca96:	mov    eax,0x3003caa0
3003ca9b:	jmp    0x30038270
3003caa0:	and    al,BYTE PTR ds:0x21993
3003caa6:	add    BYTE PTR [eax],al
3003caa8:	ror    BYTE PTR [edi],1
3003caaa:	add    al,0x30
3003caac:	add    DWORD PTR [eax],eax
3003caae:	add    BYTE PTR [eax],al
3003cab0:	loopne 0x3003cac1
3003cab2:	add    al,0x30
	...
3003cac0:	add    DWORD PTR [eax],eax
3003cac2:	add    BYTE PTR [eax],al
3003cac4:	mov    ecx,DWORD PTR [ebp-0x10]
3003cac7:	jmp    0x300122e2
3003cacc:	(bad)  
3003cacd:	(bad)  
3003cace:	(bad)  
3003cacf:	inc    esp
3003cad1:	retf   0x3003
3003cad4:	mov    edx,DWORD PTR [esp+0x8]
3003cad8:	lea    eax,[edx+0xc]
3003cadb:	mov    ecx,DWORD PTR [edx-0x14]
3003cade:	xor    ecx,eax
3003cae0:	call   0x3000115c
3003cae5:	mov    eax,0x3003caf0
3003caea:	jmp    0x30038270
3003caef:	nop
3003caf0:	and    al,BYTE PTR ds:0x11993
3003caf6:	add    BYTE PTR [eax],al
3003caf8:	int3   
3003caf9:	retf   0x3003
	...
3003cb14:	lea    ecx,[ebp+0xc]
3003cb17:	jmp    0x300051a4
3003cb1c:	lea    ecx,[ebp+0xc]
3003cb1f:	jmp    0x300051a4
3003cb24:	lea    ecx,[ebp+0x8]
3003cb27:	jmp    0x300051a4
3003cb2c:	lea    ecx,[ebp+0x8]
3003cb2f:	jmp    0x300051a4
3003cb34:	lea    ecx,[ebp+0xc]
3003cb37:	jmp    0x300051a4
3003cb3c:	mov    edx,DWORD PTR [esp+0x8]
3003cb40:	lea    eax,[edx+0xc]
3003cb43:	mov    ecx,DWORD PTR [edx-0x10]
3003cb46:	xor    ecx,eax
3003cb48:	call   0x3000115c
3003cb4d:	mov    eax,0x3003cb58
3003cb52:	jmp    0x30038270
3003cb57:	nop
3003cb58:	and    al,BYTE PTR ds:0x51993
3003cb5e:	add    BYTE PTR [eax],al
3003cb60:	and    al,0x10
3003cb62:	add    al,0x30
	...
3003cb7c:	lea    ecx,[ebp+0xc]
3003cb7f:	jmp    0x300122e2
3003cb84:	lea    ecx,[ebp+0xc]
3003cb87:	jmp    0x300122e2
3003cb8c:	lea    ecx,[ebp+0xc]
3003cb8f:	jmp    0x300122e2
3003cb94:	mov    edx,DWORD PTR [esp+0x8]
3003cb98:	lea    eax,[edx+0xc]
3003cb9b:	mov    ecx,DWORD PTR [edx-0x10]
3003cb9e:	xor    ecx,eax
3003cba0:	call   0x3000115c
3003cba5:	mov    eax,0x3003cbb0
3003cbaa:	jmp    0x30038270
3003cbaf:	nop
3003cbb0:	and    al,BYTE PTR ds:0x41993
3003cbb6:	add    BYTE PTR [eax],al
3003cbb8:	add    al,0x10
3003cbba:	add    al,0x30
	...
3003cbd4:	lea    ecx,[ebp-0x1c]
3003cbd7:	jmp    0x3002d98c
3003cbdc:	(bad)  
3003cbdd:	(bad)  
3003cbde:	(bad)  
3003cbdf:	call   esp
3003cbe1:	retf   
3003cbe2:	add    esi,DWORD PTR [eax]
3003cbe4:	mov    edx,DWORD PTR [esp+0x8]
3003cbe8:	lea    eax,[edx+0xc]
3003cbeb:	mov    ecx,DWORD PTR [edx-0x20]
3003cbee:	xor    ecx,eax
3003cbf0:	call   0x3000115c
3003cbf5:	mov    eax,0x3003cc00
3003cbfa:	jmp    0x30038270
3003cbff:	nop
3003cc00:	and    al,BYTE PTR ds:0x11993
3003cc06:	add    BYTE PTR [eax],al
3003cc08:	fmul   st(3),st
3003cc0a:	add    esi,DWORD PTR [eax]
	...
3003cc24:	lea    ecx,[ebp+0x8]
3003cc27:	jmp    0x300122e2
3003cc2c:	lea    ecx,[ebp+0x8]
3003cc2f:	jmp    0x30038e67
3003cc34:	lea    ecx,[ebp+0x8]
3003cc37:	jmp    0x300122e2
3003cc3c:	mov    edx,DWORD PTR [esp+0x8]
3003cc40:	lea    eax,[edx+0xc]
3003cc43:	mov    ecx,DWORD PTR [edx-0x14]
3003cc46:	xor    ecx,eax
3003cc48:	call   0x3000115c
3003cc4d:	mov    eax,0x3003cc58
3003cc52:	jmp    0x30038270
3003cc57:	nop
3003cc58:	and    al,BYTE PTR ds:0x41993
3003cc5e:	add    BYTE PTR [eax],al
3003cc60:	dec    esp
3003cc61:	adc    BYTE PTR [eax+esi*1],al
	...
3003cc7c:	lea    ecx,[ebp-0x10]
3003cc7f:	jmp    0x300051a4
3003cc84:	lea    ecx,[ebp-0x10]
3003cc87:	jmp    0x300051a4
3003cc8c:	mov    edx,DWORD PTR [esp+0x8]
3003cc90:	lea    eax,[edx+0xc]
3003cc93:	mov    ecx,DWORD PTR [edx-0x14]
3003cc96:	xor    ecx,eax
3003cc98:	call   0x3000115c
3003cc9d:	mov    eax,0x3003cca8
3003cca2:	jmp    0x30038270
3003cca7:	nop
3003cca8:	and    al,BYTE PTR ds:0x31993
3003ccae:	add    BYTE PTR [eax],al
3003ccb0:	ins    BYTE PTR es:[edi],dx
3003ccb1:	adc    BYTE PTR [eax+esi*1],al
	...
3003cccc:	mov    ecx,DWORD PTR [ebp-0x10]
3003cccf:	add    ecx,0x4
3003ccd2:	jmp    0x300172e4
3003ccd7:	nop
3003ccd8:	(bad)  
3003ccd9:	(bad)  
3003ccda:	(bad)  
3003ccdb:	dec    esp
3003ccdd:	int3   
3003ccde:	add    esi,DWORD PTR [eax]
3003cce0:	mov    edx,DWORD PTR [esp+0x8]
3003cce4:	lea    eax,[edx+0xc]
3003cce7:	mov    ecx,DWORD PTR [edx-0x14]
3003ccea:	xor    ecx,eax
3003ccec:	call   0x3000115c
3003ccf1:	mov    eax,0x3003ccfc
3003ccf6:	jmp    0x30038270
3003ccfb:	nop
3003ccfc:	and    al,BYTE PTR ds:0x11993
3003cd02:	add    BYTE PTR [eax],al
3003cd04:	fmul   st,st(4)
3003cd06:	add    esi,DWORD PTR [eax]
	...
3003cd20:	lea    ecx,[ebp-0x21c]
3003cd26:	jmp    0x300051a4
3003cd2b:	lea    ecx,[ebp-0x21c]
3003cd31:	jmp    0x300051a4
3003cd36:	lea    ecx,[ebp-0x230]
3003cd3c:	jmp    0x300051a4
3003cd41:	lea    ecx,[ebp-0x230]
3003cd47:	jmp    0x300051a4
3003cd4c:	lea    ecx,[ebp-0x220]
3003cd52:	jmp    0x300051a4
3003cd57:	lea    ecx,[ebp-0x220]
3003cd5d:	jmp    0x300051a4
3003cd62:	lea    ecx,[ebp-0x224]
3003cd68:	jmp    0x300051a4
3003cd6d:	lea    ecx,[ebp-0x230]
3003cd73:	jmp    0x300051a4
3003cd78:	lea    ecx,[ebp-0x230]
3003cd7e:	jmp    0x300051a4
3003cd83:	lea    ecx,[ebp-0x230]
3003cd89:	jmp    0x300051a4
3003cd8e:	lea    ecx,[ebp-0x224]
3003cd94:	jmp    0x300051a4
3003cd99:	lea    ecx,[ebp-0x220]
3003cd9f:	jmp    0x300051a4
3003cda4:	lea    ecx,[ebp-0x21c]
3003cdaa:	jmp    0x300051a4
3003cdaf:	mov    edx,DWORD PTR [esp+0x8]
3003cdb3:	lea    eax,[edx+0xc]
3003cdb6:	mov    ecx,DWORD PTR [edx-0x23c]
3003cdbc:	xor    ecx,eax
3003cdbe:	call   0x3000115c
3003cdc3:	mov    ecx,DWORD PTR [edx-0x4]
3003cdc6:	xor    ecx,eax
3003cdc8:	call   0x3000115c
3003cdcd:	mov    eax,0x3003cdd8
3003cdd2:	jmp    0x30038270
3003cdd7:	nop
3003cdd8:	and    al,BYTE PTR ds:0xd1993
3003cdde:	add    BYTE PTR [eax],al
3003cde0:	test   BYTE PTR [eax],dl
3003cde2:	add    al,0x30
	...
3003cdfc:	mov    ecx,DWORD PTR [ebp-0x2d4]
3003ce02:	jmp    0x300051a4
3003ce07:	mov    eax,DWORD PTR [ebp-0x2d0]
3003ce0d:	and    eax,0x1
3003ce10:	je     0x3003ce24
3003ce12:	and    DWORD PTR [ebp-0x2d0],0xfffffffe
3003ce19:	mov    ecx,DWORD PTR [ebp-0x2d4]
3003ce1f:	jmp    0x300051a4
3003ce24:	ret    
3003ce25:	lea    ecx,[ebp-0x2c8]
3003ce2b:	jmp    0x300051a4
3003ce30:	lea    ecx,[ebp-0x2c8]
3003ce36:	jmp    0x300051a4
3003ce3b:	lea    ecx,[ebp-0x2c8]
3003ce41:	jmp    0x300051a4
3003ce46:	mov    edx,DWORD PTR [esp+0x8]
3003ce4a:	lea    eax,[edx+0xc]
3003ce4d:	mov    ecx,DWORD PTR [edx-0x2d8]
3003ce53:	xor    ecx,eax
3003ce55:	call   0x3000115c
3003ce5a:	mov    ecx,DWORD PTR [edx-0x4]
3003ce5d:	xor    ecx,eax
3003ce5f:	call   0x3000115c
3003ce64:	mov    eax,0x3003ce70
3003ce69:	jmp    0x30038270
3003ce6e:	nop
3003ce6f:	nop
3003ce70:	and    al,BYTE PTR ds:0x51993
3003ce76:	add    BYTE PTR [eax],al
3003ce78:	sbb    al,0x11
3003ce7a:	add    al,0x30
	...
3003ce94:	push   DWORD PTR [ebp+0x8]
3003ce97:	call   0x3000460f
3003ce9c:	pop    ecx
3003ce9d:	ret    
3003ce9e:	lea    ecx,[ebp+0x8]
3003cea1:	jmp    0x300051a4
3003cea6:	lea    ecx,[ebp+0x8]
3003cea9:	jmp    0x300051a4
3003ceae:	push   DWORD PTR [ebp-0x10]
3003ceb1:	call   0x3000460f
3003ceb6:	pop    ecx
3003ceb7:	ret    
3003ceb8:	push   DWORD PTR [ebp-0x10]
3003cebb:	call   0x3000460f
3003cec0:	pop    ecx
3003cec1:	ret    
3003cec2:	lea    ecx,[ebp+0x8]
3003cec5:	jmp    0x300051a4
3003ceca:	mov    edx,DWORD PTR [esp+0x8]
3003cece:	lea    eax,[edx+0xc]
3003ced1:	mov    ecx,DWORD PTR [edx-0x14]
3003ced4:	xor    ecx,eax
3003ced6:	call   0x3000115c
3003cedb:	mov    eax,0x3003cee8
3003cee0:	jmp    0x30038270
3003cee5:	nop
3003cee6:	nop
3003cee7:	nop
3003cee8:	and    al,BYTE PTR ds:0x61993
3003ceee:	add    BYTE PTR [eax],al
3003cef0:	in     al,dx
3003cef1:	adc    BYTE PTR [eax+esi*1],al
	...
3003cf0c:	mov    ecx,DWORD PTR [ebp+0x8]
3003cf0f:	jmp    0x300051a4
3003cf14:	mov    ecx,DWORD PTR [ebp-0x10]
3003cf17:	add    ecx,0x4
3003cf1a:	jmp    0x300051a4
3003cf1f:	mov    ecx,DWORD PTR [ebp+0x8]
3003cf22:	jmp    0x300051a4
3003cf27:	mov    ecx,DWORD PTR [ebp-0x10]
3003cf2a:	add    ecx,0x8
3003cf2d:	jmp    0x300051a4
3003cf32:	mov    edx,DWORD PTR [esp+0x8]
3003cf36:	lea    eax,[edx+0xc]
3003cf39:	mov    ecx,DWORD PTR [edx-0x14]
3003cf3c:	xor    ecx,eax
3003cf3e:	call   0x3000115c
3003cf43:	mov    eax,0x3003cf50
3003cf48:	jmp    0x30038270
3003cf4d:	nop
3003cf4e:	nop
3003cf4f:	nop
3003cf50:	and    al,BYTE PTR ds:0x41993
3003cf56:	add    BYTE PTR [eax],al
3003cf58:	inc    esp
3003cf59:	adc    DWORD PTR [eax+esi*1],eax
	...
3003cf74:	mov    ecx,DWORD PTR [ebp-0x14]
3003cf77:	add    ecx,0x4
3003cf7a:	jmp    0x300051a4
3003cf7f:	mov    ecx,DWORD PTR [ebp-0x14]
3003cf82:	add    ecx,0x8
3003cf85:	jmp    0x300051a4
3003cf8a:	mov    ecx,DWORD PTR [ebp-0x18]
3003cf8d:	jmp    0x300051a4
3003cf92:	mov    ecx,DWORD PTR [ebp-0x18]
3003cf95:	jmp    0x300051a4
3003cf9a:	mov    edx,DWORD PTR [esp+0x8]
3003cf9e:	lea    eax,[edx+0xc]
3003cfa1:	mov    ecx,DWORD PTR [edx-0x1c]
3003cfa4:	xor    ecx,eax
3003cfa6:	call   0x3000115c
3003cfab:	mov    eax,0x3003cfb8
3003cfb0:	jmp    0x30038270
3003cfb5:	nop
3003cfb6:	nop
3003cfb7:	nop
3003cfb8:	and    al,BYTE PTR ds:0x61993
3003cfbe:	add    BYTE PTR [eax],al
3003cfc0:	mov    BYTE PTR [ecx],dl
3003cfc2:	add    al,0x30
3003cfc4:	add    DWORD PTR [eax],eax
3003cfc6:	add    BYTE PTR [eax],al
3003cfc8:	adc    DWORD PTR fs:[eax+esi*1],eax
	...
3003cfdc:	mov    ecx,DWORD PTR [ebp-0x14]
3003cfdf:	jmp    0x300051a4
3003cfe4:	lea    ecx,[ebp-0x10]
3003cfe7:	jmp    0x300051a4
3003cfec:	lea    ecx,[ebp-0x10]
3003cfef:	jmp    0x300051a4
3003cff4:	lea    ecx,[ebp-0x10]
3003cff7:	jmp    0x300051a4
3003cffc:	mov    ecx,DWORD PTR [ebp-0x18]
3003cfff:	jmp    0x300051a4
3003d004:	mov    edx,DWORD PTR [esp+0x8]
3003d008:	lea    eax,[edx+0xc]
3003d00b:	mov    ecx,DWORD PTR [edx-0x1c]
3003d00e:	xor    ecx,eax
3003d010:	call   0x3000115c
3003d015:	mov    eax,0x3003d020
3003d01a:	jmp    0x30038270
3003d01f:	nop
3003d020:	and    al,BYTE PTR ds:0x51993
3003d026:	add    BYTE PTR [eax],al
3003d028:	rcl    BYTE PTR [edx],1
3003d02a:	add    al,0x30
	...
3003d044:	lea    ecx,[ebp-0x270]
3003d04a:	jmp    0x300051a4
3003d04f:	mov    ecx,DWORD PTR [ebp-0x264]
3003d055:	jmp    0x300051a4
3003d05a:	lea    ecx,[ebp-0x26c]
3003d060:	jmp    0x300051a4
3003d065:	lea    ecx,[ebp-0x26c]
3003d06b:	jmp    0x300051a4
3003d070:	mov    ecx,DWORD PTR [ebp-0x274]
3003d076:	jmp    0x300051a4
3003d07b:	lea    ecx,[ebp-0x268]
3003d081:	jmp    0x300051a4
3003d086:	lea    ecx,[ebp-0x268]
3003d08c:	jmp    0x300051a4
3003d091:	lea    ecx,[ebp-0x268]
3003d097:	jmp    0x300051a4
3003d09c:	mov    ecx,DWORD PTR [ebp-0x264]
3003d0a2:	jmp    0x300051a4
3003d0a7:	lea    ecx,[ebp-0x26c]
3003d0ad:	jmp    0x300051a4
3003d0b2:	mov    ecx,DWORD PTR [ebp-0x264]
3003d0b8:	jmp    0x300051a4
3003d0bd:	lea    ecx,[ebp-0x268]
3003d0c3:	jmp    0x300051a4
3003d0c8:	lea    ecx,[ebp-0x268]
3003d0ce:	jmp    0x300051a4
3003d0d3:	lea    ecx,[ebp-0x268]
3003d0d9:	jmp    0x300051a4
3003d0de:	lea    ecx,[ebp-0x268]
3003d0e4:	jmp    0x300051a4
3003d0e9:	lea    ecx,[ebp-0x26c]
3003d0ef:	jmp    0x300051a4
3003d0f4:	mov    ecx,DWORD PTR [ebp-0x264]
3003d0fa:	jmp    0x300051a4
3003d0ff:	lea    ecx,[ebp-0x264]
3003d105:	jmp    0x300051a4
3003d10a:	lea    ecx,[ebp-0x264]
3003d110:	jmp    0x300051a4
3003d115:	lea    ecx,[ebp-0x270]
3003d11b:	jmp    0x300051a4
3003d120:	mov    ecx,DWORD PTR [ebp-0x264]
3003d126:	jmp    0x300051a4
3003d12b:	mov    edx,DWORD PTR [esp+0x8]
3003d12f:	lea    eax,[edx+0xc]
3003d132:	mov    ecx,DWORD PTR [edx-0x278]
3003d138:	xor    ecx,eax
3003d13a:	call   0x3000115c
3003d13f:	mov    ecx,DWORD PTR [edx-0x4]
3003d142:	xor    ecx,eax
3003d144:	call   0x3000115c
3003d149:	mov    eax,0x3003d154
3003d14e:	jmp    0x30038270
3003d153:	nop
3003d154:	and    al,BYTE PTR ds:0x171993
3003d15a:	add    BYTE PTR [eax],al
3003d15c:	mov    eax,0x300411
	...
3003d175:	add    BYTE PTR [eax],al
3003d177:	add    BYTE PTR [ebx-0x1f7c0fbb],cl
3003d17d:	add    DWORD PTR [esp+ecx*1-0x7d],esi
3003d181:	lock dec BYTE PTR gs:[ebx+0x18e9084d]
3003d189:	cmp    ah,0xff
3003d18c:	ret    
3003d18d:	nop
3003d18e:	nop
3003d18f:	nop
3003d190:	(bad)  
3003d191:	(bad)  
3003d192:	(bad)  
3003d193:	(bad)  
3003d194:	js     0x3003d167
3003d196:	add    esi,DWORD PTR [eax]
3003d198:	mov    edx,DWORD PTR [esp+0x8]
3003d19c:	lea    eax,[edx+0xc]
3003d19f:	mov    ecx,DWORD PTR [edx-0x14]
3003d1a2:	xor    ecx,eax
3003d1a4:	call   0x3000115c
3003d1a9:	mov    eax,0x3003d1b4
3003d1ae:	jmp    0x30038270
3003d1b3:	nop
3003d1b4:	and    al,BYTE PTR ds:0x11993
3003d1ba:	add    BYTE PTR [eax],al
3003d1bc:	nop
3003d1bd:	rol    DWORD PTR [ebx],1
3003d1bf:	xor    BYTE PTR [eax],al
	...
3003d1d5:	add    BYTE PTR [eax],al
3003d1d7:	add    BYTE PTR [ebp-0x431613b3],cl
3003d1dd:	in     al,dx
3003d1de:	(bad)  
3003d1df:	dec    DWORD PTR [ebp-0x43160fb3]
3003d1e5:	jg     0x3003d1e3
3003d1e7:	dec    DWORD PTR [ebp-0x4b160fb3]
3003d1ed:	jg     0x3003d1eb
3003d1ef:	dec    DWORD PTR [ebx-0x531617b3]
3003d1f5:	jg     0x3003d1f3
3003d1f7:	dec    DWORD PTR [ebp-0x5b160fb3]
3003d1fd:	jg     0x3003d1fb
3003d1ff:	dec    DWORD PTR [ebp-0x63160fb3]
3003d205:	jg     0x3003d203
3003d207:	dec    DWORD PTR [ebp-0x6b160fb3]
3003d20d:	jg     0x3003d20b
3003d20f:	dec    DWORD PTR [ebx-0x731617b3]
3003d215:	jg     0x3003d213
3003d217:	dec    DWORD PTR [ebx-0x72f7dbac]
3003d21d:	inc    edx
3003d21e:	or     al,0x8b
3003d220:	dec    edx
3003d221:	in     al,0x33
3003d223:	enter  0x33e8,0x3f
3003d227:	cld    
3003d228:	(bad)  
3003d229:	mov    eax,0x3003d234
3003d22e:	jmp    0x30038270
3003d233:	nop
3003d234:	and    al,BYTE PTR ds:0x81993
3003d23a:	add    BYTE PTR [eax],al
3003d23c:	nop
3003d23d:	adc    al,BYTE PTR [eax+esi*1]
	...
3003d258:	mov    eax,DWORD PTR [ebp-0x10]
3003d25b:	and    eax,0x1
3003d25e:	je     0x3003d26c
3003d260:	and    DWORD PTR [ebp-0x10],0xfffffffe
3003d264:	mov    ecx,DWORD PTR [ebp+0x8]
3003d267:	jmp    0x300051a4
3003d26c:	ret    
3003d26d:	lea    ecx,[ebp-0x14]
3003d270:	jmp    0x300051a4
3003d275:	lea    ecx,[ebp-0x14]
3003d278:	jmp    0x300051a4
3003d27d:	mov    ecx,DWORD PTR [ebp-0x18]
3003d280:	jmp    0x300051a4
3003d285:	mov    edx,DWORD PTR [esp+0x8]
3003d289:	lea    eax,[edx+0xc]
3003d28c:	mov    ecx,DWORD PTR [edx-0x1c]
3003d28f:	xor    ecx,eax
3003d291:	call   0x3000115c
3003d296:	mov    eax,0x3003d2a0
3003d29b:	jmp    0x30038270
3003d2a0:	and    al,BYTE PTR ds:0x41993
3003d2a6:	add    BYTE PTR [eax],al
3003d2a8:	jo     0x3003d2bc
3003d2aa:	add    al,0x30
	...
3003d2c4:	mov    ecx,DWORD PTR [ebp-0x10]
3003d2c7:	jmp    0x3001733d
3003d2cc:	(bad)  
3003d2cd:	(bad)  
3003d2ce:	(bad)  
3003d2cf:	inc    esp
3003d2d1:	rol    BYTE PTR [ebx],cl
3003d2d3:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003d2d9:	inc    edx
3003d2da:	or     al,0x8b
3003d2dc:	dec    edx
3003d2dd:	in     al,dx
3003d2de:	xor    ecx,eax
3003d2e0:	call   0x3000115c
3003d2e5:	mov    eax,0x3003d2f0
3003d2ea:	jmp    0x30038270
3003d2ef:	nop
3003d2f0:	and    al,BYTE PTR ds:0x11993
3003d2f6:	add    BYTE PTR [eax],al
3003d2f8:	int3   
3003d2f9:	rol    BYTE PTR [ebx],cl
3003d2fb:	xor    BYTE PTR [eax],al
	...
3003d311:	add    BYTE PTR [eax],al
3003d313:	add    BYTE PTR [ebp-0x7f1627b3],cl
3003d319:	jmp    0x3003d319
3003d31b:	dec    DWORD PTR [ebp-0x411623b3]
3003d321:	dec    edi
3003d322:	std    
3003d323:	dec    DWORD PTR [ebp-0x491623b3]
3003d329:	dec    edi
3003d32a:	std    
3003d32b:	dec    DWORD PTR [ebp-0x511623b3]
3003d331:	dec    edi
3003d332:	std    
3003d333:	dec    DWORD PTR [ebp+0x68e9d44d]
3003d339:	jle    0x3003d337
3003d33b:	dec    DWORD PTR [ebp+0x60e9d44d]
3003d341:	jle    0x3003d33f
3003d343:	dec    DWORD PTR [ebx-0x72f7dbac]
3003d349:	inc    edx
3003d34a:	or     al,0x8b
3003d34c:	dec    edx
3003d34d:	mov    eax,0x7e8c833
3003d352:	ds cld 
3003d354:	dec    DWORD PTR [ebx-0x37cc03b6]
3003d35a:	call   0x3000115c
3003d35f:	mov    eax,0x3003d36c
3003d364:	jmp    0x30038270
3003d369:	nop
3003d36a:	nop
3003d36b:	nop
3003d36c:	and    al,BYTE PTR ds:0x61993
3003d372:	add    BYTE PTR [eax],al
3003d374:	clc    
3003d375:	adc    al,BYTE PTR [eax+esi*1]
	...
3003d390:	mov    ecx,DWORD PTR [ebp-0x10]
3003d393:	jmp    0x3001733d
3003d398:	mov    ecx,DWORD PTR [ebp+0x8]
3003d39b:	jmp    0x300051a4
3003d3a0:	mov    ecx,DWORD PTR [ebp-0x10]
3003d3a3:	add    ecx,0x20
3003d3a6:	jmp    0x300051a4
3003d3ab:	mov    ecx,DWORD PTR [ebp-0x10]
3003d3ae:	add    ecx,0x24
3003d3b1:	jmp    0x30016cb1
3003d3b6:	push   0x300051a4
3003d3bb:	push   0xa
3003d3bd:	push   0x4
3003d3bf:	mov    eax,DWORD PTR [ebp-0x10]
3003d3c2:	add    eax,0x38
3003d3c5:	push   eax
3003d3c6:	call   0x300170cf
3003d3cb:	ret    
3003d3cc:	mov    edx,DWORD PTR [esp+0x8]
3003d3d0:	lea    eax,[edx+0xc]
3003d3d3:	mov    ecx,DWORD PTR [edx-0x14]
3003d3d6:	xor    ecx,eax
3003d3d8:	call   0x3000115c
3003d3dd:	mov    eax,0x3003d3e8
3003d3e2:	jmp    0x30038270
3003d3e7:	nop
3003d3e8:	and    al,BYTE PTR ds:0x51993
3003d3ee:	add    BYTE PTR [eax],al
3003d3f0:	cmp    BYTE PTR [ebx],dl
3003d3f2:	add    al,0x30
	...
3003d40c:	mov    ecx,DWORD PTR [ebp-0x10]
3003d40f:	jmp    0x3001733d
3003d414:	mov    ecx,DWORD PTR [ebp-0x10]
3003d417:	add    ecx,0x20
3003d41a:	jmp    0x300051a4
3003d41f:	mov    ecx,DWORD PTR [ebp-0x10]
3003d422:	add    ecx,0x24
3003d425:	jmp    0x30016cb1
3003d42a:	push   0x300051a4
3003d42f:	push   0xa
3003d431:	push   0x4
3003d433:	mov    eax,DWORD PTR [ebp-0x10]
3003d436:	add    eax,0x38
3003d439:	push   eax
3003d43a:	call   0x300170cf
3003d43f:	ret    
3003d440:	mov    ecx,DWORD PTR [ebp-0x14]
3003d443:	jmp    0x300051a4
3003d448:	mov    edx,DWORD PTR [esp+0x8]
3003d44c:	lea    eax,[edx+0xc]
3003d44f:	mov    ecx,DWORD PTR [edx-0x18]
3003d452:	xor    ecx,eax
3003d454:	call   0x3000115c
3003d459:	mov    eax,0x3003d464
3003d45e:	jmp    0x30038270
3003d463:	nop
3003d464:	and    al,BYTE PTR ds:0x51993
3003d46a:	add    BYTE PTR [eax],al
3003d46c:	pusha  
3003d46d:	adc    eax,DWORD PTR [eax+esi*1]
	...
3003d488:	lea    ecx,[ebp-0x14]
3003d48b:	jmp    0x300051a4
3003d490:	lea    ecx,[ebp-0x14]
3003d493:	jmp    0x300051a4
3003d498:	mov    edx,DWORD PTR [esp+0x8]
3003d49c:	lea    eax,[edx+0xc]
3003d49f:	mov    ecx,DWORD PTR [edx-0x40]
3003d4a2:	xor    ecx,eax
3003d4a4:	call   0x3000115c
3003d4a9:	mov    eax,0x3003d4b4
3003d4ae:	jmp    0x30038270
3003d4b3:	nop
3003d4b4:	and    al,BYTE PTR ds:0x21993
3003d4ba:	add    BYTE PTR [eax],al
3003d4bc:	cwde   
3003d4bd:	adc    eax,DWORD PTR [eax+esi*1]
	...
3003d4d8:	lea    ecx,[ebp-0x24]
3003d4db:	jmp    0x300051a4
3003d4e0:	lea    ecx,[ebp-0x24]
3003d4e3:	jmp    0x300051a4
3003d4e8:	mov    edx,DWORD PTR [esp+0x8]
3003d4ec:	lea    eax,[edx+0xc]
3003d4ef:	mov    ecx,DWORD PTR [edx-0x3c]
3003d4f2:	xor    ecx,eax
3003d4f4:	call   0x3000115c
3003d4f9:	mov    ecx,DWORD PTR [edx-0x4]
3003d4fc:	xor    ecx,eax
3003d4fe:	call   0x3000115c
3003d503:	mov    eax,0x3003d510
3003d508:	jmp    0x30038270
3003d50d:	nop
3003d50e:	nop
3003d50f:	nop
3003d510:	and    al,BYTE PTR ds:0x21993
3003d516:	add    BYTE PTR [eax],al
3003d518:	mov    BYTE PTR [ebx],dl
3003d51a:	add    al,0x30
	...
3003d534:	lea    ecx,[ebp-0x10]
3003d537:	jmp    0x300051a4
3003d53c:	lea    ecx,[ebp-0x10]
3003d53f:	jmp    0x300051a4
3003d544:	mov    edx,DWORD PTR [esp+0x8]
3003d548:	lea    eax,[edx+0xc]
3003d54b:	mov    ecx,DWORD PTR [edx-0x14]
3003d54e:	xor    ecx,eax
3003d550:	call   0x3000115c
3003d555:	mov    eax,0x3003d560
3003d55a:	jmp    0x30038270
3003d55f:	nop
3003d560:	and    al,BYTE PTR ds:0x21993
3003d566:	add    BYTE PTR [eax],al
3003d568:	sub    BYTE PTR [ebx],dl
3003d56a:	add    al,0x30
	...
3003d584:	lea    ecx,[ebp-0x7c]
3003d587:	jmp    0x300051a4
3003d58c:	lea    ecx,[ebp-0x7c]
3003d58f:	jmp    0x300051a4
3003d594:	lea    ecx,[ebp-0x70]
3003d597:	jmp    0x300051a4
3003d59c:	lea    ecx,[ebp-0x70]
3003d59f:	jmp    0x300051a4
3003d5a4:	lea    ecx,[ebp-0x74]
3003d5a7:	jmp    0x300051a4
3003d5ac:	lea    ecx,[ebp-0x74]
3003d5af:	jmp    0x300051a4
3003d5b4:	mov    ecx,DWORD PTR [ebp-0x88]
3003d5ba:	jmp    0x300051a4
3003d5bf:	mov    eax,DWORD PTR [ebp-0x84]
3003d5c5:	and    eax,0x1
3003d5c8:	je     0x3003d5dc
3003d5ca:	and    DWORD PTR [ebp-0x84],0xfffffffe
3003d5d1:	mov    ecx,DWORD PTR [ebp-0x88]
3003d5d7:	jmp    0x300051a4
3003d5dc:	ret    
3003d5dd:	lea    ecx,[ebp-0x78]
3003d5e0:	jmp    0x300051a4
3003d5e5:	lea    ecx,[ebp-0x78]
3003d5e8:	jmp    0x300051a4
3003d5ed:	lea    ecx,[ebp-0x78]
3003d5f0:	jmp    0x300051a4
3003d5f5:	lea    ecx,[ebp-0x74]
3003d5f8:	jmp    0x300051a4
3003d5fd:	lea    ecx,[ebp-0x70]
3003d600:	jmp    0x300051a4
3003d605:	lea    ecx,[ebp-0x7c]
3003d608:	jmp    0x300051a4
3003d60d:	mov    edx,DWORD PTR [esp+0x8]
3003d611:	lea    eax,[edx+0xc]
3003d614:	mov    ecx,DWORD PTR [edx-0x8c]
3003d61a:	xor    ecx,eax
3003d61c:	call   0x3000115c
3003d621:	mov    ecx,DWORD PTR [edx-0x4]
3003d624:	xor    ecx,eax
3003d626:	call   0x3000115c
3003d62b:	mov    eax,0x3003d638
3003d630:	jmp    0x30038270
3003d635:	nop
3003d636:	nop
3003d637:	nop
3003d638:	and    al,BYTE PTR ds:0xe1993
3003d63e:	add    BYTE PTR [eax],al
3003d640:	test   al,0x13
3003d642:	add    al,0x30
	...
3003d65c:	mov    ecx,DWORD PTR [ebp-0x10]
3003d65f:	add    ecx,0x8
3003d662:	jmp    0x300051a4
3003d667:	mov    ecx,DWORD PTR [ebp-0x10]
3003d66a:	add    ecx,0xc
3003d66d:	jmp    0x300051a4
3003d672:	mov    ecx,DWORD PTR [ebp-0x10]
3003d675:	add    ecx,0x18
3003d678:	jmp    0x300051a4
3003d67d:	mov    ecx,DWORD PTR [ebp+0x8]
3003d680:	jmp    0x300051a4
3003d685:	mov    ecx,DWORD PTR [ebp-0x10]
3003d688:	add    ecx,0x2c
3003d68b:	jmp    0x300051a4
3003d690:	lea    ecx,[ebp+0x8]
3003d693:	jmp    0x300051a4
3003d698:	lea    ecx,[ebp+0x8]
3003d69b:	jmp    0x300051a4
3003d6a0:	lea    ecx,[ebp+0x8]
3003d6a3:	jmp    0x300051a4
3003d6a8:	lea    ecx,[ebp+0x8]
3003d6ab:	jmp    0x300051a4
3003d6b0:	lea    ecx,[ebp+0x8]
3003d6b3:	jmp    0x300122e2
3003d6b8:	lea    ecx,[ebp+0x8]
3003d6bb:	jmp    0x300122e2
3003d6c0:	lea    ecx,[ebp+0xc]
3003d6c3:	jmp    0x3002be9c
3003d6c8:	lea    ecx,[ebp+0x8]
3003d6cb:	jmp    0x300122e2
3003d6d0:	mov    edx,DWORD PTR [esp+0x8]
3003d6d4:	lea    eax,[edx+0xc]
3003d6d7:	mov    ecx,DWORD PTR [edx-0x14]
3003d6da:	xor    ecx,eax
3003d6dc:	call   0x3000115c
3003d6e1:	mov    eax,0x3003d6ec
3003d6e6:	jmp    0x30038270
3003d6eb:	nop
3003d6ec:	and    al,BYTE PTR ds:0xd1993
3003d6f2:	add    BYTE PTR [eax],al
3003d6f4:	pop    eax
3003d6f5:	adc    al,0x4
3003d6f7:	xor    BYTE PTR [eax],al
	...
3003d70d:	add    BYTE PTR [eax],al
3003d70f:	add    BYTE PTR [ebx-0x3e7c0fb3],cl
3003d715:	or     cl,ch
3003d717:	mov    DWORD PTR [edx-0x4],edi
3003d71a:	dec    DWORD PTR [ebx-0x3e7c0fb3]
3003d720:	or     al,0xe9
3003d722:	jle    0x3003d79e
3003d724:	cld    
3003d725:	dec    DWORD PTR [ebx-0x3e7c0fb3]
3003d72b:	sbb    cl,ch
3003d72d:	jae    0x3003d7a9
3003d72f:	cld    
3003d730:	dec    DWORD PTR [ebx-0x3e7c0fb3]
3003d736:	sub    al,0xe9
3003d738:	push   0x8bfffc7a
3003d73d:	dec    ebp
3003d73e:	in     al,dx
3003d73f:	jmp    0x300051a4
3003d744:	mov    ecx,DWORD PTR [ebp-0x14]
3003d747:	jmp    0x300051a4
3003d74c:	mov    ecx,DWORD PTR [ebp-0x14]
3003d74f:	jmp    0x300051a4
3003d754:	mov    ecx,DWORD PTR [ebp-0x14]
3003d757:	jmp    0x300051a4
3003d75c:	mov    edx,DWORD PTR [esp+0x8]
3003d760:	lea    eax,[edx+0xc]
3003d763:	mov    ecx,DWORD PTR [edx-0x18]
3003d766:	xor    ecx,eax
3003d768:	call   0x3000115c
3003d76d:	mov    eax,0x3003d778
3003d772:	jmp    0x30038270
3003d777:	nop
3003d778:	and    al,BYTE PTR ds:0x81993
3003d77e:	add    BYTE PTR [eax],al
3003d780:	sbb    BYTE PTR [esp+eax*1],dl
3003d783:	xor    BYTE PTR [eax],al
	...
3003d799:	add    BYTE PTR [eax],al
3003d79b:	add    BYTE PTR [ecx+0x3004309c],bh
3003d7a1:	jmp    0x300051a4
3003d7a6:	nop
3003d7a7:	nop
3003d7a8:	(bad)  
3003d7a9:	(bad)  
3003d7aa:	(bad)  
3003d7ab:	call   FWORD PTR [edi+edx*8+0x548b3003]
3003d7b2:	and    al,0x8
3003d7b4:	lea    eax,[edx+0xc]
3003d7b7:	mov    ecx,DWORD PTR [edx-0x10]
3003d7ba:	xor    ecx,eax
3003d7bc:	call   0x3000115c
3003d7c1:	mov    eax,0x3003d7cc
3003d7c6:	jmp    0x30038270
3003d7cb:	nop
3003d7cc:	and    al,BYTE PTR ds:0x11993
3003d7d2:	add    BYTE PTR [eax],al
3003d7d4:	test   al,0xd7
3003d7d6:	add    esi,DWORD PTR [eax]
	...
3003d7f0:	lea    ecx,[ebp-0x21c]
3003d7f6:	jmp    0x300051a4
3003d7fb:	lea    ecx,[ebp-0x21c]
3003d801:	jmp    0x300051a4
3003d806:	lea    ecx,[ebp-0x220]
3003d80c:	jmp    0x300051a4
3003d811:	lea    ecx,[ebp-0x220]
3003d817:	jmp    0x300051a4
3003d81c:	lea    ecx,[ebp-0x21c]
3003d822:	jmp    0x300051a4
3003d827:	mov    ecx,DWORD PTR [ebp-0x220]
3003d82d:	jmp    0x300051a4
3003d832:	mov    eax,DWORD PTR [ebp-0x224]
3003d838:	and    eax,0x1
3003d83b:	je     0x3003d84f
3003d83d:	and    DWORD PTR [ebp-0x224],0xfffffffe
3003d844:	mov    ecx,DWORD PTR [ebp-0x228]
3003d84a:	jmp    0x300051a4
3003d84f:	ret    
3003d850:	mov    edx,DWORD PTR [esp+0x8]
3003d854:	lea    eax,[edx+0xc]
3003d857:	mov    ecx,DWORD PTR [edx-0x22c]
3003d85d:	xor    ecx,eax
3003d85f:	call   0x3000115c
3003d864:	mov    ecx,DWORD PTR [edx-0x4]
3003d867:	xor    ecx,eax
3003d869:	call   0x3000115c
3003d86e:	mov    eax,0x3003d878
3003d873:	jmp    0x30038270
3003d878:	and    al,BYTE PTR ds:0x71993
3003d87e:	add    BYTE PTR [eax],al
3003d880:	rcl    BYTE PTR [esp+eax*1],0x30
	...
3003d89c:	push   DWORD PTR [ebp-0x10]
3003d89f:	call   0x3000460f
3003d8a4:	pop    ecx
3003d8a5:	ret    
3003d8a6:	nop
3003d8a7:	nop
3003d8a8:	(bad)  
3003d8a9:	(bad)  
3003d8aa:	(bad)  
3003d8ab:	call   FWORD PTR [eax+ebx*8+0x548b3003]
3003d8b2:	and    al,0x8
3003d8b4:	lea    eax,[edx+0xc]
3003d8b7:	mov    ecx,DWORD PTR [edx-0x14]
3003d8ba:	xor    ecx,eax
3003d8bc:	call   0x3000115c
3003d8c1:	mov    eax,0x3003d8cc
3003d8c6:	jmp    0x30038270
3003d8cb:	nop
3003d8cc:	and    al,BYTE PTR ds:0x11993
3003d8d2:	add    BYTE PTR [eax],al
3003d8d4:	test   al,0xd8
3003d8d6:	add    esi,DWORD PTR [eax]
	...
3003d8f0:	lea    ecx,[ebp+0x8]
3003d8f3:	jmp    0x30019a8f
3003d8f8:	(bad)  
3003d8f9:	(bad)  
3003d8fa:	(bad)  
3003d8fb:	push   eax
3003d8fd:	fadd   DWORD PTR [ebx]
3003d8ff:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003d905:	inc    edx
3003d906:	or     al,0x8b
3003d908:	dec    edx
3003d909:	lock xor ecx,eax
3003d90c:	call   0x3000115c
3003d911:	mov    eax,0x3003d91c
3003d916:	jmp    0x30038270
3003d91b:	nop
3003d91c:	and    al,BYTE PTR ds:0x11993
3003d922:	add    BYTE PTR [eax],al
3003d924:	clc    
3003d925:	fadd   DWORD PTR [ebx]
3003d927:	xor    BYTE PTR [eax],al
	...
3003d93d:	add    BYTE PTR [eax],al
3003d93f:	add    BYTE PTR [ebp+0x47e9f04d],cl
3003d945:	sar    ebp,0xff
3003d948:	lea    ecx,[ebp+0x8]
3003d94b:	jmp    0x30019a8f
3003d950:	mov    edx,DWORD PTR [esp+0x8]
3003d954:	lea    eax,[edx+0xc]
3003d957:	mov    ecx,DWORD PTR [edx-0x14]
3003d95a:	xor    ecx,eax
3003d95c:	call   0x3000115c
3003d961:	mov    eax,0x3003d96c
3003d966:	jmp    0x30038270
3003d96b:	nop
3003d96c:	and    al,BYTE PTR ds:0x21993
3003d972:	add    BYTE PTR [eax],al
3003d974:	clc    
3003d975:	adc    al,0x4
3003d977:	xor    BYTE PTR [eax],al
	...
3003d98d:	add    BYTE PTR [eax],al
3003d98f:	add    BYTE PTR [ebx+0xce9084d],cl
3003d995:	js     0x3003d993
3003d997:	dec    DWORD PTR [ebx-0x1f7c0fbb]
3003d99d:	add    DWORD PTR [esp+ecx*1-0x7d],esi
3003d9a1:	lock dec BYTE PTR gs:[ebx-0x716f7b3]
3003d9a9:	ja     0x3003d9a7
3003d9ab:	inc    ebx
3003d9ad:	lea    ecx,[ebp+0xc]
3003d9b0:	jmp    0x30019a8f
3003d9b5:	mov    ecx,DWORD PTR [ebp+0x8]
3003d9b8:	jmp    0x300051a4
3003d9bd:	mov    edx,DWORD PTR [esp+0x8]
3003d9c1:	lea    eax,[edx+0xc]
3003d9c4:	mov    ecx,DWORD PTR [edx-0x14]
3003d9c7:	xor    ecx,eax
3003d9c9:	call   0x3000115c
3003d9ce:	mov    eax,0x3003d9d8
3003d9d3:	jmp    0x30038270
3003d9d8:	and    al,BYTE PTR ds:0x41993
3003d9de:	add    BYTE PTR [eax],al
3003d9e0:	or     BYTE PTR ds:0x3004,dl
	...
3003d9fa:	add    BYTE PTR [eax],al
3003d9fc:	lea    ecx,[ebp+0x8]
3003d9ff:	jmp    0x300051a4
3003da04:	lea    ecx,[ebp+0x8]
3003da07:	jmp    0x300051a4
3003da0c:	mov    edx,DWORD PTR [esp+0x8]
3003da10:	lea    eax,[edx+0xc]
3003da13:	mov    ecx,DWORD PTR [edx-0x10]
3003da16:	xor    ecx,eax
3003da18:	call   0x3000115c
3003da1d:	mov    eax,0x3003da28
3003da22:	jmp    0x30038270
3003da27:	nop
3003da28:	and    al,BYTE PTR ds:0x21993
3003da2e:	add    BYTE PTR [eax],al
3003da30:	dec    eax
3003da31:	adc    eax,0x3004
	...
3003da4a:	add    BYTE PTR [eax],al
3003da4c:	lea    ecx,[ebp+0xc]
3003da4f:	jmp    0x300051a4
3003da54:	lea    ecx,[ebp+0xc]
3003da57:	jmp    0x300051a4
3003da5c:	mov    edx,DWORD PTR [esp+0x8]
3003da60:	lea    eax,[edx+0xc]
3003da63:	mov    ecx,DWORD PTR [edx-0x10]
3003da66:	xor    ecx,eax
3003da68:	call   0x3000115c
3003da6d:	mov    eax,0x3003da78
3003da72:	jmp    0x30038270
3003da77:	nop
3003da78:	and    al,BYTE PTR ds:0x21993
3003da7e:	add    BYTE PTR [eax],al
3003da80:	cmp    BYTE PTR ds:0x3004,dl
	...
3003da9a:	add    BYTE PTR [eax],al
3003da9c:	mov    ecx,DWORD PTR [ebp+0x8]
3003da9f:	jmp    0x300051a4
3003daa4:	mov    eax,DWORD PTR [ebp-0x10]
3003daa7:	and    eax,0x1
3003daaa:	je     0x3003dab8
3003daac:	and    DWORD PTR [ebp-0x10],0xfffffffe
3003dab0:	mov    ecx,DWORD PTR [ebp+0x8]
3003dab3:	jmp    0x300051a4
3003dab8:	ret    
3003dab9:	mov    edx,DWORD PTR [esp+0x8]
3003dabd:	lea    eax,[edx+0xc]
3003dac0:	mov    ecx,DWORD PTR [edx-0x14]
3003dac3:	xor    ecx,eax
3003dac5:	call   0x3000115c
3003daca:	mov    eax,0x3003dad4
3003dacf:	jmp    0x30038270
3003dad4:	and    al,BYTE PTR ds:0x21993
3003dada:	add    BYTE PTR [eax],al
3003dadc:	sub    BYTE PTR ds:0x3004,dl
	...
3003daf6:	add    BYTE PTR [eax],al
3003daf8:	lea    ecx,[ebp-0x28]
3003dafb:	jmp    0x300051a4
3003db00:	lea    ecx,[ebp-0x28]
3003db03:	jmp    0x300051a4
3003db08:	lea    ecx,[ebp-0x28]
3003db0b:	jmp    0x300051a4
3003db10:	lea    ecx,[ebp-0x28]
3003db13:	jmp    0x300051a4
3003db18:	mov    edx,DWORD PTR [esp+0x8]
3003db1c:	lea    eax,[edx+0xc]
3003db1f:	mov    ecx,DWORD PTR [edx-0x2c]
3003db22:	xor    ecx,eax
3003db24:	call   0x3000115c
3003db29:	mov    ecx,DWORD PTR [edx-0x4]
3003db2c:	xor    ecx,eax
3003db2e:	call   0x3000115c
3003db33:	mov    eax,0x3003db40
3003db38:	jmp    0x30038270
3003db3d:	nop
3003db3e:	nop
3003db3f:	nop
3003db40:	and    al,BYTE PTR ds:0x51993
3003db46:	add    BYTE PTR [eax],al
3003db48:	pop    eax
3003db49:	adc    eax,0x3004
	...
3003db62:	add    BYTE PTR [eax],al
3003db64:	push   DWORD PTR [ebp-0x10]
3003db67:	call   0x3000460f
3003db6c:	pop    ecx
3003db6d:	ret    
3003db6e:	nop
3003db6f:	nop
3003db70:	(bad)  
3003db71:	(bad)  
3003db72:	(bad)  
3003db73:	jmp    DWORD PTR [ebx+ebx*8+0x3]
3003db77:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003db7d:	inc    edx
3003db7e:	or     al,0x8b
3003db80:	dec    edx
3003db81:	fdiv   QWORD PTR [ebx]
3003db83:	enter  0xd3e8,0x35
3003db87:	cld    
3003db88:	(bad)  
3003db89:	mov    eax,0x3003db94
3003db8e:	jmp    0x30038270
3003db93:	nop
3003db94:	and    al,BYTE PTR ds:0x11993
3003db9a:	add    BYTE PTR [eax],al
3003db9c:	jo     0x3003db79
3003db9e:	add    esi,DWORD PTR [eax]
	...
3003dbb8:	lea    ecx,[ebp+0x8]
3003dbbb:	jmp    0x300051a4
3003dbc0:	lea    ecx,[ebp+0x8]
3003dbc3:	jmp    0x300051a4
3003dbc8:	mov    edx,DWORD PTR [esp+0x8]
3003dbcc:	lea    eax,[edx+0xc]
3003dbcf:	mov    ecx,DWORD PTR [edx-0x14]
3003dbd2:	xor    ecx,eax
3003dbd4:	call   0x3000115c
3003dbd9:	mov    eax,0x3003dbe4
3003dbde:	jmp    0x30038270
3003dbe3:	nop
3003dbe4:	and    al,BYTE PTR ds:0x21993
3003dbea:	add    BYTE PTR [eax],al
3003dbec:	adc    BYTE PTR ds:0x3004,0x0
	...
3003dc07:	add    BYTE PTR [ebp-0x6b1613b3],cl
3003dc0d:	jne    0x3003dc0b
3003dc0f:	dec    DWORD PTR [ebx-0x1f7c0fbb]
3003dc15:	add    DWORD PTR [esp+ecx*1-0x7d],esi
3003dc19:	lock dec BYTE PTR gs:[ebx-0x7f16f7b3]
3003dc21:	jne    0x3003dc1f
3003dc23:	inc    ebx
3003dc25:	lea    ecx,[ebp-0x14]
3003dc28:	jmp    0x300051a4
3003dc2d:	mov    edx,DWORD PTR [esp+0x8]
3003dc31:	lea    eax,[edx+0xc]
3003dc34:	mov    ecx,DWORD PTR [edx-0x18]
3003dc37:	xor    ecx,eax
3003dc39:	call   0x3000115c
3003dc3e:	mov    eax,0x3003dc48
3003dc43:	jmp    0x30038270
3003dc48:	and    al,BYTE PTR ds:0x31993
3003dc4e:	add    BYTE PTR [eax],al
3003dc50:	nop
3003dc51:	adc    eax,0x3004
	...
3003dc6a:	add    BYTE PTR [eax],al
3003dc6c:	mov    ecx,0x30043b5c
3003dc71:	jmp    0x300051a4
3003dc76:	nop
3003dc77:	nop
3003dc78:	(bad)  
3003dc79:	(bad)  
3003dc7a:	(bad)  
3003dc7b:	jmp    FWORD PTR [esp+ebx*8+0x3]
3003dc7f:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003dc85:	inc    edx
3003dc86:	or     al,0x8b
3003dc88:	dec    edx
3003dc89:	lock xor ecx,eax
3003dc8c:	call   0x3000115c
3003dc91:	mov    eax,0x3003dc9c
3003dc96:	jmp    0x30038270
3003dc9b:	nop
3003dc9c:	and    al,BYTE PTR ds:0x11993
3003dca2:	add    BYTE PTR [eax],al
3003dca4:	js     0x3003dc82
3003dca6:	add    esi,DWORD PTR [eax]
	...
3003dcc0:	lea    ecx,[ebp-0x24]
3003dcc3:	jmp    0x300051a4
3003dcc8:	lea    ecx,[ebp-0x24]
3003dccb:	jmp    0x300051a4
3003dcd0:	lea    ecx,[ebp-0x24]
3003dcd3:	jmp    0x300051a4
3003dcd8:	mov    edx,DWORD PTR [esp+0x8]
3003dcdc:	lea    eax,[edx+0xc]
3003dcdf:	mov    ecx,DWORD PTR [edx-0x30]
3003dce2:	xor    ecx,eax
3003dce4:	call   0x3000115c
3003dce9:	mov    ecx,DWORD PTR [edx-0x4]
3003dcec:	xor    ecx,eax
3003dcee:	call   0x3000115c
3003dcf3:	mov    eax,0x3003dd00
3003dcf8:	jmp    0x30038270
3003dcfd:	nop
3003dcfe:	nop
3003dcff:	nop
3003dd00:	and    al,BYTE PTR ds:0x51993
3003dd06:	add    BYTE PTR [eax],al
3003dd08:	rcl    BYTE PTR ds:0x3004,0x0
	...
3003dd23:	add    BYTE PTR [ebp+0x63e9e84d],cl
3003dd29:	mov    ebp,0x4d8dfffd
3003dd2e:	lock jmp 0x300051a4
3003dd34:	lea    ecx,[ebp-0x10]
3003dd37:	jmp    0x300051a4
3003dd3c:	mov    edx,DWORD PTR [esp+0x8]
3003dd40:	lea    eax,[edx+0xc]
3003dd43:	mov    ecx,DWORD PTR [edx-0x1c]
3003dd46:	xor    ecx,eax
3003dd48:	call   0x3000115c
3003dd4d:	mov    eax,0x3003dd58
3003dd52:	jmp    0x30038270
3003dd57:	nop
3003dd58:	and    al,BYTE PTR ds:0x31993
3003dd5e:	add    BYTE PTR [eax],al
3003dd60:	test   al,0x15
3003dd62:	add    al,0x30
	...
3003dd7c:	lea    ecx,[ebp+0x10]
3003dd7f:	jmp    0x300051a4
3003dd84:	lea    ecx,[ebp-0x14]
3003dd87:	jmp    0x300051a4
3003dd8c:	lea    ecx,[ebp-0x14]
3003dd8f:	jmp    0x300051a4
3003dd94:	lea    ecx,[ebp+0x10]
3003dd97:	jmp    0x300051a4
3003dd9c:	mov    edx,DWORD PTR [esp+0x8]
3003dda0:	lea    eax,[edx+0xc]
3003dda3:	mov    ecx,DWORD PTR [edx-0x18]
3003dda6:	xor    ecx,eax
3003dda8:	call   0x3000115c
3003ddad:	mov    eax,0x3003ddb8
3003ddb2:	jmp    0x30038270
3003ddb7:	nop
3003ddb8:	and    al,BYTE PTR ds:0x41993
3003ddbe:	add    BYTE PTR [eax],al
3003ddc0:	dec    eax
3003ddc1:	push   ss
3003ddc2:	add    al,0x30
	...
3003dddc:	lea    ecx,[ebp-0x14]
3003dddf:	jmp    0x300051a4
3003dde4:	mov    ecx,DWORD PTR [ebp-0x18]
3003dde7:	jmp    0x300051a4
3003ddec:	mov    ecx,DWORD PTR [ebp-0x10]
3003ddef:	jmp    0x300051a4
3003ddf4:	mov    ecx,DWORD PTR [ebp-0x18]
3003ddf7:	jmp    0x300051a4
3003ddfc:	mov    ecx,DWORD PTR [ebp-0x1c]
3003ddff:	jmp    0x300051a4
3003de04:	mov    ecx,DWORD PTR [ebp-0x18]
3003de07:	jmp    0x300051a4
3003de0c:	lea    ecx,[ebp-0x14]
3003de0f:	jmp    0x300051a4
3003de14:	mov    edx,DWORD PTR [esp+0x8]
3003de18:	lea    eax,[edx+0xc]
3003de1b:	mov    ecx,DWORD PTR [edx-0x20]
3003de1e:	xor    ecx,eax
3003de20:	call   0x3000115c
3003de25:	mov    eax,0x3003de30
3003de2a:	jmp    0x30038270
3003de2f:	nop
3003de30:	and    al,BYTE PTR ds:0x71993
3003de36:	add    BYTE PTR [eax],al
3003de38:	call   0x3033e252
	...
3003de51:	add    BYTE PTR [eax],al
3003de53:	add    BYTE PTR [ebp+0x48e9144d],cl
3003de59:	jae    0x3003de57
3003de5b:	dec    DWORD PTR [ebp+0x40e9084d]
3003de61:	jae    0x3003de5f
3003de63:	dec    DWORD PTR [ebp+0x38e9084d]
3003de69:	jae    0x3003de67
3003de6b:	dec    DWORD PTR [ebp+0x30e9144d]
3003de71:	jae    0x3003de6f
3003de73:	dec    DWORD PTR [ebx-0x72f7dbac]
3003de79:	inc    edx
3003de7a:	or     al,0x8b
3003de7c:	dec    edx
3003de7d:	lock xor ecx,eax
3003de80:	call   0x3000115c
3003de85:	mov    eax,0x3003de90
3003de8a:	jmp    0x30038270
3003de8f:	nop
3003de90:	and    al,BYTE PTR ds:0x51993
3003de96:	add    BYTE PTR [eax],al
3003de98:	push   0x300416
	...
3003deb1:	add    BYTE PTR [eax],al
3003deb3:	add    BYTE PTR [ebx-0x17160fb3],cl
3003deb9:	jb     0x3003deb7
3003debb:	dec    DWORD PTR [ebx-0x1f16f3b3]
3003dec1:	jb     0x3003debf
3003dec3:	dec    DWORD PTR [ebx-0x2716f3b3]
3003dec9:	jb     0x3003dec7
3003decb:	dec    DWORD PTR [ebx-0x2f16efb3]
3003ded1:	jb     0x3003decf
3003ded3:	dec    DWORD PTR [ebx-0x3716efb3]
3003ded9:	jb     0x3003ded7
3003dedb:	dec    DWORD PTR [ebx-0x72f7dbac]
3003dee1:	inc    edx
3003dee2:	or     al,0x8b
3003dee4:	dec    edx
3003dee5:	in     al,dx
3003dee6:	xor    ecx,eax
3003dee8:	call   0x3000115c
3003deed:	mov    eax,0x3003def8
3003def2:	jmp    0x30038270
3003def7:	nop
3003def8:	and    al,BYTE PTR ds:0x51993
3003defe:	add    BYTE PTR [eax],al
3003df00:	and    BYTE PTR [esi],dl
3003df02:	add    al,0x30
	...
3003df1c:	mov    ecx,0x30043b60
3003df21:	jmp    0x300051a4
3003df26:	nop
3003df27:	nop
3003df28:	(bad)  
3003df29:	(bad)  
3003df2a:	(bad)  
3003df2b:	call   FWORD PTR [edi+ebx*8]
3003df2e:	add    esi,DWORD PTR [eax]
3003df30:	mov    edx,DWORD PTR [esp+0x8]
3003df34:	lea    eax,[edx+0xc]
3003df37:	mov    ecx,DWORD PTR [edx-0x10]
3003df3a:	xor    ecx,eax
3003df3c:	call   0x3000115c
3003df41:	mov    eax,0x3003df4c
3003df46:	jmp    0x30038270
3003df4b:	nop
3003df4c:	and    al,BYTE PTR ds:0x11993
3003df52:	add    BYTE PTR [eax],al
3003df54:	sub    bh,bl
3003df56:	add    esi,DWORD PTR [eax]
	...
3003df70:	lea    ecx,[ebp-0x10]
3003df73:	jmp    0x300051a4
3003df78:	lea    ecx,[ebp-0x10]
3003df7b:	jmp    0x300051a4
3003df80:	lea    ecx,[ebp-0x10]
3003df83:	jmp    0x300051a4
3003df88:	mov    edx,DWORD PTR [esp+0x8]
3003df8c:	lea    eax,[edx+0xc]
3003df8f:	mov    ecx,DWORD PTR [edx-0x14]
3003df92:	xor    ecx,eax
3003df94:	call   0x3000115c
3003df99:	mov    eax,0x3003dfa4
3003df9e:	jmp    0x30038270
3003dfa3:	nop
3003dfa4:	and    al,BYTE PTR ds:0x31993
3003dfaa:	add    BYTE PTR [eax],al
3003dfac:	nop
3003dfad:	push   ss
3003dfae:	add    al,0x30
	...
3003dfc8:	lea    ecx,[ebp-0x18]
3003dfcb:	jmp    0x3002ad60
3003dfd0:	lea    ecx,[ebp-0x20]
3003dfd3:	jmp    0x3002ad60
3003dfd8:	mov    ecx,DWORD PTR [ebp-0x2c]
3003dfdb:	jmp    0x30016974
3003dfe0:	mov    edx,DWORD PTR [esp+0x8]
3003dfe4:	lea    eax,[edx-0x2c]
3003dfe7:	mov    ecx,DWORD PTR [edx-0x30]
3003dfea:	xor    ecx,eax
3003dfec:	call   0x3000115c
3003dff1:	mov    eax,0x3003dffc
3003dff6:	jmp    0x30038270
3003dffb:	nop
3003dffc:	and    al,BYTE PTR ds:0x31993
3003e002:	add    BYTE PTR [eax],al
3003e004:	xor    BYTE PTR [edi],dl
3003e006:	add    al,0x30
	...
3003e01c:	add    DWORD PTR [eax],eax
3003e01e:	add    BYTE PTR [eax],al
3003e020:	lea    ecx,[ebp-0x3c]
3003e023:	jmp    0x3000c725
3003e028:	lea    ecx,[ebp-0x44]
3003e02b:	jmp    0x3002ad60
3003e030:	lea    ecx,[ebp-0x2c]
3003e033:	jmp    0x3002ad6c
3003e038:	lea    ecx,[ebp-0x48]
3003e03b:	jmp    0x300051a4
3003e040:	mov    edx,DWORD PTR [esp+0x8]
3003e044:	lea    eax,[edx-0x4c]
3003e047:	mov    ecx,DWORD PTR [edx-0x50]
3003e04a:	xor    ecx,eax
3003e04c:	call   0x3000115c
3003e051:	mov    eax,0x3003e05c
3003e056:	jmp    0x30038270
3003e05b:	nop
3003e05c:	and    al,BYTE PTR ds:0x41993
3003e062:	add    BYTE PTR [eax],al
3003e064:	adc    BYTE PTR [edi],dl
3003e066:	add    al,0x30
	...
3003e07c:	add    DWORD PTR [eax],eax
3003e07e:	add    BYTE PTR [eax],al
3003e080:	push   DWORD PTR [ebp-0x1c]
3003e083:	call   DWORD PTR ds:0x300452ac
3003e089:	pop    ecx
3003e08a:	ret    
3003e08b:	mov    ecx,DWORD PTR [ebp-0x1c]
3003e08e:	jmp    0x3002ae42
3003e093:	mov    eax,DWORD PTR [ebp-0x1c]
3003e096:	add    eax,0xc
3003e099:	push   eax
3003e09a:	push   DWORD PTR [ebp-0x20]
3003e09d:	call   0x3002ae0a
3003e0a2:	pop    ecx
3003e0a3:	pop    ecx
3003e0a4:	ret    
3003e0a5:	mov    eax,DWORD PTR [ebp-0x18]
3003e0a8:	and    eax,0x1
3003e0ab:	je     0x3003e0b9
3003e0ad:	and    DWORD PTR [ebp-0x18],0xfffffffe
3003e0b1:	mov    ecx,DWORD PTR [ebp-0x14]
3003e0b4:	jmp    0x3002ad60
3003e0b9:	ret    
3003e0ba:	mov    edx,DWORD PTR [esp+0x8]
3003e0be:	lea    eax,[edx+0xc]
3003e0c1:	mov    ecx,DWORD PTR [edx-0x28]
3003e0c4:	xor    ecx,eax
3003e0c6:	call   0x3000115c
3003e0cb:	mov    eax,0x3003e0d8
3003e0d0:	jmp    0x30038270
3003e0d5:	nop
3003e0d6:	nop
3003e0d7:	nop
3003e0d8:	and    al,BYTE PTR ds:0x41993
3003e0de:	add    BYTE PTR [eax],al
3003e0e0:	dec    eax
3003e0e1:	pop    ss
3003e0e2:	add    al,0x30
	...
3003e0f8:	add    DWORD PTR [eax],eax
3003e0fa:	add    BYTE PTR [eax],al
3003e0fc:	mov    ecx,DWORD PTR [ebp-0x10]
3003e0ff:	jmp    0x300179fa
3003e104:	(bad)  
3003e105:	(bad)  
3003e106:	(bad)  
3003e107:	(bad)  
3003e108:	cld    
3003e109:	loopne 0x3003e10e
3003e10b:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003e111:	inc    edx
3003e112:	or     al,0x8b
3003e114:	dec    edx
3003e115:	in     al,dx
3003e116:	xor    ecx,eax
3003e118:	call   0x3000115c
3003e11d:	mov    eax,0x3003e128
3003e122:	jmp    0x30038270
3003e127:	nop
3003e128:	and    al,BYTE PTR ds:0x11993
3003e12e:	add    BYTE PTR [eax],al
3003e130:	add    al,0xe1
3003e132:	add    esi,DWORD PTR [eax]
	...
3003e148:	add    DWORD PTR [eax],eax
3003e14a:	add    BYTE PTR [eax],al
3003e14c:	mov    ecx,DWORD PTR [ebp-0x10]
3003e14f:	jmp    0x300051a4
3003e154:	(bad)  
3003e155:	(bad)  
3003e156:	(bad)  
3003e157:	dec    DWORD PTR [ecx+eiz*8+0x3]
3003e15b:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003e161:	inc    edx
3003e162:	or     al,0x8b
3003e164:	dec    edx
3003e165:	in     al,dx
3003e166:	xor    ecx,eax
3003e168:	call   0x3000115c
3003e16d:	mov    eax,0x3003e178
3003e172:	jmp    0x30038270
3003e177:	nop
3003e178:	and    al,BYTE PTR ds:0x11993
3003e17e:	add    BYTE PTR [eax],al
3003e180:	push   esp
3003e181:	loope  0x3003e186
3003e183:	xor    BYTE PTR [eax],al
	...
3003e195:	add    BYTE PTR [eax],al
3003e197:	add    BYTE PTR [ecx],al
3003e199:	add    BYTE PTR [eax],al
3003e19b:	add    BYTE PTR [ebp+0xe9104d],cl
3003e1a1:	jo     0x3003e19f
3003e1a3:	dec    DWORD PTR [ebx-0x3e7c0fb3]
3003e1a9:	add    al,0xe9
3003e1ab:	cmc    
3003e1ac:	outs   dx,DWORD PTR ds:[esi]
3003e1ad:	cld    
3003e1ae:	dec    DWORD PTR [ebx-0x72f7dbac]
3003e1b4:	inc    edx
3003e1b5:	or     al,0x8b
3003e1b7:	dec    edx
3003e1b8:	in     al,dx
3003e1b9:	xor    ecx,eax
3003e1bb:	call   0x3000115c
3003e1c0:	mov    eax,0x3003e1cc
3003e1c5:	jmp    0x30038270
3003e1ca:	nop
3003e1cb:	nop
3003e1cc:	and    al,BYTE PTR ds:0x21993
3003e1d2:	add    BYTE PTR [eax],al
3003e1d4:	adc    al,0x18
3003e1d6:	add    al,0x30
	...
3003e1ec:	add    DWORD PTR [eax],eax
3003e1ee:	add    BYTE PTR [eax],al
3003e1f0:	mov    ecx,DWORD PTR [ebp-0x10]
3003e1f3:	jmp    0x3001798b
3003e1f8:	mov    ecx,DWORD PTR [ebp-0x10]
3003e1fb:	add    ecx,0x620
3003e201:	jmp    0x300178e6
3003e206:	mov    ecx,DWORD PTR [ebp-0x10]
3003e209:	add    ecx,0x66c
3003e20f:	jmp    0x3002be9c
3003e214:	mov    ecx,DWORD PTR [ebp-0x10]
3003e217:	add    ecx,0x670
3003e21d:	jmp    0x300051a4
3003e222:	mov    ecx,DWORD PTR [ebp-0x10]
3003e225:	add    ecx,0x674
3003e22b:	jmp    0x300051a4
3003e230:	mov    ecx,DWORD PTR [ebp-0x10]
3003e233:	add    ecx,0x678
3003e239:	jmp    0x300051a4
3003e23e:	mov    ecx,DWORD PTR [ebp-0x10]
3003e241:	add    ecx,0x67c
3003e247:	jmp    0x300178b2
3003e24c:	mov    edx,DWORD PTR [esp+0x8]
3003e250:	lea    eax,[edx+0xc]
3003e253:	mov    ecx,DWORD PTR [edx-0x14]
3003e256:	xor    ecx,eax
3003e258:	call   0x3000115c
3003e25d:	mov    eax,0x3003e268
3003e262:	jmp    0x30038270
3003e267:	nop
3003e268:	and    al,BYTE PTR ds:0x71993
3003e26e:	add    BYTE PTR [eax],al
3003e270:	les    edx,FWORD PTR [edi]
3003e272:	add    al,0x30
	...
3003e288:	add    DWORD PTR [eax],eax
3003e28a:	add    BYTE PTR [eax],al
3003e28c:	mov    ecx,DWORD PTR [ebp-0x10]
3003e28f:	jmp    0x3001798b
3003e294:	(bad)  
3003e295:	(bad)  
3003e296:	(bad)  
3003e297:	dec    DWORD PTR [edx+eiz*8+0x548b3003]
3003e29e:	and    al,0x8
3003e2a0:	lea    eax,[edx+0xc]
3003e2a3:	mov    ecx,DWORD PTR [edx-0x14]
3003e2a6:	xor    ecx,eax
3003e2a8:	call   0x3000115c
3003e2ad:	mov    eax,0x3003e2b8
3003e2b2:	jmp    0x30038270
3003e2b7:	nop
3003e2b8:	and    al,BYTE PTR ds:0x11993
3003e2be:	add    BYTE PTR [eax],al
3003e2c0:	xchg   esp,eax
3003e2c1:	loop   0x3003e2c6
3003e2c3:	xor    BYTE PTR [eax],al
	...
3003e2d5:	add    BYTE PTR [eax],al
3003e2d7:	add    BYTE PTR [ecx],al
3003e2d9:	add    BYTE PTR [eax],al
3003e2db:	add    BYTE PTR [ebp-0x4716f7b3],cl
3003e2e1:	(bad)  
3003e2e3:	(bad)  
3003e2e4:	(bad)  
3003e2e5:	(bad)  
3003e2e6:	(bad)  
3003e2e7:	(bad)  
3003e2e8:	fsubr  st(2),st
3003e2ea:	add    esi,DWORD PTR [eax]
3003e2ec:	mov    edx,DWORD PTR [esp+0x8]
3003e2f0:	lea    eax,[edx+0xc]
3003e2f3:	mov    ecx,DWORD PTR [edx-0x18]
3003e2f6:	xor    ecx,eax
3003e2f8:	call   0x3000115c
3003e2fd:	mov    eax,0x3003e308
3003e302:	jmp    0x30038270
3003e307:	nop
3003e308:	and    al,BYTE PTR ds:0x11993
3003e30e:	add    BYTE PTR [eax],al
3003e310:	in     al,0xe2
3003e312:	add    esi,DWORD PTR [eax]
	...
3003e328:	add    DWORD PTR [eax],eax
3003e32a:	add    BYTE PTR [eax],al
3003e32c:	lea    ecx,[ebp-0x18]
3003e32f:	jmp    0x3002be9c
3003e334:	lea    ecx,[ebp-0x14]
3003e337:	jmp    0x3002be9c
3003e33c:	lea    ecx,[ebp-0x10]
3003e33f:	jmp    0x3002ae34
3003e344:	mov    edx,DWORD PTR [esp+0x8]
3003e348:	lea    eax,[edx+0xc]
3003e34b:	mov    ecx,DWORD PTR [edx-0x2c]
3003e34e:	xor    ecx,eax
3003e350:	call   0x3000115c
3003e355:	mov    eax,0x3003e360
3003e35a:	jmp    0x30038270
3003e35f:	nop
3003e360:	and    al,BYTE PTR ds:0x31993
3003e366:	add    BYTE PTR [eax],al
3003e368:	lods   al,BYTE PTR ds:[esi]
3003e369:	pop    ss
3003e36a:	add    al,0x30
	...
3003e380:	add    DWORD PTR [eax],eax
3003e382:	add    BYTE PTR [eax],al
3003e384:	push   0x300430f0
3003e389:	push   DWORD PTR [ebp-0x1c]
3003e38c:	call   0x30037e0c
3003e391:	pop    ecx
3003e392:	pop    ecx
3003e393:	ret    
3003e394:	(bad)  
3003e395:	(bad)  
3003e396:	(bad)  
3003e397:	inc    DWORD PTR [eax]
3003e399:	add    BYTE PTR [eax],al
3003e39b:	add    BYTE PTR [eax],al
3003e39d:	add    BYTE PTR [eax],al
3003e39f:	add    BYTE PTR [ebx+eiz*8-0xcffd],al
3003e3a6:	(bad)  
3003e3a7:	inc    DWORD PTR [eax]
3003e3a9:	add    BYTE PTR [eax],al
3003e3ab:	add    BYTE PTR [ebx-0x72f7dbac],cl
3003e3b1:	inc    edx
3003e3b2:	or     al,0x8b
3003e3b4:	dec    edx
3003e3b5:	loopne 0x3003e3ea
3003e3b7:	enter  0x9fe8,0x2d
3003e3bb:	cld    
3003e3bc:	(bad)  
3003e3bd:	mov    eax,0x3003e3c8
3003e3c2:	jmp    0x30038270
3003e3c7:	nop
3003e3c8:	and    al,BYTE PTR ds:0x31993
3003e3ce:	add    BYTE PTR [eax],al
3003e3d0:	xchg   esp,eax
3003e3d1:	jecxz  0x3003e3d6
3003e3d3:	xor    BYTE PTR [ecx],al
3003e3d5:	add    BYTE PTR [eax],al
3003e3d7:	add    BYTE PTR [eax+0x17],ch
3003e3da:	add    al,0x30
	...
3003e3e8:	add    DWORD PTR [eax],eax
3003e3ea:	add    BYTE PTR [eax],al
3003e3ec:	lea    ecx,[ebp-0x18]
3003e3ef:	jmp    0x3002ad60
3003e3f4:	(bad)  
3003e3f5:	(bad)  
3003e3f6:	(bad)  
3003e3f7:	(bad)  
3003e3f8:	in     al,dx
3003e3f9:	jecxz  0x3003e3fe
3003e3fb:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003e401:	inc    edx
3003e402:	or     al,0x8b
3003e404:	dec    edx
3003e405:	in     al,0x33
3003e407:	enter  0x4fe8,0x2d
3003e40b:	cld    
3003e40c:	(bad)  
3003e40d:	mov    eax,0x3003e418
3003e412:	jmp    0x30038270
3003e417:	nop
3003e418:	and    al,BYTE PTR ds:0x11993
3003e41e:	add    BYTE PTR [eax],al
3003e420:	hlt    
3003e421:	jecxz  0x3003e426
3003e423:	xor    BYTE PTR [eax],al
	...
3003e435:	add    BYTE PTR [eax],al
3003e437:	add    BYTE PTR [ecx],al
3003e439:	add    BYTE PTR [eax],al
3003e43b:	add    BYTE PTR [ebp+0x58e9944d],cl
3003e441:	(bad)  
3003e443:	(bad)  
3003e444:	(bad)  
3003e445:	(bad)  
3003e446:	(bad)  
3003e447:	(bad)  
3003e448:	cmp    al,0xe4
3003e44a:	add    esi,DWORD PTR [eax]
3003e44c:	mov    edx,DWORD PTR [esp+0x8]
3003e450:	lea    eax,[edx+0xc]
3003e453:	mov    ecx,DWORD PTR [edx-0x7c]
3003e456:	xor    ecx,eax
3003e458:	call   0x3000115c
3003e45d:	mov    ecx,DWORD PTR [edx-0x4]
3003e460:	xor    ecx,eax
3003e462:	call   0x3000115c
3003e467:	mov    eax,0x3003e474
3003e46c:	jmp    0x30038270
3003e471:	nop
3003e472:	nop
3003e473:	nop
3003e474:	and    al,BYTE PTR ds:0x11993
3003e47a:	add    BYTE PTR [eax],al
3003e47c:	inc    esp
3003e47d:	in     al,0x3
3003e47f:	xor    BYTE PTR [eax],al
	...
3003e491:	add    BYTE PTR [eax],al
3003e493:	add    BYTE PTR [ecx],al
3003e495:	add    BYTE PTR [eax],al
3003e497:	add    BYTE PTR [ebp-0x31623b3],cl
3003e49d:	fsin   
3003e49f:	(bad)  
3003e4a0:	(bad)  
3003e4a1:	(bad)  
3003e4a2:	(bad)  
3003e4a3:	call   FWORD PTR [eax-0x74cffc1c]
3003e4a9:	push   esp
3003e4aa:	and    al,0x8
3003e4ac:	lea    eax,[edx+0xc]
3003e4af:	mov    ecx,DWORD PTR [edx-0x28]
3003e4b2:	xor    ecx,eax
3003e4b4:	call   0x3000115c
3003e4b9:	mov    ecx,DWORD PTR [edx-0x4]
3003e4bc:	xor    ecx,eax
3003e4be:	call   0x3000115c
3003e4c3:	mov    eax,0x3003e4d0
3003e4c8:	jmp    0x30038270
3003e4cd:	nop
3003e4ce:	nop
3003e4cf:	nop
3003e4d0:	and    al,BYTE PTR ds:0x11993
3003e4d6:	add    BYTE PTR [eax],al
3003e4d8:	mov    al,ds:0x3003e4
	...
3003e4ed:	add    BYTE PTR [eax],al
3003e4ef:	add    BYTE PTR [ecx],al
3003e4f1:	add    BYTE PTR [eax],al
3003e4f3:	add    BYTE PTR [ebp-0x5f1613b3],cl
3003e4f9:	fsin   
3003e4fb:	dec    DWORD PTR [ebp-0x67160fb3]
3003e501:	fsin   
3003e503:	dec    DWORD PTR [ebp-0x2916f7b3]
3003e509:	cmp    eax,0x4d8dfffd
3003e50e:	call   0x2d41b3fc
3003e513:	dec    DWORD PTR [ebx-0x72f7dbac]
3003e519:	inc    edx
3003e51a:	or     al,0x8b
3003e51c:	dec    edx
3003e51d:	loopne 0x3003e552
3003e51f:	enter  0x37e8,0x2c
3003e523:	cld    
3003e524:	(bad)  
3003e525:	mov    eax,0x3003e530
3003e52a:	jmp    0x30038270
3003e52f:	nop
3003e530:	and    al,BYTE PTR ds:0x41993
3003e536:	add    BYTE PTR [eax],al
3003e538:	mov    WORD PTR [edi],ss
3003e53a:	add    al,0x30
	...
3003e550:	add    DWORD PTR [eax],eax
3003e552:	add    BYTE PTR [eax],al
3003e554:	lea    ecx,[ebp-0x1230]
3003e55a:	jmp    0x300051a4
3003e55f:	lea    ecx,[ebp-0x121c]
3003e565:	jmp    0x300122e2
3003e56a:	jmp    0x30031c4e
3003e56f:	mov    edx,DWORD PTR [esp+0x8]
3003e573:	lea    eax,[edx+0xc]
3003e576:	mov    ecx,DWORD PTR [edx-0x12b4]
3003e57c:	xor    ecx,eax
3003e57e:	call   0x3000115c
3003e583:	mov    ecx,DWORD PTR [edx-0x4]
3003e586:	xor    ecx,eax
3003e588:	call   0x3000115c
3003e58d:	mov    eax,0x3003e598
3003e592:	jmp    0x30038270
3003e597:	nop
3003e598:	and    al,BYTE PTR ds:0x31993
3003e59e:	add    BYTE PTR [eax],al
3003e5a0:	cld    
3003e5a1:	pop    ss
3003e5a2:	add    al,0x30
	...
3003e5b8:	add    DWORD PTR [eax],eax
3003e5ba:	add    BYTE PTR [eax],al
3003e5bc:	lea    ecx,[ebp-0x14]
3003e5bf:	jmp    0x300051a4
3003e5c4:	lea    ecx,[ebp-0x10]
3003e5c7:	jmp    0x300051a4
3003e5cc:	mov    edx,DWORD PTR [esp+0x8]
3003e5d0:	lea    eax,[edx+0xc]
3003e5d3:	mov    ecx,DWORD PTR [edx-0x18]
3003e5d6:	xor    ecx,eax
3003e5d8:	call   0x3000115c
3003e5dd:	mov    eax,0x3003e5e8
3003e5e2:	jmp    0x30038270
3003e5e7:	nop
3003e5e8:	and    al,BYTE PTR ds:0x21993
3003e5ee:	add    BYTE PTR [eax],al
3003e5f0:	and    al,0x18
3003e5f2:	add    al,0x30
	...
3003e608:	add    DWORD PTR [eax],eax
3003e60a:	add    BYTE PTR [eax],al
3003e60c:	mov    ecx,DWORD PTR [ebp-0x10]
3003e60f:	jmp    0x30016974
3003e614:	(bad)  
3003e615:	(bad)  
3003e616:	(bad)  
3003e617:	dec    DWORD PTR [esi+eiz*8]
3003e61a:	add    esi,DWORD PTR [eax]
3003e61c:	mov    edx,DWORD PTR [esp+0x8]
3003e620:	lea    eax,[edx+0xc]
3003e623:	mov    ecx,DWORD PTR [edx-0x14]
3003e626:	xor    ecx,eax
3003e628:	call   0x3000115c
3003e62d:	mov    eax,0x3003e638
3003e632:	jmp    0x30038270
3003e637:	nop
3003e638:	and    al,BYTE PTR ds:0x11993
3003e63e:	add    BYTE PTR [eax],al
3003e640:	adc    al,0xe6
3003e642:	add    esi,DWORD PTR [eax]
	...
3003e658:	add    DWORD PTR [eax],eax
3003e65a:	add    BYTE PTR [eax],al
3003e65c:	mov    ecx,DWORD PTR [ebp-0x10]
3003e65f:	jmp    0x3002c2ab
3003e664:	(bad)  
3003e665:	(bad)  
3003e666:	(bad)  
3003e667:	call   FWORD PTR [esi+eiz*8+0x3]
3003e66b:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003e671:	inc    edx
3003e672:	or     al,0x8b
3003e674:	dec    edx
3003e675:	in     al,dx
3003e676:	xor    ecx,eax
3003e678:	call   0x3000115c
3003e67d:	mov    eax,0x3003e688
3003e682:	jmp    0x30038270
3003e687:	nop
3003e688:	and    al,BYTE PTR ds:0x11993
3003e68e:	add    BYTE PTR [eax],al
3003e690:	fs out 0x3,al
3003e693:	xor    BYTE PTR [eax],al
	...
3003e6a5:	add    BYTE PTR [eax],al
3003e6a7:	add    BYTE PTR [ecx],al
3003e6a9:	add    BYTE PTR [eax],al
3003e6ab:	add    BYTE PTR [ebp-0xf16dbb3],cl
3003e6b1:	push   0xfffffffc
3003e6b3:	dec    DWORD PTR [ebp-0x4116f3b3]
3003e6b9:	(bad)  
3003e6ba:	(bad)  
3003e6bb:	dec    DWORD PTR [ebp-0x1f16f7b3]
3003e6c1:	push   0xfffffffc
3003e6c3:	dec    DWORD PTR [ebx-0x3e7c0fb3]
3003e6c9:	add    al,0xe9
3003e6cb:	aad    0x6a
3003e6cd:	cld    
3003e6ce:	dec    DWORD PTR [ebx-0x3e7c0fb3]
3003e6d4:	or     cl,ch
3003e6d6:	mov    al,ds:0x8bfffec6
3003e6db:	push   esp
3003e6dc:	and    al,0x8
3003e6de:	lea    eax,[edx+0xc]
3003e6e1:	mov    ecx,DWORD PTR [edx-0x14]
3003e6e4:	xor    ecx,eax
3003e6e6:	call   0x3000115c
3003e6eb:	mov    eax,0x3003e6f8
3003e6f0:	jmp    0x30038270
3003e6f5:	nop
3003e6f6:	nop
3003e6f7:	nop
3003e6f8:	and    al,BYTE PTR ds:0x51993
3003e6fe:	add    BYTE PTR [eax],al
3003e700:	je     0x3003e71a
3003e702:	add    al,0x30
	...
3003e718:	add    DWORD PTR [eax],eax
3003e71a:	add    BYTE PTR [eax],al
3003e71c:	mov    ecx,DWORD PTR [ebp-0x10]
3003e71f:	add    ecx,0x8
3003e722:	jmp    0x30016980
3003e727:	mov    ecx,DWORD PTR [ebp-0x10]
3003e72a:	add    ecx,0x38
3003e72d:	jmp    0x3002c2ab
3003e732:	mov    ecx,DWORD PTR [ebp-0x10]
3003e735:	add    ecx,0x3c
3003e738:	jmp    0x3002c2ab
3003e73d:	mov    edx,DWORD PTR [esp+0x8]
3003e741:	lea    eax,[edx+0xc]
3003e744:	mov    ecx,DWORD PTR [edx-0x14]
3003e747:	xor    ecx,eax
3003e749:	call   0x3000115c
3003e74e:	mov    eax,0x3003e758
3003e753:	jmp    0x30038270
3003e758:	and    al,BYTE PTR ds:0x31993
3003e75e:	add    BYTE PTR [eax],al
3003e760:	pushf  
3003e761:	sbb    BYTE PTR [eax+esi*1],al
	...
3003e778:	add    DWORD PTR [eax],eax
3003e77a:	add    BYTE PTR [eax],al
3003e77c:	lea    ecx,[ebp-0x14]
3003e77f:	jmp    0x3002c2ab
3003e784:	lea    ecx,[ebp-0x10]
3003e787:	jmp    0x3002c2ab
3003e78c:	mov    edx,DWORD PTR [esp+0x8]
3003e790:	lea    eax,[edx+0xc]
3003e793:	mov    ecx,DWORD PTR [edx-0x1c]
3003e796:	xor    ecx,eax
3003e798:	call   0x3000115c
3003e79d:	mov    eax,0x3003e7a8
3003e7a2:	jmp    0x30038270
3003e7a7:	nop
3003e7a8:	and    al,BYTE PTR ds:0x21993
3003e7ae:	add    BYTE PTR [eax],al
3003e7b0:	xor    al,0x18
3003e7b2:	add    al,0x30
	...
3003e7c8:	add    DWORD PTR [eax],eax
3003e7ca:	add    BYTE PTR [eax],al
3003e7cc:	lea    ecx,[ebp-0x1c]
3003e7cf:	jmp    0x3002c06b
3003e7d4:	(bad)  
3003e7d5:	(bad)  
3003e7d6:	(bad)  
3003e7d7:	dec    esp
3003e7d9:	out    0x3,eax
3003e7db:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003e7e1:	inc    edx
3003e7e2:	or     al,0x8b
3003e7e4:	dec    edx
3003e7e5:	aam    0x33
3003e7e7:	enter  0x6fe8,0x29
3003e7eb:	cld    
3003e7ec:	(bad)  
3003e7ed:	mov    eax,0x3003e7f8
3003e7f2:	jmp    0x30038270
3003e7f7:	nop
3003e7f8:	and    al,BYTE PTR ds:0x11993
3003e7fe:	add    BYTE PTR [eax],al
3003e800:	aam    0xe7
3003e802:	add    esi,DWORD PTR [eax]
	...
3003e818:	add    DWORD PTR [eax],eax
3003e81a:	add    BYTE PTR [eax],al
3003e81c:	lea    ecx,[ebp-0x10]
3003e81f:	jmp    0x300122e2
3003e824:	(bad)  
3003e825:	(bad)  
3003e826:	(bad)  
3003e827:	call   FWORD PTR [eax+ebp*8]
3003e82a:	add    esi,DWORD PTR [eax]
3003e82c:	mov    edx,DWORD PTR [esp+0x8]
3003e830:	lea    eax,[edx+0xc]
3003e833:	mov    ecx,DWORD PTR [edx-0x24]
3003e836:	xor    ecx,eax
3003e838:	call   0x3000115c
3003e83d:	mov    eax,0x3003e848
3003e842:	jmp    0x30038270
3003e847:	nop
3003e848:	and    al,BYTE PTR ds:0x11993
3003e84e:	add    BYTE PTR [eax],al
3003e850:	and    al,0xe8
3003e852:	add    esi,DWORD PTR [eax]
	...
3003e868:	add    DWORD PTR [eax],eax
3003e86a:	add    BYTE PTR [eax],al
3003e86c:	lea    ecx,[ebp+0x1c]
3003e86f:	jmp    0x3002ad7a
3003e874:	mov    ecx,DWORD PTR [ebp-0x50]
3003e877:	jmp    0x300051a4
3003e87c:	mov    ecx,DWORD PTR [ebp-0x4c]
3003e87f:	jmp    0x3002ad7a
3003e884:	lea    ecx,[ebp-0x44]
3003e887:	jmp    0x30016980
3003e88c:	mov    edx,DWORD PTR [esp+0x8]
3003e890:	lea    eax,[edx+0xc]
3003e893:	mov    ecx,DWORD PTR [edx-0x78]
3003e896:	xor    ecx,eax
3003e898:	call   0x3000115c
3003e89d:	mov    ecx,DWORD PTR [edx-0x4]
3003e8a0:	xor    ecx,eax
3003e8a2:	call   0x3000115c
3003e8a7:	mov    eax,0x3003e8b4
3003e8ac:	jmp    0x30038270
3003e8b1:	nop
3003e8b2:	nop
3003e8b3:	nop
3003e8b4:	and    al,BYTE PTR ds:0x41993
3003e8ba:	add    BYTE PTR [eax],al
3003e8bc:	mov    ah,0x18
3003e8be:	add    al,0x30
	...
3003e8d4:	add    DWORD PTR [eax],eax
3003e8d6:	add    BYTE PTR [eax],al
3003e8d8:	lea    ecx,[ebp-0x20]
3003e8db:	jmp    0x3000c725
3003e8e0:	(bad)  
3003e8e1:	(bad)  
3003e8e2:	(bad)  
3003e8e3:	(bad)  
3003e8e4:	fsubr  st,st(0)
3003e8e6:	add    esi,DWORD PTR [eax]
3003e8e8:	mov    edx,DWORD PTR [esp+0x8]
3003e8ec:	lea    eax,[edx+0xc]
3003e8ef:	mov    ecx,DWORD PTR [edx-0x24]
3003e8f2:	xor    ecx,eax
3003e8f4:	call   0x3000115c
3003e8f9:	mov    eax,0x3003e904
3003e8fe:	jmp    0x30038270
3003e903:	nop
3003e904:	and    al,BYTE PTR ds:0x11993
3003e90a:	add    BYTE PTR [eax],al
3003e90c:	loopne 0x3003e8f6
3003e90e:	add    esi,DWORD PTR [eax]
	...
3003e924:	add    DWORD PTR [eax],eax
3003e926:	add    BYTE PTR [eax],al
3003e928:	lea    ecx,[ebp-0x224]
3003e92e:	jmp    0x300051a4
3003e933:	lea    ecx,[ebp-0x238]
3003e939:	jmp    0x3000c725
3003e93e:	lea    ecx,[ebp-0x220]
3003e944:	jmp    0x300051a4
3003e949:	lea    ecx,[ebp-0x21c]
3003e94f:	jmp    0x300051a4
3003e954:	mov    edx,DWORD PTR [esp+0x8]
3003e958:	lea    eax,[edx+0xc]
3003e95b:	mov    ecx,DWORD PTR [edx-0x23c]
3003e961:	xor    ecx,eax
3003e963:	call   0x3000115c
3003e968:	mov    ecx,DWORD PTR [edx-0x4]
3003e96b:	xor    ecx,eax
3003e96d:	call   0x3000115c
3003e972:	mov    eax,0x3003e97c
3003e977:	jmp    0x30038270
3003e97c:	and    al,BYTE PTR ds:0x41993
3003e982:	add    BYTE PTR [eax],al
3003e984:	aam    0x18
3003e986:	add    al,0x30
	...
3003e99c:	add    DWORD PTR [eax],eax
3003e99e:	add    BYTE PTR [eax],al
3003e9a0:	lea    ecx,[ebp+0xc]
3003e9a3:	jmp    0x300122e2
3003e9a8:	(bad)  
3003e9a9:	(bad)  
3003e9aa:	(bad)  
3003e9ab:	jmp    DWORD PTR [eax-0x74cffc17]
3003e9b1:	push   esp
3003e9b2:	and    al,0x8
3003e9b4:	lea    eax,[edx+0xc]
3003e9b7:	mov    ecx,DWORD PTR [edx-0x10]
3003e9ba:	xor    ecx,eax
3003e9bc:	call   0x3000115c
3003e9c1:	mov    eax,0x3003e9cc
3003e9c6:	jmp    0x30038270
3003e9cb:	nop
3003e9cc:	and    al,BYTE PTR ds:0x11993
3003e9d2:	add    BYTE PTR [eax],al
3003e9d4:	test   al,0xe9
3003e9d6:	add    esi,DWORD PTR [eax]
	...
3003e9ec:	add    DWORD PTR [eax],eax
3003e9ee:	add    BYTE PTR [eax],al
3003e9f0:	lea    ecx,[ebp-0x2c]
3003e9f3:	jmp    0x3000c725
3003e9f8:	lea    ecx,[ebp-0x18]
3003e9fb:	jmp    0x300051a4
3003ea00:	lea    ecx,[ebp-0x1c]
3003ea03:	jmp    0x3002c36f
3003ea08:	mov    edx,DWORD PTR [esp+0x8]
3003ea0c:	lea    eax,[edx+0xc]
3003ea0f:	mov    ecx,DWORD PTR [edx-0x30]
3003ea12:	xor    ecx,eax
3003ea14:	call   0x3000115c
3003ea19:	mov    eax,0x3003ea24
3003ea1e:	jmp    0x30038270
3003ea23:	nop
3003ea24:	and    al,BYTE PTR ds:0x31993
3003ea2a:	add    BYTE PTR [eax],al
3003ea2c:	inc    esp
3003ea2d:	sbb    BYTE PTR [eax+esi*1],al
	...
3003ea44:	add    DWORD PTR [eax],eax
3003ea46:	add    BYTE PTR [eax],al
3003ea48:	lea    ecx,[ebp-0x220]
3003ea4e:	jmp    0x300051a4
3003ea53:	lea    ecx,[ebp-0x220]
3003ea59:	jmp    0x300051a4
3003ea5e:	lea    ecx,[ebp-0x224]
3003ea64:	jmp    0x300051a4
3003ea69:	mov    edx,DWORD PTR [esp+0x8]
3003ea6d:	lea    eax,[edx+0xc]
3003ea70:	mov    ecx,DWORD PTR [edx-0x22c]
3003ea76:	xor    ecx,eax
3003ea78:	call   0x3000115c
3003ea7d:	mov    ecx,DWORD PTR [edx-0x4]
3003ea80:	xor    ecx,eax
3003ea82:	call   0x3000115c
3003ea87:	mov    eax,0x3003ea94
3003ea8c:	jmp    0x30038270
3003ea91:	nop
3003ea92:	nop
3003ea93:	nop
3003ea94:	and    al,BYTE PTR ds:0x31993
3003ea9a:	add    BYTE PTR [eax],al
3003ea9c:	pop    esp
3003ea9d:	sbb    BYTE PTR [eax+esi*1],al
	...
3003eab4:	add    DWORD PTR [eax],eax
3003eab6:	add    BYTE PTR [eax],al
3003eab8:	lea    ecx,[ebp-0x34]
3003eabb:	jmp    0x3001e881
3003eac0:	(bad)  
3003eac1:	(bad)  
3003eac2:	(bad)  
3003eac3:	(bad)  
3003eac4:	mov    eax,0x8b3003ea
3003eac9:	push   esp
3003eaca:	and    al,0x8
3003eacc:	lea    eax,[edx-0x3c]
3003eacf:	mov    ecx,DWORD PTR [edx-0x40]
3003ead2:	xor    ecx,eax
3003ead4:	call   0x3000115c
3003ead9:	mov    eax,0x3003eae4
3003eade:	jmp    0x30038270
3003eae3:	nop
3003eae4:	and    al,BYTE PTR ds:0x11993
3003eaea:	add    BYTE PTR [eax],al
3003eaec:	shr    dl,0x3
3003eaef:	xor    BYTE PTR [eax],al
	...
3003eb01:	add    BYTE PTR [eax],al
3003eb03:	add    BYTE PTR [ecx],al
3003eb05:	add    BYTE PTR [eax],al
3003eb07:	add    BYTE PTR [ebx-0x160fb3],cl
3003eb0d:	(bad)  
3003eb0f:	(bad)  
3003eb10:	(bad)  
3003eb11:	(bad)  
3003eb12:	(bad)  
3003eb13:	dec    DWORD PTR [eax]
3003eb15:	jmp    0x3003eb1a
3003eb17:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003eb1d:	inc    edx
3003eb1e:	or     al,0x8b
3003eb20:	dec    edx
3003eb21:	in     al,dx
3003eb22:	xor    ecx,eax
3003eb24:	call   0x3000115c
3003eb29:	mov    eax,0x3003eb34
3003eb2e:	jmp    0x30038270
3003eb33:	nop
3003eb34:	and    al,BYTE PTR ds:0x11993
3003eb3a:	add    BYTE PTR [eax],al
3003eb3c:	adc    bl,ch
3003eb3e:	add    esi,DWORD PTR [eax]
	...
3003eb54:	add    DWORD PTR [eax],eax
3003eb56:	add    BYTE PTR [eax],al
3003eb58:	lea    ecx,[ebp-0x20]
3003eb5b:	jmp    0x300051ae
3003eb60:	(bad)  
3003eb61:	(bad)  
3003eb62:	(bad)  
3003eb63:	call   FWORD PTR [eax-0x15]
3003eb66:	add    esi,DWORD PTR [eax]
	...
3003eb78:	mov    edx,DWORD PTR [esp+0x8]
3003eb7c:	lea    eax,[edx+0xc]
3003eb7f:	mov    ecx,DWORD PTR [edx-0x24]
3003eb82:	xor    ecx,eax
3003eb84:	call   0x3000115c
3003eb89:	mov    eax,0x3003eb94
3003eb8e:	jmp    0x30038270
3003eb93:	nop
3003eb94:	and    al,BYTE PTR ds:0x31993
3003eb9a:	add    BYTE PTR [eax],al
3003eb9c:	pusha  
3003eb9d:	jmp    0x3003eba2
3003eb9f:	xor    BYTE PTR [ecx],al
3003eba1:	add    BYTE PTR [eax],al
3003eba3:	add    ah,dh
3003eba5:	sbb    BYTE PTR [eax+esi*1],al
	...
3003ebb4:	add    DWORD PTR [eax],eax
3003ebb6:	add    BYTE PTR [eax],al
3003ebb8:	lea    ecx,[ebp-0x28]
3003ebbb:	jmp    0x300051ae
3003ebc0:	lea    ecx,[ebp-0x1c]
3003ebc3:	jmp    0x3000c70f
3003ebc8:	mov    edx,DWORD PTR [esp+0x8]
3003ebcc:	lea    eax,[edx+0xc]
3003ebcf:	mov    ecx,DWORD PTR [edx-0x2c]
3003ebd2:	xor    ecx,eax
3003ebd4:	call   0x3000115c
3003ebd9:	mov    eax,0x3003ebe4
3003ebde:	jmp    0x30038270
3003ebe3:	nop
3003ebe4:	and    al,BYTE PTR ds:0x41993
3003ebea:	add    BYTE PTR [eax],al
3003ebec:	sbb    BYTE PTR [ecx],bl
3003ebee:	add    al,0x30
3003ebf0:	add    DWORD PTR [eax],eax
3003ebf2:	add    BYTE PTR [eax],al
3003ebf4:	cmp    BYTE PTR [ecx],bl
3003ebf6:	add    al,0x30
	...
3003ec04:	add    DWORD PTR [eax],eax
3003ec06:	add    BYTE PTR [eax],al
3003ec08:	lea    ecx,[ebp-0x40]
3003ec0b:	jmp    0x3002c61d
3003ec10:	lea    ecx,[ebp-0x5c]
3003ec13:	jmp    0x3002c61d
3003ec18:	lea    ecx,[ebp-0xac]
3003ec1e:	jmp    0x3002c661
3003ec23:	lea    ecx,[ebp-0x38]
3003ec26:	jmp    0x3002c661
3003ec2b:	lea    ecx,[ebp-0xa4]
3003ec31:	jmp    0x3002c661
3003ec36:	lea    ecx,[ebp-0x9c]
3003ec3c:	jmp    0x3002c661
3003ec41:	lea    ecx,[ebp-0x94]
3003ec47:	jmp    0x3002c661
3003ec4c:	lea    ecx,[ebp-0x84]
3003ec52:	jmp    0x300051a4
3003ec57:	lea    ecx,[ebp-0x68]
3003ec5a:	jmp    0x3002c5bb
3003ec5f:	lea    ecx,[ebp-0x2c]
3003ec62:	jmp    0x300051a4
3003ec67:	lea    ecx,[ebp-0x4c]
3003ec6a:	jmp    0x300051a4
3003ec6f:	lea    ecx,[ebp-0x30]
3003ec72:	jmp    0x300051a4
3003ec77:	lea    ecx,[ebp-0x80]
3003ec7a:	jmp    0x300051a4
3003ec7f:	lea    ecx,[ebp-0x8c]
3003ec85:	jmp    0x300051a4
3003ec8a:	lea    ecx,[ebp-0x18]
3003ec8d:	jmp    0x300051a4
3003ec92:	lea    ecx,[ebp-0x88]
3003ec98:	jmp    0x300051a4
3003ec9d:	lea    ecx,[ebp-0x50]
3003eca0:	jmp    0x300051a4
3003eca5:	lea    ecx,[ebp-0x54]
3003eca8:	jmp    0x300051a4
3003ecad:	lea    ecx,[ebp-0x24]
3003ecb0:	jmp    0x300051a4
3003ecb5:	mov    edx,DWORD PTR [esp+0x8]
3003ecb9:	lea    eax,[edx+0xc]
3003ecbc:	mov    ecx,DWORD PTR [edx-0xe0]
3003ecc2:	xor    ecx,eax
3003ecc4:	call   0x3000115c
3003ecc9:	mov    eax,0x3003ecd8
3003ecce:	jmp    0x30038270
3003ecd3:	nop
3003ecd4:	nop
3003ecd5:	nop
3003ecd6:	nop
3003ecd7:	nop
3003ecd8:	and    al,BYTE PTR ds:0x131993
3003ecde:	add    BYTE PTR [eax],al
3003ece0:	jo     0x3003ecfb
3003ece2:	add    al,0x30
	...
3003ecf8:	add    DWORD PTR [eax],eax
3003ecfa:	add    BYTE PTR [eax],al
3003ecfc:	add    BYTE PTR [eax],al
3003ecfe:	add    BYTE PTR [eax],al
3003ed00:	lea    ecx,[ebp-0x22c]
3003ed06:	jmp    0x300122e2
3003ed0b:	lea    ecx,[ebp-0x224]
3003ed11:	jmp    0x3001d2cb
3003ed16:	lea    ecx,[ebp-0x234]
3003ed1c:	jmp    0x300122e2
3003ed21:	lea    ecx,[ebp-0x238]
3003ed27:	jmp    0x3002d974
3003ed2c:	mov    edx,DWORD PTR [esp+0x8]
3003ed30:	lea    eax,[edx+0xc]
3003ed33:	mov    ecx,DWORD PTR [edx-0x23c]
3003ed39:	xor    ecx,eax
3003ed3b:	call   0x3000115c
3003ed40:	mov    ecx,DWORD PTR [edx-0x4]
3003ed43:	xor    ecx,eax
3003ed45:	call   0x3000115c
3003ed4a:	mov    eax,0x3003ed54
3003ed4f:	jmp    0x30038270
3003ed54:	and    al,BYTE PTR ds:0x41993
3003ed5a:	add    BYTE PTR [eax],al
3003ed5c:	xor    BYTE PTR [edx],bl
3003ed5e:	add    al,0x30
	...
3003ed74:	add    DWORD PTR [eax],eax
3003ed76:	add    BYTE PTR [eax],al
3003ed78:	mov    eax,DWORD PTR [ebp-0x14]
3003ed7b:	and    eax,0x1
3003ed7e:	je     0x3003ed8c
3003ed80:	and    DWORD PTR [ebp-0x14],0xfffffffe
3003ed84:	mov    ecx,DWORD PTR [ebp-0x18]
3003ed87:	jmp    0x300051a4
3003ed8c:	ret    
3003ed8d:	nop
3003ed8e:	nop
3003ed8f:	nop
3003ed90:	(bad)  
3003ed91:	(bad)  
3003ed92:	(bad)  
3003ed93:	(bad)  
3003ed94:	js     0x3003ed83
3003ed96:	add    esi,DWORD PTR [eax]
3003ed98:	mov    edx,DWORD PTR [esp+0x8]
3003ed9c:	lea    eax,[edx+0xc]
3003ed9f:	mov    ecx,DWORD PTR [edx-0x1c]
3003eda2:	xor    ecx,eax
3003eda4:	call   0x3000115c
3003eda9:	mov    eax,0x3003edb4
3003edae:	jmp    0x30038270
3003edb3:	nop
3003edb4:	and    al,BYTE PTR ds:0x11993
3003edba:	add    BYTE PTR [eax],al
3003edbc:	nop
3003edbd:	in     eax,dx
3003edbe:	add    esi,DWORD PTR [eax]
	...
3003edd4:	add    DWORD PTR [eax],eax
3003edd6:	add    BYTE PTR [eax],al
3003edd8:	lea    ecx,[ebp-0x1c]
3003eddb:	jmp    0x300051ae
3003ede0:	(bad)  
3003ede1:	(bad)  
3003ede2:	(bad)  
3003ede3:	(bad)  
3003ede4:	fsubr  st,st(5)
3003ede6:	add    esi,DWORD PTR [eax]
3003ede8:	mov    edx,DWORD PTR [esp+0x8]
3003edec:	lea    eax,[edx+0xc]
3003edef:	mov    ecx,DWORD PTR [edx-0x20]
3003edf2:	xor    ecx,eax
3003edf4:	call   0x3000115c
3003edf9:	mov    eax,0x3003ee04
3003edfe:	jmp    0x30038270
3003ee03:	nop
3003ee04:	and    al,BYTE PTR ds:0x11993
3003ee0a:	add    BYTE PTR [eax],al
3003ee0c:	loopne 0x3003edfb
3003ee0e:	add    esi,DWORD PTR [eax]
	...
3003ee24:	add    DWORD PTR [eax],eax
3003ee26:	add    BYTE PTR [eax],al
3003ee28:	lea    ecx,[ebp-0x10]
3003ee2b:	jmp    0x300051a4
3003ee30:	lea    ecx,[ebp-0x20]
3003ee33:	jmp    0x300051ae
3003ee38:	mov    edx,DWORD PTR [esp+0x8]
3003ee3c:	lea    eax,[edx+0xc]
3003ee3f:	mov    ecx,DWORD PTR [edx-0x24]
3003ee42:	xor    ecx,eax
3003ee44:	call   0x3000115c
3003ee49:	mov    eax,0x3003ee54
3003ee4e:	jmp    0x30038270
3003ee53:	nop
3003ee54:	and    al,BYTE PTR ds:0x21993
3003ee5a:	add    BYTE PTR [eax],al
3003ee5c:	or     BYTE PTR [edx],bl
3003ee5e:	add    al,0x30
	...
3003ee74:	add    DWORD PTR [eax],eax
3003ee76:	add    BYTE PTR [eax],al
3003ee78:	lea    ecx,[ebp-0x14]
3003ee7b:	jmp    0x300122e2
3003ee80:	lea    ecx,[ebp-0x28]
3003ee83:	jmp    0x3002d98c
3003ee88:	mov    edx,DWORD PTR [esp+0x8]
3003ee8c:	lea    eax,[edx+0xc]
3003ee8f:	mov    ecx,DWORD PTR [edx-0x2c]
3003ee92:	xor    ecx,eax
3003ee94:	call   0x3000115c
3003ee99:	mov    eax,0x3003eea4
3003ee9e:	jmp    0x30038270
3003eea3:	nop
3003eea4:	and    al,BYTE PTR ds:0x21993
3003eeaa:	add    BYTE PTR [eax],al
3003eeac:	pop    esp
3003eead:	sbb    DWORD PTR [eax+esi*1],eax
	...
3003eec4:	add    DWORD PTR [eax],eax
3003eec6:	add    BYTE PTR [eax],al
3003eec8:	lea    ecx,[ebp-0x848]
3003eece:	jmp    0x300122e2
3003eed3:	lea    ecx,[ebp-0x84c]
3003eed9:	jmp    0x300051a4
3003eede:	lea    ecx,[ebp-0x840]
3003eee4:	jmp    0x300051a4
3003eee9:	mov    edx,DWORD PTR [esp+0x8]
3003eeed:	lea    eax,[edx+0xc]
3003eef0:	mov    ecx,DWORD PTR [edx-0x854]
3003eef6:	xor    ecx,eax
3003eef8:	call   0x3000115c
3003eefd:	mov    ecx,DWORD PTR [edx-0x4]
3003ef00:	xor    ecx,eax
3003ef02:	call   0x3000115c
3003ef07:	mov    eax,0x3003ef14
3003ef0c:	jmp    0x30038270
3003ef11:	nop
3003ef12:	nop
3003ef13:	nop
3003ef14:	and    al,BYTE PTR ds:0x31993
3003ef1a:	add    BYTE PTR [eax],al
3003ef1c:	sbb    BYTE PTR [edx],bl
3003ef1e:	add    al,0x30
	...
3003ef34:	add    DWORD PTR [eax],eax
3003ef36:	add    BYTE PTR [eax],al
3003ef38:	lea    ecx,[ebp-0x14]
3003ef3b:	jmp    0x3002be82
3003ef40:	(bad)  
3003ef41:	(bad)  
3003ef42:	(bad)  
3003ef43:	(bad)  
3003ef44:	cmp    bh,ch
3003ef46:	add    esi,DWORD PTR [eax]
3003ef48:	mov    edx,DWORD PTR [esp+0x8]
3003ef4c:	lea    eax,[edx+0xc]
3003ef4f:	mov    ecx,DWORD PTR [edx-0x28]
3003ef52:	xor    ecx,eax
3003ef54:	call   0x3000115c
3003ef59:	mov    ecx,DWORD PTR [edx-0x4]
3003ef5c:	xor    ecx,eax
3003ef5e:	call   0x3000115c
3003ef63:	mov    eax,0x3003ef70
3003ef68:	jmp    0x30038270
3003ef6d:	nop
3003ef6e:	nop
3003ef6f:	nop
3003ef70:	and    al,BYTE PTR ds:0x11993
3003ef76:	add    BYTE PTR [eax],al
3003ef78:	inc    eax
3003ef79:	out    dx,eax
3003ef7a:	add    esi,DWORD PTR [eax]
	...
3003ef90:	add    DWORD PTR [eax],eax
3003ef92:	add    BYTE PTR [eax],al
3003ef94:	mov    ecx,DWORD PTR [ebp-0x10]
3003ef97:	jmp    0x300171c7
3003ef9c:	mov    ecx,DWORD PTR [ebp-0x10]
3003ef9f:	jmp    0x300171b5
3003efa4:	mov    ecx,DWORD PTR [ebp-0x10]
3003efa7:	add    ecx,0xa4
3003efad:	jmp    0x300051a4
3003efb2:	mov    edx,DWORD PTR [esp+0x8]
3003efb6:	lea    eax,[edx+0xc]
3003efb9:	mov    ecx,DWORD PTR [edx-0x14]
3003efbc:	xor    ecx,eax
3003efbe:	call   0x3000115c
3003efc3:	mov    eax,0x3003efd0
3003efc8:	jmp    0x30038270
3003efcd:	nop
3003efce:	nop
3003efcf:	nop
3003efd0:	and    al,BYTE PTR ds:0x31993
3003efd6:	add    BYTE PTR [eax],al
3003efd8:	push   0x30041a
	...
3003eff1:	add    BYTE PTR [eax],al
3003eff3:	add    BYTE PTR [ebp-0x571617b3],cl
3003eff9:	popa   
3003effa:	cld    
3003effb:	dec    DWORD PTR [ebp-0x5f1613b3]
3003f001:	popa   
3003f002:	cld    
3003f003:	dec    DWORD PTR [ebp-0x67160fb3]
3003f009:	popa   
3003f00a:	cld    
3003f00b:	dec    DWORD PTR [ebx-0x72f7dbac]
3003f011:	inc    edx
3003f012:	or     al,0x8b
3003f014:	dec    edx
3003f015:	fdiv   DWORD PTR [ebx]
3003f017:	enter  0x3fe8,0x21
3003f01b:	cld    
3003f01c:	(bad)  
3003f01d:	mov    eax,0x3003f028
3003f022:	jmp    0x30038270
3003f027:	nop
3003f028:	and    al,BYTE PTR ds:0x31993
3003f02e:	add    BYTE PTR [eax],al
3003f030:	push   eax
3003f031:	sbb    al,BYTE PTR [eax+esi*1]
	...
3003f048:	add    DWORD PTR [eax],eax
3003f04a:	add    BYTE PTR [eax],al
3003f04c:	lea    ecx,[ebp-0x20]
3003f04f:	jmp    0x30030092
3003f054:	(bad)  
3003f055:	(bad)  
3003f056:	(bad)  
3003f057:	dec    DWORD PTR [eax+esi*8+0x3]
3003f05b:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003f061:	inc    edx
3003f062:	or     al,0x8b
3003f064:	dec    edx
3003f065:	fdiv   QWORD PTR [ebx]
3003f067:	enter  0xefe8,0x20
3003f06b:	cld    
3003f06c:	(bad)  
3003f06d:	mov    eax,0x3003f078
3003f072:	jmp    0x30038270
3003f077:	nop
3003f078:	and    al,BYTE PTR ds:0x11993
3003f07e:	add    BYTE PTR [eax],al
3003f080:	push   esp
3003f081:	lock add esi,DWORD PTR [eax]
	...
3003f098:	add    DWORD PTR [eax],eax
3003f09a:	add    BYTE PTR [eax],al
3003f09c:	lea    ecx,[ebp-0x74]
3003f09f:	jmp    0x3002ff37
3003f0a4:	(bad)  
3003f0a5:	(bad)  
3003f0a6:	(bad)  
3003f0a7:	call   FWORD PTR [eax+esi*8+0x548b3003]
3003f0ae:	and    al,0x8
3003f0b0:	lea    eax,[edx+0xc]
3003f0b3:	mov    ecx,DWORD PTR [edx-0x78]
3003f0b6:	xor    ecx,eax
3003f0b8:	call   0x3000115c
3003f0bd:	mov    eax,0x3003f0c8
3003f0c2:	jmp    0x30038270
3003f0c7:	nop
3003f0c8:	and    al,BYTE PTR ds:0x11993
3003f0ce:	add    BYTE PTR [eax],al
3003f0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3003f0d1:	lock add esi,DWORD PTR [eax]
	...
3003f0e8:	add    DWORD PTR [eax],eax
3003f0ea:	add    BYTE PTR [eax],al
3003f0ec:	lea    ecx,[ebp-0x28]
3003f0ef:	jmp    0x30007ef2
3003f0f4:	(bad)  
3003f0f5:	(bad)  
3003f0f6:	(bad)  
3003f0f7:	(bad)  
3003f0f8:	in     al,dx
3003f0f9:	lock add esi,DWORD PTR [eax]
3003f0fc:	mov    edx,DWORD PTR [esp+0x8]
3003f100:	lea    eax,[edx+0xc]
3003f103:	mov    ecx,DWORD PTR [edx-0x2c]
3003f106:	xor    ecx,eax
3003f108:	call   0x3000115c
3003f10d:	mov    eax,0x3003f118
3003f112:	jmp    0x30038270
3003f117:	nop
3003f118:	and    al,BYTE PTR ds:0x11993
3003f11e:	add    BYTE PTR [eax],al
3003f120:	hlt    
3003f121:	lock add esi,DWORD PTR [eax]
	...
3003f138:	add    DWORD PTR [eax],eax
3003f13a:	add    BYTE PTR [eax],al
3003f13c:	lea    ecx,[ebp-0x24]
3003f13f:	jmp    0x30030092
3003f144:	(bad)  
3003f145:	(bad)  
3003f146:	(bad)  
3003f147:	(bad)  
3003f148:	cmp    al,0xf1
3003f14a:	add    esi,DWORD PTR [eax]
3003f14c:	mov    edx,DWORD PTR [esp+0x8]
3003f150:	lea    eax,[edx+0xc]
3003f153:	mov    ecx,DWORD PTR [edx-0x28]
3003f156:	xor    ecx,eax
3003f158:	call   0x3000115c
3003f15d:	mov    eax,0x3003f168
3003f162:	jmp    0x30038270
3003f167:	nop
3003f168:	and    al,BYTE PTR ds:0x11993
3003f16e:	add    BYTE PTR [eax],al
3003f170:	inc    esp
3003f171:	icebp  
3003f172:	add    esi,DWORD PTR [eax]
	...
3003f188:	add    DWORD PTR [eax],eax
3003f18a:	add    BYTE PTR [eax],al
3003f18c:	lea    ecx,[ebp-0x78]
3003f18f:	jmp    0x3002ff37
3003f194:	(bad)  
3003f195:	(bad)  
3003f196:	(bad)  
3003f197:	dec    DWORD PTR [ecx+esi*8+0x548b3003]
3003f19e:	and    al,0x8
3003f1a0:	lea    eax,[edx+0xc]
3003f1a3:	mov    ecx,DWORD PTR [edx-0x7c]
3003f1a6:	xor    ecx,eax
3003f1a8:	call   0x3000115c
3003f1ad:	mov    eax,0x3003f1b8
3003f1b2:	jmp    0x30038270
3003f1b7:	nop
3003f1b8:	and    al,BYTE PTR ds:0x11993
3003f1be:	add    BYTE PTR [eax],al
3003f1c0:	xchg   esp,eax
3003f1c1:	icebp  
3003f1c2:	add    esi,DWORD PTR [eax]
	...
3003f1d8:	add    DWORD PTR [eax],eax
3003f1da:	add    BYTE PTR [eax],al
3003f1dc:	lea    ecx,[ebp-0x2c]
3003f1df:	jmp    0x30007ef2
3003f1e4:	(bad)  
3003f1e5:	(bad)  
3003f1e6:	(bad)  
3003f1e7:	(bad)  
3003f1e8:	fdivr  st(1),st
3003f1ea:	add    esi,DWORD PTR [eax]
3003f1ec:	mov    edx,DWORD PTR [esp+0x8]
3003f1f0:	lea    eax,[edx+0xc]
3003f1f3:	mov    ecx,DWORD PTR [edx-0x30]
3003f1f6:	xor    ecx,eax
3003f1f8:	call   0x3000115c
3003f1fd:	mov    eax,0x3003f208
3003f202:	jmp    0x30038270
3003f207:	nop
3003f208:	and    al,BYTE PTR ds:0x11993
3003f20e:	add    BYTE PTR [eax],al
3003f210:	in     al,0xf1
3003f212:	add    esi,DWORD PTR [eax]
	...
3003f228:	add    DWORD PTR [eax],eax
3003f22a:	add    BYTE PTR [eax],al
3003f22c:	mov    eax,DWORD PTR [ebp-0x20]
3003f22f:	and    eax,0x1
3003f232:	je     0x3003f240
3003f234:	and    DWORD PTR [ebp-0x20],0xfffffffe
3003f238:	lea    ecx,[ebp-0x44]
3003f23b:	jmp    0x3002ad60
3003f240:	ret    
3003f241:	lea    ecx,[ebp-0x3c]
3003f244:	jmp    0x3002ad60
3003f249:	lea    ecx,[ebp-0x48]
3003f24c:	jmp    0x3002ffb1
3003f251:	mov    edx,DWORD PTR [esp+0x8]
3003f255:	lea    eax,[edx+0xc]
3003f258:	mov    ecx,DWORD PTR [edx-0x58]
3003f25b:	xor    ecx,eax
3003f25d:	call   0x3000115c
3003f262:	mov    eax,0x3003f26c
3003f267:	jmp    0x30038270
3003f26c:	and    al,BYTE PTR ds:0x41993
3003f272:	add    BYTE PTR [eax],al
3003f274:	cmp    BYTE PTR [esp+eax*1],bl
3003f277:	xor    BYTE PTR [eax],al
	...
3003f289:	add    BYTE PTR [eax],al
3003f28b:	add    BYTE PTR [ecx],al
3003f28d:	add    BYTE PTR [eax],al
3003f28f:	add    BYTE PTR [ebx-0x1f7c23bb],cl
3003f295:	add    DWORD PTR [esp+ecx*1-0x7d],esi
3003f299:	gs fdiv st(6),st
3003f29c:	lea    ecx,[ebp-0x44]
3003f29f:	jmp    0x3002ad60
3003f2a4:	ret    
3003f2a5:	lea    ecx,[ebp-0x3c]
3003f2a8:	jmp    0x3002ad60
3003f2ad:	lea    ecx,[ebp-0x34]
3003f2b0:	jmp    0x30030092
3003f2b5:	mov    edx,DWORD PTR [esp+0x8]
3003f2b9:	lea    eax,[edx+0xc]
3003f2bc:	mov    ecx,DWORD PTR [edx-0x48]
3003f2bf:	xor    ecx,eax
3003f2c1:	call   0x3000115c
3003f2c6:	mov    eax,0x3003f2d0
3003f2cb:	jmp    0x30038270
3003f2d0:	and    al,BYTE PTR ds:0x41993
3003f2d6:	add    BYTE PTR [eax],al
3003f2d8:	fcomp  DWORD PTR [ebx]
3003f2da:	add    al,0x30
	...
3003f2f0:	add    DWORD PTR [eax],eax
3003f2f2:	add    BYTE PTR [eax],al
3003f2f4:	mov    eax,DWORD PTR [ebp-0x1c]
3003f2f7:	and    eax,0x1
3003f2fa:	je     0x3003f308
3003f2fc:	and    DWORD PTR [ebp-0x1c],0xfffffffe
3003f300:	lea    ecx,[ebp-0x3c]
3003f303:	jmp    0x3002ad60
3003f308:	ret    
3003f309:	lea    ecx,[ebp-0x34]
3003f30c:	jmp    0x3002ad60
3003f311:	lea    ecx,[ebp-0x14]
3003f314:	jmp    0x30030022
3003f319:	mov    edx,DWORD PTR [esp+0x8]
3003f31d:	lea    eax,[edx+0xc]
3003f320:	mov    ecx,DWORD PTR [edx-0x40]
3003f323:	xor    ecx,eax
3003f325:	call   0x3000115c
3003f32a:	mov    eax,0x3003f334
3003f32f:	jmp    0x30038270
3003f334:	and    al,BYTE PTR ds:0x41993
3003f33a:	add    BYTE PTR [eax],al
3003f33c:	sbb    BYTE PTR [esp+eax*1],bl
3003f33f:	xor    BYTE PTR [eax],al
	...
3003f351:	add    BYTE PTR [eax],al
3003f353:	add    BYTE PTR [ecx],al
3003f355:	add    BYTE PTR [eax],al
3003f357:	add    BYTE PTR [ebx-0x1f7c37bb],cl
3003f35d:	add    DWORD PTR [esp+ecx*1-0x7d],esi
3003f361:	gs enter 0x8dfe,0x4d
3003f366:	shr    cl,0xf4
3003f369:	mov    ecx,0x8dc3fffe
3003f36e:	dec    ebp
3003f36f:	fsubr  st,st(1)
3003f371:	jmp    0x3003f32c
3003f373:	(bad)  
3003f374:	dec    DWORD PTR [ebp-0xa373]
3003f37a:	(bad)  
3003f37b:	jmp    0x3002ff37
3003f380:	mov    edx,DWORD PTR [esp+0x8]
3003f384:	lea    eax,[edx+0xc]
3003f387:	mov    ecx,DWORD PTR [edx-0x108]
3003f38d:	xor    ecx,eax
3003f38f:	call   0x3000115c
3003f394:	mov    eax,0x3003f3a0
3003f399:	jmp    0x30038270
3003f39e:	nop
3003f39f:	nop
3003f3a0:	and    al,BYTE PTR ds:0x41993
3003f3a6:	add    BYTE PTR [eax],al
3003f3a8:	pop    eax
3003f3a9:	sbb    al,0x4
3003f3ab:	xor    BYTE PTR [eax],al
	...
3003f3bd:	add    BYTE PTR [eax],al
3003f3bf:	add    BYTE PTR [ecx],al
3003f3c1:	add    BYTE PTR [eax],al
3003f3c3:	add    BYTE PTR [ebx-0x1f7c23bb],cl
3003f3c9:	add    DWORD PTR [esp+ecx*1-0x7d],esi
3003f3cd:	gs fdiv st(6),st
3003f3d0:	lea    ecx,[ebp-0x44]
3003f3d3:	jmp    0x3002ad60
3003f3d8:	ret    
3003f3d9:	lea    ecx,[ebp-0x3c]
3003f3dc:	jmp    0x3002ad60
3003f3e1:	lea    ecx,[ebp-0x5c]
3003f3e4:	jmp    0x30007ef2
3003f3e9:	mov    edx,DWORD PTR [esp+0x8]
3003f3ed:	lea    eax,[edx+0xc]
3003f3f0:	mov    ecx,DWORD PTR [edx-0x60]
3003f3f3:	xor    ecx,eax
3003f3f5:	call   0x3000115c
3003f3fa:	mov    eax,0x3003f404
3003f3ff:	jmp    0x30038270
3003f404:	and    al,BYTE PTR ds:0x41993
3003f40a:	add    BYTE PTR [eax],al
3003f40c:	clc    
3003f40d:	sbb    eax,DWORD PTR [eax+esi*1]
	...
3003f424:	add    DWORD PTR [eax],eax
3003f426:	add    BYTE PTR [eax],al
3003f428:	mov    edx,DWORD PTR [esp+0x8]
3003f42c:	lea    eax,[edx+0xc]
3003f42f:	mov    ecx,DWORD PTR [edx-0x14]
3003f432:	xor    ecx,eax
3003f434:	call   0x3000115c
3003f439:	mov    eax,0x3003f444
3003f43e:	jmp    0x30038270
3003f443:	nop
3003f444:	and    al,BYTE PTR ds:0x21993
3003f44a:	add    BYTE PTR [eax],al
3003f44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3003f44d:	sbb    eax,DWORD PTR [eax+esi*1]
3003f450:	add    DWORD PTR [eax],eax
3003f452:	add    BYTE PTR [eax],al
3003f454:	mov    ah,0x1b
3003f456:	add    al,0x30
	...
3003f464:	add    DWORD PTR [eax],eax
3003f466:	add    BYTE PTR [eax],al
3003f468:	mov    ecx,DWORD PTR [ebp-0x10]
3003f46b:	add    ecx,0xc
3003f46e:	jmp    0x300051a4
3003f473:	mov    ecx,DWORD PTR [ebp-0x10]
3003f476:	add    ecx,0x10
3003f479:	jmp    0x300051a4
3003f47e:	mov    edx,DWORD PTR [esp+0x8]
3003f482:	lea    eax,[edx+0xc]
3003f485:	mov    ecx,DWORD PTR [edx-0x14]
3003f488:	xor    ecx,eax
3003f48a:	call   0x3000115c
3003f48f:	mov    eax,0x3003f49c
3003f494:	jmp    0x30038270
3003f499:	nop
3003f49a:	nop
3003f49b:	nop
3003f49c:	and    al,BYTE PTR ds:0x21993
3003f4a2:	add    BYTE PTR [eax],al
3003f4a4:	xchg   esp,eax
3003f4a5:	sbb    eax,DWORD PTR [eax+esi*1]
	...
3003f4bc:	add    DWORD PTR [eax],eax
3003f4be:	add    BYTE PTR [eax],al
3003f4c0:	mov    ecx,DWORD PTR [ebp-0x10]
3003f4c3:	jmp    0x300301e6
3003f4c8:	(bad)  
3003f4c9:	(bad)  
3003f4ca:	(bad)  
3003f4cb:	inc    eax
3003f4cd:	hlt    
3003f4ce:	add    esi,DWORD PTR [eax]
3003f4d0:	mov    edx,DWORD PTR [esp+0x8]
3003f4d4:	lea    eax,[edx+0xc]
3003f4d7:	mov    ecx,DWORD PTR [edx-0x14]
3003f4da:	xor    ecx,eax
3003f4dc:	call   0x3000115c
3003f4e1:	mov    eax,0x3003f4ec
3003f4e6:	jmp    0x30038270
3003f4eb:	nop
3003f4ec:	and    al,BYTE PTR ds:0x11993
3003f4f2:	add    BYTE PTR [eax],al
3003f4f4:	enter  0x3f4,0x30
	...
3003f50c:	add    DWORD PTR [eax],eax
3003f50e:	add    BYTE PTR [eax],al
3003f510:	mov    ecx,DWORD PTR [ebp-0x10]
3003f513:	jmp    0x30030146
3003f518:	(bad)  
3003f519:	(bad)  
3003f51a:	(bad)  
3003f51b:	call   DWORD PTR [eax]
3003f51d:	cmc    
3003f51e:	add    esi,DWORD PTR [eax]
3003f520:	mov    edx,DWORD PTR [esp+0x8]
3003f524:	lea    eax,[edx+0xc]
3003f527:	mov    ecx,DWORD PTR [edx-0x14]
3003f52a:	xor    ecx,eax
3003f52c:	call   0x3000115c
3003f531:	mov    eax,0x3003f53c
3003f536:	jmp    0x30038270
3003f53b:	nop
3003f53c:	and    al,BYTE PTR ds:0x11993
3003f542:	add    BYTE PTR [eax],al
3003f544:	sbb    ch,dh
3003f546:	add    esi,DWORD PTR [eax]
	...
3003f55c:	add    DWORD PTR [eax],eax
3003f55e:	add    BYTE PTR [eax],al
3003f560:	mov    ecx,DWORD PTR [ebp-0x10]
3003f563:	jmp    0x30030186
3003f568:	(bad)  
3003f569:	(bad)  
3003f56a:	(bad)  
3003f56b:	jmp    DWORD PTR [eax-0xb]
3003f56e:	add    esi,DWORD PTR [eax]
3003f570:	mov    edx,DWORD PTR [esp+0x8]
3003f574:	lea    eax,[edx+0xc]
3003f577:	mov    ecx,DWORD PTR [edx-0x14]
3003f57a:	xor    ecx,eax
3003f57c:	call   0x3000115c
3003f581:	mov    eax,0x3003f58c
3003f586:	jmp    0x30038270
3003f58b:	nop
3003f58c:	and    al,BYTE PTR ds:0x11993
3003f592:	add    BYTE PTR [eax],al
3003f594:	push   0x3003f5
	...
3003f5a9:	add    BYTE PTR [eax],al
3003f5ab:	add    BYTE PTR [ecx],al
3003f5ad:	add    BYTE PTR [eax],al
3003f5af:	add    BYTE PTR [ebx+0x4ee9f04d],cl
3003f5b5:	or     edi,edi
3003f5b7:	(bad)  
3003f5b8:	(bad)  
3003f5b9:	(bad)  
3003f5ba:	(bad)  
3003f5bb:	push   DWORD PTR [eax-0x74cffc0b]
3003f5c1:	push   esp
3003f5c2:	and    al,0x8
3003f5c4:	lea    eax,[edx+0xc]
3003f5c7:	mov    ecx,DWORD PTR [edx-0x14]
3003f5ca:	xor    ecx,eax
3003f5cc:	call   0x3000115c
3003f5d1:	mov    eax,0x3003f5dc
3003f5d6:	jmp    0x30038270
3003f5db:	nop
3003f5dc:	and    al,BYTE PTR ds:0x11993
3003f5e2:	add    BYTE PTR [eax],al
3003f5e4:	mov    eax,0x3003f5
	...
3003f5f9:	add    BYTE PTR [eax],al
3003f5fb:	add    BYTE PTR [ecx],al
3003f5fd:	add    BYTE PTR [eax],al
3003f5ff:	add    BYTE PTR [ebx-0x61160fb3],cl
3003f605:	or     edi,edi
3003f607:	(bad)  
3003f608:	(bad)  
3003f609:	(bad)  
3003f60a:	(bad)  
3003f60b:	inc    DWORD PTR [eax]
3003f60d:	test   BYTE PTR [ebx],0x30
3003f610:	mov    edx,DWORD PTR [esp+0x8]
3003f614:	lea    eax,[edx+0xc]
3003f617:	mov    ecx,DWORD PTR [edx-0x14]
3003f61a:	xor    ecx,eax
3003f61c:	call   0x3000115c
3003f621:	mov    eax,0x3003f62c
3003f626:	jmp    0x30038270
3003f62b:	nop
3003f62c:	and    al,BYTE PTR ds:0x11993
3003f632:	add    BYTE PTR [eax],al
3003f634:	or     dh,dh
3003f636:	add    esi,DWORD PTR [eax]
	...
3003f64c:	add    DWORD PTR [eax],eax
3003f64e:	add    BYTE PTR [eax],al
3003f650:	mov    ecx,DWORD PTR [ebp-0x10]
3003f653:	jmp    0x30017969
3003f658:	mov    ecx,DWORD PTR [ebp-0x10]
3003f65b:	add    ecx,0x4c
3003f65e:	jmp    0x3002be9c
3003f663:	mov    edx,DWORD PTR [esp+0x8]
3003f667:	lea    eax,[edx+0xc]
3003f66a:	mov    ecx,DWORD PTR [edx-0x14]
3003f66d:	xor    ecx,eax
3003f66f:	call   0x3000115c
3003f674:	mov    eax,0x3003f680
3003f679:	jmp    0x30038270
3003f67e:	nop
3003f67f:	nop
3003f680:	and    al,BYTE PTR ds:0x21993
3003f686:	add    BYTE PTR [eax],al
3003f688:	inc    eax
3003f689:	sbb    eax,0x3004
	...
3003f69e:	add    BYTE PTR [eax],al
3003f6a0:	add    DWORD PTR [eax],eax
3003f6a2:	add    BYTE PTR [eax],al
3003f6a4:	lea    ecx,[ebp-0x10]
3003f6a7:	jmp    0x3002be9c
3003f6ac:	(bad)  
3003f6ad:	(bad)  
3003f6ae:	(bad)  
3003f6af:	jmp    DWORD PTR [esi+esi*8+0x548b3003]
3003f6b6:	and    al,0x8
3003f6b8:	lea    eax,[edx+0xc]
3003f6bb:	mov    ecx,DWORD PTR [edx-0x14]
3003f6be:	xor    ecx,eax
3003f6c0:	call   0x3000115c
3003f6c5:	mov    eax,0x3003f6d0
3003f6ca:	jmp    0x30038270
3003f6cf:	nop
3003f6d0:	and    al,BYTE PTR ds:0x11993
3003f6d6:	add    BYTE PTR [eax],al
3003f6d8:	lods   al,BYTE PTR ds:[esi]
3003f6d9:	test   BYTE PTR [ebx],0x30
	...
3003f6f0:	add    DWORD PTR [eax],eax
3003f6f2:	add    BYTE PTR [eax],al
3003f6f4:	lea    ecx,[ebp+0xc]
3003f6f7:	jmp    0x3002be9c
3003f6fc:	(bad)  
3003f6fd:	(bad)  
3003f6fe:	(bad)  
3003f6ff:	push   esp
3003f701:	test   BYTE PTR [ebx],0x30
3003f704:	mov    edx,DWORD PTR [esp+0x8]
3003f708:	lea    eax,[edx+0xc]
3003f70b:	mov    ecx,DWORD PTR [edx-0x28]
3003f70e:	xor    ecx,eax
3003f710:	call   0x3000115c
3003f715:	mov    eax,0x3003f720
3003f71a:	jmp    0x30038270
3003f71f:	nop
3003f720:	and    al,BYTE PTR ds:0x11993
3003f726:	add    BYTE PTR [eax],al
3003f728:	cld    
3003f729:	test   BYTE PTR [ebx],0x30
	...
3003f740:	add    DWORD PTR [eax],eax
3003f742:	add    BYTE PTR [eax],al
3003f744:	lea    ecx,[ebp-0x1c]
3003f747:	jmp    0x3002be9c
3003f74c:	lea    ecx,[ebp-0x20]
3003f74f:	jmp    0x3002be9c
3003f754:	lea    ecx,[ebp-0x10]
3003f757:	jmp    0x3002ae34
3003f75c:	lea    ecx,[ebp+0xc]
3003f75f:	jmp    0x3002be9c
3003f764:	mov    edx,DWORD PTR [esp+0x8]
3003f768:	lea    eax,[edx+0xc]
3003f76b:	mov    ecx,DWORD PTR [edx-0x28]
3003f76e:	xor    ecx,eax
3003f770:	call   0x3000115c
3003f775:	mov    eax,0x3003f780
3003f77a:	jmp    0x30038270
3003f77f:	nop
3003f780:	and    al,BYTE PTR ds:0x41993
3003f786:	add    BYTE PTR [eax],al
3003f788:	loopne 0x3003f7a6
3003f78a:	add    al,0x30
	...
3003f7a0:	add    DWORD PTR [eax],eax
3003f7a2:	add    BYTE PTR [eax],al
3003f7a4:	lea    ecx,[ebp-0x28]
3003f7a7:	jmp    0x3002be9c
3003f7ac:	lea    ecx,[ebp-0x20]
3003f7af:	jmp    0x3002d98c
3003f7b4:	mov    edx,DWORD PTR [esp+0x8]
3003f7b8:	lea    eax,[edx-0x2c]
3003f7bb:	mov    ecx,DWORD PTR [edx-0x30]
3003f7be:	xor    ecx,eax
3003f7c0:	call   0x3000115c
3003f7c5:	mov    eax,0x3003f7d0
3003f7ca:	jmp    0x30038270
3003f7cf:	nop
3003f7d0:	and    al,BYTE PTR ds:0x21993
3003f7d6:	add    BYTE PTR [eax],al
3003f7d8:	add    BYTE PTR ds:0x3004,bl
	...
3003f7ee:	add    BYTE PTR [eax],al
3003f7f0:	add    DWORD PTR [eax],eax
3003f7f2:	add    BYTE PTR [eax],al
3003f7f4:	lea    ecx,[ebp-0x5c]
3003f7f7:	jmp    0x3002be9c
3003f7fc:	lea    ecx,[ebp-0x60]
3003f7ff:	jmp    0x300122e2
3003f804:	lea    ecx,[ebp-0x64]
3003f807:	jmp    0x300122e2
3003f80c:	mov    edx,DWORD PTR [esp+0x8]
3003f810:	lea    eax,[edx+0xc]
3003f813:	mov    ecx,DWORD PTR [edx-0x70]
3003f816:	xor    ecx,eax
3003f818:	call   0x3000115c
3003f81d:	mov    ecx,DWORD PTR [edx-0x4]
3003f820:	xor    ecx,eax
3003f822:	call   0x3000115c
3003f827:	mov    eax,0x3003f834
3003f82c:	jmp    0x30038270
3003f831:	nop
3003f832:	nop
3003f833:	nop
3003f834:	and    al,BYTE PTR ds:0x31993
3003f83a:	add    BYTE PTR [eax],al
3003f83c:	push   0x30041d
	...
3003f851:	add    BYTE PTR [eax],al
3003f853:	add    BYTE PTR [ecx],al
3003f855:	add    BYTE PTR [eax],al
3003f857:	add    BYTE PTR [ebp-0x9773],cl
3003f85d:	(bad)  
3003f85e:	jmp    0x3002f69c
3003f863:	nop
3003f864:	(bad)  
3003f865:	(bad)  
3003f866:	(bad)  
3003f867:	call   FWORD PTR [eax-0x8]
3003f86a:	add    esi,DWORD PTR [eax]
3003f86c:	mov    edx,DWORD PTR [esp+0x8]
3003f870:	lea    eax,[edx+0xc]
3003f873:	mov    ecx,DWORD PTR [edx-0xa4]
3003f879:	xor    ecx,eax
3003f87b:	call   0x3000115c
3003f880:	mov    ecx,DWORD PTR [edx-0x4]
3003f883:	xor    ecx,eax
3003f885:	call   0x3000115c
3003f88a:	mov    eax,0x3003f894
3003f88f:	jmp    0x30038270
3003f894:	and    al,BYTE PTR ds:0x11993
3003f89a:	add    BYTE PTR [eax],al
3003f89c:	fs clc 
3003f89e:	add    esi,DWORD PTR [eax]
	...
3003f8b4:	add    DWORD PTR [eax],eax
3003f8b6:	add    BYTE PTR [eax],al
3003f8b8:	push   0x300430f0
3003f8bd:	push   DWORD PTR [ebp-0x20]
3003f8c0:	call   0x30037e0c
3003f8c5:	pop    ecx
3003f8c6:	pop    ecx
3003f8c7:	ret    
3003f8c8:	mov    ecx,DWORD PTR [ebp-0x20]
3003f8cb:	jmp    0x30030146
3003f8d0:	mov    edx,DWORD PTR [esp+0x8]
3003f8d4:	lea    eax,[edx+0xc]
3003f8d7:	mov    ecx,DWORD PTR [edx-0x24]
3003f8da:	xor    ecx,eax
3003f8dc:	call   0x3000115c
3003f8e1:	mov    eax,0x3003f8ec
3003f8e6:	jmp    0x30038270
3003f8eb:	nop
3003f8ec:	and    al,BYTE PTR ds:0x41993
3003f8f2:	add    BYTE PTR [eax],al
3003f8f4:	sub    al,0x1b
3003f8f6:	add    al,0x30
3003f8f8:	add    DWORD PTR [eax],eax
3003f8fa:	add    BYTE PTR [eax],al
3003f8fc:	dec    esp
3003f8fd:	sbb    eax,DWORD PTR [eax+esi*1]
	...
3003f90c:	add    DWORD PTR [eax],eax
3003f90e:	add    BYTE PTR [eax],al
3003f910:	push   0x300430f0
3003f915:	push   DWORD PTR [ebp-0x20]
3003f918:	call   0x30037e0c
3003f91d:	pop    ecx
3003f91e:	pop    ecx
3003f91f:	ret    
3003f920:	(bad)  
3003f921:	(bad)  
3003f922:	(bad)  
3003f923:	inc    DWORD PTR [eax]
3003f925:	add    BYTE PTR [eax],al
3003f927:	add    BYTE PTR [eax],al
3003f929:	add    BYTE PTR [eax],al
3003f92b:	add    BYTE PTR [eax],dl
3003f92d:	stc    
3003f92e:	add    esi,DWORD PTR [eax]
3003f930:	(bad)  
3003f931:	(bad)  
3003f932:	(bad)  
3003f933:	inc    DWORD PTR [eax]
3003f935:	add    BYTE PTR [eax],al
3003f937:	add    BYTE PTR [ebx-0x72f7dbac],cl
3003f93d:	inc    edx
3003f93e:	or     al,0x8b
3003f940:	dec    edx
3003f941:	fdiv   QWORD PTR [ebx]
3003f943:	enter  0x13e8,0x18
3003f947:	cld    
3003f948:	(bad)  
3003f949:	mov    eax,0x3003f954
3003f94e:	jmp    0x30038270
3003f953:	nop
3003f954:	and    al,BYTE PTR ds:0x31993
3003f95a:	add    BYTE PTR [eax],al
3003f95c:	and    cl,bh
3003f95e:	add    esi,DWORD PTR [eax]
3003f960:	add    DWORD PTR [eax],eax
3003f962:	add    BYTE PTR [eax],al
3003f964:	sbb    BYTE PTR [edx],0x4
3003f967:	xor    BYTE PTR [eax],al
	...
3003f971:	add    BYTE PTR [eax],al
3003f973:	add    BYTE PTR [ecx],al
3003f975:	add    BYTE PTR [eax],al
3003f977:	add    BYTE PTR [eax-0x10],ch
3003f97a:	xor    BYTE PTR [eax+esi*1],al
3003f97d:	push   DWORD PTR [ebp-0x20]
3003f980:	call   0x30037e0c
3003f985:	pop    ecx
3003f986:	pop    ecx
3003f987:	ret    
3003f988:	mov    ecx,DWORD PTR [ebp-0x20]
3003f98b:	jmp    0x30030186
3003f990:	mov    edx,DWORD PTR [esp+0x8]
3003f994:	lea    eax,[edx+0xc]
3003f997:	mov    ecx,DWORD PTR [edx-0x24]
3003f99a:	xor    ecx,eax
3003f99c:	call   0x3000115c
3003f9a1:	mov    eax,0x3003f9ac
3003f9a6:	jmp    0x30038270
3003f9ab:	nop
3003f9ac:	and    al,BYTE PTR ds:0x41993
3003f9b2:	add    BYTE PTR [eax],al
3003f9b4:	call   0x3133fdd3
3003f9b9:	add    BYTE PTR [eax],al
3003f9bb:	add    BYTE PTR [eax],cl
3003f9bd:	sbb    eax,DWORD PTR [eax+esi*1]
	...
3003f9cc:	add    DWORD PTR [eax],eax
3003f9ce:	add    BYTE PTR [eax],al
3003f9d0:	push   0x300430f0
3003f9d5:	push   DWORD PTR [ebp-0x20]
3003f9d8:	call   0x30037e0c
3003f9dd:	pop    ecx
3003f9de:	pop    ecx
3003f9df:	ret    
3003f9e0:	(bad)  
3003f9e1:	(bad)  
3003f9e2:	(bad)  
3003f9e3:	inc    DWORD PTR [eax]
3003f9e5:	add    BYTE PTR [eax],al
3003f9e7:	add    BYTE PTR [eax],al
3003f9e9:	add    BYTE PTR [eax],al
3003f9eb:	add    al,dl
3003f9ed:	stc    
3003f9ee:	add    esi,DWORD PTR [eax]
3003f9f0:	(bad)  
3003f9f1:	(bad)  
3003f9f2:	(bad)  
3003f9f3:	inc    DWORD PTR [eax]
3003f9f5:	add    BYTE PTR [eax],al
3003f9f7:	add    BYTE PTR [ebx-0x72f7dbac],cl
3003f9fd:	inc    edx
3003f9fe:	or     al,0x8b
3003fa00:	dec    edx
3003fa01:	fdiv   QWORD PTR [ebx]
3003fa03:	enter  0x53e8,0x17
3003fa07:	cld    
3003fa08:	(bad)  
3003fa09:	mov    eax,0x3003fa14
3003fa0e:	jmp    0x30038270
3003fa13:	nop
3003fa14:	and    al,BYTE PTR ds:0x31993
3003fa1a:	add    BYTE PTR [eax],al
3003fa1c:	loopne 0x3003fa17
3003fa1e:	add    esi,DWORD PTR [eax]
3003fa20:	add    DWORD PTR [eax],eax
3003fa22:	add    BYTE PTR [eax],al
3003fa24:	jo     0x3003fa41
3003fa26:	add    al,0x30
	...
3003fa34:	add    DWORD PTR [eax],eax
3003fa36:	add    BYTE PTR [eax],al
3003fa38:	push   0x300430f0
3003fa3d:	push   DWORD PTR [ebp-0x20]
3003fa40:	call   0x30037e0c
3003fa45:	pop    ecx
3003fa46:	pop    ecx
3003fa47:	ret    
3003fa48:	mov    ecx,DWORD PTR [ebp-0x20]
3003fa4b:	jmp    0x300301a6
3003fa50:	mov    edx,DWORD PTR [esp+0x8]
3003fa54:	lea    eax,[edx+0xc]
3003fa57:	mov    ecx,DWORD PTR [edx-0x24]
3003fa5a:	xor    ecx,eax
3003fa5c:	call   0x3000115c
3003fa61:	mov    eax,0x3003fa6c
3003fa66:	jmp    0x30038270
3003fa6b:	nop
3003fa6c:	and    al,BYTE PTR ds:0x41993
3003fa72:	add    BYTE PTR [eax],al
3003fa74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
3003fa75:	sbb    al,BYTE PTR [eax+esi*1]
3003fa78:	add    DWORD PTR [eax],eax
3003fa7a:	add    BYTE PTR [eax],al
3003fa7c:	les    ebx,FWORD PTR [edx]
3003fa7e:	add    al,0x30
	...
3003fa8c:	add    DWORD PTR [eax],eax
3003fa8e:	add    BYTE PTR [eax],al
3003fa90:	lea    ecx,[ebp-0x10]
3003fa93:	jmp    0x300051a4
3003fa98:	lea    ecx,[ebp+0x8]
3003fa9b:	jmp    0x300051a4
3003faa0:	mov    edx,DWORD PTR [esp+0x8]
3003faa4:	lea    eax,[edx+0xc]
3003faa7:	mov    ecx,DWORD PTR [edx-0x14]
3003faaa:	xor    ecx,eax
3003faac:	call   0x3000115c
3003fab1:	mov    eax,0x3003fabc
3003fab6:	jmp    0x30038270
3003fabb:	nop
3003fabc:	and    al,BYTE PTR ds:0x21993
3003fac2:	add    BYTE PTR [eax],al
3003fac4:	js     0x3003fae2
3003fac6:	add    al,0x30
	...
3003fadc:	add    DWORD PTR [eax],eax
3003fade:	add    BYTE PTR [eax],al
3003fae0:	lea    ecx,[ebp-0x228]
3003fae6:	jmp    0x3002be9c
3003faeb:	lea    ecx,[ebp-0x220]
3003faf1:	jmp    0x300014b2
3003faf6:	lea    ecx,[ebp-0x21c]
3003fafc:	jmp    0x3002be9c
3003fb01:	mov    edx,DWORD PTR [esp+0x8]
3003fb05:	lea    eax,[edx+0xc]
3003fb08:	mov    ecx,DWORD PTR [edx-0x234]
3003fb0e:	xor    ecx,eax
3003fb10:	call   0x3000115c
3003fb15:	mov    ecx,DWORD PTR [edx-0x4]
3003fb18:	xor    ecx,eax
3003fb1a:	call   0x3000115c
3003fb1f:	mov    eax,0x3003fb2c
3003fb24:	jmp    0x30038270
3003fb29:	nop
3003fb2a:	nop
3003fb2b:	nop
3003fb2c:	and    al,BYTE PTR ds:0x31993
3003fb32:	add    BYTE PTR [eax],al
3003fb34:	mov    eax,0x30041c
	...
3003fb49:	add    BYTE PTR [eax],al
3003fb4b:	add    BYTE PTR [ecx],al
3003fb4d:	add    BYTE PTR [eax],al
3003fb4f:	add    BYTE PTR [ebp-0x751627b3],cl
3003fb55:	daa    
3003fb56:	std    
3003fb57:	(bad)  
3003fb58:	(bad)  
3003fb59:	(bad)  
3003fb5a:	(bad)  
3003fb5b:	call   DWORD PTR [eax-0x5]
3003fb5e:	add    esi,DWORD PTR [eax]
3003fb60:	mov    edx,DWORD PTR [esp+0x8]
3003fb64:	lea    eax,[edx+0xc]
3003fb67:	mov    ecx,DWORD PTR [edx-0x30]
3003fb6a:	xor    ecx,eax
3003fb6c:	call   0x3000115c
3003fb71:	mov    ecx,DWORD PTR [edx-0x4]
3003fb74:	xor    ecx,eax
3003fb76:	call   0x3000115c
3003fb7b:	mov    eax,0x3003fb88
3003fb80:	jmp    0x30038270
3003fb85:	nop
3003fb86:	nop
3003fb87:	nop
3003fb88:	and    al,BYTE PTR ds:0x11993
3003fb8e:	add    BYTE PTR [eax],al
3003fb90:	pop    eax
3003fb91:	sti    
3003fb92:	add    esi,DWORD PTR [eax]
	...
3003fba8:	add    DWORD PTR [eax],eax
3003fbaa:	add    BYTE PTR [eax],al
3003fbac:	lea    ecx,[ebp-0x7c]
3003fbaf:	jmp    0x3002be9c
3003fbb4:	lea    ecx,[ebp-0x78]
3003fbb7:	jmp    0x300014b2
3003fbbc:	lea    ecx,[ebp-0x8c]
3003fbc2:	jmp    0x3002be9c
3003fbc7:	mov    edx,DWORD PTR [esp+0x8]
3003fbcb:	lea    eax,[edx+0xc]
3003fbce:	mov    ecx,DWORD PTR [edx-0x90]
3003fbd4:	xor    ecx,eax
3003fbd6:	call   0x3000115c
3003fbdb:	mov    ecx,DWORD PTR [edx-0x4]
3003fbde:	xor    ecx,eax
3003fbe0:	call   0x3000115c
3003fbe5:	mov    eax,0x3003fbf0
3003fbea:	jmp    0x30038270
3003fbef:	nop
3003fbf0:	and    al,BYTE PTR ds:0x31993
3003fbf6:	add    BYTE PTR [eax],al
3003fbf8:	push   eax
3003fbf9:	sbb    eax,0x3004
	...
3003fc0e:	add    BYTE PTR [eax],al
3003fc10:	add    DWORD PTR [eax],eax
3003fc12:	add    BYTE PTR [eax],al
3003fc14:	lea    ecx,[ebp-0x21c]
3003fc1a:	jmp    0x300051a4
3003fc1f:	nop
3003fc20:	(bad)  
3003fc21:	(bad)  
3003fc22:	(bad)  
3003fc23:	call   DWORD PTR [esp+edi*8]
3003fc26:	add    esi,DWORD PTR [eax]
3003fc28:	mov    edx,DWORD PTR [esp+0x8]
3003fc2c:	lea    eax,[edx+0xc]
3003fc2f:	mov    ecx,DWORD PTR [edx-0x228]
3003fc35:	xor    ecx,eax
3003fc37:	call   0x3000115c
3003fc3c:	mov    ecx,DWORD PTR [edx-0x4]
3003fc3f:	xor    ecx,eax
3003fc41:	call   0x3000115c
3003fc46:	mov    eax,0x3003fc50
3003fc4b:	jmp    0x30038270
3003fc50:	and    al,BYTE PTR ds:0x11993
3003fc56:	add    BYTE PTR [eax],al
3003fc58:	and    ah,bh
3003fc5a:	add    esi,DWORD PTR [eax]
	...
3003fc70:	add    DWORD PTR [eax],eax
3003fc72:	add    BYTE PTR [eax],al
3003fc74:	lea    ecx,[ebp+0x8]
3003fc77:	jmp    0x3002be9c
3003fc7c:	lea    ecx,[ebp+0x8]
3003fc7f:	jmp    0x3002be9c
3003fc84:	mov    edx,DWORD PTR [esp+0x8]
3003fc88:	lea    eax,[edx+0xc]
3003fc8b:	mov    ecx,DWORD PTR [edx-0x14]
3003fc8e:	xor    ecx,eax
3003fc90:	call   0x3000115c
3003fc95:	mov    eax,0x3003fca0
3003fc9a:	jmp    0x30038270
3003fc9f:	nop
3003fca0:	and    al,BYTE PTR ds:0x21993
3003fca6:	add    BYTE PTR [eax],al
3003fca8:	and    BYTE PTR ds:0x3004,bl
	...
3003fcbe:	add    BYTE PTR [eax],al
3003fcc0:	add    DWORD PTR [eax],eax
3003fcc2:	add    BYTE PTR [eax],al
3003fcc4:	lea    ecx,[ebp-0x10]
3003fcc7:	jmp    0x3001d2cb
3003fccc:	(bad)  
3003fccd:	(bad)  
3003fcce:	(bad)  
3003fccf:	inc    esp
3003fcd1:	cld    
3003fcd2:	add    esi,DWORD PTR [eax]
3003fcd4:	mov    edx,DWORD PTR [esp+0x8]
3003fcd8:	lea    eax,[edx+0xc]
3003fcdb:	mov    ecx,DWORD PTR [edx-0x18]
3003fcde:	xor    ecx,eax
3003fce0:	call   0x3000115c
3003fce5:	mov    eax,0x3003fcf0
3003fcea:	jmp    0x30038270
3003fcef:	nop
3003fcf0:	and    al,BYTE PTR ds:0x11993
3003fcf6:	add    BYTE PTR [eax],al
3003fcf8:	int3   
3003fcf9:	cld    
3003fcfa:	add    esi,DWORD PTR [eax]
	...
3003fd10:	add    DWORD PTR [eax],eax
3003fd12:	add    BYTE PTR [eax],al
3003fd14:	lea    ecx,[ebp-0x10]
3003fd17:	jmp    0x300122e2
3003fd1c:	lea    ecx,[ebp-0x14]
3003fd1f:	jmp    0x3002be9c
3003fd24:	mov    edx,DWORD PTR [esp+0x8]
3003fd28:	lea    eax,[edx+0xc]
3003fd2b:	mov    ecx,DWORD PTR [edx-0x1c]
3003fd2e:	xor    ecx,eax
3003fd30:	call   0x3000115c
3003fd35:	mov    eax,0x3003fd40
3003fd3a:	jmp    0x30038270
3003fd3f:	nop
3003fd40:	and    al,BYTE PTR ds:0x21993
3003fd46:	add    BYTE PTR [eax],al
3003fd48:	adc    BYTE PTR ds:0x3004,bl
	...
3003fd5e:	add    BYTE PTR [eax],al
3003fd60:	add    DWORD PTR [eax],eax
3003fd62:	add    BYTE PTR [eax],al
3003fd64:	lea    ecx,[ebp-0x10]
3003fd67:	jmp    0x300122e2
3003fd6c:	lea    ecx,[ebp-0x14]
3003fd6f:	jmp    0x3002be9c
3003fd74:	mov    edx,DWORD PTR [esp+0x8]
3003fd78:	lea    eax,[edx+0xc]
3003fd7b:	mov    ecx,DWORD PTR [edx-0x18]
3003fd7e:	xor    ecx,eax
3003fd80:	call   0x3000115c
3003fd85:	mov    eax,0x3003fd90
3003fd8a:	jmp    0x30038270
3003fd8f:	nop
3003fd90:	and    al,BYTE PTR ds:0x21993
3003fd96:	add    BYTE PTR [eax],al
3003fd98:	rcr    BYTE PTR [esp+eax*1],1
3003fd9b:	xor    BYTE PTR [eax],al
	...
3003fdad:	add    BYTE PTR [eax],al
3003fdaf:	add    BYTE PTR [ecx],al
3003fdb1:	add    BYTE PTR [eax],al
3003fdb3:	add    BYTE PTR [ebp-0x1f16f3b3],cl
3003fdb9:	sar    dh,0xff
3003fdbc:	lea    ecx,[ebp-0x10]
3003fdbf:	jmp    0x300014b2
3003fdc4:	mov    edx,DWORD PTR [esp+0x8]
3003fdc8:	lea    eax,[edx+0xc]
3003fdcb:	mov    ecx,DWORD PTR [edx-0x14]
3003fdce:	xor    ecx,eax
3003fdd0:	call   0x3000115c
3003fdd5:	mov    eax,0x3003fde0
3003fdda:	jmp    0x30038270
3003fddf:	nop
3003fde0:	and    al,BYTE PTR ds:0x21993
3003fde6:	add    BYTE PTR [eax],al
3003fde8:	test   al,0x1c
3003fdea:	add    al,0x30
	...
3003fe00:	add    DWORD PTR [eax],eax
3003fe02:	add    BYTE PTR [eax],al
3003fe04:	lea    ecx,[ebp-0x1c]
3003fe07:	jmp    0x3002be9c
3003fe0c:	lea    ecx,[ebp-0x10]
3003fe0f:	jmp    0x300014b2
3003fe14:	mov    edx,DWORD PTR [esp+0x8]
3003fe18:	lea    eax,[edx+0xc]
3003fe1b:	mov    ecx,DWORD PTR [edx-0x24]
3003fe1e:	xor    ecx,eax
3003fe20:	call   0x3000115c
3003fe25:	mov    eax,0x3003fe30
3003fe2a:	jmp    0x30038270
3003fe2f:	nop
3003fe30:	and    al,BYTE PTR ds:0x21993
3003fe36:	add    BYTE PTR [eax],al
3003fe38:	xor    BYTE PTR ds:0x3004,bl
	...
3003fe4e:	add    BYTE PTR [eax],al
3003fe50:	add    DWORD PTR [eax],eax
3003fe52:	add    BYTE PTR [eax],al
3003fe54:	lea    ecx,[ebp-0x10]
3003fe57:	jmp    0x3002be9c
3003fe5c:	lea    ecx,[ebp+0xc]
3003fe5f:	jmp    0x3002be9c
3003fe64:	mov    edx,DWORD PTR [esp+0x8]
3003fe68:	lea    eax,[edx+0xc]
3003fe6b:	mov    ecx,DWORD PTR [edx-0x14]
3003fe6e:	xor    ecx,eax
3003fe70:	call   0x3000115c
3003fe75:	mov    eax,0x3003fe80
3003fe7a:	jmp    0x30038270
3003fe7f:	nop
3003fe80:	and    al,BYTE PTR ds:0x21993
3003fe86:	add    BYTE PTR [eax],al
3003fe88:	mov    BYTE PTR [esp+eax*1],bl
3003fe8b:	xor    BYTE PTR [eax],al
	...
3003fe9d:	add    BYTE PTR [eax],al
3003fe9f:	add    BYTE PTR [ecx],al
3003fea1:	add    BYTE PTR [eax],al
3003fea3:	add    BYTE PTR [ebp+0x6e9ec4d],cl
3003fea9:	push   ss
3003feaa:	cld    
3003feab:	dec    DWORD PTR [ebp-0x17160fb3]
3003feb1:	mov    edi,0x548bfffe
3003feb6:	and    al,0x8
3003feb8:	lea    eax,[edx+0xc]
3003febb:	mov    ecx,DWORD PTR [edx-0x18]
3003febe:	xor    ecx,eax
3003fec0:	call   0x3000115c
3003fec5:	mov    eax,0x3003fed0
3003feca:	jmp    0x30038270
3003fecf:	nop
3003fed0:	and    al,BYTE PTR ds:0x21993
3003fed6:	add    BYTE PTR [eax],al
3003fed8:	cwde   
3003fed9:	sbb    al,0x4
3003fedb:	xor    BYTE PTR [eax],al
	...
3003feed:	add    BYTE PTR [eax],al
3003feef:	add    BYTE PTR [ecx],al
3003fef1:	add    BYTE PTR [eax],al
3003fef3:	add    BYTE PTR [ebx-0x1f7c0fbb],cl
3003fef9:	add    DWORD PTR [esp+ecx*1-0x7d],esi
3003fefd:	lock dec BYTE PTR gs:[ebx-0x631613b3]
3003ff05:	push   edx
3003ff06:	cld    
3003ff07:	inc    ebx
3003ff09:	nop
3003ff0a:	nop
3003ff0b:	nop
3003ff0c:	(bad)  
3003ff0d:	(bad)  
3003ff0e:	(bad)  
3003ff0f:	push   esp
3003ff11:	inc    BYTE PTR [ebx]
3003ff13:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003ff19:	inc    edx
3003ff1a:	or     al,0x8b
3003ff1c:	dec    edx
3003ff1d:	call   0x67ecc755
3003ff22:	adc    bh,ah
3003ff24:	(bad)  
3003ff25:	mov    eax,0x3003ff30
3003ff2a:	jmp    0x30038270
3003ff2f:	nop
3003ff30:	and    al,BYTE PTR ds:0x11993
3003ff36:	add    BYTE PTR [eax],al
3003ff38:	or     al,0xff
3003ff3a:	add    esi,DWORD PTR [eax]
	...
3003ff50:	add    DWORD PTR [eax],eax
3003ff52:	add    BYTE PTR [eax],al
3003ff54:	mov    eax,DWORD PTR [ebp-0x10]
3003ff57:	and    eax,0x1
3003ff5a:	je     0x3003ff68
3003ff5c:	and    DWORD PTR [ebp-0x10],0xfffffffe
3003ff60:	mov    ecx,DWORD PTR [ebp+0x8]
3003ff63:	jmp    0x300051a4
3003ff68:	ret    
3003ff69:	nop
3003ff6a:	nop
3003ff6b:	nop
3003ff6c:	(bad)  
3003ff6d:	(bad)  
3003ff6e:	(bad)  
3003ff6f:	call   DWORD PTR [edi+edi*8+0x3]
3003ff73:	xor    BYTE PTR [ebx-0x72f7dbac],cl
3003ff79:	inc    edx
3003ff7a:	or     al,0x8b
3003ff7c:	dec    edx
3003ff7d:	in     al,dx
3003ff7e:	xor    ecx,eax
3003ff80:	call   0x3000115c
3003ff85:	mov    eax,0x3003ff90
3003ff8a:	jmp    0x30038270
3003ff8f:	nop
3003ff90:	and    al,BYTE PTR ds:0x11993
3003ff96:	add    BYTE PTR [eax],al
3003ff98:	ins    BYTE PTR es:[edi],dx
3003ff99:	inc    DWORD PTR [ebx]
3003ff9b:	xor    BYTE PTR [eax],al
	...
3003ffad:	add    BYTE PTR [eax],al
3003ffaf:	add    BYTE PTR [ecx],al
3003ffb1:	add    BYTE PTR [eax],al
3003ffb3:	add    BYTE PTR [ebp-0x1716f7b3],cl
3003ffb9:	push   ecx
3003ffba:	cld    
3003ffbb:	dec    DWORD PTR [ebp-0x1f160fb3]
3003ffc1:	push   ecx
3003ffc2:	cld    
3003ffc3:	dec    DWORD PTR [ebx-0x72f7dbac]
3003ffc9:	inc    edx
3003ffca:	or     al,0x8b
3003ffcc:	dec    edx
3003ffcd:	in     al,dx
3003ffce:	xor    ecx,eax
3003ffd0:	call   0x3000115c
3003ffd5:	mov    eax,0x3003ffe0
3003ffda:	jmp    0x30038270
3003ffdf:	nop
3003ffe0:	and    al,BYTE PTR ds:0x21993
3003ffe6:	add    BYTE PTR [eax],al
3003ffe8:	nop
3003ffe9:	sbb    eax,0x3004
	...
3003fffe:	add    BYTE PTR [eax],al
30040000:	add    DWORD PTR [eax],eax
30040002:	add    BYTE PTR [eax],al
30040004:	lea    ecx,[ebp-0x18]
30040007:	jmp    0x300051a4
3004000c:	lea    ecx,[ebp-0x14]
3004000f:	jmp    0x300051a4
30040014:	mov    edx,DWORD PTR [esp+0x8]
30040018:	lea    eax,[edx+0xc]
3004001b:	mov    ecx,DWORD PTR [edx-0x20]
3004001e:	xor    ecx,eax
30040020:	call   0x3000115c
30040025:	mov    eax,0x30040030
3004002a:	jmp    0x30038270
3004002f:	nop
30040030:	and    al,BYTE PTR ds:0x21993
30040036:	add    BYTE PTR [eax],al
30040038:	sbb    BYTE PTR ds:0x3004,0x0
	...
3004004f:	add    BYTE PTR [ecx],al
30040051:	add    BYTE PTR [eax],al
30040053:	add    BYTE PTR [ebx+0x48e9d04d],cl
30040059:	push   ecx
3004005a:	cld    
3004005b:	dec    DWORD PTR [ebp+0x3ee9dc4d]
30040061:	ud0    edi,edi
30040064:	mov    edx,DWORD PTR [esp+0x8]
30040068:	lea    eax,[edx+0xc]
3004006b:	mov    ecx,DWORD PTR [edx-0x34]
3004006e:	xor    ecx,eax
30040070:	call   0x3000115c
30040075:	mov    ecx,DWORD PTR [edx-0x4]
30040078:	xor    ecx,eax
3004007a:	call   0x3000115c
3004007f:	mov    eax,0x3004008c
30040084:	jmp    0x30038270
30040089:	nop
3004008a:	nop
3004008b:	nop
3004008c:	and    al,BYTE PTR ds:0x21993
30040092:	add    BYTE PTR [eax],al
30040094:	mov    al,ds:0x30041d
	...
300400a9:	add    BYTE PTR [eax],al
300400ab:	add    BYTE PTR [ecx],al
300400ad:	add    BYTE PTR [eax],al
300400af:	add    BYTE PTR [ebp-0x13160fb3],cl
300400b5:	push   eax
300400b6:	cld    
300400b7:	dec    DWORD PTR [ebp-0x1b1613b3]
300400bd:	push   eax
300400be:	cld    
300400bf:	dec    DWORD PTR [ebx-0x72f7dbac]
300400c5:	inc    edx
300400c6:	or     al,0x8b
300400c8:	dec    edx
300400c9:	call   0xbbecc901
300400ce:	adc    ah,bh
300400d0:	(bad)  
300400d1:	mov    eax,0x300400dc
300400d6:	jmp    0x30038270
300400db:	nop
300400dc:	and    al,BYTE PTR ds:0x21993
300400e2:	add    BYTE PTR [eax],al
300400e4:	mov    al,0x1d
300400e6:	add    al,0x30
	...
300400fc:	add    DWORD PTR [eax],eax
300400fe:	add    BYTE PTR [eax],al
30040100:	lea    ecx,[ebp-0x40]
30040103:	jmp    0x300051ae
30040108:	lea    ecx,[ebp-0x64]
3004010b:	jmp    0x300051ae
30040110:	lea    ecx,[ebp-0x4c]
30040113:	jmp    0x300051ae
30040118:	lea    ecx,[ebp-0x1c]
3004011b:	jmp    0x300051a4
30040120:	lea    ecx,[ebp-0x24]
30040123:	jmp    0x300051a4
30040128:	lea    ecx,[ebp-0x20]
3004012b:	jmp    0x300051a4
30040130:	lea    ecx,[ebp-0x18]
30040133:	jmp    0x300051a4
30040138:	lea    ecx,[ebp-0x14]
3004013b:	jmp    0x300051a4
30040140:	lea    ecx,[ebp-0x58]
30040143:	jmp    0x300051ae
30040148:	lea    ecx,[ebp+0x8]
3004014b:	jmp    0x300051a4
30040150:	mov    edx,DWORD PTR [esp+0x8]
30040154:	lea    eax,[edx+0xc]
30040157:	mov    ecx,DWORD PTR [edx-0x68]
3004015a:	xor    ecx,eax
3004015c:	call   0x3000115c
30040161:	mov    eax,0x30040170
30040166:	jmp    0x30038270
3004016b:	nop
3004016c:	nop
3004016d:	nop
3004016e:	nop
3004016f:	nop
30040170:	and    al,BYTE PTR ds:0xa1993
30040176:	add    BYTE PTR [eax],al
30040178:	rcr    BYTE PTR ds:0x3004,0x0
	...
3004018f:	add    BYTE PTR [ecx],al
30040191:	add    BYTE PTR [eax],al
30040193:	add    BYTE PTR [eax],al
30040195:	add    BYTE PTR [eax],al
30040197:	add    BYTE PTR [ebp-0xa4f73],cl
3004019d:	(bad)  
3004019e:	jmp    0x300051a4
300401a3:	nop
300401a4:	(bad)  
300401a5:	(bad)  
300401a6:	(bad)  
300401a7:	call   FWORD PTR [eax-0x74cffbff]
300401ad:	push   esp
300401ae:	and    al,0x8
300401b0:	lea    eax,[edx+0xc]
300401b3:	mov    ecx,DWORD PTR [edx-0xa6c]
300401b9:	xor    ecx,eax
300401bb:	call   0x3000115c
300401c0:	mov    ecx,DWORD PTR [edx-0x4]
300401c3:	xor    ecx,eax
300401c5:	call   0x3000115c
300401ca:	mov    eax,0x300401d4
300401cf:	jmp    0x30038270
300401d4:	and    al,BYTE PTR ds:0x11993
300401da:	add    BYTE PTR [eax],al
300401dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
300401dd:	add    DWORD PTR [eax+esi*1],eax
	...
300401f4:	add    DWORD PTR [eax],eax
300401f6:	add    BYTE PTR [eax],al
300401f8:	lea    ecx,[ebp+0xc]
300401fb:	jmp    0x300051a4
30040200:	lea    ecx,[ebp+0x8]
30040203:	jmp    0x300122e2
30040208:	mov    edx,DWORD PTR [esp+0x8]
3004020c:	lea    eax,[edx+0xc]
3004020f:	mov    ecx,DWORD PTR [edx-0x18]
30040212:	xor    ecx,eax
30040214:	call   0x3000115c
30040219:	mov    eax,0x30040224
3004021e:	jmp    0x30038270
30040223:	nop
30040224:	and    al,BYTE PTR ds:0x21993
3004022a:	add    BYTE PTR [eax],al
3004022c:	fcomp  QWORD PTR [esi]
3004022e:	add    al,0x30
	...
30040244:	add    DWORD PTR [eax],eax
30040246:	add    BYTE PTR [eax],al
30040248:	mov    ecx,DWORD PTR [ebp-0x10]
3004024b:	jmp    0x30031b84
30040250:	(bad)  
30040251:	(bad)  
30040252:	(bad)  
30040253:	dec    DWORD PTR [eax+0x2]
30040256:	add    al,0x30
30040258:	mov    edx,DWORD PTR [esp+0x8]
3004025c:	lea    eax,[edx+0xc]
3004025f:	mov    ecx,DWORD PTR [edx-0x14]
30040262:	xor    ecx,eax
30040264:	call   0x3000115c
30040269:	mov    eax,0x30040274
3004026e:	jmp    0x30038270
30040273:	nop
30040274:	and    al,BYTE PTR ds:0x11993
3004027a:	add    BYTE PTR [eax],al
3004027c:	push   eax
3004027d:	add    al,BYTE PTR [eax+esi*1]
	...
30040294:	add    DWORD PTR [eax],eax
30040296:	add    BYTE PTR [eax],al
30040298:	mov    ecx,DWORD PTR [ebp-0x10]
3004029b:	jmp    0x30031c67
300402a0:	(bad)  
300402a1:	(bad)  
300402a2:	(bad)  
300402a3:	call   FWORD PTR [eax-0x74cffbfe]
300402a9:	push   esp
300402aa:	and    al,0x8
300402ac:	lea    eax,[edx+0xc]
300402af:	mov    ecx,DWORD PTR [edx-0x14]
300402b2:	xor    ecx,eax
300402b4:	call   0x3000115c
300402b9:	mov    eax,0x300402c4
300402be:	jmp    0x30038270
300402c3:	nop
300402c4:	and    al,BYTE PTR ds:0x11993
300402ca:	add    BYTE PTR [eax],al
300402cc:	mov    al,ds:0x300402
	...
300402e1:	add    BYTE PTR [eax],al
300402e3:	add    BYTE PTR [ecx],al
300402e5:	add    BYTE PTR [eax],al
300402e7:	add    BYTE PTR [ebx-0x57160fb3],cl
300402ed:	je     0x300402ec
300402ef:	(bad)  
300402f0:	(bad)  
300402f1:	(bad)  
300402f2:	(bad)  
300402f3:	(bad)  
300402f4:	call   0xbb3406fb
300402f9:	push   esp
300402fa:	and    al,0x8
300402fc:	lea    eax,[edx+0xc]
300402ff:	mov    ecx,DWORD PTR [edx-0x14]
30040302:	xor    ecx,eax
30040304:	call   0x3000115c
30040309:	mov    eax,0x30040314
3004030e:	jmp    0x30038270
30040313:	nop
30040314:	and    al,BYTE PTR ds:0x11993
3004031a:	add    BYTE PTR [eax],al
3004031c:	lock add al,BYTE PTR [eax+esi*1]
	...
30040334:	add    DWORD PTR [eax],eax
30040336:	add    BYTE PTR [eax],al
30040338:	mov    ecx,DWORD PTR [ebp-0x10]
3004033b:	add    ecx,0xc
3004033e:	jmp    0x3001e3be
30040343:	mov    ecx,DWORD PTR [ebp-0x10]
30040346:	add    ecx,0x4
30040349:	jmp    0x30031c59
3004034e:	mov    ecx,DWORD PTR [ebp-0x10]
30040351:	add    ecx,0x2c
30040354:	jmp    0x300122e2
30040359:	mov    edx,DWORD PTR [esp+0x8]
3004035d:	lea    eax,[edx+0xc]
30040360:	mov    ecx,DWORD PTR [edx-0x14]
30040363:	xor    ecx,eax
30040365:	call   0x3000115c
3004036a:	mov    eax,0x30040374
3004036f:	jmp    0x30038270
30040374:	and    al,BYTE PTR ds:0x31993
3004037a:	add    BYTE PTR [eax],al
3004037c:	adc    al,0x1f
3004037e:	add    al,0x30
	...
30040394:	add    DWORD PTR [eax],eax
30040396:	add    BYTE PTR [eax],al
30040398:	lea    ecx,[ebp-0x14]
3004039b:	jmp    0x300122e2
300403a0:	lea    ecx,[ebp+0xc]
300403a3:	jmp    0x300122e2
300403a8:	mov    edx,DWORD PTR [esp+0x8]
300403ac:	lea    eax,[edx+0xc]
300403af:	mov    ecx,DWORD PTR [edx-0x18]
300403b2:	xor    ecx,eax
300403b4:	call   0x3000115c
300403b9:	mov    eax,0x300403c4
300403be:	jmp    0x30038270
300403c3:	nop
300403c4:	and    al,BYTE PTR ds:0x21993
300403ca:	add    BYTE PTR [eax],al
300403cc:	in     al,dx
300403cd:	push   ds
300403ce:	add    al,0x30
	...
300403e4:	add    DWORD PTR [eax],eax
300403e6:	add    BYTE PTR [eax],al
300403e8:	lea    ecx,[ebp-0x418]
300403ee:	jmp    0x300122e2
300403f3:	lea    ecx,[ebp-0x41c]
300403f9:	jmp    0x300122e2
300403fe:	lea    ecx,[ebp-0x414]
30040404:	jmp    0x300122e2
30040409:	mov    edx,DWORD PTR [esp+0x8]
3004040d:	lea    eax,[edx+0xc]
30040410:	mov    ecx,DWORD PTR [edx-0x428]
30040416:	xor    ecx,eax
30040418:	call   0x3000115c
3004041d:	mov    ecx,DWORD PTR [edx-0x4]
30040420:	xor    ecx,eax
30040422:	call   0x3000115c
30040427:	mov    eax,0x30040434
3004042c:	jmp    0x30038270
30040431:	nop
30040432:	nop
30040433:	nop
30040434:	and    al,BYTE PTR ds:0x31993
3004043a:	add    BYTE PTR [eax],al
3004043c:	cld    
3004043d:	push   ds
3004043e:	add    al,0x30
	...
30040454:	add    DWORD PTR [eax],eax
30040456:	add    BYTE PTR [eax],al
30040458:	push   0x300430f0
3004045d:	push   DWORD PTR [ebp-0x20]
30040460:	call   0x30037e0c
30040465:	pop    ecx
30040466:	pop    ecx
30040467:	ret    
30040468:	mov    ecx,DWORD PTR [ebp-0x20]
3004046b:	jmp    0x30031b84
30040470:	mov    edx,DWORD PTR [esp+0x8]
30040474:	lea    eax,[edx+0xc]
30040477:	mov    ecx,DWORD PTR [edx-0x24]
3004047a:	xor    ecx,eax
3004047c:	call   0x3000115c
30040481:	mov    eax,0x3004048c
30040486:	jmp    0x30038270
3004048b:	nop
3004048c:	and    al,BYTE PTR ds:0x41993
30040492:	add    BYTE PTR [eax],al
30040494:	cwde   
30040495:	push   ds
30040496:	add    al,0x30
30040498:	add    DWORD PTR [eax],eax
3004049a:	add    BYTE PTR [eax],al
3004049c:	mov    eax,0x30041e
	...
300404a9:	add    BYTE PTR [eax],al
300404ab:	add    BYTE PTR [ecx],al
300404ad:	add    BYTE PTR [eax],al
300404af:	add    BYTE PTR [eax-0x10],ch
300404b2:	xor    BYTE PTR [eax+esi*1],al
300404b5:	push   DWORD PTR [ebp-0x20]
300404b8:	call   0x30037e0c
300404bd:	pop    ecx
300404be:	pop    ecx
300404bf:	ret    
300404c0:	mov    ecx,DWORD PTR [ebp-0x20]
300404c3:	jmp    0x30031c67
300404c8:	mov    edx,DWORD PTR [esp+0x8]
300404cc:	lea    eax,[edx+0xc]
300404cf:	mov    ecx,DWORD PTR [edx-0x24]
300404d2:	xor    ecx,eax
300404d4:	call   0x3000115c
300404d9:	mov    eax,0x300404e4
300404de:	jmp    0x30038270
300404e3:	nop
300404e4:	and    al,BYTE PTR ds:0x41993
300404ea:	add    BYTE PTR [eax],al
300404ec:	adc    BYTE PTR [esi],bl
300404ee:	add    al,0x30
300404f0:	add    DWORD PTR [eax],eax
300404f2:	add    BYTE PTR [eax],al
300404f4:	xor    BYTE PTR [esi],bl
300404f6:	add    al,0x30
	...
30040504:	add    DWORD PTR [eax],eax
30040506:	add    BYTE PTR [eax],al
30040508:	push   0x300430f0
3004050d:	push   DWORD PTR [ebp-0x20]
30040510:	call   0x30037e0c
30040515:	pop    ecx
30040516:	pop    ecx
30040517:	ret    
30040518:	mov    ecx,DWORD PTR [ebp-0x20]
3004051b:	jmp    0x30017798
30040520:	mov    edx,DWORD PTR [esp+0x8]
30040524:	lea    eax,[edx+0xc]
30040527:	mov    ecx,DWORD PTR [edx-0x24]
3004052a:	xor    ecx,eax
3004052c:	call   0x3000115c
30040531:	mov    eax,0x3004053c
30040536:	jmp    0x30038270
3004053b:	nop
3004053c:	and    al,BYTE PTR ds:0x41993
30040542:	add    BYTE PTR [eax],al
30040544:	push   esp
30040545:	push   ds
30040546:	add    al,0x30
30040548:	add    DWORD PTR [eax],eax
3004054a:	add    BYTE PTR [eax],al
3004054c:	je     0x3004056c
3004054e:	add    al,0x30
	...
3004055c:	add    DWORD PTR [eax],eax
3004055e:	add    BYTE PTR [eax],al
30040560:	lea    ecx,[ebp-0x18]
30040563:	jmp    0x3002be9c
30040568:	(bad)  
30040569:	(bad)  
3004056a:	(bad)  
3004056b:	jmp    DWORD PTR [eax+0x5]
3004056e:	add    al,0x30
30040570:	mov    edx,DWORD PTR [esp+0x8]
30040574:	lea    eax,[edx+0xc]
30040577:	mov    ecx,DWORD PTR [edx-0x20]
3004057a:	xor    ecx,eax
3004057c:	call   0x3000115c
30040581:	mov    eax,0x3004058c
30040586:	jmp    0x30038270
3004058b:	nop
3004058c:	and    al,BYTE PTR ds:0x11993
30040592:	add    BYTE PTR [eax],al
30040594:	push   0x300405
	...
300405a9:	add    BYTE PTR [eax],al
300405ab:	add    BYTE PTR [ecx],al
300405ad:	add    BYTE PTR [eax],al
300405af:	add    BYTE PTR [ebp+0x2ae9f04d],cl
300405b5:	sbb    eax,0xfffffffd
300405ba:	(bad)  
300405bb:	push   DWORD PTR [eax-0x74cffbfb]
300405c1:	push   esp
300405c2:	and    al,0x8
300405c4:	lea    eax,[edx+0xc]
300405c7:	mov    ecx,DWORD PTR [edx-0x14]
300405ca:	xor    ecx,eax
300405cc:	call   0x3000115c
300405d1:	mov    eax,0x300405dc
300405d6:	jmp    0x30038270
300405db:	nop
300405dc:	and    al,BYTE PTR ds:0x11993
300405e2:	add    BYTE PTR [eax],al
300405e4:	mov    eax,0x300405
	...
300405f9:	add    BYTE PTR [eax],al
300405fb:	add    BYTE PTR [ecx],al
300405fd:	add    BYTE PTR [eax],al
300405ff:	add    BYTE PTR [ebp-0x63160fb3],cl
30040605:	dec    ebx
30040606:	cld    
30040607:	(bad)  
30040608:	(bad)  
30040609:	(bad)  
3004060a:	(bad)  
3004060b:	inc    DWORD PTR [eax]
3004060d:	push   es
3004060e:	add    al,0x30
30040610:	mov    edx,DWORD PTR [esp+0x8]
30040614:	lea    eax,[edx+0xc]
30040617:	mov    ecx,DWORD PTR [edx-0x18]
3004061a:	xor    ecx,eax
3004061c:	call   0x3000115c
30040621:	mov    eax,0x3004062c
30040626:	jmp    0x30038270
3004062b:	nop
3004062c:	and    al,BYTE PTR ds:0x11993
30040632:	add    BYTE PTR [eax],al
30040634:	or     BYTE PTR [esi],al
30040636:	add    al,0x30
	...
3004064c:	add    DWORD PTR [eax],eax
3004064e:	add    BYTE PTR [eax],al
30040650:	push   DWORD PTR [ebp-0x10]
30040653:	call   DWORD PTR ds:0x300452ac
30040659:	pop    ecx
3004065a:	ret    
3004065b:	mov    ecx,DWORD PTR [ebp-0x10]
3004065e:	jmp    0x300122e2
30040663:	mov    ecx,DWORD PTR [ebp-0x10]
30040666:	add    ecx,0x4
30040669:	jmp    0x300122e2
3004066e:	mov    edx,DWORD PTR [esp+0x8]
30040672:	lea    eax,[edx+0xc]
30040675:	mov    ecx,DWORD PTR [edx-0x14]
30040678:	xor    ecx,eax
3004067a:	call   0x3000115c
3004067f:	mov    eax,0x3004068c
30040684:	jmp    0x30038270
30040689:	nop
3004068a:	nop
3004068b:	nop
3004068c:	and    al,BYTE PTR ds:0x31993
30040692:	add    BYTE PTR [eax],al
30040694:	sub    al,0x1f
30040696:	add    al,0x30
	...
300406ac:	add    DWORD PTR [eax],eax
300406ae:	add    BYTE PTR [eax],al
300406b0:	lea    ecx,[ebp-0x74]
300406b3:	jmp    0x300122e2
300406b8:	(bad)  
300406b9:	(bad)  
300406ba:	(bad)  
300406bb:	push   DWORD PTR [eax-0x74cffbfa]
300406c1:	push   esp
300406c2:	and    al,0x8
300406c4:	lea    eax,[edx-0x74]
300406c7:	mov    ecx,DWORD PTR [edx-0x78]
300406ca:	xor    ecx,eax
300406cc:	call   0x3000115c
300406d1:	add    eax,0xc
300406d4:	mov    ecx,DWORD PTR [edx-0x8]
300406d7:	xor    ecx,eax
300406d9:	call   0x3000115c
300406de:	mov    eax,0x300406e8
300406e3:	jmp    0x30038270
300406e8:	and    al,BYTE PTR ds:0x11993
300406ee:	add    BYTE PTR [eax],al
300406f0:	mov    eax,0x300406
	...
30040705:	add    BYTE PTR [eax],al
30040707:	add    BYTE PTR [ecx],al
30040709:	add    BYTE PTR [eax],al
3004070b:	add    BYTE PTR [ebp-0x31160fb3],cl
30040711:	sbb    edi,ebp
30040713:	(bad)  
30040714:	(bad)  
30040715:	(bad)  
30040716:	(bad)  
30040717:	dec    DWORD PTR [edi+eax*1]
3004071a:	add    al,0x30
3004071c:	mov    edx,DWORD PTR [esp+0x8]
30040720:	lea    eax,[edx+0xc]
30040723:	mov    ecx,DWORD PTR [edx-0x28]
30040726:	xor    ecx,eax
30040728:	call   0x3000115c
3004072d:	mov    eax,0x30040738
30040732:	jmp    0x30038270
30040737:	nop
30040738:	and    al,BYTE PTR ds:0x11993
3004073e:	add    BYTE PTR [eax],al
30040740:	adc    al,0x7
30040742:	add    al,0x30
	...
30040758:	add    DWORD PTR [eax],eax
3004075a:	add    BYTE PTR [eax],al
3004075c:	lea    ecx,[ebp+0xc]
3004075f:	jmp    0x300122e2
30040764:	(bad)  
30040765:	(bad)  
30040766:	(bad)  
30040767:	call   FWORD PTR [edi+eax*1+0x4]
3004076b:	xor    BYTE PTR [ebx-0x72f7dbac],cl
30040771:	inc    edx
30040772:	or     al,0x8b
30040774:	dec    edx
30040775:	in     al,dx
30040776:	xor    ecx,eax
30040778:	call   0x3000115c
3004077d:	mov    eax,0x30040788
30040782:	jmp    0x30038270
30040787:	nop
30040788:	and    al,BYTE PTR ds:0x11993
3004078e:	add    BYTE PTR [eax],al
30040790:	fs pop es
30040792:	add    al,0x30
	...
300407a8:	add    DWORD PTR [eax],eax
300407aa:	add    BYTE PTR [eax],al
300407ac:	mov    ecx,DWORD PTR [ebp-0x10]
300407af:	add    ecx,0x8
300407b2:	jmp    0x30031f11
300407b7:	nop
300407b8:	(bad)  
300407b9:	(bad)  
300407ba:	(bad)  
300407bb:	jmp    FWORD PTR [edi+eax*1+0x548b3004]
300407c2:	and    al,0x8
300407c4:	lea    eax,[edx+0xc]
300407c7:	mov    ecx,DWORD PTR [edx-0x14]
300407ca:	xor    ecx,eax
300407cc:	call   0x3000115c
300407d1:	mov    eax,0x300407dc
300407d6:	jmp    0x30038270
300407db:	nop
300407dc:	and    al,BYTE PTR ds:0x11993
300407e2:	add    BYTE PTR [eax],al
300407e4:	mov    eax,0x300407
	...
300407f9:	add    BYTE PTR [eax],al
300407fb:	add    BYTE PTR [ecx],al
300407fd:	add    BYTE PTR [eax],al
300407ff:	add    BYTE PTR [ebp+0x65e9d44d],cl
30040805:	dec    eax
30040806:	std    
30040807:	(bad)  
30040808:	(bad)  
30040809:	(bad)  
3004080a:	(bad)  
3004080b:	inc    DWORD PTR [eax]
3004080d:	or     BYTE PTR [eax+esi*1],al
30040810:	mov    edx,DWORD PTR [esp+0x8]
30040814:	lea    eax,[edx+0xc]
30040817:	mov    ecx,DWORD PTR [edx-0x30]
3004081a:	xor    ecx,eax
3004081c:	call   0x3000115c
30040821:	mov    eax,0x3004082c
30040826:	jmp    0x30038270
3004082b:	nop
3004082c:	and    al,BYTE PTR ds:0x11993
30040832:	add    BYTE PTR [eax],al
30040834:	or     BYTE PTR [eax],cl
30040836:	add    al,0x30
	...
3004084c:	add    DWORD PTR [eax],eax
3004084e:	add    BYTE PTR [eax],al
30040850:	lea    ecx,[ebp+0xc]
30040853:	jmp    0x300051a4
30040858:	lea    ecx,[ebp+0x8]
3004085b:	jmp    0x300051a4
30040860:	mov    edx,DWORD PTR [esp+0x8]
30040864:	lea    eax,[edx+0xc]
30040867:	mov    ecx,DWORD PTR [edx-0x14]
3004086a:	xor    ecx,eax
3004086c:	call   0x3000115c
30040871:	mov    eax,0x3004087c
30040876:	jmp    0x30038270
3004087b:	nop
3004087c:	and    al,BYTE PTR ds:0x21993
30040882:	add    BYTE PTR [eax],al
30040884:	ins    BYTE PTR es:[edi],dx
30040885:	pop    ds
30040886:	add    al,0x30
	...
3004089c:	add    DWORD PTR [eax],eax
3004089e:	add    BYTE PTR [eax],al
300408a0:	lea    ecx,[ebp+0xc]
300408a3:	jmp    0x300051a4
300408a8:	lea    ecx,[ebp+0x8]
300408ab:	jmp    0x300051a4
300408b0:	mov    edx,DWORD PTR [esp+0x8]
300408b4:	lea    eax,[edx+0xc]
300408b7:	mov    ecx,DWORD PTR [edx-0x10]
300408ba:	xor    ecx,eax
300408bc:	call   0x3000115c
300408c1:	mov    eax,0x300408cc
300408c6:	jmp    0x30038270
300408cb:	nop
300408cc:	and    al,BYTE PTR ds:0x21993
300408d2:	add    BYTE PTR [eax],al
300408d4:	pop    esp
300408d5:	pop    ds
300408d6:	add    al,0x30
	...
300408ec:	add    DWORD PTR [eax],eax
300408ee:	add    BYTE PTR [eax],al
300408f0:	mov    ecx,DWORD PTR [ebp-0x10]
300408f3:	add    ecx,0xc
300408f6:	jmp    0x300051a4
300408fb:	mov    ecx,DWORD PTR [ebp-0x10]
300408fe:	add    ecx,0x10
30040901:	jmp    0x300051a4
30040906:	mov    ecx,DWORD PTR [ebp-0x10]
30040909:	add    ecx,0x14
3004090c:	jmp    0x300051a4
30040911:	mov    edx,DWORD PTR [esp+0x8]
30040915:	lea    eax,[edx+0xc]
30040918:	mov    ecx,DWORD PTR [edx-0x14]
3004091b:	xor    ecx,eax
3004091d:	call   0x3000115c
30040922:	mov    eax,0x3004092c
30040927:	jmp    0x30038270
3004092c:	and    al,BYTE PTR ds:0x31993
30040932:	add    BYTE PTR [eax],al
30040934:	inc    esp
30040935:	pop    ds
30040936:	add    al,0x30
	...
3004094c:	add    DWORD PTR [eax],eax
3004094e:	add    BYTE PTR [eax],al
30040950:	jmp    0x3002ae0a
30040955:	nop
30040956:	nop
30040957:	nop
30040958:	(bad)  
30040959:	(bad)  
3004095a:	(bad)  
3004095b:	call   DWORD PTR [eax+0x9]
3004095e:	add    al,0x30
30040960:	mov    edx,DWORD PTR [esp+0x8]
30040964:	lea    eax,[edx+0xc]
30040967:	mov    ecx,DWORD PTR [edx-0x10]
3004096a:	xor    ecx,eax
3004096c:	call   0x3000115c
30040971:	mov    eax,0x3004097c
30040976:	jmp    0x30038270
3004097b:	nop
3004097c:	and    al,BYTE PTR ds:0x11993
30040982:	add    BYTE PTR [eax],al
30040984:	pop    eax
30040985:	or     DWORD PTR [eax+esi*1],eax
	...
3004099c:	add    DWORD PTR [eax],eax
3004099e:	add    BYTE PTR [eax],al
300409a0:	mov    eax,ds:0x30043064
300409a5:	and    eax,0xfffffffe
300409a8:	mov    ds:0x30043064,eax
300409ad:	ret    
300409ae:	nop
300409af:	nop
300409b0:	(bad)  
300409b1:	(bad)  
300409b2:	(bad)  
300409b3:	jmp    DWORD PTR [eax-0x74cffbf7]
300409b9:	push   esp
300409ba:	and    al,0x8
300409bc:	lea    eax,[edx+0xc]
300409bf:	mov    ecx,DWORD PTR [edx-0x10]
300409c2:	xor    ecx,eax
300409c4:	call   0x3000115c
300409c9:	mov    eax,0x300409d4
300409ce:	jmp    0x30038270
300409d3:	nop
300409d4:	and    al,BYTE PTR ds:0x11993
300409da:	add    BYTE PTR [eax],al
300409dc:	mov    al,0x9
300409de:	add    al,0x30
	...
300409f4:	add    DWORD PTR [eax],eax
300409f6:	add    BYTE PTR [eax],al
300409f8:	lea    ecx,[ebp+0x8]
300409fb:	jmp    0x300051a4
30040a00:	(bad)  
30040a01:	(bad)  
30040a02:	(bad)  
30040a03:	(bad)  
30040a04:	clc    
30040a05:	or     DWORD PTR [eax+esi*1],eax
30040a08:	mov    edx,DWORD PTR [esp+0x8]
30040a0c:	lea    eax,[edx+0xc]
30040a0f:	mov    ecx,DWORD PTR [edx-0x10]
30040a12:	xor    ecx,eax
30040a14:	call   0x3000115c
30040a19:	mov    eax,0x30040a24
30040a1e:	jmp    0x30038270
30040a23:	nop
30040a24:	and    al,BYTE PTR ds:0x11993
30040a2a:	add    BYTE PTR [eax],al
30040a2c:	add    BYTE PTR [edx],cl
30040a2e:	add    al,0x30
	...
30040a44:	add    DWORD PTR [eax],eax
30040a46:	add    BYTE PTR [eax],al
30040a48:	push   DWORD PTR [ebp-0x10]
30040a4b:	push   DWORD PTR [ebp-0x14]
30040a4e:	call   0x3002ae0a
30040a53:	pop    ecx
30040a54:	pop    ecx
30040a55:	ret    
30040a56:	nop
30040a57:	nop
30040a58:	(bad)  
30040a59:	(bad)  
30040a5a:	(bad)  
30040a5b:	dec    DWORD PTR [eax+0xa]
30040a5e:	add    al,0x30
30040a60:	mov    edx,DWORD PTR [esp+0x8]
30040a64:	lea    eax,[edx+0xc]
30040a67:	mov    ecx,DWORD PTR [edx-0x18]
30040a6a:	xor    ecx,eax
30040a6c:	call   0x3000115c
30040a71:	mov    eax,0x30040a7c
30040a76:	jmp    0x30038270
30040a7b:	nop
30040a7c:	and    al,BYTE PTR ds:0x11993
30040a82:	add    BYTE PTR [eax],al
30040a84:	pop    eax
30040a85:	or     al,BYTE PTR [eax+esi*1]
	...
30040a9c:	add    DWORD PTR [eax],eax
30040a9e:	add    BYTE PTR [eax],al
30040aa0:	mov    ecx,DWORD PTR [ebp+0x8]
30040aa3:	jmp    0x300051a4
30040aa8:	(bad)  
30040aa9:	(bad)  
30040aaa:	(bad)  
30040aab:	jmp    DWORD PTR [eax-0x74cffbf6]
30040ab1:	push   esp
30040ab2:	and    al,0x8
30040ab4:	lea    eax,[edx+0xc]
30040ab7:	mov    ecx,DWORD PTR [edx-0x18]
30040aba:	xor    ecx,eax
30040abc:	call   0x3000115c
30040ac1:	mov    eax,0x30040acc
30040ac6:	jmp    0x30038270
30040acb:	nop
30040acc:	and    al,BYTE PTR ds:0x11993
30040ad2:	add    BYTE PTR [eax],al
30040ad4:	test   al,0xa
30040ad6:	add    al,0x30
	...
30040aec:	add    DWORD PTR [eax],eax
30040aee:	add    BYTE PTR [eax],al
30040af0:	lea    ecx,[ebp-0x14]
30040af3:	jmp    0x300014b2
30040af8:	lea    ecx,[ebp-0x10]
30040afb:	jmp    0x3002be9c
30040b00:	lea    ecx,[ebp-0x18]
30040b03:	jmp    0x3002be9c
30040b08:	mov    edx,DWORD PTR [esp+0x8]
30040b0c:	lea    eax,[edx+0xc]
30040b0f:	mov    ecx,DWORD PTR [edx-0x28]
30040b12:	xor    ecx,eax
30040b14:	call   0x3000115c
30040b19:	mov    eax,0x30040b24
30040b1e:	jmp    0x30038270
30040b23:	nop
30040b24:	and    al,BYTE PTR ds:0x31993
30040b2a:	add    BYTE PTR [eax],al
30040b2c:	ins    BYTE PTR es:[edi],dx
30040b2d:	and    BYTE PTR [eax+esi*1],al
	...
30040b44:	add    DWORD PTR [eax],eax
30040b46:	add    BYTE PTR [eax],al
30040b48:	lea    ecx,[ebp-0x90]
30040b4e:	jmp    0x3002be9c
30040b53:	lea    ecx,[ebp-0x8c]
30040b59:	jmp    0x300014b2
30040b5e:	lea    ecx,[ebp-0xa4]
30040b64:	jmp    0x3002be9c
30040b69:	lea    ecx,[ebp-0x98]
30040b6f:	jmp    0x3002be9c
30040b74:	lea    ecx,[ebp-0x84]
30040b7a:	jmp    0x3002be9c
30040b7f:	lea    ecx,[ebp-0x80]
30040b82:	jmp    0x3002be9c
30040b87:	lea    ecx,[ebp-0x84]
30040b8d:	jmp    0x3002be9c
30040b92:	mov    edx,DWORD PTR [esp+0x8]
30040b96:	lea    eax,[edx+0xc]
30040b99:	mov    ecx,DWORD PTR [edx-0x108]
30040b9f:	xor    ecx,eax
30040ba1:	call   0x3000115c
30040ba6:	mov    ecx,DWORD PTR [edx-0x4]
30040ba9:	xor    ecx,eax
30040bab:	call   0x3000115c
30040bb0:	mov    eax,0x30040bbc
30040bb5:	jmp    0x30038270
30040bba:	nop
30040bbb:	nop
30040bbc:	and    al,BYTE PTR ds:0x71993
30040bc2:	add    BYTE PTR [eax],al
30040bc4:	and    al,0x20
30040bc6:	add    al,0x30
	...
30040bdc:	add    DWORD PTR [eax],eax
30040bde:	add    BYTE PTR [eax],al
30040be0:	lea    ecx,[ebp-0x10]
30040be3:	jmp    0x3002be9c
30040be8:	(bad)  
30040be9:	(bad)  
30040bea:	(bad)  
30040beb:	jmp    eax
30040bed:	or     eax,DWORD PTR [eax+esi*1]
30040bf0:	mov    edx,DWORD PTR [esp+0x8]
30040bf4:	lea    eax,[edx+0xc]
30040bf7:	mov    ecx,DWORD PTR [edx-0x1c]
30040bfa:	xor    ecx,eax
30040bfc:	call   0x3000115c
30040c01:	mov    eax,0x30040c0c
30040c06:	jmp    0x30038270
30040c0b:	nop
30040c0c:	and    al,BYTE PTR ds:0x11993
30040c12:	add    BYTE PTR [eax],al
30040c14:	call   0x30341024
	...
30040c29:	add    BYTE PTR [eax],al
30040c2b:	add    BYTE PTR [ecx],al
30040c2d:	add    BYTE PTR [eax],al
30040c2f:	add    BYTE PTR [ebp+0x64e9884d],cl
30040c35:	mov    dl,0xfe
30040c37:	(bad)  
30040c38:	(bad)  
30040c39:	(bad)  
30040c3a:	(bad)  
30040c3b:	push   DWORD PTR [eax]
30040c3d:	or     al,0x4
30040c3f:	xor    BYTE PTR [ebx-0x72f7dbac],cl
30040c45:	inc    edx
30040c46:	or     al,0x8b
30040c48:	dec    edx
30040c49:	test   BYTE PTR [ebx],dh
30040c4b:	enter  0xbe8,0x5
30040c4f:	cld    
30040c50:	dec    DWORD PTR [ebx-0x37cc03b6]
30040c56:	call   0x3000115c
30040c5b:	mov    eax,0x30040c68
30040c60:	jmp    0x30038270
30040c65:	nop
30040c66:	nop
30040c67:	nop
30040c68:	and    al,BYTE PTR ds:0x11993
30040c6e:	add    BYTE PTR [eax],al
30040c70:	cmp    BYTE PTR [esp+eax*1],cl
30040c73:	xor    BYTE PTR [eax],al
	...
30040c85:	add    BYTE PTR [eax],al
30040c87:	add    BYTE PTR [ecx],al
30040c89:	add    BYTE PTR [eax],al
30040c8b:	add    BYTE PTR [ebp+0x8e9804d],cl
30040c91:	mov    dl,0xfe
30040c93:	dec    DWORD PTR [ebp-0x8773]
30040c99:	(bad)  
30040c9a:	jmp    0x3002be9c
30040c9f:	lea    ecx,[ebp-0x78]
30040ca2:	jmp    0x3002be9c
30040ca7:	lea    ecx,[ebp-0x7c]
30040caa:	jmp    0x300014b2
30040caf:	mov    edx,DWORD PTR [esp+0x8]
30040cb3:	lea    eax,[edx+0xc]
30040cb6:	mov    ecx,DWORD PTR [edx-0x94]
30040cbc:	xor    ecx,eax
30040cbe:	call   0x3000115c
30040cc3:	mov    ecx,DWORD PTR [edx-0x4]
30040cc6:	xor    ecx,eax
30040cc8:	call   0x3000115c
30040ccd:	mov    eax,0x30040cd8
30040cd2:	jmp    0x30038270
30040cd7:	nop
30040cd8:	and    al,BYTE PTR ds:0x41993
30040cde:	add    BYTE PTR [eax],al
30040ce0:	mov    esp,0x30041f
	...
30040cf5:	add    BYTE PTR [eax],al
30040cf7:	add    BYTE PTR [ecx],al
30040cf9:	add    BYTE PTR [eax],al
30040cfb:	add    BYTE PTR [ebp-0x83f73],cl
30040d01:	(bad)  
30040d02:	jmp    0x3002be9c
30040d07:	lea    ecx,[ebp-0x838]
30040d0d:	jmp    0x3002be9c
30040d12:	lea    ecx,[ebp-0x834]
30040d18:	jmp    0x300014b2
30040d1d:	mov    edx,DWORD PTR [esp+0x8]
30040d21:	lea    eax,[edx+0xc]
30040d24:	mov    ecx,DWORD PTR [edx-0x850]
30040d2a:	xor    ecx,eax
30040d2c:	call   0x3000115c
30040d31:	mov    ecx,DWORD PTR [edx-0x4]
30040d34:	xor    ecx,eax
30040d36:	call   0x3000115c
30040d3b:	mov    eax,0x30040d48
30040d40:	jmp    0x30038270
30040d45:	nop
30040d46:	nop
30040d47:	nop
30040d48:	and    al,BYTE PTR ds:0x31993
30040d4e:	add    BYTE PTR [eax],al
30040d50:	fcomp  QWORD PTR [edi]
30040d52:	add    al,0x30
	...
30040d68:	add    DWORD PTR [eax],eax
30040d6a:	add    BYTE PTR [eax],al
30040d6c:	lea    ecx,[ebp-0x10]
30040d6f:	jmp    0x300122e2
30040d74:	(bad)  
30040d75:	(bad)  
30040d76:	(bad)  
30040d77:	jmp    FWORD PTR [ebp+ecx*1+0x4]
30040d7b:	xor    BYTE PTR [ebx-0x72f7dbac],cl
30040d81:	inc    edx
30040d82:	or     al,0x8b
30040d84:	dec    edx
30040d85:	call   0xffecd5bd
30040d8a:	add    edi,esp
30040d8c:	(bad)  
30040d8d:	mov    eax,0x30040d98
30040d92:	jmp    0x30038270
30040d97:	nop
30040d98:	and    al,BYTE PTR ds:0x11993
30040d9e:	add    BYTE PTR [eax],al
30040da0:	je     0x30040daf
30040da2:	add    al,0x30
	...
30040db8:	add    DWORD PTR [eax],eax
30040dba:	add    BYTE PTR [eax],al
30040dbc:	lea    ecx,[ebp-0x12c]
30040dc2:	jmp    0x300332c4
30040dc7:	lea    ecx,[ebp-0x128]
30040dcd:	jmp    0x300122e2
30040dd2:	mov    edx,DWORD PTR [esp+0x8]
30040dd6:	lea    eax,[edx+0xc]
30040dd9:	mov    ecx,DWORD PTR [edx-0x130]
30040ddf:	xor    ecx,eax
30040de1:	call   0x3000115c
30040de6:	mov    ecx,DWORD PTR [edx-0x4]
30040de9:	xor    ecx,eax
30040deb:	call   0x3000115c
30040df0:	mov    eax,0x30040dfc
30040df5:	jmp    0x30038270
30040dfa:	nop
30040dfb:	nop
30040dfc:	and    al,BYTE PTR ds:0x21993
30040e02:	add    BYTE PTR [eax],al
30040e04:	pop    esp
30040e05:	and    BYTE PTR [eax+esi*1],al
	...
30040e1c:	add    DWORD PTR [eax],eax
30040e1e:	add    BYTE PTR [eax],al
30040e20:	lea    ecx,[ebp-0x10]
30040e23:	jmp    0x3002be9c
30040e28:	lea    ecx,[ebp-0x14]
30040e2b:	jmp    0x300014b2
30040e30:	mov    edx,DWORD PTR [esp+0x8]
30040e34:	lea    eax,[edx+0xc]
30040e37:	mov    ecx,DWORD PTR [edx-0x20]
30040e3a:	xor    ecx,eax
30040e3c:	call   0x3000115c
30040e41:	mov    eax,0x30040e4c
30040e46:	jmp    0x30038270
30040e4b:	nop
30040e4c:	and    al,BYTE PTR ds:0x21993
30040e52:	add    BYTE PTR [eax],al
30040e54:	lods   al,BYTE PTR ds:[esi]
30040e55:	pop    ds
30040e56:	add    al,0x30
	...
30040e6c:	add    DWORD PTR [eax],eax
30040e6e:	add    BYTE PTR [eax],al
30040e70:	lea    ecx,[ebp-0x218]
30040e76:	jmp    0x3002be82
30040e7b:	nop
30040e7c:	(bad)  
30040e7d:	(bad)  
30040e7e:	(bad)  
30040e7f:	push   DWORD PTR [eax+0xe]
30040e82:	add    al,0x30
30040e84:	mov    edx,DWORD PTR [esp+0x8]
30040e88:	lea    eax,[edx+0xc]
30040e8b:	mov    ecx,DWORD PTR [edx-0x22c]
30040e91:	xor    ecx,eax
30040e93:	call   0x3000115c
30040e98:	mov    ecx,DWORD PTR [edx-0x4]
30040e9b:	xor    ecx,eax
30040e9d:	call   0x3000115c
30040ea2:	mov    eax,0x30040eac
30040ea7:	jmp    0x30038270
30040eac:	and    al,BYTE PTR ds:0x11993
30040eb2:	add    BYTE PTR [eax],al
30040eb4:	jl     0x30040ec4
30040eb6:	add    al,0x30
	...
30040ecc:	add    DWORD PTR [eax],eax
30040ece:	add    BYTE PTR [eax],al
30040ed0:	lea    ecx,[ebp-0x18]
30040ed3:	jmp    0x300122e2
30040ed8:	lea    ecx,[ebp-0x14]
30040edb:	jmp    0x300122e2
30040ee0:	lea    ecx,[ebp-0x20]
30040ee3:	jmp    0x300122e2
30040ee8:	lea    ecx,[ebp-0x10]
30040eeb:	jmp    0x300122e2
30040ef0:	lea    ecx,[ebp-0x28]
30040ef3:	jmp    0x300122e2
30040ef8:	lea    ecx,[ebp-0x1c]
30040efb:	jmp    0x300122e2
30040f00:	mov    edx,DWORD PTR [esp+0x8]
30040f04:	lea    eax,[edx+0xc]
30040f07:	mov    ecx,DWORD PTR [edx-0x2c]
30040f0a:	xor    ecx,eax
30040f0c:	call   0x3000115c
30040f11:	mov    eax,0x30040f1c
30040f16:	jmp    0x30038270
30040f1b:	nop
30040f1c:	and    al,BYTE PTR ds:0x61993
30040f22:	add    BYTE PTR [eax],al
30040f24:	jl     0x30040f45
30040f26:	add    al,0x30
	...
30040f3c:	add    DWORD PTR [eax],eax
30040f3e:	add    BYTE PTR [eax],al
30040f40:	lea    ecx,[ebp-0x22c]
30040f46:	jmp    0x300122e2
30040f4b:	lea    ecx,[ebp-0x224]
30040f51:	jmp    0x300122e2
30040f56:	lea    ecx,[ebp-0x220]
30040f5c:	jmp    0x300122e2
30040f61:	lea    ecx,[ebp-0x230]
30040f67:	jmp    0x3002be9c
30040f6c:	lea    ecx,[ebp-0x228]
30040f72:	jmp    0x3002be9c
30040f77:	lea    ecx,[ebp-0x220]
30040f7d:	jmp    0x300122e2
30040f82:	mov    edx,DWORD PTR [esp+0x8]
30040f86:	lea    eax,[edx+0xc]
30040f89:	mov    ecx,DWORD PTR [edx-0x23c]
30040f8f:	xor    ecx,eax
30040f91:	call   0x3000115c
30040f96:	mov    ecx,DWORD PTR [edx-0x4]
30040f99:	xor    ecx,eax
30040f9b:	call   0x3000115c
30040fa0:	mov    eax,0x30040fac
30040fa5:	jmp    0x30038270
30040faa:	nop
30040fab:	nop
30040fac:	and    al,BYTE PTR ds:0x61993
30040fb2:	add    BYTE PTR [eax],al
30040fb4:	hlt    
30040fb5:	pop    ds
30040fb6:	add    al,0x30
	...
30040fcc:	add    DWORD PTR [eax],eax
30040fce:	add    BYTE PTR [eax],al
30040fd0:	(bad)  
30040fd1:	(bad)  
30040fd2:	(bad)  
30040fd3:	inc    DWORD PTR [eax]
30040fd5:	add    BYTE PTR [eax],al
30040fd7:	add    bh,bh
30040fd9:	(bad)  
30040fda:	(bad)  
30040fdb:	inc    DWORD PTR [eax]
	...
30040fe5:	add    BYTE PTR [eax],al
30040fe7:	add    BYTE PTR [ecx],al
30040fe9:	add    BYTE PTR [eax],al
30040feb:	add    BYTE PTR [ecx],al
30040fed:	add    BYTE PTR [eax],al
30040fef:	add    ah,dh
30040ff1:	(bad)  
30040ff3:	xor    BYTE PTR [eax+0x0],al
	...
30040ffe:	add    BYTE PTR [eax],al
30041000:	les    esi,FWORD PTR [ecx+0x2]
30041003:	xor    bh,bh
30041005:	(bad)  
30041006:	(bad)  
30041007:	(bad)  
30041008:	jl     0x30040fd5
3004100a:	add    esi,DWORD PTR [eax]
3004100c:	(bad)  
3004100d:	(bad)  
3004100e:	(bad)  
3004100f:	inc    DWORD PTR [ebx+ecx*8-0xcffd]
30041016:	(bad)  
30041017:	inc    DWORD PTR [eax]
30041019:	add    BYTE PTR [eax],al
3004101b:	add    bh,bh
3004101d:	(bad)  
3004101e:	(bad)  
3004101f:	dec    DWORD PTR [ebx+ecx*8-0xcffd]
30041026:	(bad)  
30041027:	call   DWORD PTR [ebx+ecx*8]
3004102a:	add    esi,DWORD PTR [eax]
3004102c:	(bad)  
3004102d:	(bad)  
3004102e:	(bad)  
3004102f:	call   FWORD PTR [ebx+ecx*8]
30041032:	add    esi,DWORD PTR [eax]
30041034:	add    DWORD PTR [eax],eax
30041036:	add    BYTE PTR [eax],al
30041038:	and    al,0xcb
3004103a:	add    esi,DWORD PTR [eax]
3004103c:	add    DWORD PTR [eax],eax
3004103e:	add    BYTE PTR [eax],al
30041040:	sub    al,0xcb
30041042:	add    esi,DWORD PTR [eax]
30041044:	(bad)  
30041045:	(bad)  
30041046:	(bad)  
30041047:	push   DWORD PTR [ebx+ecx*8]
3004104a:	add    esi,DWORD PTR [eax]
3004104c:	(bad)  
3004104d:	(bad)  
3004104e:	(bad)  
3004104f:	jmp    DWORD PTR [esp+ecx*8]
30041052:	add    esi,DWORD PTR [eax]
30041054:	(bad)  
30041055:	(bad)  
30041056:	(bad)  
30041057:	jmp    FWORD PTR [esp+ecx*8]
3004105a:	add    esi,DWORD PTR [eax]
3004105c:	(bad)  
3004105d:	(bad)  
3004105e:	(bad)  
3004105f:	inc    DWORD PTR [eax]
30041061:	add    BYTE PTR [eax],al
30041063:	add    bh,bh
30041065:	(bad)  
30041066:	(bad)  
30041067:	push   DWORD PTR [esp+ecx*8]
3004106a:	add    esi,DWORD PTR [eax]
3004106c:	(bad)  
3004106d:	(bad)  
3004106e:	(bad)  
3004106f:	(bad)  
30041070:	jl     0x3004103e
30041072:	add    esi,DWORD PTR [eax]
30041074:	(bad)  
30041075:	(bad)  
30041076:	(bad)  
30041077:	inc    DWORD PTR [eax]
30041079:	add    BYTE PTR [eax],al
3004107b:	add    bh,bh
3004107d:	(bad)  
3004107e:	(bad)  
3004107f:	inc    DWORD PTR [esp+ecx*8-0xcffd]
30041086:	(bad)  
30041087:	jmp    DWORD PTR [eax]
30041089:	int    0x3
3004108b:	xor    bh,bh
3004108d:	(bad)  
3004108e:	(bad)  
3004108f:	jmp    FWORD PTR [ebx]
30041091:	int    0x3
30041093:	xor    BYTE PTR [ecx],al
30041095:	add    BYTE PTR [eax],al
30041097:	add    BYTE PTR [esi],dh
30041099:	int    0x3
3004109b:	xor    BYTE PTR [ecx],al
3004109d:	add    BYTE PTR [eax],al
3004109f:	add    BYTE PTR [ecx-0x33],al
300410a2:	add    esi,DWORD PTR [eax]
300410a4:	add    DWORD PTR [eax],eax
300410a6:	add    BYTE PTR [eax],al
300410a8:	dec    esp
300410a9:	int    0x3
300410ab:	xor    BYTE PTR [ecx],al
300410ad:	add    BYTE PTR [eax],al
300410af:	add    BYTE PTR [edi-0x33],dl
300410b2:	add    esi,DWORD PTR [eax]
300410b4:	add    eax,0x62000000
300410b9:	int    0x3
300410bb:	xor    BYTE PTR [esi],al
300410bd:	add    BYTE PTR [eax],al
300410bf:	add    BYTE PTR [ebp-0x33],ch
300410c2:	add    esi,DWORD PTR [eax]
300410c4:	push   es
300410c5:	add    BYTE PTR [eax],al
300410c7:	add    BYTE PTR [eax-0x33],bh
300410ca:	add    esi,DWORD PTR [eax]
300410cc:	push   es
300410cd:	add    BYTE PTR [eax],al
300410cf:	add    BYTE PTR [ebx+0x53003cd],al
300410d5:	add    BYTE PTR [eax],al
300410d7:	add    BYTE PTR [esi+0x13003cd],cl
300410dd:	add    BYTE PTR [eax],al
300410df:	add    BYTE PTR [ecx-0xcffc33],bl
300410e5:	(bad)  
300410e6:	(bad)  
300410e7:	jmp    DWORD PTR [ebp+ecx*8-0xcffd]
300410ee:	(bad)  
300410ef:	call   DWORD PTR [esi+ecx*8-0xcffd]
300410f6:	(bad)  
300410f7:	call   FWORD PTR [esi-0xcffc32]
300410fd:	(bad)  
300410fe:	(bad)  
300410ff:	jmp    DWORD PTR [esi+0x23003ce]
30041105:	add    BYTE PTR [eax],al
30041107:	add    BYTE PTR [esi+0x23003ce],ch
3004110d:	add    BYTE PTR [eax],al
3004110f:	add    BYTE PTR [eax-0xcffc32],bh
30041115:	(bad)  
30041116:	(bad)  
30041117:	inc    edx
30041119:	into   
3004111a:	add    esi,DWORD PTR [eax]
3004111c:	(bad)  
3004111d:	(bad)  
3004111e:	(bad)  
3004111f:	inc    DWORD PTR [edi]
30041121:	into   
30041122:	add    esi,DWORD PTR [eax]
30041124:	add    BYTE PTR [eax],al
30041126:	add    BYTE PTR [eax],al
30041128:	cld    
30041129:	int    0x3
3004112b:	xor    BYTE PTR [eax],al
3004112d:	add    BYTE PTR [eax],al
3004112f:	add    BYTE PTR ds:0x3003ce,ah
30041135:	add    BYTE PTR [eax],al
30041137:	add    BYTE PTR [eax],dh
30041139:	into   
3004113a:	add    esi,DWORD PTR [eax]
3004113c:	add    BYTE PTR [eax],al
3004113e:	add    BYTE PTR [eax],al
30041140:	cmp    ecx,esi
30041142:	add    esi,DWORD PTR [eax]
30041144:	(bad)  
30041145:	(bad)  
30041146:	(bad)  
30041147:	dec    DWORD PTR [edi+ecx*8]
3004114a:	add    esi,DWORD PTR [eax]
3004114c:	(bad)  
3004114d:	(bad)  
3004114e:	(bad)  
3004114f:	call   DWORD PTR [edi+ecx*8]
30041152:	add    esi,DWORD PTR [eax]
30041154:	add    DWORD PTR [eax],eax
30041156:	add    BYTE PTR [eax],al
30041158:	pop    ds
30041159:	iret   
3004115a:	add    esi,DWORD PTR [eax]
3004115c:	add    DWORD PTR [eax],eax
3004115e:	add    BYTE PTR [eax],al
30041160:	daa    
30041161:	iret   
30041162:	add    esi,DWORD PTR [eax]
30041164:	add    al,BYTE PTR [eax]
30041166:	add    BYTE PTR [eax],al
30041168:	add    al,BYTE PTR [eax]
3004116a:	add    BYTE PTR [eax],al
3004116c:	add    eax,DWORD PTR [eax]
3004116e:	add    BYTE PTR [eax],al
30041170:	add    DWORD PTR [eax],eax
30041172:	add    BYTE PTR [eax],al
30041174:	js     0x30041187
30041176:	add    al,0x30
30041178:	add    BYTE PTR [eax],al
3004117a:	add    BYTE PTR [eax],al
3004117c:	clc    
3004117d:	inc    esp
3004117e:	add    al,0x30
30041180:	add    BYTE PTR [eax],al
30041182:	add    BYTE PTR [eax],al
30041184:	xor    BYTE PTR [ebp+0x2],bh
30041187:	xor    bh,bh
30041189:	(bad)  
3004118a:	(bad)  
3004118b:	push   DWORD PTR [edi+ecx*8+0x3]
3004118f:	xor    BYTE PTR [eax],al
30041191:	add    BYTE PTR [eax],al
30041193:	add    BYTE PTR [edi-0x31],bh
30041196:	add    esi,DWORD PTR [eax]
30041198:	add    DWORD PTR [eax],eax
3004119a:	add    BYTE PTR [eax],al
3004119c:	add    BYTE PTR [eax],al
3004119e:	add    BYTE PTR [eax],al
300411a0:	add    DWORD PTR [eax],eax
	...
300411aa:	add    BYTE PTR [eax],al
300411ac:	mov    cl,bh
300411ae:	add    esi,DWORD PTR [eax]
300411b0:	(bad)  
300411b1:	(bad)  
300411b2:	(bad)  
300411b3:	call   DWORD PTR [edx-0xcffc31]
300411b9:	(bad)  
300411ba:	(bad)  
300411bb:	inc    DWORD PTR [eax+edx*8+0x3]
300411bf:	xor    BYTE PTR [eax],al
300411c1:	add    BYTE PTR [eax],al
300411c3:	add    BYTE PTR [edi-0x30],cl
300411c6:	add    esi,DWORD PTR [eax]
300411c8:	add    BYTE PTR [eax],al
300411ca:	add    BYTE PTR [eax],al
300411cc:	pop    edx
300411cd:	rol    BYTE PTR [ebx],1
300411cf:	xor    BYTE PTR [eax],al
300411d1:	add    BYTE PTR [eax],al
300411d3:	add    BYTE PTR [ebp-0x30],ah
300411d6:	add    esi,DWORD PTR [eax]
300411d8:	add    eax,DWORD PTR [eax]
300411da:	add    BYTE PTR [eax],al
300411dc:	jo     0x300411ae
300411de:	add    esi,DWORD PTR [eax]
300411e0:	add    eax,DWORD PTR [eax]
300411e2:	add    BYTE PTR [eax],al
300411e4:	jnp    0x300411b6
300411e6:	add    esi,DWORD PTR [eax]
300411e8:	add    eax,DWORD PTR [eax]
300411ea:	add    BYTE PTR [eax],al
300411ec:	xchg   al,dl
300411ee:	add    esi,DWORD PTR [eax]
300411f0:	add    eax,DWORD PTR [eax]
300411f2:	add    BYTE PTR [eax],al
300411f4:	xchg   ecx,eax
300411f5:	rol    BYTE PTR [ebx],1
300411f7:	xor    BYTE PTR [ebx],al
300411f9:	add    BYTE PTR [eax],al
300411fb:	add    BYTE PTR [eax+edx*8+0x3003],bl
30041202:	add    BYTE PTR [eax],al
30041204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
30041205:	rol    BYTE PTR [ebx],1
30041207:	xor    BYTE PTR [eax],al
30041209:	add    BYTE PTR [eax],al
3004120b:	add    BYTE PTR [edx-0xcffc30],dh
30041211:	(bad)  
30041212:	(bad)  
30041213:	inc    DWORD PTR [eax]
30041215:	add    BYTE PTR [eax],al
30041217:	add    bh,bh
30041219:	(bad)  
3004121a:	(bad)  
3004121b:	inc    DWORD PTR [eax]
3004121d:	add    BYTE PTR [eax],al
3004121f:	add    BYTE PTR [ebx],al
30041221:	add    BYTE PTR [eax],al
30041223:	add    BYTE PTR [ebp+0x33003d0],bh
30041229:	add    BYTE PTR [eax],al
3004122b:	add    al,cl
3004122d:	rol    BYTE PTR [ebx],1
3004122f:	xor    BYTE PTR [ebx],al
30041231:	add    BYTE PTR [eax],al
30041233:	add    dh,bl
30041235:	rol    BYTE PTR [ebx],1
30041237:	xor    BYTE PTR [ebx],al
30041239:	add    BYTE PTR [eax],al
3004123b:	add    bl,dl
3004123d:	rol    BYTE PTR [ebx],1
3004123f:	xor    BYTE PTR [eax],al
30041241:	add    BYTE PTR [eax],al
30041243:	add    cl,ch
30041245:	rol    BYTE PTR [ebx],1
30041247:	xor    BYTE PTR [eax],al
30041249:	add    BYTE PTR [eax],al
3004124b:	add    ah,dh
3004124d:	rol    BYTE PTR [ebx],1
3004124f:	xor    BYTE PTR [eax],al
30041251:	add    BYTE PTR [eax],al
30041253:	add    bh,bh
30041255:	rol    BYTE PTR [ebx],1
30041257:	xor    BYTE PTR [eax],al
30041259:	add    BYTE PTR [eax],al
3004125b:	add    BYTE PTR [edx],cl
3004125d:	rol    DWORD PTR [ebx],1
3004125f:	xor    bh,bh
30041261:	(bad)  
30041262:	(bad)  
30041263:	call   DWORD PTR ds:0xff3003d1
30041269:	(bad)  
3004126a:	(bad)  
3004126b:	jmp    DWORD PTR [eax]
3004126d:	rol    DWORD PTR [ebx],1
3004126f:	xor    bh,bh
30041271:	(bad)  
30041272:	(bad)  
30041273:	call   FWORD PTR [eax-0x2e]
30041276:	add    esi,DWORD PTR [eax]
30041278:	add    BYTE PTR [eax],al
3004127a:	add    BYTE PTR [eax],al
3004127c:	ins    DWORD PTR es:[edi],dx
3004127d:	rol    BYTE PTR [ebx],cl
3004127f:	xor    BYTE PTR [eax],al
30041281:	add    BYTE PTR [eax],al
30041283:	add    BYTE PTR [ebp-0x2e],dh
30041286:	add    esi,DWORD PTR [eax]
30041288:	add    BYTE PTR [eax],al
3004128a:	add    BYTE PTR [eax],al
3004128c:	jge    0x30041260
3004128e:	add    esi,DWORD PTR [eax]
30041290:	(bad)  
30041291:	(bad)  
30041292:	(bad)  
30041293:	(bad)  
30041294:	fcom   st(1)
30041296:	add    esi,DWORD PTR [eax]
30041298:	add    BYTE PTR [eax],al
3004129a:	add    BYTE PTR [eax],al
3004129c:	loopne 0x3004126f
3004129e:	add    esi,DWORD PTR [eax]
300412a0:	add    BYTE PTR [eax],al
300412a2:	add    BYTE PTR [eax],al
300412a4:	call   0x3034167a
300412a9:	add    BYTE PTR [eax],al
300412ab:	add    al,dh
300412ad:	rol    DWORD PTR [ebx],1
300412af:	xor    BYTE PTR [eax],al
300412b1:	add    BYTE PTR [eax],al
300412b3:	add    al,bh
300412b5:	rol    DWORD PTR [ebx],1
300412b7:	xor    BYTE PTR [eax],al
300412b9:	add    BYTE PTR [eax],al
300412bb:	add    BYTE PTR [eax],al
300412bd:	rol    BYTE PTR [ebx],cl
300412bf:	xor    BYTE PTR [eax],al
300412c1:	add    BYTE PTR [eax],al
300412c3:	add    BYTE PTR [eax],cl
300412c5:	rol    BYTE PTR [ebx],cl
300412c7:	xor    BYTE PTR [eax],al
300412c9:	add    BYTE PTR [eax],al
300412cb:	add    BYTE PTR [eax],dl
300412cd:	rol    BYTE PTR [ebx],cl
300412cf:	xor    bh,bh
300412d1:	(bad)  
300412d2:	(bad)  
300412d3:	(bad)  
300412d4:	fmul   st(7),st
300412d6:	add    esi,DWORD PTR [eax]
300412d8:	(bad)  
300412d9:	(bad)  
300412da:	(bad)  
300412db:	jmp    esp
300412dd:	iret   
300412de:	add    esi,DWORD PTR [eax]
300412e0:	(bad)  
300412e1:	(bad)  
300412e2:	(bad)  
300412e3:	(bad)  
300412e4:	in     al,dx
300412e5:	iret   
300412e6:	add    esi,DWORD PTR [eax]
300412e8:	(bad)  
300412e9:	(bad)  
300412ea:	(bad)  
300412eb:	push   esp
300412ed:	iret   
300412ee:	add    esi,DWORD PTR [eax]
300412f0:	(bad)  
300412f1:	(bad)  
300412f2:	(bad)  
300412f3:	(bad)  
300412f4:	cld    
300412f5:	iret   
300412f6:	add    esi,DWORD PTR [eax]
300412f8:	(bad)  
300412f9:	(bad)  
300412fa:	(bad)  
300412fb:	call   DWORD PTR [ebx+edx*8]
300412fe:	add    esi,DWORD PTR [eax]
30041300:	add    BYTE PTR [eax],al
30041302:	add    BYTE PTR [eax],al
30041304:	sbb    al,0xd3
30041306:	add    esi,DWORD PTR [eax]
30041308:	add    BYTE PTR [eax],al
3004130a:	add    BYTE PTR [eax],al
3004130c:	and    al,0xd3
3004130e:	add    esi,DWORD PTR [eax]
30041310:	add    BYTE PTR [eax],al
30041312:	add    BYTE PTR [eax],al
30041314:	sub    al,0xd3
30041316:	add    esi,DWORD PTR [eax]
30041318:	add    BYTE PTR [eax],al
3004131a:	add    BYTE PTR [eax],al
3004131c:	xor    al,0xd3
3004131e:	add    esi,DWORD PTR [eax]
30041320:	add    BYTE PTR [eax],al
30041322:	add    BYTE PTR [eax],al
30041324:	cmp    al,0xd3
30041326:	add    esi,DWORD PTR [eax]
30041328:	(bad)  
30041329:	(bad)  
3004132a:	(bad)  
3004132b:	push   DWORD PTR [edx*8-0xcffd]
30041332:	(bad)  
30041333:	(bad)  
30041334:	cmp    al,0xd5
30041336:	add    esi,DWORD PTR [eax]
30041338:	(bad)  
30041339:	(bad)  
3004133a:	(bad)  
3004133b:	call   DWORD PTR [eax+0x3003d3]
30041341:	add    BYTE PTR [eax],al
30041343:	add    BYTE PTR [eax+0x3003d3],bl
30041349:	add    BYTE PTR [eax],al
3004134b:	add    BYTE PTR [eax+0x23003d3],ah
30041351:	add    BYTE PTR [eax],al
30041353:	add    BYTE PTR [ebx+0x33003d3],ch
30041359:	add    BYTE PTR [eax],al
3004135b:	add    BYTE PTR [esi-0xcffc2d],dh
30041361:	(bad)  
30041362:	(bad)  
30041363:	dec    DWORD PTR [esp+edx*8]
30041366:	add    esi,DWORD PTR [eax]
30041368:	add    BYTE PTR [eax],al
3004136a:	add    BYTE PTR [eax],al
3004136c:	adc    al,0xd4
3004136e:	add    esi,DWORD PTR [eax]
30041370:	add    DWORD PTR [eax],eax
30041372:	add    BYTE PTR [eax],al
30041374:	pop    ds
30041375:	aam    0x3
30041377:	xor    BYTE PTR [edx],al
30041379:	add    BYTE PTR [eax],al
3004137b:	add    BYTE PTR [edx],ch
3004137d:	aam    0x3
3004137f:	xor    BYTE PTR [eax],al
30041381:	add    BYTE PTR [eax],al
30041383:	add    BYTE PTR [eax-0x2c],al
30041386:	add    esi,DWORD PTR [eax]
30041388:	(bad)  
30041389:	(bad)  
3004138a:	(bad)  
3004138b:	(bad)  
3004138c:	fcom   st(4)
3004138e:	add    esi,DWORD PTR [eax]
30041390:	(bad)  
30041391:	(bad)  
30041392:	(bad)  
30041393:	jmp    eax
30041395:	aam    0x3
30041397:	xor    bh,bh
30041399:	(bad)  
3004139a:	(bad)  
3004139b:	dec    DWORD PTR [eax-0xcffc2c]
300413a1:	(bad)  
300413a2:	(bad)  
300413a3:	call   DWORD PTR [eax-0xcffc2c]
300413a9:	(bad)  
300413aa:	(bad)  
300413ab:	(bad)  
300413ac:	mov    edi,0x3003d5
300413b1:	add    BYTE PTR [eax],al
300413b3:	add    BYTE PTR [ebp+edx*8+0x3003],al
300413ba:	add    BYTE PTR [eax],al
300413bc:	mov    ebp,ss
300413be:	add    esi,DWORD PTR [eax]
300413c0:	add    al,BYTE PTR [eax]
300413c2:	add    BYTE PTR [eax],al
300413c4:	xchg   esp,eax
300413c5:	aad    0x3
300413c7:	xor    BYTE PTR [edx],al
300413c9:	add    BYTE PTR [eax],al
300413cb:	add    BYTE PTR [ebp+edx*8+0x43003],bl
300413d2:	add    BYTE PTR [eax],al
300413d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
300413d5:	aad    0x3
300413d7:	xor    BYTE PTR [eax+eax*1],al
300413da:	add    BYTE PTR [eax],al
300413dc:	lods   al,BYTE PTR ds:[esi]
300413dd:	aad    0x3
300413df:	xor    BYTE PTR [esi],al
300413e1:	add    BYTE PTR [eax],al
300413e3:	add    BYTE PTR [ebp+edx*8+0x63003],dh
300413ea:	add    BYTE PTR [eax],al
300413ec:	fst    st(5)
300413ee:	add    esi,DWORD PTR [eax]
300413f0:	push   es
300413f1:	add    BYTE PTR [eax],al
300413f3:	add    ch,ah
300413f5:	aad    0x3
300413f7:	xor    BYTE PTR [esi],al
300413f9:	add    BYTE PTR [eax],al
300413fb:	add    ch,ch
300413fd:	aad    0x3
300413ff:	xor    BYTE PTR [eax+eax*1],al
30041402:	add    BYTE PTR [eax],al
30041404:	cmc    
30041405:	aad    0x3
30041407:	xor    BYTE PTR [edx],al
30041409:	add    BYTE PTR [eax],al
3004140b:	add    ch,bh
3004140d:	aad    0x3
3004140f:	xor    BYTE PTR [eax],al
30041411:	add    BYTE PTR [eax],al
30041413:	add    BYTE PTR ds:0xff3003d6,al
30041419:	(bad)  
3004141a:	(bad)  
3004141b:	call   DWORD PTR [eax]
3004141d:	xlat   BYTE PTR ds:[ebx]
3004141e:	add    esi,DWORD PTR [eax]
30041420:	add    BYTE PTR [eax],al
30041422:	add    BYTE PTR [eax],al
30041424:	sbb    edx,edi
30041426:	add    esi,DWORD PTR [eax]
30041428:	add    DWORD PTR [eax],eax
3004142a:	add    BYTE PTR [eax],al
3004142c:	xlat   BYTE PTR es:[ebx]
3004142e:	add    esi,DWORD PTR [eax]
30041430:	add    al,BYTE PTR [eax]
30041432:	add    BYTE PTR [eax],al
30041434:	xor    edi,edx
30041436:	add    esi,DWORD PTR [eax]
30041438:	add    al,BYTE PTR [eax]
3004143a:	add    BYTE PTR [eax],al
3004143c:	cmp    al,0xd7
3004143e:	add    esi,DWORD PTR [eax]
30041440:	add    DWORD PTR [eax],eax
30041442:	add    BYTE PTR [eax],al
30041444:	inc    esp
30041445:	xlat   BYTE PTR ds:[ebx]
30041446:	add    esi,DWORD PTR [eax]
30041448:	add    BYTE PTR [eax],al
3004144a:	add    BYTE PTR [eax],al
3004144c:	dec    esp
3004144d:	xlat   BYTE PTR ds:[ebx]
3004144e:	add    esi,DWORD PTR [eax]
30041450:	(bad)  
30041451:	(bad)  
30041452:	(bad)  
30041453:	call   DWORD PTR [edi+edx*8+0x3]
30041457:	xor    bh,bh
30041459:	(bad)  
3004145a:	(bad)  
3004145b:	call   FWORD PTR [esi+edx*8+0x3]
3004145f:	xor    BYTE PTR [eax],al
30041461:	add    BYTE PTR [eax],al
30041463:	add    BYTE PTR [edi-0x2a],ah
30041466:	add    esi,DWORD PTR [eax]
30041468:	add    DWORD PTR [eax],eax
3004146a:	add    BYTE PTR [eax],al
3004146c:	jb     0x30041444
3004146e:	add    esi,DWORD PTR [eax]
30041470:	add    al,BYTE PTR [eax]
30041472:	add    BYTE PTR [eax],al
30041474:	jge    0x3004144c
30041476:	add    esi,DWORD PTR [eax]
30041478:	add    al,BYTE PTR [eax]
3004147a:	add    BYTE PTR [eax],al
3004147c:	test   esi,edx
3004147e:	add    esi,DWORD PTR [eax]
30041480:	add    al,0x0
30041482:	add    BYTE PTR [eax],al
30041484:	nop
30041485:	(bad)  
30041486:	add    esi,DWORD PTR [eax]
30041488:	add    al,0x0
3004148a:	add    BYTE PTR [eax],al
3004148c:	cwde   
3004148d:	(bad)  
3004148e:	add    esi,DWORD PTR [eax]
30041490:	add    al,0x0
30041492:	add    BYTE PTR [eax],al
30041494:	mov    al,ds:0x43003d6
30041499:	add    BYTE PTR [eax],al
3004149b:	add    BYTE PTR [eax+0x43003d6],ch
300414a1:	add    BYTE PTR [eax],al
300414a3:	add    BYTE PTR [eax+0x43003d6],dh
300414a9:	add    BYTE PTR [eax],al
300414ab:	add    BYTE PTR [eax+0xa3003d6],bh
300414b1:	add    BYTE PTR [eax],al
300414b3:	add    al,al
300414b5:	(bad)  
300414b6:	add    esi,DWORD PTR [eax]
300414b8:	add    al,0x0
300414ba:	add    BYTE PTR [eax],al
300414bc:	enter  0x3d6,0x30
300414c0:	(bad)  
300414c1:	(bad)  
300414c2:	(bad)  
300414c3:	push   DWORD PTR [edx]
300414c5:	fadd   DWORD PTR [ebx]
300414c7:	xor    BYTE PTR [eax],al
300414c9:	add    BYTE PTR [eax],al
300414cb:	add    al,dh
300414cd:	xlat   BYTE PTR ds:[ebx]
300414ce:	add    esi,DWORD PTR [eax]
300414d0:	add    BYTE PTR [eax],al
300414d2:	add    BYTE PTR [eax],al
300414d4:	sti    
300414d5:	xlat   BYTE PTR ds:[ebx]
300414d6:	add    esi,DWORD PTR [eax]
300414d8:	add    al,BYTE PTR [eax]
300414da:	add    BYTE PTR [eax],al
300414dc:	push   es
300414dd:	fadd   DWORD PTR [ebx]
300414df:	xor    BYTE PTR [edx],al
300414e1:	add    BYTE PTR [eax],al
300414e3:	add    BYTE PTR [ecx],dl
300414e5:	fadd   DWORD PTR [ebx]
300414e7:	xor    BYTE PTR [eax],al
300414e9:	add    BYTE PTR [eax],al
300414eb:	add    BYTE PTR [eax+ebx*8],bl
300414ee:	add    esi,DWORD PTR [eax]
300414f0:	add    BYTE PTR [eax],al
300414f2:	add    BYTE PTR [eax],al
300414f4:	daa    
300414f5:	fadd   DWORD PTR [ebx]
300414f7:	xor    bh,bh
300414f9:	(bad)  
300414fa:	(bad)  
300414fb:	inc    DWORD PTR [eax-0x27]
300414fe:	add    esi,DWORD PTR [eax]
30041500:	add    BYTE PTR [eax],al
30041502:	add    BYTE PTR [eax],al
30041504:	dec    eax
30041505:	fld    DWORD PTR [ebx]
30041507:	xor    bh,bh
30041509:	(bad)  
3004150a:	(bad)  
3004150b:	call   FWORD PTR [eax+0x3003d9]
30041511:	add    BYTE PTR [eax],al
30041513:	add    BYTE PTR [eax+0x3003d9],dl
30041519:	add    BYTE PTR [eax],al
3004151b:	add    BYTE PTR [ebp+0x23003d9],ch
30041521:	add    BYTE PTR [eax],al
30041523:	add    BYTE PTR [ebp-0xcffc27],dh
30041529:	(bad)  
3004152a:	(bad)  
3004152b:	jmp    DWORD PTR [edx+ebx*8+0x3003]
30041532:	add    BYTE PTR [eax],al
30041534:	pushf  
30041535:	fiadd  DWORD PTR [ebx]
30041537:	xor    bh,bh
30041539:	(bad)  
3004153a:	(bad)  
3004153b:	dec    DWORD PTR [edx+ebx*8+0x3]
3004153f:	xor    bh,bh
30041541:	(bad)  
30041542:	(bad)  
30041543:	call   DWORD PTR [edx+ebx*8+0x3]
30041547:	xor    bh,bh
30041549:	(bad)  
3004154a:	(bad)  
3004154b:	(bad)  
3004154c:	cld    
3004154d:	fld    DWORD PTR [ebx]
3004154f:	xor    bh,bh
30041551:	(bad)  
30041552:	(bad)  
30041553:	inc    DWORD PTR [edx+ebx*8]
30041556:	add    esi,DWORD PTR [eax]
30041558:	(bad)  
30041559:	(bad)  
3004155a:	(bad)  
3004155b:	(bad)  
3004155c:	clc    
3004155d:	fiadd  DWORD PTR [ebx]
3004155f:	xor    bh,bh
30041561:	(bad)  
30041562:	(bad)  
30041563:	inc    DWORD PTR [eax]
30041565:	fild   DWORD PTR [ebx]
30041567:	xor    bh,bh
30041569:	(bad)  
3004156a:	(bad)  
3004156b:	inc    DWORD PTR [eax]
3004156d:	add    BYTE PTR [eax],al
3004156f:	add    bh,bh
30041571:	(bad)  
30041572:	(bad)  
30041573:	dec    DWORD PTR [eax]
30041575:	fild   DWORD PTR [ebx]
30041577:	xor    bh,bh
30041579:	(bad)  
3004157a:	(bad)  
3004157b:	call   DWORD PTR [eax]
3004157d:	fild   DWORD PTR [ebx]
3004157f:	xor    bh,bh
30041581:	(bad)  
30041582:	(bad)  
30041583:	(bad)  
30041584:	mov    eax,0xff3003db
30041589:	(bad)  
3004158a:	(bad)  
3004158b:	inc    eax
3004158d:	fild   DWORD PTR [ebx]
3004158f:	xor    bh,bh
30041591:	(bad)  
30041592:	(bad)  
30041593:	call   DWORD PTR [eax]
30041595:	fadd   QWORD PTR [ebx]
30041597:	xor    BYTE PTR [eax],al
30041599:	add    BYTE PTR [eax],al
3004159b:	add    BYTE PTR [eax],cl
3004159d:	fadd   QWORD PTR [ebx]
3004159f:	xor    BYTE PTR [eax],al
300415a1:	add    BYTE PTR [eax],al
300415a3:	add    BYTE PTR ds:0xff3003dc,ah
300415a9:	(bad)  
300415aa:	(bad)  
300415ab:	jmp    DWORD PTR [ebx*8+0x3003]
300415b2:	add    BYTE PTR [eax],al
300415b4:	sub    al,0xdd
300415b6:	add    esi,DWORD PTR [eax]
300415b8:	add    BYTE PTR [eax],al
300415ba:	add    BYTE PTR [eax],al
300415bc:	xor    al,0xdd
300415be:	add    esi,DWORD PTR [eax]
300415c0:	(bad)  
300415c1:	(bad)  
300415c2:	(bad)  
300415c3:	inc    eax
300415c5:	fadd   QWORD PTR [ebx]
300415c7:	xor    bh,bh
300415c9:	(bad)  
300415ca:	(bad)  
300415cb:	dec    eax
300415cd:	fadd   QWORD PTR [ebx]
300415cf:	xor    bh,bh
300415d1:	(bad)  
300415d2:	(bad)  
300415d3:	inc    DWORD PTR [eax]
300415d5:	add    BYTE PTR [eax],al
300415d7:	add    bh,bh
300415d9:	(bad)  
300415da:	(bad)  
300415db:	inc    DWORD PTR [eax]
300415dd:	add    BYTE PTR [eax],al
300415df:	add    bh,bh
300415e1:	(bad)  
300415e2:	(bad)  
300415e3:	call   eax
300415e5:	fadd   QWORD PTR [ebx]
300415e7:	xor    bh,bh
300415e9:	(bad)  
300415ea:	(bad)  
300415eb:	(bad)  
300415ec:	(bad)  
300415ee:	add    esi,DWORD PTR [eax]
300415f0:	add    BYTE PTR [eax],al
300415f2:	add    BYTE PTR [eax],al
300415f4:	in     al,0xdd
300415f6:	add    esi,DWORD PTR [eax]
300415f8:	add    BYTE PTR [eax],al
300415fa:	add    BYTE PTR [eax],al
300415fc:	in     al,dx
300415fd:	fld    QWORD PTR [ebx]
300415ff:	xor    BYTE PTR [eax],al
30041601:	add    BYTE PTR [eax],al
30041603:	add    ah,dh
30041605:	fld    QWORD PTR [ebx]
30041607:	xor    BYTE PTR [eax],al
30041609:	add    BYTE PTR [eax],al
3004160b:	add    ah,bh
3004160d:	fld    QWORD PTR [ebx]
3004160f:	xor    BYTE PTR [eax],al
30041611:	add    BYTE PTR [eax],al
30041613:	add    BYTE PTR [esi+ebx*8],al
30041616:	add    esi,DWORD PTR [eax]
30041618:	(bad)  
30041619:	(bad)  
3004161a:	(bad)  
3004161b:	dec    DWORD PTR [esi+ebx*8]
3004161e:	add    esi,DWORD PTR [eax]
30041620:	(bad)  
30041621:	(bad)  
30041622:	(bad)  
30041623:	push   DWORD PTR [esi+ebx*8-0xcffd]
3004162a:	(bad)  
3004162b:	(bad)  
3004162c:	mov    esp,0xff3003de
30041631:	(bad)  
30041632:	(bad)  
30041633:	inc    esp
30041635:	fiadd  WORD PTR [ebx]
30041637:	xor    bh,bh
30041639:	(bad)  
3004163a:	(bad)  
3004163b:	dec    esp
3004163d:	fiadd  WORD PTR [ebx]
3004163f:	xor    bh,bh
30041641:	(bad)  
30041642:	(bad)  
30041643:	call   esp
30041645:	fiadd  WORD PTR [ebx]
30041647:	xor    bh,bh
30041649:	(bad)  
3004164a:	(bad)  
3004164b:	(bad)  
3004164c:	jl     0x3004162b
3004164e:	add    esi,DWORD PTR [eax]
30041650:	add    BYTE PTR [eax],al
30041652:	add    BYTE PTR [eax],al
30041654:	test   ch,bl
30041656:	add    esi,DWORD PTR [eax]
30041658:	add    BYTE PTR [eax],al
3004165a:	add    BYTE PTR [eax],al
3004165c:	mov    ebp,ds
3004165e:	add    esi,DWORD PTR [eax]
30041660:	(bad)  
30041661:	(bad)  
30041662:	(bad)  
30041663:	call   DWORD PTR [ebp+ebx*8-0xcffd]
3004166a:	(bad)  
3004166b:	call   DWORD PTR [esi+ebx*8+0x3]
3004166f:	xor    BYTE PTR [eax],al
30041671:	add    BYTE PTR [eax],al
30041673:	add    BYTE PTR [esi+ebx*8+0x3],bl
30041677:	xor    BYTE PTR [eax],al
30041679:	add    BYTE PTR [eax],al
3004167b:	add    BYTE PTR [esi+ebx*8+0x3],ah
3004167f:	xor    bh,bh
30041681:	(bad)  
30041682:	(bad)  
30041683:	inc    DWORD PTR [eax]
30041685:	add    BYTE PTR [eax],al
30041687:	add    bh,bh
30041689:	(bad)  
3004168a:	(bad)  
3004168b:	jmp    FWORD PTR [esi+ebx*8+0x3]
3004168f:	xor    bh,bh
30041691:	(bad)  
30041692:	(bad)  
30041693:	push   DWORD PTR [eax-0x21]
30041696:	add    esi,DWORD PTR [eax]
30041698:	(bad)  
30041699:	(bad)  
3004169a:	(bad)  
3004169b:	(bad)  
3004169c:	js     0x3004167d
3004169e:	add    esi,DWORD PTR [eax]
300416a0:	(bad)  
300416a1:	(bad)  
300416a2:	(bad)  
300416a3:	inc    DWORD PTR [eax+0x13003df]
300416a9:	add    BYTE PTR [eax],al
300416ab:	add    BYTE PTR [eax+0x300416],dh
300416b1:	add    BYTE PTR [eax],al
300416b3:	add    al,bh
300416b5:	inc    esp
300416b6:	add    al,0x30
300416b8:	add    BYTE PTR [eax],al
300416ba:	add    BYTE PTR [eax],al
300416bc:	(bad)  
300416bd:	(bad)  
300416be:	(bad)  
300416bf:	inc    DWORD PTR [eax]
300416c1:	add    BYTE PTR [eax],al
300416c3:	add    BYTE PTR [eax+eax*1],al
300416c6:	add    BYTE PTR [eax],al
300416c8:	add    BYTE PTR [eax],al
300416ca:	add    BYTE PTR [eax],al
300416cc:	add    al,BYTE PTR [eax]
300416ce:	add    BYTE PTR [eax],al
300416d0:	hlt    
300416d1:	push   ss
300416d2:	add    al,0x30
300416d4:	fcom   DWORD PTR [esi]
300416d6:	add    al,0x30
300416d8:	add    BYTE PTR [eax],al
300416da:	add    BYTE PTR [eax],al
300416dc:	jo     0x30041723
300416de:	add    al,0x30
300416e0:	add    BYTE PTR [eax],al
300416e2:	add    BYTE PTR [eax],al
300416e4:	(bad)  
300416e5:	(bad)  
300416e6:	(bad)  
300416e7:	inc    DWORD PTR [eax]
300416e9:	add    BYTE PTR [eax],al
300416eb:	add    BYTE PTR [eax+eax*1],cl
300416ee:	add    BYTE PTR [eax],al
300416f0:	xchg   edx,eax
300416f1:	mov    DWORD PTR [ebx],0x30
300416f7:	add    BYTE PTR [ebp+eax*2+0x3004],cl
300416fe:	add    BYTE PTR [eax],al
30041700:	(bad)  
30041701:	(bad)  
30041702:	(bad)  
30041703:	inc    DWORD PTR [eax]
30041705:	add    BYTE PTR [eax],al
30041707:	add    BYTE PTR [eax+eax*1],cl
3004170a:	add    BYTE PTR [eax],al
3004170c:	call   0x2f3419d5
30041711:	(bad)  
30041712:	(bad)  
30041713:	jmp    DWORD PTR [eax]
30041715:	loopne 0x3004171a
30041717:	xor    BYTE PTR [eax],al
30041719:	add    BYTE PTR [eax],al
3004171b:	add    BYTE PTR [eax],ch
3004171d:	loopne 0x30041722
3004171f:	xor    BYTE PTR [ecx],al
30041721:	add    BYTE PTR [eax],al
30041723:	add    BYTE PTR [eax],dh
30041725:	loopne 0x3004172a
30041727:	xor    BYTE PTR [edx],al
30041729:	add    BYTE PTR [eax],al
3004172b:	add    BYTE PTR [eax],bh
3004172d:	loopne 0x30041732
3004172f:	xor    bh,bh
30041731:	(bad)  
30041732:	(bad)  
30041733:	dec    eax
30041735:	fild   WORD PTR [ebx]
30041737:	xor    BYTE PTR [eax],al
30041739:	add    BYTE PTR [eax],al
3004173b:	add    al,dl
3004173d:	fild   WORD PTR [ebx]
3004173f:	xor    BYTE PTR [ecx],al
30041741:	add    BYTE PTR [eax],al
30041743:	add    al,bl
30041745:	fild   WORD PTR [ebx]
30041747:	xor    bh,bh
30041749:	(bad)  
3004174a:	(bad)  
3004174b:	jmp    DWORD PTR [ebp+0x3003e0]
30041751:	add    BYTE PTR [eax],al
30041753:	add    BYTE PTR [eax+0x13003e0],al
30041759:	add    BYTE PTR [eax],al
3004175b:	add    BYTE PTR [ebx+0x23003e0],cl
30041761:	add    BYTE PTR [eax],al
30041763:	add    BYTE PTR [ebx+0x3003e0],dl
30041769:	add    BYTE PTR [eax],al
3004176b:	add    BYTE PTR [ecx],al
3004176d:	add    BYTE PTR [eax],al
3004176f:	add    BYTE PTR [edx],al
30041771:	add    BYTE PTR [eax],al
30041773:	add    BYTE PTR [ecx],al
30041775:	add    BYTE PTR [eax],al
30041777:	add    BYTE PTR [edi+edx*1+0x4],bh
3004177b:	xor    BYTE PTR [eax+0x0],al
	...
30041786:	add    BYTE PTR [eax],al
30041788:	lods   eax,DWORD PTR ds:[esi]
30041789:	cmc    
3004178a:	add    DWORD PTR [eax],esi
3004178c:	(bad)  
3004178d:	(bad)  
3004178e:	(bad)  
3004178f:	push   esp
30041791:	in     al,0x3
30041793:	xor    BYTE PTR [eax],al
30041795:	add    BYTE PTR [eax],al
30041797:	add    ah,bh
30041799:	in     al,0x3
3004179b:	xor    BYTE PTR [ecx],al
3004179d:	add    BYTE PTR [eax],al
3004179f:	add    BYTE PTR [eiz*8+0x23003],al
300417a6:	add    BYTE PTR [eax],al
300417a8:	or     al,0xe5
300417aa:	add    esi,DWORD PTR [eax]
300417ac:	(bad)  
300417ad:	(bad)  
300417ae:	(bad)  
300417af:	jmp    FWORD PTR [ebx+eiz*8]
300417b2:	add    esi,DWORD PTR [eax]
300417b4:	add    BYTE PTR [eax],al
300417b6:	add    BYTE PTR [eax],al
300417b8:	xor    al,0xe3
300417ba:	add    esi,DWORD PTR [eax]
300417bc:	add    DWORD PTR [eax],eax
300417be:	add    BYTE PTR [eax],al
300417c0:	cmp    al,0xe3
300417c2:	add    esi,DWORD PTR [eax]
300417c4:	(bad)  
300417c5:	(bad)  
300417c6:	(bad)  
300417c7:	push   eax
300417c9:	loope  0x300417ce
300417cb:	xor    BYTE PTR [eax],al
300417cd:	add    BYTE PTR [eax],al
300417cf:	add    al,bh
300417d1:	loope  0x300417d6
300417d3:	xor    BYTE PTR [ecx],al
300417d5:	add    BYTE PTR [eax],al
300417d7:	add    BYTE PTR [esi],al
300417d9:	loop   0x300417de
300417db:	xor    BYTE PTR [edx],al
300417dd:	add    BYTE PTR [eax],al
300417df:	add    BYTE PTR [edx+eiz*8],dl
300417e2:	add    esi,DWORD PTR [eax]
300417e4:	add    eax,DWORD PTR [eax]
300417e6:	add    BYTE PTR [eax],al
300417e8:	and    ah,dl
300417ea:	add    esi,DWORD PTR [eax]
300417ec:	add    al,0x0
300417ee:	add    BYTE PTR [eax],al
300417f0:	xor    dl,ah
300417f2:	add    esi,DWORD PTR [eax]
300417f4:	add    eax,0x3e000000
300417f9:	loop   0x300417fe
300417fb:	xor    bh,bh
300417fd:	(bad)  
300417fe:	(bad)  
300417ff:	call   DWORD PTR [ebp+eiz*8+0x3]
30041803:	xor    BYTE PTR [eax],al
30041805:	add    BYTE PTR [eax],al
30041807:	add    BYTE PTR [edi-0x1b],bl
3004180a:	add    esi,DWORD PTR [eax]
3004180c:	add    BYTE PTR [eax],al
3004180e:	add    BYTE PTR [eax],al
30041810:	push   0xffffffe5
30041812:	add    esi,DWORD PTR [eax]
30041814:	(bad)  
30041815:	(bad)  
30041816:	(bad)  
30041817:	call   FWORD PTR [ecx+eiz*8+0x3003]
3004181e:	add    BYTE PTR [eax],al
30041820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
30041821:	loope  0x30041826
30041823:	xor    bh,bh
30041825:	(bad)  
30041826:	(bad)  
30041827:	(bad)  
30041828:	mov    esp,0x3003e5
3004182d:	add    BYTE PTR [eax],al
3004182f:	add    ah,al
30041831:	in     eax,0x3
30041833:	xor    bh,bh
30041835:	(bad)  
30041836:	(bad)  
30041837:	(bad)  
30041838:	jl     0x30041821
3004183a:	add    esi,DWORD PTR [eax]
3004183c:	add    BYTE PTR [eax],al
3004183e:	add    BYTE PTR [eax],al
30041840:	test   bh,ah
30041842:	add    esi,DWORD PTR [eax]
30041844:	(bad)  
30041845:	(bad)  
30041846:	(bad)  
30041847:	push   eax
30041849:	jmp    0x30044851
3004184e:	add    BYTE PTR [eax],al
30041850:	clc    
30041851:	jmp    0x30044859
30041856:	add    BYTE PTR [eax],al
30041858:	add    dl,ch
3004185a:	add    esi,DWORD PTR [eax]
3004185c:	(bad)  
3004185d:	(bad)  
3004185e:	(bad)  
3004185f:	dec    DWORD PTR [eax-0x16]
30041862:	add    esi,DWORD PTR [eax]
30041864:	(bad)  
30041865:	(bad)  
30041866:	(bad)  
30041867:	call   DWORD PTR [ebx-0x16]
3004186a:	add    esi,DWORD PTR [eax]
3004186c:	(bad)  
3004186d:	(bad)  
3004186e:	(bad)  
3004186f:	call   FWORD PTR [esi-0x16]
30041872:	add    esi,DWORD PTR [eax]
30041874:	(bad)  
30041875:	(bad)  
30041876:	(bad)  
30041877:	jmp    FWORD PTR [esi+eiz*8+0x3003]
3004187e:	add    BYTE PTR [eax],al
30041880:	mov    ah,0xe6
30041882:	add    esi,DWORD PTR [eax]
30041884:	add    DWORD PTR [eax],eax
30041886:	add    BYTE PTR [eax],al
30041888:	mov    esp,0x23003e6
3004188d:	add    BYTE PTR [eax],al
3004188f:	add    ah,al
30041891:	out    0x3,al
30041893:	xor    BYTE PTR [ebx],al
30041895:	add    BYTE PTR [eax],al
30041897:	add    bh,cl
30041899:	out    0x3,al
3004189b:	xor    bh,bh
3004189d:	(bad)  
3004189e:	(bad)  
3004189f:	call   FWORD PTR [edi+eiz*8]
300418a2:	add    esi,DWORD PTR [eax]
300418a4:	add    BYTE PTR [eax],al
300418a6:	add    BYTE PTR [eax],al
300418a8:	daa    
300418a9:	out    0x3,eax
300418ab:	xor    BYTE PTR [ecx],al
300418ad:	add    BYTE PTR [eax],al
300418af:	add    BYTE PTR [edx],dh
300418b1:	out    0x3,eax
300418b3:	xor    bh,bh
300418b5:	(bad)  
300418b6:	(bad)  
300418b7:	jmp    FWORD PTR [eax+ebp*8+0x3]
300418bb:	xor    BYTE PTR [eax],al
300418bd:	add    BYTE PTR [eax],al
300418bf:	add    BYTE PTR [eax+ebp*8+0x3],dh
300418c3:	xor    BYTE PTR [ecx],al
300418c5:	add    BYTE PTR [eax],al
300418c7:	add    BYTE PTR [eax+ebp*8+0x3],bh
300418cb:	xor    BYTE PTR [eax],al
300418cd:	add    BYTE PTR [eax],al
300418cf:	add    BYTE PTR [eax+ebp*8-0xcffd],al
300418d6:	(bad)  
300418d7:	jmp    FWORD PTR [eax]
300418d9:	jmp    0x300448e1
300418de:	add    BYTE PTR [eax],al
300418e0:	xor    ebp,ecx
300418e2:	add    esi,DWORD PTR [eax]
300418e4:	add    DWORD PTR [eax],eax
300418e6:	add    BYTE PTR [eax],al
300418e8:	ds jmp 0x300648f1
300418ee:	add    BYTE PTR [eax],al
300418f0:	dec    ecx
300418f1:	jmp    0x300548f9
300418f6:	add    BYTE PTR [eax],al
300418f8:	add    DWORD PTR [eax],eax
300418fa:	add    BYTE PTR [eax],al
300418fc:	add    al,BYTE PTR [eax]
300418fe:	add    BYTE PTR [eax],al
30041900:	add    DWORD PTR [eax],eax
30041902:	add    BYTE PTR [eax],al
30041904:	or     BYTE PTR [ecx],bl
30041906:	add    al,0x30
30041908:	or     DWORD PTR [eax],eax
3004190a:	add    BYTE PTR [eax],al
3004190c:	mov    WORD PTR [ebp+0x4],es
3004190f:	xor    BYTE PTR [eax],al
30041911:	add    BYTE PTR [eax],al
30041913:	add    BYTE PTR [ebp-0x6],bl
30041916:	add    DWORD PTR [eax],esi
30041918:	(bad)  
30041919:	(bad)  
3004191a:	(bad)  
3004191b:	(bad)  
3004191c:	mov    eax,0x3003eb
30041921:	add    BYTE PTR [eax],al
30041923:	add    BYTE PTR [eax],al
30041925:	add    BYTE PTR [eax],al
30041927:	add    BYTE PTR [ecx],al
30041929:	add    BYTE PTR [eax],al
3004192b:	add    al,al
3004192d:	jmp    0x30041932
3004192f:	xor    BYTE PTR [eax],al
30041931:	add    BYTE PTR [eax],al
30041933:	add    BYTE PTR [eax],al
30041935:	add    BYTE PTR [eax],al
30041937:	add    BYTE PTR [ecx],al
30041939:	add    BYTE PTR [eax],al
3004193b:	add    BYTE PTR [edx],al
3004193d:	add    BYTE PTR [eax],al
3004193f:	add    BYTE PTR [ebx],al
30041941:	add    BYTE PTR [eax],al
30041943:	add    BYTE PTR [ecx],al
30041945:	add    BYTE PTR [eax],al
30041947:	add    BYTE PTR [ecx+ebx*1+0x4],cl
3004194b:	xor    BYTE PTR [ecx],cl
3004194d:	add    BYTE PTR [eax],al
3004194f:	add    BYTE PTR [ebp+eax*2+0x3004],cl
30041956:	add    BYTE PTR [eax],al
30041958:	int    0xc4
3004195a:	add    dh,BYTE PTR [eax]
3004195c:	(bad)  
3004195d:	(bad)  
3004195e:	(bad)  
3004195f:	(bad)  
30041960:	js     0x30041950
30041962:	add    esi,DWORD PTR [eax]
30041964:	add    BYTE PTR [eax],al
30041966:	add    BYTE PTR [eax],al
30041968:	sub    dh,0x3
3004196b:	xor    BYTE PTR [eax-0x6f6f70],dl
30041971:	(bad)  
30041972:	(bad)  
30041973:	dec    DWORD PTR [eax]
30041975:	in     al,dx
30041976:	add    esi,DWORD PTR [eax]
30041978:	add    BYTE PTR [eax],al
3004197a:	add    BYTE PTR [eax],al
3004197c:	adc    ah,ch
3004197e:	add    esi,DWORD PTR [eax]
30041980:	add    DWORD PTR [eax],eax
30041982:	add    BYTE PTR [eax],al
30041984:	sbb    ah,ch
30041986:	add    esi,DWORD PTR [eax]
30041988:	add    al,BYTE PTR [eax]
3004198a:	add    BYTE PTR [eax],al
3004198c:	and    ebp,esp
3004198e:	add    esi,DWORD PTR [eax]
30041990:	add    eax,DWORD PTR [eax]
30041992:	add    BYTE PTR [eax],al
30041994:	sub    ebp,esp
30041996:	add    esi,DWORD PTR [eax]
30041998:	add    al,0x0
3004199a:	add    BYTE PTR [eax],al
3004199c:	ss in  al,dx
3004199e:	add    esi,DWORD PTR [eax]
300419a0:	add    eax,0x41000000
300419a5:	in     al,dx
300419a6:	add    esi,DWORD PTR [eax]
300419a8:	push   es
300419a9:	add    BYTE PTR [eax],al
300419ab:	add    BYTE PTR [esp+ebp*8+0x3],cl
300419af:	xor    BYTE PTR [edi],al
300419b1:	add    BYTE PTR [eax],al
300419b3:	add    BYTE PTR [edi-0x14],dl
300419b6:	add    esi,DWORD PTR [eax]
300419b8:	or     BYTE PTR [eax],al
300419ba:	add    BYTE PTR [eax],al
300419bc:	pop    edi
300419bd:	in     al,dx
300419be:	add    esi,DWORD PTR [eax]
300419c0:	or     DWORD PTR [eax],eax
300419c2:	add    BYTE PTR [eax],al
300419c4:	addr16 in al,dx
300419c6:	add    esi,DWORD PTR [eax]
300419c8:	or     al,BYTE PTR [eax]
300419ca:	add    BYTE PTR [eax],al
300419cc:	outs   dx,DWORD PTR ds:[esi]
300419cd:	in     al,dx
300419ce:	add    esi,DWORD PTR [eax]
300419d0:	or     eax,DWORD PTR [eax]
300419d2:	add    BYTE PTR [eax],al
300419d4:	ja     0x300419c2
300419d6:	add    esi,DWORD PTR [eax]
300419d8:	or     eax,DWORD PTR [eax]
300419da:	add    BYTE PTR [eax],al
300419dc:	jg     0x300419ca
300419de:	add    esi,DWORD PTR [eax]
300419e0:	or     BYTE PTR [eax],al
300419e2:	add    BYTE PTR [eax],al
300419e4:	mov    ch,ah
300419e6:	add    esi,DWORD PTR [eax]
300419e8:	push   cs
300419e9:	add    BYTE PTR [eax],al
300419eb:	add    BYTE PTR [edx+0xe3003ec],dl
300419f1:	add    BYTE PTR [eax],al
300419f3:	add    BYTE PTR [ebp+0x103003ec],bl
300419f9:	add    BYTE PTR [eax],al
300419fb:	add    BYTE PTR [ebp+0x113003ec],ah
30041a01:	add    BYTE PTR [eax],al
30041a03:	add    BYTE PTR [ebp-0xcffc14],ch
30041a09:	(bad)  
30041a0a:	(bad)  
30041a0b:	jmp    FWORD PTR [eax]
30041a0d:	out    dx,al
30041a0e:	add    esi,DWORD PTR [eax]
30041a10:	add    BYTE PTR [eax],al
30041a12:	add    BYTE PTR [eax],al
30041a14:	xor    dh,ch
30041a16:	add    esi,DWORD PTR [eax]
30041a18:	(bad)  
30041a19:	(bad)  
30041a1a:	(bad)  
30041a1b:	dec    eax
30041a1d:	out    dx,al
30041a1e:	add    esi,DWORD PTR [eax]
30041a20:	add    BYTE PTR [eax],al
30041a22:	add    BYTE PTR [eax],al
30041a24:	shr    esi,cl
30041a26:	add    esi,DWORD PTR [eax]
30041a28:	add    DWORD PTR [eax],eax
30041a2a:	add    BYTE PTR [eax],al
30041a2c:	fsubp  st(6),st
30041a2e:	add    esi,DWORD PTR [eax]
30041a30:	(bad)  
30041a31:	(bad)  
30041a32:	(bad)  
30041a33:	inc    DWORD PTR [eax]
30041a35:	in     eax,dx
30041a36:	add    esi,DWORD PTR [eax]
30041a38:	add    BYTE PTR [eax],al
30041a3a:	add    BYTE PTR [eax],al
30041a3c:	or     ebp,ebp
30041a3e:	add    esi,DWORD PTR [eax]
30041a40:	add    DWORD PTR [eax],eax
30041a42:	add    BYTE PTR [eax],al
30041a44:	push   ss
30041a45:	in     eax,dx
30041a46:	add    esi,DWORD PTR [eax]
30041a48:	add    al,BYTE PTR [eax]
30041a4a:	add    BYTE PTR [eax],al
30041a4c:	and    ebp,ebp
30041a4e:	add    esi,DWORD PTR [eax]
30041a50:	(bad)  
30041a51:	(bad)  
30041a52:	(bad)  
30041a53:	push   esp
30041a55:	out    dx,eax
30041a56:	add    esi,DWORD PTR [eax]
30041a58:	add    BYTE PTR [eax],al
30041a5a:	add    BYTE PTR [eax],al
30041a5c:	cld    
30041a5d:	out    dx,eax
30041a5e:	add    esi,DWORD PTR [eax]
30041a60:	add    DWORD PTR [eax],eax
30041a62:	add    BYTE PTR [eax],al
30041a64:	add    al,0xf0
30041a66:	add    esi,DWORD PTR [eax]
30041a68:	(bad)  
30041a69:	(bad)  
30041a6a:	(bad)  
30041a6b:	call   DWORD PTR [edi+ebp*8-0xcffd]
30041a72:	(bad)  
30041a73:	call   FWORD PTR [edi+ebp*8+0x13003]
30041a7a:	add    BYTE PTR [eax],al
30041a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
30041a7d:	out    dx,eax
30041a7e:	add    esi,DWORD PTR [eax]
30041a80:	add    BYTE PTR [eax],al
30041a82:	add    BYTE PTR [eax],al
30041a84:	add    DWORD PTR [eax],eax
30041a86:	add    BYTE PTR [eax],al
30041a88:	add    al,BYTE PTR [eax]
30041a8a:	add    BYTE PTR [eax],al
30041a8c:	add    DWORD PTR [eax],eax
30041a8e:	add    BYTE PTR [eax],al
30041a90:	xchg   esp,eax
30041a91:	sbb    al,BYTE PTR [eax+esi*1]
30041a94:	inc    eax
	...
30041a9d:	add    BYTE PTR [eax],al
30041a9f:	add    BYTE PTR [ecx+0x9],bl
30041aa2:	add    esi,DWORD PTR [eax]
30041aa4:	(bad)  
30041aa5:	(bad)  
30041aa6:	(bad)  
30041aa7:	inc    DWORD PTR [eax]
30041aa9:	add    BYTE PTR [eax],al
30041aab:	add    BYTE PTR [eax],al
30041aad:	add    BYTE PTR [eax],al
30041aaf:	add    BYTE PTR [eax],bh
30041ab1:	cli    
30041ab2:	add    esi,DWORD PTR [eax]
30041ab4:	add    DWORD PTR [eax],eax
30041ab6:	add    BYTE PTR [eax],al
30041ab8:	dec    eax
30041ab9:	cli    
30041aba:	add    esi,DWORD PTR [eax]
30041abc:	(bad)  
30041abd:	(bad)  
30041abe:	(bad)  
30041abf:	inc    DWORD PTR [eax]
30041ac1:	add    BYTE PTR [eax],al
30041ac3:	add    BYTE PTR [eax],al
30041ac5:	add    BYTE PTR [eax],al
30041ac7:	add    BYTE PTR [edx],al
30041ac9:	add    BYTE PTR [eax],al
30041acb:	add    BYTE PTR [ebx],al
30041acd:	add    BYTE PTR [eax],al
30041acf:	add    BYTE PTR [ecx],al
30041ad1:	add    BYTE PTR [eax],al
30041ad3:	add    al,bl
30041ad5:	sbb    al,BYTE PTR [eax+esi*1]
30041ad8:	inc    eax
	...
30041ae1:	add    BYTE PTR [eax],al
30041ae3:	add    bh,al
30041ae5:	add    eax,DWORD PTR [edx]
30041ae7:	xor    bh,bh
30041ae9:	(bad)  
30041aea:	(bad)  
30041aeb:	inc    DWORD PTR [eax]
30041aed:	add    BYTE PTR [eax],al
30041aef:	add    BYTE PTR [eax],al
30041af1:	add    BYTE PTR [eax],al
30041af3:	add    BYTE PTR [eax-0x7],bh
30041af6:	add    esi,DWORD PTR [eax]
30041af8:	add    DWORD PTR [eax],eax
30041afa:	add    BYTE PTR [eax],al
30041afc:	mov    cl,bh
30041afe:	add    esi,DWORD PTR [eax]
30041b00:	(bad)  
30041b01:	(bad)  
30041b02:	(bad)  
30041b03:	inc    DWORD PTR [eax]
30041b05:	add    BYTE PTR [eax],al
30041b07:	add    BYTE PTR [eax],al
30041b09:	add    BYTE PTR [eax],al
30041b0b:	add    BYTE PTR [edx],al
30041b0d:	add    BYTE PTR [eax],al
30041b0f:	add    BYTE PTR [ebx],al
30041b11:	add    BYTE PTR [eax],al
30041b13:	add    BYTE PTR [ecx],al
30041b15:	add    BYTE PTR [eax],al
30041b17:	add    BYTE PTR [ebx+ebx*1],bl
30041b1a:	add    al,0x30
30041b1c:	inc    eax
	...
30041b25:	add    BYTE PTR [eax],al
30041b27:	add    BYTE PTR [ebx-0xcffcf8],dl
30041b2d:	(bad)  
30041b2e:	(bad)  
30041b2f:	inc    DWORD PTR [eax]
30041b31:	add    BYTE PTR [eax],al
30041b33:	add    BYTE PTR [eax],al
30041b35:	add    BYTE PTR [eax],al
30041b37:	add    BYTE PTR [eax+0x13003f8],bh
30041b3d:	add    BYTE PTR [eax],al
30041b3f:	add    al,cl
30041b41:	clc    
30041b42:	add    esi,DWORD PTR [eax]
30041b44:	(bad)  
30041b45:	(bad)  
30041b46:	(bad)  
30041b47:	inc    DWORD PTR [eax]
30041b49:	add    BYTE PTR [eax],al
30041b4b:	add    BYTE PTR [eax],al
30041b4d:	add    BYTE PTR [eax],al
30041b4f:	add    BYTE PTR [edx],al
30041b51:	add    BYTE PTR [eax],al
30041b53:	add    BYTE PTR [ebx],al
30041b55:	add    BYTE PTR [eax],al
30041b57:	add    BYTE PTR [ecx],al
30041b59:	add    BYTE PTR [eax],al
30041b5b:	add    BYTE PTR [eax+0x1b],ah
30041b5e:	add    al,0x30
30041b60:	inc    eax
	...
30041b69:	add    BYTE PTR [eax],al
30041b6b:	add    dh,dl
30041b6d:	pop    es
30041b6e:	add    esi,DWORD PTR [eax]
30041b70:	add    BYTE PTR [eax],al
30041b72:	add    BYTE PTR [eax],al
30041b74:	add    DWORD PTR [eax],eax
30041b76:	add    BYTE PTR [eax],al
30041b78:	add    al,BYTE PTR [eax]
30041b7a:	add    BYTE PTR [eax],al
30041b7c:	add    DWORD PTR [eax],eax
30041b7e:	add    BYTE PTR [eax],al
30041b80:	test   BYTE PTR [ebx],bl
30041b82:	add    al,0x30
30041b84:	inc    eax
	...
30041b8d:	add    BYTE PTR [eax],al
30041b8f:	add    BYTE PTR [ecx+0x7],cl
30041b92:	add    esi,DWORD PTR [eax]
30041b94:	(bad)  
30041b95:	(bad)  
30041b96:	(bad)  
30041b97:	jmp    FWORD PTR [eax-0xc]
30041b9a:	add    esi,DWORD PTR [eax]
30041b9c:	add    BYTE PTR [eax],al
30041b9e:	add    BYTE PTR [eax],al
30041ba0:	jae    0x30041b96
30041ba2:	add    esi,DWORD PTR [eax]
30041ba4:	(bad)  
30041ba5:	(bad)  
30041ba6:	(bad)  
30041ba7:	inc    DWORD PTR [eax]
30041ba9:	add    BYTE PTR [eax],al
30041bab:	add    bh,bh
30041bad:	(bad)  
30041bae:	(bad)  
30041baf:	inc    DWORD PTR [eax]
	...
30041bb9:	add    BYTE PTR [eax],al
30041bbb:	add    BYTE PTR [ecx],al
30041bbd:	add    BYTE PTR [eax],al
30041bbf:	add    BYTE PTR [ecx],al
30041bc1:	add    BYTE PTR [eax],al
30041bc3:	add    al,cl
30041bc5:	sbb    eax,DWORD PTR [eax+esi*1]
30041bc8:	inc    eax
	...
30041bd1:	add    BYTE PTR [eax],al
30041bd3:	add    BYTE PTR [edx-0xcffd02],ch
30041bd9:	(bad)  
30041bda:	(bad)  
30041bdb:	call   DWORD PTR [eax+0x3003f2]
30041be1:	add    BYTE PTR [eax],al
30041be3:	add    BYTE PTR [ebp-0xcffc0e],ah
30041be9:	(bad)  
30041bea:	(bad)  
30041beb:	jmp    DWORD PTR [ebp+0x23003f2]
30041bf1:	add    BYTE PTR [eax],al
30041bf3:	add    BYTE PTR [ebp-0xcffc0e],ch
30041bf9:	(bad)  
30041bfa:	(bad)  
30041bfb:	inc    esp
30041bfd:	repz add esi,DWORD PTR [eax]
30041c00:	add    BYTE PTR [eax],al
30041c02:	add    BYTE PTR [eax],al
30041c04:	fpatan 
30041c06:	add    esi,DWORD PTR [eax]
30041c08:	(bad)  
30041c09:	(bad)  
30041c0a:	(bad)  
30041c0b:	(bad)  
30041c0c:	fpatan 
30041c0e:	add    esi,DWORD PTR [eax]
30041c10:	add    al,BYTE PTR [eax]
30041c12:	add    BYTE PTR [eax],al
30041c14:	loope  0x30041c09
30041c16:	add    esi,DWORD PTR [eax]
30041c18:	(bad)  
30041c19:	(bad)  
30041c1a:	(bad)  
30041c1b:	push   esp
30041c1d:	repnz add esi,DWORD PTR [eax]
30041c20:	add    BYTE PTR [eax],al
30041c22:	add    BYTE PTR [eax],al
30041c24:	or     ebx,esi
30041c26:	add    esi,DWORD PTR [eax]
30041c28:	(bad)  
30041c29:	(bad)  
30041c2a:	(bad)  
30041c2b:	dec    DWORD PTR [ecx]
30041c2d:	repz add esi,DWORD PTR [eax]
30041c30:	add    al,BYTE PTR [eax]
30041c32:	add    BYTE PTR [eax],al
30041c34:	adc    ebx,esi
30041c36:	add    esi,DWORD PTR [eax]
30041c38:	(bad)  
30041c39:	(bad)  
30041c3a:	(bad)  
30041c3b:	jmp    FWORD PTR [edx+esi*8]
30041c3e:	add    esi,DWORD PTR [eax]
30041c40:	add    BYTE PTR [eax],al
30041c42:	add    BYTE PTR [eax],al
30041c44:	inc    ecx
30041c45:	repnz add esi,DWORD PTR [eax]
30041c48:	(bad)  
30041c49:	(bad)  
30041c4a:	(bad)  
30041c4b:	inc    DWORD PTR [ecx-0xe]
30041c4e:	add    esi,DWORD PTR [eax]
30041c50:	add    al,BYTE PTR [eax]
30041c52:	add    BYTE PTR [eax],al
30041c54:	dec    ecx
30041c55:	repnz add esi,DWORD PTR [eax]
30041c58:	(bad)  
30041c59:	(bad)  
30041c5a:	(bad)  
30041c5b:	call   FWORD PTR [eax-0xd]
30041c5e:	add    esi,DWORD PTR [eax]
30041c60:	add    BYTE PTR [eax],al
30041c62:	add    BYTE PTR [eax],al
30041c64:	ins    DWORD PTR es:[edi],dx
30041c65:	repz add esi,DWORD PTR [eax]
30041c68:	(bad)  
30041c69:	(bad)  
30041c6a:	(bad)  
30041c6b:	jmp    FWORD PTR [ebp-0xd]
30041c6e:	add    esi,DWORD PTR [eax]
30041c70:	add    al,BYTE PTR [eax]
30041c72:	add    BYTE PTR [eax],al
30041c74:	jne    0x30041c69
30041c76:	add    esi,DWORD PTR [eax]
30041c78:	(bad)  
30041c79:	(bad)  
30041c7a:	(bad)  
30041c7b:	call   DWORD PTR [eax+0x3003fa]
30041c81:	add    BYTE PTR [eax],al
30041c83:	add    BYTE PTR [eax-0xcffc06],bl
30041c89:	(bad)  
30041c8a:	(bad)  
30041c8b:	call   DWORD PTR [esi+edi*8+0x3]
30041c8f:	xor    BYTE PTR [eax],al
30041c91:	add    BYTE PTR [eax],al
30041c93:	add    BYTE PTR [esi+edi*8+0x3],bl
30041c97:	xor    bh,bh
30041c99:	(bad)  
30041c9a:	(bad)  
30041c9b:	jmp    DWORD PTR [esi+edi*8+0x3003]
30041ca2:	add    BYTE PTR [eax],al
30041ca4:	lods   al,BYTE PTR ds:[esi]
30041ca5:	inc    BYTE PTR [ebx]
30041ca7:	xor    bh,bh
30041ca9:	(bad)  
30041caa:	(bad)  
30041cab:	push   DWORD PTR [ebp+edi*8+0x3003]
30041cb2:	add    BYTE PTR [eax],al
30041cb4:	mov    esp,0xff3003fd
30041cb9:	(bad)  
30041cba:	(bad)  
30041cbb:	jmp    eax
30041cbd:	cli    
30041cbe:	add    esi,DWORD PTR [eax]
30041cc0:	add    BYTE PTR [eax],al
30041cc2:	add    BYTE PTR [eax],al
30041cc4:	jmp    0x30041cc0
30041cc6:	add    esi,DWORD PTR [eax]
30041cc8:	add    DWORD PTR [eax],eax
30041cca:	add    BYTE PTR [eax],al
30041ccc:	idiv   dl
30041cce:	add    esi,DWORD PTR [eax]
30041cd0:	(bad)  
30041cd1:	(bad)  
30041cd2:	(bad)  
30041cd3:	jmp    DWORD PTR [ebp+edi*8+0x3]
30041cd7:	xor    BYTE PTR [eax],al
30041cd9:	add    BYTE PTR [eax],al
30041cdb:	add    BYTE PTR [ebp+edi*8+0x3],ch
30041cdf:	xor    bh,bh
30041ce1:	(bad)  
30041ce2:	(bad)  
30041ce3:	inc    DWORD PTR [edi+esi*8+0x3]
30041ce7:	xor    BYTE PTR [eax],al
30041ce9:	add    BYTE PTR [eax],al
30041ceb:	add    BYTE PTR [edi+esi*8+0x3],cl
30041cef:	xor    BYTE PTR [ecx],al
30041cf1:	add    BYTE PTR [eax],al
30041cf3:	add    BYTE PTR [edi+esi*8+0x3],dl
30041cf7:	xor    BYTE PTR [edx],al
30041cf9:	add    BYTE PTR [eax],al
30041cfb:	add    BYTE PTR [edi+esi*8+0x3],bl
30041cff:	xor    bh,bh
30041d01:	(bad)  
30041d02:	(bad)  
30041d03:	jmp    DWORD PTR [edi+esi*8+0x3003]
30041d0a:	add    BYTE PTR [eax],al
30041d0c:	lods   al,BYTE PTR ds:[esi]
30041d0d:	test   DWORD PTR [ebx],0xffffff30
30041d13:	call   DWORD PTR [edi*8+0x3003]
30041d1a:	add    BYTE PTR [eax],al
30041d1c:	sbb    al,0xfd
30041d1e:	add    esi,DWORD PTR [eax]
30041d20:	(bad)  
30041d21:	(bad)  
30041d22:	(bad)  
30041d23:	push   DWORD PTR [esp+edi*8+0x3]
30041d27:	xor    bh,bh
30041d29:	(bad)  
30041d2a:	(bad)  
30041d2b:	(bad)  
30041d2c:	jl     0x30041d2a
30041d2e:	add    esi,DWORD PTR [eax]
30041d30:	(bad)  
30041d31:	(bad)  
30041d32:	(bad)  
30041d33:	inc    DWORD PTR [esi+edi*8]
30041d36:	add    esi,DWORD PTR [eax]
30041d38:	add    BYTE PTR [eax],al
30041d3a:	add    BYTE PTR [eax],al
30041d3c:	or     al,0xfe
30041d3e:	add    esi,DWORD PTR [eax]
30041d40:	(bad)  
30041d41:	(bad)  
30041d42:	(bad)  
30041d43:	call   DWORD PTR [eax-0xa]
30041d46:	add    esi,DWORD PTR [eax]
30041d48:	add    BYTE PTR [eax],al
30041d4a:	add    BYTE PTR [eax],al
30041d4c:	pop    eax
30041d4d:	test   BYTE PTR [ebx],0x30
30041d50:	(bad)  
30041d51:	(bad)  
30041d52:	(bad)  
30041d53:	jmp    FWORD PTR [ebx+edi*8+0x3003]
30041d5a:	add    BYTE PTR [eax],al
30041d5c:	mov    ah,0xfb
30041d5e:	add    esi,DWORD PTR [eax]
30041d60:	add    DWORD PTR [eax],eax
30041d62:	add    BYTE PTR [eax],al
30041d64:	mov    esp,0xff3003fb
30041d69:	(bad)  
30041d6a:	(bad)  
30041d6b:	push   esp
30041d6d:	test   DWORD PTR [ebx],0x30
30041d73:	add    ah,bh
30041d75:	test   DWORD PTR [ebx],0x130
30041d7b:	add    BYTE PTR [eax+edi*8],al
30041d7e:	add    esi,DWORD PTR [eax]
30041d80:	(bad)  
30041d81:	(bad)  
30041d82:	(bad)  
30041d83:	inc    DWORD PTR [eax+eax*1]
30041d86:	add    al,0x30
30041d88:	add    BYTE PTR [eax],al
30041d8a:	add    BYTE PTR [eax],al
30041d8c:	or     al,0x0
30041d8e:	add    al,0x30
30041d90:	(bad)  
30041d91:	(bad)  
30041d92:	(bad)  
30041d93:	push   DWORD PTR [edi+edi*8-0xcffd]
30041d9a:	(bad)  
30041d9b:	(bad)  
30041d9c:	mov    esp,0xff3003ff
30041da1:	(bad)  
30041da2:	(bad)  
30041da3:	call   DWORD PTR [eax+eax*1+0x4]
30041da7:	xor    BYTE PTR [eax],al
30041da9:	add    BYTE PTR [eax],al
30041dab:	add    BYTE PTR [eax+eax*1+0x4],bl
30041daf:	xor    bh,bh
30041db1:	(bad)  
30041db2:	(bad)  
30041db3:	push   DWORD PTR [eax+0x300400]
30041db9:	add    BYTE PTR [eax],al
30041dbb:	add    BYTE PTR [eax-0xcffc00],bh
30041dc1:	(bad)  
30041dc2:	(bad)  
30041dc3:	inc    DWORD PTR [eax]
30041dc5:	add    DWORD PTR [eax+esi*1],eax
30041dc8:	add    BYTE PTR [eax],al
30041dca:	add    BYTE PTR [eax],al
30041dcc:	or     BYTE PTR [ecx],al
30041dce:	add    al,0x30
30041dd0:	add    DWORD PTR [eax],eax
30041dd2:	add    BYTE PTR [eax],al
30041dd4:	adc    BYTE PTR [ecx],al
30041dd6:	add    al,0x30
30041dd8:	add    al,BYTE PTR [eax]
30041dda:	add    BYTE PTR [eax],al
30041ddc:	sbb    BYTE PTR [ecx],al
30041dde:	add    al,0x30
30041de0:	add    eax,DWORD PTR [eax]
30041de2:	add    BYTE PTR [eax],al
30041de4:	and    BYTE PTR [ecx],al
30041de6:	add    al,0x30
30041de8:	add    al,0x0
30041dea:	add    BYTE PTR [eax],al
30041dec:	sub    BYTE PTR [ecx],al
30041dee:	add    al,0x30
30041df0:	add    eax,0x30000000
30041df5:	add    DWORD PTR [eax+esi*1],eax
30041df8:	push   es
30041df9:	add    BYTE PTR [eax],al
30041dfb:	add    BYTE PTR [eax],bh
30041dfd:	add    DWORD PTR [eax+esi*1],eax
30041e00:	pop    es
30041e01:	add    BYTE PTR [eax],al
30041e03:	add    BYTE PTR [eax+0x1],al
30041e06:	add    al,0x30
30041e08:	or     BYTE PTR [eax],al
30041e0a:	add    BYTE PTR [eax],al
30041e0c:	dec    eax
30041e0d:	add    DWORD PTR [eax+esi*1],eax
30041e10:	(bad)  
30041e11:	(bad)  
30041e12:	(bad)  
30041e13:	inc    DWORD PTR [eax]
30041e15:	add    BYTE PTR [eax],al
30041e17:	add    BYTE PTR [eax],al
30041e19:	add    BYTE PTR [eax],al
30041e1b:	add    BYTE PTR [eax+0x1300404],dh
30041e21:	add    BYTE PTR [eax],al
30041e23:	add    al,al
30041e25:	add    al,0x4
30041e27:	xor    bh,bh
30041e29:	(bad)  
30041e2a:	(bad)  
30041e2b:	inc    DWORD PTR [eax]
30041e2d:	add    BYTE PTR [eax],al
30041e2f:	add    BYTE PTR [eax],al
30041e31:	add    BYTE PTR [eax],al
30041e33:	add    BYTE PTR [edx],al
30041e35:	add    BYTE PTR [eax],al
30041e37:	add    BYTE PTR [ebx],al
30041e39:	add    BYTE PTR [eax],al
30041e3b:	add    BYTE PTR [ecx],al
30041e3d:	add    BYTE PTR [eax],al
30041e3f:	add    BYTE PTR [esi+ebx*1+0x4],al
30041e43:	xor    BYTE PTR [eax+0x0],al
	...
30041e4e:	add    BYTE PTR [eax],al
30041e50:	jno    0x30041e5b
30041e52:	add    dh,BYTE PTR [eax]
30041e54:	(bad)  
30041e55:	(bad)  
30041e56:	(bad)  
30041e57:	inc    DWORD PTR [eax]
30041e59:	add    BYTE PTR [eax],al
30041e5b:	add    BYTE PTR [eax],al
30041e5d:	add    BYTE PTR [eax],al
30041e5f:	add    BYTE PTR [eax],cl
30041e61:	add    eax,0x13004
30041e66:	add    BYTE PTR [eax],al
30041e68:	sbb    BYTE PTR ds:0xffff3004,al
30041e6e:	(bad)  
30041e6f:	inc    DWORD PTR [eax]
30041e71:	add    BYTE PTR [eax],al
30041e73:	add    BYTE PTR [eax],al
30041e75:	add    BYTE PTR [eax],al
30041e77:	add    BYTE PTR [edx],al
30041e79:	add    BYTE PTR [eax],al
30041e7b:	add    BYTE PTR [ebx],al
30041e7d:	add    BYTE PTR [eax],al
30041e7f:	add    BYTE PTR [ecx],al
30041e81:	add    BYTE PTR [eax],al
30041e83:	add    BYTE PTR [eax+0x4030041e],cl
	...
30041e91:	add    BYTE PTR [eax],al
30041e93:	add    BYTE PTR [ebp+0x9],al
30041e96:	add    dh,BYTE PTR [eax]
30041e98:	(bad)  
30041e99:	(bad)  
30041e9a:	(bad)  
30041e9b:	inc    DWORD PTR [eax]
30041e9d:	add    BYTE PTR [eax],al
30041e9f:	add    BYTE PTR [eax],al
30041ea1:	add    BYTE PTR [eax],al
30041ea3:	add    BYTE PTR [eax+0x4],bl
30041ea6:	add    al,0x30
30041ea8:	add    DWORD PTR [eax],eax
30041eaa:	add    BYTE PTR [eax],al
30041eac:	push   0xff300404
30041eb1:	(bad)  
30041eb2:	(bad)  
30041eb3:	inc    DWORD PTR [eax]
30041eb5:	add    BYTE PTR [eax],al
30041eb7:	add    BYTE PTR [eax],al
30041eb9:	add    BYTE PTR [eax],al
30041ebb:	add    BYTE PTR [edx],al
30041ebd:	add    BYTE PTR [eax],al
30041ebf:	add    BYTE PTR [ebx],al
30041ec1:	add    BYTE PTR [eax],al
30041ec3:	add    BYTE PTR [ecx],al
30041ec5:	add    BYTE PTR [eax],al
30041ec7:	add    ah,cl
30041ec9:	push   ds
30041eca:	add    al,0x30
30041ecc:	inc    eax
	...
30041ed5:	add    BYTE PTR [eax],al
30041ed7:	add    BYTE PTR [edx],bl
30041ed9:	or     DWORD PTR [edx],eax
30041edb:	xor    bh,bh
30041edd:	(bad)  
30041ede:	(bad)  
30041edf:	(bad)  
30041ee0:	clc    
30041ee1:	add    DWORD PTR [eax+esi*1],eax
30041ee4:	add    BYTE PTR [eax],al
30041ee6:	add    BYTE PTR [eax],al
30041ee8:	add    BYTE PTR [edx],al
30041eea:	add    al,0x30
30041eec:	(bad)  
30041eed:	(bad)  
30041eee:	(bad)  
30041eef:	call   FWORD PTR [eax+0x300403]
30041ef5:	add    BYTE PTR [eax],al
30041ef7:	add    BYTE PTR [eax-0xcffbfd],ah
30041efd:	(bad)  
30041efe:	(bad)  
30041eff:	(bad)  
30041f00:	call   0x30342308
30041f05:	add    BYTE PTR [eax],al
30041f07:	add    bl,dh
30041f09:	add    eax,DWORD PTR [eax+esi*1]
30041f0c:	add    DWORD PTR [eax],eax
30041f0e:	add    BYTE PTR [eax],al
30041f10:	inc    BYTE PTR [ebx]
30041f12:	add    al,0x30
30041f14:	(bad)  
30041f15:	(bad)  
30041f16:	(bad)  
30041f17:	(bad)  
30041f18:	cmp    BYTE PTR [ebx],al
30041f1a:	add    al,0x30
30041f1c:	add    BYTE PTR [eax],al
30041f1e:	add    BYTE PTR [eax],al
30041f20:	inc    ebx
30041f21:	add    eax,DWORD PTR [eax+esi*1]
30041f24:	add    DWORD PTR [eax],eax
30041f26:	add    BYTE PTR [eax],al
30041f28:	dec    esi
30041f29:	add    eax,DWORD PTR [eax+esi*1]
30041f2c:	(bad)  
30041f2d:	(bad)  
30041f2e:	(bad)  
30041f2f:	call   DWORD PTR [eax+0x6]
30041f32:	add    al,0x30
30041f34:	add    BYTE PTR [eax],al
30041f36:	add    BYTE PTR [eax],al
30041f38:	pop    ebx
30041f39:	push   es
30041f3a:	add    al,0x30
30041f3c:	add    DWORD PTR [eax],eax
30041f3e:	add    BYTE PTR [eax],al
30041f40:	arpl   WORD PTR [esi],ax
30041f42:	add    al,0x30
30041f44:	(bad)  
30041f45:	(bad)  
30041f46:	(bad)  
30041f47:	push   eax
30041f49:	or     BYTE PTR [eax+esi*1],al
30041f4c:	add    BYTE PTR [eax],al
30041f4e:	add    BYTE PTR [eax],al
30041f50:	sti    
30041f51:	or     BYTE PTR [eax+esi*1],al
30041f54:	add    DWORD PTR [eax],eax
30041f56:	add    BYTE PTR [eax],al
30041f58:	push   es
30041f59:	or     DWORD PTR [eax+esi*1],eax
30041f5c:	(bad)  
30041f5d:	(bad)  
30041f5e:	(bad)  
30041f5f:	jmp    DWORD PTR [eax+0x300408]
30041f65:	add    BYTE PTR [eax],al
30041f67:	add    BYTE PTR [eax-0xcffbf8],ch
30041f6d:	(bad)  
30041f6e:	(bad)  
30041f6f:	call   DWORD PTR [eax+0x8]
30041f72:	add    al,0x30
30041f74:	add    BYTE PTR [eax],al
30041f76:	add    BYTE PTR [eax],al
30041f78:	pop    eax
30041f79:	or     BYTE PTR [eax+esi*1],al
30041f7c:	(bad)  
30041f7d:	(bad)  
30041f7e:	(bad)  
30041f7f:	call   eax
30041f81:	push   cs
30041f82:	add    al,0x30
30041f84:	add    BYTE PTR [eax],al
30041f86:	add    BYTE PTR [eax],al
30041f88:	fmul   DWORD PTR [esi]
30041f8a:	add    al,0x30
30041f8c:	add    DWORD PTR [eax],eax
30041f8e:	add    BYTE PTR [eax],al
30041f90:	loopne 0x30041fa0
30041f92:	add    al,0x30
30041f94:	add    al,BYTE PTR [eax]
30041f96:	add    BYTE PTR [eax],al
30041f98:	call   0x333423ab
30041f9d:	add    BYTE PTR [eax],al
30041f9f:	add    al,dh
30041fa1:	push   cs
30041fa2:	add    al,0x30
30041fa4:	add    al,0x0
30041fa6:	add    BYTE PTR [eax],al
30041fa8:	clc    
30041fa9:	push   cs
30041faa:	add    al,0x30
30041fac:	(bad)  
30041fad:	(bad)  
30041fae:	(bad)  
30041faf:	jmp    DWORD PTR [eax]
30041fb1:	push   cs
30041fb2:	add    al,0x30
30041fb4:	add    BYTE PTR [eax],al
30041fb6:	add    BYTE PTR [eax],al
30041fb8:	sub    BYTE PTR [esi],cl
30041fba:	add    al,0x30
30041fbc:	(bad)  
30041fbd:	(bad)  
30041fbe:	(bad)  
30041fbf:	dec    DWORD PTR [esp+ecx*1+0x3004]
30041fc6:	add    BYTE PTR [eax],al
30041fc8:	xchg   esp,eax
30041fc9:	or     al,0x4
30041fcb:	xor    BYTE PTR [ecx],al
30041fcd:	add    BYTE PTR [eax],al
30041fcf:	add    BYTE PTR [edi+0x230040c],bl
30041fd5:	add    BYTE PTR [eax],al
30041fd7:	add    BYTE PTR [edi-0xcffbf4],ah
30041fdd:	(bad)  
30041fde:	(bad)  
30041fdf:	(bad)  
30041fe0:	cld    
30041fe1:	or     al,0x4
30041fe3:	xor    BYTE PTR [eax],al
30041fe5:	add    BYTE PTR [eax],al
30041fe7:	add    BYTE PTR [edi],al
30041fe9:	or     eax,0x13004
30041fee:	add    BYTE PTR [eax],al
30041ff0:	adc    cl,BYTE PTR ds:0xffff3004
30041ff6:	(bad)  
30041ff7:	inc    DWORD PTR [eax+0xf]
30041ffa:	add    al,0x30
30041ffc:	add    BYTE PTR [eax],al
30041ffe:	add    BYTE PTR [eax],al
30042000:	dec    ebx
30042001:	(bad)  
30042003:	xor    BYTE PTR [ecx],al
30042005:	add    BYTE PTR [eax],al
30042007:	add    BYTE PTR [esi+0xf],dl
3004200a:	add    al,0x30
3004200c:	add    DWORD PTR [eax],eax
3004200e:	add    BYTE PTR [eax],al
30042010:	popa   
30042011:	(bad)  
30042013:	xor    BYTE PTR [ebx],al
30042015:	add    BYTE PTR [eax],al
30042017:	add    BYTE PTR [edi+ecx*1+0x4],ch
3004201b:	xor    BYTE PTR [eax+eax*1],al
3004201e:	add    BYTE PTR [eax],al
30042020:	ja     0x30042031
30042022:	add    al,0x30
30042024:	(bad)  
30042025:	(bad)  
30042026:	(bad)  
30042027:	dec    DWORD PTR [eax+0xb]
3004202a:	add    al,0x30
3004202c:	add    BYTE PTR [eax],al
3004202e:	add    BYTE PTR [eax],al
30042030:	push   ebx
30042031:	or     eax,DWORD PTR [eax+esi*1]
30042034:	add    DWORD PTR [eax],eax
30042036:	add    BYTE PTR [eax],al
30042038:	pop    esi
30042039:	or     eax,DWORD PTR [eax+esi*1]
3004203c:	add    al,BYTE PTR [eax]
3004203e:	add    BYTE PTR [eax],al
30042040:	imul   ecx,DWORD PTR [ebx],0x33004
30042046:	add    BYTE PTR [eax],al
30042048:	je     0x30042055
3004204a:	add    al,0x30
3004204c:	add    eax,DWORD PTR [eax]
3004204e:	add    BYTE PTR [eax],al
30042050:	jg     0x3004205d
30042052:	add    al,0x30
30042054:	add    eax,0x87000000
30042059:	or     eax,DWORD PTR [eax+esi*1]
3004205c:	(bad)  
3004205d:	(bad)  
3004205e:	(bad)  
3004205f:	(bad)  
30042060:	mov    esp,0x30040d
30042065:	add    BYTE PTR [eax],al
30042067:	add    bh,al
30042069:	or     eax,0xffff3004
3004206e:	(bad)  
3004206f:	push   eax
30042071:	or     al,BYTE PTR [eax+esi*1]
30042074:	add    BYTE PTR [eax],al
30042076:	add    BYTE PTR [eax],al
30042078:	clc    
30042079:	or     al,BYTE PTR [eax+esi*1]
3004207c:	add    DWORD PTR [eax],eax
3004207e:	add    BYTE PTR [eax],al
30042080:	add    BYTE PTR [ebx],cl
30042082:	add    al,0x30
30042084:	add    DWORD PTR [eax],eax
30042086:	add    BYTE PTR [eax],al
30042088:	add    BYTE PTR [ecx],ah
3004208a:	add    al,0x0
3004208c:	hlt    
3004208d:	dec    esp
3004208e:	add    al,0x0
30042090:	add    BYTE PTR [eax],dh
30042092:	add    al,0x0
30042094:	sbb    al,0x21
30042096:	add    al,0x0
	...
300420a4:	add    DWORD PTR [eax],eax
300420a6:	add    BYTE PTR [eax],al
300420a8:	adc    BYTE PTR [ecx],ah
300420aa:	add    al,0x0
300420ac:	clc    
300420ad:	dec    esp
300420ae:	add    al,0x0
300420b0:	adc    al,0x30
300420b2:	add    al,0x0
300420b4:	xor    BYTE PTR [ecx],ah
300420b6:	add    al,0x0
	...
300420e4:	nop
300420e5:	nop
300420e6:	nop
300420e7:	nop
300420e8:	nop
300420e9:	nop
300420ea:	nop
300420eb:	nop
300420ec:	nop
300420ed:	nop
300420ee:	nop
300420ef:	nop
300420f0:	nop
300420f1:	nop
300420f2:	nop
300420f3:	nop
300420f4:	nop
300420f5:	nop
300420f6:	nop
300420f7:	nop
300420f8:	nop
300420f9:	nop
300420fa:	nop
300420fb:	nop
300420fc:	nop
300420fd:	nop
300420fe:	nop
300420ff:	nop
30042100:	ins    DWORD PTR es:[edi],dx
30042101:	jae    0x30042166
30042103:	outs   dx,DWORD PTR ds:[esi]
30042104:	jb     0x3004216b
30042106:	gs cs fs ins BYTE PTR es:[edi],dx
3004210a:	ins    BYTE PTR es:[edi],dx
3004210b:	add    BYTE PTR [eax+0x73909090],dl
30042111:	jno    0x30042180
30042113:	popa   
30042114:	jo     0x3004217f
30042116:	cs fs ins BYTE PTR es:[edi],dx
30042119:	ins    BYTE PTR es:[edi],dx
3004211a:	add    BYTE PTR [eax+0x42140],dl
30042120:	pusha  
30042121:	and    DWORD PTR [eax+eax*1],eax
30042124:	test   BYTE PTR [ecx],ah
30042126:	add    al,0x0
30042128:	call   0x0:0x421
3004212f:	add    BYTE PTR [edx-0x43fffbdf],dh
30042135:	and    DWORD PTR [eax+eax*1],eax
30042138:	int3   
30042139:	and    DWORD PTR [eax+eax*1],eax
3004213c:	add    BYTE PTR [eax],al
3004213e:	add    BYTE PTR [eax],al
30042140:	add    BYTE PTR [eax],al
30042142:	push   ebx
30042143:	je     0x300421b7
30042145:	outs   dx,DWORD PTR ds:[esi]
30042146:	outs   dx,BYTE PTR ds:[esi]
30042147:	addr16 dec esi
30042149:	popa   
3004214a:	ins    DWORD PTR es:[edi],dx
3004214b:	gs push esp
3004214d:	outs   dx,DWORD PTR ds:[esi]
3004214e:	imul   esp,DWORD PTR [ebp+0x6e],0x46
30042152:	jb     0x300421c3
30042154:	ins    DWORD PTR es:[edi],dx
30042155:	inc    ecx
30042156:	jae    0x300421cb
30042158:	gs ins DWORD PTR es:[edi],dx
3004215a:	bound  ebp,QWORD PTR [ecx+edi*2+0x45]
3004215e:	js     0x30042160
30042160:	add    BYTE PTR [eax],al
30042162:	push   ebx
30042163:	je     0x300421d7
30042165:	outs   dx,DWORD PTR ds:[esi]
30042166:	outs   dx,BYTE PTR ds:[esi]
30042167:	addr16 dec esi
30042169:	popa   
3004216a:	ins    DWORD PTR es:[edi],dx
3004216b:	gs push ebx
3004216d:	imul   esp,DWORD PTR [edi+0x6e],0x72757461
30042174:	gs push esi
30042176:	gs jb  0x300421e2
30042179:	imul   sp,WORD PTR [ebx+0x61],0x6974
3004217f:	outs   dx,DWORD PTR ds:[esi]
30042180:	outs   dx,BYTE PTR ds:[esi]
30042181:	inc    ebp
30042182:	js     0x30042184
30042184:	add    BYTE PTR [eax],al
30042186:	push   ebx
30042187:	je     0x300421fb
30042189:	outs   dx,DWORD PTR ds:[esi]
3004218a:	outs   dx,BYTE PTR ds:[esi]
3004218b:	addr16 dec esi
3004218d:	popa   
3004218e:	ins    DWORD PTR es:[edi],dx
3004218f:	gs inc ebp
30042191:	jb     0x30042205
30042193:	outs   dx,DWORD PTR ds:[esi]
30042194:	jb     0x300421df
30042196:	outs   dx,BYTE PTR ds:[esi]
30042197:	outs   dx,WORD PTR ds:[esi]
30042199:	add    BYTE PTR [eax],al
3004219b:	add    BYTE PTR [ebx+0x74],dl
3004219e:	jb     0x3004220f
300421a0:	outs   dx,BYTE PTR ds:[esi]
300421a1:	addr16 dec esi
300421a3:	popa   
300421a4:	ins    DWORD PTR es:[edi],dx
300421a5:	gs inc esi
300421a7:	jb     0x3004220e
300421a9:	gs inc edx
300421ab:	jne    0x30042213
300421ad:	data16 gs jb 0x300421b1
300421b1:	outs   dx,DWORD PTR ds:[esi]
300421b2:	add    BYTE PTR [eax],al
300421b4:	push   ebx
300421b5:	jno    0x30042224
300421b7:	push   ebx
300421b8:	gs je  0x300421bb
300421bb:	add    BYTE PTR [eax],al
300421bd:	add    BYTE PTR [ebx+0x71],dl
300421c0:	ins    DWORD PTR es:[edi],dx
300421c1:	inc    ebp
300421c2:	outs   dx,BYTE PTR ds:[esi]
300421c3:	fs push ebx
300421c5:	gs jae 0x3004223b
300421c8:	imul   ebp,DWORD PTR [edi+0x6e],0x53000000
300421cf:	jno    0x3004223e
300421d1:	inc    edi
300421d2:	gs je  0x30042228
300421d5:	gs jae 0x3004224b
300421d8:	imul   ebp,DWORD PTR [edi+0x6e],0x0
300421df:	add    BYTE PTR [edx-0x25],bl
300421e2:	adc    DWORD PTR [eax+0x0],edx
300421e5:	add    BYTE PTR [eax],al
300421e7:	add    BYTE PTR [edx],al
300421e9:	add    BYTE PTR [eax],al
300421eb:	add    BYTE PTR [ebx],ah
300421ed:	add    BYTE PTR [eax],al
300421ef:	add    BYTE PTR [edx+eiz*1],dh
300421f2:	add    al,0x0
300421f4:	xor    al,0x16
300421f6:	add    al,0x0
300421f8:	add    BYTE PTR [eax],al
300421fa:	add    BYTE PTR [eax],al
300421fc:	pop    edx
300421fd:	fist   DWORD PTR [ecx]
300421ff:	push   eax
30042200:	add    BYTE PTR [eax],al
30042202:	add    BYTE PTR [eax],al
30042204:	or     al,0x0
30042206:	add    BYTE PTR [eax],al
30042208:	adc    BYTE PTR [eax],al
3004220a:	add    BYTE PTR [eax],al
3004220c:	sbb    al,0xad
3004220e:	add    al,BYTE PTR [eax]
30042210:	sbb    al,0xa1
30042212:	add    al,BYTE PTR [eax]
30042214:	add    BYTE PTR [eax],al
30042216:	add    BYTE PTR [eax],al
30042218:	pop    edx
30042219:	fist   DWORD PTR [ecx]
3004221b:	push   eax
3004221c:	xor    eax,0xa1d8402
30042221:	add    BYTE PTR [eax],al
30042223:	add    BYTE PTR [eax+eax*1],al
30042226:	add    BYTE PTR [eax],al
30042228:	xor    BYTE PTR [edx],ah
3004222a:	add    al,0x0
3004222c:	xor    BYTE PTR [esi],dl
3004222e:	add    al,0x0
30042230:	test   BYTE PTR ds:0x5352bb03,bl
30042236:	inc    esp
30042237:	push   ebx
30042238:	call   0x58977e3a
3004223d:	sub    dl,BYTE PTR [edx+0x1508bd4f]
30042243:	fistp  WORD PTR [ecx*1+0x285ac]
3004224a:	add    BYTE PTR [eax],al
3004224c:	fs gs jbe 0x300422b5
30042250:	outs   dx,BYTE PTR ds:[esi]
30042251:	jbe    0x30042281
30042253:	jo     0x300422b9
30042255:	bound  eax,QWORD PTR [eax]
	...
