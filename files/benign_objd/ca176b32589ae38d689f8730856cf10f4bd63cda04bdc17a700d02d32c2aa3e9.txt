
ca176b32589ae38d689f8730856cf10f4bd63cda04bdc17a700d02d32c2aa3e9.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    QWORD PTR [rsp+0x8],rbx
   140001015:	push   rdi
   140001016:	sub    rsp,0x20
   14000101a:	mov    rbx,QWORD PTR [rip+0xb63f]        # 0x14000c660
   140001021:	mov    rdi,rcx
   140001024:	test   rbx,rbx
   140001027:	je     0x14000104b
   140001029:	mov    rbx,QWORD PTR [rbx+0x40]
   14000102d:	test   rbx,rbx
   140001030:	je     0x14000104b
   140001032:	mov    rcx,rbx
   140001035:	call   QWORD PTR [rip+0x53d5]        # 0x140006410
   14000103b:	mov    rcx,rdi
   14000103e:	call   rbx
   140001040:	mov    rbx,QWORD PTR [rsp+0x30]
   140001045:	add    rsp,0x20
   140001049:	pop    rdi
   14000104a:	ret    
   14000104b:	call   QWORD PTR [rip+0x50c7]        # 0x140006118
   140001051:	jmp    0x140001040
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	mov    QWORD PTR [rsp+0x8],rbx
   140001065:	push   rdi
   140001066:	sub    rsp,0x20
   14000106a:	mov    rax,QWORD PTR [rip+0xb5ef]        # 0x14000c660
   140001071:	mov    rdi,rcx
   140001074:	test   rax,rax
   140001077:	je     0x140003bcc
   14000107d:	mov    rbx,QWORD PTR [rax+0x38]
   140001081:	test   rbx,rbx
   140001084:	je     0x140003bcc
   14000108a:	mov    rcx,rbx
   14000108d:	call   QWORD PTR [rip+0x537d]        # 0x140006410
   140001093:	mov    rcx,rdi
   140001096:	call   rbx
   140001098:	mov    rbx,QWORD PTR [rsp+0x30]
   14000109d:	add    rsp,0x20
   1400010a1:	pop    rdi
   1400010a2:	ret    
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400010ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400010bf:	mov    QWORD PTR [rsp+0x20],rdi
   1400010c4:	push   r14
   1400010c6:	sub    rsp,0x20
   1400010ca:	mov    rbx,QWORD PTR [rip+0xb58f]        # 0x14000c660
   1400010d1:	mov    rdi,r9
   1400010d4:	mov    esi,r8d
   1400010d7:	mov    rbp,rdx
   1400010da:	mov    r14,rcx
   1400010dd:	test   rbx,rbx
   1400010e0:	je     0x14000111c
   1400010e2:	mov    rbx,QWORD PTR [rbx]
   1400010e5:	test   rbx,rbx
   1400010e8:	je     0x14000111c
   1400010ea:	mov    rcx,rbx
   1400010ed:	call   QWORD PTR [rip+0x531d]        # 0x140006410
   1400010f3:	mov    r9,rdi
   1400010f6:	mov    r8d,esi
   1400010f9:	mov    rdx,rbp
   1400010fc:	mov    rcx,r14
   1400010ff:	call   rbx
   140001101:	mov    rbx,QWORD PTR [rsp+0x30]
   140001106:	mov    rbp,QWORD PTR [rsp+0x38]
   14000110b:	mov    rsi,QWORD PTR [rsp+0x40]
   140001110:	mov    rdi,QWORD PTR [rsp+0x48]
   140001115:	add    rsp,0x20
   140001119:	pop    r14
   14000111b:	ret    
   14000111c:	mov    eax,0xc0000002
   140001121:	jmp    0x140001101
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	rex push rbx
   140001132:	sub    rsp,0x20
   140001136:	mov    rbx,QWORD PTR [rip+0xb523]        # 0x14000c660
   14000113d:	test   rbx,rbx
   140001140:	je     0x14000115f
   140001142:	mov    rbx,QWORD PTR [rbx+0x58]
   140001146:	test   rbx,rbx
   140001149:	je     0x14000115f
   14000114b:	mov    rcx,rbx
   14000114e:	call   QWORD PTR [rip+0x52bc]        # 0x140006410
   140001154:	mov    rax,rbx
   140001157:	add    rsp,0x20
   14000115b:	pop    rbx
   14000115c:	rex.W jmp rax
   14000115f:	add    rsp,0x20
   140001163:	pop    rbx
   140001164:	ret    
   140001165:	int3   
   140001166:	int3   
   140001167:	int3   
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	mov    QWORD PTR [rsp+0x8],rbx
   140001175:	push   rdi
   140001176:	sub    rsp,0x20
   14000117a:	mov    rax,QWORD PTR [rip+0xb4df]        # 0x14000c660
   140001181:	mov    rdi,rcx
   140001184:	test   rax,rax
   140001187:	je     0x1400011ab
   140001189:	mov    rbx,QWORD PTR [rax+0x8]
   14000118d:	test   rbx,rbx
   140001190:	je     0x1400011ab
   140001192:	mov    rcx,rbx
   140001195:	call   QWORD PTR [rip+0x5275]        # 0x140006410
   14000119b:	mov    rcx,rdi
   14000119e:	call   rbx
   1400011a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011a5:	add    rsp,0x20
   1400011a9:	pop    rdi
   1400011aa:	ret    
   1400011ab:	mov    eax,0xc0000002
   1400011b0:	jmp    0x1400011a0
   1400011b2:	int3   
   1400011b3:	int3   
   1400011b4:	int3   
   1400011b5:	int3   
   1400011b6:	int3   
   1400011b7:	int3   
   1400011b8:	int3   
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400011ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400011cf:	mov    QWORD PTR [rsp+0x20],rdi
   1400011d4:	push   r14
   1400011d6:	sub    rsp,0x40
   1400011da:	mov    rax,QWORD PTR [rip+0xb47f]        # 0x14000c660
   1400011e1:	mov    rdi,r9
   1400011e4:	mov    rsi,r8
   1400011e7:	mov    ebp,edx
   1400011e9:	mov    r14,rcx
   1400011ec:	test   rax,rax
   1400011ef:	je     0x140001255
   1400011f1:	mov    rbx,QWORD PTR [rax+0x18]
   1400011f5:	test   rbx,rbx
   1400011f8:	je     0x140001255
   1400011fa:	mov    rcx,rbx
   1400011fd:	call   QWORD PTR [rip+0x520d]        # 0x140006410
   140001203:	mov    eax,DWORD PTR [rsp+0x88]
   14000120a:	mov    r9,rdi
   14000120d:	mov    DWORD PTR [rsp+0x38],eax
   140001211:	mov    r8,rsi
   140001214:	mov    eax,DWORD PTR [rsp+0x80]
   14000121b:	mov    edx,ebp
   14000121d:	mov    DWORD PTR [rsp+0x30],eax
   140001221:	mov    rcx,r14
   140001224:	mov    rax,QWORD PTR [rsp+0x78]
   140001229:	mov    QWORD PTR [rsp+0x28],rax
   14000122e:	mov    rax,QWORD PTR [rsp+0x70]
   140001233:	mov    QWORD PTR [rsp+0x20],rax
   140001238:	call   rbx
   14000123a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000123f:	mov    rbp,QWORD PTR [rsp+0x58]
   140001244:	mov    rsi,QWORD PTR [rsp+0x60]
   140001249:	mov    rdi,QWORD PTR [rsp+0x68]
   14000124e:	add    rsp,0x40
   140001252:	pop    r14
   140001254:	ret    
   140001255:	mov    eax,0xc0000002
   14000125a:	jmp    0x14000123a
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    QWORD PTR [rsp+0x8],rbx
   140001275:	mov    QWORD PTR [rsp+0x10],rbp
   14000127a:	mov    QWORD PTR [rsp+0x18],rsi
   14000127f:	mov    QWORD PTR [rsp+0x20],rdi
   140001284:	push   r14
   140001286:	sub    rsp,0x40
   14000128a:	mov    rax,QWORD PTR [rip+0xb3cf]        # 0x14000c660
   140001291:	mov    rdi,r9
   140001294:	mov    rsi,r8
   140001297:	mov    rbp,rdx
   14000129a:	mov    r14,rcx
   14000129d:	test   rax,rax
   1400012a0:	je     0x1400012fa
   1400012a2:	mov    rbx,QWORD PTR [rax+0x10]
   1400012a6:	test   rbx,rbx
   1400012a9:	je     0x1400012fa
   1400012ab:	mov    rcx,rbx
   1400012ae:	call   QWORD PTR [rip+0x515c]        # 0x140006410
   1400012b4:	mov    eax,DWORD PTR [rsp+0x80]
   1400012bb:	mov    r9,rdi
   1400012be:	mov    DWORD PTR [rsp+0x30],eax
   1400012c2:	mov    r8,rsi
   1400012c5:	mov    eax,DWORD PTR [rsp+0x78]
   1400012c9:	mov    rdx,rbp
   1400012cc:	mov    DWORD PTR [rsp+0x28],eax
   1400012d0:	mov    rcx,r14
   1400012d3:	mov    rax,QWORD PTR [rsp+0x70]
   1400012d8:	mov    QWORD PTR [rsp+0x20],rax
   1400012dd:	call   rbx
   1400012df:	mov    rbx,QWORD PTR [rsp+0x50]
   1400012e4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400012e9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400012ee:	mov    rdi,QWORD PTR [rsp+0x68]
   1400012f3:	add    rsp,0x40
   1400012f7:	pop    r14
   1400012f9:	ret    
   1400012fa:	mov    eax,0xc0000002
   1400012ff:	jmp    0x1400012df
   140001301:	int3   
   140001302:	int3   
   140001303:	int3   
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	rex push rsi
   140001312:	sub    rsp,0x240
   140001319:	mov    rax,QWORD PTR [rip+0xace0]        # 0x14000c000
   140001320:	xor    rax,rsp
   140001323:	mov    QWORD PTR [rsp+0x220],rax
   14000132b:	mov    rsi,r9
   14000132e:	cmp    r8d,0x1d4
   140001335:	ja     0x140003c22
   14000133b:	cmp    DWORD PTR [rsp+0x270],0x1d4
   140001346:	ja     0x140003c22
   14000134c:	lea    eax,[r8+0x30]
   140001350:	mov    QWORD PTR [rsp+0x238],rbx
   140001358:	mov    WORD PTR [rsp+0x22],ax
   14000135d:	sub    ax,0x28
   140001361:	mov    DWORD PTR [rsp+0x24],0x0
   140001369:	mov    WORD PTR [rsp+0x20],ax
   14000136e:	mov    DWORD PTR [rsp+0x48],ecx
   140001372:	test   r8d,r8d
   140001375:	je     0x140001384
   140001377:	mov    r8d,r8d
   14000137a:	lea    rcx,[rsp+0x4c]
   14000137f:	call   0x140003adc
   140001384:	mov    rcx,QWORD PTR [rip+0xb285]        # 0x14000c610
   14000138b:	lea    r8,[rsp+0x20]
   140001390:	lea    rdx,[rsp+0x20]
   140001395:	call   QWORD PTR [rip+0x5015]        # 0x1400063b0
   14000139b:	mov    ebx,eax
   14000139d:	test   eax,eax
   14000139f:	js     0x140003bfb
   1400013a5:	test   rsi,rsi
   1400013a8:	jne    0x140003be0
   1400013ae:	mov    ebx,DWORD PTR [rsp+0x48]
   1400013b2:	mov    eax,ebx
   1400013b4:	mov    rbx,QWORD PTR [rsp+0x238]
   1400013bc:	mov    rcx,QWORD PTR [rsp+0x220]
   1400013c4:	xor    rcx,rsp
   1400013c7:	call   0x1400037f0
   1400013cc:	add    rsp,0x240
   1400013d3:	pop    rsi
   1400013d4:	ret    
   1400013d5:	int3   
   1400013d6:	int3   
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400013ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400013ef:	push   rdi
   1400013f0:	sub    rsp,0x20
   1400013f4:	mov    rbx,QWORD PTR [rip+0xb265]        # 0x14000c660
   1400013fb:	mov    rdi,r8
   1400013fe:	mov    esi,edx
   140001400:	mov    rbp,rcx
   140001403:	test   rbx,rbx
   140001406:	je     0x140001439
   140001408:	mov    rbx,QWORD PTR [rbx+0x28]
   14000140c:	test   rbx,rbx
   14000140f:	je     0x140001439
   140001411:	mov    rcx,rbx
   140001414:	call   QWORD PTR [rip+0x4ff6]        # 0x140006410
   14000141a:	mov    r8,rdi
   14000141d:	mov    edx,esi
   14000141f:	mov    rcx,rbp
   140001422:	call   rbx
   140001424:	mov    rbx,QWORD PTR [rsp+0x30]
   140001429:	mov    rbp,QWORD PTR [rsp+0x38]
   14000142e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001433:	add    rsp,0x20
   140001437:	pop    rdi
   140001438:	ret    
   140001439:	mov    eax,0xc0000002
   14000143e:	jmp    0x140001424
   140001440:	int3   
   140001441:	int3   
   140001442:	int3   
   140001443:	int3   
   140001444:	int3   
   140001445:	int3   
   140001446:	int3   
   140001447:	int3   
   140001448:	int3   
   140001449:	int3   
   14000144a:	int3   
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	sub    rsp,0x68
   140001454:	mov    eax,DWORD PTR [rsp+0x90]
   14000145b:	mov    DWORD PTR [rsp+0x48],eax
   14000145f:	lea    rax,[rsp+0x50]
   140001464:	mov    QWORD PTR [rsp+0x40],r9
   140001469:	xor    r9d,r9d
   14000146c:	mov    DWORD PTR [rsp+0x38],r8d
   140001471:	xor    r8d,r8d
   140001474:	mov    QWORD PTR [rsp+0x30],rdx
   140001479:	xor    edx,edx
   14000147b:	mov    DWORD PTR [rsp+0x28],ecx
   14000147f:	mov    rcx,QWORD PTR [rip+0xb282]        # 0x14000c708
   140001486:	mov    QWORD PTR [rsp+0x20],rax
   14000148b:	call   QWORD PTR [rip+0x4e97]        # 0x140006328
   140001491:	add    rsp,0x68
   140001495:	ret    
   140001496:	int3   
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400014aa:	push   rdi
   1400014ab:	sub    rsp,0x20
   1400014af:	mov    rax,QWORD PTR [rip+0xb1aa]        # 0x14000c660
   1400014b6:	mov    rdi,rdx
   1400014b9:	mov    rsi,rcx
   1400014bc:	test   rax,rax
   1400014bf:	je     0x1400014ce
   1400014c1:	mov    rbx,QWORD PTR [rax+0x50]
   1400014c5:	test   rbx,rbx
   1400014c8:	jne    0x140003c2c
   1400014ce:	xor    eax,eax
   1400014d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014d5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400014da:	add    rsp,0x20
   1400014de:	pop    rdi
   1400014df:	ret    
   1400014e0:	int3   
   1400014e1:	int3   
   1400014e2:	int3   
   1400014e3:	int3   
   1400014e4:	int3   
   1400014e5:	int3   
   1400014e6:	int3   
   1400014e7:	int3   
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400014f5:	push   rsi
   1400014f6:	sub    rsp,0x40
   1400014fa:	mov    rbx,rcx
   1400014fd:	mov    QWORD PTR [rcx],0x0
   140001504:	mov    ecx,DWORD PTR [rip+0xab06]        # 0x14000c010
   14000150a:	call   QWORD PTR [rip+0x4c70]        # 0x140006180
   140001510:	mov    rsi,rax
   140001513:	test   rax,rax
   140001516:	jne    0x140003c44
   14000151c:	mov    eax,0xc000005c
   140001521:	mov    rbx,QWORD PTR [rsp+0x58]
   140001526:	add    rsp,0x40
   14000152a:	pop    rsi
   14000152b:	ret    
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	int3   
   140001531:	int3   
   140001532:	int3   
   140001533:	int3   
   140001534:	int3   
   140001535:	int3   
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	mov    QWORD PTR [rsp+0x8],rbx
   140001545:	mov    QWORD PTR [rsp+0x10],rbp
   14000154a:	mov    QWORD PTR [rsp+0x18],rsi
   14000154f:	mov    QWORD PTR [rsp+0x20],rdi
   140001554:	push   r14
   140001556:	sub    rsp,0x20
   14000155a:	mov    rbx,QWORD PTR [rip+0xb0ff]        # 0x14000c660
   140001561:	mov    rdi,r9
   140001564:	mov    rsi,r8
   140001567:	mov    ebp,edx
   140001569:	mov    r14,rcx
   14000156c:	test   rbx,rbx
   14000156f:	je     0x1400015ab
   140001571:	mov    rbx,QWORD PTR [rbx+0x20]
   140001575:	test   rbx,rbx
   140001578:	je     0x1400015ab
   14000157a:	mov    rcx,rbx
   14000157d:	call   QWORD PTR [rip+0x4e8d]        # 0x140006410
   140001583:	mov    r9,rdi
   140001586:	mov    r8,rsi
   140001589:	mov    edx,ebp
   14000158b:	mov    rcx,r14
   14000158e:	call   rbx
   140001590:	mov    rbx,QWORD PTR [rsp+0x30]
   140001595:	mov    rbp,QWORD PTR [rsp+0x38]
   14000159a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000159f:	mov    rdi,QWORD PTR [rsp+0x48]
   1400015a4:	add    rsp,0x20
   1400015a8:	pop    r14
   1400015aa:	ret    
   1400015ab:	mov    eax,0xc0000002
   1400015b0:	jmp    0x140001590
   1400015b2:	int3   
   1400015b3:	int3   
   1400015b4:	int3   
   1400015b5:	int3   
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    r11,rsp
   1400015c3:	sub    rsp,0x98
   1400015ca:	xor    eax,eax
   1400015cc:	mov    DWORD PTR [rsp+0x60],0x0
   1400015d4:	mov    QWORD PTR [r11-0x30],rax
   1400015d8:	mov    QWORD PTR [r11-0x28],rax
   1400015dc:	mov    QWORD PTR [r11-0x20],rax
   1400015e0:	mov    QWORD PTR [r11-0x18],rax
   1400015e4:	mov    QWORD PTR [r11-0x10],rax
   1400015e8:	mov    eax,ecx
   1400015ea:	and    ecx,0xffffff
   1400015f0:	and    eax,0x1000000
   1400015f5:	jne    0x140003cb0
   1400015fb:	mov    rax,QWORD PTR [rsp+0xc8]
   140001603:	mov    QWORD PTR [r11-0x70],rax
   140001607:	mov    rax,QWORD PTR [rsp+0xc0]
   14000160f:	mov    QWORD PTR [r11-0x78],rax
   140001613:	call   QWORD PTR [rip+0x4a37]        # 0x140006050
   140001619:	add    rsp,0x98
   140001620:	ret    
   140001621:	int3   
   140001622:	int3   
   140001623:	int3   
   140001624:	int3   
   140001625:	int3   
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    QWORD PTR [rsp+0x8],rbx
   140001635:	mov    QWORD PTR [rsp+0x10],rsi
   14000163a:	push   rdi
   14000163b:	sub    rsp,0x20
   14000163f:	xor    edi,edi
   140001641:	mov    rbx,rdx
   140001644:	mov    esi,ecx
   140001646:	test   rdx,rdx
   140001649:	je     0x1400016a5
   14000164b:	mov    QWORD PTR [rdx],rdi
   14000164e:	mov    eax,DWORD PTR [rip+0xb124]        # 0x14000c778
   140001654:	test   eax,eax
   140001656:	je     0x1400016ac
   140001658:	mov    dl,0x1
   14000165a:	lea    rcx,[rip+0xb03f]        # 0x14000c6a0
   140001661:	call   QWORD PTR [rip+0x4c69]        # 0x1400062d0
   140001667:	mov    ecx,esi
   140001669:	call   0x1400016c0
   14000166e:	test   rax,rax
   140001671:	je     0x14000169e
   140001673:	mov    rax,QWORD PTR [rax+0x30]
   140001677:	test   rax,rax
   14000167a:	je     0x14000169e
   14000167c:	mov    QWORD PTR [rbx],rax
   14000167f:	lea    rcx,[rip+0xb01a]        # 0x14000c6a0
   140001686:	call   QWORD PTR [rip+0x4c4c]        # 0x1400062d8
   14000168c:	mov    eax,edi
   14000168e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001693:	mov    rsi,QWORD PTR [rsp+0x38]
   140001698:	add    rsp,0x20
   14000169c:	pop    rdi
   14000169d:	ret    
   14000169e:	mov    edi,0xc0000225
   1400016a3:	jmp    0x14000167f
   1400016a5:	mov    eax,0xc000000d
   1400016aa:	jmp    0x14000168e
   1400016ac:	mov    eax,0xc00000e5
   1400016b1:	jmp    0x14000168e
   1400016b3:	int3   
   1400016b4:	int3   
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	mov    rax,QWORD PTR [rip+0xaf89]        # 0x14000c650
   1400016c7:	lea    rdx,[rip+0xaf82]        # 0x14000c650
   1400016ce:	cmp    rax,rdx
   1400016d1:	je     0x1400016e0
   1400016d3:	cmp    DWORD PTR [rax+0x10],ecx
   1400016d6:	je     0x1400016e2
   1400016d8:	mov    rax,QWORD PTR [rax]
   1400016db:	cmp    rax,rdx
   1400016de:	jne    0x1400016d3
   1400016e0:	xor    eax,eax
   1400016e2:	ret    
   1400016e3:	int3   
   1400016e4:	int3   
   1400016e5:	int3   
   1400016e6:	int3   
   1400016e7:	int3   
   1400016e8:	int3   
   1400016e9:	int3   
   1400016ea:	int3   
   1400016eb:	int3   
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	jmp    0x140001130
   1400016f5:	int3   
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	int3   
   140001701:	int3   
   140001702:	int3   
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    r8,rdx
   140001713:	mov    edx,ecx
   140001715:	xor    ecx,ecx
   140001717:	jmp    0x140001f80
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	int3   
   140001721:	int3   
   140001722:	int3   
   140001723:	int3   
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	rex push rbx
   140001732:	sub    rsp,0x20
   140001736:	lea    rax,[rip+0x4db7]        # 0x1400064f4
   14000173d:	mov    DWORD PTR [rip+0xafc9],0x8a        # 0x14000c710
   140001747:	mov    ecx,0x1
   14000174c:	mov    QWORD PTR [rip+0xafc5],rax        # 0x14000c718
   140001753:	mov    DWORD PTR [rip+0xafb7],0x0        # 0x14000c714
   14000175d:	call   QWORD PTR [rip+0x496d]        # 0x1400060d0
   140001763:	lea    rcx,[rip+0x3156]        # 0x1400048c0
   14000176a:	call   QWORD PTR [rip+0x4958]        # 0x1400060c8
   140001770:	mov    r8b,0x1
   140001773:	xor    edx,edx
   140001775:	movzx  ecx,r8b
   140001779:	call   QWORD PTR [rip+0x4ba1]        # 0x140006320
   14000177f:	mov    ecx,0x786
   140001784:	call   QWORD PTR [rip+0x4ae6]        # 0x140006270
   14000178a:	mov    rax,QWORD PTR gs:0x60
   140001793:	test   BYTE PTR [rax+0x3],0x2
   140001797:	jne    0x140003d2a
   14000179d:	mov    r9d,0x4
   1400017a3:	mov    DWORD PTR [rsp+0x30],0x1
   1400017ab:	lea    r8,[rsp+0x30]
   1400017b0:	or     rcx,0xffffffffffffffff
   1400017b4:	lea    edx,[r9+0x32]
   1400017b8:	call   QWORD PTR [rip+0x4af2]        # 0x1400062b0
   1400017be:	mov    ebx,eax
   1400017c0:	test   eax,eax
   1400017c2:	js     0x1400018e9
   1400017c8:	mov    r9d,0x4
   1400017ce:	mov    DWORD PTR [rsp+0x38],0x9
   1400017d6:	lea    r8,[rsp+0x38]
   1400017db:	or     rcx,0xffffffffffffffff
   1400017df:	lea    edx,[r9+0x1]
   1400017e3:	call   QWORD PTR [rip+0x4ac7]        # 0x1400062b0
   1400017e9:	mov    ebx,eax
   1400017eb:	test   eax,eax
   1400017ed:	js     0x1400018e9
   1400017f3:	call   0x1400034d0
   1400017f8:	call   0x140002820
   1400017fd:	mov    ebx,eax
   1400017ff:	test   eax,eax
   140001801:	js     0x140003d75
   140001807:	call   0x1400025d0
   14000180c:	mov    ebx,eax
   14000180e:	test   eax,eax
   140001810:	js     0x140003d8b
   140001816:	call   0x140001cb0
   14000181b:	mov    ebx,eax
   14000181d:	test   eax,eax
   14000181f:	js     0x140003da1
   140001825:	test   ebx,ebx
   140001827:	js     0x140003dc8
   14000182d:	call   0x1400032f0
   140001832:	mov    ebx,eax
   140001834:	test   eax,eax
   140001836:	js     0x140003de1
   14000183c:	call   0x140002080
   140001841:	test   eax,eax
   140001843:	jne    0x140003ebf
   140001849:	call   0x140001d30
   14000184e:	test   eax,eax
   140001850:	jne    0x140003ebf
   140001856:	call   0x140002b10
   14000185b:	mov    ebx,eax
   14000185d:	test   eax,eax
   14000185f:	js     0x1400018e9
   140001865:	mov    rcx,QWORD PTR [rip+0xae94]        # 0x14000c700
   14000186c:	call   QWORD PTR [rip+0x47e6]        # 0x140006058
   140001872:	mov    ebx,eax
   140001874:	test   eax,eax
   140001876:	js     0x1400018e9
   140001878:	call   0x1400027a0
   14000187d:	mov    rbx,rax
   140001880:	test   rax,rax
   140001883:	je     0x140003dfd
   140001889:	mov    rcx,rax
   14000188c:	call   QWORD PTR [rip+0x4976]        # 0x140006208
   140001892:	test   eax,eax
   140001894:	je     0x140003e29
   14000189a:	mov    rcx,rbx
   14000189d:	call   QWORD PTR [rip+0x485d]        # 0x140006100
   1400018a3:	call   0x140001a40
   1400018a8:	call   0x1400019e0
   1400018ad:	mov    ebx,eax
   1400018af:	test   eax,eax
   1400018b1:	js     0x140003e73
   1400018b7:	call   0x140001970
   1400018bc:	call   0x140001900
   1400018c1:	xor    r8d,r8d
   1400018c4:	lea    r9,[rip+0x4bf5]        # 0x1400064c0
   1400018cb:	xor    ecx,ecx
   1400018cd:	lea    edx,[r8+0x1]
   1400018d1:	call   QWORD PTR [rip+0x4929]        # 0x140006200
   1400018d7:	test   rax,rax
   1400018da:	je     0x140003e8c
   1400018e0:	mov    rcx,rax
   1400018e3:	call   QWORD PTR [rip+0x491f]        # 0x140006208
   1400018e9:	mov    ecx,ebx
   1400018eb:	call   QWORD PTR [rip+0x48a7]        # 0x140006198
   1400018f1:	int3   
   1400018f2:	int3   
   1400018f3:	int3   
   1400018f4:	int3   
   1400018f5:	int3   
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	int3   
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	mov    QWORD PTR [rsp+0x10],rbx
   140001905:	push   rsi
   140001906:	sub    rsp,0x20
   14000190a:	mov    rbx,QWORD PTR [rip+0xad5f]        # 0x14000c670
   140001911:	lea    rsi,[rip+0xad58]        # 0x14000c670
   140001918:	cmp    rbx,rsi
   14000191b:	je     0x14000195a
   14000191d:	mov    QWORD PTR [rsp+0x30],rdi
   140001922:	cmp    DWORD PTR [rbx+0x38],0x2
   140001926:	jne    0x14000194d
   140001928:	mov    rdi,QWORD PTR [rbx+0x48]
   14000192c:	mov    rcx,rdi
   14000192f:	call   QWORD PTR [rip+0x4adb]        # 0x140006410
   140001935:	mov    ecx,0x2
   14000193a:	call   rdi
   14000193c:	mov    edi,eax
   14000193e:	test   eax,eax
   140001940:	js     0x140003ef4
   140001946:	mov    DWORD PTR [rbx+0x38],0x3
   14000194d:	mov    rbx,QWORD PTR [rbx]
   140001950:	cmp    rbx,rsi
   140001953:	jne    0x140001922
   140001955:	mov    rdi,QWORD PTR [rsp+0x30]
   14000195a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000195f:	add    rsp,0x20
   140001963:	pop    rsi
   140001964:	ret    
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	mov    QWORD PTR [rsp+0x10],rbx
   140001975:	push   rsi
   140001976:	sub    rsp,0x20
   14000197a:	mov    rbx,QWORD PTR [rip+0xacef]        # 0x14000c670
   140001981:	lea    rsi,[rip+0xace8]        # 0x14000c670
   140001988:	cmp    rbx,rsi
   14000198b:	je     0x1400019c8
   14000198d:	mov    QWORD PTR [rsp+0x30],rdi
   140001992:	cmp    DWORD PTR [rbx+0x38],0x1
   140001996:	jne    0x1400019bb
   140001998:	mov    rdi,QWORD PTR [rbx+0x48]
   14000199c:	mov    rcx,rdi
   14000199f:	call   QWORD PTR [rip+0x4a6b]        # 0x140006410
   1400019a5:	mov    ecx,0x1
   1400019aa:	call   rdi
   1400019ac:	test   eax,eax
   1400019ae:	js     0x140003f28
   1400019b4:	mov    DWORD PTR [rbx+0x38],0x2
   1400019bb:	mov    rbx,QWORD PTR [rbx]
   1400019be:	cmp    rbx,rsi
   1400019c1:	jne    0x140001992
   1400019c3:	mov    rdi,QWORD PTR [rsp+0x30]
   1400019c8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400019cd:	add    rsp,0x20
   1400019d1:	pop    rsi
   1400019d2:	ret    
   1400019d3:	int3   
   1400019d4:	int3   
   1400019d5:	int3   
   1400019d6:	int3   
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	sub    rsp,0x28
   1400019e4:	mov    r8d,0x1
   1400019ea:	mov    edx,0x4d2
   1400019ef:	mov    ecx,r8d
   1400019f2:	call   QWORD PTR [rip+0x4630]        # 0x140006028
   1400019f8:	mov    ecx,eax
   1400019fa:	call   QWORD PTR [rip+0x4610]        # 0x140006010
   140001a00:	xor    r8d,r8d
   140001a03:	lea    r9,[rip+0x4aee]        # 0x1400064f8
   140001a0a:	xor    ecx,ecx
   140001a0c:	lea    edx,[r8+0x1]
   140001a10:	call   QWORD PTR [rip+0x47ea]        # 0x140006200
   140001a16:	test   rax,rax
   140001a19:	je     0x140003f3c
   140001a1f:	mov    rcx,rax
   140001a22:	call   QWORD PTR [rip+0x47e0]        # 0x140006208
   140001a28:	xor    eax,eax
   140001a2a:	add    rsp,0x28
   140001a2e:	ret    
   140001a2f:	int3   
   140001a30:	int3   
   140001a31:	int3   
   140001a32:	int3   
   140001a33:	int3   
   140001a34:	int3   
   140001a35:	int3   
   140001a36:	int3   
   140001a37:	int3   
   140001a38:	int3   
   140001a39:	int3   
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	int3   
   140001a3d:	int3   
   140001a3e:	int3   
   140001a3f:	int3   
   140001a40:	rex push rbx
   140001a42:	sub    rsp,0xa0
   140001a49:	lea    rdx,[rip+0x4ca0]        # 0x1400066f0
   140001a50:	lea    rcx,[rsp+0x50]
   140001a55:	call   QWORD PTR [rip+0x48ed]        # 0x140006348
   140001a5b:	xor    ebx,ebx
   140001a5d:	mov    DWORD PTR [rsp+0x70],0x30
   140001a65:	lea    rax,[rsp+0x50]
   140001a6a:	mov    DWORD PTR [rsp+0x28],ebx
   140001a6e:	xorps  xmm0,xmm0
   140001a71:	mov    QWORD PTR [rsp+0x80],rax
   140001a79:	lea    r9,[rsp+0x60]
   140001a7e:	mov    DWORD PTR [rsp+0x20],0x3
   140001a86:	lea    r8,[rsp+0x70]
   140001a8b:	mov    QWORD PTR [rsp+0x78],rbx
   140001a90:	mov    edx,0xc0000000
   140001a95:	mov    DWORD PTR [rsp+0x88],ebx
   140001a9c:	lea    rcx,[rip+0xac65]        # 0x14000c708
   140001aa3:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   140001aac:	call   QWORD PTR [rip+0x485e]        # 0x140006310
   140001ab2:	test   eax,eax
   140001ab4:	js     0x140003f70
   140001aba:	mov    rcx,QWORD PTR [rip+0xac47]        # 0x14000c708
   140001ac1:	lea    rax,[rip+0xa570]        # 0x14000c038
   140001ac8:	mov    DWORD PTR [rsp+0x48],0x4
   140001ad0:	xor    r9d,r9d
   140001ad3:	mov    QWORD PTR [rsp+0x40],rax
   140001ad8:	xor    r8d,r8d
   140001adb:	mov    DWORD PTR [rsp+0x38],ebx
   140001adf:	lea    rax,[rsp+0x60]
   140001ae4:	mov    QWORD PTR [rsp+0x30],rbx
   140001ae9:	xor    edx,edx
   140001aeb:	mov    DWORD PTR [rsp+0x28],0x398000
   140001af3:	mov    QWORD PTR [rsp+0x20],rax
   140001af8:	call   QWORD PTR [rip+0x482a]        # 0x140006328
   140001afe:	test   eax,eax
   140001b00:	js     0x140003f9b
   140001b06:	mov    rcx,QWORD PTR [rip+0xabfb]        # 0x14000c708
   140001b0d:	lea    r9d,[rbx+0x4]
   140001b11:	lea    r8,[rsp+0xb0]
   140001b19:	mov    DWORD PTR [rsp+0xb0],0x6
   140001b24:	lea    rdx,[rsp+0x60]
   140001b29:	mov    DWORD PTR [rsp+0x20],0x29
   140001b31:	call   QWORD PTR [rip+0x4819]        # 0x140006350
   140001b37:	test   eax,eax
   140001b39:	js     0x140003fb0
   140001b3f:	lea    rcx,[rsp+0x70]
   140001b44:	call   0x140001b60
   140001b49:	add    rsp,0xa0
   140001b50:	pop    rbx
   140001b51:	ret    
   140001b52:	int3   
   140001b53:	int3   
   140001b54:	int3   
   140001b55:	int3   
   140001b56:	int3   
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	rex push rbx
   140001b62:	sub    rsp,0x70
   140001b66:	mov    rbx,rcx
   140001b69:	call   QWORD PTR [rip+0x4641]        # 0x1400061b0
   140001b6f:	mov    DWORD PTR [rip+0xa49b],eax        # 0x14000c010
   140001b75:	cmp    eax,0xffffffff
   140001b78:	je     0x140003fd6
   140001b7e:	mov    QWORD PTR [rsp+0x80],rdi
   140001b86:	lea    r9,[rsp+0x30]
   140001b8b:	xor    edi,edi
   140001b8d:	lea    rcx,[rip+0xac14]        # 0x14000c7a8
   140001b94:	mov    DWORD PTR [rsp+0x28],edi
   140001b98:	mov    r8,rbx
   140001b9b:	mov    edx,0xc0000000
   140001ba0:	mov    DWORD PTR [rsp+0x20],0x3
   140001ba8:	call   QWORD PTR [rip+0x4762]        # 0x140006310
   140001bae:	cmp    QWORD PTR [rip+0xabf2],0xffffffffffffffff        # 0x14000c7a8
   140001bb6:	mov    ebx,eax
   140001bb8:	je     0x140004003
   140001bbe:	xor    ecx,ecx
   140001bc0:	call   QWORD PTR [rip+0x468a]        # 0x140006250
   140001bc6:	mov    QWORD PTR [rip+0xab53],rax        # 0x14000c720
   140001bcd:	test   rax,rax
   140001bd0:	je     0x14000402d
   140001bd6:	xor    eax,eax
   140001bd8:	mov    DWORD PTR [rsp+0x40],edi
   140001bdc:	lea    rcx,[rsp+0x40]
   140001be1:	mov    QWORD PTR [rsp+0x44],rax
   140001be6:	mov    QWORD PTR [rsp+0x4c],rax
   140001beb:	mov    QWORD PTR [rsp+0x54],rax
   140001bf0:	mov    QWORD PTR [rsp+0x5c],rax
   140001bf5:	mov    QWORD PTR [rsp+0x64],rax
   140001bfa:	mov    DWORD PTR [rsp+0x6c],eax
   140001bfe:	call   QWORD PTR [rip+0x4614]        # 0x140006218
   140001c04:	mov    edx,DWORD PTR [rsp+0x60]
   140001c08:	mov    rcx,QWORD PTR [rip+0xab11]        # 0x14000c720
   140001c0f:	add    edx,edx
   140001c11:	call   QWORD PTR [rip+0x4641]        # 0x140006258
   140001c17:	mov    rax,QWORD PTR [rip+0xab02]        # 0x14000c720
   140001c1e:	lea    rdx,[rip+0x343b]        # 0x140005060
   140001c25:	mov    rcx,QWORD PTR [rip+0xab7c]        # 0x14000c7a8
   140001c2c:	xorps  xmm0,xmm0
   140001c2f:	xor    r9d,r9d
   140001c32:	movdqa XMMWORD PTR [rip+0xab16],xmm0        # 0x14000c750
   140001c3a:	xor    r8d,r8d
   140001c3d:	mov    QWORD PTR [rip+0xaaf4],rax        # 0x14000c738
   140001c44:	mov    DWORD PTR [rip+0xaae2],0x3        # 0x14000c730
   140001c4e:	mov    QWORD PTR [rip+0xaaeb],rdi        # 0x14000c740
   140001c55:	mov    QWORD PTR [rip+0xaaec],rdi        # 0x14000c748
   140001c5c:	mov    QWORD PTR [rip+0xaafd],rdi        # 0x14000c760
   140001c63:	mov    DWORD PTR [rip+0xaaff],edi        # 0x14000c768
   140001c69:	mov    DWORD PTR [rip+0xaaf9],0x1        # 0x14000c76c
   140001c73:	mov    DWORD PTR [rip+0xaaf3],0x48        # 0x14000c770
   140001c7d:	call   QWORD PTR [rip+0x45dd]        # 0x140006260
   140001c83:	mov    QWORD PTR [rip+0xaa9e],rax        # 0x14000c728
   140001c8a:	test   rax,rax
   140001c8d:	je     0x140004059
   140001c93:	call   0x140002a90
   140001c98:	xor    eax,eax
   140001c9a:	mov    rdi,QWORD PTR [rsp+0x80]
   140001ca2:	add    rsp,0x70
   140001ca6:	pop    rbx
   140001ca7:	ret    
   140001ca8:	int3   
   140001ca9:	int3   
   140001caa:	int3   
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	sub    rsp,0x28
   140001cb4:	lea    rcx,[rip+0xa9e5]        # 0x14000c6a0
   140001cbb:	call   QWORD PTR [rip+0x463f]        # 0x140006300
   140001cc1:	lea    rax,[rip+0xa988]        # 0x14000c650
   140001cc8:	xor    edx,edx
   140001cca:	mov    QWORD PTR [rip+0xa987],rax        # 0x14000c658
   140001cd1:	lea    r8,[rip+0xa358]        # 0x14000c030
   140001cd8:	mov    QWORD PTR [rip+0xa971],rax        # 0x14000c650
   140001cdf:	xor    ecx,ecx
   140001ce1:	lea    rax,[rip+0xa988]        # 0x14000c670
   140001ce8:	mov    QWORD PTR [rip+0xa989],rax        # 0x14000c678
   140001cef:	mov    QWORD PTR [rip+0xa97a],rax        # 0x14000c670
   140001cf6:	lock bts DWORD PTR [rip+0xaa79],0x1        # 0x14000c778
   140001cff:	call   0x140001f80
   140001d04:	test   eax,eax
   140001d06:	js     0x140001d1f
   140001d08:	lea    r8,[rip+0xa309]        # 0x14000c018
   140001d0f:	mov    edx,0x1
   140001d14:	xor    ecx,ecx
   140001d16:	add    rsp,0x28
   140001d1a:	jmp    0x140001f80
   140001d1f:	add    rsp,0x28
   140001d23:	ret    
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rsp+0x20],rbx
   140001d35:	push   rbp
   140001d36:	lea    rbp,[rsp-0x57]
   140001d3b:	sub    rsp,0xb0
   140001d42:	mov    rax,QWORD PTR [rip+0xa2b7]        # 0x14000c000
   140001d49:	xor    rax,rsp
   140001d4c:	mov    QWORD PTR [rbp+0x47],rax
   140001d50:	lea    rax,[rbp-0x11]
   140001d54:	mov    QWORD PTR [rsp+0xd0],r14
   140001d5c:	xor    r14d,r14d
   140001d5f:	mov    QWORD PTR [rsp+0x20],rax
   140001d64:	mov    r9d,0x20019
   140001d6a:	mov    QWORD PTR [rbp-0x11],r14
   140001d6e:	xor    r8d,r8d
   140001d71:	mov    QWORD PTR [rbp-0x9],r14
   140001d75:	lea    rdx,[rip+0x48f4]        # 0x140006670
   140001d7c:	mov    QWORD PTR [rbp-0x1],r14
   140001d80:	mov    rcx,0xffffffff80000002
   140001d87:	call   QWORD PTR [rip+0x4443]        # 0x1400061d0
   140001d8d:	mov    ebx,eax
   140001d8f:	test   eax,eax
   140001d91:	jne    0x140001ec5
   140001d97:	mov    rcx,QWORD PTR [rbp-0x11]
   140001d9b:	lea    r9,[rbp-0x19]
   140001d9f:	mov    QWORD PTR [rsp+0x38],r14
   140001da4:	lea    r8,[rbp+0x7]
   140001da8:	mov    QWORD PTR [rsp+0x30],r14
   140001dad:	xor    edx,edx
   140001daf:	mov    QWORD PTR [rsp+0xc0],rsi
   140001db7:	mov    esi,r14d
   140001dba:	mov    QWORD PTR [rsp+0x28],r14
   140001dbf:	mov    QWORD PTR [rsp+0x20],r14
   140001dc4:	mov    QWORD PTR [rsp+0xc8],rdi
   140001dcc:	mov    DWORD PTR [rbp-0x19],0x20
   140001dd3:	call   QWORD PTR [rip+0x4407]        # 0x1400061e0
   140001dd9:	mov    ebx,eax
   140001ddb:	cmp    eax,0x103
   140001de0:	je     0x140001eb2
   140001de6:	test   ebx,ebx
   140001de8:	jne    0x14000410b
   140001dee:	xor    edx,edx
   140001df0:	lea    r8d,[rbx+0xa]
   140001df4:	lea    rcx,[rbp+0x7]
   140001df8:	call   QWORD PTR [rip+0x426a]        # 0x140006068
   140001dfe:	mov    ebx,eax
   140001e00:	lea    ecx,[rax-0x3e9]
   140001e06:	cmp    ecx,0x2326
   140001e0c:	ja     0x140001e61
   140001e0e:	mov    rcx,QWORD PTR [rbp-0x11]
   140001e12:	lea    rax,[rbp-0x9]
   140001e16:	mov    r9d,0x20019
   140001e1c:	mov    QWORD PTR [rsp+0x20],rax
   140001e21:	xor    r8d,r8d
   140001e24:	lea    rdx,[rbp+0x7]
   140001e28:	call   QWORD PTR [rip+0x43a2]        # 0x1400061d0
   140001e2e:	test   eax,eax
   140001e30:	jne    0x140004086
   140001e36:	mov    rcx,QWORD PTR [rbp-0x9]
   140001e3a:	lea    rdx,[rbp-0x1]
   140001e3e:	call   0x140002210
   140001e43:	test   eax,eax
   140001e45:	jne    0x1400040b1
   140001e4b:	mov    rdi,QWORD PTR [rbp-0x1]
   140001e4f:	mov    edx,ebx
   140001e51:	mov    rcx,rdi
   140001e54:	call   0x140001f10
   140001e59:	test   eax,eax
   140001e5b:	js     0x1400040dc
   140001e61:	mov    rcx,QWORD PTR [rbp-0x9]
   140001e65:	test   rcx,rcx
   140001e68:	je     0x140001e74
   140001e6a:	call   QWORD PTR [rip+0x4378]        # 0x1400061e8
   140001e70:	mov    QWORD PTR [rbp-0x9],r14
   140001e74:	mov    rcx,QWORD PTR [rbp-0x11]
   140001e78:	lea    r9,[rbp-0x19]
   140001e7c:	mov    QWORD PTR [rsp+0x38],r14
   140001e81:	lea    r8,[rbp+0x7]
   140001e85:	mov    QWORD PTR [rsp+0x30],r14
   140001e8a:	inc    esi
   140001e8c:	mov    QWORD PTR [rsp+0x28],r14
   140001e91:	mov    edx,esi
   140001e93:	mov    QWORD PTR [rsp+0x20],r14
   140001e98:	mov    DWORD PTR [rbp-0x19],0x20
   140001e9f:	call   QWORD PTR [rip+0x433b]        # 0x1400061e0
   140001ea5:	mov    ebx,eax
   140001ea7:	cmp    eax,0x103
   140001eac:	jne    0x140001de6
   140001eb2:	mov    ebx,r14d
   140001eb5:	mov    rdi,QWORD PTR [rsp+0xc8]
   140001ebd:	mov    rsi,QWORD PTR [rsp+0xc0]
   140001ec5:	mov    rcx,QWORD PTR [rbp-0x11]
   140001ec9:	test   rcx,rcx
   140001ecc:	je     0x140001ed8
   140001ece:	call   QWORD PTR [rip+0x4314]        # 0x1400061e8
   140001ed4:	mov    QWORD PTR [rbp-0x11],r14
   140001ed8:	mov    r14,QWORD PTR [rsp+0xd0]
   140001ee0:	test   ebx,ebx
   140001ee2:	jne    0x140004135
   140001ee8:	mov    eax,ebx
   140001eea:	mov    rcx,QWORD PTR [rbp+0x47]
   140001eee:	xor    rcx,rsp
   140001ef1:	call   0x1400037f0
   140001ef6:	mov    rbx,QWORD PTR [rsp+0xd8]
   140001efe:	add    rsp,0xb0
   140001f05:	pop    rbp
   140001f06:	ret    
   140001f07:	int3   
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	mov    QWORD PTR [rsp+0x10],rbx
   140001f15:	mov    QWORD PTR [rsp+0x18],rsi
   140001f1a:	push   rdi
   140001f1b:	sub    rsp,0x20
   140001f1f:	mov    rbx,QWORD PTR [rcx+0x50]
   140001f23:	mov    esi,edx
   140001f25:	mov    QWORD PTR [rsp+0x30],0x0
   140001f2e:	mov    rdi,rcx
   140001f31:	test   rbx,rbx
   140001f34:	je     0x140001f70
   140001f36:	mov    rcx,rbx
   140001f39:	call   QWORD PTR [rip+0x44d1]        # 0x140006410
   140001f3f:	lea    rdx,[rsp+0x30]
   140001f44:	mov    ecx,esi
   140001f46:	call   rbx
   140001f48:	test   eax,eax
   140001f4a:	js     0x140001f60
   140001f4c:	mov    r8,QWORD PTR [rsp+0x30]
   140001f51:	test   r8,r8
   140001f54:	je     0x140001f70
   140001f56:	mov    edx,esi
   140001f58:	mov    rcx,rdi
   140001f5b:	call   0x140001f80
   140001f60:	mov    rbx,QWORD PTR [rsp+0x38]
   140001f65:	mov    rsi,QWORD PTR [rsp+0x40]
   140001f6a:	add    rsp,0x20
   140001f6e:	pop    rdi
   140001f6f:	ret    
   140001f70:	mov    eax,0xc00000bb
   140001f75:	jmp    0x140001f60
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    QWORD PTR [rsp+0x8],rbx
   140001f85:	mov    QWORD PTR [rsp+0x10],rbp
   140001f8a:	mov    QWORD PTR [rsp+0x18],rsi
   140001f8f:	push   rdi
   140001f90:	sub    rsp,0x20
   140001f94:	mov    eax,DWORD PTR [rip+0xa7de]        # 0x14000c778
   140001f9a:	xor    esi,esi
   140001f9c:	mov    rbp,r8
   140001f9f:	mov    edi,edx
   140001fa1:	mov    rbx,rcx
   140001fa4:	test   eax,eax
   140001fa6:	je     0x14000415c
   140001fac:	mov    dl,0x1
   140001fae:	lea    rcx,[rip+0xa6eb]        # 0x14000c6a0
   140001fb5:	call   QWORD PTR [rip+0x440d]        # 0x1400063c8
   140001fbb:	mov    ecx,edi
   140001fbd:	call   0x1400016c0
   140001fc2:	test   rax,rax
   140001fc5:	jne    0x140004166
   140001fcb:	mov    rcx,QWORD PTR gs:0x60
   140001fd4:	lea    edx,[rsi+0x8]
   140001fd7:	lea    r8d,[rsi+0x38]
   140001fdb:	mov    rcx,QWORD PTR [rcx+0x30]
   140001fdf:	call   QWORD PTR [rip+0x440b]        # 0x1400063f0
   140001fe5:	test   rax,rax
   140001fe8:	je     0x140004170
   140001fee:	mov    QWORD PTR [rax+0x30],rbp
   140001ff2:	lea    rdx,[rip+0xa657]        # 0x14000c650
   140001ff9:	mov    DWORD PTR [rax+0x10],edi
   140001ffc:	mov    QWORD PTR [rax+0x18],rbx
   140002000:	mov    rcx,QWORD PTR [rip+0xa651]        # 0x14000c658
   140002007:	mov    QWORD PTR [rax],rdx
   14000200a:	mov    QWORD PTR [rax+0x8],rcx
   14000200e:	cmp    QWORD PTR [rcx],rdx
   140002011:	jne    0x14000417a
   140002017:	mov    QWORD PTR [rcx],rax
   14000201a:	mov    QWORD PTR [rip+0xa637],rax        # 0x14000c658
   140002021:	test   rbx,rbx
   140002024:	jne    0x14000204a
   140002026:	lea    rcx,[rip+0xa673]        # 0x14000c6a0
   14000202d:	call   QWORD PTR [rip+0x42a5]        # 0x1400062d8
   140002033:	mov    eax,esi
   140002035:	mov    rbx,QWORD PTR [rsp+0x30]
   14000203a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000203f:	mov    rsi,QWORD PTR [rsp+0x40]
   140002044:	add    rsp,0x20
   140002048:	pop    rdi
   140002049:	ret    
   14000204a:	mov    rcx,QWORD PTR [rbx+0x18]
   14000204e:	add    rbx,0x10
   140002052:	add    rax,0x20
   140002056:	mov    QWORD PTR [rax],rbx
   140002059:	mov    QWORD PTR [rax+0x8],rcx
   14000205d:	cmp    QWORD PTR [rcx],rbx
   140002060:	jne    0x140004181
   140002066:	mov    QWORD PTR [rcx],rax
   140002069:	mov    QWORD PTR [rbx+0x8],rax
   14000206d:	jmp    0x140002026
   14000206f:	int3   
   140002070:	int3   
   140002071:	int3   
   140002072:	int3   
   140002073:	int3   
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	rex push rdi
   140002082:	sub    rsp,0x40
   140002086:	mov    QWORD PTR [rsp+0x68],rbx
   14000208b:	lea    rax,[rsp+0x60]
   140002090:	mov    QWORD PTR [rsp+0x38],rbp
   140002095:	lea    rdx,[rip+0x44f4]        # 0x140006590
   14000209c:	xor    ebp,ebp
   14000209e:	mov    QWORD PTR [rsp+0x30],rsi
   1400020a3:	mov    r9d,0x20019
   1400020a9:	mov    QWORD PTR [rsp+0x60],rbp
   1400020ae:	xor    r8d,r8d
   1400020b1:	mov    DWORD PTR [rsp+0x50],ebp
   1400020b5:	mov    rcx,0xffffffff80000002
   1400020bc:	mov    QWORD PTR [rsp+0x20],rax
   1400020c1:	mov    esi,ebp
   1400020c3:	call   QWORD PTR [rip+0x4107]        # 0x1400061d0
   1400020c9:	mov    edi,eax
   1400020cb:	test   eax,eax
   1400020cd:	jne    0x140004188
   1400020d3:	mov    rcx,QWORD PTR [rsp+0x60]
   1400020d8:	lea    rax,[rsp+0x50]
   1400020dd:	mov    QWORD PTR [rsp+0x28],rax
   1400020e2:	lea    r9,[rsp+0x58]
   1400020e7:	xor    r8d,r8d
   1400020ea:	mov    QWORD PTR [rsp+0x20],rbp
   1400020ef:	lea    rdx,[rip+0x4432]        # 0x140006528
   1400020f6:	call   QWORD PTR [rip+0x40dc]        # 0x1400061d8
   1400020fc:	mov    edi,eax
   1400020fe:	test   eax,eax
   140002100:	jne    0x1400041ae
   140002106:	mov    r8d,DWORD PTR [rsp+0x58]
   14000210b:	cmp    r8d,0x1
   14000210f:	je     0x1400041df
   140002115:	cmp    r8d,0x7
   140002119:	jne    0x140004265
   14000211f:	mov    eax,DWORD PTR [rsp+0x50]
   140002123:	cmp    eax,0x4
   140002126:	jb     0x140004217
   14000212c:	mov    rcx,QWORD PTR gs:0x60
   140002135:	mov    edi,0x8
   14000213a:	mov    r8d,eax
   14000213d:	mov    edx,edi
   14000213f:	mov    rcx,QWORD PTR [rcx+0x30]
   140002143:	call   QWORD PTR [rip+0x42a7]        # 0x1400063f0
   140002149:	mov    rsi,rax
   14000214c:	test   rax,rax
   14000214f:	je     0x1400021c8
   140002151:	mov    rcx,QWORD PTR [rsp+0x60]
   140002156:	lea    rax,[rsp+0x50]
   14000215b:	mov    QWORD PTR [rsp+0x28],rax
   140002160:	lea    r9,[rsp+0x58]
   140002165:	xor    r8d,r8d
   140002168:	mov    QWORD PTR [rsp+0x20],rsi
   14000216d:	lea    rdx,[rip+0x43b4]        # 0x140006528
   140002174:	call   QWORD PTR [rip+0x405e]        # 0x1400061d8
   14000217a:	mov    edi,eax
   14000217c:	test   eax,eax
   14000217e:	jne    0x14000423a
   140002184:	mov    eax,DWORD PTR [rsp+0x50]
   140002188:	mov    rbx,rsi
   14000218b:	shr    rax,1
   14000218e:	mov    WORD PTR [rsi+rax*2-0x2],bp
   140002193:	mov    eax,DWORD PTR [rsp+0x50]
   140002197:	shr    rax,1
   14000219a:	mov    WORD PTR [rsi+rax*2-0x4],bp
   14000219f:	mov    rsi,rbp
   1400021a2:	cmp    WORD PTR [rbx],si
   1400021a5:	je     0x1400021c8
   1400021a7:	xor    edx,edx
   1400021a9:	mov    rcx,rbx
   1400021ac:	call   0x140002340
   1400021b1:	cmp    WORD PTR [rbx],si
   1400021b4:	je     0x1400021bf
   1400021b6:	add    rbx,0x2
   1400021ba:	cmp    WORD PTR [rbx],si
   1400021bd:	jne    0x1400021b6
   1400021bf:	add    rbx,0x2
   1400021c3:	cmp    WORD PTR [rbx],si
   1400021c6:	jne    0x1400021a7
   1400021c8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400021cd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400021d2:	mov    rbx,QWORD PTR [rsp+0x68]
   1400021d7:	test   rcx,rcx
   1400021da:	je     0x1400021e2
   1400021dc:	call   QWORD PTR [rip+0x4006]        # 0x1400061e8
   1400021e2:	test   rsi,rsi
   1400021e5:	jne    0x140004288
   1400021eb:	mov    rsi,QWORD PTR [rsp+0x30]
   1400021f0:	test   edi,edi
   1400021f2:	jne    0x1400042a6
   1400021f8:	mov    eax,edi
   1400021fa:	add    rsp,0x40
   1400021fe:	pop    rdi
   1400021ff:	ret    
   140002200:	int3   
   140002201:	int3   
   140002202:	int3   
   140002203:	int3   
   140002204:	int3   
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	mov    QWORD PTR [rsp+0x20],rsi
   140002215:	push   rdi
   140002216:	sub    rsp,0x30
   14000221a:	mov    rdi,rcx
   14000221d:	lea    rax,[rsp+0x48]
   140002222:	xor    ecx,ecx
   140002224:	mov    QWORD PTR [rsp+0x28],rax
   140002229:	mov    QWORD PTR [rdx],rcx
   14000222c:	lea    r9,[rsp+0x50]
   140002231:	mov    DWORD PTR [rsp+0x48],ecx
   140002235:	mov    rsi,rdx
   140002238:	mov    QWORD PTR [rsp+0x20],rcx
   14000223d:	lea    rdx,[rip+0x42fc]        # 0x140006540
   140002244:	mov    rcx,rdi
   140002247:	xor    r8d,r8d
   14000224a:	call   QWORD PTR [rip+0x3f88]        # 0x1400061d8
   140002250:	test   eax,eax
   140002252:	jne    0x14000231a
   140002258:	mov    ecx,DWORD PTR [rsp+0x48]
   14000225c:	cmp    ecx,0x2
   14000225f:	jbe    0x1400042d8
   140002265:	mov    eax,ecx
   140002267:	and    eax,0xfffffffe
   14000226a:	cmp    eax,0x208
   14000226f:	jae    0x1400042d8
   140002275:	mov    r8d,ecx
   140002278:	mov    QWORD PTR [rsp+0x40],rbx
   14000227d:	mov    rcx,QWORD PTR gs:0x60
   140002286:	mov    edx,0x8
   14000228b:	mov    rcx,QWORD PTR [rcx+0x30]
   14000228f:	call   QWORD PTR [rip+0x415b]        # 0x1400063f0
   140002295:	mov    rbx,rax
   140002298:	test   rax,rax
   14000229b:	je     0x1400042ce
   1400022a1:	lea    rax,[rsp+0x48]
   1400022a6:	xor    r8d,r8d
   1400022a9:	mov    QWORD PTR [rsp+0x28],rax
   1400022ae:	lea    r9,[rsp+0x50]
   1400022b3:	lea    rdx,[rip+0x4286]        # 0x140006540
   1400022ba:	mov    QWORD PTR [rsp+0x20],rbx
   1400022bf:	mov    rcx,rdi
   1400022c2:	call   QWORD PTR [rip+0x3f10]        # 0x1400061d8
   1400022c8:	mov    edi,eax
   1400022ca:	test   eax,eax
   1400022cc:	jne    0x1400022fb
   1400022ce:	cmp    DWORD PTR [rsp+0x50],0x1
   1400022d3:	jne    0x140002325
   1400022d5:	mov    eax,DWORD PTR [rsp+0x48]
   1400022d9:	shr    eax,1
   1400022db:	lea    ecx,[rax-0x2]
   1400022de:	cmp    ecx,0x101
   1400022e4:	ja     0x14000232c
   1400022e6:	dec    eax
   1400022e8:	cmp    WORD PTR [rbx+rax*2],di
   1400022ec:	jne    0x14000232c
   1400022ee:	mov    rdx,rsi
   1400022f1:	mov    rcx,rbx
   1400022f4:	call   0x140002340
   1400022f9:	mov    edi,eax
   1400022fb:	mov    rcx,QWORD PTR gs:0x60
   140002304:	mov    r8,rbx
   140002307:	xor    edx,edx
   140002309:	mov    rcx,QWORD PTR [rcx+0x30]
   14000230d:	call   QWORD PTR [rip+0x3f85]        # 0x140006298
   140002313:	mov    eax,edi
   140002315:	mov    rbx,QWORD PTR [rsp+0x40]
   14000231a:	mov    rsi,QWORD PTR [rsp+0x58]
   14000231f:	add    rsp,0x30
   140002323:	pop    rdi
   140002324:	ret    
   140002325:	mov    edi,0x70c
   14000232a:	jmp    0x1400022fb
   14000232c:	mov    edi,0xd
   140002331:	jmp    0x1400022fb
   140002333:	int3   
   140002334:	int3   
   140002335:	int3   
   140002336:	int3   
   140002337:	int3   
   140002338:	int3   
   140002339:	int3   
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	mov    QWORD PTR [rsp+0x8],rbx
   140002345:	mov    QWORD PTR [rsp+0x10],rbp
   14000234a:	push   rsi
   14000234b:	push   rdi
   14000234c:	push   r14
   14000234e:	sub    rsp,0x20
   140002352:	mov    r14,rdx
   140002355:	xor    edi,edi
   140002357:	mov    rbx,rcx
   14000235a:	lea    edx,[rdi+0x5c]
   14000235d:	call   QWORD PTR [rip+0x3d15]        # 0x140006078
   140002363:	test   rax,rax
   140002366:	jne    0x1400042e2
   14000236c:	mov    rcx,rbx
   14000236f:	call   0x140002480
   140002374:	mov    QWORD PTR [rsp+0x50],rax
   140002379:	mov    rdi,rax
   14000237c:	test   rax,rax
   14000237f:	jne    0x140002458
   140002385:	lea    rdx,[rsp+0x50]
   14000238a:	mov    rcx,rbx
   14000238d:	call   0x1400024f0
   140002392:	mov    rdi,QWORD PTR [rsp+0x50]
   140002397:	mov    esi,eax
   140002399:	test   eax,eax
   14000239b:	jne    0x140004386
   1400023a1:	mov    rax,QWORD PTR [rip+0xa2d0]        # 0x14000c678
   1400023a8:	lea    rcx,[rip+0xa2c1]        # 0x14000c670
   1400023af:	mov    QWORD PTR [rdi],rcx
   1400023b2:	mov    QWORD PTR [rdi+0x8],rax
   1400023b6:	cmp    QWORD PTR [rax],rcx
   1400023b9:	jne    0x1400042f6
   1400023bf:	mov    QWORD PTR [rax],rdi
   1400023c2:	xor    r8d,r8d
   1400023c5:	xor    edx,edx
   1400023c7:	mov    QWORD PTR [rip+0xa2aa],rdi        # 0x14000c678
   1400023ce:	mov    rcx,rbx
   1400023d1:	call   QWORD PTR [rip+0x3d69]        # 0x140006140
   1400023d7:	mov    rsi,rax
   1400023da:	test   rax,rax
   1400023dd:	je     0x1400042fd
   1400023e3:	lea    rdx,[rip+0x4186]        # 0x140006570
   1400023ea:	mov    QWORD PTR [rdi+0x30],rax
   1400023ee:	mov    rcx,rax
   1400023f1:	call   QWORD PTR [rip+0x3d41]        # 0x140006138
   1400023f7:	mov    rbp,rax
   1400023fa:	test   rax,rax
   1400023fd:	je     0x140004327
   140002403:	lea    rdx,[rip+0x414e]        # 0x140006558
   14000240a:	mov    QWORD PTR [rdi+0x48],rax
   14000240e:	mov    rcx,rsi
   140002411:	call   QWORD PTR [rip+0x3d21]        # 0x140006138
   140002417:	mov    rcx,rbp
   14000241a:	mov    QWORD PTR [rdi+0x50],rax
   14000241e:	call   QWORD PTR [rip+0x3fec]        # 0x140006410
   140002424:	xor    ecx,ecx
   140002426:	call   rbp
   140002428:	mov    ebp,eax
   14000242a:	test   eax,eax
   14000242c:	js     0x140004351
   140002432:	mov    DWORD PTR [rdi+0x38],0x1
   140002439:	xor    esi,esi
   14000243b:	test   r14,r14
   14000243e:	je     0x140002443
   140002440:	mov    QWORD PTR [r14],rdi
   140002443:	mov    rbx,QWORD PTR [rsp+0x40]
   140002448:	mov    eax,esi
   14000244a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000244f:	add    rsp,0x20
   140002453:	pop    r14
   140002455:	pop    rdi
   140002456:	pop    rsi
   140002457:	ret    
   140002458:	mov    esi,DWORD PTR [rax+0x3c]
   14000245b:	test   esi,esi
   14000245d:	jne    0x140004386
   140002463:	cmp    DWORD PTR [rax+0x38],esi
   140002466:	jne    0x14000243b
   140002468:	jmp    0x1400042ec
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	int3   
   140002471:	int3   
   140002472:	int3   
   140002473:	int3   
   140002474:	int3   
   140002475:	int3   
   140002476:	int3   
   140002477:	int3   
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	mov    QWORD PTR [rsp+0x8],rbx
   140002485:	mov    QWORD PTR [rsp+0x10],rsi
   14000248a:	push   rdi
   14000248b:	sub    rsp,0x20
   14000248f:	mov    rbx,QWORD PTR [rip+0xa1da]        # 0x14000c670
   140002496:	lea    rsi,[rip+0xa1d3]        # 0x14000c670
   14000249d:	mov    rdi,rcx
   1400024a0:	cmp    rbx,rsi
   1400024a3:	je     0x1400024be
   1400024a5:	mov    rdx,QWORD PTR [rbx+0x28]
   1400024a9:	mov    rcx,rdi
   1400024ac:	call   QWORD PTR [rip+0x3bbe]        # 0x140006070
   1400024b2:	test   eax,eax
   1400024b4:	je     0x1400024d0
   1400024b6:	mov    rbx,QWORD PTR [rbx]
   1400024b9:	cmp    rbx,rsi
   1400024bc:	jne    0x1400024a5
   1400024be:	xor    eax,eax
   1400024c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024c5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400024ca:	add    rsp,0x20
   1400024ce:	pop    rdi
   1400024cf:	ret    
   1400024d0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400024d5:	mov    rax,rbx
   1400024d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024dd:	add    rsp,0x20
   1400024e1:	pop    rdi
   1400024e2:	ret    
   1400024e3:	int3   
   1400024e4:	int3   
   1400024e5:	int3   
   1400024e6:	int3   
   1400024e7:	int3   
   1400024e8:	int3   
   1400024e9:	int3   
   1400024ea:	int3   
   1400024eb:	int3   
   1400024ec:	int3   
   1400024ed:	int3   
   1400024ee:	int3   
   1400024ef:	int3   
   1400024f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400024fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400024ff:	push   rdi
   140002500:	sub    rsp,0x20
   140002504:	mov    rbx,rcx
   140002507:	xor    ebp,ebp
   140002509:	mov    rcx,QWORD PTR gs:0x60
   140002512:	mov    rsi,rdx
   140002515:	lea    edx,[rbp+0x8]
   140002518:	mov    rcx,QWORD PTR [rcx+0x30]
   14000251c:	lea    r8d,[rbp+0x58]
   140002520:	call   QWORD PTR [rip+0x3eca]        # 0x1400063f0
   140002526:	mov    rdi,rax
   140002529:	test   rax,rax
   14000252c:	je     0x14000439a
   140002532:	mov    QWORD PTR [rax+0x8],rax
   140002536:	mov    QWORD PTR [rax],rax
   140002539:	mov    QWORD PTR [rax+0x3c],rbp
   14000253d:	mov    DWORD PTR [rax+0x38],ebp
   140002540:	or     rax,0xffffffffffffffff
   140002544:	inc    rax
   140002547:	cmp    WORD PTR [rbx+rax*2],bp
   14000254b:	jne    0x140002544
   14000254d:	add    ax,ax
   140002550:	mov    edx,0x8
   140002555:	mov    WORD PTR [rdi+0x20],ax
   140002559:	add    ax,0x2
   14000255d:	movzx  ecx,ax
   140002560:	mov    WORD PTR [rdi+0x22],cx
   140002564:	mov    r8d,ecx
   140002567:	mov    rcx,QWORD PTR gs:0x60
   140002570:	mov    rcx,QWORD PTR [rcx+0x30]
   140002574:	call   QWORD PTR [rip+0x3e76]        # 0x1400063f0
   14000257a:	mov    QWORD PTR [rdi+0x28],rax
   14000257e:	test   rax,rax
   140002581:	je     0x1400043a7
   140002587:	movzx  r8d,WORD PTR [rdi+0x22]
   14000258c:	mov    rdx,rbx
   14000258f:	mov    rcx,rax
   140002592:	call   0x140003adc
   140002597:	lea    rcx,[rdi+0x10]
   14000259b:	mov    QWORD PTR [rsi],rdi
   14000259e:	mov    QWORD PTR [rcx+0x8],rcx
   1400025a2:	mov    eax,ebp
   1400025a4:	mov    QWORD PTR [rcx],rcx
   1400025a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025ac:	mov    rbp,QWORD PTR [rsp+0x38]
   1400025b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400025b6:	add    rsp,0x20
   1400025ba:	pop    rdi
   1400025bb:	ret    
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	int3   
   1400025c1:	int3   
   1400025c2:	int3   
   1400025c3:	int3   
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	rex push rbp
   1400025d2:	sub    rsp,0x20
   1400025d6:	call   0x1400027a0
   1400025db:	mov    rbp,rax
   1400025de:	test   rax,rax
   1400025e1:	je     0x1400043cc
   1400025e7:	mov    rcx,QWORD PTR [rip+0xa042]        # 0x14000c630
   1400025ee:	mov    QWORD PTR [rsp+0x30],rbx
   1400025f3:	mov    QWORD PTR [rsp+0x40],rdi
   1400025f8:	call   QWORD PTR [rip+0x3cea]        # 0x1400062e8
   1400025fe:	mov    rcx,QWORD PTR [rip+0xa03b]        # 0x14000c640
   140002605:	mov    ebx,eax
   140002607:	call   QWORD PTR [rip+0x3cdb]        # 0x1400062e8
   14000260d:	mov    rcx,QWORD PTR [rip+0xa00c]        # 0x14000c620
   140002614:	add    ebx,eax
   140002616:	call   QWORD PTR [rip+0x3ccc]        # 0x1400062e8
   14000261c:	mov    rcx,QWORD PTR [rip+0xa005]        # 0x14000c628
   140002623:	add    ebx,eax
   140002625:	call   QWORD PTR [rip+0x3cbd]        # 0x1400062e8
   14000262b:	mov    rcx,QWORD PTR gs:0x60
   140002634:	mov    edx,0x8
   140002639:	add    eax,0x50
   14000263c:	add    ebx,eax
   14000263e:	mov    r8d,ebx
   140002641:	mov    rcx,QWORD PTR [rcx+0x30]
   140002645:	call   QWORD PTR [rip+0x3da5]        # 0x1400063f0
   14000264b:	mov    rdi,rax
   14000264e:	test   rax,rax
   140002651:	je     0x140004400
   140002657:	lea    edx,[rbx-0x28]
   14000265a:	mov    QWORD PTR [rsp+0x38],rsi
   14000265f:	mov    r8d,0x2
   140002665:	lea    rcx,[rax+0x28]
   140002669:	call   QWORD PTR [rip+0x3cc1]        # 0x140006330
   14000266f:	mov    ebx,eax
   140002671:	test   eax,eax
   140002673:	js     0x140002750
   140002679:	mov    r9,QWORD PTR [rip+0x9fc0]        # 0x14000c640
   140002680:	lea    rcx,[rdi+0x28]
   140002684:	mov    edx,0x2
   140002689:	mov    r8d,0xa0000000
   14000268f:	call   QWORD PTR [rip+0x3d6b]        # 0x140006400
   140002695:	mov    ebx,eax
   140002697:	test   eax,eax
   140002699:	js     0x140002750
   14000269f:	mov    r9,QWORD PTR [rip+0x9f82]        # 0x14000c628
   1400026a6:	lea    rcx,[rdi+0x28]
   1400026aa:	mov    edx,0x2
   1400026af:	mov    r8d,0x10000000
   1400026b5:	call   QWORD PTR [rip+0x3d45]        # 0x140006400
   1400026bb:	mov    ebx,eax
   1400026bd:	test   eax,eax
   1400026bf:	js     0x140002750
   1400026c5:	mov    r9,QWORD PTR [rip+0x9f54]        # 0x14000c620
   1400026cc:	lea    rcx,[rdi+0x28]
   1400026d0:	mov    edx,0x2
   1400026d5:	mov    r8d,0xa0020000
   1400026db:	call   QWORD PTR [rip+0x3d1f]        # 0x140006400
   1400026e1:	mov    ebx,eax
   1400026e3:	test   eax,eax
   1400026e5:	js     0x140002750
   1400026e7:	mov    r9,QWORD PTR [rip+0x9f42]        # 0x14000c630
   1400026ee:	lea    rcx,[rdi+0x28]
   1400026f2:	mov    edx,0x2
   1400026f7:	mov    r8d,0xa0000000
   1400026fd:	call   QWORD PTR [rip+0x3cfd]        # 0x140006400
   140002703:	mov    ebx,eax
   140002705:	test   eax,eax
   140002707:	js     0x140002750
   140002709:	mov    edx,0x1
   14000270e:	mov    rcx,rdi
   140002711:	call   QWORD PTR [rip+0x3bd9]        # 0x1400062f0
   140002717:	mov    ebx,eax
   140002719:	test   eax,eax
   14000271b:	js     0x140002750
   14000271d:	xor    r9d,r9d
   140002720:	lea    r8,[rdi+0x28]
   140002724:	mov    dl,0x1
   140002726:	mov    rcx,rdi
   140002729:	call   QWORD PTR [rip+0x3c11]        # 0x140006340
   14000272f:	mov    ebx,eax
   140002731:	test   eax,eax
   140002733:	js     0x140002750
   140002735:	mov    r8,rdi
   140002738:	mov    edx,0x4
   14000273d:	mov    rcx,rbp
   140002740:	call   QWORD PTR [rip+0x3c9a]        # 0x1400063e0
   140002746:	mov    ebx,eax
   140002748:	test   eax,eax
   14000274a:	js     0x14000440a
   140002750:	mov    rsi,QWORD PTR [rsp+0x38]
   140002755:	mov    rcx,rbp
   140002758:	call   QWORD PTR [rip+0x39a2]        # 0x140006100
   14000275e:	test   rdi,rdi
   140002761:	je     0x14000277b
   140002763:	mov    rcx,QWORD PTR gs:0x60
   14000276c:	mov    r8,rdi
   14000276f:	xor    edx,edx
   140002771:	mov    rcx,QWORD PTR [rcx+0x30]
   140002775:	call   QWORD PTR [rip+0x3b1d]        # 0x140006298
   14000277b:	mov    rdi,QWORD PTR [rsp+0x40]
   140002780:	mov    eax,ebx
   140002782:	mov    rbx,QWORD PTR [rsp+0x30]
   140002787:	add    rsp,0x20
   14000278b:	pop    rbp
   14000278c:	ret    
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	int3   
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	int3   
   140002795:	int3   
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	mov    QWORD PTR [rsp+0x18],r8
   1400027a5:	sub    rsp,0x68
   1400027a9:	lea    rdx,[rip+0x3e60]        # 0x140006610
   1400027b0:	lea    rcx,[rsp+0x20]
   1400027b5:	call   QWORD PTR [rip+0x3b8d]        # 0x140006348
   1400027bb:	lea    rax,[rsp+0x20]
   1400027c0:	mov    DWORD PTR [rsp+0x30],0x30
   1400027c8:	xorps  xmm0,xmm0
   1400027cb:	mov    QWORD PTR [rsp+0x40],rax
   1400027d0:	lea    r8,[rsp+0x30]
   1400027d5:	mov    QWORD PTR [rsp+0x38],0x0
   1400027de:	mov    edx,0x1f0003
   1400027e3:	mov    DWORD PTR [rsp+0x48],0x40
   1400027eb:	lea    rcx,[rsp+0x80]
   1400027f3:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   1400027f9:	call   QWORD PTR [rip+0x3aa1]        # 0x1400062a0
   1400027ff:	test   eax,eax
   140002801:	js     0x140004432
   140002807:	mov    rax,QWORD PTR [rsp+0x80]
   14000280f:	add    rsp,0x68
   140002813:	ret    
   140002814:	int3   
   140002815:	int3   
   140002816:	int3   
   140002817:	int3   
   140002818:	int3   
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	mov    QWORD PTR [rsp+0x10],rbx
   140002825:	mov    QWORD PTR [rsp+0x18],rbp
   14000282a:	mov    QWORD PTR [rsp+0x20],rsi
   14000282f:	push   rdi
   140002830:	sub    rsp,0x40
   140002834:	mov    rax,QWORD PTR [rip+0x97c5]        # 0x14000c000
   14000283b:	xor    rax,rsp
   14000283e:	mov    QWORD PTR [rsp+0x38],rax
   140002843:	xor    edi,edi
   140002845:	mov    DWORD PTR [rsp+0x20],0x0
   14000284d:	mov    WORD PTR [rsp+0x24],0x500
   140002854:	xor    ebp,ebp
   140002856:	mov    DWORD PTR [rsp+0x28],0x0
   14000285e:	mov    WORD PTR [rsp+0x2c],0x100
   140002865:	lea    ecx,[rdi+0x1]
   140002868:	mov    DWORD PTR [rsp+0x30],0x0
   140002870:	mov    WORD PTR [rsp+0x34],0xf00
   140002877:	call   QWORD PTR [rip+0x3a13]        # 0x140006290
   14000287d:	mov    rcx,QWORD PTR gs:0x60
   140002886:	lea    edx,[rdi+0x8]
   140002889:	mov    r8d,eax
   14000288c:	mov    rcx,QWORD PTR [rcx+0x30]
   140002890:	call   QWORD PTR [rip+0x3b5a]        # 0x1400063f0
   140002896:	mov    rsi,rax
   140002899:	test   rax,rax
   14000289c:	je     0x14000444a
   1400028a2:	mov    r8b,0x1
   1400028a5:	mov    QWORD PTR [rsp+0x50],r14
   1400028aa:	lea    rdx,[rsp+0x20]
   1400028af:	mov    rcx,rax
   1400028b2:	call   QWORD PTR [rip+0x3b30]        # 0x1400063e8
   1400028b8:	xor    edx,edx
   1400028ba:	mov    rcx,rsi
   1400028bd:	call   QWORD PTR [rip+0x3a05]        # 0x1400062c8
   1400028c3:	lea    ecx,[rdi+0x1]
   1400028c6:	mov    DWORD PTR [rax],0x12
   1400028cc:	call   QWORD PTR [rip+0x39be]        # 0x140006290
   1400028d2:	mov    rcx,QWORD PTR gs:0x60
   1400028db:	lea    edx,[rdi+0x8]
   1400028de:	mov    r8d,eax
   1400028e1:	mov    rcx,QWORD PTR [rcx+0x30]
   1400028e5:	call   QWORD PTR [rip+0x3b05]        # 0x1400063f0
   1400028eb:	mov    r14,rax
   1400028ee:	test   rax,rax
   1400028f1:	je     0x140004454
   1400028f7:	mov    r8b,0x1
   1400028fa:	lea    rdx,[rsp+0x28]
   1400028ff:	mov    rcx,rax
   140002902:	call   QWORD PTR [rip+0x3ae0]        # 0x1400063e8
   140002908:	xor    edx,edx
   14000290a:	mov    rcx,r14
   14000290d:	call   QWORD PTR [rip+0x39b5]        # 0x1400062c8
   140002913:	lea    ecx,[rdi+0x1]
   140002916:	mov    DWORD PTR [rax],edi
   140002918:	call   QWORD PTR [rip+0x3972]        # 0x140006290
   14000291e:	mov    rcx,QWORD PTR gs:0x60
   140002927:	lea    edx,[rdi+0x8]
   14000292a:	mov    r8d,eax
   14000292d:	mov    rcx,QWORD PTR [rcx+0x30]
   140002931:	call   QWORD PTR [rip+0x3ab9]        # 0x1400063f0
   140002937:	mov    rdi,rax
   14000293a:	test   rax,rax
   14000293d:	je     0x140004454
   140002943:	mov    r8b,0x1
   140002946:	lea    rdx,[rsp+0x20]
   14000294b:	mov    rcx,rax
   14000294e:	call   QWORD PTR [rip+0x3a94]        # 0x1400063e8
   140002954:	xor    edx,edx
   140002956:	mov    rcx,rdi
   140002959:	call   QWORD PTR [rip+0x3969]        # 0x1400062c8
   14000295f:	lea    ecx,[rbp+0x2]
   140002962:	mov    DWORD PTR [rax],0x7
   140002968:	call   QWORD PTR [rip+0x3922]        # 0x140006290
   14000296e:	mov    rcx,QWORD PTR gs:0x60
   140002977:	lea    edx,[rbp+0x8]
   14000297a:	mov    r8d,eax
   14000297d:	mov    rcx,QWORD PTR [rcx+0x30]
   140002981:	call   QWORD PTR [rip+0x3a69]        # 0x1400063f0
   140002987:	mov    rbp,rax
   14000298a:	test   rax,rax
   14000298d:	je     0x140004454
   140002993:	mov    r8b,0x2
   140002996:	lea    rdx,[rsp+0x20]
   14000299b:	mov    rcx,rax
   14000299e:	call   QWORD PTR [rip+0x3a44]        # 0x1400063e8
   1400029a4:	xor    edx,edx
   1400029a6:	mov    rcx,rbp
   1400029a9:	call   QWORD PTR [rip+0x3919]        # 0x1400062c8
   1400029af:	mov    edx,0x1
   1400029b4:	mov    rcx,rbp
   1400029b7:	mov    DWORD PTR [rax],0x20
   1400029bd:	call   QWORD PTR [rip+0x3905]        # 0x1400062c8
   1400029c3:	mov    ecx,0x2
   1400029c8:	mov    DWORD PTR [rax],0x220
   1400029ce:	call   QWORD PTR [rip+0x38bc]        # 0x140006290
   1400029d4:	mov    rcx,QWORD PTR gs:0x60
   1400029dd:	mov    edx,0x8
   1400029e2:	mov    r8d,eax
   1400029e5:	mov    rcx,QWORD PTR [rcx+0x30]
   1400029e9:	call   QWORD PTR [rip+0x3a01]        # 0x1400063f0
   1400029ef:	mov    rbx,rax
   1400029f2:	test   rax,rax
   1400029f5:	je     0x140004454
   1400029fb:	mov    r8b,0x2
   1400029fe:	lea    rdx,[rsp+0x30]
   140002a03:	mov    rcx,rax
   140002a06:	call   QWORD PTR [rip+0x39dc]        # 0x1400063e8
   140002a0c:	xor    edx,edx
   140002a0e:	mov    rcx,rbx
   140002a11:	call   QWORD PTR [rip+0x38b1]        # 0x1400062c8
   140002a17:	mov    edx,0x1
   140002a1c:	mov    rcx,rbx
   140002a1f:	mov    DWORD PTR [rax],0x2
   140002a25:	call   QWORD PTR [rip+0x389d]        # 0x1400062c8
   140002a2b:	mov    QWORD PTR [rip+0x9bf6],rsi        # 0x14000c628
   140002a32:	mov    QWORD PTR [rip+0x9c07],r14        # 0x14000c640
   140002a39:	mov    QWORD PTR [rip+0x9be0],rbp        # 0x14000c620
   140002a40:	mov    DWORD PTR [rax],0x1
   140002a46:	xor    eax,eax
   140002a48:	mov    QWORD PTR [rip+0x9be9],rdi        # 0x14000c638
   140002a4f:	mov    QWORD PTR [rip+0x9bda],rbx        # 0x14000c630
   140002a56:	mov    r14,QWORD PTR [rsp+0x50]
   140002a5b:	mov    rcx,QWORD PTR [rsp+0x38]
   140002a60:	xor    rcx,rsp
   140002a63:	call   0x1400037f0
   140002a68:	mov    rbx,QWORD PTR [rsp+0x58]
   140002a6d:	mov    rbp,QWORD PTR [rsp+0x60]
   140002a72:	mov    rsi,QWORD PTR [rsp+0x68]
   140002a77:	add    rsp,0x40
   140002a7b:	pop    rdi
   140002a7c:	ret    
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	int3   
   140002a81:	int3   
   140002a82:	int3   
   140002a83:	int3   
   140002a84:	int3   
   140002a85:	int3   
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	sub    rsp,0x48
   140002a94:	mov    rcx,QWORD PTR [rip+0x9c8d]        # 0x14000c728
   140002a9b:	call   QWORD PTR [rip+0x37a7]        # 0x140006248
   140002aa1:	mov    rcx,QWORD PTR [rip+0x9d00]        # 0x14000c7a8
   140002aa8:	lea    rax,[rip+0x9cd9]        # 0x14000c788
   140002aaf:	mov    QWORD PTR [rsp+0x38],rax
   140002ab4:	xor    r9d,r9d
   140002ab7:	mov    QWORD PTR [rsp+0x30],0x0
   140002ac0:	lea    rax,[rip+0x9cb9]        # 0x14000c780
   140002ac7:	mov    DWORD PTR [rsp+0x28],0x8
   140002acf:	xor    r8d,r8d
   140002ad2:	mov    edx,0x39006a
   140002ad7:	mov    QWORD PTR [rsp+0x20],rax
   140002adc:	call   QWORD PTR [rip+0x3646]        # 0x140006128
   140002ae2:	test   eax,eax
   140002ae4:	jne    0x140002af7
   140002ae6:	call   QWORD PTR [rip+0x35f4]        # 0x1400060e0
   140002aec:	cmp    eax,0x3e5
   140002af1:	jne    0x1400044d0
   140002af7:	add    rsp,0x48
   140002afb:	ret    
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	int3   
   140002b01:	int3   
   140002b02:	int3   
   140002b03:	int3   
   140002b04:	int3   
   140002b05:	int3   
   140002b06:	int3   
   140002b07:	int3   
   140002b08:	int3   
   140002b09:	int3   
   140002b0a:	int3   
   140002b0b:	int3   
   140002b0c:	int3   
   140002b0d:	int3   
   140002b0e:	int3   
   140002b0f:	int3   
   140002b10:	mov    QWORD PTR [rsp+0x18],rbx
   140002b15:	push   rdi
   140002b16:	sub    rsp,0x40
   140002b1a:	xor    edi,edi
   140002b1c:	lea    rcx,[rsp+0x58]
   140002b21:	mov    QWORD PTR [rsp+0x58],rdi
   140002b26:	mov    QWORD PTR [rsp+0x50],rdi
   140002b2b:	call   0x140002f60
   140002b30:	mov    ebx,eax
   140002b32:	test   eax,eax
   140002b34:	js     0x140004500
   140002b3a:	mov    r9,QWORD PTR [rsp+0x58]
   140002b3f:	lea    r8,[rip+0x3c72]        # 0x1400067b8
   140002b46:	lea    edx,[rdi+0xa]
   140002b49:	lea    rcx,[rip+0x3c50]        # 0x1400067a0
   140002b50:	call   QWORD PTR [rip+0x34b2]        # 0x140006008
   140002b56:	mov    ebx,eax
   140002b58:	cmp    eax,0x6cc
   140002b5d:	jne    0x140002b61
   140002b5f:	mov    ebx,edi
   140002b61:	mov    rcx,QWORD PTR gs:0x60
   140002b6a:	xor    edx,edx
   140002b6c:	mov    r8,QWORD PTR [rsp+0x58]
   140002b71:	mov    rcx,QWORD PTR [rcx+0x30]
   140002b75:	call   QWORD PTR [rip+0x371d]        # 0x140006298
   140002b7b:	test   ebx,ebx
   140002b7d:	jne    0x140004523
   140002b83:	lea    rcx,[rsp+0x50]
   140002b88:	call   0x140002c30
   140002b8d:	mov    ebx,eax
   140002b8f:	test   eax,eax
   140002b91:	js     0x140004556
   140002b97:	mov    rbx,QWORD PTR [rsp+0x50]
   140002b9c:	lea    r8,[rip+0x3bdd]        # 0x140006780
   140002ba3:	mov    r9,rbx
   140002ba6:	lea    rcx,[rip+0x3bc3]        # 0x140006770
   140002bad:	mov    edx,0xa
   140002bb2:	call   QWORD PTR [rip+0x3450]        # 0x140006008
   140002bb8:	mov    edi,eax
   140002bba:	test   eax,eax
   140002bbc:	jne    0x140004579
   140002bc2:	mov    QWORD PTR [rsp+0x38],rbx
   140002bc7:	lea    rax,[rip+0xffffffffffffe8d2]        # 0x1400014a0
   140002bce:	mov    QWORD PTR [rsp+0x30],rax
   140002bd3:	lea    r9d,[rdi+0x31]
   140002bd7:	mov    DWORD PTR [rsp+0x28],0x100000
   140002bdf:	lea    rcx,[rip+0x3b2a]        # 0x140006710
   140002be6:	xor    r8d,r8d
   140002be9:	mov    DWORD PTR [rsp+0x20],0x4d2
   140002bf1:	xor    edx,edx
   140002bf3:	call   QWORD PTR [rip+0x3407]        # 0x140006000
   140002bf9:	mov    rcx,QWORD PTR gs:0x60
   140002c02:	xor    edx,edx
   140002c04:	mov    r8,QWORD PTR [rsp+0x50]
   140002c09:	mov    ebx,eax
   140002c0b:	mov    rcx,QWORD PTR [rcx+0x30]
   140002c0f:	call   QWORD PTR [rip+0x3683]        # 0x140006298
   140002c15:	test   ebx,ebx
   140002c17:	jne    0x1400045be
   140002c1d:	xor    eax,eax
   140002c1f:	mov    rbx,QWORD PTR [rsp+0x60]
   140002c24:	add    rsp,0x40
   140002c28:	pop    rdi
   140002c29:	ret    
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	mov    QWORD PTR [rsp+0x10],rbx
   140002c35:	mov    QWORD PTR [rsp+0x18],rsi
   140002c3a:	mov    QWORD PTR [rsp+0x20],rdi
   140002c3f:	push   rbp
   140002c40:	lea    rbp,[rsp-0x30]
   140002c45:	sub    rsp,0x130
   140002c4c:	mov    rax,QWORD PTR [rip+0x93ad]        # 0x14000c000
   140002c53:	xor    rax,rsp
   140002c56:	mov    QWORD PTR [rbp+0x20],rax
   140002c5a:	xor    esi,esi
   140002c5c:	mov    WORD PTR [rbp-0x5c],0x100
   140002c62:	lea    rax,[rsp+0x70]
   140002c67:	mov    QWORD PTR [rsp+0x70],rsi
   140002c6c:	mov    QWORD PTR [rbp-0x38],rax
   140002c70:	mov    rdi,rcx
   140002c73:	lea    rax,[rsp+0x60]
   140002c78:	mov    QWORD PTR [rsp+0x60],rsi
   140002c7d:	mov    QWORD PTR [rbp-0x28],rax
   140002c81:	lea    rcx,[rbp-0x60]
   140002c85:	lea    rax,[rsp+0x68]
   140002c8a:	mov    QWORD PTR [rbp-0x78],rsi
   140002c8e:	mov    QWORD PTR [rbp-0x18],rax
   140002c92:	xor    r9d,r9d
   140002c95:	lea    rax,[rbp-0x78]
   140002c99:	mov    QWORD PTR [rbp-0x80],rsi
   140002c9d:	mov    QWORD PTR [rbp-0x8],rax
   140002ca1:	xor    r8d,r8d
   140002ca4:	lea    rax,[rbp-0x80]
   140002ca8:	mov    QWORD PTR [rsp+0x78],rsi
   140002cad:	mov    QWORD PTR [rbp+0x8],rax
   140002cb1:	mov    dl,0x1
   140002cb3:	lea    rax,[rsp+0x78]
   140002cb8:	mov    QWORD PTR [rsp+0x68],rsi
   140002cbd:	mov    QWORD PTR [rbp+0x18],rax
   140002cc1:	lea    rax,[rsp+0x70]
   140002cc6:	mov    QWORD PTR [rsp+0x50],rax
   140002ccb:	mov    DWORD PTR [rsp+0x48],esi
   140002ccf:	mov    DWORD PTR [rsp+0x40],esi
   140002cd3:	mov    DWORD PTR [rsp+0x38],esi
   140002cd7:	mov    DWORD PTR [rsp+0x30],esi
   140002cdb:	mov    DWORD PTR [rsp+0x28],esi
   140002cdf:	mov    DWORD PTR [rsp+0x20],esi
   140002ce3:	mov    QWORD PTR [rbp-0x70],rsi
   140002ce7:	mov    DWORD PTR [rbp-0x60],esi
   140002cea:	mov    DWORD PTR [rbp-0x68],esi
   140002ced:	mov    WORD PTR [rbp-0x64],0x500
   140002cf3:	mov    DWORD PTR [rbp-0x58],esi
   140002cf6:	mov    WORD PTR [rbp-0x54],0x300
   140002cfc:	mov    DWORD PTR [rbp-0x50],esi
   140002cff:	mov    WORD PTR [rbp-0x4c],0xf00
   140002d05:	mov    WORD PTR [rbp-0x40],si
   140002d09:	mov    BYTE PTR [rbp-0x3e],sil
   140002d0d:	mov    DWORD PTR [rbp-0x3c],0xe0000000
   140002d14:	mov    WORD PTR [rbp-0x30],0x1
   140002d1a:	mov    BYTE PTR [rbp-0x2e],sil
   140002d1e:	mov    DWORD PTR [rbp-0x2c],0xe0000000
   140002d25:	mov    WORD PTR [rbp-0x20],si
   140002d29:	mov    BYTE PTR [rbp-0x1e],sil
   140002d2d:	mov    DWORD PTR [rbp-0x1c],0x80000000
   140002d34:	mov    WORD PTR [rbp-0x10],si
   140002d38:	mov    BYTE PTR [rbp-0xe],sil
   140002d3c:	mov    DWORD PTR [rbp-0xc],0x10000000
   140002d43:	mov    WORD PTR [rbp+0x0],si
   140002d47:	mov    BYTE PTR [rbp+0x2],sil
   140002d4b:	mov    DWORD PTR [rbp+0x4],0x10000000
   140002d52:	mov    WORD PTR [rbp+0x10],si
   140002d56:	mov    BYTE PTR [rbp+0x12],sil
   140002d5a:	mov    DWORD PTR [rbp+0x14],0x80000000
   140002d61:	call   QWORD PTR [rip+0x3559]        # 0x1400062c0
   140002d67:	mov    ebx,eax
   140002d69:	test   eax,eax
   140002d6b:	js     0x140002ed3
   140002d71:	lea    rax,[rsp+0x60]
   140002d76:	xor    r9d,r9d
   140002d79:	mov    QWORD PTR [rsp+0x50],rax
   140002d7e:	lea    r8d,[rsi+0xc]
   140002d82:	mov    DWORD PTR [rsp+0x48],esi
   140002d86:	lea    rcx,[rbp-0x68]
   140002d8a:	mov    DWORD PTR [rsp+0x40],esi
   140002d8e:	mov    dl,0x1
   140002d90:	mov    DWORD PTR [rsp+0x38],esi
   140002d94:	mov    DWORD PTR [rsp+0x30],esi
   140002d98:	mov    DWORD PTR [rsp+0x28],esi
   140002d9c:	mov    DWORD PTR [rsp+0x20],esi
   140002da0:	call   QWORD PTR [rip+0x351a]        # 0x1400062c0
   140002da6:	mov    ebx,eax
   140002da8:	test   eax,eax
   140002daa:	js     0x140002ed3
   140002db0:	lea    rax,[rsp+0x68]
   140002db5:	xor    r9d,r9d
   140002db8:	mov    QWORD PTR [rsp+0x50],rax
   140002dbd:	lea    r8d,[rsi+0x7]
   140002dc1:	mov    DWORD PTR [rsp+0x48],esi
   140002dc5:	lea    rcx,[rbp-0x68]
   140002dc9:	mov    DWORD PTR [rsp+0x40],esi
   140002dcd:	mov    dl,0x1
   140002dcf:	mov    DWORD PTR [rsp+0x38],esi
   140002dd3:	mov    DWORD PTR [rsp+0x30],esi
   140002dd7:	mov    DWORD PTR [rsp+0x28],esi
   140002ddb:	mov    DWORD PTR [rsp+0x20],esi
   140002ddf:	call   QWORD PTR [rip+0x34db]        # 0x1400062c0
   140002de5:	mov    ebx,eax
   140002de7:	test   eax,eax
   140002de9:	js     0x140002ed3
   140002def:	lea    rax,[rbp-0x78]
   140002df3:	mov    r9d,0x220
   140002df9:	mov    QWORD PTR [rsp+0x50],rax
   140002dfe:	lea    r8d,[rsi+0x20]
   140002e02:	mov    DWORD PTR [rsp+0x48],esi
   140002e06:	lea    rcx,[rbp-0x68]
   140002e0a:	mov    DWORD PTR [rsp+0x40],esi
   140002e0e:	mov    dl,0x2
   140002e10:	mov    DWORD PTR [rsp+0x38],esi
   140002e14:	mov    DWORD PTR [rsp+0x30],esi
   140002e18:	mov    DWORD PTR [rsp+0x28],esi
   140002e1c:	mov    DWORD PTR [rsp+0x20],esi
   140002e20:	call   QWORD PTR [rip+0x349a]        # 0x1400062c0
   140002e26:	mov    ebx,eax
   140002e28:	test   eax,eax
   140002e2a:	js     0x140002ed3
   140002e30:	lea    rax,[rbp-0x80]
   140002e34:	xor    r9d,r9d
   140002e37:	mov    QWORD PTR [rsp+0x50],rax
   140002e3c:	lea    r8d,[rsi+0x4]
   140002e40:	mov    DWORD PTR [rsp+0x48],esi
   140002e44:	lea    rcx,[rbp-0x58]
   140002e48:	mov    DWORD PTR [rsp+0x40],esi
   140002e4c:	mov    dl,0x1
   140002e4e:	mov    DWORD PTR [rsp+0x38],esi
   140002e52:	mov    DWORD PTR [rsp+0x30],esi
   140002e56:	mov    DWORD PTR [rsp+0x28],esi
   140002e5a:	mov    DWORD PTR [rsp+0x20],esi
   140002e5e:	call   QWORD PTR [rip+0x345c]        # 0x1400062c0
   140002e64:	mov    ebx,eax
   140002e66:	test   eax,eax
   140002e68:	js     0x140002ed3
   140002e6a:	lea    rax,[rsp+0x78]
   140002e6f:	mov    r8d,0x2
   140002e75:	mov    QWORD PTR [rsp+0x50],rax
   140002e7a:	lea    r9d,[rsi+0x1]
   140002e7e:	mov    DWORD PTR [rsp+0x48],esi
   140002e82:	lea    rcx,[rbp-0x50]
   140002e86:	mov    DWORD PTR [rsp+0x40],esi
   140002e8a:	movzx  edx,r8b
   140002e8e:	mov    DWORD PTR [rsp+0x38],esi
   140002e92:	mov    DWORD PTR [rsp+0x30],esi
   140002e96:	mov    DWORD PTR [rsp+0x28],esi
   140002e9a:	mov    DWORD PTR [rsp+0x20],esi
   140002e9e:	call   QWORD PTR [rip+0x341c]        # 0x1400062c0
   140002ea4:	mov    ebx,eax
   140002ea6:	test   eax,eax
   140002ea8:	js     0x140002ed3
   140002eaa:	lea    rax,[rbp-0x70]
   140002eae:	xor    r9d,r9d
   140002eb1:	xor    r8d,r8d
   140002eb4:	mov    QWORD PTR [rsp+0x20],rax
   140002eb9:	lea    edx,[rsi+0x6]
   140002ebc:	lea    rcx,[rbp-0x40]
   140002ec0:	call   QWORD PTR [rip+0x33e2]        # 0x1400062a8
   140002ec6:	mov    ebx,eax
   140002ec8:	test   eax,eax
   140002eca:	js     0x140002ed3
   140002ecc:	mov    rax,QWORD PTR [rbp-0x70]
   140002ed0:	mov    QWORD PTR [rdi],rax
   140002ed3:	mov    rcx,QWORD PTR [rsp+0x70]
   140002ed8:	test   rcx,rcx
   140002edb:	je     0x140002ee3
   140002edd:	call   QWORD PTR [rip+0x3455]        # 0x140006338
   140002ee3:	mov    rcx,QWORD PTR [rsp+0x60]
   140002ee8:	test   rcx,rcx
   140002eeb:	je     0x140002ef3
   140002eed:	call   QWORD PTR [rip+0x3445]        # 0x140006338
   140002ef3:	mov    rcx,QWORD PTR [rsp+0x68]
   140002ef8:	test   rcx,rcx
   140002efb:	je     0x140002f03
   140002efd:	call   QWORD PTR [rip+0x3435]        # 0x140006338
   140002f03:	mov    rcx,QWORD PTR [rbp-0x78]
   140002f07:	test   rcx,rcx
   140002f0a:	je     0x140002f12
   140002f0c:	call   QWORD PTR [rip+0x3426]        # 0x140006338
   140002f12:	mov    rcx,QWORD PTR [rbp-0x80]
   140002f16:	test   rcx,rcx
   140002f19:	je     0x140002f21
   140002f1b:	call   QWORD PTR [rip+0x3417]        # 0x140006338
   140002f21:	mov    rcx,QWORD PTR [rsp+0x78]
   140002f26:	test   rcx,rcx
   140002f29:	je     0x140002f31
   140002f2b:	call   QWORD PTR [rip+0x3407]        # 0x140006338
   140002f31:	mov    eax,ebx
   140002f33:	mov    rcx,QWORD PTR [rbp+0x20]
   140002f37:	xor    rcx,rsp
   140002f3a:	call   0x1400037f0
   140002f3f:	lea    r11,[rsp+0x130]
   140002f47:	mov    rbx,QWORD PTR [r11+0x18]
   140002f4b:	mov    rsi,QWORD PTR [r11+0x20]
   140002f4f:	mov    rdi,QWORD PTR [r11+0x28]
   140002f53:	mov    rsp,r11
   140002f56:	pop    rbp
   140002f57:	ret    
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    QWORD PTR [rsp+0x18],rbx
   140002f65:	push   rbp
   140002f66:	push   rdi
   140002f67:	push   r12
   140002f69:	push   r14
   140002f6b:	push   r15
   140002f6d:	lea    rbp,[rsp-0x1f0]
   140002f75:	sub    rsp,0x2f0
   140002f7c:	mov    rax,QWORD PTR [rip+0x907d]        # 0x14000c000
   140002f83:	xor    rax,rsp
   140002f86:	mov    QWORD PTR [rbp+0x1e0],rax
   140002f8d:	xor    r12d,r12d
   140002f90:	mov    DWORD PTR [rsp+0x64],0x4c
   140002f98:	mov    r15,rcx
   140002f9b:	mov    QWORD PTR [rsp+0x68],r12
   140002fa0:	lea    rcx,[rbp-0x20]
   140002fa4:	mov    DWORD PTR [rsp+0x60],r12d
   140002fa9:	xor    edx,edx
   140002fab:	mov    QWORD PTR [rsp+0x70],r12
   140002fb0:	mov    r8d,0x200
   140002fb6:	mov    DWORD PTR [rsp+0x78],r12d
   140002fbb:	mov    r14d,r12d
   140002fbe:	mov    WORD PTR [rsp+0x7c],0x1000
   140002fc5:	call   0x140003ae8
   140002fca:	mov    rcx,QWORD PTR gs:0x60
   140002fd3:	lea    edx,[r12+0x8]
   140002fd8:	lea    r8d,[r12+0x28]
   140002fdd:	mov    rcx,QWORD PTR [rcx+0x30]
   140002fe1:	call   QWORD PTR [rip+0x3409]        # 0x1400063f0
   140002fe7:	mov    rdi,rax
   140002fea:	test   rax,rax
   140002fed:	je     0x1400045cc
   140002ff3:	lea    edx,[r12+0x1]
   140002ff8:	mov    rcx,rax
   140002ffb:	call   QWORD PTR [rip+0x32ef]        # 0x1400062f0
   140003001:	mov    ebx,eax
   140003003:	test   eax,eax
   140003005:	js     0x140003272
   14000300b:	call   QWORD PTR [rip+0x315f]        # 0x140006170
   140003011:	lea    r8,[rsp+0x68]
   140003016:	mov    edx,0x20008
   14000301b:	mov    rcx,rax
   14000301e:	call   QWORD PTR [rip+0x3154]        # 0x140006178
   140003024:	test   eax,eax
   140003026:	je     0x1400045d6
   14000302c:	mov    r9d,DWORD PTR [rsp+0x64]
   140003031:	lea    rax,[rsp+0x64]
   140003036:	mov    rcx,QWORD PTR [rsp+0x68]
   14000303b:	lea    r8,[rbp-0x80]
   14000303f:	lea    edx,[r12+0x4]
   140003044:	mov    QWORD PTR [rsp+0x20],rax
   140003049:	call   QWORD PTR [rip+0x3231]        # 0x140006280
   14000304f:	test   eax,eax
   140003051:	je     0x1400045e0
   140003057:	mov    rcx,QWORD PTR [rip+0x95da]        # 0x14000c638
   14000305e:	mov    QWORD PTR [rsp+0x328],rsi
   140003066:	call   QWORD PTR [rip+0x327c]        # 0x1400062e8
   14000306c:	mov    rcx,QWORD PTR [rip+0x95cd]        # 0x14000c640
   140003073:	mov    ebx,eax
   140003075:	call   QWORD PTR [rip+0x326d]        # 0x1400062e8
   14000307b:	mov    rcx,QWORD PTR gs:0x60
   140003084:	lea    edx,[r12+0x8]
   140003089:	lea    esi,[rax+0x70]
   14000308c:	mov    rcx,QWORD PTR [rcx+0x30]
   140003090:	add    esi,ebx
   140003092:	mov    r8d,esi
   140003095:	call   QWORD PTR [rip+0x3355]        # 0x1400063f0
   14000309b:	mov    r14,rax
   14000309e:	test   rax,rax
   1400030a1:	je     0x1400045ea
   1400030a7:	mov    rdx,QWORD PTR [rbp-0x80]
   1400030ab:	xor    r8d,r8d
   1400030ae:	mov    rcx,rdi
   1400030b1:	call   QWORD PTR [rip+0x3241]        # 0x1400062f8
   1400030b7:	mov    ebx,eax
   1400030b9:	test   eax,eax
   1400030bb:	js     0x14000326a
   1400030c1:	lea    r8d,[r12+0x2]
   1400030c6:	mov    edx,esi
   1400030c8:	mov    rcx,r14
   1400030cb:	call   QWORD PTR [rip+0x325f]        # 0x140006330
   1400030d1:	mov    ebx,eax
   1400030d3:	test   eax,eax
   1400030d5:	js     0x14000326a
   1400030db:	mov    r9,QWORD PTR [rip+0x955e]        # 0x14000c640
   1400030e2:	lea    edx,[r12+0x2]
   1400030e7:	mov    r8d,0x12019b
   1400030ed:	mov    rcx,r14
   1400030f0:	call   QWORD PTR [rip+0x330a]        # 0x140006400
   1400030f6:	mov    ebx,eax
   1400030f8:	test   eax,eax
   1400030fa:	js     0x14000326a
   140003100:	mov    r9,QWORD PTR [rip+0x9531]        # 0x14000c638
   140003107:	lea    edx,[r12+0x2]
   14000310c:	mov    r8d,0x12019b
   140003112:	mov    rcx,r14
   140003115:	call   QWORD PTR [rip+0x32e5]        # 0x140006400
   14000311b:	mov    ebx,eax
   14000311d:	test   eax,eax
   14000311f:	js     0x14000326a
   140003125:	mov    r9,QWORD PTR [rbp-0x80]
   140003129:	lea    edx,[r12+0x2]
   14000312e:	mov    r8d,0x1f01ff
   140003134:	mov    rcx,r14
   140003137:	call   QWORD PTR [rip+0x32c3]        # 0x140006400
   14000313d:	mov    ebx,eax
   14000313f:	test   eax,eax
   140003141:	js     0x14000326a
   140003147:	xor    r9d,r9d
   14000314a:	mov    r8,r14
   14000314d:	mov    dl,0x1
   14000314f:	mov    rcx,rdi
   140003152:	call   QWORD PTR [rip+0x31e8]        # 0x140006340
   140003158:	test   eax,eax
   14000315a:	js     0x1400045f4
   140003160:	lea    rax,[rsp+0x70]
   140003165:	xor    r9d,r9d
   140003168:	mov    QWORD PTR [rsp+0x50],rax
   14000316d:	lea    rcx,[rsp+0x78]
   140003172:	mov    DWORD PTR [rsp+0x48],r12d
   140003177:	xor    r8d,r8d
   14000317a:	mov    DWORD PTR [rsp+0x40],r12d
   14000317f:	mov    dl,0x1
   140003181:	mov    DWORD PTR [rsp+0x38],r12d
   140003186:	mov    DWORD PTR [rsp+0x30],r12d
   14000318b:	mov    DWORD PTR [rsp+0x28],r12d
   140003190:	mov    DWORD PTR [rsp+0x20],r12d
   140003195:	call   QWORD PTR [rip+0x3125]        # 0x1400062c0
   14000319b:	mov    ebx,eax
   14000319d:	test   eax,eax
   14000319f:	js     0x14000326a
   1400031a5:	mov    edx,0x200
   1400031aa:	lea    r8d,[r12+0x2]
   1400031af:	lea    rcx,[rbp-0x20]
   1400031b3:	call   QWORD PTR [rip+0x3177]        # 0x140006330
   1400031b9:	mov    ebx,eax
   1400031bb:	test   eax,eax
   1400031bd:	js     0x14000326a
   1400031c3:	mov    r9,QWORD PTR [rsp+0x70]
   1400031c8:	lea    edx,[r12+0x2]
   1400031cd:	mov    DWORD PTR [rsp+0x28],0x1
   1400031d5:	lea    rcx,[rbp-0x20]
   1400031d9:	xor    r8d,r8d
   1400031dc:	mov    BYTE PTR [rsp+0x20],0x11
   1400031e1:	call   QWORD PTR [rip+0x3131]        # 0x140006318
   1400031e7:	mov    ebx,eax
   1400031e9:	test   eax,eax
   1400031eb:	js     0x14000326a
   1400031ed:	xor    r9d,r9d
   1400031f0:	lea    r8,[rbp-0x20]
   1400031f4:	mov    dl,0x1
   1400031f6:	mov    rcx,rdi
   1400031f9:	call   QWORD PTR [rip+0x31f9]        # 0x1400063f8
   1400031ff:	mov    ebx,eax
   140003201:	test   eax,eax
   140003203:	js     0x14000326a
   140003205:	lea    r8,[rsp+0x60]
   14000320a:	mov    DWORD PTR [rsp+0x60],r12d
   14000320f:	xor    edx,edx
   140003211:	mov    rcx,rdi
   140003214:	call   QWORD PTR [rip+0x309e]        # 0x1400062b8
   14000321a:	mov    ebx,eax
   14000321c:	cmp    eax,0xc0000023
   140003221:	jne    0x140004608
   140003227:	mov    rcx,QWORD PTR gs:0x60
   140003230:	lea    edx,[r12+0x8]
   140003235:	mov    r8d,DWORD PTR [rsp+0x60]
   14000323a:	mov    rcx,QWORD PTR [rcx+0x30]
   14000323e:	call   QWORD PTR [rip+0x31ac]        # 0x1400063f0
   140003244:	mov    rsi,rax
   140003247:	test   rax,rax
   14000324a:	je     0x1400045fe
   140003250:	lea    r8,[rsp+0x60]
   140003255:	mov    rdx,rax
   140003258:	mov    rcx,rdi
   14000325b:	call   QWORD PTR [rip+0x3057]        # 0x1400062b8
   140003261:	mov    ebx,eax
   140003263:	test   eax,eax
   140003265:	js     0x14000326a
   140003267:	mov    QWORD PTR [r15],rsi
   14000326a:	mov    rsi,QWORD PTR [rsp+0x328]
   140003272:	mov    rcx,QWORD PTR [rsp+0x68]
   140003277:	test   rcx,rcx
   14000327a:	je     0x140003282
   14000327c:	call   QWORD PTR [rip+0x2e7e]        # 0x140006100
   140003282:	mov    rcx,QWORD PTR gs:0x60
   14000328b:	mov    r8,r14
   14000328e:	xor    edx,edx
   140003290:	mov    rcx,QWORD PTR [rcx+0x30]
   140003294:	call   QWORD PTR [rip+0x2ffe]        # 0x140006298
   14000329a:	mov    rcx,QWORD PTR gs:0x60
   1400032a3:	mov    r8,rdi
   1400032a6:	xor    edx,edx
   1400032a8:	mov    rcx,QWORD PTR [rcx+0x30]
   1400032ac:	call   QWORD PTR [rip+0x2fe6]        # 0x140006298
   1400032b2:	mov    eax,ebx
   1400032b4:	mov    rcx,QWORD PTR [rbp+0x1e0]
   1400032bb:	xor    rcx,rsp
   1400032be:	call   0x1400037f0
   1400032c3:	mov    rbx,QWORD PTR [rsp+0x330]
   1400032cb:	add    rsp,0x2f0
   1400032d2:	pop    r15
   1400032d4:	pop    r14
   1400032d6:	pop    r12
   1400032d8:	pop    rdi
   1400032d9:	pop    rbp
   1400032da:	ret    
   1400032db:	int3   
   1400032dc:	int3   
   1400032dd:	int3   
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	int3   
   1400032e1:	int3   
   1400032e2:	int3   
   1400032e3:	int3   
   1400032e4:	int3   
   1400032e5:	int3   
   1400032e6:	int3   
   1400032e7:	int3   
   1400032e8:	int3   
   1400032e9:	int3   
   1400032ea:	int3   
   1400032eb:	int3   
   1400032ec:	int3   
   1400032ed:	int3   
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400032fa:	mov    QWORD PTR [rsp+0x18],rdi
   1400032ff:	push   rbp
   140003300:	lea    rbp,[rsp-0x1e0]
   140003308:	sub    rsp,0x2e0
   14000330f:	mov    rax,QWORD PTR [rip+0x8cea]        # 0x14000c000
   140003316:	xor    rax,rsp
   140003319:	mov    QWORD PTR [rbp+0x1d0],rax
   140003320:	lea    rdx,[rip+0x34f9]        # 0x140006820
   140003327:	lea    rcx,[rsp+0x58]
   14000332c:	call   QWORD PTR [rip+0x3016]        # 0x140006348
   140003332:	lea    rax,[rsp+0x58]
   140003337:	mov    DWORD PTR [rsp+0x68],0x30
   14000333f:	xorps  xmm0,xmm0
   140003342:	mov    QWORD PTR [rsp+0x78],rax
   140003347:	xor    edi,edi
   140003349:	mov    DWORD PTR [rsp+0x20],0x4000
   140003351:	mov    esi,0x200
   140003356:	mov    QWORD PTR [rsp+0x70],rdi
   14000335b:	mov    r9d,esi
   14000335e:	mov    DWORD PTR [rbp-0x80],edi
   140003361:	xor    r8d,r8d
   140003364:	lea    rdx,[rsp+0x68]
   140003369:	lea    rcx,[rip+0x92a8]        # 0x14000c618
   140003370:	movdqu XMMWORD PTR [rbp-0x78],xmm0
   140003375:	call   QWORD PTR [rip+0x3055]        # 0x1400063d0
   14000337b:	mov    ebx,eax
   14000337d:	test   eax,eax
   14000337f:	js     0x140004618
   140003385:	lea    rdx,[rip+0x346c]        # 0x1400067f8
   14000338c:	mov    DWORD PTR [rbp-0x3c],0x2
   140003393:	lea    rcx,[rbp-0x68]
   140003397:	mov    WORD PTR [rbp-0x38],0x101
   14000339d:	call   QWORD PTR [rip+0x2fa5]        # 0x140006348
   1400033a3:	mov    QWORD PTR [rsp+0x38],rdi
   1400033a8:	lea    rax,[rsp+0x40]
   1400033ad:	mov    QWORD PTR [rsp+0x30],rdi
   1400033b2:	lea    r8,[rbp-0x40]
   1400033b6:	mov    QWORD PTR [rsp+0x28],rax
   1400033bb:	lea    rdx,[rbp-0x68]
   1400033bf:	xor    r9d,r9d
   1400033c2:	mov    QWORD PTR [rsp+0x20],rdi
   1400033c7:	lea    rcx,[rsp+0x48]
   1400033cc:	call   QWORD PTR [rip+0x2fe6]        # 0x1400063b8
   1400033d2:	mov    ebx,eax
   1400033d4:	test   eax,eax
   1400033d6:	js     0x14000463e
   1400033dc:	cmp    DWORD PTR [rsp+0x40],esi
   1400033e0:	jne    0x140004664
   1400033e6:	mov    rax,QWORD PTR [rsp+0x48]
   1400033eb:	lea    rdx,[rbp-0x30]
   1400033ef:	mov    rcx,QWORD PTR [rip+0x9222]        # 0x14000c618
   1400033f6:	mov    QWORD PTR [rip+0x9213],rax        # 0x14000c610
   1400033fd:	mov    DWORD PTR [rbp-0x30],0x2000000
   140003404:	call   QWORD PTR [rip+0x2f8e]        # 0x140006398
   14000340a:	mov    ebx,eax
   14000340c:	test   eax,eax
   14000340e:	js     0x140004697
   140003414:	lea    rax,[rbp-0x58]
   140003418:	mov    DWORD PTR [rbp-0x58],0x18
   14000341f:	mov    QWORD PTR [rsp+0x28],rax
   140003424:	lea    r8,[rbp-0x30]
   140003428:	mov    r9b,0x1
   14000342b:	mov    QWORD PTR [rsp+0x20],rdi
   140003430:	xor    edx,edx
   140003432:	lea    rcx,[rip+0x91df]        # 0x14000c618
   140003439:	call   QWORD PTR [rip+0x2f61]        # 0x1400063a0
   14000343f:	mov    ebx,eax
   140003441:	test   eax,eax
   140003443:	js     0x1400046bd
   140003449:	mov    rcx,QWORD PTR [rip+0x91c8]        # 0x14000c618
   140003450:	call   QWORD PTR [rip+0x2f82]        # 0x1400063d8
   140003456:	mov    ebx,eax
   140003458:	test   eax,eax
   14000345a:	js     0x1400046e3
   140003460:	lea    rax,[rsp+0x50]
   140003465:	xor    r9d,r9d
   140003468:	mov    QWORD PTR [rsp+0x28],rax
   14000346d:	lea    r8,[rip+0x10c]        # 0x140003580
   140003474:	xor    edx,edx
   140003476:	mov    DWORD PTR [rsp+0x20],edi
   14000347a:	xor    ecx,ecx
   14000347c:	call   QWORD PTR [rip+0x2d1e]        # 0x1400061a0
   140003482:	test   rax,rax
   140003485:	je     0x140004709
   14000348b:	mov    rcx,rax
   14000348e:	call   QWORD PTR [rip+0x2c6c]        # 0x140006100
   140003494:	mov    ebx,edi
   140003496:	mov    eax,ebx
   140003498:	mov    rcx,QWORD PTR [rbp+0x1d0]
   14000349f:	xor    rcx,rsp
   1400034a2:	call   0x1400037f0
   1400034a7:	lea    r11,[rsp+0x2e0]
   1400034af:	mov    rbx,QWORD PTR [r11+0x10]
   1400034b3:	mov    rsi,QWORD PTR [r11+0x18]
   1400034b7:	mov    rdi,QWORD PTR [r11+0x20]
   1400034bb:	mov    rsp,r11
   1400034be:	pop    rbp
   1400034bf:	ret    
   1400034c0:	int3   
   1400034c1:	int3   
   1400034c2:	int3   
   1400034c3:	int3   
   1400034c4:	int3   
   1400034c5:	int3   
   1400034c6:	int3   
   1400034c7:	int3   
   1400034c8:	int3   
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	rex push rbx
   1400034d2:	sub    rsp,0x250
   1400034d9:	mov    rax,QWORD PTR [rip+0x8b20]        # 0x14000c000
   1400034e0:	xor    rax,rsp
   1400034e3:	mov    QWORD PTR [rsp+0x240],rax
   1400034eb:	movups xmm0,XMMWORD PTR [rip+0x34ee]        # 0x1400069e0
   1400034f2:	mov    ebx,DWORD PTR [rip+0x34f8]        # 0x1400069f0
   1400034f8:	lea    rdx,[rsp+0x30]
   1400034fd:	mov    r8d,0x104
   140003503:	lea    rcx,[rip+0x32d6]        # 0x1400067e0
   14000350a:	movups XMMWORD PTR [rsp+0x20],xmm0
   14000350f:	call   QWORD PTR [rip+0x2c3b]        # 0x140006150
   140003515:	test   eax,eax
   140003517:	je     0x140003554
   140003519:	mov    ecx,0x105
   14000351e:	sub    ecx,eax
   140003520:	cmp    ecx,0xa
   140003523:	jb     0x140003554
   140003525:	cmp    DWORD PTR [rip+0x91e8],0x0        # 0x14000c714
   14000352c:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140003531:	mov    ecx,eax
   140003533:	movups XMMWORD PTR [rsp+rcx*2+0x30],xmm0
   140003538:	mov    DWORD PTR [rsp+rcx*2+0x40],ebx
   14000353c:	jne    0x140004730
   140003542:	lea    rdx,[rsp+0x30]
   140003547:	lea    rcx,[rip+0x3282]        # 0x1400067d0
   14000354e:	call   QWORD PTR [rip+0x2c04]        # 0x140006158
   140003554:	mov    rcx,QWORD PTR [rsp+0x240]
   14000355c:	xor    rcx,rsp
   14000355f:	call   0x1400037f0
   140003564:	add    rsp,0x250
   14000356b:	pop    rbx
   14000356c:	ret    
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	int3   
   140003571:	int3   
   140003572:	int3   
   140003573:	int3   
   140003574:	int3   
   140003575:	int3   
   140003576:	int3   
   140003577:	int3   
   140003578:	int3   
   140003579:	int3   
   14000357a:	int3   
   14000357b:	int3   
   14000357c:	int3   
   14000357d:	int3   
   14000357e:	int3   
   14000357f:	int3   
   140003580:	mov    QWORD PTR [rsp+0x8],rbx
   140003585:	mov    QWORD PTR [rsp+0x10],rbp
   14000358a:	mov    QWORD PTR [rsp+0x18],rsi
   14000358f:	push   rdi
   140003590:	sub    rsp,0x430
   140003597:	mov    rax,QWORD PTR [rip+0x8a62]        # 0x14000c000
   14000359e:	xor    rax,rsp
   1400035a1:	mov    QWORD PTR [rsp+0x420],rax
   1400035a9:	mov    QWORD PTR [rsp+0x20],0x20001d8
   1400035b2:	mov    ebp,0x200
   1400035b7:	mov    esi,0xfffd
   1400035bc:	xor    ebx,ebx
   1400035be:	mov    r8,rbp
   1400035c1:	lea    rcx,[rsp+0x220]
   1400035c9:	xor    edx,edx
   1400035cb:	call   0x140003ae8
   1400035d0:	mov    rcx,QWORD PTR [rip+0x9041]        # 0x14000c618
   1400035d7:	lea    r9,[rsp+0x220]
   1400035df:	mov    r8,rbx
   1400035e2:	xor    edx,edx
   1400035e4:	call   QWORD PTR [rip+0x2dd6]        # 0x1400063c0
   1400035ea:	test   eax,eax
   1400035ec:	js     0x1400035bc
   1400035ee:	movzx  ecx,WORD PTR [rsp+0x224]
   1400035f6:	lea    eax,[rcx-0x1]
   1400035f9:	test   si,ax
   1400035fc:	jne    0x1400035bc
   1400035fe:	movaps xmm0,XMMWORD PTR [rsp+0x220]
   140003606:	lea    rbx,[rsp+0x20]
   14000360b:	mov    rdi,QWORD PTR [rip+0x906e]        # 0x14000c680
   140003612:	movaps xmm1,XMMWORD PTR [rsp+0x230]
   14000361a:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000361f:	movsd  xmm0,QWORD PTR [rsp+0x240]
   140003628:	movsd  QWORD PTR [rsp+0x40],xmm0
   14000362e:	movaps XMMWORD PTR [rsp+0x30],xmm1
   140003633:	test   rdi,rdi
   140003636:	je     0x140003663
   140003638:	mov    rdi,QWORD PTR [rdi]
   14000363b:	mov    rcx,rdi
   14000363e:	call   QWORD PTR [rip+0x2dcc]        # 0x140006410
   140003644:	lea    rdx,[rsp+0x20]
   140003649:	lea    rcx,[rsp+0x220]
   140003651:	call   rdi
   140003653:	cmp    eax,0x103
   140003658:	je     0x1400035bc
   14000365e:	jmp    0x14000474c
   140003663:	xor    eax,eax
   140003665:	jmp    0x140004754
   14000366a:	int3   
   14000366b:	int3   
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	mov    QWORD PTR [rsp+0x8],rbx
   140003675:	mov    QWORD PTR [rsp+0x10],rbp
   14000367a:	mov    QWORD PTR [rsp+0x18],rsi
   14000367f:	push   rdi
   140003680:	sub    rsp,0x20
   140003684:	mov    rbx,QWORD PTR [rip+0x8fd5]        # 0x14000c660
   14000368b:	mov    rdi,r8
   14000368e:	mov    rsi,rdx
   140003691:	mov    rbp,rcx
   140003694:	test   rbx,rbx
   140003697:	je     0x1400036cb
   140003699:	mov    rbx,QWORD PTR [rbx+0x30]
   14000369d:	test   rbx,rbx
   1400036a0:	je     0x1400036cb
   1400036a2:	mov    rcx,rbx
   1400036a5:	call   QWORD PTR [rip+0x2d65]        # 0x140006410
   1400036ab:	mov    r8,rdi
   1400036ae:	mov    rdx,rsi
   1400036b1:	mov    rcx,rbp
   1400036b4:	call   rbx
   1400036b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036bb:	mov    rbp,QWORD PTR [rsp+0x38]
   1400036c0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400036c5:	add    rsp,0x20
   1400036c9:	pop    rdi
   1400036ca:	ret    
   1400036cb:	mov    eax,0xc0000002
   1400036d0:	jmp    0x1400036b6
   1400036d2:	int3   
   1400036d3:	int3   
   1400036d4:	int3   
   1400036d5:	int3   
   1400036d6:	int3   
   1400036d7:	int3   
   1400036d8:	int3   
   1400036d9:	int3   
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	test   ecx,ecx
   1400036e2:	je     0x1400036f8
   1400036e4:	cmp    ecx,0x2
   1400036e7:	je     0x140003702
   1400036e9:	cmp    ecx,0x3
   1400036ec:	jne    0x14000370c
   1400036ee:	mov    QWORD PTR [rip+0x8f6b],rdx        # 0x14000c660
   1400036f5:	xor    eax,eax
   1400036f7:	ret    
   1400036f8:	mov    QWORD PTR [rip+0x8f81],rdx        # 0x14000c680
   1400036ff:	xor    eax,eax
   140003701:	ret    
   140003702:	mov    QWORD PTR [rip+0x8ff7],rdx        # 0x14000c700
   140003709:	xor    eax,eax
   14000370b:	ret    
   14000370c:	mov    eax,0xc000000d
   140003711:	ret    
   140003712:	int3   
   140003713:	int3   
   140003714:	int3   
   140003715:	int3   
   140003716:	int3   
   140003717:	int3   
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	int3   
   140003721:	int3   
   140003722:	int3   
   140003723:	int3   
   140003724:	int3   
   140003725:	int3   
   140003726:	int3   
   140003727:	int3   
   140003728:	xor    eax,eax
   14000372a:	ret    
   14000372b:	int3   
   14000372c:	int3   
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	int3   
   140003731:	int3   
   140003732:	int3   
   140003733:	int3   
   140003734:	mov    r11,rsp
   140003737:	sub    rsp,0x28
   14000373b:	and    DWORD PTR [rsp+0x30],0x0
   140003740:	lea    rax,[r11+0x18]
   140003744:	and    QWORD PTR [r11+0x18],0x0
   140003749:	lea    rdx,[rip+0x2ce8]        # 0x140006438
   140003750:	and    QWORD PTR [r11+0x20],0x0
   140003755:	lea    rcx,[rip+0x2cd4]        # 0x140006430
   14000375c:	mov    QWORD PTR [r11+0x10],rax
   140003760:	call   0x140003814
   140003765:	test   eax,eax
   140003767:	je     0x140003773
   140003769:	mov    eax,0xff
   14000376e:	add    rsp,0x28
   140003772:	ret    
   140003773:	lea    rdx,[rsp+0x38]
   140003778:	lea    rcx,[rsp+0x30]
   14000377d:	call   0x140003728
   140003782:	lea    rdx,[rip+0x2c9f]        # 0x140006428
   140003789:	lea    rcx,[rip+0x2c90]        # 0x140006420
   140003790:	call   0x140003820
   140003795:	mov    rdx,QWORD PTR [rsp+0x38]
   14000379a:	lea    r8,[rsp+0x48]
   14000379f:	mov    ecx,DWORD PTR [rsp+0x30]
   1400037a3:	call   0x140001730
   1400037a8:	mov    ecx,eax
   1400037aa:	call   QWORD PTR [rip+0x28f8]        # 0x1400060a8
   1400037b0:	int3   
   1400037b1:	int3   
   1400037b2:	int3   
   1400037b3:	int3   
   1400037b4:	int3   
   1400037b5:	int3   
   1400037b6:	int3   
   1400037b7:	int3   
   1400037b8:	int3   
   1400037b9:	int3   
   1400037ba:	int3   
   1400037bb:	int3   
   1400037bc:	int3   
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	sub    rsp,0x28
   1400037c4:	call   0x14000382c
   1400037c9:	add    rsp,0x28
   1400037cd:	jmp    0x140003734
   1400037d2:	int3   
   1400037d3:	int3   
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	int3   
   1400037d7:	int3   
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	int3   
   1400037e1:	int3   
   1400037e2:	int3   
   1400037e3:	int3   
   1400037e4:	int3   
   1400037e5:	int3   
   1400037e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400037f0:	cmp    rcx,QWORD PTR [rip+0x8809]        # 0x14000c000
   1400037f7:	jne    0x140003809
   1400037f9:	rol    rcx,0x10
   1400037fd:	test   cx,0xffff
   140003802:	jne    0x140003805
   140003804:	ret    
   140003805:	ror    rcx,0x10
   140003809:	jmp    0x140003940
   14000380e:	int3   
   14000380f:	int3   
   140003810:	int3   
   140003811:	int3   
   140003812:	int3   
   140003813:	int3   
   140003814:	jmp    QWORD PTR [rip+0x289e]        # 0x1400060b8
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	jmp    QWORD PTR [rip+0x288a]        # 0x1400060b0
   140003826:	int3   
   140003827:	int3   
   140003828:	int3   
   140003829:	int3   
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	mov    QWORD PTR [rsp+0x20],rbx
   140003831:	push   rbp
   140003832:	mov    rbp,rsp
   140003835:	sub    rsp,0x20
   140003839:	and    QWORD PTR [rbp+0x18],0x0
   14000383e:	movabs rbx,0x2b992ddfa232
   140003848:	mov    rax,QWORD PTR [rip+0x87b1]        # 0x14000c000
   14000384f:	cmp    rax,rbx
   140003852:	jne    0x1400038e7
   140003858:	lea    rcx,[rbp+0x18]
   14000385c:	call   QWORD PTR [rip+0x29be]        # 0x140006220
   140003862:	mov    rax,QWORD PTR [rbp+0x18]
   140003866:	mov    QWORD PTR [rbp+0x10],rax
   14000386a:	call   QWORD PTR [rip+0x2920]        # 0x140006190
   140003870:	mov    eax,eax
   140003872:	xor    QWORD PTR [rbp+0x10],rax
   140003876:	call   QWORD PTR [rip+0x290c]        # 0x140006188
   14000387c:	mov    eax,eax
   14000387e:	xor    QWORD PTR [rbp+0x10],rax
   140003882:	call   QWORD PTR [rip+0x29a0]        # 0x140006228
   140003888:	mov    eax,eax
   14000388a:	shl    rax,0x18
   14000388e:	xor    QWORD PTR [rbp+0x10],rax
   140003892:	call   QWORD PTR [rip+0x2990]        # 0x140006228
   140003898:	mov    eax,eax
   14000389a:	lea    rcx,[rbp+0x10]
   14000389e:	xor    rax,QWORD PTR [rbp+0x10]
   1400038a2:	xor    rax,rcx
   1400038a5:	lea    rcx,[rbp+0x20]
   1400038a9:	mov    QWORD PTR [rbp+0x10],rax
   1400038ad:	call   QWORD PTR [rip+0x290d]        # 0x1400061c0
   1400038b3:	mov    eax,DWORD PTR [rbp+0x20]
   1400038b6:	movabs rcx,0xffffffffffff
   1400038c0:	shl    rax,0x20
   1400038c4:	xor    rax,QWORD PTR [rbp+0x20]
   1400038c8:	xor    rax,QWORD PTR [rbp+0x10]
   1400038cc:	and    rax,rcx
   1400038cf:	movabs rcx,0x2b992ddfa233
   1400038d9:	cmp    rax,rbx
   1400038dc:	cmove  rax,rcx
   1400038e0:	mov    QWORD PTR [rip+0x8719],rax        # 0x14000c000
   1400038e7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400038ec:	not    rax
   1400038ef:	mov    QWORD PTR [rip+0x8712],rax        # 0x14000c008
   1400038f6:	add    rsp,0x20
   1400038fa:	pop    rbp
   1400038fb:	ret    
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	int3   
   140003901:	int3   
   140003902:	int3   
   140003903:	int3   
   140003904:	rex push rbx
   140003906:	sub    rsp,0x20
   14000390a:	mov    rbx,rcx
   14000390d:	xor    ecx,ecx
   14000390f:	call   QWORD PTR [rip+0x27b3]        # 0x1400060c8
   140003915:	mov    rcx,rbx
   140003918:	call   QWORD PTR [rip+0x27ba]        # 0x1400060d8
   14000391e:	call   QWORD PTR [rip+0x284c]        # 0x140006170
   140003924:	mov    rcx,rax
   140003927:	mov    edx,0xc0000409
   14000392c:	add    rsp,0x20
   140003930:	pop    rbx
   140003931:	rex.W jmp QWORD PTR [rip+0x2830]        # 0x140006168
   140003938:	int3   
   140003939:	int3   
   14000393a:	int3   
   14000393b:	int3   
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	mov    QWORD PTR [rsp+0x8],rcx
   140003945:	sub    rsp,0x88
   14000394c:	lea    rcx,[rip+0x87ed]        # 0x14000c140
   140003953:	call   QWORD PTR [rip+0x2a17]        # 0x140006370
   140003959:	mov    rax,QWORD PTR [rip+0x88d8]        # 0x14000c238
   140003960:	mov    QWORD PTR [rsp+0x48],rax
   140003965:	xor    r8d,r8d
   140003968:	lea    rdx,[rsp+0x50]
   14000396d:	mov    rcx,QWORD PTR [rsp+0x48]
   140003972:	call   QWORD PTR [rip+0x29f0]        # 0x140006368
   140003978:	mov    QWORD PTR [rsp+0x40],rax
   14000397d:	cmp    QWORD PTR [rsp+0x40],0x0
   140003983:	je     0x1400039c7
   140003985:	mov    QWORD PTR [rsp+0x38],0x0
   14000398e:	lea    rax,[rsp+0x58]
   140003993:	mov    QWORD PTR [rsp+0x30],rax
   140003998:	lea    rax,[rsp+0x60]
   14000399d:	mov    QWORD PTR [rsp+0x28],rax
   1400039a2:	lea    rax,[rip+0x8797]        # 0x14000c140
   1400039a9:	mov    QWORD PTR [rsp+0x20],rax
   1400039ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400039b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400039b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400039bd:	xor    ecx,ecx
   1400039bf:	call   QWORD PTR [rip+0x299b]        # 0x140006360
   1400039c5:	jmp    0x1400039ea
   1400039c7:	mov    rax,QWORD PTR [rip+0x880a]        # 0x14000c1d8
   1400039ce:	mov    rax,QWORD PTR [rax]
   1400039d1:	mov    QWORD PTR [rip+0x8860],rax        # 0x14000c238
   1400039d8:	mov    rax,QWORD PTR [rip+0x87f9]        # 0x14000c1d8
   1400039df:	add    rax,0x8
   1400039e3:	mov    QWORD PTR [rip+0x87ee],rax        # 0x14000c1d8
   1400039ea:	mov    rax,QWORD PTR [rip+0x8847]        # 0x14000c238
   1400039f1:	mov    QWORD PTR [rip+0x86b8],rax        # 0x14000c0b0
   1400039f8:	mov    rax,QWORD PTR [rsp+0x90]
   140003a00:	mov    QWORD PTR [rip+0x87b9],rax        # 0x14000c1c0
   140003a07:	mov    DWORD PTR [rip+0x868f],0xc0000409        # 0x14000c0a0
   140003a11:	mov    DWORD PTR [rip+0x8689],0x1        # 0x14000c0a4
   140003a1b:	mov    DWORD PTR [rip+0x8693],0x3        # 0x14000c0b8
   140003a25:	mov    eax,0x8
   140003a2a:	imul   rax,rax,0x0
   140003a2e:	lea    rcx,[rip+0x868b]        # 0x14000c0c0
   140003a35:	mov    QWORD PTR [rcx+rax*1],0x2
   140003a3d:	mov    eax,0x8
   140003a42:	imul   rax,rax,0x1
   140003a46:	lea    rcx,[rip+0x8673]        # 0x14000c0c0
   140003a4d:	mov    rdx,QWORD PTR [rip+0x85ac]        # 0x14000c000
   140003a54:	mov    QWORD PTR [rcx+rax*1],rdx
   140003a58:	mov    eax,0x8
   140003a5d:	imul   rax,rax,0x2
   140003a61:	lea    rcx,[rip+0x8658]        # 0x14000c0c0
   140003a68:	mov    rdx,QWORD PTR [rip+0x8599]        # 0x14000c008
   140003a6f:	mov    QWORD PTR [rcx+rax*1],rdx
   140003a73:	mov    eax,0x8
   140003a78:	imul   rax,rax,0x0
   140003a7c:	mov    rcx,QWORD PTR [rip+0x857d]        # 0x14000c000
   140003a83:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140003a88:	mov    eax,0x8
   140003a8d:	imul   rax,rax,0x1
   140003a91:	mov    rcx,QWORD PTR [rip+0x8570]        # 0x14000c008
   140003a98:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140003a9d:	lea    rcx,[rip+0x2da4]        # 0x140006848
   140003aa4:	call   0x140003904
   140003aa9:	add    rsp,0x88
   140003ab0:	ret    
   140003ab1:	int3   
   140003ab2:	int3   
   140003ab3:	int3   
   140003ab4:	int3   
   140003ab5:	int3   
   140003ab6:	int3   
   140003ab7:	int3   
   140003ab8:	int3   
   140003ab9:	int3   
   140003aba:	int3   
   140003abb:	int3   
   140003abc:	int3   
   140003abd:	int3   
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	jmp    QWORD PTR [rip+0x2552]        # 0x140006018
   140003ac6:	int3   
   140003ac7:	int3   
   140003ac8:	int3   
   140003ac9:	int3   
   140003aca:	int3   
   140003acb:	int3   
   140003acc:	int3   
   140003acd:	int3   
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	jmp    QWORD PTR [rip+0x254a]        # 0x140006020
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	jmp    QWORD PTR [rip+0x25a6]        # 0x140006088
   140003ae2:	int3   
   140003ae3:	int3   
   140003ae4:	int3   
   140003ae5:	int3   
   140003ae6:	int3   
   140003ae7:	int3   
   140003ae8:	jmp    QWORD PTR [rip+0x25aa]        # 0x140006098
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	int3   
   140003af1:	int3   
   140003af2:	int3   
   140003af3:	int3   
   140003af4:	sub    rsp,0x28
   140003af8:	mov    r8,QWORD PTR [r9+0x38]
   140003afc:	mov    rcx,rdx
   140003aff:	mov    rdx,r9
   140003b02:	call   0x140003b18
   140003b07:	mov    eax,0x1
   140003b0c:	add    rsp,0x28
   140003b10:	ret    
   140003b11:	int3   
   140003b12:	int3   
   140003b13:	int3   
   140003b14:	int3   
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	rex push rbx
   140003b1a:	sub    rsp,0x20
   140003b1e:	mov    r11d,DWORD PTR [r8]
   140003b21:	mov    rbx,rdx
   140003b24:	and    r11d,0xfffffff8
   140003b28:	mov    r9,rcx
   140003b2b:	test   BYTE PTR [r8],0x4
   140003b2f:	mov    r10,rcx
   140003b32:	je     0x140003b47
   140003b34:	mov    eax,DWORD PTR [r8+0x8]
   140003b38:	movsxd r10,DWORD PTR [r8+0x4]
   140003b3c:	neg    eax
   140003b3e:	add    r10,rcx
   140003b41:	movsxd rcx,eax
   140003b44:	and    r10,rcx
   140003b47:	movsxd rax,r11d
   140003b4a:	mov    rdx,QWORD PTR [rax+r10*1]
   140003b4e:	mov    rax,QWORD PTR [rbx+0x10]
   140003b52:	mov    ecx,DWORD PTR [rax+0x8]
   140003b55:	add    rcx,QWORD PTR [rbx+0x8]
   140003b59:	test   BYTE PTR [rcx+0x3],0xf
   140003b5d:	je     0x140003b6b
   140003b5f:	movzx  eax,BYTE PTR [rcx+0x3]
   140003b63:	and    eax,0xfffffff0
   140003b66:	cdqe   
   140003b68:	add    r9,rax
   140003b6b:	xor    r9,rdx
   140003b6e:	mov    rcx,r9
   140003b71:	add    rsp,0x20
   140003b75:	pop    rbx
   140003b76:	jmp    0x1400037f0
   140003b7b:	int3   
   140003b7c:	int3   
   140003b7d:	int3   
   140003b7e:	int3   
   140003b7f:	int3   
   140003b80:	int3   
   140003b81:	int3   
   140003b82:	int3   
   140003b83:	int3   
   140003b84:	int3   
   140003b85:	int3   
   140003b86:	int3   
   140003b87:	int3   
   140003b88:	int3   
   140003b89:	int3   
   140003b8a:	int3   
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	ret    0x0
   140003b93:	int3   
   140003b94:	int3   
   140003b95:	int3   
   140003b96:	int3   
   140003b97:	int3   
   140003b98:	int3   
   140003b99:	int3   
   140003b9a:	int3   
   140003b9b:	int3   
   140003b9c:	int3   
   140003b9d:	int3   
   140003b9e:	int3   
   140003b9f:	int3   
   140003ba0:	int3   
   140003ba1:	int3   
   140003ba2:	int3   
   140003ba3:	int3   
   140003ba4:	int3   
   140003ba5:	int3   
   140003ba6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003bb0:	jmp    rax
   140003bb2:	int3   
   140003bb3:	int3   
   140003bb4:	int3   
   140003bb5:	int3   
   140003bb6:	int3   
   140003bb7:	int3   
   140003bb8:	int3   
   140003bb9:	int3   
   140003bba:	int3   
   140003bbb:	int3   
   140003bbc:	int3   
   140003bbd:	int3   
   140003bbe:	int3   
   140003bbf:	int3   
   140003bc0:	mov    eax,DWORD PTR [rip+0x8472]        # 0x14000c038
   140003bc6:	mov    DWORD PTR [rcx],eax
   140003bc8:	xor    eax,eax
   140003bca:	ret    
   140003bcb:	int3   
   140003bcc:	mov    rdx,rcx
   140003bcf:	mov    ecx,0x40
   140003bd4:	call   QWORD PTR [rip+0x2536]        # 0x140006110
   140003bda:	nop
   140003bdb:	jmp    0x140001098
   140003be0:	mov    r8d,DWORD PTR [rsp+0x270]
   140003be8:	lea    rdx,[rsp+0x4c]
   140003bed:	mov    rcx,rsi
   140003bf0:	call   0x140003adc
   140003bf5:	nop
   140003bf6:	jmp    0x1400013ae
   140003bfb:	cmp    DWORD PTR [rip+0x8b12],0x0        # 0x14000c714
   140003c02:	je     0x1400013b2
   140003c08:	mov    r8d,eax
   140003c0b:	lea    rdx,[rip+0x5556]        # 0x140009168
   140003c12:	mov    ecx,0x1
   140003c17:	call   0x140004770
   140003c1c:	nop
   140003c1d:	jmp    0x1400013b2
   140003c22:	mov    eax,0x80000005
   140003c27:	jmp    0x1400013bc
   140003c2c:	mov    rcx,rbx
   140003c2f:	call   QWORD PTR [rip+0x27db]        # 0x140006410
   140003c35:	mov    rdx,rdi
   140003c38:	mov    rcx,rsi
   140003c3b:	call   rbx
   140003c3d:	nop
   140003c3e:	jmp    0x1400014d0
   140003c43:	int3   
   140003c44:	mov    QWORD PTR [rsp+0x50],rdi
   140003c49:	call   QWORD PTR [rip+0x2521]        # 0x140006170
   140003c4f:	mov    rdi,rax
   140003c52:	call   QWORD PTR [rip+0x2518]        # 0x140006170
   140003c58:	mov    rdx,QWORD PTR [rsi]
   140003c5b:	mov    r9,rbx
   140003c5e:	mov    DWORD PTR [rsp+0x30],0x2
   140003c66:	mov    rcx,rax
   140003c69:	mov    DWORD PTR [rsp+0x28],0x0
   140003c71:	mov    r8,rdi
   140003c74:	mov    DWORD PTR [rsp+0x20],0x0
   140003c7c:	call   QWORD PTR [rip+0x2476]        # 0x1400060f8
   140003c82:	mov    rdi,QWORD PTR [rsp+0x50]
   140003c87:	test   eax,eax
   140003c89:	je     0x14000151c
   140003c8f:	mov    r9d,0x8
   140003c95:	mov    r8,rbx
   140003c98:	mov    rcx,0xfffffffffffffffe
   140003c9f:	lea    edx,[r9-0x3]
   140003ca3:	call   QWORD PTR [rip+0x26d7]        # 0x140006380
   140003ca9:	nop
   140003caa:	jmp    0x140001521
   140003caf:	int3   
   140003cb0:	mov    rax,QWORD PTR [rsp+0xc0]
   140003cb8:	mov    DWORD PTR [rsp+0x48],0x10
   140003cc0:	mov    DWORD PTR [rsp+0x60],ecx
   140003cc4:	mov    rcx,QWORD PTR [rip+0x8a3d]        # 0x14000c708
   140003ccb:	movups xmm0,XMMWORD PTR [rax]
   140003cce:	mov    rax,QWORD PTR [rsp+0xc8]
   140003cd6:	mov    QWORD PTR [rsp+0x40],rax
   140003cdb:	lea    rax,[rsp+0x60]
   140003ce0:	mov    DWORD PTR [rsp+0x38],0x30
   140003ce8:	mov    QWORD PTR [rsp+0x30],rax
   140003ced:	lea    rax,[rsp+0x50]
   140003cf2:	mov    QWORD PTR [rsp+0x68],rdx
   140003cf7:	xor    edx,edx
   140003cf9:	mov    QWORD PTR [rsp+0x70],r8
   140003cfe:	xor    r8d,r8d
   140003d01:	mov    QWORD PTR [rsp+0x78],r9
   140003d06:	xor    r9d,r9d
   140003d09:	mov    DWORD PTR [rsp+0x28],0x39003c
   140003d11:	mov    QWORD PTR [rsp+0x20],rax
   140003d16:	movups XMMWORD PTR [rsp+0x80],xmm0
   140003d1e:	call   QWORD PTR [rip+0x2604]        # 0x140006328
   140003d24:	nop
   140003d25:	jmp    0x140001619
   140003d2a:	mov    r9d,0x8
   140003d30:	mov    DWORD PTR [rsp+0x40],0x2
   140003d38:	lea    r8,[rsp+0x40]
   140003d3d:	mov    DWORD PTR [rsp+0x44],0x1
   140003d45:	or     rcx,0xffffffffffffffff
   140003d49:	lea    edx,[r9+0x2c]
   140003d4d:	call   QWORD PTR [rip+0x255d]        # 0x1400062b0
   140003d53:	mov    ecx,0x80000000
   140003d58:	mov    ebx,eax
   140003d5a:	add    eax,ecx
   140003d5c:	test   ecx,eax
   140003d5e:	jne    0x14000179d
   140003d64:	cmp    ebx,0xc00000bb
   140003d6a:	jne    0x1400018e9
   140003d70:	jmp    0x14000179d
   140003d75:	cmp    DWORD PTR [rip+0x8998],0x0        # 0x14000c714
   140003d7c:	je     0x140001825
   140003d82:	lea    rdx,[rip+0x4ca7]        # 0x140008a30
   140003d89:	jmp    0x140003db5
   140003d8b:	cmp    DWORD PTR [rip+0x8982],0x0        # 0x14000c714
   140003d92:	je     0x140001825
   140003d98:	lea    rdx,[rip+0x4cb9]        # 0x140008a58
   140003d9f:	jmp    0x140003db5
   140003da1:	cmp    DWORD PTR [rip+0x896c],0x0        # 0x14000c714
   140003da8:	je     0x140001825
   140003dae:	lea    rdx,[rip+0x4ccb]        # 0x140008a80
   140003db5:	mov    r8d,eax
   140003db8:	mov    ecx,0x1
   140003dbd:	call   0x140004770
   140003dc2:	nop
   140003dc3:	jmp    0x140001825
   140003dc8:	cmp    DWORD PTR [rip+0x8945],0x0        # 0x14000c714
   140003dcf:	je     0x1400018e9
   140003dd5:	lea    rdx,[rip+0x4cd4]        # 0x140008ab0
   140003ddc:	jmp    0x140003ee0
   140003de1:	cmp    DWORD PTR [rip+0x892c],0x0        # 0x14000c714
   140003de8:	je     0x1400018e9
   140003dee:	mov    r8d,eax
   140003df1:	lea    rdx,[rip+0x4ce8]        # 0x140008ae0
   140003df8:	jmp    0x140003ee3
   140003dfd:	cmp    DWORD PTR [rip+0x8910],0x0        # 0x14000c714
   140003e04:	je     0x140003e55
   140003e06:	call   QWORD PTR [rip+0x22d4]        # 0x1400060e0
   140003e0c:	lea    r8,[rip+0x27fd]        # 0x140006610
   140003e13:	mov    ecx,0x1
   140003e18:	mov    r9d,eax
   140003e1b:	lea    rdx,[rip+0x4bae]        # 0x1400089d0
   140003e22:	call   0x140004770
   140003e27:	jmp    0x140003e55
   140003e29:	cmp    DWORD PTR [rip+0x88e4],0x0        # 0x14000c714
   140003e30:	je     0x140003e4c
   140003e32:	call   QWORD PTR [rip+0x22a8]        # 0x1400060e0
   140003e38:	lea    rdx,[rip+0x4bc1]        # 0x140008a00
   140003e3f:	mov    ecx,0x1
   140003e44:	mov    r8d,eax
   140003e47:	call   0x140004770
   140003e4c:	mov    rcx,rbx
   140003e4f:	call   QWORD PTR [rip+0x22ab]        # 0x140006100
   140003e55:	cmp    DWORD PTR [rip+0x88b8],0x0        # 0x14000c714
   140003e5c:	mov    ebx,0xc0000008
   140003e61:	je     0x1400018e9
   140003e67:	mov    r8d,ebx
   140003e6a:	lea    rdx,[rip+0x4cb7]        # 0x140008b28
   140003e71:	jmp    0x140003ee3
   140003e73:	cmp    DWORD PTR [rip+0x889a],0x0        # 0x14000c714
   140003e7a:	je     0x1400018e9
   140003e80:	mov    r8d,eax
   140003e83:	lea    rdx,[rip+0x4cbe]        # 0x140008b48
   140003e8a:	jmp    0x140003ee3
   140003e8c:	call   QWORD PTR [rip+0x224e]        # 0x1400060e0
   140003e92:	cmp    eax,0xb7
   140003e97:	jne    0x1400018e9
   140003e9d:	lea    r8,[rip+0x261c]        # 0x1400064c0
   140003ea4:	xor    edx,edx
   140003ea6:	mov    ecx,0x40000000
   140003eab:	call   QWORD PTR [rip+0x2347]        # 0x1400061f8
   140003eb1:	test   rax,rax
   140003eb4:	je     0x1400018e9
   140003eba:	jmp    0x1400018e0
   140003ebf:	mov    ecx,eax
   140003ec1:	call   QWORD PTR [rip+0x2221]        # 0x1400060e8
   140003ec7:	cmp    DWORD PTR [rip+0x8846],0x0        # 0x14000c714
   140003ece:	mov    ebx,0xc0000001
   140003ed3:	je     0x1400018e9
   140003ed9:	lea    rdx,[rip+0x4c20]        # 0x140008b00
   140003ee0:	mov    r8d,ebx
   140003ee3:	mov    ecx,0x1
   140003ee8:	call   0x140004770
   140003eed:	nop
   140003eee:	jmp    0x1400018e9
   140003ef3:	int3   
   140003ef4:	cmp    DWORD PTR [rip+0x8819],0x0        # 0x14000c714
   140003efb:	je     0x140003f15
   140003efd:	mov    r8,QWORD PTR [rbx+0x28]
   140003f01:	lea    rdx,[rip+0x4f40]        # 0x140008e48
   140003f08:	mov    r9d,eax
   140003f0b:	mov    ecx,0x1
   140003f10:	call   0x140004770
   140003f15:	mov    ecx,edi
   140003f17:	mov    DWORD PTR [rbx+0x40],edi
   140003f1a:	call   QWORD PTR [rip+0x23c0]        # 0x1400062e0
   140003f20:	mov    DWORD PTR [rbx+0x3c],eax
   140003f23:	jmp    0x14000194d
   140003f28:	mov    ecx,eax
   140003f2a:	mov    DWORD PTR [rbx+0x40],eax
   140003f2d:	call   QWORD PTR [rip+0x23ad]        # 0x1400062e0
   140003f33:	mov    DWORD PTR [rbx+0x3c],eax
   140003f36:	jmp    0x1400019bb
   140003f3b:	int3   
   140003f3c:	call   QWORD PTR [rip+0x219e]        # 0x1400060e0
   140003f42:	cmp    eax,0xb7
   140003f47:	jne    0x140001a28
   140003f4d:	lea    r8,[rip+0x25a4]        # 0x1400064f8
   140003f54:	xor    edx,edx
   140003f56:	mov    ecx,0x40000000
   140003f5b:	call   QWORD PTR [rip+0x2297]        # 0x1400061f8
   140003f61:	test   rax,rax
   140003f64:	je     0x140001a28
   140003f6a:	jmp    0x140001a1f
   140003f6f:	int3   
   140003f70:	cmp    DWORD PTR [rip+0x879e],ebx        # 0x14000c714
   140003f76:	je     0x140001b49
   140003f7c:	mov    r8,QWORD PTR [rsp+0x58]
   140003f81:	lea    rdx,[rip+0x49a8]        # 0x140008930
   140003f88:	mov    r9d,eax
   140003f8b:	mov    ecx,0x1
   140003f90:	call   0x140004770
   140003f95:	nop
   140003f96:	jmp    0x140001b49
   140003f9b:	cmp    DWORD PTR [rip+0x8773],ebx        # 0x14000c714
   140003fa1:	je     0x140001b3f
   140003fa7:	lea    rdx,[rip+0x49a2]        # 0x140008950
   140003fae:	jmp    0x140003fc3
   140003fb0:	cmp    DWORD PTR [rip+0x875e],ebx        # 0x14000c714
   140003fb6:	je     0x140001b3f
   140003fbc:	lea    rdx,[rip+0x49b5]        # 0x140008978
   140003fc3:	mov    r8d,eax
   140003fc6:	mov    ecx,0x1
   140003fcb:	call   0x140004770
   140003fd0:	nop
   140003fd1:	jmp    0x140001b3f
   140003fd6:	call   QWORD PTR [rip+0x2104]        # 0x1400060e0
   140003fdc:	cmp    DWORD PTR [rip+0x8731],0x0        # 0x14000c714
   140003fe3:	je     0x140003ff9
   140003fe5:	mov    r8d,eax
   140003fe8:	lea    rdx,[rip+0x5371]        # 0x140009360
   140003fef:	mov    ecx,0x1
   140003ff4:	call   0x140004770
   140003ff9:	mov    eax,0xc000009a
   140003ffe:	jmp    0x140001ca2
   140004003:	cmp    DWORD PTR [rip+0x870b],edi        # 0x14000c714
   140004009:	je     0x140004026
   14000400b:	mov    r9d,eax
   14000400e:	lea    r8,[rip+0x26db]        # 0x1400066f0
   140004015:	lea    rdx,[rip+0x4914]        # 0x140008930
   14000401c:	mov    ecx,0x1
   140004021:	call   0x140004770
   140004026:	mov    eax,ebx
   140004028:	jmp    0x140001c9a
   14000402d:	call   QWORD PTR [rip+0x20ad]        # 0x1400060e0
   140004033:	cmp    DWORD PTR [rip+0x86db],edi        # 0x14000c714
   140004039:	je     0x14000407b
   14000403b:	mov    r8d,eax
   14000403e:	lea    rdx,[rip+0x535b]        # 0x1400093a0
   140004045:	mov    ecx,0x1
   14000404a:	call   0x140004770
   14000404f:	mov    eax,0xc000009a
   140004054:	jmp    0x140001c9a
   140004059:	call   QWORD PTR [rip+0x2081]        # 0x1400060e0
   14000405f:	cmp    DWORD PTR [rip+0x86af],edi        # 0x14000c714
   140004065:	je     0x14000407b
   140004067:	mov    r8d,eax
   14000406a:	lea    rdx,[rip+0x5357]        # 0x1400093c8
   140004071:	mov    ecx,0x1
   140004076:	call   0x140004770
   14000407b:	mov    eax,0xc000009a
   140004080:	jmp    0x140001c9a
   140004085:	int3   
   140004086:	cmp    DWORD PTR [rip+0x8687],r14d        # 0x14000c714
   14000408d:	je     0x140001e70
   140004093:	mov    r9d,eax
   140004096:	lea    r8,[rbp+0x7]
   14000409a:	lea    rdx,[rip+0x4e0f]        # 0x140008eb0
   1400040a1:	mov    ecx,0x1
   1400040a6:	call   0x140004770
   1400040ab:	nop
   1400040ac:	jmp    0x140001e70
   1400040b1:	cmp    DWORD PTR [rip+0x865c],r14d        # 0x14000c714
   1400040b8:	je     0x140001e61
   1400040be:	mov    r9d,eax
   1400040c1:	lea    r8,[rbp+0x7]
   1400040c5:	lea    rdx,[rip+0x4e1c]        # 0x140008ee8
   1400040cc:	mov    ecx,0x1
   1400040d1:	call   0x140004770
   1400040d6:	nop
   1400040d7:	jmp    0x140001e61
   1400040dc:	cmp    DWORD PTR [rip+0x8631],r14d        # 0x14000c714
   1400040e3:	je     0x140001e61
   1400040e9:	mov    r9,QWORD PTR [rdi+0x28]
   1400040ed:	lea    rdx,[rip+0x4e2c]        # 0x140008f20
   1400040f4:	mov    r8d,ebx
   1400040f7:	mov    DWORD PTR [rsp+0x20],eax
   1400040fb:	mov    ecx,0x1
   140004100:	call   0x140004770
   140004105:	nop
   140004106:	jmp    0x140001e61
   14000410b:	cmp    DWORD PTR [rip+0x8602],r14d        # 0x14000c714
   140004112:	je     0x140001eb5
   140004118:	mov    r9d,ebx
   14000411b:	lea    rdx,[rip+0x4d66]        # 0x140008e88
   140004122:	mov    r8d,esi
   140004125:	mov    ecx,0x1
   14000412a:	call   0x140004770
   14000412f:	nop
   140004130:	jmp    0x140001eb5
   140004135:	cmp    DWORD PTR [rip+0x85d8],0x0        # 0x14000c714
   14000413c:	je     0x140001ee8
   140004142:	mov    r8d,ebx
   140004145:	lea    rdx,[rip+0x4e14]        # 0x140008f60
   14000414c:	mov    ecx,0x1
   140004151:	call   0x140004770
   140004156:	nop
   140004157:	jmp    0x140001ee8
   14000415c:	mov    eax,0xc00000e5
   140004161:	jmp    0x140002035
   140004166:	mov    esi,0xc0000718
   14000416b:	jmp    0x140002026
   140004170:	mov    esi,0xc0000017
   140004175:	jmp    0x140002026
   14000417a:	mov    ecx,0x3
   14000417f:	int    0x29
   140004181:	mov    ecx,0x3
   140004186:	int    0x29
   140004188:	cmp    DWORD PTR [rip+0x8586],esi        # 0x14000c714
   14000418e:	je     0x1400021c8
   140004194:	mov    r8d,eax
   140004197:	lea    rdx,[rip+0x4a92]        # 0x140008c30
   14000419e:	mov    ecx,0x1
   1400041a3:	call   0x140004770
   1400041a8:	nop
   1400041a9:	jmp    0x1400021c8
   1400041ae:	cmp    eax,0xea
   1400041b3:	je     0x140002106
   1400041b9:	cmp    DWORD PTR [rip+0x8555],esi        # 0x14000c714
   1400041bf:	je     0x1400021c8
   1400041c5:	mov    r8d,eax
   1400041c8:	lea    rdx,[rip+0x4ab1]        # 0x140008c80
   1400041cf:	mov    ecx,0x1
   1400041d4:	call   0x140004770
   1400041d9:	nop
   1400041da:	jmp    0x1400021c8
   1400041df:	mov    eax,DWORD PTR [rsp+0x50]
   1400041e3:	cmp    eax,0x2
   1400041e6:	jae    0x14000420b
   1400041e8:	cmp    DWORD PTR [rip+0x8526],esi        # 0x14000c714
   1400041ee:	je     0x140004201
   1400041f0:	lea    rdx,[rip+0x4ad9]        # 0x140008cd0
   1400041f7:	mov    ecx,0x1
   1400041fc:	call   0x140004770
   140004201:	mov    edi,0xd
   140004206:	jmp    0x1400021c8
   14000420b:	add    eax,0x2
   14000420e:	mov    DWORD PTR [rsp+0x50],eax
   140004212:	jmp    0x14000212c
   140004217:	cmp    DWORD PTR [rip+0x84f7],esi        # 0x14000c714
   14000421d:	je     0x140004201
   14000421f:	lea    rdx,[rip+0x4afa]        # 0x140008d20
   140004226:	mov    ecx,0x1
   14000422b:	call   0x140004770
   140004230:	mov    edi,0xd
   140004235:	jmp    0x1400021c8
   14000423a:	cmp    DWORD PTR [rip+0x84d4],ebp        # 0x14000c714
   140004240:	je     0x1400021c8
   140004246:	mov    r8d,DWORD PTR [rsp+0x50]
   14000424b:	lea    rdx,[rip+0x4b6e]        # 0x140008dc0
   140004252:	mov    r9d,eax
   140004255:	mov    ecx,0x1
   14000425a:	call   0x140004770
   14000425f:	nop
   140004260:	jmp    0x1400021c8
   140004265:	cmp    DWORD PTR [rip+0x84a9],esi        # 0x14000c714
   14000426b:	je     0x14000427e
   14000426d:	lea    rdx,[rip+0x4afc]        # 0x140008d70
   140004274:	mov    ecx,0x1
   140004279:	call   0x140004770
   14000427e:	mov    edi,0x65d
   140004283:	jmp    0x1400021c8
   140004288:	mov    rcx,QWORD PTR gs:0x60
   140004291:	mov    r8,rsi
   140004294:	xor    edx,edx
   140004296:	mov    rcx,QWORD PTR [rcx+0x30]
   14000429a:	call   QWORD PTR [rip+0x1ff8]        # 0x140006298
   1400042a0:	nop
   1400042a1:	jmp    0x1400021eb
   1400042a6:	cmp    DWORD PTR [rip+0x8467],0x0        # 0x14000c714
   1400042ad:	je     0x1400021f8
   1400042b3:	mov    r8d,edi
   1400042b6:	lea    rdx,[rip+0x4b5b]        # 0x140008e18
   1400042bd:	mov    ecx,0x1
   1400042c2:	call   0x140004770
   1400042c7:	nop
   1400042c8:	jmp    0x1400021f8
   1400042cd:	int3   
   1400042ce:	mov    eax,0x8
   1400042d3:	jmp    0x140002315
   1400042d8:	mov    eax,0x57
   1400042dd:	jmp    0x14000231a
   1400042e2:	mov    esi,0xd
   1400042e7:	jmp    0x14000243b
   1400042ec:	mov    esi,0x54f
   1400042f1:	jmp    0x140004386
   1400042f6:	mov    ecx,0x3
   1400042fb:	int    0x29
   1400042fd:	call   QWORD PTR [rip+0x1ddd]        # 0x1400060e0
   140004303:	cmp    DWORD PTR [rip+0x840a],0x0        # 0x14000c714
   14000430a:	mov    esi,eax
   14000430c:	je     0x14000437e
   14000430e:	mov    r9d,eax
   140004311:	lea    rdx,[rip+0x4858]        # 0x140008b70
   140004318:	mov    r8,rbx
   14000431b:	mov    ecx,0x1
   140004320:	call   0x140004770
   140004325:	jmp    0x14000437e
   140004327:	call   QWORD PTR [rip+0x1db3]        # 0x1400060e0
   14000432d:	cmp    DWORD PTR [rip+0x83e0],0x0        # 0x14000c714
   140004334:	mov    esi,eax
   140004336:	je     0x14000437e
   140004338:	mov    r9d,eax
   14000433b:	lea    rdx,[rip+0x4866]        # 0x140008ba8
   140004342:	mov    r8,rbx
   140004345:	mov    ecx,0x1
   14000434a:	call   0x140004770
   14000434f:	jmp    0x14000437e
   140004351:	cmp    DWORD PTR [rip+0x83bc],0x0        # 0x14000c714
   140004358:	je     0x140004371
   14000435a:	mov    r9d,eax
   14000435d:	lea    rdx,[rip+0x4884]        # 0x140008be8
   140004364:	mov    r8,rbx
   140004367:	mov    ecx,0x1
   14000436c:	call   0x140004770
   140004371:	mov    ecx,ebp
   140004373:	call   QWORD PTR [rip+0x1f67]        # 0x1400062e0
   140004379:	mov    esi,eax
   14000437b:	mov    DWORD PTR [rdi+0x40],ebp
   14000437e:	test   esi,esi
   140004380:	je     0x14000243b
   140004386:	test   rdi,rdi
   140004389:	je     0x14000243b
   14000438f:	mov    DWORD PTR [rdi+0x3c],esi
   140004392:	xor    edi,edi
   140004394:	jmp    0x14000243b
   140004399:	int3   
   14000439a:	mov    QWORD PTR [rsi],rax
   14000439d:	mov    eax,0x8
   1400043a2:	jmp    0x1400025a7
   1400043a7:	mov    rcx,QWORD PTR gs:0x60
   1400043b0:	mov    r8,rdi
   1400043b3:	xor    edx,edx
   1400043b5:	mov    rcx,QWORD PTR [rcx+0x30]
   1400043b9:	call   QWORD PTR [rip+0x1ed9]        # 0x140006298
   1400043bf:	mov    eax,0x8
   1400043c4:	mov    QWORD PTR [rsi],rbp
   1400043c7:	jmp    0x1400025a7
   1400043cc:	cmp    DWORD PTR [rip+0x8341],0x0        # 0x14000c714
   1400043d3:	je     0x1400043f6
   1400043d5:	call   QWORD PTR [rip+0x1d05]        # 0x1400060e0
   1400043db:	lea    r8,[rip+0x222e]        # 0x140006610
   1400043e2:	mov    ecx,0x1
   1400043e7:	mov    r9d,eax
   1400043ea:	lea    rdx,[rip+0x4b97]        # 0x140008f88
   1400043f1:	call   0x140004770
   1400043f6:	mov    eax,0xc0000008
   1400043fb:	jmp    0x140002787
   140004400:	mov    ebx,0xc000009a
   140004405:	jmp    0x140002755
   14000440a:	cmp    DWORD PTR [rip+0x8303],0x0        # 0x14000c714
   140004411:	je     0x140002750
   140004417:	mov    r8d,eax
   14000441a:	lea    rdx,[rip+0x4b8f]        # 0x140008fb0
   140004421:	mov    ecx,0x1
   140004426:	call   0x140004770
   14000442b:	nop
   14000442c:	jmp    0x140002750
   140004431:	int3   
   140004432:	mov    ecx,eax
   140004434:	call   QWORD PTR [rip+0x1ea6]        # 0x1400062e0
   14000443a:	mov    ecx,eax
   14000443c:	call   QWORD PTR [rip+0x1ca6]        # 0x1400060e8
   140004442:	xor    eax,eax
   140004444:	jmp    0x14000280f
   140004449:	int3   
   14000444a:	mov    eax,0xc000009a
   14000444f:	jmp    0x140002a5b
   140004454:	mov    ebx,0xc000009a
   140004459:	mov    rcx,QWORD PTR gs:0x60
   140004462:	mov    r8,rsi
   140004465:	xor    edx,edx
   140004467:	mov    rcx,QWORD PTR [rcx+0x30]
   14000446b:	call   QWORD PTR [rip+0x1e27]        # 0x140006298
   140004471:	test   r14,r14
   140004474:	je     0x14000448e
   140004476:	mov    rcx,QWORD PTR gs:0x60
   14000447f:	mov    r8,r14
   140004482:	xor    edx,edx
   140004484:	mov    rcx,QWORD PTR [rcx+0x30]
   140004488:	call   QWORD PTR [rip+0x1e0a]        # 0x140006298
   14000448e:	test   rdi,rdi
   140004491:	je     0x1400044ab
   140004493:	mov    rcx,QWORD PTR gs:0x60
   14000449c:	mov    r8,rdi
   14000449f:	xor    edx,edx
   1400044a1:	mov    rcx,QWORD PTR [rcx+0x30]
   1400044a5:	call   QWORD PTR [rip+0x1ded]        # 0x140006298
   1400044ab:	test   rbp,rbp
   1400044ae:	je     0x1400044c8
   1400044b0:	mov    rcx,QWORD PTR gs:0x60
   1400044b9:	mov    r8,rbp
   1400044bc:	xor    edx,edx
   1400044be:	mov    rcx,QWORD PTR [rcx+0x30]
   1400044c2:	call   QWORD PTR [rip+0x1dd0]        # 0x140006298
   1400044c8:	mov    eax,ebx
   1400044ca:	jmp    0x140002a56
   1400044cf:	int3   
   1400044d0:	cmp    DWORD PTR [rip+0x823d],0x0        # 0x14000c714
   1400044d7:	je     0x1400044ed
   1400044d9:	mov    r8d,eax
   1400044dc:	lea    rdx,[rip+0x4cbd]        # 0x1400091a0
   1400044e3:	mov    ecx,0x1
   1400044e8:	call   0x140004770
   1400044ed:	mov    rcx,QWORD PTR [rip+0x8234]        # 0x14000c728
   1400044f4:	call   QWORD PTR [rip+0x1d3e]        # 0x140006238
   1400044fa:	nop
   1400044fb:	jmp    0x140002af7
   140004500:	cmp    DWORD PTR [rip+0x820e],edi        # 0x14000c714
   140004506:	je     0x14000451c
   140004508:	mov    r8d,eax
   14000450b:	lea    rdx,[rip+0x4306]        # 0x140008818
   140004512:	mov    ecx,0x1
   140004517:	call   0x140004770
   14000451c:	mov    eax,ebx
   14000451e:	jmp    0x140002c1f
   140004523:	cmp    DWORD PTR [rip+0x81eb],edi        # 0x14000c714
   140004529:	je     0x140004548
   14000452b:	lea    rdx,[rip+0x4316]        # 0x140008848
   140004532:	jmp    0x14000453b
   140004534:	lea    rdx,[rip+0x43bd]        # 0x1400088f8
   14000453b:	mov    r8d,ebx
   14000453e:	mov    ecx,0x1
   140004543:	call   0x140004770
   140004548:	mov    ecx,ebx
   14000454a:	call   QWORD PTR [rip+0x1ac0]        # 0x140006010
   140004550:	nop
   140004551:	jmp    0x140002c1f
   140004556:	cmp    DWORD PTR [rip+0x81b8],edi        # 0x14000c714
   14000455c:	je     0x14000451c
   14000455e:	mov    r8d,eax
   140004561:	lea    rdx,[rip+0x4318]        # 0x140008880
   140004568:	mov    ecx,0x1
   14000456d:	call   0x140004770
   140004572:	mov    eax,ebx
   140004574:	jmp    0x140002c1f
   140004579:	cmp    DWORD PTR [rip+0x8194],0x0        # 0x14000c714
   140004580:	je     0x140004596
   140004582:	mov    r8d,eax
   140004585:	lea    rdx,[rip+0x432c]        # 0x1400088b8
   14000458c:	mov    ecx,0x1
   140004591:	call   0x140004770
   140004596:	mov    rcx,QWORD PTR gs:0x60
   14000459f:	xor    edx,edx
   1400045a1:	mov    r8,QWORD PTR [rsp+0x50]
   1400045a6:	mov    rcx,QWORD PTR [rcx+0x30]
   1400045aa:	call   QWORD PTR [rip+0x1ce8]        # 0x140006298
   1400045b0:	mov    ecx,edi
   1400045b2:	call   QWORD PTR [rip+0x1a58]        # 0x140006010
   1400045b8:	nop
   1400045b9:	jmp    0x140002c1f
   1400045be:	cmp    DWORD PTR [rip+0x814f],0x0        # 0x14000c714
   1400045c5:	je     0x140004548
   1400045c7:	jmp    0x140004534
   1400045cc:	mov    eax,0xc0000017
   1400045d1:	jmp    0x1400032b4
   1400045d6:	mov    ebx,0xc0000017
   1400045db:	jmp    0x140003272
   1400045e0:	mov    ebx,0xc0000017
   1400045e5:	jmp    0x140003272
   1400045ea:	mov    ebx,0xc0000017
   1400045ef:	jmp    0x14000326a
   1400045f4:	mov    ebx,0xc0000017
   1400045f9:	jmp    0x14000326a
   1400045fe:	mov    ebx,0xc0000017
   140004603:	jmp    0x14000326a
   140004608:	test   ebx,ebx
   14000460a:	mov    eax,0xc00000e5
   14000460f:	cmovns ebx,eax
   140004612:	jmp    0x14000326a
   140004617:	int3   
   140004618:	cmp    DWORD PTR [rip+0x80f6],edi        # 0x14000c714
   14000461e:	je     0x140003496
   140004624:	mov    r8d,eax
   140004627:	lea    rdx,[rip+0x49a2]        # 0x140008fd0
   14000462e:	mov    ecx,0x1
   140004633:	call   0x140004770
   140004638:	nop
   140004639:	jmp    0x140003496
   14000463e:	cmp    DWORD PTR [rip+0x80d0],edi        # 0x14000c714
   140004644:	je     0x140003496
   14000464a:	mov    r8d,eax
   14000464d:	lea    rdx,[rip+0x49b4]        # 0x140009008
   140004654:	mov    ecx,0x1
   140004659:	call   0x140004770
   14000465e:	nop
   14000465f:	jmp    0x140003496
   140004664:	mov    rcx,QWORD PTR [rsp+0x48]
   140004669:	call   QWORD PTR [rip+0x1d39]        # 0x1400063a8
   14000466f:	cmp    DWORD PTR [rip+0x809f],edi        # 0x14000c714
   140004675:	mov    ebx,0xc0000001
   14000467a:	je     0x140003496
   140004680:	lea    rdx,[rip+0x49b9]        # 0x140009040
   140004687:	mov    ecx,0x1
   14000468c:	call   0x140004770
   140004691:	nop
   140004692:	jmp    0x140003496
   140004697:	cmp    DWORD PTR [rip+0x8077],edi        # 0x14000c714
   14000469d:	je     0x140003496
   1400046a3:	mov    r8d,eax
   1400046a6:	lea    rdx,[rip+0x49cb]        # 0x140009078
   1400046ad:	mov    ecx,0x1
   1400046b2:	call   0x140004770
   1400046b7:	nop
   1400046b8:	jmp    0x140003496
   1400046bd:	cmp    DWORD PTR [rip+0x8051],edi        # 0x14000c714
   1400046c3:	je     0x140003496
   1400046c9:	mov    r8d,eax
   1400046cc:	lea    rdx,[rip+0x49dd]        # 0x1400090b0
   1400046d3:	mov    ecx,0x1
   1400046d8:	call   0x140004770
   1400046dd:	nop
   1400046de:	jmp    0x140003496
   1400046e3:	cmp    DWORD PTR [rip+0x802b],edi        # 0x14000c714
   1400046e9:	je     0x140003496
   1400046ef:	mov    r8d,eax
   1400046f2:	lea    rdx,[rip+0x49f7]        # 0x1400090f0
   1400046f9:	mov    ecx,0x1
   1400046fe:	call   0x140004770
   140004703:	nop
   140004704:	jmp    0x140003496
   140004709:	cmp    DWORD PTR [rip+0x8005],edi        # 0x14000c714
   14000470f:	je     0x140003494
   140004715:	mov    r8d,ebx
   140004718:	lea    rdx,[rip+0x4a11]        # 0x140009130
   14000471f:	mov    ecx,0x1
   140004724:	call   0x140004770
   140004729:	nop
   14000472a:	jmp    0x140003494
   14000472f:	int3   
   140004730:	lea    r8,[rsp+0x30]
   140004735:	mov    ecx,0x4
   14000473a:	lea    rdx,[rip+0x4267]        # 0x1400089a8
   140004741:	call   0x140004770
   140004746:	nop
   140004747:	jmp    0x140003542
   14000474c:	movzx  ecx,WORD PTR [rsp+0x224]
   140004754:	mov    DWORD PTR [rsp+0x48],eax
   140004758:	cmp    cx,0x3
   14000475c:	jne    0x1400035be
   140004762:	jmp    0x1400035bc
   140004767:	int3   
   140004768:	int3   
   140004769:	int3   
   14000476a:	int3   
   14000476b:	int3   
   14000476c:	int3   
   14000476d:	int3   
   14000476e:	int3   
   14000476f:	int3   
   140004770:	mov    r11,rsp
   140004773:	mov    QWORD PTR [r11+0x10],rdx
   140004777:	mov    QWORD PTR [r11+0x18],r8
   14000477b:	mov    QWORD PTR [r11+0x20],r9
   14000477f:	sub    rsp,0x158
   140004786:	mov    rax,QWORD PTR [rip+0x7873]        # 0x14000c000
   14000478d:	xor    rax,rsp
   140004790:	mov    QWORD PTR [rsp+0x130],rax
   140004798:	test   DWORD PTR [rip+0x7f76],ecx        # 0x14000c714
   14000479e:	je     0x14000489c
   1400047a4:	mov    QWORD PTR [r11-0x8],rbx
   1400047a8:	mov    QWORD PTR [r11-0x10],rdi
   1400047ac:	test   cl,0x1
   1400047af:	je     0x1400047b5
   1400047b1:	xor    ebx,ebx
   1400047b3:	jmp    0x1400047cf
   1400047b5:	test   cl,0x2
   1400047b8:	je     0x1400047c1
   1400047ba:	mov    ebx,0x1
   1400047bf:	jmp    0x1400047cf
   1400047c1:	not    cl
   1400047c3:	movzx  ebx,cl
   1400047c6:	and    ebx,0x4
   1400047c9:	or     ebx,0x8
   1400047cc:	shr    ebx,0x2
   1400047cf:	mov    r8,QWORD PTR [rip+0x7f42]        # 0x14000c718
   1400047d6:	lea    rcx,[rsp+0x30]
   1400047db:	mov    edx,0x80
   1400047e0:	lea    rdi,[rsp+0x170]
   1400047e8:	call   QWORD PTR [rip+0x1892]        # 0x140006080
   1400047ee:	test   eax,eax
   1400047f0:	je     0x14000480c
   1400047f2:	mov    ecx,DWORD PTR [rip+0x7f18]        # 0x14000c710
   1400047f8:	lea    r8,[rip+0x3fd1]        # 0x1400087d0
   1400047ff:	xor    edx,edx
   140004801:	call   QWORD PTR [rip+0x1b01]        # 0x140006308
   140004807:	jmp    0x14000488c
   14000480c:	mov    rax,QWORD PTR [rip+0x7f05]        # 0x14000c718
   140004813:	or     rcx,0xffffffffffffffff
   140004817:	inc    rcx
   14000481a:	cmp    BYTE PTR [rax+rcx*1],0x0
   14000481e:	jne    0x140004817
   140004820:	mov    r9,QWORD PTR [rsp+0x168]
   140004828:	mov    r8d,0xff
   14000482e:	mov    eax,ecx
   140004830:	mov    edx,0x100
   140004835:	inc    ecx
   140004837:	mov    QWORD PTR [rsp+0x20],rdi
   14000483c:	mov    BYTE PTR [rsp+rax*1+0x30],0x3a
   140004841:	mov    BYTE PTR [rsp+rcx*1+0x30],0x20
   140004846:	inc    ecx
   140004848:	lea    eax,[rcx+0x1]
   14000484b:	mov    BYTE PTR [rsp+rcx*1+0x30],0x20
   140004850:	lea    rcx,[rsp+0x30]
   140004855:	sub    r8,rax
   140004858:	add    rcx,rax
   14000485b:	sub    rdx,rax
   14000485e:	call   QWORD PTR [rip+0x182c]        # 0x140006090
   140004864:	mov    ecx,DWORD PTR [rip+0x7ea6]        # 0x14000c710
   14000486a:	test   eax,eax
   14000486c:	jns    0x14000487f
   14000486e:	lea    r8,[rip+0x3f8b]        # 0x140008800
   140004875:	xor    edx,edx
   140004877:	call   QWORD PTR [rip+0x1a8b]        # 0x140006308
   14000487d:	jmp    0x14000488c
   14000487f:	lea    r8,[rsp+0x30]
   140004884:	mov    edx,ebx
   140004886:	call   QWORD PTR [rip+0x1a7c]        # 0x140006308
   14000488c:	mov    rbx,QWORD PTR [rsp+0x150]
   140004894:	mov    rdi,QWORD PTR [rsp+0x148]
   14000489c:	mov    rcx,QWORD PTR [rsp+0x130]
   1400048a4:	xor    rcx,rsp
   1400048a7:	call   0x1400037f0
   1400048ac:	add    rsp,0x158
   1400048b3:	ret    
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	rex.W jmp QWORD PTR [rip+0x1a91]        # 0x140006358
   1400048c7:	int3   
   1400048c8:	int3   
   1400048c9:	int3   
   1400048ca:	int3   
   1400048cb:	int3   
   1400048cc:	int3   
   1400048cd:	int3   
   1400048ce:	int3   
   1400048cf:	int3   
   1400048d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048d5:	push   rdi
   1400048d6:	sub    rsp,0x20
   1400048da:	mov    rbx,QWORD PTR [rip+0x7d7f]        # 0x14000c660
   1400048e1:	mov    rdi,rcx
   1400048e4:	test   rbx,rbx
   1400048e7:	je     0x140004900
   1400048e9:	mov    rbx,QWORD PTR [rbx+0x48]
   1400048ed:	test   rbx,rbx
   1400048f0:	je     0x140004900
   1400048f2:	mov    rcx,rbx
   1400048f5:	call   QWORD PTR [rip+0x1b15]        # 0x140006410
   1400048fb:	mov    rcx,rdi
   1400048fe:	call   rbx
   140004900:	mov    rbx,QWORD PTR [rsp+0x30]
   140004905:	add    rsp,0x20
   140004909:	pop    rdi
   14000490a:	ret    
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	int3   
   140004911:	int3   
   140004912:	int3   
   140004913:	int3   
   140004914:	mov    QWORD PTR [rsp+0x18],rbx
   140004919:	mov    QWORD PTR [rsp+0x20],rsi
   14000491e:	push   rdi
   14000491f:	sub    rsp,0x20
   140004923:	xor    eax,eax
   140004925:	mov    rdi,r8
   140004928:	mov    rsi,rdx
   14000492b:	mov    rbx,rcx
   14000492e:	mov    QWORD PTR [rdx],rax
   140004931:	mov    DWORD PTR [r8],eax
   140004934:	cmp    QWORD PTR [rcx+0x8],rax
   140004938:	je     0x140004941
   14000493a:	mov    eax,0xc00000bb
   14000493f:	jmp    0x1400049b3
   140004941:	mov    eax,DWORD PTR [rcx+0x10]
   140004944:	test   eax,eax
   140004946:	jne    0x14000494f
   140004948:	mov    eax,0xc0000206
   14000494d:	jmp    0x1400049b3
   14000494f:	mov    rcx,QWORD PTR gs:0x60
   140004958:	mov    edx,0x8
   14000495d:	mov    QWORD PTR [rsp+0x30],rbp
   140004962:	lea    ebp,[rax+0x50]
   140004965:	mov    QWORD PTR [rsp+0x38],r14
   14000496a:	mov    r8d,ebp
   14000496d:	mov    rcx,QWORD PTR [rcx+0x30]
   140004971:	mov    r14d,ebp
   140004974:	call   QWORD PTR [rip+0x1a76]        # 0x1400063f0
   14000497a:	mov    QWORD PTR [rbx+0x8],rax
   14000497e:	test   rax,rax
   140004981:	jne    0x14000498a
   140004983:	mov    eax,0xc000009a
   140004988:	jmp    0x1400049a9
   14000498a:	mov    r8,r14
   14000498d:	xor    edx,edx
   14000498f:	mov    rcx,rax
   140004992:	call   0x140003ae8
   140004997:	mov    rax,QWORD PTR [rbx+0x8]
   14000499b:	mov    QWORD PTR [rsi],rax
   14000499e:	add    rax,0x50
   1400049a2:	mov    QWORD PTR [rbx],rax
   1400049a5:	xor    eax,eax
   1400049a7:	mov    DWORD PTR [rdi],ebp
   1400049a9:	mov    rbp,QWORD PTR [rsp+0x30]
   1400049ae:	mov    r14,QWORD PTR [rsp+0x38]
   1400049b3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400049b8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400049bd:	add    rsp,0x20
   1400049c1:	pop    rdi
   1400049c2:	ret    
   1400049c3:	int3   
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	mov    QWORD PTR [rsp+0x10],rsi
   1400049d1:	mov    QWORD PTR [rsp+0x18],rdi
   1400049d6:	push   r14
   1400049d8:	sub    rsp,0x20
   1400049dc:	mov    QWORD PTR [rdx],0x0
   1400049e3:	mov    rax,r8
   1400049e6:	cmp    QWORD PTR [rcx+0x8],0x0
   1400049eb:	mov    r14,rdx
   1400049ee:	mov    esi,r9d
   1400049f1:	mov    rdi,rcx
   1400049f4:	jne    0x1400049fd
   1400049f6:	mov    eax,0xc00000a0
   1400049fb:	jmp    0x140004a38
   1400049fd:	test   rax,rax
   140004a00:	je     0x140004a36
   140004a02:	cmp    DWORD PTR [rcx+0x10],esi
   140004a05:	jae    0x140004a0e
   140004a07:	mov    eax,0xc0000023
   140004a0c:	jmp    0x140004a38
   140004a0e:	mov    rcx,QWORD PTR [rcx]
   140004a11:	mov    r8,rsi
   140004a14:	mov    rdx,rax
   140004a17:	mov    QWORD PTR [rsp+0x30],rbx
   140004a1c:	call   0x140003adc
   140004a21:	mov    rax,QWORD PTR [rdi]
   140004a24:	sub    rax,QWORD PTR [rdi+0x8]
   140004a28:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a2d:	mov    QWORD PTR [r14],rax
   140004a30:	add    QWORD PTR [rdi],rsi
   140004a33:	sub    DWORD PTR [rdi+0x10],esi
   140004a36:	xor    eax,eax
   140004a38:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a3d:	mov    rdi,QWORD PTR [rsp+0x40]
   140004a42:	add    rsp,0x20
   140004a46:	pop    r14
   140004a48:	ret    
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    QWORD PTR [rsp+0x18],rbx
   140004a55:	push   rbp
   140004a56:	lea    rbp,[rsp-0x57]
   140004a5b:	sub    rsp,0xa0
   140004a62:	mov    rax,QWORD PTR [rip+0x7597]        # 0x14000c000
   140004a69:	xor    rax,rsp
   140004a6c:	mov    QWORD PTR [rbp+0x4f],rax
   140004a70:	mov    rax,QWORD PTR [rip+0x7c89]        # 0x14000c700
   140004a77:	mov    rbx,rdx
   140004a7a:	mov    r10,rcx
   140004a7d:	test   rax,rax
   140004a80:	je     0x140004ba4
   140004a86:	cmp    QWORD PTR [rax+0x28],0x0
   140004a8b:	je     0x140004ba4
   140004a91:	mov    eax,DWORD PTR [rdx+0x28]
   140004a94:	cmp    eax,0x78
   140004a97:	jae    0x140004aae
   140004a99:	xor    eax,eax
   140004a9b:	mov    QWORD PTR [rbp+0x1f],rax
   140004a9f:	mov    rax,QWORD PTR [rdx]
   140004aa2:	mov    DWORD PTR [rbp+0x1f],0xc0000023
   140004aa9:	jmp    0x140004bce
   140004aae:	mov    rcx,QWORD PTR [rdx+0x48]
   140004ab2:	cmp    rax,rcx
   140004ab5:	jb     0x140004a99
   140004ab7:	test   rcx,rcx
   140004aba:	je     0x140004ac4
   140004abc:	lea    rax,[rdx+rcx*1]
   140004ac0:	mov    QWORD PTR [rdx+0x48],rax
   140004ac4:	mov    rcx,QWORD PTR [rdx+0x38]
   140004ac8:	mov    eax,DWORD PTR [rdx+0x28]
   140004acb:	cmp    rax,rcx
   140004ace:	jb     0x140004a99
   140004ad0:	test   rcx,rcx
   140004ad3:	je     0x140004add
   140004ad5:	lea    rax,[rdx+rcx*1]
   140004ad9:	mov    QWORD PTR [rdx+0x38],rax
   140004add:	cmp    QWORD PTR [rdx+0x70],0x0
   140004ae2:	je     0x140004afd
   140004ae4:	mov    rcx,QWORD PTR [rdx+0x70]
   140004ae8:	mov    eax,DWORD PTR [rdx+0x28]
   140004aeb:	cmp    rax,rcx
   140004aee:	jb     0x140004a99
   140004af0:	test   rcx,rcx
   140004af3:	je     0x140004afd
   140004af5:	lea    rax,[rdx+rcx*1]
   140004af9:	mov    QWORD PTR [rdx+0x70],rax
   140004afd:	xor    eax,eax
   140004aff:	cmp    DWORD PTR [rdx+0x58],0x0
   140004b03:	mov    QWORD PTR [rbp+0x2f],rax
   140004b07:	mov    QWORD PTR [rbp+0x37],rax
   140004b0b:	mov    QWORD PTR [rbp+0x3f],rax
   140004b0f:	mov    QWORD PTR [rbp+0x47],rax
   140004b13:	mov    rax,QWORD PTR [rdx]
   140004b16:	mov    QWORD PTR [rbp+0x27],rax
   140004b1a:	jne    0x140004b26
   140004b1c:	cmp    DWORD PTR [rdx+0x54],0x0
   140004b20:	jne    0x140004b26
   140004b22:	xor    ecx,ecx
   140004b24:	jmp    0x140004b2a
   140004b26:	lea    rcx,[rdx+0x54]
   140004b2a:	lea    rax,[rdx+0x40]
   140004b2e:	xor    r9d,r9d
   140004b31:	cmp    WORD PTR [rax],r9w
   140004b35:	lea    r11,[rbp+0x47]
   140004b39:	mov    QWORD PTR [rsp+0x58],r11
   140004b3e:	lea    r11,[rbp+0x37]
   140004b42:	cmovne r9,rax
   140004b46:	mov    QWORD PTR [rsp+0x50],r11
   140004b4b:	lea    rax,[rdx+0x30]
   140004b4f:	mov    DWORD PTR [rsp+0x48],0x0
   140004b57:	mov    QWORD PTR [rsp+0x40],0x0
   140004b60:	xor    r8d,r8d
   140004b63:	cmp    WORD PTR [rax],r8w
   140004b67:	mov    QWORD PTR [rsp+0x38],0x0
   140004b70:	cmovne r8,rax
   140004b74:	lea    rax,[rdx+0x60]
   140004b78:	mov    QWORD PTR [rsp+0x30],rax
   140004b7d:	add    rdx,0x10
   140004b81:	mov    eax,DWORD PTR [rbx+0x50]
   140004b84:	mov    QWORD PTR [rsp+0x28],rcx
   140004b89:	mov    rcx,r10
   140004b8c:	mov    DWORD PTR [rsp+0x20],eax
   140004b90:	call   QWORD PTR [rip+0x14b2]        # 0x140006048
   140004b96:	mov    DWORD PTR [rbp+0x2f],eax
   140004b99:	mov    edx,0x28
   140004b9e:	lea    rcx,[rbp+0x27]
   140004ba2:	jmp    0x140004bdb
   140004ba4:	cmp    DWORD PTR [rip+0x7b69],0x0        # 0x14000c714
   140004bab:	je     0x140004bbe
   140004bad:	lea    rdx,[rip+0x46ac]        # 0x140009260
   140004bb4:	mov    ecx,0x2
   140004bb9:	call   0x140004770
   140004bbe:	xor    eax,eax
   140004bc0:	mov    QWORD PTR [rbp+0x1f],rax
   140004bc4:	mov    rax,QWORD PTR [rbx]
   140004bc7:	mov    DWORD PTR [rbp+0x1f],0xc00000bb
   140004bce:	mov    QWORD PTR [rbp+0x17],rax
   140004bd2:	lea    rcx,[rbp+0x17]
   140004bd6:	mov    edx,0x10
   140004bdb:	call   0x140004cb4
   140004be0:	mov    rcx,QWORD PTR [rbp+0x4f]
   140004be4:	xor    rcx,rsp
   140004be7:	call   0x1400037f0
   140004bec:	mov    rbx,QWORD PTR [rsp+0xc0]
   140004bf4:	add    rsp,0xa0
   140004bfb:	pop    rbp
   140004bfc:	ret    
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	int3   
   140004c01:	int3   
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	rex push rbx
   140004c06:	sub    rsp,0x40
   140004c0a:	mov    rax,QWORD PTR [rip+0x7aef]        # 0x14000c700
   140004c11:	mov    rbx,rdx
   140004c14:	test   rax,rax
   140004c17:	je     0x140004c66
   140004c19:	cmp    QWORD PTR [rax+0x40],0x0
   140004c1e:	je     0x140004c66
   140004c20:	xor    eax,eax
   140004c22:	cmp    DWORD PTR [rdx+0x28],0x50
   140004c26:	jae    0x140004c3a
   140004c28:	mov    QWORD PTR [rsp+0x28],rax
   140004c2d:	mov    rax,QWORD PTR [rdx]
   140004c30:	mov    DWORD PTR [rsp+0x28],0xc0000023
   140004c38:	jmp    0x140004c92
   140004c3a:	mov    QWORD PTR [rsp+0x38],rax
   140004c3f:	lea    r8,[rdx+0x38]
   140004c43:	mov    rax,QWORD PTR [rdx]
   140004c46:	add    rdx,0x10
   140004c4a:	mov    QWORD PTR [rsp+0x30],rax
   140004c4f:	call   QWORD PTR [rip+0x13e3]        # 0x140006038
   140004c55:	cmp    DWORD PTR [rbx+0x48],0x0
   140004c59:	mov    DWORD PTR [rsp+0x38],eax
   140004c5d:	je     0x140004ca6
   140004c5f:	lea    rcx,[rsp+0x30]
   140004c64:	jmp    0x140004c9c
   140004c66:	cmp    DWORD PTR [rip+0x7aa7],0x0        # 0x14000c714
   140004c6d:	je     0x140004c80
   140004c6f:	lea    rdx,[rip+0x45ea]        # 0x140009260
   140004c76:	mov    ecx,0x2
   140004c7b:	call   0x140004770
   140004c80:	xor    eax,eax
   140004c82:	mov    QWORD PTR [rsp+0x28],rax
   140004c87:	mov    rax,QWORD PTR [rbx]
   140004c8a:	mov    DWORD PTR [rsp+0x28],0xc00000bb
   140004c92:	mov    QWORD PTR [rsp+0x20],rax
   140004c97:	lea    rcx,[rsp+0x20]
   140004c9c:	mov    edx,0x10
   140004ca1:	call   0x140004cb4
   140004ca6:	add    rsp,0x40
   140004caa:	pop    rbx
   140004cab:	ret    
   140004cac:	int3   
   140004cad:	int3   
   140004cae:	int3   
   140004caf:	int3   
   140004cb0:	int3   
   140004cb1:	int3   
   140004cb2:	int3   
   140004cb3:	int3   
   140004cb4:	sub    rsp,0x48
   140004cb8:	xor    eax,eax
   140004cba:	mov    r9d,edx
   140004cbd:	mov    QWORD PTR [rsp+0x38],rax
   140004cc2:	mov    r8,rcx
   140004cc5:	mov    rcx,QWORD PTR [rip+0x7adc]        # 0x14000c7a8
   140004ccc:	mov    edx,0x39006f
   140004cd1:	mov    QWORD PTR [rsp+0x30],rax
   140004cd6:	mov    DWORD PTR [rsp+0x28],eax
   140004cda:	mov    QWORD PTR [rsp+0x20],rax
   140004cdf:	call   QWORD PTR [rip+0x1443]        # 0x140006128
   140004ce5:	test   eax,eax
   140004ce7:	jne    0x140004d10
   140004ce9:	call   QWORD PTR [rip+0x13f1]        # 0x1400060e0
   140004cef:	cmp    DWORD PTR [rip+0x7a1e],0x0        # 0x14000c714
   140004cf6:	je     0x140004d10
   140004cf8:	mov    r8d,eax
   140004cfb:	lea    rdx,[rip+0x44de]        # 0x1400091e0
   140004d02:	mov    ecx,0x1
   140004d07:	add    rsp,0x48
   140004d0b:	jmp    0x140004770
   140004d10:	add    rsp,0x48
   140004d14:	ret    
   140004d15:	int3   
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	int3   
   140004d19:	int3   
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	mov    QWORD PTR [rsp+0x18],rbx
   140004d21:	mov    QWORD PTR [rsp+0x20],rdi
   140004d26:	push   rbp
   140004d27:	lea    rbp,[rsp-0x20]
   140004d2c:	sub    rsp,0x130
   140004d33:	mov    rax,QWORD PTR [rip+0x72c6]        # 0x14000c000
   140004d3a:	xor    rax,rsp
   140004d3d:	mov    QWORD PTR [rbp+0x10],rax
   140004d41:	mov    rax,QWORD PTR [rip+0x79b8]        # 0x14000c700
   140004d48:	mov    rbx,rdx
   140004d4b:	mov    rdi,rcx
   140004d4e:	test   rax,rax
   140004d51:	je     0x140004ff0
   140004d57:	cmp    QWORD PTR [rax+0x38],0x0
   140004d5c:	je     0x140004ff0
   140004d62:	mov    eax,DWORD PTR [rdx+0x28]
   140004d65:	cmp    eax,0x78
   140004d68:	jae    0x140004d7f
   140004d6a:	xor    eax,eax
   140004d6c:	mov    QWORD PTR [rbp-0x78],rax
   140004d70:	mov    rax,QWORD PTR [rdx]
   140004d73:	mov    DWORD PTR [rbp-0x78],0xc0000023
   140004d7a:	jmp    0x14000501a
   140004d7f:	mov    rcx,QWORD PTR [rdx+0x38]
   140004d83:	cmp    rax,rcx
   140004d86:	jb     0x140004d6a
   140004d88:	test   rcx,rcx
   140004d8b:	je     0x140004d95
   140004d8d:	lea    rax,[rdx+rcx*1]
   140004d91:	mov    QWORD PTR [rdx+0x38],rax
   140004d95:	mov    rcx,QWORD PTR [rdx+0x68]
   140004d99:	mov    eax,DWORD PTR [rdx+0x28]
   140004d9c:	cmp    rax,rcx
   140004d9f:	jb     0x140004d6a
   140004da1:	test   rcx,rcx
   140004da4:	je     0x140004dae
   140004da6:	lea    rax,[rdx+rcx*1]
   140004daa:	mov    QWORD PTR [rdx+0x68],rax
   140004dae:	mov    rcx,QWORD PTR [rdx+0x68]
   140004db2:	xor    r9d,r9d
   140004db5:	test   rcx,rcx
   140004db8:	je     0x140004e22
   140004dba:	mov    rdx,QWORD PTR [rcx+0x8]
   140004dbe:	mov    eax,DWORD PTR [rbx+0x28]
   140004dc1:	cmp    rax,rdx
   140004dc4:	jb     0x140004fe1
   140004dca:	test   rdx,rdx
   140004dcd:	je     0x140004dd7
   140004dcf:	lea    rax,[rbx+rdx*1]
   140004dd3:	mov    QWORD PTR [rcx+0x8],rax
   140004dd7:	mov    rax,QWORD PTR [rbx+0x68]
   140004ddb:	mov    edx,r9d
   140004dde:	cmp    DWORD PTR [rax+0x4],edx
   140004de1:	jbe    0x140004e22
   140004de3:	nop    WORD PTR [rax+rax*1+0x0]
   140004dec:	mov    rax,QWORD PTR [rax+0x8]
   140004df0:	mov    r8d,edx
   140004df3:	shl    r8,0x4
   140004df7:	add    r8,rax
   140004dfa:	mov    eax,DWORD PTR [rbx+0x28]
   140004dfd:	mov    rcx,QWORD PTR [r8+0x8]
   140004e01:	cmp    rax,rcx
   140004e04:	jb     0x140004fe1
   140004e0a:	test   rcx,rcx
   140004e0d:	je     0x140004e17
   140004e0f:	lea    rax,[rbx+rcx*1]
   140004e13:	mov    QWORD PTR [r8+0x8],rax
   140004e17:	mov    rax,QWORD PTR [rbx+0x68]
   140004e1b:	inc    edx
   140004e1d:	cmp    edx,DWORD PTR [rax+0x4]
   140004e20:	jb     0x140004dec
   140004e22:	mov    rcx,QWORD PTR [rbx+0x70]
   140004e26:	mov    eax,DWORD PTR [rbx+0x28]
   140004e29:	cmp    rax,rcx
   140004e2c:	jb     0x140004fe1
   140004e32:	test   rcx,rcx
   140004e35:	je     0x140004e3f
   140004e37:	lea    rax,[rbx+rcx*1]
   140004e3b:	mov    QWORD PTR [rbx+0x70],rax
   140004e3f:	mov    rcx,QWORD PTR [rbx+0x70]
   140004e43:	test   rcx,rcx
   140004e46:	je     0x140004e65
   140004e48:	mov    rdx,QWORD PTR [rcx+0x8]
   140004e4c:	mov    eax,DWORD PTR [rbx+0x28]
   140004e4f:	cmp    rax,rdx
   140004e52:	jb     0x140004fe1
   140004e58:	test   rdx,rdx
   140004e5b:	je     0x140004e65
   140004e5d:	lea    rax,[rbx+rdx*1]
   140004e61:	mov    QWORD PTR [rcx+0x8],rax
   140004e65:	mov    rdx,QWORD PTR [rbx+0x68]
   140004e69:	mov    r11,r9
   140004e6c:	test   rdx,rdx
   140004e6f:	je     0x140004ea7
   140004e71:	mov    eax,DWORD PTR [rdx+0x4]
   140004e74:	test   eax,eax
   140004e76:	je     0x140004ea7
   140004e78:	lea    r8d,[rax-0x1]
   140004e7c:	mov    rax,QWORD PTR [rdx+0x8]
   140004e80:	mov    ecx,r8d
   140004e83:	add    rcx,rcx
   140004e86:	cmp    DWORD PTR [rax+rcx*8+0x4],0x81
   140004e8e:	jne    0x140004ea7
   140004e90:	mov    DWORD PTR [rdx+0x4],r8d
   140004e94:	mov    rax,QWORD PTR [rbx+0x68]
   140004e98:	mov    ecx,DWORD PTR [rax+0x4]
   140004e9b:	mov    rax,QWORD PTR [rax+0x8]
   140004e9f:	add    rcx,rcx
   140004ea2:	mov    r11,QWORD PTR [rax+rcx*8+0x8]
   140004ea7:	xor    eax,eax
   140004ea9:	mov    DWORD PTR [rbp-0x50],r9d
   140004ead:	mov    QWORD PTR [rbp-0x4c],rax
   140004eb1:	lea    rcx,[rbp-0x50]
   140004eb5:	mov    DWORD PTR [rbp-0x44],eax
   140004eb8:	mov    QWORD PTR [rbp-0x6c],rax
   140004ebc:	mov    DWORD PTR [rbp-0x64],eax
   140004ebf:	mov    QWORD PTR [rbp-0x5c],rax
   140004ec3:	mov    DWORD PTR [rbp-0x54],eax
   140004ec6:	mov    QWORD PTR [rbp-0x38],rax
   140004eca:	mov    QWORD PTR [rbp-0x28],rax
   140004ece:	mov    QWORD PTR [rbp-0x18],rax
   140004ed2:	mov    QWORD PTR [rbp-0x10],rax
   140004ed6:	mov    QWORD PTR [rbp-0x8],rax
   140004eda:	mov    QWORD PTR [rbp+0x0],rax
   140004ede:	mov    QWORD PTR [rbp+0x8],rax
   140004ee2:	lea    rax,[rbp-0x70]
   140004ee6:	mov    QWORD PTR [rbp-0x30],rax
   140004eea:	lea    rax,[rbp-0x60]
   140004eee:	mov    QWORD PTR [rbp-0x20],rax
   140004ef2:	mov    rax,QWORD PTR [rbx]
   140004ef5:	mov    QWORD PTR [rbp-0x40],rax
   140004ef9:	mov    rax,QWORD PTR [rbx+0x68]
   140004efd:	test   rax,rax
   140004f00:	mov    DWORD PTR [rbp-0x70],r9d
   140004f04:	mov    DWORD PTR [rbp-0x60],r9d
   140004f08:	cmovne rcx,rax
   140004f0c:	cmp    QWORD PTR [rbx+0x38],r9
   140004f10:	je     0x140004f16
   140004f12:	lea    r9,[rbx+0x30]
   140004f16:	lea    rax,[rbp-0x38]
   140004f1a:	mov    QWORD PTR [rsp+0x88],rax
   140004f22:	lea    r8,[rbx+0x50]
   140004f26:	lea    rax,[rbp+0x8]
   140004f2a:	mov    QWORD PTR [rsp+0x80],rax
   140004f32:	lea    r10,[rbx+0x40]
   140004f36:	lea    rax,[rbp+0x0]
   140004f3a:	mov    QWORD PTR [rsp+0x78],rax
   140004f3f:	lea    rdx,[rbx+0x10]
   140004f43:	lea    rax,[rbp-0x10]
   140004f47:	mov    QWORD PTR [rsp+0x70],rax
   140004f4c:	lea    rax,[rbp-0x60]
   140004f50:	mov    QWORD PTR [rsp+0x68],rax
   140004f55:	lea    rax,[rbp-0x28]
   140004f59:	mov    QWORD PTR [rsp+0x60],rax
   140004f5e:	lea    rax,[rbp-0x70]
   140004f62:	mov    QWORD PTR [rsp+0x58],rax
   140004f67:	mov    rax,QWORD PTR [rbx+0x70]
   140004f6b:	mov    QWORD PTR [rsp+0x50],rax
   140004f70:	mov    eax,DWORD PTR [rbx+0x64]
   140004f73:	mov    QWORD PTR [rsp+0x48],rcx
   140004f78:	mov    rcx,rdi
   140004f7b:	mov    QWORD PTR [rsp+0x40],r11
   140004f80:	mov    DWORD PTR [rsp+0x38],eax
   140004f84:	mov    eax,DWORD PTR [rbx+0x60]
   140004f87:	mov    DWORD PTR [rsp+0x30],eax
   140004f8b:	mov    QWORD PTR [rsp+0x28],r8
   140004f90:	lea    r8,[rbp-0x18]
   140004f94:	mov    QWORD PTR [rsp+0x20],r10
   140004f99:	call   QWORD PTR [rip+0x10a1]        # 0x140006040
   140004f9f:	mov    ebx,eax
   140004fa1:	test   eax,eax
   140004fa3:	jns    0x140004fc9
   140004fa5:	cmp    DWORD PTR [rip+0x7768],0x0        # 0x14000c714
   140004fac:	je     0x140004fc6
   140004fae:	lea    r8,[rip+0x18db]        # 0x140006890
   140004fb5:	mov    ecx,0x2
   140004fba:	lea    rdx,[rip+0x18ef]        # 0x1400068b0
   140004fc1:	call   0x140004770
   140004fc6:	mov    DWORD PTR [rbp-0x38],ebx
   140004fc9:	lea    rcx,[rbp-0x40]
   140004fcd:	call   0x14000579c
   140004fd2:	lea    rdx,[rbp-0x40]
   140004fd6:	lea    rcx,[rbp-0x70]
   140004fda:	call   0x140005300
   140004fdf:	jmp    0x14000502c
   140004fe1:	xor    eax,eax
   140004fe3:	mov    QWORD PTR [rbp-0x78],rax
   140004fe7:	mov    DWORD PTR [rbp-0x78],0xc0000023
   140004fee:	jmp    0x140005017
   140004ff0:	cmp    DWORD PTR [rip+0x771d],0x0        # 0x14000c714
   140004ff7:	je     0x14000500a
   140004ff9:	lea    rdx,[rip+0x1858]        # 0x140006858
   140005000:	mov    ecx,0x2
   140005005:	call   0x140004770
   14000500a:	xor    eax,eax
   14000500c:	mov    QWORD PTR [rbp-0x78],rax
   140005010:	mov    DWORD PTR [rbp-0x78],0xc00000bb
   140005017:	mov    rax,QWORD PTR [rbx]
   14000501a:	mov    edx,0x10
   14000501f:	mov    QWORD PTR [rbp-0x80],rax
   140005023:	lea    rcx,[rbp-0x80]
   140005027:	call   0x140004cb4
   14000502c:	mov    rcx,QWORD PTR [rbp+0x10]
   140005030:	xor    rcx,rsp
   140005033:	call   0x1400037f0
   140005038:	lea    r11,[rsp+0x130]
   140005040:	mov    rbx,QWORD PTR [r11+0x20]
   140005044:	mov    rdi,QWORD PTR [r11+0x28]
   140005048:	mov    rsp,r11
   14000504b:	pop    rbp
   14000504c:	ret    
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	int3   
   140005051:	int3   
   140005052:	int3   
   140005053:	int3   
   140005054:	int3   
   140005055:	int3   
   140005056:	int3   
   140005057:	int3   
   140005058:	int3   
   140005059:	int3   
   14000505a:	int3   
   14000505b:	int3   
   14000505c:	int3   
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	sub    rsp,0x58
   140005064:	test   r9d,r9d
   140005067:	je     0x14000508f
   140005069:	cmp    DWORD PTR [rip+0x76a4],0x0        # 0x14000c714
   140005070:	je     0x1400051de
   140005076:	mov    r8d,r9d
   140005079:	lea    rdx,[rip+0x4240]        # 0x1400092c0
   140005080:	mov    ecx,0x1
   140005085:	call   0x140004770
   14000508a:	jmp    0x1400051de
   14000508f:	mov    QWORD PTR [rsp+0x60],rbx
   140005094:	mov    rbx,QWORD PTR [rip+0x76e5]        # 0x14000c780
   14000509b:	mov    QWORD PTR [rsp+0x70],rsi
   1400050a0:	xor    esi,esi
   1400050a2:	mov    QWORD PTR [rsp+0x78],rdi
   1400050a7:	lea    rdi,[rbx+0x4]
   1400050ab:	cmp    DWORD PTR [rbx],esi
   1400050ad:	jbe    0x1400051a5
   1400050b3:	mov    QWORD PTR [rsp+0x68],rbp
   1400050b8:	mov    QWORD PTR [rsp+0x50],r14
   1400050bd:	mov    rcx,QWORD PTR gs:0x60
   1400050c6:	mov    edx,0x8
   1400050cb:	mov    r8d,DWORD PTR [rdi+0x28]
   1400050cf:	mov    r14,rdi
   1400050d2:	mov    rcx,QWORD PTR [rcx+0x30]
   1400050d6:	call   QWORD PTR [rip+0x1314]        # 0x1400063f0
   1400050dc:	mov    rbp,rax
   1400050df:	test   rax,rax
   1400050e2:	jne    0x140005119
   1400050e4:	cmp    DWORD PTR [rip+0x762a],eax        # 0x14000c714
   1400050ea:	je     0x1400050fb
   1400050ec:	lea    rdx,[rip+0x4205]        # 0x1400092f8
   1400050f3:	lea    ecx,[rax+0x1]
   1400050f6:	call   0x140004770
   1400050fb:	xor    eax,eax
   1400050fd:	lea    rcx,[rsp+0x28]
   140005102:	mov    QWORD PTR [rsp+0x30],rax
   140005107:	mov    rax,QWORD PTR [rdi]
   14000510a:	mov    QWORD PTR [rsp+0x28],rax
   14000510f:	mov    DWORD PTR [rsp+0x30],0xc000009a
   140005117:	jmp    0x140005187
   140005119:	mov    r8d,DWORD PTR [rdi+0x28]
   14000511d:	mov    rdx,rdi
   140005120:	mov    rcx,rax
   140005123:	call   0x140003adc
   140005128:	mov    eax,DWORD PTR [rdi+0x28]
   14000512b:	lea    r8,[rip+0x75fe]        # 0x14000c730
   140005132:	mov    rdx,rbp
   140005135:	lea    rcx,[rip+0xb4]        # 0x1400051f0
   14000513c:	add    rdi,rax
   14000513f:	call   QWORD PTR [rip+0x10fb]        # 0x140006240
   140005145:	test   eax,eax
   140005147:	jne    0x140005191
   140005149:	cmp    DWORD PTR [rip+0x75c5],eax        # 0x14000c714
   14000514f:	je     0x14000516b
   140005151:	call   QWORD PTR [rip+0xf89]        # 0x1400060e0
   140005157:	lea    rdx,[rip+0x41d2]        # 0x140009330
   14000515e:	mov    ecx,0x1
   140005163:	mov    r8d,eax
   140005166:	call   0x140004770
   14000516b:	xor    eax,eax
   14000516d:	lea    rcx,[rsp+0x38]
   140005172:	mov    QWORD PTR [rsp+0x40],rax
   140005177:	mov    rax,QWORD PTR [r14]
   14000517a:	mov    QWORD PTR [rsp+0x38],rax
   14000517f:	mov    DWORD PTR [rsp+0x40],0xc000009a
   140005187:	mov    edx,0x10
   14000518c:	call   0x140004cb4
   140005191:	inc    esi
   140005193:	cmp    esi,DWORD PTR [rbx]
   140005195:	jb     0x1400050bd
   14000519b:	mov    r14,QWORD PTR [rsp+0x50]
   1400051a0:	mov    rbp,QWORD PTR [rsp+0x68]
   1400051a5:	mov    r9d,0x8000
   1400051ab:	mov    QWORD PTR [rsp+0x20],0x0
   1400051b4:	lea    r8,[rsp+0x20]
   1400051b9:	or     rcx,0xffffffffffffffff
   1400051bd:	lea    rdx,[rip+0x75bc]        # 0x14000c780
   1400051c4:	call   QWORD PTR [rip+0x11c6]        # 0x140006390
   1400051ca:	call   0x140002a90
   1400051cf:	mov    rdi,QWORD PTR [rsp+0x78]
   1400051d4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400051d9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400051de:	add    rsp,0x58
   1400051e2:	ret    
   1400051e3:	int3   
   1400051e4:	int3   
   1400051e5:	int3   
   1400051e6:	int3   
   1400051e7:	int3   
   1400051e8:	int3   
   1400051e9:	int3   
   1400051ea:	int3   
   1400051eb:	int3   
   1400051ec:	int3   
   1400051ed:	int3   
   1400051ee:	int3   
   1400051ef:	int3   
   1400051f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400051f5:	push   rdi
   1400051f6:	sub    rsp,0x40
   1400051fa:	mov    ecx,DWORD PTR [rip+0x6e10]        # 0x14000c010
   140005200:	mov    rbx,rdx
   140005203:	add    rdx,0x20
   140005207:	call   QWORD PTR [rip+0xf9b]        # 0x1400061a8
   14000520d:	lea    rcx,[rbx+0x10]
   140005211:	call   0x1400056d8
   140005216:	test   rax,rax
   140005219:	jne    0x140005241
   14000521b:	mov    QWORD PTR [rsp+0x28],rax
   140005220:	lea    rcx,[rsp+0x20]
   140005225:	mov    rax,QWORD PTR [rbx]
   140005228:	mov    edx,0x10
   14000522d:	mov    QWORD PTR [rsp+0x20],rax
   140005232:	mov    DWORD PTR [rsp+0x28],0xc0000140
   14000523a:	call   0x140004cb4
   14000523f:	jmp    0x1400052bd
   140005241:	mov    r8d,DWORD PTR [rbx+0x8]
   140005245:	test   r8d,r8d
   140005248:	je     0x1400052b2
   14000524a:	cmp    r8d,0x2
   14000524e:	jbe    0x140005263
   140005250:	cmp    r8d,0x3
   140005254:	jne    0x140005270
   140005256:	mov    rdx,rbx
   140005259:	mov    rcx,rax
   14000525c:	call   0x140004c04
   140005261:	jmp    0x1400052bd
   140005263:	mov    rdx,rbx
   140005266:	mov    rcx,rax
   140005269:	call   0x140004d1c
   14000526e:	jmp    0x1400052bd
   140005270:	cmp    DWORD PTR [rip+0x749d],0x0        # 0x14000c714
   140005277:	je     0x14000528a
   140005279:	lea    rdx,[rip+0x4018]        # 0x140009298
   140005280:	mov    ecx,0x1
   140005285:	call   0x140004770
   14000528a:	xor    eax,eax
   14000528c:	lea    rcx,[rsp+0x30]
   140005291:	mov    QWORD PTR [rsp+0x38],rax
   140005296:	mov    edx,0x10
   14000529b:	mov    rax,QWORD PTR [rbx]
   14000529e:	mov    QWORD PTR [rsp+0x30],rax
   1400052a3:	mov    DWORD PTR [rsp+0x38],0xc0000002
   1400052ab:	call   0x140004cb4
   1400052b0:	jmp    0x1400052bd
   1400052b2:	mov    rdx,rbx
   1400052b5:	mov    rcx,rax
   1400052b8:	call   0x140004a50
   1400052bd:	mov    ecx,DWORD PTR [rip+0x6d4d]        # 0x14000c010
   1400052c3:	xor    edx,edx
   1400052c5:	call   QWORD PTR [rip+0xedd]        # 0x1400061a8
   1400052cb:	mov    rcx,QWORD PTR [rbx+0x20]
   1400052cf:	call   QWORD PTR [rip+0x10d3]        # 0x1400063a8
   1400052d5:	mov    rcx,QWORD PTR gs:0x60
   1400052de:	mov    r8,rbx
   1400052e1:	xor    edx,edx
   1400052e3:	mov    rcx,QWORD PTR [rcx+0x30]
   1400052e7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400052ec:	add    rsp,0x40
   1400052f0:	pop    rdi
   1400052f1:	rex.W jmp QWORD PTR [rip+0xfa0]        # 0x140006298
   1400052f8:	int3   
   1400052f9:	int3   
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	int3   
   1400052fd:	int3   
   1400052fe:	int3   
   1400052ff:	int3   
   140005300:	mov    QWORD PTR [rsp+0x20],rbx
   140005305:	push   rbp
   140005306:	push   rdi
   140005307:	push   r12
   140005309:	sub    rsp,0x20
   14000530d:	xor    r12d,r12d
   140005310:	mov    rbp,rdx
   140005313:	mov    rdi,rcx
   140005316:	cmp    QWORD PTR [rcx+0x8],r12
   14000531a:	je     0x1400053a2
   140005320:	mov    QWORD PTR [rsp+0x40],rsi
   140005325:	mov    esi,r12d
   140005328:	cmp    DWORD PTR [rcx+0x4],r12d
   14000532c:	jbe    0x14000537f
   14000532e:	mov    QWORD PTR [rsp+0x48],r14
   140005333:	mov    QWORD PTR [rsp+0x50],r15
   140005338:	mov    rax,QWORD PTR [rdi+0x8]
   14000533c:	mov    r14d,esi
   14000533f:	add    r14,r14
   140005342:	mov    r15,QWORD PTR [rax+r14*8+0x8]
   140005347:	test   r15,r15
   14000534a:	je     0x14000536e
   14000534c:	mov    rax,QWORD PTR [rip+0x73ad]        # 0x14000c700
   140005353:	mov    rbx,QWORD PTR [rax+0x8]
   140005357:	mov    rcx,rbx
   14000535a:	call   QWORD PTR [rip+0x10b0]        # 0x140006410
   140005360:	mov    rcx,r15
   140005363:	call   rbx
   140005365:	mov    rax,QWORD PTR [rdi+0x8]
   140005369:	mov    QWORD PTR [rax+r14*8+0x8],r12
   14000536e:	inc    esi
   140005370:	cmp    esi,DWORD PTR [rdi+0x4]
   140005373:	jb     0x140005338
   140005375:	mov    r15,QWORD PTR [rsp+0x50]
   14000537a:	mov    r14,QWORD PTR [rsp+0x48]
   14000537f:	mov    rax,QWORD PTR [rip+0x737a]        # 0x14000c700
   140005386:	mov    rbx,QWORD PTR [rax+0x8]
   14000538a:	mov    rcx,rbx
   14000538d:	call   QWORD PTR [rip+0x107d]        # 0x140006410
   140005393:	mov    rcx,QWORD PTR [rdi+0x8]
   140005397:	call   rbx
   140005399:	mov    rsi,QWORD PTR [rsp+0x40]
   14000539e:	mov    QWORD PTR [rdi+0x8],r12
   1400053a2:	mov    rax,QWORD PTR [rbp+0x20]
   1400053a6:	mov    rdi,QWORD PTR [rax+0x8]
   1400053aa:	test   rdi,rdi
   1400053ad:	je     0x1400053d0
   1400053af:	mov    rax,QWORD PTR [rip+0x734a]        # 0x14000c700
   1400053b6:	mov    rbx,QWORD PTR [rax+0x8]
   1400053ba:	mov    rcx,rbx
   1400053bd:	call   QWORD PTR [rip+0x104d]        # 0x140006410
   1400053c3:	mov    rcx,rdi
   1400053c6:	call   rbx
   1400053c8:	mov    rax,QWORD PTR [rbp+0x20]
   1400053cc:	mov    QWORD PTR [rax+0x8],r12
   1400053d0:	mov    rdi,QWORD PTR [rbp+0x18]
   1400053d4:	test   rdi,rdi
   1400053d7:	je     0x1400053f6
   1400053d9:	mov    rax,QWORD PTR [rip+0x7320]        # 0x14000c700
   1400053e0:	mov    rbx,QWORD PTR [rax+0x8]
   1400053e4:	mov    rcx,rbx
   1400053e7:	call   QWORD PTR [rip+0x1023]        # 0x140006410
   1400053ed:	mov    rcx,rdi
   1400053f0:	call   rbx
   1400053f2:	mov    QWORD PTR [rbp+0x18],r12
   1400053f6:	mov    rbx,QWORD PTR [rsp+0x58]
   1400053fb:	add    rsp,0x20
   1400053ff:	pop    r12
   140005401:	pop    rdi
   140005402:	pop    rbp
   140005403:	ret    
   140005404:	int3   
   140005405:	int3   
   140005406:	int3   
   140005407:	int3   
   140005408:	int3   
   140005409:	int3   
   14000540a:	int3   
   14000540b:	int3   
   14000540c:	mov    QWORD PTR [rsp+0x8],rbx
   140005411:	push   rdi
   140005412:	sub    rsp,0x20
   140005416:	mov    QWORD PTR [rdx],0x0
   14000541d:	mov    rdi,rdx
   140005420:	cmp    QWORD PTR [rcx+0x8],0x0
   140005425:	mov    rbx,rcx
   140005428:	jne    0x140005431
   14000542a:	mov    eax,0xc00000a0
   14000542f:	jmp    0x140005492
   140005431:	test   r8,r8
   140005434:	jne    0x14000543a
   140005436:	xor    eax,eax
   140005438:	jmp    0x140005492
   14000543a:	mov    QWORD PTR [rdx],0x0
   140005441:	cmp    DWORD PTR [rcx+0x10],0x10
   140005445:	jb     0x14000548d
   140005447:	mov    rax,QWORD PTR [rcx]
   14000544a:	mov    QWORD PTR [rdx],rax
   14000544d:	add    QWORD PTR [rcx],0x10
   140005451:	add    DWORD PTR [rcx+0x10],0xfffffff0
   140005455:	mov    rax,QWORD PTR [rdx]
   140005458:	test   rax,rax
   14000545b:	je     0x14000548d
   14000545d:	movups xmm0,XMMWORD PTR [r8]
   140005461:	movups XMMWORD PTR [rax],xmm0
   140005464:	mov    rdx,QWORD PTR [rdx]
   140005467:	mov    r9d,DWORD PTR [r8]
   14000546a:	add    rdx,0x8
   14000546e:	mov    r8,QWORD PTR [r8+0x8]
   140005472:	call   0x1400049cc
   140005477:	test   eax,eax
   140005479:	js     0x140005484
   14000547b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000547f:	sub    QWORD PTR [rdi],rcx
   140005482:	jmp    0x140005492
   140005484:	mov    QWORD PTR [rdi],0x0
   14000548b:	jmp    0x140005492
   14000548d:	mov    eax,0xc0000023
   140005492:	mov    rbx,QWORD PTR [rsp+0x30]
   140005497:	add    rsp,0x20
   14000549b:	pop    rdi
   14000549c:	ret    
   14000549d:	int3   
   14000549e:	int3   
   14000549f:	int3   
   1400054a0:	int3   
   1400054a1:	int3   
   1400054a2:	int3   
   1400054a3:	int3   
   1400054a4:	mov    QWORD PTR [rsp+0x20],rbx
   1400054a9:	push   rsi
   1400054aa:	push   rdi
   1400054ab:	push   r12
   1400054ad:	sub    rsp,0x20
   1400054b1:	xor    r12d,r12d
   1400054b4:	mov    rsi,r8
   1400054b7:	mov    QWORD PTR [rdx],r12
   1400054ba:	mov    rdi,rdx
   1400054bd:	mov    rbx,rcx
   1400054c0:	cmp    QWORD PTR [rcx+0x8],r12
   1400054c4:	jne    0x1400054d0
   1400054c6:	mov    eax,0xc00000a0
   1400054cb:	jmp    0x1400055b1
   1400054d0:	test   r8,r8
   1400054d3:	jne    0x1400054dc
   1400054d5:	xor    eax,eax
   1400054d7:	jmp    0x1400055b1
   1400054dc:	mov    QWORD PTR [rdx],r12
   1400054df:	cmp    DWORD PTR [rcx+0x10],0x10
   1400054e3:	jb     0x1400055c4
   1400054e9:	mov    rax,QWORD PTR [rcx]
   1400054ec:	mov    QWORD PTR [rdx],rax
   1400054ef:	add    QWORD PTR [rcx],0x10
   1400054f3:	add    DWORD PTR [rcx+0x10],0xfffffff0
   1400054f7:	mov    rax,QWORD PTR [rdx]
   1400054fa:	test   rax,rax
   1400054fd:	je     0x1400055c4
   140005503:	movups xmm0,XMMWORD PTR [r8]
   140005507:	mov    QWORD PTR [rsp+0x40],rbp
   14000550c:	movups XMMWORD PTR [rax],xmm0
   14000550f:	mov    ecx,DWORD PTR [r8+0x4]
   140005513:	mov    rdx,QWORD PTR [rdx]
   140005516:	shl    ecx,0x4
   140005519:	mov    QWORD PTR [rdx+0x8],r12
   14000551d:	cmp    DWORD PTR [rbx+0x10],ecx
   140005520:	jb     0x140005531
   140005522:	mov    rax,QWORD PTR [rbx]
   140005525:	mov    QWORD PTR [rdx+0x8],rax
   140005529:	mov    eax,ecx
   14000552b:	add    QWORD PTR [rbx],rax
   14000552e:	sub    DWORD PTR [rbx+0x10],ecx
   140005531:	mov    rax,QWORD PTR [rdi]
   140005534:	mov    rbp,QWORD PTR [rax+0x8]
   140005538:	test   rbp,rbp
   14000553b:	jne    0x140005547
   14000553d:	mov    QWORD PTR [rdi],r12
   140005540:	mov    eax,0xc0000023
   140005545:	jmp    0x1400055ac
   140005547:	mov    QWORD PTR [rsp+0x48],r14
   14000554c:	mov    r14,QWORD PTR [r8+0x8]
   140005550:	mov    QWORD PTR [rsp+0x50],r15
   140005555:	mov    r15d,r12d
   140005558:	cmp    DWORD PTR [r8+0x4],r12d
   14000555c:	jbe    0x14000558e
   14000555e:	movups xmm0,XMMWORD PTR [r14]
   140005562:	lea    rdx,[rbp+0x8]
   140005566:	mov    rcx,rbx
   140005569:	movups XMMWORD PTR [rbp+0x0],xmm0
   14000556d:	mov    r9d,DWORD PTR [r14]
   140005570:	mov    r8,QWORD PTR [r14+0x8]
   140005574:	call   0x1400049cc
   140005579:	test   eax,eax
   14000557b:	js     0x1400055bf
   14000557d:	add    rbp,0x10
   140005581:	add    r14,0x10
   140005585:	inc    r15d
   140005588:	cmp    r15d,DWORD PTR [rsi+0x4]
   14000558c:	jb     0x14000555e
   14000558e:	mov    rax,QWORD PTR [rbx+0x8]
   140005592:	mov    rcx,QWORD PTR [rdi]
   140005595:	sub    QWORD PTR [rcx+0x8],rax
   140005599:	mov    rax,QWORD PTR [rbx+0x8]
   14000559d:	sub    QWORD PTR [rdi],rax
   1400055a0:	xor    eax,eax
   1400055a2:	mov    r14,QWORD PTR [rsp+0x48]
   1400055a7:	mov    r15,QWORD PTR [rsp+0x50]
   1400055ac:	mov    rbp,QWORD PTR [rsp+0x40]
   1400055b1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400055b6:	add    rsp,0x20
   1400055ba:	pop    r12
   1400055bc:	pop    rdi
   1400055bd:	pop    rsi
   1400055be:	ret    
   1400055bf:	mov    QWORD PTR [rdi],r12
   1400055c2:	jmp    0x1400055a2
   1400055c4:	mov    eax,0xc0000023
   1400055c9:	jmp    0x1400055b1
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	int3   
   1400055d1:	int3   
   1400055d2:	int3   
   1400055d3:	int3   
   1400055d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400055d9:	xor    r11d,r11d
   1400055dc:	mov    rbx,r8
   1400055df:	mov    QWORD PTR [rdx],r11
   1400055e2:	mov    r10,rdx
   1400055e5:	mov    r9,rcx
   1400055e8:	cmp    QWORD PTR [rcx+0x8],r11
   1400055ec:	jne    0x1400055f8
   1400055ee:	mov    eax,0xc00000a0
   1400055f3:	jmp    0x1400056ca
   1400055f8:	test   rbx,rbx
   1400055fb:	je     0x1400056be
   140005601:	mov    QWORD PTR [rdx],r11
   140005604:	cmp    DWORD PTR [rcx+0x10],0x10
   140005608:	jb     0x1400056c2
   14000560e:	mov    rax,QWORD PTR [rcx]
   140005611:	mov    QWORD PTR [rdx],rax
   140005614:	add    QWORD PTR [rcx],0x10
   140005618:	add    DWORD PTR [rcx+0x10],0xfffffff0
   14000561c:	mov    rcx,QWORD PTR [rdx]
   14000561f:	test   rcx,rcx
   140005622:	je     0x1400056c2
   140005628:	mov    eax,DWORD PTR [r8+0x4]
   14000562c:	mov    QWORD PTR [rcx+0x8],r11
   140005630:	lea    edx,[rax*8+0x0]
   140005637:	cmp    DWORD PTR [r9+0x10],edx
   14000563b:	jb     0x14000564d
   14000563d:	mov    rax,QWORD PTR [r9]
   140005640:	mov    QWORD PTR [rcx+0x8],rax
   140005644:	mov    eax,edx
   140005646:	add    QWORD PTR [r9],rax
   140005649:	sub    DWORD PTR [r9+0x10],edx
   14000564d:	mov    rcx,QWORD PTR [r10]
   140005650:	cmp    QWORD PTR [rcx+0x8],r11
   140005654:	jne    0x14000565b
   140005656:	mov    QWORD PTR [r10],r11
   140005659:	jmp    0x1400056c5
   14000565b:	mov    eax,DWORD PTR [r8]
   14000565e:	mov    DWORD PTR [rcx],eax
   140005660:	mov    rcx,QWORD PTR [r10]
   140005663:	mov    eax,DWORD PTR [r8+0x4]
   140005667:	mov    DWORD PTR [rcx+0x4],eax
   14000566a:	cmp    DWORD PTR [r8+0x4],r11d
   14000566e:	jbe    0x1400056ac
   140005670:	mov    rdx,QWORD PTR [rbx+0x8]
   140005674:	mov    eax,r11d
   140005677:	inc    r11d
   14000567a:	lea    r8,[rax*8+0x0]
   140005682:	mov    rax,QWORD PTR [r10]
   140005685:	mov    rcx,QWORD PTR [rax+0x8]
   140005689:	mov    eax,DWORD PTR [r8+rdx*1+0x4]
   14000568e:	mov    DWORD PTR [rcx+r8*1+0x4],eax
   140005693:	mov    rax,QWORD PTR [r10]
   140005696:	mov    rdx,QWORD PTR [rbx+0x8]
   14000569a:	mov    rcx,QWORD PTR [rax+0x8]
   14000569e:	mov    eax,DWORD PTR [r8+rdx*1]
   1400056a2:	mov    DWORD PTR [r8+rcx*1],eax
   1400056a6:	cmp    r11d,DWORD PTR [rbx+0x4]
   1400056aa:	jb     0x140005670
   1400056ac:	mov    rax,QWORD PTR [r9+0x8]
   1400056b0:	mov    rcx,QWORD PTR [r10]
   1400056b3:	sub    QWORD PTR [rcx+0x8],rax
   1400056b7:	mov    rax,QWORD PTR [r9+0x8]
   1400056bb:	sub    QWORD PTR [r10],rax
   1400056be:	xor    eax,eax
   1400056c0:	jmp    0x1400056ca
   1400056c2:	mov    QWORD PTR [rdx],r11
   1400056c5:	mov    eax,0xc0000023
   1400056ca:	mov    rbx,QWORD PTR [rsp+0x8]
   1400056cf:	ret    
   1400056d0:	int3   
   1400056d1:	int3   
   1400056d2:	int3   
   1400056d3:	int3   
   1400056d4:	int3   
   1400056d5:	int3   
   1400056d6:	int3   
   1400056d7:	int3   
   1400056d8:	sub    rsp,0x38
   1400056dc:	mov    rax,QWORD PTR [rip+0x70cd]        # 0x14000c7b0
   1400056e3:	test   rax,rax
   1400056e6:	jne    0x14000578f
   1400056ec:	mov    rax,QWORD PTR [rcx]
   1400056ef:	mov    QWORD PTR [rsp+0x20],rax
   1400056f4:	mov    rax,QWORD PTR [rcx+0x8]
   1400056f8:	lea    rcx,[rip+0x6971]        # 0x14000c070
   1400056ff:	mov    QWORD PTR [rsp+0x28],rax
   140005704:	call   QWORD PTR [rip+0xc7e]        # 0x140006388
   14000570a:	cmp    QWORD PTR [rip+0x709e],0x0        # 0x14000c7b0
   140005712:	jne    0x14000577b
   140005714:	mov    rax,QWORD PTR [rip+0x6fe5]        # 0x14000c700
   14000571b:	mov    r8d,0xc0000002
   140005721:	mov    QWORD PTR [rsp+0x30],rbx
   140005726:	test   rax,rax
   140005729:	je     0x14000575c
   14000572b:	mov    rbx,QWORD PTR [rax+0x80]
   140005732:	test   rbx,rbx
   140005735:	je     0x14000575c
   140005737:	mov    rcx,rbx
   14000573a:	call   QWORD PTR [rip+0xcd0]        # 0x140006410
   140005740:	lea    r8,[rip+0x7069]        # 0x14000c7b0
   140005747:	lea    rdx,[rip+0x3aca]        # 0x140009218
   14000574e:	lea    rcx,[rsp+0x20]
   140005753:	call   rbx
   140005755:	mov    r8d,eax
   140005758:	test   eax,eax
   14000575a:	jns    0x140005776
   14000575c:	cmp    DWORD PTR [rip+0x6fb1],0x0        # 0x14000c714
   140005763:	je     0x140005776
   140005765:	lea    rdx,[rip+0x3ac4]        # 0x140009230
   14000576c:	mov    ecx,0x1
   140005771:	call   0x140004770
   140005776:	mov    rbx,QWORD PTR [rsp+0x30]
   14000577b:	lea    rcx,[rip+0x68ee]        # 0x14000c070
   140005782:	call   QWORD PTR [rip+0xbf0]        # 0x140006378
   140005788:	mov    rax,QWORD PTR [rip+0x7021]        # 0x14000c7b0
   14000578f:	add    rsp,0x38
   140005793:	ret    
   140005794:	int3   
   140005795:	int3   
   140005796:	int3   
   140005797:	int3   
   140005798:	int3   
   140005799:	int3   
   14000579a:	int3   
   14000579b:	int3   
   14000579c:	mov    rax,rsp
   14000579f:	push   rbx
   1400057a0:	push   rdi
   1400057a1:	sub    rsp,0x58
   1400057a5:	xor    r10d,r10d
   1400057a8:	mov    QWORD PTR [rax-0x18],rsi
   1400057ac:	mov    rsi,QWORD PTR [rcx+0x10]
   1400057b0:	xorps  xmm0,xmm0
   1400057b3:	mov    DWORD PTR [rax-0x38],r10d
   1400057b7:	mov    rbx,rcx
   1400057ba:	movdqu XMMWORD PTR [rax-0x48],xmm0
   1400057bf:	test   rsi,rsi
   1400057c2:	je     0x140005929
   1400057c8:	mov    r11d,DWORD PTR [rsi+0x4]
   1400057cc:	mov    r10d,0x10
   1400057d2:	mov    DWORD PTR [rax-0x38],r10d
   1400057d6:	test   r11d,r11d
   1400057d9:	je     0x140005929
   1400057df:	lea    r10d,[r11+0x1]
   1400057e3:	xor    edi,edi
   1400057e5:	shl    r10d,0x4
   1400057e9:	mov    DWORD PTR [rax-0x38],r10d
   1400057ed:	test   r11d,r11d
   1400057f0:	je     0x140005929
   1400057f6:	cmp    r11d,0x8
   1400057fa:	jb     0x140005901
   140005800:	mov    QWORD PTR [rax+0x18],rbp
   140005804:	xorps  xmm5,xmm5
   140005807:	mov    QWORD PTR [rax-0x20],r14
   14000580b:	mov    ebp,r11d
   14000580e:	mov    QWORD PTR [rax-0x28],r15
   140005812:	movdqa xmm4,xmm5
   140005816:	mov    r15,QWORD PTR [rsi+0x8]
   14000581a:	mov    eax,r11d
   14000581d:	and    eax,0x7
   140005820:	mov    r14d,0x2
   140005826:	sub    ebp,eax
   140005828:	mov    r9d,edi
   14000582b:	lea    r8d,[r14+0x1]
   14000582f:	add    r8,r8
   140005832:	mov    edx,r14d
   140005835:	add    rdx,rdx
   140005838:	lea    ecx,[r14-0x1]
   14000583c:	add    rcx,rcx
   14000583f:	add    r9,r9
   140005842:	add    edi,0x8
   140005845:	movd   xmm1,DWORD PTR [r15+r8*8]
   14000584b:	lea    r8d,[r14+0x4]
   14000584f:	movd   xmm0,DWORD PTR [r15+rdx*8]
   140005855:	add    r8,r8
   140005858:	movd   xmm2,DWORD PTR [r15+rcx*8]
   14000585e:	lea    edx,[r14+0x3]
   140005862:	movd   xmm3,DWORD PTR [r15+r9*8]
   140005868:	lea    ecx,[r14+0x2]
   14000586c:	punpckldq xmm3,xmm0
   140005870:	lea    r9d,[r14+0x5]
   140005874:	movd   xmm0,DWORD PTR [r15+r8*8]
   14000587a:	add    r9,r9
   14000587d:	punpckldq xmm2,xmm1
   140005881:	add    rdx,rdx
   140005884:	punpckldq xmm3,xmm2
   140005888:	add    rcx,rcx
   14000588b:	paddd  xmm3,xmm5
   14000588f:	add    r14d,0x8
   140005893:	movd   xmm1,DWORD PTR [r15+r9*8]
   140005899:	movdqa xmm5,xmm3
   14000589d:	movd   xmm2,DWORD PTR [r15+rdx*8]
   1400058a3:	movd   xmm3,DWORD PTR [r15+rcx*8]
   1400058a9:	punpckldq xmm3,xmm0
   1400058ad:	punpckldq xmm2,xmm1
   1400058b1:	punpckldq xmm3,xmm2
   1400058b5:	paddd  xmm3,xmm4
   1400058b9:	movdqa xmm4,xmm3
   1400058bd:	cmp    edi,ebp
   1400058bf:	jb     0x140005828
   1400058c5:	mov    r15,QWORD PTR [rsp+0x40]
   1400058ca:	paddd  xmm4,xmm5
   1400058ce:	mov    r14,QWORD PTR [rsp+0x48]
   1400058d3:	movdqa xmm0,xmm4
   1400058d7:	mov    rbp,QWORD PTR [rsp+0x80]
   1400058df:	psrldq xmm0,0x8
   1400058e4:	paddd  xmm4,xmm0
   1400058e8:	movdqa xmm0,xmm4
   1400058ec:	psrldq xmm0,0x4
   1400058f1:	paddd  xmm4,xmm0
   1400058f5:	movd   eax,xmm4
   1400058f9:	add    r10d,eax
   1400058fc:	mov    DWORD PTR [rsp+0x30],r10d
   140005901:	cmp    edi,r11d
   140005904:	jae    0x140005929
   140005906:	mov    rdx,QWORD PTR [rsi+0x8]
   14000590a:	mov    eax,edi
   14000590c:	shl    rax,0x4
   140005910:	sub    r11d,edi
   140005913:	mov    ecx,r11d
   140005916:	add    r10d,DWORD PTR [rax+rdx*1]
   14000591a:	lea    rax,[rax+0x10]
   14000591e:	sub    rcx,0x1
   140005922:	jne    0x140005916
   140005924:	mov    DWORD PTR [rsp+0x30],r10d
   140005929:	mov    rax,QWORD PTR [rbx+0x18]
   14000592d:	mov    rsi,QWORD PTR [rsp+0x50]
   140005932:	test   rax,rax
   140005935:	je     0x140005950
   140005937:	mov    ecx,DWORD PTR [rax+0x4]
   14000593a:	add    r10d,0x10
   14000593e:	mov    DWORD PTR [rsp+0x30],r10d
   140005943:	test   ecx,ecx
   140005945:	je     0x140005950
   140005947:	lea    r10d,[r10+rcx*8]
   14000594b:	mov    DWORD PTR [rsp+0x30],r10d
   140005950:	mov    rax,QWORD PTR [rbx+0x20]
   140005954:	test   rax,rax
   140005957:	je     0x140005971
   140005959:	add    r10d,0x10
   14000595d:	cmp    QWORD PTR [rax+0x8],0x0
   140005962:	mov    DWORD PTR [rsp+0x30],r10d
   140005967:	je     0x140005971
   140005969:	add    r10d,DWORD PTR [rax]
   14000596c:	mov    DWORD PTR [rsp+0x30],r10d
   140005971:	lea    r8,[rsp+0x70]
   140005976:	mov    QWORD PTR [rsp+0x78],0x0
   14000597f:	lea    rdx,[rsp+0x78]
   140005984:	mov    DWORD PTR [rsp+0x70],0x0
   14000598c:	lea    rcx,[rsp+0x20]
   140005991:	call   0x140004914
   140005996:	mov    rdi,QWORD PTR [rsp+0x78]
   14000599b:	test   rdi,rdi
   14000599e:	jne    0x1400059aa
   1400059a0:	mov    eax,0xc000009a
   1400059a5:	jmp    0x140005a2e
   1400059aa:	movaps xmm0,XMMWORD PTR [rbx]
   1400059ad:	lea    rdx,[rdi+0x10]
   1400059b1:	movups XMMWORD PTR [rdi],xmm0
   1400059b4:	lea    rcx,[rsp+0x20]
   1400059b9:	movaps xmm1,XMMWORD PTR [rbx+0x10]
   1400059bd:	movups XMMWORD PTR [rdi+0x10],xmm1
   1400059c1:	movaps xmm0,XMMWORD PTR [rbx+0x20]
   1400059c5:	movups XMMWORD PTR [rdi+0x20],xmm0
   1400059c9:	movaps xmm1,XMMWORD PTR [rbx+0x30]
   1400059cd:	movups XMMWORD PTR [rdi+0x30],xmm1
   1400059d1:	movaps xmm0,XMMWORD PTR [rbx+0x40]
   1400059d5:	movups XMMWORD PTR [rdi+0x40],xmm0
   1400059d9:	mov    r8,QWORD PTR [rbx+0x10]
   1400059dd:	call   0x1400054a4
   1400059e2:	mov    r8,QWORD PTR [rbx+0x18]
   1400059e6:	lea    rdx,[rdi+0x18]
   1400059ea:	lea    rcx,[rsp+0x20]
   1400059ef:	call   0x1400055d4
   1400059f4:	mov    r8,QWORD PTR [rbx+0x20]
   1400059f8:	lea    rdx,[rdi+0x20]
   1400059fc:	lea    rcx,[rsp+0x20]
   140005a01:	call   0x14000540c
   140005a06:	mov    edx,DWORD PTR [rsp+0x70]
   140005a0a:	mov    rcx,rdi
   140005a0d:	call   0x140004cb4
   140005a12:	mov    rcx,QWORD PTR gs:0x60
   140005a1b:	xor    edx,edx
   140005a1d:	mov    r8,QWORD PTR [rsp+0x78]
   140005a22:	mov    rcx,QWORD PTR [rcx+0x30]
   140005a26:	call   QWORD PTR [rip+0x86c]        # 0x140006298
   140005a2c:	xor    eax,eax
   140005a2e:	add    rsp,0x58
   140005a32:	pop    rdi
   140005a33:	pop    rbx
   140005a34:	ret    

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	lods   al,BYTE PTR cs:[rsi]
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	rex.RX lods al,BYTE PTR ds:[rsi]
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	(bad)  
   140006011:	lods   al,BYTE PTR ds:[rsi]
   140006012:	add    BYTE PTR [rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	jbe    0x140005fc6
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	add    BYTE PTR [rax],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	mov    BYTE PTR [rax+rax*1+0x0],ch
   140006027:	add    BYTE PTR [rsp+rbp*4],bl
	...
   140006036:	add    BYTE PTR [rax],al
   140006038:	adc    ch,BYTE PTR [rbp+0x0]
   14000603e:	add    BYTE PTR [rax],al
   140006040:	hlt    
   140006041:	lods   al,BYTE PTR ds:[rsi]
   140006042:	add    BYTE PTR [rax],al
   140006044:	add    BYTE PTR [rax],al
   140006046:	add    BYTE PTR [rax],al
   140006048:	(bad)  
   140006049:	lods   al,BYTE PTR ds:[rsi]
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	add    BYTE PTR [rax],al
   14000604e:	add    BYTE PTR [rax],al
   140006050:	mov    esp,0xac
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rax+0xac],ch
	...
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rdx+0xa7],al
   14000606d:	add    BYTE PTR [rax],al
   14000606f:	add    BYTE PTR [rsi-0x59],dh
   140006072:	add    BYTE PTR [rax],al
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	ins    BYTE PTR es:[rdi],dx
   140006079:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	(bad)  
   140006081:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006082:	add    BYTE PTR [rax],al
   140006084:	add    BYTE PTR [rax],al
   140006086:	add    BYTE PTR [rax],al
   140006088:	mov    WORD PTR [rdx+0x0],?
   14000608e:	add    BYTE PTR [rax],al
   140006090:	push   rax
   140006091:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006092:	add    BYTE PTR [rax],al
   140006094:	add    BYTE PTR [rax],al
   140006096:	add    BYTE PTR [rax],al
   140006098:	xchg   esi,eax
   140006099:	mov    dl,0x0
	...
   1400060a7:	add    BYTE PTR [rdi+riz*4+0x0],ch
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	ret    0xa7
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rdi+riz*4+0x0],dh
	...
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	rex.WR lods rax,QWORD PTR ds:[rsi]
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	cmp    al,0xad
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	mov    ch,BYTE PTR [rbp+0x0]
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	push   0xffffffffffffffad
   1400060e2:	add    BYTE PTR [rax],al
   1400060e4:	add    BYTE PTR [rax],al
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	jp     0x140006097
	...
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	fisubr WORD PTR [rbp+0x0]
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	shr    BYTE PTR [rbp+0x0],1
	...
   14000610e:	add    BYTE PTR [rax],al
   140006110:	imul   BYTE PTR [rsi+0x0]
   140006116:	add    BYTE PTR [rax],al
   140006118:	add    al,0xaf
	...
   140006126:	add    BYTE PTR [rax],al
   140006128:	adc    ch,BYTE PTR [rsi+0x0]
	...
   140006136:	add    BYTE PTR [rax],al
   140006138:	push   rsp
   140006139:	scas   al,BYTE PTR es:[rdi]
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	rex.X scas al,BYTE PTR es:[rdi]
	...
   14000614e:	add    BYTE PTR [rax],al
   140006150:	cmp    ch,BYTE PTR [rdi+0x0]
   140006156:	add    BYTE PTR [rax],al
   140006158:	jl     0x140006109
	...
   140006166:	add    BYTE PTR [rax],al
   140006168:	sub    al,0xb1
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	push   0xaf
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    BYTE PTR [rdi+rbp*4+0x0],dl
   14000617b:	add    BYTE PTR [rax],al
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rdx],cl
   140006181:	mov    al,0x0
   140006183:	add    BYTE PTR [rax],al
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    ah,ch
   140006189:	mov    al,0x0
   14000618b:	add    BYTE PTR [rax],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    dh,dl
   140006191:	mov    al,0x0
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rax+0xaf],bh
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    ah,ah
   1400061a1:	scas   eax,DWORD PTR es:[rdi]
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	sub    al,0xb0
   1400061aa:	add    BYTE PTR [rax],al
   1400061ac:	add    BYTE PTR [rax],al
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	jl     0x140006162
	...
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	mov    esp,0xb0
	...
   1400061cd:	add    BYTE PTR [rax],al
   1400061cf:	add    BYTE PTR [rsi+rbp*4+0x0],ah
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	nop
   1400061d9:	scas   al,BYTE PTR es:[rdi]
   1400061da:	add    BYTE PTR [rax],al
   1400061dc:	add    BYTE PTR [rax],al
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	mov    ah,0xae
   1400061e2:	add    BYTE PTR [rax],al
   1400061e4:	add    BYTE PTR [rax],al
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	(bad)  
   1400061e9:	scas   al,BYTE PTR es:[rdi]
	...
   1400061f6:	add    BYTE PTR [rax],al
   1400061f8:	(bad)  
   1400061f9:	scas   eax,DWORD PTR es:[rdi]
   1400061fa:	add    BYTE PTR [rax],al
   1400061fc:	add    BYTE PTR [rax],al
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	(bad)  
   140006201:	scas   eax,DWORD PTR es:[rdi]
   140006202:	add    BYTE PTR [rax],al
   140006204:	add    BYTE PTR [rax],al
   140006206:	add    BYTE PTR [rax],al
   140006208:	xchg   esi,eax
   140006209:	scas   eax,DWORD PTR es:[rdi]
	...
   140006216:	add    BYTE PTR [rax],al
   140006218:	ins    BYTE PTR es:[rdi],dx
   140006219:	mov    al,0x0
   14000621b:	add    BYTE PTR [rax],al
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rdx],al
   140006221:	mov    cl,0x0
   140006223:	add    BYTE PTR [rax],al
   140006225:	add    BYTE PTR [rax],al
   140006227:	add    BYTE PTR [rcx+rsi*4],bl
	...
   140006236:	add    BYTE PTR [rax],al
   140006238:	hlt    
   140006239:	scas   eax,DWORD PTR es:[rdi]
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	add    BYTE PTR [rax],al
   14000623e:	add    BYTE PTR [rax],al
   140006240:	mov    BYTE PTR [rax+0x0],dh
   140006246:	add    BYTE PTR [rax],al
   140006248:	sbb    BYTE PTR [rax+0x0],dh
   14000624e:	add    BYTE PTR [rax],al
   140006250:	cmp    dh,BYTE PTR [rax+0x0]
   140006256:	add    BYTE PTR [rax],al
   140006258:	rex.WRX mov al,0x0
   14000625b:	add    BYTE PTR [rax],al
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    BYTE PTR [rsi+0xb0],ah
	...
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    BYTE PTR [rdx+rsi*4+0x0],cl
	...
   14000627f:	add    BYTE PTR [rdx+0xaf],ah
	...
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rax-0x56],ah
   140006292:	add    BYTE PTR [rax],al
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	js     0x140006244
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	add    BYTE PTR [rax],al
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	xchg   BYTE PTR [rdx+0x0],ch
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	or     ch,BYTE PTR [rcx+0x0]
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	(bad)  
   1400062b1:	test   eax,0x0
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	cmp    BYTE PTR [rcx+0x0],ch
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	push   rax
   1400062c1:	test   eax,0x0
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	rex.WX stos BYTE PTR es:[rdi],al
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	add    BYTE PTR [rax],al
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	cs stos BYTE PTR es:[rdi],al
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	sbb    BYTE PTR [rdx+0x0],ch
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	add    BYTE PTR [rdx+0x0],ch
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	jl     0x140006293
   1400062ea:	add    BYTE PTR [rax],al
   1400062ec:	add    BYTE PTR [rax],al
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	mov    WORD PTR [rcx+0x0],gs
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	stos   BYTE PTR es:[rdi],al
   1400062f9:	test   eax,0x0
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	retf   0xa9
   140006303:	add    BYTE PTR [rax],al
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    dh,ch
   140006309:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000630a:	add    BYTE PTR [rax],al
   14000630c:	add    BYTE PTR [rax],al
   14000630e:	add    BYTE PTR [rax],al
   140006310:	outs   dx,BYTE PTR ds:[rsi]
   140006311:	test   eax,0x0
   140006316:	add    BYTE PTR [rax],al
   140006318:	cld    
   140006319:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000631a:	add    BYTE PTR [rax],al
   14000631c:	add    BYTE PTR [rax],al
   14000631e:	add    BYTE PTR [rax],al
   140006320:	adc    ch,BYTE PTR [rax+0x0]
   140006326:	add    BYTE PTR [rax],al
   140006328:	sub    al,0xa8
   14000632a:	add    BYTE PTR [rax],al
   14000632c:	add    BYTE PTR [rax],al
   14000632e:	add    BYTE PTR [rax],al
   140006330:	rex.R test al,0x0
   140006333:	add    BYTE PTR [rax],al
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rdx-0x58],ah
   140006342:	add    BYTE PTR [rax],al
   140006344:	add    BYTE PTR [rax],al
   140006346:	add    BYTE PTR [rax],al
   140006348:	(bad)  
   140006349:	test   al,0x0
   14000634b:	add    BYTE PTR [rax],al
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    BYTE PTR [rdx+0xa8],bl
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rdx+0xa8],dh
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    dh,bh
   140006361:	stos   DWORD PTR es:[rdi],eax
   140006362:	add    BYTE PTR [rax],al
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    BYTE PTR [rax],al
   140006368:	in     al,0xab
   14000636a:	add    BYTE PTR [rax],al
   14000636c:	add    BYTE PTR [rax],al
   14000636e:	add    BYTE PTR [rax],al
   140006370:	shr    BYTE PTR [rbx+0x0],1
   140006376:	add    BYTE PTR [rax],al
   140006378:	mov    dh,0xab
   14000637a:	add    BYTE PTR [rax],al
   14000637c:	add    BYTE PTR [rax],al
   14000637e:	add    BYTE PTR [rax],al
   140006380:	pushf  
   140006381:	stos   DWORD PTR es:[rdi],eax
   140006382:	add    BYTE PTR [rax],al
   140006384:	add    BYTE PTR [rax],al
   140006386:	add    BYTE PTR [rax],al
   140006388:	(bad)  
   140006389:	stos   DWORD PTR es:[rdi],eax
   14000638a:	add    BYTE PTR [rax],al
   14000638c:	add    BYTE PTR [rax],al
   14000638e:	add    BYTE PTR [rax],al
   140006390:	ins    BYTE PTR es:[rdi],dx
   140006391:	stos   DWORD PTR es:[rdi],eax
   140006392:	add    BYTE PTR [rax],al
   140006394:	add    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	pop    rsp
   140006399:	stos   DWORD PTR es:[rdi],eax
   14000639a:	add    BYTE PTR [rax],al
   14000639c:	add    BYTE PTR [rax],al
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	rex.RX stos DWORD PTR es:[rdi],eax
   1400063a2:	add    BYTE PTR [rax],al
   1400063a4:	add    BYTE PTR [rax],al
   1400063a6:	add    BYTE PTR [rax],al
   1400063a8:	cmp    al,0xab
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	add    BYTE PTR [rax],al
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	and    ch,BYTE PTR [rbx+0x0]
   1400063b6:	add    BYTE PTR [rax],al
   1400063b8:	adc    ch,BYTE PTR [rbx+0x0]
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	clc    
   1400063c1:	stos   BYTE PTR es:[rdi],al
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	loop   0x140006373
   1400063ca:	add    BYTE PTR [rax],al
   1400063cc:	add    BYTE PTR [rax],al
   1400063ce:	add    BYTE PTR [rax],al
   1400063d0:	call   0x14000647f
   1400063d5:	add    BYTE PTR [rax],al
   1400063d7:	add    al,dl
   1400063d9:	stos   BYTE PTR es:[rdi],al
   1400063da:	add    BYTE PTR [rax],al
   1400063dc:	add    BYTE PTR [rax],al
   1400063de:	add    BYTE PTR [rax],al
   1400063e0:	mov    edx,0xaa
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    BYTE PTR [rsi+0xaa],ah
   1400063ed:	add    BYTE PTR [rax],al
   1400063ef:	add    BYTE PTR [rdx+rbp*4+0x0],dl
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	(bad)  
   1400063f9:	test   al,0x0
   1400063fb:	add    BYTE PTR [rax],al
   1400063fd:	add    BYTE PTR [rax],al
   1400063ff:	add    al,dl
   140006401:	test   al,0x0
	...
   14000640f:	add    BYTE PTR [rax+0x140003b],dl
   140006415:	add    BYTE PTR [rax],al
   140006417:	add    BYTE PTR [rax+0x140003b],dh
	...
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    BYTE PTR [rax],dl
   140006441:	adc    BYTE PTR [rax],al
   140006443:	add    BYTE PTR [rax+0x10],ah
   140006446:	add    BYTE PTR [rax],al
   140006448:	mov    al,0x10
   14000644a:	add    BYTE PTR [rax],al
   14000644c:	xor    BYTE PTR [rcx],dl
   14000644e:	add    BYTE PTR [rax],al
   140006450:	jo     0x140006463
   140006452:	add    BYTE PTR [rax],al
   140006454:	rcl    BYTE PTR [rcx],0x0
   140006457:	add    BYTE PTR [rax+0x12],dh
   14000645a:	add    BYTE PTR [rax],al
   14000645c:	adc    BYTE PTR [rbx],dl
   14000645e:	add    BYTE PTR [rax],al
   140006460:	loopne 0x140006475
   140006462:	add    BYTE PTR [rax],al
   140006464:	push   rax
   140006465:	adc    al,0x0
   140006467:	add    BYTE PTR [rax-0xfffffec],ah
   14000646d:	adc    al,0x0
   14000646f:	add    BYTE PTR [rax+0x15],al
   140006472:	add    BYTE PTR [rax],al
   140006474:	rcl    BYTE PTR [rip+0x16300000],0x0        # 0x15630647b
   14000647b:	add    al,dh
   14000647d:	(bad)  
   14000647e:	add    BYTE PTR [rax],al
   140006480:	adc    BYTE PTR [rdi],dl
   140006482:	add    BYTE PTR [rax],al
   140006484:	xor    BYTE PTR [rip+0x36700000],0x0        # 0x17670648b
   14000648b:	add    al,ah
   14000648d:	add    BYTE PTR ss:[rax],al
   140006490:	shl    BYTE PTR [rdi],0x0
   140006493:	add    BYTE PTR [rax+0x39],al
   140006496:	add    BYTE PTR [rax],al
   140006498:	sar    BYTE PTR [rdx],0x0
   14000649b:	add    al,dl
   14000649d:	cmp    al,BYTE PTR [rax]
   14000649f:	add    BYTE PTR [rax-0x3fffffc5],dl
   1400064a5:	cmp    eax,DWORD PTR [rax]
   1400064a7:	add    al,al
   1400064a9:	rex.W add BYTE PTR [rax],al
   1400064ac:	ror    BYTE PTR [rax+0x0],1
   1400064af:	add    BYTE PTR [rax+0x50],ah
   1400064b2:	add    BYTE PTR [rax],al
   1400064b4:	lock push rcx
	...
   1400064be:	add    BYTE PTR [rax],al
   1400064c0:	rex.WR add BYTE PTR [rbx+0x0],r10b
   1400064c4:	add    BYTE PTR [r15+0x0],bl
   1400064c8:	push   rbx
   1400064c9:	add    BYTE PTR [rbp+0x0],dl
   1400064cc:	rex.X add BYTE PTR [rbx+0x0],dl
   1400064d0:	pop    rcx
   1400064d1:	add    BYTE PTR [rbx+0x0],dl
   1400064d4:	push   rsp
   1400064d5:	add    BYTE PTR [rbp+0x0],al
   1400064d8:	rex.WRB add BYTE PTR [r15+0x0],r11b
   1400064dc:	rex.WB add BYTE PTR [r14+0x0],cl
   1400064e0:	rex.WB add BYTE PTR [r8+rax*1+0x49],dl
   1400064e5:	add    BYTE PTR [rcx+0x0],al
   1400064e8:	rex.WR add BYTE PTR [rcx+0x0],r9b
   1400064ec:	pop    rdx
   1400064ed:	add    BYTE PTR [rbp+0x0],al
   1400064f0:	add    BYTE PTR [rax],r8b
   1400064f3:	add    BYTE PTR [rbx+rdx*2+0x41],cl
   1400064f7:	add    BYTE PTR [rax+rax*1+0x53],cl
   1400064fb:	add    BYTE PTR [rcx+0x0],al
   1400064fe:	pop    rdi
   1400064ff:	add    BYTE PTR [rdx+0x0],dl
   140006502:	push   rax
   140006503:	add    BYTE PTR [rbx+0x0],al
   140006506:	pop    rdi
   140006507:	add    BYTE PTR [rbx+0x0],dl
   14000650a:	add    BYTE PTR [r10+0x0],r10b
   14000650e:	push   rsi
   14000650f:	add    BYTE PTR [rbp+0x0],al
   140006512:	push   rdx
   140006513:	add    BYTE PTR [rdi+0x0],bl
   140006516:	add    BYTE PTR [r11+0x0],al
   14000651a:	push   rsp
   14000651b:	add    BYTE PTR [rcx+0x0],cl
   14000651e:	push   rsi
   14000651f:	add    BYTE PTR [rbp+0x0],al
   140006522:	add    BYTE PTR [rax],al
   140006524:	add    BYTE PTR [rax],al
   140006526:	add    BYTE PTR [rax],al
   140006528:	add    BYTE PTR [r8+0x0],r15b
   14000652c:	je     0x14000652e
   14000652e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006532:	jae    0x140006534
   140006534:	imul   eax,DWORD PTR [rax],0x6e006f
   14000653a:	jae    0x14000653c
   14000653c:	add    BYTE PTR [rax],al
   14000653e:	add    BYTE PTR [rax],al
   140006540:	add    BYTE PTR [r8+0x0],r15b
   140006544:	je     0x140006546
   140006546:	add    BYTE PTR gs:[rsi+0x0],ch
   14000654a:	jae    0x14000654c
   14000654c:	imul   eax,DWORD PTR [rax],0x6e006f
   140006552:	add    BYTE PTR [rax],al
   140006554:	add    BYTE PTR [rax],al
   140006556:	add    BYTE PTR [rax],al
   140006558:	push   rcx
   140006559:	jne    0x1400065c0
   14000655b:	jb     0x1400065d6
   14000655d:	rex.WR jae 0x1400065c1
   140006560:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006562:	je     0x1400065c9
   140006564:	jb     0x1400065cc
   140006566:	(bad)  
   140006567:	movsxd esp,DWORD PTR [rbp+0x0]
   14000656a:	add    BYTE PTR [rax],al
   14000656c:	add    BYTE PTR [rax],al
   14000656e:	add    BYTE PTR [rax],al
   140006570:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006572:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000657a:	rex.WR jae 0x1400065de
   14000657d:	rex.RB js 0x1400065f4
   140006580:	outs   dx,BYTE PTR gs:[rsi]
   140006582:	jae    0x1400065ed
   140006584:	outs   dx,DWORD PTR ds:[rsi]
   140006585:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000658e:	add    BYTE PTR [rax],al
   140006590:	push   rbx
   140006591:	add    BYTE PTR [rcx+0x0],bh
   140006594:	jae    0x140006596
   140006596:	je     0x140006598
   140006598:	add    BYTE PTR gs:[rbp+0x0],ch
   14000659c:	pop    rsp
   14000659d:	add    BYTE PTR [rbx+0x0],al
   1400065a0:	jne    0x1400065a2
   1400065a2:	jb     0x1400065a4
   1400065a4:	jb     0x1400065a6
   1400065a6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400065aa:	je     0x1400065ac
   1400065ac:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400065b0:	outs   dx,BYTE PTR ds:[rsi]
   1400065b1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400065b5:	add    BYTE PTR [rdi+0x0],ch
   1400065b8:	ins    BYTE PTR es:[rdi],dx
   1400065b9:	add    BYTE PTR [rbx+0x0],dl
   1400065bc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400065c1:	add    BYTE PTR [rbx+0x0],al
   1400065c4:	outs   dx,DWORD PTR ds:[rsi]
   1400065c5:	add    BYTE PTR [rsi+0x0],ch
   1400065c8:	je     0x1400065ca
   1400065ca:	jb     0x1400065cc
   1400065cc:	outs   dx,DWORD PTR ds:[rsi]
   1400065cd:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400065d1:	add    BYTE PTR [rax+rax*1+0x73],cl
   1400065d5:	add    BYTE PTR [rcx+0x0],ah
   1400065d8:	add    BYTE PTR [r8+0x0],r15b
   1400065dc:	je     0x1400065de
   1400065de:	add    BYTE PTR gs:[rsi+0x0],ch
   1400065e2:	jae    0x1400065e4
   1400065e4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400065ea:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400065ee:	outs   dx,BYTE PTR ds:[rsi]
   1400065ef:	add    BYTE PTR [rsi+0x0],ah
   1400065f2:	imul   eax,DWORD PTR [rax],0x5c0067
   1400065f8:	rex.WR add BYTE PTR [rbx+0x0],r14b
   1400065fc:	(bad)  
   1400065fd:	add    BYTE PTR [rbx+0x0],dl
   140006600:	jb     0x140006602
   140006602:	jbe    0x140006604
	...
   140006610:	pop    rsp
   140006611:	add    BYTE PTR [rbx+0x0],dl
   140006614:	add    BYTE PTR [r11+0x0],r8b
   140006618:	push   rbp
   140006619:	add    BYTE PTR [rdx+0x0],dl
   14000661c:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
   140006621:	add    BYTE PTR [rax+rax*1+0x4c],bl
   140006625:	add    BYTE PTR [rbx+0x0],dl
   140006628:	add    BYTE PTR [r15+0x0],bl
   14000662c:	add    BYTE PTR [r13+0x0],dl
   140006630:	push   rsp
   140006631:	add    BYTE PTR [rax+0x0],cl
   140006634:	add    BYTE PTR [r14+0x0],r9b
   140006638:	push   rsp
   140006639:	add    BYTE PTR [rcx+0x0],cl
   14000663c:	rex.XB add BYTE PTR [r9+0x0],al
   140006640:	push   rsp
   140006641:	add    BYTE PTR [rcx+0x0],cl
   140006644:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140006648:	pop    rdi
   140006649:	add    BYTE PTR [rcx+0x0],cl
   14000664c:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140006650:	push   rsp
   140006651:	add    BYTE PTR [rcx+0x0],cl
   140006654:	add    BYTE PTR [r8+rax*1+0x49],cl
   140006659:	add    BYTE PTR [rdx+0x0],bl
   14000665c:	add    BYTE PTR [r8+rax*1+0x0],r8b
	...
   14000666d:	add    BYTE PTR [rax],al
   14000666f:	add    BYTE PTR [rbx+0x0],dl
   140006672:	jns    0x140006674
   140006674:	jae    0x140006676
   140006676:	je     0x140006678
   140006678:	add    BYTE PTR gs:[rbp+0x0],ch
   14000667c:	pop    rsp
   14000667d:	add    BYTE PTR [rbx+0x0],al
   140006680:	jne    0x140006682
   140006682:	jb     0x140006684
   140006684:	jb     0x140006686
   140006686:	add    BYTE PTR gs:[rsi+0x0],ch
   14000668a:	je     0x14000668c
   14000668c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006690:	outs   dx,BYTE PTR ds:[rsi]
   140006691:	add    BYTE PTR [rax+rax*1+0x72],dh
   140006695:	add    BYTE PTR [rdi+0x0],ch
   140006698:	ins    BYTE PTR es:[rdi],dx
   140006699:	add    BYTE PTR [rbx+0x0],dl
   14000669c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400066a1:	add    BYTE PTR [rbx+0x0],al
   1400066a4:	outs   dx,DWORD PTR ds:[rsi]
   1400066a5:	add    BYTE PTR [rsi+0x0],ch
   1400066a8:	je     0x1400066aa
   1400066aa:	jb     0x1400066ac
   1400066ac:	outs   dx,DWORD PTR ds:[rsi]
   1400066ad:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400066b1:	add    BYTE PTR [rax+rax*1+0x73],cl
   1400066b5:	add    BYTE PTR [rcx+0x0],ah
   1400066b8:	add    BYTE PTR [r8+0x0],r15b
   1400066bc:	je     0x1400066be
   1400066be:	add    BYTE PTR gs:[rsi+0x0],ch
   1400066c2:	jae    0x1400066c4
   1400066c4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400066ca:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400066ce:	outs   dx,BYTE PTR ds:[rsi]
   1400066cf:	add    BYTE PTR [rsi+0x0],ah
   1400066d2:	imul   eax,DWORD PTR [rax],0x5c0067
   1400066d8:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400066dc:	je     0x1400066de
   1400066de:	add    BYTE PTR gs:[rdx+0x0],dh
   1400066e2:	data16 add BYTE PTR [rcx+0x0],ah
   1400066e6:	movsxd eax,DWORD PTR [rax]
   1400066e8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400066ec:	add    BYTE PTR [rax],al
   1400066ee:	add    BYTE PTR [rax],al
   1400066f0:	pop    rsp
   1400066f1:	add    BYTE PTR [rax+rax*1+0x65],al
   1400066f5:	add    BYTE PTR [rsi+0x0],dh
   1400066f8:	imul   eax,DWORD PTR [rax],0x650063
   1400066fe:	pop    rsp
   1400066ff:	add    BYTE PTR [rbx+0x0],cl
   140006702:	jae    0x140006704
   140006704:	add    BYTE PTR gs:[rbx+0x0],ah
   140006708:	add    BYTE PTR [rax+rax*1+0x0],r8b
   14000670d:	add    BYTE PTR [rax],al
   14000670f:	add    BYTE PTR [rax+0x0],ah
   140006712:	add    BYTE PTR [rax],al
   140006714:	sub    DWORD PTR [rdi],eax
   140006716:	mov    bh,bl
   140006718:	add    al,0x2d
   14000671a:	pop    rax
   14000671b:	rex.RX mov esi,0xadb42793
   140006721:	push   rbp
   140006722:	(bad)  
   140006723:	lods   al,BYTE PTR ds:[rsi]
   140006724:	add    DWORD PTR [rax],eax
   140006726:	add    BYTE PTR [rax],al
   140006728:	add    al,0x5d
   14000672a:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   140006730:	lahf   
   140006731:	call   0x1502b673e
   140006736:	rex.W (bad) 
   140006738:	add    al,BYTE PTR [rax]
   14000673a:	add    BYTE PTR [rax],al
   14000673c:	add    BYTE PTR [rax],al
   14000673e:	add    BYTE PTR [rax],al
   140006740:	rex push 0x0
   140006743:	rex add DWORD PTR [rax],eax
	...
   14000675e:	add    BYTE PTR [rax],al
   140006760:	add    BYTE PTR [rdx+0x0],ch
   140006763:	rex add DWORD PTR [rax],eax
   140006766:	add    BYTE PTR [rax],al
   140006768:	add    BYTE PTR [rax],al
   14000676a:	add    BYTE PTR [rsi],al
   14000676c:	add    BYTE PTR [rax],al
   14000676e:	add    BYTE PTR [rax],al
   140006770:	outs   dx,BYTE PTR ds:[rsi]
   140006771:	add    BYTE PTR [rbx+0x0],ah
   140006774:	(bad)  
   140006775:	add    BYTE PTR [rax+rax*1+0x72],ch
   140006779:	add    BYTE PTR [rax+0x0],dh
   14000677c:	movsxd eax,DWORD PTR [rax]
   14000677e:	add    BYTE PTR [rax],al
   140006780:	ins    BYTE PTR es:[rdi],dx
   140006781:	add    BYTE PTR [rbx+0x0],dh
   140006784:	(bad)  
   140006785:	add    BYTE PTR [rax+0x0],dh
   140006788:	outs   dx,DWORD PTR ds:[rsi]
   140006789:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000678d:	add    BYTE PTR [rbx+0x0],ah
   140006790:	jns    0x140006792
   140006792:	ins    BYTE PTR es:[rdi],dx
   140006793:	add    BYTE PTR [rdi+0x0],ch
   140006796:	outs   dx,DWORD PTR ds:[rsi]
   140006797:	add    BYTE PTR [rbx+0x0],ch
   14000679a:	jne    0x14000679c
   14000679c:	jo     0x14000679e
   14000679e:	add    BYTE PTR [rax],al
   1400067a0:	outs   dx,BYTE PTR ds:[rsi]
   1400067a1:	add    BYTE PTR [rbx+0x0],ah
   1400067a4:	(bad)  
   1400067a5:	add    BYTE PTR [rbx+0x0],ah
   1400067a8:	outs   dx,BYTE PTR ds:[rsi]
   1400067a9:	add    BYTE PTR [rdi+0x0],bl
   1400067ac:	outs   dx,BYTE PTR ds:[rsi]
   1400067ad:	add    BYTE PTR [rax+0x0],dh
	...
   1400067b8:	pop    rsp
   1400067b9:	add    BYTE PTR [rax+0x0],dh
   1400067bc:	imul   eax,DWORD PTR [rax],0x650070
   1400067c2:	pop    rsp
   1400067c3:	add    BYTE PTR [rax+rax*1+0x73],ch
   1400067c7:	add    BYTE PTR [rcx+0x0],ah
   1400067ca:	jae    0x1400067cc
   1400067cc:	jae    0x1400067ce
   1400067ce:	add    BYTE PTR [rax],al
   1400067d0:	push   rax
   1400067d1:	add    BYTE PTR [rcx+0x0],ah
   1400067d4:	je     0x1400067d6
   1400067d6:	push   0x0
   1400067db:	add    BYTE PTR [rax],al
   1400067dd:	add    BYTE PTR [rax],al
   1400067df:	add    BYTE PTR [rbx+0x0],dl
   1400067e2:	jns    0x1400067e4
   1400067e4:	jae    0x1400067e6
   1400067e6:	je     0x1400067e8
   1400067e8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400067ec:	push   rdx
   1400067ed:	add    BYTE PTR [rdi+0x0],ch
   1400067f0:	outs   dx,DWORD PTR ds:[rsi]
   1400067f1:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    BYTE PTR [rax+rax*1+0x53],bl
   1400067fb:	add    BYTE PTR [rbp+0x0],ah
   1400067fe:	push   rdx
   1400067ff:	add    BYTE PTR [rbp+0x0],ch
   140006802:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006806:	ins    DWORD PTR es:[rdi],dx
   140006807:	add    BYTE PTR [rbp+0x0],ch
   14000680a:	(bad)  
   14000680b:	add    BYTE PTR [rsi+0x0],ch
   14000680e:	add    BYTE PTR fs:[rax+0x0],dl
   140006812:	outs   dx,DWORD PTR ds:[rsi]
   140006813:	add    BYTE PTR [rdx+0x0],dh
   140006816:	je     0x140006818
	...
   140006820:	pop    rsp
   140006821:	add    BYTE PTR [rbx+0x0],dl
   140006824:	add    BYTE PTR gs:[rax+rax*1+0x73],cl
   140006829:	add    BYTE PTR [rcx+0x0],ah
   14000682c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006830:	ins    DWORD PTR es:[rdi],dx
   140006831:	add    BYTE PTR [rbp+0x0],ch
   140006834:	(bad)  
   140006835:	add    BYTE PTR [rsi+0x0],ch
   140006838:	add    BYTE PTR fs:[rax+0x0],dl
   14000683c:	outs   dx,DWORD PTR ds:[rsi]
   14000683d:	add    BYTE PTR [rdx+0x0],dh
   140006840:	je     0x140006842
   140006842:	add    BYTE PTR [rax],al
   140006844:	add    BYTE PTR [rax],al
   140006846:	add    BYTE PTR [rax],al
   140006848:	movabs al,ds:0x40000000014000c0
   140006851:	rol    DWORD PTR [rax],0x40
   140006854:	add    DWORD PTR [rax],eax
   140006856:	add    BYTE PTR [rax],al
   140006858:	push   rsp
   140006859:	push   0x65722065
   14000685e:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
   140006866:	and    BYTE PTR [rbx+0x53],dl
   140006869:	push   rax
   14000686a:	rex.WB and BYTE PTR [r13+0x78],spl
   14000686e:	je     0x1400068d5
   140006870:	outs   dx,BYTE PTR ds:[rsi]
   140006871:	jae    0x1400068e7
   140006873:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
   14000687a:	jae    0x14000689c
   14000687c:	outs   dx,BYTE PTR ds:[rsi]
   14000687d:	outs   dx,DWORD PTR ds:[rsi]
   14000687e:	je     0x1400068a0
   140006880:	jae    0x1400068f7
   140006882:	jo     0x1400068f4
   140006884:	outs   dx,DWORD PTR ds:[rsi]
   140006885:	jb     0x1400068fb
   140006887:	and    BYTE PTR [rax+0x53],dl
   14000688a:	rex.XB add BYTE PTR [r8],al
   14000688d:	add    BYTE PTR [rax],al
   14000688f:	add    BYTE PTR [rcx+0x73],al
   140006892:	jns    0x140006902
   140006894:	movsxd edx,DWORD PTR [rax+0x72]
   140006897:	outs   dx,DWORD PTR ds:[rsi]
   140006898:	movsxd esp,DWORD PTR [rbp+0x73]
   14000689b:	jae    0x1400068f0
   14000689d:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400068a1:	imul   esi,DWORD PTR [rcx+rdi*2+0x43],0x65746e6f
   1400068a9:	js     0x14000691f
   1400068ab:	add    BYTE PTR [rax],al
   1400068ad:	add    BYTE PTR [rax],al
   1400068af:	add    BYTE PTR [rip+0x2d207368],ah        # 0x16d20dc1d
   1400068b5:	and    BYTE PTR [rcx+0x67],cl
   1400068b8:	outs   dx,BYTE PTR ds:[rsi]
   1400068b9:	outs   dx,DWORD PTR ds:[rsi]
   1400068ba:	jb     0x140006925
   1400068bc:	outs   dx,BYTE PTR ds:[rsi]
   1400068bd:	and    BYTE PTR [ecx+0x50],al
   1400068c1:	rex.WB and BYTE PTR [r11+0x74],sil
   1400068c5:	(bad)  
   1400068c6:	je     0x14000693d
   1400068c8:	jae    0x1400068ea
   1400068ca:	(bad)  
   1400068cb:	jae    0x1400068ed
   1400068cd:	ins    DWORD PTR es:[rdi],dx
   1400068ce:	(bad)  
   1400068cf:	jb     0x140006944
   1400068d1:	push   0x6e696c61
   1400068d6:	and    BYTE PTR [esi+0x61],ah
   1400068da:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   1400068e2:	add    BYTE PTR [rax],al
   1400068e4:	pop    rsp
   1400068e5:	xchg   ebx,eax
   1400068e6:	iret   
   1400068e7:	push   rdi
   1400068e8:	add    BYTE PTR [rax],al
   1400068ea:	add    BYTE PTR [rax],al
   1400068ec:	add    al,BYTE PTR [rax]
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	and    al,BYTE PTR [rax]
   1400068f2:	add    BYTE PTR [rax],al
   1400068f4:	add    BYTE PTR [rax+rax*1+0x840000],dl
   1400068fb:	add    BYTE PTR [rax],al
   1400068fd:	add    BYTE PTR [rax],al
   1400068ff:	add    BYTE PTR [rbx+rdx*4-0x31],bl
   140006903:	push   rdi
   140006904:	add    BYTE PTR [rax],al
   140006906:	add    BYTE PTR [rax],al
   140006908:	or     eax,0x8000000
   14000690d:	add    eax,DWORD PTR [rax]
   14000690f:	add    BYTE PTR [rax],bh
   140006911:	xchg   esp,eax
   140006912:	add    BYTE PTR [rax],al
   140006914:	cmp    BYTE PTR [rax+rax*1+0x0],al
	...
   14000693f:	add    BYTE PTR [rax+0x0],ah
	...
   140006999:	rol    BYTE PTR [rax],0x40
   14000699c:	add    DWORD PTR [rax],eax
	...
   1400069ae:	add    BYTE PTR [rax],al
   1400069b0:	adc    BYTE PTR [rax+rax*1+0x40],ah
   1400069b4:	add    DWORD PTR [rax],eax
   1400069b6:	add    BYTE PTR [rax],al
   1400069b8:	sbb    BYTE PTR [rax+rax*1+0x40],ah
   1400069bc:	add    DWORD PTR [rax],eax
   1400069be:	add    BYTE PTR [rax],al
   1400069c0:	rex
   1400069c1:	add    BYTE PTR fs:[rax+0x1],al
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    BYTE PTR [rsi],bl
	...
   1400069d1:	xor    eax,0x0
	...
   1400069de:	add    BYTE PTR [rax],al
   1400069e0:	pop    rsp
   1400069e1:	add    BYTE PTR [rbx+0x0],dl
   1400069e4:	jns    0x1400069e6
   1400069e6:	jae    0x1400069e8
   1400069e8:	je     0x1400069ea
   1400069ea:	add    BYTE PTR gs:[rbp+0x0],ch
   1400069ee:	xor    eax,DWORD PTR [rax]
   1400069f0:	xor    al,BYTE PTR [rax]
	...
   1400069fe:	add    BYTE PTR [rax],al
   140006a00:	jo     0x140006a6f
   140006a02:	add    BYTE PTR [rax+0x1],al
   140006a05:	add    BYTE PTR [rax],al
   140006a07:	add    BYTE PTR [rax],bh
   140006a09:	ins    DWORD PTR es:[rdi],dx
   140006a0a:	add    BYTE PTR [rax+0x1],al
   140006a0d:	add    BYTE PTR [rax],al
   140006a0f:	add    BYTE PTR [rdx+0x6b],dh
   140006a12:	add    BYTE PTR [rax+0x1],al
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    BYTE PTR [rax+0x6b],bl
   140006a1a:	add    BYTE PTR [rax+0x1],al
	...
   140006a25:	add    BYTE PTR [rax],al
   140006a27:	add    BYTE PTR [rax+0x6b],al
   140006a2a:	add    BYTE PTR [rax+0x1],al
   140006a2d:	add    BYTE PTR [rax],al
   140006a2f:	add    BYTE PTR [rdx],al
   140006a31:	add    BYTE PTR [rax],al
   140006a33:	add    BYTE PTR [rax],al
   140006a35:	add    BYTE PTR [rax],al
   140006a37:	add    BYTE PTR [rax+0x140006a],ah
   140006a3d:	add    BYTE PTR [rax],al
   140006a3f:	add    BYTE PTR [rdi],al
   140006a41:	add    BYTE PTR [rax],al
   140006a43:	add    BYTE PTR [rax],al
   140006a45:	add    BYTE PTR [rax],al
   140006a47:	add    BYTE PTR [rax+0x6a],ah
   140006a4a:	add    BYTE PTR [rax+0x1],al
	...
   140006a5d:	add    BYTE PTR [rax],al
   140006a5f:	add    al,al
   140006a61:	cmp    al,BYTE PTR [rax]
   140006a63:	rex add DWORD PTR [rax],eax
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	sar    BYTE PTR [rdx],0x0
   140006a6b:	rex add DWORD PTR [rax],eax
   140006a6e:	add    BYTE PTR [rax],al
   140006a70:	sar    BYTE PTR [rdx],0x0
   140006a73:	rex add DWORD PTR [rax],eax
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	sar    BYTE PTR [rdx],0x0
   140006a7b:	rex add DWORD PTR [rax],eax
   140006a7e:	add    BYTE PTR [rax],al
   140006a80:	sar    BYTE PTR [rdx],0x0
   140006a83:	rex add DWORD PTR [rax],eax
   140006a86:	add    BYTE PTR [rax],al
   140006a88:	sar    BYTE PTR [rdx],0x0
   140006a8b:	rex add DWORD PTR [rax],eax
   140006a8e:	add    BYTE PTR [rax],al
   140006a90:	sar    BYTE PTR [rdx],0x0
   140006a93:	rex add DWORD PTR [rax],eax
	...
   140006a9e:	add    BYTE PTR [rax],al
   140006aa0:	add    al,0x5d
   140006aa2:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   140006aa8:	lahf   
   140006aa9:	call   0x1502b6ab6
   140006aae:	rex.W (bad) 
   140006ab0:	add    al,BYTE PTR [rax]
   140006ab2:	add    BYTE PTR [rax],al
   140006ab4:	add    BYTE PTR [rax],al
   140006ab6:	add    BYTE PTR [rax],al
   140006ab8:	rex push 0x0
   140006abb:	rex add DWORD PTR [rax],eax
   140006abe:	add    BYTE PTR [rax],al
   140006ac0:	jb     0x140006b2d
   140006ac2:	add    BYTE PTR [rax+0x1],al
   140006ac5:	add    BYTE PTR [rax],al
   140006ac7:	add    BYTE PTR [rax+0x6b],bl
   140006aca:	add    BYTE PTR [rax+0x1],al
   140006acd:	add    BYTE PTR [rax],al
   140006acf:	add    BYTE PTR [rdx+0x6e],dl
   140006ad2:	add    BYTE PTR [rax+0x1],al
	...
   140006aed:	add    BYTE PTR [rax],al
   140006aef:	add    BYTE PTR [rbx],dh
   140006af1:	add    eax,0xbeba7171
   140006af6:	(bad)  
   140006af7:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   140006afb:	fucomi st,st(7)
   140006afd:	pushf  
   140006afe:	int3   
   140006aff:	add    DWORD PTR ss:[rax],eax
   140006b02:	add    BYTE PTR [rax],al
   140006b04:	add    BYTE PTR [rax],al
   140006b06:	add    BYTE PTR [rax],al
   140006b08:	jo     0x140006b7c
   140006b0a:	add    BYTE PTR [rax+0x1],al
	...
   140006b15:	add    BYTE PTR [rax],al
   140006b17:	add    BYTE PTR [rax],bh
   140006b19:	jb     0x140006b1b
   140006b1b:	rex add DWORD PTR [rax],eax
	...
   140006b3e:	add    BYTE PTR [rax],al
   140006b40:	xor    eax,DWORD PTR [rip+0xffffffffbeba7171]        # 0xfebadcb7
   140006b46:	(bad)  
   140006b47:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   140006b4b:	fucomi st,st(7)
   140006b4d:	pushf  
   140006b4e:	int3   
   140006b4f:	add    DWORD PTR ss:[rax],eax
	...
   140006b5a:	add    BYTE PTR ds:[rdx+0x0],ch
   140006b5e:	mov    edx,0x4e011000
   140006b63:	add    DWORD PTR [rsi+0x1],eax
	...
   140006b71:	add    BYTE PTR [rax],al
   140006b73:	rex.W add BYTE PTR [rax],al
   140006b76:	add    BYTE PTR [rax],al
   140006b78:	add    BYTE PTR [rax],al
   140006b7a:	sub    BYTE PTR [rax],al
   140006b7c:	xor    DWORD PTR [rax],ecx
   140006b7e:	add    BYTE PTR [rax],al
   140006b80:	add    BYTE PTR [rax+rcx*1+0x0],bl
   140006b84:	add    BYTE PTR [rsi+0x5],al
   140006b88:	or     cl,BYTE PTR [rip+0x10000]        # 0x140016b8e
   140006b8e:	add    BYTE PTR [rax],al
   140006b90:	add    BYTE PTR [rax],al
   140006b92:	or     eax,DWORD PTR [rax]
   140006b94:	add    BYTE PTR [rax],al
   140006b96:	add    al,BYTE PTR [rax]
   140006b98:	or     eax,DWORD PTR [rcx]
   140006b9a:	or     BYTE PTR [rax],al
   140006b9c:	sahf   
   140006b9d:	add    BYTE PTR [rax+0x0],cl
   140006ba0:	adc    BYTE PTR [rax],al
   140006ba2:	or     BYTE PTR [rax],al
   140006ba4:	adc    BYTE PTR [rcx],al
   140006ba6:	sbb    BYTE PTR [rax],al
   140006ba8:	(bad)  
   140006ba9:	add    BYTE PTR [rax+0x0],dh
   140006bac:	and    BYTE PTR [rax],al
   140006bae:	or     BYTE PTR [rax],al
   140006bb0:	add    BYTE PTR [rax+0x0],cl
   140006bb3:	add    BYTE PTR [rax],al
   140006bb5:	add    BYTE PTR [rcx],al
   140006bb7:	add    BYTE PTR [rax],dl
   140006bb9:	add    BYTE PTR [rax],dh
   140006bbb:	call   0x140006bc0
   140006bc0:	cmp    BYTE PTR [rax],al
   140006bc2:	add    BYTE PTR [rdx+rax*1+0xa],al
   140006bc7:	or     DWORD PTR [rax],eax
   140006bc9:	add    BYTE PTR [rax],al
   140006bcb:	add    BYTE PTR [rcx],al
   140006bcd:	add    BYTE PTR [rax],al
   140006bcf:	add    BYTE PTR [rax],bl
   140006bd1:	add    DWORD PTR [rax],eax
   140006bd3:	add    ah,cl
   140006bd5:	add    BYTE PTR [rax+0x0],dh
   140006bd8:	or     BYTE PTR [rax],al
   140006bda:	or     BYTE PTR [rax],al
   140006bdc:	add    BYTE PTR [rax+0x0],cl
   140006bdf:	add    BYTE PTR [rax],al
   140006be1:	add    BYTE PTR [rdx],al
   140006be3:	add    BYTE PTR [rax+0x0],al
   140006be6:	xor    BYTE PTR [rax+0x0],cl
   140006be9:	add    BYTE PTR [rax],al
   140006beb:	add    BYTE PTR [rax+0x0],dl
   140006bee:	and    al,0x0
   140006bf0:	rex.RXB or BYTE PTR [r10],r9b
   140006bf3:	sgdt   [rax]
   140006bf6:	add    DWORD PTR [rax],eax
   140006bf8:	add    al,BYTE PTR [rax]
   140006bfa:	add    BYTE PTR [rax],al
   140006bfc:	or     BYTE PTR [rax],al
   140006bfe:	add    BYTE PTR [rax],al
   140006c00:	rol    BYTE PTR [rax],1
   140006c02:	or     eax,DWORD PTR [rcx]
   140006c04:	or     BYTE PTR [rax],al
   140006c06:	(bad)  
   140006c07:	add    DWORD PTR [rbx],edx
   140006c09:	and    BYTE PTR [rax],dl
   140006c0b:	add    BYTE PTR [rdx],bl
   140006c0d:	add    DWORD PTR [rbx],ebx
   140006c0f:	add    DWORD PTR [rax],ebx
   140006c11:	add    BYTE PTR [rsi+0x20015801],dh
   140006c17:	add    BYTE PTR [rax],cl
   140006c19:	add    BYTE PTR [rax+0x0],cl
   140006c1c:	sub    BYTE PTR [rax],al
   140006c1e:	or     BYTE PTR [rax],al
   140006c20:	rex.W add BYTE PTR [rax],sil
   140006c23:	add    BYTE PTR [rax],cl
   140006c25:	add    BYTE PTR [rax+0x0],dh
   140006c28:	cmp    BYTE PTR [rax],al
   140006c2a:	or     BYTE PTR [rax],al
   140006c2c:	add    BYTE PTR [rax+0x0],cl
   140006c2f:	add    BYTE PTR [rax],al
   140006c31:	add    BYTE PTR [rbx],al
   140006c33:	add    BYTE PTR [rax+0x0],cl
   140006c36:	xor    BYTE PTR [rax+0x0],cl
   140006c39:	add    BYTE PTR [rax],al
   140006c3b:	add    BYTE PTR [rax+0x0],bl
   140006c3e:	and    al,0x0
   140006c40:	rex.RXB or DWORD PTR [r10],r9d
   140006c43:	sgdt   [rax]
   140006c46:	add    DWORD PTR [rax],eax
   140006c48:	add    eax,DWORD PTR [rax]
   140006c4a:	add    BYTE PTR [rax],al
   140006c4c:	or     BYTE PTR [rax],al
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	(bad)  
   140006c51:	add    DWORD PTR [rax-0x2dfff800],ecx
   140006c57:	add    DWORD PTR [rbx],ecx
   140006c59:	add    DWORD PTR [rax],edx
   140006c5b:	add    al,ah
   140006c5d:	add    DWORD PTR [rbx],edx
   140006c5f:	and    BYTE PTR [rax],bl
   140006c61:	add    dh,dh
   140006c63:	add    DWORD PTR [rbx],ebx
   140006c65:	add    DWORD PTR [rax],esp
   140006c67:	add    BYTE PTR [rdx+rax*1],dh
   140006c6a:	pop    rax
   140006c6b:	add    DWORD PTR [rax],ebp
   140006c6d:	add    BYTE PTR [rax],cl
   140006c6f:	add    BYTE PTR [rax+0x0],cl
   140006c72:	xor    BYTE PTR [rax],al
   140006c74:	or     BYTE PTR [rax],al
   140006c76:	rex.W add BYTE PTR [rax],dil
   140006c79:	add    BYTE PTR [rax],cl
   140006c7b:	add    BYTE PTR [rax+0x0],dh
   140006c7e:	add    BYTE PTR [rax],cl
   140006c81:	add    BYTE PTR [rax],al
   140006c83:	rex.W add BYTE PTR [rax],al
   140006c86:	add    BYTE PTR [rax],al
   140006c88:	add    al,0x0
   140006c8a:	sub    BYTE PTR [rax],al
   140006c8c:	xor    DWORD PTR [rax],ecx
   140006c8e:	add    BYTE PTR [rax],al
   140006c90:	add    BYTE PTR [rsi+rax*1+0x0],bl
   140006c94:	or     BYTE PTR [rax],al
   140006c96:	rex.RXB add eax,0x10f0a
   140006c9c:	add    DWORD PTR [rax],eax
   140006c9e:	add    al,0x0
   140006ca0:	add    BYTE PTR [rax],al
   140006ca2:	or     eax,DWORD PTR [rax]
   140006ca4:	add    BYTE PTR [rax],al
   140006ca6:	rex.WR add r9b,BYTE PTR [rax+0x0]
   140006caa:	or     BYTE PTR [rax],al
   140006cac:	or     eax,0x10010b00
   140006cb1:	add    BYTE PTR [rdx+rax*1+0x13],dl
   140006cb5:	and    BYTE PTR [rax],bl
   140006cb7:	add    BYTE PTR [rdx],dl
   140006cb9:	add    esi,DWORD PTR [rax+0x0]
   140006cbc:	and    BYTE PTR [rax],al
   140006cbe:	or     BYTE PTR [rax],al
   140006cc0:	add    BYTE PTR [rax+0x0],cl
   140006cc3:	add    BYTE PTR [rax],al
   140006cc5:	add    BYTE PTR [rip+0x30002000],al        # 0x170008ccb
   140006ccb:	rex.W add BYTE PTR [rax],al
   140006cce:	add    BYTE PTR [rax],al
   140006cd0:	sub    al,BYTE PTR [rax]
   140006cd2:	or     BYTE PTR [rax],al
   140006cd4:	rex.RB add al,0xa
   140006cd7:	or     eax,DWORD PTR [rcx]
   140006cd9:	add    BYTE PTR [rax],al
   140006cdb:	add    BYTE PTR [rip+0x8000000],al        # 0x148006ce1
   140006ce1:	add    BYTE PTR [rax],al
   140006ce3:	add    BYTE PTR [rsi+0x3],al
   140006ce6:	rex.W add BYTE PTR [rax],cl
   140006ce9:	add    BYTE PTR [rip+0x10201300],cl        # 0x150207fef
   140006cef:	add    BYTE PTR [rdx+0x3],cl
   140006cf2:	jo     0x140006cf4
   140006cf4:	sbb    BYTE PTR [rax],al
   140006cf6:	or     BYTE PTR [rax],al
   140006cf8:	add    BYTE PTR [rax+0x0],cl
   140006cfb:	add    BYTE PTR [rax],al
   140006cfd:	add    BYTE PTR [rsi],al
   140006cff:	add    BYTE PTR [rax],ah
   140006d01:	add    BYTE PTR [rcx],dh
   140006d03:	or     BYTE PTR [rax],al
   140006d05:	add    BYTE PTR [rax],al
   140006d07:	pop    rsp
   140006d08:	add    BYTE PTR [rax],al
   140006d0a:	and    al,BYTE PTR [rax]
   140006d0c:	rex.RX add al,0xa
   140006d0f:	add    eax,0x10000
   140006d14:	add    BYTE PTR [rax],al
   140006d16:	add    BYTE PTR [rax],al
   140006d18:	or     eax,DWORD PTR [rax]
   140006d1a:	add    BYTE PTR [rax],al
   140006d1c:	mov    al,0x3
   140006d1e:	or     eax,DWORD PTR [rax]
   140006d20:	or     BYTE PTR [rax],al
   140006d22:	mov    ah,0x3
   140006d24:	adc    BYTE PTR [rax],ah
   140006d26:	adc    BYTE PTR [rax],al
   140006d28:	mov    eax,0x18007003
   140006d2d:	add    BYTE PTR [rax],cl
	...
   140006d37:	add    BYTE PTR [rax+0x1400010],dh
   140006d3d:	add    BYTE PTR [rax],al
   140006d3f:	add    BYTE PTR [rax+0x11],dh
   140006d42:	add    BYTE PTR [rax+0x1],al
   140006d45:	add    BYTE PTR [rax],al
   140006d47:	add    BYTE PTR [rax+0x12],dh
   140006d4a:	add    BYTE PTR [rax+0x1],al
   140006d4d:	add    BYTE PTR [rax],al
   140006d4f:	add    al,al
   140006d51:	adc    DWORD PTR [rax],eax
   140006d53:	rex add DWORD PTR [rax],eax
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	rex adc eax,0x14000
   140006d5e:	add    BYTE PTR [rax],al
   140006d60:	loopne 0x140006d75
   140006d62:	add    BYTE PTR [rax+0x1],al
   140006d65:	add    BYTE PTR [rax],al
   140006d67:	add    BYTE PTR [rax+0x36],dh
   140006d6a:	add    BYTE PTR [rax+0x1],al
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rax],dl
   140006d71:	add    BYTE PTR [eax+0x1],al
   140006d75:	add    BYTE PTR [rax],al
   140006d77:	add    BYTE PTR [rax+0x10],ah
   140006d7a:	add    BYTE PTR [rax+0x1],al
   140006d7d:	add    BYTE PTR [rax],al
   140006d7f:	add    BYTE PTR [rax],dl
   140006d81:	adc    BYTE PTR [rax],al
   140006d83:	rex add DWORD PTR [rax],eax
	...
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	adc    BYTE PTR [rdx+0x0],dh
   140006d93:	rex add DWORD PTR [rax],eax
	...
   140006dae:	add    BYTE PTR [rax],al
   140006db0:	push   rdx
   140006db1:	outs   dx,BYTE PTR ds:[rsi]
   140006db2:	add    BYTE PTR [rax+0x1],al
   140006db5:	add    BYTE PTR [rax],al
   140006db7:	add    BYTE PTR [rcx],al
   140006db9:	add    BYTE PTR [rax],al
   140006dbb:	add    BYTE PTR [rax],al
   140006dbd:	add    BYTE PTR [rdx],cl
	...
   140006dc7:	add    BYTE PTR [rbp+0x2],ah
   140006dca:	add    BYTE PTR [rax],cl
	...
   140006de0:	sbb    BYTE PTR [rsi+0x0],ch
   140006de3:	rex add DWORD PTR [rax],eax
   140006de6:	add    BYTE PTR [rax],al
   140006de8:	add    DWORD PTR [rax],eax
   140006dea:	add    BYTE PTR [rdx],al
	...
   140006df8:	add    BYTE PTR [rdx+0x0],ch
   140006dfb:	rex add DWORD PTR [rax],eax
   140006dfe:	add    BYTE PTR [rax],al
   140006e00:	or     BYTE PTR [rsi+0x0],ch
   140006e03:	rex add DWORD PTR [rax],eax
   140006e06:	add    BYTE PTR [rax],al
   140006e08:	xor    BYTE PTR [rdx+0x0],dh
   140006e0b:	rex add DWORD PTR [rax],eax
   140006e0e:	add    BYTE PTR [rax],al
   140006e10:	sbb    al,0x72
   140006e12:	add    BYTE PTR [rax+0x1],al
   140006e15:	add    BYTE PTR [rax],al
   140006e17:	add    BYTE PTR [rax],dh
   140006e19:	adc    DWORD PTR [rax],eax
   140006e1b:	rex add DWORD PTR [rax],eax
   140006e1e:	add    BYTE PTR [rax],al
   140006e20:	xor    BYTE PTR [rcx],dl
   140006e22:	add    BYTE PTR [rax+0x1],al
   140006e25:	add    BYTE PTR [rax],al
   140006e27:	add    BYTE PTR [rax],dh
   140006e29:	adc    DWORD PTR [rax],eax
   140006e2b:	rex add DWORD PTR [rax],eax
   140006e2e:	add    BYTE PTR [rax],al
   140006e30:	xor    BYTE PTR [rcx],dl
   140006e32:	add    BYTE PTR [rax+0x1],al
   140006e35:	add    BYTE PTR [rax],al
   140006e37:	add    al,dh
   140006e39:	(bad)  
   140006e3a:	add    BYTE PTR [rax+0x1],al
   140006e3d:	add    BYTE PTR [rax],al
   140006e3f:	add    BYTE PTR [rax],dh
   140006e41:	adc    DWORD PTR [rax],eax
   140006e43:	rex add DWORD PTR [rax],eax
	...
   140006e52:	add    BYTE PTR [rax],al
   140006e54:	adc    cl,BYTE PTR [rax]
   140006e56:	and    eax,0x9600115c
   140006e5b:	add    BYTE PTR [rax+rax*1],bl
   140006e5e:	add    DWORD PTR [rax],eax
   140006e60:	(bad)  
   140006e61:	add    BYTE PTR [rdx],al
   140006e63:	add    BYTE PTR [rcx],al
   140006e65:	add    BYTE PTR [rdi],dl
   140006e67:	add    BYTE PTR [rax],al
   140006e69:	add    BYTE PTR [rcx],al
   140006e6b:	add    BYTE PTR [rdx],al
   140006e6d:	pop    rbx
   140006e6e:	sbb    al,BYTE PTR [rbx]
   140006e70:	adc    BYTE PTR [rax],al
   140006e72:	add    BYTE PTR [rax],al
   140006e74:	or     BYTE PTR [rax],al
   140006e76:	(bad)  
   140006e77:	(bad)  
   140006e78:	rex
   140006e79:	ss pop rsp
   140006e7b:	pop    rbx
   140006e7c:	adc    al,BYTE PTR [rax]
   140006e7e:	fdivp  st(7),st
   140006e80:	sbb    eax,0x2000600
   140006e85:	pop    rbx
   140006e86:	adc    eax,0x4c000600
   140006e8b:	add    ah,dh
   140006e8d:	call   FWORD PTR [rbx+rbx*2+0x1b]
   140006e91:	add    eax,DWORD PTR [rax+rax*1]
   140006e94:	add    al,0x0
   140006e96:	stc    
   140006e97:	inc    DWORD PTR [rcx]
   140006e99:	add    BYTE PTR [rax],cl
   140006e9b:	pop    rbx
   140006e9c:	(bad)  
   140006e9d:	add    ecx,DWORD PTR [rax]
   140006e9f:	add    al,dh
   140006ea1:	inc    DWORD PTR [rdx]
   140006ea3:	add    cl,BYTE PTR [rax+rax*1-0x20]
   140006ea7:	call   FWORD PTR [rbx+rbx*2+0x1b]
   140006eab:	add    BYTE PTR [rcx],al
   140006ead:	add    BYTE PTR [rax],al
   140006eaf:	pop    rbp
   140006eb0:	add    BYTE PTR [rax],al
   140006eb2:	add    DWORD PTR [rax],eax
   140006eb4:	add    bl,BYTE PTR [rbx+0x17]
   140006eb7:	add    DWORD PTR [rax+rax*1],eax
   140006eba:	lock inc DWORD PTR [rdx]
   140006ebd:	add    al,BYTE PTR [rsi]
   140006ebf:	pop    rbx
   140006ec0:	sbb    al,BYTE PTR [rbx]
   140006ec2:	sub    BYTE PTR [rax],al
   140006ec4:	add    BYTE PTR [rax],al
   140006ec6:	or     al,0x0
   140006ec8:	add    al,BYTE PTR [rdx]
   140006eca:	(bad)  
   140006ecb:	rex
   140006ecc:	ss ss ss ss pop rsp
   140006ed1:	pop    rbx
   140006ed2:	adc    al,BYTE PTR [rax]
   140006ed4:	enter  0x12ff,0x0
   140006ed8:	(bad)  
   140006ed9:	call   QWORD PTR [rdx]
   140006edb:	add    dl,bl
   140006edd:	call   QWORD PTR [rdx]
   140006edf:	add    dh,dl
   140006ee1:	call   FWORD PTR [rdx]
   140006ee3:	add    ecx,DWORD PTR [rax+rax*1]
   140006ee6:	add    BYTE PTR [rax],al
   140006ee8:	add    BYTE PTR [rax],al
   140006eea:	or     BYTE PTR [rip+0x5b3e0202],cl        # 0x19b3e70f2
   140006ef0:	sbb    al,BYTE PTR [rbx]
   140006ef2:	xor    BYTE PTR [rax],al
   140006ef4:	add    BYTE PTR [rax],al
   140006ef6:	or     al,0x0
   140006ef8:	or     BYTE PTR [rax+0x36],al
   140006efb:	or     BYTE PTR ss:[rax+0x36],al
   140006eff:	ss pop rsp
   140006f01:	pop    rbx
   140006f02:	adc    cl,BYTE PTR [rax]
   140006f04:	add    bl,BYTE PTR [rdx+rdx*1+0x0]
   140006f08:	call   WORD PTR [rdx]
   140006f0b:	add    BYTE PTR [rdi+rdi*8-0x2dffee],dh
   140006f12:	adc    DWORD PTR [rdx+rax*1],eax
   140006f15:	add    BYTE PTR [rax],dh
   140006f17:	test   al,0x0
   140006f19:	add    BYTE PTR [rcx],dl
   140006f1b:	add    al,0x2
   140006f1d:	add    BYTE PTR [rax],dh
   140006f1f:	jmp    0x189306f24
   140006f24:	add    BYTE PTR [rax],al
   140006f26:	adc    DWORD PTR [rax],eax
   140006f28:	xor    BYTE PTR [rax],al
   140006f2a:	mov    bh,0x8
   140006f2c:	add    BYTE PTR [rax],al
   140006f2e:	add    BYTE PTR [rax],al
   140006f30:	add    BYTE PTR [rax+0x0],dl
   140006f33:	add    BYTE PTR [rdx],bl
   140006f35:	add    ecx,DWORD PTR [rax]
   140006f37:	add    BYTE PTR [rax],al
   140006f39:	add    BYTE PTR [rax+rax*1],al
   140006f3c:	ss pop rbx
   140006f3e:	adc    al,BYTE PTR [rax]
   140006f40:	pop    rsp
   140006f41:	jmp    QWORD PTR [rcx]
   140006f43:	add    eax,DWORD PTR [rax]
   140006f45:	add    BYTE PTR [rcx],bl
   140006f47:	add    BYTE PTR [rax],al
   140006f49:	add    BYTE PTR [rcx],al
   140006f4b:	add    bh,bh
   140006f4d:	(bad)  
   140006f4e:	(bad)  
   140006f4f:	inc    DWORD PTR [rax]
   140006f51:	add    BYTE PTR [rax+rax*1-0x20],cl
   140006f55:	call   FWORD PTR [rbx+rbx*2+0x1a]
   140006f59:	add    edx,DWORD PTR [rax]
   140006f5b:	add    BYTE PTR [rax],al
   140006f5d:	add    BYTE PTR [rdx],cl
   140006f5f:	add    BYTE PTR [rax+rax*1-0x38],cl
   140006f63:	inc    DWORD PTR [rax+0x36]
   140006f66:	pop    rsp
   140006f67:	pop    rbx
   140006f68:	adc    al,BYTE PTR [rax]
   140006f6a:	fdivr  st,st(7)
   140006f6c:	adc    DWORD PTR [rdx+rax*1],edx
   140006f6f:	add    BYTE PTR [rdx],dl
   140006f71:	add    BYTE PTR [rsi+0x0],cl
   140006f74:	sbb    al,0x1
   140006f76:	add    al,BYTE PTR [rax]
   140006f78:	(bad)  
   140006f79:	push   rbp
   140006f7a:	add    al,BYTE PTR [rax]
   140006f7c:	add    DWORD PTR [rax],eax
   140006f7e:	(bad)  
   140006f7f:	push   rbp
   140006f80:	add    BYTE PTR [rax],al
   140006f82:	add    DWORD PTR [rax],eax
   140006f84:	add    eax,0x10031a5b
   140006f89:	add    BYTE PTR [rax],al
   140006f8b:	add    BYTE PTR [rax],cl
   140006f8d:	add    BYTE PTR [rsi],al
   140006f8f:	(bad)  
   140006f90:	rex
   140006f91:	ss pop rsp
   140006f93:	pop    rbx
   140006f94:	adc    al,BYTE PTR [rax]
   140006f96:	fdivp  st(7),st
   140006f98:	sbb    al,BYTE PTR [rbx]
   140006f9a:	sbb    BYTE PTR [rax],al
   140006f9c:	add    BYTE PTR [rax],al
   140006f9e:	or     BYTE PTR [rax],al
   140006fa0:	rex.WR add spl,r12b
   140006fa3:	push   QWORD PTR [rsi]
   140006fa5:	pop    rbx
   140006fa6:	adc    al,BYTE PTR [rax]
   140006fa8:	hlt    
   140006fa9:	(bad)  
   140006faa:	and    DWORD PTR [rbx],eax
   140006fac:	add    BYTE PTR [rax],al
   140006fae:	sbb    DWORD PTR [rax],eax
   140006fb0:	add    BYTE PTR [rax],al
   140006fb2:	add    DWORD PTR [rax],eax
   140006fb4:	(bad)  
   140006fb5:	(bad)  
   140006fb6:	(bad)  
   140006fb7:	inc    DWORD PTR [rax]
   140006fb9:	add    BYTE PTR [rax+rax*1-0x24],cl
   140006fbd:	call   FWORD PTR [rbx+rbx*2+0x1a]
   140006fc1:	add    ebx,DWORD PTR [rax]
   140006fc3:	add    BYTE PTR [rax],al
   140006fc5:	add    BYTE PTR [rax],cl
   140006fc7:	add    BYTE PTR [rax],cl
   140006fc9:	rex
   140006fca:	or     BYTE PTR ss:[rax+0x5b],al
   140006fce:	adc    al,BYTE PTR [rax]
   140006fd0:	(bad)  
   140006fd2:	adc    DWORD PTR [rax],eax
   140006fd4:	xor    al,0x0
   140006fd6:	mov    bh,0x8
   140006fd8:	add    BYTE PTR [rax],al
   140006fda:	add    BYTE PTR [rax],al
   140006fdc:	add    BYTE PTR [rax+0x0],dl
   140006fdf:	add    BYTE PTR [rdx],bl
   140006fe1:	add    esp,DWORD PTR [rax]
   140006fe3:	add    BYTE PTR [rax],al
   140006fe5:	add    BYTE PTR [rax],al
   140006fe7:	add    BYTE PTR [rip+0xffffffff9a004c40],cl        # 0xda00bc2d
   140006fed:	dec    DWORD PTR [rax]
   140006fef:	or     BYTE PTR [rbx+rbx*2+0x21],bl
   140006ff3:	add    eax,DWORD PTR [rax]
   140006ff5:	add    BYTE PTR [rcx],bl
   140006ff7:	add    BYTE PTR [rax],al
   140006ff9:	add    BYTE PTR [rcx],al
   140006ffb:	add    bh,bh
   140006ffd:	(bad)  
   140006ffe:	(bad)  
   140006fff:	inc    DWORD PTR [rax]
   140007001:	add    BYTE PTR [rax+rax*1-0x24],cl
   140007005:	call   FWORD PTR [rbx+rbx*2+0x1a]
   140007009:	add    edx,DWORD PTR [rax]
   14000700b:	add    BYTE PTR [rax],al
   14000700d:	add    BYTE PTR [rdx],cl
   14000700f:	add    BYTE PTR [rax+rax*1-0x3c],cl
   140007013:	inc    DWORD PTR [rax+0x36]
   140007016:	pop    rsp
   140007017:	pop    rbx
   140007018:	adc    al,BYTE PTR [rax]
   14000701a:	fdivr  st,st(7)
   14000701c:	adc    DWORD PTR [rax],ecx
   14000701e:	or     BYTE PTR [rax+rsi*1+0x49],bl
   140007022:	add    BYTE PTR [rax],al
   140007024:	mov    bh,0x8
   140007026:	add    BYTE PTR [rax],al
   140007028:	add    BYTE PTR [rax],al
   14000702a:	call   0x151007032
   14000702f:	add    BYTE PTR [rdx],al
   140007031:	add    BYTE PTR [rcx],ah
   140007033:	add    eax,DWORD PTR [rax]
   140007035:	add    BYTE PTR [rcx],ch
   140007037:	add    BYTE PTR [rax],cl
   140007039:	add    BYTE PTR [rcx],al
   14000703b:	add    bh,bh
   14000703d:	(bad)  
   14000703e:	(bad)  
   14000703f:	inc    DWORD PTR [rax]
   140007041:	add    BYTE PTR [rax+rax*1+0x42],cl
   140007045:	call   FWORD PTR [rbx+rbx*2+0x11]
   140007049:	adc    al,0x2
   14000704b:	add    BYTE PTR [rdx],dl
   14000704d:	add    BYTE PTR [rdx-0x1],dh
   140007050:	adc    DWORD PTR [rax],eax
   140007052:	xor    al,0x0
   140007054:	mov    bh,0x8
   140007056:	add    BYTE PTR [rax],al
   140007058:	add    BYTE PTR [rax],al
   14000705a:	call   0x15a007062
   14000705f:	add    ebx,DWORD PTR [rax]
   140007061:	add    BYTE PTR [rax],al
   140007063:	add    BYTE PTR [rax],cl
   140007065:	add    BYTE PTR [rip+0x8083640],cl        # 0x14808a6ab
   14000706b:	pop    rbx
   14000706c:	adc    al,BYTE PTR [rax]
   14000706e:	cs (bad) 
   140007070:	and    DWORD PTR [rbx],eax
   140007072:	add    BYTE PTR [rax],al
   140007074:	sbb    DWORD PTR [rax],eax
   140007076:	add    BYTE PTR [rax],al
   140007078:	add    DWORD PTR [rax],eax
   14000707a:	(bad)  
   14000707b:	(bad)  
   14000707c:	(bad)  
   14000707d:	inc    DWORD PTR [rax]
   14000707f:	add    BYTE PTR [rax+rax*1-0x24],cl
   140007083:	call   FWORD PTR [rbx+rbx*2+0x1a]
   140007087:	add    edx,DWORD PTR [rax]
   140007089:	add    BYTE PTR [rax],al
   14000708b:	add    BYTE PTR [rdx],cl
   14000708d:	add    BYTE PTR [rax+rax*1-0x3c],cl
   140007091:	inc    DWORD PTR [rax+0x36]
   140007094:	pop    rsp
   140007095:	pop    rbx
   140007096:	adc    al,BYTE PTR [rax]
   140007098:	fdivr  st,st(7)
   14000709a:	adc    DWORD PTR [rax],ecx
   14000709c:	or     BYTE PTR [rdx+rdx*1+0x8],bl
   1400070a0:	and    eax,0x200115c
   1400070a5:	add    BYTE PTR [rbx],ch
   1400070a7:	or     eax,0x80026
   1400070ac:	add    DWORD PTR [rax],eax
   1400070ae:	add    al,BYTE PTR [rax]
   1400070b0:	xor    BYTE PTR [rax],al
   1400070b2:	add    esi,DWORD PTR [rax]
   1400070b4:	add    BYTE PTR [rax],al
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	rex.WRX add BYTE PTR [rcx],r8b
   1400070bb:	add    BYTE PTR [rax],al
   1400070bd:	add    BYTE PTR [rax+0x0],ah
   1400070c0:	add    al,BYTE PTR [rax]
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	mov    WORD PTR [rax],es
   1400070c6:	(bad)  
   1400070c7:	call   FWORD PTR [rcx+rax*1]
   1400070ca:	add    al,BYTE PTR [rax]
   1400070cc:	(bad)  
   1400070cd:	push   rbp
   1400070ce:	add    al,BYTE PTR [rax]
   1400070d0:	add    DWORD PTR [rax],eax
   1400070d2:	(bad)  
   1400070d3:	push   rbp
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    DWORD PTR [rax],eax
   1400070d8:	(bad)  
   1400070d9:	pop    rbx
   1400070da:	sbb    al,BYTE PTR [rbx]
   1400070dc:	adc    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	or     BYTE PTR [rax],al
   1400070e2:	(bad)  
   1400070e3:	(bad)  
   1400070e4:	rex
   1400070e5:	ss pop rsp
   1400070e7:	pop    rbx
   1400070e8:	adc    al,BYTE PTR [rax]
   1400070ea:	fdivp  st(7),st
   1400070ec:	sbb    eax,DWORD PTR [rbx]
   1400070ee:	add    al,0x0
   1400070f0:	add    al,0x0
   1400070f2:	stc    
   1400070f3:	inc    DWORD PTR [rcx]
   1400070f5:	add    BYTE PTR [rax],cl
   1400070f7:	pop    rbx
   1400070f8:	(bad)  
   1400070f9:	add    ecx,DWORD PTR [rax]
   1400070fb:	add    al,dh
   1400070fd:	inc    DWORD PTR [rdx]
   1400070ff:	add    cl,BYTE PTR [rax+rax*1-0x7c]
   140007103:	std    
   140007104:	pop    rsp
   140007105:	pop    rbx
   140007106:	sbb    al,BYTE PTR [rbx]
   140007108:	xor    BYTE PTR [rax],al
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	(bad)  
   14000710d:	add    BYTE PTR [rax+rax*1-0x36],cl
   140007111:	dec    DWORD PTR [rax+rax*1-0x3a]
   140007115:	push   QWORD PTR [rsi]
   140007117:	or     BYTE PTR [rax+0x5b],al
   14000711a:	adc    DWORD PTR [rax],eax
   14000711c:	fdiv   st(7),st
   14000711e:	sbb    al,BYTE PTR [rbx]
   140007120:	and    BYTE PTR [rax],al
   140007122:	add    BYTE PTR [rax],al
   140007124:	add    BYTE PTR [rax],al
   140007126:	rex.WR add BYTE PTR [rdx-0x51ffb301],r14b
   14000712d:	call   FWORD PTR [rbx+rbx*2-0x49]
   140007131:	or     BYTE PTR [rcx],al
   140007133:	add    BYTE PTR [rax],al
   140007135:	add    BYTE PTR [rax],al
   140007137:	adc    BYTE PTR [rax],al
   140007139:	add    BYTE PTR [rcx],ah
   14000713b:	add    eax,DWORD PTR [rax]
   14000713d:	add    BYTE PTR [rcx],bl
   14000713f:	add    BYTE PTR [rax],al
   140007141:	add    BYTE PTR [rcx],al
   140007143:	add    bh,bh
   140007145:	(bad)  
   140007146:	(bad)  
   140007147:	inc    DWORD PTR [rax]
   140007149:	add    BYTE PTR [rax+rax*1-0x46],cl
   14000714d:	call   FWORD PTR [rbx+rbx*2+0x1a]
   140007151:	add    edx,DWORD PTR [rax]
   140007153:	add    BYTE PTR [rax],al
   140007155:	add    BYTE PTR [rdx],cl
   140007157:	add    BYTE PTR [rax+rax*1-0x2a],cl
   14000715b:	inc    DWORD PTR [rax+0x36]
   14000715e:	pop    rsp
   14000715f:	pop    rbx
   140007160:	adc    DWORD PTR [rax],eax
   140007162:	fdivr  st,st(7)
   140007164:	adc    DWORD PTR [rdx+rax*1],edx
   140007167:	add    BYTE PTR [rdx],dl
   140007169:	add    BYTE PTR [rdx],al
   14000716b:	add    BYTE PTR [rbx],ch
   14000716d:	or     eax,0x80026
   140007172:	add    DWORD PTR [rax],eax
   140007174:	add    al,BYTE PTR [rax]
   140007176:	add    al,0x0
   140007178:	add    edx,DWORD PTR [rax]
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	add    BYTE PTR [rax],al
   14000717e:	adc    BYTE PTR [rax],al
   140007180:	add    DWORD PTR [rax],eax
   140007182:	add    BYTE PTR [rax],al
   140007184:	or     al,BYTE PTR [rax]
   140007186:	add    al,BYTE PTR [rax]
   140007188:	add    BYTE PTR [rax],al
   14000718a:	add    al,0x0
   14000718c:	(bad)  
   14000718d:	call   FWORD PTR [rdx]
   14000718f:	add    DWORD PTR [rax+rax*1],eax
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    BYTE PTR [rax],al
   140007196:	or     eax,0x49305b
   14000719b:	add    BYTE PTR [rcx],dl
   14000719d:	adc    al,0x2
   14000719f:	add    BYTE PTR [rdx],dl
   1400071a1:	add    BYTE PTR [rdx],al
   1400071a3:	add    BYTE PTR [rbx],ch
   1400071a5:	or     eax,0x80026
   1400071aa:	add    DWORD PTR [rax],eax
   1400071ac:	add    al,BYTE PTR [rax]
   1400071ae:	rex.W add BYTE PTR [rdx],al
   1400071b1:	xor    BYTE PTR [rip+0xa000000],al        # 0x14a0071b7
   1400071b7:	add    BYTE PTR [rax+rax*1],cl
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	sub    BYTE PTR [rax],al
   1400071be:	(bad)  
   1400071bf:	call   FWORD PTR [rdx]
   1400071c1:	add    ebx,DWORD PTR [rax]
   1400071c3:	add    BYTE PTR [rax],al
   1400071c5:	add    BYTE PTR [rax],cl
   1400071c7:	add    BYTE PTR [rax+rax*1-0x44],cl
   1400071cb:	std    
   1400071cc:	ss pop rbx
   1400071ce:	adc    al,BYTE PTR [rax]
   1400071d0:	int3   
   1400071d1:	cld    
   1400071d2:	sbb    eax,0x1000800
   1400071d7:	pop    rbx
   1400071d8:	adc    eax,0x8001003
   1400071dd:	(bad)  
   1400071de:	(bad)  
   1400071df:	rex.WR add cl,r14b
   1400071e2:	call   FWORD PTR [rbx+0x1a]
   1400071e5:	add    ecx,DWORD PTR [rax+0x0]
   1400071e8:	add    BYTE PTR [rax],al
   1400071ea:	adc    al,0x0
   1400071ec:	rex.WR add BYTE PTR [rax-0x6bffb303],r11b
   1400071f3:	std    
   1400071f4:	rex.WR add BYTE PTR [rax-0x21ffb303],r10b
   1400071fb:	push   QWORD PTR [rsi]
   1400071fd:	pop    rbx
   1400071fe:	adc    al,BYTE PTR [rax]
   140007200:	pushf  
   140007201:	cld    
   140007202:	adc    cl,BYTE PTR [rax]
   140007204:	and    eax,0x9400125c
   140007209:	cld    
   14000720a:	adc    DWORD PTR [rcx*1-0x2fffffa4],ecx
   140007211:	rex.W add BYTE PTR [rax+0x1],al
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rax],al
   140007219:	add    BYTE PTR [rax],al
   14000721b:	add    BYTE PTR [rdi+rcx*1],al
   14000721e:	add    BYTE PTR [rax],al
   140007220:	add    eax,DWORD PTR [rdi]
   140007222:	(bad)  
   140007223:	inc    DWORD PTR [rcx]
   140007225:	or     BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rax+rax*1],al
	...
   140007236:	add    BYTE PTR [rax],al
   140007238:	nop
   140007239:	jne    0x14000723b
   14000723b:	rex add DWORD PTR [rax],eax
   14000723e:	add    BYTE PTR [rax],al
   140007240:	push   rax
   140007241:	jne    0x140007243
   140007243:	rex add DWORD PTR [rax],eax
   140007246:	add    BYTE PTR [rax],al
   140007248:	mov    al,0x74
   14000724a:	add    BYTE PTR [rax+0x1],al
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rax],al
   140007251:	je     0x140007253
   140007253:	rex add DWORD PTR [rax],eax
   140007256:	add    BYTE PTR [rax],al
   140007258:	nop
   140007259:	jae    0x14000725b
   14000725b:	rex add DWORD PTR [rax],eax
   14000725e:	add    BYTE PTR [rax],al
   140007260:	xor    BYTE PTR [rbx+0x0],dh
   140007263:	rex add DWORD PTR [rax],eax
   140007266:	add    BYTE PTR [rax],al
   140007268:	shl    BYTE PTR [rdx+0x0],1
   14000726b:	rex add DWORD PTR [rax],eax
   14000726e:	add    BYTE PTR [rax],al
   140007270:	(bad)  
   140007271:	add    BYTE PTR [rax],al
   140007273:	add    BYTE PTR [rax],al
   140007275:	add    BYTE PTR [rax],al
   140007277:	add    BYTE PTR [rax+0x1400072],dl
	...
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    al,dl
   140007291:	cmp    al,BYTE PTR [rax]
   140007293:	rex add DWORD PTR [rax],eax
   140007296:	add    BYTE PTR [rax],al
   140007298:	sar    BYTE PTR [rdx],1
   14000729a:	add    BYTE PTR [rax+0x1],al
   14000729d:	add    BYTE PTR [rax],al
   14000729f:	add    al,dl
   1400072a1:	cmp    al,BYTE PTR [rax]
   1400072a3:	rex add DWORD PTR [rax],eax
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	sar    BYTE PTR [rdx],1
   1400072aa:	add    BYTE PTR [rax+0x1],al
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    al,dl
   1400072b1:	cmp    al,BYTE PTR [rax]
   1400072b3:	rex add DWORD PTR [rax],eax
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	sar    BYTE PTR [rdx],1
   1400072ba:	add    BYTE PTR [rax+0x1],al
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    al,dl
   1400072c1:	cmp    al,BYTE PTR [rax]
   1400072c3:	rex add DWORD PTR [rax],eax
	...
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	add    BYTE PTR [rcx+rax*1],bpl
   1400072d4:	and    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	add    BYTE PTR [rax],al
   1400072da:	add    BYTE PTR [rax],al
   1400072dc:	sub    BYTE PTR [rax],al
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	add    BYTE PTR [rax],al
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	add    al,0x0
   1400072e6:	or     BYTE PTR [rax],al
   1400072e8:	jno    0x1400072ea
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	add    BYTE PTR [rax],cl
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	and    BYTE PTR [rdi+0x14000],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	or     eax,DWORD PTR [rax]
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    BYTE PTR [rax],al
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	adc    BYTE PTR [rdi+0x14000],al
   140007306:	add    BYTE PTR [rax],al
   140007308:	or     eax,DWORD PTR [rax]
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	or     BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	or     DWORD PTR [rdi+0x14000],eax
   140007316:	add    BYTE PTR [rax],al
   140007318:	push   rax
   140007319:	add    DWORD PTR [rax],0x1000
   14000731f:	add    BYTE PTR [rax],cl
   140007321:	xchg   DWORD PTR [rax],eax
   140007323:	rex add DWORD PTR [rax],eax
   140007326:	add    BYTE PTR [rax],al
   140007328:	lock add BYTE PTR [rax],al
   14000732b:	add    BYTE PTR [rax],bl
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    BYTE PTR [rax+0x0],al
   140007332:	retf   0x2001
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    BYTE PTR [rax+rax*1],ch
   14000733a:	add    BYTE PTR [rax],al
   14000733c:	or     BYTE PTR [rax],al
   14000733e:	add    BYTE PTR [rax],al
   140007340:	add    BYTE PTR [rax],al
   140007342:	add    BYTE PTR [rax],al
   140007344:	add    al,0x0
   140007346:	or     BYTE PTR [rax],al
   140007348:	jo     0x140007392
   14000734a:	add    BYTE PTR [rax],al
   14000734c:	add    BYTE PTR [rax],al
   14000734e:	add    eax,0x83c400
   140007353:	rex add DWORD PTR [rax],eax
   140007356:	add    BYTE PTR [rax],al
   140007358:	or     BYTE PTR [rax],al
   14000735a:	add    BYTE PTR [rax],al
   14000735c:	add    BYTE PTR [rax],al
   14000735e:	add    BYTE PTR [rax],al
   140007360:	rol    BYTE PTR [rbx+0x14000],0x0
   140007367:	add    al,cl
   140007369:	add    BYTE PTR [rax],al
   14000736b:	add    BYTE PTR [rax],cl
   14000736d:	add    BYTE PTR [rax],al
   14000736f:	add    BYTE PTR [rax+0x1400083],dh
   140007375:	add    BYTE PTR [rax],al
   140007377:	add    BYTE PTR [rbx],dl
   140007379:	add    BYTE PTR [rax],0x0
   14000737c:	adc    BYTE PTR [rax],al
   14000737e:	add    BYTE PTR [rax],al
   140007380:	lods   al,BYTE PTR ds:[rsi]
   140007381:	add    DWORD PTR [rax],0x40
   140007384:	add    DWORD PTR [rax],eax
   140007386:	add    BYTE PTR [rax],al
   140007388:	lock add BYTE PTR [rax],al
   14000738b:	add    BYTE PTR [rax],bl
   14000738d:	add    BYTE PTR [rax],al
   14000738f:	add    BYTE PTR [rax+0x0],al
   140007392:	out    dx,al
   140007393:	add    DWORD PTR [rax],ebp
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    BYTE PTR [rax],cl
   140007399:	add    BYTE PTR [rax],al
   14000739b:	add    BYTE PTR [rax],cl
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rax],al
   1400073a1:	add    BYTE PTR [rax],al
   1400073a3:	add    BYTE PTR [rip+0x71000800],al        # 0x1b1007ba9
   1400073a9:	add    BYTE PTR [rax],al
   1400073ab:	add    BYTE PTR [rax],al
   1400073ad:	or     BYTE PTR [rax+rax*1],al
   1400073b0:	push   0x140007f
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rbx],cl
   1400073b9:	add    BYTE PTR [rax],al
   1400073bb:	add    BYTE PTR [rax],al
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rax+0x7f],ah
   1400073c2:	add    BYTE PTR [rax+0x1],al
   1400073c5:	add    BYTE PTR [rax],al
   1400073c7:	add    al,cl
   1400073c9:	add    BYTE PTR [rax],al
   1400073cb:	add    BYTE PTR [rax],cl
   1400073cd:	add    BYTE PTR [rax],al
   1400073cf:	add    al,dh
   1400073d1:	jle    0x1400073d3
   1400073d3:	rex add DWORD PTR [rax],eax
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	or     eax,DWORD PTR [rcx]
   1400073da:	add    BYTE PTR [rax],al
   1400073dc:	adc    BYTE PTR [rax],al
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	fdivr  DWORD PTR [rsi+0x0]
   1400073e3:	rex add DWORD PTR [rax],eax
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	adc    eax,DWORD PTR [rax+0x180000]
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	sar    BYTE PTR [rsi+0x0],1
   1400073f3:	rex add DWORD PTR [rax],eax
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	lock add BYTE PTR [rax],al
   1400073fb:	add    BYTE PTR [rax],ah
   1400073fd:	add    BYTE PTR [rax],al
   1400073ff:	add    BYTE PTR [rax+0x0],al
   140007402:	out    dx,al
   140007403:	add    DWORD PTR [rax+0x0],ecx
   140007406:	add    BYTE PTR [rax],al
   140007408:	pop    rsp
   140007409:	add    BYTE PTR [rax],al
   14000740b:	add    BYTE PTR [rax],ch
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rax],al
   140007411:	add    BYTE PTR [rax],al
   140007413:	add    BYTE PTR [rcx],cl
   140007415:	add    BYTE PTR [rax],cl
   140007417:	add    BYTE PTR [rax+0x48],dh
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	add    BYTE PTR [rax],al
   14000741e:	add    eax,DWORD PTR [rax]
   140007420:	cmp    BYTE PTR [rbp+0x0],bh
   140007423:	rex add DWORD PTR [rax],eax
   140007426:	add    BYTE PTR [rax],al
   140007428:	or     BYTE PTR [rax],al
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	add    BYTE PTR [rax],al
   14000742e:	add    BYTE PTR [rax],al
   140007430:	and    BYTE PTR [rbp+0x0],bh
   140007433:	rex add DWORD PTR [rax],eax
   140007436:	add    BYTE PTR [rax],al
   140007438:	mov    BYTE PTR [rax],al
   14000743a:	add    BYTE PTR [rax],al
   14000743c:	or     BYTE PTR [rax],al
   14000743e:	add    BYTE PTR [rax],al
   140007440:	clc    
   140007441:	jl     0x140007443
   140007443:	rex add DWORD PTR [rax],eax
   140007446:	add    BYTE PTR [rax],al
   140007448:	or     eax,DWORD PTR [rcx]
   14000744a:	add    BYTE PTR [rax],al
   14000744c:	adc    BYTE PTR [rax],al
   14000744e:	add    BYTE PTR [rax],al
   140007450:	call   0x1414074d1
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rbx],dl
   140007459:	add    BYTE PTR [rax],0x0
   14000745c:	sbb    BYTE PTR [rax],al
   14000745e:	add    BYTE PTR [rax],al
   140007460:	movabs al,ds:0x1b0000000140007c
   140007469:	add    DWORD PTR [rax],eax
   14000746b:	add    BYTE PTR [rax],ah
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    BYTE PTR [rbx+0x140007c],bl
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rax+0x1],bl
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	sub    BYTE PTR [rax],al
   14000747e:	add    BYTE PTR [rax],al
   140007480:	(bad)  
   140007481:	jl     0x140007483
   140007483:	rex add DWORD PTR [rax],eax
   140007486:	add    BYTE PTR [rax],al
   140007488:	enter  0x0,0x0
   14000748c:	xor    BYTE PTR [rax],al
   14000748e:	add    BYTE PTR [rax],al
   140007490:	cdq    
   140007491:	jl     0x140007493
   140007493:	rex add DWORD PTR [rax],eax
   140007496:	add    BYTE PTR [rax],al
   140007498:	enter  0x0,0x0
   14000749c:	cmp    BYTE PTR [rax],al
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	cwde   
   1400074a1:	jl     0x1400074a3
   1400074a3:	rex add DWORD PTR [rax],eax
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	lock add BYTE PTR [rax],al
   1400074ab:	add    BYTE PTR [rax+0x0],al
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	add    sil,bpl
   1400074b3:	add    DWORD PTR [rax+0x0],eax
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	push   rsp
   1400074b9:	add    BYTE PTR [rax],al
   1400074bb:	add    BYTE PTR [rax],ch
   1400074bd:	add    BYTE PTR [rax],al
   1400074bf:	add    BYTE PTR [rax],al
   1400074c1:	add    BYTE PTR [rax],al
   1400074c3:	add    BYTE PTR [rax],cl
   1400074c5:	add    BYTE PTR [rax],cl
   1400074c7:	add    BYTE PTR [rax+0x48],dh
   1400074ca:	add    BYTE PTR [rax],al
   1400074cc:	add    BYTE PTR [rax],al
   1400074ce:	add    al,BYTE PTR [rax]
   1400074d0:	call   0x14140754d
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rax],cl
   1400074d9:	add    BYTE PTR [rax],al
   1400074db:	add    BYTE PTR [rax],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    BYTE PTR [rax+0x1400078],ah
   1400074e5:	add    BYTE PTR [rax],al
   1400074e7:	add    BYTE PTR [rbx],cl
   1400074e9:	add    DWORD PTR [rax],eax
   1400074eb:	add    BYTE PTR [rax],cl
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rax+0x1400078],cl
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    BYTE PTR [rbx],dl
   1400074f9:	add    BYTE PTR [rax],0x0
   1400074fc:	adc    BYTE PTR [rax],al
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	rex js 0x140007503
   140007503:	rex add DWORD PTR [rax],eax
   140007506:	add    BYTE PTR [rax],al
   140007508:	sbb    eax,DWORD PTR [rcx]
   14000750a:	add    BYTE PTR [rax],al
   14000750c:	sbb    BYTE PTR [rax],al
   14000750e:	add    BYTE PTR [rax],al
   140007510:	cmp    edi,DWORD PTR [rax+0x0]
   140007513:	rex add DWORD PTR [rax],eax
   140007516:	add    BYTE PTR [rax],al
   140007518:	pop    rax
   140007519:	add    DWORD PTR [rax],eax
   14000751b:	add    BYTE PTR [rax],ah
   14000751d:	add    BYTE PTR [rax],al
   14000751f:	add    BYTE PTR [rdx],bh
   140007521:	js     0x140007523
   140007523:	rex add DWORD PTR [rax],eax
   140007526:	add    BYTE PTR [rax],al
   140007528:	enter  0x0,0x0
   14000752c:	sub    BYTE PTR [rax],al
   14000752e:	add    BYTE PTR [rax],al
   140007530:	cmp    DWORD PTR [rax+0x0],edi
   140007533:	rex add DWORD PTR [rax],eax
   140007536:	add    BYTE PTR [rax],al
   140007538:	enter  0x0,0x0
   14000753c:	xor    BYTE PTR [rax],al
   14000753e:	add    BYTE PTR [rax],al
   140007540:	cmp    BYTE PTR [rax+0x0],bh
   140007543:	rex add DWORD PTR [rax],eax
   140007546:	add    BYTE PTR [rax],al
   140007548:	lock add BYTE PTR [rax],al
   14000754b:	add    BYTE PTR [rax],bh
   14000754d:	add    BYTE PTR [rax],al
   14000754f:	add    BYTE PTR [rax+0x0],al
   140007552:	mov    BYTE PTR [rcx],al
   140007554:	adc    BYTE PTR [rax],al
   140007556:	add    BYTE PTR [rax],al
   140007558:	cmp    al,0x0
   14000755a:	add    BYTE PTR [rax],al
   14000755c:	add    BYTE PTR [rax],r8b
   14000755f:	add    BYTE PTR [rax],al
   140007561:	add    BYTE PTR [rax],al
   140007563:	add    BYTE PTR [rdx],al
   140007565:	add    BYTE PTR [rax],cl
   140007567:	add    BYTE PTR [rax-0x18],dh
   14000756a:	add    BYTE PTR [rax],al
   14000756c:	add    BYTE PTR [rax],al
   14000756e:	add    DWORD PTR [rax],eax
   140007570:	xor    al,0x78
   140007572:	add    BYTE PTR [rax+0x1],al
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rax],bl
   140007579:	add    DWORD PTR [rax],eax
   14000757b:	add    BYTE PTR [rax],al
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rax],dh
   140007581:	js     0x140007583
   140007583:	rex add DWORD PTR [rax],eax
   140007586:	add    BYTE PTR [rax],al
   140007588:	lock add BYTE PTR [rax],al
   14000758b:	add    BYTE PTR [rax],cl
   14000758d:	add    BYTE PTR [rax],al
   14000758f:	add    BYTE PTR [rax+0x0],al
   140007592:	lods   al,BYTE PTR ds:[rsi]
   140007593:	add    DWORD PTR [rax],ebp
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    BYTE PTR [rax],cl
   140007599:	add    BYTE PTR [rax],al
   14000759b:	add    BYTE PTR [rax+rax*1+0x0],al
   14000759f:	add    BYTE PTR [rax],al
   1400075a1:	add    BYTE PTR [rax],al
   1400075a3:	add    BYTE PTR [rip+0x71000800],al        # 0x1b1007da9
   1400075a9:	add    BYTE PTR [rax],al
   1400075ab:	add    BYTE PTR [rax],al
   1400075ad:	or     BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rax+0x76],bh
   1400075b2:	add    BYTE PTR [rax+0x1],al
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    BYTE PTR [rbx],cl
   1400075b9:	add    BYTE PTR [rax],al
   1400075bb:	add    BYTE PTR [rax],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rax],dl
   1400075c1:	jbe    0x1400075c3
   1400075c3:	rex add DWORD PTR [rax],eax
   1400075c6:	add    BYTE PTR [rax],al
   1400075c8:	or     eax,DWORD PTR [rcx]
   1400075ca:	add    BYTE PTR [rax],al
   1400075cc:	or     BYTE PTR [rax],al
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	or     BYTE PTR [rsi+0x0],dh
   1400075d3:	rex add DWORD PTR [rax],eax
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	enter  0x0,0x0
   1400075dc:	adc    BYTE PTR [rax],al
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	add    al,0x76
   1400075e2:	add    BYTE PTR [rax+0x1],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rax],dl
   1400075e9:	add    DWORD PTR [rax],eax
   1400075eb:	add    BYTE PTR [rax],bl
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax],al
   1400075f1:	jbe    0x1400075f3
   1400075f3:	rex add DWORD PTR [rax],eax
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	lock add BYTE PTR [rax],al
   1400075fb:	add    BYTE PTR [rax],ah
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rip+0x70000000],al        # 0x1b0007605
   140007605:	test   al,0x0
   140007607:	add    DWORD PTR [rip+0x0],eax        # 0x14000760d
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rip+0x30000307],dh        # 0x17000791c
	...
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rax+0x1400076],dl
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rip+0x0],al        # 0x140007635
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rax+0x400],dl
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    BYTE PTR [rax+rax*1],dl
   140007642:	add    BYTE PTR [rax],al
   140007644:	add    BYTE PTR [rax],al
   140007646:	add    BYTE PTR [rax],al
   140007648:	adc    al,0x0
   14000764a:	add    BYTE PTR [rax],al
   14000764c:	add    BYTE PTR [rax],al
   14000764e:	add    BYTE PTR [rax],al
   140007650:	add    eax,0x0
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax+0x400],dl
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rax+rax*1],dl
   140007662:	add    BYTE PTR [rax],al
   140007664:	add    BYTE PTR [rax],al
   140007666:	add    BYTE PTR [rax],al
   140007668:	adc    al,0x0
   14000766a:	add    BYTE PTR [rax],al
   14000766c:	add    BYTE PTR [rax],al
   14000766e:	add    BYTE PTR [rax],al
   140007670:	xchg   ebx,eax
   140007671:	add    BYTE PTR [rax],al
   140007673:	add    BYTE PTR [rax],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rcx],ah
   140007679:	add    BYTE PTR [rax],al
   14000767b:	add    BYTE PTR [rax],al
   14000767d:	add    BYTE PTR [rax],al
   14000767f:	add    BYTE PTR [rax+0x1400076],cl
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    BYTE PTR [rax+rax*1+0x2],ah
   14000768b:	add    BYTE PTR [rax],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rcx],ah
   140007691:	or     BYTE PTR [rax],al
   140007693:	add    BYTE PTR [rax],al
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rax+0x1400077],bl
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    BYTE PTR [rcx],ah
   1400076a1:	add    BYTE PTR [rax],al
   1400076a3:	add    BYTE PTR [rax],al
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rax+0x77],dl
   1400076aa:	add    BYTE PTR [rax+0x1],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rcx],ah
   1400076b1:	add    BYTE PTR [rax],al
   1400076b3:	add    BYTE PTR [rax],al
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    al,ah
   1400076b9:	jbe    0x1400076bb
   1400076bb:	rex add DWORD PTR [rax],eax
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	and    DWORD PTR [rax],eax
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	add    BYTE PTR [rax],al
   1400076c6:	add    BYTE PTR [rax],al
   1400076c8:	shl    BYTE PTR [rsi+0x0],1
   1400076cb:	rex add DWORD PTR [rax],eax
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	xor    BYTE PTR [rbx],al
   1400076d2:	add    BYTE PTR [rax],al
   1400076d4:	or     al,0x0
	...
   1400076de:	add    BYTE PTR [rax],al
   1400076e0:	xor    eax,0x28000307
	...
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    al,dh
   1400076f9:	ja     0x1400076fb
   1400076fb:	rex add DWORD PTR [rax],eax
   1400076fe:	add    BYTE PTR [rax],al
   140007700:	adc    BYTE PTR [rax],al
   140007702:	add    BYTE PTR [rax],al
   140007704:	add    BYTE PTR [rax],al
   140007706:	add    BYTE PTR [rax],al
   140007708:	adc    BYTE PTR [rax],al
   14000770a:	add    BYTE PTR [rax],al
   14000770c:	add    BYTE PTR [rax],al
   14000770e:	add    BYTE PTR [rax],al
   140007710:	add    al,0x0
   140007712:	add    BYTE PTR [rax],al
   140007714:	add    BYTE PTR [rax],al
   140007716:	add    BYTE PTR [rax],al
   140007718:	nop
   140007719:	add    BYTE PTR [rax+rax*1],al
   14000771c:	add    BYTE PTR [rax],al
   14000771e:	add    BYTE PTR [rax],al
   140007720:	adc    al,0x0
   140007722:	add    BYTE PTR [rax],al
   140007724:	add    BYTE PTR [rax],al
   140007726:	add    BYTE PTR [rax],al
   140007728:	adc    al,0x0
   14000772a:	add    BYTE PTR [rax],al
   14000772c:	add    BYTE PTR [rax],al
   14000772e:	add    BYTE PTR [rax],al
   140007730:	adc    al,0x0
   140007732:	add    BYTE PTR [rax],al
   140007734:	add    BYTE PTR [rax],al
   140007736:	add    BYTE PTR [rax],al
   140007738:	adc    al,0x0
   14000773a:	add    BYTE PTR [rax],al
   14000773c:	add    BYTE PTR [rax],al
   14000773e:	add    BYTE PTR [rax],al
   140007740:	xchg   ebx,eax
	...
   14000774d:	add    BYTE PTR [rax],al
   14000774f:	add    BYTE PTR [rip+0x10000307],dh        # 0x150007a5c
	...
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rax+0x1400077],ah
   14000776d:	add    BYTE PTR [rax],al
   14000776f:	add    BYTE PTR [rax+rax*1],al
   140007772:	add    BYTE PTR [rax],al
   140007774:	add    BYTE PTR [rax],al
   140007776:	add    BYTE PTR [rax],al
   140007778:	add    al,0x0
   14000777a:	add    BYTE PTR [rax],al
   14000777c:	add    BYTE PTR [rax],al
   14000777e:	add    BYTE PTR [rax],al
   140007780:	nop
   140007781:	add    BYTE PTR [rax+rax*1],al
   140007784:	add    BYTE PTR [rax],al
   140007786:	add    BYTE PTR [rax],al
   140007788:	adc    al,0x0
   14000778a:	add    BYTE PTR [rax],al
   14000778c:	add    BYTE PTR [rax],al
   14000778e:	add    BYTE PTR [rax],al
   140007790:	xchg   ebx,eax
   140007791:	add    BYTE PTR [rax],al
   140007793:	add    BYTE PTR [rax],al
   140007795:	add    BYTE PTR [rax],al
   140007797:	add    BYTE PTR [rax],dl
   140007799:	add    BYTE PTR [rax],al
   14000779b:	add    BYTE PTR [rax],al
   14000779d:	add    BYTE PTR [rax],al
   14000779f:	add    BYTE PTR [rcx],ah
   1400077a1:	add    BYTE PTR [rax],al
   1400077a3:	add    BYTE PTR [rax],al
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rax+0x1400077],dh
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rbx+0x0],al
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	add    DWORD PTR [rax],eax
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	fdiv   DWORD PTR [rdi+0x0]
   1400077bb:	rex add DWORD PTR [rax],eax
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	enter  0x77,0x40
   1400077c4:	add    DWORD PTR [rax],eax
   1400077c6:	add    BYTE PTR [rax],al
   1400077c8:	add    DWORD PTR [rax],eax
   1400077ca:	add    BYTE PTR [rax],al
   1400077cc:	add    eax,DWORD PTR [rbx]
	...
   1400077d6:	add    BYTE PTR [rax],al
   1400077d8:	add    DWORD PTR [rax],eax
   1400077da:	add    BYTE PTR [rax],al
   1400077dc:	add    eax,DWORD PTR [rbx]
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	add    al,BYTE PTR [rax]
	...
   1400077ee:	add    BYTE PTR [rax],al
   1400077f0:	and    DWORD PTR [rax],eax
   1400077f2:	add    BYTE PTR [rax],al
   1400077f4:	add    BYTE PTR [rax],al
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	movabs al,ds:0x2100000001400079
   140007801:	add    BYTE PTR [rax],al
   140007803:	add    BYTE PTR [rax],al
   140007805:	add    BYTE PTR [rax],al
   140007807:	add    BYTE PTR [rax+0x1400079],ah
   14000780d:	add    BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rcx],ah
   140007811:	add    BYTE PTR [rax],al
   140007813:	add    BYTE PTR [rax],al
   140007815:	add    BYTE PTR [rax],al
   140007817:	add    BYTE PTR [rax-0x79],al
   14000781a:	add    BYTE PTR [rax+0x1],al
   14000781d:	add    BYTE PTR [rax],al
   14000781f:	add    BYTE PTR [rcx],ah
   140007821:	add    BYTE PTR [rax],al
   140007823:	add    BYTE PTR [rax],al
   140007825:	add    BYTE PTR [rax],al
   140007827:	add    BYTE PTR [rax-0x79],al
   14000782a:	add    BYTE PTR [rax+0x1],al
   14000782d:	add    BYTE PTR [rax],al
   14000782f:	add    BYTE PTR [rip+0x70000000],al        # 0x1b0007835
   140007835:	jmp    0x14505793a
   14000783a:	add    eax,0x5
   14000783f:	add    BYTE PTR [rip+0x10000307],dh        # 0x150007b4c
	...
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rax+0x7b],dh
   14000785a:	add    BYTE PTR [rax+0x1],al
   14000785d:	add    BYTE PTR [rax],al
   14000785f:	add    BYTE PTR [rcx+0x0],dl
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rax+0x7b],bl
   14000786a:	add    BYTE PTR [rax+0x1],al
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    BYTE PTR [rax+0x400],dl
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    BYTE PTR [rax+rax*1],dl
   14000787a:	add    BYTE PTR [rax],al
   14000787c:	add    BYTE PTR [rax],al
   14000787e:	add    BYTE PTR [rax],al
   140007880:	xchg   ebx,eax
   140007881:	add    BYTE PTR [rax],al
   140007883:	add    BYTE PTR [rax],al
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    BYTE PTR [rax],ah
   140007889:	adc    al,0x0
   14000788b:	add    BYTE PTR [rax],al
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    al,al
   140007891:	jns    0x140007893
   140007893:	rex add DWORD PTR [rax],eax
	...
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	xor    eax,0x10000307
	...
   1400078b5:	add    BYTE PTR [rax],al
   1400078b7:	add    BYTE PTR [rax],cl
   1400078b9:	jns    0x1400078bb
   1400078bb:	rex add DWORD PTR [rax],eax
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	xchg   ecx,eax
   1400078c1:	add    BYTE PTR [rax],al
   1400078c3:	add    BYTE PTR [rax],al
   1400078c5:	add    BYTE PTR [rax],al
   1400078c7:	add    al,dh
   1400078c9:	js     0x1400078cb
   1400078cb:	rex add DWORD PTR [rax],eax
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	nop
   1400078d1:	add    BYTE PTR [rax+rax*1],al
   1400078d4:	add    BYTE PTR [rax],al
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	adc    al,0x0
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	add    BYTE PTR [rax],al
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	xchg   ebx,eax
   1400078e1:	add    BYTE PTR [rax],al
   1400078e3:	add    BYTE PTR [rax],al
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    BYTE PTR [rax+0x49],dh
   1400078ea:	add    BYTE PTR [rcx],al
   1400078ec:	add    BYTE PTR [rax],al
   1400078ee:	add    BYTE PTR [rax],al
   1400078f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400078f1:	add    eax,0x0
	...
   1400078fe:	add    BYTE PTR [rax],al
   140007900:	add    BYTE PTR [rax+0x0],dl
   140007903:	add    BYTE PTR [rax],al
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rcx],ah
   140007909:	add    BYTE PTR [rax],al
   14000790b:	add    BYTE PTR [rax],al
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    BYTE PTR [rax],ah
   140007911:	jns    0x140007913
   140007913:	rex add DWORD PTR [rax],eax
	...
   14000791e:	add    BYTE PTR [rax],al
   140007920:	rex.B (bad) 
   140007922:	add    DWORD PTR [rax],eax
   140007924:	or     BYTE PTR [rax],al
   140007926:	add    BYTE PTR [rax],al
   140007928:	mov    al,0x79
   14000792a:	add    BYTE PTR [rax+0x1],al
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rdx+0x8000001],al
   140007935:	add    BYTE PTR [rax],al
   140007937:	add    BYTE PTR [rax],al
   140007939:	add    BYTE PTR [rax],al
   14000793b:	add    BYTE PTR [rcx],al
	...
   140007945:	add    BYTE PTR [rax],al
   140007947:	add    BYTE PTR [rcx],ah
   140007949:	add    BYTE PTR [rax],al
   14000794b:	add    BYTE PTR [rax],al
   14000794d:	add    BYTE PTR [rax],al
   14000794f:	add    BYTE PTR [rax+0x1400079],ah
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rbx+0x0],dl
   14000795d:	add    BYTE PTR [rax],al
   14000795f:	add    BYTE PTR [rax],cl
   140007961:	add    BYTE PTR [rax],al
   140007963:	add    BYTE PTR [rax],al
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    BYTE PTR [rax+0x79],dh
   14000796a:	add    BYTE PTR [rax+0x1],al
   14000796d:	add    BYTE PTR [rax],al
   14000796f:	add    BYTE PTR [rcx],dh
   140007971:	(bad)  
   140007972:	add    DWORD PTR [rax],eax
   140007974:	or     BYTE PTR [rax],al
   140007976:	add    BYTE PTR [rax],al
   140007978:	add    BYTE PTR [rax],0x0
	...
   140007987:	add    BYTE PTR [rcx],ah
   140007989:	add    BYTE PTR [rax],al
   14000798b:	add    BYTE PTR [rax],al
   14000798d:	add    BYTE PTR [rax],al
   14000798f:	add    BYTE PTR [rax+0x1400079],ah
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    BYTE PTR [rbx+0x0],dl
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    BYTE PTR [rdx],dh
   1400079a1:	add    eax,DWORD PTR [rax+rax*1]
   1400079a4:	or     BYTE PTR [rax],al
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	push   rax
   1400079a9:	xchg   DWORD PTR [rax],eax
   1400079ab:	rex add DWORD PTR [rax],eax
   1400079ae:	add    BYTE PTR [rax],al
   1400079b0:	add    DWORD PTR [rax],eax
   1400079b2:	add    BYTE PTR [rax],al
   1400079b4:	add    eax,DWORD PTR [rsi]
	...
   1400079be:	add    BYTE PTR [rax],al
   1400079c0:	and    DWORD PTR [rax],eax
   1400079c2:	add    BYTE PTR [rax],al
   1400079c4:	add    BYTE PTR [rax],al
   1400079c6:	add    BYTE PTR [rax],al
   1400079c8:	sar    BYTE PTR [rcx+0x0],1
   1400079cb:	rex add DWORD PTR [rax],eax
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	xor    eax,0x18000307
	...
   1400079e5:	add    BYTE PTR [rax],al
   1400079e7:	add    BYTE PTR [rax],ch
   1400079e9:	jp     0x1400079eb
   1400079eb:	rex add DWORD PTR [rax],eax
   1400079ee:	add    BYTE PTR [rax],al
   1400079f0:	add    eax,0x0
   1400079f5:	add    BYTE PTR [rax],al
   1400079f7:	add    BYTE PTR [rax+0x400],dl
   1400079fd:	add    BYTE PTR [rax],al
   1400079ff:	add    BYTE PTR [rax+rax*1],dl
   140007a02:	add    BYTE PTR [rax],al
   140007a04:	add    BYTE PTR [rax],al
   140007a06:	add    BYTE PTR [rax],al
   140007a08:	add    eax,0x0
   140007a0d:	add    BYTE PTR [rax],al
   140007a0f:	add    BYTE PTR [rax+0x400],dl
   140007a15:	add    BYTE PTR [rax],al
   140007a17:	add    BYTE PTR [rdx+0x7],dl
   140007a1d:	add    BYTE PTR [rax],al
   140007a1f:	add    BYTE PTR [rbx+0x0],dl
   140007a25:	add    BYTE PTR [rax],al
   140007a27:	add    BYTE PTR [rcx],ah
   140007a29:	add    BYTE PTR [rax],al
   140007a2b:	add    BYTE PTR [rax],al
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	add    BYTE PTR [rax],bh
   140007a31:	jp     0x140007a33
   140007a33:	rex add DWORD PTR [rax],eax
   140007a36:	add    BYTE PTR [rax],al
   140007a38:	rex.RX (bad) 
   140007a3a:	add    al,BYTE PTR [rcx]
   140007a3c:	add    BYTE PTR [rax],al
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	jo     0x140007abc
   140007a42:	add    BYTE PTR [rax+0x1],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rax+0x7a],ah
   140007a4a:	add    BYTE PTR [rax+0x1],al
	...
   140007a5d:	add    BYTE PTR [rax],al
   140007a5f:	add    BYTE PTR [rcx],al
   140007a61:	add    BYTE PTR [rax],al
   140007a63:	add    BYTE PTR [rbx],al
   140007a65:	(bad)  
	...
   140007a6e:	add    BYTE PTR [rax],al
   140007a70:	xor    eax,0x18000207
	...
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rcx+0x0],dl
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	add    BYTE PTR [rax+0x140007a],dh
   140007a9d:	add    BYTE PTR [rax],al
   140007a9f:	add    BYTE PTR [rbx+0x0],dl
	...
   140007aad:	add    BYTE PTR [rax],al
   140007aaf:	add    BYTE PTR [rcx],dh
   140007ab1:	add    DWORD PTR [rcx],eax
   140007ab3:	add    BYTE PTR [rax],bl
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rax+0x0],al
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    BYTE PTR [rax],cl
   140007ac1:	add    BYTE PTR [rax],al
   140007ac3:	add    BYTE PTR [rax],al
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rcx],ah
	...
   140007ad1:	jnp    0x140007ad3
   140007ad3:	rex add DWORD PTR [rax],eax
   140007ad6:	add    BYTE PTR [rax],al
   140007ad8:	add    BYTE PTR [rax],0x0
   140007adb:	add    BYTE PTR [rax],al
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    BYTE PTR [rax],dl
   140007ae1:	add    BYTE PTR [rax],al
   140007ae3:	add    BYTE PTR [rax],al
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rcx],ah
   140007ae9:	add    BYTE PTR [rax],al
   140007aeb:	add    BYTE PTR [rax],al
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    BYTE PTR [rax+0x1400079],ah
   140007af5:	add    BYTE PTR [rax],al
   140007af7:	add    BYTE PTR [rbx+0x0],dl
   140007afd:	add    BYTE PTR [rax],al
   140007aff:	add    BYTE PTR [rbx+0x1],al
   140007b02:	add    BYTE PTR [rax],al
   140007b04:	add    al,BYTE PTR [rax]
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	cmp    BYTE PTR [rbx+0x0],bh
   140007b0b:	rex add DWORD PTR [rax],eax
   140007b0e:	add    BYTE PTR [rax],al
   140007b10:	sbb    BYTE PTR [rbx+0x0],bh
   140007b13:	rex add DWORD PTR [rax],eax
   140007b16:	add    BYTE PTR [rax],al
   140007b18:	add    DWORD PTR [rax],eax
   140007b1a:	add    BYTE PTR [rax],al
   140007b1c:	add    al,0x11
   140007b1e:	add    BYTE PTR [rax],al
   140007b20:	add    eax,DWORD PTR [rbx]
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	add    BYTE PTR [rax],al
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	add    al,BYTE PTR [rdi]
   140007b2a:	add    BYTE PTR [rax],al
   140007b2c:	add    BYTE PTR [rax],al
   140007b2e:	add    BYTE PTR [rax],al
   140007b30:	add    al,BYTE PTR [rax]
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	add    BYTE PTR [rax],al
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	add    DWORD PTR [rax],eax
   140007b3a:	add    BYTE PTR [rax],al
   140007b3c:	add    al,0x11
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	add    eax,DWORD PTR [rbx]
   140007b42:	add    BYTE PTR [rax],al
   140007b44:	add    al,BYTE PTR [rax]
   140007b46:	add    BYTE PTR [rax],al
   140007b48:	add    al,BYTE PTR [rdi]
   140007b4a:	add    BYTE PTR [rax],al
   140007b4c:	add    BYTE PTR [rax],al
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	add    al,BYTE PTR [rax]
   140007b52:	add    BYTE PTR [rax],al
   140007b54:	add    BYTE PTR [rax],al
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007b59:	add    eax,0x0
	...
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	add    BYTE PTR [rax+0x0],dl
   140007b6b:	add    BYTE PTR [rax],al
   140007b6d:	add    BYTE PTR [rax],al
   140007b6f:	add    BYTE PTR [rcx],ah
   140007b71:	add    BYTE PTR [rax],al
   140007b73:	add    BYTE PTR [rax],al
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    BYTE PTR [rax+0x140007b],al
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rsi+0x7],al
   140007b82:	add    al,BYTE PTR [rcx]
   140007b84:	add    BYTE PTR [rax],al
   140007b86:	add    BYTE PTR [rax],al
   140007b88:	sar    BYTE PTR [rbx+0x0],0x40
   140007b8c:	add    DWORD PTR [rax],eax
   140007b8e:	add    BYTE PTR [rax],al
   140007b90:	test   al,0x7b
   140007b92:	add    BYTE PTR [rax+0x1],al
	...
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    BYTE PTR [rcx],al
   140007ba9:	add    BYTE PTR [rax],al
   140007bab:	add    BYTE PTR [rbx],al
   140007bad:	(bad)  
	...
   140007bbe:	add    BYTE PTR [rax],al
   140007bc0:	xor    eax,0x20000307
	...
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    BYTE PTR [rax],dh
   140007bd9:	jl     0x140007bdb
   140007bdb:	rex add DWORD PTR [rax],eax
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	add    eax,0x0
   140007be5:	add    BYTE PTR [rax],al
   140007be7:	add    BYTE PTR [rax+0x400],dl
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    BYTE PTR [rdx+0x7],dl
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rax+rax*1],al
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	add    BYTE PTR [rax],al
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	add    al,0x0
   140007c02:	add    BYTE PTR [rax],al
   140007c04:	add    BYTE PTR [rax],al
   140007c06:	add    BYTE PTR [rax],al
   140007c08:	nop
   140007c09:	add    BYTE PTR [rax+rax*1],al
   140007c0c:	add    BYTE PTR [rax],al
   140007c0e:	add    BYTE PTR [rax],al
   140007c10:	adc    al,0x0
   140007c12:	add    BYTE PTR [rax],al
   140007c14:	add    BYTE PTR [rax],al
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	add    eax,0x0
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    BYTE PTR [rip+0x0],al        # 0x140007c25
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rbx+0x0],dl
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    BYTE PTR [rcx],ah
   140007c31:	add    BYTE PTR [rax],al
   140007c33:	add    BYTE PTR [rax],al
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    BYTE PTR [rax+0x7c],al
   140007c3a:	add    BYTE PTR [rax+0x1],al
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    BYTE PTR [rbx+0x1],al
   140007c42:	add    BYTE PTR [rax],al
   140007c44:	add    al,BYTE PTR [rax]
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	js     0x140007cc6
   140007c4a:	add    BYTE PTR [rax+0x1],al
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rax+0x7c],bl
   140007c52:	add    BYTE PTR [rax+0x1],al
   140007c55:	add    BYTE PTR [rax],al
   140007c57:	add    BYTE PTR [rcx],al
   140007c59:	add    BYTE PTR [rax],al
   140007c5b:	add    BYTE PTR [rcx+rdx*1],al
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	add    eax,DWORD PTR [rbx]
   140007c62:	add    BYTE PTR [rax],al
   140007c64:	or     BYTE PTR [rax],al
   140007c66:	add    BYTE PTR [rax],al
   140007c68:	add    al,BYTE PTR [rdi]
   140007c6a:	add    BYTE PTR [rax],al
   140007c6c:	add    BYTE PTR [rax],al
   140007c6e:	add    BYTE PTR [rax],al
   140007c70:	add    al,BYTE PTR [rax]
   140007c72:	add    BYTE PTR [rax],al
   140007c74:	add    BYTE PTR [rax],al
   140007c76:	add    BYTE PTR [rax],al
   140007c78:	add    DWORD PTR [rax],eax
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	add    al,0x11
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	add    eax,DWORD PTR [rbx]
   140007c82:	add    BYTE PTR [rax],al
   140007c84:	or     al,BYTE PTR [rax]
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	add    al,BYTE PTR [rdi]
   140007c8a:	add    BYTE PTR [rax],al
   140007c8c:	add    BYTE PTR [rax],al
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	add    al,BYTE PTR [rax]
   140007c92:	add    BYTE PTR [rax],al
   140007c94:	add    BYTE PTR [rax],al
   140007c96:	add    BYTE PTR [rax],al
   140007c98:	add    eax,0x50505
   140007c9d:	add    BYTE PTR [rax],al
   140007c9f:	add    BYTE PTR [rip+0x10000307],dh        # 0x150007fac
	...
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    BYTE PTR [rax],ch
   140007cb9:	jle    0x140007cbb
   140007cbb:	rex add DWORD PTR [rax],eax
   140007cbe:	add    BYTE PTR [rax],al
   140007cc0:	xchg   ecx,eax
   140007cc1:	add    BYTE PTR [rax],al
   140007cc3:	add    BYTE PTR [rax],al
   140007cc5:	add    BYTE PTR [rax],al
   140007cc7:	add    BYTE PTR [rax],dl
   140007cc9:	jle    0x140007ccb
   140007ccb:	rex add DWORD PTR [rax],eax
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	nop
   140007cd1:	add    BYTE PTR [rax+rax*1],al
   140007cd4:	add    BYTE PTR [rax],al
   140007cd6:	add    BYTE PTR [rax],al
   140007cd8:	adc    al,0x0
   140007cda:	add    BYTE PTR [rax],al
   140007cdc:	add    BYTE PTR [rax],al
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	xchg   ebx,eax
   140007ce1:	add    BYTE PTR [rax],al
   140007ce3:	add    BYTE PTR [rax],al
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rax],ah
   140007ce9:	adc    al,0x0
   140007ceb:	add    BYTE PTR [rax],al
   140007ced:	add    BYTE PTR [rax],al
   140007cef:	add    BYTE PTR [rax],al
   140007cf1:	jle    0x140007cf3
   140007cf3:	rex add DWORD PTR [rax],eax
   140007cf6:	add    BYTE PTR [rax],al
   140007cf8:	rex.RX (bad) 
   140007cfa:	add    al,BYTE PTR [rcx]
   140007cfc:	add    BYTE PTR [rax],al
   140007cfe:	add    BYTE PTR [rax],al
   140007d00:	push   rax
   140007d01:	jge    0x140007d03
   140007d03:	rex add DWORD PTR [rax],eax
   140007d06:	add    BYTE PTR [rax],al
   140007d08:	rex jge 0x140007d0b
   140007d0b:	rex add DWORD PTR [rax],eax
	...
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007d21:	add    eax,0x0
	...
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	call   0x140007d38
   140007d35:	add    BYTE PTR [rax],al
   140007d37:	add    BYTE PTR [rax+0x49],dh
   140007d3a:	add    BYTE PTR [rcx],al
   140007d3c:	add    BYTE PTR [rax],al
   140007d3e:	add    BYTE PTR [rax],al
   140007d40:	add    DWORD PTR [rax],eax
   140007d42:	add    BYTE PTR [rax],al
   140007d44:	add    eax,DWORD PTR [rsi]
   140007d46:	add    BYTE PTR [rax],al
   140007d48:	or     BYTE PTR [rax],al
   140007d4a:	add    BYTE PTR [rax],al
   140007d4c:	add    BYTE PTR [rax],al
   140007d4e:	add    BYTE PTR [rax],al
   140007d50:	xor    eax,0x10000307
	...
   140007d65:	add    BYTE PTR [rax],al
   140007d67:	add    BYTE PTR [rax+0x140007d],bl
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rax+rax*1],al
   140007d72:	add    BYTE PTR [rax],al
   140007d74:	add    BYTE PTR [rax],al
   140007d76:	add    BYTE PTR [rax],al
   140007d78:	add    al,0x0
   140007d7a:	add    BYTE PTR [rax],al
   140007d7c:	add    BYTE PTR [rax],al
   140007d7e:	add    BYTE PTR [rax],al
   140007d80:	nop
   140007d81:	add    BYTE PTR [rax+rax*1],al
   140007d84:	add    BYTE PTR [rax],al
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	adc    al,0x0
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	add    BYTE PTR [rax],al
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	xchg   ebx,eax
   140007d91:	add    BYTE PTR [rax],al
   140007d93:	add    BYTE PTR [rax],al
   140007d95:	add    BYTE PTR [rax],al
   140007d97:	add    BYTE PTR [rcx],ah
   140007d99:	add    BYTE PTR [rax],al
   140007d9b:	add    BYTE PTR [rax],al
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    BYTE PTR [rax+0x140007d],ch
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    BYTE PTR [rbx+0x1],al
   140007daa:	add    BYTE PTR [rax],al
   140007dac:	add    al,BYTE PTR [rax]
   140007dae:	add    BYTE PTR [rax],al
   140007db0:	loopne 0x140007e2f
   140007db2:	add    BYTE PTR [rax+0x1],al
   140007db5:	add    BYTE PTR [rax],al
   140007db7:	add    al,al
   140007db9:	jge    0x140007dbb
   140007dbb:	rex add DWORD PTR [rax],eax
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	add    DWORD PTR [rax],eax
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	add    al,0x11
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	add    eax,DWORD PTR [rbx]
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	add    BYTE PTR [rax],al
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	add    al,BYTE PTR [rdi]
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	add    BYTE PTR [rax],al
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	add    al,BYTE PTR [rax]
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    BYTE PTR [rax],al
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	add    DWORD PTR [rax],eax
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	add    al,0x11
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	add    eax,DWORD PTR [rbx]
   140007dea:	add    BYTE PTR [rax],al
   140007dec:	add    al,BYTE PTR [rax]
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	add    al,BYTE PTR [rdi]
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	add    BYTE PTR [rax],al
   140007df6:	add    BYTE PTR [rax],al
   140007df8:	add    al,BYTE PTR [rax]
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	add    BYTE PTR [rax],al
   140007dfe:	add    BYTE PTR [rax],al
   140007e00:	and    DWORD PTR [rax],eax
   140007e02:	add    BYTE PTR [rax],al
   140007e04:	add    BYTE PTR [rax],al
   140007e06:	add    BYTE PTR [rax],al
   140007e08:	sar    BYTE PTR [rcx+0x0],1
   140007e0b:	rex add DWORD PTR [rax],eax
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007e11:	add    eax,0x0
	...
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	call   0x140007e28
   140007e25:	add    BYTE PTR [rax],al
   140007e27:	add    BYTE PTR [rcx],ah
   140007e29:	add    BYTE PTR [rax],al
   140007e2b:	add    BYTE PTR [rax],al
   140007e2d:	add    BYTE PTR [rax],al
   140007e2f:	add    BYTE PTR [rax],bh
   140007e31:	jle    0x140007e33
   140007e33:	rex add DWORD PTR [rax],eax
   140007e36:	add    BYTE PTR [rax],al
   140007e38:	rex.RX (bad) 
   140007e3a:	add    al,BYTE PTR [rcx]
   140007e3c:	add    BYTE PTR [rax],al
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	jo     0x140007ec0
   140007e42:	add    BYTE PTR [rax+0x1],al
   140007e45:	add    BYTE PTR [rax],al
   140007e47:	add    BYTE PTR [rax+0x7e],ah
   140007e4a:	add    BYTE PTR [rax+0x1],al
	...
   140007e5d:	add    BYTE PTR [rax],al
   140007e5f:	add    BYTE PTR [rcx],al
   140007e61:	add    BYTE PTR [rax],al
   140007e63:	add    BYTE PTR [rbx],al
   140007e65:	(bad)  
	...
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	xor    eax,0x18000307
	...
   140007e85:	add    BYTE PTR [rax],al
   140007e87:	add    al,al
   140007e89:	jle    0x140007e8b
   140007e8b:	rex add DWORD PTR [rax],eax
   140007e8e:	add    BYTE PTR [rax],al
   140007e90:	add    eax,0x0
   140007e95:	add    BYTE PTR [rax],al
   140007e97:	add    BYTE PTR [rax+0x400],dl
   140007e9d:	add    BYTE PTR [rax],al
   140007e9f:	add    BYTE PTR [rax+rax*1],dl
   140007ea2:	add    BYTE PTR [rax],al
   140007ea4:	add    BYTE PTR [rax],al
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	add    eax,0x0
   140007ead:	add    BYTE PTR [rax],al
   140007eaf:	add    BYTE PTR [rip+0x0],al        # 0x140007eb5
   140007eb5:	add    BYTE PTR [rax],al
   140007eb7:	add    BYTE PTR [rbx+0x0],dl
   140007ebd:	add    BYTE PTR [rax],al
   140007ebf:	add    BYTE PTR [rcx],ah
   140007ec1:	add    BYTE PTR [rax],al
   140007ec3:	add    BYTE PTR [rax],al
   140007ec5:	add    BYTE PTR [rax],al
   140007ec7:	add    BYTE PTR [rax+0x1400079],ah
   140007ecd:	add    BYTE PTR [rax],al
   140007ecf:	add    BYTE PTR [rip+0x0],al        # 0x140007ed5
   140007ed5:	add    BYTE PTR [rax],al
   140007ed7:	add    BYTE PTR [rax],ah
   140007ed9:	adc    al,0x0
   140007edb:	add    BYTE PTR [rax],al
   140007edd:	add    BYTE PTR [rax],al
   140007edf:	add    BYTE PTR [rax],ah
   140007ee1:	add    DWORD PTR [rax],0x40
   140007ee4:	add    DWORD PTR [rax],eax
	...
   140007eee:	add    BYTE PTR [rax],al
   140007ef0:	push   rcx
   140007ef1:	(bad)  
   140007ef2:	add    BYTE PTR [rip+0x30],al        # 0x140007f28
   140007ef8:	cmp    BYTE PTR [rax+0x14000],al
	...
   140007f06:	add    BYTE PTR [rax],al
   140007f08:	add    BYTE PTR [rdi],al
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	add    eax,DWORD PTR [rax]
	...
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	add    BYTE PTR [rax+0x14000],al
	...
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	add    DWORD PTR [rax],eax
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	add    BYTE PTR [rax],al
   140007f2e:	add    BYTE PTR [rax],al
   140007f30:	enter  0x7f,0x40
   140007f34:	add    DWORD PTR [rax],eax
	...
   140007f3e:	add    BYTE PTR [rax],al
   140007f40:	add    al,BYTE PTR [rax]
   140007f42:	add    BYTE PTR [rax],al
   140007f44:	add    BYTE PTR [rax],al
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	cmp    BYTE PTR [rdi+0x0],0x40
   140007f4c:	add    DWORD PTR [rax],eax
	...
   140007f56:	add    BYTE PTR [rax],al
   140007f58:	(bad)  
   140007f59:	(bad)  
   140007f5a:	(bad)  
   140007f5b:	inc    DWORD PTR [rax]
   140007f5d:	add    BYTE PTR [rax],al
   140007f5f:	add    BYTE PTR [rip+0x0],al        # 0x140007f65
   140007f65:	add    BYTE PTR [rax],al
   140007f67:	add    BYTE PTR [rcx],ah
   140007f69:	add    BYTE PTR [rax],al
   140007f6b:	add    BYTE PTR [rax],al
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    BYTE PTR [rax+0x7f],bh
   140007f72:	add    BYTE PTR [rax+0x1],al
   140007f75:	add    BYTE PTR [rax],al
   140007f77:	add    BYTE PTR [rax+rax*1+0x2],ah
   140007f7b:	add    BYTE PTR [rax],al
   140007f7d:	add    BYTE PTR [rax],al
   140007f7f:	add    BYTE PTR [rip+0x10000307],dh        # 0x15000828c
	...
   140007f95:	add    BYTE PTR [rax],al
   140007f97:	add    al,bl
   140007f99:	(bad)  
   140007f9a:	add    BYTE PTR [rax+0x1],al
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    BYTE PTR [rcx+0x0],dl
   140007fa5:	add    BYTE PTR [rax],al
   140007fa7:	add    al,al
   140007fa9:	(bad)  
   140007faa:	add    BYTE PTR [rax+0x1],al
   140007fad:	add    BYTE PTR [rax],al
   140007faf:	add    BYTE PTR [rax+0x400],dl
   140007fb5:	add    BYTE PTR [rax],al
   140007fb7:	add    BYTE PTR [rax+rax*1],dl
   140007fba:	add    BYTE PTR [rax],al
   140007fbc:	add    BYTE PTR [rax],al
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	xchg   ebx,eax
   140007fc1:	add    BYTE PTR [rax],al
   140007fc3:	add    BYTE PTR [rax],al
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    BYTE PTR [rip+0x20000207],dh        # 0x1600081d4
	...
   140007fe5:	add    BYTE PTR [rax],al
   140007fe7:	add    BYTE PTR [rcx+0x0],dl
   140007fed:	add    BYTE PTR [rax],al
   140007fef:	add    al,al
   140007ff1:	add    DWORD PTR [rax],0x140
   140007ff7:	add    BYTE PTR [rbx+0x0],dl
   140007ffd:	add    BYTE PTR [rax],al
   140007fff:	add    BYTE PTR [rip+0x30000207],dh        # 0x17000820c
	...
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rcx+0x0],dl
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    BYTE PTR [rax-0x80],dl
   14000802a:	add    BYTE PTR [rax+0x1],al
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rbx+0x0],dl
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rcx],al
   140008039:	add    BYTE PTR [rax],al
   14000803b:	add    BYTE PTR [rbx],al
   14000803d:	add    eax,0x80000
	...
   14000804e:	add    BYTE PTR [rax],al
   140008050:	xor    DWORD PTR [rcx],eax
   140008052:	add    DWORD PTR [rax],eax
   140008054:	xor    BYTE PTR [rax],al
   140008056:	add    BYTE PTR [rax],al
   140008058:	add    BYTE PTR [rax],0x0
   14000805b:	add    BYTE PTR [rax],al
   14000805d:	add    BYTE PTR [rax],al
   14000805f:	add    BYTE PTR [rax],cl
   140008061:	add    BYTE PTR [rax],al
   140008063:	add    BYTE PTR [rax],al
   140008065:	add    BYTE PTR [rax],al
   140008067:	add    BYTE PTR [rcx],ah
   140008069:	add    BYTE PTR [rax],al
   14000806b:	add    BYTE PTR [rax],al
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    al,ch
   140008071:	add    BYTE PTR [rax],0x40
   140008074:	add    DWORD PTR [rax],eax
   140008076:	add    BYTE PTR [rax],al
   140008078:	add    BYTE PTR [rax],0x0
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    BYTE PTR [rax],bl
   140008081:	add    BYTE PTR [rax],al
   140008083:	add    BYTE PTR [rax],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    BYTE PTR [rcx],ah
   140008089:	add    BYTE PTR [rax],al
   14000808b:	add    BYTE PTR [rax],al
   14000808d:	add    BYTE PTR [rax],al
   14000808f:	add    al,dl
   140008091:	add    BYTE PTR [rax],0x40
   140008094:	add    DWORD PTR [rax],eax
   140008096:	add    BYTE PTR [rax],al
   140008098:	add    BYTE PTR [rax],0x0
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rax],ah
   1400080a1:	add    BYTE PTR [rax],al
   1400080a3:	add    BYTE PTR [rax],al
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    BYTE PTR [rax],ah
   1400080a9:	add    BYTE PTR [rax],al
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    al,al
   1400080b1:	add    BYTE PTR [rax],0x40
   1400080b4:	add    DWORD PTR [rax],eax
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	xchg   ebx,eax
   1400080b9:	add    BYTE PTR [rax],al
   1400080bb:	add    BYTE PTR [rax],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rdx],dh
   1400080c1:	add    eax,DWORD PTR [rax+rax*1]
   1400080c4:	or     BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	add    BYTE PTR [rcx+0x14000],0x0
   1400080cf:	add    BYTE PTR [rbx+0x1],al
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	add    al,BYTE PTR [rax]
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	(bad)  
   1400080d9:	add    DWORD PTR [rax],0x140
   1400080df:	add    BYTE PTR [rax-0x7f],al
   1400080e2:	add    BYTE PTR [rax+0x1],al
   1400080e5:	add    BYTE PTR [rax],al
   1400080e7:	add    BYTE PTR [rbx+0x1],al
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    al,BYTE PTR [rax]
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	and    BYTE PTR [rcx+0x14000],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	add    BYTE PTR [rcx+0x14000],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	add    DWORD PTR [rax],eax
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    al,0x11
   140008106:	add    BYTE PTR [rax],al
   140008108:	add    eax,DWORD PTR [rbx]
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	add    al,BYTE PTR [rdi]
   140008112:	add    BYTE PTR [rax],al
   140008114:	add    BYTE PTR [rax],al
   140008116:	add    BYTE PTR [rax],al
   140008118:	add    al,BYTE PTR [rax]
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	add    DWORD PTR [rax],eax
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    al,0x11
   140008126:	add    BYTE PTR [rax],al
   140008128:	add    eax,DWORD PTR [rbx]
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    al,BYTE PTR [rax]
   14000812e:	add    BYTE PTR [rax],al
   140008130:	add    al,BYTE PTR [rdi]
   140008132:	add    BYTE PTR [rax],al
   140008134:	add    BYTE PTR [rax],al
   140008136:	add    BYTE PTR [rax],al
   140008138:	add    al,BYTE PTR [rax]
   14000813a:	add    BYTE PTR [rax],al
   14000813c:	add    BYTE PTR [rax],al
   14000813e:	add    BYTE PTR [rax],al
   140008140:	add    DWORD PTR [rax],eax
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    al,0x11
   140008146:	add    BYTE PTR [rax],al
   140008148:	add    eax,DWORD PTR [rbx]
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	adc    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	add    al,BYTE PTR [rdi]
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	add    al,BYTE PTR [rax]
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	add    DWORD PTR [rax],eax
   140008162:	add    BYTE PTR [rax],al
   140008164:	add    al,0x11
   140008166:	add    BYTE PTR [rax],al
   140008168:	add    eax,DWORD PTR [rbx]
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	adc    al,BYTE PTR [rax]
   14000816e:	add    BYTE PTR [rax],al
   140008170:	add    al,BYTE PTR [rdi]
   140008172:	add    BYTE PTR [rax],al
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax],al
   140008178:	add    al,BYTE PTR [rax]
   14000817a:	add    BYTE PTR [rax],al
   14000817c:	add    BYTE PTR [rax],al
   14000817e:	add    BYTE PTR [rax],al
   140008180:	add    eax,DWORD PTR [r8]
   140008183:	add    BYTE PTR [rax+rax*1],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	test   al,0x81
   14000818a:	add    BYTE PTR [rax+0x1],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rax+rax*1],al
   140008192:	add    BYTE PTR [rax],al
   140008194:	add    BYTE PTR [rax],al
   140008196:	add    BYTE PTR [rax],al
   140008198:	movabs al,ds:0x500000001400081
   1400081a1:	add    BYTE PTR [rax],al
   1400081a3:	add    BYTE PTR [rax],al
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    BYTE PTR [rcx],al
   1400081a9:	add    BYTE PTR [rax],al
   1400081ab:	add    BYTE PTR [rbx],al
   1400081ad:	add    DWORD PTR [rax],eax
   1400081af:	add    BYTE PTR [rcx],al
	...
   1400081bd:	add    BYTE PTR [rax],al
   1400081bf:	add    BYTE PTR [rcx],dh
   1400081c1:	add    DWORD PTR [rcx],eax
   1400081c3:	add    BYTE PTR [rax],ah
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rax+0x0],al
   1400081cd:	add    BYTE PTR [rax],al
   1400081cf:	add    BYTE PTR [rax],cl
   1400081d1:	add    BYTE PTR [rax],al
   1400081d3:	add    BYTE PTR [rax],al
   1400081d5:	add    BYTE PTR [rax],al
   1400081d7:	add    BYTE PTR [rcx],ah
   1400081d9:	add    BYTE PTR [rax],al
   1400081db:	add    BYTE PTR [rax],al
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rax],ch
   1400081e1:	(bad)  
   1400081e2:	add    BYTE PTR [rax+0x1],al
   1400081e5:	add    BYTE PTR [rax],al
   1400081e7:	add    BYTE PTR [rax+0x0],al
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rax],bl
   1400081f1:	add    BYTE PTR [rax],al
   1400081f3:	add    BYTE PTR [rax],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    BYTE PTR [rcx],ah
   1400081f9:	add    BYTE PTR [rax],al
   1400081fb:	add    BYTE PTR [rax],al
   1400081fd:	add    BYTE PTR [rax],al
   1400081ff:	add    BYTE PTR [rax],dl
   140008201:	(bad)  
   140008202:	add    BYTE PTR [rax+0x1],al
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    BYTE PTR [rbx+0x0],dl
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rbx+0x1],al
   140008212:	add    BYTE PTR [rax],al
   140008214:	add    al,BYTE PTR [rax]
   140008216:	add    BYTE PTR [rax],al
   140008218:	movabs al,ds:0x8000000001400082
   140008221:	(bad)  
   140008222:	add    BYTE PTR [rax+0x1],al
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rbx+0x1],al
   14000822a:	add    BYTE PTR [rax],al
   14000822c:	add    al,BYTE PTR [rax]
   14000822e:	add    BYTE PTR [rax],al
   140008230:	(bad)  
   140008231:	(bad)  
   140008232:	add    BYTE PTR [rax+0x1],al
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    BYTE PTR [rax-0x7e],al
   14000823a:	add    BYTE PTR [rax+0x1],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rcx],al
   140008241:	add    BYTE PTR [rax],al
   140008243:	add    BYTE PTR [rcx+rdx*1],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	add    eax,DWORD PTR [rbx]
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	add    BYTE PTR [rax],al
   14000824e:	add    BYTE PTR [rax],al
   140008250:	add    al,BYTE PTR [rdi]
   140008252:	add    BYTE PTR [rax],al
   140008254:	add    BYTE PTR [rax],al
   140008256:	add    BYTE PTR [rax],al
   140008258:	add    al,BYTE PTR [rax]
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	add    DWORD PTR [rax],eax
   140008262:	add    BYTE PTR [rax],al
   140008264:	add    al,0x11
   140008266:	add    BYTE PTR [rax],al
   140008268:	add    eax,DWORD PTR [rbx]
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    al,BYTE PTR [rax]
   14000826e:	add    BYTE PTR [rax],al
   140008270:	add    al,BYTE PTR [rdi]
   140008272:	add    BYTE PTR [rax],al
   140008274:	add    BYTE PTR [rax],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	add    al,BYTE PTR [rax]
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    BYTE PTR [rax],al
   140008280:	add    DWORD PTR [rax],eax
   140008282:	add    BYTE PTR [rax],al
   140008284:	add    al,0x11
   140008286:	add    BYTE PTR [rax],al
   140008288:	add    eax,DWORD PTR [rbx]
   14000828a:	add    BYTE PTR [rax],al
   14000828c:	adc    BYTE PTR [rax],al
   14000828e:	add    BYTE PTR [rax],al
   140008290:	add    al,BYTE PTR [rdi]
   140008292:	add    BYTE PTR [rax],al
   140008294:	add    BYTE PTR [rax],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	add    al,BYTE PTR [rax]
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	add    DWORD PTR [rax],eax
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	add    al,0x11
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	add    eax,DWORD PTR [rbx]
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	adc    al,BYTE PTR [rax]
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	add    al,BYTE PTR [rdi]
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	add    al,BYTE PTR [rax]
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400082c1:	add    eax,0x0
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	add    DWORD PTR [rax],eax
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	add    BYTE PTR [rax],dl
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	add    BYTE PTR [rax],al
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	and    BYTE PTR [rax],al
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	call   0x141408367
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    BYTE PTR [rsi+0x7],al
   1400082ea:	add    al,BYTE PTR [rcx]
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	add    BYTE PTR [rax+0x14000],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	adc    BYTE PTR [rbx+0x14000],al
	...
   14000830e:	add    BYTE PTR [rax],al
   140008310:	add    DWORD PTR [rax],eax
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    eax,DWORD PTR [rsi]
	...
   14000831e:	add    BYTE PTR [rax],al
   140008320:	and    DWORD PTR [rax],eax
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	xor    BYTE PTR [rbx+0x14000],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	push   rcx
   140008331:	add    eax,DWORD PTR [rax]
   140008333:	add    eax,0x4
   140008338:	movabs al,ds:0x1400083
	...
   140008349:	add    eax,DWORD PTR [rax]
   14000834b:	add    BYTE PTR [rbx],al
	...
   140008355:	add    BYTE PTR [rax],al
   140008357:	add    BYTE PTR [rax],bh
   140008359:	xchg   DWORD PTR [rax],eax
   14000835b:	rex add DWORD PTR [rax],eax
	...
   140008366:	add    BYTE PTR [rax],al
   140008368:	add    DWORD PTR [rax],eax
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	cmp    BYTE PTR [rdi+0x14000],al
	...
   14000837e:	add    BYTE PTR [rax],al
   140008380:	add    al,BYTE PTR [rax]
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	cmp    BYTE PTR [rdi+0x14000],al
	...
   140008396:	add    BYTE PTR [rax],al
   140008398:	(bad)  
   140008399:	(bad)  
   14000839a:	(bad)  
   14000839b:	inc    DWORD PTR [rax]
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    BYTE PTR [rcx],al
   1400083a1:	add    BYTE PTR [rax],al
   1400083a3:	add    BYTE PTR [rbx],al
   1400083a5:	add    eax,0x80000
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	add    eax,0x20000000
   1400083b1:	adc    al,0x0
   1400083b3:	add    BYTE PTR [rax],al
   1400083b5:	add    BYTE PTR [rax],al
   1400083b7:	add    al,cl
   1400083b9:	add    DWORD PTR [rax],0x40
   1400083bc:	add    DWORD PTR [rax],eax
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	add    eax,0x70000000
   1400083c5:	rex.WB add BYTE PTR [r9],al
   1400083c8:	and    DWORD PTR [rax],eax
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	loopne 0x140008355
   1400083d2:	add    BYTE PTR [rax+0x1],al
	...
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rcx+0x7],dl
   1400083e2:	add    BYTE PTR [rip+0x48],al        # 0x140008430
   1400083e8:	test   al,0x84
   1400083ea:	add    BYTE PTR [rax+0x1],al
	...
   1400083f9:	(bad)  
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	add    al,BYTE PTR [rax]
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	add    eax,0x0
   140008405:	add    BYTE PTR [rax],al
   140008407:	add    BYTE PTR [rax-0x7c],dh
   14000840a:	add    BYTE PTR [rax+0x1],al
	...
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rax+rax*1],cl
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	add    BYTE PTR [rax],al
   14000841e:	add    BYTE PTR [rax],al
   140008420:	cmp    BYTE PTR [rax+rax*1+0x140],al
	...
   14000842f:	add    bh,bh
   140008431:	(bad)  
   140008432:	(bad)  
   140008433:	inc    DWORD PTR [rax]
   140008435:	add    BYTE PTR [rax],al
   140008437:	add    BYTE PTR [rip+0x48000207],dh        # 0x188008644
	...
   140008455:	add    BYTE PTR [rax],al
   140008457:	add    BYTE PTR [rcx+0x0],dl
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	add    BYTE PTR [rax-0x7b],dh
   140008462:	add    BYTE PTR [rax+0x1],al
   140008465:	add    BYTE PTR [rax],al
   140008467:	add    BYTE PTR [rbx+0x0],dl
   14000846d:	add    BYTE PTR [rax],al
   14000846f:	add    BYTE PTR [rip+0x18000207],dh        # 0x15800867c
	...
   14000848d:	add    BYTE PTR [rax],al
   14000848f:	add    BYTE PTR [rcx+0x0],dl
   140008495:	add    BYTE PTR [rax],al
   140008497:	add    al,al
   140008499:	test   BYTE PTR [rax],al
   14000849b:	rex add DWORD PTR [rax],eax
   14000849e:	add    BYTE PTR [rax],al
   1400084a0:	xchg   ebx,eax
   1400084a1:	add    BYTE PTR [rax],al
   1400084a3:	add    BYTE PTR [rax],al
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    BYTE PTR [rcx],al
   1400084a9:	add    BYTE PTR [rax],al
   1400084ab:	add    BYTE PTR [rbx],al
   1400084ad:	add    eax,0x80000
	...
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	xor    DWORD PTR [rcx],eax
   1400084c2:	add    DWORD PTR [rax],eax
   1400084c4:	sbb    BYTE PTR [rax],al
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	add    BYTE PTR [rax],0x0
   1400084cb:	add    BYTE PTR [rax],al
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rax],cl
   1400084d1:	add    BYTE PTR [rax],al
   1400084d3:	add    BYTE PTR [rax],al
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    BYTE PTR [rcx],ah
   1400084d9:	add    BYTE PTR [rax],al
   1400084db:	add    BYTE PTR [rax],al
   1400084dd:	add    BYTE PTR [rax],al
   1400084df:	add    BYTE PTR [rax],dl
   1400084e1:	test   DWORD PTR [rax],eax
   1400084e3:	rex add DWORD PTR [rax],eax
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	add    BYTE PTR [rax],0x0
   1400084eb:	add    BYTE PTR [rax],al
   1400084ed:	add    BYTE PTR [rax],al
   1400084ef:	add    BYTE PTR [rax],dl
   1400084f1:	add    BYTE PTR [rax],al
   1400084f3:	add    BYTE PTR [rax],al
   1400084f5:	add    BYTE PTR [rax],al
   1400084f7:	add    BYTE PTR [rcx],ah
   1400084f9:	add    BYTE PTR [rax],al
   1400084fb:	add    BYTE PTR [rax],al
   1400084fd:	add    BYTE PTR [rax],al
   1400084ff:	add    BYTE PTR [rax+0x1400079],ah
   140008505:	add    BYTE PTR [rax],al
   140008507:	add    BYTE PTR [rbx+0x0],dl
   14000850d:	add    BYTE PTR [rax],al
   14000850f:	add    BYTE PTR [rbx+0x1],al
   140008512:	add    BYTE PTR [rax],al
   140008514:	add    al,BYTE PTR [rax]
   140008516:	add    BYTE PTR [rax],al
   140008518:	test   QWORD PTR [rax],rax
   14000851b:	rex add DWORD PTR [rax],eax
   14000851e:	add    BYTE PTR [rax],al
   140008520:	sub    BYTE PTR [rbp+0x14000],al
   140008526:	add    BYTE PTR [rax],al
   140008528:	add    DWORD PTR [rax],eax
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	add    al,0x11
   14000852e:	add    BYTE PTR [rax],al
   140008530:	add    eax,DWORD PTR [rbx]
   140008532:	add    BYTE PTR [rax],al
   140008534:	add    BYTE PTR [rax],al
   140008536:	add    BYTE PTR [rax],al
   140008538:	add    al,BYTE PTR [rdi]
   14000853a:	add    BYTE PTR [rax],al
   14000853c:	add    BYTE PTR [rax],al
   14000853e:	add    BYTE PTR [rax],al
   140008540:	add    al,BYTE PTR [rax]
   140008542:	add    BYTE PTR [rax],al
   140008544:	add    BYTE PTR [rax],al
   140008546:	add    BYTE PTR [rax],al
   140008548:	add    DWORD PTR [rax],eax
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	add    al,0x11
   14000854e:	add    BYTE PTR [rax],al
   140008550:	add    eax,DWORD PTR [rbx]
   140008552:	add    BYTE PTR [rax],al
   140008554:	add    al,BYTE PTR [rax]
   140008556:	add    BYTE PTR [rax],al
   140008558:	add    al,BYTE PTR [rdi]
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	add    BYTE PTR [rax],al
   14000855e:	add    BYTE PTR [rax],al
   140008560:	add    al,BYTE PTR [rax]
	...
   14000856e:	add    BYTE PTR [rax],al
   140008570:	xor    DWORD PTR [rcx],eax
   140008572:	add    DWORD PTR [rax],eax
   140008574:	rex.W add BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rax+0x0],al
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rax],cl
   140008581:	add    BYTE PTR [rax],al
   140008583:	add    BYTE PTR [rax],al
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rcx],ah
   140008589:	add    BYTE PTR [rax],al
   14000858b:	add    BYTE PTR [rax],al
   14000858d:	add    BYTE PTR [rax],al
   14000858f:	add    BYTE PTR [rax],dh
   140008591:	xchg   BYTE PTR [rax],al
   140008593:	rex add DWORD PTR [rax],eax
   140008596:	add    BYTE PTR [rax],al
   140008598:	add    BYTE PTR [rax],0x0
   14000859b:	add    BYTE PTR [rax],al
   14000859d:	add    BYTE PTR [rax],al
   14000859f:	add    BYTE PTR [rax],bl
   1400085a1:	add    BYTE PTR [rax],al
   1400085a3:	add    BYTE PTR [rax],al
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    BYTE PTR [rcx],ah
   1400085a9:	add    BYTE PTR [rax],al
   1400085ab:	add    BYTE PTR [rax],al
   1400085ad:	add    BYTE PTR [rax],al
   1400085af:	add    BYTE PTR [rax],bl
   1400085b1:	xchg   BYTE PTR [rax],al
   1400085b3:	rex add DWORD PTR [rax],eax
   1400085b6:	add    BYTE PTR [rax],al
   1400085b8:	add    BYTE PTR [rax],0x0
   1400085bb:	add    BYTE PTR [rax],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rax],ch
   1400085c1:	add    BYTE PTR [rax],al
   1400085c3:	add    BYTE PTR [rax],al
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rcx],ah
	...
   1400085d1:	xchg   BYTE PTR [rax],al
   1400085d3:	rex add DWORD PTR [rax],eax
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	add    BYTE PTR [rax],0x0
   1400085db:	add    BYTE PTR [rax],al
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    BYTE PTR [rax+0x0],al
   1400085e2:	add    BYTE PTR [rax],al
   1400085e4:	add    BYTE PTR [rax],al
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	and    DWORD PTR [rax],eax
   1400085ea:	add    BYTE PTR [rax],al
   1400085ec:	add    BYTE PTR [rax],al
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	movabs al,ds:0x9300000001400079
   1400085f9:	add    BYTE PTR [rax],al
   1400085fb:	add    BYTE PTR [rax],al
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    BYTE PTR [rbx+0x1],al
   140008602:	add    BYTE PTR [rax],al
   140008604:	add    al,BYTE PTR [rax]
   140008606:	add    BYTE PTR [rax],al
   140008608:	call   0x141408693
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    al,cl
   140008611:	xchg   BYTE PTR [rax],al
   140008613:	rex add DWORD PTR [rax],eax
   140008616:	add    BYTE PTR [rax],al
   140008618:	rex.XB add DWORD PTR [r8],eax
   14000861b:	add    BYTE PTR [rdx],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rax+0x1400086],ch
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    BYTE PTR [rax+0x1400086],cl
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rbx+0x1],al
   140008632:	add    BYTE PTR [rax],al
   140008634:	add    al,BYTE PTR [rax]
   140008636:	add    BYTE PTR [rax],al
   140008638:	push   0x1400086
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    BYTE PTR [rax-0x7a],cl
   140008642:	add    BYTE PTR [rax+0x1],al
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rcx],al
   140008649:	add    BYTE PTR [rax],al
   14000864b:	add    BYTE PTR [rcx+rdx*1],al
   14000864e:	add    BYTE PTR [rax],al
   140008650:	add    eax,DWORD PTR [rbx]
   140008652:	add    BYTE PTR [rax],al
   140008654:	add    BYTE PTR [rax],al
   140008656:	add    BYTE PTR [rax],al
   140008658:	add    al,BYTE PTR [rdi]
   14000865a:	add    BYTE PTR [rax],al
   14000865c:	add    BYTE PTR [rax],al
   14000865e:	add    BYTE PTR [rax],al
   140008660:	add    al,BYTE PTR [rax]
   140008662:	add    BYTE PTR [rax],al
   140008664:	add    BYTE PTR [rax],al
   140008666:	add    BYTE PTR [rax],al
   140008668:	add    DWORD PTR [rax],eax
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	add    al,0x11
   14000866e:	add    BYTE PTR [rax],al
   140008670:	add    eax,DWORD PTR [rbx]
   140008672:	add    BYTE PTR [rax],al
   140008674:	add    al,BYTE PTR [rax]
   140008676:	add    BYTE PTR [rax],al
   140008678:	add    al,BYTE PTR [rdi]
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	add    BYTE PTR [rax],al
   14000867e:	add    BYTE PTR [rax],al
   140008680:	add    al,BYTE PTR [rax]
   140008682:	add    BYTE PTR [rax],al
   140008684:	add    BYTE PTR [rax],al
   140008686:	add    BYTE PTR [rax],al
   140008688:	add    DWORD PTR [rax],eax
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	add    al,0x11
   14000868e:	add    BYTE PTR [rax],al
   140008690:	add    eax,DWORD PTR [rbx]
   140008692:	add    BYTE PTR [rax],al
   140008694:	adc    BYTE PTR [rax],al
   140008696:	add    BYTE PTR [rax],al
   140008698:	add    al,BYTE PTR [rdi]
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	add    BYTE PTR [rax],al
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	add    al,BYTE PTR [rax]
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	add    BYTE PTR [rax],al
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	add    DWORD PTR [rax],eax
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	add    al,0x11
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	add    eax,DWORD PTR [rbx]
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	adc    al,BYTE PTR [rax]
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	add    al,BYTE PTR [rdi]
   1400086ba:	add    BYTE PTR [rax],al
   1400086bc:	add    BYTE PTR [rax],al
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	add    al,BYTE PTR [rax]
   1400086c2:	add    BYTE PTR [rax],al
   1400086c4:	add    BYTE PTR [rax],al
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	add    DWORD PTR [rax],eax
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	add    al,0x11
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	add    eax,DWORD PTR [rbx]
   1400086d2:	add    BYTE PTR [rax],al
   1400086d4:	and    BYTE PTR [rax],al
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	add    al,BYTE PTR [rdi]
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	add    BYTE PTR [rax],al
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	add    al,BYTE PTR [rax]
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	add    BYTE PTR [rax],al
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	add    DWORD PTR [rax],eax
   1400086ea:	add    BYTE PTR [rax],al
   1400086ec:	add    al,0x11
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	add    eax,DWORD PTR [rbx]
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	and    al,BYTE PTR [rax]
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	add    al,BYTE PTR [rdi]
   1400086fa:	add    BYTE PTR [rax],al
   1400086fc:	add    BYTE PTR [rax],al
   1400086fe:	add    BYTE PTR [rax],al
   140008700:	add    al,BYTE PTR [rax]
   140008702:	add    BYTE PTR [rax],al
   140008704:	add    BYTE PTR [rax],al
   140008706:	add    BYTE PTR [rax],al
   140008708:	add    eax,0x5
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rcx],ah
   140008711:	add    BYTE PTR [rax],al
   140008713:	add    BYTE PTR [rax],al
   140008715:	add    BYTE PTR [rax],al
   140008717:	add    BYTE PTR [rax+0x1400079],ah
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    BYTE PTR [rcx],ah
   140008721:	add    BYTE PTR [rax],al
   140008723:	add    BYTE PTR [rax],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    BYTE PTR [rax],dh
   140008729:	xchg   DWORD PTR [rax],eax
   14000872b:	rex add DWORD PTR [rax],eax
   14000872e:	add    BYTE PTR [rax],al
   140008730:	add    BYTE PTR fs:[rdx],al
   140008733:	add    BYTE PTR [rax],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    BYTE PTR [rax],dh
   140008739:	add    eax,DWORD PTR [rax]
   14000873b:	add    BYTE PTR [rax+rax*1],al
   14000873e:	add    BYTE PTR [rax],al
   140008740:	xor    al,BYTE PTR [rcx]
   140008742:	add    al,0x0
   140008744:	add    al,0x0
   140008746:	add    BYTE PTR [rax],al
   140008748:	mov    BYTE PTR [rdi+0x14000],al
   14000874e:	add    BYTE PTR [rax],al
   140008750:	add    eax,DWORD PTR [r8]
   140008753:	add    BYTE PTR [rax+rax*1],al
   140008756:	add    BYTE PTR [rax],al
   140008758:	js     0x1400086e1
   14000875a:	add    BYTE PTR [rax+0x1],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rax+rax*1],al
   140008762:	add    BYTE PTR [rax],al
   140008764:	add    BYTE PTR [rax],al
   140008766:	add    BYTE PTR [rax],al
   140008768:	jo     0x1400086f1
   14000876a:	add    BYTE PTR [rax+0x1],al
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rip+0x0],al        # 0x140008775
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    BYTE PTR [rcx],al
   140008779:	add    BYTE PTR [rax],al
   14000877b:	add    BYTE PTR [rbx],al
   14000877d:	add    DWORD PTR [rax],eax
   14000877f:	add    BYTE PTR [rcx],al
   140008781:	add    BYTE PTR [rax],al
   140008783:	add    BYTE PTR [rax],al
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rcx+0x0],al
   14000878a:	add    BYTE PTR [rax],al
   14000878c:	add    DWORD PTR [rax],eax
   14000878e:	add    BYTE PTR [rax],al
   140008790:	mov    al,0x87
   140008792:	add    BYTE PTR [rax+0x1],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rcx],al
   140008799:	add    BYTE PTR [rax],al
   14000879b:	add    BYTE PTR [rax],al
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rax+0x1400087],ch
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rax],dl
   1400087a9:	add    BYTE PTR [rax],al
   1400087ab:	add    BYTE PTR [rax],al
   1400087ad:	add    BYTE PTR [rax],al
   1400087af:	add    BYTE PTR [rcx],al
   1400087b1:	add    BYTE PTR [rax],al
   1400087b3:	add    BYTE PTR [rdi+rcx*1],al
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	add    eax,DWORD PTR [rbx]
   1400087ba:	add    BYTE PTR [rax],al
   1400087bc:	add    al,BYTE PTR [rax]
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	add    al,BYTE PTR [rdi]
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	add    BYTE PTR [rax],al
   1400087c6:	add    BYTE PTR [rax],al
   1400087c8:	add    al,0x0
   1400087ca:	add    BYTE PTR [rax],al
   1400087cc:	add    BYTE PTR [rax],al
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	rex.RB jb 0x140008845
   1400087d3:	outs   dx,DWORD PTR ds:[rsi]
   1400087d4:	jb     0x1400087f6
   1400087d6:	jo     0x14000884a
   1400087d8:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
   1400087df:	ins    DWORD PTR es:[rdi],dx
   1400087e0:	gs jae 0x140008856
   1400087e3:	(bad)  
   1400087e4:	cmp    ah,BYTE PTR gs:[eax]
   1400087e8:	rex.X (bad) 
   1400087ea:	and    BYTE PTR fs:[rbx+0x6f],al
   1400087ee:	ins    DWORD PTR es:[rdi],dx
   1400087ef:	jo     0x140008860
   1400087f1:	outs   dx,BYTE PTR ds:[rsi]
   1400087f2:	outs   dx,BYTE PTR gs:[rsi]
   1400087f4:	je     0x140008844
   1400087f6:	(bad)  
   1400087f7:	ins    DWORD PTR es:[rdi],dx
   1400087f8:	or     al,BYTE PTR gs:[rax]
   1400087fb:	add    BYTE PTR [rax],al
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rbp+0x72],al
   140008802:	jb     0x140008873
   140008804:	jb     0x140008826
   140008806:	jo     0x14000887a
   140008808:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
   14000880f:	ins    DWORD PTR es:[rdi],dx
   140008810:	gs jae 0x140008886
   140008813:	(bad)  
   140008814:	or     al,BYTE PTR gs:[eax]
   140008818:	rex.WR jae 0x14000887c
   14000881b:	jo     0x14000886f
   14000881d:	push   rax
   14000881e:	rex.XB
   14000881f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008821:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0x6c696166
   140008829:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14000882f:	(bad)  
   140008830:	jne    0x14000889b
   140008832:	ins    BYTE PTR es:[rdi],dx
   140008833:	and    BYTE PTR fs:[rax+0x69],dh
   140008837:	jo     0x14000889e
   140008839:	and    BYTE PTR [rbx+0x44],dl
   14000883c:	cmp    ah,BYTE PTR [rax]
   14000883e:	xor    BYTE PTR [rax+0x25],bh
   140008841:	ins    BYTE PTR es:[rdi],dx
   140008842:	js     0x14000884e
   140008844:	add    BYTE PTR [rax],al
   140008846:	add    BYTE PTR [rax],al
   140008848:	rex.WR jae 0x1400088ac
   14000884b:	jo     0x14000889f
   14000884d:	push   rax
   14000884e:	rex.XB
   14000884f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008851:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0x53637052
   140008859:	gs jb  0x1400088d2
   14000885c:	gs jb  0x1400088b4
   14000885f:	jae    0x1400088c6
   140008861:	push   rax
   140008862:	jb     0x1400088d3
   140008864:	je     0x1400088d9
   140008866:	gs jno 0x1400088ae
   140008869:	jo     0x1400088c2
   14000886b:	and    BYTE PTR [rsi+0x61],ah
   14000886e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008876:	and    eax,0xa786c
   14000887b:	add    BYTE PTR [rax],al
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008883:	jo     0x1400088d1
   140008885:	outs   dx,DWORD PTR ds:[rsi]
   140008886:	outs   dx,DWORD PTR ds:[rsi]
   140008887:	imul   esi,DWORD PTR [rbp+0x70],0x52
   14000888b:	jo     0x1400088f0
   14000888d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000888f:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0x7061734c
   140008897:	rex.WRB (bad) 
   140008899:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14000889d:	ja     0x1400088e1
   14000889f:	outs   dx,DWORD PTR ds:[rsi]
   1400088a0:	js     0x1400088f4
   1400088a2:	jo     0x140008907
   1400088a4:	push   rbx
   1400088a5:	and    BYTE PTR [rsi+0x61],r12b
   1400088a9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x78232520
   1400088b1:	or     al,BYTE PTR [rax]
   1400088b3:	add    BYTE PTR [rax],al
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   1400088bb:	jo     0x14000890f
   1400088bd:	push   rax
   1400088be:	rex.XB
   1400088bf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400088c1:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0x53637052
   1400088c9:	gs jb  0x140008942
   1400088cc:	gs jb  0x140008924
   1400088cf:	jae    0x140008936
   1400088d1:	push   rax
   1400088d2:	jb     0x140008943
   1400088d4:	je     0x140008949
   1400088d6:	gs jno 0x14000891e
   1400088d9:	jo     0x1400088fb
   1400088db:	data16 (bad) 
   1400088dd:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
   1400088e5:	and    BYTE PTR [rsi+0x63],ch
   1400088e8:	(bad)  
   1400088e9:	ins    BYTE PTR es:[rdi],dx
   1400088ea:	jb     0x14000895c
   1400088ec:	movsxd edi,DWORD PTR [rdx]
   1400088ee:	and    BYTE PTR [rax],dh
   1400088f0:	js     0x140008917
   1400088f2:	ins    BYTE PTR es:[rdi],dx
   1400088f3:	js     0x1400088ff
   1400088f5:	add    BYTE PTR [rax],al
   1400088f7:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   1400088fb:	jo     0x14000894f
   1400088fd:	push   rax
   1400088fe:	rex.XB
   1400088ff:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008901:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0x53637052
   140008909:	gs jb  0x140008982
   14000890c:	gs jb  0x140008961
   14000890f:	imul   esi,DWORD PTR gs:[ebx+0x74],0x66497265
   140008918:	xor    ah,BYTE PTR [rax]
   14000891a:	data16 (bad) 
   14000891c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008924:	and    eax,0xa786c
   140008929:	add    BYTE PTR [rax],al
   14000892b:	add    BYTE PTR [rax],al
   14000892d:	add    BYTE PTR [rax],al
   14000892f:	add    BYTE PTR [rsi+0x41],al
   140008932:	rex.WB
   140008933:	rex.WR
   140008934:	rex.RB
   140008935:	and    BYTE PTR [rdi+rbp*2+0x20],r14b
   14000893a:	outs   dx,DWORD PTR ds:[rsi]
   14000893b:	jo     0x1400089a2
   14000893d:	outs   dx,BYTE PTR ds:[rsi]
   14000893e:	and    BYTE PTR [rip+0x202c7377],ah        # 0x1602cfcbb
   140008944:	jae    0x1400089ba
   140008946:	(bad)  
   140008947:	je     0x1400089be
   140008949:	jae    0x14000896b
   14000894b:	and    eax,0xa78
   140008950:	rex.RX
   140008951:	rex.B
   140008952:	rex.WB
   140008953:	rex.WR
   140008954:	rex.RB
   140008955:	and    BYTE PTR [rdi+rbp*2+0x20],r14b
   14000895a:	jae    0x1400089c1
   14000895c:	outs   dx,BYTE PTR ds:[rsi]
   14000895d:	and    BYTE PTR fs:[rcx+0x6f],ch
   140008961:	movsxd esi,DWORD PTR [rsp+rbp*2+0x2c]
   140008965:	and    BYTE PTR [rbx+0x74],dh
   140008968:	(bad)  
   140008969:	je     0x1400089e0
   14000896b:	jae    0x14000898d
   14000896d:	and    eax,0xa78
   140008972:	add    BYTE PTR [rax],al
   140008974:	add    BYTE PTR [rax],al
   140008976:	add    BYTE PTR [rax],al
   140008978:	rex.RX (bad) 
   14000897a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008982:	jae    0x1400089e9
   140008984:	je     0x1400089a6
   140008986:	rex.WB
   140008987:	rex.WRXB
   140008988:	rex.XB push r12
   14000898a:	rex.WR and BYTE PTR [rbx+0x6f],r12b
   14000898e:	ins    DWORD PTR es:[rdi],dx
   14000898f:	jo     0x1400089fd
   140008991:	gs je  0x1400089fd
   140008994:	outs   dx,DWORD PTR ds:[rsi]
   140008995:	outs   dx,BYTE PTR ds:[rsi]
   140008996:	and    BYTE PTR [rbp+0x6f],ch
   140008999:	fs gs jae 0x1400089d7
   14000899d:	and    BYTE PTR [rax],dh
   14000899f:	js     0x1400089c6
   1400089a1:	ins    BYTE PTR es:[rdi],dx
   1400089a2:	js     0x1400089ae
   1400089a4:	add    BYTE PTR [rax],al
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	rex.RX imul r15d,DWORD PTR [rax+0x75],0x766e4570
   1400089b0:	imul   esi,DWORD PTR [rdx+0x6f],0x6e656d6e
   1400089b7:	je     0x1400089f3
   1400089b9:	and    BYTE PTR [rbx+0x65],dl
   1400089bc:	je     0x140008a32
   1400089be:	imul   ebp,DWORD PTR [rsi+0x67],0x54415020
   1400089c5:	rex.W and BYTE PTR [rdi+rbp*2+0x20],sil
   1400089ca:	and    eax,0xa7377
   1400089cf:	add    BYTE PTR [rbx+0x65],dl
   1400089d2:	je     0x140008a1f
   1400089d4:	jae    0x140008a3b
   1400089d6:	movsxd eax,DWORD PTR [rbp+0x76]
   1400089d9:	outs   dx,BYTE PTR gs:[rsi]
   1400089db:	je     0x140008a17
   1400089dd:	and    BYTE PTR [rbx+0x6f],al
   1400089e0:	jne    0x140008a4e
   1400089e2:	and    BYTE PTR fs:[rsi+0x6f],ch
   1400089e6:	je     0x140008a08
   1400089e8:	outs   dx,DWORD PTR ds:[rsi]
   1400089e9:	jo     0x140008a50
   1400089eb:	outs   dx,BYTE PTR ds:[rsi]
   1400089ec:	and    BYTE PTR [rbp+0x76],ah
   1400089ef:	outs   dx,BYTE PTR gs:[rsi]
   1400089f1:	je     0x140008a13
   1400089f3:	and    eax,0x203a7377
   1400089f8:	and    eax,0xa756c
   1400089fd:	add    BYTE PTR [rax],al
   1400089ff:	add    BYTE PTR [rbx+0x65],dl
   140008a02:	je     0x140008a4f
   140008a04:	jae    0x140008a6b
   140008a06:	movsxd eax,DWORD PTR [rbp+0x76]
   140008a09:	outs   dx,BYTE PTR gs:[rsi]
   140008a0b:	je     0x140008a47
   140008a0d:	and    BYTE PTR [rsi+0x61],al
   140008a10:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008a18:	jae    0x140008a7f
   140008a1a:	je     0x140008a3c
   140008a1c:	imul   esi,DWORD PTR [rbx+0x65],0x63
   140008a20:	and    BYTE PTR [rbp+0x76],ah
   140008a23:	outs   dx,BYTE PTR gs:[rsi]
   140008a25:	je     0x140008a61
   140008a27:	and    BYTE PTR [rip+0xa756c],ah        # 0x1400aff99
   140008a2d:	add    BYTE PTR [rax],al
   140008a2f:	add    BYTE PTR [rsi+0x61],al
   140008a32:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008a3a:	imul   ebp,DWORD PTR [rsi+0x69],0x65772074
   140008a41:	ins    BYTE PTR es:[rdi],dx
   140008a42:	ins    BYTE PTR es:[rdi],dx
   140008a43:	and    BYTE PTR [rbx+0x6e],ch
   140008a46:	outs   dx,DWORD PTR ds:[rsi]
   140008a47:	ja     0x140008ab7
   140008a49:	and    BYTE PTR [rbx+0x49],dl
   140008a4c:	rex.R jae 0x140008a89
   140008a4f:	and    BYTE PTR [rax],dh
   140008a51:	js     0x140008a78
   140008a53:	js     0x140008a5f
   140008a55:	add    BYTE PTR [rax],al
   140008a57:	add    BYTE PTR [rsi+0x61],al
   140008a5a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008a62:	jae    0x140008ac9
   140008a64:	je     0x140008a86
   140008a66:	rex.WXB jae 0x140008ace
   140008a69:	movsxd esp,DWORD PTR [rax]
   140008a6b:	jae    0x140008ad2
   140008a6d:	movsxd esi,DWORD PTR [rbp+0x72]
   140008a70:	imul   esi,DWORD PTR [rcx+rdi*2+0x3a],0x25783020
   140008a78:	js     0x140008a84
   140008a7a:	add    BYTE PTR [rax],al
   140008a7c:	add    BYTE PTR [rax],al
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	rex.RX (bad) 
   140008a82:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008a8a:	imul   ebp,DWORD PTR [rsi+0x69],0x534c2074
   140008a91:	and    BYTE PTR [r9+0x6e],bpl
   140008a95:	je     0x140008afc
   140008a97:	jb     0x140008aff
   140008a99:	(bad)  
   140008a9a:	movsxd esp,DWORD PTR [rbp+0x20]
   140008a9d:	ins    BYTE PTR es:[rdi],dx
   140008a9e:	imul   esi,DWORD PTR [rbx+0x74],0x7830203a
   140008aa5:	and    eax,0xa78
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	add    BYTE PTR [rax],al
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	rex.RX (bad) 
   140008ab2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008aba:	imul   ebp,DWORD PTR [rsi+0x69],0x734c2074
   140008ac1:	(bad)  
   140008ac2:	jae    0x140008b37
   140008ac4:	and    BYTE PTR [rdi+0x6c],ah
   140008ac7:	outs   dx,DWORD PTR ds:[rsi]
   140008ac8:	(bad)
   140008acd:	je     0x140008b30
   140008acf:	je     0x140008b36
   140008ad1:	jae    0x140008b0d
   140008ad3:	and    BYTE PTR [rax],dh
   140008ad5:	js     0x140008afc
   140008ad7:	js     0x140008ae3
   140008ad9:	add    BYTE PTR [rax],al
   140008adb:	add    BYTE PTR [rax],al
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    BYTE PTR [rsi+0x61],al
   140008ae2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008aea:	imul   ebp,DWORD PTR [rsi+0x69],0x4d522074
   140008af1:	cmp    ah,BYTE PTR [rax]
   140008af3:	xor    BYTE PTR [rax+0x25],bh
   140008af6:	js     0x140008b02
	...
   140008b00:	rex.RX (bad) 
   140008b02:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008b0a:	ins    BYTE PTR es:[rdi],dx
   140008b0b:	outs   dx,DWORD PTR ds:[rsi]
   140008b0c:	(bad)  
   140008b0d:	and    BYTE PTR fs:[rbp+0x78],ah
   140008b11:	je     0x140008b78
   140008b13:	outs   dx,BYTE PTR ds:[rsi]
   140008b14:	jae    0x140008b7f
   140008b16:	outs   dx,DWORD PTR ds:[rsi]
   140008b17:	outs   dx,BYTE PTR ds:[rsi]
   140008b18:	jae    0x140008b54
   140008b1a:	and    BYTE PTR [rax],dh
   140008b1c:	js     0x140008b43
   140008b1e:	js     0x140008b2a
	...
   140008b28:	push   rbx
   140008b29:	gs je  0x140008b77
   140008b2c:	jae    0x140008b93
   140008b2e:	movsxd eax,DWORD PTR [rbp+0x76]
   140008b31:	outs   dx,BYTE PTR gs:[rsi]
   140008b33:	je     0x140008b55
   140008b35:	data16 (bad) 
   140008b37:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008b3f:	and    eax,0xa786c
   140008b44:	add    BYTE PTR [rax],al
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	rex.RX (bad) 
   140008b4a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008b52:	jae    0x140008bc8
   140008b54:	(bad)  
   140008b55:	jb     0x140008bcb
   140008b57:	and    BYTE PTR [rax+rdx*2+0x52],cl
   140008b5b:	and    BYTE PTR [rbx+0x65],dh
   140008b5e:	jb     0x140008bd6
   140008b60:	gs jb  0x140008b9d
   140008b63:	and    BYTE PTR [rax],dh
   140008b65:	js     0x140008b8c
   140008b67:	ins    BYTE PTR es:[rdi],dx
   140008b68:	js     0x140008b74
   140008b6a:	add    BYTE PTR [rax],al
   140008b6c:	add    BYTE PTR [rax],al
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	rex.WR jae 0x140008bd4
   140008b73:	jo     0x140008bc1
   140008b75:	outs   dx,DWORD PTR ds:[rsi]
   140008b76:	(bad)  
   140008b77:	fs rex.WR jae 0x140008bdc
   140008b7b:	rex.RB js 0x140008bf2
   140008b7e:	outs   dx,BYTE PTR gs:[rsi]
   140008b80:	jae    0x140008beb
   140008b82:	outs   dx,DWORD PTR ds:[rsi]
   140008b83:	outs   dx,BYTE PTR ds:[rsi]
   140008b84:	cmp    ah,BYTE PTR [rax]
   140008b86:	rex.XB (bad) 
   140008b88:	outs   dx,BYTE PTR ds:[rsi]
   140008b89:	(bad)  
   140008b8a:	je     0x140008bac
   140008b8c:	ins    BYTE PTR es:[rdi],dx
   140008b8d:	outs   dx,DWORD PTR ds:[rsi]
   140008b8e:	(bad)  
   140008b8f:	and    BYTE PTR fs:[rcx+rbp*2+0x62],ch
   140008b94:	jb     0x140008bf7
   140008b96:	jb     0x140008c11
   140008b98:	and    BYTE PTR [rsi+0x6f],ah
   140008b9b:	jb     0x140008bbd
   140008b9d:	and    eax,0x203a7377
   140008ba2:	and    eax,0xa756c
   140008ba7:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008bab:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008bad:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008bb5:	rex.RB js 0x140008c2c
   140008bb8:	outs   dx,BYTE PTR gs:[rsi]
   140008bba:	jae    0x140008c25
   140008bbc:	outs   dx,DWORD PTR ds:[rsi]
   140008bbd:	outs   dx,BYTE PTR ds:[rsi]
   140008bbe:	cmp    ah,BYTE PTR [rax]
   140008bc0:	rex.XB (bad) 
   140008bc2:	outs   dx,BYTE PTR ds:[rsi]
   140008bc3:	(bad)  
   140008bc4:	je     0x140008be6
   140008bc6:	addr32 gs je 0x140008bea
   140008bca:	imul   ebp,DWORD PTR [rsi+0x69],0x6f722074
   140008bd1:	jne    0x140008c47
   140008bd3:	imul   ebp,DWORD PTR [rsi+0x65],0x726f6620
   140008bda:	and    BYTE PTR [rip+0x203a7377],ah        # 0x1603aff57
   140008be0:	and    eax,0xa756c
   140008be5:	add    BYTE PTR [rax],al
   140008be7:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008beb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008bed:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008bf5:	rex.RB js 0x140008c6c
   140008bf8:	outs   dx,BYTE PTR gs:[rsi]
   140008bfa:	jae    0x140008c65
   140008bfc:	outs   dx,DWORD PTR ds:[rsi]
   140008bfd:	outs   dx,BYTE PTR ds:[rsi]
   140008bfe:	cmp    ah,BYTE PTR [rax]
   140008c00:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c02:	imul   esi,DWORD PTR [rax+riz*1+0x72],0x6974756f
   140008c0a:	outs   dx,BYTE PTR ds:[rsi]
   140008c0b:	and    BYTE PTR gs:[rsi+0x6f],ah
   140008c0f:	jb     0x140008c31
   140008c11:	and    eax,0x66207377
   140008c16:	(bad)  
   140008c17:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008c1f:	and    eax,0xa786c
	...
   140008c30:	rex.WR jae 0x140008c94
   140008c33:	jo     0x140008c81
   140008c35:	outs   dx,DWORD PTR ds:[rsi]
   140008c36:	(bad)  
   140008c37:	fs push rdx
   140008c39:	gs jno 0x140008cb1
   140008c3c:	imul   esi,DWORD PTR [rdx+0x65],0x74784564
   140008c43:	outs   dx,BYTE PTR gs:[rsi]
   140008c45:	jae    0x140008cb0
   140008c47:	outs   dx,DWORD PTR ds:[rsi]
   140008c48:	outs   dx,BYTE PTR ds:[rsi]
   140008c49:	jae    0x140008c85
   140008c4b:	and    BYTE PTR [rdx+0x65],dl
   140008c4e:	addr32 rex.WRXB jo 0x140008cb7
   140008c52:	outs   dx,BYTE PTR ds:[rsi]
   140008c53:	rex.WXB
   140008c54:	gs jns 0x140008c9c
   140008c57:	js     0x140008c79
   140008c59:	outs   dx,WORD PTR ds:[rsi]
   140008c5b:	jb     0x140008c7d
   140008c5d:	rex.WR push rbx
   140008c5f:	and    BYTE PTR [r11+0x65],bpl
   140008c63:	jns    0x140008c85
   140008c65:	data16 (bad) 
   140008c67:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6c25203a
   140008c6f:	jne    0x140008c7b
	...
   140008c7d:	add    BYTE PTR [rax],al
   140008c7f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008c83:	jo     0x140008cd1
   140008c85:	outs   dx,DWORD PTR ds:[rsi]
   140008c86:	(bad)  
   140008c87:	fs push rdx
   140008c89:	gs jno 0x140008d01
   140008c8c:	imul   esi,DWORD PTR [rdx+0x65],0x74784564
   140008c93:	outs   dx,BYTE PTR gs:[rsi]
   140008c95:	jae    0x140008d00
   140008c97:	outs   dx,DWORD PTR ds:[rsi]
   140008c98:	outs   dx,BYTE PTR ds:[rsi]
   140008c99:	jae    0x140008cd5
   140008c9b:	and    BYTE PTR [rdx+0x65],dl
   140008c9e:	addr32 push rcx
   140008ca0:	jne    0x140008d07
   140008ca2:	jb     0x140008d1d
   140008ca4:	push   rsi
   140008ca5:	(bad)  
   140008ca6:	ins    BYTE PTR es:[rdi],dx
   140008ca7:	jne    0x140008d0e
   140008ca9:	rex.RB js 0x140008ccc
   140008cac:	outs   dx,WORD PTR ds:[rsi]
   140008cae:	jb     0x140008cd0
   140008cb0:	rex.WR push rbx
   140008cb2:	and    BYTE PTR [r11+0x65],bpl
   140008cb6:	jns    0x140008cd8
   140008cb8:	data16 (bad) 
   140008cba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6c25203a
   140008cc2:	jne    0x140008cce
	...
   140008cd0:	rex.WR jae 0x140008d34
   140008cd3:	jo     0x140008d21
   140008cd5:	outs   dx,DWORD PTR ds:[rsi]
   140008cd6:	(bad)  
   140008cd7:	fs push rdx
   140008cd9:	gs jno 0x140008d51
   140008cdc:	imul   esi,DWORD PTR [rdx+0x65],0x74784564
   140008ce3:	outs   dx,BYTE PTR gs:[rsi]
   140008ce5:	jae    0x140008d50
   140008ce7:	outs   dx,DWORD PTR ds:[rsi]
   140008ce8:	outs   dx,BYTE PTR ds:[rsi]
   140008ce9:	jae    0x140008d25
   140008ceb:	and    BYTE PTR [rdx+0x61],al
   140008cee:	and    BYTE PTR fs:[rdx+0x45],dl
   140008cf2:	rex.RXB pop r15
   140008cf4:	push   rbx
   140008cf5:	pop    rdx
   140008cf6:	and    BYTE PTR [rbx+0x69],dh
   140008cf9:	jp     0x140008d60
   140008cfb:	and    BYTE PTR [rsi+0x6f],ah
   140008cfe:	jb     0x140008d20
   140008d00:	rex.WR push rbx
   140008d02:	and    BYTE PTR [r13+0x78],spl
   140008d06:	je     0x140008d6d
   140008d08:	outs   dx,BYTE PTR ds:[rsi]
   140008d09:	jae    0x140008d74
   140008d0b:	outs   dx,DWORD PTR ds:[rsi]
   140008d0c:	outs   dx,BYTE PTR ds:[rsi]
   140008d0d:	jae    0x140008d2f
   140008d0f:	jbe    0x140008d72
   140008d11:	ins    BYTE PTR es:[rdi],dx
   140008d12:	jne    0x140008d79
   140008d14:	or     al,BYTE PTR [rax]
	...
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	rex.WR jae 0x140008d84
   140008d23:	jo     0x140008d71
   140008d25:	outs   dx,DWORD PTR ds:[rsi]
   140008d26:	(bad)  
   140008d27:	fs push rdx
   140008d29:	gs jno 0x140008da1
   140008d2c:	imul   esi,DWORD PTR [rdx+0x65],0x74784564
   140008d33:	outs   dx,BYTE PTR gs:[rsi]
   140008d35:	jae    0x140008da0
   140008d37:	outs   dx,DWORD PTR ds:[rsi]
   140008d38:	outs   dx,BYTE PTR ds:[rsi]
   140008d39:	jae    0x140008d75
   140008d3b:	and    BYTE PTR [rdx+0x61],al
   140008d3e:	and    BYTE PTR fs:[rdx+0x45],dl
   140008d42:	rex.RXB pop r15
   140008d44:	rex.WRB push r13
   140008d46:	rex.WR push rsp
   140008d48:	rex.WB pop r15
   140008d4a:	push   rbx
   140008d4b:	pop    rdx
   140008d4c:	and    BYTE PTR [rbx+0x69],dh
   140008d4f:	jp     0x140008db6
   140008d51:	and    BYTE PTR [rsi+0x6f],ah
   140008d54:	jb     0x140008d76
   140008d56:	rex.WR push rbx
   140008d58:	and    BYTE PTR [r13+0x78],spl
   140008d5c:	je     0x140008dc3
   140008d5e:	outs   dx,BYTE PTR ds:[rsi]
   140008d5f:	jae    0x140008dca
   140008d61:	outs   dx,DWORD PTR ds:[rsi]
   140008d62:	outs   dx,BYTE PTR ds:[rsi]
   140008d63:	jae    0x140008d85
   140008d65:	jbe    0x140008dc8
   140008d67:	ins    BYTE PTR es:[rdi],dx
   140008d68:	jne    0x140008dcf
   140008d6a:	or     al,BYTE PTR [rax]
   140008d6c:	add    BYTE PTR [rax],al
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	rex.WR jae 0x140008dd4
   140008d73:	jo     0x140008dc1
   140008d75:	outs   dx,DWORD PTR ds:[rsi]
   140008d76:	(bad)  
   140008d77:	fs push rdx
   140008d79:	gs jno 0x140008df1
   140008d7c:	imul   esi,DWORD PTR [rdx+0x65],0x74784564
   140008d83:	outs   dx,BYTE PTR gs:[rsi]
   140008d85:	jae    0x140008df0
   140008d87:	outs   dx,DWORD PTR ds:[rsi]
   140008d88:	outs   dx,BYTE PTR ds:[rsi]
   140008d89:	jae    0x140008dc5
   140008d8b:	and    BYTE PTR [rdx+0x61],al
   140008d8e:	and    BYTE PTR fs:[rdx+0x65],dh
   140008d92:	and    BYTE PTR [ecx+edi*2+0x70],dh
   140008d97:	and    BYTE PTR gs:[rip+0x6620756c],ah        # 0x1a621030a
   140008d9e:	outs   dx,DWORD PTR ds:[rsi]
   140008d9f:	jb     0x140008dc1
   140008da1:	rex.WR push rbx
   140008da3:	and    BYTE PTR [r13+0x78],spl
   140008da7:	je     0x140008e0e
   140008da9:	outs   dx,BYTE PTR ds:[rsi]
   140008daa:	jae    0x140008e15
   140008dac:	outs   dx,DWORD PTR ds:[rsi]
   140008dad:	outs   dx,BYTE PTR ds:[rsi]
   140008dae:	jae    0x140008dd0
   140008db0:	jbe    0x140008e13
   140008db2:	ins    BYTE PTR es:[rdi],dx
   140008db3:	jne    0x140008e1a
   140008db5:	or     al,BYTE PTR [rax]
	...
   140008dbf:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008dc3:	jo     0x140008e11
   140008dc5:	outs   dx,DWORD PTR ds:[rsi]
   140008dc6:	(bad)  
   140008dc7:	fs push rdx
   140008dc9:	gs jno 0x140008e41
   140008dcc:	imul   esi,DWORD PTR [rdx+0x65],0x74784564
   140008dd3:	outs   dx,BYTE PTR gs:[rsi]
   140008dd5:	jae    0x140008e40
   140008dd7:	outs   dx,DWORD PTR ds:[rsi]
   140008dd8:	outs   dx,BYTE PTR ds:[rsi]
   140008dd9:	jae    0x140008e15
   140008ddb:	and    BYTE PTR [rdx+0x65],dl
   140008dde:	addr32 push rcx
   140008de0:	jne    0x140008e47
   140008de2:	jb     0x140008e5d
   140008de4:	push   rsi
   140008de5:	(bad)  
   140008de6:	ins    BYTE PTR es:[rdi],dx
   140008de7:	jne    0x140008e4e
   140008de9:	rex.RB js 0x140008e0c
   140008dec:	outs   dx,WORD PTR ds:[rsi]
   140008dee:	jb     0x140008e10
   140008df0:	rex.WR push rbx
   140008df2:	and    BYTE PTR [r11+0x65],bpl
   140008df6:	jns    0x140008e18
   140008df8:	data16 (bad) 
   140008dfa:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   140008e02:	push   0x7a695320
   140008e07:	and    BYTE PTR gs:[rip+0x203a756c],ah        # 0x1603b037a
   140008e0e:	and    eax,0xa756c
   140008e13:	add    BYTE PTR [rax],al
   140008e15:	add    BYTE PTR [rax],al
   140008e17:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008e1b:	jo     0x140008e69
   140008e1d:	outs   dx,DWORD PTR ds:[rsi]
   140008e1e:	(bad)  
   140008e1f:	fs push rdx
   140008e21:	gs jno 0x140008e99
   140008e24:	imul   esi,DWORD PTR [rdx+0x65],0x74784564
   140008e2b:	outs   dx,BYTE PTR gs:[rsi]
   140008e2d:	jae    0x140008e98
   140008e2f:	outs   dx,DWORD PTR ds:[rsi]
   140008e30:	outs   dx,BYTE PTR ds:[rsi]
   140008e31:	jae    0x140008e53
   140008e33:	data16 (bad) 
   140008e35:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008e3d:	and    eax,0xa78
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	add    BYTE PTR [rax],al
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	rex.WR jae 0x140008eac
   140008e4b:	jo     0x140008ea0
   140008e4d:	je     0x140008eb0
   140008e4f:	jb     0x140008ec5
   140008e51:	rex.RB js 0x140008ec8
   140008e54:	outs   dx,BYTE PTR gs:[rsi]
   140008e56:	jae    0x140008ec1
   140008e58:	outs   dx,DWORD PTR ds:[rsi]
   140008e59:	outs   dx,BYTE PTR ds:[rsi]
   140008e5a:	jae    0x140008e96
   140008e5c:	and    BYTE PTR [rbp+0x78],al
   140008e5f:	je     0x140008ec6
   140008e61:	outs   dx,BYTE PTR ds:[rsi]
   140008e62:	jae    0x140008ecd
   140008e64:	outs   dx,DWORD PTR ds:[rsi]
   140008e65:	outs   dx,BYTE PTR ds:[rsi]
   140008e66:	and    BYTE PTR [rip+0x66207377],ah        # 0x1a62101e3
   140008e6c:	(bad)  
   140008e6d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008e75:	jae    0x140008eeb
   140008e77:	(bad)  
   140008e78:	jb     0x140008eee
   140008e7a:	cmp    ah,BYTE PTR [rax]
   140008e7c:	xor    BYTE PTR [rax+0x25],bh
   140008e7f:	ins    BYTE PTR es:[rdi],dx
   140008e80:	js     0x140008e8c
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	push   rdx
   140008e89:	rex.RB outs dx,BYTE PTR gs:[esi]
   140008e8d:	jne    0x140008efc
   140008e8f:	rex.WXB
   140008e90:	gs jns 0x140008ed8
   140008e93:	js     0x140008eb5
   140008e95:	data16 (bad) 
   140008e97:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
   140008e9f:	imul   ebp,DWORD PTR [rsi+0x64],0x25207865
   140008ea6:	jne    0x140008ee2
   140008ea8:	and    BYTE PTR [rax],dh
   140008eaa:	js     0x140008ed1
   140008eac:	pop    rax
   140008ead:	or     al,BYTE PTR [rax]
   140008eaf:	add    BYTE PTR [rcx+0x67],cl
   140008eb2:	outs   dx,BYTE PTR ds:[rsi]
   140008eb3:	outs   dx,DWORD PTR ds:[rsi]
   140008eb4:	jb     0x140008f1b
   140008eb6:	and    BYTE PTR [rsi+0x61],ah
   140008eb9:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
   140008ec1:	and    BYTE PTR [rdi+0x70],ch
   140008ec4:	outs   dx,BYTE PTR gs:[rsi]
   140008ec6:	and    BYTE PTR [rcx+0x6e],ch
   140008ec9:	je     0x140008f30
   140008ecb:	jb     0x140008f33
   140008ecd:	(bad)  
   140008ece:	movsxd esp,DWORD PTR [rbp+0x20]
   140008ed1:	jb     0x140008f38
   140008ed3:	and    BYTE PTR [ebx+0x65],ch
   140008ed7:	jns    0x140008ef9
   140008ed9:	and    eax,0x203a7377
   140008ede:	xor    BYTE PTR [rax+0x25],bh
   140008ee1:	pop    rax
   140008ee2:	or     al,BYTE PTR [rax]
   140008ee4:	add    BYTE PTR [rax],al
   140008ee6:	add    BYTE PTR [rax],al
   140008ee8:	rex.WB
   140008ee9:	outs   dx,BYTE PTR ds:[esi]
   140008eeb:	outs   dx,DWORD PTR ds:[rsi]
   140008eec:	jb     0x140008f53
   140008eee:	and    BYTE PTR [rsi+0x61],ah
   140008ef1:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
   140008ef9:	and    BYTE PTR [rdi+rbp*2+0x61],ch
   140008efd:	and    BYTE PTR fs:[rbx+rdx*2+0x41],cl
   140008f02:	and    BYTE PTR [rbp+0x78],ah
   140008f05:	je     0x140008f6c
   140008f07:	outs   dx,BYTE PTR ds:[rsi]
   140008f08:	jae    0x140008f73
   140008f0a:	outs   dx,DWORD PTR ds:[rsi]
   140008f0b:	outs   dx,BYTE PTR ds:[rsi]
   140008f0c:	and    BYTE PTR [rsi+0x72],ah
   140008f0f:	outs   dx,DWORD PTR ds:[rsi]
   140008f10:	ins    DWORD PTR es:[rdi],dx
   140008f11:	and    BYTE PTR [rip+0x203a7377],ah        # 0x1603b028e
   140008f17:	xor    BYTE PTR [rax+0x25],bh
   140008f1a:	pop    rax
   140008f1b:	or     al,BYTE PTR [rax]
   140008f1d:	add    BYTE PTR [rax],al
   140008f1f:	add    BYTE PTR [rcx+0x67],cl
   140008f22:	outs   dx,BYTE PTR ds:[rsi]
   140008f23:	outs   dx,DWORD PTR ds:[rsi]
   140008f24:	jb     0x140008f8b
   140008f26:	and    BYTE PTR [rsi+0x61],ah
   140008f29:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
   140008f31:	and    BYTE PTR [rdi+rbp*2+0x61],ch
   140008f35:	and    BYTE PTR fs:[rcx+0x6e],ch
   140008f39:	je     0x140008fa0
   140008f3b:	jb     0x140008fa3
   140008f3d:	(bad)  
   140008f3e:	movsxd esp,DWORD PTR [rbp+0x20]
   140008f41:	and    eax,0x66206c75
   140008f46:	jb     0x140008fb7
   140008f48:	ins    DWORD PTR es:[rdi],dx
   140008f49:	and    BYTE PTR [rbp+0x78],ah
   140008f4c:	je     0x140008fb3
   140008f4e:	outs   dx,BYTE PTR ds:[rsi]
   140008f4f:	jae    0x140008fba
   140008f51:	outs   dx,DWORD PTR ds:[rsi]
   140008f52:	outs   dx,BYTE PTR ds:[rsi]
   140008f53:	and    BYTE PTR [rip+0x203a7377],ah        # 0x1603b02d0
   140008f59:	xor    BYTE PTR [rax+0x25],bh
   140008f5c:	pop    rax
   140008f5d:	or     al,BYTE PTR [rax]
   140008f5f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008f63:	jo     0x140008fb1
   140008f65:	outs   dx,DWORD PTR ds:[rsi]
   140008f66:	(bad)  
   140008f67:	fs rex.WR jae 0x140008fcc
   140008f6b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008f6d:	je     0x140008fd4
   140008f6f:	jb     0x140008fd7
   140008f71:	(bad)  
   140008f72:	movsxd esp,DWORD PTR [rbp+0x73]
   140008f75:	and    BYTE PTR [rsi+0x61],ah
   140008f78:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008f80:	and    eax,0xa58
   140008f85:	add    BYTE PTR [rax],al
   140008f87:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008f8b:	jo     0x140008fcf
   140008f8d:	jne    0x140008ff8
   140008f8f:	ins    BYTE PTR es:[rdi],dx
   140008f90:	fs push rbx
   140008f92:	cmp    r12b,BYTE PTR [rax]
   140008f95:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008f97:	jne    0x140009005
   140008f99:	and    BYTE PTR fs:[rsi+0x6f],ch
   140008f9d:	je     0x140008fbf
   140008f9f:	outs   dx,DWORD PTR ds:[rsi]
   140008fa0:	jo     0x140009007
   140008fa2:	outs   dx,BYTE PTR ds:[rsi]
   140008fa3:	and    BYTE PTR [rip+0x202c7377],ah        # 0x1602d0320
   140008fa9:	and    eax,0xa64
   140008fae:	add    BYTE PTR [rax],al
   140008fb0:	rex.RX (bad) 
   140008fb2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140008fba:	jae    0x140009021
   140008fbc:	je     0x140008fde
   140008fbe:	gs jbe 0x140009026
   140008fc1:	outs   dx,BYTE PTR ds:[rsi]
   140008fc2:	je     0x140008fe4
   140008fc4:	push   rbx
   140008fc5:	cmp    r12b,BYTE PTR [rax]
   140008fc8:	xor    BYTE PTR [rax+0x25],bh
   140008fcb:	js     0x140008fd7
   140008fcd:	add    BYTE PTR [rax],al
   140008fcf:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008fd3:	jo     0x140009027
   140008fd5:	ins    DWORD PTR es:[rdi],dx
   140008fd6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008fd8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008fe0:	push   rbx
   140008fe1:	gs jb  0x14000905a
   140008fe4:	gs jb  0x140009021
   140008fe7:	and    BYTE PTR [rsi+0x74],cl
   140008fea:	rex.XB jb 0x140009052
   140008fed:	(bad)  
   140008fee:	je     0x140009055
   140008ff0:	push   rax
   140008ff1:	outs   dx,DWORD PTR ds:[rsi]
   140008ff2:	jb     0x140009068
   140008ff4:	and    BYTE PTR [rsi+0x61],ah
   140008ff7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140008fff:	and    eax,0xa786c
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	rex.WR jae 0x14000906c
   14000900b:	jo     0x14000905f
   14000900d:	ins    DWORD PTR es:[rdi],dx
   14000900e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009010:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009018:	push   rbx
   140009019:	gs jb  0x140009092
   14000901c:	gs jb  0x140009059
   14000901f:	and    BYTE PTR [rsi+0x74],cl
   140009022:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009024:	outs   dx,BYTE PTR ds:[rsi]
   140009025:	outs   dx,BYTE PTR ds:[rsi]
   140009026:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x6f]
   14000902b:	jb     0x1400090a1
   14000902d:	and    BYTE PTR [rsi+0x61],ah
   140009030:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009038:	and    eax,0xa786c
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140009043:	jo     0x140009097
   140009045:	ins    DWORD PTR es:[rdi],dx
   140009046:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009048:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009050:	push   rbx
   140009051:	gs jb  0x1400090ca
   140009054:	gs jb  0x140009091
   140009057:	and    BYTE PTR [rbx+0x65],dl
   14000905a:	jb     0x1400090d2
   14000905c:	gs jb  0x14000907f
   14000905f:	jo     0x1400090d3
   140009061:	outs   dx,DWORD PTR ds:[rsi]
   140009062:	je     0x1400090d3
   140009064:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140009067:	and    BYTE PTR [rbp+0x69],ch
   14000906a:	jae    0x1400090d9
   14000906c:	(bad)  
   14000906d:	je     0x1400090d2
   14000906f:	push   0xa
   140009074:	add    BYTE PTR [rax],al
   140009076:	add    BYTE PTR [rax],al
   140009078:	rex.WR jae 0x1400090dc
   14000907b:	jo     0x1400090cf
   14000907d:	ins    DWORD PTR es:[rdi],dx
   14000907e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009080:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009088:	push   rbx
   140009089:	gs jb  0x140009102
   14000908c:	gs jb  0x1400090c9
   14000908f:	and    BYTE PTR [rsi+0x74],cl
   140009092:	imul   r14,QWORD PTR [rbx+0x74],0x6f506e65
   14000909a:	jb     0x140009110
   14000909c:	and    BYTE PTR [rsi+0x61],ah
   14000909f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   1400090a7:	and    eax,0xa786c
   1400090ac:	add    BYTE PTR [rax],al
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	rex.WR jae 0x140009114
   1400090b3:	jo     0x140009107
   1400090b5:	ins    DWORD PTR es:[rdi],dx
   1400090b6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400090b8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400090c0:	push   rbx
   1400090c1:	gs jb  0x14000913a
   1400090c4:	gs jb  0x140009101
   1400090c7:	and    BYTE PTR [rsi+0x74],cl
   1400090ca:	movsxd esp,DWORD PTR [r11+0x65]
   1400090ce:	jo     0x140009144
   1400090d0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400090d2:	outs   dx,BYTE PTR ds:[rsi]
   1400090d3:	outs   dx,BYTE PTR ds:[rsi]
   1400090d4:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x6f]
   1400090d9:	jb     0x14000914f
   1400090db:	and    BYTE PTR [rsi+0x61],ah
   1400090de:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   1400090e6:	and    eax,0xa786c
   1400090eb:	add    BYTE PTR [rax],al
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   1400090f3:	jo     0x140009147
   1400090f5:	ins    DWORD PTR es:[rdi],dx
   1400090f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400090f8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009100:	push   rbx
   140009101:	gs jb  0x14000917a
   140009104:	gs jb  0x140009141
   140009107:	and    BYTE PTR [rsi+0x74],cl
   14000910a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000910c:	ins    DWORD PTR es:[rdi],dx
   14000910d:	jo     0x14000917b
   14000910f:	gs je  0x140009177
   140009112:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009114:	outs   dx,BYTE PTR ds:[rsi]
   140009115:	outs   dx,BYTE PTR ds:[rsi]
   140009116:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x6f]
   14000911b:	jb     0x140009191
   14000911d:	and    BYTE PTR [rsi+0x61],ah
   140009120:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009128:	and    eax,0xa786c
   14000912d:	add    BYTE PTR [rax],al
   14000912f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140009133:	jo     0x140009187
   140009135:	ins    DWORD PTR es:[rdi],dx
   140009136:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009138:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009140:	push   rbx
   140009141:	gs jb  0x1400091ba
   140009144:	gs jb  0x140009181
   140009147:	and    BYTE PTR [rbx+0x72],al
   14000914a:	gs (bad) 
   14000914c:	je     0x1400091b3
   14000914e:	push   rsp
   14000914f:	push   0x64616572
   140009154:	and    BYTE PTR [rax],ah
   140009156:	data16 (bad) 
   140009158:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   140009160:	and    eax,0xa786c
   140009165:	add    BYTE PTR [rax],al
   140009167:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   14000916b:	jo     0x1400091b0
   14000916d:	(bad)  
   14000916e:	ins    BYTE PTR es:[rdi],dx
   14000916f:	ins    BYTE PTR es:[rdi],dx
   140009170:	push   rdx
   140009171:	ins    DWORD PTR es:[rdi],dx
   140009172:	cmp    ah,BYTE PTR [rax]
   140009174:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009176:	ins    DWORD PTR es:[rdi],dx
   140009177:	ins    DWORD PTR es:[rdi],dx
   140009178:	(bad)  
   140009179:	outs   dx,BYTE PTR ds:[rsi]
   14000917a:	and    BYTE PTR fs:[rbx+0x65],dh
   14000917e:	outs   dx,BYTE PTR ds:[rsi]
   14000917f:	je     0x1400091a1
   140009181:	data16 jb 0x1400091f3
   140009184:	ins    DWORD PTR es:[rdi],dx
   140009185:	and    BYTE PTR [rbx+rdx*2+0x41],cl
   140009189:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000918d:	push   rdx
   14000918e:	rex.WRB and BYTE PTR [r14+0x61],r12b
   140009192:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000919a:	and    eax,0xa786c
   14000919f:	add    BYTE PTR [rcx+0x4f],cl
   1400091a2:	rex.XB push r12
   1400091a4:	rex.WR pop rdi
   1400091a6:	rex.WXB push r11
   1400091a8:	rex.RB
   1400091a9:	rex.XB pop r15
   1400091ab:	rex.WB push r8
   1400091ad:	rex.XB pop r15
   1400091af:	rex.RXB
   1400091b0:	rex.RB push r12
   1400091b2:	pop    rdi
   1400091b3:	push   rcx
   1400091b4:	push   rbp
   1400091b5:	rex.RB push r13
   1400091b7:	rex.RB
   1400091b8:	rex.R pop rdi
   1400091ba:	rex.RX push rbp
   1400091bc:	rex.WRX
   1400091bd:	rex.XB push r12
   1400091bf:	rex.WB
   1400091c0:	rex.WRXB
   1400091c1:	rex.WRX pop rdi
   1400091c3:	rex.XB
   1400091c4:	rex.B
   1400091c5:	rex.WR
   1400091c6:	rex.WR push rbx
   1400091c8:	and    BYTE PTR [rsi+0x61],ah
   1400091cb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7453202e
   1400091d3:	(bad)  
   1400091d4:	je     0x14000924b
   1400091d6:	jae    0x1400091f8
   1400091d8:	and    eax,0xa64
   1400091dd:	add    BYTE PTR [rax],al
   1400091df:	add    BYTE PTR [rcx+0x4f],cl
   1400091e2:	rex.XB push r12
   1400091e4:	rex.WR pop rdi
   1400091e6:	rex.WXB push r11
   1400091e8:	rex.RB
   1400091e9:	rex.XB pop r15
   1400091eb:	rex.WB push r8
   1400091ed:	rex.XB pop r15
   1400091ef:	push   rbx
   1400091f0:	rex.RB push r12
   1400091f2:	pop    rdi
   1400091f3:	rex.RX push rbp
   1400091f5:	rex.WRX
   1400091f6:	rex.XB push r12
   1400091f8:	rex.WB
   1400091f9:	rex.WRXB
   1400091fa:	rex.WRX pop rdi
   1400091fc:	push   rdx
   1400091fd:	rex.RB push r12
   1400091ff:	push   rbp
   140009200:	push   rdx
   140009201:	rex.WRX and BYTE PTR [rsi+0x61],r12b
   140009205:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7453202e
   14000920d:	(bad)  
   14000920e:	je     0x140009285
   140009210:	jae    0x140009232
   140009212:	and    eax,0xa64
   140009217:	add    BYTE PTR [rcx+0x0],al
   14000921a:	jae    0x14000921c
   14000921c:	jns    0x14000921e
   14000921e:	outs   dx,BYTE PTR ds:[rsi]
   14000921f:	add    BYTE PTR [rbx+0x0],ah
   140009222:	rex.WXB add BYTE PTR [r11+0x0],sil
   140009226:	add    BYTE PTR gs:[rbx+0x0],ah
   14000922a:	add    BYTE PTR [rax+rax*1+0x0],r8b
   14000922f:	add    BYTE PTR [rsi+0x61],al
   140009232:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000923a:	imul   ebp,DWORD PTR [rsi+0x69],0x6f632074
   140009241:	outs   dx,BYTE PTR ds:[rsi]
   140009242:	outs   dx,BYTE PTR ds:[rsi]
   140009243:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009248:	outs   dx,BYTE PTR ds:[rsi]
   140009249:	and    BYTE PTR [rax+0x61],ch
   14000924c:	outs   dx,BYTE PTR ds:[rsi]
   14000924d:	fs ins BYTE PTR es:[rdi],dx
   14000924f:	gs and BYTE PTR cs:[rbx+0x74],dl
   140009254:	(bad)  
   140009255:	je     0x1400092cc
   140009257:	jae    0x140009293
   140009259:	and    BYTE PTR [rax],dh
   14000925b:	js     0x140009282
   14000925d:	js     0x14000925f
   14000925f:	add    BYTE PTR [rax+rbp*2+0x65],dl
   140009263:	and    BYTE PTR [rdx+0x65],dh
   140009266:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
   14000926e:	and    BYTE PTR [rbx+0x53],dl
   140009271:	push   rax
   140009272:	rex.WB and BYTE PTR [r13+0x78],spl
   140009276:	je     0x1400092dd
   140009278:	outs   dx,BYTE PTR ds:[rsi]
   140009279:	jae    0x1400092ef
   14000927b:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
   140009282:	jae    0x1400092a4
   140009284:	outs   dx,BYTE PTR ds:[rsi]
   140009285:	outs   dx,DWORD PTR ds:[rsi]
   140009286:	je     0x1400092a8
   140009288:	jae    0x1400092ff
   14000928a:	jo     0x1400092fc
   14000928c:	outs   dx,DWORD PTR ds:[rsi]
   14000928d:	jb     0x140009303
   14000928f:	and    BYTE PTR [rcx+0x43],al
   140009292:	rex.W add BYTE PTR [rax],al
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    BYTE PTR [rcx+0x6e],cl
   14000929a:	jbe    0x1400092fd
   14000929c:	ins    BYTE PTR es:[rdi],dx
   14000929d:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x636e7973
   1400092a5:	and    BYTE PTR [rbx+0x73],ch
   1400092a8:	movsxd esp,DWORD PTR gs:[rsp+riz*2+0x20]
   1400092ad:	data16 jne 0x14000931e
   1400092b0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400092b4:	outs   dx,BYTE PTR ds:[rsi]
   1400092b5:	and    BYTE PTR [rbx+0x61],ah
   1400092b8:	ins    BYTE PTR es:[rdi],dx
   1400092b9:	ins    BYTE PTR es:[rdi],dx
   1400092ba:	cmp    ah,BYTE PTR [rax]
   1400092bc:	and    eax,0x45000a64
   1400092c1:	jb     0x140009335
   1400092c3:	outs   dx,DWORD PTR ds:[rsi]
   1400092c4:	jb     0x1400092e6
   1400092c6:	jb     0x14000932d
   1400092c8:	jno    0x14000933f
   1400092ca:	gs jae 0x140009341
   1400092cd:	imul   ebp,DWORD PTR [rsi+0x67],0x79736120
   1400092d4:	outs   dx,BYTE PTR ds:[rsi]
   1400092d5:	movsxd esp,DWORD PTR [rax]
   1400092d7:	imul   esi,DWORD PTR [rbx+0x65],0x63
   1400092db:	fs and BYTE PTR fs:[rsi+0x75],ah
   1400092e0:	outs   dx,BYTE PTR ds:[rsi]
   1400092e1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400092e5:	outs   dx,BYTE PTR ds:[rsi]
   1400092e6:	and    BYTE PTR [rbx+0x61],ah
   1400092e9:	ins    BYTE PTR es:[rdi],dx
   1400092ea:	ins    BYTE PTR es:[rdi],dx
   1400092eb:	cmp    ah,BYTE PTR [rax]
   1400092ed:	and    eax,0xa64
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	add    BYTE PTR [rax],al
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	rex.WRXB jne 0x14000936f
   1400092fb:	and    BYTE PTR [rdi+0x66],ch
   1400092fe:	and    BYTE PTR [rbp+0x65],ch
   140009301:	ins    DWORD PTR es:[rdi],dx
   140009302:	outs   dx,DWORD PTR ds:[rsi]
   140009303:	jb     0x14000937e
   140009305:	and    BYTE PTR [rdi+0x68],dh
   140009308:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x636f7270
   140009310:	gs jae 0x140009386
   140009313:	imul   ebp,DWORD PTR [rsi+0x67],0x726f7720
   14000931a:	imul   esp,DWORD PTR [rax],0x66
   14000931d:	jb     0x14000938e
   14000931f:	ins    DWORD PTR es:[rdi],dx
   140009320:	and    BYTE PTR [rbx+0x73],ch
   140009323:	movsxd esp,DWORD PTR gs:[rsp+riz*2+0xa]
	...
   140009330:	rex.RB jb 0x1400093a5
   140009333:	outs   dx,DWORD PTR ds:[rsi]
   140009334:	jb     0x140009356
   140009336:	jo     0x1400093aa
   140009338:	outs   dx,DWORD PTR ds:[rsi]
   140009339:	movsxd esp,DWORD PTR [rbp+0x73]
   14000933c:	jae    0x1400093a7
   14000933e:	outs   dx,BYTE PTR ds:[rsi]
   14000933f:	and    BYTE PTR [edi+0x6f],dh
   140009343:	jb     0x1400093b0
   140009345:	and    BYTE PTR [rdi+0x6e],ch
   140009348:	and    BYTE PTR [rdi+0x6f],dh
   14000934b:	jb     0x1400093b8
   14000934d:	gs jb  0x140009370
   140009350:	je     0x1400093ba
   140009352:	jb     0x1400093b9
   140009354:	(bad)  
   140009355:	cmp    ah,BYTE PTR fs:[rax]
   140009358:	and    eax,0x64
   14000935d:	add    BYTE PTR [rax],al
   14000935f:	add    BYTE PTR [rsi+0x41],al
   140009362:	rex.WB
   140009363:	rex.WR
   140009364:	rex.RB
   140009365:	and    BYTE PTR [rdi+rbp*2+0x20],r14b
   14000936a:	(bad)  
   14000936b:	ins    BYTE PTR es:[rdi],dx
   14000936c:	ins    BYTE PTR es:[rdi],dx
   14000936d:	outs   dx,DWORD PTR ds:[rsi]
   14000936e:	movsxd esp,DWORD PTR [rcx+0x74]
   140009371:	and    BYTE PTR gs:[rsp+rcx*2+0x53],dl
   140009376:	and    BYTE PTR [rbx+0x6c],dh
   140009379:	outs   dx,DWORD PTR ds:[rsi]
   14000937a:	je     0x14000939c
   14000937c:	outs   dx,WORD PTR ds:[rsi]
   14000937e:	jb     0x1400093a0
   140009380:	imul   ebp,DWORD PTR [rbp+0x70],0x6f737265
   140009387:	outs   dx,BYTE PTR ds:[rsi]
   140009388:	(bad)  
   140009389:	je     0x1400093f4
   14000938b:	outs   dx,DWORD PTR ds:[rsi]
   14000938c:	outs   dx,BYTE PTR ds:[rsi]
   14000938d:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   140009391:	outs   dx,BYTE PTR gs:[rsi]
   140009393:	cmp    ah,BYTE PTR [rax]
   140009395:	and    eax,0xa64
   14000939a:	add    BYTE PTR [rax],al
   14000939c:	add    BYTE PTR [rax],al
   14000939e:	add    BYTE PTR [rax],al
   1400093a0:	rex.RX (bad) 
   1400093a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400093aa:	movsxd esi,DWORD PTR [rdx+0x65]
   1400093ad:	(bad)  
   1400093ae:	je     0x140009415
   1400093b0:	and    BYTE PTR [rdi+0x6f],dh
   1400093b3:	jb     0x140009420
   1400093b5:	gs jb  0x1400093d8
   1400093b8:	jo     0x140009429
   1400093ba:	outs   dx,DWORD PTR ds:[rsi]
   1400093bb:	ins    BYTE PTR es:[rdi],dx
   1400093bc:	cmp    ah,BYTE PTR [rax]
   1400093be:	and    eax,0xa64
   1400093c3:	add    BYTE PTR [rax],al
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    BYTE PTR [rbp+0x6e],dl
   1400093ca:	(bad)  
   1400093cb:	(bad)  
   1400093cc:	ins    BYTE PTR es:[rdi],dx
   1400093cd:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   1400093d2:	jae    0x140009439
   1400093d4:	je     0x14000944b
   1400093d6:	jo     0x1400093f8
   1400093d8:	rex.WB
   1400093d9:	rex.WRXB and BYTE PTR [r11+0x6f],r12b
   1400093dd:	ins    DWORD PTR es:[rdi],dx
   1400093de:	jo     0x14000944c
   1400093e0:	gs je  0x14000944c
   1400093e3:	outs   dx,DWORD PTR ds:[rsi]
   1400093e4:	outs   dx,BYTE PTR ds:[rsi]
   1400093e5:	and    BYTE PTR [rax+rbp*2+0x72],dh
   1400093e9:	gs (bad) 
   1400093eb:	and    BYTE PTR fs:[rax+0x6f],dh
   1400093ef:	outs   dx,DWORD PTR ds:[rsi]
   1400093f0:	ins    BYTE PTR es:[rdi],dx
   1400093f1:	and    BYTE PTR [rdi+0x62],ch
   1400093f4:	push   0x65
   1400093f6:	movsxd esi,DWORD PTR [rdx+rdi*1+0x20]
   1400093fa:	and    eax,0xa64
   1400093ff:	add    BYTE PTR [rdx+0x53],dl
   140009402:	rex.R push rbx
   140009404:	imul   eax,DWORD PTR [rdx],0x7b
   140009407:	(bad)
   14000940a:	cmc    
   14000940b:	rex.WRX adc QWORD PTR [rcx-0x68180d60],0x1807c
   140009416:	add    BYTE PTR [rax],al
   140009418:	ins    BYTE PTR es:[rdi],dx
   140009419:	jae    0x14000947c
   14000941b:	jae    0x140009490
   14000941d:	cs jo  0x140009484
   140009420:	(bad)  
	...
   140009439:	push   rbp
   14000943a:	rex.RXB push r8
   14000943c:	add    BYTE PTR [rax],dl
   14000943e:	add    BYTE PTR [rax],al
   140009440:	cmc    
   140009441:	(bad)  
   140009442:	add    BYTE PTR [rax],al
   140009444:	cs je  0x1400094ac
   140009447:	js     0x1400094bd
   140009449:	and    al,0x6c
   14000944b:	jo     0x14000947d
   14000944d:	xor    DWORD PTR [rbx+rsi*2+0x61],ebp
   140009451:	jae    0x1400094c6
   140009453:	cs gs js 0x1400094bc
   140009457:	and    DWORD PTR [rdx],esi
   140009459:	xor    BYTE PTR [rdi+0x70],bl
   14000945c:	jb     0x1400094c7
   14000945e:	(bad)  
   14000945f:	add    BYTE PTR [rax],al
   140009461:	(bad)  
   140009462:	add    BYTE PTR [rax],al
   140009464:	sbb    al,0x0
   140009466:	add    BYTE PTR [rax],al
   140009468:	cs je  0x1400094d0
   14000946b:	js     0x1400094e1
   14000946d:	and    al,0x6c
   14000946f:	jo     0x1400094a1
   140009471:	xor    al,0x6c
   140009473:	jae    0x1400094d6
   140009475:	jae    0x1400094ea
   140009477:	cs gs js 0x1400094e0
   14000947b:	and    DWORD PTR [rbx],esi
   14000947d:	xor    eax,0x6279685f
   140009482:	jb     0x1400094ed
   140009484:	fs (bad) 
   140009486:	outs   dx,DWORD PTR ds:[rsi]
   140009487:	outs   dx,DWORD PTR ds:[rsi]
   140009488:	je     0x14000948a
   14000948a:	add    BYTE PTR [rax],al
   14000948c:	and    BYTE PTR [rdi],dl
   14000948e:	add    BYTE PTR [rax],al
   140009490:	repnz (bad) 
   140009492:	add    BYTE PTR [rax],al
   140009494:	cs je  0x1400094fc
   140009497:	js     0x14000950d
   140009499:	and    al,0x6c
   14000949b:	jo     0x1400094cd
   14000949d:	xor    eax,0x7361736c
   1400094a2:	jae    0x1400094d2
   1400094a4:	gs js  0x14000950c
   1400094a7:	and    DWORD PTR [rax+rsi*1],esi
   1400094aa:	pop    rdi
   1400094ab:	jae    0x140009512
   1400094ad:	jb     0x140009525
   1400094af:	gs jb  0x140009521
   1400094b2:	outs   dx,BYTE PTR ds:[rsi]
   1400094b3:	ins    BYTE PTR es:[rdi],dx
   1400094b4:	jns    0x1400094b6
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	and    BYTE PTR [rdi],dh
   1400094ba:	add    BYTE PTR [rax],al
   1400094bc:	add    BYTE PTR [rax+rax*1],0x0
   1400094c0:	cs je  0x140009528
   1400094c3:	js     0x140009539
   1400094c5:	and    al,0x6d
   1400094c7:	outs   dx,BYTE PTR ds:[rsi]
   1400094c8:	add    BYTE PTR [rax],al
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	movabs al,ds:0x2e0000001200003b
   1400094d5:	je     0x14000953c
   1400094d7:	js     0x14000954d
   1400094d9:	and    al,0x6d
   1400094db:	outs   dx,BYTE PTR ds:[rsi]
   1400094dc:	and    al,0x30
   1400094de:	xor    BYTE PTR [rax],al
   1400094e0:	mov    ah,0x3b
   1400094e2:	add    BYTE PTR [rax],al
   1400094e4:	(bad)  
   1400094e5:	add    BYTE PTR [rax],al
   1400094e7:	add    BYTE PTR [rsi],ch
   1400094e9:	je     0x140009550
   1400094eb:	js     0x140009561
   1400094ed:	and    al,0x6e
   1400094ef:	jo     0x1400094f1
   1400094f1:	add    BYTE PTR [rax],al
   1400094f3:	add    ah,cl
   1400094f5:	cmp    eax,DWORD PTR [rax]
   1400094f7:	add    BYTE PTR [rbx+0x2e00000b],bl
   1400094fd:	je     0x140009564
   1400094ff:	js     0x140009575
   140009501:	and    al,0x7a
   140009503:	jns    0x140009505
   140009505:	add    BYTE PTR [rax],al
   140009507:	add    BYTE PTR [rax+0x47],ch
   14000950a:	add    BYTE PTR [rax],al
   14000950c:	int    0x12
   14000950e:	add    BYTE PTR [rax],al
   140009510:	cs je  0x140009578
   140009513:	js     0x140009589
   140009515:	and    al,0x7a
   140009517:	jp     0x140009519
   140009519:	add    BYTE PTR [rax],al
   14000951b:	add    BYTE PTR [rax],al
   14000951d:	(bad)  
   14000951e:	add    BYTE PTR [rax],al
   140009520:	adc    BYTE PTR [rax+rax*1],al
   140009523:	add    BYTE PTR [rsi],ch
   140009525:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000952d:	add    BYTE PTR [rax],al
   14000952f:	add    BYTE PTR [rax],dl
   140009531:	add    BYTE PTR fs:[rax],al
   140009534:	adc    BYTE PTR [rax],al
   140009536:	add    BYTE PTR [rax],al
   140009538:	xor    BYTE PTR cs:[rax],dh
   14000953b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000953e:	add    BYTE PTR [rax],al
   140009540:	and    BYTE PTR [rax+rax*1+0x0],ah
   140009544:	or     BYTE PTR [rax],al
   140009546:	add    BYTE PTR [rax],al
   140009548:	cs rex.XB push r10
   14000954b:	push   rsp
   14000954c:	and    al,0x58
   14000954e:	rex.XB
   14000954f:	add    BYTE PTR [r8],al
   140009552:	add    BYTE PTR [rax],al
   140009554:	sub    BYTE PTR [rax+rax*1+0x0],ah
   140009558:	or     BYTE PTR [rax],al
   14000955a:	add    BYTE PTR [rax],al
   14000955c:	cs rex.XB push r10
   14000955f:	push   rsp
   140009560:	and    al,0x58
   140009562:	rex.XB pop r10
   140009564:	add    BYTE PTR [rax],al
   140009566:	add    BYTE PTR [rax],al
   140009568:	xor    BYTE PTR [rax+rax*1+0x0],ah
   14000956c:	or     BYTE PTR [rax],al
   14000956e:	add    BYTE PTR [rax],al
   140009570:	cs rex.XB push r10
   140009573:	push   rsp
   140009574:	and    al,0x58
   140009576:	rex.WB
   140009577:	add    BYTE PTR [r8],al
   14000957a:	add    BYTE PTR [rax],al
   14000957c:	cmp    BYTE PTR [rax+rax*1+0x0],ah
   140009580:	or     BYTE PTR [rax],al
   140009582:	add    BYTE PTR [rax],al
   140009584:	cs rex.XB push r10
   140009587:	push   rsp
   140009588:	and    al,0x58
   14000958a:	rex.WB pop r10
   14000958c:	add    BYTE PTR [rax],al
   14000958e:	add    BYTE PTR [rax],al
   140009590:	rex
   140009591:	add    BYTE PTR fs:[rax],al
   140009594:	js     0x140009596
   140009596:	add    BYTE PTR [rax],al
   140009598:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   1400095a1:	add    BYTE PTR [rax],al
   1400095a3:	add    al,al
   1400095a5:	add    BYTE PTR fs:[rax],al
   1400095a8:	and    BYTE PTR [rip+0x722e0000],al        # 0x1b22e95ae
   1400095ae:	fs (bad) 
   1400095b0:	je     0x140009613
   1400095b2:	add    BYTE PTR [rax],al
   1400095b4:	loopne 0x14000961f
   1400095b6:	add    BYTE PTR [rax],al
   1400095b8:	lock sbb eax,0x722e0000
   1400095be:	fs (bad) 
   1400095c0:	je     0x140009623
   1400095c2:	and    al,0x30
   1400095c4:	add    BYTE PTR ss:[rax],al
   1400095c7:	add    al,dl
   1400095c9:	xchg   DWORD PTR [rax],eax
   1400095cb:	add    BYTE PTR [rsi],ch
   1400095cd:	or     al,0x0
   1400095cf:	add    BYTE PTR [rsi],ch
   1400095d1:	jb     0x140009637
   1400095d3:	(bad)  
   1400095d4:	je     0x140009637
   1400095d6:	and    al,0x7a
   1400095d8:	jp     0x1400095da
   1400095da:	add    BYTE PTR [rax],al
   1400095dc:	add    BYTE PTR [rax+rax*1+0x34000],dl
   1400095e3:	add    BYTE PTR [rsi],ch
   1400095e5:	jb     0x14000964b
   1400095e7:	(bad)  
   1400095e8:	je     0x14000964b
   1400095ea:	and    al,0x7a
   1400095ec:	jp     0x140009668
   1400095ee:	fs (bad) 
   1400095f0:	add    BYTE PTR [eax],al
   1400095f3:	add    BYTE PTR [rax-0x69],al
   1400095f6:	add    BYTE PTR [rax],al
   1400095f8:	mov    esp,0x2e000009
   1400095fd:	js     0x140009663
   1400095ff:	(bad)  
   140009600:	je     0x140009663
   140009602:	add    BYTE PTR [rax],al
   140009604:	add    BYTE PTR [rcx+0xad0000],ah
   14000960a:	add    BYTE PTR [rax],al
   14000960c:	cs gs fs (bad) 
   140009610:	je     0x140009673
   140009612:	add    BYTE PTR [rax],al
   140009614:	mov    al,0xa1
   140009616:	add    BYTE PTR [rax],al
   140009618:	jl     0x14000961b
   14000961a:	add    BYTE PTR [rax],al
   14000961c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140009625:	add    BYTE PTR [rax],al
   140009627:	add    BYTE PTR [rbx+riz*4],ch
   14000962a:	add    BYTE PTR [rax],al
   14000962c:	adc    al,0x0
   14000962e:	add    BYTE PTR [rax],al
   140009630:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140009639:	add    BYTE PTR [rax],al
   14000963b:	add    BYTE PTR [rax-0x5d],al
   14000963e:	add    BYTE PTR [rax],al
   140009640:	adc    BYTE PTR [rax+rax*1],al
   140009643:	add    BYTE PTR [rsi],ch
   140009645:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000964d:	add    BYTE PTR [rax],al
   14000964f:	add    BYTE PTR [rax-0x59],dl
   140009652:	add    BYTE PTR [rax],al
   140009654:	push   rax
   140009655:	or     eax,DWORD PTR [rax]
   140009657:	add    BYTE PTR [rsi],ch
   140009659:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140009661:	add    BYTE PTR [rax],al
   140009663:	add    BYTE PTR [rax],al
   140009665:	rol    BYTE PTR [rax],0x0
   140009668:	adc    BYTE PTR [rax],al
   14000966a:	add    BYTE PTR [rax],al
   14000966c:	cs fs (bad) 
   14000966f:	je     0x1400096d2
   140009671:	add    BYTE PTR [rax],al
   140009673:	add    BYTE PTR [rax],dl
   140009675:	rol    BYTE PTR [rax],0x0
   140009678:	add    al,0x0
   14000967a:	add    BYTE PTR [rax],al
   14000967c:	cs fs (bad) 
   14000967f:	je     0x1400096e2
   140009681:	and    al,0x30
   140009683:	add    BYTE PTR ss:[rax],al
   140009686:	add    BYTE PTR [rax],al
   140009688:	sbb    al,al
   14000968a:	add    BYTE PTR [rax],al
   14000968c:	and    al,0x0
   14000968e:	add    BYTE PTR [rax],al
   140009690:	cs fs (bad) 
   140009693:	je     0x1400096f6
   140009695:	and    al,0x64
   140009697:	imul   esi,DWORD PTR [rax],0x36
   14000969a:	add    BYTE PTR [rax],al
   14000969c:	rex rol BYTE PTR [rax],0x0
   1400096a0:	pop    rax
   1400096a1:	add    BYTE PTR [rax],al
   1400096a3:	add    BYTE PTR [rsi],ch
   1400096a5:	fs (bad) 
   1400096a7:	je     0x14000970a
   1400096a9:	and    al,0x7a
   1400096ab:	jp     0x1400096ad
   1400096ad:	add    BYTE PTR [rax],al
   1400096af:	add    BYTE PTR [rax-0x7fffff40],ah
   1400096b5:	(bad)  
   1400096b6:	add    BYTE PTR [rax],al
   1400096b8:	cs (bad) 
   1400096bb:	jae    0x1400096bd
   1400096bd:	add    BYTE PTR [rax],al
   1400096bf:	add    BYTE PTR [rax],ah
   1400096c1:	mov    DWORD PTR [rax],0x1000
   1400096c7:	add    BYTE PTR [rsi],ch
   1400096c9:	(bad)  
   1400096cb:	jae    0x1400096f1
   1400096cd:	xor    BYTE PTR [rsi],dh
   1400096cf:	add    BYTE PTR [rax],dh
   1400096d1:	mov    DWORD PTR [rax],0x4800
   1400096d7:	add    BYTE PTR [rsi],ch
   1400096d9:	(bad)  
   1400096db:	jae    0x140009701
   1400096dd:	imul   esi,DWORD PTR fs:[rax],0x31
   1400096e1:	add    BYTE PTR [rax],al
   1400096e3:	add    BYTE PTR [rax-0x39],bh
   1400096e6:	add    BYTE PTR [rax],al
   1400096e8:	cmp    BYTE PTR [rax],al
   1400096ea:	add    BYTE PTR [rax],al
   1400096ec:	cs (bad) 
   1400096ef:	jae    0x140009715
   1400096f1:	imul   esi,DWORD PTR fs:[rax],0x36
   1400096f5:	add    BYTE PTR [rax],al
   1400096f7:	add    BYTE PTR [rax+0x80000c7],dh
   1400096fd:	add    BYTE PTR [rax],al
   1400096ff:	add    BYTE PTR [rsi],ch
   140009701:	(bad)  
   140009703:	jae    0x140009729
   140009705:	jp     0x140009781
   140009707:	add    BYTE PTR [rax],al
   140009709:	rol    BYTE PTR [rax],1
   14000970b:	add    BYTE PTR [rdi+rax*1+0x0],al
   14000970f:	add    BYTE PTR [rsi],ch
   140009711:	jo     0x140009777
   140009713:	(bad)  
   140009714:	je     0x140009777
   140009716:	add    BYTE PTR [rax],al
   140009718:	add    al,ah
   14000971a:	add    BYTE PTR [rax],al
   14000971c:	movabs al,ds:0x637273722e000000
   140009725:	and    al,0x30
   140009727:	xor    DWORD PTR [rax],eax
   140009729:	add    BYTE PTR [rax],al
   14000972b:	add    BYTE PTR [rax+0x600000e0],ah
   140009731:	(bad)  
   140009732:	add    BYTE PTR [rax],al
   140009734:	cs jb  0x1400097aa
   140009737:	jb     0x14000979c
   140009739:	and    al,0x30
   14000973b:	xor    al,BYTE PTR [rax]
   14000973d:	add    BYTE PTR [rax],al
   14000973f:	add    BYTE PTR [rcx],al
   140009741:	or     al,BYTE PTR [rax+rax*1]
   140009744:	or     dh,BYTE PTR [rsi+rax*1]
   140009747:	add    BYTE PTR [rdx],cl
   140009749:	xor    al,BYTE PTR [rsi]
   14000974b:	jo     0x14000974e
   14000974d:	or     al,BYTE PTR [rax+rax*1]
   140009750:	or     dh,BYTE PTR [rsi+rax*1]
   140009753:	add    BYTE PTR [rdx],cl
   140009755:	xor    al,BYTE PTR [rsi]
   140009757:	jo     0x14000977a
   140009759:	add    BYTE PTR [rax],al
   14000975b:	add    BYTE PTR [rax+0x10],ah
   14000975e:	add    BYTE PTR [rax],al
   140009760:	movabs ds:0x10000974c000010,eax
   140009769:	sbb    cl,BYTE PTR [rdx]
   14000976b:	add    BYTE PTR [rdx],bl
   14000976d:	je     0x140009778
   14000976f:	add    BYTE PTR [rdx],bl
   140009771:	or     BYTE PTR fs:[rax],al
   140009774:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140009778:	sbb    dh,BYTE PTR [rsi+rax*1]
   14000977b:	add    BYTE PTR [rdx],bl
   14000977d:	xor    dl,BYTE PTR [rsi]
   14000977f:	loopne 0x140009782
   140009781:	(bad)  
   140009782:	add    al,BYTE PTR [rax]
   140009784:	(bad)  
   140009785:	xor    al,BYTE PTR [rdx]
   140009787:	xor    BYTE PTR [rcx],al
   140009789:	sbb    cl,BYTE PTR [rdx]
   14000978b:	add    BYTE PTR [rdx],bl
   14000978d:	je     0x14000979c
   14000978f:	add    BYTE PTR [rdx],bl
   140009791:	fs or  al,0x0
   140009794:	sbb    dl,BYTE PTR [rbx+rcx*1+0x0]
   140009798:	sbb    dh,BYTE PTR [rdx+rcx*1]
   14000979b:	add    BYTE PTR [rdx],bl
   14000979d:	jb     0x1400097b5
   14000979f:	loopne 0x1400097ba
   1400097a1:	sbb    eax,DWORD PTR [rbx]
   1400097a3:	add    BYTE PTR [rcx],cl
   1400097a5:	add    DWORD PTR [rax+0x0],ecx
   1400097a8:	add    ah,BYTE PTR [rax+0x0]
   1400097ab:	add    ah,dh
   1400097ad:	cmp    al,BYTE PTR [rax]
   1400097af:	add    BYTE PTR [rax],ah
   1400097b1:	add    al,BYTE PTR [rax]
   1400097b3:	add    BYTE PTR [rcx],ah
   1400097b5:	or     BYTE PTR [rdx],al
   1400097b7:	add    BYTE PTR [rax],cl
   1400097b9:	xor    al,0x47
   1400097bb:	add    BYTE PTR [rax],dl
   1400097bd:	adc    eax,DWORD PTR [rax]
   1400097bf:	add    BYTE PTR [rax+0x13],dl
   1400097c2:	add    BYTE PTR [rax],al
   1400097c4:	movabs al,ds:0x1000000021000097
   1400097cd:	adc    eax,DWORD PTR [rax]
   1400097cf:	add    BYTE PTR [rax+0x13],dl
   1400097d2:	add    BYTE PTR [rax],al
   1400097d4:	movabs al,ds:0x20021000097
   1400097dd:	xor    al,0x47
   1400097df:	add    BYTE PTR [rax],dl
   1400097e1:	adc    eax,DWORD PTR [rax]
   1400097e3:	add    BYTE PTR [rax+0x13],dl
   1400097e6:	add    BYTE PTR [rax],al
   1400097e8:	movabs al,ds:0x1000000021000097
   1400097f1:	adc    eax,DWORD PTR [rax]
   1400097f3:	add    BYTE PTR [rax+0x13],dl
   1400097f6:	add    BYTE PTR [rax],al
   1400097f8:	movabs al,ds:0x1400081401000097
   140009801:	or     BYTE PTR fs:[rax],al
   140009804:	adc    al,0x54
   140009806:	(bad)  
   140009807:	add    BYTE PTR [rsp+rsi*1],dl
   14000980a:	(bad)  
   14000980b:	add    BYTE PTR [rdx+rsi*1],dl
   14000980e:	adc    BYTE PTR [rax+0x1],dh
   140009811:	add    al,0x1
   140009813:	add    BYTE PTR [rdx+rax*8],al
   140009816:	add    BYTE PTR [rax],al
   140009818:	add    DWORD PTR [rdi],ecx
   14000981a:	(bad)  
   14000981b:	add    BYTE PTR [rdi],cl
   14000981d:	fs (bad) 
   14000981f:	add    BYTE PTR [rdi],cl
   140009821:	xor    al,0x6
   140009823:	add    BYTE PTR [rdi],cl
   140009825:	xor    cl,BYTE PTR [rbx]
   140009827:	jo     0x14000984a
   140009829:	add    BYTE PTR [rax],al
   14000982b:	add    BYTE PTR [rax-0x1fffffec],ah
   140009831:	adc    al,0x0
   140009833:	add    BYTE PTR [rax],bl
   140009835:	cwde   
   140009836:	add    BYTE PTR [rax],al
   140009838:	add    DWORD PTR [rdx],ecx
   14000983a:	add    al,0x0
   14000983c:	or     dh,BYTE PTR [rbx+rcx*1]
   14000983f:	add    BYTE PTR [rdx],cl
   140009841:	jb     0x140009849
   140009843:	(bad)  
   140009844:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405984c
   14000984a:	or     al,BYTE PTR [rax]
   14000984c:	(bad)  
   14000984d:	cmp    al,0x0
   14000984f:	add    BYTE PTR [rdi+0x5800003c],ch
   140009855:	cwde   
   140009856:	add    BYTE PTR [rax],al
   140009858:	and    DWORD PTR [rax],eax
   14000985a:	add    BYTE PTR [rax],al
   14000985c:	lock adc al,0x0
   14000985f:	add    BYTE PTR [rdx*1-0x67c80000],ch
   140009866:	add    BYTE PTR [rax],al
   140009868:	add    DWORD PTR [rdx],ecx
   14000986a:	add    al,BYTE PTR [rax]
   14000986c:	or     al,BYTE PTR [rcx]
   14000986e:	adc    eax,DWORD PTR [rax]
   140009870:	and    DWORD PTR [rax],eax
   140009872:	add    BYTE PTR [rax],al
   140009874:	rcl    BYTE PTR [rip+0x16210000],0x0        # 0x15621987b
   14000987b:	add    BYTE PTR [rax-0x68],ch
   14000987e:	add    BYTE PTR [rax],al
   140009880:	add    DWORD PTR [rdi],ecx
   140009882:	(bad)  
   140009883:	add    BYTE PTR [rdi],cl
   140009885:	fs (bad) 
   140009887:	add    BYTE PTR [rdi],cl
   140009889:	xor    al,0x6
   14000988b:	add    BYTE PTR [rdi],cl
   14000988d:	xor    cl,BYTE PTR [rbx]
   14000988f:	jo     0x140009892
   140009891:	(bad)  
   140009892:	add    al,BYTE PTR [rax]
   140009894:	(bad)  
   140009895:	xor    al,BYTE PTR [rdx]
   140009897:	xor    BYTE PTR [rcx],ah
   140009899:	add    BYTE PTR [rax],al
   14000989b:	add    BYTE PTR [rax],dh
   14000989d:	(bad)  
   14000989e:	add    BYTE PTR [rax],al
   1400098a0:	repnz sbb BYTE PTR [rax],al
   1400098a3:	add    BYTE PTR [rax+0x1000098],dl
   1400098a9:	or     al,BYTE PTR [rax+rax*1]
   1400098ac:	or     dh,BYTE PTR [rdi+rax*1]
   1400098af:	add    BYTE PTR [rdx],cl
   1400098b1:	xor    al,BYTE PTR [rsi]
   1400098b3:	(bad)  
   1400098b4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40598bc
   1400098ba:	(bad)  
   1400098bb:	add    BYTE PTR [rax],al
   1400098bd:	sbb    DWORD PTR [rax],eax
   1400098bf:	add    BYTE PTR [rip+0xffffffffa8000019],bl        # 0xe80098de
   1400098c5:	cwde   
   1400098c6:	add    BYTE PTR [rax],al
   1400098c8:	and    DWORD PTR [rax],eax
   1400098ca:	add    BYTE PTR [rax],al
   1400098cc:	add    BYTE PTR [rcx],bl
   1400098ce:	add    BYTE PTR [rax],al
   1400098d0:	sbb    eax,0xa8000019
   1400098d5:	cwde   
   1400098d6:	add    BYTE PTR [rax],al
   1400098d8:	and    DWORD PTR [rax],eax
   1400098da:	add    al,BYTE PTR [rax]
   1400098dc:	add    BYTE PTR [rsi+rax*1+0x0],dh
   1400098e0:	add    BYTE PTR [rcx],bl
   1400098e2:	add    BYTE PTR [rax],al
   1400098e4:	sbb    eax,0xa8000019
   1400098e9:	cwde   
   1400098ea:	add    BYTE PTR [rax],al
   1400098ec:	add    DWORD PTR [rdx],ecx
   1400098ee:	add    al,0x0
   1400098f0:	or     dh,BYTE PTR [rdi+rax*1]
   1400098f3:	add    BYTE PTR [rdx],cl
   1400098f5:	xor    al,BYTE PTR [rsi]
   1400098f7:	(bad)  
   1400098f8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4059900
   1400098fe:	(bad)  
   1400098ff:	add    BYTE PTR [rax+0x19],dh
   140009902:	add    BYTE PTR [rax],al
   140009904:	lea    ebx,[rcx]
   140009906:	add    BYTE PTR [rax],al
   140009908:	in     al,dx
   140009909:	cwde   
   14000990a:	add    BYTE PTR [rax],al
   14000990c:	and    DWORD PTR [rax],eax
   14000990e:	add    BYTE PTR [rax],al
   140009910:	jo     0x14000992b
   140009912:	add    BYTE PTR [rax],al
   140009914:	lea    ebx,[rcx]
   140009916:	add    BYTE PTR [rax],al
   140009918:	in     al,dx
   140009919:	cwde   
   14000991a:	add    BYTE PTR [rax],al
   14000991c:	and    DWORD PTR [rax],eax
   14000991e:	add    al,BYTE PTR [rax]
   140009920:	add    BYTE PTR [rsi+rax*1+0x0],dh
   140009924:	jo     0x14000993f
   140009926:	add    BYTE PTR [rax],al
   140009928:	lea    ebx,[rcx]
   14000992a:	add    BYTE PTR [rax],al
   14000992c:	in     al,dx
   14000992d:	cwde   
   14000992e:	add    BYTE PTR [rax],al
   140009930:	add    DWORD PTR [rcx+rax*1],eax
   140009933:	add    BYTE PTR [rdx+rax*2],al
   140009936:	add    BYTE PTR [rax],al
   140009938:	and    DWORD PTR [rax],eax
   14000993a:	add    BYTE PTR [rax],al
   14000993c:	loopne 0x140009957
   14000993e:	add    BYTE PTR [rax],al
   140009940:	(bad)  
   140009941:	sbb    al,BYTE PTR [rax]
   140009943:	add    BYTE PTR [rax],dh
   140009945:	cdq    
   140009946:	add    BYTE PTR [rax],al
   140009948:	add    DWORD PTR [rcx],ecx
   14000994a:	add    eax,DWORD PTR [rax]
   14000994c:	or     DWORD PTR [rcx],eax
   14000994e:	adc    al,0x0
   140009950:	add    dh,BYTE PTR [rax]
   140009952:	add    BYTE PTR [rax],al
   140009954:	and    DWORD PTR [rax],eax
   140009956:	add    BYTE PTR [rax],al
   140009958:	sbb    al,BYTE PTR [rax]
   14000995b:	add    BYTE PTR [rdx+0x1b],dl
   14000995e:	add    BYTE PTR [rax],al
   140009960:	cqo    
   140009962:	add    BYTE PTR [rax],al
   140009964:	add    DWORD PTR [rsi],eax
   140009966:	add    al,BYTE PTR [rax]
   140009968:	(bad)  
   140009969:	rol    BYTE PTR [rdx],cl
   14000996b:	xor    BYTE PTR [rcx],ah
   14000996d:	or     BYTE PTR [rdx],al
   14000996f:	add    BYTE PTR [rax],cl
   140009971:	je     0x140009983
   140009973:	add    BYTE PTR [rax+0x1b],ah
   140009976:	add    BYTE PTR [rax],al
   140009978:	jle    0x140009995
   14000997a:	add    BYTE PTR [rax],al
   14000997c:	fs cdq 
   14000997e:	add    BYTE PTR [rax],al
   140009980:	and    DWORD PTR [rax],eax
   140009982:	add    BYTE PTR [rax],al
   140009984:	(bad)  
   140009985:	sbb    eax,DWORD PTR [rax]
   140009987:	add    BYTE PTR [rsi+0x1b],bh
   14000998a:	add    BYTE PTR [rax],al
   14000998c:	fs cdq 
   14000998e:	add    BYTE PTR [rax],al
   140009990:	and    DWORD PTR [rax],eax
   140009992:	add    BYTE PTR [rax],al
   140009994:	(bad)  
   140009995:	sbb    eax,DWORD PTR [rax]
   140009997:	add    BYTE PTR [rsi+0x1b],bh
   14000999a:	add    BYTE PTR [rax],al
   14000999c:	fs cdq 
   14000999e:	add    BYTE PTR [rax],al
   1400099a0:	and    DWORD PTR [rax],eax
   1400099a2:	add    al,BYTE PTR [rax]
   1400099a4:	add    BYTE PTR [rax+rdx*1+0x0],dh
   1400099a8:	(bad)  
   1400099a9:	(bad)  
   1400099aa:	add    BYTE PTR [rax],al
   1400099ac:	add    eax,DWORD PTR [rax+0x0]
   1400099af:	add    BYTE PTR [rax+0x1000099],dl
   1400099b5:	add    al,0x1
   1400099b7:	add    BYTE PTR [rdx+rax*2],al
   1400099ba:	add    BYTE PTR [rax],al
   1400099bc:	sbb    DWORD PTR [rax],esp
   1400099be:	add    eax,0x1b341200
   1400099c3:	add    BYTE PTR [rdx],dl
   1400099c5:	add    DWORD PTR [rsi],edx
   1400099c7:	add    BYTE PTR [rsi],al
   1400099c9:	push   rax
   1400099ca:	add    BYTE PTR [rax],al
   1400099cc:	hlt    
   1400099cd:	cmp    al,BYTE PTR [rax]
   1400099cf:	add    BYTE PTR [rax+0x21000000],ah
   1400099d5:	or     BYTE PTR [rdx],al
   1400099d7:	add    BYTE PTR [rax],cl
   1400099d9:	in     al,0x1a
   1400099db:	add    BYTE PTR [rax],dh
   1400099dd:	sbb    eax,0x1d540000
   1400099e2:	add    BYTE PTR [rax],al
   1400099e4:	mov    esp,0x21000099
   1400099e9:	sbb    eax,0x741d0004
   1400099ee:	sbb    DWORD PTR [rax],eax
   1400099f0:	or     BYTE PTR [rax+rbx*1+0x0],ah
   1400099f4:	push   rsp
   1400099f5:	sbb    eax,0x1daf0000
   1400099fa:	add    BYTE PTR [rax],al
   1400099fc:	(bad)  
   1400099fd:	cdq    
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	and    DWORD PTR [rax],eax
   140009a02:	add    BYTE PTR [rax],al
   140009a04:	push   rsp
   140009a05:	sbb    eax,0x1daf0000
   140009a0a:	add    BYTE PTR [rax],al
   140009a0c:	(bad)  
   140009a0d:	cdq    
   140009a0e:	add    BYTE PTR [rax],al
   140009a10:	and    DWORD PTR [rax],eax
   140009a12:	add    BYTE PTR [rax],al
   140009a14:	xor    BYTE PTR [rip+0x1d540000],bl        # 0x15d549a1a
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	mov    esp,0x21000099
   140009a21:	add    BYTE PTR [rsi],al
   140009a23:	add    BYTE PTR [rax],al
   140009a25:	in     al,0x1a
   140009a27:	add    BYTE PTR [rax],al
   140009a29:	je     0x140009a44
   140009a2b:	add    BYTE PTR [rax],al
   140009a2d:	sbb    BYTE PTR fs:[rax],al
   140009a30:	xor    BYTE PTR [rip+0x1d540000],bl        # 0x15d549a36
   140009a36:	add    BYTE PTR [rax],al
   140009a38:	mov    esp,0x21000099
   140009a3d:	add    BYTE PTR [rax],al
   140009a3f:	add    BYTE PTR [rax],dh
   140009a41:	sbb    eax,0x1d540000
   140009a46:	add    BYTE PTR [rax],al
   140009a48:	mov    esp,0x1000099
   140009a4d:	clts   
   140009a4f:	add    BYTE PTR [rdi],cl
   140009a51:	or     BYTE PTR fs:[rax],al
   140009a54:	sysenter 
   140009a56:	(bad)  
   140009a57:	add    BYTE PTR [rdi],cl
   140009a59:	xor    cl,BYTE PTR [rbx]
   140009a5b:	jo     0x140009a5e
   140009a5d:	adc    al,0x8
   140009a5f:	add    BYTE PTR [rsp+riz*2],dl
   140009a62:	or     BYTE PTR [rax],al
   140009a64:	adc    al,0x54
   140009a66:	(bad)  
   140009a67:	add    BYTE PTR [rsp+rsi*1],dl
   140009a6a:	(bad)  
   140009a6b:	add    BYTE PTR [rdx+rsi*1],dl
   140009a6e:	adc    BYTE PTR [rax+0x21],dh
   140009a71:	add    BYTE PTR [rax],al
   140009a73:	add    BYTE PTR [rax+0x6f00001f],al
   140009a79:	and    BYTE PTR [rax],al
   140009a7b:	add    BYTE PTR [rdx+rbx*4+0x0],bl
   140009a7f:	add    BYTE PTR [rcx],al
   140009a81:	(bad)  
   140009a82:	add    al,BYTE PTR [rax]
   140009a84:	(bad)  
   140009a85:	jb     0x140009a89
   140009a87:	jo     0x140009aaa
   140009a89:	sbb    eax,0x641d0006
   140009a8e:	(bad)  
   140009a8f:	add    BYTE PTR [rdi],cl
   140009a91:	push   rsp
   140009a92:	(bad)  
   140009a93:	add    BYTE PTR [rip+0xffffffff80000d34],al        # 0xc000a7cd
   140009a99:	and    BYTE PTR [rax],al
   140009a9b:	add    BYTE PTR [rsi-0x7fffffe0],al
   140009aa1:	(bad)  
   140009aa2:	add    BYTE PTR [rax],al
   140009aa4:	and    DWORD PTR [rax],eax
   140009aa6:	add    al,BYTE PTR [rax]
   140009aa8:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140009aac:	and    BYTE PTR [rax],0x0
   140009aaf:	add    BYTE PTR [rsi-0x7fffffe0],al
   140009ab5:	(bad)  
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	and    DWORD PTR [rax],eax
   140009aba:	add    BYTE PTR [rax],al
   140009abc:	and    BYTE PTR [rax],0x0
   140009abf:	add    BYTE PTR [rsi-0x7fffffe0],al
   140009ac5:	(bad)  
   140009ac6:	add    BYTE PTR [rax],al
   140009ac8:	and    DWORD PTR [rax],eax
   140009aca:	(bad)  
   140009acb:	add    BYTE PTR [rax],al
   140009acd:	fs (bad) 
   140009acf:	add    BYTE PTR [rax],al
   140009ad1:	push   rsp
   140009ad2:	(bad)  
   140009ad3:	add    BYTE PTR [rax],al
   140009ad5:	xor    al,0xd
   140009ad7:	add    BYTE PTR [rax-0x79ffffe0],al
   140009add:	and    BYTE PTR [rax],al
   140009adf:	add    BYTE PTR [rax+0x2100009a],al
   140009ae5:	add    BYTE PTR [rdx],al
   140009ae7:	add    BYTE PTR [rax],al
   140009ae9:	fs (bad) 
   140009aeb:	add    BYTE PTR [rax-0x79ffffe0],al
   140009af1:	and    BYTE PTR [rax],al
   140009af3:	add    BYTE PTR [rax+0x2100009a],al
   140009af9:	add    BYTE PTR [rax],al
   140009afb:	add    BYTE PTR [rax-0x79ffffe0],al
   140009b01:	and    BYTE PTR [rax],al
   140009b03:	add    BYTE PTR [rax+0x100009a],al
   140009b09:	or     al,BYTE PTR [rax+rax*1]
   140009b0c:	or     ah,BYTE PTR [rbx+rcx*1+0x0]
   140009b10:	or     dl,BYTE PTR [rdx+0x6]
   140009b13:	jo     0x140009b36
   140009b15:	add    eax,0x34050002
   140009b1a:	or     BYTE PTR [rax],al
   140009b1c:	adc    BYTE PTR [rdx],ah
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	js     0x140009b44
   140009b22:	add    BYTE PTR [rax],al
   140009b24:	or     BYTE PTR [rbx+0x210000],bl
   140009b2a:	add    BYTE PTR [rax],al
   140009b2c:	adc    BYTE PTR [rdx],ah
   140009b2e:	add    BYTE PTR [rax],al
   140009b30:	js     0x140009b54
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	or     BYTE PTR [rbx+0x210000],bl
   140009b3a:	add    al,BYTE PTR [rax]
   140009b3c:	add    BYTE PTR [rax+rcx*1],dh
   140009b3f:	add    BYTE PTR [rax],dl
   140009b41:	and    al,BYTE PTR [rax]
   140009b43:	add    BYTE PTR [rax+0x22],bh
   140009b46:	add    BYTE PTR [rax],al
   140009b48:	or     BYTE PTR [rbx+0x210000],bl
   140009b4e:	add    al,BYTE PTR [rax]
   140009b50:	add    BYTE PTR [rax+rcx*1],dh
   140009b53:	add    BYTE PTR [rax],dl
   140009b55:	and    al,BYTE PTR [rax]
   140009b57:	add    BYTE PTR [rax+0x22],bh
   140009b5a:	add    BYTE PTR [rax],al
   140009b5c:	or     BYTE PTR [rbx+0x210000],bl
   140009b62:	add    BYTE PTR [rax],al
   140009b64:	adc    BYTE PTR [rdx],ah
   140009b66:	add    BYTE PTR [rax],al
   140009b68:	js     0x140009b8c
   140009b6a:	add    BYTE PTR [rax],al
   140009b6c:	or     BYTE PTR [rbx+0x12010000],bl
   140009b72:	or     BYTE PTR [rax],al
   140009b74:	adc    dl,BYTE PTR [rcx+rcx*1+0x0]
   140009b78:	adc    dh,BYTE PTR [rax+rcx*1]
   140009b7b:	add    BYTE PTR [rdx],dl
   140009b7d:	xor    cl,BYTE PTR [rsi]
   140009b7f:	loopne 0x140009b8d
   140009b81:	jo     0x140009b8e
   140009b83:	(bad)  
   140009b84:	and    DWORD PTR [rax],eax
   140009b86:	add    BYTE PTR [rax],al
   140009b88:	rex and eax,DWORD PTR [rax]
   140009b8b:	add    BYTE PTR [rbp+0x24],ch
   140009b8e:	add    BYTE PTR [rax],al
   140009b90:	jo     0x140009b2d
   140009b92:	add    BYTE PTR [rax],al
   140009b94:	add    DWORD PTR [rax+rcx*1],edx
   140009b97:	add    BYTE PTR [rsp+riz*2],dl
   140009b9a:	or     BYTE PTR [rax],al
   140009b9c:	adc    al,0x54
   140009b9e:	(bad)  
   140009b9f:	add    BYTE PTR [rsp+rsi*1],dl
   140009ba2:	(bad)  
   140009ba3:	add    BYTE PTR [rdx+rsi*1],dl
   140009ba6:	adc    BYTE PTR [rax+0x21],dh
   140009ba9:	add    BYTE PTR [rax],al
   140009bab:	add    al,dh
   140009bad:	and    al,0x0
   140009baf:	add    BYTE PTR [rbp+riz*1-0x646c0000],bh
   140009bb6:	add    BYTE PTR [rax],al
   140009bb8:	add    DWORD PTR [rsi],eax
   140009bba:	add    al,BYTE PTR [rax]
   140009bbc:	(bad)  
   140009bbd:	xor    al,BYTE PTR [rdx]
   140009bbf:	push   rax
   140009bc0:	and    DWORD PTR [rdx],ecx
   140009bc2:	add    al,0x0
   140009bc4:	or     dh,BYTE PTR [rax+rcx*1+0x0]
   140009bc8:	add    eax,0xd0000634
   140009bcd:	and    eax,0x25ee0000
   140009bd2:	add    BYTE PTR [rax],al
   140009bd4:	mov    eax,0x2100009b
   140009bd9:	add    eax,0x64050002
   140009bde:	(bad)  
   140009bdf:	add    dh,ch
   140009be1:	and    eax,0x265a0000
   140009be6:	add    BYTE PTR [rax],al
   140009be8:	rcr    BYTE PTR [rbx+0x210000],0x0
   140009bef:	add    dh,ch
   140009bf1:	and    eax,0x265a0000
   140009bf6:	add    BYTE PTR [rax],al
   140009bf8:	rcr    BYTE PTR [rbx+0x210000],0x0
   140009bff:	add    al,dl
   140009c01:	and    eax,0x25ee0000
   140009c06:	add    BYTE PTR [rax],al
   140009c08:	mov    eax,0x2100009b
   140009c0d:	add    BYTE PTR [rax],al
   140009c0f:	add    al,dl
   140009c11:	and    eax,0x25ee0000
   140009c16:	add    BYTE PTR [rax],al
   140009c18:	mov    eax,0x2100009b
   140009c1d:	add    BYTE PTR [rax+rax*1],al
   140009c20:	add    BYTE PTR [rax+rcx*1+0x0],dh
   140009c24:	add    BYTE PTR [rsi+rax*1],dh
   140009c27:	add    ah,cl
   140009c29:	rex.XB add BYTE PTR [r8],al
   140009c2c:	add    BYTE PTR [rax+rax*1+0x0],al
   140009c30:	or     al,0x9c
   140009c32:	add    BYTE PTR [rax],al
   140009c34:	and    DWORD PTR [rax],eax
   140009c36:	(bad)  
   140009c37:	add    BYTE PTR [rax],al
   140009c39:	je     0x140009c43
   140009c3b:	add    BYTE PTR [rax],al
   140009c3d:	fs (bad) 
   140009c3f:	add    BYTE PTR [rax],al
   140009c41:	xor    al,0x6
   140009c43:	add    ah,cl
   140009c45:	rex.XB add BYTE PTR [r8],al
   140009c48:	add    BYTE PTR [rax+rax*1+0x0],al
   140009c4c:	or     al,0x9c
   140009c4e:	add    BYTE PTR [rax],al
   140009c50:	add    DWORD PTR [rcx],ecx
   140009c52:	add    DWORD PTR [rax],eax
   140009c54:	or     edx,eax
   140009c56:	add    BYTE PTR [rax],al
   140009c58:	and    DWORD PTR [rax],eax
   140009c5a:	add    BYTE PTR [rax],al
   140009c5c:	movabs al,ds:0x5000002814000027
   140009c65:	pushf  
   140009c66:	add    BYTE PTR [rax],al
   140009c68:	sbb    DWORD PTR [rbx],esp
   140009c6a:	or     BYTE PTR [rax],al
   140009c6c:	adc    al,0x64
   140009c6e:	or     eax,0xc541400
   140009c73:	add    BYTE PTR [rsp+rsi*1],dl
   140009c76:	or     eax,DWORD PTR [rax]
   140009c78:	adc    al,0x72
   140009c7a:	adc    BYTE PTR [rax-0xc],dh
   140009c7d:	cmp    al,BYTE PTR [rax]
   140009c7f:	add    BYTE PTR [rax],bh
   140009c81:	add    BYTE PTR [rax],al
   140009c83:	add    BYTE PTR [rcx],ah
   140009c85:	add    eax,0xe4050002
   140009c8a:	or     al,BYTE PTR [rax]
   140009c8c:	and    BYTE PTR [rax],ch
   140009c8e:	add    BYTE PTR [rax],al
   140009c90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009c91:	sub    BYTE PTR [rax],al
   140009c93:	add    BYTE PTR [rax-0x64],ch
   140009c96:	add    BYTE PTR [rax],al
   140009c98:	and    DWORD PTR [rax],eax
   140009c9a:	add    BYTE PTR [rax],al
   140009c9c:	and    BYTE PTR [rax],ch
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009ca1:	sub    BYTE PTR [rax],al
   140009ca3:	add    BYTE PTR [rax-0x64],ch
   140009ca6:	add    BYTE PTR [rax],al
   140009ca8:	and    DWORD PTR [rax],eax
   140009caa:	add    BYTE PTR [rax],al
   140009cac:	and    BYTE PTR [rax],ch
   140009cae:	add    BYTE PTR [rax],al
   140009cb0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009cb1:	sub    BYTE PTR [rax],al
   140009cb3:	add    BYTE PTR [rax-0x64],ch
   140009cb6:	add    BYTE PTR [rax],al
   140009cb8:	and    DWORD PTR [rax],eax
   140009cba:	add    al,BYTE PTR [rax]
   140009cbc:	add    ah,ah
   140009cbe:	or     al,BYTE PTR [rax]
   140009cc0:	rex.WX
   140009cc1:	add    BYTE PTR [rax],r8b
   140009cc4:	push   rsp
   140009cc5:	add    BYTE PTR [rax],r8b
   140009cc8:	test   al,0x9c
   140009cca:	add    BYTE PTR [rax],al
   140009ccc:	add    DWORD PTR [rcx+rax*1],eax
   140009ccf:	add    BYTE PTR [rdx+rax*4],al
   140009cd2:	add    BYTE PTR [rax],al
   140009cd4:	and    DWORD PTR [rax],eax
   140009cd6:	add    BYTE PTR [rax],al
   140009cd8:	nop
   140009cd9:	sub    al,BYTE PTR [rax]
   140009cdb:	add    ah,bh
   140009cdd:	sub    al,BYTE PTR [rax]
   140009cdf:	add    ah,cl
   140009ce1:	pushf  
   140009ce2:	add    BYTE PTR [rax],al
   140009ce4:	add    DWORD PTR [rdx],ecx
   140009ce6:	add    al,0x0
   140009ce8:	or     dh,BYTE PTR [rsp+rcx*1]
   140009ceb:	add    BYTE PTR [rdx],cl
   140009ced:	jb     0x140009cf5
   140009cef:	jo     0x140009d12
   140009cf1:	add    BYTE PTR [rax],al
   140009cf3:	add    BYTE PTR [rax],dl
   140009cf5:	sub    eax,DWORD PTR [rax]
   140009cf7:	add    BYTE PTR [rdx],ch
   140009cf9:	sub    al,0x0
   140009cfb:	add    ah,ah
   140009cfd:	pushf  
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	sbb    DWORD PTR [rdx],ebp
   140009d02:	or     DWORD PTR [rax],eax
   140009d04:	sbb    al,0x74
   140009d06:	sub    eax,DWORD PTR [rax]
   140009d08:	sbb    al,0x64
   140009d0a:	sub    al,BYTE PTR [rax]
   140009d0c:	sbb    al,0x34
   140009d0e:	sub    DWORD PTR [rax],eax
   140009d10:	sbb    al,0x1
   140009d12:	add    BYTE PTR es:[rax],dl
   140009d15:	push   rax
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	hlt    
   140009d19:	cmp    al,BYTE PTR [rax]
   140009d1b:	add    BYTE PTR [rax],ah
   140009d1d:	add    DWORD PTR [rax],eax
   140009d1f:	add    BYTE PTR [rcx],bl
   140009d21:	sub    eax,0x341c0009
   140009d26:	data16 add BYTE PTR [rcx+rax*1],bl
   140009d2a:	pop    rsi
   140009d2b:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0a921
   140009d31:	rol    BYTE PTR [rdi],0x70
   140009d34:	(bad)  
   140009d35:	push   rax
   140009d36:	add    BYTE PTR [rax],al
   140009d38:	hlt    
   140009d39:	cmp    al,BYTE PTR [rax]
   140009d3b:	add    al,ah
   140009d3d:	add    al,BYTE PTR [rax]
   140009d3f:	add    BYTE PTR [rcx],ah
   140009d41:	or     BYTE PTR [rdx],al
   140009d43:	add    BYTE PTR [rax],cl
   140009d45:	fs add BYTE PTR gs:[rax+0x2f],ah
   140009d4a:	add    BYTE PTR [rax],al
   140009d4c:	pop    rsi
   140009d4d:	xor    BYTE PTR [rax],al
   140009d4f:	add    BYTE PTR [rax],ah
   140009d51:	popf   
   140009d52:	add    BYTE PTR [rax],al
   140009d54:	and    DWORD PTR [rax],eax
   140009d56:	add    BYTE PTR [rax],al
   140009d58:	(bad)  
   140009d59:	(bad)  
   140009d5a:	add    BYTE PTR [rax],al
   140009d5c:	pop    rsi
   140009d5d:	xor    BYTE PTR [rax],al
   140009d5f:	add    BYTE PTR [rax],ah
   140009d61:	popf   
   140009d62:	add    BYTE PTR [rax],al
   140009d64:	and    DWORD PTR [rax],eax
   140009d66:	add    BYTE PTR [rax],al
   140009d68:	(bad)  
   140009d69:	(bad)  
   140009d6a:	add    BYTE PTR [rax],al
   140009d6c:	pop    rsi
   140009d6d:	xor    BYTE PTR [rax],al
   140009d6f:	add    BYTE PTR [rax],ah
   140009d71:	popf   
   140009d72:	add    BYTE PTR [rax],al
   140009d74:	and    DWORD PTR [rax],eax
   140009d76:	add    al,BYTE PTR [rax]
   140009d78:	add    BYTE PTR [rbp+riz*2+0x0],ah
   140009d7c:	int3   
   140009d7d:	add    BYTE PTR [r8],r8b
   140009d80:	(bad)  
   140009d81:	add    BYTE PTR [r8],r8b
   140009d84:	fs popf 
   140009d86:	add    BYTE PTR [rax],al
   140009d88:	sbb    DWORD PTR [rax],esi
   140009d8a:	or     DWORD PTR [rax],eax
   140009d8c:	(bad)  
   140009d8d:	je     0x140009def
   140009d8f:	add    BYTE PTR [rdi],bl
   140009d91:	fs pop rdi
   140009d93:	add    BYTE PTR [rdi],bl
   140009d95:	xor    al,0x5e
   140009d97:	add    BYTE PTR [rdi],bl
   140009d99:	add    DWORD PTR [rax+rax*1+0x10],ebx
   140009d9d:	push   rax
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	hlt    
   140009da1:	cmp    al,BYTE PTR [rax]
   140009da3:	add    al,dl
   140009da5:	add    al,BYTE PTR [rax]
   140009da7:	add    BYTE PTR [rcx],ah
   140009da9:	add    BYTE PTR [rax],al
   140009dab:	add    al,dh
   140009dad:	xor    al,BYTE PTR [rax]
   140009daf:	add    al,al
   140009db1:	xor    al,0x0
   140009db3:	add    BYTE PTR [rax+0x1900009d],cl
   140009db9:	sbb    eax,DWORD PTR [rbx]
   140009dbb:	add    BYTE PTR [rcx],cl
   140009dbd:	add    DWORD PTR [rdx+0x0],ecx
   140009dc0:	add    dh,BYTE PTR [rax]
   140009dc2:	add    BYTE PTR [rax],al
   140009dc4:	hlt    
   140009dc5:	cmp    al,BYTE PTR [rax]
   140009dc7:	add    BYTE PTR [rax+0x2],al
   140009dca:	add    BYTE PTR [rax],al
   140009dcc:	and    DWORD PTR [rax],eax
   140009dce:	add    BYTE PTR [rax],al
   140009dd0:	shl    BYTE PTR [rax+rax*1],1
   140009dd3:	add    BYTE PTR [rbp+0x35],ch
   140009dd6:	add    BYTE PTR [rax],al
   140009dd8:	mov    eax,0x1900009d
   140009ddd:	sub    DWORD PTR [rcx],ecx
   140009ddf:	add    BYTE PTR [rdi],dl
   140009de1:	mov    al,BYTE PTR fs:[rax]
   140009de4:	(bad)  
   140009de5:	push   rsp
   140009de6:	mov    DWORD PTR [rax],eax
   140009de8:	(bad)  
   140009de9:	xor    al,0x88
   140009deb:	add    BYTE PTR [rdi],dl
   140009ded:	add    DWORD PTR [rsi+0x701000],eax
   140009df3:	add    ah,dh
   140009df5:	cmp    al,BYTE PTR [rax]
   140009df7:	add    BYTE PTR [rax],ah
   140009df9:	add    al,0x0
   140009dfb:	add    BYTE PTR [rcx],ah
   140009dfd:	add    BYTE PTR [rax],al
   140009dff:	add    BYTE PTR [rax+0x6a000035],al
   140009e05:	add    BYTE PTR ss:[rax],al
   140009e08:	fcomp  QWORD PTR [rbp+0x7010000]
   140009e0e:	add    DWORD PTR [rax],eax
   140009e10:	(bad)  
   140009e11:	rex.X add BYTE PTR [rax],al
   140009e14:	add    BYTE PTR [rax],al
   140009e16:	add    BYTE PTR [rax],al
   140009e18:	add    DWORD PTR [rax],eax
   140009e1a:	add    BYTE PTR [rax],al
   140009e1c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d9e26
   140009e22:	or     DWORD PTR [rax],eax
   140009e24:	or     eax,0x1500632
   140009e29:	or     al,0x2
   140009e2b:	add    BYTE PTR [rcx+rax*1],cl
   140009e2e:	adc    DWORD PTR [rax],eax
   140009e30:	sbb    DWORD PTR [rax],ebp
   140009e32:	add    al,BYTE PTR [rax]
   140009e34:	(bad)  
   140009e35:	add    DWORD PTR [rbx],ebp
   140009e37:	add    ah,dh
   140009e39:	cmp    al,BYTE PTR [rax]
   140009e3b:	add    BYTE PTR [rax],dh
   140009e3d:	add    DWORD PTR [rax],eax
   140009e3f:	add    BYTE PTR [rcx],ah
   140009e41:	or     BYTE PTR [rax+rax*1],al
   140009e44:	or     BYTE PTR [rcx+rbp*1+0x0],dh
   140009e48:	add    al,0x34
   140009e4a:	sub    al,BYTE PTR [rax]
   140009e4c:	jo     0x140009e95
   140009e4e:	add    BYTE PTR [rax],al
   140009e50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009e51:	rex.RXB add BYTE PTR [r8],r8b
   140009e54:	xor    BYTE PTR [rsi+0x210000],bl
   140009e5a:	add    BYTE PTR [rax],al
   140009e5c:	jo     0x140009ea5
   140009e5e:	add    BYTE PTR [rax],al
   140009e60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009e61:	rex.RXB add BYTE PTR [r8],r8b
   140009e64:	xor    BYTE PTR [rsi+0x10010000],bl
   140009e6a:	(bad)  
   140009e6b:	add    BYTE PTR [rax],dl
   140009e6d:	je     0x140009e77
   140009e6f:	add    BYTE PTR [rax],dl
   140009e71:	fs (bad) 
   140009e73:	add    BYTE PTR [rax],dl
   140009e75:	xor    cl,BYTE PTR [rax+riz*8]
   140009e78:	and    DWORD PTR [rip+0x34050002],eax        # 0x174059e80
   140009e7e:	(bad)  
   140009e7f:	add    ah,cl
   140009e81:	rex.WB add BYTE PTR [r8],al
   140009e84:	(bad)  
   140009e85:	rex.WX add BYTE PTR [rax],al
   140009e88:	push   0x2100009e
   140009e8d:	add    BYTE PTR [rax],al
   140009e8f:	add    ah,cl
   140009e91:	rex.WB add BYTE PTR [r8],al
   140009e94:	(bad)  
   140009e95:	rex.WX add BYTE PTR [rax],al
   140009e98:	push   0x100009e
   140009e9d:	clts   
   140009e9f:	add    BYTE PTR [rdi],cl
   140009ea1:	or     DWORD PTR fs:[rax],eax
   140009ea4:	sysenter 
   140009ea6:	or     BYTE PTR [rax],al
   140009ea8:	rdmsr  
   140009eaa:	or     esi,DWORD PTR [rax+0x21]
   140009ead:	or     eax,0xe40d0004
   140009eb2:	(bad)  
   140009eb3:	add    BYTE PTR [rip+0x14000654],al        # 0x15400a50d
   140009eb9:	rex.WB add BYTE PTR [r8],al
   140009ebc:	pop    rbp
   140009ebd:	rex.WB add BYTE PTR [r8],al
   140009ec0:	pushf  
   140009ec1:	sahf   
   140009ec2:	add    BYTE PTR [rax],al
   140009ec4:	and    DWORD PTR [rax],eax
   140009ec6:	add    BYTE PTR [rax],al
   140009ec8:	adc    al,0x49
   140009eca:	add    BYTE PTR [rax],al
   140009ecc:	pop    rbp
   140009ecd:	rex.WB add BYTE PTR [r8],al
   140009ed0:	pushf  
   140009ed1:	sahf   
   140009ed2:	add    BYTE PTR [rax],al
   140009ed4:	add    DWORD PTR [rip+0x34050002],eax        # 0x174059edc
   140009eda:	add    DWORD PTR [rax],eax
   140009edc:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x1740d9ee8
   140009ee2:	or     eax,DWORD PTR [rax]
   140009ee4:	or     eax,0x7c00932
   140009ee9:	jo     0x140009ef1
   140009eeb:	(bad)  
   140009eec:	and    DWORD PTR [rip+0x54050002],eax        # 0x194059ef4
   140009ef2:	or     BYTE PTR [rax],al
   140009ef4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009ef5:	push   rsp
   140009ef6:	add    BYTE PTR [rax],al
   140009ef8:	(bad)  
   140009ef9:	push   rbp
   140009efa:	add    BYTE PTR [rax],al
   140009efc:	fcomp  QWORD PTR [rsi+0xe210000]
   140009f02:	add    al,0x0
   140009f04:	(bad)  
   140009f05:	hlt    
   140009f06:	or     al,BYTE PTR [rax]
   140009f08:	add    eax,0x70009e4
   140009f0d:	push   rbp
   140009f0e:	add    BYTE PTR [rax],al
   140009f10:	rex.RXB push r13
   140009f12:	add    BYTE PTR [rax],al
   140009f14:	in     al,dx
   140009f15:	sahf   
   140009f16:	add    BYTE PTR [rax],al
   140009f18:	and    DWORD PTR [rax],eax
   140009f1a:	add    BYTE PTR [rax],al
   140009f1c:	(bad)  
   140009f1d:	push   rbp
   140009f1e:	add    BYTE PTR [rax],al
   140009f20:	rex.RXB push r13
   140009f22:	add    BYTE PTR [rax],al
   140009f24:	in     al,dx
   140009f25:	sahf   
   140009f26:	add    BYTE PTR [rax],al
   140009f28:	and    DWORD PTR [rax],eax
   140009f2a:	add    BYTE PTR [rax],al
   140009f2c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009f2d:	push   rsp
   140009f2e:	add    BYTE PTR [rax],al
   140009f30:	(bad)  
   140009f31:	push   rbp
   140009f32:	add    BYTE PTR [rax],al
   140009f34:	fcomp  QWORD PTR [rsi+0x210000]
   140009f3a:	(bad)  
   140009f3b:	add    BYTE PTR [rax],al
   140009f3d:	hlt    
   140009f3e:	or     al,BYTE PTR [rax]
   140009f40:	add    ah,ah
   140009f42:	or     DWORD PTR [rax],eax
   140009f44:	add    BYTE PTR [rax+rcx*1+0x0],dl
   140009f48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009f49:	push   rsp
   140009f4a:	add    BYTE PTR [rax],al
   140009f4c:	(bad)  
   140009f4d:	push   rbp
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	fcomp  QWORD PTR [rsi+0x210000]
   140009f56:	add    BYTE PTR [rax],al
   140009f58:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009f59:	push   rsp
   140009f5a:	add    BYTE PTR [rax],al
   140009f5c:	(bad)  
   140009f5d:	push   rbp
   140009f5e:	add    BYTE PTR [rax],al
   140009f60:	fcomp  QWORD PTR [rsi+0x4010000]
   140009f66:	add    DWORD PTR [rax],eax
   140009f68:	add    al,0xa2
   140009f6a:	add    BYTE PTR [rax],al
   140009f6c:	and    DWORD PTR [rax],ebx
   140009f6e:	(bad)  
   140009f6f:	add    BYTE PTR [rax],bl
   140009f71:	je     0x140009f82
   140009f73:	add    BYTE PTR [rcx],dl
   140009f75:	fs (bad) 
   140009f77:	add    BYTE PTR [rip+0x60000c34],al        # 0x1a000abb1
   140009f7d:	push   rax
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	(bad)  
   140009f81:	push   rax
   140009f82:	add    BYTE PTR [rax],al
   140009f84:	fs lahf 
   140009f86:	add    BYTE PTR [rax],al
   140009f88:	and    DWORD PTR [rdx],ecx
   140009f8a:	add    al,0x0
   140009f8c:	or     ah,ah
   140009f8e:	or     al,BYTE PTR [rax]
   140009f90:	add    eax,0x8f000d54
   140009f95:	push   rax
   140009f96:	add    BYTE PTR [rax],al
   140009f98:	mov    bl,0x50
   140009f9a:	add    BYTE PTR [rax],al
   140009f9c:	ins    BYTE PTR es:[rdi],dx
   140009f9d:	lahf   
   140009f9e:	add    BYTE PTR [rax],al
   140009fa0:	and    DWORD PTR [rax],eax
   140009fa2:	add    BYTE PTR [rax],al
   140009fa4:	(bad)  
   140009fa5:	push   rax
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	mov    bl,0x50
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	ins    BYTE PTR es:[rdi],dx
   140009fad:	lahf   
   140009fae:	add    BYTE PTR [rax],al
   140009fb0:	and    DWORD PTR [rax],eax
   140009fb2:	add    BYTE PTR [rax],al
   140009fb4:	(bad)  
   140009fb5:	push   rax
   140009fb6:	add    BYTE PTR [rax],al
   140009fb8:	(bad)  
   140009fb9:	push   rax
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	fs lahf 
   140009fbe:	add    BYTE PTR [rax],al
   140009fc0:	add    DWORD PTR [rdx],ecx
   140009fc2:	add    al,0x0
   140009fc4:	or     dh,BYTE PTR [rdx+rcx*1]
   140009fc7:	add    BYTE PTR [rdx],cl
   140009fc9:	jb     0x140009fd1
   140009fcb:	jo     0x140009fce
   140009fcd:	(bad)  
   140009fce:	add    al,BYTE PTR [rax]
   140009fd0:	(bad)  
   140009fd1:	jb     0x140009fd5
   140009fd3:	xor    BYTE PTR [rcx],bl
   140009fd5:	and    eax,0x74170007
   140009fda:	sub    eax,DWORD PTR [rax]
   140009fdc:	(bad)  
   140009fdd:	xor    al,0x2a
   140009fdf:	add    BYTE PTR [rdi],dl
   140009fe1:	add    DWORD PTR [rsi],esp
   140009fe3:	add    BYTE PTR [rbx],cl
   140009fe5:	push   rax
   140009fe6:	add    BYTE PTR [rax],al
   140009fe8:	hlt    
   140009fe9:	cmp    al,BYTE PTR [rax]
   140009feb:	add    BYTE PTR [rax],ah
   140009fed:	add    DWORD PTR [rax],eax
   140009fef:	add    BYTE PTR [rcx],al
   140009ff1:	or     eax,0x340d0006
   140009ff6:	or     eax,DWORD PTR [rax]
   140009ff8:	or     eax,0x7c00932
   140009ffd:	jo     0x14000a005
   140009fff:	push   rax
   14000a000:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a405a008
   14000a006:	or     BYTE PTR [rax],al
   14000a008:	add    BYTE PTR [rbx+0x0],dl
   14000a00b:	add    BYTE PTR [rax],ah
   14000a00d:	push   rbx
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	lock lahf 
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	and    DWORD PTR [rdx],ecx
   14000a016:	add    al,0x0
   14000a018:	or     dh,ah
   14000a01a:	or     al,BYTE PTR [rax]
   14000a01c:	add    eax,0x200009e4
   14000a021:	push   rbx
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	cs push rbx
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	add    BYTE PTR [rax+0x210000],ah
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	and    BYTE PTR [rbx+0x0],dl
   14000a033:	add    BYTE PTR [rsi],ch
   14000a035:	push   rbx
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	add    BYTE PTR [rax+0x210000],ah
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	add    BYTE PTR [rbx+0x0],dl
   14000a043:	add    BYTE PTR [rax],ah
   14000a045:	push   rbx
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	lock lahf 
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	add    DWORD PTR [rcx],ecx
   14000a04e:	add    eax,DWORD PTR [rax]
   14000a050:	or     DWORD PTR [rdx+0x30047005],esp
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	and    DWORD PTR [rdx+rax*1],eax
   14000a05b:	add    BYTE PTR [rsp+riz*2],al
   14000a05e:	or     al,BYTE PTR [rax]
   14000a060:	pushf  
   14000a061:	push   rdi
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	test   al,0x57
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	rex.WR movabs al,ds:0xf412000612210000
   14000a072:	or     BYTE PTR [rax],al
   14000a074:	or     esp,esp
   14000a076:	or     DWORD PTR [rax],eax
   14000a078:	add    al,0x54
   14000a07a:	adc    BYTE PTR [rax],al
   14000a07c:	test   al,0x57
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	add    BYTE PTR [rax+0x0],bl
   14000a083:	add    BYTE PTR [rax-0x60],bl
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	and    DWORD PTR [rax],eax
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	test   al,0x57
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	add    BYTE PTR [rax+0x0],bl
   14000a093:	add    BYTE PTR [rax-0x60],bl
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	and    DWORD PTR [rax],eax
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	pushf  
   14000a09d:	push   rdi
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	test   al,0x57
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	rex.WR movabs al,ds:0x3412000520190000
   14000a0ae:	sbb    BYTE PTR [rax],al
   14000a0b0:	adc    al,BYTE PTR [rcx]
   14000a0b2:	adc    al,0x0
   14000a0b4:	(bad)  
   14000a0b5:	push   rax
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	hlt    
   14000a0b9:	cmp    al,BYTE PTR [rax]
   14000a0bb:	add    BYTE PTR [rax+0x1000000],bl
   14000a0c1:	add    al,0x1
   14000a0c3:	add    BYTE PTR [rdx+riz*2],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	and    DWORD PTR [rip+0x34050002],eax        # 0x17405a0d0
   14000a0ce:	(bad)  
   14000a0cf:	add    al,bl
   14000a0d1:	push   rsi
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	and    DWORD PTR [rdi+0x0],edx
   14000a0d7:	add    al,al
   14000a0d9:	movabs al,ds:0x56d8000000210000
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	and    DWORD PTR [rdi+0x0],edx
   14000a0e7:	add    al,al
   14000a0e9:	movabs al,ds:0x8204000104010000
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	add    BYTE PTR [rax],al
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	add    DWORD PTR [rax],eax
	...
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	cs xchg bh,cl
   14000a107:	push   rdi
   14000a108:	add    BYTE PTR [rax],al
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	push   rax
   14000a10d:	movabs eax,ds:0x4000000010000
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	add    al,0x0
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	sub    BYTE PTR [rcx-0x5ec80000],ah
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	movabs rax,ds:0x14f0000016300000
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	loopne 0x14000a168
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	adc    BYTE PTR [rdi],dl
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	pop    rdx
   14000a139:	movabs eax,ds:0xa1830000a16a0000
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	cwde   
   14000a145:	movabs eax,ds:0x2000100000000
   14000a14e:	add    eax,DWORD PTR [rax]
   14000a150:	ins    BYTE PTR es:[rdi],dx
   14000a151:	jae    0x14000a1b4
   14000a153:	jae    0x14000a1c8
   14000a155:	cs gs js 0x14000a1be
   14000a159:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   14000a15d:	rex.RXB
   14000a15e:	gs je  0x14000a1aa
   14000a161:	outs   dx,BYTE PTR ds:[rsi]
   14000a162:	je     0x14000a1c9
   14000a164:	jb     0x14000a1cc
   14000a166:	(bad)  
   14000a167:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a16a:	rex.WR jae 0x14000a1ce
   14000a16d:	rex.WB ins DWORD PTR es:[rdi],dx
   14000a16f:	jo     0x14000a1d6
   14000a171:	jb     0x14000a1e6
   14000a173:	outs   dx,DWORD PTR ds:[rsi]
   14000a174:	outs   dx,BYTE PTR ds:[rsi]
   14000a175:	(bad)  
   14000a176:	je     0x14000a1dd
   14000a178:	rex.WXB jae 0x14000a1e0
   14000a17b:	movsxd eax,DWORD PTR [rbx+0x61]
   14000a17e:	ins    BYTE PTR es:[rdi],dx
   14000a17f:	ins    BYTE PTR es:[rdi],dx
   14000a180:	gs jb  0x14000a183
   14000a183:	rex.WR jae 0x14000a1e7
   14000a186:	push   rdx
   14000a187:	imul   esi,DWORD PTR gs:[ebx+0x74],0x78457265
   14000a190:	je     0x14000a1f7
   14000a192:	outs   dx,BYTE PTR ds:[rsi]
   14000a193:	jae    0x14000a1fe
   14000a195:	outs   dx,DWORD PTR ds:[rsi]
   14000a196:	outs   dx,BYTE PTR ds:[rsi]
   14000a197:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   14000a19b:	push   rdx
   14000a19c:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6e497265
   14000a1a5:	je     0x14000a20c
   14000a1a7:	jb     0x14000a20f
   14000a1a9:	(bad)  
   14000a1aa:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a1ad:	add    BYTE PTR [rax],al
   14000a1af:	add    BYTE PTR [rax+0xa3],ch
   14000a1b5:	add    BYTE PTR [rax],al
   14000a1b7:	add    BYTE PTR [rax],al
   14000a1b9:	add    BYTE PTR [rax],al
   14000a1bb:	add    BYTE PTR [rdi+riz*4+0x60680000],cl
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	call   0x14000a26c
   14000a1c9:	add    BYTE PTR [rax],al
   14000a1cb:	add    BYTE PTR [rax],al
   14000a1cd:	add    BYTE PTR [rax],al
   14000a1cf:	add    dh,cl
   14000a1d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	test   al,0x60
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	shl    BYTE PTR [rbp+0x0],1
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	add    BYTE PTR [rax],al
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	adc    ch,BYTE PTR [rax+rax*1+0x629000]
   14000a1eb:	add    BYTE PTR [rax-0x5d],al
	...
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	pushf  
   14000a1f9:	lods   al,BYTE PTR ds:[rsi]
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	add    BYTE PTR [rax+0x0],ah
   14000a1ff:	add    BYTE PTR [rax-0x5d],bh
	...
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	xor    BYTE PTR [rbp+0x60380000],ch
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	or     BYTE PTR [rax+rax*1+0x0],ah
   14000a21b:	add    BYTE PTR [rax],al
   14000a21d:	add    BYTE PTR [rax],al
   14000a21f:	add    BYTE PTR [rsi-0x37ffff53],ah
   14000a225:	(bad)  
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	cmp    BYTE PTR [rax+rax*1+0x0],ah
   14000a22f:	add    BYTE PTR [rax],al
   14000a231:	add    BYTE PTR [rax],al
   14000a233:	add    al,dh
   14000a235:	lods   eax,DWORD PTR ds:[rsi]
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	clc    
   14000a239:	(bad)  
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	push   0xa4
   14000a241:	add    BYTE PTR [rax],al
   14000a243:	add    BYTE PTR [rax],al
   14000a245:	add    BYTE PTR [rax],al
   14000a247:	add    BYTE PTR [rsi+rbp*4],ah
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	sub    BYTE PTR [rcx+0x0],ah
   14000a24f:	add    BYTE PTR [rax-0x5c],bh
	...
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	data16 scas al,BYTE PTR es:[rdi]
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	cmp    BYTE PTR [rcx+0x0],ah
   14000a263:	add    BYTE PTR [rax],dl
   14000a265:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	shr    BYTE PTR [rsi+0x61d00000],cl
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	push   rax
   14000a279:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	adc    BYTE PTR [rdi+0x61100000],ch
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	nop
   14000a28d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	mov    cl,0x0
   14000a29b:	add    BYTE PTR [rax+0x61],dl
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	test   al,0xa4
	...
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	outs   dx,BYTE PTR ds:[rsi]
   14000a2ad:	mov    cl,0x0
   14000a2af:	add    BYTE PTR [rax+0x61],ch
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	cmp    BYTE PTR [rbp+0x0],ah
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	cwde   
   14000a2c1:	mov    cl,0x0
   14000a2c3:	add    al,bh
   14000a2c5:	(bad)  
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	shl    BYTE PTR [rbp+0x0],0x0
   14000a2cf:	add    BYTE PTR [rax],al
   14000a2d1:	add    BYTE PTR [rax],al
   14000a2d3:	add    BYTE PTR [rdx-0x7fffff4f],bh
   14000a2d9:	(bad)  
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	js     0x14000a283
	...
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	fidiv  WORD PTR [rcx+0x62380000]
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	pop    rax
   14000a2f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    al,0xb2
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	sbb    BYTE PTR [rdx+0x0],ah
   14000a303:	add    BYTE PTR [rax],al
   14000a305:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	sub    BYTE PTR [rdx+0x61c00000],dh
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	mov    al,0xa5
	...
   14000a322:	add    BYTE PTR [rax],al
   14000a324:	pop    rdx
   14000a325:	mov    dl,0x0
   14000a327:	add    BYTE PTR [rax+0x62],dh
	...
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	lods   al,BYTE PTR cs:[rsi]
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	rex.RX lods al,BYTE PTR ds:[rsi]
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	add    BYTE PTR [rax],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	(bad)  
   14000a351:	lods   al,BYTE PTR ds:[rsi]
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	add    BYTE PTR [rax],al
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	jbe    0x14000a306
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	mov    BYTE PTR [rax+rax*1+0x0],ch
   14000a367:	add    BYTE PTR [rsp+rbp*4],bl
	...
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	adc    ch,BYTE PTR [rbp+0x0]
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	hlt    
   14000a381:	lods   al,BYTE PTR ds:[rsi]
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	add    BYTE PTR [rax],al
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	(bad)  
   14000a389:	lods   al,BYTE PTR ds:[rsi]
   14000a38a:	add    BYTE PTR [rax],al
   14000a38c:	add    BYTE PTR [rax],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	mov    esp,0xac
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rax+0xac],ch
	...
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    BYTE PTR [rdx+0xa7],al
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    BYTE PTR [rsi-0x59],dh
   14000a3b2:	add    BYTE PTR [rax],al
   14000a3b4:	add    BYTE PTR [rax],al
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	ins    BYTE PTR es:[rdi],dx
   14000a3b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    BYTE PTR [rax],al
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	(bad)  
   14000a3c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	add    BYTE PTR [rax],al
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	mov    WORD PTR [rdx+0x0],?
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	push   rax
   14000a3d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	add    BYTE PTR [rax],al
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	xchg   esi,eax
   14000a3d9:	mov    dl,0x0
	...
   14000a3e7:	add    BYTE PTR [rdi+riz*4+0x0],ch
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	ret    0xa7
   14000a3f3:	add    BYTE PTR [rax],al
   14000a3f5:	add    BYTE PTR [rax],al
   14000a3f7:	add    BYTE PTR [rdi+riz*4+0x0],dh
	...
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	rex.WR lods rax,QWORD PTR ds:[rsi]
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	add    BYTE PTR [rax],al
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	cmp    al,0xad
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	add    BYTE PTR [rax],al
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	mov    ch,BYTE PTR [rbp+0x0]
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	push   0xffffffffffffffad
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	add    BYTE PTR [rax],al
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	jp     0x14000a3d7
	...
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	fisubr WORD PTR [rbp+0x0]
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	shr    BYTE PTR [rbp+0x0],1
	...
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	imul   BYTE PTR [rsi+0x0]
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	add    al,0xaf
	...
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	adc    ch,BYTE PTR [rsi+0x0]
	...
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	push   rsp
   14000a479:	scas   al,BYTE PTR es:[rdi]
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	add    BYTE PTR [rax],al
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	rex.X scas al,BYTE PTR es:[rdi]
	...
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	cmp    ch,BYTE PTR [rdi+0x0]
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	jl     0x14000a449
	...
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	sub    al,0xb1
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	add    BYTE PTR [rax],al
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	push   0xaf
   14000a4b5:	add    BYTE PTR [rax],al
   14000a4b7:	add    BYTE PTR [rdi+rbp*4+0x0],dl
   14000a4bb:	add    BYTE PTR [rax],al
   14000a4bd:	add    BYTE PTR [rax],al
   14000a4bf:	add    BYTE PTR [rdx],cl
   14000a4c1:	mov    al,0x0
   14000a4c3:	add    BYTE PTR [rax],al
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    ah,ch
   14000a4c9:	mov    al,0x0
   14000a4cb:	add    BYTE PTR [rax],al
   14000a4cd:	add    BYTE PTR [rax],al
   14000a4cf:	add    dh,dl
   14000a4d1:	mov    al,0x0
   14000a4d3:	add    BYTE PTR [rax],al
   14000a4d5:	add    BYTE PTR [rax],al
   14000a4d7:	add    BYTE PTR [rax+0xaf],bh
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    ah,ah
   14000a4e1:	scas   eax,DWORD PTR es:[rdi]
   14000a4e2:	add    BYTE PTR [rax],al
   14000a4e4:	add    BYTE PTR [rax],al
   14000a4e6:	add    BYTE PTR [rax],al
   14000a4e8:	sub    al,0xb0
   14000a4ea:	add    BYTE PTR [rax],al
   14000a4ec:	add    BYTE PTR [rax],al
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	jl     0x14000a4a2
	...
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	mov    esp,0xb0
	...
   14000a50d:	add    BYTE PTR [rax],al
   14000a50f:	add    BYTE PTR [rsi+rbp*4+0x0],ah
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	nop
   14000a519:	scas   al,BYTE PTR es:[rdi]
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	add    BYTE PTR [rax],al
   14000a51e:	add    BYTE PTR [rax],al
   14000a520:	mov    ah,0xae
   14000a522:	add    BYTE PTR [rax],al
   14000a524:	add    BYTE PTR [rax],al
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	(bad)  
   14000a529:	scas   al,BYTE PTR es:[rdi]
	...
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	(bad)  
   14000a539:	scas   eax,DWORD PTR es:[rdi]
   14000a53a:	add    BYTE PTR [rax],al
   14000a53c:	add    BYTE PTR [rax],al
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	(bad)  
   14000a541:	scas   eax,DWORD PTR es:[rdi]
   14000a542:	add    BYTE PTR [rax],al
   14000a544:	add    BYTE PTR [rax],al
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	xchg   esi,eax
   14000a549:	scas   eax,DWORD PTR es:[rdi]
	...
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	ins    BYTE PTR es:[rdi],dx
   14000a559:	mov    al,0x0
   14000a55b:	add    BYTE PTR [rax],al
   14000a55d:	add    BYTE PTR [rax],al
   14000a55f:	add    BYTE PTR [rdx],al
   14000a561:	mov    cl,0x0
   14000a563:	add    BYTE PTR [rax],al
   14000a565:	add    BYTE PTR [rax],al
   14000a567:	add    BYTE PTR [rcx+rsi*4],bl
	...
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	hlt    
   14000a579:	scas   eax,DWORD PTR es:[rdi]
   14000a57a:	add    BYTE PTR [rax],al
   14000a57c:	add    BYTE PTR [rax],al
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	mov    BYTE PTR [rax+0x0],dh
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	sbb    BYTE PTR [rax+0x0],dh
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	cmp    dh,BYTE PTR [rax+0x0]
   14000a596:	add    BYTE PTR [rax],al
   14000a598:	rex.WRX mov al,0x0
   14000a59b:	add    BYTE PTR [rax],al
   14000a59d:	add    BYTE PTR [rax],al
   14000a59f:	add    BYTE PTR [rsi+0xb0],ah
	...
   14000a5ad:	add    BYTE PTR [rax],al
   14000a5af:	add    BYTE PTR [rdx+rsi*4+0x0],cl
	...
   14000a5bf:	add    BYTE PTR [rdx+0xaf],ah
	...
   14000a5cd:	add    BYTE PTR [rax],al
   14000a5cf:	add    BYTE PTR [rax-0x56],ah
   14000a5d2:	add    BYTE PTR [rax],al
   14000a5d4:	add    BYTE PTR [rax],al
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	js     0x14000a584
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	add    BYTE PTR [rax],al
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	xchg   BYTE PTR [rdx+0x0],ch
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	or     ch,BYTE PTR [rcx+0x0]
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	(bad)  
   14000a5f1:	test   eax,0x0
   14000a5f6:	add    BYTE PTR [rax],al
   14000a5f8:	cmp    BYTE PTR [rcx+0x0],ch
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	push   rax
   14000a601:	test   eax,0x0
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	rex.WX stos BYTE PTR es:[rdi],al
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	add    BYTE PTR [rax],al
   14000a60e:	add    BYTE PTR [rax],al
   14000a610:	cs stos BYTE PTR es:[rdi],al
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	add    BYTE PTR [rax],al
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	sbb    BYTE PTR [rdx+0x0],ch
   14000a61e:	add    BYTE PTR [rax],al
   14000a620:	add    BYTE PTR [rdx+0x0],ch
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	jl     0x14000a5d3
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	add    BYTE PTR [rax],al
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	mov    WORD PTR [rcx+0x0],gs
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	stos   BYTE PTR es:[rdi],al
   14000a639:	test   eax,0x0
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	retf   0xa9
   14000a643:	add    BYTE PTR [rax],al
   14000a645:	add    BYTE PTR [rax],al
   14000a647:	add    dh,ch
   14000a649:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a64a:	add    BYTE PTR [rax],al
   14000a64c:	add    BYTE PTR [rax],al
   14000a64e:	add    BYTE PTR [rax],al
   14000a650:	outs   dx,BYTE PTR ds:[rsi]
   14000a651:	test   eax,0x0
   14000a656:	add    BYTE PTR [rax],al
   14000a658:	cld    
   14000a659:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	add    BYTE PTR [rax],al
   14000a65e:	add    BYTE PTR [rax],al
   14000a660:	adc    ch,BYTE PTR [rax+0x0]
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	sub    al,0xa8
   14000a66a:	add    BYTE PTR [rax],al
   14000a66c:	add    BYTE PTR [rax],al
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	rex.R test al,0x0
   14000a673:	add    BYTE PTR [rax],al
   14000a675:	add    BYTE PTR [rax],al
   14000a677:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000a67b:	add    BYTE PTR [rax],al
   14000a67d:	add    BYTE PTR [rax],al
   14000a67f:	add    BYTE PTR [rdx-0x58],ah
   14000a682:	add    BYTE PTR [rax],al
   14000a684:	add    BYTE PTR [rax],al
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	(bad)  
   14000a689:	test   al,0x0
   14000a68b:	add    BYTE PTR [rax],al
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	add    BYTE PTR [rdx+0xa8],bl
   14000a695:	add    BYTE PTR [rax],al
   14000a697:	add    BYTE PTR [rdx+0xa8],dh
   14000a69d:	add    BYTE PTR [rax],al
   14000a69f:	add    dh,bh
   14000a6a1:	stos   DWORD PTR es:[rdi],eax
   14000a6a2:	add    BYTE PTR [rax],al
   14000a6a4:	add    BYTE PTR [rax],al
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	in     al,0xab
   14000a6aa:	add    BYTE PTR [rax],al
   14000a6ac:	add    BYTE PTR [rax],al
   14000a6ae:	add    BYTE PTR [rax],al
   14000a6b0:	shr    BYTE PTR [rbx+0x0],1
   14000a6b6:	add    BYTE PTR [rax],al
   14000a6b8:	mov    dh,0xab
   14000a6ba:	add    BYTE PTR [rax],al
   14000a6bc:	add    BYTE PTR [rax],al
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	pushf  
   14000a6c1:	stos   DWORD PTR es:[rdi],eax
   14000a6c2:	add    BYTE PTR [rax],al
   14000a6c4:	add    BYTE PTR [rax],al
   14000a6c6:	add    BYTE PTR [rax],al
   14000a6c8:	(bad)  
   14000a6c9:	stos   DWORD PTR es:[rdi],eax
   14000a6ca:	add    BYTE PTR [rax],al
   14000a6cc:	add    BYTE PTR [rax],al
   14000a6ce:	add    BYTE PTR [rax],al
   14000a6d0:	ins    BYTE PTR es:[rdi],dx
   14000a6d1:	stos   DWORD PTR es:[rdi],eax
   14000a6d2:	add    BYTE PTR [rax],al
   14000a6d4:	add    BYTE PTR [rax],al
   14000a6d6:	add    BYTE PTR [rax],al
   14000a6d8:	pop    rsp
   14000a6d9:	stos   DWORD PTR es:[rdi],eax
   14000a6da:	add    BYTE PTR [rax],al
   14000a6dc:	add    BYTE PTR [rax],al
   14000a6de:	add    BYTE PTR [rax],al
   14000a6e0:	rex.RX stos DWORD PTR es:[rdi],eax
   14000a6e2:	add    BYTE PTR [rax],al
   14000a6e4:	add    BYTE PTR [rax],al
   14000a6e6:	add    BYTE PTR [rax],al
   14000a6e8:	cmp    al,0xab
   14000a6ea:	add    BYTE PTR [rax],al
   14000a6ec:	add    BYTE PTR [rax],al
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	and    ch,BYTE PTR [rbx+0x0]
   14000a6f6:	add    BYTE PTR [rax],al
   14000a6f8:	adc    ch,BYTE PTR [rbx+0x0]
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	clc    
   14000a701:	stos   BYTE PTR es:[rdi],al
   14000a702:	add    BYTE PTR [rax],al
   14000a704:	add    BYTE PTR [rax],al
   14000a706:	add    BYTE PTR [rax],al
   14000a708:	loop   0x14000a6b3
   14000a70a:	add    BYTE PTR [rax],al
   14000a70c:	add    BYTE PTR [rax],al
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	call   0x14000a7bf
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    al,dl
   14000a719:	stos   BYTE PTR es:[rdi],al
   14000a71a:	add    BYTE PTR [rax],al
   14000a71c:	add    BYTE PTR [rax],al
   14000a71e:	add    BYTE PTR [rax],al
   14000a720:	mov    edx,0xaa
   14000a725:	add    BYTE PTR [rax],al
   14000a727:	add    BYTE PTR [rsi+0xaa],ah
   14000a72d:	add    BYTE PTR [rax],al
   14000a72f:	add    BYTE PTR [rdx+rbp*4+0x0],dl
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	(bad)  
   14000a739:	test   al,0x0
   14000a73b:	add    BYTE PTR [rax],al
   14000a73d:	add    BYTE PTR [rax],al
   14000a73f:	add    al,dl
   14000a741:	test   al,0x0
	...
   14000a74f:	add    BYTE PTR [rip+0x73765f00],dl        # 0x1b3770655
   14000a755:	outs   dx,BYTE PTR ds:[rsi]
   14000a756:	jo     0x14000a7ca
   14000a758:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000a75f:	add    BYTE PTR [rsi],bh
   14000a761:	add    BYTE PTR [rbx+0x74],dh
   14000a764:	jb     0x14000a7c9
   14000a766:	jo     0x14000a7e1
   14000a768:	pop    rdi
   14000a769:	jae    0x14000a76b
   14000a76b:	add    BYTE PTR [rbx+0x0],dl
   14000a76e:	ja     0x14000a7d3
   14000a770:	jae    0x14000a7d5
   14000a772:	push   0x17000072
   14000a777:	add    BYTE PTR [rdi+0x77],bl
   14000a77a:	movsxd esi,DWORD PTR [rbx+0x69]
   14000a77d:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000a780:	add    BYTE PTR [rax],al
   14000a782:	(bad)  
   14000a783:	add    BYTE PTR [rdi+0x63],dh
   14000a786:	jae    0x14000a7fc
   14000a788:	outs   dx,DWORD PTR ds:[rsi]
   14000a789:	ins    BYTE PTR es:[rdi],dx
   14000a78a:	add    BYTE PTR [rax],al
   14000a78c:	(bad)  
   14000a78d:	jo     0x14000a7f8
   14000a78f:	sub    eax,0x772d736d
   14000a794:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a79b:	sub    eax,0x2d747263
   14000a7a0:	ins    BYTE PTR es:[rdi],dx
   14000a7a1:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30d4d8
   14000a7a7:	fs ins BYTE PTR es:[rdi],dx
   14000a7a9:	ins    BYTE PTR es:[rdi],dx
   14000a7aa:	add    BYTE PTR [rax],al
   14000a7ac:	or     eax,0x69786500
   14000a7b1:	je     0x14000a7b3
   14000a7b3:	add    BYTE PTR [rdi],al
   14000a7b5:	add    BYTE PTR [rdi+0x69],bl
   14000a7b8:	outs   dx,BYTE PTR ds:[rsi]
   14000a7b9:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   14000a7c1:	add    BYTE PTR [rsi],al
   14000a7c3:	add    BYTE PTR [rdi+0x69],bl
   14000a7c6:	outs   dx,BYTE PTR ds:[rsi]
   14000a7c7:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x61006d72
   14000a7cf:	jo     0x14000a83a
   14000a7d1:	sub    eax,0x772d736d
   14000a7d6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a7dd:	sub    eax,0x2d747263
   14000a7e2:	ins    BYTE PTR es:[rdi],dx
   14000a7e3:	xor    ch,BYTE PTR [rip+0x2e302d31]        # 0x16e30d51a
   14000a7e9:	fs ins BYTE PTR es:[rdi],dx
   14000a7eb:	ins    BYTE PTR es:[rdi],dx
   14000a7ec:	add    BYTE PTR [rax],al
   14000a7ee:	and    al,BYTE PTR [rax]
   14000a7f0:	rex.R (bad) 
   14000a7f2:	addr32 push rax
   14000a7f4:	jb     0x14000a85f
   14000a7f6:	outs   dx,BYTE PTR ds:[rsi]
   14000a7f7:	je     0x14000a83e
   14000a7f9:	js     0x14000a7fb
   14000a7fb:	add    BYTE PTR [rbx+0x6c745202],bl
   14000a801:	rex.B
   14000a802:	fs fs rex.WRB (bad) 
   14000a806:	outs   dx,BYTE PTR ds:[rsi]
   14000a807:	fs (bad) 
   14000a809:	je     0x14000a87a
   14000a80b:	jb     0x14000a886
   14000a80d:	movsxd esp,DWORD PTR [r13+0x0]
   14000a811:	add    BYTE PTR [rdx],bl
   14000a813:	add    eax,0x536c7452
   14000a818:	gs je  0x14000a86b
   14000a81b:	jb     0x14000a88c
   14000a81d:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a820:	jae    0x14000a86b
   14000a822:	jae    0x14000a867
   14000a824:	jb     0x14000a88f
   14000a826:	je     0x14000a891
   14000a828:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a82b:	add    BYTE PTR [rdx],dh
   14000a82d:	add    DWORD PTR [rsi+0x74],ecx
   14000a830:	rex.R
   14000a831:	gs jbe 0x14000a89d
   14000a834:	movsxd esp,DWORD PTR [rbp+0x49]
   14000a837:	outs   dx,DWORD PTR ds:[rsi]
   14000a838:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a83a:	outs   dx,BYTE PTR ds:[rsi]
   14000a83b:	je     0x14000a8af
   14000a83d:	outs   dx,DWORD PTR ds:[rsi]
   14000a83e:	ins    BYTE PTR es:[rdi],dx
   14000a83f:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x74520301
   14000a848:	ins    BYTE PTR es:[rdi],dx
   14000a849:	rex.XB jb 0x14000a8b1
   14000a84c:	(bad)  
   14000a84d:	je     0x14000a8b4
   14000a84f:	movsxd ebp,DWORD PTR [r8+rax*1+0x0]
   14000a854:	scas   al,BYTE PTR es:[rdi]
   14000a855:	add    edx,DWORD PTR [rdx+0x74]
   14000a858:	ins    BYTE PTR es:[rdi],dx
   14000a859:	rex.RX jb 0x14000a8c1
   14000a85c:	gs push rbx
   14000a85e:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7452050a
   14000a866:	ins    BYTE PTR es:[rdi],dx
   14000a867:	push   rbx
   14000a868:	gs je  0x14000a8af
   14000a86b:	(bad)  
   14000a86c:	movsxd ebp,DWORD PTR [rbx+rdx*2+0x65]
   14000a870:	movsxd esi,DWORD PTR [rbp+0x72]
   14000a873:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000a87b:	imul   esi,DWORD PTR [rax+0x74],0x726f
   14000a882:	(bad)  
   14000a883:	add    al,0x52
   14000a885:	je     0x14000a8f3
   14000a887:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a889:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   14000a891:	gs push rbx
   14000a893:	je     0x14000a907
   14000a895:	imul   ebp,DWORD PTR [rsi+0x67],0x21d0000
   14000a89c:	rex.WRX je 0x14000a8f2
   14000a89f:	gs je  0x14000a8eb
   14000a8a2:	outs   dx,BYTE PTR ds:[rsi]
   14000a8a3:	outs   dx,WORD PTR ds:[rsi]
   14000a8a5:	jb     0x14000a914
   14000a8a7:	(bad)  
   14000a8a8:	je     0x14000a913
   14000a8aa:	outs   dx,DWORD PTR ds:[rsi]
   14000a8ab:	outs   dx,BYTE PTR ds:[rsi]
   14000a8ac:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x52055a00
   14000a8b5:	je     0x14000a923
   14000a8b7:	push   rbp
   14000a8b8:	outs   dx,BYTE PTR ds:[rsi]
   14000a8b9:	push   0x6c646e61
   14000a8be:	gs fs rex.RB js 0x14000a926
   14000a8c3:	gs jo  0x14000a93a
   14000a8c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a8cd:	gs jb  0x14000a8d0
   14000a8d0:	mov    al,BYTE PTR [rdx]
   14000a8d2:	push   rdx
   14000a8d3:	je     0x14000a941
   14000a8d5:	rex.B
   14000a8d6:	fs movsxd esp,DWORD PTR fs:[r11+0x65]
   14000a8dc:	jae    0x14000a951
   14000a8de:	rex.B ins BYTE PTR es:[rdi],dx
   14000a8e0:	ins    BYTE PTR es:[rdi],dx
   14000a8e1:	outs   dx,DWORD PTR ds:[rsi]
   14000a8e2:	ja     0x14000a949
   14000a8e4:	movsxd esp,DWORD PTR fs:[r13+0x0]
   14000a8e9:	add    BYTE PTR [rip+0x6c745205],bl        # 0x1ac74faf4
   14000a8ef:	push   rbx
   14000a8f0:	gs je  0x14000a946
   14000a8f3:	(bad)  
   14000a8f4:	movsxd ebp,DWORD PTR [rbx+rdx*2+0x65]
   14000a8f8:	movsxd esi,DWORD PTR [rbp+0x72]
   14000a8fb:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000a903:	imul   esi,DWORD PTR [rax+0x74],0x726f
   14000a90a:	add    eax,DWORD PTR [rbx]
   14000a90c:	push   rdx
   14000a90d:	je     0x14000a97b
   14000a90f:	rex.XB jb 0x14000a977
   14000a912:	(bad)  
   14000a913:	je     0x14000a97a
   14000a915:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000a917:	fs push rbx
   14000a919:	gs je  0x14000a96f
   14000a91c:	add    BYTE PTR [rcx],r12b
   14000a91f:	add    cl,BYTE PTR [rsi+0x74]
   14000a922:	push   rbx
   14000a923:	gs je  0x14000a96f
   14000a926:	outs   dx,BYTE PTR ds:[rsi]
   14000a927:	outs   dx,WORD PTR ds:[rsi]
   14000a929:	jb     0x14000a998
   14000a92b:	(bad)  
   14000a92c:	je     0x14000a997
   14000a92e:	outs   dx,DWORD PTR ds:[rsi]
   14000a92f:	outs   dx,BYTE PTR ds:[rsi]
   14000a930:	push   rax
   14000a931:	jb     0x14000a9a2
   14000a933:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a936:	jae    0x14000a938
   14000a938:	jns    0x14000a93e
   14000a93a:	push   rdx
   14000a93b:	je     0x14000a9a9
   14000a93d:	rex.WRB (bad) 
   14000a93f:	imul   esp,DWORD PTR [rbp+0x53],0x65
   14000a943:	ins    BYTE PTR es:[rdi],dx
   14000a944:	push   dx
   14000a946:	gs ins BYTE PTR es:[rdi],dx
   14000a948:	(bad)  
   14000a949:	je     0x14000a9b4
   14000a94b:	jbe    0x14000a9b2
   14000a94d:	push   rbx
   14000a94e:	add    BYTE PTR [rdi+0x6c745202],r12b
   14000a955:	rex.B ins BYTE PTR es:[rdi],dx
   14000a957:	ins    BYTE PTR es:[rdi],dx
   14000a958:	outs   dx,DWORD PTR ds:[rsi]
   14000a959:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a95c:	rex.B outs dx,BYTE PTR gs:[rsi]
   14000a95f:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14000a962:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a96a:	push   rbx
   14000a96b:	imul   esp,DWORD PTR [rax+rax*1-0x7f],0x4f744e01
   14000a973:	jo     0x14000a9da
   14000a975:	outs   dx,BYTE PTR ds:[rsi]
   14000a976:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x52046200
   14000a97f:	je     0x14000a9ed
   14000a981:	rex.WR
   14000a982:	outs   dx,BYTE PTR gs:[rsi]
   14000a984:	addr32 je 0x14000a9ef
   14000a987:	push   rbx
   14000a988:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x74520313
   14000a990:	ins    BYTE PTR es:[rdi],dx
   14000a991:	rex.XB jb 0x14000a9f9
   14000a994:	(bad)  
   14000a995:	je     0x14000a9fc
   14000a997:	push   rbx
   14000a998:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000a99c:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000a9a4:	imul   esi,DWORD PTR [rax+0x74],0x1700726f
   14000a9ab:	add    eax,0x536c7452
   14000a9b0:	gs je  0x14000aa02
   14000a9b3:	ja     0x14000aa23
   14000a9b5:	gs jb  0x14000aa0b
   14000a9b8:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000a9bc:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000a9c4:	imul   esi,DWORD PTR [rax+0x74],0x1e00726f
   14000a9cb:	add    al,0x52
   14000a9cd:	je     0x14000aa3b
   14000a9cf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a9d1:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a9d9:	push   rdx
   14000a9da:	gs jae 0x14000aa4c
   14000a9dd:	jne    0x14000aa51
   14000a9df:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a9e2:	add    DWORD PTR [rdx],0x52
   14000a9e5:	je     0x14000aa53
   14000a9e7:	movsxd esi,DWORD PTR [r9+0x75]
   14000a9eb:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   14000a9f2:	jne    0x14000aa66
   14000a9f4:	movsxd esp,DWORD PTR [rbp+0x45]
   14000a9f7:	js     0x14000aa5c
   14000a9f9:	ins    BYTE PTR es:[rdi],dx
   14000a9fa:	jne    0x14000aa6f
   14000a9fc:	imul   esi,DWORD PTR [rsi+0x65],0x52048a00
   14000aa03:	je     0x14000aa71
   14000aa05:	rex.WRX je 0x14000aa5b
   14000aa08:	je     0x14000aa6b
   14000aa0a:	je     0x14000aa81
   14000aa0c:	jae    0x14000aa62
   14000aa0e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa0f:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000aa11:	jae    0x14000aa58
   14000aa13:	jb     0x14000aa87
   14000aa15:	outs   dx,DWORD PTR ds:[rsi]
   14000aa16:	jb     0x14000aa18
   14000aa18:	loope  0x14000aa1e
   14000aa1a:	push   rdx
   14000aa1b:	je     0x14000aa89
   14000aa1d:	push   rdx
   14000aa1e:	gs ins BYTE PTR es:[rdi],dx
   14000aa20:	gs (bad) 
   14000aa22:	jae    0x14000aa89
   14000aa24:	push   rdx
   14000aa25:	gs jae 0x14000aa97
   14000aa28:	jne    0x14000aa9c
   14000aa2a:	movsxd esp,DWORD PTR [rbp+0x0]
   14000aa2d:	add    BYTE PTR [rdx+rax*1+0x416c7452],al
   14000aa34:	movsxd esi,DWORD PTR [rcx+0x75]
   14000aa37:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   14000aa3e:	jne    0x14000aab2
   14000aa40:	movsxd esp,DWORD PTR [rbp+0x53]
   14000aa43:	push   0x64657261
   14000aa48:	add    BYTE PTR [rax],al
   14000aa4a:	cmp    eax,0x6c745205
   14000aa4f:	push   rbx
   14000aa50:	jne    0x14000aab4
   14000aa52:	rex.B jne 0x14000aac9
   14000aa55:	push   0x7469726f
   14000aa5a:	jns    0x14000aaaf
   14000aa5c:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x74520460
   14000aa64:	ins    BYTE PTR es:[rdi],dx
   14000aa65:	rex.WR
   14000aa66:	outs   dx,BYTE PTR gs:[rsi]
   14000aa68:	addr32 je 0x14000aad3
   14000aa6b:	push   rdx
   14000aa6c:	gs jno 0x14000aae4
   14000aa6f:	imul   esi,DWORD PTR [rdx+0x65],0x64695364
   14000aa76:	add    BYTE PTR [rax],al
   14000aa78:	stos   DWORD PTR es:[rdi],eax
   14000aa79:	add    edx,DWORD PTR [rdx+0x74]
   14000aa7c:	ins    BYTE PTR es:[rdi],dx
   14000aa7d:	rex.RX jb 0x14000aae5
   14000aa80:	gs rex.W
   14000aa82:	gs (bad) 
   14000aa84:	jo     0x14000aa86
   14000aa86:	jg     0x14000aa89
   14000aa88:	rex.WRX je 0x14000aada
   14000aa8b:	jo     0x14000aaf2
   14000aa8d:	outs   dx,BYTE PTR ds:[rsi]
   14000aa8e:	rex.RB jbe 0x14000aaf6
   14000aa91:	outs   dx,BYTE PTR ds:[rsi]
   14000aa92:	je     0x14000aa94
   14000aa94:	stos   BYTE PTR es:[rdi],al
   14000aa95:	add    dl,BYTE PTR [rdx+0x74]
   14000aa98:	ins    BYTE PTR es:[rdi],dx
   14000aa99:	rex.B ins BYTE PTR es:[rdi],dx
   14000aa9b:	ins    BYTE PTR es:[rdi],dx
   14000aa9c:	outs   dx,DWORD PTR ds:[rsi]
   14000aa9d:	movsxd esp,DWORD PTR [rcx+0x74]
   14000aaa0:	gs rex.W
   14000aaa2:	gs (bad) 
   14000aaa4:	jo     0x14000aaa6
   14000aaa6:	and    DWORD PTR [rdx+rdx*2],eax
   14000aaa9:	je     0x14000ab17
   14000aaab:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000aaad:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000aab5:	push   rbx
   14000aab6:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x744e0231
   14000aabe:	push   rbx
   14000aabf:	gs je  0x14000ab15
   14000aac2:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000aac6:	imul   esi,DWORD PTR [rcx+rdi*2+0x4f],0x63656a62
   14000aace:	je     0x14000aad0
   14000aad0:	test   BYTE PTR [rax],0x4e
   14000aad3:	je     0x14000ab18
   14000aad5:	outs   dx,DWORD PTR ds:[rsi]
   14000aad6:	ins    DWORD PTR es:[rdi],dx
   14000aad7:	jo     0x14000ab45
   14000aad9:	gs je  0x14000ab41
   14000aadc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000aade:	outs   dx,BYTE PTR ds:[rsi]
   14000aadf:	outs   dx,BYTE PTR ds:[rsi]
   14000aae0:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x6f]
   14000aae5:	jb     0x14000ab5b
   14000aae7:	add    BYTE PTR [rsi],cl
   14000aae9:	add    DWORD PTR [rsi+0x74],ecx
   14000aaec:	rex.XB jb 0x14000ab54
   14000aaef:	(bad)  
   14000aaf0:	je     0x14000ab57
   14000aaf2:	push   rax
   14000aaf3:	outs   dx,DWORD PTR ds:[rsi]
   14000aaf4:	jb     0x14000ab6a
   14000aaf6:	add    BYTE PTR [rax],al
   14000aaf8:	clc    
   14000aaf9:	add    DWORD PTR [rsi+0x74],ecx
   14000aafc:	push   rdx
   14000aafd:	gs jo  0x14000ab6c
   14000ab00:	jns    0x14000ab59
   14000ab02:	(bad)  
   14000ab03:	imul   esi,DWORD PTR [rdx+rdx*2+0x65],0x76696563
   14000ab0b:	gs push rax
   14000ab0d:	outs   dx,DWORD PTR ds:[rsi]
   14000ab0e:	jb     0x14000ab84
   14000ab10:	add    BYTE PTR [rax],al
   14000ab12:	clc    
   14000ab13:	add    BYTE PTR [rsi+0x74],cl
   14000ab16:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ab18:	outs   dx,BYTE PTR ds:[rsi]
   14000ab19:	outs   dx,BYTE PTR ds:[rsi]
   14000ab1a:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x6f]
   14000ab1f:	jb     0x14000ab95
   14000ab21:	add    ah,bh
   14000ab23:	add    DWORD PTR [rsi+0x74],ecx
   14000ab26:	push   rdx
   14000ab27:	gs jno 0x14000ab9f
   14000ab2a:	gs jae 0x14000aba1
   14000ab2d:	push   rdi
   14000ab2e:	(bad)  
   14000ab2f:	imul   esi,DWORD PTR [rdx+rdx*2+0x65],0x50796c70
   14000ab37:	outs   dx,DWORD PTR ds:[rsi]
   14000ab38:	jb     0x14000abae
   14000ab3a:	add    BYTE PTR [rax],al
   14000ab3c:	out    dx,al
   14000ab3d:	add    BYTE PTR [rsi+0x74],cl
   14000ab40:	rex.XB ins BYTE PTR es:[rdi],dx
   14000ab42:	outs   dx,DWORD PTR ds:[rsi]
   14000ab43:	jae    0x14000abaa
   14000ab45:	add    BYTE PTR [rax+rax*1+0x6341744e],dh
   14000ab4c:	movsxd esp,DWORD PTR [rbp+0x70]
   14000ab4f:	je     0x14000ab94
   14000ab51:	outs   dx,DWORD PTR ds:[rsi]
   14000ab52:	outs   dx,BYTE PTR ds:[rsi]
   14000ab53:	outs   dx,BYTE PTR ds:[rsi]
   14000ab54:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x6f]
   14000ab59:	jb     0x14000abcf
   14000ab5b:	add    BYTE PTR [rdi+0x1],ah
   14000ab5e:	rex.WRX je 0x14000abad
   14000ab61:	imul   esi,DWORD PTR [rbx+0x74],0x6f506e65
   14000ab68:	jb     0x14000abde
   14000ab6a:	add    BYTE PTR [rax],al
   14000ab6c:	add    QWORD PTR [r14+0x74],r9
   14000ab70:	rex.RX jb 0x14000abd8
   14000ab73:	gs push rsi
   14000ab75:	imul   esi,DWORD PTR [rdx+0x74],0x4d6c6175
   14000ab7c:	gs ins DWORD PTR es:[rdi],dx
   14000ab7e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab7f:	jb     0x14000abfa
   14000ab81:	add    BYTE PTR [rbp+0x3],ch
   14000ab84:	push   rdx
   14000ab85:	je     0x14000abf3
   14000ab87:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000ab89:	je     0x14000abf0
   14000ab8b:	jb     0x14000abd0
   14000ab8d:	jb     0x14000abf8
   14000ab8f:	je     0x14000abfa
   14000ab91:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ab94:	push   rbx
   14000ab95:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ab9a:	outs   dx,BYTE PTR ds:[rsi]
   14000ab9b:	add    BYTE PTR [rdx+rax*1],ah
   14000ab9e:	rex.WRX je 0x14000abf4
   14000aba1:	gs je  0x14000abed
   14000aba4:	outs   dx,BYTE PTR ds:[rsi]
   14000aba5:	outs   dx,WORD PTR ds:[rsi]
   14000aba7:	jb     0x14000ac16
   14000aba9:	(bad)  
   14000abaa:	je     0x14000ac15
   14000abac:	outs   dx,DWORD PTR ds:[rsi]
   14000abad:	outs   dx,BYTE PTR ds:[rsi]
   14000abae:	push   rsp
   14000abaf:	push   0x64616572
   14000abb4:	add    BYTE PTR [rax],al
   14000abb6:	pop    rdi
   14000abb7:	add    al,0x52
   14000abb9:	je     0x14000ac27
   14000abbb:	rex.WR
   14000abbc:	gs (bad) 
   14000abbe:	jbe    0x14000ac25
   14000abc0:	rex.XB jb 0x14000ac2c
   14000abc3:	je     0x14000ac2e
   14000abc5:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000abc8:	push   rbx
   14000abc9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000abce:	outs   dx,BYTE PTR ds:[rsi]
   14000abcf:	add    dh,al
   14000abd1:	add    dl,BYTE PTR [rdx+0x74]
   14000abd4:	ins    BYTE PTR es:[rdi],dx
   14000abd5:	rex.XB (bad) 
   14000abd7:	jo     0x14000ac4d
   14000abd9:	jne    0x14000ac4d
   14000abdb:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000abde:	outs   dx,BYTE PTR ds:[rsi]
   14000abdf:	je     0x14000ac46
   14000abe1:	js     0x14000ac57
   14000abe3:	add    BYTE PTR [rdi+0x4],dh
   14000abe6:	push   rdx
   14000abe7:	je     0x14000ac55
   14000abe9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000abeb:	outs   dx,DWORD PTR ds:[rsi]
   14000abec:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000abf0:	jne    0x14000ac60
   14000abf2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000abf6:	outs   dx,BYTE PTR ds:[rsi]
   14000abf7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000abf9:	je     0x14000ac6d
   14000abfb:	jns    0x14000abfd
   14000abfd:	add    BYTE PTR [rbx+0x6c745205],cl
   14000ac03:	push   rsi
   14000ac04:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000ac0b:	outs   dx,BYTE PTR ds:[rsi]
   14000ac0c:	ja     0x14000ac77
   14000ac0e:	outs   dx,BYTE PTR ds:[rsi]
   14000ac0f:	add    BYTE PTR fs:[rax],al
   14000ac12:	outs   dx,BYTE PTR ds:[rsi]
   14000ac13:	je     0x14000ac79
   14000ac15:	ins    BYTE PTR es:[rdi],dx
   14000ac16:	ins    BYTE PTR es:[rdi],dx
   14000ac17:	cs fs ins BYTE PTR es:[rdi],dx
   14000ac1a:	ins    BYTE PTR es:[rdi],dx
   14000ac1b:	add    bl,dl
   14000ac1d:	add    DWORD PTR [rdx+0x70],edx
   14000ac20:	movsxd edx,DWORD PTR [rbx+0x65]
   14000ac23:	jb     0x14000ac9b
   14000ac25:	gs jb  0x14000ac74
   14000ac28:	imul   esi,DWORD PTR [rbx+0x74],0xd8006e65
   14000ac2f:	add    DWORD PTR [rdx+0x70],edx
   14000ac32:	movsxd edx,DWORD PTR [rbx+0x65]
   14000ac35:	jb     0x14000acad
   14000ac37:	gs jb  0x14000ac8c
   14000ac3a:	imul   esi,DWORD PTR gs:[ebx+0x74],0x66497265
   14000ac43:	xor    eax,DWORD PTR [rax]
   14000ac45:	add    bh,ah
   14000ac47:	add    DWORD PTR [rdx+0x70],edx
   14000ac4a:	movsxd edx,DWORD PTR [rbx+0x65]
   14000ac4d:	jb     0x14000acc5
   14000ac4f:	gs jb  0x14000aca7
   14000ac52:	jae    0x14000acb9
   14000ac54:	push   rax
   14000ac55:	jb     0x14000acc6
   14000ac57:	je     0x14000accc
   14000ac59:	gs jno 0x14000aca1
   14000ac5c:	jo     0x14000acb5
   14000ac5e:	add    BYTE PTR [rax],al
   14000ac60:	add    BYTE PTR [r9+0x5f],cl
   14000ac64:	push   rdx
   14000ac65:	jo     0x14000acca
   14000ac67:	rex.WRB (bad) 
   14000ac69:	jo     0x14000acc2
   14000ac6b:	imul   ebp,DWORD PTR [rsi+0x33],0x61745332
   14000ac72:	je     0x14000ace9
   14000ac74:	jae    0x14000ac76
   14000ac76:	sub    al,BYTE PTR [rcx]
   14000ac78:	rex.WRX
   14000ac79:	fs jb  0x14000accf
   14000ac7c:	gs jb  0x14000acf5
   14000ac7f:	gs jb  0x14000acc5
   14000ac82:	(bad)  
   14000ac83:	ins    BYTE PTR es:[rdi],dx
   14000ac84:	ins    BYTE PTR es:[rdi],dx
   14000ac85:	xor    al,BYTE PTR [rax]
   14000ac87:	add    BYTE PTR [rbx],ch
   14000ac89:	add    DWORD PTR [rsi+0x64],ecx
   14000ac8c:	jb     0x14000ace1
   14000ac8e:	gs jb  0x14000ad07
   14000ac91:	gs jb  0x14000acd7
   14000ac94:	(bad)  
   14000ac95:	ins    BYTE PTR es:[rdi],dx
   14000ac96:	ins    BYTE PTR es:[rdi],dx
   14000ac97:	rex.B ins BYTE PTR es:[rdi],dx
   14000ac99:	ins    BYTE PTR es:[rdi],dx
   14000ac9a:	add    BYTE PTR [rax],al
   14000ac9c:	push   rdx
   14000ac9d:	push   rax
   14000ac9e:	rex.XB push r10
   14000aca0:	push   rsp
   14000aca1:	xor    al,0x2e
   14000aca3:	fs ins BYTE PTR es:[rdi],dx
   14000aca5:	ins    BYTE PTR es:[rdi],dx
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	add    DWORD PTR [rax],eax
   14000acaa:	push   rbx
   14000acab:	jae    0x14000ad1d
   14000acad:	imul   edx,DWORD PTR [rbx+0x72],0x696e4976
   14000acb4:	je     0x14000ad1f
   14000acb6:	(bad)  
   14000acb7:	ins    BYTE PTR es:[rdi],dx
   14000acb8:	imul   edi,DWORD PTR [rdx+0x65],0x53000000
   14000acbf:	jae    0x14000ad31
   14000acc1:	imul   edx,DWORD PTR [rbx+0x72],0x696c4376
   14000acc8:	outs   dx,BYTE PTR gs:[rsi]
   14000acca:	je     0x14000ad0f
   14000accc:	(bad)  
   14000accd:	ins    BYTE PTR es:[rdi],dx
   14000acce:	ins    BYTE PTR es:[rdi],dx
   14000accf:	(bad)  
   14000acd1:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000acd4:	add    al,BYTE PTR [rax]
   14000acd6:	push   rbx
   14000acd7:	jae    0x14000ad49
   14000acd9:	imul   esi,DWORD PTR [rdx+0x41],0x69757163
   14000ace0:	jb     0x14000ad47
   14000ace2:	rex.XB jb 0x14000ad4a
   14000ace5:	fs outs dx,BYTE PTR gs:[rsi]
   14000ace8:	je     0x14000ad53
   14000acea:	(bad)  
   14000aceb:	ins    BYTE PTR es:[rdi],dx
   14000acec:	jae    0x14000ad36
   14000acee:	(bad)  
   14000acef:	outs   dx,BYTE PTR ds:[rsi]
   14000acf0:	fs ins BYTE PTR es:[rdi],dx
   14000acf2:	add    BYTE PTR gs:[rax+rax*1],al
   14000acf6:	push   rbx
   14000acf7:	jae    0x14000ad69
   14000acf9:	imul   esi,DWORD PTR [rdx+0x50],0x65636f72
   14000ad00:	jae    0x14000ad75
   14000ad02:	push   rbx
   14000ad03:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000ad07:	imul   esi,DWORD PTR [rcx+rdi*2+0x43],0x65746e6f
   14000ad0f:	js     0x14000ad85
   14000ad11:	add    BYTE PTR [rbx],al
   14000ad13:	add    BYTE PTR [rbx+0x73],dl
   14000ad16:	jo     0x14000ad81
   14000ad18:	jb     0x14000ad5e
   14000ad1a:	gs ins BYTE PTR es:[rdi],dx
   14000ad1c:	gs je  0x14000ad84
   14000ad1f:	push   rbx
   14000ad20:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000ad24:	imul   esi,DWORD PTR [rcx+rdi*2+0x43],0x65746e6f
   14000ad2c:	js     0x14000ada2
   14000ad2e:	add    BYTE PTR [rax],al
   14000ad30:	push   rbx
   14000ad31:	jae    0x14000ada3
   14000ad33:	imul   edx,DWORD PTR [rbx+0x72],0x6c642e76
   14000ad3a:	ins    BYTE PTR es:[rdi],dx
   14000ad3b:	add    BYTE PTR [rax+rax*1],cl
   14000ad3e:	push   rbx
   14000ad3f:	gs je  0x14000ad87
   14000ad42:	jb     0x14000adb6
   14000ad44:	outs   dx,DWORD PTR ds:[rsi]
   14000ad45:	jb     0x14000ad94
   14000ad47:	outs   dx,DWORD PTR ds:[rsi]
   14000ad48:	fs add BYTE PTR gs:[rax],al
   14000ad4c:	lldt   WORD PTR [rbx+0x65]
   14000ad50:	je     0x14000ada7
   14000ad52:	outs   dx,BYTE PTR ds:[rsi]
   14000ad53:	push   0x6c646e61
   14000ad58:	gs fs rex.RB js 0x14000adc0
   14000ad5d:	gs jo  0x14000add4
   14000ad60:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000ad67:	gs jb  0x14000ad6a
   14000ad6a:	add    eax,0x74654700
   14000ad6f:	rex.WR (bad) 
   14000ad71:	jae    0x14000ade7
   14000ad73:	rex.RB jb 0x14000ade8
   14000ad76:	outs   dx,DWORD PTR ds:[rsi]
   14000ad77:	jb     0x14000ad79
   14000ad79:	add    BYTE PTR [rip+0x74655300],cl        # 0x1b466007f
   14000ad7f:	rex.WR (bad) 
   14000ad81:	jae    0x14000adf7
   14000ad83:	rex.RB jb 0x14000adf8
   14000ad86:	outs   dx,DWORD PTR ds:[rsi]
   14000ad87:	jb     0x14000ad89
   14000ad89:	add    BYTE PTR [rcx],dl
   14000ad8b:	add    BYTE PTR [rbp+0x6e],dl
   14000ad8e:	push   0x6c646e61
   14000ad93:	gs fs rex.RB js 0x14000adfb
   14000ad98:	gs jo  0x14000ae0f
   14000ad9b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000ada2:	gs jb  0x14000ada5
   14000ada5:	add    BYTE PTR [rcx+0x70],ah
   14000ada8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e211f
   14000adb2:	outs   dx,DWORD PTR ds:[rsi]
   14000adb3:	jb     0x14000ae1a
   14000adb5:	sub    eax,0x6f727265
   14000adba:	jb     0x14000ae24
   14000adbc:	(bad)  
   14000adbd:	outs   dx,BYTE PTR ds:[rsi]
   14000adbe:	fs ins BYTE PTR es:[rdi],dx
   14000adc0:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000adc7:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64dbfe
   14000adcd:	ins    BYTE PTR es:[rdi],dx
   14000adce:	add    BYTE PTR [rax],al
   14000add0:	add    BYTE PTR [rax],al
   14000add2:	rex.XB ins BYTE PTR es:[rdi],dx
   14000add4:	outs   dx,DWORD PTR ds:[rsi]
   14000add5:	jae    0x14000ae3c
   14000add7:	rex.W (bad) 
   14000add9:	outs   dx,BYTE PTR ds:[rsi]
   14000adda:	fs ins BYTE PTR es:[rdi],dx
   14000addc:	add    BYTE PTR gs:[rdx],al
   14000addf:	add    BYTE PTR [rbp+rsi*2+0x70],al
   14000ade3:	ins    BYTE PTR es:[rdi],dx
   14000ade4:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   14000adeb:	outs   dx,BYTE PTR ds:[rsi]
   14000adec:	fs ins BYTE PTR es:[rdi],dx
   14000adee:	add    BYTE PTR gs:[rcx+0x70],ah
   14000adf2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2169
   14000adfc:	outs   dx,DWORD PTR ds:[rsi]
   14000adfd:	jb     0x14000ae64
   14000adff:	sub    eax,0x646e6168
   14000ae04:	ins    BYTE PTR es:[rdi],dx
   14000ae05:	gs sub eax,0x312d316c
   14000ae0b:	sub    eax,0x6c642e30
   14000ae10:	ins    BYTE PTR es:[rdi],dx
   14000ae11:	add    BYTE PTR [rax+rax*1],al
   14000ae14:	rex.R
   14000ae15:	gs jbe 0x14000ae81
   14000ae18:	movsxd esp,DWORD PTR [rbp+0x49]
   14000ae1b:	outs   dx,DWORD PTR ds:[rsi]
   14000ae1c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ae1e:	outs   dx,BYTE PTR ds:[rsi]
   14000ae1f:	je     0x14000ae93
   14000ae21:	outs   dx,DWORD PTR ds:[rsi]
   14000ae22:	ins    BYTE PTR es:[rdi],dx
   14000ae23:	add    BYTE PTR [rcx+0x70],ah
   14000ae26:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e219d
   14000ae30:	outs   dx,DWORD PTR ds:[rsi]
   14000ae31:	jb     0x14000ae98
   14000ae33:	sub    eax,0x6c2d6f69
   14000ae38:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31db6f
   14000ae3e:	fs ins BYTE PTR es:[rdi],dx
   14000ae40:	ins    BYTE PTR es:[rdi],dx
   14000ae41:	add    BYTE PTR [rdi],dl
   14000ae43:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000ae47:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000ae50:	js     0x14000aea9
   14000ae52:	add    BYTE PTR [rax],al
   14000ae54:	adc    al,0x0
   14000ae56:	rex.RXB
   14000ae57:	gs je  0x14000aeaa
   14000ae5a:	jb     0x14000aecb
   14000ae5c:	movsxd eax,DWORD PTR [rcx+0x64]
   14000ae5f:	fs jb  0x14000aec7
   14000ae62:	jae    0x14000aed7
   14000ae64:	add    BYTE PTR [rax],al
   14000ae66:	(bad)  
   14000ae67:	jo     0x14000aed2
   14000ae69:	sub    eax,0x772d736d
   14000ae6e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ae75:	sub    eax,0x7262696c
   14000ae7a:	(bad)  
   14000ae7b:	jb     0x14000aef6
   14000ae7d:	ins    BYTE PTR es:[rdi],dx
   14000ae7e:	outs   dx,DWORD PTR ds:[rsi]
   14000ae7f:	(bad)  
   14000ae80:	fs gs jb 0x14000aeb1
   14000ae84:	ins    BYTE PTR es:[rdi],dx
   14000ae85:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30dbbd
   14000ae8b:	fs ins BYTE PTR es:[rdi],dx
   14000ae8d:	ins    BYTE PTR es:[rdi],dx
   14000ae8e:	add    BYTE PTR [rax],al
   14000ae90:	and    eax,DWORD PTR [rax]
   14000ae92:	push   rdx
   14000ae93:	gs addr32 push rcx
   14000ae96:	jne    0x14000aefd
   14000ae98:	jb     0x14000af13
   14000ae9a:	push   rsi
   14000ae9b:	(bad)  
   14000ae9c:	ins    BYTE PTR es:[rdi],dx
   14000ae9d:	jne    0x14000af04
   14000ae9f:	rex.RB js 0x14000aef9
   14000aea2:	add    BYTE PTR [rax],al
   14000aea4:	(bad)  
   14000aea5:	add    BYTE PTR [rdx+0x65],dl
   14000aea8:	addr32 rex.WRXB jo 0x14000af11
   14000aeac:	outs   dx,BYTE PTR ds:[rsi]
   14000aead:	rex.WXB
   14000aeae:	gs jns 0x14000aef6
   14000aeb1:	js     0x14000af0a
   14000aeb3:	add    BYTE PTR [rsi],cl
   14000aeb5:	add    BYTE PTR [rdx+0x65],dl
   14000aeb8:	rex.RB outs dx,BYTE PTR ds:[esi]
   14000aebb:	jne    0x14000af2a
   14000aebd:	rex.WXB
   14000aebe:	gs jns 0x14000af06
   14000aec1:	js     0x14000af1a
   14000aec3:	add    BYTE PTR [rax],al
   14000aec5:	add    BYTE PTR [rdx+0x65],dl
   14000aec8:	rex.XB ins BYTE PTR es:[edi],dx
   14000aecb:	outs   dx,DWORD PTR ds:[rsi]
   14000aecc:	jae    0x14000af33
   14000aece:	rex.WXB
   14000aecf:	gs jns 0x14000aed2
   14000aed2:	(bad)  
   14000aed3:	jo     0x14000af3e
   14000aed5:	sub    eax,0x772d736d
   14000aeda:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000aee1:	sub    eax,0x69676572
   14000aee6:	jae    0x14000af5c
   14000aee8:	jb     0x14000af63
   14000aeea:	sub    eax,0x312d316c
   14000aeef:	sub    eax,0x6c642e30
   14000aef4:	ins    BYTE PTR es:[rdi],dx
   14000aef5:	add    BYTE PTR [rax],cl
   14000aef7:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14000aefb:	(bad)  
   14000aefc:	ins    BYTE PTR es:[rdi],dx
   14000aefd:	rex.B ins BYTE PTR es:[rdi],dx
   14000aeff:	ins    BYTE PTR es:[rdi],dx
   14000af00:	outs   dx,DWORD PTR ds:[rsi]
   14000af01:	movsxd eax,DWORD PTR [rax]
   14000af03:	add    BYTE PTR [rdx],cl
   14000af05:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14000af09:	(bad)  
   14000af0a:	ins    BYTE PTR es:[rdi],dx
   14000af0b:	rex.RX jb 0x14000af73
   14000af0e:	add    BYTE PTR gs:[rcx+0x70],ah
   14000af12:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2289
   14000af1c:	outs   dx,DWORD PTR ds:[rsi]
   14000af1d:	jb     0x14000af84
   14000af1f:	sub    eax,0x70616568
   14000af24:	sub    eax,0x6f73626f
   14000af29:	ins    BYTE PTR es:[rdi],dx
   14000af2a:	gs je  0x14000af92
   14000af2d:	sub    eax,0x312d316c
   14000af32:	sub    eax,0x6c642e30
   14000af37:	ins    BYTE PTR es:[rdi],dx
   14000af38:	add    BYTE PTR [rax],al
   14000af3a:	or     eax,DWORD PTR [rax]
   14000af3c:	rex.RXB
   14000af3d:	gs je  0x14000af85
   14000af40:	outs   dx,BYTE PTR ds:[rsi]
   14000af41:	jbe    0x14000afac
   14000af43:	jb     0x14000afb4
   14000af45:	outs   dx,BYTE PTR ds:[rsi]
   14000af46:	ins    DWORD PTR es:[rdi],dx
   14000af47:	outs   dx,BYTE PTR gs:[rsi]
   14000af49:	je     0x14000afa1
   14000af4b:	(bad)  
   14000af4c:	jb     0x14000afb7
   14000af4e:	(bad)  
   14000af4f:	(bad)  
   14000af50:	ins    BYTE PTR es:[rdi],dx
   14000af51:	gs push rdi
   14000af53:	add    BYTE PTR [rdx],bl
   14000af55:	add    BYTE PTR [rdi+0x70],cl
   14000af58:	outs   dx,BYTE PTR gs:[rsi]
   14000af5a:	push   rax
   14000af5b:	jb     0x14000afcc
   14000af5d:	movsxd esp,DWORD PTR [rbp+0x73]
   14000af60:	jae    0x14000afb6
   14000af62:	outs   dx,DWORD PTR ds:[rsi]
   14000af63:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000af67:	add    BYTE PTR [rdx],cl
   14000af69:	add    BYTE PTR [rdi+0x65],al
   14000af6c:	je     0x14000afb1
   14000af6e:	jne    0x14000afe2
   14000af70:	jb     0x14000afd7
   14000af72:	outs   dx,BYTE PTR ds:[rsi]
   14000af73:	je     0x14000afc5
   14000af75:	jb     0x14000afe6
   14000af77:	movsxd esp,DWORD PTR [rbp+0x73]
   14000af7a:	jae    0x14000af7c
   14000af7c:	adc    al,BYTE PTR [rax]
   14000af7e:	push   rbx
   14000af7f:	gs je  0x14000afc7
   14000af82:	outs   dx,BYTE PTR ds:[rsi]
   14000af83:	jbe    0x14000afee
   14000af85:	jb     0x14000aff6
   14000af87:	outs   dx,BYTE PTR ds:[rsi]
   14000af88:	ins    DWORD PTR es:[rdi],dx
   14000af89:	outs   dx,BYTE PTR gs:[rsi]
   14000af8b:	je     0x14000afe3
   14000af8d:	(bad)  
   14000af8e:	jb     0x14000aff9
   14000af90:	(bad)  
   14000af91:	(bad)  
   14000af92:	ins    BYTE PTR es:[rdi],dx
   14000af93:	gs push rdi
   14000af95:	add    BYTE PTR [rdi],bl
   14000af97:	add    BYTE PTR [rbx+0x65],dl
   14000af9a:	je     0x14000afe1
   14000af9c:	jbe    0x14000b003
   14000af9e:	outs   dx,BYTE PTR ds:[rsi]
   14000af9f:	je     0x14000afa1
   14000afa1:	add    BYTE PTR [rdx],bh
   14000afa3:	add    BYTE PTR [rdi+0x65],al
   14000afa6:	je     0x14000affc
   14000afa8:	outs   dx,DWORD PTR ds:[rsi]
   14000afa9:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000afad:	outs   dx,BYTE PTR ds:[rsi]
   14000afae:	outs   dx,WORD PTR ds:[rsi]
   14000afb0:	jb     0x14000b01f
   14000afb2:	(bad)  
   14000afb3:	je     0x14000b01e
   14000afb5:	outs   dx,DWORD PTR ds:[rsi]
   14000afb6:	outs   dx,BYTE PTR ds:[rsi]
   14000afb7:	add    BYTE PTR [rax],cl
   14000afb9:	add    BYTE PTR [rbp+0x78],al
   14000afbc:	imul   esi,DWORD PTR [rsp+rdx*2+0x68],0x64616572
   14000afc4:	add    BYTE PTR [rax],al
   14000afc6:	(bad)  
   14000afc7:	add    BYTE PTR [rbx+0x72],al
   14000afca:	gs (bad) 
   14000afcc:	je     0x14000b033
   14000afce:	rex.RB jbe 0x14000b036
   14000afd1:	outs   dx,BYTE PTR ds:[rsi]
   14000afd2:	je     0x14000b02b
   14000afd4:	add    BYTE PTR [rax],al
   14000afd6:	adc    eax,0x65704f00
   14000afdb:	outs   dx,BYTE PTR ds:[rsi]
   14000afdc:	rex.RB jbe 0x14000b044
   14000afdf:	outs   dx,BYTE PTR ds:[rsi]
   14000afe0:	je     0x14000b039
   14000afe2:	add    BYTE PTR [rax],al
   14000afe4:	add    eax,0x65724300
   14000afe9:	(bad)  
   14000afea:	je     0x14000b051
   14000afec:	push   rsp
   14000afed:	push   0x64616572
   14000aff2:	add    BYTE PTR [rax],al
   14000aff4:	add    DWORD PTR [rax],eax
   14000aff6:	rex.XB (bad) 
   14000aff8:	outs   dx,BYTE PTR ds:[rsi]
   14000aff9:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000affc:	push   rsp
   14000affd:	push   0x64616572
   14000b002:	jo     0x14000b073
   14000b004:	outs   dx,DWORD PTR ds:[rsi]
   14000b005:	ins    BYTE PTR es:[rdi],dx
   14000b006:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b008:	add    BYTE PTR [rax],al
   14000b00a:	add    BYTE PTR cs:[rsp+rbp*2+0x73],dl
   14000b00f:	rex.RXB
   14000b010:	gs je  0x14000b069
   14000b013:	(bad)  
   14000b014:	ins    BYTE PTR es:[rdi],dx
   14000b015:	jne    0x14000b07c
   14000b017:	add    BYTE PTR [rsi],bl
   14000b019:	add    BYTE PTR [rbx+0x74],dl
   14000b01c:	(bad)  
   14000b01d:	jb     0x14000b093
   14000b01f:	push   rsp
   14000b020:	push   0x64616572
   14000b025:	jo     0x14000b096
   14000b027:	outs   dx,DWORD PTR ds:[rsi]
   14000b028:	ins    BYTE PTR es:[rdi],dx
   14000b029:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b02b:	add    BYTE PTR [rdi],ch
   14000b02d:	add    BYTE PTR [rsp+rbp*2+0x73],dl
   14000b031:	push   rbx
   14000b032:	gs je  0x14000b08b
   14000b035:	(bad)  
   14000b036:	ins    BYTE PTR es:[rdi],dx
   14000b037:	jne    0x14000b09e
   14000b039:	add    BYTE PTR [rcx],cl
   14000b03b:	add    BYTE PTR [rbx+0x72],al
   14000b03e:	gs (bad) 
   14000b040:	je     0x14000b0a7
   14000b042:	push   rsp
   14000b043:	push   0x64616572
   14000b048:	jo     0x14000b0b9
   14000b04a:	outs   dx,DWORD PTR ds:[rsi]
   14000b04b:	ins    BYTE PTR es:[rdi],dx
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	sbb    BYTE PTR [rax],al
   14000b050:	push   rbx
   14000b051:	gs je  0x14000b0a8
   14000b054:	push   0x64616572
   14000b059:	jo     0x14000b0ca
   14000b05b:	outs   dx,DWORD PTR ds:[rsi]
   14000b05c:	ins    BYTE PTR es:[rdi],dx
   14000b05d:	push   rsp
   14000b05e:	push   0x64616572
   14000b063:	rex.WRB (bad) 
   14000b065:	js     0x14000b0d0
   14000b067:	ins    DWORD PTR es:[rdi],dx
   14000b068:	jne    0x14000b0d7
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	(bad)  
   14000b06d:	add    BYTE PTR [rdi+0x65],al
   14000b070:	je     0x14000b0c5
   14000b072:	jns    0x14000b0e7
   14000b074:	je     0x14000b0db
   14000b076:	ins    DWORD PTR es:[rdi],dx
   14000b077:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b079:	outs   dx,WORD PTR ds:[rsi]
   14000b07b:	add    BYTE PTR [rax+rax*1],ch
   14000b07e:	push   rsp
   14000b07f:	ins    BYTE PTR es:[rdi],dx
   14000b080:	jae    0x14000b0c3
   14000b082:	ins    BYTE PTR es:[rdi],dx
   14000b083:	ins    BYTE PTR es:[rdi],dx
   14000b084:	outs   dx,DWORD PTR ds:[rsi]
   14000b085:	movsxd eax,DWORD PTR [rax]
   14000b087:	add    BYTE PTR [rax],ah
   14000b089:	add    BYTE PTR [rdx+rsi*2+0x79],dl
   14000b08d:	push   rbx
   14000b08e:	jne    0x14000b0f2
   14000b090:	ins    DWORD PTR es:[rdi],dx
   14000b091:	imul   esi,DWORD PTR [rsp+rdx*2+0x68],0x64616572
   14000b099:	jo     0x14000b10a
   14000b09b:	outs   dx,DWORD PTR ds:[rsi]
   14000b09c:	ins    BYTE PTR es:[rdi],dx
   14000b09d:	rex.XB (bad) 
   14000b09f:	ins    BYTE PTR es:[rdi],dx
   14000b0a0:	ins    BYTE PTR es:[rdi],dx
   14000b0a1:	(bad)  
   14000b0a3:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b0a6:	or     eax,DWORD PTR [rax]
   14000b0a8:	rex.XB jb 0x14000b110
   14000b0ab:	(bad)  
   14000b0ac:	je     0x14000b113
   14000b0ae:	push   rsp
   14000b0af:	push   0x64616572
   14000b0b4:	jo     0x14000b125
   14000b0b6:	outs   dx,DWORD PTR ds:[rsi]
   14000b0b7:	ins    BYTE PTR es:[rdi],dx
   14000b0b8:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	add    BYTE PTR [rax],al
   14000b0be:	push   rcx
   14000b0bf:	jne    0x14000b126
   14000b0c1:	jb     0x14000b13c
   14000b0c3:	push   rax
   14000b0c4:	gs jb  0x14000b12d
   14000b0c7:	outs   dx,DWORD PTR ds:[rsi]
   14000b0c8:	jb     0x14000b137
   14000b0ca:	(bad)  
   14000b0cb:	outs   dx,BYTE PTR ds:[rsi]
   14000b0cc:	movsxd esp,DWORD PTR [rbp+0x43]
   14000b0cf:	outs   dx,DWORD PTR ds:[rsi]
   14000b0d0:	jne    0x14000b140
   14000b0d2:	je     0x14000b139
   14000b0d4:	jb     0x14000b0d6
   14000b0d6:	or     eax,DWORD PTR [rax]
   14000b0d8:	rex.RXB
   14000b0d9:	gs je  0x14000b11f
   14000b0dc:	jne    0x14000b150
   14000b0de:	jb     0x14000b145
   14000b0e0:	outs   dx,BYTE PTR ds:[rsi]
   14000b0e1:	je     0x14000b133
   14000b0e3:	jb     0x14000b154
   14000b0e5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b0e8:	jae    0x14000b133
   14000b0ea:	add    BYTE PTR fs:[rip+0x74654700],cl        # 0x1b465f7f1
   14000b0f1:	rex.XB jne 0x14000b166
   14000b0f4:	jb     0x14000b15b
   14000b0f6:	outs   dx,BYTE PTR ds:[rsi]
   14000b0f7:	je     0x14000b14d
   14000b0f9:	push   0x64616572
   14000b0fe:	rex.WB
   14000b0ff:	add    BYTE PTR fs:[rax],al
   14000b102:	or     al,BYTE PTR [rax]
   14000b104:	rex.RXB
   14000b105:	gs je  0x14000b15b
   14000b108:	jns    0x14000b17d
   14000b10a:	je     0x14000b171
   14000b10c:	ins    DWORD PTR es:[rdi],dx
   14000b10d:	push   rsp
   14000b10e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000b115:	ins    BYTE PTR es:[rdi],dx
   14000b116:	gs push rsp
   14000b118:	imul   ebp,DWORD PTR [rbp+0x65],0x47000d00
   14000b11f:	gs je  0x14000b176
   14000b122:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000b129:	je     0x14000b12b
   14000b12b:	add    BYTE PTR [rdx],ch
   14000b12d:	add    BYTE PTR [rbp+riz*2+0x72],dl
   14000b131:	ins    DWORD PTR es:[rdi],dx
   14000b132:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b139:	outs   dx,DWORD PTR ds:[rsi]
   14000b13a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b13d:	jae    0x14000b13f
   14000b13f:	add    BYTE PTR [rcx+0x70],ah
   14000b142:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e24b9
   14000b14c:	outs   dx,DWORD PTR ds:[rsi]
   14000b14d:	jb     0x14000b1b4
   14000b14f:	sub    eax,0x636f7270
   14000b154:	gs jae 0x14000b1ca
   14000b157:	outs   dx,BYTE PTR gs:[rsi]
   14000b159:	jbe    0x14000b1c4
   14000b15b:	jb     0x14000b1cc
   14000b15d:	outs   dx,BYTE PTR ds:[rsi]
   14000b15e:	ins    DWORD PTR es:[rdi],dx
   14000b15f:	outs   dx,BYTE PTR gs:[rsi]
   14000b161:	je     0x14000b190
   14000b163:	ins    BYTE PTR es:[rdi],dx
   14000b164:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30de9b
   14000b16a:	fs ins BYTE PTR es:[rdi],dx
   14000b16c:	ins    BYTE PTR es:[rdi],dx
   14000b16d:	add    BYTE PTR [rcx+0x70],ah
   14000b170:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e24e7
   14000b17a:	outs   dx,DWORD PTR ds:[rsi]
   14000b17b:	jb     0x14000b1e2
   14000b17d:	sub    eax,0x636f7270
   14000b182:	gs jae 0x14000b1f8
   14000b185:	je     0x14000b1ef
   14000b187:	jb     0x14000b1ee
   14000b189:	(bad)  
   14000b18a:	fs jae 0x14000b1ba
   14000b18d:	ins    BYTE PTR es:[rdi],dx
   14000b18e:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30dec5
   14000b194:	fs ins BYTE PTR es:[rdi],dx
   14000b196:	ins    BYTE PTR es:[rdi],dx
   14000b197:	add    BYTE PTR [rcx+0x70],ah
   14000b19a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2511
   14000b1a4:	outs   dx,DWORD PTR ds:[rsi]
   14000b1a5:	jb     0x14000b20c
   14000b1a7:	sub    eax,0x636e7973
   14000b1ac:	push   0x2d316c2d
   14000b1b1:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64dfe7
   14000b1b7:	ins    BYTE PTR es:[rdi],dx
   14000b1b8:	add    BYTE PTR [rax],al
   14000b1ba:	(bad)  
   14000b1bb:	jo     0x14000b226
   14000b1bd:	sub    eax,0x772d736d
   14000b1c2:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   14000b1c9:	jb     0x14000b234
   14000b1cb:	je     0x14000b246
   14000b1cd:	sub    eax,0x65736162
   14000b1d2:	sub    eax,0x312d316c
   14000b1d7:	sub    eax,0x6c642e30
   14000b1dc:	ins    BYTE PTR es:[rdi],dx
   14000b1dd:	add    BYTE PTR [rcx+0x70],ah
   14000b1e0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2557
   14000b1ea:	outs   dx,DWORD PTR ds:[rsi]
   14000b1eb:	jb     0x14000b252
   14000b1ed:	sub    eax,0x65726874
   14000b1f2:	(bad)  
   14000b1f3:	fs jo  0x14000b265
   14000b1f6:	outs   dx,DWORD PTR ds:[rsi]
   14000b1f7:	ins    BYTE PTR es:[rdi],dx
   14000b1f8:	sub    eax,0x322d316c
   14000b1fd:	sub    eax,0x6c642e30
   14000b202:	ins    BYTE PTR es:[rdi],dx
   14000b203:	add    BYTE PTR [rcx+0x70],ah
   14000b206:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e257d
   14000b210:	outs   dx,DWORD PTR ds:[rsi]
   14000b211:	jb     0x14000b278
   14000b213:	sub    eax,0x69737973
   14000b218:	outs   dx,BYTE PTR ds:[rsi]
   14000b219:	outs   dx,WORD PTR ds:[rsi]
   14000b21b:	sub    eax,0x312d316c
   14000b220:	sub    eax,0x6c642e30
   14000b225:	ins    BYTE PTR es:[rdi],dx
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	(bad)  
   14000b229:	jo     0x14000b294
   14000b22b:	sub    eax,0x772d736d
   14000b230:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b237:	sub    eax,0x666f7270
   14000b23c:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000b244:	sub    eax,0x6c642e30
   14000b249:	ins    BYTE PTR es:[rdi],dx
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	(bad)  
   14000b24d:	add    BYTE PTR [rdi+0x65],dl
   14000b250:	jb     0x14000b2a5
   14000b252:	gs je  0x14000b29b
   14000b255:	ins    BYTE PTR es:[rdi],dx
   14000b256:	(bad)  
   14000b257:	addr32 jae 0x14000b25a
   14000b25a:	(bad)  
   14000b25b:	jo     0x14000b2c6
   14000b25d:	sub    eax,0x772d736d
   14000b262:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b269:	sub    eax,0x646e6977
   14000b26e:	outs   dx,DWORD PTR ds:[rsi]
   14000b26f:	ja     0x14000b2e4
   14000b271:	gs jb  0x14000b2e6
   14000b274:	outs   dx,DWORD PTR ds:[rsi]
   14000b275:	jb     0x14000b2e9
   14000b277:	gs jo  0x14000b2e9
   14000b27a:	jb     0x14000b2f0
   14000b27c:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000b283:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64e0b9
   14000b289:	ins    BYTE PTR es:[rdi],dx
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	xor    eax,DWORD PTR [rax]
   14000b28e:	ins    DWORD PTR es:[rdi],dx
   14000b28f:	gs ins DWORD PTR es:[rdi],dx
   14000b291:	movsxd esi,DWORD PTR [rax+0x79]
   14000b294:	add    BYTE PTR [rax],al
   14000b296:	(bad)  
   14000b297:	add    BYTE PTR [rbp+0x65],ch
   14000b29a:	ins    DWORD PTR es:[rdi],dx
   14000b29b:	jae    0x14000b302
   14000b29d:	je     0x14000b29f
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	int    0x5d
   14000c00a:	and    dl,dl
   14000c00c:	data16 (bad) 
   14000c00e:	(bad)  
   14000c00f:	(bad)  
   14000c010:	(bad)  
   14000c011:	(bad)  
   14000c012:	(bad)  
   14000c013:	inc    DWORD PTR [rax]
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	add    al,al
   14000c019:	adc    eax,0x14000
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	push   rax
   14000c021:	adc    al,0x0
   14000c023:	rex add DWORD PTR [rax],eax
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	sar    BYTE PTR [rbx],0x0
   14000c02b:	rex add DWORD PTR [rax],eax
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	adc    BYTE PTR [rbx],dl
   14000c032:	add    BYTE PTR [rax+0x1],al
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax+rax*1],al
	...
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	jo     0x14000c00a
   14000c04a:	add    BYTE PTR [rax+0x1],al
	...
   14000c065:	add    BYTE PTR [rax],al
   14000c067:	add    BYTE PTR [rcx],al
   14000c069:	add    BYTE PTR [rax],al
   14000c06b:	add    BYTE PTR [rax],al
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rax-0x40],al
   14000c072:	add    BYTE PTR [rax+0x1],al
   14000c075:	add    BYTE PTR [rax],al
   14000c077:	add    bh,bh
   14000c079:	(bad)  
   14000c07a:	(bad)  
   14000c07b:	inc    DWORD PTR [rax]
	...
   14000c091:	add    BYTE PTR [rax],al
   14000c093:	(bad)  
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	adc    BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	push   rbx
   14000d005:	adc    BYTE PTR [rax],al
   14000d007:	add    BYTE PTR [rax-0x69],al
   14000d00a:	add    BYTE PTR [rax],al
   14000d00c:	(bad)  
   14000d00d:	adc    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rbx+0x4c000010],ah
   14000d015:	xchg   edi,eax
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	mov    al,0x10
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	and    edx,DWORD PTR [rcx]
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	push   0x30000097
   14000d025:	adc    DWORD PTR [rax],eax
   14000d027:	add    BYTE PTR [rbp+0x11],ah
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	adc    BYTE PTR [rdi+0x11700000],0x0
   14000d033:	add    BYTE PTR [rdx+0x40000011],dh
   14000d039:	xchg   edi,eax
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	rcl    BYTE PTR [rcx],0x0
   14000d03f:	add    BYTE PTR [rdx+rdx*1+0x0],bl
   14000d043:	add    BYTE PTR [rax+0x70000097],cl
   14000d049:	adc    al,BYTE PTR [rax]
   14000d04b:	add    BYTE PTR [rcx],al
   14000d04d:	adc    eax,DWORD PTR [rax]
   14000d04f:	add    BYTE PTR [rax+0x10000097],cl
   14000d055:	adc    eax,DWORD PTR [rax]
   14000d057:	add    BYTE PTR [rax+0x13],dl
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	movabs al,ds:0xbc00001350000097
   14000d065:	adc    eax,DWORD PTR [rax]
   14000d067:	add    BYTE PTR [rdi+rdx*4+0x13bc0000],dh
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	(bad)  
   14000d071:	adc    eax,DWORD PTR [rax]
   14000d073:	add    al,cl
   14000d075:	xchg   edi,eax
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	loopne 0x14000d08d
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	adc    al,0x0
   14000d07f:	add    ah,bh
   14000d081:	xchg   edi,eax
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	push   rax
   14000d085:	adc    al,0x0
   14000d087:	add    BYTE PTR [rsi+0x10000014],dl
   14000d08d:	cwde   
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	movabs al,ds:0x18000014e0000014
   14000d099:	cwde   
   14000d09a:	add    BYTE PTR [rax],al
   14000d09c:	lock adc al,0x0
   14000d09f:	add    BYTE PTR [rdx*1-0x67c80000],ch
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	rex adc eax,0x15b20000
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	push   0xffffffffc0000097
   14000d0b5:	adc    eax,0x16210000
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	push   0x30000098
   14000d0c1:	(bad)  
   14000d0c2:	add    BYTE PTR [rax],al
   14000d0c4:	mov    bl,0x16
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	sbb    BYTE PTR [rax+0x17300000],0x0
   14000d0cf:	add    dl,dh
   14000d0d1:	sbb    BYTE PTR [rax],al
   14000d0d3:	add    BYTE PTR [rax+0x98],dl
   14000d0d9:	sbb    DWORD PTR [rax],eax
   14000d0db:	add    BYTE PTR [rip+0xffffffffa8000019],bl        # 0xe800d0fa
   14000d0e1:	cwde   
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	sbb    eax,0x5a000019
   14000d0e9:	sbb    DWORD PTR [rax],eax
   14000d0eb:	add    BYTE PTR [rax+rbx*4+0x195a0000],dh
   14000d0f2:	add    BYTE PTR [rax],al
   14000d0f4:	sbb    DWORD PTR gs:[rax],eax
   14000d0f7:	add    al,cl
   14000d0f9:	cwde   
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	jo     0x14000d117
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	lea    ebx,[rcx]
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	in     al,dx
   14000d105:	cwde   
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	lea    ebx,[rcx]
   14000d10a:	add    BYTE PTR [rax],al
   14000d10c:	enter  0x19,0x0
   14000d110:	clc    
   14000d111:	cwde   
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	enter  0x19,0x0
   14000d118:	rcr    DWORD PTR [rcx],cl
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	or     al,0x99
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	loopne 0x14000d13b
   14000d122:	add    BYTE PTR [rax],al
   14000d124:	(bad)  
   14000d125:	sbb    al,BYTE PTR [rax]
   14000d127:	add    BYTE PTR [rax],dh
   14000d129:	cdq    
   14000d12a:	add    BYTE PTR [rax],al
   14000d12c:	sbb    al,BYTE PTR [rax]
   14000d12f:	add    BYTE PTR [rdx+0x1b],dl
   14000d132:	add    BYTE PTR [rax],al
   14000d134:	cqo    
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	(bad)  
   14000d139:	sbb    eax,DWORD PTR [rax]
   14000d13b:	add    BYTE PTR [rsi+0x1b],bh
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	fs cdq 
   14000d142:	add    BYTE PTR [rax],al
   14000d144:	jle    0x14000d161
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	movabs ds:0xa20000996c00001c,al
   14000d151:	sbb    al,0x0
   14000d153:	add    BYTE PTR [rax-0x7fffffe4],ch
   14000d159:	cdq    
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	mov    al,0x1c
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	and    al,0x1d
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	mov    ah,0x99
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	xor    BYTE PTR [rip+0x1d540000],bl        # 0x15d54d16e
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	mov    esp,0x54000099
   14000d175:	sbb    eax,0x1daf0000
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	(bad)  
   14000d17d:	cdq    
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	scas   eax,DWORD PTR es:[rdi]
   14000d181:	sbb    eax,0x1ec50000
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	call   0x10500d226
   14000d18d:	(bad)  
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	call   0x14000d1b3
   14000d195:	(bad)  
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	call   0x14700d1bb
   14000d19d:	(bad)  
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	adc    BYTE PTR [rdx+0x1f100000],bl
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	ja     0x14000d1c9
   14000d1aa:	add    BYTE PTR [rax],al
   14000d1ac:	rex.WR (bad) 
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	sbb    BYTE PTR [rdi],0x0
   14000d1b3:	add    BYTE PTR [rdi+0x20],ch
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	pop    rsp
   14000d1b9:	(bad)  
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	and    BYTE PTR [rax],0x0
   14000d1bf:	add    BYTE PTR [rsi-0x7fffffe0],al
   14000d1c5:	(bad)  
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	xchg   BYTE PTR [rax],ah
   14000d1ca:	add    BYTE PTR [rax],al
   14000d1cc:	fsub   QWORD PTR [rcx]
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	mov    BYTE PTR [rdx+0x21dc0000],bl
   14000d1d6:	add    BYTE PTR [rax],al
   14000d1d8:	clc    
   14000d1d9:	and    DWORD PTR [rax],eax
   14000d1db:	add    BYTE PTR [rdx+rbx*4+0x21f80000],ah
   14000d1e2:	add    BYTE PTR [rax],al
   14000d1e4:	add    BYTE PTR [rdx],ah
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	mov    eax,0x1000009a
   14000d1ed:	and    al,BYTE PTR [rax]
   14000d1ef:	add    BYTE PTR [rax+0x22],bh
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	or     BYTE PTR [rbx+0x22780000],bl
   14000d1fa:	add    BYTE PTR [rax],al
   14000d1fc:	sbb    ah,BYTE PTR [rbx]
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	adc    al,0x9b
   14000d202:	add    BYTE PTR [rax],al
   14000d204:	sbb    ah,BYTE PTR [rbx]
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	and    eax,0x28000023
   14000d20d:	fwait
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	and    eax,0x33000023
   14000d215:	and    eax,DWORD PTR [rax]
   14000d217:	add    BYTE PTR [rax],bh
   14000d219:	fwait
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	rex and eax,DWORD PTR [rax]
   14000d21f:	add    BYTE PTR [rbp+0x24],ch
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	jo     0x14000d1c1
   14000d226:	add    BYTE PTR [rax],al
   14000d228:	and    BYTE PTR [rax+rax*1],0x0
   14000d22c:	jrcxz  0x14000d252
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	sbb    BYTE PTR [rax+0x24f00000],0x0
   14000d237:	add    BYTE PTR [rbp+riz*1-0x646c0000],bh
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	shl    BYTE PTR [rip+0x25ee0000],1        # 0x165eed246
   14000d246:	add    BYTE PTR [rax],al
   14000d248:	mov    eax,0xee00009b
   14000d24d:	and    eax,0x265a0000
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	rcr    BYTE PTR [rbx+0x265a0000],0x0
   14000d25b:	add    BYTE PTR [rbp+0x27],dl
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	fcomp  DWORD PTR [rbx+0x27550000]
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	xchg   DWORD PTR [rdi],esp
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	in     al,dx
   14000d26d:	fwait
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	xchg   DWORD PTR [rdi],esp
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	lea    esp,[rdi]
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	cld    
   14000d279:	fwait
   14000d27a:	add    BYTE PTR [rax],al
   14000d27c:	movabs al,ds:0x5000002814000027
   14000d285:	pushf  
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	and    BYTE PTR [rax],ch
   14000d28a:	add    BYTE PTR [rax],al
   14000d28c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d28d:	sub    BYTE PTR [rax],al
   14000d28f:	add    BYTE PTR [rax-0x64],ch
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d295:	sub    BYTE PTR [rax],al
   14000d297:	add    BYTE PTR [rbx+0x2a],bl
   14000d29a:	add    BYTE PTR [rax],al
   14000d29c:	test   BYTE PTR [rax+rax*1+0x2a5b00],bl
   14000d2a3:	add    BYTE PTR [rbp+0x2a],bh
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	cwde   
   14000d2a9:	pushf  
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	nop
   14000d2ad:	sub    al,BYTE PTR [rax]
   14000d2af:	add    ah,bh
   14000d2b1:	sub    al,BYTE PTR [rax]
   14000d2b3:	add    ah,cl
   14000d2b5:	pushf  
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	adc    BYTE PTR [rbx],ch
   14000d2ba:	add    BYTE PTR [rax],al
   14000d2bc:	sub    ch,BYTE PTR [rax+rax*1]
   14000d2bf:	add    ah,ah
   14000d2c1:	pushf  
   14000d2c2:	add    BYTE PTR [rax],al
   14000d2c4:	xor    BYTE PTR [rax+rax*1],ch
   14000d2c7:	add    BYTE PTR [rax+0x2f],bl
   14000d2ca:	add    BYTE PTR [rax],al
   14000d2cc:	add    BYTE PTR [rbp+0x2f600000],bl
   14000d2d2:	add    BYTE PTR [rax],al
   14000d2d4:	pop    rsi
   14000d2d5:	xor    BYTE PTR [rax],al
   14000d2d7:	add    BYTE PTR [rax],ah
   14000d2d9:	popf   
   14000d2da:	add    BYTE PTR [rax],al
   14000d2dc:	pop    rsi
   14000d2dd:	xor    BYTE PTR [rax],al
   14000d2df:	add    BYTE PTR [rdx+0x32],dh
   14000d2e2:	add    BYTE PTR [rax],al
   14000d2e4:	rex popf 
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	jb     0x14000d31c
   14000d2ea:	add    BYTE PTR [rax],al
   14000d2ec:	(bad)  [rdx]
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	push   rsp
   14000d2f1:	popf   
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	lock xor al,BYTE PTR [rax]
   14000d2f7:	add    al,al
   14000d2f9:	xor    al,0x0
   14000d2fb:	add    BYTE PTR [rax-0x2fffff63],cl
   14000d301:	xor    al,0x0
   14000d303:	add    BYTE PTR [rbp+0x35],ch
   14000d306:	add    BYTE PTR [rax],al
   14000d308:	mov    eax,0x8000009d
   14000d30d:	xor    eax,0x366a0000
   14000d312:	add    BYTE PTR [rax],al
   14000d314:	fcomp  QWORD PTR [rbp+0x36700000]
   14000d31a:	add    BYTE PTR [rax],al
   14000d31c:	shl    BYTE PTR [rsi],cl
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	cld    
   14000d321:	xchg   edi,eax
   14000d322:	add    BYTE PTR [rax],al
   14000d324:	xor    al,0x37
   14000d326:	add    BYTE PTR [rax],al
   14000d328:	mov    cl,0x37
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	or     al,0x9e
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	shl    BYTE PTR [rdi],0x0
   14000d333:	add    dl,dl
   14000d335:	(bad)  
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	mov    ah,0x99
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	lock (bad) 
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	(bad)  
   14000d341:	cmp    BYTE PTR [rax],al
   14000d343:	add    BYTE PTR [rax],bl
   14000d345:	sahf   
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	sub    al,0x38
   14000d34a:	add    BYTE PTR [rax],al
   14000d34c:	cld    
   14000d34d:	cmp    BYTE PTR [rax],al
   14000d34f:	add    BYTE PTR [rsi+rbx*4],bl
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	add    al,0x39
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	cmp    BYTE PTR [rcx],bh
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	adc    BYTE PTR [rdi+0x39400000],0x0
   14000d363:	add    BYTE PTR [rcx+0x2800003a],dh
   14000d369:	sahf   
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	hlt    
   14000d36d:	cmp    al,BYTE PTR [rax]
   14000d36f:	add    BYTE PTR [rcx],dl
   14000d371:	cmp    eax,DWORD PTR [rax]
   14000d373:	add    BYTE PTR [rcx+rbx*4+0x3b180000],dh
   14000d37a:	add    BYTE PTR [rax],al
   14000d37c:	jnp    0x14000d3b9
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	adc    BYTE PTR [rdi+0x3bb00000],0x0
   14000d387:	add    BYTE PTR [rdx-0x7ffffc5],dh
   14000d38d:	movabs al,ds:0x3be000003bcc0000
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	pop    rax
   14000d399:	xchg   edi,eax
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	loopne 0x14000d3d9
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	and    bh,BYTE PTR [rax+rax*1]
   14000d3a3:	add    al,bl
   14000d3a5:	xchg   edi,eax
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	and    bh,BYTE PTR [rax+rax*1]
   14000d3ab:	add    BYTE PTR [rsp+rdi*1],ch
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	in     al,dx
   14000d3b1:	xchg   edi,eax
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	sub    al,0x3c
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	rex.XB cmp al,0x0
   14000d3bb:	add    BYTE PTR [rax],ch
   14000d3bd:	cwde   
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	rex.R cmp al,0x0
   14000d3c3:	add    BYTE PTR [rdi+0x4400003c],cl
   14000d3c9:	cwde   
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	(bad)  
   14000d3cd:	cmp    al,0x0
   14000d3cf:	add    BYTE PTR [rdi+0x5800003c],ch
   14000d3d5:	cwde   
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	mov    al,0x3c
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	sub    bh,BYTE PTR [rip+0xffffffff98700000]        # 0xd870d3e2
   14000d3e2:	add    BYTE PTR [rax],al
   14000d3e4:	sub    bh,BYTE PTR [rip+0x3ef30000]        # 0x17ef3d3ea
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	cwde   
   14000d3ed:	cwde   
   14000d3ee:	add    BYTE PTR [rax],al
   14000d3f0:	hlt    
   14000d3f1:	add    BYTE PTR ds:[rax],al
   14000d3f4:	sub    BYTE PTR [rdi],bh
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	fcomp  DWORD PTR [rax+0x3f280000]
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	cmp    edi,DWORD PTR [rdi]
   14000d402:	add    BYTE PTR [rax],al
   14000d404:	sbb    al,0x99
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	cmp    al,0x3f
   14000d40a:	add    BYTE PTR [rax],al
   14000d40c:	outs   dx,DWORD PTR ds:[rsi]
   14000d40d:	(bad)  
   14000d40e:	add    BYTE PTR [rax],al
   14000d410:	cmp    BYTE PTR [rcx+0x3f700000],bl
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	(bad)  
   14000d419:	(bad)  
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	push   rsp
   14000d41d:	cdq    
   14000d41e:	add    BYTE PTR [rax],al
   14000d420:	(bad)  
   14000d421:	(bad)  
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	add    eax,DWORD PTR [rax+0x0]
   14000d427:	add    BYTE PTR [rax+0x3000099],dl
   14000d42d:	add    BYTE PTR [rax],al
   14000d430:	test   DWORD PTR [rax+0x0],eax
   14000d433:	add    BYTE PTR [rax-0x79ffff67],ah
   14000d439:	add    BYTE PTR [rax],al
   14000d43c:	xor    eax,0x20000041
   14000d441:	(bad)  
   14000d442:	add    BYTE PTR [rax],al
   14000d444:	xor    eax,0x5c000041
   14000d449:	add    BYTE PTR [r8],al
   14000d44c:	cmp    al,0x9a
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	pop    rsp
   14000d451:	add    BYTE PTR [r8],al
   14000d454:	mov    BYTE PTR [rcx+0x0],al
   14000d457:	add    BYTE PTR [rax-0x66],dh
   14000d45a:	add    BYTE PTR [rax],al
   14000d45c:	mov    BYTE PTR [rcx+0x0],al
   14000d45f:	add    BYTE PTR [rax-0x37ffffbe],cl
   14000d465:	(bad)  
   14000d466:	add    BYTE PTR [rax],al
   14000d468:	mov    BYTE PTR [rdx+0x0],al
   14000d46b:	add    BYTE PTR [rsi-0x1bffffbe],ah
   14000d471:	(bad)  
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d475:	rex.X add BYTE PTR [rax],al
   14000d478:	int    0x42
   14000d47a:	add    BYTE PTR [rax],al
   14000d47c:	clc    
   14000d47d:	(bad)  
   14000d47e:	add    BYTE PTR [rax],al
   14000d480:	(bad)  
   14000d481:	rex.X add BYTE PTR [rax],al
   14000d484:	fadd   DWORD PTR [rdx+0x0]
   14000d487:	add    BYTE PTR [rbx+rbx*4+0x0],cl
   14000d48b:	add    al,bl
   14000d48d:	rex.X add BYTE PTR [rax],al
   14000d490:	loop   0x14000d4d4
   14000d492:	add    BYTE PTR [rax],al
   14000d494:	(bad)  
   14000d495:	fwait
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	loop   0x14000d4dc
   14000d49a:	add    BYTE PTR [rax],al
   14000d49c:	cdq    
   14000d49d:	rex.XB add BYTE PTR [r8],al
   14000d4a0:	test   BYTE PTR [rbx+0x439a0000],bl
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	int3   
   14000d4a9:	rex.XB add BYTE PTR [r8],al
   14000d4ac:	test   al,0x9b
   14000d4ae:	add    BYTE PTR [rax],al
   14000d4b0:	int3   
   14000d4b1:	rex.XB add BYTE PTR [r8],al
   14000d4b4:	add    BYTE PTR [rax+rax*1+0x0],al
   14000d4b8:	or     al,0x9c
   14000d4ba:	add    BYTE PTR [rax],al
   14000d4bc:	add    BYTE PTR [rax+rax*1+0x0],al
   14000d4c0:	or     al,BYTE PTR [rax+rax*1+0x0]
   14000d4c4:	sbb    al,0x9c
   14000d4c6:	add    BYTE PTR [rax],al
   14000d4c8:	or     al,BYTE PTR [rax+rax*1+0x0]
   14000d4cc:	xor    DWORD PTR [rax+rax*1+0x0],eax
   14000d4d0:	xor    al,0x9c
   14000d4d2:	add    BYTE PTR [rax],al
   14000d4d4:	xor    al,BYTE PTR [rax+rax*1+0x0]
   14000d4d8:	rex.WB
   14000d4d9:	add    BYTE PTR [rax],r8b
   14000d4dc:	pop    rax
   14000d4dd:	pushf  
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	rex.WX
   14000d4e1:	add    BYTE PTR [rax],r8b
   14000d4e4:	push   rsp
   14000d4e5:	add    BYTE PTR [rax],r8b
   14000d4e8:	test   al,0x9c
   14000d4ea:	add    BYTE PTR [rax],al
   14000d4ec:	push   rsp
   14000d4ed:	add    BYTE PTR [rax],r8b
   14000d4f0:	iret   
   14000d4f1:	add    BYTE PTR [rax],r8b
   14000d4f4:	mov    eax,0xd000009c
   14000d4f9:	add    BYTE PTR [rax],r8b
   14000d4fc:	add    BYTE PTR [rbp+0x0],al
   14000d4ff:	add    ah,dl
   14000d501:	pushf  
   14000d502:	add    BYTE PTR [rax],al
   14000d504:	add    BYTE PTR [rbp+0x0],al
   14000d507:	add    ah,cl
   14000d509:	add    BYTE PTR [r8],r8b
   14000d50c:	lock pushf 
   14000d50e:	add    BYTE PTR [rax],al
   14000d510:	int3   
   14000d511:	add    BYTE PTR [r8],r8b
   14000d514:	(bad)  
   14000d515:	add    BYTE PTR [r8],r8b
   14000d518:	fs popf 
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	(bad)  
   14000d51d:	add    BYTE PTR [r8],r8b
   14000d520:	(bad)  
   14000d521:	rex.RX add BYTE PTR [rax],r8b
   14000d524:	je     0x14000d4c3
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	sbb    BYTE PTR [rsi+0x0],al
   14000d52b:	add    BYTE PTR [rdi],ch
   14000d52d:	rex.RXB add BYTE PTR [r8],r8b
   14000d530:	test   al,0x9d
   14000d532:	add    BYTE PTR [rax],al
   14000d534:	xor    BYTE PTR [rdi+0x0],al
   14000d537:	add    BYTE PTR [rdi+rax*2+0x0],cl
   14000d53b:	add    ah,cl
   14000d53d:	popf   
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	rex.WR
   14000d541:	rex.RXB add BYTE PTR [r8],r8b
   14000d544:	rex.RXB add BYTE PTR [r8d],r8b
   14000d548:	cld    
   14000d549:	popf   
   14000d54a:	add    BYTE PTR [rax],al
   14000d54c:	jo     0x14000d595
   14000d54e:	add    BYTE PTR [rax],al
   14000d550:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d551:	rex.RXB add BYTE PTR [r8],r8b
   14000d554:	xor    BYTE PTR [rsi+0x47a40000],bl
   14000d55a:	add    BYTE PTR [rax],al
   14000d55c:	pushf  
   14000d55d:	rex.W add BYTE PTR [rax],al
   14000d560:	rex sahf 
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	pushf  
   14000d565:	rex.W add BYTE PTR [rax],al
   14000d568:	mov    ah,0x48
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	pop    rax
   14000d56d:	sahf   
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	ror    BYTE PTR [rax+0x0],1
   14000d573:	add    BYTE PTR [rbx],cl
   14000d575:	rex.WB add BYTE PTR [r8],al
   14000d578:	rex xchg edi,eax
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	adc    al,0x49
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	pop    rbp
   14000d581:	rex.WB add BYTE PTR [r8],al
   14000d584:	pushf  
   14000d585:	sahf   
   14000d586:	add    BYTE PTR [rax],al
   14000d588:	pop    rbp
   14000d589:	rex.WB add BYTE PTR [r8],al
   14000d58c:	mov    bl,0x49
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	lods   al,BYTE PTR ds:[rsi]
   14000d591:	sahf   
   14000d592:	add    BYTE PTR [rax],al
   14000d594:	mov    bl,0x49
   14000d596:	add    BYTE PTR [rax],al
   14000d598:	ret    
   14000d599:	rex.WB add BYTE PTR [r8],al
   14000d59c:	(bad)  
   14000d59d:	sahf   
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	int3   
   14000d5a1:	rex.WB add BYTE PTR [r8],al
   14000d5a4:	(bad)  
   14000d5a5:	rex.WX add BYTE PTR [rax],al
   14000d5a8:	push   0x1700009e
   14000d5ad:	rex.WX add BYTE PTR [rax],al
   14000d5b0:	rex.WX add BYTE PTR ss:[rax],al
   14000d5b4:	js     0x14000d554
   14000d5b6:	add    BYTE PTR [rax],al
   14000d5b8:	rex.WX add BYTE PTR ss:[rax],al
   14000d5bc:	rex.WB
   14000d5bd:	rex.WX add BYTE PTR [rax],al
   14000d5c0:	mov    WORD PTR [rsi+0x4a500000],ds
   14000d5c6:	add    BYTE PTR [rax],al
   14000d5c8:	std    
   14000d5c9:	rex.WXB add BYTE PTR [r8],al
   14000d5cc:	test   al,0xa0
   14000d5ce:	add    BYTE PTR [rax],al
   14000d5d0:	add    al,0x4c
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	lods   al,BYTE PTR ds:[rsi]
   14000d5d5:	rex.WR add BYTE PTR [rax],r8b
   14000d5d8:	int3   
   14000d5d9:	lahf   
   14000d5da:	add    BYTE PTR [rax],al
   14000d5dc:	mov    ah,0x4c
   14000d5de:	add    BYTE PTR [rax],al
   14000d5e0:	adc    eax,0xec00004d
   14000d5e5:	movabs al,ds:0x504d00004d1c0000
   14000d5ee:	add    BYTE PTR [rax],al
   14000d5f0:	(bad)  
   14000d5f1:	lahf   
   14000d5f2:	add    BYTE PTR [rax],al
   14000d5f4:	(bad)  
   14000d5f5:	push   rax
   14000d5f6:	add    BYTE PTR [rax],al
   14000d5f8:	(bad)  
   14000d5f9:	push   rax
   14000d5fa:	add    BYTE PTR [rax],al
   14000d5fc:	fs lahf 
   14000d5fe:	add    BYTE PTR [rax],al
   14000d600:	(bad)  
   14000d601:	push   rax
   14000d602:	add    BYTE PTR [rax],al
   14000d604:	mov    bl,0x50
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	ins    BYTE PTR es:[rdi],dx
   14000d609:	lahf   
   14000d60a:	add    BYTE PTR [rax],al
   14000d60c:	mov    bl,0x50
   14000d60e:	add    BYTE PTR [rax],al
   14000d610:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d611:	push   rcx
   14000d612:	add    BYTE PTR [rax],al
   14000d614:	mov    BYTE PTR [rdi+0x51a50000],bl
   14000d61a:	add    BYTE PTR [rax],al
   14000d61c:	ficom  WORD PTR [rcx+0x0]
   14000d61f:	add    BYTE PTR [rax-0x21ffff61],ah
   14000d625:	push   rcx
   14000d626:	add    BYTE PTR [rax],al
   14000d628:	jrcxz  0x14000d67b
   14000d62a:	add    BYTE PTR [rax],al
   14000d62c:	mov    al,0x9f
   14000d62e:	add    BYTE PTR [rax],al
   14000d630:	lock push rcx
   14000d632:	add    BYTE PTR [rax],al
   14000d634:	clc    
   14000d635:	push   rdx
   14000d636:	add    BYTE PTR [rax],al
   14000d638:	rcr    BYTE PTR [rdi+0x53000000],0x0
   14000d63f:	add    BYTE PTR [rax],ah
   14000d641:	push   rbx
   14000d642:	add    BYTE PTR [rax],al
   14000d644:	lock lahf 
   14000d646:	add    BYTE PTR [rax],al
   14000d648:	and    BYTE PTR [rbx+0x0],dl
   14000d64b:	add    BYTE PTR [rsi],ch
   14000d64d:	push   rbx
   14000d64e:	add    BYTE PTR [rax],al
   14000d650:	add    BYTE PTR [rax+0x532e0000],ah
   14000d656:	add    BYTE PTR [rax],al
   14000d658:	jg     0x14000d6ad
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	adc    al,0xa0
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	jg     0x14000d6b5
   14000d662:	add    BYTE PTR [rax],al
   14000d664:	movabs ds:0xa20000a02c000053,al
   14000d66d:	push   rbx
   14000d66e:	add    BYTE PTR [rax],al
   14000d670:	add    al,0x54
   14000d672:	add    BYTE PTR [rax],al
   14000d674:	cmp    al,0xa0
   14000d676:	add    BYTE PTR [rax],al
   14000d678:	or     al,0x54
   14000d67a:	add    BYTE PTR [rax],al
   14000d67c:	popf   
   14000d67d:	push   rsp
   14000d67e:	add    BYTE PTR [rax],al
   14000d680:	rex xchg edi,eax
   14000d682:	add    BYTE PTR [rax],al
   14000d684:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d685:	push   rsp
   14000d686:	add    BYTE PTR [rax],al
   14000d688:	(bad)  
   14000d689:	push   rbp
   14000d68a:	add    BYTE PTR [rax],al
   14000d68c:	fcomp  QWORD PTR [rsi+0x55070000]
   14000d692:	add    BYTE PTR [rax],al
   14000d694:	rex.RXB push r13
   14000d696:	add    BYTE PTR [rax],al
   14000d698:	in     al,dx
   14000d699:	sahf   
   14000d69a:	add    BYTE PTR [rax],al
   14000d69c:	rex.RXB push r13
   14000d69e:	add    BYTE PTR [rax],al
   14000d6a0:	lods   al,BYTE PTR ds:[rsi]
   14000d6a1:	push   rbp
   14000d6a2:	add    BYTE PTR [rax],al
   14000d6a4:	add    BYTE PTR [rdi+0x55ac0000],bl
   14000d6aa:	add    BYTE PTR [rax],al
   14000d6ac:	mov    cl,0x55
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	sbb    BYTE PTR [rdi+0x55b10000],bl
   14000d6b6:	add    BYTE PTR [rax],al
   14000d6b8:	mov    edi,0x28000055
   14000d6bd:	lahf   
   14000d6be:	add    BYTE PTR [rax],al
   14000d6c0:	mov    edi,0xc4000055
   14000d6c5:	push   rbp
   14000d6c6:	add    BYTE PTR [rax],al
   14000d6c8:	cmp    BYTE PTR [rdi+0x55c40000],bl
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	retf   
   14000d6d1:	push   rbp
   14000d6d2:	add    BYTE PTR [rax],al
   14000d6d4:	push   rsp
   14000d6d5:	lahf   
   14000d6d6:	add    BYTE PTR [rax],al
   14000d6d8:	(bad)  
   14000d6d9:	push   rbp
   14000d6da:	add    BYTE PTR [rax],al
   14000d6dc:	rcl    BYTE PTR [rsi+0x0],1
   14000d6df:	add    ah,dl
   14000d6e1:	sahf   
   14000d6e2:	add    BYTE PTR [rax],al
   14000d6e4:	fcom   DWORD PTR [rsi+0x0]
   14000d6e7:	add    BYTE PTR [rcx],ah
   14000d6e9:	push   rdi
   14000d6ea:	add    BYTE PTR [rax],al
   14000d6ec:	shl    BYTE PTR [rax+0x57210000],0x0
   14000d6f3:	add    BYTE PTR [rbx+0x57],bh
   14000d6f6:	add    BYTE PTR [rax],al
   14000d6f8:	enter  0xa0,0x0
   14000d6fc:	jnp    0x14000d755
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	xchg   esp,eax
   14000d701:	push   rdi
   14000d702:	add    BYTE PTR [rax],al
   14000d704:	fsub   QWORD PTR [rax+0x579c0000]
   14000d70a:	add    BYTE PTR [rax],al
   14000d70c:	test   al,0x57
   14000d70e:	add    BYTE PTR [rax],al
   14000d710:	rex.WR movabs al,ds:0x5800000057a80000
   14000d71a:	add    BYTE PTR [rax],al
   14000d71c:	pop    rax
   14000d71d:	movabs al,ds:0x5901000058000000
   14000d726:	add    BYTE PTR [rax],al
   14000d728:	ins    BYTE PTR es:[rdi],dx
   14000d729:	movabs al,ds:0x5937000059010000
   14000d732:	add    BYTE PTR [rax],al
   14000d734:	mov    BYTE PTR [rax+0x59370000],ah
   14000d73a:	add    BYTE PTR [rax],al
   14000d73c:	xor    eax,0x9800005a
   14000d741:	.byte 0xa0
	...

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e00c:	add    BYTE PTR [rax],al
   14000e00e:	add    al,BYTE PTR [rax]
   14000e010:	adc    BYTE PTR [rax],al
   14000e012:	add    BYTE PTR [rax],al
   14000e014:	and    BYTE PTR [rax],al
   14000e016:	add    BYTE PTR [rax+0x18],al
   14000e01c:	cmp    BYTE PTR [rax],al
   14000e01e:	add    BYTE PTR [rax+0x0],al
	...
   14000e02c:	add    BYTE PTR [rax],al
   14000e02e:	add    DWORD PTR [rax],eax
   14000e030:	add    DWORD PTR [rax],eax
   14000e032:	add    BYTE PTR [rax],al
   14000e034:	push   rax
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rax],0x0
	...
   14000e046:	add    DWORD PTR [rax],eax
   14000e048:	add    DWORD PTR [rax],eax
   14000e04a:	add    BYTE PTR [rax],al
   14000e04c:	push   0x800000
	...
   14000e05d:	add    BYTE PTR [rcx],al
   14000e05f:	add    BYTE PTR [rcx],cl
   14000e061:	add    al,0x0
   14000e063:	add    BYTE PTR [rax+0x0],al
	...
   14000e075:	add    BYTE PTR [rcx],al
   14000e077:	add    BYTE PTR [rcx],cl
   14000e079:	add    al,0x0
   14000e07b:	add    BYTE PTR [rax+0x60000000],dl
   14000e081:	jrcxz  0x14000e083
   14000e083:	add    BYTE PTR [rax+0x3],ah
   14000e089:	add    BYTE PTR [rax],al
   14000e08b:	add    BYTE PTR [rax],al
   14000e08d:	add    BYTE PTR [rax],al
   14000e08f:	add    BYTE PTR [rax-0x3fffff20],ah
   14000e095:	add    al,BYTE PTR [rax]
	...
   14000e09f:	add    BYTE PTR [rdi+rdi*1],bh
   14000e0a2:	js     0x14000e111
   14000e0a4:	ins    BYTE PTR es:[rdi],dx
   14000e0a5:	and    BYTE PTR [rsi+0x65],dh
   14000e0a8:	jb     0x14000e11d
   14000e0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e0b1:	xor    BYTE PTR [rdx],ah
   14000e0b3:	and    BYTE PTR [rbp+0x6e],ah
   14000e0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000e0c0:	rex.RX sub eax,0x73202238
   14000e0c6:	je     0x14000e129
   14000e0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000e0c9:	fs (bad) 
   14000e0cb:	ins    BYTE PTR es:[rdi],dx
   14000e0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000e0cd:	outs   dx,BYTE PTR ds:[rsi]
   14000e0ce:	gs cmp eax,0x73657922
   14000e0d4:	and    bh,BYTE PTR [rdi]
   14000e0d6:	ds or  eax,0x2d213c0a
   14000e0dc:	sub    eax,0x706f4320
   14000e0e1:	jns    0x14000e155
   14000e0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000e0ea:	sub    DWORD PTR [rax],esp
   14000e0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000e0f4:	je     0x14000e116
   14000e0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e0f8:	jb     0x14000e16a
   14000e0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000e0fb:	jb     0x14000e15e
   14000e0fd:	je     0x14000e168
   14000e0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000e100:	outs   dx,BYTE PTR ds:[rsi]
   14000e101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e1f34
   14000e107:	cmp    al,0x61
   14000e109:	jae    0x14000e17e
   14000e10b:	gs ins DWORD PTR es:[rdi],dx
   14000e10d:	(bad)  
   14000e10e:	ins    BYTE PTR es:[rdi],dx
   14000e10f:	jns    0x14000e131
   14000e111:	js     0x14000e180
   14000e113:	ins    BYTE PTR es:[rdi],dx
   14000e114:	outs   dx,BYTE PTR ds:[rsi]
   14000e115:	jae    0x14000e154
   14000e117:	and    dh,BYTE PTR [rbp+0x72]
   14000e11a:	outs   dx,BYTE PTR ds:[rsi]
   14000e11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e11e:	push   0x73616d65
   14000e123:	sub    eax,0x7263696d
   14000e128:	outs   dx,DWORD PTR ds:[rsi]
   14000e129:	jae    0x14000e19a
   14000e12b:	data16 je 0x14000e15b
   14000e12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e131:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e134:	ins    DWORD PTR es:[rdi],dx
   14000e135:	cs jbe 0x14000e169
   14000e138:	and    ah,BYTE PTR [rax]
   14000e13a:	ins    DWORD PTR es:[rdi],dx
   14000e13b:	(bad)  
   14000e13c:	outs   dx,BYTE PTR ds:[rsi]
   14000e13d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000e144:	jb     0x14000e1b9
   14000e146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e14d:	xor    BYTE PTR [rdx],ah
   14000e14f:	ds or  eax,0x73613c0a
   14000e155:	jae    0x14000e1bc
   14000e157:	ins    DWORD PTR es:[rdi],dx
   14000e158:	(bad)  
   14000e159:	ins    BYTE PTR es:[rdi],dx
   14000e15a:	jns    0x14000e1a5
   14000e15c:	fs outs dx,BYTE PTR gs:[rsi]
   14000e15f:	je     0x14000e1ca
   14000e161:	je     0x14000e1dc
   14000e163:	or     eax,0x2020200a
   14000e168:	and    BYTE PTR [rsi+0x65],dh
   14000e16b:	jb     0x14000e1e0
   14000e16d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000e174:	xor    DWORD PTR [rsi],ebp
   14000e176:	xor    BYTE PTR [rsi],ch
   14000e178:	xor    BYTE PTR [rdx],ah
   14000e17a:	or     eax,0x2020200a
   14000e17f:	and    BYTE PTR [rax+0x72],dh
   14000e182:	outs   dx,DWORD PTR ds:[rsi]
   14000e183:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e186:	jae    0x14000e1f7
   14000e188:	jb     0x14000e1cb
   14000e18a:	jb     0x14000e1ef
   14000e18c:	push   0x63657469
   14000e191:	je     0x14000e208
   14000e193:	jb     0x14000e1fa
   14000e195:	cmp    eax,0x646d6122
   14000e19a:	ss xor al,0x22
   14000e19d:	or     eax,0x2020200a
   14000e1a2:	and    BYTE PTR [rsi+0x61],ch
   14000e1a5:	ins    DWORD PTR es:[rdi],dx
   14000e1a6:	gs cmp eax,0x63694d22
   14000e1ac:	jb     0x14000e21d
   14000e1ae:	jae    0x14000e21f
   14000e1b0:	data16 je 0x14000e1e1
   14000e1b3:	push   rdi
   14000e1b4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000e1bb:	push   rbx
   14000e1bc:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e1c0:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x61636f4c
   14000e1c8:	ins    BYTE PTR es:[rdi],dx
   14000e1c9:	push   rbx
   14000e1ca:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e1ce:	imul   esi,DWORD PTR [rcx+rdi*2+0x41],0x6f687475
   14000e1d6:	jb     0x14000e241
   14000e1d8:	je     0x14000e253
   14000e1da:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602101ea
   14000e1e0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000e1e4:	gs cmp eax,0x6e697722
   14000e1ea:	xor    esi,DWORD PTR [rdx]
   14000e1ec:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f10fc
   14000e1f2:	or     bh,BYTE PTR [rsp+riz*2]
   14000e1f5:	gs jae 0x14000e25b
   14000e1f8:	jb     0x14000e263
   14000e1fa:	jo     0x14000e270
   14000e1fc:	imul   ebp,DWORD PTR [rdi+0x6e],0x636f4c3e
   14000e203:	(bad)  
   14000e204:	ins    BYTE PTR es:[rdi],dx
   14000e205:	and    BYTE PTR [rbx+0x65],dl
   14000e208:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e20b:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x68747541
   14000e213:	outs   dx,DWORD PTR ds:[rsi]
   14000e214:	jb     0x14000e27f
   14000e216:	je     0x14000e291
   14000e218:	and    BYTE PTR [rax+0x72],dl
   14000e21b:	outs   dx,DWORD PTR ds:[rsi]
   14000e21c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e21f:	jae    0x14000e25d
   14000e221:	(bad)  
   14000e222:	fs gs jae 0x14000e289
   14000e226:	jb     0x14000e291
   14000e228:	jo     0x14000e29e
   14000e22a:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000e231:	or     bh,BYTE PTR [rsp+rsi*2]
   14000e234:	jb     0x14000e2ab
   14000e236:	jae    0x14000e2ac
   14000e238:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e23a:	outs   dx,WORD PTR ds:[rsi]
   14000e23c:	and    BYTE PTR [rax+0x6d],bh
   14000e23f:	ins    BYTE PTR es:[rdi],dx
   14000e240:	outs   dx,BYTE PTR ds:[rsi]
   14000e241:	jae    0x14000e280
   14000e243:	and    dh,BYTE PTR [rbp+0x72]
   14000e246:	outs   dx,BYTE PTR ds:[rsi]
   14000e247:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e24a:	push   0x73616d65
   14000e24f:	sub    eax,0x7263696d
   14000e254:	outs   dx,DWORD PTR ds:[rsi]
   14000e255:	jae    0x14000e2c6
   14000e257:	data16 je 0x14000e287
   14000e25a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e25d:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e260:	ins    DWORD PTR es:[rdi],dx
   14000e261:	cs jbe 0x14000e297
   14000e264:	and    bh,BYTE PTR [rsi]
   14000e266:	or     eax,0x2020200a
   14000e26b:	and    BYTE PTR [rbx+rsi*2],bh
   14000e26e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e272:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e27a:	and    BYTE PTR [rax],ah
   14000e27c:	and    BYTE PTR [rax],ah
   14000e27e:	and    BYTE PTR [rax],ah
   14000e280:	cmp    al,0x72
   14000e282:	gs jno 0x14000e2fa
   14000e285:	gs jae 0x14000e2fc
   14000e288:	gs fs push rax
   14000e28b:	jb     0x14000e2f6
   14000e28d:	jbe    0x14000e2f8
   14000e28f:	ins    BYTE PTR es:[rdi],dx
   14000e290:	gs addr32 gs jae 0x14000e2d3
   14000e295:	or     eax,0x2020200a
   14000e29a:	and    BYTE PTR [rax],ah
   14000e29c:	and    BYTE PTR [rax],ah
   14000e29e:	and    BYTE PTR [rax],ah
   14000e2a0:	and    BYTE PTR [rax],ah
   14000e2a2:	and    BYTE PTR [rdx+rsi*2],bh
   14000e2a5:	gs jno 0x14000e31d
   14000e2a8:	gs jae 0x14000e31f
   14000e2ab:	gs fs rex.RB js 0x14000e315
   14000e2b0:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e2b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e2ba:	ins    BYTE PTR es:[rdi],dx
   14000e2bb:	or     eax,0x2020200a
   14000e2c0:	and    BYTE PTR [rax],ah
   14000e2c2:	and    BYTE PTR [rax],ah
   14000e2c4:	and    BYTE PTR [rax],ah
   14000e2c6:	and    BYTE PTR [rax],ah
   14000e2c8:	and    BYTE PTR [rax],ah
   14000e2ca:	and    BYTE PTR [rax],ah
   14000e2cc:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000e2d0:	gs ins BYTE PTR es:[rdi],dx
   14000e2d2:	cmp    eax,0x49736122
   14000e2d7:	outs   dx,BYTE PTR ds:[rsi]
   14000e2d8:	jbe    0x14000e349
   14000e2da:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000e2de:	or     eax,0x2020200a
   14000e2e3:	and    BYTE PTR [rax],ah
   14000e2e5:	and    BYTE PTR [rax],ah
   14000e2e7:	and    BYTE PTR [rax],ah
   14000e2e9:	and    BYTE PTR [rax],ah
   14000e2eb:	and    BYTE PTR [rax],ah
   14000e2ed:	and    BYTE PTR [rax],ah
   14000e2ef:	and    BYTE PTR [rbp+0x69],dh
   14000e2f2:	movsxd esp,DWORD PTR [r11+0x65]
   14000e2f6:	jae    0x14000e36b
   14000e2f8:	cmp    eax,0x6c616622
   14000e2fd:	jae    0x14000e364
   14000e2ff:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021030f
   14000e305:	and    BYTE PTR [rax],ah
   14000e307:	and    BYTE PTR [rax],ah
   14000e309:	and    BYTE PTR [rax],ah
   14000e30b:	and    BYTE PTR [rax],ah
   14000e30d:	and    BYTE PTR [rdi],ch
   14000e30f:	ds or  eax,0x2020200a
   14000e315:	and    BYTE PTR [rax],ah
   14000e317:	and    BYTE PTR [rax],ah
   14000e319:	and    BYTE PTR [rdi+rbp*1],bh
   14000e31c:	jb     0x14000e383
   14000e31e:	jno    0x14000e395
   14000e320:	gs jae 0x14000e397
   14000e323:	gs fs push rax
   14000e326:	jb     0x14000e391
   14000e328:	jbe    0x14000e393
   14000e32a:	ins    BYTE PTR es:[rdi],dx
   14000e32b:	gs addr32 gs jae 0x14000e36e
   14000e330:	or     eax,0x2020200a
   14000e335:	and    BYTE PTR [rdi+rbp*1],bh
   14000e338:	jae    0x14000e39f
   14000e33a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e33d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000e345:	je     0x14000e3b9
   14000e347:	jne    0x14000e3bc
   14000e349:	je     0x14000e394
   14000e34b:	outs   dx,BYTE PTR ds:[rsi]
   14000e34c:	outs   dx,WORD PTR ds:[rsi]
   14000e34e:	ds or  eax,0x612f3c0a
   14000e354:	jae    0x14000e3c9
   14000e356:	gs ins DWORD PTR es:[rdi],dx
   14000e358:	(bad)  
   14000e359:	ins    BYTE PTR es:[rdi],dx
   14000e35a:	jns    0x14000e39a
   14000e35c:	or     eax,0xa00a0d0a
   14000e361:	add    esi,DWORD PTR [rax+rax*1]
   14000e364:	add    BYTE PTR [rax],al
   14000e366:	push   rsi
   14000e367:	add    BYTE PTR [rbx+0x0],dl
   14000e36a:	pop    rdi
   14000e36b:	add    BYTE PTR [rsi+0x0],dl
   14000e36e:	add    BYTE PTR [r10+0x0],r10b
   14000e372:	push   rbx
   14000e373:	add    BYTE PTR [rcx+0x0],cl
   14000e376:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000e37a:	pop    rdi
   14000e37b:	add    BYTE PTR [rcx+0x0],cl
   14000e37e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000e382:	rex.WRXB add BYTE PTR [r8],r8b
   14000e385:	add    BYTE PTR [rax],al
   14000e387:	add    BYTE PTR [rbp+0xfeef04],bh
   14000e38d:	add    BYTE PTR [rcx],al
   14000e38f:	add    BYTE PTR [rax],al
   14000e391:	add    BYTE PTR [rdx],cl
   14000e393:	add    cl,bl
   14000e395:	rex.X add BYTE PTR [rax],bpl
   14000e398:	add    BYTE PTR [rax],al
   14000e39a:	or     al,BYTE PTR [rax]
   14000e39c:	fld    DWORD PTR [rdx+0x0]
   14000e39f:	sub    BYTE PTR [rdi],bh
   14000e3a1:	add    BYTE PTR [rax],al
   14000e3a3:	add    BYTE PTR [rax],al
   14000e3a5:	add    BYTE PTR [rax],al
   14000e3a7:	add    BYTE PTR [rax+rax*1],al
   14000e3aa:	add    al,0x0
   14000e3ac:	add    al,BYTE PTR [rax]
	...
   14000e3ba:	add    BYTE PTR [rax],al
   14000e3bc:	inc    BYTE PTR [rdx]
   14000e3be:	add    BYTE PTR [rax],al
   14000e3c0:	add    DWORD PTR [rax],eax
   14000e3c2:	push   rbx
   14000e3c3:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000e3c7:	add    BYTE PTR [rcx+0x0],ch
   14000e3ca:	outs   dx,BYTE PTR ds:[rsi]
   14000e3cb:	add    BYTE PTR [rdi+0x0],ah
   14000e3ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e3d2:	ins    BYTE PTR es:[rdi],dx
   14000e3d3:	add    BYTE PTR [rbp+0x0],ah
   14000e3d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e3da:	data16 add BYTE PTR [rdi+0x0],ch
   14000e3de:	add    BYTE PTR [rax],al
   14000e3e0:	fiadd  DWORD PTR [rdx]
   14000e3e2:	add    BYTE PTR [rax],al
   14000e3e4:	add    DWORD PTR [rax],eax
   14000e3e6:	xor    BYTE PTR [rax],al
   14000e3e8:	xor    al,0x0
   14000e3ea:	xor    BYTE PTR [rax],al
   14000e3ec:	cmp    DWORD PTR [rax],eax
   14000e3ee:	xor    BYTE PTR [rax],al
   14000e3f0:	xor    al,0x0
   14000e3f2:	rex.X add BYTE PTR [rax],sil
   14000e3f5:	add    BYTE PTR [rax],al
   14000e3f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000e3fb:	add    BYTE PTR [rcx],al
   14000e3fd:	add    BYTE PTR [rbx+0x0],al
   14000e400:	outs   dx,DWORD PTR ds:[rsi]
   14000e401:	add    BYTE PTR [rbp+0x0],ch
   14000e404:	jo     0x14000e406
   14000e406:	(bad)  
   14000e407:	add    BYTE PTR [rsi+0x0],ch
   14000e40a:	jns    0x14000e40c
   14000e40c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e410:	ins    DWORD PTR es:[rdi],dx
   14000e411:	add    BYTE PTR [rbp+0x0],ah
   14000e414:	add    BYTE PTR [rax],al
   14000e416:	add    BYTE PTR [rax],al
   14000e418:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e41c:	movsxd eax,DWORD PTR [rax]
   14000e41e:	jb     0x14000e420
   14000e420:	outs   dx,DWORD PTR ds:[rsi]
   14000e421:	add    BYTE PTR [rbx+0x0],dh
   14000e424:	outs   dx,DWORD PTR ds:[rsi]
   14000e425:	add    BYTE PTR [rsi+0x0],ah
   14000e428:	je     0x14000e42a
   14000e42a:	and    BYTE PTR [rax],al
   14000e42c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e430:	jb     0x14000e432
   14000e432:	jo     0x14000e434
   14000e434:	outs   dx,DWORD PTR ds:[rsi]
   14000e435:	add    BYTE PTR [rdx+0x0],dh
   14000e438:	(bad)  
   14000e439:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e43d:	add    BYTE PTR [rdi+0x0],ch
   14000e440:	outs   dx,BYTE PTR ds:[rsi]
   14000e441:	add    BYTE PTR [rax],al
   14000e443:	add    BYTE PTR [rdx+0x0],ch
   14000e446:	and    DWORD PTR [rax],eax
   14000e448:	add    DWORD PTR [rax],eax
   14000e44a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e44e:	ins    BYTE PTR es:[rdi],dx
   14000e44f:	add    BYTE PTR [rbp+0x0],ah
   14000e452:	add    BYTE PTR [rbp+0x0],r12b
   14000e456:	jae    0x14000e458
   14000e458:	movsxd eax,DWORD PTR [rax]
   14000e45a:	jb     0x14000e45c
   14000e45c:	imul   eax,DWORD PTR [rax],0x740070
   14000e462:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e468:	add    BYTE PTR [rax],al
   14000e46a:	add    BYTE PTR [rax],al
   14000e46c:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000e470:	movsxd eax,DWORD PTR [rax]
   14000e472:	(bad)  
   14000e473:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e477:	add    BYTE PTR [rbx+0x0],dl
   14000e47a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000e47e:	jne    0x14000e480
   14000e480:	jb     0x14000e482
   14000e482:	imul   eax,DWORD PTR [rax],0x790074
   14000e488:	and    BYTE PTR [rax],al
   14000e48a:	add    BYTE PTR [r13+0x0],sil
   14000e48e:	je     0x14000e490
   14000e490:	push   0x72006f00
   14000e495:	add    BYTE PTR [rcx+0x0],ch
   14000e498:	je     0x14000e49a
   14000e49a:	jns    0x14000e49c
   14000e49c:	and    BYTE PTR [rax],al
   14000e49e:	push   rax
   14000e49f:	add    BYTE PTR [rdx+0x0],dh
   14000e4a2:	outs   dx,DWORD PTR ds:[rsi]
   14000e4a3:	add    BYTE PTR [rbx+0x0],ah
   14000e4a6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e4aa:	jae    0x14000e4ac
   14000e4ac:	add    BYTE PTR [rax],al
   14000e4ae:	add    BYTE PTR [rax],al
   14000e4b0:	data16 add BYTE PTR [rbx],ah
   14000e4b3:	add    BYTE PTR [rcx],al
   14000e4b5:	add    BYTE PTR [rsi+0x0],al
   14000e4b8:	imul   eax,DWORD PTR [rax],0x65006c
   14000e4be:	push   rsi
   14000e4bf:	add    BYTE PTR [rbp+0x0],ah
   14000e4c2:	jb     0x14000e4c4
   14000e4c4:	jae    0x14000e4c6
   14000e4c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e4cc:	add    BYTE PTR [rax],al
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	xor    DWORD PTR [rax],eax
   14000e4d2:	xor    BYTE PTR [rax],al
   14000e4d4:	add    BYTE PTR cs:[rax],dh
   14000e4d7:	add    BYTE PTR [rsi],ch
   14000e4d9:	add    BYTE PTR [rcx],dh
   14000e4db:	add    BYTE PTR [rax],dh
   14000e4dd:	add    BYTE PTR [rdx],dh
   14000e4df:	add    BYTE PTR [rax+rax*1],dh
   14000e4e2:	xor    BYTE PTR [rax],al
   14000e4e4:	add    BYTE PTR cs:[rcx],dh
   14000e4e7:	add    BYTE PTR [rdi],dh
   14000e4e9:	add    BYTE PTR [rcx],dh
   14000e4eb:	add    BYTE PTR [rcx],dh
   14000e4ed:	add    BYTE PTR [rbx],dh
   14000e4ef:	add    BYTE PTR [rax],ah
   14000e4f1:	add    BYTE PTR [rax],ch
   14000e4f3:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e4f7:	add    BYTE PTR [rcx],dh
   14000e4f9:	add    BYTE PTR [rsi],ch
   14000e4fb:	add    BYTE PTR [rcx],dh
   14000e4fd:	add    BYTE PTR [rsi],dh
   14000e4ff:	add    BYTE PTR [rax],dh
   14000e501:	add    BYTE PTR [rcx],bh
   14000e503:	add    BYTE PTR [rax],dh
   14000e505:	add    BYTE PTR [rsi],dh
   14000e507:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701160d
   14000e50d:	add    BYTE PTR [rip+0x29003500],dh        # 0x169011a13
   14000e513:	add    BYTE PTR [rax],al
   14000e515:	add    BYTE PTR [rax],al
   14000e517:	add    BYTE PTR [rax+rax*1],dh
   14000e51a:	or     al,BYTE PTR [rax]
   14000e51c:	add    DWORD PTR [rax],eax
   14000e51e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e522:	je     0x14000e524
   14000e524:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e528:	outs   dx,BYTE PTR ds:[rsi]
   14000e529:	add    BYTE PTR [rcx+0x0],ah
   14000e52c:	ins    BYTE PTR es:[rdi],dx
   14000e52d:	add    BYTE PTR [rsi+0x0],cl
   14000e530:	(bad)  
   14000e531:	add    BYTE PTR [rbp+0x0],ch
   14000e534:	add    BYTE PTR gs:[rax],al
   14000e537:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000e53b:	add    BYTE PTR [rcx+0x0],ah
   14000e53e:	jae    0x14000e540
   14000e540:	jae    0x14000e542
   14000e542:	add    BYTE PTR cs:[rbp+0x0],ah
   14000e546:	js     0x14000e548
   14000e548:	add    BYTE PTR gs:[rax],al
   14000e54b:	add    BYTE PTR [rax+0x1002e00],al
   14000e551:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000e555:	add    BYTE PTR [rdi+0x0],ah
   14000e558:	(bad)  
   14000e559:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000e55d:	add    BYTE PTR [rdi+0x0],ch
   14000e560:	jo     0x14000e562
   14000e562:	jns    0x14000e564
   14000e564:	jb     0x14000e566
   14000e566:	imul   eax,DWORD PTR [rax],0x680067
   14000e56c:	je     0x14000e56e
   14000e56e:	add    BYTE PTR [rax],al
   14000e570:	test   eax,0x4d002000
   14000e575:	add    BYTE PTR [rcx+0x0],ch
   14000e578:	movsxd eax,DWORD PTR [rax]
   14000e57a:	jb     0x14000e57c
   14000e57c:	outs   dx,DWORD PTR ds:[rsi]
   14000e57d:	add    BYTE PTR [rbx+0x0],dh
   14000e580:	outs   dx,DWORD PTR ds:[rsi]
   14000e581:	add    BYTE PTR [rsi+0x0],ah
   14000e584:	je     0x14000e586
   14000e586:	and    BYTE PTR [rax],al
   14000e588:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e58c:	jb     0x14000e58e
   14000e58e:	jo     0x14000e590
   14000e590:	outs   dx,DWORD PTR ds:[rsi]
   14000e591:	add    BYTE PTR [rdx+0x0],dh
   14000e594:	(bad)  
   14000e595:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e599:	add    BYTE PTR [rdi+0x0],ch
   14000e59c:	outs   dx,BYTE PTR ds:[rsi]
   14000e59d:	add    BYTE PTR [rsi],ch
   14000e59f:	add    BYTE PTR [rax],ah
   14000e5a1:	add    BYTE PTR [rcx+0x0],al
   14000e5a4:	ins    BYTE PTR es:[rdi],dx
   14000e5a5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e5a9:	add    BYTE PTR [rdx+0x0],dh
   14000e5ac:	imul   eax,DWORD PTR [rax],0x680067
   14000e5b2:	je     0x14000e5b4
   14000e5b4:	jae    0x14000e5b6
   14000e5b6:	and    BYTE PTR [rax],al
   14000e5b8:	jb     0x14000e5ba
   14000e5ba:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e5be:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e5c2:	jbe    0x14000e5c4
   14000e5c4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000e5c9:	add    BYTE PTR [rax],al
   14000e5cb:	add    BYTE PTR [rax+rax*1],bh
   14000e5ce:	or     al,BYTE PTR [rax]
   14000e5d0:	add    DWORD PTR [rax],eax
   14000e5d2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000e5d6:	imul   eax,DWORD PTR [rax],0x690067
   14000e5dc:	outs   dx,BYTE PTR ds:[rsi]
   14000e5dd:	add    BYTE PTR [rcx+0x0],ah
   14000e5e0:	ins    BYTE PTR es:[rdi],dx
   14000e5e1:	add    BYTE PTR [rsi+0x0],al
   14000e5e4:	imul   eax,DWORD PTR [rax],0x65006c
   14000e5ea:	outs   dx,BYTE PTR ds:[rsi]
   14000e5eb:	add    BYTE PTR [rcx+0x0],ah
   14000e5ee:	ins    DWORD PTR es:[rdi],dx
   14000e5ef:	add    BYTE PTR [rbp+0x0],ah
   14000e5f2:	add    BYTE PTR [rax],al
   14000e5f4:	ins    BYTE PTR es:[rdi],dx
   14000e5f5:	add    BYTE PTR [rbx+0x0],dh
   14000e5f8:	(bad)  
   14000e5f9:	add    BYTE PTR [rbx+0x0],dh
   14000e5fc:	jae    0x14000e5fe
   14000e5fe:	add    BYTE PTR cs:[rbp+0x0],ah
   14000e602:	js     0x14000e604
   14000e604:	add    BYTE PTR gs:[rax],al
   14000e607:	add    BYTE PTR [rdx+0x0],ch
   14000e60a:	and    eax,0x50000100
   14000e60f:	add    BYTE PTR [rdx+0x0],dh
   14000e612:	outs   dx,DWORD PTR ds:[rsi]
   14000e613:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e617:	add    BYTE PTR [rbx+0x0],ah
   14000e61a:	je     0x14000e61c
   14000e61c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e620:	ins    DWORD PTR es:[rdi],dx
   14000e621:	add    BYTE PTR [rbp+0x0],ah
   14000e624:	add    BYTE PTR [rax],al
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e62c:	movsxd eax,DWORD PTR [rax]
   14000e62e:	jb     0x14000e630
   14000e630:	outs   dx,DWORD PTR ds:[rsi]
   14000e631:	add    BYTE PTR [rbx+0x0],dh
   14000e634:	outs   dx,DWORD PTR ds:[rsi]
   14000e635:	add    BYTE PTR [rsi+0x0],ah
   14000e638:	je     0x14000e63a
   14000e63a:	scas   al,BYTE PTR es:[rdi]
   14000e63b:	add    BYTE PTR [rax],ah
   14000e63d:	add    BYTE PTR [rdi+0x0],dl
   14000e640:	imul   eax,DWORD PTR [rax],0x64006e
   14000e646:	outs   dx,DWORD PTR ds:[rsi]
   14000e647:	add    BYTE PTR [rdi+0x0],dh
   14000e64a:	jae    0x14000e64c
   14000e64c:	scas   al,BYTE PTR es:[rdi]
   14000e64d:	add    BYTE PTR [rax],ah
   14000e64f:	add    BYTE PTR [rdi+0x0],cl
   14000e652:	jo     0x14000e654
   14000e654:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e658:	(bad)  
   14000e659:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e65d:	add    BYTE PTR [rsi+0x0],ch
   14000e660:	add    BYTE PTR [eax],ah
   14000e663:	add    BYTE PTR [rbx+0x0],dl
   14000e666:	jns    0x14000e668
   14000e668:	jae    0x14000e66a
   14000e66a:	je     0x14000e66c
   14000e66c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e670:	add    BYTE PTR [rax],al
   14000e672:	add    BYTE PTR [rax],al
   14000e674:	rex.RX add BYTE PTR [rcx],r10b
   14000e677:	add    BYTE PTR [rcx],al
   14000e679:	add    BYTE PTR [rax+0x0],dl
   14000e67c:	jb     0x14000e67e
   14000e67e:	outs   dx,DWORD PTR ds:[rsi]
   14000e67f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e683:	add    BYTE PTR [rbx+0x0],ah
   14000e686:	je     0x14000e688
   14000e688:	push   rsi
   14000e689:	add    BYTE PTR [rbp+0x0],ah
   14000e68c:	jb     0x14000e68e
   14000e68e:	jae    0x14000e690
   14000e690:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e696:	add    BYTE PTR [rax],al
   14000e698:	xor    DWORD PTR [rax],eax
   14000e69a:	xor    BYTE PTR [rax],al
   14000e69c:	add    BYTE PTR cs:[rax],dh
   14000e69f:	add    BYTE PTR [rsi],ch
   14000e6a1:	add    BYTE PTR [rcx],dh
   14000e6a3:	add    BYTE PTR [rax],dh
   14000e6a5:	add    BYTE PTR [rdx],dh
   14000e6a7:	add    BYTE PTR [rax+rax*1],dh
   14000e6aa:	xor    BYTE PTR [rax],al
   14000e6ac:	add    BYTE PTR cs:[rcx],dh
   14000e6af:	add    BYTE PTR [rdi],dh
   14000e6b1:	add    BYTE PTR [rcx],dh
   14000e6b3:	add    BYTE PTR [rcx],dh
   14000e6b5:	add    BYTE PTR [rbx],dh
   14000e6b7:	add    BYTE PTR [rax],al
   14000e6b9:	add    BYTE PTR [rax],al
   14000e6bb:	add    BYTE PTR [rax+rax*1+0x0],al
   14000e6bf:	add    BYTE PTR [rcx],al
   14000e6c1:	add    BYTE PTR [rsi+0x0],dl
   14000e6c4:	(bad)  
   14000e6c5:	add    BYTE PTR [rdx+0x0],dh
   14000e6c8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e6cc:	ins    BYTE PTR es:[rdi],dx
   14000e6cd:	add    BYTE PTR [rbp+0x0],ah
   14000e6d0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e6d4:	data16 add BYTE PTR [rdi+0x0],ch
   14000e6d8:	add    BYTE PTR [rax],al
   14000e6da:	add    BYTE PTR [rax],al
   14000e6dc:	and    al,0x0
   14000e6de:	add    al,0x0
   14000e6e0:	add    BYTE PTR [rax],al
   14000e6e2:	push   rsp
   14000e6e3:	add    BYTE PTR [rdx+0x0],dh
   14000e6e6:	(bad)  
   14000e6e7:	add    BYTE PTR [rsi+0x0],ch
   14000e6ea:	jae    0x14000e6ec
   14000e6ec:	ins    BYTE PTR es:[rdi],dx
   14000e6ed:	add    BYTE PTR [rcx+0x0],ah
   14000e6f0:	je     0x14000e6f2
   14000e6f2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e6f8:	add    BYTE PTR [rax],al
   14000e6fa:	add    BYTE PTR [rax],al
   14000e6fc:	or     DWORD PTR [rax+rsi*4],eax
   14000e6ff:	.byte 0x4

Disassembly of section .reloc:

000000014000f000 <.reloc>:
   14000f000:	add    BYTE PTR [rax+0x0],ah
   14000f003:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000f007:	add    BYTE PTR [rax],dl
   14000f009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f00a:	sbb    BYTE PTR [rax+rax*2+0x48a760a7],ah
   14000f011:	test   al,0x50
   14000f013:	test   al,0x98
   14000f015:	test   eax,0xa9b8a9b0
   14000f01a:	shr    BYTE PTR [rcx-0x55f75600],0x10
   14000f021:	stos   BYTE PTR es:[rdi],al
   14000f022:	sbb    BYTE PTR [rdx-0x55c755d8],ch
   14000f028:	rex.W stos BYTE PTR es:[rdi],al
   14000f02a:	(bad)  
   14000f02b:	stos   BYTE PTR es:[rdi],al
   14000f02c:	push   0x78aa70aa
   14000f031:	stos   BYTE PTR es:[rdi],al
   14000f032:	sub    BYTE PTR [rdx-0x556f5578],0xb8
   14000f039:	stos   BYTE PTR es:[rdi],al
   14000f03a:	shr    BYTE PTR [rdx-0x552f5538],0x8
   14000f041:	stos   DWORD PTR es:[rdi],eax
   14000f042:	sbb    BYTE PTR [rbx-0x52bf52c8],ch
   14000f048:	lods   rax,QWORD PTR ds:[rsi]
   14000f04a:	push   rax
   14000f04b:	lods   eax,DWORD PTR ds:[rsi]
   14000f04c:	pop    rax
   14000f04d:	lods   eax,DWORD PTR ds:[rsi]
   14000f04e:	(bad)  
   14000f04f:	lods   eax,DWORD PTR ds:[rsi]
   14000f050:	push   0x78ad70ad
   14000f055:	lods   eax,DWORD PTR ds:[rsi]
   14000f056:	sub    BYTE PTR [rbp-0x524f5270],0xe0
   14000f05d:	lods   eax,DWORD PTR ds:[rsi]
   14000f05e:	clc    
   14000f05f:	lods   eax,DWORD PTR ds:[rsi]
   14000f060:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14000f066:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14000f06c:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14000f072:	add    BYTE PTR [rax],al
   14000f074:	add    BYTE PTR [rax+0x0],dh
   14000f077:	add    al,bh
   14000f079:	add    BYTE PTR [rax],al
   14000f07b:	add    BYTE PTR [rax],dl
   14000f07d:	movabs ds:0xa250a248a240a238,al
   14000f086:	pop    rax
   14000f087:	movabs ds:0xa290a278a268a260,al
   14000f090:	cwde   
   14000f091:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14000f09a:	shl    BYTE PTR [rdx-0x5cff5d10],0x10
   14000f0a1:	movabs ds:0xa370a360a350a320,eax
   14000f0aa:	and    BYTE PTR [rbx-0x5c3f5c50],0xd0
   14000f0b1:	movabs ds:0xa430a420a3f0a3e0,eax
   14000f0ba:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0bc:	push   rax
   14000f0bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0be:	(bad)  
   14000f0bf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0c0:	jo     0x14000f066
   14000f0c2:	and    BYTE PTR [rax+rdx*4-0x2f5b5f5c],0xa4
   14000f0ca:	loopne 0x14000f070
   14000f0cc:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0ce:	add    BYTE PTR [rbp-0x5adf5af0],ah
   14000f0d4:	xor    BYTE PTR [rbp-0x5a8f5ac0],ah
   14000f0da:	and    BYTE PTR [rbp-0x5a3f5a50],0xd0
   14000f0e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f0e2:	loopne 0x14000f089
   14000f0e4:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f0e6:	sub    BYTE PTR [rsi-0x59675980],ah
   14000f0ec:	test   al,0xa6
   14000f0ee:	mov    eax,0xf8a6c8a6
   14000f0f3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f0f4:	push   0xffffffffb8a7a8a7
   14000f0f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f0fa:	shl    BYTE PTR [rdi-0x57f75808],0x18
   14000f101:	test   al,0x28
   14000f103:	test   al,0x58
   14000f105:	test   al,0x68
   14000f107:	test   al,0x90
   14000f109:	test   al,0xb8
   14000f10b:	test   al,0xc8
   14000f10d:	test   al,0x10
   14000f10f:	test   eax,0xa950a928
   14000f114:	push   0xffffffffa8a990a9
   14000f119:	test   eax,0xa9e8a9c8
   14000f11e:	xor    BYTE PTR [rdx-0x55b755c0],ch
   14000f124:	cwde   
   14000f125:	stos   BYTE PTR es:[rdi],al
   14000f126:	shr    BYTE PTR [rdx-0x54f75510],1
   14000f12c:	adc    BYTE PTR [rbx-0x54775488],ch
   14000f132:	nop
   14000f133:	stos   DWORD PTR es:[rdi],eax
   14000f134:	fsubr  DWORD PTR [rbx-0x53b753c8]
   14000f13a:	push   rax
   14000f13b:	lods   al,BYTE PTR ds:[rsi]
   14000f13c:	mov    eax,0xf0acc8ac
   14000f141:	lods   al,BYTE PTR ds:[rsi]
   14000f142:	add    BYTE PTR [rbp-0x529752f8],ch
   14000f148:	movabs al,ds:0x30ae08adb8adb0ad
   14000f151:	scas   al,BYTE PTR es:[rdi]
   14000f152:	scas   al,BYTE PTR es:[rdi]
   14000f154:	rex.W scas al,BYTE PTR es:[rdi]
   14000f156:	mov    BYTE PTR [rsi-0x511f5138],ch
   14000f15c:	clc    
   14000f15d:	scas   al,BYTE PTR es:[rdi]
   14000f15e:	sbb    BYTE PTR [rdi-0x50b750d0],ch
   14000f164:	jo     0x14000f115
   14000f166:	cwde   
   14000f167:	scas   eax,DWORD PTR es:[rdi]
   14000f168:	test   al,0xaf
   14000f16a:	lock scas eax,DWORD PTR es:[rdi]
   14000f16c:	add    BYTE PTR [rax+0x740000],al
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	sub    BYTE PTR [rax-0x5f6f5f90],ah
   14000f17a:	mov    al,0xa0
   14000f17c:	enter  0xd8a0,0xa0
   14000f180:	loopne 0x14000f122
   14000f182:	lock movabs al,ds:0xa1e0a198a188a0f8
   14000f18c:	add    BYTE PTR [rdx-0x5ddf5de8],ah
   14000f192:	xor    BYTE PTR [rdx-0x5d1f5dc8],ah
   14000f198:	lock movabs ds:0xa358a338a328a2f8,al
   14000f1a2:	jo     0x14000f147
   14000f1a4:	mov    BYTE PTR [rbx-0x5c2f5c48],ah
   14000f1aa:	call   0x160a4fa52
   14000f1af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f1b0:	(bad)  
   14000f1b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f1b2:	cwde   
   14000f1b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f1b4:	loopne 0x14000f15a
   14000f1b6:	add    BYTE PTR [rbp-0x5adf5ae8],ah
   14000f1bc:	nop
   14000f1bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f1be:	mov    al,0xa5
   14000f1c0:	shl    BYTE PTR [rbp-0x59f75a10],1
   14000f1c6:	adc    BYTE PTR [rsi-0x59d759e0],ah
   14000f1cc:	cmp    BYTE PTR [rsi-0x58e759c0],ah
   14000f1d2:	sub    BYTE PTR [rdi-0x58a758b8],ah
   14000f1d8:	push   0xffffffffa0a790a7
   14000f1dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f1de:	add    BYTE PTR [rax],al
   14000f1e0:	add    al,al
   14000f1e2:	add    BYTE PTR [rax],al
   14000f1e4:	adc    al,0x0
   14000f1e6:	add    BYTE PTR [rax],al
   14000f1e8:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   14000f1ee:	xor    BYTE PTR [rax-0x5f8f5fb8],ah
