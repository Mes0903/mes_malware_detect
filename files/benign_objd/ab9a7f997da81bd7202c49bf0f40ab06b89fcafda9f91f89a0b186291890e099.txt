
ab9a7f997da81bd7202c49bf0f40ab06b89fcafda9f91f89a0b186291890e099.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0xc041]        # 0x14000d048
   140001007:	mov    QWORD PTR [rip+0xc88a],rax        # 0x14000d898
   14000100e:	ret    
   14000100f:	int3   
   140001010:	sub    rsp,0x28
   140001014:	xor    edx,edx
   140001016:	lea    rcx,[rip+0xc043]        # 0x14000d060
   14000101d:	call   QWORD PTR [rip+0x714d]        # 0x140008170
   140001023:	test   eax,eax
   140001025:	je     0x140001037
   140001027:	lea    rcx,[rip+0x65b2]        # 0x1400075e0
   14000102e:	add    rsp,0x28
   140001032:	jmp    0x140006530
   140001037:	mov    al,BYTE PTR [rsp+0x30]
   14000103b:	lea    rdx,[rip+0x9ca6]        # 0x14000ace8
   140001042:	lea    rcx,[rsp+0x30]
   140001047:	mov    BYTE PTR [rsp+0x30],al
   14000104b:	call   0x140006566
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	int3   
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	mov    rax,rsp
   140001073:	mov    QWORD PTR [rax+0x8],rbx
   140001077:	mov    QWORD PTR [rax+0x10],rbp
   14000107b:	mov    QWORD PTR [rax+0x18],rsi
   14000107f:	mov    QWORD PTR [rax+0x20],rdi
   140001083:	push   r14
   140001085:	sub    rsp,0x20
   140001089:	mov    rdi,QWORD PTR [rcx+0x8]
   14000108d:	mov    rsi,r9
   140001090:	mov    rbp,r8
   140001093:	mov    r14,rdx
   140001096:	mov    rax,QWORD PTR [rdi]
   140001099:	mov    rbx,QWORD PTR [rax+0x28]
   14000109d:	mov    rcx,rbx
   1400010a0:	call   QWORD PTR [rip+0x73ca]        # 0x140008470
   1400010a6:	mov    r9,rsi
   1400010a9:	mov    r8,rbp
   1400010ac:	mov    rdx,r14
   1400010af:	mov    rcx,rdi
   1400010b2:	mov    rax,rbx
   1400010b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010ba:	mov    rbp,QWORD PTR [rsp+0x38]
   1400010bf:	mov    rsi,QWORD PTR [rsp+0x40]
   1400010c4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400010c9:	add    rsp,0x20
   1400010cd:	pop    r14
   1400010cf:	rex.W jmp rax
   1400010d2:	int3   
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400010ea:	push   rdi
   1400010eb:	sub    rsp,0x20
   1400010ef:	mov    rdi,QWORD PTR [rcx+0x8]
   1400010f3:	mov    esi,edx
   1400010f5:	mov    rax,QWORD PTR [rdi]
   1400010f8:	mov    rbx,QWORD PTR [rax+0x30]
   1400010fc:	mov    rcx,rbx
   1400010ff:	call   QWORD PTR [rip+0x736b]        # 0x140008470
   140001105:	mov    edx,esi
   140001107:	mov    rcx,rdi
   14000110a:	mov    rax,rbx
   14000110d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001112:	mov    rsi,QWORD PTR [rsp+0x38]
   140001117:	add    rsp,0x20
   14000111b:	pop    rdi
   14000111c:	rex.W jmp rax
   14000111f:	int3   
   140001120:	int3   
   140001121:	int3   
   140001122:	int3   
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    rax,QWORD PTR [rdx]
   140001133:	cmp    rax,QWORD PTR [rip+0x7bd6]        # 0x140008d10
   14000113a:	jne    0x14000114e
   14000113c:	mov    rax,QWORD PTR [rdx+0x8]
   140001140:	cmp    rax,QWORD PTR [rip+0x7bd1]        # 0x140008d18
   140001147:	jne    0x14000114e
   140001149:	lea    rax,[rcx+0x18]
   14000114d:	ret    
   14000114e:	xor    eax,eax
   140001150:	ret    
   140001151:	int3   
   140001152:	int3   
   140001153:	int3   
   140001154:	int3   
   140001155:	int3   
   140001156:	int3   
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    QWORD PTR [rsp+0x8],rcx
   140001165:	push   rbx
   140001166:	sub    rsp,0x30
   14000116a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001173:	mov    rbx,rcx
   140001176:	lea    rax,[rcx+0x18]
   14000117a:	mov    QWORD PTR [rsp+0x50],rax
   14000117f:	lea    rcx,[rip+0x77c2]        # 0x140008948
   140001186:	mov    QWORD PTR [rax],rcx
   140001189:	mov    rax,QWORD PTR [rip+0x72c8]        # 0x140008458
   140001190:	mov    QWORD PTR [rbx],rax
   140001193:	test   dl,0x1
   140001196:	je     0x1400011a0
   140001198:	mov    rcx,rbx
   14000119b:	call   0x140005dec
   1400011a0:	mov    rax,rbx
   1400011a3:	add    rsp,0x30
   1400011a7:	pop    rbx
   1400011a8:	ret    
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400011b5:	sub    rsp,0x18
   1400011b9:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   1400011c1:	lea    rax,[rip+0x7780]        # 0x140008948
   1400011c8:	mov    QWORD PTR [rcx],rax
   1400011cb:	add    rsp,0x18
   1400011cf:	ret    
   1400011d0:	int3   
   1400011d1:	int3   
   1400011d2:	int3   
   1400011d3:	int3   
   1400011d4:	int3   
   1400011d5:	int3   
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	mov    QWORD PTR [rsp+0x8],rcx
   1400011dd:	sub    rsp,0x18
   1400011e1:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   1400011e9:	lea    rax,[rcx+0x18]
   1400011ed:	mov    QWORD PTR [rsp+0x28],rax
   1400011f2:	lea    rdx,[rip+0x774f]        # 0x140008948
   1400011f9:	mov    QWORD PTR [rax],rdx
   1400011fc:	mov    rax,QWORD PTR [rip+0x7255]        # 0x140008458
   140001203:	mov    QWORD PTR [rcx],rax
   140001206:	add    rsp,0x18
   14000120a:	ret    
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	xor    eax,eax
   140001222:	ret    
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	mov    eax,0x1
   140001235:	ret    
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	mov    r11,rsp
   140001243:	mov    QWORD PTR [r11+0x8],rcx
   140001247:	push   rdi
   140001248:	sub    rsp,0x30
   14000124c:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140001254:	mov    QWORD PTR [r11+0x10],rbx
   140001258:	mov    ebx,edx
   14000125a:	mov    rdi,rcx
   14000125d:	lea    rax,[rip+0x7744]        # 0x1400089a8
   140001264:	mov    QWORD PTR [rcx],rax
   140001267:	dec    DWORD PTR [rip+0xc577]        # 0x14000d7e4
   14000126d:	lea    rax,[rcx+0x20]
   140001271:	mov    QWORD PTR [r11+0x18],rax
   140001275:	lea    rcx,[rip+0x76a4]        # 0x140008920
   14000127c:	mov    QWORD PTR [rax],rcx
   14000127f:	mov    rcx,rdi
   140001282:	call   QWORD PTR [rip+0x71c0]        # 0x140008448
   140001288:	test   bl,0x1
   14000128b:	je     0x140001295
   14000128d:	mov    rcx,rdi
   140001290:	call   0x140005dec
   140001295:	mov    rax,rdi
   140001298:	mov    rbx,QWORD PTR [rsp+0x48]
   14000129d:	add    rsp,0x30
   1400012a1:	pop    rdi
   1400012a2:	ret    
   1400012a3:	int3   
   1400012a4:	int3   
   1400012a5:	int3   
   1400012a6:	int3   
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	mov    QWORD PTR [rsp+0x8],rcx
   1400012b1:	sub    rsp,0x18
   1400012b5:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   1400012bd:	lea    rax,[rip+0x765c]        # 0x140008920
   1400012c4:	mov    QWORD PTR [rcx],rax
   1400012c7:	add    rsp,0x18
   1400012cb:	ret    
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	sub    rsp,0x58
   1400012e4:	call   0x140006b88
   1400012e9:	neg    al
   1400012eb:	sbb    edx,edx
   1400012ed:	xor    ecx,ecx
   1400012ef:	and    edx,0x2
   1400012f2:	call   QWORD PTR [rip+0x6d38]        # 0x140008030
   1400012f8:	xor    ecx,ecx
   1400012fa:	test   eax,eax
   1400012fc:	js     0x14000132b
   1400012fe:	mov    QWORD PTR [rsp+0x40],rcx
   140001303:	xor    r9d,r9d
   140001306:	mov    DWORD PTR [rsp+0x38],ecx
   14000130a:	xor    r8d,r8d
   14000130d:	mov    QWORD PTR [rsp+0x30],rcx
   140001312:	or     edx,0xffffffff
   140001315:	mov    DWORD PTR [rsp+0x28],0x2
   14000131d:	mov    DWORD PTR [rsp+0x20],0x1
   140001325:	call   QWORD PTR [rip+0x6cfd]        # 0x140008028
   14000132b:	add    rsp,0x58
   14000132f:	ret    
   140001330:	int3   
   140001331:	int3   
   140001332:	int3   
   140001333:	int3   
   140001334:	int3   
   140001335:	int3   
   140001336:	int3   
   140001337:	int3   
   140001338:	int3   
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	rex push rdi
   140001342:	sub    rsp,0x50
   140001346:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000134f:	mov    QWORD PTR [rsp+0x60],rbx
   140001354:	mov    ecx,0x28
   140001359:	call   0x140005d6c
   14000135e:	mov    rbx,rax
   140001361:	mov    QWORD PTR [rsp+0x70],rax
   140001366:	test   rax,rax
   140001369:	je     0x1400013b3
   14000136b:	lea    rdx,[rip+0xbcde]        # 0x14000d050
   140001372:	mov    rcx,rax
   140001375:	call   QWORD PTR [rip+0x70e5]        # 0x140008460
   14000137b:	nop
   14000137c:	lea    rax,[rip+0x76ad]        # 0x140008a30
   140001383:	mov    QWORD PTR [rbx],rax
   140001386:	lea    rax,[rbx+0x18]
   14000138a:	mov    QWORD PTR [rsp+0x78],rax
   14000138f:	lea    rcx,[rip+0x75b2]        # 0x140008948
   140001396:	mov    QWORD PTR [rax],rcx
   140001399:	mov    QWORD PTR [rax+0x8],rbx
   14000139d:	lea    rcx,[rip+0x7664]        # 0x140008a08
   1400013a4:	mov    QWORD PTR [rax],rcx
   1400013a7:	lea    rax,[rip+0x753a]        # 0x1400088e8
   1400013ae:	mov    QWORD PTR [rbx],rax
   1400013b1:	jmp    0x1400013b5
   1400013b3:	xor    ebx,ebx
   1400013b5:	mov    QWORD PTR [rsp+0x68],rbx
   1400013ba:	test   rbx,rbx
   1400013bd:	jne    0x1400013c6
   1400013bf:	mov    eax,0x80041006
   1400013c4:	jmp    0x140001407
   1400013c6:	lock inc DWORD PTR [rbx+0x8]
   1400013ca:	lea    r8,[rsp+0x68]
   1400013cf:	lea    rcx,[rsp+0x38]
   1400013d4:	call   0x1400018c0
   1400013d9:	nop
   1400013da:	mov    r8,QWORD PTR [rsp+0x68]
   1400013df:	call   0x140003fe4
   1400013e4:	mov    edi,eax
   1400013e6:	cmp    BYTE PTR [rsp+0x38],0x0
   1400013eb:	jne    0x140001405
   1400013ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400013f2:	mov    rcx,rbx
   1400013f5:	call   QWORD PTR [rip+0x7075]        # 0x140008470
   1400013fb:	mov    rcx,QWORD PTR [rsp+0x48]
   140001400:	mov    rcx,QWORD PTR [rcx]
   140001403:	call   rbx
   140001405:	mov    eax,edi
   140001407:	mov    rbx,QWORD PTR [rsp+0x60]
   14000140c:	add    rsp,0x50
   140001410:	pop    rdi
   140001411:	ret    
   140001412:	int3   
   140001413:	int3   
   140001414:	int3   
   140001415:	int3   
   140001416:	int3   
   140001417:	int3   
   140001418:	lea    rax,[rip+0x7529]        # 0x140008948
   14000141f:	mov    QWORD PTR [rcx],rax
   140001422:	ret    
   140001423:	int3   
   140001424:	int3   
   140001425:	int3   
   140001426:	int3   
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	mov    QWORD PTR [rsp+0x8],rbx
   140001435:	mov    QWORD PTR [rsp+0x10],rbp
   14000143a:	mov    QWORD PTR [rsp+0x18],rsi
   14000143f:	push   rdi
   140001440:	sub    rsp,0x20
   140001444:	mov    rdi,QWORD PTR [rcx+0x8]
   140001448:	mov    rsi,r8
   14000144b:	mov    rbp,rdx
   14000144e:	mov    rax,QWORD PTR [rdi]
   140001451:	mov    rbx,QWORD PTR [rax]
   140001454:	mov    rcx,rbx
   140001457:	call   QWORD PTR [rip+0x7013]        # 0x140008470
   14000145d:	mov    r8,rsi
   140001460:	mov    rdx,rbp
   140001463:	mov    rcx,rdi
   140001466:	mov    rax,rbx
   140001469:	mov    rbx,QWORD PTR [rsp+0x30]
   14000146e:	mov    rbp,QWORD PTR [rsp+0x38]
   140001473:	mov    rsi,QWORD PTR [rsp+0x40]
   140001478:	add    rsp,0x20
   14000147c:	pop    rdi
   14000147d:	rex.W jmp rax
   140001480:	int3   
   140001481:	int3   
   140001482:	int3   
   140001483:	int3   
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	mov    QWORD PTR [rsp+0x8],rbx
   140001495:	push   rdi
   140001496:	sub    rsp,0x20
   14000149a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000149e:	mov    rax,QWORD PTR [rdi]
   1400014a1:	mov    rbx,QWORD PTR [rax+0x8]
   1400014a5:	mov    rcx,rbx
   1400014a8:	call   QWORD PTR [rip+0x6fc2]        # 0x140008470
   1400014ae:	mov    rcx,rdi
   1400014b1:	mov    rax,rbx
   1400014b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014b9:	add    rsp,0x20
   1400014bd:	pop    rdi
   1400014be:	rex.W jmp rax
   1400014c1:	int3   
   1400014c2:	int3   
   1400014c3:	int3   
   1400014c4:	int3   
   1400014c5:	int3   
   1400014c6:	int3   
   1400014c7:	int3   
   1400014c8:	int3   
   1400014c9:	int3   
   1400014ca:	int3   
   1400014cb:	int3   
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014d5:	push   rdi
   1400014d6:	sub    rsp,0x20
   1400014da:	mov    rdi,QWORD PTR [rcx+0x8]
   1400014de:	mov    rax,QWORD PTR [rdi]
   1400014e1:	mov    rbx,QWORD PTR [rax+0x10]
   1400014e5:	mov    rcx,rbx
   1400014e8:	call   QWORD PTR [rip+0x6f82]        # 0x140008470
   1400014ee:	mov    rcx,rdi
   1400014f1:	mov    rax,rbx
   1400014f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014f9:	add    rsp,0x20
   1400014fd:	pop    rdi
   1400014fe:	rex.W jmp rax
   140001501:	int3   
   140001502:	int3   
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	lea    rax,[rip+0x7411]        # 0x140008920
   14000150f:	mov    QWORD PTR [rcx],rax
   140001512:	ret    
   140001513:	int3   
   140001514:	int3   
   140001515:	int3   
   140001516:	int3   
   140001517:	int3   
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	mov    QWORD PTR [rsp+0x8],rbx
   140001525:	mov    QWORD PTR [rsp+0x10],rbp
   14000152a:	mov    QWORD PTR [rsp+0x18],rsi
   14000152f:	push   rdi
   140001530:	sub    rsp,0x20
   140001534:	mov    rdi,QWORD PTR [rcx+0x8]
   140001538:	mov    rsi,r8
   14000153b:	mov    rbp,rdx
   14000153e:	mov    rax,QWORD PTR [rdi+0x18]
   140001542:	test   rax,rax
   140001545:	cmovne rdi,rax
   140001549:	mov    rax,QWORD PTR [rdi]
   14000154c:	mov    rbx,QWORD PTR [rax]
   14000154f:	mov    rcx,rbx
   140001552:	call   QWORD PTR [rip+0x6f18]        # 0x140008470
   140001558:	mov    r8,rsi
   14000155b:	mov    rdx,rbp
   14000155e:	mov    rcx,rdi
   140001561:	mov    rax,rbx
   140001564:	mov    rbx,QWORD PTR [rsp+0x30]
   140001569:	mov    rbp,QWORD PTR [rsp+0x38]
   14000156e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001573:	add    rsp,0x20
   140001577:	pop    rdi
   140001578:	rex.W jmp rax
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	int3   
   140001589:	int3   
   14000158a:	int3   
   14000158b:	int3   
   14000158c:	int3   
   14000158d:	int3   
   14000158e:	int3   
   14000158f:	int3   
   140001590:	mov    QWORD PTR [rsp+0x8],rbx
   140001595:	push   rdi
   140001596:	sub    rsp,0x20
   14000159a:	mov    rdi,QWORD PTR [rcx+0x8]
   14000159e:	mov    rax,QWORD PTR [rdi+0x18]
   1400015a2:	test   rax,rax
   1400015a5:	cmovne rdi,rax
   1400015a9:	mov    rax,QWORD PTR [rdi]
   1400015ac:	mov    rbx,QWORD PTR [rax+0x8]
   1400015b0:	mov    rcx,rbx
   1400015b3:	call   QWORD PTR [rip+0x6eb7]        # 0x140008470
   1400015b9:	mov    rcx,rdi
   1400015bc:	mov    rax,rbx
   1400015bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015c4:	add    rsp,0x20
   1400015c8:	pop    rdi
   1400015c9:	rex.W jmp rax
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	int3   
   1400015d1:	int3   
   1400015d2:	int3   
   1400015d3:	int3   
   1400015d4:	int3   
   1400015d5:	int3   
   1400015d6:	int3   
   1400015d7:	int3   
   1400015d8:	int3   
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015e5:	push   rdi
   1400015e6:	sub    rsp,0x20
   1400015ea:	mov    rdi,QWORD PTR [rcx+0x8]
   1400015ee:	mov    rax,QWORD PTR [rdi+0x18]
   1400015f2:	test   rax,rax
   1400015f5:	cmovne rdi,rax
   1400015f9:	mov    rax,QWORD PTR [rdi]
   1400015fc:	mov    rbx,QWORD PTR [rax+0x10]
   140001600:	mov    rcx,rbx
   140001603:	call   QWORD PTR [rip+0x6e67]        # 0x140008470
   140001609:	mov    rcx,rdi
   14000160c:	mov    rax,rbx
   14000160f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001614:	add    rsp,0x20
   140001618:	pop    rdi
   140001619:	rex.W jmp rax
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	int3   
   140001621:	int3   
   140001622:	int3   
   140001623:	int3   
   140001624:	int3   
   140001625:	int3   
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    QWORD PTR [rsp+0x8],rcx
   140001635:	push   rbx
   140001636:	push   rsi
   140001637:	push   rdi
   140001638:	push   r14
   14000163a:	push   r15
   14000163c:	sub    rsp,0x40
   140001640:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001649:	mov    rsi,r9
   14000164c:	mov    r15,r8
   14000164f:	mov    r14,rcx
   140001652:	and    QWORD PTR [r9],0x0
   140001656:	test   rdx,rdx
   140001659:	je     0x140001665
   14000165b:	mov    eax,0x80040110
   140001660:	jmp    0x1400017b3
   140001665:	mov    rdi,QWORD PTR [rcx+0x10]
   140001669:	test   rdi,rdi
   14000166c:	je     0x140001692
   14000166e:	mov    rax,QWORD PTR [rdi]
   140001671:	mov    rbx,QWORD PTR [rax]
   140001674:	mov    rcx,rbx
   140001677:	call   QWORD PTR [rip+0x6df3]        # 0x140008470
   14000167d:	xor    edx,edx
   14000167f:	mov    rcx,rdi
   140001682:	call   rbx
   140001684:	test   eax,eax
   140001686:	jne    0x140001692
   140001688:	mov    eax,0x80080008
   14000168d:	jmp    0x1400017b3
   140001692:	and    QWORD PTR [rsp+0x28],0x0
   140001698:	and    QWORD PTR [rsp+0x28],0x0
   14000169e:	mov    ecx,0x30
   1400016a3:	call   0x140005d6c
   1400016a8:	mov    rbx,rax
   1400016ab:	mov    QWORD PTR [rsp+0x78],rax
   1400016b0:	test   rax,rax
   1400016b3:	je     0x1400016fc
   1400016b5:	xor    r8d,r8d
   1400016b8:	mov    rdx,QWORD PTR [r14+0x10]
   1400016bc:	mov    rcx,rax
   1400016bf:	call   QWORD PTR [rip+0x6d8b]        # 0x140008450
   1400016c5:	nop
   1400016c6:	lea    rax,[rip+0x72db]        # 0x1400089a8
   1400016cd:	mov    QWORD PTR [rbx],rax
   1400016d0:	lea    rax,[rbx+0x20]
   1400016d4:	mov    QWORD PTR [rsp+0x88],rax
   1400016dc:	lea    rcx,[rip+0x723d]        # 0x140008920
   1400016e3:	mov    QWORD PTR [rax],rcx
   1400016e6:	mov    QWORD PTR [rax+0x8],rbx
   1400016ea:	lea    rcx,[rip+0x72ef]        # 0x1400089e0
   1400016f1:	mov    QWORD PTR [rax],rcx
   1400016f4:	inc    DWORD PTR [rip+0xc0ea]        # 0x14000d7e4
   1400016fa:	jmp    0x1400016fe
   1400016fc:	xor    ebx,ebx
   1400016fe:	and    QWORD PTR [rsp+0x78],0x0
   140001704:	mov    QWORD PTR [rsp+0x78],rbx
   140001709:	test   rbx,rbx
   14000170c:	je     0x140001724
   14000170e:	mov    rax,QWORD PTR [rbx]
   140001711:	mov    rdi,QWORD PTR [rax+0x8]
   140001715:	mov    rcx,rdi
   140001718:	call   QWORD PTR [rip+0x6d52]        # 0x140008470
   14000171e:	mov    rcx,rbx
   140001721:	call   rdi
   140001723:	nop
   140001724:	mov    QWORD PTR [rsp+0x28],rbx
   140001729:	test   rbx,rbx
   14000172c:	je     0x140001744
   14000172e:	mov    rax,QWORD PTR [rbx]
   140001731:	mov    rdi,QWORD PTR [rax+0x8]
   140001735:	mov    rcx,rdi
   140001738:	call   QWORD PTR [rip+0x6d32]        # 0x140008470
   14000173e:	mov    rcx,rbx
   140001741:	call   rdi
   140001743:	nop
   140001744:	test   rbx,rbx
   140001747:	je     0x140001769
   140001749:	mov    rcx,rbx
   14000174c:	call   QWORD PTR [rip+0x6ce6]        # 0x140008438
   140001752:	mov    r8,rsi
   140001755:	mov    rdx,r15
   140001758:	mov    rcx,rbx
   14000175b:	call   QWORD PTR [rip+0x6cdf]        # 0x140008440
   140001761:	mov    esi,eax
   140001763:	mov    DWORD PTR [rsp+0x20],eax
   140001767:	jmp    0x140001772
   140001769:	mov    esi,0x80004005
   14000176e:	mov    DWORD PTR [rsp+0x20],esi
   140001772:	jmp    0x140001782
   140001774:	mov    r14,QWORD PTR [rsp+0x70]
   140001779:	mov    esi,DWORD PTR [rsp+0x20]
   14000177d:	mov    rbx,QWORD PTR [rsp+0x28]
   140001782:	mov    r14,QWORD PTR [r14+0x10]
   140001786:	test   r14,r14
   140001789:	je     0x1400017a3
   14000178b:	mov    rax,QWORD PTR [r14]
   14000178e:	mov    rdi,QWORD PTR [rax+0x8]
   140001792:	mov    rcx,rdi
   140001795:	call   QWORD PTR [rip+0x6cd5]        # 0x140008470
   14000179b:	xor    edx,edx
   14000179d:	mov    rcx,r14
   1400017a0:	call   rdi
   1400017a2:	nop
   1400017a3:	test   rbx,rbx
   1400017a6:	je     0x1400017b1
   1400017a8:	mov    rcx,rbx
   1400017ab:	call   QWORD PTR [rip+0x6c87]        # 0x140008438
   1400017b1:	mov    eax,esi
   1400017b3:	add    rsp,0x40
   1400017b7:	pop    r15
   1400017b9:	pop    r14
   1400017bb:	pop    rdi
   1400017bc:	pop    rsi
   1400017bd:	pop    rbx
   1400017be:	ret    
   1400017bf:	int3   
   1400017c0:	int3   
   1400017c1:	int3   
   1400017c2:	int3   
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017d5:	push   rdi
   1400017d6:	sub    rsp,0x20
   1400017da:	mov    rdi,QWORD PTR [rcx+0x10]
   1400017de:	mov    rax,QWORD PTR [rdi]
   1400017e1:	test   edx,edx
   1400017e3:	je     0x1400017ea
   1400017e5:	mov    rbx,QWORD PTR [rax]
   1400017e8:	jmp    0x1400017ee
   1400017ea:	mov    rbx,QWORD PTR [rax+0x8]
   1400017ee:	mov    rcx,rbx
   1400017f1:	call   QWORD PTR [rip+0x6c79]        # 0x140008470
   1400017f7:	xor    edx,edx
   1400017f9:	mov    rcx,rdi
   1400017fc:	call   rbx
   1400017fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140001803:	xor    eax,eax
   140001805:	add    rsp,0x20
   140001809:	pop    rdi
   14000180a:	ret    
   14000180b:	int3   
   14000180c:	int3   
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	int3   
   140001811:	int3   
   140001812:	int3   
   140001813:	int3   
   140001814:	mov    QWORD PTR [rsp+0x8],rbx
   140001819:	push   rdi
   14000181a:	sub    rsp,0x20
   14000181e:	cmp    BYTE PTR [rcx],0x0
   140001821:	jne    0x140001839
   140001823:	mov    rdi,QWORD PTR [rcx+0x8]
   140001827:	mov    rbx,QWORD PTR [rcx+0x10]
   14000182b:	mov    rcx,rdi
   14000182e:	call   QWORD PTR [rip+0x6c3c]        # 0x140008470
   140001834:	mov    rcx,QWORD PTR [rbx]
   140001837:	call   rdi
   140001839:	mov    rbx,QWORD PTR [rsp+0x30]
   14000183e:	add    rsp,0x20
   140001842:	pop    rdi
   140001843:	ret    
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	mov    QWORD PTR [rsp+0x8],rcx
   140001855:	push   rbx
   140001856:	sub    rsp,0x30
   14000185a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001863:	mov    rbx,rcx
   140001866:	lea    rax,[rcx+0x18]
   14000186a:	mov    QWORD PTR [rsp+0x50],rax
   14000186f:	lea    rcx,[rip+0x70d2]        # 0x140008948
   140001876:	mov    QWORD PTR [rax],rcx
   140001879:	mov    rax,QWORD PTR [rip+0x6bd8]        # 0x140008458
   140001880:	mov    QWORD PTR [rbx],rax
   140001883:	test   dl,0x1
   140001886:	je     0x140001890
   140001888:	mov    rcx,rbx
   14000188b:	call   0x140005dec
   140001890:	mov    rax,rbx
   140001893:	add    rsp,0x30
   140001897:	pop    rbx
   140001898:	ret    
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	sub    rsp,0x28
   1400018a4:	mov    rcx,QWORD PTR [rcx]
   1400018a7:	test   rcx,rcx
   1400018aa:	je     0x1400018b2
   1400018ac:	call   QWORD PTR [rip+0x6b86]        # 0x140008438
   1400018b2:	add    rsp,0x28
   1400018b6:	ret    
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400018c5:	sub    rsp,0x38
   1400018c9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400018d2:	and    DWORD PTR [rsp+0x20],0x0
   1400018d7:	mov    r9,r8
   1400018da:	call   0x1400018f8
   1400018df:	nop
   1400018e0:	mov    DWORD PTR [rsp+0x20],0x1
   1400018e8:	mov    rax,rcx
   1400018eb:	add    rsp,0x38
   1400018ef:	ret    
   1400018f0:	int3   
   1400018f1:	int3   
   1400018f2:	int3   
   1400018f3:	int3   
   1400018f4:	int3   
   1400018f5:	int3   
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	mov    QWORD PTR [rsp+0x8],rcx
   1400018fd:	sub    rsp,0x18
   140001901:	mov    QWORD PTR [rsp+0x8],0xfffffffffffffffe
   14000190a:	and    DWORD PTR [rsp],0x0
   14000190e:	mov    BYTE PTR [rcx],0x0
   140001911:	lea    rax,[rip+0x1c18]        # 0x140003530
   140001918:	mov    QWORD PTR [rcx+0x8],rax
   14000191c:	mov    QWORD PTR [rcx+0x10],r9
   140001920:	mov    DWORD PTR [rsp],0x1
   140001927:	mov    rax,rcx
   14000192a:	add    rsp,0x18
   14000192e:	ret    
   14000192f:	int3   
   140001930:	int3   
   140001931:	int3   
   140001932:	int3   
   140001933:	int3   
   140001934:	int3   
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	mov    DWORD PTR [rcx],0x216
   14000193e:	mov    rax,rcx
   140001941:	ret    
   140001942:	int3   
   140001943:	int3   
   140001944:	int3   
   140001945:	int3   
   140001946:	int3   
   140001947:	int3   
   140001948:	mov    rax,rsp
   14000194b:	mov    QWORD PTR [rax+0x10],rdx
   14000194f:	mov    QWORD PTR [rax+0x8],rcx
   140001953:	push   rbx
   140001954:	sub    rsp,0x30
   140001958:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140001960:	mov    rbx,rcx
   140001963:	lea    rdx,[rax+0x10]
   140001967:	call   QWORD PTR [rip+0x6963]        # 0x1400082d0
   14000196d:	nop
   14000196e:	lea    rax,[rip+0x716b]        # 0x140008ae0
   140001975:	mov    QWORD PTR [rbx],rax
   140001978:	mov    rax,rbx
   14000197b:	add    rsp,0x30
   14000197f:	pop    rbx
   140001980:	ret    
   140001981:	int3   
   140001982:	int3   
   140001983:	int3   
   140001984:	int3   
   140001985:	int3   
   140001986:	int3   
   140001987:	int3   
   140001988:	mov    QWORD PTR [rsp+0x8],rcx
   14000198d:	sub    rsp,0x38
   140001991:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000199a:	lea    rax,[rip+0x713f]        # 0x140008ae0
   1400019a1:	mov    QWORD PTR [rcx],rax
   1400019a4:	add    rsp,0x38
   1400019a8:	rex.W jmp QWORD PTR [rip+0x6919]        # 0x1400082c8
   1400019af:	int3   
   1400019b0:	int3   
   1400019b1:	int3   
   1400019b2:	int3   
   1400019b3:	int3   
   1400019b4:	int3   
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	sub    rsp,0x48
   1400019c4:	mov    rdx,rcx
   1400019c7:	lea    rcx,[rsp+0x20]
   1400019cc:	call   0x140001a40
   1400019d1:	lea    rdx,[rip+0x9288]        # 0x14000ac60
   1400019d8:	lea    rcx,[rsp+0x20]
   1400019dd:	call   0x140006566
   1400019e2:	int3   
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400019f5:	push   rdi
   1400019f6:	sub    rsp,0x30
   1400019fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a03:	mov    QWORD PTR [rsp+0x48],rbx
   140001a08:	mov    ebx,edx
   140001a0a:	mov    rdi,rcx
   140001a0d:	lea    rax,[rip+0x70cc]        # 0x140008ae0
   140001a14:	mov    QWORD PTR [rcx],rax
   140001a17:	call   QWORD PTR [rip+0x68ab]        # 0x1400082c8
   140001a1d:	test   bl,0x1
   140001a20:	je     0x140001a2a
   140001a22:	mov    rcx,rdi
   140001a25:	call   0x140005dec
   140001a2a:	mov    rax,rdi
   140001a2d:	mov    rbx,QWORD PTR [rsp+0x48]
   140001a32:	add    rsp,0x30
   140001a36:	pop    rdi
   140001a37:	ret    
   140001a38:	int3   
   140001a39:	int3   
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	int3   
   140001a3d:	int3   
   140001a3e:	int3   
   140001a3f:	int3   
   140001a40:	mov    QWORD PTR [rsp+0x8],rcx
   140001a45:	push   rbx
   140001a46:	sub    rsp,0x30
   140001a4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a53:	mov    rbx,rcx
   140001a56:	call   QWORD PTR [rip+0x685c]        # 0x1400082b8
   140001a5c:	nop
   140001a5d:	lea    rax,[rip+0x707c]        # 0x140008ae0
   140001a64:	mov    QWORD PTR [rbx],rax
   140001a67:	mov    rax,rbx
   140001a6a:	add    rsp,0x30
   140001a6e:	pop    rbx
   140001a6f:	ret    
   140001a70:	int3   
   140001a71:	int3   
   140001a72:	int3   
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	int3   
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	int3   
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	ret    0x0
   140001a83:	int3   
   140001a84:	int3   
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	mov    QWORD PTR [rsp+0x8],rcx
   140001a91:	push   rbx
   140001a92:	sub    rsp,0x30
   140001a96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a9f:	mov    rbx,rcx
   140001aa2:	lea    rax,[rip+0x701f]        # 0x140008ac8
   140001aa9:	mov    QWORD PTR [rcx],rax
   140001aac:	cmp    QWORD PTR [rcx+0x38],0x10
   140001ab1:	jb     0x140001abc
   140001ab3:	mov    rcx,QWORD PTR [rcx+0x20]
   140001ab7:	call   0x140005dec
   140001abc:	mov    QWORD PTR [rbx+0x38],0xf
   140001ac4:	and    QWORD PTR [rbx+0x30],0x0
   140001ac9:	mov    BYTE PTR [rbx+0x20],0x0
   140001acd:	mov    rcx,rbx
   140001ad0:	add    rsp,0x30
   140001ad4:	pop    rbx
   140001ad5:	rex.W jmp QWORD PTR [rip+0x67ec]        # 0x1400082c8
   140001adc:	int3   
   140001add:	int3   
   140001ade:	int3   
   140001adf:	int3   
   140001ae0:	int3   
   140001ae1:	int3   
   140001ae2:	int3   
   140001ae3:	int3   
   140001ae4:	int3   
   140001ae5:	int3   
   140001ae6:	int3   
   140001ae7:	int3   
   140001ae8:	int3   
   140001ae9:	int3   
   140001aea:	int3   
   140001aeb:	int3   
   140001aec:	int3   
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	cmp    QWORD PTR [rcx+0x38],0x10
   140001af5:	jb     0x140001afc
   140001af7:	mov    rax,QWORD PTR [rcx+0x20]
   140001afb:	ret    
   140001afc:	lea    rax,[rcx+0x20]
   140001b00:	ret    
   140001b01:	int3   
   140001b02:	int3   
   140001b03:	int3   
   140001b04:	int3   
   140001b05:	int3   
   140001b06:	int3   
   140001b07:	int3   
   140001b08:	int3   
   140001b09:	int3   
   140001b0a:	int3   
   140001b0b:	int3   
   140001b0c:	int3   
   140001b0d:	int3   
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	sub    rsp,0x78
   140001b14:	mov    rax,QWORD PTR [rip+0xb4e5]        # 0x14000d000
   140001b1b:	xor    rax,rsp
   140001b1e:	mov    QWORD PTR [rsp+0x60],rax
   140001b23:	mov    rdx,rcx
   140001b26:	lea    rcx,[rsp+0x20]
   140001b2b:	call   0x140001bc4
   140001b30:	lea    rdx,[rip+0x90c9]        # 0x14000ac00
   140001b37:	lea    rcx,[rsp+0x20]
   140001b3c:	call   0x140006566
   140001b41:	int3   
   140001b42:	int3   
   140001b43:	int3   
   140001b44:	int3   
   140001b45:	int3   
   140001b46:	int3   
   140001b47:	int3   
   140001b48:	int3   
   140001b49:	int3   
   140001b4a:	int3   
   140001b4b:	int3   
   140001b4c:	int3   
   140001b4d:	int3   
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	mov    QWORD PTR [rsp+0x8],rcx
   140001b55:	push   rdi
   140001b56:	sub    rsp,0x30
   140001b5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001b63:	mov    QWORD PTR [rsp+0x48],rbx
   140001b68:	mov    edi,edx
   140001b6a:	mov    rbx,rcx
   140001b6d:	lea    rax,[rip+0x6f54]        # 0x140008ac8
   140001b74:	mov    QWORD PTR [rcx],rax
   140001b77:	cmp    QWORD PTR [rcx+0x38],0x10
   140001b7c:	jb     0x140001b87
   140001b7e:	mov    rcx,QWORD PTR [rcx+0x20]
   140001b82:	call   0x140005dec
   140001b87:	mov    QWORD PTR [rbx+0x38],0xf
   140001b8f:	and    QWORD PTR [rbx+0x30],0x0
   140001b94:	mov    BYTE PTR [rbx+0x20],0x0
   140001b98:	mov    rcx,rbx
   140001b9b:	call   QWORD PTR [rip+0x6727]        # 0x1400082c8
   140001ba1:	test   dil,0x1
   140001ba5:	je     0x140001baf
   140001ba7:	mov    rcx,rbx
   140001baa:	call   0x140005dec
   140001baf:	mov    rax,rbx
   140001bb2:	mov    rbx,QWORD PTR [rsp+0x48]
   140001bb7:	add    rsp,0x30
   140001bbb:	pop    rdi
   140001bbc:	ret    
   140001bbd:	int3   
   140001bbe:	int3   
   140001bbf:	int3   
   140001bc0:	int3   
   140001bc1:	int3   
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	mov    QWORD PTR [rsp+0x8],rcx
   140001bc9:	push   rdi
   140001bca:	sub    rsp,0x30
   140001bce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001bd7:	mov    QWORD PTR [rsp+0x48],rbx
   140001bdc:	mov    rbx,rdx
   140001bdf:	mov    rdi,rcx
   140001be2:	call   QWORD PTR [rip+0x66d0]        # 0x1400082b8
   140001be8:	nop
   140001be9:	lea    rax,[rip+0x6ed8]        # 0x140008ac8
   140001bf0:	mov    QWORD PTR [rdi],rax
   140001bf3:	lea    rcx,[rdi+0x18]
   140001bf7:	mov    QWORD PTR [rcx+0x20],0xf
   140001bff:	and    QWORD PTR [rcx+0x18],0x0
   140001c04:	mov    BYTE PTR [rcx+0x8],0x0
   140001c08:	lea    rdx,[rbx+0x18]
   140001c0c:	or     r9,0xffffffffffffffff
   140001c10:	xor    r8d,r8d
   140001c13:	call   0x1400028fc
   140001c18:	nop
   140001c19:	mov    rax,rdi
   140001c1c:	mov    rbx,QWORD PTR [rsp+0x48]
   140001c21:	add    rsp,0x30
   140001c25:	pop    rdi
   140001c26:	ret    
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    QWORD PTR [rsp+0x8],rcx
   140001c35:	push   rdi
   140001c36:	sub    rsp,0x30
   140001c3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001c43:	mov    QWORD PTR [rsp+0x48],rbx
   140001c48:	mov    rbx,rdx
   140001c4b:	mov    rdi,rcx
   140001c4e:	call   QWORD PTR [rip+0x6654]        # 0x1400082a8
   140001c54:	nop
   140001c55:	lea    rax,[rip+0x6e6c]        # 0x140008ac8
   140001c5c:	mov    QWORD PTR [rdi],rax
   140001c5f:	lea    rcx,[rdi+0x18]
   140001c63:	mov    QWORD PTR [rcx+0x20],0xf
   140001c6b:	and    QWORD PTR [rcx+0x18],0x0
   140001c70:	mov    BYTE PTR [rcx+0x8],0x0
   140001c74:	or     r9,0xffffffffffffffff
   140001c78:	xor    r8d,r8d
   140001c7b:	mov    rdx,rbx
   140001c7e:	call   0x1400028fc
   140001c83:	nop
   140001c84:	lea    rax,[rip+0x6e25]        # 0x140008ab0
   140001c8b:	mov    QWORD PTR [rdi],rax
   140001c8e:	mov    rax,rdi
   140001c91:	mov    rbx,QWORD PTR [rsp+0x48]
   140001c96:	add    rsp,0x30
   140001c9a:	pop    rdi
   140001c9b:	ret    
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	int3   
   140001ca1:	int3   
   140001ca2:	int3   
   140001ca3:	int3   
   140001ca4:	mov    QWORD PTR [rsp+0x8],rcx
   140001ca9:	push   rbx
   140001caa:	sub    rsp,0x30
   140001cae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001cb7:	mov    rbx,rcx
   140001cba:	lea    rax,[rip+0x6def]        # 0x140008ab0
   140001cc1:	mov    QWORD PTR [rcx],rax
   140001cc4:	lea    rax,[rip+0x6dfd]        # 0x140008ac8
   140001ccb:	mov    QWORD PTR [rcx],rax
   140001cce:	cmp    QWORD PTR [rcx+0x38],0x10
   140001cd3:	jb     0x140001cde
   140001cd5:	mov    rcx,QWORD PTR [rcx+0x20]
   140001cd9:	call   0x140005dec
   140001cde:	mov    QWORD PTR [rbx+0x38],0xf
   140001ce6:	and    QWORD PTR [rbx+0x30],0x0
   140001ceb:	mov    BYTE PTR [rbx+0x20],0x0
   140001cef:	mov    rcx,rbx
   140001cf2:	add    rsp,0x30
   140001cf6:	pop    rbx
   140001cf7:	rex.W jmp QWORD PTR [rip+0x65ca]        # 0x1400082c8
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	int3   
   140001d01:	int3   
   140001d02:	int3   
   140001d03:	int3   
   140001d04:	int3   
   140001d05:	int3   
   140001d06:	int3   
   140001d07:	int3   
   140001d08:	int3   
   140001d09:	int3   
   140001d0a:	int3   
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	sub    rsp,0x78
   140001d14:	mov    rax,QWORD PTR [rip+0xb2e5]        # 0x14000d000
   140001d1b:	xor    rax,rsp
   140001d1e:	mov    QWORD PTR [rsp+0x60],rax
   140001d23:	mov    rdx,rcx
   140001d26:	lea    rcx,[rsp+0x20]
   140001d2b:	call   0x140001dd0
   140001d30:	lea    rdx,[rip+0x8e69]        # 0x14000aba0
   140001d37:	lea    rcx,[rsp+0x20]
   140001d3c:	call   0x140006566
   140001d41:	int3   
   140001d42:	int3   
   140001d43:	int3   
   140001d44:	int3   
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	mov    QWORD PTR [rsp+0x8],rcx
   140001d55:	push   rdi
   140001d56:	sub    rsp,0x30
   140001d5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001d63:	mov    QWORD PTR [rsp+0x48],rbx
   140001d68:	mov    edi,edx
   140001d6a:	mov    rbx,rcx
   140001d6d:	lea    rax,[rip+0x6d3c]        # 0x140008ab0
   140001d74:	mov    QWORD PTR [rcx],rax
   140001d77:	lea    rax,[rip+0x6d4a]        # 0x140008ac8
   140001d7e:	mov    QWORD PTR [rcx],rax
   140001d81:	cmp    QWORD PTR [rcx+0x38],0x10
   140001d86:	jb     0x140001d91
   140001d88:	mov    rcx,QWORD PTR [rcx+0x20]
   140001d8c:	call   0x140005dec
   140001d91:	mov    QWORD PTR [rbx+0x38],0xf
   140001d99:	and    QWORD PTR [rbx+0x30],0x0
   140001d9e:	mov    BYTE PTR [rbx+0x20],0x0
   140001da2:	mov    rcx,rbx
   140001da5:	call   QWORD PTR [rip+0x651d]        # 0x1400082c8
   140001dab:	test   dil,0x1
   140001daf:	je     0x140001db9
   140001db1:	mov    rcx,rbx
   140001db4:	call   0x140005dec
   140001db9:	mov    rax,rbx
   140001dbc:	mov    rbx,QWORD PTR [rsp+0x48]
   140001dc1:	add    rsp,0x30
   140001dc5:	pop    rdi
   140001dc6:	ret    
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    QWORD PTR [rsp+0x8],rcx
   140001dd5:	push   rdi
   140001dd6:	sub    rsp,0x30
   140001dda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001de3:	mov    QWORD PTR [rsp+0x48],rbx
   140001de8:	mov    rbx,rdx
   140001deb:	mov    rdi,rcx
   140001dee:	call   QWORD PTR [rip+0x64c4]        # 0x1400082b8
   140001df4:	nop
   140001df5:	lea    rax,[rip+0x6ccc]        # 0x140008ac8
   140001dfc:	mov    QWORD PTR [rdi],rax
   140001dff:	lea    rcx,[rdi+0x18]
   140001e03:	mov    QWORD PTR [rcx+0x20],0xf
   140001e0b:	and    QWORD PTR [rcx+0x18],0x0
   140001e10:	mov    BYTE PTR [rcx+0x8],0x0
   140001e14:	lea    rdx,[rbx+0x18]
   140001e18:	or     r9,0xffffffffffffffff
   140001e1c:	xor    r8d,r8d
   140001e1f:	call   0x1400028fc
   140001e24:	nop
   140001e25:	lea    rax,[rip+0x6c84]        # 0x140008ab0
   140001e2c:	mov    QWORD PTR [rdi],rax
   140001e2f:	mov    rax,rdi
   140001e32:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e37:	add    rsp,0x30
   140001e3b:	pop    rdi
   140001e3c:	ret    
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	int3   
   140001e41:	int3   
   140001e42:	int3   
   140001e43:	int3   
   140001e44:	int3   
   140001e45:	int3   
   140001e46:	int3   
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	mov    eax,0x1
   140001e55:	lock xadd DWORD PTR [rcx+0x20],eax
   140001e5a:	inc    eax
   140001e5c:	ret    
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	int3   
   140001e61:	int3   
   140001e62:	int3   
   140001e63:	int3   
   140001e64:	mov    rax,rsp
   140001e67:	mov    QWORD PTR [rax+0x8],rcx
   140001e6b:	push   r14
   140001e6d:	sub    rsp,0x30
   140001e71:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140001e79:	mov    QWORD PTR [rax+0x10],rbx
   140001e7d:	mov    QWORD PTR [rax+0x18],rsi
   140001e81:	mov    QWORD PTR [rax+0x20],rdi
   140001e85:	mov    ebx,r9d
   140001e88:	mov    rdi,r8
   140001e8b:	mov    rsi,rdx
   140001e8e:	mov    r14,rcx
   140001e91:	lea    rax,[rip+0x6bf0]        # 0x140008a88
   140001e98:	mov    QWORD PTR [rcx],rax
   140001e9b:	lea    rax,[rip+0x6bc6]        # 0x140008a68
   140001ea2:	mov    QWORD PTR [rcx+0x8],rax
   140001ea6:	add    rcx,0x28
   140001eaa:	call   QWORD PTR [rip+0x64b0]        # 0x140008360
   140001eb0:	nop
   140001eb1:	and    QWORD PTR [r14+0x60],0x0
   140001eb6:	and    QWORD PTR [r14+0x68],0x0
   140001ebb:	and    QWORD PTR [r14+0x70],0x0
   140001ec0:	mov    QWORD PTR [r14+0x18],rdi
   140001ec4:	mov    BYTE PTR [r14+0x50],0x0
   140001ec9:	mov    DWORD PTR [r14+0x54],ebx
   140001ecd:	mov    rax,QWORD PTR [rdi]
   140001ed0:	mov    rbx,QWORD PTR [rax]
   140001ed3:	mov    rcx,rbx
   140001ed6:	call   QWORD PTR [rip+0x6594]        # 0x140008470
   140001edc:	mov    rdx,r14
   140001edf:	mov    rcx,rdi
   140001ee2:	call   rbx
   140001ee4:	mov    QWORD PTR [r14+0x10],rsi
   140001ee8:	mov    rax,QWORD PTR [rsi]
   140001eeb:	mov    rbx,QWORD PTR [rax+0x8]
   140001eef:	mov    rcx,rbx
   140001ef2:	call   QWORD PTR [rip+0x6578]        # 0x140008470
   140001ef8:	mov    rcx,rsi
   140001efb:	call   rbx
   140001efd:	and    DWORD PTR [r14+0x20],0x0
   140001f02:	mov    rax,r14
   140001f05:	mov    rbx,QWORD PTR [rsp+0x48]
   140001f0a:	mov    rsi,QWORD PTR [rsp+0x50]
   140001f0f:	mov    rdi,QWORD PTR [rsp+0x58]
   140001f14:	add    rsp,0x30
   140001f18:	pop    r14
   140001f1a:	ret    
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	int3   
   140001f21:	int3   
   140001f22:	int3   
   140001f23:	int3   
   140001f24:	int3   
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    QWORD PTR [rsp+0x8],rbx
   140001f35:	push   rdi
   140001f36:	sub    rsp,0x20
   140001f3a:	mov    rdi,rcx
   140001f3d:	xor    ecx,ecx
   140001f3f:	mov    QWORD PTR [r8],rcx
   140001f42:	mov    rax,QWORD PTR [rdx]
   140001f45:	cmp    rax,QWORD PTR [rip+0x6dd4]        # 0x140008d20
   140001f4c:	jne    0x140001f5b
   140001f4e:	mov    rax,QWORD PTR [rdx+0x8]
   140001f52:	cmp    rax,QWORD PTR [rip+0x6dcf]        # 0x140008d28
   140001f59:	je     0x140001f74
   140001f5b:	mov    rax,QWORD PTR [rdx]
   140001f5e:	cmp    rax,QWORD PTR [rip+0x6ffb]        # 0x140008f60
   140001f65:	jne    0x140001f79
   140001f67:	mov    rax,QWORD PTR [rdx+0x8]
   140001f6b:	cmp    rax,QWORD PTR [rip+0x6ff6]        # 0x140008f68
   140001f72:	jne    0x140001f79
   140001f74:	mov    QWORD PTR [r8],rdi
   140001f77:	jmp    0x140001f9e
   140001f79:	mov    rax,QWORD PTR [rdx]
   140001f7c:	cmp    rax,QWORD PTR [rip+0x6fed]        # 0x140008f70
   140001f83:	jne    0x140001fb7
   140001f85:	mov    rax,QWORD PTR [rdx+0x8]
   140001f89:	cmp    rax,QWORD PTR [rip+0x6fe8]        # 0x140008f78
   140001f90:	jne    0x140001fb7
   140001f92:	test   rdi,rdi
   140001f95:	je     0x140001f9b
   140001f97:	lea    rcx,[rdi+0x8]
   140001f9b:	mov    QWORD PTR [r8],rcx
   140001f9e:	mov    rax,QWORD PTR [rdi]
   140001fa1:	mov    rbx,QWORD PTR [rax+0x8]
   140001fa5:	mov    rcx,rbx
   140001fa8:	call   QWORD PTR [rip+0x64c2]        # 0x140008470
   140001fae:	mov    rcx,rdi
   140001fb1:	call   rbx
   140001fb3:	xor    eax,eax
   140001fb5:	jmp    0x140001fbc
   140001fb7:	mov    eax,0x80004002
   140001fbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001fc1:	add    rsp,0x20
   140001fc5:	pop    rdi
   140001fc6:	ret    
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	rex push rbx
   140001fd2:	sub    rsp,0x20
   140001fd6:	or     ebx,0xffffffff
   140001fd9:	lock xadd DWORD PTR [rcx+0x20],ebx
   140001fde:	sub    ebx,0x1
   140001fe1:	jne    0x140001fed
   140001fe3:	test   rcx,rcx
   140001fe6:	je     0x140001fed
   140001fe8:	call   0x140001ffc
   140001fed:	mov    eax,ebx
   140001fef:	add    rsp,0x20
   140001ff3:	pop    rbx
   140001ff4:	ret    
   140001ff5:	int3   
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	mov    r11,rsp
   140001fff:	mov    QWORD PTR [r11+0x8],rcx
   140002003:	push   rdi
   140002004:	sub    rsp,0x30
   140002008:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140002010:	mov    QWORD PTR [r11+0x10],rbx
   140002014:	mov    QWORD PTR [r11+0x20],rsi
   140002018:	mov    rsi,rcx
   14000201b:	lea    rax,[rip+0x6a66]        # 0x140008a88
   140002022:	mov    QWORD PTR [rcx],rax
   140002025:	lea    rax,[rip+0x6a3c]        # 0x140008a68
   14000202c:	mov    QWORD PTR [rcx+0x8],rax
   140002030:	cmp    QWORD PTR [rcx+0x10],0x0
   140002035:	je     0x140002074
   140002037:	lea    rdx,[rcx+0x28]
   14000203b:	lea    rcx,[r11+0x18]
   14000203f:	call   QWORD PTR [rip+0x632b]        # 0x140008370
   140002045:	nop
   140002046:	mov    rdi,QWORD PTR [rsi+0x10]
   14000204a:	and    QWORD PTR [rsi+0x10],0x0
   14000204f:	lea    rcx,[rsp+0x50]
   140002054:	call   QWORD PTR [rip+0x631e]        # 0x140008378
   14000205a:	test   rdi,rdi
   14000205d:	je     0x140002074
   14000205f:	mov    rax,QWORD PTR [rdi]
   140002062:	mov    rbx,QWORD PTR [rax+0x10]
   140002066:	mov    rcx,rbx
   140002069:	call   QWORD PTR [rip+0x6401]        # 0x140008470
   14000206f:	mov    rcx,rdi
   140002072:	call   rbx
   140002074:	mov    rdi,QWORD PTR [rsi+0x18]
   140002078:	mov    rax,QWORD PTR [rdi]
   14000207b:	mov    rbx,QWORD PTR [rax+0x8]
   14000207f:	mov    rcx,rbx
   140002082:	call   QWORD PTR [rip+0x63e8]        # 0x140008470
   140002088:	mov    rdx,rsi
   14000208b:	mov    rcx,rdi
   14000208e:	call   rbx
   140002090:	nop
   140002091:	mov    rbx,QWORD PTR [rsi+0x60]
   140002095:	test   rbx,rbx
   140002098:	je     0x1400020bb
   14000209a:	mov    rdi,QWORD PTR [rsi+0x68]
   14000209e:	jmp    0x1400020ad
   1400020a0:	mov    rcx,rbx
   1400020a3:	call   QWORD PTR [rip+0x630f]        # 0x1400083b8
   1400020a9:	add    rbx,0x10
   1400020ad:	cmp    rbx,rdi
   1400020b0:	jne    0x1400020a0
   1400020b2:	mov    rcx,QWORD PTR [rsi+0x60]
   1400020b6:	call   0x140005dec
   1400020bb:	and    QWORD PTR [rsi+0x60],0x0
   1400020c0:	and    QWORD PTR [rsi+0x68],0x0
   1400020c5:	and    QWORD PTR [rsi+0x70],0x0
   1400020ca:	lea    rcx,[rsi+0x28]
   1400020ce:	call   QWORD PTR [rip+0x6294]        # 0x140008368
   1400020d4:	mov    rcx,rsi
   1400020d7:	call   0x140005dec
   1400020dc:	mov    rax,rsi
   1400020df:	mov    rbx,QWORD PTR [rsp+0x48]
   1400020e4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400020e9:	add    rsp,0x30
   1400020ed:	pop    rdi
   1400020ee:	ret    
   1400020ef:	int3   
   1400020f0:	int3   
   1400020f1:	int3   
   1400020f2:	int3   
   1400020f3:	int3   
   1400020f4:	int3   
   1400020f5:	int3   
   1400020f6:	int3   
   1400020f7:	int3   
   1400020f8:	mov    rax,rsp
   1400020fb:	push   rdi
   1400020fc:	sub    rsp,0x260
   140002103:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000210c:	mov    QWORD PTR [rax+0x10],rbx
   140002110:	mov    QWORD PTR [rax+0x18],rsi
   140002114:	mov    rax,QWORD PTR [rip+0xaee5]        # 0x14000d000
   14000211b:	xor    rax,rsp
   14000211e:	mov    QWORD PTR [rsp+0x250],rax
   140002126:	mov    rdi,rcx
   140002129:	xor    ebx,ebx
   14000212b:	cmp    DWORD PTR [rcx+0x54],ebx
   14000212e:	jne    0x140002137
   140002130:	xor    eax,eax
   140002132:	jmp    0x14000222c
   140002137:	call   QWORD PTR [rip+0x5ee3]        # 0x140008020
   14000213d:	mov    esi,eax
   14000213f:	test   eax,eax
   140002141:	jns    0x14000215c
   140002143:	mov    r8d,eax
   140002146:	lea    rdx,[rip+0x6a63]        # 0x140008bb0
   14000214d:	xor    ecx,ecx
   14000214f:	call   QWORD PTR [rip+0x6273]        # 0x1400083c8
   140002155:	mov    eax,esi
   140002157:	jmp    0x14000222c
   14000215c:	mov    edx,0x1
   140002161:	lea    rcx,[rsp+0x28]
   140002166:	call   QWORD PTR [rip+0x6254]        # 0x1400083c0
   14000216c:	nop
   14000216d:	call   QWORD PTR [rip+0x5ea5]        # 0x140008018
   140002173:	cmp    DWORD PTR [rsp+0x30],ebx
   140002177:	je     0x140002192
   140002179:	lea    rdx,[rip+0x6a80]        # 0x140008c00
   140002180:	xor    ecx,ecx
   140002182:	call   QWORD PTR [rip+0x6240]        # 0x1400083c8
   140002188:	mov    ebx,0x80041003
   14000218d:	jmp    0x14000221f
   140002192:	lea    rdx,[rdi+0x28]
   140002196:	lea    rcx,[rsp+0x38]
   14000219b:	call   QWORD PTR [rip+0x61cf]        # 0x140008370
   1400021a1:	nop
   1400021a2:	mov    esi,ebx
   1400021a4:	cmp    QWORD PTR [rdi+0x60],rbx
   1400021a8:	jne    0x1400021af
   1400021aa:	mov    rax,rbx
   1400021ad:	jmp    0x1400021bb
   1400021af:	mov    rax,QWORD PTR [rdi+0x68]
   1400021b3:	sub    rax,QWORD PTR [rdi+0x60]
   1400021b7:	sar    rax,0x4
   1400021bb:	movsxd rdx,esi
   1400021be:	lea    rcx,[rsp+0x28]
   1400021c3:	cmp    rdx,rax
   1400021c6:	jae    0x1400021de
   1400021c8:	shl    rdx,0x4
   1400021cc:	add    rdx,QWORD PTR [rdi+0x60]
   1400021d0:	call   QWORD PTR [rip+0x61da]        # 0x1400083b0
   1400021d6:	test   eax,eax
   1400021d8:	jne    0x140002213
   1400021da:	inc    esi
   1400021dc:	jmp    0x1400021a4
   1400021de:	mov    DWORD PTR [rsp+0x20],0x100
   1400021e6:	lea    r8,[rsp+0x20]
   1400021eb:	lea    rdx,[rsp+0x50]
   1400021f0:	call   QWORD PTR [rip+0x622a]        # 0x140008420
   1400021f6:	test   eax,eax
   1400021f8:	je     0x14000220e
   1400021fa:	lea    r8,[rsp+0x50]
   1400021ff:	lea    rdx,[rip+0x6a3a]        # 0x140008c40
   140002206:	xor    ecx,ecx
   140002208:	call   QWORD PTR [rip+0x61ba]        # 0x1400083c8
   14000220e:	mov    ebx,0x80070005
   140002213:	lea    rcx,[rsp+0x38]
   140002218:	call   QWORD PTR [rip+0x615a]        # 0x140008378
   14000221e:	nop
   14000221f:	lea    rcx,[rsp+0x28]
   140002224:	call   QWORD PTR [rip+0x618e]        # 0x1400083b8
   14000222a:	mov    eax,ebx
   14000222c:	mov    rcx,QWORD PTR [rsp+0x250]
   140002234:	xor    rcx,rsp
   140002237:	call   0x1400063e0
   14000223c:	lea    r11,[rsp+0x260]
   140002244:	mov    rbx,QWORD PTR [r11+0x18]
   140002248:	mov    rsi,QWORD PTR [r11+0x20]
   14000224c:	mov    rsp,r11
   14000224f:	pop    rdi
   140002250:	ret    
   140002251:	int3   
   140002252:	int3   
   140002253:	int3   
   140002254:	int3   
   140002255:	int3   
   140002256:	int3   
   140002257:	int3   
   140002258:	int3   
   140002259:	int3   
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	int3   
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	mov    rax,rsp
   140002263:	push   rdi
   140002264:	push   r12
   140002266:	push   r13
   140002268:	push   r14
   14000226a:	push   r15
   14000226c:	sub    rsp,0x50
   140002270:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140002278:	mov    QWORD PTR [rax+0x8],rbx
   14000227c:	mov    QWORD PTR [rax+0x18],rsi
   140002280:	mov    r13d,r8d
   140002283:	mov    r14,rdx
   140002286:	mov    rsi,rcx
   140002289:	xor    ebx,ebx
   14000228b:	test   rdx,rdx
   14000228e:	je     0x1400023b5
   140002294:	mov    rcx,rdx
   140002297:	call   QWORD PTR [rip+0x5efb]        # 0x140008198
   14000229d:	test   eax,eax
   14000229f:	jne    0x1400022ab
   1400022a1:	mov    eax,0x80041008
   1400022a6:	jmp    0x1400023c1
   1400022ab:	lea    rdx,[rsi+0x20]
   1400022af:	lea    rcx,[rsp+0x88]
   1400022b7:	call   QWORD PTR [rip+0x60b3]        # 0x140008370
   1400022bd:	nop
   1400022be:	mov    r12d,ebx
   1400022c1:	mov    r15,rbx
   1400022c4:	cmp    QWORD PTR [rsi+0x58],rbx
   1400022c8:	jne    0x1400022cf
   1400022ca:	mov    rcx,rbx
   1400022cd:	jmp    0x1400022db
   1400022cf:	mov    rcx,QWORD PTR [rsi+0x60]
   1400022d3:	sub    rcx,QWORD PTR [rsi+0x58]
   1400022d7:	sar    rcx,0x4
   1400022db:	movsxd rax,r12d
   1400022de:	cmp    rax,rcx
   1400022e1:	jae    0x140002318
   1400022e3:	mov    rcx,QWORD PTR [rsi+0x58]
   1400022e7:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400022eb:	call   QWORD PTR [rip+0x5eaf]        # 0x1400081a0
   1400022f1:	cmp    eax,r13d
   1400022f4:	jne    0x14000230f
   1400022f6:	mov    rdx,QWORD PTR [rsi+0x58]
   1400022fa:	mov    rdx,QWORD PTR [r15+rdx*1]
   1400022fe:	mov    rcx,r14
   140002301:	call   QWORD PTR [rip+0x5ea1]        # 0x1400081a8
   140002307:	test   eax,eax
   140002309:	jne    0x1400023a3
   14000230f:	inc    r12d
   140002312:	add    r15,0x10
   140002316:	jmp    0x1400022c4
   140002318:	mov    rdx,r14
   14000231b:	lea    rcx,[rsp+0x38]
   140002320:	call   QWORD PTR [rip+0x6082]        # 0x1400083a8
   140002326:	mov    r9,rax
   140002329:	mov    rdx,QWORD PTR [rsi+0x58]
   14000232d:	test   rdx,rdx
   140002330:	jne    0x140002337
   140002332:	mov    rcx,rbx
   140002335:	jmp    0x140002342
   140002337:	mov    rcx,QWORD PTR [rsi+0x60]
   14000233b:	sub    rcx,rdx
   14000233e:	sar    rcx,0x4
   140002342:	test   rdx,rdx
   140002345:	je     0x140002372
   140002347:	mov    rax,QWORD PTR [rsi+0x68]
   14000234b:	sub    rax,rdx
   14000234e:	sar    rax,0x4
   140002352:	cmp    rcx,rax
   140002355:	jae    0x140002372
   140002357:	mov    rcx,QWORD PTR [rsi+0x60]
   14000235b:	lea    rbx,[rcx+0x10]
   14000235f:	mov    r8,r9
   140002362:	mov    edx,0x1
   140002367:	call   0x140003158
   14000236c:	mov    QWORD PTR [rsi+0x60],rbx
   140002370:	jmp    0x140002380
   140002372:	mov    rdx,QWORD PTR [rsi+0x60]
   140002376:	lea    rcx,[rsi+0x50]
   14000237a:	call   0x140002b68
   14000237f:	nop
   140002380:	lea    rcx,[rsp+0x38]
   140002385:	call   QWORD PTR [rip+0x602d]        # 0x1400083b8
   14000238b:	nop
   14000238c:	lea    rcx,[rsp+0x88]
   140002394:	call   QWORD PTR [rip+0x5fde]        # 0x140008378
   14000239a:	xor    eax,eax
   14000239c:	jmp    0x1400023c1
   14000239e:	mov    ebx,0x80041006
   1400023a3:	lea    rcx,[rsp+0x88]
   1400023ab:	call   QWORD PTR [rip+0x5fc7]        # 0x140008378
   1400023b1:	mov    eax,ebx
   1400023b3:	jmp    0x1400023c1
   1400023b5:	mov    eax,DWORD PTR [rcx+0x4c]
   1400023b8:	neg    eax
   1400023ba:	sbb    eax,eax
   1400023bc:	and    eax,0x80041008
   1400023c1:	lea    r11,[rsp+0x50]
   1400023c6:	mov    rbx,QWORD PTR [r11+0x30]
   1400023ca:	mov    rsi,QWORD PTR [r11+0x40]
   1400023ce:	mov    rsp,r11
   1400023d1:	pop    r15
   1400023d3:	pop    r14
   1400023d5:	pop    r13
   1400023d7:	pop    r12
   1400023d9:	pop    rdi
   1400023da:	ret    
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	int3   
   1400023e1:	int3   
   1400023e2:	int3   
   1400023e3:	int3   
   1400023e4:	int3   
   1400023e5:	int3   
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	mov    rax,rsp
   1400023f3:	push   rsi
   1400023f4:	push   rdi
   1400023f5:	push   r14
   1400023f7:	sub    rsp,0x30
   1400023fb:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140002403:	mov    QWORD PTR [rax+0x10],rbx
   140002407:	mov    QWORD PTR [rax+0x18],rbp
   14000240b:	mov    rbp,r8
   14000240e:	mov    r14d,edx
   140002411:	mov    rdi,rcx
   140002414:	mov    esi,0x80041001
   140002419:	cmp    QWORD PTR [rcx+0x10],0x0
   14000241e:	je     0x1400024a7
   140002424:	lea    rdx,[rcx+0x28]
   140002428:	lea    rcx,[rax+0x8]
   14000242c:	call   QWORD PTR [rip+0x5f3e]        # 0x140008370
   140002432:	nop
   140002433:	mov    rcx,rdi
   140002436:	call   0x1400020f8
   14000243b:	mov    ebx,eax
   14000243d:	test   eax,eax
   14000243f:	jns    0x140002450
   140002441:	lea    rcx,[rsp+0x50]
   140002446:	call   QWORD PTR [rip+0x5f2c]        # 0x140008378
   14000244c:	mov    eax,ebx
   14000244e:	jmp    0x1400024a9
   140002450:	mov    rdi,QWORD PTR [rdi+0x10]
   140002454:	mov    rax,QWORD PTR [rdi]
   140002457:	mov    rbx,QWORD PTR [rax+0x8]
   14000245b:	mov    rcx,rbx
   14000245e:	call   QWORD PTR [rip+0x600c]        # 0x140008470
   140002464:	mov    rcx,rdi
   140002467:	call   rbx
   140002469:	nop
   14000246a:	lea    rcx,[rsp+0x50]
   14000246f:	call   QWORD PTR [rip+0x5f03]        # 0x140008378
   140002475:	mov    rax,QWORD PTR [rdi]
   140002478:	mov    rbx,QWORD PTR [rax+0x18]
   14000247c:	mov    rcx,rbx
   14000247f:	call   QWORD PTR [rip+0x5feb]        # 0x140008470
   140002485:	mov    r8,rbp
   140002488:	mov    edx,r14d
   14000248b:	mov    rcx,rdi
   14000248e:	call   rbx
   140002490:	mov    esi,eax
   140002492:	mov    rdx,QWORD PTR [rdi]
   140002495:	mov    rbx,QWORD PTR [rdx+0x10]
   140002499:	mov    rcx,rbx
   14000249c:	call   QWORD PTR [rip+0x5fce]        # 0x140008470
   1400024a2:	mov    rcx,rdi
   1400024a5:	call   rbx
   1400024a7:	mov    eax,esi
   1400024a9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400024ae:	mov    rbp,QWORD PTR [rsp+0x60]
   1400024b3:	add    rsp,0x30
   1400024b7:	pop    r14
   1400024b9:	pop    rdi
   1400024ba:	pop    rsi
   1400024bb:	ret    
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	int3   
   1400024c1:	int3   
   1400024c2:	int3   
   1400024c3:	int3   
   1400024c4:	int3   
   1400024c5:	int3   
   1400024c6:	int3   
   1400024c7:	int3   
   1400024c8:	int3   
   1400024c9:	int3   
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	mov    rax,rsp
   1400024d3:	push   rdi
   1400024d4:	push   r14
   1400024d6:	push   r15
   1400024d8:	sub    rsp,0x40
   1400024dc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400024e4:	mov    QWORD PTR [rax+0x10],rbx
   1400024e8:	mov    QWORD PTR [rax+0x18],rbp
   1400024ec:	mov    QWORD PTR [rax+0x20],rsi
   1400024f0:	mov    r14,r9
   1400024f3:	mov    esi,r8d
   1400024f6:	mov    r15d,edx
   1400024f9:	mov    rdi,rcx
   1400024fc:	test   r8d,r8d
   1400024ff:	js     0x140002503
   140002501:	jne    0x140002507
   140002503:	mov    BYTE PTR [rcx+0x50],0x1
   140002507:	mov    ebp,0x80041001
   14000250c:	cmp    QWORD PTR [rcx+0x10],0x0
   140002511:	je     0x1400025ab
   140002517:	lea    rdx,[rcx+0x28]
   14000251b:	lea    rcx,[rsp+0x60]
   140002520:	call   QWORD PTR [rip+0x5e4a]        # 0x140008370
   140002526:	nop
   140002527:	mov    rcx,rdi
   14000252a:	call   0x1400020f8
   14000252f:	mov    ebx,eax
   140002531:	test   eax,eax
   140002533:	jns    0x140002544
   140002535:	lea    rcx,[rsp+0x60]
   14000253a:	call   QWORD PTR [rip+0x5e38]        # 0x140008378
   140002540:	mov    eax,ebx
   140002542:	jmp    0x1400025ad
   140002544:	mov    rdi,QWORD PTR [rdi+0x10]
   140002548:	mov    rax,QWORD PTR [rdi]
   14000254b:	mov    rbx,QWORD PTR [rax+0x8]
   14000254f:	mov    rcx,rbx
   140002552:	call   QWORD PTR [rip+0x5f18]        # 0x140008470
   140002558:	mov    rcx,rdi
   14000255b:	call   rbx
   14000255d:	nop
   14000255e:	lea    rcx,[rsp+0x60]
   140002563:	call   QWORD PTR [rip+0x5e0f]        # 0x140008378
   140002569:	mov    rax,QWORD PTR [rdi]
   14000256c:	mov    rbx,QWORD PTR [rax+0x20]
   140002570:	mov    rcx,rbx
   140002573:	call   QWORD PTR [rip+0x5ef7]        # 0x140008470
   140002579:	mov    rax,QWORD PTR [rsp+0x80]
   140002581:	mov    QWORD PTR [rsp+0x20],rax
   140002586:	mov    r9,r14
   140002589:	mov    r8d,esi
   14000258c:	mov    edx,r15d
   14000258f:	mov    rcx,rdi
   140002592:	call   rbx
   140002594:	mov    ebp,eax
   140002596:	mov    rdx,QWORD PTR [rdi]
   140002599:	mov    rbx,QWORD PTR [rdx+0x10]
   14000259d:	mov    rcx,rbx
   1400025a0:	call   QWORD PTR [rip+0x5eca]        # 0x140008470
   1400025a6:	mov    rcx,rdi
   1400025a9:	call   rbx
   1400025ab:	mov    eax,ebp
   1400025ad:	mov    rbx,QWORD PTR [rsp+0x68]
   1400025b2:	mov    rbp,QWORD PTR [rsp+0x70]
   1400025b7:	mov    rsi,QWORD PTR [rsp+0x78]
   1400025bc:	add    rsp,0x40
   1400025c0:	pop    r15
   1400025c2:	pop    r14
   1400025c4:	pop    rdi
   1400025c5:	ret    
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    rax,QWORD PTR [rdx]
   1400025d3:	cmp    rax,QWORD PTR [rip+0x6746]        # 0x140008d20
   1400025da:	jne    0x1400025e9
   1400025dc:	mov    rax,QWORD PTR [rdx+0x8]
   1400025e0:	cmp    rax,QWORD PTR [rip+0x6741]        # 0x140008d28
   1400025e7:	je     0x14000261b
   1400025e9:	mov    rax,QWORD PTR [rdx]
   1400025ec:	cmp    rax,QWORD PTR [rip+0x695d]        # 0x140008f50
   1400025f3:	jne    0x140002602
   1400025f5:	mov    rax,QWORD PTR [rdx+0x8]
   1400025f9:	cmp    rax,QWORD PTR [rip+0x6958]        # 0x140008f58
   140002600:	je     0x14000261b
   140002602:	mov    rax,QWORD PTR [rdx]
   140002605:	cmp    rax,QWORD PTR [rip+0x6934]        # 0x140008f40
   14000260c:	jne    0x140002620
   14000260e:	mov    rax,QWORD PTR [rdx+0x8]
   140002612:	cmp    rax,QWORD PTR [rip+0x692f]        # 0x140008f48
   140002619:	jne    0x140002620
   14000261b:	lea    rax,[rcx+0x20]
   14000261f:	ret    
   140002620:	xor    eax,eax
   140002622:	ret    
   140002623:	int3   
   140002624:	int3   
   140002625:	int3   
   140002626:	int3   
   140002627:	int3   
   140002628:	int3   
   140002629:	int3   
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	rex push rdi
   140002632:	push   r14
   140002634:	push   r15
   140002636:	sub    rsp,0x40
   14000263a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002643:	mov    QWORD PTR [rsp+0x60],rbx
   140002648:	mov    QWORD PTR [rsp+0x78],rsi
   14000264d:	mov    r14,r8
   140002650:	mov    rdi,rdx
   140002653:	mov    r15,rcx
   140002656:	and    QWORD PTR [r8],0x0
   14000265a:	test   rdx,rdx
   14000265d:	jne    0x140002669
   14000265f:	mov    eax,0x80004003
   140002664:	jmp    0x1400026f0
   140002669:	and    QWORD PTR [rsp+0x68],0x0
   14000266f:	mov    rax,QWORD PTR [rdx]
   140002672:	mov    rbx,QWORD PTR [rax]
   140002675:	mov    rcx,rbx
   140002678:	call   QWORD PTR [rip+0x5df2]        # 0x140008470
   14000267e:	lea    r8,[rsp+0x68]
   140002683:	lea    rdx,[rip+0x68d6]        # 0x140008f60
   14000268a:	mov    rcx,rdi
   14000268d:	call   rbx
   14000268f:	mov    esi,eax
   140002691:	test   eax,eax
   140002693:	js     0x1400026cf
   140002695:	and    QWORD PTR [rsp+0x70],0x0
   14000269b:	mov    rax,QWORD PTR [r15]
   14000269e:	mov    rbx,QWORD PTR [rax+0x20]
   1400026a2:	mov    rcx,rbx
   1400026a5:	call   QWORD PTR [rip+0x5dc5]        # 0x140008470
   1400026ab:	lea    rax,[rsp+0x70]
   1400026b0:	mov    QWORD PTR [rsp+0x20],rax
   1400026b5:	xor    r9d,r9d
   1400026b8:	xor    r8d,r8d
   1400026bb:	mov    rdx,QWORD PTR [rsp+0x68]
   1400026c0:	mov    rcx,r15
   1400026c3:	call   rbx
   1400026c5:	mov    esi,eax
   1400026c7:	mov    rax,QWORD PTR [rsp+0x70]
   1400026cc:	mov    QWORD PTR [r14],rax
   1400026cf:	mov    rbx,QWORD PTR [rsp+0x68]
   1400026d4:	test   rbx,rbx
   1400026d7:	je     0x1400026ee
   1400026d9:	mov    rax,QWORD PTR [rbx]
   1400026dc:	mov    rdi,QWORD PTR [rax+0x10]
   1400026e0:	mov    rcx,rdi
   1400026e3:	call   QWORD PTR [rip+0x5d87]        # 0x140008470
   1400026e9:	mov    rcx,rbx
   1400026ec:	call   rdi
   1400026ee:	mov    eax,esi
   1400026f0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400026f5:	mov    rsi,QWORD PTR [rsp+0x78]
   1400026fa:	add    rsp,0x40
   1400026fe:	pop    r15
   140002700:	pop    r14
   140002702:	pop    rdi
   140002703:	ret    
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	mov    rax,rsp
   140002713:	push   r14
   140002715:	sub    rsp,0x40
   140002719:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140002721:	mov    QWORD PTR [rax+0x8],rbx
   140002725:	mov    QWORD PTR [rax+0x10],rbp
   140002729:	mov    QWORD PTR [rax+0x18],rsi
   14000272d:	mov    QWORD PTR [rax+0x20],rdi
   140002731:	mov    rbp,rdx
   140002734:	mov    r14,rcx
   140002737:	xor    edi,edi
   140002739:	mov    rsi,QWORD PTR [rsp+0x70]
   14000273e:	mov    QWORD PTR [rsi],rdi
   140002741:	test   rdx,rdx
   140002744:	jne    0x140002750
   140002746:	mov    eax,0x80004003
   14000274b:	jmp    0x140002805
   140002750:	cmp    r8d,0x3
   140002754:	jb     0x140002760
   140002756:	mov    eax,0x80041008
   14000275b:	jmp    0x140002805
   140002760:	test   r9,r9
   140002763:	jne    0x140002756
   140002765:	test   r8d,r8d
   140002768:	jne    0x1400027b5
   14000276a:	mov    r8d,0xf003f
   140002770:	lea    rdx,[rip+0x6501]        # 0x140008c78
   140002777:	lea    rcx,[rsp+0x28]
   14000277c:	call   QWORD PTR [rip+0x5c1e]        # 0x1400083a0
   140002782:	nop
   140002783:	mov    DWORD PTR [rsp+0x70],edi
   140002787:	lea    r8,[rsp+0x70]
   14000278c:	lea    rdx,[rip+0x6525]        # 0x140008cb8
   140002793:	lea    rcx,[rsp+0x28]
   140002798:	call   QWORD PTR [rip+0x5bf2]        # 0x140008390
   14000279e:	mov    ebx,edi
   1400027a0:	cmp    DWORD PTR [rsp+0x70],0x1
   1400027a5:	sete   bl
   1400027a8:	lea    rcx,[rsp+0x28]
   1400027ad:	call   QWORD PTR [rip+0x5be5]        # 0x140008398
   1400027b3:	jmp    0x1400027be
   1400027b5:	mov    ebx,edi
   1400027b7:	cmp    r8d,0x1
   1400027bb:	sete   bl
   1400027be:	mov    ecx,0x78
   1400027c3:	call   0x140005d6c
   1400027c8:	mov    QWORD PTR [rsp+0x70],rax
   1400027cd:	test   rax,rax
   1400027d0:	je     0x1400027eb
   1400027d2:	mov    r8,QWORD PTR [r14+0x8]
   1400027d6:	mov    r9d,ebx
   1400027d9:	mov    r8,QWORD PTR [r8+0x10]
   1400027dd:	mov    rdx,rbp
   1400027e0:	mov    rcx,rax
   1400027e3:	call   0x140001e64
   1400027e8:	mov    rdi,rax
   1400027eb:	mov    rax,QWORD PTR [rdi]
   1400027ee:	mov    rbx,QWORD PTR [rax+0x8]
   1400027f2:	mov    rcx,rbx
   1400027f5:	call   QWORD PTR [rip+0x5c75]        # 0x140008470
   1400027fb:	mov    rcx,rdi
   1400027fe:	call   rbx
   140002800:	mov    QWORD PTR [rsi],rdi
   140002803:	xor    eax,eax
   140002805:	mov    rbx,QWORD PTR [rsp+0x50]
   14000280a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000280f:	mov    rsi,QWORD PTR [rsp+0x60]
   140002814:	mov    rdi,QWORD PTR [rsp+0x68]
   140002819:	add    rsp,0x40
   14000281d:	pop    r14
   14000281f:	ret    
   140002820:	int3   
   140002821:	int3   
   140002822:	int3   
   140002823:	int3   
   140002824:	int3   
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	rex push rbx
   14000282a:	sub    rsp,0x20
   14000282e:	cmp    QWORD PTR [rcx+0x20],0x10
   140002833:	mov    rbx,rcx
   140002836:	jb     0x140002841
   140002838:	mov    rcx,QWORD PTR [rcx+0x8]
   14000283c:	call   0x140005dec
   140002841:	and    QWORD PTR [rbx+0x18],0x0
   140002846:	mov    QWORD PTR [rbx+0x20],0xf
   14000284e:	mov    BYTE PTR [rbx+0x8],0x0
   140002852:	add    rsp,0x20
   140002856:	pop    rbx
   140002857:	ret    
   140002858:	int3   
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x8],rbx
   140002865:	mov    QWORD PTR [rsp+0x10],rsi
   14000286a:	push   rdi
   14000286b:	sub    rsp,0x20
   14000286f:	mov    rdi,QWORD PTR [rcx+0x8]
   140002873:	mov    rbx,rcx
   140002876:	test   rdi,rdi
   140002879:	je     0x14000289c
   14000287b:	mov    rsi,QWORD PTR [rcx+0x10]
   14000287f:	jmp    0x14000288e
   140002881:	mov    rcx,rdi
   140002884:	call   QWORD PTR [rip+0x5b2e]        # 0x1400083b8
   14000288a:	add    rdi,0x10
   14000288e:	cmp    rdi,rsi
   140002891:	jne    0x140002881
   140002893:	mov    rcx,QWORD PTR [rbx+0x8]
   140002897:	call   0x140005dec
   14000289c:	and    QWORD PTR [rbx+0x8],0x0
   1400028a1:	and    QWORD PTR [rbx+0x10],0x0
   1400028a6:	and    QWORD PTR [rbx+0x18],0x0
   1400028ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400028b5:	add    rsp,0x20
   1400028b9:	pop    rdi
   1400028ba:	ret    
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	int3   
   1400028c1:	int3   
   1400028c2:	int3   
   1400028c3:	int3   
   1400028c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400028c9:	push   rdi
   1400028ca:	sub    rsp,0x20
   1400028ce:	mov    rdi,QWORD PTR [rcx]
   1400028d1:	test   rdi,rdi
   1400028d4:	je     0x1400028eb
   1400028d6:	mov    rax,QWORD PTR [rdi]
   1400028d9:	mov    rbx,QWORD PTR [rax+0x10]
   1400028dd:	mov    rcx,rbx
   1400028e0:	call   QWORD PTR [rip+0x5b8a]        # 0x140008470
   1400028e6:	mov    rcx,rdi
   1400028e9:	call   rbx
   1400028eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028f0:	add    rsp,0x20
   1400028f4:	pop    rdi
   1400028f5:	ret    
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	mov    rax,rsp
   1400028ff:	mov    QWORD PTR [rax+0x8],rbx
   140002903:	mov    QWORD PTR [rax+0x10],rbp
   140002907:	mov    QWORD PTR [rax+0x18],rsi
   14000290b:	mov    QWORD PTR [rax+0x20],rdi
   14000290f:	push   r14
   140002911:	sub    rsp,0x20
   140002915:	mov    r14,r9
   140002918:	mov    rbp,r8
   14000291b:	mov    rsi,rdx
   14000291e:	mov    rbx,rcx
   140002921:	cmp    QWORD PTR [rdx+0x18],r8
   140002925:	jae    0x14000292c
   140002927:	call   0x140006034
   14000292c:	mov    rdi,QWORD PTR [rsi+0x18]
   140002930:	sub    rdi,rbp
   140002933:	cmp    r14,rdi
   140002936:	cmovb  rdi,r14
   14000293a:	cmp    rbx,rsi
   14000293d:	jne    0x140002961
   14000293f:	lea    rdx,[rdi+rbp*1]
   140002943:	or     r8,0xffffffffffffffff
   140002947:	mov    rcx,rbx
   14000294a:	call   0x140002a80
   14000294f:	mov    r8,rbp
   140002952:	xor    edx,edx
   140002954:	mov    rcx,rbx
   140002957:	call   0x140002a80
   14000295c:	jmp    0x1400029ee
   140002961:	cmp    rdi,0xfffffffffffffffe
   140002965:	jbe    0x14000296c
   140002967:	call   0x140005fd8
   14000296c:	xor    r14d,r14d
   14000296f:	cmp    QWORD PTR [rbx+0x20],rdi
   140002973:	jae    0x140002986
   140002975:	mov    r8,QWORD PTR [rbx+0x18]
   140002979:	mov    rdx,rdi
   14000297c:	mov    rcx,rbx
   14000297f:	call   0x140002ef4
   140002984:	jmp    0x1400029a3
   140002986:	test   rdi,rdi
   140002989:	jne    0x1400029a8
   14000298b:	cmp    QWORD PTR [rbx+0x20],0x10
   140002990:	mov    QWORD PTR [rbx+0x18],r14
   140002994:	jb     0x14000299c
   140002996:	mov    rax,QWORD PTR [rbx+0x8]
   14000299a:	jmp    0x1400029a0
   14000299c:	lea    rax,[rbx+0x8]
   1400029a0:	mov    BYTE PTR [rax],r14b
   1400029a3:	test   rdi,rdi
   1400029a6:	je     0x1400029ee
   1400029a8:	cmp    QWORD PTR [rsi+0x20],0x10
   1400029ad:	jb     0x1400029b5
   1400029af:	mov    rax,QWORD PTR [rsi+0x8]
   1400029b3:	jmp    0x1400029b9
   1400029b5:	lea    rax,[rsi+0x8]
   1400029b9:	mov    rdx,QWORD PTR [rbx+0x20]
   1400029bd:	lea    rsi,[rbx+0x8]
   1400029c1:	cmp    rdx,0x10
   1400029c5:	jb     0x1400029cc
   1400029c7:	mov    rcx,QWORD PTR [rsi]
   1400029ca:	jmp    0x1400029cf
   1400029cc:	mov    rcx,rsi
   1400029cf:	lea    r8,[rax+rbp*1]
   1400029d3:	mov    r9,rdi
   1400029d6:	call   QWORD PTR [rip+0x5904]        # 0x1400082e0
   1400029dc:	cmp    QWORD PTR [rbx+0x20],0x10
   1400029e1:	mov    QWORD PTR [rbx+0x18],rdi
   1400029e5:	jb     0x1400029ea
   1400029e7:	mov    rsi,QWORD PTR [rsi]
   1400029ea:	mov    BYTE PTR [rsi+rdi*1],r14b
   1400029ee:	mov    rbp,QWORD PTR [rsp+0x38]
   1400029f3:	mov    rax,rbx
   1400029f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029fb:	mov    rsi,QWORD PTR [rsp+0x40]
   140002a00:	mov    rdi,QWORD PTR [rsp+0x48]
   140002a05:	add    rsp,0x20
   140002a09:	pop    r14
   140002a0b:	ret    
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	int3   
   140002a11:	int3   
   140002a12:	int3   
   140002a13:	int3   
   140002a14:	mov    QWORD PTR [rsp+0x8],rbx
   140002a19:	mov    QWORD PTR [rsp+0x10],rsi
   140002a1e:	push   rdi
   140002a1f:	sub    rsp,0x20
   140002a23:	mov    rdi,r8
   140002a26:	mov    rbx,rcx
   140002a29:	test   dl,dl
   140002a2b:	je     0x140002a58
   140002a2d:	mov    edx,0x10
   140002a32:	cmp    QWORD PTR [rcx+0x20],rdx
   140002a36:	jb     0x140002a58
   140002a38:	add    rcx,0x8
   140002a3c:	mov    rsi,QWORD PTR [rcx]
   140002a3f:	test   r8,r8
   140002a42:	je     0x140002a50
   140002a44:	mov    r9,r8
   140002a47:	mov    r8,rsi
   140002a4a:	call   QWORD PTR [rip+0x5890]        # 0x1400082e0
   140002a50:	mov    rcx,rsi
   140002a53:	call   0x140005dec
   140002a58:	mov    rsi,QWORD PTR [rsp+0x38]
   140002a5d:	mov    QWORD PTR [rbx+0x20],0xf
   140002a65:	mov    QWORD PTR [rbx+0x18],rdi
   140002a69:	mov    BYTE PTR [rbx+rdi*1+0x8],0x0
   140002a6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a73:	add    rsp,0x20
   140002a77:	pop    rdi
   140002a78:	ret    
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	mov    QWORD PTR [rsp+0x8],rbx
   140002a85:	mov    QWORD PTR [rsp+0x10],rbp
   140002a8a:	mov    QWORD PTR [rsp+0x18],rsi
   140002a8f:	push   rdi
   140002a90:	sub    rsp,0x20
   140002a94:	mov    rsi,r8
   140002a97:	mov    rbp,rdx
   140002a9a:	mov    rdi,rcx
   140002a9d:	cmp    QWORD PTR [rcx+0x18],rdx
   140002aa1:	jae    0x140002aa8
   140002aa3:	call   0x140006034
   140002aa8:	mov    r9,QWORD PTR [rdi+0x18]
   140002aac:	sub    r9,rbp
   140002aaf:	cmp    r9,rsi
   140002ab2:	cmovb  rsi,r9
   140002ab6:	test   rsi,rsi
   140002ab9:	je     0x140002b0f
   140002abb:	mov    rdx,QWORD PTR [rdi+0x20]
   140002abf:	lea    rbx,[rdi+0x8]
   140002ac3:	cmp    rdx,0x10
   140002ac7:	jb     0x140002ace
   140002ac9:	mov    rcx,QWORD PTR [rbx]
   140002acc:	jmp    0x140002ad1
   140002ace:	mov    rcx,rbx
   140002ad1:	cmp    rdx,0x10
   140002ad5:	jb     0x140002adc
   140002ad7:	mov    rax,QWORD PTR [rbx]
   140002ada:	jmp    0x140002adf
   140002adc:	mov    rax,rbx
   140002adf:	lea    r8,[rcx+rbp*1]
   140002ae3:	sub    r9,rsi
   140002ae6:	add    r8,rsi
   140002ae9:	lea    rcx,[rax+rbp*1]
   140002aed:	sub    rdx,rbp
   140002af0:	call   QWORD PTR [rip+0x57e2]        # 0x1400082d8
   140002af6:	mov    rax,QWORD PTR [rdi+0x18]
   140002afa:	sub    rax,rsi
   140002afd:	cmp    QWORD PTR [rdi+0x20],0x10
   140002b02:	mov    QWORD PTR [rdi+0x18],rax
   140002b06:	jb     0x140002b0b
   140002b08:	mov    rbx,QWORD PTR [rbx]
   140002b0b:	mov    BYTE PTR [rbx+rax*1],0x0
   140002b0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b14:	mov    rax,rdi
   140002b17:	mov    rbp,QWORD PTR [rsp+0x38]
   140002b1c:	mov    rsi,QWORD PTR [rsp+0x40]
   140002b21:	add    rsp,0x20
   140002b25:	pop    rdi
   140002b26:	ret    
   140002b27:	int3   
   140002b28:	int3   
   140002b29:	int3   
   140002b2a:	int3   
   140002b2b:	int3   
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	cmp    rdx,r8
   140002b33:	je     0x140002b61
   140002b35:	mov    QWORD PTR [rsp+0x8],rbx
   140002b3a:	push   rdi
   140002b3b:	sub    rsp,0x20
   140002b3f:	mov    rdi,r8
   140002b42:	mov    rbx,rdx
   140002b45:	mov    rcx,rbx
   140002b48:	call   QWORD PTR [rip+0x586a]        # 0x1400083b8
   140002b4e:	add    rbx,0x10
   140002b52:	cmp    rbx,rdi
   140002b55:	jne    0x140002b45
   140002b57:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b5c:	add    rsp,0x20
   140002b60:	pop    rdi
   140002b61:	ret    
   140002b62:	int3   
   140002b63:	int3   
   140002b64:	int3   
   140002b65:	int3   
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	mov    rax,rsp
   140002b6b:	mov    QWORD PTR [rax+0x18],r8
   140002b6f:	mov    QWORD PTR [rax+0x10],rdx
   140002b73:	mov    QWORD PTR [rax+0x8],rcx
   140002b77:	push   rsi
   140002b78:	push   rdi
   140002b79:	push   r12
   140002b7b:	push   r14
   140002b7d:	push   r15
   140002b7f:	sub    rsp,0x50
   140002b83:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140002b8b:	mov    QWORD PTR [rax+0x20],rbx
   140002b8f:	mov    rdi,rcx
   140002b92:	mov    rdx,r9
   140002b95:	lea    rcx,[rax-0x38]
   140002b99:	call   QWORD PTR [rip+0x57e9]        # 0x140008388
   140002b9f:	nop
   140002ba0:	mov    rcx,QWORD PTR [rdi+0x8]
   140002ba4:	test   rcx,rcx
   140002ba7:	jne    0x140002bad
   140002ba9:	xor    esi,esi
   140002bab:	jmp    0x140002bb8
   140002bad:	mov    rsi,QWORD PTR [rdi+0x18]
   140002bb1:	sub    rsi,rcx
   140002bb4:	sar    rsi,0x4
   140002bb8:	test   rcx,rcx
   140002bbb:	jne    0x140002bc1
   140002bbd:	xor    edx,edx
   140002bbf:	jmp    0x140002bcc
   140002bc1:	mov    rdx,QWORD PTR [rdi+0x10]
   140002bc5:	sub    rdx,rcx
   140002bc8:	sar    rdx,0x4
   140002bcc:	movabs r8,0xfffffffffffffff
   140002bd6:	mov    rax,r8
   140002bd9:	sub    rax,rdx
   140002bdc:	mov    r15d,0x1
   140002be2:	cmp    rax,r15
   140002be5:	jae    0x140002bed
   140002be7:	call   0x140002e4c
   140002bec:	int3   
   140002bed:	test   rcx,rcx
   140002bf0:	jne    0x140002bf6
   140002bf2:	xor    eax,eax
   140002bf4:	jmp    0x140002c01
   140002bf6:	mov    rax,QWORD PTR [rdi+0x10]
   140002bfa:	sub    rax,rcx
   140002bfd:	sar    rax,0x4
   140002c01:	inc    rax
   140002c04:	cmp    rsi,rax
   140002c07:	jae    0x140002d3d
   140002c0d:	mov    rax,rsi
   140002c10:	shr    rax,1
   140002c13:	sub    r8,rax
   140002c16:	cmp    r8,rsi
   140002c19:	jae    0x140002c1f
   140002c1b:	xor    esi,esi
   140002c1d:	jmp    0x140002c22
   140002c1f:	add    rsi,rax
   140002c22:	test   rcx,rcx
   140002c25:	jne    0x140002c2b
   140002c27:	xor    eax,eax
   140002c29:	jmp    0x140002c36
   140002c2b:	mov    rax,QWORD PTR [rdi+0x10]
   140002c2f:	sub    rax,rcx
   140002c32:	sar    rax,0x4
   140002c36:	inc    rax
   140002c39:	cmp    rsi,rax
   140002c3c:	jae    0x140002c55
   140002c3e:	test   rcx,rcx
   140002c41:	jne    0x140002c47
   140002c43:	xor    esi,esi
   140002c45:	jmp    0x140002c52
   140002c47:	mov    rsi,QWORD PTR [rdi+0x10]
   140002c4b:	sub    rsi,rcx
   140002c4e:	sar    rsi,0x4
   140002c52:	inc    rsi
   140002c55:	mov    QWORD PTR [rsp+0x80],rsi
   140002c5d:	lea    rdx,[rsp+0x90]
   140002c65:	lea    rcx,[rsp+0x80]
   140002c6d:	call   0x14000312c
   140002c72:	mov    rcx,QWORD PTR [rax]
   140002c75:	call   0x140005d6c
   140002c7a:	mov    r14,rax
   140002c7d:	mov    QWORD PTR [rsp+0x80],rax
   140002c85:	test   rax,rax
   140002c88:	jne    0x140002c90
   140002c8a:	call   QWORD PTR [rip+0x5740]        # 0x1400083d0
   140002c90:	mov    QWORD PTR [rsp+0x30],r14
   140002c95:	mov    r8,r14
   140002c98:	mov    rdx,QWORD PTR [rsp+0x88]
   140002ca0:	mov    rcx,QWORD PTR [rdi+0x8]
   140002ca4:	call   0x140003220
   140002ca9:	mov    QWORD PTR [rsp+0x30],rax
   140002cae:	lea    rbx,[rax+0x10]
   140002cb2:	lea    r8,[rsp+0x40]
   140002cb7:	mov    rdx,r15
   140002cba:	mov    rcx,rax
   140002cbd:	call   0x140003158
   140002cc2:	mov    QWORD PTR [rsp+0x30],rbx
   140002cc7:	mov    r8,rbx
   140002cca:	mov    rdx,QWORD PTR [rdi+0x10]
   140002cce:	mov    rcx,QWORD PTR [rsp+0x88]
   140002cd6:	call   0x140003220
   140002cdb:	nop
   140002cdc:	mov    rbx,QWORD PTR [rdi+0x8]
   140002ce0:	test   rbx,rbx
   140002ce3:	jne    0x140002ce9
   140002ce5:	xor    eax,eax
   140002ce7:	jmp    0x140002cf4
   140002ce9:	mov    rax,QWORD PTR [rdi+0x10]
   140002ced:	sub    rax,rbx
   140002cf0:	sar    rax,0x4
   140002cf4:	lea    r15,[rax+0x1]
   140002cf8:	test   rbx,rbx
   140002cfb:	je     0x140002d1e
   140002cfd:	mov    r12,QWORD PTR [rdi+0x10]
   140002d01:	jmp    0x140002d10
   140002d03:	mov    rcx,rbx
   140002d06:	call   QWORD PTR [rip+0x56ac]        # 0x1400083b8
   140002d0c:	add    rbx,0x10
   140002d10:	cmp    rbx,r12
   140002d13:	jne    0x140002d03
   140002d15:	mov    rcx,QWORD PTR [rdi+0x8]
   140002d19:	call   0x140005dec
   140002d1e:	shl    rsi,0x4
   140002d22:	add    rsi,r14
   140002d25:	mov    QWORD PTR [rdi+0x18],rsi
   140002d29:	shl    r15,0x4
   140002d2d:	add    r15,r14
   140002d30:	mov    QWORD PTR [rdi+0x10],r15
   140002d34:	mov    QWORD PTR [rdi+0x8],r14
   140002d38:	jmp    0x140002e23
   140002d3d:	mov    r14,QWORD PTR [rdi+0x10]
   140002d41:	mov    rax,r14
   140002d44:	mov    rcx,QWORD PTR [rsp+0x88]
   140002d4c:	sub    rax,rcx
   140002d4f:	sar    rax,0x4
   140002d53:	mov    rdx,r14
   140002d56:	cmp    rax,r15
   140002d59:	jae    0x140002db9
   140002d5b:	lea    r8,[rcx+0x10]
   140002d5f:	call   0x140003220
   140002d64:	nop
   140002d65:	mov    rcx,QWORD PTR [rdi+0x10]
   140002d69:	mov    rax,rcx
   140002d6c:	sub    rax,QWORD PTR [rsp+0x88]
   140002d74:	sar    rax,0x4
   140002d78:	sub    r15,rax
   140002d7b:	lea    r8,[rsp+0x40]
   140002d80:	mov    rdx,r15
   140002d83:	call   0x140003158
   140002d88:	nop
   140002d89:	add    QWORD PTR [rdi+0x10],0x10
   140002d8e:	mov    rdi,QWORD PTR [rdi+0x10]
   140002d92:	add    rdi,0xfffffffffffffff0
   140002d96:	mov    rbx,QWORD PTR [rsp+0x88]
   140002d9e:	jmp    0x140002db2
   140002da0:	lea    rdx,[rsp+0x40]
   140002da5:	mov    rcx,rbx
   140002da8:	call   QWORD PTR [rip+0x55d2]        # 0x140008380
   140002dae:	add    rbx,0x10
   140002db2:	cmp    rbx,rdi
   140002db5:	jne    0x140002da0
   140002db7:	jmp    0x140002e23
   140002db9:	lea    rsi,[r14-0x10]
   140002dbd:	mov    r8,r14
   140002dc0:	mov    rcx,rsi
   140002dc3:	call   0x140003220
   140002dc8:	mov    QWORD PTR [rdi+0x10],rax
   140002dcc:	mov    rbx,QWORD PTR [rsp+0x88]
   140002dd4:	cmp    rbx,rsi
   140002dd7:	je     0x140002dfa
   140002dd9:	sub    r14,rsi
   140002ddc:	sub    rsi,0x10
   140002de0:	lea    rcx,[r14+rsi*1]
   140002de4:	mov    rdx,rsi
   140002de7:	call   QWORD PTR [rip+0x5593]        # 0x140008380
   140002ded:	cmp    rsi,rbx
   140002df0:	jne    0x140002ddc
   140002df2:	mov    rbx,QWORD PTR [rsp+0x88]
   140002dfa:	lea    rax,[rbx+0x10]
   140002dfe:	jmp    0x140002e1e
   140002e00:	lea    rdx,[rsp+0x40]
   140002e05:	mov    rcx,rbx
   140002e08:	call   QWORD PTR [rip+0x5572]        # 0x140008380
   140002e0e:	add    rbx,0x10
   140002e12:	mov    rax,QWORD PTR [rsp+0x88]
   140002e1a:	add    rax,0x10
   140002e1e:	cmp    rbx,rax
   140002e21:	jne    0x140002e00
   140002e23:	lea    rcx,[rsp+0x40]
   140002e28:	call   QWORD PTR [rip+0x558a]        # 0x1400083b8
   140002e2e:	mov    rbx,QWORD PTR [rsp+0x98]
   140002e36:	add    rsp,0x50
   140002e3a:	pop    r15
   140002e3c:	pop    r14
   140002e3e:	pop    r12
   140002e40:	pop    rdi
   140002e41:	pop    rsi
   140002e42:	ret    
   140002e43:	int3   
   140002e44:	int3   
   140002e45:	int3   
   140002e46:	int3   
   140002e47:	int3   
   140002e48:	int3   
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	sub    rsp,0xa8
   140002e53:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002e5c:	mov    rax,QWORD PTR [rip+0xa19d]        # 0x14000d000
   140002e63:	xor    rax,rsp
   140002e66:	mov    QWORD PTR [rsp+0x90],rax
   140002e6e:	lea    rdx,[rip+0x5e83]        # 0x140008cf8
   140002e75:	lea    rcx,[rsp+0x28]
   140002e7a:	call   0x140002eb8
   140002e7f:	nop
   140002e80:	lea    rdx,[rsp+0x28]
   140002e85:	lea    rcx,[rsp+0x50]
   140002e8a:	call   0x140001c30
   140002e8f:	lea    rdx,[rip+0x7d0a]        # 0x14000aba0
   140002e96:	lea    rcx,[rsp+0x50]
   140002e9b:	call   0x140006566
   140002ea0:	int3   
   140002ea1:	int3   
   140002ea2:	int3   
   140002ea3:	int3   
   140002ea4:	int3   
   140002ea5:	int3   
   140002ea6:	int3   
   140002ea7:	int3   
   140002ea8:	mov    rcx,rdx
   140002eab:	jmp    0x140005dec
   140002eb0:	int3   
   140002eb1:	int3   
   140002eb2:	int3   
   140002eb3:	int3   
   140002eb4:	int3   
   140002eb5:	int3   
   140002eb6:	int3   
   140002eb7:	int3   
   140002eb8:	rex push rbx
   140002eba:	sub    rsp,0x20
   140002ebe:	xor    eax,eax
   140002ec0:	mov    QWORD PTR [rcx+0x20],0xf
   140002ec8:	mov    QWORD PTR [rcx+0x18],rax
   140002ecc:	mov    rbx,rcx
   140002ecf:	mov    BYTE PTR [rcx+0x8],al
   140002ed2:	or     r8,0xffffffffffffffff
   140002ed6:	inc    r8
   140002ed9:	cmp    BYTE PTR [rdx+r8*1],al
   140002edd:	jne    0x140002ed6
   140002edf:	call   0x14000302c
   140002ee4:	mov    rax,rbx
   140002ee7:	add    rsp,0x20
   140002eeb:	pop    rbx
   140002eec:	ret    
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	int3   
   140002ef1:	int3   
   140002ef2:	int3   
   140002ef3:	int3   
   140002ef4:	mov    rax,rsp
   140002ef7:	mov    QWORD PTR [rax+0x18],r8
   140002efb:	mov    QWORD PTR [rax+0x10],rdx
   140002eff:	mov    QWORD PTR [rax+0x8],rcx
   140002f03:	push   rsi
   140002f04:	push   rdi
   140002f05:	push   r14
   140002f07:	sub    rsp,0x60
   140002f0b:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   140002f13:	mov    QWORD PTR [rax+0x20],rbx
   140002f17:	mov    rsi,r8
   140002f1a:	mov    rdi,rcx
   140002f1d:	mov    rbx,rdx
   140002f20:	or     rbx,0xf
   140002f24:	mov    r9,0xfffffffffffffffe
   140002f2b:	cmp    rbx,r9
   140002f2e:	jbe    0x140002f35
   140002f30:	mov    rbx,rdx
   140002f33:	jmp    0x140002f60
   140002f35:	mov    r8,QWORD PTR [rcx+0x20]
   140002f39:	mov    rcx,r8
   140002f3c:	shr    rcx,1
   140002f3f:	movabs rax,0xaaaaaaaaaaaaaaab
   140002f49:	mul    rbx
   140002f4c:	shr    rdx,1
   140002f4f:	cmp    rdx,rcx
   140002f52:	jae    0x140002f60
   140002f54:	sub    r9,rcx
   140002f57:	cmp    r8,r9
   140002f5a:	ja     0x140002f60
   140002f5c:	lea    rbx,[rcx+r8*1]
   140002f60:	lea    rcx,[rbx+0x1]
   140002f64:	test   rcx,rcx
   140002f67:	je     0x140002f95
   140002f69:	xor    edx,edx
   140002f6b:	or     rax,0xffffffffffffffff
   140002f6f:	div    rcx
   140002f72:	cmp    rax,0x1
   140002f76:	jae    0x140002f95
   140002f78:	xor    edx,edx
   140002f7a:	lea    rcx,[rsp+0x30]
   140002f7f:	call   0x140001948
   140002f84:	lea    rdx,[rip+0x7cd5]        # 0x14000ac60
   140002f8b:	lea    rcx,[rsp+0x30]
   140002f90:	call   0x140006566
   140002f95:	call   0x140005d6c
   140002f9a:	mov    r14,rax
   140002f9d:	mov    QWORD PTR [rsp+0x20],rax
   140002fa2:	jmp    0x140002fc1
   140002fa4:	mov    rdi,QWORD PTR [rsp+0x80]
   140002fac:	mov    rsi,QWORD PTR [rsp+0x90]
   140002fb4:	mov    rbx,QWORD PTR [rsp+0x88]
   140002fbc:	mov    r14,QWORD PTR [rsp+0x20]
   140002fc1:	test   rsi,rsi
   140002fc4:	je     0x140002fe7
   140002fc6:	cmp    QWORD PTR [rdi+0x20],0x10
   140002fcb:	jb     0x140002fd3
   140002fcd:	mov    r8,QWORD PTR [rdi+0x8]
   140002fd1:	jmp    0x140002fd7
   140002fd3:	lea    r8,[rdi+0x8]
   140002fd7:	lea    rdx,[rbx+0x1]
   140002fdb:	mov    r9,rsi
   140002fde:	mov    rcx,r14
   140002fe1:	call   QWORD PTR [rip+0x52f9]        # 0x1400082e0
   140002fe7:	cmp    QWORD PTR [rdi+0x20],0x10
   140002fec:	jb     0x140002ff7
   140002fee:	mov    rcx,QWORD PTR [rdi+0x8]
   140002ff2:	call   0x140005dec
   140002ff7:	lea    rax,[rdi+0x8]
   140002ffb:	mov    BYTE PTR [rax],0x0
   140002ffe:	mov    QWORD PTR [rax],r14
   140003001:	mov    QWORD PTR [rdi+0x20],rbx
   140003005:	mov    QWORD PTR [rdi+0x18],rsi
   140003009:	cmp    rbx,0x10
   14000300d:	cmovae rax,r14
   140003011:	mov    BYTE PTR [rax+rsi*1],0x0
   140003015:	mov    rbx,QWORD PTR [rsp+0x98]
   14000301d:	add    rsp,0x60
   140003021:	pop    r14
   140003023:	pop    rdi
   140003024:	pop    rsi
   140003025:	ret    
   140003026:	int3   
   140003027:	int3   
   140003028:	int3   
   140003029:	int3   
   14000302a:	int3   
   14000302b:	int3   
   14000302c:	mov    QWORD PTR [rsp+0x8],rbx
   140003031:	mov    QWORD PTR [rsp+0x10],rbp
   140003036:	mov    QWORD PTR [rsp+0x18],rsi
   14000303b:	push   rdi
   14000303c:	sub    rsp,0x20
   140003040:	cmp    QWORD PTR [rcx+0x20],0x10
   140003045:	lea    rbx,[rcx+0x8]
   140003049:	mov    rsi,r8
   14000304c:	mov    rbp,rdx
   14000304f:	mov    rdi,rcx
   140003052:	jb     0x140003059
   140003054:	mov    rax,QWORD PTR [rbx]
   140003057:	jmp    0x14000305c
   140003059:	mov    rax,rbx
   14000305c:	cmp    rdx,rax
   14000305f:	jb     0x140003099
   140003061:	cmp    QWORD PTR [rcx+0x20],0x10
   140003066:	jb     0x14000306d
   140003068:	mov    rcx,QWORD PTR [rbx]
   14000306b:	jmp    0x140003070
   14000306d:	mov    rcx,rbx
   140003070:	add    rcx,QWORD PTR [rdi+0x18]
   140003074:	cmp    rcx,rdx
   140003077:	jbe    0x140003099
   140003079:	cmp    QWORD PTR [rdi+0x20],0x10
   14000307e:	jb     0x140003083
   140003080:	mov    rbx,QWORD PTR [rbx]
   140003083:	sub    rbp,rbx
   140003086:	mov    r9,r8
   140003089:	mov    r8,rbp
   14000308c:	mov    rdx,rdi
   14000308f:	mov    rcx,rdi
   140003092:	call   0x1400028fc
   140003097:	jmp    0x14000310e
   140003099:	cmp    r8,0xfffffffffffffffe
   14000309d:	jbe    0x1400030a4
   14000309f:	call   0x140005fd8
   1400030a4:	cmp    QWORD PTR [rdi+0x20],rsi
   1400030a8:	jae    0x1400030bb
   1400030aa:	mov    r8,QWORD PTR [rdi+0x18]
   1400030ae:	mov    rdx,rsi
   1400030b1:	mov    rcx,rdi
   1400030b4:	call   0x140002ef4
   1400030b9:	jmp    0x1400030d6
   1400030bb:	test   rsi,rsi
   1400030be:	jne    0x1400030db
   1400030c0:	and    QWORD PTR [rdi+0x18],rsi
   1400030c4:	cmp    QWORD PTR [rdi+0x20],0x10
   1400030c9:	jb     0x1400030d0
   1400030cb:	mov    rax,QWORD PTR [rbx]
   1400030ce:	jmp    0x1400030d3
   1400030d0:	mov    rax,rbx
   1400030d3:	mov    BYTE PTR [rax],0x0
   1400030d6:	test   rsi,rsi
   1400030d9:	je     0x14000310b
   1400030db:	mov    rdx,QWORD PTR [rdi+0x20]
   1400030df:	cmp    rdx,0x10
   1400030e3:	jb     0x1400030ea
   1400030e5:	mov    rcx,QWORD PTR [rbx]
   1400030e8:	jmp    0x1400030ed
   1400030ea:	mov    rcx,rbx
   1400030ed:	mov    r9,rsi
   1400030f0:	mov    r8,rbp
   1400030f3:	call   QWORD PTR [rip+0x51e7]        # 0x1400082e0
   1400030f9:	cmp    QWORD PTR [rdi+0x20],0x10
   1400030fe:	mov    QWORD PTR [rdi+0x18],rsi
   140003102:	jb     0x140003107
   140003104:	mov    rbx,QWORD PTR [rbx]
   140003107:	mov    BYTE PTR [rbx+rsi*1],0x0
   14000310b:	mov    rax,rdi
   14000310e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003113:	mov    rbp,QWORD PTR [rsp+0x38]
   140003118:	mov    rsi,QWORD PTR [rsp+0x40]
   14000311d:	add    rsp,0x20
   140003121:	pop    rdi
   140003122:	ret    
   140003123:	int3   
   140003124:	int3   
   140003125:	int3   
   140003126:	int3   
   140003127:	int3   
   140003128:	int3   
   140003129:	int3   
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	rex push rbx
   14000312e:	sub    rsp,0x20
   140003132:	mov    rbx,rdx
   140003135:	mov    r8d,0x10
   14000313b:	mov    rdx,QWORD PTR [rcx]
   14000313e:	mov    rcx,rbx
   140003141:	call   0x1400031c4
   140003146:	mov    rax,rbx
   140003149:	add    rsp,0x20
   14000314d:	pop    rbx
   14000314e:	ret    
   14000314f:	int3   
   140003150:	int3   
   140003151:	int3   
   140003152:	int3   
   140003153:	int3   
   140003154:	int3   
   140003155:	int3   
   140003156:	int3   
   140003157:	int3   
   140003158:	mov    QWORD PTR [rsp+0x20],r9
   14000315d:	mov    QWORD PTR [rsp+0x8],rcx
   140003162:	push   rbx
   140003163:	push   rsi
   140003164:	push   rdi
   140003165:	sub    rsp,0x40
   140003169:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003172:	mov    rsi,r8
   140003175:	mov    rdi,rdx
   140003178:	mov    rbx,rcx
   14000317b:	mov    QWORD PTR [rsp+0x78],rcx
   140003180:	test   rdi,rdi
   140003183:	je     0x1400031b4
   140003185:	mov    QWORD PTR [rsp+0x28],rbx
   14000318a:	mov    QWORD PTR [rsp+0x30],rbx
   14000318f:	test   rbx,rbx
   140003192:	je     0x1400031a1
   140003194:	mov    rdx,rsi
   140003197:	mov    rcx,rbx
   14000319a:	call   QWORD PTR [rip+0x51e8]        # 0x140008388
   1400031a0:	nop
   1400031a1:	dec    rdi
   1400031a4:	mov    QWORD PTR [rsp+0x68],rdi
   1400031a9:	add    rbx,0x10
   1400031ad:	mov    QWORD PTR [rsp+0x60],rbx
   1400031b2:	jmp    0x140003180
   1400031b4:	add    rsp,0x40
   1400031b8:	pop    rdi
   1400031b9:	pop    rsi
   1400031ba:	pop    rbx
   1400031bb:	ret    
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	int3   
   1400031c1:	int3   
   1400031c2:	int3   
   1400031c3:	int3   
   1400031c4:	sub    rsp,0x38
   1400031c8:	mov    r9,rdx
   1400031cb:	test   rdx,rdx
   1400031ce:	je     0x1400031e9
   1400031d0:	test   r8,r8
   1400031d3:	je     0x1400031e9
   1400031d5:	xor    edx,edx
   1400031d7:	or     rax,0xffffffffffffffff
   1400031db:	div    r9
   1400031de:	cmp    rax,r8
   1400031e1:	jb     0x1400031f7
   1400031e3:	imul   r9,r8
   1400031e7:	jmp    0x1400031ec
   1400031e9:	xor    r9d,r9d
   1400031ec:	mov    QWORD PTR [rcx],r9
   1400031ef:	mov    rax,rcx
   1400031f2:	add    rsp,0x38
   1400031f6:	ret    
   1400031f7:	lea    rcx,[rsp+0x20]
   1400031fc:	call   0x140001938
   140003201:	lea    rdx,[rip+0x7930]        # 0x14000ab38
   140003208:	mov    ecx,DWORD PTR [rax]
   14000320a:	mov    DWORD PTR [rsp+0x58],ecx
   14000320e:	lea    rcx,[rsp+0x58]
   140003213:	call   0x140006566
   140003218:	int3   
   140003219:	int3   
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rsp+0x20],r9
   140003225:	mov    QWORD PTR [rsp+0x18],r8
   14000322a:	push   rbx
   14000322b:	push   rsi
   14000322c:	push   rdi
   14000322d:	sub    rsp,0x40
   140003231:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000323a:	mov    rbx,r8
   14000323d:	mov    rsi,rdx
   140003240:	mov    rdi,rcx
   140003243:	mov    QWORD PTR [rsp+0x78],rbx
   140003248:	cmp    rdi,rsi
   14000324b:	je     0x14000327d
   14000324d:	mov    QWORD PTR [rsp+0x28],rbx
   140003252:	mov    QWORD PTR [rsp+0x30],rbx
   140003257:	test   rbx,rbx
   14000325a:	je     0x140003269
   14000325c:	mov    rdx,rdi
   14000325f:	mov    rcx,rbx
   140003262:	call   QWORD PTR [rip+0x5120]        # 0x140008388
   140003268:	nop
   140003269:	add    rbx,0x10
   14000326d:	mov    QWORD PTR [rsp+0x70],rbx
   140003272:	add    rdi,0x10
   140003276:	mov    QWORD PTR [rsp+0x60],rdi
   14000327b:	jmp    0x140003248
   14000327d:	mov    rax,rbx
   140003280:	add    rsp,0x40
   140003284:	pop    rdi
   140003285:	pop    rsi
   140003286:	pop    rbx
   140003287:	ret    
   140003288:	int3   
   140003289:	int3   
   14000328a:	int3   
   14000328b:	int3   
   14000328c:	int3   
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	sub    rcx,0x8
   140003294:	jmp    0x140001f30
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	sub    rcx,0x8
   1400032a4:	jmp    0x140001fd0
   1400032a9:	int3   
   1400032aa:	int3   
   1400032ab:	int3   
   1400032ac:	int3   
   1400032ad:	int3   
   1400032ae:	int3   
   1400032af:	int3   
   1400032b0:	sub    rcx,0x8
   1400032b4:	jmp    0x140001e50
   1400032b9:	int3   
   1400032ba:	int3   
   1400032bb:	int3   
   1400032bc:	int3   
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400032c5:	push   rbx
   1400032c6:	sub    rsp,0x20
   1400032ca:	mov    rbx,rcx
   1400032cd:	mov    QWORD PTR [rcx],rdx
   1400032d0:	mov    rcx,rdx
   1400032d3:	call   QWORD PTR [rip+0x4e77]        # 0x140008150
   1400032d9:	jmp    0x1400032e0
   1400032db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032e0:	mov    rax,rbx
   1400032e3:	add    rsp,0x20
   1400032e7:	pop    rbx
   1400032e8:	ret    
   1400032e9:	int3   
   1400032ea:	int3   
   1400032eb:	int3   
   1400032ec:	int3   
   1400032ed:	int3   
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	sub    rsp,0x38
   1400032f4:	and    QWORD PTR [rsp+0x20],0x0
   1400032fa:	movzx  r9d,dx
   1400032fe:	mov    edx,0x2b
   140003303:	call   QWORD PTR [rip+0x503f]        # 0x140008348
   140003309:	add    rsp,0x38
   14000330d:	ret    
   14000330e:	int3   
   14000330f:	int3   
   140003310:	int3   
   140003311:	int3   
   140003312:	int3   
   140003313:	int3   
   140003314:	mov    r11,rsp
   140003317:	mov    DWORD PTR [r11+0x20],r9d
   14000331b:	sub    rsp,0x48
   14000331f:	and    QWORD PTR [r11-0x18],0x0
   140003324:	lea    rax,[r11+0x20]
   140003328:	movzx  r9d,dx
   14000332c:	mov    edx,0x2b
   140003331:	mov    QWORD PTR [r11-0x20],0x4
   140003339:	mov    QWORD PTR [r11-0x28],rax
   14000333d:	call   QWORD PTR [rip+0x5005]        # 0x140008348
   140003343:	add    rsp,0x48
   140003347:	ret    
   140003348:	int3   
   140003349:	int3   
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	mov    DWORD PTR [rsp+0x20],r9d
   140003355:	sub    rsp,0x58
   140003359:	mov    rax,QWORD PTR [rsp+0x80]
   140003361:	xor    r9d,r9d
   140003364:	mov    r10,rcx
   140003367:	test   rax,rax
   14000336a:	je     0x140003390
   14000336c:	cmp    WORD PTR [rax],r9w
   140003370:	jne    0x140003378
   140003372:	lea    ecx,[r9+0xe]
   140003376:	jmp    0x140003395
   140003378:	or     rcx,0xffffffffffffffff
   14000337c:	inc    rcx
   14000337f:	cmp    WORD PTR [rax+rcx*2],r9w
   140003384:	jne    0x14000337c
   140003386:	lea    rcx,[rcx*2+0x2]
   14000338e:	jmp    0x140003395
   140003390:	mov    ecx,0xa
   140003395:	test   rax,rax
   140003398:	je     0x1400033ab
   14000339a:	cmp    WORD PTR [rax],r9w
   14000339e:	lea    r8,[rip+0x598b]        # 0x140008d30
   1400033a5:	cmove  rax,r8
   1400033a9:	jmp    0x1400033b2
   1400033ab:	lea    rax,[rip+0x598e]        # 0x140008d40
   1400033b2:	mov    QWORD PTR [rsp+0x40],r9
   1400033b7:	lea    r8,[rip+0x5b42]        # 0x140008f00
   1400033be:	mov    QWORD PTR [rsp+0x38],rcx
   1400033c3:	mov    rcx,r10
   1400033c6:	mov    QWORD PTR [rsp+0x30],rax
   1400033cb:	lea    rax,[rsp+0x78]
   1400033d0:	movzx  r9d,dx
   1400033d4:	mov    edx,0x2b
   1400033d9:	mov    QWORD PTR [rsp+0x28],0x4
   1400033e2:	mov    QWORD PTR [rsp+0x20],rax
   1400033e7:	call   QWORD PTR [rip+0x4f5b]        # 0x140008348
   1400033ed:	add    rsp,0x58
   1400033f1:	ret    
   1400033f2:	int3   
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	sub    rsp,0x48
   1400033fc:	xor    r10d,r10d
   1400033ff:	test   r9,r9
   140003402:	je     0x140003428
   140003404:	cmp    WORD PTR [r9],r10w
   140003408:	jne    0x140003410
   14000340a:	lea    eax,[r10+0xe]
   14000340e:	jmp    0x14000342d
   140003410:	or     rax,0xffffffffffffffff
   140003414:	inc    rax
   140003417:	cmp    WORD PTR [r9+rax*2],r10w
   14000341c:	jne    0x140003414
   14000341e:	lea    rax,[rax*2+0x2]
   140003426:	jmp    0x14000342d
   140003428:	mov    eax,0xa
   14000342d:	test   r9,r9
   140003430:	je     0x140003443
   140003432:	cmp    WORD PTR [r9],r10w
   140003436:	lea    r8,[rip+0x58f3]        # 0x140008d30
   14000343d:	cmove  r9,r8
   140003441:	jmp    0x14000344a
   140003443:	lea    r9,[rip+0x58f6]        # 0x140008d40
   14000344a:	mov    QWORD PTR [rsp+0x30],r10
   14000344f:	lea    r8,[rip+0x5aaa]        # 0x140008f00
   140003456:	mov    QWORD PTR [rsp+0x28],rax
   14000345b:	mov    QWORD PTR [rsp+0x20],r9
   140003460:	movzx  r9d,dx
   140003464:	mov    edx,0x2b
   140003469:	call   QWORD PTR [rip+0x4ed9]        # 0x140008348
   14000346f:	add    rsp,0x48
   140003473:	ret    
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	sub    rsp,0x58
   140003480:	xor    r10d,r10d
   140003483:	test   r9,r9
   140003486:	je     0x1400034ac
   140003488:	cmp    WORD PTR [r9],r10w
   14000348c:	jne    0x140003494
   14000348e:	lea    eax,[r10+0xe]
   140003492:	jmp    0x1400034b1
   140003494:	or     rax,0xffffffffffffffff
   140003498:	inc    rax
   14000349b:	cmp    WORD PTR [r9+rax*2],r10w
   1400034a0:	jne    0x140003498
   1400034a2:	lea    rax,[rax*2+0x2]
   1400034aa:	jmp    0x1400034b1
   1400034ac:	mov    eax,0xa
   1400034b1:	test   r9,r9
   1400034b4:	je     0x1400034c7
   1400034b6:	cmp    WORD PTR [r9],r10w
   1400034ba:	lea    r8,[rip+0x586f]        # 0x140008d30
   1400034c1:	cmove  r9,r8
   1400034c5:	jmp    0x1400034ce
   1400034c7:	lea    r9,[rip+0x5872]        # 0x140008d40
   1400034ce:	mov    QWORD PTR [rsp+0x40],r10
   1400034d3:	lea    r8,[rip+0x5876]        # 0x140008d50
   1400034da:	mov    QWORD PTR [rsp+0x38],0x30
   1400034e3:	mov    QWORD PTR [rsp+0x30],r8
   1400034e8:	lea    r8,[rip+0x5a11]        # 0x140008f00
   1400034ef:	mov    QWORD PTR [rsp+0x28],rax
   1400034f4:	mov    QWORD PTR [rsp+0x20],r9
   1400034f9:	movzx  r9d,dx
   1400034fd:	mov    edx,0x2b
   140003502:	call   QWORD PTR [rip+0x4e40]        # 0x140008348
   140003508:	add    rsp,0x58
   14000350c:	ret    
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	int3   
   140003511:	int3   
   140003512:	int3   
   140003513:	int3   
   140003514:	sub    rsp,0x28
   140003518:	call   QWORD PTR [rip+0x4b32]        # 0x140008050
   14000351e:	jmp    0x140003520
   140003520:	or     eax,0xffffffff
   140003523:	add    rsp,0x28
   140003527:	ret    
   140003528:	int3   
   140003529:	int3   
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	sub    rsp,0x28
   140003534:	test   rcx,rcx
   140003537:	je     0x14000353f
   140003539:	call   QWORD PTR [rip+0x4ed1]        # 0x140008410
   14000353f:	add    rsp,0x28
   140003543:	ret    
   140003544:	int3   
   140003545:	int3   
   140003546:	int3   
   140003547:	int3   
   140003548:	int3   
   140003549:	int3   
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	mov    QWORD PTR [rsp+0x10],rbx
   140003551:	mov    QWORD PTR [rsp+0x20],rbp
   140003556:	push   rsi
   140003557:	push   rdi
   140003558:	push   r14
   14000355a:	sub    rsp,0x140
   140003561:	mov    rax,QWORD PTR [rip+0x9a98]        # 0x14000d000
   140003568:	xor    rax,rsp
   14000356b:	mov    QWORD PTR [rsp+0x130],rax
   140003573:	mov    rbp,r8
   140003576:	lea    rax,[rsp+0x30]
   14000357b:	xor    r14d,r14d
   14000357e:	lea    rdx,[rsp+0x30]
   140003583:	mov    r9,rbp
   140003586:	mov    rsi,rcx
   140003589:	sub    r9,rax
   14000358c:	mov    r8d,0x80
   140003592:	mov    ebx,r14d
   140003595:	lea    rax,[r8+0x7fffff7e]
   14000359c:	test   rax,rax
   14000359f:	je     0x1400035b8
   1400035a1:	movzx  eax,WORD PTR [r9+rdx*1]
   1400035a6:	test   ax,ax
   1400035a9:	je     0x1400035b8
   1400035ab:	mov    WORD PTR [rdx],ax
   1400035ae:	add    rdx,0x2
   1400035b2:	sub    r8,0x1
   1400035b6:	jne    0x140003595
   1400035b8:	test   r8,r8
   1400035bb:	jne    0x1400035c6
   1400035bd:	sub    rdx,0x2
   1400035c1:	mov    ebx,0x8007007a
   1400035c6:	mov    WORD PTR [rdx],r14w
   1400035ca:	test   ebx,ebx
   1400035cc:	jns    0x140003616
   1400035ce:	call   QWORD PTR [rip+0x4e34]        # 0x140008408
   1400035d4:	mov    rcx,rax
   1400035d7:	mov    edx,ebx
   1400035d9:	call   QWORD PTR [rip+0x4e21]        # 0x140008400
   1400035df:	mov    rcx,QWORD PTR [rip+0x9a5a]        # 0x14000d040
   1400035e6:	lea    rax,[rip+0x9a53]        # 0x14000d040
   1400035ed:	cmp    rcx,rax
   1400035f0:	je     0x14000360f
   1400035f2:	test   BYTE PTR [rcx+0x1c],0x1
   1400035f6:	je     0x14000360f
   1400035f8:	cmp    BYTE PTR [rcx+0x19],0x2
   1400035fc:	jb     0x14000360f
   1400035fe:	mov    rcx,QWORD PTR [rcx+0x10]
   140003602:	mov    edx,0xa
   140003607:	mov    r9,rbp
   14000360a:	call   0x14000347c
   14000360f:	mov    eax,ebx
   140003611:	jmp    0x140003735
   140003616:	mov    ebx,0x100
   14000361b:	lea    r8,[rip+0x572e]        # 0x140008d50
   140003622:	mov    edx,ebx
   140003624:	call   0x1400058f0
   140003629:	mov    edi,eax
   14000362b:	test   eax,eax
   14000362d:	jns    0x140003675
   14000362f:	call   QWORD PTR [rip+0x4dd3]        # 0x140008408
   140003635:	mov    rcx,rax
   140003638:	mov    edx,edi
   14000363a:	call   QWORD PTR [rip+0x4dc0]        # 0x140008400
   140003640:	mov    rcx,QWORD PTR [rip+0x99f9]        # 0x14000d040
   140003647:	lea    rax,[rip+0x99f2]        # 0x14000d040
   14000364e:	cmp    rcx,rax
   140003651:	je     0x140003733
   140003657:	test   BYTE PTR [rcx+0x1c],0x1
   14000365b:	je     0x140003733
   140003661:	cmp    BYTE PTR [rcx+0x19],0x2
   140003665:	jb     0x140003733
   14000366b:	mov    edx,0xb
   140003670:	jmp    0x140003727
   140003675:	mov    rax,rbx
   140003678:	mov    rcx,rsi
   14000367b:	cmp    WORD PTR [rcx],r14w
   14000367f:	je     0x14000368b
   140003681:	add    rcx,0x2
   140003685:	sub    rax,0x1
   140003689:	jne    0x14000367b
   14000368b:	test   rax,rax
   14000368e:	je     0x1400036ed
   140003690:	mov    rcx,rbx
   140003693:	mov    edi,r14d
   140003696:	sub    rcx,rax
   140003699:	lea    rax,[rsi+rcx*2]
   14000369d:	sub    rbx,rcx
   1400036a0:	je     0x1400036da
   1400036a2:	lea    rdx,[rcx+0x7ffffefe]
   1400036a9:	add    rdx,rbx
   1400036ac:	lea    rcx,[rsp+0x30]
   1400036b1:	sub    rcx,rax
   1400036b4:	test   rdx,rdx
   1400036b7:	je     0x1400036d5
   1400036b9:	movzx  r8d,WORD PTR [rcx+rax*1]
   1400036be:	test   r8w,r8w
   1400036c2:	je     0x1400036d5
   1400036c4:	mov    WORD PTR [rax],r8w
   1400036c8:	dec    rdx
   1400036cb:	add    rax,0x2
   1400036cf:	sub    rbx,0x1
   1400036d3:	jne    0x1400036b4
   1400036d5:	test   rbx,rbx
   1400036d8:	jne    0x1400036e3
   1400036da:	sub    rax,0x2
   1400036de:	mov    edi,0x8007007a
   1400036e3:	mov    WORD PTR [rax],r14w
   1400036e7:	test   edi,edi
   1400036e9:	jns    0x140003733
   1400036eb:	jmp    0x1400036f2
   1400036ed:	mov    edi,0x80070057
   1400036f2:	call   QWORD PTR [rip+0x4d10]        # 0x140008408
   1400036f8:	mov    rcx,rax
   1400036fb:	mov    edx,edi
   1400036fd:	call   QWORD PTR [rip+0x4cfd]        # 0x140008400
   140003703:	mov    rcx,QWORD PTR [rip+0x9936]        # 0x14000d040
   14000370a:	lea    rax,[rip+0x992f]        # 0x14000d040
   140003711:	cmp    rcx,rax
   140003714:	je     0x140003733
   140003716:	test   BYTE PTR [rcx+0x1c],0x1
   14000371a:	je     0x140003733
   14000371c:	cmp    BYTE PTR [rcx+0x19],0x2
   140003720:	jb     0x140003733
   140003722:	mov    edx,0xc
   140003727:	mov    rcx,QWORD PTR [rcx+0x10]
   14000372b:	mov    r9,rbp
   14000372e:	call   0x14000347c
   140003733:	mov    eax,edi
   140003735:	mov    rcx,QWORD PTR [rsp+0x130]
   14000373d:	xor    rcx,rsp
   140003740:	call   0x1400063e0
   140003745:	lea    r11,[rsp+0x140]
   14000374d:	mov    rbx,QWORD PTR [r11+0x28]
   140003751:	mov    rbp,QWORD PTR [r11+0x38]
   140003755:	mov    rsp,r11
   140003758:	pop    r14
   14000375a:	pop    rdi
   14000375b:	pop    rsi
   14000375c:	ret    
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	int3   
   140003761:	int3   
   140003762:	int3   
   140003763:	int3   
   140003764:	int3   
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	int3   
   140003769:	int3   
   14000376a:	int3   
   14000376b:	int3   
   14000376c:	int3   
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	mov    QWORD PTR [rsp+0x8],rbx
   140003775:	push   rdi
   140003776:	sub    rsp,0x20
   14000377a:	lea    rax,[rip+0x53ef]        # 0x140008b70
   140003781:	mov    rdi,rcx
   140003784:	mov    QWORD PTR [rcx],rax
   140003787:	mov    ebx,edx
   140003789:	mov    rcx,QWORD PTR [rcx+0x28]
   14000378d:	call   0x140005dec
   140003792:	mov    rcx,QWORD PTR [rdi+0x20]
   140003796:	call   QWORD PTR [rip+0x4c74]        # 0x140008410
   14000379c:	test   bl,0x1
   14000379f:	je     0x1400037a9
   1400037a1:	mov    rcx,rdi
   1400037a4:	call   0x140005dec
   1400037a9:	mov    rax,rdi
   1400037ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037b1:	add    rsp,0x20
   1400037b5:	pop    rdi
   1400037b6:	ret    
   1400037b7:	int3   
   1400037b8:	int3   
   1400037b9:	int3   
   1400037ba:	int3   
   1400037bb:	int3   
   1400037bc:	int3   
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	mov    rax,rsp
   1400037c3:	push   rbp
   1400037c4:	push   r14
   1400037c6:	push   r15
   1400037c8:	lea    rbp,[rax-0x4d8]
   1400037cf:	sub    rsp,0x5c0
   1400037d6:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   1400037de:	mov    QWORD PTR [rax+0x10],rbx
   1400037e2:	mov    QWORD PTR [rax+0x18],rsi
   1400037e6:	mov    QWORD PTR [rax+0x20],rdi
   1400037ea:	mov    rax,QWORD PTR [rip+0x980f]        # 0x14000d000
   1400037f1:	xor    rax,rsp
   1400037f4:	mov    QWORD PTR [rbp+0x4b0],rax
   1400037fb:	mov    rdi,rcx
   1400037fe:	mov    r8d,0x80
   140003804:	lea    rdx,[rbp-0x60]
   140003808:	mov    rcx,QWORD PTR [rcx+0x18]
   14000380c:	call   QWORD PTR [rip+0x47fe]        # 0x140008010
   140003812:	lea    r8,[rbp-0x60]
   140003816:	lea    rcx,[rbp+0x2b0]
   14000381d:	call   0x14000354c
   140003822:	mov    ebx,eax
   140003824:	xor    r15d,r15d
   140003827:	test   eax,eax
   140003829:	jns    0x140003876
   14000382b:	call   QWORD PTR [rip+0x4bd7]        # 0x140008408
   140003831:	mov    rcx,rax
   140003834:	mov    edx,ebx
   140003836:	call   QWORD PTR [rip+0x4bc4]        # 0x140008400
   14000383c:	lea    rax,[rip+0x97fd]        # 0x14000d040
   140003843:	mov    rcx,QWORD PTR [rip+0x97f6]        # 0x14000d040
   14000384a:	cmp    rcx,rax
   14000384d:	je     0x14000386c
   14000384f:	test   BYTE PTR [rcx+0x1c],0x1
   140003853:	je     0x14000386c
   140003855:	cmp    BYTE PTR [rcx+0x19],0x2
   140003859:	jb     0x14000386c
   14000385b:	lea    edx,[r15+0xd]
   14000385f:	lea    r9,[rbp-0x60]
   140003863:	mov    rcx,QWORD PTR [rcx+0x10]
   140003867:	call   0x1400033f8
   14000386c:	mov    eax,0x80004005
   140003871:	jmp    0x140003cee
   140003876:	lea    rax,[rsp+0x50]
   14000387b:	mov    QWORD PTR [rsp+0x38],rax
   140003880:	lea    rdx,[rbp+0x2b0]
   140003887:	mov    rcx,0xffffffff80000002
   14000388e:	call   0x140005a4c
   140003893:	mov    ebx,eax
   140003895:	test   eax,eax
   140003897:	je     0x1400038e8
   140003899:	call   QWORD PTR [rip+0x4b69]        # 0x140008408
   14000389f:	mov    rcx,rax
   1400038a2:	mov    edx,ebx
   1400038a4:	call   QWORD PTR [rip+0x4b56]        # 0x140008400
   1400038aa:	lea    rax,[rip+0x978f]        # 0x14000d040
   1400038b1:	mov    rcx,QWORD PTR [rip+0x9788]        # 0x14000d040
   1400038b8:	cmp    rcx,rax
   1400038bb:	je     0x14000386c
   1400038bd:	test   BYTE PTR [rcx+0x1c],0x1
   1400038c1:	je     0x14000386c
   1400038c3:	cmp    BYTE PTR [rcx+0x19],0x2
   1400038c7:	jb     0x14000386c
   1400038c9:	mov    edx,0xe
   1400038ce:	lea    rax,[rbp+0x2b0]
   1400038d5:	mov    QWORD PTR [rsp+0x20],rax
   1400038da:	mov    r9d,ebx
   1400038dd:	mov    rcx,QWORD PTR [rcx+0x10]
   1400038e1:	call   0x140003350
   1400038e6:	jmp    0x14000386c
   1400038e8:	mov    r8,QWORD PTR [rsp+0x50]
   1400038ed:	lea    rcx,[rsp+0x78]
   1400038f2:	call   0x140005804
   1400038f7:	nop
   1400038f8:	mov    rcx,QWORD PTR [rdi+0x28]
   1400038fc:	or     rbx,0xffffffffffffffff
   140003900:	mov    rax,rbx
   140003903:	inc    rax
   140003906:	cmp    WORD PTR [rcx+rax*2],r15w
   14000390b:	jne    0x140003903
   14000390d:	add    eax,0x64
   140003910:	movsxd r14,eax
   140003913:	mov    eax,0x2
   140003918:	mul    r14
   14000391b:	cmovo  rax,rbx
   14000391f:	mov    rcx,rax
   140003922:	call   0x140006c5c
   140003927:	mov    rsi,rax
   14000392a:	test   rax,rax
   14000392d:	jne    0x140003986
   14000392f:	call   QWORD PTR [rip+0x4ad3]        # 0x140008408
   140003935:	mov    rcx,rax
   140003938:	mov    edx,0x8007000e
   14000393d:	call   QWORD PTR [rip+0x4abd]        # 0x140008400
   140003943:	lea    rax,[rip+0x96f6]        # 0x14000d040
   14000394a:	mov    rcx,QWORD PTR [rip+0x96ef]        # 0x14000d040
   140003951:	cmp    rcx,rax
   140003954:	je     0x140003ae8
   14000395a:	test   BYTE PTR [rcx+0x1c],0x1
   14000395e:	je     0x140003ae8
   140003964:	cmp    BYTE PTR [rcx+0x19],0x2
   140003968:	jb     0x140003ae8
   14000396e:	lea    edx,[rsi+0xf]
   140003971:	lea    r9,[rbp+0x2b0]
   140003978:	mov    rcx,QWORD PTR [rcx+0x10]
   14000397c:	call   0x1400033f8
   140003981:	jmp    0x140003ae8
   140003986:	mov    r9,QWORD PTR [rdi+0x28]
   14000398a:	lea    r8,[rip+0x53ef]        # 0x140008d80
   140003991:	mov    rdx,r14
   140003994:	mov    rcx,rax
   140003997:	call   0x140005870
   14000399c:	mov    r14d,eax
   14000399f:	test   eax,eax
   1400039a1:	jns    0x1400039fa
   1400039a3:	call   QWORD PTR [rip+0x4a5f]        # 0x140008408
   1400039a9:	mov    rcx,rax
   1400039ac:	mov    edx,r14d
   1400039af:	call   QWORD PTR [rip+0x4a4b]        # 0x140008400
   1400039b5:	lea    rax,[rip+0x9684]        # 0x14000d040
   1400039bc:	mov    rcx,QWORD PTR [rip+0x967d]        # 0x14000d040
   1400039c3:	cmp    rcx,rax
   1400039c6:	je     0x140003ae8
   1400039cc:	test   BYTE PTR [rcx+0x1c],0x1
   1400039d0:	je     0x140003ae8
   1400039d6:	cmp    BYTE PTR [rcx+0x19],0x2
   1400039da:	jb     0x140003ae8
   1400039e0:	mov    edx,0x10
   1400039e5:	lea    r8,[rip+0x5514]        # 0x140008f00
   1400039ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400039f0:	call   0x1400032f0
   1400039f5:	jmp    0x140003ae8
   1400039fa:	mov    rax,rbx
   1400039fd:	inc    rax
   140003a00:	cmp    WORD PTR [rsi+rax*2],r15w
   140003a05:	jne    0x1400039fd
   140003a07:	lea    eax,[rax*2+0x2]
   140003a0e:	mov    DWORD PTR [rsp+0x28],eax
   140003a12:	mov    QWORD PTR [rsp+0x20],rsi
   140003a17:	xor    edx,edx
   140003a19:	mov    rcx,QWORD PTR [rsp+0x50]
   140003a1e:	call   0x140005c60
   140003a23:	mov    r14d,eax
   140003a26:	test   eax,eax
   140003a28:	je     0x140003a7f
   140003a2a:	call   QWORD PTR [rip+0x49d8]        # 0x140008408
   140003a30:	mov    rcx,rax
   140003a33:	mov    edx,r14d
   140003a36:	call   QWORD PTR [rip+0x49c4]        # 0x140008400
   140003a3c:	lea    rax,[rip+0x95fd]        # 0x14000d040
   140003a43:	mov    rcx,QWORD PTR [rip+0x95f6]        # 0x14000d040
   140003a4a:	cmp    rcx,rax
   140003a4d:	je     0x140003ae8
   140003a53:	test   BYTE PTR [rcx+0x1c],0x1
   140003a57:	je     0x140003ae8
   140003a5d:	cmp    BYTE PTR [rcx+0x19],0x2
   140003a61:	jb     0x140003ae8
   140003a67:	mov    edx,0x11
   140003a6c:	mov    QWORD PTR [rsp+0x20],rsi
   140003a71:	mov    r9d,r14d
   140003a74:	mov    rcx,QWORD PTR [rcx+0x10]
   140003a78:	call   0x140003350
   140003a7d:	jmp    0x140003ae8
   140003a7f:	lea    rax,[rsp+0x58]
   140003a84:	mov    QWORD PTR [rsp+0x38],rax
   140003a89:	lea    rdx,[rip+0x5318]        # 0x140008da8
   140003a90:	mov    rcx,QWORD PTR [rsp+0x50]
   140003a95:	call   0x140005a4c
   140003a9a:	mov    esi,eax
   140003a9c:	test   eax,eax
   140003a9e:	je     0x140003af2
   140003aa0:	call   QWORD PTR [rip+0x4962]        # 0x140008408
   140003aa6:	mov    rcx,rax
   140003aa9:	mov    edx,esi
   140003aab:	call   QWORD PTR [rip+0x494f]        # 0x140008400
   140003ab1:	lea    rax,[rip+0x9588]        # 0x14000d040
   140003ab8:	mov    rcx,QWORD PTR [rip+0x9581]        # 0x14000d040
   140003abf:	cmp    rcx,rax
   140003ac2:	je     0x140003ae8
   140003ac4:	test   BYTE PTR [rcx+0x1c],0x1
   140003ac8:	je     0x140003ae8
   140003aca:	cmp    BYTE PTR [rcx+0x19],0x2
   140003ace:	jb     0x140003ae8
   140003ad0:	mov    edx,0x12
   140003ad5:	mov    r9d,esi
   140003ad8:	lea    r8,[rip+0x5421]        # 0x140008f00
   140003adf:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ae3:	call   0x140003314
   140003ae8:	mov    ebx,0x80004005
   140003aed:	jmp    0x140003cd4
   140003af2:	mov    r8,QWORD PTR [rsp+0x58]
   140003af7:	lea    rcx,[rsp+0x60]
   140003afc:	call   0x140005804
   140003b01:	nop
   140003b02:	mov    eax,0x30
   140003b07:	mov    WORD PTR [rbp+0x2a8],ax
   140003b0e:	mov    r8d,0x104
   140003b14:	lea    rdx,[rbp+0xa0]
   140003b1b:	mov    rcx,QWORD PTR [rip+0x9d6e]        # 0x14000d890
   140003b22:	call   QWORD PTR [rip+0x4588]        # 0x1400080b0
   140003b28:	test   eax,eax
   140003b2a:	jne    0x140003b75
   140003b2c:	call   QWORD PTR [rip+0x48d6]        # 0x140008408
   140003b32:	mov    rcx,rax
   140003b35:	xor    edx,edx
   140003b37:	call   QWORD PTR [rip+0x48c3]        # 0x140008400
   140003b3d:	lea    rax,[rip+0x94fc]        # 0x14000d040
   140003b44:	mov    rcx,QWORD PTR [rip+0x94f5]        # 0x14000d040
   140003b4b:	cmp    rcx,rax
   140003b4e:	je     0x140003cae
   140003b54:	test   BYTE PTR [rcx+0x1c],0x1
   140003b58:	je     0x140003cae
   140003b5e:	cmp    BYTE PTR [rcx+0x19],0x2
   140003b62:	jb     0x140003cae
   140003b68:	mov    edx,0x13
   140003b6d:	xor    r9d,r9d
   140003b70:	jmp    0x140003c9e
   140003b75:	lea    rcx,[rbp+0xa0]
   140003b7c:	mov    rax,rbx
   140003b7f:	inc    rax
   140003b82:	cmp    WORD PTR [rcx+rax*2],r15w
   140003b87:	jne    0x140003b7f
   140003b89:	lea    eax,[rax*2+0x2]
   140003b90:	mov    DWORD PTR [rsp+0x28],eax
   140003b94:	lea    rax,[rbp+0xa0]
   140003b9b:	mov    QWORD PTR [rsp+0x20],rax
   140003ba0:	xor    edx,edx
   140003ba2:	mov    rcx,QWORD PTR [rsp+0x58]
   140003ba7:	call   0x140005c60
   140003bac:	mov    esi,eax
   140003bae:	test   eax,eax
   140003bb0:	je     0x140003c10
   140003bb2:	call   QWORD PTR [rip+0x4850]        # 0x140008408
   140003bb8:	mov    rcx,rax
   140003bbb:	mov    edx,esi
   140003bbd:	call   QWORD PTR [rip+0x483d]        # 0x140008400
   140003bc3:	lea    rax,[rip+0x9476]        # 0x14000d040
   140003bca:	mov    rcx,QWORD PTR [rip+0x946f]        # 0x14000d040
   140003bd1:	cmp    rcx,rax
   140003bd4:	je     0x140003cae
   140003bda:	test   BYTE PTR [rcx+0x1c],0x1
   140003bde:	je     0x140003cae
   140003be4:	cmp    BYTE PTR [rcx+0x19],0x2
   140003be8:	jb     0x140003cae
   140003bee:	mov    edx,0x14
   140003bf3:	lea    rax,[rbp+0xa0]
   140003bfa:	mov    QWORD PTR [rsp+0x20],rax
   140003bff:	mov    r9d,esi
   140003c02:	mov    rcx,QWORD PTR [rcx+0x10]
   140003c06:	call   0x140003350
   140003c0b:	jmp    0x140003cae
   140003c10:	cmp    DWORD PTR [rdi+0x30],r15d
   140003c14:	je     0x140003c2e
   140003c16:	lea    rcx,[rip+0x51ab]        # 0x140008dc8
   140003c1d:	lea    rax,[rip+0x51b4]        # 0x140008dd8
   140003c24:	cmp    DWORD PTR [rdi+0x34],r15d
   140003c28:	cmovne rcx,rax
   140003c2c:	jmp    0x140003c35
   140003c2e:	lea    rcx,[rip+0x51b3]        # 0x140008de8
   140003c35:	inc    rbx
   140003c38:	cmp    WORD PTR [rcx+rbx*2],r15w
   140003c3d:	jne    0x140003c35
   140003c3f:	lea    eax,[rbx*2+0x2]
   140003c46:	mov    DWORD PTR [rsp+0x28],eax
   140003c4a:	mov    QWORD PTR [rsp+0x20],rcx
   140003c4f:	lea    rdx,[rip+0x51aa]        # 0x140008e00
   140003c56:	mov    rcx,QWORD PTR [rsp+0x58]
   140003c5b:	call   0x140005c60
   140003c60:	mov    ebx,eax
   140003c62:	test   eax,eax
   140003c64:	je     0x140003cb5
   140003c66:	call   QWORD PTR [rip+0x479c]        # 0x140008408
   140003c6c:	mov    rcx,rax
   140003c6f:	mov    edx,ebx
   140003c71:	call   QWORD PTR [rip+0x4789]        # 0x140008400
   140003c77:	lea    rax,[rip+0x93c2]        # 0x14000d040
   140003c7e:	mov    rcx,QWORD PTR [rip+0x93bb]        # 0x14000d040
   140003c85:	cmp    rcx,rax
   140003c88:	je     0x140003cae
   140003c8a:	test   BYTE PTR [rcx+0x1c],0x1
   140003c8e:	je     0x140003cae
   140003c90:	cmp    BYTE PTR [rcx+0x19],0x2
   140003c94:	jb     0x140003cae
   140003c96:	mov    edx,0x15
   140003c9b:	mov    r9d,ebx
   140003c9e:	lea    r8,[rip+0x525b]        # 0x140008f00
   140003ca5:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ca9:	call   0x140003314
   140003cae:	mov    ebx,0x80004005
   140003cb3:	jmp    0x140003cb8
   140003cb5:	mov    ebx,r15d
   140003cb8:	cmp    BYTE PTR [rsp+0x60],r15b
   140003cbd:	jne    0x140003cd4
   140003cbf:	mov    rcx,QWORD PTR [rsp+0x68]
   140003cc4:	call   QWORD PTR [rip+0x47a6]        # 0x140008470
   140003cca:	mov    rcx,QWORD PTR [rsp+0x70]
   140003ccf:	call   QWORD PTR [rsp+0x68]
   140003cd3:	nop
   140003cd4:	cmp    BYTE PTR [rsp+0x78],r15b
   140003cd9:	jne    0x140003cec
   140003cdb:	mov    rcx,QWORD PTR [rbp-0x80]
   140003cdf:	call   QWORD PTR [rip+0x478b]        # 0x140008470
   140003ce5:	mov    rcx,QWORD PTR [rbp-0x78]
   140003ce9:	call   QWORD PTR [rbp-0x80]
   140003cec:	mov    eax,ebx
   140003cee:	mov    rcx,QWORD PTR [rbp+0x4b0]
   140003cf5:	xor    rcx,rsp
   140003cf8:	call   0x1400063e0
   140003cfd:	lea    r11,[rsp+0x5c0]
   140003d05:	mov    rbx,QWORD PTR [r11+0x28]
   140003d09:	mov    rsi,QWORD PTR [r11+0x30]
   140003d0d:	mov    rdi,QWORD PTR [r11+0x38]
   140003d11:	mov    rsp,r11
   140003d14:	pop    r15
   140003d16:	pop    r14
   140003d18:	pop    rbp
   140003d19:	ret    
   140003d1a:	int3   
   140003d1b:	int3   
   140003d1c:	int3   
   140003d1d:	int3   
   140003d1e:	int3   
   140003d1f:	int3   
   140003d20:	mov    rax,rsp
   140003d23:	push   rbp
   140003d24:	push   r14
   140003d26:	push   r15
   140003d28:	lea    rbp,[rax-0x288]
   140003d2f:	sub    rsp,0x370
   140003d36:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140003d3f:	mov    QWORD PTR [rax+0x10],rbx
   140003d43:	mov    QWORD PTR [rax+0x18],rsi
   140003d47:	mov    rax,QWORD PTR [rip+0x92b2]        # 0x14000d000
   140003d4e:	xor    rax,rsp
   140003d51:	mov    QWORD PTR [rbp+0x260],rax
   140003d58:	mov    r8d,0x80
   140003d5e:	lea    rdx,[rsp+0x60]
   140003d63:	mov    rcx,QWORD PTR [rcx+0x18]
   140003d67:	call   QWORD PTR [rip+0x42a3]        # 0x140008010
   140003d6d:	lea    r8,[rsp+0x60]
   140003d72:	lea    rcx,[rbp+0x60]
   140003d76:	call   0x14000354c
   140003d7b:	mov    ebx,eax
   140003d7d:	test   eax,eax
   140003d7f:	jns    0x140003dcf
   140003d81:	call   QWORD PTR [rip+0x4681]        # 0x140008408
   140003d87:	mov    rcx,rax
   140003d8a:	mov    edx,ebx
   140003d8c:	call   QWORD PTR [rip+0x466e]        # 0x140008400
   140003d92:	lea    rsi,[rip+0x92a7]        # 0x14000d040
   140003d99:	mov    rcx,QWORD PTR [rip+0x92a0]        # 0x14000d040
   140003da0:	cmp    rcx,rsi
   140003da3:	je     0x140003dc5
   140003da5:	test   BYTE PTR [rcx+0x1c],0x1
   140003da9:	je     0x140003dc5
   140003dab:	mov    bl,0x2
   140003dad:	cmp    BYTE PTR [rcx+0x19],bl
   140003db0:	jb     0x140003dc5
   140003db2:	mov    edx,0x16
   140003db7:	lea    r9,[rsp+0x60]
   140003dbc:	mov    rcx,QWORD PTR [rcx+0x10]
   140003dc0:	call   0x1400033f8
   140003dc5:	mov    eax,0x80004005
   140003dca:	jmp    0x140003fb6
   140003dcf:	lea    rax,[rsp+0x30]
   140003dd4:	mov    QWORD PTR [rsp+0x20],rax
   140003dd9:	lea    rdx,[rbp+0x60]
   140003ddd:	call   0x140005bd8
   140003de2:	mov    r14d,eax
   140003de5:	mov    bl,0x2
   140003de7:	test   eax,eax
   140003de9:	jne    0x140003e7f
   140003def:	mov    r8,QWORD PTR [rsp+0x30]
   140003df4:	lea    rcx,[rsp+0x38]
   140003df9:	call   0x140005804
   140003dfe:	nop
   140003dff:	lea    rdx,[rip+0x4fa2]        # 0x140008da8
   140003e06:	mov    rcx,QWORD PTR [rsp+0x30]
   140003e0b:	call   0x140005af4
   140003e10:	mov    r14d,eax
   140003e13:	lea    rsi,[rip+0x9226]        # 0x14000d040
   140003e1a:	test   eax,eax
   140003e1c:	je     0x140003e62
   140003e1e:	call   QWORD PTR [rip+0x45e4]        # 0x140008408
   140003e24:	mov    rcx,rax
   140003e27:	mov    edx,r14d
   140003e2a:	call   QWORD PTR [rip+0x45d0]        # 0x140008400
   140003e30:	mov    rcx,QWORD PTR [rip+0x9209]        # 0x14000d040
   140003e37:	cmp    rcx,rsi
   140003e3a:	je     0x140003e62
   140003e3c:	test   BYTE PTR [rcx+0x1c],0x1
   140003e40:	je     0x140003e62
   140003e42:	cmp    BYTE PTR [rcx+0x19],bl
   140003e45:	jb     0x140003e62
   140003e47:	mov    edx,0x17
   140003e4c:	lea    rax,[rbp+0x60]
   140003e50:	mov    QWORD PTR [rsp+0x20],rax
   140003e55:	mov    r9d,r14d
   140003e58:	mov    rcx,QWORD PTR [rcx+0x10]
   140003e5c:	call   0x140003350
   140003e61:	nop
   140003e62:	cmp    BYTE PTR [rsp+0x38],0x0
   140003e67:	jne    0x140003ec9
   140003e69:	mov    rcx,QWORD PTR [rsp+0x40]
   140003e6e:	call   QWORD PTR [rip+0x45fc]        # 0x140008470
   140003e74:	mov    rcx,QWORD PTR [rsp+0x48]
   140003e79:	call   QWORD PTR [rsp+0x40]
   140003e7d:	jmp    0x140003ec9
   140003e7f:	call   QWORD PTR [rip+0x4583]        # 0x140008408
   140003e85:	mov    rcx,rax
   140003e88:	mov    edx,r14d
   140003e8b:	call   QWORD PTR [rip+0x456f]        # 0x140008400
   140003e91:	lea    rsi,[rip+0x91a8]        # 0x14000d040
   140003e98:	mov    rcx,QWORD PTR [rip+0x91a1]        # 0x14000d040
   140003e9f:	cmp    rcx,rsi
   140003ea2:	je     0x140003ec9
   140003ea4:	test   BYTE PTR [rcx+0x1c],0x1
   140003ea8:	je     0x140003ec9
   140003eaa:	cmp    BYTE PTR [rcx+0x19],bl
   140003ead:	jb     0x140003ec9
   140003eaf:	mov    edx,0x18
   140003eb4:	lea    rax,[rbp+0x60]
   140003eb8:	mov    QWORD PTR [rsp+0x20],rax
   140003ebd:	mov    r9d,r14d
   140003ec0:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ec4:	call   0x140003350
   140003ec9:	lea    rax,[rsp+0x30]
   140003ece:	mov    QWORD PTR [rsp+0x20],rax
   140003ed3:	lea    r15,[rip+0x4f46]        # 0x140008e20
   140003eda:	mov    rdx,r15
   140003edd:	call   0x140005bd8
   140003ee2:	mov    r14d,eax
   140003ee5:	test   eax,eax
   140003ee7:	jne    0x140003f75
   140003eed:	mov    r8,QWORD PTR [rsp+0x30]
   140003ef2:	lea    rcx,[rsp+0x38]
   140003ef7:	call   0x140005804
   140003efc:	nop
   140003efd:	lea    rdx,[rsp+0x60]
   140003f02:	mov    rcx,QWORD PTR [rsp+0x30]
   140003f07:	call   0x140005af4
   140003f0c:	mov    r14d,eax
   140003f0f:	test   eax,eax
   140003f11:	je     0x140003f58
   140003f13:	call   QWORD PTR [rip+0x44ef]        # 0x140008408
   140003f19:	mov    rcx,rax
   140003f1c:	mov    edx,r14d
   140003f1f:	call   QWORD PTR [rip+0x44db]        # 0x140008400
   140003f25:	mov    rcx,QWORD PTR [rip+0x9114]        # 0x14000d040
   140003f2c:	cmp    rcx,rsi
   140003f2f:	je     0x140003f58
   140003f31:	test   BYTE PTR [rcx+0x1c],0x1
   140003f35:	je     0x140003f58
   140003f37:	cmp    BYTE PTR [rcx+0x19],bl
   140003f3a:	jb     0x140003f58
   140003f3c:	mov    edx,0x19
   140003f41:	lea    rax,[rsp+0x60]
   140003f46:	mov    QWORD PTR [rsp+0x20],rax
   140003f4b:	mov    r9d,r14d
   140003f4e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f52:	call   0x140003350
   140003f57:	nop
   140003f58:	cmp    BYTE PTR [rsp+0x38],0x0
   140003f5d:	jne    0x140003fb4
   140003f5f:	mov    rcx,QWORD PTR [rsp+0x40]
   140003f64:	call   QWORD PTR [rip+0x4506]        # 0x140008470
   140003f6a:	mov    rcx,QWORD PTR [rsp+0x48]
   140003f6f:	call   QWORD PTR [rsp+0x40]
   140003f73:	jmp    0x140003fb4
   140003f75:	call   QWORD PTR [rip+0x448d]        # 0x140008408
   140003f7b:	mov    rcx,rax
   140003f7e:	mov    edx,r14d
   140003f81:	call   QWORD PTR [rip+0x4479]        # 0x140008400
   140003f87:	mov    rcx,QWORD PTR [rip+0x90b2]        # 0x14000d040
   140003f8e:	cmp    rcx,rsi
   140003f91:	je     0x140003fb4
   140003f93:	test   BYTE PTR [rcx+0x1c],0x1
   140003f97:	je     0x140003fb4
   140003f99:	cmp    BYTE PTR [rcx+0x19],bl
   140003f9c:	jb     0x140003fb4
   140003f9e:	mov    edx,0x1a
   140003fa3:	mov    QWORD PTR [rsp+0x20],r15
   140003fa8:	mov    r9d,r14d
   140003fab:	mov    rcx,QWORD PTR [rcx+0x10]
   140003faf:	call   0x140003350
   140003fb4:	xor    eax,eax
   140003fb6:	mov    rcx,QWORD PTR [rbp+0x260]
   140003fbd:	xor    rcx,rsp
   140003fc0:	call   0x1400063e0
   140003fc5:	lea    r11,[rsp+0x370]
   140003fcd:	mov    rbx,QWORD PTR [r11+0x28]
   140003fd1:	mov    rsi,QWORD PTR [r11+0x30]
   140003fd5:	mov    rsp,r11
   140003fd8:	pop    r15
   140003fda:	pop    r14
   140003fdc:	pop    rbp
   140003fdd:	ret    
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	int3   
   140003fe1:	int3   
   140003fe2:	int3   
   140003fe3:	int3   
   140003fe4:	mov    rax,rsp
   140003fe7:	mov    QWORD PTR [rax+0x20],r9
   140003feb:	push   rdi
   140003fec:	sub    rsp,0x30
   140003ff0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003ff8:	mov    QWORD PTR [rax+0x8],rbx
   140003ffc:	mov    QWORD PTR [rax+0x10],rbp
   140004000:	mov    rdi,r8
   140004003:	test   r8,r8
   140004006:	jne    0x140004063
   140004008:	call   QWORD PTR [rip+0x43fa]        # 0x140008408
   14000400e:	mov    rcx,rax
   140004011:	mov    edi,0x8007000e
   140004016:	mov    edx,edi
   140004018:	call   QWORD PTR [rip+0x43e2]        # 0x140008400
   14000401e:	lea    rax,[rip+0x901b]        # 0x14000d040
   140004025:	mov    rcx,QWORD PTR [rip+0x9014]        # 0x14000d040
   14000402c:	cmp    rcx,rax
   14000402f:	je     0x140004202
   140004035:	test   BYTE PTR [rcx+0x1c],0x1
   140004039:	je     0x140004202
   14000403f:	cmp    BYTE PTR [rcx+0x19],0x2
   140004043:	jb     0x140004202
   140004049:	mov    edx,0x1b
   14000404e:	lea    r8,[rip+0x4eab]        # 0x140008f00
   140004055:	mov    rcx,QWORD PTR [rcx+0x10]
   140004059:	call   0x1400032f0
   14000405e:	jmp    0x140004202
   140004063:	mov    ecx,0x40
   140004068:	call   0x140005d6c
   14000406d:	mov    rbx,rax
   140004070:	mov    QWORD PTR [rsp+0x58],rax
   140004075:	lea    rbp,[rip+0x4af4]        # 0x140008b70
   14000407c:	test   rax,rax
   14000407f:	je     0x14000409d
   140004081:	mov    QWORD PTR [rax],rbp
   140004084:	and    QWORD PTR [rax+0x18],0x0
   140004089:	and    QWORD PTR [rax+0x20],0x0
   14000408e:	and    QWORD PTR [rax+0x28],0x0
   140004093:	and    DWORD PTR [rax+0x30],0x0
   140004097:	and    DWORD PTR [rax+0x38],0x0
   14000409b:	jmp    0x14000409f
   14000409d:	xor    ebx,ebx
   14000409f:	mov    QWORD PTR [rsp+0x58],rbx
   1400040a4:	test   rbx,rbx
   1400040a7:	jne    0x140004102
   1400040a9:	call   QWORD PTR [rip+0x4359]        # 0x140008408
   1400040af:	mov    rcx,rax
   1400040b2:	mov    edi,0x8007000e
   1400040b7:	mov    edx,edi
   1400040b9:	call   QWORD PTR [rip+0x4341]        # 0x140008400
   1400040bf:	lea    rax,[rip+0x8f7a]        # 0x14000d040
   1400040c6:	mov    rcx,QWORD PTR [rip+0x8f73]        # 0x14000d040
   1400040cd:	cmp    rcx,rax
   1400040d0:	je     0x1400041df
   1400040d6:	test   BYTE PTR [rcx+0x1c],0x1
   1400040da:	je     0x1400041df
   1400040e0:	cmp    BYTE PTR [rcx+0x19],0x2
   1400040e4:	jb     0x1400041df
   1400040ea:	lea    edx,[rbx+0x1c]
   1400040ed:	lea    r8,[rip+0x4e0c]        # 0x140008f00
   1400040f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040f8:	call   0x1400032f0
   1400040fd:	jmp    0x1400041df
   140004102:	lock inc DWORD PTR [rdi+0x8]
   140004106:	mov    QWORD PTR [rbx+0x20],rdi
   14000410a:	lea    rax,[rip+0x4e1f]        # 0x140008f30
   140004111:	mov    QWORD PTR [rbx+0x18],rax
   140004115:	mov    edi,0x14
   14000411a:	lea    eax,[rdi-0x12]
   14000411d:	mul    rdi
   140004120:	lea    rcx,[rdi-0x15]
   140004124:	cmovo  rax,rcx
   140004128:	mov    rcx,rax
   14000412b:	call   0x140006c5c
   140004130:	mov    QWORD PTR [rbx+0x28],rax
   140004134:	test   rax,rax
   140004137:	jne    0x14000418a
   140004139:	call   QWORD PTR [rip+0x42c9]        # 0x140008408
   14000413f:	mov    rcx,rax
   140004142:	mov    edi,0x8007000e
   140004147:	mov    edx,edi
   140004149:	call   QWORD PTR [rip+0x42b1]        # 0x140008400
   14000414f:	lea    rax,[rip+0x8eea]        # 0x14000d040
   140004156:	mov    rcx,QWORD PTR [rip+0x8ee3]        # 0x14000d040
   14000415d:	cmp    rcx,rax
   140004160:	je     0x140004183
   140004162:	test   BYTE PTR [rcx+0x1c],0x1
   140004166:	je     0x140004183
   140004168:	cmp    BYTE PTR [rcx+0x19],0x2
   14000416c:	jb     0x140004183
   14000416e:	mov    edx,0x1d
   140004173:	lea    r8,[rip+0x4d86]        # 0x140008f00
   14000417a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000417e:	call   0x1400032f0
   140004183:	mov    rbx,QWORD PTR [rsp+0x58]
   140004188:	jmp    0x1400041df
   14000418a:	lea    r8,[rip+0x49f7]        # 0x140008b88
   140004191:	mov    rdx,rdi
   140004194:	mov    rcx,rax
   140004197:	call   0x1400058f0
   14000419c:	mov    DWORD PTR [rbx+0x30],0x1
   1400041a3:	and    DWORD PTR [rbx+0x34],0x0
   1400041a7:	add    rbx,0x8
   1400041ab:	mov    rax,QWORD PTR [rip+0x8e86]        # 0x14000d038
   1400041b2:	lea    rcx,[rip+0x8e77]        # 0x14000d030
   1400041b9:	mov    QWORD PTR [rbx],rcx
   1400041bc:	mov    QWORD PTR [rbx+0x8],rax
   1400041c0:	cmp    QWORD PTR [rax],rcx
   1400041c3:	je     0x1400041cc
   1400041c5:	mov    ecx,0x3
   1400041ca:	int    0x29
   1400041cc:	mov    QWORD PTR [rax],rbx
   1400041cf:	mov    QWORD PTR [rip+0x8e62],rbx        # 0x14000d038
   1400041d6:	xor    ebx,ebx
   1400041d8:	mov    QWORD PTR [rsp+0x58],rbx
   1400041dd:	xor    edi,edi
   1400041df:	test   rbx,rbx
   1400041e2:	je     0x140004202
   1400041e4:	mov    QWORD PTR [rbx],rbp
   1400041e7:	mov    rcx,QWORD PTR [rbx+0x28]
   1400041eb:	call   0x140005dec
   1400041f0:	mov    rcx,QWORD PTR [rbx+0x20]
   1400041f4:	call   QWORD PTR [rip+0x4216]        # 0x140008410
   1400041fa:	mov    rcx,rbx
   1400041fd:	call   0x140005dec
   140004202:	mov    eax,edi
   140004204:	mov    rbx,QWORD PTR [rsp+0x40]
   140004209:	mov    rbp,QWORD PTR [rsp+0x48]
   14000420e:	add    rsp,0x30
   140004212:	pop    rdi
   140004213:	ret    
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	int3   
   140004219:	int3   
   14000421a:	int3   
   14000421b:	int3   
   14000421c:	mov    QWORD PTR [rsp+0x8],rbx
   140004221:	mov    QWORD PTR [rsp+0x10],rsi
   140004226:	push   rdi
   140004227:	sub    rsp,0x20
   14000422b:	mov    rdi,QWORD PTR [rip+0x9666]        # 0x14000d898
   140004232:	mov    rax,QWORD PTR [rdi]
   140004235:	mov    rbx,QWORD PTR [rax+0x8]
   140004239:	mov    rcx,rbx
   14000423c:	call   QWORD PTR [rip+0x422e]        # 0x140008470
   140004242:	mov    rcx,rdi
   140004245:	call   rbx
   140004247:	mov    edi,eax
   140004249:	test   eax,eax
   14000424b:	jns    0x140004295
   14000424d:	call   QWORD PTR [rip+0x41b5]        # 0x140008408
   140004253:	mov    rcx,rax
   140004256:	mov    edx,edi
   140004258:	call   QWORD PTR [rip+0x41a2]        # 0x140008400
   14000425e:	mov    rcx,QWORD PTR [rip+0x8ddb]        # 0x14000d040
   140004265:	lea    rax,[rip+0x8dd4]        # 0x14000d040
   14000426c:	cmp    rcx,rax
   14000426f:	je     0x140004295
   140004271:	test   BYTE PTR [rcx+0x1c],0x1
   140004275:	je     0x140004295
   140004277:	cmp    BYTE PTR [rcx+0x19],0x2
   14000427b:	jb     0x140004295
   14000427d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004281:	lea    r8,[rip+0x4c78]        # 0x140008f00
   140004288:	mov    edx,0x2f
   14000428d:	mov    r9d,edi
   140004290:	call   0x140003314
   140004295:	lea    rsi,[rip+0x8d94]        # 0x14000d030
   14000429c:	jmp    0x1400042f0
   14000429e:	mov    rbx,QWORD PTR [rip+0x8d93]        # 0x14000d038
   1400042a5:	add    rbx,0xfffffffffffffff8
   1400042a9:	lea    rax,[rbx+0x8]
   1400042ad:	mov    rdx,QWORD PTR [rax]
   1400042b0:	mov    rcx,QWORD PTR [rax+0x8]
   1400042b4:	cmp    QWORD PTR [rdx+0x8],rax
   1400042b8:	jne    0x14000430b
   1400042ba:	cmp    QWORD PTR [rcx],rax
   1400042bd:	jne    0x14000430b
   1400042bf:	mov    QWORD PTR [rcx],rdx
   1400042c2:	mov    QWORD PTR [rdx+0x8],rcx
   1400042c6:	test   rbx,rbx
   1400042c9:	je     0x1400042f0
   1400042cb:	mov    rcx,QWORD PTR [rbx+0x28]
   1400042cf:	lea    rax,[rip+0x489a]        # 0x140008b70
   1400042d6:	mov    QWORD PTR [rbx],rax
   1400042d9:	call   0x140005dec
   1400042de:	mov    rcx,QWORD PTR [rbx+0x20]
   1400042e2:	call   QWORD PTR [rip+0x4128]        # 0x140008410
   1400042e8:	mov    rcx,rbx
   1400042eb:	call   0x140005dec
   1400042f0:	cmp    QWORD PTR [rip+0x8d39],rsi        # 0x14000d030
   1400042f7:	jne    0x14000429e
   1400042f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042fe:	mov    eax,edi
   140004300:	mov    rsi,QWORD PTR [rsp+0x38]
   140004305:	add    rsp,0x20
   140004309:	pop    rdi
   14000430a:	ret    
   14000430b:	mov    ecx,0x3
   140004310:	int    0x29
   140004312:	int3   
   140004313:	int3   
   140004314:	int3   
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	mov    r11,rsp
   14000431b:	mov    DWORD PTR [r11+0x20],r9d
   14000431f:	sub    rsp,0x48
   140004323:	and    QWORD PTR [r11-0x18],0x0
   140004328:	lea    rax,[r11+0x20]
   14000432c:	movzx  r9d,dx
   140004330:	lea    r8,[rip+0x4bb9]        # 0x140008ef0
   140004337:	mov    QWORD PTR [r11-0x20],0x4
   14000433f:	mov    edx,0x2b
   140004344:	mov    QWORD PTR [r11-0x28],rax
   140004348:	call   QWORD PTR [rip+0x3ffa]        # 0x140008348
   14000434e:	add    rsp,0x48
   140004352:	ret    
   140004353:	int3   
   140004354:	int3   
   140004355:	int3   
   140004356:	int3   
   140004357:	int3   
   140004358:	int3   
   140004359:	int3   
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	mov    QWORD PTR [rsp+0x8],rbx
   140004365:	mov    QWORD PTR [rsp+0x10],rsi
   14000436a:	push   rdi
   14000436b:	sub    rsp,0x20
   14000436f:	and    DWORD PTR [r8],0x0
   140004373:	mov    rbx,rdx
   140004376:	sub    ecx,0x4
   140004379:	je     0x140004390
   14000437b:	cmp    ecx,0x1
   14000437e:	je     0x140004387
   140004380:	mov    eax,0x57
   140004385:	jmp    0x1400043cf
   140004387:	xor    edi,edi
   140004389:	xor    eax,eax
   14000438b:	xor    sil,sil
   14000438e:	jmp    0x1400043b1
   140004390:	mov    rcx,r9
   140004393:	call   QWORD PTR [rip+0x3fa7]        # 0x140008340
   140004399:	mov    rcx,rax
   14000439c:	mov    rdi,rax
   14000439f:	call   QWORD PTR [rip+0x3f93]        # 0x140008338
   1400043a5:	mov    rcx,rdi
   1400043a8:	mov    sil,al
   1400043ab:	call   QWORD PTR [rip+0x3f7f]        # 0x140008330
   1400043b1:	test   BYTE PTR [rbx+0x1a],0x2
   1400043b5:	je     0x1400043c2
   1400043b7:	mov    rcx,QWORD PTR [rbx+0x10]
   1400043bb:	test   rcx,rcx
   1400043be:	cmovne rbx,rcx
   1400043c2:	mov    QWORD PTR [rbx+0x10],rdi
   1400043c6:	mov    BYTE PTR [rbx+0x19],sil
   1400043ca:	mov    DWORD PTR [rbx+0x1c],eax
   1400043cd:	xor    eax,eax
   1400043cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043d4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400043d9:	add    rsp,0x20
   1400043dd:	pop    rdi
   1400043de:	ret    
   1400043df:	int3   
   1400043e0:	int3   
   1400043e1:	int3   
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	int3   
   1400043e5:	int3   
   1400043e6:	int3   
   1400043e7:	int3   
   1400043e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400043ed:	push   rdi
   1400043ee:	sub    rsp,0x20
   1400043f2:	mov    rbx,QWORD PTR [rip+0x8c47]        # 0x14000d040
   1400043f9:	lea    rdi,[rip+0x8c40]        # 0x14000d040
   140004400:	cmp    rbx,rdi
   140004403:	je     0x14000442a
   140004405:	jmp    0x14000441e
   140004407:	mov    rcx,QWORD PTR [rbx+0x8]
   14000440b:	test   rcx,rcx
   14000440e:	je     0x14000441b
   140004410:	call   QWORD PTR [rip+0x3f3a]        # 0x140008350
   140004416:	and    QWORD PTR [rbx+0x8],0x0
   14000441b:	mov    rbx,QWORD PTR [rbx]
   14000441e:	test   rbx,rbx
   140004421:	jne    0x140004407
   140004423:	mov    QWORD PTR [rip+0x8c16],rdi        # 0x14000d040
   14000442a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000442f:	add    rsp,0x20
   140004433:	pop    rdi
   140004434:	ret    
   140004435:	int3   
   140004436:	int3   
   140004437:	int3   
   140004438:	int3   
   140004439:	int3   
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	mov    QWORD PTR [rsp+0x8],rbx
   140004445:	mov    QWORD PTR [rsp+0x10],rsi
   14000444a:	push   rdi
   14000444b:	sub    rsp,0x20
   14000444f:	mov    rax,QWORD PTR [rdx]
   140004452:	mov    rsi,rcx
   140004455:	cmp    rax,QWORD PTR [rip+0x48c4]        # 0x140008d20
   14000445c:	jne    0x14000446b
   14000445e:	mov    rax,QWORD PTR [rdx+0x8]
   140004462:	cmp    rax,QWORD PTR [rip+0x48bf]        # 0x140008d28
   140004469:	je     0x140004484
   14000446b:	mov    rax,QWORD PTR [rdx]
   14000446e:	cmp    rax,QWORD PTR [rip+0x489b]        # 0x140008d10
   140004475:	jne    0x1400044a0
   140004477:	mov    rax,QWORD PTR [rdx+0x8]
   14000447b:	cmp    rax,QWORD PTR [rip+0x4896]        # 0x140008d18
   140004482:	jne    0x1400044a0
   140004484:	mov    QWORD PTR [r8],rcx
   140004487:	mov    rax,QWORD PTR [rcx]
   14000448a:	mov    rbx,QWORD PTR [rax+0x8]
   14000448e:	mov    rcx,rbx
   140004491:	call   QWORD PTR [rip+0x3fd9]        # 0x140008470
   140004497:	mov    rcx,rsi
   14000449a:	call   rbx
   14000449c:	xor    edi,edi
   14000449e:	jmp    0x1400044ea
   1400044a0:	mov    rax,QWORD PTR [rdx]
   1400044a3:	cmp    rax,QWORD PTR [rip+0x4ad6]        # 0x140008f80
   1400044aa:	jne    0x1400044e0
   1400044ac:	mov    rax,QWORD PTR [rdx+0x8]
   1400044b0:	cmp    rax,QWORD PTR [rip+0x4ad1]        # 0x140008f88
   1400044b7:	jne    0x1400044e0
   1400044b9:	xor    edi,edi
   1400044bb:	lea    rax,[rcx+0x8]
   1400044bf:	test   rcx,rcx
   1400044c2:	jne    0x1400044c6
   1400044c4:	mov    eax,edi
   1400044c6:	mov    QWORD PTR [r8],rax
   1400044c9:	mov    rax,QWORD PTR [rcx]
   1400044cc:	mov    rbx,QWORD PTR [rax+0x8]
   1400044d0:	mov    rcx,rbx
   1400044d3:	call   QWORD PTR [rip+0x3f97]        # 0x140008470
   1400044d9:	mov    rcx,rsi
   1400044dc:	call   rbx
   1400044de:	jmp    0x1400044ea
   1400044e0:	xor    edi,edi
   1400044e2:	mov    QWORD PTR [r8],rdi
   1400044e5:	mov    edi,0x80004002
   1400044ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044ef:	mov    eax,edi
   1400044f1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400044f6:	add    rsp,0x20
   1400044fa:	pop    rdi
   1400044fb:	ret    
   1400044fc:	int3   
   1400044fd:	int3   
   1400044fe:	int3   
   1400044ff:	int3   
   140004500:	int3   
   140004501:	int3   
   140004502:	int3   
   140004503:	int3   
   140004504:	int3   
   140004505:	int3   
   140004506:	int3   
   140004507:	int3   
   140004508:	int3   
   140004509:	int3   
   14000450a:	int3   
   14000450b:	int3   
   14000450c:	int3   
   14000450d:	int3   
   14000450e:	int3   
   14000450f:	int3   
   140004510:	mov    eax,0x1
   140004515:	lock xadd DWORD PTR [rcx+0x10],eax
   14000451a:	inc    eax
   14000451c:	ret    
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	int3   
   140004521:	int3   
   140004522:	int3   
   140004523:	int3   
   140004524:	int3   
   140004525:	int3   
   140004526:	int3   
   140004527:	int3   
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	mov    QWORD PTR [rsp+0x8],rbx
   140004535:	push   rdi
   140004536:	sub    rsp,0x20
   14000453a:	mov    rbx,rcx
   14000453d:	or     edi,0xffffffff
   140004540:	lock xadd DWORD PTR [rcx+0x10],edi
   140004545:	sub    edi,0x1
   140004548:	jne    0x140004576
   14000454a:	test   rcx,rcx
   14000454d:	je     0x140004576
   14000454f:	lea    rax,[rip+0x45f2]        # 0x140008b48
   140004556:	mov    QWORD PTR [rcx],rax
   140004559:	lea    rax,[rip+0x45c0]        # 0x140008b20
   140004560:	mov    QWORD PTR [rcx+0x8],rax
   140004564:	mov    rcx,QWORD PTR [rcx+0x20]
   140004568:	call   QWORD PTR [rip+0x3ea2]        # 0x140008410
   14000456e:	mov    rcx,rbx
   140004571:	call   0x140005dec
   140004576:	mov    eax,edi
   140004578:	mov    rbx,QWORD PTR [rsp+0x30]
   14000457d:	add    rsp,0x20
   140004581:	pop    rdi
   140004582:	ret    
   140004583:	int3   
   140004584:	int3   
   140004585:	int3   
   140004586:	int3   
   140004587:	int3   
   140004588:	int3   
   140004589:	int3   
   14000458a:	int3   
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	mov    rax,rsp
   140004593:	mov    QWORD PTR [rax+0x8],rbx
   140004597:	mov    QWORD PTR [rax+0x10],rbp
   14000459b:	mov    QWORD PTR [rax+0x18],rsi
   14000459f:	mov    QWORD PTR [rax+0x20],rdi
   1400045a3:	push   r14
   1400045a5:	sub    rsp,0x20
   1400045a9:	mov    rdi,QWORD PTR [rcx+0x18]
   1400045ad:	mov    rsi,r9
   1400045b0:	mov    rbp,r8
   1400045b3:	mov    r14,rdx
   1400045b6:	mov    rax,QWORD PTR [rdi]
   1400045b9:	mov    rbx,QWORD PTR [rax+0x18]
   1400045bd:	mov    rcx,rbx
   1400045c0:	call   QWORD PTR [rip+0x3eaa]        # 0x140008470
   1400045c6:	mov    r9,rsi
   1400045c9:	mov    r8,rbp
   1400045cc:	mov    rdx,r14
   1400045cf:	mov    rcx,rdi
   1400045d2:	mov    rax,rbx
   1400045d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045da:	mov    rbp,QWORD PTR [rsp+0x38]
   1400045df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400045e4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400045e9:	add    rsp,0x20
   1400045ed:	pop    r14
   1400045ef:	rex.W jmp rax
   1400045f2:	int3   
   1400045f3:	int3   
   1400045f4:	int3   
   1400045f5:	int3   
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	int3   
   1400045f9:	int3   
   1400045fa:	int3   
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	mov    QWORD PTR [rsp+0x8],rbx
   140004605:	mov    QWORD PTR [rsp+0x10],rsi
   14000460a:	push   rdi
   14000460b:	sub    rsp,0x20
   14000460f:	mov    rdi,QWORD PTR [rcx+0x18]
   140004613:	mov    esi,edx
   140004615:	mov    rax,QWORD PTR [rdi]
   140004618:	mov    rbx,QWORD PTR [rax+0x20]
   14000461c:	mov    rcx,rbx
   14000461f:	call   QWORD PTR [rip+0x3e4b]        # 0x140008470
   140004625:	mov    edx,esi
   140004627:	mov    rcx,rdi
   14000462a:	mov    rax,rbx
   14000462d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004632:	mov    rsi,QWORD PTR [rsp+0x38]
   140004637:	add    rsp,0x20
   14000463b:	pop    rdi
   14000463c:	rex.W jmp rax
   14000463f:	int3   
   140004640:	int3   
   140004641:	int3   
   140004642:	int3   
   140004643:	int3   
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	mov    QWORD PTR [rsp+0x8],rbx
   140004655:	push   rdi
   140004656:	sub    rsp,0x20
   14000465a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000465e:	mov    rax,QWORD PTR [rdi]
   140004661:	mov    rbx,QWORD PTR [rax+0x20]
   140004665:	mov    rcx,rbx
   140004668:	call   QWORD PTR [rip+0x3e02]        # 0x140008470
   14000466e:	mov    edx,0x1
   140004673:	mov    rcx,rdi
   140004676:	call   rbx
   140004678:	mov    rbx,QWORD PTR [rsp+0x30]
   14000467d:	mov    eax,0x1
   140004682:	add    rsp,0x20
   140004686:	pop    rdi
   140004687:	ret    
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    QWORD PTR [rsp+0x8],rbx
   140004695:	push   rdi
   140004696:	sub    rsp,0x20
   14000469a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000469e:	mov    rax,QWORD PTR [rdi]
   1400046a1:	mov    rbx,QWORD PTR [rax+0x20]
   1400046a5:	mov    rcx,rbx
   1400046a8:	call   QWORD PTR [rip+0x3dc2]        # 0x140008470
   1400046ae:	xor    edx,edx
   1400046b0:	mov    rcx,rdi
   1400046b3:	call   rbx
   1400046b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046ba:	mov    eax,0x1
   1400046bf:	add    rsp,0x20
   1400046c3:	pop    rdi
   1400046c4:	ret    
   1400046c5:	int3   
   1400046c6:	int3   
   1400046c7:	int3   
   1400046c8:	int3   
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	sub    rsp,0x28
   1400046d4:	call   0x140006cec
   1400046d9:	test   al,al
   1400046db:	je     0x1400046f3
   1400046dd:	mov    ecx,DWORD PTR [rip+0x8945]        # 0x14000d028
   1400046e3:	xor    r9d,r9d
   1400046e6:	xor    r8d,r8d
   1400046e9:	lea    edx,[r9+0x12]
   1400046ed:	call   QWORD PTR [rip+0xa92d]        # 0x14000f020
   1400046f3:	add    rsp,0x28
   1400046f7:	ret    
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	int3   
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	mov    QWORD PTR [rsp+0x10],rbx
   140004705:	push   rdi
   140004706:	sub    rsp,0x20
   14000470a:	mov    rdi,rcx
   14000470d:	lea    rdx,[rcx+0x10]
   140004711:	lea    rcx,[rsp+0x30]
   140004716:	call   0x1400032c0
   14000471b:	xor    ebx,ebx
   14000471d:	cmp    DWORD PTR [rdi+0xc],ebx
   140004720:	jne    0x14000472a
   140004722:	mov    ebx,0x1
   140004727:	add    DWORD PTR [rdi+0x8],ebx
   14000472a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000472f:	call   QWORD PTR [rip+0x3a23]        # 0x140008158
   140004735:	mov    eax,ebx
   140004737:	mov    rbx,QWORD PTR [rsp+0x38]
   14000473c:	add    rsp,0x20
   140004740:	pop    rdi
   140004741:	ret    
   140004742:	int3   
   140004743:	int3   
   140004744:	int3   
   140004745:	int3   
   140004746:	int3   
   140004747:	int3   
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	mov    QWORD PTR [rsp+0x8],rbx
   140004755:	push   rdi
   140004756:	sub    rsp,0x20
   14000475a:	lea    rdi,[rcx+0x10]
   14000475e:	mov    rbx,rcx
   140004761:	mov    rcx,rdi
   140004764:	call   QWORD PTR [rip+0x39e6]        # 0x140008150
   14000476a:	sub    DWORD PTR [rbx+0x8],0x1
   14000476e:	mov    rcx,rdi
   140004771:	jne    0x1400047a1
   140004773:	mov    DWORD PTR [rbx+0xc],0x1
   14000477a:	call   QWORD PTR [rip+0x39d8]        # 0x140008158
   140004780:	call   0x140006cec
   140004785:	test   al,al
   140004787:	je     0x1400047a7
   140004789:	mov    ecx,DWORD PTR [rip+0x8899]        # 0x14000d028
   14000478f:	xor    r9d,r9d
   140004792:	xor    r8d,r8d
   140004795:	lea    edx,[r9+0x12]
   140004799:	call   QWORD PTR [rip+0xa881]        # 0x14000f020
   14000479f:	jmp    0x1400047a7
   1400047a1:	call   QWORD PTR [rip+0x39b1]        # 0x140008158
   1400047a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047ac:	add    rsp,0x20
   1400047b0:	pop    rdi
   1400047b1:	ret    
   1400047b2:	int3   
   1400047b3:	int3   
   1400047b4:	int3   
   1400047b5:	int3   
   1400047b6:	int3   
   1400047b7:	int3   
   1400047b8:	sub    rsp,0x58
   1400047bc:	jmp    0x1400047d4
   1400047be:	lea    rcx,[rsp+0x20]
   1400047c3:	call   QWORD PTR [rip+0xa83f]        # 0x14000f008
   1400047c9:	lea    rcx,[rsp+0x20]
   1400047ce:	call   QWORD PTR [rip+0xa83c]        # 0x14000f010
   1400047d4:	xor    r9d,r9d
   1400047d7:	lea    rcx,[rsp+0x20]
   1400047dc:	xor    r8d,r8d
   1400047df:	xor    edx,edx
   1400047e1:	call   QWORD PTR [rip+0xa819]        # 0x14000f000
   1400047e7:	test   eax,eax
   1400047e9:	jne    0x1400047be
   1400047eb:	add    rsp,0x58
   1400047ef:	ret    
   1400047f0:	int3   
   1400047f1:	int3   
   1400047f2:	int3   
   1400047f3:	int3   
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	rex push rbx
   140004802:	sub    rsp,0x50
   140004806:	mov    rax,QWORD PTR [rip+0x87f3]        # 0x14000d000
   14000480d:	xor    rax,rsp
   140004810:	mov    QWORD PTR [rsp+0x40],rax
   140004815:	and    DWORD PTR [rsp+0x2c],0x0
   14000481a:	lea    rdx,[rsp+0x20]
   14000481f:	and    DWORD PTR [rsp+0x34],0x0
   140004824:	mov    ebx,ecx
   140004826:	mov    rcx,QWORD PTR [rip+0x905b]        # 0x14000d888
   14000482d:	and    DWORD PTR [rsp+0x38],0x0
   140004832:	mov    DWORD PTR [rsp+0x20],0x10
   14000483a:	mov    DWORD PTR [rsp+0x24],0x4
   140004842:	mov    DWORD PTR [rsp+0x28],0x1
   14000484a:	call   QWORD PTR [rip+0x3970]        # 0x1400081c0
   140004850:	test   eax,eax
   140004852:	jne    0x1400048b8
   140004854:	call   QWORD PTR [rip+0x3826]        # 0x140008080
   14000485a:	mov    ebx,eax
   14000485c:	call   QWORD PTR [rip+0x3ba6]        # 0x140008408
   140004862:	mov    rcx,rax
   140004865:	or     edx,0xffffffff
   140004868:	call   QWORD PTR [rip+0x3b92]        # 0x140008400
   14000486e:	mov    rcx,QWORD PTR [rip+0x87cb]        # 0x14000d040
   140004875:	lea    rax,[rip+0x87c4]        # 0x14000d040
   14000487c:	cmp    rcx,rax
   14000487f:	je     0x1400048a5
   140004881:	test   BYTE PTR [rcx+0x1c],0x1
   140004885:	je     0x1400048a5
   140004887:	cmp    BYTE PTR [rcx+0x19],0x2
   14000488b:	jb     0x1400048a5
   14000488d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004891:	lea    r8,[rip+0x4658]        # 0x140008ef0
   140004898:	mov    edx,0xa
   14000489d:	mov    r9d,ebx
   1400048a0:	call   0x140003314
   1400048a5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400048aa:	xor    rcx,rsp
   1400048ad:	call   0x1400063e0
   1400048b2:	add    rsp,0x50
   1400048b6:	pop    rbx
   1400048b7:	ret    
   1400048b8:	cmp    ebx,0x1
   1400048bb:	jne    0x1400048a5
   1400048bd:	mov    rcx,QWORD PTR [rip+0x8fc4]        # 0x14000d888
   1400048c4:	lea    rdx,[rsp+0x20]
   1400048c9:	mov    DWORD PTR [rsp+0x24],ebx
   1400048cd:	call   QWORD PTR [rip+0x38ed]        # 0x1400081c0
   1400048d3:	mov    rcx,QWORD PTR [rip+0x8fa6]        # 0x14000d880
   1400048da:	call   QWORD PTR [rip+0x3880]        # 0x140008160
   1400048e0:	xor    ecx,ecx
   1400048e2:	call   QWORD PTR [rip+0x3808]        # 0x1400080f0
   1400048e8:	int3   
   1400048e9:	int3   
   1400048ea:	int3   
   1400048eb:	int3   
   1400048ec:	int3   
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	rex push rbx
   1400048f2:	sub    rsp,0x50
   1400048f6:	mov    rax,QWORD PTR [rip+0x8703]        # 0x14000d000
   1400048fd:	xor    rax,rsp
   140004900:	mov    QWORD PTR [rsp+0x40],rax
   140004905:	xor    r9d,r9d
   140004908:	xor    r8d,r8d
   14000490b:	xor    edx,edx
   14000490d:	xor    ecx,ecx
   14000490f:	call   QWORD PTR [rip+0x3853]        # 0x140008168
   140004915:	mov    QWORD PTR [rip+0x8f64],rax        # 0x14000d880
   14000491c:	test   rax,rax
   14000491f:	jne    0x140004983
   140004921:	call   QWORD PTR [rip+0x3759]        # 0x140008080
   140004927:	mov    ebx,eax
   140004929:	call   QWORD PTR [rip+0x3ad9]        # 0x140008408
   14000492f:	mov    rcx,rax
   140004932:	or     edx,0xffffffff
   140004935:	call   QWORD PTR [rip+0x3ac5]        # 0x140008400
   14000493b:	mov    rcx,QWORD PTR [rip+0x86fe]        # 0x14000d040
   140004942:	lea    rdx,[rip+0x86f7]        # 0x14000d040
   140004949:	cmp    rcx,rdx
   14000494c:	je     0x140004ae4
   140004952:	test   BYTE PTR [rcx+0x1c],0x1
   140004956:	je     0x140004ae4
   14000495c:	cmp    BYTE PTR [rcx+0x19],0x2
   140004960:	jb     0x140004ae4
   140004966:	mov    edx,0xb
   14000496b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000496f:	lea    r8,[rip+0x457a]        # 0x140008ef0
   140004976:	mov    r9d,ebx
   140004979:	call   0x140003314
   14000497e:	jmp    0x140004ae4
   140004983:	mov    rcx,QWORD PTR [rip+0x8ede]        # 0x14000d868
   14000498a:	lea    rdx,[rip+0xfffffffffffffe6f]        # 0x140004800
   140004991:	call   QWORD PTR [rip+0x3861]        # 0x1400081f8
   140004997:	mov    QWORD PTR [rip+0x8eea],rax        # 0x14000d888
   14000499e:	test   rax,rax
   1400049a1:	jne    0x1400049f2
   1400049a3:	call   QWORD PTR [rip+0x36d7]        # 0x140008080
   1400049a9:	mov    ebx,eax
   1400049ab:	call   QWORD PTR [rip+0x3a57]        # 0x140008408
   1400049b1:	mov    rcx,rax
   1400049b4:	or     edx,0xffffffff
   1400049b7:	call   QWORD PTR [rip+0x3a43]        # 0x140008400
   1400049bd:	mov    rcx,QWORD PTR [rip+0x867c]        # 0x14000d040
   1400049c4:	lea    rdx,[rip+0x8675]        # 0x14000d040
   1400049cb:	cmp    rcx,rdx
   1400049ce:	je     0x140004ae4
   1400049d4:	test   BYTE PTR [rcx+0x1c],0x1
   1400049d8:	je     0x140004ae4
   1400049de:	cmp    BYTE PTR [rcx+0x19],0x2
   1400049e2:	jb     0x140004ae4
   1400049e8:	mov    edx,0xc
   1400049ed:	jmp    0x14000496b
   1400049f2:	and    DWORD PTR [rsp+0x2c],0x0
   1400049f7:	lea    rdx,[rsp+0x20]
   1400049fc:	and    DWORD PTR [rsp+0x34],0x0
   140004a01:	mov    rcx,rax
   140004a04:	mov    DWORD PTR [rsp+0x20],0x10
   140004a0c:	mov    DWORD PTR [rsp+0x24],0x2
   140004a14:	mov    DWORD PTR [rsp+0x28],0x1
   140004a1c:	mov    DWORD PTR [rsp+0x38],0x2710
   140004a24:	call   QWORD PTR [rip+0x3796]        # 0x1400081c0
   140004a2a:	test   eax,eax
   140004a2c:	jne    0x140004a75
   140004a2e:	call   QWORD PTR [rip+0x364c]        # 0x140008080
   140004a34:	mov    ebx,eax
   140004a36:	call   QWORD PTR [rip+0x39cc]        # 0x140008408
   140004a3c:	mov    rcx,rax
   140004a3f:	or     edx,0xffffffff
   140004a42:	call   QWORD PTR [rip+0x39b8]        # 0x140008400
   140004a48:	mov    rcx,QWORD PTR [rip+0x85f1]        # 0x14000d040
   140004a4f:	lea    rdx,[rip+0x85ea]        # 0x14000d040
   140004a56:	cmp    rcx,rdx
   140004a59:	je     0x140004ae4
   140004a5f:	test   BYTE PTR [rcx+0x1c],0x1
   140004a63:	je     0x140004ae4
   140004a65:	cmp    BYTE PTR [rcx+0x19],0x2
   140004a69:	jb     0x140004ae4
   140004a6b:	mov    edx,0xd
   140004a70:	jmp    0x14000496b
   140004a75:	mov    rcx,QWORD PTR [rip+0x8e0c]        # 0x14000d888
   140004a7c:	lea    rdx,[rsp+0x20]
   140004a81:	mov    DWORD PTR [rsp+0x24],0x4
   140004a89:	call   QWORD PTR [rip+0x3731]        # 0x1400081c0
   140004a8f:	test   eax,eax
   140004a91:	jne    0x140004ad6
   140004a93:	call   QWORD PTR [rip+0x35e7]        # 0x140008080
   140004a99:	mov    ebx,eax
   140004a9b:	call   QWORD PTR [rip+0x3967]        # 0x140008408
   140004aa1:	mov    rcx,rax
   140004aa4:	or     edx,0xffffffff
   140004aa7:	call   QWORD PTR [rip+0x3953]        # 0x140008400
   140004aad:	mov    rcx,QWORD PTR [rip+0x858c]        # 0x14000d040
   140004ab4:	lea    rdx,[rip+0x8585]        # 0x14000d040
   140004abb:	cmp    rcx,rdx
   140004abe:	je     0x140004ae4
   140004ac0:	test   BYTE PTR [rcx+0x1c],0x1
   140004ac4:	je     0x140004ae4
   140004ac6:	cmp    BYTE PTR [rcx+0x19],0x2
   140004aca:	jb     0x140004ae4
   140004acc:	mov    edx,0xe
   140004ad1:	jmp    0x14000496b
   140004ad6:	call   0x140006cec
   140004adb:	test   al,al
   140004add:	je     0x140004ae4
   140004adf:	call   0x1400047b8
   140004ae4:	mov    rcx,QWORD PTR [rsp+0x40]
   140004ae9:	xor    rcx,rsp
   140004aec:	call   0x1400063e0
   140004af1:	add    rsp,0x50
   140004af5:	pop    rbx
   140004af6:	ret    
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	rex push rbx
   140004b02:	sub    rsp,0x880
   140004b09:	mov    rax,QWORD PTR [rip+0x84f0]        # 0x14000d000
   140004b10:	xor    rax,rsp
   140004b13:	mov    QWORD PTR [rsp+0x870],rax
   140004b1b:	xor    edx,edx
   140004b1d:	xor    ecx,ecx
   140004b1f:	mov    r8d,0xf003f
   140004b25:	call   QWORD PTR [rip+0x36b5]        # 0x1400081e0
   140004b2b:	mov    rbx,rax
   140004b2e:	test   rax,rax
   140004b31:	jne    0x140004b8b
   140004b33:	call   QWORD PTR [rip+0x3547]        # 0x140008080
   140004b39:	mov    ebx,eax
   140004b3b:	call   QWORD PTR [rip+0x38c7]        # 0x140008408
   140004b41:	mov    rcx,rax
   140004b44:	or     edx,0xffffffff
   140004b47:	call   QWORD PTR [rip+0x38b3]        # 0x140008400
   140004b4d:	mov    rcx,QWORD PTR [rip+0x84ec]        # 0x14000d040
   140004b54:	lea    rdx,[rip+0x84e5]        # 0x14000d040
   140004b5b:	cmp    rcx,rdx
   140004b5e:	je     0x140004b84
   140004b60:	test   BYTE PTR [rcx+0x1c],0x1
   140004b64:	je     0x140004b84
   140004b66:	cmp    BYTE PTR [rcx+0x19],0x2
   140004b6a:	jb     0x140004b84
   140004b6c:	mov    edx,0x10
   140004b71:	mov    rcx,QWORD PTR [rcx+0x10]
   140004b75:	lea    r8,[rip+0x4374]        # 0x140008ef0
   140004b7c:	mov    r9d,ebx
   140004b7f:	call   0x140003314
   140004b84:	xor    eax,eax
   140004b86:	jmp    0x140004c5d
   140004b8b:	mov    r8d,0x3ff
   140004b91:	lea    rdx,[rsp+0x70]
   140004b96:	xor    ecx,ecx
   140004b98:	call   QWORD PTR [rip+0x3512]        # 0x1400080b0
   140004b9e:	mov    eax,DWORD PTR [rip+0x8cd4]        # 0x14000d878
   140004ba4:	mov    r9d,0xf01ff
   140004baa:	mov    r8,QWORD PTR [rip+0x8cbf]        # 0x14000d870
   140004bb1:	neg    eax
   140004bb3:	mov    rdx,QWORD PTR [rip+0x8cae]        # 0x14000d868
   140004bba:	lea    rax,[rsp+0x70]
   140004bbf:	sbb    ecx,ecx
   140004bc1:	and    QWORD PTR [rsp+0x60],0x0
   140004bc7:	and    QWORD PTR [rsp+0x58],0x0
   140004bcd:	add    ecx,0x3
   140004bd0:	and    QWORD PTR [rsp+0x50],0x0
   140004bd6:	and    QWORD PTR [rsp+0x48],0x0
   140004bdc:	and    QWORD PTR [rsp+0x40],0x0
   140004be2:	mov    QWORD PTR [rsp+0x38],rax
   140004be7:	mov    DWORD PTR [rsp+0x30],0x1
   140004bef:	mov    DWORD PTR [rsp+0x28],ecx
   140004bf3:	mov    rcx,rbx
   140004bf6:	mov    DWORD PTR [rsp+0x20],0x10
   140004bfe:	call   QWORD PTR [rip+0x35e4]        # 0x1400081e8
   140004c04:	test   rax,rax
   140004c07:	jne    0x140004c58
   140004c09:	call   QWORD PTR [rip+0x3471]        # 0x140008080
   140004c0f:	mov    ebx,eax
   140004c11:	call   QWORD PTR [rip+0x37f1]        # 0x140008408
   140004c17:	mov    rcx,rax
   140004c1a:	or     edx,0xffffffff
   140004c1d:	call   QWORD PTR [rip+0x37dd]        # 0x140008400
   140004c23:	mov    rcx,QWORD PTR [rip+0x8416]        # 0x14000d040
   140004c2a:	lea    rdx,[rip+0x840f]        # 0x14000d040
   140004c31:	cmp    rcx,rdx
   140004c34:	je     0x140004b84
   140004c3a:	test   BYTE PTR [rcx+0x1c],0x1
   140004c3e:	je     0x140004b84
   140004c44:	cmp    BYTE PTR [rcx+0x19],0x2
   140004c48:	jb     0x140004b84
   140004c4e:	mov    edx,0x11
   140004c53:	jmp    0x140004b71
   140004c58:	mov    eax,0x1
   140004c5d:	mov    rcx,QWORD PTR [rsp+0x870]
   140004c65:	xor    rcx,rsp
   140004c68:	call   0x1400063e0
   140004c6d:	add    rsp,0x880
   140004c74:	pop    rbx
   140004c75:	ret    
   140004c76:	int3   
   140004c77:	int3   
   140004c78:	int3   
   140004c79:	int3   
   140004c7a:	int3   
   140004c7b:	int3   
   140004c7c:	rex push rbx
   140004c7e:	sub    rsp,0x20
   140004c82:	xor    edx,edx
   140004c84:	xor    ecx,ecx
   140004c86:	mov    r8d,0xf003f
   140004c8c:	call   QWORD PTR [rip+0x354e]        # 0x1400081e0
   140004c92:	test   rax,rax
   140004c95:	jne    0x140004cef
   140004c97:	call   QWORD PTR [rip+0x33e3]        # 0x140008080
   140004c9d:	mov    ebx,eax
   140004c9f:	call   QWORD PTR [rip+0x3763]        # 0x140008408
   140004ca5:	mov    rcx,rax
   140004ca8:	or     edx,0xffffffff
   140004cab:	call   QWORD PTR [rip+0x374f]        # 0x140008400
   140004cb1:	mov    rcx,QWORD PTR [rip+0x8388]        # 0x14000d040
   140004cb8:	lea    rdx,[rip+0x8381]        # 0x14000d040
   140004cbf:	cmp    rcx,rdx
   140004cc2:	je     0x140004ce8
   140004cc4:	test   BYTE PTR [rcx+0x1c],0x1
   140004cc8:	je     0x140004ce8
   140004cca:	cmp    BYTE PTR [rcx+0x19],0x2
   140004cce:	jb     0x140004ce8
   140004cd0:	mov    edx,0x12
   140004cd5:	mov    rcx,QWORD PTR [rcx+0x10]
   140004cd9:	lea    r8,[rip+0x4210]        # 0x140008ef0
   140004ce0:	mov    r9d,ebx
   140004ce3:	call   0x140003314
   140004ce8:	xor    eax,eax
   140004cea:	jmp    0x140004dab
   140004cef:	mov    rdx,QWORD PTR [rip+0x8b72]        # 0x14000d868
   140004cf6:	mov    r8d,0xf01ff
   140004cfc:	mov    rcx,rax
   140004cff:	call   QWORD PTR [rip+0x34cb]        # 0x1400081d0
   140004d05:	test   rax,rax
   140004d08:	jne    0x140004d4a
   140004d0a:	call   QWORD PTR [rip+0x3370]        # 0x140008080
   140004d10:	mov    ebx,eax
   140004d12:	call   QWORD PTR [rip+0x36f0]        # 0x140008408
   140004d18:	mov    rcx,rax
   140004d1b:	or     edx,0xffffffff
   140004d1e:	call   QWORD PTR [rip+0x36dc]        # 0x140008400
   140004d24:	mov    rcx,QWORD PTR [rip+0x8315]        # 0x14000d040
   140004d2b:	lea    rdx,[rip+0x830e]        # 0x14000d040
   140004d32:	cmp    rcx,rdx
   140004d35:	je     0x140004ce8
   140004d37:	test   BYTE PTR [rcx+0x1c],0x1
   140004d3b:	je     0x140004ce8
   140004d3d:	cmp    BYTE PTR [rcx+0x19],0x2
   140004d41:	jb     0x140004ce8
   140004d43:	mov    edx,0x13
   140004d48:	jmp    0x140004cd5
   140004d4a:	mov    rcx,rax
   140004d4d:	call   QWORD PTR [rip+0x3485]        # 0x1400081d8
   140004d53:	test   eax,eax
   140004d55:	jne    0x140004da6
   140004d57:	call   QWORD PTR [rip+0x3323]        # 0x140008080
   140004d5d:	mov    ebx,eax
   140004d5f:	call   QWORD PTR [rip+0x36a3]        # 0x140008408
   140004d65:	mov    rcx,rax
   140004d68:	or     edx,0xffffffff
   140004d6b:	call   QWORD PTR [rip+0x368f]        # 0x140008400
   140004d71:	mov    rcx,QWORD PTR [rip+0x82c8]        # 0x14000d040
   140004d78:	lea    rdx,[rip+0x82c1]        # 0x14000d040
   140004d7f:	cmp    rcx,rdx
   140004d82:	je     0x140004ce8
   140004d88:	test   BYTE PTR [rcx+0x1c],0x1
   140004d8c:	je     0x140004ce8
   140004d92:	cmp    BYTE PTR [rcx+0x19],0x2
   140004d96:	jb     0x140004ce8
   140004d9c:	mov    edx,0x14
   140004da1:	jmp    0x140004cd5
   140004da6:	mov    eax,0x1
   140004dab:	add    rsp,0x20
   140004daf:	pop    rbx
   140004db0:	ret    
   140004db1:	int3   
   140004db2:	int3   
   140004db3:	int3   
   140004db4:	int3   
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	xor    ecx,ecx
   140004dc2:	rex.W jmp QWORD PTR [rip+0xa24f]        # 0x14000f018
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    rax,rsp
   140004dd3:	push   rbp
   140004dd4:	push   rsi
   140004dd5:	push   rdi
   140004dd6:	push   r12
   140004dd8:	push   r13
   140004dda:	push   r14
   140004ddc:	push   r15
   140004dde:	mov    rbp,rsp
   140004de1:	sub    rsp,0x80
   140004de8:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140004df0:	mov    QWORD PTR [rax+0x20],rbx
   140004df4:	xor    r12d,r12d
   140004df7:	mov    QWORD PTR [rip+0x8a02],r12        # 0x14000d800
   140004dfe:	lea    rax,[rip+0x8a13]        # 0x14000d818
   140004e05:	mov    QWORD PTR [rip+0x89e4],rax        # 0x14000d7f0
   140004e0c:	lea    r13d,[r12+0x1]
   140004e11:	mov    QWORD PTR [rip+0x89f0],r13        # 0x14000d808
   140004e18:	mov    QWORD PTR [rip+0x8a09],r12        # 0x14000d828
   140004e1f:	mov    QWORD PTR [rip+0x89f2],r12        # 0x14000d818
   140004e26:	mov    QWORD PTR [rip+0x8a03],r13        # 0x14000d830
   140004e2d:	lea    rax,[rip+0x40ec]        # 0x140008f20
   140004e34:	mov    QWORD PTR [rip+0x8a05],rax        # 0x14000d840
   140004e3b:	lea    rax,[rip+0x40ce]        # 0x140008f10
   140004e42:	mov    QWORD PTR [rip+0x89ff],rax        # 0x14000d848
   140004e49:	lea    rbx,[rip+0x89a0]        # 0x14000d7f0
   140004e50:	mov    QWORD PTR [rip+0x81e9],rbx        # 0x14000d040
   140004e57:	lea    rdi,[rip+0x89e2]        # 0x14000d840
   140004e5e:	mov    r8,QWORD PTR [rdi]
   140004e61:	lea    rdi,[rdi+0x8]
   140004e65:	mov    QWORD PTR [rbp-0x38],r8
   140004e69:	mov    QWORD PTR [rbp-0x30],r12
   140004e6d:	mov    QWORD PTR [rbx+0x20],r8
   140004e71:	lea    rax,[rbx+0x8]
   140004e75:	mov    QWORD PTR [rsp+0x38],rax
   140004e7a:	mov    QWORD PTR [rsp+0x30],r12
   140004e7f:	mov    QWORD PTR [rsp+0x28],r12
   140004e84:	lea    rax,[rbp-0x38]
   140004e88:	mov    QWORD PTR [rsp+0x20],rax
   140004e8d:	mov    r9d,r13d
   140004e90:	mov    rdx,rbx
   140004e93:	lea    rcx,[rip+0xfffffffffffff4c6]        # 0x140004360
   140004e9a:	call   QWORD PTR [rip+0x3488]        # 0x140008328
   140004ea0:	mov    rbx,QWORD PTR [rbx]
   140004ea3:	test   rbx,rbx
   140004ea6:	jne    0x140004e5e
   140004ea8:	call   QWORD PTR [rip+0x3222]        # 0x1400080d0
   140004eae:	mov    rdi,rax
   140004eb1:	or     r14,0xffffffffffffffff
   140004eb5:	mov    rbx,r14
   140004eb8:	inc    rbx
   140004ebb:	cmp    WORD PTR [rax+rbx*2],r12w
   140004ec0:	jne    0x140004eb8
   140004ec2:	add    rbx,r13
   140004ec5:	mov    r15d,0x2
   140004ecb:	mov    eax,r15d
   140004ece:	mul    rbx
   140004ed1:	cmovo  rax,r14
   140004ed5:	mov    rcx,rax
   140004ed8:	call   0x140006c5c
   140004edd:	mov    rsi,rax
   140004ee0:	test   rax,rax
   140004ee3:	jne    0x140004f2a
   140004ee5:	call   QWORD PTR [rip+0x351d]        # 0x140008408
   140004eeb:	mov    rcx,rax
   140004eee:	mov    edx,r14d
   140004ef1:	call   QWORD PTR [rip+0x3509]        # 0x140008400
   140004ef7:	lea    rbx,[rip+0x8142]        # 0x14000d040
   140004efe:	mov    rcx,QWORD PTR [rip+0x813b]        # 0x14000d040
   140004f05:	cmp    rcx,rbx
   140004f08:	je     0x140005761
   140004f0e:	test   BYTE PTR [rcx+0x1c],r13b
   140004f12:	je     0x140005761
   140004f18:	cmp    BYTE PTR [rcx+0x19],r15b
   140004f1c:	jb     0x140005761
   140004f22:	lea    edx,[rsi+0x15]
   140004f25:	jmp    0x140005751
   140004f2a:	mov    r8,rdi
   140004f2d:	mov    rdx,rbx
   140004f30:	mov    rcx,rax
   140004f33:	call   0x1400058f0
   140004f38:	mov    edi,eax
   140004f3a:	test   eax,eax
   140004f3c:	jns    0x140004f90
   140004f3e:	call   QWORD PTR [rip+0x34c4]        # 0x140008408
   140004f44:	mov    rcx,rax
   140004f47:	mov    edx,edi
   140004f49:	call   QWORD PTR [rip+0x34b1]        # 0x140008400
   140004f4f:	lea    rbx,[rip+0x80ea]        # 0x14000d040
   140004f56:	mov    rcx,QWORD PTR [rip+0x80e3]        # 0x14000d040
   140004f5d:	cmp    rcx,rbx
   140004f60:	je     0x140005761
   140004f66:	test   BYTE PTR [rcx+0x1c],r13b
   140004f6a:	je     0x140005761
   140004f70:	cmp    BYTE PTR [rcx+0x19],r15b
   140004f74:	jb     0x140005761
   140004f7a:	mov    edx,0x16
   140004f7f:	mov    r9d,edi
   140004f82:	mov    rcx,QWORD PTR [rcx+0x10]
   140004f86:	call   0x140004318
   140004f8b:	jmp    0x140005761
   140004f90:	mov    rbx,rsi
   140004f93:	mov    edx,0x19
   140004f98:	lea    r8d,[rdx+0x7]
   140004f9c:	cmp    WORD PTR [rsi],r12w
   140004fa0:	je     0x140005001
   140004fa2:	lea    edi,[rdx+0x66]
   140004fa5:	movzx  ecx,WORD PTR [rbx]
   140004fa8:	cmp    cx,di
   140004fab:	ja     0x140004fbb
   140004fad:	lea    eax,[rcx-0x61]
   140004fb0:	cmp    ax,dx
   140004fb3:	ja     0x140004ff5
   140004fb5:	sub    cx,r8w
   140004fb9:	jmp    0x140004ff5
   140004fbb:	mov    WORD PTR [rbp+0x40],cx
   140004fbf:	mov    DWORD PTR [rsp+0x28],r13d
   140004fc4:	lea    rax,[rbp+0x48]
   140004fc8:	mov    QWORD PTR [rsp+0x20],rax
   140004fcd:	mov    r9d,r13d
   140004fd0:	lea    r8,[rbp+0x40]
   140004fd4:	mov    edx,0x200
   140004fd9:	mov    ecx,edi
   140004fdb:	call   QWORD PTR [rip+0x30df]        # 0x1400080c0
   140004fe1:	movzx  ecx,WORD PTR [rbp+0x48]
   140004fe5:	test   eax,eax
   140004fe7:	cmove  cx,WORD PTR [rbp+0x40]
   140004fec:	mov    edx,0x19
   140004ff1:	lea    r8d,[rdx+0x7]
   140004ff5:	mov    WORD PTR [rbx],cx
   140004ff8:	add    rbx,r15
   140004ffb:	cmp    WORD PTR [rbx],r12w
   140004fff:	jne    0x140004fa5
   140005001:	mov    rdi,QWORD PTR [rip+0x8890]        # 0x14000d898
   140005008:	mov    rax,QWORD PTR [rdi]
   14000500b:	mov    rbx,QWORD PTR [rax]
   14000500e:	mov    rcx,rbx
   140005011:	call   QWORD PTR [rip+0x3459]        # 0x140008470
   140005017:	mov    rcx,rdi
   14000501a:	call   rbx
   14000501c:	mov    edi,eax
   14000501e:	test   eax,eax
   140005020:	jns    0x140005069
   140005022:	call   QWORD PTR [rip+0x33e0]        # 0x140008408
   140005028:	mov    rcx,rax
   14000502b:	mov    edx,r14d
   14000502e:	call   QWORD PTR [rip+0x33cc]        # 0x140008400
   140005034:	lea    rbx,[rip+0x8005]        # 0x14000d040
   14000503b:	mov    rcx,QWORD PTR [rip+0x7ffe]        # 0x14000d040
   140005042:	cmp    rcx,rbx
   140005045:	je     0x140005761
   14000504b:	test   BYTE PTR [rcx+0x1c],r13b
   14000504f:	je     0x140005761
   140005055:	cmp    BYTE PTR [rcx+0x19],r15b
   140005059:	jb     0x140005761
   14000505f:	mov    edx,0x17
   140005064:	jmp    0x1400054e5
   140005069:	lea    rdx,[rip+0x3de0]        # 0x140008e50
   140005070:	mov    rcx,rsi
   140005073:	call   QWORD PTR [rip+0x3297]        # 0x140008310
   140005079:	mov    ecx,r12d
   14000507c:	test   rax,rax
   14000507f:	setne  cl
   140005082:	test   ecx,ecx
   140005084:	jne    0x140005639
   14000508a:	lea    rdx,[rip+0x3dd7]        # 0x140008e68
   140005091:	mov    rcx,rsi
   140005094:	call   QWORD PTR [rip+0x3276]        # 0x140008310
   14000509a:	mov    ecx,r12d
   14000509d:	test   rax,rax
   1400050a0:	setne  cl
   1400050a3:	test   ecx,ecx
   1400050a5:	jne    0x140005639
   1400050ab:	lea    rdx,[rip+0x3dce]        # 0x140008e80
   1400050b2:	mov    rcx,rsi
   1400050b5:	call   QWORD PTR [rip+0x3255]        # 0x140008310
   1400050bb:	mov    ecx,r12d
   1400050be:	test   rax,rax
   1400050c1:	setne  cl
   1400050c4:	test   ecx,ecx
   1400050c6:	jne    0x1400054fd
   1400050cc:	lea    rdx,[rip+0x3dcd]        # 0x140008ea0
   1400050d3:	mov    rcx,rsi
   1400050d6:	call   QWORD PTR [rip+0x3234]        # 0x140008310
   1400050dc:	mov    ecx,r12d
   1400050df:	test   rax,rax
   1400050e2:	setne  cl
   1400050e5:	test   ecx,ecx
   1400050e7:	jne    0x1400054fd
   1400050ed:	lea    rdx,[rip+0x3dcc]        # 0x140008ec0
   1400050f4:	mov    rcx,rsi
   1400050f7:	call   QWORD PTR [rip+0x3213]        # 0x140008310
   1400050fd:	mov    ecx,r12d
   140005100:	test   rax,rax
   140005103:	setne  cl
   140005106:	test   ecx,ecx
   140005108:	jne    0x140005125
   14000510a:	cmp    DWORD PTR [rip+0x874f],r12d        # 0x14000d860
   140005111:	jne    0x140005125
   140005113:	lea    rcx,[rip+0x3dbe]        # 0x140008ed8
   14000511a:	call   QWORD PTR [rip+0x31e8]        # 0x140008308
   140005120:	jmp    0x140005761
   140005125:	mov    rdi,QWORD PTR [rip+0x876c]        # 0x14000d898
   14000512c:	mov    rax,QWORD PTR [rdi]
   14000512f:	mov    rbx,QWORD PTR [rax+0x18]
   140005133:	mov    rcx,rbx
   140005136:	call   QWORD PTR [rip+0x3334]        # 0x140008470
   14000513c:	mov    rcx,rdi
   14000513f:	call   rbx
   140005141:	mov    r14d,eax
   140005144:	test   eax,eax
   140005146:	jns    0x140005192
   140005148:	call   QWORD PTR [rip+0x32ba]        # 0x140008408
   14000514e:	mov    rcx,rax
   140005151:	or     edx,0xffffffff
   140005154:	call   QWORD PTR [rip+0x32a6]        # 0x140008400
   14000515a:	lea    rbx,[rip+0x7edf]        # 0x14000d040
   140005161:	mov    rcx,QWORD PTR [rip+0x7ed8]        # 0x14000d040
   140005168:	cmp    rcx,rbx
   14000516b:	je     0x140005761
   140005171:	test   BYTE PTR [rcx+0x1c],r13b
   140005175:	je     0x140005761
   14000517b:	cmp    BYTE PTR [rcx+0x19],r15b
   14000517f:	jb     0x140005761
   140005185:	mov    edx,0x1e
   14000518a:	mov    r9d,r14d
   14000518d:	jmp    0x1400054e8
   140005192:	mov    rsi,QWORD PTR [rip+0x7e97]        # 0x14000d030
   140005199:	lea    rdi,[rip+0x7e90]        # 0x14000d030
   1400051a0:	cmp    rsi,rdi
   1400051a3:	je     0x1400052d9
   1400051a9:	mov    ecx,0x28
   1400051ae:	call   0x140005d6c
   1400051b3:	mov    rbx,rax
   1400051b6:	mov    QWORD PTR [rbp+0x50],rax
   1400051ba:	test   rax,rax
   1400051bd:	je     0x1400051ff
   1400051bf:	mov    rax,QWORD PTR [rsi+0x18]
   1400051c3:	lea    rcx,[rip+0x397e]        # 0x140008b48
   1400051ca:	mov    QWORD PTR [rbx],rcx
   1400051cd:	lea    rcx,[rip+0x394c]        # 0x140008b20
   1400051d4:	mov    QWORD PTR [rbx+0x8],rcx
   1400051d8:	mov    DWORD PTR [rbx+0x10],r12d
   1400051dc:	lea    r8,[rbx+0x18]
   1400051e0:	mov    QWORD PTR [r8],r12
   1400051e3:	mov    QWORD PTR [rbx+0x20],rax
   1400051e7:	lock add DWORD PTR [rax+0x8],r13d
   1400051ec:	lea    rdx,[rip+0x3b1d]        # 0x140008d10
   1400051f3:	mov    rcx,QWORD PTR [rbx+0x20]
   1400051f7:	call   QWORD PTR [rip+0x321b]        # 0x140008418
   1400051fd:	jmp    0x140005202
   1400051ff:	mov    rbx,r12
   140005202:	test   rbx,rbx
   140005205:	je     0x140005292
   14000520b:	lea    rax,[rsi+0x30]
   14000520f:	mov    QWORD PTR [rsp+0x20],rax
   140005214:	mov    r9d,r13d
   140005217:	mov    r8d,0x15
   14000521d:	mov    rdx,rbx
   140005220:	mov    rcx,QWORD PTR [rsi+0x10]
   140005224:	call   QWORD PTR [rip+0x2e0e]        # 0x140008038
   14000522a:	mov    r15d,eax
   14000522d:	test   eax,eax
   14000522f:	js     0x140005248
   140005231:	mov    rsi,QWORD PTR [rsi]
   140005234:	cmp    rsi,rdi
   140005237:	jne    0x1400051a9
   14000523d:	mov    r15d,0x2
   140005243:	jmp    0x1400052d9
   140005248:	call   QWORD PTR [rip+0x31ba]        # 0x140008408
   14000524e:	mov    rcx,rax
   140005251:	or     edx,0xffffffff
   140005254:	call   QWORD PTR [rip+0x31a6]        # 0x140008400
   14000525a:	lea    rbx,[rip+0x7ddf]        # 0x14000d040
   140005261:	mov    rcx,QWORD PTR [rip+0x7dd8]        # 0x14000d040
   140005268:	cmp    rcx,rbx
   14000526b:	je     0x140005761
   140005271:	test   BYTE PTR [rcx+0x1c],r13b
   140005275:	je     0x140005761
   14000527b:	cmp    BYTE PTR [rcx+0x19],0x2
   14000527f:	jb     0x140005761
   140005285:	mov    edx,0x20
   14000528a:	mov    r9d,r15d
   14000528d:	jmp    0x1400054e8
   140005292:	call   QWORD PTR [rip+0x3170]        # 0x140008408
   140005298:	mov    rcx,rax
   14000529b:	or     edx,0xffffffff
   14000529e:	call   QWORD PTR [rip+0x315c]        # 0x140008400
   1400052a4:	lea    rbx,[rip+0x7d95]        # 0x14000d040
   1400052ab:	mov    rcx,QWORD PTR [rip+0x7d8e]        # 0x14000d040
   1400052b2:	cmp    rcx,rbx
   1400052b5:	je     0x140005761
   1400052bb:	test   BYTE PTR [rcx+0x1c],r13b
   1400052bf:	je     0x140005761
   1400052c5:	cmp    BYTE PTR [rcx+0x19],0x2
   1400052c9:	jb     0x140005761
   1400052cf:	mov    edx,0x1f
   1400052d4:	jmp    0x140005751
   1400052d9:	lea    rbx,[rip+0x7d60]        # 0x14000d040
   1400052e0:	cmp    DWORD PTR [rip+0x8579],r12d        # 0x14000d860
   1400052e7:	je     0x1400053ae
   1400052ed:	mov    rax,QWORD PTR [rip+0x8574]        # 0x14000d868
   1400052f4:	mov    QWORD PTR [rbp-0x28],rax
   1400052f8:	lea    rax,[rip+0xfffffffffffff5f1]        # 0x1400048f0
   1400052ff:	mov    QWORD PTR [rbp-0x20],rax
   140005303:	mov    QWORD PTR [rbp-0x18],r12
   140005307:	mov    QWORD PTR [rbp-0x10],r12
   14000530b:	lea    rcx,[rbp-0x28]
   14000530f:	call   QWORD PTR [rip+0x2ea3]        # 0x1400081b8
   140005315:	test   eax,eax
   140005317:	jne    0x1400053c8
   14000531d:	call   QWORD PTR [rip+0x2d5d]        # 0x140008080
   140005323:	mov    esi,eax
   140005325:	call   QWORD PTR [rip+0x30dd]        # 0x140008408
   14000532b:	mov    rcx,rax
   14000532e:	or     edx,0xffffffff
   140005331:	call   QWORD PTR [rip+0x30c9]        # 0x140008400
   140005337:	mov    rcx,QWORD PTR [rip+0x7d02]        # 0x14000d040
   14000533e:	cmp    rcx,rbx
   140005341:	je     0x140005367
   140005343:	test   BYTE PTR [rcx+0x1c],r13b
   140005347:	je     0x140005367
   140005349:	cmp    BYTE PTR [rcx+0x19],r15b
   14000534d:	jb     0x140005367
   14000534f:	mov    edx,0xf
   140005354:	mov    r9d,esi
   140005357:	lea    r8,[rip+0x3b92]        # 0x140008ef0
   14000535e:	mov    rcx,QWORD PTR [rcx+0x10]
   140005362:	call   0x140003314
   140005367:	call   QWORD PTR [rip+0x309b]        # 0x140008408
   14000536d:	mov    rcx,rax
   140005370:	or     edx,0xffffffff
   140005373:	call   QWORD PTR [rip+0x3087]        # 0x140008400
   140005379:	mov    rcx,QWORD PTR [rip+0x7cc0]        # 0x14000d040
   140005380:	cmp    rcx,rbx
   140005383:	je     0x1400053c8
   140005385:	test   BYTE PTR [rcx+0x1c],r13b
   140005389:	je     0x1400053c8
   14000538b:	cmp    BYTE PTR [rcx+0x19],r15b
   14000538f:	jb     0x1400053c8
   140005391:	mov    edx,0x21
   140005396:	mov    r9d,0x80041001
   14000539c:	lea    r8,[rip+0x3b4d]        # 0x140008ef0
   1400053a3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400053a7:	call   0x140003314
   1400053ac:	jmp    0x1400053c8
   1400053ae:	call   QWORD PTR [rip+0x2d44]        # 0x1400080f8
   1400053b4:	mov    DWORD PTR [rip+0x7c6e],eax        # 0x14000d028
   1400053ba:	call   0x140006cec
   1400053bf:	test   al,al
   1400053c1:	je     0x1400053c8
   1400053c3:	call   0x1400047b8
   1400053c8:	mov    rsi,QWORD PTR [rip+0x7c61]        # 0x14000d030
   1400053cf:	jmp    0x140005429
   1400053d1:	mov    ecx,DWORD PTR [rsi+0x30]
   1400053d4:	call   QWORD PTR [rip+0x2c66]        # 0x140008040
   1400053da:	mov    r15d,eax
   1400053dd:	test   eax,eax
   1400053df:	jns    0x140005426
   1400053e1:	call   QWORD PTR [rip+0x3021]        # 0x140008408
   1400053e7:	mov    rcx,rax
   1400053ea:	or     edx,0xffffffff
   1400053ed:	call   QWORD PTR [rip+0x300d]        # 0x140008400
   1400053f3:	mov    rcx,QWORD PTR [rip+0x7c46]        # 0x14000d040
   1400053fa:	cmp    rcx,rbx
   1400053fd:	je     0x140005423
   1400053ff:	test   BYTE PTR [rcx+0x1c],r13b
   140005403:	je     0x140005423
   140005405:	cmp    BYTE PTR [rcx+0x19],0x2
   140005409:	jb     0x140005423
   14000540b:	mov    edx,0x22
   140005410:	mov    r9d,r15d
   140005413:	lea    r8,[rip+0x3ad6]        # 0x140008ef0
   14000541a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000541e:	call   0x140003314
   140005423:	mov    r14d,r15d
   140005426:	mov    rsi,QWORD PTR [rsi]
   140005429:	cmp    rsi,rdi
   14000542c:	jne    0x1400053d1
   14000542e:	test   r14d,r14d
   140005431:	jns    0x140005476
   140005433:	call   QWORD PTR [rip+0x2fcf]        # 0x140008408
   140005439:	mov    rcx,rax
   14000543c:	mov    edx,r14d
   14000543f:	call   QWORD PTR [rip+0x2fbb]        # 0x140008400
   140005445:	mov    rcx,QWORD PTR [rip+0x7bf4]        # 0x14000d040
   14000544c:	cmp    rcx,rbx
   14000544f:	je     0x140005761
   140005455:	test   BYTE PTR [rcx+0x1c],r13b
   140005459:	je     0x140005761
   14000545f:	cmp    BYTE PTR [rcx+0x19],0x2
   140005463:	jb     0x140005761
   140005469:	mov    edx,0x23
   14000546e:	mov    r9d,r14d
   140005471:	jmp    0x140004f82
   140005476:	call   0x140006cec
   14000547b:	test   al,al
   14000547d:	je     0x14000549b
   14000547f:	lea    r9,[rip+0xfffffffffffff93a]        # 0x140004dc0
   140005486:	xor    edx,edx
   140005488:	xor    ecx,ecx
   14000548a:	mov    r8d,0x3e8
   140005490:	call   QWORD PTR [rip+0x9b9a]        # 0x14000f030
   140005496:	call   0x1400047b8
   14000549b:	call   0x14000421c
   1400054a0:	mov    edi,eax
   1400054a2:	test   eax,eax
   1400054a4:	jns    0x140005761
   1400054aa:	call   QWORD PTR [rip+0x2f58]        # 0x140008408
   1400054b0:	mov    rcx,rax
   1400054b3:	or     edx,0xffffffff
   1400054b6:	call   QWORD PTR [rip+0x2f44]        # 0x140008400
   1400054bc:	mov    rcx,QWORD PTR [rip+0x7b7d]        # 0x14000d040
   1400054c3:	cmp    rcx,rbx
   1400054c6:	je     0x140005761
   1400054cc:	test   BYTE PTR [rcx+0x1c],r13b
   1400054d0:	je     0x140005761
   1400054d6:	cmp    BYTE PTR [rcx+0x19],0x2
   1400054da:	jb     0x140005761
   1400054e0:	mov    edx,0x24
   1400054e5:	mov    r9d,edi
   1400054e8:	lea    r8,[rip+0x3a01]        # 0x140008ef0
   1400054ef:	mov    rcx,QWORD PTR [rcx+0x10]
   1400054f3:	call   0x140003314
   1400054f8:	jmp    0x140005761
   1400054fd:	mov    rdi,QWORD PTR [rip+0x8394]        # 0x14000d898
   140005504:	mov    rax,QWORD PTR [rdi]
   140005507:	mov    rbx,QWORD PTR [rax+0x28]
   14000550b:	mov    rcx,rbx
   14000550e:	call   QWORD PTR [rip+0x2f5c]        # 0x140008470
   140005514:	mov    rcx,rdi
   140005517:	call   rbx
   140005519:	mov    edi,eax
   14000551b:	lea    rbx,[rip+0x7b1e]        # 0x14000d040
   140005522:	test   eax,eax
   140005524:	jns    0x140005568
   140005526:	call   QWORD PTR [rip+0x2edc]        # 0x140008408
   14000552c:	mov    rcx,rax
   14000552f:	mov    edx,r14d
   140005532:	call   QWORD PTR [rip+0x2ec8]        # 0x140008400
   140005538:	mov    rcx,QWORD PTR [rip+0x7b01]        # 0x14000d040
   14000553f:	cmp    rcx,rbx
   140005542:	je     0x140005568
   140005544:	test   BYTE PTR [rcx+0x1c],r13b
   140005548:	je     0x140005568
   14000554a:	cmp    BYTE PTR [rcx+0x19],r15b
   14000554e:	jb     0x140005568
   140005550:	mov    edx,0x1b
   140005555:	mov    r9d,edi
   140005558:	lea    r8,[rip+0x3991]        # 0x140008ef0
   14000555f:	mov    rcx,QWORD PTR [rcx+0x10]
   140005563:	call   0x140003314
   140005568:	mov    rsi,QWORD PTR [rip+0x7ac1]        # 0x14000d030
   14000556f:	lea    rdi,[rip+0x7aba]        # 0x14000d030
   140005576:	cmp    rsi,rdi
   140005579:	je     0x1400055d9
   14000557b:	lea    rcx,[rsi-0x8]
   14000557f:	call   0x140003d20
   140005584:	mov    r14d,eax
   140005587:	test   eax,eax
   140005589:	jns    0x1400055cd
   14000558b:	call   QWORD PTR [rip+0x2e77]        # 0x140008408
   140005591:	mov    rcx,rax
   140005594:	or     edx,0xffffffff
   140005597:	call   QWORD PTR [rip+0x2e63]        # 0x140008400
   14000559d:	mov    rcx,QWORD PTR [rip+0x7a9c]        # 0x14000d040
   1400055a4:	cmp    rcx,rbx
   1400055a7:	je     0x1400055cd
   1400055a9:	test   BYTE PTR [rcx+0x1c],r13b
   1400055ad:	je     0x1400055cd
   1400055af:	cmp    BYTE PTR [rcx+0x19],r15b
   1400055b3:	jb     0x1400055cd
   1400055b5:	mov    edx,0x1c
   1400055ba:	mov    r9d,r14d
   1400055bd:	lea    r8,[rip+0x392c]        # 0x140008ef0
   1400055c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400055c8:	call   0x140003314
   1400055cd:	mov    rsi,QWORD PTR [rsi]
   1400055d0:	cmp    rsi,rdi
   1400055d3:	jne    0x14000557b
   1400055d5:	or     r14,0xffffffffffffffff
   1400055d9:	cmp    DWORD PTR [rip+0x8280],r12d        # 0x14000d860
   1400055e0:	je     0x140005761
   1400055e6:	call   0x140004c7c
   1400055eb:	test   eax,eax
   1400055ed:	jne    0x140005761
   1400055f3:	call   QWORD PTR [rip+0x2e0f]        # 0x140008408
   1400055f9:	mov    rcx,rax
   1400055fc:	mov    edx,r14d
   1400055ff:	call   QWORD PTR [rip+0x2dfb]        # 0x140008400
   140005605:	mov    rcx,QWORD PTR [rip+0x7a34]        # 0x14000d040
   14000560c:	cmp    rcx,rbx
   14000560f:	je     0x140005761
   140005615:	test   BYTE PTR [rcx+0x1c],r13b
   140005619:	je     0x140005761
   14000561f:	cmp    BYTE PTR [rcx+0x19],r15b
   140005623:	jb     0x140005761
   140005629:	mov    edx,0x1d
   14000562e:	mov    r9d,0x80041001
   140005634:	jmp    0x1400054e8
   140005639:	mov    rdi,QWORD PTR [rip+0x8258]        # 0x14000d898
   140005640:	mov    rax,QWORD PTR [rdi]
   140005643:	mov    rbx,QWORD PTR [rax+0x20]
   140005647:	mov    rcx,rbx
   14000564a:	call   QWORD PTR [rip+0x2e20]        # 0x140008470
   140005650:	mov    rcx,rdi
   140005653:	call   rbx
   140005655:	mov    edi,eax
   140005657:	test   eax,eax
   140005659:	jns    0x1400056a2
   14000565b:	call   QWORD PTR [rip+0x2da7]        # 0x140008408
   140005661:	mov    rcx,rax
   140005664:	mov    edx,r14d
   140005667:	call   QWORD PTR [rip+0x2d93]        # 0x140008400
   14000566d:	lea    rbx,[rip+0x79cc]        # 0x14000d040
   140005674:	mov    rcx,QWORD PTR [rip+0x79c5]        # 0x14000d040
   14000567b:	cmp    rcx,rbx
   14000567e:	je     0x140005761
   140005684:	test   BYTE PTR [rcx+0x1c],r13b
   140005688:	je     0x140005761
   14000568e:	cmp    BYTE PTR [rcx+0x19],r15b
   140005692:	jb     0x140005761
   140005698:	mov    edx,0x18
   14000569d:	jmp    0x1400054e5
   1400056a2:	mov    rbx,QWORD PTR [rip+0x7987]        # 0x14000d030
   1400056a9:	lea    rdi,[rip+0x7980]        # 0x14000d030
   1400056b0:	jmp    0x1400056c4
   1400056b2:	lea    rcx,[rbx-0x8]
   1400056b6:	call   0x1400037c0
   1400056bb:	mov    esi,eax
   1400056bd:	test   eax,eax
   1400056bf:	js     0x1400056cb
   1400056c1:	mov    rbx,QWORD PTR [rbx]
   1400056c4:	cmp    rbx,rdi
   1400056c7:	jne    0x1400056b2
   1400056c9:	jmp    0x140005709
   1400056cb:	call   QWORD PTR [rip+0x2d37]        # 0x140008408
   1400056d1:	mov    rcx,rax
   1400056d4:	mov    edx,r14d
   1400056d7:	call   QWORD PTR [rip+0x2d23]        # 0x140008400
   1400056dd:	lea    rbx,[rip+0x795c]        # 0x14000d040
   1400056e4:	mov    rcx,QWORD PTR [rip+0x7955]        # 0x14000d040
   1400056eb:	cmp    rcx,rbx
   1400056ee:	je     0x140005761
   1400056f0:	test   BYTE PTR [rcx+0x1c],r13b
   1400056f4:	je     0x140005761
   1400056f6:	cmp    BYTE PTR [rcx+0x19],r15b
   1400056fa:	jb     0x140005761
   1400056fc:	mov    edx,0x19
   140005701:	mov    r9d,esi
   140005704:	jmp    0x1400054e8
   140005709:	cmp    DWORD PTR [rip+0x8150],r12d        # 0x14000d860
   140005710:	je     0x140005761
   140005712:	call   0x140004b00
   140005717:	test   eax,eax
   140005719:	jne    0x140005761
   14000571b:	call   QWORD PTR [rip+0x2ce7]        # 0x140008408
   140005721:	mov    rcx,rax
   140005724:	mov    edx,r14d
   140005727:	call   QWORD PTR [rip+0x2cd3]        # 0x140008400
   14000572d:	lea    rbx,[rip+0x790c]        # 0x14000d040
   140005734:	mov    rcx,QWORD PTR [rip+0x7905]        # 0x14000d040
   14000573b:	cmp    rcx,rbx
   14000573e:	je     0x140005761
   140005740:	test   BYTE PTR [rcx+0x1c],r13b
   140005744:	je     0x140005761
   140005746:	cmp    BYTE PTR [rcx+0x19],r15b
   14000574a:	jb     0x140005761
   14000574c:	mov    edx,0x1a
   140005751:	lea    r8,[rip+0x3798]        # 0x140008ef0
   140005758:	mov    rcx,QWORD PTR [rcx+0x10]
   14000575c:	call   0x1400032f0
   140005761:	call   0x1400043e8
   140005766:	xor    eax,eax
   140005768:	mov    rbx,QWORD PTR [rsp+0xd8]
   140005770:	add    rsp,0x80
   140005777:	pop    r15
   140005779:	pop    r14
   14000577b:	pop    r13
   14000577d:	pop    r12
   14000577f:	pop    rdi
   140005780:	pop    rsi
   140005781:	pop    rbp
   140005782:	ret    
   140005783:	int3   
   140005784:	int3   
   140005785:	int3   
   140005786:	int3   
   140005787:	int3   
   140005788:	int3   
   140005789:	int3   
   14000578a:	int3   
   14000578b:	int3   
   14000578c:	mov    QWORD PTR [rsp+0x8],rbx
   140005791:	push   rdi
   140005792:	sub    rsp,0x20
   140005796:	cmp    BYTE PTR [rcx],0x0
   140005799:	mov    rdi,rcx
   14000579c:	jne    0x1400057b1
   14000579e:	mov    rbx,QWORD PTR [rcx+0x8]
   1400057a2:	mov    rcx,rbx
   1400057a5:	call   QWORD PTR [rip+0x2cc5]        # 0x140008470
   1400057ab:	mov    rcx,QWORD PTR [rdi+0x10]
   1400057af:	call   rbx
   1400057b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057b6:	add    rsp,0x20
   1400057ba:	pop    rdi
   1400057bb:	ret    
   1400057bc:	int3   
   1400057bd:	int3   
   1400057be:	int3   
   1400057bf:	int3   
   1400057c0:	int3   
   1400057c1:	int3   
   1400057c2:	int3   
   1400057c3:	int3   
   1400057c4:	rex push rbx
   1400057c6:	sub    rsp,0x20
   1400057ca:	mov    rbx,QWORD PTR [rcx]
   1400057cd:	test   rbx,rbx
   1400057d0:	je     0x1400057f7
   1400057d2:	mov    rcx,QWORD PTR [rbx+0x28]
   1400057d6:	lea    rax,[rip+0x3393]        # 0x140008b70
   1400057dd:	mov    QWORD PTR [rbx],rax
   1400057e0:	call   0x140005dec
   1400057e5:	mov    rcx,QWORD PTR [rbx+0x20]
   1400057e9:	call   QWORD PTR [rip+0x2c21]        # 0x140008410
   1400057ef:	mov    rcx,rbx
   1400057f2:	call   0x140005dec
   1400057f7:	add    rsp,0x20
   1400057fb:	pop    rbx
   1400057fc:	ret    
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	int3   
   140005801:	int3   
   140005802:	int3   
   140005803:	int3   
   140005804:	sub    rsp,0x28
   140005808:	mov    r9,r8
   14000580b:	call   0x140005820
   140005810:	mov    rax,rcx
   140005813:	add    rsp,0x28
   140005817:	ret    
   140005818:	int3   
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	lea    rax,[rip+0x1b9]        # 0x1400059e0
   140005827:	mov    BYTE PTR [rcx],0x0
   14000582a:	mov    QWORD PTR [rcx+0x8],rax
   14000582e:	mov    rax,rcx
   140005831:	mov    QWORD PTR [rcx+0x10],r9
   140005835:	ret    
   140005836:	int3   
   140005837:	int3   
   140005838:	int3   
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	int3   
   14000583f:	int3   
   140005840:	sub    rcx,0x8
   140005844:	jmp    0x140004530
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	sub    rcx,0x8
   140005854:	jmp    0x140004510
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	sub    rcx,0x8
   140005864:	jmp    0x140004440
   140005869:	int3   
   14000586a:	int3   
   14000586b:	int3   
   14000586c:	int3   
   14000586d:	int3   
   14000586e:	int3   
   14000586f:	int3   
   140005870:	mov    QWORD PTR [rsp+0x18],r8
   140005875:	mov    QWORD PTR [rsp+0x20],r9
   14000587a:	push   rbx
   14000587b:	push   rbp
   14000587c:	push   rsi
   14000587d:	push   rdi
   14000587e:	sub    rsp,0x28
   140005882:	xor    ebp,ebp
   140005884:	lea    rax,[rdx-0x1]
   140005888:	cmp    rax,0x7ffffffe
   14000588e:	mov    rsi,rcx
   140005891:	mov    edi,ebp
   140005893:	mov    ecx,0x80070057
   140005898:	cmova  edi,ecx
   14000589b:	test   edi,edi
   14000589d:	js     0x1400058d4
   14000589f:	lea    rbx,[rdx-0x1]
   1400058a3:	mov    rcx,rsi
   1400058a6:	mov    rdx,rbx
   1400058a9:	lea    r9,[rsp+0x68]
   1400058ae:	mov    edi,ebp
   1400058b0:	call   QWORD PTR [rip+0x2a62]        # 0x140008318
   1400058b6:	test   eax,eax
   1400058b8:	js     0x1400058c9
   1400058ba:	cdqe   
   1400058bc:	cmp    rax,rbx
   1400058bf:	ja     0x1400058c9
   1400058c1:	jne    0x1400058dc
   1400058c3:	mov    WORD PTR [rsi+rbx*2],bp
   1400058c7:	jmp    0x1400058dc
   1400058c9:	mov    WORD PTR [rsi+rbx*2],bp
   1400058cd:	mov    edi,0x8007007a
   1400058d2:	jmp    0x1400058dc
   1400058d4:	test   rdx,rdx
   1400058d7:	je     0x1400058dc
   1400058d9:	mov    WORD PTR [rsi],bp
   1400058dc:	mov    eax,edi
   1400058de:	add    rsp,0x28
   1400058e2:	pop    rdi
   1400058e3:	pop    rsi
   1400058e4:	pop    rbp
   1400058e5:	pop    rbx
   1400058e6:	ret    
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	int3   
   1400058ed:	int3   
   1400058ee:	int3   
   1400058ef:	int3   
   1400058f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058f5:	xor    ebx,ebx
   1400058f7:	lea    rax,[rdx-0x1]
   1400058fb:	mov    r10d,0x7ffffffe
   140005901:	mov    r9d,ebx
   140005904:	cmp    rax,r10
   140005907:	mov    r11d,0x80070057
   14000590d:	cmova  r9d,r11d
   140005911:	test   r9d,r9d
   140005914:	js     0x140005955
   140005916:	mov    r9d,ebx
   140005919:	test   rdx,rdx
   14000591c:	je     0x140005949
   14000591e:	sub    r10,rdx
   140005921:	sub    r8,rcx
   140005924:	lea    rax,[r10+rdx*1]
   140005928:	test   rax,rax
   14000592b:	je     0x140005944
   14000592d:	movzx  eax,WORD PTR [r8+rcx*1]
   140005932:	test   ax,ax
   140005935:	je     0x140005944
   140005937:	mov    WORD PTR [rcx],ax
   14000593a:	add    rcx,0x2
   14000593e:	sub    rdx,0x1
   140005942:	jne    0x140005924
   140005944:	test   rdx,rdx
   140005947:	jne    0x14000595a
   140005949:	sub    rcx,0x2
   14000594d:	mov    r9d,0x8007007a
   140005953:	jmp    0x14000595a
   140005955:	test   rdx,rdx
   140005958:	je     0x14000595d
   14000595a:	mov    WORD PTR [rcx],bx
   14000595d:	mov    rbx,QWORD PTR [rsp+0x8]
   140005962:	mov    eax,r9d
   140005965:	ret    
   140005966:	int3   
   140005967:	int3   
   140005968:	int3   
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	rex push rbx
   14000596e:	sub    rsp,0x20
   140005972:	xor    ebx,ebx
   140005974:	cmp    QWORD PTR [rip+0x7edd],rbx        # 0x14000d858
   14000597b:	jne    0x1400059c3
   14000597d:	xor    edx,edx
   14000597f:	lea    r8d,[rbx+0x8]
   140005983:	lea    rcx,[rip+0x3606]        # 0x140008f90
   14000598a:	call   QWORD PTR [rip+0x2708]        # 0x140008098
   140005990:	mov    QWORD PTR [rip+0x7ec1],rax        # 0x14000d858
   140005997:	test   rax,rax
   14000599a:	jne    0x1400059c3
   14000599c:	xor    edx,edx
   14000599e:	lea    r8d,[rbx+0x8]
   1400059a2:	lea    rcx,[rip+0x363f]        # 0x140008fe8
   1400059a9:	call   QWORD PTR [rip+0x26e9]        # 0x140008098
   1400059af:	mov    QWORD PTR [rip+0x7ea2],rax        # 0x14000d858
   1400059b6:	test   rax,rax
   1400059b9:	jne    0x1400059c3
   1400059bb:	call   QWORD PTR [rip+0x26bf]        # 0x140008080
   1400059c1:	mov    ebx,eax
   1400059c3:	mov    eax,ebx
   1400059c5:	add    rsp,0x20
   1400059c9:	pop    rbx
   1400059ca:	ret    
   1400059cb:	int3   
   1400059cc:	int3   
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	int3   
   1400059d1:	int3   
   1400059d2:	int3   
   1400059d3:	int3   
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400059e5:	push   rdi
   1400059e6:	sub    rsp,0x20
   1400059ea:	mov    rbx,QWORD PTR [rip+0x7ebf]        # 0x14000d8b0
   1400059f1:	mov    rdi,rcx
   1400059f4:	test   rbx,rbx
   1400059f7:	jne    0x140005a2d
   1400059f9:	call   0x14000596c
   1400059fe:	test   eax,eax
   140005a00:	jne    0x140005a3b
   140005a02:	mov    rcx,QWORD PTR [rip+0x7e4f]        # 0x14000d858
   140005a09:	lea    rdx,[rip+0x35f8]        # 0x140009008
   140005a10:	call   QWORD PTR [rip+0x2692]        # 0x1400080a8
   140005a16:	mov    QWORD PTR [rip+0x7e93],rax        # 0x14000d8b0
   140005a1d:	mov    rbx,rax
   140005a20:	test   rax,rax
   140005a23:	jne    0x140005a2d
   140005a25:	call   QWORD PTR [rip+0x2655]        # 0x140008080
   140005a2b:	jmp    0x140005a3b
   140005a2d:	mov    rcx,rbx
   140005a30:	call   QWORD PTR [rip+0x2a3a]        # 0x140008470
   140005a36:	mov    rcx,rdi
   140005a39:	call   rbx
   140005a3b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a40:	add    rsp,0x20
   140005a44:	pop    rdi
   140005a45:	ret    
   140005a46:	int3   
   140005a47:	int3   
   140005a48:	int3   
   140005a49:	int3   
   140005a4a:	int3   
   140005a4b:	int3   
   140005a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140005a51:	mov    QWORD PTR [rsp+0x10],rsi
   140005a56:	push   rdi
   140005a57:	sub    rsp,0x50
   140005a5b:	mov    rbx,QWORD PTR [rip+0x7e46]        # 0x14000d8a8
   140005a62:	mov    rdi,rdx
   140005a65:	mov    rsi,rcx
   140005a68:	test   rbx,rbx
   140005a6b:	jne    0x140005aa1
   140005a6d:	call   0x14000596c
   140005a72:	test   eax,eax
   140005a74:	jne    0x140005ade
   140005a76:	mov    rcx,QWORD PTR [rip+0x7ddb]        # 0x14000d858
   140005a7d:	lea    rdx,[rip+0x3594]        # 0x140009018
   140005a84:	call   QWORD PTR [rip+0x261e]        # 0x1400080a8
   140005a8a:	mov    QWORD PTR [rip+0x7e17],rax        # 0x14000d8a8
   140005a91:	mov    rbx,rax
   140005a94:	test   rax,rax
   140005a97:	jne    0x140005aa1
   140005a99:	call   QWORD PTR [rip+0x25e1]        # 0x140008080
   140005a9f:	jmp    0x140005ade
   140005aa1:	mov    rcx,rbx
   140005aa4:	call   QWORD PTR [rip+0x29c6]        # 0x140008470
   140005aaa:	and    QWORD PTR [rsp+0x40],0x0
   140005ab0:	xor    r9d,r9d
   140005ab3:	mov    rax,QWORD PTR [rsp+0x98]
   140005abb:	xor    r8d,r8d
   140005abe:	mov    QWORD PTR [rsp+0x38],rax
   140005ac3:	mov    rdx,rdi
   140005ac6:	and    QWORD PTR [rsp+0x30],0x0
   140005acc:	mov    rcx,rsi
   140005acf:	mov    DWORD PTR [rsp+0x28],0x2000000
   140005ad7:	and    DWORD PTR [rsp+0x20],0x0
   140005adc:	call   rbx
   140005ade:	mov    rbx,QWORD PTR [rsp+0x60]
   140005ae3:	mov    rsi,QWORD PTR [rsp+0x68]
   140005ae8:	add    rsp,0x50
   140005aec:	pop    rdi
   140005aed:	ret    
   140005aee:	int3   
   140005aef:	int3   
   140005af0:	int3   
   140005af1:	int3   
   140005af2:	int3   
   140005af3:	int3   
   140005af4:	mov    QWORD PTR [rsp+0x8],rbx
   140005af9:	mov    QWORD PTR [rsp+0x10],rbp
   140005afe:	mov    QWORD PTR [rsp+0x18],rsi
   140005b03:	push   rdi
   140005b04:	sub    rsp,0x20
   140005b08:	mov    rbx,QWORD PTR [rip+0x7d41]        # 0x14000d850
   140005b0f:	mov    rsi,rdx
   140005b12:	mov    rbp,rcx
   140005b15:	test   rbx,rbx
   140005b18:	jne    0x140005ba4
   140005b1e:	mov    rdi,QWORD PTR [rip+0x7d9b]        # 0x14000d8c0
   140005b25:	test   rdi,rdi
   140005b28:	jne    0x140005b91
   140005b2a:	call   0x14000596c
   140005b2f:	test   eax,eax
   140005b31:	jne    0x140005bbb
   140005b37:	mov    rcx,QWORD PTR [rip+0x7d1a]        # 0x14000d858
   140005b3e:	lea    rdx,[rip+0x34e3]        # 0x140009028
   140005b45:	call   QWORD PTR [rip+0x255d]        # 0x1400080a8
   140005b4b:	mov    QWORD PTR [rip+0x7cfe],rax        # 0x14000d850
   140005b52:	mov    rbx,rax
   140005b55:	test   rax,rax
   140005b58:	jne    0x140005ba4
   140005b5a:	mov    rcx,QWORD PTR [rip+0x7cf7]        # 0x14000d858
   140005b61:	lea    rdx,[rip+0x34d0]        # 0x140009038
   140005b68:	call   QWORD PTR [rip+0x253a]        # 0x1400080a8
   140005b6e:	mov    rbx,QWORD PTR [rip+0x7cdb]        # 0x14000d850
   140005b75:	mov    rdi,rax
   140005b78:	mov    QWORD PTR [rip+0x7d41],rax        # 0x14000d8c0
   140005b7f:	test   rbx,rbx
   140005b82:	jne    0x140005ba4
   140005b84:	test   rax,rax
   140005b87:	jne    0x140005b91
   140005b89:	call   QWORD PTR [rip+0x24f1]        # 0x140008080
   140005b8f:	jmp    0x140005bbb
   140005b91:	mov    rcx,rdi
   140005b94:	call   QWORD PTR [rip+0x28d6]        # 0x140008470
   140005b9a:	mov    rdx,rsi
   140005b9d:	mov    rcx,rbp
   140005ba0:	call   rdi
   140005ba2:	jmp    0x140005bbb
   140005ba4:	mov    rcx,rbx
   140005ba7:	call   QWORD PTR [rip+0x28c3]        # 0x140008470
   140005bad:	xor    r9d,r9d
   140005bb0:	xor    r8d,r8d
   140005bb3:	mov    rdx,rsi
   140005bb6:	mov    rcx,rbp
   140005bb9:	call   rbx
   140005bbb:	mov    rbx,QWORD PTR [rsp+0x30]
   140005bc0:	mov    rbp,QWORD PTR [rsp+0x38]
   140005bc5:	mov    rsi,QWORD PTR [rsp+0x40]
   140005bca:	add    rsp,0x20
   140005bce:	pop    rdi
   140005bcf:	ret    
   140005bd0:	int3   
   140005bd1:	int3   
   140005bd2:	int3   
   140005bd3:	int3   
   140005bd4:	int3   
   140005bd5:	int3   
   140005bd6:	int3   
   140005bd7:	int3   
   140005bd8:	mov    QWORD PTR [rsp+0x8],rbx
   140005bdd:	push   rdi
   140005bde:	sub    rsp,0x30
   140005be2:	mov    rbx,QWORD PTR [rip+0x7ccf]        # 0x14000d8b8
   140005be9:	mov    rdi,rdx
   140005bec:	test   rbx,rbx
   140005bef:	jne    0x140005c25
   140005bf1:	call   0x14000596c
   140005bf6:	test   eax,eax
   140005bf8:	jne    0x140005c4d
   140005bfa:	mov    rcx,QWORD PTR [rip+0x7c57]        # 0x14000d858
   140005c01:	lea    rdx,[rip+0x3440]        # 0x140009048
   140005c08:	call   QWORD PTR [rip+0x249a]        # 0x1400080a8
   140005c0e:	mov    QWORD PTR [rip+0x7ca3],rax        # 0x14000d8b8
   140005c15:	mov    rbx,rax
   140005c18:	test   rax,rax
   140005c1b:	jne    0x140005c25
   140005c1d:	call   QWORD PTR [rip+0x245d]        # 0x140008080
   140005c23:	jmp    0x140005c4d
   140005c25:	mov    rcx,rbx
   140005c28:	call   QWORD PTR [rip+0x2842]        # 0x140008470
   140005c2e:	mov    rax,QWORD PTR [rsp+0x60]
   140005c33:	mov    r9d,0x2000000
   140005c39:	xor    r8d,r8d
   140005c3c:	mov    QWORD PTR [rsp+0x20],rax
   140005c41:	mov    rdx,rdi
   140005c44:	mov    rcx,0xffffffff80000002
   140005c4b:	call   rbx
   140005c4d:	mov    rbx,QWORD PTR [rsp+0x40]
   140005c52:	add    rsp,0x30
   140005c56:	pop    rdi
   140005c57:	ret    
   140005c58:	int3   
   140005c59:	int3   
   140005c5a:	int3   
   140005c5b:	int3   
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	mov    QWORD PTR [rsp+0x8],rbx
   140005c65:	mov    QWORD PTR [rsp+0x10],rsi
   140005c6a:	push   rdi
   140005c6b:	sub    rsp,0x30
   140005c6f:	mov    rbx,QWORD PTR [rip+0x7c52]        # 0x14000d8c8
   140005c76:	mov    rdi,rdx
   140005c79:	mov    rsi,rcx
   140005c7c:	test   rbx,rbx
   140005c7f:	jne    0x140005cb5
   140005c81:	call   0x14000596c
   140005c86:	test   eax,eax
   140005c88:	jne    0x140005ce1
   140005c8a:	mov    rcx,QWORD PTR [rip+0x7bc7]        # 0x14000d858
   140005c91:	lea    rdx,[rip+0x33c0]        # 0x140009058
   140005c98:	call   QWORD PTR [rip+0x240a]        # 0x1400080a8
   140005c9e:	mov    QWORD PTR [rip+0x7c23],rax        # 0x14000d8c8
   140005ca5:	mov    rbx,rax
   140005ca8:	test   rax,rax
   140005cab:	jne    0x140005cb5
   140005cad:	call   QWORD PTR [rip+0x23cd]        # 0x140008080
   140005cb3:	jmp    0x140005ce1
   140005cb5:	mov    rcx,rbx
   140005cb8:	call   QWORD PTR [rip+0x27b2]        # 0x140008470
   140005cbe:	mov    eax,DWORD PTR [rsp+0x68]
   140005cc2:	mov    r9d,0x1
   140005cc8:	mov    DWORD PTR [rsp+0x28],eax
   140005ccc:	xor    r8d,r8d
   140005ccf:	mov    rax,QWORD PTR [rsp+0x60]
   140005cd4:	mov    rdx,rdi
   140005cd7:	mov    rcx,rsi
   140005cda:	mov    QWORD PTR [rsp+0x20],rax
   140005cdf:	call   rbx
   140005ce1:	mov    rbx,QWORD PTR [rsp+0x40]
   140005ce6:	mov    rsi,QWORD PTR [rsp+0x48]
   140005ceb:	add    rsp,0x30
   140005cef:	pop    rdi
   140005cf0:	ret    
   140005cf1:	int3   
   140005cf2:	int3   
   140005cf3:	int3   
   140005cf4:	int3   
   140005cf5:	int3   
   140005cf6:	int3   
   140005cf7:	int3   
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	sub    rsp,0x38
   140005d04:	and    DWORD PTR [rsp+0x28],0x0
   140005d09:	mov    r9,QWORD PTR [rip+0x2358]        # 0x140008068
   140005d10:	mov    r8,QWORD PTR [rip+0x3351]        # 0x140009068
   140005d17:	mov    QWORD PTR [rsp+0x20],rdx
   140005d1c:	mov    rdx,rcx
   140005d1f:	lea    rcx,[rip+0xffffffffffffa2da]        # 0x140000000
   140005d26:	call   QWORD PTR [rip+0x2334]        # 0x140008060
   140005d2c:	add    rsp,0x38
   140005d30:	ret    
   140005d31:	int3   
   140005d32:	int3   
   140005d33:	int3   
   140005d34:	int3   
   140005d35:	int3   
   140005d36:	int3   
   140005d37:	int3   
   140005d38:	rex push rbx
   140005d3a:	sub    rsp,0x20
   140005d3e:	mov    r8d,0x1
   140005d44:	lea    rdx,[rip+0x72d5]        # 0x14000d020
   140005d4b:	mov    rbx,rcx
   140005d4e:	call   0x14000654e
   140005d53:	lea    rax,[rip+0x2d86]        # 0x140008ae0
   140005d5a:	mov    QWORD PTR [rbx],rax
   140005d5d:	mov    rax,rbx
   140005d60:	add    rsp,0x20
   140005d64:	pop    rbx
   140005d65:	ret    
   140005d66:	int3   
   140005d67:	int3   
   140005d68:	int3   
   140005d69:	int3   
   140005d6a:	int3   
   140005d6b:	int3   
   140005d6c:	rex push rbx
   140005d6e:	sub    rsp,0x40
   140005d72:	mov    rbx,rcx
   140005d75:	jmp    0x140005d86
   140005d77:	mov    rcx,rbx
   140005d7a:	call   0x14000655a
   140005d7f:	test   eax,eax
   140005d81:	je     0x140005d97
   140005d83:	mov    rcx,rbx
   140005d86:	call   QWORD PTR [rip+0x24cc]        # 0x140008258
   140005d8c:	test   rax,rax
   140005d8f:	je     0x140005d77
   140005d91:	add    rsp,0x40
   140005d95:	pop    rbx
   140005d96:	ret    
   140005d97:	mov    eax,DWORD PTR [rip+0x744b]        # 0x14000d1e8
   140005d9d:	test   al,0x1
   140005d9f:	jne    0x140005dc2
   140005da1:	or     eax,0x1
   140005da4:	lea    rcx,[rip+0x7425]        # 0x14000d1d0
   140005dab:	mov    DWORD PTR [rip+0x7437],eax        # 0x14000d1e8
   140005db1:	call   0x140005d38
   140005db6:	lea    rcx,[rip+0x1843]        # 0x140007600
   140005dbd:	call   0x140006530
   140005dc2:	lea    rdx,[rip+0x7407]        # 0x14000d1d0
   140005dc9:	lea    rcx,[rsp+0x20]
   140005dce:	call   0x140001a40
   140005dd3:	lea    rdx,[rip+0x4e86]        # 0x14000ac60
   140005dda:	lea    rcx,[rsp+0x20]
   140005ddf:	call   0x140006566
   140005de4:	int3   
   140005de5:	int3   
   140005de6:	int3   
   140005de7:	int3   
   140005de8:	int3   
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	rex.W jmp QWORD PTR [rip+0x246d]        # 0x140008260
   140005df3:	int3   
   140005df4:	int3   
   140005df5:	int3   
   140005df6:	int3   
   140005df7:	int3   
   140005df8:	int3   
   140005df9:	int3   
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	mov    QWORD PTR [rsp+0x8],rcx
   140005e01:	push   rdi
   140005e02:	sub    rsp,0x30
   140005e06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005e0f:	mov    QWORD PTR [rsp+0x48],rbx
   140005e14:	mov    rbx,rdx
   140005e17:	mov    rdi,rcx
   140005e1a:	call   0x140006468
   140005e1f:	nop
   140005e20:	lea    rax,[rip+0x2ca1]        # 0x140008ac8
   140005e27:	mov    QWORD PTR [rdi],rax
   140005e2a:	lea    rcx,[rdi+0x18]
   140005e2e:	mov    QWORD PTR [rcx+0x20],0xf
   140005e36:	and    QWORD PTR [rcx+0x18],0x0
   140005e3b:	mov    BYTE PTR [rcx+0x8],0x0
   140005e3f:	lea    rdx,[rbx+0x18]
   140005e43:	or     r9,0xffffffffffffffff
   140005e47:	xor    r8d,r8d
   140005e4a:	call   0x1400028fc
   140005e4f:	nop
   140005e50:	lea    rax,[rip+0x2889]        # 0x1400086e0
   140005e57:	mov    QWORD PTR [rdi],rax
   140005e5a:	mov    rax,rdi
   140005e5d:	mov    rbx,QWORD PTR [rsp+0x48]
   140005e62:	add    rsp,0x30
   140005e66:	pop    rdi
   140005e67:	ret    
   140005e68:	int3   
   140005e69:	int3   
   140005e6a:	int3   
   140005e6b:	int3   
   140005e6c:	int3   
   140005e6d:	int3   
   140005e6e:	int3   
   140005e6f:	int3   
   140005e70:	mov    rax,rsp
   140005e73:	mov    QWORD PTR [rax+0x8],rcx
   140005e77:	push   rdi
   140005e78:	sub    rsp,0x30
   140005e7c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140005e84:	mov    QWORD PTR [rax+0x10],rbx
   140005e88:	mov    QWORD PTR [rax+0x18],rsi
   140005e8c:	mov    rdi,rdx
   140005e8f:	mov    rsi,rcx
   140005e92:	call   0x140006474
   140005e97:	nop
   140005e98:	lea    rax,[rip+0x2c29]        # 0x140008ac8
   140005e9f:	mov    QWORD PTR [rsi],rax
   140005ea2:	xor    r8d,r8d
   140005ea5:	xor    edx,edx
   140005ea7:	lea    rcx,[rsi+0x18]
   140005eab:	call   0x140002a14
   140005eb0:	or     r9,0xffffffffffffffff
   140005eb4:	xor    r8d,r8d
   140005eb7:	mov    rdx,rdi
   140005eba:	lea    rcx,[rsi+0x18]
   140005ebe:	call   0x1400028fc
   140005ec3:	nop
   140005ec4:	lea    rax,[rip+0x2815]        # 0x1400086e0
   140005ecb:	mov    QWORD PTR [rsi],rax
   140005ece:	mov    rax,rsi
   140005ed1:	mov    rbx,QWORD PTR [rsp+0x48]
   140005ed6:	mov    rsi,QWORD PTR [rsp+0x50]
   140005edb:	add    rsp,0x30
   140005edf:	pop    rdi
   140005ee0:	ret    
   140005ee1:	int3   
   140005ee2:	int3   
   140005ee3:	int3   
   140005ee4:	int3   
   140005ee5:	int3   
   140005ee6:	int3   
   140005ee7:	int3   
   140005ee8:	rex push rbx
   140005eea:	sub    rsp,0x20
   140005eee:	lea    rax,[rip+0x2bd3]        # 0x140008ac8
   140005ef5:	mov    rbx,rcx
   140005ef8:	mov    QWORD PTR [rcx],rax
   140005efb:	cmp    QWORD PTR [rcx+0x38],0x10
   140005f00:	jb     0x140005f0b
   140005f02:	mov    rcx,QWORD PTR [rcx+0x20]
   140005f06:	call   0x140005dec
   140005f0b:	and    QWORD PTR [rbx+0x30],0x0
   140005f10:	mov    rcx,rbx
   140005f13:	mov    QWORD PTR [rbx+0x38],0xf
   140005f1b:	mov    BYTE PTR [rbx+0x20],0x0
   140005f1f:	add    rsp,0x20
   140005f23:	pop    rbx
   140005f24:	jmp    0x14000645c
   140005f29:	int3   
   140005f2a:	int3   
   140005f2b:	int3   
   140005f2c:	int3   
   140005f2d:	int3   
   140005f2e:	int3   
   140005f2f:	int3   
   140005f30:	mov    QWORD PTR [rsp+0x8],rbx
   140005f35:	push   rdi
   140005f36:	sub    rsp,0x20
   140005f3a:	lea    rax,[rip+0x2b87]        # 0x140008ac8
   140005f41:	mov    edi,edx
   140005f43:	mov    QWORD PTR [rcx],rax
   140005f46:	mov    rbx,rcx
   140005f49:	cmp    QWORD PTR [rcx+0x38],0x10
   140005f4e:	jb     0x140005f59
   140005f50:	mov    rcx,QWORD PTR [rcx+0x20]
   140005f54:	call   0x140005dec
   140005f59:	and    QWORD PTR [rbx+0x30],0x0
   140005f5e:	mov    rcx,rbx
   140005f61:	mov    QWORD PTR [rbx+0x38],0xf
   140005f69:	mov    BYTE PTR [rbx+0x20],0x0
   140005f6d:	call   0x14000645c
   140005f72:	test   dil,0x1
   140005f76:	je     0x140005f80
   140005f78:	mov    rcx,rbx
   140005f7b:	call   0x140005dec
   140005f80:	mov    rax,rbx
   140005f83:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f88:	add    rsp,0x20
   140005f8c:	pop    rdi
   140005f8d:	ret    
   140005f8e:	int3   
   140005f8f:	int3   
   140005f90:	int3   
   140005f91:	int3   
   140005f92:	int3   
   140005f93:	int3   
   140005f94:	int3   
   140005f95:	int3   
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	sub    rsp,0x78
   140005fa4:	mov    rax,QWORD PTR [rip+0x7055]        # 0x14000d000
   140005fab:	xor    rax,rsp
   140005fae:	mov    QWORD PTR [rsp+0x60],rax
   140005fb3:	mov    rdx,rcx
   140005fb6:	lea    rcx,[rsp+0x20]
   140005fbb:	call   0x140005dfc
   140005fc0:	lea    rdx,[rip+0x4aa1]        # 0x14000aa68
   140005fc7:	lea    rcx,[rsp+0x20]
   140005fcc:	call   0x140006566
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	int3   
   140005fd5:	int3   
   140005fd6:	int3   
   140005fd7:	int3   
   140005fd8:	sub    rsp,0xa8
   140005fdf:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005fe8:	mov    rax,QWORD PTR [rip+0x7011]        # 0x14000d000
   140005fef:	xor    rax,rsp
   140005ff2:	mov    QWORD PTR [rsp+0x90],rax
   140005ffa:	lea    rdx,[rip+0x26f7]        # 0x1400086f8
   140006001:	lea    rcx,[rsp+0x28]
   140006006:	call   0x140002eb8
   14000600b:	nop
   14000600c:	lea    rdx,[rsp+0x28]
   140006011:	lea    rcx,[rsp+0x50]
   140006016:	call   0x140001c30
   14000601b:	lea    rdx,[rip+0x4b7e]        # 0x14000aba0
   140006022:	lea    rcx,[rsp+0x50]
   140006027:	call   0x140006566
   14000602c:	int3   
   14000602d:	int3   
   14000602e:	int3   
   14000602f:	int3   
   140006030:	int3   
   140006031:	int3   
   140006032:	int3   
   140006033:	int3   
   140006034:	sub    rsp,0xa8
   14000603b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006044:	mov    rax,QWORD PTR [rip+0x6fb5]        # 0x14000d000
   14000604b:	xor    rax,rsp
   14000604e:	mov    QWORD PTR [rsp+0x90],rax
   140006056:	lea    rdx,[rip+0x26ab]        # 0x140008708
   14000605d:	lea    rcx,[rsp+0x28]
   140006062:	call   0x140002eb8
   140006067:	nop
   140006068:	xor    r8d,r8d
   14000606b:	lea    rdx,[rsp+0x28]
   140006070:	lea    rcx,[rsp+0x50]
   140006075:	call   0x140005e70
   14000607a:	lea    rdx,[rip+0x49e7]        # 0x14000aa68
   140006081:	lea    rcx,[rsp+0x50]
   140006086:	call   0x140006566
   14000608b:	int3   
   14000608c:	int3   
   14000608d:	int3   
   14000608e:	int3   
   14000608f:	int3   
   140006090:	int3   
   140006091:	int3   
   140006092:	int3   
   140006093:	int3   
   140006094:	int3   
   140006095:	int3   
   140006096:	int3   
   140006097:	int3   
   140006098:	int3   
   140006099:	int3   
   14000609a:	int3   
   14000609b:	int3   
   14000609c:	int3   
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	sub    rsp,0x28
   1400060a4:	mov    eax,0x5a4d
   1400060a9:	cmp    WORD PTR [rip+0xffffffffffff9f50],ax        # 0x140000000
   1400060b0:	je     0x1400060b6
   1400060b2:	xor    eax,eax
   1400060b4:	jmp    0x140006105
   1400060b6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff9f7f]        # 0x14000003c
   1400060bd:	lea    rax,[rip+0xffffffffffff9f3c]        # 0x140000000
   1400060c4:	add    rcx,rax
   1400060c7:	cmp    DWORD PTR [rcx],0x4550
   1400060cd:	jne    0x1400060b2
   1400060cf:	movzx  eax,WORD PTR [rcx+0x18]
   1400060d3:	cmp    eax,0x10b
   1400060d8:	je     0x1400060f4
   1400060da:	cmp    eax,0x20b
   1400060df:	jne    0x1400060b2
   1400060e1:	xor    eax,eax
   1400060e3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400060ea:	jbe    0x140006105
   1400060ec:	cmp    DWORD PTR [rcx+0xf8],eax
   1400060f2:	jmp    0x140006102
   1400060f4:	xor    eax,eax
   1400060f6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400060fa:	jbe    0x140006105
   1400060fc:	cmp    DWORD PTR [rcx+0xe8],eax
   140006102:	setne  al
   140006105:	mov    ecx,0x1
   14000610a:	mov    DWORD PTR [rip+0x7100],eax        # 0x14000d210
   140006110:	call   0x140006778
   140006115:	mov    ecx,eax
   140006117:	call   QWORD PTR [rip+0x210b]        # 0x140008228
   14000611d:	mov    rcx,QWORD PTR [rip+0x2164]        # 0x140008288
   140006124:	or     rax,0xffffffffffffffff
   140006128:	mov    QWORD PTR [rip+0x77b1],rax        # 0x14000d8e0
   14000612f:	mov    QWORD PTR [rip+0x77b2],rax        # 0x14000d8e8
   140006136:	mov    eax,DWORD PTR [rip+0x70e8]        # 0x14000d224
   14000613c:	mov    DWORD PTR [rcx],eax
   14000613e:	mov    rcx,QWORD PTR [rip+0x214b]        # 0x140008290
   140006145:	mov    eax,DWORD PTR [rip+0x70cd]        # 0x14000d218
   14000614b:	mov    DWORD PTR [rcx],eax
   14000614d:	call   0x140001220
   140006152:	cmp    DWORD PTR [rip+0x6eb7],0x0        # 0x14000d010
   140006159:	jne    0x140006168
   14000615b:	lea    rcx,[rip+0xffffffffffffb0be]        # 0x140001220
   140006162:	call   QWORD PTR [rip+0x2108]        # 0x140008270
   140006168:	xor    eax,eax
   14000616a:	add    rsp,0x28
   14000616e:	ret    
   14000616f:	int3   
   140006170:	int3   
   140006171:	int3   
   140006172:	int3   
   140006173:	int3   
   140006174:	int3   
   140006175:	int3   
   140006176:	int3   
   140006177:	int3   
   140006178:	int3   
   140006179:	int3   
   14000617a:	int3   
   14000617b:	int3   
   14000617c:	int3   
   14000617d:	int3   
   14000617e:	int3   
   14000617f:	int3   
   140006180:	sub    rsp,0x38
   140006184:	mov    eax,DWORD PTR [rip+0x7096]        # 0x14000d220
   14000618a:	lea    r8,[rip+0x7077]        # 0x14000d208
   140006191:	mov    r9d,DWORD PTR [rip+0x7084]        # 0x14000d21c
   140006198:	lea    rdx,[rip+0x7061]        # 0x14000d200
   14000619f:	mov    DWORD PTR [rip+0x706f],eax        # 0x14000d214
   1400061a5:	lea    rcx,[rip+0x704c]        # 0x14000d1f8
   1400061ac:	lea    rax,[rip+0x7061]        # 0x14000d214
   1400061b3:	mov    QWORD PTR [rsp+0x20],rax
   1400061b8:	call   QWORD PTR [rip+0x2062]        # 0x140008220
   1400061be:	mov    DWORD PTR [rip+0x7038],eax        # 0x14000d1fc
   1400061c4:	add    rsp,0x38
   1400061c8:	ret    
   1400061c9:	int3   
   1400061ca:	int3   
   1400061cb:	int3   
   1400061cc:	int3   
   1400061cd:	int3   
   1400061ce:	int3   
   1400061cf:	int3   
   1400061d0:	mov    rax,rsp
   1400061d3:	mov    QWORD PTR [rax+0x8],rbx
   1400061d7:	mov    QWORD PTR [rax+0x10],rsi
   1400061db:	mov    QWORD PTR [rax+0x18],rdi
   1400061df:	mov    QWORD PTR [rax+0x20],r12
   1400061e3:	push   r14
   1400061e5:	sub    rsp,0x30
   1400061e9:	mov    rax,QWORD PTR gs:0x30
   1400061f2:	mov    rbx,QWORD PTR [rax+0x8]
   1400061f6:	xor    r14d,r14d
   1400061f9:	xor    eax,eax
   1400061fb:	lock cmpxchg QWORD PTR [rip+0x76cc],rbx        # 0x14000d8d0
   140006204:	je     0x140006222
   140006206:	cmp    rax,rbx
   140006209:	jne    0x140006215
   14000620b:	mov    ebx,0x1
   140006210:	mov    r14d,ebx
   140006213:	jmp    0x140006227
   140006215:	mov    ecx,0x3e8
   14000621a:	call   QWORD PTR [rip+0x1f20]        # 0x140008140
   140006220:	jmp    0x1400061f9
   140006222:	mov    ebx,0x1
   140006227:	mov    eax,DWORD PTR [rip+0x76ab]        # 0x14000d8d8
   14000622d:	cmp    eax,ebx
   14000622f:	jne    0x14000623d
   140006231:	mov    ecx,0x1f
   140006236:	call   0x1400067c4
   14000623b:	jmp    0x1400062a6
   14000623d:	mov    eax,DWORD PTR [rip+0x7695]        # 0x14000d8d8
   140006243:	test   eax,eax
   140006245:	jne    0x1400062a0
   140006247:	mov    DWORD PTR [rip+0x768b],ebx        # 0x14000d8d8
   14000624d:	lea    r12,[rip+0x226c]        # 0x1400084c0
   140006254:	lea    rdi,[rip+0x224d]        # 0x1400084a8
   14000625b:	mov    QWORD PTR [rsp+0x28],rdi
   140006260:	mov    DWORD PTR [rsp+0x20],eax
   140006264:	cmp    rdi,r12
   140006267:	jae    0x140006292
   140006269:	test   eax,eax
   14000626b:	jne    0x140006296
   14000626d:	mov    rsi,QWORD PTR [rdi]
   140006270:	test   rsi,rsi
   140006273:	je     0x140006287
   140006275:	mov    rcx,rsi
   140006278:	mov    rax,QWORD PTR [rip+0x21f1]        # 0x140008470
   14000627f:	call   rax
   140006281:	call   rsi
   140006283:	mov    DWORD PTR [rsp+0x20],eax
   140006287:	add    rdi,0x8
   14000628b:	mov    QWORD PTR [rsp+0x28],rdi
   140006290:	jmp    0x140006264
   140006292:	test   eax,eax
   140006294:	je     0x1400062a6
   140006296:	mov    eax,0xff
   14000629b:	jmp    0x140006387
   1400062a0:	mov    DWORD PTR [rip+0x6f4a],ebx        # 0x14000d1f0
   1400062a6:	mov    eax,DWORD PTR [rip+0x762c]        # 0x14000d8d8
   1400062ac:	cmp    eax,ebx
   1400062ae:	jne    0x1400062cd
   1400062b0:	lea    rdx,[rip+0x21e9]        # 0x1400084a0
   1400062b7:	lea    rcx,[rip+0x21c2]        # 0x140008480
   1400062be:	call   0x14000698a
   1400062c3:	mov    DWORD PTR [rip+0x760b],0x2        # 0x14000d8d8
   1400062cd:	test   r14d,r14d
   1400062d0:	jne    0x1400062db
   1400062d2:	xor    eax,eax
   1400062d4:	xchg   QWORD PTR [rip+0x75f5],rax        # 0x14000d8d0
   1400062db:	cmp    QWORD PTR [rip+0x760d],0x0        # 0x14000d8f0
   1400062e3:	je     0x140006313
   1400062e5:	lea    rcx,[rip+0x7604]        # 0x14000d8f0
   1400062ec:	call   0x140006820
   1400062f1:	test   eax,eax
   1400062f3:	je     0x140006313
   1400062f5:	mov    rbx,QWORD PTR [rip+0x75f4]        # 0x14000d8f0
   1400062fc:	mov    rcx,rbx
   1400062ff:	mov    rax,QWORD PTR [rip+0x216a]        # 0x140008470
   140006306:	call   rax
   140006308:	xor    r8d,r8d
   14000630b:	lea    edx,[r8+0x2]
   14000630f:	xor    ecx,ecx
   140006311:	call   rbx
   140006313:	mov    r8,QWORD PTR [rip+0x6eee]        # 0x14000d208
   14000631a:	mov    rdx,QWORD PTR [rip+0x6edf]        # 0x14000d200
   140006321:	mov    ecx,DWORD PTR [rip+0x6ed1]        # 0x14000d1f8
   140006327:	call   0x140004dd0
   14000632c:	mov    DWORD PTR [rip+0x6eba],eax        # 0x14000d1ec
   140006332:	cmp    DWORD PTR [rip+0x6ed7],0x0        # 0x14000d210
   140006339:	jne    0x140006343
   14000633b:	mov    ecx,eax
   14000633d:	call   QWORD PTR [rip+0x1f55]        # 0x140008298
   140006343:	cmp    DWORD PTR [rip+0x6ea6],0x0        # 0x14000d1f0
   14000634a:	jne    0x140006358
   14000634c:	call   QWORD PTR [rip+0x1ee6]        # 0x140008238
   140006352:	mov    eax,DWORD PTR [rip+0x6e94]        # 0x14000d1ec
   140006358:	jmp    0x140006387
   14000635a:	mov    DWORD PTR [rip+0x6e8c],eax        # 0x14000d1ec
   140006360:	cmp    DWORD PTR [rip+0x6ea9],0x0        # 0x14000d210
   140006367:	jne    0x140006372
   140006369:	mov    ecx,eax
   14000636b:	call   QWORD PTR [rip+0x1ebf]        # 0x140008230
   140006371:	int3   
   140006372:	cmp    DWORD PTR [rip+0x6e77],0x0        # 0x14000d1f0
   140006379:	jne    0x140006387
   14000637b:	call   QWORD PTR [rip+0x1eb7]        # 0x140008238
   140006381:	mov    eax,DWORD PTR [rip+0x6e65]        # 0x14000d1ec
   140006387:	mov    rbx,QWORD PTR [rsp+0x40]
   14000638c:	mov    rsi,QWORD PTR [rsp+0x48]
   140006391:	mov    rdi,QWORD PTR [rsp+0x50]
   140006396:	mov    r12,QWORD PTR [rsp+0x58]
   14000639b:	add    rsp,0x30
   14000639f:	pop    r14
   1400063a1:	ret    
   1400063a2:	int3   
   1400063a3:	int3   
   1400063a4:	int3   
   1400063a5:	int3   
   1400063a6:	int3   
   1400063a7:	int3   
   1400063a8:	int3   
   1400063a9:	int3   
   1400063aa:	int3   
   1400063ab:	int3   
   1400063ac:	int3   
   1400063ad:	int3   
   1400063ae:	int3   
   1400063af:	int3   
   1400063b0:	sub    rsp,0x28
   1400063b4:	call   0x1400068b4
   1400063b9:	add    rsp,0x28
   1400063bd:	jmp    0x1400061d0
   1400063c2:	int3   
   1400063c3:	int3   
   1400063c4:	int3   
   1400063c5:	int3   
   1400063c6:	int3   
   1400063c7:	int3   
   1400063c8:	int3   
   1400063c9:	int3   
   1400063ca:	int3   
   1400063cb:	int3   
   1400063cc:	int3   
   1400063cd:	int3   
   1400063ce:	int3   
   1400063cf:	int3   
   1400063d0:	int3   
   1400063d1:	int3   
   1400063d2:	int3   
   1400063d3:	int3   
   1400063d4:	int3   
   1400063d5:	int3   
   1400063d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400063e0:	cmp    rcx,QWORD PTR [rip+0x6c19]        # 0x14000d000
   1400063e7:	jne    0x1400063f9
   1400063e9:	rol    rcx,0x10
   1400063ed:	test   cx,0xffff
   1400063f2:	jne    0x1400063f5
   1400063f4:	ret    
   1400063f5:	ror    rcx,0x10
   1400063f9:	jmp    0x1400069e0
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	int3   
   140006401:	int3   
   140006402:	int3   
   140006403:	int3   
   140006404:	int3   
   140006405:	int3   
   140006406:	int3   
   140006407:	int3   
   140006408:	int3   
   140006409:	int3   
   14000640a:	int3   
   14000640b:	int3   
   14000640c:	int3   
   14000640d:	int3   
   14000640e:	int3   
   14000640f:	int3   
   140006410:	mov    QWORD PTR [rsp+0x8],rbx
   140006415:	push   rdi
   140006416:	sub    rsp,0x20
   14000641a:	mov    ebx,edx
   14000641c:	mov    rdi,rcx
   14000641f:	call   QWORD PTR [rip+0x1e7b]        # 0x1400082a0
   140006425:	test   bl,0x1
   140006428:	je     0x140006432
   14000642a:	mov    rcx,rdi
   14000642d:	call   0x140005dec
   140006432:	mov    rax,rdi
   140006435:	mov    rbx,QWORD PTR [rsp+0x30]
   14000643a:	add    rsp,0x20
   14000643e:	pop    rdi
   14000643f:	ret    
   140006440:	int3   
   140006441:	int3   
   140006442:	int3   
   140006443:	int3   
   140006444:	int3   
   140006445:	int3   
   140006446:	int3   
   140006447:	int3   
   140006448:	int3   
   140006449:	int3   
   14000644a:	int3   
   14000644b:	int3   
   14000644c:	int3   
   14000644d:	int3   
   14000644e:	int3   
   14000644f:	int3   
   140006450:	jmp    QWORD PTR [rip+0x1dea]        # 0x140008240
   140006456:	int3   
   140006457:	int3   
   140006458:	int3   
   140006459:	int3   
   14000645a:	int3   
   14000645b:	int3   
   14000645c:	jmp    QWORD PTR [rip+0x1e66]        # 0x1400082c8
   140006462:	int3   
   140006463:	int3   
   140006464:	int3   
   140006465:	int3   
   140006466:	int3   
   140006467:	int3   
   140006468:	jmp    QWORD PTR [rip+0x1e4a]        # 0x1400082b8
   14000646e:	int3   
   14000646f:	int3   
   140006470:	int3   
   140006471:	int3   
   140006472:	int3   
   140006473:	int3   
   140006474:	jmp    QWORD PTR [rip+0x1e2e]        # 0x1400082a8
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	int3   
   14000647d:	int3   
   14000647e:	int3   
   14000647f:	int3   
   140006480:	jmp    QWORD PTR [rip+0x1de2]        # 0x140008268
   140006486:	int3   
   140006487:	int3   
   140006488:	int3   
   140006489:	int3   
   14000648a:	int3   
   14000648b:	int3   
   14000648c:	mov    QWORD PTR [rsp+0x8],rbx
   140006491:	push   rdi
   140006492:	sub    rsp,0x20
   140006496:	mov    rdi,rcx
   140006499:	mov    rax,QWORD PTR [rip+0x7448]        # 0x14000d8e8
   1400064a0:	mov    QWORD PTR [rsp+0x38],rax
   1400064a5:	cmp    rax,0xffffffffffffffff
   1400064a9:	jne    0x1400064c2
   1400064ab:	mov    rbx,QWORD PTR [rip+0x1e4e]        # 0x140008300
   1400064b2:	mov    rcx,rbx
   1400064b5:	call   QWORD PTR [rip+0x1fb5]        # 0x140008470
   1400064bb:	mov    rcx,rdi
   1400064be:	call   rbx
   1400064c0:	jmp    0x14000651f
   1400064c2:	mov    ecx,0x8
   1400064c7:	call   0x140006b58
   1400064cc:	nop
   1400064cd:	mov    rax,QWORD PTR [rip+0x7414]        # 0x14000d8e8
   1400064d4:	mov    QWORD PTR [rsp+0x38],rax
   1400064d9:	mov    rax,QWORD PTR [rip+0x7400]        # 0x14000d8e0
   1400064e0:	mov    QWORD PTR [rsp+0x40],rax
   1400064e5:	lea    r8,[rsp+0x40]
   1400064ea:	lea    rdx,[rsp+0x38]
   1400064ef:	mov    rcx,rdi
   1400064f2:	call   0x140006b70
   1400064f7:	mov    rbx,rax
   1400064fa:	mov    rdx,QWORD PTR [rsp+0x38]
   1400064ff:	mov    QWORD PTR [rip+0x73e2],rdx        # 0x14000d8e8
   140006506:	mov    rdx,QWORD PTR [rsp+0x40]
   14000650b:	mov    QWORD PTR [rip+0x73ce],rdx        # 0x14000d8e0
   140006512:	mov    ecx,0x8
   140006517:	call   0x140006b64
   14000651c:	mov    rax,rbx
   14000651f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006524:	add    rsp,0x20
   140006528:	pop    rdi
   140006529:	ret    
   14000652a:	int3   
   14000652b:	int3   
   14000652c:	int3   
   14000652d:	int3   
   14000652e:	int3   
   14000652f:	int3   
   140006530:	sub    rsp,0x28
   140006534:	call   0x14000648c
   140006539:	neg    rax
   14000653c:	sbb    eax,eax
   14000653e:	neg    eax
   140006540:	dec    eax
   140006542:	add    rsp,0x28
   140006546:	ret    
   140006547:	int3   
   140006548:	int3   
   140006549:	int3   
   14000654a:	int3   
   14000654b:	int3   
   14000654c:	int3   
   14000654d:	int3   
   14000654e:	jmp    QWORD PTR [rip+0x1cfc]        # 0x140008250
   140006554:	int3   
   140006555:	int3   
   140006556:	int3   
   140006557:	int3   
   140006558:	int3   
   140006559:	int3   
   14000655a:	jmp    QWORD PTR [rip+0x1ce8]        # 0x140008248
   140006560:	int3   
   140006561:	int3   
   140006562:	int3   
   140006563:	int3   
   140006564:	int3   
   140006565:	int3   
   140006566:	jmp    QWORD PTR [rip+0x1d8c]        # 0x1400082f8
   14000656c:	int3   
   14000656d:	int3   
   14000656e:	int3   
   14000656f:	int3   
   140006570:	int3   
   140006571:	int3   
   140006572:	jmp    QWORD PTR [rip+0x1ca0]        # 0x140008218
   140006578:	int3   
   140006579:	int3   
   14000657a:	int3   
   14000657b:	int3   
   14000657c:	int3   
   14000657d:	int3   
   14000657e:	int3   
   14000657f:	int3   
   140006580:	sub    rsp,0x28
   140006584:	mov    r8,QWORD PTR [r9+0x38]
   140006588:	mov    rcx,rdx
   14000658b:	mov    rdx,r9
   14000658e:	call   0x1400065a4
   140006593:	mov    eax,0x1
   140006598:	add    rsp,0x28
   14000659c:	ret    
   14000659d:	int3   
   14000659e:	int3   
   14000659f:	int3   
   1400065a0:	int3   
   1400065a1:	int3   
   1400065a2:	int3   
   1400065a3:	int3   
   1400065a4:	rex push rbx
   1400065a6:	sub    rsp,0x20
   1400065aa:	mov    r11d,DWORD PTR [r8]
   1400065ad:	mov    rbx,rdx
   1400065b0:	and    r11d,0xfffffff8
   1400065b4:	mov    r9,rcx
   1400065b7:	test   BYTE PTR [r8],0x4
   1400065bb:	mov    r10,rcx
   1400065be:	je     0x1400065d3
   1400065c0:	mov    eax,DWORD PTR [r8+0x8]
   1400065c4:	movsxd r10,DWORD PTR [r8+0x4]
   1400065c8:	neg    eax
   1400065ca:	add    r10,rcx
   1400065cd:	movsxd rcx,eax
   1400065d0:	and    r10,rcx
   1400065d3:	movsxd rax,r11d
   1400065d6:	mov    rdx,QWORD PTR [rax+r10*1]
   1400065da:	mov    rax,QWORD PTR [rbx+0x10]
   1400065de:	mov    ecx,DWORD PTR [rax+0x8]
   1400065e1:	add    rcx,QWORD PTR [rbx+0x8]
   1400065e5:	test   BYTE PTR [rcx+0x3],0xf
   1400065e9:	je     0x1400065f7
   1400065eb:	movzx  eax,BYTE PTR [rcx+0x3]
   1400065ef:	and    eax,0xfffffff0
   1400065f2:	cdqe   
   1400065f4:	add    r9,rax
   1400065f7:	xor    r9,rdx
   1400065fa:	mov    rcx,r9
   1400065fd:	add    rsp,0x20
   140006601:	pop    rbx
   140006602:	jmp    0x1400063e0
   140006607:	int3   
   140006608:	int3   
   140006609:	int3   
   14000660a:	int3   
   14000660b:	int3   
   14000660c:	int3   
   14000660d:	int3   
   14000660e:	int3   
   14000660f:	int3   
   140006610:	mov    rax,rsp
   140006613:	mov    QWORD PTR [rax+0x8],rbx
   140006617:	mov    QWORD PTR [rax+0x10],rbp
   14000661b:	mov    QWORD PTR [rax+0x18],rsi
   14000661f:	mov    QWORD PTR [rax+0x20],rdi
   140006623:	push   r14
   140006625:	sub    rsp,0x20
   140006629:	mov    rbx,QWORD PTR [r9+0x38]
   14000662d:	mov    rsi,rdx
   140006630:	mov    r14,r8
   140006633:	mov    rbp,rcx
   140006636:	mov    rdx,r9
   140006639:	mov    rcx,rsi
   14000663c:	mov    rdi,r9
   14000663f:	lea    r8,[rbx+0x4]
   140006643:	call   0x1400065a4
   140006648:	mov    r11d,DWORD PTR [rbx+0x4]
   14000664c:	mov    r8d,0x1
   140006652:	mov    r10d,DWORD PTR [rbp+0x4]
   140006656:	mov    eax,r11d
   140006659:	and    eax,r8d
   14000665c:	and    r11d,0x2
   140006660:	and    r10b,0x66
   140006664:	cmove  r11d,eax
   140006668:	test   r11d,r11d
   14000666b:	je     0x140006681
   14000666d:	mov    r9,rdi
   140006670:	mov    r8,r14
   140006673:	mov    rdx,rsi
   140006676:	mov    rcx,rbp
   140006679:	call   0x140006572
   14000667e:	mov    r8d,eax
   140006681:	mov    rbx,QWORD PTR [rsp+0x30]
   140006686:	mov    eax,r8d
   140006689:	mov    rbp,QWORD PTR [rsp+0x38]
   14000668e:	mov    rsi,QWORD PTR [rsp+0x40]
   140006693:	mov    rdi,QWORD PTR [rsp+0x48]
   140006698:	add    rsp,0x20
   14000669c:	pop    r14
   14000669e:	ret    
   14000669f:	int3   
   1400066a0:	int3   
   1400066a1:	int3   
   1400066a2:	int3   
   1400066a3:	int3   
   1400066a4:	int3   
   1400066a5:	int3   
   1400066a6:	int3   
   1400066a7:	int3   
   1400066a8:	int3   
   1400066a9:	int3   
   1400066aa:	int3   
   1400066ab:	int3   
   1400066ac:	int3   
   1400066ad:	int3   
   1400066ae:	int3   
   1400066af:	int3   
   1400066b0:	sub    rsp,0x28
   1400066b4:	mov    rax,QWORD PTR [rcx]
   1400066b7:	cmp    DWORD PTR [rax],0xe06d7363
   1400066bd:	jne    0x1400066e2
   1400066bf:	cmp    DWORD PTR [rax+0x18],0x4
   1400066c3:	jne    0x1400066e2
   1400066c5:	mov    ecx,DWORD PTR [rax+0x20]
   1400066c8:	lea    eax,[rcx-0x19930520]
   1400066ce:	cmp    eax,0x2
   1400066d1:	jbe    0x1400066db
   1400066d3:	cmp    ecx,0x1994000
   1400066d9:	jne    0x1400066e2
   1400066db:	call   QWORD PTR [rip+0x1bcf]        # 0x1400082b0
   1400066e1:	int3   
   1400066e2:	xor    eax,eax
   1400066e4:	add    rsp,0x28
   1400066e8:	ret    
   1400066e9:	int3   
   1400066ea:	int3   
   1400066eb:	int3   
   1400066ec:	int3   
   1400066ed:	int3   
   1400066ee:	int3   
   1400066ef:	int3   
   1400066f0:	sub    rsp,0x28
   1400066f4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400066b0
   1400066fb:	call   QWORD PTR [rip+0x1987]        # 0x140008088
   140006701:	xor    eax,eax
   140006703:	add    rsp,0x28
   140006707:	ret    
   140006708:	int3   
   140006709:	int3   
   14000670a:	int3   
   14000670b:	int3   
   14000670c:	int3   
   14000670d:	int3   
   14000670e:	jmp    QWORD PTR [rip+0x1afc]        # 0x140008210
   140006714:	int3   
   140006715:	int3   
   140006716:	int3   
   140006717:	int3   
   140006718:	int3   
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	sub    rsp,0x18
   140006720:	xor    edx,edx
   140006722:	lea    rax,[rcx-0x1]
   140006726:	cmp    rax,0xfffffffffffffffd
   14000672a:	ja     0x140006768
   14000672c:	mov    eax,0x5a4d
   140006731:	cmp    WORD PTR [rcx],ax
   140006734:	jne    0x140006760
   140006736:	cmp    DWORD PTR [rcx+0x3c],edx
   140006739:	jl     0x140006760
   14000673b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140006742:	jae    0x140006760
   140006744:	movsxd rax,DWORD PTR [rcx+0x3c]
   140006748:	add    rax,rcx
   14000674b:	mov    QWORD PTR [rsp],rax
   14000674f:	cmp    DWORD PTR [rax],0x4550
   140006755:	cmovne rax,rdx
   140006759:	mov    rdx,rax
   14000675c:	mov    QWORD PTR [rsp],rax
   140006760:	jmp    0x140006768
   140006762:	xor    edx,edx
   140006764:	mov    QWORD PTR [rsp],rdx
   140006768:	mov    rax,rdx
   14000676b:	add    rsp,0x18
   14000676f:	ret    
   140006770:	int3   
   140006771:	int3   
   140006772:	int3   
   140006773:	int3   
   140006774:	int3   
   140006775:	int3   
   140006776:	int3   
   140006777:	int3   
   140006778:	rex push rbx
   14000677a:	sub    rsp,0x20
   14000677e:	mov    ebx,ecx
   140006780:	xor    ecx,ecx
   140006782:	call   QWORD PTR [rip+0x1918]        # 0x1400080a0
   140006788:	test   rax,rax
   14000678b:	je     0x1400067b5
   14000678d:	mov    rcx,rax
   140006790:	call   0x14000671c
   140006795:	test   rax,rax
   140006798:	je     0x1400067b5
   14000679a:	mov    ecx,0x2
   14000679f:	cmp    WORD PTR [rax+0x5c],cx
   1400067a3:	jne    0x1400067a9
   1400067a5:	mov    eax,ecx
   1400067a7:	jmp    0x1400067b7
   1400067a9:	cmp    WORD PTR [rax+0x5c],0x3
   1400067ae:	mov    eax,0x1
   1400067b3:	je     0x1400067b7
   1400067b5:	mov    eax,ebx
   1400067b7:	add    rsp,0x20
   1400067bb:	pop    rbx
   1400067bc:	ret    
   1400067bd:	int3   
   1400067be:	int3   
   1400067bf:	int3   
   1400067c0:	int3   
   1400067c1:	int3   
   1400067c2:	int3   
   1400067c3:	int3   
   1400067c4:	jmp    QWORD PTR [rip+0x1a3e]        # 0x140008208
   1400067ca:	int3   
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400067d4:	xor    r9d,r9d
   1400067d7:	add    r8,rcx
   1400067da:	mov    r10,rdx
   1400067dd:	movzx  eax,WORD PTR [r8+0x14]
   1400067e2:	movzx  r11d,WORD PTR [r8+0x6]
   1400067e7:	add    rax,0x18
   1400067eb:	add    rax,r8
   1400067ee:	test   r11d,r11d
   1400067f1:	je     0x140006811
   1400067f3:	mov    edx,DWORD PTR [rax+0xc]
   1400067f6:	cmp    r10,rdx
   1400067f9:	jb     0x140006805
   1400067fb:	mov    ecx,DWORD PTR [rax+0x8]
   1400067fe:	add    ecx,edx
   140006800:	cmp    r10,rcx
   140006803:	jb     0x140006813
   140006805:	inc    r9d
   140006808:	add    rax,0x28
   14000680c:	cmp    r9d,r11d
   14000680f:	jb     0x1400067f3
   140006811:	xor    eax,eax
   140006813:	ret    
   140006814:	int3   
   140006815:	int3   
   140006816:	int3   
   140006817:	int3   
   140006818:	int3   
   140006819:	int3   
   14000681a:	int3   
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	mov    QWORD PTR [rsp+0x8],rbx
   140006825:	push   rdi
   140006826:	sub    rsp,0x20
   14000682a:	mov    rbx,rcx
   14000682d:	lea    rdi,[rip+0xffffffffffff97cc]        # 0x140000000
   140006834:	mov    rcx,rdi
   140006837:	call   0x140006880
   14000683c:	test   eax,eax
   14000683e:	je     0x140006862
   140006840:	sub    rbx,rdi
   140006843:	mov    rdx,rbx
   140006846:	mov    rcx,rdi
   140006849:	call   0x1400067d0
   14000684e:	test   rax,rax
   140006851:	je     0x140006862
   140006853:	mov    eax,DWORD PTR [rax+0x24]
   140006856:	shr    eax,0x1f
   140006859:	not    eax
   14000685b:	and    eax,0x1
   14000685e:	jmp    0x140006862
   140006860:	xor    eax,eax
   140006862:	mov    rbx,QWORD PTR [rsp+0x30]
   140006867:	add    rsp,0x20
   14000686b:	pop    rdi
   14000686c:	ret    
   14000686d:	int3   
   14000686e:	int3   
   14000686f:	int3   
   140006870:	int3   
   140006871:	int3   
   140006872:	int3   
   140006873:	int3   
   140006874:	int3   
   140006875:	int3   
   140006876:	int3   
   140006877:	int3   
   140006878:	int3   
   140006879:	int3   
   14000687a:	int3   
   14000687b:	int3   
   14000687c:	int3   
   14000687d:	int3   
   14000687e:	int3   
   14000687f:	int3   
   140006880:	mov    rax,rcx
   140006883:	mov    ecx,0x5a4d
   140006888:	cmp    WORD PTR [rax],cx
   14000688b:	je     0x140006890
   14000688d:	xor    eax,eax
   14000688f:	ret    
   140006890:	movsxd rcx,DWORD PTR [rax+0x3c]
   140006894:	add    rcx,rax
   140006897:	xor    eax,eax
   140006899:	cmp    DWORD PTR [rcx],0x4550
   14000689f:	jne    0x1400068ad
   1400068a1:	mov    edx,0x20b
   1400068a6:	cmp    WORD PTR [rcx+0x18],dx
   1400068aa:	sete   al
   1400068ad:	ret    
   1400068ae:	int3   
   1400068af:	int3   
   1400068b0:	int3   
   1400068b1:	int3   
   1400068b2:	int3   
   1400068b3:	int3   
   1400068b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400068b9:	push   rbp
   1400068ba:	mov    rbp,rsp
   1400068bd:	sub    rsp,0x20
   1400068c1:	and    QWORD PTR [rbp+0x18],0x0
   1400068c6:	movabs rbx,0x2b992ddfa232
   1400068d0:	mov    rax,QWORD PTR [rip+0x6729]        # 0x14000d000
   1400068d7:	cmp    rax,rbx
   1400068da:	jne    0x14000696f
   1400068e0:	lea    rcx,[rbp+0x18]
   1400068e4:	call   QWORD PTR [rip+0x189e]        # 0x140008188
   1400068ea:	mov    rax,QWORD PTR [rbp+0x18]
   1400068ee:	mov    QWORD PTR [rbp+0x10],rax
   1400068f2:	call   QWORD PTR [rip+0x17f0]        # 0x1400080e8
   1400068f8:	mov    eax,eax
   1400068fa:	xor    QWORD PTR [rbp+0x10],rax
   1400068fe:	call   QWORD PTR [rip+0x17f4]        # 0x1400080f8
   140006904:	mov    eax,eax
   140006906:	xor    QWORD PTR [rbp+0x10],rax
   14000690a:	call   QWORD PTR [rip+0x1870]        # 0x140008180
   140006910:	mov    eax,eax
   140006912:	shl    rax,0x18
   140006916:	xor    QWORD PTR [rbp+0x10],rax
   14000691a:	call   QWORD PTR [rip+0x1860]        # 0x140008180
   140006920:	mov    eax,eax
   140006922:	lea    rcx,[rbp+0x10]
   140006926:	xor    rax,QWORD PTR [rbp+0x10]
   14000692a:	xor    rax,rcx
   14000692d:	lea    rcx,[rbp+0x20]
   140006931:	mov    QWORD PTR [rbp+0x10],rax
   140006935:	call   QWORD PTR [rip+0x17d5]        # 0x140008110
   14000693b:	mov    eax,DWORD PTR [rbp+0x20]
   14000693e:	movabs rcx,0xffffffffffff
   140006948:	shl    rax,0x20
   14000694c:	xor    rax,QWORD PTR [rbp+0x20]
   140006950:	xor    rax,QWORD PTR [rbp+0x10]
   140006954:	and    rax,rcx
   140006957:	movabs rcx,0x2b992ddfa233
   140006961:	cmp    rax,rbx
   140006964:	cmove  rax,rcx
   140006968:	mov    QWORD PTR [rip+0x6691],rax        # 0x14000d000
   14000696f:	mov    rbx,QWORD PTR [rsp+0x48]
   140006974:	not    rax
   140006977:	mov    QWORD PTR [rip+0x668a],rax        # 0x14000d008
   14000697e:	add    rsp,0x20
   140006982:	pop    rbp
   140006983:	ret    
   140006984:	int3   
   140006985:	int3   
   140006986:	int3   
   140006987:	int3   
   140006988:	int3   
   140006989:	int3   
   14000698a:	jmp    QWORD PTR [rip+0x18e8]        # 0x140008278
   140006990:	int3   
   140006991:	int3   
   140006992:	int3   
   140006993:	int3   
   140006994:	int3   
   140006995:	int3   
   140006996:	jmp    QWORD PTR [rip+0x18e4]        # 0x140008280
   14000699c:	int3   
   14000699d:	int3   
   14000699e:	int3   
   14000699f:	int3   
   1400069a0:	int3   
   1400069a1:	int3   
   1400069a2:	int3   
   1400069a3:	int3   
   1400069a4:	rex push rbx
   1400069a6:	sub    rsp,0x20
   1400069aa:	mov    rbx,rcx
   1400069ad:	xor    ecx,ecx
   1400069af:	call   QWORD PTR [rip+0x16d3]        # 0x140008088
   1400069b5:	mov    rcx,rbx
   1400069b8:	call   QWORD PTR [rip+0x16ba]        # 0x140008078
   1400069be:	call   QWORD PTR [rip+0x171c]        # 0x1400080e0
   1400069c4:	mov    rcx,rax
   1400069c7:	mov    edx,0xc0000409
   1400069cc:	add    rsp,0x20
   1400069d0:	pop    rbx
   1400069d1:	rex.W jmp QWORD PTR [rip+0x1728]        # 0x140008100
   1400069d8:	int3   
   1400069d9:	int3   
   1400069da:	int3   
   1400069db:	int3   
   1400069dc:	int3   
   1400069dd:	int3   
   1400069de:	int3   
   1400069df:	int3   
   1400069e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400069e5:	sub    rsp,0x88
   1400069ec:	lea    rcx,[rip+0x68dd]        # 0x14000d2d0
   1400069f3:	call   QWORD PTR [rip+0x172f]        # 0x140008128
   1400069f9:	mov    rax,QWORD PTR [rip+0x69c8]        # 0x14000d3c8
   140006a00:	mov    QWORD PTR [rsp+0x48],rax
   140006a05:	xor    r8d,r8d
   140006a08:	lea    rdx,[rsp+0x50]
   140006a0d:	mov    rcx,QWORD PTR [rsp+0x48]
   140006a12:	call   QWORD PTR [rip+0x1708]        # 0x140008120
   140006a18:	mov    QWORD PTR [rsp+0x40],rax
   140006a1d:	cmp    QWORD PTR [rsp+0x40],0x0
   140006a23:	je     0x140006a67
   140006a25:	mov    QWORD PTR [rsp+0x38],0x0
   140006a2e:	lea    rax,[rsp+0x58]
   140006a33:	mov    QWORD PTR [rsp+0x30],rax
   140006a38:	lea    rax,[rsp+0x60]
   140006a3d:	mov    QWORD PTR [rsp+0x28],rax
   140006a42:	lea    rax,[rip+0x6887]        # 0x14000d2d0
   140006a49:	mov    QWORD PTR [rsp+0x20],rax
   140006a4e:	mov    r9,QWORD PTR [rsp+0x40]
   140006a53:	mov    r8,QWORD PTR [rsp+0x48]
   140006a58:	mov    rdx,QWORD PTR [rsp+0x50]
   140006a5d:	xor    ecx,ecx
   140006a5f:	call   QWORD PTR [rip+0x16cb]        # 0x140008130
   140006a65:	jmp    0x140006a8a
   140006a67:	mov    rax,QWORD PTR [rip+0x68fa]        # 0x14000d368
   140006a6e:	mov    rax,QWORD PTR [rax]
   140006a71:	mov    QWORD PTR [rip+0x6950],rax        # 0x14000d3c8
   140006a78:	mov    rax,QWORD PTR [rip+0x68e9]        # 0x14000d368
   140006a7f:	add    rax,0x8
   140006a83:	mov    QWORD PTR [rip+0x68de],rax        # 0x14000d368
   140006a8a:	mov    rax,QWORD PTR [rip+0x6937]        # 0x14000d3c8
   140006a91:	mov    QWORD PTR [rip+0x67a8],rax        # 0x14000d240
   140006a98:	mov    rax,QWORD PTR [rsp+0x90]
   140006aa0:	mov    QWORD PTR [rip+0x68a9],rax        # 0x14000d350
   140006aa7:	mov    DWORD PTR [rip+0x677f],0xc0000409        # 0x14000d230
   140006ab1:	mov    DWORD PTR [rip+0x6779],0x1        # 0x14000d234
   140006abb:	mov    DWORD PTR [rip+0x6783],0x3        # 0x14000d248
   140006ac5:	mov    eax,0x8
   140006aca:	imul   rax,rax,0x0
   140006ace:	lea    rcx,[rip+0x677b]        # 0x14000d250
   140006ad5:	mov    QWORD PTR [rcx+rax*1],0x2
   140006add:	mov    eax,0x8
   140006ae2:	imul   rax,rax,0x1
   140006ae6:	lea    rcx,[rip+0x6763]        # 0x14000d250
   140006aed:	mov    rdx,QWORD PTR [rip+0x650c]        # 0x14000d000
   140006af4:	mov    QWORD PTR [rcx+rax*1],rdx
   140006af8:	mov    eax,0x8
   140006afd:	imul   rax,rax,0x2
   140006b01:	lea    rcx,[rip+0x6748]        # 0x14000d250
   140006b08:	mov    rdx,QWORD PTR [rip+0x64f9]        # 0x14000d008
   140006b0f:	mov    QWORD PTR [rcx+rax*1],rdx
   140006b13:	mov    eax,0x8
   140006b18:	imul   rax,rax,0x0
   140006b1c:	mov    rcx,QWORD PTR [rip+0x64dd]        # 0x14000d000
   140006b23:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006b28:	mov    eax,0x8
   140006b2d:	imul   rax,rax,0x1
   140006b31:	mov    rcx,QWORD PTR [rip+0x64d0]        # 0x14000d008
   140006b38:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006b3d:	lea    rcx,[rip+0x1be4]        # 0x140008728
   140006b44:	call   0x1400069a4
   140006b49:	add    rsp,0x88
   140006b50:	ret    
   140006b51:	int3   
   140006b52:	int3   
   140006b53:	int3   
   140006b54:	int3   
   140006b55:	int3   
   140006b56:	int3   
   140006b57:	int3   
   140006b58:	jmp    QWORD PTR [rip+0x1762]        # 0x1400082c0
   140006b5e:	int3   
   140006b5f:	int3   
   140006b60:	int3   
   140006b61:	int3   
   140006b62:	int3   
   140006b63:	int3   
   140006b64:	jmp    QWORD PTR [rip+0x177e]        # 0x1400082e8
   140006b6a:	int3   
   140006b6b:	int3   
   140006b6c:	int3   
   140006b6d:	int3   
   140006b6e:	int3   
   140006b6f:	int3   
   140006b70:	jmp    QWORD PTR [rip+0x177a]        # 0x1400082f0
   140006b76:	int3   
   140006b77:	int3   
   140006b78:	int3   
   140006b79:	int3   
   140006b7a:	int3   
   140006b7b:	int3   
   140006b7c:	int3   
   140006b7d:	int3   
   140006b7e:	int3   
   140006b7f:	int3   
   140006b80:	int3   
   140006b81:	int3   
   140006b82:	int3   
   140006b83:	int3   
   140006b84:	int3   
   140006b85:	int3   
   140006b86:	int3   
   140006b87:	int3   
   140006b88:	sub    rsp,0x28
   140006b8c:	mov    ecx,DWORD PTR [rip+0x6c0e]        # 0x14000d7a0
   140006b92:	cmp    ecx,0x1
   140006b95:	jne    0x140006b9b
   140006b97:	mov    al,cl
   140006b99:	jmp    0x140006bd1
   140006b9b:	cmp    ecx,0x2
   140006b9e:	jne    0x140006ba4
   140006ba0:	xor    al,al
   140006ba2:	jmp    0x140006bd1
   140006ba4:	lea    rdx,[rsp+0x30]
   140006ba9:	mov    BYTE PTR [rsp+0x30],0x0
   140006bae:	lea    rcx,[rip+0x1b83]        # 0x140008738
   140006bb5:	call   0x140006ce0
   140006bba:	test   eax,eax
   140006bbc:	js     0x140006ba0
   140006bbe:	mov    al,BYTE PTR [rsp+0x30]
   140006bc2:	mov    cl,al
   140006bc4:	neg    cl
   140006bc6:	sbb    edx,edx
   140006bc8:	add    edx,0x2
   140006bcb:	mov    DWORD PTR [rip+0x6bcf],edx        # 0x14000d7a0
   140006bd1:	add    rsp,0x28
   140006bd5:	ret    
   140006bd6:	int3   
   140006bd7:	int3   
   140006bd8:	int3   
   140006bd9:	int3   
   140006bda:	int3   
   140006bdb:	int3   
   140006bdc:	int3   
   140006bdd:	int3   
   140006bde:	int3   
   140006bdf:	int3   
   140006be0:	jmp    QWORD PTR [rip+0x185a]        # 0x140008440
   140006be6:	int3   
   140006be7:	int3   
   140006be8:	int3   
   140006be9:	int3   
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	int3   
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	jmp    QWORD PTR [rip+0x1842]        # 0x140008438
   140006bf6:	int3   
   140006bf7:	int3   
   140006bf8:	int3   
   140006bf9:	int3   
   140006bfa:	int3   
   140006bfb:	int3   
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	jmp    QWORD PTR [rip+0x182a]        # 0x140008430
   140006c06:	int3   
   140006c07:	int3   
   140006c08:	int3   
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	jmp    QWORD PTR [rip+0x1812]        # 0x140008428
   140006c16:	int3   
   140006c17:	int3   
   140006c18:	int3   
   140006c19:	int3   
   140006c1a:	int3   
   140006c1b:	int3   
   140006c1c:	int3   
   140006c1d:	int3   
   140006c1e:	int3   
   140006c1f:	int3   
   140006c20:	jmp    QWORD PTR [rip+0x17d2]        # 0x1400083f8
   140006c26:	int3   
   140006c27:	int3   
   140006c28:	int3   
   140006c29:	int3   
   140006c2a:	int3   
   140006c2b:	int3   
   140006c2c:	int3   
   140006c2d:	int3   
   140006c2e:	int3   
   140006c2f:	int3   
   140006c30:	jmp    QWORD PTR [rip+0x17ba]        # 0x1400083f0
   140006c36:	int3   
   140006c37:	int3   
   140006c38:	int3   
   140006c39:	int3   
   140006c3a:	int3   
   140006c3b:	int3   
   140006c3c:	int3   
   140006c3d:	int3   
   140006c3e:	int3   
   140006c3f:	int3   
   140006c40:	jmp    QWORD PTR [rip+0x17a2]        # 0x1400083e8
   140006c46:	int3   
   140006c47:	int3   
   140006c48:	int3   
   140006c49:	int3   
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	int3   
   140006c4d:	int3   
   140006c4e:	int3   
   140006c4f:	int3   
   140006c50:	jmp    QWORD PTR [rip+0x1782]        # 0x1400083d8
   140006c56:	int3   
   140006c57:	int3   
   140006c58:	int3   
   140006c59:	int3   
   140006c5a:	int3   
   140006c5b:	int3   
   140006c5c:	rex push rbx
   140006c5e:	sub    rsp,0x40
   140006c62:	mov    rbx,rcx
   140006c65:	jmp    0x140006c76
   140006c67:	mov    rcx,rbx
   140006c6a:	call   0x14000655a
   140006c6f:	test   eax,eax
   140006c71:	je     0x140006c87
   140006c73:	mov    rcx,rbx
   140006c76:	call   QWORD PTR [rip+0x15dc]        # 0x140008258
   140006c7c:	test   rax,rax
   140006c7f:	je     0x140006c67
   140006c81:	add    rsp,0x40
   140006c85:	pop    rbx
   140006c86:	ret    
   140006c87:	mov    eax,DWORD PTR [rip+0x6b33]        # 0x14000d7c0
   140006c8d:	test   al,0x1
   140006c8f:	jne    0x140006cb2
   140006c91:	or     eax,0x1
   140006c94:	lea    rcx,[rip+0x6b0d]        # 0x14000d7a8
   140006c9b:	mov    DWORD PTR [rip+0x6b1f],eax        # 0x14000d7c0
   140006ca1:	call   0x140005d38
   140006ca6:	lea    rcx,[rip+0x973]        # 0x140007620
   140006cad:	call   0x140006530
   140006cb2:	lea    rdx,[rip+0x6aef]        # 0x14000d7a8
   140006cb9:	lea    rcx,[rsp+0x20]
   140006cbe:	call   0x140001a40
   140006cc3:	lea    rdx,[rip+0x3f96]        # 0x14000ac60
   140006cca:	lea    rcx,[rsp+0x20]
   140006ccf:	call   0x140006566
   140006cd4:	int3   
   140006cd5:	int3   
   140006cd6:	int3   
   140006cd7:	int3   
   140006cd8:	int3   
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	jmp    QWORD PTR [rip+0x131a]        # 0x140008000
   140006ce6:	int3   
   140006ce7:	int3   
   140006ce8:	int3   
   140006ce9:	int3   
   140006cea:	int3   
   140006ceb:	int3   
   140006cec:	sub    rsp,0x28
   140006cf0:	mov    ecx,DWORD PTR [rip+0x6ace]        # 0x14000d7c4
   140006cf6:	cmp    ecx,0x1
   140006cf9:	jne    0x140006cff
   140006cfb:	mov    al,cl
   140006cfd:	jmp    0x140006d35
   140006cff:	cmp    ecx,0x2
   140006d02:	jne    0x140006d08
   140006d04:	xor    al,al
   140006d06:	jmp    0x140006d35
   140006d08:	lea    rdx,[rsp+0x30]
   140006d0d:	mov    BYTE PTR [rsp+0x30],0x0
   140006d12:	lea    rcx,[rip+0x1aaf]        # 0x1400087c8
   140006d19:	call   0x140006ce0
   140006d1e:	test   eax,eax
   140006d20:	js     0x140006d04
   140006d22:	mov    al,BYTE PTR [rsp+0x30]
   140006d26:	mov    cl,al
   140006d28:	neg    cl
   140006d2a:	sbb    edx,edx
   140006d2c:	add    edx,0x2
   140006d2f:	mov    DWORD PTR [rip+0x6a8f],edx        # 0x14000d7c4
   140006d35:	add    rsp,0x28
   140006d39:	ret    
   140006d3a:	int3   
   140006d3b:	int3   
   140006d3c:	int3   
   140006d3d:	int3   
   140006d3e:	int3   
   140006d3f:	int3   
   140006d40:	lea    rax,[rip+0x82d9]        # 0x14000f020
   140006d47:	jmp    0x140006d60
   140006d4c:	int3   
   140006d4d:	int3   
   140006d4e:	int3   
   140006d4f:	int3   
   140006d50:	int3   
   140006d51:	int3   
   140006d52:	int3   
   140006d53:	int3   
   140006d54:	int3   
   140006d55:	int3   
   140006d56:	int3   
   140006d57:	int3   
   140006d58:	int3   
   140006d59:	int3   
   140006d5a:	int3   
   140006d5b:	int3   
   140006d5c:	int3   
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	mov    QWORD PTR [rsp+0x8],rcx
   140006d65:	mov    QWORD PTR [rsp+0x10],rdx
   140006d6a:	mov    QWORD PTR [rsp+0x18],r8
   140006d6f:	mov    QWORD PTR [rsp+0x20],r9
   140006d74:	sub    rsp,0x68
   140006d78:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140006d7e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140006d84:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140006d8a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140006d90:	mov    rdx,rax
   140006d93:	lea    rcx,[rip+0x3f6a]        # 0x14000ad04
   140006d9a:	call   0x140005d00
   140006d9f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140006da5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140006dab:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140006db1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140006db7:	mov    rcx,QWORD PTR [rsp+0x70]
   140006dbc:	mov    rdx,QWORD PTR [rsp+0x78]
   140006dc1:	mov    r8,QWORD PTR [rsp+0x80]
   140006dc9:	mov    r9,QWORD PTR [rsp+0x88]
   140006dd1:	add    rsp,0x68
   140006dd5:	jmp    0x140006dd7
   140006dd7:	jmp    rax
   140006dd9:	int3   
   140006dda:	int3   
   140006ddb:	int3   
   140006ddc:	int3   
   140006ddd:	int3   
   140006dde:	int3   
   140006ddf:	int3   
   140006de0:	lea    rax,[rip+0x8219]        # 0x14000f000
   140006de7:	jmp    0x140006d60
   140006dec:	int3   
   140006ded:	int3   
   140006dee:	int3   
   140006def:	int3   
   140006df0:	int3   
   140006df1:	int3   
   140006df2:	int3   
   140006df3:	int3   
   140006df4:	int3   
   140006df5:	int3   
   140006df6:	int3   
   140006df7:	int3   
   140006df8:	int3   
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	int3   
   140006dfd:	int3   
   140006dfe:	int3   
   140006dff:	int3   
   140006e00:	lea    rax,[rip+0x8201]        # 0x14000f008
   140006e07:	jmp    0x140006d60
   140006e0c:	int3   
   140006e0d:	int3   
   140006e0e:	int3   
   140006e0f:	int3   
   140006e10:	int3   
   140006e11:	int3   
   140006e12:	int3   
   140006e13:	int3   
   140006e14:	int3   
   140006e15:	int3   
   140006e16:	int3   
   140006e17:	int3   
   140006e18:	int3   
   140006e19:	int3   
   140006e1a:	int3   
   140006e1b:	int3   
   140006e1c:	int3   
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	lea    rax,[rip+0x81e9]        # 0x14000f010
   140006e27:	jmp    0x140006d60
   140006e2c:	int3   
   140006e2d:	int3   
   140006e2e:	int3   
   140006e2f:	int3   
   140006e30:	int3   
   140006e31:	int3   
   140006e32:	int3   
   140006e33:	int3   
   140006e34:	int3   
   140006e35:	int3   
   140006e36:	int3   
   140006e37:	int3   
   140006e38:	int3   
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	lea    rax,[rip+0x81d1]        # 0x14000f018
   140006e47:	jmp    0x140006d60
   140006e4c:	int3   
   140006e4d:	int3   
   140006e4e:	int3   
   140006e4f:	int3   
   140006e50:	int3   
   140006e51:	int3   
   140006e52:	int3   
   140006e53:	int3   
   140006e54:	int3   
   140006e55:	int3   
   140006e56:	int3   
   140006e57:	int3   
   140006e58:	int3   
   140006e59:	int3   
   140006e5a:	int3   
   140006e5b:	int3   
   140006e5c:	int3   
   140006e5d:	int3   
   140006e5e:	int3   
   140006e5f:	int3   
   140006e60:	lea    rax,[rip+0x81c9]        # 0x14000f030
   140006e67:	jmp    0x140006e80
   140006e6c:	int3   
   140006e6d:	int3   
   140006e6e:	int3   
   140006e6f:	int3   
   140006e70:	int3   
   140006e71:	int3   
   140006e72:	int3   
   140006e73:	int3   
   140006e74:	int3   
   140006e75:	int3   
   140006e76:	int3   
   140006e77:	int3   
   140006e78:	int3   
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	mov    QWORD PTR [rsp+0x8],rcx
   140006e85:	mov    QWORD PTR [rsp+0x10],rdx
   140006e8a:	mov    QWORD PTR [rsp+0x18],r8
   140006e8f:	mov    QWORD PTR [rsp+0x20],r9
   140006e94:	sub    rsp,0x68
   140006e98:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140006e9e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140006ea4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140006eaa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140006eb0:	mov    rdx,rax
   140006eb3:	lea    rcx,[rip+0x3e6a]        # 0x14000ad24
   140006eba:	call   0x140005d00
   140006ebf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140006ec5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140006ecb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140006ed1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140006ed7:	mov    rcx,QWORD PTR [rsp+0x70]
   140006edc:	mov    rdx,QWORD PTR [rsp+0x78]
   140006ee1:	mov    r8,QWORD PTR [rsp+0x80]
   140006ee9:	mov    r9,QWORD PTR [rsp+0x88]
   140006ef1:	add    rsp,0x68
   140006ef5:	jmp    0x140006ef7
   140006ef7:	jmp    rax
   140006ef9:	int3   
   140006efa:	int3   
   140006efb:	int3   
   140006efc:	int3   
   140006efd:	int3   
   140006efe:	int3   
   140006eff:	int3   
   140006f00:	jmp    QWORD PTR [rip+0x1162]        # 0x140008068
   140006f06:	int3   
   140006f07:	int3   
   140006f08:	int3   
   140006f09:	int3   
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	int3   
   140006f0d:	int3   
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	int3   
   140006f11:	int3   
   140006f12:	int3   
   140006f13:	int3   
   140006f14:	int3   
   140006f15:	int3   
   140006f16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006f20:	jmp    rax
   140006f22:	int3   
   140006f23:	int3   
   140006f24:	int3   
   140006f25:	int3   
   140006f26:	int3   
   140006f27:	int3   
   140006f28:	int3   
   140006f29:	int3   
   140006f2a:	int3   
   140006f2b:	int3   
   140006f2c:	int3   
   140006f2d:	int3   
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	int3   
   140006f31:	int3   
   140006f32:	int3   
   140006f33:	int3   
   140006f34:	int3   
   140006f35:	int3   
   140006f36:	mov    rcx,QWORD PTR [rdx+0x40]
   140006f3d:	rex.W jmp QWORD PTR [rip+0x149c]        # 0x1400083e0
   140006f44:	mov    rcx,QWORD PTR [rdx+0x40]
   140006f4b:	add    rcx,0x18
   140006f4f:	jmp    0x1400011b0
   140006f54:	mov    rcx,QWORD PTR [rdx+0x50]
   140006f5b:	jmp    0x140001418
   140006f60:	int3   
   140006f61:	int3   
   140006f62:	int3   
   140006f63:	int3   
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	mov    rcx,QWORD PTR [rdx+0x20]
   140006f6d:	jmp    0x140001418
   140006f72:	int3   
   140006f73:	int3   
   140006f74:	int3   
   140006f75:	int3   
   140006f76:	int3   
   140006f77:	int3   
   140006f78:	mov    rcx,QWORD PTR [rdx+0x20]
   140006f7f:	rex.W jmp QWORD PTR [rip+0x145a]        # 0x1400083e0
   140006f86:	mov    rcx,QWORD PTR [rdx+0x20]
   140006f8d:	add    rcx,0x18
   140006f91:	jmp    0x1400011b0
   140006f96:	mov    rcx,QWORD PTR [rdx+0x28]
   140006f9d:	jmp    0x140001418
   140006fa2:	int3   
   140006fa3:	int3   
   140006fa4:	int3   
   140006fa5:	int3   
   140006fa6:	int3   
   140006fa7:	int3   
   140006fa8:	mov    rcx,QWORD PTR [rdx+0x40]
   140006faf:	rex.W jmp QWORD PTR [rip+0x1492]        # 0x140008448
   140006fb6:	mov    rcx,QWORD PTR [rdx+0x40]
   140006fbd:	add    rcx,0x20
   140006fc1:	jmp    0x1400012ac
   140006fc6:	mov    rcx,QWORD PTR [rdx+0x50]
   140006fcd:	jmp    0x140001508
   140006fd2:	int3   
   140006fd3:	int3   
   140006fd4:	int3   
   140006fd5:	int3   
   140006fd6:	int3   
   140006fd7:	int3   
   140006fd8:	mov    rcx,QWORD PTR [rdx+0x20]
   140006fdf:	jmp    0x140001508
   140006fe4:	int3   
   140006fe5:	int3   
   140006fe6:	int3   
   140006fe7:	int3   
   140006fe8:	int3   
   140006fe9:	int3   
   140006fea:	mov    rcx,QWORD PTR [rdx+0x70]
   140006ff1:	jmp    0x140005dec
   140006ff6:	mov    rcx,QWORD PTR [rdx+0x70]
   140006ffd:	rex.W jmp QWORD PTR [rip+0x13dc]        # 0x1400083e0
   140007004:	mov    rcx,QWORD PTR [rdx+0x78]
   14000700b:	jmp    0x140001418
   140007010:	mov    rcx,QWORD PTR [rdx+0x70]
   140007017:	add    rcx,0x18
   14000701b:	jmp    0x1400011b0
   140007020:	mov    rcx,QWORD PTR [rdx+0x70]
   140007027:	jmp    0x1400011d8
   14000702c:	lea    rcx,[rdx+0x38]
   140007033:	jmp    0x140001814
   140007038:	int3   
   140007039:	int3   
   14000703a:	int3   
   14000703b:	int3   
   14000703c:	int3   
   14000703d:	int3   
   14000703e:	lea    rcx,[rdx+0x28]
   140007045:	jmp    0x1400018a0
   14000704a:	mov    rcx,QWORD PTR [rdx+0x78]
   140007051:	jmp    0x140005dec
   140007056:	mov    rcx,QWORD PTR [rdx+0x78]
   14000705d:	rex.W jmp QWORD PTR [rip+0x13e4]        # 0x140008448
   140007064:	mov    rcx,QWORD PTR [rdx+0x88]
   14000706b:	jmp    0x140001508
   140007070:	mov    rcx,QWORD PTR [rdx+0x78]
   140007077:	add    rcx,0x20
   14000707b:	jmp    0x1400012ac
   140007080:	lea    rcx,[rdx+0x78]
   140007087:	jmp    0x1400018a0
   14000708c:	mov    QWORD PTR [rsp+0x10],rdx
   140007091:	push   rbp
   140007092:	sub    rsp,0x20
   140007096:	mov    rbp,rdx
   140007099:	mov    DWORD PTR [rbp+0x20],0x8007000e
   1400070a0:	lea    rax,[rip+0xffffffffffffa6cd]        # 0x140001774
   1400070a7:	add    rsp,0x20
   1400070ab:	pop    rbp
   1400070ac:	ret    
   1400070ad:	int3   
   1400070ae:	int3   
   1400070af:	int3   
   1400070b0:	int3   
   1400070b1:	int3   
   1400070b2:	int3   
   1400070b3:	int3   
   1400070b4:	mov    rcx,QWORD PTR [rdx+0x40]
   1400070bb:	jmp    0x1400011d8
   1400070c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400070c7:	rex.W jmp QWORD PTR [rip+0x1312]        # 0x1400083e0
   1400070ce:	mov    rcx,QWORD PTR [rdx+0x40]
   1400070d5:	add    rcx,0x18
   1400070d9:	jmp    0x1400011b0
   1400070de:	mov    rcx,QWORD PTR [rdx+0x50]
   1400070e5:	jmp    0x140001418
   1400070ea:	int3   
   1400070eb:	int3   
   1400070ec:	int3   
   1400070ed:	int3   
   1400070ee:	int3   
   1400070ef:	int3   
   1400070f0:	rex push rbp
   1400070f2:	sub    rsp,0x20
   1400070f6:	mov    rbp,rdx
   1400070f9:	mov    eax,DWORD PTR [rbp+0x20]
   1400070fc:	and    eax,0x1
   1400070ff:	test   eax,eax
   140007101:	je     0x140007110
   140007103:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140007107:	mov    rcx,QWORD PTR [rbp+0x40]
   14000710b:	call   0x140001814
   140007110:	add    rsp,0x20
   140007114:	pop    rbp
   140007115:	ret    
   140007116:	int3   
   140007117:	int3   
   140007118:	int3   
   140007119:	int3   
   14000711a:	int3   
   14000711b:	int3   
   14000711c:	rex push rbp
   14000711e:	sub    rsp,0x20
   140007122:	mov    rbp,rdx
   140007125:	mov    eax,DWORD PTR [rbp+0x0]
   140007128:	and    eax,0x1
   14000712b:	test   eax,eax
   14000712d:	je     0x14000713c
   14000712f:	and    DWORD PTR [rbp+0x0],0xfffffffe
   140007133:	mov    rcx,QWORD PTR [rbp+0x20]
   140007137:	call   0x140001814
   14000713c:	add    rsp,0x20
   140007140:	pop    rbp
   140007141:	ret    
   140007142:	int3   
   140007143:	int3   
   140007144:	int3   
   140007145:	int3   
   140007146:	int3   
   140007147:	int3   
   140007148:	mov    rcx,QWORD PTR [rdx+0x40]
   14000714f:	rex.W jmp QWORD PTR [rip+0x1172]        # 0x1400082c8
   140007156:	int3   
   140007157:	int3   
   140007158:	int3   
   140007159:	int3   
   14000715a:	int3   
   14000715b:	int3   
   14000715c:	mov    rcx,QWORD PTR [rdx+0x40]
   140007163:	rex.W jmp QWORD PTR [rip+0x115e]        # 0x1400082c8
   14000716a:	mov    rcx,QWORD PTR [rdx+0x40]
   140007171:	add    rcx,0x18
   140007175:	jmp    0x140002828
   14000717a:	int3   
   14000717b:	int3   
   14000717c:	int3   
   14000717d:	int3   
   14000717e:	int3   
   14000717f:	int3   
   140007180:	mov    rcx,QWORD PTR [rdx+0x40]
   140007187:	rex.W jmp QWORD PTR [rip+0x113a]        # 0x1400082c8
   14000718e:	mov    rcx,QWORD PTR [rdx+0x40]
   140007195:	add    rcx,0x18
   140007199:	jmp    0x140002828
   14000719e:	mov    rcx,QWORD PTR [rdx+0x40]
   1400071a5:	jmp    0x140001a8c
   1400071aa:	int3   
   1400071ab:	int3   
   1400071ac:	int3   
   1400071ad:	int3   
   1400071ae:	int3   
   1400071af:	int3   
   1400071b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400071b7:	jmp    0x140001a8c
   1400071bc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400071c3:	rex.W jmp QWORD PTR [rip+0x10fe]        # 0x1400082c8
   1400071ca:	mov    rcx,QWORD PTR [rdx+0x40]
   1400071d1:	add    rcx,0x18
   1400071d5:	jmp    0x140002828
   1400071da:	int3   
   1400071db:	int3   
   1400071dc:	int3   
   1400071dd:	int3   
   1400071de:	int3   
   1400071df:	int3   
   1400071e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400071e7:	add    rcx,0x28
   1400071eb:	rex.W jmp QWORD PTR [rip+0x1176]        # 0x140008368
   1400071f2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400071f9:	add    rcx,0x58
   1400071fd:	jmp    0x140002860
   140007202:	int3   
   140007203:	int3   
   140007204:	int3   
   140007205:	int3   
   140007206:	int3   
   140007207:	int3   
   140007208:	mov    rcx,QWORD PTR [rdx+0x40]
   14000720f:	add    rcx,0x28
   140007213:	rex.W jmp QWORD PTR [rip+0x114e]        # 0x140008368
   14000721a:	mov    rcx,QWORD PTR [rdx+0x40]
   140007221:	add    rcx,0x58
   140007225:	jmp    0x140002860
   14000722a:	lea    rcx,[rdx+0x50]
   140007231:	rex.W jmp QWORD PTR [rip+0x1140]        # 0x140008378
   140007238:	int3   
   140007239:	int3   
   14000723a:	int3   
   14000723b:	int3   
   14000723c:	int3   
   14000723d:	int3   
   14000723e:	lea    rcx,[rdx+0x28]
   140007245:	rex.W jmp QWORD PTR [rip+0x116c]        # 0x1400083b8
   14000724c:	lea    rcx,[rdx+0x38]
   140007253:	rex.W jmp QWORD PTR [rip+0x111e]        # 0x140008378
   14000725a:	int3   
   14000725b:	int3   
   14000725c:	int3   
   14000725d:	int3   
   14000725e:	int3   
   14000725f:	int3   
   140007260:	lea    rcx,[rdx+0x88]
   140007267:	rex.W jmp QWORD PTR [rip+0x110a]        # 0x140008378
   14000726e:	lea    rcx,[rdx+0x38]
   140007275:	rex.W jmp QWORD PTR [rip+0x113c]        # 0x1400083b8
   14000727c:	mov    QWORD PTR [rsp+0x10],rdx
   140007281:	push   rbp
   140007282:	sub    rsp,0x30
   140007286:	mov    rbp,rdx
   140007289:	lea    rax,[rip+0xffffffffffffb10e]        # 0x14000239e
   140007290:	add    rsp,0x30
   140007294:	pop    rbp
   140007295:	ret    
   140007296:	int3   
   140007297:	int3   
   140007298:	int3   
   140007299:	int3   
   14000729a:	int3   
   14000729b:	int3   
   14000729c:	int3   
   14000729d:	lea    rcx,[rdx+0x50]
   1400072a4:	rex.W jmp QWORD PTR [rip+0x10cd]        # 0x140008378
   1400072ab:	int3   
   1400072ac:	int3   
   1400072ad:	int3   
   1400072ae:	int3   
   1400072af:	int3   
   1400072b0:	int3   
   1400072b1:	lea    rcx,[rdx+0x60]
   1400072b8:	rex.W jmp QWORD PTR [rip+0x10b9]        # 0x140008378
   1400072bf:	int3   
   1400072c0:	int3   
   1400072c1:	int3   
   1400072c2:	int3   
   1400072c3:	int3   
   1400072c4:	int3   
   1400072c5:	lea    rcx,[rdx+0x68]
   1400072cc:	jmp    0x1400028c4
   1400072d1:	int3   
   1400072d2:	int3   
   1400072d3:	int3   
   1400072d4:	int3   
   1400072d5:	int3   
   1400072d6:	int3   
   1400072d7:	lea    rcx,[rdx+0x28]
   1400072de:	rex.W jmp QWORD PTR [rip+0x10b3]        # 0x140008398
   1400072e5:	mov    rcx,QWORD PTR [rdx+0x70]
   1400072ec:	jmp    0x140005dec
   1400072f1:	int3   
   1400072f2:	int3   
   1400072f3:	int3   
   1400072f4:	int3   
   1400072f5:	int3   
   1400072f6:	int3   
   1400072f7:	lea    rcx,[rdx+0x40]
   1400072fe:	rex.W jmp QWORD PTR [rip+0x10b3]        # 0x1400083b8
   140007305:	mov    QWORD PTR [rsp+0x10],rdx
   14000730a:	push   rbp
   14000730b:	sub    rsp,0x30
   14000730f:	mov    rbp,rdx
   140007312:	mov    r8,QWORD PTR [rbp+0x30]
   140007316:	mov    rdx,QWORD PTR [rbp+0x80]
   14000731d:	call   0x140002b30
   140007322:	mov    rdx,QWORD PTR [rbp+0x80]
   140007329:	call   0x140002ea8
   14000732e:	xor    edx,edx
   140007330:	xor    ecx,ecx
   140007332:	call   0x140006566
   140007337:	nop
   140007338:	mov    QWORD PTR [rsp+0x10],rdx
   14000733d:	push   rbp
   14000733e:	sub    rsp,0x30
   140007342:	mov    rbp,rdx
   140007345:	mov    rax,QWORD PTR [rbp+0x80]
   14000734c:	mov    r8,QWORD PTR [rax+0x10]
   140007350:	add    r8,0x10
   140007354:	mov    rdx,QWORD PTR [rbp+0x88]
   14000735b:	add    rdx,0x10
   14000735f:	call   0x140002b30
   140007364:	xor    edx,edx
   140007366:	xor    ecx,ecx
   140007368:	call   0x140006566
   14000736d:	nop
   14000736e:	int3   
   14000736f:	int3   
   140007370:	int3   
   140007371:	int3   
   140007372:	int3   
   140007373:	int3   
   140007374:	lea    rcx,[rdx+0x28]
   14000737b:	jmp    0x140002828
   140007380:	int3   
   140007381:	int3   
   140007382:	int3   
   140007383:	int3   
   140007384:	int3   
   140007385:	int3   
   140007386:	mov    QWORD PTR [rsp+0x10],rdx
   14000738b:	push   rbp
   14000738c:	sub    rsp,0x20
   140007390:	mov    rbp,rdx
   140007393:	mov    rcx,QWORD PTR [rbp+0x88]
   14000739a:	mov    QWORD PTR [rbp+0x88],rcx
   1400073a1:	add    rcx,0x1
   1400073a5:	jne    0x1400073a9
   1400073a7:	jmp    0x1400073d3
   1400073a9:	xor    edx,edx
   1400073ab:	or     rax,0xffffffffffffffff
   1400073af:	div    rcx
   1400073b2:	cmp    rax,0x1
   1400073b6:	jae    0x1400073d3
   1400073b8:	xor    edx,edx
   1400073ba:	lea    rcx,[rbp+0x48]
   1400073be:	call   0x140001948
   1400073c3:	lea    rdx,[rip+0x3896]        # 0x14000ac60
   1400073ca:	lea    rcx,[rbp+0x48]
   1400073ce:	call   0x140006566
   1400073d3:	call   0x140005d6c
   1400073d8:	mov    QWORD PTR [rbp+0x20],rax
   1400073dc:	lea    rax,[rip+0xffffffffffffbbc1]        # 0x140002fa4
   1400073e3:	add    rsp,0x20
   1400073e7:	pop    rbp
   1400073e8:	ret    
   1400073e9:	int3   
   1400073ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400073ef:	push   rbp
   1400073f0:	sub    rsp,0x20
   1400073f4:	mov    rbp,rdx
   1400073f7:	xor    r8d,r8d
   1400073fa:	mov    dl,0x1
   1400073fc:	mov    rcx,QWORD PTR [rbp+0x80]
   140007403:	call   0x140002a14
   140007408:	xor    edx,edx
   14000740a:	xor    ecx,ecx
   14000740c:	call   0x140006566
   140007411:	nop
   140007412:	int3   
   140007413:	int3   
   140007414:	int3   
   140007415:	int3   
   140007416:	int3   
   140007417:	int3   
   140007418:	rex push rbp
   14000741a:	sub    rsp,0x20
   14000741e:	mov    rbp,rdx
   140007421:	mov    rdx,QWORD PTR [rbp+0x28]
   140007425:	mov    rcx,QWORD PTR [rbp+0x30]
   140007429:	call   0x140001a80
   14000742e:	add    rsp,0x20
   140007432:	pop    rbp
   140007433:	ret    
   140007434:	mov    QWORD PTR [rsp+0x10],rdx
   140007439:	push   rbx
   14000743a:	push   rbp
   14000743b:	sub    rsp,0x28
   14000743f:	mov    rbp,rdx
   140007442:	mov    rbx,QWORD PTR [rbp+0x78]
   140007446:	jmp    0x140007455
   140007448:	mov    rcx,rbx
   14000744b:	call   QWORD PTR [rip+0xf67]        # 0x1400083b8
   140007451:	add    rbx,0x10
   140007455:	cmp    rbx,QWORD PTR [rbp+0x60]
   140007459:	jne    0x140007448
   14000745b:	xor    edx,edx
   14000745d:	xor    ecx,ecx
   14000745f:	call   0x140006566
   140007464:	nop
   140007465:	int3   
   140007466:	int3   
   140007467:	int3   
   140007468:	int3   
   140007469:	int3   
   14000746a:	int3   
   14000746b:	rex push rbp
   14000746d:	sub    rsp,0x20
   140007471:	mov    rbp,rdx
   140007474:	mov    rdx,QWORD PTR [rbp+0x28]
   140007478:	mov    rcx,QWORD PTR [rbp+0x30]
   14000747c:	call   0x140001a80
   140007481:	add    rsp,0x20
   140007485:	pop    rbp
   140007486:	ret    
   140007487:	mov    QWORD PTR [rsp+0x10],rdx
   14000748c:	push   rbx
   14000748d:	push   rbp
   14000748e:	sub    rsp,0x28
   140007492:	mov    rbp,rdx
   140007495:	mov    rbx,QWORD PTR [rbp+0x78]
   140007499:	jmp    0x1400074a8
   14000749b:	mov    rcx,rbx
   14000749e:	call   QWORD PTR [rip+0xf14]        # 0x1400083b8
   1400074a4:	add    rbx,0x10
   1400074a8:	cmp    rbx,QWORD PTR [rbp+0x70]
   1400074ac:	jne    0x14000749b
   1400074ae:	xor    edx,edx
   1400074b0:	xor    ecx,ecx
   1400074b2:	call   0x140006566
   1400074b7:	nop
   1400074b8:	int3   
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	int3   
   1400074bd:	int3   
   1400074be:	rex push rbp
   1400074c0:	sub    rsp,0x20
   1400074c4:	mov    rbp,rdx
   1400074c7:	mov    rax,QWORD PTR [rcx]
   1400074ca:	cmp    DWORD PTR [rax],0xc0000194
   1400074d0:	jne    0x1400074d9
   1400074d2:	call   0x140003514
   1400074d7:	jmp    0x1400074db
   1400074d9:	xor    eax,eax
   1400074db:	add    rsp,0x20
   1400074df:	pop    rbp
   1400074e0:	ret    
   1400074e1:	int3   
   1400074e2:	int3   
   1400074e3:	int3   
   1400074e4:	int3   
   1400074e5:	int3   
   1400074e6:	int3   
   1400074e7:	int3   
   1400074e8:	lea    rcx,[rdx+0x78]
   1400074ef:	jmp    0x14000578c
   1400074f4:	lea    rcx,[rdx+0x60]
   1400074fb:	jmp    0x14000578c
   140007500:	int3   
   140007501:	int3   
   140007502:	int3   
   140007503:	int3   
   140007504:	int3   
   140007505:	int3   
   140007506:	lea    rcx,[rdx+0x38]
   14000750d:	jmp    0x14000578c
   140007512:	lea    rcx,[rdx+0x38]
   140007519:	jmp    0x14000578c
   14000751e:	int3   
   14000751f:	int3   
   140007520:	int3   
   140007521:	int3   
   140007522:	int3   
   140007523:	int3   
   140007524:	mov    rcx,QWORD PTR [rdx+0x58]
   14000752b:	jmp    0x140005dec
   140007530:	lea    rcx,[rdx+0x58]
   140007537:	jmp    0x1400057c4
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	int3   
   140007541:	int3   
   140007542:	mov    rcx,QWORD PTR [rdx+0xd0]
   140007549:	jmp    0x140005dec
   14000754e:	int3   
   14000754f:	int3   
   140007550:	int3   
   140007551:	int3   
   140007552:	int3   
   140007553:	int3   
   140007554:	mov    rcx,QWORD PTR [rdx+0x40]
   14000755b:	jmp    0x14000645c
   140007560:	int3   
   140007561:	int3   
   140007562:	int3   
   140007563:	int3   
   140007564:	int3   
   140007565:	int3   
   140007566:	rex push rbp
   140007568:	sub    rsp,0x20
   14000756c:	mov    rbp,rdx
   14000756f:	mov    rax,QWORD PTR [rcx]
   140007572:	mov    rdx,rcx
   140007575:	mov    ecx,DWORD PTR [rax]
   140007577:	call   0x14000670e
   14000757c:	nop
   14000757d:	add    rsp,0x20
   140007581:	pop    rbp
   140007582:	ret    
   140007583:	int3   
   140007584:	int3   
   140007585:	int3   
   140007586:	int3   
   140007587:	int3   
   140007588:	int3   
   140007589:	int3   
   14000758a:	rex push rbp
   14000758c:	sub    rsp,0x20
   140007590:	mov    rbp,rdx
   140007593:	mov    ecx,0x8
   140007598:	call   0x140006b64
   14000759d:	nop
   14000759e:	add    rsp,0x20
   1400075a2:	pop    rbp
   1400075a3:	ret    
   1400075a4:	int3   
   1400075a5:	int3   
   1400075a6:	int3   
   1400075a7:	int3   
   1400075a8:	int3   
   1400075a9:	int3   
   1400075aa:	int3   
   1400075ab:	int3   
   1400075ac:	int3   
   1400075ad:	int3   
   1400075ae:	int3   
   1400075af:	int3   
   1400075b0:	rex push rbp
   1400075b2:	sub    rsp,0x20
   1400075b6:	mov    rbp,rdx
   1400075b9:	mov    rax,QWORD PTR [rcx]
   1400075bc:	xor    ecx,ecx
   1400075be:	cmp    DWORD PTR [rax],0xc0000005
   1400075c4:	sete   cl
   1400075c7:	mov    eax,ecx
   1400075c9:	add    rsp,0x20
   1400075cd:	pop    rbp
   1400075ce:	ret    
   1400075cf:	int3   
   1400075d0:	int3   
   1400075d1:	int3   
   1400075d2:	int3   
   1400075d3:	int3   
   1400075d4:	int3   
   1400075d5:	int3   
   1400075d6:	int3   
   1400075d7:	int3   
   1400075d8:	int3   
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	lea    rcx,[rip+0x5a79]        # 0x14000d060
   1400075e7:	rex.W jmp QWORD PTR [rip+0xb5a]        # 0x140008148
   1400075ee:	int3   
   1400075ef:	int3   
   1400075f0:	int3   
   1400075f1:	int3   
   1400075f2:	int3   
   1400075f3:	int3   
   1400075f4:	int3   
   1400075f5:	int3   
   1400075f6:	int3   
   1400075f7:	int3   
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	lea    rax,[rip+0x14d9]        # 0x140008ae0
   140007607:	lea    rcx,[rip+0x5bc2]        # 0x14000d1d0
   14000760e:	mov    QWORD PTR [rip+0x5bbb],rax        # 0x14000d1d0
   140007615:	jmp    0x14000645c
   14000761a:	int3   
   14000761b:	int3   
   14000761c:	int3   
   14000761d:	int3   
   14000761e:	int3   
   14000761f:	int3   
   140007620:	lea    rax,[rip+0x14b9]        # 0x140008ae0
   140007627:	lea    rcx,[rip+0x617a]        # 0x14000d7a8
   14000762e:	mov    QWORD PTR [rip+0x6173],rax        # 0x14000d7a8
   140007635:	jmp    0x14000645c

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	outs   dx,BYTE PTR ds:[rsi]
   140008001:	rol    DWORD PTR [rax],0x0
	...
   140008010:	sahf   
   140008011:	mov    esi,0x0
   140008016:	add    BYTE PTR [rax],al
   140008018:	shl    BYTE PTR [rsi+0x0],cl
   14000801e:	add    BYTE PTR [rax],al
   140008020:	mov    esp,0xb6
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    BYTE PTR [rsi+rsi*4+0x0],ah
   14000802e:	add    BYTE PTR [rax],al
   140008030:	xchg   edx,eax
   140008031:	mov    dh,0x0
   140008033:	add    BYTE PTR [rax],al
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rsi+0xbf],dh
   14000803d:	add    BYTE PTR [rax],al
   14000803f:	add    dh,cl
   140008041:	mov    edi,0x0
	...
   14000804e:	add    BYTE PTR [rax],al
   140008050:	nop
   140008051:	mov    esi,0x0
	...
   14000805e:	add    BYTE PTR [rax],al
   140008060:	rol    cl,cl
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	(bad)  
   140008069:	rol    DWORD PTR [rax],0x0
	...
   140008078:	cli    
   140008079:	mov    bh,0x0
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    dl,ch
   140008081:	mov    esi,0x0
   140008086:	add    BYTE PTR [rax],al
   140008088:	(bad)  
   140008089:	mov    bh,0x0
	...
   140008097:	add    BYTE PTR [rsi+0xc1],ch
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rdi+rsi*4],dh
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	rol    cl,0x0
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    BYTE PTR [rax+0xbe],dh
	...
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    dh,al
   1400080c1:	mov    esi,0x0
	...
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400080d1:	mov    edi,0x0
	...
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	(bad)  
   1400080e1:	mov    eax,0x0
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	(bad)  
   1400080e9:	mov    bh,0x0
   1400080eb:	add    BYTE PTR [rax],al
   1400080ed:	add    BYTE PTR [rax],al
   1400080ef:	add    BYTE PTR [rsi],al
   1400080f1:	mov    edi,0x0
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	js     0x1400080b1
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	sub    bh,BYTE PTR [rax+0x0]
	...
   14000810e:	add    BYTE PTR [rax],al
   140008110:	rex.W mov dil,0x0
	...
   14000811f:	add    ah,cl
   140008121:	mov    bh,0x0
   140008123:	add    BYTE PTR [rax],al
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    BYTE PTR [rax+0xb7],bh
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    dh,ah
   140008131:	mov    bh,0x0
	...
   14000813f:	add    BYTE PTR [rsi],cl
   140008141:	mov    bh,0x0
   140008143:	add    BYTE PTR [rax],al
   140008145:	add    BYTE PTR [rax],al
   140008147:	add    BYTE PTR [rax-0x42],cl
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	(bad)  
   140008151:	mov    esi,0x0
   140008156:	add    BYTE PTR [rax],al
   140008158:	js     0x140008118
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	cli    
   140008161:	mov    esi,0x0
   140008166:	add    BYTE PTR [rax],al
   140008168:	adc    al,0xbf
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	add    BYTE PTR [rax],al
   14000816e:	add    BYTE PTR [rax],al
   140008170:	and    BYTE PTR [rsi+0x0],bh
	...
   14000817e:	add    BYTE PTR [rax],al
   140008180:	test   al,0xb7
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	mov    ?,WORD PTR [rdi+0x0]
	...
   140008196:	add    BYTE PTR [rax],al
   140008198:	in     al,0xb6
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	repnz mov dh,0x0
   1400081a3:	add    BYTE PTR [rax],al
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    BYTE PTR [rdx],al
   1400081a9:	mov    bh,0x0
	...
   1400081b7:	add    BYTE PTR [rdx-0x41],al
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	(bad)  
   1400081c1:	mov    esi,0x0
	...
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	test   BYTE PTR [rdi+0x0],bh
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	xchg   esp,eax
   1400081d9:	mov    edi,0x0
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	(bad)  
   1400081e1:	mov    edi,0x0
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	jb     0x1400081a9
	...
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	and    al,0xbf
	...
   140008206:	add    BYTE PTR [rax],al
   140008208:	cwde   
   140008209:	mov    ch,0x0
   14000820b:	add    BYTE PTR [rax],al
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rdx+0xb5],cl
   140008215:	add    BYTE PTR [rax],al
   140008217:	add    BYTE PTR [rbp+rsi*4+0x0],dh
   14000821b:	add    BYTE PTR [rax],al
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    BYTE PTR [rsi+0xb5],ah
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rsi+0xb5],dh
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    al,dl
   140008231:	mov    ch,0x0
   140008233:	add    BYTE PTR [rax],al
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    al,bl
   140008239:	mov    ch,0x0
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rax-0x4c],dh
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	push   rdx
   140008249:	mov    ch,0x0
   14000824b:	add    BYTE PTR [rax],al
   14000824d:	add    BYTE PTR [rax],al
   14000824f:	add    BYTE PTR [rdx],dh
   140008251:	mov    ch,0x0
   140008253:	add    BYTE PTR [rax],al
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    BYTE PTR [rax],ch
   140008259:	mov    ch,0x0
   14000825b:	add    BYTE PTR [rax],al
   14000825d:	add    BYTE PTR [rax],al
   14000825f:	add    BYTE PTR [rax],ah
   140008261:	mov    ch,0x0
   140008263:	add    BYTE PTR [rax],al
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rdx],al
   140008269:	mov    ch,0x0
   14000826b:	add    BYTE PTR [rax],al
   14000826d:	add    BYTE PTR [rax],al
   14000826f:	add    dl,ah
   140008271:	mov    ch,0x0
   140008273:	add    BYTE PTR [rax],al
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    dh,dh
   140008279:	mov    ch,0x0
   14000827b:	add    BYTE PTR [rax],al
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rdx],al
   140008281:	mov    dh,0x0
   140008283:	add    BYTE PTR [rax],al
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rdx],bl
   140008289:	mov    dh,0x0
   14000828b:	add    BYTE PTR [rax],al
   14000828d:	add    BYTE PTR [rax],al
   14000828f:	add    BYTE PTR [rsi+rsi*4],ah
   140008292:	add    BYTE PTR [rax],al
   140008294:	add    BYTE PTR [rax],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	enter  0xb5,0x0
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	xor    BYTE PTR [rsi+0x0],dh
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	(bad)  
   1400082a9:	mov    ah,0x0
   1400082ab:	add    BYTE PTR [rax],al
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    BYTE PTR [rsi-0x4a],bh
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	int3   
   1400082b9:	mov    ah,0x0
   1400082bb:	add    BYTE PTR [rax],al
   1400082bd:	add    BYTE PTR [rax],al
   1400082bf:	add    BYTE PTR [rsi+rsi*4+0x0],dl
   1400082c3:	add    BYTE PTR [rax],al
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    BYTE PTR [rsp+rsi*4+0x0],dh
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	xchg   esp,eax
   1400082d1:	mov    ah,0x0
   1400082d3:	add    BYTE PTR [rax],al
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rax+0xb4],cl
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rsp+rsi*4+0x0],bh
   1400082e3:	add    BYTE PTR [rax],al
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    BYTE PTR [rsi+rsi*4+0x0],bl
   1400082eb:	add    BYTE PTR [rax],al
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    BYTE PTR [rsi-0x4a],ah
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	pop    rsi
   1400082f9:	mov    ch,0x0
   1400082fb:	add    BYTE PTR [rax],al
   1400082fd:	add    BYTE PTR [rax],al
   1400082ff:	add    BYTE PTR [rsi+rsi*4+0x0],dh
   140008303:	add    BYTE PTR [rax],al
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    BYTE PTR [rsi],dl
   140008309:	mov    esi,0x0
   14000830e:	add    BYTE PTR [rax],al
   140008310:	or     al,0xbe
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	(bad)  
   140008319:	mov    ebp,0x0
	...
   140008326:	add    BYTE PTR [rax],al
   140008328:	xor    cl,al
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	add    BYTE PTR [rax],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	(bad)  
   140008331:	rol    DWORD PTR [rax],0x0
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	cld    
   140008339:	rol    BYTE PTR [rax],0x0
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	loop   0x140008302
   140008342:	add    BYTE PTR [rax],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	rol    al,1
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	rex.WX rol QWORD PTR [rax],0x0
	...
   140008360:	and    al,0xbd
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	or     al,0xbd
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	fdivr  DWORD PTR [rax+rax*1+0x0]
   140008377:	add    BYTE PTR [rsi+0xbc],bh
   14000837d:	add    BYTE PTR [rax],al
   14000837f:	add    BYTE PTR [rsi+0xbc],bl
   140008385:	add    BYTE PTR [rax],al
   140008387:	add    BYTE PTR [rdx+0xbc],al
   14000838d:	add    BYTE PTR [rax],al
   14000838f:	add    BYTE PTR [rax-0x44],bl
   140008392:	add    BYTE PTR [rax],al
   140008394:	add    BYTE PTR [rax],al
   140008396:	add    BYTE PTR [rax],al
   140008398:	rex mov esp,0x0
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	and    al,0xbc
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	add    BYTE PTR [rax],al
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	or     bh,BYTE PTR [rax+rax*1+0x0]
   1400083af:	add    al,cl
   1400083b1:	mov    ebx,0x0
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	mov    dl,0xbb
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	add    BYTE PTR [rax],al
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	nop
   1400083c1:	mov    ebx,0x0
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	jbe    0x140008385
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	push   rsp
   1400083d1:	mov    ebx,0x0
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	ss mov ebx,0x0
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	in     al,dx
   1400083e1:	mov    edx,0x0
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	mov    dl,0xba
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	xchg   edx,eax
   1400083f1:	mov    edx,0x0
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	jo     0x1400083b4
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	add    BYTE PTR [rax],al
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	cmp    al,0xbd
   140008402:	add    BYTE PTR [rax],al
   140008404:	add    BYTE PTR [rax],al
   140008406:	add    BYTE PTR [rax],al
   140008408:	pop    rdx
   140008409:	mov    ebp,0x0
   14000840e:	add    BYTE PTR [rax],al
   140008410:	test   BYTE PTR [rbp+0x0],bh
   140008416:	add    BYTE PTR [rax],al
   140008418:	scas   al,BYTE PTR es:[rdi]
   140008419:	mov    ebp,0x0
   14000841e:	add    BYTE PTR [rax],al
   140008420:	in     al,0xbb
   140008422:	add    BYTE PTR [rax],al
   140008424:	add    BYTE PTR [rax],al
   140008426:	add    BYTE PTR [rax],al
   140008428:	push   rsp
   140008429:	mov    edx,0x0
   14000842e:	add    BYTE PTR [rax],al
   140008430:	cmp    al,0xba
   140008432:	add    BYTE PTR [rax],al
   140008434:	add    BYTE PTR [rax],al
   140008436:	add    BYTE PTR [rax],al
   140008438:	and    bh,BYTE PTR [rdx+0x0]
   14000843e:	add    BYTE PTR [rax],al
   140008440:	lock mov ecx,0x0
   140008446:	add    BYTE PTR [rax],al
   140008448:	fdivr  QWORD PTR [rcx+0x0]
   14000844e:	add    BYTE PTR [rax],al
   140008450:	test   al,0xb9
   140008452:	add    BYTE PTR [rax],al
   140008454:	add    BYTE PTR [rax],al
   140008456:	add    BYTE PTR [rax],al
   140008458:	nop
   140008459:	mov    ecx,0x0
   14000845e:	add    BYTE PTR [rax],al
   140008460:	or     BYTE PTR [rbx+0x0],bh
	...
   14000846e:	add    BYTE PTR [rax],al
   140008470:	sbb    BYTE PTR [rdx],0x0
   140008473:	rex add DWORD PTR [rax],eax
   140008476:	add    BYTE PTR [rax],al
   140008478:	and    BYTE PTR [rdi+0x0],ch
   14000847b:	rex add DWORD PTR [rax],eax
	...
   140008486:	add    BYTE PTR [rax],al
   140008488:	and    BYTE PTR [rcx+0x0],0x40
   14000848c:	add    DWORD PTR [rax],eax
   14000848e:	add    BYTE PTR [rax],al
   140008490:	add    BYTE PTR [rax],dl
   140008492:	add    BYTE PTR [rax+0x1],al
   140008495:	add    BYTE PTR [rax],al
   140008497:	add    BYTE PTR [rax],dl
   140008499:	adc    BYTE PTR [rax],al
   14000849b:	rex add DWORD PTR [rax],eax
	...
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	movabs al,ds:0xf000000001400060
   1400084b9:	data16 add BYTE PTR [rax+0x1],al
	...
   1400084c9:	adc    BYTE PTR [rax],al
   1400084cb:	add    BYTE PTR [rax],dl
   1400084cd:	adc    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rax+0x10],dh
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	loopne 0x1400084e6
   1400084d6:	add    BYTE PTR [rax],al
   1400084d8:	xor    BYTE PTR [rcx],dl
   1400084da:	add    BYTE PTR [rax],al
   1400084dc:	(bad)  
   1400084dd:	adc    DWORD PTR [rax],eax
   1400084df:	add    BYTE PTR [rax],ah
   1400084e1:	adc    al,BYTE PTR [rax]
   1400084e3:	add    BYTE PTR [rax],dh
   1400084e5:	adc    al,BYTE PTR [rax]
   1400084e7:	add    BYTE PTR [rax+0x12],al
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	loopne 0x140008500
   1400084ee:	add    BYTE PTR [rax],al
   1400084f0:	rex adc eax,DWORD PTR [rax]
   1400084f3:	add    BYTE PTR [rax],dh
   1400084f5:	adc    al,0x0
   1400084f7:	add    BYTE PTR [rax-0x2fffffec],dl
   1400084fd:	adc    al,0x0
   1400084ff:	add    BYTE PTR [rax],ah
   140008501:	adc    eax,0x15900000
   140008506:	add    BYTE PTR [rax],al
   140008508:	loopne 0x14000851f
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	xor    BYTE PTR [rsi],dl
   14000850e:	add    BYTE PTR [rax],al
   140008510:	rcl    BYTE PTR [rdi],1
   140008512:	add    BYTE PTR [rax],al
   140008514:	push   rax
   140008515:	sbb    BYTE PTR [rax],al
   140008517:	add    al,al
   140008519:	sbb    DWORD PTR [rax],eax
   14000851b:	add    al,dh
   14000851d:	sbb    DWORD PTR [rax],eax
   14000851f:	add    BYTE PTR [rax-0xfffffe6],al
   140008525:	sbb    al,BYTE PTR [rax]
   140008527:	add    BYTE PTR [rax],dl
   140008529:	sbb    eax,DWORD PTR [rax]
   14000852b:	add    BYTE PTR [rax+0x1b],dl
   14000852e:	add    BYTE PTR [rax],al
   140008530:	adc    BYTE PTR [rip+0x1d500000],bl        # 0x15d508536
   140008536:	add    BYTE PTR [rax],al
   140008538:	push   rax
   140008539:	(bad)  
   14000853a:	add    BYTE PTR [rax],al
   14000853c:	xor    BYTE PTR [rdi],bl
   14000853e:	add    BYTE PTR [rax],al
   140008540:	rcr    BYTE PTR [rdi],1
   140008542:	add    BYTE PTR [rax],al
   140008544:	(bad)  
   140008545:	and    al,BYTE PTR [rax]
   140008547:	add    al,dh
   140008549:	and    eax,DWORD PTR [rax]
   14000854b:	add    al,dl
   14000854d:	and    al,0x0
   14000854f:	add    al,dl
   140008551:	and    eax,0x26300000
   140008556:	add    BYTE PTR [rax],al
   140008558:	adc    BYTE PTR [rdi],ah
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	nop
   14000855d:	xor    al,BYTE PTR [rax]
   14000855f:	add    BYTE PTR [rax-0x4fffffce],ah
   140008565:	xor    al,BYTE PTR [rax]
   140008567:	add    BYTE PTR [rax],dh
   140008569:	xor    eax,0x37700000
   14000856e:	add    BYTE PTR [rax],al
   140008570:	(bad)  
   140008571:	rex.XB add BYTE PTR [r8],al
   140008574:	rex
   140008575:	add    BYTE PTR [rax],r8b
   140008578:	adc    BYTE PTR [rbp+0x0],al
   14000857b:	add    BYTE PTR [rax],dh
   14000857d:	add    BYTE PTR [r8],r8b
   140008580:	nop
   140008581:	add    BYTE PTR [r8],r8b
   140008584:	add    BYTE PTR [rsi+0x0],al
   140008587:	add    BYTE PTR [rax+0x46],dl
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	nop
   14000858d:	rex.RX add BYTE PTR [rax],r8b
   140008590:	rol    BYTE PTR [rsi+0x0],1
   140008593:	add    BYTE PTR [rax],al
   140008595:	rex.RXB add BYTE PTR [r8],r8b
   140008598:	push   rax
   140008599:	rex.RXB add BYTE PTR [r8],r8b
   14000859c:	add    BYTE PTR [rax+0x0],cl
   14000859f:	add    al,dh
   1400085a1:	rex.W add BYTE PTR [rax],al
   1400085a4:	ror    BYTE PTR [rbp+0x0],0x0
   1400085a8:	rex pop rax
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	push   rax
   1400085ad:	pop    rax
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	(bad)  
   1400085b1:	pop    rax
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	loopne 0x14000860f
   1400085b6:	add    BYTE PTR [rax],al
   1400085b8:	add    BYTE PTR [rbp+0x0],bl
   1400085bb:	add    BYTE PTR [rax],dh
   1400085bd:	pop    rdi
   1400085be:	add    BYTE PTR [rax],al
   1400085c0:	movabs al,ds:0x80000060a000005f
   1400085c9:	(bad)  
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	mov    al,0x63
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	adc    BYTE PTR [rax+rax*1+0x0],ah
   1400085d4:	push   rax
   1400085d5:	add    BYTE PTR fs:[rax],al
   1400085d8:	and    BYTE PTR [rax+rax*1+0x0],0xb0
   1400085dd:	data16 add BYTE PTR [rax],al
   1400085e0:	lock data16 add BYTE PTR [rax],al
   1400085e4:	loopne 0x14000864f
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	loopne 0x140008655
   1400085ea:	add    BYTE PTR [rax],al
   1400085ec:	lock imul eax,DWORD PTR [rax],0x0
   1400085f0:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400085f4:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400085f8:	and    BYTE PTR [rax+rax*1+0x0],ch
   1400085fc:	xor    BYTE PTR [rax+rax*1+0x0],ch
   140008600:	rex ins BYTE PTR es:[rdi],dx
   140008602:	add    BYTE PTR [rax],al
   140008604:	push   rax
   140008605:	ins    BYTE PTR es:[rdi],dx
   140008606:	add    BYTE PTR [rax],al
   140008608:	loopne 0x140008676
   14000860a:	add    BYTE PTR [rax],al
   14000860c:	rex ins DWORD PTR es:[rdi],dx
   14000860e:	add    BYTE PTR [rax],al
   140008610:	(bad)  
   140008611:	ins    DWORD PTR es:[rdi],dx
   140008612:	add    BYTE PTR [rax],al
   140008614:	loopne 0x140008683
   140008616:	add    BYTE PTR [rax],al
   140008618:	add    BYTE PTR [rsi+0x0],ch
   14000861b:	add    BYTE PTR [rax],ah
   14000861d:	outs   dx,BYTE PTR ds:[rsi]
   14000861e:	add    BYTE PTR [rax],al
   140008620:	rex outs dx,BYTE PTR ds:[rsi]
   140008622:	add    BYTE PTR [rax],al
   140008624:	(bad)  
   140008625:	outs   dx,BYTE PTR ds:[rsi]
   140008626:	add    BYTE PTR [rax],al
   140008628:	sub    BYTE PTR [rsi+0x0],0x0
   14000862c:	add    BYTE PTR [rdi+0x0],ch
   14000862f:	add    al,ah
   140008631:	jne    0x140008633
   140008633:	add    BYTE PTR [rax],al
   140008635:	jbe    0x140008637
   140008637:	add    BYTE PTR [rax],ah
   140008639:	jbe    0x14000863b
   14000863b:	add    BYTE PTR [rax],al
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    BYTE PTR [rdx],ah
   140008641:	add    eax,0x11993
   140008646:	add    BYTE PTR [rax],al
   140008648:	ins    BYTE PTR es:[rdi],dx
   140008649:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140008652:	add    BYTE PTR [rax],al
   140008654:	add    al,BYTE PTR [rax]
   140008656:	add    BYTE PTR [rax],al
   140008658:	clc    
   140008659:	test   al,0x0
   14000865b:	add    BYTE PTR [rax],ah
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    BYTE PTR [rax],al
   140008661:	add    BYTE PTR [rax],al
   140008663:	add    BYTE PTR [rcx],al
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    BYTE PTR [rdx],ah
   140008669:	add    eax,0x11993
   14000866e:	add    BYTE PTR [rax],al
   140008670:	ins    BYTE PTR es:[rdi],dx
   140008671:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	add    al,BYTE PTR [rax]
   14000867e:	add    BYTE PTR [rax],al
   140008680:	and    BYTE PTR [rcx+0x200000],ch
   140008686:	add    BYTE PTR [rax],al
   140008688:	add    BYTE PTR [rax],al
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	add    DWORD PTR [rax],eax
   14000868e:	add    BYTE PTR [rax],al
   140008690:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a029
   140008696:	add    BYTE PTR [rax],al
   140008698:	je     0x140008643
	...
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	add    eax,DWORD PTR [rax]
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	test   rax,0x200000
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	add    BYTE PTR [rax],al
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	add    DWORD PTR [rax],eax
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001a051
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	je     0x14000866b
	...
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	add    eax,DWORD PTR [rax]
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	sub    BYTE PTR [rcx+0x200000],0x0
   1400086d7:	add    BYTE PTR [rax],al
   1400086d9:	add    BYTE PTR [rax],al
   1400086db:	add    BYTE PTR [rcx],al
   1400086dd:	add    BYTE PTR [rax],al
   1400086df:	add    BYTE PTR [rax],dh
   1400086e1:	pop    rdi
   1400086e2:	add    BYTE PTR [rax+0x1],al
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    al,dh
   1400086e9:	sbb    al,BYTE PTR [rax]
   1400086eb:	rex add DWORD PTR [rax],eax
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	movabs al,ds:0x730000000140005f
   1400086f9:	je     0x14000876d
   1400086fb:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6f7420
   140008702:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008706:	add    BYTE PTR [ecx+0x6e],ch
   14000870a:	jbe    0x14000876d
   14000870c:	ins    BYTE PTR es:[rdi],dx
   14000870d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   140008715:	and    BYTE PTR [eax+0x6f],dh
   140008719:	jae    0x140008784
   14000871b:	je     0x140008786
   14000871d:	outs   dx,DWORD PTR ds:[rsi]
   14000871e:	outs   dx,BYTE PTR ds:[rsi]
   14000871f:	add    BYTE PTR [rax],dl
   140008721:	add    BYTE PTR fs:[rax+0x1],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    BYTE PTR [rax],dh
   140008729:	rol    BYTE PTR [rax],cl
   14000872b:	rex add DWORD PTR [rax],eax
   14000872e:	add    BYTE PTR [rax],al
   140008730:	rcl    dl,1
   140008732:	add    BYTE PTR [rax+0x1],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    BYTE PTR [rsi],dh
   140008739:	add    BYTE PTR [rax],bh
   14000873b:	add    BYTE PTR [rax],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rax-0x79],bl
   140008742:	add    BYTE PTR [rax+0x1],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rsi],dh
   140008749:	add    BYTE PTR [rax],bh
   14000874b:	add    BYTE PTR [rax],al
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    BYTE PTR [rax+0x1400087],dl
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rbp+0x0],ah
   14000875a:	js     0x14000875c
   14000875c:	je     0x14000875e
   14000875e:	sub    eax,0x73006d00
   140008763:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900fe69
   140008769:	add    BYTE PTR [rsi+0x0],ch
   14000876c:	sub    eax,0x6f006300
   140008771:	add    BYTE PTR [rbp+0x0],ch
   140008774:	sub    eax,0x6c006f00
   140008779:	add    BYTE PTR [rbp+0x0],ah
   14000877c:	xor    eax,DWORD PTR [rax]
   14000877e:	xor    al,BYTE PTR [rax]
   140008780:	sub    eax,0x31006c00
   140008785:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00b88b
   14000878b:	add    BYTE PTR [rcx],dh
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rbp+0x0],ah
   140008792:	js     0x140008794
   140008794:	je     0x140008796
   140008796:	sub    eax,0x73006d00
   14000879b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900fea1
   1400087a1:	add    BYTE PTR [rsi+0x0],ch
   1400087a4:	sub    eax,0x6f006300
   1400087a9:	add    BYTE PTR [rbp+0x0],ch
   1400087ac:	sub    eax,0x6c006f00
   1400087b1:	add    BYTE PTR [rbp+0x0],ah
   1400087b4:	xor    eax,DWORD PTR [rax]
   1400087b6:	xor    al,BYTE PTR [rax]
   1400087b8:	sub    eax,0x31006c00
   1400087bd:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00b8c3
   1400087c3:	add    BYTE PTR [rbx],dh
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rax+0x0],al
   1400087ca:	rex.X add BYTE PTR [rax],al
   1400087cd:	add    BYTE PTR [rax],al
   1400087cf:	add    al,dh
   1400087d1:	xchg   DWORD PTR [rax],eax
   1400087d3:	rex add DWORD PTR [rax],eax
   1400087d6:	add    BYTE PTR [rax],al
   1400087d8:	add    BYTE PTR [rdx+0x0],al
   1400087dc:	add    BYTE PTR [rax],al
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	mov    BYTE PTR [rax],al
   1400087e3:	rex add DWORD PTR [rax],eax
	...
   1400087ee:	add    BYTE PTR [rax],al
   1400087f0:	add    BYTE PTR gs:[rax+0x0],bh
   1400087f4:	je     0x1400087f6
   1400087f6:	sub    eax,0x73006d00
   1400087fb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900ff01
   140008801:	add    BYTE PTR [rsi+0x0],ch
   140008804:	sub    eax,0x74006e00
   140008809:	add    BYTE PTR [rbp+0x0],dh
   14000880c:	jae    0x14000880e
   14000880e:	add    BYTE PTR gs:[rdx+0x0],dh
   140008812:	sub    eax,0x65006d00
   140008817:	add    BYTE PTR [rbx+0x0],dh
   14000881a:	jae    0x14000881c
   14000881c:	(bad)  
   14000881d:	add    BYTE PTR [rdi+0x0],ah
   140008820:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x17100f427
   140008827:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00b92d
   14000882d:	add    BYTE PTR [rcx],dh
	...
   14000883f:	add    BYTE PTR [rbp+0x0],ah
   140008842:	js     0x140008844
   140008844:	je     0x140008846
   140008846:	sub    eax,0x73006d00
   14000884b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900ff51
   140008851:	add    BYTE PTR [rsi+0x0],ch
   140008854:	sub    eax,0x74006e00
   140008859:	add    BYTE PTR [rbp+0x0],dh
   14000885c:	jae    0x14000885e
   14000885e:	add    BYTE PTR gs:[rdx+0x0],dh
   140008862:	sub    eax,0x65006d00
   140008867:	add    BYTE PTR [rbx+0x0],dh
   14000886a:	jae    0x14000886c
   14000886c:	(bad)  
   14000886d:	add    BYTE PTR [rdi+0x0],ah
   140008870:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x17100f477
   140008877:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00b97d
   14000887d:	add    BYTE PTR [rdx],dh
	...
   14000888f:	add    BYTE PTR [rbp+0x78],ah
   140008892:	je     0x1400088c1
   140008894:	ins    DWORD PTR es:[rdi],dx
   140008895:	jae    0x1400088c4
   140008897:	ja     0x140008902
   140008899:	outs   dx,BYTE PTR ds:[rsi]
   14000889a:	sub    eax,0x7375746e
   14000889f:	gs jb  0x1400088cf
   1400088a2:	ins    DWORD PTR es:[rdi],dx
   1400088a3:	gs jae 0x140008919
   1400088a6:	(bad)  
   1400088a7:	addr32 gs sub eax,0x312d316c
   1400088ae:	sub    eax,0x6c642e31
   1400088b3:	ins    BYTE PTR es:[rdi],dx
	...
   1400088c0:	gs js  0x140008937
   1400088c3:	sub    eax,0x772d736d
   1400088c8:	imul   ebp,DWORD PTR [rsi+0x2d],0x7375746e
   1400088cf:	gs jb  0x1400088ff
   1400088d2:	ja     0x14000893d
   1400088d4:	outs   dx,BYTE PTR ds:[rsi]
   1400088d5:	outs   dx,DWORD PTR fs:[rsi]
   1400088d7:	ja     0x140008906
   1400088d9:	ins    BYTE PTR es:[rdi],dx
   1400088da:	xor    DWORD PTR [rip+0x2e332d31],ebp        # 0x16e33b611
   1400088e0:	fs ins BYTE PTR es:[rdi],dx
   1400088e2:	ins    BYTE PTR es:[rdi],dx
   1400088e3:	add    BYTE PTR [rax],al
   1400088e5:	add    BYTE PTR [rax],al
   1400088e7:	add    BYTE PTR [rax+0x6c],al
   1400088ea:	add    BYTE PTR [rax+0x1],al
   1400088ed:	add    BYTE PTR [rax],al
   1400088ef:	add    BYTE PTR [rax],dh
   1400088f1:	ins    BYTE PTR es:[rdi],dx
   1400088f2:	add    BYTE PTR [rax+0x1],al
   1400088f5:	add    BYTE PTR [rax],al
   1400088f7:	add    BYTE PTR [rax],ah
   1400088f9:	ins    BYTE PTR es:[rdi],dx
   1400088fa:	add    BYTE PTR [rax+0x1],al
   1400088fd:	add    BYTE PTR [rax],al
   1400088ff:	add    BYTE PTR [rax+0x18],dl
   140008902:	add    BYTE PTR [rax+0x1],al
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rax],dh
   140008909:	adc    DWORD PTR [rax],eax
   14000890b:	rex add DWORD PTR [rax],eax
   14000890e:	add    BYTE PTR [rax],al
   140008910:	xor    BYTE PTR [rsi],dl
   140008912:	add    BYTE PTR [rax+0x1],al
   140008915:	add    BYTE PTR [rax],al
   140008917:	add    al,dl
   140008919:	(bad)  
   14000891a:	add    BYTE PTR [rax+0x1],al
   14000891d:	add    BYTE PTR [rax],al
   14000891f:	add    BYTE PTR [rax],ah
   140008921:	adc    eax,0x14000
   140008926:	add    BYTE PTR [rax],al
   140008928:	nop
   140008929:	adc    eax,0x14000
   14000892e:	add    BYTE PTR [rax],al
   140008930:	loopne 0x140008947
   140008932:	add    BYTE PTR [rax+0x1],al
   140008935:	add    BYTE PTR [rax],al
   140008937:	add    BYTE PTR [rax+0x64],dl
   14000893a:	add    BYTE PTR [rax+0x1],al
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    BYTE PTR [rax+0x64],dl
   140008942:	add    BYTE PTR [rax+0x1],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rax],dh
   140008949:	adc    al,0x0
   14000894b:	rex add DWORD PTR [rax],eax
   14000894e:	add    BYTE PTR [rax],al
   140008950:	nop
   140008951:	adc    al,0x0
   140008953:	rex add DWORD PTR [rax],eax
   140008956:	add    BYTE PTR [rax],al
   140008958:	rcl    BYTE PTR [rax+rax*1],1
   14000895b:	rex add DWORD PTR [rax],eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	push   rax
   140008961:	add    BYTE PTR fs:[rax+0x1],al
   140008965:	add    BYTE PTR [rax],al
   140008967:	add    BYTE PTR [rax+0x64],dl
   14000896a:	add    BYTE PTR [rax+0x1],al
   14000896d:	add    BYTE PTR [rax],al
   14000896f:	add    BYTE PTR [rax+0x13],al
   140008972:	add    BYTE PTR [rax+0x1],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    BYTE PTR [rax],ah
   140008979:	adc    al,BYTE PTR [rax]
   14000897b:	rex add DWORD PTR [rax],eax
   14000897e:	add    BYTE PTR [rax],al
   140008980:	and    BYTE PTR [rdx],dl
   140008982:	add    BYTE PTR [rax+0x1],al
   140008985:	add    BYTE PTR [rax],al
   140008987:	add    al,ah
   140008989:	adc    al,BYTE PTR [rax]
   14000898b:	rex add DWORD PTR [rax],eax
   14000898e:	add    BYTE PTR [rax],al
   140008990:	and    BYTE PTR [rdx],dl
   140008992:	add    BYTE PTR [rax+0x1],al
   140008995:	add    BYTE PTR [rax],al
   140008997:	add    BYTE PTR [rax],ah
   140008999:	adc    al,BYTE PTR [rax]
   14000899b:	rex add DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	xor    BYTE PTR [rdx],dl
   1400089a2:	add    BYTE PTR [rax+0x1],al
   1400089a5:	add    BYTE PTR [rax],al
   1400089a7:	add    al,ah
   1400089a9:	imul   eax,DWORD PTR [rax],0x40
   1400089ac:	add    DWORD PTR [rax],eax
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	add    BYTE PTR [rax+rax*1+0x40],ch
   1400089b4:	add    DWORD PTR [rax],eax
   1400089b6:	add    BYTE PTR [rax],al
   1400089b8:	lock imul eax,DWORD PTR [rax],0x40
   1400089bc:	add    DWORD PTR [rax],eax
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	shl    BYTE PTR [rip+0x14000],1        # 0x14001c9c6
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	push   rax
   1400089c9:	ins    BYTE PTR es:[rdi],dx
   1400089ca:	add    BYTE PTR [rax+0x1],al
   1400089cd:	add    BYTE PTR [rax],al
   1400089cf:	add    BYTE PTR [rax+0x12],al
   1400089d2:	add    BYTE PTR [rax+0x1],al
   1400089d5:	add    BYTE PTR [rax],al
   1400089d7:	add    BYTE PTR [rax],dl
   1400089d9:	ins    BYTE PTR es:[rdi],dx
   1400089da:	add    BYTE PTR [rax+0x1],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    BYTE PTR [rax],ah
   1400089e1:	adc    eax,0x14000
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	nop
   1400089e9:	adc    eax,0x14000
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	loopne 0x140008a07
   1400089f2:	add    BYTE PTR [rax+0x1],al
   1400089f5:	add    BYTE PTR [rax],al
   1400089f7:	add    BYTE PTR [rax],dh
   1400089f9:	add    BYTE PTR es:[rax+0x1],al
   1400089fd:	add    BYTE PTR [rax],al
   1400089ff:	add    BYTE PTR [rax],dl
   140008a01:	(bad)  
   140008a02:	add    BYTE PTR [rax+0x1],al
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rax],dh
   140008a09:	adc    al,0x0
   140008a0b:	rex add DWORD PTR [rax],eax
   140008a0e:	add    BYTE PTR [rax],al
   140008a10:	nop
   140008a11:	adc    al,0x0
   140008a13:	rex add DWORD PTR [rax],eax
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	rcl    BYTE PTR [rax+rax*1],1
   140008a1b:	rex add DWORD PTR [rax],eax
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	jo     0x140008a32
   140008a22:	add    BYTE PTR [rax+0x1],al
   140008a25:	add    BYTE PTR [rax],al
   140008a27:	add    al,ah
   140008a29:	adc    BYTE PTR [rax],al
   140008a2b:	rex add DWORD PTR [rax],eax
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	rex ins BYTE PTR es:[rdi],dx
   140008a32:	add    BYTE PTR [rax+0x1],al
   140008a35:	add    BYTE PTR [rax],al
   140008a37:	add    BYTE PTR [rax],dh
   140008a39:	ins    BYTE PTR es:[rdi],dx
   140008a3a:	add    BYTE PTR [rax+0x1],al
   140008a3d:	add    BYTE PTR [rax],al
   140008a3f:	add    BYTE PTR [rax],ah
   140008a41:	ins    BYTE PTR es:[rdi],dx
   140008a42:	add    BYTE PTR [rax+0x1],al
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    BYTE PTR [rax+0x11],ah
   140008a4a:	add    BYTE PTR [rax+0x1],al
   140008a4d:	add    BYTE PTR [rax],al
   140008a4f:	add    BYTE PTR [rax],dh
   140008a51:	adc    DWORD PTR [rax],eax
   140008a53:	rex add DWORD PTR [rax],eax
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	push   rax
   140008a59:	add    BYTE PTR fs:[rax+0x1],al
   140008a5d:	add    BYTE PTR [rax],al
   140008a5f:	add    BYTE PTR [rax+0x64],dl
   140008a62:	add    BYTE PTR [rax+0x1],al
   140008a65:	add    BYTE PTR [rax],al
   140008a67:	add    BYTE PTR [rax+0x1400032],dl
   140008a6d:	add    BYTE PTR [rax],al
   140008a6f:	add    BYTE PTR [rax+0x1400032],dh
   140008a75:	add    BYTE PTR [rax],al
   140008a77:	add    BYTE PTR [rax+0x1400032],ah
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    BYTE PTR [rax+0x22],ah
   140008a82:	add    BYTE PTR [rax+0x1],al
   140008a85:	add    BYTE PTR [rax],al
   140008a87:	add    BYTE PTR [rax],dh
   140008a89:	(bad)  
   140008a8a:	add    BYTE PTR [rax+0x1],al
   140008a8d:	add    BYTE PTR [rax],al
   140008a8f:	add    BYTE PTR [rax+0x1e],dl
   140008a92:	add    BYTE PTR [rax+0x1],al
   140008a95:	add    BYTE PTR [rax],al
   140008a97:	add    al,dl
   140008a99:	(bad)  
   140008a9a:	add    BYTE PTR [rax+0x1],al
   140008a9d:	add    BYTE PTR [rax],al
   140008a9f:	add    al,dh
   140008aa1:	and    eax,DWORD PTR [rax]
   140008aa3:	rex add DWORD PTR [rax],eax
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	shl    BYTE PTR [rax+rax*1],1
   140008aab:	rex add DWORD PTR [rax],eax
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	push   rax
   140008ab1:	sbb    eax,0x14000
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	lock sbb al,BYTE PTR [rax]
   140008abb:	rex add DWORD PTR [rax],eax
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	adc    BYTE PTR [rip+0x14000],bl        # 0x14001cac6
   140008ac6:	add    BYTE PTR [rax],al
   140008ac8:	push   rax
   140008ac9:	sbb    eax,DWORD PTR [rax]
   140008acb:	rex add DWORD PTR [rax],eax
   140008ace:	add    BYTE PTR [rax],al
   140008ad0:	lock sbb al,BYTE PTR [rax]
   140008ad3:	rex add DWORD PTR [rax],eax
   140008ad6:	add    BYTE PTR [rax],al
   140008ad8:	adc    BYTE PTR [rbx],bl
   140008ada:	add    BYTE PTR [rax+0x1],al
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    al,dh
   140008ae1:	sbb    DWORD PTR [rax],eax
   140008ae3:	rex add DWORD PTR [rax],eax
   140008ae6:	add    BYTE PTR [rax],al
   140008ae8:	and    BYTE PTR [rax+rax*1+0x40],0x1
   140008aed:	add    BYTE PTR [rax],al
   140008aef:	add    al,al
   140008af1:	sbb    DWORD PTR [rax],eax
   140008af3:	rex add DWORD PTR [rax],eax
   140008af6:	add    BYTE PTR [rax],al
   140008af8:	add    BYTE PTR [rdi+0x0],al
   140008afb:	rex add DWORD PTR [rax],eax
   140008afe:	add    BYTE PTR [rax],al
   140008b00:	push   rax
   140008b01:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140008b05:	add    BYTE PTR [rax],al
   140008b07:	add    BYTE PTR [rax+0x140001a],al
   140008b0d:	add    BYTE PTR [rax],al
   140008b0f:	add    BYTE PTR [rax+0x140001a],al
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    al,dl
   140008b19:	rex.RX add BYTE PTR [rax+0x1],r8b
   140008b1d:	add    BYTE PTR [rax],al
   140008b1f:	add    BYTE PTR [rax+0x58],ah
   140008b22:	add    BYTE PTR [rax+0x1],al
   140008b25:	add    BYTE PTR [rax],al
   140008b27:	add    BYTE PTR [rax+0x58],dl
   140008b2a:	add    BYTE PTR [rax+0x1],al
   140008b2d:	add    BYTE PTR [rax],al
   140008b2f:	add    BYTE PTR [rax+0x58],al
   140008b32:	add    BYTE PTR [rax+0x1],al
   140008b35:	add    BYTE PTR [rax],al
   140008b37:	add    BYTE PTR [rax+0x46],dl
   140008b3a:	add    BYTE PTR [rax+0x1],al
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    BYTE PTR [rax+0x1400046],dl
   140008b45:	add    BYTE PTR [rax],al
   140008b47:	add    BYTE PTR [rax+0x44],al
   140008b4a:	add    BYTE PTR [rax+0x1],al
   140008b4d:	add    BYTE PTR [rax],al
   140008b4f:	add    BYTE PTR [rax],dl
   140008b51:	add    BYTE PTR [r8+0x1],r8b
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    BYTE PTR [rax],dh
   140008b59:	add    BYTE PTR [r8+0x1],r8b
   140008b5d:	add    BYTE PTR [rax],al
   140008b5f:	add    BYTE PTR [rax+0x1400045],dl
   140008b65:	add    BYTE PTR [rax],al
   140008b67:	add    BYTE PTR [rax],al
   140008b69:	rex.RX add BYTE PTR [rax+0x1],r8b
   140008b6d:	add    BYTE PTR [rax],al
   140008b6f:	add    BYTE PTR [rax+0x37],dh
   140008b72:	add    BYTE PTR [rax+0x1],al
   140008b75:	add    BYTE PTR [rax],al
   140008b77:	add    BYTE PTR [rdx+0x61],ah
   140008b7a:	and    BYTE PTR fs:[rcx+0x6c],ah
   140008b7e:	ins    BYTE PTR es:[rdi],dx
   140008b7f:	outs   dx,DWORD PTR ds:[rsi]
   140008b80:	movsxd esp,DWORD PTR [rcx+0x74]
   140008b83:	imul   ebp,DWORD PTR [rdi+0x6e],0x550000
   140008b8a:	outs   dx,BYTE PTR ds:[rsi]
   140008b8b:	add    BYTE PTR [rbx+0x0],dh
   140008b8e:	add    BYTE PTR gs:[rbx+0x0],ah
   140008b92:	jne    0x140008b94
   140008b94:	jb     0x140008b96
   140008b96:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140008b9b:	add    BYTE PTR [rcx+0x0],al
   140008b9e:	jo     0x140008ba0
   140008ba0:	(bad)  
   140008ba1:	add    BYTE PTR [rdx+0x0],dh
   140008ba4:	je     0x140008ba6
   140008ba6:	ins    DWORD PTR es:[rdi],dx
   140008ba7:	add    BYTE PTR [rbp+0x0],ah
   140008baa:	outs   dx,BYTE PTR ds:[rsi]
   140008bab:	add    BYTE PTR [rax+rax*1+0x0],dh
   140008baf:	add    BYTE PTR [rbp+0x6e],dl
   140008bb2:	jae    0x140008c19
   140008bb4:	movsxd esp,DWORD PTR [rcx+0x70]
   140008bb7:	jo     0x140008bf3
   140008bb9:	cmp    al,BYTE PTR [rcx+0x63]
   140008bbc:	movsxd esp,DWORD PTR [rbp+0x73]
   140008bbf:	jae    0x140008c04
   140008bc1:	push   0x286b6365
   140008bc6:	sub    DWORD PTR [rax],esp
   140008bc8:	rex.RX (bad) 
   140008bca:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4320202e
   140008bd2:	outs   dx,DWORD PTR ds:[rsi]
   140008bd3:	jne    0x140008c41
   140008bd5:	and    BYTE PTR fs:[rsi+0x6f],ch
   140008bd9:	je     0x140008bfb
   140008bdb:	imul   ebp,DWORD PTR [rbp+0x70],0x6f737265
   140008be2:	outs   dx,BYTE PTR ds:[rsi]
   140008be3:	(bad)  
   140008be4:	je     0x140008c4b
   140008be6:	and    BYTE PTR [rbx+0x61],ah
   140008be9:	ins    BYTE PTR es:[rdi],dx
   140008bea:	ins    BYTE PTR es:[rdi],dx
   140008beb:	gs jb  0x140008c1c
   140008bee:	and    BYTE PTR [rax+0x72],ch
   140008bf1:	gs jae 0x140008c31
   140008bf4:	xor    BYTE PTR [rax+0x25],bh
   140008bf7:	js     0x140008c03
   140008bf9:	add    BYTE PTR [rax],al
   140008bfb:	add    BYTE PTR [rax],al
   140008bfd:	add    BYTE PTR [rax],al
   140008bff:	add    BYTE PTR [rbp+0x6e],dl
   140008c02:	jae    0x140008c69
   140008c04:	movsxd esp,DWORD PTR [rcx+0x70]
   140008c07:	jo     0x140008c43
   140008c09:	cmp    al,BYTE PTR [rcx+0x63]
   140008c0c:	movsxd esp,DWORD PTR [rbp+0x73]
   140008c0f:	jae    0x140008c54
   140008c11:	push   0x286b6365
   140008c16:	sub    DWORD PTR [rax],esp
   140008c18:	rex.RX (bad) 
   140008c1a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4320202e
   140008c22:	outs   dx,DWORD PTR ds:[rsi]
   140008c23:	jne    0x140008c91
   140008c25:	and    BYTE PTR fs:[rsi+0x6f],ch
   140008c29:	je     0x140008c4b
   140008c2b:	outs   dx,DWORD PTR ds:[rsi]
   140008c2c:	(bad)  
   140008c2d:	je     0x140008c90
   140008c2f:	imul   ebp,DWORD PTR [rsi+0x20],0x6c6c6163
   140008c36:	gs jb  0x140008c59
   140008c39:	jae    0x140008ca4
   140008c3b:	fs or  al,BYTE PTR cs:[rax]
   140008c3f:	add    BYTE PTR [rbp+0x6e],dl
   140008c42:	jae    0x140008ca9
   140008c44:	movsxd esp,DWORD PTR [rcx+0x70]
   140008c47:	jo     0x140008c83
   140008c49:	cmp    al,BYTE PTR [rcx+0x63]
   140008c4c:	movsxd esp,DWORD PTR [rbp+0x73]
   140008c4f:	jae    0x140008c94
   140008c51:	push   0x286b6365
   140008c56:	sub    DWORD PTR [rax],esp
   140008c58:	rex.B
   140008c59:	rex.XB
   140008c5a:	rex.XB
   140008c5b:	rex.RB push r11
   140008c5d:	push   rbx
   140008c5e:	pop    rdi
   140008c5f:	rex.R
   140008c60:	rex.RB
   140008c61:	rex.WRX
   140008c62:	rex.WB
   140008c63:	rex.RB
   140008c64:	rex.R
   140008c65:	and    BYTE PTR cs:[rbx+0x61],al
   140008c69:	ins    BYTE PTR es:[rdi],dx
   140008c6a:	ins    BYTE PTR es:[rdi],dx
   140008c6b:	gs jb  0x140008c8e
   140008c6e:	imul   esi,DWORD PTR [rbx+0x20],0xa5325
   140008c75:	add    BYTE PTR [rax],al
   140008c77:	add    BYTE PTR [rbx+0x0],dl
   140008c7a:	outs   dx,DWORD PTR ds:[rsi]
   140008c7b:	add    BYTE PTR [rsi+0x0],ah
   140008c7e:	je     0x140008c80
   140008c80:	ja     0x140008c82
   140008c82:	(bad)  
   140008c83:	add    BYTE PTR [rdx+0x0],dh
   140008c86:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140008c8b:	add    BYTE PTR [rcx+0x0],ch
   140008c8e:	movsxd eax,DWORD PTR [rax]
   140008c90:	jb     0x140008c92
   140008c92:	outs   dx,DWORD PTR ds:[rsi]
   140008c93:	add    BYTE PTR [rbx+0x0],dh
   140008c96:	outs   dx,DWORD PTR ds:[rsi]
   140008c97:	add    BYTE PTR [rsi+0x0],ah
   140008c9a:	je     0x140008c9c
   140008c9c:	pop    rsp
   140008c9d:	add    BYTE PTR [rdi+0x0],dl
   140008ca0:	rex.X add BYTE PTR [rbp+0x0],al
   140008ca4:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   140008ca9:	add    BYTE PTR [rcx+0x0],cl
   140008cac:	rex.WRB add BYTE PTR [r15+0x0],r9b
   140008cb0:	rex.WRB add BYTE PTR [r8],r8b
   140008cb3:	add    BYTE PTR [rax],al
   140008cb5:	add    BYTE PTR [rax],al
   140008cb7:	add    BYTE PTR [rbp+0x0],dl
   140008cba:	outs   dx,BYTE PTR ds:[rsi]
   140008cbb:	add    BYTE PTR [rbx+0x0],dh
   140008cbe:	add    BYTE PTR gs:[rbx+0x0],ah
   140008cc2:	(bad)  
   140008cc3:	add    BYTE PTR [rax+0x0],dh
   140008cc6:	jo     0x140008cc8
   140008cc8:	add    BYTE PTR [r11+0x0],spl
   140008ccc:	movsxd eax,DWORD PTR [rax]
   140008cce:	add    BYTE PTR gs:[rbx+0x0],dh
   140008cd2:	jae    0x140008cd4
   140008cd4:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008cd8:	outs   dx,BYTE PTR ds:[rsi]
   140008cd9:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008cdd:	add    BYTE PTR [rdi+0x0],ch
   140008ce0:	ins    BYTE PTR es:[rdi],dx
   140008ce1:	add    BYTE PTR [rax+rax*1+0x65],al
   140008ce5:	add    BYTE PTR [rsi+0x0],ah
   140008ce8:	(bad)  
   140008ce9:	add    BYTE PTR [rbp+0x0],dh
   140008cec:	ins    BYTE PTR es:[rdi],dx
   140008ced:	add    BYTE PTR [rax+rax*1+0x0],dh
   140008cf1:	add    BYTE PTR [rax],al
   140008cf3:	add    BYTE PTR [rax],al
   140008cf5:	add    BYTE PTR [rax],al
   140008cf7:	add    BYTE PTR [rsi+0x65],dh
   140008cfa:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140008cfe:	cmp    al,0x54
   140008d00:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140008d05:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008d09:	add    BYTE PTR [eax],al
   140008d0c:	add    BYTE PTR [rax],al
   140008d0e:	add    BYTE PTR [rax],al
   140008d10:	add    DWORD PTR [rax],eax
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    BYTE PTR [rax],al
   140008d16:	add    BYTE PTR [rax],al
   140008d18:	rol    BYTE PTR [rax],0x0
   140008d1b:	add    BYTE PTR [rax],al
   140008d1d:	add    BYTE PTR [rax],al
   140008d1f:	rex.RX add BYTE PTR [rax],r8b
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	add    BYTE PTR [rax],al
   140008d26:	add    BYTE PTR [rax],al
   140008d28:	rol    BYTE PTR [rax],0x0
   140008d2b:	add    BYTE PTR [rax],al
   140008d2d:	add    BYTE PTR [rax],al
   140008d2f:	rex.RX cmp al,0x0
   140008d32:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140008d36:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   140008d3b:	add    BYTE PTR [rax],al
   140008d3d:	add    BYTE PTR [rax],al
   140008d3f:	add    BYTE PTR [rsi+0x0],cl
   140008d42:	push   rbp
   140008d43:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   140008d4f:	add    BYTE PTR [rbx+0x0],dl
   140008d52:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140008d56:	push   rsp
   140008d57:	add    BYTE PTR [rdi+0x0],dl
   140008d5a:	add    BYTE PTR [r10+0x0],dl
   140008d5e:	add    BYTE PTR [r8+rax*1+0x43],r11b
   140008d63:	add    BYTE PTR [rax+rax*1+0x61],ch
   140008d67:	add    BYTE PTR [rbx+0x0],dh
   140008d6a:	jae    0x140008d6c
   140008d6c:	add    BYTE PTR gs:[rbx+0x0],dh
   140008d70:	pop    rsp
   140008d71:	add    BYTE PTR [rbx+0x0],al
   140008d74:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140008d78:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   140008d7d:	add    BYTE PTR [rax],al
   140008d7f:	add    BYTE PTR [rbp+0x0],cl
   140008d82:	imul   eax,DWORD PTR [rax],0x720063
   140008d88:	outs   dx,DWORD PTR ds:[rsi]
   140008d89:	add    BYTE PTR [rbx+0x0],dh
   140008d8c:	outs   dx,DWORD PTR ds:[rsi]
   140008d8d:	add    BYTE PTR [rsi+0x0],ah
   140008d90:	je     0x140008d92
   140008d92:	and    BYTE PTR [rax],al
   140008d94:	push   rdi
   140008d95:	add    BYTE PTR [rdx+0x0],al
   140008d98:	add    BYTE PTR [r13+0x0],r9b
   140008d9c:	and    BYTE PTR [rax],al
   140008d9e:	and    eax,0x7300
   140008da3:	add    BYTE PTR [rax],al
   140008da5:	add    BYTE PTR [rax],al
   140008da7:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140008dab:	add    BYTE PTR [rbx+0x0],ah
   140008dae:	(bad)  
   140008daf:	add    BYTE PTR [rax+rax*1+0x53],ch
   140008db3:	add    BYTE PTR [rbp+0x0],ah
   140008db6:	jb     0x140008db8
   140008db8:	jbe    0x140008dba
   140008dba:	add    BYTE PTR gs:[rdx+0x0],dh
   140008dbe:	xor    eax,DWORD PTR [rax]
   140008dc0:	xor    al,BYTE PTR [rax]
   140008dc2:	add    BYTE PTR [rax],al
   140008dc4:	add    BYTE PTR [rax],al
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	rex.X add BYTE PTR [rdi+0x0],bpl
   140008dcc:	je     0x140008dce
   140008dce:	push   0x0
   140008dd3:	add    BYTE PTR [rax],al
   140008dd5:	add    BYTE PTR [rax],al
   140008dd7:	add    BYTE PTR [rsi+0x0],al
   140008dda:	jb     0x140008ddc
   140008ddc:	add    BYTE PTR gs:[rbp+0x0],ah
	...
   140008de8:	add    BYTE PTR [r8+0x0],sil
   140008dec:	(bad)  
   140008ded:	add    BYTE PTR [rdx+0x0],dh
   140008df0:	je     0x140008df2
   140008df2:	ins    DWORD PTR es:[rdi],dx
   140008df3:	add    BYTE PTR [rbp+0x0],ah
   140008df6:	outs   dx,BYTE PTR ds:[rsi]
   140008df7:	add    BYTE PTR [rax+rax*1+0x0],dh
   140008dfb:	add    BYTE PTR [rax],al
   140008dfd:	add    BYTE PTR [rax],al
   140008dff:	add    BYTE PTR [rax+rax*1+0x68],dl
   140008e03:	add    BYTE PTR [rdx+0x0],dh
   140008e06:	add    BYTE PTR gs:[rcx+0x0],ah
   140008e0a:	add    BYTE PTR fs:[rcx+0x0],ch
   140008e0e:	outs   dx,BYTE PTR ds:[rsi]
   140008e0f:	add    BYTE PTR [rdi+0x0],ah
   140008e12:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140008e16:	add    BYTE PTR fs:[rbp+0x0],ah
   140008e1a:	ins    BYTE PTR es:[rdi],dx
   140008e1b:	add    BYTE PTR [rax],al
   140008e1d:	add    BYTE PTR [rax],al
   140008e1f:	add    BYTE PTR [rbx+0x0],dl
   140008e22:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140008e26:	push   rsp
   140008e27:	add    BYTE PTR [rdi+0x0],dl
   140008e2a:	add    BYTE PTR [r10+0x0],dl
   140008e2e:	add    BYTE PTR [r8+rax*1+0x43],r11b
   140008e33:	add    BYTE PTR [rax+rax*1+0x61],ch
   140008e37:	add    BYTE PTR [rbx+0x0],dh
   140008e3a:	jae    0x140008e3c
   140008e3c:	add    BYTE PTR gs:[rbx+0x0],dh
   140008e40:	pop    rsp
   140008e41:	add    BYTE PTR [rbx+0x0],al
   140008e44:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140008e48:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140008e4d:	add    BYTE PTR [rax],al
   140008e4f:	add    BYTE PTR [rip+0x45005200],ch        # 0x18500e055
   140008e55:	add    BYTE PTR [rdi+0x0],al
   140008e58:	push   rbx
   140008e59:	add    BYTE PTR [rbp+0x0],al
   140008e5c:	push   rdx
   140008e5d:	add    BYTE PTR [rsi+0x0],dl
   140008e60:	add    BYTE PTR [r10+0x0],r10b
   140008e64:	add    BYTE PTR [rax],al
   140008e66:	add    BYTE PTR [rax],al
   140008e68:	(bad)  
   140008e69:	add    BYTE PTR [rdx+0x0],dl
   140008e6c:	add    BYTE PTR [r15+0x0],r8b
   140008e70:	push   rbx
   140008e71:	add    BYTE PTR [rbp+0x0],al
   140008e74:	push   rdx
   140008e75:	add    BYTE PTR [rsi+0x0],dl
   140008e78:	add    BYTE PTR [r10+0x0],r10b
   140008e7c:	add    BYTE PTR [rax],al
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	sub    eax,0x4e005500
   140008e85:	add    BYTE PTR [rdx+0x0],dl
   140008e88:	add    BYTE PTR [r15+0x0],r8b
   140008e8c:	push   rbx
   140008e8d:	add    BYTE PTR [rbp+0x0],al
   140008e90:	push   rdx
   140008e91:	add    BYTE PTR [rsi+0x0],dl
   140008e94:	add    BYTE PTR [r10+0x0],r10b
	...
   140008ea0:	(bad)  
   140008ea1:	add    BYTE PTR [rbp+0x0],dl
   140008ea4:	rex.WRX add BYTE PTR [rdx+0x0],r10b
   140008ea8:	add    BYTE PTR [r15+0x0],r8b
   140008eac:	push   rbx
   140008ead:	add    BYTE PTR [rbp+0x0],al
   140008eb0:	push   rdx
   140008eb1:	add    BYTE PTR [rsi+0x0],dl
   140008eb4:	add    BYTE PTR [r10+0x0],r10b
	...
   140008ec0:	add    BYTE PTR [r13+0x0],r9b
   140008ec4:	rex.X add BYTE PTR [rbp+0x0],al
   140008ec8:	add    BYTE PTR [rax+rax*1+0x49],r8b
   140008ecd:	add    BYTE PTR [rsi+0x0],cl
   140008ed0:	rex.RXB add BYTE PTR [r8],r8b
   140008ed3:	add    BYTE PTR [rax],al
   140008ed5:	add    BYTE PTR [rax],al
   140008ed7:	add    BYTE PTR [rbx+0x61],al
   140008eda:	outs   dx,BYTE PTR ds:[rsi]
   140008edb:	outs   dx,BYTE PTR ds:[rsi]
   140008edc:	outs   dx,DWORD PTR ds:[rsi]
   140008edd:	je     0x140008eff
   140008edf:	jb     0x140008f56
   140008ee1:	outs   dx,BYTE PTR ds:[rsi]
   140008ee2:	and    BYTE PTR [rbx+0x74],dh
   140008ee5:	(bad)  
   140008ee6:	outs   dx,BYTE PTR ds:[rsi]
   140008ee7:	fs (bad) 
   140008ee9:	ins    BYTE PTR es:[rdi],dx
   140008eea:	outs   dx,DWORD PTR ds:[rsi]
   140008eeb:	outs   dx,BYTE PTR ds:[rsi]
   140008eec:	or     al,BYTE PTR gs:[rax]
   140008eef:	add    BYTE PTR [rdi+rdx*2-0x33],cl
   140008ef3:	cmp    al,0x43
   140008ef5:	sbb    al,cl
   140008ef7:	int    0xc1
   140008ef9:	or     eax,0x213abf62
   140008efe:	jnp    0x140008f49
   140008f00:	mov    edi,0x622d6bb0
   140008f05:	jno    0x140008eb0
   140008f07:	add    esp,eax
   140008f09:	cmp    DWORD PTR [rbp+rbx*2-0x22510c99],esi
   140008f10:	(bad)  
   140008f11:	imul   ebp,DWORD PTR [rbx-0x72],0x4335ab54
   140008f18:	(bad)  
   140008f19:	sub    DWORD PTR [rdx],esi
   140008f1b:	push   rbp
   140008f1c:	mov    ecx,0x270edd19
   140008f21:	mov    dl,0xf6
   140008f23:	(bad)  
   140008f24:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008f25:	sub    al,0xf9
   140008f27:	rex (bad) 
   140008f29:	cbw    
   140008f2b:	(bad)  
   140008f2c:	lods   eax,DWORD PTR ds:[rsi]
   140008f2d:	stos   BYTE PTR es:[rdi],al
   140008f2e:	(bad)  
   140008f2f:	sub    BYTE PTR cs:[rax],ah
   140008f32:	mov    ebp,0xd1152349
   140008f37:	adc    DWORD PTR [rbp+0x4fc00079],ebp
   140008f3d:	fdivr  st,st(5)
   140008f3f:	inc    DWORD PTR [rbx*4+0x34713173]
   140008f46:	hlt    
   140008f47:	rex.WR (bad) 
   140008f49:	jl     0x140008fa2
   140008f4b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008f4c:	rex.WX out 0x19,eax
   140008f4f:	push   rsi
   140008f50:	mov    WORD PTR [rdx+0x15231cfa],?
   140008f56:	rcl    DWORD PTR [rcx],1
   140008f58:	lods   eax,DWORD PTR ds:[rsi]
   140008f59:	jns    0x140008f5b
   140008f5b:	ror    BYTE PTR [rdi-0x28],0xfd
   140008f5f:	inc    DWORD PTR [rcx]
   140008f61:	js     0x140008ee8
   140008f63:	jl     0x140008ee6
   140008f65:	jae    0x140008f36
   140008f67:	adc    DWORD PTR [rax+0xaa004d],ecx
   140008f6d:	rex.WXB
   140008f6e:	cs and al,0x11
   140008f71:	xor    edx,DWORD PTR [rsi-0x713c66fc]
   140008f77:	rex lods eax,DWORD PTR ds:[rsi]
   140008f79:	push   rcx
   140008f7a:	add    eax,0xee0615d0
   140008f7f:	rcr    BYTE PTR [rcx],1
   140008f81:	add    BYTE PTR [rax],al
   140008f83:	add    BYTE PTR [rax],al
   140008f85:	add    BYTE PTR [rax],al
   140008f87:	add    al,al
   140008f89:	add    BYTE PTR [rax],al
   140008f8b:	add    BYTE PTR [rax],al
   140008f8d:	add    BYTE PTR [rax],al
   140008f8f:	rex.RX
   140008f90:	add    BYTE PTR [r8+0x0],dl
   140008f94:	rex.WB add BYTE PTR [rip+0x53004d00],bpl        # 0x19300dc9b
   140008f9b:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a900e6a1
   140008fa1:	add    BYTE PTR [rsi+0x0],ch
   140008fa4:	sub    eax,0x6f004300
   140008fa9:	add    BYTE PTR [rdx+0x0],dh
   140008fac:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af00dbb3
   140008fb3:	add    BYTE PTR [rbx+0x0],ah
   140008fb6:	(bad)  
   140008fb7:	add    BYTE PTR [rax+rax*1+0x52],ch
   140008fbb:	add    BYTE PTR [rbp+0x0],ah
   140008fbe:	add    BYTE PTR [ecx+0x0],ch
   140008fc2:	jae    0x140008fc4
   140008fc4:	je     0x140008fc6
   140008fc6:	jb     0x140008fc8
   140008fc8:	jns    0x140008fca
   140008fca:	sub    eax,0x31004c00
   140008fcf:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00c0d5
   140008fd5:	add    BYTE PTR [rax],dh
   140008fd7:	add    BYTE PTR [rsi],ch
   140008fd9:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140008fdd:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008fe1:	add    BYTE PTR [rax],al
   140008fe3:	add    BYTE PTR [rax],al
   140008fe5:	add    BYTE PTR [rax],al
   140008fe7:	add    BYTE PTR [rcx+0x0],ah
   140008fea:	add    BYTE PTR fs:[rsi+0x0],dh
   140008fee:	(bad)  
   140008fef:	add    BYTE PTR [rax+0x0],dh
   140008ff2:	imul   eax,DWORD PTR [rax],0x320033
   140008ff8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140008ffd:	add    BYTE PTR [rax+rax*1+0x0],ch
   140009001:	add    BYTE PTR [rax],al
   140009003:	add    BYTE PTR [rax],al
   140009005:	add    BYTE PTR [rax],al
   140009007:	add    BYTE PTR [rdx+0x65],dl
   14000900a:	rex.XB ins BYTE PTR es:[edi],dx
   14000900d:	outs   dx,DWORD PTR ds:[rsi]
   14000900e:	jae    0x140009075
   140009010:	rex.WXB
   140009011:	gs jns 0x140009014
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	push   rdx
   140009019:	gs addr32 rex.XB jb 0x140009083
   14000901e:	(bad)  
   14000901f:	je     0x140009086
   140009021:	rex.WXB
   140009022:	gs jns 0x14000906a
   140009025:	js     0x14000907e
   140009027:	add    BYTE PTR [rdx+0x65],dl
   14000902a:	addr32 rex.R
   14000902c:	gs ins BYTE PTR es:[rdi],dx
   14000902e:	gs je  0x140009096
   140009031:	rex.WXB
   140009032:	gs jns 0x14000907a
   140009035:	js     0x14000908e
   140009037:	add    BYTE PTR [rdx+0x65],dl
   14000903a:	addr32 rex.R
   14000903c:	gs ins BYTE PTR es:[rdi],dx
   14000903e:	gs je  0x1400090a6
   140009041:	rex.WXB
   140009042:	gs jns 0x14000909c
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    BYTE PTR [rdx+0x65],dl
   14000904a:	addr32 rex.WRXB jo 0x1400090b3
   14000904e:	outs   dx,BYTE PTR ds:[rsi]
   14000904f:	rex.WXB
   140009050:	gs jns 0x140009098
   140009053:	js     0x1400090ac
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rdx+0x65],dl
   14000905a:	addr32 push rbx
   14000905c:	gs je  0x1400090b5
   14000905f:	(bad)  
   140009060:	ins    BYTE PTR es:[rdi],dx
   140009061:	jne    0x1400090c8
   140009063:	rex.RB js 0x1400090bd
	...
   14000906e:	add    BYTE PTR [rax],al
   140009070:	and    al,BYTE PTR [rip+0x11993]        # 0x14001aa09
   140009076:	add    BYTE PTR [rax],al
   140009078:	clc    
   140009079:	popf   
	...
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    al,BYTE PTR [rax]
   140009086:	add    BYTE PTR [rax],al
   140009088:	add    BYTE PTR [rsi+0x80000],bl
	...
   140009096:	add    BYTE PTR [rax],al
   140009098:	and    al,BYTE PTR [rip+0x11993]        # 0x14001aa31
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	enter  0x9d,0x0
	...
   1400090ac:	add    al,BYTE PTR [rax]
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	rcr    BYTE PTR [rbp+0x280000],1
	...
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	and    al,BYTE PTR [rip+0x41993]        # 0x14004aa59
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	js     0x140009067
	...
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    eax,DWORD PTR [rax]
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	cwde   
   1400090d9:	popf   
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	and    BYTE PTR [rax],al
	...
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	and    al,BYTE PTR [rip+0x81993]        # 0x14008aa81
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	jo     0x14000908e
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    DWORD PTR [rax],eax
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	mov    al,0x9c
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	sldt   WORD PTR [rax]
   1400090ff:	add    al,ah
   140009101:	pushf  
   140009102:	add    BYTE PTR [rax],al
   140009104:	xor    BYTE PTR [rax],al
	...
   14000910e:	add    BYTE PTR [rax],al
   140009110:	and    al,BYTE PTR [rip+0x61993]        # 0x14006aaa9
   140009116:	add    BYTE PTR [rax],al
   140009118:	mov    ah,0x9b
	...
   140009122:	add    BYTE PTR [rax],al
   140009124:	or     DWORD PTR [rax],eax
   140009126:	add    BYTE PTR [rax],al
   140009128:	lock fwait
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	xor    BYTE PTR [rax],al
	...
   140009136:	add    BYTE PTR [rax],al
   140009138:	and    al,BYTE PTR [rip+0x11993]        # 0x14001aad1
   14000913e:	add    BYTE PTR [rax],al
   140009140:	mov    BYTE PTR [rbx+0x0],bl
   140009146:	add    BYTE PTR [rax],al
   140009148:	add    BYTE PTR [rax],al
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	add    DWORD PTR [rax],eax
   14000914e:	add    BYTE PTR [rax],al
   140009150:	nop
   140009151:	fwait
	...
   14000915e:	add    BYTE PTR [rax],al
   140009160:	and    al,BYTE PTR [rip+0x31993]        # 0x14003aaf9
   140009166:	add    BYTE PTR [rax],al
   140009168:	cmp    al,0x9b
	...
   140009172:	add    BYTE PTR [rax],al
   140009174:	add    al,0x0
   140009176:	add    BYTE PTR [rax],al
   140009178:	pop    rax
   140009179:	fwait
   14000917a:	add    BYTE PTR [rax],al
   14000917c:	and    BYTE PTR [rax],al
	...
   140009186:	add    BYTE PTR [rax],al
   140009188:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ab21
   14000918e:	add    BYTE PTR [rax],al
   140009190:	clc    
   140009191:	(bad)  
	...
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	add    eax,DWORD PTR [rax]
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	adc    BYTE PTR [rbx+0x0],bl
	...
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ab49
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	fcomp  DWORD PTR [rdx+0x0]
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	add    BYTE PTR [rax],al
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    DWORD PTR [rax],eax
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	loopne 0x140009164
	...
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ab71
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	cwde   
   1400091e1:	(bad)  
	...
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    eax,DWORD PTR [rax]
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	mov    al,0x9a
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	and    BYTE PTR [rax],al
	...
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ab99
   140009206:	add    BYTE PTR [rax],al
   140009208:	and    BYTE PTR [rsi+0x10000],ah
   14000920e:	add    BYTE PTR [rax],al
   140009210:	cmp    BYTE PTR [rsi+0x70000],ah
   140009216:	add    BYTE PTR [rax],al
   140009218:	(bad)  
   140009219:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	and    BYTE PTR [rax],al
	...
   140009226:	add    BYTE PTR [rax],al
   140009228:	and    al,BYTE PTR [rip+0x31993]        # 0x14003abc1
   14000922e:	add    BYTE PTR [rax],al
   140009230:	je     0x1400091d7
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    DWORD PTR [rax],eax
   140009236:	add    BYTE PTR [rax],al
   140009238:	mov    WORD PTR [rbp+0x70000],fs
   14000923e:	add    BYTE PTR [rax],al
   140009240:	mov    eax,0x200000a5
	...
   14000924d:	add    BYTE PTR [rax],al
   14000924f:	add    BYTE PTR [rdx],ah
   140009251:	add    eax,0x41993
   140009256:	add    BYTE PTR [rax],al
   140009258:	movabs al,ds:0xc0000000020000a4
   140009261:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009262:	add    BYTE PTR [rax],al
   140009264:	or     BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	adc    BYTE PTR [rbp+0x280000],ah
	...
   140009276:	add    BYTE PTR [rax],al
   140009278:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ac11
   14000927e:	add    BYTE PTR [rax],al
   140009280:	ins    BYTE PTR es:[rdi],dx
   140009281:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000928a:	add    BYTE PTR [rax],al
   14000928c:	add    al,BYTE PTR [rax]
   14000928e:	add    BYTE PTR [rax],al
   140009290:	js     0x140009236
   140009292:	add    BYTE PTR [rax],al
   140009294:	and    BYTE PTR [rax],al
	...
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	and    al,BYTE PTR [rip+0x51993]        # 0x14005ac39
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	js     0x14000924d
   1400092aa:	add    BYTE PTR [rax],al
   1400092ac:	add    al,BYTE PTR [rax]
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	movabs al,ds:0xf00000000b0000a3
   1400092b9:	movabs ds:0x380000,eax
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ac61
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	mov    BYTE PTR [rdx+0x0],ah
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	add    BYTE PTR [rax],al
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	add    eax,0x90000000
   1400092e1:	movabs ds:0x300000,al
   1400092ea:	add    BYTE PTR [rax],al
   1400092ec:	add    BYTE PTR [rax],al
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ac89
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	xor    al,0xa2
	...
   140009302:	add    BYTE PTR [rax],al
   140009304:	add    eax,0x40000000
   140009309:	movabs ds:0x200000,al
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	and    al,BYTE PTR [rip+0x41993]        # 0x14004acb1
   14000931e:	add    BYTE PTR [rax],al
   140009320:	js     0x1400092c3
   140009322:	add    BYTE PTR [rax],al
   140009324:	add    DWORD PTR [rax],eax
   140009326:	add    BYTE PTR [rax],al
   140009328:	cwde   
   140009329:	movabs eax,ds:0xa1c0000000090000
   140009332:	add    BYTE PTR [rax],al
   140009334:	xor    BYTE PTR [rax],al
	...
   14000933e:	add    BYTE PTR [rax],al
   140009340:	and    al,BYTE PTR [rip+0x21993]        # 0x14002acd9
   140009346:	add    BYTE PTR [rax],al
   140009348:	and    BYTE PTR [rcx+0x0],ah
   14000934e:	add    BYTE PTR [rax],al
   140009350:	add    BYTE PTR [rax],al
   140009352:	add    BYTE PTR [rax],al
   140009354:	add    eax,0x30000000
   140009359:	movabs eax,ds:0x400000
   140009362:	add    BYTE PTR [rax],al
   140009364:	add    BYTE PTR [rax],al
   140009366:	add    BYTE PTR [rax],al
   140009368:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ad01
   14000936e:	add    BYTE PTR [rax],al
   140009370:	mov    eax,0xa0
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rax],al
   140009379:	add    BYTE PTR [rax],al
   14000937b:	add    BYTE PTR [rsi],al
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    al,dl
   140009381:	movabs al,ds:0x200000
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	add    BYTE PTR [rax],al
   14000938e:	add    BYTE PTR [rax],al
   140009390:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ad29
   140009396:	add    BYTE PTR [rax],al
   140009398:	movabs al,fs:0x0
   1400093a2:	add    BYTE PTR [rax],al
   1400093a4:	add    al,0x0
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	js     0x14000934a
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	and    BYTE PTR [rax],al
	...
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ad51
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	fs lahf 
	...
   1400093ca:	add    BYTE PTR [rax],al
   1400093cc:	add    al,0x0
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	sub    BYTE PTR [rax+0x200000],ah
	...
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ad79
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	mov    al,0x9f
	...
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	add    eax,DWORD PTR [rax]
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	clc    
   1400093f9:	lahf   
   1400093fa:	add    BYTE PTR [rax],al
   1400093fc:	and    BYTE PTR [rax],al
	...
   140009406:	add    BYTE PTR [rax],al
   140009408:	and    al,BYTE PTR [rip+0x31993]        # 0x14003ada1
   14000940e:	add    BYTE PTR [rax],al
   140009410:	mov    al,0x9f
	...
   14000941a:	add    BYTE PTR [rax],al
   14000941c:	add    eax,DWORD PTR [rax]
   14000941e:	add    BYTE PTR [rax],al
   140009420:	enter  0x9f,0x0
   140009424:	and    BYTE PTR [rax],al
	...
   14000942e:	add    BYTE PTR [rax],al
   140009430:	and    al,BYTE PTR [rip+0x31993]        # 0x14003adc9
   140009436:	add    BYTE PTR [rax],al
   140009438:	fs lahf 
	...
   140009442:	add    BYTE PTR [rax],al
   140009444:	add    al,0x0
   140009446:	add    BYTE PTR [rax],al
   140009448:	sbb    BYTE PTR [rdi+0x200000],0x0
	...
   140009457:	add    BYTE PTR [rdx],ah
   140009459:	add    eax,0x21993
   14000945e:	add    BYTE PTR [rax],al
   140009460:	mov    eax,0x9e
   140009465:	add    BYTE PTR [rax],al
   140009467:	add    BYTE PTR [rax],al
   140009469:	add    BYTE PTR [rax],al
   14000946b:	add    BYTE PTR [rbx],al
   14000946d:	add    BYTE PTR [rax],al
   14000946f:	add    BYTE PTR [rax],bh
   140009471:	lahf   
   140009472:	add    BYTE PTR [rax],al
   140009474:	and    BYTE PTR [rax],al
	...
   14000947e:	add    BYTE PTR [rax],al
   140009480:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ae19
   140009486:	add    BYTE PTR [rax],al
   140009488:	mov    eax,0x9e
   14000948d:	add    BYTE PTR [rax],al
   14000948f:	add    BYTE PTR [rax],al
   140009491:	add    BYTE PTR [rax],al
   140009493:	add    BYTE PTR [rbx],al
   140009495:	add    BYTE PTR [rax],al
   140009497:	add    BYTE PTR [rax],cl
   140009499:	lahf   
   14000949a:	add    BYTE PTR [rax],al
   14000949c:	and    BYTE PTR [rax],al
	...
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ae41
   1400094ae:	add    BYTE PTR [rax],al
   1400094b0:	mov    eax,0x9e
   1400094b5:	add    BYTE PTR [rax],al
   1400094b7:	add    BYTE PTR [rax],al
   1400094b9:	add    BYTE PTR [rax],al
   1400094bb:	add    BYTE PTR [rbx],al
   1400094bd:	add    BYTE PTR [rax],al
   1400094bf:	add    al,cl
   1400094c1:	sahf   
   1400094c2:	add    BYTE PTR [rax],al
   1400094c4:	and    BYTE PTR [rax],al
	...
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ae69
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	and    BYTE PTR [rsi+0x0],bl
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	add    BYTE PTR [rax],al
   1400094e2:	add    BYTE PTR [rax],al
   1400094e4:	add    eax,DWORD PTR [rax]
   1400094e6:	add    BYTE PTR [rax],al
   1400094e8:	nop
   1400094e9:	sahf   
   1400094ea:	add    BYTE PTR [rax],al
   1400094ec:	and    BYTE PTR [rax],al
	...
   1400094f6:	add    BYTE PTR [rax],al
   1400094f8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ae91
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	and    BYTE PTR [rsi+0x0],bl
   140009506:	add    BYTE PTR [rax],al
   140009508:	add    BYTE PTR [rax],al
   14000950a:	add    BYTE PTR [rax],al
   14000950c:	add    DWORD PTR [rax],eax
   14000950e:	add    BYTE PTR [rax],al
   140009510:	js     0x1400094b0
   140009512:	add    BYTE PTR [rax],al
   140009514:	and    BYTE PTR [rax],al
	...
   14000951e:	add    BYTE PTR [rax],al
   140009520:	and    al,BYTE PTR [rip+0x11993]        # 0x14001aeb9
   140009526:	add    BYTE PTR [rax],al
   140009528:	and    BYTE PTR [rsi+0x0],bl
   14000952e:	add    BYTE PTR [rax],al
   140009530:	add    BYTE PTR [rax],al
   140009532:	add    BYTE PTR [rax],al
   140009534:	add    DWORD PTR [rax],eax
   140009536:	add    BYTE PTR [rax],al
   140009538:	push   rax
   140009539:	sahf   
   14000953a:	add    BYTE PTR [rax],al
   14000953c:	and    BYTE PTR [rax],al
	...
   140009546:	add    BYTE PTR [rax],al
   140009548:	and    al,BYTE PTR [rip+0x11993]        # 0x14001aee1
   14000954e:	add    BYTE PTR [rax],al
   140009550:	and    BYTE PTR [rsi+0x0],bl
   140009556:	add    BYTE PTR [rax],al
   140009558:	add    BYTE PTR [rax],al
   14000955a:	add    BYTE PTR [rax],al
   14000955c:	add    eax,DWORD PTR [rax]
   14000955e:	add    BYTE PTR [rax],al
   140009560:	sub    BYTE PTR [rsi+0x200000],bl
	...
   14000956e:	add    BYTE PTR [rax],al
   140009570:	and    al,BYTE PTR [rip+0x11993]        # 0x14001af09
   140009576:	add    BYTE PTR [rax],al
   140009578:	(bad)  
   140009579:	movabs ds:0x0,al
   140009582:	add    BYTE PTR [rax],al
   140009584:	add    eax,DWORD PTR [rax]
   140009586:	add    BYTE PTR [rax],al
   140009588:	loopne 0x14000952c
   14000958a:	add    BYTE PTR [rax],al
   14000958c:	xor    BYTE PTR [rax],al
	...
   140009596:	add    BYTE PTR [rax],al
   140009598:	and    al,BYTE PTR [rip+0x21993]        # 0x14002af31
   14000959e:	add    BYTE PTR [rax],al
   1400095a0:	sbb    BYTE PTR [rbx+0x0],ah
   1400095a6:	add    BYTE PTR [rax],al
   1400095a8:	add    BYTE PTR [rax],al
   1400095aa:	add    BYTE PTR [rax],al
   1400095ac:	add    eax,0x28000000
   1400095b1:	movabs ds:0x200000,eax
   1400095ba:	add    BYTE PTR [rax],al
   1400095bc:	add    BYTE PTR [rax],al
   1400095be:	add    BYTE PTR [rax],al
   1400095c0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001af59
   1400095c6:	add    BYTE PTR [rax],al
   1400095c8:	sub    BYTE PTR [rax+0x0],0x0
   1400095cf:	add    BYTE PTR [rax],al
   1400095d1:	add    BYTE PTR [rax],al
   1400095d3:	add    BYTE PTR [rbx],al
   1400095d5:	add    BYTE PTR [rax],al
   1400095d7:	add    BYTE PTR [rax+0x400000a8],cl
	...
   1400095e5:	add    BYTE PTR [rax],al
   1400095e7:	add    BYTE PTR [rdx],ah
   1400095e9:	add    eax,0x21993
   1400095ee:	add    BYTE PTR [rax],al
   1400095f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400095f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   1400095fa:	add    BYTE PTR [rax],al
   1400095fc:	add    eax,0xb8000000
   140009601:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009602:	add    BYTE PTR [rax],al
   140009604:	push   rax
	...
   14000960d:	add    BYTE PTR [rax],al
   14000960f:	add    BYTE PTR [rdx],ah
   140009611:	add    eax,0x21993
   140009616:	add    BYTE PTR [rax],al
   140009618:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   140009622:	add    BYTE PTR [rax],al
   140009624:	add    eax,0x58000000
   140009629:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000962a:	add    BYTE PTR [rax],al
   14000962c:	nop
	...
   140009635:	add    BYTE PTR [rax],al
   140009637:	add    BYTE PTR [rdx],ah
   140009639:	add    eax,0x21993
   14000963e:	add    BYTE PTR [rax],al
   140009640:	clc    
   140009641:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   14000964a:	add    BYTE PTR [rax],al
   14000964c:	add    eax,0x8000000
   140009651:	test   al,0x0
   140009653:	add    BYTE PTR [rax],ah
	...
   140009661:	add    BYTE PTR [rax],al
   140009663:	add    BYTE PTR [rbx+0x39],ah
   140009666:	lahf   
   140009667:	push   rbp
   140009668:	add    BYTE PTR [rax],al
   14000966a:	add    BYTE PTR [rax],al
   14000966c:	add    al,BYTE PTR [rax]
   14000966e:	add    BYTE PTR [rax],al
   140009670:	and    eax,0x60000000
   140009675:	xchg   edi,eax
   140009676:	add    BYTE PTR [rax],al
   140009678:	(bad)  
   140009679:	add    DWORD PTR [rax],0x0
   14000967c:	add    BYTE PTR [rax],al
   14000967e:	add    BYTE PTR [rax],al
   140009680:	movsxd edi,DWORD PTR [rcx]
   140009682:	lahf   
   140009683:	push   rbp
   140009684:	add    BYTE PTR [rax],al
   140009686:	add    BYTE PTR [rax],al
   140009688:	or     eax,0xb8000000
   14000968d:	add    al,BYTE PTR [rax]
   14000968f:	add    BYTE PTR [rdi+rdx*4-0x7c640000],bl
	...
   1400096be:	add    BYTE PTR [rax],al
   1400096c0:	movabs al,ds:0x0
	...
   140009719:	rol    BYTE PTR [rax],1
   14000971b:	rex add DWORD PTR [rax],eax
	...
   14000972e:	add    BYTE PTR [rax],al
   140009730:	jo     0x1400096b6
   140009732:	add    BYTE PTR [rax+0x1],al
   140009735:	add    BYTE PTR [rax],al
   140009737:	add    BYTE PTR [rax-0x7c],bh
   14000973a:	add    BYTE PTR [rax+0x1],al
   14000973d:	add    BYTE PTR [rax],al
   14000973f:	add    al,cl
   140009741:	test   BYTE PTR [rax],al
   140009743:	rex add DWORD PTR [rax],eax
   140009746:	add    BYTE PTR [rax],al
   140009748:	pop    rbp
	...
   140009751:	xor    eax,0x0
	...
   14000975e:	add    BYTE PTR [rax],al
   140009760:	push   rdx
   140009761:	push   rbx
   140009762:	rex.R push rbx
   140009764:	ret    
   140009765:	cwde   
   140009766:	(bad)  
   140009767:	ins    BYTE PTR es:[rdi],dx
   140009768:	jae    0x1400097b2
   14000976a:	int    0x4b
   14000976c:	xchg   BYTE PTR [rbx+0x414fd78c],dl
   140009772:	(bad)  
   140009773:	loope  0x140009776
   140009775:	add    BYTE PTR [rax],al
   140009777:	add    BYTE PTR [rbp+0x6e],dh
   14000977a:	jae    0x1400097e1
   14000977c:	movsxd esp,DWORD PTR [rcx+0x70]
   14000977f:	jo     0x1400097af
   140009781:	jo     0x1400097e7
   140009783:	(bad)  
	...
   14000979c:	rex.RXB
   14000979d:	rex.XB push r12
   14000979f:	rex.WR add BYTE PTR [rax],r10b
   1400097a2:	add    BYTE PTR [rax],al
   1400097a4:	push   rcx
   1400097a5:	add    BYTE PTR [rax],al
   1400097a7:	add    BYTE PTR [rsi],ch
   1400097a9:	je     0x140009810
   1400097ab:	js     0x140009821
   1400097ad:	and    al,0x64
   1400097af:	imul   eax,DWORD PTR [rax],0x60000000
   1400097b5:	adc    BYTE PTR [rax],al
   1400097b7:	add    BYTE PTR [rsi+0x2e00005e],ah
   1400097bd:	je     0x140009824
   1400097bf:	js     0x140009835
   1400097c1:	and    al,0x6d
   1400097c3:	outs   dx,BYTE PTR ds:[rsi]
   1400097c4:	add    BYTE PTR [rax],al
   1400097c6:	add    BYTE PTR [rax],al
   1400097c8:	adc    BYTE PTR [rdi+0x0],ch
   1400097cb:	add    BYTE PTR [rdx],dl
   1400097cd:	add    BYTE PTR [rax],al
   1400097cf:	add    BYTE PTR [rsi],ch
   1400097d1:	je     0x140009838
   1400097d3:	js     0x140009849
   1400097d5:	and    al,0x6d
   1400097d7:	outs   dx,BYTE PTR ds:[rsi]
   1400097d8:	and    al,0x30
   1400097da:	xor    BYTE PTR [rax],al
   1400097dc:	xor    BYTE PTR [rdi+0x0],ch
   1400097df:	add    BYTE PTR [rax+0x2e000006],ah
   1400097e5:	je     0x14000984c
   1400097e7:	js     0x14000985d
   1400097e9:	and    al,0x78
   1400097eb:	add    al,dl
   1400097ed:	jne    0x1400097ef
   1400097ef:	add    BYTE PTR [rdx+0x0],ch
   1400097f2:	add    BYTE PTR [rax],al
   1400097f4:	cs je  0x14000985c
   1400097f7:	js     0x14000986d
   1400097f9:	and    al,0x79
   1400097fb:	add    BYTE PTR fs:[rax],al
   1400097fe:	add    BYTE PTR [rax],al
   140009800:	add    BYTE PTR [rax+0x4700000],al
   140009806:	add    BYTE PTR [rax],al
   140009808:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140009811:	add    BYTE PTR [rax],al
   140009813:	add    BYTE PTR [rax-0x7c],dh
   140009816:	add    BYTE PTR [rax],al
   140009818:	adc    BYTE PTR [rax],al
   14000981a:	add    BYTE PTR [rax],al
   14000981c:	xor    BYTE PTR cs:[rax],dh
   14000981f:	movsxd esp,DWORD PTR [rsi+0x67]
   140009822:	add    BYTE PTR [rax],al
   140009824:	add    BYTE PTR [rax+rax*1+0x800],0x0
   14000982c:	cs rex.XB push r10
   14000982f:	push   rsp
   140009830:	and    al,0x58
   140009832:	rex.XB
   140009833:	add    BYTE PTR [r8],al
   140009836:	add    BYTE PTR [rax],al
   140009838:	mov    BYTE PTR [rax+rax*1+0x800],al
   14000983f:	add    BYTE PTR [rsi],ch
   140009841:	rex.XB push r10
   140009843:	push   rsp
   140009844:	and    al,0x58
   140009846:	rex.XB
   140009847:	rex.B
   140009848:	add    BYTE PTR [r8],al
   14000984b:	add    BYTE PTR [rax+0x10000084],dl
   140009851:	add    BYTE PTR [rax],al
   140009853:	add    BYTE PTR [rsi],ch
   140009855:	rex.XB push r10
   140009857:	push   rsp
   140009858:	and    al,0x58
   14000985a:	rex.XB push r13
   14000985c:	add    BYTE PTR [rax],al
   14000985e:	add    BYTE PTR [rax],al
   140009860:	movabs al,ds:0x2e00000008000084
   140009869:	rex.XB push r10
   14000986b:	push   rsp
   14000986c:	and    al,0x58
   14000986e:	rex.XB pop r10
   140009870:	add    BYTE PTR [rax],al
   140009872:	add    BYTE PTR [rax],al
   140009874:	test   al,0x84
   140009876:	add    BYTE PTR [rax],al
   140009878:	or     BYTE PTR [rax],al
   14000987a:	add    BYTE PTR [rax],al
   14000987c:	cs rex.XB push r10
   14000987f:	push   rsp
   140009880:	and    al,0x58
   140009882:	rex.WB
   140009883:	add    BYTE PTR [r8],al
   140009886:	add    BYTE PTR [rax],al
   140009888:	mov    al,0x84
   14000988a:	add    BYTE PTR [rax],al
   14000988c:	or     BYTE PTR [rax],al
   14000988e:	add    BYTE PTR [rax],al
   140009890:	cs rex.XB push r10
   140009893:	push   rsp
   140009894:	and    al,0x58
   140009896:	rex.WB
   140009897:	rex.B
   140009898:	add    BYTE PTR [r8],al
   14000989b:	add    BYTE PTR [rax+0x8000084],bh
   1400098a1:	add    BYTE PTR [rax],al
   1400098a3:	add    BYTE PTR [rsi],ch
   1400098a5:	rex.XB push r10
   1400098a7:	push   rsp
   1400098a8:	and    al,0x58
   1400098aa:	rex.WB pop r9
   1400098ac:	add    BYTE PTR [rax],al
   1400098ae:	add    BYTE PTR [rax],al
   1400098b0:	rol    BYTE PTR [rax+rax*1+0x800],0x0
   1400098b8:	cs rex.XB push r10
   1400098bb:	push   rsp
   1400098bc:	and    al,0x58
   1400098be:	rex.WB pop r10
   1400098c0:	add    BYTE PTR [rax],al
   1400098c2:	add    BYTE PTR [rax],al
   1400098c4:	enter  0x84,0x0
   1400098c8:	je     0x1400098cb
   1400098ca:	add    BYTE PTR [rax],al
   1400098cc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   1400098d5:	add    BYTE PTR [rax],al
   1400098d7:	add    BYTE PTR [rax-0x7a],al
   1400098da:	add    BYTE PTR [rax],al
   1400098dc:	and    BYTE PTR [rcx],dl
   1400098de:	add    BYTE PTR [rax],al
   1400098e0:	cs jb  0x140009947
   1400098e3:	(bad)  
   1400098e4:	je     0x140009947
   1400098e6:	add    BYTE PTR [rax],al
   1400098e8:	(bad)  
   1400098e9:	xchg   edi,eax
   1400098ea:	add    BYTE PTR [rax],al
   1400098ec:	hlt    
   1400098ed:	add    al,BYTE PTR [rax]
   1400098ef:	add    BYTE PTR [rsi],ch
   1400098f1:	jb     0x140009957
   1400098f3:	(bad)  
   1400098f4:	je     0x140009957
   1400098f6:	and    al,0x7a
   1400098f8:	jp     0x140009974
   1400098fa:	fs (bad) 
   1400098fc:	add    BYTE PTR [eax],al
   1400098ff:	add    BYTE PTR [rax-0x66],ah
   140009902:	add    BYTE PTR [rax],al
   140009904:	add    al,0x10
   140009906:	add    BYTE PTR [rax],al
   140009908:	cs js  0x14000996f
   14000990b:	(bad)  
   14000990c:	je     0x14000996f
   14000990e:	add    BYTE PTR [rax],al
   140009910:	push   0xffffffff9c0000aa
   140009915:	add    al,BYTE PTR [rax]
   140009917:	add    BYTE PTR [rsi],ch
   140009919:	js     0x14000997f
   14000991b:	(bad)  
   14000991c:	je     0x14000997f
   14000991e:	and    al,0x78
   140009920:	add    BYTE PTR [rax],al
   140009922:	add    BYTE PTR [rax],al
   140009924:	add    al,0xad
   140009926:	add    BYTE PTR [rax],al
   140009928:	add    BYTE PTR [rax],al
   14000992b:	add    BYTE PTR [rsi],ch
   14000992d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140009936:	add    BYTE PTR [rax],al
   140009938:	rex.R lods eax,DWORD PTR ds:[rsi]
   14000993a:	add    BYTE PTR [rax],al
   14000993c:	and    BYTE PTR [rax],al
   14000993e:	add    BYTE PTR [rax],al
   140009940:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000994a:	add    BYTE PTR [rax],al
   14000994c:	push   0x400000ad
   140009951:	add    BYTE PTR [rax],al
   140009953:	add    BYTE PTR [rsi],ch
   140009955:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000995e:	add    BYTE PTR [rax],al
   140009960:	test   al,0xad
   140009962:	add    BYTE PTR [rax],al
   140009964:	push   0x0
   140009966:	add    BYTE PTR [rax],al
   140009968:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140009972:	add    BYTE PTR [rax],al
   140009974:	sbb    BYTE PTR [rsi+0x400000],ch
   14000997a:	add    BYTE PTR [rax],al
   14000997c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140009986:	add    BYTE PTR [rax],al
   140009988:	pop    rax
   140009989:	scas   al,BYTE PTR es:[rdi]
   14000998a:	add    BYTE PTR [rax],al
   14000998c:	nop
   14000998d:	add    DWORD PTR [rax],eax
   14000998f:	add    BYTE PTR [rsi],ch
   140009991:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140009999:	add    BYTE PTR [rax],al
   14000999b:	add    al,ch
   14000999d:	scas   eax,DWORD PTR es:[rdi]
   14000999e:	add    BYTE PTR [rax],al
   1400099a0:	adc    al,0x0
   1400099a2:	add    BYTE PTR [rax],al
   1400099a4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400099ad:	add    BYTE PTR [rax],al
   1400099af:	add    BYTE PTR [rax],al
   1400099b1:	mov    al,0x0
   1400099b3:	add    BYTE PTR [rax+0x4],dh
   1400099b6:	add    BYTE PTR [rax],al
   1400099b8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   1400099c1:	add    BYTE PTR [rax],al
   1400099c3:	add    BYTE PTR [rax-0x4c],dh
   1400099c6:	add    BYTE PTR [rax],al
   1400099c8:	mov    eax,0x2e00000d
   1400099cd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400099d5:	add    BYTE PTR [rax],al
   1400099d7:	add    BYTE PTR [rax],al
   1400099d9:	rol    BYTE PTR [rax],1
   1400099db:	add    BYTE PTR [rax+0x2e000000],cl
   1400099e1:	fs (bad) 
   1400099e3:	je     0x140009a46
   1400099e5:	add    BYTE PTR [rax],al
   1400099e7:	add    BYTE PTR [rax+0x3b0000d0],cl
   1400099ed:	add    DWORD PTR [rax],eax
   1400099ef:	add    BYTE PTR [rsi],ch
   1400099f1:	fs (bad) 
   1400099f3:	je     0x140009a56
   1400099f5:	and    al,0x72
   1400099f7:	add    al,dl
   1400099f9:	rol    DWORD PTR [rax],1
   1400099fb:	add    BYTE PTR [rax],ch
   1400099fd:	(bad)  
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	cs (bad) 
   140009a03:	jae    0x140009a05
   140009a05:	add    BYTE PTR [rax],al
   140009a07:	add    BYTE PTR [rax],al
   140009a09:	loopne 0x140009a0b
   140009a0b:	add    BYTE PTR [rdi+rax*1+0x0],bl
   140009a0f:	add    BYTE PTR [rsi],ch
   140009a11:	jo     0x140009a77
   140009a13:	(bad)  
   140009a14:	je     0x140009a77
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	add    al,dh
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	add    BYTE PTR [rax],al
   140009a1f:	add    BYTE PTR [rsi],ch
   140009a21:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	add    BYTE PTR [rax],al
   140009a2e:	add    DWORD PTR [rax],eax
   140009a30:	movabs al,ds:0x637273722e000000
   140009a39:	and    al,0x30
   140009a3b:	xor    DWORD PTR [rax],eax
   140009a3d:	add    BYTE PTR [rax],al
   140009a3f:	add    BYTE PTR [rax-0x6fffff00],ah
   140009a45:	(bad)  
   140009a46:	add    BYTE PTR [rax],al
   140009a48:	cs jb  0x140009abe
   140009a4b:	jb     0x140009ab0
   140009a4d:	and    al,0x30
   140009a4f:	xor    al,BYTE PTR [rax]
	...
   140009a5d:	add    BYTE PTR [rax],al
   140009a5f:	add    BYTE PTR [rcx],al
   140009a61:	sbb    DWORD PTR [rdx],ecx
   140009a63:	add    BYTE PTR [rcx],bl
   140009a65:	je     0x140009a70
   140009a67:	add    BYTE PTR [rcx],bl
   140009a69:	or     BYTE PTR fs:[rax],al
   140009a6c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140009a70:	sbb    DWORD PTR [rsi+rax*1],esi
   140009a73:	add    BYTE PTR [rcx],bl
   140009a75:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1460f9c5b
   140009a7b:	add    BYTE PTR [rdi],cl
   140009a7d:	fs (bad) 
   140009a7f:	add    BYTE PTR [rdi],cl
   140009a81:	xor    al,0x6
   140009a83:	add    BYTE PTR [rdi],cl
   140009a85:	xor    cl,BYTE PTR [rbx]
   140009a87:	jo     0x140009a9a
   140009a89:	adc    eax,DWORD PTR [rdx]
   140009a8b:	add    BYTE PTR [rdx],cl
   140009a8d:	push   rdx
   140009a8e:	(bad)  
   140009a8f:	xor    BYTE PTR [rdx+0x65],dh
   140009a92:	add    BYTE PTR [rax],al
   140009a94:	fcom   DWORD PTR [rcx-0x10000]
   140009a9a:	(bad)  
   140009a9b:	push   QWORD PTR [rsi]
   140009a9d:	outs   dx,DWORD PTR ds:[rsi]
   140009a9e:	add    BYTE PTR [rax],al
   140009aa0:	add    BYTE PTR [rax],al
   140009aa2:	add    BYTE PTR [rax],al
   140009aa4:	rex.R outs dx,DWORD PTR ds:[rsi]
   140009aa6:	add    BYTE PTR [rax],al
   140009aa8:	add    BYTE PTR [rax],al
   140009aaa:	add    BYTE PTR [rax],al
   140009aac:	push   rsp
   140009aad:	outs   dx,DWORD PTR ds:[rsi]
   140009aae:	add    BYTE PTR [rax],al
   140009ab0:	(bad)  
   140009ab1:	adc    DWORD PTR [rax],eax
   140009ab3:	add    bh,bh
   140009ab5:	(bad)  
   140009ab6:	(bad)  
   140009ab7:	push   QWORD PTR [rsi+0x11]
   140009aba:	add    BYTE PTR [rax],al
   140009abc:	add    BYTE PTR [rax],al
   140009abe:	add    BYTE PTR [rax],al
   140009ac0:	mov    DWORD PTR [rcx],edx
   140009ac2:	add    BYTE PTR [rax],al
   140009ac4:	(bad)  
   140009ac5:	(bad)  
   140009ac6:	(bad)  
   140009ac7:	call   QWORD PTR [rcx]
   140009ac9:	adc    DWORD PTR [rcx],eax
   140009acb:	add    BYTE PTR [rcx],cl
   140009acd:	and    al,BYTE PTR [rax]
   140009acf:	add    BYTE PTR [rdx+0x65],dh
   140009ad2:	add    BYTE PTR [rax],al
   140009ad4:	mov    al,0x91
   140009ad6:	add    BYTE PTR [rax],al
   140009ad8:	(bad)  
   140009ad9:	(bad)  
   140009ada:	(bad)  
   140009adb:	jmp    QWORD PTR [rsi+0x6f]
   140009ade:	add    BYTE PTR [rax],al
   140009ae0:	mov    al,0x11
   140009ae2:	add    BYTE PTR [rax],al
   140009ae4:	(bad)  
   140009ae5:	(bad)  
   140009ae6:	(bad)  
   140009ae7:	call   QWORD PTR [rcx]
   140009ae9:	adc    DWORD PTR [rcx],eax
   140009aeb:	add    BYTE PTR [rcx],cl
   140009aed:	and    al,BYTE PTR [rax]
   140009aef:	add    BYTE PTR [rdx+0x65],dh
   140009af2:	add    BYTE PTR [rax],al
   140009af4:	mov    BYTE PTR [rcx-0x10000],dl
   140009afa:	(bad)  
   140009afb:	(bad)  
   140009afc:	js     0x140009b6d
   140009afe:	add    BYTE PTR [rax],al
   140009b00:	add    BYTE PTR [rax],al
   140009b02:	add    BYTE PTR [rax],al
   140009b04:	xchg   BYTE PTR [rdi+0x0],ch
   140009b07:	add    BYTE PTR [rax],al
   140009b09:	add    BYTE PTR [rax],al
   140009b0b:	add    BYTE PTR [rsi-0x27ffff91],dl
   140009b11:	adc    DWORD PTR [rax],eax
   140009b13:	add    bh,bh
   140009b15:	(bad)  
   140009b16:	(bad)  
   140009b17:	(bad)  
   140009b18:	jmp    0x140009b2e
   140009b1d:	add    BYTE PTR [rax],al
   140009b1f:	add    ah,bh
   140009b21:	adc    DWORD PTR [rax],eax
   140009b23:	add    bh,bh
   140009b25:	(bad)  
   140009b26:	(bad)  
   140009b27:	call   QWORD PTR [rcx]
   140009b29:	sbb    BYTE PTR [rax+rax*1],al
   140009b2c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009b2f:	add    BYTE PTR [rdx+rdx*2],cl
   140009b32:	or     BYTE PTR [rax+0x72],dh
   140009b35:	add    BYTE PTR gs:[rax],al
   140009b38:	(bad)  
   140009b39:	xchg   ecx,eax
   140009b3a:	add    BYTE PTR [rax],al
   140009b3c:	(bad)  
   140009b3d:	(bad)  
   140009b3e:	(bad)  
   140009b3f:	jmp    FWORD PTR [rax+0x6f]
   140009b45:	add    BYTE PTR [rax],al
   140009b47:	add    BYTE PTR [rsi+0x6f],dh
   140009b4d:	add    BYTE PTR [rax],al
   140009b4f:	add    dh,al
   140009b51:	outs   dx,DWORD PTR ds:[rsi]
   140009b52:	add    BYTE PTR [rax],al
   140009b54:	add    BYTE PTR [rax],al
   140009b56:	add    BYTE PTR [rax],al
   140009b58:	adc    al,BYTE PTR [rax]
   140009b5b:	add    bh,bh
   140009b5d:	(bad)  
   140009b5e:	(bad)  
   140009b5f:	jmp    QWORD PTR [rdi+0x12]
   140009b62:	add    BYTE PTR [rax],al
   140009b64:	add    DWORD PTR [rax],eax
   140009b66:	add    BYTE PTR [rax],al
   140009b68:	ins    DWORD PTR es:[rdi],dx
   140009b69:	adc    al,BYTE PTR [rax]
   140009b6b:	add    BYTE PTR [rax],al
   140009b6d:	add    BYTE PTR [rax],al
   140009b6f:	add    BYTE PTR [rdi+0x12],bh
   140009b72:	add    BYTE PTR [rax],al
   140009b74:	(bad)  
   140009b75:	(bad)  
   140009b76:	(bad)  
   140009b77:	call   QWORD PTR [rcx]
   140009b79:	adc    DWORD PTR [rcx],eax
   140009b7b:	add    BYTE PTR [rcx],cl
   140009b7d:	and    al,BYTE PTR [rax]
   140009b7f:	add    BYTE PTR [rdx+0x65],dh
   140009b82:	add    BYTE PTR [rax],al
   140009b84:	cmp    BYTE PTR [rcx-0x10000],dl
   140009b8a:	(bad)  
   140009b8b:	(bad)  
   140009b8c:	fsubr  DWORD PTR [rdi+0x0]
   140009b8f:	add    BYTE PTR [rdx+rdx*1-0x10000],ch
   140009b96:	(bad)  
   140009b97:	inc    DWORD PTR [rcx]
   140009b99:	add    al,0x1
   140009b9b:	add    BYTE PTR [rdx+riz*4],al
   140009b9e:	add    BYTE PTR [rax],al
   140009ba0:	adc    DWORD PTR [rsp+rax*1],edx
   140009ba3:	add    BYTE PTR [rsp+rsi*1],dl
   140009ba6:	or     al,0x0
   140009ba8:	(bad)  
   140009ba9:	xchg   edx,eax
   140009baa:	add    dh,BYTE PTR [rax+0x72]
   140009bad:	add    BYTE PTR gs:[rax],al
   140009bb0:	adc    BYTE PTR [rcx-0x10000],dl
   140009bb6:	(bad)  
   140009bb7:	(bad)  
   140009bb8:	(bad)  
   140009bb9:	outs   dx,DWORD PTR ds:[rsi]
   140009bba:	add    BYTE PTR [rax],al
   140009bbc:	add    BYTE PTR [rax],al
   140009bbe:	add    BYTE PTR [rax],al
   140009bc0:	imul   BYTE PTR [rdi+0x0]
   140009bc3:	add    BYTE PTR [rcx],al
   140009bc5:	add    BYTE PTR [rax],al
   140009bc7:	add    BYTE PTR [rax+rsi*2],al
   140009bca:	add    BYTE PTR [rax],al
   140009bcc:	add    DWORD PTR [rax],eax
   140009bce:	add    BYTE PTR [rax],al
   140009bd0:	adc    BYTE PTR [rax+0x0],dh
   140009bd3:	add    BYTE PTR [rax],al
   140009bd5:	add    BYTE PTR [rax],al
   140009bd7:	add    BYTE PTR [rax],ah
   140009bd9:	jo     0x140009bdb
   140009bdb:	add    bh,bh
   140009bdd:	(bad)  
   140009bde:	(bad)  
   140009bdf:	jmp    FWORD PTR [rax+rsi*2]
	...
   140009bee:	add    BYTE PTR [rax],al
   140009bf0:	rex adc eax,DWORD PTR [rax]
   140009bf3:	add    bh,bh
   140009bf5:	(bad)  
   140009bf6:	(bad)  
   140009bf7:	jmp    QWORD PTR [rsi+0x13]
   140009bfa:	add    BYTE PTR [rax],al
   140009bfc:	add    BYTE PTR [rax],al
   140009bfe:	add    BYTE PTR [rax],al
   140009c00:	jl     0x140009c15
   140009c02:	add    BYTE PTR [rax],al
   140009c04:	add    DWORD PTR [rax],eax
   140009c06:	add    BYTE PTR [rax],al
   140009c08:	popf   
   140009c09:	adc    eax,DWORD PTR [rax]
   140009c0b:	add    BYTE PTR [rdx],al
   140009c0d:	add    BYTE PTR [rax],al
   140009c0f:	add    BYTE PTR [rdi+0x4000013],ah
   140009c15:	add    BYTE PTR [rax],al
   140009c17:	add    BYTE PTR [rcx+0x13],dh
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    BYTE PTR [rbp-0xffffed],dh
   140009c25:	(bad)  
   140009c26:	(bad)  
   140009c27:	(bad)  
   140009c28:	ficom  DWORD PTR [rbx]
   140009c2a:	add    BYTE PTR [rax],al
   140009c2c:	add    eax,0xe6000000
   140009c31:	adc    eax,DWORD PTR [rax]
   140009c33:	add    bh,bh
   140009c35:	(bad)  
   140009c36:	(bad)  
   140009c37:	inc    DWORD PTR [rcx]
   140009c39:	adc    al,0x8
   140009c3b:	add    BYTE PTR [rsp+riz*2],dl
   140009c3e:	or     BYTE PTR [rax],al
   140009c40:	adc    al,0x54
   140009c42:	(bad)  
   140009c43:	add    BYTE PTR [rsp+rsi*1],dl
   140009c46:	(bad)  
   140009c47:	add    BYTE PTR [rdx+rsi*1],dl
   140009c4a:	adc    BYTE PTR [rax+0x1],dh
   140009c4d:	or     al,BYTE PTR [rax+rax*1]
   140009c50:	or     dh,BYTE PTR [rsi+rax*1]
   140009c53:	add    BYTE PTR [rdx],cl
   140009c55:	xor    al,BYTE PTR [rsi]
   140009c57:	jo     0x140009c72
   140009c59:	sbb    DWORD PTR [rsi],eax
   140009c5b:	add    BYTE PTR [rax],dl
   140009c5d:	jb     0x140009c6b
   140009c5f:	lock or ah,al
   140009c62:	or     BYTE PTR [rax+0x7],dh
   140009c65:	(bad)  
   140009c66:	(bad)  
   140009c67:	xor    BYTE PTR [rdx+0x65],dh
   140009c6a:	add    BYTE PTR [rax],al
   140009c6c:	call   0x13f009d01
   140009c71:	(bad)  
   140009c72:	(bad)  
   140009c73:	(bad)  
   140009c74:	ds jo  0x140009c77
	...
   140009c7f:	add    BYTE PTR [rcx],al
   140009c81:	add    BYTE PTR [rax],al
   140009c83:	add    BYTE PTR [rdx+0x70],cl
   140009c86:	add    BYTE PTR [rax],al
   140009c88:	add    al,BYTE PTR [rax]
   140009c8a:	add    BYTE PTR [rax],al
   140009c8c:	push   rsi
   140009c8d:	jo     0x140009c8f
   140009c8f:	add    BYTE PTR [rbx],al
   140009c91:	add    BYTE PTR [rax],al
   140009c93:	add    BYTE PTR [rax+rsi*2+0x0],ah
   140009c97:	add    BYTE PTR [rbx],al
   140009c99:	add    BYTE PTR [rax],al
   140009c9b:	add    BYTE PTR [rax+0x70],dh
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	add    DWORD PTR [rax],eax
   140009ca2:	add    BYTE PTR [rax],al
   140009ca4:	xor    BYTE PTR [rax+0x0],0x0
	...
   140009cb0:	add    DWORD PTR [rax],eax
   140009cb2:	add    BYTE PTR [rax],al
   140009cb4:	(bad)  
   140009cb5:	add    BYTE PTR [rax],al
   140009cb7:	add    BYTE PTR [rdi],al
   140009cb9:	add    BYTE PTR [rax],al
   140009cbb:	add    BYTE PTR [rcx],al
   140009cbd:	add    BYTE PTR [rax],al
   140009cbf:	add    ah,al
   140009cc1:	pushf  
   140009cc2:	add    BYTE PTR [rax],al
   140009cc4:	or     BYTE PTR [rax],al
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	mov    al,0xd0
   140009cca:	add    BYTE PTR [rax],al
   140009ccc:	add    BYTE PTR [rax],al
   140009cce:	add    BYTE PTR [rax],al
   140009cd0:	mov    WORD PTR [rax+0x0],?
   140009cd3:	add    BYTE PTR [rax],bh
	...
   140009cdd:	add    BYTE PTR [rax],al
   140009cdf:	add    BYTE PTR [rax],dh
   140009ce1:	(bad)  
   140009ce2:	add    BYTE PTR [rax],al
   140009ce4:	(bad)  
   140009ce5:	(bad)  
   140009ce6:	(bad)  
   140009ce7:	call   FWORD PTR [rsi+0x1000016]
   140009ced:	add    BYTE PTR [rax],al
   140009cef:	add    BYTE PTR [rax+0x2000016],dh
   140009cf5:	add    BYTE PTR [rax],al
   140009cf7:	add    dh,al
   140009cf9:	(bad)  
   140009cfa:	add    BYTE PTR [rax],al
   140009cfc:	add    eax,DWORD PTR [rax]
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	(bad)  
   140009d01:	(bad)  
   140009d02:	add    BYTE PTR [rax],al
   140009d04:	add    al,0x0
   140009d06:	add    BYTE PTR [rax],al
   140009d08:	hlt    
   140009d09:	(bad)  
   140009d0a:	add    BYTE PTR [rax],al
   140009d0c:	add    eax,0xfa000000
   140009d11:	(bad)  
   140009d12:	add    BYTE PTR [rax],al
   140009d14:	add    al,BYTE PTR [rax]
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	(bad)  
   140009d19:	(bad)  
   140009d1a:	add    BYTE PTR [rax],al
   140009d1c:	add    DWORD PTR [rax],eax
   140009d1e:	add    BYTE PTR [rax],al
   140009d20:	and    al,0x17
   140009d22:	add    BYTE PTR [rax],al
   140009d24:	(bad)  
   140009d25:	add    BYTE PTR [rax],al
   140009d27:	add    BYTE PTR [rdi+rdx*1+0x0],al
   140009d2b:	add    BYTE PTR [rcx],al
   140009d2d:	add    BYTE PTR [rax],al
   140009d2f:	add    BYTE PTR [rdx+0x17],dh
   140009d32:	add    BYTE PTR [rax],al
   140009d34:	add    BYTE PTR [rax],al
   140009d36:	add    BYTE PTR [rax],al
   140009d38:	movabs ds:0x8cffffffff000017,eax
   140009d41:	jo     0x140009d43
   140009d43:	add    BYTE PTR [rax],al
   140009d45:	add    BYTE PTR [rax],al
   140009d47:	add    BYTE PTR [rcx+0x7000070],bl
   140009d4d:	add    BYTE PTR [rax],al
   140009d4f:	add    BYTE PTR [rax+0x70],ah
   140009d55:	add    BYTE PTR [rax],al
   140009d57:	add    BYTE PTR [rcx],bl
   140009d59:	or     al,BYTE PTR [rdx]
   140009d5b:	add    BYTE PTR [rdx],cl
   140009d5d:	xor    al,BYTE PTR [rsi]
   140009d5f:	push   rax
   140009d60:	jb     0x140009dc7
   140009d62:	add    BYTE PTR [rax],al
   140009d64:	call   0x151009df9
   140009d69:	adc    eax,DWORD PTR [rdx]
   140009d6b:	add    BYTE PTR [rdx],cl
   140009d6d:	push   rdx
   140009d6e:	(bad)  
   140009d6f:	xor    BYTE PTR [rdx+0x65],dh
   140009d72:	add    BYTE PTR [rax],al
   140009d74:	rcl    BYTE PTR [rax-0x10000],0xff
   140009d7b:	push   QWORD PTR [rax+rsi*2-0x10000]
   140009d82:	(bad)  
   140009d83:	inc    eax
   140009d85:	jo     0x140009d87
   140009d87:	add    BYTE PTR [rcx],al
   140009d89:	add    BYTE PTR [rax],al
   140009d8b:	add    dh,cl
   140009d8d:	jo     0x140009d8f
   140009d8f:	add    BYTE PTR [rcx],al
   140009d91:	add    BYTE PTR [rax],al
   140009d93:	add    dh,bl
   140009d95:	jo     0x140009d97
   140009d97:	add    BYTE PTR [rax+0x18],dl
   140009d9a:	add    BYTE PTR [rax],al
   140009d9c:	(bad)  
   140009d9d:	(bad)  
   140009d9e:	(bad)  
   140009d9f:	jmp    QWORD PTR [rsi+0x18]
   140009da2:	add    BYTE PTR [rax],al
   140009da4:	add    DWORD PTR [rax],eax
   140009da6:	add    BYTE PTR [rax],al
   140009da8:	jns    0x140009dc2
   140009daa:	add    BYTE PTR [rax],al
   140009dac:	(bad)  
   140009dad:	(bad)  
   140009dae:	(bad)  
   140009daf:	inc    DWORD PTR [rcx]
   140009db1:	add    al,0x1
   140009db3:	add    BYTE PTR [rdx+rax*2],al
   140009db6:	add    BYTE PTR [rax],al
   140009db8:	adc    DWORD PTR [rdx],edx
   140009dba:	add    DWORD PTR [rax],eax
   140009dbc:	or     DWORD PTR [rdx+0x0],esp
   140009dbf:	add    BYTE PTR [rdx+0x65],dh
   140009dc2:	add    BYTE PTR [rax],al
   140009dc4:	cwde   
   140009dc5:	nop
   140009dc6:	add    BYTE PTR [rax],al
   140009dc8:	(bad)  
   140009dc9:	(bad)  
   140009dca:	(bad)  
   140009dcb:	push   rax
   140009dcd:	jo     0x140009dcf
   140009dcf:	add    al,al
   140009dd1:	sbb    BYTE PTR [rax],al
   140009dd3:	add    bh,bh
   140009dd5:	(bad)  
   140009dd6:	(bad)  
   140009dd7:	jmp    rax
   140009dd9:	sbb    BYTE PTR [rax],al
   140009ddb:	add    BYTE PTR [rax],al
   140009ddd:	add    BYTE PTR [rax],al
   140009ddf:	add    BYTE PTR [rcx],al
   140009de1:	(bad)  
   140009de2:	add    al,BYTE PTR [rax]
   140009de4:	(bad)  
   140009de5:	xor    al,BYTE PTR [rdx]
   140009de7:	push   rax
   140009de8:	adc    DWORD PTR [rdx],edx
   140009dea:	add    DWORD PTR [rax],eax
   140009dec:	or     DWORD PTR [rdx],esp
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	jb     0x140009e57
   140009df2:	add    BYTE PTR [rax],al
   140009df4:	jo     0x140009d86
   140009df6:	add    BYTE PTR [rax],al
   140009df8:	(bad)  
   140009df9:	(bad)  
   140009dfa:	(bad)  
   140009dfb:	call   FWORD PTR [rcx+rsi*2]
   140009dfe:	add    BYTE PTR [rax],al
   140009e00:	clc    
   140009e01:	sbb    BYTE PTR [rax],al
   140009e03:	add    bh,bh
   140009e05:	(bad)  
   140009e06:	(bad)  
   140009e07:	jmp    QWORD PTR [rax]
   140009e09:	sbb    DWORD PTR [rax],eax
   140009e0b:	add    BYTE PTR [rax],al
   140009e0d:	add    BYTE PTR [rax],al
   140009e0f:	add    BYTE PTR [rcx],dl
   140009e11:	sbb    BYTE PTR [rdx],al
   140009e13:	add    BYTE PTR [rax],dl
   140009e15:	push   rdx
   140009e16:	or     al,0x30
   140009e18:	jb     0x140009e7f
   140009e1a:	add    BYTE PTR [rax],al
   140009e1c:	xchg   rbp,rax
   140009e1e:	add    BYTE PTR [rax],al
   140009e20:	(bad)  
   140009e21:	(bad)  
   140009e22:	(bad)  
   140009e23:	dec    DWORD PTR [rax+0x71]
   140009e26:	add    BYTE PTR [rax],al
   140009e28:	sbb    QWORD PTR [rax],rax
   140009e2b:	add    bh,bh
   140009e2d:	(bad)  
   140009e2e:	(bad)  
   140009e2f:	jmp    FWORD PTR [rsi+0x19]
   140009e32:	add    BYTE PTR [rax],al
   140009e34:	add    BYTE PTR [rax],al
   140009e36:	add    BYTE PTR [rax],al
   140009e38:	js     0x140009e53
   140009e3a:	add    BYTE PTR [rax],al
   140009e3c:	(bad)  
   140009e3d:	(bad)  
   140009e3e:	(bad)  
   140009e3f:	call   QWORD PTR [rcx]
   140009e41:	adc    al,BYTE PTR [rcx]
   140009e43:	add    BYTE PTR [rcx],cl
   140009e45:	(bad)  
   140009e46:	add    BYTE PTR [rax],al
   140009e48:	jb     0x140009eaf
   140009e4a:	add    BYTE PTR [rax],al
   140009e4c:	and    BYTE PTR [rbp+0x19880000],dl
   140009e52:	add    BYTE PTR [rax],al
   140009e54:	(bad)  
   140009e55:	(bad)  
   140009e56:	(bad)  
   140009e57:	inc    DWORD PTR [rcx]
   140009e59:	add    al,0x1
   140009e5b:	add    BYTE PTR [rdx+rax*4],al
   140009e5e:	add    BYTE PTR [rax],al
   140009e60:	adc    DWORD PTR [rax],ebx
   140009e62:	add    al,0x0
   140009e64:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009e67:	add    BYTE PTR [rdx],cl
   140009e69:	push   rdx
   140009e6a:	(bad)  
   140009e6b:	jo     0x140009edf
   140009e6d:	add    BYTE PTR gs:[rax],al
   140009e70:	clc    
   140009e71:	xchg   esp,eax
   140009e72:	add    BYTE PTR [rax],al
   140009e74:	add    BYTE PTR [rax],al
   140009e76:	add    BYTE PTR [rax],al
   140009e78:	lock sbb DWORD PTR [rax],eax
   140009e7b:	add    bh,bh
   140009e7d:	(bad)  
   140009e7e:	(bad)  
   140009e7f:	call   QWORD PTR [rcx]
   140009e81:	adc    eax,DWORD PTR [rdx]
   140009e83:	add    BYTE PTR [rdx],cl
   140009e85:	push   rdx
   140009e86:	(bad)  
   140009e87:	xor    BYTE PTR [rdx+0x65],dh
   140009e8a:	add    BYTE PTR [rax],al
   140009e8c:	rcl    BYTE PTR [rax+rax*1+0x1a4000],1
   140009e93:	add    bh,bh
   140009e95:	(bad)  
   140009e96:	(bad)  
   140009e97:	call   FWORD PTR [rbp+0x1a]
   140009e9a:	add    BYTE PTR [rax],al
   140009e9c:	add    BYTE PTR [rax],al
   140009e9e:	add    BYTE PTR [rax],al
   140009ea0:	sbb    al,BYTE PTR [eax]
   140009ea3:	add    bh,bh
   140009ea5:	(bad)  
   140009ea6:	(bad)  
   140009ea7:	call   QWORD PTR [rcx]
   140009ea9:	adc    eax,DWORD PTR [rdx]
   140009eab:	add    BYTE PTR [rdx],cl
   140009ead:	push   rdx
   140009eae:	(bad)  
   140009eaf:	xor    BYTE PTR [rdx+0x65],dh
   140009eb2:	add    BYTE PTR [rax],al
   140009eb4:	test   al,0x94
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	(bad)  
   140009eb9:	(bad)  
   140009eba:	(bad)  
   140009ebb:	call   FWORD PTR [rcx+rsi*2+0x0]
   140009ebf:	add    BYTE PTR [rax],al
   140009ec1:	add    BYTE PTR [rax],al
   140009ec3:	add    BYTE PTR [rdx+0x71],ch
   140009ec6:	add    BYTE PTR [rax],al
   140009ec8:	mov    WORD PTR [rdx],ds
   140009eca:	add    BYTE PTR [rax],al
   140009ecc:	(bad)  
   140009ecd:	(bad)  
   140009ece:	(bad)  
   140009ecf:	jmp    FWORD PTR [rdx+rbx*1+0x0]
   140009ed6:	add    BYTE PTR [rax],al
   140009ed8:	int    0x1a
   140009eda:	add    BYTE PTR [rax],al
   140009edc:	(bad)  
   140009edd:	(bad)  
   140009ede:	(bad)  
   140009edf:	call   FWORD PTR [rcx]
   140009ee1:	adc    eax,DWORD PTR [rcx]
   140009ee3:	add    BYTE PTR [rdx+riz*8],al
   140009ee6:	add    BYTE PTR [rax],al
   140009ee8:	and    BYTE PTR [rbp+0x0],0x0
   140009eec:	(bad)  
   140009eed:	add    BYTE PTR [rax],al
   140009eef:	add    BYTE PTR [rcx],dl
   140009ef1:	sbb    BYTE PTR [rax+rax*1],al
   140009ef4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009ef7:	add    BYTE PTR [rdx],cl
   140009ef9:	push   rdx
   140009efa:	(bad)  
   140009efb:	jo     0x140009f6f
   140009efd:	add    BYTE PTR gs:[rax],al
   140009f00:	adc    BYTE PTR [rax+rax*1+0x0],0x0
   140009f08:	push   rax
   140009f09:	sbb    eax,DWORD PTR [rax]
   140009f0b:	add    bh,bh
   140009f0d:	(bad)  
   140009f0e:	(bad)  
   140009f0f:	push   QWORD PTR [rdi+0x1b]
   140009f12:	add    BYTE PTR [rax],al
   140009f14:	add    BYTE PTR [rax],al
   140009f16:	add    BYTE PTR [rax],al
   140009f18:	cwde   
   140009f19:	sbb    eax,DWORD PTR [rax]
   140009f1b:	add    bh,bh
   140009f1d:	(bad)  
   140009f1e:	(bad)  
   140009f1f:	call   QWORD PTR [rcx]
   140009f21:	sbb    BYTE PTR [rax+rax*1],al
   140009f24:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009f27:	add    BYTE PTR [rdx],cl
   140009f29:	push   rdx
   140009f2a:	(bad)  
   140009f2b:	jo     0x140009f9f
   140009f2d:	add    BYTE PTR gs:[rax],al
   140009f30:	pop    rax
   140009f31:	xchg   esp,eax
   140009f32:	add    BYTE PTR [rax],al
   140009f34:	add    BYTE PTR [rax],al
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	(bad)  
   140009f39:	sbb    eax,DWORD PTR [rax]
   140009f3b:	add    bh,bh
   140009f3d:	(bad)  
   140009f3e:	(bad)  
   140009f3f:	(bad)  
   140009f40:	jmp    0x140009f60
   140009f45:	add    BYTE PTR [rax],al
   140009f47:	add    BYTE PTR [rcx],bl
   140009f49:	sbb    al,0x0
   140009f4b:	add    bh,bh
   140009f4d:	(bad)  
   140009f4e:	(bad)  
   140009f4f:	call   QWORD PTR [rcx]
   140009f51:	sbb    BYTE PTR [rax+rax*1],al
   140009f54:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009f57:	add    BYTE PTR [rdx],cl
   140009f59:	push   rdx
   140009f5a:	(bad)  
   140009f5b:	jo     0x140009fcf
   140009f5d:	add    BYTE PTR gs:[rax],al
   140009f60:	xor    BYTE PTR [rax+rax*1-0x100],dl
   140009f67:	inc    DWORD PTR [rax+0x71]
   140009f6d:	add    BYTE PTR [rax],al
   140009f6f:	add    BYTE PTR [rsi-0xffff8f],cl
   140009f75:	(bad)  
   140009f76:	(bad)  
   140009f77:	call   FWORD PTR [rsi+0x71]
   140009f7d:	add    BYTE PTR [rax],al
   140009f7f:	add    BYTE PTR [rax],dh
   140009f81:	sbb    al,0x0
   140009f83:	add    bh,bh
   140009f85:	(bad)  
   140009f86:	(bad)  
   140009f87:	call   QWORD PTR [rbp+0x1c]
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	add    BYTE PTR [rax],al
   140009f8e:	add    BYTE PTR [rax],al
   140009f90:	test   BYTE PTR [rax+rax*1],bl
   140009f93:	add    BYTE PTR [rdx],al
   140009f95:	add    BYTE PTR [rax],al
   140009f97:	add    BYTE PTR [rsi-0xffffe4],cl
   140009f9d:	(bad)  
   140009f9e:	(bad)  
   140009f9f:	call   QWORD PTR [rcx]
   140009fa1:	adc    eax,DWORD PTR [rdx]
   140009fa3:	add    BYTE PTR [rdx],cl
   140009fa5:	push   rdx
   140009fa6:	(bad)  
   140009fa7:	xor    BYTE PTR [rdx+0x65],dh
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	or     BYTE PTR [rax+rax*1-0x100],dl
   140009fb3:	push   QWORD PTR [rax-0xffff8f]
   140009fb9:	(bad)  
   140009fba:	(bad)  
   140009fbb:	(bad)  
   140009fbc:	mov    esp,0x1000071
   140009fc1:	add    BYTE PTR [rax],al
   140009fc3:	add    dl,cl
   140009fc5:	jno    0x140009fc7
   140009fc7:	add    BYTE PTR [rsp+rbx*1-0x10000],ah
   140009fce:	(bad)  
   140009fcf:	dec    esi
   140009fd1:	sbb    al,0x0
   140009fd3:	add    BYTE PTR [rcx],al
   140009fd5:	add    BYTE PTR [rax],al
   140009fd7:	add    bh,ch
   140009fd9:	sbb    al,0x0
   140009fdb:	add    bh,bh
   140009fdd:	(bad)  
   140009fde:	(bad)  
   140009fdf:	call   QWORD PTR [rcx]
   140009fe1:	sbb    BYTE PTR [rax+rax*1],al
   140009fe4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009fe7:	add    BYTE PTR [rdx],cl
   140009fe9:	push   rdx
   140009fea:	(bad)  
   140009feb:	jo     0x14000a05f
   140009fed:	add    BYTE PTR gs:[rax],al
   140009ff0:	loopne 0x140009f85
   140009ff2:	add    BYTE PTR [rax],al
   140009ff4:	add    BYTE PTR [rax],al
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	push   rax
   140009ff9:	sbb    eax,0xffff0000
   140009ffe:	(bad)  
   140009fff:	inc    DWORD PTR [rcx+0x100001d]
   14000a005:	add    BYTE PTR [rax],al
   14000a007:	add    BYTE PTR [rdx-0xffffe3],ah
   14000a00d:	(bad)  
   14000a00e:	(bad)  
   14000a00f:	call   QWORD PTR [rcx]
   14000a011:	sbb    BYTE PTR [rax+rax*1],al
   14000a014:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000a017:	add    BYTE PTR [rdx],cl
   14000a019:	push   rdx
   14000a01a:	(bad)  
   14000a01b:	jo     0x14000a08f
   14000a01d:	add    BYTE PTR gs:[rax],al
   14000a020:	mov    eax,0x93
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	add    al,dl
   14000a029:	sbb    eax,0xffff0000
   14000a02e:	(bad)  
   14000a02f:	push   rbp
   14000a031:	sbb    eax,0x0
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	and    eax,0x200001e
   14000a03d:	add    BYTE PTR [rax],al
   14000a03f:	add    BYTE PTR [rdi],ch
   14000a041:	(bad)  
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	(bad)  
   14000a045:	(bad)  
   14000a046:	(bad)  
   14000a047:	call   QWORD PTR [rcx]
   14000a049:	and    DWORD PTR [rax],ecx
   14000a04b:	add    BYTE PTR [rcx],ah
   14000a04d:	je     0x14000a05a
   14000a04f:	add    BYTE PTR [rip+0x19000a64],bl        # 0x15900aab9
   14000a055:	xor    al,0x9
   14000a057:	add    BYTE PTR [rip+0x72e00952],cl        # 0x1b2e0a9af
   14000a05d:	add    BYTE PTR gs:[rax],al
   14000a060:	nop
   14000a061:	xchg   ebx,eax
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	(bad)  
   14000a065:	(bad)  
   14000a066:	(bad)  
   14000a067:	jmp    rax
   14000a069:	jno    0x14000a06b
   14000a06b:	add    BYTE PTR [rax],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    dl,dh
   14000a071:	jno    0x14000a073
   14000a073:	add    BYTE PTR [rax],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rsi+rbx*1+0x0],ah
   14000a07b:	add    bh,bh
   14000a07d:	(bad)  
   14000a07e:	(bad)  
   14000a07f:	push   QWORD PTR [rcx+0x1e]
   14000a085:	add    BYTE PTR [rax],al
   14000a087:	add    al,al
   14000a089:	(bad)  
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	add    DWORD PTR [rax],eax
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	add    bl,BYTE PTR [rdi]
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	(bad)  
   14000a095:	(bad)  
   14000a096:	(bad)  
   14000a097:	inc    DWORD PTR [rcx]
   14000a099:	(bad)  
   14000a09a:	add    al,BYTE PTR [rax]
   14000a09c:	(bad)  
   14000a09d:	xor    al,BYTE PTR [rdx]
   14000a09f:	xor    BYTE PTR [rcx],dl
   14000a0a1:	sbb    al,0x6
   14000a0a3:	add    BYTE PTR [rsp+riz*2],bl
   14000a0a6:	or     eax,DWORD PTR [rax]
   14000a0a8:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000a0ab:	add    BYTE PTR [rdx+rdx*2],cl
   14000a0ae:	or     BYTE PTR [rax+0x72],dh
   14000a0b1:	add    BYTE PTR gs:[rax],al
   14000a0b4:	push   0xffffffffff000093
   14000a0b9:	(bad)  
   14000a0ba:	(bad)  
   14000a0bb:	dec    DWORD PTR [rax]
   14000a0bd:	jb     0x14000a0bf
   14000a0bf:	add    BYTE PTR [rax],al
   14000a0c1:	add    BYTE PTR [rax],al
   14000a0c3:	add    BYTE PTR [rdx],bl
   14000a0c5:	jb     0x14000a0c7
   14000a0c7:	add    BYTE PTR [rcx],al
   14000a0c9:	add    BYTE PTR [rax],al
   14000a0cb:	add    BYTE PTR [rdx],ch
   14000a0cd:	jb     0x14000a0cf
   14000a0cf:	add    ah,bh
   14000a0d1:	(bad)  
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	(bad)  
   14000a0d5:	(bad)  
   14000a0d6:	(bad)  
   14000a0d7:	push   QWORD PTR [rax]
   14000a0d9:	and    BYTE PTR [rax],al
   14000a0db:	add    BYTE PTR [rcx],al
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rsi+0x20],al
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	add    al,BYTE PTR [rax]
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	rex.WRXB and BYTE PTR [r8],r8b
   14000a0eb:	add    BYTE PTR [rcx],al
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    BYTE PTR [rcx+0x20],dl
   14000a0f5:	add    BYTE PTR [rax],al
   14000a0f7:	add    dl,cl
   14000a0f9:	and    BYTE PTR [rax],al
   14000a0fb:	add    bh,bh
   14000a0fd:	(bad)  
   14000a0fe:	(bad)  
   14000a0ff:	call   FWORD PTR [rcx]
   14000a101:	cs (bad) 
   14000a103:	add    BYTE PTR [rsp+riz*2],bl
   14000a106:	push   rax
   14000a107:	add    BYTE PTR [rax],bl
   14000a109:	xor    al,0x4f
   14000a10b:	add    BYTE PTR [rbx],cl
   14000a10d:	add    DWORD PTR [rax+rax*1+0x4],ecx
   14000a111:	jo     0x14000a113
   14000a113:	add    BYTE PTR [rax],dl
   14000a115:	data16 add BYTE PTR [rax],al
   14000a118:	rex xchg ebx,eax
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	push   rdx
   14000a11d:	add    al,BYTE PTR [rax]
   14000a11f:	add    bh,bh
   14000a121:	(bad)  
   14000a122:	(bad)  
   14000a123:	(bad)  
   14000a124:	ds jb  0x14000a127
   14000a127:	add    BYTE PTR [rax],al
   14000a129:	add    BYTE PTR [rax],al
   14000a12b:	add    BYTE PTR [rdx+rsi*2+0x0],cl
   14000a12f:	add    al,bh
   14000a131:	and    BYTE PTR [rax],al
   14000a133:	add    bh,bh
   14000a135:	(bad)  
   14000a136:	(bad)  
   14000a137:	jmp    FWORD PTR [rbp+0x21]
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	movabs ds:0x1300000001000021,al
   14000a149:	and    al,BYTE PTR [rax]
   14000a14b:	add    BYTE PTR [rax],al
   14000a14d:	add    BYTE PTR [rax],al
   14000a14f:	add    BYTE PTR [rdi],bl
   14000a151:	and    al,BYTE PTR [rax]
   14000a153:	add    bh,bh
   14000a155:	(bad)  
   14000a156:	(bad)  
   14000a157:	call   FWORD PTR [rcx]
   14000a159:	and    BYTE PTR [rdx],cl
   14000a15b:	add    BYTE PTR [rax],ah
   14000a15d:	adc    al,BYTE PTR fs:[rax]
   14000a160:	sbb    al,0x34
   14000a162:	adc    BYTE PTR [rax],al
   14000a164:	adc    BYTE PTR [rdx-0x1ff50ff4],dl
   14000a16a:	or     al,dl
   14000a16c:	(bad)  
   14000a16d:	rol    BYTE PTR [rax+rsi*2],0x72
   14000a171:	add    BYTE PTR gs:[rax],al
   14000a174:	sbb    BYTE PTR [rbx-0x10000],dl
   14000a17a:	(bad)  
   14000a17b:	jmp    QWORD PTR [rax+0x72]
	...
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	add    DWORD PTR [rax],eax
   14000a18a:	add    BYTE PTR [rax],al
   14000a18c:	outs   dx,BYTE PTR ds:[rsi]
   14000a18d:	jb     0x14000a18f
	...
   14000a197:	add    BYTE PTR [rcx],al
   14000a199:	add    BYTE PTR [rax],al
   14000a19b:	add    BYTE PTR [rdx],al
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rbx],al
   14000a1a1:	add    BYTE PTR [rax],al
   14000a1a3:	add    BYTE PTR [rcx],al
   14000a1a5:	add    BYTE PTR [rax],al
   14000a1a7:	add    BYTE PTR [rcx+riz*4+0x80000],ch
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	mov    al,0xd0
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	jl     0x14000a22c
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	rex.W add BYTE PTR [rax],al
   14000a1bf:	add    BYTE PTR [rax+0x22],ah
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	(bad)  
   14000a1c5:	(bad)  
   14000a1c6:	(bad)  
   14000a1c7:	(bad)  
   14000a1c8:	mov    esi,0x22
   14000a1cd:	add    BYTE PTR [rax],al
   14000a1cf:	add    BYTE PTR [rax],bl
   14000a1d1:	and    eax,DWORD PTR [rax]
   14000a1d3:	add    BYTE PTR [rcx],al
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    BYTE PTR [rcx],ch
   14000a1d9:	and    eax,DWORD PTR [rax]
   14000a1db:	add    BYTE PTR [rdx],al
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    BYTE PTR [rax+0x1000023],al
   14000a1e5:	add    BYTE PTR [rax],al
   14000a1e7:	add    BYTE PTR [rbx+riz*1-0x10000],cl
   14000a1ee:	(bad)  
   14000a1ef:	call   FWORD PTR [rsi+0x23]
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    BYTE PTR [rbx-0xffffdd],ah
   14000a1fd:	(bad)  
   14000a1fe:	(bad)  
   14000a1ff:	(bad)  
   14000a200:	jl     0x14000a274
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	add    BYTE PTR [rax],al
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	sbb    DWORD PTR [rdx],ecx
   14000a20a:	add    al,BYTE PTR [rax]
   14000a20c:	or     dl,BYTE PTR [rdx+0x6]
   14000a20f:	push   rax
   14000a210:	jb     0x14000a277
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	sbb    BYTE PTR [rbx+0x1b110000],dl
   14000a21a:	or     BYTE PTR [rax],al
   14000a21c:	sbb    edx,DWORD PTR [rsp+rcx*1+0x0]
   14000a220:	(bad)  
   14000a221:	xor    al,0xb
   14000a223:	add    BYTE PTR [rbx],cl
   14000a225:	push   rdx
   14000a226:	(bad)  
   14000a227:	loopne 0x14000a22e
   14000a229:	jo     0x14000a22f
   14000a22b:	(bad)  
   14000a22c:	jb     0x14000a293
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	lock xchg edx,eax
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	(bad)  
   14000a235:	(bad)  
   14000a236:	(bad)  
   14000a237:	call   FWORD PTR [rbp+0x72]
   14000a23d:	add    BYTE PTR [rax],al
   14000a23f:	add    al,dh
   14000a241:	and    eax,DWORD PTR [rax]
   14000a243:	add    bh,bh
   14000a245:	(bad)  
   14000a246:	(bad)  
   14000a247:	push   QWORD PTR [rbx]
   14000a249:	and    al,0x0
   14000a24b:	add    BYTE PTR [rax],al
   14000a24d:	add    BYTE PTR [rax],al
   14000a24f:	add    BYTE PTR [rcx+0x24],al
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	(bad)  
   14000a255:	(bad)  
   14000a256:	(bad)  
   14000a257:	call   QWORD PTR [rax+0x24]
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	add    BYTE PTR [rax],al
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	push   0x24
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	(bad)  
   14000a265:	(bad)  
   14000a266:	(bad)  
   14000a267:	call   QWORD PTR [rcx]
   14000a269:	and    BYTE PTR [rdx],cl
   14000a26b:	add    BYTE PTR [rax],ah
   14000a26d:	ltr    WORD PTR fs:[rsp+rdx*2]
   14000a272:	(bad)  
   14000a273:	add    BYTE PTR [rax],bl
   14000a275:	xor    al,0xd
   14000a277:	add    BYTE PTR [rdx+rsi*2],cl
   14000a27a:	or     al,dh
   14000a27c:	(bad)  
   14000a27d:	loopne 0x14000a283
   14000a27f:	jo     0x14000a2f3
   14000a281:	add    BYTE PTR gs:[rax],al
   14000a284:	enter  0x92,0x0
   14000a288:	(bad)  
   14000a289:	(bad)  
   14000a28a:	(bad)  
   14000a28b:	push   QWORD PTR [rcx-0x2fffff8e]
   14000a291:	and    al,0x0
   14000a293:	add    bh,bh
   14000a295:	(bad)  
   14000a296:	(bad)  
   14000a297:	jmp    QWORD PTR [rdi]
   14000a299:	and    eax,0x0
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	xor    eax,0xff000025
   14000a2a5:	(bad)  
   14000a2a6:	(bad)  
   14000a2a7:	inc    DWORD PTR [rbp+riz*1+0x0]
   14000a2ab:	add    BYTE PTR [rax],al
   14000a2ad:	add    BYTE PTR [rax],al
   14000a2af:	add    BYTE PTR [rsi+0x25],bl
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	(bad)  
   14000a2b5:	(bad)  
   14000a2b6:	(bad)  
   14000a2b7:	call   QWORD PTR [rcx]
   14000a2b9:	sbb    eax,0x641d0008
   14000a2be:	ltr    WORD PTR [rax]
   14000a2c1:	xor    al,0xc
   14000a2c3:	add    BYTE PTR [rdx],cl
   14000a2c5:	jb     0x14000a2cd
   14000a2c7:	lock add al,0xe0
   14000a2ca:	add    dh,BYTE PTR [rax+0x72]
   14000a2cd:	add    BYTE PTR gs:[rax],al
   14000a2d0:	jo     0x14000a267
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	(bad)  
   14000a2d5:	(bad)  
   14000a2d6:	(bad)  
   14000a2d7:	inc    ebp
   14000a2d9:	jb     0x14000a2db
   14000a2db:	add    BYTE PTR [rax],al
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rax],dh
   14000a2e1:	add    BYTE PTR es:[rax],al
   14000a2e4:	(bad)  
   14000a2e5:	(bad)  
   14000a2e6:	(bad)  
   14000a2e7:	jmp    FWORD PTR [rdi+0x26]
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	add    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	iret   
   14000a2f1:	add    BYTE PTR es:[rax],al
   14000a2f4:	(bad)  
   14000a2f5:	(bad)  
   14000a2f6:	(bad)  
   14000a2f7:	call   QWORD PTR [rcx]
   14000a2f9:	and    DWORD PTR [rdx],ecx
   14000a2fb:	add    BYTE PTR [rcx],ah
   14000a2fd:	je     0x14000a30c
   14000a2ff:	add    BYTE PTR [rip+0x19000c64],bl        # 0x15900af69
   14000a305:	push   rsp
   14000a306:	or     eax,DWORD PTR [rax]
   14000a308:	adc    eax,0x9000a34
   14000a30d:	jb     0x14000a314
   14000a30f:	loopne 0x14000a383
   14000a311:	add    BYTE PTR gs:[rax],al
   14000a314:	cwde   
   14000a315:	xchg   ebp,eax
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	(bad)  
   14000a319:	(bad)  
   14000a31a:	(bad)  
   14000a31b:	call   rdi
   14000a31d:	jb     0x14000a31f
   14000a31f:	add    bh,bh
   14000a321:	(bad)  
   14000a322:	(bad)  
   14000a323:	jmp    rbp
   14000a325:	jb     0x14000a327
   14000a327:	add    BYTE PTR [rax],dl
   14000a329:	(bad)  
   14000a32a:	add    BYTE PTR [rax],al
   14000a32c:	(bad)  
   14000a32d:	(bad)  
   14000a32e:	(bad)  
   14000a32f:	inc    DWORD PTR [rbx+0x27]
   14000a335:	add    BYTE PTR [rax],al
   14000a337:	add    BYTE PTR [rax-0xffffd9],ch
   14000a33d:	(bad)  
   14000a33e:	(bad)  
   14000a33f:	dec    ebp
   14000a341:	(bad)  
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	add    DWORD PTR [rax],eax
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	jmp    0x14000a371
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	(bad)  
   14000a34d:	(bad)  
   14000a34e:	(bad)  
   14000a34f:	inc    DWORD PTR [rcx]
   14000a351:	(bad)  
   14000a353:	add    BYTE PTR [rdi],cl
   14000a355:	xor    al,0x6
   14000a357:	add    BYTE PTR [rdi],cl
   14000a359:	xor    cl,BYTE PTR [rbx]
   14000a35b:	jo     0x14000a376
   14000a35d:	(bad)  
   14000a35e:	or     BYTE PTR [rax],al
   14000a360:	(bad)  
   14000a361:	xor    al,0x13
   14000a363:	add    BYTE PTR [rbx],bl
   14000a365:	xchg   edx,eax
   14000a366:	(bad)  
   14000a367:	lock adc eax,0x11c013e0
   14000a36d:	jo     0x14000a37f
   14000a36f:	(bad)  
   14000a370:	jb     0x14000a3d7
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	movabs al,ds:0xf7ffffffff000092
   14000a37d:	jb     0x14000a37f
	...
   14000a39f:	add    BYTE PTR [rcx],al
   14000a3a1:	add    BYTE PTR [rax],al
   14000a3a3:	add    BYTE PTR [rcx],al
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    BYTE PTR [rdx],al
   14000a3a9:	add    BYTE PTR [rax],al
   14000a3ab:	add    BYTE PTR [rcx],al
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    al,cl
   14000a3b1:	movabs ds:0x3000000030000,eax
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    al,0x0
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	add    DWORD PTR [rax],eax
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	fsub   QWORD PTR [rbx+0x0]
	...
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	add    eax,0x48000073
	...
   14000a3e5:	add    BYTE PTR [rax],al
   14000a3e7:	add    BYTE PTR [rax],bh
   14000a3e9:	jae    0x14000a3eb
   14000a3eb:	add    BYTE PTR [rax+0x0],cl
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	push   0xffffffffff00002b
   14000a3f5:	(bad)  
   14000a3f6:	(bad)  
   14000a3f7:	jmp    QWORD PTR [rax+0x2b]
   14000a3fd:	add    BYTE PTR [rax],al
   14000a3ff:	add    BYTE PTR [rbp+0x100002c],dl
   14000a405:	add    BYTE PTR [rax],al
   14000a407:	add    ah,bl
   14000a409:	sub    al,0x0
   14000a40b:	add    BYTE PTR [rax],al
   14000a40d:	add    BYTE PTR [rax],al
   14000a40f:	add    BYTE PTR [rbp+0x2d],ah
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	add    eax,DWORD PTR [rax]
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	mov    DWORD PTR [rip+0x0],ebp        # 0x14000a41e
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	and    ebp,DWORD PTR [rsi]
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	(bad)  
   14000a425:	(bad)  
   14000a426:	(bad)  
   14000a427:	inc    DWORD PTR [rip+0x73]        # 0x14000a4a0
   14000a42d:	add    BYTE PTR [rax],al
   14000a42f:	add    BYTE PTR [rdx],dl
   14000a431:	jae    0x14000a433
   14000a433:	add    BYTE PTR [rdx],al
   14000a435:	add    BYTE PTR [rax],al
   14000a437:	add    BYTE PTR [rax],bh
   14000a439:	jae    0x14000a43b
   14000a43b:	add    BYTE PTR [rax],al
   14000a43d:	add    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rbp+0x73],al
   14000a442:	add    BYTE PTR [rax],al
   14000a444:	add    al,0x0
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	sbb    DWORD PTR [rdx],ecx
   14000a44a:	add    al,BYTE PTR [rax]
   14000a44c:	or     dl,BYTE PTR [rdx+0x6]
   14000a44f:	push   rax
   14000a450:	jb     0x14000a4b7
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	movabs al,ds:0x700022219000092
   14000a45d:	add    DWORD PTR [rip+0x661000],edx        # 0x14066b463
   14000a463:	add    BYTE PTR [rax-0x6e],bh
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	xchg   edx,eax
   14000a469:	add    BYTE PTR [rax],al
   14000a46b:	add    bh,bh
   14000a46d:	(bad)  
   14000a46e:	(bad)  
   14000a46f:	push   QWORD PTR [rbx+rsi*2+0x0]
   14000a473:	add    BYTE PTR [rax],al
   14000a475:	add    BYTE PTR [rax],al
   14000a477:	add    BYTE PTR [rsi+rbp*1+0x0],cl
   14000a47b:	add    bh,bh
   14000a47d:	(bad)  
   14000a47e:	(bad)  
   14000a47f:	inc    DWORD PTR [rax+0x2e]
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    BYTE PTR [rcx],bl
   14000a489:	and    eax,DWORD PTR [rsi]
   14000a48b:	add    BYTE PTR [rbx],ah
   14000a48d:	xor    al,0x13
   14000a48f:	add    BYTE PTR [rdi],dl
   14000a491:	mov    dl,0x13
   14000a493:	loopne 0x14000a4a6
   14000a495:	jo     0x14000a4a7
   14000a497:	(bad)  
   14000a498:	jb     0x14000a4ff
   14000a49a:	add    BYTE PTR [rax],al
   14000a49c:	push   rax
   14000a49d:	xchg   edx,eax
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	(bad)  
   14000a4a1:	(bad)  
   14000a4a2:	(bad)  
   14000a4a3:	inc    DWORD PTR [rax]
   14000a4a5:	add    BYTE PTR [rax],al
   14000a4a7:	add    bh,bh
   14000a4a9:	(bad)  
   14000a4aa:	(bad)  
   14000a4ab:	inc    DWORD PTR [rax]
   14000a4ad:	add    BYTE PTR [rax],al
   14000a4af:	add    BYTE PTR [rcx],al
   14000a4b1:	add    BYTE PTR [rax],al
   14000a4b3:	add    BYTE PTR [rax],al
   14000a4b5:	add    BYTE PTR [rax],al
   14000a4b7:	add    BYTE PTR [rcx],al
	...
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    BYTE PTR [rbx],al
   14000a4c9:	add    BYTE PTR [rax],al
   14000a4cb:	add    BYTE PTR [rcx],al
   14000a4cd:	add    BYTE PTR [rax],al
   14000a4cf:	add    al,ch
   14000a4d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a4d2:	add    BYTE PTR [rax],al
   14000a4d4:	add    al,BYTE PTR [rax]
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	add    al,BYTE PTR [rax]
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	add    eax,DWORD PTR [rax]
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	add    DWORD PTR [rax],eax
   14000a4e2:	add    BYTE PTR [rax],al
   14000a4e4:	cld    
   14000a4e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a4f2:	add    BYTE PTR [rax],al
   14000a4f4:	xchg   BYTE PTR [rbx+0x0],dh
   14000a4f7:	add    BYTE PTR [rax],bh
	...
   14000a505:	add    BYTE PTR [rax],al
   14000a507:	add    dl,ch
   14000a509:	jae    0x14000a50b
   14000a50b:	add    BYTE PTR [rax],bh
   14000a50d:	add    BYTE PTR [rax],al
   14000a50f:	add    ah,dh
   14000a511:	add    BYTE PTR cs:[rax],al
   14000a514:	(bad)  
   14000a515:	(bad)  
   14000a516:	(bad)  
   14000a517:	jmp    QWORD PTR [rax+0x2f]
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	add    BYTE PTR [rax],al
   14000a51e:	add    BYTE PTR [rax],al
   14000a520:	movabs ds:0x86ffffffff00002f,al
   14000a529:	jae    0x14000a52b
   14000a52b:	add    BYTE PTR [rax],al
   14000a52d:	add    BYTE PTR [rax],al
   14000a52f:	add    BYTE PTR [rbx+0x1000073],dl
   14000a535:	add    BYTE PTR [rax],al
   14000a537:	add    BYTE PTR [rcx+0x2000073],ah
   14000a53d:	add    BYTE PTR [rax],al
   14000a53f:	add    ah,bl
   14000a541:	jae    0x14000a543
   14000a543:	add    BYTE PTR [rax],al
   14000a545:	add    BYTE PTR [rax],al
   14000a547:	add    bh,dh
   14000a549:	jae    0x14000a54b
   14000a54b:	add    BYTE PTR [rbx],al
   14000a54d:	add    BYTE PTR [rax],al
   14000a54f:	add    BYTE PTR [rcx],bl
   14000a551:	or     al,BYTE PTR [rdx]
   14000a553:	add    BYTE PTR [rdx],cl
   14000a555:	xor    al,BYTE PTR [rsi]
   14000a557:	push   rax
   14000a558:	jb     0x14000a5bf
   14000a55a:	add    BYTE PTR [rax],al
   14000a55c:	push   rax
   14000a55d:	xchg   edx,eax
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	sbb    DWORD PTR [rdx],ebx
   14000a562:	add    al,0x0
   14000a564:	adc    DWORD PTR [rdx+0xd],esi
   14000a567:	jo     0x14000a575
   14000a569:	(bad)  
   14000a56a:	or     esi,DWORD PTR [rax]
   14000a56c:	jb     0x14000a5d3
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	sub    BYTE PTR [rdx-0x10000],dl
   14000a576:	(bad)  
   14000a577:	inc    DWORD PTR [rax]
   14000a579:	add    BYTE PTR [rax],al
   14000a57b:	add    BYTE PTR [rax],al
   14000a57d:	add    BYTE PTR [rax],al
   14000a57f:	add    BYTE PTR [rax],bl
   14000a581:	je     0x14000a583
   14000a583:	add    bh,bh
   14000a585:	(bad)  
   14000a586:	(bad)  
   14000a587:	inc    DWORD PTR [rax]
   14000a589:	add    BYTE PTR [rax],al
   14000a58b:	add    BYTE PTR [rax],al
   14000a58d:	add    BYTE PTR [rax],al
   14000a58f:	add    BYTE PTR [rcx],al
   14000a591:	add    BYTE PTR [rax],al
   14000a593:	add    BYTE PTR [rdx],al
   14000a595:	add    BYTE PTR [rax],al
   14000a597:	add    BYTE PTR [rcx],al
   14000a599:	add    BYTE PTR [rax],al
   14000a59b:	add    BYTE PTR [rax+0xa5],ah
	...
   14000a5a9:	add    BYTE PTR [rax],al
   14000a5ab:	add    BYTE PTR [rsp+rsi*2],dh
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	rex.W add BYTE PTR [rax],al
   14000a5b3:	add    BYTE PTR [rax],al
   14000a5b5:	add    BYTE PTR [rax],al
   14000a5b7:	add    BYTE PTR [rax+0x31],bl
   14000a5ba:	add    BYTE PTR [rax],al
   14000a5bc:	(bad)  
   14000a5bd:	(bad)  
   14000a5be:	(bad)  
   14000a5bf:	inc    DWORD PTR [rax+0x31]
   14000a5c5:	add    BYTE PTR [rax],al
   14000a5c7:	add    BYTE PTR [rdi+0x1000031],cl
   14000a5cd:	add    BYTE PTR [rax],al
   14000a5cf:	add    BYTE PTR [rcx+0x31],ah
   14000a5d5:	add    BYTE PTR [rax],al
   14000a5d7:	add    BYTE PTR [rcx+rsi*1-0x10000],dh
   14000a5de:	(bad)  
   14000a5df:	push   QWORD PTR [rsp+rsi*2]
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	add    BYTE PTR [rax],al
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	rex.X je 0x14000a5eb
   14000a5eb:	add    BYTE PTR [rdx],al
   14000a5ed:	add    BYTE PTR [rax],al
   14000a5ef:	add    BYTE PTR [rcx],bl
   14000a5f1:	or     eax,DWORD PTR [rbx]
   14000a5f3:	add    BYTE PTR [rbx],cl
   14000a5f5:	rex.X (bad) 
   14000a5f7:	push   rax
   14000a5f8:	(bad)  
   14000a5f9:	xor    BYTE PTR [rax],al
   14000a5fb:	add    BYTE PTR [rdx+0x65],dh
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	sub    BYTE PTR [rdx+0x4010000],dl
   14000a606:	add    DWORD PTR [rax],eax
   14000a608:	add    al,0x62
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	sbb    DWORD PTR [rdx],ebx
   14000a60e:	add    al,0x0
   14000a610:	adc    DWORD PTR [rdx+0xd],esi
   14000a613:	jo     0x14000a621
   14000a615:	(bad)  
   14000a616:	or     esi,DWORD PTR [rax]
   14000a618:	jb     0x14000a67f
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	add    BYTE PTR [rdx-0x10000],dl
   14000a622:	(bad)  
   14000a623:	inc    DWORD PTR [rax]
   14000a625:	add    BYTE PTR [rax],al
   14000a627:	add    BYTE PTR [rax],al
   14000a629:	add    BYTE PTR [rax],al
   14000a62b:	add    BYTE PTR [rbx+0x74],ch
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	(bad)  
   14000a631:	(bad)  
   14000a632:	(bad)  
   14000a633:	inc    DWORD PTR [rax]
   14000a635:	add    BYTE PTR [rax],al
   14000a637:	add    BYTE PTR [rax],al
   14000a639:	add    BYTE PTR [rax],al
   14000a63b:	add    BYTE PTR [rcx],al
   14000a63d:	add    BYTE PTR [rax],al
   14000a63f:	add    BYTE PTR [rdx],al
   14000a641:	add    BYTE PTR [rax],al
   14000a643:	add    BYTE PTR [rcx],al
   14000a645:	add    BYTE PTR [rax],al
   14000a647:	add    BYTE PTR [rsi+riz*4+0x0],cl
	...
   14000a657:	add    BYTE PTR [rdi+0x48000074],al
   14000a65d:	add    BYTE PTR [rax],al
   14000a65f:	add    BYTE PTR [rax],ah
   14000a661:	xor    al,BYTE PTR [rax]
   14000a663:	add    bh,bh
   14000a665:	(bad)  
   14000a666:	(bad)  
   14000a667:	dec    DWORD PTR [rax+0x32]
   14000a66a:	add    BYTE PTR [rax],al
   14000a66c:	add    BYTE PTR [rax],al
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	push   rdi
   14000a671:	xor    al,BYTE PTR [rax]
   14000a673:	add    BYTE PTR [rcx],al
   14000a675:	add    BYTE PTR [rax],al
   14000a677:	add    BYTE PTR [rcx+0x32],ch
   14000a67a:	add    BYTE PTR [rax],al
   14000a67c:	add    BYTE PTR [rax],al
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	jge    0x14000a6b4
   14000a682:	add    BYTE PTR [rax],al
   14000a684:	(bad)  
   14000a685:	(bad)  
   14000a686:	(bad)  
   14000a687:	inc    DWORD PTR [rdi+0x74]
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	add    BYTE PTR [rbp+0x2000074],dl
   14000a695:	add    BYTE PTR [rax],al
   14000a697:	add    BYTE PTR [rcx],bl
   14000a699:	or     eax,DWORD PTR [rbx]
   14000a69b:	add    BYTE PTR [rbx],cl
   14000a69d:	rex.X (bad) 
   14000a69f:	push   rax
   14000a6a0:	(bad)  
   14000a6a1:	xor    BYTE PTR [rax],al
   14000a6a3:	add    BYTE PTR [rdx+0x65],dh
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	add    BYTE PTR [rdx+0xa090000],dl
   14000a6ae:	add    al,BYTE PTR [rax]
   14000a6b0:	or     dh,BYTE PTR [rdx]
   14000a6b2:	(bad)  
   14000a6b3:	xor    BYTE PTR [rsi+0x1000069],dl
   14000a6b9:	add    BYTE PTR [rax],al
   14000a6bb:	add    al,dl
   14000a6bd:	xor    al,BYTE PTR [rax]
   14000a6bf:	add    bl,bl
   14000a6c1:	xor    al,BYTE PTR [rax]
   14000a6c3:	add    BYTE PTR [rsi-0x24ffff8c],bh
   14000a6c9:	xor    al,BYTE PTR [rax]
   14000a6cb:	add    BYTE PTR [rcx],al
   14000a6cd:	or     eax,DWORD PTR [rcx]
   14000a6cf:	add    BYTE PTR [rbx],cl
   14000a6d1:	(bad)  
   14000a6d2:	add    BYTE PTR [rax],al
   14000a6d4:	add    DWORD PTR [rcx],ecx
   14000a6d6:	add    DWORD PTR [rax],eax
   14000a6d8:	or     DWORD PTR [rdx+0x4090000],esp
   14000a6de:	add    DWORD PTR [rax],eax
   14000a6e0:	add    al,0x42
   14000a6e2:	add    BYTE PTR [rax],al
   14000a6e4:	xchg   esi,eax
   14000a6e5:	imul   eax,DWORD PTR [rax],0x100
   14000a6eb:	add    BYTE PTR [rax],bl
   14000a6ed:	xor    eax,0x35200000
   14000a6f2:	add    BYTE PTR [rax],al
   14000a6f4:	add    DWORD PTR [rax],eax
   14000a6f6:	add    BYTE PTR [rax],al
   14000a6f8:	and    BYTE PTR [rip+0x27190000],dh        # 0x16719a6fe
   14000a6fe:	or     DWORD PTR [rax],eax
   14000a700:	adc    eax,0x15002f54
   14000a705:	xor    al,0x2d
   14000a707:	add    BYTE PTR [rip+0xe002801],dl        # 0x14e00cf0e
   14000a70d:	loopne 0x14000a71b
   14000a70f:	jo     0x14000a71c
   14000a711:	(bad)  
   14000a712:	add    BYTE PTR [rax],al
   14000a714:	and    BYTE PTR [rbp+0x0],0x0
   14000a718:	xor    BYTE PTR [rcx],al
   14000a71a:	add    BYTE PTR [rax],al
   14000a71c:	sbb    DWORD PTR [rbx],edi
   14000a71e:	or     eax,DWORD PTR [rax]
   14000a720:	sub    dh,BYTE PTR [rdi+rdi*4+0x0]
   14000a724:	es fs mov esi,0xbd342200
   14000a72b:	add    BYTE PTR [rsi],dl
   14000a72d:	add    DWORD PTR [rax+0x6f00800],edi
   14000a733:	loopne 0x14000a739
   14000a735:	push   rax
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	adc    BYTE PTR [rsi+0x0],ah
   14000a73b:	add    BYTE PTR [rax],dl
   14000a73d:	xchg   esi,eax
   14000a73e:	add    BYTE PTR [rax],al
   14000a740:	mov    dl,0x5
   14000a742:	add    BYTE PTR [rax],al
   14000a744:	(bad)  
   14000a745:	(bad)  
   14000a746:	(bad)  
   14000a747:	(bad)  
   14000a748:	call   0x14000a7c1
   14000a74d:	add    BYTE PTR [rax],al
   14000a74f:	add    ah,dh
   14000a751:	je     0x14000a753
   14000a753:	add    BYTE PTR [rax],al
   14000a755:	add    BYTE PTR [rax],al
   14000a757:	add    al,al
   14000a759:	(bad)  
   14000a75a:	add    BYTE PTR [rax],al
   14000a75c:	(bad)  
   14000a75d:	(bad)  
   14000a75e:	(bad)  
   14000a75f:	(bad)  
   14000a760:	clc    
   14000a761:	cmp    BYTE PTR [rax],al
   14000a763:	add    BYTE PTR [rax],al
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    BYTE PTR [rdx],al
   14000a769:	cmp    eax,DWORD PTR [rax]
   14000a76b:	add    BYTE PTR [rcx],al
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	add    BYTE PTR [rax+0x3c],bh
   14000a775:	add    BYTE PTR [rax],al
   14000a777:	add    ah,dl
   14000a779:	cmp    al,0x0
   14000a77b:	add    bh,bh
   14000a77d:	(bad)  
   14000a77e:	(bad)  
   14000a77f:	call   FWORD PTR [rcx]
   14000a781:	cmp    BYTE PTR [rcx],cl
   14000a783:	add    BYTE PTR [rdi],ah
   14000a785:	fs je  0x14000a788
   14000a788:	and    esi,DWORD PTR [rbx+rsi*2]
   14000a78b:	add    BYTE PTR [rsi],dl
   14000a78d:	add    DWORD PTR [rsi+0x0],ebp
   14000a790:	or     al,dh
   14000a792:	(bad)  
   14000a793:	loopne 0x14000a799
   14000a795:	push   rax
   14000a796:	add    BYTE PTR [rax],al
   14000a798:	adc    BYTE PTR [rsi+0x0],ah
   14000a79b:	add    al,ch
   14000a79d:	xchg   ebp,eax
   14000a79e:	add    BYTE PTR [rax],al
   14000a7a0:	(bad)  
   14000a7a2:	add    BYTE PTR [rax],al
   14000a7a4:	(bad)  
   14000a7a5:	(bad)  
   14000a7a6:	(bad)  
   14000a7a7:	inc    DWORD PTR [rsi]
   14000a7a9:	jne    0x14000a7ab
   14000a7ab:	add    bh,bh
   14000a7ad:	(bad)  
   14000a7ae:	(bad)  
   14000a7af:	call   QWORD PTR [rdx]
   14000a7b1:	jne    0x14000a7b3
   14000a7b3:	add    BYTE PTR [rax],al
   14000a7b5:	add    BYTE PTR [rax],al
   14000a7b7:	add    BYTE PTR [rax],ah
   14000a7b9:	cmp    eax,0xffff0000
   14000a7be:	(bad)  
   14000a7bf:	(bad)  
   14000a7c0:	(bad)  
   14000a7c1:	cmp    eax,0x0
   14000a7c6:	add    BYTE PTR [rax],al
   14000a7c8:	(bad)  
   14000a7c9:	add    BYTE PTR ds:[rax],al
   14000a7cc:	(bad)  
   14000a7cd:	(bad)  
   14000a7ce:	(bad)  
   14000a7cf:	(bad)  
   14000a7d0:	std    
   14000a7d1:	add    BYTE PTR ds:[rax],al
   14000a7d4:	add    DWORD PTR [rax],eax
   14000a7d6:	add    BYTE PTR [rax],al
   14000a7d8:	pop    rax
   14000a7d9:	(bad)  
   14000a7da:	add    BYTE PTR [rax],al
   14000a7dc:	(bad)  
   14000a7dd:	(bad)  
   14000a7de:	(bad)  
   14000a7df:	call   QWORD PTR [rcx]
   14000a7e1:	sbb    al,0x6
   14000a7e3:	add    BYTE PTR [rsp+rdx*2],bl
   14000a7e6:	or     DWORD PTR [rax],eax
   14000a7e8:	sbb    BYTE PTR [rax+rcx*1],dh
   14000a7eb:	add    BYTE PTR [rdx+rdx*2],cl
   14000a7ee:	or     BYTE PTR [rax+0x72],dh
   14000a7f1:	add    BYTE PTR gs:[rax],al
   14000a7f4:	cmp    BYTE PTR [rsi-0x10000],dl
   14000a7fa:	(bad)  
   14000a7fb:	jmp    QWORD PTR [rsi*2-0x10000]
   14000a802:	(bad)  
   14000a803:	push   QWORD PTR [rax]
   14000a805:	jne    0x14000a807
   14000a807:	add    ah,ah
   14000a809:	(bad)  
   14000a80a:	add    BYTE PTR [rax],al
   14000a80c:	(bad)  
   14000a80d:	(bad)  
   14000a80e:	(bad)  
   14000a80f:	push   QWORD PTR [rbp+0x40]
   14000a812:	add    BYTE PTR [rax],al
   14000a814:	add    BYTE PTR [rax],al
   14000a816:	add    BYTE PTR [rax],al
   14000a818:	lahf   
   14000a819:	add    BYTE PTR [rax],al
   14000a81c:	(bad)  
   14000a81d:	(bad)  
   14000a81e:	(bad)  
   14000a81f:	jmp    QWORD PTR [rax+rax*2+0x10000]
   14000a826:	add    BYTE PTR [rax],al
   14000a828:	fild   WORD PTR [rcx+0x0]
   14000a82b:	add    bh,bh
   14000a82d:	(bad)  
   14000a82e:	(bad)  
   14000a82f:	inc    DWORD PTR [rcx]
   14000a831:	or     al,BYTE PTR [rax+rax*1]
   14000a834:	or     dh,BYTE PTR [rdi+rax*1]
   14000a837:	add    BYTE PTR [rdx],cl
   14000a839:	xor    al,BYTE PTR [rsi]
   14000a83b:	jo     0x14000a856
   14000a83d:	adc    eax,0x92060002
   14000a842:	add    dh,BYTE PTR [rax]
   14000a844:	and    BYTE PTR [rbp+0x0],0x0
   14000a848:	add    BYTE PTR [rax],al
   14000a84b:	add    BYTE PTR [rcx],bl
   14000a84d:	sbb    eax,DWORD PTR [rbx]
   14000a84f:	add    BYTE PTR [rcx],cl
   14000a851:	add    DWORD PTR [rax],edx
   14000a853:	add    DWORD PTR [rdx],eax
   14000a855:	xor    BYTE PTR [rax],al
   14000a857:	add    BYTE PTR [rax+0x70000065],al
   14000a85d:	or     BYTE PTR [rax],al
   14000a85f:	add    BYTE PTR [rcx],dl
   14000a861:	and    al,0xa
   14000a863:	add    BYTE PTR [rsp+rsi*1],ah
   14000a866:	sbb    eax,DWORD PTR [rax]
   14000a868:	sbb    dl,dh
   14000a86a:	(bad)  
   14000a86b:	lock or al,0xe0
   14000a86e:	or     dl,al
   14000a870:	or     al,al
   14000a872:	(bad)  
   14000a873:	jo     0x14000a87a
   14000a875:	(bad)  
   14000a876:	add    al,0x50
   14000a878:	jb     0x14000a8df
   14000a87a:	add    BYTE PTR [rax],al
   14000a87c:	rcl    BYTE PTR [rbp-0x10000],0xff
   14000a883:	inc    DWORD PTR [rdx+0x75]
   14000a886:	add    BYTE PTR [rax],al
   14000a888:	ror    BYTE PTR [rbp+0x0],1
   14000a88b:	add    bh,bh
   14000a88d:	(bad)  
   14000a88e:	(bad)  
   14000a88f:	(bad)  
   14000a890:	mov    edx,0x51
   14000a895:	add    BYTE PTR [rax],al
   14000a897:	add    BYTE PTR [rdx],al
   14000a899:	push   rdx
   14000a89a:	add    BYTE PTR [rax],al
   14000a89c:	(bad)  
   14000a89d:	(bad)  
   14000a89e:	(bad)  
   14000a89f:	inc    DWORD PTR [rcx]
   14000a8a1:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42baa7
   14000a8a7:	jo     0x14000a8b6
   14000a8a9:	(bad)  
   14000a8aa:	or     al,0x50
   14000a8ac:	or     esi,DWORD PTR [rax]
   14000a8ae:	add    BYTE PTR [rax],al
   14000a8b0:	add    DWORD PTR [rip+0x34050002],eax        # 0x17405a8b8
   14000a8b6:	add    DWORD PTR [rax],eax
   14000a8b8:	add    DWORD PTR [rdi],ecx
   14000a8ba:	(bad)  
   14000a8bb:	add    BYTE PTR [rdi],cl
   14000a8bd:	fs or  eax,0xc340f00
   14000a8c3:	add    BYTE PTR [rdi],cl
   14000a8c5:	xchg   edx,eax
   14000a8c6:	or     esi,DWORD PTR [rax+0x1]
   14000a8c9:	or     al,BYTE PTR [rax+rax*1]
   14000a8cc:	or     dh,BYTE PTR [rax+rcx*1]
   14000a8cf:	add    BYTE PTR [rdx],cl
   14000a8d1:	push   rdx
   14000a8d2:	(bad)  
   14000a8d3:	jo     0x14000a8d6
   14000a8d5:	clts   
   14000a8d7:	add    BYTE PTR [rdi],cl
   14000a8d9:	or     DWORD PTR fs:[rax],eax
   14000a8dc:	sysenter 
   14000a8de:	or     BYTE PTR [rax],al
   14000a8e0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000a8e3:	jo     0x14000a8fe
   14000a8e5:	and    al,BYTE PTR [rdx]
   14000a8e7:	add    BYTE PTR [rdi],al
   14000a8e9:	add    DWORD PTR [rip+0x661000],edx        # 0x14066b8ef
   14000a8ef:	add    BYTE PTR [rax-0x7a],al
   14000a8f2:	add    BYTE PTR [rax],al
   14000a8f4:	xchg   edx,eax
   14000a8f5:	add    BYTE PTR [rax],al
   14000a8f7:	add    al,bl
   14000a8f9:	pop    rdi
   14000a8fa:	add    BYTE PTR [rax],al
   14000a8fc:	(bad)  
   14000a8fd:	(bad)  
   14000a8fe:	(bad)  
   14000a8ff:	dec    DWORD PTR [rax+riz*2]
   14000a902:	add    BYTE PTR [rax],al
   14000a904:	add    BYTE PTR [rax],al
   14000a906:	add    BYTE PTR [rax],al
   14000a908:	sbb    DWORD PTR [rdx],esp
   14000a90a:	add    al,BYTE PTR [rax]
   14000a90c:	(bad)  
   14000a90d:	add    DWORD PTR [rip+0x661000],edx        # 0x14066b913
   14000a913:	add    BYTE PTR [rax-0x7a],ch
   14000a916:	add    BYTE PTR [rax],al
   14000a918:	xchg   edx,eax
   14000a919:	add    BYTE PTR [rax],al
   14000a91b:	add    BYTE PTR [rax],al
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rax+riz*2],dh
   14000a922:	add    BYTE PTR [rax],al
   14000a924:	(bad)  
   14000a925:	(bad)  
   14000a926:	(bad)  
   14000a927:	jmp    FWORD PTR [rax+0x60]
   14000a92a:	add    BYTE PTR [rax],al
   14000a92c:	add    BYTE PTR [rax],al
   14000a92e:	add    BYTE PTR [rax],al
   14000a930:	adc    DWORD PTR [rsi+rax*1],ebx
   14000a933:	add    BYTE PTR [rsp+riz*2],bl
   14000a936:	or     al,BYTE PTR [rax]
   14000a938:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000a93b:	add    BYTE PTR [rdx+rdx*2],cl
   14000a93e:	or     BYTE PTR [rax+0x72],dh
   14000a941:	add    BYTE PTR gs:[rax],al
   14000a944:	nop
   14000a945:	xchg   BYTE PTR [rax],al
   14000a947:	add    BYTE PTR [rax+0x5e],dh
   14000a94a:	add    BYTE PTR [rax],al
   14000a94c:	(bad)  
   14000a94d:	(bad)  
   14000a94e:	(bad)  
   14000a94f:	call   FWORD PTR [rax+0x5e]
   14000a955:	add    BYTE PTR [rax],al
   14000a957:	add    ah,al
   14000a959:	pop    rsi
   14000a95a:	add    BYTE PTR [rax],al
   14000a95c:	(bad)  
   14000a95d:	(bad)  
   14000a95e:	(bad)  
   14000a95f:	call   QWORD PTR [rcx]
   14000a961:	sbb    BYTE PTR [rax+rax*1],al
   14000a964:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000a967:	add    BYTE PTR [rdx],cl
   14000a969:	push   rdx
   14000a96a:	(bad)  
   14000a96b:	jo     0x14000a9df
   14000a96d:	add    BYTE PTR gs:[rax],al
   14000a970:	mov    eax,0xff000086
   14000a975:	(bad)  
   14000a976:	(bad)  
   14000a977:	call   QWORD PTR [rbp+rsi*2+0x0]
   14000a97b:	add    BYTE PTR [rax],al
   14000a97d:	add    BYTE PTR [rax],al
   14000a97f:	add    ah,bh
   14000a981:	pop    rbp
   14000a982:	add    BYTE PTR [rax],al
   14000a984:	(bad)  
   14000a985:	(bad)  
   14000a986:	(bad)  
   14000a987:	jmp    QWORD PTR [rax]
   14000a989:	pop    rsi
   14000a98a:	add    BYTE PTR [rax],al
   14000a98c:	add    BYTE PTR [rax],al
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	push   rax
   14000a991:	pop    rsi
   14000a992:	add    BYTE PTR [rax],al
   14000a994:	(bad)  
   14000a995:	(bad)  
   14000a996:	(bad)  
   14000a997:	dec    DWORD PTR [rcx]
   14000a999:	sbb    DWORD PTR [rdx],ecx
   14000a99b:	add    BYTE PTR [rcx],bl
   14000a99d:	(bad)  
   14000a99e:	or     eax,DWORD PTR [rax]
   14000a9a0:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000a9a4:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000a9a8:	sbb    DWORD PTR [rax+rcx*1],esi
   14000a9ab:	add    BYTE PTR [rcx],bl
   14000a9ad:	push   rdx
   14000a9ae:	adc    eax,0x6996e0
   14000a9b3:	add    BYTE PTR [rcx],al
   14000a9b5:	add    BYTE PTR [rax],al
   14000a9b7:	add    cl,ch
   14000a9b9:	(bad)  
   14000a9ba:	add    BYTE PTR [rax],al
   14000a9bc:	pop    rdx
   14000a9bd:	movsxd eax,DWORD PTR [rax]
   14000a9bf:	add    BYTE PTR [rsi+0x75],ah
   14000a9c2:	add    BYTE PTR [rax],al
   14000a9c4:	pop    rdx
   14000a9c5:	movsxd eax,DWORD PTR [rax]
   14000a9c7:	add    BYTE PTR [rcx],al
   14000a9c9:	add    BYTE PTR [rax],al
   14000a9cb:	add    BYTE PTR [rcx],dl
   14000a9cd:	or     al,BYTE PTR [rax+rax*1]
   14000a9d0:	or     dh,BYTE PTR [rsi+rax*1]
   14000a9d3:	add    BYTE PTR [rdx],cl
   14000a9d5:	xor    al,BYTE PTR [rsi]
   14000a9d7:	jo     0x14000a96f
   14000a9d9:	imul   eax,DWORD PTR [rax],0x100
   14000a9df:	add    ch,cl
   14000a9e1:	add    BYTE PTR fs:[rax],al
   14000a9e4:	adc    ah,BYTE PTR [rbp+0x0]
   14000a9e7:	add    BYTE PTR [rdx+0x75],cl
   14000a9ed:	add    BYTE PTR [rax],al
   14000a9ef:	add    BYTE PTR [rcx],cl
   14000a9f1:	add    al,0x1
   14000a9f3:	add    BYTE PTR [rdx+riz*1],al
   14000a9f6:	add    BYTE PTR [rax],al
   14000a9f8:	xchg   esi,eax
   14000a9f9:	imul   eax,DWORD PTR [rax],0x100
   14000a9ff:	add    BYTE PTR [rdi+riz*2],ch
   14000aa02:	add    BYTE PTR [rax],al
   14000aa04:	(bad)  
   14000aa05:	add    BYTE PTR [eax],al
   14000aa08:	add    DWORD PTR [rax],eax
   14000aa0a:	add    BYTE PTR [rax],al
   14000aa0c:	(bad)  
   14000aa0d:	add    BYTE PTR [eax],al
   14000aa10:	or     DWORD PTR [rdx],ecx
   14000aa12:	add    al,0x0
   14000aa14:	or     dh,BYTE PTR [rsi+rax*1]
   14000aa17:	add    BYTE PTR [rdx],cl
   14000aa19:	xor    al,BYTE PTR [rsi]
   14000aa1b:	jo     0x14000a9b3
   14000aa1d:	imul   eax,DWORD PTR [rax],0x100
   14000aa23:	add    BYTE PTR [rip+0x60000068],ch        # 0x1a000aa91
   14000aa29:	push   0x75b00000
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	(bad)  
   14000aa31:	push   0xd010000
   14000aa36:	add    al,0x0
   14000aa38:	or     eax,0xd000934
   14000aa3d:	xor    al,BYTE PTR [rsi]
   14000aa3f:	push   rax
   14000aa40:	add    DWORD PTR [rdx+rax*1],ecx
   14000aa43:	add    BYTE PTR [rcx+rax*1],cl
   14000aa46:	adc    DWORD PTR [rax],eax
   14000aa48:	add    DWORD PTR [rax],eax
   14000aa4a:	add    BYTE PTR [rax],al
   14000aa4c:	add    DWORD PTR [rsi],eax
   14000aa4e:	add    al,BYTE PTR [rax]
   14000aa50:	(bad)  
   14000aa51:	jb     0x14000aa55
   14000aa53:	xor    BYTE PTR [rcx],al
   14000aa55:	sbb    BYTE PTR [rcx],al
   14000aa57:	add    BYTE PTR [rax],bl
   14000aa59:	ret    0x0
   14000aa5c:	add    DWORD PTR [rax],ebx
   14000aa5e:	add    DWORD PTR [rax],eax
   14000aa60:	sbb    dl,al
	...
   14000aa6a:	add    BYTE PTR [rax],al
   14000aa6c:	call   0x14000aacf
   14000aa71:	add    BYTE PTR [rax],al
   14000aa73:	add    BYTE PTR [rax+0xaa],cl
	...
   14000aa85:	add    BYTE PTR [rax],al
   14000aa87:	add    BYTE PTR [rbx],al
   14000aa89:	add    BYTE PTR [rax],al
   14000aa8b:	add    BYTE PTR [rax-0x27ffff56],ch
   14000aa91:	stos   DWORD PTR es:[rdi],eax
   14000aa92:	add    BYTE PTR [rax],al
   14000aa94:	sub    BYTE PTR [rax+rax*1+0x0],0x0
	...
   14000aaac:	mov    al,dl
   14000aaae:	add    BYTE PTR [rax],al
   14000aab0:	add    BYTE PTR [rax],al
   14000aab2:	add    BYTE PTR [rax],al
   14000aab4:	(bad)  
   14000aab5:	(bad)  
   14000aab6:	(bad)  
   14000aab7:	inc    DWORD PTR [rax]
   14000aab9:	add    BYTE PTR [rax],al
   14000aabb:	add    BYTE PTR [rax+0x0],al
   14000aabe:	add    BYTE PTR [rax],al
   14000aac0:	cld    
   14000aac1:	pop    rbp
	...
   14000aace:	add    BYTE PTR [rax],al
   14000aad0:	add    al,BYTE PTR [rax]
   14000aad2:	add    BYTE PTR [rax],al
   14000aad4:	adc    BYTE PTR [rbx-0x55180000],ch
	...
   14000aaea:	add    BYTE PTR [rax],al
   14000aaec:	movabs al,ds:0xff000000000000d1
   14000aaf5:	(bad)  
   14000aaf6:	(bad)  
   14000aaf7:	inc    DWORD PTR [rax]
   14000aaf9:	add    BYTE PTR [rax],al
   14000aafb:	add    BYTE PTR [rcx],al
	...
   14000ab11:	add    BYTE PTR [rax],al
   14000ab13:	add    al,ah
   14000ab15:	rol    BYTE PTR [rax],1
   14000ab17:	add    BYTE PTR [rax],al
   14000ab19:	add    BYTE PTR [rax],al
   14000ab1b:	add    bh,bh
   14000ab1d:	(bad)  
   14000ab1e:	(bad)  
   14000ab1f:	inc    DWORD PTR [rax]
   14000ab21:	add    BYTE PTR [rax],al
   14000ab23:	add    BYTE PTR [rax+rax*1],al
	...
   14000ab42:	add    BYTE PTR [rax],al
   14000ab44:	shr    BYTE PTR [rdx+0x0],1
	...
   14000ab56:	add    BYTE PTR [rax],al
   14000ab58:	add    eax,DWORD PTR [rax]
   14000ab5a:	add    BYTE PTR [rax],al
   14000ab5c:	js     0x14000ab09
   14000ab5e:	add    BYTE PTR [rax],al
   14000ab60:	fsubr  DWORD PTR [rbx-0x53800000]
	...
   14000ab7a:	add    BYTE PTR [rax],al
   14000ab7c:	or     cl,dl
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	add    BYTE PTR [rax],al
   14000ab82:	add    BYTE PTR [rax],al
   14000ab84:	(bad)  
   14000ab85:	(bad)  
   14000ab86:	(bad)  
   14000ab87:	inc    DWORD PTR [rax]
   14000ab89:	add    BYTE PTR [rax],al
   14000ab8b:	add    BYTE PTR [rax+0x0],al
   14000ab8e:	add    BYTE PTR [rax],al
   14000ab90:	rcr    BYTE PTR [rip+0x0],1        # 0x14000ab96
	...
   14000aba2:	add    BYTE PTR [rax],al
   14000aba4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aba5:	sbb    al,0x0
   14000aba7:	add    BYTE PTR [rax],al
   14000aba9:	add    BYTE PTR [rax],al
   14000abab:	add    BYTE PTR [rax-0x55],bl
	...
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	add    al,BYTE PTR [rax]
   14000abc2:	add    BYTE PTR [rax],al
   14000abc4:	fsubr  DWORD PTR [rbx-0x53800000]
	...
   14000abda:	add    BYTE PTR [rax],al
   14000abdc:	xor    cl,dl
   14000abde:	add    BYTE PTR [rax],al
   14000abe0:	add    BYTE PTR [rax],al
   14000abe2:	add    BYTE PTR [rax],al
   14000abe4:	(bad)  
   14000abe5:	(bad)  
   14000abe6:	(bad)  
   14000abe7:	inc    DWORD PTR [rax]
   14000abe9:	add    BYTE PTR [rax],al
   14000abeb:	add    BYTE PTR [rax+0x0],al
   14000abee:	add    BYTE PTR [rax],al
   14000abf0:	(bad)  
   14000abf1:	sbb    eax,DWORD PTR [rax]
	...
   14000ac03:	add    BYTE PTR [rdx+rbx*1+0x0],cl
   14000ac0a:	add    BYTE PTR [rax],al
   14000ac0c:	shr    BYTE PTR [rbx+0x0],0x0
	...
   14000ac1f:	add    BYTE PTR [rdx],al
   14000ac21:	add    BYTE PTR [rax],al
   14000ac23:	add    BYTE PTR [rax],bh
   14000ac25:	lods   al,BYTE PTR ds:[rsi]
   14000ac26:	add    BYTE PTR [rax],al
   14000ac28:	sub    BYTE PTR [rax+rax*1+0x0],0x0
	...
   14000ac38:	adc    BYTE PTR [rax],al
   14000ac3a:	add    BYTE PTR [rax],al
   14000ac3c:	pop    rax
   14000ac3d:	rol    DWORD PTR [rax],1
   14000ac3f:	add    BYTE PTR [rax],al
   14000ac41:	add    BYTE PTR [rax],al
   14000ac43:	add    bh,bh
   14000ac45:	(bad)  
   14000ac46:	(bad)  
   14000ac47:	inc    DWORD PTR [rax]
   14000ac49:	add    BYTE PTR [rax],al
   14000ac4b:	add    BYTE PTR [rax],bl
   14000ac4d:	add    BYTE PTR [rax],al
   14000ac4f:	add    BYTE PTR [rax+0x1a],al
	...
   14000ac62:	add    BYTE PTR [rax],al
   14000ac64:	mov    BYTE PTR [rcx],bl
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	add    BYTE PTR [rax],al
   14000ac6a:	add    BYTE PTR [rax],al
   14000ac6c:	and    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000ac83:	add    BYTE PTR [rax+0xd1],al
   14000ac89:	add    BYTE PTR [rax],al
   14000ac8b:	add    bh,bh
   14000ac8d:	(bad)  
   14000ac8e:	(bad)  
   14000ac8f:	inc    DWORD PTR [rax]
   14000ac91:	add    BYTE PTR [rax],al
   14000ac93:	add    BYTE PTR [rax],bl
   14000ac95:	add    BYTE PTR [rax],al
   14000ac97:	add    BYTE PTR [rax+0x64],ch
	...
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	add    al,BYTE PTR [rax]
   14000acaa:	add    BYTE PTR [rax],al
   14000acac:	shr    BYTE PTR [rax+rax*1+0xaae800],0x0
	...
   14000acc4:	mov    al,0xd0
   14000acc6:	add    BYTE PTR [rax],al
   14000acc8:	add    BYTE PTR [rax],al
   14000acca:	add    BYTE PTR [rax],al
   14000accc:	(bad)  
   14000accd:	(bad)  
   14000acce:	(bad)  
   14000accf:	inc    DWORD PTR [rax]
   14000acd1:	add    BYTE PTR [rax],al
   14000acd3:	add    BYTE PTR [rcx],al
	...
   14000acf1:	add    BYTE PTR [rax],al
   14000acf3:	add    BYTE PTR [rax+0xac],ch
	...
   14000ad01:	add    BYTE PTR [rax],al
   14000ad03:	add    BYTE PTR [rcx],al
   14000ad05:	add    BYTE PTR [rax],al
   14000ad07:	add    BYTE PTR [rax-0x2fffff78],dl
   14000ad0d:	xlat   BYTE PTR ds:[rbx]
   14000ad0e:	add    BYTE PTR [rax],al
   14000ad10:	add    al,dh
   14000ad12:	add    BYTE PTR [rax],al
   14000ad14:	push   0x180000ad
   14000ad19:	scas   al,BYTE PTR es:[rdi]
	...
   14000ad22:	add    BYTE PTR [rax],al
   14000ad24:	add    DWORD PTR [rax],eax
   14000ad26:	add    BYTE PTR [rax],al
   14000ad28:	ror    BYTE PTR [rax-0x28280000],0x0
   14000ad2f:	add    BYTE PTR [rax],dh
   14000ad31:	lock add BYTE PTR [rax],al
   14000ad34:	cwde   
   14000ad35:	lods   eax,DWORD PTR ds:[rsi]
   14000ad36:	add    BYTE PTR [rax],al
   14000ad38:	rex.W scas al,BYTE PTR es:[rdi]
	...
   14000ad66:	add    BYTE PTR [rax],al
   14000ad68:	mov    esi,0xad
   14000ad6d:	add    BYTE PTR [rax],al
   14000ad6f:	add    ah,cl
   14000ad71:	lods   eax,DWORD PTR ds:[rsi]
   14000ad72:	add    BYTE PTR [rax],al
   14000ad74:	add    BYTE PTR [rax],al
   14000ad76:	add    BYTE PTR [rax],al
   14000ad78:	loopne 0x14000ad27
   14000ad7a:	add    BYTE PTR [rax],al
   14000ad7c:	add    BYTE PTR [rax],al
   14000ad7e:	add    BYTE PTR [rax],al
   14000ad80:	hlt    
   14000ad81:	lods   eax,DWORD PTR ds:[rsi]
   14000ad82:	add    BYTE PTR [rax],al
   14000ad84:	add    BYTE PTR [rax],al
   14000ad86:	add    BYTE PTR [rax],al
   14000ad88:	test   al,0xad
	...
   14000ad96:	add    BYTE PTR [rax],al
   14000ad98:	(bad)  
   14000ad99:	scas   al,BYTE PTR es:[rdi]
	...
   14000adaa:	push   rax
   14000adab:	outs   dx,DWORD PTR ds:[rsi]
   14000adac:	jae    0x14000ae22
   14000adae:	push   rsp
   14000adaf:	push   0x64616572
   14000adb4:	rex.WRB
   14000adb5:	gs jae 0x14000ae2b
   14000adb8:	(bad)  
   14000adb9:	addr32 gs push rdi
   14000adbc:	add    BYTE PTR [rax],al
   14000adbe:	add    BYTE PTR [rax],al
   14000adc0:	rex.RXB
   14000adc1:	gs je  0x14000ae11
   14000adc4:	gs jae 0x14000ae3a
   14000adc7:	(bad)  
   14000adc8:	addr32 gs push rdi
   14000adcb:	add    BYTE PTR [rax],al
   14000adcd:	add    BYTE PTR [rdx+rsi*2+0x61],dl
   14000add1:	outs   dx,BYTE PTR ds:[rsi]
   14000add2:	jae    0x14000ae40
   14000add4:	(bad)  
   14000add5:	je     0x14000ae3c
   14000add7:	rex.WRB
   14000add8:	gs jae 0x14000ae4e
   14000addb:	(bad)  
   14000addc:	add    BYTE PTR gs:[eax],al
   14000ade0:	add    BYTE PTR [rax],al
   14000ade2:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000adea:	rex.WRB
   14000adeb:	gs jae 0x14000ae61
   14000adee:	(bad)  
   14000adef:	addr32 gs push rdi
   14000adf2:	add    BYTE PTR [rax],al
   14000adf4:	add    BYTE PTR [rax],al
   14000adf6:	push   rax
   14000adf7:	outs   dx,DWORD PTR ds:[rsi]
   14000adf8:	jae    0x14000ae6e
   14000adfa:	push   rcx
   14000adfb:	jne    0x14000ae66
   14000adfd:	je     0x14000ae4c
   14000adff:	gs jae 0x14000ae75
   14000ae02:	(bad)  
   14000ae03:	add    BYTE PTR gs:[eax],al
   14000ae07:	add    BYTE PTR [rbx+0x65],dl
   14000ae0a:	je     0x14000ae60
   14000ae0c:	imul   ebp,DWORD PTR [rbp+0x65],0x72
	...
   14000ae57:	add    BYTE PTR [rax],cl
   14000ae59:	mov    dl,0x0
	...
   14000ae63:	add    BYTE PTR [rax-0x4a],cl
   14000ae66:	add    BYTE PTR [rax],al
   14000ae68:	or     BYTE PTR [rdx-0x4ff00000],al
	...
   14000ae76:	add    BYTE PTR [rax],al
   14000ae78:	ds mov eax,0x80100000
   14000ae7e:	add    BYTE PTR [rax],al
   14000ae80:	cwde   
   14000ae81:	mov    cl,0x0
	...
   14000ae8b:	add    BYTE PTR [rsi-0x48],bl
   14000ae8e:	add    BYTE PTR [rax],al
   14000ae90:	cwde   
   14000ae91:	add    DWORD PTR [rax],0xb14000
	...
   14000ae9f:	add    BYTE PTR [rdx+0x400000b8],al
   14000aea5:	add    DWORD PTR [rax],0xb07800
	...
   14000aeb3:	add    BYTE PTR [rax+rdi*4-0x7f880000],ah
   14000aeba:	add    BYTE PTR [rax],al
   14000aebc:	cwde   
   14000aebd:	mov    al,0x0
	...
   14000aec7:	add    dh,cl
   14000aec9:	mov    eax,0x80980000
   14000aece:	add    BYTE PTR [rax],al
   14000aed0:	adc    BYTE PTR [rcx+0x0],dh
   14000aed6:	add    BYTE PTR [rax],al
   14000aed8:	add    BYTE PTR [rax],al
   14000aeda:	add    BYTE PTR [rax],al
   14000aedc:	clc    
   14000aedd:	mov    eax,0x81100000
   14000aee2:	add    BYTE PTR [rax],al
   14000aee4:	loopne 0x14000ae96
	...
   14000aeee:	add    BYTE PTR [rax],al
   14000aef0:	sbb    al,0xb9
   14000aef2:	add    BYTE PTR [rax],al
   14000aef4:	loopne 0x14000ae76
   14000aef6:	add    BYTE PTR [rax],al
   14000aef8:	xor    BYTE PTR [rcx+0x0],0x0
   14000aeff:	add    BYTE PTR [rax],al
   14000af01:	add    BYTE PTR [rax],al
   14000af03:	add    BYTE PTR [rsi-0x47],al
   14000af06:	add    BYTE PTR [rax],al
   14000af08:	add    BYTE PTR [rcx-0x4ee00000],0x0
	...
   14000af17:	add    BYTE PTR [rdx-0x47],ch
   14000af1a:	add    BYTE PTR [rax],al
   14000af1c:	and    BYTE PTR [rcx-0x4ca00000],al
	...
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	lock mov ebp,0x83600000
   14000af32:	add    BYTE PTR [rax],al
   14000af34:	push   rax
   14000af35:	mov    al,0x0
	...
   14000af3f:	add    ah,ah
   14000af41:	mov    edi,0x80500000
   14000af46:	add    BYTE PTR [rax],al
   14000af48:	shl    BYTE PTR [rax+0x0],0x0
   14000af4f:	add    BYTE PTR [rax],al
   14000af51:	add    BYTE PTR [rax],al
   14000af53:	add    BYTE PTR [rsi],al
   14000af55:	rol    BYTE PTR [rax],0x0
   14000af58:	rol    BYTE PTR [rax-0x4e480000],0x0
	...
   14000af67:	add    BYTE PTR [rsi],ch
   14000af69:	rol    BYTE PTR [rax],0x0
   14000af6c:	mov    eax,0xf8000081
   14000af71:	mov    cl,0x0
	...
   14000af7b:	add    BYTE PTR [rdx-0x40],dl
   14000af7e:	add    BYTE PTR [rax],al
   14000af80:	clc    
   14000af81:	add    DWORD PTR [rax],0xb1d000
	...
   14000af8f:	add    BYTE PTR [rax-0x40],bh
   14000af92:	add    BYTE PTR [rax],al
   14000af94:	rol    BYTE PTR [rcx-0x4f300000],1
	...
   14000afa2:	add    BYTE PTR [rax],al
   14000afa4:	movabs ds:0x28000080d00000c0,al
   14000afad:	mov    bl,0x0
	...
   14000afb7:	add    BYTE PTR [rcx+rax*8+0x0],ah
   14000afbb:	add    BYTE PTR [rax],ch
   14000afbd:	add    DWORD PTR [rax],0x0
   14000afc0:	add    BYTE PTR [rax+0x0],dh
   14000afc6:	add    BYTE PTR [rax],al
   14000afc8:	add    BYTE PTR [rax],al
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	mov    al,cl
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	add    BYTE PTR [rax-0x4fa00000],al
	...
   14000afde:	add    BYTE PTR [rax],al
   14000afe0:	add    al,dl
   14000afe2:	add    BYTE PTR [rax],al
   14000afe4:	(bad)  
   14000afe5:	add    BYTE PTR [rax],0x0
	...
   14000b000:	outs   dx,BYTE PTR ds:[rsi]
   14000b001:	rol    DWORD PTR [rax],0x0
	...
   14000b010:	sahf   
   14000b011:	mov    esi,0x0
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	shl    BYTE PTR [rsi+0x0],cl
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	mov    esp,0xb6
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rsi+rsi*4+0x0],ah
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	xchg   edx,eax
   14000b031:	mov    dh,0x0
   14000b033:	add    BYTE PTR [rax],al
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rsi+0xbf],dh
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    dh,cl
   14000b041:	mov    edi,0x0
	...
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	nop
   14000b051:	mov    esi,0x0
	...
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	rol    cl,cl
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	add    BYTE PTR [rax],al
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	(bad)  
   14000b069:	rol    DWORD PTR [rax],0x0
	...
   14000b078:	cli    
   14000b079:	mov    bh,0x0
   14000b07b:	add    BYTE PTR [rax],al
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    dl,ch
   14000b081:	mov    esi,0x0
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	(bad)  
   14000b089:	mov    bh,0x0
	...
   14000b097:	add    BYTE PTR [rsi+0xc1],ch
   14000b09d:	add    BYTE PTR [rax],al
   14000b09f:	add    BYTE PTR [rdi+rsi*4],dh
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	add    BYTE PTR [rax],al
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	rol    cl,0x0
   14000b0ab:	add    BYTE PTR [rax],al
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    BYTE PTR [rax+0xbe],dh
	...
   14000b0bd:	add    BYTE PTR [rax],al
   14000b0bf:	add    dh,al
   14000b0c1:	mov    esi,0x0
	...
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b0d1:	mov    edi,0x0
	...
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	(bad)  
   14000b0e1:	mov    eax,0x0
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	(bad)  
   14000b0e9:	mov    bh,0x0
   14000b0eb:	add    BYTE PTR [rax],al
   14000b0ed:	add    BYTE PTR [rax],al
   14000b0ef:	add    BYTE PTR [rsi],al
   14000b0f1:	mov    edi,0x0
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	js     0x14000b0b1
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	add    BYTE PTR [rax],al
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	sub    bh,BYTE PTR [rax+0x0]
	...
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	rex.W mov dil,0x0
	...
   14000b11f:	add    ah,cl
   14000b121:	mov    bh,0x0
   14000b123:	add    BYTE PTR [rax],al
   14000b125:	add    BYTE PTR [rax],al
   14000b127:	add    BYTE PTR [rax+0xb7],bh
   14000b12d:	add    BYTE PTR [rax],al
   14000b12f:	add    dh,ah
   14000b131:	mov    bh,0x0
	...
   14000b13f:	add    BYTE PTR [rsi],cl
   14000b141:	mov    bh,0x0
   14000b143:	add    BYTE PTR [rax],al
   14000b145:	add    BYTE PTR [rax],al
   14000b147:	add    BYTE PTR [rax-0x42],cl
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	add    BYTE PTR [rax],al
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	(bad)  
   14000b151:	mov    esi,0x0
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	js     0x14000b118
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	add    BYTE PTR [rax],al
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	cli    
   14000b161:	mov    esi,0x0
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	adc    al,0xbf
   14000b16a:	add    BYTE PTR [rax],al
   14000b16c:	add    BYTE PTR [rax],al
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	and    BYTE PTR [rsi+0x0],bh
	...
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	test   al,0xb7
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	add    BYTE PTR [rax],al
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	mov    ?,WORD PTR [rdi+0x0]
	...
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	in     al,0xb6
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	add    BYTE PTR [rax],al
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	repnz mov dh,0x0
   14000b1a3:	add    BYTE PTR [rax],al
   14000b1a5:	add    BYTE PTR [rax],al
   14000b1a7:	add    BYTE PTR [rdx],al
   14000b1a9:	mov    bh,0x0
	...
   14000b1b7:	add    BYTE PTR [rdx-0x41],al
   14000b1ba:	add    BYTE PTR [rax],al
   14000b1bc:	add    BYTE PTR [rax],al
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	(bad)  
   14000b1c1:	mov    esi,0x0
	...
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	test   BYTE PTR [rdi+0x0],bh
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	xchg   esp,eax
   14000b1d9:	mov    edi,0x0
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	(bad)  
   14000b1e1:	mov    edi,0x0
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	jb     0x14000b1a9
	...
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	and    al,0xbf
	...
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	cwde   
   14000b209:	mov    ch,0x0
   14000b20b:	add    BYTE PTR [rax],al
   14000b20d:	add    BYTE PTR [rax],al
   14000b20f:	add    BYTE PTR [rdx+0xb5],cl
   14000b215:	add    BYTE PTR [rax],al
   14000b217:	add    BYTE PTR [rbp+rsi*4+0x0],dh
   14000b21b:	add    BYTE PTR [rax],al
   14000b21d:	add    BYTE PTR [rax],al
   14000b21f:	add    BYTE PTR [rsi+0xb5],ah
   14000b225:	add    BYTE PTR [rax],al
   14000b227:	add    BYTE PTR [rsi+0xb5],dh
   14000b22d:	add    BYTE PTR [rax],al
   14000b22f:	add    al,dl
   14000b231:	mov    ch,0x0
   14000b233:	add    BYTE PTR [rax],al
   14000b235:	add    BYTE PTR [rax],al
   14000b237:	add    al,bl
   14000b239:	mov    ch,0x0
   14000b23b:	add    BYTE PTR [rax],al
   14000b23d:	add    BYTE PTR [rax],al
   14000b23f:	add    BYTE PTR [rax-0x4c],dh
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	add    BYTE PTR [rax],al
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	push   rdx
   14000b249:	mov    ch,0x0
   14000b24b:	add    BYTE PTR [rax],al
   14000b24d:	add    BYTE PTR [rax],al
   14000b24f:	add    BYTE PTR [rdx],dh
   14000b251:	mov    ch,0x0
   14000b253:	add    BYTE PTR [rax],al
   14000b255:	add    BYTE PTR [rax],al
   14000b257:	add    BYTE PTR [rax],ch
   14000b259:	mov    ch,0x0
   14000b25b:	add    BYTE PTR [rax],al
   14000b25d:	add    BYTE PTR [rax],al
   14000b25f:	add    BYTE PTR [rax],ah
   14000b261:	mov    ch,0x0
   14000b263:	add    BYTE PTR [rax],al
   14000b265:	add    BYTE PTR [rax],al
   14000b267:	add    BYTE PTR [rdx],al
   14000b269:	mov    ch,0x0
   14000b26b:	add    BYTE PTR [rax],al
   14000b26d:	add    BYTE PTR [rax],al
   14000b26f:	add    dl,ah
   14000b271:	mov    ch,0x0
   14000b273:	add    BYTE PTR [rax],al
   14000b275:	add    BYTE PTR [rax],al
   14000b277:	add    dh,dh
   14000b279:	mov    ch,0x0
   14000b27b:	add    BYTE PTR [rax],al
   14000b27d:	add    BYTE PTR [rax],al
   14000b27f:	add    BYTE PTR [rdx],al
   14000b281:	mov    dh,0x0
   14000b283:	add    BYTE PTR [rax],al
   14000b285:	add    BYTE PTR [rax],al
   14000b287:	add    BYTE PTR [rdx],bl
   14000b289:	mov    dh,0x0
   14000b28b:	add    BYTE PTR [rax],al
   14000b28d:	add    BYTE PTR [rax],al
   14000b28f:	add    BYTE PTR [rsi+rsi*4],ah
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	add    BYTE PTR [rax],al
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	enter  0xb5,0x0
   14000b29c:	add    BYTE PTR [rax],al
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	xor    BYTE PTR [rsi+0x0],dh
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	(bad)  
   14000b2a9:	mov    ah,0x0
   14000b2ab:	add    BYTE PTR [rax],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rsi-0x4a],bh
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	int3   
   14000b2b9:	mov    ah,0x0
   14000b2bb:	add    BYTE PTR [rax],al
   14000b2bd:	add    BYTE PTR [rax],al
   14000b2bf:	add    BYTE PTR [rsi+rsi*4+0x0],dl
   14000b2c3:	add    BYTE PTR [rax],al
   14000b2c5:	add    BYTE PTR [rax],al
   14000b2c7:	add    BYTE PTR [rsp+rsi*4+0x0],dh
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	xchg   esp,eax
   14000b2d1:	mov    ah,0x0
   14000b2d3:	add    BYTE PTR [rax],al
   14000b2d5:	add    BYTE PTR [rax],al
   14000b2d7:	add    BYTE PTR [rax+0xb4],cl
   14000b2dd:	add    BYTE PTR [rax],al
   14000b2df:	add    BYTE PTR [rsp+rsi*4+0x0],bh
   14000b2e3:	add    BYTE PTR [rax],al
   14000b2e5:	add    BYTE PTR [rax],al
   14000b2e7:	add    BYTE PTR [rsi+rsi*4+0x0],bl
   14000b2eb:	add    BYTE PTR [rax],al
   14000b2ed:	add    BYTE PTR [rax],al
   14000b2ef:	add    BYTE PTR [rsi-0x4a],ah
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	add    BYTE PTR [rax],al
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	pop    rsi
   14000b2f9:	mov    ch,0x0
   14000b2fb:	add    BYTE PTR [rax],al
   14000b2fd:	add    BYTE PTR [rax],al
   14000b2ff:	add    BYTE PTR [rsi+rsi*4+0x0],dh
   14000b303:	add    BYTE PTR [rax],al
   14000b305:	add    BYTE PTR [rax],al
   14000b307:	add    BYTE PTR [rsi],dl
   14000b309:	mov    esi,0x0
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	or     al,0xbe
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	add    BYTE PTR [rax],al
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	(bad)  
   14000b319:	mov    ebp,0x0
	...
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	xor    cl,al
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	(bad)  
   14000b331:	rol    DWORD PTR [rax],0x0
   14000b334:	add    BYTE PTR [rax],al
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	cld    
   14000b339:	rol    BYTE PTR [rax],0x0
   14000b33c:	add    BYTE PTR [rax],al
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	loop   0x14000b302
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	add    BYTE PTR [rax],al
   14000b346:	add    BYTE PTR [rax],al
   14000b348:	rol    al,1
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	add    BYTE PTR [rax],al
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	rex.WX rol QWORD PTR [rax],0x0
	...
   14000b360:	and    al,0xbd
   14000b362:	add    BYTE PTR [rax],al
   14000b364:	add    BYTE PTR [rax],al
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	or     al,0xbd
   14000b36a:	add    BYTE PTR [rax],al
   14000b36c:	add    BYTE PTR [rax],al
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	fdivr  DWORD PTR [rax+rax*1+0x0]
   14000b377:	add    BYTE PTR [rsi+0xbc],bh
   14000b37d:	add    BYTE PTR [rax],al
   14000b37f:	add    BYTE PTR [rsi+0xbc],bl
   14000b385:	add    BYTE PTR [rax],al
   14000b387:	add    BYTE PTR [rdx+0xbc],al
   14000b38d:	add    BYTE PTR [rax],al
   14000b38f:	add    BYTE PTR [rax-0x44],bl
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	add    BYTE PTR [rax],al
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	rex mov esp,0x0
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	and    al,0xbc
   14000b3a2:	add    BYTE PTR [rax],al
   14000b3a4:	add    BYTE PTR [rax],al
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	or     bh,BYTE PTR [rax+rax*1+0x0]
   14000b3af:	add    al,cl
   14000b3b1:	mov    ebx,0x0
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	mov    dl,0xbb
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	add    BYTE PTR [rax],al
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	nop
   14000b3c1:	mov    ebx,0x0
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	jbe    0x14000b385
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	add    BYTE PTR [rax],al
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	push   rsp
   14000b3d1:	mov    ebx,0x0
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	ss mov ebx,0x0
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	in     al,dx
   14000b3e1:	mov    edx,0x0
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	mov    dl,0xba
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    BYTE PTR [rax],al
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	xchg   edx,eax
   14000b3f1:	mov    edx,0x0
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	jo     0x14000b3b4
   14000b3fa:	add    BYTE PTR [rax],al
   14000b3fc:	add    BYTE PTR [rax],al
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	cmp    al,0xbd
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	add    BYTE PTR [rax],al
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	pop    rdx
   14000b409:	mov    ebp,0x0
   14000b40e:	add    BYTE PTR [rax],al
   14000b410:	test   BYTE PTR [rbp+0x0],bh
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	scas   al,BYTE PTR es:[rdi]
   14000b419:	mov    ebp,0x0
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	in     al,0xbb
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	add    BYTE PTR [rax],al
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	push   rsp
   14000b429:	mov    edx,0x0
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	cmp    al,0xba
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	add    BYTE PTR [rax],al
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	and    bh,BYTE PTR [rdx+0x0]
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	lock mov ecx,0x0
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	fdivr  QWORD PTR [rcx+0x0]
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	test   al,0xb9
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	add    BYTE PTR [rax],al
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	nop
   14000b459:	mov    ecx,0x0
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	or     BYTE PTR [rbx+0x0],bh
	...
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	sahf   
   14000b471:	add    bl,BYTE PTR [rdi+0x70]
   14000b474:	jne    0x14000b4e8
   14000b476:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   14000b47a:	ins    BYTE PTR es:[rdi],dx
   14000b47b:	add    BYTE PTR [rbx+0x6d656d04],dl
   14000b481:	movsxd esi,DWORD PTR [rax+0x79]
   14000b484:	pop    rdi
   14000b485:	jae    0x14000b487
   14000b487:	add    BYTE PTR [rbp+0x6d656d04],dl
   14000b48d:	ins    DWORD PTR es:[rdi],dx
   14000b48e:	outs   dx,DWORD PTR ds:[rsi]
   14000b48f:	jbe    0x14000b4f6
   14000b491:	pop    rdi
   14000b492:	jae    0x14000b494
   14000b494:	or     al,BYTE PTR [rax]
   14000b496:	(bad)  
   14000b497:	(bad)  
   14000b498:	xor    BYTE PTR [rbp+0x78],ah
   14000b49b:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b49e:	je     0x14000b509
   14000b4a0:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a1:	outs   dx,BYTE PTR ds:[rsi]
   14000b4a2:	rex
   14000b4a3:	rex push rcx
   14000b4a5:	rex.RB
   14000b4a6:	rex.B
   14000b4a7:	rex.B
   14000b4a8:	rex
   14000b4a9:	rex.B
   14000b4aa:	rex.RB
   14000b4ab:	rex.X push rcx
   14000b4ad:	rex.RB
   14000b4ae:	rex.X
   14000b4af:	rex.R
   14000b4b0:	rex pop rdx
   14000b4b2:	add    BYTE PTR [rax],al
   14000b4b4:	adc    DWORD PTR [rax],eax
   14000b4b6:	(bad)  
   14000b4b7:	(bad)  
   14000b4b8:	xor    DWORD PTR [rbp+0x78],esp
   14000b4bb:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b4be:	je     0x14000b529
   14000b4c0:	outs   dx,DWORD PTR ds:[rsi]
   14000b4c1:	outs   dx,BYTE PTR ds:[rsi]
   14000b4c2:	rex
   14000b4c3:	rex push rbp
   14000b4c5:	rex.RB
   14000b4c6:	rex.B
   14000b4c7:	rex.B
   14000b4c8:	rex pop rax
   14000b4ca:	pop    rdx
   14000b4cb:	add    BYTE PTR [rax+rax*1],cl
   14000b4ce:	(bad)  
   14000b4cf:	(bad)  
   14000b4d0:	xor    BYTE PTR [rbp+0x78],ah
   14000b4d3:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b4d6:	je     0x14000b541
   14000b4d8:	outs   dx,DWORD PTR ds:[rsi]
   14000b4d9:	outs   dx,BYTE PTR ds:[rsi]
   14000b4da:	rex
   14000b4db:	rex push rcx
   14000b4dd:	rex.RB
   14000b4de:	rex.B
   14000b4df:	rex.B
   14000b4e0:	rex
   14000b4e1:	rex.B
   14000b4e2:	rex.RB
   14000b4e3:	rex.X push rsi
   14000b4e5:	xor    BYTE PTR [rax+0x40],al
   14000b4e8:	pop    rdx
   14000b4e9:	add    BYTE PTR [rip+0x303f3f00],cl        # 0x1703ff3ef
   14000b4ef:	gs js  0x14000b555
   14000b4f2:	gs jo  0x14000b569
   14000b4f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   14000b4fc:	rex.B
   14000b4fd:	rex.B
   14000b4fe:	rex pop rax
   14000b500:	pop    rdx
   14000b501:	add    BYTE PTR [rcx],dh
   14000b503:	add    BYTE PTR [rdi],bh
   14000b505:	ja     0x14000b56f
   14000b507:	(bad)  
   14000b508:	je     0x14000b54a
   14000b50a:	gs js  0x14000b570
   14000b50d:	gs jo  0x14000b584
   14000b510:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000b517:	rex.X
   14000b518:	push   r8
   14000b51a:	rex.RB
   14000b51b:	rex.X
   14000b51c:	rex.R pop rax
   14000b51e:	pop    rdx
   14000b51f:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000b523:	jb     0x14000b58a
   14000b525:	add    BYTE PTR gs:[rax],al
   14000b528:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000b52f:	movsxd eax,DWORD PTR [rax]
   14000b531:	add    BYTE PTR [rbx],cl
   14000b533:	add    BYTE PTR [rdi],bh
   14000b535:	(bad)  
   14000b536:	xor    BYTE PTR [rbp+0x78],ah
   14000b539:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b53c:	je     0x14000b5a7
   14000b53e:	outs   dx,DWORD PTR ds:[rsi]
   14000b53f:	outs   dx,BYTE PTR ds:[rsi]
   14000b540:	rex
   14000b541:	rex push rcx
   14000b543:	rex.RB
   14000b544:	rex.B
   14000b545:	rex.B
   14000b546:	rex
   14000b547:	rex.B
   14000b548:	rex.RB
   14000b549:	rex.X push rcx
   14000b54b:	rex.RB
   14000b54c:	rex.X
   14000b54d:	rex.R
   14000b54e:	rex.W
   14000b54f:	rex pop rdx
   14000b551:	add    BYTE PTR [rdi+0x61635f00],bh
   14000b557:	ins    BYTE PTR es:[rdi],dx
   14000b558:	ins    BYTE PTR es:[rdi],dx
   14000b559:	outs   dx,BYTE PTR ds:[rsi]
   14000b55a:	gs ja  0x14000b5c5
   14000b55d:	add    BYTE PTR [rbx+0x0],cl
   14000b560:	pop    rdi
   14000b561:	rex.XB js 0x14000b5dc
   14000b564:	push   rsp
   14000b565:	push   0x45776f72
   14000b56a:	js     0x14000b5cf
   14000b56c:	gs jo  0x14000b5e3
   14000b56f:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000b576:	pop    rdi
   14000b577:	pop    rdi
   14000b578:	rex.XB js 0x14000b5f3
   14000b57b:	rex.RX jb 0x14000b5df
   14000b57e:	ins    DWORD PTR es:[rdi],dx
   14000b57f:	gs rex.W (bad) 
   14000b582:	outs   dx,BYTE PTR ds:[rsi]
   14000b583:	fs ins BYTE PTR es:[rdi],dx
   14000b585:	gs jb  0x14000b5bb
   14000b588:	add    BYTE PTR [rax],al
   14000b58a:	push   rbp
   14000b58b:	add    BYTE PTR [rdi+0x58],bl
   14000b58e:	movsxd esi,DWORD PTR [rax+0x74]
   14000b591:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000b59a:	pop    rdi
   14000b59b:	(bad)  
   14000b59c:	ins    DWORD PTR es:[rdi],dx
   14000b59d:	jae    0x14000b606
   14000b59f:	pop    rdi
   14000b5a0:	gs js  0x14000b60c
   14000b5a3:	je     0x14000b5a5
   14000b5a5:	add    BYTE PTR [rdi+0x0],bh
   14000b5a8:	pop    rdi
   14000b5a9:	pop    rdi
   14000b5aa:	addr32 gs je 0x14000b61b
   14000b5ae:	(bad)  
   14000b5af:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000b5b6:	mov    es,WORD PTR [rax]
   14000b5b8:	pop    rdi
   14000b5b9:	pop    rdi
   14000b5ba:	jae    0x14000b621
   14000b5bc:	je     0x14000b61d
   14000b5be:	(bad)  
   14000b5bf:	jo     0x14000b631
   14000b5c1:	pop    rdi
   14000b5c2:	je     0x14000b63d
   14000b5c4:	jo     0x14000b62b
   14000b5c6:	add    BYTE PTR [rax],al
   14000b5c8:	xor    al,BYTE PTR [riz*2+0x746978]
   14000b5cf:	add    BYTE PTR [rsi],cl
   14000b5d1:	add    DWORD PTR [rdi+0x65],ebx
   14000b5d4:	js     0x14000b63f
   14000b5d6:	je     0x14000b5d8
   14000b5d8:	rol    DWORD PTR [rax],0x5f
   14000b5db:	movsxd esp,DWORD PTR [rbp+0x78]
   14000b5de:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000b5e6:	jae    0x14000b64d
   14000b5e8:	je     0x14000b65f
   14000b5ea:	jae    0x14000b651
   14000b5ec:	jb     0x14000b65b
   14000b5ee:	(bad)  
   14000b5ef:	je     0x14000b659
   14000b5f1:	gs jb  0x14000b666
   14000b5f4:	add    BYTE PTR [rax],al
   14000b5f6:	jge    0x14000b5f9
   14000b5f8:	pop    rdi
   14000b5f9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000b600:	ins    DWORD PTR es:[rdi],dx
   14000b601:	add    BYTE PTR [rdi+0x0],dl
   14000b604:	pop    rdi
   14000b605:	pop    rdi
   14000b606:	rex.XB pop r15
   14000b608:	jae    0x14000b67a
   14000b60a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000b60e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000b615:	ins    BYTE PTR es:[rdi],dx
   14000b616:	gs jb  0x14000b619
   14000b619:	add    BYTE PTR [rdi],ah
   14000b61b:	add    DWORD PTR [rdi+0x66],ebx
   14000b61e:	ins    DWORD PTR es:[rdi],dx
   14000b61f:	outs   dx,DWORD PTR ds:[rsi]
   14000b620:	fs add BYTE PTR gs:[rax],al
   14000b624:	rol    BYTE PTR [rax],cl
   14000b626:	pop    rdi
   14000b627:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b62a:	ins    DWORD PTR es:[rdi],dx
   14000b62b:	outs   dx,DWORD PTR ds:[rsi]
   14000b62c:	fs add BYTE PTR gs:[rax],al
   14000b630:	adc    al,BYTE PTR [rax]
   14000b632:	(bad)  
   14000b633:	(bad)  
   14000b634:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000b638:	gs pop rdi
   14000b63a:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000b641:	rex.RB
   14000b642:	rex.B
   14000b643:	rex.B
   14000b644:	rex pop rax
   14000b646:	pop    rdx
   14000b647:	add    BYTE PTR [rbp+0x73],ch
   14000b64a:	jbe    0x14000b6af
   14000b64c:	jb     0x14000b6c2
   14000b64e:	cs fs ins BYTE PTR es:[rdi],dx
   14000b651:	ins    BYTE PTR es:[rdi],dx
   14000b652:	add    BYTE PTR [rax],al
   14000b654:	out    0x1,al
   14000b656:	pop    rdi
   14000b657:	ins    BYTE PTR es:[rdi],dx
   14000b658:	outs   dx,DWORD PTR ds:[rsi]
   14000b659:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b65c:	add    ebx,DWORD PTR [r15+0x75]
   14000b660:	outs   dx,BYTE PTR ds:[rsi]
   14000b661:	ins    BYTE PTR es:[rdi],dx
   14000b662:	outs   dx,DWORD PTR ds:[rsi]
   14000b663:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b666:	jnp    0x14000b668
   14000b668:	pop    rdi
   14000b669:	pop    rdi
   14000b66a:	fs ins BYTE PTR es:[rdi],dx
   14000b66c:	ins    BYTE PTR es:[rdi],dx
   14000b66d:	outs   dx,DWORD PTR ds:[rsi]
   14000b66e:	outs   dx,BYTE PTR ds:[rsi]
   14000b66f:	gs js  0x14000b6db
   14000b672:	je     0x14000b674
   14000b674:	nop
   14000b675:	add    bl,BYTE PTR [rdi+0x6f]
   14000b678:	outs   dx,BYTE PTR ds:[rsi]
   14000b679:	gs js  0x14000b6e5
   14000b67c:	je     0x14000b67e
   14000b67e:	(bad)  
   14000b67f:	add    BYTE PTR [rdi],bh
   14000b681:	je     0x14000b6e8
   14000b683:	jb     0x14000b6f2
   14000b685:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000b68c:	pop    rcx
   14000b68d:	pop    r8
   14000b68f:	pop    rax
   14000b690:	pop    rdx
   14000b691:	add    BYTE PTR [rsi],ah
   14000b693:	add    BYTE PTR [rbx+0x6f],al
   14000b696:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b698:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b6a0:	rex.RB js 0x14000b6a3
   14000b6a3:	add    BYTE PTR [rdi],ah
   14000b6a5:	add    BYTE PTR [rbx+0x6f],al
   14000b6a8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b6aa:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b6b2:	push   rbx
   14000b6b3:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b6b7:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43002400
   14000b6bf:	outs   dx,DWORD PTR ds:[rsi]
   14000b6c0:	rex.WB ins DWORD PTR es:[rdi],dx
   14000b6c2:	jo     0x14000b729
   14000b6c4:	jb     0x14000b739
   14000b6c6:	outs   dx,DWORD PTR ds:[rsi]
   14000b6c7:	outs   dx,BYTE PTR ds:[rsi]
   14000b6c8:	(bad)  
   14000b6c9:	je     0x14000b730
   14000b6cb:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b6cd:	imul   esp,DWORD PTR [rbp+0x6e],0x380074
   14000b6d4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b6d6:	push   rdx
   14000b6d7:	gs jbe 0x14000b73f
   14000b6da:	jb     0x14000b750
   14000b6dc:	push   rsp
   14000b6dd:	outs   dx,DWORD PTR ds:[rsi]
   14000b6de:	push   rbx
   14000b6df:	gs ins BYTE PTR es:[rdi],dx
   14000b6e1:	data16 add BYTE PTR [rax],al
   14000b6e4:	rex.WXB add BYTE PTR [r9+0x73],cl
   14000b6e8:	push   rsi
   14000b6e9:	(bad)  
   14000b6ea:	ins    BYTE PTR es:[rdi],dx
   14000b6eb:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x33000064
   14000b6f3:	add    BYTE PTR [rdi+0x65],al
   14000b6f6:	je     0x14000b744
   14000b6f8:	outs   dx,BYTE PTR gs:[rsi]
   14000b6fa:	addr32 je 0x14000b765
   14000b6fd:	push   rbx
   14000b6fe:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7145002a
   14000b706:	jne    0x14000b769
   14000b708:	ins    BYTE PTR es:[rdi],dx
   14000b709:	push   rbx
   14000b70a:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6c53002d
   14000b712:	gs gs jo 0x14000b716
   14000b716:	lldt   WORD PTR [rbx+0x65]
   14000b71a:	je     0x14000b771
   14000b71c:	outs   dx,BYTE PTR ds:[rsi]
   14000b71d:	push   0x6c646e61
   14000b722:	gs fs rex.RB js 0x14000b78a
   14000b727:	gs jo  0x14000b79e
   14000b72a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b731:	gs jb  0x14000b734
   14000b734:	adc    eax,DWORD PTR [rax]
   14000b736:	rex.RXB
   14000b737:	gs je  0x14000b787
   14000b73a:	outs   dx,DWORD PTR ds:[rsi]
   14000b73b:	fs jne 0x14000b7aa
   14000b73e:	gs rex.W (bad) 
   14000b741:	outs   dx,BYTE PTR ds:[rsi]
   14000b742:	fs ins BYTE PTR es:[rdi],dx
   14000b744:	gs push rdi
   14000b746:	add    BYTE PTR [rax],al
   14000b748:	add    BYTE PTR [rax],al
   14000b74a:	push   rcx
   14000b74b:	jne    0x14000b7b2
   14000b74d:	jb     0x14000b7c8
   14000b74f:	push   rax
   14000b750:	gs jb  0x14000b7b9
   14000b753:	outs   dx,DWORD PTR ds:[rsi]
   14000b754:	jb     0x14000b7c3
   14000b756:	(bad)  
   14000b757:	outs   dx,BYTE PTR ds:[rsi]
   14000b758:	movsxd esp,DWORD PTR [rbp+0x43]
   14000b75b:	outs   dx,DWORD PTR ds:[rsi]
   14000b75c:	jne    0x14000b7cc
   14000b75e:	je     0x14000b7c5
   14000b760:	jb     0x14000b762
   14000b762:	or     eax,0x74654700
   14000b767:	rex.XB jne 0x14000b7dc
   14000b76a:	jb     0x14000b7d1
   14000b76c:	outs   dx,BYTE PTR ds:[rsi]
   14000b76d:	je     0x14000b7bf
   14000b76f:	jb     0x14000b7e0
   14000b771:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b774:	jae    0x14000b7bf
   14000b776:	add    BYTE PTR fs:[rcx],dl
   14000b779:	add    BYTE PTR [rdi+0x65],al
   14000b77c:	je     0x14000b7c1
   14000b77e:	jne    0x14000b7f2
   14000b780:	jb     0x14000b7e7
   14000b782:	outs   dx,BYTE PTR ds:[rsi]
   14000b783:	je     0x14000b7d9
   14000b785:	push   0x64616572
   14000b78a:	rex.WB
   14000b78b:	add    BYTE PTR fs:[rax],al
   14000b78e:	adc    al,0x0
   14000b790:	rex.RXB
   14000b791:	gs je  0x14000b7e7
   14000b794:	jns    0x14000b809
   14000b796:	je     0x14000b7fd
   14000b798:	ins    DWORD PTR es:[rdi],dx
   14000b799:	push   rsp
   14000b79a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000b7a1:	ins    BYTE PTR es:[rdi],dx
   14000b7a2:	gs push rsp
   14000b7a4:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000b7ab:	gs je  0x14000b802
   14000b7ae:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000b7b5:	je     0x14000b7b7
   14000b7b7:	add    BYTE PTR [rdx],al
   14000b7b9:	add    BYTE PTR [rdx+0x74],dl
   14000b7bc:	ins    BYTE PTR es:[rdi],dx
   14000b7bd:	rex.XB (bad) 
   14000b7bf:	jo     0x14000b835
   14000b7c1:	jne    0x14000b835
   14000b7c3:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000b7c6:	outs   dx,BYTE PTR ds:[rsi]
   14000b7c7:	je     0x14000b82e
   14000b7c9:	js     0x14000b83f
   14000b7cb:	add    BYTE PTR [rcx],cl
   14000b7cd:	add    BYTE PTR [rdx+0x74],dl
   14000b7d0:	ins    BYTE PTR es:[rdi],dx
   14000b7d1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b7d3:	outs   dx,DWORD PTR ds:[rsi]
   14000b7d4:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000b7d8:	jne    0x14000b848
   14000b7da:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000b7de:	outs   dx,BYTE PTR ds:[rsi]
   14000b7df:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b7e1:	je     0x14000b855
   14000b7e3:	jns    0x14000b7e5
   14000b7e5:	add    BYTE PTR [rdi],cl
   14000b7e7:	add    BYTE PTR [rdx+0x74],dl
   14000b7ea:	ins    BYTE PTR es:[rdi],dx
   14000b7eb:	push   rsi
   14000b7ec:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000b7f3:	outs   dx,BYTE PTR ds:[rsi]
   14000b7f4:	ja     0x14000b85f
   14000b7f6:	outs   dx,BYTE PTR ds:[rsi]
   14000b7f7:	add    BYTE PTR fs:[rax],al
   14000b7fa:	adc    DWORD PTR [rax],eax
   14000b7fc:	push   rbp
   14000b7fd:	outs   dx,BYTE PTR ds:[rsi]
   14000b7fe:	push   0x6c646e61
   14000b803:	gs fs rex.RB js 0x14000b86b
   14000b808:	gs jo  0x14000b87f
   14000b80b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b812:	gs jb  0x14000b815
   14000b815:	add    BYTE PTR [rax+rax*1],cl
   14000b818:	rex.RXB
   14000b819:	gs je  0x14000b85f
   14000b81c:	jne    0x14000b890
   14000b81e:	jb     0x14000b885
   14000b820:	outs   dx,BYTE PTR ds:[rsi]
   14000b821:	je     0x14000b873
   14000b823:	jb     0x14000b894
   14000b825:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b828:	jae    0x14000b82a
   14000b82a:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000b82f:	ins    DWORD PTR es:[rdi],dx
   14000b830:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b837:	outs   dx,DWORD PTR ds:[rsi]
   14000b838:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b83b:	jae    0x14000b83d
   14000b83d:	add    BYTE PTR [rcx+0x70],ah
   14000b840:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2bb7
   14000b84a:	outs   dx,DWORD PTR ds:[rsi]
   14000b84b:	jb     0x14000b8b2
   14000b84d:	sub    eax,0x2d6d6f63
   14000b852:	ins    BYTE PTR es:[rdi],dx
   14000b853:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31e58a
   14000b859:	fs ins BYTE PTR es:[rdi],dx
   14000b85b:	ins    BYTE PTR es:[rdi],dx
   14000b85c:	add    BYTE PTR [rax],al
   14000b85e:	(bad)  
   14000b85f:	jo     0x14000b8ca
   14000b861:	sub    eax,0x772d736d
   14000b866:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   14000b86d:	jb     0x14000b8d8
   14000b86f:	je     0x14000b8ea
   14000b871:	sub    eax,0x65736162
   14000b876:	sub    eax,0x322d316c
   14000b87b:	sub    eax,0x6c642e30
   14000b880:	ins    BYTE PTR es:[rdi],dx
   14000b881:	add    BYTE PTR [rcx+0x70],ah
   14000b884:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2bfb
   14000b88e:	outs   dx,DWORD PTR ds:[rsi]
   14000b88f:	jb     0x14000b8f6
   14000b891:	sub    eax,0x636e7973
   14000b896:	push   0x2d316c2d
   14000b89b:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64e6d1
   14000b8a1:	ins    BYTE PTR es:[rdi],dx
   14000b8a2:	add    BYTE PTR [rax],al
   14000b8a4:	(bad)  
   14000b8a5:	jo     0x14000b910
   14000b8a7:	sub    eax,0x772d736d
   14000b8ac:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b8b3:	sub    eax,0x6f727265
   14000b8b8:	jb     0x14000b922
   14000b8ba:	(bad)  
   14000b8bb:	outs   dx,BYTE PTR ds:[rsi]
   14000b8bc:	fs ins BYTE PTR es:[rdi],dx
   14000b8be:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000b8c5:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64e6fc
   14000b8cb:	ins    BYTE PTR es:[rdi],dx
   14000b8cc:	add    BYTE PTR [rax],al
   14000b8ce:	(bad)  
   14000b8cf:	jo     0x14000b93a
   14000b8d1:	sub    eax,0x772d736d
   14000b8d6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b8dd:	sub    eax,0x7262696c
   14000b8e2:	(bad)  
   14000b8e3:	jb     0x14000b95e
   14000b8e5:	ins    BYTE PTR es:[rdi],dx
   14000b8e6:	outs   dx,DWORD PTR ds:[rsi]
   14000b8e7:	(bad)  
   14000b8e8:	fs gs jb 0x14000b919
   14000b8ec:	ins    BYTE PTR es:[rdi],dx
   14000b8ed:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30e625
   14000b8f3:	fs ins BYTE PTR es:[rdi],dx
   14000b8f5:	ins    BYTE PTR es:[rdi],dx
   14000b8f6:	add    BYTE PTR [rax],al
   14000b8f8:	(bad)  
   14000b8f9:	jo     0x14000b964
   14000b8fb:	sub    eax,0x772d736d
   14000b900:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b907:	sub    eax,0x666f7270
   14000b90c:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000b914:	sub    eax,0x6c642e30
   14000b919:	ins    BYTE PTR es:[rdi],dx
   14000b91a:	add    BYTE PTR [rax],al
   14000b91c:	(bad)  
   14000b91d:	jo     0x14000b988
   14000b91f:	sub    eax,0x772d736d
   14000b924:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b92b:	sub    eax,0x636f7270
   14000b930:	gs jae 0x14000b9a6
   14000b933:	je     0x14000b99d
   14000b935:	jb     0x14000b99c
   14000b937:	(bad)  
   14000b938:	fs jae 0x14000b968
   14000b93b:	ins    BYTE PTR es:[rdi],dx
   14000b93c:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32e673
   14000b942:	fs ins BYTE PTR es:[rdi],dx
   14000b944:	ins    BYTE PTR es:[rdi],dx
   14000b945:	add    BYTE PTR [rcx+0x70],ah
   14000b948:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2cbf
   14000b952:	outs   dx,DWORD PTR ds:[rsi]
   14000b953:	jb     0x14000b9ba
   14000b955:	sub    eax,0x69737973
   14000b95a:	outs   dx,BYTE PTR ds:[rsi]
   14000b95b:	outs   dx,WORD PTR ds:[rsi]
   14000b95d:	sub    eax,0x322d316c
   14000b962:	sub    eax,0x6c642e31
   14000b967:	ins    BYTE PTR es:[rdi],dx
   14000b968:	add    BYTE PTR [rax],al
   14000b96a:	(bad)  
   14000b96b:	jo     0x14000b9d6
   14000b96d:	sub    eax,0x772d736d
   14000b972:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b979:	sub    eax,0x736c7472
   14000b97e:	jne    0x14000b9f0
   14000b980:	jo     0x14000b9f1
   14000b982:	jb     0x14000b9f8
   14000b984:	sub    eax,0x322d316c
   14000b989:	sub    eax,0x6c642e30
   14000b98e:	ins    BYTE PTR es:[rdi],dx
   14000b98f:	add    BYTE PTR [rbp+0x5f3f3f01],cl
   14000b995:	(bad)  
   14000b996:	rex.XB push r13
   14000b998:	outs   dx,BYTE PTR ds:[rsi]
   14000b999:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000b99d:	gs jb  0x14000ba0e
   14000b9a0:	(bad)  
   14000b9a1:	ins    BYTE PTR es:[rdi],dx
   14000b9a2:	rex
   14000b9a3:	rex
   14000b9a4:	ss rex.X
   14000b9a6:	add    BYTE PTR [rax+0x0],bpl
   14000b9aa:	(bad)  
   14000b9ab:	(bad)  
   14000b9ac:	xor    BYTE PTR [rbx+0x55],al
   14000b9af:	outs   dx,BYTE PTR ds:[rsi]
   14000b9b0:	imul   eax,DWORD PTR [rax+0x40],0x51
   14000b9b4:	rex.RB
   14000b9b5:	rex.B
   14000b9b6:	rex.B
   14000b9b7:	rex push rax
   14000b9b9:	rex.RB
   14000b9ba:	push   r14
   14000b9bc:	rex.XB
   14000b9bd:	imul   r12,QWORD PTR [rsi+0x65],0x746e6f43
   14000b9c5:	jb     0x14000ba36
   14000b9c7:	ins    BYTE PTR es:[rdi],dx
   14000b9c8:	rex
   14000b9c9:	rex push rax
   14000b9cb:	rex.RB
   14000b9cc:	push   r13
   14000b9ce:	rex.WB push r13
   14000b9d0:	outs   dx,BYTE PTR ds:[rsi]
   14000b9d1:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000b9d5:	outs   dx,BYTE PTR ds:[rsi]
   14000b9d6:	rex
   14000b9d7:	rex
   14000b9d8:	rex pop rdx
   14000b9da:	add    BYTE PTR [rax],al
   14000b9dc:	xlat   BYTE PTR ds:[rbx]
   14000b9dd:	add    BYTE PTR [rdi],bh
   14000b9df:	(bad)  
   14000b9e0:	xor    DWORD PTR [rbx+0x55],eax
   14000b9e3:	outs   dx,BYTE PTR ds:[rsi]
   14000b9e4:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000b9e8:	rex.RB
   14000b9e9:	rex.B
   14000b9ea:	rex.B
   14000b9eb:	rex pop rax
   14000b9ed:	pop    rdx
   14000b9ee:	add    BYTE PTR [rax],al
   14000b9f0:	fadd   DWORD PTR [rbx]
   14000b9f2:	(bad)  
   14000b9f3:	push   rcx
   14000b9f4:	jne    0x14000ba5b
   14000b9f6:	jb     0x14000ba71
   14000b9f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b9fa:	je     0x14000ba61
   14000b9fc:	jb     0x14000ba64
   14000b9fe:	(bad)  
   14000b9ff:	movsxd esp,DWORD PTR [rbp+0x40]
   14000ba02:	rex.XB push r13
   14000ba04:	outs   dx,BYTE PTR ds:[rsi]
   14000ba05:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000ba09:	rex.RB
   14000ba0a:	rex.B
   14000ba0b:	rex.B
   14000ba0c:	rex.WX
   14000ba0d:	rex.B
   14000ba0e:	rex.RB
   14000ba0f:	rex.X push rbp
   14000ba11:	pop    rdi
   14000ba12:	rex.RXB push r13
   14000ba14:	rex.WB
   14000ba15:	rex.R
   14000ba16:	rex
   14000ba17:	rex push rax
   14000ba19:	rex.RB
   14000ba1a:	push   r8
   14000ba1c:	rex.RB
   14000ba1d:	pop    r8
   14000ba1f:	rex pop rdx
   14000ba21:	add    ch,ch
   14000ba23:	add    edi,DWORD PTR [rdi]
   14000ba25:	push   rdx
   14000ba26:	gs ins BYTE PTR es:[rdi],dx
   14000ba28:	gs (bad) 
   14000ba2a:	jae    0x14000ba91
   14000ba2c:	rex
   14000ba2d:	rex.XB push r13
   14000ba2f:	outs   dx,BYTE PTR ds:[rsi]
   14000ba30:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000ba34:	rex.RB
   14000ba35:	rex.B
   14000ba36:	rex.B
   14000ba37:	rex.WXB pop r8
   14000ba39:	pop    rdx
   14000ba3a:	add    BYTE PTR [rax],al
   14000ba3c:	mov    esi,0x64413f01
   14000ba41:	fs push rdx
   14000ba43:	gs data16 rex
   14000ba46:	rex.XB push r13
   14000ba48:	outs   dx,BYTE PTR ds:[rsi]
   14000ba49:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000ba4d:	rex.RB
   14000ba4e:	rex.B
   14000ba4f:	rex.B
   14000ba50:	rex.WXB pop r8
   14000ba52:	pop    rdx
   14000ba53:	add    BYTE PTR [rcx+0x3],bl
   14000ba56:	(bad)  
   14000ba57:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ba59:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ba61:	rex
   14000ba62:	rex.XB push r13
   14000ba64:	outs   dx,BYTE PTR ds:[rsi]
   14000ba65:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000ba69:	rex.RB
   14000ba6a:	rex.B
   14000ba6b:	rex.B
   14000ba6c:	rex.W pop rax
   14000ba6e:	pop    rdx
   14000ba6f:	add    dh,ch
   14000ba71:	add    edi,DWORD PTR [rdi]
   14000ba73:	push   rdx
   14000ba74:	gs ins BYTE PTR es:[rdi],dx
   14000ba76:	gs (bad) 
   14000ba78:	jae    0x14000badf
   14000ba7a:	rex
   14000ba7b:	rex.XB push r13
   14000ba7d:	outs   dx,BYTE PTR ds:[rsi]
   14000ba7e:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000ba82:	gs jb  0x14000baf3
   14000ba85:	(bad)  
   14000ba86:	ins    BYTE PTR es:[rdi],dx
   14000ba87:	rex
   14000ba88:	rex push rbp
   14000ba8a:	rex.RB
   14000ba8b:	rex.B
   14000ba8c:	rex.B
   14000ba8d:	rex.WXB pop r8
   14000ba8f:	pop    rdx
   14000ba90:	add    BYTE PTR [rax],al
   14000ba92:	mov    edi,0x64413f01
   14000ba97:	fs push rdx
   14000ba99:	gs data16 rex
   14000ba9c:	rex.XB push r13
   14000ba9e:	outs   dx,BYTE PTR ds:[rsi]
   14000ba9f:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000baa3:	gs jb  0x14000bb14
   14000baa6:	(bad)  
   14000baa7:	ins    BYTE PTR es:[rdi],dx
   14000baa8:	rex
   14000baa9:	rex push rbp
   14000baab:	rex.RB
   14000baac:	rex.B
   14000baad:	rex.B
   14000baae:	rex.WXB pop r8
   14000bab0:	pop    rdx
   14000bab1:	add    cl,bl
   14000bab3:	add    edi,DWORD PTR [rdi]
   14000bab5:	push   rcx
   14000bab6:	jne    0x14000bb1d
   14000bab8:	jb     0x14000bb33
   14000baba:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000babc:	je     0x14000bb23
   14000babe:	jb     0x14000bb26
   14000bac0:	(bad)  
   14000bac1:	movsxd esp,DWORD PTR [rbp+0x40]
   14000bac4:	rex.XB push r13
   14000bac6:	outs   dx,BYTE PTR ds:[rsi]
   14000bac7:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000bacb:	gs jb  0x14000bb3c
   14000bace:	(bad)  
   14000bacf:	ins    BYTE PTR es:[rdi],dx
   14000bad0:	rex
   14000bad1:	rex push rbp
   14000bad3:	rex.RB
   14000bad4:	rex.B
   14000bad5:	rex.B
   14000bad6:	rex.WX
   14000bad7:	rex.B
   14000bad8:	rex.RB
   14000bad9:	rex.X push rbp
   14000badb:	pop    rdi
   14000badc:	rex.RXB push r13
   14000bade:	rex.WB
   14000badf:	rex.R
   14000bae0:	rex
   14000bae1:	rex push rax
   14000bae3:	rex.RB
   14000bae4:	push   r8
   14000bae6:	rex.RB
   14000bae7:	pop    r8
   14000bae9:	rex pop rdx
   14000baeb:	add    al,bl
   14000baed:	add    BYTE PTR [rdi],bh
   14000baef:	(bad)  
   14000baf0:	xor    DWORD PTR [rbx+0x55],eax
   14000baf3:	outs   dx,BYTE PTR ds:[rsi]
   14000baf4:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000baf8:	gs jb  0x14000bb69
   14000bafb:	(bad)  
   14000bafc:	ins    BYTE PTR es:[rdi],dx
   14000bafd:	rex
   14000bafe:	rex push rbp
   14000bb00:	rex.RB
   14000bb01:	rex.B
   14000bb02:	rex.B
   14000bb03:	rex pop rax
   14000bb05:	pop    rdx
   14000bb06:	add    BYTE PTR [rax],al
   14000bb08:	push   0x0
   14000bb0a:	(bad)  
   14000bb0b:	(bad)  
   14000bb0c:	xor    BYTE PTR [rbx+0x55],al
   14000bb0f:	outs   dx,BYTE PTR ds:[rsi]
   14000bb10:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000bb14:	gs jb  0x14000bb85
   14000bb17:	(bad)  
   14000bb18:	ins    BYTE PTR es:[rdi],dx
   14000bb19:	rex
   14000bb1a:	rex push rcx
   14000bb1c:	rex.RB
   14000bb1d:	rex.B
   14000bb1e:	rex.B
   14000bb1f:	rex push rax
   14000bb21:	rex.RB
   14000bb22:	push   r14
   14000bb24:	rex.XB
   14000bb25:	imul   r12,QWORD PTR [rsi+0x65],0x746e6f43
   14000bb2d:	jb     0x14000bb9e
   14000bb2f:	ins    BYTE PTR es:[rdi],dx
   14000bb30:	rex
   14000bb31:	rex
   14000bb32:	rex pop rdx
   14000bb34:	add    BYTE PTR [rax],al
   14000bb36:	mov    edi,0x6e4f3f03
   14000bb3b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bb3d:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bb45:	rex
   14000bb46:	rex.XB push r13
   14000bb48:	outs   dx,BYTE PTR ds:[rsi]
   14000bb49:	imul   eax,DWORD PTR [rax+0x40],0x55
   14000bb4d:	rex.RB
   14000bb4e:	rex.B
   14000bb4f:	rex.B
   14000bb50:	rex.W pop rax
   14000bb52:	pop    rdx
   14000bb53:	add    bl,bh
   14000bb55:	add    al,0x3f
   14000bb57:	pop    rdi
   14000bb58:	push   rsp
   14000bb59:	push   0x4d776f72
   14000bb5e:	gs ins DWORD PTR es:[rdi],dx
   14000bb60:	outs   dx,DWORD PTR ds:[rsi]
   14000bb61:	jb     0x14000bbdc
   14000bb63:	rex.RB js 0x14000bbc9
   14000bb66:	gs jo  0x14000bbdd
   14000bb69:	imul   ebp,DWORD PTR [rdi+0x6e],0x5940405f
   14000bb70:	pop    r8
   14000bb72:	pop    rax
   14000bb73:	pop    rdx
   14000bb74:	add    BYTE PTR [rax],al
   14000bb76:	pop    rbx
   14000bb77:	add    bh,BYTE PTR [rdi]
   14000bb79:	rex.RB jb 0x14000bbee
   14000bb7c:	outs   dx,DWORD PTR ds:[rsi]
   14000bb7d:	jb     0x14000bbd3
   14000bb7f:	jb     0x14000bbe2
   14000bb81:	movsxd esp,DWORD PTR [rbp+0x40]
   14000bb84:	rex pop rcx
   14000bb86:	rex.B
   14000bb87:	rex.W
   14000bb88:	rex.R push rax
   14000bb8a:	rex.RB
   14000bb8b:	rex.X
   14000bb8c:	rex.R pop rdx
   14000bb8e:	pop    rdx
   14000bb8f:	add    BYTE PTR [rax+rax*1+0x3f],dl
   14000bb93:	(bad)  
   14000bb94:	xor    BYTE PTR [rbx+0x4e],al
   14000bb97:	je     0x14000bbec
   14000bb99:	imul   esp,DWORD PTR [rax+rax*2+0x40],0x41414551
   14000bba1:	rex push rdi
   14000bba3:	xor    al,0x53
   14000bba5:	imul   esp,DWORD PTR [rsp+rdx*2+0x79],0x30406570
   14000bbad:	rex
   14000bbae:	rex pop rdx
   14000bbb0:	add    BYTE PTR [rax],al
   14000bbb2:	(bad)  
   14000bbb3:	add    BYTE PTR [rdi],bh
   14000bbb5:	(bad)  
   14000bbb6:	xor    DWORD PTR [rbx+0x4e],eax
   14000bbb9:	je     0x14000bc0e
   14000bbbb:	imul   esp,DWORD PTR [rax+rax*2+0x40],0x41414551
   14000bbc3:	rex pop rax
   14000bbc5:	pop    rdx
   14000bbc6:	add    BYTE PTR [rax],al
   14000bbc8:	cmp    al,BYTE PTR [rcx]
   14000bbca:	(bad)  
   14000bbcb:	(bad)  
   14000bbcc:	cmp    BYTE PTR [rbx+0x4e],al
   14000bbcf:	je     0x14000bc24
   14000bbd1:	imul   esp,DWORD PTR [rax+rax*2+0x40],0x41414551
   14000bbd9:	rex.W
   14000bbda:	rex.B
   14000bbdb:	rex.RB
   14000bbdc:	push   r14
   14000bbde:	xor    BYTE PTR [rax+0x40],al
   14000bbe1:	pop    rdx
   14000bbe2:	add    BYTE PTR [rax],al
   14000bbe4:	sub    DWORD PTR [rbx],eax
   14000bbe6:	(bad)  
   14000bbe7:	rex.RXB
   14000bbe8:	gs je  0x14000bc3f
   14000bbeb:	gs js  0x14000bc62
   14000bbee:	push   rbx
   14000bbef:	imul   esp,DWORD PTR [rax+rax*2+0x43],0x6953744e
   14000bbf7:	fs rex
   14000bbf9:	rex push rcx
   14000bbfb:	rex.RB
   14000bbfc:	rex.B
   14000bbfd:	rex.B
   14000bbfe:	rex.W push rax
   14000bc00:	rex.RB
   14000bc01:	rex.B
   14000bc02:	rex.RXB push r8
   14000bc04:	rex.RB
   14000bc05:	rex.B
   14000bc06:	rex.WXB
   14000bc07:	rex pop rdx
   14000bc09:	add    BYTE PTR [rbx+0x0],dl
   14000bc0c:	(bad)  
   14000bc0d:	(bad)  
   14000bc0e:	xor    BYTE PTR [rbx+0x4e],al
   14000bc11:	je     0x14000bc66
   14000bc13:	imul   esp,DWORD PTR [rax+rax*2+0x40],0x41414551
   14000bc1b:	rex push rax
   14000bc1d:	rex.RB
   14000bc1e:	pop    r8
   14000bc20:	rex pop rdx
   14000bc22:	add    BYTE PTR [rax],al
   14000bc24:	popf   
   14000bc25:	add    BYTE PTR [rdi],bh
   14000bc27:	(bad)  
   14000bc28:	xor    BYTE PTR [rdx+0x65],dl
   14000bc2b:	imul   esi,DWORD PTR [ebx+0x74],0x40407972
   14000bc33:	push   rcx
   14000bc34:	rex.RB
   14000bc35:	rex.B
   14000bc36:	rex.B
   14000bc37:	rex push rax
   14000bc39:	rex.RB
   14000bc3a:	rex.X
   14000bc3b:	rex.RXB
   14000bc3c:	rex.WXB
   14000bc3d:	rex pop rdx
   14000bc3f:	add    ah,ah
   14000bc41:	add    BYTE PTR [rdi],bh
   14000bc43:	(bad)  
   14000bc44:	xor    DWORD PTR [rdx+0x65],edx
   14000bc47:	imul   esi,DWORD PTR [ebx+0x74],0x40407972
   14000bc4f:	push   rcx
   14000bc50:	rex.RB
   14000bc51:	rex.B
   14000bc52:	rex.B
   14000bc53:	rex pop rax
   14000bc55:	pop    rdx
   14000bc56:	add    BYTE PTR [rax],al
   14000bc58:	lahf   
   14000bc59:	add    bh,BYTE PTR [rdi]
   14000bc5b:	rex.RXB
   14000bc5c:	gs je  0x14000bca3
   14000bc5f:	push   rdi
   14000bc60:	rex.WRXB push r10
   14000bc62:	rex.R push rbx
   14000bc64:	je     0x14000bcd8
   14000bc66:	rex push rdx
   14000bc68:	imul   esi,DWORD PTR gs:[ebx+0x74],0x40407972
   14000bc71:	push   rcx
   14000bc72:	rex.RB
   14000bc73:	rex.B
   14000bc74:	rex.B
   14000bc75:	rex.W push rax
   14000bc77:	rex.RB
   14000bc78:	rex.X
   14000bc79:	rex.RXB push r8
   14000bc7b:	rex.RB
   14000bc7c:	rex.B
   14000bc7d:	rex.WXB
   14000bc7e:	rex pop rdx
   14000bc80:	add    BYTE PTR [rax],al
   14000bc82:	push   rcx
   14000bc83:	add    BYTE PTR [rdi],bh
   14000bc85:	(bad)  
   14000bc86:	xor    BYTE PTR [rbx+0x4e],al
   14000bc89:	je     0x14000bcde
   14000bc8b:	imul   esp,DWORD PTR [rax+rax*2+0x40],0x41414551
   14000bc93:	rex
   14000bc94:	rex.B
   14000bc95:	rex.RB
   14000bc96:	rex.X push rsi
   14000bc98:	xor    BYTE PTR [rax+0x40],al
   14000bc9b:	pop    rdx
   14000bc9c:	add    BYTE PTR [rax],al
   14000bc9e:	adc    al,BYTE PTR [rcx]
   14000bca0:	(bad)  
   14000bca1:	(bad)  
   14000bca2:	xor    al,0x43
   14000bca4:	rex.WRX je 0x14000bcfa
   14000bca7:	imul   esp,DWORD PTR [rax+rax*2+0x40],0x41414551
   14000bcaf:	rex.B
   14000bcb0:	rex.RB
   14000bcb1:	push   r14
   14000bcb3:	xor    BYTE PTR [rax+0x41],al
   14000bcb6:	rex.RB
   14000bcb7:	rex.X push rsi
   14000bcb9:	xor    BYTE PTR [rax+0x40],al
   14000bcbc:	pop    rdx
   14000bcbd:	add    bl,al
   14000bcbf:	add    BYTE PTR [rdi],bh
   14000bcc1:	(bad)  
   14000bcc2:	xor    DWORD PTR [rbx+0x49],eax
   14000bcc5:	outs   dx,BYTE PTR ds:[rsi]
   14000bcc6:	rex.XB jb 0x14000bd32
   14000bcc9:	je     0x14000bd1e
   14000bccb:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000bccf:	push   rcx
   14000bcd0:	rex.RB
   14000bcd1:	rex.B
   14000bcd2:	rex.B
   14000bcd3:	rex pop rax
   14000bcd5:	pop    rdx
   14000bcd6:	add    BYTE PTR [rax],al
   14000bcd8:	(bad)  
   14000bcd9:	add    BYTE PTR [rdi],bh
   14000bcdb:	(bad)  
   14000bcdc:	xor    BYTE PTR [rbx+0x49],al
   14000bcdf:	outs   dx,BYTE PTR ds:[rsi]
   14000bce0:	rex.XB jb 0x14000bd4c
   14000bce3:	je     0x14000bd38
   14000bce5:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000bce9:	push   rcx
   14000bcea:	rex.RB
   14000bceb:	rex.B
   14000bcec:	rex.B
   14000bced:	rex push rax
   14000bcef:	rex.RB
   14000bcf0:	push   r13
   14000bcf2:	pop    rdi
   14000bcf3:	push   rdx
   14000bcf4:	push   rsp
   14000bcf5:	rex.WR pop rdi
   14000bcf7:	rex.XB push r10
   14000bcf9:	rex.WB push r12
   14000bcfb:	rex.WB
   14000bcfc:	rex.XB
   14000bcfd:	rex.B
   14000bcfe:	rex.WR pop rdi
   14000bd00:	push   rbx
   14000bd01:	rex.RB
   14000bd02:	rex.XB push r12
   14000bd04:	rex.WB
   14000bd05:	rex.WRXB
   14000bd06:	rex.WRX
   14000bd07:	rex
   14000bd08:	rex
   14000bd09:	rex pop rdx
   14000bd0b:	add    BYTE PTR [rbp+0x313f3f00],dh
   14000bd11:	rex.XB
   14000bd12:	rex.XB jb 0x14000bd7e
   14000bd15:	je     0x14000bd6a
   14000bd17:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000bd1b:	push   rcx
   14000bd1c:	rex.RB
   14000bd1d:	rex.B
   14000bd1e:	rex.B
   14000bd1f:	rex pop rax
   14000bd21:	pop    rdx
   14000bd22:	add    BYTE PTR [rax],al
   14000bd24:	(bad)  
   14000bd25:	add    BYTE PTR [rdi],bh
   14000bd27:	(bad)  
   14000bd28:	xor    BYTE PTR [rbx+0x43],al
   14000bd2b:	jb     0x14000bd96
   14000bd2d:	je     0x14000bd82
   14000bd2f:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14000bd33:	push   rcx
   14000bd34:	rex.RB
   14000bd35:	rex.B
   14000bd36:	rex.B
   14000bd37:	rex pop rax
   14000bd39:	pop    rdx
   14000bd3a:	add    BYTE PTR [rax],al
   14000bd3c:	in     al,dx
   14000bd3d:	add    al,0x3f
   14000bd3f:	push   rdi
   14000bd40:	jb     0x14000bdab
   14000bd42:	je     0x14000bda9
   14000bd44:	rex
   14000bd45:	rex.XB
   14000bd46:	rex.WRB
   14000bd47:	gs ins DWORD PTR es:[rdi],dx
   14000bd49:	outs   dx,DWORD PTR ds:[rsi]
   14000bd4a:	jb     0x14000bdc5
   14000bd4c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000bd4e:	addr32 rex
   14000bd50:	rex push rcx
   14000bd52:	rex.RB
   14000bd53:	rex.B
   14000bd54:	pop    r8
   14000bd56:	rex.WX
   14000bd57:	rex pop rdx
   14000bd59:	add    dl,dl
   14000bd5b:	add    bh,BYTE PTR [rdi]
   14000bd5d:	rex.RXB
   14000bd5e:	gs je  0x14000bdae
   14000bd61:	gs ins DWORD PTR es:[rdi],dx
   14000bd63:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000bd65:	addr32 rex.WRXB (bad) 
   14000bd68:	push   0x65
   14000bd6a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14000bd6e:	pop    rcx
   14000bd6f:	push   r8
   14000bd71:	rex.RB
   14000bd72:	push   r14
   14000bd74:	rex.XB
   14000bd75:	rex.WRB
   14000bd76:	gs ins DWORD PTR es:[rdi],dx
   14000bd78:	outs   dx,DWORD PTR ds:[rsi]
   14000bd79:	jb     0x14000bdf4
   14000bd7b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000bd7d:	addr32 rex
   14000bd7f:	rex pop rax
   14000bd81:	pop    rdx
   14000bd82:	add    BYTE PTR [rax],al
   14000bd84:	movsxd eax,DWORD PTR [rbx]
   14000bd86:	(bad)  
   14000bd87:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bd89:	je     0x14000bdf0
   14000bd8b:	jb     0x14000bdfb
   14000bd8d:	(bad)  
   14000bd8e:	ins    BYTE PTR es:[rdi],dx
   14000bd8f:	push   rdx
   14000bd90:	gs ins BYTE PTR es:[rdi],dx
   14000bd92:	gs (bad) 
   14000bd94:	jae    0x14000bdfb
   14000bd96:	rex
   14000bd97:	rex.XB push r13
   14000bd99:	outs   dx,BYTE PTR ds:[rsi]
   14000bd9a:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000bd9e:	gs jb  0x14000be0f
   14000bda1:	(bad)  
   14000bda2:	ins    BYTE PTR es:[rdi],dx
   14000bda3:	rex
   14000bda4:	rex push rcx
   14000bda6:	rex.RB
   14000bda7:	rex.B
   14000bda8:	rex.B
   14000bda9:	rex.WXB pop r8
   14000bdab:	pop    rdx
   14000bdac:	add    BYTE PTR [rax],al
   14000bdae:	(bad)  
   14000bdaf:	add    edi,DWORD PTR [rdi]
   14000bdb1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bdb3:	je     0x14000be1a
   14000bdb5:	jb     0x14000be25
   14000bdb7:	(bad)  
   14000bdb8:	ins    BYTE PTR es:[rdi],dx
   14000bdb9:	push   rcx
   14000bdba:	jne    0x14000be21
   14000bdbc:	jb     0x14000be37
   14000bdbe:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bdc0:	je     0x14000be27
   14000bdc2:	jb     0x14000be2a
   14000bdc4:	(bad)  
   14000bdc5:	movsxd esp,DWORD PTR [rbp+0x40]
   14000bdc8:	rex.XB push r13
   14000bdca:	outs   dx,BYTE PTR ds:[rsi]
   14000bdcb:	imul   ecx,DWORD PTR [rcx+0x6e],0x74
   14000bdcf:	gs jb  0x14000be40
   14000bdd2:	(bad)  
   14000bdd3:	ins    BYTE PTR es:[rdi],dx
   14000bdd4:	rex
   14000bdd5:	rex push rcx
   14000bdd7:	rex.RB
   14000bdd8:	rex.B
   14000bdd9:	rex.B
   14000bdda:	rex.WX
   14000bddb:	rex.B
   14000bddc:	rex.RB
   14000bddd:	rex.X push rbp
   14000bddf:	pop    rdi
   14000bde0:	rex.RXB push r13
   14000bde2:	rex.WB
   14000bde3:	rex.R
   14000bde4:	rex
   14000bde5:	rex push rax
   14000bde7:	rex.RB
   14000bde8:	push   r8
   14000bdea:	rex.RB
   14000bdeb:	pop    r8
   14000bded:	rex pop rdx
   14000bdef:	add    BYTE PTR [rdi+0x62],dh
   14000bdf2:	gs ins DWORD PTR es:[rdi],dx
   14000bdf4:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000bdf7:	outs   dx,BYTE PTR ds:[rsi]
   14000bdf8:	cs fs ins BYTE PTR es:[rdi],dx
   14000bdfb:	ins    BYTE PTR es:[rdi],dx
   14000bdfc:	add    BYTE PTR [rax],al
   14000bdfe:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000be04:	ja     0x14000be76
   14000be06:	jb     0x14000be71
   14000be08:	outs   dx,BYTE PTR ds:[rsi]
   14000be09:	je     0x14000be71
   14000be0b:	add    BYTE PTR [rax*1+0x73736377],dl
   14000be12:	je     0x14000be86
   14000be14:	add    BYTE PTR [rax],al
   14000be16:	popf   
   14000be17:	add    al,0x70
   14000be19:	jb     0x14000be84
   14000be1b:	outs   dx,BYTE PTR ds:[rsi]
   14000be1c:	je     0x14000be84
   14000be1e:	add    BYTE PTR [rax],al
   14000be20:	sbb    DWORD PTR [rax],eax
   14000be22:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000be24:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000be2c:	rex.XB jb 0x14000be98
   14000be2f:	je     0x14000be9a
   14000be31:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000be34:	push   rbx
   14000be35:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000be3a:	outs   dx,BYTE PTR ds:[rsi]
   14000be3b:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000be3d:	fs push rbx
   14000be3f:	jo     0x14000beaa
   14000be41:	outs   dx,BYTE PTR ds:[rsi]
   14000be42:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000be44:	jne    0x14000beb4
   14000be46:	je     0x14000be48
   14000be48:	sldt   WORD PTR [rbp+riz*2+0x6c]
   14000be4d:	gs je  0x14000beb5
   14000be50:	rex.XB jb 0x14000bebc
   14000be53:	je     0x14000bebe
   14000be55:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000be58:	push   rbx
   14000be59:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000be5e:	outs   dx,BYTE PTR ds:[rsi]
   14000be5f:	add    BYTE PTR [rcx],dl
   14000be61:	add    BYTE PTR [rbp+0x6e],al
   14000be64:	je     0x14000becb
   14000be66:	jb     0x14000beab
   14000be68:	jb     0x14000bed3
   14000be6a:	je     0x14000bed5
   14000be6c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000be6f:	push   rbx
   14000be70:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000be75:	outs   dx,BYTE PTR ds:[rsi]
   14000be76:	add    BYTE PTR [rax],al
   14000be78:	sbb    eax,0x61654c00
   14000be7d:	jbe    0x14000bee4
   14000be7f:	rex.XB jb 0x14000beeb
   14000be82:	je     0x14000beed
   14000be84:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000be87:	push   rbx
   14000be88:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000be8d:	outs   dx,BYTE PTR ds:[rsi]
   14000be8e:	add    BYTE PTR [rax],al
   14000be90:	add    al,0x0
   14000be92:	rex.R
   14000be93:	gs (bad) 
   14000be95:	jne    0x14000befe
   14000be97:	rex.X jb 0x14000beff
   14000be9a:	(bad)  
   14000be9b:	imul   eax,DWORD PTR [rax],0x0
   14000be9e:	push   rax
   14000be9f:	add    BYTE PTR [rbx+0x74],dl
   14000bea2:	jb     0x14000bf0d
   14000bea4:	outs   dx,BYTE PTR ds:[rsi]
   14000bea5:	addr32 rex.RX jb 0x14000bf18
   14000bea9:	ins    DWORD PTR es:[rdi],dx
   14000beaa:	rex.RXB push r13
   14000beac:	rex.WB
   14000bead:	xor    r8b,BYTE PTR [rax]
   14000beb0:	sldt   WORD PTR [rdi+0x65]
   14000beb4:	je     0x14000bf03
   14000beb6:	outs   dx,DWORD PTR ds:[rsi]
   14000beb7:	fs jne 0x14000bf26
   14000beba:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000bec4:	add    BYTE PTR [rax],al
   14000bec6:	xor    al,BYTE PTR [rax]
   14000bec8:	rex.WR
   14000bec9:	rex.XB
   14000beca:	rex.WRB (bad) 
   14000becc:	jo     0x14000bf21
   14000bece:	je     0x14000bf42
   14000bed0:	imul   ebp,DWORD PTR [rsi+0x67],0x6000057
   14000bed7:	add    BYTE PTR [rbx+0x65],dl
   14000beda:	je     0x14000bf2f
   14000bedc:	gs jb  0x14000bf55
   14000bedf:	imul   esp,DWORD PTR [rbx+0x65],0x74617453
   14000bee6:	jne    0x14000bf5b
   14000bee8:	add    BYTE PTR [rax],al
   14000beea:	add    eax,0x74654700
   14000beef:	rex.WR (bad) 
   14000bef1:	jae    0x14000bf67
   14000bef3:	rex.RB jb 0x14000bf68
   14000bef6:	outs   dx,DWORD PTR ds:[rsi]
   14000bef7:	jb     0x14000bef9
   14000bef9:	add    BYTE PTR [rcx],ch
   14000befb:	add    BYTE PTR [rbx+0x65],dl
   14000befe:	je     0x14000bf45
   14000bf00:	jbe    0x14000bf67
   14000bf02:	outs   dx,BYTE PTR ds:[rsi]
   14000bf03:	je     0x14000bf05
   14000bf05:	add    BYTE PTR [rax],cl
   14000bf07:	add    BYTE PTR [rbp+0x78],al
   14000bf0a:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14000bf12:	jae    0x14000bf14
   14000bf14:	(bad)  
   14000bf15:	add    BYTE PTR [rbx+0x72],al
   14000bf18:	gs (bad) 
   14000bf1a:	je     0x14000bf81
   14000bf1c:	rex.RB jbe 0x14000bf84
   14000bf1f:	outs   dx,BYTE PTR ds:[rsi]
   14000bf20:	je     0x14000bf79
   14000bf22:	add    BYTE PTR [rax],al
   14000bf24:	or     eax,0x67655200
   14000bf29:	imul   esi,DWORD PTR [rbx+0x74],0x65537265
   14000bf30:	jb     0x14000bfa8
   14000bf32:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   14000bf39:	rex.W (bad) 
   14000bf3b:	outs   dx,BYTE PTR ds:[rsi]
   14000bf3c:	fs ins BYTE PTR es:[rdi],dx
   14000bf3e:	gs jb  0x14000bf98
   14000bf41:	add    BYTE PTR [rdi],al
   14000bf43:	add    BYTE PTR [rbx+0x74],dl
   14000bf46:	(bad)  
   14000bf47:	jb     0x14000bfbd
   14000bf49:	push   rbx
   14000bf4a:	gs jb  0x14000bfc3
   14000bf4d:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   14000bf54:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000bf5c:	gs jb  0x14000bfb6
   14000bf5f:	add    BYTE PTR [rax+rax*1],al
   14000bf62:	rex.WRXB jo 0x14000bfca
   14000bf65:	outs   dx,BYTE PTR ds:[rsi]
   14000bf66:	push   rbx
   14000bf67:	rex.XB
   14000bf68:	rex.WRB (bad) 
   14000bf6a:	outs   dx,BYTE PTR ds:[rsi]
   14000bf6b:	(bad)  
   14000bf6c:	addr32 gs jb 0x14000bfc7
   14000bf70:	add    BYTE PTR [rax],al
   14000bf72:	add    al,BYTE PTR [rax]
   14000bf74:	rex.XB jb 0x14000bfdc
   14000bf77:	(bad)  
   14000bf78:	je     0x14000bfdf
   14000bf7a:	push   rbx
   14000bf7b:	gs jb  0x14000bff4
   14000bf7e:	imul   esp,DWORD PTR [rbx+0x65],0x5000057
   14000bf85:	add    BYTE PTR [rdi+0x70],cl
   14000bf88:	outs   dx,BYTE PTR gs:[rsi]
   14000bf8a:	push   rbx
   14000bf8b:	gs jb  0x14000c004
   14000bf8e:	imul   esp,DWORD PTR [rbx+0x65],0x3000057
   14000bf95:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000bf99:	gs je  0x14000c001
   14000bf9c:	push   rbx
   14000bf9d:	gs jb  0x14000c016
   14000bfa0:	imul   esp,DWORD PTR [rbx+0x65],0x47000500
   14000bfa7:	gs je  0x14000bfed
   14000bfaa:	outs   dx,DWORD PTR ds:[rsi]
   14000bfab:	ins    DWORD PTR es:[rdi],dx
   14000bfac:	ins    DWORD PTR es:[rdi],dx
   14000bfad:	(bad)  
   14000bfae:	outs   dx,BYTE PTR ds:[rsi]
   14000bfaf:	imul   r13,QWORD PTR fs:[rsi+0x65],0x320057
   14000bfb8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bfba:	push   rdx
   14000bfbb:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000bfc4:	(bad)  
   14000bfc5:	jae    0x14000c03a
   14000bfc7:	rex.WRXB (bad) 
   14000bfc9:	push   0x65
   14000bfcb:	movsxd esi,DWORD PTR [rax+rax*1+0x39]
   14000bfcf:	add    BYTE PTR [rbx+0x6f],al
   14000bfd2:	push   rdx
   14000bfd3:	gs jbe 0x14000c045
   14000bfd6:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000bfda:	(bad)  
   14000bfdb:	jae    0x14000c050
   14000bfdd:	rex.WRXB (bad) 
   14000bfdf:	push   0x65
   14000bfe1:	movsxd esi,DWORD PTR [rax+rax*1+0x61]
   14000bfe5:	jo     0x14000c050
   14000bfe7:	sub    eax,0x772d736d
   14000bfec:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000bff3:	sub    eax,0x75626564
   14000bff8:	addr32 sub eax,0x312d316c
   14000bffe:	sub    eax,0x6c642e31
   14000c003:	ins    BYTE PTR es:[rdi],dx
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	(bad)  
   14000c007:	jo     0x14000c072
   14000c009:	sub    eax,0x772d736d
   14000c00e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c015:	sub    eax,0x61636f6c
   14000c01a:	ins    BYTE PTR es:[rdi],dx
   14000c01b:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000c022:	sub    eax,0x322d316c
   14000c027:	sub    eax,0x6c642e31
   14000c02c:	ins    BYTE PTR es:[rdi],dx
   14000c02d:	add    BYTE PTR [rcx+0x70],ah
   14000c030:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e33a7
   14000c03a:	gs jb  0x14000c0b3
   14000c03d:	imul   esp,DWORD PTR [rbx+0x65],0x726f632d
   14000c044:	gs sub eax,0x312d316c
   14000c04a:	sub    eax,0x6c642e31
   14000c04f:	ins    BYTE PTR es:[rdi],dx
   14000c050:	add    BYTE PTR [rax],al
   14000c052:	(bad)  
   14000c053:	jo     0x14000c0be
   14000c055:	sub    eax,0x772d736d
   14000c05a:	imul   ebp,DWORD PTR [rsi+0x2d],0x76726573
   14000c061:	imul   esp,DWORD PTR [rbx+0x65],0x6e69772d
   14000c068:	jae    0x14000c0e0
   14000c06a:	movsxd ebp,DWORD PTR [rip+0x322d316c]        # 0x1722df1dc
   14000c070:	sub    eax,0x6c642e30
   14000c075:	ins    BYTE PTR es:[rdi],dx
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	(bad)  
   14000c079:	jo     0x14000c0e4
   14000c07b:	sub    eax,0x772d736d
   14000c080:	imul   ebp,DWORD PTR [rsi+0x2d],0x76726573
   14000c087:	imul   esp,DWORD PTR [rbx+0x65],0x6e616d2d
   14000c08e:	(bad)  
   14000c08f:	gs ins DWORD PTR es:[edi],dx
   14000c092:	outs   dx,BYTE PTR gs:[rsi]
   14000c094:	je     0x14000c0c3
   14000c096:	ins    BYTE PTR es:[rdi],dx
   14000c097:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30edce
   14000c09d:	fs ins BYTE PTR es:[rdi],dx
   14000c09f:	ins    BYTE PTR es:[rdi],dx
   14000c0a0:	add    BYTE PTR [rax],al
   14000c0a2:	(bad)  
   14000c0a3:	jo     0x14000c10e
   14000c0a5:	sub    eax,0x772d736d
   14000c0aa:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c0b1:	sub    eax,0x636f7270
   14000c0b6:	gs jae 0x14000c12c
   14000c0b9:	outs   dx,BYTE PTR gs:[rsi]
   14000c0bb:	jbe    0x14000c126
   14000c0bd:	jb     0x14000c12e
   14000c0bf:	outs   dx,BYTE PTR ds:[rsi]
   14000c0c0:	ins    DWORD PTR es:[rdi],dx
   14000c0c1:	outs   dx,BYTE PTR gs:[rsi]
   14000c0c3:	je     0x14000c0f2
   14000c0c5:	ins    BYTE PTR es:[rdi],dx
   14000c0c6:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30edfe
   14000c0cc:	fs ins BYTE PTR es:[rdi],dx
   14000c0ce:	ins    BYTE PTR es:[rdi],dx
   14000c0cf:	add    BYTE PTR [rdx+0x0],dl
   14000c0d2:	rex.RB je 0x14000c14c
   14000c0d5:	push   rsp
   14000c0d6:	jb     0x14000c139
   14000c0d8:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000c0db:	gs jae 0x14000c151
   14000c0de:	(bad)  
   14000c0df:	add    BYTE PTR gs:[esi+0x0],al
   14000c0e4:	rex.RB je 0x14000c15e
   14000c0e7:	rex.RXB
   14000c0e8:	gs je  0x14000c13f
   14000c0eb:	jb     0x14000c14e
   14000c0ed:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c0f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c0f1:	addr32 addr32 gs jb 0x14000c13e
   14000c0f6:	(bad)  
   14000c0f7:	outs   dx,BYTE PTR ds:[rsi]
   14000c0f8:	fs ins BYTE PTR es:[rdi],dx
   14000c0fa:	add    BYTE PTR gs:[rbp+0x0],al
   14000c0fe:	rex.RB je 0x14000c178
   14000c101:	rex.RXB
   14000c102:	gs je  0x14000c159
   14000c105:	jb     0x14000c168
   14000c107:	movsxd esp,DWORD PTR [rbp+0x45]
   14000c10a:	outs   dx,BYTE PTR ds:[rsi]
   14000c10b:	(bad)  
   14000c10c:	(bad)  
   14000c10d:	ins    BYTE PTR es:[rdi],dx
   14000c10e:	gs rex.WR
   14000c110:	gs jbe 0x14000c178
   14000c113:	ins    BYTE PTR es:[rdi],dx
   14000c114:	add    BYTE PTR [rax],al
   14000c116:	add    BYTE PTR [rbp+0x74],r8b
   14000c11a:	ja     0x14000c163
   14000c11c:	gs je  0x14000c173
   14000c11f:	jb     0x14000c182
   14000c121:	movsxd esp,DWORD PTR [rbp+0x45]
   14000c124:	outs   dx,BYTE PTR ds:[rsi]
   14000c125:	(bad)  
   14000c126:	(bad)  
   14000c127:	ins    BYTE PTR es:[rdi],dx
   14000c128:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000c12b:	(bad)  
   14000c12c:	addr32 jae 0x14000c12f
   14000c12f:	add    BYTE PTR [rbp+0x0],cl
   14000c132:	rex.RB je 0x14000c1ac
   14000c135:	push   rdx
   14000c136:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000c13f:	(bad)  
   14000c140:	movsxd esp,DWORD PTR [rbp+0x47]
   14000c143:	jne    0x14000c1ae
   14000c145:	fs jae 0x14000c19f
   14000c148:	add    BYTE PTR [rax],al
   14000c14a:	push   rsp
   14000c14b:	add    BYTE PTR [rbp+0x74],al
   14000c14e:	ja     0x14000c1a5
   14000c150:	outs   dx,BYTE PTR ds:[rsi]
   14000c151:	jb     0x14000c1b8
   14000c153:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000c15b:	(bad)  
   14000c15c:	movsxd esp,DWORD PTR [rbp+0x47]
   14000c15f:	jne    0x14000c1ca
   14000c161:	fs jae 0x14000c164
   14000c164:	outs   dx,BYTE PTR ds:[rsi]
   14000c165:	je     0x14000c1cb
   14000c167:	ins    BYTE PTR es:[rdi],dx
   14000c168:	ins    BYTE PTR es:[rdi],dx
   14000c169:	cs fs ins BYTE PTR es:[rdi],dx
   14000c16c:	ins    BYTE PTR es:[rdi],dx
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    BYTE PTR [rcx+0x70],al
   14000c172:	imul   edx,DWORD PTR [rbx+0x65],0x65755174
   14000c179:	jb     0x14000c1f4
   14000c17b:	rex.B jo 0x14000c1e7
   14000c17e:	push   rbx
   14000c17f:	gs je  0x14000c1d2
   14000c182:	jb     0x14000c1e9
   14000c184:	jae    0x14000c1eb
   14000c186:	outs   dx,BYTE PTR ds:[rsi]
   14000c187:	movsxd esp,DWORD PTR [rbp+0x0]
   14000c18a:	(bad)  
   14000c18b:	jo     0x14000c1f6
   14000c18d:	sub    eax,0x772d736d
   14000c192:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c199:	sub    eax,0x71697061
   14000c19e:	jne    0x14000c205
   14000c1a0:	jb     0x14000c21b
   14000c1a2:	sub    eax,0x312d316c
   14000c1a7:	sub    eax,0x6c642e30
   14000c1ac:	ins    BYTE PTR es:[rdi],dx
   14000c1ad:	add    BYTE PTR [rdi],dl
   14000c1af:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000c1b3:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000c1bc:	js     0x14000c215
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	adc    al,0x0
   14000c1c2:	rex.RXB
   14000c1c3:	gs je  0x14000c216
   14000c1c6:	jb     0x14000c237
   14000c1c8:	movsxd eax,DWORD PTR [rcx+0x64]
   14000c1cb:	fs jb  0x14000c233
   14000c1ce:	jae    0x14000c243
   14000c1d0:	add    BYTE PTR [rax],al
   14000c1d2:	add    DWORD PTR [rax],eax
   14000c1d4:	push   rdx
   14000c1d5:	gs jae 0x14000c247
   14000c1d8:	ins    BYTE PTR es:[rdi],dx
   14000c1d9:	jbe    0x14000c240
   14000c1db:	rex.R
   14000c1dc:	gs ins BYTE PTR es:[rdi],dx
   14000c1de:	(bad)  
   14000c1df:	jns    0x14000c22d
   14000c1e1:	outs   dx,DWORD PTR ds:[rsi]
   14000c1e2:	(bad)  
   14000c1e3:	fs gs fs push r8
   14000c1e8:	rex.WB add BYTE PTR [r8],al
   14000c1eb:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000c1ef:	(bad)  
   14000c1f0:	jns    0x14000c23e
   14000c1f2:	outs   dx,DWORD PTR ds:[rsi]
   14000c1f3:	(bad)  
   14000c1f4:	fs rex.RX (bad) 
   14000c1f7:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000c1ff:	imul   eax,DWORD PTR [rax],0x0
   14000c202:	(bad)  
   14000c203:	jo     0x14000c26e
   14000c205:	sub    eax,0x772d736d
   14000c20a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c211:	sub    eax,0x616c6564
   14000c216:	jns    0x14000c284
   14000c218:	outs   dx,DWORD PTR ds:[rsi]
   14000c219:	(bad)  
   14000c21a:	fs sub eax,0x312d316c
   14000c220:	sub    eax,0x6c642e31
   14000c225:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

000000014000d000 <.data>:
   14000d000:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	int    0x5d
   14000d00a:	and    dl,dl
   14000d00c:	data16 (bad) 
   14000d00e:	(bad)  
   14000d00f:	inc    DWORD PTR [rcx]
	...
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rax-0x75],bh
   14000d022:	add    BYTE PTR [rax+0x1],al
   14000d025:	add    BYTE PTR [rax],al
   14000d027:	add    bh,bh
   14000d029:	(bad)  
   14000d02a:	(bad)  
   14000d02b:	inc    DWORD PTR [rax]
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    BYTE PTR [rax],dh
   14000d031:	rol    BYTE PTR [rax],1
   14000d033:	rex add DWORD PTR [rax],eax
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	xor    al,dl
   14000d03a:	add    BYTE PTR [rax+0x1],al
   14000d03d:	add    BYTE PTR [rax],al
   14000d03f:	add    BYTE PTR [rax-0x30],al
   14000d042:	add    BYTE PTR [rax+0x1],al
   14000d045:	add    BYTE PTR [rax],al
   14000d047:	add    BYTE PTR [rax-0x77],dh
   14000d04a:	add    BYTE PTR [rax+0x1],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    al,bh
   14000d051:	mov    al,BYTE PTR [rax]
   14000d053:	rex add DWORD PTR [rax],eax
	...
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	and    BYTE PTR [rdi+0x14000],al
	...
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	cs (bad) 
   14000d09a:	push   r14
   14000d09c:	outs   dx,DWORD PTR ds:[rsi]
   14000d09d:	jne    0x14000d113
   14000d09f:	pop    rdi
   14000d0a0:	outs   dx,DWORD PTR ds:[rsi]
   14000d0a1:	pop    di
   14000d0a3:	jb     0x14000d106
   14000d0a5:	outs   dx,BYTE PTR ds:[rsi]
   14000d0a6:	addr32 gs rex jae 0x14000d11f
   14000d0ab:	fs rex
   14000d0ad:	add    BYTE PTR [rax],al
   14000d0b0:	and    BYTE PTR [rdi+0x14000],al
	...
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	cs (bad) 
   14000d0c2:	push   r14
   14000d0c4:	rex.XB pop r8
   14000d0c6:	pop    rdi
   14000d0c7:	rex.WRB
   14000d0c8:	gs ins DWORD PTR es:[rdi],dx
   14000d0ca:	outs   dx,DWORD PTR ds:[rsi]
   14000d0cb:	jb     0x14000d146
   14000d0cd:	rex.RB js 0x14000d133
   14000d0d0:	gs jo  0x14000d147
   14000d0d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	add    BYTE PTR [rax],al
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	and    BYTE PTR [rdi+0x14000],al
	...
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	cs (bad) 
   14000d0f2:	push   r14
   14000d0f4:	push   rbx
   14000d0f5:	(bad)  
   14000d0f6:	data16 rex.WB outs dx,BYTE PTR gs:[rsi]
   14000d0fa:	je     0x14000d141
   14000d0fc:	js     0x14000d161
   14000d0fe:	gs jo  0x14000d175
   14000d101:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14000d108:	and    BYTE PTR [rdi+0x14000],al
	...
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	cs (bad) 
   14000d11a:	push   r14
   14000d11c:	ins    BYTE PTR es:[rdi],dx
   14000d11d:	outs   dx,BYTE PTR gs:[rsi]
   14000d11f:	addr32 je 0x14000d18a
   14000d122:	pop    rdi
   14000d123:	gs jb  0x14000d198
   14000d126:	outs   dx,DWORD PTR ds:[rsi]
   14000d127:	jb     0x14000d169
   14000d129:	jae    0x14000d19f
   14000d12b:	fs rex
   14000d12d:	add    BYTE PTR [rax],al
   14000d130:	and    BYTE PTR [rdi+0x14000],al
	...
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	cs (bad) 
   14000d142:	push   r14
   14000d144:	ins    BYTE PTR es:[rdi],dx
   14000d145:	outs   dx,DWORD PTR ds:[rsi]
   14000d146:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000d14e:	jb     0x14000d190
   14000d150:	jae    0x14000d1c6
   14000d152:	fs rex
   14000d154:	add    BYTE PTR [rax],al
   14000d157:	add    BYTE PTR [rax],ah
   14000d159:	xchg   DWORD PTR [rax],eax
   14000d15b:	rex add DWORD PTR [rax],eax
	...
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	cs (bad) 
   14000d16a:	push   r14
   14000d16c:	(bad)
   14000d171:	ins    BYTE PTR es:[rdi],dx
   14000d172:	ins    BYTE PTR es:[rdi],dx
   14000d173:	outs   dx,DWORD PTR ds:[rsi]
   14000d174:	movsxd eax,DWORD PTR [rax+0x73]
   14000d177:	je     0x14000d1dd
   14000d179:	rex
   14000d17a:	add    BYTE PTR [rax],al
   14000d17d:	add    BYTE PTR [rax],al
   14000d17f:	add    BYTE PTR [rax],ah
   14000d181:	xchg   DWORD PTR [rax],eax
   14000d183:	rex add DWORD PTR [rax],eax
	...
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	cs (bad) 
   14000d192:	push   r14
   14000d194:	gs js  0x14000d1fa
   14000d197:	gs jo  0x14000d20e
   14000d19a:	imul   ebp,DWORD PTR [rdi+0x6e],0x20004040
   14000d1a1:	xchg   DWORD PTR [rax],eax
   14000d1a3:	rex add DWORD PTR [rax],eax
	...
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	cs (bad) 
   14000d1b2:	push   r14
   14000d1b4:	rex.XB pop r8
   14000d1b6:	pop    rdi
   14000d1b7:	rex.RB js 0x14000d21d
   14000d1ba:	gs jo  0x14000d231
   14000d1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
	...

Disassembly of section .pdata:

000000014000e000 <.pdata>:
   14000e000:	adc    BYTE PTR [rax],dl
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	push   rcx
   14000e005:	adc    BYTE PTR [rax],al
   14000e007:	add    BYTE PTR [rax+0x7000009d],dh
   14000e00d:	adc    BYTE PTR [rax],al
   14000e00f:	add    dl,dl
   14000e011:	adc    BYTE PTR [rax],al
   14000e013:	add    BYTE PTR [rax-0x66],ah
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	loopne 0x14000e02a
   14000e01a:	add    BYTE PTR [rax],al
   14000e01c:	(bad)  
   14000e01d:	adc    DWORD PTR [rax],eax
   14000e01f:	add    BYTE PTR [rax-0x66],bh
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	(bad)  
   14000e025:	adc    DWORD PTR [rax],eax
   14000e027:	add    BYTE PTR [rcx-0x77ffffef],ch
   14000e02d:	(bad)  
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	mov    al,0x11
   14000e032:	add    BYTE PTR [rax],al
   14000e034:	rcl    BYTE PTR [rcx],1
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	enter  0x9a,0x0
   14000e03c:	fcom   DWORD PTR [rcx]
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	or     edx,DWORD PTR [rdx]
   14000e042:	add    BYTE PTR [rax],al
   14000e044:	call   0x18000e0e3
   14000e049:	adc    al,BYTE PTR [rax]
   14000e04b:	add    BYTE PTR [rbx+0x28000012],ah
   14000e051:	fwait
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	lods   al,BYTE PTR ds:[rsi]
   14000e055:	adc    al,BYTE PTR [rax]
   14000e057:	add    ah,cl
   14000e059:	adc    al,BYTE PTR [rax]
   14000e05b:	add    BYTE PTR [rax-0x65],bh
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	loopne 0x14000e074
   14000e062:	add    BYTE PTR [rax],al
   14000e064:	xor    BYTE PTR [rbx],dl
   14000e066:	add    BYTE PTR [rax],al
   14000e068:	cwde   
   14000e069:	fwait
   14000e06a:	add    BYTE PTR [rax],al
   14000e06c:	rex adc eax,DWORD PTR [rax]
   14000e06f:	add    BYTE PTR [rdx],dl
   14000e071:	adc    al,0x0
   14000e073:	add    BYTE PTR [rax+0x3000009b],ah
   14000e079:	adc    al,0x0
   14000e07b:	add    BYTE PTR [rax+0x38000014],al
   14000e081:	pushf  
   14000e082:	add    BYTE PTR [rax],al
   14000e084:	nop
   14000e085:	adc    al,0x0
   14000e087:	add    cl,al
   14000e089:	adc    al,0x0
   14000e08b:	add    BYTE PTR [rsp+rbx*4+0x0],cl
   14000e08f:	add    al,dl
   14000e091:	adc    al,0x0
   14000e093:	add    BYTE PTR [rcx],al
   14000e095:	adc    eax,0x9c4c0000
   14000e09a:	add    BYTE PTR [rax],al
   14000e09c:	and    BYTE PTR [rip+0x157b0000],dl        # 0x1557be0a2
   14000e0a2:	add    BYTE PTR [rax],al
   14000e0a4:	cmp    BYTE PTR [rax+rax*1+0x159000],bl
   14000e0ab:	add    ah,cl
   14000e0ad:	adc    eax,0x9c4c0000
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	loopne 0x14000e0cb
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	sbb    al,0x16
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	rex.WR pushf 
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	xor    BYTE PTR [rsi],dl
   14000e0c2:	add    BYTE PTR [rax],al
   14000e0c4:	mov    edi,0x58000017
   14000e0c9:	pushf  
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	rcl    BYTE PTR [rdi],1
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	or     ebx,DWORD PTR [rax]
   14000e0d2:	add    BYTE PTR [rax],al
   14000e0d4:	rex.WR pushf 
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	adc    al,0x18
   14000e0da:	add    BYTE PTR [rax],al
   14000e0dc:	sbb    BYTE PTR [rax],r8b
   14000e0df:	add    BYTE PTR [rsp+rbx*4+0x0],cl
   14000e0e3:	add    BYTE PTR [rax+0x18],dl
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	cdq    
   14000e0e9:	sbb    BYTE PTR [rax],al
   14000e0eb:	add    BYTE PTR [rax-0x63],ch
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	movabs al,ds:0xb0000018b7000018
   14000e0f9:	popf   
   14000e0fa:	add    BYTE PTR [rax],al
   14000e0fc:	rcr    BYTE PTR [rax],0x0
   14000e0ff:	add    cl,dh
   14000e101:	sbb    BYTE PTR [rax],al
   14000e103:	add    BYTE PTR [rax-0x7ffff63],bh
   14000e109:	sbb    BYTE PTR [rax],al
   14000e10b:	add    BYTE PTR [rax],dh
   14000e10d:	sbb    DWORD PTR [rax],eax
   14000e10f:	add    al,ch
   14000e111:	popf   
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	sbb    QWORD PTR [rax],rax
   14000e117:	add    BYTE PTR [rcx+0x10000019],al
   14000e11d:	sahf   
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	mov    BYTE PTR [rcx],bl
   14000e122:	add    BYTE PTR [rax],al
   14000e124:	scas   eax,DWORD PTR es:[rdi]
   14000e125:	sbb    DWORD PTR [rax],eax
   14000e127:	add    BYTE PTR [rax-0x62],al
   14000e12a:	add    BYTE PTR [rax],al
   14000e12c:	rcr    BYTE PTR [rcx],0x0
   14000e12f:	add    bl,ah
   14000e131:	sbb    DWORD PTR [rax],eax
   14000e133:	add    BYTE PTR [rax-0x62],bl
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	lock sbb DWORD PTR [rax],eax
   14000e13b:	add    BYTE PTR [rax],bh
   14000e13d:	sbb    al,BYTE PTR [rax]
   14000e13f:	add    BYTE PTR [rax-0x62],ah
   14000e142:	add    BYTE PTR [rax],al
   14000e144:	sbb    al,BYTE PTR [rax]
   14000e147:	add    BYTE PTR [rax+0x1a],dh
   14000e14a:	add    BYTE PTR [rax],al
   14000e14c:	sbb    BYTE PTR [rsi+0x1a8c0000],0x0
   14000e153:	add    ah,bl
   14000e155:	sbb    al,BYTE PTR [rax]
   14000e157:	add    BYTE PTR [rax+0x1000009e],ch
   14000e15d:	sbb    eax,DWORD PTR [rax]
   14000e15f:	add    BYTE PTR [rdx+0x1b],al
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	loopne 0x14000e104
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	push   rax
   14000e169:	sbb    eax,DWORD PTR [rax]
   14000e16b:	add    BYTE PTR [rbp-0xfffffe5],bh
   14000e171:	sahf   
   14000e172:	add    BYTE PTR [rax],al
   14000e174:	(bad)  
   14000e175:	sbb    eax,DWORD PTR [rax]
   14000e177:	add    BYTE PTR [rdi],ah
   14000e179:	sbb    al,0x0
   14000e17b:	add    BYTE PTR [rax],ah
   14000e17d:	lahf   
   14000e17e:	add    BYTE PTR [rax],al
   14000e180:	xor    BYTE PTR [rax+rax*1],bl
   14000e183:	add    BYTE PTR [rsp+rbx*1-0x60b00000],bl
   14000e18a:	add    BYTE PTR [rax],al
   14000e18c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e18d:	sbb    al,0x0
   14000e18f:	add    dh,bh
   14000e191:	sbb    al,0x0
   14000e193:	add    BYTE PTR [rax+0x1000009f],ah
   14000e199:	sbb    eax,0x1d420000
   14000e19e:	add    BYTE PTR [rax],al
   14000e1a0:	loopne 0x14000e140
   14000e1a2:	add    BYTE PTR [rax],al
   14000e1a4:	push   rax
   14000e1a5:	sbb    eax,0x1dc70000
   14000e1aa:	add    BYTE PTR [rax],al
   14000e1ac:	loopne 0x14000e14d
   14000e1ae:	add    BYTE PTR [rax],al
   14000e1b0:	rcr    BYTE PTR [rip+0x1e3d0000],1        # 0x15e3de1b6
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	adc    BYTE PTR [rax+0x1e640000],ah
   14000e1be:	add    BYTE PTR [rax],al
   14000e1c0:	sbb    ebx,DWORD PTR [rdi]
   14000e1c2:	add    BYTE PTR [rax],al
   14000e1c4:	rex.W movabs al,ds:0x1fc700001f300000
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	rex.WR pushf 
   14000e1d2:	add    BYTE PTR [rax],al
   14000e1d4:	rcr    BYTE PTR [rdi],1
   14000e1d6:	add    BYTE PTR [rax],al
   14000e1d8:	cmc    
   14000e1d9:	(bad)  
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	cwde   
   14000e1dd:	movabs al,ds:0x20ef00001ffc0000
   14000e1e6:	add    BYTE PTR [rax],al
   14000e1e8:	movabs al,ds:0x51000020f80000a0
   14000e1f1:	and    al,BYTE PTR [rax]
   14000e1f3:	add    BYTE PTR [rax],al
   14000e1f5:	movabs eax,ds:0x23db000022600000
   14000e1fe:	add    BYTE PTR [rax],al
   14000e200:	pop    rax
   14000e201:	movabs eax,ds:0x24bc000023f00000
   14000e20a:	add    BYTE PTR [rax],al
   14000e20c:	sbb    BYTE PTR [rdx+0x24d00000],ah
   14000e212:	add    BYTE PTR [rax],al
   14000e214:	(bad)  
   14000e215:	and    eax,0xa2680000
   14000e21a:	add    BYTE PTR [rax],al
   14000e21c:	xor    BYTE PTR [rsi],ah
   14000e21e:	add    BYTE PTR [rax],al
   14000e220:	add    al,0x27
   14000e222:	add    BYTE PTR [rax],al
   14000e224:	mov    eax,0x100000a2
   14000e229:	(bad)  
   14000e22a:	add    BYTE PTR [rax],al
   14000e22c:	and    BYTE PTR [rax],ch
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	clc    
   14000e231:	movabs ds:0x2858000028280000,al
   14000e23a:	add    BYTE PTR [rax],al
   14000e23c:	cwde   
   14000e23d:	movabs al,ds:0x28bb000028600000
   14000e246:	add    BYTE PTR [rax],al
   14000e248:	js     0x14000e1e4
   14000e24a:	add    BYTE PTR [rax],al
   14000e24c:	(bad)  
   14000e24d:	sub    BYTE PTR [rax],al
   14000e24f:	add    dh,dh
   14000e251:	sub    BYTE PTR [rax],al
   14000e253:	add    BYTE PTR [rsp+rbx*4+0x0],cl
   14000e257:	add    ah,bh
   14000e259:	sub    BYTE PTR [rax],al
   14000e25b:	add    BYTE PTR [rdx+rbp*1],cl
   14000e25e:	add    BYTE PTR [rax],al
   14000e260:	(bad)  
   14000e261:	(bad)  
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	adc    al,0x2a
   14000e266:	add    BYTE PTR [rax],al
   14000e268:	jns    0x14000e294
   14000e26a:	add    BYTE PTR [rax],al
   14000e26c:	js     0x14000e208
   14000e26e:	add    BYTE PTR [rax],al
   14000e270:	sub    BYTE PTR [rdx],0x0
   14000e273:	add    BYTE PTR [rdi],ah
   14000e275:	sub    eax,DWORD PTR [rax]
   14000e277:	add    BYTE PTR [rax],bh
   14000e279:	pushf  
   14000e27a:	add    BYTE PTR [rax],al
   14000e27c:	xor    BYTE PTR [rbx],ch
   14000e27e:	add    BYTE PTR [rax],al
   14000e280:	(bad)  
   14000e281:	sub    eax,DWORD PTR [rax]
   14000e283:	add    BYTE PTR [rax-0x5d],dl
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	push   0x4300002b
   14000e28d:	add    BYTE PTR cs:[rax],al
   14000e290:	pop    rsp
   14000e291:	movabs ds:0x2ea100002e4c0000,eax
   14000e29a:	add    BYTE PTR [rax],al
   14000e29c:	pop    rax
   14000e29d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	mov    eax,0xed00002e
   14000e2a5:	add    BYTE PTR cs:[rax],al
   14000e2a8:	cwde   
   14000e2a9:	movabs al,ds:0x302600002ef40000
   14000e2b2:	add    BYTE PTR [rax],al
   14000e2b4:	mov    BYTE PTR [rax+rax*1+0x302c00],ah
   14000e2bb:	add    BYTE PTR [rbx],ah
   14000e2bd:	xor    DWORD PTR [rax],eax
   14000e2bf:	add    BYTE PTR [rax],bh
   14000e2c1:	pushf  
   14000e2c2:	add    BYTE PTR [rax],al
   14000e2c4:	sub    al,0x31
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	rex.WRXB xor QWORD PTR [r8],r8
   14000e2cb:	add    BYTE PTR [rax+0x580000a0],bl
   14000e2d1:	xor    DWORD PTR [rax],eax
   14000e2d3:	add    BYTE PTR [rcx+rsi*1-0x5aa00000],bh
   14000e2da:	add    BYTE PTR [rax],al
   14000e2dc:	(bad)  
   14000e2dd:	xor    DWORD PTR [rax],eax
   14000e2df:	add    BYTE PTR [rcx],bl
   14000e2e1:	xor    al,BYTE PTR [rax]
   14000e2e3:	add    BYTE PTR [rsi+riz*4],al
   14000e2e6:	add    BYTE PTR [rax],al
   14000e2e8:	and    BYTE PTR [rdx],dh
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	mov    BYTE PTR [rdx],dh
   14000e2ee:	add    BYTE PTR [rax],al
   14000e2f0:	or     al,0xa6
   14000e2f2:	add    BYTE PTR [rax],al
   14000e2f4:	shl    BYTE PTR [rdx],0x0
   14000e2f7:	add    cl,ch
   14000e2f9:	xor    al,BYTE PTR [rax]
   14000e2fb:	add    BYTE PTR [rsi+riz*4+0x32f00000],ch
   14000e302:	add    BYTE PTR [rax],al
   14000e304:	(bad)  
   14000e305:	xor    eax,DWORD PTR [rax]
   14000e307:	add    BYTE PTR [rsi+riz*4],al
   14000e30a:	add    BYTE PTR [rax],al
   14000e30c:	adc    al,0x33
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	xor    rax,QWORD PTR [rax]
   14000e313:	add    ah,cl
   14000e315:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e316:	add    BYTE PTR [rax],al
   14000e318:	push   rax
   14000e319:	xor    eax,DWORD PTR [rax]
   14000e31b:	add    dl,dh
   14000e31d:	xor    eax,DWORD PTR [rax]
   14000e31f:	add    ah,dl
   14000e321:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e322:	add    BYTE PTR [rax],al
   14000e324:	clc    
   14000e325:	xor    eax,DWORD PTR [rax]
   14000e327:	add    BYTE PTR [rsp+rsi*1+0x0],dh
   14000e32b:	add    BYTE PTR [rax-0x62],bl
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	jl     0x14000e366
   14000e332:	add    BYTE PTR [rax],al
   14000e334:	or     eax,0x98000035
   14000e339:	fwait
   14000e33a:	add    BYTE PTR [rax],al
   14000e33c:	adc    al,0x35
   14000e33e:	add    BYTE PTR [rax],al
   14000e340:	sub    BYTE PTR [rip+0xffffffffa6dc0000],dh        # 0xe6dce346
   14000e346:	add    BYTE PTR [rax],al
   14000e348:	xor    BYTE PTR [rip+0x35440000],dh        # 0x17544e34e
   14000e34e:	add    BYTE PTR [rax],al
   14000e350:	mov    al,0x9d
   14000e352:	add    BYTE PTR [rax],al
   14000e354:	rex.WR xor rax,0x375d0000
   14000e35a:	add    BYTE PTR [rax],al
   14000e35c:	cld    
   14000e35d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e35e:	add    BYTE PTR [rax],al
   14000e360:	jo     0x14000e399
   14000e362:	add    BYTE PTR [rax],al
   14000e364:	mov    bh,0x37
   14000e366:	add    BYTE PTR [rax],al
   14000e368:	rex.WR pushf 
   14000e36a:	add    BYTE PTR [rax],al
   14000e36c:	shl    BYTE PTR [rdi],0x0
   14000e36f:	add    BYTE PTR [rdx],bl
   14000e371:	cmp    eax,0xa71c0000
   14000e376:	add    BYTE PTR [rax],al
   14000e378:	and    BYTE PTR [rip+0x3fde0000],bh        # 0x17fdee37e
   14000e37e:	add    BYTE PTR [rax],al
   14000e380:	and    BYTE PTR [rdi+0x3fe40000],0x0
   14000e387:	add    BYTE PTR [rdx+rax*2],dl
   14000e38a:	add    BYTE PTR [rax],al
   14000e38c:	loopne 0x14000e335
   14000e38e:	add    BYTE PTR [rax],al
   14000e390:	sbb    al,0x42
   14000e392:	add    BYTE PTR [rax],al
   14000e394:	adc    al,BYTE PTR [rbx+0x0]
   14000e397:	add    BYTE PTR [rax-0x66],bh
   14000e39a:	add    BYTE PTR [rax],al
   14000e39c:	sbb    BYTE PTR [rbx+0x0],al
   14000e39f:	add    BYTE PTR [rbx+0x43],dl
   14000e3a2:	add    BYTE PTR [rax],al
   14000e3a4:	int3   
   14000e3a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	(bad)  
   14000e3a9:	rex.XB add BYTE PTR [r8],al
   14000e3ac:	fild   WORD PTR [rbx+0x0]
   14000e3af:	add    BYTE PTR [rax-0x66],bh
   14000e3b2:	add    BYTE PTR [rax],al
   14000e3b4:	call   0x17500e3fc
   14000e3b9:	add    BYTE PTR [rax],r8b
   14000e3bc:	rex.WR pushf 
   14000e3be:	add    BYTE PTR [rax],al
   14000e3c0:	rex
   14000e3c1:	add    BYTE PTR [rax],r8b
   14000e3c4:	cld    
   14000e3c5:	add    BYTE PTR [rax],r8b
   14000e3c8:	js     0x14000e364
   14000e3ca:	add    BYTE PTR [rax],al
   14000e3cc:	xor    BYTE PTR [rbp+0x0],al
   14000e3cf:	add    BYTE PTR [rbx+0x4c000045],al
   14000e3d5:	pushf  
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	nop
   14000e3d9:	add    BYTE PTR [r8],r8b
   14000e3dc:	repnz add BYTE PTR [r8],r8b
   14000e3e0:	(bad)  
   14000e3e1:	(bad)  
   14000e3e2:	add    BYTE PTR [rax],al
   14000e3e4:	add    BYTE PTR [rsi+0x0],al
   14000e3e7:	add    BYTE PTR [rdi],bh
   14000e3e9:	rex.RX add BYTE PTR [rax],r8b
   14000e3ec:	js     0x14000e388
   14000e3ee:	add    BYTE PTR [rax],al
   14000e3f0:	push   rax
   14000e3f1:	rex.RX add BYTE PTR [rax],r8b
   14000e3f4:	mov    BYTE PTR [rsi+0x0],al
   14000e3f7:	add    BYTE PTR [rsp+rbx*4+0x0],cl
   14000e3fb:	add    BYTE PTR [rax-0x3affffba],dl
   14000e401:	rex.RX add BYTE PTR [rax],r8b
   14000e404:	rex.WR pushf 
   14000e406:	add    BYTE PTR [rax],al
   14000e408:	rol    BYTE PTR [rsi+0x0],1
   14000e40b:	add    al,bh
   14000e40d:	rex.RX add BYTE PTR [rax],r8b
   14000e410:	mov    al,0x9d
   14000e412:	add    BYTE PTR [rax],al
   14000e414:	add    BYTE PTR [rdi+0x0],al
   14000e417:	add    BYTE PTR [rdx+0x47],al
   14000e41a:	add    BYTE PTR [rax],al
   14000e41c:	xor    BYTE PTR [rax+0x47500000],ch
   14000e422:	add    BYTE PTR [rax],al
   14000e424:	mov    dl,0x47
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	rex.WR pushf 
   14000e42a:	add    BYTE PTR [rax],al
   14000e42c:	mov    eax,0xf0000047
   14000e431:	rex.RXB add BYTE PTR [r8],r8b
   14000e434:	cwde   
   14000e435:	fwait
   14000e436:	add    BYTE PTR [rax],al
   14000e438:	add    BYTE PTR [rax+0x0],cl
   14000e43b:	add    cl,ch
   14000e43d:	rex.W add BYTE PTR [rax],al
   14000e440:	cmp    al,0xa8
   14000e442:	add    BYTE PTR [rax],al
   14000e444:	lock rex.W add BYTE PTR [rax],al
   14000e448:	test   DWORD PTR [rdx+0x0],0xa83c00
   14000e44f:	add    BYTE PTR [rax],al
   14000e451:	rex.WXB add BYTE PTR [r8],al
   14000e454:	jbe    0x14000e4a2
   14000e456:	add    BYTE PTR [rax],al
   14000e458:	rex.WR test al,0x0
   14000e45b:	add    BYTE PTR [rsp+rcx*2+0x0],bh
   14000e45f:	add    BYTE PTR [rcx-0x67ffffb3],dh
   14000e465:	movabs al,ds:0x578300004dd00000
   14000e46e:	add    BYTE PTR [rax],al
   14000e470:	(bad)  
   14000e471:	test   al,0x0
   14000e473:	add    BYTE PTR [rdi+rdx*2+0x57bc0000],cl
   14000e47a:	add    BYTE PTR [rax],al
   14000e47c:	rex.WR pushf 
   14000e47e:	add    BYTE PTR [rax],al
   14000e480:	(bad)  
   14000e481:	push   rdi
   14000e482:	add    BYTE PTR [rax],al
   14000e484:	std    
   14000e485:	push   rdi
   14000e486:	add    BYTE PTR [rax],al
   14000e488:	cwde   
   14000e489:	movabs al,ds:0x5818000058040000
   14000e492:	add    BYTE PTR [rax],al
   14000e494:	mov    al,0x9d
   14000e496:	add    BYTE PTR [rax],al
   14000e498:	jo     0x14000e4f2
   14000e49a:	add    BYTE PTR [rax],al
   14000e49c:	out    0x58,eax
   14000e49e:	add    BYTE PTR [rax],al
   14000e4a0:	movabs al,ds:0x66000058f00000a8
   14000e4a9:	pop    rcx
   14000e4aa:	add    BYTE PTR [rax],al
   14000e4ac:	mov    al,0xa8
   14000e4ae:	add    BYTE PTR [rax],al
   14000e4b0:	ins    BYTE PTR es:[rdi],dx
   14000e4b1:	pop    rcx
   14000e4b2:	add    BYTE PTR [rax],al
   14000e4b4:	retf   
   14000e4b5:	pop    rcx
   14000e4b6:	add    BYTE PTR [rax],al
   14000e4b8:	cwde   
   14000e4b9:	movabs al,ds:0x5a46000059e00000
   14000e4c2:	add    BYTE PTR [rax],al
   14000e4c4:	rex.WR pushf 
   14000e4c6:	add    BYTE PTR [rax],al
   14000e4c8:	rex.WR pop rdx
   14000e4ca:	add    BYTE PTR [rax],al
   14000e4cc:	out    dx,al
   14000e4cd:	pop    rdx
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	mov    eax,0xf40000a8
   14000e4d5:	pop    rdx
   14000e4d6:	add    BYTE PTR [rax],al
   14000e4d8:	rcr    BYTE PTR [rbx+0x0],1
   14000e4db:	add    BYTE PTR [rax],bh
   14000e4dd:	pushf  
   14000e4de:	add    BYTE PTR [rax],al
   14000e4e0:	fcomp  DWORD PTR [rbx+0x0]
   14000e4e3:	add    BYTE PTR [rax+0x5c],bl
   14000e4e6:	add    BYTE PTR [rax],al
   14000e4e8:	enter  0xa8,0x0
   14000e4ec:	(bad)  
   14000e4ed:	pop    rsp
   14000e4ee:	add    BYTE PTR [rax],al
   14000e4f0:	icebp  
   14000e4f1:	pop    rsp
   14000e4f2:	add    BYTE PTR [rax],al
   14000e4f4:	(bad)  
   14000e4f5:	test   al,0x0
   14000e4f7:	add    BYTE PTR [rax],al
   14000e4f9:	pop    rbp
   14000e4fa:	add    BYTE PTR [rax],al
   14000e4fc:	xor    DWORD PTR [rbp+0x0],ebx
   14000e4ff:	add    BYTE PTR [rsi+riz*4],al
   14000e502:	add    BYTE PTR [rax],al
   14000e504:	cmp    BYTE PTR [rbp+0x0],bl
   14000e507:	add    BYTE PTR [rsi+0x5d],ah
   14000e50a:	add    BYTE PTR [rax],al
   14000e50c:	cwde   
   14000e50d:	movabs al,ds:0x5de500005d6c0000
   14000e516:	add    BYTE PTR [rax],al
   14000e518:	rex.WR stos BYTE PTR es:[rdi],al
   14000e51a:	add    BYTE PTR [rax],al
   14000e51c:	cld    
   14000e51d:	pop    rbp
   14000e51e:	add    BYTE PTR [rax],al
   14000e520:	push   0x6000005e
   14000e525:	test   eax,0x5e700000
   14000e52a:	add    BYTE PTR [rax],al
   14000e52c:	loope  0x14000e58c
   14000e52e:	add    BYTE PTR [rax],al
   14000e530:	xor    BYTE PTR [rcx+0x5ee80000],ch
   14000e536:	add    BYTE PTR [rax],al
   14000e538:	sub    DWORD PTR [rdi+0x0],ebx
   14000e53b:	add    BYTE PTR [rax+0x300000a0],bl
   14000e541:	pop    rdi
   14000e542:	add    BYTE PTR [rax],al
   14000e544:	mov    ds,WORD PTR [rdi+0x0]
   14000e547:	add    BYTE PTR [rsp+rbx*4+0x0],cl
   14000e54b:	add    BYTE PTR [rax-0x2dffffa1],ah
   14000e551:	pop    rdi
   14000e552:	add    BYTE PTR [rax],al
   14000e554:	loopne 0x14000e4f4
   14000e556:	add    BYTE PTR [rax],al
   14000e558:	fcomp  DWORD PTR [rdi+0x0]
   14000e55b:	add    BYTE PTR [rip+0xffffffffe4000060],ch        # 0x12400e5c1
   14000e561:	test   al,0x0
   14000e563:	add    BYTE PTR [rax+riz*2],dh
   14000e566:	add    BYTE PTR [rax],al
   14000e568:	mov    WORD PTR [rax+0x0],fs
   14000e56b:	add    BYTE PTR [rax],cl
   14000e56d:	test   eax,0x60a00000
   14000e572:	add    BYTE PTR [rax],al
   14000e574:	outs   dx,DWORD PTR ds:[rsi]
   14000e575:	(bad)  
   14000e576:	add    BYTE PTR [rax],al
   14000e578:	mov    al,0x9d
   14000e57a:	add    BYTE PTR [rax],al
   14000e57c:	and    BYTE PTR [rcx+0x0],0x0
   14000e580:	leave  
   14000e581:	(bad)  
   14000e582:	add    BYTE PTR [rax],al
   14000e584:	add    al,0xa6
   14000e586:	add    BYTE PTR [rax],al
   14000e588:	shl    BYTE PTR [rcx+0x0],1
   14000e58b:	add    BYTE PTR [rdx-0x67ffff9d],ah
   14000e591:	test   eax,0x63b00000
   14000e596:	add    BYTE PTR [rax],al
   14000e598:	ret    0x63
   14000e59b:	add    BYTE PTR [rax-0x1fffff63],dh
   14000e5a1:	movsxd eax,DWORD PTR [rax]
   14000e5a3:	add    dh,bh
   14000e5a5:	movsxd eax,DWORD PTR [rax]
   14000e5a7:	add    al,cl
   14000e5a9:	test   eax,0x64100000
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	rex
   14000e5b1:	add    BYTE PTR fs:[rax],al
   14000e5b4:	rex.WR pushf 
   14000e5b6:	add    BYTE PTR [rax],al
   14000e5b8:	mov    WORD PTR [rax+rax*1+0x0],fs
   14000e5bc:	sub    ah,BYTE PTR [rbp+0x0]
   14000e5bf:	add    ah,cl
   14000e5c1:	test   eax,0x65300000
   14000e5c6:	add    BYTE PTR [rax],al
   14000e5c8:	rex.RXB
   14000e5c9:	add    BYTE PTR gs:[rax],al
   14000e5cc:	mov    al,0x9d
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	and    BYTE PTR [rbp+0x0],0x0
   14000e5d4:	popf   
   14000e5d5:	add    BYTE PTR gs:[rax],al
   14000e5d8:	mov    al,0x9d
   14000e5da:	add    BYTE PTR [rax],al
   14000e5dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e5dd:	add    BYTE PTR gs:[rax],al
   14000e5e0:	(bad)  
   14000e5e1:	data16 add BYTE PTR [rax],al
   14000e5e4:	cwde   
   14000e5e5:	movabs al,ds:0x669f000066100000
   14000e5ee:	add    BYTE PTR [rax],al
   14000e5f0:	(bad)  
   14000e5f1:	(bad)  
   14000e5f2:	add    BYTE PTR [rax],al
   14000e5f4:	mov    al,0x66
   14000e5f6:	add    BYTE PTR [rax],al
   14000e5f8:	jmp    0xf000e663
   14000e5fd:	popf   
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	lock data16 add BYTE PTR [rax],al
   14000e604:	or     BYTE PTR [rdi+0x0],ah
   14000e607:	add    BYTE PTR [rax+0x1c00009d],dh
   14000e60d:	add    BYTE PTR [eax],al
   14000e610:	jo     0x14000e679
   14000e612:	add    BYTE PTR [rax],al
   14000e614:	lock test eax,0x67780000
   14000e61a:	add    BYTE PTR [rax],al
   14000e61c:	mov    ebp,0x98000067
   14000e621:	movabs al,ds:0x686d000068200000
   14000e62a:	add    BYTE PTR [rax],al
   14000e62c:	adc    BYTE PTR [rdx+0x68b40000],ch
   14000e632:	add    BYTE PTR [rax],al
   14000e634:	test   BYTE PTR [rcx+0x0],ch
   14000e637:	add    BYTE PTR [rdx+rbp*4],dh
   14000e63a:	add    BYTE PTR [rax],al
   14000e63c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e63d:	imul   eax,DWORD PTR [rax],0x69d800
   14000e643:	add    BYTE PTR [rax-0x1fffff60],bl
   14000e649:	imul   eax,DWORD PTR [rax],0x6b5100
   14000e64f:	add    BYTE PTR [rax-0x56],al
   14000e652:	add    BYTE PTR [rax],al
   14000e654:	mov    BYTE PTR [rbx+0x0],ch
   14000e657:	add    dh,dl
   14000e659:	imul   eax,DWORD PTR [rax],0x0
   14000e65c:	mov    al,0x9d
   14000e65e:	add    BYTE PTR [rax],al
   14000e660:	pop    rsp
   14000e661:	ins    BYTE PTR es:[rdi],dx
   14000e662:	add    BYTE PTR [rax],al
   14000e664:	(bad)  
   14000e665:	ins    BYTE PTR es:[rdi],dx
   14000e666:	add    BYTE PTR [rax],al
   14000e668:	rex.WR stos BYTE PTR es:[rdi],al
   14000e66a:	add    BYTE PTR [rax],al
   14000e66c:	in     al,dx
   14000e66d:	ins    BYTE PTR es:[rdi],dx
   14000e66e:	add    BYTE PTR [rax],al
   14000e670:	cmp    ch,BYTE PTR [rbp+0x0]
   14000e673:	add    BYTE PTR [rax+0x6000009d],dh
   14000e679:	ins    DWORD PTR es:[rdi],dx
   14000e67a:	add    BYTE PTR [rax],al
   14000e67c:	xlat   BYTE PTR ds:[rbx]
   14000e67d:	ins    DWORD PTR es:[rdi],dx
   14000e67e:	add    BYTE PTR [rax],al
   14000e680:	push   rsp
   14000e681:	stos   BYTE PTR es:[rdi],al
   14000e682:	add    BYTE PTR [rax],al
   14000e684:	sub    BYTE PTR [rsi+0x0],0x0
   14000e688:	imul   DWORD PTR [rsi+0x0]
   14000e68b:	add    BYTE PTR [rdx+rbp*4+0x0],bl
   14000e68f:	add    BYTE PTR [rax],ah
   14000e691:	outs   dx,DWORD PTR ds:[rsi]
   14000e692:	add    BYTE PTR [rax],al
   14000e694:	and    ch,BYTE PTR [rdi+0x0]
   14000e697:	add    BYTE PTR [rax-0x56],cl
   14000e69a:	add    BYTE PTR [rax],al
   14000e69c:	mov    WORD PTR [rax+0x0],?
   14000e69f:	add    BYTE PTR [rsi+0x58000070],ch
   14000e6a5:	popf   
   14000e6a6:	add    BYTE PTR [rax],al
   14000e6a8:	lock jo 0x14000e6ab
   14000e6ab:	add    BYTE PTR [rsi],dl
   14000e6ad:	jno    0x14000e6af
   14000e6af:	add    al,ah
   14000e6b1:	popf   
   14000e6b2:	add    BYTE PTR [rax],al
   14000e6b4:	sbb    al,0x71
   14000e6b6:	add    BYTE PTR [rax],al
   14000e6b8:	rex.X jno 0x14000e6bb
   14000e6bb:	add    al,ah
   14000e6bd:	popf   
   14000e6be:	add    BYTE PTR [rax],al
   14000e6c0:	jl     0x14000e734
   14000e6c2:	add    BYTE PTR [rax],al
   14000e6c4:	xchg   edi,eax
   14000e6c5:	jb     0x14000e6c7
   14000e6c7:	add    BYTE PTR [rax],cl
   14000e6c9:	movabs ds:0x7338000073050000,al
   14000e6d2:	add    BYTE PTR [rax],al
   14000e6d4:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e6d6:	add    BYTE PTR [rax],al
   14000e6d8:	cmp    BYTE PTR [rbx+0x0],dh
   14000e6db:	add    BYTE PTR [rsi+0x73],ch
   14000e6de:	add    BYTE PTR [rax],al
   14000e6e0:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e6e2:	add    BYTE PTR [rax],al
   14000e6e4:	xchg   BYTE PTR [rbx+0x0],dh
   14000e6e7:	add    dl,ch
   14000e6e9:	jae    0x14000e6eb
   14000e6eb:	add    BYTE PTR [rax-0x5b],dl
   14000e6ee:	add    BYTE PTR [rax],al
   14000e6f0:	(bad)  
   14000e6f1:	jae    0x14000e6f3
   14000e6f3:	add    BYTE PTR [rdx],dl
   14000e6f5:	je     0x14000e6f7
   14000e6f7:	add    BYTE PTR [rax-0x5b],dl
   14000e6fa:	add    BYTE PTR [rax],al
   14000e6fc:	sbb    BYTE PTR [rax+rax*1+0x0],dh
   14000e700:	xor    al,0x74
   14000e702:	add    BYTE PTR [rax],al
   14000e704:	loopne 0x14000e6a3
   14000e706:	add    BYTE PTR [rax],al
   14000e708:	xor    al,0x74
   14000e70a:	add    BYTE PTR [rax],al
   14000e70c:	gs je  0x14000e70f
   14000e70f:	add    al,dh
   14000e711:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e712:	add    BYTE PTR [rax],al
   14000e714:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xffffff87
   14000e719:	je     0x14000e71b
   14000e71b:	add    al,ah
   14000e71d:	popf   
   14000e71e:	add    BYTE PTR [rax],al
   14000e720:	xchg   DWORD PTR [rax+rax*1+0x0],esi
   14000e724:	mov    eax,0x98000074
   14000e729:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e72a:	add    BYTE PTR [rax],al
   14000e72c:	mov    esi,0xe2000074
   14000e731:	je     0x14000e733
   14000e733:	add    al,ah
   14000e735:	popf   
   14000e736:	add    BYTE PTR [rax],al
   14000e738:	data16 jne 0x14000e73b
   14000e73b:	add    BYTE PTR [rbp+rsi*2-0x62200000],al
   14000e742:	add    BYTE PTR [rax],al
   14000e744:	mov    dh,BYTE PTR [rbp+0x0]
   14000e747:	add    BYTE PTR [rbp-0x1fffff8b],ah
   14000e74d:	popf   
   14000e74e:	add    BYTE PTR [rax],al
   14000e750:	mov    al,0x75
   14000e752:	add    BYTE PTR [rax],al
   14000e754:	shl    BYTE PTR [rbp+0x0],1
   14000e757:	add    al,ah
   14000e759:	popf   
	...

Disassembly of section .didat:

000000014000f000 <.didat>:
   14000f000:	loopne 0x14000f06f
   14000f002:	add    BYTE PTR [rax+0x1],al
   14000f005:	add    BYTE PTR [rax],al
   14000f007:	add    BYTE PTR [rax],al
   14000f009:	outs   dx,BYTE PTR ds:[rsi]
   14000f00a:	add    BYTE PTR [rax+0x1],al
   14000f00d:	add    BYTE PTR [rax],al
   14000f00f:	add    BYTE PTR [rax],ah
   14000f011:	outs   dx,BYTE PTR ds:[rsi]
   14000f012:	add    BYTE PTR [rax+0x1],al
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	add    BYTE PTR [rax+0x6e],al
   14000f01a:	add    BYTE PTR [rax+0x1],al
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rax+0x6d],al
   14000f022:	add    BYTE PTR [rax+0x1],al
	...
   14000f02d:	add    BYTE PTR [rax],al
   14000f02f:	add    BYTE PTR [rax+0x6e],ah
   14000f032:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

0000000140010000 <.rsrc>:
	...
   14001000c:	add    BYTE PTR [rax],al
   14001000e:	add    al,BYTE PTR [rax]
   140010010:	adc    BYTE PTR [rax],al
   140010012:	add    BYTE PTR [rax],al
   140010014:	and    BYTE PTR [rax],al
   140010016:	add    BYTE PTR [rax+0x18],al
   14001001c:	cmp    BYTE PTR [rax],al
   14001001e:	add    BYTE PTR [rax+0x0],al
	...
   14001002c:	add    BYTE PTR [rax],al
   14001002e:	add    DWORD PTR [rax],eax
   140010030:	add    DWORD PTR [rax],eax
   140010032:	add    BYTE PTR [rax],al
   140010034:	push   rax
   140010035:	add    BYTE PTR [rax],al
   140010037:	add    BYTE PTR [rax],0x0
	...
   140010046:	add    DWORD PTR [rax],eax
   140010048:	add    DWORD PTR [rax],eax
   14001004a:	add    BYTE PTR [rax],al
   14001004c:	push   0x800000
	...
   14001005d:	add    BYTE PTR [rcx],al
   14001005f:	add    BYTE PTR [rcx],cl
   140010061:	add    al,0x0
   140010063:	add    BYTE PTR [rax+0x0],al
	...
   140010075:	add    BYTE PTR [rcx],al
   140010077:	add    BYTE PTR [rcx],cl
   140010079:	add    al,0x0
   14001007b:	add    BYTE PTR [rax+0x40000000],dl
   140010081:	add    eax,DWORD PTR [rcx]
   140010083:	add    al,dh
   140010085:	add    eax,DWORD PTR [rax]
	...
   14001008f:	add    BYTE PTR [rax-0x60ffff00],ah
   140010095:	add    al,BYTE PTR [rax]
	...
   14001009f:	add    BYTE PTR [rdi+rdi*1],bh
   1400100a2:	js     0x140010111
   1400100a4:	ins    BYTE PTR es:[rdi],dx
   1400100a5:	and    BYTE PTR [rsi+0x65],dh
   1400100a8:	jb     0x14001011d
   1400100aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400100b1:	xor    BYTE PTR [rdx],ah
   1400100b3:	and    BYTE PTR [rbp+0x6e],ah
   1400100b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400100b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400100c0:	rex.RX sub eax,0x73202238
   1400100c6:	je     0x140010129
   1400100c8:	outs   dx,BYTE PTR ds:[rsi]
   1400100c9:	fs (bad) 
   1400100cb:	ins    BYTE PTR es:[rdi],dx
   1400100cc:	outs   dx,DWORD PTR ds:[rsi]
   1400100cd:	outs   dx,BYTE PTR ds:[rsi]
   1400100ce:	gs cmp eax,0x73657922
   1400100d4:	and    bh,BYTE PTR [rdi]
   1400100d6:	ds or  eax,0x2d213c0a
   1400100dc:	sub    eax,0x706f4320
   1400100e1:	jns    0x140010155
   1400100e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400100ea:	sub    DWORD PTR [rax],esp
   1400100ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400100f4:	je     0x140010116
   1400100f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400100f8:	jb     0x14001016a
   1400100fa:	outs   dx,DWORD PTR ds:[rsi]
   1400100fb:	jb     0x14001015e
   1400100fd:	je     0x140010168
   1400100ff:	outs   dx,DWORD PTR ds:[rsi]
   140010100:	outs   dx,BYTE PTR ds:[rsi]
   140010101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e3f34
   140010107:	cmp    al,0x61
   140010109:	jae    0x14001017e
   14001010b:	gs ins DWORD PTR es:[rdi],dx
   14001010d:	(bad)  
   14001010e:	ins    BYTE PTR es:[rdi],dx
   14001010f:	jns    0x140010131
   140010111:	js     0x140010180
   140010113:	ins    BYTE PTR es:[rdi],dx
   140010114:	outs   dx,BYTE PTR ds:[rsi]
   140010115:	jae    0x140010154
   140010117:	and    dh,BYTE PTR [rbp+0x72]
   14001011a:	outs   dx,BYTE PTR ds:[rsi]
   14001011b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001011e:	push   0x73616d65
   140010123:	sub    eax,0x7263696d
   140010128:	outs   dx,DWORD PTR ds:[rsi]
   140010129:	jae    0x14001019a
   14001012b:	data16 je 0x14001015b
   14001012e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140010131:	cmp    ah,BYTE PTR [rcx+0x73]
   140010134:	ins    DWORD PTR es:[rdi],dx
   140010135:	cs jbe 0x140010169
   140010138:	and    ah,BYTE PTR [rax]
   14001013a:	ins    DWORD PTR es:[rdi],dx
   14001013b:	(bad)  
   14001013c:	outs   dx,BYTE PTR ds:[rsi]
   14001013d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140010144:	jb     0x1400101b9
   140010146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001014d:	xor    BYTE PTR [rdx],ah
   14001014f:	ds or  eax,0x73613c0a
   140010155:	jae    0x1400101bc
   140010157:	ins    DWORD PTR es:[rdi],dx
   140010158:	(bad)  
   140010159:	ins    BYTE PTR es:[rdi],dx
   14001015a:	jns    0x1400101a5
   14001015c:	fs outs dx,BYTE PTR gs:[rsi]
   14001015f:	je     0x1400101ca
   140010161:	je     0x1400101dc
   140010163:	or     eax,0x2020200a
   140010168:	and    BYTE PTR [rsi+0x65],dh
   14001016b:	jb     0x1400101e0
   14001016d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140010174:	xor    DWORD PTR [rsi],ebp
   140010176:	xor    BYTE PTR [rsi],ch
   140010178:	xor    BYTE PTR [rdx],ah
   14001017a:	or     eax,0x2020200a
   14001017f:	and    BYTE PTR [rax+0x72],dh
   140010182:	outs   dx,DWORD PTR ds:[rsi]
   140010183:	movsxd esp,DWORD PTR [rbp+0x73]
   140010186:	jae    0x1400101f7
   140010188:	jb     0x1400101cb
   14001018a:	jb     0x1400101ef
   14001018c:	push   0x63657469
   140010191:	je     0x140010208
   140010193:	jb     0x1400101fa
   140010195:	cmp    eax,0x646d6122
   14001019a:	ss xor al,0x22
   14001019d:	or     eax,0x2020200a
   1400101a2:	and    BYTE PTR [rsi+0x61],ch
   1400101a5:	ins    DWORD PTR es:[rdi],dx
   1400101a6:	gs cmp eax,0x63694d22
   1400101ac:	jb     0x14001021d
   1400101ae:	jae    0x14001021f
   1400101b0:	data16 je 0x1400101e1
   1400101b3:	push   rdi
   1400101b4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400101bb:	push   rdi
   1400101bc:	rex.WRB
   1400101bd:	rex.WB
   1400101be:	cs push rbp
   1400101c0:	outs   dx,BYTE PTR ds:[rsi]
   1400101c1:	jae    0x140010228
   1400101c3:	movsxd eax,DWORD PTR [rcx+0x70]
   1400101c6:	jo     0x1400101ea
   1400101c8:	or     eax,0x2020200a
   1400101cd:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400101d1:	gs cmp eax,0x6e697722
   1400101d7:	xor    esi,DWORD PTR [rdx]
   1400101d9:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f30e9
   1400101df:	or     bh,BYTE PTR [rsp+riz*2]
   1400101e2:	gs jae 0x140010248
   1400101e5:	jb     0x140010250
   1400101e7:	jo     0x14001025d
   1400101e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x736e553e
   1400101f0:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400101f4:	gs and BYTE PTR fs:[rcx+0x70],ah
   1400101f9:	jo     0x14001025c
   1400101fb:	jb     0x140010271
   1400101fd:	ins    DWORD PTR es:[rdi],dx
   1400101fe:	outs   dx,BYTE PTR gs:[rsi]
   140010200:	je     0x14001023e
   140010202:	(bad)  
   140010203:	fs gs jae 0x14001026a
   140010207:	jb     0x140010272
   140010209:	jo     0x14001027f
   14001020b:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140010212:	or     bh,BYTE PTR [rsp+rsi*2]
   140010215:	jb     0x14001028c
   140010217:	jae    0x14001028d
   140010219:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001021b:	outs   dx,WORD PTR ds:[rsi]
   14001021d:	and    BYTE PTR [rax+0x6d],bh
   140010220:	ins    BYTE PTR es:[rdi],dx
   140010221:	outs   dx,BYTE PTR ds:[rsi]
   140010222:	jae    0x140010261
   140010224:	and    dh,BYTE PTR [rbp+0x72]
   140010227:	outs   dx,BYTE PTR ds:[rsi]
   140010228:	cmp    dh,BYTE PTR [rbx+0x63]
   14001022b:	push   0x73616d65
   140010230:	sub    eax,0x7263696d
   140010235:	outs   dx,DWORD PTR ds:[rsi]
   140010236:	jae    0x1400102a7
   140010238:	data16 je 0x140010268
   14001023b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001023e:	cmp    ah,BYTE PTR [rcx+0x73]
   140010241:	ins    DWORD PTR es:[rdi],dx
   140010242:	cs jbe 0x140010278
   140010245:	and    bh,BYTE PTR [rsi]
   140010247:	or     eax,0x2020200a
   14001024c:	and    BYTE PTR [rbx+rsi*2],bh
   14001024f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140010253:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001025b:	and    BYTE PTR [rax],ah
   14001025d:	and    BYTE PTR [rax],ah
   14001025f:	and    BYTE PTR [rax],ah
   140010261:	cmp    al,0x72
   140010263:	gs jno 0x1400102db
   140010266:	gs jae 0x1400102dd
   140010269:	gs fs push rax
   14001026c:	jb     0x1400102d7
   14001026e:	jbe    0x1400102d9
   140010270:	ins    BYTE PTR es:[rdi],dx
   140010271:	gs addr32 gs jae 0x1400102b4
   140010276:	or     eax,0x2020200a
   14001027b:	and    BYTE PTR [rax],ah
   14001027d:	and    BYTE PTR [rax],ah
   14001027f:	and    BYTE PTR [rax],ah
   140010281:	and    BYTE PTR [rax],ah
   140010283:	and    BYTE PTR [rdx+rsi*2],bh
   140010286:	gs jno 0x1400102fe
   140010289:	gs jae 0x140010300
   14001028c:	gs fs rex.RB js 0x1400102f6
   140010291:	movsxd esi,DWORD PTR [rbp+0x74]
   140010294:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001029b:	ins    BYTE PTR es:[rdi],dx
   14001029c:	or     eax,0x2020200a
   1400102a1:	and    BYTE PTR [rax],ah
   1400102a3:	and    BYTE PTR [rax],ah
   1400102a5:	and    BYTE PTR [rax],ah
   1400102a7:	and    BYTE PTR [rax],ah
   1400102a9:	and    BYTE PTR [rax],ah
   1400102ab:	and    BYTE PTR [rax],ah
   1400102ad:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400102b1:	gs ins BYTE PTR es:[rdi],dx
   1400102b3:	cmp    eax,0x49736122
   1400102b8:	outs   dx,BYTE PTR ds:[rsi]
   1400102b9:	jbe    0x14001032a
   1400102bb:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400102bf:	or     eax,0x2020200a
   1400102c4:	and    BYTE PTR [rax],ah
   1400102c6:	and    BYTE PTR [rax],ah
   1400102c8:	and    BYTE PTR [rax],ah
   1400102ca:	and    BYTE PTR [rax],ah
   1400102cc:	and    BYTE PTR [rax],ah
   1400102ce:	and    BYTE PTR [rax],ah
   1400102d0:	and    BYTE PTR [rbp+0x69],dh
   1400102d3:	movsxd esp,DWORD PTR [r11+0x65]
   1400102d7:	jae    0x14001034c
   1400102d9:	cmp    eax,0x6c616622
   1400102de:	jae    0x140010345
   1400102e0:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602122f0
   1400102e6:	and    BYTE PTR [rax],ah
   1400102e8:	and    BYTE PTR [rax],ah
   1400102ea:	and    BYTE PTR [rax],ah
   1400102ec:	and    BYTE PTR [rax],ah
   1400102ee:	and    BYTE PTR [rdi],ch
   1400102f0:	ds or  eax,0x2020200a
   1400102f6:	and    BYTE PTR [rax],ah
   1400102f8:	and    BYTE PTR [rax],ah
   1400102fa:	and    BYTE PTR [rdi+rbp*1],bh
   1400102fd:	jb     0x140010364
   1400102ff:	jno    0x140010376
   140010301:	gs jae 0x140010378
   140010304:	gs fs push rax
   140010307:	jb     0x140010372
   140010309:	jbe    0x140010374
   14001030b:	ins    BYTE PTR es:[rdi],dx
   14001030c:	gs addr32 gs jae 0x14001034f
   140010311:	or     eax,0x2020200a
   140010316:	and    BYTE PTR [rdi+rbp*1],bh
   140010319:	jae    0x140010380
   14001031b:	movsxd esi,DWORD PTR [rbp+0x72]
   14001031e:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140010326:	je     0x14001039a
   140010328:	jne    0x14001039d
   14001032a:	je     0x140010375
   14001032c:	outs   dx,BYTE PTR ds:[rsi]
   14001032d:	outs   dx,WORD PTR ds:[rsi]
   14001032f:	ds or  eax,0x612f3c0a
   140010335:	jae    0x1400103aa
   140010337:	gs ins DWORD PTR es:[rdi],dx
   140010339:	(bad)  
   14001033a:	ins    BYTE PTR es:[rdi],dx
   14001033b:	jns    0x14001037b
   14001033d:	or     eax,0x3f0000a
   140010342:	xor    al,0x0
   140010344:	add    BYTE PTR [rax],al
   140010346:	push   rsi
   140010347:	add    BYTE PTR [rbx+0x0],dl
   14001034a:	pop    rdi
   14001034b:	add    BYTE PTR [rsi+0x0],dl
   14001034e:	add    BYTE PTR [r10+0x0],r10b
   140010352:	push   rbx
   140010353:	add    BYTE PTR [rcx+0x0],cl
   140010356:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001035a:	pop    rdi
   14001035b:	add    BYTE PTR [rcx+0x0],cl
   14001035e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140010362:	rex.WRXB add BYTE PTR [r8],r8b
   140010365:	add    BYTE PTR [rax],al
   140010367:	add    BYTE PTR [rbp+0xfeef04],bh
   14001036d:	add    BYTE PTR [rcx],al
   14001036f:	add    BYTE PTR [rax],al
   140010371:	add    BYTE PTR [rdx],cl
   140010373:	add    BYTE PTR [rax],al
   140010375:	add    BYTE PTR [rax],bpl
   140010378:	add    BYTE PTR [rax],al
   14001037a:	or     al,BYTE PTR [rax]
   14001037c:	add    BYTE PTR [rax+0x0],al
   14001037f:	sub    BYTE PTR [rdi],bh
   140010381:	add    BYTE PTR [rax],al
   140010383:	add    BYTE PTR [rax],al
   140010385:	add    BYTE PTR [rax],al
   140010387:	add    BYTE PTR [rax+rax*1],al
   14001038a:	add    al,0x0
   14001038c:	add    DWORD PTR [rax],eax
	...
   14001039a:	add    BYTE PTR [rax],al
   14001039c:	rex.WRX add r8,QWORD PTR [rax]
   14001039f:	add    BYTE PTR [rcx],al
   1400103a1:	add    BYTE PTR [rbx+0x0],dl
   1400103a4:	je     0x1400103a6
   1400103a6:	jb     0x1400103a8
   1400103a8:	imul   eax,DWORD PTR [rax],0x67006e
   1400103ae:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400103b2:	ins    BYTE PTR es:[rdi],dx
   1400103b3:	add    BYTE PTR [rbp+0x0],ah
   1400103b6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400103ba:	data16 add BYTE PTR [rdi+0x0],ch
   1400103be:	add    BYTE PTR [rax],al
   1400103c0:	sub    al,BYTE PTR [rbx]
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	add    DWORD PTR [rax],eax
   1400103c6:	xor    BYTE PTR [rax],al
   1400103c8:	xor    al,0x0
   1400103ca:	xor    BYTE PTR [rax],al
   1400103cc:	cmp    DWORD PTR [rax],eax
   1400103ce:	xor    BYTE PTR [rax],al
   1400103d0:	xor    al,0x0
   1400103d2:	rex.X add BYTE PTR [rax],sil
   1400103d5:	add    BYTE PTR [rax],al
   1400103d7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400103db:	add    BYTE PTR [rcx],al
   1400103dd:	add    BYTE PTR [rbx+0x0],al
   1400103e0:	outs   dx,DWORD PTR ds:[rsi]
   1400103e1:	add    BYTE PTR [rbp+0x0],ch
   1400103e4:	jo     0x1400103e6
   1400103e6:	(bad)  
   1400103e7:	add    BYTE PTR [rsi+0x0],ch
   1400103ea:	jns    0x1400103ec
   1400103ec:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400103f0:	ins    DWORD PTR es:[rdi],dx
   1400103f1:	add    BYTE PTR [rbp+0x0],ah
   1400103f4:	add    BYTE PTR [rax],al
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400103fc:	movsxd eax,DWORD PTR [rax]
   1400103fe:	jb     0x140010400
   140010400:	outs   dx,DWORD PTR ds:[rsi]
   140010401:	add    BYTE PTR [rbx+0x0],dh
   140010404:	outs   dx,DWORD PTR ds:[rsi]
   140010405:	add    BYTE PTR [rsi+0x0],ah
   140010408:	je     0x14001040a
   14001040a:	and    BYTE PTR [rax],al
   14001040c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140010410:	jb     0x140010412
   140010412:	jo     0x140010414
   140010414:	outs   dx,DWORD PTR ds:[rsi]
   140010415:	add    BYTE PTR [rdx+0x0],dh
   140010418:	(bad)  
   140010419:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001041d:	add    BYTE PTR [rdi+0x0],ch
   140010420:	outs   dx,BYTE PTR ds:[rsi]
   140010421:	add    BYTE PTR [rax],al
   140010423:	add    BYTE PTR [rax+rax*1+0x10042],ch
   14001042a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001042e:	ins    BYTE PTR es:[rdi],dx
   14001042f:	add    BYTE PTR [rbp+0x0],ah
   140010432:	add    BYTE PTR [rbp+0x0],r12b
   140010436:	jae    0x140010438
   140010438:	movsxd eax,DWORD PTR [rax]
   14001043a:	jb     0x14001043c
   14001043c:	imul   eax,DWORD PTR [rax],0x740070
   140010442:	imul   eax,DWORD PTR [rax],0x6e006f
   140010448:	add    BYTE PTR [rax],al
   14001044a:	add    BYTE PTR [rax],al
   14001044c:	push   rbx
   14001044d:	add    BYTE PTR [rcx+0x0],ch
   140010450:	outs   dx,BYTE PTR ds:[rsi]
   140010451:	add    BYTE PTR [rbx+0x0],ch
   140010454:	and    BYTE PTR [rax],al
   140010456:	je     0x140010458
   140010458:	outs   dx,DWORD PTR ds:[rsi]
   140010459:	add    BYTE PTR [rax],ah
   14001045b:	add    BYTE PTR [rdx+0x0],dh
   14001045e:	add    BYTE PTR gs:[rbx+0x0],ah
   140010462:	add    BYTE PTR gs:[rcx+0x0],ch
   140010466:	jbe    0x140010468
   140010468:	add    BYTE PTR gs:[rax],ah
   14001046b:	add    BYTE PTR [rcx+0x0],ah
   14001046e:	jae    0x140010470
   140010470:	jns    0x140010472
   140010472:	outs   dx,BYTE PTR ds:[rsi]
   140010473:	add    BYTE PTR [rbx+0x0],ah
   140010476:	push   0x6f007200
   14001047b:	add    BYTE PTR [rsi+0x0],ch
   14001047e:	outs   dx,DWORD PTR ds:[rsi]
   14001047f:	add    BYTE PTR [rbp+0x0],dh
   140010482:	jae    0x140010484
   140010484:	and    BYTE PTR [rax],al
   140010486:	movsxd eax,DWORD PTR [rax]
   140010488:	(bad)  
   140010489:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001048d:	add    BYTE PTR [rdx+0x0],ah
   140010490:	(bad)  
   140010491:	add    BYTE PTR [rbx+0x0],ah
   140010494:	imul   eax,DWORD PTR [rax],0x73
   140010497:	add    BYTE PTR [rax],ah
   140010499:	add    BYTE PTR [rsi+0x0],ah
   14001049c:	outs   dx,DWORD PTR ds:[rsi]
   14001049d:	add    BYTE PTR [rdx+0x0],dh
   1400104a0:	and    BYTE PTR [rax],al
   1400104a2:	push   rdi
   1400104a3:	add    BYTE PTR [rbp+0x0],cl
   1400104a6:	rex.WB add BYTE PTR [r8],spl
   1400104a9:	add    BYTE PTR [rbx+0x0],ah
   1400104ac:	ins    BYTE PTR es:[rdi],dx
   1400104ad:	add    BYTE PTR [rcx+0x0],ch
   1400104b0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400104b4:	je     0x1400104b6
   1400104b6:	and    BYTE PTR [rax],al
   1400104b8:	(bad)  
   1400104b9:	add    BYTE PTR [rax+0x0],dh
   1400104bc:	jo     0x1400104be
   1400104be:	ins    BYTE PTR es:[rdi],dx
   1400104bf:	add    BYTE PTR [rcx+0x0],ch
   1400104c2:	movsxd eax,DWORD PTR [rax]
   1400104c4:	(bad)  
   1400104c5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400104c9:	add    BYTE PTR [rdi+0x0],ch
   1400104cc:	outs   dx,BYTE PTR ds:[rsi]
   1400104cd:	add    BYTE PTR [rax],al
   1400104cf:	add    BYTE PTR [rsi+0x0],ah
   1400104d2:	and    eax,DWORD PTR [rax]
   1400104d4:	add    DWORD PTR [rax],eax
   1400104d6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400104da:	ins    BYTE PTR es:[rdi],dx
   1400104db:	add    BYTE PTR [rbp+0x0],ah
   1400104de:	push   rsi
   1400104df:	add    BYTE PTR [rbp+0x0],ah
   1400104e2:	jb     0x1400104e4
   1400104e4:	jae    0x1400104e6
   1400104e6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400104ec:	add    BYTE PTR [rax],al
   1400104ee:	add    BYTE PTR [rax],al
   1400104f0:	xor    DWORD PTR [rax],eax
   1400104f2:	xor    BYTE PTR [rax],al
   1400104f4:	add    BYTE PTR cs:[rax],dh
   1400104f7:	add    BYTE PTR [rsi],ch
   1400104f9:	add    BYTE PTR [rcx],dh
   1400104fb:	add    BYTE PTR [rax],dh
   1400104fd:	add    BYTE PTR [rdx],dh
   1400104ff:	add    BYTE PTR [rax+rax*1],dh
   140010502:	xor    BYTE PTR [rax],al
   140010504:	add    BYTE PTR cs:[rcx],dh
   140010507:	add    BYTE PTR [rsi],dh
   140010509:	add    BYTE PTR [rbx],dh
   14001050b:	add    BYTE PTR [rax],bh
   14001050d:	add    BYTE PTR [rax+rax*1],dh
   140010510:	and    BYTE PTR [rax],al
   140010512:	sub    BYTE PTR [rax],al
   140010514:	je     0x140010516
   140010516:	push   0x2e003100
   14001051b:	add    BYTE PTR [rcx],dh
   14001051d:	add    BYTE PTR [rip+0x37003000],dh        # 0x177013523
   140010523:	add    BYTE PTR [rax],dh
   140010525:	add    BYTE PTR [rcx],bh
   140010527:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701362d
   14001052d:	add    BYTE PTR [rax],dh
   14001052f:	add    BYTE PTR [rax],dh
   140010531:	add    BYTE PTR [rcx],ch
   140010533:	add    BYTE PTR [rax],al
   140010535:	add    BYTE PTR [rax],al
   140010537:	add    BYTE PTR [rdx],bh
   140010539:	add    BYTE PTR [rip+0x49000100],cl        # 0x18901063f
   14001053f:	add    BYTE PTR [rsi+0x0],ch
   140010542:	je     0x140010544
   140010544:	add    BYTE PTR gs:[rdx+0x0],dh
   140010548:	outs   dx,BYTE PTR ds:[rsi]
   140010549:	add    BYTE PTR [rcx+0x0],ah
   14001054c:	ins    BYTE PTR es:[rdi],dx
   14001054d:	add    BYTE PTR [rsi+0x0],cl
   140010550:	(bad)  
   140010551:	add    BYTE PTR [rbp+0x0],ch
   140010554:	add    BYTE PTR gs:[rax],al
   140010557:	add    BYTE PTR [rbp+0x0],dh
   14001055a:	outs   dx,BYTE PTR ds:[rsi]
   14001055b:	add    BYTE PTR [rbx+0x0],dh
   14001055e:	add    BYTE PTR gs:[rbx+0x0],ah
   140010562:	(bad)  
   140010563:	add    BYTE PTR [rax+0x0],dh
   140010566:	jo     0x140010568
   140010568:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14001056d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140010571:	add    BYTE PTR [rax],al
   140010573:	add    BYTE PTR [rax+0x1002e00],al
   140010579:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001057d:	add    BYTE PTR [rdi+0x0],ah
   140010580:	(bad)  
   140010581:	add    BYTE PTR [rax+rax*1+0x43],ch
   140010585:	add    BYTE PTR [rdi+0x0],ch
   140010588:	jo     0x14001058a
   14001058a:	jns    0x14001058c
   14001058c:	jb     0x14001058e
   14001058e:	imul   eax,DWORD PTR [rax],0x680067
   140010594:	je     0x140010596
   140010596:	add    BYTE PTR [rax],al
   140010598:	test   eax,0x4d002000
   14001059d:	add    BYTE PTR [rcx+0x0],ch
   1400105a0:	movsxd eax,DWORD PTR [rax]
   1400105a2:	jb     0x1400105a4
   1400105a4:	outs   dx,DWORD PTR ds:[rsi]
   1400105a5:	add    BYTE PTR [rbx+0x0],dh
   1400105a8:	outs   dx,DWORD PTR ds:[rsi]
   1400105a9:	add    BYTE PTR [rsi+0x0],ah
   1400105ac:	je     0x1400105ae
   1400105ae:	and    BYTE PTR [rax],al
   1400105b0:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400105b4:	jb     0x1400105b6
   1400105b6:	jo     0x1400105b8
   1400105b8:	outs   dx,DWORD PTR ds:[rsi]
   1400105b9:	add    BYTE PTR [rdx+0x0],dh
   1400105bc:	(bad)  
   1400105bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400105c1:	add    BYTE PTR [rdi+0x0],ch
   1400105c4:	outs   dx,BYTE PTR ds:[rsi]
   1400105c5:	add    BYTE PTR [rsi],ch
   1400105c7:	add    BYTE PTR [rax],ah
   1400105c9:	add    BYTE PTR [rcx+0x0],al
   1400105cc:	ins    BYTE PTR es:[rdi],dx
   1400105cd:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400105d1:	add    BYTE PTR [rdx+0x0],dh
   1400105d4:	imul   eax,DWORD PTR [rax],0x680067
   1400105da:	je     0x1400105dc
   1400105dc:	jae    0x1400105de
   1400105de:	and    BYTE PTR [rax],al
   1400105e0:	jb     0x1400105e2
   1400105e2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400105e6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400105ea:	jbe    0x1400105ec
   1400105ec:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400105f1:	add    BYTE PTR [rax],al
   1400105f3:	add    BYTE PTR [rdx+0x0],al
   1400105f6:	or     eax,0x4f000100
   1400105fb:	add    BYTE PTR [rdx+0x0],dh
   1400105fe:	imul   eax,DWORD PTR [rax],0x690067
   140010604:	outs   dx,BYTE PTR ds:[rsi]
   140010605:	add    BYTE PTR [rcx+0x0],ah
   140010608:	ins    BYTE PTR es:[rdi],dx
   140010609:	add    BYTE PTR [rsi+0x0],al
   14001060c:	imul   eax,DWORD PTR [rax],0x65006c
   140010612:	outs   dx,BYTE PTR ds:[rsi]
   140010613:	add    BYTE PTR [rcx+0x0],ah
   140010616:	ins    DWORD PTR es:[rdi],dx
   140010617:	add    BYTE PTR [rbp+0x0],ah
   14001061a:	add    BYTE PTR [rax],al
   14001061c:	jne    0x14001061e
   14001061e:	outs   dx,BYTE PTR ds:[rsi]
   14001061f:	add    BYTE PTR [rbx+0x0],dh
   140010622:	add    BYTE PTR gs:[rbx+0x0],ah
   140010626:	(bad)  
   140010627:	add    BYTE PTR [rax+0x0],dh
   14001062a:	jo     0x14001062c
   14001062c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140010631:	add    BYTE PTR [rax+rax*1+0x0],ch
   140010635:	add    BYTE PTR [rax],al
   140010637:	add    BYTE PTR [rdx+0x0],ch
   14001063a:	and    eax,0x50000100
   14001063f:	add    BYTE PTR [rdx+0x0],dh
   140010642:	outs   dx,DWORD PTR ds:[rsi]
   140010643:	add    BYTE PTR [rax+rax*1+0x75],ah
   140010647:	add    BYTE PTR [rbx+0x0],ah
   14001064a:	je     0x14001064c
   14001064c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010650:	ins    DWORD PTR es:[rdi],dx
   140010651:	add    BYTE PTR [rbp+0x0],ah
   140010654:	add    BYTE PTR [rax],al
   140010656:	add    BYTE PTR [rax],al
   140010658:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001065c:	movsxd eax,DWORD PTR [rax]
   14001065e:	jb     0x140010660
   140010660:	outs   dx,DWORD PTR ds:[rsi]
   140010661:	add    BYTE PTR [rbx+0x0],dh
   140010664:	outs   dx,DWORD PTR ds:[rsi]
   140010665:	add    BYTE PTR [rsi+0x0],ah
   140010668:	je     0x14001066a
   14001066a:	scas   al,BYTE PTR es:[rdi]
   14001066b:	add    BYTE PTR [rax],ah
   14001066d:	add    BYTE PTR [rdi+0x0],dl
   140010670:	imul   eax,DWORD PTR [rax],0x64006e
   140010676:	outs   dx,DWORD PTR ds:[rsi]
   140010677:	add    BYTE PTR [rdi+0x0],dh
   14001067a:	jae    0x14001067c
   14001067c:	scas   al,BYTE PTR es:[rdi]
   14001067d:	add    BYTE PTR [rax],ah
   14001067f:	add    BYTE PTR [rdi+0x0],cl
   140010682:	jo     0x140010684
   140010684:	add    BYTE PTR gs:[rdx+0x0],dh
   140010688:	(bad)  
   140010689:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001068d:	add    BYTE PTR [rsi+0x0],ch
   140010690:	add    BYTE PTR [eax],ah
   140010693:	add    BYTE PTR [rbx+0x0],dl
   140010696:	jns    0x140010698
   140010698:	jae    0x14001069a
   14001069a:	je     0x14001069c
   14001069c:	add    BYTE PTR gs:[rbp+0x0],ch
   1400106a0:	add    BYTE PTR [rax],al
   1400106a2:	add    BYTE PTR [rax],al
   1400106a4:	rex.RX add BYTE PTR [rcx],r10b
   1400106a7:	add    BYTE PTR [rcx],al
   1400106a9:	add    BYTE PTR [rax+0x0],dl
   1400106ac:	jb     0x1400106ae
   1400106ae:	outs   dx,DWORD PTR ds:[rsi]
   1400106af:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400106b3:	add    BYTE PTR [rbx+0x0],ah
   1400106b6:	je     0x1400106b8
   1400106b8:	push   rsi
   1400106b9:	add    BYTE PTR [rbp+0x0],ah
   1400106bc:	jb     0x1400106be
   1400106be:	jae    0x1400106c0
   1400106c0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	xor    DWORD PTR [rax],eax
   1400106ca:	xor    BYTE PTR [rax],al
   1400106cc:	add    BYTE PTR cs:[rax],dh
   1400106cf:	add    BYTE PTR [rsi],ch
   1400106d1:	add    BYTE PTR [rcx],dh
   1400106d3:	add    BYTE PTR [rax],dh
   1400106d5:	add    BYTE PTR [rdx],dh
   1400106d7:	add    BYTE PTR [rax+rax*1],dh
   1400106da:	xor    BYTE PTR [rax],al
   1400106dc:	add    BYTE PTR cs:[rcx],dh
   1400106df:	add    BYTE PTR [rsi],dh
   1400106e1:	add    BYTE PTR [rbx],dh
   1400106e3:	add    BYTE PTR [rax],bh
   1400106e5:	add    BYTE PTR [rax+rax*1],dh
   1400106e8:	add    BYTE PTR [rax],al
   1400106ea:	add    BYTE PTR [rax],al
   1400106ec:	add    BYTE PTR [rax],r8b
   1400106ef:	add    BYTE PTR [rcx],al
   1400106f1:	add    BYTE PTR [rsi+0x0],dl
   1400106f4:	(bad)  
   1400106f5:	add    BYTE PTR [rdx+0x0],dh
   1400106f8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400106fc:	ins    BYTE PTR es:[rdi],dx
   1400106fd:	add    BYTE PTR [rbp+0x0],ah
   140010700:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010704:	data16 add BYTE PTR [rdi+0x0],ch
   140010708:	add    BYTE PTR [rax],al
   14001070a:	add    BYTE PTR [rax],al
   14001070c:	and    al,0x0
   14001070e:	add    al,0x0
   140010710:	add    BYTE PTR [rax],al
   140010712:	push   rsp
   140010713:	add    BYTE PTR [rdx+0x0],dh
   140010716:	(bad)  
   140010717:	add    BYTE PTR [rsi+0x0],ch
   14001071a:	jae    0x14001071c
   14001071c:	ins    BYTE PTR es:[rdi],dx
   14001071d:	add    BYTE PTR [rcx+0x0],ah
   140010720:	je     0x140010722
   140010722:	imul   eax,DWORD PTR [rax],0x6e006f
   140010728:	add    BYTE PTR [rax],al
   14001072a:	add    BYTE PTR [rax],al
   14001072c:	or     DWORD PTR [rax+rsi*4],eax
   14001072f:	.byte 0x4

Disassembly of section .reloc:

0000000140011000 <.reloc>:
   140011000:	add    BYTE PTR [rax+0xd00000],al
   140011006:	add    BYTE PTR [rax],al
   140011008:	jo     0x140010fae
   14001100a:	js     0x140010fb0
   14001100c:	mov    BYTE PTR [rax+rdx*4-0x4f5b675c],ah
   140011013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011014:	mov    eax,0xe8a6e0a4
   140011019:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001101a:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001101c:	and    BYTE PTR [rdi-0x58cf58d8],ah
   140011022:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011024:	push   rax
   140011025:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011026:	shl    BYTE PTR [rdi-0x57175820],1
   14001102c:	lock test al,0xf8
   14001102f:	test   al,0x0
   140011031:	test   eax,0xa910a908
   140011036:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14001103c:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140011042:	test   rax,0xffffffffa958a950
   140011048:	(bad)  
   140011049:	test   eax,0xa970a968
   14001104e:	js     0x140010ff9
   140011050:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140011057:	test   eax,0xa9a8a9a0
   14001105c:	mov    al,0xa9
   14001105e:	mov    eax,0xc8a9c0a9
   140011063:	test   eax,0xa9d8a9d0
   140011068:	loopne 0x140011013
   14001106a:	call   0x138ab0118
   14001106f:	test   eax,0xaa08aa00
   140011074:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14001107a:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140011080:	stos   BYTE PTR es:[rdi],al
   140011082:	rex.W stos BYTE PTR es:[rdi],al
   140011084:	push   rax
   140011085:	stos   BYTE PTR es:[rdi],al
   140011086:	pop    rax
   140011087:	stos   BYTE PTR es:[rdi],al
   140011088:	(bad)  
   140011089:	stos   BYTE PTR es:[rdi],al
   14001108a:	push   0x78aa70aa
   14001108f:	stos   BYTE PTR es:[rdi],al
   140011090:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140011097:	stos   BYTE PTR es:[rdi],al
   140011098:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400110a1:	stos   BYTE PTR es:[rdi],al
   1400110a2:	enter  0xd0aa,0xaa
   1400110a6:	fsubr  DWORD PTR [rdx-0x55175520]
   1400110ac:	lock stos BYTE PTR es:[rdi],al
   1400110ae:	clc    
   1400110af:	stos   BYTE PTR es:[rdi],al
   1400110b0:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400110b6:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400110bc:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   1400110c2:	stos   QWORD PTR es:[rdi],rax
   1400110c4:	push   rax
   1400110c5:	stos   DWORD PTR es:[rdi],eax
   1400110c6:	pop    rax
   1400110c7:	stos   DWORD PTR es:[rdi],eax
   1400110c8:	(bad)  
   1400110c9:	stos   DWORD PTR es:[rdi],eax
   1400110ca:	push   0xab70ab
   1400110cf:	add    BYTE PTR [rax],al
   1400110d1:	nop
   1400110d2:	add    BYTE PTR [rax],al
   1400110d4:	adc    BYTE PTR [rax],al
   1400110d6:	add    BYTE PTR [rax],al
   1400110d8:	sbb    BYTE PTR [rdi-0x58c758d0],ah
   1400110de:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400110e0:	add    al,dl
   1400110e2:	add    BYTE PTR [rax],al
   1400110e4:	and    al,0x0
   1400110e6:	add    BYTE PTR [rax],al
   1400110e8:	and    BYTE PTR [rax-0x5fc75fd0],ah
   1400110ee:	movabs al,ds:0xa0b0a088a050a048
   1400110f8:	loopne 0x14001109a
   1400110fa:	or     BYTE PTR [rcx-0x5ea75ed0],ah
   140011100:	and    BYTE PTR [rcx-0xfff5e60],0x0
   140011107:	add    BYTE PTR [rax+rax*1],dl
   14001110a:	add    BYTE PTR [rax],al
   14001110c:	add    BYTE PTR [rax-0x5fef5ff8],ah
   140011112:	sbb    BYTE PTR [rax-0x5fcf5fe0],ah
