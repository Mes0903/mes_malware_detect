
a424039a96d86ff186981223fe2e78392135fd2ba7a574d73840c4d56a381e39.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x5485]        # 0x4064a0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x5486]        # 0x4064b0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x5489]        # 0x4064c0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x544c]        # 0x406490
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x52ff]        # 0x406350
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5421]        # 0x406480
  40105f:	mov    DWORD PTR [rip+0x7fa3],edx        # 0x409008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402b88
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401b40
  401081:	mov    rdx,QWORD PTR [rip+0x5358]        # 0x4063e0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x533e]        # 0x4063d0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x53a4]        # 0x406440
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x52db]        # 0x406380
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401720
  4010af:	mov    rax,QWORD PTR [rip+0x524a]        # 0x406300
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402b88
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x8f9]        # 0x401a20
  401127:	call   0x401a10
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5305]        # 0x406470
  40116b:	lea    r8,[rip+0x7ea6]        # 0x409018
  401172:	lea    rdx,[rip+0x7ea7]        # 0x409020
  401179:	lea    rcx,[rip+0x7ea8]        # 0x409028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x7e78],eax        # 0x409000
  401188:	lea    rax,[rip+0x7e71]        # 0x409000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x5295]        # 0x406430
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402ba0
  4011a3:	mov    DWORD PTR [rip+0x7e67],eax        # 0x409010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x52ba]        # 0x406480
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x51bb]        # 0x4063b0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x915e]        # 0x40a360
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x5197]        # 0x4063c0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x7dba],0x1        # 0x409004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x50dc]        # 0x406340
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d30
  40127d:	lea    rcx,[rip+0x104c]        # 0x4022d0
  401284:	call   QWORD PTR [rip+0x90ce]        # 0x40a358
  40128a:	mov    rdx,QWORD PTR [rip+0x510f]        # 0x4063a0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4021e0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402bd0
  4012a5:	call   0x401b20
  4012aa:	mov    rax,QWORD PTR [rip+0x509f]        # 0x406350
  4012b1:	mov    QWORD PTR [rip+0x8750],rax        # 0x409a08
  4012b8:	mov    rax,QWORD PTR [rip+0x50b1]        # 0x406370
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x86e9],rax        # 0x409a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1cca],eax        # 0x403000
  401336:	mov    r12d,DWORD PTR [rip+0x7ceb]        # 0x409028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b10
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x7cc2]        # 0x409020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402af8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b10
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b08
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x7c6a],rbp        # 0x409020
  4013b6:	call   0x4016f0
  4013bb:	mov    rax,QWORD PTR [rip+0x4f9e]        # 0x406360
  4013c2:	mov    rdx,QWORD PTR [rip+0x7c4f]        # 0x409018
  4013c9:	mov    ecx,DWORD PTR [rip+0x7c59]        # 0x409028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x7c3c]        # 0x409018
  4013dc:	mov    rdx,QWORD PTR [rip+0x7c3d]        # 0x409020
  4013e3:	call   0x402ca0
  4013e8:	mov    ecx,DWORD PTR [rip+0x7c1a]        # 0x409008
  4013ee:	mov    DWORD PTR [rip+0x7c18],eax        # 0x40900c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x7c02]        # 0x409004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b70
  40140b:	mov    eax,DWORD PTR [rip+0x7bfb]        # 0x40900c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x4f89]        # 0x4063c0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402b78
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x4f9d]        # 0x406400
  401463:	mov    rcx,QWORD PTR [rip+0x4f86]        # 0x4063f0
  40146a:	call   0x402b68
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x8e6f]        # 0x40a308
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x4f79]        # 0x406420
  4014a7:	mov    rcx,QWORD PTR [rip+0x4f62]        # 0x406410
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b68
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b30
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4fa5]        # 0x406480
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401730
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x4f75]        # 0x406480
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401730
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x8d8a]        # 0x40a2c0
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x8d7a]        # 0x40a2b8
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x8d62]        # 0x40a2a8
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x8d52]        # 0x40a2a0
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x8d42]        # 0x40a298
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x8d32]        # 0x40a290
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x8d22]        # 0x40a288
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x8d12]        # 0x40a280
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x8d02]        # 0x40a278
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x8cf2]        # 0x40a270
  40157e:	nop
  40157f:	nop
  401580:	push   rbx
  401581:	sub    rsp,0x30
  401585:	mov    rbx,rcx
  401588:	mov    rcx,QWORD PTR [rip+0x8481]        # 0x409a10
  40158f:	call   0x401b30
  401594:	cmp    rax,0xffffffffffffffff
  401598:	mov    QWORD PTR [rsp+0x20],rax
  40159d:	je     0x401615
  40159f:	mov    ecx,0x8
  4015a4:	call   0x402b60
  4015a9:	mov    rcx,QWORD PTR [rip+0x8460]        # 0x409a10
  4015b0:	call   0x401b30
  4015b5:	mov    rcx,QWORD PTR [rip+0x845c]        # 0x409a18
  4015bc:	mov    QWORD PTR [rsp+0x20],rax
  4015c1:	call   0x401b30
  4015c6:	lea    rdx,[rsp+0x20]
  4015cb:	lea    r8,[rsp+0x28]
  4015d0:	mov    rcx,rbx
  4015d3:	mov    QWORD PTR [rsp+0x28],rax
  4015d8:	call   0x402ba8
  4015dd:	mov    rcx,QWORD PTR [rsp+0x20]
  4015e2:	mov    rbx,rax
  4015e5:	call   0x401b40
  4015ea:	mov    rcx,QWORD PTR [rsp+0x28]
  4015ef:	mov    QWORD PTR [rip+0x841a],rax        # 0x409a10
  4015f6:	call   0x401b40
  4015fb:	mov    ecx,0x8
  401600:	mov    QWORD PTR [rip+0x8411],rax        # 0x409a18
  401607:	call   0x402b48
  40160c:	mov    rax,rbx
  40160f:	add    rsp,0x30
  401613:	pop    rbx
  401614:	ret    
  401615:	mov    rax,QWORD PTR [rip+0x4d74]        # 0x406390
  40161c:	mov    rcx,rbx
  40161f:	call   QWORD PTR [rax]
  401621:	add    rsp,0x30
  401625:	pop    rbx
  401626:	ret    
  401627:	nop    WORD PTR [rax+rax*1+0x0]
  401630:	sub    rsp,0x28
  401634:	call   0x401580
  401639:	test   rax,rax
  40163c:	sete   al
  40163f:	movzx  eax,al
  401642:	neg    eax
  401644:	add    rsp,0x28
  401648:	ret    
  401649:	nop
  40164a:	nop
  40164b:	nop
  40164c:	nop
  40164d:	nop
  40164e:	nop
  40164f:	nop
  401650:	sub    rsp,0x28
  401654:	mov    rax,QWORD PTR [rip+0x4465]        # 0x405ac0
  40165b:	mov    rax,QWORD PTR [rax]
  40165e:	test   rax,rax
  401661:	je     0x401680
  401663:	call   rax
  401665:	mov    rax,QWORD PTR [rip+0x4454]        # 0x405ac0
  40166c:	lea    rdx,[rax+0x8]
  401670:	mov    rax,QWORD PTR [rax+0x8]
  401674:	mov    QWORD PTR [rip+0x4445],rdx        # 0x405ac0
  40167b:	test   rax,rax
  40167e:	jne    0x401663
  401680:	add    rsp,0x28
  401684:	ret    
  401685:	nop
  401686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401690:	push   rsi
  401691:	push   rbx
  401692:	sub    rsp,0x28
  401696:	mov    rsi,QWORD PTR [rip+0x4c73]        # 0x406310
  40169d:	mov    rax,QWORD PTR [rsi]
  4016a0:	cmp    eax,0xffffffff
  4016a3:	mov    ebx,eax
  4016a5:	je     0x4016d0
  4016a7:	test   ebx,ebx
  4016a9:	je     0x4016ba
  4016ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4016b0:	mov    eax,ebx
  4016b2:	call   QWORD PTR [rsi+rax*8]
  4016b5:	sub    ebx,0x1
  4016b8:	jne    0x4016b0
  4016ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401650
  4016c1:	add    rsp,0x28
  4016c5:	pop    rbx
  4016c6:	pop    rsi
  4016c7:	jmp    0x401630
  4016cc:	nop    DWORD PTR [rax+0x0]
  4016d0:	xor    ebx,ebx
  4016d2:	jmp    0x4016d6
  4016d4:	mov    ebx,eax
  4016d6:	lea    edx,[rbx+0x1]
  4016d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4016de:	mov    rax,rdx
  4016e1:	jne    0x4016d4
  4016e3:	jmp    0x4016a7
  4016e5:	nop
  4016e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	mov    eax,DWORD PTR [rip+0x793a]        # 0x409030
  4016f6:	test   eax,eax
  4016f8:	je     0x401700
  4016fa:	repz ret 
  4016fc:	nop    DWORD PTR [rax+0x0]
  401700:	mov    DWORD PTR [rip+0x7926],0x1        # 0x409030
  40170a:	jmp    0x401690
  40170c:	nop
  40170d:	nop
  40170e:	nop
  40170f:	nop
  401710:	mov    rax,QWORD PTR [rip+0x8ca9]        # 0x40a3c0
  401717:	rex.W jmp rax
  40171a:	nop
  40171b:	nop
  40171c:	nop
  40171d:	nop
  40171e:	nop
  40171f:	nop
  401720:	xor    eax,eax
  401722:	ret    
  401723:	nop
  401724:	nop
  401725:	nop
  401726:	nop
  401727:	nop
  401728:	nop
  401729:	nop
  40172a:	nop
  40172b:	nop
  40172c:	nop
  40172d:	nop
  40172e:	nop
  40172f:	nop
  401730:	push   r12
  401732:	push   rbp
  401733:	push   rdi
  401734:	push   rsi
  401735:	push   rbx
  401736:	sub    rsp,0x40
  40173a:	mov    rbx,QWORD PTR [rip+0x43df]        # 0x405b20
  401741:	movabs rax,0x2b992ddfa232
  40174b:	mov    QWORD PTR [rsp+0x20],0x0
  401754:	cmp    rbx,rax
  401757:	je     0x401770
  401759:	not    rbx
  40175c:	mov    QWORD PTR [rip+0x43cd],rbx        # 0x405b30
  401763:	add    rsp,0x40
  401767:	pop    rbx
  401768:	pop    rsi
  401769:	pop    rdi
  40176a:	pop    rbp
  40176b:	pop    r12
  40176d:	ret    
  40176e:	xchg   ax,ax
  401770:	lea    rcx,[rsp+0x20]
  401775:	call   QWORD PTR [rip+0x8b95]        # 0x40a310
  40177b:	mov    r12,QWORD PTR [rsp+0x20]
  401780:	call   QWORD PTR [rip+0x8b6a]        # 0x40a2f0
  401786:	mov    ebp,eax
  401788:	call   QWORD PTR [rip+0x8b6a]        # 0x40a2f8
  40178e:	mov    edi,eax
  401790:	call   QWORD PTR [rip+0x8b82]        # 0x40a318
  401796:	lea    rcx,[rsp+0x30]
  40179b:	mov    esi,eax
  40179d:	call   QWORD PTR [rip+0x8b8d]        # 0x40a330
  4017a3:	xor    r12,QWORD PTR [rsp+0x30]
  4017a8:	mov    edx,edi
  4017aa:	movabs rax,0xffffffffffff
  4017b4:	xor    rbp,r12
  4017b7:	mov    rdi,rbp
  4017ba:	xor    rdi,rdx
  4017bd:	mov    edx,esi
  4017bf:	xor    rdi,rdx
  4017c2:	mov    rsi,rdi
  4017c5:	and    rsi,rax
  4017c8:	cmp    rsi,rbx
  4017cb:	je     0x4017f0
  4017cd:	mov    rax,rsi
  4017d0:	not    rax
  4017d3:	mov    QWORD PTR [rip+0x4346],rsi        # 0x405b20
  4017da:	mov    QWORD PTR [rip+0x434f],rax        # 0x405b30
  4017e1:	add    rsp,0x40
  4017e5:	pop    rbx
  4017e6:	pop    rsi
  4017e7:	pop    rdi
  4017e8:	pop    rbp
  4017e9:	pop    r12
  4017eb:	ret    
  4017ec:	nop    DWORD PTR [rax+0x0]
  4017f0:	movabs rax,0xffffd466d2205dcc
  4017fa:	movabs rsi,0x2b992ddfa233
  401804:	jmp    0x4017d3
  401806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401810:	push   rbp
  401811:	push   rsi
  401812:	push   rbx
  401813:	mov    rbp,rsp
  401816:	sub    rsp,0x70
  40181a:	mov    rsi,rcx
  40181d:	lea    rcx,[rip+0x785c]        # 0x409080
  401824:	call   QWORD PTR [rip+0x8b16]        # 0x40a340
  40182a:	mov    rbx,QWORD PTR [rip+0x7947]        # 0x409178
  401831:	xor    r8d,r8d
  401834:	lea    rdx,[rbp-0x28]
  401838:	mov    rcx,rbx
  40183b:	call   QWORD PTR [rip+0x8b07]        # 0x40a348
  401841:	test   rax,rax
  401844:	mov    r9,rax
  401847:	je     0x4018f0
  40184d:	lea    rax,[rbp-0x20]
  401851:	mov    QWORD PTR [rsp+0x38],0x0
  40185a:	mov    r8,rbx
  40185d:	mov    rdx,QWORD PTR [rbp-0x28]
  401861:	xor    ecx,ecx
  401863:	mov    QWORD PTR [rsp+0x30],rax
  401868:	lea    rax,[rbp-0x18]
  40186c:	mov    QWORD PTR [rsp+0x28],rax
  401871:	lea    rax,[rip+0x7808]        # 0x409080
  401878:	mov    QWORD PTR [rsp+0x20],rax
  40187d:	call   QWORD PTR [rip+0x8acd]        # 0x40a350
  401883:	mov    rax,QWORD PTR [rip+0x78ee]        # 0x409178
  40188a:	xor    ecx,ecx
  40188c:	mov    QWORD PTR [rip+0x786d],rsi        # 0x409100
  401893:	mov    DWORD PTR [rip+0x7ce3],0xc0000409        # 0x409580
  40189d:	mov    DWORD PTR [rip+0x7cdd],0x1        # 0x409584
  4018a7:	mov    QWORD PTR [rip+0x7ce2],rax        # 0x409590
  4018ae:	mov    rax,QWORD PTR [rip+0x426b]        # 0x405b20
  4018b5:	mov    QWORD PTR [rbp-0x10],rax
  4018b9:	mov    rax,QWORD PTR [rip+0x4270]        # 0x405b30
  4018c0:	mov    QWORD PTR [rbp-0x8],rax
  4018c4:	call   QWORD PTR [rip+0x8a8e]        # 0x40a358
  4018ca:	lea    rcx,[rip+0x478f]        # 0x406060
  4018d1:	call   QWORD PTR [rip+0x8aa1]        # 0x40a378
  4018d7:	call   QWORD PTR [rip+0x8a0b]        # 0x40a2e8
  4018dd:	mov    edx,0xc0000409
  4018e2:	mov    rcx,rax
  4018e5:	call   QWORD PTR [rip+0x8a7d]        # 0x40a368
  4018eb:	call   0x402b40
  4018f0:	mov    rax,QWORD PTR [rbp+0x18]
  4018f4:	mov    QWORD PTR [rip+0x787d],rax        # 0x409178
  4018fb:	lea    rax,[rbp+0x8]
  4018ff:	mov    QWORD PTR [rip+0x7812],rax        # 0x409118
  401906:	jmp    0x401883
  40190b:	nop
  40190c:	nop
  40190d:	nop
  40190e:	nop
  40190f:	nop
  401910:	sub    rsp,0x28
  401914:	test   edx,edx
  401916:	je     0x401930
  401918:	cmp    edx,0x3
  40191b:	je     0x401930
  40191d:	mov    eax,0x1
  401922:	add    rsp,0x28
  401926:	ret    
  401927:	nop    WORD PTR [rax+rax*1+0x0]
  401930:	call   0x402620
  401935:	mov    eax,0x1
  40193a:	add    rsp,0x28
  40193e:	ret    
  40193f:	nop
  401940:	push   rsi
  401941:	push   rbx
  401942:	sub    rsp,0x28
  401946:	mov    rax,QWORD PTR [rip+0x49a3]        # 0x4062f0
  40194d:	cmp    DWORD PTR [rax],0x2
  401950:	je     0x401958
  401952:	mov    DWORD PTR [rax],0x2
  401958:	cmp    edx,0x2
  40195b:	je     0x401970
  40195d:	cmp    edx,0x1
  401960:	je     0x4019a2
  401962:	mov    eax,0x1
  401967:	add    rsp,0x28
  40196b:	pop    rbx
  40196c:	pop    rsi
  40196d:	ret    
  40196e:	xchg   ax,ax
  401970:	lea    rbx,[rip+0x96e9]        # 0x40b060
  401977:	lea    rsi,[rip+0x96e2]        # 0x40b060
  40197e:	cmp    rbx,rsi
  401981:	je     0x401962
  401983:	mov    rax,QWORD PTR [rbx]
  401986:	test   rax,rax
  401989:	je     0x40198d
  40198b:	call   rax
  40198d:	add    rbx,0x8
  401991:	cmp    rbx,rsi
  401994:	jne    0x401983
  401996:	mov    eax,0x1
  40199b:	add    rsp,0x28
  40199f:	pop    rbx
  4019a0:	pop    rsi
  4019a1:	ret    
  4019a2:	call   0x402620
  4019a7:	jmp    0x401962
  4019a9:	nop    DWORD PTR [rax+0x0]
  4019b0:	xor    eax,eax
  4019b2:	ret    
  4019b3:	nop
  4019b4:	nop
  4019b5:	nop
  4019b6:	nop
  4019b7:	nop
  4019b8:	nop
  4019b9:	nop
  4019ba:	nop
  4019bb:	nop
  4019bc:	nop
  4019bd:	nop
  4019be:	nop
  4019bf:	nop
  4019c0:	sub    rsp,0x58
  4019c4:	mov    rax,QWORD PTR [rip+0x7c95]        # 0x409660
  4019cb:	test   rax,rax
  4019ce:	je     0x4019fc
  4019d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4019d9:	mov    DWORD PTR [rsp+0x20],ecx
  4019dd:	lea    rcx,[rsp+0x20]
  4019e2:	mov    QWORD PTR [rsp+0x28],rdx
  4019e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4019ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4019f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4019f9:	call   rax
  4019fb:	nop
  4019fc:	add    rsp,0x58
  401a00:	ret    
  401a01:	nop    DWORD PTR [rax+rax*1+0x0]
  401a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a10:	mov    QWORD PTR [rip+0x7c49],rcx        # 0x409660
  401a17:	jmp    0x402b80
  401a1c:	nop    DWORD PTR [rax+0x0]
  401a20:	push   rsi
  401a21:	push   rbx
  401a22:	sub    rsp,0x78
  401a26:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a2b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a30:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a36:	cmp    DWORD PTR [rcx],0x6
  401a39:	ja     0x401b10
  401a3f:	mov    edx,DWORD PTR [rcx]
  401a41:	lea    rax,[rip+0x475c]        # 0x4061a4
  401a48:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401a4c:	add    rax,rdx
  401a4f:	jmp    rax
  401a51:	lea    rbx,[rip+0x4628]        # 0x406080
  401a58:	nop    DWORD PTR [rax+rax*1+0x0]
  401a60:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401a66:	mov    rsi,QWORD PTR [rcx+0x8]
  401a6a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401a6f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401a74:	call   0x402b98
  401a79:	movsd  QWORD PTR [rsp+0x30],xmm8
  401a80:	lea    rcx,[rax+0x60]
  401a84:	lea    rdx,[rip+0x46ed]        # 0x406178
  401a8b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401a91:	mov    r9,rsi
  401a94:	mov    r8,rbx
  401a97:	movsd  QWORD PTR [rsp+0x20],xmm6
  401a9d:	call   0x402b28
  401aa2:	nop
  401aa3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401aa8:	xor    eax,eax
  401aaa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401aaf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ab5:	add    rsp,0x78
  401ab9:	pop    rbx
  401aba:	pop    rsi
  401abb:	ret    
  401abc:	nop    DWORD PTR [rax+0x0]
  401ac0:	lea    rbx,[rip+0x45d8]        # 0x40609f
  401ac7:	jmp    0x401a60
  401ac9:	nop    DWORD PTR [rax+0x0]
  401ad0:	lea    rbx,[rip+0x45e9]        # 0x4060c0
  401ad7:	jmp    0x401a60
  401ad9:	nop    DWORD PTR [rax+0x0]
  401ae0:	lea    rbx,[rip+0x4649]        # 0x406130
  401ae7:	jmp    0x401a60
  401aec:	nop    DWORD PTR [rax+0x0]
  401af0:	lea    rbx,[rip+0x4611]        # 0x406108
  401af7:	jmp    0x401a60
  401afc:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rbx,[rip+0x45d9]        # 0x4060e0
  401b07:	jmp    0x401a60
  401b0c:	nop    DWORD PTR [rax+0x0]
  401b10:	lea    rbx,[rip+0x464f]        # 0x406166
  401b17:	jmp    0x401a60
  401b1c:	nop
  401b1d:	nop
  401b1e:	nop
  401b1f:	nop
  401b20:	fninit 
  401b22:	ret    
  401b23:	nop
  401b24:	nop
  401b25:	nop
  401b26:	nop
  401b27:	nop
  401b28:	nop
  401b29:	nop
  401b2a:	nop
  401b2b:	nop
  401b2c:	nop
  401b2d:	nop
  401b2e:	nop
  401b2f:	nop
  401b30:	mov    rax,rcx
  401b33:	ret    
  401b34:	xchg   ax,ax
  401b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b40:	mov    rax,rcx
  401b43:	ret    
  401b44:	nop
  401b45:	nop
  401b46:	nop
  401b47:	nop
  401b48:	nop
  401b49:	nop
  401b4a:	nop
  401b4b:	nop
  401b4c:	nop
  401b4d:	nop
  401b4e:	nop
  401b4f:	nop
  401b50:	push   rsi
  401b51:	push   rbx
  401b52:	sub    rsp,0x38
  401b56:	lea    rax,[rsp+0x58]
  401b5b:	mov    rbx,rcx
  401b5e:	mov    QWORD PTR [rsp+0x58],rdx
  401b63:	mov    QWORD PTR [rsp+0x60],r8
  401b68:	mov    QWORD PTR [rsp+0x68],r9
  401b6d:	mov    QWORD PTR [rsp+0x28],rax
  401b72:	call   0x402b98
  401b77:	lea    rcx,[rip+0x4642]        # 0x4061c0
  401b7e:	lea    r9,[rax+0x60]
  401b82:	mov    r8d,0x1b
  401b88:	mov    edx,0x1
  401b8d:	call   0x402b18
  401b92:	mov    rsi,QWORD PTR [rsp+0x28]
  401b97:	call   0x402b98
  401b9c:	lea    rcx,[rax+0x60]
  401ba0:	mov    rdx,rbx
  401ba3:	mov    r8,rsi
  401ba6:	call   0x402ae8
  401bab:	call   0x402b40
  401bb0:	nop
  401bb1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bc0:	push   r13
  401bc2:	push   r12
  401bc4:	push   rbp
  401bc5:	push   rdi
  401bc6:	push   rsi
  401bc7:	push   rbx
  401bc8:	sub    rsp,0x58
  401bcc:	movsxd rbp,DWORD PTR [rip+0x7ab1]        # 0x409684
  401bd3:	mov    rbx,rcx
  401bd6:	mov    rsi,rdx
  401bd9:	mov    rdi,r8
  401bdc:	test   ebp,ebp
  401bde:	jle    0x401cda
  401be4:	mov    rax,QWORD PTR [rip+0x7a9d]        # 0x409688
  401beb:	xor    r9d,r9d
  401bee:	add    rax,0x8
  401bf2:	mov    r10,QWORD PTR [rax]
  401bf5:	cmp    rbx,r10
  401bf8:	jb     0x401c0e
  401bfa:	mov    rdx,QWORD PTR [rax+0x8]
  401bfe:	mov    r11d,DWORD PTR [rdx+0x8]
  401c02:	add    r10,r11
  401c05:	cmp    rbx,r10
  401c08:	jb     0x401cc0
  401c0e:	add    r9d,0x1
  401c12:	add    rax,0x18
  401c16:	cmp    r9d,ebp
  401c19:	jne    0x401bf2
  401c1b:	mov    rcx,rbx
  401c1e:	call   0x402830
  401c23:	test   rax,rax
  401c26:	mov    r12,rax
  401c29:	je     0x401d12
  401c2f:	lea    rbp,[rbp+rbp*2+0x0]
  401c34:	shl    rbp,0x3
  401c38:	mov    r13,rbp
  401c3b:	add    r13,QWORD PTR [rip+0x7a46]        # 0x409688
  401c42:	mov    QWORD PTR [r13+0x10],rax
  401c46:	mov    DWORD PTR [r13+0x0],0x0
  401c4e:	call   0x402950
  401c53:	mov    edx,DWORD PTR [r12+0xc]
  401c58:	mov    r8d,0x30
  401c5e:	add    rax,rdx
  401c61:	lea    rdx,[rsp+0x20]
  401c66:	mov    QWORD PTR [r13+0x8],rax
  401c6a:	mov    rax,QWORD PTR [rip+0x7a17]        # 0x409688
  401c71:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401c76:	call   QWORD PTR [rip+0x870c]        # 0x40a388
  401c7c:	test   rax,rax
  401c7f:	je     0x401cf5
  401c81:	mov    eax,DWORD PTR [rsp+0x44]
  401c85:	lea    edx,[rax-0x4]
  401c88:	and    edx,0xfffffffb
  401c8b:	je     0x401cb9
  401c8d:	sub    eax,0x40
  401c90:	and    eax,0xffffffbf
  401c93:	je     0x401cb9
  401c95:	mov    r9,rbp
  401c98:	add    r9,QWORD PTR [rip+0x79e9]        # 0x409688
  401c9f:	mov    r8d,0x40
  401ca5:	mov    rdx,QWORD PTR [rsp+0x38]
  401caa:	mov    rcx,QWORD PTR [rsp+0x20]
  401caf:	call   QWORD PTR [rip+0x86cb]        # 0x40a380
  401cb5:	test   eax,eax
  401cb7:	je     0x401ce1
  401cb9:	add    DWORD PTR [rip+0x79c4],0x1        # 0x409684
  401cc0:	mov    r8,rdi
  401cc3:	mov    rdx,rsi
  401cc6:	mov    rcx,rbx
  401cc9:	add    rsp,0x58
  401ccd:	pop    rbx
  401cce:	pop    rsi
  401ccf:	pop    rdi
  401cd0:	pop    rbp
  401cd1:	pop    r12
  401cd3:	pop    r13
  401cd5:	jmp    0x402b08
  401cda:	xor    ebp,ebp
  401cdc:	jmp    0x401c1b
  401ce1:	call   QWORD PTR [rip+0x8619]        # 0x40a300
  401ce7:	lea    rcx,[rip+0x454a]        # 0x406238
  401cee:	mov    edx,eax
  401cf0:	call   0x401b50
  401cf5:	mov    rax,QWORD PTR [rip+0x798c]        # 0x409688
  401cfc:	mov    edx,DWORD PTR [r12+0x8]
  401d01:	lea    rcx,[rip+0x44f8]        # 0x406200
  401d08:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d0d:	call   0x401b50
  401d12:	lea    rcx,[rip+0x44c7]        # 0x4061e0
  401d19:	mov    rdx,rbx
  401d1c:	call   0x401b50
  401d21:	nop
  401d22:	nop    DWORD PTR [rax+0x0]
  401d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d30:	push   rbp
  401d31:	push   r14
  401d33:	push   r13
  401d35:	push   r12
  401d37:	push   rdi
  401d38:	push   rsi
  401d39:	push   rbx
  401d3a:	mov    rbp,rsp
  401d3d:	sub    rsp,0x60
  401d41:	mov    ebx,DWORD PTR [rip+0x7939]        # 0x409680
  401d47:	test   ebx,ebx
  401d49:	je     0x401d60
  401d4b:	mov    rsp,rbp
  401d4e:	pop    rbx
  401d4f:	pop    rsi
  401d50:	pop    rdi
  401d51:	pop    r12
  401d53:	pop    r13
  401d55:	pop    r14
  401d57:	pop    rbp
  401d58:	ret    
  401d59:	nop    DWORD PTR [rax+0x0]
  401d60:	mov    DWORD PTR [rip+0x7916],0x1        # 0x409680
  401d6a:	call   0x402880
  401d6f:	cdqe   
  401d71:	lea    rax,[rax+rax*2]
  401d75:	lea    rax,[rax*8+0x1e]
  401d7d:	and    rax,0xfffffffffffffff0
  401d81:	call   0x402aa0
  401d86:	mov    rsi,QWORD PTR [rip+0x4593]        # 0x406320
  401d8d:	mov    rbx,QWORD PTR [rip+0x459c]        # 0x406330
  401d94:	sub    rsp,rax
  401d97:	mov    DWORD PTR [rip+0x78e3],0x0        # 0x409684
  401da1:	lea    rax,[rsp+0x20]
  401da6:	mov    QWORD PTR [rip+0x78db],rax        # 0x409688
  401dad:	mov    rax,rsi
  401db0:	sub    rax,rbx
  401db3:	cmp    rax,0x7
  401db7:	jle    0x401d4b
  401db9:	cmp    rax,0xb
  401dbd:	jle    0x401de5
  401dbf:	mov    r11d,DWORD PTR [rbx]
  401dc2:	test   r11d,r11d
  401dc5:	jne    0x401f10
  401dcb:	mov    r10d,DWORD PTR [rbx+0x4]
  401dcf:	test   r10d,r10d
  401dd2:	jne    0x401f10
  401dd8:	mov    r9d,DWORD PTR [rbx+0x8]
  401ddc:	test   r9d,r9d
  401ddf:	jne    0x401dfc
  401de1:	add    rbx,0xc
  401de5:	mov    r8d,DWORD PTR [rbx]
  401de8:	test   r8d,r8d
  401deb:	jne    0x401f10
  401df1:	mov    ecx,DWORD PTR [rbx+0x4]
  401df4:	test   ecx,ecx
  401df6:	jne    0x401f10
  401dfc:	mov    edx,DWORD PTR [rbx+0x8]
  401dff:	cmp    edx,0x1
  401e02:	jne    0x40201c
  401e08:	add    rbx,0xc
  401e0c:	cmp    rbx,rsi
  401e0f:	jae    0x401d4b
  401e15:	mov    r12,QWORD PTR [rip+0x4534]        # 0x406350
  401e1c:	lea    r13,[rbp-0x30]
  401e20:	movabs r14,0xffffffff00000000
  401e2a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e2d:	mov    eax,DWORD PTR [rbx]
  401e2f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e33:	add    rax,r12
  401e36:	add    rcx,r12
  401e39:	cmp    edx,0x10
  401e3c:	mov    r8,QWORD PTR [rax]
  401e3f:	je     0x401f86
  401e45:	jbe    0x401f4d
  401e4b:	cmp    edx,0x20
  401e4e:	je     0x401fcf
  401e54:	cmp    edx,0x40
  401e57:	jne    0x401fbb
  401e5d:	sub    r8,rax
  401e60:	mov    rdx,r13
  401e63:	mov    rdi,r13
  401e66:	mov    rax,r8
  401e69:	add    rax,QWORD PTR [rcx]
  401e6c:	mov    r8d,0x8
  401e72:	mov    QWORD PTR [rbp-0x30],rax
  401e76:	call   0x401bc0
  401e7b:	add    rbx,0xc
  401e7f:	cmp    rbx,rsi
  401e82:	jb     0x401e2a
  401e84:	mov    eax,DWORD PTR [rip+0x77fa]        # 0x409684
  401e8a:	xor    ebx,ebx
  401e8c:	xor    esi,esi
  401e8e:	test   eax,eax
  401e90:	jle    0x401d4b
  401e96:	mov    r14,QWORD PTR [rip+0x84eb]        # 0x40a388
  401e9d:	lea    r13,[rbp-0x34]
  401ea1:	mov    r12,QWORD PTR [rip+0x84d8]        # 0x40a380
  401ea8:	jmp    0x401ec3
  401eaa:	nop    WORD PTR [rax+rax*1+0x0]
  401eb0:	add    esi,0x1
  401eb3:	add    rbx,0x18
  401eb7:	cmp    esi,DWORD PTR [rip+0x77c7]        # 0x409684
  401ebd:	jge    0x401d4b
  401ec3:	mov    rax,rbx
  401ec6:	add    rax,QWORD PTR [rip+0x77bb]        # 0x409688
  401ecd:	mov    edx,DWORD PTR [rax]
  401ecf:	test   edx,edx
  401ed1:	je     0x401eb0
  401ed3:	mov    rcx,QWORD PTR [rax+0x8]
  401ed7:	mov    r8d,0x30
  401edd:	mov    rdx,rdi
  401ee0:	call   r14
  401ee3:	test   rax,rax
  401ee6:	je     0x401ffe
  401eec:	mov    rax,QWORD PTR [rip+0x7795]        # 0x409688
  401ef3:	mov    r9,r13
  401ef6:	mov    rdx,QWORD PTR [rbp-0x18]
  401efa:	mov    rcx,QWORD PTR [rbp-0x30]
  401efe:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f02:	call   r12
  401f05:	jmp    0x401eb0
  401f07:	nop    WORD PTR [rax+rax*1+0x0]
  401f10:	cmp    rbx,rsi
  401f13:	jae    0x401d4b
  401f19:	mov    r12,QWORD PTR [rip+0x4430]        # 0x406350
  401f20:	lea    rdi,[rbp-0x30]
  401f24:	mov    ecx,DWORD PTR [rbx+0x4]
  401f27:	mov    eax,DWORD PTR [rbx]
  401f29:	mov    r8d,0x4
  401f2f:	mov    rdx,rdi
  401f32:	add    rbx,0x8
  401f36:	add    rcx,r12
  401f39:	add    eax,DWORD PTR [rcx]
  401f3b:	mov    DWORD PTR [rbp-0x30],eax
  401f3e:	call   0x401bc0
  401f43:	cmp    rbx,rsi
  401f46:	jb     0x401f24
  401f48:	jmp    0x401e84
  401f4d:	cmp    edx,0x8
  401f50:	jne    0x401fbb
  401f52:	movzx  edx,BYTE PTR [rcx]
  401f55:	mov    rdi,r13
  401f58:	mov    r10,rdx
  401f5b:	or     r10,0xffffffffffffff00
  401f62:	test   dl,dl
  401f64:	cmovs  rdx,r10
  401f68:	sub    rdx,rax
  401f6b:	lea    rax,[r8+rdx*1]
  401f6f:	mov    r8d,0x1
  401f75:	mov    rdx,r13
  401f78:	mov    QWORD PTR [rbp-0x30],rax
  401f7c:	call   0x401bc0
  401f81:	jmp    0x401e7b
  401f86:	movzx  edx,WORD PTR [rcx]
  401f89:	mov    rdi,r13
  401f8c:	mov    r10,rdx
  401f8f:	or     r10,0xffffffffffff0000
  401f96:	test   dx,dx
  401f99:	cmovs  rdx,r10
  401f9d:	sub    rdx,rax
  401fa0:	lea    rax,[r8+rdx*1]
  401fa4:	mov    r8d,0x2
  401faa:	mov    rdx,r13
  401fad:	mov    QWORD PTR [rbp-0x30],rax
  401fb1:	call   0x401bc0
  401fb6:	jmp    0x401e7b
  401fbb:	lea    rcx,[rip+0x42d6]        # 0x406298
  401fc2:	mov    QWORD PTR [rbp-0x30],0x0
  401fca:	call   0x401b50
  401fcf:	mov    edx,DWORD PTR [rcx]
  401fd1:	mov    rdi,r13
  401fd4:	mov    r10,rdx
  401fd7:	or     r10,r14
  401fda:	test   edx,edx
  401fdc:	cmovs  rdx,r10
  401fe0:	sub    rdx,rax
  401fe3:	lea    rax,[r8+rdx*1]
  401fe7:	mov    r8d,0x4
  401fed:	mov    rdx,r13
  401ff0:	mov    QWORD PTR [rbp-0x30],rax
  401ff4:	call   0x401bc0
  401ff9:	jmp    0x401e7b
  401ffe:	add    rbx,QWORD PTR [rip+0x7683]        # 0x409688
  402005:	lea    rcx,[rip+0x41f4]        # 0x406200
  40200c:	mov    rax,QWORD PTR [rbx+0x10]
  402010:	mov    r8,QWORD PTR [rbx+0x8]
  402014:	mov    edx,DWORD PTR [rax+0x8]
  402017:	call   0x401b50
  40201c:	lea    rcx,[rip+0x423d]        # 0x406260
  402023:	call   0x401b50
  402028:	nop
  402029:	nop
  40202a:	nop
  40202b:	nop
  40202c:	nop
  40202d:	nop
  40202e:	nop
  40202f:	nop
  402030:	sub    rsp,0x28
  402034:	mov    eax,DWORD PTR [rcx]
  402036:	cmp    eax,0xc0000091
  40203b:	ja     0x4020a0
  40203d:	cmp    eax,0xc000008d
  402042:	jae    0x4020bf
  402044:	cmp    eax,0xc0000008
  402049:	je     0x402160
  40204f:	ja     0x402130
  402055:	cmp    eax,0x80000002
  40205a:	je     0x402160
  402060:	cmp    eax,0xc0000005
  402065:	jne    0x40213e
  40206b:	xor    edx,edx
  40206d:	mov    ecx,0xb
  402072:	call   0x402b00
  402077:	cmp    rax,0x1
  40207b:	je     0x4021c0
  402081:	test   rax,rax
  402084:	je     0x4021a0
  40208a:	mov    ecx,0xb
  40208f:	call   rax
  402091:	xor    eax,eax
  402093:	add    rsp,0x28
  402097:	ret    
  402098:	nop    DWORD PTR [rax+rax*1+0x0]
  4020a0:	cmp    eax,0xc0000094
  4020a5:	je     0x402170
  4020ab:	ja     0x4020f0
  4020ad:	cmp    eax,0xc0000092
  4020b2:	je     0x402160
  4020b8:	cmp    eax,0xc0000093
  4020bd:	jne    0x40213e
  4020bf:	xor    edx,edx
  4020c1:	mov    ecx,0x8
  4020c6:	call   0x402b00
  4020cb:	cmp    rax,0x1
  4020cf:	mov    rdx,rax
  4020d2:	je     0x402148
  4020d4:	test   rdx,rdx
  4020d7:	mov    eax,0x1
  4020dc:	je     0x402093
  4020de:	mov    ecx,0x8
  4020e3:	call   rdx
  4020e5:	xor    eax,eax
  4020e7:	add    rsp,0x28
  4020eb:	ret    
  4020ec:	nop    DWORD PTR [rax+0x0]
  4020f0:	cmp    eax,0xc0000095
  4020f5:	je     0x402160
  4020f7:	cmp    eax,0xc0000096
  4020fc:	jne    0x40213e
  4020fe:	xor    edx,edx
  402100:	mov    ecx,0x4
  402105:	call   0x402b00
  40210a:	cmp    rax,0x1
  40210e:	je     0x4021aa
  402114:	test   rax,rax
  402117:	je     0x4021a0
  40211d:	mov    ecx,0x4
  402122:	call   rax
  402124:	xor    eax,eax
  402126:	jmp    0x402093
  40212b:	nop    DWORD PTR [rax+rax*1+0x0]
  402130:	cmp    eax,0xc000001d
  402135:	je     0x4020fe
  402137:	cmp    eax,0xc000008c
  40213c:	je     0x402160
  40213e:	mov    eax,0x1
  402143:	add    rsp,0x28
  402147:	ret    
  402148:	mov    edx,0x1
  40214d:	mov    ecx,0x8
  402152:	call   0x402b00
  402157:	call   0x401b20
  40215c:	nop    DWORD PTR [rax+0x0]
  402160:	xor    eax,eax
  402162:	add    rsp,0x28
  402166:	ret    
  402167:	nop    WORD PTR [rax+rax*1+0x0]
  402170:	xor    edx,edx
  402172:	mov    ecx,0x8
  402177:	call   0x402b00
  40217c:	cmp    rax,0x1
  402180:	mov    rdx,rax
  402183:	jne    0x4020d4
  402189:	mov    edx,0x1
  40218e:	mov    ecx,0x8
  402193:	call   0x402b00
  402198:	xor    eax,eax
  40219a:	jmp    0x402093
  40219f:	nop
  4021a0:	mov    eax,0x4
  4021a5:	add    rsp,0x28
  4021a9:	ret    
  4021aa:	mov    edx,0x1
  4021af:	mov    ecx,0x4
  4021b4:	call   0x402b00
  4021b9:	xor    eax,eax
  4021bb:	jmp    0x402093
  4021c0:	mov    edx,0x1
  4021c5:	mov    ecx,0xb
  4021ca:	call   0x402b00
  4021cf:	xor    eax,eax
  4021d1:	jmp    0x402093
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	push   r12
  4021e2:	push   rbp
  4021e3:	push   rdi
  4021e4:	push   rsi
  4021e5:	push   rbx
  4021e6:	sub    rsp,0x20
  4021ea:	call   0x402950
  4021ef:	mov    rbp,rax
  4021f2:	mov    eax,DWORD PTR [rip+0x74d0]        # 0x4096c8
  4021f8:	test   eax,eax
  4021fa:	jne    0x402221
  4021fc:	test   rbp,rbp
  4021ff:	je     0x402221
  402201:	lea    rcx,[rip+0x40c8]        # 0x4062d0
  402208:	mov    DWORD PTR [rip+0x74b6],0x1        # 0x4096c8
  402212:	call   0x402790
  402217:	test   rax,rax
  40221a:	je     0x402230
  40221c:	mov    eax,0x1
  402221:	add    rsp,0x20
  402225:	pop    rbx
  402226:	pop    rsi
  402227:	pop    rdi
  402228:	pop    rbp
  402229:	pop    r12
  40222b:	ret    
  40222c:	nop    DWORD PTR [rax+0x0]
  402230:	lea    rbx,[rip+0x75c9]        # 0x409800
  402237:	mov    ecx,0x30
  40223c:	lea    rdx,[rip+0x74bd]        # 0x409700
  402243:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402030
  40224a:	xor    esi,esi
  40224c:	mov    rdi,rbx
  40224f:	rep stos QWORD PTR es:[rdi],rax
  402252:	mov    rdi,rdx
  402255:	sub    r12,rbp
  402258:	mov    cl,0x20
  40225a:	rep stos QWORD PTR es:[rdi],rax
  40225d:	mov    rdi,rdx
  402260:	jmp    0x402290
  402262:	mov    BYTE PTR [rdi],0x9
  402265:	mov    DWORD PTR [rdi+0x4],r12d
  402269:	add    rsi,0x1
  40226d:	mov    edx,DWORD PTR [rax+0xc]
  402270:	add    rbx,0xc
  402274:	mov    DWORD PTR [rbx-0xc],edx
  402277:	add    edx,DWORD PTR [rax+0x8]
  40227a:	mov    rax,rdi
  40227d:	sub    rax,rbp
  402280:	add    rdi,0x8
  402284:	mov    DWORD PTR [rbx-0x4],eax
  402287:	mov    DWORD PTR [rbx-0x8],edx
  40228a:	cmp    rsi,0x20
  40228e:	je     0x4022c5
  402290:	mov    rcx,rsi
  402293:	call   0x4028c0
  402298:	test   rax,rax
  40229b:	jne    0x402262
  40229d:	test   rsi,rsi
  4022a0:	je     0x40221c
  4022a6:	mov    edx,esi
  4022a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022b0:	mov    r8,rbp
  4022b3:	lea    rcx,[rip+0x7546]        # 0x409800
  4022ba:	call   QWORD PTR [rip+0x8078]        # 0x40a338
  4022c0:	jmp    0x40221c
  4022c5:	mov    edx,0x20
  4022ca:	jmp    0x4022b0
  4022cc:	nop    DWORD PTR [rax+0x0]
  4022d0:	push   rbx
  4022d1:	sub    rsp,0x20
  4022d5:	mov    rdx,QWORD PTR [rcx]
  4022d8:	mov    eax,DWORD PTR [rdx]
  4022da:	mov    r8d,eax
  4022dd:	and    r8d,0x20ffffff
  4022e4:	cmp    r8d,0x20474343
  4022eb:	je     0x4023f0
  4022f1:	cmp    eax,0xc0000091
  4022f6:	mov    rbx,rcx
  4022f9:	ja     0x402380
  4022ff:	cmp    eax,0xc000008d
  402304:	jae    0x402397
  40230a:	cmp    eax,0xc0000008
  40230f:	je     0x402343
  402311:	ja     0x402350
  402313:	cmp    eax,0x80000002
  402318:	je     0x402343
  40231a:	cmp    eax,0xc0000005
  40231f:	jne    0x402362
  402321:	xor    edx,edx
  402323:	mov    ecx,0xb
  402328:	call   0x402b00
  40232d:	cmp    rax,0x1
  402331:	je     0x402460
  402337:	test   rax,rax
  40233a:	je     0x402362
  40233c:	mov    ecx,0xb
  402341:	call   rax
  402343:	mov    eax,0xffffffff
  402348:	add    rsp,0x20
  40234c:	pop    rbx
  40234d:	ret    
  40234e:	xchg   ax,ax
  402350:	cmp    eax,0xc000001d
  402355:	je     0x402416
  40235b:	cmp    eax,0xc000008c
  402360:	je     0x402343
  402362:	mov    rax,QWORD PTR [rip+0x7357]        # 0x4096c0
  402369:	test   rax,rax
  40236c:	je     0x402348
  40236e:	mov    rcx,rbx
  402371:	add    rsp,0x20
  402375:	pop    rbx
  402376:	rex.W jmp rax
  402379:	nop    DWORD PTR [rax+0x0]
  402380:	cmp    eax,0xc0000094
  402385:	je     0x4023c2
  402387:	ja     0x402400
  402389:	cmp    eax,0xc0000092
  40238e:	je     0x402343
  402390:	cmp    eax,0xc0000093
  402395:	jne    0x402362
  402397:	xor    edx,edx
  402399:	mov    ecx,0x8
  40239e:	call   0x402b00
  4023a3:	cmp    rax,0x1
  4023a7:	jne    0x4023d4
  4023a9:	mov    edx,0x1
  4023ae:	mov    ecx,0x8
  4023b3:	call   0x402b00
  4023b8:	call   0x401b20
  4023bd:	jmp    0x402343
  4023c2:	xor    edx,edx
  4023c4:	mov    ecx,0x8
  4023c9:	call   0x402b00
  4023ce:	cmp    rax,0x1
  4023d2:	je     0x402442
  4023d4:	test   rax,rax
  4023d7:	je     0x402362
  4023d9:	mov    ecx,0x8
  4023de:	call   rax
  4023e0:	mov    eax,0xffffffff
  4023e5:	jmp    0x402348
  4023ea:	nop    WORD PTR [rax+rax*1+0x0]
  4023f0:	test   BYTE PTR [rdx+0x4],0x1
  4023f4:	jne    0x4022f1
  4023fa:	jmp    0x402343
  4023ff:	nop
  402400:	cmp    eax,0xc0000095
  402405:	je     0x402343
  40240b:	cmp    eax,0xc0000096
  402410:	jne    0x402362
  402416:	xor    edx,edx
  402418:	mov    ecx,0x4
  40241d:	call   0x402b00
  402422:	cmp    rax,0x1
  402426:	je     0x402474
  402428:	test   rax,rax
  40242b:	je     0x402362
  402431:	mov    ecx,0x4
  402436:	call   rax
  402438:	mov    eax,0xffffffff
  40243d:	jmp    0x402348
  402442:	mov    edx,0x1
  402447:	mov    ecx,0x8
  40244c:	call   0x402b00
  402451:	jmp    0x402343
  402456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402460:	mov    edx,0x1
  402465:	mov    ecx,0xb
  40246a:	call   0x402b00
  40246f:	jmp    0x402343
  402474:	mov    edx,0x1
  402479:	mov    ecx,0x4
  40247e:	call   0x402b00
  402483:	jmp    0x402343
  402488:	nop
  402489:	nop
  40248a:	nop
  40248b:	nop
  40248c:	nop
  40248d:	nop
  40248e:	nop
  40248f:	nop
  402490:	push   rbp
  402491:	push   rdi
  402492:	push   rsi
  402493:	push   rbx
  402494:	sub    rsp,0x28
  402498:	lea    rcx,[rip+0x7501]        # 0x4099a0
  40249f:	call   QWORD PTR [rip+0x7e3b]        # 0x40a2e0
  4024a5:	mov    rbx,QWORD PTR [rip+0x74d4]        # 0x409980
  4024ac:	test   rbx,rbx
  4024af:	je     0x4024e4
  4024b1:	mov    rbp,QWORD PTR [rip+0x7eb8]        # 0x40a370
  4024b8:	mov    rdi,QWORD PTR [rip+0x7e41]        # 0x40a300
  4024bf:	nop
  4024c0:	mov    ecx,DWORD PTR [rbx]
  4024c2:	call   rbp
  4024c4:	mov    rsi,rax
  4024c7:	call   rdi
  4024c9:	test   eax,eax
  4024cb:	jne    0x4024db
  4024cd:	test   rsi,rsi
  4024d0:	je     0x4024db
  4024d2:	mov    rax,QWORD PTR [rbx+0x8]
  4024d6:	mov    rcx,rsi
  4024d9:	call   rax
  4024db:	mov    rbx,QWORD PTR [rbx+0x10]
  4024df:	test   rbx,rbx
  4024e2:	jne    0x4024c0
  4024e4:	mov    rax,QWORD PTR [rip+0x7e3d]        # 0x40a328
  4024eb:	lea    rcx,[rip+0x74ae]        # 0x4099a0
  4024f2:	add    rsp,0x28
  4024f6:	pop    rbx
  4024f7:	pop    rsi
  4024f8:	pop    rdi
  4024f9:	pop    rbp
  4024fa:	rex.W jmp rax
  4024fd:	nop    DWORD PTR [rax]
  402500:	push   rdi
  402501:	push   rsi
  402502:	push   rbx
  402503:	sub    rsp,0x20
  402507:	mov    eax,DWORD PTR [rip+0x747b]        # 0x409988
  40250d:	test   eax,eax
  40250f:	jne    0x402520
  402511:	add    rsp,0x20
  402515:	pop    rbx
  402516:	pop    rsi
  402517:	pop    rdi
  402518:	ret    
  402519:	nop    DWORD PTR [rax+0x0]
  402520:	mov    rsi,rdx
  402523:	mov    edi,ecx
  402525:	mov    edx,0x18
  40252a:	mov    ecx,0x1
  40252f:	call   0x402b38
  402534:	test   rax,rax
  402537:	mov    rbx,rax
  40253a:	je     0x402578
  40253c:	mov    DWORD PTR [rax],edi
  40253e:	mov    QWORD PTR [rax+0x8],rsi
  402542:	lea    rcx,[rip+0x7457]        # 0x4099a0
  402549:	call   QWORD PTR [rip+0x7d91]        # 0x40a2e0
  40254f:	mov    rax,QWORD PTR [rip+0x742a]        # 0x409980
  402556:	lea    rcx,[rip+0x7443]        # 0x4099a0
  40255d:	mov    QWORD PTR [rip+0x741c],rbx        # 0x409980
  402564:	mov    QWORD PTR [rbx+0x10],rax
  402568:	call   QWORD PTR [rip+0x7dba]        # 0x40a328
  40256e:	xor    eax,eax
  402570:	add    rsp,0x20
  402574:	pop    rbx
  402575:	pop    rsi
  402576:	pop    rdi
  402577:	ret    
  402578:	mov    eax,0xffffffff
  40257d:	jmp    0x402511
  40257f:	nop
  402580:	push   rbx
  402581:	sub    rsp,0x20
  402585:	mov    eax,DWORD PTR [rip+0x73fd]        # 0x409988
  40258b:	test   eax,eax
  40258d:	jne    0x4025a0
  40258f:	xor    eax,eax
  402591:	add    rsp,0x20
  402595:	pop    rbx
  402596:	ret    
  402597:	nop    WORD PTR [rax+rax*1+0x0]
  4025a0:	mov    ebx,ecx
  4025a2:	lea    rcx,[rip+0x73f7]        # 0x4099a0
  4025a9:	call   QWORD PTR [rip+0x7d31]        # 0x40a2e0
  4025af:	mov    rdx,QWORD PTR [rip+0x73ca]        # 0x409980
  4025b6:	test   rdx,rdx
  4025b9:	je     0x4025d7
  4025bb:	mov    eax,DWORD PTR [rdx]
  4025bd:	cmp    eax,ebx
  4025bf:	jne    0x4025ce
  4025c1:	jmp    0x40260f
  4025c3:	mov    r8d,DWORD PTR [rax]
  4025c6:	cmp    r8d,ebx
  4025c9:	je     0x4025f0
  4025cb:	mov    rdx,rax
  4025ce:	mov    rax,QWORD PTR [rdx+0x10]
  4025d2:	test   rax,rax
  4025d5:	jne    0x4025c3
  4025d7:	lea    rcx,[rip+0x73c2]        # 0x4099a0
  4025de:	call   QWORD PTR [rip+0x7d44]        # 0x40a328
  4025e4:	xor    eax,eax
  4025e6:	add    rsp,0x20
  4025ea:	pop    rbx
  4025eb:	ret    
  4025ec:	nop    DWORD PTR [rax+0x0]
  4025f0:	mov    rcx,rax
  4025f3:	mov    rax,QWORD PTR [rax+0x10]
  4025f7:	mov    QWORD PTR [rdx+0x10],rax
  4025fb:	call   0x402b20
  402600:	lea    rcx,[rip+0x7399]        # 0x4099a0
  402607:	call   QWORD PTR [rip+0x7d1b]        # 0x40a328
  40260d:	jmp    0x4025e4
  40260f:	mov    rax,QWORD PTR [rdx+0x10]
  402613:	mov    rcx,rdx
  402616:	mov    QWORD PTR [rip+0x7363],rax        # 0x409980
  40261d:	jmp    0x4025fb
  40261f:	nop
  402620:	push   rbx
  402621:	sub    rsp,0x20
  402625:	cmp    edx,0x1
  402628:	je     0x4026c0
  40262e:	jb     0x402660
  402630:	cmp    edx,0x2
  402633:	je     0x402650
  402635:	cmp    edx,0x3
  402638:	jne    0x402655
  40263a:	mov    eax,DWORD PTR [rip+0x7348]        # 0x409988
  402640:	test   eax,eax
  402642:	je     0x402655
  402644:	call   0x402490
  402649:	jmp    0x402655
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]
  402650:	call   0x401b20
  402655:	mov    eax,0x1
  40265a:	add    rsp,0x20
  40265e:	pop    rbx
  40265f:	ret    
  402660:	mov    eax,DWORD PTR [rip+0x7322]        # 0x409988
  402666:	test   eax,eax
  402668:	jne    0x4026f0
  40266e:	mov    eax,DWORD PTR [rip+0x7314]        # 0x409988
  402674:	cmp    eax,0x1
  402677:	jne    0x402655
  402679:	mov    rcx,QWORD PTR [rip+0x7300]        # 0x409980
  402680:	test   rcx,rcx
  402683:	je     0x402696
  402685:	mov    rbx,QWORD PTR [rcx+0x10]
  402689:	call   0x402b20
  40268e:	test   rbx,rbx
  402691:	mov    rcx,rbx
  402694:	jne    0x402685
  402696:	lea    rcx,[rip+0x7303]        # 0x4099a0
  40269d:	mov    QWORD PTR [rip+0x72d8],0x0        # 0x409980
  4026a8:	mov    DWORD PTR [rip+0x72d6],0x0        # 0x409988
  4026b2:	call   QWORD PTR [rip+0x7c20]        # 0x40a2d8
  4026b8:	jmp    0x402655
  4026ba:	nop    WORD PTR [rax+rax*1+0x0]
  4026c0:	mov    eax,DWORD PTR [rip+0x72c2]        # 0x409988
  4026c6:	test   eax,eax
  4026c8:	je     0x4026e0
  4026ca:	mov    eax,0x1
  4026cf:	mov    DWORD PTR [rip+0x72af],0x1        # 0x409988
  4026d9:	add    rsp,0x20
  4026dd:	pop    rbx
  4026de:	ret    
  4026df:	nop
  4026e0:	lea    rcx,[rip+0x72b9]        # 0x4099a0
  4026e7:	call   QWORD PTR [rip+0x7c33]        # 0x40a320
  4026ed:	jmp    0x4026ca
  4026ef:	nop
  4026f0:	call   0x402490
  4026f5:	jmp    0x40266e
  4026fa:	nop
  4026fb:	nop
  4026fc:	nop
  4026fd:	nop
  4026fe:	nop
  4026ff:	nop
  402700:	movsxd rax,DWORD PTR [rcx+0x3c]
  402704:	add    rcx,rax
  402707:	xor    eax,eax
  402709:	cmp    DWORD PTR [rcx],0x4550
  40270f:	je     0x402713
  402711:	repz ret 
  402713:	xor    eax,eax
  402715:	cmp    WORD PTR [rcx+0x18],0x20b
  40271b:	sete   al
  40271e:	ret    
  40271f:	nop
  402720:	cmp    WORD PTR [rcx],0x5a4d
  402725:	je     0x402730
  402727:	xor    eax,eax
  402729:	ret    
  40272a:	nop    WORD PTR [rax+rax*1+0x0]
  402730:	jmp    0x402700
  402732:	nop    DWORD PTR [rax+0x0]
  402736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402740:	movsxd rax,DWORD PTR [rcx+0x3c]
  402744:	add    rcx,rax
  402747:	movzx  eax,WORD PTR [rcx+0x14]
  40274b:	lea    rax,[rcx+rax*1+0x18]
  402750:	movzx  ecx,WORD PTR [rcx+0x6]
  402754:	test   ecx,ecx
  402756:	je     0x402781
  402758:	sub    ecx,0x1
  40275b:	lea    rcx,[rcx+rcx*4]
  40275f:	lea    r9,[rax+rcx*8+0x28]
  402764:	mov    r8d,DWORD PTR [rax+0xc]
  402768:	cmp    r8,rdx
  40276b:	mov    rcx,r8
  40276e:	ja     0x402778
  402770:	add    ecx,DWORD PTR [rax+0x8]
  402773:	cmp    rdx,rcx
  402776:	jb     0x402783
  402778:	add    rax,0x28
  40277c:	cmp    rax,r9
  40277f:	jne    0x402764
  402781:	xor    eax,eax
  402783:	repz ret 
  402785:	nop
  402786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402790:	push   rdi
  402791:	push   rsi
  402792:	push   rbx
  402793:	sub    rsp,0x20
  402797:	mov    rsi,rcx
  40279a:	call   0x402af8
  40279f:	cmp    rax,0x8
  4027a3:	ja     0x4027c0
  4027a5:	mov    rbx,QWORD PTR [rip+0x3ba4]        # 0x406350
  4027ac:	xor    edi,edi
  4027ae:	cmp    WORD PTR [rbx],0x5a4d
  4027b3:	je     0x4027d0
  4027b5:	mov    rax,rdi
  4027b8:	add    rsp,0x20
  4027bc:	pop    rbx
  4027bd:	pop    rsi
  4027be:	pop    rdi
  4027bf:	ret    
  4027c0:	xor    edi,edi
  4027c2:	mov    rax,rdi
  4027c5:	add    rsp,0x20
  4027c9:	pop    rbx
  4027ca:	pop    rsi
  4027cb:	pop    rdi
  4027cc:	ret    
  4027cd:	nop    DWORD PTR [rax]
  4027d0:	mov    rcx,rbx
  4027d3:	call   0x402700
  4027d8:	test   eax,eax
  4027da:	je     0x4027b5
  4027dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4027e0:	add    rdx,rbx
  4027e3:	movzx  eax,WORD PTR [rdx+0x14]
  4027e7:	lea    rbx,[rdx+rax*1+0x18]
  4027ec:	movzx  eax,WORD PTR [rdx+0x6]
  4027f0:	test   eax,eax
  4027f2:	je     0x4027b5
  4027f4:	sub    eax,0x1
  4027f7:	lea    rax,[rax+rax*4]
  4027fb:	lea    rdi,[rbx+rax*8+0x28]
  402800:	jmp    0x40280b
  402802:	add    rbx,0x28
  402806:	cmp    rbx,rdi
  402809:	je     0x4027c0
  40280b:	mov    r8d,0x8
  402811:	mov    rdx,rsi
  402814:	mov    rcx,rbx
  402817:	call   0x402af0
  40281c:	test   eax,eax
  40281e:	jne    0x402802
  402820:	mov    rdi,rbx
  402823:	mov    rax,rdi
  402826:	add    rsp,0x20
  40282a:	pop    rbx
  40282b:	pop    rsi
  40282c:	pop    rdi
  40282d:	ret    
  40282e:	xchg   ax,ax
  402830:	push   rsi
  402831:	push   rbx
  402832:	sub    rsp,0x28
  402836:	mov    rbx,QWORD PTR [rip+0x3b13]        # 0x406350
  40283d:	cmp    WORD PTR [rbx],0x5a4d
  402842:	je     0x402850
  402844:	xor    eax,eax
  402846:	add    rsp,0x28
  40284a:	pop    rbx
  40284b:	pop    rsi
  40284c:	ret    
  40284d:	nop    DWORD PTR [rax]
  402850:	mov    rsi,rcx
  402853:	mov    rcx,rbx
  402856:	call   0x402700
  40285b:	test   eax,eax
  40285d:	je     0x402844
  40285f:	sub    rsi,rbx
  402862:	mov    rcx,rbx
  402865:	mov    rdx,rsi
  402868:	add    rsp,0x28
  40286c:	pop    rbx
  40286d:	pop    rsi
  40286e:	jmp    0x402740
  402873:	nop    DWORD PTR [rax]
  402876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402880:	push   rbx
  402881:	sub    rsp,0x20
  402885:	mov    rbx,QWORD PTR [rip+0x3ac4]        # 0x406350
  40288c:	xor    eax,eax
  40288e:	cmp    WORD PTR [rbx],0x5a4d
  402893:	je     0x4028a0
  402895:	add    rsp,0x20
  402899:	pop    rbx
  40289a:	ret    
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a0:	mov    rcx,rbx
  4028a3:	call   0x402700
  4028a8:	test   eax,eax
  4028aa:	je     0x402895
  4028ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4028b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4028b5:	add    rsp,0x20
  4028b9:	pop    rbx
  4028ba:	ret    
  4028bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028c0:	push   rdi
  4028c1:	push   rsi
  4028c2:	push   rbx
  4028c3:	sub    rsp,0x20
  4028c7:	mov    rsi,QWORD PTR [rip+0x3a82]        # 0x406350
  4028ce:	xor    edi,edi
  4028d0:	mov    rbx,rcx
  4028d3:	cmp    WORD PTR [rsi],0x5a4d
  4028d8:	je     0x4028e5
  4028da:	mov    rax,rdi
  4028dd:	add    rsp,0x20
  4028e1:	pop    rbx
  4028e2:	pop    rsi
  4028e3:	pop    rdi
  4028e4:	ret    
  4028e5:	mov    rcx,rsi
  4028e8:	call   0x402700
  4028ed:	test   eax,eax
  4028ef:	je     0x4028da
  4028f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4028f5:	add    rsi,rax
  4028f8:	movzx  eax,WORD PTR [rsi+0x14]
  4028fc:	lea    rdx,[rsi+rax*1+0x18]
  402901:	movzx  eax,WORD PTR [rsi+0x6]
  402905:	test   eax,eax
  402907:	je     0x4028da
  402909:	sub    eax,0x1
  40290c:	lea    rax,[rax+rax*4]
  402910:	lea    rax,[rdx+rax*8+0x28]
  402915:	test   BYTE PTR [rdx+0x27],0x20
  402919:	je     0x402924
  40291b:	test   rbx,rbx
  40291e:	je     0x402940
  402920:	sub    rbx,0x1
  402924:	add    rdx,0x28
  402928:	cmp    rdx,rax
  40292b:	jne    0x402915
  40292d:	xor    edi,edi
  40292f:	mov    rax,rdi
  402932:	add    rsp,0x20
  402936:	pop    rbx
  402937:	pop    rsi
  402938:	pop    rdi
  402939:	ret    
  40293a:	nop    WORD PTR [rax+rax*1+0x0]
  402940:	mov    rdi,rdx
  402943:	mov    rax,rdi
  402946:	add    rsp,0x20
  40294a:	pop    rbx
  40294b:	pop    rsi
  40294c:	pop    rdi
  40294d:	ret    
  40294e:	xchg   ax,ax
  402950:	push   rsi
  402951:	push   rbx
  402952:	sub    rsp,0x28
  402956:	mov    rsi,QWORD PTR [rip+0x39f3]        # 0x406350
  40295d:	xor    ebx,ebx
  40295f:	cmp    WORD PTR [rsi],0x5a4d
  402964:	je     0x402970
  402966:	mov    rax,rbx
  402969:	add    rsp,0x28
  40296d:	pop    rbx
  40296e:	pop    rsi
  40296f:	ret    
  402970:	mov    rcx,rsi
  402973:	call   0x402700
  402978:	test   eax,eax
  40297a:	cmovne rbx,rsi
  40297e:	mov    rax,rbx
  402981:	add    rsp,0x28
  402985:	pop    rbx
  402986:	pop    rsi
  402987:	ret    
  402988:	nop    DWORD PTR [rax+rax*1+0x0]
  402990:	push   rsi
  402991:	push   rbx
  402992:	sub    rsp,0x28
  402996:	mov    rbx,QWORD PTR [rip+0x39b3]        # 0x406350
  40299d:	xor    eax,eax
  40299f:	cmp    WORD PTR [rbx],0x5a4d
  4029a4:	je     0x4029b0
  4029a6:	add    rsp,0x28
  4029aa:	pop    rbx
  4029ab:	pop    rsi
  4029ac:	ret    
  4029ad:	nop    DWORD PTR [rax]
  4029b0:	mov    rsi,rcx
  4029b3:	mov    rcx,rbx
  4029b6:	call   0x402700
  4029bb:	test   eax,eax
  4029bd:	je     0x4029a6
  4029bf:	sub    rsi,rbx
  4029c2:	mov    rcx,rbx
  4029c5:	mov    rdx,rsi
  4029c8:	call   0x402740
  4029cd:	test   rax,rax
  4029d0:	je     0x4029e1
  4029d2:	mov    eax,DWORD PTR [rax+0x24]
  4029d5:	not    eax
  4029d7:	shr    eax,0x1f
  4029da:	add    rsp,0x28
  4029de:	pop    rbx
  4029df:	pop    rsi
  4029e0:	ret    
  4029e1:	xor    eax,eax
  4029e3:	jmp    0x4029a6
  4029e5:	nop
  4029e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029f0:	push   rbp
  4029f1:	push   rdi
  4029f2:	push   rsi
  4029f3:	push   rbx
  4029f4:	sub    rsp,0x28
  4029f8:	mov    rdi,QWORD PTR [rip+0x3951]        # 0x406350
  4029ff:	xor    ebp,ebp
  402a01:	mov    esi,ecx
  402a03:	cmp    WORD PTR [rdi],0x5a4d
  402a08:	je     0x402a20
  402a0a:	mov    rax,rbp
  402a0d:	add    rsp,0x28
  402a11:	pop    rbx
  402a12:	pop    rsi
  402a13:	pop    rdi
  402a14:	pop    rbp
  402a15:	ret    
  402a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a20:	mov    rcx,rdi
  402a23:	call   0x402700
  402a28:	test   eax,eax
  402a2a:	je     0x402a0a
  402a2c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a30:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a37:	test   edx,edx
  402a39:	je     0x402a0a
  402a3b:	mov    ebx,edx
  402a3d:	mov    rcx,rdi
  402a40:	mov    rdx,rbx
  402a43:	call   0x402740
  402a48:	test   rax,rax
  402a4b:	je     0x402a0a
  402a4d:	add    rbx,rdi
  402a50:	mov    rdx,rbx
  402a53:	jne    0x402a67
  402a55:	jmp    0x402a0a
  402a57:	nop    WORD PTR [rax+rax*1+0x0]
  402a60:	sub    esi,0x1
  402a63:	add    rdx,0x14
  402a67:	mov    ecx,DWORD PTR [rdx+0x4]
  402a6a:	test   ecx,ecx
  402a6c:	jne    0x402a75
  402a6e:	mov    eax,DWORD PTR [rdx+0xc]
  402a71:	test   eax,eax
  402a73:	je     0x402a90
  402a75:	test   esi,esi
  402a77:	jg     0x402a60
  402a79:	mov    ebp,DWORD PTR [rdx+0xc]
  402a7c:	add    rbp,rdi
  402a7f:	mov    rax,rbp
  402a82:	add    rsp,0x28
  402a86:	pop    rbx
  402a87:	pop    rsi
  402a88:	pop    rdi
  402a89:	pop    rbp
  402a8a:	ret    
  402a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	xor    ebp,ebp
  402a92:	mov    rax,rbp
  402a95:	add    rsp,0x28
  402a99:	pop    rbx
  402a9a:	pop    rsi
  402a9b:	pop    rdi
  402a9c:	pop    rbp
  402a9d:	ret    
  402a9e:	nop
  402a9f:	nop
  402aa0:	push   rcx
  402aa1:	push   rax
  402aa2:	cmp    rax,0x1000
  402aa8:	lea    rcx,[rsp+0x18]
  402aad:	jb     0x402ac8
  402aaf:	sub    rcx,0x1000
  402ab6:	or     QWORD PTR [rcx],0x0
  402aba:	sub    rax,0x1000
  402ac0:	cmp    rax,0x1000
  402ac6:	ja     0x402aaf
  402ac8:	sub    rcx,rax
  402acb:	or     QWORD PTR [rcx],0x0
  402acf:	pop    rax
  402ad0:	pop    rcx
  402ad1:	ret    
  402ad2:	nop
  402ad3:	nop
  402ad4:	nop
  402ad5:	nop
  402ad6:	nop
  402ad7:	nop
  402ad8:	nop
  402ad9:	nop
  402ada:	nop
  402adb:	nop
  402adc:	nop
  402add:	nop
  402ade:	nop
  402adf:	nop
  402ae0:	jmp    QWORD PTR [rip+0x799a]        # 0x40a480
  402ae6:	nop
  402ae7:	nop
  402ae8:	jmp    QWORD PTR [rip+0x798a]        # 0x40a478
  402aee:	nop
  402aef:	nop
  402af0:	jmp    QWORD PTR [rip+0x797a]        # 0x40a470
  402af6:	nop
  402af7:	nop
  402af8:	jmp    QWORD PTR [rip+0x796a]        # 0x40a468
  402afe:	nop
  402aff:	nop
  402b00:	jmp    QWORD PTR [rip+0x795a]        # 0x40a460
  402b06:	nop
  402b07:	nop
  402b08:	jmp    QWORD PTR [rip+0x794a]        # 0x40a458
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x793a]        # 0x40a450
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x792a]        # 0x40a448
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x791a]        # 0x40a440
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x790a]        # 0x40a438
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x78fa]        # 0x40a430
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x78ea]        # 0x40a428
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x78da]        # 0x40a420
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x78ca]        # 0x40a418
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x78ba]        # 0x40a410
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x78aa]        # 0x40a408
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x789a]        # 0x40a400
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x788a]        # 0x40a3f8
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x7872]        # 0x40a3e8
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x7862]        # 0x40a3e0
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x784a]        # 0x40a3d0
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x783a]        # 0x40a3c8
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x782a]        # 0x40a3c0
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x781a]        # 0x40a3b8
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x7802]        # 0x40a3a8
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x77f2]        # 0x40a3a0
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x77e2]        # 0x40a398
  402bb6:	nop
  402bb7:	nop
  402bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bc0:	mov    rax,QWORD PTR [rip+0x6e29]        # 0x4099f0
  402bc7:	ret    
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	mov    rax,rcx
  402bd3:	xchg   QWORD PTR [rip+0x6e16],rax        # 0x4099f0
  402bda:	ret    
  402bdb:	nop
  402bdc:	nop
  402bdd:	nop
  402bde:	nop
  402bdf:	nop
  402be0:	jmp    QWORD PTR [rip+0x77a2]        # 0x40a388
  402be6:	nop
  402be7:	nop
  402be8:	jmp    QWORD PTR [rip+0x7792]        # 0x40a380
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x7782]        # 0x40a378
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x7772]        # 0x40a370
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x7762]        # 0x40a368
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x7752]        # 0x40a360
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x7742]        # 0x40a358
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x7732]        # 0x40a350
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x7722]        # 0x40a348
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x7712]        # 0x40a340
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x7702]        # 0x40a338
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x76f2]        # 0x40a330
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x76e2]        # 0x40a328
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x76d2]        # 0x40a320
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x76c2]        # 0x40a318
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x76b2]        # 0x40a310
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x76a2]        # 0x40a308
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x7692]        # 0x40a300
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x7682]        # 0x40a2f8
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x7672]        # 0x40a2f0
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x7662]        # 0x40a2e8
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x7652]        # 0x40a2e0
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x7642]        # 0x40a2d8
  402c96:	nop
  402c97:	nop
  402c98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ca0:	push   rbp
  402ca1:	push   r13
  402ca3:	push   r12
  402ca5:	push   rdi
  402ca6:	push   rsi
  402ca7:	push   rbx
  402ca8:	mov    rbp,rsp
  402cab:	sub    rsp,0x68
  402caf:	mov    r12d,ecx
  402cb2:	mov    r13,rdx
  402cb5:	call   0x4016f0
  402cba:	cmp    r12d,0x1
  402cbe:	je     0x402ebf
  402cc4:	jle    0x402cdd
  402cc6:	mov    rdx,QWORD PTR [r13+0x8]
  402cca:	movzx  eax,BYTE PTR [rdx]
  402ccd:	cmp    al,0x2d
  402ccf:	je     0x402e4a
  402cd5:	cmp    al,0x2e
  402cd7:	je     0x402d8f
  402cdd:	mov    rdi,QWORD PTR [rip+0x76d4]        # 0x40a3b8
  402ce4:	call   rdi
  402ce6:	lea    rsi,[rax+0x60]
  402cea:	call   rdi
  402cec:	lea    rbx,[rax+0x30]
  402cf0:	call   rdi
  402cf2:	mov    rdx,rbx
  402cf5:	mov    rcx,rax
  402cf8:	mov    QWORD PTR [rsp+0x20],r13
  402cfd:	mov    r9d,r12d
  402d00:	mov    r8,rsi
  402d03:	call   0x401560
  402d08:	mov    rax,QWORD PTR [rip+0x37c1]        # 0x4064d0
  402d0f:	mov    rdx,rbp
  402d12:	mov    rcx,QWORD PTR [rax]
  402d15:	add    rcx,0x770
  402d1c:	call   0x402b50
  402d21:	test   eax,eax
  402d23:	mov    ebx,eax
  402d25:	je     0x402dc3
  402d2b:	mov    rax,QWORD PTR [rip+0x379e]        # 0x4064d0
  402d32:	xor    ecx,ecx
  402d34:	mov    rax,QWORD PTR [rax]
  402d37:	mov    DWORD PTR [rax+0xac4],0x1
  402d41:	call   0x401568
  402d46:	lea    rdx,[rbp-0x18]
  402d4a:	lea    rcx,[rbp-0x1c]
  402d4e:	call   0x401548
  402d53:	mov    esi,DWORD PTR [rbp-0x1c]
  402d56:	test   esi,esi
  402d58:	jne    0x402d61
  402d5a:	mov    eax,DWORD PTR [rbp-0x18]
  402d5d:	test   eax,eax
  402d5f:	je     0x402d80
  402d61:	mov    edi,DWORD PTR [rbp-0x18]
  402d64:	call   QWORD PTR [rip+0x764e]        # 0x40a3b8
  402d6a:	lea    rdx,[rip+0x328f]        # 0x406000
  402d71:	lea    rcx,[rax+0x60]
  402d75:	mov    r9d,esi
  402d78:	mov    r8d,edi
  402d7b:	call   0x402b28
  402d80:	mov    eax,ebx
  402d82:	add    rsp,0x68
  402d86:	pop    rbx
  402d87:	pop    rsi
  402d88:	pop    rdi
  402d89:	pop    r12
  402d8b:	pop    r13
  402d8d:	pop    rbp
  402d8e:	ret    
  402d8f:	cmp    BYTE PTR [rdx+0x1],0x0
  402d93:	jne    0x402cdd
  402d99:	mov    rax,QWORD PTR [rip+0x3740]        # 0x4064e0
  402da0:	mov    rbx,QWORD PTR [rax]
  402da3:	call   QWORD PTR [rip+0x760f]        # 0x40a3b8
  402da9:	lea    rdx,[rip+0x290]        # 0x403040
  402db0:	lea    rcx,[rax+0x30]
  402db4:	mov    r8,rbx
  402db7:	call   0x402b28
  402dbc:	xor    ecx,ecx
  402dbe:	call   0x402b30
  402dc3:	mov    rsi,QWORD PTR [rip+0x3706]        # 0x4064d0
  402dca:	mov    rax,QWORD PTR [rsi]
  402dcd:	lea    rcx,[rax+0x28c]
  402dd4:	call   0x401550
  402dd9:	lea    rdx,[rbp-0x10]
  402ddd:	lea    rcx,[rbp-0x14]
  402de1:	lea    r8,[rbp-0xc]
  402de5:	call   0x401530
  402dea:	mov    r9d,DWORD PTR [rbp-0xc]
  402dee:	mov    r8d,DWORD PTR [rbp-0x10]
  402df2:	mov    rcx,rax
  402df5:	mov    edx,DWORD PTR [rbp-0x14]
  402df8:	call   0x401558
  402dfd:	call   0x401538
  402e02:	call   0x401578
  402e07:	call   0x401540
  402e0c:	mov    rax,QWORD PTR [rsi]
  402e0f:	cmp    DWORD PTR [rax+0x228],0x0
  402e16:	je     0x402d2b
  402e1c:	cmp    DWORD PTR [rax+0x4c],0x0
  402e20:	jne    0x402d2b
  402e26:	cmp    DWORD PTR [rax+0x1f8],0x0
  402e2d:	jne    0x402d2b
  402e33:	cmp    DWORD PTR [rax+0x1f4],0x0
  402e3a:	jne    0x402d2b
  402e40:	call   0x401570
  402e45:	jmp    0x402d2b
  402e4a:	cmp    BYTE PTR [rdx+0x1],0x0
  402e4e:	jne    0x402cdd
  402e54:	mov    rax,QWORD PTR [rip+0x3685]        # 0x4064e0
  402e5b:	mov    rbx,QWORD PTR [rax]
  402e5e:	call   QWORD PTR [rip+0x7554]        # 0x40a3b8
  402e64:	lea    rcx,[rax+0x30]
  402e68:	lea    rax,[rip+0xfd1]        # 0x403e40
  402e6f:	lea    rdx,[rip+0x26ca]        # 0x405540
  402e76:	movsd  xmm0,QWORD PTR [rip+0x31da]        # 0x406058
  402e7e:	mov    r8,rbx
  402e81:	mov    QWORD PTR [rsp+0x38],rax
  402e86:	lea    rax,[rip+0x1373]        # 0x404200
  402e8d:	movapd xmm3,xmm0
  402e91:	movq   r9,xmm0
  402e96:	mov    QWORD PTR [rsp+0x30],rax
  402e9b:	lea    rax,[rip+0x1a1e]        # 0x4048c0
  402ea2:	mov    QWORD PTR [rsp+0x28],rax
  402ea7:	lea    rax,[rip+0x2112]        # 0x404fc0
  402eae:	mov    QWORD PTR [rsp+0x20],rax
  402eb3:	call   0x402b28
  402eb8:	xor    ecx,ecx
  402eba:	call   0x402b30
  402ebf:	xor    ecx,ecx
  402ec1:	call   0x402ae0
  402ec6:	test   eax,eax
  402ec8:	je     0x402cdd
  402ece:	mov    rax,QWORD PTR [rip+0x360b]        # 0x4064e0
  402ed5:	mov    rbx,QWORD PTR [rax]
  402ed8:	call   QWORD PTR [rip+0x74da]        # 0x40a3b8
  402ede:	lea    rdx,[rip+0x7db]        # 0x4036c0
  402ee5:	lea    rcx,[rax+0x30]
  402ee9:	mov    r8,rbx
  402eec:	call   0x402b28
  402ef1:	xor    ecx,ecx
  402ef3:	call   0x402b30
  402ef8:	nop
  402ef9:	nop
  402efa:	nop
  402efb:	nop
  402efc:	nop
  402efd:	nop
  402efe:	nop
  402eff:	nop
  402f00:	(bad)  
  402f01:	(bad)  
  402f02:	(bad)  
  402f03:	(bad)  
  402f04:	(bad)  
  402f05:	(bad)  
  402f06:	(bad)  
  402f07:	inc    DWORD PTR [rax]
  402f09:	add    BYTE PTR [rax],al
  402f0b:	add    BYTE PTR [rax],al
  402f0d:	add    BYTE PTR [rax],al
  402f0f:	add    bh,bh
  402f11:	(bad)  
  402f12:	(bad)  
  402f13:	(bad)  
  402f14:	(bad)  
  402f15:	(bad)  
  402f16:	(bad)  
  402f17:	inc    DWORD PTR [rax]
  402f19:	add    BYTE PTR [rax],al
  402f1b:	add    BYTE PTR [rax],al
  402f1d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000403000 <.data>:
  403000:	or     al,BYTE PTR [rax]
	...
  40303e:	add    BYTE PTR [rax],al
  403040:	or     dl,BYTE PTR [rcx+0x68]
  403043:	jne    0x4030b1
  403045:	ins    BYTE PTR es:[rdi],dx
  403046:	and    BYTE PTR [rip+0x450a2e73],ah        # 0x454a5ebf
  40304c:	js     0x4030b1
  40304e:	gs jo  0x4030c5
  403051:	and    BYTE PTR [rsi+0x6f],ah
  403054:	jb     0x403076
  403056:	(bad)  
  403057:	rex.RX
  403058:	cs (bad) 
  40305a:	and    BYTE PTR [rcx+0x6e],ah
  40305d:	and    BYTE PTR fs:[rdi],ah
  403060:	push   rax
  403061:	rex.RXB (bad) 
  403063:	sub    al,0x20
  403065:	jne    0x4030d7
  403067:	jo     0x4030ce
  403069:	jb     0x403098
  40306b:	movsxd esp,DWORD PTR [rcx+0x73]
  40306e:	and    BYTE PTR gs:[rdi+0x70],ch
  403072:	je     0x4030dd
  403074:	outs   dx,DWORD PTR ds:[rsi]
  403075:	outs   dx,BYTE PTR ds:[rsi]
  403076:	jae    0x403098
  403078:	je     0x4030db
  40307a:	imul   esp,DWORD PTR [rbp+0x20],0x61
  40307e:	outs   dx,BYTE PTR ds:[rsi]
  40307f:	and    BYTE PTR [rcx+0x72],ah
  403082:	addr32 jne 0x4030f2
  403085:	outs   dx,BYTE PTR gs:[rsi]
  403087:	je     0x4030b7
  403089:	or     cl,BYTE PTR [rdx]
  40308b:	and    BYTE PTR [rbp+riz*2+0x6c],ah
  40308f:	(bad)  
  403090:	jne    0x403100
  403092:	(bad)  
  403093:	jns    0x4030b5
  403095:	and    BYTE PTR [rax],ah
  403097:	and    BYTE PTR [rax],ah
  403099:	and    BYTE PTR [rax],ah
  40309b:	jbe    0x40310c
  40309d:	jb     0x40310e
  40309f:	outs   dx,BYTE PTR ds:[rsi]
  4030a0:	outs   dx,DWORD PTR ds:[rsi]
  4030a1:	imul   ecx,DWORD PTR [rcx],0x20202020
  4030a7:	and    BYTE PTR [rax],ah
  4030a9:	and    BYTE PTR [rdi+0x65],al
  4030ac:	outs   dx,DWORD PTR ds:[rsi]
  4030ad:	ins    DWORD PTR es:[rdi],dx
  4030ae:	jbe    0x403119
  4030b0:	gs ja  0x4030d3
  4030b3:	and    BYTE PTR [rax],ah
  4030b5:	and    BYTE PTR [rax],ah
  4030b7:	and    BYTE PTR [rax],ah
  4030b9:	rex.W (bad) 
  4030bb:	ins    BYTE PTR es:[rdi],dx
  4030bc:	data16 jae 0x40312f
  4030bf:	(bad)  
  4030c0:	movsxd esp,DWORD PTR [rbp+0x20]
  4030c3:	and    BYTE PTR [rax],ah
  4030c5:	and    BYTE PTR [rax],ah
  4030c7:	and    BYTE PTR [rsi+0x61],ah
  4030ca:	movsxd esp,DWORD PTR [rbp+0x74]
  4030cd:	pop    rdi
  4030ce:	fs jne 0x40313e
  4030d1:	jo     0x4030dd
  4030d3:	and    BYTE PTR [rcx+0x6e],ch
  4030d6:	movsxd ebp,DWORD PTR [rcx+0x64]
  4030d9:	outs   dx,BYTE PTR gs:[rsi]
  4030db:	movsxd esp,DWORD PTR [rbp+0x73]
  4030de:	and    BYTE PTR [rax],ah
  4030e0:	and    BYTE PTR [rax],ah
  4030e2:	and    BYTE PTR [rbp+0x61],ch
  4030e5:	je     0x40314f
  4030e7:	gs ins DWORD PTR es:[rdi],dx
  4030e9:	(bad)  
  4030ea:	je     0x403155
  4030ec:	movsxd esp,DWORD PTR [rcx+0x20]
  4030ef:	and    BYTE PTR [rax],ah
  4030f1:	and    BYTE PTR [rsi+0x6f],ch
  4030f4:	jb     0x403163
  4030f6:	(bad)  
  4030f7:	ins    BYTE PTR es:[rdi],dx
  4030f8:	jae    0x40311a
  4030fa:	and    BYTE PTR [rax],ah
  4030fc:	and    BYTE PTR [rax],ah
  4030fe:	and    BYTE PTR [rax],ah
  403100:	and    BYTE PTR [rdi+0x46],cl
  403103:	rex.RX pop rdi
  403105:	outs   dx,WORD PTR ds:[rsi]
  403107:	jb     0x403176
  403109:	(bad)  
  40310a:	je     0x40312c
  40310c:	and    BYTE PTR [rax],ah
  40310e:	and    BYTE PTR [rax],ah
  403110:	jo     0x403181
  403112:	imul   ebp,DWORD PTR [rsi+0x74],0x73200a73
  403119:	jne    0x403188
  40311b:	ins    DWORD PTR es:[rdi],dx
  40311c:	(bad)  
  40311d:	jb     0x403198
  40311f:	or     cl,BYTE PTR [rdx]
  403121:	and    BYTE PTR [rsi+0x61],al
  403124:	jb     0x40318b
  403126:	(bad)  
  403127:	and    BYTE PTR [rax],ah
  403129:	and    BYTE PTR [rax],ah
  40312b:	and    BYTE PTR [rax],ah
  40312d:	and    BYTE PTR [rax],ah
  40312f:	and    BYTE PTR [rax],ah
  403131:	rex.RX
  403132:	rex.B jb 0x40319a
  403135:	(bad)  
  403136:	sub    eax,0x61746f74
  40313b:	ins    BYTE PTR es:[rdi],dx
  40313c:	and    BYTE PTR [rax],ah
  40313e:	and    BYTE PTR [rax],ah
  403140:	rex.RX movsxd r13d,DWORD PTR [rdi+0x70]
  403144:	ins    BYTE PTR es:[rdi],dx
  403145:	(bad)  
  403146:	outs   dx,BYTE PTR ds:[rsi]
  403147:	(bad)  
  403148:	jb     0x4031bd
  40314a:	and    BYTE PTR [rax],ah
  40314c:	and    BYTE PTR [rax],ah
  40314e:	and    BYTE PTR [rsi+0x43],al
  403151:	outs   dx,BYTE PTR gs:[rsi]
  403153:	je     0x4031c7
  403155:	jne    0x4031c4
  403157:	jae    0x403179
  403159:	and    BYTE PTR [rax],ah
  40315b:	and    BYTE PTR [rax],ah
  40315d:	and    BYTE PTR [rsi+0x64],al
  403160:	sub    eax,0x2d646463
  403165:	imul   ebp,DWORD PTR [rsi+0xa],0x2d444620
  40316c:	movsxd esp,DWORD PTR [rsp+riz*2+0x2d]
  403170:	outs   dx,DWORD PTR ds:[rsi]
  403171:	jne    0x4031e7
  403173:	and    BYTE PTR [rax],ah
  403175:	and    BYTE PTR [rax],ah
  403177:	and    BYTE PTR [rsi+0x46],al
  40317a:	sub    eax,0x706d7564
  40317f:	sub    eax,0x64697278
  403184:	and    BYTE PTR gs:[esi+0x69],al
  403189:	outs   dx,BYTE PTR ds:[rsi]
  40318a:	outs   dx,BYTE PTR ds:[rsi]
  40318b:	gs jb  0x4031ae
  40318e:	and    BYTE PTR [rax],ah
  403190:	and    BYTE PTR [rax],ah
  403192:	and    BYTE PTR [rax],ah
  403194:	and    BYTE PTR [rax],ah
  403196:	rex.RX
  403197:	rex.WB
  403198:	rex.R jae 0x4031bb
  40319b:	and    BYTE PTR [rax],ah
  40319d:	and    BYTE PTR [rax],ah
  40319f:	and    BYTE PTR [rax],ah
  4031a1:	and    BYTE PTR [rax],ah
  4031a3:	and    BYTE PTR [rax],ah
  4031a5:	rex.RX ins DWORD PTR es:[rdi],dx
  4031a7:	gs jb  0x403211
  4031aa:	gs jae 0x4031b7
  4031ad:	and    BYTE PTR [rsi+0x6e],al
  4031b0:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  4031b8:	and    BYTE PTR [rax],ah
  4031ba:	and    BYTE PTR [rax],ah
  4031bc:	and    BYTE PTR [rsi+0x4e],al
  4031bf:	imul   esp,DWORD PTR gs:[rdi+0x68],0x7265762d
  4031c7:	je     0x40322e
  4031c9:	js     0x4031eb
  4031cb:	and    BYTE PTR [rsi+0x6f],al
  4031ce:	jne    0x403244
  4031d0:	gs jb  0x4031f3
  4031d3:	and    BYTE PTR [rax],ah
  4031d5:	and    BYTE PTR [rax],ah
  4031d7:	and    BYTE PTR [rax],ah
  4031d9:	and    BYTE PTR [rax],ah
  4031db:	rex.RX
  4031dc:	rex.WRXB jo 0x403253
  4031df:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202073
  4031e6:	and    BYTE PTR [rax],ah
  4031e8:	and    BYTE PTR [rax],ah
  4031ea:	rex.RX jo 0x40325c
  4031ed:	imul   ebp,DWORD PTR [rsi+0x74],0x746e692d
  4031f4:	gs jb  0x40326a
  4031f7:	movsxd esi,DWORD PTR gs:[rdx+rcx*1+0x20]
  4031fc:	rex.RX push rax
  4031fe:	outs   dx,DWORD PTR ds:[rsi]
  4031ff:	imul   ebp,DWORD PTR [rsi+0x74],0x61656e5f
  403206:	jb     0x403228
  403208:	and    BYTE PTR [rax],ah
  40320a:	and    BYTE PTR [rsi+0x51],al
  40320d:	push   0x206c6c75
  403212:	and    BYTE PTR [rax],ah
  403214:	and    BYTE PTR [rax],ah
  403216:	and    BYTE PTR [rax],ah
  403218:	and    BYTE PTR [rax],ah
  40321a:	rex.RX jae 0x403292
  40321d:	ins    DWORD PTR es:[rdi],dx
  40321e:	ins    DWORD PTR es:[rdi],dx
  40321f:	(bad)  
  403220:	jb     0x40329b
  403222:	and    BYTE PTR [rax],ah
  403224:	and    BYTE PTR [rax],ah
  403226:	and    BYTE PTR [rax],ah
  403228:	and    BYTE PTR [rsi+0x53],al
  40322b:	imul   edi,DWORD PTR [rdx+0x65],0x20202020
  403232:	and    BYTE PTR [rax],ah
  403234:	and    BYTE PTR [rax],ah
  403236:	and    BYTE PTR [rax],ah
  403238:	rex.RX je 0x4032ad
  40323b:	imul   esp,DWORD PTR [rcx+0x6e],0x73656c67
  403242:	or     ah,BYTE PTR [rax]
  403244:	rex.RX jbe 0x4032ac
  403247:	jb     0x4032bd
  403249:	imul   esp,DWORD PTR [rbx+0x65],0x20202073
  403250:	and    BYTE PTR [rax],ah
  403252:	and    BYTE PTR [rsi+0x76],al
  403255:	outs   dx,DWORD PTR ds:[rsi]
  403256:	jb     0x4032c7
  403258:	outs   dx,BYTE PTR ds:[rsi]
  403259:	outs   dx,DWORD PTR ds:[rsi]
  40325a:	imul   esp,DWORD PTR [rax],0x20202020
  403260:	and    BYTE PTR [rax],ah
  403262:	rex.RX push rsi
  403264:	gs jb  0x4032db
  403267:	gs js  0x403297
  40326a:	(bad)  
  40326b:	jbe    0x4032d2
  40326d:	and    BYTE PTR [rax],ah
  40326f:	and    BYTE PTR [rax],ah
  403271:	rex.RX js 0x4032e8
  403274:	jb     0x4032db
  403276:	ins    DWORD PTR es:[rdi],dx
  403277:	gs jae 0x40329a
  40327a:	and    BYTE PTR [rax],ah
  40327c:	and    BYTE PTR [rax],ah
  40327e:	and    BYTE PTR [rax],ah
  403280:	rex.RX
  403281:	rex.WRB (bad) 
  403283:	jo     0x4032f1
  403285:	or     cl,BYTE PTR gs:[rdx]
  403288:	and    BYTE PTR [rdi+0x76],al
  40328b:	gs jb  0x403302
  40328e:	imul   esp,DWORD PTR [rbx+0x65],0x20202073
  403295:	and    BYTE PTR [rax],ah
  403297:	and    BYTE PTR [rdi+0x70],al
  40329a:	outs   dx,DWORD PTR ds:[rsi]
  40329b:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  4032a2:	and    BYTE PTR [rax],ah
  4032a4:	and    BYTE PTR [rax],ah
  4032a6:	and    BYTE PTR [rdi+0x61],al
  4032a9:	ins    BYTE PTR es:[rdi],dx
  4032aa:	ins    BYTE PTR es:[rdi],dx
  4032ab:	pop    rdi
  4032ac:	jo     0x40331d
  4032ae:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  4032b5:	and    BYTE PTR [rdi+0x6e],al
  4032b8:	outs   dx,DWORD PTR ds:[rsi]
  4032b9:	pop    rdi
  4032ba:	jo     0x403328
  4032bc:	(bad)  
  4032bd:	outs   dx,BYTE PTR ds:[rsi]
  4032be:	gs jae 0x4032e1
  4032c1:	and    BYTE PTR [rax],ah
  4032c3:	and    BYTE PTR [rax],ah
  4032c5:	rex.RXB imul r13d,DWORD PTR [r14+0x6e],0x200a7265
  4032cd:	rex.RXB movsxd r12d,DWORD PTR [r13+0x6e]
  4032d1:	je     0x403345
  4032d3:	jne    0x403342
  4032d5:	jae    0x4032f7
  4032d7:	and    BYTE PTR [rax],ah
  4032d9:	and    BYTE PTR [rax],ah
  4032db:	and    BYTE PTR [rdi+0x68],al
  4032de:	jns    0x403350
  4032e0:	gs jb  0x403353
  4032e3:	ins    BYTE PTR es:[rdi],dx
  4032e4:	(bad)  
  4032e5:	outs   dx,BYTE PTR ds:[rsi]
  4032e6:	gs jae 0x403309
  4032e9:	and    BYTE PTR [rax],ah
  4032eb:	rex.RXB jb 0x403357
  4032ee:	fs addr32 gs jae 0x403313
  4032f3:	and    BYTE PTR [rax],ah
  4032f5:	and    BYTE PTR [rax],ah
  4032f7:	and    BYTE PTR [rax],ah
  4032f9:	and    BYTE PTR [rdi+0x6f],al
  4032fc:	jne    0x403372
  4032fe:	gs jb  0x403321
  403301:	and    BYTE PTR [rax],ah
  403303:	and    BYTE PTR [rax],ah
  403305:	and    BYTE PTR [rax],ah
  403307:	and    BYTE PTR [rax],ah
  403309:	rex.RXB
  40330a:	rex.R jb 0x40337c
  40330d:	jo     0x40336e
  40330f:	imul   ebp,DWORD PTR fs:[rbp+0xa],0x72744720
  403317:	(bad)  
  403318:	outs   dx,BYTE PTR ds:[rsi]
  403319:	jae    0x40338b
  40331b:	(bad)  
  40331c:	jb     0x403383
  40331e:	outs   dx,BYTE PTR ds:[rsi]
  40331f:	je     0x40332b
  403321:	or     ah,BYTE PTR [rax]
  403323:	push   rax
  403324:	rex.B jb 0x40338c
  403327:	(bad)  
  403328:	sub    eax,0x7065656b
  40332d:	and    BYTE PTR [rax],ah
  40332f:	and    BYTE PTR [rax],ah
  403331:	and    BYTE PTR [rax+0x64],dl
  403334:	jb     0x4033a5
  403336:	jo     0x403358
  403338:	xor    BYTE PTR fs:[rdx],bh
  40333b:	xor    BYTE PTR [rax+rsi*1+0x20],al
  40333f:	and    BYTE PTR [rax],ah
  403341:	push   rax
  403342:	outs   dx,DWORD PTR ds:[esi]
  403344:	outs   dx,DWORD PTR ds:[rsi]
  403345:	and    BYTE PTR fs:[rax],ah
  403348:	and    BYTE PTR [rax],ah
  40334a:	and    BYTE PTR [rax],ah
  40334c:	and    BYTE PTR [rax],ah
  40334e:	and    BYTE PTR [rax],ah
  403350:	push   rax
  403351:	rex.RX (bad) 
  403353:	movsxd esp,DWORD PTR [rbp+0x74]
  403356:	pop    rdi
  403357:	(bad)  
  403358:	jb     0x4033bf
  40335a:	(bad)  
  40335b:	pop    rdi
  40335c:	imul   esp,DWORD PTR [rbp+0x65],0x70
  403360:	or     ah,BYTE PTR [rax]
  403362:	push   rax
  403363:	rex.RXB outs dx,DWORD PTR ds:[rsi]
  403365:	outs   dx,DWORD PTR ds:[rsi]
  403366:	fs pop rdi
  403368:	outs   dx,BYTE PTR ds:[rsi]
  403369:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  403371:	and    BYTE PTR [rax+0x4d],dl
  403374:	gs jb  0x4033de
  403377:	gs sub eax,0x7065656b
  40337d:	and    BYTE PTR [rax],ah
  40337f:	and    BYTE PTR [rax+0x6f],dl
  403382:	jne    0x4033f8
  403384:	jo     0x4033fb
  403386:	je     0x4033e7
  403388:	outs   dx,WORD PTR ds:[rsi]
  40338a:	jb     0x4033ef
  40338c:	gs and BYTE PTR fs:[rax+0x70],dl
  403391:	jb     0x4033f8
  403393:	movsxd ebp,DWORD PTR [rcx+0x73]
  403396:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e5f
  40339d:	or     cl,BYTE PTR [rdx]
  40339f:	and    BYTE PTR [rcx+0x62],dl
  4033a2:	rex.X outs dx,DWORD PTR ds:[rsi]
  4033a4:	jne    0x403414
  4033a6:	and    BYTE PTR fs:[rax],dh
  4033a9:	cmp    dh,BYTE PTR [rax]
  4033ab:	cs xor eax,0x62512020
  4033b1:	imul   edi,DWORD PTR [rdx],0x30
  4033b4:	rex.X imul edi,DWORD PTR [rdx],0x30
  4033b8:	pop    rdi
  4033b9:	fs jb  0x40342b
  4033bc:	jo     0x4033de
  4033be:	push   rcx
  4033bf:	(bad)
  4033c4:	(bad)  
  4033c5:	ins    BYTE PTR es:[rdi],dx
  4033c6:	gs sub eax,0x20786f62
  4033cc:	and    BYTE PTR [rcx+0x62],dl
  4033cf:	(bad)  
  4033d0:	sub    eax,0x6c616373
  4033d5:	gs sub eax,0x7473616c
  4033db:	and    BYTE PTR [rcx+0x63],dl
  4033de:	outs   dx,DWORD PTR ds:[rsi]
  4033df:	jo     0x40344d
  4033e1:	(bad)  
  4033e2:	outs   dx,BYTE PTR ds:[rsi]
  4033e3:	(bad)  
  4033e4:	jb     0x4033f0
  4033e6:	and    BYTE PTR [rcx+0x66],dl
  4033e9:	jne    0x40345d
  4033eb:	je     0x403455
  4033ed:	gs jae 0x403464
  4033f0:	and    BYTE PTR [rax],ah
  4033f2:	and    BYTE PTR [rax],ah
  4033f4:	and    BYTE PTR [rax],ah
  4033f6:	push   rcx
  4033f7:	outs   dx,DWORD PTR ds:[esi]
  4033f9:	outs   dx,DWORD PTR ds:[rsi]
  4033fa:	fs pop rdi
  4033fc:	outs   dx,DWORD PTR ds:[rsi]
  4033fd:	outs   dx,BYTE PTR ds:[rsi]
  4033fe:	ins    BYTE PTR es:[rdi],dx
  4033ff:	jns    0x403421
  403401:	and    BYTE PTR [rax],ah
  403403:	and    BYTE PTR [rax],ah
  403405:	push   rcx
  403406:	rex.RXB outs dx,DWORD PTR ds:[rsi]
  403408:	outs   dx,DWORD PTR ds:[rsi]
  403409:	fs pop rdi
  40340b:	jo     0x40347c
  40340d:	imul   ebp,DWORD PTR [rsi+0x74],0x20202020
  403414:	push   rcx
  403415:	imul   ebp,DWORD PTR [rsi+0x74],0x6f697265
  40341c:	jb     0x40343e
  40341e:	and    BYTE PTR [rax],ah
  403420:	and    BYTE PTR [rax],ah
  403422:	and    BYTE PTR [rcx+0x6d],dl
  403425:	(bad)  
  403426:	js     0x403487
  403428:	outs   dx,DWORD PTR ds:[rsi]
  403429:	jne    0x40349f
  40342b:	or     ah,BYTE PTR [rax]
  40342d:	push   rcx
  40342e:	rex.WX outs dx,DWORD PTR ds:[rsi]
  403430:	addr32 ins BYTE PTR es:[edi],dx
  403433:	and    BYTE PTR gs:[rax],ah
  403436:	and    BYTE PTR [rax],ah
  403438:	and    BYTE PTR [rax],ah
  40343a:	and    BYTE PTR [rax],ah
  40343c:	push   rcx
  40343d:	jb     0x4034a0
  40343f:	outs   dx,BYTE PTR ds:[rsi]
  403440:	outs   dx,DWORD PTR fs:[rsi]
  403442:	ins    DWORD PTR es:[rdi],dx
  403443:	and    BYTE PTR [rax],ah
  403445:	and    BYTE PTR [rax],ah
  403447:	and    BYTE PTR [rax],ah
  403449:	and    BYTE PTR [rax],ah
  40344b:	push   rcx
  40344c:	push   rdx
  40344d:	outs   dx,DWORD PTR ds:[rsi]
  40344e:	je     0x4034b1
  403450:	je     0x4034b7
  403452:	and    BYTE PTR [rax],ah
  403454:	and    BYTE PTR [rax],ah
  403456:	and    BYTE PTR [rax],ah
  403458:	and    BYTE PTR [rax],ah
  40345a:	push   rcx
  40345b:	jae    0x4034c2
  40345d:	(bad)  
  40345e:	jb     0x4034c3
  403460:	push   0x7473315f
  403465:	and    BYTE PTR [rax],ah
  403467:	and    BYTE PTR [rax],ah
  403469:	push   rcx
  40346a:	je     0x4034de
  40346c:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  403473:	je     0x4034da
  403475:	or     ah,BYTE PTR [rax]
  403477:	push   rcx
  403478:	jne    0x4034ea
  40347a:	jo     0x4034e1
  40347c:	jb     0x4034c2
  40347e:	gs ins BYTE PTR es:[rdi],dx
  403480:	(bad)  
  403481:	jne    0x4034f1
  403483:	(bad)  
  403484:	jns    0x4034a6
  403486:	push   rcx
  403487:	push   rsi
  403488:	gs jb  0x4034ff
  40348b:	gs js  0x4034ed
  40348e:	outs   dx,DWORD PTR ds:[esi]
  403490:	outs   dx,DWORD PTR ds:[rsi]
  403491:	and    BYTE PTR fs:[rax],ah
  403494:	and    BYTE PTR [rcx+0x76],dl
  403497:	outs   dx,BYTE PTR ds:[rsi]
  403498:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  4034a0:	and    BYTE PTR [rax],ah
  4034a2:	and    BYTE PTR [rax],ah
  4034a4:	push   rcx
  4034a5:	js     0x403508
  4034a7:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6d]
  4034ab:	gs jb  0x403515
  4034ae:	and    BYTE PTR gs:[rax],ah
  4034b1:	and    BYTE PTR [rax],ah
  4034b3:	push   rcx
  4034b4:	jp     0x40351f
  4034b6:	outs   dx,BYTE PTR ds:[rsi]
  4034b7:	imul   bp,WORD PTR [rsi+0x69],0x6574
  4034bd:	or     cl,BYTE PTR [rdx]
  4034bf:	and    BYTE PTR [rcx+0x30],dl
  4034c2:	pop    rdi
  4034c3:	outs   dx,BYTE PTR ds:[rsi]
  4034c4:	outs   dx,DWORD PTR ds:[rsi]
  4034c5:	pop    rdi
  4034c6:	jo     0x40353a
  4034c8:	gs ins DWORD PTR es:[rdi],dx
  4034ca:	gs jb  0x403534
  4034cd:	and    BYTE PTR gs:[rcx+0x31],dl
  4034d1:	pop    rdi
  4034d2:	outs   dx,BYTE PTR ds:[rsi]
  4034d3:	outs   dx,DWORD PTR ds:[rsi]
  4034d4:	pop    rdi
  4034d5:	(bad)  
  4034d6:	outs   dx,BYTE PTR ds:[rsi]
  4034d7:	ins    BYTE PTR es:[edi],dx
  4034d9:	and    BYTE PTR gs:[rax],ah
  4034dc:	and    BYTE PTR [rax],ah
  4034de:	push   rcx
  4034df:	xor    bl,BYTE PTR [rdi+0x6e]
  4034e2:	outs   dx,DWORD PTR ds:[rsi]
  4034e3:	pop    rdi
  4034e4:	imul   ebp,DWORD PTR [rsi+0x64],0x6e657065
  4034eb:	and    BYTE PTR fs:[rcx+0x33],dl
  4034ef:	pop    rdi
  4034f0:	outs   dx,BYTE PTR ds:[rsi]
  4034f1:	outs   dx,DWORD PTR ds:[rsi]
  4034f2:	pop    rdi
  4034f3:	jb     0x40355a
  4034f5:	fs jne 0x403566
  4034f8:	fs (bad) 
  4034fa:	outs   dx,BYTE PTR ds:[rsi]
  4034fb:	je     0x40351d
  4034fd:	push   rcx
  4034fe:	xor    al,0x5f
  403500:	outs   dx,BYTE PTR ds:[rsi]
  403501:	outs   dx,DWORD PTR ds:[rsi]
  403502:	pop    rdi
  403503:	outs   dx,DWORD PTR ds:[rsi]
  403504:	ins    BYTE PTR es:[rdi],dx
  403505:	or     ah,BYTE PTR fs:[rax]
  403508:	push   rcx
  403509:	xor    eax,0x5f6f6e5f
  40350e:	movsxd ebp,DWORD PTR [rax+0x65]
  403511:	movsxd ebp,DWORD PTR [rbx+0x5f]
  403514:	outs   dx,DWORD PTR ds:[rsi]
  403515:	jne    0x40358b
  403517:	and    BYTE PTR [rcx+0x36],dl
  40351a:	pop    rdi
  40351b:	outs   dx,BYTE PTR ds:[rsi]
  40351c:	outs   dx,DWORD PTR ds:[rsi]
  40351d:	pop    rdi
  40351e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  403521:	movsxd esp,DWORD PTR [rcx+0x76]
  403524:	and    BYTE PTR gs:[rcx+0x37],dl
  403528:	pop    rdi
  403529:	fs gs jo 0x4035a1
  40352d:	push   0x7269665f
  403532:	jae    0x4035a8
  403534:	and    BYTE PTR [rcx+0x38],dl
  403537:	pop    rdi
  403538:	outs   dx,BYTE PTR ds:[rsi]
  403539:	outs   dx,DWORD PTR ds:[rsi]
  40353a:	pop    rdi
  40353b:	outs   dx,BYTE PTR ds:[rsi]
  40353c:	gs (bad) 
  40353e:	jb     0x40359f
  403540:	imul   ebp,DWORD PTR [rsi+0x20],0x5f395120
  403547:	jo     0x4035b2
  403549:	movsxd ebp,DWORD PTR [rbx+0x5f]
  40354c:	data16 jne 0x4035c1
  40354f:	je     0x4035b9
  403551:	gs jae 0x4035c8
  403554:	or     ah,BYTE PTR [rax]
  403556:	push   rcx
  403557:	xor    DWORD PTR [rax],esi
  403559:	pop    rdi
  40355a:	outs   dx,BYTE PTR ds:[rsi]
  40355b:	outs   dx,DWORD PTR ds:[rsi]
  40355c:	pop    rdi
  40355d:	outs   dx,BYTE PTR ds:[rsi]
  40355e:	(bad)  
  40355f:	jb     0x4035d3
  403561:	outs   dx,DWORD PTR ds:[rsi]
  403562:	ja     0x403584
  403564:	and    BYTE PTR [rcx+0x31],dl
  403567:	xor    DWORD PTR [rdi+0x74],ebx
  40356a:	jb     0x4035d5
  40356c:	outs   dx,BYTE PTR ds:[rsi]
  40356d:	outs   dx,DWORD PTR ds:[rsi]
  40356e:	jb     0x4035dd
  403570:	(bad)  
  403571:	ins    BYTE PTR es:[rdi],dx
  403572:	jae    0x40357e
  403574:	or     ah,BYTE PTR [rax]
  403576:	push   rsp
  403577:	xor    al,0x5f
  403579:	je     0x4035ed
  40357b:	(bad)  
  40357c:	movsxd esp,DWORD PTR [rbp+0x20]
  40357f:	and    BYTE PTR [rax],ah
  403581:	and    BYTE PTR [rax],ah
  403583:	and    BYTE PTR [rax],ah
  403585:	push   rsp
  403586:	movsxd ebp,DWORD PTR [rax+0x65]
  403589:	movsxd ebp,DWORD PTR [rbx+0x5f]
  40358c:	outs   dx,DWORD PTR ds:[rsi]
  40358d:	data16 je 0x4035f5
  403590:	outs   dx,BYTE PTR ds:[rsi]
  403591:	and    BYTE PTR [rax],ah
  403593:	and    BYTE PTR [rbx+rsi*2+0x74],dl
  403597:	(bad)  
  403598:	je     0x403603
  40359a:	jae    0x403610
  40359c:	imul   esp,DWORD PTR [rbx+0x73],0x20202020
  4035a3:	push   rsp
  4035a4:	jbe    0x40360b
  4035a6:	jb     0x403611
  4035a8:	data16 jns 0x4035cb
  4035ab:	and    BYTE PTR [rax],ah
  4035ad:	and    BYTE PTR [rax],ah
  4035af:	and    BYTE PTR [rax],ah
  4035b1:	and    BYTE PTR [rdx+rdi*2+0x5f],dl
  4035b5:	jae    0x40362b
  4035b7:	outs   dx,DWORD PTR fs:[rsi]
  4035b9:	jne    0x40362f
  4035bb:	or     ah,BYTE PTR [rax]
  4035bd:	push   rsp
  4035be:	rex.RX (bad) 
  4035c0:	movsxd esp,DWORD PTR [rbp+0x74]
  4035c3:	pop    rdi
  4035c4:	ins    BYTE PTR es:[rdi],dx
  4035c5:	outs   dx,DWORD PTR ds:[rsi]
  4035c6:	and    BYTE PTR [eax],ah
  4035c9:	and    BYTE PTR [rax],ah
  4035cb:	and    BYTE PTR [rcx+rcx*2+0x6e],dl
  4035cf:	jo     0x403646
  4035d1:	je     0x403632
  4035d3:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2020
  4035da:	and    BYTE PTR [rax+rdx*2+0x6f],dl
  4035de:	imul   ebp,DWORD PTR [rsi+0x74],0x6172745f
  4035e5:	movsxd esp,DWORD PTR [rbp+0x20]
  4035e8:	and    BYTE PTR [rax],ah
  4035ea:	push   rsp
  4035eb:	rex.WRB
  4035ec:	gs jb  0x403656
  4035ef:	gs pop rdi
  4035f1:	je     0x403665
  4035f3:	(bad)  
  4035f4:	movsxd esp,DWORD PTR [rbp+0x20]
  4035f7:	and    BYTE PTR [rax],ah
  4035f9:	push   rsp
  4035fa:	rex.WRXB jne 0x403671
  4035fd:	jo     0x403674
  4035ff:	je     0x403660
  403601:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x5420
  403608:	push   rdx
  403609:	gs jb  0x403681
  40360c:	outs   dx,BYTE PTR ds:[rsi]
  40360d:	and    BYTE PTR [rax],ah
  40360f:	and    BYTE PTR [rax],ah
  403611:	and    BYTE PTR [rax],ah
  403613:	and    BYTE PTR [rax],ah
  403615:	and    BYTE PTR [rdi+rdx*2+0x69],dl
  403619:	fs gs pop rdi
  40361c:	je     0x403690
  40361e:	(bad)  
  40361f:	movsxd esp,DWORD PTR [rbp+0x20]
  403622:	and    BYTE PTR [rax],ah
  403624:	and    BYTE PTR [rsi+rdx*2+0x65],dl
  403628:	jb     0x40369e
  40362a:	gs js  0x40368c
  40362d:	jae    0x4036a3
  40362f:	outs   dx,DWORD PTR ds:[rsi]
  403630:	jo     0x403652
  403632:	and    BYTE PTR [rax],ah
  403634:	push   rsp
  403635:	rex.XB outs dx,DWORD PTR ds:[rsi]
  403637:	outs   dx,BYTE PTR ds:[rsi]
  403638:	gs pop rdi
  40363a:	jae    0x4036b0
  40363c:	outs   dx,DWORD PTR ds:[rsi]
  40363d:	jo     0x403649
  40363f:	or     ah,BYTE PTR [rax]
  403641:	rex.B outs dx,BYTE PTR ds:[rsi]
  403643:	ins    BYTE PTR es:[edi],dx
  403645:	gs pop rdi
  403647:	ins    DWORD PTR es:[rdi],dx
  403648:	(bad)  
  403649:	js     0x40366b
  40364b:	and    BYTE PTR [rax],ah
  40364d:	and    BYTE PTR [rax],ah
  40364f:	and    BYTE PTR [rbx+0x65],al
  403652:	outs   dx,BYTE PTR ds:[rsi]
  403653:	je     0x4036c7
  403655:	jne    0x4036c4
  403657:	pop    rdi
  403658:	jae    0x4036c3
  40365a:	jp     0x4036c1
  40365c:	and    BYTE PTR [rax],ah
  40365e:	and    BYTE PTR [rbp+0x72],al
  403661:	jb     0x4036d2
  403663:	jb     0x4036c4
  403665:	jb     0x4036d6
  403667:	jne    0x4036d7
  403669:	and    BYTE PTR fs:[rax],ah
  40366c:	and    BYTE PTR [rax],ah
  40366e:	push   rdx
  40366f:	(bad)  
  403670:	outs   dx,BYTE PTR ds:[rsi]
  403671:	outs   dx,DWORD PTR fs:[rsi]
  403673:	ins    DWORD PTR es:[rdi],dx
  403674:	pop    rdi
  403675:	imul   esi,DWORD PTR fs:[rbx+0x74],0x20202020
  40367d:	push   rsi
  40367e:	imul   esi,DWORD PTR [rbx+0x69],0x5f656c62
  403685:	ins    DWORD PTR es:[rdi],dx
  403686:	imul   ebp,DWORD PTR [rsi+0xa],0x6f635520
  40368d:	jo     0x4036fb
  40368f:	(bad)  
  403690:	outs   dx,BYTE PTR ds:[rsi]
  403691:	(bad)  
  403692:	jb     0x4036f3
  403694:	ins    DWORD PTR es:[rdi],dx
  403695:	(bad)  
  403696:	js     0x4036b8
  403698:	and    BYTE PTR [rdi+0x69],dl
  40369b:	fs gs pop rdi
  40369e:	outs   dx,DWORD PTR ds:[rsi]
  40369f:	jne    0x403715
  4036a1:	jae    0x40370c
  4036a3:	fs or  al,BYTE PTR gs:[rax]
	...
  4036bf:	add    BYTE PTR [rdx],cl
  4036c1:	jno    0x40372b
  4036c3:	jne    0x403731
  4036c5:	ins    BYTE PTR es:[rdi],dx
  4036c6:	sub    eax,0x6d6f6320
  4036cb:	jo     0x403742
  4036cd:	je     0x403734
  4036cf:	and    BYTE PTR [rbx+0x6f],ah
  4036d2:	outs   dx,BYTE PTR ds:[rsi]
  4036d3:	jbe    0x40373a
  4036d5:	js     0x4036f7
  4036d7:	push   0x736c6c75
  4036dc:	and    BYTE PTR [rcx+0x6e],ah
  4036df:	and    BYTE PTR fs:[rdx+0x65],dh
  4036e3:	ins    BYTE PTR es:[rdi],dx
  4036e4:	(bad)  
  4036e5:	je     0x40374c
  4036e7:	and    BYTE PTR fs:[rbx+0x74],dh
  4036eb:	jb     0x403762
  4036ed:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  4036f1:	gs jae 0x403722
  4036f4:	and    BYTE PTR [rax],ah
  4036f6:	push   rcx
  4036f7:	push   0x206c6c75
  4036fc:	and    eax,0x20200a73
  403701:	and    BYTE PTR [rax],ah
  403703:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  40370a:	jae    0x403780
  40370c:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x6964203a
  403714:	ins    DWORD PTR es:[rdi],dx
  403715:	outs   dx,BYTE PTR gs:[rsi]
  403717:	jae    0x403782
  403719:	outs   dx,DWORD PTR ds:[rsi]
  40371a:	outs   dx,BYTE PTR ds:[rsi]
  40371b:	sub    al,0x20
  40371d:	outs   dx,BYTE PTR ds:[rsi]
  40371e:	sub    al,0x20
  403720:	jo     0x403791
  403722:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6f6320
  403729:	jb     0x40378f
  40372b:	imul   ebp,DWORD PTR [rsi+0x61],0xa736574
  403732:	and    BYTE PTR [rax],ah
  403734:	and    BYTE PTR [rax],ah
  403736:	movsxd ebp,DWORD PTR [rdi+0x6d]
  403739:	ins    DWORD PTR es:[rdi],dx
  40373a:	outs   dx,BYTE PTR gs:[rsi]
  40373c:	je     0x4037b1
  40373e:	and    BYTE PTR [rbx+0x74],dh
  403741:	(bad)  
  403742:	jb     0x4037b8
  403744:	and    BYTE PTR [rdi+0x69],dh
  403747:	je     0x4037b1
  403749:	and    BYTE PTR [rcx+0x20],ah
  40374c:	outs   dx,BYTE PTR ds:[rsi]
  40374d:	outs   dx,DWORD PTR ds:[rsi]
  40374e:	outs   dx,BYTE PTR ds:[rsi]
  40374f:	sub    eax,0x656d756e
  403754:	jb     0x4037bf
  403756:	movsxd esp,DWORD PTR [rax]
  403758:	movsxd ebp,DWORD PTR [rax+0x61]
  40375b:	jb     0x4037be
  40375d:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  403761:	or     ah,BYTE PTR [rax]
  403763:	and    BYTE PTR [rax],ah
  403765:	and    BYTE PTR [rax+0x61],ch
  403768:	ins    BYTE PTR es:[rdi],dx
  403769:	data16 jae 0x4037dc
  40376c:	(bad)  
  40376d:	movsxd esp,DWORD PTR [rbp+0x3a]
  403770:	and    BYTE PTR [rbp+0x73],dh
  403773:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ah
  403778:	sub    esi,DWORD PTR [rcx]
  40377a:	and    BYTE PTR [rcx+0x6e],ah
  40377d:	and    BYTE PTR fs:[rax+0x75],dh
  403781:	je     0x4037a3
  403783:	outs   dx,DWORD PTR ds:[rsi]
  403784:	data16 data16 jae 0x4037ed
  403788:	je     0x4037fd
  40378a:	and    BYTE PTR [rcx+0x66],ah
  40378d:	je     0x4037f4
  40378f:	jb     0x4037b1
  403791:	movsxd ebp,DWORD PTR [rdi+0x65]
  403794:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
  40379b:	je     0x403810
  40379d:	or     cl,BYTE PTR [rdx]
  40379f:	outs   dx,DWORD PTR ds:[rsi]
  4037a0:	jo     0x403816
  4037a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x71282073
  4037a9:	push   0x6975712d
  4037ae:	movsxd ebp,DWORD PTR [rbx+0x2e]
  4037b1:	push   0x3a296d74
  4037b6:	or     ah,BYTE PTR [rax]
  4037b8:	and    BYTE PTR [rax],ah
  4037ba:	and    BYTE PTR [rax+riz*1+0x20],ah
  4037be:	and    BYTE PTR [rax],ah
  4037c0:	sub    eax,0x6c654420
  4037c5:	(bad)  
  4037c6:	jne    0x403836
  4037c8:	(bad)  
  4037c9:	jns    0x4037eb
  4037cb:	je     0x40383f
  4037cd:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  4037d4:	je     0x40383f
  4037d6:	outs   dx,DWORD PTR ds:[rsi]
  4037d7:	outs   dx,BYTE PTR ds:[rsi]
  4037d8:	and    BYTE PTR [rdx+0x79],ah
  4037db:	and    BYTE PTR [rcx+rbp*2+0x66],ch
  4037df:	je     0x40384a
  4037e1:	outs   dx,BYTE PTR ds:[rsi]
  4037e2:	and    BYTE PTR [eax+0x6f],dh
  4037e6:	imul   ebp,DWORD PTR [rsi+0x74],0x6f742073
  4037ed:	and    BYTE PTR [rcx+0x20],ah
  4037f0:	jo     0x403853
  4037f2:	jb     0x403855
  4037f4:	(bad)  
  4037f5:	outs   dx,DWORD PTR ds:[rsi]
  4037f6:	ins    BYTE PTR es:[rdi],dx
  4037f7:	outs   dx,DWORD PTR ds:[rsi]
  4037f8:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x64202020
  403800:	and    BYTE PTR [rcx+0x75],dl
  403803:	and    BYTE PTR [rip+0x72756620],ch        # 0x72b59e29
  403809:	je     0x403873
  40380b:	gs jae 0x403882
  40380e:	sub    eax,0x65746973
  403813:	and    BYTE PTR [rbp+riz*2+0x6c],al
  403817:	(bad)  
  403818:	jne    0x403888
  40381a:	(bad)  
  40381b:	jns    0x40383d
  40381d:	je     0x403891
  40381f:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  403826:	je     0x403891
  403828:	outs   dx,DWORD PTR ds:[rsi]
  403829:	outs   dx,BYTE PTR ds:[rsi]
  40382a:	and    BYTE PTR [rax],ch
  40382c:	jne    0x40389e
  40382e:	jo     0x403895
  403830:	jb     0x403852
  403832:	movsxd ebp,DWORD PTR [rdi+0x6e]
  403835:	jbe    0x40389c
  403837:	js     0x403859
  403839:	push   0x296c6c75
  40383e:	or     ah,BYTE PTR [rax]
  403840:	and    BYTE PTR [rax],ah
  403842:	and    BYTE PTR [rsi+0x20],dh
  403845:	and    BYTE PTR [rax],ah
  403847:	and    BYTE PTR [rip+0x726f5620],ch        # 0x72af8e6d
  40384d:	outs   dx,DWORD PTR ds:[rsi]
  40384e:	outs   dx,BYTE PTR ds:[rsi]
  40384f:	outs   dx,DWORD PTR ds:[rsi]
  403850:	imul   esp,DWORD PTR [rax],0x67616964
  403856:	jb     0x4038b9
  403858:	ins    DWORD PTR es:[rdi],dx
  403859:	and    BYTE PTR [rcx+0x73],ah
  40385c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  403860:	and    BYTE PTR [rbp+rsi*2+0x61],ah
  403864:	ins    BYTE PTR es:[rdi],dx
  403865:	and    BYTE PTR [rdi+0x66],ch
  403868:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40386c:	and    BYTE PTR [rbp+riz*2+0x6c],al
  403870:	(bad)  
  403871:	jne    0x4038e1
  403873:	(bad)  
  403874:	jns    0x403896
  403876:	je     0x4038ea
  403878:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  40387f:	je     0x4038ea
  403881:	outs   dx,DWORD PTR ds:[rsi]
  403882:	outs   dx,BYTE PTR ds:[rsi]
  403883:	or     ah,BYTE PTR [rax]
  403885:	and    BYTE PTR [rax],ah
  403887:	and    BYTE PTR [rsi+0x20],dh
  40388a:	push   rcx
  40388b:	jne    0x4038ad
  40388d:	sub    eax,0x72756620
  403892:	je     0x4038fc
  403894:	gs jae 0x40390b
  403897:	sub    eax,0x65746973
  40389c:	and    BYTE PTR [rsi+0x6f],dl
  40389f:	jb     0x403910
  4038a1:	outs   dx,BYTE PTR ds:[rsi]
  4038a2:	outs   dx,DWORD PTR ds:[rsi]
  4038a3:	imul   esp,DWORD PTR [rax],0x67616964
  4038a9:	jb     0x40390c
  4038ab:	ins    DWORD PTR es:[rdi],dx
  4038ac:	or     ah,BYTE PTR [rax]
  4038ae:	and    BYTE PTR [rax],ah
  4038b0:	and    BYTE PTR [rax+0x31],cl
  4038b3:	sub    al,0x31
  4038b5:	and    BYTE PTR [rip+0x6c614820],ch        # 0x6ca180db
  4038bb:	data16 jae 0x40392e
  4038be:	(bad)  
  4038bf:	movsxd esp,DWORD PTR [rbp+0x20]
  4038c2:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  4038c9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4038cd:	outs   dx,BYTE PTR ds:[rsi]
  4038ce:	and    BYTE PTR [rcx+0x62],ah
  4038d1:	outs   dx,DWORD PTR ds:[rsi]
  4038d2:	jne    0x403948
  4038d4:	and    BYTE PTR [rbx+0x31],bl
  4038d7:	sub    al,0x31
  4038d9:	sub    al,0x30
  4038db:	sub    al,0x2e
  4038dd:	cs cs pop rbp
  4038e0:	and    BYTE PTR [rsi+0x69],dh
  4038e3:	(bad)  
  4038e4:	and    BYTE PTR [rax+0x6f],dh
  4038e7:	ins    BYTE PTR es:[rdi],dx
  4038e8:	(bad)  
  4038e9:	jb     0x40390b
  4038eb:	fs jne 0x40394f
  4038ee:	ins    BYTE PTR es:[rdi],dx
  4038ef:	imul   esi,DWORD PTR [rcx+rdi*2+0xa],0x20202020
  4038f7:	push   rcx
  4038f8:	je     0x40391a
  4038fa:	and    BYTE PTR [rax],ah
  4038fc:	sub    eax,0x69727420
  403901:	(bad)  
  403902:	outs   dx,BYTE PTR ds:[rsi]
  403903:	addr32 jne 0x403972
  403906:	(bad)  
  403907:	je     0x40396e
  403909:	and    BYTE PTR fs:[rdi+0x75],ch
  40390d:	je     0x40397f
  40390f:	jne    0x403985
  403911:	or     ah,BYTE PTR [rax]
  403913:	and    BYTE PTR [rax],ah
  403915:	and    BYTE PTR [rcx+0x4a],dl
  403918:	and    BYTE PTR [rax],ah
  40391a:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67afa340
  403920:	ins    BYTE PTR es:[edi],dx
  403922:	gs and BYTE PTR fs:[rcx+0x6e],ch
  403927:	jo     0x40399e
  403929:	je     0x40394b
  40392b:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  403932:	and    BYTE PTR [rdi+0x66],ch
  403935:	and    BYTE PTR [rbp+0x65],ch
  403938:	jb     0x4039a1
  40393a:	gs and BYTE PTR fs:[rsi+0x61],ah
  40393f:	movsxd esp,DWORD PTR [rbp+0x74]
  403942:	jae    0x40394e
  403944:	and    BYTE PTR [rax],ah
  403946:	and    BYTE PTR [rax],ah
  403948:	push   rsp
  403949:	jbe    0x40396b
  40394b:	and    BYTE PTR [rax],ah
  40394d:	sub    eax,0x72657620
  403952:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  403959:	jne    0x4039c7
  40395b:	je     0x403997
  40395d:	and    BYTE PTR [rbx+0x74],dh
  403960:	jb     0x4039d7
  403962:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  403966:	gs sub al,0x20
  403969:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40396c:	jbe    0x4039d3
  40396e:	js     0x4039d9
  403970:	je     0x4039eb
  403972:	sub    al,0x20
  403974:	(bad)  
  403975:	outs   dx,BYTE PTR ds:[rsi]
  403976:	and    BYTE PTR fs:[rax+0x6f],dh
  40397a:	imul   ebp,DWORD PTR [rsi+0x74],0x636e6920
  403981:	ins    BYTE PTR es:[rdi],dx
  403982:	jne    0x4039f7
  403984:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  40398b:	and    BYTE PTR [rsi],ch
  40398d:	and    BYTE PTR [rax],ah
  40398f:	and    BYTE PTR [rax],ah
  403991:	sub    eax,0x6e6f6320
  403996:	movsxd ebp,DWORD PTR [rcx+0x73]
  403999:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ch
  40399e:	je     0x4039c0
  4039a0:	outs   dx,DWORD PTR ds:[rsi]
  4039a1:	data16 and BYTE PTR [rcx+0x6c],ah
  4039a5:	ins    BYTE PTR es:[rdi],dx
  4039a6:	and    BYTE PTR [rdi+0x70],ch
  4039a9:	je     0x403a14
  4039ab:	outs   dx,DWORD PTR ds:[rsi]
  4039ac:	outs   dx,BYTE PTR ds:[rsi]
  4039ad:	jae    0x4039b9
  4039af:	and    BYTE PTR [rax],ah
  4039b1:	and    BYTE PTR [rax],ah
  4039b3:	sub    eax,0x20202020
  4039b8:	sub    eax,0x656e6f20
  4039bd:	sub    eax,0x656e696c
  4039c2:	and    BYTE PTR [rbp+riz*2+0x73],ah
  4039c6:	movsxd esi,DWORD PTR [rdx+0x69]
  4039c9:	jo     0x403a3f
  4039cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  4039d2:	(bad)  
  4039d3:	ins    BYTE PTR es:[rdi],dx
  4039d4:	ins    BYTE PTR es:[rdi],dx
  4039d5:	and    BYTE PTR [rdi+0x70],ch
  4039d8:	je     0x403a43
  4039da:	outs   dx,DWORD PTR ds:[rsi]
  4039db:	outs   dx,BYTE PTR ds:[rsi]
  4039dc:	jae    0x4039e8
  4039de:	or     cl,BYTE PTR [rdi+0x75]
  4039e1:	je     0x403a53
  4039e3:	jne    0x403a59
  4039e5:	and    BYTE PTR [rdi+0x70],ch
  4039e8:	je     0x403a53
  4039ea:	outs   dx,DWORD PTR ds:[rsi]
  4039eb:	outs   dx,BYTE PTR ds:[rsi]
  4039ec:	jae    0x403a0e
  4039ee:	sub    BYTE PTR [rbx+0x75],dh
  4039f1:	(bad)
  4039f6:	cmp    cl,BYTE PTR [rdx]
  4039f8:	and    BYTE PTR [rax],ah
  4039fa:	and    BYTE PTR [rax],ah
  4039fc:	jae    0x403a1e
  4039fe:	and    BYTE PTR [rax],ah
  403a00:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5ad26
  403a06:	ins    DWORD PTR es:[rdi],dx
  403a07:	(bad)  
  403a08:	jb     0x403a83
  403a0a:	and    BYTE PTR [rdi+0x66],ch
  403a0d:	and    BYTE PTR [rdx+0x65],dh
  403a10:	jae    0x403a87
  403a12:	ins    BYTE PTR es:[rdi],dx
  403a13:	je     0x403a88
  403a15:	and    BYTE PTR [rax],ch
  403a17:	fs gs data16 (bad) 
  403a1b:	jne    0x403a89
  403a1d:	je     0x403a48
  403a1f:	or     ah,BYTE PTR [rax]
  403a21:	and    BYTE PTR [rax],ah
  403a23:	and    BYTE PTR [rcx+0x20],ch
  403a26:	and    BYTE PTR [rax],ah
  403a28:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5b04e
  403a2e:	je     0x403a99
  403a30:	movsxd esp,DWORD PTR [rbp+0x73]
  403a33:	and    BYTE PTR [rcx+0x6e],ch
  403a36:	movsxd ebp,DWORD PTR [rcx+0x64]
  403a39:	outs   dx,BYTE PTR gs:[rsi]
  403a3b:	je     0x403a5d
  403a3d:	je     0x403aae
  403a3f:	and    BYTE PTR [rbp+0x61],ah
  403a42:	movsxd ebp,DWORD PTR [rax+0x20]
  403a45:	data16 (bad) 
  403a47:	movsxd esp,DWORD PTR [rbp+0x74]
  403a4a:	or     ah,BYTE PTR [rax]
  403a4c:	and    BYTE PTR [rax],ah
  403a4e:	and    BYTE PTR [rsi+0x20],ch
  403a51:	and    BYTE PTR [rax],ah
  403a53:	and    BYTE PTR [rip+0x726f6e20],ch        # 0x72afa879
  403a59:	ins    DWORD PTR es:[rdi],dx
  403a5a:	(bad)  
  403a5b:	ins    BYTE PTR es:[rdi],dx
  403a5c:	jae    0x403a7e
  403a5e:	ja     0x403ac9
  403a60:	je     0x403aca
  403a62:	and    BYTE PTR [rdi+0x66],ch
  403a65:	data16 jae 0x403acd
  403a68:	je     0x403add
  403a6a:	or     ah,BYTE PTR [rax]
  403a6c:	and    BYTE PTR [rax],ah
  403a6e:	and    BYTE PTR [rax+0x20],dh
  403a71:	and    BYTE PTR [rax],ah
  403a73:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5b099
  403a79:	je     0x403ae0
  403a7b:	js     0x403a9d
  403a7d:	movsxd ebp,DWORD PTR [rdi+0x6f]
  403a80:	jb     0x403ae6
  403a82:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  403a89:	sub    BYTE PTR [rcx+0x66],ch
  403a8c:	and    BYTE PTR [rdi],ah
  403a8e:	push   rcx
  403a8f:	movsxd esp,DWORD PTR [rdi]
  403a91:	sub    al,0x20
  403a93:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  403a9a:	jae    0x403abc
  403a9c:	movsxd ebp,DWORD PTR [rdi+0x70]
  403a9f:	ins    BYTE PTR es:[rdi],dx
  403aa0:	(bad)  
  403aa1:	outs   dx,BYTE PTR ds:[rsi]
  403aa2:	(bad)  
  403aa3:	jb     0x403ac5
  403aa5:	jo     0x403b16
  403aa7:	imul   ebp,DWORD PTR [rsi+0x74],0x200a2973
  403aae:	and    BYTE PTR [rax],ah
  403ab0:	and    BYTE PTR [rax],ah
  403ab2:	and    BYTE PTR [rax],ah
  403ab4:	and    BYTE PTR [rax],ah
  403ab6:	and    BYTE PTR [rax],ah
  403ab8:	imul   esp,DWORD PTR [rsi+0x20],0x2c277627
  403abf:	and    BYTE PTR [rsi+0x6f],dl
  403ac2:	jb     0x403b33
  403ac4:	outs   dx,BYTE PTR ds:[rsi]
  403ac5:	outs   dx,DWORD PTR ds:[rsi]
  403ac6:	imul   esp,DWORD PTR [rax],0x74726576
  403acc:	imul   esp,DWORD PTR [rbx+0x65],0x20200a73
  403ad3:	and    BYTE PTR [rax],ah
  403ad5:	rex.RX jo 0x403af8
  403ad8:	and    BYTE PTR [rax],ah
  403ada:	sub    eax,0x6c616820
  403adf:	data16 jae 0x403b52
  403ae2:	(bad)  
  403ae3:	movsxd esp,DWORD PTR [rbp+0x20]
  403ae6:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403aed:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403af1:	outs   dx,BYTE PTR ds:[rsi]
  403af2:	jae    0x403afe
  403af4:	and    BYTE PTR [rax],ah
  403af6:	and    BYTE PTR [rax],ah
  403af8:	rex.RX js 0x403b1b
  403afb:	and    BYTE PTR [rax],ah
  403afd:	sub    eax,0x74786520
  403b02:	jb     0x403b69
  403b04:	ins    DWORD PTR es:[rdi],dx
  403b05:	and    BYTE PTR gs:[rax+0x6f],dh
  403b09:	imul   ebp,DWORD PTR [rsi+0x74],0x63282073
  403b10:	outs   dx,DWORD PTR ds:[rsi]
  403b11:	outs   dx,BYTE PTR ds:[rsi]
  403b12:	jbe    0x403b79
  403b14:	js     0x403b36
  403b16:	push   0x206c6c75
  403b1b:	jbe    0x403b82
  403b1d:	jb     0x403b93
  403b1f:	imul   esp,DWORD PTR [rbx+0x65],0x200a2973
  403b26:	and    BYTE PTR [rax],ah
  403b28:	and    BYTE PTR [rsi+0x41],al
  403b2b:	and    BYTE PTR [rax],ah
  403b2d:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6daf9e53
  403b33:	jo     0x403baa
  403b35:	je     0x403b9c
  403b37:	and    BYTE PTR [rdi+rbp*2+0x74],dh
  403b3b:	(bad)  
  403b3c:	ins    BYTE PTR es:[rdi],dx
  403b3d:	and    BYTE PTR [rcx+0x72],ah
  403b40:	gs (bad) 
  403b42:	and    BYTE PTR [rcx+0x6e],ah
  403b45:	and    BYTE PTR fs:[rsi+0x6f],dh
  403b49:	ins    BYTE PTR es:[rdi],dx
  403b4a:	jne    0x403bb9
  403b4c:	or     ah,BYTE PTR gs:[rax]
  403b4f:	and    BYTE PTR [rax],ah
  403b51:	and    BYTE PTR [rdi+0x20],ch
  403b54:	and    BYTE PTR [rax],ah
  403b56:	and    BYTE PTR [rip+0x46464f20],ch        # 0x46868a7c
  403b5c:	and    BYTE PTR [rsi+0x6f],ah
  403b5f:	jb     0x403bce
  403b61:	(bad)  
  403b62:	je     0x403b84
  403b64:	sub    BYTE PTR [rcx+0x66],ch
  403b67:	and    BYTE PTR [rdi],ah
  403b69:	jbe    0x403b92
  403b6b:	sub    al,0x20
  403b6d:	outs   dx,DWORD PTR ds:[rsi]
  403b6e:	jne    0x403be4
  403b70:	jo     0x403be7
  403b72:	je     0x403be7
  403b74:	and    BYTE PTR [rsi+0x6f],dl
  403b77:	jb     0x403be8
  403b79:	outs   dx,BYTE PTR ds:[rsi]
  403b7a:	outs   dx,DWORD PTR ds:[rsi]
  403b7b:	imul   esp,DWORD PTR [rax],0x69676572
  403b81:	outs   dx,DWORD PTR ds:[rsi]
  403b82:	outs   dx,BYTE PTR ds:[rsi]
  403b83:	jae    0x403bae
  403b85:	or     ah,BYTE PTR [rax]
  403b87:	and    BYTE PTR [rax],ah
  403b89:	and    BYTE PTR [rdi+0x20],al
  403b8c:	and    BYTE PTR [rax],ah
  403b8e:	and    BYTE PTR [rip+0x6f654720],ch        # 0x6fa582b4
  403b94:	ins    DWORD PTR es:[rdi],dx
  403b95:	jbe    0x403c00
  403b97:	gs ja  0x403bba
  403b9a:	outs   dx,DWORD PTR ds:[rsi]
  403b9b:	jne    0x403c11
  403b9d:	jo     0x403c14
  403b9f:	je     0x403bc1
  403ba1:	sub    BYTE PTR [rdx],dh
  403ba3:	sub    eax,0x33202c64
  403ba8:	sub    eax,0x6e612064
  403bad:	and    BYTE PTR fs:[rbp*1+0x200a2964],dh
  403bb5:	and    BYTE PTR [rax],ah
  403bb7:	and    BYTE PTR [rbp+0x20],ch
  403bba:	and    BYTE PTR [rax],ah
  403bbc:	and    BYTE PTR [rip+0x74614d20],ch        # 0x74a188e2
  403bc2:	push   0x74616d65
  403bc7:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  403bce:	jo     0x403c45
  403bd0:	je     0x403bf2
  403bd2:	sub    BYTE PTR [rdx],dh
  403bd4:	sub    eax,0x6e612064
  403bd9:	and    BYTE PTR fs:[rbx],dh
  403bdc:	sub    eax,0x200a2964
  403be1:	and    BYTE PTR [rax],ah
  403be3:	and    BYTE PTR [rcx+0x56],dl
  403be6:	outs   dx,BYTE PTR ds:[rsi]
  403be7:	and    BYTE PTR [rax],ah
  403be9:	sub    eax,0x69727020
  403bee:	outs   dx,BYTE PTR ds:[rsi]
  403bef:	je     0x403c11
  403bf1:	data16 (bad) 
  403bf3:	movsxd esp,DWORD PTR [rbp+0x74]
  403bf6:	jae    0x403c18
  403bf8:	je     0x403c62
  403bfa:	(bad)  
  403bfb:	je     0x403c1d
  403bfd:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  403c04:	and    BYTE PTR [rax+0x6f],dh
  403c07:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  403c0e:	sub    eax,0x6669206e
  403c13:	and    BYTE PTR [rsi+0x6f],ch
  403c16:	je     0x403c22
  403c18:	and    BYTE PTR [rax],ah
  403c1a:	and    BYTE PTR [rax],ah
  403c1c:	push   rsp
  403c1d:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  403c21:	ins    BYTE PTR es:[rdi],dx
  403c22:	gs sub eax,0x74756f20
  403c28:	jo     0x403c9f
  403c2a:	je     0x403c4c
  403c2c:	jb     0x403c93
  403c2e:	jae    0x403ca5
  403c30:	ins    BYTE PTR es:[rdi],dx
  403c31:	je     0x403ca6
  403c33:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  403c37:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  403c3e:	(bad)  
  403c3f:	jns    0x403c61
  403c41:	(bad)  
  403c42:	and    BYTE PTR gs:[rbp+0x6e],ah
  403c46:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  403c4a:	gs and BYTE PTR fs:[rcx+0x6e],ch
  403c4f:	and    BYTE PTR [rbx+0x69],dh
  403c52:	outs   dx,BYTE PTR ds:[rsi]
  403c53:	ins    BYTE PTR es:[edi],dx
  403c55:	and    BYTE PTR gs:[rcx+0x75],dh
  403c59:	outs   dx,DWORD PTR ds:[rsi]
  403c5a:	je     0x403cc1
  403c5c:	jae    0x403c68
  403c5e:	or     ah,BYTE PTR [rbp+0x78]
  403c61:	(bad)  
  403c62:	ins    DWORD PTR es:[rdi],dx
  403c63:	jo     0x403cd1
  403c65:	gs jae 0x403ca2
  403c68:	or     ah,BYTE PTR [rax]
  403c6a:	and    BYTE PTR [rax],ah
  403c6c:	and    BYTE PTR [rdx+0x62],dh
  403c6f:	outs   dx,DWORD PTR ds:[rsi]
  403c70:	js     0x403c92
  403c72:	movsxd esp,DWORD PTR [rax]
  403c74:	and    BYTE PTR fs:[rdx+rsi*1+0x20],al
  403c79:	jl     0x403c9b
  403c7b:	jno    0x403ce5
  403c7d:	jne    0x403ceb
  403c7f:	ins    BYTE PTR es:[rdi],dx
  403c80:	and    BYTE PTR [rcx+0x63],dl
  403c83:	and    BYTE PTR [rbx+0x20],dh
  403c86:	data16 and BYTE PTR [rsi+0x78],al
  403c8a:	and    BYTE PTR [rax+riz*1+0x6d],bh
  403c8e:	outs   dx,DWORD PTR ds:[rsi]
  403c8f:	jb     0x403cf6
  403c91:	and    BYTE PTR [rax],ah
  403c93:	and    BYTE PTR [rax],ah
  403c95:	and    BYTE PTR [rax],ah
  403c97:	jb     0x403cfb
  403c99:	outs   dx,DWORD PTR ds:[rsi]
  403c9a:	js     0x403cbc
  403c9c:	xor    DWORD PTR [rax],esi
  403c9e:	xor    BYTE PTR [rax],dh
  403ca0:	and    BYTE PTR [rbx+0x20],dh
  403ca3:	jl     0x403cc5
  403ca5:	jno    0x403d0f
  403ca7:	jne    0x403d15
  403ca9:	ins    BYTE PTR es:[rdi],dx
  403caa:	and    BYTE PTR [rsi+rsi*2+0x20],dl
  403cae:	jae    0x403cd0
  403cb0:	rex.RX
  403cb1:	or     spl,BYTE PTR [r8]
  403cb4:	and    BYTE PTR [rax],ah
  403cb6:	and    BYTE PTR [rdx+0x62],dh
  403cb9:	outs   dx,DWORD PTR ds:[rsi]
  403cba:	js     0x403cdc
  403cbc:	xor    DWORD PTR [rax],esi
  403cbe:	and    BYTE PTR [rdx+rsi*1+0x20],al
  403cc2:	jl     0x403ce4
  403cc4:	jno    0x403d2e
  403cc6:	jne    0x403d34
  403cc8:	ins    BYTE PTR es:[rdi],dx
  403cc9:	and    BYTE PTR [rax+riz*1+0x51],ah
  403ccd:	rex.WX and BYTE PTR [rbx+0x20],sil
  403cd1:	imul   esp,DWORD PTR [rax],0x72204f54
  403cd7:	gs jae 0x403d4f
  403cda:	ins    BYTE PTR es:[rdi],dx
  403cdb:	je     0x403cfd
  403cdd:	and    BYTE PTR [rax],ah
  403cdf:	and    BYTE PTR [rax],ah
  403ce1:	jb     0x403d45
  403ce3:	outs   dx,DWORD PTR ds:[rsi]
  403ce4:	js     0x403d06
  403ce6:	xor    DWORD PTR [rax],esi
  403ce8:	and    BYTE PTR [rdx+rsi*1+0x20],al
  403cec:	jl     0x403d0e
  403cee:	jno    0x403d58
  403cf0:	jne    0x403d5e
  403cf2:	ins    BYTE PTR es:[rdi],dx
  403cf3:	and    BYTE PTR [rsi+0x20],dh
  403cf6:	push   rcx
  403cf7:	(bad)  
  403cf9:	and    BYTE PTR [rcx+0x74],dl
  403cfc:	and    BYTE PTR [rax+0xa],dh
  403cff:	and    BYTE PTR [rax],ah
  403d01:	and    BYTE PTR [rax],ah
  403d03:	jb     0x403d67
  403d05:	outs   dx,DWORD PTR ds:[rsi]
  403d06:	js     0x403d28
  403d08:	xor    DWORD PTR [rax],esi
  403d0a:	and    BYTE PTR [rdx+rsi*1+0x20],al
  403d0e:	jl     0x403d30
  403d10:	jno    0x403d7a
  403d12:	jne    0x403d80
  403d14:	ins    BYTE PTR es:[rdi],dx
  403d15:	and    BYTE PTR [rax+riz*1+0x51],ah
  403d19:	jne    0x403d3b
  403d1b:	push   rcx
  403d1c:	rex.WX and BYTE PTR [rbp+0x20],bpl
  403d20:	and    BYTE PTR [rax],ah
  403d22:	and    BYTE PTR [rax],ah
  403d24:	and    BYTE PTR [rax],ah
  403d26:	and    BYTE PTR [rax],ah
  403d28:	and    BYTE PTR [rax],ah
  403d2a:	and    BYTE PTR [rax],ah
  403d2c:	and    BYTE PTR [rdx+0x62],dh
  403d2f:	outs   dx,DWORD PTR ds:[rsi]
  403d30:	js     0x403d52
  403d32:	xor    DWORD PTR [rax],esi
  403d34:	and    BYTE PTR [rdx+rsi*1+0x20],al
  403d38:	jl     0x403d5a
  403d3a:	jno    0x403da4
  403d3c:	jne    0x403daa
  403d3e:	ins    BYTE PTR es:[rdi],dx
  403d3f:	and    BYTE PTR [rsi+0x20],dh
  403d42:	push   rcx
  403d43:	jne    0x403d65
  403d45:	push   rcx
  403d46:	rex.WX and BYTE PTR [rdi+0xa],bpl
  403d4a:	and    BYTE PTR [rax],ah
  403d4c:	and    BYTE PTR [rax],ah
  403d4e:	jb     0x403db2
  403d50:	outs   dx,DWORD PTR ds:[rsi]
  403d51:	js     0x403d73
  403d53:	movsxd esp,DWORD PTR [rax]
  403d55:	jl     0x403d77
  403d57:	jno    0x403dc1
  403d59:	jne    0x403dc7
  403d5b:	ins    BYTE PTR es:[rdi],dx
  403d5c:	and    BYTE PTR [rsi+0x20],ch
  403d5f:	and    BYTE PTR [rax],ah
  403d61:	and    BYTE PTR [rax],ah
  403d63:	and    BYTE PTR [rax],ah
  403d65:	and    BYTE PTR [rax],ah
  403d67:	and    BYTE PTR [rax],ah
  403d69:	and    BYTE PTR [rax],ah
  403d6b:	and    BYTE PTR [rax],ah
  403d6d:	and    BYTE PTR [rax],ah
  403d6f:	and    BYTE PTR [rax],ah
  403d71:	and    BYTE PTR [rax],ah
  403d73:	and    BYTE PTR [rax],ah
  403d75:	and    BYTE PTR [rax],ah
  403d77:	and    BYTE PTR [rdx+0x62],dh
  403d7a:	outs   dx,DWORD PTR ds:[rsi]
  403d7b:	js     0x403d9d
  403d7d:	movsxd esp,DWORD PTR [rax]
  403d7f:	jl     0x403da1
  403d81:	jno    0x403deb
  403d83:	jne    0x403df1
  403d85:	ins    BYTE PTR es:[rdi],dx
  403d86:	and    BYTE PTR [rsi+0x56],al
  403d89:	and    BYTE PTR [rsi+0x20],ch
  403d8c:	jl     0x403dae
  403d8e:	jno    0x403df8
  403d90:	jne    0x403dfe
  403d92:	ins    BYTE PTR es:[rdi],dx
  403d93:	and    BYTE PTR [rax+0x20],cl
  403d96:	rex.RX jo 0x403da3
  403d99:	and    BYTE PTR [rax],ah
  403d9b:	and    BYTE PTR [rax],ah
  403d9d:	jb     0x403e01
  403d9f:	outs   dx,DWORD PTR ds:[rsi]
  403da0:	js     0x403dc2
  403da2:	and    BYTE PTR fs:[rcx+rsi*1+0x32],al
  403da7:	and    BYTE PTR [rax+riz*1+0x71],bh
  403dab:	push   0x206c6c75
  403db0:	push   rcx
  403db1:	push   rdx
  403db2:	xor    BYTE PTR [rax],ah
  403db4:	rex.RX
  403db5:	and    BYTE PTR [r8],spl
  403db8:	and    BYTE PTR [rax],ah
  403dba:	and    BYTE PTR [rax],ah
  403dbc:	and    BYTE PTR [rax],ah
  403dbe:	and    BYTE PTR [rax],ah
  403dc0:	and    BYTE PTR [rax],ah
  403dc2:	and    BYTE PTR [rax],ah
  403dc4:	and    BYTE PTR [rax],ah
  403dc6:	and    BYTE PTR [rdx+0x62],dh
  403dc9:	outs   dx,DWORD PTR ds:[rsi]
  403dca:	js     0x403dec
  403dcc:	movsxd esp,DWORD PTR [rax]
  403dce:	rex.R (bad) 
  403dd0:	and    BYTE PTR [rax+riz*1+0x71],bh
  403dd4:	push   0x206c6c75
  403dd9:	rex.RX
  403dda:	and    BYTE PTR [r14+rax*2+0x31],dl
  403ddf:	xor    BYTE PTR [rax],dh
  403de1:	xor    BYTE PTR [rdx],cl
  403de3:	and    BYTE PTR [rax],ah
  403de5:	and    BYTE PTR [rax],ah
  403de7:	jb     0x403e4b
  403de9:	outs   dx,DWORD PTR ds:[rsi]
  403dea:	js     0x403e0c
  403dec:	jns    0x403e0e
  403dee:	xor    DWORD PTR [rax],esi
  403df0:	xor    BYTE PTR [rax],dh
  403df2:	and    BYTE PTR [rdi+0x30],dl
  403df5:	and    BYTE PTR [rax+riz*1+0x71],bh
  403df9:	push   0x206c6c75
  403dfe:	and    BYTE PTR [rax],ah
  403e00:	and    BYTE PTR [rax],ah
  403e02:	and    BYTE PTR [rax],ah
  403e04:	and    BYTE PTR [rax],ah
  403e06:	and    BYTE PTR [rax],ah
  403e08:	and    BYTE PTR [rax],ah
  403e0a:	and    BYTE PTR [rax],ah
  403e0c:	and    BYTE PTR [rax],ah
  403e0e:	and    BYTE PTR [rax],ah
  403e10:	and    BYTE PTR [rdx+0x62],dh
  403e13:	outs   dx,DWORD PTR ds:[rsi]
  403e14:	js     0x403e36
  403e16:	xor    DWORD PTR [rax],esi
  403e18:	and    BYTE PTR [rax+riz*1+0x71],bh
  403e1c:	push   0x206c6c75
  403e21:	jbe    0x403e43
  403e23:	push   rcx
  403e24:	rex.WX and BYTE PTR [rdi+0x20],bpl
  403e28:	rex.RX jbe 0x403e35
  403e2b:	or     al,BYTE PTR [rax]
	...
  403e3d:	add    BYTE PTR [rax],al
  403e3f:	add    BYTE PTR [rdi+0x65],al
  403e42:	outs   dx,DWORD PTR ds:[rsi]
  403e43:	ins    DWORD PTR es:[rdi],dx
  403e44:	jbe    0x403eaf
  403e46:	gs ja  0x403e69
  403e49:	outs   dx,DWORD PTR ds:[rsi]
  403e4a:	jo     0x403ec0
  403e4c:	imul   ebp,DWORD PTR [rdi+0x6e],0x32282073
  403e53:	sub    eax,0x33202c64
  403e58:	sub    eax,0x61202c64
  403e5d:	outs   dx,BYTE PTR ds:[rsi]
  403e5e:	and    BYTE PTR fs:[rbp*1+0x32203b64],dh
  403e66:	sub    eax,0x6f562064
  403e6b:	jb     0x403edc
  403e6d:	outs   dx,BYTE PTR ds:[rsi]
  403e6e:	outs   dx,DWORD PTR ds:[rsi]
  403e6f:	imul   ebp,DWORD PTR [rcx],0x2020200a
  403e75:	and    BYTE PTR [rdi+0x61],al
  403e78:	and    BYTE PTR [rax],ah
  403e7a:	and    BYTE PTR [rip+0x6c6c6120],ch        # 0x6cac9fa0
  403e80:	and    BYTE PTR [rax+0x6f],dh
  403e83:	imul   ebp,DWORD PTR [rsi+0x74],0x73612073
  403e8a:	and    BYTE PTR [rdi+rbp*2+0x74],ah
  403e8e:	jae    0x403e9a
  403e90:	and    BYTE PTR [rax],ah
  403e92:	and    BYTE PTR [rax],ah
  403e94:	and    BYTE PTR [rdi+0x70],al
  403e97:	and    BYTE PTR [rax],ah
  403e99:	sub    eax,0x6f632020
  403e9e:	jo     0x403f0c
  403ea0:	(bad)  
  403ea1:	outs   dx,BYTE PTR ds:[rsi]
  403ea2:	(bad)  
  403ea3:	jb     0x403ec5
  403ea5:	jo     0x403f16
  403ea7:	imul   ebp,DWORD PTR [rsi+0x74],0x6e612073
  403eae:	and    BYTE PTR fs:[rsi+0x65],dh
  403eb2:	jb     0x403f28
  403eb4:	imul   esp,DWORD PTR [rbx+0x65],0x73612073
  403ebb:	and    BYTE PTR [rdx+0x61],dh
  403ebe:	imul   ebp,DWORD PTR fs:[rcx+0xa],0x20202020
  403ec6:	and    BYTE PTR [rdi+0x76],al
  403ec9:	and    BYTE PTR [rax],ah
  403ecb:	sub    eax,0x65762020
  403ed0:	jb     0x403f46
  403ed2:	imul   esp,DWORD PTR [rbx+0x65],0x73612073
  403ed9:	and    BYTE PTR [rbx+0x70],dh
  403edc:	push   0x73657265
  403ee1:	or     ah,BYTE PTR [rax]
  403ee3:	and    BYTE PTR [rax],ah
  403ee5:	and    BYTE PTR [rdi+0x69],al
  403ee8:	and    BYTE PTR [rax],ah
  403eea:	and    BYTE PTR [rip+0x6e6e6920],ch        # 0x6eaea810
  403ef0:	gs jb  0x403f13
  403ef3:	jo     0x403f61
  403ef5:	(bad)  
  403ef6:	outs   dx,BYTE PTR ds:[rsi]
  403ef7:	gs jae 0x403f1a
  403efa:	outs   dx,DWORD PTR ds:[rsi]
  403efb:	outs   dx,BYTE PTR ds:[rsi]
  403efc:	ins    BYTE PTR es:[rdi],dx
  403efd:	jns    0x403f09
  403eff:	and    BYTE PTR [rax],ah
  403f01:	and    BYTE PTR [rax],ah
  403f03:	and    BYTE PTR [rdi+0x6e],al
  403f06:	and    BYTE PTR [rax],ah
  403f08:	sub    eax,0x6f6e2020
  403f0d:	and    BYTE PTR [rax+0x6c],dh
  403f10:	(bad)  
  403f11:	outs   dx,BYTE PTR ds:[rsi]
  403f12:	gs jae 0x403f1f
  403f15:	and    BYTE PTR [rax],ah
  403f17:	and    BYTE PTR [rax],ah
  403f19:	and    BYTE PTR [rdi+0x6f],al
  403f1c:	and    BYTE PTR [rax],ah
  403f1e:	sub    eax,0x756f2020
  403f23:	je     0x403f8a
  403f25:	jb     0x403f47
  403f27:	jo     0x403f95
  403f29:	(bad)  
  403f2a:	outs   dx,BYTE PTR ds:[rsi]
  403f2b:	gs jae 0x403f4e
  403f2e:	outs   dx,DWORD PTR ds:[rsi]
  403f2f:	outs   dx,BYTE PTR ds:[rsi]
  403f30:	ins    BYTE PTR es:[rdi],dx
  403f31:	jns    0x403f3d
  403f33:	and    BYTE PTR [rax],ah
  403f35:	and    BYTE PTR [rax],ah
  403f37:	rex.RXB movsxd r12d,DWORD PTR [r8]
  403f3a:	and    BYTE PTR [rax],ah
  403f3c:	sub    eax,0x6e656320
  403f41:	je     0x403fb5
  403f43:	jne    0x403fb2
  403f45:	jae    0x403f51
  403f47:	and    BYTE PTR [rax],ah
  403f49:	and    BYTE PTR [rax],ah
  403f4b:	rex.RXB push 0x2d202020
  403f51:	and    BYTE PTR [rax+0x79],ch
  403f54:	jo     0x403fbb
  403f56:	jb     0x403fc8
  403f58:	ins    BYTE PTR es:[rdi],dx
  403f59:	(bad)  
  403f5a:	outs   dx,BYTE PTR ds:[rsi]
  403f5b:	and    BYTE PTR gs:[rcx+0x6e],ch
  403f5f:	je     0x403fc6
  403f61:	jb     0x403fd6
  403f63:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403f68:	outs   dx,BYTE PTR ds:[rsi]
  403f69:	jae    0x403f75
  403f6b:	and    BYTE PTR [rax],ah
  403f6d:	and    BYTE PTR [rax],ah
  403f6f:	rex.RXB jb 0x403f92
  403f72:	and    BYTE PTR [rax],ah
  403f74:	sub    eax,0x64697220
  403f79:	addr32 gs jae 0x403f87
  403f7d:	and    BYTE PTR [rax],ah
  403f7f:	and    BYTE PTR [rax],ah
  403f81:	rex.RXB
  403f82:	rex.R outs dx,BYTE PTR ds:[rsi]
  403f84:	and    BYTE PTR [rax],ah
  403f86:	sub    eax,0x6f726420
  403f8b:	jo     0x403fad
  403f8d:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  403f95:	outs   dx,BYTE PTR ds:[rsi]
  403f96:	and    BYTE PTR [rsi+0x20],ch
  403f99:	imul   ebp,DWORD PTR [rsi+0x20],0x20642d33
  403fa0:	(bad)  
  403fa1:	outs   dx,BYTE PTR ds:[rsi]
  403fa2:	and    BYTE PTR fs:[rbp*1+0x756f2064],dh
  403faa:	je     0x40401c
  403fac:	jne    0x404022
  403fae:	or     ah,BYTE PTR [rax]
  403fb0:	and    BYTE PTR [rax],ah
  403fb2:	and    BYTE PTR [rdi+0x74],al
  403fb5:	and    BYTE PTR [rax],ah
  403fb7:	and    BYTE PTR [rip+0x726f6620],ch        # 0x72afa5dd
  403fbd:	and    BYTE PTR [rbx],dh
  403fbf:	sub    eax,0x64272064
  403fc4:	(bad)  
  403fc5:	sub    al,0x20
  403fc7:	je     0x40403b
  403fc9:	(bad)  
  403fca:	outs   dx,BYTE PTR ds:[rsi]
  403fcb:	jae    0x40403d
  403fcd:	(bad)  
  403fce:	jb     0x404035
  403fd0:	outs   dx,BYTE PTR ds:[rsi]
  403fd1:	je     0x403ff3
  403fd3:	outs   dx,DWORD PTR ds:[rsi]
  403fd4:	jne    0x40404a
  403fd6:	gs jb  0x403ff9
  403fd9:	jb     0x404044
  403fdb:	fs addr32 gs jae 0x403fea
  403fe0:	or     dl,BYTE PTR [rax+0x72]
  403fe3:	imul   ebp,DWORD PTR [rsi+0x74],0x74706f20
  403fea:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  403ff1:	and    BYTE PTR [rax],ah
  403ff3:	and    BYTE PTR [rax+0x41],dl
  403ff6:	outs   dx,BYTE PTR ds:[rsi]
  403ff7:	and    BYTE PTR [rax],ah
  403ff9:	sub    eax,0x65656b20
  403ffe:	jo     0x404020
  404000:	outs   dx,BYTE PTR ds:[rsi]
  404001:	and    BYTE PTR [rcx+riz*2+0x72],ch
  404005:	addr32 gs jae 0x40407d
  404009:	and    BYTE PTR [rsi+0x61],ah
  40400c:	movsxd esp,DWORD PTR [rbp+0x74]
  40400f:	jae    0x404031
  404011:	(bad)  
  404012:	jns    0x404034
  404014:	(bad)  
  404015:	jb     0x40407c
  404017:	(bad)  
  404018:	or     ah,BYTE PTR [rax]
  40401a:	and    BYTE PTR [rax],ah
  40401c:	and    BYTE PTR [rax+0x64],dl
  40401f:	imul   edi,DWORD PTR [rdx],0x6e
  404022:	and    BYTE PTR [rip+0x6f726420],ch        # 0x6fb2a448
  404028:	jo     0x40404a
  40402a:	data16 (bad) 
  40402c:	movsxd esp,DWORD PTR [rbp+0x74]
  40402f:	and    BYTE PTR [rcx+0x66],ch
  404032:	and    BYTE PTR [rsi+0x6f],ch
  404035:	jb     0x4040a4
  404037:	(bad)  
  404038:	ins    BYTE PTR es:[rdi],dx
  404039:	pop    rbx
  40403a:	imul   ebx,DWORD PTR [rbp+0x20],0x3c
  40403e:	cmp    eax,0x28206e20
  404043:	fs gs data16 (bad) 
  404047:	jne    0x4040b5
  404049:	je     0x40406b
  40404b:	xor    BYTE PTR [rsi],ch
  40404d:	xor    BYTE PTR [rcx],ch
  40404f:	or     ah,BYTE PTR [rax]
  404051:	and    BYTE PTR [rax],ah
  404053:	and    BYTE PTR [rax+0x44],dl
  404056:	imul   edi,DWORD PTR [rdx],0x6e
  404059:	and    BYTE PTR [rip+0x6f726420],ch        # 0x6fb2a47f
  40405f:	jo     0x404081
  404061:	data16 (bad) 
  404063:	movsxd esp,DWORD PTR [rbp+0x74]
  404066:	and    BYTE PTR [rcx+0x66],ch
  404069:	and    BYTE PTR [rsi+0x6f],ch
  40406c:	jb     0x4040db
  40406e:	(bad)  
  40406f:	ins    BYTE PTR es:[rdi],dx
  404070:	pop    rbx
  404071:	imul   ebx,DWORD PTR [rbp+0x20],0x3e
  404075:	cmp    eax,0x200a6e20
  40407a:	and    BYTE PTR [rax],ah
  40407c:	and    BYTE PTR [rax+0x67],dl
  40407f:	and    BYTE PTR [rax],ah
  404081:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2b0a7
  404087:	outs   dx,BYTE PTR ds:[rsi]
  404088:	je     0x4040aa
  40408a:	outs   dx,DWORD PTR ds:[esi]
  40408c:	outs   dx,DWORD PTR ds:[rsi]
  40408d:	and    BYTE PTR fs:[rsi+0x61],ah
  404091:	movsxd esp,DWORD PTR [rbp+0x74]
  404094:	jae    0x4040b6
  404096:	sub    BYTE PTR [rsi+0x65],ch
  404099:	gs fs jae 0x4040bd
  40409d:	(bad)  
  40409e:	push   rcx
  40409f:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  4040a1:	(bad)  
  4040a2:	and    BYTE PTR [rdi+0x72],ch
  4040a5:	and    BYTE PTR [rdi],ah
  4040a7:	push   rcx
  4040a8:	push   rsi
  4040a9:	outs   dx,BYTE PTR ds:[rsi]
  4040aa:	(bad)  
  4040ab:	sub    DWORD PTR [rdx],ecx
  4040ad:	and    BYTE PTR [rax],ah
  4040af:	and    BYTE PTR [rax],ah
  4040b1:	push   rax
  4040b2:	rex.RX outs dx,BYTE PTR ds:[rsi]
  4040b4:	and    BYTE PTR [rax],ah
  4040b6:	sub    eax,0x65656b20
  4040bb:	jo     0x4040dd
  4040bd:	data16 (bad) 
  4040bf:	movsxd esp,DWORD PTR [rbp+0x74]
  4040c2:	jae    0x4040e4
  4040c4:	ja     0x40412e
  4040c6:	outs   dx,DWORD PTR ds:[rsi]
  4040c7:	jae    0x40412e
  4040c9:	and    BYTE PTR [rcx+0x72],ah
  4040cc:	gs (bad) 
  4040ce:	and    BYTE PTR [rcx+0x73],ch
  4040d1:	and    BYTE PTR [rcx+0x74],ah
  4040d4:	and    BYTE PTR [rbp+riz*2+0x61],ch
  4040d8:	jae    0x40414e
  4040da:	and    BYTE PTR [rsi+0xa],ch
  4040dd:	and    BYTE PTR [rax],ah
  4040df:	and    BYTE PTR [rax],ah
  4040e1:	push   rax
  4040e2:	rex.RXB and BYTE PTR [r8],r12b
  4040e5:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2b10b
  4040eb:	outs   dx,BYTE PTR ds:[rsi]
  4040ec:	je     0x40410e
  4040ee:	outs   dx,BYTE PTR ds:[rsi]
  4040ef:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  4040f7:	and    BYTE PTR [rdi+0x66],ch
  4040fa:	and    BYTE PTR [rdi+0x6f],ah
  4040fd:	outs   dx,DWORD PTR ds:[rsi]
  4040fe:	and    BYTE PTR fs:[rsi+0x61],ah
  404102:	movsxd esp,DWORD PTR [rbp+0x74]
  404105:	jae    0x404111
  404107:	and    BYTE PTR [rax],ah
  404109:	and    BYTE PTR [rax],ah
  40410b:	push   rax
  40410c:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  40410e:	and    BYTE PTR [rax],ah
  404110:	sub    eax,0x65656b20
  404115:	jo     0x404137
  404117:	outs   dx,BYTE PTR ds:[rsi]
  404118:	and    BYTE PTR [rsi+0x61],ah
  40411b:	movsxd esp,DWORD PTR [rbp+0x74]
  40411e:	jae    0x404140
  404120:	ja     0x40418b
  404122:	je     0x40418c
  404124:	and    BYTE PTR [rbp+0x6f],ch
  404127:	jae    0x40419d
  404129:	and    BYTE PTR [rbp+0x65],ch
  40412c:	jb     0x404195
  40412e:	gs jae 0x40413b
  404131:	and    BYTE PTR [rax],ah
  404133:	and    BYTE PTR [rax],ah
  404135:	push   rax
  404136:	outs   dx,DWORD PTR ds:[rsi]
  404137:	and    BYTE PTR [rax],ah
  404139:	and    BYTE PTR [rip+0x726f6620],ch        # 0x72afa75f
  40413f:	movsxd esp,DWORD PTR [rbp+0x20]
  404142:	outs   dx,DWORD PTR ds:[rsi]
  404143:	jne    0x4041b9
  404145:	jo     0x4041bc
  404147:	je     0x404177
  404149:	and    BYTE PTR [rax],ah
  40414b:	rex.WB
  40414c:	data16 and BYTE PTR [rbp+0x72],ah
  404150:	jb     0x4041c1
  404152:	jb     0x404180
  404154:	and    BYTE PTR [rdi+0x75],ch
  404157:	je     0x4041c9
  404159:	jne    0x4041cf
  40415b:	and    BYTE PTR [rsi+0x65],ch
  40415e:	imul   esp,DWORD PTR [rdi+0x68],0x68726f62
  404165:	outs   dx,DWORD PTR ds:[rsi]
  404166:	outs   dx,DWORD PTR ds:[rsi]
  404167:	and    BYTE PTR fs:[rdi+0x66],ch
  40416b:	and    BYTE PTR [rsi+0x61],ah
  40416e:	movsxd esp,DWORD PTR [rbp+0x74]
  404171:	or     ah,BYTE PTR [rax]
  404173:	and    BYTE PTR [rax],ah
  404175:	and    BYTE PTR [rax+0x70],dl
  404178:	and    BYTE PTR [rax],ah
  40417a:	and    BYTE PTR [rip+0x206f6420],ch        # 0x20afa5a0
  404180:	outs   dx,BYTE PTR ds:[rsi]
  404181:	outs   dx,DWORD PTR ds:[rsi]
  404182:	je     0x4041a4
  404184:	jb     0x4041eb
  404186:	jo     0x4041f7
  404188:	jb     0x4041fe
  40418a:	and    BYTE PTR [rax+0x72],dh
  40418d:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  404191:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  404198:	(bad)  
  404199:	ins    BYTE PTR es:[rdi],dx
  40419a:	gs ins DWORD PTR es:[rdi],dx
  40419c:	jae    0x4041a8
  40419e:	or     ah,BYTE PTR [rax]
  4041a0:	and    BYTE PTR [rax],ah
  4041a2:	and    BYTE PTR [rsi],ch
  4041a4:	and    BYTE PTR [rax],ah
  4041a6:	and    BYTE PTR [rax],ah
  4041a8:	sub    eax,0x73696c20
  4041ad:	je     0x4041cf
  4041af:	outs   dx,DWORD PTR ds:[rsi]
  4041b0:	data16 and BYTE PTR [rcx+0x6c],ah
  4041b4:	ins    BYTE PTR es:[rdi],dx
  4041b5:	and    BYTE PTR [rdi+0x70],ch
  4041b8:	je     0x404223
  4041ba:	outs   dx,DWORD PTR ds:[rsi]
  4041bb:	outs   dx,BYTE PTR ds:[rsi]
  4041bc:	jae    0x4041c8
  4041be:	and    BYTE PTR [rax],ah
  4041c0:	and    BYTE PTR [rax],ah
  4041c2:	sub    eax,0x20202020
  4041c7:	sub    eax,0x656e6f20
  4041cc:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4041d0:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
  4041d5:	movsxd esi,DWORD PTR [rdx+0x69]
  4041d8:	jo     0x40424e
  4041da:	imul   ebp,DWORD PTR [rdi+0x6e],0x666f2073
  4041e1:	and    BYTE PTR [rcx+0x6c],ah
  4041e4:	ins    BYTE PTR es:[rdi],dx
  4041e5:	and    BYTE PTR [rdi+0x70],ch
  4041e8:	je     0x404253
  4041ea:	outs   dx,DWORD PTR ds:[rsi]
  4041eb:	outs   dx,BYTE PTR ds:[rsi]
  4041ec:	jae    0x4041f8
	...
  4041fe:	add    BYTE PTR [rax],al
  404200:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  404202:	jb     0x404269
  404204:	and    BYTE PTR [rsi+0x6f],ah
  404207:	jb     0x404276
  404209:	(bad)  
  40420a:	je     0x40427f
  40420c:	cmp    cl,BYTE PTR [rdx]
  40420e:	and    BYTE PTR [rax],ah
  404210:	and    BYTE PTR [rax],ah
  404212:	rex.RX (bad) 
  404214:	and    BYTE PTR [rax],ah
  404216:	and    BYTE PTR [rip+0x65726120],ch        # 0x65b2a33c
  40421c:	(bad)  
  40421d:	and    BYTE PTR [rsi+0x6f],ah
  404220:	jb     0x404242
  404222:	gs (bad) 
  404224:	movsxd ebp,DWORD PTR [rax+0x20]
  404227:	data16 (bad) 
  404229:	movsxd esp,DWORD PTR [rbp+0x74]
  40422c:	or     ah,BYTE PTR [rax]
  40422e:	and    BYTE PTR [rax],ah
  404230:	and    BYTE PTR [rsi+0x41],al
  404233:	and    BYTE PTR [rax],ah
  404235:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafa55b
  40423b:	jo     0x4042b2
  40423d:	je     0x4042a4
  40423f:	and    BYTE PTR [rdi+rbp*2+0x74],dh
  404243:	(bad)  
  404244:	ins    BYTE PTR es:[rdi],dx
  404245:	and    BYTE PTR [rcx+0x72],ah
  404248:	gs (bad) 
  40424a:	and    BYTE PTR [rcx+0x6e],ah
  40424d:	and    BYTE PTR fs:[rsi+0x6f],dh
  404251:	ins    BYTE PTR es:[rdi],dx
  404252:	jne    0x4042c1
  404254:	and    BYTE PTR gs:[rsi+0x6f],ah
  404258:	jb     0x40427a
  40425a:	outs   dx,DWORD PTR ds:[rsi]
  40425b:	jo     0x4042d1
  40425d:	imul   ebp,DWORD PTR [rdi+0x6e],0x27732720
  404264:	or     ah,BYTE PTR [rax]
  404266:	and    BYTE PTR [rax],ah
  404268:	and    BYTE PTR [rsi+0x63],al
  40426b:	and    BYTE PTR [rax],ah
  40426d:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa593
  404273:	outs   dx,BYTE PTR ds:[rsi]
  404274:	je     0x404296
  404276:	jo     0x4042e4
  404278:	jne    0x4042ed
  40427a:	and    BYTE PTR [rbx+0x6f],ah
  40427d:	jo     0x4042eb
  40427f:	(bad)  
  404280:	outs   dx,BYTE PTR ds:[rsi]
  404281:	(bad)  
  404282:	jb     0x4042a4
  404284:	jo     0x4042f5
  404286:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662073
  40428d:	jb     0x4042af
  40428f:	gs (bad) 
  404291:	movsxd ebp,DWORD PTR [rax+0x20]
  404294:	data16 (bad) 
  404296:	movsxd esp,DWORD PTR [rbp+0x74]
  404299:	or     ah,BYTE PTR [rax]
  40429b:	and    BYTE PTR [rax],ah
  40429d:	and    BYTE PTR [rax],ah
  40429f:	and    BYTE PTR [rax],ah
  4042a1:	and    BYTE PTR [rax],ah
  4042a3:	and    BYTE PTR [rax],ah
  4042a5:	jne    0x40431a
  4042a7:	and    BYTE PTR gs:[rdi],ah
  4042aa:	push   rcx
  4042ab:	movsxd esp,DWORD PTR [rdi]
  4042ad:	and    BYTE PTR [rax],ch
  4042af:	fs gs data16 (bad) 
  4042b3:	jne    0x404321
  4042b5:	je     0x4042e0
  4042b7:	and    BYTE PTR [rsi+0x6f],ah
  4042ba:	jb     0x4042dc
  4042bc:	movsxd ebp,DWORD PTR [rdi+0x70]
  4042bf:	ins    BYTE PTR es:[rdi],dx
  4042c0:	(bad)  
  4042c1:	outs   dx,BYTE PTR ds:[rsi]
  4042c2:	(bad)  
  4042c3:	jb     0x4042e5
  4042c5:	(bad)  
  4042c6:	outs   dx,BYTE PTR ds:[rsi]
  4042c7:	and    BYTE PTR fs:[rdi],ah
  4042ca:	push   rcx
  4042cb:	imul   esp,DWORD PTR [rdi],0x726f6620
  4042d1:	and    BYTE PTR [rcx+0x6e],ch
  4042d4:	je     0x40433b
  4042d6:	jb     0x404341
  4042d8:	outs   dx,DWORD PTR ds:[rsi]
  4042d9:	jb     0x4042e5
  4042db:	and    BYTE PTR [rax],ah
  4042dd:	and    BYTE PTR [rax],ah
  4042df:	rex.RX
  4042e0:	rex.XB and BYTE PTR [r8],spl
  4042e3:	and    BYTE PTR [rip+0x6e656320],ch        # 0x6ea5a609
  4042e9:	je     0x40435d
  4042eb:	jne    0x40435a
  4042ed:	and    BYTE PTR [rdi+0x72],ch
  4042f0:	and    BYTE PTR [rsi+0x6f],dl
  4042f3:	jb     0x404364
  4042f5:	outs   dx,BYTE PTR ds:[rsi]
  4042f6:	outs   dx,DWORD PTR ds:[rsi]
  4042f7:	imul   esp,DWORD PTR [rax],0x746e6563
  4042fd:	gs jb  0x404320
  404300:	outs   dx,WORD PTR ds:[rsi]
  404302:	jb     0x404324
  404304:	gs (bad) 
  404306:	movsxd ebp,DWORD PTR [rax+0x20]
  404309:	data16 (bad) 
  40430b:	movsxd esp,DWORD PTR [rbp+0x74]
  40430e:	or     ah,BYTE PTR [rax]
  404310:	and    BYTE PTR [rax],ah
  404312:	and    BYTE PTR [rsi+0x64],al
  404315:	and    BYTE PTR [rax],ah
  404317:	and    BYTE PTR [rip+0x65737520],ch        # 0x65b3b83d
  40431d:	and    BYTE PTR [rbx+0x64],ah
  404320:	and    BYTE PTR fs:[rsi+0x6f],ah
  404324:	jb     0x404393
  404326:	(bad)  
  404327:	je     0x404349
  404329:	outs   dx,WORD PTR ds:[rsi]
  40432b:	jb     0x40434d
  40432d:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  404334:	push   0x676f6d6f
  404339:	outs   dx,BYTE PTR gs:[rsi]
  40433b:	outs   dx,DWORD PTR gs:[rsi]
  40433d:	jne    0x4043b2
  40433f:	and    BYTE PTR [rdi+0x69],dh
  404342:	je     0x4043ac
  404344:	and    BYTE PTR [rdi+0x66],ch
  404347:	data16 jae 0x4043af
  40434a:	je     0x40436c
  40434c:	imul   si,WORD PTR [rdx+0x73],0x2974
  404352:	or     ah,BYTE PTR [rax]
  404354:	and    BYTE PTR [rax],ah
  404356:	and    BYTE PTR [rsi+0x44],al
  404359:	and    BYTE PTR [rax],ah
  40435b:	and    BYTE PTR [rip+0x65737520],ch        # 0x65b3b881
  404361:	and    BYTE PTR [rbx+0x64],ah
  404364:	and    BYTE PTR fs:[rsi+0x6f],ah
  404368:	jb     0x4043d7
  40436a:	(bad)  
  40436b:	je     0x40438d
  40436d:	outs   dx,WORD PTR ds:[rsi]
  40436f:	jb     0x404391
  404371:	outs   dx,BYTE PTR ds:[rsi]
  404372:	jne    0x4043e1
  404374:	gs jb  0x4043e0
  404377:	movsxd esp,DWORD PTR [rax]
  404379:	outs   dx,DWORD PTR ds:[rsi]
  40437a:	jne    0x4043f0
  40437c:	jo     0x4043f3
  40437e:	je     0x4043a0
  404380:	sub    BYTE PTR [rdi+0x66],ch
  404383:	data16 jae 0x4043eb
  404386:	je     0x4043a8
  404388:	imul   si,WORD PTR [rdx+0x73],0x2974
  40438e:	or     ah,BYTE PTR [rax]
  404390:	and    BYTE PTR [rax],ah
  404392:	and    BYTE PTR [rsi+0x46],al
  404395:	and    BYTE PTR [rax],ah
  404397:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1a9bd
  40439d:	gs je  0x4043c0
  4043a0:	fs jne 0x404410
  4043a3:	jo     0x4043c5
  4043a5:	ja     0x404410
  4043a7:	je     0x404411
  4043a9:	outs   dx,DWORD PTR ds:[rsi]
  4043aa:	jne    0x404420
  4043ac:	and    BYTE PTR [rdx+0x69],dh
  4043af:	fs addr32 gs jae 0x4043be
  4043b4:	and    BYTE PTR [rax],ah
  4043b6:	and    BYTE PTR [rax],ah
  4043b8:	rex.RX imul r12d,DWORD PTR [rax],0x202d2020
  4043bf:	imul   ebp,DWORD PTR [rsi+0x6e],0x70207265
  4043c6:	ins    BYTE PTR es:[rdi],dx
  4043c7:	(bad)  
  4043c8:	outs   dx,BYTE PTR ds:[rsi]
  4043c9:	and    BYTE PTR gs:[rsi+0x6f],ah
  4043cd:	jb     0x4043ef
  4043cf:	gs (bad) 
  4043d1:	movsxd ebp,DWORD PTR [rax+0x20]
  4043d4:	data16 (bad) 
  4043d6:	movsxd esp,DWORD PTR [rbp+0x74]
  4043d9:	or     ah,BYTE PTR [rax]
  4043db:	and    BYTE PTR [rax],ah
  4043dd:	and    BYTE PTR [rax],ah
  4043df:	and    BYTE PTR [rax],ah
  4043e1:	and    BYTE PTR [rax],ah
  4043e3:	and    BYTE PTR [rax],ah
  4043e5:	outs   dx,WORD PTR ds:[rsi]
  4043e7:	jb     0x404409
  4043e9:	(bad)  
  4043ea:	jbe    0x404413
  4043ec:	sub    al,0x20
  4043ee:	jae    0x404455
  4043f0:	jo     0x404453
  4043f2:	jb     0x404455
  4043f4:	je     0x40445f
  4043f6:	outs   dx,BYTE PTR ds:[rsi]
  4043f7:	and    BYTE PTR [eax+0x79],ch
  4043fb:	jo     0x404462
  4043fd:	jb     0x40446f
  4043ff:	ins    BYTE PTR es:[rdi],dx
  404400:	(bad)  
  404401:	outs   dx,BYTE PTR ds:[rsi]
  404402:	gs jae 0x404425
  404405:	outs   dx,WORD PTR ds:[rsi]
  404407:	jb     0x404429
  404409:	(bad)  
  40440a:	outs   dx,DWORD PTR ds:[rsi]
  40440b:	jne    0x40447b
  40440d:	fs gs and BYTE PTR fs:[rsi+0x6f],dl
  404413:	jb     0x404484
  404415:	outs   dx,BYTE PTR ds:[rsi]
  404416:	outs   dx,DWORD PTR ds:[rsi]
  404417:	imul   esp,DWORD PTR [rax],0x69676572
  40441d:	outs   dx,DWORD PTR ds:[rsi]
  40441e:	outs   dx,BYTE PTR ds:[rsi]
  40441f:	jae    0x40442b
  404421:	and    BYTE PTR [rax],ah
  404423:	and    BYTE PTR [rax],ah
  404425:	rex.RX
  404426:	rex.WB and BYTE PTR [r8],spl
  404429:	and    BYTE PTR [rip+0x20444920],ch        # 0x20848d4f
  40442f:	outs   dx,DWORD PTR ds:[rsi]
  404430:	data16 and BYTE PTR [rbp+0x61],ah
  404434:	movsxd ebp,DWORD PTR [rax+0x20]
  404437:	data16 (bad) 
  404439:	movsxd esp,DWORD PTR [rbp+0x74]
  40443c:	or     ah,BYTE PTR [rax]
  40443e:	and    BYTE PTR [rax],ah
  404440:	and    BYTE PTR [rsi+0x6d],al
  404443:	and    BYTE PTR [rax],ah
  404445:	and    BYTE PTR [rip+0x72656d20],ch        # 0x72a5b16b
  40444b:	and    BYTE PTR gs:[ebx+0x6f],ah
  404450:	jne    0x4044c0
  404452:	je     0x404474
  404454:	outs   dx,WORD PTR ds:[rsi]
  404456:	jb     0x404478
  404458:	gs (bad) 
  40445a:	movsxd ebp,DWORD PTR [rax+0x20]
  40445d:	data16 (bad) 
  40445f:	movsxd esp,DWORD PTR [rbp+0x74]
  404462:	and    BYTE PTR [rax],ch
  404464:	xor    eax,0x6d203131
  404469:	(bad)  
  40446a:	js     0x404495
  40446c:	or     ah,BYTE PTR [rax]
  40446e:	and    BYTE PTR [rax],ah
  404470:	and    BYTE PTR [rsi+0x4d],al
  404473:	and    BYTE PTR [rax],ah
  404475:	and    BYTE PTR [rip+0x70614d20],ch        # 0x70a1919b
  40447b:	ins    BYTE PTR es:[rdi],dx
  40447c:	and    BYTE PTR gs:[rdi+0x75],ch
  404480:	je     0x4044f2
  404482:	jne    0x4044f8
  404484:	and    BYTE PTR [rax],ch
  404486:	xor    ch,BYTE PTR [rip+0x6e612064]        # 0x6ea164f0
  40448c:	and    BYTE PTR fs:[rbx],dh
  40448f:	sub    eax,0x200a2964
  404494:	and    BYTE PTR [rax],ah
  404496:	and    BYTE PTR [rsi+0x6e],al
  404499:	and    BYTE PTR [rax],ah
  40449b:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa7c1
  4044a1:	outs   dx,BYTE PTR ds:[rsi]
  4044a2:	je     0x4044c4
  4044a4:	jo     0x404512
  4044a6:	jne    0x40451b
  4044a8:	and    BYTE PTR [rsi+0x65],ch
  4044ab:	imul   esp,DWORD PTR [rdi+0x68],0x69726f62
  4044b2:	outs   dx,BYTE PTR ds:[rsi]
  4044b3:	and    BYTE PTR [esi+0x61],ah
  4044b7:	movsxd esp,DWORD PTR [rbp+0x74]
  4044ba:	jae    0x4044dc
  4044bc:	outs   dx,WORD PTR ds:[rsi]
  4044be:	jb     0x4044e0
  4044c0:	gs (bad) 
  4044c2:	movsxd ebp,DWORD PTR [rax+0x20]
  4044c5:	data16 (bad) 
  4044c7:	movsxd esp,DWORD PTR [rbp+0x74]
  4044ca:	or     ah,BYTE PTR [rax]
  4044cc:	and    BYTE PTR [rax],ah
  4044ce:	and    BYTE PTR [rsi+0x4e],al
  4044d1:	and    BYTE PTR [rax],ah
  4044d3:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa7f9
  4044d9:	outs   dx,BYTE PTR ds:[rsi]
  4044da:	je     0x4044fc
  4044dc:	jo     0x40454a
  4044de:	jne    0x404553
  4044e0:	and    BYTE PTR [rsi+0x65],ch
  4044e3:	imul   esp,DWORD PTR [rdi+0x68],0x69726f62
  4044ea:	outs   dx,BYTE PTR ds:[rsi]
  4044eb:	and    BYTE PTR [esi+0x61],ah
  4044ef:	movsxd esp,DWORD PTR [rbp+0x74]
  4044f2:	jae    0x404514
  4044f4:	outs   dx,WORD PTR ds:[rsi]
  4044f6:	jb     0x404518
  4044f8:	gs (bad) 
  4044fa:	movsxd ebp,DWORD PTR [rax+0x20]
  4044fd:	jo     0x40456e
  4044ff:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  404506:	and    BYTE PTR [rsi+0x6f],al
  404509:	and    BYTE PTR [rax],ah
  40450b:	and    BYTE PTR [rip+0x74756f20],ch        # 0x74b5b431
  404511:	gs jb  0x404534
  404514:	jo     0x404582
  404516:	(bad)  
  404517:	outs   dx,BYTE PTR ds:[rsi]
  404518:	and    BYTE PTR gs:[rax],ch
  40451b:	outs   dx,DWORD PTR ds:[rsi]
  40451c:	jb     0x40453e
  40451e:	ins    DWORD PTR es:[rdi],dx
  40451f:	(bad)  
  404520:	js     0x404581
  404522:	outs   dx,DWORD PTR ds:[rsi]
  404523:	jne    0x404599
  404525:	jae    0x404590
  404527:	fs sub DWORD PTR gs:[rax],esp
  40452b:	outs   dx,WORD PTR ds:[rsi]
  40452d:	jb     0x40454f
  40452f:	gs (bad) 
  404531:	movsxd ebp,DWORD PTR [rax+0x20]
  404534:	data16 (bad) 
  404536:	movsxd esp,DWORD PTR [rbp+0x74]
  404539:	or     ah,BYTE PTR [rax]
  40453b:	and    BYTE PTR [rax],ah
  40453d:	and    BYTE PTR [rax],ah
  40453f:	and    BYTE PTR [rax],ah
  404541:	and    BYTE PTR [rax],ah
  404543:	and    BYTE PTR [rax],ah
  404545:	outs   dx,WORD PTR ds:[rsi]
  404547:	jb     0x404569
  404549:	(bad)  
  40454a:	jbe    0x404573
  40454c:	sub    al,0x20
  40454e:	jae    0x4045b5
  404550:	jo     0x4045b3
  404552:	jb     0x4045b5
  404554:	je     0x4045bf
  404556:	outs   dx,BYTE PTR ds:[rsi]
  404557:	and    BYTE PTR [eax+0x79],ch
  40455b:	jo     0x4045c2
  40455d:	jb     0x4045cf
  40455f:	ins    BYTE PTR es:[rdi],dx
  404560:	(bad)  
  404561:	outs   dx,BYTE PTR ds:[rsi]
  404562:	gs jae 0x404585
  404565:	outs   dx,WORD PTR ds:[rsi]
  404567:	jb     0x404589
  404569:	jne    0x4045d9
  40456b:	(bad)  
  40456c:	outs   dx,DWORD PTR ds:[rsi]
  40456d:	jne    0x4045dd
  40456f:	fs gs and BYTE PTR fs:[rsi+0x6f],dl
  404575:	jb     0x4045e6
  404577:	outs   dx,BYTE PTR ds:[rsi]
  404578:	outs   dx,DWORD PTR ds:[rsi]
  404579:	imul   esp,DWORD PTR [rax],0x69676572
  40457f:	outs   dx,DWORD PTR ds:[rsi]
  404580:	outs   dx,BYTE PTR ds:[rsi]
  404581:	jae    0x40458d
  404583:	and    BYTE PTR [rax],ah
  404585:	and    BYTE PTR [rax],ah
  404587:	rex.RX
  404588:	rex.WRXB and BYTE PTR [r8],r12b
  40458b:	and    BYTE PTR [rip+0x74706f20],ch        # 0x74b0b4b1
  404591:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e612073
  404598:	and    BYTE PTR fs:[rax+0x72],dh
  40459c:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  4045a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
  4045a7:	jae    0x40461d
  4045a9:	(bad)  
  4045aa:	outs   dx,BYTE PTR ds:[rsi]
  4045ab:	je     0x404620
  4045ad:	or     ah,BYTE PTR [rax]
  4045af:	and    BYTE PTR [rax],ah
  4045b1:	and    BYTE PTR [rsi+0x70],al
  4045b4:	and    BYTE PTR [rax],ah
  4045b6:	and    BYTE PTR [rip+0x6d696420],ch        # 0x6da9a9dc
  4045bc:	sub    al,0x20
  4045be:	movsxd ebp,DWORD PTR [rdi+0x75]
  4045c1:	outs   dx,BYTE PTR ds:[rsi]
  4045c2:	je     0x4045f0
  4045c4:	and    BYTE PTR [rcx+0x6e],ah
  4045c7:	and    BYTE PTR fs:[rcx+0x6e],ch
  4045cb:	je     0x404632
  4045cd:	jb     0x404642
  4045cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4045d4:	outs   dx,BYTE PTR ds:[rsi]
  4045d5:	and    BYTE PTR [rbx+0x6f],ah
  4045d8:	outs   dx,DWORD PTR ds:[rsi]
  4045d9:	jb     0x40463f
  4045db:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  4045e2:	sub    BYTE PTR [rax+0x61],ch
  4045e5:	ins    BYTE PTR es:[rdi],dx
  4045e6:	data16 jae 0x404659
  4045e9:	(bad)  
  4045ea:	movsxd esp,DWORD PTR [rbp+0x20]
  4045ed:	outs   dx,DWORD PTR ds:[rsi]
  4045ee:	outs   dx,BYTE PTR ds:[rsi]
  4045ef:	ins    BYTE PTR es:[rdi],dx
  4045f0:	jns    0x40461b
  4045f2:	or     ah,BYTE PTR [rax]
  4045f4:	and    BYTE PTR [rax],ah
  4045f6:	and    BYTE PTR [rsi+0x50],al
  4045f9:	and    BYTE PTR [rax],ah
  4045fb:	and    BYTE PTR [rip+0x61656e20],ch        # 0x61a5b421
  404601:	jb     0x404668
  404603:	jae    0x404679
  404605:	and    BYTE PTR [rsi+0x65],dh
  404608:	jb     0x40467e
  40460a:	gs js  0x40462d
  40460d:	(bad)  
  40460e:	outs   dx,BYTE PTR ds:[rsi]
  40460f:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ah
  404614:	je     0x404677
  404616:	outs   dx,BYTE PTR ds:[rsi]
  404617:	movsxd esp,DWORD PTR [rbp+0x20]
  40461a:	outs   dx,WORD PTR ds:[rsi]
  40461c:	jb     0x40463e
  40461e:	gs (bad) 
  404620:	movsxd ebp,DWORD PTR [rax+0x20]
  404623:	movsxd ebp,DWORD PTR [rdi+0x70]
  404626:	ins    BYTE PTR es:[rdi],dx
  404627:	(bad)  
  404628:	outs   dx,BYTE PTR ds:[rsi]
  404629:	(bad)  
  40462a:	jb     0x40464c
  40462c:	jo     0x40469d
  40462e:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  404635:	and    BYTE PTR [rsi+0x51],al
  404638:	and    BYTE PTR [rax],ah
  40463a:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafa960
  404640:	ins    DWORD PTR es:[rdi],dx
  404641:	(bad)  
  404642:	outs   dx,BYTE PTR ds:[rsi]
  404643:	and    BYTE PTR fs:[rbp+0x73],dh
  404647:	gs and BYTE PTR fs:[rsi+0x6f],ah
  40464c:	jb     0x40466e
  40464e:	jno    0x4046b8
  404650:	jne    0x4046be
  404652:	ins    BYTE PTR es:[rdi],dx
  404653:	or     ah,BYTE PTR [rax]
  404655:	and    BYTE PTR [rax],ah
  404657:	and    BYTE PTR [rsi+0x73],al
  40465a:	and    BYTE PTR [rax],ah
  40465c:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5b982
  404662:	ins    DWORD PTR es:[rdi],dx
  404663:	(bad)  
  404664:	jb     0x4046df
  404666:	cmp    ah,BYTE PTR [rax]
  404668:	and    ebp,DWORD PTR [rcx+0x6e]
  40466b:	je     0x40468d
  40466d:	sub    BYTE PTR [rax],bh
  40466f:	sub    DWORD PTR [rax+riz*1],ebp
  404672:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  40467a:	outs   dx,BYTE PTR ds:[rsi]
  40467b:	sub    al,0x20
  40467d:	and    esi,DWORD PTR [rax+0x6f]
  404680:	imul   ebp,DWORD PTR [rsi+0x74],0x74202c73
  404687:	outs   dx,DWORD PTR ds:[rsi]
  404688:	je     0x4046aa
  40468a:	jbe    0x4046f1
  40468c:	jb     0x404702
  40468e:	imul   esp,DWORD PTR [rbx+0x65],0x74202c73
  404695:	outs   dx,DWORD PTR ds:[rsi]
  404696:	je     0x4046b8
  404698:	data16 (bad) 
  40469a:	movsxd esp,DWORD PTR [rbp+0x74]
  40469d:	jae    0x4046cb
  40469f:	or     ah,BYTE PTR [rax]
  4046a1:	and    BYTE PTR [rax],ah
  4046a3:	and    BYTE PTR [rax],ah
  4046a5:	and    BYTE PTR [rax],ah
  4046a7:	and    BYTE PTR [rax],ah
  4046a9:	and    BYTE PTR [rax],ah
  4046ab:	and    BYTE PTR [rax],ah
  4046ad:	and    BYTE PTR [rax],ah
  4046af:	and    BYTE PTR [rax],ah
  4046b1:	and    BYTE PTR [rax],ah
  4046b3:	and    BYTE PTR [rax],ah
  4046b5:	and    BYTE PTR [rdi+0x75],ch
  4046b8:	je     0x40472a
  4046ba:	jne    0x404730
  4046bc:	cmp    ah,BYTE PTR [rax]
  4046be:	and    esi,DWORD PTR [rsi+0x65]
  4046c1:	jb     0x404737
  4046c3:	imul   esp,DWORD PTR [rbx+0x65],0x23202c73
  4046ca:	data16 (bad) 
  4046cc:	movsxd esp,DWORD PTR [rbp+0x74]
  4046cf:	jae    0x4046fd
  4046d1:	and    BYTE PTR [rbx],ah
  4046d3:	movsxd ebp,DWORD PTR [rdi+0x70]
  4046d6:	ins    BYTE PTR es:[rdi],dx
  4046d7:	(bad)  
  4046d8:	outs   dx,BYTE PTR ds:[rsi]
  4046d9:	(bad)  
  4046da:	jb     0x40474f
  4046dc:	sub    al,0x20
  4046de:	and    ebp,DWORD PTR [rsi+0x6f]
  4046e1:	outs   dx,BYTE PTR ds:[rsi]
  4046e2:	jae    0x40474d
  4046e4:	ins    DWORD PTR es:[rdi],dx
  4046e5:	jo     0x404753
  4046e7:	imul   esp,DWORD PTR [rbx+0x69],0x200a6c61
  4046ee:	and    BYTE PTR [rax],ah
  4046f0:	and    BYTE PTR [rax],ah
  4046f2:	and    BYTE PTR [rax],ah
  4046f4:	and    BYTE PTR [rax],ah
  4046f6:	and    BYTE PTR [rax],ah
  4046f8:	and    BYTE PTR [rax],ah
  4046fa:	and    BYTE PTR [rax],ah
  4046fc:	and    BYTE PTR [rax],ah
  4046fe:	and    BYTE PTR [rax],ah
  404700:	and    BYTE PTR [rbx],ah
  404702:	jb     0x404769
  404704:	(bad)  
  404705:	ins    BYTE PTR es:[rdi],dx
  404706:	and    BYTE PTR [rax],ch
  404708:	xor    ch,BYTE PTR [rcx]
  40470a:	sub    al,0x20
  40470c:	ins    DWORD PTR es:[rdi],dx
  40470d:	(bad)  
  40470e:	js     0x404730
  404710:	outs   dx,DWORD PTR ds:[rsi]
  404711:	jne    0x404787
  404713:	gs jb  0x404736
  404716:	jo     0x404784
  404718:	(bad)  
  404719:	outs   dx,BYTE PTR ds:[rsi]
  40471a:	gs sub al,0x20
  40471d:	ins    DWORD PTR es:[rdi],dx
  40471e:	imul   ebp,DWORD PTR [rsi+0x20],0x74726576
  404725:	gs js  0x404732
  404728:	and    BYTE PTR [rax],ah
  40472a:	and    BYTE PTR [rax],ah
  40472c:	rex.RX push rbx
  40472e:	and    BYTE PTR [rax],ah
  404730:	and    BYTE PTR [rip+0x7a697320],ch        # 0x7aa9ba56
  404736:	gs jae 0x404773
  404739:	and    BYTE PTR [rax],ah
  40473b:	and    BYTE PTR [rbx],ah
  40473d:	imul   ebp,DWORD PTR [rsi+0x74],0x29302820
  404744:	or     ah,BYTE PTR [rax]
  404746:	and    BYTE PTR [rax],ah
  404748:	and    BYTE PTR [rax],ah
  40474a:	and    BYTE PTR [rax],ah
  40474c:	and    BYTE PTR [rax],ah
  40474e:	and    BYTE PTR [rax],ah
  404750:	and    BYTE PTR [rax],ah
  404752:	and    BYTE PTR [rax],ah
  404754:	and    BYTE PTR [rax],ah
  404756:	and    BYTE PTR [rax],ah
  404758:	and    BYTE PTR [rbx],ah
  40475a:	jb     0x4047c1
  40475c:	(bad)  
  40475d:	ins    BYTE PTR es:[rdi],dx
  40475e:	sub    BYTE PTR [rdx],dh
  404760:	sub    DWORD PTR [rax],esp
  404762:	je     0x4047d3
  404764:	je     0x404786
  404766:	(bad)  
  404767:	jb     0x4047ce
  404769:	(bad)  
  40476a:	sub    al,0x20
  40476c:	je     0x4047dd
  40476e:	je     0x404790
  404770:	jbe    0x4047e1
  404772:	ins    BYTE PTR es:[rdi],dx
  404773:	jne    0x4047e2
  404775:	or     ah,BYTE PTR gs:[rax]
  404778:	and    BYTE PTR [rax],ah
  40477a:	and    BYTE PTR [rsi+0x74],al
  40477d:	and    BYTE PTR [rax],ah
  40477f:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2bba5
  404785:	(bad)  
  404786:	outs   dx,BYTE PTR ds:[rsi]
  404787:	addr32 jne 0x4047f6
  40478a:	(bad)  
  40478b:	je     0x4047f6
  40478d:	outs   dx,DWORD PTR ds:[rsi]
  40478e:	outs   dx,BYTE PTR ds:[rsi]
  40478f:	and    BYTE PTR [rdi+0x69],dh
  404792:	je     0x4047fc
  404794:	and    BYTE PTR [rbx+0x65],ah
  404797:	outs   dx,BYTE PTR ds:[rsi]
  404798:	je     0x40480c
  40479a:	jne    0x404809
  40479c:	jae    0x4047be
  40479e:	outs   dx,WORD PTR ds:[rsi]
  4047a0:	jb     0x4047c2
  4047a2:	outs   dx,BYTE PTR ds:[rsi]
  4047a3:	outs   dx,DWORD PTR ds:[rsi]
  4047a4:	outs   dx,BYTE PTR ds:[rsi]
  4047a5:	sub    eax,0x706d6973
  4047aa:	ins    BYTE PTR es:[rdi],dx
  4047ab:	imul   esp,DWORD PTR [rbx+0x69],0x66206c61
  4047b2:	(bad)  
  4047b3:	movsxd esp,DWORD PTR [rbp+0x74]
  4047b6:	jae    0x4047d8
  4047b8:	sub    BYTE PTR [rdi+0x46],cl
  4047bb:	rex.RX and BYTE PTR [rsi+0x6f],r12b
  4047bf:	jb     0x40482e
  4047c1:	(bad)  
  4047c2:	je     0x4047ed
  4047c4:	or     ah,BYTE PTR [rax]
  4047c6:	and    BYTE PTR [rax],ah
  4047c8:	and    BYTE PTR [rsi+0x76],al
  4047cb:	and    BYTE PTR [rax],ah
  4047cd:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afaaf3
  4047d3:	outs   dx,BYTE PTR ds:[rsi]
  4047d4:	je     0x4047f6
  4047d6:	jo     0x404844
  4047d8:	jne    0x40484d
  4047da:	and    BYTE PTR [rsi+0x65],dh
  4047dd:	jb     0x404853
  4047df:	imul   esp,DWORD PTR [rbx+0x65],0x6f662073
  4047e6:	jb     0x404808
  4047e8:	gs (bad) 
  4047ea:	movsxd ebp,DWORD PTR [rax+0x20]
  4047ed:	data16 (bad) 
  4047ef:	movsxd esp,DWORD PTR [rbp+0x74]
  4047f2:	or     ah,BYTE PTR [rax]
  4047f4:	and    BYTE PTR [rax],ah
  4047f6:	and    BYTE PTR [rax],ah
  4047f8:	and    BYTE PTR [rax],ah
  4047fa:	and    BYTE PTR [rax],ah
  4047fc:	and    BYTE PTR [rax],ah
  4047fe:	outs   dx,WORD PTR ds:[rsi]
  404800:	jb     0x404822
  404802:	(bad)  
  404803:	jbe    0x40482c
  404805:	sub    al,0x20
  404807:	push   rsi
  404808:	outs   dx,DWORD PTR ds:[rsi]
  404809:	jb     0x40487a
  40480b:	outs   dx,BYTE PTR ds:[rsi]
  40480c:	outs   dx,DWORD PTR ds:[rsi]
  40480d:	imul   esp,DWORD PTR [rax],0x67616964
  404813:	jb     0x404876
  404815:	ins    DWORD PTR es:[rdi],dx
  404816:	and    BYTE PTR [rcx+0x73],ah
  404819:	and    BYTE PTR [rsi+0x6f],dl
  40481c:	jb     0x40488d
  40481e:	outs   dx,BYTE PTR ds:[rsi]
  40481f:	outs   dx,DWORD PTR ds:[rsi]
  404820:	imul   esp,DWORD PTR [rax],0x74726576
  404826:	imul   esp,DWORD PTR [rbx+0x65],0x6f662073
  40482d:	jb     0x40484f
  40482f:	jo     0x404892
  404831:	imul   esi,DWORD PTR [rdx+0x73],0x20666f20
  404838:	jae    0x4048a3
  40483a:	je     0x4048a1
  40483c:	jae    0x404848
  40483e:	and    BYTE PTR [rax],ah
  404840:	and    BYTE PTR [rax],ah
  404842:	rex.RX push rsi
  404844:	and    BYTE PTR [rax],ah
  404846:	and    BYTE PTR [rip+0x65766120],ch        # 0x65b6a96c
  40484c:	jb     0x4048af
  40484e:	and    BYTE PTR gs:[edi+0x66],ch
  404853:	and    BYTE PTR [rsi+0x65],dh
  404856:	jb     0x4048cc
  404858:	imul   esp,DWORD PTR [rbx+0x65],0x61282073
  40485f:	and    BYTE PTR [rsi+0x65],ah
  404862:	(bad)  
  404863:	jae    0x4048ce
  404865:	(bad)  
  404866:	ins    BYTE PTR es:[rdi],dx
  404867:	and    BYTE PTR gs:[rax+0x6f],dh
  40486b:	imul   ebp,DWORD PTR [rsi+0x74],0x726f6620
  404872:	and    BYTE PTR [rdi],ah
  404874:	rex.W (bad) 
  404876:	sub    DWORD PTR [rdx],ecx
  404878:	and    BYTE PTR [rax],ah
  40487a:	and    BYTE PTR [rax],ah
  40487c:	rex.RX js 0x40489f
  40487f:	and    BYTE PTR [rax],ah
  404881:	sub    eax,0x74786520
  404886:	jb     0x4048ed
  404888:	ins    DWORD PTR es:[rdi],dx
  404889:	and    BYTE PTR gs:[rax+0x6f],dh
  40488d:	imul   ebp,DWORD PTR [rsi+0x74],0x69282073
  404894:	outs   dx,BYTE PTR ds:[rsi]
  404895:	and    BYTE PTR [rdi+0x72],ch
  404898:	fs gs jb 0x4048bc
  40489c:	outs   dx,WORD PTR ds:[rsi]
  40489e:	jb     0x4048c0
  4048a0:	xor    ch,BYTE PTR [rip+0xa0a2964]        # 0xa4a720a
	...
  4048be:	add    BYTE PTR [rax],al
  4048c0:	push   rsp
  4048c1:	outs   dx,DWORD PTR ds:[rsi]
  4048c2:	jo     0x404938
  4048c4:	jae    0x4048f3
  4048c6:	and    BYTE PTR [rdx+rsi*2+0x61],dl
  4048ca:	movsxd esp,DWORD PTR [rbp+0x20]
  4048cd:	outs   dx,DWORD PTR ds:[rsi]
  4048ce:	jo     0x404944
  4048d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  4048d7:	and    BYTE PTR [rax],ah
  4048d9:	and    BYTE PTR [rsp+rsi*1+0x20],dl
  4048dd:	and    BYTE PTR [rax],ah
  4048df:	sub    eax,0x61727420
  4048e4:	movsxd esp,DWORD PTR [rbp+0x20]
  4048e7:	(bad)  
  4048e8:	je     0x40490a
  4048ea:	ins    BYTE PTR es:[rdi],dx
  4048eb:	gs jbe 0x404953
  4048ee:	ins    BYTE PTR es:[rdi],dx
  4048ef:	and    BYTE PTR [rsi+0x2c],ch
  4048f2:	and    BYTE PTR [rdi*1+0x2c6c6c61],dh
  4048f9:	and    BYTE PTR [rip+0x6d656d3d],dh        # 0x6da5b63c
  4048ff:	(bad)  
  404900:	addr32 (bad) 
  404902:	jne    0x404977
  404904:	jae    0x404932
  404906:	and    BYTE PTR [rip+0x65203d31],ch        # 0x6560863d
  40490c:	jbe    0x404973
  40490e:	outs   dx,BYTE PTR ds:[rsi]
  40490f:	je     0x404984
  404911:	or     ah,BYTE PTR [rax]
  404913:	and    BYTE PTR [rax],ah
  404915:	and    BYTE PTR [rbx+riz*2+0x20],dl
  404919:	and    BYTE PTR [rax],ah
  40491b:	sub    eax,0x65686320
  404920:	movsxd ebp,DWORD PTR [rbx+0x20]
  404923:	data16 jb 0x40498b
  404926:	jno    0x40499d
  404928:	outs   dx,BYTE PTR gs:[rsi]
  40492a:	je     0x404998
  40492c:	jns    0x40494e
  40492e:	fs jne 0x4049a3
  404931:	imul   ebp,DWORD PTR [rsi+0x67],0x65786520
  404938:	movsxd esi,DWORD PTR [rbp+0x74]
  40493b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  404942:	and    BYTE PTR [rbx+rsi*2+0x20],dl
  404946:	and    BYTE PTR [rax],ah
  404948:	sub    eax,0x69727020
  40494d:	outs   dx,BYTE PTR ds:[rsi]
  40494e:	je     0x404970
  404950:	jae    0x4049c6
  404952:	(bad)  
  404953:	je     0x4049be
  404955:	jae    0x4049cb
  404957:	imul   esp,DWORD PTR [rbx+0x73],0x2020200a
  40495e:	and    BYTE PTR [rsi+rsi*2+0x20],dl
  404962:	and    BYTE PTR [rax],ah
  404964:	sub    eax,0x72657620
  404969:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  404970:	jne    0x4049de
  404972:	je     0x4049ae
  404974:	and    BYTE PTR [rbx+0x74],dh
  404977:	jb     0x4049ee
  404979:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  40497d:	gs sub al,0x20
  404980:	movsxd ebp,DWORD PTR [rdi+0x6e]
  404983:	jbe    0x4049ea
  404985:	js     0x4049f0
  404987:	je     0x404a02
  404989:	sub    al,0x20
  40498b:	(bad)  
  40498c:	outs   dx,BYTE PTR ds:[rsi]
  40498d:	and    BYTE PTR fs:[rax+0x6f],dh
  404991:	imul   ebp,DWORD PTR [rsi+0x74],0x636e6920
  404998:	ins    BYTE PTR es:[rdi],dx
  404999:	jne    0x404a0e
  40499b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  4049a2:	and    BYTE PTR [rdx+rdi*2+0x20],dl
  4049a6:	and    BYTE PTR [rax],ah
  4049a8:	sub    eax,0x6e657320
  4049ad:	and    BYTE PTR fs:[rcx+0x6c],ah
  4049b1:	ins    BYTE PTR es:[rdi],dx
  4049b2:	and    BYTE PTR [rdi+0x75],ch
  4049b5:	je     0x404a27
  4049b7:	jne    0x404a2d
  4049b9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4049bd:	jae    0x404a33
  4049bf:	outs   dx,DWORD PTR fs:[rsi]
  4049c1:	jne    0x404a37
  4049c3:	or     ah,BYTE PTR [rax]
  4049c5:	and    BYTE PTR [rax],ah
  4049c7:	and    BYTE PTR [rsi+rax*2+0x6e],dl
  4049cb:	and    BYTE PTR [rax],ah
  4049cd:	sub    eax,0x70657220
  4049d2:	outs   dx,DWORD PTR ds:[rsi]
  4049d3:	jb     0x404a49
  4049d5:	and    BYTE PTR [rbx+0x75],dh
  4049d8:	ins    DWORD PTR es:[rdi],dx
  4049d9:	ins    DWORD PTR es:[rdi],dx
  4049da:	(bad)  
  4049db:	jb     0x404a56
  4049dd:	and    BYTE PTR [rdi+0x68],dh
  4049e0:	outs   dx,BYTE PTR gs:[rsi]
  4049e2:	and    BYTE PTR [rsi+0x20],ch
  4049e5:	outs   dx,DWORD PTR ds:[rsi]
  4049e6:	jb     0x404a08
  4049e8:	ins    DWORD PTR es:[rdi],dx
  4049e9:	outs   dx,DWORD PTR ds:[rsi]
  4049ea:	jb     0x404a51
  4049ec:	and    BYTE PTR [rsi+0x61],ah
  4049ef:	movsxd esp,DWORD PTR [rbp+0x74]
  4049f2:	jae    0x404a14
  4049f4:	movsxd esi,DWORD PTR [rdx+0x65]
  4049f7:	(bad)  
  4049f8:	je     0x404a5f
  4049fa:	or     ah,BYTE PTR fs:[rax]
  4049fd:	and    BYTE PTR [rax],ah
  4049ff:	and    BYTE PTR [rcx+rcx*2+0x20],dl
  404a03:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x202d
  404a0a:	imul   ebp,DWORD PTR [rsi+0x70],0x64207475
  404a11:	(bad)  
  404a12:	je     0x404a75
  404a14:	and    BYTE PTR [rsi+0x72],ah
  404a17:	outs   dx,DWORD PTR ds:[rsi]
  404a18:	ins    DWORD PTR es:[rdi],dx
  404a19:	and    BYTE PTR [rsi+0x69],ah
  404a1c:	ins    BYTE PTR es:[rdi],dx
  404a1d:	gs sub al,0x20
  404a20:	outs   dx,BYTE PTR ds:[rsi]
  404a21:	outs   dx,DWORD PTR ds:[rsi]
  404a22:	and    BYTE PTR [rbx+0x70],dh
  404a25:	(bad)  
  404a26:	movsxd esp,DWORD PTR [rbp+0x73]
  404a29:	and    BYTE PTR [rdi+0x72],ch
  404a2c:	and    BYTE PTR [rbx+0x69],dh
  404a2f:	outs   dx,BYTE PTR ds:[rsi]
  404a30:	ins    BYTE PTR es:[edi],dx
  404a32:	and    BYTE PTR gs:[rcx+0x75],dh
  404a36:	outs   dx,DWORD PTR ds:[rsi]
  404a37:	je     0x404a9e
  404a39:	jae    0x404a45
  404a3b:	and    BYTE PTR [rax],ah
  404a3d:	and    BYTE PTR [rax],ah
  404a3f:	push   rsp
  404a40:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  404a44:	ins    BYTE PTR es:[rdi],dx
  404a45:	and    BYTE PTR gs:[rip+0x74756f20],ch        # 0x74b5b96c
  404a4c:	jo     0x404ac3
  404a4e:	je     0x404a70
  404a50:	jb     0x404ab7
  404a52:	jae    0x404ac9
  404a54:	ins    BYTE PTR es:[rdi],dx
  404a55:	je     0x404aca
  404a57:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  404a5b:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  404a62:	(bad)  
  404a63:	jns    0x404a85
  404a65:	(bad)  
  404a66:	and    BYTE PTR gs:[rbp+0x6e],ah
  404a6a:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  404a6e:	gs and BYTE PTR fs:[rcx+0x6e],ch
  404a73:	and    BYTE PTR [rbx+0x69],dh
  404a76:	outs   dx,BYTE PTR ds:[rsi]
  404a77:	ins    BYTE PTR es:[edi],dx
  404a79:	and    BYTE PTR gs:[rcx+0x75],dh
  404a7d:	outs   dx,DWORD PTR ds:[rsi]
  404a7e:	je     0x404ae5
  404a80:	jae    0x404a8c
  404a82:	and    BYTE PTR [rax],ah
  404a84:	and    BYTE PTR [rax],ah
  404a86:	push   rsp
  404a87:	push   rax
  404a88:	outs   dx,BYTE PTR ds:[rsi]
  404a89:	and    BYTE PTR [rax],ah
  404a8b:	sub    eax,0x72757420
  404a90:	outs   dx,BYTE PTR ds:[rsi]
  404a91:	and    BYTE PTR [rdi+0x6e],ch
  404a94:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  404a98:	movsxd ebp,DWORD PTR [rcx+0x6e]
  404a9b:	and    BYTE PTR [edi+0x68],dh
  404a9f:	outs   dx,BYTE PTR gs:[rsi]
  404aa1:	and    BYTE PTR [rax+0x6f],dh
  404aa4:	imul   ebp,DWORD PTR [rsi+0x74],0x61206e20
  404aab:	fs fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  404ab3:	push   0xa6c6c75
  404ab8:	and    BYTE PTR [rax],ah
  404aba:	and    BYTE PTR [rax],ah
  404abc:	and    BYTE PTR [rbp+rcx*2+0x6e],dl
  404ac0:	and    BYTE PTR [rip+0x72757420],ch        # 0x72b5bee6
  404ac6:	outs   dx,BYTE PTR ds:[rsi]
  404ac7:	and    BYTE PTR [rdi+0x6e],ch
  404aca:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  404ace:	movsxd ebp,DWORD PTR [rcx+0x6e]
  404ad1:	and    BYTE PTR [ecx+0x74],ah
  404ad5:	and    BYTE PTR [rbp+0x65],ch
  404ad8:	jb     0x404b41
  404ada:	and    BYTE PTR gs:[rsi+0xa],ch
  404ade:	and    BYTE PTR [rax],ah
  404ae0:	and    BYTE PTR [rax],ah
  404ae2:	and    BYTE PTR [rdi+rdx*2+0x6e],dl
  404ae6:	and    BYTE PTR [rip+0x61727420],ch        # 0x61b2bf0c
  404aec:	movsxd esp,DWORD PTR [rbp+0x20]
  404aef:	ins    DWORD PTR es:[rdi],dx
  404af0:	gs jb  0x404b5a
  404af3:	and    BYTE PTR gs:[rsi+0x61],ah
  404af7:	movsxd esp,DWORD PTR [rbp+0x74]
  404afa:	jae    0x404b1c
  404afc:	ja     0x404b66
  404afe:	outs   dx,BYTE PTR gs:[rsi]
  404b00:	and    BYTE PTR [rdi+0x69],dh
  404b03:	fs je  0x404b6e
  404b06:	and    BYTE PTR [rsi],bh
  404b08:	and    BYTE PTR [rsi+0xa],ch
  404b0b:	and    BYTE PTR [rax],ah
  404b0d:	and    BYTE PTR [rax],ah
  404b0f:	push   rsp
  404b10:	push   rdx
  404b11:	outs   dx,BYTE PTR ds:[rsi]
  404b12:	and    BYTE PTR [rax],ah
  404b14:	sub    eax,0x72657220
  404b19:	jne    0x404b89
  404b1b:	and    BYTE PTR [rcx+0x68],dh
  404b1e:	jne    0x404b8c
  404b20:	ins    BYTE PTR es:[rdi],dx
  404b21:	and    BYTE PTR [rsi+0x20],ch
  404b24:	je     0x404b8f
  404b26:	ins    DWORD PTR es:[rdi],dx
  404b27:	gs jae 0x404b58
  404b2a:	and    BYTE PTR [rax],ah
  404b2c:	push   rbp
  404b2d:	jae    0x404b94
  404b2f:	and    BYTE PTR [rdi+0x69],dh
  404b32:	je     0x404b9c
  404b34:	and    BYTE PTR [rdi],ah
  404b36:	push   rcx
  404b37:	rex.WX outs dx,BYTE PTR ds:[rsi]
  404b39:	(bad)  
  404b3a:	or     ah,BYTE PTR [rax]
  404b3c:	and    BYTE PTR [rax],ah
  404b3e:	and    BYTE PTR [rsi+rdx*2+0x6e],dl
  404b42:	and    BYTE PTR [rax],ah
  404b44:	sub    eax,0x6f747320
  404b49:	jo     0x404b6b
  404b4b:	jno    0x404bb5
  404b4d:	jne    0x404bbb
  404b4f:	ins    BYTE PTR es:[rdi],dx
  404b50:	and    BYTE PTR [rcx+0x66],ah
  404b53:	je     0x404bba
  404b55:	jb     0x404b77
  404b57:	(bad)  
  404b58:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x696f7020
  404b61:	outs   dx,BYTE PTR ds:[rsi]
  404b62:	je     0x404b84
  404b64:	outs   dx,BYTE PTR ds:[rsi]
  404b65:	sub    al,0x20
  404b67:	sub    eax,0x6f66206e
  404b6c:	jb     0x404b8e
  404b6e:	(bad)  
  404b6f:	outs   dx,WORD PTR gs:[rsi]
  404b72:	jb     0x404bd9
  404b74:	and    BYTE PTR [rax],ch
  404b76:	jae    0x404bdd
  404b78:	and    BYTE PTR gs:[rbx+rax*2+0x6e],dl
  404b7d:	sub    DWORD PTR [rdx],ecx
  404b7f:	and    BYTE PTR [rax],ah
  404b81:	and    BYTE PTR [rax],ah
  404b83:	and    BYTE PTR [rbx+rax*2+0x6e],dl
  404b87:	and    BYTE PTR [rip+0x6f747320],ch        # 0x6fb4bead
  404b8d:	jo     0x404baf
  404b8f:	jno    0x404bf9
  404b91:	jne    0x404bff
  404b93:	ins    BYTE PTR es:[rdi],dx
  404b94:	and    BYTE PTR [rcx+0x66],ah
  404b97:	je     0x404bfe
  404b99:	jb     0x404bbb
  404b9b:	(bad)  
  404b9c:	jne    0x404c07
  404b9e:	ins    BYTE PTR es:[rdi],dx
  404b9f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e6f6320
  404ba7:	and    BYTE PTR gs:[rsi+0x6f],ah
  404bab:	jb     0x404bcd
  404bad:	jo     0x404c1e
  404baf:	imul   ebp,DWORD PTR [rsi+0x74],0x28206e20
  404bb6:	jae    0x404c1d
  404bb8:	and    BYTE PTR gs:[rsi+rdx*2+0x6e],dl
  404bbd:	sub    DWORD PTR [rdx],ecx
  404bbf:	or     dl,BYTE PTR [rax+0x72]
  404bc2:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  404bc6:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f20
  404bcd:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  404bd4:	and    BYTE PTR [rax],ah
  404bd6:	and    BYTE PTR [rbx+0x6e],al
  404bd9:	and    BYTE PTR [rax],ah
  404bdb:	and    BYTE PTR [rip+0x64617220],ch        # 0x64a1be01
  404be1:	imul   esi,DWORD PTR [rbp+0x73],0x20666f20
  404be8:	movsxd esp,DWORD PTR [rbp+0x6e]
  404beb:	je     0x404c5f
  404bed:	jne    0x404c5c
  404bef:	and    BYTE PTR [rax],ch
  404bf1:	jb     0x404c62
  404bf3:	jne    0x404c63
  404bf5:	outs   dx,DWORD PTR fs:[rsi]
  404bf7:	data16 data16 and BYTE PTR [rcx+0x64],ah
  404bfc:	fs gs sub DWORD PTR fs:[rsi],ebp
  404c01:	and    BYTE PTR [rax],ah
  404c03:	rex.WRB
  404c04:	gs jb  0x404c6e
  404c07:	and    BYTE PTR gs:[rsi+0x61],ah
  404c0b:	movsxd esp,DWORD PTR [rbp+0x74]
  404c0e:	jae    0x404c30
  404c10:	imul   esp,DWORD PTR [rsi+0x20],0x2d6e6f6e
  404c17:	movsxd ebp,DWORD PTR [rdi+0x6e]
  404c1a:	jbe    0x404c81
  404c1c:	js     0x404c28
  404c1e:	and    BYTE PTR [rax],ah
  404c20:	and    BYTE PTR [rax],ah
  404c22:	and    BYTE PTR [rcx+0x6e],al
  404c25:	and    BYTE PTR [rax],ah
  404c27:	sub    eax,0x736f6320
  404c2c:	imul   ebp,DWORD PTR [rsi+0x65],0x20666f20
  404c33:	ins    DWORD PTR es:[rdi],dx
  404c34:	(bad)  
  404c35:	js     0x404ca0
  404c37:	ins    DWORD PTR es:[rdi],dx
  404c38:	jne    0x404ca7
  404c3a:	and    BYTE PTR [rcx+0x6e],ah
  404c3d:	ins    BYTE PTR es:[edi],dx
  404c3f:	gs and BYTE PTR cs:[rax],ah
  404c43:	rex.WRB
  404c44:	gs jb  0x404cae
  404c47:	and    BYTE PTR gs:[rsi+0x61],ah
  404c4b:	movsxd esp,DWORD PTR [rbp+0x74]
  404c4e:	jae    0x404c70
  404c50:	imul   esp,DWORD PTR [rsi+0x20],0x69736f63
  404c57:	outs   dx,BYTE PTR ds:[rsi]
  404c58:	and    BYTE PTR gs:[rsi],bh
  404c5b:	and    BYTE PTR [rsi+0x20],ch
  404c5e:	outs   dx,DWORD PTR ds:[rsi]
  404c5f:	jb     0x404c81
  404c61:	outs   dx,BYTE PTR ds:[rsi]
  404c62:	outs   dx,DWORD PTR ds:[rsi]
  404c63:	outs   dx,BYTE PTR ds:[rsi]
  404c64:	sub    eax,0x766e6f63
  404c69:	gs js  0x404c76
  404c6c:	and    BYTE PTR [rax],ah
  404c6e:	and    BYTE PTR [rax],ah
  404c70:	and    BYTE PTR [rax],ah
  404c72:	and    BYTE PTR [rax],ah
  404c74:	and    BYTE PTR [rax],ah
  404c76:	and    BYTE PTR [rbx+0x2d],al
  404c79:	xor    BYTE PTR [rax],ah
  404c7b:	jb     0x404cec
  404c7d:	jne    0x404ced
  404c7f:	outs   dx,DWORD PTR fs:[rsi]
  404c81:	data16 data16 sub al,0x20
  404c85:	rex.B sub eax,0x39392e30
  404c8b:	(bad)  
  404c8c:	rex.XB sub eax,0x31302e30
  404c92:	and    BYTE PTR [rax+0x72],dh
  404c95:	gs sub eax,0x6772656d
  404c9b:	gs sub al,0x20
  404c9e:	xor    BYTE PTR [r14],bpl
  404ca1:	cmp    DWORD PTR [rcx],edi
  404ca3:	(bad)  
  404ca4:	rex.XB xor BYTE PTR [r14],bpl
  404ca7:	xor    BYTE PTR [rcx],dh
  404ca9:	and    BYTE PTR [rax+0x6f],dh
  404cac:	jae    0x404d22
  404cae:	sub    eax,0x6772656d
  404cb3:	or     ah,BYTE PTR gs:[rax]
  404cb6:	and    BYTE PTR [rax],ah
  404cb8:	and    BYTE PTR [rbp+0x6e],al
  404cbb:	and    BYTE PTR [rax],ah
  404cbd:	and    BYTE PTR [rip+0x78616d20],ch        # 0x78a1b9e3
  404cc3:	and    BYTE PTR [rdx+0x6f],dh
  404cc6:	jne    0x404d36
  404cc8:	outs   dx,DWORD PTR fs:[rsi]
  404cca:	data16 data16 and BYTE PTR [rbp+0x72],ah
  404ccf:	jb     0x404d40
  404cd1:	jb     0x404cf3
  404cd3:	outs   dx,WORD PTR ds:[rsi]
  404cd5:	jb     0x404cf7
  404cd7:	imul   esi,DWORD PTR fs:[rbx+0x74],0x65636e61
  404cdf:	and    BYTE PTR [rbx+0x6f],ah
  404ce2:	ins    DWORD PTR es:[rdi],dx
  404ce3:	jo     0x404d5a
  404ce5:	je     0x404d48
  404ce7:	je     0x404d52
  404ce9:	outs   dx,DWORD PTR ds:[rsi]
  404cea:	outs   dx,BYTE PTR ds:[rsi]
  404ceb:	or     ah,BYTE PTR [rax]
  404ced:	and    BYTE PTR [rax],ah
  404cef:	and    BYTE PTR [rdx+0x6e],dl
  404cf2:	and    BYTE PTR [rax],ah
  404cf4:	and    BYTE PTR [rip+0x6e617220],ch        # 0x6ea1bf1a
  404cfa:	outs   dx,DWORD PTR fs:[rsi]
  404cfc:	ins    DWORD PTR es:[rdi],dx
  404cfd:	ins    BYTE PTR es:[rdi],dx
  404cfe:	jns    0x404d20
  404d00:	jo     0x404d67
  404d02:	jb     0x404d78
  404d04:	jne    0x404d78
  404d06:	(bad)  
  404d07:	and    BYTE PTR [rbx+0x6f],ah
  404d0a:	ins    DWORD PTR es:[rdi],dx
  404d0b:	jo     0x404d82
  404d0d:	je     0x404d70
  404d0f:	je     0x404d7a
  404d11:	outs   dx,DWORD PTR ds:[rsi]
  404d12:	outs   dx,BYTE PTR ds:[rsi]
  404d13:	jae    0x404d35
  404d15:	(bad)  
  404d16:	jns    0x404d38
  404d18:	(bad)  
  404d19:	and    BYTE PTR [rsi+0x61],ah
  404d1c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  404d20:	and    BYTE PTR [rdi+0x66],ch
  404d23:	and    BYTE PTR [rbx+0x31],bl
  404d26:	sub    eax,0x2b312c6e
  404d2b:	outs   dx,BYTE PTR ds:[rsi]
  404d2c:	pop    rbp
  404d2d:	or     ah,BYTE PTR [rax]
  404d2f:	and    BYTE PTR [rax],ah
  404d31:	and    BYTE PTR [rsi+0x6e],dl
  404d34:	and    BYTE PTR [rax],ah
  404d36:	and    BYTE PTR [rip+0x6e696d20],ch        # 0x6ea9ba5c
  404d3c:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  404d40:	je     0x404da3
  404d42:	outs   dx,BYTE PTR ds:[rsi]
  404d43:	movsxd esp,DWORD PTR [rbp+0x20]
  404d46:	(bad)  
  404d47:	(bad)  
  404d48:	outs   dx,DWORD PTR ds:[rsi]
  404d49:	jbe    0x404db0
  404d4b:	and    BYTE PTR [rax+0x6c],dh
  404d4e:	(bad)  
  404d4f:	outs   dx,BYTE PTR ds:[rsi]
  404d50:	and    BYTE PTR gs:[rsi+0x6f],ah
  404d54:	jb     0x404d76
  404d56:	(bad)  
  404d57:	and    BYTE PTR [rsi+0x69],dh
  404d5a:	jae    0x404dc5
  404d5c:	(bad)  
  404d5d:	ins    BYTE PTR es:[rdi],dx
  404d5e:	and    BYTE PTR gs:[rsi+0x61],ah
  404d62:	movsxd esp,DWORD PTR [rbp+0x74]
  404d65:	and    BYTE PTR [rax],ch
  404d67:	fs gs data16 (bad) 
  404d6b:	jne    0x404dd9
  404d6d:	je     0x404d8f
  404d6f:	xor    eax,DWORD PTR [rbx+0x2d]
  404d72:	outs   dx,BYTE PTR ds:[rsi]
  404d73:	and    BYTE PTR [rdi+0x72],ch
  404d76:	and    BYTE PTR [rbp+0x6e],al
  404d79:	sub    DWORD PTR [rdx],ecx
  404d7b:	and    BYTE PTR [rax],ah
  404d7d:	and    BYTE PTR [rax],ah
  404d7f:	push   rbp
  404d80:	outs   dx,BYTE PTR ds:[rsi]
  404d81:	and    BYTE PTR [rax],ah
  404d83:	and    BYTE PTR [rip+0x78616d20],ch        # 0x78a1baa9
  404d89:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  404d8d:	je     0x404df0
  404d8f:	outs   dx,BYTE PTR ds:[rsi]
  404d90:	movsxd esp,DWORD PTR [rbp+0x20]
  404d93:	(bad)  
  404d94:	gs ins BYTE PTR es:[rdi],dx
  404d96:	outs   dx,DWORD PTR ds:[rsi]
  404d97:	ja     0x404db9
  404d99:	jo     0x404e07
  404d9b:	(bad)  
  404d9c:	outs   dx,BYTE PTR ds:[rsi]
  404d9d:	and    BYTE PTR gs:[rsi+0x6f],ah
  404da1:	jb     0x404dc3
  404da3:	(bad)  
  404da4:	and    BYTE PTR [rsi+0x65],ch
  404da7:	ja     0x404dd5
  404da9:	and    BYTE PTR [rbx+0x6f],ah
  404dac:	jo     0x404e1a
  404dae:	(bad)  
  404daf:	outs   dx,BYTE PTR ds:[rsi]
  404db0:	(bad)  
  404db1:	jb     0x404dd3
  404db3:	jo     0x404e24
  404db5:	imul   ebp,DWORD PTR [rsi+0x74],0x65642820
  404dbc:	data16 (bad) 
  404dbe:	jne    0x404e2c
  404dc0:	je     0x404de2
  404dc2:	push   rsi
  404dc3:	outs   dx,BYTE PTR ds:[rsi]
  404dc4:	sub    DWORD PTR [rdx],ecx
  404dc6:	and    BYTE PTR [rax],ah
  404dc8:	and    BYTE PTR [rax],ah
  404dca:	push   rdi
  404dcb:	outs   dx,BYTE PTR ds:[rsi]
  404dcc:	and    BYTE PTR [rax],ah
  404dce:	and    BYTE PTR [rip+0x6e696d20],ch        # 0x6ea9baf4
  404dd4:	and    BYTE PTR [rsi+0x61],ah
  404dd7:	movsxd esp,DWORD PTR [rbp+0x74]
  404dda:	and    BYTE PTR [rdi+0x69],dh
  404ddd:	fs je  0x404e48
  404de0:	and    BYTE PTR [rsi+0x6f],ah
  404de3:	jb     0x404e05
  404de5:	outs   dx,DWORD PTR ds:[rsi]
  404de6:	jne    0x404e5c
  404de8:	jae    0x404e53
  404dea:	fs and BYTE PTR gs:[rax+0x6f],dh
  404def:	imul   ebp,DWORD PTR [rsi+0x74],0x65622820
  404df6:	outs   dx,WORD PTR ds:[rsi]
  404df8:	jb     0x404e5f
  404dfa:	and    BYTE PTR [rdx+0x6f],dh
  404dfd:	jne    0x404e6d
  404dff:	outs   dx,DWORD PTR fs:[rsi]
  404e01:	data16 data16 sub al,0x20
  404e05:	fs gs data16 (bad) 
  404e09:	jne    0x404e77
  404e0b:	je     0x404e2d
  404e0d:	xor    dl,BYTE PTR [rsi+0x6e]
  404e10:	sub    DWORD PTR [rdx],ecx
  404e12:	or     cl,BYTE PTR [rdi+0x75]
  404e15:	je     0x404e87
  404e17:	jne    0x404e8d
  404e19:	and    BYTE PTR [rsi+0x6f],ah
  404e1c:	jb     0x404e8b
  404e1e:	(bad)  
  404e1f:	je     0x404e94
  404e21:	and    BYTE PTR [rax],ch
  404e23:	ins    DWORD PTR es:[rdi],dx
  404e24:	(bad)  
  404e25:	jns    0x404e47
  404e27:	(bad)  
  404e28:	and    BYTE PTR gs:[rbx+0x6f],ah
  404e2c:	ins    DWORD PTR es:[rdi],dx
  404e2d:	(bad)  
  404e2e:	imul   ebp,DWORD PTR [rsi+0x65],0x69203b64
  404e35:	data16 and BYTE PTR [rsi+0x6f],ch
  404e39:	outs   dx,BYTE PTR ds:[rsi]
  404e3a:	gs sub al,0x20
  404e3d:	jo     0x404eb1
  404e3f:	outs   dx,DWORD PTR ds:[rsi]
  404e40:	fs jne 0x404ea6
  404e43:	gs jae 0x404e66
  404e46:	(bad)  
  404e47:	and    BYTE PTR [rbx+0x75],dh
  404e4a:	ins    DWORD PTR es:[rdi],dx
  404e4b:	ins    DWORD PTR es:[rdi],dx
  404e4c:	(bad)  
  404e4d:	jb     0x404ec8
  404e4f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  404e53:	jae    0x404ec9
  404e55:	outs   dx,DWORD PTR fs:[rsi]
  404e57:	jne    0x404ecd
  404e59:	sub    DWORD PTR [rdx],edi
  404e5b:	or     ah,BYTE PTR [rax]
  404e5d:	and    BYTE PTR [rax],ah
  404e5f:	and    BYTE PTR [rsi+0x20],ah
  404e62:	and    BYTE PTR [rax],ah
  404e64:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1b48a
  404e6a:	gs je  0x404e8d
  404e6d:	fs jne 0x404edd
  404e70:	jo     0x404e7c
  404e72:	and    BYTE PTR [rax],ah
  404e74:	and    BYTE PTR [rax],ah
  404e76:	rex.RXB and BYTE PTR [r8],r12b
  404e79:	and    BYTE PTR [rax],ah
  404e7b:	sub    eax,0x6f654720
  404e80:	ins    DWORD PTR es:[rdi],dx
  404e81:	jbe    0x404eec
  404e83:	gs ja  0x404ea6
  404e86:	outs   dx,DWORD PTR ds:[rsi]
  404e87:	jne    0x404efd
  404e89:	jo     0x404f00
  404e8b:	je     0x404ead
  404e8d:	sub    BYTE PTR [rbx+0x65],dh
  404e90:	and    BYTE PTR gs:[rdx+0x65],ah
  404e94:	ins    BYTE PTR es:[rdi],dx
  404e95:	outs   dx,DWORD PTR ds:[rsi]
  404e96:	ja     0x404ec1
  404e98:	or     ah,BYTE PTR [rax]
  404e9a:	and    BYTE PTR [rax],ah
  404e9c:	and    BYTE PTR [rcx+0x20],ch
  404e9f:	and    BYTE PTR [rax],ah
  404ea1:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5c4c7
  404ea7:	je     0x404f12
  404ea9:	movsxd esp,DWORD PTR [rbp+0x73]
  404eac:	and    BYTE PTR [rcx+0x6e],ch
  404eaf:	movsxd ebp,DWORD PTR [rcx+0x64]
  404eb2:	outs   dx,BYTE PTR gs:[rsi]
  404eb4:	je     0x404ed6
  404eb6:	je     0x404f27
  404eb8:	and    BYTE PTR [rbp+0x61],ah
  404ebb:	movsxd ebp,DWORD PTR [rax+0x20]
  404ebe:	data16 (bad) 
  404ec0:	movsxd esp,DWORD PTR [rbp+0x74]
  404ec3:	or     ah,BYTE PTR [rax]
  404ec5:	and    BYTE PTR [rax],ah
  404ec7:	and    BYTE PTR [rbp+0x20],ch
  404eca:	and    BYTE PTR [rax],ah
  404ecc:	and    BYTE PTR [rip+0x74614d20],ch        # 0x74a19bf2
  404ed2:	push   0x74616d65
  404ed7:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  404ede:	jo     0x404f55
  404ee0:	je     0x404f02
  404ee2:	sub    BYTE PTR [rdx],dh
  404ee4:	sub    eax,0x6e612064
  404ee9:	and    BYTE PTR fs:[rbx],dh
  404eec:	sub    eax,0x200a2964
  404ef1:	and    BYTE PTR [rax],ah
  404ef3:	and    BYTE PTR [rdi+0x20],ch
  404ef6:	and    BYTE PTR [rax],ah
  404ef8:	and    BYTE PTR [rip+0x46464f20],ch        # 0x46869e1e
  404efe:	and    BYTE PTR [rsi+0x6f],ah
  404f01:	jb     0x404f70
  404f03:	(bad)  
  404f04:	je     0x404f26
  404f06:	sub    BYTE PTR [rcx+rbp*2+0x6d],ah
  404f0a:	sub    al,0x20
  404f0c:	jo     0x404f7d
  404f0e:	imul   ebp,DWORD PTR [rsi+0x74],0x6e612073
  404f15:	and    BYTE PTR fs:[rsi+0x61],ah
  404f19:	movsxd esp,DWORD PTR [rbp+0x74]
  404f1c:	jae    0x404f59
  404f1e:	and    BYTE PTR [rsi+0x6f],dl
  404f21:	jb     0x404f92
  404f23:	outs   dx,BYTE PTR ds:[rsi]
  404f24:	outs   dx,DWORD PTR ds:[rsi]
  404f25:	imul   esp,DWORD PTR [rax],0x69676572
  404f2b:	outs   dx,DWORD PTR ds:[rsi]
  404f2c:	outs   dx,BYTE PTR ds:[rsi]
  404f2d:	jae    0x404f58
  404f2f:	or     ah,BYTE PTR [rax]
  404f31:	and    BYTE PTR [rax],ah
  404f33:	and    BYTE PTR [rsi+0x20],ch
  404f36:	and    BYTE PTR [rax],ah
  404f38:	and    BYTE PTR [rip+0x726f6e20],ch        # 0x72afbd5e
  404f3e:	ins    DWORD PTR es:[rdi],dx
  404f3f:	(bad)  
  404f40:	ins    BYTE PTR es:[rdi],dx
  404f41:	jae    0x404f63
  404f43:	ja     0x404fae
  404f45:	je     0x404faf
  404f47:	and    BYTE PTR [rdi+0x66],ch
  404f4a:	data16 jae 0x404fb2
  404f4d:	je     0x404fc2
  404f4f:	or     ah,BYTE PTR [rax]
  404f51:	and    BYTE PTR [rax],ah
  404f53:	and    BYTE PTR [rax+0x20],dh
  404f56:	and    BYTE PTR [rax],ah
  404f58:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5c57e
  404f5e:	je     0x404fc5
  404f60:	js     0x404f82
  404f62:	movsxd ebp,DWORD PTR [rdi+0x6f]
  404f65:	jb     0x404fcb
  404f67:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  404f6e:	outs   dx,DWORD PTR ds:[rsi]
  404f6f:	jb     0x404f91
  404f71:	push   rsi
  404f72:	outs   dx,DWORD PTR ds:[rsi]
  404f73:	jb     0x404fe4
  404f75:	outs   dx,BYTE PTR ds:[rsi]
  404f76:	outs   dx,DWORD PTR ds:[rsi]
  404f77:	imul   esp,DWORD PTR [rax],0x74726576
  404f7d:	imul   esp,DWORD PTR [rbx+0x65],0x63282073
  404f84:	outs   dx,DWORD PTR ds:[rsi]
  404f85:	jo     0x404ff3
  404f87:	(bad)  
  404f88:	outs   dx,BYTE PTR ds:[rsi]
  404f89:	(bad)  
  404f8a:	jb     0x404fac
  404f8c:	jo     0x404ffd
  404f8e:	imul   ebp,DWORD PTR [rsi+0x74],0x66692073
  404f95:	and    BYTE PTR [rdi],ah
  404f97:	push   rcx
  404f98:	movsxd esp,DWORD PTR [rdi]
  404f9a:	sub    DWORD PTR [rdx],ecx
  404f9c:	and    BYTE PTR [rax],ah
  404f9e:	and    BYTE PTR [rax],ah
  404fa0:	jae    0x404fc2
  404fa2:	and    BYTE PTR [rax],ah
  404fa4:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5c2ca
  404faa:	ins    DWORD PTR es:[rdi],dx
  404fab:	(bad)  
  404fac:	jb     0x405027
  404fae:	and    BYTE PTR [rax],ch
  404fb0:	jae    0x405026
  404fb2:	fs gs jb 0x405028
  404fb6:	sub    DWORD PTR [rdx],ecx
  404fb8:	or     al,BYTE PTR [rax]
  404fba:	add    BYTE PTR [rax],al
  404fbc:	add    BYTE PTR [rax],al
  404fbe:	add    BYTE PTR [rax],al
  404fc0:	and    BYTE PTR [rax],ah
  404fc2:	and    BYTE PTR [rax],ah
  404fc4:	push   rcx
  404fc5:	data16 and BYTE PTR [rax],ah
  404fc8:	and    BYTE PTR [rip+0x72617020],ch        # 0x72a1bfee
  404fce:	je     0x405039
  404fd0:	je     0x40503b
  404fd2:	outs   dx,DWORD PTR ds:[rsi]
  404fd3:	outs   dx,BYTE PTR ds:[rsi]
  404fd4:	and    BYTE PTR [rax+0x6f],dh
  404fd7:	imul   ebp,DWORD PTR [rsi+0x74],0x206f7420
  404fde:	data16 jne 0x405053
  404fe1:	je     0x40504b
  404fe3:	gs jae 0x40505a
  404fe6:	and    BYTE PTR [rdi+0x75],ch
  404fe9:	je     0x40505e
  404feb:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x65636166
  404ff3:	je     0x404fff
  404ff5:	and    BYTE PTR [rax],ah
  404ff7:	and    BYTE PTR [rax],ah
  404ff9:	push   rcx
  404ffa:	and    BYTE PTR [eax],ah
  404ffd:	and    BYTE PTR [rip+0x6c6e6f20],ch        # 0x6caebf23
  405003:	jns    0x405025
  405005:	(bad)  
  405006:	jne    0x405071
  405008:	ins    BYTE PTR es:[rdi],dx
  405009:	and    BYTE PTR fs:[rdi+0x6f],ah
  40500d:	outs   dx,DWORD PTR ds:[rsi]
  40500e:	and    BYTE PTR fs:[rsi+0x61],ah
  405012:	movsxd esp,DWORD PTR [rbp+0x74]
  405015:	jae    0x405037
  405017:	sub    BYTE PTR [rsi+0x65],ch
  40501a:	gs fs jae 0x40503e
  40501e:	(bad)  
  40501f:	push   rcx
  405020:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  405022:	(bad)  
  405023:	sub    al,0x20
  405025:	(bad)  
  405026:	push   rcx
  405027:	push   rsi
  405028:	outs   dx,BYTE PTR ds:[rsi]
  405029:	(bad)  
  40502a:	sub    al,0x20
  40502c:	outs   dx,DWORD PTR ds:[rsi]
  40502d:	jb     0x40504f
  40502f:	(bad)  
  405030:	push   rax
  405031:	fs rex.R (bad) 
  405034:	sub    DWORD PTR [rdx],ecx
  405036:	and    BYTE PTR [rax],ah
  405038:	and    BYTE PTR [rax],ah
  40503a:	push   rcx
  40503b:	ins    DWORD PTR es:[rdi],dx
  40503c:	and    BYTE PTR [rax],ah
  40503e:	and    BYTE PTR [rip+0x6c6e6f20],ch        # 0x6caebf64
  405044:	jns    0x405066
  405046:	jo     0x4050ba
  405048:	outs   dx,DWORD PTR ds:[rsi]
  405049:	movsxd esp,DWORD PTR [rbp+0x73]
  40504c:	jae    0x40506e
  40504e:	jo     0x4050bf
  405050:	imul   ebp,DWORD PTR [rsi+0x74],0x68742073
  405057:	(bad)  
  405058:	je     0x40507a
  40505a:	ja     0x4050cb
  40505c:	jne    0x4050ca
  40505e:	and    BYTE PTR fs:[rcx+0x6e],ch
  405062:	movsxd esi,DWORD PTR [rdx+0x65]
  405065:	(bad)  
  405066:	jae    0x4050cd
  405068:	and    BYTE PTR [rbp+0x61],ch
  40506b:	js     0x4050cc
  40506d:	outs   dx,DWORD PTR ds:[rsi]
  40506e:	jne    0x4050e4
  405070:	jae    0x4050db
  405072:	fs or  ah,BYTE PTR gs:[rax]
  405076:	and    BYTE PTR [rax],ah
  405078:	and    BYTE PTR [rcx+0x72],dl
  40507b:	and    BYTE PTR [rax],ah
  40507d:	and    BYTE PTR [rip+0x6f727020],ch        # 0x6fb2c0a3
  405083:	movsxd esp,DWORD PTR [rbp+0x73]
  405086:	jae    0x4050a8
  405088:	jb     0x4050eb
  40508a:	outs   dx,BYTE PTR ds:[rsi]
  40508b:	outs   dx,DWORD PTR fs:[rsi]
  40508d:	ins    DWORD PTR es:[rdi],dx
  40508e:	and    BYTE PTR [rdi+0x75],ch
  405091:	je     0x405106
  405093:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x6e696f70
  40509b:	je     0x405110
  40509d:	and    BYTE PTR [rcx+0x6e],ch
  4050a0:	jae    0x405116
  4050a2:	gs (bad) 
  4050a4:	and    BYTE PTR fs:[rdi+0x66],ch
  4050a8:	and    BYTE PTR [rsi+0x75],ah
  4050ab:	jb     0x405121
  4050ad:	push   0x20747365
  4050b2:	outs   dx,DWORD PTR ds:[rsi]
  4050b3:	outs   dx,BYTE PTR ds:[rsi]
  4050b4:	gs jae 0x4050c1
  4050b7:	and    BYTE PTR [rax],ah
  4050b9:	and    BYTE PTR [rax],ah
  4050bb:	push   rcx
  4050bc:	jae    0x4050de
  4050be:	and    BYTE PTR [rax],ah
  4050c0:	sub    eax,0x61657320
  4050c5:	jb     0x40512a
  4050c7:	push   0x6c6c6120
  4050cc:	and    BYTE PTR [rax+0x6f],dh
  4050cf:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662073
  4050d6:	jb     0x4050f8
  4050d8:	je     0x405142
  4050da:	and    BYTE PTR gs:[rcx+0x6e],ch
  4050de:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6973206c
  4050e6:	ins    DWORD PTR es:[rdi],dx
  4050e7:	jo     0x405155
  4050e9:	gs js  0x4050f6
  4050ec:	and    BYTE PTR [rax],ah
  4050ee:	and    BYTE PTR [rax],ah
  4050f0:	push   rcx
  4050f1:	jne    0x405113
  4050f3:	and    BYTE PTR [rax],ah
  4050f5:	sub    eax,0x726f6620
  4050fa:	and    BYTE PTR [rdi],ah
  4050fc:	fs (bad) 
  4050fe:	and    BYTE PTR [rdi+0x72],ch
  405101:	and    BYTE PTR [rdi],ah
  405103:	jbe    0x40512c
  405105:	sub    al,0x20
  405107:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40510a:	jo     0x405181
  40510c:	je     0x405173
  40510e:	and    BYTE PTR [rbp+0x70],dh
  405111:	jo     0x405178
  405113:	jb     0x405135
  405115:	push   0x206c6c75
  40511a:	ja     0x405185
  40511c:	je     0x405186
  40511e:	outs   dx,DWORD PTR ds:[rsi]
  40511f:	jne    0x405195
  405121:	and    BYTE PTR [rax+0x6f],dh
  405124:	imul   ebp,DWORD PTR [rsi+0x74],0x2d746120
  40512b:	imul   ebp,DWORD PTR [rsi+0x66],0x74696e69
  405132:	jns    0x40513e
  405134:	and    BYTE PTR [rax],ah
  405136:	and    BYTE PTR [rax],ah
  405138:	and    BYTE PTR [rax],ah
  40513a:	and    BYTE PTR [rax],ah
  40513c:	and    BYTE PTR [rax],ah
  40513e:	and    BYTE PTR [rax],ah
  405140:	and    BYTE PTR [rax],ah
  405142:	jb     0x4051a9
  405144:	je     0x4051bb
  405146:	jb     0x4051b6
  405148:	jae    0x40516a
  40514a:	data16 jne 0x4051bf
  40514d:	je     0x4051b7
  40514f:	gs jae 0x4051c6
  405152:	sub    eax,0x65746973
  405157:	and    BYTE PTR [rbp+riz*2+0x6c],al
  40515b:	(bad)  
  40515c:	jne    0x4051cc
  40515e:	(bad)  
  40515f:	jns    0x405181
  405161:	je     0x4051d5
  405163:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  40516a:	je     0x4051d5
  40516c:	outs   dx,DWORD PTR ds:[rsi]
  40516d:	outs   dx,BYTE PTR ds:[rsi]
  40516e:	or     ah,BYTE PTR [rax]
  405170:	and    BYTE PTR [rax],ah
  405172:	and    BYTE PTR [rcx+0x76],dl
  405175:	and    BYTE PTR [rax],ah
  405177:	and    BYTE PTR [rip+0x73657420],ch        # 0x73a5c59d
  40517d:	je     0x40519f
  40517f:	jbe    0x4051e6
  405181:	jb     0x4051f7
  405183:	gs js  0x4051a6
  405186:	outs   dx,BYTE PTR ds:[rsi]
  405187:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  40518f:	and    BYTE PTR [rsi+0x6f],ah
  405192:	jb     0x4051b4
  405194:	movsxd ebp,DWORD PTR [rdi+0x6e]
  405197:	jbe    0x4051fe
  405199:	js     0x405204
  40519b:	je     0x405216
  40519d:	or     ah,BYTE PTR [rax]
  40519f:	and    BYTE PTR [rax],ah
  4051a1:	and    BYTE PTR [rcx+0x78],dl
  4051a4:	and    BYTE PTR [rax],ah
  4051a6:	and    BYTE PTR [rip+0x61786520],ch        # 0x61b8b6cc
  4051ac:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  4051b0:	jb     0x405217
  4051b2:	sub    eax,0x6772656d
  4051b7:	gs jae 0x4051da
  4051ba:	sub    BYTE PTR [rbx+0x6b],dh
  4051bd:	imul   esi,DWORD PTR [rax+0x73],0x706f6320
  4051c4:	ins    BYTE PTR es:[rdi],dx
  4051c5:	(bad)  
  4051c6:	outs   dx,BYTE PTR ds:[rsi]
  4051c7:	(bad)  
  4051c8:	jb     0x4051ea
  4051ca:	(bad)  
  4051cb:	outs   dx,BYTE PTR ds:[rsi]
  4051cc:	and    BYTE PTR fs:[rcx+0x6e],ah
  4051d0:	ins    BYTE PTR es:[edi],dx
  4051d2:	gs sub eax,0x6c706f63
  4051d8:	(bad)  
  4051d9:	outs   dx,BYTE PTR ds:[rsi]
  4051da:	(bad)  
  4051db:	jb     0x4051fd
  4051dd:	data16 (bad) 
  4051df:	movsxd esp,DWORD PTR [rbp+0x74]
  4051e2:	jae    0x40520d
  4051e4:	or     ah,BYTE PTR [rax]
  4051e6:	and    BYTE PTR [rax],ah
  4051e8:	and    BYTE PTR [rcx+0x7a],dl
  4051eb:	and    BYTE PTR [rax],ah
  4051ed:	and    BYTE PTR [rip+0x64646120],ch        # 0x64a4b313
  4051f3:	and    BYTE PTR [rax+0x6f],dh
  4051f6:	imul   ebp,DWORD PTR [rsi+0x74],0x2d74612d
  4051fd:	imul   ebp,DWORD PTR [rsi+0x66],0x74696e69
  405204:	jns    0x405226
  405206:	je     0x405277
  405208:	and    BYTE PTR [rbp+riz*2+0x6c],al
  40520c:	(bad)  
  40520d:	jne    0x40527d
  40520f:	(bad)  
  405210:	jns    0x405232
  405212:	je     0x405286
  405214:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  40521b:	je     0x405286
  40521d:	outs   dx,DWORD PTR ds:[rsi]
  40521e:	outs   dx,BYTE PTR ds:[rsi]
  40521f:	or     ah,BYTE PTR [rax]
  405221:	and    BYTE PTR [rax],ah
  405223:	and    BYTE PTR [rcx+0x47],dl
  405226:	outs   dx,BYTE PTR ds:[rsi]
  405227:	and    BYTE PTR [rax],ah
  405229:	sub    eax,0x6f6f6720
  40522e:	and    BYTE PTR fs:[rsi+0x61],ah
  405232:	movsxd esp,DWORD PTR [rbp+0x74]
  405235:	and    BYTE PTR [rcx+0x66],ch
  405238:	and    BYTE PTR [rsi+0x69],dh
  40523b:	jae    0x4052a6
  40523d:	(bad)  
  40523e:	ins    BYTE PTR es:[rdi],dx
  40523f:	and    BYTE PTR gs:[rsi+0x72],ah
  405243:	outs   dx,DWORD PTR ds:[rsi]
  405244:	ins    DWORD PTR es:[rdi],dx
  405245:	and    BYTE PTR [rax+0x6f],dh
  405248:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  40524f:	sub    eax,0x6f66206e
  405254:	jb     0x405276
  405256:	outs   dx,BYTE PTR ds:[rsi]
  405257:	outs   dx,DWORD PTR ds:[rsi]
  405258:	je     0x40527a
  40525a:	jbe    0x4052c5
  40525c:	jae    0x4052c7
  40525e:	(bad)  
  40525f:	ins    BYTE PTR es:[rdi],dx
  405260:	or     ah,BYTE PTR gs:[rax]
  405263:	and    BYTE PTR [rax],ah
  405265:	and    BYTE PTR [rcx+0x56],dl
  405268:	outs   dx,BYTE PTR ds:[rsi]
  405269:	and    BYTE PTR [rax],ah
  40526b:	sub    eax,0x6f6f6720
  405270:	and    BYTE PTR fs:[rsi+0x61],ah
  405274:	movsxd esp,DWORD PTR [rbp+0x74]
  405277:	and    BYTE PTR [rcx+0x66],ch
  40527a:	and    BYTE PTR [rcx+0x74],ch
  40527d:	and    BYTE PTR [rcx+0x6e],ch
  405280:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  405284:	gs jae 0x4052a7
  405287:	jo     0x4052f8
  405289:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  405290:	sub    eax,0x6669206e
  405295:	and    BYTE PTR [rsi+0x6f],ch
  405298:	je     0x4052a4
  40529a:	and    BYTE PTR [rax],ah
  40529c:	and    BYTE PTR [rax],ah
  40529e:	push   rcx
  40529f:	xor    BYTE PTR [rax],ah
  4052a1:	and    BYTE PTR [rax],ah
  4052a3:	sub    eax,0x72757420
  4052a8:	outs   dx,BYTE PTR ds:[rsi]
  4052a9:	and    BYTE PTR [rdi+0x66],ch
  4052ac:	data16 and BYTE PTR [rbp+riz*2+0x66],ah
  4052b1:	(bad)  
  4052b2:	jne    0x405320
  4052b4:	je     0x4052d6
  4052b6:	jo     0x40532a
  4052b8:	gs ins DWORD PTR es:[rdi],dx
  4052ba:	gs jb  0x405324
  4052bd:	and    BYTE PTR gs:[rdi+0x69],dh
  4052c1:	je     0x40532b
  4052c3:	and    BYTE PTR [rdi],ah
  4052c5:	rex.XB sub eax,0x272f2730
  4052cb:	push   rcx
  4052cc:	js     0x4052f5
  4052ce:	or     ah,BYTE PTR [rax]
  4052d0:	and    BYTE PTR [rax],ah
  4052d2:	and    BYTE PTR [rcx+0x31],dl
  4052d5:	or     DWORD PTR [rax],esp
  4052d7:	and    BYTE PTR [rax],ah
  4052d9:	sub    eax,0x726f7320
  4052de:	je     0x405300
  4052e0:	ins    DWORD PTR es:[rdi],dx
  4052e1:	gs jb  0x40534b
  4052e4:	gs jae 0x405307
  4052e7:	(bad)  
  4052e8:	jns    0x40530a
  4052ea:	je     0x405365
  4052ec:	jo     0x405353
  4052ee:	and    BYTE PTR [rcx+0x6e],ch
  4052f1:	jae    0x405367
  4052f3:	gs (bad) 
  4052f5:	and    BYTE PTR fs:[rdi+0x66],ch
  4052f9:	and    BYTE PTR [rcx+0x6e],ah
  4052fc:	ins    BYTE PTR es:[edi],dx
  4052fe:	or     ah,BYTE PTR gs:[rax]
  405301:	and    BYTE PTR [rax],ah
  405303:	and    BYTE PTR [rcx+0x32],dl
  405306:	and    BYTE PTR [rax],ah
  405308:	and    BYTE PTR [rip+0x72656d20],ch        # 0x72a5c02e
  40530e:	and    BYTE PTR gs:[ecx+0x6c],ah
  405313:	ins    BYTE PTR es:[rdi],dx
  405314:	and    BYTE PTR [rsi+0x6f],ch
  405317:	outs   dx,BYTE PTR ds:[rsi]
  405318:	sub    eax,0x766e6f63
  40531d:	gs js  0x405340
  405320:	(bad)  
  405321:	je     0x405343
  405323:	outs   dx,DWORD PTR ds:[rsi]
  405324:	outs   dx,BYTE PTR ds:[rsi]
  405325:	movsxd esp,DWORD PTR [rbp+0x20]
  405328:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  40532f:	and    BYTE PTR [rdi+0x66],ch
  405332:	and    BYTE PTR [rcx+0x6e],ch
  405335:	fs gs jo 0x40539e
  405339:	outs   dx,BYTE PTR ds:[rsi]
  40533a:	fs outs dx,BYTE PTR gs:[rsi]
  40533d:	je     0x40535f
  40533f:	jae    0x4053a6
  405341:	je     0x4053b6
  405343:	or     ah,BYTE PTR [rax]
  405345:	and    BYTE PTR [rax],ah
  405347:	and    BYTE PTR [rcx+0x33],dl
  40534a:	and    BYTE PTR [rax],ah
  40534c:	and    BYTE PTR [rip+0x206f6420],ch        # 0x20afb772
  405352:	outs   dx,BYTE PTR ds:[rsi]
  405353:	outs   dx,DWORD PTR ds:[rsi]
  405354:	je     0x405376
  405356:	ins    DWORD PTR es:[rdi],dx
  405357:	gs jb  0x4053c1
  40535a:	and    BYTE PTR gs:[rdx+0x65],dh
  40535e:	fs jne 0x4053cf
  405361:	fs (bad) 
  405363:	outs   dx,BYTE PTR ds:[rsi]
  405364:	je     0x405386
  405366:	jbe    0x4053cd
  405368:	jb     0x4053de
  40536a:	imul   esp,DWORD PTR [rbx+0x65],0x20200a73
  405371:	and    BYTE PTR [rax],ah
  405373:	push   rcx
  405374:	xor    al,0x20
  405376:	and    BYTE PTR [rax],ah
  405378:	sub    eax,0x6f766120
  40537d:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x3e2d646c
  405385:	outs   dx,BYTE PTR ds:[rsi]
  405386:	gs ja  0x4053a9
  405389:	ins    DWORD PTR es:[rdi],dx
  40538a:	gs jb  0x4053f4
  40538d:	gs jae 0x40539a
  405390:	and    BYTE PTR [rax],ah
  405392:	and    BYTE PTR [rax],ah
  405394:	push   rcx
  405395:	xor    eax,0x2d202020
  40539a:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  40539e:	outs   dx,BYTE PTR ds:[rsi]
  40539f:	outs   dx,DWORD PTR ds:[rsi]
  4053a0:	je     0x4053c2
  4053a2:	movsxd ebp,DWORD PTR [rdi+0x72]
  4053a5:	jb     0x40540c
  4053a7:	movsxd esi,DWORD PTR [rax+riz*1+0x6f]
  4053ab:	jne    0x405421
  4053ad:	gs jb  0x4053d0
  4053b0:	jo     0x40541e
  4053b2:	(bad)  
  4053b3:	outs   dx,BYTE PTR ds:[rsi]
  4053b4:	gs jae 0x4053d7
  4053b7:	(bad)  
  4053b8:	je     0x4053da
  4053ba:	outs   dx,BYTE PTR gs:[rsi]
  4053bc:	and    BYTE PTR fs:[rdi+0x66],ch
  4053c0:	and    BYTE PTR [rcx+0x68],dh
  4053c3:	jne    0x405431
  4053c5:	ins    BYTE PTR es:[rdi],dx
  4053c6:	or     ah,BYTE PTR [rax]
  4053c8:	and    BYTE PTR [rax],ah
  4053ca:	and    BYTE PTR [rcx+0x36],dl
  4053cd:	and    BYTE PTR [rax],ah
  4053cf:	and    BYTE PTR [rip+0x206f6420],ch        # 0x20afb7f5
  4053d5:	outs   dx,BYTE PTR ds:[rsi]
  4053d6:	outs   dx,DWORD PTR ds:[rsi]
  4053d7:	je     0x4053f9
  4053d9:	jo     0x40544d
  4053db:	gs sub eax,0x6772656d
  4053e1:	and    BYTE PTR gs:[rbx+0x6f],ah
  4053e5:	outs   dx,BYTE PTR ds:[rsi]
  4053e6:	movsxd esp,DWORD PTR [rcx+0x76]
  4053e9:	and    BYTE PTR gs:[rdi+0x72],ch
  4053ed:	and    BYTE PTR [rbx+0x6f],ah
  4053f0:	jo     0x40545e
  4053f2:	(bad)  
  4053f3:	outs   dx,BYTE PTR ds:[rsi]
  4053f4:	(bad)  
  4053f5:	jb     0x405417
  4053f7:	data16 (bad) 
  4053f9:	movsxd esp,DWORD PTR [rbp+0x74]
  4053fc:	jae    0x405408
  4053fe:	and    BYTE PTR [rax],ah
  405400:	and    BYTE PTR [rax],ah
  405402:	push   rcx
  405403:	(bad)  
  405404:	and    BYTE PTR [rax],ah
  405406:	and    BYTE PTR [rip+0x70656420],ch        # 0x70a5b82c
  40540c:	je     0x405476
  40540e:	sub    eax,0x73726966
  405413:	je     0x405435
  405415:	jo     0x405489
  405417:	outs   dx,DWORD PTR ds:[rsi]
  405418:	movsxd esp,DWORD PTR [rbp+0x73]
  40541b:	jae    0x405486
  40541d:	outs   dx,BYTE PTR ds:[rsi]
  40541e:	and    BYTE PTR [ecx+0x6e],ch
  405422:	jae    0x405498
  405424:	gs (bad) 
  405426:	and    BYTE PTR fs:[rdi+0x66],ch
  40542a:	and    BYTE PTR [rdx+0x72],ah
  40542d:	gs (bad) 
  40542f:	fs je  0x40549a
  405432:	sub    eax,0x73726966
  405437:	je     0x405443
  405439:	and    BYTE PTR [rax],ah
  40543b:	and    BYTE PTR [rax],ah
  40543d:	push   rcx
  40543e:	cmp    BYTE PTR [rax],ah
  405440:	and    BYTE PTR [rax],ah
  405442:	sub    eax,0x206f6420
  405447:	outs   dx,BYTE PTR ds:[rsi]
  405448:	outs   dx,DWORD PTR ds:[rsi]
  405449:	je     0x40546b
  40544b:	jo     0x4054bf
  40544d:	outs   dx,DWORD PTR ds:[rsi]
  40544e:	movsxd esp,DWORD PTR [rbp+0x73]
  405451:	jae    0x405473
  405453:	outs   dx,BYTE PTR ds:[rsi]
  405454:	gs (bad) 
  405456:	jb     0x405485
  405458:	imul   ebp,DWORD PTR [rsi+0x73],0x20656469
  40545f:	jo     0x4054d0
  405461:	imul   ebp,DWORD PTR [rsi+0x74],0x20200a73
  405468:	and    BYTE PTR [rax],ah
  40546a:	push   rcx
  40546b:	cmp    DWORD PTR [rax],esp
  40546d:	and    BYTE PTR [rax],ah
  40546f:	sub    eax,0x6f727020
  405474:	movsxd esp,DWORD PTR [rbp+0x73]
  405477:	jae    0x405499
  405479:	data16 jne 0x4054ee
  40547c:	je     0x4054e6
  40547e:	gs jae 0x4054f5
  405481:	and    BYTE PTR [rdi+0x66],ch
  405484:	and    BYTE PTR [rsi+0x75],ah
  405487:	jb     0x4054fd
  405489:	push   0x20747365
  40548e:	jo     0x4054ff
  405490:	imul   ebp,DWORD PTR [rsi+0x74],0x20200a73
  405497:	and    BYTE PTR [rax],ah
  405499:	push   rcx
  40549a:	xor    DWORD PTR [rax],esi
  40549c:	and    BYTE PTR [rax],ah
  40549e:	sub    eax,0x206f6e20
  4054a3:	jae    0x405515
  4054a5:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
  4054a9:	ins    BYTE PTR es:[rdi],dx
  4054aa:	and    BYTE PTR [rax+0x72],dh
  4054ad:	outs   dx,DWORD PTR ds:[rsi]
  4054ae:	movsxd esp,DWORD PTR [rbp+0x73]
  4054b1:	jae    0x40551c
  4054b3:	outs   dx,BYTE PTR ds:[rsi]
  4054b4:	and    BYTE PTR [esi+0x6f],ah
  4054b8:	jb     0x4054da
  4054ba:	outs   dx,BYTE PTR ds:[rsi]
  4054bb:	(bad)  
  4054bc:	jb     0x405530
  4054be:	outs   dx,DWORD PTR ds:[rsi]
  4054bf:	ja     0x4054e1
  4054c1:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4054c9:	je     0x405534
  4054cb:	outs   dx,DWORD PTR ds:[rsi]
  4054cc:	outs   dx,BYTE PTR ds:[rsi]
  4054cd:	jae    0x4054d9
  4054cf:	and    BYTE PTR [rax],ah
  4054d1:	and    BYTE PTR [rax],ah
  4054d3:	push   rcx
  4054d4:	xor    DWORD PTR [rcx],esi
  4054d6:	and    BYTE PTR [rax],ah
  4054d8:	sub    eax,0x706f6320
  4054dd:	jns    0x4054ff
  4054df:	outs   dx,BYTE PTR ds:[rsi]
  4054e0:	outs   dx,DWORD PTR ds:[rsi]
  4054e1:	jb     0x405550
  4054e3:	(bad)  
  4054e4:	ins    BYTE PTR es:[rdi],dx
  4054e5:	jae    0x405507
  4054e7:	(bad)  
  4054e8:	outs   dx,BYTE PTR ds:[rsi]
  4054e9:	and    BYTE PTR fs:[rdx+0x65],dh
  4054ed:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4054f0:	jo     0x405567
  4054f2:	je     0x405559
  4054f4:	and    BYTE PTR [rbx+0x65],ah
  4054f7:	outs   dx,BYTE PTR ds:[rsi]
  4054f8:	je     0x40556c
  4054fa:	jne    0x405569
  4054fc:	jae    0x40551e
  4054fe:	outs   dx,WORD PTR ds:[rsi]
  405500:	jb     0x405522
  405502:	je     0x405576
  405504:	imul   esp,DWORD PTR [rbx+0x6f],0x6e616c70
  40550b:	(bad)  
  40550c:	jb     0x40552e
  40550e:	data16 (bad) 
  405510:	movsxd esp,DWORD PTR [rbp+0x74]
  405513:	jae    0x40551f
  405515:	or     al,BYTE PTR [rax]
	...
  40553f:	add    BYTE PTR [rdx],cl
  405541:	jno    0x4055ab
  405543:	jne    0x4055b1
  405545:	ins    BYTE PTR es:[rdi],dx
  405546:	sub    eax,0x6d6f6320
  40554b:	jo     0x4055c2
  40554d:	je     0x4055b4
  40554f:	and    BYTE PTR [rbx+0x6f],ah
  405552:	outs   dx,BYTE PTR ds:[rsi]
  405553:	jbe    0x4055ba
  405555:	js     0x405577
  405557:	push   0x736c6c75
  40555c:	and    BYTE PTR [rcx+0x6e],ah
  40555f:	and    BYTE PTR fs:[rdx+0x65],dh
  405563:	ins    BYTE PTR es:[rdi],dx
  405564:	(bad)  
  405565:	je     0x4055cc
  405567:	and    BYTE PTR fs:[rbx+0x74],dh
  40556b:	jb     0x4055e2
  40556d:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  405571:	gs jae 0x4055a2
  405574:	or     ah,BYTE PTR [rax]
  405576:	and    BYTE PTR [rax],ah
  405578:	and    BYTE PTR [rax+0x74],ch
  40557b:	je     0x4055ed
  40557d:	cmp    ch,BYTE PTR [rdi]
  40557f:	(bad)  
  405580:	ja     0x4055f9
  405582:	ja     0x4055b2
  405584:	jno    0x4055ee
  405586:	jne    0x4055f4
  405588:	ins    BYTE PTR es:[rdi],dx
  405589:	outs   dx,DWORD PTR cs:[rsi]
  40558b:	jb     0x4055f4
  40558d:	and    BYTE PTR [rax],ah
  40558f:	and    eax,0x690a0a73
  405594:	outs   dx,BYTE PTR ds:[rsi]
  405595:	jo     0x40560c
  405597:	je     0x4055b9
  405599:	sub    BYTE PTR [rbx+0x74],dh
  40559c:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x20200a3a
  4055a4:	and    BYTE PTR [rax],ah
  4055a6:	imul   si,WORD PTR [rdx+0x73],0x2074
  4055ac:	ins    BYTE PTR es:[rdi],dx
  4055ad:	imul   ebp,DWORD PTR [rsi+0x65],0x64203a73
  4055b4:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  4055bb:	outs   dx,BYTE PTR ds:[rsi]
  4055bc:	and    BYTE PTR [rcx+0x6e],ah
  4055bf:	and    BYTE PTR fs:[rsi+0x75],ch
  4055c3:	ins    DWORD PTR es:[rdi],dx
  4055c4:	(bad)  
  4055c5:	gs jb  0x4055e8
  4055c8:	outs   dx,DWORD PTR ds:[rsi]
  4055c9:	data16 and BYTE PTR [rax+0x6f],dh
  4055cd:	imul   ebp,DWORD PTR [rsi+0x74],0x6f282073
  4055d4:	jb     0x4055f6
  4055d6:	jbe    0x405641
  4055d8:	movsxd esp,DWORD PTR [rbp+0x2d]
  4055db:	jbe    0x405642
  4055dd:	jb     0x405652
  4055df:	(bad)  
  4055e0:	sub    DWORD PTR [rsi],ebp
  4055e2:	or     ah,BYTE PTR [rax]
  4055e4:	and    BYTE PTR [rax],ah
  4055e6:	and    BYTE PTR [rdi+0x74],ch
  4055e9:	push   0x6c207265
  4055ee:	imul   ebp,DWORD PTR [rsi+0x65],0x70203a73
  4055f5:	outs   dx,DWORD PTR ds:[rsi]
  4055f6:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6f6320
  4055fd:	jb     0x405663
  4055ff:	imul   ebp,DWORD PTR [rsi+0x61],0x2c736574
  405606:	and    BYTE PTR [rdx+0x65],ah
  405609:	jae    0x40567f
  40560b:	and    BYTE PTR [rcx+0x66],ch
  40560e:	and    BYTE PTR [rdi+0x6e],ch
  405611:	and    BYTE PTR gs:[rax+0x6f],dh
  405615:	imul   ebp,DWORD PTR [rsi+0x74],0x72657020
  40561c:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  405620:	or     ah,BYTE PTR gs:[rax]
  405623:	and    BYTE PTR [rax],ah
  405625:	and    BYTE PTR [rbx+0x6f],ah
  405628:	ins    DWORD PTR es:[rdi],dx
  405629:	ins    DWORD PTR es:[rdi],dx
  40562a:	outs   dx,BYTE PTR gs:[rsi]
  40562c:	je     0x4056a1
  40562e:	cmp    ah,BYTE PTR [rax]
  405630:	and    BYTE PTR [rax],ah
  405632:	and    BYTE PTR [rbx+0x74],dh
  405635:	(bad)  
  405636:	jb     0x4056ac
  405638:	and    BYTE PTR [rdi+0x69],dh
  40563b:	je     0x4056a5
  40563d:	and    BYTE PTR [rcx+0x20],ah
  405640:	outs   dx,BYTE PTR ds:[rsi]
  405641:	outs   dx,DWORD PTR ds:[rsi]
  405642:	outs   dx,BYTE PTR ds:[rsi]
  405643:	sub    eax,0x656d756e
  405648:	jb     0x4056b3
  40564a:	movsxd esp,DWORD PTR [rax]
  40564c:	movsxd ebp,DWORD PTR [rax+0x61]
  40564f:	jb     0x4056b2
  405651:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  405655:	or     ah,BYTE PTR [rax]
  405657:	and    BYTE PTR [rax],ah
  405659:	and    BYTE PTR [rax+0x61],ch
  40565c:	ins    BYTE PTR es:[rdi],dx
  40565d:	data16 jae 0x4056d0
  405660:	(bad)  
  405661:	movsxd esp,DWORD PTR [rbp+0x73]
  405664:	cmp    ah,BYTE PTR [rax]
  405666:	and    BYTE PTR [rbp+0x73],dh
  405669:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ah
  40566e:	and    BYTE PTR [rax+0x6c],dh
  405671:	jne    0x4056e6
  405673:	and    BYTE PTR [rdi+0x6e],ch
  405676:	and    BYTE PTR gs:[rcx+0x6e],ah
  40567a:	and    BYTE PTR fs:[rax+0x75],dh
  40567e:	je     0x4056a0
  405680:	outs   dx,DWORD PTR ds:[rsi]
  405681:	data16 data16 jae 0x4056ea
  405685:	je     0x4056a7
  405687:	(bad)  
  405688:	data16 je 0x4056f0
  40568b:	jb     0x4056ad
  40568d:	movsxd ebp,DWORD PTR [rdi+0x65]
  405690:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
  405697:	je     0x40570c
  405699:	or     ah,BYTE PTR cs:[rax]
  40569c:	and    BYTE PTR [rax],ah
  40569e:	and    BYTE PTR [rax],ah
  4056a0:	and    BYTE PTR [rax],ah
  4056a2:	and    BYTE PTR [rax],ah
  4056a4:	and    BYTE PTR [rax],ah
  4056a6:	and    BYTE PTR [rax],ah
  4056a8:	and    BYTE PTR [rax],ah
  4056aa:	and    BYTE PTR [rax],ah
  4056ac:	rex.WRB (bad) 
  4056ae:	jns    0x4056d0
  4056b0:	(bad)  
  4056b1:	and    BYTE PTR gs:[rax+0x72],dh
  4056b5:	movsxd esp,DWORD PTR gs:[rbp+0x65]
  4056b9:	fs gs and BYTE PTR fs:[rdx+0x79],ah
  4056bf:	and    BYTE PTR [rcx+0x20],ah
  4056c2:	jae    0x40572d
  4056c4:	outs   dx,BYTE PTR ds:[rsi]
  4056c5:	ins    BYTE PTR es:[edi],dx
  4056c7:	and    BYTE PTR gs:[rcx+0x6e],ch
  4056cb:	je     0x405732
  4056cd:	jb     0x405738
  4056cf:	outs   dx,DWORD PTR ds:[rsi]
  4056d0:	jb     0x4056f2
  4056d2:	jo     0x405743
  4056d4:	imul   ebp,DWORD PTR [rsi+0x74],0x48272820
  4056db:	(bad)  
  4056dc:	sub    DWORD PTR [rsi],ebp
  4056de:	or     cl,BYTE PTR [rdx]
  4056e0:	outs   dx,DWORD PTR ds:[rsi]
  4056e1:	jo     0x405757
  4056e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  4056ea:	and    BYTE PTR [rax],ah
  4056ec:	and    BYTE PTR [rax+riz*1+0x20],ah
  4056f0:	and    BYTE PTR [rax],ah
  4056f2:	sub    eax,0x6c654420
  4056f7:	(bad)  
  4056f8:	jne    0x405768
  4056fa:	(bad)  
  4056fb:	jns    0x40571d
  4056fd:	je     0x405771
  4056ff:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  405706:	je     0x405771
  405708:	outs   dx,DWORD PTR ds:[rsi]
  405709:	outs   dx,BYTE PTR ds:[rsi]
  40570a:	and    BYTE PTR [rdx+0x79],ah
  40570d:	and    BYTE PTR [rcx+rbp*2+0x66],ch
  405711:	je     0x40577c
  405713:	outs   dx,BYTE PTR ds:[rsi]
  405714:	and    BYTE PTR [eax+0x6f],dh
  405718:	imul   ebp,DWORD PTR [rsi+0x74],0x6f742073
  40571f:	and    BYTE PTR [rcx+0x20],ah
  405722:	jo     0x405785
  405724:	jb     0x405787
  405726:	(bad)  
  405727:	outs   dx,DWORD PTR ds:[rsi]
  405728:	ins    BYTE PTR es:[rdi],dx
  405729:	outs   dx,DWORD PTR ds:[rsi]
  40572a:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x64202020
  405732:	and    BYTE PTR [rcx+0x75],dl
  405735:	and    BYTE PTR [rip+0x72756620],ch        # 0x72b5bd5b
  40573b:	je     0x4057a5
  40573d:	gs jae 0x4057b4
  405740:	sub    eax,0x65746973
  405745:	and    BYTE PTR [rbp+riz*2+0x6c],al
  405749:	(bad)  
  40574a:	jne    0x4057ba
  40574c:	(bad)  
  40574d:	jns    0x40576f
  40574f:	je     0x4057c3
  405751:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  405758:	je     0x4057c3
  40575a:	outs   dx,DWORD PTR ds:[rsi]
  40575b:	outs   dx,BYTE PTR ds:[rsi]
  40575c:	and    BYTE PTR [rax],ch
  40575e:	jne    0x4057d0
  405760:	jo     0x4057c7
  405762:	jb     0x405784
  405764:	movsxd ebp,DWORD PTR [rdi+0x6e]
  405767:	jbe    0x4057ce
  405769:	js     0x40578b
  40576b:	push   0x296c6c75
  405770:	or     ah,BYTE PTR [rax]
  405772:	and    BYTE PTR [rax],ah
  405774:	and    BYTE PTR [rsi+0x20],dh
  405777:	and    BYTE PTR [rax],ah
  405779:	and    BYTE PTR [rip+0x726f5620],ch        # 0x72afad9f
  40577f:	outs   dx,DWORD PTR ds:[rsi]
  405780:	outs   dx,BYTE PTR ds:[rsi]
  405781:	outs   dx,DWORD PTR ds:[rsi]
  405782:	imul   esp,DWORD PTR [rax],0x67616964
  405788:	jb     0x4057eb
  40578a:	ins    DWORD PTR es:[rdi],dx
  40578b:	and    BYTE PTR [rax],ch
  40578d:	fs jne 0x4057f1
  405790:	ins    BYTE PTR es:[rdi],dx
  405791:	and    BYTE PTR [rdi+0x66],ch
  405794:	and    BYTE PTR [rax+rbp*2+0x65],dh
  405798:	and    BYTE PTR [rbp+riz*2+0x6c],al
  40579c:	(bad)  
  40579d:	jne    0x40580d
  40579f:	(bad)  
  4057a0:	jns    0x4057c2
  4057a2:	je     0x405816
  4057a4:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  4057ab:	je     0x405816
  4057ad:	outs   dx,DWORD PTR ds:[rsi]
  4057ae:	outs   dx,BYTE PTR ds:[rsi]
  4057af:	sub    DWORD PTR [rdx],ecx
  4057b1:	and    BYTE PTR [rax],ah
  4057b3:	and    BYTE PTR [rax],ah
  4057b5:	jbe    0x4057d7
  4057b7:	push   rcx
  4057b8:	jne    0x4057da
  4057ba:	sub    eax,0x72756620
  4057bf:	je     0x405829
  4057c1:	gs jae 0x405838
  4057c4:	sub    eax,0x65746973
  4057c9:	and    BYTE PTR [rsi+0x6f],dl
  4057cc:	jb     0x40583d
  4057ce:	outs   dx,BYTE PTR ds:[rsi]
  4057cf:	outs   dx,DWORD PTR ds:[rsi]
  4057d0:	imul   esp,DWORD PTR [rax],0x67616964
  4057d6:	jb     0x405839
  4057d8:	ins    DWORD PTR es:[rdi],dx
  4057d9:	or     ah,BYTE PTR [rax]
  4057db:	and    BYTE PTR [rax],ah
  4057dd:	and    BYTE PTR [rax+0x6e],cl
  4057e0:	sub    al,0x6e
  4057e2:	sub    al,0x2e
  4057e4:	cs and BYTE PTR cs:[rip+0x6c616820],ch        # 0x6ca1c00c
  4057ec:	data16 jae 0x40585f
  4057ef:	(bad)  
  4057f0:	movsxd esp,DWORD PTR [rbp+0x20]
  4057f3:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  4057fa:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4057fe:	outs   dx,BYTE PTR ds:[rsi]
  4057ff:	and    BYTE PTR [rcx+0x62],ah
  405802:	outs   dx,DWORD PTR ds:[rsi]
  405803:	jne    0x405879
  405805:	and    BYTE PTR [rax+0x6f],dh
  405808:	imul   ebp,DWORD PTR [rsi+0x74],0x2c6e5b20
  40580f:	outs   dx,BYTE PTR ds:[rsi]
  405810:	sub    al,0x30
  405812:	sub    al,0x2e
  405814:	cs cs pop rbp
  405817:	or     ah,BYTE PTR [rax]
  405819:	and    BYTE PTR [rax],ah
  40581b:	and    BYTE PTR [rcx+0x74],dl
  40581e:	and    BYTE PTR [rax],ah
  405820:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2cc46
  405826:	(bad)  
  405827:	outs   dx,BYTE PTR ds:[rsi]
  405828:	addr32 jne 0x405897
  40582b:	(bad)  
  40582c:	je     0x405893
  40582e:	and    BYTE PTR fs:[rdi+0x75],ch
  405832:	je     0x4058a4
  405834:	jne    0x4058aa
  405836:	or     ah,BYTE PTR [rax]
  405838:	and    BYTE PTR [rax],ah
  40583a:	and    BYTE PTR [rcx+0x4a],dl
  40583d:	and    BYTE PTR [rax],ah
  40583f:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67afc265
  405845:	ins    BYTE PTR es:[edi],dx
  405847:	gs and BYTE PTR fs:[rcx+0x6e],ch
  40584c:	jo     0x4058c3
  40584e:	je     0x405870
  405850:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  405857:	and    BYTE PTR [rdi+0x66],ch
  40585a:	and    BYTE PTR [rbp+0x65],ch
  40585d:	jb     0x4058c6
  40585f:	gs and BYTE PTR fs:[rsi+0x61],ah
  405864:	movsxd esp,DWORD PTR [rbp+0x74]
  405867:	jae    0x405873
  405869:	and    BYTE PTR [rax],ah
  40586b:	and    BYTE PTR [rax],ah
  40586d:	push   rcx
  40586e:	movsxd esp,DWORD PTR [rax]
  405870:	and    BYTE PTR [rax],ah
  405872:	sub    eax,0x65656b20
  405877:	jo     0x405899
  405879:	movsxd ebp,DWORD PTR [rdi+0x70]
  40587c:	ins    BYTE PTR es:[rdi],dx
  40587d:	(bad)  
  40587e:	outs   dx,BYTE PTR ds:[rsi]
  40587f:	(bad)  
  405880:	jb     0x4058a2
  405882:	jo     0x4058f3
  405884:	imul   ebp,DWORD PTR [rsi+0x74],0x69772073
  40588b:	je     0x4058f5
  40588d:	and    BYTE PTR [rsi+0x65],ch
  405890:	(bad)  
  405891:	jb     0x4058f8
  405893:	jae    0x405909
  405895:	and    BYTE PTR [rsi+0x61],ah
  405898:	movsxd esp,DWORD PTR [rbp+0x74]
  40589b:	or     ah,BYTE PTR [rax]
  40589d:	and    BYTE PTR [rax],ah
  40589f:	and    BYTE PTR [rcx+0x69],dl
  4058a2:	and    BYTE PTR [rax],ah
  4058a4:	and    BYTE PTR [rip+0x65656b20],ch        # 0x65a5c3ca
  4058aa:	jo     0x4058cc
  4058ac:	imul   ebp,DWORD PTR [rsi+0x74],0x6f697265
  4058b3:	jb     0x4058d5
  4058b5:	jo     0x405926
  4058b7:	imul   ebp,DWORD PTR [rsi+0x74],0x69772073
  4058be:	je     0x405928
  4058c0:	and    BYTE PTR [rsi+0x65],ch
  4058c3:	(bad)  
  4058c4:	jb     0x40592b
  4058c6:	jae    0x40593c
  4058c8:	and    BYTE PTR [rsi+0x61],ah
  4058cb:	movsxd esp,DWORD PTR [rbp+0x74]
  4058ce:	or     cl,BYTE PTR [rdx]
  4058d0:	push   rcx
  4058d1:	push   0x206c6c75
  4058d6:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4058d9:	je     0x40594d
  4058db:	outs   dx,DWORD PTR ds:[rsi]
  4058dc:	ins    BYTE PTR es:[rdi],dx
  4058dd:	and    BYTE PTR [rdi+0x70],ch
  4058e0:	je     0x40594b
  4058e2:	outs   dx,DWORD PTR ds:[rsi]
  4058e3:	outs   dx,BYTE PTR ds:[rsi]
  4058e4:	jae    0x405920
  4058e6:	or     ah,BYTE PTR [rax]
  4058e8:	and    BYTE PTR [rax],ah
  4058ea:	and    BYTE PTR [rcx+0x62],dl
  4058ed:	imul   edi,DWORD PTR [rdx],0x6e
  4058f0:	and    BYTE PTR [rax],ah
  4058f2:	and    BYTE PTR [rip+0x61637320],ch        # 0x61a3cc18
  4058f8:	ins    BYTE PTR es:[rdi],dx
  4058f9:	and    BYTE PTR gs:[rbx+0x6f],ah
  4058fd:	outs   dx,DWORD PTR ds:[rsi]
  4058fe:	jb     0x405964
  405900:	and    BYTE PTR [rbx+0x20],ch
  405903:	jae    0x405974
  405905:	and    BYTE PTR [rax+rbp*2+0x61],dh
  405909:	je     0x40592b
  40590b:	ins    BYTE PTR es:[rdi],dx
  40590c:	outs   dx,DWORD PTR ds:[rsi]
  40590d:	ja     0x40592f
  40590f:	(bad)  
  405910:	outs   dx,DWORD PTR ds:[rsi]
  405911:	jne    0x405981
  405913:	and    BYTE PTR fs:[rcx+0x73],ch
  405917:	and    BYTE PTR [rsi+0xa],ch
  40591a:	and    BYTE PTR [rax],ah
  40591c:	and    BYTE PTR [rax],ah
  40591e:	and    BYTE PTR [rax],ah
  405920:	push   rcx
  405921:	rex.X imul edi,DWORD PTR [rdx],0x6e
  405925:	and    BYTE PTR [rip+0x61637320],ch        # 0x61a3cc4b
  40592b:	ins    BYTE PTR es:[rdi],dx
  40592c:	and    BYTE PTR gs:[rbx+0x6f],ah
  405930:	outs   dx,DWORD PTR ds:[rsi]
  405931:	jb     0x405997
  405933:	and    BYTE PTR [rbx+0x20],ch
  405936:	jae    0x4059a7
  405938:	and    BYTE PTR [rax+rbp*2+0x61],dh
  40593c:	je     0x40595e
  40593e:	jne    0x4059b0
  405940:	jo     0x4059a7
  405942:	jb     0x405964
  405944:	(bad)  
  405945:	outs   dx,DWORD PTR ds:[rsi]
  405946:	jne    0x4059b6
  405948:	and    BYTE PTR fs:[rcx+0x73],ch
  40594c:	and    BYTE PTR [rsi+0x20],ch
  40594f:	sub    BYTE PTR [rcx+0x42],dl
  405952:	imul   esp,DWORD PTR [rax],0x69
  405955:	jae    0x405977
  405957:	and    eax,0x67322e32
  40595c:	sub    DWORD PTR [rdx],ecx
  40595e:	and    BYTE PTR [rax],ah
  405960:	and    BYTE PTR [rax],ah
  405962:	push   rcx
  405963:	(bad)  
  405965:	and    BYTE PTR [rax],ah
  405967:	sub    eax,0x61637320
  40596c:	ins    BYTE PTR es:[rdi],dx
  40596d:	and    BYTE PTR gs:[rcx+0x6e],ch
  405971:	jo     0x4059e8
  405973:	je     0x405995
  405975:	je     0x4059e6
  405977:	and    BYTE PTR [rbp+0x6e],dh
  40597a:	imul   esi,DWORD PTR [rax+riz*1+0x63],0x20656275
  405982:	movsxd esp,DWORD PTR [rbp+0x6e]
  405985:	je     0x4059ec
  405987:	jb     0x4059ee
  405989:	and    BYTE PTR fs:[rcx+0x74],ah
  40598d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  405991:	and    BYTE PTR [rdi+0x72],ch
  405994:	imul   esp,DWORD PTR [rdi+0x69],0x20200a6e
  40599b:	and    BYTE PTR [rax],ah
  40599d:	push   rcx
  40599e:	(bad)  
  4059a0:	and    BYTE PTR [rax],ah
  4059a2:	sub    eax,0x61637320
  4059a7:	ins    BYTE PTR es:[rdi],dx
  4059a8:	and    BYTE PTR gs:[rcx+riz*2+0x73],ch
  4059ad:	je     0x4059cf
  4059af:	movsxd ebp,DWORD PTR [rdi+0x6f]
  4059b2:	jb     0x405a18
  4059b4:	imul   ebp,DWORD PTR [rsi+0x61],0x74206574
  4059bb:	outs   dx,DWORD PTR ds:[rsi]
  4059bc:	and    BYTE PTR [rbx+0x30],bl
  4059bf:	sub    al,0x6d
  4059c1:	pop    rbp
  4059c2:	and    BYTE PTR [rsi+0x6f],ah
  4059c5:	jb     0x4059e7
  4059c7:	rex.R
  4059c8:	gs ins BYTE PTR es:[rdi],dx
  4059ca:	(bad)  
  4059cb:	jne    0x405a3b
  4059cd:	(bad)  
  4059ce:	jns    0x4059f0
  4059d0:	je     0x405a44
  4059d2:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  4059d9:	je     0x405a44
  4059db:	outs   dx,DWORD PTR ds:[rsi]
  4059dc:	outs   dx,BYTE PTR ds:[rsi]
  4059dd:	jae    0x4059e9
  4059df:	and    BYTE PTR [rax],ah
  4059e1:	and    BYTE PTR [rax],ah
  4059e3:	push   rcx
  4059e4:	(bad)  
  4059e5:	imul   edi,DWORD PTR [rdx],0x30
  4059e8:	rex.X imul edi,DWORD PTR [rdx],0x30
  4059ec:	and    BYTE PTR [rip+0x6d657220],ch        # 0x6da5cc12
  4059f2:	outs   dx,DWORD PTR ds:[rsi]
  4059f3:	jbe    0x405a5a
  4059f5:	and    BYTE PTR [rbx+0x2d],ch
  4059f8:	je     0x405a62
  4059fa:	and    BYTE PTR [rbx+0x6f],ah
  4059fd:	outs   dx,DWORD PTR ds:[rsi]
  4059fe:	jb     0x405a64
  405a00:	imul   ebp,DWORD PTR [rsi+0x61],0x66206574
  405a07:	jb     0x405a78
  405a09:	ins    DWORD PTR es:[rdi],dx
  405a0a:	and    BYTE PTR [rcx+0x6e],ch
  405a0d:	jo     0x405a84
  405a0f:	je     0x405a1b
  405a11:	and    BYTE PTR [rax],ah
  405a13:	and    BYTE PTR [rax],ah
  405a15:	push   rcx
  405a16:	rex.WX outs dx,BYTE PTR ds:[rsi]
  405a18:	and    BYTE PTR [rax],ah
  405a1a:	sub    eax,0x6e617220
  405a1f:	outs   dx,DWORD PTR fs:[rsi]
  405a21:	ins    DWORD PTR es:[rdi],dx
  405a22:	ins    BYTE PTR es:[rdi],dx
  405a23:	jns    0x405a45
  405a25:	push   0x6f
  405a27:	addr32 ins BYTE PTR es:[edi],dx
  405a2a:	and    BYTE PTR gs:[rcx+0x6e],ch
  405a2e:	jo     0x405aa5
  405a30:	je     0x405a52
  405a32:	imul   ebp,DWORD PTR [rsi+0x20],0x676e6172
  405a39:	and    BYTE PTR gs:[rbx+0x2d],bl
  405a3d:	outs   dx,BYTE PTR ds:[rsi]
  405a3e:	sub    al,0x6e
  405a40:	pop    rbp
  405a41:	or     ah,BYTE PTR [rax]
  405a43:	and    BYTE PTR [rax],ah
  405a45:	and    BYTE PTR [rcx+0x52],dl
  405a48:	outs   dx,BYTE PTR ds:[rsi]
  405a49:	and    BYTE PTR [rax],ah
  405a4b:	sub    eax,0x6e617220
  405a50:	outs   dx,DWORD PTR fs:[rsi]
  405a52:	ins    DWORD PTR es:[rdi],dx
  405a53:	and    BYTE PTR [rdx+0x6f],dh
  405a56:	je     0x405ab9
  405a58:	je     0x405ac3
  405a5a:	outs   dx,DWORD PTR ds:[rsi]
  405a5b:	outs   dx,BYTE PTR ds:[rsi]
  405a5c:	and    BYTE PTR [rax],ch
  405a5e:	outs   dx,BYTE PTR ds:[rsi]
  405a5f:	cmp    eax,0x64656573
  405a64:	sub    al,0x20
  405a66:	outs   dx,BYTE PTR ds:[rsi]
  405a67:	cmp    eax,0x69742030
  405a6c:	ins    DWORD PTR es:[rdi],dx
  405a6d:	gs sub al,0x20
  405a70:	outs   dx,BYTE PTR ds:[rsi]
  405a71:	cmp    eax,0x7420312d
  405a76:	imul   ebp,DWORD PTR [rbp+0x65],0x206f6e2f
  405a7d:	jb     0x405aee
  405a7f:	je     0x405ae2
  405a81:	je     0x405ae8
  405a83:	sub    DWORD PTR [rdx],ecx
  405a85:	and    eax,0x25732573
  405a8a:	jae    0x405ab1
  405a8c:	jae    0x405a8e
	...
  405abe:	add    BYTE PTR [rax],al
  405ac0:	sbb    BYTE PTR [rdi],ch
  405ac2:	add    BYTE PTR [rax],al
	...
  405acd:	add    BYTE PTR [rax],al
  405acf:	add    bh,bh
  405ad1:	(bad)  
  405ad2:	(bad)  
  405ad3:	(bad)  
  405ad4:	(bad)  
  405ad5:	(bad)  
  405ad6:	(bad)  
  405ad7:	inc    DWORD PTR [rax]
  405ad9:	add    BYTE PTR [rax],al
  405adb:	add    BYTE PTR [rax],al
  405add:	add    BYTE PTR [rax],al
  405adf:	add    bh,bh
	...
  405aed:	add    BYTE PTR [rax],al
  405aef:	add    BYTE PTR [rdx],al
	...
  405afd:	add    BYTE PTR [rax],al
  405aff:	add    bh,bh
  405b01:	(bad)  
  405b02:	(bad)  
  405b03:	inc    DWORD PTR [rax]
	...
  405b0d:	add    BYTE PTR [rax],al
  405b0f:	add    al,al
  405b11:	sub    eax,DWORD PTR [rax+0x0]
  405b14:	add    BYTE PTR [rax],al
  405b16:	add    BYTE PTR [rax],al
  405b18:	shr    BYTE PTR [rbx],1
  405b1a:	add    BYTE PTR [rax],al
  405b1d:	add    BYTE PTR [rax],al
  405b1f:	add    BYTE PTR [rdx],dh
  405b21:	movabs ds:0x2b992ddf,al
  405b2a:	add    BYTE PTR [rax],al
  405b2c:	add    BYTE PTR [rax],al
  405b2e:	add    BYTE PTR [rax],al
  405b30:	int    0x5d
  405b32:	and    dl,dl
  405b34:	data16 (bad) 
  405b36:	(bad)  
  405b37:	inc    DWORD PTR [rax]
  405b39:	add    BYTE PTR [rax],al
  405b3b:	add    BYTE PTR [rax],al
  405b3d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	jno    0x40606a
  406002:	jne    0x406070
  406004:	ins    BYTE PTR es:[rdi],dx
  406005:	and    BYTE PTR [rcx+0x6e],ch
  406008:	je     0x40606f
  40600a:	jb     0x40607a
  40600c:	(bad)  
  40600d:	ins    BYTE PTR es:[rdi],dx
  40600e:	and    BYTE PTR [rdi+0x61],dh
  406011:	jb     0x406081
  406013:	imul   ebp,DWORD PTR [rsi+0x67],0x616d2820
  40601a:	imul   ebp,DWORD PTR [rsi+0x29],0x6964203a
  406021:	and    BYTE PTR fs:[rsi+0x6f],ch
  406025:	je     0x406047
  406027:	data16 jb 0x40608f
  40602a:	and    BYTE PTR gs:[rip+0x79622064],ah        # 0x79a28095
  406031:	je     0x406098
  406033:	jae    0x406055
  406035:	outs   dx,DWORD PTR ds:[rsi]
  406036:	data16 and BYTE PTR [rdi+rbp*2+0x6e],ch
  40603b:	and    BYTE PTR [ebp+0x65],ch
  40603f:	ins    DWORD PTR es:[rdi],dx
  406040:	outs   dx,DWORD PTR ds:[rsi]
  406041:	jb     0x4060bc
  406043:	and    BYTE PTR [rax],ch
  406045:	and    eax,0x69702064
  40604a:	movsxd esp,DWORD PTR gs:[rbp+0x73]
  40604e:	sub    DWORD PTR [rdx],ecx
	...
  40605c:	add    BYTE PTR [rax],al
  40605e:	loopne 0x40609f
  406060:	adc    BYTE PTR [rbp+0x40],0x0
  406067:	add    BYTE PTR [rax+0x4090],al
  40606d:	add    BYTE PTR [rax],al
  40606f:	add    BYTE PTR [rax+0x19],al
  406072:	add    BYTE PTR [rax],al
	...
  40607d:	add    BYTE PTR [rax],al
  40607f:	add    BYTE PTR [rcx+0x72],al
  406082:	addr32 jne 0x4060f2
  406085:	outs   dx,BYTE PTR gs:[rsi]
  406087:	je     0x4060a9
  406089:	outs   dx,DWORD PTR fs:[rsi]
  40608b:	ins    DWORD PTR es:[rdi],dx
  40608c:	(bad)  
  40608d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  406094:	jb     0x4060b6
  406096:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40609a:	rex.B
  40609b:	rex.WB
  40609c:	rex.WRX sub QWORD PTR [rax],r8
  40609f:	rex.B jb 0x406109
  4060a2:	jne    0x406111
  4060a4:	outs   dx,BYTE PTR gs:[rsi]
  4060a6:	je     0x4060c8
  4060a8:	jae    0x406113
  4060aa:	outs   dx,BYTE PTR ds:[rsi]
  4060ab:	addr32 jne 0x40611a
  4060ae:	(bad)  
  4060af:	jb     0x40611a
  4060b1:	je     0x40612c
  4060b3:	and    BYTE PTR [rax],ch
  4060b5:	push   rbx
  4060b6:	rex.WB
  4060b7:	rex.RXB
  4060b8:	rex.WRX sub QWORD PTR [rax],r8
  4060bb:	add    BYTE PTR [rax],al
  4060bd:	add    BYTE PTR [rax],al
  4060bf:	add    BYTE PTR [rdi+0x76],cl
  4060c2:	gs jb  0x40612b
  4060c5:	ins    BYTE PTR es:[rdi],dx
  4060c6:	outs   dx,DWORD PTR ds:[rsi]
  4060c7:	ja     0x4060e9
  4060c9:	jb     0x40612c
  4060cb:	outs   dx,BYTE PTR ds:[rsi]
  4060cc:	and    BYTE PTR gs:[ebp+0x72],ah
  4060d1:	jb     0x406142
  4060d3:	jb     0x4060f5
  4060d5:	sub    BYTE PTR [rdi+0x56],cl
  4060d8:	rex.RB push r10
  4060da:	rex.RX
  4060db:	rex.WR
  4060dc:	rex.WRXB push r15
  4060de:	sub    DWORD PTR [rax],eax
  4060e0:	push   rax
  4060e1:	(bad)  
  4060e2:	jb     0x406158
  4060e4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4060eb:	jae    0x40610d
  4060ed:	outs   dx,DWORD PTR ds:[rsi]
  4060ee:	data16 and BYTE PTR [rbx+0x69],dh
  4060f2:	outs   dx,BYTE PTR ds:[esi]
  4060f4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4060fb:	and    BYTE PTR gs:[rax],ch
  4060fe:	push   rax
  4060ff:	rex.WR
  406100:	rex.WRXB push r11
  406102:	push   rbx
  406103:	sub    DWORD PTR [rax],eax
  406105:	add    BYTE PTR [rax],al
  406107:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40610b:	(bad)  
  40610c:	ins    BYTE PTR es:[rdi],dx
  40610d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  406111:	jae    0x406133
  406113:	outs   dx,DWORD PTR ds:[rsi]
  406114:	data16 and BYTE PTR [rbx+0x69],dh
  406118:	outs   dx,BYTE PTR ds:[esi]
  40611a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406121:	and    BYTE PTR gs:[rax],ch
  406124:	push   rsp
  406125:	rex.WR
  406126:	rex.WRXB push r11
  406128:	push   rbx
  406129:	sub    DWORD PTR [rax],eax
  40612b:	add    BYTE PTR [rax],al
  40612d:	add    BYTE PTR [rax],al
  40612f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  406133:	and    BYTE PTR [rdx+0x65],dh
  406136:	jae    0x4061ad
  406138:	ins    BYTE PTR es:[rdi],dx
  406139:	je     0x40615b
  40613b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  406142:	jae    0x4061b1
  406144:	(bad)  
  406145:	ins    BYTE PTR es:[rdi],dx
  406146:	ins    BYTE PTR es:[rdi],dx
  406147:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40614b:	(bad)  
  40614c:	and    BYTE PTR gs:[rdx+0x65],dh
  406150:	jo     0x4061c4
  406152:	gs jae 0x4061ba
  406155:	outs   dx,BYTE PTR ds:[rsi]
  406156:	je     0x4061bd
  406158:	and    BYTE PTR fs:[rax],ch
  40615b:	push   rbp
  40615c:	rex.WRX
  40615d:	rex.R
  40615e:	rex.RB push r10
  406160:	rex.RX
  406161:	rex.WR
  406162:	rex.WRXB push r15
  406164:	sub    DWORD PTR [rax],eax
  406166:	push   rbp
  406167:	outs   dx,BYTE PTR ds:[rsi]
  406168:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40616c:	outs   dx,BYTE PTR ds:[rsi]
  40616d:	and    BYTE PTR [rbp+0x72],ah
  406170:	jb     0x4061e1
  406172:	jb     0x406174
  406174:	add    BYTE PTR [rax],al
  406176:	add    BYTE PTR [rax],al
  406178:	pop    rdi
  406179:	ins    DWORD PTR es:[rdi],dx
  40617a:	(bad)  
  40617b:	je     0x4061e5
  40617d:	gs jb  0x4061f2
  406180:	sub    BYTE PTR [rcx],ch
  406182:	cmp    ah,BYTE PTR [rax]
  406184:	and    eax,0x6e692073
  406189:	and    BYTE PTR [rip+0x67252873],ah        # 0x67658a02
  40618f:	sub    al,0x20
  406191:	and    eax,0x20202967
  406196:	sub    BYTE PTR [rdx+0x65],dh
  406199:	je     0x406211
  40619b:	(bad)  
  40619c:	ins    BYTE PTR es:[rdi],dx
  40619d:	cmp    eax,0xa296725
  4061a2:	add    BYTE PTR [rax],al
  4061a4:	ins    BYTE PTR es:[rdi],dx
  4061a5:	mov    ecx,0xb8adffff
  4061aa:	(bad)  
  4061ab:	call   FWORD PTR [rcx+rdi*4]
  4061ae:	(bad)  
  4061af:	jmp    FWORD PTR [rcx+rdi*4]
  4061b2:	(bad)  
  4061b3:	(bad)  
  4061b4:	cmp    al,0xb9
  4061b6:	(bad)  
  4061b7:	dec    DWORD PTR [rcx+rdi*4-0x1]
  4061bb:	call   FWORD PTR [rcx+rdi*4-0x1]
  4061bf:	dec    DWORD PTR [rbp+0x69]
  4061c2:	outs   dx,BYTE PTR ds:[rsi]
  4061c3:	addr32 ja 0x4061f3
  4061c6:	ja     0x4061fe
  4061c8:	xor    al,0x20
  4061ca:	jb     0x406241
  4061cc:	outs   dx,BYTE PTR ds:[rsi]
  4061cd:	je     0x406238
  4061cf:	ins    DWORD PTR es:[rdi],dx
  4061d0:	and    BYTE PTR gs:[rsi+0x61],ah
  4061d4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4061dc:	add    BYTE PTR [rax],al
  4061de:	add    BYTE PTR [rax],al
  4061e0:	rex.B
  4061e1:	fs fs jb 0x40624a
  4061e5:	jae    0x40625a
  4061e7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8825d
  4061ed:	jae    0x40620f
  4061ef:	outs   dx,BYTE PTR ds:[rsi]
  4061f0:	outs   dx,DWORD PTR ds:[rsi]
  4061f1:	and    BYTE PTR [rcx+0x6d],ch
  4061f4:	(bad)  
  4061f5:	addr32 gs sub eax,0x74636573
  4061fc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406203:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40620a:	jne    0x406271
  40620c:	jb     0x406287
  40620e:	and    BYTE PTR [rsi+0x61],ah
  406211:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406219:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a28283
  40621f:	je     0x406286
  406221:	jae    0x406243
  406223:	(bad)  
  406224:	je     0x406246
  406226:	(bad)  
  406227:	fs fs jb 0x406290
  40622b:	jae    0x4062a0
  40622d:	and    BYTE PTR [rip+0x70],ah        # 0x4062a3
  406233:	add    BYTE PTR [rax],al
  406235:	add    BYTE PTR [rax],al
  406237:	add    BYTE PTR [rax],ah
  406239:	and    BYTE PTR [rsi+0x69],dl
  40623c:	jb     0x4062b2
  40623e:	jne    0x4062a1
  406240:	ins    BYTE PTR es:[rdi],dx
  406241:	push   rax
  406242:	jb     0x4062b3
  406244:	je     0x4062ab
  406246:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40624a:	(bad)  
  40624b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  406253:	push   0x646f6320
  406258:	and    BYTE PTR gs:[rax],dh
  40625b:	js     0x406282
  40625d:	js     0x40625f
  40625f:	add    BYTE PTR [rax],ah
  406261:	and    BYTE PTR [rbp+0x6e],dl
  406264:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406268:	outs   dx,BYTE PTR ds:[rsi]
  406269:	and    BYTE PTR [rax+0x73],dh
  40626c:	gs jne 0x4062d3
  40626f:	outs   dx,DWORD PTR ds:[rsi]
  406270:	and    BYTE PTR [rdx+0x65],dh
  406273:	ins    BYTE PTR es:[rdi],dx
  406274:	outs   dx,DWORD PTR ds:[rsi]
  406275:	movsxd esp,DWORD PTR [rcx+0x74]
  406278:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40627f:	je     0x4062f0
  406281:	movsxd ebp,DWORD PTR [rdi+0x6c]
  406284:	and    BYTE PTR [rsi+0x65],dh
  406287:	jb     0x4062fc
  406289:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  406290:	or     al,BYTE PTR [rax]
  406292:	add    BYTE PTR [rax],al
  406294:	add    BYTE PTR [rax],al
  406296:	add    BYTE PTR [rax],al
  406298:	and    BYTE PTR [rax],ah
  40629a:	push   rbp
  40629b:	outs   dx,BYTE PTR ds:[rsi]
  40629c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4062a0:	outs   dx,BYTE PTR ds:[rsi]
  4062a1:	and    BYTE PTR [rax+0x73],dh
  4062a4:	gs jne 0x40630b
  4062a7:	outs   dx,DWORD PTR ds:[rsi]
  4062a8:	and    BYTE PTR [rdx+0x65],dh
  4062ab:	ins    BYTE PTR es:[rdi],dx
  4062ac:	outs   dx,DWORD PTR ds:[rsi]
  4062ad:	movsxd esp,DWORD PTR [rcx+0x74]
  4062b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4062b7:	and    BYTE PTR [rbx+0x69],dh
  4062ba:	jp     0x406321
  4062bc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a9126
	...
  4062ce:	add    BYTE PTR [rax],al
  4062d0:	cs jo  0x406337
  4062d3:	(bad)  
  4062d4:	je     0x406337
	...
  4062de:	add    BYTE PTR [rax],al
  4062e0:	xor    BYTE PTR [rip+0x0],bl        # 0x4062e6
	...
  4062ee:	add    BYTE PTR [rax],al
  4062f0:	lock pop rdx
  4062f2:	add    BYTE PTR [rax],al
	...
  406301:	pop    rbx
  406302:	add    BYTE PTR [rax],al
	...
  406311:	(bad)  
  406312:	add    BYTE PTR [rax],al
	...
  40631d:	add    BYTE PTR [rax],al
  40631f:	add    BYTE PTR [rax+rbp*2+0x40],dh
	...
  40632f:	add    BYTE PTR [rax+0x68],dl
  406332:	add    BYTE PTR [rax],al
	...
  40633d:	add    BYTE PTR [rax],al
  40633f:	add    BYTE PTR [rax+0x60],dh
  406342:	add    BYTE PTR [rax],al
	...
  406351:	add    BYTE PTR [rax+0x0],al
	...
  406360:	mov    al,0xa3
  406362:	add    BYTE PTR [rax],al
	...
  40636d:	add    BYTE PTR [rax],al
  40636f:	add    al,bl
  406371:	movabs ds:0x40,eax
  40637a:	add    BYTE PTR [rax],al
  40637c:	add    BYTE PTR [rax],al
  40637e:	add    BYTE PTR [rax],al
  406380:	lock movabs ds:0x40,eax
  40638a:	add    BYTE PTR [rax],al
  40638c:	add    BYTE PTR [rax],al
  40638e:	add    BYTE PTR [rax],al
  406390:	or     BYTE PTR [rax+rax*2+0x0],ah
	...
  40639f:	add    al,al
  4063a1:	xchg   esi,eax
  4063a2:	add    BYTE PTR [rax],al
	...
  4063ad:	add    BYTE PTR [rax],al
  4063af:	add    BYTE PTR [rax],ch
  4063b1:	(bad)  
  4063b2:	add    BYTE PTR [rax],al
	...
  4063bd:	add    BYTE PTR [rax],al
  4063bf:	add    BYTE PTR [rax],ah
  4063c1:	(bad)  
  4063c2:	add    BYTE PTR [rax],al
	...
  4063cd:	add    BYTE PTR [rax],al
  4063cf:	add    BYTE PTR [rax],dl
  4063d1:	(bad)  
  4063d2:	add    BYTE PTR [rax],al
	...
  4063dd:	add    BYTE PTR [rax],al
  4063df:	add    BYTE PTR [rax],bl
  4063e1:	(bad)  
  4063e2:	add    BYTE PTR [rax],al
	...
  4063f1:	mov    al,0x40
	...
  4063ff:	add    BYTE PTR [rax],dl
  406401:	mov    al,0x40
	...
  40640f:	add    BYTE PTR [rax],bl
  406411:	mov    al,0x40
	...
  40641f:	add    BYTE PTR [rax],dh
  406421:	mov    al,0x40
	...
  40642f:	add    BYTE PTR [rax-0x70],al
  406432:	add    BYTE PTR [rax],al
	...
  40643d:	add    BYTE PTR [rax],al
  40643f:	add    BYTE PTR [rax+0x4096],dl
	...
  40644d:	add    BYTE PTR [rax],al
  40644f:	add    al,dl
  406451:	and    al,BYTE PTR [rax+0x0]
	...
  406460:	and    BYTE PTR [rdx],bl
  406462:	add    BYTE PTR [rax],al
	...
  40646d:	add    BYTE PTR [rax],al
  40646f:	add    BYTE PTR [rax-0x6a],al
  406472:	add    BYTE PTR [rax],al
	...
  40647d:	add    BYTE PTR [rax],al
  40647f:	add    BYTE PTR [rax-0x6a],dh
  406482:	add    BYTE PTR [rax],al
	...
  40648d:	add    BYTE PTR [rax],al
  40648f:	add    BYTE PTR [rax-0x70],dl
  406492:	add    BYTE PTR [rax],al
	...
  40649d:	add    BYTE PTR [rax],al
  40649f:	add    BYTE PTR [rax-0x6a],bl
  4064a2:	add    BYTE PTR [rax],al
	...
  4064ad:	add    BYTE PTR [rax],al
  4064af:	add    BYTE PTR [rsi+rdx*4+0x40],dl
	...
  4064bf:	add    BYTE PTR [rax-0x6a],dl
  4064c2:	add    BYTE PTR [rax],al
	...
  4064cd:	add    BYTE PTR [rax],al
  4064cf:	add    BYTE PTR [rax+0x40a2],dh
	...
  4064dd:	add    BYTE PTR [rax],al
  4064df:	add    al,cl
  4064e1:	movabs ds:0x40,al
  4064ea:	add    BYTE PTR [rax],al
  4064ec:	add    BYTE PTR [rax],al
  4064ee:	add    BYTE PTR [rax],al
  4064f0:	rex.RXB
  4064f1:	rex.XB
  4064f2:	rex.XB cmp spl,BYTE PTR [r8]
  4064f5:	sub    BYTE PTR [rdi+0x4e],al
  4064f8:	push   rbp
  4064f9:	sub    DWORD PTR [rax],esp
  4064fb:	xor    al,0x2e
  4064fd:	cmp    DWORD PTR [rsi],ebp
  4064ff:	xor    al,0x0
	...
  40650d:	add    BYTE PTR [rax],al
  40650f:	add    BYTE PTR [rdi+0x43],al
  406512:	rex.XB cmp spl,BYTE PTR [r8]
  406515:	sub    BYTE PTR [rdi+0x4e],al
  406518:	push   rbp
  406519:	sub    DWORD PTR [rax],esp
  40651b:	xor    al,0x2e
  40651d:	cmp    DWORD PTR [rsi],ebp
  40651f:	xor    al,0x0
	...
  40652d:	add    BYTE PTR [rax],al
  40652f:	add    BYTE PTR [rdi+0x43],al
  406532:	rex.XB cmp spl,BYTE PTR [r8]
  406535:	sub    BYTE PTR [rdi+0x4e],al
  406538:	push   rbp
  406539:	sub    DWORD PTR [rax],esp
  40653b:	xor    al,0x2e
  40653d:	cmp    DWORD PTR [rsi],ebp
  40653f:	xor    al,0x0
	...
  40654d:	add    BYTE PTR [rax],al
  40654f:	add    BYTE PTR [rdi+0x43],al
  406552:	rex.XB cmp spl,BYTE PTR [r8]
  406555:	sub    BYTE PTR [rdi+0x4e],al
  406558:	push   rbp
  406559:	sub    DWORD PTR [rax],esp
  40655b:	xor    al,0x2e
  40655d:	cmp    DWORD PTR [rsi],ebp
  40655f:	xor    al,0x0
	...
  40656d:	add    BYTE PTR [rax],al
  40656f:	add    BYTE PTR [rdi+0x43],al
  406572:	rex.XB cmp spl,BYTE PTR [r8]
  406575:	sub    BYTE PTR [rdi+0x4e],al
  406578:	push   rbp
  406579:	sub    DWORD PTR [rax],esp
  40657b:	xor    al,0x2e
  40657d:	cmp    DWORD PTR [rsi],ebp
  40657f:	xor    al,0x0
	...
  40658d:	add    BYTE PTR [rax],al
  40658f:	add    BYTE PTR [rdi+0x43],al
  406592:	rex.XB cmp spl,BYTE PTR [r8]
  406595:	sub    BYTE PTR [rdi+0x4e],al
  406598:	push   rbp
  406599:	sub    DWORD PTR [rax],esp
  40659b:	xor    al,0x2e
  40659d:	cmp    DWORD PTR [rsi],ebp
  40659f:	xor    al,0x0
	...
  4065ad:	add    BYTE PTR [rax],al
  4065af:	add    BYTE PTR [rdi+0x43],al
  4065b2:	rex.XB cmp spl,BYTE PTR [r8]
  4065b5:	sub    BYTE PTR [rdi+0x4e],al
  4065b8:	push   rbp
  4065b9:	sub    DWORD PTR [rax],esp
  4065bb:	xor    al,0x2e
  4065bd:	cmp    DWORD PTR [rsi],ebp
  4065bf:	xor    al,0x0
	...
  4065cd:	add    BYTE PTR [rax],al
  4065cf:	add    BYTE PTR [rdi+0x43],al
  4065d2:	rex.XB cmp spl,BYTE PTR [r8]
  4065d5:	sub    BYTE PTR [rdi+0x4e],al
  4065d8:	push   rbp
  4065d9:	sub    DWORD PTR [rax],esp
  4065db:	xor    al,0x2e
  4065dd:	cmp    DWORD PTR [rsi],ebp
  4065df:	xor    al,0x0
	...
  4065ed:	add    BYTE PTR [rax],al
  4065ef:	add    BYTE PTR [rdi+0x43],al
  4065f2:	rex.XB cmp spl,BYTE PTR [r8]
  4065f5:	sub    BYTE PTR [rdi+0x4e],al
  4065f8:	push   rbp
  4065f9:	sub    DWORD PTR [rax],esp
  4065fb:	xor    al,0x2e
  4065fd:	cmp    DWORD PTR [rsi],ebp
  4065ff:	xor    al,0x0
	...
  40660d:	add    BYTE PTR [rax],al
  40660f:	add    BYTE PTR [rdi+0x43],al
  406612:	rex.XB cmp spl,BYTE PTR [r8]
  406615:	sub    BYTE PTR [rdi+0x4e],al
  406618:	push   rbp
  406619:	sub    DWORD PTR [rax],esp
  40661b:	xor    al,0x2e
  40661d:	cmp    DWORD PTR [rsi],ebp
  40661f:	xor    al,0x0
	...
  40662d:	add    BYTE PTR [rax],al
  40662f:	add    BYTE PTR [rdi+0x43],al
  406632:	rex.XB cmp spl,BYTE PTR [r8]
  406635:	sub    BYTE PTR [rdi+0x4e],al
  406638:	push   rbp
  406639:	sub    DWORD PTR [rax],esp
  40663b:	xor    al,0x2e
  40663d:	cmp    DWORD PTR [rsi],ebp
  40663f:	xor    al,0x0
	...
  40664d:	add    BYTE PTR [rax],al
  40664f:	add    BYTE PTR [rdi+0x43],al
  406652:	rex.XB cmp spl,BYTE PTR [r8]
  406655:	sub    BYTE PTR [rdi+0x4e],al
  406658:	push   rbp
  406659:	sub    DWORD PTR [rax],esp
  40665b:	xor    al,0x2e
  40665d:	cmp    DWORD PTR [rsi],ebp
  40665f:	xor    al,0x0
	...
  40666d:	add    BYTE PTR [rax],al
  40666f:	add    BYTE PTR [rdi+0x43],al
  406672:	rex.XB cmp spl,BYTE PTR [r8]
  406675:	sub    BYTE PTR [rdi+0x4e],al
  406678:	push   rbp
  406679:	sub    DWORD PTR [rax],esp
  40667b:	xor    al,0x2e
  40667d:	cmp    DWORD PTR [rsi],ebp
  40667f:	xor    al,0x0
	...
  40668d:	add    BYTE PTR [rax],al
  40668f:	add    BYTE PTR [rdi+0x43],al
  406692:	rex.XB cmp spl,BYTE PTR [r8]
  406695:	sub    BYTE PTR [rdi+0x4e],al
  406698:	push   rbp
  406699:	sub    DWORD PTR [rax],esp
  40669b:	xor    al,0x2e
  40669d:	cmp    DWORD PTR [rsi],ebp
  40669f:	xor    al,0x0
	...
  4066ad:	add    BYTE PTR [rax],al
  4066af:	add    BYTE PTR [rdi+0x43],al
  4066b2:	rex.XB cmp spl,BYTE PTR [r8]
  4066b5:	sub    BYTE PTR [rdi+0x4e],al
  4066b8:	push   rbp
  4066b9:	sub    DWORD PTR [rax],esp
  4066bb:	xor    al,0x2e
  4066bd:	cmp    DWORD PTR [rsi],ebp
  4066bf:	xor    al,0x0
	...
  4066cd:	add    BYTE PTR [rax],al
  4066cf:	add    BYTE PTR [rdi+0x43],al
  4066d2:	rex.XB cmp spl,BYTE PTR [r8]
  4066d5:	sub    BYTE PTR [rdi+0x4e],al
  4066d8:	push   rbp
  4066d9:	sub    DWORD PTR [rax],esp
  4066db:	xor    al,0x2e
  4066dd:	cmp    DWORD PTR [rsi],ebp
  4066df:	xor    al,0x0
	...
  4066ed:	add    BYTE PTR [rax],al
  4066ef:	add    BYTE PTR [rdi+0x43],al
  4066f2:	rex.XB cmp spl,BYTE PTR [r8]
  4066f5:	sub    BYTE PTR [rdi+0x4e],al
  4066f8:	push   rbp
  4066f9:	sub    DWORD PTR [rax],esp
  4066fb:	xor    al,0x2e
  4066fd:	cmp    DWORD PTR [rsi],ebp
  4066ff:	xor    al,0x0
	...
  40670d:	add    BYTE PTR [rax],al
  40670f:	add    BYTE PTR [rdi+0x43],al
  406712:	rex.XB cmp spl,BYTE PTR [r8]
  406715:	sub    BYTE PTR [rdi+0x4e],al
  406718:	push   rbp
  406719:	sub    DWORD PTR [rax],esp
  40671b:	xor    al,0x2e
  40671d:	cmp    DWORD PTR [rsi],ebp
  40671f:	xor    al,0x0
	...
  40672d:	add    BYTE PTR [rax],al
  40672f:	add    BYTE PTR [rdi+0x43],al
  406732:	rex.XB cmp spl,BYTE PTR [r8]
  406735:	sub    BYTE PTR [rdi+0x4e],al
  406738:	push   rbp
  406739:	sub    DWORD PTR [rax],esp
  40673b:	xor    al,0x2e
  40673d:	cmp    DWORD PTR [rsi],ebp
  40673f:	xor    al,0x0
	...
  40674d:	add    BYTE PTR [rax],al
  40674f:	add    BYTE PTR [rdi+0x43],al
  406752:	rex.XB cmp spl,BYTE PTR [r8]
  406755:	sub    BYTE PTR [rdi+0x4e],al
  406758:	push   rbp
  406759:	sub    DWORD PTR [rax],esp
  40675b:	xor    al,0x2e
  40675d:	cmp    DWORD PTR [rsi],ebp
  40675f:	xor    al,0x0
	...
  40676d:	add    BYTE PTR [rax],al
  40676f:	add    BYTE PTR [rdi+0x43],al
  406772:	rex.XB cmp spl,BYTE PTR [r8]
  406775:	sub    BYTE PTR [rdi+0x4e],al
  406778:	push   rbp
  406779:	sub    DWORD PTR [rax],esp
  40677b:	xor    al,0x2e
  40677d:	cmp    DWORD PTR [rsi],ebp
  40677f:	xor    al,0x0
	...
  40678d:	add    BYTE PTR [rax],al
  40678f:	add    BYTE PTR [rdi+0x43],al
  406792:	rex.XB cmp spl,BYTE PTR [r8]
  406795:	sub    BYTE PTR [rdi+0x4e],al
  406798:	push   rbp
  406799:	sub    DWORD PTR [rax],esp
  40679b:	xor    al,0x2e
  40679d:	cmp    DWORD PTR [rsi],ebp
  40679f:	xor    al,0x0
	...
  4067ad:	add    BYTE PTR [rax],al
  4067af:	add    BYTE PTR [rdi+0x43],al
  4067b2:	rex.XB cmp spl,BYTE PTR [r8]
  4067b5:	sub    BYTE PTR [rdi+0x4e],al
  4067b8:	push   rbp
  4067b9:	sub    DWORD PTR [rax],esp
  4067bb:	xor    al,0x2e
  4067bd:	cmp    DWORD PTR [rsi],ebp
  4067bf:	xor    al,0x0
	...
  4067cd:	add    BYTE PTR [rax],al
  4067cf:	add    BYTE PTR [rdi+0x43],al
  4067d2:	rex.XB cmp spl,BYTE PTR [r8]
  4067d5:	sub    BYTE PTR [rdi+0x4e],al
  4067d8:	push   rbp
  4067d9:	sub    DWORD PTR [rax],esp
  4067db:	xor    al,0x2e
  4067dd:	cmp    DWORD PTR [rsi],ebp
  4067df:	xor    al,0x0
	...
  4067ed:	add    BYTE PTR [rax],al
  4067ef:	add    BYTE PTR [rdi+0x43],al
  4067f2:	rex.XB cmp spl,BYTE PTR [r8]
  4067f5:	sub    BYTE PTR [rdi+0x4e],al
  4067f8:	push   rbp
  4067f9:	sub    DWORD PTR [rax],esp
  4067fb:	xor    al,0x2e
  4067fd:	cmp    DWORD PTR [rsi],ebp
  4067ff:	xor    al,0x0
	...
  40680d:	add    BYTE PTR [rax],al
  40680f:	add    BYTE PTR [rdi+0x43],al
  406812:	rex.XB cmp spl,BYTE PTR [r8]
  406815:	sub    BYTE PTR [rdi+0x4e],al
  406818:	push   rbp
  406819:	sub    DWORD PTR [rax],esp
  40681b:	xor    al,0x2e
  40681d:	cmp    DWORD PTR [rsi],ebp
  40681f:	xor    al,0x0
	...
  40682d:	add    BYTE PTR [rax],al
  40682f:	add    BYTE PTR [rdi+0x43],al
  406832:	rex.XB cmp spl,BYTE PTR [r8]
  406835:	sub    BYTE PTR [rdi+0x4e],al
  406838:	push   rbp
  406839:	sub    DWORD PTR [rax],esp
  40683b:	xor    al,0x2e
  40683d:	cmp    DWORD PTR [rsi],ebp
  40683f:	xor    al,0x0
	...
  406855:	add    BYTE PTR [rax],al
  406857:	add    BYTE PTR [rcx],al
  406859:	add    BYTE PTR [rax],al
  40685b:	add    BYTE PTR [rax-0x2fffff5e],dh
  406861:	add    BYTE PTR fs:[rax],al
  406864:	add    BYTE PTR [rax],al
  406867:	add    al,cl
  406869:	movabs ds:0x40000064e00000,al
	...

Disassembly of section .pdata:

0000000000407000 <.pdata>:
  407000:	add    BYTE PTR [rax],dl
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rax],edx
  407006:	add    BYTE PTR [rax],al
  407008:	add    BYTE PTR [rax+0x10100000],al
  40700e:	add    BYTE PTR [rax],al
  407010:	push   rcx
  407011:	adc    DWORD PTR [rax],eax
  407013:	add    BYTE PTR [rax+rax*4],al
  407016:	add    BYTE PTR [rax],al
  407018:	(bad)  
  407019:	adc    DWORD PTR [rax],eax
  40701b:	add    BYTE PTR [rsi+0xc000011],ch
  407021:	add    BYTE PTR [rax],0x0
  407024:	mov    al,0x11
  407026:	add    BYTE PTR [rax],al
  407028:	(bad)  
  407029:	adc    al,0x0
  40702b:	add    BYTE PTR [rax+rax*4],dl
  40702e:	add    BYTE PTR [rax],al
  407030:	rcl    BYTE PTR [rax+rax*1],1
  407033:	add    dl,dh
  407035:	adc    al,0x0
  407037:	add    BYTE PTR [rax],ch
  407039:	add    BYTE PTR [rax],0x0
  40703c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15627042
  407042:	add    BYTE PTR [rax],al
  407044:	rex.W add BYTE PTR [rax],0x0
  407048:	adc    BYTE PTR [rip+0x16270000],0x0        # 0x1667704f
  40704f:	add    BYTE PTR [rax+rax*4+0x0],bh
  407053:	add    BYTE PTR [rax],dh
  407055:	(bad)  
  407056:	add    BYTE PTR [rax],al
  407058:	rex.WB (bad) 
  40705a:	add    BYTE PTR [rax],al
  40705c:	test   BYTE PTR [rax+0x16500000],al
  407062:	add    BYTE PTR [rax],al
  407064:	test   DWORD PTR [rsi],edx
  407066:	add    BYTE PTR [rax],al
  407068:	mov    WORD PTR [rax+0x16900000],es
  40706e:	add    BYTE PTR [rax],al
  407070:	in     eax,0x16
  407072:	add    BYTE PTR [rax],al
  407074:	xchg   esp,eax
  407075:	add    BYTE PTR [rax],0x0
  407078:	lock (bad) 
  40707a:	add    BYTE PTR [rax],al
  40707c:	or     al,0x17
  40707e:	add    BYTE PTR [rax],al
  407080:	movabs al,ds:0x1a00001710000080
  407089:	(bad)  
  40708a:	add    BYTE PTR [rax],al
  40708c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40708d:	add    BYTE PTR [rax],0x0
  407090:	and    BYTE PTR [rdi],dl
  407092:	add    BYTE PTR [rax],al
  407094:	and    edx,DWORD PTR [rdi]
  407096:	add    BYTE PTR [rax],al
  407098:	test   al,0x80
  40709a:	add    BYTE PTR [rax],al
  40709c:	xor    BYTE PTR [rdi],dl
  40709e:	add    BYTE PTR [rax],al
  4070a0:	(bad)  
  4070a1:	sbb    BYTE PTR [rax],al
  4070a3:	add    BYTE PTR [rax+rax*4+0x18100000],ch
  4070aa:	add    BYTE PTR [rax],al
  4070ac:	or     ebx,DWORD PTR [rcx]
  4070ae:	add    BYTE PTR [rax],al
  4070b0:	mov    esp,0x10000080
  4070b5:	sbb    DWORD PTR [rax],eax
  4070b7:	add    BYTE PTR [rdi],bh
  4070b9:	sbb    DWORD PTR [rax],eax
  4070bb:	add    ah,cl
  4070bd:	add    BYTE PTR [rax],0x0
  4070c0:	rex sbb DWORD PTR [rax],eax
  4070c3:	add    BYTE PTR [rcx-0x2bffffe7],ch
  4070c9:	add    BYTE PTR [rax],0x0
  4070cc:	mov    al,0x19
  4070ce:	add    BYTE PTR [rax],al
  4070d0:	mov    bl,0x19
  4070d2:	add    BYTE PTR [rax],al
  4070d4:	loopne 0x407056
  4070d6:	add    BYTE PTR [rax],al
  4070d8:	rcr    BYTE PTR [rcx],0x0
  4070db:	add    BYTE PTR [rcx],al
  4070dd:	sbb    al,BYTE PTR [rax]
  4070df:	add    ah,ah
  4070e1:	add    BYTE PTR [rax],0x0
  4070e4:	adc    BYTE PTR [rdx],bl
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	sbb    al,0x1a
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	in     al,dx
  4070ed:	add    BYTE PTR [rax],0x0
  4070f0:	and    BYTE PTR [rdx],bl
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	sbb    al,0x1b
  4070f6:	add    BYTE PTR [rax],al
  4070f8:	lock add BYTE PTR [rax],0x0
  4070fc:	and    BYTE PTR [rbx],bl
  4070fe:	add    BYTE PTR [rax],al
  407100:	and    ebx,DWORD PTR [rbx]
  407102:	add    BYTE PTR [rax],al
  407104:	or     BYTE PTR [rcx+0x1b300000],al
  40710a:	add    BYTE PTR [rax],al
  40710c:	xor    al,0x1b
  40710e:	add    BYTE PTR [rax],al
  407110:	or     al,0x81
  407112:	add    BYTE PTR [rax],al
  407114:	rex sbb eax,DWORD PTR [rax]
  407117:	add    BYTE PTR [rbx+rbx*1+0x0],al
  40711b:	add    BYTE PTR [rax],dl
  40711d:	add    DWORD PTR [rax],0x1b5000
  407123:	add    BYTE PTR [rcx+0x1400001b],dh
  407129:	add    DWORD PTR [rax],0x1bc000
  40712f:	add    BYTE PTR [rdx],ah
  407131:	sbb    eax,0x81200000
  407136:	add    BYTE PTR [rax],al
  407138:	xor    BYTE PTR [rip+0x20290000],bl        # 0x2069713e
  40713e:	add    BYTE PTR [rax],al
  407140:	xor    al,0x81
  407142:	add    BYTE PTR [rax],al
  407144:	xor    BYTE PTR [rax],ah
  407146:	add    BYTE PTR [rax],al
  407148:	(bad)  
  407149:	and    DWORD PTR [rax],eax
  40714b:	add    BYTE PTR [rcx+rax*4+0x0],cl
  40714f:	add    al,ah
  407151:	and    DWORD PTR [rax],eax
  407153:	add    ah,cl
  407155:	and    al,BYTE PTR [rax]
  407157:	add    BYTE PTR [rcx+rax*4+0x0],dl
  40715b:	add    al,dl
  40715d:	and    al,BYTE PTR [rax]
  40715f:	add    BYTE PTR [rax+0x64000024],cl
  407165:	add    DWORD PTR [rax],0x249000
  40716b:	add    ch,bh
  40716d:	and    al,0x0
  40716f:	add    BYTE PTR [rcx+rax*4+0x0],ch
  407173:	add    BYTE PTR [rax],al
  407175:	and    eax,0x257f0000
  40717a:	add    BYTE PTR [rax],al
  40717c:	jl     0x4070ff
  40717e:	add    BYTE PTR [rax],al
  407180:	and    BYTE PTR [rip+0x261f0000],0x0        # 0x265f7187
  407187:	add    BYTE PTR [rax+0x20000081],cl
  40718d:	add    BYTE PTR es:[rax],al
  407190:	cli    
  407191:	add    BYTE PTR es:[rax],al
  407194:	nop
  407195:	add    DWORD PTR [rax],0x270000
  40719b:	add    BYTE PTR [rdi],bl
  40719d:	(bad)  
  40719e:	add    BYTE PTR [rax],al
  4071a0:	cwde   
  4071a1:	add    DWORD PTR [rax],0x272000
  4071a7:	add    BYTE PTR [rdx],dh
  4071a9:	(bad)  
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	pushf  
  4071ad:	add    DWORD PTR [rax],0x274000
  4071b3:	add    BYTE PTR [rbp-0x5fffffd9],al
  4071b9:	add    DWORD PTR [rax],0x279000
  4071bf:	add    BYTE PTR [rsi],ch
  4071c1:	sub    BYTE PTR [rax],al
  4071c3:	add    BYTE PTR [rcx+rax*4+0x28300000],ah
  4071ca:	add    BYTE PTR [rax],al
  4071cc:	jae    0x4071f6
  4071ce:	add    BYTE PTR [rax],al
  4071d0:	mov    al,0x81
  4071d2:	add    BYTE PTR [rax],al
  4071d4:	sub    BYTE PTR [rax],0x0
  4071d7:	add    BYTE PTR [rbx-0x43ffffd8],bh
  4071dd:	add    DWORD PTR [rax],0x28c000
  4071e3:	add    BYTE PTR [rsi+0x29],cl
  4071e6:	add    BYTE PTR [rax],al
  4071e8:	(bad)
  4071ec:	push   rax
  4071ed:	sub    DWORD PTR [rax],eax
  4071ef:	add    BYTE PTR [rax-0x2fffffd7],cl
  4071f5:	add    DWORD PTR [rax],0x299000
  4071fb:	add    ch,ah
  4071fd:	sub    DWORD PTR [rax],eax
  4071ff:	add    ah,bl
  407201:	add    DWORD PTR [rax],0x29f000
  407207:	add    BYTE PTR [rsi-0x17ffffd6],bl
  40720d:	add    DWORD PTR [rax],0x2bc000
  407213:	add    al,cl
  407215:	sub    eax,DWORD PTR [rax]
  407217:	add    al,bh
  407219:	add    DWORD PTR [rax],0x2bd000
  40721f:	add    bl,bl
  407221:	sub    eax,DWORD PTR [rax]
  407223:	add    ah,bh
  407225:	add    DWORD PTR [rax],0x2ca000
  40722b:	add    cl,bh
  40722d:	add    BYTE PTR cs:[rax],al
  407230:	.byte 0x68
  407231:	add    BYTE PTR [rax],0x0

Disassembly of section .xdata:

0000000000408000 <.xdata>:
  408000:	add    DWORD PTR [rax],eax
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rcx+rax*1],eax
  408007:	add    BYTE PTR [rdx+rax*2],al
  40800a:	add    BYTE PTR [rax],al
  40800c:	add    DWORD PTR [rcx+rax*1],eax
  40800f:	add    BYTE PTR [rdx+riz*2],al
  408012:	add    BYTE PTR [rax],al
  408014:	add    DWORD PTR [rdi],ecx
  408016:	or     BYTE PTR [rax],al
  408018:	lgdt   [rbx]
  40801b:	add    BYTE PTR [rax],cl
  40801d:	xor    BYTE PTR [rdi],al
  40801f:	(bad)  
  408020:	(bad)  
  408021:	jo     0x408028
  408023:	push   rax
  408024:	add    al,0xc0
  408026:	add    dl,al
  408028:	or     DWORD PTR [rcx+rax*1],eax
  40802b:	add    BYTE PTR [rdx+rax*2],al
  40802e:	add    BYTE PTR [rax],al
  408030:	mov    al,0x2b
  408032:	add    BYTE PTR [rax],al
  408034:	add    DWORD PTR [rax],eax
  408036:	add    BYTE PTR [rax],al
  408038:	(bad)  
  408039:	adc    al,0x0
  40803b:	add    ah,ch
  40803d:	adc    al,0x0
  40803f:	add    al,dl
  408041:	and    al,BYTE PTR [rax]
  408043:	add    ah,ch
  408045:	adc    al,0x0
  408047:	add    BYTE PTR [rcx],cl
  408049:	add    al,0x1
  40804b:	add    BYTE PTR [rdx+rax*2],al
  40804e:	add    BYTE PTR [rax],al
  408050:	mov    al,0x2b
  408052:	add    BYTE PTR [rax],al
  408054:	add    DWORD PTR [rax],eax
  408056:	add    BYTE PTR [rax],al
  408058:	add    al,0x15
  40805a:	add    BYTE PTR [rax],al
  40805c:	sbb    al,0x15
  40805e:	add    BYTE PTR [rax],al
  408060:	shl    BYTE PTR [rdx],1
  408062:	add    BYTE PTR [rax],al
  408064:	sbb    al,0x15
  408066:	add    BYTE PTR [rax],al
  408068:	add    DWORD PTR [rdi],ecx
  40806a:	or     BYTE PTR [rip+0x30bc20f],al        # 0x34c427f
  408070:	or     BYTE PTR [rax],dh
  408072:	(bad)  
  408073:	(bad)  
  408074:	(bad)  
  408075:	jo     0x40807c
  408077:	rol    BYTE PTR [rbx],0xd0
  40807a:	add    DWORD PTR [rax+0x1],edx
  40807d:	add    eax,0x52050002
  408082:	add    DWORD PTR [rax],esi
  408084:	add    DWORD PTR [rcx+rax*1],eax
  408087:	add    BYTE PTR [rdx+rax*2],al
  40808a:	add    BYTE PTR [rax],al
  40808c:	add    DWORD PTR [rcx+rax*1],eax
  40808f:	add    BYTE PTR [rdx+rax*2],al
  408092:	add    BYTE PTR [rax],al
  408094:	add    DWORD PTR [rsi],eax
  408096:	add    eax,DWORD PTR [rax]
  408098:	(bad)  
  408099:	rex.X add sil,BYTE PTR [rax]
  40809c:	add    DWORD PTR [rax+0x0],esp
  40809f:	add    BYTE PTR [rcx],al
  4080a1:	add    BYTE PTR [rax],al
  4080a3:	add    BYTE PTR [rcx],al
  4080a5:	add    BYTE PTR [rax],al
  4080a7:	add    BYTE PTR [rcx],al
  4080a9:	add    BYTE PTR [rax],al
  4080ab:	add    BYTE PTR [rcx],al
  4080ad:	or     al,BYTE PTR [rsi]
  4080af:	add    BYTE PTR [rdx],cl
  4080b1:	jb     0x4080b9
  4080b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b08519
  4080b9:	push   rax
  4080ba:	add    al,al
  4080bc:	add    DWORD PTR [rdx],ecx
  4080be:	add    eax,0x6d20a05
  4080c3:	add    eax,DWORD PTR [rbx]
  4080c5:	xor    BYTE PTR [rdx],al
  4080c7:	(bad)  
  4080c8:	add    DWORD PTR [rax+0x0],edx
  4080cb:	add    BYTE PTR [rcx],al
  4080cd:	add    al,0x1
  4080cf:	add    BYTE PTR [rdx+rax*2],al
  4080d2:	add    BYTE PTR [rax],al
  4080d4:	add    DWORD PTR [rsi],eax
  4080d6:	add    eax,DWORD PTR [rax]
  4080d8:	(bad)  
  4080d9:	rex.X add sil,BYTE PTR [rax]
  4080dc:	add    DWORD PTR [rax+0x0],esp
  4080df:	add    BYTE PTR [rcx],al
  4080e1:	add    BYTE PTR [rax],al
  4080e3:	add    BYTE PTR [rcx],al
  4080e5:	add    al,0x1
  4080e7:	add    BYTE PTR [rdx+riz*4],al
  4080ea:	add    BYTE PTR [rax],al
  4080ec:	add    DWORD PTR [rax],eax
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	add    DWORD PTR [rsi],edx
  4080f2:	or     DWORD PTR [rax],eax
  4080f4:	(bad)  
  4080f5:	mov    BYTE PTR [rsi],al
  4080f7:	add    BYTE PTR [rax],dl
  4080f9:	js     0x408100
  4080fb:	add    BYTE PTR [rbx],cl
  4080fd:	push   0xffffffffe2060004
  408102:	add    dh,BYTE PTR [rax]
  408104:	add    DWORD PTR [rax+0x0],esp
  408107:	add    BYTE PTR [rcx],al
  408109:	add    BYTE PTR [rax],al
  40810b:	add    BYTE PTR [rcx],al
  40810d:	add    BYTE PTR [rax],al
  40810f:	add    BYTE PTR [rcx],al
  408111:	add    BYTE PTR [rax],al
  408113:	add    BYTE PTR [rcx],al
  408115:	(bad)  
  408116:	add    eax,DWORD PTR [rax]
  408118:	(bad)  
  408119:	(bad)  
  40811b:	xor    BYTE PTR [rcx],al
  40811d:	(bad)  
  40811e:	add    BYTE PTR [rax],al
  408120:	add    DWORD PTR [rdi+rax*1],ecx
  408123:	add    BYTE PTR [rdx+riz*4],cl
  408126:	or     BYTE PTR [rax],dh
  408128:	(bad)  
  408129:	(bad)  
  40812a:	(bad)  
  40812b:	jo     0x408132
  40812d:	push   rax
  40812e:	add    al,0xc0
  408130:	add    dl,al
  408132:	add    BYTE PTR [rax],al
  408134:	add    DWORD PTR [rcx],edx
  408136:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e334d
  40813c:	or     dh,BYTE PTR [rax]
  40813e:	or     DWORD PTR [rax+0x8],esp
  408141:	jo     0x40814a
  408143:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220851a
  40814a:	add    BYTE PTR [rax],al
  40814c:	add    DWORD PTR [rcx+rax*1],eax
  40814f:	add    BYTE PTR [rdx+rax*2],al
  408152:	add    BYTE PTR [rax],al
  408154:	add    DWORD PTR [rdx],ecx
  408156:	(bad)  
  408157:	add    BYTE PTR [rdx],cl
  408159:	xor    al,BYTE PTR [rsi]
  40815b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b085c1
  408161:	push   rax
  408162:	add    al,al
  408164:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245816c
  40816a:	add    DWORD PTR [rax],esi
  40816c:	add    DWORD PTR [rax],ecx
  40816e:	add    eax,0x4420800
  408173:	xor    BYTE PTR [rbx],al
  408175:	(bad)  
  408176:	add    dh,BYTE PTR [rax+0x1]
  408179:	push   rax
  40817a:	add    BYTE PTR [rax],al
  40817c:	add    DWORD PTR [rdi],eax
  40817e:	add    al,0x0
  408180:	(bad)  
  408181:	xor    al,BYTE PTR [rbx]
  408183:	xor    BYTE PTR [rdx],al
  408185:	(bad)  
  408186:	add    DWORD PTR [rax+0x1],esi
  408189:	add    eax,0x32050002
  40818e:	add    DWORD PTR [rax],esi
  408190:	add    DWORD PTR [rip+0x32050002],eax        # 0x32458198
  408196:	add    DWORD PTR [rax],esi
  408198:	add    DWORD PTR [rax],eax
  40819a:	add    BYTE PTR [rax],al
  40819c:	add    DWORD PTR [rax],eax
  40819e:	add    BYTE PTR [rax],al
  4081a0:	add    DWORD PTR [rax],eax
  4081a2:	add    BYTE PTR [rax],al
  4081a4:	add    DWORD PTR [rdi],eax
  4081a6:	add    al,0x0
  4081a8:	(bad)  
  4081a9:	xor    al,BYTE PTR [rbx]
  4081ab:	xor    BYTE PTR [rdx],al
  4081ad:	(bad)  
  4081ae:	add    DWORD PTR [rax+0x1],esi
  4081b1:	(bad)  
  4081b2:	add    eax,DWORD PTR [rax]
  4081b4:	(bad)  
  4081b5:	rex.X add sil,BYTE PTR [rax]
  4081b8:	add    DWORD PTR [rax+0x0],esp
  4081bb:	add    BYTE PTR [rcx],al
  4081bd:	add    eax,0x32050002
  4081c2:	add    DWORD PTR [rax],esi
  4081c4:	add    DWORD PTR [rdi],eax
  4081c6:	add    al,0x0
  4081c8:	(bad)  
  4081c9:	xor    al,BYTE PTR [rbx]
  4081cb:	xor    BYTE PTR [rdx],al
  4081cd:	(bad)  
  4081ce:	add    DWORD PTR [rax+0x1],esi
  4081d1:	(bad)  
  4081d2:	add    eax,DWORD PTR [rax]
  4081d4:	(bad)  
  4081d5:	rex.X add sil,BYTE PTR [rax]
  4081d8:	add    DWORD PTR [rax+0x0],esp
  4081db:	add    BYTE PTR [rcx],al
  4081dd:	(bad)  
  4081de:	add    eax,DWORD PTR [rax]
  4081e0:	(bad)  
  4081e1:	rex.X add sil,BYTE PTR [rax]
  4081e4:	add    DWORD PTR [rax+0x0],esp
  4081e7:	add    BYTE PTR [rcx],al
  4081e9:	or     BYTE PTR [rip+0x4420800],al        # 0x48289ef
  4081ef:	xor    BYTE PTR [rbx],al
  4081f1:	(bad)  
  4081f2:	add    dh,BYTE PTR [rax+0x1]
  4081f5:	push   rax
  4081f6:	add    BYTE PTR [rax],al
  4081f8:	add    DWORD PTR [rax],eax
  4081fa:	add    BYTE PTR [rax],al
  4081fc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000409000 <.bss>:
	...

Disassembly of section .idata:

000000000040a000 <.idata>:
  40a000:	push   rax
  40a001:	movabs al,ds:0x0
  40a00a:	add    BYTE PTR [rax],al
  40a00c:	enter  0xa8,0x0
  40a010:	jo     0x409fb4
  40a012:	add    BYTE PTR [rax],al
  40a014:	mov    eax,0xa0
  40a019:	add    BYTE PTR [rax],al
  40a01b:	add    BYTE PTR [rax],al
  40a01d:	add    BYTE PTR [rax],al
  40a01f:	add    BYTE PTR [rcx+rbp*4],dh
  40a022:	add    BYTE PTR [rax],al
  40a024:	fsub   DWORD PTR [rdx-0x5e880000]
	...
  40a032:	add    BYTE PTR [rax],al
  40a034:	mov    esp,0x980000a9
  40a039:	movabs ds:0x0,eax
	...
  40a04e:	add    BYTE PTR [rax],al
  40a050:	nop
  40a051:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a052:	add    BYTE PTR [rax],al
  40a054:	add    BYTE PTR [rax],al
  40a056:	add    BYTE PTR [rax],al
  40a058:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a059:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	add    BYTE PTR [rax],al
  40a05e:	add    BYTE PTR [rax],al
  40a060:	mov    eax,0xa4
  40a065:	add    BYTE PTR [rax],al
  40a067:	add    al,cl
  40a069:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a06a:	add    BYTE PTR [rax],al
  40a06c:	add    BYTE PTR [rax],al
  40a06e:	add    BYTE PTR [rax],al
  40a070:	(bad)  
  40a071:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a072:	add    BYTE PTR [rax],al
  40a074:	add    BYTE PTR [rax],al
  40a076:	add    BYTE PTR [rax],al
  40a078:	loopne 0x40a01e
  40a07a:	add    BYTE PTR [rax],al
  40a07c:	add    BYTE PTR [rax],al
  40a07e:	add    BYTE PTR [rax],al
  40a080:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a082:	add    BYTE PTR [rax],al
  40a084:	add    BYTE PTR [rax],al
  40a086:	add    BYTE PTR [rax],al
  40a088:	add    al,0xa5
  40a08a:	add    BYTE PTR [rax],al
  40a08c:	add    BYTE PTR [rax],al
  40a08e:	add    BYTE PTR [rax],al
  40a090:	sbb    BYTE PTR [rbp+0x0],ah
  40a096:	add    BYTE PTR [rax],al
  40a098:	and    BYTE PTR [rbp+0x0],ah
  40a09e:	add    BYTE PTR [rax],al
  40a0a0:	sub    al,0xa5
  40a0a2:	add    BYTE PTR [rax],al
  40a0a4:	add    BYTE PTR [rax],al
  40a0a6:	add    BYTE PTR [rax],al
  40a0a8:	cmp    al,0xa5
	...
  40a0b6:	add    BYTE PTR [rax],al
  40a0b8:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a0ba:	add    BYTE PTR [rax],al
  40a0bc:	add    BYTE PTR [rax],al
  40a0be:	add    BYTE PTR [rax],al
  40a0c0:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
  40a0c2:	add    BYTE PTR [rax],al
  40a0c4:	add    BYTE PTR [rax],al
  40a0c6:	add    BYTE PTR [rax],al
  40a0c8:	jl     0x40a06f
  40a0ca:	add    BYTE PTR [rax],al
  40a0cc:	add    BYTE PTR [rax],al
  40a0ce:	add    BYTE PTR [rax],al
  40a0d0:	nop
  40a0d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a0d2:	add    BYTE PTR [rax],al
  40a0d4:	add    BYTE PTR [rax],al
  40a0d6:	add    BYTE PTR [rax],al
  40a0d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a0d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a0da:	add    BYTE PTR [rax],al
  40a0dc:	add    BYTE PTR [rax],al
  40a0de:	add    BYTE PTR [rax],al
  40a0e0:	mov    esp,0xa5
  40a0e5:	add    BYTE PTR [rax],al
  40a0e7:	add    ah,cl
  40a0e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a0ea:	add    BYTE PTR [rax],al
  40a0ec:	add    BYTE PTR [rax],al
  40a0ee:	add    BYTE PTR [rax],al
  40a0f0:	fisub  WORD PTR [rbp+0x0]
  40a0f6:	add    BYTE PTR [rax],al
  40a0f8:	clc    
  40a0f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a0fa:	add    BYTE PTR [rax],al
  40a0fc:	add    BYTE PTR [rax],al
  40a0fe:	add    BYTE PTR [rax],al
  40a100:	or     BYTE PTR [rsi+0x0],ah
  40a106:	add    BYTE PTR [rax],al
  40a108:	and    al,0xa6
  40a10a:	add    BYTE PTR [rax],al
  40a10c:	add    BYTE PTR [rax],al
  40a10e:	add    BYTE PTR [rax],al
  40a110:	cmp    al,0xa6
  40a112:	add    BYTE PTR [rax],al
  40a114:	add    BYTE PTR [rax],al
  40a116:	add    BYTE PTR [rax],al
  40a118:	push   rsi
  40a119:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a11a:	add    BYTE PTR [rax],al
  40a11c:	add    BYTE PTR [rax],al
  40a11e:	add    BYTE PTR [rax],al
  40a120:	ins    BYTE PTR es:[rdi],dx
  40a121:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a122:	add    BYTE PTR [rax],al
  40a124:	add    BYTE PTR [rax],al
  40a126:	add    BYTE PTR [rax],al
  40a128:	and    BYTE PTR [rsi+0x0],0x0
  40a12f:	add    BYTE PTR [rdx+0xa6],bl
  40a135:	add    BYTE PTR [rax],al
  40a137:	add    BYTE PTR [rsi+0xa6],ch
  40a13d:	add    BYTE PTR [rax],al
  40a13f:	add    ah,cl
  40a141:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a142:	add    BYTE PTR [rax],al
  40a144:	add    BYTE PTR [rax],al
  40a146:	add    BYTE PTR [rax],al
  40a148:	(bad)  
  40a149:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a14a:	add    BYTE PTR [rax],al
  40a14c:	add    BYTE PTR [rax],al
  40a14e:	add    BYTE PTR [rax],al
  40a150:	call   0x40a1fb
  40a155:	add    BYTE PTR [rax],al
  40a157:	add    dh,dh
  40a159:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a15a:	add    BYTE PTR [rax],al
  40a15c:	add    BYTE PTR [rax],al
  40a15e:	add    BYTE PTR [rax],al
  40a160:	adc    ah,BYTE PTR [rdi+0x0]
  40a166:	add    BYTE PTR [rax],al
  40a168:	and    al,0xa7
	...
  40a176:	add    BYTE PTR [rax],al
  40a178:	xor    al,0xa7
  40a17a:	add    BYTE PTR [rax],al
  40a17c:	add    BYTE PTR [rax],al
  40a17e:	add    BYTE PTR [rax],al
  40a180:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  40a182:	add    BYTE PTR [rax],al
  40a184:	add    BYTE PTR [rax],al
  40a186:	add    BYTE PTR [rax],al
  40a188:	pop    rdx
  40a189:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a18a:	add    BYTE PTR [rax],al
  40a18c:	add    BYTE PTR [rax],al
  40a18e:	add    BYTE PTR [rax],al
  40a190:	push   0xffffffffffffffa7
  40a192:	add    BYTE PTR [rax],al
  40a194:	add    BYTE PTR [rax],al
  40a196:	add    BYTE PTR [rax],al
  40a198:	jbe    0x40a141
  40a19a:	add    BYTE PTR [rax],al
  40a19c:	add    BYTE PTR [rax],al
  40a19e:	add    BYTE PTR [rax],al
  40a1a0:	test   BYTE PTR [rdi+0x0],ah
  40a1a6:	add    BYTE PTR [rax],al
  40a1a8:	xchg   esp,eax
  40a1a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a1aa:	add    BYTE PTR [rax],al
  40a1ac:	add    BYTE PTR [rax],al
  40a1ae:	add    BYTE PTR [rax],al
  40a1b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a1b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a1b2:	add    BYTE PTR [rax],al
  40a1b4:	add    BYTE PTR [rax],al
  40a1b6:	add    BYTE PTR [rax],al
  40a1b8:	mov    edx,0xa7
  40a1bd:	add    BYTE PTR [rax],al
  40a1bf:	add    ah,al
  40a1c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a1c2:	add    BYTE PTR [rax],al
  40a1c4:	add    BYTE PTR [rax],al
  40a1c6:	add    BYTE PTR [rax],al
  40a1c8:	shl    BYTE PTR [rdi+0x0],cl
  40a1ce:	add    BYTE PTR [rax],al
  40a1d0:	fsub   QWORD PTR [rdi+0x0]
  40a1d6:	add    BYTE PTR [rax],al
  40a1d8:	out    0xa7,al
  40a1da:	add    BYTE PTR [rax],al
  40a1dc:	add    BYTE PTR [rax],al
  40a1de:	add    BYTE PTR [rax],al
  40a1e0:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a1e2:	add    BYTE PTR [rax],al
  40a1e4:	add    BYTE PTR [rax],al
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	cli    
  40a1e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a1ea:	add    BYTE PTR [rax],al
  40a1ec:	add    BYTE PTR [rax],al
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	add    al,0xa8
  40a1f2:	add    BYTE PTR [rax],al
  40a1f4:	add    BYTE PTR [rax],al
  40a1f6:	add    BYTE PTR [rax],al
  40a1f8:	(bad)  
  40a1f9:	test   al,0x0
  40a1fb:	add    BYTE PTR [rax],al
  40a1fd:	add    BYTE PTR [rax],al
  40a1ff:	add    BYTE PTR [rax],bl
  40a201:	test   al,0x0
  40a203:	add    BYTE PTR [rax],al
  40a205:	add    BYTE PTR [rax],al
  40a207:	add    BYTE PTR [rax],ah
  40a209:	test   al,0x0
  40a20b:	add    BYTE PTR [rax],al
  40a20d:	add    BYTE PTR [rax],al
  40a20f:	add    BYTE PTR [rdx],ch
  40a211:	test   al,0x0
  40a213:	add    BYTE PTR [rax],al
  40a215:	add    BYTE PTR [rax],al
  40a217:	add    BYTE PTR [rdx],dh
  40a219:	test   al,0x0
  40a21b:	add    BYTE PTR [rax],al
  40a21d:	add    BYTE PTR [rax],al
  40a21f:	add    BYTE PTR [rax+rbp*4],bh
  40a222:	add    BYTE PTR [rax],al
  40a224:	add    BYTE PTR [rax],al
  40a226:	add    BYTE PTR [rax],al
  40a228:	rex.R test al,0x0
  40a22b:	add    BYTE PTR [rax],al
  40a22d:	add    BYTE PTR [rax],al
  40a22f:	add    BYTE PTR [rsi-0x58],cl
  40a232:	add    BYTE PTR [rax],al
  40a234:	add    BYTE PTR [rax],al
  40a236:	add    BYTE PTR [rax],al
  40a238:	pop    rax
  40a239:	test   al,0x0
  40a23b:	add    BYTE PTR [rax],al
  40a23d:	add    BYTE PTR [rax],al
  40a23f:	add    BYTE PTR [rdx-0x58],ah
  40a242:	add    BYTE PTR [rax],al
  40a244:	add    BYTE PTR [rax],al
  40a246:	add    BYTE PTR [rax],al
  40a248:	ins    BYTE PTR es:[rdi],dx
  40a249:	test   al,0x0
  40a24b:	add    BYTE PTR [rax],al
  40a24d:	add    BYTE PTR [rax],al
  40a24f:	add    BYTE PTR [rsi-0x58],dh
  40a252:	add    BYTE PTR [rax],al
  40a254:	add    BYTE PTR [rax],al
  40a256:	add    BYTE PTR [rax],al
  40a258:	sub    BYTE PTR [rax+0x0],0x0
  40a25f:	add    BYTE PTR [rax+rbp*4+0x0],cl
	...
  40a26e:	add    BYTE PTR [rax],al
  40a270:	nop
  40a271:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a272:	add    BYTE PTR [rax],al
  40a274:	add    BYTE PTR [rax],al
  40a276:	add    BYTE PTR [rax],al
  40a278:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a279:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a27a:	add    BYTE PTR [rax],al
  40a27c:	add    BYTE PTR [rax],al
  40a27e:	add    BYTE PTR [rax],al
  40a280:	mov    eax,0xa4
  40a285:	add    BYTE PTR [rax],al
  40a287:	add    al,cl
  40a289:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a28a:	add    BYTE PTR [rax],al
  40a28c:	add    BYTE PTR [rax],al
  40a28e:	add    BYTE PTR [rax],al
  40a290:	(bad)  
  40a291:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a292:	add    BYTE PTR [rax],al
  40a294:	add    BYTE PTR [rax],al
  40a296:	add    BYTE PTR [rax],al
  40a298:	loopne 0x40a23e
  40a29a:	add    BYTE PTR [rax],al
  40a29c:	add    BYTE PTR [rax],al
  40a29e:	add    BYTE PTR [rax],al
  40a2a0:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a2a2:	add    BYTE PTR [rax],al
  40a2a4:	add    BYTE PTR [rax],al
  40a2a6:	add    BYTE PTR [rax],al
  40a2a8:	add    al,0xa5
  40a2aa:	add    BYTE PTR [rax],al
  40a2ac:	add    BYTE PTR [rax],al
  40a2ae:	add    BYTE PTR [rax],al
  40a2b0:	sbb    BYTE PTR [rbp+0x0],ah
  40a2b6:	add    BYTE PTR [rax],al
  40a2b8:	and    BYTE PTR [rbp+0x0],ah
  40a2be:	add    BYTE PTR [rax],al
  40a2c0:	sub    al,0xa5
  40a2c2:	add    BYTE PTR [rax],al
  40a2c4:	add    BYTE PTR [rax],al
  40a2c6:	add    BYTE PTR [rax],al
  40a2c8:	cmp    al,0xa5
	...
  40a2d6:	add    BYTE PTR [rax],al
  40a2d8:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a2da:	add    BYTE PTR [rax],al
  40a2dc:	add    BYTE PTR [rax],al
  40a2de:	add    BYTE PTR [rax],al
  40a2e0:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
  40a2e2:	add    BYTE PTR [rax],al
  40a2e4:	add    BYTE PTR [rax],al
  40a2e6:	add    BYTE PTR [rax],al
  40a2e8:	jl     0x40a28f
  40a2ea:	add    BYTE PTR [rax],al
  40a2ec:	add    BYTE PTR [rax],al
  40a2ee:	add    BYTE PTR [rax],al
  40a2f0:	nop
  40a2f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a2f2:	add    BYTE PTR [rax],al
  40a2f4:	add    BYTE PTR [rax],al
  40a2f6:	add    BYTE PTR [rax],al
  40a2f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a2f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a2fa:	add    BYTE PTR [rax],al
  40a2fc:	add    BYTE PTR [rax],al
  40a2fe:	add    BYTE PTR [rax],al
  40a300:	mov    esp,0xa5
  40a305:	add    BYTE PTR [rax],al
  40a307:	add    ah,cl
  40a309:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a30a:	add    BYTE PTR [rax],al
  40a30c:	add    BYTE PTR [rax],al
  40a30e:	add    BYTE PTR [rax],al
  40a310:	fisub  WORD PTR [rbp+0x0]
  40a316:	add    BYTE PTR [rax],al
  40a318:	clc    
  40a319:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a31a:	add    BYTE PTR [rax],al
  40a31c:	add    BYTE PTR [rax],al
  40a31e:	add    BYTE PTR [rax],al
  40a320:	or     BYTE PTR [rsi+0x0],ah
  40a326:	add    BYTE PTR [rax],al
  40a328:	and    al,0xa6
  40a32a:	add    BYTE PTR [rax],al
  40a32c:	add    BYTE PTR [rax],al
  40a32e:	add    BYTE PTR [rax],al
  40a330:	cmp    al,0xa6
  40a332:	add    BYTE PTR [rax],al
  40a334:	add    BYTE PTR [rax],al
  40a336:	add    BYTE PTR [rax],al
  40a338:	push   rsi
  40a339:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a33a:	add    BYTE PTR [rax],al
  40a33c:	add    BYTE PTR [rax],al
  40a33e:	add    BYTE PTR [rax],al
  40a340:	ins    BYTE PTR es:[rdi],dx
  40a341:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a342:	add    BYTE PTR [rax],al
  40a344:	add    BYTE PTR [rax],al
  40a346:	add    BYTE PTR [rax],al
  40a348:	and    BYTE PTR [rsi+0x0],0x0
  40a34f:	add    BYTE PTR [rdx+0xa6],bl
  40a355:	add    BYTE PTR [rax],al
  40a357:	add    BYTE PTR [rsi+0xa6],ch
  40a35d:	add    BYTE PTR [rax],al
  40a35f:	add    ah,cl
  40a361:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a362:	add    BYTE PTR [rax],al
  40a364:	add    BYTE PTR [rax],al
  40a366:	add    BYTE PTR [rax],al
  40a368:	(bad)  
  40a369:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a36a:	add    BYTE PTR [rax],al
  40a36c:	add    BYTE PTR [rax],al
  40a36e:	add    BYTE PTR [rax],al
  40a370:	call   0x40a41b
  40a375:	add    BYTE PTR [rax],al
  40a377:	add    dh,dh
  40a379:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a37a:	add    BYTE PTR [rax],al
  40a37c:	add    BYTE PTR [rax],al
  40a37e:	add    BYTE PTR [rax],al
  40a380:	adc    ah,BYTE PTR [rdi+0x0]
  40a386:	add    BYTE PTR [rax],al
  40a388:	and    al,0xa7
	...
  40a396:	add    BYTE PTR [rax],al
  40a398:	xor    al,0xa7
  40a39a:	add    BYTE PTR [rax],al
  40a39c:	add    BYTE PTR [rax],al
  40a39e:	add    BYTE PTR [rax],al
  40a3a0:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  40a3a2:	add    BYTE PTR [rax],al
  40a3a4:	add    BYTE PTR [rax],al
  40a3a6:	add    BYTE PTR [rax],al
  40a3a8:	pop    rdx
  40a3a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3aa:	add    BYTE PTR [rax],al
  40a3ac:	add    BYTE PTR [rax],al
  40a3ae:	add    BYTE PTR [rax],al
  40a3b0:	push   0xffffffffffffffa7
  40a3b2:	add    BYTE PTR [rax],al
  40a3b4:	add    BYTE PTR [rax],al
  40a3b6:	add    BYTE PTR [rax],al
  40a3b8:	jbe    0x40a361
  40a3ba:	add    BYTE PTR [rax],al
  40a3bc:	add    BYTE PTR [rax],al
  40a3be:	add    BYTE PTR [rax],al
  40a3c0:	test   BYTE PTR [rdi+0x0],ah
  40a3c6:	add    BYTE PTR [rax],al
  40a3c8:	xchg   esp,eax
  40a3c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3ca:	add    BYTE PTR [rax],al
  40a3cc:	add    BYTE PTR [rax],al
  40a3ce:	add    BYTE PTR [rax],al
  40a3d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a3d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3d2:	add    BYTE PTR [rax],al
  40a3d4:	add    BYTE PTR [rax],al
  40a3d6:	add    BYTE PTR [rax],al
  40a3d8:	mov    edx,0xa7
  40a3dd:	add    BYTE PTR [rax],al
  40a3df:	add    ah,al
  40a3e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3e2:	add    BYTE PTR [rax],al
  40a3e4:	add    BYTE PTR [rax],al
  40a3e6:	add    BYTE PTR [rax],al
  40a3e8:	shl    BYTE PTR [rdi+0x0],cl
  40a3ee:	add    BYTE PTR [rax],al
  40a3f0:	fsub   QWORD PTR [rdi+0x0]
  40a3f6:	add    BYTE PTR [rax],al
  40a3f8:	out    0xa7,al
  40a3fa:	add    BYTE PTR [rax],al
  40a3fc:	add    BYTE PTR [rax],al
  40a3fe:	add    BYTE PTR [rax],al
  40a400:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a402:	add    BYTE PTR [rax],al
  40a404:	add    BYTE PTR [rax],al
  40a406:	add    BYTE PTR [rax],al
  40a408:	cli    
  40a409:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a40a:	add    BYTE PTR [rax],al
  40a40c:	add    BYTE PTR [rax],al
  40a40e:	add    BYTE PTR [rax],al
  40a410:	add    al,0xa8
  40a412:	add    BYTE PTR [rax],al
  40a414:	add    BYTE PTR [rax],al
  40a416:	add    BYTE PTR [rax],al
  40a418:	(bad)  
  40a419:	test   al,0x0
  40a41b:	add    BYTE PTR [rax],al
  40a41d:	add    BYTE PTR [rax],al
  40a41f:	add    BYTE PTR [rax],bl
  40a421:	test   al,0x0
  40a423:	add    BYTE PTR [rax],al
  40a425:	add    BYTE PTR [rax],al
  40a427:	add    BYTE PTR [rax],ah
  40a429:	test   al,0x0
  40a42b:	add    BYTE PTR [rax],al
  40a42d:	add    BYTE PTR [rax],al
  40a42f:	add    BYTE PTR [rdx],ch
  40a431:	test   al,0x0
  40a433:	add    BYTE PTR [rax],al
  40a435:	add    BYTE PTR [rax],al
  40a437:	add    BYTE PTR [rdx],dh
  40a439:	test   al,0x0
  40a43b:	add    BYTE PTR [rax],al
  40a43d:	add    BYTE PTR [rax],al
  40a43f:	add    BYTE PTR [rax+rbp*4],bh
  40a442:	add    BYTE PTR [rax],al
  40a444:	add    BYTE PTR [rax],al
  40a446:	add    BYTE PTR [rax],al
  40a448:	rex.R test al,0x0
  40a44b:	add    BYTE PTR [rax],al
  40a44d:	add    BYTE PTR [rax],al
  40a44f:	add    BYTE PTR [rsi-0x58],cl
  40a452:	add    BYTE PTR [rax],al
  40a454:	add    BYTE PTR [rax],al
  40a456:	add    BYTE PTR [rax],al
  40a458:	pop    rax
  40a459:	test   al,0x0
  40a45b:	add    BYTE PTR [rax],al
  40a45d:	add    BYTE PTR [rax],al
  40a45f:	add    BYTE PTR [rdx-0x58],ah
  40a462:	add    BYTE PTR [rax],al
  40a464:	add    BYTE PTR [rax],al
  40a466:	add    BYTE PTR [rax],al
  40a468:	ins    BYTE PTR es:[rdi],dx
  40a469:	test   al,0x0
  40a46b:	add    BYTE PTR [rax],al
  40a46d:	add    BYTE PTR [rax],al
  40a46f:	add    BYTE PTR [rsi-0x58],dh
  40a472:	add    BYTE PTR [rax],al
  40a474:	add    BYTE PTR [rax],al
  40a476:	add    BYTE PTR [rax],al
  40a478:	sub    BYTE PTR [rax+0x0],0x0
  40a47f:	add    BYTE PTR [rax+rbp*4+0x0],cl
	...
  40a48e:	add    BYTE PTR [rax],al
  40a490:	sbb    al,0x0
  40a492:	jno    0x40a4fc
  40a494:	pop    rdi
  40a495:	movsxd ebp,DWORD PTR [rax+0x65]
  40a498:	movsxd ebp,DWORD PTR [rbx+0x5f]
  40a49b:	outs   dx,DWORD PTR ds:[rsi]
  40a49c:	jne    0x40a512
  40a49e:	jo     0x40a515
  40a4a0:	je     0x40a4a2
  40a4a2:	add    BYTE PTR [rax],al
  40a4a4:	(bad)  
  40a4a5:	add    BYTE PTR [rcx+0x68],dh
  40a4a8:	pop    rdi
  40a4a9:	movsxd ebp,DWORD PTR [rax+0x65]
  40a4ac:	movsxd ebp,DWORD PTR [rbx+0x5f]
  40a4af:	jo     0x40a520
  40a4b1:	imul   ebp,DWORD PTR [rsi+0x74],0x73
  40a4b8:	add    BYTE PTR gs:[rcx+0x68],dh
  40a4bc:	pop    rdi
  40a4bd:	data16 jb 0x40a525
  40a4c0:	gs jno 0x40a52b
  40a4c3:	jne    0x40a531
  40a4c5:	ins    BYTE PTR es:[rdi],dx
  40a4c6:	add    BYTE PTR [rax],al
  40a4c8:	ja     0x40a4ca
  40a4ca:	jno    0x40a534
  40a4cc:	pop    rdi
  40a4cd:	imul   ebp,DWORD PTR [rsi+0x69],0x415f74
  40a4d4:	js     0x40a4d6
  40a4d6:	jno    0x40a540
  40a4d8:	pop    rdi
  40a4d9:	imul   ebp,DWORD PTR [rsi+0x69],0x425f74
  40a4e0:	jnp    0x40a4e2
  40a4e2:	jno    0x40a54c
  40a4e4:	pop    rdi
  40a4e5:	imul   ebp,DWORD PTR [rsi+0x69],0x616c6674
  40a4ec:	addr32 jae 0x40a4ef
  40a4ef:	add    BYTE PTR [rbx+0x5f687100],bl
  40a4f5:	ins    DWORD PTR es:[rdi],dx
  40a4f6:	gs ins DWORD PTR es:[rdi],dx
  40a4f8:	data16 jb 0x40a560
  40a4fb:	gs jae 0x40a566
  40a4fe:	outs   dx,DWORD PTR ds:[rsi]
  40a4ff:	jb     0x40a575
  40a501:	add    BYTE PTR [rax],al
  40a503:	add    BYTE PTR [rsi],cl
  40a505:	add    DWORD PTR [rcx+0x68],esi
  40a508:	pop    rdi
  40a509:	jo     0x40a57d
  40a50b:	outs   dx,DWORD PTR ds:[rsi]
  40a50c:	fs jne 0x40a572
  40a50f:	gs pop rdi
  40a511:	outs   dx,DWORD PTR ds:[rsi]
  40a512:	jne    0x40a588
  40a514:	jo     0x40a58b
  40a516:	je     0x40a518
  40a518:	adc    eax,DWORD PTR [rcx]
  40a51a:	jno    0x40a584
  40a51c:	pop    rdi
  40a51d:	jno    0x40a587
  40a51f:	add    BYTE PTR [rip+0x5f687101],dl        # 0x5fa91626
  40a525:	jno    0x40a58f
  40a527:	jne    0x40a595
  40a529:	ins    BYTE PTR es:[rdi],dx
  40a52a:	add    BYTE PTR [rax],al
  40a52c:	sbb    eax,DWORD PTR [rcx]
  40a52e:	jno    0x40a598
  40a530:	pop    rdi
  40a531:	jb     0x40a598
  40a533:	(bad)  
  40a534:	fs jo  0x40a5a6
  40a537:	imul   ebp,DWORD PTR [rsi+0x74],0x16b0073
  40a53e:	jno    0x40a5a8
  40a540:	pop    rdi
  40a541:	jbe    0x40a5a8
  40a543:	jb     0x40a5b8
  40a545:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  40a54c:	fadd   DWORD PTR [rax]
  40a54e:	rex.R
  40a54f:	gs ins BYTE PTR es:[rdi],dx
  40a551:	gs je  0x40a5b9
  40a554:	rex.XB jb 0x40a5c0
  40a557:	je     0x40a5c2
  40a559:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a55c:	push   rbx
  40a55d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a562:	outs   dx,BYTE PTR ds:[rsi]
  40a563:	add    al,bh
  40a565:	add    BYTE PTR [rbp+0x6e],al
  40a568:	je     0x40a5cf
  40a56a:	jb     0x40a5af
  40a56c:	jb     0x40a5d7
  40a56e:	je     0x40a5d9
  40a570:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a573:	push   rbx
  40a574:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a579:	outs   dx,BYTE PTR ds:[rsi]
  40a57a:	add    BYTE PTR [rax],al
  40a57c:	int    0x1
  40a57e:	rex.RXB
  40a57f:	gs je  0x40a5c5
  40a582:	jne    0x40a5f6
  40a584:	jb     0x40a5eb
  40a586:	outs   dx,BYTE PTR ds:[rsi]
  40a587:	je     0x40a5d9
  40a589:	jb     0x40a5fa
  40a58b:	movsxd esp,DWORD PTR [rbp+0x73]
  40a58e:	jae    0x40a590
  40a590:	(bad)  
  40a591:	add    DWORD PTR [rdi+0x65],eax
  40a594:	je     0x40a5d9
  40a596:	jne    0x40a60a
  40a598:	jb     0x40a5ff
  40a59a:	outs   dx,BYTE PTR ds:[rsi]
  40a59b:	je     0x40a5ed
  40a59d:	jb     0x40a60e
  40a59f:	movsxd esp,DWORD PTR [rbp+0x73]
  40a5a2:	jae    0x40a5ed
  40a5a4:	fs add dl,dl
  40a5a7:	add    DWORD PTR [rdi+0x65],eax
  40a5aa:	je     0x40a5ef
  40a5ac:	jne    0x40a620
  40a5ae:	jb     0x40a615
  40a5b0:	outs   dx,BYTE PTR ds:[rsi]
  40a5b1:	je     0x40a607
  40a5b3:	push   0x64616572
  40a5b8:	rex.WB
  40a5b9:	add    BYTE PTR fs:[rax],al
  40a5bc:	adc    BYTE PTR [rdx],al
  40a5be:	rex.RXB
  40a5bf:	gs je  0x40a60e
  40a5c2:	(bad)  
  40a5c3:	jae    0x40a639
  40a5c5:	rex.RB jb 0x40a63a
  40a5c8:	outs   dx,DWORD PTR ds:[rsi]
  40a5c9:	jb     0x40a5cb
  40a5cb:	add    BYTE PTR [rbx+0x2],dh
  40a5ce:	rex.RXB
  40a5cf:	gs je  0x40a625
  40a5d2:	je     0x40a635
  40a5d4:	jb     0x40a64a
  40a5d6:	jne    0x40a648
  40a5d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a5da:	outs   dx,WORD PTR ds:[rsi]
  40a5dc:	add    BYTE PTR [r10+0x74654702],cl
  40a5e3:	push   rbx
  40a5e4:	jns    0x40a659
  40a5e6:	je     0x40a64d
  40a5e8:	ins    DWORD PTR es:[rdi],dx
  40a5e9:	push   rsp
  40a5ea:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40a5f1:	ins    BYTE PTR es:[rdi],dx
  40a5f2:	gs push rsp
  40a5f4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40a5fb:	gs je  0x40a652
  40a5fe:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40a605:	je     0x40a607
  40a607:	add    cl,bh
  40a609:	add    cl,BYTE PTR [rcx+0x6e]
  40a60c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40a614:	rex.XB jb 0x40a680
  40a617:	je     0x40a682
  40a619:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a61c:	push   rbx
  40a61d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a622:	outs   dx,BYTE PTR ds:[rsi]
  40a623:	add    BYTE PTR [rbx+0x3],cl
  40a626:	rex.WR
  40a627:	gs (bad) 
  40a629:	jbe    0x40a690
  40a62b:	rex.XB jb 0x40a697
  40a62e:	je     0x40a699
  40a630:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a633:	push   rbx
  40a634:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a639:	outs   dx,BYTE PTR ds:[rsi]
  40a63a:	add    BYTE PTR [rax],al
  40a63c:	mov    ebx,0x65755103
  40a641:	jb     0x40a6bc
  40a643:	push   rax
  40a644:	gs jb  0x40a6ad
  40a647:	outs   dx,DWORD PTR ds:[rsi]
  40a648:	jb     0x40a6b7
  40a64a:	(bad)  
  40a64b:	outs   dx,BYTE PTR ds:[rsi]
  40a64c:	movsxd esp,DWORD PTR [rbp+0x43]
  40a64f:	outs   dx,DWORD PTR ds:[rsi]
  40a650:	jne    0x40a6c0
  40a652:	je     0x40a6b9
  40a654:	jb     0x40a656
  40a656:	add    DWORD PTR [rdx+rdx*2],eax
  40a659:	je     0x40a6c7
  40a65b:	rex.B
  40a65c:	fs fs rex.RX jne 0x40a6cf
  40a661:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40a665:	outs   dx,BYTE PTR ds:[rsi]
  40a666:	push   rsp
  40a667:	(bad)  
  40a668:	(bad)  
  40a669:	ins    BYTE PTR es:[rdi],dx
  40a66a:	add    BYTE PTR gs:[rdx],al
  40a66d:	add    al,0x52
  40a66f:	je     0x40a6dd
  40a671:	rex.XB (bad) 
  40a673:	jo     0x40a6e9
  40a675:	jne    0x40a6e9
  40a677:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40a67a:	outs   dx,BYTE PTR ds:[rsi]
  40a67b:	je     0x40a6e2
  40a67d:	js     0x40a6f3
  40a67f:	add    BYTE PTR [rcx],cl
  40a681:	add    al,0x52
  40a683:	je     0x40a6f1
  40a685:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40a687:	outs   dx,DWORD PTR ds:[rsi]
  40a688:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40a68c:	jne    0x40a6fc
  40a68e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40a692:	outs   dx,BYTE PTR ds:[rsi]
  40a693:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40a695:	je     0x40a709
  40a697:	jns    0x40a699
  40a699:	add    BYTE PTR [rax],dl
  40a69b:	add    al,0x52
  40a69d:	je     0x40a70b
  40a69f:	push   rsi
  40a6a0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40a6a7:	outs   dx,BYTE PTR ds:[rsi]
  40a6a8:	ja     0x40a713
  40a6aa:	outs   dx,BYTE PTR ds:[rsi]
  40a6ab:	add    BYTE PTR fs:[rax],al
  40a6ae:	lahf   
  40a6af:	add    al,0x53
  40a6b1:	gs je  0x40a709
  40a6b4:	outs   dx,BYTE PTR ds:[rsi]
  40a6b5:	push   0x6c646e61
  40a6ba:	gs fs rex.RB js 0x40a722
  40a6bf:	gs jo  0x40a736
  40a6c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40a6c9:	gs jb  0x40a6cc
  40a6cc:	lods   al,BYTE PTR ds:[rsi]
  40a6cd:	add    al,0x53
  40a6cf:	ins    BYTE PTR es:[rdi],dx
  40a6d0:	gs gs jo 0x40a6d4
  40a6d4:	mov    edx,0x72655404
  40a6d9:	ins    DWORD PTR es:[rdi],dx
  40a6da:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40a6e1:	outs   dx,DWORD PTR ds:[rsi]
  40a6e2:	movsxd esp,DWORD PTR [rbp+0x73]
  40a6e5:	jae    0x40a6e7
  40a6e7:	add    cl,al
  40a6e9:	add    al,0x54
  40a6eb:	ins    BYTE PTR es:[rdi],dx
  40a6ec:	jae    0x40a735
  40a6ee:	gs je  0x40a747
  40a6f1:	(bad)  
  40a6f2:	ins    BYTE PTR es:[rdi],dx
  40a6f3:	jne    0x40a75a
  40a6f5:	add    dh,cl
  40a6f7:	add    al,0x55
  40a6f9:	outs   dx,BYTE PTR ds:[rsi]
  40a6fa:	push   0x6c646e61
  40a6ff:	gs fs rex.RB js 0x40a767
  40a704:	gs jo  0x40a77b
  40a707:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40a70e:	gs jb  0x40a711
  40a711:	add    ah,ch
  40a713:	add    al,0x56
  40a715:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40a71c:	jb     0x40a78d
  40a71e:	je     0x40a785
  40a720:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40a724:	out    dx,al
  40a725:	add    al,0x56
  40a727:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40a72e:	jne    0x40a795
  40a730:	jb     0x40a7ab
  40a732:	add    BYTE PTR [rax],al
  40a734:	(bad)  
  40a735:	add    BYTE PTR [rdi+0x5f],bl
  40a738:	rex.XB pop r15
  40a73a:	jae    0x40a7ac
  40a73c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40a740:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40a747:	ins    BYTE PTR es:[rdi],dx
  40a748:	gs jb  0x40a74b
  40a74b:	add    BYTE PTR [rsi+0x0],cl
  40a74e:	pop    rdi
  40a74f:	pop    rdi
  40a750:	fs ins BYTE PTR es:[rdi],dx
  40a752:	ins    BYTE PTR es:[rdi],dx
  40a753:	outs   dx,DWORD PTR ds:[rsi]
  40a754:	outs   dx,BYTE PTR ds:[rsi]
  40a755:	gs js  0x40a7c1
  40a758:	je     0x40a75a
  40a75a:	push   rcx
  40a75b:	add    BYTE PTR [rdi+0x5f],bl
  40a75e:	addr32 gs je 0x40a7cf
  40a762:	(bad)  
  40a763:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40a76a:	push   rdx
  40a76b:	add    BYTE PTR [rdi+0x5f],bl
  40a76e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40a775:	add    BYTE PTR [rbx+0x0],dl
  40a778:	pop    rdi
  40a779:	pop    rdi
  40a77a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40a781:	movsxd eax,DWORD PTR [rax]
  40a783:	add    BYTE PTR [rdx+0x0],bl
  40a786:	pop    rdi
  40a787:	pop    rdi
  40a788:	ins    BYTE PTR es:[rdi],dx
  40a789:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a78c:	jbe    0x40a7ed
  40a78e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40a795:	add    BYTE PTR [rdi+0x5f],bl
  40a798:	jae    0x40a7ff
  40a79a:	je     0x40a7fb
  40a79c:	(bad)  
  40a79d:	jo     0x40a80f
  40a79f:	pop    rdi
  40a7a0:	je     0x40a81b
  40a7a2:	jo     0x40a809
  40a7a4:	add    BYTE PTR [rax],al
  40a7a6:	(bad)  
  40a7a7:	add    BYTE PTR [rdi+0x5f],bl
  40a7aa:	jae    0x40a811
  40a7ac:	je     0x40a823
  40a7ae:	jae    0x40a815
  40a7b0:	jb     0x40a81f
  40a7b2:	(bad)  
  40a7b3:	je     0x40a81d
  40a7b5:	gs jb  0x40a82a
  40a7b8:	add    BYTE PTR [rax],al
  40a7ba:	jno    0x40a7bc
  40a7bc:	pop    rdi
  40a7bd:	(bad)  
  40a7be:	movsxd ebp,DWORD PTR [rbp+0x64]
  40a7c1:	ins    BYTE PTR es:[rdi],dx
  40a7c2:	outs   dx,BYTE PTR ds:[rsi]
  40a7c3:	add    BYTE PTR [rax+0x0],bh
  40a7c6:	pop    rdi
  40a7c7:	(bad)  
  40a7c8:	ins    DWORD PTR es:[rdi],dx
  40a7c9:	jae    0x40a832
  40a7cb:	pop    rdi
  40a7cc:	gs js  0x40a838
  40a7cf:	je     0x40a7d1
  40a7d1:	add    BYTE PTR [rdx+0x65635f00],cl
  40a7d7:	js     0x40a842
  40a7d9:	je     0x40a7db
  40a7db:	add    dl,bl
  40a7dd:	add    BYTE PTR [rdi+0x66],bl
  40a7e0:	ins    DWORD PTR es:[rdi],dx
  40a7e1:	outs   dx,DWORD PTR ds:[rsi]
  40a7e2:	fs add BYTE PTR gs:[rax],al
  40a7e6:	sbb    al,BYTE PTR [rcx]
  40a7e8:	pop    rdi
  40a7e9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40a7f0:	ins    DWORD PTR es:[rdi],dx
  40a7f1:	add    BYTE PTR [rax+0x6f6c5f01],al
  40a7f7:	movsxd ebp,DWORD PTR [rbx+0x0]
  40a7fa:	and    eax,0x6e6f5f02
  40a7ff:	gs js  0x40a86b
  40a802:	je     0x40a804
  40a804:	push   rdx
  40a805:	add    bl,BYTE PTR [rdi+0x73]
  40a808:	gs je  0x40a875
  40a80b:	ins    DWORD PTR es:[rdi],dx
  40a80c:	jo     0x40a80e
  40a80e:	(bad)
  40a812:	outs   dx,BYTE PTR ds:[rsi]
  40a813:	ins    BYTE PTR es:[rdi],dx
  40a814:	outs   dx,DWORD PTR ds:[rsi]
  40a815:	movsxd ebp,DWORD PTR [rbx+0x0]
  40a818:	jg     0x40a81d
  40a81a:	(bad)  
  40a81b:	(bad)  
  40a81c:	outs   dx,DWORD PTR ds:[rsi]
  40a81d:	jb     0x40a893
  40a81f:	add    BYTE PTR [rax+0x6c616303],dl
  40a825:	ins    BYTE PTR es:[rdi],dx
  40a826:	outs   dx,DWORD PTR ds:[rsi]
  40a827:	movsxd eax,DWORD PTR [rax]
  40a829:	add    BYTE PTR [rbp+0x69786503],bl
  40a82f:	je     0x40a831
  40a831:	add    BYTE PTR [rax+0x72706603],dh
  40a837:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40a83e:	data16 jb 0x40a8a6
  40a841:	add    BYTE PTR gs:[rax],al
  40a844:	ret    0x6603
  40a847:	ja     0x40a8bb
  40a849:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40a851:	(bad)  
  40a852:	ins    BYTE PTR es:[rdi],dx
  40a853:	ins    BYTE PTR es:[rdi],dx
  40a854:	outs   dx,DWORD PTR ds:[rsi]
  40a855:	movsxd eax,DWORD PTR [rax]
  40a857:	add    al,bh
  40a859:	add    ebp,DWORD PTR [rbp+0x65]
  40a85c:	ins    DWORD PTR es:[rdi],dx
  40a85d:	movsxd esi,DWORD PTR [rax+0x79]
  40a860:	add    BYTE PTR [rax],al
  40a862:	(bad)  
  40a863:	add    al,0x73
  40a865:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40a86c:	sub    eax,DWORD PTR [rbx+rsi*2]
  40a86f:	je     0x40a8e3
  40a871:	ins    BYTE PTR es:[rdi],dx
  40a872:	outs   dx,BYTE PTR gs:[rsi]
  40a874:	add    BYTE PTR [rax],al
  40a876:	cs add al,0x73
  40a879:	je     0x40a8ed
  40a87b:	outs   dx,BYTE PTR ds:[rsi]
  40a87c:	movsxd ebp,DWORD PTR [rbp+0x70]
  40a87f:	add    BYTE PTR [rsi+0x4],cl
  40a882:	jbe    0x40a8ea
  40a884:	jo     0x40a8f8
  40a886:	imul   ebp,DWORD PTR [rsi+0x74],0xde000066
  40a88d:	add    al,0x5f
  40a88f:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  40a896:	add    BYTE PTR [rax],al
  40a898:	add    BYTE PTR [rax-0x60000000],ah
  40a89e:	add    BYTE PTR [rax],al
  40a8a0:	add    BYTE PTR [rax-0x60000000],ah
  40a8a6:	add    BYTE PTR [rax],al
  40a8a8:	add    BYTE PTR [rax-0x60000000],ah
  40a8ae:	add    BYTE PTR [rax],al
  40a8b0:	add    BYTE PTR [rax-0x60000000],ah
  40a8b6:	add    BYTE PTR [rax],al
  40a8b8:	add    BYTE PTR [rax-0x60000000],ah
  40a8be:	add    BYTE PTR [rax],al
  40a8c0:	add    BYTE PTR [rax-0x60000000],ah
  40a8c6:	add    BYTE PTR [rax],al
  40a8c8:	ins    BYTE PTR es:[rdi],dx
  40a8c9:	imul   esp,DWORD PTR [rdx+0x71],0x6c6c7568
  40a8d0:	sub    eax,0x6c642e35
  40a8d5:	ins    BYTE PTR es:[rdi],dx
  40a8d6:	add    BYTE PTR [rax],al
  40a8d8:	adc    al,0xa0
  40a8da:	add    BYTE PTR [rax],al
  40a8dc:	adc    al,0xa0
  40a8de:	add    BYTE PTR [rax],al
  40a8e0:	adc    al,0xa0
  40a8e2:	add    BYTE PTR [rax],al
  40a8e4:	adc    al,0xa0
  40a8e6:	add    BYTE PTR [rax],al
  40a8e8:	adc    al,0xa0
  40a8ea:	add    BYTE PTR [rax],al
  40a8ec:	adc    al,0xa0
  40a8ee:	add    BYTE PTR [rax],al
  40a8f0:	adc    al,0xa0
  40a8f2:	add    BYTE PTR [rax],al
  40a8f4:	adc    al,0xa0
  40a8f6:	add    BYTE PTR [rax],al
  40a8f8:	adc    al,0xa0
  40a8fa:	add    BYTE PTR [rax],al
  40a8fc:	adc    al,0xa0
  40a8fe:	add    BYTE PTR [rax],al
  40a900:	adc    al,0xa0
  40a902:	add    BYTE PTR [rax],al
  40a904:	adc    al,0xa0
  40a906:	add    BYTE PTR [rax],al
  40a908:	adc    al,0xa0
  40a90a:	add    BYTE PTR [rax],al
  40a90c:	adc    al,0xa0
  40a90e:	add    BYTE PTR [rax],al
  40a910:	adc    al,0xa0
  40a912:	add    BYTE PTR [rax],al
  40a914:	adc    al,0xa0
  40a916:	add    BYTE PTR [rax],al
  40a918:	adc    al,0xa0
  40a91a:	add    BYTE PTR [rax],al
  40a91c:	adc    al,0xa0
  40a91e:	add    BYTE PTR [rax],al
  40a920:	adc    al,0xa0
  40a922:	add    BYTE PTR [rax],al
  40a924:	adc    al,0xa0
  40a926:	add    BYTE PTR [rax],al
  40a928:	adc    al,0xa0
  40a92a:	add    BYTE PTR [rax],al
  40a92c:	adc    al,0xa0
  40a92e:	add    BYTE PTR [rax],al
  40a930:	adc    al,0xa0
  40a932:	add    BYTE PTR [rax],al
  40a934:	rex.WXB
  40a935:	rex.RB push r10
  40a937:	rex.WRX
  40a938:	rex.RB
  40a939:	xor    r14,QWORD PTR [rdx]
  40a93c:	cs fs ins BYTE PTR es:[rdi],dx
  40a93f:	ins    BYTE PTR es:[rdi],dx
  40a940:	add    BYTE PTR [rax],al
  40a942:	add    BYTE PTR [rax],al
  40a944:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a94a:	add    BYTE PTR [rax],al
  40a94c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a952:	add    BYTE PTR [rax],al
  40a954:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a95a:	add    BYTE PTR [rax],al
  40a95c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a962:	add    BYTE PTR [rax],al
  40a964:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a96a:	add    BYTE PTR [rax],al
  40a96c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a972:	add    BYTE PTR [rax],al
  40a974:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a97a:	add    BYTE PTR [rax],al
  40a97c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a982:	add    BYTE PTR [rax],al
  40a984:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a98a:	add    BYTE PTR [rax],al
  40a98c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a992:	add    BYTE PTR [rax],al
  40a994:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a99a:	add    BYTE PTR [rax],al
  40a99c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a9a2:	add    BYTE PTR [rax],al
  40a9a4:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a9aa:	add    BYTE PTR [rax],al
  40a9ac:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a9b2:	add    BYTE PTR [rax],al
  40a9b4:	sub    BYTE PTR [rax-0x5fd80000],ah
  40a9ba:	add    BYTE PTR [rax],al
  40a9bc:	ins    DWORD PTR es:[rdi],dx
  40a9bd:	jae    0x40aa35
  40a9bf:	movsxd esi,DWORD PTR [rdx+0x74]
  40a9c2:	cs fs ins BYTE PTR es:[rdi],dx
  40a9c5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040b000 <.CRT>:
	...
  40b008:	(bad)  
  40b009:	adc    DWORD PTR [rax+0x0],eax
	...
  40b020:	adc    BYTE PTR [rax],dl
  40b022:	add    BYTE PTR [rax],al
  40b025:	add    BYTE PTR [rax],al
  40b027:	add    BYTE PTR [rax],dl
  40b029:	(bad)  
  40b02a:	add    BYTE PTR [rax],al
	...
  40b03d:	add    BYTE PTR [rax],al
  40b03f:	add    BYTE PTR [rax+0x19],al
  40b042:	add    BYTE PTR [rax],al
  40b045:	add    BYTE PTR [rax],al
  40b047:	add    BYTE PTR [rax],dl
  40b049:	sbb    DWORD PTR [rax+0x0],eax
	...

Disassembly of section .tls:

000000000040c000 <.tls>:
	...
  40c020:	add    al,al
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax-0x40],ah
  40c02a:	add    BYTE PTR [rax],al
  40c02d:	add    BYTE PTR [rax],al
  40c02f:	add    BYTE PTR [rsi+rdx*4+0x40],bl
  40c033:	add    BYTE PTR [rax],al
  40c035:	add    BYTE PTR [rax],al
  40c037:	add    BYTE PTR [rax-0x50],al
  40c03a:	add    BYTE PTR [rax],al
	...
