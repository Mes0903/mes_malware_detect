
2513eb274a9507ee598af02dd9338ec08da908971a19f470d704cc3cc6234daa.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x10],rdx
   14000100d:	push   rbx
   14000100e:	sub    rsp,0x20
   140001012:	lea    rdx,[rsp+0x38]
   140001017:	mov    rbx,rcx
   14000101a:	call   QWORD PTR [rip+0xb448]        # 0x14000c468
   140001020:	lea    rax,[rip+0xb6d1]        # 0x14000c6f8
   140001027:	mov    QWORD PTR [rbx],rax
   14000102a:	mov    rax,rbx
   14000102d:	add    rsp,0x20
   140001031:	pop    rbx
   140001032:	ret    
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	lea    rax,[rip+0xb6b5]        # 0x14000c6f8
   140001043:	mov    QWORD PTR [rcx],rax
   140001046:	rex.W jmp QWORD PTR [rip+0xb44b]        # 0x14000c498
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	sub    rsp,0x48
   140001064:	mov    rdx,rcx
   140001067:	lea    rcx,[rsp+0x20]
   14000106c:	call   0x1400010d0
   140001071:	lea    rdx,[rip+0xdc38]        # 0x14000ecb0
   140001078:	lea    rcx,[rsp+0x20]
   14000107d:	call   0x14000a506
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    QWORD PTR [rsp+0x8],rbx
   140001095:	push   rdi
   140001096:	sub    rsp,0x20
   14000109a:	lea    rax,[rip+0xb657]        # 0x14000c6f8
   1400010a1:	mov    ebx,edx
   1400010a3:	mov    QWORD PTR [rcx],rax
   1400010a6:	mov    rdi,rcx
   1400010a9:	call   QWORD PTR [rip+0xb3e9]        # 0x14000c498
   1400010af:	test   bl,0x1
   1400010b2:	je     0x1400010bc
   1400010b4:	mov    rcx,rdi
   1400010b7:	call   0x140009d48
   1400010bc:	mov    rax,rdi
   1400010bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010c4:	add    rsp,0x20
   1400010c8:	pop    rdi
   1400010c9:	ret    
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	rex push rbx
   1400010d2:	sub    rsp,0x20
   1400010d6:	mov    rbx,rcx
   1400010d9:	call   QWORD PTR [rip+0xb2d9]        # 0x14000c3b8
   1400010df:	lea    rax,[rip+0xb612]        # 0x14000c6f8
   1400010e6:	mov    QWORD PTR [rbx],rax
   1400010e9:	mov    rax,rbx
   1400010ec:	add    rsp,0x20
   1400010f0:	pop    rbx
   1400010f1:	ret    
   1400010f2:	int3   
   1400010f3:	int3   
   1400010f4:	int3   
   1400010f5:	int3   
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	rex push rbx
   1400010fa:	sub    rsp,0x20
   1400010fe:	lea    rax,[rip+0xb623]        # 0x14000c728
   140001105:	mov    rbx,rcx
   140001108:	mov    QWORD PTR [rcx],rax
   14000110b:	cmp    QWORD PTR [rcx+0x38],0x10
   140001110:	jb     0x14000111b
   140001112:	mov    rcx,QWORD PTR [rcx+0x20]
   140001116:	call   0x140009d48
   14000111b:	and    QWORD PTR [rbx+0x30],0x0
   140001120:	mov    rcx,rbx
   140001123:	mov    QWORD PTR [rbx+0x38],0xf
   14000112b:	mov    BYTE PTR [rbx+0x20],0x0
   14000112f:	add    rsp,0x20
   140001133:	pop    rbx
   140001134:	rex.W jmp QWORD PTR [rip+0xb35d]        # 0x14000c498
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	int3   
   140001141:	int3   
   140001142:	int3   
   140001143:	int3   
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	cmp    QWORD PTR [rcx+0x38],0x10
   140001155:	jb     0x14000115c
   140001157:	mov    rax,QWORD PTR [rcx+0x20]
   14000115b:	ret    
   14000115c:	lea    rax,[rcx+0x20]
   140001160:	ret    
   140001161:	int3   
   140001162:	int3   
   140001163:	int3   
   140001164:	int3   
   140001165:	int3   
   140001166:	int3   
   140001167:	int3   
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	sub    rsp,0x78
   140001174:	mov    rax,QWORD PTR [rip+0xfe85]        # 0x140011000
   14000117b:	xor    rax,rsp
   14000117e:	mov    QWORD PTR [rsp+0x60],rax
   140001183:	mov    rdx,rcx
   140001186:	lea    rcx,[rsp+0x20]
   14000118b:	call   0x140001218
   140001190:	lea    rdx,[rip+0xdad1]        # 0x14000ec68
   140001197:	lea    rcx,[rsp+0x20]
   14000119c:	call   0x14000a506
   1400011a1:	int3   
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011b5:	push   rdi
   1400011b6:	sub    rsp,0x20
   1400011ba:	lea    rax,[rip+0xb567]        # 0x14000c728
   1400011c1:	mov    edi,edx
   1400011c3:	mov    QWORD PTR [rcx],rax
   1400011c6:	mov    rbx,rcx
   1400011c9:	cmp    QWORD PTR [rcx+0x38],0x10
   1400011ce:	jb     0x1400011d9
   1400011d0:	mov    rcx,QWORD PTR [rcx+0x20]
   1400011d4:	call   0x140009d48
   1400011d9:	and    QWORD PTR [rbx+0x30],0x0
   1400011de:	mov    rcx,rbx
   1400011e1:	mov    QWORD PTR [rbx+0x38],0xf
   1400011e9:	mov    BYTE PTR [rbx+0x20],0x0
   1400011ed:	call   QWORD PTR [rip+0xb2a5]        # 0x14000c498
   1400011f3:	test   dil,0x1
   1400011f7:	je     0x140001201
   1400011f9:	mov    rcx,rbx
   1400011fc:	call   0x140009d48
   140001201:	mov    rax,rbx
   140001204:	mov    rbx,QWORD PTR [rsp+0x30]
   140001209:	add    rsp,0x20
   14000120d:	pop    rdi
   14000120e:	ret    
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	mov    QWORD PTR [rsp+0x8],rcx
   14000121d:	push   rdi
   14000121e:	sub    rsp,0x30
   140001222:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000122b:	mov    QWORD PTR [rsp+0x48],rbx
   140001230:	mov    rbx,rdx
   140001233:	mov    rdi,rcx
   140001236:	call   QWORD PTR [rip+0xb17c]        # 0x14000c3b8
   14000123c:	nop
   14000123d:	lea    rax,[rip+0xb4e4]        # 0x14000c728
   140001244:	mov    QWORD PTR [rdi],rax
   140001247:	lea    rcx,[rdi+0x18]
   14000124b:	mov    QWORD PTR [rcx+0x20],0xf
   140001253:	and    QWORD PTR [rcx+0x18],0x0
   140001258:	mov    BYTE PTR [rcx+0x8],0x0
   14000125c:	lea    rdx,[rbx+0x18]
   140001260:	or     r9,0xffffffffffffffff
   140001264:	xor    r8d,r8d
   140001267:	call   0x140001cc0
   14000126c:	nop
   14000126d:	mov    rax,rdi
   140001270:	mov    rbx,QWORD PTR [rsp+0x48]
   140001275:	add    rsp,0x30
   140001279:	pop    rdi
   14000127a:	ret    
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	int3   
   140001281:	int3   
   140001282:	int3   
   140001283:	int3   
   140001284:	mov    QWORD PTR [rsp+0x8],rcx
   140001289:	push   rdi
   14000128a:	sub    rsp,0x30
   14000128e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001297:	mov    QWORD PTR [rsp+0x48],rbx
   14000129c:	mov    rbx,rdx
   14000129f:	mov    rdi,rcx
   1400012a2:	call   QWORD PTR [rip+0xb1c8]        # 0x14000c470
   1400012a8:	nop
   1400012a9:	lea    rax,[rip+0xb478]        # 0x14000c728
   1400012b0:	mov    QWORD PTR [rdi],rax
   1400012b3:	lea    rcx,[rdi+0x18]
   1400012b7:	mov    QWORD PTR [rcx+0x20],0xf
   1400012bf:	and    QWORD PTR [rcx+0x18],0x0
   1400012c4:	mov    BYTE PTR [rcx+0x8],0x0
   1400012c8:	or     r9,0xffffffffffffffff
   1400012cc:	xor    r8d,r8d
   1400012cf:	mov    rdx,rbx
   1400012d2:	call   0x140001cc0
   1400012d7:	nop
   1400012d8:	lea    rax,[rip+0xb431]        # 0x14000c710
   1400012df:	mov    QWORD PTR [rdi],rax
   1400012e2:	mov    rax,rdi
   1400012e5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400012ea:	add    rsp,0x30
   1400012ee:	pop    rdi
   1400012ef:	ret    
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	sub    rsp,0x78
   140001304:	mov    rax,QWORD PTR [rip+0xfcf5]        # 0x140011000
   14000130b:	xor    rax,rsp
   14000130e:	mov    QWORD PTR [rsp+0x60],rax
   140001313:	mov    rdx,rcx
   140001316:	lea    rcx,[rsp+0x20]
   14000131b:	call   0x140001338
   140001320:	lea    rdx,[rip+0xd811]        # 0x14000eb38
   140001327:	lea    rcx,[rsp+0x20]
   14000132c:	call   0x14000a506
   140001331:	int3   
   140001332:	int3   
   140001333:	int3   
   140001334:	int3   
   140001335:	int3   
   140001336:	int3   
   140001337:	int3   
   140001338:	mov    QWORD PTR [rsp+0x8],rcx
   14000133d:	push   rdi
   14000133e:	sub    rsp,0x30
   140001342:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000134b:	mov    QWORD PTR [rsp+0x48],rbx
   140001350:	mov    rbx,rdx
   140001353:	mov    rdi,rcx
   140001356:	call   QWORD PTR [rip+0xb05c]        # 0x14000c3b8
   14000135c:	nop
   14000135d:	lea    rax,[rip+0xb3c4]        # 0x14000c728
   140001364:	mov    QWORD PTR [rdi],rax
   140001367:	lea    rcx,[rdi+0x18]
   14000136b:	mov    QWORD PTR [rcx+0x20],0xf
   140001373:	and    QWORD PTR [rcx+0x18],0x0
   140001378:	mov    BYTE PTR [rcx+0x8],0x0
   14000137c:	lea    rdx,[rbx+0x18]
   140001380:	or     r9,0xffffffffffffffff
   140001384:	xor    r8d,r8d
   140001387:	call   0x140001cc0
   14000138c:	nop
   14000138d:	lea    rax,[rip+0xb37c]        # 0x14000c710
   140001394:	mov    QWORD PTR [rdi],rax
   140001397:	mov    rax,rdi
   14000139a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000139f:	add    rsp,0x30
   1400013a3:	pop    rdi
   1400013a4:	ret    
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	mov    QWORD PTR [rsp+0x8],rcx
   1400013b1:	push   rdi
   1400013b2:	sub    rsp,0x30
   1400013b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400013bf:	mov    QWORD PTR [rsp+0x48],rbx
   1400013c4:	mov    rbx,rdx
   1400013c7:	mov    rdi,rcx
   1400013ca:	call   QWORD PTR [rip+0xb0a0]        # 0x14000c470
   1400013d0:	nop
   1400013d1:	lea    rax,[rip+0xb350]        # 0x14000c728
   1400013d8:	mov    QWORD PTR [rdi],rax
   1400013db:	lea    rcx,[rdi+0x18]
   1400013df:	mov    QWORD PTR [rcx+0x20],0xf
   1400013e7:	and    QWORD PTR [rcx+0x18],0x0
   1400013ec:	mov    BYTE PTR [rcx+0x8],0x0
   1400013f0:	or     r9,0xffffffffffffffff
   1400013f4:	xor    r8d,r8d
   1400013f7:	mov    rdx,rbx
   1400013fa:	call   0x140001cc0
   1400013ff:	nop
   140001400:	lea    rax,[rip+0xb339]        # 0x14000c740
   140001407:	mov    QWORD PTR [rdi],rax
   14000140a:	mov    rax,rdi
   14000140d:	mov    rbx,QWORD PTR [rsp+0x48]
   140001412:	add    rsp,0x30
   140001416:	pop    rdi
   140001417:	ret    
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	sub    rsp,0x78
   140001424:	mov    rax,QWORD PTR [rip+0xfbd5]        # 0x140011000
   14000142b:	xor    rax,rsp
   14000142e:	mov    QWORD PTR [rsp+0x60],rax
   140001433:	mov    rdx,rcx
   140001436:	lea    rcx,[rsp+0x20]
   14000143b:	call   0x140001458
   140001440:	lea    rdx,[rip+0xd6d1]        # 0x14000eb18
   140001447:	lea    rcx,[rsp+0x20]
   14000144c:	call   0x14000a506
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	mov    QWORD PTR [rsp+0x8],rcx
   14000145d:	push   rdi
   14000145e:	sub    rsp,0x30
   140001462:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000146b:	mov    QWORD PTR [rsp+0x48],rbx
   140001470:	mov    rbx,rdx
   140001473:	mov    rdi,rcx
   140001476:	call   QWORD PTR [rip+0xaf3c]        # 0x14000c3b8
   14000147c:	nop
   14000147d:	lea    rax,[rip+0xb2a4]        # 0x14000c728
   140001484:	mov    QWORD PTR [rdi],rax
   140001487:	lea    rcx,[rdi+0x18]
   14000148b:	mov    QWORD PTR [rcx+0x20],0xf
   140001493:	and    QWORD PTR [rcx+0x18],0x0
   140001498:	mov    BYTE PTR [rcx+0x8],0x0
   14000149c:	lea    rdx,[rbx+0x18]
   1400014a0:	or     r9,0xffffffffffffffff
   1400014a4:	xor    r8d,r8d
   1400014a7:	call   0x140001cc0
   1400014ac:	nop
   1400014ad:	lea    rax,[rip+0xb28c]        # 0x14000c740
   1400014b4:	mov    QWORD PTR [rdi],rax
   1400014b7:	mov    rax,rdi
   1400014ba:	mov    rbx,QWORD PTR [rsp+0x48]
   1400014bf:	add    rsp,0x30
   1400014c3:	pop    rdi
   1400014c4:	ret    
   1400014c5:	int3   
   1400014c6:	int3   
   1400014c7:	int3   
   1400014c8:	int3   
   1400014c9:	int3   
   1400014ca:	int3   
   1400014cb:	int3   
   1400014cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400014d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400014d6:	push   rdi
   1400014d7:	sub    rsp,0x20
   1400014db:	mov    rax,QWORD PTR [rcx+0x8]
   1400014df:	mov    rbx,rcx
   1400014e2:	mov    rsi,QWORD PTR [rax+0x8]
   1400014e6:	mov    rdi,rsi
   1400014e9:	cmp    BYTE PTR [rsi+0x29],0x0
   1400014ed:	jne    0x14000150f
   1400014ef:	mov    rdx,QWORD PTR [rdi+0x10]
   1400014f3:	mov    rcx,rbx
   1400014f6:	call   0x140002f58
   1400014fb:	mov    rdi,QWORD PTR [rdi]
   1400014fe:	mov    rcx,rsi
   140001501:	call   0x140009d48
   140001506:	cmp    BYTE PTR [rdi+0x29],0x0
   14000150a:	mov    rsi,rdi
   14000150d:	je     0x1400014ef
   14000150f:	mov    rax,QWORD PTR [rbx+0x8]
   140001513:	mov    QWORD PTR [rax+0x8],rax
   140001517:	mov    rax,QWORD PTR [rbx+0x8]
   14000151b:	and    QWORD PTR [rbx+0x10],0x0
   140001520:	mov    QWORD PTR [rax],rax
   140001523:	mov    rax,QWORD PTR [rbx+0x8]
   140001527:	mov    QWORD PTR [rax+0x10],rax
   14000152b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000152f:	call   0x140009d48
   140001534:	and    QWORD PTR [rbx+0x8],0x0
   140001539:	and    QWORD PTR [rbx+0x10],0x0
   14000153e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001543:	mov    rsi,QWORD PTR [rsp+0x38]
   140001548:	add    rsp,0x20
   14000154c:	pop    rdi
   14000154d:	ret    
   14000154e:	int3   
   14000154f:	int3   
   140001550:	int3   
   140001551:	int3   
   140001552:	int3   
   140001553:	int3   
   140001554:	mov    rax,rsp
   140001557:	mov    QWORD PTR [rax+0x8],rcx
   14000155b:	push   rbx
   14000155c:	push   rsi
   14000155d:	push   rdi
   14000155e:	push   r14
   140001560:	sub    rsp,0x48
   140001564:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14000156c:	mov    rbx,rcx
   14000156f:	and    QWORD PTR [rax+0x20],0x0
   140001574:	cmp    BYTE PTR [rcx+0x78],0x0
   140001578:	je     0x140001581
   14000157a:	xor    eax,eax
   14000157c:	jmp    0x14000174e
   140001581:	add    rcx,0x88
   140001588:	lea    rdx,[rsp+0x78]
   14000158d:	call   QWORD PTR [rip+0xac95]        # 0x14000c228
   140001593:	test   al,al
   140001595:	jne    0x1400015a5
   140001597:	call   QWORD PTR [rip+0xaa8b]        # 0x14000c028
   14000159d:	mov    DWORD PTR [rbx+0x7c],eax
   1400015a0:	jmp    0x14000174b
   1400015a5:	mov    edx,DWORD PTR [rsp+0x78]
   1400015a9:	shl    rdx,0x4
   1400015ad:	xor    ecx,ecx
   1400015af:	call   QWORD PTR [rip+0xaadb]        # 0x14000c090
   1400015b5:	mov    QWORD PTR [rbx+0x80],rax
   1400015bc:	test   rax,rax
   1400015bf:	jne    0x1400015cd
   1400015c1:	mov    DWORD PTR [rbx+0x7c],0x8
   1400015c8:	jmp    0x14000174b
   1400015cd:	mov    r8d,DWORD PTR [rsp+0x78]
   1400015d2:	shl    r8,0x4
   1400015d6:	xor    edx,edx
   1400015d8:	mov    rcx,rax
   1400015db:	call   0x14000aabe
   1400015e0:	xor    esi,esi
   1400015e2:	cmp    esi,DWORD PTR [rsp+0x78]
   1400015e6:	jae    0x140001747
   1400015ec:	mov    edi,esi
   1400015ee:	shl    rdi,0x4
   1400015f2:	mov    rcx,QWORD PTR [rbx+0x88]
   1400015f9:	add    rcx,rdi
   1400015fc:	lea    rdx,[rsp+0x20]
   140001601:	call   QWORD PTR [rip+0xabf1]        # 0x14000c1f8
   140001607:	test   al,al
   140001609:	je     0x140001597
   14000160b:	mov    rcx,QWORD PTR [rbx+0x88]
   140001612:	add    rcx,rdi
   140001615:	mov    QWORD PTR [rsp+0x30],rcx
   14000161a:	lea    rcx,[rbx+0x18]
   14000161e:	lea    rdx,[rsp+0x30]
   140001623:	call   0x140001c14
   140001628:	mov    rcx,QWORD PTR [rsp+0x20]
   14000162d:	mov    QWORD PTR [rax],rcx
   140001630:	lea    rdx,[rsp+0x20]
   140001635:	mov    rcx,rbx
   140001638:	call   0x140001b6c
   14000163d:	mov    rdx,QWORD PTR [rbx+0x88]
   140001644:	add    rdx,rdi
   140001647:	mov    QWORD PTR [rax],rdx
   14000164a:	mov    rcx,QWORD PTR [rbx+0x88]
   140001651:	add    rcx,rdi
   140001654:	lea    r9,[rsp+0x80]
   14000165c:	lea    r8,[rsp+0x88]
   140001664:	xor    edx,edx
   140001666:	call   QWORD PTR [rip+0xabac]        # 0x14000c218
   14000166c:	test   al,al
   14000166e:	je     0x140001597
   140001674:	mov    rcx,QWORD PTR [rbx+0x80]
   14000167b:	mov    rax,QWORD PTR [rsp+0x88]
   140001683:	mov    QWORD PTR [rdi+rcx*1],rax
   140001687:	mov    rcx,QWORD PTR [rbx+0x80]
   14000168e:	mov    eax,DWORD PTR [rsp+0x80]
   140001695:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
   140001699:	mov    rcx,QWORD PTR [rbx+0x88]
   1400016a0:	add    rcx,rdi
   1400016a3:	mov    QWORD PTR [rsp+0x30],rcx
   1400016a8:	lea    rcx,[rbx+0x60]
   1400016ac:	lea    rdx,[rsp+0x30]
   1400016b1:	call   0x140001c14
   1400016b6:	mov    rdx,QWORD PTR [rbx+0x80]
   1400016bd:	add    rdx,rdi
   1400016c0:	mov    QWORD PTR [rax],rdx
   1400016c3:	xor    edi,edi
   1400016c5:	cmp    edi,DWORD PTR [rsp+0x80]
   1400016cc:	jae    0x140001739
   1400016ce:	mov    r14d,edi
   1400016d1:	shl    r14,0x4
   1400016d5:	mov    rcx,QWORD PTR [rsp+0x88]
   1400016dd:	add    rcx,r14
   1400016e0:	lea    rdx,[rsp+0x28]
   1400016e5:	call   QWORD PTR [rip+0xab15]        # 0x14000c200
   1400016eb:	test   al,al
   1400016ed:	je     0x140001597
   1400016f3:	mov    rcx,QWORD PTR [rsp+0x88]
   1400016fb:	add    rcx,r14
   1400016fe:	mov    QWORD PTR [rsp+0x30],rcx
   140001703:	lea    rcx,[rbx+0x48]
   140001707:	lea    rdx,[rsp+0x30]
   14000170c:	call   0x140001c14
   140001711:	mov    rcx,QWORD PTR [rsp+0x28]
   140001716:	mov    QWORD PTR [rax],rcx
   140001719:	lea    rcx,[rbx+0x30]
   14000171d:	lea    rdx,[rsp+0x28]
   140001722:	call   0x140001b6c
   140001727:	mov    rdx,QWORD PTR [rsp+0x88]
   14000172f:	add    rdx,r14
   140001732:	mov    QWORD PTR [rax],rdx
   140001735:	inc    edi
   140001737:	jmp    0x1400016c5
   140001739:	inc    esi
   14000173b:	jmp    0x1400015e2
   140001740:	mov    rbx,QWORD PTR [rsp+0x70]
   140001745:	jmp    0x14000174b
   140001747:	mov    BYTE PTR [rbx+0x78],0x1
   14000174b:	mov    eax,DWORD PTR [rbx+0x7c]
   14000174e:	add    rsp,0x48
   140001752:	pop    r14
   140001754:	pop    rdi
   140001755:	pop    rsi
   140001756:	pop    rbx
   140001757:	ret    
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	mov    rax,rsp
   140001763:	mov    QWORD PTR [rax+0x8],rcx
   140001767:	push   rbp
   140001768:	push   rsi
   140001769:	push   rdi
   14000176a:	push   r14
   14000176c:	push   r15
   14000176e:	sub    rsp,0x40
   140001772:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000177a:	mov    QWORD PTR [rax+0x18],rbx
   14000177e:	mov    rbp,rcx
   140001781:	mov    rax,QWORD PTR [rcx+0x20]
   140001785:	mov    rbx,QWORD PTR [rax]
   140001788:	xor    r15d,r15d
   14000178b:	cmp    rbx,rax
   14000178e:	je     0x1400017f0
   140001790:	mov    rcx,QWORD PTR [rbx+0x20]
   140001794:	call   QWORD PTR [rip+0xaa56]        # 0x14000c1f0
   14000179a:	cmp    BYTE PTR [rbx+0x29],r15b
   14000179e:	je     0x1400017b6
   1400017a0:	mov    QWORD PTR [rsp+0x20],r15
   1400017a5:	xor    r9d,r9d
   1400017a8:	xor    r8d,r8d
   1400017ab:	xor    edx,edx
   1400017ad:	xor    ecx,ecx
   1400017af:	call   0x14000a0c4
   1400017b4:	jmp    0x1400017ea
   1400017b6:	mov    rax,QWORD PTR [rbx+0x10]
   1400017ba:	cmp    BYTE PTR [rax+0x29],r15b
   1400017be:	jne    0x1400017ce
   1400017c0:	mov    rbx,rax
   1400017c3:	mov    rax,QWORD PTR [rax]
   1400017c6:	cmp    BYTE PTR [rax+0x29],r15b
   1400017ca:	je     0x1400017c0
   1400017cc:	jmp    0x1400017ea
   1400017ce:	mov    rax,QWORD PTR [rbx+0x8]
   1400017d2:	jmp    0x1400017e1
   1400017d4:	cmp    rbx,QWORD PTR [rax+0x10]
   1400017d8:	jne    0x1400017e7
   1400017da:	mov    rbx,rax
   1400017dd:	mov    rax,QWORD PTR [rax+0x8]
   1400017e1:	cmp    BYTE PTR [rax+0x29],r15b
   1400017e5:	je     0x1400017d4
   1400017e7:	mov    rbx,rax
   1400017ea:	cmp    rbx,QWORD PTR [rbp+0x20]
   1400017ee:	jne    0x140001790
   1400017f0:	mov    rax,QWORD PTR [rbp+0x50]
   1400017f4:	mov    rbx,QWORD PTR [rax]
   1400017f7:	cmp    rbx,rax
   1400017fa:	je     0x14000185c
   1400017fc:	mov    rcx,QWORD PTR [rbx+0x20]
   140001800:	call   QWORD PTR [rip+0xa9ea]        # 0x14000c1f0
   140001806:	cmp    BYTE PTR [rbx+0x29],r15b
   14000180a:	je     0x140001822
   14000180c:	mov    QWORD PTR [rsp+0x20],r15
   140001811:	xor    r9d,r9d
   140001814:	xor    r8d,r8d
   140001817:	xor    edx,edx
   140001819:	xor    ecx,ecx
   14000181b:	call   0x14000a0c4
   140001820:	jmp    0x140001856
   140001822:	mov    rax,QWORD PTR [rbx+0x10]
   140001826:	cmp    BYTE PTR [rax+0x29],r15b
   14000182a:	jne    0x14000183a
   14000182c:	mov    rbx,rax
   14000182f:	mov    rax,QWORD PTR [rax]
   140001832:	cmp    BYTE PTR [rax+0x29],r15b
   140001836:	je     0x14000182c
   140001838:	jmp    0x140001856
   14000183a:	mov    rax,QWORD PTR [rbx+0x8]
   14000183e:	jmp    0x14000184d
   140001840:	cmp    rbx,QWORD PTR [rax+0x10]
   140001844:	jne    0x140001853
   140001846:	mov    rbx,rax
   140001849:	mov    rax,QWORD PTR [rax+0x8]
   14000184d:	cmp    BYTE PTR [rax+0x29],r15b
   140001851:	je     0x140001840
   140001853:	mov    rbx,rax
   140001856:	cmp    rbx,QWORD PTR [rbp+0x50]
   14000185a:	jne    0x1400017fc
   14000185c:	mov    rax,QWORD PTR [rbp+0x68]
   140001860:	mov    rbx,QWORD PTR [rax]
   140001863:	cmp    rbx,rax
   140001866:	je     0x1400018cb
   140001868:	mov    rcx,QWORD PTR [rbx+0x20]
   14000186c:	mov    rcx,QWORD PTR [rcx]
   14000186f:	call   QWORD PTR [rip+0xa97b]        # 0x14000c1f0
   140001875:	cmp    BYTE PTR [rbx+0x29],r15b
   140001879:	je     0x140001891
   14000187b:	mov    QWORD PTR [rsp+0x20],r15
   140001880:	xor    r9d,r9d
   140001883:	xor    r8d,r8d
   140001886:	xor    edx,edx
   140001888:	xor    ecx,ecx
   14000188a:	call   0x14000a0c4
   14000188f:	jmp    0x1400018c5
   140001891:	mov    rax,QWORD PTR [rbx+0x10]
   140001895:	cmp    BYTE PTR [rax+0x29],r15b
   140001899:	jne    0x1400018a9
   14000189b:	mov    rbx,rax
   14000189e:	mov    rax,QWORD PTR [rax]
   1400018a1:	cmp    BYTE PTR [rax+0x29],r15b
   1400018a5:	je     0x14000189b
   1400018a7:	jmp    0x1400018c5
   1400018a9:	mov    rax,QWORD PTR [rbx+0x8]
   1400018ad:	jmp    0x1400018bc
   1400018af:	cmp    rbx,QWORD PTR [rax+0x10]
   1400018b3:	jne    0x1400018c2
   1400018b5:	mov    rbx,rax
   1400018b8:	mov    rax,QWORD PTR [rax+0x8]
   1400018bc:	cmp    BYTE PTR [rax+0x29],r15b
   1400018c0:	je     0x1400018af
   1400018c2:	mov    rbx,rax
   1400018c5:	cmp    rbx,QWORD PTR [rbp+0x68]
   1400018c9:	jne    0x140001868
   1400018cb:	mov    rcx,QWORD PTR [rbp+0x88]
   1400018d2:	test   rcx,rcx
   1400018d5:	je     0x1400018dd
   1400018d7:	call   QWORD PTR [rip+0xa913]        # 0x14000c1f0
   1400018dd:	mov    rcx,QWORD PTR [rbp+0x80]
   1400018e4:	test   rcx,rcx
   1400018e7:	je     0x1400018ef
   1400018e9:	call   QWORD PTR [rip+0xa7a9]        # 0x14000c098
   1400018ef:	lea    r14,[rbp+0x60]
   1400018f3:	mov    QWORD PTR [rsp+0x78],r14
   1400018f8:	mov    rdi,QWORD PTR [r14+0x8]
   1400018fc:	mov    rbx,QWORD PTR [rdi]
   1400018ff:	cmp    rbx,rbx
   140001902:	jne    0x1400019be
   140001908:	cmp    rdi,rdi
   14000190b:	jne    0x1400019be
   140001911:	mov    rdi,QWORD PTR [rdi+0x8]
   140001915:	mov    rbx,rdi
   140001918:	cmp    BYTE PTR [rdi+0x29],r15b
   14000191c:	jne    0x14000193e
   14000191e:	mov    rdx,QWORD PTR [rbx+0x10]
   140001922:	mov    rcx,r14
   140001925:	call   0x140002f58
   14000192a:	mov    rbx,QWORD PTR [rbx]
   14000192d:	mov    rcx,rdi
   140001930:	call   0x140009d48
   140001935:	mov    rdi,rbx
   140001938:	cmp    BYTE PTR [rbx+0x29],r15b
   14000193c:	je     0x14000191e
   14000193e:	mov    rax,QWORD PTR [r14+0x8]
   140001942:	mov    QWORD PTR [rax+0x8],rax
   140001946:	mov    QWORD PTR [r14+0x10],r15
   14000194a:	mov    rax,QWORD PTR [r14+0x8]
   14000194e:	mov    QWORD PTR [rax],rax
   140001951:	mov    rax,QWORD PTR [r14+0x8]
   140001955:	mov    QWORD PTR [rax+0x10],rax
   140001959:	jmp    0x1400019c3
   14000195b:	mov    rsi,rbx
   14000195e:	cmp    BYTE PTR [rbx+0x29],r15b
   140001962:	je     0x14000197a
   140001964:	mov    QWORD PTR [rsp+0x20],r15
   140001969:	xor    r9d,r9d
   14000196c:	xor    r8d,r8d
   14000196f:	xor    edx,edx
   140001971:	xor    ecx,ecx
   140001973:	call   0x14000a0c4
   140001978:	jmp    0x1400019ae
   14000197a:	mov    rax,QWORD PTR [rbx+0x10]
   14000197e:	cmp    BYTE PTR [rax+0x29],r15b
   140001982:	jne    0x140001992
   140001984:	mov    rbx,rax
   140001987:	mov    rax,QWORD PTR [rax]
   14000198a:	cmp    BYTE PTR [rax+0x29],r15b
   14000198e:	je     0x140001984
   140001990:	jmp    0x1400019ae
   140001992:	mov    rax,QWORD PTR [rbx+0x8]
   140001996:	jmp    0x1400019a5
   140001998:	cmp    rbx,QWORD PTR [rax+0x10]
   14000199c:	jne    0x1400019ab
   14000199e:	mov    rbx,rax
   1400019a1:	mov    rax,QWORD PTR [rax+0x8]
   1400019a5:	cmp    BYTE PTR [rax+0x29],r15b
   1400019a9:	je     0x140001998
   1400019ab:	mov    rbx,rax
   1400019ae:	mov    r8,rsi
   1400019b1:	lea    rdx,[rsp+0x78]
   1400019b6:	mov    rcx,r14
   1400019b9:	call   0x140002a70
   1400019be:	cmp    rbx,rdi
   1400019c1:	jne    0x14000195b
   1400019c3:	mov    rcx,QWORD PTR [r14+0x8]
   1400019c7:	call   0x140009d48
   1400019cc:	mov    QWORD PTR [r14+0x8],r15
   1400019d0:	mov    QWORD PTR [r14+0x10],r15
   1400019d4:	lea    rcx,[rbp+0x48]
   1400019d8:	call   0x1400014cc
   1400019dd:	nop
   1400019de:	lea    rcx,[rbp+0x30]
   1400019e2:	call   0x1400014cc
   1400019e7:	nop
   1400019e8:	lea    rcx,[rbp+0x18]
   1400019ec:	call   0x1400014cc
   1400019f1:	nop
   1400019f2:	mov    rcx,rbp
   1400019f5:	mov    rbx,QWORD PTR [rsp+0x80]
   1400019fd:	add    rsp,0x40
   140001a01:	pop    r15
   140001a03:	pop    r14
   140001a05:	pop    rdi
   140001a06:	pop    rsi
   140001a07:	pop    rbp
   140001a08:	jmp    0x1400014cc
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	int3   
   140001a11:	int3   
   140001a12:	int3   
   140001a13:	int3   
   140001a14:	mov    QWORD PTR [rsp+0x8],rbx
   140001a19:	mov    QWORD PTR [rsp+0x10],rdx
   140001a1e:	push   rdi
   140001a1f:	sub    rsp,0x20
   140001a23:	cmp    BYTE PTR [rcx+0x78],0x0
   140001a27:	mov    rdi,r8
   140001a2a:	mov    rbx,rcx
   140001a2d:	jne    0x140001a3f
   140001a2f:	mov    eax,DWORD PTR [rcx+0x7c]
   140001a32:	test   eax,eax
   140001a34:	jne    0x140001a63
   140001a36:	call   0x140001554
   140001a3b:	test   eax,eax
   140001a3d:	jne    0x140001a63
   140001a3f:	xor    eax,eax
   140001a41:	test   eax,eax
   140001a43:	jne    0x140001a63
   140001a45:	lea    rcx,[rbx+0x60]
   140001a49:	lea    rdx,[rsp+0x38]
   140001a4e:	call   0x140001c14
   140001a53:	mov    rcx,QWORD PTR [rax]
   140001a56:	mov    QWORD PTR [rdi],rcx
   140001a59:	neg    rcx
   140001a5c:	sbb    eax,eax
   140001a5e:	not    eax
   140001a60:	and    eax,0x57
   140001a63:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a68:	add    rsp,0x20
   140001a6c:	pop    rdi
   140001a6d:	ret    
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	int3   
   140001a71:	int3   
   140001a72:	int3   
   140001a73:	int3   
   140001a74:	mov    QWORD PTR [rsp+0x8],rbx
   140001a79:	mov    QWORD PTR [rsp+0x10],rdx
   140001a7e:	push   rdi
   140001a7f:	sub    rsp,0x20
   140001a83:	cmp    BYTE PTR [rcx+0x78],0x0
   140001a87:	mov    rdi,r8
   140001a8a:	mov    rbx,rcx
   140001a8d:	jne    0x140001a9f
   140001a8f:	mov    eax,DWORD PTR [rcx+0x7c]
   140001a92:	test   eax,eax
   140001a94:	jne    0x140001ac3
   140001a96:	call   0x140001554
   140001a9b:	test   eax,eax
   140001a9d:	jne    0x140001ac3
   140001a9f:	xor    eax,eax
   140001aa1:	test   eax,eax
   140001aa3:	jne    0x140001ac3
   140001aa5:	lea    rcx,[rbx+0x18]
   140001aa9:	lea    rdx,[rsp+0x38]
   140001aae:	call   0x140001c14
   140001ab3:	mov    rcx,QWORD PTR [rax]
   140001ab6:	mov    QWORD PTR [rdi],rcx
   140001ab9:	neg    rcx
   140001abc:	sbb    eax,eax
   140001abe:	not    eax
   140001ac0:	and    eax,0x57
   140001ac3:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ac8:	add    rsp,0x20
   140001acc:	pop    rdi
   140001acd:	ret    
   140001ace:	int3   
   140001acf:	int3   
   140001ad0:	int3   
   140001ad1:	int3   
   140001ad2:	int3   
   140001ad3:	int3   
   140001ad4:	mov    QWORD PTR [rsp+0x8],rbx
   140001ad9:	mov    QWORD PTR [rsp+0x10],rdx
   140001ade:	push   rdi
   140001adf:	sub    rsp,0x20
   140001ae3:	cmp    BYTE PTR [rcx+0x78],0x0
   140001ae7:	mov    rdi,r8
   140001aea:	mov    rbx,rcx
   140001aed:	jne    0x140001aff
   140001aef:	mov    eax,DWORD PTR [rcx+0x7c]
   140001af2:	test   eax,eax
   140001af4:	jne    0x140001b23
   140001af6:	call   0x140001554
   140001afb:	test   eax,eax
   140001afd:	jne    0x140001b23
   140001aff:	xor    eax,eax
   140001b01:	test   eax,eax
   140001b03:	jne    0x140001b23
   140001b05:	lea    rcx,[rbx+0x48]
   140001b09:	lea    rdx,[rsp+0x38]
   140001b0e:	call   0x140001c14
   140001b13:	mov    rcx,QWORD PTR [rax]
   140001b16:	mov    QWORD PTR [rdi],rcx
   140001b19:	neg    rcx
   140001b1c:	sbb    eax,eax
   140001b1e:	not    eax
   140001b20:	and    eax,0x57
   140001b23:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b28:	add    rsp,0x20
   140001b2c:	pop    rdi
   140001b2d:	ret    
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	int3   
   140001b31:	int3   
   140001b32:	int3   
   140001b33:	int3   
   140001b34:	rex push rbx
   140001b36:	sub    rsp,0x20
   140001b3a:	cmp    QWORD PTR [rcx+0x20],0x10
   140001b3f:	mov    rbx,rcx
   140001b42:	jb     0x140001b4d
   140001b44:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b48:	call   0x140009d48
   140001b4d:	and    QWORD PTR [rbx+0x18],0x0
   140001b52:	mov    QWORD PTR [rbx+0x20],0xf
   140001b5a:	mov    BYTE PTR [rbx+0x8],0x0
   140001b5e:	add    rsp,0x20
   140001b62:	pop    rbx
   140001b63:	ret    
   140001b64:	int3   
   140001b65:	int3   
   140001b66:	int3   
   140001b67:	int3   
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	mov    QWORD PTR [rsp+0x10],rbx
   140001b71:	mov    QWORD PTR [rsp+0x18],rsi
   140001b76:	mov    QWORD PTR [rsp+0x20],rdi
   140001b7b:	push   r14
   140001b7d:	sub    rsp,0x30
   140001b81:	mov    rbx,QWORD PTR [rcx+0x8]
   140001b85:	mov    r14,rdx
   140001b88:	mov    rsi,rcx
   140001b8b:	mov    rdi,QWORD PTR [rbx+0x8]
   140001b8f:	jmp    0x140001bae
   140001b91:	mov    rdx,QWORD PTR [r14]
   140001b94:	mov    rcx,QWORD PTR [rdi+0x18]
   140001b98:	call   QWORD PTR [rip+0xa922]        # 0x14000c4c0
   140001b9e:	test   eax,eax
   140001ba0:	jns    0x140001ba8
   140001ba2:	mov    rdi,QWORD PTR [rdi+0x10]
   140001ba6:	jmp    0x140001bae
   140001ba8:	mov    rbx,rdi
   140001bab:	mov    rdi,QWORD PTR [rdi]
   140001bae:	cmp    BYTE PTR [rdi+0x29],0x0
   140001bb2:	je     0x140001b91
   140001bb4:	cmp    rbx,QWORD PTR [rsi+0x8]
   140001bb8:	je     0x140001bcb
   140001bba:	mov    rdx,QWORD PTR [rbx+0x18]
   140001bbe:	mov    rcx,QWORD PTR [r14]
   140001bc1:	call   QWORD PTR [rip+0xa8f9]        # 0x14000c4c0
   140001bc7:	test   eax,eax
   140001bc9:	jns    0x140001bf1
   140001bcb:	mov    rax,QWORD PTR [r14]
   140001bce:	lea    r9,[rsp+0x20]
   140001bd3:	and    QWORD PTR [rsp+0x28],0x0
   140001bd9:	lea    rdx,[rsp+0x40]
   140001bde:	mov    r8,rbx
   140001be1:	mov    QWORD PTR [rsp+0x20],rax
   140001be6:	mov    rcx,rsi
   140001be9:	call   0x140001e44
   140001bee:	mov    rbx,QWORD PTR [rax]
   140001bf1:	mov    rsi,QWORD PTR [rsp+0x50]
   140001bf6:	lea    rax,[rbx+0x20]
   140001bfa:	mov    rbx,QWORD PTR [rsp+0x48]
   140001bff:	mov    rdi,QWORD PTR [rsp+0x58]
   140001c04:	add    rsp,0x30
   140001c08:	pop    r14
   140001c0a:	ret    
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	int3   
   140001c11:	int3   
   140001c12:	int3   
   140001c13:	int3   
   140001c14:	mov    QWORD PTR [rsp+0x10],rbx
   140001c19:	mov    QWORD PTR [rsp+0x18],rbp
   140001c1e:	push   rsi
   140001c1f:	push   rdi
   140001c20:	push   r14
   140001c22:	sub    rsp,0x30
   140001c26:	mov    rsi,QWORD PTR [rcx+0x8]
   140001c2a:	mov    r14,rdx
   140001c2d:	mov    rbp,rcx
   140001c30:	mov    rbx,rsi
   140001c33:	mov    rdi,QWORD PTR [rsi+0x8]
   140001c37:	jmp    0x140001c5b
   140001c39:	mov    rdx,QWORD PTR [r14]
   140001c3c:	mov    r8d,0x10
   140001c42:	mov    rcx,QWORD PTR [rdi+0x18]
   140001c46:	call   0x14000aaa6
   140001c4b:	test   eax,eax
   140001c4d:	jns    0x140001c55
   140001c4f:	mov    rdi,QWORD PTR [rdi+0x10]
   140001c53:	jmp    0x140001c5b
   140001c55:	mov    rbx,rdi
   140001c58:	mov    rdi,QWORD PTR [rdi]
   140001c5b:	cmp    BYTE PTR [rdi+0x29],0x0
   140001c5f:	je     0x140001c39
   140001c61:	cmp    rbx,rsi
   140001c64:	je     0x140001c7c
   140001c66:	mov    rdx,QWORD PTR [rbx+0x18]
   140001c6a:	mov    r8d,0x10
   140001c70:	mov    rcx,QWORD PTR [r14]
   140001c73:	call   0x14000aaa6
   140001c78:	test   eax,eax
   140001c7a:	jns    0x140001ca2
   140001c7c:	mov    rax,QWORD PTR [r14]
   140001c7f:	lea    r9,[rsp+0x20]
   140001c84:	and    QWORD PTR [rsp+0x28],0x0
   140001c8a:	lea    rdx,[rsp+0x50]
   140001c8f:	mov    r8,rbx
   140001c92:	mov    QWORD PTR [rsp+0x20],rax
   140001c97:	mov    rcx,rbp
   140001c9a:	call   0x140002078
   140001c9f:	mov    rbx,QWORD PTR [rax]
   140001ca2:	mov    rbp,QWORD PTR [rsp+0x60]
   140001ca7:	lea    rax,[rbx+0x20]
   140001cab:	mov    rbx,QWORD PTR [rsp+0x58]
   140001cb0:	add    rsp,0x30
   140001cb4:	pop    r14
   140001cb6:	pop    rdi
   140001cb7:	pop    rsi
   140001cb8:	ret    
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	mov    rax,rsp
   140001cc3:	mov    QWORD PTR [rax+0x8],rbx
   140001cc7:	mov    QWORD PTR [rax+0x10],rbp
   140001ccb:	mov    QWORD PTR [rax+0x18],rsi
   140001ccf:	mov    QWORD PTR [rax+0x20],rdi
   140001cd3:	push   r14
   140001cd5:	sub    rsp,0x20
   140001cd9:	mov    r14,r9
   140001cdc:	mov    rbp,r8
   140001cdf:	mov    rsi,rdx
   140001ce2:	mov    rbx,rcx
   140001ce5:	cmp    QWORD PTR [rdx+0x18],r8
   140001ce9:	jae    0x140001cf0
   140001ceb:	call   0x140009c34
   140001cf0:	mov    rdi,QWORD PTR [rsi+0x18]
   140001cf4:	sub    rdi,rbp
   140001cf7:	cmp    r14,rdi
   140001cfa:	cmovb  rdi,r14
   140001cfe:	cmp    rbx,rsi
   140001d01:	jne    0x140001d25
   140001d03:	lea    rdx,[rdi+rbp*1]
   140001d07:	or     r8,0xffffffffffffffff
   140001d0b:	mov    rcx,rbx
   140001d0e:	call   0x1400022b4
   140001d13:	mov    r8,rbp
   140001d16:	xor    edx,edx
   140001d18:	mov    rcx,rbx
   140001d1b:	call   0x1400022b4
   140001d20:	jmp    0x140001db2
   140001d25:	cmp    rdi,0xfffffffffffffffe
   140001d29:	jbe    0x140001d30
   140001d2b:	call   0x140009bd8
   140001d30:	xor    r14d,r14d
   140001d33:	cmp    QWORD PTR [rbx+0x20],rdi
   140001d37:	jae    0x140001d4a
   140001d39:	mov    r8,QWORD PTR [rbx+0x18]
   140001d3d:	mov    rdx,rdi
   140001d40:	mov    rcx,rbx
   140001d43:	call   0x1400028d4
   140001d48:	jmp    0x140001d67
   140001d4a:	test   rdi,rdi
   140001d4d:	jne    0x140001d6c
   140001d4f:	cmp    QWORD PTR [rbx+0x20],0x10
   140001d54:	mov    QWORD PTR [rbx+0x18],r14
   140001d58:	jb     0x140001d60
   140001d5a:	mov    rax,QWORD PTR [rbx+0x8]
   140001d5e:	jmp    0x140001d64
   140001d60:	lea    rax,[rbx+0x8]
   140001d64:	mov    BYTE PTR [rax],r14b
   140001d67:	test   rdi,rdi
   140001d6a:	je     0x140001db2
   140001d6c:	cmp    QWORD PTR [rsi+0x20],0x10
   140001d71:	jb     0x140001d79
   140001d73:	mov    rax,QWORD PTR [rsi+0x8]
   140001d77:	jmp    0x140001d7d
   140001d79:	lea    rax,[rsi+0x8]
   140001d7d:	mov    rdx,QWORD PTR [rbx+0x20]
   140001d81:	lea    rsi,[rbx+0x8]
   140001d85:	cmp    rdx,0x10
   140001d89:	jb     0x140001d90
   140001d8b:	mov    rcx,QWORD PTR [rsi]
   140001d8e:	jmp    0x140001d93
   140001d90:	mov    rcx,rsi
   140001d93:	lea    r8,[rax+rbp*1]
   140001d97:	mov    r9,rdi
   140001d9a:	call   QWORD PTR [rip+0xa610]        # 0x14000c3b0
   140001da0:	cmp    QWORD PTR [rbx+0x20],0x10
   140001da5:	mov    QWORD PTR [rbx+0x18],rdi
   140001da9:	jb     0x140001dae
   140001dab:	mov    rsi,QWORD PTR [rsi]
   140001dae:	mov    BYTE PTR [rsi+rdi*1],r14b
   140001db2:	mov    rbp,QWORD PTR [rsp+0x38]
   140001db7:	mov    rax,rbx
   140001dba:	mov    rbx,QWORD PTR [rsp+0x30]
   140001dbf:	mov    rsi,QWORD PTR [rsp+0x40]
   140001dc4:	mov    rdi,QWORD PTR [rsp+0x48]
   140001dc9:	add    rsp,0x20
   140001dcd:	pop    r14
   140001dcf:	ret    
   140001dd0:	int3   
   140001dd1:	int3   
   140001dd2:	int3   
   140001dd3:	int3   
   140001dd4:	int3   
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	mov    QWORD PTR [rsp+0x8],rbx
   140001ddd:	mov    QWORD PTR [rsp+0x10],rsi
   140001de2:	push   rdi
   140001de3:	sub    rsp,0x20
   140001de7:	mov    rdi,r8
   140001dea:	mov    rbx,rcx
   140001ded:	test   dl,dl
   140001def:	je     0x140001e1c
   140001df1:	mov    edx,0x10
   140001df6:	cmp    QWORD PTR [rcx+0x20],rdx
   140001dfa:	jb     0x140001e1c
   140001dfc:	add    rcx,0x8
   140001e00:	mov    rsi,QWORD PTR [rcx]
   140001e03:	test   r8,r8
   140001e06:	je     0x140001e14
   140001e08:	mov    r9,r8
   140001e0b:	mov    r8,rsi
   140001e0e:	call   QWORD PTR [rip+0xa59c]        # 0x14000c3b0
   140001e14:	mov    rcx,rsi
   140001e17:	call   0x140009d48
   140001e1c:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e21:	mov    QWORD PTR [rbx+0x20],0xf
   140001e29:	mov    QWORD PTR [rbx+0x18],rdi
   140001e2d:	mov    BYTE PTR [rbx+rdi*1+0x8],0x0
   140001e32:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e37:	add    rsp,0x20
   140001e3b:	pop    rdi
   140001e3c:	ret    
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	int3   
   140001e41:	int3   
   140001e42:	int3   
   140001e43:	int3   
   140001e44:	mov    rax,rsp
   140001e47:	mov    QWORD PTR [rax+0x8],rbx
   140001e4b:	mov    QWORD PTR [rax+0x10],rbp
   140001e4f:	mov    QWORD PTR [rax+0x20],rsi
   140001e53:	mov    QWORD PTR [rax+0x18],r8
   140001e57:	push   rdi
   140001e58:	push   r14
   140001e5a:	push   r15
   140001e5c:	sub    rsp,0x40
   140001e60:	xor    r15d,r15d
   140001e63:	mov    r14,r9
   140001e66:	mov    rsi,rdx
   140001e69:	mov    rbp,rcx
   140001e6c:	cmp    QWORD PTR [rcx+0x10],r15
   140001e70:	jne    0x140001e87
   140001e72:	mov    QWORD PTR [rax-0x38],r9
   140001e76:	mov    r9,QWORD PTR [rcx+0x8]
   140001e7a:	mov    r8b,0x1
   140001e7d:	call   0x140002474
   140001e82:	jmp    0x140002054
   140001e87:	mov    rax,QWORD PTR [rcx+0x8]
   140001e8b:	cmp    r8,QWORD PTR [rax]
   140001e8e:	jne    0x140001eba
   140001e90:	mov    rdx,QWORD PTR [r8+0x18]
   140001e94:	mov    rcx,QWORD PTR [r9]
   140001e97:	call   QWORD PTR [rip+0xa623]        # 0x14000c4c0
   140001e9d:	test   eax,eax
   140001e9f:	jns    0x14000203e
   140001ea5:	mov    r9,QWORD PTR [rsp+0x70]
   140001eaa:	mov    r8b,0x1
   140001ead:	mov    QWORD PTR [rsp+0x20],r14
   140001eb2:	mov    rdx,rsi
   140001eb5:	mov    rcx,rbp
   140001eb8:	jmp    0x140001e7d
   140001eba:	cmp    r8,rax
   140001ebd:	jne    0x140001ee5
   140001ebf:	mov    rax,QWORD PTR [rax+0x10]
   140001ec3:	mov    rdx,QWORD PTR [r9]
   140001ec6:	mov    rcx,QWORD PTR [rax+0x18]
   140001eca:	call   QWORD PTR [rip+0xa5f0]        # 0x14000c4c0
   140001ed0:	test   eax,eax
   140001ed2:	jns    0x14000203e
   140001ed8:	mov    r9,QWORD PTR [rbp+0x8]
   140001edc:	xor    r8d,r8d
   140001edf:	mov    r9,QWORD PTR [r9+0x10]
   140001ee3:	jmp    0x140001ead
   140001ee5:	mov    rdx,QWORD PTR [r8+0x18]
   140001ee9:	mov    rcx,QWORD PTR [r9]
   140001eec:	call   QWORD PTR [rip+0xa5ce]        # 0x14000c4c0
   140001ef2:	test   eax,eax
   140001ef4:	jns    0x140001f87
   140001efa:	mov    rax,QWORD PTR [rsp+0x70]
   140001eff:	cmp    BYTE PTR [rax+0x29],r15b
   140001f03:	je     0x140001f0b
   140001f05:	mov    rbx,QWORD PTR [rax+0x10]
   140001f09:	jmp    0x140001f4c
   140001f0b:	mov    rbx,QWORD PTR [rax]
   140001f0e:	cmp    BYTE PTR [rbx+0x29],r15b
   140001f12:	jne    0x140001f29
   140001f14:	mov    rax,QWORD PTR [rbx+0x10]
   140001f18:	jmp    0x140001f21
   140001f1a:	mov    rbx,rax
   140001f1d:	mov    rax,QWORD PTR [rax+0x10]
   140001f21:	cmp    BYTE PTR [rax+0x29],r15b
   140001f25:	je     0x140001f1a
   140001f27:	jmp    0x140001f4c
   140001f29:	mov    rcx,QWORD PTR [rax+0x8]
   140001f2d:	jmp    0x140001f3b
   140001f2f:	cmp    rax,QWORD PTR [rcx]
   140001f32:	jne    0x140001f41
   140001f34:	mov    rax,rcx
   140001f37:	mov    rcx,QWORD PTR [rcx+0x8]
   140001f3b:	cmp    BYTE PTR [rcx+0x29],r15b
   140001f3f:	je     0x140001f2f
   140001f41:	cmp    BYTE PTR [rax+0x29],r15b
   140001f45:	mov    rbx,rax
   140001f48:	cmove  rbx,rcx
   140001f4c:	mov    rdx,QWORD PTR [r14]
   140001f4f:	mov    rcx,QWORD PTR [rbx+0x18]
   140001f53:	call   QWORD PTR [rip+0xa567]        # 0x14000c4c0
   140001f59:	test   eax,eax
   140001f5b:	jns    0x140001f87
   140001f5d:	mov    rax,QWORD PTR [rbx+0x10]
   140001f61:	mov    rdx,rsi
   140001f64:	mov    QWORD PTR [rsp+0x20],r14
   140001f69:	mov    rcx,rbp
   140001f6c:	cmp    BYTE PTR [rax+0x29],r15b
   140001f70:	je     0x140001f7d
   140001f72:	mov    r9,rbx
   140001f75:	xor    r8d,r8d
   140001f78:	jmp    0x140001e7d
   140001f7d:	mov    r9,QWORD PTR [rsp+0x70]
   140001f82:	jmp    0x140001e7a
   140001f87:	mov    rax,QWORD PTR [rsp+0x70]
   140001f8c:	mov    rdx,QWORD PTR [r14]
   140001f8f:	mov    rcx,QWORD PTR [rax+0x18]
   140001f93:	call   QWORD PTR [rip+0xa527]        # 0x14000c4c0
   140001f99:	test   eax,eax
   140001f9b:	jns    0x14000203e
   140001fa1:	mov    r9,QWORD PTR [rsp+0x70]
   140001fa6:	mov    rdi,QWORD PTR [rbp+0x8]
   140001faa:	mov    rbx,r9
   140001fad:	cmp    BYTE PTR [r9+0x29],r15b
   140001fb1:	je     0x140001fce
   140001fb3:	xor    r9d,r9d
   140001fb6:	mov    QWORD PTR [rsp+0x20],r15
   140001fbb:	xor    r8d,r8d
   140001fbe:	xor    edx,edx
   140001fc0:	xor    ecx,ecx
   140001fc2:	call   0x14000a0c4
   140001fc7:	mov    r9,QWORD PTR [rsp+0x70]
   140001fcc:	jmp    0x140002002
   140001fce:	mov    rax,QWORD PTR [r9+0x10]
   140001fd2:	cmp    BYTE PTR [rax+0x29],r15b
   140001fd6:	jne    0x140001fe6
   140001fd8:	mov    rbx,rax
   140001fdb:	mov    rax,QWORD PTR [rax]
   140001fde:	cmp    BYTE PTR [rax+0x29],r15b
   140001fe2:	je     0x140001fd8
   140001fe4:	jmp    0x140002002
   140001fe6:	mov    rax,QWORD PTR [r9+0x8]
   140001fea:	jmp    0x140001ff9
   140001fec:	cmp    rbx,QWORD PTR [rax+0x10]
   140001ff0:	jne    0x140001fff
   140001ff2:	mov    rbx,rax
   140001ff5:	mov    rax,QWORD PTR [rax+0x8]
   140001ff9:	cmp    BYTE PTR [rax+0x29],r15b
   140001ffd:	je     0x140001fec
   140001fff:	mov    rbx,rax
   140002002:	cmp    rbx,rdi
   140002005:	je     0x14000201d
   140002007:	mov    rdx,QWORD PTR [rbx+0x18]
   14000200b:	mov    rcx,QWORD PTR [r14]
   14000200e:	call   QWORD PTR [rip+0xa4ac]        # 0x14000c4c0
   140002014:	test   eax,eax
   140002016:	jns    0x14000203e
   140002018:	mov    r9,QWORD PTR [rsp+0x70]
   14000201d:	mov    rax,QWORD PTR [r9+0x10]
   140002021:	mov    rdx,rsi
   140002024:	mov    QWORD PTR [rsp+0x20],r14
   140002029:	mov    rcx,rbp
   14000202c:	cmp    BYTE PTR [rax+0x29],r15b
   140002030:	jne    0x140001f75
   140002036:	mov    r9,rbx
   140002039:	jmp    0x140001e7a
   14000203e:	mov    r8,r14
   140002041:	lea    rdx,[rsp+0x30]
   140002046:	mov    rcx,rbp
   140002049:	call   0x140002364
   14000204e:	mov    rcx,QWORD PTR [rax]
   140002051:	mov    QWORD PTR [rsi],rcx
   140002054:	mov    rbx,QWORD PTR [rsp+0x60]
   140002059:	mov    rax,rsi
   14000205c:	mov    rsi,QWORD PTR [rsp+0x78]
   140002061:	mov    rbp,QWORD PTR [rsp+0x68]
   140002066:	add    rsp,0x40
   14000206a:	pop    r15
   14000206c:	pop    r14
   14000206e:	pop    rdi
   14000206f:	ret    
   140002070:	int3   
   140002071:	int3   
   140002072:	int3   
   140002073:	int3   
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	mov    rax,rsp
   14000207b:	mov    QWORD PTR [rax+0x8],rbx
   14000207f:	mov    QWORD PTR [rax+0x10],rbp
   140002083:	mov    QWORD PTR [rax+0x20],rsi
   140002087:	mov    QWORD PTR [rax+0x18],r8
   14000208b:	push   rdi
   14000208c:	push   r12
   14000208e:	push   r13
   140002090:	push   r14
   140002092:	push   r15
   140002094:	sub    rsp,0x40
   140002098:	xor    r13d,r13d
   14000209b:	mov    r15,r9
   14000209e:	mov    rbx,r8
   1400020a1:	mov    r14,rdx
   1400020a4:	mov    rbp,rcx
   1400020a7:	cmp    QWORD PTR [rcx+0x10],r13
   1400020ab:	jne    0x1400020c2
   1400020ad:	mov    QWORD PTR [rax-0x48],r9
   1400020b1:	mov    r9,QWORD PTR [rcx+0x8]
   1400020b5:	mov    r8b,0x1
   1400020b8:	call   0x140002474
   1400020bd:	jmp    0x14000228d
   1400020c2:	mov    rsi,QWORD PTR [rcx+0x8]
   1400020c6:	cmp    rbx,QWORD PTR [rsi]
   1400020c9:	jne    0x1400020f8
   1400020cb:	mov    rdx,QWORD PTR [rbx+0x18]
   1400020cf:	mov    r8d,0x10
   1400020d5:	mov    rcx,QWORD PTR [r9]
   1400020d8:	call   0x14000aaa6
   1400020dd:	test   eax,eax
   1400020df:	jns    0x140002277
   1400020e5:	mov    r8b,0x1
   1400020e8:	mov    r9,rbx
   1400020eb:	mov    QWORD PTR [rsp+0x20],r15
   1400020f0:	mov    rdx,r14
   1400020f3:	mov    rcx,rbp
   1400020f6:	jmp    0x1400020b8
   1400020f8:	cmp    rbx,rsi
   1400020fb:	jne    0x140002120
   1400020fd:	mov    rbx,QWORD PTR [rsi+0x10]
   140002101:	mov    r8d,0x10
   140002107:	mov    rdx,QWORD PTR [r9]
   14000210a:	mov    rcx,QWORD PTR [rbx+0x18]
   14000210e:	call   0x14000aaa6
   140002113:	test   eax,eax
   140002115:	jns    0x140002277
   14000211b:	xor    r8d,r8d
   14000211e:	jmp    0x1400020e8
   140002120:	mov    rdx,QWORD PTR [rbx+0x18]
   140002124:	mov    r12d,0x10
   14000212a:	mov    rcx,QWORD PTR [r9]
   14000212d:	mov    r8d,r12d
   140002130:	call   0x14000aaa6
   140002135:	test   eax,eax
   140002137:	jns    0x1400021c8
   14000213d:	mov    rax,rbx
   140002140:	cmp    BYTE PTR [rbx+0x29],r13b
   140002144:	je     0x14000214c
   140002146:	mov    rdi,QWORD PTR [rbx+0x10]
   14000214a:	jmp    0x14000218d
   14000214c:	mov    rdi,QWORD PTR [rbx]
   14000214f:	cmp    BYTE PTR [rdi+0x29],r13b
   140002153:	jne    0x14000216a
   140002155:	mov    rax,QWORD PTR [rdi+0x10]
   140002159:	jmp    0x140002162
   14000215b:	mov    rdi,rax
   14000215e:	mov    rax,QWORD PTR [rax+0x10]
   140002162:	cmp    BYTE PTR [rax+0x29],r13b
   140002166:	je     0x14000215b
   140002168:	jmp    0x14000218d
   14000216a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000216e:	jmp    0x14000217c
   140002170:	cmp    rax,QWORD PTR [rcx]
   140002173:	jne    0x140002182
   140002175:	mov    rax,rcx
   140002178:	mov    rcx,QWORD PTR [rcx+0x8]
   14000217c:	cmp    BYTE PTR [rcx+0x29],r13b
   140002180:	je     0x140002170
   140002182:	cmp    BYTE PTR [rax+0x29],r13b
   140002186:	mov    rdi,rax
   140002189:	cmove  rdi,rcx
   14000218d:	mov    rdx,QWORD PTR [r15]
   140002190:	mov    r8,r12
   140002193:	mov    rcx,QWORD PTR [rdi+0x18]
   140002197:	call   0x14000aaa6
   14000219c:	test   eax,eax
   14000219e:	jns    0x1400021c8
   1400021a0:	mov    rax,QWORD PTR [rdi+0x10]
   1400021a4:	mov    rdx,r14
   1400021a7:	mov    QWORD PTR [rsp+0x20],r15
   1400021ac:	mov    rcx,rbp
   1400021af:	cmp    BYTE PTR [rax+0x29],r13b
   1400021b3:	je     0x1400021c0
   1400021b5:	mov    r9,rdi
   1400021b8:	xor    r8d,r8d
   1400021bb:	jmp    0x1400020b8
   1400021c0:	mov    r9,rbx
   1400021c3:	jmp    0x1400020b5
   1400021c8:	mov    rdx,QWORD PTR [r15]
   1400021cb:	mov    r8,r12
   1400021ce:	mov    rcx,QWORD PTR [rbx+0x18]
   1400021d2:	call   0x14000aaa6
   1400021d7:	test   eax,eax
   1400021d9:	jns    0x140002277
   1400021df:	mov    rdi,rbx
   1400021e2:	cmp    BYTE PTR [rbx+0x29],r13b
   1400021e6:	je     0x140002206
   1400021e8:	xor    r9d,r9d
   1400021eb:	mov    QWORD PTR [rsp+0x20],r13
   1400021f0:	xor    r8d,r8d
   1400021f3:	xor    edx,edx
   1400021f5:	xor    ecx,ecx
   1400021f7:	call   0x14000a0c4
   1400021fc:	mov    rbx,QWORD PTR [rsp+0x80]
   140002204:	jmp    0x14000223a
   140002206:	mov    rax,QWORD PTR [rbx+0x10]
   14000220a:	cmp    BYTE PTR [rax+0x29],r13b
   14000220e:	jne    0x14000221e
   140002210:	mov    rdi,rax
   140002213:	mov    rax,QWORD PTR [rax]
   140002216:	cmp    BYTE PTR [rax+0x29],r13b
   14000221a:	je     0x140002210
   14000221c:	jmp    0x14000223a
   14000221e:	mov    rax,QWORD PTR [rbx+0x8]
   140002222:	jmp    0x140002231
   140002224:	cmp    rdi,QWORD PTR [rax+0x10]
   140002228:	jne    0x140002237
   14000222a:	mov    rdi,rax
   14000222d:	mov    rax,QWORD PTR [rax+0x8]
   140002231:	cmp    BYTE PTR [rax+0x29],r13b
   140002235:	je     0x140002224
   140002237:	mov    rdi,rax
   14000223a:	cmp    rdi,rsi
   14000223d:	je     0x140002252
   14000223f:	mov    rdx,QWORD PTR [rdi+0x18]
   140002243:	mov    r8,r12
   140002246:	mov    rcx,QWORD PTR [r15]
   140002249:	call   0x14000aaa6
   14000224e:	test   eax,eax
   140002250:	jns    0x140002277
   140002252:	mov    rax,QWORD PTR [rbx+0x10]
   140002256:	mov    rdx,r14
   140002259:	mov    QWORD PTR [rsp+0x20],r15
   14000225e:	mov    rcx,rbp
   140002261:	cmp    BYTE PTR [rax+0x29],r13b
   140002265:	je     0x14000226f
   140002267:	mov    r9,rbx
   14000226a:	jmp    0x1400021b8
   14000226f:	mov    r9,rdi
   140002272:	jmp    0x1400020b5
   140002277:	mov    r8,r15
   14000227a:	lea    rdx,[rsp+0x30]
   14000227f:	mov    rcx,rbp
   140002282:	call   0x140002780
   140002287:	mov    rcx,QWORD PTR [rax]
   14000228a:	mov    QWORD PTR [r14],rcx
   14000228d:	lea    r11,[rsp+0x40]
   140002292:	mov    rax,r14
   140002295:	mov    rbx,QWORD PTR [r11+0x30]
   140002299:	mov    rbp,QWORD PTR [r11+0x38]
   14000229d:	mov    rsi,QWORD PTR [r11+0x48]
   1400022a1:	mov    rsp,r11
   1400022a4:	pop    r15
   1400022a6:	pop    r14
   1400022a8:	pop    r13
   1400022aa:	pop    r12
   1400022ac:	pop    rdi
   1400022ad:	ret    
   1400022ae:	int3   
   1400022af:	int3   
   1400022b0:	int3   
   1400022b1:	int3   
   1400022b2:	int3   
   1400022b3:	int3   
   1400022b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400022b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400022be:	mov    QWORD PTR [rsp+0x18],rsi
   1400022c3:	push   rdi
   1400022c4:	sub    rsp,0x20
   1400022c8:	mov    rsi,r8
   1400022cb:	mov    rbp,rdx
   1400022ce:	mov    rdi,rcx
   1400022d1:	cmp    QWORD PTR [rcx+0x18],rdx
   1400022d5:	jae    0x1400022dc
   1400022d7:	call   0x140009c34
   1400022dc:	mov    r9,QWORD PTR [rdi+0x18]
   1400022e0:	sub    r9,rbp
   1400022e3:	cmp    r9,rsi
   1400022e6:	cmovb  rsi,r9
   1400022ea:	test   rsi,rsi
   1400022ed:	je     0x140002343
   1400022ef:	mov    rdx,QWORD PTR [rdi+0x20]
   1400022f3:	lea    rbx,[rdi+0x8]
   1400022f7:	cmp    rdx,0x10
   1400022fb:	jb     0x140002302
   1400022fd:	mov    rcx,QWORD PTR [rbx]
   140002300:	jmp    0x140002305
   140002302:	mov    rcx,rbx
   140002305:	cmp    rdx,0x10
   140002309:	jb     0x140002310
   14000230b:	mov    rax,QWORD PTR [rbx]
   14000230e:	jmp    0x140002313
   140002310:	mov    rax,rbx
   140002313:	lea    r8,[rcx+rbp*1]
   140002317:	sub    r9,rsi
   14000231a:	add    r8,rsi
   14000231d:	lea    rcx,[rax+rbp*1]
   140002321:	sub    rdx,rbp
   140002324:	call   QWORD PTR [rip+0xa136]        # 0x14000c460
   14000232a:	mov    rax,QWORD PTR [rdi+0x18]
   14000232e:	sub    rax,rsi
   140002331:	cmp    QWORD PTR [rdi+0x20],0x10
   140002336:	mov    QWORD PTR [rdi+0x18],rax
   14000233a:	jb     0x14000233f
   14000233c:	mov    rbx,QWORD PTR [rbx]
   14000233f:	mov    BYTE PTR [rbx+rax*1],0x0
   140002343:	mov    rbx,QWORD PTR [rsp+0x30]
   140002348:	mov    rax,rdi
   14000234b:	mov    rbp,QWORD PTR [rsp+0x38]
   140002350:	mov    rsi,QWORD PTR [rsp+0x40]
   140002355:	add    rsp,0x20
   140002359:	pop    rdi
   14000235a:	ret    
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	int3   
   140002361:	int3   
   140002362:	int3   
   140002363:	int3   
   140002364:	mov    QWORD PTR [rsp+0x10],rbx
   140002369:	mov    QWORD PTR [rsp+0x18],rbp
   14000236e:	mov    QWORD PTR [rsp+0x20],rsi
   140002373:	push   rdi
   140002374:	push   r14
   140002376:	push   r15
   140002378:	sub    rsp,0x30
   14000237c:	mov    rdi,QWORD PTR [rcx+0x8]
   140002380:	mov    r15,r8
   140002383:	mov    rsi,rdx
   140002386:	mov    rbp,rcx
   140002389:	mov    r14b,0x1
   14000238c:	mov    rbx,QWORD PTR [rdi+0x8]
   140002390:	jmp    0x1400023b6
   140002392:	mov    rdx,QWORD PTR [rbx+0x18]
   140002396:	mov    rdi,rbx
   140002399:	mov    rcx,QWORD PTR [r15]
   14000239c:	call   QWORD PTR [rip+0xa11e]        # 0x14000c4c0
   1400023a2:	test   eax,eax
   1400023a4:	sets   r14b
   1400023a8:	test   r14b,r14b
   1400023ab:	je     0x1400023b2
   1400023ad:	mov    rbx,QWORD PTR [rbx]
   1400023b0:	jmp    0x1400023b6
   1400023b2:	mov    rbx,QWORD PTR [rbx+0x10]
   1400023b6:	cmp    BYTE PTR [rbx+0x29],0x0
   1400023ba:	je     0x140002392
   1400023bc:	mov    rbx,rdi
   1400023bf:	test   r14b,r14b
   1400023c2:	je     0x140002435
   1400023c4:	mov    rax,QWORD PTR [rbp+0x8]
   1400023c8:	cmp    rdi,QWORD PTR [rax]
   1400023cb:	jne    0x1400023f1
   1400023cd:	mov    r8b,0x1
   1400023d0:	mov    r9,rdi
   1400023d3:	mov    QWORD PTR [rsp+0x20],r15
   1400023d8:	lea    rdx,[rsp+0x50]
   1400023dd:	mov    rcx,rbp
   1400023e0:	call   0x140002474
   1400023e5:	mov    BYTE PTR [rsi+0x8],0x1
   1400023e9:	mov    rcx,QWORD PTR [rax]
   1400023ec:	mov    QWORD PTR [rsi],rcx
   1400023ef:	jmp    0x140002452
   1400023f1:	cmp    BYTE PTR [rdi+0x29],0x0
   1400023f5:	je     0x1400023fd
   1400023f7:	mov    rbx,QWORD PTR [rdi+0x10]
   1400023fb:	jmp    0x140002435
   1400023fd:	mov    rax,QWORD PTR [rdi]
   140002400:	cmp    BYTE PTR [rax+0x29],0x0
   140002404:	jne    0x140002415
   140002406:	mov    rbx,rax
   140002409:	mov    rax,QWORD PTR [rax+0x10]
   14000240d:	cmp    BYTE PTR [rax+0x29],0x0
   140002411:	je     0x140002406
   140002413:	jmp    0x140002435
   140002415:	mov    rax,QWORD PTR [rdi+0x8]
   140002419:	jmp    0x140002427
   14000241b:	cmp    rbx,QWORD PTR [rax]
   14000241e:	jne    0x14000242d
   140002420:	mov    rbx,rax
   140002423:	mov    rax,QWORD PTR [rax+0x8]
   140002427:	cmp    BYTE PTR [rax+0x29],0x0
   14000242b:	je     0x14000241b
   14000242d:	cmp    BYTE PTR [rbx+0x29],0x0
   140002431:	cmove  rbx,rax
   140002435:	mov    rdx,QWORD PTR [r15]
   140002438:	mov    rcx,QWORD PTR [rbx+0x18]
   14000243c:	call   QWORD PTR [rip+0xa07e]        # 0x14000c4c0
   140002442:	test   eax,eax
   140002444:	jns    0x14000244b
   140002446:	mov    r8b,r14b
   140002449:	jmp    0x1400023d0
   14000244b:	mov    QWORD PTR [rsi],rbx
   14000244e:	mov    BYTE PTR [rsi+0x8],0x0
   140002452:	mov    rbx,QWORD PTR [rsp+0x58]
   140002457:	mov    rax,rsi
   14000245a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000245f:	mov    rbp,QWORD PTR [rsp+0x60]
   140002464:	add    rsp,0x30
   140002468:	pop    r15
   14000246a:	pop    r14
   14000246c:	pop    rdi
   14000246d:	ret    
   14000246e:	int3   
   14000246f:	int3   
   140002470:	int3   
   140002471:	int3   
   140002472:	int3   
   140002473:	int3   
   140002474:	mov    rax,rsp
   140002477:	push   rsi
   140002478:	push   rdi
   140002479:	push   r14
   14000247b:	sub    rsp,0xb0
   140002482:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000248b:	mov    QWORD PTR [rax+0x18],rbx
   14000248f:	mov    rax,QWORD PTR [rip+0xeb6a]        # 0x140011000
   140002496:	xor    rax,rsp
   140002499:	mov    QWORD PTR [rsp+0xa0],rax
   1400024a1:	mov    rdi,r9
   1400024a4:	mov    sil,r8b
   1400024a7:	mov    r14,rdx
   1400024aa:	mov    rbx,rcx
   1400024ad:	mov    rax,QWORD PTR [rsp+0xf0]
   1400024b5:	movabs rcx,0xffffffffffffffe
   1400024bf:	cmp    QWORD PTR [rbx+0x10],rcx
   1400024c3:	jb     0x1400024f8
   1400024c5:	lea    rdx,[rip+0xa3a4]        # 0x14000c870
   1400024cc:	lea    rcx,[rsp+0x38]
   1400024d1:	call   0x140002898
   1400024d6:	nop
   1400024d7:	lea    rdx,[rsp+0x38]
   1400024dc:	lea    rcx,[rsp+0x60]
   1400024e1:	call   0x140001284
   1400024e6:	lea    rdx,[rip+0xc64b]        # 0x14000eb38
   1400024ed:	lea    rcx,[rsp+0x60]
   1400024f2:	call   0x14000a506
   1400024f7:	nop
   1400024f8:	mov    rdx,QWORD PTR [rbx+0x8]
   1400024fc:	mov    QWORD PTR [rsp+0x20],rax
   140002501:	mov    r9,rdx
   140002504:	mov    r8,rdi
   140002507:	call   0x140002a00
   14000250c:	mov    r9,rax
   14000250f:	inc    QWORD PTR [rbx+0x10]
   140002513:	mov    rax,QWORD PTR [rbx+0x8]
   140002517:	xor    r11d,r11d
   14000251a:	cmp    rdi,rax
   14000251d:	jne    0x140002530
   14000251f:	mov    QWORD PTR [rax+0x8],r9
   140002523:	mov    rax,QWORD PTR [rbx+0x8]
   140002527:	mov    QWORD PTR [rax],r9
   14000252a:	mov    rax,QWORD PTR [rbx+0x8]
   14000252e:	jmp    0x140002554
   140002530:	test   sil,sil
   140002533:	je     0x140002546
   140002535:	mov    QWORD PTR [rdi],r9
   140002538:	mov    rax,QWORD PTR [rbx+0x8]
   14000253c:	cmp    rdi,QWORD PTR [rax]
   14000253f:	jne    0x140002558
   140002541:	mov    QWORD PTR [rax],r9
   140002544:	jmp    0x140002558
   140002546:	mov    QWORD PTR [rdi+0x10],r9
   14000254a:	mov    rax,QWORD PTR [rbx+0x8]
   14000254e:	cmp    rdi,QWORD PTR [rax+0x10]
   140002552:	jne    0x140002558
   140002554:	mov    QWORD PTR [rax+0x10],r9
   140002558:	mov    rdx,r9
   14000255b:	lea    r8,[r9+0x8]
   14000255f:	mov    rax,QWORD PTR [r8]
   140002562:	cmp    BYTE PTR [rax+0x28],r11b
   140002566:	jne    0x140002731
   14000256c:	mov    rax,QWORD PTR [r8]
   14000256f:	mov    r10,QWORD PTR [rax+0x8]
   140002573:	mov    rcx,QWORD PTR [r10]
   140002576:	cmp    rax,rcx
   140002579:	jne    0x140002645
   14000257f:	mov    rcx,QWORD PTR [r10+0x10]
   140002583:	cmp    BYTE PTR [rcx+0x28],r11b
   140002587:	je     0x14000264b
   14000258d:	cmp    rdx,QWORD PTR [rax+0x10]
   140002591:	jne    0x1400025e0
   140002593:	mov    rdx,rax
   140002596:	mov    rcx,QWORD PTR [rax+0x10]
   14000259a:	mov    rax,QWORD PTR [rcx]
   14000259d:	mov    QWORD PTR [rdx+0x10],rax
   1400025a1:	mov    rax,QWORD PTR [rcx]
   1400025a4:	cmp    BYTE PTR [rax+0x29],r11b
   1400025a8:	jne    0x1400025ae
   1400025aa:	mov    QWORD PTR [rax+0x8],rdx
   1400025ae:	lea    r8,[rdx+0x8]
   1400025b2:	mov    rax,QWORD PTR [r8]
   1400025b5:	mov    QWORD PTR [rcx+0x8],rax
   1400025b9:	mov    rax,QWORD PTR [rbx+0x8]
   1400025bd:	cmp    rdx,QWORD PTR [rax+0x8]
   1400025c1:	jne    0x1400025c9
   1400025c3:	mov    QWORD PTR [rax+0x8],rcx
   1400025c7:	jmp    0x1400025da
   1400025c9:	mov    rax,QWORD PTR [r8]
   1400025cc:	cmp    rdx,QWORD PTR [rax]
   1400025cf:	jne    0x1400025d6
   1400025d1:	mov    QWORD PTR [rax],rcx
   1400025d4:	jmp    0x1400025da
   1400025d6:	mov    QWORD PTR [rax+0x10],rcx
   1400025da:	mov    QWORD PTR [rcx],rdx
   1400025dd:	mov    QWORD PTR [r8],rcx
   1400025e0:	mov    rax,QWORD PTR [r8]
   1400025e3:	mov    BYTE PTR [rax+0x28],0x1
   1400025e7:	mov    rax,QWORD PTR [r8]
   1400025ea:	mov    rcx,QWORD PTR [rax+0x8]
   1400025ee:	mov    BYTE PTR [rcx+0x28],r11b
   1400025f2:	mov    rax,QWORD PTR [r8]
   1400025f5:	mov    rcx,QWORD PTR [rax+0x8]
   1400025f9:	mov    r8,QWORD PTR [rcx]
   1400025fc:	mov    rax,QWORD PTR [r8+0x10]
   140002600:	mov    QWORD PTR [rcx],rax
   140002603:	mov    rax,QWORD PTR [r8+0x10]
   140002607:	cmp    BYTE PTR [rax+0x29],r11b
   14000260b:	jne    0x140002611
   14000260d:	mov    QWORD PTR [rax+0x8],rcx
   140002611:	mov    rax,QWORD PTR [rcx+0x8]
   140002615:	mov    QWORD PTR [r8+0x8],rax
   140002619:	mov    rax,QWORD PTR [rbx+0x8]
   14000261d:	cmp    rcx,QWORD PTR [rax+0x8]
   140002621:	jne    0x140002629
   140002623:	mov    QWORD PTR [rax+0x8],r8
   140002627:	jmp    0x14000263c
   140002629:	mov    rax,QWORD PTR [rcx+0x8]
   14000262d:	cmp    rcx,QWORD PTR [rax+0x10]
   140002631:	jne    0x140002639
   140002633:	mov    QWORD PTR [rax+0x10],r8
   140002637:	jmp    0x14000263c
   140002639:	mov    QWORD PTR [rax],r8
   14000263c:	mov    QWORD PTR [r8+0x10],rcx
   140002640:	jmp    0x14000271c
   140002645:	cmp    BYTE PTR [rcx+0x28],r11b
   140002649:	jne    0x14000266a
   14000264b:	mov    BYTE PTR [rax+0x28],0x1
   14000264f:	mov    BYTE PTR [rcx+0x28],0x1
   140002653:	mov    rax,QWORD PTR [r8]
   140002656:	mov    rcx,QWORD PTR [rax+0x8]
   14000265a:	mov    BYTE PTR [rcx+0x28],r11b
   14000265e:	mov    rax,QWORD PTR [r8]
   140002661:	mov    rdx,QWORD PTR [rax+0x8]
   140002665:	jmp    0x140002720
   14000266a:	cmp    rdx,QWORD PTR [rax]
   14000266d:	jne    0x1400026be
   14000266f:	mov    rdx,rax
   140002672:	mov    rcx,QWORD PTR [rax]
   140002675:	mov    rax,QWORD PTR [rcx+0x10]
   140002679:	mov    QWORD PTR [rdx],rax
   14000267c:	mov    rax,QWORD PTR [rcx+0x10]
   140002680:	cmp    BYTE PTR [rax+0x29],r11b
   140002684:	jne    0x14000268a
   140002686:	mov    QWORD PTR [rax+0x8],rdx
   14000268a:	lea    r8,[rdx+0x8]
   14000268e:	mov    rax,QWORD PTR [r8]
   140002691:	mov    QWORD PTR [rcx+0x8],rax
   140002695:	mov    rax,QWORD PTR [rbx+0x8]
   140002699:	cmp    rdx,QWORD PTR [rax+0x8]
   14000269d:	jne    0x1400026a5
   14000269f:	mov    QWORD PTR [rax+0x8],rcx
   1400026a3:	jmp    0x1400026b7
   1400026a5:	mov    rax,QWORD PTR [r8]
   1400026a8:	cmp    rdx,QWORD PTR [rax+0x10]
   1400026ac:	jne    0x1400026b4
   1400026ae:	mov    QWORD PTR [rax+0x10],rcx
   1400026b2:	jmp    0x1400026b7
   1400026b4:	mov    QWORD PTR [rax],rcx
   1400026b7:	mov    QWORD PTR [rcx+0x10],rdx
   1400026bb:	mov    QWORD PTR [r8],rcx
   1400026be:	mov    rax,QWORD PTR [r8]
   1400026c1:	mov    BYTE PTR [rax+0x28],0x1
   1400026c5:	mov    rax,QWORD PTR [r8]
   1400026c8:	mov    rcx,QWORD PTR [rax+0x8]
   1400026cc:	mov    BYTE PTR [rcx+0x28],r11b
   1400026d0:	mov    rax,QWORD PTR [r8]
   1400026d3:	mov    rcx,QWORD PTR [rax+0x8]
   1400026d7:	mov    r8,QWORD PTR [rcx+0x10]
   1400026db:	mov    rax,QWORD PTR [r8]
   1400026de:	mov    QWORD PTR [rcx+0x10],rax
   1400026e2:	mov    rax,QWORD PTR [r8]
   1400026e5:	cmp    BYTE PTR [rax+0x29],r11b
   1400026e9:	jne    0x1400026ef
   1400026eb:	mov    QWORD PTR [rax+0x8],rcx
   1400026ef:	mov    rax,QWORD PTR [rcx+0x8]
   1400026f3:	mov    QWORD PTR [r8+0x8],rax
   1400026f7:	mov    rax,QWORD PTR [rbx+0x8]
   1400026fb:	cmp    rcx,QWORD PTR [rax+0x8]
   1400026ff:	jne    0x140002707
   140002701:	mov    QWORD PTR [rax+0x8],r8
   140002705:	jmp    0x140002719
   140002707:	mov    rax,QWORD PTR [rcx+0x8]
   14000270b:	cmp    rcx,QWORD PTR [rax]
   14000270e:	jne    0x140002715
   140002710:	mov    QWORD PTR [rax],r8
   140002713:	jmp    0x140002719
   140002715:	mov    QWORD PTR [rax+0x10],r8
   140002719:	mov    QWORD PTR [r8],rcx
   14000271c:	mov    QWORD PTR [rcx+0x8],r8
   140002720:	lea    r8,[rdx+0x8]
   140002724:	mov    rcx,QWORD PTR [r8]
   140002727:	cmp    BYTE PTR [rcx+0x28],r11b
   14000272b:	je     0x14000256c
   140002731:	mov    rcx,QWORD PTR [rbx+0x8]
   140002735:	mov    rdx,QWORD PTR [rcx+0x8]
   140002739:	mov    BYTE PTR [rdx+0x28],0x1
   14000273d:	mov    QWORD PTR [r14],r9
   140002740:	mov    rax,r14
   140002743:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000274b:	xor    rcx,rsp
   14000274e:	call   0x14000a0a0
   140002753:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000275b:	add    rsp,0xb0
   140002762:	pop    r14
   140002764:	pop    rdi
   140002765:	pop    rsi
   140002766:	ret    
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    rcx,rdx
   140002773:	jmp    0x140009d48
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    QWORD PTR [rsp+0x10],rbx
   140002785:	mov    QWORD PTR [rsp+0x18],rbp
   14000278a:	push   rsi
   14000278b:	push   rdi
   14000278c:	push   r13
   14000278e:	push   r14
   140002790:	push   r15
   140002792:	sub    rsp,0x30
   140002796:	mov    rbp,QWORD PTR [rcx+0x8]
   14000279a:	mov    r14,r8
   14000279d:	mov    rdi,rdx
   1400027a0:	mov    r13,rcx
   1400027a3:	mov    rsi,rbp
   1400027a6:	mov    r15b,0x1
   1400027a9:	mov    rbx,QWORD PTR [rbp+0x8]
   1400027ad:	jmp    0x1400027d8
   1400027af:	mov    rdx,QWORD PTR [rbx+0x18]
   1400027b3:	mov    r8d,0x10
   1400027b9:	mov    rcx,QWORD PTR [r14]
   1400027bc:	mov    rsi,rbx
   1400027bf:	call   0x14000aaa6
   1400027c4:	test   eax,eax
   1400027c6:	sets   r15b
   1400027ca:	test   r15b,r15b
   1400027cd:	je     0x1400027d4
   1400027cf:	mov    rbx,QWORD PTR [rbx]
   1400027d2:	jmp    0x1400027d8
   1400027d4:	mov    rbx,QWORD PTR [rbx+0x10]
   1400027d8:	cmp    BYTE PTR [rbx+0x29],0x0
   1400027dc:	je     0x1400027af
   1400027de:	mov    rbx,rsi
   1400027e1:	test   r15b,r15b
   1400027e4:	je     0x140002854
   1400027e6:	cmp    rsi,QWORD PTR [rbp+0x0]
   1400027ea:	jne    0x140002810
   1400027ec:	mov    r8b,0x1
   1400027ef:	mov    r9,rsi
   1400027f2:	mov    QWORD PTR [rsp+0x20],r14
   1400027f7:	lea    rdx,[rsp+0x60]
   1400027fc:	mov    rcx,r13
   1400027ff:	call   0x140002474
   140002804:	mov    BYTE PTR [rdi+0x8],0x1
   140002808:	mov    rcx,QWORD PTR [rax]
   14000280b:	mov    QWORD PTR [rdi],rcx
   14000280e:	jmp    0x140002876
   140002810:	cmp    BYTE PTR [rsi+0x29],0x0
   140002814:	je     0x14000281c
   140002816:	mov    rbx,QWORD PTR [rsi+0x10]
   14000281a:	jmp    0x140002854
   14000281c:	mov    rax,QWORD PTR [rsi]
   14000281f:	cmp    BYTE PTR [rax+0x29],0x0
   140002823:	jne    0x140002834
   140002825:	mov    rbx,rax
   140002828:	mov    rax,QWORD PTR [rax+0x10]
   14000282c:	cmp    BYTE PTR [rax+0x29],0x0
   140002830:	je     0x140002825
   140002832:	jmp    0x140002854
   140002834:	mov    rax,QWORD PTR [rsi+0x8]
   140002838:	jmp    0x140002846
   14000283a:	cmp    rbx,QWORD PTR [rax]
   14000283d:	jne    0x14000284c
   14000283f:	mov    rbx,rax
   140002842:	mov    rax,QWORD PTR [rax+0x8]
   140002846:	cmp    BYTE PTR [rax+0x29],0x0
   14000284a:	je     0x14000283a
   14000284c:	cmp    BYTE PTR [rbx+0x29],0x0
   140002850:	cmove  rbx,rax
   140002854:	mov    rdx,QWORD PTR [r14]
   140002857:	mov    r8d,0x10
   14000285d:	mov    rcx,QWORD PTR [rbx+0x18]
   140002861:	call   0x14000aaa6
   140002866:	test   eax,eax
   140002868:	jns    0x14000286f
   14000286a:	mov    r8b,r15b
   14000286d:	jmp    0x1400027ef
   14000286f:	mov    QWORD PTR [rdi],rbx
   140002872:	mov    BYTE PTR [rdi+0x8],0x0
   140002876:	mov    rbx,QWORD PTR [rsp+0x68]
   14000287b:	mov    rax,rdi
   14000287e:	mov    rbp,QWORD PTR [rsp+0x70]
   140002883:	add    rsp,0x30
   140002887:	pop    r15
   140002889:	pop    r14
   14000288b:	pop    r13
   14000288d:	pop    rdi
   14000288e:	pop    rsi
   14000288f:	ret    
   140002890:	int3   
   140002891:	int3   
   140002892:	int3   
   140002893:	int3   
   140002894:	int3   
   140002895:	int3   
   140002896:	int3   
   140002897:	int3   
   140002898:	rex push rbx
   14000289a:	sub    rsp,0x20
   14000289e:	xor    eax,eax
   1400028a0:	mov    QWORD PTR [rcx+0x20],0xf
   1400028a8:	mov    QWORD PTR [rcx+0x18],rax
   1400028ac:	mov    rbx,rcx
   1400028af:	mov    BYTE PTR [rcx+0x8],al
   1400028b2:	or     r8,0xffffffffffffffff
   1400028b6:	inc    r8
   1400028b9:	cmp    BYTE PTR [rdx+r8*1],al
   1400028bd:	jne    0x1400028b6
   1400028bf:	call   0x140002fac
   1400028c4:	mov    rax,rbx
   1400028c7:	add    rsp,0x20
   1400028cb:	pop    rbx
   1400028cc:	ret    
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	int3   
   1400028d1:	int3   
   1400028d2:	int3   
   1400028d3:	int3   
   1400028d4:	mov    rax,rsp
   1400028d7:	mov    QWORD PTR [rax+0x18],r8
   1400028db:	mov    QWORD PTR [rax+0x10],rdx
   1400028df:	mov    QWORD PTR [rax+0x8],rcx
   1400028e3:	push   rbx
   1400028e4:	push   rsi
   1400028e5:	push   rdi
   1400028e6:	push   r14
   1400028e8:	sub    rsp,0x68
   1400028ec:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   1400028f4:	mov    rsi,r8
   1400028f7:	mov    rdi,rcx
   1400028fa:	mov    rbx,rdx
   1400028fd:	or     rbx,0xf
   140002901:	mov    r9,0xfffffffffffffffe
   140002908:	cmp    rbx,r9
   14000290b:	jbe    0x140002912
   14000290d:	mov    rbx,rdx
   140002910:	jmp    0x14000293d
   140002912:	mov    r8,QWORD PTR [rcx+0x20]
   140002916:	mov    rcx,r8
   140002919:	shr    rcx,1
   14000291c:	movabs rax,0xaaaaaaaaaaaaaaab
   140002926:	mul    rbx
   140002929:	shr    rdx,1
   14000292c:	cmp    rdx,rcx
   14000292f:	jae    0x14000293d
   140002931:	sub    r9,rcx
   140002934:	cmp    r8,r9
   140002937:	ja     0x14000293d
   140002939:	lea    rbx,[rcx+r8*1]
   14000293d:	lea    rcx,[rbx+0x1]
   140002941:	test   rcx,rcx
   140002944:	je     0x140002972
   140002946:	xor    edx,edx
   140002948:	or     rax,0xffffffffffffffff
   14000294c:	div    rcx
   14000294f:	cmp    rax,0x1
   140002953:	jae    0x140002972
   140002955:	xor    edx,edx
   140002957:	lea    rcx,[rsp+0x28]
   14000295c:	call   0x140001008
   140002961:	lea    rdx,[rip+0xc348]        # 0x14000ecb0
   140002968:	lea    rcx,[rsp+0x28]
   14000296d:	call   0x14000a506
   140002972:	call   0x140009cc8
   140002977:	mov    r14,rax
   14000297a:	jmp    0x14000299c
   14000297c:	mov    rdi,QWORD PTR [rsp+0x90]
   140002984:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000298c:	mov    rbx,QWORD PTR [rsp+0x98]
   140002994:	mov    r14,QWORD PTR [rsp+0xa8]
   14000299c:	test   rsi,rsi
   14000299f:	je     0x1400029c2
   1400029a1:	cmp    QWORD PTR [rdi+0x20],0x10
   1400029a6:	jb     0x1400029ae
   1400029a8:	mov    r8,QWORD PTR [rdi+0x8]
   1400029ac:	jmp    0x1400029b2
   1400029ae:	lea    r8,[rdi+0x8]
   1400029b2:	lea    rdx,[rbx+0x1]
   1400029b6:	mov    r9,rsi
   1400029b9:	mov    rcx,r14
   1400029bc:	call   QWORD PTR [rip+0x99ee]        # 0x14000c3b0
   1400029c2:	cmp    QWORD PTR [rdi+0x20],0x10
   1400029c7:	jb     0x1400029d2
   1400029c9:	mov    rcx,QWORD PTR [rdi+0x8]
   1400029cd:	call   0x140009d48
   1400029d2:	lea    rax,[rdi+0x8]
   1400029d6:	mov    BYTE PTR [rax],0x0
   1400029d9:	mov    QWORD PTR [rax],r14
   1400029dc:	mov    QWORD PTR [rdi+0x20],rbx
   1400029e0:	mov    QWORD PTR [rdi+0x18],rsi
   1400029e4:	cmp    rbx,0x10
   1400029e8:	cmovae rax,r14
   1400029ec:	mov    BYTE PTR [rax+rsi*1],0x0
   1400029f0:	add    rsp,0x68
   1400029f4:	pop    r14
   1400029f6:	pop    rdi
   1400029f7:	pop    rsi
   1400029f8:	pop    rbx
   1400029f9:	ret    
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	mov    rax,rsp
   140002a03:	mov    QWORD PTR [rax+0x8],rcx
   140002a07:	push   rdi
   140002a08:	sub    rsp,0x30
   140002a0c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140002a14:	mov    QWORD PTR [rax+0x10],rbx
   140002a18:	mov    QWORD PTR [rax+0x18],rsi
   140002a1c:	mov    rbx,r9
   140002a1f:	mov    rdi,r8
   140002a22:	mov    rsi,rdx
   140002a25:	mov    ecx,0x30
   140002a2a:	call   0x140009cc8
   140002a2f:	mov    QWORD PTR [rsp+0x40],rax
   140002a34:	test   rax,rax
   140002a37:	je     0x140002a57
   140002a39:	mov    QWORD PTR [rax],rsi
   140002a3c:	mov    QWORD PTR [rax+0x8],rdi
   140002a40:	mov    QWORD PTR [rax+0x10],rbx
   140002a44:	mov    rcx,QWORD PTR [rsp+0x60]
   140002a49:	movups xmm0,XMMWORD PTR [rcx]
   140002a4c:	movdqu XMMWORD PTR [rax+0x18],xmm0
   140002a51:	mov    WORD PTR [rax+0x28],0x0
   140002a57:	mov    rbx,QWORD PTR [rsp+0x48]
   140002a5c:	mov    rsi,QWORD PTR [rsp+0x50]
   140002a61:	add    rsp,0x30
   140002a65:	pop    rdi
   140002a66:	ret    
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	mov    QWORD PTR [rsp+0x18],r8
   140002a75:	push   rbx
   140002a76:	push   rsi
   140002a77:	push   rdi
   140002a78:	sub    rsp,0xa0
   140002a7f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002a88:	mov    rax,QWORD PTR [rip+0xe571]        # 0x140011000
   140002a8f:	xor    rax,rsp
   140002a92:	mov    QWORD PTR [rsp+0x90],rax
   140002a9a:	mov    rdi,rdx
   140002a9d:	mov    rbx,rcx
   140002aa0:	xor    esi,esi
   140002aa2:	cmp    BYTE PTR [r8+0x29],sil
   140002aa6:	je     0x140002ade
   140002aa8:	lea    rdx,[rip+0x9dd9]        # 0x14000c888
   140002aaf:	lea    rcx,[rsp+0x28]
   140002ab4:	call   0x140002898
   140002ab9:	nop
   140002aba:	xor    r8d,r8d
   140002abd:	lea    rdx,[rsp+0x28]
   140002ac2:	lea    rcx,[rsp+0x50]
   140002ac7:	call   0x1400013ac
   140002acc:	lea    rdx,[rip+0xc045]        # 0x14000eb18
   140002ad3:	lea    rcx,[rsp+0x50]
   140002ad8:	call   0x14000a506
   140002add:	nop
   140002ade:	mov    r10,r8
   140002ae1:	lea    rcx,[r8+0x10]
   140002ae5:	mov    r9,QWORD PTR [rcx]
   140002ae8:	cmp    BYTE PTR [r9+0x29],sil
   140002aec:	jne    0x140002b01
   140002aee:	mov    rax,QWORD PTR [r9]
   140002af1:	jmp    0x140002af9
   140002af3:	mov    r9,rax
   140002af6:	mov    rax,QWORD PTR [rax]
   140002af9:	cmp    BYTE PTR [rax+0x29],sil
   140002afd:	je     0x140002af3
   140002aff:	jmp    0x140002b22
   140002b01:	mov    r9,QWORD PTR [r8+0x8]
   140002b05:	jmp    0x140002b1c
   140002b07:	cmp    r8,QWORD PTR [r9+0x10]
   140002b0b:	jne    0x140002b22
   140002b0d:	mov    r8,r9
   140002b10:	mov    QWORD PTR [rsp+0xd0],r9
   140002b18:	mov    r9,QWORD PTR [r9+0x8]
   140002b1c:	cmp    BYTE PTR [r9+0x29],sil
   140002b20:	je     0x140002b07
   140002b22:	mov    QWORD PTR [rsp+0xd0],r9
   140002b2a:	mov    rdx,QWORD PTR [r10]
   140002b2d:	cmp    BYTE PTR [rdx+0x29],sil
   140002b31:	je     0x140002b38
   140002b33:	mov    r8,QWORD PTR [rcx]
   140002b36:	jmp    0x140002b53
   140002b38:	mov    rax,QWORD PTR [rcx]
   140002b3b:	cmp    BYTE PTR [rax+0x29],sil
   140002b3f:	je     0x140002b46
   140002b41:	mov    r8,rdx
   140002b44:	jmp    0x140002b53
   140002b46:	mov    r8,QWORD PTR [r9+0x10]
   140002b4a:	cmp    r9,r10
   140002b4d:	jne    0x140002bdf
   140002b53:	mov    rdx,QWORD PTR [r10+0x8]
   140002b57:	cmp    BYTE PTR [r8+0x29],sil
   140002b5b:	jne    0x140002b61
   140002b5d:	mov    QWORD PTR [r8+0x8],rdx
   140002b61:	mov    rax,QWORD PTR [rbx+0x8]
   140002b65:	cmp    QWORD PTR [rax+0x8],r10
   140002b69:	jne    0x140002b71
   140002b6b:	mov    QWORD PTR [rax+0x8],r8
   140002b6f:	jmp    0x140002b7f
   140002b71:	cmp    QWORD PTR [rdx],r10
   140002b74:	jne    0x140002b7b
   140002b76:	mov    QWORD PTR [rdx],r8
   140002b79:	jmp    0x140002b7f
   140002b7b:	mov    QWORD PTR [rdx+0x10],r8
   140002b7f:	mov    r9,QWORD PTR [rbx+0x8]
   140002b83:	cmp    QWORD PTR [r9],r10
   140002b86:	jne    0x140002baa
   140002b88:	cmp    BYTE PTR [r8+0x29],sil
   140002b8c:	je     0x140002b93
   140002b8e:	mov    rax,rdx
   140002b91:	jmp    0x140002ba7
   140002b93:	mov    rax,r8
   140002b96:	mov    rcx,QWORD PTR [r8]
   140002b99:	jmp    0x140002ba1
   140002b9b:	mov    rax,rcx
   140002b9e:	mov    rcx,QWORD PTR [rcx]
   140002ba1:	cmp    BYTE PTR [rcx+0x29],sil
   140002ba5:	je     0x140002b9b
   140002ba7:	mov    QWORD PTR [r9],rax
   140002baa:	mov    r9,QWORD PTR [rbx+0x8]
   140002bae:	cmp    QWORD PTR [r9+0x10],r10
   140002bb2:	jne    0x140002c4c
   140002bb8:	cmp    BYTE PTR [r8+0x29],sil
   140002bbc:	je     0x140002bc3
   140002bbe:	mov    rax,rdx
   140002bc1:	jmp    0x140002bd9
   140002bc3:	mov    rax,r8
   140002bc6:	mov    rcx,QWORD PTR [r8+0x10]
   140002bca:	jmp    0x140002bd3
   140002bcc:	mov    rax,rcx
   140002bcf:	mov    rcx,QWORD PTR [rcx+0x10]
   140002bd3:	cmp    BYTE PTR [rcx+0x29],sil
   140002bd7:	je     0x140002bcc
   140002bd9:	mov    QWORD PTR [r9+0x10],rax
   140002bdd:	jmp    0x140002c4c
   140002bdf:	mov    QWORD PTR [rdx+0x8],r9
   140002be3:	mov    rax,QWORD PTR [r10]
   140002be6:	mov    QWORD PTR [r9],rax
   140002be9:	cmp    r9,QWORD PTR [rcx]
   140002bec:	jne    0x140002bf3
   140002bee:	mov    rdx,r9
   140002bf1:	jmp    0x140002c12
   140002bf3:	mov    rdx,QWORD PTR [r9+0x8]
   140002bf7:	cmp    BYTE PTR [r8+0x29],sil
   140002bfb:	jne    0x140002c01
   140002bfd:	mov    QWORD PTR [r8+0x8],rdx
   140002c01:	mov    QWORD PTR [rdx],r8
   140002c04:	mov    rax,QWORD PTR [rcx]
   140002c07:	mov    QWORD PTR [r9+0x10],rax
   140002c0b:	mov    rax,QWORD PTR [rcx]
   140002c0e:	mov    QWORD PTR [rax+0x8],r9
   140002c12:	mov    rax,QWORD PTR [rbx+0x8]
   140002c16:	cmp    QWORD PTR [rax+0x8],r10
   140002c1a:	jne    0x140002c22
   140002c1c:	mov    QWORD PTR [rax+0x8],r9
   140002c20:	jmp    0x140002c34
   140002c22:	mov    rax,QWORD PTR [r10+0x8]
   140002c26:	cmp    QWORD PTR [rax],r10
   140002c29:	jne    0x140002c30
   140002c2b:	mov    QWORD PTR [rax],r9
   140002c2e:	jmp    0x140002c34
   140002c30:	mov    QWORD PTR [rax+0x10],r9
   140002c34:	mov    rax,QWORD PTR [r10+0x8]
   140002c38:	mov    QWORD PTR [r9+0x8],rax
   140002c3c:	mov    cl,BYTE PTR [r9+0x28]
   140002c40:	mov    al,BYTE PTR [r10+0x28]
   140002c44:	mov    BYTE PTR [r9+0x28],al
   140002c48:	mov    BYTE PTR [r10+0x28],cl
   140002c4c:	mov    r11b,0x1
   140002c4f:	cmp    BYTE PTR [r10+0x28],r11b
   140002c53:	jne    0x140002f11
   140002c59:	mov    rax,QWORD PTR [rbx+0x8]
   140002c5d:	cmp    r8,QWORD PTR [rax+0x8]
   140002c61:	je     0x140002f0d
   140002c67:	cmp    BYTE PTR [r8+0x28],r11b
   140002c6b:	jne    0x140002f0d
   140002c71:	mov    rcx,QWORD PTR [rdx]
   140002c74:	cmp    r8,rcx
   140002c77:	jne    0x140002d03
   140002c7d:	mov    rcx,QWORD PTR [rdx+0x10]
   140002c81:	cmp    BYTE PTR [rcx+0x28],sil
   140002c85:	jne    0x140002cdc
   140002c87:	mov    BYTE PTR [rcx+0x28],r11b
   140002c8b:	mov    BYTE PTR [rdx+0x28],sil
   140002c8f:	mov    rcx,QWORD PTR [rdx+0x10]
   140002c93:	mov    rax,QWORD PTR [rcx]
   140002c96:	mov    QWORD PTR [rdx+0x10],rax
   140002c9a:	mov    rax,QWORD PTR [rcx]
   140002c9d:	cmp    BYTE PTR [rax+0x29],sil
   140002ca1:	jne    0x140002ca7
   140002ca3:	mov    QWORD PTR [rax+0x8],rdx
   140002ca7:	mov    rax,QWORD PTR [rdx+0x8]
   140002cab:	mov    QWORD PTR [rcx+0x8],rax
   140002caf:	mov    rax,QWORD PTR [rbx+0x8]
   140002cb3:	cmp    rdx,QWORD PTR [rax+0x8]
   140002cb7:	jne    0x140002cbf
   140002cb9:	mov    QWORD PTR [rax+0x8],rcx
   140002cbd:	jmp    0x140002cd1
   140002cbf:	mov    rax,QWORD PTR [rdx+0x8]
   140002cc3:	cmp    rdx,QWORD PTR [rax]
   140002cc6:	jne    0x140002ccd
   140002cc8:	mov    QWORD PTR [rax],rcx
   140002ccb:	jmp    0x140002cd1
   140002ccd:	mov    QWORD PTR [rax+0x10],rcx
   140002cd1:	mov    QWORD PTR [rcx],rdx
   140002cd4:	mov    QWORD PTR [rdx+0x8],rcx
   140002cd8:	mov    rcx,QWORD PTR [rdx+0x10]
   140002cdc:	cmp    BYTE PTR [rcx+0x29],sil
   140002ce0:	jne    0x140002d84
   140002ce6:	mov    rax,QWORD PTR [rcx]
   140002ce9:	cmp    BYTE PTR [rax+0x28],r11b
   140002ced:	jne    0x140002d90
   140002cf3:	mov    rax,QWORD PTR [rcx+0x10]
   140002cf7:	cmp    BYTE PTR [rax+0x28],r11b
   140002cfb:	jne    0x140002d90
   140002d01:	jmp    0x140002d80
   140002d03:	cmp    BYTE PTR [rcx+0x28],sil
   140002d07:	jne    0x140002d5f
   140002d09:	mov    BYTE PTR [rcx+0x28],r11b
   140002d0d:	mov    BYTE PTR [rdx+0x28],sil
   140002d11:	mov    rcx,QWORD PTR [rdx]
   140002d14:	mov    rax,QWORD PTR [rcx+0x10]
   140002d18:	mov    QWORD PTR [rdx],rax
   140002d1b:	mov    rax,QWORD PTR [rcx+0x10]
   140002d1f:	cmp    BYTE PTR [rax+0x29],sil
   140002d23:	jne    0x140002d29
   140002d25:	mov    QWORD PTR [rax+0x8],rdx
   140002d29:	mov    rax,QWORD PTR [rdx+0x8]
   140002d2d:	mov    QWORD PTR [rcx+0x8],rax
   140002d31:	mov    rax,QWORD PTR [rbx+0x8]
   140002d35:	cmp    rdx,QWORD PTR [rax+0x8]
   140002d39:	jne    0x140002d41
   140002d3b:	mov    QWORD PTR [rax+0x8],rcx
   140002d3f:	jmp    0x140002d54
   140002d41:	mov    rax,QWORD PTR [rdx+0x8]
   140002d45:	cmp    rdx,QWORD PTR [rax+0x10]
   140002d49:	jne    0x140002d51
   140002d4b:	mov    QWORD PTR [rax+0x10],rcx
   140002d4f:	jmp    0x140002d54
   140002d51:	mov    QWORD PTR [rax],rcx
   140002d54:	mov    QWORD PTR [rcx+0x10],rdx
   140002d58:	mov    QWORD PTR [rdx+0x8],rcx
   140002d5c:	mov    rcx,QWORD PTR [rdx]
   140002d5f:	cmp    BYTE PTR [rcx+0x29],sil
   140002d63:	jne    0x140002d84
   140002d65:	mov    rax,QWORD PTR [rcx+0x10]
   140002d69:	cmp    BYTE PTR [rax+0x28],r11b
   140002d6d:	jne    0x140002e50
   140002d73:	mov    rax,QWORD PTR [rcx]
   140002d76:	cmp    BYTE PTR [rax+0x28],r11b
   140002d7a:	jne    0x140002e50
   140002d80:	mov    BYTE PTR [rcx+0x28],sil
   140002d84:	mov    r8,rdx
   140002d87:	mov    rdx,QWORD PTR [rdx+0x8]
   140002d8b:	jmp    0x140002c59
   140002d90:	mov    rax,QWORD PTR [rcx+0x10]
   140002d94:	cmp    BYTE PTR [rax+0x28],r11b
   140002d98:	jne    0x140002df4
   140002d9a:	mov    rax,QWORD PTR [rcx]
   140002d9d:	mov    BYTE PTR [rax+0x28],r11b
   140002da1:	mov    BYTE PTR [rcx+0x28],sil
   140002da5:	mov    r9,QWORD PTR [rcx]
   140002da8:	mov    rax,QWORD PTR [r9+0x10]
   140002dac:	mov    QWORD PTR [rcx],rax
   140002daf:	mov    rax,QWORD PTR [r9+0x10]
   140002db3:	cmp    BYTE PTR [rax+0x29],sil
   140002db7:	jne    0x140002dbd
   140002db9:	mov    QWORD PTR [rax+0x8],rcx
   140002dbd:	mov    rax,QWORD PTR [rcx+0x8]
   140002dc1:	mov    QWORD PTR [r9+0x8],rax
   140002dc5:	mov    rax,QWORD PTR [rbx+0x8]
   140002dc9:	cmp    rcx,QWORD PTR [rax+0x8]
   140002dcd:	jne    0x140002dd5
   140002dcf:	mov    QWORD PTR [rax+0x8],r9
   140002dd3:	jmp    0x140002de8
   140002dd5:	mov    rax,QWORD PTR [rcx+0x8]
   140002dd9:	cmp    rcx,QWORD PTR [rax+0x10]
   140002ddd:	jne    0x140002de5
   140002ddf:	mov    QWORD PTR [rax+0x10],r9
   140002de3:	jmp    0x140002de8
   140002de5:	mov    QWORD PTR [rax],r9
   140002de8:	mov    QWORD PTR [r9+0x10],rcx
   140002dec:	mov    QWORD PTR [rcx+0x8],r9
   140002df0:	mov    rcx,QWORD PTR [rdx+0x10]
   140002df4:	mov    al,BYTE PTR [rdx+0x28]
   140002df7:	mov    BYTE PTR [rcx+0x28],al
   140002dfa:	mov    BYTE PTR [rdx+0x28],r11b
   140002dfe:	mov    rax,QWORD PTR [rcx+0x10]
   140002e02:	mov    BYTE PTR [rax+0x28],r11b
   140002e06:	mov    rcx,QWORD PTR [rdx+0x10]
   140002e0a:	mov    rax,QWORD PTR [rcx]
   140002e0d:	mov    QWORD PTR [rdx+0x10],rax
   140002e11:	mov    rax,QWORD PTR [rcx]
   140002e14:	cmp    BYTE PTR [rax+0x29],sil
   140002e18:	jne    0x140002e1e
   140002e1a:	mov    QWORD PTR [rax+0x8],rdx
   140002e1e:	mov    rax,QWORD PTR [rdx+0x8]
   140002e22:	mov    QWORD PTR [rcx+0x8],rax
   140002e26:	mov    rax,QWORD PTR [rbx+0x8]
   140002e2a:	cmp    rdx,QWORD PTR [rax+0x8]
   140002e2e:	jne    0x140002e36
   140002e30:	mov    QWORD PTR [rax+0x8],rcx
   140002e34:	jmp    0x140002e48
   140002e36:	mov    rax,QWORD PTR [rdx+0x8]
   140002e3a:	cmp    rdx,QWORD PTR [rax]
   140002e3d:	jne    0x140002e44
   140002e3f:	mov    QWORD PTR [rax],rcx
   140002e42:	jmp    0x140002e48
   140002e44:	mov    QWORD PTR [rax+0x10],rcx
   140002e48:	mov    QWORD PTR [rcx],rdx
   140002e4b:	jmp    0x140002f09
   140002e50:	mov    rax,QWORD PTR [rcx]
   140002e53:	cmp    BYTE PTR [rax+0x28],r11b
   140002e57:	jne    0x140002eb1
   140002e59:	mov    rax,QWORD PTR [rcx+0x10]
   140002e5d:	mov    BYTE PTR [rax+0x28],r11b
   140002e61:	mov    BYTE PTR [rcx+0x28],sil
   140002e65:	mov    r9,QWORD PTR [rcx+0x10]
   140002e69:	mov    rax,QWORD PTR [r9]
   140002e6c:	mov    QWORD PTR [rcx+0x10],rax
   140002e70:	mov    rax,QWORD PTR [r9]
   140002e73:	cmp    BYTE PTR [rax+0x29],sil
   140002e77:	jne    0x140002e7d
   140002e79:	mov    QWORD PTR [rax+0x8],rcx
   140002e7d:	mov    rax,QWORD PTR [rcx+0x8]
   140002e81:	mov    QWORD PTR [r9+0x8],rax
   140002e85:	mov    rax,QWORD PTR [rbx+0x8]
   140002e89:	cmp    rcx,QWORD PTR [rax+0x8]
   140002e8d:	jne    0x140002e95
   140002e8f:	mov    QWORD PTR [rax+0x8],r9
   140002e93:	jmp    0x140002ea7
   140002e95:	mov    rax,QWORD PTR [rcx+0x8]
   140002e99:	cmp    rcx,QWORD PTR [rax]
   140002e9c:	jne    0x140002ea3
   140002e9e:	mov    QWORD PTR [rax],r9
   140002ea1:	jmp    0x140002ea7
   140002ea3:	mov    QWORD PTR [rax+0x10],r9
   140002ea7:	mov    QWORD PTR [r9],rcx
   140002eaa:	mov    QWORD PTR [rcx+0x8],r9
   140002eae:	mov    rcx,QWORD PTR [rdx]
   140002eb1:	mov    al,BYTE PTR [rdx+0x28]
   140002eb4:	mov    BYTE PTR [rcx+0x28],al
   140002eb7:	mov    BYTE PTR [rdx+0x28],r11b
   140002ebb:	mov    rax,QWORD PTR [rcx]
   140002ebe:	mov    BYTE PTR [rax+0x28],r11b
   140002ec2:	mov    rcx,QWORD PTR [rdx]
   140002ec5:	mov    rax,QWORD PTR [rcx+0x10]
   140002ec9:	mov    QWORD PTR [rdx],rax
   140002ecc:	mov    rax,QWORD PTR [rcx+0x10]
   140002ed0:	cmp    BYTE PTR [rax+0x29],sil
   140002ed4:	jne    0x140002eda
   140002ed6:	mov    QWORD PTR [rax+0x8],rdx
   140002eda:	mov    rax,QWORD PTR [rdx+0x8]
   140002ede:	mov    QWORD PTR [rcx+0x8],rax
   140002ee2:	mov    rax,QWORD PTR [rbx+0x8]
   140002ee6:	cmp    rdx,QWORD PTR [rax+0x8]
   140002eea:	jne    0x140002ef2
   140002eec:	mov    QWORD PTR [rax+0x8],rcx
   140002ef0:	jmp    0x140002f05
   140002ef2:	mov    rax,QWORD PTR [rdx+0x8]
   140002ef6:	cmp    rdx,QWORD PTR [rax+0x10]
   140002efa:	jne    0x140002f02
   140002efc:	mov    QWORD PTR [rax+0x10],rcx
   140002f00:	jmp    0x140002f05
   140002f02:	mov    QWORD PTR [rax],rcx
   140002f05:	mov    QWORD PTR [rcx+0x10],rdx
   140002f09:	mov    QWORD PTR [rdx+0x8],rcx
   140002f0d:	mov    BYTE PTR [r8+0x28],r11b
   140002f11:	mov    rcx,r10
   140002f14:	call   0x140009d48
   140002f19:	mov    rcx,QWORD PTR [rbx+0x10]
   140002f1d:	test   rcx,rcx
   140002f20:	je     0x140002f29
   140002f22:	dec    rcx
   140002f25:	mov    QWORD PTR [rbx+0x10],rcx
   140002f29:	mov    rcx,QWORD PTR [rsp+0xd0]
   140002f31:	mov    QWORD PTR [rdi],rcx
   140002f34:	mov    rax,rdi
   140002f37:	mov    rcx,QWORD PTR [rsp+0x90]
   140002f3f:	xor    rcx,rsp
   140002f42:	call   0x14000a0a0
   140002f47:	add    rsp,0xa0
   140002f4e:	pop    rdi
   140002f4f:	pop    rsi
   140002f50:	pop    rbx
   140002f51:	ret    
   140002f52:	int3   
   140002f53:	int3   
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	mov    QWORD PTR [rsp+0x8],rbx
   140002f5d:	mov    QWORD PTR [rsp+0x10],rsi
   140002f62:	push   rdi
   140002f63:	sub    rsp,0x20
   140002f67:	cmp    BYTE PTR [rdx+0x29],0x0
   140002f6b:	mov    rdi,rdx
   140002f6e:	mov    rsi,rcx
   140002f71:	mov    rbx,rdx
   140002f74:	jne    0x140002f96
   140002f76:	mov    rdx,QWORD PTR [rbx+0x10]
   140002f7a:	mov    rcx,rsi
   140002f7d:	call   0x140002f58
   140002f82:	mov    rbx,QWORD PTR [rbx]
   140002f85:	mov    rcx,rdi
   140002f88:	call   0x140009d48
   140002f8d:	cmp    BYTE PTR [rbx+0x29],0x0
   140002f91:	mov    rdi,rbx
   140002f94:	je     0x140002f76
   140002f96:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f9b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002fa0:	add    rsp,0x20
   140002fa4:	pop    rdi
   140002fa5:	ret    
   140002fa6:	int3   
   140002fa7:	int3   
   140002fa8:	int3   
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	mov    QWORD PTR [rsp+0x8],rbx
   140002fb1:	mov    QWORD PTR [rsp+0x10],rbp
   140002fb6:	mov    QWORD PTR [rsp+0x18],rsi
   140002fbb:	push   rdi
   140002fbc:	sub    rsp,0x20
   140002fc0:	cmp    QWORD PTR [rcx+0x20],0x10
   140002fc5:	lea    rbx,[rcx+0x8]
   140002fc9:	mov    rsi,r8
   140002fcc:	mov    rbp,rdx
   140002fcf:	mov    rdi,rcx
   140002fd2:	jb     0x140002fd9
   140002fd4:	mov    rax,QWORD PTR [rbx]
   140002fd7:	jmp    0x140002fdc
   140002fd9:	mov    rax,rbx
   140002fdc:	cmp    rdx,rax
   140002fdf:	jb     0x140003019
   140002fe1:	cmp    QWORD PTR [rcx+0x20],0x10
   140002fe6:	jb     0x140002fed
   140002fe8:	mov    rcx,QWORD PTR [rbx]
   140002feb:	jmp    0x140002ff0
   140002fed:	mov    rcx,rbx
   140002ff0:	add    rcx,QWORD PTR [rdi+0x18]
   140002ff4:	cmp    rcx,rdx
   140002ff7:	jbe    0x140003019
   140002ff9:	cmp    QWORD PTR [rdi+0x20],0x10
   140002ffe:	jb     0x140003003
   140003000:	mov    rbx,QWORD PTR [rbx]
   140003003:	sub    rbp,rbx
   140003006:	mov    r9,r8
   140003009:	mov    r8,rbp
   14000300c:	mov    rdx,rdi
   14000300f:	mov    rcx,rdi
   140003012:	call   0x140001cc0
   140003017:	jmp    0x14000308e
   140003019:	cmp    r8,0xfffffffffffffffe
   14000301d:	jbe    0x140003024
   14000301f:	call   0x140009bd8
   140003024:	cmp    QWORD PTR [rdi+0x20],rsi
   140003028:	jae    0x14000303b
   14000302a:	mov    r8,QWORD PTR [rdi+0x18]
   14000302e:	mov    rdx,rsi
   140003031:	mov    rcx,rdi
   140003034:	call   0x1400028d4
   140003039:	jmp    0x140003056
   14000303b:	test   rsi,rsi
   14000303e:	jne    0x14000305b
   140003040:	and    QWORD PTR [rdi+0x18],rsi
   140003044:	cmp    QWORD PTR [rdi+0x20],0x10
   140003049:	jb     0x140003050
   14000304b:	mov    rax,QWORD PTR [rbx]
   14000304e:	jmp    0x140003053
   140003050:	mov    rax,rbx
   140003053:	mov    BYTE PTR [rax],0x0
   140003056:	test   rsi,rsi
   140003059:	je     0x14000308b
   14000305b:	mov    rdx,QWORD PTR [rdi+0x20]
   14000305f:	cmp    rdx,0x10
   140003063:	jb     0x14000306a
   140003065:	mov    rcx,QWORD PTR [rbx]
   140003068:	jmp    0x14000306d
   14000306a:	mov    rcx,rbx
   14000306d:	mov    r9,rsi
   140003070:	mov    r8,rbp
   140003073:	call   QWORD PTR [rip+0x9337]        # 0x14000c3b0
   140003079:	cmp    QWORD PTR [rdi+0x20],0x10
   14000307e:	mov    QWORD PTR [rdi+0x18],rsi
   140003082:	jb     0x140003087
   140003084:	mov    rbx,QWORD PTR [rbx]
   140003087:	mov    BYTE PTR [rbx+rsi*1],0x0
   14000308b:	mov    rax,rdi
   14000308e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003093:	mov    rbp,QWORD PTR [rsp+0x38]
   140003098:	mov    rsi,QWORD PTR [rsp+0x40]
   14000309d:	add    rsp,0x20
   1400030a1:	pop    rdi
   1400030a2:	ret    
   1400030a3:	int3   
   1400030a4:	int3   
   1400030a5:	int3   
   1400030a6:	int3   
   1400030a7:	int3   
   1400030a8:	int3   
   1400030a9:	int3   
   1400030aa:	int3   
   1400030ab:	int3   
   1400030ac:	mov    QWORD PTR [rsp+0x8],rcx
   1400030b1:	push   rdi
   1400030b2:	sub    rsp,0x30
   1400030b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400030bf:	mov    QWORD PTR [rsp+0x50],rbx
   1400030c4:	mov    rdi,rcx
   1400030c7:	call   0x140004cf8
   1400030cc:	mov    QWORD PTR [rdi+0x8],rax
   1400030d0:	mov    BYTE PTR [rax+0x29],0x1
   1400030d4:	mov    rax,QWORD PTR [rdi+0x8]
   1400030d8:	mov    QWORD PTR [rax+0x8],rax
   1400030dc:	mov    rax,QWORD PTR [rdi+0x8]
   1400030e0:	mov    QWORD PTR [rax],rax
   1400030e3:	mov    rax,QWORD PTR [rdi+0x8]
   1400030e7:	mov    QWORD PTR [rax+0x10],rax
   1400030eb:	and    QWORD PTR [rdi+0x10],0x0
   1400030f0:	lea    rbx,[rdi+0x18]
   1400030f4:	mov    QWORD PTR [rsp+0x48],rbx
   1400030f9:	call   0x140004cf8
   1400030fe:	mov    QWORD PTR [rbx+0x8],rax
   140003102:	mov    BYTE PTR [rax+0x29],0x1
   140003106:	mov    rax,QWORD PTR [rbx+0x8]
   14000310a:	mov    QWORD PTR [rax+0x8],rax
   14000310e:	mov    rax,QWORD PTR [rbx+0x8]
   140003112:	mov    QWORD PTR [rax],rax
   140003115:	mov    rax,QWORD PTR [rbx+0x8]
   140003119:	mov    QWORD PTR [rax+0x10],rax
   14000311d:	and    QWORD PTR [rbx+0x10],0x0
   140003122:	lea    rbx,[rdi+0x30]
   140003126:	mov    QWORD PTR [rsp+0x48],rbx
   14000312b:	call   0x140004cf8
   140003130:	mov    QWORD PTR [rbx+0x8],rax
   140003134:	mov    BYTE PTR [rax+0x29],0x1
   140003138:	mov    rax,QWORD PTR [rbx+0x8]
   14000313c:	mov    QWORD PTR [rax+0x8],rax
   140003140:	mov    rax,QWORD PTR [rbx+0x8]
   140003144:	mov    QWORD PTR [rax],rax
   140003147:	mov    rax,QWORD PTR [rbx+0x8]
   14000314b:	mov    QWORD PTR [rax+0x10],rax
   14000314f:	and    QWORD PTR [rbx+0x10],0x0
   140003154:	lea    rbx,[rdi+0x48]
   140003158:	mov    QWORD PTR [rsp+0x48],rbx
   14000315d:	call   0x140004cf8
   140003162:	mov    QWORD PTR [rbx+0x8],rax
   140003166:	mov    BYTE PTR [rax+0x29],0x1
   14000316a:	mov    rax,QWORD PTR [rbx+0x8]
   14000316e:	mov    QWORD PTR [rax+0x8],rax
   140003172:	mov    rax,QWORD PTR [rbx+0x8]
   140003176:	mov    QWORD PTR [rax],rax
   140003179:	mov    rax,QWORD PTR [rbx+0x8]
   14000317d:	mov    QWORD PTR [rax+0x10],rax
   140003181:	and    QWORD PTR [rbx+0x10],0x0
   140003186:	lea    rbx,[rdi+0x60]
   14000318a:	mov    QWORD PTR [rsp+0x48],rbx
   14000318f:	call   0x140004cf8
   140003194:	mov    QWORD PTR [rbx+0x8],rax
   140003198:	mov    BYTE PTR [rax+0x29],0x1
   14000319c:	mov    rax,QWORD PTR [rbx+0x8]
   1400031a0:	mov    QWORD PTR [rax+0x8],rax
   1400031a4:	mov    rax,QWORD PTR [rbx+0x8]
   1400031a8:	mov    QWORD PTR [rax],rax
   1400031ab:	mov    rax,QWORD PTR [rbx+0x8]
   1400031af:	mov    QWORD PTR [rax+0x10],rax
   1400031b3:	and    QWORD PTR [rbx+0x10],0x0
   1400031b8:	mov    BYTE PTR [rdi+0x78],0x0
   1400031bc:	and    DWORD PTR [rdi+0x7c],0x0
   1400031c0:	and    QWORD PTR [rdi+0x80],0x0
   1400031c8:	and    QWORD PTR [rdi+0x88],0x0
   1400031d0:	mov    rax,rdi
   1400031d3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400031d8:	add    rsp,0x30
   1400031dc:	pop    rdi
   1400031dd:	ret    
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	int3   
   1400031e1:	int3   
   1400031e2:	int3   
   1400031e3:	int3   
   1400031e4:	sub    rsp,0x38
   1400031e8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400031f1:	mov    rax,QWORD PTR [rip+0xedc8]        # 0x140011fc0
   1400031f8:	test   rax,rax
   1400031fb:	jne    0x14000322a
   1400031fd:	mov    ecx,0x90
   140003202:	call   0x140009cc8
   140003207:	mov    QWORD PTR [rsp+0x40],rax
   14000320c:	test   rax,rax
   14000320f:	je     0x14000321a
   140003211:	mov    rcx,rax
   140003214:	call   0x1400030ac
   140003219:	nop
   14000321a:	mov    QWORD PTR [rip+0xed9f],rax        # 0x140011fc0
   140003221:	jmp    0x14000322a
   140003223:	mov    rax,QWORD PTR [rip+0xed96]        # 0x140011fc0
   14000322a:	add    rsp,0x38
   14000322e:	ret    
   14000322f:	int3   
   140003230:	int3   
   140003231:	int3   
   140003232:	int3   
   140003233:	int3   
   140003234:	int3   
   140003235:	int3   
   140003236:	int3   
   140003237:	int3   
   140003238:	int3   
   140003239:	int3   
   14000323a:	int3   
   14000323b:	int3   
   14000323c:	int3   
   14000323d:	int3   
   14000323e:	int3   
   14000323f:	int3   
   140003240:	xor    eax,eax
   140003242:	ret    
   140003243:	int3   
   140003244:	int3   
   140003245:	int3   
   140003246:	int3   
   140003247:	int3   
   140003248:	int3   
   140003249:	int3   
   14000324a:	int3   
   14000324b:	int3   
   14000324c:	int3   
   14000324d:	int3   
   14000324e:	int3   
   14000324f:	int3   
   140003250:	rex push rbx
   140003252:	sub    rsp,0x20
   140003256:	lea    rax,[rip+0x9583]        # 0x14000c7e0
   14000325d:	mov    rbx,rcx
   140003260:	mov    QWORD PTR [rcx],rax
   140003263:	test   dl,0x1
   140003266:	je     0x14000326d
   140003268:	call   0x140009d48
   14000326d:	mov    rax,rbx
   140003270:	add    rsp,0x20
   140003274:	pop    rbx
   140003275:	ret    
   140003276:	int3   
   140003277:	int3   
   140003278:	int3   
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	mov    eax,0x4
   140003285:	ret    
   140003286:	int3   
   140003287:	int3   
   140003288:	int3   
   140003289:	int3   
   14000328a:	int3   
   14000328b:	int3   
   14000328c:	int3   
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	mov    eax,0x10
   140003295:	ret    
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    rax,QWORD PTR [rcx+0x30]
   1400032a4:	ret    
   1400032a5:	int3   
   1400032a6:	int3   
   1400032a7:	int3   
   1400032a8:	int3   
   1400032a9:	int3   
   1400032aa:	int3   
   1400032ab:	int3   
   1400032ac:	int3   
   1400032ad:	int3   
   1400032ae:	int3   
   1400032af:	int3   
   1400032b0:	rex push rbx
   1400032b2:	sub    rsp,0x20
   1400032b6:	lea    rax,[rip+0x94fb]        # 0x14000c7b8
   1400032bd:	mov    rbx,rcx
   1400032c0:	mov    QWORD PTR [rcx],rax
   1400032c3:	test   dl,0x1
   1400032c6:	je     0x1400032cd
   1400032c8:	call   0x140009d48
   1400032cd:	mov    rax,rbx
   1400032d0:	add    rsp,0x20
   1400032d4:	pop    rbx
   1400032d5:	ret    
   1400032d6:	int3   
   1400032d7:	int3   
   1400032d8:	int3   
   1400032d9:	int3   
   1400032da:	int3   
   1400032db:	int3   
   1400032dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400032e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400032e6:	push   rdi
   1400032e7:	sub    rsp,0x20
   1400032eb:	mov    rbx,rdx
   1400032ee:	mov    rdi,rcx
   1400032f1:	lea    rdx,[rip+0xe714]        # 0x140011a0c
   1400032f8:	mov    ecx,0x18
   1400032fd:	call   0x14000a21c
   140003302:	mov    QWORD PTR [rsp+0x40],rax
   140003307:	mov    rsi,rax
   14000330a:	test   rax,rax
   14000330d:	je     0x140003323
   14000330f:	mov    QWORD PTR [rax+0x8],rdi
   140003313:	mov    QWORD PTR [rax+0x10],rbx
   140003317:	lea    rax,[rip+0x951a]        # 0x14000c838
   14000331e:	mov    QWORD PTR [rsi],rax
   140003321:	jmp    0x140003325
   140003323:	xor    esi,esi
   140003325:	test   rsi,rsi
   140003328:	jne    0x14000332f
   14000332a:	lea    eax,[rsi+0x8]
   14000332d:	jmp    0x140003354
   14000332f:	mov    rcx,rsi
   140003332:	call   0x1400054e0
   140003337:	mov    rdx,QWORD PTR [rsi]
   14000333a:	mov    edi,eax
   14000333c:	mov    rbx,QWORD PTR [rdx]
   14000333f:	mov    rcx,rbx
   140003342:	call   QWORD PTR [rip+0x91c8]        # 0x14000c510
   140003348:	mov    edx,0x1
   14000334d:	mov    rcx,rsi
   140003350:	call   rbx
   140003352:	mov    eax,edi
   140003354:	mov    rbx,QWORD PTR [rsp+0x30]
   140003359:	mov    rsi,QWORD PTR [rsp+0x38]
   14000335e:	add    rsp,0x20
   140003362:	pop    rdi
   140003363:	ret    
   140003364:	int3   
   140003365:	int3   
   140003366:	int3   
   140003367:	int3   
   140003368:	int3   
   140003369:	int3   
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	mov    QWORD PTR [rsp+0x8],rbx
   140003371:	mov    QWORD PTR [rsp+0x10],rbp
   140003376:	mov    QWORD PTR [rsp+0x18],rsi
   14000337b:	push   rdi
   14000337c:	sub    rsp,0x20
   140003380:	mov    rdi,rdx
   140003383:	mov    rbp,rcx
   140003386:	lea    rdx,[rip+0xe67f]        # 0x140011a0c
   14000338d:	mov    ecx,0x20
   140003392:	mov    rbx,r8
   140003395:	call   0x14000a21c
   14000339a:	mov    QWORD PTR [rsp+0x48],rax
   14000339f:	mov    rsi,rax
   1400033a2:	test   rax,rax
   1400033a5:	je     0x1400033bf
   1400033a7:	mov    QWORD PTR [rax+0x8],rdi
   1400033ab:	mov    QWORD PTR [rax+0x10],rbx
   1400033af:	lea    rax,[rip+0x945a]        # 0x14000c810
   1400033b6:	mov    QWORD PTR [rsi],rax
   1400033b9:	mov    QWORD PTR [rsi+0x18],rbp
   1400033bd:	jmp    0x1400033c1
   1400033bf:	xor    esi,esi
   1400033c1:	test   rsi,rsi
   1400033c4:	jne    0x1400033cb
   1400033c6:	lea    eax,[rsi+0x8]
   1400033c9:	jmp    0x1400033f0
   1400033cb:	mov    rcx,rsi
   1400033ce:	call   0x1400054e0
   1400033d3:	mov    rdx,QWORD PTR [rsi]
   1400033d6:	mov    edi,eax
   1400033d8:	mov    rbx,QWORD PTR [rdx]
   1400033db:	mov    rcx,rbx
   1400033de:	call   QWORD PTR [rip+0x912c]        # 0x14000c510
   1400033e4:	mov    edx,0x1
   1400033e9:	mov    rcx,rsi
   1400033ec:	call   rbx
   1400033ee:	mov    eax,edi
   1400033f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033f5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400033fa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400033ff:	add    rsp,0x20
   140003403:	pop    rdi
   140003404:	ret    
   140003405:	int3   
   140003406:	int3   
   140003407:	int3   
   140003408:	int3   
   140003409:	int3   
   14000340a:	int3   
   14000340b:	int3   
   14000340c:	rex push rbx
   14000340e:	sub    rsp,0x250
   140003415:	mov    rax,QWORD PTR [rip+0xdbe4]        # 0x140011000
   14000341c:	xor    rax,rsp
   14000341f:	mov    QWORD PTR [rsp+0x240],rax
   140003427:	xor    ebx,ebx
   140003429:	lea    rdx,[rsp+0x38]
   14000342e:	and    QWORD PTR [rsp+0x38],rbx
   140003433:	and    QWORD PTR [rsp+0x30],rbx
   140003438:	lea    ecx,[rbx+0xc]
   14000343b:	call   QWORD PTR [rip+0x8e0f]        # 0x14000c250
   140003441:	test   al,al
   140003443:	je     0x140003465
   140003445:	mov    rcx,QWORD PTR [rsp+0x38]
   14000344a:	lea    r9,[rsp+0x30]
   14000344f:	and    QWORD PTR [rsp+0x20],rbx
   140003454:	lea    edx,[rbx+0x1]
   140003457:	lea    r8d,[rbx+0xc]
   14000345b:	call   QWORD PTR [rip+0x8eb7]        # 0x14000c318
   140003461:	test   eax,eax
   140003463:	jne    0x14000346f
   140003465:	call   QWORD PTR [rip+0x8bbd]        # 0x14000c028
   14000346b:	mov    ebx,eax
   14000346d:	jmp    0x140003493
   14000346f:	mov    r8d,0x100
   140003475:	lea    rdx,[rsp+0x40]
   14000347a:	mov    ecx,0x201b
   14000347f:	call   0x140007cc0
   140003484:	mov    rdx,QWORD PTR [rsp+0x30]
   140003489:	lea    rcx,[rsp+0x40]
   14000348e:	call   0x140006774
   140003493:	mov    rcx,QWORD PTR [rsp+0x38]
   140003498:	test   rcx,rcx
   14000349b:	je     0x1400034a3
   14000349d:	call   QWORD PTR [rip+0x8d4d]        # 0x14000c1f0
   1400034a3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400034a8:	test   rcx,rcx
   1400034ab:	je     0x1400034b3
   1400034ad:	call   QWORD PTR [rip+0x8be5]        # 0x14000c098
   1400034b3:	mov    eax,ebx
   1400034b5:	mov    rcx,QWORD PTR [rsp+0x240]
   1400034bd:	xor    rcx,rsp
   1400034c0:	call   0x14000a0a0
   1400034c5:	add    rsp,0x250
   1400034cc:	pop    rbx
   1400034cd:	ret    
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	int3   
   1400034d1:	int3   
   1400034d2:	int3   
   1400034d3:	int3   
   1400034d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400034d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400034de:	push   rbp
   1400034df:	push   rdi
   1400034e0:	push   r12
   1400034e2:	push   r14
   1400034e4:	push   r15
   1400034e6:	lea    rbp,[rsp-0x580]
   1400034ee:	sub    rsp,0x680
   1400034f5:	mov    rax,QWORD PTR [rip+0xdb04]        # 0x140011000
   1400034fc:	xor    rax,rsp
   1400034ff:	mov    QWORD PTR [rbp+0x570],rax
   140003506:	mov    edi,DWORD PTR [rip+0xeabc]        # 0x140011fc8
   14000350c:	lea    rax,[rsp+0x40]
   140003511:	mov    r14,rcx
   140003514:	mov    QWORD PTR [rsp+0x20],rax
   140003519:	mov    rcx,0xffffffff80000002
   140003520:	mov    DWORD PTR [rsp+0x34],0x4
   140003528:	mov    r9d,0x20019
   14000352e:	lea    rdx,[rip+0x93db]        # 0x14000c910
   140003535:	xor    r8d,r8d
   140003538:	xor    r15d,r15d
   14000353b:	call   QWORD PTR [rip+0x8c27]        # 0x14000c168
   140003541:	test   eax,eax
   140003543:	jne    0x140003743
   140003549:	mov    rcx,QWORD PTR [rsp+0x40]
   14000354e:	lea    rax,[rsp+0x34]
   140003553:	mov    QWORD PTR [rsp+0x28],rax
   140003558:	lea    r9,[rsp+0x48]
   14000355d:	lea    rax,[rsp+0x30]
   140003562:	xor    r8d,r8d
   140003565:	mov    rdx,r14
   140003568:	mov    QWORD PTR [rsp+0x20],rax
   14000356d:	call   QWORD PTR [rip+0x8bfd]        # 0x14000c170
   140003573:	mov    ebx,eax
   140003575:	cmp    eax,0x2
   140003578:	jne    0x140003581
   14000357a:	and    DWORD PTR [rsp+0x30],r15d
   14000357f:	xor    ebx,ebx
   140003581:	test   ebx,ebx
   140003583:	jne    0x140003736
   140003589:	cmp    DWORD PTR [rip+0xea38],r15d        # 0x140011fc8
   140003590:	lea    rsi,[rip+0x9429]        # 0x14000c9c0
   140003597:	jne    0x1400035e3
   140003599:	mov    r12d,0x100
   14000359f:	lea    rdx,[rsp+0x70]
   1400035a4:	mov    r8d,r12d
   1400035a7:	mov    ecx,0x2012
   1400035ac:	call   0x140007cc0
   1400035b1:	lea    rdx,[rsp+0x70]
   1400035b6:	mov    rcx,rsi
   1400035b9:	call   0x140006774
   1400035be:	mov    r8d,r12d
   1400035c1:	lea    rdx,[rsp+0x70]
   1400035c6:	mov    ecx,0x2013
   1400035cb:	call   0x140007cc0
   1400035d0:	lea    rdx,[rsp+0x70]
   1400035d5:	lea    rcx,[rip+0x9504]        # 0x14000cae0
   1400035dc:	call   0x140006774
   1400035e1:	jmp    0x1400035e8
   1400035e3:	call   0x140007ab0
   1400035e8:	lea    rdx,[rip+0x9371]        # 0x14000c960
   1400035ef:	mov    rcx,r14
   1400035f2:	call   QWORD PTR [rip+0x8ec8]        # 0x14000c4c0
   1400035f8:	test   eax,eax
   1400035fa:	jne    0x140003607
   1400035fc:	movzx  eax,BYTE PTR [rsp+0x30]
   140003601:	mov    DWORD PTR [rsp+0x30],eax
   140003605:	jmp    0x14000360b
   140003607:	mov    eax,DWORD PTR [rsp+0x30]
   14000360b:	cmp    eax,0x2
   14000360e:	jb     0x140003630
   140003610:	jne    0x140003626
   140003612:	lea    rdx,[rip+0x9377]        # 0x14000c990
   140003619:	mov    rcx,r14
   14000361c:	call   QWORD PTR [rip+0x8e9e]        # 0x14000c4c0
   140003622:	test   eax,eax
   140003624:	je     0x140003630
   140003626:	mov    ebx,0xd
   14000362b:	jmp    0x140003736
   140003630:	test   edi,edi
   140003632:	lea    r12,[rip+0x937b]        # 0x14000c9b4
   140003639:	cmovne rsi,r12
   14000363d:	je     0x14000369e
   14000363f:	lea    rdx,[rsp+0x38]
   140003644:	mov    DWORD PTR [rsp+0x38],0x10
   14000364c:	lea    rcx,[rsp+0x50]
   140003651:	call   QWORD PTR [rip+0x8a51]        # 0x14000c0a8
   140003657:	test   eax,eax
   140003659:	je     0x14000365f
   14000365b:	xor    ebx,ebx
   14000365d:	jmp    0x14000366f
   14000365f:	call   QWORD PTR [rip+0x89c3]        # 0x14000c028
   140003665:	mov    ebx,eax
   140003667:	test   eax,eax
   140003669:	jne    0x140003743
   14000366f:	mov    r8d,0x200
   140003675:	lea    rdx,[rbp+0x170]
   14000367c:	mov    ecx,0x200c
   140003681:	call   0x140007cc0
   140003686:	lea    r8,[rbp+0x170]
   14000368d:	lea    rdx,[rsp+0x50]
   140003692:	lea    rcx,[rip+0x9337]        # 0x14000c9d0
   140003699:	call   0x140006774
   14000369e:	mov    rdx,r14
   1400036a1:	mov    rcx,rsi
   1400036a4:	call   0x140006774
   1400036a9:	test   edi,edi
   1400036ab:	je     0x1400036b9
   1400036ad:	lea    rcx,[rip+0x932c]        # 0x14000c9e0
   1400036b4:	call   0x140006774
   1400036b9:	mov    eax,DWORD PTR [rsp+0x30]
   1400036bd:	test   eax,eax
   1400036bf:	je     0x1400036db
   1400036c1:	sub    eax,0x1
   1400036c4:	je     0x1400036d3
   1400036c6:	cmp    eax,0x1
   1400036c9:	jne    0x1400036e1
   1400036cb:	mov    r15d,0x201c
   1400036d1:	jmp    0x1400036e1
   1400036d3:	mov    r15d,0x2007
   1400036d9:	jmp    0x1400036e1
   1400036db:	mov    r15d,0x2008
   1400036e1:	mov    r8d,0x200
   1400036e7:	lea    rdx,[rbp+0x170]
   1400036ee:	mov    ecx,r15d
   1400036f1:	call   0x140007cc0
   1400036f6:	lea    rdx,[rbp+0x170]
   1400036fd:	mov    rcx,r12
   140003700:	call   0x140006774
   140003705:	test   edi,edi
   140003707:	je     0x14000372a
   140003709:	lea    rcx,[rip+0x92d0]        # 0x14000c9e0
   140003710:	call   0x140006774
   140003715:	cmp    edi,0x2
   140003718:	jne    0x14000372a
   14000371a:	mov    edx,DWORD PTR [rsp+0x30]
   14000371e:	lea    rcx,[rip+0x92c3]        # 0x14000c9e8
   140003725:	call   0x140006774
   14000372a:	lea    rcx,[rip+0x92bf]        # 0x14000c9f0
   140003731:	call   0x140006774
   140003736:	mov    rcx,QWORD PTR [rsp+0x40]
   14000373b:	call   QWORD PTR [rip+0x8a1f]        # 0x14000c160
   140003741:	mov    eax,ebx
   140003743:	mov    rcx,QWORD PTR [rbp+0x570]
   14000374a:	xor    rcx,rsp
   14000374d:	call   0x14000a0a0
   140003752:	lea    r11,[rsp+0x680]
   14000375a:	mov    rbx,QWORD PTR [r11+0x38]
   14000375e:	mov    rsi,QWORD PTR [r11+0x40]
   140003762:	mov    rsp,r11
   140003765:	pop    r15
   140003767:	pop    r14
   140003769:	pop    r12
   14000376b:	pop    rdi
   14000376c:	pop    rbp
   14000376d:	ret    
   14000376e:	int3   
   14000376f:	int3   
   140003770:	int3   
   140003771:	int3   
   140003772:	int3   
   140003773:	int3   
   140003774:	mov    rax,rsp
   140003777:	mov    QWORD PTR [rax+0x8],rbx
   14000377b:	mov    QWORD PTR [rax+0x10],rbp
   14000377f:	mov    QWORD PTR [rax+0x18],rsi
   140003783:	mov    QWORD PTR [rax+0x20],rdi
   140003787:	push   r14
   140003789:	sub    rsp,0x30
   14000378d:	mov    rbp,rdx
   140003790:	mov    r14,rcx
   140003793:	lea    rdx,[rip+0xe272]        # 0x140011a0c
   14000379a:	mov    ecx,0x30
   14000379f:	mov    bl,r9b
   1400037a2:	mov    dil,r8b
   1400037a5:	call   0x14000a21c
   1400037aa:	mov    QWORD PTR [rsp+0x20],rax
   1400037af:	mov    rsi,rax
   1400037b2:	test   rax,rax
   1400037b5:	je     0x1400037f8
   1400037b7:	mov    QWORD PTR [rax+0x10],r14
   1400037bb:	mov    QWORD PTR [rax+0x18],rbp
   1400037bf:	mov    BYTE PTR [rax+0x20],dil
   1400037c3:	mov    BYTE PTR [rax+0x21],bl
   1400037c6:	mov    al,BYTE PTR [rsp+0x60]
   1400037ca:	mov    BYTE PTR [rsi+0x22],al
   1400037cd:	mov    al,BYTE PTR [rsp+0x68]
   1400037d1:	mov    BYTE PTR [rsi+0x23],al
   1400037d4:	mov    al,BYTE PTR [rsp+0x80]
   1400037db:	mov    BYTE PTR [rsi+0x24],al
   1400037de:	mov    eax,DWORD PTR [rsp+0x70]
   1400037e2:	mov    DWORD PTR [rsi+0x28],eax
   1400037e5:	mov    eax,DWORD PTR [rsp+0x78]
   1400037e9:	mov    DWORD PTR [rsi+0x2c],eax
   1400037ec:	lea    rax,[rip+0x8f65]        # 0x14000c758
   1400037f3:	mov    QWORD PTR [rsi],rax
   1400037f6:	jmp    0x1400037fa
   1400037f8:	xor    esi,esi
   1400037fa:	test   rsi,rsi
   1400037fd:	jne    0x140003804
   1400037ff:	lea    eax,[rsi+0x8]
   140003802:	jmp    0x140003829
   140003804:	mov    rcx,rsi
   140003807:	call   0x140004d4c
   14000380c:	mov    rdx,QWORD PTR [rsi]
   14000380f:	mov    edi,eax
   140003811:	mov    rbx,QWORD PTR [rdx]
   140003814:	mov    rcx,rbx
   140003817:	call   QWORD PTR [rip+0x8cf3]        # 0x14000c510
   14000381d:	mov    edx,0x1
   140003822:	mov    rcx,rsi
   140003825:	call   rbx
   140003827:	mov    eax,edi
   140003829:	mov    rbx,QWORD PTR [rsp+0x40]
   14000382e:	mov    rbp,QWORD PTR [rsp+0x48]
   140003833:	mov    rsi,QWORD PTR [rsp+0x50]
   140003838:	mov    rdi,QWORD PTR [rsp+0x58]
   14000383d:	add    rsp,0x30
   140003841:	pop    r14
   140003843:	ret    
   140003844:	int3   
   140003845:	int3   
   140003846:	int3   
   140003847:	int3   
   140003848:	int3   
   140003849:	int3   
   14000384a:	int3   
   14000384b:	int3   
   14000384c:	mov    rax,rsp
   14000384f:	mov    QWORD PTR [rax+0x8],rbx
   140003853:	mov    QWORD PTR [rax+0x10],rbp
   140003857:	mov    QWORD PTR [rax+0x18],rsi
   14000385b:	mov    QWORD PTR [rax+0x20],rdi
   14000385f:	push   r14
   140003861:	sub    rsp,0x30
   140003865:	mov    rbp,rdx
   140003868:	mov    r14,rcx
   14000386b:	lea    rdx,[rip+0xe19a]        # 0x140011a0c
   140003872:	mov    ecx,0x38
   140003877:	mov    bl,r9b
   14000387a:	mov    rdi,r8
   14000387d:	call   0x14000a21c
   140003882:	mov    QWORD PTR [rsp+0x20],rax
   140003887:	mov    rsi,rax
   14000388a:	test   rax,rax
   14000388d:	je     0x1400038da
   14000388f:	mov    QWORD PTR [rax+0x10],rbp
   140003893:	mov    QWORD PTR [rax+0x18],rdi
   140003897:	mov    BYTE PTR [rax+0x20],bl
   14000389a:	mov    al,BYTE PTR [rsp+0x60]
   14000389e:	mov    BYTE PTR [rsi+0x21],al
   1400038a1:	mov    al,BYTE PTR [rsp+0x68]
   1400038a5:	mov    BYTE PTR [rsi+0x22],al
   1400038a8:	mov    al,BYTE PTR [rsp+0x70]
   1400038ac:	mov    BYTE PTR [rsi+0x23],al
   1400038af:	mov    al,BYTE PTR [rsp+0x88]
   1400038b6:	mov    BYTE PTR [rsi+0x24],al
   1400038b9:	mov    eax,DWORD PTR [rsp+0x78]
   1400038bd:	mov    DWORD PTR [rsi+0x28],eax
   1400038c0:	mov    eax,DWORD PTR [rsp+0x80]
   1400038c7:	mov    DWORD PTR [rsi+0x2c],eax
   1400038ca:	lea    rax,[rip+0x8eb7]        # 0x14000c788
   1400038d1:	mov    QWORD PTR [rsi],rax
   1400038d4:	mov    QWORD PTR [rsi+0x30],r14
   1400038d8:	jmp    0x1400038dc
   1400038da:	xor    esi,esi
   1400038dc:	test   rsi,rsi
   1400038df:	jne    0x1400038e6
   1400038e1:	lea    eax,[rsi+0x8]
   1400038e4:	jmp    0x14000390b
   1400038e6:	mov    rcx,rsi
   1400038e9:	call   0x140004d4c
   1400038ee:	mov    rdx,QWORD PTR [rsi]
   1400038f1:	mov    edi,eax
   1400038f3:	mov    rbx,QWORD PTR [rdx]
   1400038f6:	mov    rcx,rbx
   1400038f9:	call   QWORD PTR [rip+0x8c11]        # 0x14000c510
   1400038ff:	mov    edx,0x1
   140003904:	mov    rcx,rsi
   140003907:	call   rbx
   140003909:	mov    eax,edi
   14000390b:	mov    rbx,QWORD PTR [rsp+0x40]
   140003910:	mov    rbp,QWORD PTR [rsp+0x48]
   140003915:	mov    rsi,QWORD PTR [rsp+0x50]
   14000391a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000391f:	add    rsp,0x30
   140003923:	pop    r14
   140003925:	ret    
   140003926:	int3   
   140003927:	int3   
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	mov    DWORD PTR [rsp+0x10],edx
   140003930:	push   rbx
   140003931:	sub    rsp,0x30
   140003935:	mov    rbx,rcx
   140003938:	lea    rax,[rsp+0x50]
   14000393d:	mov    rcx,0xffffffff80000002
   140003944:	mov    QWORD PTR [rsp+0x20],rax
   140003949:	mov    r9d,0x20006
   14000394f:	lea    rdx,[rip+0x8fba]        # 0x14000c910
   140003956:	xor    r8d,r8d
   140003959:	call   QWORD PTR [rip+0x8809]        # 0x14000c168
   14000395f:	test   eax,eax
   140003961:	jne    0x1400039ba
   140003963:	lea    rdx,[rip+0x8ff6]        # 0x14000c960
   14000396a:	mov    rcx,rbx
   14000396d:	call   QWORD PTR [rip+0x8b4d]        # 0x14000c4c0
   140003973:	mov    rcx,QWORD PTR [rsp+0x50]
   140003978:	xor    r8d,r8d
   14000397b:	test   eax,eax
   14000397d:	mov    rdx,rbx
   140003980:	lea    rax,[rsp+0x48]
   140003985:	jne    0x140003995
   140003987:	mov    DWORD PTR [rsp+0x28],0x1
   14000398f:	lea    r9d,[r8+0x3]
   140003993:	jmp    0x1400039a0
   140003995:	mov    r9d,0x4
   14000399b:	mov    DWORD PTR [rsp+0x28],r9d
   1400039a0:	mov    QWORD PTR [rsp+0x20],rax
   1400039a5:	call   QWORD PTR [rip+0x87ad]        # 0x14000c158
   1400039ab:	mov    rcx,QWORD PTR [rsp+0x50]
   1400039b0:	mov    ebx,eax
   1400039b2:	call   QWORD PTR [rip+0x87a8]        # 0x14000c160
   1400039b8:	mov    eax,ebx
   1400039ba:	add    rsp,0x30
   1400039be:	pop    rbx
   1400039bf:	ret    
   1400039c0:	int3   
   1400039c1:	int3   
   1400039c2:	int3   
   1400039c3:	int3   
   1400039c4:	int3   
   1400039c5:	int3   
   1400039c6:	int3   
   1400039c7:	int3   
   1400039c8:	mov    rax,rsp
   1400039cb:	mov    QWORD PTR [rax+0x8],rbx
   1400039cf:	mov    QWORD PTR [rax+0x10],rsi
   1400039d3:	mov    QWORD PTR [rax+0x18],rdi
   1400039d7:	push   rbp
   1400039d8:	push   r14
   1400039da:	push   r15
   1400039dc:	lea    rbp,[rax-0x3a8]
   1400039e3:	sub    rsp,0x490
   1400039ea:	mov    rax,QWORD PTR [rip+0xd60f]        # 0x140011000
   1400039f1:	xor    rax,rsp
   1400039f4:	mov    QWORD PTR [rbp+0x380],rax
   1400039fb:	and    QWORD PTR [rsp+0x30],0x0
   140003a01:	xor    ebx,ebx
   140003a03:	and    QWORD PTR [rsp+0x48],rbx
   140003a08:	mov    r15b,cl
   140003a0b:	and    DWORD PTR [rsp+0x50],ebx
   140003a0f:	lea    rcx,[rsp+0x58]
   140003a14:	xor    edx,edx
   140003a16:	lea    r8d,[rbx+0x28]
   140003a1a:	call   0x14000aabe
   140003a1f:	and    QWORD PTR [rsp+0x38],rbx
   140003a24:	lea    rcx,[rsp+0x30]
   140003a29:	and    QWORD PTR [rsp+0x40],rbx
   140003a2e:	call   QWORD PTR [rip+0x87fc]        # 0x14000c230
   140003a34:	test   al,al
   140003a36:	jne    0x140003a40
   140003a38:	call   QWORD PTR [rip+0x85ea]        # 0x14000c028
   140003a3e:	jmp    0x140003a98
   140003a40:	movsxd rsi,DWORD PTR [rip+0xe581]        # 0x140011fc8
   140003a47:	lea    rdx,[rbp-0x80]
   140003a4b:	mov    r14d,0x200
   140003a51:	mov    ecx,0x200d
   140003a56:	mov    r8d,r14d
   140003a59:	call   0x140007cc0
   140003a5e:	lea    rcx,[rbp-0x80]
   140003a62:	call   0x140006774
   140003a67:	mov    rax,QWORD PTR [rsp+0x30]
   140003a6c:	cmp    DWORD PTR [rax],ebx
   140003a6e:	je     0x140003c0a
   140003a74:	lea    r9,[rsp+0x48]
   140003a79:	mov    r8d,0x800
   140003a7f:	lea    rdx,[rsp+0x50]
   140003a84:	xor    ecx,ecx
   140003a86:	call   QWORD PTR [rip+0x885c]        # 0x14000c2e8
   140003a8c:	test   eax,eax
   140003a8e:	jns    0x140003a9f
   140003a90:	mov    ecx,eax
   140003a92:	call   QWORD PTR [rip+0x8a60]        # 0x14000c4f8
   140003a98:	mov    ebx,eax
   140003a9a:	jmp    0x140003c0a
   140003a9f:	mov    rcx,QWORD PTR [rsp+0x48]
   140003aa4:	lea    rax,[rsp+0x40]
   140003aa9:	mov    QWORD PTR [rsp+0x20],rax
   140003aae:	lea    r9,[rsp+0x38]
   140003ab3:	mov    rax,QWORD PTR [rsp+0x30]
   140003ab8:	mov    r8,QWORD PTR [rax+0x8]
   140003abc:	mov    edx,DWORD PTR [rax]
   140003abe:	call   QWORD PTR [rip+0x881c]        # 0x14000c2e0
   140003ac4:	test   eax,eax
   140003ac6:	js     0x140003c0a
   140003acc:	mov    r8d,r14d
   140003acf:	lea    rdx,[rbp-0x80]
   140003ad3:	mov    ecx,0x200e
   140003ad8:	call   0x140007cc0
   140003add:	lea    rax,[rip+0x8ed0]        # 0x14000c9b4
   140003ae4:	test   esi,esi
   140003ae6:	lea    rdi,[rip+0x8ed3]        # 0x14000c9c0
   140003aed:	cmovne rdi,rax
   140003af1:	lea    rdx,[rbp-0x80]
   140003af5:	mov    rcx,rdi
   140003af8:	call   0x140006774
   140003afd:	test   r15b,r15b
   140003b00:	je     0x140003b2f
   140003b02:	test   esi,esi
   140003b04:	je     0x140003b12
   140003b06:	lea    rcx,[rip+0x8eeb]        # 0x14000c9f8
   140003b0d:	call   0x140006774
   140003b12:	mov    r8d,r14d
   140003b15:	lea    rdx,[rbp-0x80]
   140003b19:	mov    ecx,0x200f
   140003b1e:	call   0x140007cc0
   140003b23:	lea    rdx,[rbp-0x80]
   140003b27:	mov    rcx,rdi
   140003b2a:	call   0x140006774
   140003b2f:	lea    rcx,[rip+0x8ec6]        # 0x14000c9fc
   140003b36:	call   0x140006774
   140003b3b:	mov    rax,QWORD PTR [rsp+0x30]
   140003b40:	xor    edi,edi
   140003b42:	cmp    DWORD PTR [rax],ebx
   140003b44:	jbe    0x140003c0a
   140003b4a:	mov    r11,QWORD PTR [rsp+0x40]
   140003b4f:	mov    r10d,edi
   140003b52:	shl    r10,0x5
   140003b56:	mov    eax,DWORD PTR [r10+r11*1]
   140003b5a:	sub    eax,0x6
   140003b5d:	cmp    eax,0x2
   140003b60:	jbe    0x140003ba9
   140003b62:	movzx  edx,WORD PTR [r10+r11*1+0x8]
   140003b68:	shr    edx,1
   140003b6a:	cmp    DWORD PTR [r10+r11*1+0x18],0xffffffff
   140003b70:	je     0x140003b93
   140003b72:	movsxd rax,DWORD PTR [r10+r11*1+0x18]
   140003b77:	lea    rcx,[rax+rax*2]
   140003b7b:	mov    rax,QWORD PTR [rsp+0x38]
   140003b80:	mov    r8,QWORD PTR [rax+0x8]
   140003b84:	movzx  r9d,WORD PTR [r8+rcx*8]
   140003b89:	mov    r8,QWORD PTR [r8+rcx*8+0x8]
   140003b8e:	shr    r9d,1
   140003b91:	jmp    0x140003b99
   140003b93:	xor    r9d,r9d
   140003b96:	xor    r8d,r8d
   140003b99:	mov    rcx,QWORD PTR [r10+r11*1+0x10]
   140003b9e:	call   0x1400071ac
   140003ba3:	mov    ebx,eax
   140003ba5:	test   eax,eax
   140003ba7:	jmp    0x140003bbf
   140003ba9:	mov    rax,QWORD PTR [rsp+0x30]
   140003bae:	mov    rcx,QWORD PTR [rax+0x8]
   140003bb2:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140003bb6:	call   0x140007150
   140003bbb:	mov    ebx,eax
   140003bbd:	test   eax,eax
   140003bbf:	jne    0x140003c0a
   140003bc1:	test   r15b,r15b
   140003bc4:	je     0x140003bef
   140003bc6:	test   rsi,rsi
   140003bc9:	je     0x140003bd7
   140003bcb:	lea    rcx,[rip+0x8e26]        # 0x14000c9f8
   140003bd2:	call   0x140006774
   140003bd7:	mov    rax,QWORD PTR [rsp+0x30]
   140003bdc:	mov    rcx,QWORD PTR [rax+0x8]
   140003be0:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140003be4:	call   0x140007150
   140003be9:	mov    ebx,eax
   140003beb:	test   eax,eax
   140003bed:	jne    0x140003c0a
   140003bef:	lea    rcx,[rip+0x8e06]        # 0x14000c9fc
   140003bf6:	call   0x140006774
   140003bfb:	mov    rax,QWORD PTR [rsp+0x30]
   140003c00:	inc    edi
   140003c02:	cmp    edi,DWORD PTR [rax]
   140003c04:	jb     0x140003b4a
   140003c0a:	mov    rcx,QWORD PTR [rsp+0x48]
   140003c0f:	test   rcx,rcx
   140003c12:	je     0x140003c1a
   140003c14:	call   QWORD PTR [rip+0x86d6]        # 0x14000c2f0
   140003c1a:	mov    rcx,QWORD PTR [rsp+0x30]
   140003c1f:	test   rcx,rcx
   140003c22:	je     0x140003c2a
   140003c24:	call   QWORD PTR [rip+0x85c6]        # 0x14000c1f0
   140003c2a:	mov    rcx,QWORD PTR [rsp+0x38]
   140003c2f:	test   rcx,rcx
   140003c32:	je     0x140003c3a
   140003c34:	call   QWORD PTR [rip+0x869e]        # 0x14000c2d8
   140003c3a:	mov    rcx,QWORD PTR [rsp+0x40]
   140003c3f:	test   rcx,rcx
   140003c42:	je     0x140003c4a
   140003c44:	call   QWORD PTR [rip+0x868e]        # 0x14000c2d8
   140003c4a:	mov    eax,ebx
   140003c4c:	mov    rcx,QWORD PTR [rbp+0x380]
   140003c53:	xor    rcx,rsp
   140003c56:	call   0x14000a0a0
   140003c5b:	lea    r11,[rsp+0x490]
   140003c63:	mov    rbx,QWORD PTR [r11+0x20]
   140003c67:	mov    rsi,QWORD PTR [r11+0x28]
   140003c6b:	mov    rdi,QWORD PTR [r11+0x30]
   140003c6f:	mov    rsp,r11
   140003c72:	pop    r15
   140003c74:	pop    r14
   140003c76:	pop    rbp
   140003c77:	ret    
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	mov    QWORD PTR [rsp+0x8],rbx
   140003c85:	mov    QWORD PTR [rsp+0x10],rbp
   140003c8a:	mov    QWORD PTR [rsp+0x18],rsi
   140003c8f:	push   rdi
   140003c90:	push   r12
   140003c92:	push   r14
   140003c94:	sub    rsp,0x90
   140003c9b:	mov    rax,QWORD PTR [rip+0xd35e]        # 0x140011000
   140003ca2:	xor    rax,rsp
   140003ca5:	mov    QWORD PTR [rsp+0x80],rax
   140003cad:	mov    r14b,cl
   140003cb0:	xor    esi,esi
   140003cb2:	call   0x1400031e4
   140003cb7:	mov    rbx,rax
   140003cba:	test   rax,rax
   140003cbd:	jne    0x140003cc7
   140003cbf:	lea    eax,[rsi+0x8]
   140003cc2:	jmp    0x140003de3
   140003cc7:	cmp    BYTE PTR [rax+0x78],sil
   140003ccb:	jne    0x140003ce8
   140003ccd:	mov    eax,DWORD PTR [rax+0x7c]
   140003cd0:	test   eax,eax
   140003cd2:	jne    0x140003de3
   140003cd8:	mov    rcx,rbx
   140003cdb:	call   0x140001554
   140003ce0:	test   eax,eax
   140003ce2:	jne    0x140003de3
   140003ce8:	xor    eax,eax
   140003cea:	test   eax,eax
   140003cec:	jne    0x140003de3
   140003cf2:	mov    rsi,rbx
   140003cf5:	test   eax,eax
   140003cf7:	jne    0x140003de3
   140003cfd:	movsxd rdi,DWORD PTR [rip+0xe2c4]        # 0x140011fc8
   140003d04:	mov    cl,r14b
   140003d07:	call   0x140007b2c
   140003d0c:	mov    rax,QWORD PTR [rbx+0x8]
   140003d10:	lea    r12,[rip+0x8c9d]        # 0x14000c9b4
   140003d17:	test   edi,edi
   140003d19:	lea    rbp,[rip+0x8ca0]        # 0x14000c9c0
   140003d20:	cmovne rbp,r12
   140003d24:	mov    rbx,QWORD PTR [rax]
   140003d27:	cmp    rbx,rax
   140003d2a:	je     0x140003de1
   140003d30:	mov    rdx,QWORD PTR [rbx+0x18]
   140003d34:	mov    rcx,rbp
   140003d37:	call   0x140006774
   140003d3c:	test   r14b,r14b
   140003d3f:	je     0x140003d7b
   140003d41:	mov    rcx,QWORD PTR [rbx+0x20]
   140003d45:	lea    rdx,[rsp+0x30]
   140003d4a:	mov    r8d,0x27
   140003d50:	call   0x1400072a8
   140003d55:	test   eax,eax
   140003d57:	jne    0x140003de3
   140003d5d:	test   rdi,rdi
   140003d60:	je     0x140003d6e
   140003d62:	lea    rcx,[rip+0x8c8f]        # 0x14000c9f8
   140003d69:	call   0x140006774
   140003d6e:	lea    rdx,[rsp+0x30]
   140003d73:	mov    rcx,r12
   140003d76:	call   0x140006774
   140003d7b:	lea    rcx,[rip+0x8c7a]        # 0x14000c9fc
   140003d82:	call   0x140006774
   140003d87:	cmp    BYTE PTR [rbx+0x29],0x0
   140003d8b:	je     0x140003da4
   140003d8d:	and    QWORD PTR [rsp+0x20],0x0
   140003d93:	xor    r9d,r9d
   140003d96:	xor    r8d,r8d
   140003d99:	xor    edx,edx
   140003d9b:	xor    ecx,ecx
   140003d9d:	call   0x14000a0c4
   140003da2:	jmp    0x140003dd8
   140003da4:	mov    rax,QWORD PTR [rbx+0x10]
   140003da8:	cmp    BYTE PTR [rax+0x29],0x0
   140003dac:	jne    0x140003dbc
   140003dae:	mov    rbx,rax
   140003db1:	mov    rax,QWORD PTR [rax]
   140003db4:	cmp    BYTE PTR [rax+0x29],0x0
   140003db8:	je     0x140003dae
   140003dba:	jmp    0x140003dd8
   140003dbc:	mov    rax,QWORD PTR [rbx+0x8]
   140003dc0:	jmp    0x140003dcf
   140003dc2:	cmp    rbx,QWORD PTR [rax+0x10]
   140003dc6:	jne    0x140003dd5
   140003dc8:	mov    rbx,rax
   140003dcb:	mov    rax,QWORD PTR [rax+0x8]
   140003dcf:	cmp    BYTE PTR [rax+0x29],0x0
   140003dd3:	je     0x140003dc2
   140003dd5:	mov    rbx,rax
   140003dd8:	cmp    rbx,QWORD PTR [rsi+0x8]
   140003ddc:	jmp    0x140003d2a
   140003de1:	xor    eax,eax
   140003de3:	mov    rcx,QWORD PTR [rsp+0x80]
   140003deb:	xor    rcx,rsp
   140003dee:	call   0x14000a0a0
   140003df3:	lea    r11,[rsp+0x90]
   140003dfb:	mov    rbx,QWORD PTR [r11+0x20]
   140003dff:	mov    rbp,QWORD PTR [r11+0x28]
   140003e03:	mov    rsi,QWORD PTR [r11+0x30]
   140003e07:	mov    rsp,r11
   140003e0a:	pop    r14
   140003e0c:	pop    r12
   140003e0e:	pop    rdi
   140003e0f:	ret    
   140003e10:	int3   
   140003e11:	int3   
   140003e12:	int3   
   140003e13:	int3   
   140003e14:	int3   
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	mov    rax,rsp
   140003e1b:	mov    QWORD PTR [rax+0x10],rbx
   140003e1f:	mov    QWORD PTR [rax+0x18],rsi
   140003e23:	mov    QWORD PTR [rax+0x20],rdi
   140003e27:	push   rbp
   140003e28:	push   r12
   140003e2a:	push   r13
   140003e2c:	push   r14
   140003e2e:	push   r15
   140003e30:	lea    rbp,[rax-0x5f]
   140003e34:	sub    rsp,0xa0
   140003e3b:	mov    rax,QWORD PTR [rip+0xd1be]        # 0x140011000
   140003e42:	xor    rax,rsp
   140003e45:	mov    QWORD PTR [rbp+0x27],rax
   140003e49:	xor    ebx,ebx
   140003e4b:	mov    BYTE PTR [rbp-0x49],dl
   140003e4e:	mov    QWORD PTR [rbp-0x39],rbx
   140003e52:	mov    sil,dl
   140003e55:	mov    QWORD PTR [rbp-0x41],rbx
   140003e59:	mov    rdi,rcx
   140003e5c:	call   0x1400031e4
   140003e61:	mov    r12,rax
   140003e64:	test   rax,rax
   140003e67:	jne    0x140003e71
   140003e69:	lea    eax,[rbx+0x8]
   140003e6c:	jmp    0x140004001
   140003e71:	mov    cl,sil
   140003e74:	call   0x140007b2c
   140003e79:	movsxd rax,DWORD PTR [rip+0xe148]        # 0x140011fc8
   140003e80:	lea    rcx,[rip+0x8b2d]        # 0x14000c9b4
   140003e87:	test   eax,eax
   140003e89:	mov    QWORD PTR [rbp-0x31],rax
   140003e8d:	lea    r15,[rip+0x8b2c]        # 0x14000c9c0
   140003e94:	mov    r14d,ebx
   140003e97:	cmovne r15,rcx
   140003e9b:	mov    r13,rax
   140003e9e:	cmp    DWORD PTR [rdi+0x8],ebx
   140003ea1:	jbe    0x140003fff
   140003ea7:	mov    rdx,QWORD PTR [rdi]
   140003eaa:	lea    r8,[rbp-0x39]
   140003eae:	mov    ebx,r14d
   140003eb1:	mov    rcx,r12
   140003eb4:	shl    rbx,0x4
   140003eb8:	add    rdx,rbx
   140003ebb:	call   0x140001a14
   140003ec0:	test   eax,eax
   140003ec2:	jne    0x140004001
   140003ec8:	mov    rdx,QWORD PTR [rdi]
   140003ecb:	lea    r8,[rbp-0x41]
   140003ecf:	add    rdx,rbx
   140003ed2:	mov    rcx,r12
   140003ed5:	call   0x140001a74
   140003eda:	test   eax,eax
   140003edc:	jne    0x140004001
   140003ee2:	mov    rdx,QWORD PTR [rbp-0x41]
   140003ee6:	mov    rcx,r15
   140003ee9:	call   0x140006774
   140003eee:	test   sil,sil
   140003ef1:	je     0x140003f31
   140003ef3:	mov    rcx,QWORD PTR [rdi]
   140003ef6:	lea    rdx,[rbp-0x29]
   140003efa:	add    rcx,rbx
   140003efd:	mov    r8d,0x27
   140003f03:	call   0x1400072a8
   140003f08:	test   eax,eax
   140003f0a:	jne    0x140004001
   140003f10:	test   r13,r13
   140003f13:	je     0x140003f21
   140003f15:	lea    rcx,[rip+0x8adc]        # 0x14000c9f8
   140003f1c:	call   0x140006774
   140003f21:	lea    rdx,[rbp-0x29]
   140003f25:	lea    rcx,[rip+0x8a88]        # 0x14000c9b4
   140003f2c:	call   0x140006774
   140003f31:	lea    rcx,[rip+0x8ac4]        # 0x14000c9fc
   140003f38:	call   0x140006774
   140003f3d:	mov    rsi,QWORD PTR [rbp-0x39]
   140003f41:	xor    ebx,ebx
   140003f43:	cmp    DWORD PTR [rsi+0x8],ebx
   140003f46:	jbe    0x140003fed
   140003f4c:	mov    rdx,QWORD PTR [rsi]
   140003f4f:	lea    r8,[rbp-0x41]
   140003f53:	mov    r13d,ebx
   140003f56:	mov    rcx,r12
   140003f59:	shl    r13,0x4
   140003f5d:	add    rdx,r13
   140003f60:	call   0x140001ad4
   140003f65:	test   eax,eax
   140003f67:	jne    0x140004001
   140003f6d:	lea    rcx,[rip+0x8a8c]        # 0x14000ca00
   140003f74:	call   0x140006774
   140003f79:	mov    rdx,QWORD PTR [rbp-0x41]
   140003f7d:	mov    rcx,r15
   140003f80:	call   0x140006774
   140003f85:	cmp    BYTE PTR [rbp-0x49],0x0
   140003f89:	je     0x140003fd2
   140003f8b:	mov    rcx,QWORD PTR [rsi]
   140003f8e:	lea    rdx,[rbp-0x29]
   140003f92:	add    rcx,r13
   140003f95:	mov    r8d,0x27
   140003f9b:	call   0x1400072a8
   140003fa0:	test   eax,eax
   140003fa2:	jne    0x140004001
   140003fa4:	mov    r13,QWORD PTR [rbp-0x31]
   140003fa8:	lea    rcx,[rip+0x8a49]        # 0x14000c9f8
   140003faf:	test   r13,r13
   140003fb2:	jne    0x140003fbb
   140003fb4:	lea    rcx,[rip+0x8a45]        # 0x14000ca00
   140003fbb:	call   0x140006774
   140003fc0:	lea    rdx,[rbp-0x29]
   140003fc4:	lea    rcx,[rip+0x89e9]        # 0x14000c9b4
   140003fcb:	call   0x140006774
   140003fd0:	jmp    0x140003fd6
   140003fd2:	mov    r13,QWORD PTR [rbp-0x31]
   140003fd6:	lea    rcx,[rip+0x8a1f]        # 0x14000c9fc
   140003fdd:	call   0x140006774
   140003fe2:	inc    ebx
   140003fe4:	cmp    ebx,DWORD PTR [rsi+0x8]
   140003fe7:	jb     0x140003f4c
   140003fed:	inc    r14d
   140003ff0:	cmp    r14d,DWORD PTR [rdi+0x8]
   140003ff4:	jae    0x140003fff
   140003ff6:	mov    sil,BYTE PTR [rbp-0x49]
   140003ffa:	jmp    0x140003ea7
   140003fff:	xor    eax,eax
   140004001:	mov    rcx,QWORD PTR [rbp+0x27]
   140004005:	xor    rcx,rsp
   140004008:	call   0x14000a0a0
   14000400d:	lea    r11,[rsp+0xa0]
   140004015:	mov    rbx,QWORD PTR [r11+0x38]
   140004019:	mov    rsi,QWORD PTR [r11+0x40]
   14000401d:	mov    rdi,QWORD PTR [r11+0x48]
   140004021:	mov    rsp,r11
   140004024:	pop    r15
   140004026:	pop    r14
   140004028:	pop    r13
   14000402a:	pop    r12
   14000402c:	pop    rbp
   14000402d:	ret    
   14000402e:	int3   
   14000402f:	int3   
   140004030:	int3   
   140004031:	int3   
   140004032:	int3   
   140004033:	int3   
   140004034:	mov    r11,rsp
   140004037:	mov    QWORD PTR [r11+0x10],rbx
   14000403b:	mov    QWORD PTR [r11+0x18],rbp
   14000403f:	mov    QWORD PTR [r11+0x20],rsi
   140004043:	push   rdi
   140004044:	sub    rsp,0x70
   140004048:	mov    rax,QWORD PTR [rip+0xcfb1]        # 0x140011000
   14000404f:	xor    rax,rsp
   140004052:	mov    QWORD PTR [rsp+0x68],rax
   140004057:	and    QWORD PTR [r11-0x48],0x0
   14000405c:	lea    rax,[rip+0x892d]        # 0x14000c990
   140004063:	and    DWORD PTR [rsp+0x28],0x0
   140004068:	xor    r9d,r9d
   14000406b:	mov    QWORD PTR [r11-0x30],rax
   14000406f:	xor    r8d,r8d
   140004072:	lea    rax,[rip+0x88e7]        # 0x14000c960
   140004079:	mov    DWORD PTR [rsp+0x20],0x1
   140004081:	mov    QWORD PTR [r11-0x28],rax
   140004085:	mov    rbp,rcx
   140004088:	lea    rax,[rip+0x8979]        # 0x14000ca08
   14000408f:	mov    QWORD PTR [r11-0x20],rax
   140004093:	lea    ebx,[r9+0x2]
   140004097:	lea    rax,[rip+0x8992]        # 0x14000ca30
   14000409e:	mov    edx,ebx
   1400040a0:	mov    QWORD PTR [r11-0x18],rax
   1400040a4:	call   QWORD PTR [rip+0x7fae]        # 0x14000c058
   1400040aa:	mov    rcx,rax
   1400040ad:	cmp    rax,0xffffffffffffffff
   1400040b1:	jne    0x1400040cf
   1400040b3:	lea    rcx,[rip+0x8a7e]        # 0x14000cb38
   1400040ba:	call   QWORD PTR [rip+0x83c0]        # 0x14000c480
   1400040c0:	call   QWORD PTR [rip+0x7f62]        # 0x14000c028
   1400040c6:	mov    rcx,QWORD PTR [rip+0xdf03]        # 0x140011fd0
   1400040cd:	jmp    0x1400040d8
   1400040cf:	mov    QWORD PTR [rip+0xdefa],rax        # 0x140011fd0
   1400040d6:	xor    eax,eax
   1400040d8:	test   eax,eax
   1400040da:	jne    0x1400041c2
   1400040e0:	test   rcx,rcx
   1400040e3:	jne    0x1400040ed
   1400040e5:	lea    ebx,[rax+0x57]
   1400040e8:	jmp    0x1400041b7
   1400040ed:	mov    DWORD PTR [rip+0xded5],ebx        # 0x140011fc8
   1400040f3:	call   0x140006358
   1400040f8:	mov    ebx,eax
   1400040fa:	test   eax,eax
   1400040fc:	jne    0x1400041a0
   140004102:	mov    dl,0x1
   140004104:	xor    ecx,ecx
   140004106:	call   0x140004650
   14000410b:	mov    ebx,eax
   14000410d:	test   eax,eax
   14000410f:	jne    0x1400041a0
   140004115:	and    QWORD PTR [rsp+0x40],0x0
   14000411b:	lea    rcx,[rsp+0x40]
   140004120:	call   QWORD PTR [rip+0x810a]        # 0x14000c230
   140004126:	test   al,al
   140004128:	jne    0x140004134
   14000412a:	call   QWORD PTR [rip+0x7ef8]        # 0x14000c028
   140004130:	mov    ebx,eax
   140004132:	jmp    0x140004171
   140004134:	mov    rcx,QWORD PTR [rsp+0x40]
   140004139:	xor    edi,edi
   14000413b:	cmp    DWORD PTR [rcx],ebx
   14000413d:	jbe    0x14000416b
   14000413f:	mov    rcx,QWORD PTR [rcx+0x8]
   140004143:	xor    edx,edx
   140004145:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140004149:	call   0x140004650
   14000414e:	mov    ebx,eax
   140004150:	cmp    eax,0x515
   140004155:	je     0x14000415e
   140004157:	cmp    eax,0x534
   14000415c:	jne    0x140004160
   14000415e:	xor    ebx,ebx
   140004160:	mov    rcx,QWORD PTR [rsp+0x40]
   140004165:	inc    edi
   140004167:	cmp    edi,DWORD PTR [rcx]
   140004169:	jb     0x14000413f
   14000416b:	call   QWORD PTR [rip+0x807f]        # 0x14000c1f0
   140004171:	test   ebx,ebx
   140004173:	jne    0x1400041a0
   140004175:	xor    edi,edi
   140004177:	lea    rsi,[rsp+0x48]
   14000417c:	mov    rcx,QWORD PTR [rsi]
   14000417f:	call   0x1400034d4
   140004184:	mov    ebx,eax
   140004186:	test   eax,eax
   140004188:	jne    0x1400041a0
   14000418a:	inc    edi
   14000418c:	add    rsi,0x8
   140004190:	cmp    edi,0x4
   140004193:	jb     0x14000417c
   140004195:	call   0x140004ba4
   14000419a:	mov    ebx,eax
   14000419c:	test   eax,eax
   14000419e:	je     0x1400041c0
   1400041a0:	mov    rcx,QWORD PTR [rip+0xde29]        # 0x140011fd0
   1400041a7:	lea    rax,[rcx-0x1]
   1400041ab:	cmp    rax,0xfffffffffffffffd
   1400041af:	ja     0x1400041b7
   1400041b1:	call   QWORD PTR [rip+0x7eb9]        # 0x14000c070
   1400041b7:	mov    rcx,rbp
   1400041ba:	call   QWORD PTR [rip+0x7ea0]        # 0x14000c060
   1400041c0:	mov    eax,ebx
   1400041c2:	mov    rcx,QWORD PTR [rsp+0x68]
   1400041c7:	xor    rcx,rsp
   1400041ca:	call   0x14000a0a0
   1400041cf:	lea    r11,[rsp+0x70]
   1400041d4:	mov    rbx,QWORD PTR [r11+0x18]
   1400041d8:	mov    rbp,QWORD PTR [r11+0x20]
   1400041dc:	mov    rsi,QWORD PTR [r11+0x28]
   1400041e0:	mov    rsp,r11
   1400041e3:	pop    rdi
   1400041e4:	ret    
   1400041e5:	int3   
   1400041e6:	int3   
   1400041e7:	int3   
   1400041e8:	int3   
   1400041e9:	int3   
   1400041ea:	int3   
   1400041eb:	int3   
   1400041ec:	mov    rax,rsp
   1400041ef:	push   rbp
   1400041f0:	push   r12
   1400041f2:	push   r13
   1400041f4:	push   r14
   1400041f6:	push   r15
   1400041f8:	lea    rbp,[rax-0x7c8]
   1400041ff:	sub    rsp,0x8a0
   140004206:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   14000420e:	mov    QWORD PTR [rax+0x10],rbx
   140004212:	mov    QWORD PTR [rax+0x18],rsi
   140004216:	mov    QWORD PTR [rax+0x20],rdi
   14000421a:	mov    rax,QWORD PTR [rip+0xcddf]        # 0x140011000
   140004221:	xor    rax,rsp
   140004224:	mov    QWORD PTR [rbp+0x790],rax
   14000422b:	mov    rbx,rcx
   14000422e:	call   0x140006f98
   140004233:	mov    QWORD PTR [rsp+0x60],rax
   140004238:	xor    r12d,r12d
   14000423b:	mov    QWORD PTR [rsp+0x68],r12
   140004240:	xor    eax,eax
   140004242:	mov    QWORD PTR [rsp+0x40],rax
   140004247:	mov    QWORD PTR [rsp+0x48],rax
   14000424c:	mov    QWORD PTR [rsp+0x50],rax
   140004251:	mov    QWORD PTR [rsp+0x70],rax
   140004256:	mov    QWORD PTR [rsp+0x78],rax
   14000425b:	lea    rdx,[rip+0x87fe]        # 0x14000ca60
   140004262:	mov    rcx,rbx
   140004265:	call   QWORD PTR [rip+0x80fd]        # 0x14000c368
   14000426b:	mov    rbx,rax
   14000426e:	test   rax,rax
   140004271:	jne    0x14000427d
   140004273:	lea    esi,[rax+0x2]
   140004276:	mov    edi,esi
   140004278:	jmp    0x140004401
   14000427d:	mov    r8,rax
   140004280:	mov    edx,0x400
   140004285:	lea    rcx,[rbp-0x70]
   140004289:	call   QWORD PTR [rip+0x80c9]        # 0x14000c358
   14000428f:	mov    esi,0x2
   140004294:	test   rax,rax
   140004297:	jne    0x1400042a3
   140004299:	mov    edi,0xd
   14000429e:	jmp    0x1400043f7
   1400042a3:	mov    rcx,rbx
   1400042a6:	call   QWORD PTR [rip+0x80d4]        # 0x14000c380
   1400042ac:	test   eax,eax
   1400042ae:	jne    0x1400043d7
   1400042b4:	lea    r13d,[rax+0x2c]
   1400042b8:	mov    r8,rbx
   1400042bb:	mov    edx,0x400
   1400042c0:	lea    rcx,[rbp-0x70]
   1400042c4:	call   QWORD PTR [rip+0x808e]        # 0x14000c358
   1400042ca:	test   rax,rax
   1400042cd:	je     0x1400043d7
   1400042d3:	lea    edx,[r13-0x22]
   1400042d7:	lea    rcx,[rbp-0x70]
   1400042db:	call   QWORD PTR [rip+0x8197]        # 0x14000c478
   1400042e1:	test   rax,rax
   1400042e4:	je     0x1400042ea
   1400042e6:	mov    WORD PTR [rax],r12w
   1400042ea:	mov    edx,r13d
   1400042ed:	lea    rcx,[rbp-0x70]
   1400042f1:	call   QWORD PTR [rip+0x8181]        # 0x14000c478
   1400042f7:	mov    r14,rax
   1400042fa:	test   rax,rax
   1400042fd:	je     0x140004299
   1400042ff:	add    r14,rsi
   140004302:	mov    edx,r13d
   140004305:	mov    rcx,r14
   140004308:	call   QWORD PTR [rip+0x816a]        # 0x14000c478
   14000430e:	mov    rdi,rax
   140004311:	test   rax,rax
   140004314:	je     0x140004299
   140004316:	add    rdi,rsi
   140004319:	mov    edx,r13d
   14000431c:	mov    rcx,rdi
   14000431f:	call   QWORD PTR [rip+0x8153]        # 0x14000c478
   140004325:	mov    r15,rax
   140004328:	test   rax,rax
   14000432b:	je     0x140004299
   140004331:	add    r15,rsi
   140004334:	mov    edx,r13d
   140004337:	mov    rcx,r15
   14000433a:	call   QWORD PTR [rip+0x8138]        # 0x14000c478
   140004340:	mov    r13,rax
   140004343:	test   rax,rax
   140004346:	je     0x140004299
   14000434c:	add    r13,rsi
   14000434f:	mov    edx,0x2c
   140004354:	mov    rcx,r13
   140004357:	call   QWORD PTR [rip+0x811b]        # 0x14000c478
   14000435d:	mov    r12,rax
   140004360:	test   rax,rax
   140004363:	je     0x1400043cd
   140004365:	add    r12,rsi
   140004368:	mov    edx,0x2c
   14000436d:	mov    rcx,r12
   140004370:	call   QWORD PTR [rip+0x8102]        # 0x14000c478
   140004376:	xor    ecx,ecx
   140004378:	test   rax,rax
   14000437b:	je     0x1400043cd
   14000437d:	add    rax,rsi
   140004380:	mov    WORD PTR [rdi-0x2],cx
   140004384:	mov    WORD PTR [r15-0x2],cx
   140004389:	mov    WORD PTR [r13-0x2],cx
   14000438e:	mov    WORD PTR [r12-0x2],cx
   140004394:	mov    WORD PTR [rax-0x2],cx
   140004398:	cmp    WORD PTR [rdi],cx
   14000439b:	je     0x1400043cd
   14000439d:	mov    QWORD PTR [rsp+0x30],rax
   1400043a2:	mov    QWORD PTR [rsp+0x28],r12
   1400043a7:	mov    QWORD PTR [rsp+0x20],r13
   1400043ac:	mov    r9,r15
   1400043af:	mov    r8,rdi
   1400043b2:	mov    rdx,r14
   1400043b5:	lea    rcx,[rsp+0x40]
   1400043ba:	call   0x140006cb4
   1400043bf:	mov    edi,eax
   1400043c1:	xor    r12d,r12d
   1400043c4:	test   eax,eax
   1400043c6:	jne    0x1400043f7
   1400043c8:	jmp    0x1400042a3
   1400043cd:	mov    edi,0xd
   1400043d2:	xor    r12d,r12d
   1400043d5:	jmp    0x1400043f7
   1400043d7:	mov    rcx,rbx
   1400043da:	call   QWORD PTR [rip+0x7f70]        # 0x14000c350
   1400043e0:	test   eax,eax
   1400043e2:	je     0x1400043eb
   1400043e4:	mov    edi,0x1e
   1400043e9:	jmp    0x1400043f7
   1400043eb:	lea    rcx,[rsp+0x40]
   1400043f0:	call   0x140006e90
   1400043f5:	mov    edi,eax
   1400043f7:	mov    rcx,rbx
   1400043fa:	call   QWORD PTR [rip+0x7f98]        # 0x14000c398
   140004400:	nop
   140004401:	mov    rcx,QWORD PTR [rsp+0x50]
   140004406:	test   rcx,rcx
   140004409:	je     0x140004415
   14000440b:	call   0x140009d48
   140004410:	mov    QWORD PTR [rsp+0x50],r12
   140004415:	mov    rax,QWORD PTR [rsp+0x60]
   14000441a:	mov    rbx,QWORD PTR [rax]
   14000441d:	cmp    rbx,rax
   140004420:	je     0x140004454
   140004422:	mov    rcx,QWORD PTR [rbx+0x10]
   140004426:	mov    rcx,QWORD PTR [rcx]
   140004429:	call   QWORD PTR [rip+0x7c69]        # 0x14000c098
   14000442f:	mov    rax,QWORD PTR [rbx+0x10]
   140004433:	mov    rcx,QWORD PTR [rax+0x10]
   140004437:	test   rcx,rcx
   14000443a:	je     0x140004441
   14000443c:	call   0x140009d48
   140004441:	mov    rcx,QWORD PTR [rbx+0x10]
   140004445:	call   0x140009d48
   14000444a:	mov    rbx,QWORD PTR [rbx]
   14000444d:	cmp    rbx,QWORD PTR [rsp+0x60]
   140004452:	jne    0x140004422
   140004454:	lea    rbx,[rsp+0x70]
   140004459:	mov    rcx,QWORD PTR [rbx]
   14000445c:	test   rcx,rcx
   14000445f:	je     0x14000446a
   140004461:	call   QWORD PTR [rip+0x7c31]        # 0x14000c098
   140004467:	mov    QWORD PTR [rbx],r12
   14000446a:	add    rbx,0x8
   14000446e:	sub    rsi,0x1
   140004472:	jne    0x140004459
   140004474:	mov    rax,QWORD PTR [rsp+0x60]
   140004479:	mov    rdx,QWORD PTR [rax]
   14000447c:	mov    QWORD PTR [rax],rax
   14000447f:	mov    rax,QWORD PTR [rsp+0x60]
   140004484:	mov    QWORD PTR [rax+0x8],rax
   140004488:	mov    QWORD PTR [rsp+0x68],r12
   14000448d:	mov    rcx,QWORD PTR [rsp+0x60]
   140004492:	cmp    rdx,rcx
   140004495:	je     0x1400044af
   140004497:	mov    rbx,QWORD PTR [rdx]
   14000449a:	mov    rcx,rdx
   14000449d:	call   0x140009d48
   1400044a2:	mov    rdx,rbx
   1400044a5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400044aa:	cmp    rbx,rcx
   1400044ad:	jne    0x140004497
   1400044af:	call   0x140009d48
   1400044b4:	mov    eax,edi
   1400044b6:	mov    rcx,QWORD PTR [rbp+0x790]
   1400044bd:	xor    rcx,rsp
   1400044c0:	call   0x14000a0a0
   1400044c5:	lea    r11,[rsp+0x8a0]
   1400044cd:	mov    rbx,QWORD PTR [r11+0x38]
   1400044d1:	mov    rsi,QWORD PTR [r11+0x40]
   1400044d5:	mov    rdi,QWORD PTR [r11+0x48]
   1400044d9:	mov    rsp,r11
   1400044dc:	pop    r15
   1400044de:	pop    r14
   1400044e0:	pop    r13
   1400044e2:	pop    r12
   1400044e4:	pop    rbp
   1400044e5:	ret    
   1400044e6:	int3   
   1400044e7:	int3   
   1400044e8:	int3   
   1400044e9:	int3   
   1400044ea:	int3   
   1400044eb:	int3   
   1400044ec:	mov    rax,rsp
   1400044ef:	mov    QWORD PTR [rax+0x8],rbx
   1400044f3:	mov    QWORD PTR [rax+0x10],rsi
   1400044f7:	mov    QWORD PTR [rax+0x18],rdi
   1400044fb:	push   rbp
   1400044fc:	lea    rbp,[rax-0x768]
   140004503:	sub    rsp,0x860
   14000450a:	mov    rax,QWORD PTR [rip+0xcaef]        # 0x140011000
   140004511:	xor    rax,rsp
   140004514:	mov    QWORD PTR [rbp+0x750],rax
   14000451b:	lea    rax,[rip+0x846e]        # 0x14000c990
   140004522:	xor    esi,esi
   140004524:	mov    QWORD PTR [rsp+0x28],rax
   140004529:	lea    rax,[rip+0x8430]        # 0x14000c960
   140004530:	mov    QWORD PTR [rsp+0x30],rax
   140004535:	lea    rax,[rip+0x84cc]        # 0x14000ca08
   14000453c:	mov    QWORD PTR [rsp+0x38],rax
   140004541:	lea    rax,[rip+0x84e8]        # 0x14000ca30
   140004548:	mov    QWORD PTR [rsp+0x40],rax
   14000454d:	test   cl,cl
   14000454f:	je     0x1400045bf
   140004551:	mov    ebx,0x200
   140004556:	mov    DWORD PTR [rsp+0x20],esi
   14000455a:	mov    r8d,ebx
   14000455d:	lea    rdx,[rbp+0x350]
   140004564:	mov    ecx,0x2000
   140004569:	call   0x140007cc0
   14000456e:	mov    r8d,ebx
   140004571:	lea    rdx,[rsp+0x50]
   140004576:	mov    ecx,0x2024
   14000457b:	call   0x140007cc0
   140004580:	lea    rdx,[rsp+0x50]
   140004585:	lea    rcx,[rbp+0x350]
   14000458c:	call   0x140006774
   140004591:	lea    rdx,[rsp+0x20]
   140004596:	lea    rcx,[rip+0x84e3]        # 0x14000ca80
   14000459d:	call   QWORD PTR [rip+0x7dfd]        # 0x14000c3a0
   1400045a3:	lea    r8d,[rsi+0x1]
   1400045a7:	lea    rdx,[rsp+0x50]
   1400045ac:	lea    rcx,[rsp+0x20]
   1400045b1:	call   QWORD PTR [rip+0x7db9]        # 0x14000c370
   1400045b7:	test   eax,eax
   1400045b9:	jne    0x1400045bf
   1400045bb:	xor    eax,eax
   1400045bd:	jmp    0x140004620
   1400045bf:	call   0x140004b34
   1400045c4:	test   eax,eax
   1400045c6:	jne    0x140004620
   1400045c8:	mov    ebx,esi
   1400045ca:	lea    rdi,[rsp+0x28]
   1400045cf:	mov    rcx,QWORD PTR [rdi]
   1400045d2:	xor    edx,edx
   1400045d4:	call   0x14000392c
   1400045d9:	test   eax,eax
   1400045db:	jne    0x140004620
   1400045dd:	inc    ebx
   1400045df:	add    rdi,0x8
   1400045e3:	cmp    ebx,0x4
   1400045e6:	jb     0x1400045cf
   1400045e8:	mov    dl,0x1
   1400045ea:	xor    ecx,ecx
   1400045ec:	call   0x1400048a0
   1400045f1:	test   eax,eax
   1400045f3:	jne    0x140004620
   1400045f5:	mov    ebx,esi
   1400045f7:	lea    rdi,[rip+0x84b2]        # 0x14000cab0
   1400045fe:	mov    rcx,QWORD PTR [rdi]
   140004601:	xor    edx,edx
   140004603:	call   QWORD PTR [rip+0x7c3f]        # 0x14000c248
   140004609:	test   al,al
   14000460b:	je     0x14000461a
   14000460d:	inc    ebx
   14000460f:	add    rdi,0x10
   140004613:	cmp    ebx,0x2
   140004616:	jb     0x1400045fe
   140004618:	jmp    0x1400045bb
   14000461a:	call   QWORD PTR [rip+0x7a08]        # 0x14000c028
   140004620:	mov    rcx,QWORD PTR [rbp+0x750]
   140004627:	xor    rcx,rsp
   14000462a:	call   0x14000a0a0
   14000462f:	lea    r11,[rsp+0x860]
   140004637:	mov    rbx,QWORD PTR [r11+0x10]
   14000463b:	mov    rsi,QWORD PTR [r11+0x18]
   14000463f:	mov    rdi,QWORD PTR [r11+0x20]
   140004643:	mov    rsp,r11
   140004646:	pop    rbp
   140004647:	ret    
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	rex push rbp
   140004652:	push   r14
   140004654:	push   r15
   140004656:	sub    rsp,0x50
   14000465a:	lea    rbp,[rsp+0x30]
   14000465f:	mov    QWORD PTR [rbp+0x40],rbx
   140004663:	mov    QWORD PTR [rbp+0x48],rsi
   140004667:	mov    QWORD PTR [rbp+0x50],rdi
   14000466b:	mov    QWORD PTR [rbp+0x58],r12
   14000466f:	mov    rax,QWORD PTR [rip+0xc98a]        # 0x140011000
   140004676:	xor    rax,rbp
   140004679:	mov    QWORD PTR [rbp+0x10],rax
   14000467d:	mov    r15b,dl
   140004680:	mov    r12,rcx
   140004683:	xor    esi,esi
   140004685:	xor    r14d,r14d
   140004688:	call   0x1400031e4
   14000468d:	mov    rbx,rax
   140004690:	test   rax,rax
   140004693:	jne    0x14000469f
   140004695:	mov    eax,0x8
   14000469a:	jmp    0x140004871
   14000469f:	cmp    BYTE PTR [rax+0x78],sil
   1400046a3:	jne    0x1400046c0
   1400046a5:	mov    eax,DWORD PTR [rax+0x7c]
   1400046a8:	test   eax,eax
   1400046aa:	jne    0x140004871
   1400046b0:	mov    rcx,rbx
   1400046b3:	call   0x140001554
   1400046b8:	test   eax,eax
   1400046ba:	jne    0x140004871
   1400046c0:	xor    eax,eax
   1400046c2:	test   eax,eax
   1400046c4:	jne    0x140004871
   1400046ca:	mov    rsi,rbx
   1400046cd:	test   eax,eax
   1400046cf:	jne    0x140004871
   1400046d5:	mov    ebx,DWORD PTR [rbx+0x10]
   1400046d8:	xor    edx,edx
   1400046da:	shl    rbx,0x4
   1400046de:	mov    QWORD PTR [rbp+0x0],rdx
   1400046e2:	test   rbx,rbx
   1400046e5:	je     0x14000475a
   1400046e7:	cmp    rbx,QWORD PTR [rip+0xd932]        # 0x140012020
   1400046ee:	ja     0x14000475a
   1400046f0:	mov    rcx,QWORD PTR [rip+0xd921]        # 0x140012018
   1400046f7:	add    rcx,0x8
   1400046fb:	add    rcx,rbx
   1400046fe:	cmp    rcx,rbx
   140004701:	jb     0x14000475a
   140004703:	call   0x140009bb0
   140004708:	test   eax,eax
   14000470a:	je     0x14000473d
   14000470c:	lea    rax,[rbx+0x8]
   140004710:	lea    rcx,[rax+0xf]
   140004714:	cmp    rcx,rax
   140004717:	ja     0x140004723
   140004719:	movabs rcx,0xffffffffffffff0
   140004723:	and    rcx,0xfffffffffffffff0
   140004727:	mov    rax,rcx
   14000472a:	call   0x14000ab00
   14000472f:	sub    rsp,rcx
   140004732:	lea    rdx,[rsp+0x30]
   140004737:	mov    QWORD PTR [rbp+0x0],rdx
   14000473b:	jmp    0x140004741
   14000473d:	mov    rdx,QWORD PTR [rbp+0x0]
   140004741:	test   rdx,rdx
   140004744:	je     0x14000475a
   140004746:	mov    DWORD PTR [rdx],0x6b637453
   14000474c:	mov    rdx,QWORD PTR [rbp+0x0]
   140004750:	add    rdx,0x8
   140004754:	mov    QWORD PTR [rbp+0x0],rdx
   140004758:	jne    0x1400047a0
   14000475a:	lea    rdi,[rbx+0x8]
   14000475e:	cmp    rdi,rbx
   140004761:	jb     0x140004797
   140004763:	mov    rbx,QWORD PTR [rip+0xd8a6]        # 0x140012010
   14000476a:	mov    rcx,rbx
   14000476d:	call   QWORD PTR [rip+0x7d9d]        # 0x14000c510
   140004773:	mov    rcx,rdi
   140004776:	call   rbx
   140004778:	mov    QWORD PTR [rbp+0x0],rax
   14000477c:	test   rax,rax
   14000477f:	je     0x140004695
   140004785:	mov    DWORD PTR [rax],0x70616548
   14000478b:	mov    rdx,QWORD PTR [rbp+0x0]
   14000478f:	add    rdx,0x8
   140004793:	mov    QWORD PTR [rbp+0x0],rdx
   140004797:	test   rdx,rdx
   14000479a:	je     0x140004695
   1400047a0:	mov    rax,QWORD PTR [rsi+0x8]
   1400047a4:	mov    rbx,QWORD PTR [rax]
   1400047a7:	cmp    rbx,rax
   1400047aa:	je     0x14000481e
   1400047ac:	mov    rax,QWORD PTR [rbx+0x20]
   1400047b0:	mov    ecx,r14d
   1400047b3:	inc    r14d
   1400047b6:	add    rcx,rcx
   1400047b9:	movups xmm0,XMMWORD PTR [rax]
   1400047bc:	movdqu XMMWORD PTR [rdx+rcx*8],xmm0
   1400047c1:	cmp    BYTE PTR [rbx+0x29],0x0
   1400047c5:	je     0x1400047de
   1400047c7:	and    QWORD PTR [rsp+0x20],0x0
   1400047cd:	xor    r9d,r9d
   1400047d0:	xor    r8d,r8d
   1400047d3:	xor    edx,edx
   1400047d5:	xor    ecx,ecx
   1400047d7:	call   0x14000a0c4
   1400047dc:	jmp    0x140004812
   1400047de:	mov    rax,QWORD PTR [rbx+0x10]
   1400047e2:	cmp    BYTE PTR [rax+0x29],0x0
   1400047e6:	jne    0x1400047f6
   1400047e8:	mov    rbx,rax
   1400047eb:	mov    rax,QWORD PTR [rax]
   1400047ee:	cmp    BYTE PTR [rax+0x29],0x0
   1400047f2:	je     0x1400047e8
   1400047f4:	jmp    0x140004812
   1400047f6:	mov    rax,QWORD PTR [rbx+0x8]
   1400047fa:	jmp    0x140004809
   1400047fc:	cmp    rbx,QWORD PTR [rax+0x10]
   140004800:	jne    0x14000480f
   140004802:	mov    rbx,rax
   140004805:	mov    rax,QWORD PTR [rax+0x8]
   140004809:	cmp    BYTE PTR [rax+0x29],0x0
   14000480d:	je     0x1400047fc
   14000480f:	mov    rbx,rax
   140004812:	cmp    rbx,QWORD PTR [rsi+0x8]
   140004816:	je     0x14000481e
   140004818:	mov    rdx,QWORD PTR [rbp+0x0]
   14000481c:	jmp    0x1400047ac
   14000481e:	mov    DWORD PTR [rbp+0x8],r14d
   140004822:	test   r15b,r15b
   140004825:	jne    0x140004838
   140004827:	xor    r8d,r8d
   14000482a:	lea    rdx,[rbp+0x0]
   14000482e:	mov    rcx,r12
   140004831:	call   0x14000336c
   140004836:	jmp    0x140004843
   140004838:	xor    edx,edx
   14000483a:	lea    rcx,[rbp+0x0]
   14000483e:	call   0x1400032dc
   140004843:	mov    esi,eax
   140004845:	mov    rax,QWORD PTR [rbp+0x0]
   140004849:	test   rax,rax
   14000484c:	je     0x14000486f
   14000484e:	lea    rdi,[rax-0x8]
   140004852:	cmp    DWORD PTR [rdi],0x70616548
   140004858:	jne    0x14000486f
   14000485a:	mov    rbx,QWORD PTR [rip+0xd7a7]        # 0x140012008
   140004861:	mov    rcx,rbx
   140004864:	call   QWORD PTR [rip+0x7ca6]        # 0x14000c510
   14000486a:	mov    rcx,rdi
   14000486d:	call   rbx
   14000486f:	mov    eax,esi
   140004871:	mov    rcx,QWORD PTR [rbp+0x10]
   140004875:	xor    rcx,rbp
   140004878:	call   0x14000a0a0
   14000487d:	mov    rbx,QWORD PTR [rbp+0x40]
   140004881:	mov    rsi,QWORD PTR [rbp+0x48]
   140004885:	mov    rdi,QWORD PTR [rbp+0x50]
   140004889:	mov    r12,QWORD PTR [rbp+0x58]
   14000488d:	lea    rsp,[rbp+0x20]
   140004891:	pop    r15
   140004893:	pop    r14
   140004895:	pop    rbp
   140004896:	ret    
   140004897:	int3   
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	rex push rbp
   1400048a2:	push   r12
   1400048a4:	push   r13
   1400048a6:	push   r14
   1400048a8:	push   r15
   1400048aa:	sub    rsp,0x70
   1400048ae:	lea    rbp,[rsp+0x50]
   1400048b3:	mov    QWORD PTR [rbp+0x50],rbx
   1400048b7:	mov    QWORD PTR [rbp+0x58],rsi
   1400048bb:	mov    QWORD PTR [rbp+0x60],rdi
   1400048bf:	mov    rax,QWORD PTR [rip+0xc73a]        # 0x140011000
   1400048c6:	xor    rax,rbp
   1400048c9:	mov    QWORD PTR [rbp+0x10],rax
   1400048cd:	xor    r13d,r13d
   1400048d0:	mov    r15b,dl
   1400048d3:	mov    esi,r13d
   1400048d6:	mov    r14d,r13d
   1400048d9:	mov    r12,rcx
   1400048dc:	call   0x1400031e4
   1400048e1:	mov    rbx,rax
   1400048e4:	test   rax,rax
   1400048e7:	jne    0x1400048f3
   1400048e9:	mov    eax,0x8
   1400048ee:	jmp    0x140004b06
   1400048f3:	cmp    BYTE PTR [rax+0x78],r13b
   1400048f7:	jne    0x140004914
   1400048f9:	mov    eax,DWORD PTR [rax+0x7c]
   1400048fc:	test   eax,eax
   1400048fe:	jne    0x140004b06
   140004904:	mov    rcx,rbx
   140004907:	call   0x140001554
   14000490c:	test   eax,eax
   14000490e:	jne    0x140004b06
   140004914:	mov    eax,r13d
   140004917:	test   eax,eax
   140004919:	jne    0x140004b06
   14000491f:	mov    rsi,rbx
   140004922:	test   eax,eax
   140004924:	jne    0x140004b06
   14000492a:	mov    ebx,DWORD PTR [rbx+0x10]
   14000492d:	mov    rdx,r13
   140004930:	shl    rbx,0x4
   140004934:	mov    QWORD PTR [rbp+0x0],rdx
   140004938:	test   rbx,rbx
   14000493b:	je     0x1400049b0
   14000493d:	cmp    rbx,QWORD PTR [rip+0xd6dc]        # 0x140012020
   140004944:	ja     0x1400049b0
   140004946:	mov    rcx,QWORD PTR [rip+0xd6cb]        # 0x140012018
   14000494d:	add    rcx,0x8
   140004951:	add    rcx,rbx
   140004954:	cmp    rcx,rbx
   140004957:	jb     0x1400049b0
   140004959:	call   0x140009bb0
   14000495e:	test   eax,eax
   140004960:	je     0x140004993
   140004962:	lea    rax,[rbx+0x8]
   140004966:	lea    rcx,[rax+0xf]
   14000496a:	cmp    rcx,rax
   14000496d:	ja     0x140004979
   14000496f:	movabs rcx,0xffffffffffffff0
   140004979:	and    rcx,0xfffffffffffffff0
   14000497d:	mov    rax,rcx
   140004980:	call   0x14000ab00
   140004985:	sub    rsp,rcx
   140004988:	lea    rdx,[rsp+0x50]
   14000498d:	mov    QWORD PTR [rbp+0x0],rdx
   140004991:	jmp    0x140004997
   140004993:	mov    rdx,QWORD PTR [rbp+0x0]
   140004997:	test   rdx,rdx
   14000499a:	je     0x1400049b0
   14000499c:	mov    DWORD PTR [rdx],0x6b637453
   1400049a2:	mov    rdx,QWORD PTR [rbp+0x0]
   1400049a6:	add    rdx,0x8
   1400049aa:	mov    QWORD PTR [rbp+0x0],rdx
   1400049ae:	jne    0x1400049f6
   1400049b0:	lea    rdi,[rbx+0x8]
   1400049b4:	cmp    rdi,rbx
   1400049b7:	jb     0x1400049ed
   1400049b9:	mov    rbx,QWORD PTR [rip+0xd650]        # 0x140012010
   1400049c0:	mov    rcx,rbx
   1400049c3:	call   QWORD PTR [rip+0x7b47]        # 0x14000c510
   1400049c9:	mov    rcx,rdi
   1400049cc:	call   rbx
   1400049ce:	mov    QWORD PTR [rbp+0x0],rax
   1400049d2:	test   rax,rax
   1400049d5:	je     0x1400048e9
   1400049db:	mov    DWORD PTR [rax],0x70616548
   1400049e1:	mov    rdx,QWORD PTR [rbp+0x0]
   1400049e5:	add    rdx,0x8
   1400049e9:	mov    QWORD PTR [rbp+0x0],rdx
   1400049ed:	test   rdx,rdx
   1400049f0:	je     0x1400048e9
   1400049f6:	mov    rax,QWORD PTR [rsi+0x8]
   1400049fa:	mov    rbx,QWORD PTR [rax]
   1400049fd:	cmp    rbx,rax
   140004a00:	je     0x140004a73
   140004a02:	mov    rax,QWORD PTR [rbx+0x20]
   140004a06:	mov    ecx,r14d
   140004a09:	inc    r14d
   140004a0c:	add    rcx,rcx
   140004a0f:	movups xmm0,XMMWORD PTR [rax]
   140004a12:	movdqu XMMWORD PTR [rdx+rcx*8],xmm0
   140004a17:	cmp    BYTE PTR [rbx+0x29],r13b
   140004a1b:	je     0x140004a33
   140004a1d:	xor    r9d,r9d
   140004a20:	mov    QWORD PTR [rsp+0x20],r13
   140004a25:	xor    r8d,r8d
   140004a28:	xor    edx,edx
   140004a2a:	xor    ecx,ecx
   140004a2c:	call   0x14000a0c4
   140004a31:	jmp    0x140004a67
   140004a33:	mov    rax,QWORD PTR [rbx+0x10]
   140004a37:	cmp    BYTE PTR [rax+0x29],r13b
   140004a3b:	jne    0x140004a4b
   140004a3d:	mov    rbx,rax
   140004a40:	mov    rax,QWORD PTR [rax]
   140004a43:	cmp    BYTE PTR [rax+0x29],r13b
   140004a47:	je     0x140004a3d
   140004a49:	jmp    0x140004a67
   140004a4b:	mov    rax,QWORD PTR [rbx+0x8]
   140004a4f:	jmp    0x140004a5e
   140004a51:	cmp    rbx,QWORD PTR [rax+0x10]
   140004a55:	jne    0x140004a64
   140004a57:	mov    rbx,rax
   140004a5a:	mov    rax,QWORD PTR [rax+0x8]
   140004a5e:	cmp    BYTE PTR [rax+0x29],r13b
   140004a62:	je     0x140004a51
   140004a64:	mov    rbx,rax
   140004a67:	cmp    rbx,QWORD PTR [rsi+0x8]
   140004a6b:	je     0x140004a73
   140004a6d:	mov    rdx,QWORD PTR [rbp+0x0]
   140004a71:	jmp    0x140004a02
   140004a73:	mov    DWORD PTR [rbp+0x8],r14d
   140004a77:	test   r15b,r15b
   140004a7a:	jne    0x140004aae
   140004a7c:	mov    BYTE PTR [rsp+0x48],0x1
   140004a81:	lea    rdx,[rbp+0x0]
   140004a85:	mov    DWORD PTR [rsp+0x40],r13d
   140004a8a:	mov    r9b,0x1
   140004a8d:	mov    DWORD PTR [rsp+0x38],r13d
   140004a92:	xor    r8d,r8d
   140004a95:	mov    BYTE PTR [rsp+0x30],0x1
   140004a9a:	mov    rcx,r12
   140004a9d:	mov    BYTE PTR [rsp+0x28],0x1
   140004aa2:	mov    BYTE PTR [rsp+0x20],0x1
   140004aa7:	call   0x14000384c
   140004aac:	jmp    0x140004ad8
   140004aae:	mov    BYTE PTR [rsp+0x40],0x1
   140004ab3:	lea    rcx,[rbp+0x0]
   140004ab7:	mov    DWORD PTR [rsp+0x38],r13d
   140004abc:	xor    r9d,r9d
   140004abf:	mov    DWORD PTR [rsp+0x30],r13d
   140004ac4:	xor    r8d,r8d
   140004ac7:	mov    BYTE PTR [rsp+0x28],0x1
   140004acc:	xor    edx,edx
   140004ace:	mov    BYTE PTR [rsp+0x20],0x1
   140004ad3:	call   0x140003774
   140004ad8:	mov    esi,eax
   140004ada:	mov    rax,QWORD PTR [rbp+0x0]
   140004ade:	test   rax,rax
   140004ae1:	je     0x140004b04
   140004ae3:	lea    rdi,[rax-0x8]
   140004ae7:	cmp    DWORD PTR [rdi],0x70616548
   140004aed:	jne    0x140004b04
   140004aef:	mov    rbx,QWORD PTR [rip+0xd512]        # 0x140012008
   140004af6:	mov    rcx,rbx
   140004af9:	call   QWORD PTR [rip+0x7a11]        # 0x14000c510
   140004aff:	mov    rcx,rdi
   140004b02:	call   rbx
   140004b04:	mov    eax,esi
   140004b06:	mov    rcx,QWORD PTR [rbp+0x10]
   140004b0a:	xor    rcx,rbp
   140004b0d:	call   0x14000a0a0
   140004b12:	mov    rbx,QWORD PTR [rbp+0x50]
   140004b16:	mov    rsi,QWORD PTR [rbp+0x58]
   140004b1a:	mov    rdi,QWORD PTR [rbp+0x60]
   140004b1e:	lea    rsp,[rbp+0x20]
   140004b22:	pop    r15
   140004b24:	pop    r14
   140004b26:	pop    r13
   140004b28:	pop    r12
   140004b2a:	pop    rbp
   140004b2b:	ret    
   140004b2c:	int3   
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	int3   
   140004b31:	int3   
   140004b32:	int3   
   140004b33:	int3   
   140004b34:	mov    QWORD PTR [rsp+0x10],rbx
   140004b39:	push   rdi
   140004b3a:	sub    rsp,0x20
   140004b3e:	and    QWORD PTR [rsp+0x30],0x0
   140004b44:	lea    rcx,[rsp+0x30]
   140004b49:	xor    ebx,ebx
   140004b4b:	call   QWORD PTR [rip+0x76df]        # 0x14000c230
   140004b51:	test   al,al
   140004b53:	jne    0x140004b5d
   140004b55:	call   QWORD PTR [rip+0x74cd]        # 0x14000c028
   140004b5b:	jmp    0x140004b90
   140004b5d:	mov    rcx,QWORD PTR [rsp+0x30]
   140004b62:	xor    edi,edi
   140004b64:	cmp    DWORD PTR [rcx],ebx
   140004b66:	jbe    0x140004b88
   140004b68:	test   ebx,ebx
   140004b6a:	jne    0x140004b88
   140004b6c:	mov    rcx,QWORD PTR [rcx+0x8]
   140004b70:	xor    edx,edx
   140004b72:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140004b76:	call   0x1400048a0
   140004b7b:	mov    rcx,QWORD PTR [rsp+0x30]
   140004b80:	inc    edi
   140004b82:	mov    ebx,eax
   140004b84:	cmp    edi,DWORD PTR [rcx]
   140004b86:	jb     0x140004b68
   140004b88:	call   QWORD PTR [rip+0x7662]        # 0x14000c1f0
   140004b8e:	mov    eax,ebx
   140004b90:	mov    rbx,QWORD PTR [rsp+0x38]
   140004b95:	add    rsp,0x20
   140004b99:	pop    rdi
   140004b9a:	ret    
   140004b9b:	int3   
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	int3   
   140004ba1:	int3   
   140004ba2:	int3   
   140004ba3:	int3   
   140004ba4:	mov    rax,rsp
   140004ba7:	mov    QWORD PTR [rax+0x8],rbx
   140004bab:	mov    QWORD PTR [rax+0x10],rsi
   140004baf:	mov    QWORD PTR [rax+0x18],rdi
   140004bb3:	mov    QWORD PTR [rax+0x20],r14
   140004bb7:	push   rbp
   140004bb8:	lea    rbp,[rax-0x5f]
   140004bbc:	sub    rsp,0xa0
   140004bc3:	mov    rax,QWORD PTR [rip+0xc436]        # 0x140011000
   140004bca:	xor    rax,rsp
   140004bcd:	mov    QWORD PTR [rbp+0x47],rax
   140004bd1:	lea    rdx,[rbp-0x19]
   140004bd5:	mov    DWORD PTR [rbp-0x19],0x10
   140004bdc:	lea    rcx,[rbp+0x27]
   140004be0:	call   QWORD PTR [rip+0x74c2]        # 0x14000c0a8
   140004be6:	test   eax,eax
   140004be8:	je     0x140004bee
   140004bea:	xor    edi,edi
   140004bec:	jmp    0x140004bfe
   140004bee:	call   QWORD PTR [rip+0x7434]        # 0x14000c028
   140004bf4:	mov    edi,eax
   140004bf6:	test   eax,eax
   140004bf8:	jne    0x140004cc5
   140004bfe:	xor    r14d,r14d
   140004c01:	lea    rsi,[rip+0x7eb0]        # 0x14000cab8
   140004c08:	mov    rcx,QWORD PTR [rsi-0x8]
   140004c0c:	lea    rdx,[rbp-0x11]
   140004c10:	and    QWORD PTR [rbp-0x11],0x0
   140004c15:	call   QWORD PTR [rip+0x761d]        # 0x14000c238
   140004c1b:	test   al,al
   140004c1d:	jne    0x140004c34
   140004c1f:	call   QWORD PTR [rip+0x7403]        # 0x14000c028
   140004c25:	mov    edi,eax
   140004c27:	cmp    eax,0x2
   140004c2a:	jne    0x140004cc5
   140004c30:	xor    edi,edi
   140004c32:	jmp    0x140004caa
   140004c34:	mov    edx,0x1
   140004c39:	lea    rcx,[rbp-0x1]
   140004c3d:	call   QWORD PTR [rip+0x762d]        # 0x14000c270
   140004c43:	mov    r8,QWORD PTR [rbp-0x11]
   140004c47:	lea    rcx,[rbp-0x1]
   140004c4b:	xor    edx,edx
   140004c4d:	test   r8,r8
   140004c50:	setne  dl
   140004c53:	xor    r9d,r9d
   140004c56:	call   QWORD PTR [rip+0x7644]        # 0x14000c2a0
   140004c5c:	and    QWORD PTR [rsp+0x20],0x0
   140004c62:	lea    r9,[rbp-0x9]
   140004c66:	mov    edx,0x1
   140004c6b:	lea    rcx,[rbp-0x1]
   140004c6f:	lea    r8d,[rdx+0x7]
   140004c73:	call   QWORD PTR [rip+0x769f]        # 0x14000c318
   140004c79:	mov    rcx,QWORD PTR [rbp-0x11]
   140004c7d:	mov    ebx,eax
   140004c7f:	call   QWORD PTR [rip+0x7413]        # 0x14000c098
   140004c85:	test   ebx,ebx
   140004c87:	je     0x140004cbd
   140004c89:	mov    r9,QWORD PTR [rbp-0x9]
   140004c8d:	lea    rdx,[rbp+0x27]
   140004c91:	mov    r8,QWORD PTR [rsi]
   140004c94:	lea    rcx,[rip+0x7ded]        # 0x14000ca88
   140004c9b:	call   0x140006774
   140004ca0:	mov    rcx,QWORD PTR [rbp-0x9]
   140004ca4:	call   QWORD PTR [rip+0x73ee]        # 0x14000c098
   140004caa:	inc    r14d
   140004cad:	add    rsi,0x10
   140004cb1:	cmp    r14d,0x2
   140004cb5:	jb     0x140004c08
   140004cbb:	jmp    0x140004cc5
   140004cbd:	call   QWORD PTR [rip+0x7365]        # 0x14000c028
   140004cc3:	mov    edi,eax
   140004cc5:	mov    eax,edi
   140004cc7:	mov    rcx,QWORD PTR [rbp+0x47]
   140004ccb:	xor    rcx,rsp
   140004cce:	call   0x14000a0a0
   140004cd3:	lea    r11,[rsp+0xa0]
   140004cdb:	mov    rbx,QWORD PTR [r11+0x10]
   140004cdf:	mov    rsi,QWORD PTR [r11+0x18]
   140004ce3:	mov    rdi,QWORD PTR [r11+0x20]
   140004ce7:	mov    r14,QWORD PTR [r11+0x28]
   140004ceb:	mov    rsp,r11
   140004cee:	pop    rbp
   140004cef:	ret    
   140004cf0:	int3   
   140004cf1:	int3   
   140004cf2:	int3   
   140004cf3:	int3   
   140004cf4:	int3   
   140004cf5:	int3   
   140004cf6:	int3   
   140004cf7:	int3   
   140004cf8:	mov    QWORD PTR [rsp+0x8],rcx
   140004cfd:	sub    rsp,0x38
   140004d01:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004d0a:	mov    ecx,0x30
   140004d0f:	call   0x140009cc8
   140004d14:	mov    QWORD PTR [rsp+0x40],rax
   140004d19:	xor    edx,edx
   140004d1b:	test   rax,rax
   140004d1e:	je     0x140004d23
   140004d20:	mov    QWORD PTR [rax],rdx
   140004d23:	lea    rcx,[rax+0x8]
   140004d27:	test   rcx,rcx
   140004d2a:	je     0x140004d2f
   140004d2c:	mov    QWORD PTR [rcx],rdx
   140004d2f:	lea    rcx,[rax+0x10]
   140004d33:	test   rcx,rcx
   140004d36:	je     0x140004d3b
   140004d38:	mov    QWORD PTR [rcx],rdx
   140004d3b:	mov    WORD PTR [rax+0x28],0x1
   140004d41:	add    rsp,0x38
   140004d45:	ret    
   140004d46:	int3   
   140004d47:	int3   
   140004d48:	int3   
   140004d49:	int3   
   140004d4a:	int3   
   140004d4b:	int3   
   140004d4c:	rex push rbp
   140004d4e:	push   r12
   140004d50:	push   r13
   140004d52:	push   r14
   140004d54:	push   r15
   140004d56:	sub    rsp,0x50
   140004d5a:	lea    rbp,[rsp+0x20]
   140004d5f:	mov    QWORD PTR [rbp+0x60],rbx
   140004d63:	mov    QWORD PTR [rbp+0x68],rsi
   140004d67:	mov    QWORD PTR [rbp+0x70],rdi
   140004d6b:	mov    rax,QWORD PTR [rip+0xc28e]        # 0x140011000
   140004d72:	xor    rax,rbp
   140004d75:	mov    QWORD PTR [rbp+0x20],rax
   140004d79:	xor    r13d,r13d
   140004d7c:	xor    eax,eax
   140004d7e:	mov    QWORD PTR [rbp+0x14],rax
   140004d82:	mov    rdi,rcx
   140004d85:	mov    DWORD PTR [rbp+0x1c],eax
   140004d88:	mov    r15d,r13d
   140004d8b:	mov    rax,QWORD PTR [rcx]
   140004d8e:	mov    r12d,r13d
   140004d91:	mov    QWORD PTR [rbp+0x8],r13
   140004d95:	mov    esi,r13d
   140004d98:	mov    DWORD PTR [rbp+0x10],r13d
   140004d9c:	mov    BYTE PTR [rbp+0x0],r13b
   140004da0:	mov    rbx,QWORD PTR [rax+0x8]
   140004da4:	mov    rcx,rbx
   140004da7:	call   QWORD PTR [rip+0x7763]        # 0x14000c510
   140004dad:	mov    rcx,rdi
   140004db0:	call   rbx
   140004db2:	mov    r14d,eax
   140004db5:	test   eax,eax
   140004db7:	jne    0x140005290
   140004dbd:	mov    rax,QWORD PTR [rdi+0x10]
   140004dc1:	movabs r14,0xffffffffffffff0
   140004dcb:	test   rax,rax
   140004dce:	je     0x140004ed7
   140004dd4:	cmp    DWORD PTR [rax+0x8],r13d
   140004dd8:	je     0x140004ed7
   140004dde:	mov    edx,DWORD PTR [rax+0x8]
   140004de1:	shl    rdx,0x3
   140004de5:	test   rdx,rdx
   140004de8:	je     0x140004e4d
   140004dea:	cmp    rdx,QWORD PTR [rip+0xd22f]        # 0x140012020
   140004df1:	ja     0x140004e4d
   140004df3:	mov    rcx,QWORD PTR [rip+0xd21e]        # 0x140012018
   140004dfa:	add    rcx,0x8
   140004dfe:	add    rcx,rdx
   140004e01:	cmp    rcx,rdx
   140004e04:	jb     0x140004e4d
   140004e06:	call   0x140009bb0
   140004e0b:	test   eax,eax
   140004e0d:	je     0x140004e4d
   140004e0f:	mov    rax,QWORD PTR [rdi+0x10]
   140004e13:	mov    ecx,DWORD PTR [rax+0x8]
   140004e16:	lea    rcx,[rcx*8+0x8]
   140004e1e:	lea    rax,[rcx+0xf]
   140004e22:	cmp    rax,rcx
   140004e25:	ja     0x140004e2a
   140004e27:	mov    rax,r14
   140004e2a:	and    rax,0xfffffffffffffff0
   140004e2e:	call   0x14000ab00
   140004e33:	sub    rsp,rax
   140004e36:	lea    r15,[rsp+0x20]
   140004e3b:	test   r15,r15
   140004e3e:	je     0x140004e4d
   140004e40:	mov    DWORD PTR [r15],0x6b637453
   140004e47:	add    r15,0x8
   140004e4b:	jne    0x140004e95
   140004e4d:	mov    rax,QWORD PTR [rdi+0x10]
   140004e51:	mov    ecx,DWORD PTR [rax+0x8]
   140004e54:	shl    rcx,0x3
   140004e58:	lea    r14,[rcx+0x8]
   140004e5c:	cmp    r14,rcx
   140004e5f:	jb     0x140004e8c
   140004e61:	mov    rbx,QWORD PTR [rip+0xd1a8]        # 0x140012010
   140004e68:	mov    rcx,rbx
   140004e6b:	call   QWORD PTR [rip+0x769f]        # 0x14000c510
   140004e71:	mov    rcx,r14
   140004e74:	call   rbx
   140004e76:	mov    r15,rax
   140004e79:	test   rax,rax
   140004e7c:	je     0x140005160
   140004e82:	mov    DWORD PTR [rax],0x70616548
   140004e88:	add    r15,0x8
   140004e8c:	test   r15,r15
   140004e8f:	je     0x140005160
   140004e95:	mov    rcx,QWORD PTR [rdi+0x10]
   140004e99:	mov    rdx,r15
   140004e9c:	call   0x1400070c8
   140004ea1:	mov    r14d,eax
   140004ea4:	test   eax,eax
   140004ea6:	jne    0x140005290
   140004eac:	mov    rax,QWORD PTR [rdi+0x10]
   140004eb0:	cmp    DWORD PTR [rax+0x8],r13d
   140004eb4:	jbe    0x140004ecd
   140004eb6:	mov    edx,DWORD PTR [rax+0x8]
   140004eb9:	mov    rcx,r15
   140004ebc:	mov    rax,QWORD PTR [rcx]
   140004ebf:	lea    rcx,[rcx+0x8]
   140004ec3:	add    r12d,DWORD PTR [rax+0x8]
   140004ec7:	sub    rdx,0x1
   140004ecb:	jne    0x140004ebc
   140004ecd:	movabs r14,0xffffffffffffff0
   140004ed7:	mov    rax,QWORD PTR [rdi+0x18]
   140004edb:	test   rax,rax
   140004ede:	je     0x140004ee4
   140004ee0:	add    r12d,DWORD PTR [rax+0x8]
   140004ee4:	cmp    BYTE PTR [rdi+0x22],r13b
   140004ee8:	je     0x140004ef0
   140004eea:	cmp    DWORD PTR [rdi+0x28],r13d
   140004eee:	je     0x140004f04
   140004ef0:	cmp    BYTE PTR [rdi+0x23],r13b
   140004ef4:	je     0x1400050b1
   140004efa:	cmp    DWORD PTR [rdi+0x2c],r13d
   140004efe:	jne    0x1400050b1
   140004f04:	mov    BYTE PTR [rbp+0x0],0x1
   140004f08:	cmp    BYTE PTR [rdi+0x24],r13b
   140004f0c:	jne    0x1400050b1
   140004f12:	mov    ebx,r12d
   140004f15:	shl    rbx,0x4
   140004f19:	mov    r13d,r12d
   140004f1c:	test   rbx,rbx
   140004f1f:	je     0x140004f7b
   140004f21:	cmp    rbx,QWORD PTR [rip+0xd0f8]        # 0x140012020
   140004f28:	ja     0x140004f7b
   140004f2a:	mov    rcx,QWORD PTR [rip+0xd0e7]        # 0x140012018
   140004f31:	add    rcx,0x8
   140004f35:	add    rcx,rbx
   140004f38:	cmp    rcx,rbx
   140004f3b:	jb     0x140004f7b
   140004f3d:	call   0x140009bb0
   140004f42:	test   eax,eax
   140004f44:	je     0x140004f7b
   140004f46:	lea    rax,[rbx+0x8]
   140004f4a:	lea    rcx,[rax+0xf]
   140004f4e:	cmp    rcx,rax
   140004f51:	ja     0x140004f56
   140004f53:	mov    rcx,r14
   140004f56:	and    rcx,0xfffffffffffffff0
   140004f5a:	mov    rax,rcx
   140004f5d:	call   0x14000ab00
   140004f62:	sub    rsp,rcx
   140004f65:	lea    rsi,[rsp+0x20]
   140004f6a:	test   rsi,rsi
   140004f6d:	je     0x140004f7b
   140004f6f:	mov    DWORD PTR [rsi],0x6b637453
   140004f75:	add    rsi,0x8
   140004f79:	jne    0x140004fb8
   140004f7b:	lea    r14,[rbx+0x8]
   140004f7f:	cmp    r14,rbx
   140004f82:	jb     0x140004faf
   140004f84:	mov    rbx,QWORD PTR [rip+0xd085]        # 0x140012010
   140004f8b:	mov    rcx,rbx
   140004f8e:	call   QWORD PTR [rip+0x757c]        # 0x14000c510
   140004f94:	mov    rcx,r14
   140004f97:	call   rbx
   140004f99:	mov    rsi,rax
   140004f9c:	test   rax,rax
   140004f9f:	je     0x140005160
   140004fa5:	mov    DWORD PTR [rax],0x70616548
   140004fab:	add    rsi,0x8
   140004faf:	test   rsi,rsi
   140004fb2:	je     0x140005160
   140004fb8:	mov    rax,QWORD PTR [rdi+0x10]
   140004fbc:	mov    r14,rsi
   140004fbf:	test   rax,rax
   140004fc2:	je     0x140005002
   140004fc4:	xor    r13d,r13d
   140004fc7:	cmp    DWORD PTR [rax+0x8],r13d
   140004fcb:	jbe    0x140004fff
   140004fcd:	mov    rdx,QWORD PTR [r15+r13*8]
   140004fd1:	mov    rcx,rsi
   140004fd4:	mov    r8d,DWORD PTR [rdx+0x8]
   140004fd8:	mov    rdx,QWORD PTR [rdx]
   140004fdb:	shl    r8,0x4
   140004fdf:	call   0x14000aab2
   140004fe4:	mov    rax,QWORD PTR [r15+r13*8]
   140004fe8:	inc    r13d
   140004feb:	mov    ecx,DWORD PTR [rax+0x8]
   140004fee:	mov    rax,QWORD PTR [rdi+0x10]
   140004ff2:	shl    rcx,0x4
   140004ff6:	add    rsi,rcx
   140004ff9:	cmp    r13d,DWORD PTR [rax+0x8]
   140004ffd:	jb     0x140004fcd
   140004fff:	mov    r13d,r12d
   140005002:	mov    rdx,QWORD PTR [rdi+0x18]
   140005006:	test   rdx,rdx
   140005009:	je     0x14000501e
   14000500b:	mov    r8d,DWORD PTR [rdx+0x8]
   14000500f:	mov    rcx,rsi
   140005012:	mov    rdx,QWORD PTR [rdx]
   140005015:	shl    r8,0x4
   140005019:	call   0x14000aab2
   14000501e:	mov    rax,QWORD PTR [rdi]
   140005021:	lea    rcx,[rip+0xffffffffffffe218]        # 0x140003240
   140005028:	cmp    QWORD PTR [rax+0x28],rcx
   14000502c:	jne    0x140005032
   14000502e:	xor    ecx,ecx
   140005030:	jmp    0x140005036
   140005032:	mov    rcx,QWORD PTR [rdi+0x30]
   140005036:	mov    rsi,r14
   140005039:	test   rcx,rcx
   14000503c:	je     0x140005050
   14000503e:	lea    r9,[rbp+0x8]
   140005042:	mov    r8d,r12d
   140005045:	mov    rdx,r14
   140005048:	call   QWORD PTR [rip+0x71d2]        # 0x14000c220
   14000504e:	jmp    0x140005060
   140005050:	lea    r8,[rbp+0x8]
   140005054:	mov    edx,r12d
   140005057:	mov    rcx,r14
   14000505a:	call   QWORD PTR [rip+0x71b0]        # 0x14000c210
   140005060:	test   al,al
   140005062:	jne    0x14000506f
   140005064:	call   QWORD PTR [rip+0x6fbe]        # 0x14000c028
   14000506a:	jmp    0x14000528d
   14000506f:	test   r12d,r12d
   140005072:	je     0x140005271
   140005078:	xor    r14d,r14d
   14000507b:	mov    rax,QWORD PTR [rdi]
   14000507e:	mov    rbx,QWORD PTR [rax+0x18]
   140005082:	mov    rcx,rbx
   140005085:	call   QWORD PTR [rip+0x7485]        # 0x14000c510
   14000508b:	mov    rax,QWORD PTR [rbp+0x8]
   14000508f:	mov    rcx,rdi
   140005092:	mov    edx,DWORD PTR [r14+rax*1+0x10]
   140005097:	call   rbx
   140005099:	mov    rcx,QWORD PTR [rbp+0x8]
   14000509d:	lea    r14,[r14+0x24]
   1400050a1:	mov    DWORD PTR [r14+rcx*1-0x14],eax
   1400050a6:	sub    r13,0x1
   1400050aa:	jne    0x14000507b
   1400050ac:	jmp    0x140005271
   1400050b1:	mov    eax,r12d
   1400050b4:	mov    QWORD PTR [rbp+0x8],r13
   1400050b8:	lea    rbx,[rax+rax*8]
   1400050bc:	shl    rbx,0x2
   1400050c0:	test   rbx,rbx
   1400050c3:	je     0x140005128
   1400050c5:	cmp    rbx,QWORD PTR [rip+0xcf54]        # 0x140012020
   1400050cc:	ja     0x140005128
   1400050ce:	mov    rcx,QWORD PTR [rip+0xcf43]        # 0x140012018
   1400050d5:	add    rcx,0x8
   1400050d9:	add    rcx,rbx
   1400050dc:	cmp    rcx,rbx
   1400050df:	jb     0x140005128
   1400050e1:	call   0x140009bb0
   1400050e6:	test   eax,eax
   1400050e8:	je     0x140005112
   1400050ea:	lea    rax,[rbx+0x8]
   1400050ee:	lea    rcx,[rax+0xf]
   1400050f2:	cmp    rcx,rax
   1400050f5:	ja     0x1400050fa
   1400050f7:	mov    rcx,r14
   1400050fa:	and    rcx,0xfffffffffffffff0
   1400050fe:	mov    rax,rcx
   140005101:	call   0x14000ab00
   140005106:	sub    rsp,rcx
   140005109:	lea    rax,[rsp+0x20]
   14000510e:	mov    QWORD PTR [rbp+0x8],rax
   140005112:	mov    rax,QWORD PTR [rbp+0x8]
   140005116:	test   rax,rax
   140005119:	je     0x140005128
   14000511b:	mov    DWORD PTR [rax],0x6b637453
   140005121:	add    QWORD PTR [rbp+0x8],0x8
   140005126:	jne    0x14000516b
   140005128:	lea    r14,[rbx+0x8]
   14000512c:	cmp    r14,rbx
   14000512f:	jb     0x14000515a
   140005131:	mov    rbx,QWORD PTR [rip+0xced8]        # 0x140012010
   140005138:	mov    rcx,rbx
   14000513b:	call   QWORD PTR [rip+0x73cf]        # 0x14000c510
   140005141:	mov    rcx,r14
   140005144:	call   rbx
   140005146:	mov    QWORD PTR [rbp+0x8],rax
   14000514a:	test   rax,rax
   14000514d:	je     0x140005160
   14000514f:	mov    DWORD PTR [rax],0x70616548
   140005155:	add    QWORD PTR [rbp+0x8],0x8
   14000515a:	cmp    QWORD PTR [rbp+0x8],r13
   14000515e:	jne    0x14000516b
   140005160:	mov    r14d,0x8
   140005166:	jmp    0x140005290
   14000516b:	mov    rax,QWORD PTR [rdi]
   14000516e:	cmp    BYTE PTR [rdi+0x24],r13b
   140005172:	je     0x14000518e
   140005174:	mov    edx,0x4
   140005179:	lea    rcx,[rip+0xffffffffffffe100]        # 0x140003280
   140005180:	cmp    QWORD PTR [rax+0x10],rcx
   140005184:	lea    r9d,[rdx+0xc]
   140005188:	cmove  r9d,edx
   14000518c:	jmp    0x1400051a5
   14000518e:	mov    rbx,QWORD PTR [rax+0x18]
   140005192:	mov    rcx,rbx
   140005195:	call   QWORD PTR [rip+0x7375]        # 0x14000c510
   14000519b:	xor    edx,edx
   14000519d:	mov    rcx,rdi
   1400051a0:	call   rbx
   1400051a2:	mov    r9d,eax
   1400051a5:	mov    rax,QWORD PTR [rdi+0x10]
   1400051a9:	mov    r12d,r13d
   1400051ac:	movups xmm1,XMMWORD PTR [rbp+0x10]
   1400051b0:	test   rax,rax
   1400051b3:	je     0x14000521c
   1400051b5:	mov    r8d,r13d
   1400051b8:	cmp    DWORD PTR [rax+0x8],r13d
   1400051bc:	jbe    0x14000521c
   1400051be:	mov    r11d,r8d
   1400051c1:	mov    ebx,r13d
   1400051c4:	mov    r10,QWORD PTR [r15+r11*8]
   1400051c8:	cmp    DWORD PTR [r10+0x8],r13d
   1400051cc:	jbe    0x14000520f
   1400051ce:	mov    eax,r12d
   1400051d1:	inc    r12d
   1400051d4:	mov    ecx,ebx
   1400051d6:	inc    ebx
   1400051d8:	add    rcx,rcx
   1400051db:	lea    rdx,[rax+rax*8]
   1400051df:	mov    rax,QWORD PTR [r10]
   1400051e2:	movups xmm0,XMMWORD PTR [rax+rcx*8]
   1400051e6:	mov    rax,QWORD PTR [rbp+0x8]
   1400051ea:	movdqu XMMWORD PTR [rax+rdx*4],xmm0
   1400051ef:	mov    rax,QWORD PTR [rbp+0x8]
   1400051f3:	movups xmm0,xmm1
   1400051f6:	mov    DWORD PTR [rax+rdx*4+0x10],r9d
   1400051fb:	mov    rax,QWORD PTR [rbp+0x8]
   1400051ff:	movdqu XMMWORD PTR [rax+rdx*4+0x14],xmm0
   140005205:	mov    r10,QWORD PTR [r15+r11*8]
   140005209:	cmp    ebx,DWORD PTR [r10+0x8]
   14000520d:	jb     0x1400051ce
   14000520f:	mov    rax,QWORD PTR [rdi+0x10]
   140005213:	inc    r8d
   140005216:	cmp    r8d,DWORD PTR [rax+0x8]
   14000521a:	jb     0x1400051be
   14000521c:	mov    r8,QWORD PTR [rdi+0x18]
   140005220:	test   r8,r8
   140005223:	je     0x140005271
   140005225:	mov    r10d,r13d
   140005228:	cmp    DWORD PTR [r8+0x8],r13d
   14000522c:	jbe    0x140005271
   14000522e:	mov    eax,r12d
   140005231:	inc    r12d
   140005234:	mov    ecx,r10d
   140005237:	inc    r10d
   14000523a:	add    rcx,rcx
   14000523d:	lea    rdx,[rax+rax*8]
   140005241:	mov    rax,QWORD PTR [r8]
   140005244:	movups xmm0,XMMWORD PTR [rax+rcx*8]
   140005248:	mov    rax,QWORD PTR [rbp+0x8]
   14000524c:	movdqu XMMWORD PTR [rax+rdx*4],xmm0
   140005251:	mov    rax,QWORD PTR [rbp+0x8]
   140005255:	movups xmm0,xmm1
   140005258:	mov    DWORD PTR [rax+rdx*4+0x10],r9d
   14000525d:	mov    rax,QWORD PTR [rbp+0x8]
   140005261:	movdqu XMMWORD PTR [rax+rdx*4+0x14],xmm0
   140005267:	mov    r8,QWORD PTR [rdi+0x18]
   14000526b:	cmp    r10d,DWORD PTR [r8+0x8]
   14000526f:	jb     0x14000522e
   140005271:	mov    rax,QWORD PTR [rdi]
   140005274:	mov    rbx,QWORD PTR [rax+0x20]
   140005278:	mov    rcx,rbx
   14000527b:	call   QWORD PTR [rip+0x728f]        # 0x14000c510
   140005281:	mov    rdx,QWORD PTR [rbp+0x8]
   140005285:	mov    r8d,r12d
   140005288:	mov    rcx,rdi
   14000528b:	call   rbx
   14000528d:	mov    r14d,eax
   140005290:	mov    rax,QWORD PTR [rbp+0x8]
   140005294:	test   rax,rax
   140005297:	je     0x1400052d3
   140005299:	cmp    BYTE PTR [rbp+0x0],0x0
   14000529d:	je     0x1400052b0
   14000529f:	cmp    BYTE PTR [rdi+0x24],0x0
   1400052a3:	jne    0x1400052b0
   1400052a5:	mov    rcx,rax
   1400052a8:	call   QWORD PTR [rip+0x6f42]        # 0x14000c1f0
   1400052ae:	jmp    0x1400052d3
   1400052b0:	mov    rdi,QWORD PTR [rbp+0x8]
   1400052b4:	cmp    DWORD PTR [rdi-0x8],0x70616548
   1400052bb:	jne    0x1400052d3
   1400052bd:	mov    rbx,QWORD PTR [rip+0xcd44]        # 0x140012008
   1400052c4:	mov    rcx,rbx
   1400052c7:	call   QWORD PTR [rip+0x7243]        # 0x14000c510
   1400052cd:	lea    rcx,[rdi-0x8]
   1400052d1:	call   rbx
   1400052d3:	test   r15,r15
   1400052d6:	je     0x1400052f8
   1400052d8:	cmp    DWORD PTR [r15-0x8],0x70616548
   1400052e0:	jne    0x1400052f8
   1400052e2:	mov    rbx,QWORD PTR [rip+0xcd1f]        # 0x140012008
   1400052e9:	mov    rcx,rbx
   1400052ec:	call   QWORD PTR [rip+0x721e]        # 0x14000c510
   1400052f2:	lea    rcx,[r15-0x8]
   1400052f6:	call   rbx
   1400052f8:	test   rsi,rsi
   1400052fb:	je     0x14000531c
   1400052fd:	cmp    DWORD PTR [rsi-0x8],0x70616548
   140005304:	jne    0x14000531c
   140005306:	mov    rbx,QWORD PTR [rip+0xccfb]        # 0x140012008
   14000530d:	mov    rcx,rbx
   140005310:	call   QWORD PTR [rip+0x71fa]        # 0x14000c510
   140005316:	lea    rcx,[rsi-0x8]
   14000531a:	call   rbx
   14000531c:	mov    eax,r14d
   14000531f:	mov    rcx,QWORD PTR [rbp+0x20]
   140005323:	xor    rcx,rbp
   140005326:	call   0x14000a0a0
   14000532b:	mov    rbx,QWORD PTR [rbp+0x60]
   14000532f:	mov    rsi,QWORD PTR [rbp+0x68]
   140005333:	mov    rdi,QWORD PTR [rbp+0x70]
   140005337:	lea    rsp,[rbp+0x30]
   14000533b:	pop    r15
   14000533d:	pop    r14
   14000533f:	pop    r13
   140005341:	pop    r12
   140005343:	pop    rbp
   140005344:	ret    
   140005345:	int3   
   140005346:	int3   
   140005347:	int3   
   140005348:	int3   
   140005349:	int3   
   14000534a:	int3   
   14000534b:	int3   
   14000534c:	int3   
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	xor    eax,eax
   140005352:	cmp    QWORD PTR [rcx+0x18],rax
   140005356:	jne    0x14000535e
   140005358:	cmp    QWORD PTR [rcx+0x10],rax
   14000535c:	je     0x140005368
   14000535e:	cmp    BYTE PTR [rcx+0x20],al
   140005361:	jne    0x140005368
   140005363:	cmp    BYTE PTR [rcx+0x21],al
   140005366:	je     0x14000536d
   140005368:	mov    eax,0x57
   14000536d:	ret    
   14000536e:	int3   
   14000536f:	int3   
   140005370:	int3   
   140005371:	int3   
   140005372:	int3   
   140005373:	int3   
   140005374:	int3   
   140005375:	int3   
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	int3   
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	xor    eax,eax
   140005382:	cmp    QWORD PTR [rcx+0x18],rax
   140005386:	jne    0x14000538e
   140005388:	cmp    QWORD PTR [rcx+0x10],rax
   14000538c:	je     0x140005394
   14000538e:	cmp    QWORD PTR [rcx+0x30],rax
   140005392:	jne    0x140005399
   140005394:	mov    eax,0x57
   140005399:	ret    
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	int3   
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	xor    r8d,r8d
   1400053a3:	test   edx,edx
   1400053a5:	je     0x1400053aa
   1400053a7:	or     edx,0x4
   1400053aa:	mov    al,BYTE PTR [rcx+0x22]
   1400053ad:	test   al,al
   1400053af:	jne    0x1400053c0
   1400053b1:	cmp    BYTE PTR [rcx+0x23],r8b
   1400053b5:	jne    0x1400053bc
   1400053b7:	or     edx,0x1
   1400053ba:	jmp    0x1400053e2
   1400053bc:	test   al,al
   1400053be:	je     0x1400053ce
   1400053c0:	cmp    DWORD PTR [rcx+0x28],r8d
   1400053c4:	je     0x1400053cb
   1400053c6:	or     edx,0x1
   1400053c9:	jmp    0x1400053ce
   1400053cb:	and    edx,0xfffffffe
   1400053ce:	cmp    BYTE PTR [rcx+0x23],r8b
   1400053d2:	je     0x1400053e2
   1400053d4:	cmp    DWORD PTR [rcx+0x2c],r8d
   1400053d8:	je     0x1400053df
   1400053da:	or     edx,0x2
   1400053dd:	jmp    0x1400053e2
   1400053df:	and    edx,0xfffffffd
   1400053e2:	mov    eax,edx
   1400053e4:	ret    
   1400053e5:	int3   
   1400053e6:	int3   
   1400053e7:	int3   
   1400053e8:	int3   
   1400053e9:	int3   
   1400053ea:	int3   
   1400053eb:	int3   
   1400053ec:	int3   
   1400053ed:	int3   
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	xor    eax,eax
   1400053f2:	test   edx,edx
   1400053f4:	je     0x1400053f9
   1400053f6:	or     edx,0x10
   1400053f9:	cmp    BYTE PTR [rcx+0x20],al
   1400053fc:	jne    0x140005407
   1400053fe:	cmp    BYTE PTR [rcx+0x21],al
   140005401:	jne    0x140005407
   140005403:	mov    BYTE PTR [rcx+0x20],0x1
   140005407:	cmp    BYTE PTR [rcx+0x22],al
   14000540a:	jne    0x14000541a
   14000540c:	cmp    BYTE PTR [rcx+0x23],al
   14000540f:	jne    0x140005415
   140005411:	mov    BYTE PTR [rcx+0x22],0x1
   140005415:	cmp    BYTE PTR [rcx+0x22],al
   140005418:	je     0x14000543e
   14000541a:	cmp    BYTE PTR [rcx+0x20],al
   14000541d:	je     0x14000542c
   14000541f:	cmp    DWORD PTR [rcx+0x28],eax
   140005422:	je     0x140005429
   140005424:	or     edx,0x1
   140005427:	jmp    0x14000542c
   140005429:	and    edx,0xfffffffe
   14000542c:	cmp    BYTE PTR [rcx+0x21],al
   14000542f:	je     0x14000543e
   140005431:	cmp    DWORD PTR [rcx+0x28],eax
   140005434:	je     0x14000543b
   140005436:	or     edx,0x2
   140005439:	jmp    0x14000543e
   14000543b:	and    edx,0xfffffffd
   14000543e:	cmp    BYTE PTR [rcx+0x23],al
   140005441:	je     0x140005467
   140005443:	cmp    BYTE PTR [rcx+0x20],al
   140005446:	je     0x140005455
   140005448:	cmp    DWORD PTR [rcx+0x2c],eax
   14000544b:	je     0x140005452
   14000544d:	or     edx,0x4
   140005450:	jmp    0x140005455
   140005452:	and    edx,0xfffffffb
   140005455:	cmp    BYTE PTR [rcx+0x21],al
   140005458:	je     0x140005467
   14000545a:	cmp    DWORD PTR [rcx+0x2c],eax
   14000545d:	je     0x140005464
   14000545f:	or     edx,0x8
   140005462:	jmp    0x140005467
   140005464:	and    edx,0xfffffff7
   140005467:	mov    eax,edx
   140005469:	ret    
   14000546a:	int3   
   14000546b:	int3   
   14000546c:	int3   
   14000546d:	int3   
   14000546e:	int3   
   14000546f:	int3   
   140005470:	rex push rbx
   140005472:	sub    rsp,0x20
   140005476:	mov    rcx,rdx
   140005479:	xor    ebx,ebx
   14000547b:	mov    edx,r8d
   14000547e:	call   QWORD PTR [rip+0x6d84]        # 0x14000c208
   140005484:	test   al,al
   140005486:	jne    0x140005490
   140005488:	call   QWORD PTR [rip+0x6b9a]        # 0x14000c028
   14000548e:	mov    ebx,eax
   140005490:	mov    eax,ebx
   140005492:	add    rsp,0x20
   140005496:	pop    rbx
   140005497:	ret    
   140005498:	int3   
   140005499:	int3   
   14000549a:	int3   
   14000549b:	int3   
   14000549c:	int3   
   14000549d:	int3   
   14000549e:	int3   
   14000549f:	int3   
   1400054a0:	rex push rbx
   1400054a2:	sub    rsp,0x20
   1400054a6:	mov    rcx,QWORD PTR [rcx+0x30]
   1400054aa:	xor    ebx,ebx
   1400054ac:	call   QWORD PTR [rip+0x6d8e]        # 0x14000c240
   1400054b2:	test   al,al
   1400054b4:	jne    0x1400054be
   1400054b6:	call   QWORD PTR [rip+0x6b6c]        # 0x14000c028
   1400054bc:	mov    ebx,eax
   1400054be:	mov    eax,ebx
   1400054c0:	add    rsp,0x20
   1400054c4:	pop    rbx
   1400054c5:	ret    
   1400054c6:	int3   
   1400054c7:	int3   
   1400054c8:	int3   
   1400054c9:	int3   
   1400054ca:	int3   
   1400054cb:	int3   
   1400054cc:	int3   
   1400054cd:	int3   
   1400054ce:	int3   
   1400054cf:	int3   
   1400054d0:	mov    eax,DWORD PTR [rcx+0x14]
   1400054d3:	sub    eax,DWORD PTR [rdx+0x14]
   1400054d6:	ret    
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	int3   
   1400054dd:	int3   
   1400054de:	int3   
   1400054df:	int3   
   1400054e0:	rex push rbp
   1400054e2:	push   r12
   1400054e4:	push   r13
   1400054e6:	push   r14
   1400054e8:	push   r15
   1400054ea:	sub    rsp,0x100
   1400054f1:	lea    rbp,[rsp+0x20]
   1400054f6:	mov    QWORD PTR [rbp+0x118],rbx
   1400054fd:	mov    QWORD PTR [rbp+0x120],rsi
   140005504:	mov    QWORD PTR [rbp+0x128],rdi
   14000550b:	mov    rax,QWORD PTR [rip+0xbaee]        # 0x140011000
   140005512:	xor    rax,rbp
   140005515:	mov    QWORD PTR [rbp+0xd0],rax
   14000551c:	mov    eax,DWORD PTR [rip+0xcaa6]        # 0x140011fc8
   140005522:	xor    esi,esi
   140005524:	and    QWORD PTR [rbp+0x0],rsi
   140005528:	xor    r15d,r15d
   14000552b:	and    QWORD PTR [rbp+0x40],rsi
   14000552f:	xor    r12d,r12d
   140005532:	and    QWORD PTR [rbp+0x28],rsi
   140005536:	mov    r14,rcx
   140005539:	and    QWORD PTR [rbp+0x20],rsi
   14000553d:	movabs rbx,0xffffffffffffff0
   140005547:	and    QWORD PTR [rbp+0x48],rsi
   14000554b:	mov    DWORD PTR [rbp+0x8],eax
   14000554e:	mov    rax,QWORD PTR [rcx+0x8]
   140005552:	mov    QWORD PTR [rbp+0x10],rsi
   140005556:	mov    QWORD PTR [rbp+0x18],r15
   14000555a:	test   rax,rax
   14000555d:	je     0x140005660
   140005563:	mov    edx,DWORD PTR [rax+0x8]
   140005566:	shl    rdx,0x3
   14000556a:	mov    QWORD PTR [rbp+0x10],rsi
   14000556e:	test   rdx,rdx
   140005571:	je     0x1400055dd
   140005573:	cmp    rdx,QWORD PTR [rip+0xcaa6]        # 0x140012020
   14000557a:	ja     0x1400055dd
   14000557c:	mov    rcx,QWORD PTR [rip+0xca95]        # 0x140012018
   140005583:	add    rcx,0x8
   140005587:	add    rcx,rdx
   14000558a:	cmp    rcx,rdx
   14000558d:	jb     0x1400055dd
   14000558f:	call   0x140009bb0
   140005594:	test   eax,eax
   140005596:	je     0x1400055dd
   140005598:	mov    rax,QWORD PTR [r14+0x8]
   14000559c:	mov    ecx,DWORD PTR [rax+0x8]
   14000559f:	lea    rcx,[rcx*8+0x8]
   1400055a7:	lea    rax,[rcx+0xf]
   1400055ab:	cmp    rax,rcx
   1400055ae:	ja     0x1400055b3
   1400055b0:	mov    rax,rbx
   1400055b3:	and    rax,0xfffffffffffffff0
   1400055b7:	call   0x14000ab00
   1400055bc:	sub    rsp,rax
   1400055bf:	lea    rsi,[rsp+0x20]
   1400055c4:	mov    QWORD PTR [rbp+0x10],rsi
   1400055c8:	test   rsi,rsi
   1400055cb:	je     0x1400055dd
   1400055cd:	mov    DWORD PTR [rsi],0x6b637453
   1400055d3:	add    rsi,0x8
   1400055d7:	mov    QWORD PTR [rbp+0x10],rsi
   1400055db:	jne    0x140005629
   1400055dd:	mov    rax,QWORD PTR [r14+0x8]
   1400055e1:	mov    ecx,DWORD PTR [rax+0x8]
   1400055e4:	shl    rcx,0x3
   1400055e8:	lea    rdi,[rcx+0x8]
   1400055ec:	cmp    rdi,rcx
   1400055ef:	jb     0x140005620
   1400055f1:	mov    rbx,QWORD PTR [rip+0xca18]        # 0x140012010
   1400055f8:	mov    rcx,rbx
   1400055fb:	call   QWORD PTR [rip+0x6f0f]        # 0x14000c510
   140005601:	mov    rcx,rdi
   140005604:	call   rbx
   140005606:	mov    rsi,rax
   140005609:	test   rax,rax
   14000560c:	je     0x1400057e1
   140005612:	add    rsi,0x8
   140005616:	mov    DWORD PTR [rax],0x70616548
   14000561c:	mov    QWORD PTR [rbp+0x10],rsi
   140005620:	test   rsi,rsi
   140005623:	je     0x1400057e1
   140005629:	mov    rcx,QWORD PTR [r14+0x8]
   14000562d:	mov    rdx,rsi
   140005630:	call   0x1400070c8
   140005635:	mov    edi,eax
   140005637:	test   eax,eax
   140005639:	jne    0x14000596b
   14000563f:	mov    rax,QWORD PTR [r14+0x8]
   140005643:	cmp    DWORD PTR [rax+0x8],r12d
   140005647:	jbe    0x140005660
   140005649:	mov    edx,DWORD PTR [rax+0x8]
   14000564c:	mov    rcx,rsi
   14000564f:	mov    rax,QWORD PTR [rcx]
   140005652:	lea    rcx,[rcx+0x8]
   140005656:	add    r12d,DWORD PTR [rax+0x8]
   14000565a:	sub    rdx,0x1
   14000565e:	jne    0x14000564f
   140005660:	mov    rax,QWORD PTR [r14+0x10]
   140005664:	test   rax,rax
   140005667:	je     0x14000566d
   140005669:	add    r12d,DWORD PTR [rax+0x8]
   14000566d:	mov    ebx,r12d
   140005670:	xor    edi,edi
   140005672:	shl    rbx,0x4
   140005676:	mov    r13d,r12d
   140005679:	mov    QWORD PTR [rbp+0x38],r13
   14000567d:	test   rbx,rbx
   140005680:	je     0x1400056e3
   140005682:	cmp    rbx,QWORD PTR [rip+0xc997]        # 0x140012020
   140005689:	ja     0x1400056e3
   14000568b:	mov    rcx,QWORD PTR [rip+0xc986]        # 0x140012018
   140005692:	add    rcx,0x8
   140005696:	add    rcx,rbx
   140005699:	cmp    rcx,rbx
   14000569c:	jb     0x1400056e3
   14000569e:	call   0x140009bb0
   1400056a3:	test   eax,eax
   1400056a5:	je     0x1400056e3
   1400056a7:	lea    rax,[rbx+0x8]
   1400056ab:	lea    rcx,[rax+0xf]
   1400056af:	cmp    rcx,rax
   1400056b2:	ja     0x1400056be
   1400056b4:	movabs rcx,0xffffffffffffff0
   1400056be:	and    rcx,0xfffffffffffffff0
   1400056c2:	mov    rax,rcx
   1400056c5:	call   0x14000ab00
   1400056ca:	sub    rsp,rcx
   1400056cd:	lea    rdi,[rsp+0x20]
   1400056d2:	test   rdi,rdi
   1400056d5:	je     0x1400056e3
   1400056d7:	mov    DWORD PTR [rdi],0x6b637453
   1400056dd:	add    rdi,0x8
   1400056e1:	jne    0x140005722
   1400056e3:	lea    r15,[rbx+0x8]
   1400056e7:	cmp    r15,rbx
   1400056ea:	jb     0x140005713
   1400056ec:	mov    rbx,QWORD PTR [rip+0xc91d]        # 0x140012010
   1400056f3:	mov    rcx,rbx
   1400056f6:	call   QWORD PTR [rip+0x6e14]        # 0x14000c510
   1400056fc:	mov    rcx,r15
   1400056ff:	call   rbx
   140005701:	mov    rdi,rax
   140005704:	test   rax,rax
   140005707:	je     0x140005718
   140005709:	mov    DWORD PTR [rax],0x70616548
   14000570f:	add    rdi,0x8
   140005713:	test   rdi,rdi
   140005716:	jne    0x140005722
   140005718:	mov    edi,0x8
   14000571d:	jmp    0x140005967
   140005722:	mov    rax,QWORD PTR [r14+0x8]
   140005726:	mov    r15,rdi
   140005729:	mov    QWORD PTR [rbp+0x18],rdi
   14000572d:	test   rax,rax
   140005730:	je     0x140005776
   140005732:	xor    r15d,r15d
   140005735:	cmp    DWORD PTR [rax+0x8],r15d
   140005739:	jbe    0x140005773
   14000573b:	mov    rdx,QWORD PTR [rsi+r15*8]
   14000573f:	mov    rcx,rdi
   140005742:	mov    r8d,DWORD PTR [rdx+0x8]
   140005746:	mov    rdx,QWORD PTR [rdx]
   140005749:	shl    r8,0x4
   14000574d:	call   0x14000aab2
   140005752:	mov    rax,QWORD PTR [rsi+r15*8]
   140005756:	inc    r15d
   140005759:	mov    ecx,DWORD PTR [rax+0x8]
   14000575c:	mov    rax,QWORD PTR [r14+0x8]
   140005760:	shl    rcx,0x4
   140005764:	add    rdi,rcx
   140005767:	cmp    r15d,DWORD PTR [rax+0x8]
   14000576b:	jb     0x14000573b
   14000576d:	mov    r15,QWORD PTR [rbp+0x18]
   140005771:	jmp    0x140005776
   140005773:	mov    r15,rdi
   140005776:	mov    rdx,QWORD PTR [r14+0x10]
   14000577a:	test   rdx,rdx
   14000577d:	je     0x140005792
   14000577f:	mov    r8d,DWORD PTR [rdx+0x8]
   140005783:	mov    rcx,rdi
   140005786:	mov    rdx,QWORD PTR [rdx]
   140005789:	shl    r8,0x4
   14000578d:	call   0x14000aab2
   140005792:	mov    rax,QWORD PTR [r14]
   140005795:	mov    rbx,QWORD PTR [rax+0x8]
   140005799:	mov    rcx,rbx
   14000579c:	call   QWORD PTR [rip+0x6d6e]        # 0x14000c510
   1400057a2:	lea    r9,[rbp+0x0]
   1400057a6:	mov    r8d,r12d
   1400057a9:	mov    rdx,r15
   1400057ac:	mov    rcx,r14
   1400057af:	call   rbx
   1400057b1:	mov    edi,eax
   1400057b3:	test   eax,eax
   1400057b5:	jne    0x14000596b
   1400057bb:	mov    rcx,QWORD PTR [rbp+0x0]
   1400057bf:	lea    r9,[rip+0xfffffffffffffd0a]        # 0x1400054d0
   1400057c6:	lea    r8d,[rax+0x24]
   1400057ca:	mov    rdx,r13
   1400057cd:	call   QWORD PTR [rip+0x6c25]        # 0x14000c3f8
   1400057d3:	call   0x1400031e4
   1400057d8:	mov    QWORD PTR [rbp+0x50],rax
   1400057dc:	test   rax,rax
   1400057df:	jne    0x1400057eb
   1400057e1:	mov    edi,0x8
   1400057e6:	jmp    0x14000596b
   1400057eb:	movsxd r13,DWORD PTR [rbp+0x8]
   1400057ef:	test   r13d,r13d
   1400057f2:	je     0x14000581d
   1400057f4:	lea    rdx,[rbp+0x8]
   1400057f8:	mov    DWORD PTR [rbp+0x8],0x10
   1400057ff:	lea    rcx,[rbp+0x58]
   140005803:	call   QWORD PTR [rip+0x689f]        # 0x14000c0a8
   140005809:	test   eax,eax
   14000580b:	jne    0x14000581d
   14000580d:	call   QWORD PTR [rip+0x6815]        # 0x14000c028
   140005813:	mov    edi,eax
   140005815:	test   eax,eax
   140005817:	jne    0x14000596b
   14000581d:	mov    rax,QWORD PTR [r14]
   140005820:	mov    rbx,QWORD PTR [rax+0x18]
   140005824:	mov    rcx,rbx
   140005827:	call   QWORD PTR [rip+0x6ce3]        # 0x14000c510
   14000582d:	lea    rdx,[rbp+0x20]
   140005831:	mov    rcx,r14
   140005834:	call   rbx
   140005836:	mov    DWORD PTR [rbp+0x30],eax
   140005839:	mov    edi,eax
   14000583b:	test   eax,eax
   14000583d:	jne    0x14000596b
   140005843:	mov    rax,QWORD PTR [r14]
   140005846:	mov    rbx,QWORD PTR [rax+0x20]
   14000584a:	mov    rcx,rbx
   14000584d:	call   QWORD PTR [rip+0x6cbd]        # 0x14000c510
   140005853:	mov    rcx,r14
   140005856:	call   rbx
   140005858:	test   r12d,r12d
   14000585b:	je     0x14000596b
   140005861:	mov    rdi,QWORD PTR [rbp+0x50]
   140005865:	mov    r12,r13
   140005868:	mov    rsi,QWORD PTR [rbp+0x48]
   14000586c:	xor    r13d,r13d
   14000586f:	xor    r15d,r15d
   140005872:	test   r12,r12
   140005875:	je     0x14000588d
   140005877:	mov    r8,QWORD PTR [rbp+0x20]
   14000587b:	lea    rdx,[rbp+0x58]
   14000587f:	lea    rcx,[rip+0x724a]        # 0x14000cad0
   140005886:	call   0x140006774
   14000588b:	jmp    0x1400058d1
   14000588d:	mov    rcx,QWORD PTR [rbp+0x0]
   140005891:	test   rsi,rsi
   140005894:	je     0x1400058ab
   140005896:	mov    rax,QWORD PTR [rsi]
   140005899:	cmp    rax,QWORD PTR [r15+rcx*1+0x14]
   14000589e:	jne    0x1400058ab
   1400058a0:	mov    rax,QWORD PTR [rsi+0x8]
   1400058a4:	cmp    rax,QWORD PTR [r15+rcx*1+0x1c]
   1400058a9:	je     0x1400058d5
   1400058ab:	lea    rsi,[rcx+0x14]
   1400058af:	mov    rcx,rdi
   1400058b2:	add    rsi,r15
   1400058b5:	lea    r8,[rbp+0x40]
   1400058b9:	mov    rdx,rsi
   1400058bc:	call   0x140001a74
   1400058c1:	mov    rdx,QWORD PTR [rbp+0x40]
   1400058c5:	lea    rcx,[rip+0x7214]        # 0x14000cae0
   1400058cc:	call   0x140006774
   1400058d1:	mov    rcx,QWORD PTR [rbp+0x0]
   1400058d5:	lea    rdx,[r15+rcx*1]
   1400058d9:	mov    rcx,rdi
   1400058dc:	lea    r8,[rbp+0x28]
   1400058e0:	call   0x140001ad4
   1400058e5:	mov    rdx,QWORD PTR [rbp+0x28]
   1400058e9:	test   r12,r12
   1400058ec:	jne    0x1400058f7
   1400058ee:	lea    rcx,[rip+0x71f3]        # 0x14000cae8
   1400058f5:	jmp    0x14000592a
   1400058f7:	lea    rcx,[rip+0x71fa]        # 0x14000caf8
   1400058fe:	call   0x140006774
   140005903:	mov    rcx,QWORD PTR [rbp+0x0]
   140005907:	lea    rdx,[rbp+0x80]
   14000590e:	add    rcx,r15
   140005911:	mov    r8d,0x27
   140005917:	call   0x1400072a8
   14000591c:	lea    rdx,[rbp+0x80]
   140005923:	lea    rcx,[rip+0x71ce]        # 0x14000caf8
   14000592a:	call   0x140006774
   14000592f:	mov    rax,QWORD PTR [r14]
   140005932:	mov    rbx,QWORD PTR [rax+0x10]
   140005936:	mov    rcx,rbx
   140005939:	call   QWORD PTR [rip+0x6bd1]        # 0x14000c510
   14000593f:	mov    rax,QWORD PTR [rbp+0x0]
   140005943:	mov    rcx,r14
   140005946:	mov    edx,DWORD PTR [r13+rax*1+0x10]
   14000594b:	call   rbx
   14000594d:	add    r15,0x24
   140005951:	add    r13,0x24
   140005955:	sub    QWORD PTR [rbp+0x38],0x1
   14000595a:	jne    0x140005872
   140005960:	mov    edi,DWORD PTR [rbp+0x30]
   140005963:	mov    rsi,QWORD PTR [rbp+0x10]
   140005967:	mov    r15,QWORD PTR [rbp+0x18]
   14000596b:	mov    rcx,QWORD PTR [rbp+0x20]
   14000596f:	test   rcx,rcx
   140005972:	je     0x14000597a
   140005974:	call   QWORD PTR [rip+0x671e]        # 0x14000c098
   14000597a:	test   rsi,rsi
   14000597d:	je     0x14000599e
   14000597f:	cmp    DWORD PTR [rsi-0x8],0x70616548
   140005986:	jne    0x14000599e
   140005988:	mov    rbx,QWORD PTR [rip+0xc679]        # 0x140012008
   14000598f:	mov    rcx,rbx
   140005992:	call   QWORD PTR [rip+0x6b78]        # 0x14000c510
   140005998:	lea    rcx,[rsi-0x8]
   14000599c:	call   rbx
   14000599e:	test   r15,r15
   1400059a1:	je     0x1400059c3
   1400059a3:	cmp    DWORD PTR [r15-0x8],0x70616548
   1400059ab:	jne    0x1400059c3
   1400059ad:	mov    rbx,QWORD PTR [rip+0xc654]        # 0x140012008
   1400059b4:	mov    rcx,rbx
   1400059b7:	call   QWORD PTR [rip+0x6b53]        # 0x14000c510
   1400059bd:	lea    rcx,[r15-0x8]
   1400059c1:	call   rbx
   1400059c3:	mov    rcx,QWORD PTR [rbp+0x0]
   1400059c7:	test   rcx,rcx
   1400059ca:	je     0x1400059d2
   1400059cc:	call   QWORD PTR [rip+0x681e]        # 0x14000c1f0
   1400059d2:	mov    eax,edi
   1400059d4:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400059db:	xor    rcx,rbp
   1400059de:	call   0x14000a0a0
   1400059e3:	mov    rbx,QWORD PTR [rbp+0x118]
   1400059ea:	mov    rsi,QWORD PTR [rbp+0x120]
   1400059f1:	mov    rdi,QWORD PTR [rbp+0x128]
   1400059f8:	lea    rsp,[rbp+0xe0]
   1400059ff:	pop    r15
   140005a01:	pop    r14
   140005a03:	pop    r13
   140005a05:	pop    r12
   140005a07:	pop    rbp
   140005a08:	ret    
   140005a09:	int3   
   140005a0a:	int3   
   140005a0b:	int3   
   140005a0c:	int3   
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	sub    rsp,0x238
   140005a17:	mov    rax,QWORD PTR [rip+0xb5e2]        # 0x140011000
   140005a1e:	xor    rax,rsp
   140005a21:	mov    QWORD PTR [rsp+0x220],rax
   140005a29:	cmp    DWORD PTR [rip+0xc598],0x0        # 0x140011fc8
   140005a30:	je     0x140005a39
   140005a32:	call   0x140007ab0
   140005a37:	jmp    0x140005aab
   140005a39:	mov    r8d,0x100
   140005a3f:	lea    rdx,[rsp+0x20]
   140005a44:	mov    ecx,0x2016
   140005a49:	call   0x140007cc0
   140005a4e:	lea    rdx,[rsp+0x20]
   140005a53:	lea    rcx,[rip+0x6f5a]        # 0x14000c9b4
   140005a5a:	call   0x140006774
   140005a5f:	mov    r8d,0x100
   140005a65:	lea    rdx,[rsp+0x20]
   140005a6a:	mov    ecx,0x2010
   140005a6f:	call   0x140007cc0
   140005a74:	lea    rdx,[rsp+0x20]
   140005a79:	lea    rcx,[rip+0x7080]        # 0x14000cb00
   140005a80:	call   0x140006774
   140005a85:	mov    r8d,0x100
   140005a8b:	lea    rdx,[rsp+0x20]
   140005a90:	mov    ecx,0x201a
   140005a95:	call   0x140007cc0
   140005a9a:	lea    rdx,[rsp+0x20]
   140005a9f:	lea    rcx,[rip+0x703a]        # 0x14000cae0
   140005aa6:	call   0x140006774
   140005aab:	mov    rcx,QWORD PTR [rsp+0x220]
   140005ab3:	xor    rcx,rsp
   140005ab6:	call   0x14000a0a0
   140005abb:	add    rsp,0x238
   140005ac2:	ret    
   140005ac3:	int3   
   140005ac4:	int3   
   140005ac5:	int3   
   140005ac6:	int3   
   140005ac7:	int3   
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	int3   
   140005acb:	int3   
   140005acc:	int3   
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ad5:	push   rdi
   140005ad6:	sub    rsp,0x230
   140005add:	mov    rax,QWORD PTR [rip+0xb51c]        # 0x140011000
   140005ae4:	xor    rax,rsp
   140005ae7:	mov    QWORD PTR [rsp+0x220],rax
   140005aef:	mov    edi,DWORD PTR [rip+0xc4d3]        # 0x140011fc8
   140005af5:	mov    ebx,edx
   140005af7:	mov    eax,edx
   140005af9:	test   edx,edx
   140005afb:	je     0x140005b28
   140005afd:	sub    eax,0x1
   140005b00:	je     0x140005b21
   140005b02:	sub    eax,0x1
   140005b05:	je     0x140005b1a
   140005b07:	cmp    eax,0x1
   140005b0a:	je     0x140005b13
   140005b0c:	mov    eax,0x57
   140005b11:	jmp    0x140005b7f
   140005b13:	mov    ecx,0x2003
   140005b18:	jmp    0x140005b2d
   140005b1a:	mov    ecx,0x2002
   140005b1f:	jmp    0x140005b2d
   140005b21:	mov    ecx,0x2001
   140005b26:	jmp    0x140005b2d
   140005b28:	mov    ecx,0x2004
   140005b2d:	mov    r8d,0x100
   140005b33:	lea    rdx,[rsp+0x20]
   140005b38:	call   0x140007cc0
   140005b3d:	lea    rdx,[rsp+0x20]
   140005b42:	lea    rcx,[rip+0x6e6b]        # 0x14000c9b4
   140005b49:	call   0x140006774
   140005b4e:	test   edi,edi
   140005b50:	je     0x140005b71
   140005b52:	lea    rcx,[rip+0x6e9f]        # 0x14000c9f8
   140005b59:	call   0x140006774
   140005b5e:	cmp    edi,0x2
   140005b61:	jne    0x140005b71
   140005b63:	mov    edx,ebx
   140005b65:	lea    rcx,[rip+0x6fa4]        # 0x14000cb10
   140005b6c:	call   0x140006774
   140005b71:	lea    rcx,[rip+0x6e78]        # 0x14000c9f0
   140005b78:	call   0x140006774
   140005b7d:	xor    eax,eax
   140005b7f:	mov    rcx,QWORD PTR [rsp+0x220]
   140005b87:	xor    rcx,rsp
   140005b8a:	call   0x14000a0a0
   140005b8f:	mov    rbx,QWORD PTR [rsp+0x240]
   140005b97:	add    rsp,0x230
   140005b9e:	pop    rdi
   140005b9f:	ret    
   140005ba0:	int3   
   140005ba1:	int3   
   140005ba2:	int3   
   140005ba3:	int3   
   140005ba4:	int3   
   140005ba5:	int3   
   140005ba6:	int3   
   140005ba7:	int3   
   140005ba8:	int3   
   140005ba9:	int3   
   140005baa:	int3   
   140005bab:	int3   
   140005bac:	int3   
   140005bad:	int3   
   140005bae:	int3   
   140005baf:	int3   
   140005bb0:	mov    QWORD PTR [rsp+0x10],rbx
   140005bb5:	push   rbp
   140005bb6:	lea    rbp,[rsp-0x140]
   140005bbe:	sub    rsp,0x240
   140005bc5:	mov    rax,QWORD PTR [rip+0xb434]        # 0x140011000
   140005bcc:	xor    rax,rsp
   140005bcf:	mov    QWORD PTR [rbp+0x130],rax
   140005bd6:	cmp    DWORD PTR [rip+0xc3eb],0x0        # 0x140011fc8
   140005bdd:	mov    rbx,rcx
   140005be0:	je     0x140005bec
   140005be2:	call   0x140007ab0
   140005be7:	jmp    0x140005cac
   140005bec:	and    QWORD PTR [rsp+0x20],0x0
   140005bf2:	lea    rdx,[rsp+0x30]
   140005bf7:	mov    r8d,0x100
   140005bfd:	mov    ecx,0x2017
   140005c02:	call   0x140007cc0
   140005c07:	mov    rcx,QWORD PTR [rbx+0x18]
   140005c0b:	lea    rdx,[rsp+0x20]
   140005c10:	call   QWORD PTR [rip+0x66ea]        # 0x14000c300
   140005c16:	test   eax,eax
   140005c18:	jne    0x140005c20
   140005c1a:	call   QWORD PTR [rip+0x6408]        # 0x14000c028
   140005c20:	mov    rdx,QWORD PTR [rsp+0x20]
   140005c25:	lea    rcx,[rsp+0x30]
   140005c2a:	call   0x140006774
   140005c2f:	mov    rcx,QWORD PTR [rsp+0x20]
   140005c34:	call   QWORD PTR [rip+0x645e]        # 0x14000c098
   140005c3a:	mov    r8d,0x100
   140005c40:	lea    rdx,[rsp+0x30]
   140005c45:	mov    ecx,0x2010
   140005c4a:	call   0x140007cc0
   140005c4f:	lea    rdx,[rsp+0x30]
   140005c54:	lea    rcx,[rip+0x6ea5]        # 0x14000cb00
   140005c5b:	call   0x140006774
   140005c60:	mov    r8d,0x100
   140005c66:	lea    rdx,[rsp+0x30]
   140005c6b:	mov    ecx,0x2014
   140005c70:	call   0x140007cc0
   140005c75:	lea    rdx,[rsp+0x30]
   140005c7a:	lea    rcx,[rip+0x6e97]        # 0x14000cb18
   140005c81:	call   0x140006774
   140005c86:	mov    r8d,0x100
   140005c8c:	lea    rdx,[rsp+0x30]
   140005c91:	mov    ecx,0x2015
   140005c96:	call   0x140007cc0
   140005c9b:	lea    rdx,[rsp+0x30]
   140005ca0:	lea    rcx,[rip+0x6e39]        # 0x14000cae0
   140005ca7:	call   0x140006774
   140005cac:	mov    rcx,QWORD PTR [rbp+0x130]
   140005cb3:	xor    rcx,rsp
   140005cb6:	call   0x14000a0a0
   140005cbb:	mov    rbx,QWORD PTR [rsp+0x258]
   140005cc3:	add    rsp,0x240
   140005cca:	pop    rbp
   140005ccb:	ret    
   140005ccc:	int3   
   140005ccd:	int3   
   140005cce:	int3   
   140005ccf:	int3   
   140005cd0:	int3   
   140005cd1:	int3   
   140005cd2:	int3   
   140005cd3:	int3   
   140005cd4:	int3   
   140005cd5:	int3   
   140005cd6:	int3   
   140005cd7:	int3   
   140005cd8:	int3   
   140005cd9:	int3   
   140005cda:	int3   
   140005cdb:	int3   
   140005cdc:	int3   
   140005cdd:	int3   
   140005cde:	int3   
   140005cdf:	int3   
   140005ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ce5:	mov    QWORD PTR [rsp+0x18],rbp
   140005cea:	mov    QWORD PTR [rsp+0x20],rsi
   140005cef:	push   rdi
   140005cf0:	sub    rsp,0x230
   140005cf7:	mov    rax,QWORD PTR [rip+0xb302]        # 0x140011000
   140005cfe:	xor    rax,rsp
   140005d01:	mov    QWORD PTR [rsp+0x220],rax
   140005d09:	mov    ebp,DWORD PTR [rip+0xc2b9]        # 0x140011fc8
   140005d0f:	mov    ecx,0x2005
   140005d14:	mov    eax,edx
   140005d16:	mov    edi,edx
   140005d18:	mov    ebx,ecx
   140005d1a:	lea    edx,[rcx-0x4]
   140005d1d:	lea    r9d,[rcx-0x2]
   140005d21:	lea    r8d,[rcx-0x3]
   140005d25:	and    eax,0x5
   140005d28:	je     0x140005d45
   140005d2a:	sub    eax,0x1
   140005d2d:	je     0x140005d43
   140005d2f:	sub    eax,0x3
   140005d32:	je     0x140005d3e
   140005d34:	cmp    eax,0x1
   140005d37:	jne    0x140005d45
   140005d39:	mov    ecx,r9d
   140005d3c:	jmp    0x140005d45
   140005d3e:	mov    ecx,r8d
   140005d41:	jmp    0x140005d45
   140005d43:	mov    ecx,edx
   140005d45:	mov    eax,edi
   140005d47:	and    eax,0xa
   140005d4a:	je     0x140005d67
   140005d4c:	cmp    eax,0x2
   140005d4f:	je     0x140005d65
   140005d51:	cmp    eax,0x8
   140005d54:	je     0x140005d60
   140005d56:	cmp    eax,0xa
   140005d59:	jne    0x140005d67
   140005d5b:	mov    ebx,r9d
   140005d5e:	jmp    0x140005d67
   140005d60:	mov    ebx,r8d
   140005d63:	jmp    0x140005d67
   140005d65:	mov    ebx,edx
   140005d67:	lea    rax,[rip+0x6c46]        # 0x14000c9b4
   140005d6e:	test   ebp,ebp
   140005d70:	lea    rsi,[rip+0x6db1]        # 0x14000cb28
   140005d77:	mov    r8d,0x100
   140005d7d:	lea    rdx,[rsp+0x20]
   140005d82:	cmovne rsi,rax
   140005d86:	call   0x140007cc0
   140005d8b:	lea    rdx,[rsp+0x20]
   140005d90:	mov    rcx,rsi
   140005d93:	call   0x140006774
   140005d98:	test   ebp,ebp
   140005d9a:	je     0x140005da8
   140005d9c:	lea    rcx,[rip+0x6c55]        # 0x14000c9f8
   140005da3:	call   0x140006774
   140005da8:	mov    r8d,0x100
   140005dae:	lea    rdx,[rsp+0x20]
   140005db3:	mov    ecx,ebx
   140005db5:	call   0x140007cc0
   140005dba:	lea    rdx,[rsp+0x20]
   140005dbf:	mov    rcx,rsi
   140005dc2:	call   0x140006774
   140005dc7:	cmp    ebp,0x2
   140005dca:	jne    0x140005dda
   140005dcc:	mov    edx,edi
   140005dce:	lea    rcx,[rip+0x6d3b]        # 0x14000cb10
   140005dd5:	call   0x140006774
   140005dda:	lea    rcx,[rip+0x6c0f]        # 0x14000c9f0
   140005de1:	call   0x140006774
   140005de6:	xor    eax,eax
   140005de8:	mov    rcx,QWORD PTR [rsp+0x220]
   140005df0:	xor    rcx,rsp
   140005df3:	call   0x14000a0a0
   140005df8:	lea    r11,[rsp+0x230]
   140005e00:	mov    rbx,QWORD PTR [r11+0x10]
   140005e04:	mov    rbp,QWORD PTR [r11+0x20]
   140005e08:	mov    rsi,QWORD PTR [r11+0x28]
   140005e0c:	mov    rsp,r11
   140005e0f:	pop    rdi
   140005e10:	ret    
   140005e11:	int3   
   140005e12:	int3   
   140005e13:	int3   
   140005e14:	int3   
   140005e15:	int3   
   140005e16:	int3   
   140005e17:	int3   
   140005e18:	int3   
   140005e19:	int3   
   140005e1a:	int3   
   140005e1b:	int3   
   140005e1c:	int3   
   140005e1d:	int3   
   140005e1e:	int3   
   140005e1f:	int3   
   140005e20:	rex push rbx
   140005e22:	sub    rsp,0x20
   140005e26:	mov    eax,r8d
   140005e29:	mov    rcx,rdx
   140005e2c:	mov    edx,eax
   140005e2e:	mov    r8,r9
   140005e31:	xor    ebx,ebx
   140005e33:	call   QWORD PTR [rip+0x63d7]        # 0x14000c210
   140005e39:	test   al,al
   140005e3b:	jne    0x140005e45
   140005e3d:	call   QWORD PTR [rip+0x61e5]        # 0x14000c028
   140005e43:	mov    ebx,eax
   140005e45:	mov    eax,ebx
   140005e47:	add    rsp,0x20
   140005e4b:	pop    rbx
   140005e4c:	ret    
   140005e4d:	int3   
   140005e4e:	int3   
   140005e4f:	int3   
   140005e50:	int3   
   140005e51:	int3   
   140005e52:	int3   
   140005e53:	int3   
   140005e54:	int3   
   140005e55:	int3   
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	int3   
   140005e5d:	int3   
   140005e5e:	int3   
   140005e5f:	int3   
   140005e60:	rex push rbx
   140005e62:	sub    rsp,0x20
   140005e66:	mov    rcx,QWORD PTR [rcx+0x18]
   140005e6a:	xor    ebx,ebx
   140005e6c:	call   QWORD PTR [rip+0x63ae]        # 0x14000c220
   140005e72:	test   al,al
   140005e74:	jne    0x140005e7e
   140005e76:	call   QWORD PTR [rip+0x61ac]        # 0x14000c028
   140005e7c:	mov    ebx,eax
   140005e7e:	mov    eax,ebx
   140005e80:	add    rsp,0x20
   140005e84:	pop    rbx
   140005e85:	ret    
   140005e86:	int3   
   140005e87:	int3   
   140005e88:	int3   
   140005e89:	int3   
   140005e8a:	int3   
   140005e8b:	int3   
   140005e8c:	int3   
   140005e8d:	int3   
   140005e8e:	int3   
   140005e8f:	int3   
   140005e90:	sub    rsp,0x28
   140005e94:	mov    rcx,QWORD PTR [rcx+0x18]
   140005e98:	call   QWORD PTR [rip+0x6462]        # 0x14000c300
   140005e9e:	test   eax,eax
   140005ea0:	jne    0x140005ead
   140005ea2:	add    rsp,0x28
   140005ea6:	rex.W jmp QWORD PTR [rip+0x617b]        # 0x14000c028
   140005ead:	xor    eax,eax
   140005eaf:	add    rsp,0x28
   140005eb3:	ret    
   140005eb4:	int3   
   140005eb5:	int3   
   140005eb6:	int3   
   140005eb7:	int3   
   140005eb8:	int3   
   140005eb9:	int3   
   140005eba:	int3   
   140005ebb:	int3   
   140005ebc:	int3   
   140005ebd:	int3   
   140005ebe:	int3   
   140005ebf:	int3   
   140005ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ec5:	mov    QWORD PTR [rsp+0x18],rsi
   140005eca:	push   rdi
   140005ecb:	sub    rsp,0xb0
   140005ed2:	mov    rax,QWORD PTR [rip+0xb127]        # 0x140011000
   140005ed9:	xor    rax,rsp
   140005edc:	mov    QWORD PTR [rsp+0xa0],rax
   140005ee4:	mov    rdi,rdx
   140005ee7:	mov    r8d,0x40
   140005eed:	lea    rdx,[rsp+0x20]
   140005ef2:	mov    ecx,0x200b
   140005ef7:	call   0x140007cc0
   140005efc:	or     rax,0xffffffffffffffff
   140005f00:	lea    rcx,[rsp+0x20]
   140005f05:	xor    esi,esi
   140005f07:	inc    rax
   140005f0a:	cmp    WORD PTR [rcx+rax*2],si
   140005f0e:	jne    0x140005f07
   140005f10:	inc    eax
   140005f12:	xor    ecx,ecx
   140005f14:	mov    ebx,eax
   140005f16:	lea    rdx,[rax+rax*1]
   140005f1a:	call   QWORD PTR [rip+0x6170]        # 0x14000c090
   140005f20:	mov    QWORD PTR [rdi],rax
   140005f23:	mov    rcx,rax
   140005f26:	test   rax,rax
   140005f29:	jne    0x140005f30
   140005f2b:	lea    eax,[rcx+0x8]
   140005f2e:	jmp    0x140005f7e
   140005f30:	lea    rax,[rbx-0x1]
   140005f34:	mov    edx,0x7ffffffe
   140005f39:	cmp    rax,rdx
   140005f3c:	ja     0x140005f74
   140005f3e:	sub    rdx,rbx
   140005f41:	lea    r8,[rsp+0x20]
   140005f46:	sub    r8,rcx
   140005f49:	lea    rax,[rdx+rbx*1]
   140005f4d:	test   rax,rax
   140005f50:	je     0x140005f69
   140005f52:	movzx  eax,WORD PTR [r8+rcx*1]
   140005f57:	test   ax,ax
   140005f5a:	je     0x140005f69
   140005f5c:	mov    WORD PTR [rcx],ax
   140005f5f:	add    rcx,0x2
   140005f63:	sub    rbx,0x1
   140005f67:	jne    0x140005f49
   140005f69:	test   rbx,rbx
   140005f6c:	jne    0x140005f79
   140005f6e:	sub    rcx,0x2
   140005f72:	jmp    0x140005f79
   140005f74:	test   rbx,rbx
   140005f77:	je     0x140005f7c
   140005f79:	mov    WORD PTR [rcx],si
   140005f7c:	xor    eax,eax
   140005f7e:	mov    rcx,QWORD PTR [rsp+0xa0]
   140005f86:	xor    rcx,rsp
   140005f89:	call   0x14000a0a0
   140005f8e:	lea    r11,[rsp+0xb0]
   140005f96:	mov    rbx,QWORD PTR [r11+0x10]
   140005f9a:	mov    rsi,QWORD PTR [r11+0x20]
   140005f9e:	mov    rsp,r11
   140005fa1:	pop    rdi
   140005fa2:	ret    
   140005fa3:	int3   
   140005fa4:	int3   
   140005fa5:	int3   
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	int3   
   140005fa9:	int3   
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	mov    QWORD PTR [rsp+0x8],rbx
   140005fb1:	mov    QWORD PTR [rsp+0x10],rbp
   140005fb6:	mov    QWORD PTR [rsp+0x20],r9
   140005fbb:	push   rdi
   140005fbc:	push   r12
   140005fbe:	push   r13
   140005fc0:	push   r14
   140005fc2:	push   r15
   140005fc4:	sub    rsp,0x20
   140005fc8:	movzx  eax,WORD PTR [rcx]
   140005fcb:	mov    rdi,rcx
   140005fce:	sub    ax,0x2d
   140005fd2:	mov    ecx,0xfffd
   140005fd7:	mov    r15,r8
   140005fda:	mov    r13d,edx
   140005fdd:	test   cx,ax
   140005fe0:	jne    0x1400061cd
   140005fe6:	xor    r12d,r12d
   140005fe9:	add    rdi,0x2
   140005fed:	mov    r14d,r12d
   140005ff0:	test   edx,edx
   140005ff2:	je     0x1400061cd
   140005ff8:	lea    rbx,[r8+0x18]
   140005ffc:	cmp    DWORD PTR [rbx-0xc],r12d
   140006000:	je     0x140006180
   140006006:	mov    rcx,QWORD PTR [rbx-0x18]
   14000600a:	or     rax,0xffffffffffffffff
   14000600e:	inc    rax
   140006011:	cmp    WORD PTR [rcx+rax*2],r12w
   140006016:	jne    0x14000600e
   140006018:	mov    r8d,eax
   14000601b:	mov    rdx,rdi
   14000601e:	mov    ebp,eax
   140006020:	call   QWORD PTR [rip+0x634a]        # 0x14000c370
   140006026:	test   eax,eax
   140006028:	sete   r12b
   14000602c:	test   r12b,r12b
   14000602f:	je     0x140006198
   140006035:	cmp    WORD PTR [rdi+rbp*2],0x3a
   14000603a:	jne    0x1400061cd
   140006040:	mov    eax,DWORD PTR [rbx-0xc]
   140006043:	test   eax,eax
   140006045:	jle    0x140006193
   14000604b:	cmp    eax,0x3
   14000604e:	jle    0x140006140
   140006054:	cmp    eax,0x4
   140006057:	je     0x140006123
   14000605d:	cmp    eax,0x5
   140006060:	je     0x14000610a
   140006066:	cmp    eax,0x6
   140006069:	je     0x1400060d7
   14000606b:	cmp    eax,0x7
   14000606e:	je     0x140006083
   140006070:	cmp    eax,0x8
   140006073:	je     0x140006093
   140006075:	cmp    eax,0x9
   140006078:	je     0x140006083
   14000607a:	cmp    eax,0xa
   14000607d:	jne    0x140006193
   140006083:	lea    rax,[rdi+0x2]
   140006087:	lea    rax,[rax+rbp*2]
   14000608b:	mov    QWORD PTR [rbx],rax
   14000608e:	jmp    0x140006193
   140006093:	lea    rbp,[rdi+rbp*2]
   140006097:	lea    rcx,[rbp+0x2]
   14000609b:	lea    rdx,[rip+0x6b3e]        # 0x14000cbe0
   1400060a2:	call   QWORD PTR [rip+0x6418]        # 0x14000c4c0
   1400060a8:	test   eax,eax
   1400060aa:	jne    0x1400060b7
   1400060ac:	mov    DWORD PTR [rbx],0x1
   1400060b2:	jmp    0x140006193
   1400060b7:	lea    rdx,[rip+0x6b32]        # 0x14000cbf0
   1400060be:	lea    rcx,[rbp+0x2]
   1400060c2:	call   QWORD PTR [rip+0x63f8]        # 0x14000c4c0
   1400060c8:	test   eax,eax
   1400060ca:	jne    0x1400061cd
   1400060d0:	and    DWORD PTR [rbx],eax
   1400060d2:	jmp    0x140006193
   1400060d7:	xor    r9d,r9d
   1400060da:	mov    eax,r14d
   1400060dd:	shl    rax,0x5
   1400060e1:	lea    r8,[r15+0x18]
   1400060e5:	lea    rcx,[rdi+0x2]
   1400060e9:	add    r8,rax
   1400060ec:	lea    rcx,[rcx+rbp*2]
   1400060f0:	lea    edx,[r9+0x1]
   1400060f4:	call   QWORD PTR [rip+0x620e]        # 0x14000c308
   1400060fa:	test   eax,eax
   1400060fc:	jne    0x140006193
   140006102:	call   QWORD PTR [rip+0x5f20]        # 0x14000c028
   140006108:	jmp    0x14000617a
   14000610a:	mov    edx,r14d
   14000610d:	lea    rcx,[rdi+0x2]
   140006111:	shl    rdx,0x5
   140006115:	lea    rcx,[rcx+rbp*2]
   140006119:	add    rdx,r15
   14000611c:	call   0x1400077c0
   140006121:	jmp    0x14000617a
   140006123:	mov    eax,r14d
   140006126:	lea    rdx,[r15+0x18]
   14000612a:	shl    rax,0x5
   14000612e:	lea    rcx,[rdi+0x2]
   140006132:	add    rdx,rax
   140006135:	lea    rcx,[rcx+rbp*2]
   140006139:	call   0x140007864
   14000613e:	jmp    0x14000617a
   140006140:	cmp    eax,0x2
   140006143:	lea    rdx,[r15+0x18]
   140006147:	mov    eax,r14d
   14000614a:	lea    rcx,[rdi+0x2]
   14000614e:	sete   r8b
   140006152:	lea    rcx,[rcx+rbp*2]
   140006156:	shl    rax,0x5
   14000615a:	add    rdx,rax
   14000615d:	call   0x140007484
   140006162:	test   eax,eax
   140006164:	jne    0x1400061d2
   140006166:	cmp    DWORD PTR [rbx-0xc],0x1
   14000616a:	jne    0x140006193
   14000616c:	mov    rax,QWORD PTR [rbx]
   14000616f:	cmp    DWORD PTR [rax+0x8],0x1
   140006173:	jbe    0x140006193
   140006175:	mov    eax,0x57
   14000617a:	test   eax,eax
   14000617c:	jne    0x1400061d2
   14000617e:	jmp    0x140006193
   140006180:	mov    rdx,QWORD PTR [rbx-0x18]
   140006184:	mov    rcx,rdi
   140006187:	call   QWORD PTR [rip+0x6333]        # 0x14000c4c0
   14000618d:	test   eax,eax
   14000618f:	sete   r12b
   140006193:	test   r12b,r12b
   140006196:	jne    0x1400061ac
   140006198:	inc    r14d
   14000619b:	add    rbx,0x20
   14000619f:	cmp    r14d,r13d
   1400061a2:	jae    0x1400061cd
   1400061a4:	xor    r12d,r12d
   1400061a7:	jmp    0x140005ffc
   1400061ac:	mov    eax,r14d
   1400061af:	shl    rax,0x5
   1400061b3:	cmp    BYTE PTR [rax+r15*1+0x10],0x0
   1400061b9:	jne    0x1400061cd
   1400061bb:	mov    rcx,QWORD PTR [rsp+0x68]
   1400061c0:	mov    BYTE PTR [rax+r15*1+0x10],0x1
   1400061c6:	xor    eax,eax
   1400061c8:	mov    DWORD PTR [rcx],r14d
   1400061cb:	jmp    0x1400061d2
   1400061cd:	mov    eax,0x57
   1400061d2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400061d7:	mov    rbp,QWORD PTR [rsp+0x58]
   1400061dc:	add    rsp,0x20
   1400061e0:	pop    r15
   1400061e2:	pop    r14
   1400061e4:	pop    r13
   1400061e6:	pop    r12
   1400061e8:	pop    rdi
   1400061e9:	ret    
   1400061ea:	int3   
   1400061eb:	int3   
   1400061ec:	int3   
   1400061ed:	int3   
   1400061ee:	int3   
   1400061ef:	int3   
   1400061f0:	mov    rax,rsp
   1400061f3:	mov    QWORD PTR [rax+0x8],rbx
   1400061f7:	mov    QWORD PTR [rax+0x10],rbp
   1400061fb:	mov    QWORD PTR [rax+0x20],rsi
   1400061ff:	mov    DWORD PTR [rax+0x18],r8d
   140006203:	push   rdi
   140006204:	push   r12
   140006206:	push   r13
   140006208:	push   r14
   14000620a:	push   r15
   14000620c:	sub    rsp,0x20
   140006210:	xor    ebx,ebx
   140006212:	xor    r15d,r15d
   140006215:	mov    r14,rdx
   140006218:	mov    r12d,ecx
   14000621b:	cmp    ecx,0x1
   14000621e:	jbe    0x140006333
   140006224:	mov    r8,QWORD PTR [rdx+0x8]
   140006228:	mov    ecx,0xfffd
   14000622d:	movzx  eax,WORD PTR [r8]
   140006231:	sub    ax,0x2d
   140006235:	test   cx,ax
   140006238:	je     0x140006244
   14000623a:	mov    ebx,0x57
   14000623f:	jmp    0x140006333
   140006244:	lea    r13,[rip+0xb0e5]        # 0x140011330
   14000624b:	mov    rdi,r13
   14000624e:	lea    rsi,[r8+0x2]
   140006252:	mov    rdx,QWORD PTR [rdi]
   140006255:	mov    rcx,rsi
   140006258:	call   QWORD PTR [rip+0x6262]        # 0x14000c4c0
   14000625e:	test   eax,eax
   140006260:	je     0x14000626f
   140006262:	inc    ebx
   140006264:	add    rdi,0x20
   140006268:	cmp    ebx,0x9
   14000626b:	jb     0x140006252
   14000626d:	jmp    0x14000623a
   14000626f:	mov    eax,ebx
   140006271:	shl    rax,0x5
   140006275:	mov    DWORD PTR [rsp+0x60],ebx
   140006279:	xor    ebx,ebx
   14000627b:	mov    BYTE PTR [rax+r13*1+0x8],0x1
   140006281:	mov    rbp,QWORD PTR [rax+r13*1+0x10]
   140006286:	mov    esi,DWORD PTR [rax+r13*1+0x18]
   14000628b:	test   rbp,rbp
   14000628e:	je     0x140006333
   140006294:	test   esi,esi
   140006296:	je     0x140006333
   14000629c:	lea    edi,[rbx+0x2]
   14000629f:	cmp    r12d,edi
   1400062a2:	jbe    0x140006333
   1400062a8:	add    r14,0x10
   1400062ac:	mov    rcx,QWORD PTR [r14]
   1400062af:	lea    r9,[rsp+0x60]
   1400062b4:	mov    r8,rbp
   1400062b7:	mov    edx,esi
   1400062b9:	call   0x140005fac
   1400062be:	mov    ebx,eax
   1400062c0:	test   eax,eax
   1400062c2:	jne    0x1400062ff
   1400062c4:	test   r15d,r15d
   1400062c7:	jne    0x1400062d8
   1400062c9:	mov    ecx,DWORD PTR [rsp+0x60]
   1400062cd:	shl    rcx,0x5
   1400062d1:	mov    r15d,DWORD PTR [rcx+rbp*1+0x8]
   1400062d6:	jmp    0x1400062ed
   1400062d8:	mov    eax,DWORD PTR [rsp+0x60]
   1400062dc:	shl    rax,0x5
   1400062e0:	mov    ecx,DWORD PTR [rax+rbp*1+0x8]
   1400062e4:	test   ecx,ecx
   1400062e6:	je     0x1400062ed
   1400062e8:	cmp    ecx,r15d
   1400062eb:	jne    0x1400062fa
   1400062ed:	inc    edi
   1400062ef:	add    r14,0x8
   1400062f3:	cmp    edi,r12d
   1400062f6:	jae    0x140006333
   1400062f8:	jmp    0x1400062ac
   1400062fa:	mov    ebx,0x57
   1400062ff:	test   esi,esi
   140006301:	je     0x140006333
   140006303:	lea    rdi,[rbp+0x18]
   140006307:	mov    ecx,DWORD PTR [rdi-0xc]
   14000630a:	lea    eax,[rcx-0x1]
   14000630d:	cmp    eax,0x3
   140006310:	jbe    0x140006317
   140006312:	cmp    ecx,0x6
   140006315:	jne    0x140006325
   140006317:	mov    rcx,QWORD PTR [rdi]
   14000631a:	test   rcx,rcx
   14000631d:	je     0x140006325
   14000631f:	call   QWORD PTR [rip+0x5d73]        # 0x14000c098
   140006325:	and    QWORD PTR [rdi],0x0
   140006329:	add    rdi,0x20
   14000632d:	sub    rsi,0x1
   140006331:	jne    0x140006307
   140006333:	mov    rbp,QWORD PTR [rsp+0x58]
   140006338:	mov    eax,ebx
   14000633a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000633f:	mov    rsi,QWORD PTR [rsp+0x68]
   140006344:	add    rsp,0x20
   140006348:	pop    r15
   14000634a:	pop    r14
   14000634c:	pop    r13
   14000634e:	pop    r12
   140006350:	pop    rdi
   140006351:	ret    
   140006352:	int3   
   140006353:	int3   
   140006354:	int3   
   140006355:	int3   
   140006356:	int3   
   140006357:	int3   
   140006358:	rex push rbx
   14000635a:	push   rsi
   14000635b:	push   rdi
   14000635c:	sub    rsp,0x30
   140006360:	xor    ebx,ebx
   140006362:	lea    rsi,[rip+0x6817]        # 0x14000cb80
   140006369:	and    QWORD PTR [rsp+0x60],rbx
   14000636e:	xor    edi,edi
   140006370:	cmp    DWORD PTR [rip+0xacb1],0x0        # 0x140011028
   140006377:	je     0x140006403
   14000637d:	mov    rcx,QWORD PTR [rsi]
   140006380:	lea    rdx,[rsp+0x60]
   140006385:	and    QWORD PTR [rsp+0x60],0x0
   14000638b:	call   QWORD PTR [rip+0x5ea7]        # 0x14000c238
   140006391:	test   al,al
   140006393:	jne    0x1400063aa
   140006395:	call   QWORD PTR [rip+0x5c8d]        # 0x14000c028
   14000639b:	mov    ebx,eax
   14000639d:	cmp    eax,0x2
   1400063a0:	jne    0x140006444
   1400063a6:	xor    ebx,ebx
   1400063a8:	jmp    0x1400063eb
   1400063aa:	mov    rcx,QWORD PTR [rsp+0x60]
   1400063af:	test   rcx,rcx
   1400063b2:	je     0x1400063eb
   1400063b4:	movzx  r9d,WORD PTR [rcx+0x4]
   1400063b9:	lea    rdx,[rcx+0x8]
   1400063bd:	xor    r8d,r8d
   1400063c0:	test   r9d,r9d
   1400063c3:	je     0x1400063e5
   1400063c5:	mov    al,BYTE PTR [rdx]
   1400063c7:	sub    al,0xd
   1400063c9:	cmp    al,0x3
   1400063cb:	jbe    0x1400063de
   1400063cd:	movzx  eax,WORD PTR [rdx+0x2]
   1400063d1:	inc    r8d
   1400063d4:	add    rdx,rax
   1400063d7:	cmp    r8d,r9d
   1400063da:	jb     0x1400063c5
   1400063dc:	jmp    0x1400063e5
   1400063de:	and    DWORD PTR [rip+0xac43],0x0        # 0x140011028
   1400063e5:	call   QWORD PTR [rip+0x5cad]        # 0x14000c098
   1400063eb:	inc    edi
   1400063ed:	add    rsi,0x10
   1400063f1:	cmp    edi,0x2
   1400063f4:	jb     0x140006370
   1400063fa:	cmp    DWORD PTR [rip+0xac27],0x0        # 0x140011028
   140006401:	jne    0x140006444
   140006403:	mov    rcx,QWORD PTR [rip+0xbbc6]        # 0x140011fd0
   14000640a:	lea    r9,[rsp+0x58]
   14000640f:	and    QWORD PTR [rsp+0x20],0x0
   140006415:	lea    rdx,[rsp+0x50]
   14000641a:	mov    eax,0xfeff
   14000641f:	mov    DWORD PTR [rsp+0x58],0x2
   140006427:	mov    r8d,0x2
   14000642d:	mov    WORD PTR [rsp+0x50],ax
   140006432:	call   QWORD PTR [rip+0x5c18]        # 0x14000c050
   140006438:	test   eax,eax
   14000643a:	jne    0x140006444
   14000643c:	call   QWORD PTR [rip+0x5be6]        # 0x14000c028
   140006442:	mov    ebx,eax
   140006444:	mov    eax,ebx
   140006446:	add    rsp,0x30
   14000644a:	pop    rdi
   14000644b:	pop    rsi
   14000644c:	pop    rbx
   14000644d:	ret    
   14000644e:	int3   
   14000644f:	int3   
   140006450:	int3   
   140006451:	int3   
   140006452:	int3   
   140006453:	int3   
   140006454:	rex push rbp
   140006456:	push   rsi
   140006457:	push   rdi
   140006458:	push   r12
   14000645a:	push   r13
   14000645c:	push   r14
   14000645e:	push   r15
   140006460:	mov    eax,0x1070
   140006465:	call   0x14000ab00
   14000646a:	sub    rsp,rax
   14000646d:	lea    rbp,[rsp+0x40]
   140006472:	mov    QWORD PTR [rbp+0x1088],rbx
   140006479:	mov    rax,QWORD PTR [rip+0xab80]        # 0x140011000
   140006480:	xor    rax,rbp
   140006483:	mov    QWORD PTR [rbp+0x1020],rax
   14000648a:	xor    r13d,r13d
   14000648d:	mov    QWORD PTR [rbp+0x8],r8
   140006491:	mov    r12,rcx
   140006494:	mov    QWORD PTR [rbp+0x10],rdx
   140006498:	mov    rdi,r8
   14000649b:	mov    rsi,rdx
   14000649e:	mov    ebx,r13d
   1400064a1:	lea    r14d,[r13+0x2]
   1400064a5:	mov    ecx,r14d
   1400064a8:	call   0x14000aa68
   1400064ad:	cmp    r12,rax
   1400064b0:	jne    0x1400064b9
   1400064b2:	mov    ecx,0xfffffff4
   1400064b7:	jmp    0x1400064cd
   1400064b9:	mov    ecx,0x1
   1400064be:	call   0x14000aa68
   1400064c3:	cmp    r12,rax
   1400064c6:	jne    0x140006527
   1400064c8:	mov    ecx,0xfffffff5
   1400064cd:	call   QWORD PTR [rip+0x5c2d]        # 0x14000c100
   1400064d3:	mov    r15,rax
   1400064d6:	mov    edx,0x800
   1400064db:	mov    QWORD PTR [rsp+0x20],rdi
   1400064e0:	mov    r9,rsi
   1400064e3:	lea    rcx,[rbp+0x20]
   1400064e7:	lea    r8d,[rdx-0x1]
   1400064eb:	call   QWORD PTR [rip+0x5f3f]        # 0x14000c430
   1400064f1:	or     rdi,0xffffffffffffffff
   1400064f5:	test   eax,eax
   1400064f7:	jns    0x140006569
   1400064f9:	mov    ecx,0x1800
   1400064fe:	mov    rax,r14
   140006501:	mul    rcx
   140006504:	lea    rdx,[rip+0xb501]        # 0x140011a0c
   14000650b:	cmovo  rax,rdi
   14000650f:	mov    rcx,rax
   140006512:	call   0x14000a244
   140006517:	mov    r14,rax
   14000651a:	test   rax,rax
   14000651d:	jne    0x14000653c
   14000651f:	lea    esi,[rdi+0x9]
   140006522:	jmp    0x1400066ef
   140006527:	mov    r15,QWORD PTR [rip+0xbaa2]        # 0x140011fd0
   14000652e:	test   r15,r15
   140006531:	jne    0x1400064d6
   140006533:	lea    eax,[r15+0x57]
   140006537:	jmp    0x140006744
   14000653c:	mov    rax,QWORD PTR [rbp+0x8]
   140006540:	mov    edx,0x1800
   140006545:	mov    r9,rsi
   140006548:	mov    QWORD PTR [rsp+0x20],rax
   14000654d:	mov    rcx,r14
   140006550:	lea    r8d,[rdx-0x1]
   140006554:	call   QWORD PTR [rip+0x5ed6]        # 0x14000c430
   14000655a:	cmp    eax,0xfffffffe
   14000655d:	jg     0x14000656d
   14000655f:	mov    esi,0x7a
   140006564:	jmp    0x1400066ef
   140006569:	lea    r14,[rbp+0x20]
   14000656d:	inc    rdi
   140006570:	cmp    WORD PTR [r14+rdi*2],r13w
   140006575:	jne    0x14000656d
   140006577:	cmp    r15,QWORD PTR [rip+0xba52]        # 0x140011fd0
   14000657e:	mov    DWORD PTR [rbp+0x0],edi
   140006581:	je     0x1400065a0
   140006583:	lea    r9,[rbp+0x0]
   140006587:	mov    QWORD PTR [rsp+0x20],r13
   14000658c:	mov    r8d,edi
   14000658f:	mov    rdx,r14
   140006592:	mov    rcx,r15
   140006595:	call   QWORD PTR [rip+0x5a65]        # 0x14000c000
   14000659b:	jmp    0x1400066da
   1400065a0:	cmp    DWORD PTR [rip+0xaa81],r13d        # 0x140011028
   1400065a7:	je     0x1400066c1
   1400065ad:	mov    QWORD PTR [rsp+0x38],r13
   1400065b2:	mov    r9d,edi
   1400065b5:	mov    QWORD PTR [rsp+0x30],r13
   1400065ba:	mov    r8,r14
   1400065bd:	mov    DWORD PTR [rsp+0x28],r13d
   1400065c2:	xor    edx,edx
   1400065c4:	xor    ecx,ecx
   1400065c6:	mov    QWORD PTR [rsp+0x20],r13
   1400065cb:	call   QWORD PTR [rip+0x5bd7]        # 0x14000c1a8
   1400065d1:	mov    r13d,eax
   1400065d4:	test   eax,eax
   1400065d6:	jne    0x1400065e8
   1400065d8:	call   QWORD PTR [rip+0x5a4a]        # 0x14000c028
   1400065de:	mov    esi,eax
   1400065e0:	xor    r13d,r13d
   1400065e3:	jmp    0x1400066eb
   1400065e8:	cmp    r13,QWORD PTR [rip+0xba31]        # 0x140012020
   1400065ef:	mov    rcx,r13
   1400065f2:	mov    esi,0x8
   1400065f7:	ja     0x140006651
   1400065f9:	mov    rdx,QWORD PTR [rip+0xba18]        # 0x140012018
   140006600:	add    rdx,rsi
   140006603:	add    rdx,rcx
   140006606:	cmp    rdx,rcx
   140006609:	jb     0x140006651
   14000660b:	mov    rcx,rdx
   14000660e:	call   0x140009bb0
   140006613:	test   eax,eax
   140006615:	je     0x140006651
   140006617:	lea    eax,[r13+0x8]
   14000661b:	mov    ecx,eax
   14000661d:	add    rax,0xf
   140006621:	cmp    rax,rcx
   140006624:	ja     0x140006630
   140006626:	movabs rax,0xffffffffffffff0
   140006630:	and    rax,0xfffffffffffffff0
   140006634:	call   0x14000ab00
   140006639:	sub    rsp,rax
   14000663c:	lea    rbx,[rsp+0x40]
   140006641:	test   rbx,rbx
   140006644:	je     0x140006651
   140006646:	mov    DWORD PTR [rbx],0x6b637453
   14000664c:	add    rbx,rsi
   14000664f:	jne    0x14000668b
   140006651:	lea    eax,[r13+0x8]
   140006655:	cmp    eax,r13d
   140006658:	jb     0x140006681
   14000665a:	mov    rdi,QWORD PTR [rip+0xb9af]        # 0x140012010
   140006661:	mov    rcx,rdi
   140006664:	mov    ebx,eax
   140006666:	call   QWORD PTR [rip+0x5ea4]        # 0x14000c510
   14000666c:	mov    ecx,ebx
   14000666e:	call   rdi
   140006670:	mov    rbx,rax
   140006673:	test   rax,rax
   140006676:	je     0x140006686
   140006678:	mov    DWORD PTR [rax],0x70616548
   14000667e:	add    rbx,rsi
   140006681:	test   rbx,rbx
   140006684:	jne    0x14000668b
   140006686:	xor    r13d,r13d
   140006689:	jmp    0x1400066ef
   14000668b:	and    QWORD PTR [rsp+0x38],0x0
   140006691:	mov    r8,r14
   140006694:	and    QWORD PTR [rsp+0x30],0x0
   14000669a:	xor    edx,edx
   14000669c:	mov    r9d,DWORD PTR [rbp+0x0]
   1400066a0:	xor    ecx,ecx
   1400066a2:	mov    DWORD PTR [rsp+0x28],r13d
   1400066a7:	mov    QWORD PTR [rsp+0x20],rbx
   1400066ac:	call   QWORD PTR [rip+0x5af6]        # 0x14000c1a8
   1400066b2:	xor    r13d,r13d
   1400066b5:	test   eax,eax
   1400066b7:	je     0x1400066de
   1400066b9:	mov    r8d,eax
   1400066bc:	mov    rdx,rbx
   1400066bf:	jmp    0x1400066c8
   1400066c1:	lea    r8d,[rdi+rdi*1]
   1400066c5:	mov    rdx,r14
   1400066c8:	lea    r9,[rbp+0x0]
   1400066cc:	mov    QWORD PTR [rsp+0x20],r13
   1400066d1:	mov    rcx,r15
   1400066d4:	call   QWORD PTR [rip+0x5976]        # 0x14000c050
   1400066da:	test   eax,eax
   1400066dc:	jne    0x1400066e8
   1400066de:	call   QWORD PTR [rip+0x5944]        # 0x14000c028
   1400066e4:	mov    esi,eax
   1400066e6:	jmp    0x1400066eb
   1400066e8:	mov    esi,r13d
   1400066eb:	test   esi,esi
   1400066ed:	je     0x140006706
   1400066ef:	mov    r8,QWORD PTR [rbp+0x8]
   1400066f3:	mov    rcx,r12
   1400066f6:	mov    rdx,QWORD PTR [rbp+0x10]
   1400066fa:	call   QWORD PTR [rip+0x5db0]        # 0x14000c4b0
   140006700:	test   eax,eax
   140006702:	cmovg  esi,r13d
   140006706:	test   rbx,rbx
   140006709:	je     0x14000672c
   14000670b:	lea    rdi,[rbx-0x8]
   14000670f:	cmp    DWORD PTR [rdi],0x70616548
   140006715:	jne    0x14000672c
   140006717:	mov    rbx,QWORD PTR [rip+0xb8ea]        # 0x140012008
   14000671e:	mov    rcx,rbx
   140006721:	call   QWORD PTR [rip+0x5de9]        # 0x14000c510
   140006727:	mov    rcx,rdi
   14000672a:	call   rbx
   14000672c:	test   r14,r14
   14000672f:	je     0x140006742
   140006731:	lea    rax,[rbp+0x20]
   140006735:	cmp    r14,rax
   140006738:	je     0x140006742
   14000673a:	mov    rcx,r14
   14000673d:	call   0x140009d48
   140006742:	mov    eax,esi
   140006744:	mov    rcx,QWORD PTR [rbp+0x1020]
   14000674b:	xor    rcx,rbp
   14000674e:	call   0x14000a0a0
   140006753:	mov    rbx,QWORD PTR [rbp+0x1088]
   14000675a:	lea    rsp,[rbp+0x1030]
   140006761:	pop    r15
   140006763:	pop    r14
   140006765:	pop    r13
   140006767:	pop    r12
   140006769:	pop    rdi
   14000676a:	pop    rsi
   14000676b:	pop    rbp
   14000676c:	ret    
   14000676d:	int3   
   14000676e:	int3   
   14000676f:	int3   
   140006770:	int3   
   140006771:	int3   
   140006772:	int3   
   140006773:	int3   
   140006774:	mov    rax,rsp
   140006777:	mov    QWORD PTR [rax+0x8],rcx
   14000677b:	mov    QWORD PTR [rax+0x10],rdx
   14000677f:	mov    QWORD PTR [rax+0x18],r8
   140006783:	mov    QWORD PTR [rax+0x20],r9
   140006787:	push   rbx
   140006788:	sub    rsp,0x20
   14000678c:	cmp    DWORD PTR [rip+0xb835],0x2        # 0x140011fc8
   140006793:	lea    rbx,[rax+0x10]
   140006797:	jne    0x14000679d
   140006799:	xor    eax,eax
   14000679b:	jmp    0x1400067ac
   14000679d:	mov    ecx,0x1
   1400067a2:	call   0x14000aa68
   1400067a7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400067ac:	mov    rdx,rcx
   1400067af:	mov    r8,rbx
   1400067b2:	mov    rcx,rax
   1400067b5:	call   0x140006454
   1400067ba:	add    rsp,0x20
   1400067be:	pop    rbx
   1400067bf:	ret    
   1400067c0:	int3   
   1400067c1:	int3   
   1400067c2:	int3   
   1400067c3:	int3   
   1400067c4:	int3   
   1400067c5:	int3   
   1400067c6:	int3   
   1400067c7:	int3   
   1400067c8:	mov    rax,rsp
   1400067cb:	mov    DWORD PTR [rax+0x8],ecx
   1400067ce:	mov    QWORD PTR [rax+0x10],rdx
   1400067d2:	mov    QWORD PTR [rax+0x18],r8
   1400067d6:	mov    QWORD PTR [rax+0x20],r9
   1400067da:	push   rbx
   1400067db:	push   rsi
   1400067dc:	sub    rsp,0x58
   1400067e0:	and    QWORD PTR [rax-0x38],0x0
   1400067e5:	lea    rsi,[rax+0x10]
   1400067e9:	and    DWORD PTR [rax-0x40],0x0
   1400067ed:	mov    r8d,ecx
   1400067f0:	and    QWORD PTR [rax-0x28],0x0
   1400067f5:	lea    rax,[rax-0x28]
   1400067f9:	mov    r9d,0x400
   1400067ff:	mov    QWORD PTR [rsp+0x20],rax
   140006804:	xor    edx,edx
   140006806:	mov    ecx,0x900
   14000680b:	or     ebx,0xffffffff
   14000680e:	call   QWORD PTR [rip+0x58bc]        # 0x14000c0d0
   140006814:	test   eax,eax
   140006816:	je     0x140006847
   140006818:	cmp    QWORD PTR [rsp+0x40],0x0
   14000681e:	je     0x140006847
   140006820:	lea    ecx,[rbx+0x2]
   140006823:	call   0x14000aa68
   140006828:	mov    rdx,QWORD PTR [rsp+0x40]
   14000682d:	mov    rcx,rax
   140006830:	mov    r8,rsi
   140006833:	call   0x140006454
   140006838:	mov    rcx,QWORD PTR [rsp+0x40]
   14000683d:	mov    ebx,eax
   14000683f:	call   QWORD PTR [rip+0x5853]        # 0x14000c098
   140006845:	jmp    0x14000685c
   140006847:	call   QWORD PTR [rip+0x57db]        # 0x14000c028
   14000684d:	mov    edx,eax
   14000684f:	lea    rcx,[rip+0x6312]        # 0x14000cb68
   140006856:	call   QWORD PTR [rip+0x5c24]        # 0x14000c480
   14000685c:	mov    eax,ebx
   14000685e:	add    rsp,0x58
   140006862:	pop    rsi
   140006863:	pop    rbx
   140006864:	ret    
   140006865:	int3   
   140006866:	int3   
   140006867:	int3   
   140006868:	int3   
   140006869:	int3   
   14000686a:	int3   
   14000686b:	int3   
   14000686c:	mov    rax,rsp
   14000686f:	mov    QWORD PTR [rax+0x10],rdx
   140006873:	mov    QWORD PTR [rax+0x18],r8
   140006877:	mov    QWORD PTR [rax+0x20],r9
   14000687b:	sub    rsp,0x28
   14000687f:	lea    r8,[rax+0x18]
   140006883:	call   0x140006454
   140006888:	add    rsp,0x28
   14000688c:	ret    
   14000688d:	int3   
   14000688e:	int3   
   14000688f:	int3   
   140006890:	int3   
   140006891:	int3   
   140006892:	int3   
   140006893:	int3   
   140006894:	mov    QWORD PTR [rsp+0x8],rbx
   140006899:	mov    QWORD PTR [rsp+0x10],rsi
   14000689e:	push   rdi
   14000689f:	sub    rsp,0x20
   1400068a3:	mov    rdi,rcx
   1400068a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400068aa:	test   rcx,rcx
   1400068ad:	je     0x1400068b9
   1400068af:	call   0x140009d48
   1400068b4:	and    QWORD PTR [rdi+0x10],0x0
   1400068b9:	mov    rax,QWORD PTR [rdi+0x20]
   1400068bd:	mov    rbx,QWORD PTR [rax]
   1400068c0:	cmp    rbx,rax
   1400068c3:	je     0x1400068f6
   1400068c5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400068c9:	mov    rcx,QWORD PTR [rcx]
   1400068cc:	call   QWORD PTR [rip+0x57c6]        # 0x14000c098
   1400068d2:	mov    rax,QWORD PTR [rbx+0x10]
   1400068d6:	mov    rcx,QWORD PTR [rax+0x10]
   1400068da:	test   rcx,rcx
   1400068dd:	je     0x1400068e4
   1400068df:	call   0x140009d48
   1400068e4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400068e8:	call   0x140009d48
   1400068ed:	mov    rbx,QWORD PTR [rbx]
   1400068f0:	cmp    rbx,QWORD PTR [rdi+0x20]
   1400068f4:	jne    0x1400068c5
   1400068f6:	lea    rbx,[rdi+0x30]
   1400068fa:	mov    esi,0x2
   1400068ff:	mov    rcx,QWORD PTR [rbx]
   140006902:	test   rcx,rcx
   140006905:	je     0x140006911
   140006907:	call   QWORD PTR [rip+0x578b]        # 0x14000c098
   14000690d:	and    QWORD PTR [rbx],0x0
   140006911:	add    rbx,0x8
   140006915:	sub    rsi,0x1
   140006919:	jne    0x1400068ff
   14000691b:	mov    rax,QWORD PTR [rdi+0x20]
   14000691f:	mov    rcx,QWORD PTR [rax]
   140006922:	mov    QWORD PTR [rax],rax
   140006925:	mov    rax,QWORD PTR [rdi+0x20]
   140006929:	mov    QWORD PTR [rax+0x8],rax
   14000692d:	and    QWORD PTR [rdi+0x28],rsi
   140006931:	cmp    rcx,QWORD PTR [rdi+0x20]
   140006935:	je     0x140006948
   140006937:	mov    rbx,QWORD PTR [rcx]
   14000693a:	call   0x140009d48
   14000693f:	mov    rcx,rbx
   140006942:	cmp    rbx,QWORD PTR [rdi+0x20]
   140006946:	jne    0x140006937
   140006948:	mov    rcx,QWORD PTR [rdi+0x20]
   14000694c:	call   0x140009d48
   140006951:	and    QWORD PTR [rdi+0x20],0x0
   140006956:	mov    rbx,QWORD PTR [rsp+0x30]
   14000695b:	mov    rsi,QWORD PTR [rsp+0x38]
   140006960:	add    rsp,0x20
   140006964:	pop    rdi
   140006965:	ret    
   140006966:	int3   
   140006967:	int3   
   140006968:	int3   
   140006969:	int3   
   14000696a:	int3   
   14000696b:	int3   
   14000696c:	mov    rax,rsp
   14000696f:	mov    QWORD PTR [rax+0x8],rbx
   140006973:	mov    QWORD PTR [rax+0x10],rbp
   140006977:	mov    QWORD PTR [rax+0x18],rsi
   14000697b:	mov    QWORD PTR [rax+0x20],rdi
   14000697f:	push   r14
   140006981:	sub    rsp,0x30
   140006985:	mov    r14d,edx
   140006988:	mov    rdi,r8
   14000698b:	mov    rdx,rcx
   14000698e:	lea    r8,[rax-0x18]
   140006992:	mov    rbp,rcx
   140006995:	xor    ebx,ebx
   140006997:	mov    rcx,r9
   14000699a:	mov    QWORD PTR [rax-0x18],rbx
   14000699e:	mov    rsi,r9
   1400069a1:	call   0x140001ad4
   1400069a6:	test   eax,eax
   1400069a8:	je     0x1400069b5
   1400069aa:	cmp    eax,0x57
   1400069ad:	cmove  eax,ebx
   1400069b0:	jmp    0x140006ab1
   1400069b5:	cmp    DWORD PTR [rdi+0x8],ebx
   1400069b8:	jne    0x140006a28
   1400069ba:	cmp    BYTE PTR [rsi+0x78],bl
   1400069bd:	jne    0x1400069da
   1400069bf:	mov    eax,DWORD PTR [rsi+0x7c]
   1400069c2:	test   eax,eax
   1400069c4:	jne    0x140006ab1
   1400069ca:	mov    rcx,rsi
   1400069cd:	call   0x140001554
   1400069d2:	test   eax,eax
   1400069d4:	jne    0x140006ab1
   1400069da:	mov    eax,ebx
   1400069dc:	test   eax,eax
   1400069de:	jne    0x140006ab1
   1400069e4:	mov    eax,DWORD PTR [rsi+0x40]
   1400069e7:	mov    DWORD PTR [rdi+0x8],eax
   1400069ea:	mov    eax,ebx
   1400069ec:	test   eax,eax
   1400069ee:	jne    0x140006ab1
   1400069f4:	mov    ecx,DWORD PTR [rdi+0x8]
   1400069f7:	lea    eax,[rbx+0x24]
   1400069fa:	mul    rcx
   1400069fd:	mov    rcx,0xffffffffffffffff
   140006a04:	lea    rdx,[rip+0xb001]        # 0x140011a0c
   140006a0b:	cmovo  rax,rcx
   140006a0f:	mov    rcx,rax
   140006a12:	call   0x14000a244
   140006a17:	mov    QWORD PTR [rdi+0x10],rax
   140006a1b:	test   rax,rax
   140006a1e:	jne    0x140006a28
   140006a20:	lea    eax,[rbx+0x8]
   140006a23:	jmp    0x140006ab1
   140006a28:	mov    eax,DWORD PTR [rdi+0xc]
   140006a2b:	cmp    eax,DWORD PTR [rdi+0x8]
   140006a2e:	jae    0x140006a56
   140006a30:	movups xmm0,XMMWORD PTR [rbp+0x0]
   140006a34:	lea    rcx,[rax+rax*8]
   140006a38:	mov    rax,QWORD PTR [rdi+0x10]
   140006a3c:	movdqu XMMWORD PTR [rax+rcx*4],xmm0
   140006a41:	mov    eax,DWORD PTR [rdi+0xc]
   140006a44:	lea    rcx,[rax+rax*8]
   140006a48:	mov    rax,QWORD PTR [rdi+0x10]
   140006a4c:	mov    DWORD PTR [rax+rcx*4+0x10],r14d
   140006a51:	inc    DWORD PTR [rdi+0xc]
   140006a54:	jmp    0x140006aa8
   140006a56:	jne    0x140006aac
   140006a58:	test   eax,eax
   140006a5a:	je     0x140006aa3
   140006a5c:	mov    eax,ebx
   140006a5e:	mov    r8d,0x10
   140006a64:	mov    rdx,rbp
   140006a67:	lea    rcx,[rax+rax*8]
   140006a6b:	mov    rax,QWORD PTR [rdi+0x10]
   140006a6f:	lea    rcx,[rax+rcx*4]
   140006a73:	call   QWORD PTR [rip+0x570f]        # 0x14000c188
   140006a79:	cmp    eax,0x10
   140006a7c:	je     0x140006a87
   140006a7e:	inc    ebx
   140006a80:	cmp    ebx,DWORD PTR [rdi+0xc]
   140006a83:	jb     0x140006a5c
   140006a85:	jmp    0x140006aa3
   140006a87:	movups xmm0,XMMWORD PTR [rbp+0x0]
   140006a8b:	mov    eax,ebx
   140006a8d:	lea    rcx,[rax+rax*8]
   140006a91:	mov    rax,QWORD PTR [rdi+0x10]
   140006a95:	movdqu XMMWORD PTR [rax+rcx*4],xmm0
   140006a9a:	mov    rax,QWORD PTR [rdi+0x10]
   140006a9e:	mov    DWORD PTR [rax+rcx*4+0x10],r14d
   140006aa3:	cmp    ebx,DWORD PTR [rdi+0xc]
   140006aa6:	je     0x140006aac
   140006aa8:	xor    eax,eax
   140006aaa:	jmp    0x140006ab1
   140006aac:	mov    eax,0x54f
   140006ab1:	mov    rbx,QWORD PTR [rsp+0x40]
   140006ab6:	mov    rbp,QWORD PTR [rsp+0x48]
   140006abb:	mov    rsi,QWORD PTR [rsp+0x50]
   140006ac0:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ac5:	add    rsp,0x30
   140006ac9:	pop    r14
   140006acb:	ret    
   140006acc:	int3   
   140006acd:	int3   
   140006ace:	int3   
   140006acf:	int3   
   140006ad0:	int3   
   140006ad1:	int3   
   140006ad2:	int3   
   140006ad3:	int3   
   140006ad4:	mov    rax,rsp
   140006ad7:	push   rsi
   140006ad8:	push   rdi
   140006ad9:	push   r14
   140006adb:	sub    rsp,0xc0
   140006ae2:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140006aeb:	mov    QWORD PTR [rax+0x20],rbx
   140006aef:	mov    rax,QWORD PTR [rip+0xa50a]        # 0x140011000
   140006af6:	xor    rax,rsp
   140006af9:	mov    QWORD PTR [rsp+0xb0],rax
   140006b01:	mov    r14d,r9d
   140006b04:	mov    rbx,r8
   140006b07:	mov    rax,rdx
   140006b0a:	mov    rsi,rcx
   140006b0d:	and    QWORD PTR [rsp+0x20],0x0
   140006b13:	lea    rdx,[rsp+0x20]
   140006b18:	mov    rcx,rax
   140006b1b:	call   QWORD PTR [rip+0x57ef]        # 0x14000c310
   140006b21:	test   eax,eax
   140006b23:	jne    0x140006b30
   140006b25:	call   QWORD PTR [rip+0x54fd]        # 0x14000c028
   140006b2b:	jmp    0x140006c88
   140006b30:	lea    rdx,[rsp+0x38]
   140006b35:	mov    rcx,rbx
   140006b38:	call   0x140007360
   140006b3d:	mov    ebx,eax
   140006b3f:	test   eax,eax
   140006b41:	jne    0x140006b99
   140006b43:	mov    rax,QWORD PTR [rsi+0x20]
   140006b47:	mov    rbx,QWORD PTR [rax]
   140006b4a:	cmp    rbx,rax
   140006b4d:	je     0x140006b6e
   140006b4f:	mov    rdx,QWORD PTR [rbx+0x10]
   140006b53:	mov    rdx,QWORD PTR [rdx]
   140006b56:	mov    rcx,QWORD PTR [rsp+0x20]
   140006b5b:	call   QWORD PTR [rip+0x5707]        # 0x14000c268
   140006b61:	test   eax,eax
   140006b63:	jne    0x140006b6e
   140006b65:	mov    rbx,QWORD PTR [rbx]
   140006b68:	cmp    rbx,QWORD PTR [rsi+0x20]
   140006b6c:	jne    0x140006b4f
   140006b6e:	cmp    rbx,QWORD PTR [rsi+0x20]
   140006b72:	jne    0x140006c3b
   140006b78:	lea    rdx,[rip+0xae8d]        # 0x140011a0c
   140006b7f:	mov    ecx,0x18
   140006b84:	call   0x14000a21c
   140006b89:	mov    rdi,rax
   140006b8c:	mov    QWORD PTR [rsp+0x28],rax
   140006b91:	test   rax,rax
   140006b94:	jne    0x140006bab
   140006b96:	lea    ebx,[rax+0x8]
   140006b99:	mov    rcx,QWORD PTR [rsp+0x20]
   140006b9e:	call   QWORD PTR [rip+0x54f4]        # 0x14000c098
   140006ba4:	mov    eax,ebx
   140006ba6:	jmp    0x140006c88
   140006bab:	xor    eax,eax
   140006bad:	mov    QWORD PTR [rdi],rax
   140006bb0:	mov    QWORD PTR [rdi+0x8],rax
   140006bb4:	mov    QWORD PTR [rdi+0x10],rax
   140006bb8:	mov    rax,QWORD PTR [rsp+0x20]
   140006bbd:	mov    QWORD PTR [rdi],rax
   140006bc0:	mov    rbx,QWORD PTR [rsi+0x20]
   140006bc4:	mov    rbx,QWORD PTR [rbx]
   140006bc7:	lea    r9,[rsp+0x28]
   140006bcc:	mov    r8,QWORD PTR [rbx+0x8]
   140006bd0:	mov    rdx,rbx
   140006bd3:	call   0x140006fd8
   140006bd8:	mov    rdx,rax
   140006bdb:	mov    rax,QWORD PTR [rsi+0x28]
   140006bdf:	movabs rcx,0x1fffffffffffffff
   140006be9:	sub    rcx,rax
   140006bec:	cmp    rcx,0x1
   140006bf0:	jae    0x140006c25
   140006bf2:	lea    rdx,[rip+0x5fa7]        # 0x14000cba0
   140006bf9:	lea    rcx,[rsp+0x48]
   140006bfe:	call   0x140002898
   140006c03:	nop
   140006c04:	lea    rdx,[rsp+0x48]
   140006c09:	lea    rcx,[rsp+0x70]
   140006c0e:	call   0x140001284
   140006c13:	lea    rdx,[rip+0x7f1e]        # 0x14000eb38
   140006c1a:	lea    rcx,[rsp+0x70]
   140006c1f:	call   0x14000a506
   140006c24:	nop
   140006c25:	inc    rax
   140006c28:	mov    QWORD PTR [rsi+0x28],rax
   140006c2c:	mov    QWORD PTR [rbx+0x8],rdx
   140006c30:	mov    rax,QWORD PTR [rdx+0x8]
   140006c34:	mov    QWORD PTR [rax],rdx
   140006c37:	jmp    0x140006c50
   140006c39:	jmp    0x140006c6a
   140006c3b:	mov    rdi,QWORD PTR [rbx+0x10]
   140006c3f:	mov    rcx,QWORD PTR [rsp+0x20]
   140006c44:	call   QWORD PTR [rip+0x544e]        # 0x14000c098
   140006c4a:	and    QWORD PTR [rsp+0x20],0x0
   140006c50:	test   r14d,0xfffffff0
   140006c57:	je     0x140006c60
   140006c59:	mov    eax,0xd
   140006c5e:	jmp    0x140006c88
   140006c60:	call   0x1400031e4
   140006c65:	test   rax,rax
   140006c68:	jne    0x140006c71
   140006c6a:	mov    eax,0x8
   140006c6f:	jmp    0x140006c88
   140006c71:	or     r14d,0x10
   140006c75:	mov    r9,rax
   140006c78:	mov    r8,rdi
   140006c7b:	mov    edx,r14d
   140006c7e:	lea    rcx,[rsp+0x38]
   140006c83:	call   0x14000696c
   140006c88:	mov    rcx,QWORD PTR [rsp+0xb0]
   140006c90:	xor    rcx,rsp
   140006c93:	call   0x14000a0a0
   140006c98:	mov    rbx,QWORD PTR [rsp+0xf8]
   140006ca0:	add    rsp,0xc0
   140006ca7:	pop    r14
   140006ca9:	pop    rdi
   140006caa:	pop    rsi
   140006cab:	ret    
   140006cac:	int3   
   140006cad:	int3   
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	int3   
   140006cb1:	int3   
   140006cb2:	int3   
   140006cb3:	int3   
   140006cb4:	rex push rbx
   140006cb6:	push   rbp
   140006cb7:	push   rsi
   140006cb8:	push   rdi
   140006cb9:	push   r12
   140006cbb:	push   r14
   140006cbd:	push   r15
   140006cbf:	sub    rsp,0x40
   140006cc3:	mov    rax,QWORD PTR [rip+0xa336]        # 0x140011000
   140006cca:	xor    rax,rsp
   140006ccd:	mov    QWORD PTR [rsp+0x30],rax
   140006cd2:	mov    rdi,QWORD PTR [rsp+0xb0]
   140006cda:	lea    r10,[rip+0x5ee7]        # 0x14000cbc8
   140006ce1:	xor    r12d,r12d
   140006ce4:	mov    rsi,r9
   140006ce7:	mov    eax,r12d
   140006cea:	mov    r15,r8
   140006ced:	mov    r14,rdx
   140006cf0:	mov    rbp,rcx
   140006cf3:	mov    r9,QWORD PTR [r10]
   140006cf6:	mov    rcx,r15
   140006cf9:	sub    r9,r15
   140006cfc:	movzx  edx,WORD PTR [rcx]
   140006cff:	movzx  r8d,WORD PTR [rcx+r9*1]
   140006d04:	sub    edx,r8d
   140006d07:	jne    0x140006d12
   140006d09:	add    rcx,0x2
   140006d0d:	test   r8d,r8d
   140006d10:	jne    0x140006cfc
   140006d12:	test   edx,edx
   140006d14:	je     0x140006d21
   140006d16:	inc    eax
   140006d18:	add    r10,0x10
   140006d1c:	cmp    eax,0x2
   140006d1f:	jb     0x140006cf3
   140006d21:	cmp    eax,0x2
   140006d24:	je     0x140006d88
   140006d26:	lea    r8,[rbp+0x30]
   140006d2a:	lea    r8,[r8+rax*8]
   140006d2e:	cmp    QWORD PTR [r8],r12
   140006d31:	je     0x140006d3a
   140006d33:	mov    eax,0xd
   140006d38:	jmp    0x140006d60
   140006d3a:	xor    r9d,r9d
   140006d3d:	mov    rcx,rdi
   140006d40:	lea    edx,[r9+0x1]
   140006d44:	call   QWORD PTR [rip+0x55be]        # 0x14000c308
   140006d4a:	test   eax,eax
   140006d4c:	jne    0x140006d56
   140006d4e:	call   QWORD PTR [rip+0x52d4]        # 0x14000c028
   140006d54:	jmp    0x140006d59
   140006d56:	mov    eax,r12d
   140006d59:	cmp    eax,0x490
   140006d5e:	je     0x140006d88
   140006d60:	cmp    WORD PTR [rsi],r12w
   140006d64:	jne    0x140006dbd
   140006d66:	mov    rcx,QWORD PTR [rsp+0xa0]
   140006d6e:	cmp    WORD PTR [rcx],r12w
   140006d72:	jne    0x140006dbd
   140006d74:	mov    rcx,QWORD PTR [rsp+0xa8]
   140006d7c:	cmp    WORD PTR [rcx],r12w
   140006d80:	je     0x140006e6d
   140006d86:	jmp    0x140006dbd
   140006d88:	mov    rcx,rdi
   140006d8b:	call   QWORD PTR [rip+0x567f]        # 0x14000c410
   140006d91:	mov    ebx,eax
   140006d93:	test   eax,eax
   140006d95:	jne    0x140006da4
   140006d97:	cmp    WORD PTR [rdi],0x30
   140006d9b:	je     0x140006da4
   140006d9d:	cmp    WORD PTR [rdi+0x2],r12w
   140006da2:	jne    0x140006dbd
   140006da4:	cmp    WORD PTR [r14],r12w
   140006da8:	jne    0x140006e0d
   140006daa:	mov    edx,0x3a
   140006daf:	mov    rcx,r15
   140006db2:	call   QWORD PTR [rip+0x56c0]        # 0x14000c478
   140006db8:	test   rax,rax
   140006dbb:	jne    0x140006dc7
   140006dbd:	mov    eax,0xd
   140006dc2:	jmp    0x140006e6d
   140006dc7:	lea    rdi,[rax+0x2]
   140006dcb:	mov    WORD PTR [rax],r12w
   140006dcf:	mov    rcx,rdi
   140006dd2:	xor    edx,edx
   140006dd4:	call   0x1400077c0
   140006dd9:	test   eax,eax
   140006ddb:	jne    0x140006e6d
   140006de1:	cmp    ebx,0x2
   140006de4:	jb     0x140006e01
   140006de6:	jne    0x140006dbd
   140006de8:	lea    rdx,[rip+0x5ba1]        # 0x14000c990
   140006def:	mov    rcx,rdi
   140006df2:	call   QWORD PTR [rip+0x56c8]        # 0x14000c4c0
   140006df8:	test   eax,eax
   140006dfa:	jne    0x140006dbd
   140006dfc:	mov    eax,r12d
   140006dff:	jmp    0x140006e6d
   140006e01:	mov    edx,ebx
   140006e03:	mov    rcx,rdi
   140006e06:	call   0x14000392c
   140006e0b:	jmp    0x140006e6d
   140006e0d:	mov    rax,QWORD PTR [rsp+0xa8]
   140006e15:	cmp    WORD PTR [rax],r12w
   140006e19:	jne    0x140006e5c
   140006e1b:	lea    rdx,[rsp+0x20]
   140006e20:	mov    rcx,rsi
   140006e23:	call   0x140007360
   140006e28:	test   eax,eax
   140006e2a:	jne    0x140006e6d
   140006e2c:	test   ebx,0xfffffffc
   140006e32:	jne    0x140006dbd
   140006e34:	call   0x1400031e4
   140006e39:	test   rax,rax
   140006e3c:	jne    0x140006e45
   140006e3e:	mov    eax,0x8
   140006e43:	jmp    0x140006e6d
   140006e45:	or     ebx,0x4
   140006e48:	lea    rcx,[rsp+0x20]
   140006e4d:	mov    edx,ebx
   140006e4f:	mov    r9,rax
   140006e52:	mov    r8,rbp
   140006e55:	call   0x14000696c
   140006e5a:	jmp    0x140006e6d
   140006e5c:	mov    r9d,ebx
   140006e5f:	mov    r8,rsi
   140006e62:	mov    rdx,r14
   140006e65:	mov    rcx,rbp
   140006e68:	call   0x140006ad4
   140006e6d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006e72:	xor    rcx,rsp
   140006e75:	call   0x14000a0a0
   140006e7a:	add    rsp,0x40
   140006e7e:	pop    r15
   140006e80:	pop    r14
   140006e82:	pop    r12
   140006e84:	pop    rdi
   140006e85:	pop    rsi
   140006e86:	pop    rbp
   140006e87:	pop    rbx
   140006e88:	ret    
   140006e89:	int3   
   140006e8a:	int3   
   140006e8b:	int3   
   140006e8c:	int3   
   140006e8d:	int3   
   140006e8e:	int3   
   140006e8f:	int3   
   140006e90:	mov    QWORD PTR [rsp+0x20],rbx
   140006e95:	push   rbp
   140006e96:	push   rsi
   140006e97:	push   rdi
   140006e98:	push   r14
   140006e9a:	push   r15
   140006e9c:	sub    rsp,0x20
   140006ea0:	mov    edx,DWORD PTR [rcx+0xc]
   140006ea3:	xor    edi,edi
   140006ea5:	mov    rsi,rcx
   140006ea8:	mov    ebp,edi
   140006eaa:	test   edx,edx
   140006eac:	je     0x140006ec0
   140006eae:	mov    rcx,QWORD PTR [rcx+0x10]
   140006eb2:	call   QWORD PTR [rip+0x5350]        # 0x14000c208
   140006eb8:	test   al,al
   140006eba:	je     0x140006f7a
   140006ec0:	mov    ebx,edi
   140006ec2:	lea    r15,[rip+0x5cf7]        # 0x14000cbc0
   140006ec9:	lea    r14,[rsi+0x30]
   140006ecd:	mov    rdx,rdi
   140006ed0:	mov    QWORD PTR [rsp+0x60],rdx
   140006ed5:	cmp    QWORD PTR [r14],rdi
   140006ed8:	je     0x140006f0d
   140006eda:	mov    rcx,QWORD PTR [r14]
   140006edd:	lea    r9,[rsp+0x58]
   140006ee2:	lea    r8,[rsp+0x60]
   140006ee7:	lea    rdx,[rsp+0x50]
   140006eec:	call   QWORD PTR [rip+0x538e]        # 0x14000c280
   140006ef2:	test   eax,eax
   140006ef4:	je     0x140006f7a
   140006efa:	mov    eax,DWORD PTR [rsp+0x50]
   140006efe:	neg    eax
   140006f00:	sbb    rdx,rdx
   140006f03:	and    rdx,QWORD PTR [rsp+0x60]
   140006f08:	mov    QWORD PTR [rsp+0x60],rdx
   140006f0d:	mov    rcx,QWORD PTR [r15]
   140006f10:	call   QWORD PTR [rip+0x5332]        # 0x14000c248
   140006f16:	test   al,al
   140006f18:	je     0x140006f7a
   140006f1a:	inc    ebx
   140006f1c:	add    r14,0x8
   140006f20:	add    r15,0x10
   140006f24:	cmp    ebx,0x2
   140006f27:	jb     0x140006ecd
   140006f29:	mov    rax,QWORD PTR [rsi+0x20]
   140006f2d:	mov    r14d,0x534
   140006f33:	mov    rbx,QWORD PTR [rax]
   140006f36:	cmp    rbx,rax
   140006f39:	je     0x140006f6b
   140006f3b:	mov    rcx,QWORD PTR [rbx+0x10]
   140006f3f:	mov    r8d,DWORD PTR [rcx+0xc]
   140006f43:	mov    rdx,QWORD PTR [rcx+0x10]
   140006f47:	mov    rcx,QWORD PTR [rcx]
   140006f4a:	call   QWORD PTR [rip+0x52f0]        # 0x14000c240
   140006f50:	test   al,al
   140006f52:	jne    0x140006f62
   140006f54:	call   QWORD PTR [rip+0x50ce]        # 0x14000c028
   140006f5a:	cmp    eax,r14d
   140006f5d:	jne    0x140006f80
   140006f5f:	mov    ebp,r14d
   140006f62:	mov    rbx,QWORD PTR [rbx]
   140006f65:	cmp    rbx,QWORD PTR [rsi+0x20]
   140006f69:	jmp    0x140006f39
   140006f6b:	mov    eax,0x515
   140006f70:	cmp    ebp,r14d
   140006f73:	cmove  edi,eax
   140006f76:	mov    eax,edi
   140006f78:	jmp    0x140006f80
   140006f7a:	call   QWORD PTR [rip+0x50a8]        # 0x14000c028
   140006f80:	mov    rbx,QWORD PTR [rsp+0x68]
   140006f85:	add    rsp,0x20
   140006f89:	pop    r15
   140006f8b:	pop    r14
   140006f8d:	pop    rdi
   140006f8e:	pop    rsi
   140006f8f:	pop    rbp
   140006f90:	ret    
   140006f91:	int3   
   140006f92:	int3   
   140006f93:	int3   
   140006f94:	int3   
   140006f95:	int3   
   140006f96:	int3   
   140006f97:	int3   
   140006f98:	mov    QWORD PTR [rsp+0x8],rcx
   140006f9d:	sub    rsp,0x38
   140006fa1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006faa:	mov    ecx,0x18
   140006faf:	call   0x140009cc8
   140006fb4:	mov    QWORD PTR [rsp+0x40],rax
   140006fb9:	test   rax,rax
   140006fbc:	je     0x140006fc1
   140006fbe:	mov    QWORD PTR [rax],rax
   140006fc1:	lea    rcx,[rax+0x8]
   140006fc5:	test   rcx,rcx
   140006fc8:	je     0x140006fcd
   140006fca:	mov    QWORD PTR [rcx],rax
   140006fcd:	add    rsp,0x38
   140006fd1:	ret    
   140006fd2:	int3   
   140006fd3:	int3   
   140006fd4:	int3   
   140006fd5:	int3   
   140006fd6:	int3   
   140006fd7:	int3   
   140006fd8:	mov    rax,rsp
   140006fdb:	mov    QWORD PTR [rax+0x8],rcx
   140006fdf:	push   rdi
   140006fe0:	sub    rsp,0x30
   140006fe4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140006fec:	mov    QWORD PTR [rax+0x10],rbx
   140006ff0:	mov    QWORD PTR [rax+0x18],rsi
   140006ff4:	mov    rsi,r9
   140006ff7:	mov    rdi,r8
   140006ffa:	mov    rbx,rdx
   140006ffd:	mov    ecx,0x18
   140007002:	call   0x140009cc8
   140007007:	mov    rcx,rax
   14000700a:	mov    QWORD PTR [rsp+0x40],rax
   14000700f:	test   rax,rax
   140007012:	je     0x140007017
   140007014:	mov    QWORD PTR [rax],rbx
   140007017:	add    rax,0x8
   14000701b:	je     0x140007020
   14000701d:	mov    QWORD PTR [rax],rdi
   140007020:	lea    rdx,[rcx+0x10]
   140007024:	test   rdx,rdx
   140007027:	je     0x14000702f
   140007029:	mov    rax,QWORD PTR [rsi]
   14000702c:	mov    QWORD PTR [rdx],rax
   14000702f:	mov    rax,rcx
   140007032:	mov    rbx,QWORD PTR [rsp+0x48]
   140007037:	mov    rsi,QWORD PTR [rsp+0x50]
   14000703c:	add    rsp,0x30
   140007040:	pop    rdi
   140007041:	ret    
   140007042:	int3   
   140007043:	int3   
   140007044:	int3   
   140007045:	int3   
   140007046:	int3   
   140007047:	int3   
   140007048:	mov    QWORD PTR [rsp+0x18],r8
   14000704d:	mov    QWORD PTR [rsp+0x20],r9
   140007052:	push   rbx
   140007053:	push   rbp
   140007054:	push   rsi
   140007055:	push   rdi
   140007056:	sub    rsp,0x28
   14000705a:	xor    ebp,ebp
   14000705c:	lea    rax,[rdx-0x1]
   140007060:	cmp    rax,0x7ffffffe
   140007066:	mov    rsi,rcx
   140007069:	mov    edi,ebp
   14000706b:	mov    ecx,0x80070057
   140007070:	cmova  edi,ecx
   140007073:	test   edi,edi
   140007075:	js     0x1400070ac
   140007077:	lea    rbx,[rdx-0x1]
   14000707b:	mov    rcx,rsi
   14000707e:	mov    rdx,rbx
   140007081:	lea    r9,[rsp+0x68]
   140007086:	mov    edi,ebp
   140007088:	call   QWORD PTR [rip+0x537a]        # 0x14000c408
   14000708e:	test   eax,eax
   140007090:	js     0x1400070a1
   140007092:	cdqe   
   140007094:	cmp    rax,rbx
   140007097:	ja     0x1400070a1
   140007099:	jne    0x1400070b4
   14000709b:	mov    WORD PTR [rsi+rbx*2],bp
   14000709f:	jmp    0x1400070b4
   1400070a1:	mov    WORD PTR [rsi+rbx*2],bp
   1400070a5:	mov    edi,0x8007007a
   1400070aa:	jmp    0x1400070b4
   1400070ac:	test   rdx,rdx
   1400070af:	je     0x1400070b4
   1400070b1:	mov    WORD PTR [rsi],bp
   1400070b4:	mov    eax,edi
   1400070b6:	add    rsp,0x28
   1400070ba:	pop    rdi
   1400070bb:	pop    rsi
   1400070bc:	pop    rbp
   1400070bd:	pop    rbx
   1400070be:	ret    
   1400070bf:	int3   
   1400070c0:	int3   
   1400070c1:	int3   
   1400070c2:	int3   
   1400070c3:	int3   
   1400070c4:	int3   
   1400070c5:	int3   
   1400070c6:	int3   
   1400070c7:	int3   
   1400070c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400070cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400070d2:	push   rsi
   1400070d3:	push   rdi
   1400070d4:	push   r14
   1400070d6:	sub    rsp,0x20
   1400070da:	and    QWORD PTR [rsp+0x50],0x0
   1400070e0:	mov    r14,rdx
   1400070e3:	mov    rdi,rcx
   1400070e6:	call   0x1400031e4
   1400070eb:	mov    rsi,rax
   1400070ee:	test   rax,rax
   1400070f1:	jne    0x1400070f8
   1400070f3:	lea    eax,[rsi+0x8]
   1400070f6:	jmp    0x140007130
   1400070f8:	xor    ebx,ebx
   1400070fa:	cmp    DWORD PTR [rdi+0x8],ebx
   1400070fd:	jbe    0x14000712e
   1400070ff:	mov    edx,ebx
   140007101:	lea    r8,[rsp+0x50]
   140007106:	shl    rdx,0x4
   14000710a:	mov    rcx,rsi
   14000710d:	add    rdx,QWORD PTR [rdi]
   140007110:	call   0x140001a14
   140007115:	test   eax,eax
   140007117:	jne    0x140007130
   140007119:	mov    rax,QWORD PTR [rsp+0x50]
   14000711e:	test   rax,rax
   140007121:	je     0x140007143
   140007123:	mov    QWORD PTR [r14+rbx*8],rax
   140007127:	inc    ebx
   140007129:	cmp    ebx,DWORD PTR [rdi+0x8]
   14000712c:	jb     0x1400070ff
   14000712e:	xor    eax,eax
   140007130:	mov    rbx,QWORD PTR [rsp+0x40]
   140007135:	mov    rbp,QWORD PTR [rsp+0x48]
   14000713a:	add    rsp,0x20
   14000713e:	pop    r14
   140007140:	pop    rdi
   140007141:	pop    rsi
   140007142:	ret    
   140007143:	mov    eax,0x57
   140007148:	jmp    0x140007130
   14000714a:	int3   
   14000714b:	int3   
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	sub    rsp,0x28
   140007154:	and    QWORD PTR [rsp+0x38],0x0
   14000715a:	lea    rdx,[rsp+0x38]
   14000715f:	call   QWORD PTR [rip+0x519b]        # 0x14000c300
   140007165:	test   eax,eax
   140007167:	jne    0x140007171
   140007169:	call   QWORD PTR [rip+0x4eb9]        # 0x14000c028
   14000716f:	jmp    0x1400071a1
   140007171:	cmp    DWORD PTR [rip+0xae50],0x0        # 0x140011fc8
   140007178:	lea    rax,[rip+0x5835]        # 0x14000c9b4
   14000717f:	mov    rdx,QWORD PTR [rsp+0x38]
   140007184:	lea    rcx,[rip+0x5835]        # 0x14000c9c0
   14000718b:	cmovne rcx,rax
   14000718f:	call   0x140006774
   140007194:	mov    rcx,QWORD PTR [rsp+0x38]
   140007199:	call   QWORD PTR [rip+0x4ef9]        # 0x14000c098
   14000719f:	xor    eax,eax
   1400071a1:	add    rsp,0x28
   1400071a5:	ret    
   1400071a6:	int3   
   1400071a7:	int3   
   1400071a8:	int3   
   1400071a9:	int3   
   1400071aa:	int3   
   1400071ab:	int3   
   1400071ac:	mov    rax,rsp
   1400071af:	mov    QWORD PTR [rax+0x8],rbx
   1400071b3:	mov    QWORD PTR [rax+0x10],rbp
   1400071b7:	mov    QWORD PTR [rax+0x18],rsi
   1400071bb:	mov    QWORD PTR [rax+0x20],rdi
   1400071bf:	push   r12
   1400071c1:	push   r14
   1400071c3:	push   r15
   1400071c5:	sub    rsp,0x20
   1400071c9:	xor    r12d,r12d
   1400071cc:	mov    r14d,edx
   1400071cf:	lea    r10d,[rdx+0x2]
   1400071d3:	mov    ebp,r9d
   1400071d6:	mov    r15,rcx
   1400071d9:	add    r10d,r9d
   1400071dc:	mov    rsi,r8
   1400071df:	mov    ebx,r12d
   1400071e2:	lea    rcx,[r12-0x1]
   1400071e7:	lea    eax,[r12+0x2]
   1400071ec:	mul    r10
   1400071ef:	lea    rdx,[rip+0xa816]        # 0x140011a0c
   1400071f6:	cmovo  rax,rcx
   1400071fa:	mov    rcx,rax
   1400071fd:	call   0x14000a244
   140007202:	mov    rdi,rax
   140007205:	test   rax,rax
   140007208:	jne    0x14000720f
   14000720a:	lea    eax,[rdi+0x8]
   14000720d:	jmp    0x140007280
   14000720f:	test   rsi,rsi
   140007212:	je     0x140007238
   140007214:	lea    rbx,[rbp*2+0x0]
   14000721c:	mov    rdx,rsi
   14000721f:	mov    r8,rbx
   140007222:	mov    rcx,rax
   140007225:	call   0x14000aab2
   14000722a:	movzx  eax,WORD PTR [rip+0x54bf]        # 0x14000c6f0
   140007231:	mov    WORD PTR [rbx+rdi*1],ax
   140007235:	lea    ebx,[rbp+0x1]
   140007238:	mov    eax,ebx
   14000723a:	mov    r8,r14
   14000723d:	add    r8,r8
   140007240:	mov    rdx,r15
   140007243:	lea    rcx,[rdi+rax*2]
   140007247:	call   0x14000aab2
   14000724c:	cmp    DWORD PTR [rip+0xad75],r12d        # 0x140011fc8
   140007253:	lea    eax,[rbx+r14*1]
   140007257:	lea    rcx,[rip+0x5762]        # 0x14000c9c0
   14000725e:	mov    rdx,rdi
   140007261:	mov    WORD PTR [rdi+rax*2],r12w
   140007266:	lea    rax,[rip+0x5747]        # 0x14000c9b4
   14000726d:	cmovne rcx,rax
   140007271:	call   0x140006774
   140007276:	mov    rcx,rdi
   140007279:	call   0x140009d48
   14000727e:	xor    eax,eax
   140007280:	mov    rbx,QWORD PTR [rsp+0x40]
   140007285:	mov    rbp,QWORD PTR [rsp+0x48]
   14000728a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000728f:	mov    rdi,QWORD PTR [rsp+0x58]
   140007294:	add    rsp,0x20
   140007298:	pop    r15
   14000729a:	pop    r14
   14000729c:	pop    r12
   14000729e:	ret    
   14000729f:	int3   
   1400072a0:	int3   
   1400072a1:	int3   
   1400072a2:	int3   
   1400072a3:	int3   
   1400072a4:	int3   
   1400072a5:	int3   
   1400072a6:	int3   
   1400072a7:	int3   
   1400072a8:	mov    rax,rsp
   1400072ab:	mov    QWORD PTR [rax+0x8],rbx
   1400072af:	mov    QWORD PTR [rax+0x10],rbp
   1400072b3:	mov    QWORD PTR [rax+0x18],rsi
   1400072b7:	mov    QWORD PTR [rax+0x20],rdi
   1400072bb:	push   r12
   1400072bd:	push   r14
   1400072bf:	push   r15
   1400072c1:	sub    rsp,0x70
   1400072c5:	movzx  r9d,BYTE PTR [rcx+0xe]
   1400072ca:	mov    r12,rdx
   1400072cd:	movzx  eax,BYTE PTR [rcx+0xf]
   1400072d1:	movzx  r10d,BYTE PTR [rcx+0xd]
   1400072d6:	movzx  r11d,BYTE PTR [rcx+0xc]
   1400072db:	movzx  ebx,BYTE PTR [rcx+0xb]
   1400072df:	movzx  edi,BYTE PTR [rcx+0xa]
   1400072e3:	movzx  esi,BYTE PTR [rcx+0x9]
   1400072e7:	movzx  ebp,BYTE PTR [rcx+0x8]
   1400072eb:	movzx  r14d,WORD PTR [rcx+0x6]
   1400072f0:	movzx  r15d,WORD PTR [rcx+0x4]
   1400072f5:	mov    DWORD PTR [rsp+0x68],eax
   1400072f9:	mov    DWORD PTR [rsp+0x60],r9d
   1400072fe:	mov    r9d,DWORD PTR [rcx]
   140007301:	mov    rcx,r12
   140007304:	mov    DWORD PTR [rsp+0x58],r10d
   140007309:	mov    DWORD PTR [rsp+0x50],r11d
   14000730e:	mov    DWORD PTR [rsp+0x48],ebx
   140007312:	mov    DWORD PTR [rsp+0x40],edi
   140007316:	mov    DWORD PTR [rsp+0x38],esi
   14000731a:	mov    DWORD PTR [rsp+0x30],ebp
   14000731e:	mov    edx,r8d
   140007321:	lea    r8,[rip+0x58d8]        # 0x14000cc00
   140007328:	mov    DWORD PTR [rsp+0x28],r14d
   14000732d:	mov    DWORD PTR [rsp+0x20],r15d
   140007332:	call   0x140007048
   140007337:	lea    r11,[rsp+0x70]
   14000733c:	xor    eax,eax
   14000733e:	mov    rbx,QWORD PTR [r11+0x20]
   140007342:	mov    rbp,QWORD PTR [r11+0x28]
   140007346:	mov    rsi,QWORD PTR [r11+0x30]
   14000734a:	mov    rdi,QWORD PTR [r11+0x38]
   14000734e:	mov    rsp,r11
   140007351:	pop    r15
   140007353:	pop    r14
   140007355:	pop    r12
   140007357:	ret    
   140007358:	int3   
   140007359:	int3   
   14000735a:	int3   
   14000735b:	int3   
   14000735c:	int3   
   14000735d:	int3   
   14000735e:	int3   
   14000735f:	int3   
   140007360:	rex push rbx
   140007362:	sub    rsp,0x30
   140007366:	xor    ebx,ebx
   140007368:	or     r8,0xffffffffffffffff
   14000736c:	inc    r8
   14000736f:	cmp    WORD PTR [rcx+r8*2],bx
   140007374:	jne    0x14000736c
   140007376:	lea    eax,[r8-0x1]
   14000737a:	cmp    WORD PTR [rcx+rax*2],0x7d
   14000737f:	je     0x140007388
   140007381:	mov    eax,0x57
   140007386:	jmp    0x1400073b8
   140007388:	add    r8w,r8w
   14000738c:	mov    QWORD PTR [rsp+0x28],rcx
   140007391:	lea    rcx,[rsp+0x20]
   140007396:	mov    WORD PTR [rsp+0x20],r8w
   14000739c:	mov    WORD PTR [rsp+0x22],r8w
   1400073a2:	call   QWORD PTR [rip+0x5148]        # 0x14000c4f0
   1400073a8:	test   eax,eax
   1400073aa:	je     0x1400073b6
   1400073ac:	mov    ecx,eax
   1400073ae:	call   QWORD PTR [rip+0x5144]        # 0x14000c4f8
   1400073b4:	mov    ebx,eax
   1400073b6:	mov    eax,ebx
   1400073b8:	add    rsp,0x30
   1400073bc:	pop    rbx
   1400073bd:	ret    
   1400073be:	int3   
   1400073bf:	int3   
   1400073c0:	int3   
   1400073c1:	int3   
   1400073c2:	int3   
   1400073c3:	int3   
   1400073c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400073c9:	mov    QWORD PTR [rsp+0x18],rbp
   1400073ce:	push   rsi
   1400073cf:	push   rdi
   1400073d0:	push   r14
   1400073d2:	sub    rsp,0x20
   1400073d6:	mov    r14,rcx
   1400073d9:	call   0x1400031e4
   1400073de:	xor    ebx,ebx
   1400073e0:	mov    rdi,rax
   1400073e3:	test   rax,rax
   1400073e6:	jne    0x1400073ef
   1400073e8:	mov    eax,0x8
   1400073ed:	jmp    0x14000746b
   1400073ef:	cmp    BYTE PTR [rax+0x78],bl
   1400073f2:	jne    0x140007407
   1400073f4:	mov    eax,DWORD PTR [rax+0x7c]
   1400073f7:	test   eax,eax
   1400073f9:	jne    0x14000740d
   1400073fb:	mov    rcx,rdi
   1400073fe:	call   0x140001554
   140007403:	test   eax,eax
   140007405:	jne    0x14000740d
   140007407:	mov    eax,ebx
   140007409:	test   eax,eax
   14000740b:	je     0x140007418
   14000740d:	mov    edi,DWORD PTR [rsp+0x48]
   140007411:	mov    rbp,QWORD PTR [rsp+0x48]
   140007416:	jmp    0x140007424
   140007418:	mov    rbp,QWORD PTR [rdi+0x88]
   14000741f:	mov    eax,ebx
   140007421:	mov    edi,DWORD PTR [rdi+0x28]
   140007424:	test   eax,eax
   140007426:	jne    0x14000746b
   140007428:	mov    esi,edi
   14000742a:	xor    ecx,ecx
   14000742c:	lea    rdx,[rsi+0x1]
   140007430:	shl    rdx,0x4
   140007434:	call   QWORD PTR [rip+0x4c56]        # 0x14000c090
   14000743a:	mov    rcx,rax
   14000743d:	test   rax,rax
   140007440:	je     0x1400073e8
   140007442:	mov    DWORD PTR [rax+0x8],edi
   140007445:	add    rax,0x10
   140007449:	mov    QWORD PTR [rcx],rax
   14000744c:	test   edi,edi
   14000744e:	je     0x140007466
   140007450:	mov    rax,QWORD PTR [rcx]
   140007453:	movups xmm0,XMMWORD PTR [rbx+rbp*1]
   140007457:	movdqu XMMWORD PTR [rax+rbx*1],xmm0
   14000745c:	lea    rbx,[rbx+0x10]
   140007460:	sub    rsi,0x1
   140007464:	jne    0x140007450
   140007466:	mov    QWORD PTR [r14],rcx
   140007469:	xor    eax,eax
   14000746b:	mov    rbx,QWORD PTR [rsp+0x40]
   140007470:	mov    rbp,QWORD PTR [rsp+0x50]
   140007475:	add    rsp,0x20
   140007479:	pop    r14
   14000747b:	pop    rdi
   14000747c:	pop    rsi
   14000747d:	ret    
   14000747e:	int3   
   14000747f:	int3   
   140007480:	int3   
   140007481:	int3   
   140007482:	int3   
   140007483:	int3   
   140007484:	mov    QWORD PTR [rsp+0x18],rbx
   140007489:	push   rbp
   14000748a:	push   rsi
   14000748b:	push   rdi
   14000748c:	push   r12
   14000748e:	push   r13
   140007490:	push   r14
   140007492:	push   r15
   140007494:	lea    rbp,[rsp-0x3a0]
   14000749c:	sub    rsp,0x4a0
   1400074a3:	mov    rax,QWORD PTR [rip+0x9b56]        # 0x140011000
   1400074aa:	xor    rax,rsp
   1400074ad:	mov    QWORD PTR [rbp+0x390],rax
   1400074b4:	xor    r15d,r15d
   1400074b7:	mov    BYTE PTR [rsp+0x20],r8b
   1400074bc:	mov    QWORD PTR [rsp+0x30],r15
   1400074c1:	mov    r12,rdx
   1400074c4:	mov    ebx,r15d
   1400074c7:	mov    r14d,r15d
   1400074ca:	mov    rdi,rcx
   1400074cd:	mov    r13d,r15d
   1400074d0:	test   r8b,r8b
   1400074d3:	je     0x140007500
   1400074d5:	test   rcx,rcx
   1400074d8:	je     0x140007500
   1400074da:	movzx  eax,WORD PTR [rcx]
   1400074dd:	cmp    ax,WORD PTR [rip+0x5784]        # 0x14000cc68
   1400074e4:	jne    0x140007500
   1400074e6:	movzx  eax,WORD PTR [rcx+0x2]
   1400074ea:	cmp    ax,WORD PTR [rip+0x5779]        # 0x14000cc6a
   1400074f1:	jne    0x140007500
   1400074f3:	mov    rcx,rdx
   1400074f6:	call   0x1400073c4
   1400074fb:	jmp    0x140007789
   140007500:	mov    QWORD PTR [rdx],r15
   140007503:	test   rcx,rcx
   140007506:	je     0x140007782
   14000750c:	cmp    WORD PTR [rcx],r15w
   140007510:	je     0x14000752e
   140007512:	mov    edx,0x2c
   140007517:	inc    r14d
   14000751a:	call   QWORD PTR [rip+0x4f58]        # 0x14000c478
   140007520:	mov    rcx,rax
   140007523:	test   rax,rax
   140007526:	je     0x14000752e
   140007528:	add    rcx,0x2
   14000752c:	jne    0x14000750c
   14000752e:	test   r14d,r14d
   140007531:	je     0x140007782
   140007537:	call   0x1400031e4
   14000753c:	mov    rsi,rax
   14000753f:	test   rax,rax
   140007542:	jne    0x14000754e
   140007544:	mov    ebx,0x8
   140007549:	jmp    0x140007787
   14000754e:	mov    edx,r14d
   140007551:	xor    ecx,ecx
   140007553:	inc    rdx
   140007556:	shl    rdx,0x4
   14000755a:	call   QWORD PTR [rip+0x4b30]        # 0x14000c090
   140007560:	xor    ecx,ecx
   140007562:	mov    r15,rax
   140007565:	test   rax,rax
   140007568:	je     0x140007544
   14000756a:	mov    DWORD PTR [rax+0x8],r14d
   14000756e:	add    rax,0x10
   140007572:	mov    r14d,ecx
   140007575:	mov    QWORD PTR [r15],rax
   140007578:	mov    WORD PTR [rbp-0x74],cx
   14000757c:	mov    DWORD PTR [rsp+0x28],r14d
   140007581:	cmp    WORD PTR [rdi],cx
   140007584:	je     0x14000776c
   14000758a:	cmp    WORD PTR [rdi],0x7b
   14000758e:	mov    rcx,rdi
   140007591:	jne    0x140007654
   140007597:	mov    edx,0x7d
   14000759c:	call   QWORD PTR [rip+0x4ed6]        # 0x14000c478
   1400075a2:	test   rax,rax
   1400075a5:	je     0x140007772
   1400075ab:	sub    rax,rdi
   1400075ae:	sar    rax,1
   1400075b1:	add    eax,0x2
   1400075b4:	cmp    eax,0x27
   1400075b7:	jne    0x140007772
   1400075bd:	movups xmm0,XMMWORD PTR [rdi]
   1400075c0:	shl    r14,0x4
   1400075c4:	lea    rcx,[rsp+0x40]
   1400075c9:	add    r14,0x10
   1400075cd:	movaps XMMWORD PTR [rsp+0x40],xmm0
   1400075d2:	add    r14,r15
   1400075d5:	movups xmm1,XMMWORD PTR [rdi+0x10]
   1400075d9:	mov    rdx,r14
   1400075dc:	movaps XMMWORD PTR [rsp+0x50],xmm1
   1400075e1:	movups xmm0,XMMWORD PTR [rdi+0x20]
   1400075e5:	movaps XMMWORD PTR [rsp+0x60],xmm0
   1400075ea:	movups xmm1,XMMWORD PTR [rdi+0x30]
   1400075ee:	movaps XMMWORD PTR [rsp+0x70],xmm1
   1400075f3:	movsd  xmm0,QWORD PTR [rdi+0x40]
   1400075f8:	movsd  QWORD PTR [rbp-0x80],xmm0
   1400075fd:	mov    eax,DWORD PTR [rdi+0x48]
   140007600:	mov    DWORD PTR [rbp-0x78],eax
   140007603:	call   0x140007360
   140007608:	mov    ebx,eax
   14000760a:	xor    eax,eax
   14000760c:	test   ebx,ebx
   14000760e:	jne    0x140007777
   140007614:	lea    r8,[rsp+0x30]
   140007619:	mov    rdx,r14
   14000761c:	mov    rcx,rsi
   14000761f:	cmp    BYTE PTR [rsp+0x20],al
   140007623:	je     0x14000762c
   140007625:	call   0x140001a74
   14000762a:	jmp    0x140007631
   14000762c:	call   0x140001ad4
   140007631:	mov    ebx,eax
   140007633:	test   eax,eax
   140007635:	jne    0x140007777
   14000763b:	lea    edx,[rax+0x2c]
   14000763e:	mov    rcx,rdi
   140007641:	call   QWORD PTR [rip+0x4e31]        # 0x14000c478
   140007647:	mov    r14d,DWORD PTR [rsp+0x28]
   14000764c:	mov    rdi,rax
   14000764f:	jmp    0x140007750
   140007654:	mov    edx,0x2c
   140007659:	call   QWORD PTR [rip+0x4e19]        # 0x14000c478
   14000765f:	xor    edx,edx
   140007661:	mov    QWORD PTR [rsp+0x38],rax
   140007666:	mov    rcx,rax
   140007669:	test   rax,rax
   14000766c:	jne    0x140007681
   14000766e:	or     rax,0xffffffffffffffff
   140007672:	inc    rax
   140007675:	cmp    WORD PTR [rdi+rax*2],dx
   140007679:	jne    0x140007672
   14000767b:	mov    eax,eax
   14000767d:	lea    rcx,[rdi+rax*2]
   140007681:	sub    rcx,rdi
   140007684:	sar    rcx,1
   140007687:	lea    eax,[rcx+0x1]
   14000768a:	cmp    eax,0x200
   14000768f:	jae    0x140007772
   140007695:	mov    eax,ecx
   140007697:	mov    rdx,rdi
   14000769a:	lea    rcx,[rbp-0x70]
   14000769e:	lea    rbx,[rax+rax*1]
   1400076a2:	mov    r8,rbx
   1400076a5:	call   0x14000aab2
   1400076aa:	cmp    rbx,0x400
   1400076b1:	jae    0x1400077b3
   1400076b7:	xor    edi,edi
   1400076b9:	lea    rax,[rbp-0x70]
   1400076bd:	mov    WORD PTR [rbp+rbx*1-0x70],di
   1400076c2:	mov    QWORD PTR [rsp+0x28],rax
   1400076c7:	cmp    BYTE PTR [rsp+0x20],dil
   1400076cc:	je     0x1400076fc
   1400076ce:	cmp    BYTE PTR [rsi+0x78],dil
   1400076d2:	jne    0x1400076ed
   1400076d4:	mov    ebx,DWORD PTR [rsi+0x7c]
   1400076d7:	test   ebx,ebx
   1400076d9:	jne    0x140007777
   1400076df:	mov    rcx,rsi
   1400076e2:	call   0x140001554
   1400076e7:	mov    ebx,eax
   1400076e9:	test   eax,eax
   1400076eb:	jne    0x1400076ef
   1400076ed:	mov    ebx,edi
   1400076ef:	test   ebx,ebx
   1400076f1:	jne    0x140007777
   1400076f7:	mov    rcx,rsi
   1400076fa:	jmp    0x140007721
   1400076fc:	cmp    BYTE PTR [rsi+0x78],dil
   140007700:	jne    0x140007717
   140007702:	mov    ebx,DWORD PTR [rsi+0x7c]
   140007705:	test   ebx,ebx
   140007707:	jne    0x140007777
   140007709:	mov    rcx,rsi
   14000770c:	call   0x140001554
   140007711:	mov    ebx,eax
   140007713:	test   eax,eax
   140007715:	jne    0x140007719
   140007717:	mov    ebx,edi
   140007719:	test   ebx,ebx
   14000771b:	jne    0x140007777
   14000771d:	lea    rcx,[rsi+0x30]
   140007721:	lea    rdx,[rsp+0x28]
   140007726:	call   0x140001b6c
   14000772b:	mov    r13,QWORD PTR [rax]
   14000772e:	test   r13,r13
   140007731:	je     0x140007772
   140007733:	mov    ebx,edi
   140007735:	test   ebx,ebx
   140007737:	jne    0x140007777
   140007739:	movups xmm0,XMMWORD PTR [r13+0x0]
   14000773e:	mov    rdi,QWORD PTR [rsp+0x38]
   140007743:	mov    eax,r14d
   140007746:	add    rax,rax
   140007749:	movdqu XMMWORD PTR [r15+rax*8+0x10],xmm0
   140007750:	xor    ecx,ecx
   140007752:	test   rdi,rdi
   140007755:	je     0x14000775b
   140007757:	add    rdi,0x2
   14000775b:	inc    r14d
   14000775e:	mov    DWORD PTR [rsp+0x28],r14d
   140007763:	test   rdi,rdi
   140007766:	jne    0x140007581
   14000776c:	mov    QWORD PTR [r12],r15
   140007770:	jmp    0x140007787
   140007772:	mov    ebx,0x57
   140007777:	mov    rcx,r15
   14000777a:	call   QWORD PTR [rip+0x4918]        # 0x14000c098
   140007780:	jmp    0x140007787
   140007782:	mov    ebx,0x57
   140007787:	mov    eax,ebx
   140007789:	mov    rcx,QWORD PTR [rbp+0x390]
   140007790:	xor    rcx,rsp
   140007793:	call   0x14000a0a0
   140007798:	mov    rbx,QWORD PTR [rsp+0x4f0]
   1400077a0:	add    rsp,0x4a0
   1400077a7:	pop    r15
   1400077a9:	pop    r14
   1400077ab:	pop    r13
   1400077ad:	pop    r12
   1400077af:	pop    rdi
   1400077b0:	pop    rsi
   1400077b1:	pop    rbp
   1400077b2:	ret    
   1400077b3:	call   0x14000a408
   1400077b8:	int3   
   1400077b9:	int3   
   1400077ba:	int3   
   1400077bb:	int3   
   1400077bc:	int3   
   1400077bd:	int3   
   1400077be:	int3   
   1400077bf:	int3   
   1400077c0:	mov    r11,rsp
   1400077c3:	mov    QWORD PTR [r11+0x18],rbx
   1400077c7:	push   rbp
   1400077c8:	push   rsi
   1400077c9:	push   rdi
   1400077ca:	sub    rsp,0x50
   1400077ce:	mov    rax,QWORD PTR [rip+0x982b]        # 0x140011000
   1400077d5:	xor    rax,rsp
   1400077d8:	mov    QWORD PTR [rsp+0x40],rax
   1400077dd:	lea    rax,[rip+0x51ac]        # 0x14000c990
   1400077e4:	mov    rsi,rdx
   1400077e7:	mov    QWORD PTR [r11-0x48],rax
   1400077eb:	lea    rdi,[r11-0x48]
   1400077ef:	lea    rax,[rip+0x516a]        # 0x14000c960
   1400077f6:	mov    rbp,rcx
   1400077f9:	mov    QWORD PTR [r11-0x40],rax
   1400077fd:	xor    ebx,ebx
   1400077ff:	lea    rax,[rip+0x5202]        # 0x14000ca08
   140007806:	mov    QWORD PTR [r11-0x38],rax
   14000780a:	lea    rax,[rip+0x521f]        # 0x14000ca30
   140007811:	mov    QWORD PTR [r11-0x30],rax
   140007815:	mov    rdx,QWORD PTR [rdi]
   140007818:	mov    rcx,rbp
   14000781b:	call   QWORD PTR [rip+0x4c9f]        # 0x14000c4c0
   140007821:	test   eax,eax
   140007823:	je     0x140007837
   140007825:	inc    ebx
   140007827:	add    rdi,0x8
   14000782b:	cmp    ebx,0x4
   14000782e:	jb     0x140007815
   140007830:	mov    eax,0x57
   140007835:	jmp    0x140007841
   140007837:	test   rsi,rsi
   14000783a:	je     0x14000783f
   14000783c:	mov    QWORD PTR [rsi],rbp
   14000783f:	xor    eax,eax
   140007841:	mov    rcx,QWORD PTR [rsp+0x40]
   140007846:	xor    rcx,rsp
   140007849:	call   0x14000a0a0
   14000784e:	mov    rbx,QWORD PTR [rsp+0x80]
   140007856:	add    rsp,0x50
   14000785a:	pop    rdi
   14000785b:	pop    rsi
   14000785c:	pop    rbp
   14000785d:	ret    
   14000785e:	int3   
   14000785f:	int3   
   140007860:	int3   
   140007861:	int3   
   140007862:	int3   
   140007863:	int3   
   140007864:	mov    QWORD PTR [rsp+0x18],rbx
   140007869:	push   rbp
   14000786a:	push   rsi
   14000786b:	push   rdi
   14000786c:	push   r12
   14000786e:	push   r13
   140007870:	push   r14
   140007872:	push   r15
   140007874:	lea    rbp,[rsp-0x160]
   14000787c:	sub    rsp,0x260
   140007883:	mov    rax,QWORD PTR [rip+0x9776]        # 0x140011000
   14000788a:	xor    rax,rsp
   14000788d:	mov    QWORD PTR [rbp+0x150],rax
   140007894:	xor    r12d,r12d
   140007897:	lea    rdi,[rsp+0x50]
   14000789c:	cmp    WORD PTR [rcx],0x7b
   1400078a0:	mov    r13,rdx
   1400078a3:	mov    rsi,rcx
   1400078a6:	mov    ebx,r12d
   1400078a9:	mov    r15d,r12d
   1400078ac:	jne    0x140007989
   1400078b2:	add    rsi,0x2
   1400078b6:	or     r14,0xffffffffffffffff
   1400078ba:	inc    r14
   1400078bd:	cmp    WORD PTR [rsi+r14*2],r12w
   1400078c2:	jne    0x1400078ba
   1400078c4:	mov    eax,r14d
   1400078c7:	cmp    WORD PTR [rsi+rax*2-0x2],0x7d
   1400078cd:	je     0x1400078d9
   1400078cf:	mov    ebx,0x57
   1400078d4:	jmp    0x140007a7b
   1400078d9:	lea    r12d,[r14+0x1]
   1400078dd:	cmp    r12d,0x100
   1400078e4:	jbe    0x140007906
   1400078e6:	mov    edx,r12d
   1400078e9:	xor    ecx,ecx
   1400078eb:	add    rdx,rdx
   1400078ee:	call   QWORD PTR [rip+0x479c]        # 0x14000c090
   1400078f4:	mov    rdi,rax
   1400078f7:	test   rax,rax
   1400078fa:	jne    0x140007906
   1400078fc:	mov    ebx,0x8
   140007901:	jmp    0x140007a7b
   140007906:	lea    rax,[r12-0x1]
   14000790b:	mov    edx,r12d
   14000790e:	mov    r8d,0x7ffffffe
   140007914:	cmp    rax,r8
   140007917:	ja     0x140007953
   140007919:	sub    r8,rdx
   14000791c:	sub    rsi,rdi
   14000791f:	xor    r12d,r12d
   140007922:	mov    rcx,rdi
   140007925:	lea    rax,[r8+rdx*1]
   140007929:	test   rax,rax
   14000792c:	je     0x140007944
   14000792e:	movzx  eax,WORD PTR [rsi+rcx*1]
   140007932:	test   ax,ax
   140007935:	je     0x140007944
   140007937:	mov    WORD PTR [rcx],ax
   14000793a:	add    rcx,0x2
   14000793e:	sub    rdx,0x1
   140007942:	jne    0x140007925
   140007944:	test   rdx,rdx
   140007947:	jne    0x14000794d
   140007949:	sub    rcx,0x2
   14000794d:	mov    WORD PTR [rcx],r12w
   140007951:	jmp    0x14000795f
   140007953:	xor    r12d,r12d
   140007956:	test   rdx,rdx
   140007959:	je     0x14000795f
   14000795b:	mov    WORD PTR [rdi],r12w
   14000795f:	lea    eax,[r14-0x1]
   140007963:	mov    rdx,r13
   140007966:	mov    rcx,rdi
   140007969:	mov    WORD PTR [rdi+rax*2],r12w
   14000796e:	call   QWORD PTR [rip+0x499c]        # 0x14000c310
   140007974:	test   eax,eax
   140007976:	jne    0x140007a55
   14000797c:	call   QWORD PTR [rip+0x46a6]        # 0x14000c028
   140007982:	mov    ebx,eax
   140007984:	jmp    0x140007a55
   140007989:	lea    rax,[rsp+0x48]
   14000798e:	mov    DWORD PTR [rsp+0x40],r12d
   140007993:	mov    QWORD PTR [rsp+0x30],rax
   140007998:	lea    r9,[rsp+0x40]
   14000799d:	lea    rax,[rsp+0x44]
   1400079a2:	mov    DWORD PTR [rsp+0x44],r12d
   1400079a7:	mov    rdx,rcx
   1400079aa:	mov    QWORD PTR [rsp+0x28],rax
   1400079af:	xor    r8d,r8d
   1400079b2:	mov    QWORD PTR [rsp+0x20],r12
   1400079b7:	xor    ecx,ecx
   1400079b9:	call   QWORD PTR [rip+0x4909]        # 0x14000c2c8
   1400079bf:	test   eax,eax
   1400079c1:	jne    0x140007a7b
   1400079c7:	call   QWORD PTR [rip+0x465b]        # 0x14000c028
   1400079cd:	mov    ebx,eax
   1400079cf:	cmp    eax,0x534
   1400079d4:	je     0x1400079df
   1400079d6:	cmp    eax,0x7a
   1400079d9:	jne    0x140007a7b
   1400079df:	mov    edx,DWORD PTR [rsp+0x40]
   1400079e3:	xor    ecx,ecx
   1400079e5:	call   QWORD PTR [rip+0x46a5]        # 0x14000c090
   1400079eb:	mov    r14,rax
   1400079ee:	test   rax,rax
   1400079f1:	je     0x1400078fc
   1400079f7:	mov    edx,DWORD PTR [rsp+0x44]
   1400079fb:	xor    ecx,ecx
   1400079fd:	inc    edx
   1400079ff:	add    rdx,rdx
   140007a02:	call   QWORD PTR [rip+0x4688]        # 0x14000c090
   140007a08:	mov    r15,rax
   140007a0b:	test   rax,rax
   140007a0e:	je     0x1400078fc
   140007a14:	lea    rax,[rsp+0x48]
   140007a19:	mov    r8,r14
   140007a1c:	mov    QWORD PTR [rsp+0x30],rax
   140007a21:	lea    r9,[rsp+0x40]
   140007a26:	lea    rax,[rsp+0x44]
   140007a2b:	mov    rdx,rsi
   140007a2e:	mov    QWORD PTR [rsp+0x28],rax
   140007a33:	xor    ecx,ecx
   140007a35:	mov    QWORD PTR [rsp+0x20],r15
   140007a3a:	call   QWORD PTR [rip+0x4888]        # 0x14000c2c8
   140007a40:	test   eax,eax
   140007a42:	jne    0x140007a4e
   140007a44:	call   QWORD PTR [rip+0x45de]        # 0x14000c028
   140007a4a:	mov    ebx,eax
   140007a4c:	jmp    0x140007a6d
   140007a4e:	mov    ebx,r12d
   140007a51:	mov    QWORD PTR [r13+0x0],r14
   140007a55:	test   rdi,rdi
   140007a58:	je     0x140007a6d
   140007a5a:	lea    rax,[rsp+0x50]
   140007a5f:	cmp    rdi,rax
   140007a62:	je     0x140007a6d
   140007a64:	mov    rcx,rdi
   140007a67:	call   QWORD PTR [rip+0x462b]        # 0x14000c098
   140007a6d:	test   r15,r15
   140007a70:	je     0x140007a7b
   140007a72:	mov    rcx,r15
   140007a75:	call   QWORD PTR [rip+0x461d]        # 0x14000c098
   140007a7b:	mov    eax,ebx
   140007a7d:	mov    rcx,QWORD PTR [rbp+0x150]
   140007a84:	xor    rcx,rsp
   140007a87:	call   0x14000a0a0
   140007a8c:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140007a94:	add    rsp,0x260
   140007a9b:	pop    r15
   140007a9d:	pop    r14
   140007a9f:	pop    r13
   140007aa1:	pop    r12
   140007aa3:	pop    rdi
   140007aa4:	pop    rsi
   140007aa5:	pop    rbp
   140007aa6:	ret    
   140007aa7:	int3   
   140007aa8:	int3   
   140007aa9:	int3   
   140007aaa:	int3   
   140007aab:	int3   
   140007aac:	int3   
   140007aad:	int3   
   140007aae:	int3   
   140007aaf:	int3   
   140007ab0:	sub    rsp,0x438
   140007ab7:	mov    rax,QWORD PTR [rip+0x9542]        # 0x140011000
   140007abe:	xor    rax,rsp
   140007ac1:	mov    QWORD PTR [rsp+0x420],rax
   140007ac9:	cmp    BYTE PTR [rip+0xa508],0x0        # 0x140011fd8
   140007ad0:	jne    0x140007b0c
   140007ad2:	mov    eax,DWORD PTR [rip+0xa4f0]        # 0x140011fc8
   140007ad8:	lea    rdx,[rsp+0x20]
   140007add:	dec    eax
   140007adf:	mov    r8d,0x200
   140007ae5:	neg    eax
   140007ae7:	sbb    ecx,ecx
   140007ae9:	add    ecx,0x200a
   140007aef:	call   0x140007cc0
   140007af4:	lea    rdx,[rsp+0x20]
   140007af9:	lea    rcx,[rip+0x4eb4]        # 0x14000c9b4
   140007b00:	call   0x140006774
   140007b05:	mov    BYTE PTR [rip+0xa4cc],0x1        # 0x140011fd8
   140007b0c:	mov    rcx,QWORD PTR [rsp+0x420]
   140007b14:	xor    rcx,rsp
   140007b17:	call   0x14000a0a0
   140007b1c:	add    rsp,0x438
   140007b23:	ret    
   140007b24:	int3   
   140007b25:	int3   
   140007b26:	int3   
   140007b27:	int3   
   140007b28:	int3   
   140007b29:	int3   
   140007b2a:	int3   
   140007b2b:	int3   
   140007b2c:	mov    QWORD PTR [rsp+0x8],rbx
   140007b31:	mov    QWORD PTR [rsp+0x10],rbp
   140007b36:	push   rdi
   140007b37:	sub    rsp,0x230
   140007b3e:	mov    rax,QWORD PTR [rip+0x94bb]        # 0x140011000
   140007b45:	xor    rax,rsp
   140007b48:	mov    QWORD PTR [rsp+0x220],rax
   140007b50:	mov    edi,DWORD PTR [rip+0xa472]        # 0x140011fc8
   140007b56:	lea    rdx,[rsp+0x20]
   140007b5b:	mov    bl,cl
   140007b5d:	mov    r8d,0x100
   140007b63:	mov    ecx,0x2010
   140007b68:	call   0x140007cc0
   140007b6d:	test   edi,edi
   140007b6f:	lea    rbp,[rip+0x4e3e]        # 0x14000c9b4
   140007b76:	lea    rcx,[rip+0x4e43]        # 0x14000c9c0
   140007b7d:	cmovne rcx,rbp
   140007b81:	lea    rdx,[rsp+0x20]
   140007b86:	call   0x140006774
   140007b8b:	test   bl,bl
   140007b8d:	je     0x140007bc1
   140007b8f:	test   edi,edi
   140007b91:	je     0x140007b9f
   140007b93:	lea    rcx,[rip+0x4e5e]        # 0x14000c9f8
   140007b9a:	call   0x140006774
   140007b9f:	mov    r8d,0x100
   140007ba5:	lea    rdx,[rsp+0x20]
   140007baa:	mov    ecx,0x2011
   140007baf:	call   0x140007cc0
   140007bb4:	lea    rdx,[rsp+0x20]
   140007bb9:	mov    rcx,rbp
   140007bbc:	call   0x140006774
   140007bc1:	lea    rcx,[rip+0x4e34]        # 0x14000c9fc
   140007bc8:	call   0x140006774
   140007bcd:	mov    rcx,QWORD PTR [rsp+0x220]
   140007bd5:	xor    rcx,rsp
   140007bd8:	call   0x14000a0a0
   140007bdd:	lea    r11,[rsp+0x230]
   140007be5:	mov    rbx,QWORD PTR [r11+0x10]
   140007be9:	mov    rbp,QWORD PTR [r11+0x18]
   140007bed:	mov    rsp,r11
   140007bf0:	pop    rdi
   140007bf1:	ret    
   140007bf2:	int3   
   140007bf3:	int3   
   140007bf4:	int3   
   140007bf5:	int3   
   140007bf6:	int3   
   140007bf7:	int3   
   140007bf8:	test   ecx,ecx
   140007bfa:	je     0x140007cb9
   140007c00:	push   rbx
   140007c01:	sub    rsp,0x260
   140007c08:	mov    rax,QWORD PTR [rip+0x93f1]        # 0x140011000
   140007c0f:	xor    rax,rsp
   140007c12:	mov    QWORD PTR [rsp+0x250],rax
   140007c1a:	and    QWORD PTR [rsp+0x40],0x0
   140007c20:	lea    rdx,[rsp+0x50]
   140007c25:	mov    ebx,ecx
   140007c27:	mov    r8d,0x100
   140007c2d:	mov    ecx,0x2006
   140007c32:	call   0x140007cc0
   140007c37:	and    QWORD PTR [rsp+0x30],0x0
   140007c3d:	lea    rax,[rsp+0x40]
   140007c42:	and    DWORD PTR [rsp+0x28],0x0
   140007c47:	mov    r9d,0x400
   140007c4d:	mov    r8d,ebx
   140007c50:	mov    QWORD PTR [rsp+0x20],rax
   140007c55:	xor    edx,edx
   140007c57:	mov    ecx,0x1100
   140007c5c:	call   QWORD PTR [rip+0x446e]        # 0x14000c0d0
   140007c62:	test   eax,eax
   140007c64:	je     0x140007c92
   140007c66:	mov    ecx,0x2
   140007c6b:	call   0x14000aa68
   140007c70:	mov    r9,QWORD PTR [rsp+0x40]
   140007c75:	lea    rdx,[rsp+0x50]
   140007c7a:	mov    rcx,rax
   140007c7d:	mov    r8d,ebx
   140007c80:	call   0x14000686c
   140007c85:	mov    rcx,QWORD PTR [rsp+0x40]
   140007c8a:	call   QWORD PTR [rip+0x4408]        # 0x14000c098
   140007c90:	jmp    0x140007ca1
   140007c92:	mov    edx,ebx
   140007c94:	lea    rcx,[rip+0x4fd5]        # 0x14000cc70
   140007c9b:	call   QWORD PTR [rip+0x47df]        # 0x14000c480
   140007ca1:	mov    rcx,QWORD PTR [rsp+0x250]
   140007ca9:	xor    rcx,rsp
   140007cac:	call   0x14000a0a0
   140007cb1:	add    rsp,0x260
   140007cb8:	pop    rbx
   140007cb9:	ret    
   140007cba:	int3   
   140007cbb:	int3   
   140007cbc:	int3   
   140007cbd:	int3   
   140007cbe:	int3   
   140007cbf:	int3   
   140007cc0:	mov    rax,rsp
   140007cc3:	mov    QWORD PTR [rax+0x8],rbx
   140007cc7:	push   rdi
   140007cc8:	sub    rsp,0x40
   140007ccc:	mov    rbx,rdx
   140007ccf:	xor    edi,edi
   140007cd1:	mov    QWORD PTR [rax-0x18],rdi
   140007cd5:	mov    r9d,0x400
   140007cdb:	mov    DWORD PTR [rax-0x20],r8d
   140007cdf:	mov    r8d,ecx
   140007ce2:	mov    QWORD PTR [rax-0x28],rdx
   140007ce6:	mov    ecx,0x800
   140007ceb:	xor    edx,edx
   140007ced:	call   QWORD PTR [rip+0x43dd]        # 0x14000c0d0
   140007cf3:	cmp    eax,0x1
   140007cf6:	jbe    0x140007d01
   140007cf8:	add    eax,0xfffffffe
   140007cfb:	mov    WORD PTR [rbx+rax*2],di
   140007cff:	jmp    0x140007d04
   140007d01:	mov    WORD PTR [rbx],di
   140007d04:	mov    rbx,QWORD PTR [rsp+0x50]
   140007d09:	add    rsp,0x40
   140007d0d:	pop    rdi
   140007d0e:	ret    
   140007d0f:	int3   
   140007d10:	int3   
   140007d11:	int3   
   140007d12:	int3   
   140007d13:	int3   
   140007d14:	int3   
   140007d15:	int3   
   140007d16:	int3   
   140007d17:	int3   
   140007d18:	mov    QWORD PTR [rsp+0x18],rbx
   140007d1d:	push   rbp
   140007d1e:	push   rsi
   140007d1f:	push   rdi
   140007d20:	push   r12
   140007d22:	push   r13
   140007d24:	push   r14
   140007d26:	push   r15
   140007d28:	lea    rbp,[rsp-0x1a0]
   140007d30:	sub    rsp,0x2a0
   140007d37:	mov    rax,QWORD PTR [rip+0x92c2]        # 0x140011000
   140007d3e:	xor    rax,rsp
   140007d41:	mov    QWORD PTR [rbp+0x190],rax
   140007d48:	xor    eax,eax
   140007d4a:	mov    rsi,rdx
   140007d4d:	mov    edi,ecx
   140007d4f:	mov    QWORD PTR [rsp+0x6a],rax
   140007d54:	xor    r13d,r13d
   140007d57:	mov    QWORD PTR [rsp+0x72],rax
   140007d5c:	mov    ebx,0x1e
   140007d61:	mov    WORD PTR [rsp+0x68],r13w
   140007d67:	xor    r9d,r9d
   140007d6a:	mov    QWORD PTR [rsp+0x7a],rax
   140007d6f:	xor    r8d,r8d
   140007d72:	xor    ecx,ecx
   140007d74:	or     r15d,0xffffffff
   140007d78:	mov    r14b,r13b
   140007d7b:	lea    edx,[rbx-0x1d]
   140007d7e:	call   QWORD PTR [rip+0x42fc]        # 0x14000c080
   140007d84:	xor    r8d,r8d
   140007d87:	xor    edx,edx
   140007d89:	mov    ecx,0x100
   140007d8e:	call   QWORD PTR [rip+0x4334]        # 0x14000c0c8
   140007d94:	call   QWORD PTR [rip+0x426e]        # 0x14000c008
   140007d9a:	mov    r9d,eax
   140007d9d:	lea    r8,[rip+0x50bc]        # 0x14000ce60
   140007da4:	lea    edx,[rbx-0x11]
   140007da7:	lea    rcx,[rsp+0x68]
   140007dac:	call   0x140007048
   140007db1:	lea    r12,[rip+0x50b0]        # 0x14000ce68
   140007db8:	mov    WORD PTR [rbp-0x80],r13w
   140007dbd:	mov    rdx,r12
   140007dc0:	lea    ecx,[rbx-0x1d]
   140007dc3:	call   QWORD PTR [rip+0x45c7]        # 0x14000c390
   140007dc9:	mov    rdx,r12
   140007dcc:	lea    ecx,[rbx-0x1b]
   140007dcf:	call   QWORD PTR [rip+0x45bb]        # 0x14000c390
   140007dd5:	mov    rdx,r12
   140007dd8:	lea    ecx,[rbx-0x1a]
   140007ddb:	call   QWORD PTR [rip+0x45af]        # 0x14000c390
   140007de1:	mov    rdx,r12
   140007de4:	lea    ecx,[rbx-0x19]
   140007de7:	call   QWORD PTR [rip+0x45a3]        # 0x14000c390
   140007ded:	lea    rdx,[rsp+0x68]
   140007df2:	lea    ecx,[rbx-0x1c]
   140007df5:	call   QWORD PTR [rip+0x4595]        # 0x14000c390
   140007dfb:	mov    rcx,QWORD PTR gs:0x60
   140007e04:	mov    rcx,QWORD PTR [rcx+0x10]
   140007e08:	call   QWORD PTR [rip+0x46f2]        # 0x14000c500
   140007e0e:	mov    rcx,QWORD PTR gs:0x60
   140007e17:	or     r12,0xffffffffffffffff
   140007e1b:	mov    rdx,rax
   140007e1e:	mov    QWORD PTR [rip+0xa1fb],r13        # 0x140012020
   140007e25:	cmp    BYTE PTR [rcx+0x2],r13b
   140007e29:	jne    0x140007e4a
   140007e2b:	test   rax,rax
   140007e2e:	je     0x140007e55
   140007e30:	mov    rcx,QWORD PTR [rax+0x68]
   140007e34:	mov    rax,QWORD PTR [rax+0x60]
   140007e38:	sub    rax,rcx
   140007e3b:	cmp    rax,0x3000
   140007e41:	jb     0x140007e4a
   140007e43:	mov    QWORD PTR [rip+0xa1d6],rcx        # 0x140012020
   140007e4a:	test   rdx,rdx
   140007e4d:	je     0x140007e55
   140007e4f:	mov    rcx,QWORD PTR [rdx+0x68]
   140007e53:	jmp    0x140007e58
   140007e55:	mov    rcx,r12
   140007e58:	lea    rax,[rcx+0x8]
   140007e5c:	mov    r8,0xfffffffffffffff7
   140007e63:	cmp    rax,0x8
   140007e67:	mov    rdx,rsi
   140007e6a:	lea    rax,[rip+0x1ccf]        # 0x140009b40
   140007e71:	cmovb  rcx,r8
   140007e75:	mov    QWORD PTR [rip+0xa194],rax        # 0x140012010
   140007e7c:	mov    QWORD PTR [rip+0xa195],rcx        # 0x140012018
   140007e83:	lea    rax,[rip+0x1c96]        # 0x140009b20
   140007e8a:	mov    ecx,edi
   140007e8c:	mov    QWORD PTR [rip+0xa175],rax        # 0x140012008
   140007e93:	call   0x1400061f0
   140007e98:	mov    edi,eax
   140007e9a:	mov    esi,0x57
   140007e9f:	test   eax,eax
   140007ea1:	jne    0x140008214
   140007ea7:	mov    eax,r13d
   140007eaa:	lea    rcx,[rip+0x9487]        # 0x140011338
   140007eb1:	lea    edx,[rdi+0x1]
   140007eb4:	cmp    BYTE PTR [rcx],r13b
   140007eb7:	jne    0x140007ec9
   140007eb9:	add    eax,edx
   140007ebb:	add    rcx,0x20
   140007ebf:	cmp    eax,0x9
   140007ec2:	jb     0x140007eb4
   140007ec4:	jmp    0x140008214
   140007ec9:	mov    r15d,eax
   140007ecc:	cmp    eax,0x5
   140007ecf:	ja     0x140008080
   140007ed5:	je     0x14000806c
   140007edb:	test   eax,eax
   140007edd:	je     0x140007ffc
   140007ee3:	sub    eax,edx
   140007ee5:	je     0x140007f87
   140007eeb:	sub    eax,edx
   140007eed:	je     0x140007f23
   140007eef:	sub    eax,edx
   140007ef1:	je     0x140007f0f
   140007ef3:	cmp    eax,edx
   140007ef5:	jne    0x140008214
   140007efb:	mov    al,BYTE PTR [rip+0x915f]        # 0x140011060
   140007f01:	neg    al
   140007f03:	sbb    ebx,ebx
   140007f05:	neg    ebx
   140007f07:	add    ebx,0x11
   140007f0a:	jmp    0x140008214
   140007f0f:	mov    al,BYTE PTR [rip+0x956b]        # 0x140011480
   140007f15:	neg    al
   140007f17:	sbb    ebx,ebx
   140007f19:	neg    ebx
   140007f1b:	add    ebx,0xf
   140007f1e:	jmp    0x140008214
   140007f23:	cmp    BYTE PTR [rip+0x91b6],r13b        # 0x1400110e0
   140007f2a:	je     0x140007f33
   140007f2c:	mov    ebx,0xb
   140007f31:	jmp    0x140007f65
   140007f33:	cmp    BYTE PTR [rip+0x91c6],r13b        # 0x140011100
   140007f3a:	je     0x140007f43
   140007f3c:	mov    ebx,0xc
   140007f41:	jmp    0x140007f65
   140007f43:	cmp    BYTE PTR [rip+0x91d6],r13b        # 0x140011120
   140007f4a:	je     0x140007f53
   140007f4c:	mov    ebx,0xd
   140007f51:	jmp    0x140007f65
   140007f53:	cmp    BYTE PTR [rip+0x9226],r13b        # 0x140011180
   140007f5a:	je     0x140007f63
   140007f5c:	mov    ebx,0xe
   140007f61:	jmp    0x140007f65
   140007f63:	mov    edi,esi
   140007f65:	cmp    BYTE PTR [rip+0x91d4],r13b        # 0x140011140
   140007f6c:	mov    r14b,BYTE PTR [rip+0x91ed]        # 0x140011160
   140007f73:	je     0x140008214
   140007f79:	mov    DWORD PTR [rip+0xa049],edx        # 0x140011fc8
   140007f7f:	mov    r14b,dl
   140007f82:	jmp    0x140008214
   140007f87:	cmp    BYTE PTR [rip+0x9252],r13b        # 0x1400111e0
   140007f8e:	je     0x140007f9a
   140007f90:	mov    ebx,0x7
   140007f95:	jmp    0x140008214
   140007f9a:	cmp    BYTE PTR [rip+0x929f],r13b        # 0x140011240
   140007fa1:	jne    0x140007ff2
   140007fa3:	cmp    BYTE PTR [rip+0x92b6],r13b        # 0x140011260
   140007faa:	jne    0x140007ff2
   140007fac:	cmp    BYTE PTR [rip+0x930d],r13b        # 0x1400112c0
   140007fb3:	je     0x140007fc8
   140007fb5:	cmp    BYTE PTR [rip+0x9324],r13b        # 0x1400112e0
   140007fbc:	je     0x140007fc8
   140007fbe:	mov    ebx,0x8
   140007fc3:	jmp    0x140008214
   140007fc8:	cmp    BYTE PTR [rip+0x9331],r13b        # 0x140011300
   140007fcf:	je     0x140007fdb
   140007fd1:	mov    ebx,0x9
   140007fd6:	jmp    0x140008214
   140007fdb:	cmp    BYTE PTR [rip+0x933e],r13b        # 0x140011320
   140007fe2:	je     0x140008212
   140007fe8:	mov    ebx,0xa
   140007fed:	jmp    0x140008214
   140007ff2:	mov    ebx,0x6
   140007ff7:	jmp    0x140008214
   140007ffc:	cmp    BYTE PTR [rip+0x949d],r13b        # 0x1400114a0
   140008003:	je     0x14000800c
   140008005:	mov    ebx,0x2
   14000800a:	jmp    0x140008054
   14000800c:	cmp    BYTE PTR [rip+0x94ad],r13b        # 0x1400114c0
   140008013:	jne    0x140008052
   140008015:	cmp    BYTE PTR [rip+0x94c4],r13b        # 0x1400114e0
   14000801c:	jne    0x140008052
   14000801e:	cmp    BYTE PTR [rip+0x94db],r13b        # 0x140011500
   140008025:	je     0x14000802e
   140008027:	mov    ebx,0x4
   14000802c:	jmp    0x140008054
   14000802e:	cmp    BYTE PTR [rip+0x94eb],r13b        # 0x140011520
   140008035:	je     0x14000803e
   140008037:	mov    ebx,0x3
   14000803c:	jmp    0x140008054
   14000803e:	cmp    BYTE PTR [rip+0x951b],r13b        # 0x140011560
   140008045:	je     0x140008212
   14000804b:	mov    ebx,0x5
   140008050:	jmp    0x140008054
   140008052:	mov    ebx,edx
   140008054:	cmp    BYTE PTR [rip+0x94e5],r13b        # 0x140011540
   14000805b:	je     0x140008214
   140008061:	mov    DWORD PTR [rip+0x9f61],edx        # 0x140011fc8
   140008067:	jmp    0x140008214
   14000806c:	mov    al,BYTE PTR [rip+0x914e]        # 0x1400111c0
   140008072:	neg    al
   140008074:	sbb    ebx,ebx
   140008076:	neg    ebx
   140008078:	add    ebx,0x13
   14000807b:	jmp    0x140008214
   140008080:	cmp    eax,0x6
   140008083:	je     0x1400081e2
   140008089:	cmp    eax,0x7
   14000808c:	jne    0x140008214
   140008092:	cmp    BYTE PTR [rip+0x94e7],r13b        # 0x140011580
   140008099:	mov    eax,r13d
   14000809c:	je     0x1400080a5
   14000809e:	mov    ebx,0x18
   1400080a3:	mov    eax,edx
   1400080a5:	cmp    BYTE PTR [rip+0x94f4],r13b        # 0x1400115a0
   1400080ac:	je     0x1400080b5
   1400080ae:	mov    ebx,0x19
   1400080b3:	add    eax,edx
   1400080b5:	cmp    BYTE PTR [rip+0x9504],r13b        # 0x1400115c0
   1400080bc:	je     0x1400080c5
   1400080be:	mov    ebx,0x1a
   1400080c3:	add    eax,edx
   1400080c5:	cmp    BYTE PTR [rip+0x9514],r13b        # 0x1400115e0
   1400080cc:	je     0x1400080d5
   1400080ce:	mov    ebx,0x1b
   1400080d3:	add    eax,edx
   1400080d5:	mov    cl,BYTE PTR [rip+0x95c5]        # 0x1400116a0
   1400080db:	mov    esi,0x1d
   1400080e0:	test   cl,cl
   1400080e2:	je     0x1400080e8
   1400080e4:	mov    ebx,esi
   1400080e6:	add    eax,edx
   1400080e8:	cmp    eax,edx
   1400080ea:	je     0x1400080f8
   1400080ec:	mov    edi,0x57
   1400080f1:	mov    ebx,esi
   1400080f3:	jmp    0x140008214
   1400080f8:	test   cl,cl
   1400080fa:	jne    0x140008214
   140008100:	cmp    BYTE PTR [rip+0x9519],r13b        # 0x140011620
   140008107:	je     0x1400080ec
   140008109:	mov    r8,QWORD PTR [rip+0x9518]        # 0x140011628
   140008110:	lea    rax,[rip+0x47c1]        # 0x14000c8d8
   140008117:	mov    DWORD PTR [rsp+0x28],r12d
   14000811c:	mov    r9d,r12d
   14000811f:	xor    edx,edx
   140008121:	mov    QWORD PTR [rsp+0x20],rax
   140008126:	xor    ecx,ecx
   140008128:	call   QWORD PTR [rip+0x4082]        # 0x14000c1b0
   14000812e:	cmp    eax,0x2
   140008131:	je     0x14000815d
   140008133:	mov    r8,QWORD PTR [rip+0x94ee]        # 0x140011628
   14000813a:	lea    rax,[rip+0x4767]        # 0x14000c8a8
   140008141:	mov    DWORD PTR [rsp+0x28],r12d
   140008146:	mov    r9d,r12d
   140008149:	xor    edx,edx
   14000814b:	mov    QWORD PTR [rsp+0x20],rax
   140008150:	xor    ecx,ecx
   140008152:	call   QWORD PTR [rip+0x4058]        # 0x14000c1b0
   140008158:	cmp    eax,0x2
   14000815b:	jne    0x1400080ec
   14000815d:	cmp    BYTE PTR [rip+0x941c],r13b        # 0x140011580
   140008164:	mov    al,BYTE PTR [rip+0x9496]        # 0x140011600
   14000816a:	je     0x140008174
   14000816c:	test   al,al
   14000816e:	jne    0x140008214
   140008174:	cmp    BYTE PTR [rip+0x9425],r13b        # 0x1400115a0
   14000817b:	mov    r8b,BYTE PTR [rip+0x94fe]        # 0x140011680
   140008182:	mov    dl,BYTE PTR [rip+0x94b8]        # 0x140011640
   140008188:	mov    cl,BYTE PTR [rip+0x94d2]        # 0x140011660
   14000818e:	je     0x1400081a1
   140008190:	test   cl,cl
   140008192:	jne    0x1400081a1
   140008194:	test   dl,dl
   140008196:	jne    0x1400081a1
   140008198:	test   al,al
   14000819a:	je     0x1400081a1
   14000819c:	test   r8b,r8b
   14000819f:	je     0x140008214
   1400081a1:	cmp    BYTE PTR [rip+0x9418],r13b        # 0x1400115c0
   1400081a8:	je     0x1400081bb
   1400081aa:	test   cl,cl
   1400081ac:	jne    0x1400081bb
   1400081ae:	test   dl,dl
   1400081b0:	jne    0x1400081bb
   1400081b2:	test   al,al
   1400081b4:	jne    0x1400081bb
   1400081b6:	test   r8b,r8b
   1400081b9:	je     0x140008214
   1400081bb:	cmp    BYTE PTR [rip+0x941e],r13b        # 0x1400115e0
   1400081c2:	je     0x1400080ec
   1400081c8:	test   cl,cl
   1400081ca:	jne    0x1400080ec
   1400081d0:	test   dl,dl
   1400081d2:	jne    0x1400080ec
   1400081d8:	test   r8b,r8b
   1400081db:	je     0x140008214
   1400081dd:	jmp    0x1400080ec
   1400081e2:	cmp    BYTE PTR [rip+0x8e97],r13b        # 0x140011080
   1400081e9:	je     0x1400081f2
   1400081eb:	mov    ebx,0x15
   1400081f0:	jmp    0x140008214
   1400081f2:	cmp    BYTE PTR [rip+0x8ea7],r13b        # 0x1400110a0
   1400081f9:	je     0x140008202
   1400081fb:	mov    ebx,0x16
   140008200:	jmp    0x140008214
   140008202:	cmp    BYTE PTR [rip+0x8eb7],r13b        # 0x1400110c0
   140008209:	je     0x140008212
   14000820b:	mov    ebx,0x17
   140008210:	jmp    0x140008214
   140008212:	mov    edi,esi
   140008214:	xor    eax,eax
   140008216:	mov    DWORD PTR [rsp+0x58],r13d
   14000821b:	mov    QWORD PTR [rsp+0x5c],rax
   140008220:	mov    DWORD PTR [rsp+0x64],eax
   140008224:	mov    QWORD PTR [rsp+0x50],r13
   140008229:	call   QWORD PTR [rip+0x3f09]        # 0x14000c138
   14000822f:	lea    r8,[rsp+0x50]
   140008234:	mov    edx,0x28
   140008239:	mov    rcx,rax
   14000823c:	call   QWORD PTR [rip+0x3ede]        # 0x14000c120
   140008242:	mov    esi,eax
   140008244:	test   eax,eax
   140008246:	je     0x14000829a
   140008248:	lea    r8,[rsp+0x5c]
   14000824d:	xor    ecx,ecx
   14000824f:	lea    rdx,[rip+0x4c22]        # 0x14000ce78
   140008256:	call   QWORD PTR [rip+0x405c]        # 0x14000c2b8
   14000825c:	mov    esi,eax
   14000825e:	test   eax,eax
   140008260:	je     0x14000829a
   140008262:	mov    rcx,QWORD PTR [rsp+0x50]
   140008267:	lea    r8,[rsp+0x58]
   14000826c:	mov    QWORD PTR [rsp+0x28],r13
   140008271:	mov    r9d,0x10
   140008277:	xor    edx,edx
   140008279:	mov    QWORD PTR [rsp+0x20],r13
   14000827e:	mov    DWORD PTR [rsp+0x58],0x1
   140008286:	mov    DWORD PTR [rsp+0x64],0x2
   14000828e:	call   QWORD PTR [rip+0x3fe4]        # 0x14000c278
   140008294:	mov    esi,eax
   140008296:	test   eax,eax
   140008298:	jne    0x1400082a0
   14000829a:	call   QWORD PTR [rip+0x3d88]        # 0x14000c028
   1400082a0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400082a5:	test   rcx,rcx
   1400082a8:	je     0x1400082b0
   1400082aa:	call   QWORD PTR [rip+0x3dc0]        # 0x14000c070
   1400082b0:	test   esi,esi
   1400082b2:	jne    0x1400082ba
   1400082b4:	call   QWORD PTR [rip+0x3d6e]        # 0x14000c028
   1400082ba:	mov    esi,0x1001
   1400082bf:	cmp    ebx,0xf
   1400082c2:	jg     0x1400084e1
   1400082c8:	je     0x1400084d0
   1400082ce:	cmp    ebx,0x8
   1400082d1:	jg     0x140008445
   1400082d7:	je     0x14000842e
   1400082dd:	mov    ecx,ebx
   1400082df:	sub    ecx,0x1
   1400082e2:	je     0x140008416
   1400082e8:	sub    ecx,0x1
   1400082eb:	je     0x1400083f7
   1400082f1:	sub    ecx,0x1
   1400082f4:	je     0x1400083ed
   1400082fa:	sub    ecx,0x1
   1400082fd:	je     0x1400083dc
   140008303:	sub    ecx,0x1
   140008306:	je     0x1400083ca
   14000830c:	sub    ecx,0x1
   14000830f:	je     0x140008377
   140008311:	cmp    ecx,0x1
   140008314:	jne    0x140008653
   14000831a:	mov    eax,DWORD PTR [rip+0x8f88]        # 0x1400112a8
   140008320:	mov    r9b,BYTE PTR [rip+0x8ed9]        # 0x140011200
   140008327:	mov    r8,QWORD PTR [rip+0x8f3a]        # 0x140011268
   14000832e:	mov    rdx,QWORD PTR [rip+0x8f13]        # 0x140011248
   140008335:	mov    rcx,QWORD PTR [rip+0x8eac]        # 0x1400111e8
   14000833c:	mov    BYTE PTR [rsp+0x48],r13b
   140008341:	mov    DWORD PTR [rsp+0x40],eax
   140008345:	mov    eax,DWORD PTR [rip+0x8f3d]        # 0x140011288
   14000834b:	mov    DWORD PTR [rsp+0x38],eax
   14000834f:	mov    al,BYTE PTR [rip+0x8f4b]        # 0x1400112a0
   140008355:	mov    BYTE PTR [rsp+0x30],al
   140008359:	mov    al,BYTE PTR [rip+0x8f21]        # 0x140011280
   14000835f:	mov    BYTE PTR [rsp+0x28],al
   140008363:	mov    al,BYTE PTR [rip+0x8eb7]        # 0x140011220
   140008369:	mov    BYTE PTR [rsp+0x20],al
   14000836d:	call   0x14000384c
   140008372:	jmp    0x140008651
   140008377:	mov    eax,DWORD PTR [rip+0x8f2b]        # 0x1400112a8
   14000837d:	mov    r9b,BYTE PTR [rip+0x8e9c]        # 0x140011220
   140008384:	mov    r8b,BYTE PTR [rip+0x8e75]        # 0x140011200
   14000838b:	mov    rdx,QWORD PTR [rip+0x8ed6]        # 0x140011268
   140008392:	mov    rcx,QWORD PTR [rip+0x8eaf]        # 0x140011248
   140008399:	mov    BYTE PTR [rsp+0x40],r13b
   14000839e:	mov    DWORD PTR [rsp+0x38],eax
   1400083a2:	mov    eax,DWORD PTR [rip+0x8ee0]        # 0x140011288
   1400083a8:	mov    DWORD PTR [rsp+0x30],eax
   1400083ac:	mov    al,BYTE PTR [rip+0x8eee]        # 0x1400112a0
   1400083b2:	mov    BYTE PTR [rsp+0x28],al
   1400083b6:	mov    al,BYTE PTR [rip+0x8ec4]        # 0x140011280
   1400083bc:	mov    BYTE PTR [rsp+0x20],al
   1400083c0:	call   0x140003774
   1400083c5:	jmp    0x140008651
   1400083ca:	mov    ecx,0x1002
   1400083cf:	call   0x1400067c8
   1400083d4:	mov    edi,r13d
   1400083d7:	jmp    0x140008657
   1400083dc:	mov    rcx,QWORD PTR [rip+0x910d]        # 0x1400114f0
   1400083e3:	call   0x1400034d4
   1400083e8:	jmp    0x140008651
   1400083ed:	call   0x14000340c
   1400083f2:	jmp    0x140008651
   1400083f7:	mov    r8,QWORD PTR [rip+0x90ea]        # 0x1400114e8
   1400083fe:	mov    rdx,QWORD PTR [rip+0x90c3]        # 0x1400114c8
   140008405:	mov    rcx,QWORD PTR [rip+0x909c]        # 0x1400114a8
   14000840c:	call   0x14000336c
   140008411:	jmp    0x140008651
   140008416:	mov    rdx,QWORD PTR [rip+0x90cb]        # 0x1400114e8
   14000841d:	mov    rcx,QWORD PTR [rip+0x90a4]        # 0x1400114c8
   140008424:	call   0x1400032dc
   140008429:	jmp    0x140008651
   14000842e:	mov    edx,DWORD PTR [rip+0x8eb4]        # 0x1400112e8
   140008434:	mov    rcx,QWORD PTR [rip+0x8e75]        # 0x1400112b0
   14000843b:	call   0x14000392c
   140008440:	jmp    0x140008651
   140008445:	mov    ecx,ebx
   140008447:	sub    ecx,0x9
   14000844a:	je     0x1400084ab
   14000844c:	sub    ecx,0x1
   14000844f:	je     0x1400084a1
   140008451:	sub    ecx,0x1
   140008454:	je     0x140008494
   140008456:	sub    ecx,0x1
   140008459:	je     0x140008487
   14000845b:	sub    ecx,0x1
   14000845e:	je     0x140008473
   140008460:	cmp    ecx,0x1
   140008463:	jne    0x140008653
   140008469:	mov    ecx,0x1004
   14000846e:	jmp    0x1400083cf
   140008473:	mov    rcx,QWORD PTR [rip+0x8cae]        # 0x140011128
   14000847a:	mov    dl,r14b
   14000847d:	call   0x140003e18
   140008482:	jmp    0x140008651
   140008487:	mov    cl,r14b
   14000848a:	call   0x140003c80
   14000848f:	jmp    0x140008651
   140008494:	mov    cl,r14b
   140008497:	call   0x1400039c8
   14000849c:	jmp    0x140008651
   1400084a1:	mov    ecx,0x1003
   1400084a6:	jmp    0x1400083cf
   1400084ab:	mov    rdx,QWORD PTR [rip+0x8e56]        # 0x140011308
   1400084b2:	mov    ecx,0xc
   1400084b7:	call   QWORD PTR [rip+0x3d9b]        # 0x14000c258
   1400084bd:	test   al,al
   1400084bf:	jne    0x1400083d4
   1400084c5:	call   QWORD PTR [rip+0x3b5d]        # 0x14000c028
   1400084cb:	jmp    0x140008651
   1400084d0:	mov    rcx,QWORD PTR [rip+0x8f91]        # 0x140011468
   1400084d7:	call   0x140004034
   1400084dc:	jmp    0x140008651
   1400084e1:	cmp    ebx,0x17
   1400084e4:	jg     0x140008583
   1400084ea:	je     0x140008579
   1400084f0:	mov    ecx,ebx
   1400084f2:	sub    ecx,0x10
   1400084f5:	je     0x14000856f
   1400084f7:	sub    ecx,0x1
   1400084fa:	je     0x14000855e
   1400084fc:	sub    ecx,0x1
   1400084ff:	je     0x140008554
   140008501:	sub    ecx,0x1
   140008504:	je     0x140008540
   140008506:	sub    ecx,0x1
   140008509:	je     0x140008536
   14000850b:	sub    ecx,0x1
   14000850e:	je     0x140008523
   140008510:	cmp    ecx,0x1
   140008513:	jne    0x140008653
   140008519:	call   0x140004b34
   14000851e:	jmp    0x140008651
   140008523:	mov    rcx,QWORD PTR [rip+0x8b5e]        # 0x140011088
   14000852a:	xor    edx,edx
   14000852c:	call   0x1400048a0
   140008531:	jmp    0x140008651
   140008536:	mov    ecx,0x1005
   14000853b:	jmp    0x1400083cf
   140008540:	cmp    BYTE PTR [rip+0x8c59],r13b        # 0x1400111a0
   140008547:	sete   cl
   14000854a:	call   0x1400044ec
   14000854f:	jmp    0x140008651
   140008554:	mov    ecx,0x1008
   140008559:	jmp    0x1400083cf
   14000855e:	mov    rcx,QWORD PTR [rip+0x8ae3]        # 0x140011048
   140008565:	call   0x1400041ec
   14000856a:	jmp    0x140008651
   14000856f:	mov    ecx,0x1007
   140008574:	jmp    0x1400083cf
   140008579:	mov    ecx,0x1006
   14000857e:	jmp    0x1400083cf
   140008583:	mov    ecx,ebx
   140008585:	sub    ecx,0x18
   140008588:	je     0x140008619
   14000858e:	sub    ecx,0x1
   140008591:	je     0x140008604
   140008593:	sub    ecx,0x1
   140008596:	je     0x1400085de
   140008598:	sub    ecx,0x1
   14000859b:	je     0x1400085c9
   14000859d:	sub    ecx,0x2
   1400085a0:	je     0x1400085c2
   1400085a2:	cmp    ecx,0x1
   1400085a5:	jne    0x140008653
   1400085ab:	test   edi,edi
   1400085ad:	je     0x1400085b6
   1400085af:	mov    ecx,edi
   1400085b1:	call   0x140007bf8
   1400085b6:	mov    ecx,esi
   1400085b8:	call   0x1400067c8
   1400085bd:	jmp    0x140008653
   1400085c2:	mov    ecx,0x1009
   1400085c7:	jmp    0x1400085b8
   1400085c9:	mov    rdx,QWORD PTR [rip+0x9038]        # 0x140011608
   1400085d0:	mov    rcx,QWORD PTR [rip+0x9051]        # 0x140011628
   1400085d7:	call   0x140008d08
   1400085dc:	jmp    0x140008651
   1400085de:	mov    rcx,QWORD PTR [rip+0x9043]        # 0x140011628
   1400085e5:	xor    edx,edx
   1400085e7:	mov    edi,r13d
   1400085ea:	call   QWORD PTR [rip+0x3c58]        # 0x14000c248
   1400085f0:	test   al,al
   1400085f2:	jne    0x140008653
   1400085f4:	call   QWORD PTR [rip+0x3a2e]        # 0x14000c028
   1400085fa:	cmp    eax,0x2
   1400085fd:	je     0x140008653
   1400085ff:	jmp    0x1400084c5
   140008604:	mov    rdx,QWORD PTR [rip+0x8ffd]        # 0x140011608
   14000860b:	mov    rcx,QWORD PTR [rip+0x9016]        # 0x140011628
   140008612:	call   0x140008800
   140008617:	jmp    0x140008651
   140008619:	mov    rax,QWORD PTR [rip+0x90a8]        # 0x1400116c8
   140008620:	mov    r9,QWORD PTR [rip+0x8fe1]        # 0x140011608
   140008627:	mov    r8b,BYTE PTR [rip+0x9032]        # 0x140011660
   14000862e:	mov    dl,BYTE PTR [rip+0x900c]        # 0x140011640
   140008634:	mov    rcx,QWORD PTR [rip+0x8fed]        # 0x140011628
   14000863b:	mov    QWORD PTR [rsp+0x28],rax
   140008640:	mov    rax,QWORD PTR [rip+0x9041]        # 0x140011688
   140008647:	mov    QWORD PTR [rsp+0x20],rax
   14000864c:	call   0x140008e6c
   140008651:	mov    edi,eax
   140008653:	test   edi,edi
   140008655:	jne    0x140008685
   140008657:	cmp    r15d,0x1
   14000865b:	je     0x14000866a
   14000865d:	lea    eax,[r15-0x3]
   140008661:	cmp    eax,0x4
   140008664:	ja     0x1400086f0
   14000866a:	mov    r8d,0x100
   140008670:	lea    rdx,[rbp-0x70]
   140008674:	mov    ecx,0x2019
   140008679:	call   0x140007cc0
   14000867e:	mov    ecx,0x1
   140008683:	jmp    0x1400086c3
   140008685:	cmp    r15d,0x7
   140008689:	jne    0x140008694
   14000868b:	mov    ecx,edi
   14000868d:	call   0x140007bf8
   140008692:	jmp    0x1400086f0
   140008694:	cmp    ebx,0x1e
   140008697:	je     0x1400086f0
   140008699:	cmp    edi,0x2
   14000869c:	jne    0x1400086d6
   14000869e:	cmp    ebx,0x16
   1400086a1:	ja     0x1400086d6
   1400086a3:	mov    eax,0x680004
   1400086a8:	bt     eax,ebx
   1400086ab:	jae    0x1400086d6
   1400086ad:	mov    r8d,0x100
   1400086b3:	lea    rdx,[rbp-0x70]
   1400086b7:	mov    ecx,0x2018
   1400086bc:	call   0x140007cc0
   1400086c1:	mov    ecx,edi
   1400086c3:	call   0x14000aa68
   1400086c8:	mov    rcx,rax
   1400086cb:	lea    rdx,[rbp-0x70]
   1400086cf:	call   0x14000686c
   1400086d4:	jmp    0x1400086f0
   1400086d6:	mov    ecx,edi
   1400086d8:	call   0x140007bf8
   1400086dd:	cmp    edi,0x57
   1400086e0:	jne    0x1400086f0
   1400086e2:	mov    ecx,edi
   1400086e4:	call   0x140007bf8
   1400086e9:	mov    ecx,esi
   1400086eb:	call   0x1400067c8
   1400086f0:	mov    rbx,QWORD PTR [rip+0x98c9]        # 0x140011fc0
   1400086f7:	test   rbx,rbx
   1400086fa:	je     0x140008713
   1400086fc:	mov    rcx,rbx
   1400086ff:	call   0x140001760
   140008704:	mov    rcx,rbx
   140008707:	call   0x140009d48
   14000870c:	mov    QWORD PTR [rip+0x98ad],r13        # 0x140011fc0
   140008713:	mov    eax,edi
   140008715:	mov    rcx,QWORD PTR [rbp+0x190]
   14000871c:	xor    rcx,rsp
   14000871f:	call   0x14000a0a0
   140008724:	mov    rbx,QWORD PTR [rsp+0x2f0]
   14000872c:	add    rsp,0x2a0
   140008733:	pop    r15
   140008735:	pop    r14
   140008737:	pop    r13
   140008739:	pop    r12
   14000873b:	pop    rdi
   14000873c:	pop    rsi
   14000873d:	pop    rbp
   14000873e:	ret    
   14000873f:	int3   
   140008740:	int3   
   140008741:	int3   
   140008742:	int3   
   140008743:	int3   
   140008744:	int3   
   140008745:	int3   
   140008746:	int3   
   140008747:	int3   
   140008748:	test   rcx,rcx
   14000874b:	je     0x1400087f8
   140008751:	mov    QWORD PTR [rsp+0x18],rbx
   140008756:	push   rbp
   140008757:	push   rsi
   140008758:	push   rdi
   140008759:	sub    rsp,0x40
   14000875d:	mov    rax,QWORD PTR [rip+0x889c]        # 0x140011000
   140008764:	xor    rax,rsp
   140008767:	mov    QWORD PTR [rsp+0x38],rax
   14000876c:	mov    rbp,rdx
   14000876f:	mov    rsi,rcx
   140008772:	test   rdx,rdx
   140008775:	je     0x1400087df
   140008777:	mov    r9d,0x2
   14000877d:	lea    rdx,[rsp+0x28]
   140008782:	lea    r8d,[r9+0xa]
   140008786:	call   QWORD PTR [rip+0x3b04]        # 0x14000c290
   14000878c:	test   eax,eax
   14000878e:	je     0x1400087df
   140008790:	mov    edi,DWORD PTR [rsp+0x28]
   140008794:	xor    ebx,ebx
   140008796:	test   edi,edi
   140008798:	je     0x1400087df
   14000879a:	lea    r8,[rsp+0x20]
   14000879f:	mov    edx,ebx
   1400087a1:	mov    rcx,rsi
   1400087a4:	call   QWORD PTR [rip+0x3aee]        # 0x14000c298
   1400087aa:	mov    rdx,QWORD PTR [rsp+0x20]
   1400087af:	cmp    BYTE PTR [rdx],0x2
   1400087b2:	je     0x1400087b9
   1400087b4:	cmp    BYTE PTR [rdx],0xd
   1400087b7:	jne    0x1400087d9
   1400087b9:	add    rdx,0x8
   1400087bd:	mov    rcx,rbp
   1400087c0:	call   QWORD PTR [rip+0x3aa2]        # 0x14000c268
   1400087c6:	test   eax,eax
   1400087c8:	je     0x1400087d9
   1400087ca:	mov    edx,ebx
   1400087cc:	mov    rcx,rsi
   1400087cf:	call   QWORD PTR [rip+0x3ab3]        # 0x14000c288
   1400087d5:	dec    edi
   1400087d7:	dec    ebx
   1400087d9:	inc    ebx
   1400087db:	cmp    ebx,edi
   1400087dd:	jb     0x14000879a
   1400087df:	mov    rcx,QWORD PTR [rsp+0x38]
   1400087e4:	xor    rcx,rsp
   1400087e7:	call   0x14000a0a0
   1400087ec:	mov    rbx,QWORD PTR [rsp+0x70]
   1400087f1:	add    rsp,0x40
   1400087f5:	pop    rdi
   1400087f6:	pop    rsi
   1400087f7:	pop    rbp
   1400087f8:	ret    
   1400087f9:	int3   
   1400087fa:	int3   
   1400087fb:	int3   
   1400087fc:	int3   
   1400087fd:	int3   
   1400087fe:	int3   
   1400087ff:	int3   
   140008800:	mov    QWORD PTR [rsp+0x18],rbx
   140008805:	push   rbp
   140008806:	push   rsi
   140008807:	push   rdi
   140008808:	lea    rbp,[rsp-0x350]
   140008810:	sub    rsp,0x450
   140008817:	mov    rax,QWORD PTR [rip+0x87e2]        # 0x140011000
   14000881e:	xor    rax,rsp
   140008821:	mov    QWORD PTR [rbp+0x340],rax
   140008828:	xor    ebx,ebx
   14000882a:	xor    eax,eax
   14000882c:	and    QWORD PTR [rsp+0x20],rbx
   140008831:	mov    rsi,rdx
   140008834:	and    DWORD PTR [rsp+0x28],ebx
   140008838:	mov    rdi,rcx
   14000883b:	mov    QWORD PTR [rsp+0x2c],rax
   140008840:	test   rdx,rdx
   140008843:	jne    0x14000884d
   140008845:	lea    ebx,[rdx+0x57]
   140008848:	jmp    0x140008945
   14000884d:	lea    rdx,[rsp+0x20]
   140008852:	call   QWORD PTR [rip+0x39e0]        # 0x14000c238
   140008858:	test   al,al
   14000885a:	jne    0x140008874
   14000885c:	call   QWORD PTR [rip+0x37c6]        # 0x14000c028
   140008862:	cmp    eax,0x2
   140008865:	je     0x140008874
   140008867:	call   QWORD PTR [rip+0x37bb]        # 0x14000c028
   14000886d:	mov    ebx,eax
   14000886f:	jmp    0x140008935
   140008874:	mov    rcx,QWORD PTR [rsp+0x20]
   140008879:	test   rcx,rcx
   14000887c:	je     0x140008916
   140008882:	mov    r9d,0x2
   140008888:	lea    rdx,[rsp+0x28]
   14000888d:	lea    r8d,[r9+0xa]
   140008891:	call   QWORD PTR [rip+0x39f9]        # 0x14000c290
   140008897:	test   eax,eax
   140008899:	je     0x1400088de
   14000889b:	mov    rcx,QWORD PTR [rsp+0x20]
   1400088a0:	cmp    DWORD PTR [rsp+0x28],ebx
   1400088a4:	jne    0x1400088b3
   1400088a6:	call   QWORD PTR [rip+0x37ec]        # 0x14000c098
   1400088ac:	xor    ecx,ecx
   1400088ae:	mov    QWORD PTR [rsp+0x20],rcx
   1400088b3:	test   rcx,rcx
   1400088b6:	je     0x140008916
   1400088b8:	mov    rdx,rsi
   1400088bb:	call   0x140008748
   1400088c0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400088c5:	lea    rdx,[rsp+0x28]
   1400088ca:	mov    r9d,0x2
   1400088d0:	lea    r8d,[r9+0xa]
   1400088d4:	call   QWORD PTR [rip+0x39b6]        # 0x14000c290
   1400088da:	test   eax,eax
   1400088dc:	jne    0x1400088e5
   1400088de:	mov    ebx,0x538
   1400088e3:	jmp    0x140008935
   1400088e5:	cmp    DWORD PTR [rsp+0x28],ebx
   1400088e9:	jne    0x1400088ff
   1400088eb:	mov    rcx,QWORD PTR [rsp+0x20]
   1400088f0:	call   QWORD PTR [rip+0x37a2]        # 0x14000c098
   1400088f6:	xor    edx,edx
   1400088f8:	mov    QWORD PTR [rsp+0x20],rdx
   1400088fd:	jmp    0x140008904
   1400088ff:	mov    rdx,QWORD PTR [rsp+0x20]
   140008904:	mov    rcx,rdi
   140008907:	call   QWORD PTR [rip+0x393b]        # 0x14000c248
   14000890d:	test   al,al
   14000890f:	jne    0x140008935
   140008911:	jmp    0x140008867
   140008916:	mov    r8d,0x200
   14000891c:	lea    rdx,[rsp+0x40]
   140008921:	mov    ecx,0x201d
   140008926:	call   0x140007cc0
   14000892b:	lea    rcx,[rsp+0x40]
   140008930:	call   0x140006774
   140008935:	mov    rcx,QWORD PTR [rsp+0x20]
   14000893a:	test   rcx,rcx
   14000893d:	je     0x140008945
   14000893f:	call   QWORD PTR [rip+0x3753]        # 0x14000c098
   140008945:	mov    eax,ebx
   140008947:	mov    rcx,QWORD PTR [rbp+0x340]
   14000894e:	xor    rcx,rsp
   140008951:	call   0x14000a0a0
   140008956:	mov    rbx,QWORD PTR [rsp+0x480]
   14000895e:	add    rsp,0x450
   140008965:	pop    rdi
   140008966:	pop    rsi
   140008967:	pop    rbp
   140008968:	ret    
   140008969:	int3   
   14000896a:	int3   
   14000896b:	int3   
   14000896c:	int3   
   14000896d:	int3   
   14000896e:	int3   
   14000896f:	int3   
   140008970:	mov    QWORD PTR [rsp+0x20],rbx
   140008975:	push   rbp
   140008976:	push   rsi
   140008977:	push   rdi
   140008978:	push   r12
   14000897a:	push   r13
   14000897c:	push   r14
   14000897e:	push   r15
   140008980:	lea    rbp,[rsp-0x2870]
   140008988:	mov    eax,0x2970
   14000898d:	call   0x14000ab00
   140008992:	sub    rsp,rax
   140008995:	mov    rax,QWORD PTR [rip+0x8664]        # 0x140011000
   14000899c:	xor    rax,rsp
   14000899f:	mov    QWORD PTR [rbp+0x2860],rax
   1400089a6:	lea    rsi,[r8+0x8]
   1400089aa:	mov    r13d,ecx
   1400089ad:	xor    r12d,r12d
   1400089b0:	mov    rcx,rsi
   1400089b3:	mov    rdi,r8
   1400089b6:	mov    QWORD PTR [rsp+0x48],r12
   1400089bb:	mov    r15,rdx
   1400089be:	call   QWORD PTR [rip+0x38e4]        # 0x14000c2a8
   1400089c4:	mov    ebx,0x800
   1400089c9:	mov    DWORD PTR [rsp+0x40],0x400
   1400089d1:	mov    r14d,eax
   1400089d4:	lea    r9,[rsp+0x40]
   1400089d9:	lea    rax,[rsp+0x58]
   1400089de:	mov    DWORD PTR [rsp+0x44],ebx
   1400089e2:	mov    QWORD PTR [rsp+0x30],rax
   1400089e7:	lea    r8,[rbp+0x1060]
   1400089ee:	lea    rax,[rsp+0x44]
   1400089f3:	mov    rdx,rsi
   1400089f6:	mov    QWORD PTR [rsp+0x28],rax
   1400089fb:	xor    ecx,ecx
   1400089fd:	lea    rax,[rbp+0x60]
   140008a01:	mov    QWORD PTR [rsp+0x20],rax
   140008a06:	call   QWORD PTR [rip+0x38b4]        # 0x14000c2c0
   140008a0c:	test   eax,eax
   140008a0e:	je     0x140008b08
   140008a14:	cmp    WORD PTR [rbp+0x60],r12w
   140008a19:	je     0x140008a8e
   140008a1b:	mov    eax,ebx
   140008a1d:	lea    rcx,[rbp+0x60]
   140008a21:	cmp    WORD PTR [rcx],r12w
   140008a25:	je     0x140008a31
   140008a27:	add    rcx,0x2
   140008a2b:	sub    rax,0x1
   140008a2f:	jne    0x140008a21
   140008a31:	test   rax,rax
   140008a34:	je     0x140008a8e
   140008a36:	mov    rdx,rbx
   140008a39:	mov    rcx,rbx
   140008a3c:	sub    rdx,rax
   140008a3f:	lea    rax,[rbp+0x60]
   140008a43:	lea    rax,[rax+rdx*2]
   140008a47:	sub    rcx,rdx
   140008a4a:	je     0x140008a86
   140008a4c:	lea    r8,[rdx+0x7ffff7fe]
   140008a53:	add    r8,rcx
   140008a56:	lea    rdx,[rip+0x3c93]        # 0x14000c6f0
   140008a5d:	sub    rdx,rax
   140008a60:	test   r8,r8
   140008a63:	je     0x140008a81
   140008a65:	movzx  r9d,WORD PTR [rdx+rax*1]
   140008a6a:	test   r9w,r9w
   140008a6e:	je     0x140008a81
   140008a70:	mov    WORD PTR [rax],r9w
   140008a74:	dec    r8
   140008a77:	add    rax,0x2
   140008a7b:	sub    rcx,0x1
   140008a7f:	jne    0x140008a60
   140008a81:	test   rcx,rcx
   140008a84:	jne    0x140008a8a
   140008a86:	sub    rax,0x2
   140008a8a:	mov    WORD PTR [rax],r12w
   140008a8e:	mov    rax,rbx
   140008a91:	lea    rcx,[rbp+0x60]
   140008a95:	cmp    WORD PTR [rcx],r12w
   140008a99:	je     0x140008aa5
   140008a9b:	add    rcx,0x2
   140008a9f:	sub    rax,0x1
   140008aa3:	jne    0x140008a95
   140008aa5:	test   rax,rax
   140008aa8:	je     0x140008b7a
   140008aae:	mov    rdx,rbx
   140008ab1:	mov    rcx,rbx
   140008ab4:	sub    rdx,rax
   140008ab7:	lea    rax,[rbp+0x60]
   140008abb:	lea    rax,[rax+rdx*2]
   140008abf:	sub    rcx,rdx
   140008ac2:	je     0x140008afe
   140008ac4:	lea    r8,[rdx+0x7ffff7fe]
   140008acb:	add    r8,rcx
   140008ace:	lea    rdx,[rbp+0x1060]
   140008ad5:	sub    rdx,rax
   140008ad8:	test   r8,r8
   140008adb:	je     0x140008af9
   140008add:	movzx  r9d,WORD PTR [rdx+rax*1]
   140008ae2:	test   r9w,r9w
   140008ae6:	je     0x140008af9
   140008ae8:	mov    WORD PTR [rax],r9w
   140008aec:	dec    r8
   140008aef:	add    rax,0x2
   140008af3:	sub    rcx,0x1
   140008af7:	jne    0x140008ad8
   140008af9:	test   rcx,rcx
   140008afc:	jne    0x140008b02
   140008afe:	sub    rax,0x2
   140008b02:	mov    WORD PTR [rax],r12w
   140008b06:	jmp    0x140008b7a
   140008b08:	lea    rdx,[rsp+0x50]
   140008b0d:	mov    QWORD PTR [rsp+0x50],r12
   140008b12:	mov    rcx,rsi
   140008b15:	call   QWORD PTR [rip+0x37e5]        # 0x14000c300
   140008b1b:	lea    rdx,[rbp+0x60]
   140008b1f:	test   eax,eax
   140008b21:	je     0x140008b6d
   140008b23:	mov    rcx,QWORD PTR [rsp+0x50]
   140008b28:	lea    rax,[rbp+0x60]
   140008b2c:	mov    r9,rcx
   140008b2f:	mov    r8,rbx
   140008b32:	sub    r9,rax
   140008b35:	lea    rax,[r8+0x7ffff7fe]
   140008b3c:	test   rax,rax
   140008b3f:	je     0x140008b58
   140008b41:	movzx  eax,WORD PTR [r9+rdx*1]
   140008b46:	test   ax,ax
   140008b49:	je     0x140008b58
   140008b4b:	mov    WORD PTR [rdx],ax
   140008b4e:	add    rdx,0x2
   140008b52:	sub    r8,0x1
   140008b56:	jne    0x140008b35
   140008b58:	test   r8,r8
   140008b5b:	jne    0x140008b61
   140008b5d:	sub    rdx,0x2
   140008b61:	mov    WORD PTR [rdx],r12w
   140008b65:	call   QWORD PTR [rip+0x352d]        # 0x14000c098
   140008b6b:	jmp    0x140008b7a
   140008b6d:	mov    r8d,ebx
   140008b70:	mov    ecx,0x201f
   140008b75:	call   0x140007cc0
   140008b7a:	mov    al,BYTE PTR [rdi+0x1]
   140008b7d:	and    al,0xc0
   140008b7f:	jne    0x140008b88
   140008b81:	mov    ebx,0x2020
   140008b86:	jmp    0x140008ba1
   140008b88:	cmp    al,0x40
   140008b8a:	jne    0x140008b93
   140008b8c:	mov    ebx,0x2021
   140008b91:	jmp    0x140008ba1
   140008b93:	cmp    al,0x80
   140008b95:	mov    ebx,r12d
   140008b98:	setne  bl
   140008b9b:	add    ebx,0x2022
   140008ba1:	cmp    BYTE PTR [rdi],0xd
   140008ba4:	jne    0x140008bd8
   140008ba6:	movzx  edx,WORD PTR [rdi+0x2]
   140008baa:	sub    edx,r14d
   140008bad:	lea    eax,[rdx-0x8]
   140008bb0:	test   eax,eax
   140008bb2:	jle    0x140008bd8
   140008bb4:	mov    BYTE PTR [rsp+0x30],r12b
   140008bb9:	lea    rcx,[rsi+r14*1]
   140008bbd:	mov    QWORD PTR [rsp+0x28],r12
   140008bc2:	lea    r8,[rsp+0x48]
   140008bc7:	add    edx,0xfffffff8
   140008bca:	mov    QWORD PTR [rsp+0x20],r12
   140008bcf:	xor    r9d,r9d
   140008bd2:	call   QWORD PTR [rip+0x3750]        # 0x14000c328
   140008bd8:	mov    r8d,0x80
   140008bde:	lea    rdx,[rsp+0x60]
   140008be3:	mov    ecx,ebx
   140008be5:	call   0x140007cc0
   140008bea:	mov    r8d,0x800
   140008bf0:	lea    rdx,[rbp+0x1860]
   140008bf7:	mov    ecx,0x201e
   140008bfc:	call   0x140007cc0
   140008c01:	mov    rax,QWORD PTR [rsp+0x48]
   140008c06:	lea    edx,[r13+0x1]
   140008c0a:	mov    QWORD PTR [rsp+0x28],rax
   140008c0f:	lea    r9,[rbp+0x60]
   140008c13:	lea    rax,[rsp+0x60]
   140008c18:	mov    r8,r15
   140008c1b:	lea    rcx,[rbp+0x1860]
   140008c22:	mov    QWORD PTR [rsp+0x20],rax
   140008c27:	call   0x140006774
   140008c2c:	lea    rcx,[rip+0x3dc9]        # 0x14000c9fc
   140008c33:	call   0x140006774
   140008c38:	mov    ebx,DWORD PTR [rdi+0x4]
   140008c3b:	mov    edi,r12d
   140008c3e:	lea    rdx,[rip+0x3c93]        # 0x14000c8d8
   140008c45:	mov    rcx,r15
   140008c48:	lea    rsi,[rip+0x8b71]        # 0x1400117c0
   140008c4f:	call   QWORD PTR [rip+0x386b]        # 0x14000c4c0
   140008c55:	test   eax,eax
   140008c57:	lea    rdx,[rip+0x8a72]        # 0x1400116d0
   140008c5e:	cmovne rdx,rsi
   140008c62:	mov    ecx,DWORD PTR [rdx]
   140008c64:	test   ecx,ecx
   140008c66:	je     0x140008c93
   140008c68:	mov    eax,ecx
   140008c6a:	and    eax,ebx
   140008c6c:	cmp    eax,ecx
   140008c6e:	je     0x140008c76
   140008c70:	add    rdx,0x10
   140008c74:	jmp    0x140008c62
   140008c76:	mov    eax,DWORD PTR [rdx]
   140008c78:	not    eax
   140008c7a:	and    ebx,eax
   140008c7c:	mov    rdx,QWORD PTR [rdx+0x8]
   140008c80:	lea    rcx,[rip+0x45e9]        # 0x14000d270
   140008c87:	call   0x140006774
   140008c8c:	mov    edi,0x1
   140008c91:	jmp    0x140008c3e
   140008c93:	test   ebx,ebx
   140008c95:	je     0x140008caa
   140008c97:	mov    edx,ebx
   140008c99:	lea    rcx,[rip+0x45e0]        # 0x14000d280
   140008ca0:	call   0x140006774
   140008ca5:	mov    edi,0x1
   140008caa:	test   edi,edi
   140008cac:	jne    0x140008cba
   140008cae:	lea    rcx,[rip+0x45e3]        # 0x14000d298
   140008cb5:	call   0x140006774
   140008cba:	lea    rcx,[rip+0x3d3b]        # 0x14000c9fc
   140008cc1:	call   0x140006774
   140008cc6:	mov    rcx,QWORD PTR [rsp+0x48]
   140008ccb:	test   rcx,rcx
   140008cce:	je     0x140008cd6
   140008cd0:	call   QWORD PTR [rip+0x33c2]        # 0x14000c098
   140008cd6:	mov    rcx,QWORD PTR [rbp+0x2860]
   140008cdd:	xor    rcx,rsp
   140008ce0:	call   0x14000a0a0
   140008ce5:	mov    rbx,QWORD PTR [rsp+0x29c8]
   140008ced:	add    rsp,0x2970
   140008cf4:	pop    r15
   140008cf6:	pop    r14
   140008cf8:	pop    r13
   140008cfa:	pop    r12
   140008cfc:	pop    rdi
   140008cfd:	pop    rsi
   140008cfe:	pop    rbp
   140008cff:	ret    
   140008d00:	int3   
   140008d01:	int3   
   140008d02:	int3   
   140008d03:	int3   
   140008d04:	int3   
   140008d05:	int3   
   140008d06:	int3   
   140008d07:	int3   
   140008d08:	mov    QWORD PTR [rsp+0x18],rbx
   140008d0d:	push   rbp
   140008d0e:	push   rsi
   140008d0f:	push   rdi
   140008d10:	push   r14
   140008d12:	push   r15
   140008d14:	lea    rbp,[rsp-0x350]
   140008d1c:	sub    rsp,0x450
   140008d23:	mov    rax,QWORD PTR [rip+0x82d6]        # 0x140011000
   140008d2a:	xor    rax,rsp
   140008d2d:	mov    QWORD PTR [rbp+0x340],rax
   140008d34:	mov    r14,rdx
   140008d37:	xor    esi,esi
   140008d39:	and    QWORD PTR [rsp+0x20],rsi
   140008d3e:	lea    rdx,[rsp+0x20]
   140008d43:	and    DWORD PTR [rsp+0x28],esi
   140008d47:	xor    eax,eax
   140008d49:	mov    QWORD PTR [rsp+0x2c],rax
   140008d4e:	mov    r15,rcx
   140008d51:	call   QWORD PTR [rip+0x34e1]        # 0x14000c238
   140008d57:	test   al,al
   140008d59:	jne    0x140008d73
   140008d5b:	call   QWORD PTR [rip+0x32c7]        # 0x14000c028
   140008d61:	cmp    eax,0x2
   140008d64:	je     0x140008d73
   140008d66:	call   QWORD PTR [rip+0x32bc]        # 0x14000c028
   140008d6c:	mov    esi,eax
   140008d6e:	jmp    0x140008e2d
   140008d73:	mov    rcx,QWORD PTR [rsp+0x20]
   140008d78:	test   rcx,rcx
   140008d7b:	je     0x140008e0e
   140008d81:	mov    r9d,0x2
   140008d87:	lea    rdx,[rsp+0x28]
   140008d8c:	lea    r8d,[r9+0xa]
   140008d90:	call   QWORD PTR [rip+0x34fa]        # 0x14000c290
   140008d96:	test   eax,eax
   140008d98:	jne    0x140008da4
   140008d9a:	mov    esi,0x538
   140008d9f:	jmp    0x140008e2d
   140008da4:	cmp    DWORD PTR [rsp+0x28],esi
   140008da8:	jne    0x140008dba
   140008daa:	mov    rcx,QWORD PTR [rsp+0x20]
   140008daf:	call   QWORD PTR [rip+0x32e3]        # 0x14000c098
   140008db5:	and    QWORD PTR [rsp+0x20],rsi
   140008dba:	mov    rcx,QWORD PTR [rsp+0x20]
   140008dbf:	test   rcx,rcx
   140008dc2:	je     0x140008e0e
   140008dc4:	xor    edi,edi
   140008dc6:	lea    rbx,[rcx+0x8]
   140008dca:	cmp    DWORD PTR [rsp+0x28],esi
   140008dce:	jbe    0x140008e2d
   140008dd0:	cmp    BYTE PTR [rbx],0x2
   140008dd3:	je     0x140008dda
   140008dd5:	cmp    BYTE PTR [rbx],0xd
   140008dd8:	jne    0x140008dfd
   140008dda:	test   r14,r14
   140008ddd:	je     0x140008df0
   140008ddf:	lea    rdx,[rbx+0x8]
   140008de3:	mov    rcx,r14
   140008de6:	call   QWORD PTR [rip+0x347c]        # 0x14000c268
   140008dec:	test   eax,eax
   140008dee:	je     0x140008dfd
   140008df0:	mov    r8,rbx
   140008df3:	mov    rdx,r15
   140008df6:	mov    ecx,edi
   140008df8:	call   0x140008970
   140008dfd:	movzx  eax,WORD PTR [rbx+0x2]
   140008e01:	inc    edi
   140008e03:	add    rbx,rax
   140008e06:	cmp    edi,DWORD PTR [rsp+0x28]
   140008e0a:	jb     0x140008dd0
   140008e0c:	jmp    0x140008e2d
   140008e0e:	mov    r8d,0x200
   140008e14:	lea    rdx,[rsp+0x40]
   140008e19:	mov    ecx,0x201d
   140008e1e:	call   0x140007cc0
   140008e23:	lea    rcx,[rsp+0x40]
   140008e28:	call   0x140006774
   140008e2d:	mov    rcx,QWORD PTR [rsp+0x20]
   140008e32:	test   rcx,rcx
   140008e35:	je     0x140008e3d
   140008e37:	call   QWORD PTR [rip+0x325b]        # 0x14000c098
   140008e3d:	mov    eax,esi
   140008e3f:	mov    rcx,QWORD PTR [rbp+0x340]
   140008e46:	xor    rcx,rsp
   140008e49:	call   0x14000a0a0
   140008e4e:	mov    rbx,QWORD PTR [rsp+0x490]
   140008e56:	add    rsp,0x450
   140008e5d:	pop    r15
   140008e5f:	pop    r14
   140008e61:	pop    rdi
   140008e62:	pop    rsi
   140008e63:	pop    rbp
   140008e64:	ret    
   140008e65:	int3   
   140008e66:	int3   
   140008e67:	int3   
   140008e68:	int3   
   140008e69:	int3   
   140008e6a:	int3   
   140008e6b:	int3   
   140008e6c:	mov    rax,rsp
   140008e6f:	push   rbp
   140008e70:	push   rsi
   140008e71:	push   rdi
   140008e72:	push   r12
   140008e74:	push   r13
   140008e76:	push   r14
   140008e78:	push   r15
   140008e7a:	lea    rbp,[rax-0x4f]
   140008e7e:	sub    rsp,0xf0
   140008e85:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140008e8e:	mov    QWORD PTR [rax+0x10],rbx
   140008e92:	mov    rax,QWORD PTR [rip+0x8167]        # 0x140011000
   140008e99:	xor    rax,rsp
   140008e9c:	mov    QWORD PTR [rbp+0xf],rax
   140008ea0:	mov    r14,r9
   140008ea3:	mov    r12b,r8b
   140008ea6:	mov    r15b,dl
   140008ea9:	mov    r13,rcx
   140008eac:	mov    rsi,QWORD PTR [rbp+0x77]
   140008eb0:	mov    rdi,QWORD PTR [rbp+0x7f]
   140008eb4:	xor    ecx,ecx
   140008eb6:	mov    ebx,ecx
   140008eb8:	mov    QWORD PTR [rsp+0x30],rcx
   140008ebd:	mov    DWORD PTR [rbp-0x1],ecx
   140008ec0:	xor    eax,eax
   140008ec2:	mov    QWORD PTR [rbp+0x3],rax
   140008ec6:	mov    QWORD PTR [rsp+0x38],rcx
   140008ecb:	mov    DWORD PTR [rsp+0x40],ecx
   140008ecf:	mov    QWORD PTR [rsp+0x48],rcx
   140008ed4:	mov    QWORD PTR [rbp-0x9],0x7
   140008edc:	mov    QWORD PTR [rbp-0x11],rcx
   140008ee0:	mov    WORD PTR [rbp-0x21],cx
   140008ee4:	test   r9,r9
   140008ee7:	je     0x140009317
   140008eed:	test   dl,dl
   140008eef:	jne    0x140008efa
   140008ef1:	test   r8b,r8b
   140008ef4:	je     0x140009317
   140008efa:	test   rsi,rsi
   140008efd:	je     0x140008f04
   140008eff:	cmp    WORD PTR [rsi],cx
   140008f02:	jne    0x140008f0b
   140008f04:	lea    rsi,[rip+0x43a5]        # 0x14000d2b0
   140008f0b:	lea    rdx,[rsp+0x30]
   140008f10:	mov    rcx,r13
   140008f13:	call   QWORD PTR [rip+0x331f]        # 0x14000c238
   140008f19:	test   al,al
   140008f1b:	jne    0x140008f35
   140008f1d:	call   QWORD PTR [rip+0x3105]        # 0x14000c028
   140008f23:	cmp    eax,0x2
   140008f26:	je     0x140008f35
   140008f28:	call   QWORD PTR [rip+0x30fa]        # 0x14000c028
   140008f2e:	mov    ebx,eax
   140008f30:	jmp    0x14000931c
   140008f35:	mov    rcx,QWORD PTR [rsp+0x30]
   140008f3a:	test   rcx,rcx
   140008f3d:	je     0x140008f79
   140008f3f:	mov    r9d,0x2
   140008f45:	lea    r8d,[r9+0xa]
   140008f49:	lea    rdx,[rbp-0x1]
   140008f4d:	call   QWORD PTR [rip+0x333d]        # 0x14000c290
   140008f53:	test   eax,eax
   140008f55:	jne    0x140008f61
   140008f57:	mov    ebx,0x538
   140008f5c:	jmp    0x14000931c
   140008f61:	mov    rcx,QWORD PTR [rsp+0x30]
   140008f66:	cmp    DWORD PTR [rbp-0x1],0x0
   140008f6a:	jne    0x140008f79
   140008f6c:	call   QWORD PTR [rip+0x3126]        # 0x14000c098
   140008f72:	xor    ecx,ecx
   140008f74:	mov    QWORD PTR [rsp+0x30],rcx
   140008f79:	mov    rdx,r14
   140008f7c:	call   0x140008748
   140008f81:	mov    edx,0x1
   140008f86:	lea    rcx,[rbp-0x79]
   140008f8a:	call   QWORD PTR [rip+0x32e0]        # 0x14000c270
   140008f90:	xor    edx,edx
   140008f92:	mov    r8,QWORD PTR [rsp+0x30]
   140008f97:	test   r8,r8
   140008f9a:	setne  dl
   140008f9d:	xor    r9d,r9d
   140008fa0:	lea    rcx,[rbp-0x79]
   140008fa4:	call   QWORD PTR [rip+0x32f6]        # 0x14000c2a0
   140008faa:	lea    rax,[rsp+0x40]
   140008faf:	mov    QWORD PTR [rsp+0x20],rax
   140008fb4:	lea    r9,[rsp+0x38]
   140008fb9:	mov    edx,0x1
   140008fbe:	lea    r8d,[rdx+0x7]
   140008fc2:	lea    rcx,[rbp-0x79]
   140008fc6:	call   QWORD PTR [rip+0x334c]        # 0x14000c318
   140008fcc:	mov    rcx,QWORD PTR [rsp+0x30]
   140008fd1:	test   rcx,rcx
   140008fd4:	je     0x140008fe2
   140008fd6:	call   QWORD PTR [rip+0x30bc]        # 0x14000c098
   140008fdc:	and    QWORD PTR [rsp+0x30],0x0
   140008fe2:	mov    rdx,QWORD PTR [rsp+0x38]
   140008fe7:	lea    rcx,[rbp-0x29]
   140008feb:	call   0x1400094e4
   140008ff0:	cmp    QWORD PTR [rbp-0x11],0x0
   140008ff5:	jne    0x140009007
   140008ff7:	lea    rdx,[rip+0x42ba]        # 0x14000d2b8
   140008ffe:	lea    rcx,[rbp-0x29]
   140009002:	call   0x1400094e4
   140009007:	mov    rcx,QWORD PTR [rsp+0x38]
   14000900c:	test   rcx,rcx
   14000900f:	je     0x14000901d
   140009011:	call   QWORD PTR [rip+0x3081]        # 0x14000c098
   140009017:	and    QWORD PTR [rsp+0x38],0x0
   14000901d:	lea    rdx,[rsp+0x38]
   140009022:	mov    rcx,r14
   140009025:	call   QWORD PTR [rip+0x32d5]        # 0x14000c300
   14000902b:	xor    r14d,r14d
   14000902e:	test   al,al
   140009030:	jne    0x14000903f
   140009032:	call   QWORD PTR [rip+0x2ff0]        # 0x14000c028
   140009038:	mov    ebx,eax
   14000903a:	jmp    0x14000931f
   14000903f:	test   rdi,rdi
   140009042:	je     0x140009079
   140009044:	cmp    WORD PTR [rdi],r14w
   140009048:	je     0x140009079
   14000904a:	lea    rdx,[rip+0x3857]        # 0x14000c8a8
   140009051:	mov    rcx,r13
   140009054:	call   QWORD PTR [rip+0x3466]        # 0x14000c4c0
   14000905a:	test   eax,eax
   14000905c:	je     0x140009070
   14000905e:	mov    ebx,0x57
   140009063:	mov    ecx,ebx
   140009065:	call   QWORD PTR [rip+0x2fcd]        # 0x14000c038
   14000906b:	jmp    0x14000931f
   140009070:	lea    rdx,[rip+0x4249]        # 0x14000d2c0
   140009077:	jmp    0x140009080
   140009079:	lea    rdx,[rip+0x4250]        # 0x14000d2d0
   140009080:	lea    rcx,[rbp-0x29]
   140009084:	call   0x1400093cc
   140009089:	test   r15b,r15b
   14000908c:	je     0x14000909e
   14000908e:	lea    rdx,[rip+0x4247]        # 0x14000d2dc
   140009095:	lea    rcx,[rbp-0x29]
   140009099:	call   0x1400093cc
   14000909e:	test   r12b,r12b
   1400090a1:	je     0x1400090b3
   1400090a3:	lea    rdx,[rip+0x4206]        # 0x14000d2b0
   1400090aa:	lea    rcx,[rbp-0x29]
   1400090ae:	call   0x1400093cc
   1400090b3:	mov    r12d,0x7
   1400090b9:	mov    QWORD PTR [rbp-0x31],r12
   1400090bd:	mov    QWORD PTR [rbp-0x39],r14
   1400090c1:	mov    WORD PTR [rbp-0x49],r14w
   1400090c6:	lea    rdx,[rip+0x4217]        # 0x14000d2e4
   1400090cd:	lea    rcx,[rbp-0x51]
   1400090d1:	call   0x1400094e4
   1400090d6:	nop
   1400090d7:	or     r15,0xffffffffffffffff
   1400090db:	mov    r9,r15
   1400090de:	xor    r8d,r8d
   1400090e1:	lea    rdx,[rbp-0x51]
   1400090e5:	lea    rcx,[rbp-0x29]
   1400090e9:	call   0x140009670
   1400090ee:	nop
   1400090ef:	cmp    QWORD PTR [rbp-0x31],0x8
   1400090f4:	jb     0x1400090ff
   1400090f6:	mov    rcx,QWORD PTR [rbp-0x49]
   1400090fa:	call   0x140009d48
   1400090ff:	mov    QWORD PTR [rbp-0x31],r12
   140009103:	mov    QWORD PTR [rbp-0x39],r14
   140009107:	mov    WORD PTR [rbp-0x49],r14w
   14000910c:	mov    rdx,rsi
   14000910f:	lea    rcx,[rbp-0x51]
   140009113:	call   0x1400094e4
   140009118:	nop
   140009119:	mov    r9,r15
   14000911c:	xor    r8d,r8d
   14000911f:	lea    rdx,[rbp-0x51]
   140009123:	lea    rcx,[rbp-0x29]
   140009127:	call   0x140009670
   14000912c:	nop
   14000912d:	cmp    QWORD PTR [rbp-0x31],0x8
   140009132:	jb     0x14000913d
   140009134:	mov    rcx,QWORD PTR [rbp-0x49]
   140009138:	call   0x140009d48
   14000913d:	mov    QWORD PTR [rbp-0x31],r12
   140009141:	mov    QWORD PTR [rbp-0x39],r14
   140009145:	mov    WORD PTR [rbp-0x49],r14w
   14000914a:	lea    rdx,[rip+0x4197]        # 0x14000d2e8
   140009151:	lea    rcx,[rbp-0x51]
   140009155:	call   0x1400094e4
   14000915a:	nop
   14000915b:	mov    r9,r15
   14000915e:	xor    r8d,r8d
   140009161:	lea    rdx,[rbp-0x51]
   140009165:	lea    rcx,[rbp-0x29]
   140009169:	call   0x140009670
   14000916e:	nop
   14000916f:	cmp    QWORD PTR [rbp-0x31],0x8
   140009174:	jb     0x14000917f
   140009176:	mov    rcx,QWORD PTR [rbp-0x49]
   14000917a:	call   0x140009d48
   14000917f:	mov    QWORD PTR [rbp-0x31],r12
   140009183:	mov    QWORD PTR [rbp-0x39],r14
   140009187:	mov    WORD PTR [rbp-0x49],r14w
   14000918c:	mov    rdx,QWORD PTR [rsp+0x38]
   140009191:	lea    rcx,[rbp-0x51]
   140009195:	call   0x1400094e4
   14000919a:	nop
   14000919b:	mov    r9,r15
   14000919e:	xor    r8d,r8d
   1400091a1:	lea    rdx,[rbp-0x51]
   1400091a5:	lea    rcx,[rbp-0x29]
   1400091a9:	call   0x140009670
   1400091ae:	nop
   1400091af:	cmp    QWORD PTR [rbp-0x31],0x8
   1400091b4:	jb     0x1400091bf
   1400091b6:	mov    rcx,QWORD PTR [rbp-0x49]
   1400091ba:	call   0x140009d48
   1400091bf:	test   rdi,rdi
   1400091c2:	je     0x140009252
   1400091c8:	cmp    WORD PTR [rdi],r14w
   1400091cc:	je     0x140009252
   1400091d2:	mov    QWORD PTR [rbp-0x31],r12
   1400091d6:	mov    QWORD PTR [rbp-0x39],r14
   1400091da:	mov    WORD PTR [rbp-0x49],r14w
   1400091df:	lea    rdx,[rip+0x40fe]        # 0x14000d2e4
   1400091e6:	lea    rcx,[rbp-0x51]
   1400091ea:	call   0x1400094e4
   1400091ef:	nop
   1400091f0:	mov    r9,r15
   1400091f3:	xor    r8d,r8d
   1400091f6:	lea    rdx,[rbp-0x51]
   1400091fa:	lea    rcx,[rbp-0x29]
   1400091fe:	call   0x140009670
   140009203:	nop
   140009204:	cmp    QWORD PTR [rbp-0x31],0x8
   140009209:	jb     0x140009214
   14000920b:	mov    rcx,QWORD PTR [rbp-0x49]
   14000920f:	call   0x140009d48
   140009214:	mov    QWORD PTR [rbp-0x31],r12
   140009218:	mov    QWORD PTR [rbp-0x39],r14
   14000921c:	mov    WORD PTR [rbp-0x49],r14w
   140009221:	mov    rdx,rdi
   140009224:	lea    rcx,[rbp-0x51]
   140009228:	call   0x1400094e4
   14000922d:	nop
   14000922e:	mov    r9,r15
   140009231:	xor    r8d,r8d
   140009234:	lea    rdx,[rbp-0x51]
   140009238:	lea    rcx,[rbp-0x29]
   14000923c:	call   0x140009670
   140009241:	nop
   140009242:	cmp    QWORD PTR [rbp-0x31],0x8
   140009247:	jb     0x140009252
   140009249:	mov    rcx,QWORD PTR [rbp-0x49]
   14000924d:	call   0x140009d48
   140009252:	mov    QWORD PTR [rbp-0x31],r12
   140009256:	mov    QWORD PTR [rbp-0x39],r14
   14000925a:	mov    WORD PTR [rbp-0x49],r14w
   14000925f:	lea    rdx,[rip+0x408a]        # 0x14000d2f0
   140009266:	lea    rcx,[rbp-0x51]
   14000926a:	call   0x1400094e4
   14000926f:	nop
   140009270:	mov    r9,r15
   140009273:	xor    r8d,r8d
   140009276:	lea    rdx,[rbp-0x51]
   14000927a:	lea    rcx,[rbp-0x29]
   14000927e:	call   0x140009670
   140009283:	nop
   140009284:	cmp    QWORD PTR [rbp-0x31],0x8
   140009289:	jb     0x140009294
   14000928b:	mov    rcx,QWORD PTR [rbp-0x49]
   14000928f:	call   0x140009d48
   140009294:	lea    rcx,[rbp-0x21]
   140009298:	cmp    QWORD PTR [rbp-0x9],0x8
   14000929d:	cmovae rcx,QWORD PTR [rbp-0x21]
   1400092a2:	lea    r9,[rsp+0x40]
   1400092a7:	lea    r8,[rsp+0x48]
   1400092ac:	mov    edx,0x1
   1400092b1:	call   QWORD PTR [rip+0x3051]        # 0x14000c308
   1400092b7:	test   al,al
   1400092b9:	je     0x140009032
   1400092bf:	mov    rcx,QWORD PTR [rsp+0x48]
   1400092c4:	test   rcx,rcx
   1400092c7:	je     0x1400092fb
   1400092c9:	lea    r9,[rsp+0x54]
   1400092ce:	lea    r8,[rsp+0x30]
   1400092d3:	lea    rdx,[rsp+0x50]
   1400092d8:	call   QWORD PTR [rip+0x2fa2]        # 0x14000c280
   1400092de:	test   al,al
   1400092e0:	je     0x140009032
   1400092e6:	mov    eax,DWORD PTR [rsp+0x50]
   1400092ea:	neg    eax
   1400092ec:	sbb    rdx,rdx
   1400092ef:	and    rdx,QWORD PTR [rsp+0x30]
   1400092f4:	mov    QWORD PTR [rsp+0x30],rdx
   1400092f9:	jmp    0x140009300
   1400092fb:	mov    rdx,QWORD PTR [rsp+0x30]
   140009300:	mov    rcx,r13
   140009303:	call   QWORD PTR [rip+0x2f3f]        # 0x14000c248
   140009309:	mov    QWORD PTR [rsp+0x30],r14
   14000930e:	test   al,al
   140009310:	jne    0x14000932f
   140009312:	jmp    0x140009032
   140009317:	mov    ebx,0x57
   14000931c:	xor    r14d,r14d
   14000931f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009324:	test   rcx,rcx
   140009327:	je     0x14000932f
   140009329:	call   QWORD PTR [rip+0x2d69]        # 0x14000c098
   14000932f:	mov    rcx,QWORD PTR [rsp+0x38]
   140009334:	test   rcx,rcx
   140009337:	je     0x14000933f
   140009339:	call   QWORD PTR [rip+0x2d59]        # 0x14000c098
   14000933f:	mov    rcx,QWORD PTR [rsp+0x48]
   140009344:	test   rcx,rcx
   140009347:	je     0x140009354
   140009349:	call   QWORD PTR [rip+0x2d49]        # 0x14000c098
   14000934f:	mov    QWORD PTR [rsp+0x48],r14
   140009354:	cmp    QWORD PTR [rbp-0x9],0x8
   140009359:	jb     0x140009364
   14000935b:	mov    rcx,QWORD PTR [rbp-0x21]
   14000935f:	call   0x140009d48
   140009364:	mov    eax,ebx
   140009366:	mov    rcx,QWORD PTR [rbp+0xf]
   14000936a:	xor    rcx,rsp
   14000936d:	call   0x14000a0a0
   140009372:	mov    rbx,QWORD PTR [rsp+0x138]
   14000937a:	add    rsp,0xf0
   140009381:	pop    r15
   140009383:	pop    r14
   140009385:	pop    r13
   140009387:	pop    r12
   140009389:	pop    rdi
   14000938a:	pop    rsi
   14000938b:	pop    rbp
   14000938c:	ret    
   14000938d:	int3   
   14000938e:	int3   
   14000938f:	int3   
   140009390:	int3   
   140009391:	int3   
   140009392:	int3   
   140009393:	int3   
   140009394:	rex push rbx
   140009396:	sub    rsp,0x20
   14000939a:	cmp    QWORD PTR [rcx+0x20],0x8
   14000939f:	mov    rbx,rcx
   1400093a2:	jb     0x1400093ad
   1400093a4:	mov    rcx,QWORD PTR [rcx+0x8]
   1400093a8:	call   0x140009d48
   1400093ad:	xor    eax,eax
   1400093af:	mov    QWORD PTR [rbx+0x20],0x7
   1400093b7:	mov    QWORD PTR [rbx+0x18],rax
   1400093bb:	mov    WORD PTR [rbx+0x8],ax
   1400093bf:	add    rsp,0x20
   1400093c3:	pop    rbx
   1400093c4:	ret    
   1400093c5:	int3   
   1400093c6:	int3   
   1400093c7:	int3   
   1400093c8:	int3   
   1400093c9:	int3   
   1400093ca:	int3   
   1400093cb:	int3   
   1400093cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400093d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400093d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400093db:	push   rdi
   1400093dc:	push   r14
   1400093de:	push   r15
   1400093e0:	sub    rsp,0x20
   1400093e4:	mov    rbp,rdx
   1400093e7:	mov    rdi,rcx
   1400093ea:	or     rdx,0xffffffffffffffff
   1400093ee:	mov    rsi,rdx
   1400093f1:	xor    r15d,r15d
   1400093f4:	inc    rsi
   1400093f7:	cmp    WORD PTR [rbp+rsi*2+0x0],r15w
   1400093fd:	jne    0x1400093f4
   1400093ff:	cmp    QWORD PTR [rcx+0x20],0x8
   140009404:	lea    rbx,[rcx+0x8]
   140009408:	jb     0x14000940f
   14000940a:	mov    rax,QWORD PTR [rbx]
   14000940d:	jmp    0x140009412
   14000940f:	mov    rax,rbx
   140009412:	cmp    rbp,rax
   140009415:	jb     0x140009459
   140009417:	cmp    QWORD PTR [rcx+0x20],0x8
   14000941c:	jb     0x140009423
   14000941e:	mov    rcx,QWORD PTR [rbx]
   140009421:	jmp    0x140009426
   140009423:	mov    rcx,rbx
   140009426:	mov    rax,QWORD PTR [rdi+0x18]
   14000942a:	lea    rcx,[rcx+rax*2]
   14000942e:	cmp    rcx,rbp
   140009431:	jbe    0x140009459
   140009433:	cmp    QWORD PTR [rdi+0x20],0x8
   140009438:	jb     0x14000943d
   14000943a:	mov    rbx,QWORD PTR [rbx]
   14000943d:	sub    rbp,rbx
   140009440:	mov    r9,rsi
   140009443:	sar    rbp,1
   140009446:	mov    rdx,rdi
   140009449:	mov    r8,rbp
   14000944c:	mov    rcx,rdi
   14000944f:	call   0x140009670
   140009454:	mov    rdi,rax
   140009457:	jmp    0x1400094c2
   140009459:	sub    rdx,QWORD PTR [rdi+0x18]
   14000945d:	cmp    rdx,rsi
   140009460:	ja     0x140009467
   140009462:	call   0x140009bd8
   140009467:	test   rsi,rsi
   14000946a:	je     0x1400094c2
   14000946c:	mov    r14,QWORD PTR [rdi+0x18]
   140009470:	mov    rcx,rdi
   140009473:	add    r14,rsi
   140009476:	mov    rdx,r14
   140009479:	call   0x140009758
   14000947e:	test   al,al
   140009480:	je     0x1400094c2
   140009482:	mov    rdx,QWORD PTR [rdi+0x20]
   140009486:	cmp    rdx,0x8
   14000948a:	jb     0x140009491
   14000948c:	mov    rcx,QWORD PTR [rbx]
   14000948f:	jmp    0x140009494
   140009491:	mov    rcx,rbx
   140009494:	mov    rax,QWORD PTR [rdi+0x18]
   140009498:	lea    r9,[rsi+rsi*1]
   14000949c:	sub    rdx,rax
   14000949f:	mov    r8,rbp
   1400094a2:	add    rdx,rdx
   1400094a5:	lea    rcx,[rcx+rax*2]
   1400094a9:	call   QWORD PTR [rip+0x2f01]        # 0x14000c3b0
   1400094af:	cmp    QWORD PTR [rdi+0x20],0x8
   1400094b4:	mov    QWORD PTR [rdi+0x18],r14
   1400094b8:	jb     0x1400094bd
   1400094ba:	mov    rbx,QWORD PTR [rbx]
   1400094bd:	mov    WORD PTR [rbx+r14*2],r15w
   1400094c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400094c7:	mov    rax,rdi
   1400094ca:	mov    rbp,QWORD PTR [rsp+0x48]
   1400094cf:	mov    rsi,QWORD PTR [rsp+0x50]
   1400094d4:	add    rsp,0x20
   1400094d8:	pop    r15
   1400094da:	pop    r14
   1400094dc:	pop    rdi
   1400094dd:	ret    
   1400094de:	int3   
   1400094df:	int3   
   1400094e0:	int3   
   1400094e1:	int3   
   1400094e2:	int3   
   1400094e3:	int3   
   1400094e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400094e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400094ee:	mov    QWORD PTR [rsp+0x18],rsi
   1400094f3:	push   rdi
   1400094f4:	push   r14
   1400094f6:	push   r15
   1400094f8:	sub    rsp,0x20
   1400094fc:	or     r15,0xffffffffffffffff
   140009500:	mov    rsi,rdx
   140009503:	mov    r14,r15
   140009506:	xor    ebp,ebp
   140009508:	mov    rdi,rcx
   14000950b:	inc    r14
   14000950e:	cmp    WORD PTR [rdx+r14*2],bp
   140009513:	jne    0x14000950b
   140009515:	cmp    QWORD PTR [rcx+0x20],0x8
   14000951a:	lea    rbx,[rcx+0x8]
   14000951e:	jb     0x140009525
   140009520:	mov    rax,QWORD PTR [rbx]
   140009523:	jmp    0x140009528
   140009525:	mov    rax,rbx
   140009528:	cmp    rdx,rax
   14000952b:	jb     0x14000958f
   14000952d:	cmp    QWORD PTR [rcx+0x20],0x8
   140009532:	jb     0x140009539
   140009534:	mov    rax,QWORD PTR [rbx]
   140009537:	jmp    0x14000953c
   140009539:	mov    rax,rbx
   14000953c:	mov    rcx,QWORD PTR [rcx+0x18]
   140009540:	lea    rax,[rax+rcx*2]
   140009544:	cmp    rax,rdx
   140009547:	jbe    0x14000958f
   140009549:	cmp    QWORD PTR [rdi+0x20],0x8
   14000954e:	jb     0x140009553
   140009550:	mov    rbx,QWORD PTR [rbx]
   140009553:	sub    rsi,rbx
   140009556:	sar    rsi,1
   140009559:	cmp    rcx,rsi
   14000955c:	jae    0x140009563
   14000955e:	call   0x140009c34
   140009563:	mov    rax,QWORD PTR [rdi+0x18]
   140009567:	mov    r8,r15
   14000956a:	sub    rax,rsi
   14000956d:	mov    rcx,rdi
   140009570:	cmp    r14,rax
   140009573:	cmovb  rax,r14
   140009577:	lea    rdx,[rax+rsi*1]
   14000957b:	call   0x1400097d4
   140009580:	mov    r8,rsi
   140009583:	xor    edx,edx
   140009585:	mov    rcx,rdi
   140009588:	call   0x1400097d4
   14000958d:	jmp    0x1400095d6
   14000958f:	mov    rdx,r14
   140009592:	mov    rcx,rdi
   140009595:	call   0x140009758
   14000959a:	test   al,al
   14000959c:	je     0x1400095d6
   14000959e:	mov    rdx,QWORD PTR [rdi+0x20]
   1400095a2:	cmp    rdx,0x8
   1400095a6:	jb     0x1400095ad
   1400095a8:	mov    rcx,QWORD PTR [rbx]
   1400095ab:	jmp    0x1400095b0
   1400095ad:	mov    rcx,rbx
   1400095b0:	lea    r15,[r14+r14*1]
   1400095b4:	add    rdx,rdx
   1400095b7:	mov    r9,r15
   1400095ba:	mov    r8,rsi
   1400095bd:	call   QWORD PTR [rip+0x2ded]        # 0x14000c3b0
   1400095c3:	cmp    QWORD PTR [rdi+0x20],0x8
   1400095c8:	mov    QWORD PTR [rdi+0x18],r14
   1400095cc:	jb     0x1400095d1
   1400095ce:	mov    rbx,QWORD PTR [rbx]
   1400095d1:	mov    WORD PTR [r15+rbx*1],bp
   1400095d6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400095db:	mov    rax,rdi
   1400095de:	mov    rbp,QWORD PTR [rsp+0x48]
   1400095e3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400095e8:	add    rsp,0x20
   1400095ec:	pop    r15
   1400095ee:	pop    r14
   1400095f0:	pop    rdi
   1400095f1:	ret    
   1400095f2:	int3   
   1400095f3:	int3   
   1400095f4:	int3   
   1400095f5:	int3   
   1400095f6:	int3   
   1400095f7:	int3   
   1400095f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400095fd:	mov    QWORD PTR [rsp+0x10],rbp
   140009602:	mov    QWORD PTR [rsp+0x18],rsi
   140009607:	push   rdi
   140009608:	sub    rsp,0x20
   14000960c:	xor    ebp,ebp
   14000960e:	mov    rdi,r8
   140009611:	mov    rbx,rcx
   140009614:	test   dl,dl
   140009616:	je     0x140009643
   140009618:	cmp    QWORD PTR [rcx+0x20],0x8
   14000961d:	jb     0x140009643
   14000961f:	add    rcx,0x8
   140009623:	mov    rsi,QWORD PTR [rcx]
   140009626:	test   r8,r8
   140009629:	je     0x14000963b
   14000962b:	lea    r9,[r8+r8*1]
   14000962f:	mov    r8,rsi
   140009632:	lea    edx,[rbp+0x10]
   140009635:	call   QWORD PTR [rip+0x2d75]        # 0x14000c3b0
   14000963b:	mov    rcx,rsi
   14000963e:	call   0x140009d48
   140009643:	mov    rsi,QWORD PTR [rsp+0x40]
   140009648:	mov    QWORD PTR [rbx+0x20],0x7
   140009650:	mov    QWORD PTR [rbx+0x18],rdi
   140009654:	mov    WORD PTR [rbx+rdi*2+0x8],bp
   140009659:	mov    rbx,QWORD PTR [rsp+0x30]
   14000965e:	mov    rbp,QWORD PTR [rsp+0x38]
   140009663:	add    rsp,0x20
   140009667:	pop    rdi
   140009668:	ret    
   140009669:	int3   
   14000966a:	int3   
   14000966b:	int3   
   14000966c:	int3   
   14000966d:	int3   
   14000966e:	int3   
   14000966f:	int3   
   140009670:	mov    QWORD PTR [rsp+0x8],rbx
   140009675:	mov    QWORD PTR [rsp+0x10],rbp
   14000967a:	mov    QWORD PTR [rsp+0x18],rsi
   14000967f:	push   rdi
   140009680:	push   r14
   140009682:	push   r15
   140009684:	sub    rsp,0x20
   140009688:	mov    rsi,r9
   14000968b:	mov    r14,r8
   14000968e:	mov    rdi,rdx
   140009691:	mov    rbx,rcx
   140009694:	cmp    QWORD PTR [rdx+0x18],r8
   140009698:	jae    0x14000969f
   14000969a:	call   0x140009c34
   14000969f:	mov    rax,QWORD PTR [rdi+0x18]
   1400096a3:	sub    rax,r14
   1400096a6:	cmp    rax,rsi
   1400096a9:	cmovb  rsi,rax
   1400096ad:	or     rax,0xffffffffffffffff
   1400096b1:	sub    rax,QWORD PTR [rbx+0x18]
   1400096b5:	cmp    rax,rsi
   1400096b8:	ja     0x1400096bf
   1400096ba:	call   0x140009bd8
   1400096bf:	xor    r15d,r15d
   1400096c2:	test   rsi,rsi
   1400096c5:	je     0x140009733
   1400096c7:	mov    rbp,QWORD PTR [rbx+0x18]
   1400096cb:	mov    rcx,rbx
   1400096ce:	add    rbp,rsi
   1400096d1:	mov    rdx,rbp
   1400096d4:	call   0x140009758
   1400096d9:	test   al,al
   1400096db:	je     0x140009733
   1400096dd:	cmp    QWORD PTR [rdi+0x20],0x8
   1400096e2:	jb     0x1400096ea
   1400096e4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400096e8:	jmp    0x1400096ee
   1400096ea:	lea    rcx,[rdi+0x8]
   1400096ee:	mov    rdx,QWORD PTR [rbx+0x20]
   1400096f2:	lea    rdi,[rbx+0x8]
   1400096f6:	cmp    rdx,0x8
   1400096fa:	jb     0x140009701
   1400096fc:	mov    r10,QWORD PTR [rdi]
   1400096ff:	jmp    0x140009704
   140009701:	mov    r10,rdi
   140009704:	mov    rax,QWORD PTR [rbx+0x18]
   140009708:	lea    r8,[rcx+r14*2]
   14000970c:	sub    rdx,rax
   14000970f:	lea    r9,[rsi+rsi*1]
   140009713:	add    rdx,rdx
   140009716:	lea    rcx,[r10+rax*2]
   14000971a:	call   QWORD PTR [rip+0x2c90]        # 0x14000c3b0
   140009720:	cmp    QWORD PTR [rbx+0x20],0x8
   140009725:	mov    QWORD PTR [rbx+0x18],rbp
   140009729:	jb     0x14000972e
   14000972b:	mov    rdi,QWORD PTR [rdi]
   14000972e:	mov    WORD PTR [rdi+rbp*2],r15w
   140009733:	mov    rbp,QWORD PTR [rsp+0x48]
   140009738:	mov    rax,rbx
   14000973b:	mov    rbx,QWORD PTR [rsp+0x40]
   140009740:	mov    rsi,QWORD PTR [rsp+0x50]
   140009745:	add    rsp,0x20
   140009749:	pop    r15
   14000974b:	pop    r14
   14000974d:	pop    rdi
   14000974e:	ret    
   14000974f:	int3   
   140009750:	int3   
   140009751:	int3   
   140009752:	int3   
   140009753:	int3   
   140009754:	int3   
   140009755:	int3   
   140009756:	int3   
   140009757:	int3   
   140009758:	mov    QWORD PTR [rsp+0x8],rbx
   14000975d:	mov    QWORD PTR [rsp+0x10],rsi
   140009762:	push   rdi
   140009763:	sub    rsp,0x20
   140009767:	movabs rax,0x7ffffffffffffffe
   140009771:	mov    rsi,rdx
   140009774:	mov    rdi,rcx
   140009777:	cmp    rdx,rax
   14000977a:	jbe    0x140009781
   14000977c:	call   0x140009bd8
   140009781:	xor    ebx,ebx
   140009783:	cmp    QWORD PTR [rdi+0x20],rsi
   140009787:	jae    0x14000979a
   140009789:	mov    r8,QWORD PTR [rdi+0x18]
   14000978d:	mov    rdx,rsi
   140009790:	mov    rcx,rdi
   140009793:	call   0x140009898
   140009798:	jmp    0x1400097b7
   14000979a:	test   rsi,rsi
   14000979d:	jne    0x1400097ba
   14000979f:	cmp    QWORD PTR [rdi+0x20],0x8
   1400097a4:	mov    QWORD PTR [rdi+0x18],rbx
   1400097a8:	jb     0x1400097b0
   1400097aa:	mov    rdi,QWORD PTR [rdi+0x8]
   1400097ae:	jmp    0x1400097b4
   1400097b0:	add    rdi,0x8
   1400097b4:	mov    WORD PTR [rdi],bx
   1400097b7:	test   rsi,rsi
   1400097ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097bf:	setne  al
   1400097c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400097c7:	add    rsp,0x20
   1400097cb:	pop    rdi
   1400097cc:	ret    
   1400097cd:	int3   
   1400097ce:	int3   
   1400097cf:	int3   
   1400097d0:	int3   
   1400097d1:	int3   
   1400097d2:	int3   
   1400097d3:	int3   
   1400097d4:	mov    rax,rsp
   1400097d7:	mov    QWORD PTR [rax+0x8],rbx
   1400097db:	mov    QWORD PTR [rax+0x10],rbp
   1400097df:	mov    QWORD PTR [rax+0x18],rsi
   1400097e3:	mov    QWORD PTR [rax+0x20],rdi
   1400097e7:	push   r14
   1400097e9:	sub    rsp,0x20
   1400097ed:	mov    rsi,r8
   1400097f0:	mov    r14,rdx
   1400097f3:	mov    rdi,rcx
   1400097f6:	cmp    QWORD PTR [rcx+0x18],rdx
   1400097fa:	jae    0x140009801
   1400097fc:	call   0x140009c34
   140009801:	mov    r9,QWORD PTR [rdi+0x18]
   140009805:	sub    r9,r14
   140009808:	cmp    r9,rsi
   14000980b:	cmovb  rsi,r9
   14000980f:	xor    ebp,ebp
   140009811:	test   rsi,rsi
   140009814:	je     0x140009871
   140009816:	mov    rdx,QWORD PTR [rdi+0x20]
   14000981a:	lea    rbx,[rdi+0x8]
   14000981e:	cmp    rdx,0x8
   140009822:	jb     0x140009829
   140009824:	mov    r8,QWORD PTR [rbx]
   140009827:	jmp    0x14000982c
   140009829:	mov    r8,rbx
   14000982c:	cmp    rdx,0x8
   140009830:	jb     0x140009837
   140009832:	mov    rcx,QWORD PTR [rbx]
   140009835:	jmp    0x14000983a
   140009837:	mov    rcx,rbx
   14000983a:	sub    r9,rsi
   14000983d:	lea    rax,[r14+rsi*1]
   140009841:	sub    rdx,r14
   140009844:	lea    r8,[r8+rax*2]
   140009848:	add    r9,r9
   14000984b:	lea    rcx,[rcx+r14*2]
   14000984f:	add    rdx,rdx
   140009852:	call   QWORD PTR [rip+0x2c08]        # 0x14000c460
   140009858:	mov    rax,QWORD PTR [rdi+0x18]
   14000985c:	sub    rax,rsi
   14000985f:	cmp    QWORD PTR [rdi+0x20],0x8
   140009864:	mov    QWORD PTR [rdi+0x18],rax
   140009868:	jb     0x14000986d
   14000986a:	mov    rbx,QWORD PTR [rbx]
   14000986d:	mov    WORD PTR [rbx+rax*2],bp
   140009871:	mov    rbx,QWORD PTR [rsp+0x30]
   140009876:	mov    rax,rdi
   140009879:	mov    rdi,QWORD PTR [rsp+0x48]
   14000987e:	mov    rbp,QWORD PTR [rsp+0x38]
   140009883:	mov    rsi,QWORD PTR [rsp+0x40]
   140009888:	add    rsp,0x20
   14000988c:	pop    r14
   14000988e:	ret    
   14000988f:	int3   
   140009890:	int3   
   140009891:	int3   
   140009892:	int3   
   140009893:	int3   
   140009894:	int3   
   140009895:	int3   
   140009896:	int3   
   140009897:	int3   
   140009898:	mov    rax,rsp
   14000989b:	mov    QWORD PTR [rax+0x18],r8
   14000989f:	mov    QWORD PTR [rax+0x10],rdx
   1400098a3:	mov    QWORD PTR [rax+0x8],rcx
   1400098a7:	push   rbx
   1400098a8:	push   rsi
   1400098a9:	push   rdi
   1400098aa:	push   r14
   1400098ac:	push   r15
   1400098ae:	sub    rsp,0x60
   1400098b2:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   1400098ba:	mov    r14,r8
   1400098bd:	mov    rdi,rcx
   1400098c0:	mov    rbx,rdx
   1400098c3:	or     rbx,0x7
   1400098c7:	movabs r9,0x7ffffffffffffffe
   1400098d1:	cmp    rbx,r9
   1400098d4:	jbe    0x1400098db
   1400098d6:	mov    rbx,rdx
   1400098d9:	jmp    0x140009906
   1400098db:	mov    r8,QWORD PTR [rcx+0x20]
   1400098df:	mov    rcx,r8
   1400098e2:	shr    rcx,1
   1400098e5:	movabs rax,0xaaaaaaaaaaaaaaab
   1400098ef:	mul    rbx
   1400098f2:	shr    rdx,1
   1400098f5:	cmp    rdx,rcx
   1400098f8:	jae    0x140009906
   1400098fa:	sub    r9,rcx
   1400098fd:	cmp    r8,r9
   140009900:	ja     0x140009906
   140009902:	lea    rbx,[rcx+r8*1]
   140009906:	lea    rcx,[rbx+0x1]
   14000990a:	xor    esi,esi
   14000990c:	test   rcx,rcx
   14000990f:	jne    0x140009915
   140009911:	mov    ecx,esi
   140009913:	jmp    0x140009941
   140009915:	xor    edx,edx
   140009917:	or     rax,0xffffffffffffffff
   14000991b:	div    rcx
   14000991e:	cmp    rax,0x2
   140009922:	jae    0x140009941
   140009924:	xor    edx,edx
   140009926:	lea    rcx,[rsp+0x28]
   14000992b:	call   0x140001008
   140009930:	lea    rdx,[rip+0x5379]        # 0x14000ecb0
   140009937:	lea    rcx,[rsp+0x28]
   14000993c:	call   0x14000a506
   140009941:	add    rcx,rcx
   140009944:	call   0x140009cc8
   140009949:	mov    r15,rax
   14000994c:	jmp    0x140009970
   14000994e:	xor    esi,esi
   140009950:	mov    rdi,QWORD PTR [rsp+0x90]
   140009958:	mov    r14,QWORD PTR [rsp+0xa0]
   140009960:	mov    rbx,QWORD PTR [rsp+0x98]
   140009968:	mov    r15,QWORD PTR [rsp+0xa8]
   140009970:	test   r14,r14
   140009973:	je     0x14000999b
   140009975:	cmp    QWORD PTR [rdi+0x20],0x8
   14000997a:	jb     0x140009982
   14000997c:	mov    r8,QWORD PTR [rdi+0x8]
   140009980:	jmp    0x140009986
   140009982:	lea    r8,[rdi+0x8]
   140009986:	lea    r9,[r14+r14*1]
   14000998a:	lea    rdx,[rbx*2+0x2]
   140009992:	mov    rcx,r15
   140009995:	call   QWORD PTR [rip+0x2a15]        # 0x14000c3b0
   14000999b:	cmp    QWORD PTR [rdi+0x20],0x8
   1400099a0:	jb     0x1400099ab
   1400099a2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400099a6:	call   0x140009d48
   1400099ab:	lea    rax,[rdi+0x8]
   1400099af:	mov    QWORD PTR [rax],r15
   1400099b2:	mov    QWORD PTR [rdi+0x20],rbx
   1400099b6:	mov    QWORD PTR [rdi+0x18],r14
   1400099ba:	cmp    rbx,0x8
   1400099be:	cmovae rax,r15
   1400099c2:	mov    WORD PTR [rax+r14*2],si
   1400099c7:	add    rsp,0x60
   1400099cb:	pop    r15
   1400099cd:	pop    r14
   1400099cf:	pop    rdi
   1400099d0:	pop    rsi
   1400099d1:	pop    rbx
   1400099d2:	ret    
   1400099d3:	int3   
   1400099d4:	int3   
   1400099d5:	int3   
   1400099d6:	int3   
   1400099d7:	int3   
   1400099d8:	int3   
   1400099d9:	int3   
   1400099da:	int3   
   1400099db:	int3   
   1400099dc:	rex push rbp
   1400099de:	push   r14
   1400099e0:	push   r15
   1400099e2:	sub    rsp,0x90
   1400099e9:	lea    rbp,[rsp+0x20]
   1400099ee:	mov    QWORD PTR [rbp+0x90],rbx
   1400099f5:	mov    QWORD PTR [rbp+0x98],rsi
   1400099fc:	mov    QWORD PTR [rbp+0xa0],rdi
   140009a03:	mov    rax,QWORD PTR [rip+0x75f6]        # 0x140011000
   140009a0a:	xor    rax,rbp
   140009a0d:	mov    QWORD PTR [rbp+0x68],rax
   140009a11:	and    DWORD PTR [rbp+0x0],0x0
   140009a15:	mov    eax,DWORD PTR [rsp]
   140009a18:	sub    rsp,0x10
   140009a1c:	lea    r14,[rsp+0x20]
   140009a21:	mov    eax,DWORD PTR [r14]
   140009a24:	mov    r8d,0x30
   140009a2a:	lea    rdx,[rbp+0x8]
   140009a2e:	mov    rcx,r14
   140009a31:	call   QWORD PTR [rip+0x26b9]        # 0x14000c0f0
   140009a37:	test   rax,rax
   140009a3a:	je     0x140009adf
   140009a40:	mov    r15,QWORD PTR [rbp+0x10]
   140009a44:	lea    rcx,[rbp+0x38]
   140009a48:	call   QWORD PTR [rip+0x2782]        # 0x14000c1d0
   140009a4e:	mov    edi,DWORD PTR [rbp+0x3c]
   140009a51:	lea    rcx,[rbp+0x0]
   140009a55:	xor    ebx,ebx
   140009a57:	call   QWORD PTR [rip+0x26d3]        # 0x14000c130
   140009a5d:	cmp    eax,0x1
   140009a60:	jne    0x140009a6a
   140009a62:	mov    eax,DWORD PTR [rbp+0x0]
   140009a65:	test   eax,eax
   140009a67:	cmovne ebx,eax
   140009a6a:	lea    edx,[rdi-0x1]
   140009a6d:	lea    ecx,[rdx+rbx*1]
   140009a70:	cmp    ecx,ebx
   140009a72:	jb     0x140009adf
   140009a74:	mov    eax,edx
   140009a76:	not    eax
   140009a78:	and    ecx,eax
   140009a7a:	je     0x140009a85
   140009a7c:	lea    eax,[rcx+rdi*1]
   140009a7f:	cmp    eax,ecx
   140009a81:	jb     0x140009adf
   140009a83:	mov    ecx,eax
   140009a85:	lea    eax,[rdi+rdi*2]
   140009a88:	mov    ebx,edx
   140009a8a:	cmp    ecx,eax
   140009a8c:	not    rbx
   140009a8f:	cmovb  ecx,eax
   140009a92:	and    rbx,r14
   140009a95:	mov    esi,ecx
   140009a97:	lea    rax,[r15+rdi*1]
   140009a9b:	sub    rbx,rsi
   140009a9e:	cmp    rbx,rax
   140009aa1:	jb     0x140009adf
   140009aa3:	mov    r9d,0x4
   140009aa9:	mov    r8d,0x1000
   140009aaf:	mov    edx,esi
   140009ab1:	mov    rcx,rbx
   140009ab4:	call   QWORD PTR [rip+0x2626]        # 0x14000c0e0
   140009aba:	test   rax,rax
   140009abd:	je     0x140009adf
   140009abf:	lea    r9,[rbp+0x4]
   140009ac3:	mov    r8d,0x104
   140009ac9:	mov    edx,esi
   140009acb:	mov    rcx,rbx
   140009ace:	call   QWORD PTR [rip+0x2614]        # 0x14000c0e8
   140009ad4:	test   eax,eax
   140009ad6:	je     0x140009adf
   140009ad8:	mov    eax,0x1
   140009add:	jmp    0x140009ae1
   140009adf:	xor    eax,eax
   140009ae1:	mov    rcx,QWORD PTR [rbp+0x68]
   140009ae5:	xor    rcx,rbp
   140009ae8:	call   0x14000a0a0
   140009aed:	mov    rbx,QWORD PTR [rbp+0x90]
   140009af4:	mov    rsi,QWORD PTR [rbp+0x98]
   140009afb:	mov    rdi,QWORD PTR [rbp+0xa0]
   140009b02:	lea    rsp,[rbp+0x70]
   140009b06:	pop    r15
   140009b08:	pop    r14
   140009b0a:	pop    rbp
   140009b0b:	ret    
   140009b0c:	int3   
   140009b0d:	int3   
   140009b0e:	int3   
   140009b0f:	int3   
   140009b10:	int3   
   140009b11:	int3   
   140009b12:	int3   
   140009b13:	int3   
   140009b14:	int3   
   140009b15:	int3   
   140009b16:	int3   
   140009b17:	int3   
   140009b18:	int3   
   140009b19:	int3   
   140009b1a:	int3   
   140009b1b:	int3   
   140009b1c:	int3   
   140009b1d:	int3   
   140009b1e:	int3   
   140009b1f:	int3   
   140009b20:	mov    rax,QWORD PTR gs:0x60
   140009b29:	mov    r8,rcx
   140009b2c:	xor    edx,edx
   140009b2e:	mov    rcx,QWORD PTR [rax+0x30]
   140009b32:	rex.W jmp QWORD PTR [rip+0x29af]        # 0x14000c4e8
   140009b39:	int3   
   140009b3a:	int3   
   140009b3b:	int3   
   140009b3c:	int3   
   140009b3d:	int3   
   140009b3e:	int3   
   140009b3f:	int3   
   140009b40:	mov    rax,QWORD PTR gs:0x60
   140009b49:	mov    r8,rcx
   140009b4c:	xor    edx,edx
   140009b4e:	mov    rcx,QWORD PTR [rax+0x30]
   140009b52:	rex.W jmp QWORD PTR [rip+0x2987]        # 0x14000c4e0
   140009b59:	int3   
   140009b5a:	int3   
   140009b5b:	int3   
   140009b5c:	int3   
   140009b5d:	int3   
   140009b5e:	int3   
   140009b5f:	int3   
   140009b60:	rex push rbp
   140009b62:	sub    rsp,0x30
   140009b66:	lea    rbp,[rsp+0x20]
   140009b6b:	mov    rax,QWORD PTR [rip+0x748e]        # 0x140011000
   140009b72:	xor    rax,rbp
   140009b75:	mov    QWORD PTR [rbp+0x0],rax
   140009b79:	lea    rax,[rcx+0xf]
   140009b7d:	cmp    rax,rcx
   140009b80:	ja     0x140009b8c
   140009b82:	movabs rax,0xffffffffffffff0
   140009b8c:	and    rax,0xfffffffffffffff0
   140009b90:	call   0x14000ab00
   140009b95:	sub    rsp,rax
   140009b98:	mov    rcx,QWORD PTR [rbp+0x0]
   140009b9c:	xor    rcx,rbp
   140009b9f:	call   0x14000a0a0
   140009ba4:	lea    rsp,[rbp+0x10]
   140009ba8:	pop    rbp
   140009ba9:	ret    
   140009baa:	int3   
   140009bab:	int3   
   140009bac:	int3   
   140009bad:	int3   
   140009bae:	int3   
   140009baf:	int3   
   140009bb0:	rex push rbx
   140009bb2:	sub    rsp,0x20
   140009bb6:	mov    ebx,0x1
   140009bbb:	call   0x140009b60
   140009bc0:	jmp    0x140009bca
   140009bc2:	xor    ebx,ebx
   140009bc4:	call   0x1400099dc
   140009bc9:	nop
   140009bca:	mov    eax,ebx
   140009bcc:	add    rsp,0x20
   140009bd0:	pop    rbx
   140009bd1:	ret    
   140009bd2:	int3   
   140009bd3:	int3   
   140009bd4:	int3   
   140009bd5:	int3   
   140009bd6:	int3   
   140009bd7:	int3   
   140009bd8:	sub    rsp,0xa8
   140009bdf:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009be8:	mov    rax,QWORD PTR [rip+0x7411]        # 0x140011000
   140009bef:	xor    rax,rsp
   140009bf2:	mov    QWORD PTR [rsp+0x90],rax
   140009bfa:	lea    rdx,[rip+0x2a4f]        # 0x14000c650
   140009c01:	lea    rcx,[rsp+0x28]
   140009c06:	call   0x140002898
   140009c0b:	nop
   140009c0c:	lea    rdx,[rsp+0x28]
   140009c11:	lea    rcx,[rsp+0x50]
   140009c16:	call   0x140001284
   140009c1b:	lea    rdx,[rip+0x4f16]        # 0x14000eb38
   140009c22:	lea    rcx,[rsp+0x50]
   140009c27:	call   0x14000a506
   140009c2c:	int3   
   140009c2d:	int3   
   140009c2e:	int3   
   140009c2f:	int3   
   140009c30:	int3   
   140009c31:	int3   
   140009c32:	int3   
   140009c33:	int3   
   140009c34:	sub    rsp,0xa8
   140009c3b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009c44:	mov    rax,QWORD PTR [rip+0x73b5]        # 0x140011000
   140009c4b:	xor    rax,rsp
   140009c4e:	mov    QWORD PTR [rsp+0x90],rax
   140009c56:	lea    rdx,[rip+0x2a03]        # 0x14000c660
   140009c5d:	lea    rcx,[rsp+0x28]
   140009c62:	call   0x140002898
   140009c67:	nop
   140009c68:	xor    r8d,r8d
   140009c6b:	lea    rdx,[rsp+0x28]
   140009c70:	lea    rcx,[rsp+0x50]
   140009c75:	call   0x1400013ac
   140009c7a:	lea    rdx,[rip+0x4e97]        # 0x14000eb18
   140009c81:	lea    rcx,[rsp+0x50]
   140009c86:	call   0x14000a506
   140009c8b:	int3   
   140009c8c:	int3   
   140009c8d:	int3   
   140009c8e:	int3   
   140009c8f:	int3   
   140009c90:	int3   
   140009c91:	int3   
   140009c92:	int3   
   140009c93:	int3   
   140009c94:	rex push rbx
   140009c96:	sub    rsp,0x20
   140009c9a:	mov    r8d,0x1
   140009ca0:	lea    rdx,[rip+0x7379]        # 0x140011020
   140009ca7:	mov    rbx,rcx
   140009caa:	call   0x14000a70a
   140009caf:	lea    rax,[rip+0x2a42]        # 0x14000c6f8
   140009cb6:	mov    QWORD PTR [rbx],rax
   140009cb9:	mov    rax,rbx
   140009cbc:	add    rsp,0x20
   140009cc0:	pop    rbx
   140009cc1:	ret    
   140009cc2:	int3   
   140009cc3:	int3   
   140009cc4:	int3   
   140009cc5:	int3   
   140009cc6:	int3   
   140009cc7:	int3   
   140009cc8:	rex push rbx
   140009cca:	sub    rsp,0x40
   140009cce:	mov    rbx,rcx
   140009cd1:	jmp    0x140009ce2
   140009cd3:	mov    rcx,rbx
   140009cd6:	call   0x14000a716
   140009cdb:	test   eax,eax
   140009cdd:	je     0x140009cf3
   140009cdf:	mov    rcx,rbx
   140009ce2:	call   QWORD PTR [rip+0x2678]        # 0x14000c360
   140009ce8:	test   rax,rax
   140009ceb:	je     0x140009cd3
   140009ced:	add    rsp,0x40
   140009cf1:	pop    rbx
   140009cf2:	ret    
   140009cf3:	mov    eax,DWORD PTR [rip+0x7d0f]        # 0x140011a08
   140009cf9:	test   al,0x1
   140009cfb:	jne    0x140009d1e
   140009cfd:	or     eax,0x1
   140009d00:	lea    rcx,[rip+0x7ce9]        # 0x1400119f0
   140009d07:	mov    DWORD PTR [rip+0x7cfb],eax        # 0x140011a08
   140009d0d:	call   0x140009c94
   140009d12:	lea    rcx,[rip+0x12e7]        # 0x14000b000
   140009d19:	call   0x14000a6ec
   140009d1e:	lea    rdx,[rip+0x7ccb]        # 0x1400119f0
   140009d25:	lea    rcx,[rsp+0x20]
   140009d2a:	call   0x1400010d0
   140009d2f:	lea    rdx,[rip+0x4f7a]        # 0x14000ecb0
   140009d36:	lea    rcx,[rsp+0x20]
   140009d3b:	call   0x14000a506
   140009d40:	int3   
   140009d41:	int3   
   140009d42:	int3   
   140009d43:	int3   
   140009d44:	int3   
   140009d45:	int3   
   140009d46:	int3   
   140009d47:	int3   
   140009d48:	rex.W jmp QWORD PTR [rip+0x25f9]        # 0x14000c348
   140009d4f:	int3   
   140009d50:	int3   
   140009d51:	int3   
   140009d52:	int3   
   140009d53:	int3   
   140009d54:	int3   
   140009d55:	int3   
   140009d56:	int3   
   140009d57:	int3   
   140009d58:	int3   
   140009d59:	int3   
   140009d5a:	int3   
   140009d5b:	int3   
   140009d5c:	int3   
   140009d5d:	int3   
   140009d5e:	int3   
   140009d5f:	int3   
   140009d60:	sub    rsp,0x28
   140009d64:	mov    eax,0x5a4d
   140009d69:	cmp    WORD PTR [rip+0xffffffffffff6290],ax        # 0x140000000
   140009d70:	je     0x140009d76
   140009d72:	xor    eax,eax
   140009d74:	jmp    0x140009dc5
   140009d76:	movsxd rcx,DWORD PTR [rip+0xffffffffffff62bf]        # 0x14000003c
   140009d7d:	lea    rax,[rip+0xffffffffffff627c]        # 0x140000000
   140009d84:	add    rcx,rax
   140009d87:	cmp    DWORD PTR [rcx],0x4550
   140009d8d:	jne    0x140009d72
   140009d8f:	movzx  eax,WORD PTR [rcx+0x18]
   140009d93:	cmp    eax,0x10b
   140009d98:	je     0x140009db4
   140009d9a:	cmp    eax,0x20b
   140009d9f:	jne    0x140009d72
   140009da1:	xor    eax,eax
   140009da3:	cmp    DWORD PTR [rcx+0x84],0xe
   140009daa:	jbe    0x140009dc5
   140009dac:	cmp    DWORD PTR [rcx+0xf8],eax
   140009db2:	jmp    0x140009dc2
   140009db4:	xor    eax,eax
   140009db6:	cmp    DWORD PTR [rcx+0x74],0xe
   140009dba:	jbe    0x140009dc5
   140009dbc:	cmp    DWORD PTR [rcx+0xe8],eax
   140009dc2:	setne  al
   140009dc5:	mov    ecx,0x1
   140009dca:	mov    DWORD PTR [rip+0x7c60],eax        # 0x140011a30
   140009dd0:	call   0x14000a7f8
   140009dd5:	mov    ecx,eax
   140009dd7:	call   QWORD PTR [rip+0x26c3]        # 0x14000c4a0
   140009ddd:	mov    rcx,QWORD PTR [rip+0x263c]        # 0x14000c420
   140009de4:	or     rax,0xffffffffffffffff
   140009de8:	mov    QWORD PTR [rip+0x8201],rax        # 0x140011ff0
   140009def:	mov    QWORD PTR [rip+0x8202],rax        # 0x140011ff8
   140009df6:	mov    eax,DWORD PTR [rip+0x81c0]        # 0x140011fbc
   140009dfc:	mov    DWORD PTR [rcx],eax
   140009dfe:	mov    rcx,QWORD PTR [rip+0x2613]        # 0x14000c418
   140009e05:	mov    eax,DWORD PTR [rip+0x81a5]        # 0x140011fb0
   140009e0b:	mov    DWORD PTR [rcx],eax
   140009e0d:	call   0x140003240
   140009e12:	cmp    DWORD PTR [rip+0x71f7],0x0        # 0x140011010
   140009e19:	jne    0x140009e28
   140009e1b:	lea    rcx,[rip+0xffffffffffff941e]        # 0x140003240
   140009e22:	call   QWORD PTR [rip+0x2618]        # 0x14000c440
   140009e28:	xor    eax,eax
   140009e2a:	add    rsp,0x28
   140009e2e:	ret    
   140009e2f:	int3   
   140009e30:	int3   
   140009e31:	int3   
   140009e32:	int3   
   140009e33:	int3   
   140009e34:	int3   
   140009e35:	int3   
   140009e36:	int3   
   140009e37:	int3   
   140009e38:	int3   
   140009e39:	int3   
   140009e3a:	int3   
   140009e3b:	int3   
   140009e3c:	int3   
   140009e3d:	int3   
   140009e3e:	int3   
   140009e3f:	int3   
   140009e40:	sub    rsp,0x38
   140009e44:	mov    eax,DWORD PTR [rip+0x816e]        # 0x140011fb8
   140009e4a:	lea    r8,[rip+0x7bd7]        # 0x140011a28
   140009e51:	mov    r9d,DWORD PTR [rip+0x815c]        # 0x140011fb4
   140009e58:	lea    rdx,[rip+0x7bc1]        # 0x140011a20
   140009e5f:	mov    DWORD PTR [rip+0x7bcf],eax        # 0x140011a34
   140009e65:	lea    rcx,[rip+0x7bac]        # 0x140011a18
   140009e6c:	lea    rax,[rip+0x7bc1]        # 0x140011a34
   140009e73:	mov    QWORD PTR [rsp+0x20],rax
   140009e78:	call   QWORD PTR [rip+0x264a]        # 0x14000c4c8
   140009e7e:	mov    DWORD PTR [rip+0x7b98],eax        # 0x140011a1c
   140009e84:	add    rsp,0x38
   140009e88:	ret    
   140009e89:	int3   
   140009e8a:	int3   
   140009e8b:	int3   
   140009e8c:	int3   
   140009e8d:	int3   
   140009e8e:	int3   
   140009e8f:	int3   
   140009e90:	mov    rax,rsp
   140009e93:	mov    QWORD PTR [rax+0x8],rbx
   140009e97:	mov    QWORD PTR [rax+0x10],rsi
   140009e9b:	mov    QWORD PTR [rax+0x18],rdi
   140009e9f:	mov    QWORD PTR [rax+0x20],r12
   140009ea3:	push   r14
   140009ea5:	sub    rsp,0x30
   140009ea9:	mov    rax,QWORD PTR gs:0x30
   140009eb2:	mov    rbx,QWORD PTR [rax+0x8]
   140009eb6:	xor    r14d,r14d
   140009eb9:	xor    eax,eax
   140009ebb:	lock cmpxchg QWORD PTR [rip+0x811c],rbx        # 0x140011fe0
   140009ec4:	je     0x140009ee2
   140009ec6:	cmp    rax,rbx
   140009ec9:	jne    0x140009ed5
   140009ecb:	mov    ebx,0x1
   140009ed0:	mov    r14d,ebx
   140009ed3:	jmp    0x140009ee7
   140009ed5:	mov    ecx,0x3e8
   140009eda:	call   QWORD PTR [rip+0x22e0]        # 0x14000c1c0
   140009ee0:	jmp    0x140009eb9
   140009ee2:	mov    ebx,0x1
   140009ee7:	mov    eax,DWORD PTR [rip+0x80fb]        # 0x140011fe8
   140009eed:	cmp    eax,ebx
   140009eef:	jne    0x140009efd
   140009ef1:	mov    ecx,0x1f
   140009ef6:	call   0x14000a844
   140009efb:	jmp    0x140009f66
   140009efd:	mov    eax,DWORD PTR [rip+0x80e5]        # 0x140011fe8
   140009f03:	test   eax,eax
   140009f05:	jne    0x140009f60
   140009f07:	mov    DWORD PTR [rip+0x80db],ebx        # 0x140011fe8
   140009f0d:	lea    r12,[rip+0x263c]        # 0x14000c550
   140009f14:	lea    rdi,[rip+0x261d]        # 0x14000c538
   140009f1b:	mov    QWORD PTR [rsp+0x28],rdi
   140009f20:	mov    DWORD PTR [rsp+0x20],eax
   140009f24:	cmp    rdi,r12
   140009f27:	jae    0x140009f52
   140009f29:	test   eax,eax
   140009f2b:	jne    0x140009f56
   140009f2d:	mov    rsi,QWORD PTR [rdi]
   140009f30:	test   rsi,rsi
   140009f33:	je     0x140009f47
   140009f35:	mov    rcx,rsi
   140009f38:	mov    rax,QWORD PTR [rip+0x25d1]        # 0x14000c510
   140009f3f:	call   rax
   140009f41:	call   rsi
   140009f43:	mov    DWORD PTR [rsp+0x20],eax
   140009f47:	add    rdi,0x8
   140009f4b:	mov    QWORD PTR [rsp+0x28],rdi
   140009f50:	jmp    0x140009f24
   140009f52:	test   eax,eax
   140009f54:	je     0x140009f66
   140009f56:	mov    eax,0xff
   140009f5b:	jmp    0x14000a047
   140009f60:	mov    DWORD PTR [rip+0x7aae],ebx        # 0x140011a14
   140009f66:	mov    eax,DWORD PTR [rip+0x807c]        # 0x140011fe8
   140009f6c:	cmp    eax,ebx
   140009f6e:	jne    0x140009f8d
   140009f70:	lea    rdx,[rip+0x25b9]        # 0x14000c530
   140009f77:	lea    rcx,[rip+0x25a2]        # 0x14000c520
   140009f7e:	call   0x14000aa0a
   140009f83:	mov    DWORD PTR [rip+0x805b],0x2        # 0x140011fe8
   140009f8d:	test   r14d,r14d
   140009f90:	jne    0x140009f9b
   140009f92:	xor    eax,eax
   140009f94:	xchg   QWORD PTR [rip+0x8045],rax        # 0x140011fe0
   140009f9b:	cmp    QWORD PTR [rip+0x805d],0x0        # 0x140012000
   140009fa3:	je     0x140009fd3
   140009fa5:	lea    rcx,[rip+0x8054]        # 0x140012000
   140009fac:	call   0x14000a8a0
   140009fb1:	test   eax,eax
   140009fb3:	je     0x140009fd3
   140009fb5:	mov    rbx,QWORD PTR [rip+0x8044]        # 0x140012000
   140009fbc:	mov    rcx,rbx
   140009fbf:	mov    rax,QWORD PTR [rip+0x254a]        # 0x14000c510
   140009fc6:	call   rax
   140009fc8:	xor    r8d,r8d
   140009fcb:	lea    edx,[r8+0x2]
   140009fcf:	xor    ecx,ecx
   140009fd1:	call   rbx
   140009fd3:	mov    r8,QWORD PTR [rip+0x7a4e]        # 0x140011a28
   140009fda:	mov    rdx,QWORD PTR [rip+0x7a3f]        # 0x140011a20
   140009fe1:	mov    ecx,DWORD PTR [rip+0x7a31]        # 0x140011a18
   140009fe7:	call   0x140007d18
   140009fec:	mov    DWORD PTR [rip+0x7a1e],eax        # 0x140011a10
   140009ff2:	cmp    DWORD PTR [rip+0x7a37],0x0        # 0x140011a30
   140009ff9:	jne    0x14000a003
   140009ffb:	mov    ecx,eax
   140009ffd:	call   QWORD PTR [rip+0x2455]        # 0x14000c458
   14000a003:	cmp    DWORD PTR [rip+0x7a0a],0x0        # 0x140011a14
   14000a00a:	jne    0x14000a018
   14000a00c:	call   QWORD PTR [rip+0x2436]        # 0x14000c448
   14000a012:	mov    eax,DWORD PTR [rip+0x79f8]        # 0x140011a10
   14000a018:	jmp    0x14000a047
   14000a01a:	mov    DWORD PTR [rip+0x79f0],eax        # 0x140011a10
   14000a020:	cmp    DWORD PTR [rip+0x7a09],0x0        # 0x140011a30
   14000a027:	jne    0x14000a032
   14000a029:	mov    ecx,eax
   14000a02b:	call   QWORD PTR [rip+0x241f]        # 0x14000c450
   14000a031:	int3   
   14000a032:	cmp    DWORD PTR [rip+0x79db],0x0        # 0x140011a14
   14000a039:	jne    0x14000a047
   14000a03b:	call   QWORD PTR [rip+0x2407]        # 0x14000c448
   14000a041:	mov    eax,DWORD PTR [rip+0x79c9]        # 0x140011a10
   14000a047:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a04c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a051:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a056:	mov    r12,QWORD PTR [rsp+0x58]
   14000a05b:	add    rsp,0x30
   14000a05f:	pop    r14
   14000a061:	ret    
   14000a062:	int3   
   14000a063:	int3   
   14000a064:	int3   
   14000a065:	int3   
   14000a066:	int3   
   14000a067:	int3   
   14000a068:	int3   
   14000a069:	int3   
   14000a06a:	int3   
   14000a06b:	int3   
   14000a06c:	int3   
   14000a06d:	int3   
   14000a06e:	int3   
   14000a06f:	int3   
   14000a070:	sub    rsp,0x28
   14000a074:	call   0x14000a934
   14000a079:	add    rsp,0x28
   14000a07d:	jmp    0x140009e90
   14000a082:	int3   
   14000a083:	int3   
   14000a084:	int3   
   14000a085:	int3   
   14000a086:	int3   
   14000a087:	int3   
   14000a088:	int3   
   14000a089:	int3   
   14000a08a:	int3   
   14000a08b:	int3   
   14000a08c:	int3   
   14000a08d:	int3   
   14000a08e:	int3   
   14000a08f:	int3   
   14000a090:	int3   
   14000a091:	int3   
   14000a092:	int3   
   14000a093:	int3   
   14000a094:	int3   
   14000a095:	int3   
   14000a096:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a0a0:	cmp    rcx,QWORD PTR [rip+0x6f59]        # 0x140011000
   14000a0a7:	jne    0x14000a0b9
   14000a0a9:	rol    rcx,0x10
   14000a0ad:	test   cx,0xffff
   14000a0b2:	jne    0x14000a0b5
   14000a0b4:	ret    
   14000a0b5:	ror    rcx,0x10
   14000a0b9:	jmp    0x14000a290
   14000a0be:	int3   
   14000a0bf:	int3   
   14000a0c0:	int3   
   14000a0c1:	int3   
   14000a0c2:	int3   
   14000a0c3:	int3   
   14000a0c4:	jmp    0x14000a0d0
   14000a0c9:	int3   
   14000a0ca:	int3   
   14000a0cb:	int3   
   14000a0cc:	int3   
   14000a0cd:	int3   
   14000a0ce:	int3   
   14000a0cf:	int3   
   14000a0d0:	rex push rbx
   14000a0d2:	sub    rsp,0x540
   14000a0d9:	mov    rax,QWORD PTR [rip+0x6f20]        # 0x140011000
   14000a0e0:	xor    rax,rsp
   14000a0e3:	mov    QWORD PTR [rsp+0x530],rax
   14000a0eb:	lea    rcx,[rsp+0x60]
   14000a0f0:	call   QWORD PTR [rip+0x209a]        # 0x14000c190
   14000a0f6:	mov    rbx,QWORD PTR [rsp+0x158]
   14000a0fe:	lea    rdx,[rsp+0x40]
   14000a103:	mov    rcx,rbx
   14000a106:	xor    r8d,r8d
   14000a109:	call   QWORD PTR [rip+0x2071]        # 0x14000c180
   14000a10f:	test   rax,rax
   14000a112:	je     0x14000a14d
   14000a114:	and    QWORD PTR [rsp+0x38],0x0
   14000a11a:	lea    rcx,[rsp+0x48]
   14000a11f:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a124:	mov    r9,rax
   14000a127:	mov    QWORD PTR [rsp+0x30],rcx
   14000a12c:	mov    r8,rbx
   14000a12f:	lea    rcx,[rsp+0x50]
   14000a134:	mov    QWORD PTR [rsp+0x28],rcx
   14000a139:	lea    rcx,[rsp+0x60]
   14000a13e:	mov    QWORD PTR [rsp+0x20],rcx
   14000a143:	xor    ecx,ecx
   14000a145:	call   QWORD PTR [rip+0x204d]        # 0x14000c198
   14000a14b:	jmp    0x14000a16d
   14000a14d:	mov    rax,QWORD PTR [rsp+0x548]
   14000a155:	mov    QWORD PTR [rsp+0x158],rax
   14000a15d:	lea    rax,[rsp+0x548]
   14000a165:	mov    QWORD PTR [rsp+0xf8],rax
   14000a16d:	lea    rcx,[rip+0x2504]        # 0x14000c678
   14000a174:	call   QWORD PTR [rip+0x1e9e]        # 0x14000c018
   14000a17a:	mov    rcx,QWORD PTR [rsp+0x530]
   14000a182:	xor    rcx,rsp
   14000a185:	call   0x14000a0a0
   14000a18a:	add    rsp,0x540
   14000a191:	pop    rbx
   14000a192:	ret    
   14000a193:	int3   
   14000a194:	int3   
   14000a195:	int3   
   14000a196:	int3   
   14000a197:	int3   
   14000a198:	int3   
   14000a199:	int3   
   14000a19a:	int3   
   14000a19b:	int3   
   14000a19c:	int3   
   14000a19d:	int3   
   14000a19e:	int3   
   14000a19f:	int3   
   14000a1a0:	jmp    QWORD PTR [rip+0x2302]        # 0x14000c4a8
   14000a1a6:	int3   
   14000a1a7:	int3   
   14000a1a8:	int3   
   14000a1a9:	int3   
   14000a1aa:	int3   
   14000a1ab:	int3   
   14000a1ac:	jmp    QWORD PTR [rip+0x22e6]        # 0x14000c498
   14000a1b2:	int3   
   14000a1b3:	int3   
   14000a1b4:	int3   
   14000a1b5:	int3   
   14000a1b6:	int3   
   14000a1b7:	int3   
   14000a1b8:	jmp    QWORD PTR [rip+0x21fa]        # 0x14000c3b8
   14000a1be:	int3   
   14000a1bf:	int3   
   14000a1c0:	int3   
   14000a1c1:	int3   
   14000a1c2:	int3   
   14000a1c3:	int3   
   14000a1c4:	int3   
   14000a1c5:	int3   
   14000a1c6:	int3   
   14000a1c7:	int3   
   14000a1c8:	int3   
   14000a1c9:	int3   
   14000a1ca:	int3   
   14000a1cb:	int3   
   14000a1cc:	int3   
   14000a1cd:	int3   
   14000a1ce:	int3   
   14000a1cf:	int3   
   14000a1d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a1d5:	push   rdi
   14000a1d6:	sub    rsp,0x20
   14000a1da:	mov    ebx,edx
   14000a1dc:	mov    rdi,rcx
   14000a1df:	call   QWORD PTR [rip+0x221b]        # 0x14000c400
   14000a1e5:	test   bl,0x1
   14000a1e8:	je     0x14000a1f2
   14000a1ea:	mov    rcx,rdi
   14000a1ed:	call   0x140009d48
   14000a1f2:	mov    rax,rdi
   14000a1f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1fa:	add    rsp,0x20
   14000a1fe:	pop    rdi
   14000a1ff:	ret    
   14000a200:	int3   
   14000a201:	int3   
   14000a202:	int3   
   14000a203:	int3   
   14000a204:	int3   
   14000a205:	int3   
   14000a206:	int3   
   14000a207:	int3   
   14000a208:	int3   
   14000a209:	int3   
   14000a20a:	int3   
   14000a20b:	int3   
   14000a20c:	int3   
   14000a20d:	int3   
   14000a20e:	int3   
   14000a20f:	int3   
   14000a210:	jmp    QWORD PTR [rip+0x2122]        # 0x14000c338
   14000a216:	int3   
   14000a217:	int3   
   14000a218:	int3   
   14000a219:	int3   
   14000a21a:	int3   
   14000a21b:	int3   
   14000a21c:	sub    rsp,0x38
   14000a220:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a229:	call   0x140009cc8
   14000a22e:	nop
   14000a22f:	jmp    0x14000a236
   14000a231:	mov    rax,QWORD PTR [rsp+0x50]
   14000a236:	add    rsp,0x38
   14000a23a:	ret    
   14000a23b:	int3   
   14000a23c:	int3   
   14000a23d:	int3   
   14000a23e:	int3   
   14000a23f:	int3   
   14000a240:	int3   
   14000a241:	int3   
   14000a242:	int3   
   14000a243:	int3   
   14000a244:	jmp    0x14000a21c
   14000a249:	int3   
   14000a24a:	int3   
   14000a24b:	int3   
   14000a24c:	int3   
   14000a24d:	int3   
   14000a24e:	int3   
   14000a24f:	int3   
   14000a250:	rex push rbx
   14000a252:	sub    rsp,0x20
   14000a256:	mov    rbx,rcx
   14000a259:	xor    ecx,ecx
   14000a25b:	call   QWORD PTR [rip+0x1ddf]        # 0x14000c040
   14000a261:	mov    rcx,rbx
   14000a264:	call   QWORD PTR [rip+0x1dc6]        # 0x14000c030
   14000a26a:	call   QWORD PTR [rip+0x1ec8]        # 0x14000c138
   14000a270:	mov    rcx,rax
   14000a273:	mov    edx,0xc0000409
   14000a278:	add    rsp,0x20
   14000a27c:	pop    rbx
   14000a27d:	rex.W jmp QWORD PTR [rip+0x1ea4]        # 0x14000c128
   14000a284:	int3   
   14000a285:	int3   
   14000a286:	int3   
   14000a287:	int3   
   14000a288:	int3   
   14000a289:	int3   
   14000a28a:	int3   
   14000a28b:	int3   
   14000a28c:	int3   
   14000a28d:	int3   
   14000a28e:	int3   
   14000a28f:	int3   
   14000a290:	mov    QWORD PTR [rsp+0x8],rcx
   14000a295:	sub    rsp,0x88
   14000a29c:	lea    rcx,[rip+0x783d]        # 0x140011ae0
   14000a2a3:	call   QWORD PTR [rip+0x1ee7]        # 0x14000c190
   14000a2a9:	mov    rax,QWORD PTR [rip+0x7928]        # 0x140011bd8
   14000a2b0:	mov    QWORD PTR [rsp+0x48],rax
   14000a2b5:	xor    r8d,r8d
   14000a2b8:	lea    rdx,[rsp+0x50]
   14000a2bd:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a2c2:	call   QWORD PTR [rip+0x1eb8]        # 0x14000c180
   14000a2c8:	mov    QWORD PTR [rsp+0x40],rax
   14000a2cd:	cmp    QWORD PTR [rsp+0x40],0x0
   14000a2d3:	je     0x14000a317
   14000a2d5:	mov    QWORD PTR [rsp+0x38],0x0
   14000a2de:	lea    rax,[rsp+0x58]
   14000a2e3:	mov    QWORD PTR [rsp+0x30],rax
   14000a2e8:	lea    rax,[rsp+0x60]
   14000a2ed:	mov    QWORD PTR [rsp+0x28],rax
   14000a2f2:	lea    rax,[rip+0x77e7]        # 0x140011ae0
   14000a2f9:	mov    QWORD PTR [rsp+0x20],rax
   14000a2fe:	mov    r9,QWORD PTR [rsp+0x40]
   14000a303:	mov    r8,QWORD PTR [rsp+0x48]
   14000a308:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a30d:	xor    ecx,ecx
   14000a30f:	call   QWORD PTR [rip+0x1e83]        # 0x14000c198
   14000a315:	jmp    0x14000a33a
   14000a317:	mov    rax,QWORD PTR [rip+0x785a]        # 0x140011b78
   14000a31e:	mov    rax,QWORD PTR [rax]
   14000a321:	mov    QWORD PTR [rip+0x78b0],rax        # 0x140011bd8
   14000a328:	mov    rax,QWORD PTR [rip+0x7849]        # 0x140011b78
   14000a32f:	add    rax,0x8
   14000a333:	mov    QWORD PTR [rip+0x783e],rax        # 0x140011b78
   14000a33a:	mov    rax,QWORD PTR [rip+0x7897]        # 0x140011bd8
   14000a341:	mov    QWORD PTR [rip+0x7708],rax        # 0x140011a50
   14000a348:	mov    rax,QWORD PTR [rsp+0x90]
   14000a350:	mov    QWORD PTR [rip+0x7809],rax        # 0x140011b60
   14000a357:	mov    DWORD PTR [rip+0x76df],0xc0000409        # 0x140011a40
   14000a361:	mov    DWORD PTR [rip+0x76d9],0x1        # 0x140011a44
   14000a36b:	mov    DWORD PTR [rip+0x76e3],0x3        # 0x140011a58
   14000a375:	mov    eax,0x8
   14000a37a:	imul   rax,rax,0x0
   14000a37e:	lea    rcx,[rip+0x76db]        # 0x140011a60
   14000a385:	mov    QWORD PTR [rcx+rax*1],0x2
   14000a38d:	mov    eax,0x8
   14000a392:	imul   rax,rax,0x1
   14000a396:	lea    rcx,[rip+0x76c3]        # 0x140011a60
   14000a39d:	mov    rdx,QWORD PTR [rip+0x6c5c]        # 0x140011000
   14000a3a4:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a3a8:	mov    eax,0x8
   14000a3ad:	imul   rax,rax,0x2
   14000a3b1:	lea    rcx,[rip+0x76a8]        # 0x140011a60
   14000a3b8:	mov    rdx,QWORD PTR [rip+0x6c49]        # 0x140011008
   14000a3bf:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a3c3:	mov    eax,0x8
   14000a3c8:	imul   rax,rax,0x0
   14000a3cc:	mov    rcx,QWORD PTR [rip+0x6c2d]        # 0x140011000
   14000a3d3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000a3d8:	mov    eax,0x8
   14000a3dd:	imul   rax,rax,0x1
   14000a3e1:	mov    rcx,QWORD PTR [rip+0x6c20]        # 0x140011008
   14000a3e8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000a3ed:	lea    rcx,[rip+0x22ec]        # 0x14000c6e0
   14000a3f4:	call   0x14000a250
   14000a3f9:	add    rsp,0x88
   14000a400:	ret    
   14000a401:	int3   
   14000a402:	int3   
   14000a403:	int3   
   14000a404:	int3   
   14000a405:	int3   
   14000a406:	int3   
   14000a407:	int3   
   14000a408:	sub    rsp,0x78
   14000a40c:	lea    rcx,[rip+0x76cd]        # 0x140011ae0
   14000a413:	call   QWORD PTR [rip+0x1d77]        # 0x14000c190
   14000a419:	mov    rax,QWORD PTR [rip+0x77b8]        # 0x140011bd8
   14000a420:	mov    QWORD PTR [rsp+0x48],rax
   14000a425:	xor    r8d,r8d
   14000a428:	lea    rdx,[rsp+0x50]
   14000a42d:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a432:	call   QWORD PTR [rip+0x1d48]        # 0x14000c180
   14000a438:	mov    QWORD PTR [rsp+0x40],rax
   14000a43d:	cmp    QWORD PTR [rsp+0x40],0x0
   14000a443:	je     0x14000a487
   14000a445:	mov    QWORD PTR [rsp+0x38],0x0
   14000a44e:	lea    rax,[rsp+0x58]
   14000a453:	mov    QWORD PTR [rsp+0x30],rax
   14000a458:	lea    rax,[rsp+0x60]
   14000a45d:	mov    QWORD PTR [rsp+0x28],rax
   14000a462:	lea    rax,[rip+0x7677]        # 0x140011ae0
   14000a469:	mov    QWORD PTR [rsp+0x20],rax
   14000a46e:	mov    r9,QWORD PTR [rsp+0x40]
   14000a473:	mov    r8,QWORD PTR [rsp+0x48]
   14000a478:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a47d:	xor    ecx,ecx
   14000a47f:	call   QWORD PTR [rip+0x1d13]        # 0x14000c198
   14000a485:	jmp    0x14000a4aa
   14000a487:	mov    rax,QWORD PTR [rip+0x76ea]        # 0x140011b78
   14000a48e:	mov    rax,QWORD PTR [rax]
   14000a491:	mov    QWORD PTR [rip+0x7740],rax        # 0x140011bd8
   14000a498:	mov    rax,QWORD PTR [rip+0x76d9]        # 0x140011b78
   14000a49f:	add    rax,0x8
   14000a4a3:	mov    QWORD PTR [rip+0x76ce],rax        # 0x140011b78
   14000a4aa:	mov    rax,QWORD PTR [rip+0x7727]        # 0x140011bd8
   14000a4b1:	mov    QWORD PTR [rip+0x7598],rax        # 0x140011a50
   14000a4b8:	mov    DWORD PTR [rip+0x757e],0xc0000409        # 0x140011a40
   14000a4c2:	mov    DWORD PTR [rip+0x7578],0x1        # 0x140011a44
   14000a4cc:	mov    DWORD PTR [rip+0x7582],0x1        # 0x140011a58
   14000a4d6:	mov    eax,0x8
   14000a4db:	imul   rax,rax,0x0
   14000a4df:	lea    rcx,[rip+0x757a]        # 0x140011a60
   14000a4e6:	mov    QWORD PTR [rcx+rax*1],0x8
   14000a4ee:	lea    rcx,[rip+0x21eb]        # 0x14000c6e0
   14000a4f5:	call   0x14000a250
   14000a4fa:	add    rsp,0x78
   14000a4fe:	ret    
   14000a4ff:	int3   
   14000a500:	int3   
   14000a501:	int3   
   14000a502:	int3   
   14000a503:	int3   
   14000a504:	int3   
   14000a505:	int3   
   14000a506:	jmp    QWORD PTR [rip+0x1e7c]        # 0x14000c388
   14000a50c:	int3   
   14000a50d:	int3   
   14000a50e:	int3   
   14000a50f:	int3   
   14000a510:	int3   
   14000a511:	int3   
   14000a512:	jmp    QWORD PTR [rip+0x1e28]        # 0x14000c340
   14000a518:	int3   
   14000a519:	int3   
   14000a51a:	int3   
   14000a51b:	int3   
   14000a51c:	int3   
   14000a51d:	int3   
   14000a51e:	int3   
   14000a51f:	int3   
   14000a520:	sub    rsp,0x28
   14000a524:	mov    r8,QWORD PTR [r9+0x38]
   14000a528:	mov    rcx,rdx
   14000a52b:	mov    rdx,r9
   14000a52e:	call   0x14000a544
   14000a533:	mov    eax,0x1
   14000a538:	add    rsp,0x28
   14000a53c:	ret    
   14000a53d:	int3   
   14000a53e:	int3   
   14000a53f:	int3   
   14000a540:	int3   
   14000a541:	int3   
   14000a542:	int3   
   14000a543:	int3   
   14000a544:	rex push rbx
   14000a546:	sub    rsp,0x20
   14000a54a:	mov    r11d,DWORD PTR [r8]
   14000a54d:	mov    rbx,rdx
   14000a550:	and    r11d,0xfffffff8
   14000a554:	mov    r9,rcx
   14000a557:	test   BYTE PTR [r8],0x4
   14000a55b:	mov    r10,rcx
   14000a55e:	je     0x14000a573
   14000a560:	mov    eax,DWORD PTR [r8+0x8]
   14000a564:	movsxd r10,DWORD PTR [r8+0x4]
   14000a568:	neg    eax
   14000a56a:	add    r10,rcx
   14000a56d:	movsxd rcx,eax
   14000a570:	and    r10,rcx
   14000a573:	movsxd rax,r11d
   14000a576:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a57a:	mov    rax,QWORD PTR [rbx+0x10]
   14000a57e:	mov    ecx,DWORD PTR [rax+0x8]
   14000a581:	add    rcx,QWORD PTR [rbx+0x8]
   14000a585:	test   BYTE PTR [rcx+0x3],0xf
   14000a589:	je     0x14000a597
   14000a58b:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a58f:	and    eax,0xfffffff0
   14000a592:	cdqe   
   14000a594:	add    r9,rax
   14000a597:	xor    r9,rdx
   14000a59a:	mov    rcx,r9
   14000a59d:	add    rsp,0x20
   14000a5a1:	pop    rbx
   14000a5a2:	jmp    0x14000a0a0
   14000a5a7:	int3   
   14000a5a8:	int3   
   14000a5a9:	int3   
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	int3   
   14000a5ad:	int3   
   14000a5ae:	int3   
   14000a5af:	int3   
   14000a5b0:	mov    rax,rsp
   14000a5b3:	mov    QWORD PTR [rax+0x8],rbx
   14000a5b7:	mov    QWORD PTR [rax+0x10],rbp
   14000a5bb:	mov    QWORD PTR [rax+0x18],rsi
   14000a5bf:	mov    QWORD PTR [rax+0x20],rdi
   14000a5c3:	push   r14
   14000a5c5:	sub    rsp,0x20
   14000a5c9:	mov    rbx,QWORD PTR [r9+0x38]
   14000a5cd:	mov    rsi,rdx
   14000a5d0:	mov    r14,r8
   14000a5d3:	mov    rbp,rcx
   14000a5d6:	mov    rdx,r9
   14000a5d9:	mov    rcx,rsi
   14000a5dc:	mov    rdi,r9
   14000a5df:	lea    r8,[rbx+0x4]
   14000a5e3:	call   0x14000a544
   14000a5e8:	mov    r11d,DWORD PTR [rbx+0x4]
   14000a5ec:	mov    r8d,0x1
   14000a5f2:	mov    r10d,DWORD PTR [rbp+0x4]
   14000a5f6:	mov    eax,r11d
   14000a5f9:	and    eax,r8d
   14000a5fc:	and    r11d,0x2
   14000a600:	and    r10b,0x66
   14000a604:	cmove  r11d,eax
   14000a608:	test   r11d,r11d
   14000a60b:	je     0x14000a621
   14000a60d:	mov    r9,rdi
   14000a610:	mov    r8,r14
   14000a613:	mov    rdx,rsi
   14000a616:	mov    rcx,rbp
   14000a619:	call   0x14000a512
   14000a61e:	mov    r8d,eax
   14000a621:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a626:	mov    eax,r8d
   14000a629:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a62e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a633:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a638:	add    rsp,0x20
   14000a63c:	pop    r14
   14000a63e:	ret    
   14000a63f:	int3   
   14000a640:	int3   
   14000a641:	int3   
   14000a642:	int3   
   14000a643:	int3   
   14000a644:	int3   
   14000a645:	int3   
   14000a646:	int3   
   14000a647:	int3   
   14000a648:	mov    QWORD PTR [rsp+0x8],rbx
   14000a64d:	push   rdi
   14000a64e:	sub    rsp,0x20
   14000a652:	mov    rdi,rcx
   14000a655:	mov    rax,QWORD PTR [rip+0x799c]        # 0x140011ff8
   14000a65c:	mov    QWORD PTR [rsp+0x38],rax
   14000a661:	cmp    rax,0xffffffffffffffff
   14000a665:	jne    0x14000a67e
   14000a667:	mov    rbx,QWORD PTR [rip+0x1d6a]        # 0x14000c3d8
   14000a66e:	mov    rcx,rbx
   14000a671:	call   QWORD PTR [rip+0x1e99]        # 0x14000c510
   14000a677:	mov    rcx,rdi
   14000a67a:	call   rbx
   14000a67c:	jmp    0x14000a6db
   14000a67e:	mov    ecx,0x8
   14000a683:	call   0x14000aa3a
   14000a688:	nop
   14000a689:	mov    rax,QWORD PTR [rip+0x7968]        # 0x140011ff8
   14000a690:	mov    QWORD PTR [rsp+0x38],rax
   14000a695:	mov    rax,QWORD PTR [rip+0x7954]        # 0x140011ff0
   14000a69c:	mov    QWORD PTR [rsp+0x40],rax
   14000a6a1:	lea    r8,[rsp+0x40]
   14000a6a6:	lea    rdx,[rsp+0x38]
   14000a6ab:	mov    rcx,rdi
   14000a6ae:	call   0x14000aa52
   14000a6b3:	mov    rbx,rax
   14000a6b6:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a6bb:	mov    QWORD PTR [rip+0x7936],rdx        # 0x140011ff8
   14000a6c2:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a6c7:	mov    QWORD PTR [rip+0x7922],rdx        # 0x140011ff0
   14000a6ce:	mov    ecx,0x8
   14000a6d3:	call   0x14000aa46
   14000a6d8:	mov    rax,rbx
   14000a6db:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6e0:	add    rsp,0x20
   14000a6e4:	pop    rdi
   14000a6e5:	ret    
   14000a6e6:	int3   
   14000a6e7:	int3   
   14000a6e8:	int3   
   14000a6e9:	int3   
   14000a6ea:	int3   
   14000a6eb:	int3   
   14000a6ec:	sub    rsp,0x28
   14000a6f0:	call   0x14000a648
   14000a6f5:	neg    rax
   14000a6f8:	sbb    eax,eax
   14000a6fa:	neg    eax
   14000a6fc:	dec    eax
   14000a6fe:	add    rsp,0x28
   14000a702:	ret    
   14000a703:	int3   
   14000a704:	int3   
   14000a705:	int3   
   14000a706:	int3   
   14000a707:	int3   
   14000a708:	int3   
   14000a709:	int3   
   14000a70a:	jmp    QWORD PTR [rip+0x1c68]        # 0x14000c378
   14000a710:	int3   
   14000a711:	int3   
   14000a712:	int3   
   14000a713:	int3   
   14000a714:	int3   
   14000a715:	int3   
   14000a716:	jmp    QWORD PTR [rip+0x1c8c]        # 0x14000c3a8
   14000a71c:	int3   
   14000a71d:	int3   
   14000a71e:	int3   
   14000a71f:	int3   
   14000a720:	int3   
   14000a721:	int3   
   14000a722:	int3   
   14000a723:	int3   
   14000a724:	int3   
   14000a725:	int3   
   14000a726:	int3   
   14000a727:	int3   
   14000a728:	int3   
   14000a729:	int3   
   14000a72a:	int3   
   14000a72b:	int3   
   14000a72c:	int3   
   14000a72d:	int3   
   14000a72e:	int3   
   14000a72f:	int3   
   14000a730:	sub    rsp,0x28
   14000a734:	mov    rax,QWORD PTR [rcx]
   14000a737:	cmp    DWORD PTR [rax],0xe06d7363
   14000a73d:	jne    0x14000a762
   14000a73f:	cmp    DWORD PTR [rax+0x18],0x4
   14000a743:	jne    0x14000a762
   14000a745:	mov    ecx,DWORD PTR [rax+0x20]
   14000a748:	lea    eax,[rcx-0x19930520]
   14000a74e:	cmp    eax,0x2
   14000a751:	jbe    0x14000a75b
   14000a753:	cmp    ecx,0x1994000
   14000a759:	jne    0x14000a762
   14000a75b:	call   QWORD PTR [rip+0x1c6f]        # 0x14000c3d0
   14000a761:	int3   
   14000a762:	xor    eax,eax
   14000a764:	add    rsp,0x28
   14000a768:	ret    
   14000a769:	int3   
   14000a76a:	int3   
   14000a76b:	int3   
   14000a76c:	int3   
   14000a76d:	int3   
   14000a76e:	int3   
   14000a76f:	int3   
   14000a770:	sub    rsp,0x28
   14000a774:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000a730
   14000a77b:	call   QWORD PTR [rip+0x18bf]        # 0x14000c040
   14000a781:	xor    eax,eax
   14000a783:	add    rsp,0x28
   14000a787:	ret    
   14000a788:	int3   
   14000a789:	int3   
   14000a78a:	int3   
   14000a78b:	int3   
   14000a78c:	int3   
   14000a78d:	int3   
   14000a78e:	jmp    QWORD PTR [rip+0x1c2c]        # 0x14000c3c0
   14000a794:	int3   
   14000a795:	int3   
   14000a796:	int3   
   14000a797:	int3   
   14000a798:	int3   
   14000a799:	int3   
   14000a79a:	int3   
   14000a79b:	int3   
   14000a79c:	sub    rsp,0x18
   14000a7a0:	xor    edx,edx
   14000a7a2:	lea    rax,[rcx-0x1]
   14000a7a6:	cmp    rax,0xfffffffffffffffd
   14000a7aa:	ja     0x14000a7e8
   14000a7ac:	mov    eax,0x5a4d
   14000a7b1:	cmp    WORD PTR [rcx],ax
   14000a7b4:	jne    0x14000a7e0
   14000a7b6:	cmp    DWORD PTR [rcx+0x3c],edx
   14000a7b9:	jl     0x14000a7e0
   14000a7bb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000a7c2:	jae    0x14000a7e0
   14000a7c4:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000a7c8:	add    rax,rcx
   14000a7cb:	mov    QWORD PTR [rsp],rax
   14000a7cf:	cmp    DWORD PTR [rax],0x4550
   14000a7d5:	cmovne rax,rdx
   14000a7d9:	mov    rdx,rax
   14000a7dc:	mov    QWORD PTR [rsp],rax
   14000a7e0:	jmp    0x14000a7e8
   14000a7e2:	xor    edx,edx
   14000a7e4:	mov    QWORD PTR [rsp],rdx
   14000a7e8:	mov    rax,rdx
   14000a7eb:	add    rsp,0x18
   14000a7ef:	ret    
   14000a7f0:	int3   
   14000a7f1:	int3   
   14000a7f2:	int3   
   14000a7f3:	int3   
   14000a7f4:	int3   
   14000a7f5:	int3   
   14000a7f6:	int3   
   14000a7f7:	int3   
   14000a7f8:	rex push rbx
   14000a7fa:	sub    rsp,0x20
   14000a7fe:	mov    ebx,ecx
   14000a800:	xor    ecx,ecx
   14000a802:	call   QWORD PTR [rip+0x18b0]        # 0x14000c0b8
   14000a808:	test   rax,rax
   14000a80b:	je     0x14000a835
   14000a80d:	mov    rcx,rax
   14000a810:	call   0x14000a79c
   14000a815:	test   rax,rax
   14000a818:	je     0x14000a835
   14000a81a:	mov    ecx,0x2
   14000a81f:	cmp    WORD PTR [rax+0x5c],cx
   14000a823:	jne    0x14000a829
   14000a825:	mov    eax,ecx
   14000a827:	jmp    0x14000a837
   14000a829:	cmp    WORD PTR [rax+0x5c],0x3
   14000a82e:	mov    eax,0x1
   14000a833:	je     0x14000a837
   14000a835:	mov    eax,ebx
   14000a837:	add    rsp,0x20
   14000a83b:	pop    rbx
   14000a83c:	ret    
   14000a83d:	int3   
   14000a83e:	int3   
   14000a83f:	int3   
   14000a840:	int3   
   14000a841:	int3   
   14000a842:	int3   
   14000a843:	int3   
   14000a844:	jmp    QWORD PTR [rip+0x1b7e]        # 0x14000c3c8
   14000a84a:	int3   
   14000a84b:	int3   
   14000a84c:	int3   
   14000a84d:	int3   
   14000a84e:	int3   
   14000a84f:	int3   
   14000a850:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000a854:	xor    r9d,r9d
   14000a857:	add    r8,rcx
   14000a85a:	mov    r10,rdx
   14000a85d:	movzx  eax,WORD PTR [r8+0x14]
   14000a862:	movzx  r11d,WORD PTR [r8+0x6]
   14000a867:	add    rax,0x18
   14000a86b:	add    rax,r8
   14000a86e:	test   r11d,r11d
   14000a871:	je     0x14000a891
   14000a873:	mov    edx,DWORD PTR [rax+0xc]
   14000a876:	cmp    r10,rdx
   14000a879:	jb     0x14000a885
   14000a87b:	mov    ecx,DWORD PTR [rax+0x8]
   14000a87e:	add    ecx,edx
   14000a880:	cmp    r10,rcx
   14000a883:	jb     0x14000a893
   14000a885:	inc    r9d
   14000a888:	add    rax,0x28
   14000a88c:	cmp    r9d,r11d
   14000a88f:	jb     0x14000a873
   14000a891:	xor    eax,eax
   14000a893:	ret    
   14000a894:	int3   
   14000a895:	int3   
   14000a896:	int3   
   14000a897:	int3   
   14000a898:	int3   
   14000a899:	int3   
   14000a89a:	int3   
   14000a89b:	int3   
   14000a89c:	int3   
   14000a89d:	int3   
   14000a89e:	int3   
   14000a89f:	int3   
   14000a8a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a8a5:	push   rdi
   14000a8a6:	sub    rsp,0x20
   14000a8aa:	mov    rbx,rcx
   14000a8ad:	lea    rdi,[rip+0xffffffffffff574c]        # 0x140000000
   14000a8b4:	mov    rcx,rdi
   14000a8b7:	call   0x14000a900
   14000a8bc:	test   eax,eax
   14000a8be:	je     0x14000a8e2
   14000a8c0:	sub    rbx,rdi
   14000a8c3:	mov    rdx,rbx
   14000a8c6:	mov    rcx,rdi
   14000a8c9:	call   0x14000a850
   14000a8ce:	test   rax,rax
   14000a8d1:	je     0x14000a8e2
   14000a8d3:	mov    eax,DWORD PTR [rax+0x24]
   14000a8d6:	shr    eax,0x1f
   14000a8d9:	not    eax
   14000a8db:	and    eax,0x1
   14000a8de:	jmp    0x14000a8e2
   14000a8e0:	xor    eax,eax
   14000a8e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a8e7:	add    rsp,0x20
   14000a8eb:	pop    rdi
   14000a8ec:	ret    
   14000a8ed:	int3   
   14000a8ee:	int3   
   14000a8ef:	int3   
   14000a8f0:	int3   
   14000a8f1:	int3   
   14000a8f2:	int3   
   14000a8f3:	int3   
   14000a8f4:	int3   
   14000a8f5:	int3   
   14000a8f6:	int3   
   14000a8f7:	int3   
   14000a8f8:	int3   
   14000a8f9:	int3   
   14000a8fa:	int3   
   14000a8fb:	int3   
   14000a8fc:	int3   
   14000a8fd:	int3   
   14000a8fe:	int3   
   14000a8ff:	int3   
   14000a900:	mov    rax,rcx
   14000a903:	mov    ecx,0x5a4d
   14000a908:	cmp    WORD PTR [rax],cx
   14000a90b:	je     0x14000a910
   14000a90d:	xor    eax,eax
   14000a90f:	ret    
   14000a910:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000a914:	add    rcx,rax
   14000a917:	xor    eax,eax
   14000a919:	cmp    DWORD PTR [rcx],0x4550
   14000a91f:	jne    0x14000a92d
   14000a921:	mov    edx,0x20b
   14000a926:	cmp    WORD PTR [rcx+0x18],dx
   14000a92a:	sete   al
   14000a92d:	ret    
   14000a92e:	int3   
   14000a92f:	int3   
   14000a930:	int3   
   14000a931:	int3   
   14000a932:	int3   
   14000a933:	int3   
   14000a934:	mov    QWORD PTR [rsp+0x20],rbx
   14000a939:	push   rbp
   14000a93a:	mov    rbp,rsp
   14000a93d:	sub    rsp,0x20
   14000a941:	and    QWORD PTR [rbp+0x18],0x0
   14000a946:	movabs rbx,0x2b992ddfa232
   14000a950:	mov    rax,QWORD PTR [rip+0x66a9]        # 0x140011000
   14000a957:	cmp    rax,rbx
   14000a95a:	jne    0x14000a9ef
   14000a960:	lea    rcx,[rbp+0x18]
   14000a964:	call   QWORD PTR [rip+0x1876]        # 0x14000c1e0
   14000a96a:	mov    rax,QWORD PTR [rbp+0x18]
   14000a96e:	mov    QWORD PTR [rbp+0x10],rax
   14000a972:	call   QWORD PTR [rip+0x17a0]        # 0x14000c118
   14000a978:	mov    eax,eax
   14000a97a:	xor    QWORD PTR [rbp+0x10],rax
   14000a97e:	call   QWORD PTR [rip+0x178c]        # 0x14000c110
   14000a984:	mov    eax,eax
   14000a986:	xor    QWORD PTR [rbp+0x10],rax
   14000a98a:	call   QWORD PTR [rip+0x1848]        # 0x14000c1d8
   14000a990:	mov    eax,eax
   14000a992:	shl    rax,0x18
   14000a996:	xor    QWORD PTR [rbp+0x10],rax
   14000a99a:	call   QWORD PTR [rip+0x1838]        # 0x14000c1d8
   14000a9a0:	mov    eax,eax
   14000a9a2:	lea    rcx,[rbp+0x10]
   14000a9a6:	xor    rax,QWORD PTR [rbp+0x10]
   14000a9aa:	xor    rax,rcx
   14000a9ad:	lea    rcx,[rbp+0x20]
   14000a9b1:	mov    QWORD PTR [rbp+0x10],rax
   14000a9b5:	call   QWORD PTR [rip+0x178d]        # 0x14000c148
   14000a9bb:	mov    eax,DWORD PTR [rbp+0x20]
   14000a9be:	movabs rcx,0xffffffffffff
   14000a9c8:	shl    rax,0x20
   14000a9cc:	xor    rax,QWORD PTR [rbp+0x20]
   14000a9d0:	xor    rax,QWORD PTR [rbp+0x10]
   14000a9d4:	and    rax,rcx
   14000a9d7:	movabs rcx,0x2b992ddfa233
   14000a9e1:	cmp    rax,rbx
   14000a9e4:	cmove  rax,rcx
   14000a9e8:	mov    QWORD PTR [rip+0x6611],rax        # 0x140011000
   14000a9ef:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a9f4:	not    rax
   14000a9f7:	mov    QWORD PTR [rip+0x660a],rax        # 0x140011008
   14000a9fe:	add    rsp,0x20
   14000aa02:	pop    rbp
   14000aa03:	ret    
   14000aa04:	int3   
   14000aa05:	int3   
   14000aa06:	int3   
   14000aa07:	int3   
   14000aa08:	int3   
   14000aa09:	int3   
   14000aa0a:	jmp    QWORD PTR [rip+0x1a28]        # 0x14000c438
   14000aa10:	int3   
   14000aa11:	int3   
   14000aa12:	int3   
   14000aa13:	int3   
   14000aa14:	int3   
   14000aa15:	int3   
   14000aa16:	jmp    QWORD PTR [rip+0x1a0c]        # 0x14000c428
   14000aa1c:	int3   
   14000aa1d:	int3   
   14000aa1e:	int3   
   14000aa1f:	int3   
   14000aa20:	int3   
   14000aa21:	int3   
   14000aa22:	int3   
   14000aa23:	int3   
   14000aa24:	int3   
   14000aa25:	int3   
   14000aa26:	int3   
   14000aa27:	int3   
   14000aa28:	int3   
   14000aa29:	int3   
   14000aa2a:	int3   
   14000aa2b:	int3   
   14000aa2c:	int3   
   14000aa2d:	int3   
   14000aa2e:	int3   
   14000aa2f:	int3   
   14000aa30:	ret    0x0
   14000aa33:	int3   
   14000aa34:	int3   
   14000aa35:	int3   
   14000aa36:	int3   
   14000aa37:	int3   
   14000aa38:	int3   
   14000aa39:	int3   
   14000aa3a:	jmp    QWORD PTR [rip+0x19b0]        # 0x14000c3f0
   14000aa40:	int3   
   14000aa41:	int3   
   14000aa42:	int3   
   14000aa43:	int3   
   14000aa44:	int3   
   14000aa45:	int3   
   14000aa46:	jmp    QWORD PTR [rip+0x199c]        # 0x14000c3e8
   14000aa4c:	int3   
   14000aa4d:	int3   
   14000aa4e:	int3   
   14000aa4f:	int3   
   14000aa50:	int3   
   14000aa51:	int3   
   14000aa52:	jmp    QWORD PTR [rip+0x1988]        # 0x14000c3e0
   14000aa58:	int3   
   14000aa59:	int3   
   14000aa5a:	int3   
   14000aa5b:	int3   
   14000aa5c:	int3   
   14000aa5d:	int3   
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	int3   
   14000aa61:	int3   
   14000aa62:	int3   
   14000aa63:	int3   
   14000aa64:	int3   
   14000aa65:	int3   
   14000aa66:	int3   
   14000aa67:	int3   
   14000aa68:	rex push rbx
   14000aa6a:	sub    rsp,0x20
   14000aa6e:	mov    ebx,ecx
   14000aa70:	call   0x14000aa8c
   14000aa75:	lea    rdx,[rbx+rbx*2]
   14000aa79:	shl    rdx,0x4
   14000aa7d:	add    rax,rdx
   14000aa80:	add    rsp,0x20
   14000aa84:	pop    rbx
   14000aa85:	ret    
   14000aa86:	int3   
   14000aa87:	int3   
   14000aa88:	int3   
   14000aa89:	int3   
   14000aa8a:	int3   
   14000aa8b:	int3   
   14000aa8c:	jmp    QWORD PTR [rip+0x1a26]        # 0x14000c4b8
   14000aa92:	int3   
   14000aa93:	int3   
   14000aa94:	int3   
   14000aa95:	int3   
   14000aa96:	int3   
   14000aa97:	int3   
   14000aa98:	int3   
   14000aa99:	int3   
   14000aa9a:	int3   
   14000aa9b:	int3   
   14000aa9c:	int3   
   14000aa9d:	int3   
   14000aa9e:	int3   
   14000aa9f:	int3   
   14000aaa0:	int3   
   14000aaa1:	int3   
   14000aaa2:	int3   
   14000aaa3:	int3   
   14000aaa4:	int3   
   14000aaa5:	int3   
   14000aaa6:	jmp    QWORD PTR [rip+0x19e4]        # 0x14000c490
   14000aaac:	int3   
   14000aaad:	int3   
   14000aaae:	int3   
   14000aaaf:	int3   
   14000aab0:	int3   
   14000aab1:	int3   
   14000aab2:	jmp    QWORD PTR [rip+0x19d0]        # 0x14000c488
   14000aab8:	int3   
   14000aab9:	int3   
   14000aaba:	int3   
   14000aabb:	int3   
   14000aabc:	int3   
   14000aabd:	int3   
   14000aabe:	jmp    QWORD PTR [rip+0x1a0c]        # 0x14000c4d0
   14000aac4:	int3   
   14000aac5:	int3   
   14000aac6:	int3   
   14000aac7:	int3   
   14000aac8:	int3   
   14000aac9:	int3   
   14000aaca:	int3   
   14000aacb:	int3   
   14000aacc:	int3   
   14000aacd:	int3   
   14000aace:	int3   
   14000aacf:	int3   
   14000aad0:	int3   
   14000aad1:	int3   
   14000aad2:	int3   
   14000aad3:	int3   
   14000aad4:	int3   
   14000aad5:	int3   
   14000aad6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000aae0:	jmp    rax
   14000aae2:	int3   
   14000aae3:	int3   
   14000aae4:	int3   
   14000aae5:	int3   
   14000aae6:	int3   
   14000aae7:	int3   
   14000aae8:	int3   
   14000aae9:	int3   
   14000aaea:	int3   
   14000aaeb:	int3   
   14000aaec:	int3   
   14000aaed:	int3   
   14000aaee:	int3   
   14000aaef:	int3   
   14000aaf0:	int3   
   14000aaf1:	int3   
   14000aaf2:	int3   
   14000aaf3:	int3   
   14000aaf4:	int3   
   14000aaf5:	int3   
   14000aaf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ab00:	sub    rsp,0x10
   14000ab04:	mov    QWORD PTR [rsp],r10
   14000ab08:	mov    QWORD PTR [rsp+0x8],r11
   14000ab0d:	xor    r11,r11
   14000ab10:	lea    r10,[rsp+0x18]
   14000ab15:	sub    r10,rax
   14000ab18:	cmovb  r10,r11
   14000ab1c:	mov    r11,QWORD PTR gs:0x10
   14000ab25:	cmp    r10,r11
   14000ab28:	jae    0x14000ab3f
   14000ab2a:	and    r10w,0xf000
   14000ab30:	lea    r11,[r11-0x1000]
   14000ab37:	test   BYTE PTR [r11],r11b
   14000ab3a:	cmp    r10,r11
   14000ab3d:	jne    0x14000ab30
   14000ab3f:	mov    r10,QWORD PTR [rsp]
   14000ab43:	mov    r11,QWORD PTR [rsp+0x8]
   14000ab48:	add    rsp,0x10
   14000ab4c:	ret    
   14000ab4d:	int3   
   14000ab4e:	int3   
   14000ab4f:	int3   
   14000ab50:	int3   
   14000ab51:	int3   
   14000ab52:	int3   
   14000ab53:	int3   
   14000ab54:	int3   
   14000ab55:	int3   
   14000ab56:	mov    rcx,QWORD PTR [rdx+0x40]
   14000ab5d:	rex.W jmp QWORD PTR [rip+0x1934]        # 0x14000c498
   14000ab64:	int3   
   14000ab65:	int3   
   14000ab66:	int3   
   14000ab67:	int3   
   14000ab68:	int3   
   14000ab69:	int3   
   14000ab6a:	mov    QWORD PTR [rsp+0x10],rdx
   14000ab6f:	push   rbp
   14000ab70:	sub    rsp,0x20
   14000ab74:	mov    rbp,rdx
   14000ab77:	mov    rax,QWORD PTR [rbp+0x70]
   14000ab7b:	mov    DWORD PTR [rax+0x7c],0x8
   14000ab82:	lea    rax,[rip+0xffffffffffff6bb7]        # 0x140001740
   14000ab89:	add    rsp,0x20
   14000ab8d:	pop    rbp
   14000ab8e:	ret    
   14000ab8f:	int3   
   14000ab90:	mov    QWORD PTR [rsp+0x10],rdx
   14000ab95:	push   rbp
   14000ab96:	sub    rsp,0x20
   14000ab9a:	mov    rbp,rdx
   14000ab9d:	mov    rax,QWORD PTR [rbp+0x70]
   14000aba1:	mov    DWORD PTR [rax+0x7c],0x8
   14000aba8:	lea    rax,[rip+0xffffffffffff6b91]        # 0x140001740
   14000abaf:	add    rsp,0x20
   14000abb3:	pop    rbp
   14000abb4:	ret    
   14000abb5:	int3   
   14000abb6:	mov    QWORD PTR [rsp+0x10],rdx
   14000abbb:	push   rbp
   14000abbc:	sub    rsp,0x20
   14000abc0:	mov    rbp,rdx
   14000abc3:	mov    rax,QWORD PTR [rbp+0x70]
   14000abc7:	mov    DWORD PTR [rax+0x7c],0x8
   14000abce:	lea    rax,[rip+0xffffffffffff6b6b]        # 0x140001740
   14000abd5:	add    rsp,0x20
   14000abd9:	pop    rbp
   14000abda:	ret    
   14000abdb:	int3   
   14000abdc:	int3   
   14000abdd:	int3   
   14000abde:	int3   
   14000abdf:	int3   
   14000abe0:	int3   
   14000abe1:	int3   
   14000abe2:	mov    rcx,QWORD PTR [rdx+0x70]
   14000abe9:	jmp    0x1400014cc
   14000abee:	mov    rcx,QWORD PTR [rdx+0x70]
   14000abf5:	add    rcx,0x18
   14000abf9:	jmp    0x1400014cc
   14000abfe:	mov    rcx,QWORD PTR [rdx+0x70]
   14000ac05:	add    rcx,0x30
   14000ac09:	jmp    0x1400014cc
   14000ac0e:	mov    rcx,QWORD PTR [rdx+0x70]
   14000ac15:	add    rcx,0x48
   14000ac19:	jmp    0x1400014cc
   14000ac1e:	int3   
   14000ac1f:	int3   
   14000ac20:	int3   
   14000ac21:	int3   
   14000ac22:	int3   
   14000ac23:	int3   
   14000ac24:	lea    rcx,[rdx+0x38]
   14000ac2b:	jmp    0x140001b34
   14000ac30:	int3   
   14000ac31:	int3   
   14000ac32:	int3   
   14000ac33:	int3   
   14000ac34:	int3   
   14000ac35:	int3   
   14000ac36:	mov    QWORD PTR [rsp+0x10],rdx
   14000ac3b:	push   rbp
   14000ac3c:	sub    rsp,0x20
   14000ac40:	mov    rbp,rdx
   14000ac43:	mov    rcx,QWORD PTR [rbp+0x98]
   14000ac4a:	mov    QWORD PTR [rbp+0x98],rcx
   14000ac51:	add    rcx,0x1
   14000ac55:	je     0x14000ac81
   14000ac57:	xor    edx,edx
   14000ac59:	or     rax,0xffffffffffffffff
   14000ac5d:	div    rcx
   14000ac60:	cmp    rax,0x1
   14000ac64:	jae    0x14000ac81
   14000ac66:	xor    edx,edx
   14000ac68:	lea    rcx,[rbp+0x40]
   14000ac6c:	call   0x140001008
   14000ac71:	lea    rdx,[rip+0x4038]        # 0x14000ecb0
   14000ac78:	lea    rcx,[rbp+0x40]
   14000ac7c:	call   0x14000a506
   14000ac81:	call   0x140009cc8
   14000ac86:	mov    QWORD PTR [rbp+0xa8],rax
   14000ac8d:	lea    rax,[rip+0xffffffffffff7ce8]        # 0x14000297c
   14000ac94:	add    rsp,0x20
   14000ac98:	pop    rbp
   14000ac99:	ret    
   14000ac9a:	int3   
   14000ac9b:	mov    QWORD PTR [rsp+0x10],rdx
   14000aca0:	push   rbp
   14000aca1:	sub    rsp,0x20
   14000aca5:	mov    rbp,rdx
   14000aca8:	xor    r8d,r8d
   14000acab:	mov    dl,0x1
   14000acad:	mov    rcx,QWORD PTR [rbp+0x90]
   14000acb4:	call   0x140001dd8
   14000acb9:	xor    edx,edx
   14000acbb:	xor    ecx,ecx
   14000acbd:	call   0x14000a506
   14000acc2:	nop
   14000acc3:	int3   
   14000acc4:	int3   
   14000acc5:	int3   
   14000acc6:	int3   
   14000acc7:	int3   
   14000acc8:	int3   
   14000acc9:	mov    QWORD PTR [rsp+0x10],rdx
   14000acce:	push   rbp
   14000accf:	sub    rsp,0x20
   14000acd3:	mov    rbp,rdx
   14000acd6:	mov    rdx,QWORD PTR [rbp+0x40]
   14000acda:	call   0x140002770
   14000acdf:	xor    edx,edx
   14000ace1:	xor    ecx,ecx
   14000ace3:	call   0x14000a506
   14000ace8:	nop
   14000ace9:	int3   
   14000acea:	int3   
   14000aceb:	int3   
   14000acec:	int3   
   14000aced:	int3   
   14000acee:	int3   
   14000acef:	lea    rcx,[rdx+0x28]
   14000acf6:	jmp    0x140001b34
   14000acfb:	int3   
   14000acfc:	int3   
   14000acfd:	int3   
   14000acfe:	int3   
   14000acff:	int3   
   14000ad00:	int3   
   14000ad01:	mov    rcx,QWORD PTR [rdx+0x40]
   14000ad08:	jmp    0x1400014cc
   14000ad0d:	mov    rcx,QWORD PTR [rdx+0x40]
   14000ad14:	add    rcx,0x18
   14000ad18:	jmp    0x1400014cc
   14000ad1d:	mov    rcx,QWORD PTR [rdx+0x40]
   14000ad24:	add    rcx,0x30
   14000ad28:	jmp    0x1400014cc
   14000ad2d:	mov    rcx,QWORD PTR [rdx+0x40]
   14000ad34:	add    rcx,0x48
   14000ad38:	jmp    0x1400014cc
   14000ad3d:	int3   
   14000ad3e:	int3   
   14000ad3f:	int3   
   14000ad40:	int3   
   14000ad41:	int3   
   14000ad42:	int3   
   14000ad43:	mov    rcx,QWORD PTR [rdx+0x40]
   14000ad4a:	jmp    0x140009d48
   14000ad4f:	mov    QWORD PTR [rsp+0x10],rdx
   14000ad54:	push   rbp
   14000ad55:	sub    rsp,0x20
   14000ad59:	mov    rbp,rdx
   14000ad5c:	lea    rax,[rip+0xffffffffffff84c0]        # 0x140003223
   14000ad63:	add    rsp,0x20
   14000ad67:	pop    rbp
   14000ad68:	ret    
   14000ad69:	int3   
   14000ad6a:	int3   
   14000ad6b:	int3   
   14000ad6c:	int3   
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	lea    rcx,[rdx+0x40]
   14000ad77:	jmp    0x140006894
   14000ad7c:	int3   
   14000ad7d:	int3   
   14000ad7e:	int3   
   14000ad7f:	int3   
   14000ad80:	int3   
   14000ad81:	int3   
   14000ad82:	mov    QWORD PTR [rsp+0x10],rdx
   14000ad87:	push   rbp
   14000ad88:	sub    rsp,0x20
   14000ad8c:	mov    rbp,rdx
   14000ad8f:	mov    rdx,QWORD PTR [rbp+0x40]
   14000ad93:	call   0x140002770
   14000ad98:	xor    edx,edx
   14000ad9a:	xor    ecx,ecx
   14000ad9c:	call   0x14000a506
   14000ada1:	nop
   14000ada2:	int3   
   14000ada3:	int3   
   14000ada4:	int3   
   14000ada5:	int3   
   14000ada6:	int3   
   14000ada7:	int3   
   14000ada8:	lea    rcx,[rdx+0x48]
   14000adaf:	jmp    0x140001b34
   14000adb4:	mov    QWORD PTR [rsp+0x10],rdx
   14000adb9:	push   rbp
   14000adba:	sub    rsp,0x20
   14000adbe:	mov    rbp,rdx
   14000adc1:	mov    rcx,QWORD PTR [rbp+0x20]
   14000adc5:	call   QWORD PTR [rip+0x12cd]        # 0x14000c098
   14000adcb:	mov    rcx,QWORD PTR [rbp+0x28]
   14000adcf:	call   0x140009d48
   14000add4:	nop
   14000add5:	lea    rax,[rip+0xffffffffffffbe5d]        # 0x140006c39
   14000addc:	add    rsp,0x20
   14000ade0:	pop    rbp
   14000ade1:	ret    
   14000ade2:	int3   
   14000ade3:	int3   
   14000ade4:	int3   
   14000ade5:	int3   
   14000ade6:	int3   
   14000ade7:	int3   
   14000ade8:	int3   
   14000ade9:	mov    QWORD PTR [rsp+0x10],rdx
   14000adee:	push   rbp
   14000adef:	sub    rsp,0x20
   14000adf3:	mov    rbp,rdx
   14000adf6:	mov    rdx,QWORD PTR [rbp+0x40]
   14000adfa:	call   0x140002770
   14000adff:	xor    edx,edx
   14000ae01:	xor    ecx,ecx
   14000ae03:	call   0x14000a506
   14000ae08:	nop
   14000ae09:	int3   
   14000ae0a:	int3   
   14000ae0b:	int3   
   14000ae0c:	int3   
   14000ae0d:	int3   
   14000ae0e:	int3   
   14000ae0f:	mov    QWORD PTR [rsp+0x10],rdx
   14000ae14:	push   rbp
   14000ae15:	sub    rsp,0x20
   14000ae19:	mov    rbp,rdx
   14000ae1c:	mov    rdx,QWORD PTR [rbp+0x40]
   14000ae20:	call   0x140002770
   14000ae25:	xor    edx,edx
   14000ae27:	xor    ecx,ecx
   14000ae29:	call   0x14000a506
   14000ae2e:	nop
   14000ae2f:	int3   
   14000ae30:	int3   
   14000ae31:	int3   
   14000ae32:	int3   
   14000ae33:	int3   
   14000ae34:	int3   
   14000ae35:	lea    rcx,[rdx+0xb0]
   14000ae3c:	jmp    0x140009394
   14000ae41:	lea    rcx,[rdx+0x88]
   14000ae48:	jmp    0x140009394
   14000ae4d:	lea    rcx,[rdx+0x88]
   14000ae54:	jmp    0x140009394
   14000ae59:	lea    rcx,[rdx+0x88]
   14000ae60:	jmp    0x140009394
   14000ae65:	lea    rcx,[rdx+0x88]
   14000ae6c:	jmp    0x140009394
   14000ae71:	lea    rcx,[rdx+0x88]
   14000ae78:	jmp    0x140009394
   14000ae7d:	lea    rcx,[rdx+0x88]
   14000ae84:	jmp    0x140009394
   14000ae89:	lea    rcx,[rdx+0x88]
   14000ae90:	jmp    0x140009394
   14000ae95:	int3   
   14000ae96:	int3   
   14000ae97:	int3   
   14000ae98:	int3   
   14000ae99:	int3   
   14000ae9a:	int3   
   14000ae9b:	mov    QWORD PTR [rsp+0x10],rdx
   14000aea0:	push   rbp
   14000aea1:	sub    rsp,0x20
   14000aea5:	mov    rbp,rdx
   14000aea8:	mov    rcx,QWORD PTR [rbp+0x98]
   14000aeaf:	mov    QWORD PTR [rbp+0x98],rcx
   14000aeb6:	add    rcx,0x1
   14000aeba:	je     0x14000aee6
   14000aebc:	xor    edx,edx
   14000aebe:	or     rax,0xffffffffffffffff
   14000aec2:	div    rcx
   14000aec5:	cmp    rax,0x2
   14000aec9:	jae    0x14000aee6
   14000aecb:	xor    edx,edx
   14000aecd:	lea    rcx,[rbp+0x40]
   14000aed1:	call   0x140001008
   14000aed6:	lea    rdx,[rip+0x3dd3]        # 0x14000ecb0
   14000aedd:	lea    rcx,[rbp+0x40]
   14000aee1:	call   0x14000a506
   14000aee6:	add    rcx,rcx
   14000aee9:	call   0x140009cc8
   14000aeee:	mov    QWORD PTR [rbp+0xa8],rax
   14000aef5:	lea    rax,[rip+0xffffffffffffea52]        # 0x14000994e
   14000aefc:	add    rsp,0x20
   14000af00:	pop    rbp
   14000af01:	ret    
   14000af02:	int3   
   14000af03:	mov    QWORD PTR [rsp+0x10],rdx
   14000af08:	push   rbp
   14000af09:	sub    rsp,0x20
   14000af0d:	mov    rbp,rdx
   14000af10:	xor    r8d,r8d
   14000af13:	mov    dl,0x1
   14000af15:	mov    rcx,QWORD PTR [rbp+0x90]
   14000af1c:	call   0x1400095f8
   14000af21:	xor    edx,edx
   14000af23:	xor    ecx,ecx
   14000af25:	call   0x14000a506
   14000af2a:	nop
   14000af2b:	int3   
   14000af2c:	int3   
   14000af2d:	int3   
   14000af2e:	int3   
   14000af2f:	int3   
   14000af30:	int3   
   14000af31:	rex push rbp
   14000af33:	sub    rsp,0x20
   14000af37:	mov    rbp,rdx
   14000af3a:	mov    rax,QWORD PTR [rcx]
   14000af3d:	xor    ecx,ecx
   14000af3f:	cmp    DWORD PTR [rax],0xc00000fd
   14000af45:	sete   cl
   14000af48:	mov    eax,ecx
   14000af4a:	add    rsp,0x20
   14000af4e:	pop    rbp
   14000af4f:	ret    
   14000af50:	int3   
   14000af51:	int3   
   14000af52:	int3   
   14000af53:	int3   
   14000af54:	int3   
   14000af55:	int3   
   14000af56:	int3   
   14000af57:	rex push rbp
   14000af59:	sub    rsp,0x20
   14000af5d:	mov    rbp,rdx
   14000af60:	mov    rax,QWORD PTR [rcx]
   14000af63:	mov    rdx,rcx
   14000af66:	mov    ecx,DWORD PTR [rax]
   14000af68:	call   0x14000a78e
   14000af6d:	nop
   14000af6e:	add    rsp,0x20
   14000af72:	pop    rbp
   14000af73:	ret    
   14000af74:	int3   
   14000af75:	int3   
   14000af76:	int3   
   14000af77:	int3   
   14000af78:	int3   
   14000af79:	int3   
   14000af7a:	int3   
   14000af7b:	mov    QWORD PTR [rsp+0x10],rdx
   14000af80:	push   rbp
   14000af81:	sub    rsp,0x20
   14000af85:	mov    rbp,rdx
   14000af88:	and    QWORD PTR [rbp+0x50],0x0
   14000af8d:	lea    rax,[rip+0xfffffffffffff29d]        # 0x14000a231
   14000af94:	add    rsp,0x20
   14000af98:	pop    rbp
   14000af99:	ret    
   14000af9a:	int3   
   14000af9b:	int3   
   14000af9c:	int3   
   14000af9d:	int3   
   14000af9e:	int3   
   14000af9f:	int3   
   14000afa0:	int3   
   14000afa1:	rex push rbp
   14000afa3:	sub    rsp,0x20
   14000afa7:	mov    rbp,rdx
   14000afaa:	mov    ecx,0x8
   14000afaf:	call   0x14000aa46
   14000afb4:	nop
   14000afb5:	add    rsp,0x20
   14000afb9:	pop    rbp
   14000afba:	ret    
   14000afbb:	int3   
   14000afbc:	int3   
   14000afbd:	int3   
   14000afbe:	int3   
   14000afbf:	int3   
   14000afc0:	int3   
   14000afc1:	int3   
   14000afc2:	int3   
   14000afc3:	int3   
   14000afc4:	int3   
   14000afc5:	int3   
   14000afc6:	int3   
   14000afc7:	int3   
   14000afc8:	int3   
   14000afc9:	int3   
   14000afca:	int3   
   14000afcb:	int3   
   14000afcc:	int3   
   14000afcd:	int3   
   14000afce:	int3   
   14000afcf:	int3   
   14000afd0:	rex push rbp
   14000afd2:	sub    rsp,0x20
   14000afd6:	mov    rbp,rdx
   14000afd9:	mov    rax,QWORD PTR [rcx]
   14000afdc:	xor    ecx,ecx
   14000afde:	cmp    DWORD PTR [rax],0xc0000005
   14000afe4:	sete   cl
   14000afe7:	mov    eax,ecx
   14000afe9:	add    rsp,0x20
   14000afed:	pop    rbp
   14000afee:	ret    
   14000afef:	int3   
   14000aff0:	int3   
   14000aff1:	int3   
   14000aff2:	int3   
   14000aff3:	int3   
   14000aff4:	int3   
   14000aff5:	int3   
   14000aff6:	int3   
   14000aff7:	int3   
   14000aff8:	int3   
   14000aff9:	int3   
   14000affa:	int3   
   14000affb:	int3   
   14000affc:	int3   
   14000affd:	int3   
   14000affe:	int3   
   14000afff:	int3   
   14000b000:	lea    rax,[rip+0x16f1]        # 0x14000c6f8
   14000b007:	lea    rcx,[rip+0x69e2]        # 0x1400119f0
   14000b00e:	mov    QWORD PTR [rip+0x69db],rax        # 0x1400119f0
   14000b015:	jmp    0x14000a1ac
