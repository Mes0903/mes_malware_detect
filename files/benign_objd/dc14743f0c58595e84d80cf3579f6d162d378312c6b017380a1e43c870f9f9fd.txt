
dc14743f0c58595e84d80cf3579f6d162d378312c6b017380a1e43c870f9f9fd.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x18],r8
   14000100d:	mov    QWORD PTR [rsp+0x20],r9
   140001012:	push   rbx
   140001013:	push   rbp
   140001014:	push   rsi
   140001015:	push   rdi
   140001016:	sub    rsp,0x28
   14000101a:	xor    ebp,ebp
   14000101c:	lea    rax,[rdx-0x1]
   140001020:	cmp    rax,0x7ffffffe
   140001026:	mov    rsi,rcx
   140001029:	mov    edi,ebp
   14000102b:	mov    ecx,0x80070057
   140001030:	cmova  edi,ecx
   140001033:	test   edi,edi
   140001035:	js     0x14000106c
   140001037:	lea    rbx,[rdx-0x1]
   14000103b:	mov    rcx,rsi
   14000103e:	mov    rdx,rbx
   140001041:	lea    r9,[rsp+0x68]
   140001046:	mov    edi,ebp
   140001048:	call   QWORD PTR [rip+0x21da]        # 0x140003228
   14000104e:	test   eax,eax
   140001050:	js     0x140001061
   140001052:	cdqe   
   140001054:	cmp    rax,rbx
   140001057:	ja     0x140001061
   140001059:	jne    0x140001074
   14000105b:	mov    WORD PTR [rsi+rbx*2],bp
   14000105f:	jmp    0x140001074
   140001061:	mov    WORD PTR [rsi+rbx*2],bp
   140001065:	mov    edi,0x8007007a
   14000106a:	jmp    0x140001074
   14000106c:	test   rdx,rdx
   14000106f:	je     0x140001074
   140001071:	mov    WORD PTR [rsi],bp
   140001074:	mov    eax,edi
   140001076:	add    rsp,0x28
   14000107a:	pop    rdi
   14000107b:	pop    rsi
   14000107c:	pop    rbp
   14000107d:	pop    rbx
   14000107e:	ret    
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	sub    rsp,0x98
   14000108f:	mov    rax,QWORD PTR [rip+0x3f72]        # 0x140005008
   140001096:	xor    rax,rsp
   140001099:	mov    QWORD PTR [rsp+0x80],rax
   1400010a1:	and    DWORD PTR [rsp+0x20],0x0
   1400010a6:	lea    r8,[rsp+0x28]
   1400010ab:	mov    edx,0x1
   1400010b0:	call   QWORD PTR [rip+0x1f5a]        # 0x140003010
   1400010b6:	test   eax,eax
   1400010b8:	je     0x1400010fb
   1400010ba:	xor    edx,edx
   1400010bc:	mov    DWORD PTR [rsp+0x24],0x44
   1400010c4:	lea    r9,[rsp+0x24]
   1400010c9:	lea    r8,[rsp+0x30]
   1400010ce:	lea    ecx,[rdx+0x1a]
   1400010d1:	call   QWORD PTR [rip+0x1f49]        # 0x140003020
   1400010d7:	test   eax,eax
   1400010d9:	je     0x1400010f0
   1400010db:	mov    rcx,QWORD PTR [rsp+0x28]
   1400010e0:	lea    r8,[rsp+0x20]
   1400010e5:	lea    rdx,[rsp+0x30]
   1400010ea:	call   QWORD PTR [rip+0x1f28]        # 0x140003018
   1400010f0:	mov    rcx,QWORD PTR [rsp+0x28]
   1400010f5:	call   QWORD PTR [rip+0x1f5d]        # 0x140003058
   1400010fb:	mov    eax,DWORD PTR [rsp+0x20]
   1400010ff:	mov    rcx,QWORD PTR [rsp+0x80]
   140001107:	xor    rcx,rsp
   14000110a:	call   0x140001b30
   14000110f:	add    rsp,0x98
   140001116:	ret    
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	rex push rbp
   140001122:	push   rbx
   140001123:	push   rdi
   140001124:	mov    rbp,rsp
   140001127:	sub    rsp,0x30
   14000112b:	and    DWORD PTR [rcx],0x0
   14000112e:	mov    rdi,rcx
   140001131:	call   QWORD PTR [rip+0x1f01]        # 0x140003038
   140001137:	lea    r8,[rbp+0x30]
   14000113b:	mov    edx,0xa
   140001140:	mov    rcx,rax
   140001143:	call   QWORD PTR [rip+0x1eb7]        # 0x140003000
   140001149:	test   eax,eax
   14000114b:	je     0x1400011c2
   14000114d:	mov    rcx,QWORD PTR [rbp+0x30]
   140001151:	lea    r8,[rbp+0x28]
   140001155:	lea    rdx,[rbp+0x20]
   140001159:	call   0x14000166c
   14000115e:	mov    ebx,eax
   140001160:	test   eax,eax
   140001162:	js     0x1400011b6
   140001164:	cmp    DWORD PTR [rbp+0x20],0x0
   140001168:	mov    rcx,QWORD PTR [rbp+0x30]
   14000116c:	jne    0x1400011af
   14000116e:	mov    r9d,0x8
   140001174:	lea    rax,[rbp+0x20]
   140001178:	lea    r8,[rbp+0x28]
   14000117c:	mov    DWORD PTR [rbp+0x20],r9d
   140001180:	mov    QWORD PTR [rsp+0x20],rax
   140001185:	lea    edx,[r9+0xb]
   140001189:	call   QWORD PTR [rip+0x1e79]        # 0x140003008
   14000118f:	test   eax,eax
   140001191:	je     0x1400011b6
   140001193:	mov    rcx,QWORD PTR [rbp+0x28]
   140001197:	test   rcx,rcx
   14000119a:	je     0x1400011b6
   14000119c:	call   0x140001088
   1400011a1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400011a5:	mov    DWORD PTR [rdi],eax
   1400011a7:	call   QWORD PTR [rip+0x1eab]        # 0x140003058
   1400011ad:	jmp    0x1400011b6
   1400011af:	call   0x140001088
   1400011b4:	mov    DWORD PTR [rdi],eax
   1400011b6:	mov    rcx,QWORD PTR [rbp+0x30]
   1400011ba:	call   QWORD PTR [rip+0x1e98]        # 0x140003058
   1400011c0:	jmp    0x1400011e0
   1400011c2:	call   QWORD PTR [rip+0x1e88]        # 0x140003050
   1400011c8:	movzx  ebx,ax
   1400011cb:	or     ebx,0x80070000
   1400011d1:	test   eax,eax
   1400011d3:	cmovle ebx,eax
   1400011d6:	mov    eax,0x80004005
   1400011db:	test   ebx,ebx
   1400011dd:	cmovns ebx,eax
   1400011e0:	mov    eax,ebx
   1400011e2:	add    rsp,0x30
   1400011e6:	pop    rdi
   1400011e7:	pop    rbx
   1400011e8:	pop    rbp
   1400011e9:	ret    
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400011f5:	push   rsi
   1400011f6:	push   rdi
   1400011f7:	push   r14
   1400011f9:	sub    rsp,0x60
   1400011fd:	mov    rax,QWORD PTR [rip+0x3e04]        # 0x140005008
   140001204:	xor    rax,rsp
   140001207:	mov    QWORD PTR [rsp+0x50],rax
   14000120c:	xor    ebx,ebx
   14000120e:	mov    rsi,rcx
   140001211:	mov    DWORD PTR [rcx],ebx
   140001213:	mov    r14,rdx
   140001216:	lea    rcx,[rsp+0x20]
   14000121b:	mov    DWORD PTR [rdx],ebx
   14000121d:	call   QWORD PTR [rip+0x1ea5]        # 0x1400030c8
   140001223:	test   eax,eax
   140001225:	je     0x14000128f
   140001227:	mov    rcx,QWORD PTR [rsp+0x20]
   14000122c:	lea    edx,[rbx+0x2]
   14000122f:	call   QWORD PTR [rip+0x1e7b]        # 0x1400030b0
   140001235:	mov    rdi,rax
   140001238:	test   rax,rax
   14000123b:	je     0x140001288
   14000123d:	xor    edx,edx
   14000123f:	mov    DWORD PTR [rsp+0x28],0x28
   140001247:	lea    r8d,[rbx+0x24]
   14000124b:	lea    rcx,[rsp+0x2c]
   140001250:	call   0x14000219a
   140001255:	lea    rdx,[rsp+0x28]
   14000125a:	mov    rcx,rdi
   14000125d:	call   QWORD PTR [rip+0x1e75]        # 0x1400030d8
   140001263:	test   eax,eax
   140001265:	je     0x14000128f
   140001267:	mov    eax,DWORD PTR [rsp+0x34]
   14000126b:	add    eax,DWORD PTR [rsp+0x2c]
   14000126f:	cdq    
   140001270:	sub    eax,edx
   140001272:	sar    eax,1
   140001274:	mov    DWORD PTR [rsi],eax
   140001276:	mov    eax,DWORD PTR [rsp+0x38]
   14000127a:	add    eax,DWORD PTR [rsp+0x30]
   14000127e:	cdq    
   14000127f:	sub    eax,edx
   140001281:	sar    eax,1
   140001283:	mov    DWORD PTR [r14],eax
   140001286:	jmp    0x1400012af
   140001288:	mov    ebx,0x80004005
   14000128d:	jmp    0x1400012af
   14000128f:	call   QWORD PTR [rip+0x1dbb]        # 0x140003050
   140001295:	movzx  ecx,ax
   140001298:	or     ecx,0x80070000
   14000129e:	test   eax,eax
   1400012a0:	cmovle ecx,eax
   1400012a3:	mov    eax,0x80004005
   1400012a8:	test   ecx,ecx
   1400012aa:	cmovns ecx,eax
   1400012ad:	mov    ebx,ecx
   1400012af:	mov    eax,ebx
   1400012b1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400012b6:	xor    rcx,rsp
   1400012b9:	call   0x140001b30
   1400012be:	mov    rbx,QWORD PTR [rsp+0x90]
   1400012c6:	add    rsp,0x60
   1400012ca:	pop    r14
   1400012cc:	pop    rdi
   1400012cd:	pop    rsi
   1400012ce:	ret    
   1400012cf:	int3   
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	mov    rax,rsp
   1400012db:	mov    QWORD PTR [rax+0x10],rbx
   1400012df:	mov    QWORD PTR [rax+0x18],rsi
   1400012e3:	mov    QWORD PTR [rax+0x20],rdi
   1400012e7:	push   rbp
   1400012e8:	push   r14
   1400012ea:	push   r15
   1400012ec:	lea    rbp,[rax-0x338]
   1400012f3:	sub    rsp,0x420
   1400012fa:	mov    rax,QWORD PTR [rip+0x3d07]        # 0x140005008
   140001301:	xor    rax,rsp
   140001304:	mov    QWORD PTR [rbp+0x310],rax
   14000130b:	mov    QWORD PTR [rip+0x42c6],rcx        # 0x1400055d8
   140001312:	call   QWORD PTR [rip+0x1d28]        # 0x140003040
   140001318:	mov    rcx,rax
   14000131b:	lea    rdx,[rsp+0x44]
   140001320:	call   QWORD PTR [rip+0x1d62]        # 0x140003088
   140001326:	mov    r15,rax
   140001329:	test   rax,rax
   14000132c:	je     0x140001618
   140001332:	mov    ebx,0x1
   140001337:	cmp    DWORD PTR [rsp+0x44],ebx
   14000133b:	jne    0x1400015dd
   140001341:	lea    edx,[rbx+0x5]
   140001344:	xor    ecx,ecx
   140001346:	call   QWORD PTR [rip+0x1db4]        # 0x140003100
   14000134c:	mov    esi,eax
   14000134e:	test   eax,eax
   140001350:	js     0x14000160d
   140001356:	and    QWORD PTR [rsp+0x28],0x0
   14000135c:	xor    r9d,r9d
   14000135f:	mov    rcx,QWORD PTR [rip+0x1d3a]        # 0x1400030a0
   140001366:	xor    r8d,r8d
   140001369:	and    QWORD PTR [rsp+0x20],0x0
   14000136f:	xor    edx,edx
   140001371:	call   QWORD PTR [rip+0x1d21]        # 0x140003098
   140001377:	mov    r14,rax
   14000137a:	test   rax,rax
   14000137d:	je     0x1400013bd
   14000137f:	mov    rcx,rax
   140001382:	call   QWORD PTR [rip+0x1d30]        # 0x1400030b8
   140001388:	lea    rdx,[rsp+0x50]
   14000138d:	lea    rcx,[rsp+0x40]
   140001392:	call   0x1400011f0
   140001397:	test   eax,eax
   140001399:	js     0x1400013bd
   14000139b:	and    DWORD PTR [rsp+0x30],0x0
   1400013a0:	xor    edx,edx
   1400013a2:	mov    r9d,DWORD PTR [rsp+0x50]
   1400013a7:	mov    rcx,r14
   1400013aa:	mov    r8d,DWORD PTR [rsp+0x40]
   1400013af:	mov    DWORD PTR [rsp+0x28],ebx
   1400013b3:	mov    DWORD PTR [rsp+0x20],ebx
   1400013b7:	call   QWORD PTR [rip+0x1d03]        # 0x1400030c0
   1400013bd:	and    QWORD PTR [rsp+0x48],0x0
   1400013c3:	lea    rdx,[rbp+0x30]
   1400013c7:	mov    r8d,0x32
   1400013cd:	lea    rcx,[rip+0x2014]        # 0x1400033e8
   1400013d4:	call   QWORD PTR [rip+0x1d1e]        # 0x1400030f8
   1400013da:	test   eax,eax
   1400013dc:	jne    0x1400013e8
   1400013de:	mov    esi,0x8007000e
   1400013e3:	jmp    0x1400015c7
   1400013e8:	lea    r9,[rbp+0x30]
   1400013ec:	mov    edx,0x12c
   1400013f1:	lea    r8,[rip+0x1f18]        # 0x140003310
   1400013f8:	lea    rcx,[rbp+0xb0]
   1400013ff:	call   0x140001008
   140001404:	mov    esi,eax
   140001406:	test   eax,eax
   140001408:	js     0x14000144a
   14000140a:	mov    ebx,0x30
   14000140f:	lea    rcx,[rbp+0x0]
   140001413:	mov    r8d,ebx
   140001416:	xor    edx,edx
   140001418:	call   0x14000219a
   14000141d:	lea    r9,[rsp+0x48]
   140001422:	mov    DWORD PTR [rbp+0x0],ebx
   140001425:	lea    r8,[rip+0x1fac]        # 0x1400033d8
   14000142c:	mov    QWORD PTR [rbp+0x28],r14
   140001430:	lea    rdx,[rbp+0x0]
   140001434:	mov    DWORD PTR [rbp+0x14],0x4
   14000143b:	lea    rcx,[rbp+0xb0]
   140001442:	call   QWORD PTR [rip+0x1e08]        # 0x140003250
   140001448:	mov    esi,eax
   14000144a:	test   esi,esi
   14000144c:	js     0x1400014d7
   140001452:	mov    rcx,QWORD PTR [rsp+0x48]
   140001457:	xor    edx,edx
   140001459:	call   QWORD PTR [rip+0x1df9]        # 0x140003258
   14000145f:	lea    rcx,[rsp+0x40]
   140001464:	call   0x140001120
   140001469:	mov    rdi,QWORD PTR [rsp+0x48]
   14000146e:	mov    eax,0xb
   140001473:	mov    WORD PTR [rbp+0x0],ax
   140001477:	mov    eax,DWORD PTR [rsp+0x40]
   14000147b:	neg    eax
   14000147d:	sbb    cx,cx
   140001480:	mov    WORD PTR [rbp+0x8],cx
   140001484:	mov    rax,QWORD PTR [rdi]
   140001487:	mov    rbx,QWORD PTR [rax+0x20]
   14000148b:	mov    rcx,rbx
   14000148e:	call   QWORD PTR [rip+0x1dd4]        # 0x140003268
   140001494:	and    QWORD PTR [rsp+0x28],0x0
   14000149a:	lea    rax,[rbp+0x0]
   14000149e:	xor    r9d,r9d
   1400014a1:	mov    QWORD PTR [rsp+0x20],rax
   1400014a6:	lea    rdx,[rip+0x1f1b]        # 0x1400033c8
   1400014ad:	mov    rcx,rdi
   1400014b0:	lea    r8d,[r9+0x64]
   1400014b4:	call   rbx
   1400014b6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400014bb:	mov    esi,eax
   1400014bd:	mov    rax,QWORD PTR [rdi]
   1400014c0:	mov    rbx,QWORD PTR [rax+0x10]
   1400014c4:	mov    rcx,rbx
   1400014c7:	call   QWORD PTR [rip+0x1d9b]        # 0x140003268
   1400014cd:	mov    rcx,rdi
   1400014d0:	call   rbx
   1400014d2:	jmp    0x1400015c7
   1400014d7:	cmp    esi,0x800704ec
   1400014dd:	jne    0x1400015c7
   1400014e3:	lea    rcx,[rip+0x1e66]        # 0x140003350
   1400014ea:	call   QWORD PTR [rip+0x1b88]        # 0x140003078
   1400014f0:	mov    rbx,rax
   1400014f3:	test   rax,rax
   1400014f6:	je     0x1400015c7
   1400014fc:	mov    r9d,0x104
   140001502:	lea    r8,[rbp+0xb0]
   140001509:	mov    edx,0x2607
   14000150e:	mov    rcx,rax
   140001511:	call   QWORD PTR [rip+0x1bb9]        # 0x1400030d0
   140001517:	test   eax,eax
   140001519:	je     0x1400015be
   14000151f:	lea    rcx,[rip+0x1e42]        # 0x140003368
   140001526:	call   QWORD PTR [rip+0x1b4c]        # 0x140003078
   14000152c:	mov    rdi,rax
   14000152f:	test   rax,rax
   140001532:	je     0x1400015be
   140001538:	mov    r9d,0x40
   14000153e:	lea    r8,[rbp+0x30]
   140001542:	mov    rcx,rax
   140001545:	lea    edx,[r9+0x6]
   140001549:	call   QWORD PTR [rip+0x1b81]        # 0x1400030d0
   14000154f:	test   eax,eax
   140001551:	je     0x1400015b5
   140001553:	xor    edx,edx
   140001555:	lea    rcx,[rsp+0x60]
   14000155a:	mov    r8d,0xa0
   140001560:	call   0x14000219a
   140001565:	mov    rax,QWORD PTR [rip+0x406c]        # 0x1400055d8
   14000156c:	lea    rcx,[rsp+0x60]
   140001571:	mov    QWORD PTR [rsp+0x6c],rax
   140001576:	xor    r9d,r9d
   140001579:	lea    rax,[rbp+0x30]
   14000157d:	mov    DWORD PTR [rsp+0x60],0xa0
   140001585:	mov    QWORD PTR [rsp+0x7c],rax
   14000158a:	xor    r8d,r8d
   14000158d:	lea    rax,[rbp+0xb0]
   140001594:	mov    QWORD PTR [rsp+0x64],r14
   140001599:	xor    edx,edx
   14000159b:	mov    QWORD PTR [rbp-0x6c],rax
   14000159f:	mov    DWORD PTR [rsp+0x78],0x1
   1400015a7:	mov    QWORD PTR [rbp-0x7c],0xfffe
   1400015af:	call   QWORD PTR [rip+0x5a4b]        # 0x140007000
   1400015b5:	mov    rcx,rdi
   1400015b8:	call   QWORD PTR [rip+0x1a72]        # 0x140003030
   1400015be:	mov    rcx,rbx
   1400015c1:	call   QWORD PTR [rip+0x1a69]        # 0x140003030
   1400015c7:	test   r14,r14
   1400015ca:	je     0x1400015d5
   1400015cc:	mov    rcx,r14
   1400015cf:	call   QWORD PTR [rip+0x1b0b]        # 0x1400030e0
   1400015d5:	call   QWORD PTR [rip+0x1b15]        # 0x1400030f0
   1400015db:	jmp    0x14000160d
   1400015dd:	cmp    DWORD PTR [rsp+0x44],0x2
   1400015e2:	jne    0x140001608
   1400015e4:	mov    r8,QWORD PTR [rax+0x8]
   1400015e8:	lea    rcx,[rip+0x1db9]        # 0x1400033a8
   1400015ef:	or     edx,0xffffffff
   1400015f2:	mov    DWORD PTR [rsp+0x20],ebx
   1400015f6:	mov    r9d,edx
   1400015f9:	call   QWORD PTR [rip+0x1a49]        # 0x140003048
   1400015ff:	cmp    eax,0x2
   140001602:	jne    0x140001608
   140001604:	xor    esi,esi
   140001606:	jmp    0x14000160d
   140001608:	mov    esi,0x80070057
   14000160d:	mov    rcx,r15
   140001610:	call   QWORD PTR [rip+0x1a4a]        # 0x140003060
   140001616:	jmp    0x140001636
   140001618:	call   QWORD PTR [rip+0x1a32]        # 0x140003050
   14000161e:	movzx  esi,ax
   140001621:	or     esi,0x80070000
   140001627:	test   eax,eax
   140001629:	cmovle esi,eax
   14000162c:	mov    eax,0x80004005
   140001631:	test   esi,esi
   140001633:	cmovns esi,eax
   140001636:	mov    eax,esi
   140001638:	mov    rcx,QWORD PTR [rbp+0x310]
   14000163f:	xor    rcx,rsp
   140001642:	call   0x140001b30
   140001647:	lea    r11,[rsp+0x420]
   14000164f:	mov    rbx,QWORD PTR [r11+0x28]
   140001653:	mov    rsi,QWORD PTR [r11+0x30]
   140001657:	mov    rdi,QWORD PTR [r11+0x38]
   14000165b:	mov    rsp,r11
   14000165e:	pop    r15
   140001660:	pop    r14
   140001662:	pop    rbp
   140001663:	ret    
   140001664:	int3   
   140001665:	int3   
   140001666:	int3   
   140001667:	int3   
   140001668:	int3   
   140001669:	int3   
   14000166a:	int3   
   14000166b:	int3   
   14000166c:	rex push rbx
   14000166e:	push   rsi
   14000166f:	push   rdi
   140001670:	sub    rsp,0x30
   140001674:	and    DWORD PTR [rdx],0x0
   140001677:	lea    rax,[rsp+0x60]
   14000167c:	mov    r9d,0x4
   140001682:	mov    DWORD PTR [r8],0x1
   140001689:	mov    rdi,r8
   14000168c:	mov    DWORD PTR [rsp+0x58],0x1
   140001694:	mov    rbx,rdx
   140001697:	mov    QWORD PTR [rsp+0x20],rax
   14000169c:	lea    r8,[rsp+0x58]
   1400016a1:	mov    rsi,rcx
   1400016a4:	lea    edx,[r9+0xe]
   1400016a8:	call   QWORD PTR [rip+0x1b92]        # 0x140003240
   1400016ae:	test   eax,eax
   1400016b0:	js     0x1400016f6
   1400016b2:	cmp    DWORD PTR [rsp+0x58],0x2
   1400016b7:	je     0x1400016f0
   1400016b9:	cmp    DWORD PTR [rsp+0x58],0x1
   1400016be:	jne    0x1400016f6
   1400016c0:	and    DWORD PTR [rdi],0x0
   1400016c3:	lea    rax,[rsp+0x60]
   1400016c8:	mov    r9d,0x4
   1400016ce:	mov    QWORD PTR [rsp+0x20],rax
   1400016d3:	lea    r8,[rsp+0x68]
   1400016d8:	mov    rcx,rsi
   1400016db:	lea    edx,[r9+0x10]
   1400016df:	call   QWORD PTR [rip+0x1b5b]        # 0x140003240
   1400016e5:	test   eax,eax
   1400016e7:	js     0x1400016f6
   1400016e9:	cmp    DWORD PTR [rsp+0x68],0x0
   1400016ee:	je     0x1400016f6
   1400016f0:	mov    DWORD PTR [rbx],0x1
   1400016f6:	add    rsp,0x30
   1400016fa:	pop    rdi
   1400016fb:	pop    rsi
   1400016fc:	pop    rbx
   1400016fd:	ret    
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	int3   
   140001701:	int3   
   140001702:	int3   
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	sub    rsp,0x38
   140001714:	and    DWORD PTR [rsp+0x28],0x0
   140001719:	mov    r9,QWORD PTR [rip+0x1948]        # 0x140003068
   140001720:	mov    r8,QWORD PTR [rip+0x1cd1]        # 0x1400033f8
   140001727:	mov    QWORD PTR [rsp+0x20],rdx
   14000172c:	mov    rdx,rcx
   14000172f:	lea    rcx,[rip+0xffffffffffffe8ca]        # 0x140000000
   140001736:	call   QWORD PTR [rip+0x1934]        # 0x140003070
   14000173c:	add    rsp,0x38
   140001740:	ret    
   140001741:	int3   
   140001742:	int3   
   140001743:	int3   
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	sub    rsp,0x28
   140001754:	mov    eax,0x5a4d
   140001759:	cmp    WORD PTR [rip+0xffffffffffffe8a0],ax        # 0x140000000
   140001760:	je     0x140001766
   140001762:	xor    eax,eax
   140001764:	jmp    0x1400017b5
   140001766:	movsxd rcx,DWORD PTR [rip+0xffffffffffffe8cf]        # 0x14000003c
   14000176d:	lea    rax,[rip+0xffffffffffffe88c]        # 0x140000000
   140001774:	add    rcx,rax
   140001777:	cmp    DWORD PTR [rcx],0x4550
   14000177d:	jne    0x140001762
   14000177f:	movzx  eax,WORD PTR [rcx+0x18]
   140001783:	cmp    eax,0x10b
   140001788:	je     0x1400017a4
   14000178a:	cmp    eax,0x20b
   14000178f:	jne    0x140001762
   140001791:	xor    eax,eax
   140001793:	cmp    DWORD PTR [rcx+0x84],0xe
   14000179a:	jbe    0x1400017b5
   14000179c:	cmp    DWORD PTR [rcx+0xf8],eax
   1400017a2:	jmp    0x1400017b2
   1400017a4:	xor    eax,eax
   1400017a6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400017aa:	jbe    0x1400017b5
   1400017ac:	cmp    DWORD PTR [rcx+0xe8],eax
   1400017b2:	setne  al
   1400017b5:	mov    ecx,0x2
   1400017ba:	mov    DWORD PTR [rip+0x3880],eax        # 0x140005040
   1400017c0:	call   0x140001c28
   1400017c5:	mov    ecx,eax
   1400017c7:	call   QWORD PTR [rip+0x1a43]        # 0x140003210
   1400017cd:	mov    rcx,QWORD PTR [rip+0x19f4]        # 0x1400031c8
   1400017d4:	or     rax,0xffffffffffffffff
   1400017d8:	mov    QWORD PTR [rip+0x3e01],rax        # 0x1400055e0
   1400017df:	mov    QWORD PTR [rip+0x3e02],rax        # 0x1400055e8
   1400017e6:	mov    eax,DWORD PTR [rip+0x3868]        # 0x140005054
   1400017ec:	mov    DWORD PTR [rcx],eax
   1400017ee:	mov    rcx,QWORD PTR [rip+0x19cb]        # 0x1400031c0
   1400017f5:	mov    eax,DWORD PTR [rip+0x384d]        # 0x140005048
   1400017fb:	mov    DWORD PTR [rcx],eax
   1400017fd:	call   0x140001e40
   140001802:	cmp    DWORD PTR [rip+0x37f7],0x0        # 0x140005000
   140001809:	jne    0x140001818
   14000180b:	lea    rcx,[rip+0x62e]        # 0x140001e40
   140001812:	call   QWORD PTR [rip+0x19d8]        # 0x1400031f0
   140001818:	xor    eax,eax
   14000181a:	add    rsp,0x28
   14000181e:	ret    
   14000181f:	int3   
   140001820:	int3   
   140001821:	int3   
   140001822:	int3   
   140001823:	int3   
   140001824:	int3   
   140001825:	int3   
   140001826:	int3   
   140001827:	int3   
   140001828:	int3   
   140001829:	int3   
   14000182a:	int3   
   14000182b:	int3   
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	sub    rsp,0x38
   140001834:	mov    eax,DWORD PTR [rip+0x3816]        # 0x140005050
   14000183a:	lea    r8,[rip+0x37f7]        # 0x140005038
   140001841:	mov    r9d,DWORD PTR [rip+0x3804]        # 0x14000504c
   140001848:	lea    rdx,[rip+0x37e1]        # 0x140005030
   14000184f:	mov    DWORD PTR [rip+0x37ef],eax        # 0x140005044
   140001855:	lea    rcx,[rip+0x37cc]        # 0x140005028
   14000185c:	lea    rax,[rip+0x37e1]        # 0x140005044
   140001863:	mov    QWORD PTR [rsp+0x20],rax
   140001868:	call   QWORD PTR [rip+0x19aa]        # 0x140003218
   14000186e:	mov    DWORD PTR [rip+0x37b8],eax        # 0x14000502c
   140001874:	add    rsp,0x38
   140001878:	ret    
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	mov    QWORD PTR [rsp+0x8],rbx
   140001885:	mov    QWORD PTR [rsp+0x10],rsi
   14000188a:	mov    QWORD PTR [rsp+0x18],rdi
   14000188f:	push   r12
   140001891:	push   r14
   140001893:	push   r15
   140001895:	sub    rsp,0xb0
   14000189c:	xor    r15d,r15d
   14000189f:	mov    DWORD PTR [rsp+0x20],r15d
   1400018a4:	lea    rcx,[rsp+0x40]
   1400018a9:	call   QWORD PTR [rip+0x1891]        # 0x140003140
   1400018af:	nop
   1400018b0:	mov    rax,QWORD PTR gs:0x30
   1400018b9:	mov    rbx,QWORD PTR [rax+0x8]
   1400018bd:	mov    r14d,r15d
   1400018c0:	xor    eax,eax
   1400018c2:	lock cmpxchg QWORD PTR [rip+0x3d25],rbx        # 0x1400055f0
   1400018cb:	je     0x1400018e9
   1400018cd:	cmp    rax,rbx
   1400018d0:	jne    0x1400018dc
   1400018d2:	mov    edi,0x1
   1400018d7:	mov    r14d,edi
   1400018da:	jmp    0x1400018ee
   1400018dc:	mov    ecx,0x3e8
   1400018e1:	call   QWORD PTR [rip+0x18a9]        # 0x140003190
   1400018e7:	jmp    0x1400018c0
   1400018e9:	mov    edi,0x1
   1400018ee:	mov    eax,DWORD PTR [rip+0x3d04]        # 0x1400055f8
   1400018f4:	cmp    eax,edi
   1400018f6:	jne    0x140001906
   1400018f8:	mov    esi,0x1f
   1400018fd:	mov    ecx,esi
   1400018ff:	call   0x140001c74
   140001904:	jmp    0x140001977
   140001906:	mov    eax,DWORD PTR [rip+0x3cec]        # 0x1400055f8
   14000190c:	test   eax,eax
   14000190e:	jne    0x14000196c
   140001910:	mov    DWORD PTR [rip+0x3ce2],edi        # 0x1400055f8
   140001916:	lea    r12,[rip+0x198b]        # 0x1400032a8
   14000191d:	lea    rbx,[rip+0x196c]        # 0x140003290
   140001924:	mov    QWORD PTR [rsp+0x30],rbx
   140001929:	mov    eax,r15d
   14000192c:	mov    DWORD PTR [rsp+0x24],eax
   140001930:	cmp    rbx,r12
   140001933:	jae    0x14000195e
   140001935:	test   eax,eax
   140001937:	jne    0x140001962
   140001939:	mov    rsi,QWORD PTR [rbx]
   14000193c:	test   rsi,rsi
   14000193f:	je     0x140001953
   140001941:	mov    rcx,rsi
   140001944:	mov    rax,QWORD PTR [rip+0x191d]        # 0x140003268
   14000194b:	call   rax
   14000194d:	call   rsi
   14000194f:	mov    DWORD PTR [rsp+0x24],eax
   140001953:	add    rbx,0x8
   140001957:	mov    QWORD PTR [rsp+0x30],rbx
   14000195c:	jmp    0x140001930
   14000195e:	test   eax,eax
   140001960:	je     0x140001972
   140001962:	mov    eax,0xff
   140001967:	jmp    0x140001ad3
   14000196c:	mov    DWORD PTR [rip+0x36b2],edi        # 0x140005024
   140001972:	mov    esi,0x1f
   140001977:	mov    eax,DWORD PTR [rip+0x3c7b]        # 0x1400055f8
   14000197d:	cmp    eax,edi
   14000197f:	jne    0x14000199e
   140001981:	lea    rdx,[rip+0x1900]        # 0x140003288
   140001988:	lea    rcx,[rip+0x18e9]        # 0x140003278
   14000198f:	call   0x140001e4a
   140001994:	mov    DWORD PTR [rip+0x3c5a],0x2        # 0x1400055f8
   14000199e:	test   r14d,r14d
   1400019a1:	jne    0x1400019ad
   1400019a3:	mov    rax,r15
   1400019a6:	xchg   QWORD PTR [rip+0x3c43],rax        # 0x1400055f0
   1400019ad:	cmp    QWORD PTR [rip+0x3c4c],r15        # 0x140005600
   1400019b4:	je     0x1400019e4
   1400019b6:	lea    rcx,[rip+0x3c43]        # 0x140005600
   1400019bd:	call   0x140001cd0
   1400019c2:	test   eax,eax
   1400019c4:	je     0x1400019e4
   1400019c6:	mov    rbx,QWORD PTR [rip+0x3c33]        # 0x140005600
   1400019cd:	mov    rcx,rbx
   1400019d0:	mov    rax,QWORD PTR [rip+0x1891]        # 0x140003268
   1400019d7:	call   rax
   1400019d9:	xor    r8d,r8d
   1400019dc:	lea    edx,[r8+0x2]
   1400019e0:	xor    ecx,ecx
   1400019e2:	call   rbx
   1400019e4:	mov    rax,QWORD PTR [rip+0x17e5]        # 0x1400031d0
   1400019eb:	mov    rdx,QWORD PTR [rax]
   1400019ee:	test   rdx,rdx
   1400019f1:	jne    0x1400019fd
   1400019f3:	mov    eax,0xff
   1400019f8:	jmp    0x140001ad3
   1400019fd:	mov    QWORD PTR [rsp+0x28],rdx
   140001a02:	mov    ecx,DWORD PTR [rsp+0x20]
   140001a06:	cmp    WORD PTR [rdx],0x20
   140001a0a:	ja     0x140001a84
   140001a0c:	cmp    WORD PTR [rdx],r15w
   140001a10:	je     0x140001a16
   140001a12:	test   ecx,ecx
   140001a14:	jne    0x140001a84
   140001a16:	movzx  eax,WORD PTR [rdx]
   140001a19:	sub    ax,di
   140001a1c:	cmp    ax,si
   140001a1f:	ja     0x140001a2c
   140001a21:	add    rdx,0x2
   140001a25:	mov    QWORD PTR [rsp+0x28],rdx
   140001a2a:	jmp    0x140001a16
   140001a2c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140001a30:	movzx  eax,WORD PTR [rsp+0x80]
   140001a38:	mov    r9d,0xa
   140001a3e:	and    cl,dil
   140001a41:	cmovne r9d,eax
   140001a45:	mov    r8,rdx
   140001a48:	xor    edx,edx
   140001a4a:	lea    rcx,[rip+0xffffffffffffe5af]        # 0x140000000
   140001a51:	call   0x1400012d8
   140001a56:	mov    DWORD PTR [rip+0x35c4],eax        # 0x140005020
   140001a5c:	cmp    DWORD PTR [rip+0x35dd],r15d        # 0x140005040
   140001a63:	jne    0x140001a6d
   140001a65:	mov    ecx,eax
   140001a67:	call   QWORD PTR [rip+0x179b]        # 0x140003208
   140001a6d:	cmp    DWORD PTR [rip+0x35b0],r15d        # 0x140005024
   140001a74:	jne    0x140001a82
   140001a76:	call   QWORD PTR [rip+0x177c]        # 0x1400031f8
   140001a7c:	mov    eax,DWORD PTR [rip+0x359e]        # 0x140005020
   140001a82:	jmp    0x140001ad3
   140001a84:	cmp    WORD PTR [rdx],0x22
   140001a88:	jne    0x140001a98
   140001a8a:	mov    eax,r15d
   140001a8d:	test   ecx,ecx
   140001a8f:	sete   al
   140001a92:	mov    ecx,eax
   140001a94:	mov    DWORD PTR [rsp+0x20],eax
   140001a98:	add    rdx,0x2
   140001a9c:	mov    QWORD PTR [rsp+0x28],rdx
   140001aa1:	jmp    0x140001a06
   140001aa6:	mov    DWORD PTR [rip+0x3574],eax        # 0x140005020
   140001aac:	cmp    DWORD PTR [rip+0x358d],0x0        # 0x140005040
   140001ab3:	jne    0x140001abe
   140001ab5:	mov    ecx,eax
   140001ab7:	call   QWORD PTR [rip+0x1743]        # 0x140003200
   140001abd:	int3   
   140001abe:	cmp    DWORD PTR [rip+0x355f],0x0        # 0x140005024
   140001ac5:	jne    0x140001ad3
   140001ac7:	call   QWORD PTR [rip+0x172b]        # 0x1400031f8
   140001acd:	mov    eax,DWORD PTR [rip+0x354d]        # 0x140005020
   140001ad3:	lea    r11,[rsp+0xb0]
   140001adb:	mov    rbx,QWORD PTR [r11+0x20]
   140001adf:	mov    rsi,QWORD PTR [r11+0x28]
   140001ae3:	mov    rdi,QWORD PTR [r11+0x30]
   140001ae7:	mov    rsp,r11
   140001aea:	pop    r15
   140001aec:	pop    r14
   140001aee:	pop    r12
   140001af0:	ret    
   140001af1:	int3   
   140001af2:	int3   
   140001af3:	int3   
   140001af4:	int3   
   140001af5:	int3   
   140001af6:	int3   
   140001af7:	int3   
   140001af8:	int3   
   140001af9:	int3   
   140001afa:	int3   
   140001afb:	int3   
   140001afc:	int3   
   140001afd:	int3   
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	sub    rsp,0x28
   140001b04:	call   0x140001d64
   140001b09:	add    rsp,0x28
   140001b0d:	jmp    0x140001880
   140001b12:	int3   
   140001b13:	int3   
   140001b14:	int3   
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	int3   
   140001b21:	int3   
   140001b22:	int3   
   140001b23:	int3   
   140001b24:	int3   
   140001b25:	int3   
   140001b26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001b30:	cmp    rcx,QWORD PTR [rip+0x34d1]        # 0x140005008
   140001b37:	jne    0x140001b49
   140001b39:	rol    rcx,0x10
   140001b3d:	test   cx,0xffff
   140001b42:	jne    0x140001b45
   140001b44:	ret    
   140001b45:	ror    rcx,0x10
   140001b49:	jmp    0x140001ec0
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	int3   
   140001b51:	int3   
   140001b52:	int3   
   140001b53:	int3   
   140001b54:	int3   
   140001b55:	int3   
   140001b56:	int3   
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	sub    rsp,0x28
   140001b64:	mov    rax,QWORD PTR [rcx]
   140001b67:	cmp    DWORD PTR [rax],0xe06d7363
   140001b6d:	jne    0x140001b92
   140001b6f:	cmp    DWORD PTR [rax+0x18],0x4
   140001b73:	jne    0x140001b92
   140001b75:	mov    ecx,DWORD PTR [rax+0x20]
   140001b78:	lea    eax,[rcx-0x19930520]
   140001b7e:	cmp    eax,0x2
   140001b81:	jbe    0x140001b8b
   140001b83:	cmp    ecx,0x1994000
   140001b89:	jne    0x140001b92
   140001b8b:	call   QWORD PTR [rip+0x164f]        # 0x1400031e0
   140001b91:	int3   
   140001b92:	xor    eax,eax
   140001b94:	add    rsp,0x28
   140001b98:	ret    
   140001b99:	int3   
   140001b9a:	int3   
   140001b9b:	int3   
   140001b9c:	int3   
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	sub    rsp,0x28
   140001ba4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140001b60
   140001bab:	call   QWORD PTR [rip+0x155f]        # 0x140003110
   140001bb1:	xor    eax,eax
   140001bb3:	add    rsp,0x28
   140001bb7:	ret    
   140001bb8:	int3   
   140001bb9:	int3   
   140001bba:	int3   
   140001bbb:	int3   
   140001bbc:	int3   
   140001bbd:	int3   
   140001bbe:	jmp    QWORD PTR [rip+0x15f4]        # 0x1400031b8
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	sub    rsp,0x18
   140001bd0:	xor    edx,edx
   140001bd2:	lea    rax,[rcx-0x1]
   140001bd6:	cmp    rax,0xfffffffffffffffd
   140001bda:	ja     0x140001c18
   140001bdc:	mov    eax,0x5a4d
   140001be1:	cmp    WORD PTR [rcx],ax
   140001be4:	jne    0x140001c10
   140001be6:	cmp    DWORD PTR [rcx+0x3c],edx
   140001be9:	jl     0x140001c10
   140001beb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140001bf2:	jae    0x140001c10
   140001bf4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140001bf8:	add    rax,rcx
   140001bfb:	mov    QWORD PTR [rsp],rax
   140001bff:	cmp    DWORD PTR [rax],0x4550
   140001c05:	cmovne rax,rdx
   140001c09:	mov    rdx,rax
   140001c0c:	mov    QWORD PTR [rsp],rax
   140001c10:	jmp    0x140001c18
   140001c12:	xor    edx,edx
   140001c14:	mov    QWORD PTR [rsp],rdx
   140001c18:	mov    rax,rdx
   140001c1b:	add    rsp,0x18
   140001c1f:	ret    
   140001c20:	int3   
   140001c21:	int3   
   140001c22:	int3   
   140001c23:	int3   
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	rex push rbx
   140001c2a:	sub    rsp,0x20
   140001c2e:	mov    ebx,ecx
   140001c30:	xor    ecx,ecx
   140001c32:	call   QWORD PTR [rip+0x14f0]        # 0x140003128
   140001c38:	test   rax,rax
   140001c3b:	je     0x140001c65
   140001c3d:	mov    rcx,rax
   140001c40:	call   0x140001bcc
   140001c45:	test   rax,rax
   140001c48:	je     0x140001c65
   140001c4a:	mov    ecx,0x2
   140001c4f:	cmp    WORD PTR [rax+0x5c],cx
   140001c53:	jne    0x140001c59
   140001c55:	mov    eax,ecx
   140001c57:	jmp    0x140001c67
   140001c59:	cmp    WORD PTR [rax+0x5c],0x3
   140001c5e:	mov    eax,0x1
   140001c63:	je     0x140001c67
   140001c65:	mov    eax,ebx
   140001c67:	add    rsp,0x20
   140001c6b:	pop    rbx
   140001c6c:	ret    
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	int3   
   140001c71:	int3   
   140001c72:	int3   
   140001c73:	int3   
   140001c74:	jmp    QWORD PTR [rip+0x15a6]        # 0x140003220
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	movsxd r8,DWORD PTR [rcx+0x3c]
   140001c84:	xor    r9d,r9d
   140001c87:	add    r8,rcx
   140001c8a:	mov    r10,rdx
   140001c8d:	movzx  eax,WORD PTR [r8+0x14]
   140001c92:	movzx  r11d,WORD PTR [r8+0x6]
   140001c97:	add    rax,0x18
   140001c9b:	add    rax,r8
   140001c9e:	test   r11d,r11d
   140001ca1:	je     0x140001cc1
   140001ca3:	mov    edx,DWORD PTR [rax+0xc]
   140001ca6:	cmp    r10,rdx
   140001ca9:	jb     0x140001cb5
   140001cab:	mov    ecx,DWORD PTR [rax+0x8]
   140001cae:	add    ecx,edx
   140001cb0:	cmp    r10,rcx
   140001cb3:	jb     0x140001cc3
   140001cb5:	inc    r9d
   140001cb8:	add    rax,0x28
   140001cbc:	cmp    r9d,r11d
   140001cbf:	jb     0x140001ca3
   140001cc1:	xor    eax,eax
   140001cc3:	ret    
   140001cc4:	int3   
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	mov    QWORD PTR [rsp+0x8],rbx
   140001cd5:	push   rdi
   140001cd6:	sub    rsp,0x20
   140001cda:	mov    rbx,rcx
   140001cdd:	lea    rdi,[rip+0xffffffffffffe31c]        # 0x140000000
   140001ce4:	mov    rcx,rdi
   140001ce7:	call   0x140001d30
   140001cec:	test   eax,eax
   140001cee:	je     0x140001d12
   140001cf0:	sub    rbx,rdi
   140001cf3:	mov    rdx,rbx
   140001cf6:	mov    rcx,rdi
   140001cf9:	call   0x140001c80
   140001cfe:	test   rax,rax
   140001d01:	je     0x140001d12
   140001d03:	mov    eax,DWORD PTR [rax+0x24]
   140001d06:	shr    eax,0x1f
   140001d09:	not    eax
   140001d0b:	and    eax,0x1
   140001d0e:	jmp    0x140001d12
   140001d10:	xor    eax,eax
   140001d12:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d17:	add    rsp,0x20
   140001d1b:	pop    rdi
   140001d1c:	ret    
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	int3   
   140001d21:	int3   
   140001d22:	int3   
   140001d23:	int3   
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    rax,rcx
   140001d33:	mov    ecx,0x5a4d
   140001d38:	cmp    WORD PTR [rax],cx
   140001d3b:	je     0x140001d40
   140001d3d:	xor    eax,eax
   140001d3f:	ret    
   140001d40:	movsxd rcx,DWORD PTR [rax+0x3c]
   140001d44:	add    rcx,rax
   140001d47:	xor    eax,eax
   140001d49:	cmp    DWORD PTR [rcx],0x4550
   140001d4f:	jne    0x140001d5d
   140001d51:	mov    edx,0x20b
   140001d56:	cmp    WORD PTR [rcx+0x18],dx
   140001d5a:	sete   al
   140001d5d:	ret    
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	int3   
   140001d61:	int3   
   140001d62:	int3   
   140001d63:	int3   
   140001d64:	mov    QWORD PTR [rsp+0x20],rbx
   140001d69:	push   rbp
   140001d6a:	mov    rbp,rsp
   140001d6d:	sub    rsp,0x20
   140001d71:	and    QWORD PTR [rbp+0x18],0x0
   140001d76:	movabs rbx,0x2b992ddfa232
   140001d80:	mov    rax,QWORD PTR [rip+0x3281]        # 0x140005008
   140001d87:	cmp    rax,rbx
   140001d8a:	jne    0x140001e1f
   140001d90:	lea    rcx,[rbp+0x18]
   140001d94:	call   QWORD PTR [rip+0x140e]        # 0x1400031a8
   140001d9a:	mov    rax,QWORD PTR [rbp+0x18]
   140001d9e:	mov    QWORD PTR [rbp+0x10],rax
   140001da2:	call   QWORD PTR [rip+0x1390]        # 0x140003138
   140001da8:	mov    eax,eax
   140001daa:	xor    QWORD PTR [rbp+0x10],rax
   140001dae:	call   QWORD PTR [rip+0x139c]        # 0x140003150
   140001db4:	mov    eax,eax
   140001db6:	xor    QWORD PTR [rbp+0x10],rax
   140001dba:	call   QWORD PTR [rip+0x13e0]        # 0x1400031a0
   140001dc0:	mov    eax,eax
   140001dc2:	shl    rax,0x18
   140001dc6:	xor    QWORD PTR [rbp+0x10],rax
   140001dca:	call   QWORD PTR [rip+0x13d0]        # 0x1400031a0
   140001dd0:	mov    eax,eax
   140001dd2:	lea    rcx,[rbp+0x10]
   140001dd6:	xor    rax,QWORD PTR [rbp+0x10]
   140001dda:	xor    rax,rcx
   140001ddd:	lea    rcx,[rbp+0x20]
   140001de1:	mov    QWORD PTR [rbp+0x10],rax
   140001de5:	call   QWORD PTR [rip+0x1375]        # 0x140003160
   140001deb:	mov    eax,DWORD PTR [rbp+0x20]
   140001dee:	movabs rcx,0xffffffffffff
   140001df8:	shl    rax,0x20
   140001dfc:	xor    rax,QWORD PTR [rbp+0x20]
   140001e00:	xor    rax,QWORD PTR [rbp+0x10]
   140001e04:	and    rax,rcx
   140001e07:	movabs rcx,0x2b992ddfa233
   140001e11:	cmp    rax,rbx
   140001e14:	cmove  rax,rcx
   140001e18:	mov    QWORD PTR [rip+0x31e9],rax        # 0x140005008
   140001e1f:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e24:	not    rax
   140001e27:	mov    QWORD PTR [rip+0x31e2],rax        # 0x140005010
   140001e2e:	add    rsp,0x20
   140001e32:	pop    rbp
   140001e33:	ret    
   140001e34:	int3   
   140001e35:	int3   
   140001e36:	int3   
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	xor    eax,eax
   140001e42:	ret    
   140001e43:	int3   
   140001e44:	int3   
   140001e45:	int3   
   140001e46:	int3   
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	jmp    QWORD PTR [rip+0x1398]        # 0x1400031e8
   140001e50:	int3   
   140001e51:	int3   
   140001e52:	int3   
   140001e53:	int3   
   140001e54:	int3   
   140001e55:	int3   
   140001e56:	jmp    QWORD PTR [rip+0x137c]        # 0x1400031d8
   140001e5c:	int3   
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	int3   
   140001e61:	int3   
   140001e62:	int3   
   140001e63:	int3   
   140001e64:	int3   
   140001e65:	int3   
   140001e66:	int3   
   140001e67:	int3   
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	ret    0x0
   140001e73:	int3   
   140001e74:	int3   
   140001e75:	int3   
   140001e76:	int3   
   140001e77:	int3   
   140001e78:	int3   
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	rex push rbx
   140001e7e:	sub    rsp,0x20
   140001e82:	mov    rbx,rcx
   140001e85:	xor    ecx,ecx
   140001e87:	call   QWORD PTR [rip+0x1283]        # 0x140003110
   140001e8d:	mov    rcx,rbx
   140001e90:	call   QWORD PTR [rip+0x1282]        # 0x140003118
   140001e96:	call   QWORD PTR [rip+0x119c]        # 0x140003038
   140001e9c:	mov    rcx,rax
   140001e9f:	mov    edx,0xc0000409
   140001ea4:	add    rsp,0x20
   140001ea8:	pop    rbx
   140001ea9:	rex.W jmp QWORD PTR [rip+0x1298]        # 0x140003148
   140001eb0:	int3   
   140001eb1:	int3   
   140001eb2:	int3   
   140001eb3:	int3   
   140001eb4:	int3   
   140001eb5:	int3   
   140001eb6:	int3   
   140001eb7:	int3   
   140001eb8:	int3   
   140001eb9:	int3   
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	mov    QWORD PTR [rsp+0x8],rcx
   140001ec5:	sub    rsp,0x88
   140001ecc:	lea    rcx,[rip+0x322d]        # 0x140005100
   140001ed3:	call   QWORD PTR [rip+0x1297]        # 0x140003170
   140001ed9:	mov    rax,QWORD PTR [rip+0x3318]        # 0x1400051f8
   140001ee0:	mov    QWORD PTR [rsp+0x48],rax
   140001ee5:	xor    r8d,r8d
   140001ee8:	lea    rdx,[rsp+0x50]
   140001eed:	mov    rcx,QWORD PTR [rsp+0x48]
   140001ef2:	call   QWORD PTR [rip+0x1280]        # 0x140003178
   140001ef8:	mov    QWORD PTR [rsp+0x40],rax
   140001efd:	cmp    QWORD PTR [rsp+0x40],0x0
   140001f03:	je     0x140001f47
   140001f05:	mov    QWORD PTR [rsp+0x38],0x0
   140001f0e:	lea    rax,[rsp+0x58]
   140001f13:	mov    QWORD PTR [rsp+0x30],rax
   140001f18:	lea    rax,[rsp+0x60]
   140001f1d:	mov    QWORD PTR [rsp+0x28],rax
   140001f22:	lea    rax,[rip+0x31d7]        # 0x140005100
   140001f29:	mov    QWORD PTR [rsp+0x20],rax
   140001f2e:	mov    r9,QWORD PTR [rsp+0x40]
   140001f33:	mov    r8,QWORD PTR [rsp+0x48]
   140001f38:	mov    rdx,QWORD PTR [rsp+0x50]
   140001f3d:	xor    ecx,ecx
   140001f3f:	call   QWORD PTR [rip+0x123b]        # 0x140003180
   140001f45:	jmp    0x140001f6a
   140001f47:	mov    rax,QWORD PTR [rip+0x324a]        # 0x140005198
   140001f4e:	mov    rax,QWORD PTR [rax]
   140001f51:	mov    QWORD PTR [rip+0x32a0],rax        # 0x1400051f8
   140001f58:	mov    rax,QWORD PTR [rip+0x3239]        # 0x140005198
   140001f5f:	add    rax,0x8
   140001f63:	mov    QWORD PTR [rip+0x322e],rax        # 0x140005198
   140001f6a:	mov    rax,QWORD PTR [rip+0x3287]        # 0x1400051f8
   140001f71:	mov    QWORD PTR [rip+0x30f8],rax        # 0x140005070
   140001f78:	mov    rax,QWORD PTR [rsp+0x90]
   140001f80:	mov    QWORD PTR [rip+0x31f9],rax        # 0x140005180
   140001f87:	mov    DWORD PTR [rip+0x30cf],0xc0000409        # 0x140005060
   140001f91:	mov    DWORD PTR [rip+0x30c9],0x1        # 0x140005064
   140001f9b:	mov    DWORD PTR [rip+0x30d3],0x3        # 0x140005078
   140001fa5:	mov    eax,0x8
   140001faa:	imul   rax,rax,0x0
   140001fae:	lea    rcx,[rip+0x30cb]        # 0x140005080
   140001fb5:	mov    QWORD PTR [rcx+rax*1],0x2
   140001fbd:	mov    eax,0x8
   140001fc2:	imul   rax,rax,0x1
   140001fc6:	lea    rcx,[rip+0x30b3]        # 0x140005080
   140001fcd:	mov    rdx,QWORD PTR [rip+0x3034]        # 0x140005008
   140001fd4:	mov    QWORD PTR [rcx+rax*1],rdx
   140001fd8:	mov    eax,0x8
   140001fdd:	imul   rax,rax,0x2
   140001fe1:	lea    rcx,[rip+0x3098]        # 0x140005080
   140001fe8:	mov    rdx,QWORD PTR [rip+0x3021]        # 0x140005010
   140001fef:	mov    QWORD PTR [rcx+rax*1],rdx
   140001ff3:	mov    eax,0x8
   140001ff8:	imul   rax,rax,0x0
   140001ffc:	mov    rcx,QWORD PTR [rip+0x3005]        # 0x140005008
   140002003:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002008:	mov    eax,0x8
   14000200d:	imul   rax,rax,0x1
   140002011:	mov    rcx,QWORD PTR [rip+0x2ff8]        # 0x140005010
   140002018:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000201d:	lea    rcx,[rip+0x12cc]        # 0x1400032f0
   140002024:	call   0x140001e7c
   140002029:	add    rsp,0x88
   140002030:	ret    
   140002031:	int3   
   140002032:	int3   
   140002033:	int3   
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	int3   
   140002041:	int3   
   140002042:	int3   
   140002043:	int3   
   140002044:	int3   
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	jmp    QWORD PTR [rip+0x104a]        # 0x1400030a0
   140002056:	int3   
   140002057:	int3   
   140002058:	int3   
   140002059:	int3   
   14000205a:	int3   
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	lea    rax,[rip+0x4f99]        # 0x140007000
   140002067:	jmp    0x140002080
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	int3   
   140002071:	int3   
   140002072:	int3   
   140002073:	int3   
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	mov    QWORD PTR [rsp+0x8],rcx
   140002085:	mov    QWORD PTR [rsp+0x10],rdx
   14000208a:	mov    QWORD PTR [rsp+0x18],r8
   14000208f:	mov    QWORD PTR [rsp+0x20],r9
   140002094:	sub    rsp,0x68
   140002098:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000209e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400020a4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400020aa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400020b0:	mov    rdx,rax
   1400020b3:	lea    rcx,[rip+0x180a]        # 0x1400038c4
   1400020ba:	call   0x140001710
   1400020bf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400020c5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400020cb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400020d1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400020d7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400020dc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400020e1:	mov    r8,QWORD PTR [rsp+0x80]
   1400020e9:	mov    r9,QWORD PTR [rsp+0x88]
   1400020f1:	add    rsp,0x68
   1400020f5:	jmp    0x1400020f7
   1400020f7:	jmp    rax
   1400020f9:	int3   
   1400020fa:	int3   
   1400020fb:	int3   
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	jmp    QWORD PTR [rip+0xf62]        # 0x140003068
   140002106:	int3   
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	sub    rsp,0x28
   140002110:	mov    r8,QWORD PTR [r9+0x38]
   140002114:	mov    rcx,rdx
   140002117:	mov    rdx,r9
   14000211a:	call   0x140002130
   14000211f:	mov    eax,0x1
   140002124:	add    rsp,0x28
   140002128:	ret    
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	rex push rbx
   140002132:	sub    rsp,0x20
   140002136:	mov    r11d,DWORD PTR [r8]
   140002139:	mov    rbx,rdx
   14000213c:	and    r11d,0xfffffff8
   140002140:	mov    r9,rcx
   140002143:	test   BYTE PTR [r8],0x4
   140002147:	mov    r10,rcx
   14000214a:	je     0x14000215f
   14000214c:	mov    eax,DWORD PTR [r8+0x8]
   140002150:	movsxd r10,DWORD PTR [r8+0x4]
   140002154:	neg    eax
   140002156:	add    r10,rcx
   140002159:	movsxd rcx,eax
   14000215c:	and    r10,rcx
   14000215f:	movsxd rax,r11d
   140002162:	mov    rdx,QWORD PTR [rax+r10*1]
   140002166:	mov    rax,QWORD PTR [rbx+0x10]
   14000216a:	mov    ecx,DWORD PTR [rax+0x8]
   14000216d:	add    rcx,QWORD PTR [rbx+0x8]
   140002171:	test   BYTE PTR [rcx+0x3],0xf
   140002175:	je     0x140002183
   140002177:	movzx  eax,BYTE PTR [rcx+0x3]
   14000217b:	and    eax,0xfffffff0
   14000217e:	cdqe   
   140002180:	add    r9,rax
   140002183:	xor    r9,rdx
   140002186:	mov    rcx,r9
   140002189:	add    rsp,0x20
   14000218d:	pop    rbx
   14000218e:	jmp    0x140001b30
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	jmp    QWORD PTR [rip+0x1090]        # 0x140003230
   1400021a0:	int3   
   1400021a1:	int3   
   1400021a2:	int3   
   1400021a3:	int3   
   1400021a4:	int3   
   1400021a5:	int3   
   1400021a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400021b0:	jmp    rax
   1400021b2:	int3   
   1400021b3:	int3   
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	int3   
   1400021c1:	int3   
   1400021c2:	int3   
   1400021c3:	int3   
   1400021c4:	int3   
   1400021c5:	int3   
   1400021c6:	rex push rbp
   1400021c8:	sub    rsp,0x20
   1400021cc:	mov    rbp,rdx
   1400021cf:	mov    rax,QWORD PTR [rcx]
   1400021d2:	mov    rdx,rcx
   1400021d5:	mov    ecx,DWORD PTR [rax]
   1400021d7:	call   0x140001bbe
   1400021dc:	nop
   1400021dd:	add    rsp,0x20
   1400021e1:	pop    rbp
   1400021e2:	ret    
   1400021e3:	int3   
   1400021e4:	int3   
   1400021e5:	int3   
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	int3   
   1400021ed:	int3   
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	rex push rbp
   1400021f2:	sub    rsp,0x20
   1400021f6:	mov    rbp,rdx
   1400021f9:	mov    rax,QWORD PTR [rcx]
   1400021fc:	xor    ecx,ecx
   1400021fe:	cmp    DWORD PTR [rax],0xc0000005
   140002204:	sete   cl
   140002207:	mov    eax,ecx
   140002209:	add    rsp,0x20
   14000220d:	pop    rbp
   14000220e:	ret    
   14000220f:	int3   

Disassembly of section .rdata:

0000000140003000 <.rdata>:
   140003000:	call   0x140003041
   140003005:	add    BYTE PTR [rax],al
   140003007:	add    ah,bh
   140003009:	cmp    al,0x0
   14000300b:	add    BYTE PTR [rax],al
   14000300d:	add    BYTE PTR [rax],al
   14000300f:	add    BYTE PTR [rdx],dl
   140003011:	cmp    eax,0x0
   140003016:	add    BYTE PTR [rax],al
   140003018:	and    al,0x3d
   14000301a:	add    BYTE PTR [rax],al
   14000301c:	add    BYTE PTR [rax],al
   14000301e:	add    BYTE PTR [rax],al
   140003020:	cmp    al,0x3d
	...
   14000302e:	add    BYTE PTR [rax],al
   140003030:	jb     0x14000306f
   140003032:	add    BYTE PTR [rax],al
   140003034:	add    BYTE PTR [rax],al
   140003036:	add    BYTE PTR [rax],al
   140003038:	cmp    BYTE PTR [rip+0x0],0x0        # 0x14000303f
   14000303f:	add    BYTE PTR [rax+0x3d],ah
   140003042:	add    BYTE PTR [rax],al
   140003044:	add    BYTE PTR [rax],al
   140003046:	add    BYTE PTR [rax],al
   140003048:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003049:	cmp    eax,0x0
   14000304e:	add    BYTE PTR [rax],al
   140003050:	mov    esp,0x3d
   140003055:	add    BYTE PTR [rax],al
   140003057:	add    ah,cl
   140003059:	cmp    eax,0x0
   14000305e:	add    BYTE PTR [rax],al
   140003060:	fidivr DWORD PTR [rip+0x0]        # 0x140003066
   140003066:	add    BYTE PTR [rax],al
   140003068:	mov    WORD PTR [rdx+0x0],es
   14000306b:	add    BYTE PTR [rax],al
   14000306d:	add    BYTE PTR [rax],al
   14000306f:	add    BYTE PTR [rdx+rax*2+0x0],dh
   140003073:	add    BYTE PTR [rax],al
   140003075:	add    BYTE PTR [rax],al
   140003077:	add    BYTE PTR [rbp+rdi*1+0x0],dl
	...
   140003086:	add    BYTE PTR [rax],al
   140003088:	push   rdx
   140003089:	rex.X add BYTE PTR [rax],al
	...
   140003098:	(bad)  
   140003099:	add    DWORD PTR [rax],eax
   14000309b:	add    BYTE PTR [rax],al
   14000309d:	add    BYTE PTR [rax],al
   14000309f:	xor    al,0x0
   1400030a2:	add    BYTE PTR [rax],al
   1400030a4:	add    BYTE PTR [rax],al
   1400030a6:	add    BYTE PTR [rax+0x0],al
   1400030ac:	add    BYTE PTR [rax],al
   1400030ae:	add    BYTE PTR [rax],al
   1400030b0:	rex.WX
   1400030b1:	add    BYTE PTR ds:[rax],al
   1400030b4:	add    BYTE PTR [rax],al
   1400030b6:	add    BYTE PTR [rax],al
   1400030b8:	xor    al,0x3e
   1400030ba:	add    BYTE PTR [rax],al
   1400030bc:	add    BYTE PTR [rax],al
   1400030be:	add    BYTE PTR [rax],al
   1400030c0:	and    al,0x3e
   1400030c2:	add    BYTE PTR [rax],al
   1400030c4:	add    BYTE PTR [rax],al
   1400030c6:	add    BYTE PTR [rax],al
   1400030c8:	adc    al,0x3e
   1400030ca:	add    BYTE PTR [rax],al
   1400030cc:	add    BYTE PTR [rax],al
   1400030ce:	add    BYTE PTR [rax],al
   1400030d0:	(bad)  
   1400030d1:	add    BYTE PTR ds:[rax],al
   1400030d4:	add    BYTE PTR [rax],al
   1400030d6:	add    BYTE PTR [rax],al
   1400030d8:	hlt    
   1400030d9:	cmp    eax,0x0
   1400030de:	add    BYTE PTR [rax],al
   1400030e0:	pop    rsi
   1400030e1:	add    BYTE PTR ds:[rax],al
	...
   1400030f0:	data16 (bad) 
   1400030f2:	add    BYTE PTR [rax],al
   1400030f4:	add    BYTE PTR [rax],al
   1400030f6:	add    BYTE PTR [rax],al
   1400030f8:	js     0x140003139
   1400030fa:	add    BYTE PTR [rax],al
   1400030fc:	add    BYTE PTR [rax],al
   1400030fe:	add    BYTE PTR [rax],al
   140003100:	mov    bh,BYTE PTR [rdi]
	...
   14000310e:	add    BYTE PTR [rax],al
   140003110:	mov    dh,0x3f
   140003112:	add    BYTE PTR [rax],al
   140003114:	add    BYTE PTR [rax],al
   140003116:	add    BYTE PTR [rax],al
   140003118:	(bad)  
   140003119:	add    BYTE PTR [rax],al
	...
   140003128:	(bad)  
   140003129:	(bad)  
	...
   140003136:	add    BYTE PTR [rax],al
   140003138:	add    al,BYTE PTR [rax+0x0]
   14000313b:	add    BYTE PTR [rax],al
   14000313d:	add    BYTE PTR [rax],al
   14000313f:	add    BYTE PTR [rdi+rdi*1+0x0],ah
   140003146:	add    BYTE PTR [rax],al
   140003148:	mov    dh,0x40
   14000314a:	add    BYTE PTR [rax],al
   14000314c:	add    BYTE PTR [rax],al
   14000314e:	add    BYTE PTR [rax],al
   140003150:	sbb    BYTE PTR [rax+0x0],al
	...
   14000315f:	add    al,ch
   140003161:	(bad)  
	...
   14000316e:	add    BYTE PTR [rax],al
   140003170:	pop    rax
   140003171:	add    BYTE PTR [rax],al
   140003174:	add    BYTE PTR [rax],al
   140003176:	add    BYTE PTR [rax],al
   140003178:	ins    BYTE PTR es:[rdi],dx
   140003179:	add    BYTE PTR [rax],al
   14000317c:	add    BYTE PTR [rax],al
   14000317e:	add    BYTE PTR [rax],al
   140003180:	xchg   BYTE PTR [rax+0x0],al
	...
   14000318f:	add    BYTE PTR [rdi+rdi*1+0x0],bl
	...
   14000319e:	add    BYTE PTR [rax],al
   1400031a0:	rex.W
   1400031a1:	add    BYTE PTR [rax],al
   1400031a4:	add    BYTE PTR [rax],al
   1400031a6:	add    BYTE PTR [rax],al
   1400031a8:	add    BYTE PTR cs:[rax],al
	...
   1400031b8:	mov    BYTE PTR [rsi],bh
   1400031ba:	add    BYTE PTR [rax],al
   1400031bc:	add    BYTE PTR [rax],al
   1400031be:	add    BYTE PTR [rax],al
   1400031c0:	cs (bad) 
   1400031c2:	add    BYTE PTR [rax],al
   1400031c4:	add    BYTE PTR [rax],al
   1400031c6:	add    BYTE PTR [rax],al
   1400031c8:	and    al,0x3f
   1400031ca:	add    BYTE PTR [rax],al
   1400031cc:	add    BYTE PTR [rax],al
   1400031ce:	add    BYTE PTR [rax],al
   1400031d0:	sbb    bh,BYTE PTR [rdi]
   1400031d2:	add    BYTE PTR [rax],al
   1400031d4:	add    BYTE PTR [rax],al
   1400031d6:	add    BYTE PTR [rax],al
   1400031d8:	add    bh,BYTE PTR [rdi]
   1400031da:	add    BYTE PTR [rax],al
   1400031dc:	add    BYTE PTR [rax],al
   1400031de:	add    BYTE PTR [rax],al
   1400031e0:	rex.RX (bad) 
   1400031e2:	add    BYTE PTR [rax],al
   1400031e4:	add    BYTE PTR [rax],al
   1400031e6:	add    BYTE PTR [rax],al
   1400031e8:	idiv   BYTE PTR [rsi]
   1400031ea:	add    BYTE PTR [rax],al
   1400031ec:	add    BYTE PTR [rax],al
   1400031ee:	add    BYTE PTR [rax],al
   1400031f0:	loop   0x140003230
   1400031f2:	add    BYTE PTR [rax],al
   1400031f4:	add    BYTE PTR [rax],al
   1400031f6:	add    BYTE PTR [rax],al
   1400031f8:	fdivr  DWORD PTR [rsi]
   1400031fa:	add    BYTE PTR [rax],al
   1400031fc:	add    BYTE PTR [rax],al
   1400031fe:	add    BYTE PTR [rax],al
   140003200:	sar    BYTE PTR [rsi],1
   140003202:	add    BYTE PTR [rax],al
   140003204:	add    BYTE PTR [rax],al
   140003206:	add    BYTE PTR [rax],al
   140003208:	enter  0x3e,0x0
   14000320c:	add    BYTE PTR [rax],al
   14000320e:	add    BYTE PTR [rax],al
   140003210:	mov    dh,0x3e
   140003212:	add    BYTE PTR [rax],al
   140003214:	add    BYTE PTR [rax],al
   140003216:	add    BYTE PTR [rax],al
   140003218:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003219:	add    BYTE PTR ds:[rax],al
   14000321c:	add    BYTE PTR [rax],al
   14000321e:	add    BYTE PTR [rax],al
   140003220:	xchg   esi,eax
   140003221:	add    BYTE PTR ds:[rax],al
   140003224:	add    BYTE PTR [rax],al
   140003226:	add    BYTE PTR [rax],al
   140003228:	jp     0x140003268
   14000322a:	add    BYTE PTR [rax],al
   14000322c:	add    BYTE PTR [rax],al
   14000322e:	add    BYTE PTR [rax],al
   140003230:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003231:	rex.X add BYTE PTR [rax],al
	...
   140003240:	clc    
   140003241:	add    BYTE PTR [r8],al
	...
   140003250:	cmp    al,BYTE PTR [rdx+0x0]
   140003253:	add    BYTE PTR [rax],al
   140003255:	add    BYTE PTR [rax],al
   140003257:	add    BYTE PTR [rdx+rax*2],bl
	...
   140003266:	add    BYTE PTR [rax],al
   140003268:	jo     0x140003288
   14000326a:	add    BYTE PTR [rax+0x1],al
   14000326d:	add    BYTE PTR [rax],al
   14000326f:	add    BYTE PTR [rax+0x1400021],dh
	...
   14000327d:	add    BYTE PTR [rax],al
   14000327f:	add    BYTE PTR [rax],dh
   140003281:	sbb    BYTE PTR [rax],al
   140003283:	rex add DWORD PTR [rax],eax
	...
   140003296:	add    BYTE PTR [rax],al
   140003298:	push   rax
   140003299:	(bad)  
   14000329a:	add    BYTE PTR [rax+0x1],al
   14000329d:	add    BYTE PTR [rax],al
   14000329f:	add    BYTE PTR [rax+0x140001b],ah
	...
   1400032ad:	add    BYTE PTR [rax],al
   1400032af:	add    BYTE PTR [rax],dl
   1400032b1:	(bad)  
   1400032b2:	add    BYTE PTR [rax],al
   1400032b4:	push   rax
   1400032b5:	(bad)  
   1400032b6:	add    BYTE PTR [rax],al
   1400032b8:	xor    BYTE PTR [rax],bl
   1400032ba:	add    BYTE PTR [rax],al
   1400032bc:	add    BYTE PTR [rbx],bl
   1400032be:	add    BYTE PTR [rax],al
   1400032c0:	(bad)  
   1400032c1:	sbb    eax,DWORD PTR [rax]
   1400032c3:	add    BYTE PTR [rax+0x4000001b],ah
   1400032c9:	(bad)  
   1400032ca:	add    BYTE PTR [rax],al
   1400032cc:	jo     0x1400032ec
   1400032ce:	add    BYTE PTR [rax],al
   1400032d0:	rcr    BYTE PTR [rsi],0x0
   1400032d3:	add    BYTE PTR [rax+0x20],dl
   1400032d6:	add    BYTE PTR [rax],al
   1400032d8:	(bad)  
   1400032d9:	and    BYTE PTR [rax],al
   1400032db:	add    BYTE PTR [rax+0x20],al
   1400032e1:	and    DWORD PTR [rax],eax
	...
   1400032ef:	add    BYTE PTR [rax+0x50],ah
   1400032f2:	add    BYTE PTR [rax+0x1],al
   1400032f5:	add    BYTE PTR [rax],al
   1400032f7:	add    BYTE PTR [rax],al
   1400032f9:	push   rcx
   1400032fa:	add    BYTE PTR [rax+0x1],al
   1400032fd:	add    BYTE PTR [rax],al
   1400032ff:	add    BYTE PTR [rbx+0x4f],al
   140003302:	rex.WRB
   140003303:	rex.XB push r12
   140003305:	xor    r14,QWORD PTR [rdx]
   140003308:	cs fs ins BYTE PTR es:[rdi],dx
   14000330b:	ins    BYTE PTR es:[rdi],dx
   14000330c:	add    BYTE PTR [rax],al
   14000330e:	add    BYTE PTR [rax],al
   140003310:	add    BYTE PTR [r8+rax*1+0x65],r13b
   140003315:	add    BYTE PTR [rsi+0x0],dh
   140003318:	(bad)  
   140003319:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000331d:	add    BYTE PTR [rdi+0x0],ch
   140003320:	outs   dx,BYTE PTR ds:[rsi]
   140003321:	add    BYTE PTR [rdx],bh
   140003323:	add    BYTE PTR [rcx+0x0],al
   140003326:	add    BYTE PTR fs:[rbp+0x0],ch
   14000332a:	imul   eax,DWORD PTR [rax],0x69006e
   140003330:	jae    0x140003332
   140003332:	je     0x140003334
   140003334:	jb     0x140003336
   140003336:	(bad)  
   140003337:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000333b:	add    BYTE PTR [rdx+0x0],dh
   14000333e:	and    DWORD PTR [rax],eax
   140003340:	outs   dx,BYTE PTR ds:[rsi]
   140003341:	add    BYTE PTR [rbp+0x0],ah
   140003344:	ja     0x140003346
   140003346:	cmp    al,BYTE PTR [rax]
   140003348:	and    eax,0x7300
   14000334d:	add    BYTE PTR [rax],al
   14000334f:	add    BYTE PTR [rbx+0x0],dh
   140003352:	push   0x6c006500
   140003357:	add    BYTE PTR [rax+rax*1+0x33],ch
   14000335b:	add    BYTE PTR [rdx],dh
   14000335d:	add    BYTE PTR [rsi],ch
   14000335f:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140003363:	add    BYTE PTR [rax+rax*1+0x0],ch
   140003367:	add    BYTE PTR [rbp+0x0],dl
   14000336a:	jae    0x14000336c
   14000336c:	add    BYTE PTR gs:[rdx+0x0],dh
   140003370:	add    BYTE PTR [r11+0x0],spl
   140003374:	movsxd eax,DWORD PTR [rax]
   140003376:	outs   dx,DWORD PTR ds:[rsi]
   140003377:	add    BYTE PTR [rbp+0x0],dh
   14000337a:	outs   dx,BYTE PTR ds:[rsi]
   14000337b:	add    BYTE PTR [rax+rax*1+0x43],dh
   14000337f:	add    BYTE PTR [rdi+0x0],ch
   140003382:	outs   dx,BYTE PTR ds:[rsi]
   140003383:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003387:	add    BYTE PTR [rdi+0x0],ch
   14000338a:	ins    BYTE PTR es:[rdi],dx
   14000338b:	add    BYTE PTR [rbx+0x0],dl
   14000338e:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140003393:	add    BYTE PTR [rcx+0x0],ch
   140003396:	outs   dx,BYTE PTR ds:[rsi]
   140003397:	add    BYTE PTR [rdi+0x0],ah
   14000339a:	jae    0x14000339c
   14000339c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400033a1:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400033a5:	add    BYTE PTR [rax],al
   1400033a7:	add    BYTE PTR [rdi],ch
   1400033a9:	add    BYTE PTR [rcx+0x0],ah
   1400033ac:	jo     0x1400033ae
   1400033ae:	jo     0x1400033b0
   1400033b0:	ins    BYTE PTR es:[rdi],dx
   1400033b1:	add    BYTE PTR [rcx+0x0],bh
   1400033b4:	push   rbx
   1400033b5:	add    BYTE PTR [rbp+0x0],ah
   1400033b8:	je     0x1400033ba
   1400033ba:	je     0x1400033bc
   1400033bc:	imul   eax,DWORD PTR [rax],0x67006e
   1400033c2:	jae    0x1400033c4
   1400033c4:	add    BYTE PTR [rax],al
   1400033c6:	add    BYTE PTR [rax],al
   1400033c8:	jge    0x12c15e1a0
   1400033ce:	sub    al,0x4d
   1400033d0:	test   al,0x7
   1400033d2:	jo     0x14000342d
   1400033d4:	pushf  
   1400033d5:	push   rdi
   1400033d6:	fnstcw WORD PTR [rdi-0x48dd4335]
   1400033dc:	push   0xffffffffa2101b4e
   1400033e1:	mov    esp,0x4000aa00
   1400033e6:	rex.RXB jo 0x14000340d
   1400033e9:	imul   ebp,DWORD PTR [rdx+rbp*8],0xffffff90
   1400033ed:	(bad)  
   1400033f0:	mov    edx,0x9b0f4ac8
   1400033f5:	adc    esi,DWORD PTR [rbp+0xb8]
	...
   140003403:	add    BYTE PTR [rdi+0x559f39],ch
   140003409:	add    BYTE PTR [rax],al
   14000340b:	add    BYTE PTR [rdx],al
   14000340d:	add    BYTE PTR [rax],al
   14000340f:	add    BYTE PTR [rdi],dh
   140003411:	add    BYTE PTR [rax],al
   140003413:	add    BYTE PTR [rax],al
   140003415:	xor    eax,0x1d000000
   14000341a:	add    BYTE PTR [rax],al
   14000341c:	add    BYTE PTR [rax],al
   14000341e:	add    BYTE PTR [rax],al
   140003420:	scas   eax,DWORD PTR es:[rdi]
   140003421:	cmp    DWORD PTR [rdi+0x55],ebx
   140003427:	add    BYTE PTR [rip+0x44000000],cl        # 0x18400342d
   14000342d:	add    al,BYTE PTR [rax]
   14000342f:	add    BYTE PTR [rbp+rsi*1+0x0],cl
   140003433:	add    BYTE PTR [rbp+rbx*1+0x0],cl
	...
   14000345f:	add    BYTE PTR [rax+0x0],ah
	...
   1400034b5:	add    BYTE PTR [rax],al
   1400034b7:	add    BYTE PTR [rax],cl
   1400034b9:	push   rax
   1400034ba:	add    BYTE PTR [rax+0x1],al
	...
   1400034cd:	add    BYTE PTR [rax],al
   1400034cf:	add    BYTE PTR [rax+0x32],ch
   1400034d2:	add    BYTE PTR [rax+0x1],al
   1400034d5:	add    BYTE PTR [rax],al
   1400034d7:	add    BYTE PTR [rax+0x32],dh
   1400034da:	add    BYTE PTR [rax+0x1],al
   1400034dd:	add    BYTE PTR [rax],al
   1400034df:	add    BYTE PTR [rax+0x1400032],dh
   1400034e5:	add    BYTE PTR [rax],al
   1400034e7:	add    BYTE PTR [rip+0x0],cl        # 0x1400034ed
   1400034ed:	add    BYTE PTR [rax],al
   1400034ef:	add    BYTE PTR [rax],al
   1400034f1:	xor    eax,0x0
	...
   1400034fe:	add    BYTE PTR [rax],al
   140003500:	push   rdx
   140003501:	push   rbx
   140003502:	rex.R push rbx
   140003504:	(bad)  
   140003505:	adc    ch,dh
   140003507:	(bad)  
   140003508:	adc    bl,cl
   14000350a:	sbb    al,0x45
   14000350c:	xchg   edi,eax
   14000350d:	push   rax
   14000350e:	mov    edx,0x6d69483
   140003513:	outs   dx,DWORD PTR ds:[rsi]
   140003514:	add    DWORD PTR [rax],eax
   140003516:	add    BYTE PTR [rax],al
   140003518:	push   rbp
   140003519:	jae    0x140003580
   14000351b:	jb     0x14000355e
   14000351d:	movsxd esp,DWORD PTR [rbx+0x6f]
   140003520:	jne    0x140003590
   140003522:	je     0x140003567
   140003524:	outs   dx,DWORD PTR ds:[rsi]
   140003525:	outs   dx,BYTE PTR ds:[rsi]
   140003526:	je     0x14000359a
   140003528:	outs   dx,DWORD PTR ds:[rsi]
   140003529:	ins    BYTE PTR es:[rdi],dx
   14000352a:	push   rbx
   14000352b:	gs je  0x1400035a2
   14000352e:	imul   ebp,DWORD PTR [rsi+0x67],0x64702e73
   140003535:	(bad)  
	...
   14000354a:	add    BYTE PTR [rax],al
   14000354c:	rex.RXB
   14000354d:	rex.XB push r12
   14000354f:	rex.WR add BYTE PTR [rax],r10b
   140003552:	add    BYTE PTR [rax],al
   140003554:	movabs al,ds:0x747865742e000011
   14000355d:	and    al,0x6d
   14000355f:	outs   dx,BYTE PTR ds:[rsi]
   140003560:	add    BYTE PTR [rax],al
   140003562:	add    BYTE PTR [rax],al
   140003564:	movabs al,ds:0x2e00000012000021
   14000356d:	je     0x1400035d4
   14000356f:	js     0x1400035e5
   140003571:	and    al,0x6d
   140003573:	outs   dx,BYTE PTR ds:[rsi]
   140003574:	and    al,0x30
   140003576:	xor    BYTE PTR [rax],al
   140003578:	shl    BYTE PTR [rcx],0x0
   14000357b:	add    BYTE PTR [rax+0x0],dl
   14000357e:	add    BYTE PTR [rax],al
   140003580:	cs je  0x1400035e8
   140003583:	js     0x1400035f9
   140003585:	and    al,0x78
   140003587:	add    BYTE PTR [rax],al
   140003589:	xor    BYTE PTR [rax],al
   14000358b:	add    BYTE PTR [rax+0x2],ch
   14000358e:	add    BYTE PTR [rax],al
   140003590:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140003599:	add    BYTE PTR [rax],al
   14000359b:	add    BYTE PTR [rax+0x32],ch
   14000359e:	add    BYTE PTR [rax],al
   1400035a0:	adc    BYTE PTR [rax],al
   1400035a2:	add    BYTE PTR [rax],al
   1400035a4:	xor    BYTE PTR cs:[rax],dh
   1400035a7:	movsxd esp,DWORD PTR [rsi+0x67]
   1400035aa:	add    BYTE PTR [rax],al
   1400035ac:	js     0x1400035e0
   1400035ae:	add    BYTE PTR [rax],al
   1400035b0:	or     BYTE PTR [rax],al
   1400035b2:	add    BYTE PTR [rax],al
   1400035b4:	cs rex.XB push r10
   1400035b7:	push   rsp
   1400035b8:	and    al,0x58
   1400035ba:	rex.XB
   1400035bb:	add    BYTE PTR [r8],al
   1400035be:	add    BYTE PTR [rax],al
   1400035c0:	xor    BYTE PTR [rdx],0x0
   1400035c3:	add    BYTE PTR [rax],cl
   1400035c5:	add    BYTE PTR [rax],al
   1400035c7:	add    BYTE PTR [rsi],ch
   1400035c9:	rex.XB push r10
   1400035cb:	push   rsp
   1400035cc:	and    al,0x58
   1400035ce:	rex.XB
   1400035cf:	rex.B
   1400035d0:	add    BYTE PTR [r8],al
   1400035d3:	add    BYTE PTR [rax+0x8000032],cl
   1400035d9:	add    BYTE PTR [rax],al
   1400035db:	add    BYTE PTR [rsi],ch
   1400035dd:	rex.XB push r10
   1400035df:	push   rsp
   1400035e0:	and    al,0x58
   1400035e2:	rex.XB pop r10
   1400035e4:	add    BYTE PTR [rax],al
   1400035e6:	add    BYTE PTR [rax],al
   1400035e8:	nop
   1400035e9:	xor    al,BYTE PTR [rax]
   1400035eb:	add    BYTE PTR [rax],cl
   1400035ed:	add    BYTE PTR [rax],al
   1400035ef:	add    BYTE PTR [rsi],ch
   1400035f1:	rex.XB push r10
   1400035f3:	push   rsp
   1400035f4:	and    al,0x58
   1400035f6:	rex.WB
   1400035f7:	add    BYTE PTR [r8],al
   1400035fa:	add    BYTE PTR [rax],al
   1400035fc:	cwde   
   1400035fd:	xor    al,BYTE PTR [rax]
   1400035ff:	add    BYTE PTR [rax],cl
   140003601:	add    BYTE PTR [rax],al
   140003603:	add    BYTE PTR [rsi],ch
   140003605:	rex.XB push r10
   140003607:	push   rsp
   140003608:	and    al,0x58
   14000360a:	rex.WB
   14000360b:	rex.B
   14000360c:	add    BYTE PTR [r8],al
   14000360f:	add    BYTE PTR [rax+0x8000032],ah
   140003615:	add    BYTE PTR [rax],al
   140003617:	add    BYTE PTR [rsi],ch
   140003619:	rex.XB push r10
   14000361b:	push   rsp
   14000361c:	and    al,0x58
   14000361e:	rex.WB pop r9
   140003620:	add    BYTE PTR [rax],al
   140003622:	add    BYTE PTR [rax],al
   140003624:	test   al,0x32
   140003626:	add    BYTE PTR [rax],al
   140003628:	or     BYTE PTR [rax],al
   14000362a:	add    BYTE PTR [rax],al
   14000362c:	cs rex.XB push r10
   14000362f:	push   rsp
   140003630:	and    al,0x58
   140003632:	rex.WB pop r10
   140003634:	add    BYTE PTR [rax],al
   140003636:	add    BYTE PTR [rax],al
   140003638:	mov    al,0x32
   14000363a:	add    BYTE PTR [rax],al
   14000363c:	xor    al,0x0
   14000363e:	add    BYTE PTR [rax],al
   140003640:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140003649:	add    BYTE PTR [rax],al
   14000364b:	add    al,dh
   14000364d:	xor    al,BYTE PTR [rax]
   14000364f:	add    BYTE PTR [rax],dl
   140003651:	add    al,BYTE PTR [rax]
   140003653:	add    BYTE PTR [rsi],ch
   140003655:	jb     0x1400036bb
   140003657:	(bad)  
   140003658:	je     0x1400036bb
   14000365a:	add    BYTE PTR [rax],al
   14000365c:	add    BYTE PTR [rip+0x2900000],dh        # 0x142903662
   140003662:	add    BYTE PTR [rax],al
   140003664:	cs jb  0x1400036cb
   140003667:	(bad)  
   140003668:	je     0x1400036cb
   14000366a:	and    al,0x7a
   14000366c:	jp     0x1400036e8
   14000366e:	fs (bad) 
   140003670:	add    BYTE PTR [eax],al
   140003673:	add    BYTE PTR [rax+0x34000037],dl
   140003679:	add    DWORD PTR [rax],eax
   14000367b:	add    BYTE PTR [rsi],ch
   14000367d:	js     0x1400036e3
   14000367f:	(bad)  
   140003680:	je     0x1400036e3
   140003682:	add    BYTE PTR [rax],al
   140003684:	(bad)  
   140003685:	cmp    BYTE PTR [rax],al
   140003687:	add    BYTE PTR [rax],ah
   140003689:	add    BYTE PTR [rax],al
   14000368b:	add    BYTE PTR [rsi],ch
   14000368d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140003696:	add    BYTE PTR [rax],al
   140003698:	in     al,0x38
   14000369a:	add    BYTE PTR [rax],al
   14000369c:	and    BYTE PTR [rax],al
   14000369e:	add    BYTE PTR [rax],al
   1400036a0:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   1400036aa:	add    BYTE PTR [rax],al
   1400036ac:	or     BYTE PTR [rcx],bh
   1400036ae:	add    BYTE PTR [rax],al
   1400036b0:	adc    BYTE PTR [rax],al
   1400036b2:	add    BYTE PTR [rax],al
   1400036b4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   1400036be:	add    BYTE PTR [rax],al
   1400036c0:	sbb    BYTE PTR [rcx],bh
   1400036c2:	add    BYTE PTR [rax],al
   1400036c4:	adc    BYTE PTR [rax],al
   1400036c6:	add    BYTE PTR [rax],al
   1400036c8:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   1400036d2:	add    BYTE PTR [rax],al
   1400036d4:	sub    BYTE PTR [rcx],bh
   1400036d6:	add    BYTE PTR [rax],al
   1400036d8:	rex add DWORD PTR [rax],eax
   1400036db:	add    BYTE PTR [rsi],ch
   1400036dd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400036e5:	add    BYTE PTR [rax],al
   1400036e7:	add    BYTE PTR [rax+0x3a],ch
   1400036ea:	add    BYTE PTR [rax],al
   1400036ec:	adc    al,0x0
   1400036ee:	add    BYTE PTR [rax],al
   1400036f0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400036f9:	add    BYTE PTR [rax],al
   1400036fb:	add    BYTE PTR [rax+0x6800003a],al
   140003701:	add    al,BYTE PTR [rax]
   140003703:	add    BYTE PTR [rsi],ch
   140003705:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000370d:	add    BYTE PTR [rax],al
   14000370f:	add    al,ch
   140003711:	cmp    al,0x0
   140003713:	add    dh,al
   140003715:	add    eax,0x692e0000
   14000371a:	fs (bad) 
   14000371c:	je     0x14000377f
   14000371e:	and    al,0x36
   140003720:	add    BYTE PTR [rax],al
   140003722:	add    BYTE PTR [rax],al
   140003724:	add    BYTE PTR [rax+0x0],dl
   140003727:	add    BYTE PTR [rax],ah
   140003729:	add    BYTE PTR [rax],al
   14000372b:	add    BYTE PTR [rsi],ch
   14000372d:	fs (bad) 
   14000372f:	je     0x140003792
   140003731:	add    BYTE PTR [rax],al
   140003733:	add    BYTE PTR [rax],ah
   140003735:	push   rax
   140003736:	add    BYTE PTR [rax],al
   140003738:	call   0x16e003742
   14000373d:	(bad)  
   14000373f:	jae    0x140003741
   140003741:	add    BYTE PTR [rax],al
   140003743:	add    BYTE PTR [rax],al
   140003745:	(bad)  
   140003746:	add    BYTE PTR [rax],al
   140003748:	cmp    BYTE PTR [rcx],al
   14000374a:	add    BYTE PTR [rax],al
   14000374c:	cs jo  0x1400037b3
   14000374f:	(bad)  
   140003750:	je     0x1400037b3
   140003752:	add    BYTE PTR [rax],al
   140003754:	add    BYTE PTR [rax+0x0],dh
   140003757:	add    BYTE PTR [rax],dl
   140003759:	add    BYTE PTR [rax],al
   14000375b:	add    BYTE PTR [rsi],ch
   14000375d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140003766:	add    BYTE PTR [rax],al
   140003768:	add    BYTE PTR [rax+0x2800000],al
   14000376e:	add    BYTE PTR [rax],al
   140003770:	cs jb  0x1400037e6
   140003773:	jb     0x1400037d8
   140003775:	and    al,0x30
   140003777:	xor    DWORD PTR [rax],eax
   140003779:	add    BYTE PTR [rax],al
   14000377b:	add    BYTE PTR [rax-0x7fffff7e],al
   140003781:	iret   
   140003782:	add    BYTE PTR [rax],al
   140003784:	cs jb  0x1400037fa
   140003787:	jb     0x1400037ec
   140003789:	and    al,0x30
   14000378b:	xor    al,BYTE PTR [rax]
   14000378d:	add    BYTE PTR [rax],al
   14000378f:	add    BYTE PTR [rcx],al
   140003791:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e424997
   140003797:	jo     0x1400037a6
   140003799:	(bad)  
   14000379a:	or     al,0x50
   14000379c:	or     esi,DWORD PTR [rax]
   14000379e:	add    BYTE PTR [rax],al
   1400037a0:	sbb    DWORD PTR [rcx],ebx
   1400037a2:	add    al,BYTE PTR [rax]
   1400037a4:	(bad)  
   1400037a5:	add    DWORD PTR [rbx],edx
   1400037a7:	add    BYTE PTR [rcx+riz*1],cl
   1400037aa:	add    BYTE PTR [rax],al
   1400037ac:	add    BYTE PTR [rax],0x0
   1400037af:	add    BYTE PTR [rcx],al
   1400037b1:	or     eax,DWORD PTR [rax+rax*1]
   1400037b4:	or     edx,DWORD PTR [rdx+0x4]
   1400037b7:	jo     0x1400037bc
   1400037b9:	xor    BYTE PTR [rdx],al
   1400037bb:	push   rax
   1400037bc:	sbb    DWORD PTR [rsi+rax*1],ebx
   1400037bf:	add    BYTE PTR [rip+0xd001234],cl        # 0x14d0049f9
   1400037c5:	mov    dl,0x9
   1400037c7:	loopne 0x1400037d0
   1400037c9:	jo     0x1400037d1
   1400037cb:	(bad)  
   1400037cc:	or     al,0x21
   1400037ce:	add    BYTE PTR [rax],al
   1400037d0:	push   rax
   1400037d1:	add    BYTE PTR [rax],al
   1400037d3:	add    BYTE PTR [rcx],bl
   1400037d5:	xor    ecx,DWORD PTR [rbx]
   1400037d7:	add    BYTE PTR [rdx],ah
   1400037d9:	je     0x140003766
   1400037db:	add    BYTE PTR [rdx],ah
   1400037dd:	mov    al,BYTE PTR fs:[rax]
   1400037e0:	and    dh,BYTE PTR [rcx+rcx*4]
   1400037e3:	add    BYTE PTR [rdx],ah
   1400037e5:	add    DWORD PTR [rax+rax*1-0x1fed0fec],eax
   1400037ec:	adc    BYTE PTR [rax+0x0],dl
   1400037ef:	add    BYTE PTR [rcx+riz*1],cl
   1400037f2:	add    BYTE PTR [rax],al
   1400037f4:	adc    BYTE PTR [rax+rax*1],al
   1400037f7:	add    BYTE PTR [rcx],al
   1400037f9:	or     BYTE PTR [rax+rax*1],al
   1400037fc:	or     BYTE PTR [rdx+0x4],dl
   1400037ff:	jo     0x140003804
   140003801:	(bad)  
   140003802:	add    dh,BYTE PTR [rax]
   140003804:	add    DWORD PTR [rcx+rax*1],eax
   140003807:	add    BYTE PTR [rdx+riz*2],al
   14000380a:	add    BYTE PTR [rax],al
   14000380c:	add    DWORD PTR [rcx+rax*1],eax
   14000380f:	add    BYTE PTR [rdx+rax*2],al
   140003812:	add    BYTE PTR [rax],al
   140003814:	or     DWORD PTR [rbx+rcx*1],ebx
   140003817:	add    BYTE PTR [rsp+rsi*2],bl
   14000381a:	sbb    al,0x0
   14000381c:	sbb    al,0x64
   14000381e:	sbb    eax,DWORD PTR [rax]
   140003820:	sbb    al,0x34
   140003822:	sbb    al,BYTE PTR [rax]
   140003824:	sbb    al,0x1
   140003826:	(bad)  
   140003827:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e04c1d
   14000382d:	rol    BYTE PTR [rax],0x0
   140003830:	push   rsi
   140003831:	(bad)  
   140003832:	add    BYTE PTR [rax],al
   140003834:	add    DWORD PTR [rax],eax
   140003836:	add    BYTE PTR [rax],al
   140003838:	mov    al,0x18
   14000383a:	add    BYTE PTR [rax],al
   14000383c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000383d:	sbb    al,BYTE PTR [rax]
   14000383f:	add    dh,al
   140003841:	and    DWORD PTR [rax],eax
   140003843:	add    BYTE PTR [rsi+0x100001a],ah
   140003849:	add    BYTE PTR [rax],al
   14000384b:	add    BYTE PTR [rcx],cl
   14000384d:	add    al,0x1
   14000384f:	add    BYTE PTR [rdx+riz*1],al
   140003852:	add    BYTE PTR [rax],al
   140003854:	push   rsi
   140003855:	(bad)  
   140003856:	add    BYTE PTR [rax],al
   140003858:	add    DWORD PTR [rax],eax
   14000385a:	add    BYTE PTR [rax],al
   14000385c:	fcomp  QWORD PTR [rbx]
   14000385e:	add    BYTE PTR [rax],al
   140003860:	adc    bl,BYTE PTR [rax+rax*1]
   140003863:	add    BYTE PTR [rcx],al
   140003865:	add    BYTE PTR [rax],al
   140003867:	add    BYTE PTR [rdx],dl
   140003869:	sbb    al,0x0
   14000386b:	add    BYTE PTR [rcx],cl
   14000386d:	or     al,BYTE PTR [rax+rax*1]
   140003870:	or     dh,BYTE PTR [rsi+rax*1]
   140003873:	add    BYTE PTR [rdx],cl
   140003875:	xor    al,BYTE PTR [rsi]
   140003877:	jo     0x1400038cf
   140003879:	(bad)  
   14000387a:	add    BYTE PTR [rax],al
   14000387c:	add    DWORD PTR [rax],eax
   14000387e:	add    BYTE PTR [rax],al
   140003880:	fstp   QWORD PTR [rax+rax*1]
   140003883:	add    BYTE PTR [rax],dl
   140003885:	sbb    eax,0x21f00000
   14000388a:	add    BYTE PTR [rax],al
   14000388c:	adc    BYTE PTR [rip+0x6010000],bl        # 0x146013892
   140003892:	add    al,BYTE PTR [rax]
   140003894:	(bad)  
   140003895:	xor    al,BYTE PTR [rdx]
   140003897:	push   rax
   140003898:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d38a2
   14000389e:	or     DWORD PTR [rax],eax
   1400038a0:	or     eax,0x1500632
   1400038a5:	(bad)  
   1400038a6:	add    al,BYTE PTR [rax]
   1400038a8:	(bad)  
   1400038a9:	xor    al,BYTE PTR [rdx]
   1400038ab:	xor    BYTE PTR [rcx],al
   1400038ad:	or     al,0x2
   1400038af:	add    BYTE PTR [rcx+rax*1],cl
   1400038b2:	adc    DWORD PTR [rax],eax
   1400038b4:	add    BYTE PTR [rax],al
   1400038b6:	add    BYTE PTR [rax],al
   1400038b8:	add    DWORD PTR [rax],eax
   1400038ba:	add    BYTE PTR [rax],al
   1400038bc:	add    DWORD PTR [rax],ebx
   1400038be:	add    DWORD PTR [rax],eax
   1400038c0:	sbb    dl,al
   1400038c2:	add    BYTE PTR [rax],al
   1400038c4:	add    DWORD PTR [rax],eax
   1400038c6:	add    BYTE PTR [rax],al
   1400038c8:	add    BYTE PTR [rbx],dh
   1400038ca:	add    BYTE PTR [rax],al
   1400038cc:	rcl    BYTE PTR [rbp+0x0],1
   1400038cf:	add    BYTE PTR [rax],al
   1400038d1:	jo     0x1400038d3
   1400038d3:	add    BYTE PTR [rax],cl
   1400038d5:	cmp    DWORD PTR [rax],eax
   1400038d7:	add    BYTE PTR [rax],bl
   1400038d9:	cmp    DWORD PTR [rax],eax
	...
   140003907:	add    BYTE PTR [rcx+0x1],bl
   14000390a:	add    BYTE PTR [rax],al
   14000390c:	add    BYTE PTR [rax],al
   14000390e:	add    BYTE PTR [rax+0x0],al
	...
   140003928:	cmp    BYTE PTR [rdx],0x0
	...
   140003933:	add    BYTE PTR [rdx+0x3d],dl
   140003936:	add    BYTE PTR [rax],al
   140003938:	add    BYTE PTR [rax],dh
   14000393a:	add    BYTE PTR [rax],al
   14000393c:	mov    al,0x3a
	...
   140003946:	add    BYTE PTR [rax],al
   140003948:	out    0x3d,al
   14000394a:	add    BYTE PTR [rax],al
   14000394c:	xor    BYTE PTR [rax],dh
   14000394e:	add    BYTE PTR [rax],al
   140003950:	xor    BYTE PTR [rbx],bh
	...
   14000395a:	add    BYTE PTR [rax],al
   14000395c:	outs   dx,BYTE PTR ds:[rsi]
   14000395d:	add    BYTE PTR ds:[rax],al
   140003960:	mov    al,0x30
   140003962:	add    BYTE PTR [rax],al
   140003964:	cmp    BYTE PTR [rax+rax*1],bh
	...
   14000396f:	add    BYTE PTR [rdx],bh
   140003971:	(bad)  
   140003972:	add    BYTE PTR [rax],al
   140003974:	mov    eax,0x18000031
   140003979:	cmp    eax,DWORD PTR [rax]
	...
   140003983:	add    BYTE PTR [rdx+0x3f],bl
   140003986:	add    BYTE PTR [rax],al
   140003988:	cwde   
   140003989:	xor    BYTE PTR [rax],al
   14000398b:	add    BYTE PTR [rax+0x3b],dh
	...
   140003996:	add    BYTE PTR [rax],al
   140003998:	retf   0x40
   14000399b:	add    al,dh
   14000399d:	xor    BYTE PTR [rax],al
   14000399f:	add    BYTE PTR [rax],dl
   1400039a1:	cmp    al,0x0
	...
   1400039ab:	add    dl,ch
   1400039ad:	add    BYTE PTR [rax],al
   1400039b0:	nop
   1400039b1:	xor    DWORD PTR [rax],eax
   1400039b3:	add    BYTE PTR [rax+0x3b],bh
   1400039b9:	add    BYTE PTR [rax],al
   1400039bb:	add    BYTE PTR [rax],al
   1400039bd:	add    BYTE PTR [rax],al
   1400039bf:	add    BYTE PTR [rcx+rax*2],cl
   1400039c2:	add    BYTE PTR [rax],al
   1400039c4:	cmp    BYTE PTR [rcx],dh
   1400039c6:	add    BYTE PTR [rax],al
   1400039c8:	nop
   1400039c9:	cmp    eax,DWORD PTR [rax]
	...
   1400039d3:	add    BYTE PTR [rsi],dh
   1400039d5:	add    BYTE PTR [r8],al
   1400039d8:	adc    BYTE PTR [rcx],dh
   1400039da:	add    BYTE PTR [rax],al
   1400039dc:	test   al,0x3b
	...
   1400039e6:	add    BYTE PTR [rax],al
   1400039e8:	(bad)  
   1400039e9:	add    BYTE PTR [r8],al
   1400039ec:	sub    BYTE PTR [rcx],dh
   1400039ee:	add    BYTE PTR [rax],al
   1400039f0:	loopne 0x140003a2d
	...
   1400039fa:	add    BYTE PTR [rax],al
   1400039fc:	mov    al,BYTE PTR [rcx+0x0]
   1400039ff:	add    BYTE PTR [rax+0x31],ah
   140003a02:	add    BYTE PTR [rax],al
   140003a04:	and    BYTE PTR [rax+rax*1],bh
	...
   140003a0f:	add    BYTE PTR [rsi-0x5fffffbf],ch
   140003a15:	xor    DWORD PTR [rax],eax
   140003a17:	add    al,dh
   140003a19:	cmp    eax,DWORD PTR [rax]
	...
   140003a23:	add    dl,dl
   140003a25:	add    BYTE PTR [r8],al
   140003a28:	jo     0x140003a5b
   140003a2a:	add    BYTE PTR [rax],al
   140003a2c:	sar    BYTE PTR [rax+rax*1],0x0
	...
   140003a38:	adc    al,BYTE PTR [rdx+0x0]
   140003a3b:	add    BYTE PTR [rax+0x32],al
   140003a3e:	add    BYTE PTR [rax],al
   140003a40:	sar    BYTE PTR [rax+rax*1],1
	...
   140003a4b:	add    BYTE PTR [rax+0x42],cl
   140003a4e:	add    BYTE PTR [rax],al
   140003a50:	push   rax
   140003a51:	xor    al,BYTE PTR [rax]
   140003a53:	add    BYTE PTR [rax],cl
   140003a55:	cmp    eax,DWORD PTR [rax]
	...
   140003a5f:	add    BYTE PTR [rax+0x42],ch
   140003a62:	add    BYTE PTR [rax],al
   140003a64:	mov    BYTE PTR [rax],dh
	...
   140003a7e:	add    BYTE PTR [rax],al
   140003a80:	call   0x140003ac1
   140003a85:	add    BYTE PTR [rax],al
   140003a87:	add    ah,bh
   140003a89:	cmp    al,0x0
   140003a8b:	add    BYTE PTR [rax],al
   140003a8d:	add    BYTE PTR [rax],al
   140003a8f:	add    BYTE PTR [rdx],dl
   140003a91:	cmp    eax,0x0
   140003a96:	add    BYTE PTR [rax],al
   140003a98:	and    al,0x3d
   140003a9a:	add    BYTE PTR [rax],al
   140003a9c:	add    BYTE PTR [rax],al
   140003a9e:	add    BYTE PTR [rax],al
   140003aa0:	cmp    al,0x3d
	...
   140003aae:	add    BYTE PTR [rax],al
   140003ab0:	jb     0x140003aef
   140003ab2:	add    BYTE PTR [rax],al
   140003ab4:	add    BYTE PTR [rax],al
   140003ab6:	add    BYTE PTR [rax],al
   140003ab8:	cmp    BYTE PTR [rip+0x0],0x0        # 0x140003abf
   140003abf:	add    BYTE PTR [rax+0x3d],ah
   140003ac2:	add    BYTE PTR [rax],al
   140003ac4:	add    BYTE PTR [rax],al
   140003ac6:	add    BYTE PTR [rax],al
   140003ac8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003ac9:	cmp    eax,0x0
   140003ace:	add    BYTE PTR [rax],al
   140003ad0:	mov    esp,0x3d
   140003ad5:	add    BYTE PTR [rax],al
   140003ad7:	add    ah,cl
   140003ad9:	cmp    eax,0x0
   140003ade:	add    BYTE PTR [rax],al
   140003ae0:	fidivr DWORD PTR [rip+0x0]        # 0x140003ae6
   140003ae6:	add    BYTE PTR [rax],al
   140003ae8:	mov    WORD PTR [rdx+0x0],es
   140003aeb:	add    BYTE PTR [rax],al
   140003aed:	add    BYTE PTR [rax],al
   140003aef:	add    BYTE PTR [rdx+rax*2+0x0],dh
   140003af3:	add    BYTE PTR [rax],al
   140003af5:	add    BYTE PTR [rax],al
   140003af7:	add    BYTE PTR [rbp+rdi*1+0x0],dl
	...
   140003b06:	add    BYTE PTR [rax],al
   140003b08:	push   rdx
   140003b09:	rex.X add BYTE PTR [rax],al
	...
   140003b18:	(bad)  
   140003b19:	add    DWORD PTR [rax],eax
   140003b1b:	add    BYTE PTR [rax],al
   140003b1d:	add    BYTE PTR [rax],al
   140003b1f:	xor    al,0x0
   140003b22:	add    BYTE PTR [rax],al
   140003b24:	add    BYTE PTR [rax],al
   140003b26:	add    BYTE PTR [rax+0x0],al
   140003b2c:	add    BYTE PTR [rax],al
   140003b2e:	add    BYTE PTR [rax],al
   140003b30:	rex.WX
   140003b31:	add    BYTE PTR ds:[rax],al
   140003b34:	add    BYTE PTR [rax],al
   140003b36:	add    BYTE PTR [rax],al
   140003b38:	xor    al,0x3e
   140003b3a:	add    BYTE PTR [rax],al
   140003b3c:	add    BYTE PTR [rax],al
   140003b3e:	add    BYTE PTR [rax],al
   140003b40:	and    al,0x3e
   140003b42:	add    BYTE PTR [rax],al
   140003b44:	add    BYTE PTR [rax],al
   140003b46:	add    BYTE PTR [rax],al
   140003b48:	adc    al,0x3e
   140003b4a:	add    BYTE PTR [rax],al
   140003b4c:	add    BYTE PTR [rax],al
   140003b4e:	add    BYTE PTR [rax],al
   140003b50:	(bad)  
   140003b51:	add    BYTE PTR ds:[rax],al
   140003b54:	add    BYTE PTR [rax],al
   140003b56:	add    BYTE PTR [rax],al
   140003b58:	hlt    
   140003b59:	cmp    eax,0x0
   140003b5e:	add    BYTE PTR [rax],al
   140003b60:	pop    rsi
   140003b61:	add    BYTE PTR ds:[rax],al
	...
   140003b70:	data16 (bad) 
   140003b72:	add    BYTE PTR [rax],al
   140003b74:	add    BYTE PTR [rax],al
   140003b76:	add    BYTE PTR [rax],al
   140003b78:	js     0x140003bb9
   140003b7a:	add    BYTE PTR [rax],al
   140003b7c:	add    BYTE PTR [rax],al
   140003b7e:	add    BYTE PTR [rax],al
   140003b80:	mov    bh,BYTE PTR [rdi]
	...
   140003b8e:	add    BYTE PTR [rax],al
   140003b90:	mov    dh,0x3f
   140003b92:	add    BYTE PTR [rax],al
   140003b94:	add    BYTE PTR [rax],al
   140003b96:	add    BYTE PTR [rax],al
   140003b98:	(bad)  
   140003b99:	add    BYTE PTR [rax],al
	...
   140003ba8:	(bad)  
   140003ba9:	(bad)  
	...
   140003bb6:	add    BYTE PTR [rax],al
   140003bb8:	add    al,BYTE PTR [rax+0x0]
   140003bbb:	add    BYTE PTR [rax],al
   140003bbd:	add    BYTE PTR [rax],al
   140003bbf:	add    BYTE PTR [rdi+rdi*1+0x0],ah
   140003bc6:	add    BYTE PTR [rax],al
   140003bc8:	mov    dh,0x40
   140003bca:	add    BYTE PTR [rax],al
   140003bcc:	add    BYTE PTR [rax],al
   140003bce:	add    BYTE PTR [rax],al
   140003bd0:	sbb    BYTE PTR [rax+0x0],al
	...
   140003bdf:	add    al,ch
   140003be1:	(bad)  
	...
   140003bee:	add    BYTE PTR [rax],al
   140003bf0:	pop    rax
   140003bf1:	add    BYTE PTR [rax],al
   140003bf4:	add    BYTE PTR [rax],al
   140003bf6:	add    BYTE PTR [rax],al
   140003bf8:	ins    BYTE PTR es:[rdi],dx
   140003bf9:	add    BYTE PTR [rax],al
   140003bfc:	add    BYTE PTR [rax],al
   140003bfe:	add    BYTE PTR [rax],al
   140003c00:	xchg   BYTE PTR [rax+0x0],al
	...
   140003c0f:	add    BYTE PTR [rdi+rdi*1+0x0],bl
	...
   140003c1e:	add    BYTE PTR [rax],al
   140003c20:	rex.W
   140003c21:	add    BYTE PTR [rax],al
   140003c24:	add    BYTE PTR [rax],al
   140003c26:	add    BYTE PTR [rax],al
   140003c28:	add    BYTE PTR cs:[rax],al
	...
   140003c38:	mov    BYTE PTR [rsi],bh
   140003c3a:	add    BYTE PTR [rax],al
   140003c3c:	add    BYTE PTR [rax],al
   140003c3e:	add    BYTE PTR [rax],al
   140003c40:	cs (bad) 
   140003c42:	add    BYTE PTR [rax],al
   140003c44:	add    BYTE PTR [rax],al
   140003c46:	add    BYTE PTR [rax],al
   140003c48:	and    al,0x3f
   140003c4a:	add    BYTE PTR [rax],al
   140003c4c:	add    BYTE PTR [rax],al
   140003c4e:	add    BYTE PTR [rax],al
   140003c50:	sbb    bh,BYTE PTR [rdi]
   140003c52:	add    BYTE PTR [rax],al
   140003c54:	add    BYTE PTR [rax],al
   140003c56:	add    BYTE PTR [rax],al
   140003c58:	add    bh,BYTE PTR [rdi]
   140003c5a:	add    BYTE PTR [rax],al
   140003c5c:	add    BYTE PTR [rax],al
   140003c5e:	add    BYTE PTR [rax],al
   140003c60:	rex.RX (bad) 
   140003c62:	add    BYTE PTR [rax],al
   140003c64:	add    BYTE PTR [rax],al
   140003c66:	add    BYTE PTR [rax],al
   140003c68:	idiv   BYTE PTR [rsi]
   140003c6a:	add    BYTE PTR [rax],al
   140003c6c:	add    BYTE PTR [rax],al
   140003c6e:	add    BYTE PTR [rax],al
   140003c70:	loop   0x140003cb0
   140003c72:	add    BYTE PTR [rax],al
   140003c74:	add    BYTE PTR [rax],al
   140003c76:	add    BYTE PTR [rax],al
   140003c78:	fdivr  DWORD PTR [rsi]
   140003c7a:	add    BYTE PTR [rax],al
   140003c7c:	add    BYTE PTR [rax],al
   140003c7e:	add    BYTE PTR [rax],al
   140003c80:	sar    BYTE PTR [rsi],1
   140003c82:	add    BYTE PTR [rax],al
   140003c84:	add    BYTE PTR [rax],al
   140003c86:	add    BYTE PTR [rax],al
   140003c88:	enter  0x3e,0x0
   140003c8c:	add    BYTE PTR [rax],al
   140003c8e:	add    BYTE PTR [rax],al
   140003c90:	mov    dh,0x3e
   140003c92:	add    BYTE PTR [rax],al
   140003c94:	add    BYTE PTR [rax],al
   140003c96:	add    BYTE PTR [rax],al
   140003c98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003c99:	add    BYTE PTR ds:[rax],al
   140003c9c:	add    BYTE PTR [rax],al
   140003c9e:	add    BYTE PTR [rax],al
   140003ca0:	xchg   esi,eax
   140003ca1:	add    BYTE PTR ds:[rax],al
   140003ca4:	add    BYTE PTR [rax],al
   140003ca6:	add    BYTE PTR [rax],al
   140003ca8:	jp     0x140003ce8
   140003caa:	add    BYTE PTR [rax],al
   140003cac:	add    BYTE PTR [rax],al
   140003cae:	add    BYTE PTR [rax],al
   140003cb0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003cb1:	rex.X add BYTE PTR [rax],al
	...
   140003cc0:	clc    
   140003cc1:	add    BYTE PTR [r8],al
	...
   140003cd0:	cmp    al,BYTE PTR [rdx+0x0]
   140003cd3:	add    BYTE PTR [rax],al
   140003cd5:	add    BYTE PTR [rax],al
   140003cd7:	add    BYTE PTR [rdx+rax*2],bl
	...
   140003ce6:	add    BYTE PTR [rax],al
   140003ce8:	adc    eax,DWORD PTR [rdx]
   140003cea:	rex.WRXB jo 0x140003d52
   140003ced:	outs   dx,BYTE PTR ds:[rsi]
   140003cee:	push   rax
   140003cef:	jb     0x140003d60
   140003cf1:	movsxd esp,DWORD PTR [rbp+0x73]
   140003cf4:	jae    0x140003d4a
   140003cf6:	outs   dx,DWORD PTR ds:[rsi]
   140003cf7:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140003cfb:	add    BYTE PTR [rdi+0x1],ch
   140003cfe:	rex.RXB
   140003cff:	gs je  0x140003d56
   140003d02:	outs   dx,DWORD PTR ds:[rsi]
   140003d03:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   140003d07:	outs   dx,BYTE PTR ds:[rsi]
   140003d08:	outs   dx,WORD PTR ds:[rsi]
   140003d0a:	jb     0x140003d79
   140003d0c:	(bad)  
   140003d0d:	je     0x140003d78
   140003d0f:	outs   dx,DWORD PTR ds:[rsi]
   140003d10:	outs   dx,BYTE PTR ds:[rsi]
   140003d11:	add    dh,ch
   140003d13:	add    BYTE PTR [rbp+rsi*2+0x70],al
   140003d17:	ins    BYTE PTR es:[rdi],dx
   140003d18:	imul   esp,DWORD PTR [rbx+0x61],0x6f546574
   140003d1f:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140003d23:	add    BYTE PTR [rdi+0x0],bl
   140003d26:	rex.XB push 0x546b6365
   140003d2c:	outs   dx,DWORD PTR ds:[rsi]
   140003d2d:	imul   esp,DWORD PTR [rbp+0x6e],0x4d
   140003d31:	gs ins DWORD PTR es:[rdi],dx
   140003d33:	(bad)  
   140003d34:	gs jb  0x140003daa
   140003d37:	push   0x7069
   140003d3c:	xchg   edx,eax
   140003d3d:	add    BYTE PTR [rbx+0x72],al
   140003d40:	gs (bad) 
   140003d42:	je     0x140003da9
   140003d44:	push   rdi
   140003d45:	gs ins BYTE PTR es:[rdi],dx
   140003d47:	ins    BYTE PTR es:[rdi],dx
   140003d48:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   140003d4a:	outs   dx,DWORD PTR ds:[rsi]
   140003d4b:	ja     0x140003dbb
   140003d4d:	push   rbx
   140003d4e:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x41564441
   140003d56:	push   rax
   140003d57:	xor    rsi,QWORD PTR [r10]
   140003d5a:	cs fs ins BYTE PTR es:[rdi],dx
   140003d5d:	ins    BYTE PTR es:[rdi],dx
   140003d5e:	add    BYTE PTR [rax],al
   140003d60:	rol    BYTE PTR [rcx],1
   140003d62:	rex.RXB
   140003d63:	gs je  0x140003da9
   140003d66:	outs   dx,DWORD PTR ds:[rsi]
   140003d67:	ins    DWORD PTR es:[rdi],dx
   140003d68:	ins    DWORD PTR es:[rdi],dx
   140003d69:	(bad)  
   140003d6a:	outs   dx,BYTE PTR ds:[rsi]
   140003d6b:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1a40057
   140003d74:	rex.RX jb 0x140003ddc
   140003d77:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   140003d80:	adc    BYTE PTR [rdx],al
   140003d82:	rex.RXB
   140003d83:	gs je  0x140003dc9
   140003d86:	jne    0x140003dfa
   140003d88:	jb     0x140003def
   140003d8a:	outs   dx,BYTE PTR ds:[rsi]
   140003d8b:	je     0x140003ddd
   140003d8d:	jb     0x140003dfe
   140003d8f:	movsxd esp,DWORD PTR [rbp+0x73]
   140003d92:	jae    0x140003d94
   140003d94:	scas   eax,DWORD PTR es:[rdi]
   140003d95:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140003d99:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140003da2:	add    BYTE PTR [rax],al
   140003da4:	nop
   140003da5:	add    BYTE PTR [rbx+0x6f],al
   140003da8:	ins    DWORD PTR es:[rdi],dx
   140003da9:	jo     0x140003e0c
   140003dab:	jb     0x140003e12
   140003dad:	push   rbx
   140003dae:	je     0x140003e22
   140003db0:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   140003db7:	outs   dx,BYTE PTR ds:[rsi]
   140003db8:	(bad)  
   140003db9:	ins    BYTE PTR es:[rdi],dx
   140003dba:	add    BYTE PTR [rax],al
   140003dbc:	push   rdi
   140003dbd:	add    al,BYTE PTR [rdi+0x65]
   140003dc0:	je     0x140003e0e
   140003dc2:	(bad)  
   140003dc3:	jae    0x140003e39
   140003dc5:	rex.RB jb 0x140003e3a
   140003dc8:	outs   dx,DWORD PTR ds:[rsi]
   140003dc9:	jb     0x140003dcb
   140003dcb:	add    BYTE PTR [rbp+0x0],bh
   140003dce:	rex.XB ins BYTE PTR es:[rdi],dx
   140003dd0:	outs   dx,DWORD PTR ds:[rsi]
   140003dd1:	jae    0x140003e38
   140003dd3:	rex.W (bad) 
   140003dd5:	outs   dx,BYTE PTR ds:[rsi]
   140003dd6:	fs ins BYTE PTR es:[rdi],dx
   140003dd8:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   140003ddf:	(bad)  
   140003de0:	ins    BYTE PTR es:[rdi],dx
   140003de1:	rex.RX jb 0x140003e49
   140003de4:	add    BYTE PTR gs:[rbx+0x45],cl
   140003de8:	push   rdx
   140003de9:	rex.WRX
   140003dea:	rex.RB
   140003deb:	xor    r14,QWORD PTR [rdx]
   140003dee:	cs fs ins BYTE PTR es:[rdi],dx
   140003df1:	ins    BYTE PTR es:[rdi],dx
   140003df2:	add    BYTE PTR [rax],al
   140003df4:	jp     0x140003df7
   140003df6:	rex.RXB
   140003df7:	gs je  0x140003e47
   140003dfa:	outs   dx,DWORD PTR ds:[rsi]
   140003dfb:	outs   dx,BYTE PTR ds:[rsi]
   140003dfc:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6f666e49
   140003e04:	push   rdi
   140003e05:	add    BYTE PTR [rbx+0x2],al
   140003e08:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140003e0a:	(bad)  
   140003e0b:	fs push rbx
   140003e0d:	je     0x140003e81
   140003e0f:	imul   ebp,DWORD PTR [rsi+0x67],0x1370057
   140003e16:	rex.RXB
   140003e17:	gs je  0x140003e5d
   140003e1a:	jne    0x140003e8e
   140003e1c:	jae    0x140003e8d
   140003e1e:	jb     0x140003e70
   140003e20:	outs   dx,DWORD PTR ds:[rsi]
   140003e21:	jae    0x140003e23
   140003e23:	add    BYTE PTR [rbx],bh
   140003e25:	add    edx,DWORD PTR [rbx+0x65]
   140003e28:	je     0x140003e81
   140003e2a:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   140003e31:	jae    0x140003e33
   140003e33:	add    dh,bh
   140003e35:	add    dl,BYTE PTR [rbx+0x65]
   140003e38:	je     0x140003e80
   140003e3a:	outs   dx,DWORD PTR ds:[rsi]
   140003e3b:	jb     0x140003ea2
   140003e3d:	addr32 jb 0x140003eaf
   140003e40:	jne    0x140003eb0
   140003e42:	fs push rdi
   140003e44:	imul   ebp,DWORD PTR [rsi+0x64],0x6300776f
   140003e4b:	add    cl,BYTE PTR [rbp+0x6f]
   140003e4e:	outs   dx,BYTE PTR ds:[rsi]
   140003e4f:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6d6f7246
   140003e57:	push   rax
   140003e58:	outs   dx,DWORD PTR ds:[rsi]
   140003e59:	imul   ebp,DWORD PTR [rsi+0x74],0xae0000
   140003e60:	rex.R
   140003e61:	gs jae 0x140003ed8
   140003e64:	jb     0x140003ed5
   140003e66:	jns    0x140003ebf
   140003e68:	imul   ebp,DWORD PTR [rsi+0x64],0x5500776f
   140003e6f:	push   rbx
   140003e70:	rex.RB push r10
   140003e72:	xor    esi,DWORD PTR [rdx]
   140003e74:	cs fs ins BYTE PTR es:[rdi],dx
   140003e77:	ins    BYTE PTR es:[rdi],dx
   140003e78:	add    BYTE PTR [rax],al
   140003e7a:	imul   eax,DWORD PTR [rbx],0x6e73765f
   140003e80:	ja     0x140003ef2
   140003e82:	jb     0x140003eed
   140003e84:	outs   dx,BYTE PTR ds:[rsi]
   140003e85:	je     0x140003eed
   140003e87:	add    BYTE PTR [rbp+0x0],dl
   140003e8a:	pop    rdi
   140003e8b:	pop    rax
   140003e8c:	movsxd esi,DWORD PTR [rax+0x74]
   140003e8f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140003e98:	pop    rdi
   140003e99:	(bad)  
   140003e9a:	ins    DWORD PTR es:[rdi],dx
   140003e9b:	jae    0x140003f04
   140003e9d:	pop    rdi
   140003e9e:	gs js  0x140003f0a
   140003ea1:	je     0x140003ea3
   140003ea3:	add    BYTE PTR [rbp+0x775f5f00],bl
   140003ea9:	addr32 gs je 0x140003f1a
   140003ead:	(bad)  
   140003eae:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140003eb5:	add    BYTE PTR [rsi+0x735f5f00],cl
   140003ebb:	gs je  0x140003f1d
   140003ebe:	(bad)  
   140003ebf:	jo     0x140003f31
   140003ec1:	pop    rdi
   140003ec2:	je     0x140003f3d
   140003ec4:	jo     0x140003f2b
   140003ec6:	add    BYTE PTR [rax],al
   140003ec8:	xor    al,BYTE PTR [riz*2+0x746978]
   140003ecf:	add    BYTE PTR [rsi],cl
   140003ed1:	add    DWORD PTR [rdi+0x65],ebx
   140003ed4:	js     0x140003f3f
   140003ed6:	je     0x140003ed8
   140003ed8:	rol    DWORD PTR [rax],0x5f
   140003edb:	movsxd esp,DWORD PTR [rbp+0x78]
   140003ede:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140003ee6:	jae    0x140003f4d
   140003ee8:	je     0x140003f5f
   140003eea:	jae    0x140003f51
   140003eec:	jb     0x140003f5b
   140003eee:	(bad)  
   140003eef:	je     0x140003f59
   140003ef1:	gs jb  0x140003f66
   140003ef4:	add    BYTE PTR [rax],al
   140003ef6:	jge    0x140003ef9
   140003ef8:	pop    rdi
   140003ef9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140003f00:	ins    DWORD PTR es:[rdi],dx
   140003f01:	add    BYTE PTR [rdi+0x0],dl
   140003f04:	pop    rdi
   140003f05:	pop    rdi
   140003f06:	rex.XB pop r15
   140003f08:	jae    0x140003f7a
   140003f0a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140003f0e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140003f15:	ins    BYTE PTR es:[rdi],dx
   140003f16:	gs jb  0x140003f19
   140003f19:	add    BYTE PTR [rdx+0x63775f03],al
   140003f1f:	ins    DWORD PTR es:[rdi],dx
   140003f20:	fs ins BYTE PTR es:[rdi],dx
   140003f22:	outs   dx,BYTE PTR ds:[rsi]
   140003f23:	add    BYTE PTR [rdi],ah
   140003f25:	add    DWORD PTR [rdi+0x66],ebx
   140003f28:	ins    DWORD PTR es:[rdi],dx
   140003f29:	outs   dx,DWORD PTR ds:[rsi]
   140003f2a:	fs add BYTE PTR gs:[rax],al
   140003f2e:	rol    BYTE PTR [rax],cl
   140003f30:	pop    rdi
   140003f31:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140003f34:	ins    DWORD PTR es:[rdi],dx
   140003f35:	outs   dx,DWORD PTR ds:[rsi]
   140003f36:	fs add BYTE PTR gs:[rax],al
   140003f3a:	ins    DWORD PTR es:[rdi],dx
   140003f3b:	jae    0x140003fb3
   140003f3d:	movsxd esi,DWORD PTR [rdx+0x74]
   140003f40:	cs fs ins BYTE PTR es:[rdi],dx
   140003f43:	ins    BYTE PTR es:[rdi],dx
   140003f44:	add    BYTE PTR [rax],al
   140003f46:	(bad)  
   140003f47:	add    BYTE PTR [rdi],bh
   140003f49:	je     0x140003fb0
   140003f4b:	jb     0x140003fba
   140003f4d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140003f54:	pop    rcx
   140003f55:	pop    r8
   140003f57:	pop    rax
   140003f58:	pop    rdx
   140003f59:	add    BYTE PTR [rbx+0x48],dl
   140003f5c:	rex.WR push rdi
   140003f5e:	push   r8
   140003f60:	rex.WB
   140003f61:	cs fs ins BYTE PTR es:[rdi],dx
   140003f64:	ins    BYTE PTR es:[rdi],dx
   140003f65:	add    BYTE PTR [rdx+0x0],al
   140003f68:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140003f6a:	push   rbp
   140003f6b:	outs   dx,BYTE PTR ds:[rsi]
   140003f6c:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140003f73:	imul   edi,DWORD PTR [rdx+0x65],0x500000
   140003f7a:	push   rbx
   140003f7b:	je     0x140003fef
   140003f7d:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   140003f84:	rex.RXB push r13
   140003f86:	rex.WB
   140003f87:	xor    r8b,BYTE PTR [rax]
   140003f8a:	add    BYTE PTR es:[rbx+0x6f],al
   140003f8e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003f90:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140003f98:	rex.RB js 0x140003f9b
   140003f9b:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56c92a1
   140003fa1:	gs jo  0x140003fa4
   140003fa4:	and    BYTE PTR [rax],al
   140003fa6:	rex.RXB
   140003fa7:	gs je  0x140003ffd
   140003faa:	je     0x14000400d
   140003fac:	jb     0x140004022
   140003fae:	jne    0x140004020
   140003fb0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003fb2:	outs   dx,WORD PTR ds:[rsi]
   140003fb4:	push   rdi
   140003fb5:	add    BYTE PTR [rdi],cl
   140003fb7:	add    BYTE PTR [rbx+0x65],dl
   140003fba:	je     0x140004011
   140003fbc:	outs   dx,BYTE PTR ds:[rsi]
   140003fbd:	push   0x6c646e61
   140003fc2:	gs fs rex.RB js 0x14000402a
   140003fc7:	gs jo  0x14000403e
   140003fca:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003fd1:	gs jb  0x140003fd4
   140003fd4:	adc    eax,DWORD PTR [rax]
   140003fd6:	rex.RXB
   140003fd7:	gs je  0x140004027
   140003fda:	outs   dx,DWORD PTR ds:[rsi]
   140003fdb:	fs jne 0x14000404a
   140003fde:	gs rex.W (bad) 
   140003fe1:	outs   dx,BYTE PTR ds:[rsi]
   140003fe2:	fs ins BYTE PTR es:[rdi],dx
   140003fe4:	gs push rdi
   140003fe6:	add    BYTE PTR [rax],al
   140003fe8:	add    BYTE PTR [rax],al
   140003fea:	push   rcx
   140003feb:	jne    0x140004052
   140003fed:	jb     0x140004068
   140003fef:	push   rax
   140003ff0:	gs jb  0x140004059
   140003ff3:	outs   dx,DWORD PTR ds:[rsi]
   140003ff4:	jb     0x140004063
   140003ff6:	(bad)  
   140003ff7:	outs   dx,BYTE PTR ds:[rsi]
   140003ff8:	movsxd esp,DWORD PTR [rbp+0x43]
   140003ffb:	outs   dx,DWORD PTR ds:[rsi]
   140003ffc:	jne    0x14000406c
   140003ffe:	je     0x140004065
   140004000:	jb     0x140004002
   140004002:	or     eax,0x74654700
   140004007:	rex.XB jne 0x14000407c
   14000400a:	jb     0x140004071
   14000400c:	outs   dx,BYTE PTR ds:[rsi]
   14000400d:	je     0x14000405f
   14000400f:	jb     0x140004080
   140004011:	movsxd esp,DWORD PTR [rbp+0x73]
   140004014:	jae    0x14000405f
   140004016:	add    BYTE PTR fs:[rcx],dl
   140004019:	add    BYTE PTR [rdi+0x65],al
   14000401c:	je     0x140004061
   14000401e:	jne    0x140004092
   140004020:	jb     0x140004087
   140004022:	outs   dx,BYTE PTR ds:[rsi]
   140004023:	je     0x140004079
   140004025:	push   0x64616572
   14000402a:	rex.WB
   14000402b:	add    BYTE PTR fs:[rax],al
   14000402e:	adc    al,0x0
   140004030:	rex.RXB
   140004031:	gs je  0x140004087
   140004034:	jns    0x1400040a9
   140004036:	je     0x14000409d
   140004038:	ins    DWORD PTR es:[rdi],dx
   140004039:	push   rsp
   14000403a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140004041:	ins    BYTE PTR es:[rdi],dx
   140004042:	gs push rsp
   140004044:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000404b:	gs je  0x1400040a2
   14000404e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140004055:	je     0x140004057
   140004057:	add    BYTE PTR [rdx],al
   140004059:	add    BYTE PTR [rdx+0x74],dl
   14000405c:	ins    BYTE PTR es:[rdi],dx
   14000405d:	rex.XB (bad) 
   14000405f:	jo     0x1400040d5
   140004061:	jne    0x1400040d5
   140004063:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140004066:	outs   dx,BYTE PTR ds:[rsi]
   140004067:	je     0x1400040ce
   140004069:	js     0x1400040df
   14000406b:	add    BYTE PTR [rcx],cl
   14000406d:	add    BYTE PTR [rdx+0x74],dl
   140004070:	ins    BYTE PTR es:[rdi],dx
   140004071:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140004073:	outs   dx,DWORD PTR ds:[rsi]
   140004074:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140004078:	jne    0x1400040e8
   14000407a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000407e:	outs   dx,BYTE PTR ds:[rsi]
   14000407f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140004081:	je     0x1400040f5
   140004083:	jns    0x140004085
   140004085:	add    BYTE PTR [rdi],cl
   140004087:	add    BYTE PTR [rdx+0x74],dl
   14000408a:	ins    BYTE PTR es:[rdi],dx
   14000408b:	push   rsi
   14000408c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140004093:	outs   dx,BYTE PTR ds:[rsi]
   140004094:	ja     0x1400040ff
   140004096:	outs   dx,BYTE PTR ds:[rsi]
   140004097:	add    BYTE PTR fs:[rax],al
   14000409a:	adc    DWORD PTR [rax],eax
   14000409c:	push   rbp
   14000409d:	outs   dx,BYTE PTR ds:[rsi]
   14000409e:	push   0x6c646e61
   1400040a3:	gs fs rex.RB js 0x14000410b
   1400040a8:	gs jo  0x14000411f
   1400040ab:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400040b2:	gs jb  0x1400040b5
   1400040b5:	add    BYTE PTR [rbx+0x0],cl
   1400040b8:	push   rsp
   1400040b9:	gs jb  0x140004129
   1400040bc:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400040c3:	outs   dx,DWORD PTR ds:[rsi]
   1400040c4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400040c7:	jae    0x1400040c9
   1400040c9:	add    BYTE PTR [rcx+0x70],ah
   1400040cc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72db443
   1400040d6:	outs   dx,DWORD PTR ds:[rsi]
   1400040d7:	jb     0x14000413e
   1400040d9:	sub    eax,0x2d6d6f63
   1400040de:	ins    BYTE PTR es:[rdi],dx
   1400040df:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e316e16
   1400040e5:	fs ins BYTE PTR es:[rdi],dx
   1400040e7:	ins    BYTE PTR es:[rdi],dx
   1400040e8:	add    BYTE PTR [rax],al
   1400040ea:	(bad)  
   1400040eb:	jo     0x140004156
   1400040ed:	sub    eax,0x772d736d
   1400040f2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400040f9:	sub    eax,0x636e7973
   1400040fe:	push   0x2d316c2d
   140004103:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac646f39
   140004109:	ins    BYTE PTR es:[rdi],dx
   14000410a:	add    BYTE PTR [rax],al
   14000410c:	(bad)  
   14000410d:	jo     0x140004178
   14000410f:	sub    eax,0x772d736d
   140004114:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000411b:	sub    eax,0x636f7270
   140004120:	gs jae 0x140004196
   140004123:	je     0x14000418d
   140004125:	jb     0x14000418c
   140004127:	(bad)  
   140004128:	fs jae 0x140004158
   14000412b:	ins    BYTE PTR es:[rdi],dx
   14000412c:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e326e63
   140004132:	fs ins BYTE PTR es:[rdi],dx
   140004134:	ins    BYTE PTR es:[rdi],dx
   140004135:	add    BYTE PTR [rcx+0x70],ah
   140004138:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72db4af
   140004142:	outs   dx,DWORD PTR ds:[rsi]
   140004143:	jb     0x1400041aa
   140004145:	sub    eax,0x6f727265
   14000414a:	jb     0x1400041b4
   14000414c:	(bad)  
   14000414d:	outs   dx,BYTE PTR ds:[rsi]
   14000414e:	fs ins BYTE PTR es:[rdi],dx
   140004150:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140004157:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac646f8e
   14000415d:	ins    BYTE PTR es:[rdi],dx
   14000415e:	add    BYTE PTR [rax],al
   140004160:	(bad)  
   140004161:	jo     0x1400041cc
   140004163:	sub    eax,0x772d736d
   140004168:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000416f:	sub    eax,0x7262696c
   140004174:	(bad)  
   140004175:	jb     0x1400041f0
   140004177:	ins    BYTE PTR es:[rdi],dx
   140004178:	outs   dx,DWORD PTR ds:[rsi]
   140004179:	(bad)  
   14000417a:	fs gs jb 0x1400041ab
   14000417e:	ins    BYTE PTR es:[rdi],dx
   14000417f:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e306eb7
   140004185:	fs ins BYTE PTR es:[rdi],dx
   140004187:	ins    BYTE PTR es:[rdi],dx
   140004188:	add    BYTE PTR [rax],al
   14000418a:	(bad)  
   14000418b:	jo     0x1400041f6
   14000418d:	sub    eax,0x772d736d
   140004192:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140004199:	sub    eax,0x666f7270
   14000419e:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   1400041a6:	sub    eax,0x6c642e30
   1400041ab:	ins    BYTE PTR es:[rdi],dx
   1400041ac:	add    BYTE PTR [rax],al
   1400041ae:	(bad)  
   1400041af:	jo     0x14000421a
   1400041b1:	sub    eax,0x772d736d
   1400041b6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400041bd:	sub    eax,0x69737973
   1400041c2:	outs   dx,BYTE PTR ds:[rsi]
   1400041c3:	outs   dx,WORD PTR ds:[rsi]
   1400041c5:	sub    eax,0x322d316c
   1400041ca:	sub    eax,0x6c642e31
   1400041cf:	ins    BYTE PTR es:[rdi],dx
   1400041d0:	add    BYTE PTR [rax],al
   1400041d2:	(bad)  
   1400041d3:	jo     0x14000423e
   1400041d5:	sub    eax,0x772d736d
   1400041da:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400041e1:	sub    eax,0x736c7472
   1400041e6:	jne    0x140004258
   1400041e8:	jo     0x140004259
   1400041ea:	jb     0x140004260
   1400041ec:	sub    eax,0x322d316c
   1400041f1:	sub    eax,0x6c642e30
   1400041f6:	ins    BYTE PTR es:[rdi],dx
   1400041f7:	add    BYTE PTR [rcx+rax*1+0x7551744e],bh
   1400041fe:	gs jb  0x14000427a
   140004201:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140004203:	outs   dx,WORD PTR ds:[rsi]
   140004205:	jb     0x140004274
   140004207:	(bad)  
   140004208:	je     0x140004273
   14000420a:	outs   dx,DWORD PTR ds:[rsi]
   14000420b:	outs   dx,BYTE PTR ds:[rsi]
   14000420c:	push   rsp
   14000420d:	outs   dx,DWORD PTR ds:[rsi]
   14000420e:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140004212:	outs   dx,BYTE PTR ds:[rsi]
   140004213:	je     0x140004279
   140004215:	ins    BYTE PTR es:[rdi],dx
   140004216:	ins    BYTE PTR es:[rdi],dx
   140004217:	cs fs ins BYTE PTR es:[rdi],dx
   14000421a:	ins    BYTE PTR es:[rdi],dx
   14000421b:	add    BYTE PTR [rbx],ah
   14000421d:	add    BYTE PTR [rbx+0x6f],al
   140004220:	rex.B ins BYTE PTR es:[rdi],dx
   140004222:	ins    BYTE PTR es:[rdi],dx
   140004223:	outs   dx,DWORD PTR ds:[rsi]
   140004224:	ja     0x140004279
   140004226:	gs je  0x14000426f
   140004229:	outs   dx,DWORD PTR ds:[rsi]
   14000422a:	jb     0x140004291
   14000422c:	addr32 jb 0x14000429e
   14000422f:	jne    0x14000429f
   140004231:	fs push rdi
   140004233:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000423a:	push   rsp
   14000423b:	add    BYTE PTR [rbx+0x6f],al
   14000423e:	rex.RXB
   14000423f:	gs je  0x140004291
   140004242:	(bad)  
   140004243:	push   0x65
   140004245:	movsxd esi,DWORD PTR [rax+rax*1+0x6f]
   140004249:	ins    BYTE PTR es:[rdi],dx
   14000424a:	xor    esi,DWORD PTR gs:[rdx]
   14000424d:	cs fs ins BYTE PTR es:[rdi],dx
   140004250:	ins    BYTE PTR es:[rdi],dx
   140004251:	add    BYTE PTR [rdi],al
   140004253:	add    BYTE PTR [rbx+0x6f],al
   140004256:	ins    DWORD PTR es:[rdi],dx
   140004257:	ins    DWORD PTR es:[rdi],dx
   140004258:	(bad)  
   140004259:	outs   dx,BYTE PTR ds:[rsi]
   14000425a:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   140004263:	addr32 jbe 0x1400042bd
   140004266:	add    BYTE PTR [rax],al
   140004268:	push   rbx
   140004269:	rex.W
   14000426a:	rex.RB
   14000426b:	rex.WR
   14000426c:	xor    r14,QWORD PTR [rdx]
   14000426f:	cs fs ins BYTE PTR es:[rdi],dx
   140004272:	ins    BYTE PTR es:[rdi],dx
   140004273:	add    BYTE PTR [rcx+0x73655204],dh
   140004279:	outs   dx,DWORD PTR ds:[rsi]
   14000427a:	ins    BYTE PTR es:[rdi],dx
   14000427b:	jbe    0x1400042e2
   14000427d:	rex.R
   14000427e:	gs ins BYTE PTR es:[rdi],dx
   140004280:	(bad)  
   140004281:	jns    0x1400042cf
   140004283:	outs   dx,DWORD PTR ds:[rsi]
   140004284:	(bad)  
   140004285:	fs gs fs push r8
   14000428a:	rex.WB add BYTE PTR [r10],al
   14000428d:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140004291:	(bad)  
   140004292:	jns    0x1400042e0
   140004294:	outs   dx,DWORD PTR ds:[rsi]
   140004295:	(bad)  
   140004296:	fs rex.RX (bad) 
   140004299:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   1400042a1:	imul   eax,DWORD PTR [rax],0x0
   1400042a4:	xchg   esi,eax
   1400042a5:	add    al,0x6d
   1400042a7:	gs ins DWORD PTR es:[rdi],dx
   1400042a9:	jae    0x140004310
   1400042ab:	je     0x1400042ad
	...

Disassembly of section .data:

0000000140005000 <.data>:
   140005000:	add    DWORD PTR [rax],eax
   140005002:	add    BYTE PTR [rax],al
   140005004:	add    BYTE PTR [rax],al
   140005006:	add    BYTE PTR [rax],al
   140005008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000500e:	add    BYTE PTR [rax],al
   140005010:	int    0x5d
   140005012:	and    dl,dl
   140005014:	data16 (bad) 
   140005016:	(bad)  
   140005017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140006000 <.pdata>:
   140006000:	or     BYTE PTR [rax],dl
   140006002:	add    BYTE PTR [rax],al
   140006004:	jg     0x140006016
   140006006:	add    BYTE PTR [rax],al
   140006008:	nop
   140006009:	(bad)  
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	mov    BYTE PTR [rax],dl
   14000600e:	add    BYTE PTR [rax],al
   140006010:	(bad)  
   140006011:	adc    DWORD PTR [rax],eax
   140006013:	add    BYTE PTR [rax+0x20000037],ah
   140006019:	adc    DWORD PTR [rax],eax
   14000601b:	add    dl,ch
   14000601d:	adc    DWORD PTR [rax],eax
   14000601f:	add    BYTE PTR [rax-0xfffffc9],dh
   140006025:	adc    DWORD PTR [rax],eax
   140006027:	add    bh,cl
   140006029:	adc    al,BYTE PTR [rax]
   14000602b:	add    BYTE PTR [rdi+rsi*1+0x12d80000],bh
   140006032:	add    BYTE PTR [rax],al
   140006034:	fs (bad) 
   140006036:	add    BYTE PTR [rax],al
   140006038:	(bad)  
   140006039:	(bad)  
   14000603a:	add    BYTE PTR [rax],al
   14000603c:	ins    BYTE PTR es:[rdi],dx
   14000603d:	(bad)  
   14000603e:	add    BYTE PTR [rax],al
   140006040:	(bad)  
   140006041:	(bad)  
   140006042:	add    BYTE PTR [rax],al
   140006044:	clc    
   140006045:	(bad)  
   140006046:	add    BYTE PTR [rax],al
   140006048:	adc    BYTE PTR [rdi],dl
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	rex.B (bad) 
   14000604e:	add    BYTE PTR [rax],al
   140006050:	add    al,0x38
   140006052:	add    BYTE PTR [rax],al
   140006054:	push   rax
   140006055:	(bad)  
   140006056:	add    BYTE PTR [rax],al
   140006058:	(bad)  
   140006059:	sbb    BYTE PTR [rax],al
   14000605b:	add    BYTE PTR [rax+rdi*1],cl
   14000605e:	add    BYTE PTR [rax],al
   140006060:	xor    BYTE PTR [rax],bl
   140006062:	add    BYTE PTR [rax],al
   140006064:	jns    0x14000607e
   140006066:	add    BYTE PTR [rax],al
   140006068:	add    al,0x38
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	sbb    BYTE PTR [rax],0x0
   14000606f:	add    cl,dh
   140006071:	sbb    al,BYTE PTR [rax]
   140006073:	add    BYTE PTR [rax+rdi*1],dl
   140006076:	add    BYTE PTR [rax],al
   140006078:	add    BYTE PTR [rbx],bl
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	adc    bl,BYTE PTR [rbx]
   14000607e:	add    BYTE PTR [rax],al
   140006080:	or     al,0x38
   140006082:	add    BYTE PTR [rax],al
   140006084:	xor    BYTE PTR [rbx],bl
   140006086:	add    BYTE PTR [rax],al
   140006088:	rex.WRX sbb r8,QWORD PTR [rax]
   14000608b:	add    BYTE PTR [rax+0x38],cl
   14000608e:	add    BYTE PTR [rax],al
   140006090:	(bad)  
   140006091:	sbb    eax,DWORD PTR [rax]
   140006093:	add    BYTE PTR [rcx+0xc00001b],bl
   140006099:	cmp    BYTE PTR [rax],al
   14000609b:	add    BYTE PTR [rax-0x47ffffe5],ah
   1400060a1:	sbb    eax,DWORD PTR [rax]
   1400060a3:	add    BYTE PTR [rax+rdi*1],cl
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	int3   
   1400060a9:	sbb    eax,DWORD PTR [rax]
   1400060ab:	add    BYTE PTR [rax],ah
   1400060ad:	sbb    al,0x0
   1400060af:	add    BYTE PTR [rax+rdi*1+0x0],cl
   1400060b3:	add    BYTE PTR [rax],ch
   1400060b5:	sbb    al,0x0
   1400060b7:	add    BYTE PTR [rbp+0x1c],ch
   1400060ba:	add    BYTE PTR [rax],al
   1400060bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400060bd:	cmp    BYTE PTR [rax],al
   1400060bf:	add    al,dl
   1400060c1:	sbb    al,0x0
   1400060c3:	add    BYTE PTR [rip+0x6c00001d],bl        # 0x1ac0060e6
   1400060c9:	cmp    BYTE PTR [rax],al
   1400060cb:	add    BYTE PTR [rbp+rbx*1+0x0],ah
   1400060cf:	add    BYTE PTR [rsi+rbx*1],dh
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	cwde   
   1400060d5:	cmp    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rsi+rbx*1+0x0],bh
   1400060db:	add    BYTE PTR [rax-0x5bffffe2],dh
   1400060e1:	cmp    BYTE PTR [rax],al
   1400060e3:	add    al,al
   1400060e5:	(bad)  
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	xor    DWORD PTR [rax],esp
   1400060ea:	add    BYTE PTR [rax],al
   1400060ec:	lods   al,BYTE PTR ds:[rsi]
   1400060ed:	cmp    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rax-0x8ffffe0],al
   1400060f5:	and    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax+rdi*1+0x210c0000],bh
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	sub    DWORD PTR [rcx],esp
   140006102:	add    BYTE PTR [rax],al
   140006104:	or     al,0x38
   140006106:	add    BYTE PTR [rax],al
   140006108:	xor    BYTE PTR [rcx],ah
   14000610a:	add    BYTE PTR [rax],al
   14000610c:	xchg   ebx,eax
   14000610d:	and    DWORD PTR [rax],eax
   14000610f:	add    BYTE PTR [rax+rdi*1+0x21b00000],ah
   140006116:	add    BYTE PTR [rax],al
   140006118:	mov    dl,0x21
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	mov    eax,0xc6000038
   140006121:	and    DWORD PTR [rax],eax
   140006123:	add    ah,ah
   140006125:	and    DWORD PTR [rax],eax
   140006127:	add    BYTE PTR [rax-0xfffffc8],dl
   14000612d:	and    DWORD PTR [rax],eax
   14000612f:	add    BYTE PTR [rax],dl
   140006131:	and    al,BYTE PTR [rax]
   140006133:	.byte 0x0
   140006134:	nop
   140006135:	cmp    BYTE PTR [rax],al
	...

Disassembly of section .didat:

0000000140007000 <.didat>:
   140007000:	(bad)  
   140007001:	and    BYTE PTR [rax],al
   140007003:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .rsrc:

0000000140008000 <.rsrc>:
	...
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    al,0x0
   140008010:	add    eax,DWORD PTR [rax]
   140008012:	add    BYTE PTR [rax],al
   140008014:	xor    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax+0xe],al
   14000801c:	add    BYTE PTR [rax],0x0
   14000801f:	adc    BYTE PTR [rax],0x0
   140008022:	add    BYTE PTR [rax],al
   140008024:	cwde   
   140008025:	add    BYTE PTR [rax],al
   140008027:	sbb    BYTE PTR [rax],0x0
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	mov    al,0x0
   14000802e:	add    BYTE PTR [rax+0x0],al
	...
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	or     BYTE PTR [rax],al
   140008040:	add    DWORD PTR [rax],eax
   140008042:	add    BYTE PTR [rax],al
   140008044:	enter  0x0,0x80
   140008048:	add    al,BYTE PTR [rax]
   14000804a:	add    BYTE PTR [rax],al
   14000804c:	loopne 0x14000804e
   14000804e:	add    BYTE PTR [rax+0x3],al
   140008054:	clc    
   140008055:	add    BYTE PTR [rax],al
   140008057:	add    BYTE PTR [rax+rax*1],0x0
   14000805b:	add    BYTE PTR [rax],dl
   14000805d:	add    DWORD PTR [rax],eax
   14000805f:	add    BYTE PTR [rip+0x28000000],0x1        # 0x168008066
   140008066:	add    BYTE PTR [rax+0x6],al
   14000806c:	rex add DWORD PTR [rax],eax
   14000806f:	add    BYTE PTR [rdi],0x0
   140008072:	add    BYTE PTR [rax],al
   140008074:	pop    rax
   140008075:	add    DWORD PTR [rax],eax
   140008077:	or     BYTE PTR [rax],0x0
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	jo     0x14000807f
   14000807e:	add    BYTE PTR [rax+0x0],al
	...
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    DWORD PTR [rax],eax
   140008090:	add    BYTE PTR fs:[rax],al
   140008093:	add    BYTE PTR [rax+0x800001],cl
	...
   1400080a5:	add    BYTE PTR [rcx],al
   1400080a7:	add    BYTE PTR [rcx],al
   1400080a9:	add    BYTE PTR [rax],al
   1400080ab:	add    BYTE PTR [rax+0x800001],ah
	...
   1400080bd:	add    BYTE PTR [rcx],al
   1400080bf:	add    BYTE PTR [rcx],al
   1400080c1:	add    BYTE PTR [rax],al
   1400080c3:	add    BYTE PTR [rax+0x800001],bh
	...
   1400080d5:	add    BYTE PTR [rcx],al
   1400080d7:	add    BYTE PTR [rcx],cl
   1400080d9:	add    al,0x0
   1400080db:	add    al,dl
   1400080dd:	add    DWORD PTR [rax],eax
	...
   1400080eb:	add    BYTE PTR [rax],al
   1400080ed:	add    BYTE PTR [rcx],al
   1400080ef:	add    BYTE PTR [rcx],cl
   1400080f1:	add    al,0x0
   1400080f3:	add    al,ah
   1400080f5:	add    DWORD PTR [rax],eax
	...
   140008103:	add    BYTE PTR [rax],al
   140008105:	add    BYTE PTR [rcx],al
   140008107:	add    BYTE PTR [rcx],cl
   140008109:	add    al,0x0
   14000810b:	add    al,dh
   14000810d:	add    DWORD PTR [rax],eax
	...
   14000811b:	add    BYTE PTR [rax],al
   14000811d:	add    BYTE PTR [rcx],al
   14000811f:	add    BYTE PTR [rcx],cl
   140008121:	add    al,0x0
   140008123:	add    BYTE PTR [rax],al
   140008125:	add    al,BYTE PTR [rax]
	...
   140008133:	add    BYTE PTR [rax],al
   140008135:	add    BYTE PTR [rcx],al
   140008137:	add    BYTE PTR [rcx],cl
   140008139:	add    al,0x0
   14000813b:	add    BYTE PTR [rax],dl
   14000813d:	add    al,BYTE PTR [rax]
	...
   14000814b:	add    BYTE PTR [rax],al
   14000814d:	add    BYTE PTR [rcx],al
   14000814f:	add    BYTE PTR [rcx],cl
   140008151:	add    al,0x0
   140008153:	add    BYTE PTR [rax],ah
   140008155:	add    al,BYTE PTR [rax]
	...
   140008163:	add    BYTE PTR [rax],al
   140008165:	add    BYTE PTR [rcx],al
   140008167:	add    BYTE PTR [rcx],cl
   140008169:	add    al,0x0
   14000816b:	add    BYTE PTR [rax],dh
   14000816d:	add    al,BYTE PTR [rax]
	...
   14000817b:	add    BYTE PTR [rax],al
   14000817d:	add    BYTE PTR [rcx],al
   14000817f:	add    BYTE PTR [rcx],cl
   140008181:	add    al,0x0
   140008183:	add    BYTE PTR [rax+0x2],al
	...
   140008196:	add    DWORD PTR [rax],eax
   140008198:	or     DWORD PTR [rax+rax*1],eax
   14000819b:	add    BYTE PTR [rax+0x2],dl
	...
   1400081ae:	add    DWORD PTR [rax],eax
   1400081b0:	or     DWORD PTR [rax+rax*1],eax
   1400081b3:	add    BYTE PTR [rax+0x2],ah
	...
   1400081c6:	add    DWORD PTR [rax],eax
   1400081c8:	or     DWORD PTR [rax+rax*1],eax
   1400081cb:	add    BYTE PTR [rax+0x2],dh
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	push   rax
   1400081d1:	mov    eax,DWORD PTR [rax]
   1400081d3:	add    BYTE PTR [rcx+0x1e],ch
	...
   1400081e1:	stos   BYTE PTR es:[rdi],al
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	sub    BYTE PTR [rdx+0x0],al
	...
   1400081ef:	add    BYTE PTR [rax],ch
   1400081f1:	in     al,dx
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	test   al,0x25
	...
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	rcl    BYTE PTR [rcx],1
   140008202:	add    DWORD PTR [rax],eax
   140008204:	push   0x1a
   140008209:	add    BYTE PTR [rax],al
   14000820b:	add    BYTE PTR [rax],al
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rax],bh
   140008211:	sub    al,0x1
   140008213:	add    BYTE PTR [rax+0x10],ch
   140008219:	add    BYTE PTR [rax],al
   14000821b:	add    BYTE PTR [rax],al
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    al,ah
   140008221:	cmp    al,0x1
   140008223:	add    BYTE PTR [rax+0x9],cl
   140008229:	add    BYTE PTR [rax],al
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rax+0x46],ch
   140008232:	add    DWORD PTR [rax],eax
   140008234:	mov    eax,0x6
   140008239:	add    BYTE PTR [rax],al
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rax],ah
   140008241:	add    QWORD PTR [r8],r8
   140008244:	push   0x4
   140008249:	add    BYTE PTR [rax],al
   14000824b:	add    BYTE PTR [rax],al
   14000824d:	add    BYTE PTR [rax],al
   14000824f:	add    BYTE PTR [rax+0x76000151],cl
	...
   14000825d:	add    BYTE PTR [rax],al
   14000825f:	add    BYTE PTR [rax-0x79],ch
   140008262:	add    BYTE PTR [rax],al
   140008264:	in     al,0x3
	...
   14000826e:	add    BYTE PTR [rax],al
   140008270:	add    BYTE PTR [rdx+0x4e80000],0x0
	...
   14000827f:	add    BYTE PTR [rdi+rdi*1],bh
   140008282:	js     0x1400082f1
   140008284:	ins    BYTE PTR es:[rdi],dx
   140008285:	and    BYTE PTR [rsi+0x65],dh
   140008288:	jb     0x1400082fd
   14000828a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140008291:	xor    BYTE PTR [rdx],ah
   140008293:	and    BYTE PTR [rbp+0x6e],ah
   140008296:	movsxd ebp,DWORD PTR [rdi+0x64]
   140008299:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400082a0:	rex.RX sub eax,0x73202238
   1400082a6:	je     0x140008309
   1400082a8:	outs   dx,BYTE PTR ds:[rsi]
   1400082a9:	fs (bad) 
   1400082ab:	ins    BYTE PTR es:[rdi],dx
   1400082ac:	outs   dx,DWORD PTR ds:[rsi]
   1400082ad:	outs   dx,BYTE PTR ds:[rsi]
   1400082ae:	gs cmp eax,0x73657922
   1400082b4:	and    bh,BYTE PTR [rdi]
   1400082b6:	ds or  eax,0x2d213c0a
   1400082bc:	sub    eax,0x706f4320
   1400082c1:	jns    0x140008335
   1400082c3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400082ca:	sub    DWORD PTR [rax],esp
   1400082cc:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400082d4:	je     0x1400082f6
   1400082d6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400082d8:	jb     0x14000834a
   1400082da:	outs   dx,DWORD PTR ds:[rsi]
   1400082db:	jb     0x14000833e
   1400082dd:	je     0x140008348
   1400082df:	outs   dx,DWORD PTR ds:[rsi]
   1400082e0:	outs   dx,BYTE PTR ds:[rsi]
   1400082e1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dc114
   1400082e7:	cmp    al,0x61
   1400082e9:	jae    0x14000835e
   1400082eb:	gs ins DWORD PTR es:[rdi],dx
   1400082ed:	(bad)  
   1400082ee:	ins    BYTE PTR es:[rdi],dx
   1400082ef:	jns    0x140008311
   1400082f1:	js     0x140008360
   1400082f3:	ins    BYTE PTR es:[rdi],dx
   1400082f4:	outs   dx,BYTE PTR ds:[rsi]
   1400082f5:	jae    0x140008334
   1400082f7:	and    dh,BYTE PTR [rbp+0x72]
   1400082fa:	outs   dx,BYTE PTR ds:[rsi]
   1400082fb:	cmp    dh,BYTE PTR [rbx+0x63]
   1400082fe:	push   0x73616d65
   140008303:	sub    eax,0x7263696d
   140008308:	outs   dx,DWORD PTR ds:[rsi]
   140008309:	jae    0x14000837a
   14000830b:	data16 je 0x14000833b
   14000830e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008311:	cmp    ah,BYTE PTR [rcx+0x73]
   140008314:	ins    DWORD PTR es:[rdi],dx
   140008315:	cs jbe 0x140008349
   140008318:	and    ah,BYTE PTR [rax]
   14000831a:	ins    DWORD PTR es:[rdi],dx
   14000831b:	(bad)  
   14000831c:	outs   dx,BYTE PTR ds:[rsi]
   14000831d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140008324:	jb     0x140008399
   140008326:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000832d:	xor    BYTE PTR [rdx],ah
   14000832f:	ds or  eax,0x3c20200a
   140008335:	(bad)  
   140008336:	jae    0x1400083ab
   140008338:	gs ins DWORD PTR es:[rdi],dx
   14000833a:	(bad)  
   14000833b:	ins    BYTE PTR es:[rdi],dx
   14000833c:	jns    0x140008387
   14000833e:	fs outs dx,BYTE PTR gs:[rsi]
   140008341:	je     0x1400083ac
   140008343:	je     0x1400083be
   140008345:	or     eax,0x2020200a
   14000834a:	and    BYTE PTR [rsi+0x65],dh
   14000834d:	jb     0x1400083c2
   14000834f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140008356:	xor    DWORD PTR [rsi],ebp
   140008358:	xor    BYTE PTR [rsi],ch
   14000835a:	xor    BYTE PTR [rdx],ah
   14000835c:	or     eax,0x2020200a
   140008361:	and    BYTE PTR [rax+0x72],dh
   140008364:	outs   dx,DWORD PTR ds:[rsi]
   140008365:	movsxd esp,DWORD PTR [rbp+0x73]
   140008368:	jae    0x1400083d9
   14000836a:	jb     0x1400083ad
   14000836c:	jb     0x1400083d1
   14000836e:	push   0x63657469
   140008373:	je     0x1400083ea
   140008375:	jb     0x1400083dc
   140008377:	cmp    eax,0x646d6122
   14000837c:	ss xor al,0x22
   14000837f:	or     eax,0x2020200a
   140008384:	and    BYTE PTR [rsi+0x61],ch
   140008387:	ins    DWORD PTR es:[rdi],dx
   140008388:	gs cmp eax,0x63694d22
   14000838e:	jb     0x1400083ff
   140008390:	jae    0x140008401
   140008392:	data16 je 0x1400083c3
   140008395:	push   rbp
   140008396:	jae    0x1400083fd
   140008398:	jb     0x1400083db
   14000839a:	movsxd esp,DWORD PTR [rbx+0x6f]
   14000839d:	jne    0x14000840d
   14000839f:	je     0x1400083e4
   1400083a1:	outs   dx,DWORD PTR ds:[rsi]
   1400083a2:	outs   dx,BYTE PTR ds:[rsi]
   1400083a3:	je     0x140008417
   1400083a5:	outs   dx,DWORD PTR ds:[rsi]
   1400083a6:	ins    BYTE PTR es:[rdi],dx
   1400083a7:	push   rbx
   1400083a8:	gs je  0x14000841f
   1400083ab:	imul   ebp,DWORD PTR [rsi+0x67],0x52502e73
   1400083b2:	rex.WRXB
   1400083b3:	rex.RXB push r10
   1400083b5:	rex.B
   1400083b6:	rex.WRB and r9b,BYTE PTR [rip+0x2020200a]        # 0x16020a3c7
   1400083bd:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400083c1:	gs cmp eax,0x6e697722
   1400083c7:	xor    esi,DWORD PTR [rdx]
   1400083c9:	and    cl,BYTE PTR [rip+0x2f20200a]        # 0x16f20a3d9
   1400083cf:	ds or  eax,0x3c20200a
   1400083d5:	fs gs jae 0x14000843c
   1400083d9:	jb     0x140008444
   1400083db:	jo     0x140008451
   1400083dd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6573553e
   1400083e4:	jb     0x140008406
   1400083e6:	movsxd esp,DWORD PTR [r11+0x6f]
   1400083ea:	jne    0x14000845a
   1400083ec:	je     0x14000840e
   1400083ee:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400083f0:	outs   dx,BYTE PTR ds:[rsi]
   1400083f1:	je     0x140008465
   1400083f3:	outs   dx,DWORD PTR ds:[rsi]
   1400083f4:	ins    BYTE PTR es:[rdi],dx
   1400083f5:	and    BYTE PTR [rbx+0x65],dl
   1400083f8:	je     0x14000846e
   1400083fa:	imul   ebp,DWORD PTR [rsi+0x67],0x642f3c73
   140008401:	gs jae 0x140008467
   140008404:	jb     0x14000846f
   140008406:	jo     0x14000847c
   140008408:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14000840f:	and    BYTE PTR [rsp+riz*2],bh
   140008412:	gs jo  0x14000847a
   140008415:	outs   dx,BYTE PTR ds:[rsi]
   140008416:	fs outs dx,BYTE PTR gs:[rsi]
   140008419:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000841c:	or     eax,0x2020200a
   140008421:	and    BYTE PTR [rsp+riz*2],bh
   140008424:	gs jo  0x14000848c
   140008427:	outs   dx,BYTE PTR ds:[rsi]
   140008428:	fs outs dx,BYTE PTR gs:[rsi]
   14000842b:	je     0x14000846e
   14000842d:	jae    0x1400084a2
   14000842f:	gs ins DWORD PTR es:[rdi],dx
   140008431:	(bad)  
   140008432:	ins    BYTE PTR es:[rdi],dx
   140008433:	jns    0x140008473
   140008435:	or     eax,0x2020200a
   14000843a:	and    BYTE PTR [rax],ah
   14000843c:	and    BYTE PTR [rax],ah
   14000843e:	and    BYTE PTR [rcx+riz*2],bh
   140008441:	jae    0x1400084b6
   140008443:	gs ins DWORD PTR es:[rdi],dx
   140008445:	(bad)  
   140008446:	ins    BYTE PTR es:[rdi],dx
   140008447:	jns    0x140008492
   140008449:	fs outs dx,BYTE PTR gs:[rsi]
   14000844c:	je     0x1400084b7
   14000844e:	je     0x1400084c9
   140008450:	or     eax,0x2020200a
   140008455:	and    BYTE PTR [rax],ah
   140008457:	and    BYTE PTR [rax],ah
   140008459:	and    BYTE PTR [rax],ah
   14000845b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000845f:	gs cmp eax,0x6e697722
   140008465:	xor    esi,DWORD PTR [rdx]
   140008467:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020a477
   14000846d:	and    BYTE PTR [rax],ah
   14000846f:	and    BYTE PTR [rax],ah
   140008471:	and    BYTE PTR [rax],ah
   140008473:	and    BYTE PTR [rsi+0x61],ch
   140008476:	ins    DWORD PTR es:[rdi],dx
   140008477:	gs cmp eax,0x63694d22
   14000847d:	jb     0x1400084ee
   14000847f:	jae    0x1400084f0
   140008481:	data16 je 0x1400084b2
   140008484:	push   rdi
   140008485:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000848c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000848e:	ins    DWORD PTR es:[rdi],dx
   14000848f:	ins    DWORD PTR es:[rdi],dx
   140008490:	outs   dx,DWORD PTR ds:[rsi]
   140008491:	outs   dx,BYTE PTR ds:[rsi]
   140008492:	sub    eax,0x746e6f43
   140008497:	jb     0x140008508
   140008499:	ins    BYTE PTR es:[rdi],dx
   14000849a:	jae    0x1400084be
   14000849c:	or     eax,0x2020200a
   1400084a1:	and    BYTE PTR [rax],ah
   1400084a3:	and    BYTE PTR [rax],ah
   1400084a5:	and    BYTE PTR [rax],ah
   1400084a7:	and    BYTE PTR [rsi+0x65],dh
   1400084aa:	jb     0x14000851f
   1400084ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   1400084b3:	xor    BYTE PTR [rsi],ch
   1400084b5:	xor    BYTE PTR [rsi],ch
   1400084b7:	xor    BYTE PTR [rdx],ah
   1400084b9:	or     eax,0x2020200a
   1400084be:	and    BYTE PTR [rax],ah
   1400084c0:	and    BYTE PTR [rax],ah
   1400084c2:	and    BYTE PTR [rax],ah
   1400084c4:	and    BYTE PTR [rax+0x72],dh
   1400084c7:	outs   dx,DWORD PTR ds:[rsi]
   1400084c8:	movsxd esp,DWORD PTR [rbp+0x73]
   1400084cb:	jae    0x14000853c
   1400084cd:	jb     0x140008510
   1400084cf:	jb     0x140008534
   1400084d1:	push   0x63657469
   1400084d6:	je     0x14000854d
   1400084d8:	jb     0x14000853f
   1400084da:	cmp    eax,0x646d6122
   1400084df:	ss xor al,0x22
   1400084e2:	or     eax,0x2020200a
   1400084e7:	and    BYTE PTR [rax],ah
   1400084e9:	and    BYTE PTR [rax],ah
   1400084eb:	and    BYTE PTR [rax],ah
   1400084ed:	and    BYTE PTR [rax+0x75],dh
   1400084f0:	(bad)  
   1400084f1:	ins    BYTE PTR es:[rdi],dx
   1400084f2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   1400084f9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   1400084fd:	and    dh,BYTE PTR [rsi]
   1400084ff:	xor    eax,0x36623539
   140008504:	xor    al,0x31
   140008506:	xor    al,0x34
   140008508:	movsxd esp,DWORD PTR [rbx+0x66]
   14000850b:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000850f:	or     eax,0x2020200a
   140008514:	and    BYTE PTR [rax],ah
   140008516:	and    BYTE PTR [rax],ah
   140008518:	and    BYTE PTR [rax],ah
   14000851a:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000851e:	addr32 jne 0x140008582
   140008521:	addr32 gs cmp eax,0xd222a22
   140008528:	or     ah,BYTE PTR [rax]
   14000852a:	and    BYTE PTR [rax],ah
   14000852c:	and    BYTE PTR [rax],ah
   14000852e:	and    BYTE PTR [rax],ah
   140008530:	and    BYTE PTR [rdi],ch
   140008532:	ds or  eax,0x2020200a
   140008538:	and    BYTE PTR [rdi+rbp*1],bh
   14000853b:	fs gs jo 0x1400085a4
   14000853f:	outs   dx,BYTE PTR ds:[rsi]
   140008540:	fs outs dx,BYTE PTR gs:[rsi]
   140008543:	je     0x140008586
   140008545:	jae    0x1400085ba
   140008547:	gs ins DWORD PTR es:[rdi],dx
   140008549:	(bad)  
   14000854a:	ins    BYTE PTR es:[rdi],dx
   14000854b:	jns    0x14000858b
   14000854d:	or     eax,0x3c20200a
   140008552:	(bad)  
   140008553:	fs gs jo 0x1400085bc
   140008557:	outs   dx,BYTE PTR ds:[rsi]
   140008558:	fs outs dx,BYTE PTR gs:[rsi]
   14000855b:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000855e:	or     eax,0x3c20200a
   140008563:	je     0x1400085d7
   140008565:	jne    0x1400085da
   140008567:	je     0x1400085b2
   140008569:	outs   dx,BYTE PTR ds:[rsi]
   14000856a:	outs   dx,WORD PTR ds:[rsi]
   14000856c:	and    BYTE PTR [rax+0x6d],bh
   14000856f:	ins    BYTE PTR es:[rdi],dx
   140008570:	outs   dx,BYTE PTR ds:[rsi]
   140008571:	jae    0x1400085b0
   140008573:	and    dh,BYTE PTR [rbp+0x72]
   140008576:	outs   dx,BYTE PTR ds:[rsi]
   140008577:	cmp    dh,BYTE PTR [rbx+0x63]
   14000857a:	push   0x73616d65
   14000857f:	sub    eax,0x7263696d
   140008584:	outs   dx,DWORD PTR ds:[rsi]
   140008585:	jae    0x1400085f6
   140008587:	data16 je 0x1400085b7
   14000858a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000858d:	cmp    ah,BYTE PTR [rcx+0x73]
   140008590:	ins    DWORD PTR es:[rdi],dx
   140008591:	cs jbe 0x1400085c7
   140008594:	and    bh,BYTE PTR [rsi]
   140008596:	or     eax,0x2020200a
   14000859b:	and    BYTE PTR [rbx+rsi*2],bh
   14000859e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400085a2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400085aa:	and    BYTE PTR [rax],ah
   1400085ac:	and    BYTE PTR [rax],ah
   1400085ae:	and    BYTE PTR [rax],ah
   1400085b0:	cmp    al,0x72
   1400085b2:	gs jno 0x14000862a
   1400085b5:	gs jae 0x14000862c
   1400085b8:	gs fs push rax
   1400085bb:	jb     0x140008626
   1400085bd:	jbe    0x140008628
   1400085bf:	ins    BYTE PTR es:[rdi],dx
   1400085c0:	gs addr32 gs jae 0x140008603
   1400085c5:	or     eax,0x2020200a
   1400085ca:	and    BYTE PTR [rax],ah
   1400085cc:	and    BYTE PTR [rax],ah
   1400085ce:	and    BYTE PTR [rax],ah
   1400085d0:	and    BYTE PTR [rax],ah
   1400085d2:	and    BYTE PTR [rdx+rsi*2],bh
   1400085d5:	gs jno 0x14000864d
   1400085d8:	gs jae 0x14000864f
   1400085db:	gs fs rex.RB js 0x140008645
   1400085e0:	movsxd esi,DWORD PTR [rbp+0x74]
   1400085e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400085ea:	ins    BYTE PTR es:[rdi],dx
   1400085eb:	or     eax,0x2020200a
   1400085f0:	and    BYTE PTR [rax],ah
   1400085f2:	and    BYTE PTR [rax],ah
   1400085f4:	and    BYTE PTR [rax],ah
   1400085f6:	and    BYTE PTR [rax],ah
   1400085f8:	and    BYTE PTR [rax],ah
   1400085fa:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400085fe:	gs ins BYTE PTR es:[rdi],dx
   140008600:	cmp    eax,0x49736122
   140008605:	outs   dx,BYTE PTR ds:[rsi]
   140008606:	jbe    0x140008677
   140008608:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000860c:	or     eax,0x2020200a
   140008611:	and    BYTE PTR [rax],ah
   140008613:	and    BYTE PTR [rax],ah
   140008615:	and    BYTE PTR [rax],ah
   140008617:	and    BYTE PTR [rax],ah
   140008619:	and    BYTE PTR [rax],ah
   14000861b:	and    BYTE PTR [rbp+0x69],dh
   14000861e:	movsxd esp,DWORD PTR [r11+0x65]
   140008622:	jae    0x140008697
   140008624:	cmp    eax,0x6c616622
   140008629:	jae    0x140008690
   14000862b:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020a63b
   140008631:	and    BYTE PTR [rax],ah
   140008633:	and    BYTE PTR [rax],ah
   140008635:	and    BYTE PTR [rax],ah
   140008637:	and    BYTE PTR [rax],ah
   140008639:	and    BYTE PTR [rdi],ch
   14000863b:	ds or  eax,0x2020200a
   140008641:	and    BYTE PTR [rax],ah
   140008643:	and    BYTE PTR [rax],ah
   140008645:	and    BYTE PTR [rdi+rbp*1],bh
   140008648:	jb     0x1400086af
   14000864a:	jno    0x1400086c1
   14000864c:	gs jae 0x1400086c3
   14000864f:	gs fs push rax
   140008652:	jb     0x1400086bd
   140008654:	jbe    0x1400086bf
   140008656:	ins    BYTE PTR es:[rdi],dx
   140008657:	gs addr32 gs jae 0x14000869a
   14000865c:	or     eax,0x2020200a
   140008661:	and    BYTE PTR [rdi+rbp*1],bh
   140008664:	jae    0x1400086cb
   140008666:	movsxd esi,DWORD PTR [rbp+0x72]
   140008669:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140008671:	cmp    al,0x2f
   140008673:	je     0x1400086e7
   140008675:	jne    0x1400086ea
   140008677:	je     0x1400086c2
   140008679:	outs   dx,BYTE PTR ds:[rsi]
   14000867a:	outs   dx,WORD PTR ds:[rsi]
   14000867c:	ds or  eax,0x3c20200a
   140008682:	(bad)  
   140008683:	jo     0x1400086f5
   140008685:	ins    BYTE PTR es:[rdi],dx
   140008686:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000868d:	and    BYTE PTR [rax+0x6d],bh
   140008690:	ins    BYTE PTR es:[rdi],dx
   140008691:	outs   dx,BYTE PTR ds:[rsi]
   140008692:	jae    0x1400086d1
   140008694:	and    dh,BYTE PTR [rbp+0x72]
   140008697:	outs   dx,BYTE PTR ds:[rsi]
   140008698:	cmp    dh,BYTE PTR [rbx+0x63]
   14000869b:	push   0x73616d65
   1400086a0:	sub    eax,0x7263696d
   1400086a5:	outs   dx,DWORD PTR ds:[rsi]
   1400086a6:	jae    0x140008717
   1400086a8:	data16 je 0x1400086d8
   1400086ab:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400086ae:	cmp    ah,BYTE PTR [rcx+0x73]
   1400086b1:	ins    DWORD PTR es:[rdi],dx
   1400086b2:	cs jbe 0x1400086e8
   1400086b5:	and    bh,BYTE PTR [rsi]
   1400086b7:	or     eax,0x2020200a
   1400086bc:	and    BYTE PTR [rdi+rsi*2],bh
   1400086bf:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   1400086c6:	gs je  0x14000873d
   1400086c9:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   1400086d0:	and    BYTE PTR [rax],ah
   1400086d2:	and    BYTE PTR [rax],ah
   1400086d4:	and    BYTE PTR [rax],ah
   1400086d6:	and    BYTE PTR [rax],ah
   1400086d8:	cmp    al,0x64
   1400086da:	jo     0x140008745
   1400086dc:	rex.B ja 0x140008740
   1400086df:	jb     0x140008746
   1400086e1:	and    BYTE PTR [rax+0x6d],bh
   1400086e4:	ins    BYTE PTR es:[rdi],dx
   1400086e5:	outs   dx,BYTE PTR ds:[rsi]
   1400086e6:	jae    0x140008725
   1400086e8:	and    ch,BYTE PTR [rax+0x74]
   1400086eb:	je     0x14000875d
   1400086ed:	cmp    ch,BYTE PTR [rdi]
   1400086ef:	(bad)  
   1400086f0:	jae    0x140008755
   1400086f2:	push   0x73616d65
   1400086f7:	cs ins DWORD PTR es:[rdi],dx
   1400086f9:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   140008700:	je     0x140008730
   140008702:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008705:	(bad)  
   140008706:	push   rbx
   140008707:	rex.WRB
   140008708:	rex.WB (bad) 
   14000870a:	xor    dh,BYTE PTR [rax]
   14000870c:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae69de41
   140008712:	outs   dx,DWORD PTR fs:[rsi]
   140008714:	ja     0x140008789
   140008716:	push   rbx
   140008717:	gs je  0x14000878e
   14000871a:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   140008721:	jb     0x140008798
   140008723:	gs cmp al,0x2f
   140008726:	fs jo  0x140008792
   140008729:	rex.B ja 0x14000878d
   14000872c:	jb     0x140008793
   14000872e:	ds or  eax,0x2020200a
   140008734:	and    BYTE PTR [rdi+rbp*1],bh
   140008737:	ja     0x1400087a2
   140008739:	outs   dx,BYTE PTR ds:[rsi]
   14000873a:	outs   dx,DWORD PTR fs:[rsi]
   14000873c:	ja     0x1400087b1
   14000873e:	push   rbx
   14000873f:	gs je  0x1400087b6
   140008742:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   140008749:	and    BYTE PTR [rax],ah
   14000874b:	cmp    al,0x2f
   14000874d:	(bad)  
   14000874e:	jo     0x1400087c0
   140008750:	ins    BYTE PTR es:[rdi],dx
   140008751:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140008758:	ds or  eax,0x612f3c0a
   14000875e:	jae    0x1400087d3
   140008760:	gs ins DWORD PTR es:[rdi],dx
   140008762:	(bad)  
   140008763:	ins    BYTE PTR es:[rdi],dx
   140008764:	jns    0x1400087a4
   140008766:	or     eax,0x3403e40a
   14000876b:	add    BYTE PTR [rax],al
   14000876d:	add    BYTE PTR [rsi+0x0],dl
   140008770:	push   rbx
   140008771:	add    BYTE PTR [rdi+0x0],bl
   140008774:	push   rsi
   140008775:	add    BYTE PTR [rbp+0x0],al
   140008778:	push   rdx
   140008779:	add    BYTE PTR [rbx+0x0],dl
   14000877c:	rex.WB add BYTE PTR [r15+0x0],cl
   140008780:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140008784:	rex.WB add BYTE PTR [r14+0x0],cl
   140008788:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000878c:	add    BYTE PTR [rax],al
   14000878e:	add    BYTE PTR [rax],al
   140008790:	mov    ebp,0xfeef04
   140008795:	add    BYTE PTR [rcx],al
   140008797:	add    BYTE PTR [rax],al
   140008799:	add    BYTE PTR [rdx],cl
   14000879b:	add    BYTE PTR [rax],al
   14000879d:	add    BYTE PTR [rax],bpl
   1400087a0:	add    BYTE PTR [rax],al
   1400087a2:	or     al,BYTE PTR [rax]
   1400087a4:	add    BYTE PTR [rax+0x0],al
   1400087a7:	sub    BYTE PTR [rdi],bh
   1400087a9:	add    BYTE PTR [rax],al
   1400087ab:	add    BYTE PTR [rax],al
   1400087ad:	add    BYTE PTR [rax],al
   1400087af:	add    BYTE PTR [rax+rax*1],al
   1400087b2:	add    al,0x0
   1400087b4:	add    DWORD PTR [rax],eax
	...
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	rex.X add eax,DWORD PTR [rax]
   1400087c7:	add    BYTE PTR [rcx],al
   1400087c9:	add    BYTE PTR [rbx+0x0],dl
   1400087cc:	je     0x1400087ce
   1400087ce:	jb     0x1400087d0
   1400087d0:	imul   eax,DWORD PTR [rax],0x67006e
   1400087d6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400087da:	ins    BYTE PTR es:[rdi],dx
   1400087db:	add    BYTE PTR [rbp+0x0],ah
   1400087de:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400087e2:	data16 add BYTE PTR [rdi+0x0],ch
   1400087e6:	add    BYTE PTR [rax],al
   1400087e8:	(bad)  
   1400087e9:	add    eax,DWORD PTR [rax]
   1400087eb:	add    BYTE PTR [rcx],al
   1400087ed:	add    BYTE PTR [rax],dh
   1400087ef:	add    BYTE PTR [rax+rax*1],dh
   1400087f2:	xor    BYTE PTR [rax],al
   1400087f4:	cmp    DWORD PTR [rax],eax
   1400087f6:	xor    BYTE PTR [rax],al
   1400087f8:	xor    al,0x0
   1400087fa:	rex.X add BYTE PTR [rax],sil
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rax+rax*1+0x16],cl
   140008803:	add    BYTE PTR [rcx],al
   140008805:	add    BYTE PTR [rbx+0x0],al
   140008808:	outs   dx,DWORD PTR ds:[rsi]
   140008809:	add    BYTE PTR [rbp+0x0],ch
   14000880c:	jo     0x14000880e
   14000880e:	(bad)  
   14000880f:	add    BYTE PTR [rsi+0x0],ch
   140008812:	jns    0x140008814
   140008814:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140008818:	ins    DWORD PTR es:[rdi],dx
   140008819:	add    BYTE PTR [rbp+0x0],ah
   14000881c:	add    BYTE PTR [rax],al
   14000881e:	add    BYTE PTR [rax],al
   140008820:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140008824:	movsxd eax,DWORD PTR [rax]
   140008826:	jb     0x140008828
   140008828:	outs   dx,DWORD PTR ds:[rsi]
   140008829:	add    BYTE PTR [rbx+0x0],dh
   14000882c:	outs   dx,DWORD PTR ds:[rsi]
   14000882d:	add    BYTE PTR [rsi+0x0],ah
   140008830:	je     0x140008832
   140008832:	and    BYTE PTR [rax],al
   140008834:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008838:	jb     0x14000883a
   14000883a:	jo     0x14000883c
   14000883c:	outs   dx,DWORD PTR ds:[rsi]
   14000883d:	add    BYTE PTR [rdx+0x0],dh
   140008840:	(bad)  
   140008841:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008845:	add    BYTE PTR [rdi+0x0],ch
   140008848:	outs   dx,BYTE PTR ds:[rsi]
   140008849:	add    BYTE PTR [rax],al
   14000884b:	add    BYTE PTR [rsi+0x0],bl
   14000884e:	sbb    eax,DWORD PTR [rax]
   140008850:	add    DWORD PTR [rax],eax
   140008852:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008856:	ins    BYTE PTR es:[rdi],dx
   140008857:	add    BYTE PTR [rbp+0x0],ah
   14000885a:	add    BYTE PTR [rbp+0x0],r12b
   14000885e:	jae    0x140008860
   140008860:	movsxd eax,DWORD PTR [rax]
   140008862:	jb     0x140008864
   140008864:	imul   eax,DWORD PTR [rax],0x740070
   14000886a:	imul   eax,DWORD PTR [rax],0x6e006f
   140008870:	add    BYTE PTR [rax],al
   140008872:	add    BYTE PTR [rax],al
   140008874:	push   rbp
   140008875:	add    BYTE PTR [rbx+0x0],dh
   140008878:	add    BYTE PTR gs:[rdx+0x0],dh
   14000887c:	add    BYTE PTR [r11+0x0],spl
   140008880:	movsxd eax,DWORD PTR [rax]
   140008882:	outs   dx,DWORD PTR ds:[rsi]
   140008883:	add    BYTE PTR [rbp+0x0],dh
   140008886:	outs   dx,BYTE PTR ds:[rsi]
   140008887:	add    BYTE PTR [rax+rax*1+0x43],dh
   14000888b:	add    BYTE PTR [rdi+0x0],ch
   14000888e:	outs   dx,BYTE PTR ds:[rsi]
   14000888f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008893:	add    BYTE PTR [rdi+0x0],ch
   140008896:	ins    BYTE PTR es:[rdi],dx
   140008897:	add    BYTE PTR [rbx+0x0],dl
   14000889a:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000889f:	add    BYTE PTR [rcx+0x0],ch
   1400088a2:	outs   dx,BYTE PTR ds:[rsi]
   1400088a3:	add    BYTE PTR [rdi+0x0],ah
   1400088a6:	jae    0x1400088a8
   1400088a8:	add    BYTE PTR [rax],al
   1400088aa:	add    BYTE PTR [rax],al
   1400088ac:	data16 add BYTE PTR [rbx],ah
   1400088af:	add    BYTE PTR [rcx],al
   1400088b1:	add    BYTE PTR [rsi+0x0],al
   1400088b4:	imul   eax,DWORD PTR [rax],0x65006c
   1400088ba:	push   rsi
   1400088bb:	add    BYTE PTR [rbp+0x0],ah
   1400088be:	jb     0x1400088c0
   1400088c0:	jae    0x1400088c2
   1400088c2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400088c8:	add    BYTE PTR [rax],al
   1400088ca:	add    BYTE PTR [rax],al
   1400088cc:	xor    DWORD PTR [rax],eax
   1400088ce:	xor    BYTE PTR [rax],al
   1400088d0:	add    BYTE PTR cs:[rax],dh
   1400088d3:	add    BYTE PTR [rsi],ch
   1400088d5:	add    BYTE PTR [rcx],dh
   1400088d7:	add    BYTE PTR [rax],dh
   1400088d9:	add    BYTE PTR [rdx],dh
   1400088db:	add    BYTE PTR [rax+rax*1],dh
   1400088de:	xor    BYTE PTR [rax],al
   1400088e0:	add    BYTE PTR cs:[rcx],dh
   1400088e3:	add    BYTE PTR [rsi],dh
   1400088e5:	add    BYTE PTR [rbx],dh
   1400088e7:	add    BYTE PTR [rax],bh
   1400088e9:	add    BYTE PTR [rax+rax*1],dh
   1400088ec:	and    BYTE PTR [rax],al
   1400088ee:	sub    BYTE PTR [rax],al
   1400088f0:	je     0x1400088f2
   1400088f2:	push   0x2e003100
   1400088f7:	add    BYTE PTR [rcx],dh
   1400088f9:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700b8ff
   1400088ff:	add    BYTE PTR [rax],dh
   140008901:	add    BYTE PTR [rcx],bh
   140008903:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700ba09
   140008909:	add    BYTE PTR [rax],dh
   14000890b:	add    BYTE PTR [rax],dh
   14000890d:	add    BYTE PTR [rcx],ch
   14000890f:	add    BYTE PTR [rax],al
   140008911:	add    BYTE PTR [rax],al
   140008913:	add    BYTE PTR [rsi+0x0],dl
   140008916:	sbb    eax,DWORD PTR [rax]
   140008918:	add    DWORD PTR [rax],eax
   14000891a:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000891e:	je     0x140008920
   140008920:	add    BYTE PTR gs:[rdx+0x0],dh
   140008924:	outs   dx,BYTE PTR ds:[rsi]
   140008925:	add    BYTE PTR [rcx+0x0],ah
   140008928:	ins    BYTE PTR es:[rdi],dx
   140008929:	add    BYTE PTR [rsi+0x0],cl
   14000892c:	(bad)  
   14000892d:	add    BYTE PTR [rbp+0x0],ch
   140008930:	add    BYTE PTR gs:[rax],al
   140008933:	add    BYTE PTR [rbp+0x0],dl
   140008936:	jae    0x140008938
   140008938:	add    BYTE PTR gs:[rdx+0x0],dh
   14000893c:	add    BYTE PTR [r11+0x0],spl
   140008940:	movsxd eax,DWORD PTR [rax]
   140008942:	outs   dx,DWORD PTR ds:[rsi]
   140008943:	add    BYTE PTR [rbp+0x0],dh
   140008946:	outs   dx,BYTE PTR ds:[rsi]
   140008947:	add    BYTE PTR [rax+rax*1+0x43],dh
   14000894b:	add    BYTE PTR [rdi+0x0],ch
   14000894e:	outs   dx,BYTE PTR ds:[rsi]
   14000894f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008953:	add    BYTE PTR [rdi+0x0],ch
   140008956:	ins    BYTE PTR es:[rdi],dx
   140008957:	add    BYTE PTR [rbx+0x0],dl
   14000895a:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000895f:	add    BYTE PTR [rcx+0x0],ch
   140008962:	outs   dx,BYTE PTR ds:[rsi]
   140008963:	add    BYTE PTR [rdi+0x0],ah
   140008966:	jae    0x140008968
   140008968:	add    BYTE PTR [rax],al
   14000896a:	add    BYTE PTR [rax],al
   14000896c:	add    BYTE PTR [rax],0x2e
   14000896f:	add    BYTE PTR [rcx],al
   140008971:	add    BYTE PTR [rax+rax*1+0x65],cl
   140008975:	add    BYTE PTR [rdi+0x0],ah
   140008978:	(bad)  
   140008979:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000897d:	add    BYTE PTR [rdi+0x0],ch
   140008980:	jo     0x140008982
   140008982:	jns    0x140008984
   140008984:	jb     0x140008986
   140008986:	imul   eax,DWORD PTR [rax],0x680067
   14000898c:	je     0x14000898e
   14000898e:	add    BYTE PTR [rax],al
   140008990:	test   eax,0x4d002000
   140008995:	add    BYTE PTR [rcx+0x0],ch
   140008998:	movsxd eax,DWORD PTR [rax]
   14000899a:	jb     0x14000899c
   14000899c:	outs   dx,DWORD PTR ds:[rsi]
   14000899d:	add    BYTE PTR [rbx+0x0],dh
   1400089a0:	outs   dx,DWORD PTR ds:[rsi]
   1400089a1:	add    BYTE PTR [rsi+0x0],ah
   1400089a4:	je     0x1400089a6
   1400089a6:	and    BYTE PTR [rax],al
   1400089a8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400089ac:	jb     0x1400089ae
   1400089ae:	jo     0x1400089b0
   1400089b0:	outs   dx,DWORD PTR ds:[rsi]
   1400089b1:	add    BYTE PTR [rdx+0x0],dh
   1400089b4:	(bad)  
   1400089b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400089b9:	add    BYTE PTR [rdi+0x0],ch
   1400089bc:	outs   dx,BYTE PTR ds:[rsi]
   1400089bd:	add    BYTE PTR [rsi],ch
   1400089bf:	add    BYTE PTR [rax],ah
   1400089c1:	add    BYTE PTR [rcx+0x0],al
   1400089c4:	ins    BYTE PTR es:[rdi],dx
   1400089c5:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400089c9:	add    BYTE PTR [rdx+0x0],dh
   1400089cc:	imul   eax,DWORD PTR [rax],0x680067
   1400089d2:	je     0x1400089d4
   1400089d4:	jae    0x1400089d6
   1400089d6:	and    BYTE PTR [rax],al
   1400089d8:	jb     0x1400089da
   1400089da:	add    BYTE PTR gs:[rbx+0x0],dh
   1400089de:	add    BYTE PTR gs:[rdx+0x0],dh
   1400089e2:	jbe    0x1400089e4
   1400089e4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400089e9:	add    BYTE PTR [rax],al
   1400089eb:	add    BYTE PTR [rsi+0x0],ah
   1400089ee:	(bad)  
   1400089ef:	add    BYTE PTR [rcx],al
   1400089f1:	add    BYTE PTR [rdi+0x0],cl
   1400089f4:	jb     0x1400089f6
   1400089f6:	imul   eax,DWORD PTR [rax],0x690067
   1400089fc:	outs   dx,BYTE PTR ds:[rsi]
   1400089fd:	add    BYTE PTR [rcx+0x0],ah
   140008a00:	ins    BYTE PTR es:[rdi],dx
   140008a01:	add    BYTE PTR [rsi+0x0],al
   140008a04:	imul   eax,DWORD PTR [rax],0x65006c
   140008a0a:	outs   dx,BYTE PTR ds:[rsi]
   140008a0b:	add    BYTE PTR [rcx+0x0],ah
   140008a0e:	ins    DWORD PTR es:[rdi],dx
   140008a0f:	add    BYTE PTR [rbp+0x0],ah
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	push   rbp
   140008a15:	add    BYTE PTR [rbx+0x0],dh
   140008a18:	add    BYTE PTR gs:[rdx+0x0],dh
   140008a1c:	add    BYTE PTR [r11+0x0],spl
   140008a20:	movsxd eax,DWORD PTR [rax]
   140008a22:	outs   dx,DWORD PTR ds:[rsi]
   140008a23:	add    BYTE PTR [rbp+0x0],dh
   140008a26:	outs   dx,BYTE PTR ds:[rsi]
   140008a27:	add    BYTE PTR [rax+rax*1+0x43],dh
   140008a2b:	add    BYTE PTR [rdi+0x0],ch
   140008a2e:	outs   dx,BYTE PTR ds:[rsi]
   140008a2f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008a33:	add    BYTE PTR [rdi+0x0],ch
   140008a36:	ins    BYTE PTR es:[rdi],dx
   140008a37:	add    BYTE PTR [rbx+0x0],dl
   140008a3a:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140008a3f:	add    BYTE PTR [rcx+0x0],ch
   140008a42:	outs   dx,BYTE PTR ds:[rsi]
   140008a43:	add    BYTE PTR [rdi+0x0],ah
   140008a46:	jae    0x140008a48
   140008a48:	add    BYTE PTR cs:[rbp+0x0],ah
   140008a4c:	js     0x140008a4e
   140008a4e:	add    BYTE PTR gs:[rax],al
   140008a51:	add    BYTE PTR [rax],al
   140008a53:	add    BYTE PTR [rdx+0x0],ch
   140008a56:	and    eax,0x50000100
   140008a5b:	add    BYTE PTR [rdx+0x0],dh
   140008a5e:	outs   dx,DWORD PTR ds:[rsi]
   140008a5f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140008a63:	add    BYTE PTR [rbx+0x0],ah
   140008a66:	je     0x140008a68
   140008a68:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140008a6c:	ins    DWORD PTR es:[rdi],dx
   140008a6d:	add    BYTE PTR [rbp+0x0],ah
   140008a70:	add    BYTE PTR [rax],al
   140008a72:	add    BYTE PTR [rax],al
   140008a74:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140008a78:	movsxd eax,DWORD PTR [rax]
   140008a7a:	jb     0x140008a7c
   140008a7c:	outs   dx,DWORD PTR ds:[rsi]
   140008a7d:	add    BYTE PTR [rbx+0x0],dh
   140008a80:	outs   dx,DWORD PTR ds:[rsi]
   140008a81:	add    BYTE PTR [rsi+0x0],ah
   140008a84:	je     0x140008a86
   140008a86:	scas   al,BYTE PTR es:[rdi]
   140008a87:	add    BYTE PTR [rax],ah
   140008a89:	add    BYTE PTR [rdi+0x0],dl
   140008a8c:	imul   eax,DWORD PTR [rax],0x64006e
   140008a92:	outs   dx,DWORD PTR ds:[rsi]
   140008a93:	add    BYTE PTR [rdi+0x0],dh
   140008a96:	jae    0x140008a98
   140008a98:	scas   al,BYTE PTR es:[rdi]
   140008a99:	add    BYTE PTR [rax],ah
   140008a9b:	add    BYTE PTR [rdi+0x0],cl
   140008a9e:	jo     0x140008aa0
   140008aa0:	add    BYTE PTR gs:[rdx+0x0],dh
   140008aa4:	(bad)  
   140008aa5:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008aa9:	add    BYTE PTR [rsi+0x0],ch
   140008aac:	add    BYTE PTR [eax],ah
   140008aaf:	add    BYTE PTR [rbx+0x0],dl
   140008ab2:	jns    0x140008ab4
   140008ab4:	jae    0x140008ab6
   140008ab6:	je     0x140008ab8
   140008ab8:	add    BYTE PTR gs:[rbp+0x0],ch
   140008abc:	add    BYTE PTR [rax],al
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	rex.RX add BYTE PTR [rcx],r10b
   140008ac3:	add    BYTE PTR [rcx],al
   140008ac5:	add    BYTE PTR [rax+0x0],dl
   140008ac8:	jb     0x140008aca
   140008aca:	outs   dx,DWORD PTR ds:[rsi]
   140008acb:	add    BYTE PTR [rax+rax*1+0x75],ah
   140008acf:	add    BYTE PTR [rbx+0x0],ah
   140008ad2:	je     0x140008ad4
   140008ad4:	push   rsi
   140008ad5:	add    BYTE PTR [rbp+0x0],ah
   140008ad8:	jb     0x140008ada
   140008ada:	jae    0x140008adc
   140008adc:	imul   eax,DWORD PTR [rax],0x6e006f
   140008ae2:	add    BYTE PTR [rax],al
   140008ae4:	xor    DWORD PTR [rax],eax
   140008ae6:	xor    BYTE PTR [rax],al
   140008ae8:	add    BYTE PTR cs:[rax],dh
   140008aeb:	add    BYTE PTR [rsi],ch
   140008aed:	add    BYTE PTR [rcx],dh
   140008aef:	add    BYTE PTR [rax],dh
   140008af1:	add    BYTE PTR [rdx],dh
   140008af3:	add    BYTE PTR [rax+rax*1],dh
   140008af6:	xor    BYTE PTR [rax],al
   140008af8:	add    BYTE PTR cs:[rcx],dh
   140008afb:	add    BYTE PTR [rsi],dh
   140008afd:	add    BYTE PTR [rbx],dh
   140008aff:	add    BYTE PTR [rax],bh
   140008b01:	add    BYTE PTR [rax+rax*1],dh
   140008b04:	add    BYTE PTR [rax],al
   140008b06:	add    BYTE PTR [rax],al
   140008b08:	add    BYTE PTR [rax],r8b
   140008b0b:	add    BYTE PTR [rcx],al
   140008b0d:	add    BYTE PTR [rsi+0x0],dl
   140008b10:	(bad)  
   140008b11:	add    BYTE PTR [rdx+0x0],dh
   140008b14:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008b18:	ins    BYTE PTR es:[rdi],dx
   140008b19:	add    BYTE PTR [rbp+0x0],ah
   140008b1c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140008b20:	data16 add BYTE PTR [rdi+0x0],ch
   140008b24:	add    BYTE PTR [rax],al
   140008b26:	add    BYTE PTR [rax],al
   140008b28:	and    al,0x0
   140008b2a:	add    al,0x0
   140008b2c:	add    BYTE PTR [rax],al
   140008b2e:	push   rsp
   140008b2f:	add    BYTE PTR [rdx+0x0],dh
   140008b32:	(bad)  
   140008b33:	add    BYTE PTR [rsi+0x0],ch
   140008b36:	jae    0x140008b38
   140008b38:	ins    BYTE PTR es:[rdi],dx
   140008b39:	add    BYTE PTR [rcx+0x0],ah
   140008b3c:	je     0x140008b3e
   140008b3e:	imul   eax,DWORD PTR [rax],0x6e006f
   140008b44:	add    BYTE PTR [rax],al
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	or     DWORD PTR [rax+rsi*4],eax
   140008b4b:	add    al,0x0
   140008b4d:	add    BYTE PTR [rax],al
   140008b4f:	add    BYTE PTR [rcx+0xd474e50],cl
   140008b55:	or     bl,BYTE PTR [rdx]
   140008b57:	or     al,BYTE PTR [rax]
   140008b59:	add    BYTE PTR [rax],al
   140008b5b:	or     eax,0x52444849
   140008b60:	add    BYTE PTR [rax],al
   140008b62:	add    DWORD PTR [rax],eax
   140008b64:	add    BYTE PTR [rax],al
   140008b66:	add    DWORD PTR [rax],eax
   140008b68:	or     BYTE PTR [rsi],al
   140008b6a:	add    BYTE PTR [rax],al
   140008b6c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140008b70:	data16 add BYTE PTR [rax],al
   140008b73:	(bad)  
   140008b74:	jo     0x140008bbf
   140008b76:	rex.R
   140008b77:	push   r12
   140008b79:	js     0x140008b17
   140008b7b:	in     eax,dx
   140008b7c:	popf   
   140008b7d:	pop    rdi
   140008b7e:	ins    BYTE PTR es:[rdi],dx
   140008b7f:	sbb    al,0xd7
   140008b81:	jns    0x140008b48
   140008b83:	iret   
   140008b84:	xchg   edx,eax
   140008b85:	rex.WXB push r10
   140008b87:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008b88:	rex.R pop rcx
   140008b8a:	xchg   esp,eax
   140008b8b:	adc    BYTE PTR [rcx],ch
   140008b8d:	stos   BYTE PTR es:[rdi],al
   140008b8e:	imul   ecx,DWORD PTR [rax+0x74],0x54
   140008b92:	ror    BYTE PTR [rsi+0x15],0xc5
   140008b96:	xor    ah,BYTE PTR [rax+0x3]
   140008b99:	adc    dl,al
   140008b9b:	pop    rax
   140008b9c:	(bad)  
   140008b9d:	loopne 0x140008b4d
   140008b9f:	xchg   ebx,eax
   140008ba0:	xchg   edi,eax
   140008ba1:	enter  0x5be8,0x9d
   140008ba5:	(bad)  
   140008ba6:	(bad)  
   140008ba7:	pop    rdx
   140008ba8:	and    BYTE PTR [rip+0xb91d404],al        # 0x14b925fb2
   140008bae:	cmp    BYTE PTR [rbp+0x6a],bh
   140008bb1:	sub    al,0xa3
   140008bb3:	jge    0x140008c1e
   140008bb5:	push   rcx
   140008bb6:	fld    DWORD PTR [rsi-0x63]
   140008bb9:	(bad)  
   140008bba:	and    eax,DWORD PTR [rsi]
   140008bbc:	rex.WR add rax,0x41369252
   140008bc2:	mov    esp,0x1bd8e086
   140008bc7:	sbb    ebp,ecx
   140008bc9:	ficom  DWORD PTR [rdx+0x44]
   140008bcc:	rex.R jb 0x140008bda
   140008bcf:	jp     0x140008bb6
   140008bd1:	movabs ds:0x165da75524d26489,al
   140008bda:	movabs al,ds:0x87db8a447f9692b9
   140008be3:	cdq    
   140008be4:	and    DWORD PTR [rdi+0x67],esp
   140008be7:	addr32 data16 addr32 out dx,al
   140008beb:	ficomp WORD PTR [rcx+0x1ce773b9]
   140008bf1:	adc    BYTE PTR [rdi+0x76],sil
   140008bf5:	mov    esi,0xf9c80dfb
   140008bfa:	popf   
   140008bfb:	mov    ecx,0x68d727ff
   140008c00:	xor    al,0x40
   140008c02:	push   rcx
   140008c03:	push   rsp
   140008c04:	ss (bad) 
   140008c06:	xchg   ebp,eax
   140008c07:	hlt    
   140008c08:	add    eax,0x9c951450
   140008c0d:	push   0x61951400
   140008c12:	rol    DWORD PTR [rax],1
   140008c14:	sub    BYTE PTR [rdx],ch
   140008c16:	ret    
   140008c17:	movabs ds:0xa8a0034586545001,al
   140008c20:	or     al,0x8b
   140008c22:	(bad)  
   140008c23:	rex push rcx
   140008c25:	sbb    DWORD PTR [rsi],edx
   140008c27:	or     eax,0xac32a280
   140008c2c:	jl     0x140008bd5
   140008c2e:	add    eax,0x193972e4
   140008c33:	xlat   BYTE PTR ds:[rbx]
   140008c34:	rex.B
   140008c35:	rex.WB push r8
   140008c37:	movabs eax,ds:0xe6438037600dd850
   140008c40:	movabs eax,ds:0x64207800b7ffcc47
   140008c49:	jno    0x140008bde
   140008c4b:	out    0x3f,al
   140008c4d:	add    BYTE PTR [rax-0x31],bh
   140008c50:	cld    
   140008c51:	mov    edi,0x54b2600c
   140008c56:	sub    cl,BYTE PTR [rbp-0x4a]
   140008c59:	sahf   
   140008c5a:	rex.WRX and rax,0xfffffffff1e74ea1
   140008c60:	in     al,0x3a
   140008c62:	add    BYTE PTR cs:[rsi],0x90
   140008c66:	mov    BYTE PTR [rax+rbx*8+0xf],cl
   140008c6a:	add    eax,edi
   140008c6c:	xor    cl,BYTE PTR [rax+rdi*4]
   140008c6f:	pextrw edi,(bad),0xc5
   140008c71:	jl     0x140008c7c
   140008c73:	add    BYTE PTR gs:[rbx+0x0],ah
   140008c77:	ds add al,0x30
   140008c7a:	push   rsi
   140008c7b:	sub    dl,BYTE PTR [rbp+0x4fce62c6]
   140008c81:	add    DWORD PTR [rsi],0x80d91990
   140008c87:	jg     0x140008c8d
   140008c89:	rcl    BYTE PTR [rcx],0x18
   140008c8c:	rex.WRXB jne 0x140008c24
   140008c8f:	xor    al,0x7
   140008c91:	movabs al,ds:0x1e212d6650b6a308
   140008c9a:	rol    DWORD PTR [rax],1
   140008c9c:	xor    al,0x96
   140008c9e:	or     ebp,edi
   140008ca0:	adc    DWORD PTR [rax],eax
   140008ca2:	and    QWORD PTR [r13+r10*1+0x7e],r8
   140008ca7:	movabs eax,ds:0xd9e85843f2160b67
   140008cb0:	(bad)  
   140008cb1:	(bad)
   140008cb4:	add    al,al
   140008cb6:	ins    BYTE PTR es:[rdi],dx
   140008cb7:	(bad)  
   140008cb8:	out    dx,al
   140008cb9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008cba:	jae    0x140008d3a
   140008cbc:	stc    
   140008cbd:	push   rdi
   140008cbe:	div    DWORD PTR [rip+0xffffffff9e546e7d]        # 0xde54fb41
   140008cc4:	imul   edi,edx,0xe8ca657c
   140008cca:	(bad)  
   140008ccb:	stos   BYTE PTR es:[rdi],al
   140008ccc:	(bad)  
   140008ccd:	jb     0x140008c95
   140008ccf:	mov    edi,0x6b542eb9
   140008cd4:	movabs eax,ds:0xd228014e0063d6fe
   140008cdd:	or     al,0xa2
   140008cdf:	adc    ecx,DWORD PTR [rip+0xa153340]        # 0x14a15c025
   140008ce5:	test   DWORD PTR [rip+0x67fa030],ebp        # 0x146802d1b
   140008ceb:	add    DWORD PTR [rax-0x39e7e261],esp
   140008cf1:	int    0xbe
   140008cf3:	iret   
   140008cf4:	jrcxz  0x140008d5c
   140008cf6:	fisttp WORD PTR [rsi-0x24]
   140008cf9:	call   0xe2108b33
   140008cfe:	(bad)  
   140008cff:	(bad)  
   140008d00:	(bad)  
   140008d01:	(bad)  
   140008d02:	cld    
   140008d03:	stc    
   140008d04:	std    
   140008d05:	scas   eax,DWORD PTR es:[rdi]
   140008d06:	cmp    bh,cl
   140008d08:	jo     0x140008c97
   140008d0a:	stos   DWORD PTR es:[rdi],eax
   140008d0b:	rex.WR ja 0x140008cb1
   140008d0e:	cmp    dl,BYTE PTR [rdi+0xbb544c3]
   140008d14:	adc    esi,DWORD PTR [rbx]
   140008d16:	pop    rbp
   140008d17:	test   al,0x4c
   140008d19:	jne    0x140008d22
   140008d1b:	rex.WB (bad) 
   140008d1d:	(bad)  
   140008d1e:	loopne 0x140008d85
   140008d20:	sbb    BYTE PTR [rsi+0x30],ah
   140008d23:	(bad)  
   140008d24:	call   0xe241362b
   140008d29:	add    DWORD PTR [rax+0x22],ebp
   140008d2c:	repz imul edi,edi,0xdea9b45d
   140008d33:	iret   
   140008d34:	(bad)  
   140008d35:	or     al,0xe3
   140008d37:	mov    bl,0xfe
   140008d39:	(bad)  
   140008d3a:	int3   
   140008d3b:	(bad)  
   140008d3c:	in     al,dx
   140008d3d:	(bad)  
   140008d3e:	ins    BYTE PTR es:[rdi],dx
   140008d3f:	push   rax
   140008d41:	cli    
   140008d42:	(bad)  
   140008d43:	and    edi,edi
   140008d45:	mov    esi,?
   140008d47:	(bad)  
   140008d48:	adc    BYTE PTR [rsi+0x3774cab0],ch
   140008d4e:	scas   al,BYTE PTR es:[rdi]
   140008d4f:	rex.WR jne 0x140008cf5
   140008d52:	xor    dl,ch
   140008d54:	test   edx,ecx
   140008d56:	mov    ah,0xaf
   140008d58:	and    DWORD PTR [rax-0x33],ebx
   140008d5b:	test   BYTE PTR [rbx],dl
   140008d5d:	lods   al,BYTE PTR ds:[rsi]
   140008d5e:	adc    eax,0x200d11c8
   140008d63:	in     eax,0x2a
   140008d65:	adc    al,0xa
   140008d67:	xchg   DWORD PTR [rax-0x80],esp
   140008d6a:	jg     0x140008d34
   140008d6c:	jmp    0x140008d0a
   140008d6e:	cdq    
   140008d6f:	rex.WRB mul QWORD PTR [r11+0x66]
   140008d73:	sar    ebp,cl
   140008d75:	test   al,0x6e
   140008d77:	mov    edx,0x1b5d2b1f
   140008d7c:	pop    rdx
   140008d7d:	rex.WRXB adc r8b,r15b
   140008d80:	adc    edi,DWORD PTR [rdx+0x1b]
   140008d83:	or     BYTE PTR [rax+0x61],0xeb
   140008d87:	(bad)  
   140008d88:	(bad)  
   140008d89:	(bad)  
   140008d8a:	jae    0x140008d44
   140008d8c:	js     0x140008d3b
   140008d8e:	sbb    esp,DWORD PTR [rbx-0x42e70ca9]
   140008d94:	(bad)  
   140008d95:	imul   eax,DWORD PTR [rsi],0x65
   140008d98:	sbb    BYTE PTR [rsi+0x50],al
   140008d9b:	(bad)  
   140008d9c:	lahf   
   140008d9d:	nop
   140008d9e:	mov    dl,0x44
   140008da0:	add    ecx,DWORD PTR [rax-0x57]
   140008da3:	fiadd  DWORD PTR [rcx-0x73cfc4c1]
   140008da9:	fild   QWORD PTR [rbp-0x22]
   140008dac:	out    dx,eax
   140008dad:	or     eax,0x3f9125bd
   140008db2:	pop    rdi
   140008db3:	add    ebp,DWORD PTR [rax-0x44]
   140008db6:	loop   0x140008e1e
   140008db8:	add    BYTE PTR [rbp+0x6594efc1],bl
   140008dbe:	(bad)  
   140008dbf:	out    dx,eax
   140008dc0:	push   rsi
   140008dc1:	bnd jle 0x140008df9
   140008dc4:	xor    DWORD PTR [rdx],0x68
   140008dc7:	add    al,0xc2
   140008dc9:	movabs ds:0x1845ff55664ca401,al
   140008dd2:	push   rbp
   140008dd3:	std    
   140008dd4:	lods   eax,DWORD PTR es:[rsi]
   140008dd6:	je     0x140008e45
   140008dd8:	rex jne 0x140008dae
   140008ddb:	std    
   140008ddc:	sbb    bh,bl
   140008dde:	jbe    0x140008df8
   140008de0:	or     edi,DWORD PTR [rip+0x5f93a01]        # 0x145f9c7e7
   140008de6:	loope  0x140008def
   140008de8:	fmul   QWORD PTR [rax+riz*8]
   140008deb:	pop    QWORD PTR [rbx+rcx*8+0x2d6aa20a]
   140008df2:	xchg   DWORD PTR [rbx],esi
   140008df4:	out    0x7b,eax
   140008df6:	jno    0x140008de9
   140008df8:	pop    rdx
   140008df9:	(bad)  
   140008dfa:	(bad)  
   140008dfb:	mov    ebp,DWORD PTR [rsi-0x3feeb309]
   140008e01:	jno    0x140008e39
   140008e03:	or     eax,0x900689c2
   140008e08:	adc    bl,BYTE PTR [rcx-0x79208463]
   140008e0e:	icebp  
   140008e0f:	(bad)  
   140008e10:	outs   dx,DWORD PTR ds:[rsi]
   140008e11:	ror    BYTE PTR [rdx-0x29],cl
   140008e14:	(bad)  
   140008e15:	rex.WR or rax,0xffffffffd0e4c41d
   140008e1b:	add    edi,edi
   140008e1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008e1e:	mov    ebp,0xfc01d5d
   140008e23:	rex.W xor BYTE PTR [rax],al
   140008e26:	movabs eax,ds:0xfc50e62fa81a6db
   140008e2f:	jp     0x140008e21
   140008e31:	(bad)  
   140008e32:	in     eax,0x1e
   140008e34:	(bad)  
   140008e35:	and    edi,DWORD PTR [rax]
   140008e37:	add    eax,esp
   140008e39:	and    eax,0x13061676
   140008e3e:	or     eax,0xab320520
   140008e43:	sti    
   140008e44:	scas   eax,DWORD PTR es:[rdi]
   140008e45:	ret    
   140008e46:	cwde   
   140008e47:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008e48:	mov    bh,0x26
   140008e4a:	and    eax,esi
   140008e4c:	or     DWORD PTR [rsi+0x343a07e1],0xedf84100
   140008e56:	push   0x63
   140008e58:	add    al,0x93
   140008e5a:	add    BYTE PTR [rsi+0x5ed059b2],cl
   140008e60:	xor    al,0x0
   140008e62:	(bad)
   140008e65:	adc    al,0x5e
   140008e67:	test   cl,dh
   140008e69:	in     al,0x6f
   140008e6b:	rcl    ah,cl
   140008e6d:	rol    BYTE PTR [rcx+0x7c],1
   140008e70:	mov    esp,0xe070d1ed
   140008e75:	add    edx,DWORD PTR [rdx-0x20]
   140008e78:	(bad)  
   140008e79:	cmp    dh,BYTE PTR [rax]
   140008e7b:	add    BYTE PTR [rcx],cl
   140008e7d:	lock fist DWORD PTR [rbp+0x5f]
   140008e81:	int3   
   140008e82:	loope  0x140008e78
   140008e84:	test   DWORD PTR [rsi+0x14],ebx
   140008e87:	(bad)  
   140008e88:	idiv   DWORD PTR [rax-0x56ad0283]
   140008e8e:	push   rsp
   140008e8f:	cmp    ch,BYTE PTR [rsi]
   140008e91:	xchg   edx,eax
   140008e92:	xor    DWORD PTR [rbx],ebp
   140008e94:	movabs ds:0x1c22ffa9f32a2801,al
   140008e9d:	movsxd edi,ecx
   140008e9f:	mov    bl,0x3
   140008ea1:	ret    
   140008ea2:	clc    
   140008ea3:	int    0xe7
   140008ea5:	mov    esi,0x9f7d9b86
   140008eaa:	maxps  xmm5,XMMWORD PTR [rax+0x4101f824]
   140008eb1:	add    edx,DWORD PTR [rax+0x135dbf0c]
   140008eb7:	(bad)  
   140008eb8:	cs mov esp,0x5b9f6efa
   140008ebe:	addr32 loope 0x140008ed9
   140008ec1:	mov    WORD PTR [rsi+0x7648b281],?
   140008ec7:	fld    QWORD PTR [rbp+0x3]
   140008eca:	push   rax
   140008ecb:	rex.WR
   140008ecc:	pop    bx
   140008ece:	(bad)  
   140008ecf:	mov    ebx,0x57f53c70
   140008ed4:	mov    edx,0x6de3e036
   140008ed9:	xchg   DWORD PTR [rcx],esi
   140008edb:	xor    eax,0x7bb21074
   140008ee0:	fcmovnb st,st(3)
   140008ee2:	(bad)  
   140008ee3:	xor    al,0xd0
   140008ee5:	js     0x140008ecc
   140008ee7:	loope  0x140008ecf
   140008ee9:	and    ebp,ebp
   140008eeb:	or     al,0x20
   140008eed:	rex.X clc 
   140008eef:	in     eax,dx
   140008ef0:	sub    bl,BYTE PTR [rsi-0x12]
   140008ef3:	shr    ecx,0xb
   140008ef6:	mov    ebp,0x9782cd6e
   140008efb:	(bad)  
   140008efc:	mov    WORD PTR [rsi],ss
   140008efe:	mov    al,0x6f
   140008f00:	shl    BYTE PTR [rsi+0x72e5f94e],0x60
   140008f07:	mov    DWORD PTR [rdx],ebp
   140008f09:	adc    al,0xa
   140008f0b:	rex.WRXB add r15,r8
   140008f0e:	add    al,0xe
   140008f10:	clc    
   140008f11:	outs   dx,DWORD PTR ds:[rsi]
   140008f12:	imul   ch
   140008f14:	(bad)  
   140008f15:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008f16:	jnp    0x140008f16
   140008f18:	pop    rsp
   140008f19:	sbb    eax,edi
   140008f1b:	movsxd ecx,ecx
   140008f1d:	(bad)  
   140008f1e:	(bad)  
   140008f1f:	test   BYTE PTR [rbx],ah
   140008f21:	cvtps2pi mm4,xmm3
   140008f24:	(bad)  
   140008f25:	(bad)  
   140008f26:	je     0x140008f29
   140008f28:	imul   esi
   140008f2a:	pop    rax
   140008f2b:	jne    0x140008fab
   140008f2d:	cmc    
   140008f2e:	ins    DWORD PTR es:[rdi],dx
   140008f2f:	add    BYTE PTR [rdi+0x4a63bf98],bl
   140008f35:	xchg   edx,eax
   140008f36:	pop    rax
   140008f37:	add    edx,DWORD PTR [rax-0xf5ebd60]
   140008f3d:	add    BYTE PTR [rdx+rbp*8+0x77e721fe],cl
   140008f44:	jrcxz  0x140008f21
   140008f46:	(bad)  
   140008f47:	jrcxz  0x140008f2c
   140008f49:	ins    DWORD PTR es:[rdi],dx
   140008f4a:	xchg   ebp,ecx
   140008f4c:	rex.WRXB (bad) 
   140008f4e:	rcr    BYTE PTR [rdi],0xb8
   140008f51:	(bad)  
   140008f52:	adc    BYTE PTR [rbx],ah
   140008f54:	cld    
   140008f55:	rex.WRX popf 
   140008f57:	mov    ecx,0xe7d38bd0
   140008f5c:	jnp    0x140008f3b
   140008f5e:	mov    esi,0x1668c32a
   140008f63:	fs jle 0x140008f6b
   140008f66:	and    bl,BYTE PTR [rbx+0x36ca0900]
   140008f6c:	jge    0x140008f65
   140008f6e:	imul   esp,edi,0xc303b377
   140008f74:	clc    
   140008f75:	push   0xffffffffc6d89fc7
   140008f7a:	repz (bad) 
   140008f7c:	sbb    DWORD PTR [rdi],0x9006808
   140008f82:	ret    0xa96f
   140008f85:	cmp    dl,bh
   140008f87:	test   DWORD PTR [rbx+0xdf6b96f],edx
   140008f8d:	add    al,al
   140008f8f:	or     BYTE PTR [rdx],dh
   140008f91:	lods   eax,DWORD PTR ds:[rsi]
   140008f93:	cwde   
   140008f94:	(bad)  
   140008f95:	nop
   140008f96:	cmp    ah,0xc6
   140008f99:	hlt    
   140008f9a:	(bad)  
   140008f9b:	jp     0x140008f23
   140008f9d:	lock fwait
   140008f9f:	iret   
   140008fa0:	jge    0x140008faf
   140008fa2:	xor    ebx,DWORD PTR [rbx+0x551db7ee]
   140008fa8:	or     edi,DWORD PTR [rsi+0x20]
   140008fab:	add    BYTE PTR [rcx],0x28
   140008fae:	add    BYTE PTR [rdi+0x6bd1b8bd],bh
   140008fb4:	jns    0x140008f72
   140008fb6:	cli    
   140008fb7:	outs   dx,BYTE PTR ds:[rsi]
   140008fb8:	lahf   
   140008fb9:	xlat   BYTE PTR ds:[rbx]
   140008fba:	mov    al,ah
   140008fbc:	int3   
   140008fbd:	(bad)  
   140008fbe:	sbb    eax,0x28c401a0
   140008fc3:	sbb    edi,eax
   140008fc5:	iret   
   140008fc6:	shl    BYTE PTR [rbp-0x3f],0xce
   140008fca:	clc    
   140008fcb:	mov    dh,0xc3
   140008fcd:	cwde   
   140008fce:	sbb    al,0x3a
   140008fd0:	call   0x14f5469ed
   140008fd5:	jle    0x140008f77
   140008fd7:	lea    eax,[rcx]
   140008fd9:	sub    BYTE PTR [rsi],al
   140008fdb:	mov    edi,0xe52faa5
   140008fe0:	(bad)
   140008fe3:	js     0x140008fc8
   140008fe5:	add    edx,edi
   140008fe7:	mov    ecx,0x56307303
   140008fec:	sbb    al,0x66
   140008fee:	retf   0x6808
   140008ff1:	add    BYTE PTR [rcx],dh
   140008ff3:	enter  0xeaac,0x3f
   140008ff7:	add    esp,DWORD PTR [rbx-0x1fd2056]
   140008ffd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008ffe:	fwait
   140008fff:	(bad)  
   140009000:	hlt    
   140009001:	cwde   
   140009002:	mov    esi,0x80fc26ab
   140009007:	pop    QWORD PTR [rcx]
   140009009:	sub    BYTE PTR [rdx],cl
   14000900b:	mov    edi,0xad6a8bfd
   140009010:	or     esp,DWORD PTR [rdi+0x2e]
   140009013:	hlt    
   140009014:	loop   0x140008ff2
   140009016:	adc    eax,0x7303b9d7
   14000901b:	xor    BYTE PTR [rdx-0x5e98d0fa],bl
   140009021:	imul   eax,DWORD PTR [rax+0x3],0xe7665088
   140009028:	sahf   
   140009029:	add    eax,0xdb5a8b7e
   14000902e:	stc    
   14000902f:	jbe    0x140008fda
   140009031:	or     edi,DWORD PTR [rdi]
   140009033:	sbb    al,BYTE PTR [rax-0x1d]
   140009036:	jnp    0x140009066
   140009038:	(bad)  
   140009039:	nop
   14000903a:	add    bh,al
   14000903c:	in     eax,dx
   14000903d:	stos   BYTE PTR es:[rdi],al
   14000903e:	(bad)  
   14000903f:	mov    edx,0xdadf270
   140009044:	jle    0x140009051
   140009046:	lea    eax,[rsi+0x60]
   140009049:	sbb    BYTE PTR [rcx+0x34859db6],al
   14000904f:	or     BYTE PTR [rax],0x64
   140009052:	(bad)  
   140009053:	xor    eax,0x959f053d
   140009058:	jp     0x14000903d
   14000905a:	fisttp DWORD PTR [rsi]
   14000905c:	(bad)  
   14000905d:	scas   eax,DWORD PTR es:[rdi]
   14000905e:	(bad)  
   14000905f:	outs   dx,DWORD PTR ds:[rsi]
   140009060:	xchg   edx,eax
   140009061:	(bad)  
   140009063:	add    ebp,DWORD PTR [rsi]
   140009065:	(bad)  
   140009066:	lock sahf 
   140009068:	shl    BYTE PTR [rdx-0x60],0x4
   14000906c:	loope  0x140009025
   14000906e:	stos   DWORD PTR es:[rdi],eax
   14000906f:	xor    bl,ch
   140009071:	lea    esi,[rbx]
   140009073:	(bad)  
   140009074:	cmp    al,0x3b
   140009076:	or     al,BYTE PTR [rcx]
   140009078:	movsxd edx,esp
   14000907a:	loopne 0x1400090d0
   14000907c:	test   eax,0xbd111a54
   140009081:	xor    al,0x55
   140009083:	add    r10d,DWORD PTR [r8+0x7cd576a4]
   14000908a:	add    al,bh
   14000908c:	hlt    
   14000908d:	scas   al,BYTE PTR es:[rdi]
   14000908e:	(bad)  
   14000908f:	xor    DWORD PTR [rip+0x7b370074],esi        # 0x1bb379109
   140009095:	std    
   140009096:	jbe    0x140009075
   140009098:	push   rcx
   140009099:	(bad)  
   14000909a:	jle    0x1400090dc
   14000909c:	xchg   BYTE PTR [rcx],al
   14000909e:	test   al,0x1
   1400090a0:	mov    edi,0x5d33135d
   1400090a5:	sub    BYTE PTR [rsi-0xa],bl
   1400090a8:	ins    BYTE PTR es:[rdi],dx
   1400090a9:	sbb    al,BYTE PTR [rax]
   1400090ab:	sbb    dh,BYTE PTR [rsi]
   1400090ad:	punpckhbw mm0,QWORD PTR [rax]
   1400090b0:	sbb    eax,0x96fdb6c8
   1400090b5:	out    0xd3,eax
   1400090b7:	jle    0x14000905e
   1400090b9:	imul   eax,DWORD PTR [rbx],0xffffffaa
   1400090bc:	sbb    DWORD PTR [rdi+0x5c],0x6f
   1400090c0:	jrcxz  0x1400090bd
   1400090c2:	(bad)  
   1400090c3:	mov    edx,0xd03f01d2
   1400090c8:	test   eax,0xbf07a801
   1400090cd:	pop    rbp
   1400090ce:	push   rsi
   1400090cf:	(bad)  
   1400090d0:	rol    ebp,0x6b
   1400090d3:	jns    0x140009084
   1400090d5:	adc    eax,0x2b598087
   1400090da:	rex retf 0x29b7
   1400090de:	movabs ds:0x65c3affa0d948401,eax
   1400090e7:	rex.WRB movabs r14,0xc01d0d4c219e85a5
   1400090f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400090f2:	ja     0x140009131
   1400090f4:	mov    eax,0x9afabde
   1400090f9:	cld    
   1400090fa:	rex (bad) 
   1400090fc:	(bad)  
   1400090fd:	movabs al,ds:0x77387297d576fc36
   140009106:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009107:	(bad)  
   140009108:	(bad)
   14000910b:	test   al,0xd6
   14000910d:	jl     0x140009136
   14000910f:	mov    ebp,0x89bc0116
   140009114:	adc    al,0x9a
   140009116:	add    DWORD PTR [rip+0x42828020],ecx        # 0x18283113c
   14000911c:	(bad)  
   14000911e:	(bad)  
   14000911f:	cld    
   140009120:	fild   QWORD PTR [rbp-0x22]
   140009123:	(bad)  
   140009124:	fld    DWORD PTR [rcx]
   140009126:	rex.RXB sti 
   140009128:	pop    rsi
   140009129:	and    edi,eax
   14000912b:	add    DWORD PTR [rcx+0x3],edx
   14000912e:	rex.W paddb mm1,mm6
   140009132:	loop   0x14000915e
   140009134:	rcr    ebp,cl
   140009136:	js     0x14000912f
   140009138:	movabs ds:0x19954a581e6bf1e,eax
   140009141:	or     eax,0xf6643c0
   140009146:	(bad)  
   140009147:	and    DWORD PTR [rax+rbx*8],eax
   14000914a:	push   rdx
   14000914b:	sti    
   14000914c:	data16 fisttp WORD PTR [rsi+0x7c]
   140009150:	jp     0x140009129
   140009152:	(bad)  
   140009153:	out    0xa7,al
   140009155:	mov    ebp,0xfc19a5d
   14000915a:	mov    BYTE PTR [rax],bl
   14000915c:	rex jp 0x140009140
   14000915f:	mov    bh,0xcb
   140009161:	stos   BYTE PTR es:[rdi],al
   140009162:	adc    eax,0xc792bb9c
   140009167:	(bad)  
   140009168:	rex.WR fistp DWORD PTR [rip+0xffffffffcdadad8d]        # 0x10dae3efc
   14000916f:	retf   
   140009170:	stos   BYTE PTR es:[rdi],al
   140009171:	mov    fs,WORD PTR [rax+rdx*8]
   140009174:	add    BYTE PTR [rcx+rbx*8-0x80],cl
   140009178:	jg     0x14000913e
   14000917a:	cld    
   14000917b:	fbstp  TBYTE PTR [rdi+0x4f]
   14000917e:	lods   eax,DWORD PTR ds:[rsi]
   14000917f:	test   DWORD PTR [rsi-0x459333df],ebx
   140009185:	(bad)  
   140009186:	push   rbx
   140009187:	rex.XB (bad) 
   140009189:	std    
   14000918a:	mov    bh,0xdf
   14000918c:	rcl    BYTE PTR [rax],cl
   14000918e:	jle    0x1400091b0
   140009190:	lods   al,BYTE PTR ds:[rsi]
   140009191:	add    eax,ebp
   140009193:	add    DWORD PTR [rdi-0x5295740d],edi
   140009199:	or     eax,ebp
   14000919b:	(bad)  
   14000919d:	xor    DWORD PTR [rdx+0x2d],edi
   1400091a0:	fild   QWORD PTR [rsi+0x1d180089]
   1400091a6:	mov    BYTE PTR [rbp-0x54],ah
   1400091a9:	mov    edi,0x430944f8
   1400091ae:	enter  0x1a4,0x98
   1400091b2:	push   rbp
   1400091b3:	jp     0x1400091c0
   1400091b5:	clc    
   1400091b6:	(bad)  
   1400091b7:	and    eax,DWORD PTR [rax]
   1400091b9:	lock xor cl,0xa4
   1400091bd:	lahf   
   1400091be:	sbb    DWORD PTR [rsi+rsi*2],esi
   1400091c1:	xlat   BYTE PTR ds:[rbx]
   1400091c2:	or     eax,0xa6be7fb4
   1400091c7:	lock add esp,DWORD PTR [rcx+0xc]
   1400091cb:	rex
   1400091cc:	rex.WRXB clc 
   1400091ce:	popf   
   1400091cf:	(bad)  
   1400091d0:	cwde   
   1400091d1:	jmp    0x17cb67a9c
   1400091d6:	cs pop rsi
   1400091d8:	or     eax,0xd6003354
   1400091dd:	or     eax,0xfff343e1
   1400091e2:	mov    cl,0x24
   1400091e4:	(bad)  
   1400091e5:	or     al,0xda
   1400091e7:	sbb    eax,DWORD PTR [rax-0x29687a1d]
   1400091ed:	jnp    0x1400091df
   1400091ef:	jbe    0x1400091f8
   1400091f1:	mov    DWORD PTR [rbp-0x17],ebx
   1400091f4:	fiadd  WORD PTR [rax-0x339e7e27]
   1400091fa:	ins    BYTE PTR es:[rdi],dx
   1400091fb:	cld    
   1400091fc:	and    ah,BYTE PTR [rsi+0x7]
   1400091ff:	xchg   BYTE PTR [rbx+0x4969b46d],al
   140009205:	movsxd edi,eax
   140009207:	and    DWORD PTR [rax-0x7f26ffa],0x8cd6aa9d
   140009211:	neg    DWORD PTR [rbx]
   140009213:	mov    WORD PTR [rsi-0x15],ds
   140009216:	rex.B
   140009217:	gs mov edx,0xc0a5f51b
   14000921d:	idiv   eax
   14000921f:	and    al,0xd6
   140009221:	fist   WORD PTR [rdi+0x2f0c4658]
   140009227:	push   rdx
   140009228:	(bad)  
   140009229:	ret    0x6c00
   14000922c:	nop
   14000922d:	pop    rbx
   14000922e:	(bad)  
   14000922f:	mov    esi,0x7e89e30c
   140009234:	sub    BYTE PTR [rcx+rbx*2-0x4d],ch
   140009238:	add    eax,ebx
   14000923a:	clc    
   14000923b:	ins    BYTE PTR es:[rdi],dx
   14000923c:	(bad)  
   14000923d:	sbb    BYTE PTR [rbx-0x1f46c01a],dh
   140009243:	mov    ch,0xfd
   140009245:	push   rdx
   140009246:	pop    rdx
   140009247:	xchg   rsp,rax
   140009249:	lock add eax,DWORD PTR [rcx+0xc]
   14000924d:	rex sub eax,0x53cc9328
   140009253:	cdq    
   140009254:	(bad)  
   140009255:	jrcxz  0x140009221
   140009257:	cmc    
   140009258:	outs   dx,BYTE PTR ds:[rsi]
   140009259:	push   rsp
   14000925a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000925b:	jge    0x140009214
   14000925d:	(bad)  
   14000925e:	not    DWORD PTR [rbx+0x19]
   140009261:	rex.RX (bad) 
   140009263:	loope  0x1400092a8
   140009265:	lods   al,BYTE PTR ds:[rsi]
   140009266:	mov    edi,0x398a5975
   14000926b:	sub    BYTE PTR [rcx+0x0],ah
   14000926e:	out    0xf6,al
   140009270:	push   rdi
   140009271:	pop    rsi
   140009272:	jb     0x140009232
   140009274:	(bad)  
   140009275:	fiadd  DWORD PTR [rdx-0x720f17e5]
   14000927b:	mov    dh,0xd6
   14000927d:	adc    edi,esi
   14000927f:	data16 (bad) 
   140009282:	jne    0x140009264
   140009284:	in     eax,dx
   140009285:	and    bh,ah
   140009287:	fisub  WORD PTR [rdi-0x57fe505]
   14000928d:	push   rax
   14000928e:	es cdq 
   140009290:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009291:	xor    bl,BYTE PTR [rbp+0x6ee995c7]
   140009297:	mov    edi,cs
   140009299:	je     0x140009222
   14000929b:	lods   eax,DWORD PTR ds:[rsi]
   14000929c:	and    DWORD PTR [rax-0x57],edi
   14000929f:	ins    BYTE PTR es:[rdi],dx
   1400092a0:	(bad)  
   1400092a1:	outs   dx,DWORD PTR ds:[rsi]
   1400092a2:	cdq    
   1400092a3:	test   BYTE PTR [rbp-0x64670ccf],ah
   1400092a9:	out    0x4a,al
   1400092ab:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400092ac:	rcr    BYTE PTR [rax-0x1e],cl
   1400092af:	(bad)  
   1400092b0:	lock clc 
   1400092b2:	jrcxz  0x140009243
   1400092b4:	rex.WXB (bad) 
   1400092b6:	sub    edi,DWORD PTR [rdx+0x78c7a16b]
   1400092bc:	fxam   
   1400092be:	addr32 add eax,ebx
   1400092c1:	mov    eax,0x6e2761b1
   1400092c6:	imul   ch
   1400092c8:	in     al,dx
   1400092c9:	movabs al,ds:0x3f01f81f46244ef3
   1400092d2:	add    ecx,DWORD PTR [rax+0x27]
   1400092d5:	xchg   esp,eax
   1400092d6:	rex.WB out 0xa9,al
   1400092d9:	(bad)  
   1400092da:	mov    edi,?
   1400092dc:	and    al,0x4e
   1400092de:	int3   
   1400092df:	je     0x140009284
   1400092e1:	jb     0x1400092a0
   1400092e3:	sbb    edx,ebp
   1400092e5:	pop    rdx
   1400092e6:	push   rdi
   1400092e7:	nop
   1400092e8:	rex.WRX
   1400092e9:	sub    DWORD PTR [r10-0x19],r15d
   1400092ed:	popf   
   1400092ee:	ja     0x14000932a
   1400092f0:	jb     0x140009291
   1400092f2:	mov    esp,0xa5910bac
   1400092f7:	fld    DWORD PTR [rcx-0x88b539f]
   1400092fd:	jrcxz  0x1400092e5
   1400092ff:	xchg   BYTE PTR [rbp-0x4891a41a],bl
   140009305:	mov    ah,0x3e
   140009307:	(bad)  
   140009309:	mov    eax,esi
   14000930b:	retf   
   14000930c:	iret   
   14000930d:	and    esp,DWORD PTR [rdx+0x71d9e48c]
   140009313:	xlat   BYTE PTR ds:[rbx]
   140009314:	sbb    eax,0xeebb8ec
   140009319:	(bad)  
   14000931a:	cld    
   14000931b:	shl    DWORD PTR [rdx],0x9e
   14000931e:	mov    ah,0x1d
   140009320:	scas   eax,DWORD PTR es:[rdi]
   140009321:	pop    rsp
   140009322:	(bad)  
   140009323:	rex.RX (bad) 
   140009325:	pushw  0x5d
   140009328:	sbb    BYTE PTR [rdi+0x297d42e9],bl
   14000932e:	xchg   edx,ecx
   140009330:	mov    ah,0x5a
   140009332:	enter  0x72c5,0x35
   140009336:	mov    bl,0x1b
   140009338:	xlat   BYTE PTR ds:[rbx]
   140009339:	fnclex 
   14000933b:	(bad)  
   14000933c:	fadd   QWORD PTR [rax-0x6114e507]
   140009342:	and    DWORD PTR [rdi+rsi*2],ebp
   140009345:	ins    DWORD PTR es:[rdi],dx
   140009346:	pop    rax
   140009347:	cmp    edx,esi
   140009349:	and    al,0x91
   14000934b:	fimul  DWORD PTR [rcx]
   14000934d:	loope  0x1400092e6
   14000934f:	lahf   
   140009350:	rex.RXB
   140009351:	rex.R int3 
   140009353:	cmp    DWORD PTR [rbp-0x9],0xffffffac
   140009357:	add    bh,dh
   140009359:	mov    eax,0xd331377f
   14000935e:	lea    ebx,[rbx+0x4b]
   140009361:	mov    ecx,0x60008335
   140009366:	cwde   
   140009367:	test   BYTE PTR [rbp-0x16],ch
   14000936a:	jb     0x140009351
   14000936c:	jp     0x140009362
   14000936e:	js     0x1400093ba
   140009370:	int    0x50
   140009372:	cli    
   140009373:	loop   0x140009354
   140009375:	mov    ebx,0xa374217f
   14000937a:	es or  eax,0xa981609e
   140009380:	test   BYTE PTR [rdi-0x4e],bl
   140009383:	adc    al,0x86
   140009385:	push   rdx
   140009386:	xchg   ebp,eax
   140009387:	cmp    al,0xf7
   140009389:	outs   dx,BYTE PTR ds:[rsi]
   14000938a:	mov    edi,0x3760fc63
   14000938f:	mov    BYTE PTR [rax-0x70054187],al
   140009395:	and    DWORD PTR [rsi-0x4d],eax
   140009398:	fisubr DWORD PTR [rax]
   14000939a:	cli    
   14000939b:	xchg   BYTE PTR [rdx],cl
   14000939d:	loope  0x1400093b6
   14000939f:	mov    WORD PTR [rcx],fs
   1400093a1:	cld    
   1400093a2:	int3   
   1400093a3:	adc    eax,DWORD PTR [rcx+0x1e]
   1400093a6:	xchg   DWORD PTR [rdx+0x2fc20035],esp
   1400093ac:	sbb    BYTE PTR [rbx-0x8],al
   1400093af:	cdq    
   1400093b0:	(bad)  
   1400093b1:	(bad)  
   1400093b2:	cmp    al,0x2e
   1400093b4:	mov    cl,dh
   1400093b6:	add    BYTE PTR [rax],cl
   1400093b8:	mov    edi,0x67e10c60
   1400093bd:	sahf   
   1400093be:	or     dl,dh
   1400093c0:	js     0x1400093ea
   1400093c2:	sbb    al,BYTE PTR [rbx]
   1400093c4:	and    ah,bh
   1400093c6:	(bad)  
   1400093c7:	xor    DWORD PTR [rdi+rbx*4-0x1c37dd87],eax
   1400093ce:	and    edi,ecx
   1400093d0:	(bad)  
   1400093d1:	rex clc 
   1400093d3:	add    eax,0xf33f0863
   1400093d8:	rex.R xchg eax,eax
   1400093da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400093db:	(bad)  
   1400093dc:	in     al,0x1a
   1400093de:	add    cl,ah
   1400093e0:	(bad)  
   1400093e1:	mov    WORD PTR [rcx],fs
   1400093e3:	cld    
   1400093e4:	int3   
   1400093e5:	adc    eax,DWORD PTR [rcx-0x62]
   1400093e8:	add    BYTE PTR [rdx-0xa],cl
   1400093eb:	fld    QWORD PTR [rax+0x30bfdf84]
   1400093f1:	ret    0x3ccf
   1400093f4:	adc    DWORD PTR [rbx],ebp
   1400093f6:	cmp    DWORD PTR [rbx],eax
   1400093f8:	and    ah,bh
   1400093fa:	inc    BYTE PTR [rbp-0x761981ef]
   140009400:	rex.B leave 
   140009402:	sbb    BYTE PTR [rax],al
   140009404:	loope  0x1400093fd
   140009406:	(bad)  
   140009407:	mov    eax,?
   140009409:	xor    ecx,DWORD PTR [rdi+0x4c]
   14000940c:	mov    bl,bh
   14000940e:	add    BYTE PTR [rax],cl
   140009410:	mov    edi,0x9f84617f
   140009415:	jns    0x140009479
   140009417:	push   rsp
   140009418:	mov    esp,0xfdf84006
   14000941d:	or     ecx,DWORD PTR [rbx-0x406681f3]
   140009423:	adc    DWORD PTR [rdx+rax*8+0x411e5ba2],0xffffffc5
   14000942b:	add    BYTE PTR [edi+ebx*8-0x303dcf41],al
   140009433:	cmp    al,0x9
   140009435:	sub    BYTE PTR [rsi],bl
   140009437:	add    esp,DWORD PTR [rax]
   140009439:	cld    
   14000943a:	inc    BYTE PTR [rbp+0x49e67e11]
   140009440:	xor    QWORD PTR [rsi+rax*1],rbp
   140009444:	rex.WX sbb dil,BYTE PTR [rcx+r8*8]
   140009448:	add    cl,BYTE PTR [rcx]
   14000944a:	mov    edi,0x96e8b07e
   14000944f:	rex.RXB (bad) 
   140009451:	and    bl,BYTE PTR [rsi+0xc]
   140009454:	xchg   esp,eax
   140009455:	xor    al,0x78
   140009457:	(bad)  
   140009458:	add    eax,0x60fd7e12
   14000945d:	shr    DWORD PTR [rip+0xffffffffb845248f],1        # 0xf845b8f2
   140009463:	sbb    BYTE PTR [rax],ch
   140009465:	imul   esi,eax,0xfc240b04
   14000946b:	cli    
   14000946c:	shl    DWORD PTR [rdx-0x7576e1a5],0x68
   140009473:	xor    DWORD PTR [rax-0x2e],edx
   140009476:	loopne 0x140009481
   140009478:	(bad)  
   140009479:	cwde   
   14000947a:	adc    eax,0xd2cafdf8
   14000947f:	or     eax,0x48f2dd16
   140009484:	push   rsi
   140009485:	add    al,0x8b
   140009487:	adc    DWORD PTR [rdx+0x40b04f06],0x2c1fafc2
   140009491:	mov    edx,0x924089e5
   140009496:	(bad)  
   140009497:	add    esp,DWORD PTR [rip+0xffffffff81609e0d]        # 0xc16132aa
   14000949d:	test   BYTE PTR [rdi+0x3f],bl
   1400094a0:	pop    rax
   1400094a1:	je     0x14000946e
   1400094a3:	adc    edx,DWORD PTR [rcx+0x240c5e12]
   1400094a9:	cmp    eax,DWORD PTR [rsi+0x2fc10bf0]
   1400094af:	test   DWORD PTR [rdx],0x9e638a04
   1400094b5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400094b6:	xchg   esp,eax
   1400094b7:	loopne 0x14000951b
   1400094b9:	and    cl,bl
   1400094bb:	xor    DWORD PTR [rdi+rbx*4+0x27986bf0],eax
   1400094c2:	(bad)  
   1400094c3:	and    eax,0x764818b4
   1400094c8:	or     al,0xe1
   1400094ca:	(bad)  
   1400094cb:	cld    
   1400094cc:	sbb    ah,dh
   1400094ce:	mov    DWORD PTR [rcx+0x9],eax
   1400094d1:	sub    al,0x6
   1400094d3:	xchg   edx,eax
   1400094d4:	sbb    eax,0xbf09f843
   1400094d9:	xchg   BYTE PTR [rcx+0x3c],bh
   1400094dc:	ror    eax,cl
   1400094de:	int    0x13
   1400094e0:	repz (bad) 
   1400094e2:	and    cl,bl
   1400094e4:	xor    DWORD PTR [rdi+rbx*4-0x38679410],eax
   1400094eb:	xor    ecx,DWORD PTR [rbp+0x2e313cfc]
   1400094f1:	(bad)  
   1400094f2:	xchg   edx,eax
   1400094f3:	sbb    eax,0xbf09f843
   1400094f8:	xchg   BYTE PTR [rcx+0x3c],bh
   1400094fb:	rol    DWORD PTR [rbx+rdx*4+0x27],cl
   1400094ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009500:	(bad)
   140009503:	movsxd ecx,DWORD PTR [rax]
   140009505:	mov    edi,0x4b25f85c
   14000950a:	(bad)  
   14000950b:	sub    BYTE PTR [rip+0xfffffffff6501f85],dh        # 0x13650b496
   140009511:	int    0x40
   140009513:	xchg   edx,eax
   140009514:	or     esp,DWORD PTR [rsp+rdi*8]
   140009517:	icebp  
   140009518:	rex.WB (bad) 
   14000951a:	sub    BYTE PTR [rip+0xfffffffff2501f86],dh        # 0x13250b4a6
   140009520:	int    0x40
   140009522:	xchg   edx,eax
   140009523:	or     esp,DWORD PTR [rsp+rdi*8]
   140009526:	icebp  
   140009527:	rex.WB (bad) 
   140009529:	sub    BYTE PTR [rip+0xffffffffee501f87],dh        # 0x12e50b4b6
   14000952f:	int    0x40
   140009531:	xchg   edx,eax
   140009532:	or     esp,DWORD PTR [rsp+rdi*8]
   140009535:	icebp  
   140009536:	rex.WB (bad) 
   140009538:	sub    BYTE PTR [rbx],dh
   14000953a:	add    BYTE PTR [rdi],bh
   14000953c:	movabs al,ds:0x25f8481724819bd4
   140009545:	out    0x17,eax
   140009547:	sub    DWORD PTR [rdi],ebp
   140009549:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000954a:	push   rax
   14000954b:	data16 add al,0x7e
   14000954e:	rex cdq 
   140009550:	(bad)  
   140009551:	add    ecx,DWORD PTR [rcx+0x2e]
   140009554:	nop
   140009555:	lock rex.WXB (bad) 
   140009558:	(bad)  
   140009559:	push   rdx
   14000955a:	pop    rsi
   14000955b:	rex.WX movabs rax,ds:0x92066f1280fc10cc
   140009565:	pop    rsp
   140009566:	and    cl,ah
   140009568:	xchg   edi,eax
   140009569:	pushf  
   14000956a:	pop    rdi
   14000956b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000956c:	mov    esp,0x31994294
   140009571:	clc    
   140009572:	add    DWORD PTR [rbp+0x7e110317],esp
   140009578:	ret    0x61af
   14000957b:	(bad)  
   14000957c:	iret   
   14000957d:	xor    al,0xc9
   14000957f:	je     0x140009565
   140009581:	sub    BYTE PTR [rdx+0x13f08818],bh
   140009587:	jle    0x140009596
   140009589:	repz js 0x140009532
   14000958c:	rex.WB scas al,BYTE PTR es:[rdi]
   14000958e:	(bad)  
   14000958f:	push   rdi
   140009590:	rol    ebp,0x40
   140009593:	test   BYTE PTR [rdi-0x38679410],bl
   140009599:	xor    ecx,DWORD PTR [rbp-0x4e]
   14000959c:	rex.XB cmp BYTE PTR [r10-0x3ddf9d3],cl
   1400095a3:	test   BYTE PTR [rdi-0x3d],bl
   1400095a6:	cmp    al,0x9e
   1400095a8:	imul   edx,DWORD PTR [rdx+0x6a501f85],0x27e11031
   1400095b2:	cld    
   1400095b3:	sbb    ah,dh
   1400095b5:	icebp  
   1400095b6:	rex.WR xchg rbx,rax
   1400095b8:	cmp    al,0xfc
   1400095ba:	xor    BYTE PTR [rdx],0x8b
   1400095bd:	or     DWORD PTR [rax],0x30d7e13f
   1400095c3:	(bad)  
   1400095c4:	sbb    dh,BYTE PTR [eip+0x589407e0]        # 0x198949dab
   1400095cb:	or     al,0x44
   1400095cd:	clc    
   1400095ce:	or     DWORD PTR [rdi-0x2cc3867a],edi
   1400095d4:	test   al,0x3
   1400095d6:	(bad)  
   1400095d7:	nop
   1400095d8:	clc    
   1400095d9:	(bad)  
   1400095da:	and    dl,al
   1400095dc:	rex.WRXB clc 
   1400095de:	xor    eax,0x4699e3cc
   1400095e3:	sub    eax,0x174481f8
   1400095e8:	add    edx,DWORD PTR [rcx]
   1400095ea:	jle    0x1400095ae
   1400095ec:	scas   eax,DWORD PTR es:[rdi]
   1400095ed:	(bad)  
   1400095ee:	(bad)  
   1400095ef:	iret   
   1400095f0:	xor    al,0xea
   1400095f2:	ror    DWORD PTR [rdi],0x24
   1400095f5:	mov    dh,0x18
   1400095f7:	mov    al,dh
   1400095f9:	adc    edi,DWORD PTR [rsi+0xd]
   1400095fc:	repz js 0x1400095a5
   1400095ff:	push   rcx
   140009600:	adc    edi,DWORD PTR [rsi+0x20]
   140009603:	xchg   ecx,eax
   140009604:	(bad)
   140009607:	(bad)  
   140009608:	jno    0x140009602
   14000960a:	std    
   14000960b:	outs   dx,BYTE PTR ds:[rsi]
   14000960c:	rex.W frstor [rax-0x754103dc]
   140009613:	jns    0x140009646
   140009615:	adc    cl,ah
   140009617:	(bad)  
   140009618:	cld    
   140009619:	sbb    ah,dh
   14000961b:	icebp  
   14000961c:	rex.WR movabs ds:0x3f08818bac40fc36,rax
   140009626:	loope  0x1400095ff
   140009628:	xor    BYTE PTR [rdi-0x1e0ae599],cl
   14000962e:	(bad)  
   14000962f:	(bad)  
   140009630:	fwait
   140009631:	(bad)  
   140009632:	rex clc 
   140009634:	xchg   ebp,eax
   140009635:	xchg   BYTE PTR [rdi+0x6a],bl
   140009638:	and    dl,BYTE PTR [rcx-0x3865ad1e]
   14000963e:	xor    ecx,DWORD PTR [rbp+0x3a]
   140009641:	loopne 0x14000964a
   140009643:	(bad)  
   140009645:	add    dl,al
   140009647:	rex.WRXB clc 
   140009649:	std    
   14000964a:	mov    cl,BYTE PTR [rbx+0x69]
   14000964d:	(bad)  
   14000964e:	iret   
   14000964f:	xor    al,0xe9
   140009651:	sbb    DWORD PTR [rdi],0x800dc88
   140009657:	(bad)  
   140009658:	loope  0x140009651
   14000965a:	sub    ebp,DWORD PTR [rsi]
   14000965c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000965d:	jns    0x14000969b
   14000965f:	shl    DWORD PTR [rbx+rcx*1+0x352207e],cl
   140009666:	and    ah,bh
   140009668:	test   bh,bl
   14000966a:	scas   eax,DWORD PTR es:[rdi]
   14000966b:	mov    eax,0x4cf1e694
   140009670:	xchg   ebx,eax
   140009671:	(bad)  
   140009672:	cmp    al,0x11
   140009674:	sbb    DWORD PTR [rax],eax
   140009676:	loope  0x14000969f
   140009678:	cld    
   140009679:	jle    0x140009640
   14000967b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000967c:	xor    al,0x8f
   14000967e:	addr32 (bad) 
   140009680:	hlt    
   140009681:	out    0x89,al
   140009683:	rol    BYTE PTR [rax],0x8
   140009686:	(bad)  
   140009687:	loope  0x140009680
   140009689:	sub    ebp,DWORD PTR [rsi]
   14000968b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000968c:	jns    0x1400096ca
   14000968e:	shl    DWORD PTR [rbx+rdi*1+0x2003648f],cl
   140009695:	cld    
   140009696:	jmp    0x148b2f61f
   14000969b:	jg     0x140009707
   14000969d:	repnz sub BYTE PTR [rdi+riz*1-0x3de727a0],bh
   1400096a5:	rex.WRXB clc 
   1400096a7:	and    ecx,eax
   1400096a9:	jrcxz  0x140009644
   1400096ab:	rex.RX (bad) 
   1400096ad:	cmp    al,0x52
   1400096af:	or     eax,0x18babf20
   1400096b4:	cld    
   1400096b5:	fs ret 0x372f
   1400096b9:	(bad)  
   1400096ba:	loope  0x140009653
   1400096bc:	lahf   
   1400096bd:	(bad)  
   1400096be:	xor    ecx,DWORD PTR [rbp+0x72]
   1400096c1:	jns    0x1400096ed
   1400096c3:	xlat   BYTE PTR ds:[rbx]
   1400096c4:	jnp    0x14000966a
   1400096c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400096c7:	nop
   1400096c8:	push   0x0
   1400096ca:	fwait
   1400096cb:	xchg   edi,eax
   1400096cc:	(bad)  
   1400096cd:	(bad)  
   1400096ce:	fmul   DWORD PTR [rcx+0x7e6e5f84]
   1400096d4:	ret    0x3f2f
   1400096d7:	(bad)  
   1400096d8:	sbb    bh,BYTE PTR [ebp+0x27b628f2]
   1400096df:	(bad)  
   1400096e0:	fcomp  DWORD PTR [rax]
   1400096e2:	ret    0x742f
   1400096e5:	movabs ds:0x40f33a7f08b7bec8,eax
   1400096ee:	test   eax,0xc6c3013d
   1400096f3:	adc    BYTE PTR [rsi-0x3e],bh
   1400096f6:	(bad)  
   1400096f7:	rex.B (bad) 
   1400096f9:	iret   
   1400096fa:	xor    al,0x9a
   1400096fc:	in     eax,0x31
   1400096fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400096ff:	enter  0x809e,0x61
   140009703:	movsxd ecx,DWORD PTR [rax]
   140009705:	(bad)  
   140009706:	loope  0x140009697
   140009708:	and    BYTE PTR [rdi-0xd32e599],cl
   14000970e:	fsub   DWORD PTR [rax+rax*8+0x6361809e]
   140009715:	or     BYTE PTR [rdi],bh
   140009717:	loope  0x1400096a8
   140009719:	and    BYTE PTR [rdi-0xd32e599],cl
   14000971f:	cmp    BYTE PTR [rax+rsi*8+0x6361809e],dl
   140009726:	or     BYTE PTR [rdi],bh
   140009728:	loope  0x1400096b9
   14000972a:	and    BYTE PTR [rdi-0xd32e599],cl
   140009730:	mov    eax,0xe030ee48
   140009735:	sbb    eax,0xe12030c7
   14000973a:	xchg   edi,eax
   14000973b:	fwait
   14000973c:	lahf   
   14000973d:	lock retf 
   14000973f:	iret   
   140009740:	jrcxz  0x1400096db
   140009742:	rex.RX int 0x3c
   140009745:	cmc    
   140009746:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009747:	pushf  
   140009748:	(bad)  
   140009749:	hlt    
   14000974a:	xor    cl,BYTE PTR [rax+riz*2]
   14000974d:	int3   
   14000974e:	cli    
   14000974f:	(bad)  
   140009750:	repz sar bh,cl
   140009753:	scas   al,BYTE PTR es:[rdi]
   140009754:	(bad)  
   140009755:	and    eax,0x13f372fc
   14000975a:	jle    0x140009755
   14000975c:	jns    0x14000979a
   14000975e:	shr    DWORD PTR [rax-0x1d9865],cl
   140009764:	mov    edx,0x9dcb1fed
   140009769:	pop    rsi
   14000976a:	(bad)  
   14000976b:	or     al,0x3
   14000976d:	cwde   
   14000976e:	imul   edi,DWORD PTR [rcx],0x42
   140009771:	clc    
   140009772:	in     eax,0xe6
   140009774:	(bad)  
   140009775:	cld    
   140009776:	bnd repz js 0x140009720
   14000977a:	shr    DWORD PTR [rdi+rcx*2],1
   14000977d:	sbb    eax,ebp
   14000977f:	mov    esp,0x18d86027
   140009784:	ret    0xf84f
   140009787:	and    ecx,eax
   140009789:	jrcxz  0x140009724
   14000978b:	rex.RX mov bl,0x3c
   14000978e:	add    DWORD PTR [rsi*4-0xcbcff7],esp
   140009795:	rex.WB clc 
   140009797:	push   0x4313efc2
   14000979c:	clc    
   14000979d:	or     DWORD PTR [rdi-0x4d],edi
   1400097a0:	sbb    al,0x53
   1400097a2:	add    edi,0x2a0bcebc
   1400097a8:	sbb    DWORD PTR [rsi],eax
   1400097aa:	push   rax
   1400097ab:	adc    ecx,DWORD PTR [rsi+0x313efc24]
   1400097b1:	test   BYTE PTR [rdi+0x3895b7f0],bl
   1400097b7:	jnp    0x14000975f
   1400097b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400097ba:	test   BYTE PTR [rcx],0xf4
   1400097bd:	scas   eax,DWORD PTR es:[rdi]
   1400097be:	jl     0x1400097d6
   1400097c0:	cmp    al,0x8a
   1400097c2:	lock sti 
   1400097c4:	(bad)  
   1400097c5:	adc    BYTE PTR [rsi-0x3e],bh
   1400097c8:	out    dx,eax
   1400097c9:	scas   al,BYTE PTR es:[rdi]
   1400097ca:	push   0xffffffffffffffad
   1400097cc:	or     ecx,ebx
   1400097ce:	(bad)  
   1400097cf:	(bad)  
   1400097d0:	mov    bh,0x90
   1400097d2:	xchg   edx,eax
   1400097d3:	fiadd  DWORD PTR [rax+rbp*8]
   1400097d6:	pop    rdi
   1400097d7:	(bad)  
   1400097d8:	js     0x140009817
   1400097da:	test   bh,bl
   1400097dc:	(bad)  
   1400097dd:	xchg   al,dh
   1400097df:	adc    edi,DWORD PTR [rsi+0x6f]
   1400097e2:	push   rbp
   1400097e3:	outs   dx,DWORD PTR ds:[rsi]
   1400097e4:	xor    al,0x21
   1400097e6:	stos   DWORD PTR es:[rdi],eax
   1400097e7:	adc    r12d,DWORD PTR [rax-0x7fb292b7]
   1400097ee:	lock sti 
   1400097f0:	(bad)  
   1400097f1:	adc    BYTE PTR [rsi-0x3e],bh
   1400097f4:	out    dx,eax
   1400097f5:	sub    eax,0xd452fc07
   1400097fa:	jno    0x140009785
   1400097fc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400097fd:	push   rdx
   1400097fe:	test   eax,0xdbecff6c
   140009803:	or     al,0x20
   140009805:	cld    
   140009806:	xor    DWORD PTR ds:[rdi+rbx*4+0x5aabfbf0],eax
   14000980e:	imul   ebx,DWORD PTR [rdx-0x613d2ffd],0xffffff88
   140009815:	fs pop rcx
   140009817:	retf   0x63da
   14000981a:	jg     0x1400097ec
   14000981c:	ds sbb eax,ecx
   14000981f:	cs ret 0x13ef
   140009823:	rex.XB clc 
   140009825:	or     DWORD PTR [rdi+0x7b],edi
   140009828:	cmp    DWORD PTR [rsi],esp
   14000982a:	add    DWORD PTR [rbp-0x24],esi
   14000982d:	inc    BYTE PTR [rdi]
   14000982f:	in     al,0x19
   140009831:	rcr    BYTE PTR [rdx+0x5b],0xa4
   140009835:	(bad)  
   140009836:	ins    DWORD PTR es:[rdi],dx
   140009837:	push   rdi
   140009838:	and    dl,al
   14000983a:	out    dx,eax
   14000983b:	adc    esp,DWORD PTR [rbx+0x2571fc00]
   140009841:	and    bh,ah
   140009843:	sbb    eax,0xb80d31c9
   140009848:	jrcxz  0x140009840
   14000984a:	(bad)  
   14000984b:	and    bh,cl
   14000984d:	add    BYTE PTR [rsi],ah
   14000984f:	lods   eax,DWORD PTR ds:[rsi]
   140009850:	(bad)  
   140009851:	pop    rdx
   140009852:	out    0x2,al
   140009854:	adc    BYTE PTR [rsi-0x61],bh
   140009857:	sbb    dl,al
   140009859:	rex.WRXB clc 
   14000985b:	or     ebx,0x31
   14000985e:	(bad)  
   14000985f:	(bad)  
   140009860:	push   rdx
   140009861:	rex.RX cdq 
   140009863:	mov    dl,0xc
   140009865:	(bad)  
   140009866:	retf   0xa1fa
   140009869:	test   eax,0xfbf0800f
   14000986e:	(bad)  
   14000986f:	adc    BYTE PTR [rsi-0x3e],bh
   140009872:	(bad)  
   140009873:	rex.WRX mov fs,WORD PTR [rcx]
   140009876:	shr    BYTE PTR [rcx],0xaf
   140009879:	repz ret 0x9648
   14000987d:	add    DWORD PTR [rbp+rbp*4-0x186805e1],edx
   140009884:	mov    ebp,cs
   140009886:	or     DWORD PTR [r15+0x27e10c4f],edi
   14000988d:	cld    
   14000988e:	loope  0x1400098e4
   140009890:	pop    rdi
   140009891:	retf   0x4739
   140009894:	add    edx,ecx
   140009896:	xor    cl,dl
   140009898:	xchg   ebp,eax
   140009899:	fiadd  WORD PTR [rdi]
   14000989b:	add    BYTE PTR [rax],al
   14000989d:	fwait
   14000989e:	(bad)  
   14000989f:	mov    ebp,0xfc250736
   1400098a4:	rex.WX shr dil,0x79
   1400098a8:	or     eax,0x3cd55f84
   1400098ad:	jrcxz  0x1400098e2
   1400098af:	jns    0x140009898
   1400098b1:	and    DWORD PTR [rbp-0x6],esi
   1400098b4:	add    BYTE PTR [rdx-0x5b],cl
   1400098b7:	rcr    BYTE PTR [rsp+rbp*2],cl
   1400098ba:	mov    ebp,0x26175b92
   1400098bf:	pop    rbp
   1400098c0:	(bad)  
   1400098c1:	and    bh,ah
   1400098c3:	test   BYTE PTR [rdi],bh
   1400098c5:	(bad)  
   1400098c6:	cmp    al,0x9e
   1400098c8:	imul   esi,esp,0xbfe573ca
   1400098ce:	fwait
   1400098cf:	or     al,0x60
   1400098d1:	(bad)  
   1400098d2:	fs scas al,BYTE PTR es:[rdi]
   1400098d4:	movsxd ecx,ecx
   1400098d6:	pushf  
   1400098d7:	pop    rcx
   1400098d8:	mov    al,0xe6
   1400098da:	sub    QWORD PTR [rip+0x7e1383db],0xffffffffffffffb5        # 0x1be141cbd
   1400098e2:	loope  0x14000987b
   1400098e4:	popf   
   1400098e5:	(bad)  
   1400098e6:	hlt    
   1400098e7:	(bad)  
   1400098e8:	xchg   edx,eax
   1400098e9:	repz imul edx,DWORD PTR [rsi-0x3073f2f9],0x34
   1400098f1:	or     eax,0xfa794a01
   1400098f6:	add    esi,DWORD PTR [rdx+0xd]
   1400098f9:	loopne 0x140009938
   1400098fb:	jmp    0x140009884
   1400098fd:	rcr    ebx,0x76
   140009900:	add    esp,DWORD PTR [rax]
   140009902:	cld    
   140009903:	test   bh,bl
   140009905:	test   DWORD PTR [rbx],0xcb35f9c9
   14000990b:	movsxd edi,esi
   14000990d:	fisub  WORD PTR [rsi]
   14000990f:	(bad)  
   140009910:	fwait
   140009911:	add    bh,ch
   140009913:	mov    ecx,0x99202a9e
   140009918:	(bad)  
   140009919:	push   rax
   14000991a:	mov    dh,0x7e
   14000991c:	pop    rax
   14000991d:	jmp    0x140009927
   14000991f:	and    al,0xfc
   140009921:	test   bh,bl
   140009923:	dec    DWORD PTR [rbx]
   140009925:	leave  
   140009926:	stc    
   140009927:	xor    eax,0xdefe63cb
   14000992c:	movabs ds:0xc000026a220400ea,al
   140009935:	(bad)  
   140009936:	test   DWORD PTR [rdi-0x44],ecx
   140009939:	(bad)  
   14000993a:	and    edi,esp
   14000993c:	mov    dl,0xf3
   14000993e:	enter  0x6be,0xa1
   140009942:	cmp    al,0xa1
   140009944:	mov    edi,0xb35f9c90
   140009949:	cmp    al,0xb6
   14000994b:	fistp  WORD PTR [rbx-0x2b3f1435]
   140009951:	imul   eax,DWORD PTR [rdx],0xffffff98
   140009954:	popf   
   140009955:	adc    ch,BYTE PTR [rbx+0x17]
   140009958:	out    0x69,al
   14000995a:	add    BYTE PTR [rdi+rbx*2-0x2826e192],al
   140009961:	and    BYTE PTR [rdi+riz*1-0xc6de80c],dl
   140009968:	imul   edx,DWORD PTR [rsi+0x737bf1c7],0x6e
   14000996f:	add    ah,BYTE PTR [rdx]
   140009971:	stos   DWORD PTR es:[rdi],eax
   140009972:	add    edx,DWORD PTR [rax]
   140009974:	add    BYTE PTR [rdx-0x3a],bl
   140009977:	(bad)  
   140009978:	cmp    dl,BYTE PTR [rcx+rbx*1-0x40]
   14000997c:	add    eax,DWORD PTR [rax]
   14000997e:	jo     0x1400099f8
   140009980:	fisttp DWORD PTR [rsi+rdi*8]
   140009983:	jmp    0x14000991a
   140009985:	xchg   DWORD PTR [rip+0xffffffffa5454f17],esp        # 0xe545e8a2
   14000998b:	fsubr  st(1),st
   14000998d:	shl    DWORD PTR [rdi+rbp*1-0x6a2f0d7f],1
   140009994:	loop   0x1400099c7
   140009996:	add    bl,ah
   140009998:	(bad)  
   140009999:	(bad)  
   14000999a:	mov    dl,0xcc
   14000999c:	mov    dl,0x65
   14000999e:	scas   eax,DWORD PTR es:[rdi]
   14000999f:	(bad)  
   1400099a0:	cld    
   1400099a1:	sar    dl,1
   1400099a3:	(bad)  
   1400099a4:	jl     0x140009a22
   1400099a6:	sbb    al,0xf5
   1400099a8:	jp     0x140009a07
   1400099aa:	jb     0x14000999d
   1400099ac:	adc    al,0x95
   1400099ae:	sub    eax,0x8c75ebd5
   1400099b3:	(bad)  
   1400099b4:	(bad)  
   1400099b5:	fisttp DWORD PTR [rdi]
   1400099b7:	rex.WB jmp 0x1400099ba
   1400099ba:	add    al,0xe4
   1400099bc:	sbb    eax,DWORD PTR [rax-0x2f]
   1400099bf:	(bad)  
   1400099c0:	movabs eax,ds:0x25b2a29e2e48a952
   1400099c9:	(bad)  
   1400099ca:	xchg   dl,cl
   1400099cc:	xor    cl,bl
   1400099ce:	xchg   edi,eax
   1400099cf:	push   0x0
   1400099d1:	(bad)  
   1400099d2:	jle    0x140009954
   1400099d4:	mov    edx,DWORD PTR [rdi]
   1400099d6:	(bad)  
   1400099d7:	retf   0x9e2c
   1400099da:	movabs ds:0x80ffdb5243072732,al
   1400099e3:	cld    
   1400099e4:	ds add al,al
   1400099e7:	(bad)  
   1400099e8:	(bad)  
   1400099ea:	mov    ecx,0xde340bf4
   1400099ef:	(bad)  
   1400099f0:	mov    dh,0x9e
   1400099f2:	and    DWORD PTR [rbx+0x71544f53],esi
   1400099f8:	jne    0x140009a56
   1400099fa:	sub    DWORD PTR [rdx-0x30192639],ebx
   140009a00:	std    
   140009a01:	rex.RB sar BYTE PTR [r14],0x80
   140009a05:	mov    eax,0x950878d6
   140009a0a:	xchg   ebp,eax
   140009a0b:	jo     0x1400099d4
   140009a0d:	outs   dx,DWORD PTR ds:[rsi]
   140009a0e:	add    al,0xc3
   140009a10:	ficomp WORD PTR [rdi-0x67]
   140009a13:	mov    ebp,0x23f5fe8c
   140009a18:	adc    DWORD PTR gs:[rdx+0x7c],0x1bbc515
   140009a20:	fbstp  TBYTE PTR [rsi+rdi*2-0x678d2958]
   140009a27:	test   al,0x3a
   140009a29:	push   rdx
   140009a2a:	adc    dh,bh
   140009a2c:	ins    BYTE PTR es:[rdi],dx
   140009a2d:	in     eax,0x21
   140009a2f:	cld    
   140009a30:	ret    0x30d7
   140009a33:	mov    eax,0x9dff4552
   140009a38:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009a39:	(bad)  
   140009a3a:	(bad)  
   140009a3b:	fwait
   140009a3c:	pop    rsi
   140009a3d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009a3e:	mov    ecx,DWORD PTR [rdx-0x46]
   140009a41:	add    DWORD PTR [rax+0x5dad14db],ebx
   140009a47:	cmc    
   140009a48:	call   0xc325f5a2
   140009a4d:	lock sub ecx,DWORD PTR [edi]
   140009a51:	loope  0x140009a42
   140009a53:	call   0x13edd1072
   140009a58:	lods   eax,DWORD PTR ds:[rsi]
   140009a59:	std    
   140009a5a:	call   0x1002e26fb
   140009a5f:	pushf  
   140009a60:	mov    ch,dl
   140009a62:	in     eax,dx
   140009a63:	shr    BYTE PTR [rbx-0xb],0xfe
   140009a67:	mov    edx,DWORD PTR [rdi-0x33]
   140009a6a:	cmp    esp,ecx
   140009a6c:	test   BYTE PTR [rdi],bh
   140009a6e:	pop    rbx
   140009a6f:	jns    0x140009a79
   140009a71:	jg     0x140009a3a
   140009a73:	xlat   BYTE PTR ds:[rbx]
   140009a74:	mov    al,0x7d
   140009a76:	test   eax,0xda5c00c9
   140009a7b:	rcr    BYTE PTR [rbp+0x58032a2b],cl
   140009a81:	sbb    ebp,DWORD PTR [rdx-0x5e895768]
   140009a87:	cmp    ah,BYTE PTR [rdi]
   140009a89:	repnz rex.RX push rbx
   140009a8c:	add    eax,0x21e6626e
   140009a91:	cld    
   140009a92:	movabs ds:0x61a9dff435e1d41,al
   140009a9b:	push   rdi
   140009a9c:	stos   BYTE PTR es:[rdi],al
   140009a9d:	imul   BYTE PTR [rdi-0x5b]
   140009aa0:	(bad)  
   140009aa1:	call   FWORD PTR [rcx-0x76]
   140009aa4:	mov    esp,0x9a380006
   140009aa9:	add    DWORD PTR [rcx-0x33b23f5c],eax
   140009aaf:	cmp    al,0x84
   140009ab1:	pop    rdi
   140009ab2:	xor    al,0x48
   140009ab4:	ret    0x6c35
   140009ab7:	outs   dx,DWORD PTR ds:[rsi]
   140009ab8:	scas   al,BYTE PTR es:[rdi]
   140009ab9:	inc    BYTE PTR [rbx]
   140009abb:	imul   ebp,DWORD PTR [rdx+0x15439801],0xee7c176b
   140009ac5:	rex.WX sbb BYTE PTR [rbx],al
   140009ac8:	push   rax
   140009ac9:	loopne 0x140009af1
   140009acb:	data16 (bad) 
   140009acd:	ret    0x1a2f
   140009ad0:	and    al,0xe9
   140009ad2:	sbb    ch,dh
   140009ad4:	pop    rsi
   140009ad5:	cld    
   140009ad6:	sar    dh,1
   140009ad8:	mov    cl,0x28
   140009ada:	jnp    0x140009ad4
   140009adc:	iret   
   140009add:	push   rdx
   140009ade:	push   rsp
   140009adf:	xor    eax,0x63d6c000
   140009ae4:	cmp    DWORD PTR [rcx-0x13],edx
   140009ae7:	rex.X mov bpl,0x16
   140009aea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009aeb:	sbb    DWORD PTR [rax+0x3ccc4dc0],esp
   140009af1:	test   BYTE PTR [rdi+0x34],bl
   140009af4:	rex.W shl BYTE PTR [rip+0xffffffffa5ff54b8],cl        # 0xe5ffefb3
   140009afb:	idiv   esi
   140009afd:	pop    rbx
   140009afe:	mov    dl,dl
   140009b00:	add    BYTE PTR [rdx-0x343ad356],bl
   140009b06:	sub    eax,0x521c9a2b
   140009b0b:	loopne 0x140009b33
   140009b0d:	data16 (bad) 
   140009b0f:	ret    0x1a2f
   140009b12:	and    al,0xf1
   140009b14:	sbb    dh,BYTE PTR [rsi+0x2d]
   140009b17:	cld    
   140009b18:	fidivr DWORD PTR [rcx+0x28]
   140009b1b:	xchg   edx,eax
   140009b1c:	(bad)  
   140009b1d:	(bad)  
   140009b1e:	adc    BYTE PTR [rcx-0x69aa67ff],ah
   140009b24:	adc    ebx,ebp
   140009b26:	mov    bl,0x7f
   140009b28:	(bad)  
   140009b29:	add    BYTE PTR [rdx],0x37
   140009b2c:	xor    ebx,esi
   140009b2e:	adc    BYTE PTR [rsi-0x2f],bh
   140009b31:	and    cl,cl
   140009b33:	xlat   BYTE PTR ds:[rbx]
   140009b34:	mov    al,0xfd
   140009b36:	not    BYTE PTR [rbp-0x5]
   140009b39:	(bad)  
   140009b3a:	xchg   ecx,eax
   140009b3b:	test   al,0xaa
   140009b3d:	inc    DWORD PTR [rax-0x4c]
   140009b40:	xor    eax,0x2931c000
   140009b45:	test   al,0x32
   140009b47:	fucomp st(5)
   140009b49:	jb     0x140009ad5
   140009b4b:	add    dh,BYTE PTR [rdi]
   140009b4d:	xor    ebx,esi
   140009b4f:	adc    BYTE PTR [rsi-0x2f],bh
   140009b52:	and    cl,cl
   140009b54:	xlat   BYTE PTR ds:[rbx]
   140009b55:	mov    al,0x75
   140009b57:	jns    0x140009b83
   140009b59:	repnz leave 
   140009b5b:	(bad)  
   140009b5c:	jbe    0x140009ba3
   140009b5e:	push   0x0
   140009b60:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009b61:	push   rdx
   140009b62:	test   eax,0xc0bdb08
   140009b67:	fisubr WORD PTR [rbp+0xa016b38]
   140009b6d:	fadd   st(4),st
   140009b6f:	int3   
   140009b70:	and    esi,DWORD PTR [rdx+0x1]
   140009b73:	test   BYTE PTR [rdi],bh
   140009b75:	movabs ds:0x933fc5a6c5bdf86b,al
   140009b7e:	es rex.XB xchg r9d,eax
   140009b81:	sub    edx,ebp
   140009b83:	sbb    al,BYTE PTR [rax]
   140009b85:	loopne 0x140009b9f
   140009b87:	or     eax,0x9d5a2fa8
   140009b8c:	sub    DWORD PTR [rcx],0x3cb74585
   140009b92:	loope  0x140009bc3
   140009b94:	xor    al,0x47
   140009b97:	je     0x140009ba6
   140009b99:	stc    
   140009b9a:	(bad)  
   140009b9b:	(bad)  
   140009b9c:	rex.WXB out dx,eax
   140009b9e:	mov    edi,0x8a509640
   140009ba3:	ret    
   140009ba4:	add    BYTE PTR [rsi-0x4a],bl
   140009ba7:	jg     0x140009bd9
   140009ba9:	xchg   BYTE PTR [rbx+rdx*2],al
   140009bac:	or     cl,BYTE PTR [rbx+0x5fc2796e]
   140009bb2:	add    cl,ah
   140009bb4:	(bad)  
   140009bb5:	lock sbb ch,dh
   140009bb8:	pop    rsi
   140009bb9:	ins    BYTE PTR es:[rdi],dx
   140009bba:	pop    rcx
   140009bbb:	cli    
   140009bbc:	sti    
   140009bbd:	mov    dl,0xdb
   140009bbf:	jns    0x140009bf3
   140009bc1:	adc    eax,0x4a9401b9
   140009bc6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009bc7:	rex.WB fcom DWORD PTR [r14+0x31]
   140009bcb:	mov    ch,0x1f
   140009bcd:	or     eax,0xa0dd2908
   140009bd2:	and    al,0xfc
   140009bd4:	ficomp WORD PTR [rdi+0x6a]
   140009bd7:	or     al,0x3f
   140009bd9:	add    ah,ch
   140009bdb:	pop    rdx
   140009bdc:	mov    eax,0x3658ff64
   140009be1:	(bad)  [rcx+0xd47154]
   140009be7:	add    BYTE PTR [rbx+0x396b5593],bl
   140009bed:	sbb    DWORD PTR [rcx+0xdd21e81],0x10f3954a
   140009bf7:	dec    BYTE PTR [rax-0x51]
   140009bfa:	(bad)  
   140009bfb:	sti    
   140009bfc:	shr    BYTE PTR [rdi-0x63],cl
   140009bff:	popf   
   140009c00:	jg     0x140009b93
   140009c02:	(bad)  
   140009c03:	std    
   140009c04:	sbb    DWORD PTR [rax+0x19d9c00c],0xa016a528
   140009c0e:	xor    ch,BYTE PTR [rdx+rdi*4]
   140009c11:	in     eax,0x21
   140009c13:	cld    
   140009c14:	xchg   ecx,eax
   140009c15:	pop    rdi
   140009c16:	and    ebx,0xffffffe9
   140009c19:	(bad)  
   140009c1a:	jns    0x140009c03
   140009c1c:	lahf   
   140009c1d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009c1e:	mov    eax,0x7000006a
   140009c23:	retf   0xa1fa
   140009c26:	xor    bl,ch
   140009c28:	in     eax,dx
   140009c29:	jl     0x140009bfe
   140009c2b:	imul   edi,DWORD PTR [rax],0x2a4b0ca9
   140009c31:	repz rex.W mov ss,WORD PTR [rcx]
   140009c35:	sub    ch,BYTE PTR [rbx]
   140009c37:	mov    ebx,0xa9dff7f0
   140009c3c:	(bad)  
   140009c3d:	jmp    0x140009cb1
   140009c3f:	ror    ebx,cl
   140009c41:	jle    0x140009c92
   140009c43:	jns    0x140009be2
   140009c45:	sub    ebx,DWORD PTR [rbx+0x71]
   140009c48:	sbb    al,al
   140009c4a:	rex.WXB mov r8b,0xed
   140009c4d:	adc    esi,DWORD PTR [rax-0x1a]
   140009c50:	jl     0x140009c01
   140009c52:	pop    rax
   140009c53:	sub    DWORD PTR [rcx+0x1e5ba2c3],ecx
   140009c59:	leave  
   140009c5a:	xor    DWORD PTR [rdx+0x65],eax
   140009c5d:	gs (bad) 
   140009c5f:	jle    0x140009c61
   140009c61:	clc    
   140009c62:	ret    0xfbfc
   140009c65:	test   BYTE PTR [rdi-0x76a7cf8d],0x45
   140009c6c:	mov    cl,0x19
   140009c6e:	sbb    bl,0x2
   140009c71:	movabs eax,ds:0x8f2dd161c480b5d0
   140009c7a:	in     al,0x18
   140009c7c:	movabs eax,ds:0xd8b99dff7f0db2b2
   140009c85:	(bad)  
   140009c86:	(bad)  
   140009c87:	mov    eax,0x1ace29
   140009c8c:	add    BYTE PTR [rax+rsi*4+0xb55087f],bl
   140009c93:	rex.W sbb al,0x16
   140009c96:	(bad)  
   140009c98:	rex.W mov ss,WORD PTR [rcx]
   140009c9b:	sub    ch,BYTE PTR [rbx]
   140009c9d:	fcomi  st,st(0)
   140009c9f:	add    ebp,DWORD PTR [rip+0xffffffffc1c07f4f]        # 0x101c11bf4
   140009ca5:	rex.W (bad) 
   140009ca7:	mov    dl,ch
   140009ca9:	add    ah,cl
   140009cab:	(bad)  
   140009cac:	lea    edx,[rcx]
   140009cae:	jmp    0x140009ca3
   140009cb0:	(bad)
   140009cb3:	mov    dh,0x89
   140009cb5:	rex.B
   140009cb6:	ds rex.WX sbb al,0x96
   140009cba:	or     al,0xe5
   140009cbc:	and    esp,edi
   140009cbe:	mov    cl,0x5d
   140009cc0:	rex.XB jle 0x140009d38
   140009cc3:	add    DWORD PTR [rbx],edi
   140009cc5:	xchg   esi,eax
   140009cc6:	pop    rdx
   140009cc7:	out    0xfd,al
   140009cc9:	rex.WRXB or r12b,BYTE PTR [r15+r10*1+0x56]
   140009cce:	fdiv   QWORD PTR [rip+0x70e6c000]        # 0x1b0e75cd4
   140009cd4:	cmc    
   140009cd5:	(bad)
   140009cd8:	(bad)  
   140009cd9:	mov    ah,0x19
   140009cdb:	adc    DWORD PTR [rax+0x19],edx
   140009cde:	(bad)  
   140009cdf:	(bad)  
   140009ce1:	adc    dh,bh
   140009ce3:	clc    
   140009ce4:	scas   al,BYTE PTR es:[rdi]
   140009ce5:	movabs eax,ds:0x1637c8cb85eec0d1
   140009cee:	in     eax,dx
   140009cef:	rex.RXB movsxd r15d,DWORD PTR [r13-0x6]
   140009cf3:	add    ecx,DWORD PTR [rcx]
   140009cf5:	sbb    BYTE PTR [rax-0x390fe94d],al
   140009cfb:	in     eax,0x1e
   140009cfd:	out    dx,eax
   140009cfe:	pop    rdx
   140009cff:	or     dl,0xb0
   140009d02:	call   0x107f1249d
   140009d07:	or     bh,BYTE PTR [rdi-0x42]
   140009d0a:	mov    cl,0xe8
   140009d0c:	sbb    al,0xfa
   140009d0e:	mov    edi,ebp
   140009d10:	jmp    0x14353c124
   140009d15:	add    BYTE PTR [rsi*4+0x5c17d380],bl
   140009d1c:	cli    
   140009d1d:	add    dl,BYTE PTR [rsi+rax*4-0x7b]
   140009d21:	jns    0x140009d27
   140009d23:	repnz sti 
   140009d25:	jl     0x140009cc0
   140009d27:	xor    eax,edi
   140009d29:	add    DWORD PTR [rax-0x31],esp
   140009d2c:	cld    
   140009d2d:	stc    
   140009d2e:	(bad)  
   140009d2f:	lahf   
   140009d30:	inc    BYTE PTR [rax+0x42]
   140009d33:	(bad)  
   140009d34:	loopne 0x140009ce2
   140009d36:	add    eax,0x34f72f14
   140009d3b:	(bad)
   140009d3f:	mov    ebp,DWORD PTR [rsi+0x79]
   140009d42:	test   dl,dl
   140009d44:	adc    BYTE PTR [rsi+0xb],bh
   140009d47:	(bad)  
   140009d48:	(bad)  
   140009d49:	(bad)  
   140009d4a:	(bad)  
   140009d4b:	adc    cl,BYTE PTR [rdi+0x7f]
   140009d4e:	and    BYTE PTR [rcx+0x35e0001a],bh
   140009d54:	and    ah,BYTE PTR [rax-0x1a45d3e5]
   140009d5a:	adc    DWORD PTR [rdx+0x43],ecx
   140009d5d:	clc    
   140009d5e:	in     eax,dx
   140009d5f:	scas   eax,DWORD PTR es:[rdi]
   140009d60:	(bad)  
   140009d61:	rex.WRXB movabs r10,0xb59c00cc4aedfe7
   140009d6b:	cmp    BYTE PTR [rdi+0x25],dh
   140009d6e:	(bad)
   140009d72:	in     eax,0xa4
   140009d74:	adc    al,0x16
   140009d76:	(bad)  
   140009d78:	or     BYTE PTR [rbp-0x78903df],ah
   140009d7e:	sti    
   140009d7f:	push   rdi
   140009d80:	imul   ecx,esi,0x55
   140009d83:	jg     0x140009d0e
   140009d85:	cmp    eax,0x6b6481fd
   140009d8a:	add    BYTE PTR [rax-0x41b1063d],al
   140009d90:	(bad)  
   140009d91:	out    0x72,eax
   140009d93:	rex.WX
   140009d94:	rex.WX (bad) 
   140009d96:	shr    DWORD PTR [rip+0xffffffffc21a508f],1        # 0x1021aee2b
   140009d9c:	outs   dx,DWORD PTR ds:[rsi]
   140009d9d:	xchg   DWORD PTR [rdi],ebx
   140009d9f:	add    dh,dh
   140009da1:	fidivr WORD PTR [rbx+rbp*8]
   140009da4:	cmp    al,0x23
   140009da6:	mov    cl,0xa7
   140009da8:	(bad)  
   140009da9:	nop
   140009daa:	mov    al,0x1
   140009dac:	cwde   
   140009dad:	(bad)  
   140009dae:	mov    bh,0xf6
   140009db0:	or     ebp,DWORD PTR [rax-0x49c488b4]
   140009db6:	or     eax,0xba2c294b
   140009dbb:	in     eax,0x11
   140009dbd:	rex.WX
   140009dbe:	rex.XB clc 
   140009dc0:	popf   
   140009dc1:	lock outs dx,DWORD PTR ds:[rsi]
   140009dc3:	pop    rbp
   140009dc4:	sahf   
   140009dc5:	jb     0x140009d95
   140009dc7:	stc    
   140009dc8:	(bad)  
   140009dc9:	xchg   ecx,eax
   140009dca:	in     al,0xd3
   140009dcc:	(bad)  
   140009dcd:	movabs rsi,0x6b7c9c08d6380006
   140009dd7:	cmp    ecx,0x53
   140009dda:	rex.WX (bad) 
   140009ddc:	shr    DWORD PTR [rip+0xffffffffc21a508f],1        # 0x1021aee71
   140009de2:	out    dx,eax
   140009de3:	test   BYTE PTR [rdi],bl
   140009de5:	add    dh,dh
   140009de7:	fisubr WORD PTR [rdx+0x7a]
   140009dea:	cli    
   140009deb:	(bad)  
   140009dec:	cmp    ah,bh
   140009dee:	fisttp WORD PTR [rbx-0x77]
   140009df1:	sbb    eax,DWORD PTR [rax-0x528610c7]
   140009df7:	(bad)  
   140009df8:	push   rax
   140009df9:	lods   eax,DWORD PTR ds:[rsi]
   140009dfa:	add    eax,0x56141c98
   140009dff:	mov    edx,0xc5f84941
   140009e04:	(bad)  
   140009e05:	adc    al,BYTE PTR [rdi+rdi*2-0xbda3d29]
   140009e0c:	fild   QWORD PTR [rcx-0x7762f027]
   140009e12:	jae    0x140009de2
   140009e14:	mov    edi,0x371297
   140009e19:	add    BYTE PTR [rax],ch
   140009e1b:	xchg   ebp,eax
   140009e1c:	rex.WX (bad) 
   140009e1e:	shl    DWORD PTR [rsi+0xbe9c05f],0xbd
   140009e25:	test   al,0x2f
   140009e27:	mov    DWORD PTR [rdi+rcx*2+0x41ba45d0],edi
   140009e2e:	rex.WB clc 
   140009e30:	(bad)
   140009e33:	test   BYTE PTR [rdi],bh
   140009e35:	fistp  WORD PTR [rax-0x3c]
   140009e38:	sahf   
   140009e39:	stc    
   140009e3a:	repz test BYTE PTR [rbx+0x63],0xe6
   140009e3f:	cmp    eax,0x3094b89f
   140009e44:	add    BYTE PTR [rbx+0x47],dl
   140009e47:	lods   eax,DWORD PTR ds:[rsi]
   140009e48:	(bad)  
   140009e49:	(bad)  
   140009e4a:	mov    edi,DWORD PTR [rcx]
   140009e4c:	mov    esp,0x875baefa
   140009e51:	(bad)  
   140009e52:	jmp    0x157e1c35e
   140009e58:	or     ecx,DWORD PTR [rdx+0x10]
   140009e5b:	jle    0x140009e5d
   140009e5d:	mov    eax,0x39ce7eaf
   140009e62:	jmp    0x12941574e
   140009e67:	xchg   ecx,eax
   140009e68:	sbb    QWORD PTR [rbx],rax
   140009e6b:	xor    bh,bl
   140009e6d:	jge    0x140009edd
   140009e6f:	pop    rbx
   140009e70:	cs fsubr st(3),st
   140009e73:	icebp  
   140009e74:	(bad)  
   140009e75:	add    DWORD PTR [rax-0x3db5f22e],0x3094162f
   140009e7f:	cld    
   140009e80:	pop    rbx
   140009e81:	xchg   edi,eax
   140009e82:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009e83:	pushf  
   140009e84:	ret    
   140009e85:	jle    0x140009ecc
   140009e87:	repz pop rsi
   140009e89:	push   rdi
   140009e8a:	rex.X retf 0x8018
   140009e8e:	test   eax,0x10ed70e3
   140009e93:	or     al,0x29
   140009e95:	frstor [rax+0x4162fc24]
   140009e9b:	or     ebx,eax
   140009e9d:	(bad)  
   140009e9f:	jbe    0x140009e9d
   140009ea1:	sub    ebx,esi
   140009ea3:	hlt    
   140009ea4:	(bad)  
   140009ea5:	adc    al,0x33
   140009ea7:	add    bh,ah
   140009ea9:	mov    al,0x60
   140009eab:	mov    ch,0xd6
   140009ead:	test   DWORD PTR [rbx],esi
   140009eaf:	(bad)  
   140009eb0:	rex.X
   140009eb1:	ss add eax,0xf0928374
   140009eb7:	mov    eax,DWORD PTR [rip+0xffffffff9eff0029]        # 0xdeff9ee6
   140009ebd:	stc    
   140009ebe:	rep outs dx,BYTE PTR ds:[rsi]
   140009ec0:	sbb    eax,0x5902937f
   140009ec5:	and    dl,BYTE PTR [rbx-0x53fff9ae]
   140009ecb:	jne    0x140009ed5
   140009ecd:	mov    ds,WORD PTR [rcx-0x61]
   140009ed0:	rex.WRXB pop r15
   140009ed2:	call   0x1004d639c
   140009ed7:	retf   
   140009ed8:	(bad)  
   140009ed9:	or     eax,0x162fc24a
   140009ede:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009edf:	add    ah,bh
   140009ee1:	sub    DWORD PTR [rbx],0x55
   140009ee4:	out    0x94,eax
   140009ee6:	pop    rdi
   140009ee7:	gs cmp bh,dh
   140009eea:	in     al,dx
   140009eeb:	push   rdx
   140009eec:	(bad)  
   140009eed:	add    BYTE PTR [rbp+rbx*1-0x4b],cl
   140009ef1:	jg     0x140009eeb
   140009ef3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009ef4:	mov    bh,0xfa
   140009ef6:	fild   DWORD PTR [rdi-0x18]
   140009ef9:	(bad)  
   140009efa:	and    eax,0x520b17e1
   140009eff:	add    BYTE PTR [rsi+0x0],bh
   140009f02:	clc    
   140009f03:	shr    BYTE PTR [rbp+0x477f1996],cl
   140009f09:	(bad)  
   140009f0b:	rex.WXB pop r10
   140009f0d:	rex.WX sbb al,BYTE PTR [rax-0x57]
   140009f11:	push   rsp
   140009f12:	sbb    al,BYTE PTR [rbx+0x513029ad]
   140009f18:	ins    DWORD PTR es:[rdi],dx
   140009f19:	rcl    DWORD PTR [rax+rdx*8],cl
   140009f1c:	or     eax,0x162fc24a
   140009f21:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009f22:	or     ah,bh
   140009f24:	jnp    0x140009f0c
   140009f26:	iret   
   140009f27:	movsxd esi,DWORD PTR [rax-0x5b]
   140009f2a:	push   0x3f
   140009f2c:	je     0x140009ef0
   140009f2e:	mov    esp,0x929395a7
   140009f33:	(bad)  
   140009f34:	add    BYTE PTR [rax],al
   140009f36:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f37:	push   rdx
   140009f38:	jmp    0x14a69a3b6
   140009f3d:	call   0x157e1c448
   140009f42:	or     edx,DWORD PTR [rdx+0x4]
   140009f45:	jle    0x140009ed6
   140009f47:	stos   BYTE PTR es:[rdi],al
   140009f48:	push   rbx
   140009f4a:	add    bl,BYTE PTR [rcx+0x6b29162]
   140009f50:	(bad)  
   140009f51:	stos   BYTE PTR es:[rdi],al
   140009f52:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f53:	sub    eax,edx
   140009f55:	xor    al,0x41
   140009f57:	rex.W (bad) 
   140009f59:	sub    BYTE PTR [rcx],cl
   140009f5b:	mov    edi,0xf0229058
   140009f60:	out    0x1b,eax
   140009f62:	mov    ebp,DWORD PTR [rcx+0x525bfaa9]
   140009f68:	fiadd  DWORD PTR [rax]
   140009f6a:	fcomp  QWORD PTR [rdx+0x7bb6b02]
   140009f70:	jmp    0x157e1c47b
   140009f75:	or     edx,DWORD PTR [rdx+0x4]
   140009f78:	jle    0x140009f9a
   140009f7a:	pop    rbp
   140009f7b:	push   rbp
   140009f7c:	jg     0x140009fc9
   140009f7e:	rex.WX sbb rax,QWORD PTR [rax]
   140009f81:	rcr    dl,1
   140009f83:	adc    al,0x28
   140009f85:	pop    rsi
   140009f86:	out    dx,al
   140009f87:	rex.RB
   140009f88:	gs retf 0x826b
   140009f8c:	push   rax
   140009f8d:	rex.WX movabs rax,ds:0xf020fe115f7e1a4c
   140009f97:	outs   dx,DWORD PTR ds:[rsi]
   140009f98:	pop    rbp
   140009f99:	sahf   
   140009f9a:	jb     0x140009f8a
   140009f9c:	repnz movabs ds:0xea6006f292dfd574,eax
   140009fa6:	sub    BYTE PTR [rbx+rdx*1-0x7c],ch
   140009faa:	pop    rsi
   140009fab:	clc    
   140009fac:	pop    rcx
   140009fad:	mov    edi,0x94815acb
   140009fb2:	rex.X
   140009fb3:	rex.WB clc 
   140009fb5:	vunpcklps xmm0,xmm15,XMMWORD PTR [rdx-0x3ba720c1]
   140009fbd:	(bad)  
   140009fbe:	sbb    edi,DWORD PTR [rdi]
   140009fc0:	mov    ch,0x1f
   140009fc2:	(bad)  
   140009fc3:	and    edx,0x55
   140009fc6:	jg     0x14000a013
   140009fc8:	test   eax,0x53670030
   140009fcd:	movabs al,ds:0xd0fb33f0bc394be
   140009fd6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009fd7:	adc    al,0x4a
   140009fd9:	ret    0x162f
   140009fdc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009fdd:	adc    ah,bh
   140009fdf:	add    BYTE PTR [rax+0x5b4fc6ff],dh
   140009fe5:	ss clc 
   140009fe7:	push   rsp
   140009fe8:	mov    ebp,0x15296fea
   140009fed:	(bad)  
   140009fee:	add    BYTE PTR [rbp+rcx*2+0x2b5b5a10],ch
   140009ff5:	push   rax
   140009ff6:	cdq    
   140009ff7:	out    dx,al
   140009ff8:	(bad)  
   140009ff9:	cdq    
   140009ffa:	pop    rdi
   140009ffb:	cmc    
   140009ffc:	and    DWORD PTR [rbp-0x4e81edb0],esi
   14000a002:	and    ch,al
   14000a004:	loopne 0x140009fe5
   14000a006:	xor    edi,DWORD PTR [rdi-0x22]
   14000a009:	mov    ecx,0xc55147c9
   14000a00e:	or     DWORD PTR [rdi],edi
   14000a010:	pop    rsi
   14000a011:	rex.WX lea rax,[rcx]
   14000a014:	cwde   
   14000a015:	cmp    cl,BYTE PTR [rdx]
   14000a017:	(bad)  
   14000a018:	mov    dl,0xe1
   14000a01a:	retf   0x5e74
   14000a01d:	pop    rsi
   14000a01e:	jmp    0x137e0217c
   14000a023:	out    0x26,al
   14000a025:	cld    
   14000a026:	rex.B loope 0x14000a008
   14000a029:	mov    edx,0xf21ce53c
   14000a02e:	rex.R
   14000a02f:	rex.R
   14000a030:	rex.WX stos BYTE PTR es:[rdi],al
   14000a032:	(bad)  
   14000a033:	xchg   esi,eax
   14000a034:	push   rdx
   14000a035:	gs add dh,ah
   14000a038:	(bad)  
   14000a039:	or     cl,BYTE PTR [rdi-0x28]
   14000a03c:	(bad)  
   14000a03d:	mov    ecx,0x880807f7
   14000a042:	lock jnp 0x14000a0a4
   14000a045:	add    esp,ecx
   14000a047:	outs   dx,DWORD PTR ds:[rsi]
   14000a048:	xchg   ecx,eax
   14000a049:	rex.WXB movabs r11,0x308f9361509e001f
   14000a053:	rex.WX xchg rbp,rax
   14000a055:	add    DWORD PTR [rax],eax
   14000a057:	imul   edi,ebp,0x1
   14000a05a:	imul   ebp,DWORD PTR [rbx],0xffffffaa
   14000a05d:	(bad)  
   14000a05e:	cmp    QWORD PTR [r15+r14*8],rdi
   14000a062:	ret    
   14000a063:	or     esi,0xdefc250a
   14000a069:	xlat   BYTE PTR ds:[rbx]
   14000a06a:	rex clc 
   14000a06c:	pop    rbp
   14000a06d:	cmc    
   14000a06e:	jo     0x14000a05d
   14000a070:	je     0x14000a03d
   14000a072:	sbb    bh,bh
   14000a074:	mov    ah,0xb4
   14000a076:	sti    
   14000a077:	in     eax,dx
   14000a078:	rex.WX popf 
   14000a07a:	add    DWORD PTR [rax],eax
   14000a07c:	lods   eax,DWORD PTR ds:[rsi]
   14000a07d:	std    
   14000a07e:	add    DWORD PTR [rbx],edx
   14000a080:	xor    ebx,ebp
   14000a082:	cmp    cl,bh
   14000a084:	repz add bl,ch
   14000a087:	add    eax,0x7df844dc
   14000a08c:	(bad)  
   14000a08d:	rex.R
   14000a08e:	repnz or ah,al
   14000a091:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a092:	or     al,0xfe
   14000a094:	mov    ebp,0xc73aceb7
   14000a099:	sti    
   14000a09a:	push   rbx
   14000a09b:	(bad)  
   14000a09c:	out    dx,al
   14000a09d:	mov    bh,0x2b
   14000a09f:	xchg   ebp,eax
   14000a0a0:	(bad)  
   14000a0a1:	(bad)  
   14000a0a2:	(bad)  
   14000a0a3:	sub    BYTE PTR [rbx+rsi*8+0x3],ch
   14000a0a7:	(bad)  
   14000a0a8:	pop    rbp
   14000a0a9:	jmp    0x1612c5a6f
   14000a0ae:	not    DWORD PTR [rdx]
   14000a0b0:	and    al,0xfc
   14000a0b2:	xor    DWORD PTR ds:[rdx],esp
   14000a0b5:	jns    0x14000a0bb
   14000a0b7:	(bad)
   14000a0bc:	rex.WXB adc rax,0x631f06e7
   14000a0c2:	rex.W pop rcx
   14000a0c4:	mov    ebx,0x1ad4aedf
   14000a0c9:	sbb    cl,0xd6
   14000a0cc:	push   0xffffffffffffff9a
   14000a0ce:	(bad)  
   14000a0cf:	jo     0x14000a0c3
   14000a0d1:	out    0xfd,eax
   14000a0d3:	cwde   
   14000a0d4:	cwde   
   14000a0d5:	or     DWORD PTR [rax-0x81eef75],edi
   14000a0db:	mov    DWORD PTR [rcx],edx
   14000a0dd:	leave  
   14000a0de:	and    edx,DWORD PTR [rax]
   14000a0e0:	xchg   ebx,eax
   14000a0e1:	xor    bh,al
   14000a0e3:	(bad)  
   14000a0e4:	push   rdi
   14000a0e5:	stos   BYTE PTR es:[rdi],al
   14000a0e6:	(bad)  
   14000a0e7:	jge    0x14000a0e6
   14000a0e9:	out    0x0,eax
   14000a0eb:	sbb    al,0x4d
   14000a0ed:	pop    rbx
   14000a0ee:	mov    ebx,0x1ad4aedf
   14000a0f3:	add    BYTE PTR [rax-0x1b2fe02a],dh
   14000a0f9:	mov    esi,0xa070fdcf
   14000a0fe:	stc    
   14000a0ff:	cmp    eax,0xfc226e83
   14000a104:	xor    DWORD PTR ds:[rdx],esp
   14000a107:	jns    0x14000a10d
   14000a109:	(bad)
   14000a10e:	push   0xd
   14000a110:	(bad)  
   14000a112:	rex.WRX cmp r9,QWORD PTR [rdi]
   14000a115:	(bad)  
   14000a116:	movsxd r15,DWORD PTR [r11+0x1b54aedf]
   14000a11d:	add    BYTE PTR [rax],al
   14000a11f:	xchg   esp,eax
   14000a120:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000a122:	and    bl,BYTE PTR [rsi+riz*1+0x9]
   14000a126:	jns    0x14000a0b6
   14000a128:	or     al,0x10
   14000a12a:	jle    0x14000a0cb
   14000a12c:	sbb    BYTE PTR [rcx+0x2931023c],dl
   14000a132:	sbb    edi,0xffffffe8
   14000a135:	icebp  
   14000a136:	dec    DWORD PTR [rcx-0x5d609b25]
   14000a13c:	push   rdi
   14000a13d:	rex.WR pop rdx
   14000a13f:	xchg   esp,eax
   14000a140:	jp     0x14000a145
   14000a142:	add    dh,dl
   14000a144:	(bad)  
   14000a145:	or     ecx,DWORD PTR [rax+rbx*2-0x4599d861]
   14000a14c:	fnsave [rdi]
   14000a14e:	adc    DWORD PTR [rcx],esp
   14000a150:	cld    
   14000a151:	xor    DWORD PTR ds:[rdx],esp
   14000a154:	jns    0x14000a15a
   14000a156:	(bad)
   14000a15b:	jl     0x14000a146
   14000a15d:	data16 rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000a160:	fisttp WORD PTR [rax+0x1a]
   14000a163:	out    0xf9,al
   14000a165:	(bad)  
   14000a166:	xchg   ecx,eax
   14000a167:	(bad)  
   14000a168:	(bad)  
   14000a169:	(bad)  
   14000a16a:	(bad)  
   14000a16b:	cmp    BYTE PTR [rbp+rbx*4-0x7e],ch
   14000a16f:	movabs ds:0x725f840323cdf2d7,eax
   14000a178:	(bad)  
   14000a179:	leave  
   14000a17a:	mov    al,r10b
   14000a17d:	mov    edi,0x6c59d6f7
   14000a182:	mov    edi,0xa87ed57d
   14000a187:	imul   ebx,DWORD PTR [rax],0xc6d2ed3a
   14000a18d:	add    ah,cl
   14000a18f:	mov    ds,WORD PTR [rax+0x14eb6147]
   14000a195:	pop    rsp
   14000a196:	sbb    ebx,DWORD PTR [rcx]
   14000a198:	and    ah,bh
   14000a19a:	xchg   edx,eax
   14000a19b:	repz rex.W (bad) 
   14000a19e:	push   rdx
   14000a19f:	adc    al,0x7e
   14000a1a1:	xchg   edi,eax
   14000a1a2:	(bad)  
   14000a1a3:	(bad)  
   14000a1a4:	cmp    DWORD PTR [rax],eax
   14000a1a6:	(bad)  
   14000a1a7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a1a8:	mov    ecx,0x6d29cfd3
   14000a1ad:	or     al,0x0
   14000a1af:	jo     0x14000a1e8
   14000a1b1:	adc    DWORD PTR [rbx-0x463810c1],0x786dc8f
   14000a1bb:	or     DWORD PTR [rdi+0x41c91e58],edi
   14000a1c1:	or     al,bl
   14000a1c3:	out    dx,eax
   14000a1c4:	shl    bl,cl
   14000a1c6:	scas   eax,DWORD PTR es:[rdi]
   14000a1c7:	adc    eax,0x66680fc
   14000a1cc:	add    BYTE PTR [rbp+rcx*4+0x174d340c],ch
   14000a1d3:	outs   dx,BYTE PTR ds:[rsi]
   14000a1d4:	sbb    eax,0x62fc241e
   14000a1d9:	jns    0x14000a1ff
   14000a1db:	(bad)  
   14000a1dc:	sub    DWORD PTR [rdx],ecx
   14000a1de:	mov    edi,0x601f70cb
   14000a1e3:	rex.WR
   14000a1e4:	repz rex.WRB jne 0x14000a177
   14000a1e8:	mov    edi,0x33b49b
   14000a1ed:	(bad)  
   14000a1ee:	in     eax,dx
   14000a1ef:	sub    eax,0x83c3cd43
   14000a1f4:	(bad)  
   14000a1f5:	sbb    dh,BYTE PTR [rax]
   14000a1f7:	rex.WRB xor r8b,0x8b
   14000a1fb:	in     eax,0x91
   14000a1fd:	sbb    al,0xa4
   14000a1ff:	xor    ah,bh
   14000a201:	(bad)  
   14000a202:	ret    
   14000a203:	jge    0x14000a26a
   14000a205:	sub    esp,0x34b4bca
   14000a20b:	add    BYTE PTR [rax+0x234a952],al
   14000a211:	out    0x9a,eax
   14000a213:	xor    DWORD PTR [rip+0xffffffffc2249013],0x38a4162f        # 0x102253230
   14000a21d:	cld    
   14000a21e:	cs jae 0x14000a21d
   14000a221:	rex.RXB add al,0xb2
   14000a224:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a225:	rex.X ficomp DWORD PTR [rdx]
   14000a228:	add    BYTE PTR [rax-0x3b9f994a],dh
   14000a22e:	cli    
   14000a22f:	pop    rsp
   14000a230:	pop    rdi
   14000a231:	retf   0x85e1
   14000a234:	(bad)  
   14000a235:	(bad)  
   14000a236:	shl    BYTE PTR [rbp+0xd33d07a],cl
   14000a23c:	loope  0x14000a235
   14000a23e:	vpshlb ymm11,[r15+0x75],xmm13
   14000a244:	sbb    eax,0xeb491feb
   14000a249:	sbb    al,0xff
   14000a24b:	movabs al,ds:0x1d2a54a00000dad2
   14000a254:	test   ebp,ecx
   14000a256:	add    al,0xaa
   14000a258:	mov    ch,0x2e
   14000a25a:	cmp    al,0xf7
   14000a25c:	movabs ds:0x520b17e100999d8d,eax
   14000a265:	sbb    dh,bh
   14000a267:	xchg   DWORD PTR [rdi-0x64],ebp
   14000a26a:	rex.RX jmp FWORD PTR [rdx-0x2d]
   14000a26e:	imul   edi,DWORD PTR [rsi+rax*2+0x6b477bcc],0x69
   14000a276:	outs   dx,DWORD PTR ds:[rsi]
   14000a277:	add    BYTE PTR [rax-0x55],al
   14000a27a:	or     DWORD PTR [rsp+rcx*8+0x74],ecx
   14000a27e:	mov    ebx,DWORD PTR [rbx+0xb17e100]
   14000a284:	push   rdx
   14000a285:	sbb    al,0x7e
   14000a287:	xchg   edi,eax
   14000a288:	mov    DWORD PTR [rsi],edi
   14000a28a:	fcmovb st,st(3)
   14000a28c:	pcmpgtb mm0,mm4
   14000a28f:	add    BYTE PTR [rbp+rsi*1+0x4d],cl
   14000a293:	adc    al,0x12
   14000a295:	xor    al,BYTE PTR [rcx]
   14000a297:	ret    0x162f
   14000a29a:	xchg   esp,eax
   14000a29b:	cs clc 
   14000a29d:	mov    ch,0x9a
   14000a29f:	call   0x17199f177
   14000a2a4:	add    bl,bl
   14000a2a6:	sbb    al,0x1
   14000a2a8:	xor    DWORD PTR [rbx],edx
   14000a2aa:	and    ah,bh
   14000a2ac:	(bad)  
   14000a2ae:	jmp    0xf1bc0236
   14000a2b3:	jle    0x14000a2f4
   14000a2b5:	mov    BYTE PTR gs:[rax],0x80
   14000a2b9:	(bad)  
   14000a2ba:	rex.WR xor al,0x8b
   14000a2be:	add    eax,0x95e57e11
   14000a2c3:	sub    DWORD PTR [rbx],eax
   14000a2c5:	add    BYTE PTR [rsp+rcx*2],al
   14000a2c8:	xor    al,0x8b
   14000a2cb:	add    eax,0x2854fe11
   14000a2d0:	jae    0x14000a2d8
   14000a2d2:	add    BYTE PTR [rax+rsi*1+0x2fc0ac81],al
   14000a2d9:	and    al,0xc2
   14000a2db:	scas   eax,DWORD PTR es:[rdi]
   14000a2dc:	xor    DWORD PTR [rdx],0x69
   14000a2df:	add    BYTE PTR [rax+0x1b],al
   14000a2e2:	adc    ebx,DWORD PTR [rax-0x34]
   14000a2e5:	adc    DWORD PTR [rsi+0x5f],edi
   14000a2e8:	adc    DWORD PTR [rsi+0x5d],edi
   14000a2eb:	xchg   esp,eax
   14000a2ec:	pop    rcx
   14000a2ed:	add    eax,DWORD PTR [rax]
   14000a2ef:	jl     0x14000a33d
   14000a2f1:	loopne 0x14000a2ba
   14000a2f3:	pop    rsi
   14000a2f4:	jge    0x14000a2f8
   14000a2f6:	test   BYTE PTR [rdi+0x4ca5ebf0],bl
   14000a2fc:	sbb    eax,DWORD PTR [rax]
   14000a2fe:	loopne 0x14000a36d
   14000a300:	add    al,bh
   14000a302:	rex.WRX ins DWORD PTR es:[rdi],dx
   14000a304:	mov    dh,BYTE PTR [rsi+0x1]
   14000a307:	xchg   ecx,eax
   14000a308:	xchg   edi,eax
   14000a309:	or     BYTE PTR [rdi-0x65],bh
   14000a30c:	cwde   
   14000a30d:	lock sar DWORD PTR [rbx+0xf],cl
   14000a311:	(bad)  
   14000a312:	mov    ebp,0x943df846
   14000a317:	jns    0x14000a31c
   14000a319:	add    ah,bl
   14000a31b:	rex.WRB movabs al,ds:0xcd18de3f73c2eb5a
   14000a325:	add    ah,BYTE PTR [rdx]
   14000a327:	(bad)  
   14000a328:	(bad)
   14000a32b:	(bad)  
   14000a32c:	cdq    
   14000a32d:	push   rsi
   14000a32e:	test   ecx,esp
   14000a330:	jg     0x14000a2ea
   14000a332:	(bad)  
   14000a333:	xor    al,bl
   14000a335:	(bad)  
   14000a336:	lock fild DWORD PTR [rbx+rax*1+0x30]
   14000a33b:	xor    eax,DWORD PTR gs:[rcx+0x7d58eb11]
   14000a342:	sub    DWORD PTR [rdi+0x33],esp
   14000a345:	or     DWORD PTR [rax-0x3b2407bb],0x33d85948
   14000a34f:	add    al,dl
   14000a351:	fbld   TBYTE PTR [rsp+rbx*2+0x2f1bc3a3]
   14000a358:	xchg   edi,eax
   14000a359:	xchg   ebx,eax
   14000a35a:	mov    al,0xb0
   14000a35c:	rex.RX xor DWORD PTR [rip+0x1d7850a],r10d        # 0x141d8286d
   14000a363:	cmp    al,0x6d
   14000a365:	(bad)  
   14000a366:	imul   ah
   14000a368:	push   rdi
   14000a369:	out    0xf1,eax
   14000a36b:	fcomp  st(6)
   14000a36d:	fcmovnbe st,st(1)
   14000a36f:	and    al,0x4c
   14000a371:	add    dh,bh
   14000a373:	fsub   QWORD PTR [rbx+0x4d]
   14000a376:	out    dx,eax
   14000a377:	mov    dl,0x47
   14000a379:	out    dx,al
   14000a37a:	test   eax,0xf905795f
   14000a37f:	xchg   esp,eax
   14000a380:	(bad)  
   14000a381:	jb     0x14000a390
   14000a383:	and    dh,BYTE PTR [rcx]
   14000a385:	loope  0x14000a309
   14000a387:	pop    rsp
   14000a388:	repz add BYTE PTR ss:[rbx*4-0x40d62422],dh
   14000a391:	lods   al,BYTE PTR ds:[rsi]
   14000a392:	add    DWORD PTR [rax+0x76b9c8],edi
   14000a398:	add    BYTE PTR [rsi-0x42],cl
   14000a39b:	cmp    eax,0xf51f7380
   14000a3a0:	retf   0xc64f
   14000a3a3:	(bad)  
   14000a3a4:	jg     0x14000a341
   14000a3a6:	sbb    dl,al
   14000a3a8:	(bad)  
   14000a3a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a3aa:	push   0x6f321e00
   14000a3af:	cwde   
   14000a3b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a3b1:	cmp    ecx,esp
   14000a3b3:	(bad)  
   14000a3b4:	fistp  WORD PTR [rsi]
   14000a3b6:	shr    BYTE PTR [rbx+0xaf826ff],0x32
   14000a3bd:	(bad)  
   14000a3be:	adc    esi,edi
   14000a3c0:	ss xor ecx,esp
   14000a3c3:	(bad)  
   14000a3c4:	out    dx,al
   14000a3c5:	stos   DWORD PTR es:[rdi],eax
   14000a3c6:	lahf   
   14000a3c7:	jae    0x14000a34c
   14000a3c9:	(bad)  
   14000a3ca:	cmp    cl,ah
   14000a3cc:	not    DWORD PTR [rsi]
   14000a3ce:	or     eax,0x5ae647c0
   14000a3d3:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a3d5:	fwait
   14000a3d6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3d7:	clc    
   14000a3d8:	out    dx,eax
   14000a3d9:	jge    0x14000a413
   14000a3db:	stc    
   14000a3dc:	jbe    0x14000a365
   14000a3de:	(bad)  
   14000a3df:	and    eax,DWORD PTR [rip+0xffffffff98db7f08]        # 0xd8dc22ed
   14000a3e5:	jo     0x14000a428
   14000a3e7:	jnp    0x14000a458
   14000a3e9:	popf   
   14000a3ea:	(bad)
   14000a3ed:	rex.WXB (bad) 
   14000a3ef:	ret    
   14000a3f0:	rex.RXB jne 0x14000a452
   14000a3f3:	iret   
   14000a3f4:	fild   QWORD PTR [rcx+0x646d0068]
   14000a3fa:	out    dx,al
   14000a3fb:	(bad)  
   14000a3fc:	repz add al,0xec
   14000a3ff:	mov    ebx,0x8bd47f0d
   14000a404:	movsxd esp,DWORD PTR [rdi+0x14f7c506]
   14000a40a:	and    ah,bh
   14000a40c:	ins    DWORD PTR es:[rdi],dx
   14000a40d:	(bad)
   14000a412:	mov    edi,DWORD PTR [rax]
   14000a414:	cmp    bh,dh
   14000a416:	(bad)  
   14000a417:	fucomi st,st(6)
   14000a419:	mov    ebp,0x93bce84f
   14000a41e:	(bad)  
   14000a41f:	sub    al,0xd1
   14000a421:	add    BYTE PTR [rdx],al
   14000a423:	enter  0x37c,0x4c
   14000a427:	shr    DWORD PTR [rsi-0x3d],cl
   14000a42a:	mov    BYTE PTR [rcx+riz*1+0x815ce7],0x22
   14000a432:	cld    
   14000a433:	ins    DWORD PTR es:[rdi],dx
   14000a434:	(bad)
   14000a439:	icebp  
   14000a43a:	pop    rbx
   14000a43b:	mov    ebx,0xadfea6f7
   14000a440:	cmp    eax,0x10068871
   14000a445:	push   rax
   14000a446:	out    0x8e,al
   14000a448:	mov    al,0xfb
   14000a44a:	shl    DWORD PTR [rdx],1
   14000a44c:	imul   esi,DWORD PTR [rax+0x13],0x2a
   14000a450:	xlat   BYTE PTR ds:[rbx]
   14000a451:	repz ror DWORD PTR [rdx],0x21
   14000a455:	cld    
   14000a456:	ins    DWORD PTR es:[rdi],dx
   14000a457:	(bad)
   14000a45c:	sahf   
   14000a45d:	xor    al,dh
   14000a45f:	clc    
   14000a460:	out    dx,eax
   14000a461:	mov    ah,0x8c
   14000a463:	icebp  
   14000a464:	out    dx,eax
   14000a465:	xlat   BYTE PTR ds:[rbx]
   14000a466:	jno    0x14000a45f
   14000a468:	fisubr WORD PTR [rax-0x5ef7fcbc]
   14000a46e:	push   rdx
   14000a46f:	test   eax,0x26a30934
   14000a474:	push   rax
   14000a475:	mov    dh,0x8e
   14000a477:	(bad)  
   14000a478:	xchg   edi,eax
   14000a479:	jb     0x14000a473
   14000a47b:	(bad)  
   14000a47c:	(bad)  
   14000a47d:	(bad)  
   14000a47e:	mov    ch,0x1f
   14000a480:	and    DWORD PTR [rax+0x1a],edx
   14000a483:	jle    0x14000a444
   14000a485:	repnz loop 0x14000a412
   14000a488:	or     DWORD PTR [rsi],ebx
   14000a48a:	je     0x14000a483
   14000a48c:	push   rdx
   14000a48d:	add    eax,0xf18eb50f
   14000a492:	xchg   edi,eax
   14000a493:	(bad)  
   14000a494:	cmp    al,0xf9
   14000a496:	(bad)  
   14000a497:	add    eax,0x9c5667b2
   14000a49c:	(bad)  
   14000a49d:	and    BYTE PTR [rax],ch
   14000a49f:	mov    bh,0xb9
   14000a4a1:	add    cl,BYTE PTR [rdi+0x678dbded]
   14000a4a7:	mov    edi,0xb27adf3a
   14000a4ac:	(bad)  
   14000a4ad:	lock mov bh,0xce
   14000a4b0:	add    edi,DWORD PTR [rax-0x3761ad20]
   14000a4b6:	xor    eax,0xf04c488
   14000a4bb:	fidivr DWORD PTR [rbx-0x15]
   14000a4be:	lods   al,BYTE PTR ds:[rsi]
   14000a4bf:	mov    bl,0xbd
   14000a4c1:	pcmpgtb mm7,QWORD PTR [rax-0x68]
   14000a4c5:	(bad)  
   14000a4c6:	repz add BYTE PTR [rdx],dl
   14000a4c9:	xchg   edx,eax
   14000a4ca:	jns    0x14000a48f
   14000a4cc:	xor    eax,0x9dae74dd
   14000a4d1:	or     DWORD PTR [rdx],0xffffffc2
   14000a4d4:	(bad)  
   14000a4d5:	lods   al,BYTE PTR ds:[rsi]
   14000a4d6:	mov    esp,0x58262b8
   14000a4db:	jns    0x14000a551
   14000a4dd:	test   BYTE PTR [rcx],0x46
   14000a4e0:	rex.WRXB jg 0x14000a509
   14000a4e3:	loope  0x14000a47c
   14000a4e5:	and    DWORD PTR [rdx],ebx
   14000a4e7:	rex (bad) 
   14000a4e9:	xor    bh,BYTE PTR [rbx-0x67]
   14000a4ec:	pop    rbx
   14000a4ed:	cmp    al,BYTE PTR [rdi]
   14000a4ef:	lahf   
   14000a4f0:	jp     0x14000a567
   14000a4f2:	mov    bl,0xd1
   14000a4f4:	cmp    DWORD PTR [rax-0x8],ecx
   14000a4f7:	fcmovnb st,st(4)
   14000a4f9:	add    al,0xb
   14000a4fb:	sbb    bl,BYTE PTR [rcx+rbp*4-0x1e]
   14000a4ff:	xchg   ecx,eax
   14000a500:	(bad)  
   14000a502:	jns    0x14000a579
   14000a504:	test   BYTE PTR [rbp+0x4ca66408],0xd1
   14000a50b:	add    BYTE PTR [rdx],bh
   14000a50d:	xchg   esp,eax
   14000a50e:	stc    
   14000a50f:	(bad)  
   14000a510:	cwde   
   14000a511:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a512:	test   DWORD PTR [rbp+rsi*8-0x5b],eax
   14000a516:	sbb    al,0x8e
   14000a518:	popf   
   14000a519:	sbb    al,ah
   14000a51b:	mov    ecx,0xe6608cff
   14000a520:	movabs al,ds:0x70552f77fc39a53
   14000a529:	out    0x5e,eax
   14000a52b:	jae    0x14000a4e3
   14000a52d:	imul   DWORD PTR [rbp+0x40b2bece]
   14000a533:	retfw  0x1a26
   14000a537:	add    BYTE PTR [rcx+rbx*4],0xbd
   14000a53b:	(bad)  
   14000a53c:	pop    QWORD PTR [rdx]
   14000a53e:	push   0xfffffffff93a7a1a
   14000a543:	test   BYTE PTR [rsi-0x64],0x7c
   14000a547:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a548:	ret    
   14000a549:	ja     0x14000a55b
   14000a54b:	clc    
   14000a54c:	movsxd rdi,r8d
   14000a54f:	repz lea eax,[rbp-0x14]
   14000a553:	mov    ebp,0x666dd675
   14000a558:	pop    rdi
   14000a559:	adc    esp,ebp
   14000a55b:	in     al,dx
   14000a55c:	xchg   ebx,eax
   14000a55d:	es jbe 0x14000a562
   14000a560:	rex.WX push rsi
   14000a562:	movabs eax,ds:0xeec7ed77c01e7850
   14000a56b:	fnstsw WORD PTR [rsi+0x7]
   14000a56e:	jg     0x14000a5eb
   14000a570:	in     al,0x16
   14000a572:	jbe    0x14000a5e0
   14000a574:	pop    rsi
   14000a575:	xchg   ebp,eax
   14000a576:	xchg   edi,eax
   14000a577:	test   al,0xd3
   14000a579:	mov    edi,0xf013b39b
   14000a57e:	fwait
   14000a57f:	cs popf 
   14000a581:	sub    BYTE PTR [rbp-0x51],0x41
   14000a585:	and    BYTE PTR [rcx-0x80],dh
   14000a588:	jmp    0x14000a578
   14000a58a:	pop    rdi
   14000a58b:	lods   eax,DWORD PTR ds:[rsi]
   14000a58c:	(bad)  
   14000a58d:	dec    DWORD PTR [rbp-0x354c761]
   14000a593:	add    BYTE PTR [rax-0x5e],dh
   14000a596:	push   rsp
   14000a597:	sub    bh,BYTE PTR [rip+0x5b55902f]        # 0x19b5635cc
   14000a59d:	mov    cl,0x13
   14000a59f:	push   rax
   14000a5a0:	xor    DWORD PTR [rcx-0x40b497c9],ebx
   14000a5a6:	shl    BYTE PTR [rcx-0x5ce64ad],0xb1
   14000a5ad:	fld    TBYTE PTR [rbx-0x36]
   14000a5b0:	add    eax,0x21a6c2a4
   14000a5b5:	adc    ecx,eax
   14000a5b7:	mov    edi,0x1c55f6fd
   14000a5bc:	cld    
   14000a5bd:	int3   
   14000a5be:	jae    0x14000a632
   14000a5c0:	iret   
   14000a5c1:	repz add bl,BYTE PTR [rcx+0x29]
   14000a5c5:	(bad)  
   14000a5c6:	rol    DWORD PTR [rax],1
   14000a5c8:	and    dl,BYTE PTR [rax-0x6592c927]
   14000a5ce:	xor    al,0x54
   14000a5d0:	pop    rdi
   14000a5d1:	retf   0x85e1
   14000a5d4:	loop   0x14000a5fc
   14000a5d6:	mov    esp,0xd70ecbfa
   14000a5db:	adc    DWORD PTR [rax+0xc],ebp
   14000a5de:	(bad)  
   14000a5df:	jge    0x14000a5d6
   14000a5e1:	jae    0x14000a651
   14000a5e3:	out    dx,eax
   14000a5e4:	out    0x63,eax
   14000a5e6:	jnp    0x14000a627
   14000a5e8:	rex.X mov cl,0x9
   14000a5eb:	adc    BYTE PTR [rcx+0x80be6dc],dh
   14000a5f1:	(bad)  
   14000a5f2:	or     DWORD PTR [rdx+rax*8],esp
   14000a5f5:	(bad)  
   14000a5f6:	fadd   QWORD PTR [rax+rcx*4]
   14000a5f9:	add    BYTE PTR [rsi-0x61],bh
   14000a5fc:	sub    bh,BYTE PTR [rdi+0x66]
   14000a5ff:	(bad)  
   14000a600:	test   DWORD PTR [rbx-0x3affb276],0xd02f9b65
   14000a60a:	pop    rcx
   14000a60b:	xchg   ebx,eax
   14000a60c:	shl    DWORD PTR [rdi],cl
   14000a60f:	mov    edi,0xe39f954f
   14000a614:	sti    
   14000a615:	xor    DWORD PTR [rax+0x6c831006],ecx
   14000a61b:	repz add eax,0x81049a5a
   14000a621:	or     DWORD PTR [rsp+r8*4],r14d
   14000a625:	fucomip st,st(2)
   14000a627:	in     eax,0xf7
   14000a629:	test   al,0xf2
   14000a62b:	jae    0x14000a6a9
   14000a62d:	(bad)  
   14000a62e:	rol    DWORD PTR es:[rax],1
   14000a631:	(bad)
   14000a636:	imul   edi,DWORD PTR [rbp-0x6],0x717a8fb9
   14000a63d:	in     al,dx
   14000a63e:	(bad)  
   14000a63f:	fwait
   14000a640:	mov    ebp,0x86a1557
   14000a645:	mov    edi,0x65cf8ab5
   14000a64a:	push   rsi
   14000a64b:	fisttp WORD PTR [rbx+0x30]
   14000a64e:	loopne 0x14000a637
   14000a650:	(bad)  
   14000a651:	sahf   
   14000a652:	cwde   
   14000a653:	(bad)  
   14000a654:	add    BYTE PTR ds:[rsp+rdx*2],0x28
   14000a659:	adc    al,0x8e
   14000a65b:	add    BYTE PTR [rax+0x1d],bh
   14000a65e:	rcl    BYTE PTR [rsi],0xfb
   14000a661:	icebp  
   14000a662:	outs   dx,DWORD PTR ds:[rsi]
   14000a663:	sbb    al,0x5c
   14000a665:	(bad)  
   14000a666:	xchg   ebx,eax
   14000a667:	(bad)  
   14000a668:	(bad)  
   14000a669:	(bad)  
   14000a66a:	cmove  ecx,DWORD PTR [rax]
   14000a66d:	jg     0x14000a64f
   14000a66f:	ds add cl,cl
   14000a672:	lock out dx,eax
   14000a674:	cdq    
   14000a675:	(bad)  
   14000a676:	(bad)  
   14000a677:	(bad)  
   14000a678:	int3   
   14000a679:	mov    edi,0x556c3cef
   14000a67e:	stc    
   14000a67f:	mov    ecx,0xd8a43784
   14000a684:	(bad)  
   14000a685:	nop
   14000a686:	rex.X cdq 
   14000a688:	(bad)  
   14000a689:	cli    
   14000a68a:	jle    0x14000a664
   14000a68c:	push   rsi
   14000a68d:	adc    eax,0x8be9c002
   14000a692:	sbb    esi,eax
   14000a694:	popf   
   14000a695:	jg     0x14000a6b0
   14000a697:	rex.R mov bpl,0xd6
   14000a69a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a69b:	fst    QWORD PTR [rbx-0x794a8041]
   14000a6a1:	xchg   DWORD PTR [rdx-0x59],ebp
   14000a6a4:	fucom  st(0)
   14000a6a6:	(bad)  
   14000a6a7:	ret    
   14000a6a8:	call   0x149fcce92
   14000a6ad:	mov    BYTE PTR [rip+0x36e58480],dh        # 0x176e62b33
   14000a6b3:	jno    0x14000a71d
   14000a6b5:	movsxd ebx,DWORD PTR [rdi+0x3]
   14000a6b8:	fistp  QWORD PTR [rax]
   14000a6ba:	mov    eax,0x2e0f2380
   14000a6bf:	mov    edx,0xdb504907
   14000a6c4:	sbb    al,BYTE PTR [rax+0x2d77f844]
   14000a6ca:	pop    rsp
   14000a6cb:	ret    0xf99e
   14000a6ce:	repz (bad) 
   14000a6d0:	mov    dh,0x3e
   14000a6d2:	ror    BYTE PTR [rcx+0x63ab1d3d],0x7e
   14000a6d9:	imul   eax,DWORD PTR [rax],0x2850abc9
   14000a6df:	cmp    al,0x0
   14000a6e1:	loopne 0x14000a6f0
   14000a6e3:	add    BYTE PTR [rbx-0x13f03813],bh
   14000a6e9:	mov    ecx,0xbc7ebf8d
   14000a6ee:	mov    cs,WORD PTR [rbp+0x36bf27d]
   14000a6f4:	mov    esi,0xfe092006
   14000a6f9:	jl     0x14000a75e
   14000a6fb:	adc    DWORD PTR [rdi-0x46],ebx
   14000a6fe:	jns    0x14000a716
   14000a700:	fld    TBYTE PTR [rdi+0x5f]
   14000a703:	jne    0x14000a783
   14000a705:	xor    eax,0x2ecb6309
   14000a70a:	mov    dh,0xf5
   14000a70c:	cmp    edx,DWORD PTR [rbx+rbx*4]
   14000a70f:	add    BYTE PTR [rdx],bl
   14000a711:	enter  0xdbb6,0x50
   14000a715:	push   rbx
   14000a716:	(bad)  
   14000a717:	loope  0x14000a701
   14000a719:	(bad)  
   14000a71a:	mov    ebp,0x5bfbea78
   14000a71f:	xor    dl,bh
   14000a721:	mov    cl,0xec
   14000a723:	rex.RB
   14000a724:	rex.RB mov r10b,0x77
   14000a727:	jmp    FWORD PTR [rcx+0xd]
   14000a72a:	fidivr DWORD PTR [rsi-0x5]
   14000a72d:	sub    bl,BYTE PTR [rsi]
   14000a72f:	cdq    
   14000a730:	std    
   14000a731:	sahf   
   14000a732:	sbb    edi,esp
   14000a734:	(bad)  
   14000a735:	cmp    DWORD PTR [rbx-0x29dcd70a],0x57931400
   14000a73f:	(bad)  
   14000a740:	movabs eax,ds:0x72ec7b9f1180dabc
   14000a749:	rcl    ecx,cl
   14000a74b:	fdiv   QWORD PTR [rdi]
   14000a74d:	(bad)  
   14000a74e:	sbb    rdi,0xffffffff8ecfa9e7
   14000a755:	mov    esi,0x801ac408
   14000a75a:	data16 xor al,BYTE PTR [rcx]
   14000a75d:	sbb    DWORD PTR [rsi-0x635e9a9d],eax
   14000a763:	fiadd  DWORD PTR [rax-0x4c]
   14000a766:	rex.WRXB jle 0x14000a708
   14000a769:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a76a:	jle    0x14000a77d
   14000a76c:	shl    BYTE PTR [rax],0xe1
   14000a76f:	push   rdi
   14000a770:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   14000a772:	add    DWORD PTR [rax],ebp
   14000a774:	sub    al,0xbf
   14000a776:	fcmovb st,st(0)
   14000a778:	mov    bh,0x1e
   14000a77a:	popf   
   14000a77b:	(bad)  
   14000a77d:	xchg   ebp,eax
   14000a77e:	mov    eax,0x52dceff9
   14000a783:	add    edi,eax
   14000a785:	mov    bl,0x90
   14000a787:	stos   DWORD PTR es:[rdi],eax
   14000a788:	add    DWORD PTR [rbp-0x9],ebp
   14000a78b:	rex.WRB jmp FWORD PTR [r10+0xd]
   14000a78f:	neg    ebp
   14000a791:	cli    
   14000a792:	add    eax,0x8809fa9f
   14000a797:	xor    eax,0x57e58d00
   14000a79c:	sbb    edi,DWORD PTR [rax]
   14000a79e:	test   BYTE PTR [rbx-0x7003af45],0xd
   14000a7a5:	add    DWORD PTR [rbx-0x6e],ecx
   14000a7a8:	mov    ebp,0x797ac06f
   14000a7ad:	mov    ebx,0xe0e12e16
   14000a7b2:	scas   eax,DWORD PTR es:[edi]
   14000a7b4:	icebp  
   14000a7b5:	test   eax,0x6b1529f
   14000a7ba:	nop
   14000a7bb:	adc    bh,BYTE PTR [rcx-0x2b]
   14000a7be:	(bad)  
   14000a7bf:	neg    ch
   14000a7c1:	mov    bl,0x82
   14000a7c3:	addr32 (bad) 
   14000a7c5:	neg    DWORD PTR [rbx+0x58]
   14000a7c8:	in     al,0xfe
   14000a7ca:	not    DWORD PTR [rip+0xfffffffff79801ae]        # 0x13798a97e
   14000a7d0:	rex.WXB jmp FWORD PTR [r10+0xd]
   14000a7d4:	jnp    0x14000a845
   14000a7d6:	sahf   
   14000a7d7:	(bad)
   14000a7da:	sub    edi,esp
   14000a7dc:	sbb    DWORD PTR [rdx+rbp*8-0x39],edi
   14000a7e0:	sub    dh,dl
   14000a7e2:	add    BYTE PTR [rdx],dh
   14000a7e4:	and    ch,BYTE PTR [rdi+0x7ae540da]
   14000a7ea:	(bad)  
   14000a7eb:	rex.WRXB jg 0x14000a86d
   14000a7ee:	or     ecx,esi
   14000a7f0:	mov    WORD PTR [rdx-0x65cf4c43],?
   14000a7f6:	(bad)  
   14000a7f7:	call   FWORD PTR [rsi-0x35070c07]
   14000a7fd:	in     al,dx
   14000a7fe:	sub    ebp,DWORD PTR [rsi-0x10]
   14000a801:	pop    QWORD PTR [rax-0x76ab02b1]
   14000a807:	xor    eax,0x50aa1480
   14000a80c:	sub    BYTE PTR [rdx+rax*4],bl
   14000a80f:	push   rcx
   14000a810:	sbb    ebx,eax
   14000a812:	ins    DWORD PTR es:[rdi],dx
   14000a813:	(bad)  
   14000a814:	mov    esi,0x9e2af363
   14000a819:	jge    0x14000a7d7
   14000a81b:	mov    ?,WORD PTR [rbp-0x9]
   14000a81e:	sub    al,0xa3
   14000a820:	pop    rbp
   14000a821:	xchg   DWORD PTR [rdi-0x12],ebx
   14000a824:	pop    QWORD PTR [rbx-0x2a]
   14000a827:	add    BYTE PTR [rdx],bl
   14000a829:	or     eax,0xc29e5d6c
   14000a82e:	ficomp WORD PTR [rbx+0x67]
   14000a831:	popf   
   14000a832:	(bad)  
   14000a833:	jrcxz  0x14000a835
   14000a835:	mov    WORD PTR [rcx-0x3],?
   14000a838:	movabs ds:0xa0c80358bf1fb35c,eax
   14000a841:	ins    BYTE PTR es:[rdi],dx
   14000a842:	sbb    ecx,DWORD PTR [rsi-0x57e432cc]
   14000a848:	fsubp  st(0),st
   14000a84a:	ret    0xfe77
   14000a84d:	jne    0x14000a85f
   14000a84f:	(bad)  
   14000a850:	mov    esp,0x857bc9b9
   14000a855:	movabs eax,ds:0x1bfec05d5f92fdc0
   14000a85e:	(bad)  
   14000a85f:	rol    DWORD PTR [rbx-0x53],0x6f
   14000a863:	loop   0x14000a866
   14000a865:	(bad)  
   14000a866:	(bad)  
   14000a867:	cmc    
   14000a868:	retf   
   14000a869:	loope  0x14000a8b6
   14000a86b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a86c:	xchg   edx,eax
   14000a86d:	(bad)  
   14000a86e:	imul   eax,DWORD PTR [rax],0x29
   14000a871:	xchg   edi,eax
   14000a872:	cmp    DWORD PTR [rbx+0xf0075f0],ecx
   14000a878:	fmul   DWORD PTR [rdi-0x18762ce5]
   14000a87e:	fwait
   14000a87f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a880:	adc    ebx,ebx
   14000a882:	(bad)  
   14000a883:	(bad)  
   14000a884:	imul   eax,DWORD PTR [r8],0xffffffbb
   14000a888:	out    0x7f,al
   14000a88a:	in     eax,dx
   14000a88b:	xor    eax,0xc60c778d
   14000a890:	push   rbx
   14000a891:	lahf   
   14000a892:	adc    edi,DWORD PTR [rdx+0x12]
   14000a895:	adc    al,0xa7
   14000a897:	add    dl,BYTE PTR [rbx+0x0]
   14000a89a:	add    BYTE PTR [rdx-0x5f],0xf0
   14000a89e:	ins    DWORD PTR es:[rdi],dx
   14000a89f:	sbb    BYTE PTR [rbx+0xa],ch
   14000a8a2:	(bad)  
   14000a8a3:	cmp    cl,BYTE PTR [rcx]
   14000a8a5:	out    dx,eax
   14000a8a6:	fnstsw WORD PTR [rsi-0x65e2907e]
   14000a8ac:	(bad)  
   14000a8ad:	mov    esi,0x3a6e5fdf
   14000a8b2:	mov    edi,0x5d6c019d
   14000a8b7:	sahf   
   14000a8b8:	ret    0xb77d
   14000a8bb:	jle    0x14000a89e
   14000a8bd:	mov    dh,0x4b
   14000a8bf:	iret   
   14000a8c0:	sbb    al,0x8c
   14000a8c2:	cmp    esp,edi
   14000a8c4:	jl     0x14000a8b3
   14000a8c6:	mov    dh,0x2
   14000a8c8:	movabs ds:0x605b0a142a6b5001,al
   14000a8d1:	(bad)  
   14000a8d2:	(bad)  
   14000a8d3:	mov    ?,WORD PTR [rax]
   14000a8d5:	mov    edi,0x970fec7b
   14000a8da:	lock in al,0x81
   14000a8dd:	cmc    
   14000a8de:	mov    ecx,0xd0065e03
   14000a8e3:	jg     0x14000a88c
   14000a8e5:	xchg   BYTE PTR [rdi],ch
   14000a8e7:	int3   
   14000a8e8:	mov    edi,0x3f17bb8f
   14000a8ed:	je     0x14000a93a
   14000a8ef:	push   rcx
   14000a8f0:	test   cl,dh
   14000a8f2:	(bad)  
   14000a8f3:	lahf   
   14000a8f4:	jae    0x14000a8f1
   14000a8f6:	xchg   edx,eax
   14000a8f7:	mov    bl,BYTE PTR [rdi+0x34]
   14000a8fa:	add    BYTE PTR [rdx-0x7b62a1bb],ch
   14000a900:	sbb    edi,ebx
   14000a902:	sbb    bh,BYTE PTR [rax-0x1e]
   14000a905:	rol    DWORD PTR [rbp+0x3c],0x79
   14000a909:	(bad)  
   14000a90a:	(bad)  
   14000a90c:	add    dh,dh
   14000a90e:	int3   
   14000a90f:	mov    edi,0x97f35d8f
   14000a914:	fsubr  QWORD PTR [rdx+0x276093fb]
   14000a91a:	lahf   
   14000a91b:	xchg   edx,eax
   14000a91c:	movabs ds:0x33f1a97329e5001,al
   14000a925:	rex.RXB mov r11b,0x60
   14000a928:	(bad)  
   14000a929:	out    0x55,al
   14000a92b:	cld    
   14000a92c:	in     eax,0xf1
   14000a92e:	adc    edi,DWORD PTR [rax]
   14000a930:	jo     0x14000a912
   14000a932:	add    BYTE PTR [rax],al
   14000a934:	(bad)  
   14000a935:	je     0x14000a9ab
   14000a937:	adc    al,0x7f
   14000a939:	repz ja 0x14000a96b
   14000a93c:	movabs ds:0xcbc00e7d83cb4eff,eax
   14000a945:	pop    rsp
   14000a946:	mov    dl,0xab
   14000a948:	scas   al,BYTE PTR es:[rdi]
   14000a949:	push   0xaaf9400
   14000a94e:	test   edx,eax
   14000a950:	outs   dx,BYTE PTR ds:[rsi]
   14000a951:	sbb    BYTE PTR [rbp+0x3],bh
   14000a954:	rex.WRXB cmp r15,QWORD PTR [r15+0x1f6fb7db]
   14000a95b:	add    BYTE PTR [rax-0x652696ae],ah
   14000a961:	or     esi,DWORD PTR [rax]
   14000a963:	(bad)  
   14000a964:	hlt    
   14000a965:	rex.WRXB
   14000a966:	lock or eax,0x68b6a3c
   14000a96c:	rex add eax,0x782cd992
   14000a972:	adc    DWORD PTR [rsi-0x72e8fd2f],ecx
   14000a978:	add    DWORD PTR [rax],edi
   14000a97a:	(bad)  
   14000a97b:	(bad)  
   14000a97c:	jle    0x14000a9b8
   14000a97e:	add    r12d,DWORD PTR [rax+0x2850a942]
   14000a985:	cmp    al,0xd
   14000a987:	ret    
   14000a988:	or     BYTE PTR [rsi-0x7c6541c8],dh
   14000a98e:	add    esi,edi
   14000a990:	rex.W (bad) 
   14000a993:	mov    DWORD PTR [rbx+0x50a88113],r9d
   14000a99a:	xor    al,BYTE PTR [rcx]
   14000a99c:	(bad)  
   14000a99d:	(bad)  
   14000a99e:	jo     0x14000a962
   14000a9a0:	jbe    0x14000a99a
   14000a9a2:	add    al,0x8c
   14000a9a4:	sub    DWORD PTR [rbx+riz*1-0x6aeca3b7],edi
   14000a9ab:	pushf  
   14000a9ac:	pop    rax
   14000a9ad:	add    ecx,eax
   14000a9af:	mov    al,0xcc
   14000a9b1:	inc    BYTE PTR [rcx]
   14000a9b3:	mov    al,0x9d
   14000a9b5:	lahf   
   14000a9b6:	pop    rsi
   14000a9b7:	and    eax,0x28a004de
   14000a9bc:	sub    bh,BYTE PTR [rbp-0x5d7fec9e]
   14000a9c2:	xor    ch,BYTE PTR [rdx+rbx*1]
   14000a9c5:	add    BYTE PTR [rbp+0x65],al
   14000a9c8:	pop    rax
   14000a9c9:	xor    al,0x0
   14000a9cb:	mov    cl,dl
   14000a9cd:	mov    al,0x68
   14000a9cf:	add    BYTE PTR [rdx*4+0x2800d161],dl
   14000a9d6:	sub    al,bl
   14000a9d8:	movabs ds:0xa8a0034586545001,al
   14000a9e1:	or     al,0xeb
   14000a9e3:	inc    DWORD PTR [rcx]
   14000a9e5:	out    0xb6,al
   14000a9e7:	sahf   
   14000a9e8:	cmp    al,0xc4
   14000a9ea:	rol    DWORD PTR es:[rsi+0x0],cl
   14000a9f1:	rex.WB
   14000a9f2:	rex.RB
   14000a9f3:	rex.WRX
   14000a9f4:	rex.R scas al,BYTE PTR es:[rdi]
   14000a9f6:	rex.X (bad) 
   14000a9f8:	(bad)  
   14000a9f9:	add    BYTE PTR [rax],al
   14000a9fb:	add    BYTE PTR [rax],al
   14000a9fd:	add    BYTE PTR [rax],al
   14000a9ff:	add    BYTE PTR [rax],ch
   14000aa01:	add    BYTE PTR [rax],al
   14000aa03:	add    BYTE PTR [rax+0x0],al
   14000aa06:	add    BYTE PTR [rax],al
   14000aa08:	add    BYTE PTR [rax],0x0
   14000aa0b:	add    BYTE PTR [rcx],al
   14000aa0d:	add    BYTE PTR [rax],ah
	...
   14000ac9f:	add    BYTE PTR [rdi+0x47],al
   14000aca2:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000aca6:	rex.RXB mov r15d,0xbf474747
   14000acac:	rex.RXB
   14000acad:	rex.RXB
   14000acae:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000ad95:	add    BYTE PTR [rax],al
   14000ad97:	add    BYTE PTR [rdi+0x47],al
   14000ad9a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000ad9e:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000ada3:	inc    DWORD PTR [rdi+0x47]
   14000ada6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000adaa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000adae:	rex.RXB inc DWORD PTR [r15+0x47]
   14000adb2:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000adb7:	adc    BYTE PTR [rax],al
	...
   14000ae91:	add    BYTE PTR [rax],al
   14000ae93:	add    BYTE PTR [rdi+0x47],al
   14000ae96:	rex.RXB push r8
   14000ae98:	rex.RXB
   14000ae99:	rex.RXB
   14000ae9a:	rex.RXB fild WORD PTR [r15+0x47]
   14000ae9e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000aea2:	rex.RXB call QWORD PTR [r11+0x53]
   14000aea6:	push   rbx
   14000aea7:	call   QWORD PTR [rbx+0x53]
   14000aeaa:	push   rbx
   14000aeab:	inc    DWORD PTR [rdi+0x47]
   14000aeae:	rex.RXB inc DWORD PTR [r15+0x47]
   14000aeb2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000aeb6:	rex.RXB fild WORD PTR [r15+0x47]
   14000aeba:	rex.RXB push r8
	...
   14000af8c:	rex.RXB
   14000af8d:	rex.RXB
   14000af8e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000af92:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000af94:	rex.RXB
   14000af95:	rex.RXB
   14000af96:	rex.RXB inc DWORD PTR [r15+0x47]
   14000af9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000af9e:	rex.RXB (bad) 
   14000afa0:	(bad)  
   14000afa1:	jns    0x14000af3a
   14000afa3:	push   rsp
   14000afa5:	hlt    
   14000afa6:	hlt    
   14000afa7:	push   rsp
   14000afa9:	hlt    
   14000afaa:	hlt    
   14000afab:	(bad)  
   14000afac:	jge    0x14000affe
   14000afae:	sub    bh,bh
   14000afb0:	rex.RXB
   14000afb1:	rex.RXB
   14000afb2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000afb6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000afba:	rex.RXB inc DWORD PTR [r15+0x47]
   14000afbe:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000afc0:	rex.RXB
   14000afc1:	rex.RXB
   14000afc2:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    BYTE PTR [rdi+0x47],al
   14000b08a:	rex.RXB push r8
   14000b08c:	rex.RXB
   14000b08d:	rex.RXB
   14000b08e:	rex.RXB out dx,eax
   14000b090:	rex.RXB
   14000b091:	rex.RXB
   14000b092:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b096:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000b09b:	(bad)  
   14000b09c:	cmp    bl,BYTE PTR [rbp-0x45ca0030]
   14000b0a2:	(bad)  
   14000b0a3:	(bad)  
   14000b0a4:	(bad)  
   14000b0a5:	(bad)  
   14000b0a6:	(bad)  
   14000b0a7:	(bad)  
   14000b0a8:	(bad)  
   14000b0a9:	(bad)  
   14000b0aa:	(bad)  
   14000b0ab:	inc    ebx
   14000b0ad:	pop    rsp
   14000b0ae:	add    bh,bh
   14000b0b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b0b1:	push   rdi
   14000b0b2:	adc    bh,bh
   14000b0b4:	pop    rsi
   14000b0b5:	rex.WXB cmp dil,r15b
   14000b0b8:	rex.RXB
   14000b0b9:	rex.RXB
   14000b0ba:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b0be:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b0c2:	rex.RXB out dx,eax
   14000b0c4:	rex.RXB
   14000b0c5:	rex.RXB
   14000b0c6:	rex.RXB push r8
	...
   14000b180:	rex.RXB
   14000b181:	rex.RXB
   14000b182:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000b186:	rex.RXB pop QWORD PTR [r15+0x47]
   14000b18a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b18e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b192:	rex.RXB (bad) 
   14000b194:	and    DWORD PTR ds:[rbx-0x145ca01],0xfeba35ff
   14000b19f:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x14000b05f
   14000b1a5:	(bad)  
   14000b1a6:	(bad)  
   14000b1a7:	(bad)  
   14000b1a8:	(bad)  
   14000b1a9:	(bad)  
   14000b1aa:	(bad)  
   14000b1ab:	inc    ebx
   14000b1ad:	pop    rsp
   14000b1ae:	add    bh,bh
   14000b1b0:	ret    
   14000b1b1:	pop    rsp
   14000b1b2:	add    bh,bh
   14000b1b4:	ret    
   14000b1b5:	pop    rsp
   14000b1b6:	add    bh,bh
   14000b1b8:	test   DWORD PTR [rcx+0x24],edx
   14000b1bb:	inc    DWORD PTR [rdi+0x47]
   14000b1be:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b1c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b1c6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b1ca:	rex.RXB pop QWORD PTR [r15+0x47]
   14000b1ce:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000b279:	add    BYTE PTR [rax],al
   14000b27b:	add    BYTE PTR [rdi+0x47],al
   14000b27e:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000b282:	rex.RXB iret 
   14000b284:	rex.RXB
   14000b285:	rex.RXB
   14000b286:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b28a:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000b28f:	(bad)  
   14000b290:	cmp    DWORD PTR [rbp-0x45ca0024],esp
   14000b296:	(bad)  
   14000b297:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600b157
   14000b29d:	mov    edx,0xba35fffe
   14000b2a2:	(bad)  
   14000b2a3:	(bad)  
   14000b2a4:	(bad)  
   14000b2a5:	(bad)  
   14000b2a6:	(bad)  
   14000b2a7:	(bad)  
   14000b2a8:	(bad)  
   14000b2a9:	(bad)  
   14000b2aa:	(bad)  
   14000b2ab:	inc    ebx
   14000b2ad:	pop    rbp
   14000b2ae:	add    bh,bh
   14000b2b0:	ret    
   14000b2b1:	pop    rsp
   14000b2b2:	add    bh,bh
   14000b2b4:	ret    
   14000b2b5:	pop    rsp
   14000b2b6:	add    bh,bh
   14000b2b8:	ret    
   14000b2b9:	pop    rsp
   14000b2ba:	add    bh,bh
   14000b2bc:	stos   DWORD PTR es:[rdi],eax
   14000b2bd:	pop    rax
   14000b2be:	or     eax,0x3a4b5eff
   14000b2c3:	inc    DWORD PTR [rdi+0x47]
   14000b2c6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b2ca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b2ce:	rex.RXB iret 
   14000b2d0:	rex.RXB
   14000b2d1:	rex.RXB
   14000b2d2:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000b375:	add    BYTE PTR [rax],al
   14000b377:	add    BYTE PTR [rdi+0x47],al
   14000b37a:	rex.RXB push r8
   14000b37c:	rex.RXB
   14000b37d:	rex.RXB
   14000b37e:	rex.RXB out dx,eax
   14000b380:	rex.RXB
   14000b381:	rex.RXB
   14000b382:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b386:	rex.RXB inc DWORD PTR [r8+0x7a]
   14000b38a:	xchg   edi,eax
   14000b38b:	push   QWORD PTR [rdi]
   14000b38d:	mov    ah,0xf3
   14000b38f:	push   QWORD PTR [rsi]
   14000b391:	mov    ebx,0xba35fffe
   14000b396:	(bad)  
   14000b397:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600b257
   14000b39d:	mov    edx,0xba35fffe
   14000b3a2:	(bad)  
   14000b3a3:	(bad)  
   14000b3a4:	(bad)  
   14000b3a5:	(bad)  
   14000b3a6:	(bad)  
   14000b3a7:	(bad)  
   14000b3a8:	(bad)  
   14000b3a9:	(bad)  
   14000b3aa:	(bad)  
   14000b3ab:	inc    ebx
   14000b3ad:	pop    rbp
   14000b3ae:	add    bh,bh
   14000b3b0:	ret    
   14000b3b1:	pop    rbp
   14000b3b2:	add    bh,bh
   14000b3b4:	ret    
   14000b3b5:	pop    rsp
   14000b3b6:	add    bh,bh
   14000b3b8:	ret    
   14000b3b9:	pop    rsp
   14000b3ba:	add    bh,bh
   14000b3bc:	ret    
   14000b3bd:	pop    rsp
   14000b3be:	add    bh,bh
   14000b3c0:	mov    ebx,0x7dff045a
   14000b3c5:	push   rax
   14000b3c6:	sub    bh,bh
   14000b3c8:	rex.RXB
   14000b3c9:	rex.RXB
   14000b3ca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b3ce:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b3d2:	rex.RXB out dx,eax
   14000b3d4:	rex.RXB
   14000b3d5:	rex.RXB
   14000b3d6:	rex.RXB push r8
	...
   14000b474:	rex.RXB
   14000b475:	rex.RXB
   14000b476:	rex.RXB jo 0x14000b4c0
   14000b479:	rex.RXB
   14000b47a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b47e:	rex.RXB inc DWORD PTR [r14+0x4e]
   14000b482:	push   rdx
   14000b483:	(bad)  
   14000b484:	cmp    edx,DWORD PTR [rdi-0x44c9003b]
   14000b48a:	(bad)  
   14000b48b:	push   QWORD PTR [rsi]
   14000b48d:	mov    ebx,0xbb36fffe
   14000b492:	(bad)  
   14000b493:	push   QWORD PTR [rsi]
   14000b495:	mov    ebx,0xba35fffe
   14000b49a:	(bad)  
   14000b49b:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600b35b
   14000b4a1:	mov    edx,0xfffffffe
   14000b4a6:	(bad)  
   14000b4a7:	(bad)  
   14000b4a8:	(bad)  
   14000b4a9:	(bad)  
   14000b4aa:	(bad)  
   14000b4ab:	inc    ebx
   14000b4ad:	pop    rbp
   14000b4ae:	add    bh,bh
   14000b4b0:	ret    
   14000b4b1:	pop    rbp
   14000b4b2:	add    bh,bh
   14000b4b4:	ret    
   14000b4b5:	pop    rbp
   14000b4b6:	add    bh,bh
   14000b4b8:	ret    
   14000b4b9:	pop    rsp
   14000b4ba:	add    bh,bh
   14000b4bc:	ret    
   14000b4bd:	pop    rsp
   14000b4be:	add    bh,bh
   14000b4c0:	ret    
   14000b4c1:	pop    rsp
   14000b4c2:	add    bh,bh
   14000b4c4:	ret    0x5b
   14000b4c7:	call   FWORD PTR [rbp+rdx*2+0x484fff16]
   14000b4ce:	rex.XB inc DWORD PTR [r15+0x47]
   14000b4d2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b4d6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b4da:	rex.RXB jo 0x14000b4dd
	...
   14000b56d:	add    BYTE PTR [rax],al
   14000b56f:	add    BYTE PTR [rdi+0x47],al
   14000b572:	rex.RXB lahf 
   14000b574:	rex.RXB
   14000b575:	rex.RXB
   14000b576:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b57a:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000b57f:	(bad)  
   14000b580:	cmp    ah,BYTE PTR [rsi-0x44c90024]
   14000b586:	(bad)  
   14000b587:	push   QWORD PTR [rsi]
   14000b589:	mov    ebx,0xbb36fffe
   14000b58e:	(bad)  
   14000b58f:	push   QWORD PTR [rsi]
   14000b591:	mov    ebx,0xbb36fffe
   14000b596:	(bad)  
   14000b597:	push   QWORD PTR [rsi]
   14000b599:	mov    ebx,0xba35fffe
   14000b59e:	(bad)  
   14000b59f:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x14000b45f
   14000b5a5:	(bad)  
   14000b5a6:	(bad)  
   14000b5a7:	(bad)  
   14000b5a8:	(bad)  
   14000b5a9:	(bad)  
   14000b5aa:	(bad)  
   14000b5ab:	inc    ebx
   14000b5ad:	pop    rsi
   14000b5ae:	add    bh,bh
   14000b5b0:	ret    
   14000b5b1:	pop    rbp
   14000b5b2:	add    bh,bh
   14000b5b4:	ret    
   14000b5b5:	pop    rbp
   14000b5b6:	add    bh,bh
   14000b5b8:	ret    
   14000b5b9:	pop    rbp
   14000b5ba:	add    bh,bh
   14000b5bc:	ret    
   14000b5bd:	pop    rsp
   14000b5be:	add    bh,bh
   14000b5c0:	ret    
   14000b5c1:	pop    rsp
   14000b5c2:	add    bh,bh
   14000b5c4:	ret    
   14000b5c5:	pop    rsp
   14000b5c6:	add    bh,bh
   14000b5c8:	ret    0x5b
   14000b5cb:	jmp    FWORD PTR [rbx+0x5eff0d57]
   14000b5d1:	rex.WXB cmp dil,r15b
   14000b5d4:	rex.RXB
   14000b5d5:	rex.RXB
   14000b5d6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b5da:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b5de:	rex.RXB lahf 
	...
   14000b668:	rex.RXB
   14000b669:	rex.RXB
   14000b66a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000b66e:	rex.RXB lahf 
   14000b670:	rex.RXB
   14000b671:	rex.RXB
   14000b672:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b676:	rex.RXB inc DWORD PTR [r11+0x64]
   14000b67a:	jne    0x14000b67b
   14000b67c:	cmp    BYTE PTR [rbp-0x43c8000d],dh
   14000b682:	(bad)  
   14000b683:	push   QWORD PTR [rdi]
   14000b685:	mov    esp,0xbb36fffe
   14000b68a:	(bad)  
   14000b68b:	push   QWORD PTR [rsi]
   14000b68d:	mov    ebx,0xbb36fffe
   14000b692:	(bad)  
   14000b693:	push   QWORD PTR [rsi]
   14000b695:	mov    ebx,0xbb36fffe
   14000b69a:	(bad)  
   14000b69b:	push   QWORD PTR [rsi]
   14000b69d:	mov    ebx,0xba35fffe
   14000b6a2:	(bad)  
   14000b6a3:	(bad)  
   14000b6a4:	(bad)  
   14000b6a5:	(bad)  
   14000b6a6:	(bad)  
   14000b6a7:	(bad)  
   14000b6a8:	(bad)  
   14000b6a9:	(bad)  
   14000b6aa:	(bad)  
   14000b6ab:	inc    esp
   14000b6ad:	pop    rsi
   14000b6ae:	add    bh,bh
   14000b6b0:	ret    
   14000b6b1:	pop    rsi
   14000b6b2:	add    bh,bh
   14000b6b4:	ret    
   14000b6b5:	pop    rbp
   14000b6b6:	add    bh,bh
   14000b6b8:	ret    
   14000b6b9:	pop    rbp
   14000b6ba:	add    bh,bh
   14000b6bc:	ret    
   14000b6bd:	pop    rbp
   14000b6be:	add    bh,bh
   14000b6c0:	ret    
   14000b6c1:	pop    rsp
   14000b6c2:	add    bh,bh
   14000b6c4:	ret    
   14000b6c5:	pop    rsp
   14000b6c6:	add    bh,bh
   14000b6c8:	ret    
   14000b6c9:	pop    rsp
   14000b6ca:	add    bh,bh
   14000b6cc:	ret    0x5b
   14000b6cf:	(bad)  
   14000b6d0:	mov    edx,0x66ff045a
   14000b6d5:	rex.WR xor rax,0x474747ff
   14000b6db:	inc    DWORD PTR [rdi+0x47]
   14000b6de:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b6e2:	rex.RXB lahf 
	...
   14000b764:	rex.RXB
   14000b765:	rex.RXB
   14000b766:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000b76a:	rex.RXB iret 
   14000b76c:	rex.RXB
   14000b76d:	rex.RXB
   14000b76e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b772:	rex.RXB inc DWORD PTR [r9+0x73]
   14000b776:	mov    edi,?
   14000b778:	(bad)  
   14000b779:	mov    esp,0xbc37fffe
   14000b77e:	(bad)  
   14000b77f:	push   QWORD PTR [rdi]
   14000b781:	mov    esp,0xbc37fffe
   14000b786:	(bad)  
   14000b787:	push   QWORD PTR [rdi]
   14000b789:	mov    esp,0xbb36fffe
   14000b78e:	(bad)  
   14000b78f:	push   QWORD PTR [rsi]
   14000b791:	mov    ebx,0xbb36fffe
   14000b796:	(bad)  
   14000b797:	push   QWORD PTR [rsi]
   14000b799:	mov    ebx,0xbb36fffe
   14000b79e:	(bad)  
   14000b79f:	push   QWORD PTR [rsi]
   14000b7a1:	mov    ebx,0xfffffffe
   14000b7a6:	(bad)  
   14000b7a7:	(bad)  
   14000b7a8:	(bad)  
   14000b7a9:	(bad)  
   14000b7aa:	(bad)  
   14000b7ab:	inc    esp
   14000b7ad:	pop    rsi
   14000b7ae:	add    bh,bh
   14000b7b0:	(bad)  
   14000b7b1:	pop    rsi
   14000b7b2:	add    bh,bh
   14000b7b4:	ret    
   14000b7b5:	pop    rsi
   14000b7b6:	add    bh,bh
   14000b7b8:	ret    
   14000b7b9:	pop    rbp
   14000b7ba:	add    bh,bh
   14000b7bc:	ret    
   14000b7bd:	pop    rbp
   14000b7be:	add    bh,bh
   14000b7c0:	ret    
   14000b7c1:	pop    rbp
   14000b7c2:	add    bh,bh
   14000b7c4:	ret    
   14000b7c5:	pop    rsp
   14000b7c6:	add    bh,bh
   14000b7c8:	ret    
   14000b7c9:	pop    rsp
   14000b7ca:	add    bh,bh
   14000b7cc:	ret    
   14000b7cd:	pop    rsp
   14000b7ce:	add    bh,bh
   14000b7d0:	ret    0x5b
   14000b7d3:	inc    edx
   14000b7d5:	pop    rbx
   14000b7d6:	add    bh,bh
   14000b7d8:	jne    0x14000b829
   14000b7da:	sub    al,0xff
   14000b7dc:	rex.RXB
   14000b7dd:	rex.RXB
   14000b7de:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b7e2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b7e6:	rex.RXB iret 
   14000b7e8:	rex.RXB
   14000b7e9:	rex.RXB
   14000b7ea:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000b85d:	add    BYTE PTR [rax],al
   14000b85f:	add    BYTE PTR [rdi+0x47],al
   14000b862:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000b866:	rex.RXB iret 
   14000b868:	rex.RXB
   14000b869:	rex.RXB
   14000b86a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b86e:	rex.RXB inc DWORD PTR [r9+0x73]
   14000b872:	mov    edi,?
   14000b874:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000b87b:	push   QWORD PTR [rdi]
   14000b87d:	mov    esp,0xbc37fffe
   14000b882:	(bad)  
   14000b883:	push   QWORD PTR [rdi]
   14000b885:	mov    esp,0xbc37fffe
   14000b88a:	(bad)  
   14000b88b:	push   QWORD PTR [rdi]
   14000b88d:	mov    esp,0xbb36fffe
   14000b892:	(bad)  
   14000b893:	push   QWORD PTR [rsi]
   14000b895:	mov    ebx,0xbb36fffe
   14000b89a:	(bad)  
   14000b89b:	push   QWORD PTR [rsi]
   14000b89d:	mov    ebx,0xbb36fffe
   14000b8a2:	(bad)  
   14000b8a3:	(bad)  
   14000b8a4:	(bad)  
   14000b8a5:	(bad)  
   14000b8a6:	(bad)  
   14000b8a7:	(bad)  
   14000b8a8:	(bad)  
   14000b8a9:	(bad)  
   14000b8aa:	(bad)  
   14000b8ab:	inc    esp
   14000b8ad:	pop    rsi
   14000b8ae:	add    bh,bh
   14000b8b0:	(bad)  
   14000b8b1:	pop    rsi
   14000b8b2:	add    bh,bh
   14000b8b4:	(bad)  
   14000b8b5:	pop    rsi
   14000b8b6:	add    bh,bh
   14000b8b8:	ret    
   14000b8b9:	pop    rsi
   14000b8ba:	add    bh,bh
   14000b8bc:	ret    
   14000b8bd:	pop    rbp
   14000b8be:	add    bh,bh
   14000b8c0:	ret    
   14000b8c1:	pop    rbp
   14000b8c2:	add    bh,bh
   14000b8c4:	ret    
   14000b8c5:	pop    rbp
   14000b8c6:	add    bh,bh
   14000b8c8:	ret    
   14000b8c9:	pop    rsp
   14000b8ca:	add    bh,bh
   14000b8cc:	ret    
   14000b8cd:	pop    rsp
   14000b8ce:	add    bh,bh
   14000b8d0:	ret    
   14000b8d1:	pop    rsp
   14000b8d2:	add    bh,bh
   14000b8d4:	ret    0x5b
   14000b8d7:	inc    edx
   14000b8d9:	pop    rbx
   14000b8da:	add    bh,bh
   14000b8dc:	jne    0x14000b92d
   14000b8de:	sub    al,0xff
   14000b8e0:	rex.RXB
   14000b8e1:	rex.RXB
   14000b8e2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b8e6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b8ea:	rex.RXB iret 
   14000b8ec:	rex.RXB
   14000b8ed:	rex.RXB
   14000b8ee:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000b95d:	add    BYTE PTR [rax],al
   14000b95f:	add    BYTE PTR [rdi+0x47],al
   14000b962:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000b964:	rex.RXB
   14000b965:	rex.RXB
   14000b966:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b96a:	rex.RXB inc DWORD PTR [r9+0x73]
   14000b96e:	mov    edi,?
   14000b970:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000b976:	(bad)  
   14000b977:	(bad)  
   14000b978:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000b97f:	push   QWORD PTR [rdi]
   14000b981:	mov    esp,0xbc37fffe
   14000b986:	(bad)  
   14000b987:	push   QWORD PTR [rdi]
   14000b989:	mov    esp,0xbc37fffe
   14000b98e:	(bad)  
   14000b98f:	push   QWORD PTR [rdi]
   14000b991:	mov    esp,0xbb36fffe
   14000b996:	(bad)  
   14000b997:	push   QWORD PTR [rsi]
   14000b999:	mov    ebx,0xbb36fffe
   14000b99e:	(bad)  
   14000b99f:	push   QWORD PTR [rsi]
   14000b9a1:	mov    ebx,0xfffffffe
   14000b9a6:	(bad)  
   14000b9a7:	(bad)  
   14000b9a8:	(bad)  
   14000b9a9:	(bad)  
   14000b9aa:	(bad)  
   14000b9ab:	inc    esp
   14000b9ad:	pop    rsi
   14000b9ae:	add    bh,bh
   14000b9b0:	(bad)  
   14000b9b1:	pop    rsi
   14000b9b2:	add    bh,bh
   14000b9b4:	(bad)  
   14000b9b5:	pop    rsi
   14000b9b6:	add    bh,bh
   14000b9b8:	(bad)  
   14000b9b9:	pop    rsi
   14000b9ba:	add    bh,bh
   14000b9bc:	ret    
   14000b9bd:	pop    rsi
   14000b9be:	add    bh,bh
   14000b9c0:	ret    
   14000b9c1:	pop    rbp
   14000b9c2:	add    bh,bh
   14000b9c4:	ret    
   14000b9c5:	pop    rbp
   14000b9c6:	add    bh,bh
   14000b9c8:	ret    
   14000b9c9:	pop    rbp
   14000b9ca:	add    bh,bh
   14000b9cc:	ret    
   14000b9cd:	pop    rsp
   14000b9ce:	add    bh,bh
   14000b9d0:	ret    
   14000b9d1:	pop    rsp
   14000b9d2:	add    bh,bh
   14000b9d4:	ret    
   14000b9d5:	pop    rsp
   14000b9d6:	add    bh,bh
   14000b9d8:	ret    0x5b
   14000b9db:	inc    edx
   14000b9dd:	pop    rbx
   14000b9de:	add    bh,bh
   14000b9e0:	jne    0x14000ba31
   14000b9e2:	sub    al,0xff
   14000b9e4:	rex.RXB
   14000b9e5:	rex.RXB
   14000b9e6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b9ea:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b9ee:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   14000ba5c:	rex.RXB
   14000ba5d:	rex.RXB
   14000ba5e:	rex.RXB lahf 
   14000ba60:	rex.RXB
   14000ba61:	rex.RXB
   14000ba62:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ba66:	rex.RXB inc DWORD PTR [r9+0x73]
   14000ba6a:	mov    edi,?
   14000ba6c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ba72:	(bad)  
   14000ba73:	(bad)  
   14000ba74:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ba7a:	(bad)  
   14000ba7b:	(bad)  
   14000ba7c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000ba83:	push   QWORD PTR [rdi]
   14000ba85:	mov    esp,0xbc37fffe
   14000ba8a:	(bad)  
   14000ba8b:	push   QWORD PTR [rdi]
   14000ba8d:	mov    esp,0xbc37fffe
   14000ba92:	(bad)  
   14000ba93:	push   QWORD PTR [rdi]
   14000ba95:	mov    esp,0xbb36fffe
   14000ba9a:	(bad)  
   14000ba9b:	push   QWORD PTR [rsi]
   14000ba9d:	mov    ebx,0xbb36fffe
   14000baa2:	(bad)  
   14000baa3:	(bad)  
   14000baa4:	(bad)  
   14000baa5:	(bad)  
   14000baa6:	(bad)  
   14000baa7:	(bad)  
   14000baa8:	(bad)  
   14000baa9:	(bad)  
   14000baaa:	(bad)  
   14000baab:	inc    esp
   14000baad:	pop    rdi
   14000baae:	add    bh,bh
   14000bab0:	(bad)  
   14000bab1:	pop    rsi
   14000bab2:	add    bh,bh
   14000bab4:	(bad)  
   14000bab5:	pop    rsi
   14000bab6:	add    bh,bh
   14000bab8:	(bad)  
   14000bab9:	pop    rsi
   14000baba:	add    bh,bh
   14000babc:	(bad)  
   14000babd:	pop    rsi
   14000babe:	add    bh,bh
   14000bac0:	ret    
   14000bac1:	pop    rsi
   14000bac2:	add    bh,bh
   14000bac4:	ret    
   14000bac5:	pop    rbp
   14000bac6:	add    bh,bh
   14000bac8:	ret    
   14000bac9:	pop    rbp
   14000baca:	add    bh,bh
   14000bacc:	ret    
   14000bacd:	pop    rbp
   14000bace:	add    bh,bh
   14000bad0:	ret    
   14000bad1:	pop    rsp
   14000bad2:	add    bh,bh
   14000bad4:	ret    
   14000bad5:	pop    rsp
   14000bad6:	add    bh,bh
   14000bad8:	ret    
   14000bad9:	pop    rsp
   14000bada:	add    bh,bh
   14000badc:	ret    0x5b
   14000badf:	inc    edx
   14000bae1:	pop    rbx
   14000bae2:	add    bh,bh
   14000bae4:	jne    0x14000bb35
   14000bae6:	sub    al,0xff
   14000bae8:	rex.RXB
   14000bae9:	rex.RXB
   14000baea:	rex.RXB inc DWORD PTR [r15+0x47]
   14000baee:	rex.RXB inc DWORD PTR [r15+0x47]
   14000baf2:	rex.RXB lahf 
	...
   14000bb58:	rex.RXB
   14000bb59:	rex.RXB
   14000bb5a:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000bb5f:	inc    DWORD PTR [rdi+0x47]
   14000bb62:	rex.RXB inc DWORD PTR [r10+0x73]
   14000bb66:	mov    edi,?
   14000bb68:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bb6e:	(bad)  
   14000bb6f:	(bad)  
   14000bb70:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bb76:	(bad)  
   14000bb77:	(bad)  
   14000bb78:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000bb7e:	(bad)  
   14000bb7f:	(bad)  
   14000bb80:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000bb87:	push   QWORD PTR [rdi]
   14000bb89:	mov    esp,0xbc37fffe
   14000bb8e:	(bad)  
   14000bb8f:	push   QWORD PTR [rdi]
   14000bb91:	mov    esp,0xbc37fffe
   14000bb96:	(bad)  
   14000bb97:	push   QWORD PTR [rdi]
   14000bb99:	mov    esp,0xbb36fffe
   14000bb9e:	(bad)  
   14000bb9f:	push   QWORD PTR [rsi]
   14000bba1:	mov    ebx,0xfffffffe
   14000bba6:	(bad)  
   14000bba7:	(bad)  
   14000bba8:	(bad)  
   14000bba9:	(bad)  
   14000bbaa:	(bad)  
   14000bbab:	inc    esp
   14000bbad:	pop    rdi
   14000bbae:	add    bh,bh
   14000bbb0:	(bad)  
   14000bbb1:	pop    rdi
   14000bbb2:	add    bh,bh
   14000bbb4:	(bad)  
   14000bbb5:	pop    rsi
   14000bbb6:	add    bh,bh
   14000bbb8:	(bad)  
   14000bbb9:	pop    rsi
   14000bbba:	add    bh,bh
   14000bbbc:	(bad)  
   14000bbbd:	pop    rsi
   14000bbbe:	add    bh,bh
   14000bbc0:	(bad)  
   14000bbc1:	pop    rsi
   14000bbc2:	add    bh,bh
   14000bbc4:	ret    
   14000bbc5:	pop    rsi
   14000bbc6:	add    bh,bh
   14000bbc8:	ret    
   14000bbc9:	pop    rbp
   14000bbca:	add    bh,bh
   14000bbcc:	ret    
   14000bbcd:	pop    rbp
   14000bbce:	add    bh,bh
   14000bbd0:	ret    
   14000bbd1:	pop    rbp
   14000bbd2:	add    bh,bh
   14000bbd4:	ret    
   14000bbd5:	pop    rsp
   14000bbd6:	add    bh,bh
   14000bbd8:	ret    
   14000bbd9:	pop    rsp
   14000bbda:	add    bh,bh
   14000bbdc:	ret    
   14000bbdd:	pop    rsp
   14000bbde:	add    bh,bh
   14000bbe0:	ret    0x5b
   14000bbe3:	inc    edx
   14000bbe5:	pop    rbx
   14000bbe6:	add    bh,bh
   14000bbe8:	jne    0x14000bc39
   14000bbea:	sub    al,0xff
   14000bbec:	rex.RXB
   14000bbed:	rex.RXB
   14000bbee:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bbf2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bbf6:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000bc52:	add    BYTE PTR [rax],al
   14000bc54:	rex.RXB
   14000bc55:	rex.RXB
   14000bc56:	rex.RXB push r8
   14000bc58:	rex.RXB
   14000bc59:	rex.RXB
   14000bc5a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bc5e:	rex.RXB inc DWORD PTR [r11+0x6c]
   14000bc62:	cmp    bh,0x39
   14000bc65:	mov    esi,0xbd39fffe
   14000bc6a:	(bad)  
   14000bc6b:	(bad)  
   14000bc6c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bc72:	(bad)  
   14000bc73:	(bad)  
   14000bc74:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bc7a:	(bad)  
   14000bc7b:	(bad)  
   14000bc7c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000bc82:	(bad)  
   14000bc83:	(bad)  
   14000bc84:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000bc8b:	push   QWORD PTR [rdi]
   14000bc8d:	mov    esp,0xbc37fffe
   14000bc92:	(bad)  
   14000bc93:	push   QWORD PTR [rdi]
   14000bc95:	mov    esp,0xbc37fffe
   14000bc9a:	(bad)  
   14000bc9b:	push   QWORD PTR [rdi]
   14000bc9d:	mov    esp,0xbb36fffe
   14000bca2:	(bad)  
   14000bca3:	(bad)  
   14000bca4:	(bad)  
   14000bca5:	(bad)  
   14000bca6:	(bad)  
   14000bca7:	(bad)  
   14000bca8:	(bad)  
   14000bca9:	(bad)  
   14000bcaa:	(bad)  
   14000bcab:	inc    esp
   14000bcad:	pop    rdi
   14000bcae:	add    bh,bh
   14000bcb0:	(bad)  
   14000bcb1:	pop    rdi
   14000bcb2:	add    bh,bh
   14000bcb4:	(bad)  
   14000bcb5:	pop    rdi
   14000bcb6:	add    bh,bh
   14000bcb8:	(bad)  
   14000bcb9:	pop    rsi
   14000bcba:	add    bh,bh
   14000bcbc:	(bad)  
   14000bcbd:	pop    rsi
   14000bcbe:	add    bh,bh
   14000bcc0:	(bad)  
   14000bcc1:	pop    rsi
   14000bcc2:	add    bh,bh
   14000bcc4:	(bad)  
   14000bcc5:	pop    rsi
   14000bcc6:	add    bh,bh
   14000bcc8:	ret    
   14000bcc9:	pop    rsi
   14000bcca:	add    bh,bh
   14000bccc:	ret    
   14000bccd:	pop    rbp
   14000bcce:	add    bh,bh
   14000bcd0:	ret    
   14000bcd1:	pop    rbp
   14000bcd2:	add    bh,bh
   14000bcd4:	ret    
   14000bcd5:	pop    rbp
   14000bcd6:	add    bh,bh
   14000bcd8:	ret    
   14000bcd9:	pop    rsp
   14000bcda:	add    bh,bh
   14000bcdc:	ret    
   14000bcdd:	pop    rsp
   14000bcde:	add    bh,bh
   14000bce0:	ret    
   14000bce1:	pop    rsp
   14000bce2:	add    bh,bh
   14000bce4:	ret    0x5b
   14000bce7:	inc    edx
   14000bce9:	pop    rbx
   14000bcea:	add    bh,bh
   14000bcec:	ins    DWORD PTR es:[rdi],dx
   14000bced:	xor    r15,r15
   14000bcf0:	rex.RXB
   14000bcf1:	rex.RXB
   14000bcf2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bcf6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bcfa:	rex.RXB push r8
	...
   14000bd50:	rex.RXB
   14000bd51:	rex.RXB
   14000bd52:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000bd56:	rex.RXB out dx,eax
   14000bd58:	rex.RXB
   14000bd59:	rex.RXB
   14000bd5a:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000bd5f:	(bad)  
   14000bd60:	cmp    dh,BYTE PTR [rdi-0x41c6000d]
   14000bd66:	(bad)  
   14000bd67:	(bad)  
   14000bd68:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000bd6e:	(bad)  
   14000bd6f:	(bad)  
   14000bd70:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bd76:	(bad)  
   14000bd77:	(bad)  
   14000bd78:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bd7e:	(bad)  
   14000bd7f:	(bad)  
   14000bd80:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000bd86:	(bad)  
   14000bd87:	(bad)  
   14000bd88:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000bd8f:	push   QWORD PTR [rdi]
   14000bd91:	mov    esp,0xbc37fffe
   14000bd96:	(bad)  
   14000bd97:	push   QWORD PTR [rdi]
   14000bd99:	mov    esp,0xbc37fffe
   14000bd9e:	(bad)  
   14000bd9f:	push   QWORD PTR [rdi]
   14000bda1:	mov    esp,0xfffffffe
   14000bda6:	(bad)  
   14000bda7:	(bad)  
   14000bda8:	(bad)  
   14000bda9:	(bad)  
   14000bdaa:	(bad)  
   14000bdab:	inc    esp
   14000bdad:	(bad)  
   14000bdae:	add    bh,bh
   14000bdb0:	(bad)  
   14000bdb1:	pop    rdi
   14000bdb2:	add    bh,bh
   14000bdb4:	(bad)  
   14000bdb5:	pop    rdi
   14000bdb6:	add    bh,bh
   14000bdb8:	(bad)  
   14000bdb9:	pop    rdi
   14000bdba:	add    bh,bh
   14000bdbc:	(bad)  
   14000bdbd:	pop    rsi
   14000bdbe:	add    bh,bh
   14000bdc0:	(bad)  
   14000bdc1:	pop    rsi
   14000bdc2:	add    bh,bh
   14000bdc4:	(bad)  
   14000bdc5:	pop    rsi
   14000bdc6:	add    bh,bh
   14000bdc8:	(bad)  
   14000bdc9:	pop    rsi
   14000bdca:	add    bh,bh
   14000bdcc:	ret    
   14000bdcd:	pop    rsi
   14000bdce:	add    bh,bh
   14000bdd0:	ret    
   14000bdd1:	pop    rbp
   14000bdd2:	add    bh,bh
   14000bdd4:	ret    
   14000bdd5:	pop    rbp
   14000bdd6:	add    bh,bh
   14000bdd8:	ret    
   14000bdd9:	pop    rbp
   14000bdda:	add    bh,bh
   14000bddc:	ret    
   14000bddd:	pop    rsp
   14000bdde:	add    bh,bh
   14000bde0:	ret    
   14000bde1:	pop    rsp
   14000bde2:	add    bh,bh
   14000bde4:	ret    
   14000bde5:	pop    rsp
   14000bde6:	add    bh,bh
   14000bde8:	ret    0x5b
   14000bdeb:	(bad)  
   14000bdec:	mov    edx,0x5eff045a
   14000bdf1:	rex.WXB cmp dil,r15b
   14000bdf4:	rex.RXB
   14000bdf5:	rex.RXB
   14000bdf6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bdfa:	rex.RXB out dx,eax
   14000bdfc:	rex.RXB
   14000bdfd:	rex.RXB
   14000bdfe:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000be4d:	add    BYTE PTR [rax],al
   14000be4f:	add    BYTE PTR [rdi+0x47],al
   14000be52:	rex.RXB mov r15d,0xff474747
   14000be58:	rex.RX
   14000be59:	rex.WRX push rdx
   14000be5b:	(bad)  
   14000be5c:	cmp    al,0xa8
   14000be5e:	fdiv   st(7),st
   14000be60:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000be66:	(bad)  
   14000be67:	(bad)  
   14000be68:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000be6e:	(bad)  
   14000be6f:	(bad)  
   14000be70:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000be76:	(bad)  
   14000be77:	(bad)  
   14000be78:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000be7e:	(bad)  
   14000be7f:	(bad)  
   14000be80:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000be86:	(bad)  
   14000be87:	(bad)  
   14000be88:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000be8f:	push   QWORD PTR [rdi]
   14000be91:	mov    esp,0xbc37fffe
   14000be96:	(bad)  
   14000be97:	push   QWORD PTR [rdi]
   14000be99:	mov    esp,0xbc37fffe
   14000be9e:	(bad)  
   14000be9f:	push   QWORD PTR [rdi]
   14000bea1:	mov    esp,0xfffffffe
   14000bea6:	(bad)  
   14000bea7:	(bad)  
   14000bea8:	(bad)  
   14000bea9:	(bad)  
   14000beaa:	(bad)  
   14000beab:	inc    ebp
   14000bead:	(bad)  
   14000beae:	add    bh,bh
   14000beb0:	(bad)  
   14000beb1:	(bad)  
   14000beb2:	add    bh,bh
   14000beb4:	(bad)  
   14000beb5:	pop    rdi
   14000beb6:	add    bh,bh
   14000beb8:	(bad)  
   14000beb9:	pop    rdi
   14000beba:	add    bh,bh
   14000bebc:	(bad)  
   14000bebd:	pop    rdi
   14000bebe:	add    bh,bh
   14000bec0:	(bad)  
   14000bec1:	pop    rsi
   14000bec2:	add    bh,bh
   14000bec4:	(bad)  
   14000bec5:	pop    rsi
   14000bec6:	add    bh,bh
   14000bec8:	(bad)  
   14000bec9:	pop    rsi
   14000beca:	add    bh,bh
   14000becc:	(bad)  
   14000becd:	pop    rsi
   14000bece:	add    bh,bh
   14000bed0:	ret    
   14000bed1:	pop    rsi
   14000bed2:	add    bh,bh
   14000bed4:	ret    
   14000bed5:	pop    rbp
   14000bed6:	add    bh,bh
   14000bed8:	ret    
   14000bed9:	pop    rbp
   14000beda:	add    bh,bh
   14000bedc:	ret    
   14000bedd:	pop    rbp
   14000bede:	add    bh,bh
   14000bee0:	ret    
   14000bee1:	pop    rsp
   14000bee2:	add    bh,bh
   14000bee4:	ret    
   14000bee5:	pop    rsp
   14000bee6:	add    bh,bh
   14000bee8:	ret    
   14000bee9:	pop    rsp
   14000beea:	add    bh,bh
   14000beec:	ret    0x5b
   14000beef:	jmp    FWORD PTR [rbx+0x4fff0d57]
   14000bef5:	rex.W
   14000bef6:	rex.XB inc DWORD PTR [r15+0x47]
   14000befa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000befe:	rex.RXB mov r15d,0x0
	...
   14000bf4c:	rex.RXB
   14000bf4d:	rex.RXB
   14000bf4e:	rex.RXB jo 0x14000bf98
   14000bf51:	rex.RXB
   14000bf52:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bf56:	rex.RXB (bad) 
   14000bf58:	ds cdq 
   14000bf5a:	(bad)  
   14000bf5d:	mov    esi,0xbe39fffe
   14000bf62:	(bad)  
   14000bf63:	(bad)  
   14000bf64:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000bf6a:	(bad)  
   14000bf6b:	(bad)  
   14000bf6c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000bf72:	(bad)  
   14000bf73:	(bad)  
   14000bf74:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000bf7a:	(bad)  
   14000bf7b:	(bad)  
   14000bf7c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bf82:	(bad)  
   14000bf83:	(bad)  
   14000bf84:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bf8a:	(bad)  
   14000bf8b:	(bad)  
   14000bf8c:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000bf93:	push   QWORD PTR [rdi]
   14000bf95:	mov    esp,0xbc37fffe
   14000bf9a:	(bad)  
   14000bf9b:	push   QWORD PTR [rdi]
   14000bf9d:	mov    esp,0xbc37fffe
   14000bfa2:	(bad)  
   14000bfa3:	(bad)  
   14000bfa4:	(bad)  
   14000bfa5:	(bad)  
   14000bfa6:	(bad)  
   14000bfa7:	(bad)  
   14000bfa8:	(bad)  
   14000bfa9:	(bad)  
   14000bfaa:	(bad)  
   14000bfab:	inc    ebp
   14000bfad:	(bad)  
   14000bfae:	add    bh,bh
   14000bfb0:	(bad)
   14000bfb3:	inc    esp
   14000bfb5:	(bad)  
   14000bfb6:	add    bh,bh
   14000bfb8:	(bad)  
   14000bfb9:	pop    rdi
   14000bfba:	add    bh,bh
   14000bfbc:	(bad)  
   14000bfbd:	pop    rdi
   14000bfbe:	add    bh,bh
   14000bfc0:	(bad)  
   14000bfc1:	pop    rdi
   14000bfc2:	add    bh,bh
   14000bfc4:	(bad)  
   14000bfc5:	pop    rsi
   14000bfc6:	add    bh,bh
   14000bfc8:	(bad)  
   14000bfc9:	pop    rsi
   14000bfca:	add    bh,bh
   14000bfcc:	(bad)  
   14000bfcd:	pop    rsi
   14000bfce:	add    bh,bh
   14000bfd0:	(bad)  
   14000bfd1:	pop    rsi
   14000bfd2:	add    bh,bh
   14000bfd4:	ret    
   14000bfd5:	pop    rsi
   14000bfd6:	add    bh,bh
   14000bfd8:	ret    
   14000bfd9:	pop    rbp
   14000bfda:	add    bh,bh
   14000bfdc:	ret    
   14000bfdd:	pop    rbp
   14000bfde:	add    bh,bh
   14000bfe0:	ret    
   14000bfe1:	pop    rbp
   14000bfe2:	add    bh,bh
   14000bfe4:	ret    
   14000bfe5:	pop    rsp
   14000bfe6:	add    bh,bh
   14000bfe8:	ret    
   14000bfe9:	pop    rsp
   14000bfea:	add    bh,bh
   14000bfec:	ret    
   14000bfed:	pop    rsp
   14000bfee:	add    bh,bh
   14000bff0:	ret    0x5b
   14000bff3:	call   FWORD PTR [rbp+rdx*2+0x4747ff16]
   14000bffa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bffe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c002:	rex.RXB jo 0x14000c005
	...
   14000c045:	add    BYTE PTR [rax],al
   14000c047:	add    BYTE PTR [rdi+0x47],al
   14000c04a:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000c04e:	rex.RXB out dx,eax
   14000c050:	rex.RXB
   14000c051:	rex.RXB
   14000c052:	rex.RXB inc DWORD PTR [r11+0x6d]
   14000c056:	cmp    bh,0x3a
   14000c059:	mov    edi,0xbe3afffe
   14000c05e:	(bad)  
   14000c05f:	(bad)  
   14000c060:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000c066:	(bad)  
   14000c067:	(bad)  
   14000c068:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c06e:	(bad)  
   14000c06f:	(bad)  
   14000c070:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c076:	(bad)  
   14000c077:	(bad)  
   14000c078:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c07e:	(bad)  
   14000c07f:	(bad)  
   14000c080:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c086:	(bad)  
   14000c087:	(bad)  
   14000c088:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c08e:	(bad)  
   14000c08f:	(bad)  
   14000c090:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c097:	push   QWORD PTR [rdi]
   14000c099:	mov    esp,0xbc37fffe
   14000c09e:	(bad)  
   14000c09f:	push   QWORD PTR [rdi]
   14000c0a1:	mov    esp,0xfffffffe
   14000c0a6:	(bad)  
   14000c0a7:	(bad)  
   14000c0a8:	(bad)  
   14000c0a9:	(bad)  
   14000c0aa:	(bad)  
   14000c0ab:	inc    ebp
   14000c0ad:	(bad)  
   14000c0ae:	add    bh,bh
   14000c0b0:	(bad)
   14000c0b3:	inc    ebp
   14000c0b5:	(bad)  
   14000c0b6:	add    bh,bh
   14000c0b8:	(bad)  
   14000c0b9:	(bad)  
   14000c0ba:	add    bh,bh
   14000c0bc:	(bad)  
   14000c0bd:	pop    rdi
   14000c0be:	add    bh,bh
   14000c0c0:	(bad)  
   14000c0c1:	pop    rdi
   14000c0c2:	add    bh,bh
   14000c0c4:	(bad)  
   14000c0c5:	pop    rdi
   14000c0c6:	add    bh,bh
   14000c0c8:	(bad)  
   14000c0c9:	pop    rsi
   14000c0ca:	add    bh,bh
   14000c0cc:	(bad)  
   14000c0cd:	pop    rsi
   14000c0ce:	add    bh,bh
   14000c0d0:	(bad)  
   14000c0d1:	pop    rsi
   14000c0d2:	add    bh,bh
   14000c0d4:	(bad)  
   14000c0d5:	pop    rsi
   14000c0d6:	add    bh,bh
   14000c0d8:	ret    
   14000c0d9:	pop    rsi
   14000c0da:	add    bh,bh
   14000c0dc:	ret    
   14000c0dd:	pop    rbp
   14000c0de:	add    bh,bh
   14000c0e0:	ret    
   14000c0e1:	pop    rbp
   14000c0e2:	add    bh,bh
   14000c0e4:	ret    
   14000c0e5:	pop    rbp
   14000c0e6:	add    bh,bh
   14000c0e8:	ret    
   14000c0e9:	pop    rsp
   14000c0ea:	add    bh,bh
   14000c0ec:	ret    
   14000c0ed:	pop    rsp
   14000c0ee:	add    bh,bh
   14000c0f0:	ret    
   14000c0f1:	pop    rsp
   14000c0f2:	add    bh,bh
   14000c0f4:	ret    0x5b
   14000c0f7:	jmp    FWORD PTR [rbp+0x4d]
   14000c0fa:	xor    edi,edi
   14000c0fc:	rex.RXB
   14000c0fd:	rex.RXB
   14000c0fe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c102:	rex.RXB out dx,eax
   14000c104:	rex.RXB
   14000c105:	rex.RXB
   14000c106:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rdi+0x47],al
   14000c14a:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000c14c:	rex.RXB
   14000c14d:	rex.RXB
   14000c14e:	rex.RXB inc DWORD PTR [r14+0x4f]
   14000c152:	push   rdx
   14000c153:	(bad)  
   14000c154:	cmp    edi,DWORD PTR [rax-0x40c5000d]
   14000c15a:	(bad)  
   14000c15b:	(bad)  
   14000c15c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000c162:	(bad)  
   14000c163:	(bad)  
   14000c164:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000c16a:	(bad)  
   14000c16b:	(bad)  
   14000c16c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c172:	(bad)  
   14000c173:	(bad)  
   14000c174:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c17a:	(bad)  
   14000c17b:	(bad)  
   14000c17c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c182:	(bad)  
   14000c183:	(bad)  
   14000c184:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c18a:	(bad)  
   14000c18b:	(bad)  
   14000c18c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c192:	(bad)  
   14000c193:	(bad)  
   14000c194:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c19b:	push   QWORD PTR [rdi]
   14000c19d:	mov    esp,0xbc37fffe
   14000c1a2:	(bad)  
   14000c1a3:	(bad)  
   14000c1a4:	(bad)  
   14000c1a5:	(bad)  
   14000c1a6:	(bad)  
   14000c1a7:	(bad)  
   14000c1a8:	(bad)  
   14000c1a9:	(bad)  
   14000c1aa:	(bad)  
   14000c1ab:	inc    ebp
   14000c1ad:	(bad)  
   14000c1ae:	add    bh,bh
   14000c1b0:	(bad)
   14000c1b3:	inc    ebp
   14000c1b5:	(bad)  
   14000c1b6:	add    bh,bh
   14000c1b8:	(bad)
   14000c1bb:	inc    esp
   14000c1bd:	(bad)  
   14000c1be:	add    bh,bh
   14000c1c0:	(bad)  
   14000c1c1:	pop    rdi
   14000c1c2:	add    bh,bh
   14000c1c4:	(bad)  
   14000c1c5:	pop    rdi
   14000c1c6:	add    bh,bh
   14000c1c8:	(bad)  
   14000c1c9:	pop    rdi
   14000c1ca:	add    bh,bh
   14000c1cc:	(bad)  
   14000c1cd:	pop    rsi
   14000c1ce:	add    bh,bh
   14000c1d0:	(bad)  
   14000c1d1:	pop    rsi
   14000c1d2:	add    bh,bh
   14000c1d4:	(bad)  
   14000c1d5:	pop    rsi
   14000c1d6:	add    bh,bh
   14000c1d8:	(bad)  
   14000c1d9:	pop    rsi
   14000c1da:	add    bh,bh
   14000c1dc:	ret    
   14000c1dd:	pop    rsi
   14000c1de:	add    bh,bh
   14000c1e0:	ret    
   14000c1e1:	pop    rbp
   14000c1e2:	add    bh,bh
   14000c1e4:	ret    
   14000c1e5:	pop    rbp
   14000c1e6:	add    bh,bh
   14000c1e8:	ret    
   14000c1e9:	pop    rbp
   14000c1ea:	add    bh,bh
   14000c1ec:	ret    
   14000c1ed:	pop    rsp
   14000c1ee:	add    bh,bh
   14000c1f0:	ret    
   14000c1f1:	pop    rsp
   14000c1f2:	add    bh,bh
   14000c1f4:	ret    
   14000c1f5:	pop    rsp
   14000c1f6:	add    bh,bh
   14000c1f8:	mov    ebx,0x4fff045a
   14000c1fd:	rex.W
   14000c1fe:	rex.XB inc DWORD PTR [r15+0x47]
   14000c202:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c206:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   14000c244:	rex.RXB
   14000c245:	rex.RXB
   14000c246:	rex.RXB
   14000c247:	rex
   14000c248:	rex.RXB
   14000c249:	rex.RXB
   14000c24a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c24e:	rex.RXB (bad) 
   14000c250:	(bad)  
   14000c251:	xchg   edx,eax
   14000c252:	mov    ecx,0xfebf3aff
   14000c257:	(bad)  
   14000c258:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c25e:	(bad)  
   14000c25f:	(bad)  
   14000c260:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000c266:	(bad)  
   14000c267:	(bad)  
   14000c268:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000c26e:	(bad)  
   14000c26f:	(bad)  
   14000c270:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c276:	(bad)  
   14000c277:	(bad)  
   14000c278:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c27e:	(bad)  
   14000c27f:	(bad)  
   14000c280:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c286:	(bad)  
   14000c287:	(bad)  
   14000c288:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c28e:	(bad)  
   14000c28f:	(bad)  
   14000c290:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c296:	(bad)  
   14000c297:	(bad)  
   14000c298:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c29f:	push   QWORD PTR [rdi]
   14000c2a1:	mov    esp,0xfffffffe
   14000c2a6:	(bad)  
   14000c2a7:	(bad)  
   14000c2a8:	(bad)  
   14000c2a9:	(bad)  
   14000c2aa:	(bad)  
   14000c2ab:	inc    ebp
   14000c2ad:	(bad)  
   14000c2ae:	add    bh,bh
   14000c2b0:	(bad)
   14000c2b3:	inc    ebp
   14000c2b5:	(bad)  
   14000c2b6:	add    bh,bh
   14000c2b8:	(bad)
   14000c2bb:	inc    ebp
   14000c2bd:	(bad)  
   14000c2be:	add    bh,bh
   14000c2c0:	(bad)  
   14000c2c1:	(bad)  
   14000c2c2:	add    bh,bh
   14000c2c4:	(bad)  
   14000c2c5:	pop    rdi
   14000c2c6:	add    bh,bh
   14000c2c8:	(bad)  
   14000c2c9:	pop    rdi
   14000c2ca:	add    bh,bh
   14000c2cc:	(bad)  
   14000c2cd:	pop    rdi
   14000c2ce:	add    bh,bh
   14000c2d0:	(bad)  
   14000c2d1:	pop    rsi
   14000c2d2:	add    bh,bh
   14000c2d4:	(bad)  
   14000c2d5:	pop    rsi
   14000c2d6:	add    bh,bh
   14000c2d8:	(bad)  
   14000c2d9:	pop    rsi
   14000c2da:	add    bh,bh
   14000c2dc:	(bad)  
   14000c2dd:	pop    rsi
   14000c2de:	add    bh,bh
   14000c2e0:	ret    
   14000c2e1:	pop    rsi
   14000c2e2:	add    bh,bh
   14000c2e4:	ret    
   14000c2e5:	pop    rbp
   14000c2e6:	add    bh,bh
   14000c2e8:	ret    
   14000c2e9:	pop    rbp
   14000c2ea:	add    bh,bh
   14000c2ec:	ret    
   14000c2ed:	pop    rbp
   14000c2ee:	add    bh,bh
   14000c2f0:	ret    
   14000c2f1:	pop    rsp
   14000c2f2:	add    bh,bh
   14000c2f4:	ret    
   14000c2f5:	pop    rsp
   14000c2f6:	add    bh,bh
   14000c2f8:	ret    
   14000c2f9:	pop    rsp
   14000c2fa:	add    bh,bh
   14000c2fc:	xchg   esp,eax
   14000c2fd:	push   rsp
   14000c2fe:	sbb    edi,edi
   14000c300:	rex.RXB
   14000c301:	rex.RXB
   14000c302:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c306:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c30a:	rex.RXB
   14000c30b:	add    BYTE PTR [rax],al
	...
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	rex.RXB
   14000c345:	rex.RXB
   14000c346:	rex.RXB mov r15d,0xff474747
   14000c34c:	rex.RX push rsi
   14000c34e:	pop    rsi
   14000c34f:	(bad)  
   14000c350:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000c356:	(bad)  
   14000c357:	(bad)  
   14000c358:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c35e:	(bad)  
   14000c35f:	(bad)  
   14000c360:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c366:	(bad)  
   14000c367:	(bad)  
   14000c368:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c36e:	(bad)  
   14000c36f:	(bad)  
   14000c370:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c376:	(bad)  
   14000c377:	(bad)  
   14000c378:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c37e:	(bad)  
   14000c37f:	(bad)  
   14000c380:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c386:	(bad)  
   14000c387:	(bad)  
   14000c388:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c38e:	(bad)  
   14000c38f:	(bad)  
   14000c390:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c396:	(bad)  
   14000c397:	(bad)  
   14000c398:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000c39e:	(bad)  
   14000c39f:	(bad)  
   14000c3a0:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   14000c3a7:	(bad)  
   14000c3a8:	(bad)  
   14000c3a9:	(bad)  
   14000c3aa:	(bad)  
   14000c3ab:	inc    ebp
   14000c3ad:	(bad)  
   14000c3ae:	add    bh,bh
   14000c3b0:	(bad)
   14000c3b3:	inc    ebp
   14000c3b5:	(bad)  
   14000c3b6:	add    bh,bh
   14000c3b8:	(bad)
   14000c3bb:	inc    ebp
   14000c3bd:	(bad)  
   14000c3be:	add    bh,bh
   14000c3c0:	(bad)
   14000c3c3:	inc    esp
   14000c3c5:	(bad)  
   14000c3c6:	add    bh,bh
   14000c3c8:	(bad)  
   14000c3c9:	pop    rdi
   14000c3ca:	add    bh,bh
   14000c3cc:	(bad)  
   14000c3cd:	pop    rdi
   14000c3ce:	add    bh,bh
   14000c3d0:	(bad)  
   14000c3d1:	pop    rdi
   14000c3d2:	add    bh,bh
   14000c3d4:	(bad)  
   14000c3d5:	pop    rsi
   14000c3d6:	add    bh,bh
   14000c3d8:	(bad)  
   14000c3d9:	pop    rsi
   14000c3da:	add    bh,bh
   14000c3dc:	(bad)  
   14000c3dd:	pop    rsi
   14000c3de:	add    bh,bh
   14000c3e0:	(bad)  
   14000c3e1:	pop    rsi
   14000c3e2:	add    bh,bh
   14000c3e4:	ret    
   14000c3e5:	pop    rsi
   14000c3e6:	add    bh,bh
   14000c3e8:	ret    
   14000c3e9:	pop    rbp
   14000c3ea:	add    bh,bh
   14000c3ec:	ret    
   14000c3ed:	pop    rbp
   14000c3ee:	add    bh,bh
   14000c3f0:	ret    
   14000c3f1:	pop    rbp
   14000c3f2:	add    bh,bh
   14000c3f4:	ret    
   14000c3f5:	pop    rsp
   14000c3f6:	add    bh,bh
   14000c3f8:	ret    
   14000c3f9:	pop    rsp
   14000c3fa:	add    bh,bh
   14000c3fc:	ret    
   14000c3fd:	pop    rsp
   14000c3fe:	add    bh,bh
   14000c400:	push   rdi
   14000c401:	rex.WX
   14000c402:	inc    DWORD PTR ds:[rdi+0x47]
   14000c406:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c40a:	rex.RXB mov r15d,0x0
	...
   14000c440:	rex.RXB
   14000c441:	rex.RXB
   14000c442:	rex.RXB
   14000c443:	rex
   14000c444:	rex.RXB
   14000c445:	rex.RXB
   14000c446:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c44a:	rex.RXB inc DWORD PTR [r8-0x6d]
   14000c44e:	mov    ecx,0xfec03bff
   14000c453:	(bad)  
   14000c454:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000c45a:	(bad)  
   14000c45b:	(bad)  
   14000c45c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c462:	(bad)  
   14000c463:	(bad)  
   14000c464:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c46a:	(bad)  
   14000c46b:	(bad)  
   14000c46c:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c472:	(bad)  
   14000c473:	(bad)  
   14000c474:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c47a:	(bad)  
   14000c47b:	(bad)  
   14000c47c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c482:	(bad)  
   14000c483:	(bad)  
   14000c484:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c48a:	(bad)  
   14000c48b:	(bad)  
   14000c48c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c492:	(bad)  
   14000c493:	(bad)  
   14000c494:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c49a:	(bad)  
   14000c49b:	(bad)  
   14000c49c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000c4a2:	(bad)  
   14000c4a3:	(bad)  
   14000c4a4:	(bad)  
   14000c4a5:	(bad)  
   14000c4a6:	(bad)  
   14000c4a7:	(bad)  
   14000c4a8:	(bad)  
   14000c4a9:	(bad)  
   14000c4aa:	(bad)  
   14000c4ab:	inc    ebp
   14000c4ad:	(bad)  
   14000c4ae:	add    bh,bh
   14000c4b0:	(bad)
   14000c4b3:	inc    ebp
   14000c4b5:	(bad)  
   14000c4b6:	add    bh,bh
   14000c4b8:	(bad)
   14000c4bb:	inc    ebp
   14000c4bd:	(bad)  
   14000c4be:	add    bh,bh
   14000c4c0:	(bad)
   14000c4c3:	inc    ebp
   14000c4c5:	(bad)  
   14000c4c6:	add    bh,bh
   14000c4c8:	(bad)  
   14000c4c9:	(bad)  
   14000c4ca:	add    bh,bh
   14000c4cc:	(bad)  
   14000c4cd:	pop    rdi
   14000c4ce:	add    bh,bh
   14000c4d0:	(bad)  
   14000c4d1:	pop    rdi
   14000c4d2:	add    bh,bh
   14000c4d4:	(bad)  
   14000c4d5:	pop    rdi
   14000c4d6:	add    bh,bh
   14000c4d8:	(bad)  
   14000c4d9:	pop    rsi
   14000c4da:	add    bh,bh
   14000c4dc:	(bad)  
   14000c4dd:	pop    rsi
   14000c4de:	add    bh,bh
   14000c4e0:	(bad)  
   14000c4e1:	pop    rsi
   14000c4e2:	add    bh,bh
   14000c4e4:	(bad)  
   14000c4e5:	pop    rsi
   14000c4e6:	add    bh,bh
   14000c4e8:	ret    
   14000c4e9:	pop    rsi
   14000c4ea:	add    bh,bh
   14000c4ec:	ret    
   14000c4ed:	pop    rbp
   14000c4ee:	add    bh,bh
   14000c4f0:	ret    
   14000c4f1:	pop    rbp
   14000c4f2:	add    bh,bh
   14000c4f4:	ret    
   14000c4f5:	pop    rbp
   14000c4f6:	add    bh,bh
   14000c4f8:	ret    
   14000c4f9:	pop    rsp
   14000c4fa:	add    bh,bh
   14000c4fc:	ret    
   14000c4fd:	pop    rsp
   14000c4fe:	add    bh,bh
   14000c500:	xchg   ebp,eax
   14000c501:	push   rsp
   14000c502:	sbb    edi,edi
   14000c504:	rex.RXB
   14000c505:	rex.RXB
   14000c506:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c50a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c50e:	rex.RXB
   14000c50f:	add    BYTE PTR [rax],al
	...
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	rex.RXB
   14000c541:	rex.RXB
   14000c542:	rex.RXB lahf 
   14000c544:	rex.RXB
   14000c545:	rex.RXB
   14000c546:	rex.RXB inc DWORD PTR [r14+0x56]
   14000c54a:	pop    rsi
   14000c54b:	(bad)  
   14000c54c:	cmp    eax,eax
   14000c54e:	(bad)  
   14000c54f:	(bad)  
   14000c550:	cmp    eax,eax
   14000c552:	(bad)  
   14000c553:	(bad)  
   14000c554:	cmp    eax,eax
   14000c556:	(bad)  
   14000c557:	(bad)  
   14000c558:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000c55e:	(bad)  
   14000c55f:	(bad)  
   14000c560:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c566:	(bad)  
   14000c567:	(bad)  
   14000c568:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c56e:	(bad)  
   14000c56f:	(bad)  
   14000c570:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c576:	(bad)  
   14000c577:	(bad)  
   14000c578:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c57e:	(bad)  
   14000c57f:	(bad)  
   14000c580:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c586:	(bad)  
   14000c587:	(bad)  
   14000c588:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c58e:	(bad)  
   14000c58f:	(bad)  
   14000c590:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c596:	(bad)  
   14000c597:	(bad)  
   14000c598:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c59e:	(bad)  
   14000c59f:	(bad)  
   14000c5a0:	cmp    BYTE PTR [rbp-0x2],bh
   14000c5a6:	(bad)  
   14000c5a7:	(bad)  
   14000c5a8:	(bad)  
   14000c5a9:	(bad)  
   14000c5aa:	(bad)  
   14000c5ab:	inc    ebp
   14000c5ad:	(bad)  
   14000c5ae:	add    bh,bh
   14000c5b0:	(bad)
   14000c5b3:	inc    ebp
   14000c5b5:	(bad)  
   14000c5b6:	add    bh,bh
   14000c5b8:	(bad)
   14000c5bb:	inc    ebp
   14000c5bd:	(bad)  
   14000c5be:	add    bh,bh
   14000c5c0:	(bad)
   14000c5c3:	inc    ebp
   14000c5c5:	(bad)  
   14000c5c6:	add    bh,bh
   14000c5c8:	(bad)
   14000c5cb:	inc    esp
   14000c5cd:	(bad)  
   14000c5ce:	add    bh,bh
   14000c5d0:	(bad)  
   14000c5d1:	pop    rdi
   14000c5d2:	add    bh,bh
   14000c5d4:	(bad)  
   14000c5d5:	pop    rdi
   14000c5d6:	add    bh,bh
   14000c5d8:	(bad)  
   14000c5d9:	pop    rdi
   14000c5da:	add    bh,bh
   14000c5dc:	(bad)  
   14000c5dd:	pop    rsi
   14000c5de:	add    bh,bh
   14000c5e0:	(bad)  
   14000c5e1:	pop    rsi
   14000c5e2:	add    bh,bh
   14000c5e4:	(bad)  
   14000c5e5:	pop    rsi
   14000c5e6:	add    bh,bh
   14000c5e8:	(bad)  
   14000c5e9:	pop    rsi
   14000c5ea:	add    bh,bh
   14000c5ec:	ret    
   14000c5ed:	pop    rsi
   14000c5ee:	add    bh,bh
   14000c5f0:	ret    
   14000c5f1:	pop    rbp
   14000c5f2:	add    bh,bh
   14000c5f4:	ret    
   14000c5f5:	pop    rbp
   14000c5f6:	add    bh,bh
   14000c5f8:	ret    
   14000c5f9:	pop    rbp
   14000c5fa:	add    bh,bh
   14000c5fc:	ret    
   14000c5fd:	pop    rsp
   14000c5fe:	add    bh,bh
   14000c600:	ret    
   14000c601:	pop    rsp
   14000c602:	add    bh,bh
   14000c604:	push   rdi
   14000c605:	rex.WX
   14000c606:	inc    DWORD PTR ds:[rdi+0x47]
   14000c60a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c60e:	rex.RXB lahf 
	...
   14000c63c:	rex.RXB
   14000c63d:	rex.RXB
   14000c63e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000c642:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c646:	rex.RXB inc DWORD PTR [r8-0x6d]
   14000c64a:	mov    ecx,0xfec03bff
   14000c64f:	(bad)  
   14000c650:	cmp    eax,eax
   14000c652:	(bad)  
   14000c653:	(bad)  
   14000c654:	cmp    eax,eax
   14000c656:	(bad)  
   14000c657:	(bad)  
   14000c658:	cmp    eax,eax
   14000c65a:	(bad)  
   14000c65b:	(bad)  
   14000c65c:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000c662:	(bad)  
   14000c663:	(bad)  
   14000c664:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c66a:	(bad)  
   14000c66b:	(bad)  
   14000c66c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c672:	(bad)  
   14000c673:	(bad)  
   14000c674:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c67a:	(bad)  
   14000c67b:	(bad)  
   14000c67c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c682:	(bad)  
   14000c683:	(bad)  
   14000c684:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c68a:	(bad)  
   14000c68b:	(bad)  
   14000c68c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c692:	(bad)  
   14000c693:	(bad)  
   14000c694:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c69a:	(bad)  
   14000c69b:	(bad)  
   14000c69c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c6a2:	(bad)  
   14000c6a3:	(bad)  
   14000c6a4:	(bad)  
   14000c6a5:	(bad)  
   14000c6a6:	(bad)  
   14000c6a7:	(bad)  
   14000c6a8:	(bad)  
   14000c6a9:	(bad)  
   14000c6aa:	(bad)  
   14000c6ab:	inc    esi
   14000c6ad:	(bad)  
   14000c6ae:	add    bh,bh
   14000c6b0:	(bad)
   14000c6b3:	inc    ebp
   14000c6b5:	(bad)  
   14000c6b6:	add    bh,bh
   14000c6b8:	(bad)
   14000c6bb:	inc    ebp
   14000c6bd:	(bad)  
   14000c6be:	add    bh,bh
   14000c6c0:	(bad)
   14000c6c3:	inc    ebp
   14000c6c5:	(bad)  
   14000c6c6:	add    bh,bh
   14000c6c8:	(bad)
   14000c6cb:	inc    ebp
   14000c6cd:	(bad)  
   14000c6ce:	add    bh,bh
   14000c6d0:	(bad)  
   14000c6d1:	(bad)  
   14000c6d2:	add    bh,bh
   14000c6d4:	(bad)  
   14000c6d5:	pop    rdi
   14000c6d6:	add    bh,bh
   14000c6d8:	(bad)  
   14000c6d9:	pop    rdi
   14000c6da:	add    bh,bh
   14000c6dc:	(bad)  
   14000c6dd:	pop    rdi
   14000c6de:	add    bh,bh
   14000c6e0:	(bad)  
   14000c6e1:	pop    rsi
   14000c6e2:	add    bh,bh
   14000c6e4:	(bad)  
   14000c6e5:	pop    rsi
   14000c6e6:	add    bh,bh
   14000c6e8:	(bad)  
   14000c6e9:	pop    rsi
   14000c6ea:	add    bh,bh
   14000c6ec:	(bad)  
   14000c6ed:	pop    rsi
   14000c6ee:	add    bh,bh
   14000c6f0:	ret    
   14000c6f1:	pop    rsi
   14000c6f2:	add    bh,bh
   14000c6f4:	ret    
   14000c6f5:	pop    rbp
   14000c6f6:	add    bh,bh
   14000c6f8:	ret    
   14000c6f9:	pop    rbp
   14000c6fa:	add    bh,bh
   14000c6fc:	ret    
   14000c6fd:	pop    rbp
   14000c6fe:	add    bh,bh
   14000c700:	ret    
   14000c701:	pop    rsp
   14000c702:	add    bh,bh
   14000c704:	xchg   ebp,eax
   14000c705:	push   rsp
   14000c706:	sbb    edi,edi
   14000c708:	rex.RXB
   14000c709:	rex.RXB
   14000c70a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c70e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c712:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000c739:	add    BYTE PTR [rax],al
   14000c73b:	add    BYTE PTR [rdi+0x47],al
   14000c73e:	rex.RXB jo 0x14000c788
   14000c741:	rex.RXB
   14000c742:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c746:	rex.RXB (bad) 
   14000c748:	cmp    eax,0x3bfff3b8
   14000c74d:	sar    dh,0xff
   14000c750:	cmp    eax,eax
   14000c752:	(bad)  
   14000c753:	(bad)  
   14000c754:	cmp    eax,eax
   14000c756:	(bad)  
   14000c757:	(bad)  
   14000c758:	cmp    eax,eax
   14000c75a:	(bad)  
   14000c75b:	(bad)  
   14000c75c:	cmp    eax,eax
   14000c75e:	(bad)  
   14000c75f:	(bad)  
   14000c760:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000c766:	(bad)  
   14000c767:	(bad)  
   14000c768:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c76e:	(bad)  
   14000c76f:	(bad)  
   14000c770:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c776:	(bad)  
   14000c777:	(bad)  
   14000c778:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c77e:	(bad)  
   14000c77f:	(bad)  
   14000c780:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c786:	(bad)  
   14000c787:	(bad)  
   14000c788:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c78e:	(bad)  
   14000c78f:	(bad)  
   14000c790:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c796:	(bad)  
   14000c797:	(bad)  
   14000c798:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c79e:	(bad)  
   14000c79f:	(bad)  
   14000c7a0:	cmp    BYTE PTR [rbp-0x2],bh
   14000c7a6:	(bad)  
   14000c7a7:	(bad)  
   14000c7a8:	(bad)  
   14000c7a9:	(bad)  
   14000c7aa:	(bad)  
   14000c7ab:	inc    esi
   14000c7ad:	(bad)  
   14000c7ae:	add    bh,bh
   14000c7b0:	(bad)  
   14000c7b1:	(bad)  
   14000c7b2:	add    bh,bh
   14000c7b4:	(bad)
   14000c7b7:	inc    ebp
   14000c7b9:	(bad)  
   14000c7ba:	add    bh,bh
   14000c7bc:	(bad)
   14000c7bf:	inc    ebp
   14000c7c1:	(bad)  
   14000c7c2:	add    bh,bh
   14000c7c4:	(bad)
   14000c7c7:	inc    ebp
   14000c7c9:	(bad)  
   14000c7ca:	add    bh,bh
   14000c7cc:	(bad)
   14000c7cf:	inc    ebp
   14000c7d1:	(bad)  
   14000c7d2:	add    bh,bh
   14000c7d4:	(bad)  
   14000c7d5:	(bad)  
   14000c7d6:	add    bh,bh
   14000c7d8:	(bad)  
   14000c7d9:	pop    rdi
   14000c7da:	add    bh,bh
   14000c7dc:	(bad)  
   14000c7dd:	pop    rdi
   14000c7de:	add    bh,bh
   14000c7e0:	(bad)  
   14000c7e1:	pop    rdi
   14000c7e2:	add    bh,bh
   14000c7e4:	(bad)  
   14000c7e5:	pop    rsi
   14000c7e6:	add    bh,bh
   14000c7e8:	(bad)  
   14000c7e9:	pop    rsi
   14000c7ea:	add    bh,bh
   14000c7ec:	(bad)  
   14000c7ed:	pop    rsi
   14000c7ee:	add    bh,bh
   14000c7f0:	(bad)  
   14000c7f1:	pop    rsi
   14000c7f2:	add    bh,bh
   14000c7f4:	ret    
   14000c7f5:	pop    rsi
   14000c7f6:	add    bh,bh
   14000c7f8:	ret    
   14000c7f9:	pop    rbp
   14000c7fa:	add    bh,bh
   14000c7fc:	ret    
   14000c7fd:	pop    rbp
   14000c7fe:	add    bh,bh
   14000c800:	ret    
   14000c801:	pop    rbp
   14000c802:	add    bh,bh
   14000c804:	mov    ebx,0x47ff045b
   14000c809:	rex.RXB
   14000c80a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c80e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c812:	rex.RXB jo 0x14000c815
	...
   14000c839:	add    BYTE PTR [rax],al
   14000c83b:	add    BYTE PTR [rdi+0x47],al
   14000c83e:	rex.RXB mov r15d,0xff474747
   14000c844:	rex.XB je 0x14000c7d3
   14000c847:	(bad)  
   14000c848:	cmp    al,0xc0
   14000c84a:	(bad)  
   14000c84b:	(bad)  
   14000c84c:	cmp    al,0xc0
   14000c84e:	(bad)  
   14000c84f:	(bad)  
   14000c850:	cmp    eax,eax
   14000c852:	(bad)  
   14000c853:	(bad)  
   14000c854:	cmp    eax,eax
   14000c856:	(bad)  
   14000c857:	(bad)  
   14000c858:	cmp    eax,eax
   14000c85a:	(bad)  
   14000c85b:	(bad)  
   14000c85c:	cmp    eax,eax
   14000c85e:	(bad)  
   14000c85f:	(bad)  
   14000c860:	cmp    eax,eax
   14000c862:	(bad)  
   14000c863:	(bad)  
   14000c864:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000c86a:	(bad)  
   14000c86b:	(bad)  
   14000c86c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c872:	(bad)  
   14000c873:	(bad)  
   14000c874:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c87a:	(bad)  
   14000c87b:	(bad)  
   14000c87c:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c882:	(bad)  
   14000c883:	(bad)  
   14000c884:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c88a:	(bad)  
   14000c88b:	(bad)  
   14000c88c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c892:	(bad)  
   14000c893:	(bad)  
   14000c894:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c89a:	(bad)  
   14000c89b:	(bad)  
   14000c89c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c8a2:	(bad)  
   14000c8a3:	(bad)  
   14000c8a4:	(bad)  
   14000c8a5:	(bad)  
   14000c8a6:	(bad)  
   14000c8a7:	(bad)  
   14000c8a8:	(bad)  
   14000c8a9:	(bad)  
   14000c8aa:	(bad)  
   14000c8ab:	inc    esi
   14000c8ad:	movsxd eax,DWORD PTR [rax]
   14000c8af:	inc    esi
   14000c8b1:	(bad)  
   14000c8b2:	add    bh,bh
   14000c8b4:	(bad)  
   14000c8b5:	(bad)  
   14000c8b6:	add    bh,bh
   14000c8b8:	(bad)
   14000c8bb:	inc    ebp
   14000c8bd:	(bad)  
   14000c8be:	add    bh,bh
   14000c8c0:	(bad)
   14000c8c3:	inc    ebp
   14000c8c5:	(bad)  
   14000c8c6:	add    bh,bh
   14000c8c8:	(bad)
   14000c8cb:	inc    ebp
   14000c8cd:	(bad)  
   14000c8ce:	add    bh,bh
   14000c8d0:	(bad)
   14000c8d3:	inc    ebp
   14000c8d5:	(bad)  
   14000c8d6:	add    bh,bh
   14000c8d8:	(bad)  
   14000c8d9:	(bad)  
   14000c8da:	add    bh,bh
   14000c8dc:	(bad)  
   14000c8dd:	pop    rdi
   14000c8de:	add    bh,bh
   14000c8e0:	(bad)  
   14000c8e1:	pop    rdi
   14000c8e2:	add    bh,bh
   14000c8e4:	(bad)  
   14000c8e5:	pop    rdi
   14000c8e6:	add    bh,bh
   14000c8e8:	(bad)  
   14000c8e9:	pop    rsi
   14000c8ea:	add    bh,bh
   14000c8ec:	(bad)  
   14000c8ed:	pop    rsi
   14000c8ee:	add    bh,bh
   14000c8f0:	(bad)  
   14000c8f1:	pop    rsi
   14000c8f2:	add    bh,bh
   14000c8f4:	(bad)  
   14000c8f5:	pop    rsi
   14000c8f6:	add    bh,bh
   14000c8f8:	ret    
   14000c8f9:	pop    rsi
   14000c8fa:	add    bh,bh
   14000c8fc:	ret    
   14000c8fd:	pop    rbp
   14000c8fe:	add    bh,bh
   14000c900:	ret    
   14000c901:	pop    rbp
   14000c902:	add    bh,bh
   14000c904:	ret    
   14000c905:	pop    rbp
   14000c906:	add    bh,bh
   14000c908:	jbe    0x14000c959
   14000c90a:	sub    al,0xff
   14000c90c:	rex.RXB
   14000c90d:	rex.RXB
   14000c90e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c912:	rex.RXB mov r15d,0x0
	...
   14000c938:	rex.RXB
   14000c939:	rex.RXB
   14000c93a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000c93e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c942:	rex.RXB (bad) 
   14000c944:	mov    edx,0xffffbaba
   14000c949:	(bad)  
   14000c94a:	(bad)  
   14000c94b:	(bad)  
   14000c94c:	(bad)  
   14000c94d:	(bad)  
   14000c94e:	(bad)  
   14000c94f:	(bad)  
   14000c950:	(bad)  
   14000c951:	(bad)  
   14000c952:	(bad)  
   14000c953:	(bad)  
   14000c954:	(bad)  
   14000c955:	(bad)  
   14000c956:	(bad)  
   14000c957:	(bad)  
   14000c958:	(bad)  
   14000c959:	(bad)  
   14000c95a:	(bad)  
   14000c95b:	(bad)  
   14000c95c:	(bad)  
   14000c95d:	(bad)  
   14000c95e:	(bad)  
   14000c95f:	(bad)  
   14000c960:	(bad)  
   14000c961:	(bad)  
   14000c962:	(bad)  
   14000c963:	(bad)  
   14000c964:	(bad)  
   14000c965:	(bad)  
   14000c966:	(bad)  
   14000c967:	(bad)  
   14000c968:	(bad)  
   14000c969:	(bad)  
   14000c96a:	(bad)  
   14000c96b:	(bad)  
   14000c96c:	(bad)  
   14000c96d:	(bad)  
   14000c96e:	(bad)  
   14000c96f:	(bad)  
   14000c970:	(bad)  
   14000c971:	(bad)  
   14000c972:	(bad)  
   14000c973:	(bad)  
   14000c974:	(bad)  
   14000c975:	(bad)  
   14000c976:	(bad)  
   14000c977:	(bad)  
   14000c978:	(bad)  
   14000c979:	(bad)  
   14000c97a:	(bad)  
   14000c97b:	(bad)  
   14000c97c:	(bad)  
   14000c97d:	(bad)  
   14000c97e:	(bad)  
   14000c97f:	(bad)  
   14000c980:	(bad)  
   14000c981:	(bad)  
   14000c982:	(bad)  
   14000c983:	(bad)  
   14000c984:	(bad)  
   14000c985:	(bad)  
   14000c986:	(bad)  
   14000c987:	(bad)  
   14000c988:	(bad)  
   14000c989:	(bad)  
   14000c98a:	(bad)  
   14000c98b:	(bad)  
   14000c98c:	(bad)  
   14000c98d:	(bad)  
   14000c98e:	(bad)  
   14000c98f:	(bad)  
   14000c990:	(bad)  
   14000c991:	(bad)  
   14000c992:	(bad)  
   14000c993:	(bad)  
   14000c994:	(bad)  
   14000c995:	(bad)  
   14000c996:	(bad)  
   14000c997:	(bad)  
   14000c998:	(bad)  
   14000c999:	(bad)  
   14000c99a:	(bad)  
   14000c99b:	(bad)  
   14000c99c:	(bad)  
   14000c99d:	(bad)  
   14000c99e:	(bad)  
   14000c99f:	(bad)  
   14000c9a0:	(bad)  
   14000c9a1:	(bad)  
   14000c9a2:	(bad)  
   14000c9a3:	(bad)  
   14000c9a4:	(bad)  
   14000c9a5:	(bad)  
   14000c9a6:	(bad)  
   14000c9a7:	(bad)  
   14000c9a8:	(bad)  
   14000c9a9:	(bad)  
   14000c9aa:	(bad)  
   14000c9ab:	(bad)  
   14000c9ac:	(bad)  
   14000c9ad:	(bad)  
   14000c9ae:	(bad)  
   14000c9af:	(bad)  
   14000c9b0:	(bad)  
   14000c9b1:	(bad)  
   14000c9b2:	(bad)  
   14000c9b3:	(bad)  
   14000c9b4:	(bad)  
   14000c9b5:	(bad)  
   14000c9b6:	(bad)  
   14000c9b7:	(bad)  
   14000c9b8:	(bad)  
   14000c9b9:	(bad)  
   14000c9ba:	(bad)  
   14000c9bb:	(bad)  
   14000c9bc:	(bad)  
   14000c9bd:	(bad)  
   14000c9be:	(bad)  
   14000c9bf:	(bad)  
   14000c9c0:	(bad)  
   14000c9c1:	(bad)  
   14000c9c2:	(bad)  
   14000c9c3:	(bad)  
   14000c9c4:	(bad)  
   14000c9c5:	(bad)  
   14000c9c6:	(bad)  
   14000c9c7:	(bad)  
   14000c9c8:	(bad)  
   14000c9c9:	(bad)  
   14000c9ca:	(bad)  
   14000c9cb:	(bad)  
   14000c9cc:	(bad)  
   14000c9cd:	(bad)  
   14000c9ce:	(bad)  
   14000c9cf:	(bad)  
   14000c9d0:	(bad)  
   14000c9d1:	(bad)  
   14000c9d2:	(bad)  
   14000c9d3:	(bad)  
   14000c9d4:	(bad)  
   14000c9d5:	(bad)  
   14000c9d6:	(bad)  
   14000c9d7:	(bad)  
   14000c9d8:	(bad)  
   14000c9d9:	(bad)  
   14000c9da:	(bad)  
   14000c9db:	(bad)  
   14000c9dc:	(bad)  
   14000c9dd:	(bad)  
   14000c9de:	(bad)  
   14000c9df:	(bad)  
   14000c9e0:	(bad)  
   14000c9e1:	(bad)  
   14000c9e2:	(bad)  
   14000c9e3:	(bad)  
   14000c9e4:	(bad)  
   14000c9e5:	(bad)  
   14000c9e6:	(bad)  
   14000c9e7:	(bad)  
   14000c9e8:	(bad)  
   14000c9e9:	(bad)  
   14000c9ea:	(bad)  
   14000c9eb:	(bad)  
   14000c9ec:	(bad)  
   14000c9ed:	(bad)  
   14000c9ee:	(bad)  
   14000c9ef:	(bad)  
   14000c9f0:	(bad)  
   14000c9f1:	(bad)  
   14000c9f2:	(bad)  
   14000c9f3:	(bad)  
   14000c9f4:	(bad)  
   14000c9f5:	(bad)  
   14000c9f6:	(bad)  
   14000c9f7:	(bad)  
   14000c9f8:	(bad)  
   14000c9f9:	(bad)  
   14000c9fa:	(bad)  
   14000c9fb:	(bad)  
   14000c9fc:	(bad)  
   14000c9fd:	(bad)  
   14000c9fe:	(bad)  
   14000c9ff:	(bad)  
   14000ca00:	(bad)  
   14000ca01:	(bad)  
   14000ca02:	(bad)  
   14000ca03:	(bad)  
   14000ca04:	(bad)  
   14000ca05:	(bad)  
   14000ca06:	(bad)  
   14000ca07:	(bad)  
   14000ca08:	mov    edx,0x47ffbaba
   14000ca0d:	rex.RXB
   14000ca0e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ca12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ca16:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000ca35:	add    BYTE PTR [rax],al
   14000ca37:	add    BYTE PTR [rdi+0x47],al
   14000ca3a:	rex.RXB push r8
   14000ca3c:	rex.RXB
   14000ca3d:	rex.RXB
   14000ca3e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ca42:	rex.RXB push r12
   14000ca45:	hlt    
   14000ca46:	hlt    
   14000ca47:	(bad)  
   14000ca48:	(bad)  
   14000ca49:	(bad)  
   14000ca4a:	(bad)  
   14000ca4b:	(bad)  
   14000ca4c:	(bad)  
   14000ca4d:	(bad)  
   14000ca4e:	(bad)  
   14000ca4f:	(bad)  
   14000ca50:	(bad)  
   14000ca51:	(bad)  
   14000ca52:	(bad)  
   14000ca53:	(bad)  
   14000ca54:	(bad)  
   14000ca55:	(bad)  
   14000ca56:	(bad)  
   14000ca57:	(bad)  
   14000ca58:	(bad)  
   14000ca59:	(bad)  
   14000ca5a:	(bad)  
   14000ca5b:	(bad)  
   14000ca5c:	(bad)  
   14000ca5d:	(bad)  
   14000ca5e:	(bad)  
   14000ca5f:	(bad)  
   14000ca60:	(bad)  
   14000ca61:	(bad)  
   14000ca62:	(bad)  
   14000ca63:	(bad)  
   14000ca64:	(bad)  
   14000ca65:	(bad)  
   14000ca66:	(bad)  
   14000ca67:	(bad)  
   14000ca68:	(bad)  
   14000ca69:	(bad)  
   14000ca6a:	(bad)  
   14000ca6b:	(bad)  
   14000ca6c:	(bad)  
   14000ca6d:	(bad)  
   14000ca6e:	(bad)  
   14000ca6f:	(bad)  
   14000ca70:	(bad)  
   14000ca71:	(bad)  
   14000ca72:	(bad)  
   14000ca73:	(bad)  
   14000ca74:	(bad)  
   14000ca75:	(bad)  
   14000ca76:	(bad)  
   14000ca77:	(bad)  
   14000ca78:	(bad)  
   14000ca79:	(bad)  
   14000ca7a:	(bad)  
   14000ca7b:	(bad)  
   14000ca7c:	(bad)  
   14000ca7d:	(bad)  
   14000ca7e:	(bad)  
   14000ca7f:	(bad)  
   14000ca80:	(bad)  
   14000ca81:	(bad)  
   14000ca82:	(bad)  
   14000ca83:	(bad)  
   14000ca84:	(bad)  
   14000ca85:	(bad)  
   14000ca86:	(bad)  
   14000ca87:	(bad)  
   14000ca88:	(bad)  
   14000ca89:	(bad)  
   14000ca8a:	(bad)  
   14000ca8b:	(bad)  
   14000ca8c:	(bad)  
   14000ca8d:	(bad)  
   14000ca8e:	(bad)  
   14000ca8f:	(bad)  
   14000ca90:	(bad)  
   14000ca91:	(bad)  
   14000ca92:	(bad)  
   14000ca93:	(bad)  
   14000ca94:	(bad)  
   14000ca95:	(bad)  
   14000ca96:	(bad)  
   14000ca97:	(bad)  
   14000ca98:	(bad)  
   14000ca99:	(bad)  
   14000ca9a:	(bad)  
   14000ca9b:	(bad)  
   14000ca9c:	(bad)  
   14000ca9d:	(bad)  
   14000ca9e:	(bad)  
   14000ca9f:	(bad)  
   14000caa0:	(bad)  
   14000caa1:	(bad)  
   14000caa2:	(bad)  
   14000caa3:	(bad)  
   14000caa4:	(bad)  
   14000caa5:	(bad)  
   14000caa6:	(bad)  
   14000caa7:	(bad)  
   14000caa8:	(bad)  
   14000caa9:	(bad)  
   14000caaa:	(bad)  
   14000caab:	(bad)  
   14000caac:	(bad)  
   14000caad:	(bad)  
   14000caae:	(bad)  
   14000caaf:	(bad)  
   14000cab0:	(bad)  
   14000cab1:	(bad)  
   14000cab2:	(bad)  
   14000cab3:	(bad)  
   14000cab4:	(bad)  
   14000cab5:	(bad)  
   14000cab6:	(bad)  
   14000cab7:	(bad)  
   14000cab8:	(bad)  
   14000cab9:	(bad)  
   14000caba:	(bad)  
   14000cabb:	(bad)  
   14000cabc:	(bad)  
   14000cabd:	(bad)  
   14000cabe:	(bad)  
   14000cabf:	(bad)  
   14000cac0:	(bad)  
   14000cac1:	(bad)  
   14000cac2:	(bad)  
   14000cac3:	(bad)  
   14000cac4:	(bad)  
   14000cac5:	(bad)  
   14000cac6:	(bad)  
   14000cac7:	(bad)  
   14000cac8:	(bad)  
   14000cac9:	(bad)  
   14000caca:	(bad)  
   14000cacb:	(bad)  
   14000cacc:	(bad)  
   14000cacd:	(bad)  
   14000cace:	(bad)  
   14000cacf:	(bad)  
   14000cad0:	(bad)  
   14000cad1:	(bad)  
   14000cad2:	(bad)  
   14000cad3:	(bad)  
   14000cad4:	(bad)  
   14000cad5:	(bad)  
   14000cad6:	(bad)  
   14000cad7:	(bad)  
   14000cad8:	(bad)  
   14000cad9:	(bad)  
   14000cada:	(bad)  
   14000cadb:	(bad)  
   14000cadc:	(bad)  
   14000cadd:	(bad)  
   14000cade:	(bad)  
   14000cadf:	(bad)  
   14000cae0:	(bad)  
   14000cae1:	(bad)  
   14000cae2:	(bad)  
   14000cae3:	(bad)  
   14000cae4:	(bad)  
   14000cae5:	(bad)  
   14000cae6:	(bad)  
   14000cae7:	(bad)  
   14000cae8:	(bad)  
   14000cae9:	(bad)  
   14000caea:	(bad)  
   14000caeb:	(bad)  
   14000caec:	(bad)  
   14000caed:	(bad)  
   14000caee:	(bad)  
   14000caef:	(bad)  
   14000caf0:	(bad)  
   14000caf1:	(bad)  
   14000caf2:	(bad)  
   14000caf3:	(bad)  
   14000caf4:	(bad)  
   14000caf5:	(bad)  
   14000caf6:	(bad)  
   14000caf7:	(bad)  
   14000caf8:	(bad)  
   14000caf9:	(bad)  
   14000cafa:	(bad)  
   14000cafb:	(bad)  
   14000cafc:	(bad)  
   14000cafd:	(bad)  
   14000cafe:	(bad)  
   14000caff:	(bad)  
   14000cb00:	(bad)  
   14000cb01:	(bad)  
   14000cb02:	(bad)  
   14000cb03:	(bad)  
   14000cb04:	(bad)  
   14000cb05:	(bad)  
   14000cb06:	(bad)  
   14000cb07:	push   rsp
   14000cb09:	hlt    
   14000cb0a:	hlt    
   14000cb0b:	inc    DWORD PTR [rdi+0x47]
   14000cb0e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cb12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cb16:	rex.RXB push r8
	...
   14000cb38:	rex.RXB
   14000cb39:	rex.RXB
   14000cb3a:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000cb3f:	jmp    QWORD PTR [rax+0x4e]
   14000cb42:	cmp    bh,bh
   14000cb44:	leave  
   14000cb45:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cb48:	leave  
   14000cb49:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cb4c:	leave  
   14000cb4d:	push   0x0
   14000cb4f:	dec    ecx
   14000cb51:	push   0x0
   14000cb53:	dec    ecx
   14000cb55:	push   0x0
   14000cb57:	dec    ecx
   14000cb59:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000cb5f:	dec    ecx
   14000cb61:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000cb67:	dec    eax
   14000cb69:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000cb6f:	dec    eax
   14000cb71:	push   0x68c8ff00
   14000cb76:	add    bh,bh
   14000cb78:	enter  0x67,0xff
   14000cb7c:	enter  0x67,0xff
   14000cb80:	enter  0x67,0xff
   14000cb84:	(bad)  
   14000cb85:	data16 add bh,bh
   14000cb88:	(bad)  
   14000cb89:	data16 add bh,bh
   14000cb8c:	(bad)  
   14000cb8d:	data16 add bh,bh
   14000cb90:	(bad)  
   14000cb91:	gs add bh,bh
   14000cb94:	(bad)  
   14000cb95:	gs add bh,bh
   14000cb98:	(bad)  
   14000cb99:	gs add bh,bh
   14000cb9c:	(bad)  
   14000cb9d:	gs add bh,bh
   14000cba0:	(bad)  
   14000cba1:	gs add bh,bh
   14000cba4:	(bad)  
   14000cba5:	(bad)  
   14000cba6:	(bad)  
   14000cba7:	(bad)  
   14000cba8:	(bad)  
   14000cba9:	(bad)  
   14000cbaa:	(bad)  
   14000cbab:	(bad)  
   14000cbac:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cbb2:	(bad)  
   14000cbb3:	(bad)  
   14000cbb4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cbba:	(bad)  
   14000cbbb:	(bad)  
   14000cbbc:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000cbc3:	push   QWORD PTR [rdi]
   14000cbc5:	mov    esp,0xbc37fffe
   14000cbca:	(bad)  
   14000cbcb:	push   QWORD PTR [rdi]
   14000cbcd:	mov    esp,0xbc37fffe
   14000cbd2:	(bad)  
   14000cbd3:	push   QWORD PTR [rdi]
   14000cbd5:	mov    esp,0xbc37fffe
   14000cbda:	(bad)  
   14000cbdb:	push   QWORD PTR [rsi]
   14000cbdd:	mov    ebx,0xbb36fffe
   14000cbe2:	(bad)  
   14000cbe3:	push   QWORD PTR [rsi]
   14000cbe5:	mov    ebx,0xbb36fffe
   14000cbea:	(bad)  
   14000cbeb:	push   QWORD PTR [rsi]
   14000cbed:	mov    ebx,0xbb36fffe
   14000cbf2:	(bad)  
   14000cbf3:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600cab3
   14000cbf9:	mov    edx,0xba35fffe
   14000cbfe:	(bad)  
   14000cbff:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600cabf
   14000cc05:	mov    edx,0xba35fffe
   14000cc0a:	(bad)  
   14000cc0b:	inc    DWORD PTR [rbp+rbx*2+0x69]
   14000cc0f:	inc    DWORD PTR [rdi+0x47]
   14000cc12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cc16:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	rex.RXB
   14000cc39:	rex.RXB
   14000cc3a:	rex.RXB mov r15d,0xff474747
   14000cc40:	js     0x14000cc97
   14000cc42:	sub    al,0xff
   14000cc44:	retf   0x6b
   14000cc47:	dec    ecx
   14000cc49:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cc4c:	leave  
   14000cc4d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cc50:	leave  
   14000cc51:	push   0x0
   14000cc53:	dec    ecx
   14000cc55:	push   0x0
   14000cc57:	dec    ecx
   14000cc59:	push   0x0
   14000cc5b:	dec    ecx
   14000cc5d:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000cc63:	dec    ecx
   14000cc65:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000cc6b:	dec    eax
   14000cc6d:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000cc73:	dec    eax
   14000cc75:	push   0x68c8ff00
   14000cc7a:	add    bh,bh
   14000cc7c:	enter  0x67,0xff
   14000cc80:	enter  0x67,0xff
   14000cc84:	enter  0x67,0xff
   14000cc88:	(bad)  
   14000cc89:	data16 add bh,bh
   14000cc8c:	(bad)  
   14000cc8d:	data16 add bh,bh
   14000cc90:	(bad)  
   14000cc91:	data16 add bh,bh
   14000cc94:	(bad)  
   14000cc95:	gs add bh,bh
   14000cc98:	(bad)  
   14000cc99:	gs add bh,bh
   14000cc9c:	(bad)  
   14000cc9d:	gs add bh,bh
   14000cca0:	(bad)  
   14000cca1:	gs add bh,bh
   14000cca4:	(bad)  
   14000cca5:	(bad)  
   14000cca6:	(bad)  
   14000cca7:	(bad)  
   14000cca8:	(bad)  
   14000cca9:	(bad)  
   14000ccaa:	(bad)  
   14000ccab:	(bad)  
   14000ccac:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ccb2:	(bad)  
   14000ccb3:	(bad)  
   14000ccb4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ccba:	(bad)  
   14000ccbb:	(bad)  
   14000ccbc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ccc2:	(bad)  
   14000ccc3:	(bad)  
   14000ccc4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000cccb:	push   QWORD PTR [rdi]
   14000cccd:	mov    esp,0xbc37fffe
   14000ccd2:	(bad)  
   14000ccd3:	push   QWORD PTR [rdi]
   14000ccd5:	mov    esp,0xbc37fffe
   14000ccda:	(bad)  
   14000ccdb:	push   QWORD PTR [rdi]
   14000ccdd:	mov    esp,0xbb36fffe
   14000cce2:	(bad)  
   14000cce3:	push   QWORD PTR [rsi]
   14000cce5:	mov    ebx,0xbb36fffe
   14000ccea:	(bad)  
   14000cceb:	push   QWORD PTR [rsi]
   14000cced:	mov    ebx,0xbb36fffe
   14000ccf2:	(bad)  
   14000ccf3:	push   QWORD PTR [rsi]
   14000ccf5:	mov    ebx,0xba35fffe
   14000ccfa:	(bad)  
   14000ccfb:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600cbbb
   14000cd01:	mov    edx,0xba35fffe
   14000cd06:	(bad)  
   14000cd07:	push   QWORD PTR [rip+0x40fffeba]        # 0x18100cbc7
   14000cd0d:	jb     0x14000cc9b
   14000cd0f:	inc    DWORD PTR [rdi+0x47]
   14000cd12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cd16:	rex.RXB mov r15d,0x0
	...
   14000cd38:	rex.RXB
   14000cd39:	rex.RXB
   14000cd3a:	rex.RXB iret 
   14000cd3c:	rex.RXB
   14000cd3d:	rex.RXB
   14000cd3e:	rex.RXB dec DWORD PTR [r9-0x3500dba6]
   14000cd45:	ins    BYTE PTR es:[rdi],dx
   14000cd46:	add    bh,bh
   14000cd48:	retf   0x6b
   14000cd4b:	dec    ecx
   14000cd4d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cd50:	leave  
   14000cd51:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cd54:	leave  
   14000cd55:	push   0x0
   14000cd57:	dec    ecx
   14000cd59:	push   0x0
   14000cd5b:	dec    ecx
   14000cd5d:	push   0x0
   14000cd5f:	dec    ecx
   14000cd61:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000cd67:	dec    ecx
   14000cd69:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000cd6f:	dec    eax
   14000cd71:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000cd77:	dec    eax
   14000cd79:	push   0x68c8ff00
   14000cd7e:	add    bh,bh
   14000cd80:	enter  0x67,0xff
   14000cd84:	enter  0x67,0xff
   14000cd88:	enter  0x67,0xff
   14000cd8c:	(bad)  
   14000cd8d:	data16 add bh,bh
   14000cd90:	(bad)  
   14000cd91:	data16 add bh,bh
   14000cd94:	(bad)  
   14000cd95:	data16 add bh,bh
   14000cd98:	(bad)  
   14000cd99:	gs add bh,bh
   14000cd9c:	(bad)  
   14000cd9d:	gs add bh,bh
   14000cda0:	(bad)  
   14000cda1:	gs add bh,bh
   14000cda4:	(bad)  
   14000cda5:	(bad)  
   14000cda6:	(bad)  
   14000cda7:	(bad)  
   14000cda8:	(bad)  
   14000cda9:	(bad)  
   14000cdaa:	(bad)  
   14000cdab:	(bad)  
   14000cdac:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000cdb2:	(bad)  
   14000cdb3:	(bad)  
   14000cdb4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cdba:	(bad)  
   14000cdbb:	(bad)  
   14000cdbc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cdc2:	(bad)  
   14000cdc3:	(bad)  
   14000cdc4:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000cdcb:	push   QWORD PTR [rdi]
   14000cdcd:	mov    esp,0xbc37fffe
   14000cdd2:	(bad)  
   14000cdd3:	push   QWORD PTR [rdi]
   14000cdd5:	mov    esp,0xbc37fffe
   14000cdda:	(bad)  
   14000cddb:	push   QWORD PTR [rdi]
   14000cddd:	mov    esp,0xbc37fffe
   14000cde2:	(bad)  
   14000cde3:	push   QWORD PTR [rsi]
   14000cde5:	mov    ebx,0xbb36fffe
   14000cdea:	(bad)  
   14000cdeb:	push   QWORD PTR [rsi]
   14000cded:	mov    ebx,0xbb36fffe
   14000cdf2:	(bad)  
   14000cdf3:	push   QWORD PTR [rsi]
   14000cdf5:	mov    ebx,0xbb36fffe
   14000cdfa:	(bad)  
   14000cdfb:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600ccbb
   14000ce01:	mov    edx,0xba35fffe
   14000ce06:	(bad)  
   14000ce07:	push   QWORD PTR [rip+0x3efffeba]        # 0x17f00ccc7
   14000ce0d:	and    DWORD PTR [rbx+0x474747ff],0x474747ff
   14000ce17:	iret   
	...
   14000ce38:	rex.RXB
   14000ce39:	rex.RXB
   14000ce3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ce3e:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   14000ce45:	ins    BYTE PTR es:[rdi],dx
   14000ce46:	add    bh,bh
   14000ce48:	retf   0x6c
   14000ce4b:	dec    edx
   14000ce4d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ce50:	leave  
   14000ce51:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ce54:	leave  
   14000ce55:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ce58:	leave  
   14000ce59:	push   0x0
   14000ce5b:	dec    ecx
   14000ce5d:	push   0x0
   14000ce5f:	dec    ecx
   14000ce61:	push   0x0
   14000ce63:	dec    ecx
   14000ce65:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000ce6b:	dec    ecx
   14000ce6d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000ce73:	dec    eax
   14000ce75:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000ce7b:	dec    eax
   14000ce7d:	push   0x68c8ff00
   14000ce82:	add    bh,bh
   14000ce84:	enter  0x67,0xff
   14000ce88:	enter  0x67,0xff
   14000ce8c:	enter  0x67,0xff
   14000ce90:	(bad)  
   14000ce91:	data16 add bh,bh
   14000ce94:	(bad)  
   14000ce95:	data16 add bh,bh
   14000ce98:	(bad)  
   14000ce99:	data16 add bh,bh
   14000ce9c:	(bad)  
   14000ce9d:	gs add bh,bh
   14000cea0:	(bad)  
   14000cea1:	gs add bh,bh
   14000cea4:	(bad)  
   14000cea5:	(bad)  
   14000cea6:	(bad)  
   14000cea7:	(bad)  
   14000cea8:	(bad)  
   14000cea9:	(bad)  
   14000ceaa:	(bad)  
   14000ceab:	(bad)  
   14000ceac:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000ceb2:	(bad)  
   14000ceb3:	(bad)  
   14000ceb4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ceba:	(bad)  
   14000cebb:	(bad)  
   14000cebc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cec2:	(bad)  
   14000cec3:	(bad)  
   14000cec4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ceca:	(bad)  
   14000cecb:	(bad)  
   14000cecc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000ced3:	push   QWORD PTR [rdi]
   14000ced5:	mov    esp,0xbc37fffe
   14000ceda:	(bad)  
   14000cedb:	push   QWORD PTR [rdi]
   14000cedd:	mov    esp,0xbc37fffe
   14000cee2:	(bad)  
   14000cee3:	push   QWORD PTR [rdi]
   14000cee5:	mov    esp,0xbb36fffe
   14000ceea:	(bad)  
   14000ceeb:	push   QWORD PTR [rsi]
   14000ceed:	mov    ebx,0xbb36fffe
   14000cef2:	(bad)  
   14000cef3:	push   QWORD PTR [rsi]
   14000cef5:	mov    ebx,0xbb36fffe
   14000cefa:	(bad)  
   14000cefb:	push   QWORD PTR [rsi]
   14000cefd:	mov    ebx,0xba35fffe
   14000cf02:	(bad)  
   14000cf03:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600cdc3
   14000cf09:	mov    edx,0x9d3afffe
   14000cf0e:	sar    bh,1
   14000cf10:	rex.RXB
   14000cf11:	rex.RXB
   14000cf12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cf16:	rex.RXB inc DWORD PTR [r8]
	...
   14000cf35:	add    BYTE PTR [rax],al
   14000cf37:	add    BYTE PTR [rdi+0x47],al
   14000cf3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cf3e:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   14000cf45:	ins    BYTE PTR es:[rdi],dx
   14000cf46:	add    bh,bh
   14000cf48:	retf   0x6c
   14000cf4b:	dec    edx
   14000cf4d:	ins    BYTE PTR es:[rdi],dx
   14000cf4e:	add    bh,bh
   14000cf50:	retf   0x6b
   14000cf53:	dec    ecx
   14000cf55:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cf58:	leave  
   14000cf59:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cf5c:	leave  
   14000cf5d:	push   0x0
   14000cf5f:	dec    ecx
   14000cf61:	push   0x0
   14000cf63:	dec    ecx
   14000cf65:	push   0x0
   14000cf67:	dec    ecx
   14000cf69:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000cf6f:	dec    ecx
   14000cf71:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000cf77:	dec    eax
   14000cf79:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000cf7f:	dec    eax
   14000cf81:	push   0x68c8ff00
   14000cf86:	add    bh,bh
   14000cf88:	enter  0x67,0xff
   14000cf8c:	enter  0x67,0xff
   14000cf90:	enter  0x67,0xff
   14000cf94:	(bad)  
   14000cf95:	data16 add bh,bh
   14000cf98:	(bad)  
   14000cf99:	data16 add bh,bh
   14000cf9c:	(bad)  
   14000cf9d:	data16 add bh,bh
   14000cfa0:	(bad)  
   14000cfa1:	gs add bh,bh
   14000cfa4:	(bad)  
   14000cfa5:	(bad)  
   14000cfa6:	(bad)  
   14000cfa7:	(bad)  
   14000cfa8:	(bad)  
   14000cfa9:	(bad)  
   14000cfaa:	(bad)  
   14000cfab:	(bad)  
   14000cfac:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cfb2:	(bad)  
   14000cfb3:	(bad)  
   14000cfb4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000cfba:	(bad)  
   14000cfbb:	(bad)  
   14000cfbc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cfc2:	(bad)  
   14000cfc3:	(bad)  
   14000cfc4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cfca:	(bad)  
   14000cfcb:	(bad)  
   14000cfcc:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000cfd3:	push   QWORD PTR [rdi]
   14000cfd5:	mov    esp,0xbc37fffe
   14000cfda:	(bad)  
   14000cfdb:	push   QWORD PTR [rdi]
   14000cfdd:	mov    esp,0xbc37fffe
   14000cfe2:	(bad)  
   14000cfe3:	push   QWORD PTR [rdi]
   14000cfe5:	mov    esp,0xbc37fffe
   14000cfea:	(bad)  
   14000cfeb:	push   QWORD PTR [rsi]
   14000cfed:	mov    ebx,0xbb36fffe
   14000cff2:	(bad)  
   14000cff3:	push   QWORD PTR [rsi]
   14000cff5:	mov    ebx,0xbb36fffe
   14000cffa:	(bad)  
   14000cffb:	push   QWORD PTR [rsi]
   14000cffd:	mov    ebx,0xbb36fffe
   14000d002:	(bad)  
   14000d003:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600cec3
   14000d009:	mov    edx,0x9d3afffe
   14000d00e:	sar    bh,1
   14000d010:	rex.RXB
   14000d011:	rex.RXB
   14000d012:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d016:	rex.RXB inc DWORD PTR [r8]
	...
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    BYTE PTR [rdi+0x47],al
   14000d03a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d03e:	rex.RXB jmp FWORD PTR [r9-0x3500ed9c]
   14000d045:	ins    BYTE PTR es:[rdi],dx
   14000d046:	add    bh,bh
   14000d048:	retf   0x6c
   14000d04b:	dec    edx
   14000d04d:	ins    BYTE PTR es:[rdi],dx
   14000d04e:	add    bh,bh
   14000d050:	retf   0x6c
   14000d053:	dec    edx
   14000d055:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d058:	leave  
   14000d059:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d05c:	leave  
   14000d05d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d060:	leave  
   14000d061:	push   0x0
   14000d063:	dec    ecx
   14000d065:	push   0x0
   14000d067:	dec    ecx
   14000d069:	push   0x0
   14000d06b:	dec    ecx
   14000d06d:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d073:	dec    ecx
   14000d075:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d07b:	dec    eax
   14000d07d:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d083:	dec    eax
   14000d085:	push   0x68c8ff00
   14000d08a:	add    bh,bh
   14000d08c:	enter  0x67,0xff
   14000d090:	enter  0x67,0xff
   14000d094:	enter  0x67,0xff
   14000d098:	(bad)  
   14000d099:	data16 add bh,bh
   14000d09c:	(bad)  
   14000d09d:	data16 add bh,bh
   14000d0a0:	(bad)  
   14000d0a1:	data16 add bh,bh
   14000d0a4:	(bad)  
   14000d0a5:	(bad)  
   14000d0a6:	(bad)  
   14000d0a7:	(bad)  
   14000d0a8:	(bad)  
   14000d0a9:	(bad)  
   14000d0aa:	(bad)  
   14000d0ab:	(bad)  
   14000d0ac:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d0b2:	(bad)  
   14000d0b3:	(bad)  
   14000d0b4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000d0ba:	(bad)  
   14000d0bb:	(bad)  
   14000d0bc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d0c2:	(bad)  
   14000d0c3:	(bad)  
   14000d0c4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d0ca:	(bad)  
   14000d0cb:	(bad)  
   14000d0cc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000d0d2:	(bad)  
   14000d0d3:	(bad)  
   14000d0d4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000d0db:	push   QWORD PTR [rdi]
   14000d0dd:	mov    esp,0xbc37fffe
   14000d0e2:	(bad)  
   14000d0e3:	push   QWORD PTR [rdi]
   14000d0e5:	mov    esp,0xbc37fffe
   14000d0ea:	(bad)  
   14000d0eb:	push   QWORD PTR [rdi]
   14000d0ed:	mov    esp,0xbb36fffe
   14000d0f2:	(bad)  
   14000d0f3:	push   QWORD PTR [rsi]
   14000d0f5:	mov    ebx,0xbb36fffe
   14000d0fa:	(bad)  
   14000d0fb:	push   QWORD PTR [rsi]
   14000d0fd:	mov    ebx,0xbb36fffe
   14000d102:	(bad)  
   14000d103:	push   QWORD PTR [rsi]
   14000d105:	mov    ebx,0xba35fffe
   14000d10a:	(bad)  
   14000d10b:	(bad)  
   14000d10c:	cmp    bl,BYTE PTR [rbp+0x4747ffd0]
   14000d112:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d116:	rex.RXB inc DWORD PTR [r8]
	...
   14000d135:	add    BYTE PTR [rax],al
   14000d137:	add    BYTE PTR [rdi+0x47],al
   14000d13a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d13e:	rex.RXB push QWORD PTR [r9-0x3500f29a]
   14000d145:	ins    DWORD PTR es:[rdi],dx
   14000d146:	add    bh,bh
   14000d148:	retf   0x6c
   14000d14b:	dec    edx
   14000d14d:	ins    BYTE PTR es:[rdi],dx
   14000d14e:	add    bh,bh
   14000d150:	retf   0x6c
   14000d153:	dec    edx
   14000d155:	ins    BYTE PTR es:[rdi],dx
   14000d156:	add    bh,bh
   14000d158:	retf   0x6b
   14000d15b:	dec    ecx
   14000d15d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d160:	leave  
   14000d161:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d164:	leave  
   14000d165:	push   0x0
   14000d167:	dec    ecx
   14000d169:	push   0x0
   14000d16b:	dec    ecx
   14000d16d:	push   0x0
   14000d16f:	dec    ecx
   14000d171:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d177:	dec    ecx
   14000d179:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d17f:	dec    eax
   14000d181:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d187:	dec    eax
   14000d189:	push   0x68c8ff00
   14000d18e:	add    bh,bh
   14000d190:	enter  0x67,0xff
   14000d194:	enter  0x67,0xff
   14000d198:	enter  0x67,0xff
   14000d19c:	(bad)  
   14000d19d:	data16 add bh,bh
   14000d1a0:	(bad)  
   14000d1a1:	data16 add bh,bh
   14000d1a4:	(bad)  
   14000d1a5:	(bad)  
   14000d1a6:	(bad)  
   14000d1a7:	(bad)  
   14000d1a8:	(bad)  
   14000d1a9:	(bad)  
   14000d1aa:	(bad)  
   14000d1ab:	(bad)  
   14000d1ac:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d1b2:	(bad)  
   14000d1b3:	(bad)  
   14000d1b4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d1ba:	(bad)  
   14000d1bb:	(bad)  
   14000d1bc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000d1c2:	(bad)  
   14000d1c3:	(bad)  
   14000d1c4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d1ca:	(bad)  
   14000d1cb:	(bad)  
   14000d1cc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d1d2:	(bad)  
   14000d1d3:	(bad)  
   14000d1d4:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000d1db:	push   QWORD PTR [rdi]
   14000d1dd:	mov    esp,0xbc37fffe
   14000d1e2:	(bad)  
   14000d1e3:	push   QWORD PTR [rdi]
   14000d1e5:	mov    esp,0xbc37fffe
   14000d1ea:	(bad)  
   14000d1eb:	push   QWORD PTR [rdi]
   14000d1ed:	mov    esp,0xbc37fffe
   14000d1f2:	(bad)  
   14000d1f3:	push   QWORD PTR [rsi]
   14000d1f5:	mov    ebx,0xbb36fffe
   14000d1fa:	(bad)  
   14000d1fb:	push   QWORD PTR [rsi]
   14000d1fd:	mov    ebx,0xbb36fffe
   14000d202:	(bad)  
   14000d203:	push   QWORD PTR [rsi]
   14000d205:	mov    ebx,0xbb36fffe
   14000d20a:	(bad)  
   14000d20b:	(bad)  
   14000d20c:	cmp    DWORD PTR [rbp+0x4747ffdc],esp
   14000d212:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d216:	rex.RXB inc DWORD PTR [r8]
	...
   14000d235:	add    BYTE PTR [rax],al
   14000d237:	add    BYTE PTR [rdi+0x47],al
   14000d23a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d23e:	rex.RXB dec r10d
   14000d241:	ins    DWORD PTR es:[rdi],dx
   14000d242:	add    bh,bh
   14000d244:	retf   0x6d
   14000d247:	dec    edx
   14000d249:	ins    DWORD PTR es:[rdi],dx
   14000d24a:	add    bh,bh
   14000d24c:	retf   0x6c
   14000d24f:	dec    edx
   14000d251:	ins    BYTE PTR es:[rdi],dx
   14000d252:	add    bh,bh
   14000d254:	retf   0x6c
   14000d257:	dec    edx
   14000d259:	ins    BYTE PTR es:[rdi],dx
   14000d25a:	add    bh,bh
   14000d25c:	retf   0x6b
   14000d25f:	dec    ecx
   14000d261:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d264:	leave  
   14000d265:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d268:	leave  
   14000d269:	push   0x0
   14000d26b:	dec    ecx
   14000d26d:	push   0x0
   14000d26f:	dec    ecx
   14000d271:	push   0x0
   14000d273:	dec    ecx
   14000d275:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d27b:	dec    ecx
   14000d27d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d283:	dec    eax
   14000d285:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d28b:	dec    eax
   14000d28d:	push   0x68c8ff00
   14000d292:	add    bh,bh
   14000d294:	enter  0x67,0xff
   14000d298:	enter  0x67,0xff
   14000d29c:	enter  0x67,0xff
   14000d2a0:	(bad)  
   14000d2a1:	data16 add bh,bh
   14000d2a4:	(bad)  
   14000d2a5:	(bad)  
   14000d2a6:	(bad)  
   14000d2a7:	(bad)  
   14000d2a8:	(bad)  
   14000d2a9:	(bad)  
   14000d2aa:	(bad)  
   14000d2ab:	(bad)  
   14000d2ac:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d2b2:	(bad)  
   14000d2b3:	(bad)  
   14000d2b4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d2ba:	(bad)  
   14000d2bb:	(bad)  
   14000d2bc:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000d2c2:	(bad)  
   14000d2c3:	(bad)  
   14000d2c4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d2ca:	(bad)  
   14000d2cb:	(bad)  
   14000d2cc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d2d2:	(bad)  
   14000d2d3:	(bad)  
   14000d2d4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000d2da:	(bad)  
   14000d2db:	(bad)  
   14000d2dc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000d2e3:	push   QWORD PTR [rdi]
   14000d2e5:	mov    esp,0xbc37fffe
   14000d2ea:	(bad)  
   14000d2eb:	push   QWORD PTR [rdi]
   14000d2ed:	mov    esp,0xbc37fffe
   14000d2f2:	(bad)  
   14000d2f3:	push   QWORD PTR [rdi]
   14000d2f5:	mov    esp,0xbb36fffe
   14000d2fa:	(bad)  
   14000d2fb:	push   QWORD PTR [rsi]
   14000d2fd:	mov    ebx,0xbb36fffe
   14000d302:	(bad)  
   14000d303:	push   QWORD PTR [rsi]
   14000d305:	mov    ebx,0xbb36fffe
   14000d30a:	(bad)  
   14000d30b:	push   QWORD PTR [rsi]
   14000d30d:	mov    ebx,0x4747fffe
   14000d312:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d316:	rex.RXB inc DWORD PTR [r8]
	...
   14000d335:	add    BYTE PTR [rax],al
   14000d337:	add    BYTE PTR [rdi+0x47],al
   14000d33a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d33e:	rex.RXB dec r11d
   14000d341:	ins    DWORD PTR es:[rdi],dx
   14000d342:	add    bh,bh
   14000d344:	retf   0x6d
   14000d347:	dec    edx
   14000d349:	ins    DWORD PTR es:[rdi],dx
   14000d34a:	add    bh,bh
   14000d34c:	retf   0x6d
   14000d34f:	dec    edx
   14000d351:	ins    BYTE PTR es:[rdi],dx
   14000d352:	add    bh,bh
   14000d354:	retf   0x6c
   14000d357:	dec    edx
   14000d359:	ins    BYTE PTR es:[rdi],dx
   14000d35a:	add    bh,bh
   14000d35c:	retf   0x6c
   14000d35f:	dec    edx
   14000d361:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d364:	leave  
   14000d365:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d368:	leave  
   14000d369:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d36c:	leave  
   14000d36d:	push   0x0
   14000d36f:	dec    ecx
   14000d371:	push   0x0
   14000d373:	dec    ecx
   14000d375:	push   0x0
   14000d377:	dec    ecx
   14000d379:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d37f:	dec    ecx
   14000d381:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d387:	dec    eax
   14000d389:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d38f:	dec    eax
   14000d391:	push   0x68c8ff00
   14000d396:	add    bh,bh
   14000d398:	enter  0x67,0xff
   14000d39c:	enter  0x67,0xff
   14000d3a0:	enter  0x67,0xff
   14000d3a4:	(bad)  
   14000d3a5:	(bad)  
   14000d3a6:	(bad)  
   14000d3a7:	(bad)  
   14000d3a8:	(bad)  
   14000d3a9:	(bad)  
   14000d3aa:	(bad)  
   14000d3ab:	(bad)  
   14000d3ac:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000d3b2:	(bad)  
   14000d3b3:	(bad)  
   14000d3b4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d3ba:	(bad)  
   14000d3bb:	(bad)  
   14000d3bc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d3c2:	(bad)  
   14000d3c3:	(bad)  
   14000d3c4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000d3ca:	(bad)  
   14000d3cb:	(bad)  
   14000d3cc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d3d2:	(bad)  
   14000d3d3:	(bad)  
   14000d3d4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d3da:	(bad)  
   14000d3db:	(bad)  
   14000d3dc:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000d3e3:	push   QWORD PTR [rdi]
   14000d3e5:	mov    esp,0xbc37fffe
   14000d3ea:	(bad)  
   14000d3eb:	push   QWORD PTR [rdi]
   14000d3ed:	mov    esp,0xbc37fffe
   14000d3f2:	(bad)  
   14000d3f3:	push   QWORD PTR [rdi]
   14000d3f5:	mov    esp,0xbc37fffe
   14000d3fa:	(bad)  
   14000d3fb:	push   QWORD PTR [rsi]
   14000d3fd:	mov    ebx,0xbb36fffe
   14000d402:	(bad)  
   14000d403:	push   QWORD PTR [rsi]
   14000d405:	mov    ebx,0xbb36fffe
   14000d40a:	(bad)  
   14000d40b:	push   QWORD PTR [rsi]
   14000d40d:	mov    ebx,0x4747fffe
   14000d412:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d416:	rex.RXB inc DWORD PTR [r8]
	...
   14000d435:	add    BYTE PTR [rax],al
   14000d437:	add    BYTE PTR [rdi+0x47],al
   14000d43a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d43e:	rex.RXB dec r11d
   14000d441:	outs   dx,BYTE PTR ds:[rsi]
   14000d442:	add    bh,bh
   14000d444:	retf   
   14000d445:	ins    DWORD PTR es:[rdi],dx
   14000d446:	add    bh,bh
   14000d448:	retf   0x6d
   14000d44b:	dec    edx
   14000d44d:	ins    DWORD PTR es:[rdi],dx
   14000d44e:	add    bh,bh
   14000d450:	retf   0x6d
   14000d453:	dec    edx
   14000d455:	ins    BYTE PTR es:[rdi],dx
   14000d456:	add    bh,bh
   14000d458:	retf   0x6c
   14000d45b:	dec    edx
   14000d45d:	ins    BYTE PTR es:[rdi],dx
   14000d45e:	add    bh,bh
   14000d460:	retf   0x6c
   14000d463:	dec    edx
   14000d465:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d468:	leave  
   14000d469:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d46c:	leave  
   14000d46d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d470:	leave  
   14000d471:	push   0x0
   14000d473:	dec    ecx
   14000d475:	push   0x0
   14000d477:	dec    ecx
   14000d479:	push   0x0
   14000d47b:	dec    ecx
   14000d47d:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d483:	dec    ecx
   14000d485:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d48b:	dec    eax
   14000d48d:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d493:	dec    eax
   14000d495:	push   0x68c8ff00
   14000d49a:	add    bh,bh
   14000d49c:	enter  0x67,0xff
   14000d4a0:	enter  0x67,0xff
   14000d4a4:	(bad)  
   14000d4a5:	(bad)  
   14000d4a6:	(bad)  
   14000d4a7:	(bad)  
   14000d4a8:	(bad)  
   14000d4a9:	(bad)  
   14000d4aa:	(bad)  
   14000d4ab:	(bad)  
   14000d4ac:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000d4b2:	(bad)  
   14000d4b3:	(bad)  
   14000d4b4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d4ba:	(bad)  
   14000d4bb:	(bad)  
   14000d4bc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d4c2:	(bad)  
   14000d4c3:	(bad)  
   14000d4c4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000d4ca:	(bad)  
   14000d4cb:	(bad)  
   14000d4cc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d4d2:	(bad)  
   14000d4d3:	(bad)  
   14000d4d4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d4da:	(bad)  
   14000d4db:	(bad)  
   14000d4dc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000d4e2:	(bad)  
   14000d4e3:	(bad)  
   14000d4e4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000d4eb:	push   QWORD PTR [rdi]
   14000d4ed:	mov    esp,0xbc37fffe
   14000d4f2:	(bad)  
   14000d4f3:	push   QWORD PTR [rdi]
   14000d4f5:	mov    esp,0xbc37fffe
   14000d4fa:	(bad)  
   14000d4fb:	push   QWORD PTR [rdi]
   14000d4fd:	mov    esp,0xbb36fffe
   14000d502:	(bad)  
   14000d503:	push   QWORD PTR [rsi]
   14000d505:	mov    ebx,0xbb36fffe
   14000d50a:	(bad)  
   14000d50b:	push   QWORD PTR [rsi]
   14000d50d:	mov    ebx,0x4747fffe
   14000d512:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d516:	rex.RXB inc DWORD PTR [r8]
	...
   14000d535:	add    BYTE PTR [rax],al
   14000d537:	add    BYTE PTR [rdi+0x47],al
   14000d53a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d53e:	rex.RXB dec r11d
   14000d541:	outs   dx,BYTE PTR ds:[rsi]
   14000d542:	add    bh,bh
   14000d544:	retf   
   14000d545:	outs   dx,BYTE PTR ds:[rsi]
   14000d546:	add    bh,bh
   14000d548:	retf   
   14000d549:	ins    DWORD PTR es:[rdi],dx
   14000d54a:	add    bh,bh
   14000d54c:	retf   0x6d
   14000d54f:	dec    edx
   14000d551:	ins    DWORD PTR es:[rdi],dx
   14000d552:	add    bh,bh
   14000d554:	retf   0x6d
   14000d557:	dec    edx
   14000d559:	ins    BYTE PTR es:[rdi],dx
   14000d55a:	add    bh,bh
   14000d55c:	retf   0x6c
   14000d55f:	dec    edx
   14000d561:	ins    BYTE PTR es:[rdi],dx
   14000d562:	add    bh,bh
   14000d564:	retf   0x6c
   14000d567:	dec    edx
   14000d569:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d56c:	leave  
   14000d56d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d570:	leave  
   14000d571:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d574:	leave  
   14000d575:	push   0x0
   14000d577:	dec    ecx
   14000d579:	push   0x0
   14000d57b:	dec    ecx
   14000d57d:	push   0x0
   14000d57f:	dec    ecx
   14000d581:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d587:	dec    ecx
   14000d589:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d58f:	dec    eax
   14000d591:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d597:	dec    eax
   14000d599:	push   0x68c8ff00
   14000d59e:	add    bh,bh
   14000d5a0:	enter  0x67,0xff
   14000d5a4:	(bad)  
   14000d5a5:	(bad)  
   14000d5a6:	(bad)  
   14000d5a7:	(bad)  
   14000d5a8:	(bad)  
   14000d5a9:	(bad)  
   14000d5aa:	(bad)  
   14000d5ab:	(bad)  
   14000d5ac:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000d5b2:	(bad)  
   14000d5b3:	(bad)  
   14000d5b4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000d5ba:	(bad)  
   14000d5bb:	(bad)  
   14000d5bc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d5c2:	(bad)  
   14000d5c3:	(bad)  
   14000d5c4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d5ca:	(bad)  
   14000d5cb:	(bad)  
   14000d5cc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000d5d2:	(bad)  
   14000d5d3:	(bad)  
   14000d5d4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d5da:	(bad)  
   14000d5db:	(bad)  
   14000d5dc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d5e2:	(bad)  
   14000d5e3:	(bad)  
   14000d5e4:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000d5eb:	push   QWORD PTR [rdi]
   14000d5ed:	mov    esp,0xbc37fffe
   14000d5f2:	(bad)  
   14000d5f3:	push   QWORD PTR [rdi]
   14000d5f5:	mov    esp,0xbc37fffe
   14000d5fa:	(bad)  
   14000d5fb:	push   QWORD PTR [rdi]
   14000d5fd:	mov    esp,0xbc37fffe
   14000d602:	(bad)  
   14000d603:	push   QWORD PTR [rsi]
   14000d605:	mov    ebx,0xbb36fffe
   14000d60a:	(bad)  
   14000d60b:	push   QWORD PTR [rsi]
   14000d60d:	mov    ebx,0x4747fffe
   14000d612:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d616:	rex.RXB inc DWORD PTR [r8]
	...
   14000d635:	add    BYTE PTR [rax],al
   14000d637:	add    BYTE PTR [rdi+0x47],al
   14000d63a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d63e:	rex.RXB dec r11d
   14000d641:	outs   dx,BYTE PTR ds:[rsi]
   14000d642:	add    bh,bh
   14000d644:	retf   
   14000d645:	outs   dx,BYTE PTR ds:[rsi]
   14000d646:	add    bh,bh
   14000d648:	retf   
   14000d649:	outs   dx,BYTE PTR ds:[rsi]
   14000d64a:	add    bh,bh
   14000d64c:	retf   
   14000d64d:	ins    DWORD PTR es:[rdi],dx
   14000d64e:	add    bh,bh
   14000d650:	retf   0x6d
   14000d653:	dec    edx
   14000d655:	ins    DWORD PTR es:[rdi],dx
   14000d656:	add    bh,bh
   14000d658:	retf   0x6d
   14000d65b:	dec    edx
   14000d65d:	ins    BYTE PTR es:[rdi],dx
   14000d65e:	add    bh,bh
   14000d660:	retf   0x6c
   14000d663:	dec    edx
   14000d665:	ins    BYTE PTR es:[rdi],dx
   14000d666:	add    bh,bh
   14000d668:	retf   0x6c
   14000d66b:	dec    edx
   14000d66d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d670:	leave  
   14000d671:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d674:	leave  
   14000d675:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d678:	leave  
   14000d679:	push   0x0
   14000d67b:	dec    ecx
   14000d67d:	push   0x0
   14000d67f:	dec    ecx
   14000d681:	push   0x0
   14000d683:	dec    ecx
   14000d685:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d68b:	dec    ecx
   14000d68d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d693:	dec    eax
   14000d695:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d69b:	dec    eax
   14000d69d:	push   0x68c8ff00
   14000d6a2:	add    bh,bh
   14000d6a4:	(bad)  
   14000d6a5:	(bad)  
   14000d6a6:	(bad)  
   14000d6a7:	(bad)  
   14000d6a8:	(bad)  
   14000d6a9:	(bad)  
   14000d6aa:	(bad)  
   14000d6ab:	(bad)  
   14000d6ac:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d6b2:	(bad)  
   14000d6b3:	(bad)  
   14000d6b4:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000d6ba:	(bad)  
   14000d6bb:	(bad)  
   14000d6bc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d6c2:	(bad)  
   14000d6c3:	(bad)  
   14000d6c4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d6ca:	(bad)  
   14000d6cb:	(bad)  
   14000d6cc:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000d6d2:	(bad)  
   14000d6d3:	(bad)  
   14000d6d4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d6da:	(bad)  
   14000d6db:	(bad)  
   14000d6dc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d6e2:	(bad)  
   14000d6e3:	(bad)  
   14000d6e4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000d6ea:	(bad)  
   14000d6eb:	(bad)  
   14000d6ec:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000d6f3:	push   QWORD PTR [rdi]
   14000d6f5:	mov    esp,0xbc37fffe
   14000d6fa:	(bad)  
   14000d6fb:	push   QWORD PTR [rdi]
   14000d6fd:	mov    esp,0xbc37fffe
   14000d702:	(bad)  
   14000d703:	push   QWORD PTR [rdi]
   14000d705:	mov    esp,0xbb36fffe
   14000d70a:	(bad)  
   14000d70b:	push   QWORD PTR [rsi]
   14000d70d:	mov    ebx,0x4747fffe
   14000d712:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d716:	rex.RXB inc DWORD PTR [r8]
	...
   14000d735:	add    BYTE PTR [rax],al
   14000d737:	add    BYTE PTR [rdi+0x47],al
   14000d73a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d73e:	rex.RXB dec r11d
   14000d741:	outs   dx,BYTE PTR ds:[rsi]
   14000d742:	add    bh,bh
   14000d744:	retf   
   14000d745:	outs   dx,BYTE PTR ds:[rsi]
   14000d746:	add    bh,bh
   14000d748:	retf   
   14000d749:	outs   dx,BYTE PTR ds:[rsi]
   14000d74a:	add    bh,bh
   14000d74c:	retf   
   14000d74d:	outs   dx,BYTE PTR ds:[rsi]
   14000d74e:	add    bh,bh
   14000d750:	retf   
   14000d751:	ins    DWORD PTR es:[rdi],dx
   14000d752:	add    bh,bh
   14000d754:	retf   0x6d
   14000d757:	dec    edx
   14000d759:	ins    DWORD PTR es:[rdi],dx
   14000d75a:	add    bh,bh
   14000d75c:	retf   0x6d
   14000d75f:	dec    edx
   14000d761:	ins    BYTE PTR es:[rdi],dx
   14000d762:	add    bh,bh
   14000d764:	retf   0x6c
   14000d767:	dec    edx
   14000d769:	ins    BYTE PTR es:[rdi],dx
   14000d76a:	add    bh,bh
   14000d76c:	retf   0x6c
   14000d76f:	dec    edx
   14000d771:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d774:	leave  
   14000d775:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d778:	leave  
   14000d779:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d77c:	leave  
   14000d77d:	push   0x0
   14000d77f:	dec    ecx
   14000d781:	push   0x0
   14000d783:	dec    ecx
   14000d785:	push   0x0
   14000d787:	dec    ecx
   14000d789:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d78f:	dec    ecx
   14000d791:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d797:	dec    eax
   14000d799:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d79f:	dec    eax
   14000d7a1:	push   0xffffffffffffff00
   14000d7a6:	(bad)  
   14000d7a7:	(bad)  
   14000d7a8:	(bad)  
   14000d7a9:	(bad)  
   14000d7aa:	(bad)  
   14000d7ab:	(bad)  
   14000d7ac:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d7b2:	(bad)  
   14000d7b3:	(bad)  
   14000d7b4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000d7ba:	(bad)  
   14000d7bb:	(bad)  
   14000d7bc:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000d7c2:	(bad)  
   14000d7c3:	(bad)  
   14000d7c4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d7ca:	(bad)  
   14000d7cb:	(bad)  
   14000d7cc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d7d2:	(bad)  
   14000d7d3:	(bad)  
   14000d7d4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000d7da:	(bad)  
   14000d7db:	(bad)  
   14000d7dc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d7e2:	(bad)  
   14000d7e3:	(bad)  
   14000d7e4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d7ea:	(bad)  
   14000d7eb:	(bad)  
   14000d7ec:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000d7f3:	push   QWORD PTR [rdi]
   14000d7f5:	mov    esp,0xbc37fffe
   14000d7fa:	(bad)  
   14000d7fb:	push   QWORD PTR [rdi]
   14000d7fd:	mov    esp,0xbc37fffe
   14000d802:	(bad)  
   14000d803:	push   QWORD PTR [rdi]
   14000d805:	mov    esp,0xbc37fffe
   14000d80a:	(bad)  
   14000d80b:	push   QWORD PTR [rsi]
   14000d80d:	mov    ebx,0x4747fffe
   14000d812:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d816:	rex.RXB inc DWORD PTR [r8]
	...
   14000d835:	add    BYTE PTR [rax],al
   14000d837:	add    BYTE PTR [rdi+0x47],al
   14000d83a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d83e:	rex.RXB dec r11d
   14000d841:	outs   dx,DWORD PTR ds:[rsi]
   14000d842:	add    bh,bh
   14000d844:	retf   
   14000d845:	outs   dx,BYTE PTR ds:[rsi]
   14000d846:	add    bh,bh
   14000d848:	retf   
   14000d849:	outs   dx,BYTE PTR ds:[rsi]
   14000d84a:	add    bh,bh
   14000d84c:	retf   
   14000d84d:	outs   dx,BYTE PTR ds:[rsi]
   14000d84e:	add    bh,bh
   14000d850:	retf   
   14000d851:	outs   dx,BYTE PTR ds:[rsi]
   14000d852:	add    bh,bh
   14000d854:	retf   
   14000d855:	ins    DWORD PTR es:[rdi],dx
   14000d856:	add    bh,bh
   14000d858:	retf   0x6d
   14000d85b:	dec    edx
   14000d85d:	ins    DWORD PTR es:[rdi],dx
   14000d85e:	add    bh,bh
   14000d860:	retf   0x6d
   14000d863:	dec    edx
   14000d865:	ins    BYTE PTR es:[rdi],dx
   14000d866:	add    bh,bh
   14000d868:	retf   0x6c
   14000d86b:	dec    edx
   14000d86d:	ins    BYTE PTR es:[rdi],dx
   14000d86e:	add    bh,bh
   14000d870:	retf   0x6c
   14000d873:	dec    edx
   14000d875:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d878:	leave  
   14000d879:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d87c:	leave  
   14000d87d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d880:	leave  
   14000d881:	push   0x0
   14000d883:	dec    ecx
   14000d885:	push   0x0
   14000d887:	dec    ecx
   14000d889:	push   0x0
   14000d88b:	dec    ecx
   14000d88d:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d893:	dec    ecx
   14000d895:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d89b:	dec    eax
   14000d89d:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000d8a3:	(bad)  
   14000d8a4:	(bad)  
   14000d8a5:	(bad)  
   14000d8a6:	(bad)  
   14000d8a7:	(bad)  
   14000d8a8:	(bad)  
   14000d8a9:	(bad)  
   14000d8aa:	(bad)  
   14000d8ab:	(bad)  
   14000d8ac:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d8b2:	(bad)  
   14000d8b3:	(bad)  
   14000d8b4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d8ba:	(bad)  
   14000d8bb:	(bad)  
   14000d8bc:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000d8c2:	(bad)  
   14000d8c3:	(bad)  
   14000d8c4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d8ca:	(bad)  
   14000d8cb:	(bad)  
   14000d8cc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d8d2:	(bad)  
   14000d8d3:	(bad)  
   14000d8d4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000d8da:	(bad)  
   14000d8db:	(bad)  
   14000d8dc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d8e2:	(bad)  
   14000d8e3:	(bad)  
   14000d8e4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d8ea:	(bad)  
   14000d8eb:	(bad)  
   14000d8ec:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000d8f2:	(bad)  
   14000d8f3:	(bad)  
   14000d8f4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000d8fb:	push   QWORD PTR [rdi]
   14000d8fd:	mov    esp,0xbc37fffe
   14000d902:	(bad)  
   14000d903:	push   QWORD PTR [rdi]
   14000d905:	mov    esp,0xbc37fffe
   14000d90a:	(bad)  
   14000d90b:	push   QWORD PTR [rdi]
   14000d90d:	mov    esp,0x4747fffe
   14000d912:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d916:	rex.RXB inc DWORD PTR [r8]
	...
   14000d935:	add    BYTE PTR [rax],al
   14000d937:	add    BYTE PTR [rdi+0x47],al
   14000d93a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d93e:	rex.RXB dec r11d
   14000d941:	outs   dx,DWORD PTR ds:[rsi]
   14000d942:	add    bh,bh
   14000d944:	retf   
   14000d945:	outs   dx,DWORD PTR ds:[rsi]
   14000d946:	add    bh,bh
   14000d948:	retf   
   14000d949:	outs   dx,BYTE PTR ds:[rsi]
   14000d94a:	add    bh,bh
   14000d94c:	retf   
   14000d94d:	outs   dx,BYTE PTR ds:[rsi]
   14000d94e:	add    bh,bh
   14000d950:	retf   
   14000d951:	outs   dx,BYTE PTR ds:[rsi]
   14000d952:	add    bh,bh
   14000d954:	retf   
   14000d955:	outs   dx,BYTE PTR ds:[rsi]
   14000d956:	add    bh,bh
   14000d958:	retf   
   14000d959:	ins    DWORD PTR es:[rdi],dx
   14000d95a:	add    bh,bh
   14000d95c:	retf   0x6d
   14000d95f:	dec    edx
   14000d961:	ins    DWORD PTR es:[rdi],dx
   14000d962:	add    bh,bh
   14000d964:	retf   0x6d
   14000d967:	dec    edx
   14000d969:	ins    BYTE PTR es:[rdi],dx
   14000d96a:	add    bh,bh
   14000d96c:	retf   0x6c
   14000d96f:	dec    edx
   14000d971:	ins    BYTE PTR es:[rdi],dx
   14000d972:	add    bh,bh
   14000d974:	retf   0x6c
   14000d977:	dec    edx
   14000d979:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d97c:	leave  
   14000d97d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d980:	leave  
   14000d981:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d984:	leave  
   14000d985:	push   0x0
   14000d987:	dec    ecx
   14000d989:	push   0x0
   14000d98b:	dec    ecx
   14000d98d:	push   0x0
   14000d98f:	dec    ecx
   14000d991:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000d997:	dec    ecx
   14000d999:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000d99f:	dec    eax
   14000d9a1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d9a7:	(bad)  
   14000d9a8:	(bad)  
   14000d9a9:	(bad)  
   14000d9aa:	(bad)  
   14000d9ab:	(bad)  
   14000d9ac:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000d9b2:	(bad)  
   14000d9b3:	(bad)  
   14000d9b4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d9ba:	(bad)  
   14000d9bb:	(bad)  
   14000d9bc:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000d9c2:	(bad)  
   14000d9c3:	(bad)  
   14000d9c4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000d9ca:	(bad)  
   14000d9cb:	(bad)  
   14000d9cc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d9d2:	(bad)  
   14000d9d3:	(bad)  
   14000d9d4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000d9da:	(bad)  
   14000d9db:	(bad)  
   14000d9dc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000d9e2:	(bad)  
   14000d9e3:	(bad)  
   14000d9e4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d9ea:	(bad)  
   14000d9eb:	(bad)  
   14000d9ec:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000d9f2:	(bad)  
   14000d9f3:	(bad)  
   14000d9f4:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000d9fb:	push   QWORD PTR [rdi]
   14000d9fd:	mov    esp,0xbc37fffe
   14000da02:	(bad)  
   14000da03:	push   QWORD PTR [rdi]
   14000da05:	mov    esp,0xbc37fffe
   14000da0a:	(bad)  
   14000da0b:	push   QWORD PTR [rdi]
   14000da0d:	mov    esp,0x4747fffe
   14000da12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000da16:	rex.RXB inc DWORD PTR [r8]
	...
   14000da35:	add    BYTE PTR [rax],al
   14000da37:	add    BYTE PTR [rdi+0x47],al
   14000da3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000da3e:	rex.RXB dec r11d
   14000da41:	outs   dx,DWORD PTR ds:[rsi]
   14000da42:	add    bh,bh
   14000da44:	retf   
   14000da45:	outs   dx,DWORD PTR ds:[rsi]
   14000da46:	add    bh,bh
   14000da48:	retf   
   14000da49:	outs   dx,DWORD PTR ds:[rsi]
   14000da4a:	add    bh,bh
   14000da4c:	retf   
   14000da4d:	outs   dx,BYTE PTR ds:[rsi]
   14000da4e:	add    bh,bh
   14000da50:	retf   
   14000da51:	outs   dx,BYTE PTR ds:[rsi]
   14000da52:	add    bh,bh
   14000da54:	retf   
   14000da55:	outs   dx,BYTE PTR ds:[rsi]
   14000da56:	add    bh,bh
   14000da58:	retf   
   14000da59:	outs   dx,BYTE PTR ds:[rsi]
   14000da5a:	add    bh,bh
   14000da5c:	retf   
   14000da5d:	ins    DWORD PTR es:[rdi],dx
   14000da5e:	add    bh,bh
   14000da60:	retf   0x6d
   14000da63:	dec    edx
   14000da65:	ins    DWORD PTR es:[rdi],dx
   14000da66:	add    bh,bh
   14000da68:	retf   0x6d
   14000da6b:	dec    edx
   14000da6d:	ins    BYTE PTR es:[rdi],dx
   14000da6e:	add    bh,bh
   14000da70:	retf   0x6c
   14000da73:	dec    edx
   14000da75:	ins    BYTE PTR es:[rdi],dx
   14000da76:	add    bh,bh
   14000da78:	retf   0x6c
   14000da7b:	dec    edx
   14000da7d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000da80:	leave  
   14000da81:	imul   eax,DWORD PTR [rax],0xffffffff
   14000da84:	leave  
   14000da85:	imul   eax,DWORD PTR [rax],0xffffffff
   14000da88:	leave  
   14000da89:	push   0x0
   14000da8b:	dec    ecx
   14000da8d:	push   0x0
   14000da8f:	dec    ecx
   14000da91:	push   0x0
   14000da93:	dec    ecx
   14000da95:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000da9b:	dec    ecx
   14000da9d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000daa3:	(bad)  
   14000daa4:	(bad)  
   14000daa5:	(bad)  
   14000daa6:	(bad)  
   14000daa7:	(bad)  
   14000daa8:	(bad)  
   14000daa9:	(bad)  
   14000daaa:	(bad)  
   14000daab:	(bad)  
   14000daac:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000dab2:	(bad)  
   14000dab3:	(bad)  
   14000dab4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000daba:	(bad)  
   14000dabb:	(bad)  
   14000dabc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000dac2:	(bad)  
   14000dac3:	(bad)  
   14000dac4:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000daca:	(bad)  
   14000dacb:	(bad)  
   14000dacc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dad2:	(bad)  
   14000dad3:	(bad)  
   14000dad4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dada:	(bad)  
   14000dadb:	(bad)  
   14000dadc:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000dae2:	(bad)  
   14000dae3:	(bad)  
   14000dae4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000daea:	(bad)  
   14000daeb:	(bad)  
   14000daec:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000daf2:	(bad)  
   14000daf3:	(bad)  
   14000daf4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000dafa:	(bad)  
   14000dafb:	(bad)  
   14000dafc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000db03:	push   QWORD PTR [rdi]
   14000db05:	mov    esp,0xbc37fffe
   14000db0a:	(bad)  
   14000db0b:	push   QWORD PTR [rdi]
   14000db0d:	mov    esp,0x4747fffe
   14000db12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000db16:	rex.RXB inc DWORD PTR [r8]
	...
   14000db35:	add    BYTE PTR [rax],al
   14000db37:	add    BYTE PTR [rdi+0x47],al
   14000db3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000db3e:	rex.RXB dec r12d
   14000db41:	jo     0x14000db43
   14000db43:	dec    ebx
   14000db45:	outs   dx,DWORD PTR ds:[rsi]
   14000db46:	add    bh,bh
   14000db48:	retf   
   14000db49:	outs   dx,DWORD PTR ds:[rsi]
   14000db4a:	add    bh,bh
   14000db4c:	retf   
   14000db4d:	outs   dx,DWORD PTR ds:[rsi]
   14000db4e:	add    bh,bh
   14000db50:	retf   
   14000db51:	outs   dx,BYTE PTR ds:[rsi]
   14000db52:	add    bh,bh
   14000db54:	retf   
   14000db55:	outs   dx,BYTE PTR ds:[rsi]
   14000db56:	add    bh,bh
   14000db58:	retf   
   14000db59:	outs   dx,BYTE PTR ds:[rsi]
   14000db5a:	add    bh,bh
   14000db5c:	retf   
   14000db5d:	outs   dx,BYTE PTR ds:[rsi]
   14000db5e:	add    bh,bh
   14000db60:	retf   
   14000db61:	ins    DWORD PTR es:[rdi],dx
   14000db62:	add    bh,bh
   14000db64:	retf   0x6d
   14000db67:	dec    edx
   14000db69:	ins    DWORD PTR es:[rdi],dx
   14000db6a:	add    bh,bh
   14000db6c:	retf   0x6d
   14000db6f:	dec    edx
   14000db71:	ins    BYTE PTR es:[rdi],dx
   14000db72:	add    bh,bh
   14000db74:	retf   0x6c
   14000db77:	dec    edx
   14000db79:	ins    BYTE PTR es:[rdi],dx
   14000db7a:	add    bh,bh
   14000db7c:	retf   0x6c
   14000db7f:	dec    edx
   14000db81:	imul   eax,DWORD PTR [rax],0xffffffff
   14000db84:	leave  
   14000db85:	imul   eax,DWORD PTR [rax],0xffffffff
   14000db88:	leave  
   14000db89:	imul   eax,DWORD PTR [rax],0xffffffff
   14000db8c:	leave  
   14000db8d:	push   0x0
   14000db8f:	dec    ecx
   14000db91:	push   0x0
   14000db93:	dec    ecx
   14000db95:	push   0x0
   14000db97:	dec    ecx
   14000db99:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000db9f:	dec    ecx
   14000dba1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dba7:	(bad)  
   14000dba8:	(bad)  
   14000dba9:	(bad)  
   14000dbaa:	(bad)  
   14000dbab:	(bad)  
   14000dbac:	cmp    eax,eax
   14000dbae:	(bad)  
   14000dbaf:	(bad)  
   14000dbb0:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000dbb6:	(bad)  
   14000dbb7:	(bad)  
   14000dbb8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000dbbe:	(bad)  
   14000dbbf:	(bad)  
   14000dbc0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000dbc6:	(bad)  
   14000dbc7:	(bad)  
   14000dbc8:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000dbce:	(bad)  
   14000dbcf:	(bad)  
   14000dbd0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dbd6:	(bad)  
   14000dbd7:	(bad)  
   14000dbd8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dbde:	(bad)  
   14000dbdf:	(bad)  
   14000dbe0:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000dbe6:	(bad)  
   14000dbe7:	(bad)  
   14000dbe8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000dbee:	(bad)  
   14000dbef:	(bad)  
   14000dbf0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000dbf6:	(bad)  
   14000dbf7:	(bad)  
   14000dbf8:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000dbfe:	(bad)  
   14000dbff:	(bad)  
   14000dc00:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000dc07:	push   QWORD PTR [rdi]
   14000dc09:	mov    esp,0xbc37fffe
   14000dc0e:	(bad)  
   14000dc0f:	inc    DWORD PTR [rdi+0x47]
   14000dc12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000dc16:	rex.RXB inc DWORD PTR [r8]
	...
   14000dc35:	add    BYTE PTR [rax],al
   14000dc37:	add    BYTE PTR [rdi+0x47],al
   14000dc3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000dc3e:	rex.RXB dec r12d
   14000dc41:	jo     0x14000dc43
   14000dc43:	dec    esp
   14000dc45:	jo     0x14000dc47
   14000dc47:	dec    ebx
   14000dc49:	outs   dx,DWORD PTR ds:[rsi]
   14000dc4a:	add    bh,bh
   14000dc4c:	retf   
   14000dc4d:	outs   dx,DWORD PTR ds:[rsi]
   14000dc4e:	add    bh,bh
   14000dc50:	retf   
   14000dc51:	outs   dx,DWORD PTR ds:[rsi]
   14000dc52:	add    bh,bh
   14000dc54:	retf   
   14000dc55:	outs   dx,BYTE PTR ds:[rsi]
   14000dc56:	add    bh,bh
   14000dc58:	retf   
   14000dc59:	outs   dx,BYTE PTR ds:[rsi]
   14000dc5a:	add    bh,bh
   14000dc5c:	retf   
   14000dc5d:	outs   dx,BYTE PTR ds:[rsi]
   14000dc5e:	add    bh,bh
   14000dc60:	retf   
   14000dc61:	outs   dx,BYTE PTR ds:[rsi]
   14000dc62:	add    bh,bh
   14000dc64:	retf   
   14000dc65:	ins    DWORD PTR es:[rdi],dx
   14000dc66:	add    bh,bh
   14000dc68:	retf   0x6d
   14000dc6b:	dec    edx
   14000dc6d:	ins    DWORD PTR es:[rdi],dx
   14000dc6e:	add    bh,bh
   14000dc70:	retf   0x6d
   14000dc73:	dec    edx
   14000dc75:	ins    BYTE PTR es:[rdi],dx
   14000dc76:	add    bh,bh
   14000dc78:	retf   0x6c
   14000dc7b:	dec    edx
   14000dc7d:	ins    BYTE PTR es:[rdi],dx
   14000dc7e:	add    bh,bh
   14000dc80:	retf   0x6c
   14000dc83:	dec    edx
   14000dc85:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dc88:	leave  
   14000dc89:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dc8c:	leave  
   14000dc8d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dc90:	leave  
   14000dc91:	push   0x0
   14000dc93:	dec    ecx
   14000dc95:	push   0x0
   14000dc97:	dec    ecx
   14000dc99:	push   0x0
   14000dc9b:	dec    ecx
   14000dc9d:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000dca3:	(bad)  
   14000dca4:	(bad)  
   14000dca5:	(bad)  
   14000dca6:	(bad)  
   14000dca7:	(bad)  
   14000dca8:	(bad)  
   14000dca9:	(bad)  
   14000dcaa:	(bad)  
   14000dcab:	(bad)  
   14000dcac:	cmp    eax,eax
   14000dcae:	(bad)  
   14000dcaf:	(bad)  
   14000dcb0:	cmp    eax,eax
   14000dcb2:	(bad)  
   14000dcb3:	(bad)  
   14000dcb4:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000dcba:	(bad)  
   14000dcbb:	(bad)  
   14000dcbc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000dcc2:	(bad)  
   14000dcc3:	(bad)  
   14000dcc4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000dcca:	(bad)  
   14000dccb:	(bad)  
   14000dccc:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000dcd2:	(bad)  
   14000dcd3:	(bad)  
   14000dcd4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dcda:	(bad)  
   14000dcdb:	(bad)  
   14000dcdc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dce2:	(bad)  
   14000dce3:	(bad)  
   14000dce4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000dcea:	(bad)  
   14000dceb:	(bad)  
   14000dcec:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000dcf2:	(bad)  
   14000dcf3:	(bad)  
   14000dcf4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000dcfa:	(bad)  
   14000dcfb:	(bad)  
   14000dcfc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000dd02:	(bad)  
   14000dd03:	(bad)  
   14000dd04:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000dd0b:	push   QWORD PTR [rdi]
   14000dd0d:	mov    esp,0x4747fffe
   14000dd12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000dd16:	rex.RXB inc DWORD PTR [r8]
	...
   14000dd35:	add    BYTE PTR [rax],al
   14000dd37:	add    BYTE PTR [rdi+0x47],al
   14000dd3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000dd3e:	rex.RXB dec r12d
   14000dd41:	jo     0x14000dd43
   14000dd43:	dec    esp
   14000dd45:	jo     0x14000dd47
   14000dd47:	dec    esp
   14000dd49:	jo     0x14000dd4b
   14000dd4b:	dec    ebx
   14000dd4d:	outs   dx,DWORD PTR ds:[rsi]
   14000dd4e:	add    bh,bh
   14000dd50:	retf   
   14000dd51:	outs   dx,DWORD PTR ds:[rsi]
   14000dd52:	add    bh,bh
   14000dd54:	retf   
   14000dd55:	outs   dx,DWORD PTR ds:[rsi]
   14000dd56:	add    bh,bh
   14000dd58:	retf   
   14000dd59:	outs   dx,BYTE PTR ds:[rsi]
   14000dd5a:	add    bh,bh
   14000dd5c:	retf   
   14000dd5d:	outs   dx,BYTE PTR ds:[rsi]
   14000dd5e:	add    bh,bh
   14000dd60:	retf   
   14000dd61:	outs   dx,BYTE PTR ds:[rsi]
   14000dd62:	add    bh,bh
   14000dd64:	retf   
   14000dd65:	outs   dx,BYTE PTR ds:[rsi]
   14000dd66:	add    bh,bh
   14000dd68:	retf   
   14000dd69:	ins    DWORD PTR es:[rdi],dx
   14000dd6a:	add    bh,bh
   14000dd6c:	retf   0x6d
   14000dd6f:	dec    edx
   14000dd71:	ins    DWORD PTR es:[rdi],dx
   14000dd72:	add    bh,bh
   14000dd74:	retf   0x6d
   14000dd77:	dec    edx
   14000dd79:	ins    BYTE PTR es:[rdi],dx
   14000dd7a:	add    bh,bh
   14000dd7c:	retf   0x6c
   14000dd7f:	dec    edx
   14000dd81:	ins    BYTE PTR es:[rdi],dx
   14000dd82:	add    bh,bh
   14000dd84:	retf   0x6c
   14000dd87:	dec    edx
   14000dd89:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dd8c:	leave  
   14000dd8d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dd90:	leave  
   14000dd91:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dd94:	leave  
   14000dd95:	push   0x0
   14000dd97:	dec    ecx
   14000dd99:	push   0x0
   14000dd9b:	dec    ecx
   14000dd9d:	push   0x0
   14000dd9f:	dec    ecx
   14000dda1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000dda7:	(bad)  
   14000dda8:	(bad)  
   14000dda9:	(bad)  
   14000ddaa:	(bad)  
   14000ddab:	(bad)  
   14000ddac:	cmp    eax,eax
   14000ddae:	(bad)  
   14000ddaf:	(bad)  
   14000ddb0:	cmp    eax,eax
   14000ddb2:	(bad)  
   14000ddb3:	(bad)  
   14000ddb4:	cmp    eax,eax
   14000ddb6:	(bad)  
   14000ddb7:	(bad)  
   14000ddb8:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000ddbe:	(bad)  
   14000ddbf:	(bad)  
   14000ddc0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ddc6:	(bad)  
   14000ddc7:	(bad)  
   14000ddc8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ddce:	(bad)  
   14000ddcf:	(bad)  
   14000ddd0:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000ddd6:	(bad)  
   14000ddd7:	(bad)  
   14000ddd8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ddde:	(bad)  
   14000dddf:	(bad)  
   14000dde0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dde6:	(bad)  
   14000dde7:	(bad)  
   14000dde8:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000ddee:	(bad)  
   14000ddef:	(bad)  
   14000ddf0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ddf6:	(bad)  
   14000ddf7:	(bad)  
   14000ddf8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ddfe:	(bad)  
   14000ddff:	(bad)  
   14000de00:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000de06:	(bad)  
   14000de07:	(bad)  
   14000de08:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000de0f:	inc    DWORD PTR [rdi+0x47]
   14000de12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000de16:	rex.RXB inc DWORD PTR [r8]
	...
   14000de35:	add    BYTE PTR [rax],al
   14000de37:	add    BYTE PTR [rdi+0x47],al
   14000de3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000de3e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000de42:	rex.RXB inc DWORD PTR [r15+0x47]
   14000de46:	rex.RXB call FWORD PTR [r8+0x4c]
   14000de4a:	jmp    FWORD PTR ds:[rax+0x51]
   14000de4e:	xor    eax,0x2c5679ff
   14000de53:	call   QWORD PTR [rcx-0x5500e0a2]
   14000de59:	gs adc bh,bh
   14000de5c:	retf   
   14000de5d:	outs   dx,BYTE PTR ds:[rsi]
   14000de5e:	add    bh,bh
   14000de60:	retf   
   14000de61:	outs   dx,BYTE PTR ds:[rsi]
   14000de62:	add    bh,bh
   14000de64:	retf   
   14000de65:	outs   dx,BYTE PTR ds:[rsi]
   14000de66:	add    bh,bh
   14000de68:	retf   
   14000de69:	outs   dx,BYTE PTR ds:[rsi]
   14000de6a:	add    bh,bh
   14000de6c:	retf   
   14000de6d:	ins    DWORD PTR es:[rdi],dx
   14000de6e:	add    bh,bh
   14000de70:	retf   0x6d
   14000de73:	dec    edx
   14000de75:	ins    DWORD PTR es:[rdi],dx
   14000de76:	add    bh,bh
   14000de78:	retf   0x6d
   14000de7b:	dec    edx
   14000de7d:	ins    BYTE PTR es:[rdi],dx
   14000de7e:	add    bh,bh
   14000de80:	retf   0x6c
   14000de83:	dec    edx
   14000de85:	ins    BYTE PTR es:[rdi],dx
   14000de86:	add    bh,bh
   14000de88:	retf   0x6c
   14000de8b:	dec    edx
   14000de8d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000de90:	leave  
   14000de91:	imul   eax,DWORD PTR [rax],0xffffffff
   14000de94:	leave  
   14000de95:	imul   eax,DWORD PTR [rax],0xffffffff
   14000de98:	leave  
   14000de99:	push   0x0
   14000de9b:	dec    ecx
   14000de9d:	push   0x0
   14000de9f:	dec    ecx
   14000dea1:	push   0x0
   14000dea3:	(bad)  
   14000dea4:	(bad)  
   14000dea5:	(bad)  
   14000dea6:	(bad)  
   14000dea7:	(bad)  
   14000dea8:	(bad)  
   14000dea9:	(bad)  
   14000deaa:	(bad)  
   14000deab:	(bad)  
   14000deac:	cmp    eax,eax
   14000deae:	(bad)  
   14000deaf:	(bad)  
   14000deb0:	cmp    eax,eax
   14000deb2:	(bad)  
   14000deb3:	(bad)  
   14000deb4:	cmp    eax,eax
   14000deb6:	(bad)  
   14000deb7:	(bad)  
   14000deb8:	cmp    eax,eax
   14000deba:	(bad)  
   14000debb:	(bad)  
   14000debc:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000dec2:	(bad)  
   14000dec3:	(bad)  
   14000dec4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000deca:	(bad)  
   14000decb:	(bad)  
   14000decc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ded2:	(bad)  
   14000ded3:	(bad)  
   14000ded4:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000deda:	(bad)  
   14000dedb:	(bad)  
   14000dedc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000dee2:	(bad)  
   14000dee3:	(bad)  
   14000dee4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000deea:	(bad)  
   14000deeb:	(bad)  
   14000deec:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000def2:	(bad)  
   14000def3:	(bad)  
   14000def4:	cmp    al,0xa0
   14000def6:	sar    bh,1
   14000def8:	(bad)  
   14000def9:	mov    DWORD PTR [rsi-0x738cbe01],ebp
   14000deff:	inc    DWORD PTR [rbx+0x65]
   14000df02:	jne    0x14000df03
   14000df04:	rex.RB push r14
   14000df06:	pop    rsi
   14000df07:	inc    DWORD PTR [rdi+0x47]
   14000df0a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df0e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df12:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df16:	rex.RXB inc DWORD PTR [r8]
	...
   14000df35:	add    BYTE PTR [rax],al
   14000df37:	add    BYTE PTR [rdi+0x47],al
   14000df3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df3e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df42:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df46:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df4a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df4e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df52:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df56:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df5a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df5e:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000df62:	xor    eax,0x1f5d91ff
   14000df67:	(bad)  
   14000df68:	mov    ebx,0xcbff0969
   14000df6d:	outs   dx,BYTE PTR ds:[rsi]
   14000df6e:	add    bh,bh
   14000df70:	retf   
   14000df71:	ins    DWORD PTR es:[rdi],dx
   14000df72:	add    bh,bh
   14000df74:	retf   0x6d
   14000df77:	dec    edx
   14000df79:	ins    DWORD PTR es:[rdi],dx
   14000df7a:	add    bh,bh
   14000df7c:	retf   0x6d
   14000df7f:	dec    edx
   14000df81:	ins    BYTE PTR es:[rdi],dx
   14000df82:	add    bh,bh
   14000df84:	retf   0x6c
   14000df87:	dec    edx
   14000df89:	ins    BYTE PTR es:[rdi],dx
   14000df8a:	add    bh,bh
   14000df8c:	retf   0x6c
   14000df8f:	dec    edx
   14000df91:	imul   eax,DWORD PTR [rax],0xffffffff
   14000df94:	leave  
   14000df95:	imul   eax,DWORD PTR [rax],0xffffffff
   14000df98:	leave  
   14000df99:	imul   eax,DWORD PTR [rax],0xffffffff
   14000df9c:	leave  
   14000df9d:	push   0x0
   14000df9f:	dec    ecx
   14000dfa1:	push   0x0
   14000dfa3:	(bad)  
   14000dfa4:	(bad)  
   14000dfa5:	(bad)  
   14000dfa6:	(bad)  
   14000dfa7:	(bad)  
   14000dfa8:	(bad)  
   14000dfa9:	(bad)  
   14000dfaa:	(bad)  
   14000dfab:	(bad)  
   14000dfac:	cmp    eax,eax
   14000dfae:	(bad)  
   14000dfaf:	(bad)  
   14000dfb0:	cmp    eax,eax
   14000dfb2:	(bad)  
   14000dfb3:	(bad)  
   14000dfb4:	cmp    eax,eax
   14000dfb6:	(bad)  
   14000dfb7:	(bad)  
   14000dfb8:	cmp    eax,eax
   14000dfba:	(bad)  
   14000dfbb:	(bad)  
   14000dfbc:	cmp    eax,eax
   14000dfbe:	(bad)  
   14000dfbf:	(bad)  
   14000dfc0:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000dfc6:	(bad)  
   14000dfc7:	(bad)  
   14000dfc8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000dfce:	(bad)  
   14000dfcf:	(bad)  
   14000dfd0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000dfd6:	(bad)  
   14000dfd7:	(bad)  
   14000dfd8:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000dfde:	(bad)  
   14000dfdf:	(bad)  
   14000dfe0:	cmp    DWORD PTR [rsi-0x50c40002],edi
   14000dfe6:	out    0xff,eax
   14000dfe8:	(bad)  
   14000dfe9:	mov    ch,BYTE PTR [rsi+0x756544ff]
   14000dfef:	inc    DWORD PTR [rdi+0x47]
   14000dff2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000dff6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000dffa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000dffe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e002:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e006:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e00a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e00e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e012:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e016:	rex.RXB inc DWORD PTR [r8]
	...
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rdi+0x47],al
   14000e03a:	rex.RXB
   14000e03b:	rex
   14000e03c:	rex.RXB
   14000e03d:	rex.RXB
   14000e03e:	rex.RXB
   14000e03f:	rex
   14000e040:	rex.RXB
   14000e041:	rex.RXB
   14000e042:	rex.RXB
   14000e043:	rex
   14000e044:	rex.RXB
   14000e045:	rex.RXB
   14000e046:	rex.RXB
   14000e047:	rex
   14000e048:	rex.RXB
   14000e049:	rex.RXB
   14000e04a:	rex.RXB jo 0x14000e094
   14000e04d:	rex.RXB
   14000e04e:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000e053:	mov    edi,0xef474747
   14000e058:	rex.RXB
   14000e059:	rex.RXB
   14000e05a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e05e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e062:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e066:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e06a:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000e06e:	xor    eax,0x1b5f9aff
   14000e073:	dec    ebx
   14000e075:	ins    DWORD PTR es:[rdi],dx
   14000e076:	add    bh,bh
   14000e078:	retf   0x6d
   14000e07b:	dec    edx
   14000e07d:	ins    DWORD PTR es:[rdi],dx
   14000e07e:	add    bh,bh
   14000e080:	retf   0x6d
   14000e083:	dec    edx
   14000e085:	ins    BYTE PTR es:[rdi],dx
   14000e086:	add    bh,bh
   14000e088:	retf   0x6c
   14000e08b:	dec    edx
   14000e08d:	ins    BYTE PTR es:[rdi],dx
   14000e08e:	add    bh,bh
   14000e090:	retf   0x6c
   14000e093:	dec    edx
   14000e095:	imul   eax,DWORD PTR [rax],0xffffffff
   14000e098:	leave  
   14000e099:	imul   eax,DWORD PTR [rax],0xffffffff
   14000e09c:	leave  
   14000e09d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000e0a0:	leave  
   14000e0a1:	push   0x0
   14000e0a3:	(bad)  
   14000e0a4:	(bad)  
   14000e0a5:	(bad)  
   14000e0a6:	(bad)  
   14000e0a7:	(bad)  
   14000e0a8:	(bad)  
   14000e0a9:	(bad)  
   14000e0aa:	(bad)  
   14000e0ab:	(bad)  
   14000e0ac:	cmp    al,0xc0
   14000e0ae:	(bad)  
   14000e0af:	(bad)  
   14000e0b0:	cmp    eax,eax
   14000e0b2:	(bad)  
   14000e0b3:	(bad)  
   14000e0b4:	cmp    eax,eax
   14000e0b6:	(bad)  
   14000e0b7:	(bad)  
   14000e0b8:	cmp    eax,eax
   14000e0ba:	(bad)  
   14000e0bb:	(bad)  
   14000e0bc:	cmp    eax,eax
   14000e0be:	(bad)  
   14000e0bf:	(bad)  
   14000e0c0:	cmp    eax,eax
   14000e0c2:	(bad)  
   14000e0c3:	(bad)  
   14000e0c4:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000e0ca:	(bad)  
   14000e0cb:	(bad)  
   14000e0cc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000e0d2:	(bad)  
   14000e0d3:	(bad)  
   14000e0d4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000e0da:	(bad)  
   14000e0db:	(bad)  
   14000e0dc:	(bad)  
   14000e0dd:	xchg   edx,eax
   14000e0de:	mov    ecx,0x756544ff
   14000e0e3:	inc    DWORD PTR [rdi+0x47]
   14000e0e6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e0ea:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e0ee:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e0f2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e0f6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e0fa:	rex.RXB out dx,eax
   14000e0fc:	rex.RXB
   14000e0fd:	rex.RXB
   14000e0fe:	rex.RXB mov r15d,0x80474747
   14000e104:	rex.RXB
   14000e105:	rex.RXB
   14000e106:	rex.RXB jo 0x14000e150
   14000e109:	rex.RXB
   14000e10a:	rex.RXB
   14000e10b:	rex
   14000e10c:	rex.RXB
   14000e10d:	rex.RXB
   14000e10e:	rex.RXB
   14000e10f:	rex
   14000e110:	rex.RXB
   14000e111:	rex.RXB
   14000e112:	rex.RXB
   14000e113:	rex
   14000e114:	rex.RXB
   14000e115:	rex.RXB
   14000e116:	rex.RXB
   14000e117:	add    BYTE PTR [rax],al
	...
   14000e156:	add    BYTE PTR [rax],al
   14000e158:	rex.RXB
   14000e159:	rex.RXB
   14000e15a:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000e15e:	rex.RXB (bad) 
   14000e160:	rex.RXB
   14000e161:	rex.RXB
   14000e162:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000e164:	rex.RXB
   14000e165:	rex.RXB
   14000e166:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e16a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e16e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e172:	rex.RXB call FWORD PTR [r8+0x4c]
   14000e176:	call   FWORD PTR ds:[rcx-0x3500e4a1]
   14000e17d:	ins    DWORD PTR es:[rdi],dx
   14000e17e:	add    bh,bh
   14000e180:	retf   0x6d
   14000e183:	dec    edx
   14000e185:	ins    DWORD PTR es:[rdi],dx
   14000e186:	add    bh,bh
   14000e188:	retf   0x6c
   14000e18b:	dec    edx
   14000e18d:	ins    BYTE PTR es:[rdi],dx
   14000e18e:	add    bh,bh
   14000e190:	retf   0x6c
   14000e193:	dec    edx
   14000e195:	ins    BYTE PTR es:[rdi],dx
   14000e196:	add    bh,bh
   14000e198:	retf   0x6b
   14000e19b:	dec    ecx
   14000e19d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000e1a0:	leave  
   14000e1a1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000e1a4:	(bad)  
   14000e1a5:	(bad)  
   14000e1a6:	(bad)  
   14000e1a7:	(bad)  
   14000e1a8:	(bad)  
   14000e1a9:	(bad)  
   14000e1aa:	(bad)  
   14000e1ab:	(bad)  
   14000e1ac:	cmp    al,0xc0
   14000e1ae:	(bad)  
   14000e1af:	(bad)  
   14000e1b0:	cmp    al,0xc0
   14000e1b2:	(bad)  
   14000e1b3:	(bad)  
   14000e1b4:	cmp    eax,eax
   14000e1b6:	(bad)  
   14000e1b7:	(bad)  
   14000e1b8:	cmp    eax,eax
   14000e1ba:	(bad)  
   14000e1bb:	(bad)  
   14000e1bc:	cmp    eax,eax
   14000e1be:	(bad)  
   14000e1bf:	(bad)  
   14000e1c0:	cmp    eax,eax
   14000e1c2:	(bad)  
   14000e1c3:	(bad)  
   14000e1c4:	cmp    eax,eax
   14000e1c6:	(bad)  
   14000e1c7:	(bad)  
   14000e1c8:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000e1ce:	(bad)  
   14000e1cf:	(bad)  
   14000e1d0:	cmp    bh,BYTE PTR [rdi-0x6dc00002]
   14000e1d6:	mov    ecx,0x5e5645ff
   14000e1db:	inc    DWORD PTR [rdi+0x47]
   14000e1de:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e1e2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e1e6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e1ea:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e1ee:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000e1f0:	rex.RXB
   14000e1f1:	rex.RXB
   14000e1f2:	rex.RXB (bad) 
   14000e1f4:	rex.RXB
   14000e1f5:	rex.RXB
   14000e1f6:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000e261:	add    BYTE PTR [rax],al
   14000e263:	add    BYTE PTR [rdi+0x47],al
   14000e266:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000e26a:	rex.RXB (bad) 
   14000e26c:	rex.RXB
   14000e26d:	rex.RXB
   14000e26e:	rex.RXB mov r15d,0xff474747
   14000e274:	rex.RXB
   14000e275:	rex.RXB
   14000e276:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e27a:	rex.RXB call QWORD PTR [r15+0x4c]
   14000e27e:	jmp    FWORD PTR ds:[rcx-0x3500ed9c]
   14000e285:	ins    DWORD PTR es:[rdi],dx
   14000e286:	add    bh,bh
   14000e288:	retf   0x6d
   14000e28b:	dec    edx
   14000e28d:	ins    BYTE PTR es:[rdi],dx
   14000e28e:	add    bh,bh
   14000e290:	retf   0x6c
   14000e293:	dec    edx
   14000e295:	ins    BYTE PTR es:[rdi],dx
   14000e296:	add    bh,bh
   14000e298:	retf   0x6c
   14000e29b:	dec    edx
   14000e29d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000e2a0:	leave  
   14000e2a1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000e2a4:	(bad)  
   14000e2a5:	(bad)  
   14000e2a6:	(bad)  
   14000e2a7:	(bad)  
   14000e2a8:	(bad)  
   14000e2a9:	(bad)  
   14000e2aa:	(bad)  
   14000e2ab:	(bad)  
   14000e2ac:	cmp    al,0xc0
   14000e2ae:	(bad)  
   14000e2af:	(bad)  
   14000e2b0:	cmp    al,0xc0
   14000e2b2:	(bad)  
   14000e2b3:	(bad)  
   14000e2b4:	cmp    al,0xc0
   14000e2b6:	(bad)  
   14000e2b7:	(bad)  
   14000e2b8:	cmp    eax,eax
   14000e2ba:	(bad)  
   14000e2bb:	(bad)  
   14000e2bc:	cmp    eax,eax
   14000e2be:	(bad)  
   14000e2bf:	(bad)  
   14000e2c0:	cmp    eax,eax
   14000e2c2:	(bad)  
   14000e2c3:	(bad)  
   14000e2c4:	cmp    eax,eax
   14000e2c6:	(bad)  
   14000e2c7:	(bad)  
   14000e2c8:	cmp    eax,eax
   14000e2ca:	(bad)  
   14000e2cb:	(bad)  
   14000e2cc:	movabs eax,ds:0x4747ff5e5645ffd0
   14000e2d6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e2da:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e2de:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e2e2:	rex.RXB mov r15d,0x60474747
   14000e2e8:	rex.RXB
   14000e2e9:	rex.RXB
   14000e2ea:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000e36d:	add    BYTE PTR [rax],al
   14000e36f:	add    BYTE PTR [rdi+0x47],al
   14000e372:	rex.RXB
   14000e373:	rex
   14000e374:	rex.RXB
   14000e375:	rex.RXB
   14000e376:	rex.RXB mov r15d,0xff474747
   14000e37c:	rex.RXB
   14000e37d:	rex.RXB
   14000e37e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e382:	rex.RXB inc DWORD PTR [r8-0x3d00d7a8]
   14000e389:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   14000e38d:	ins    DWORD PTR es:[rdi],dx
   14000e38e:	add    bh,bh
   14000e390:	retf   0x6c
   14000e393:	dec    edx
   14000e395:	ins    BYTE PTR es:[rdi],dx
   14000e396:	add    bh,bh
   14000e398:	retf   0x6c
   14000e39b:	dec    edx
   14000e39d:	ins    BYTE PTR es:[rdi],dx
   14000e39e:	add    bh,bh
   14000e3a0:	retf   0x6b
   14000e3a3:	(bad)  
   14000e3a4:	(bad)  
   14000e3a5:	(bad)  
   14000e3a6:	(bad)  
   14000e3a7:	(bad)  
   14000e3a8:	(bad)  
   14000e3a9:	(bad)  
   14000e3aa:	(bad)  
   14000e3ab:	(bad)  
   14000e3ac:	cmp    al,0xc1
   14000e3ae:	(bad)  
   14000e3af:	(bad)  
   14000e3b0:	cmp    al,0xc0
   14000e3b2:	(bad)  
   14000e3b3:	(bad)  
   14000e3b4:	cmp    al,0xc0
   14000e3b6:	(bad)  
   14000e3b7:	(bad)  
   14000e3b8:	cmp    al,0xc0
   14000e3ba:	(bad)  
   14000e3bb:	(bad)  
   14000e3bc:	cmp    eax,eax
   14000e3be:	(bad)  
   14000e3bf:	(bad)  
   14000e3c0:	cmp    eax,eax
   14000e3c2:	(bad)  
   14000e3c3:	(bad)  
   14000e3c4:	cmp    al,0xb8
   14000e3c6:	repz inc DWORD PTR [rdx+0x7c]
   14000e3ca:	xchg   edi,eax
   14000e3cb:	inc    DWORD PTR [rdi+0x47]
   14000e3ce:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e3d2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e3d6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e3da:	rex.RXB mov r15d,0x40474747
	...
   14000e478:	rex.RXB
   14000e479:	rex.RXB
   14000e47a:	rex.RXB
   14000e47b:	rex
   14000e47c:	rex.RXB
   14000e47d:	rex.RXB
   14000e47e:	rex.RXB fild WORD PTR [r15+0x47]
   14000e482:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e486:	rex.RXB dec DWORD PTR [r15+0x49]
   14000e48a:	rex.XB dec DWORD PTR [r9-0x3d00dba6]
   14000e491:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   14000e495:	ins    BYTE PTR es:[rdi],dx
   14000e496:	add    bh,bh
   14000e498:	retf   0x6c
   14000e49b:	dec    edx
   14000e49d:	ins    BYTE PTR es:[rdi],dx
   14000e49e:	add    bh,bh
   14000e4a0:	retf   0x6c
   14000e4a3:	(bad)  
   14000e4a4:	(bad)  
   14000e4a5:	(bad)  
   14000e4a6:	(bad)  
   14000e4a7:	(bad)  
   14000e4a8:	(bad)  
   14000e4a9:	(bad)  
   14000e4aa:	(bad)  
   14000e4ab:	(bad)  
   14000e4ac:	cmp    al,0xc1
   14000e4ae:	(bad)  
   14000e4af:	(bad)  
   14000e4b0:	cmp    al,0xc1
   14000e4b2:	(bad)  
   14000e4b3:	(bad)  
   14000e4b4:	cmp    al,0xc0
   14000e4b6:	(bad)  
   14000e4b7:	(bad)  
   14000e4b8:	cmp    al,0xc0
   14000e4ba:	(bad)  
   14000e4bb:	(bad)  
   14000e4bc:	cmp    eax,0x41fff3b8
   14000e4c1:	test   BYTE PTR [rbx+0x524f46ff],ah
   14000e4c7:	inc    DWORD PTR [rdi+0x47]
   14000e4ca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e4ce:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e4d2:	rex.RXB fild WORD PTR [r15+0x47]
   14000e4d6:	rex.RXB
   14000e4d7:	add    BYTE PTR [rax],al
	...
   14000e57e:	add    BYTE PTR [rax],al
   14000e580:	rex.RXB
   14000e581:	rex.RXB
   14000e582:	rex.RXB pop QWORD PTR [r15+0x47]
   14000e586:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e58a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e58e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e592:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000e596:	xor    eax,0x245a89ff
   14000e59b:	jmp    QWORD PTR [rcx-0x5600e9a0]
   14000e5a1:	movsxd edx,DWORD PTR [rdx]
   14000e5a3:	call   rcx
   14000e5a5:	rcl    ecx,1
   14000e5a7:	call   rcx
   14000e5a9:	rcl    ecx,1
   14000e5ab:	(bad)  
   14000e5ac:	(bad)  
   14000e5ad:	movabs ds:0x8442ffc59b3fffd0,eax
   14000e5b6:	movabs ds:0x474747ff756544ff,eax
   14000e5bf:	inc    DWORD PTR [rdi+0x47]
   14000e5c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e5c6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e5ca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e5ce:	rex.RXB pop QWORD PTR [r8]
	...
   14000e681:	add    BYTE PTR [rax],al
   14000e683:	add    BYTE PTR [rdi+0x47],al
   14000e686:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000e68a:	rex.RXB lahf 
   14000e68c:	rex.RXB
   14000e68d:	rex.RXB
   14000e68e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e692:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e696:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e69a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e69e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6a2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6a6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6aa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6ae:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6b2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6b6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6ba:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6be:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e6c6:	rex.RXB lahf 
   14000e6c8:	rex.RXB
   14000e6c9:	rex.RXB
   14000e6ca:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000e789:	add    BYTE PTR [rax],al
   14000e78b:	add    BYTE PTR [rdi+0x47],al
   14000e78e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000e792:	rex.RXB (bad) 
   14000e794:	rex.RXB
   14000e795:	rex.RXB
   14000e796:	rex.RXB lahf 
   14000e798:	rex.RXB
   14000e799:	rex.RXB
   14000e79a:	rex.RXB iret 
   14000e79c:	rex.RXB
   14000e79d:	rex.RXB
   14000e79e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e7a2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e7a6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e7aa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e7ae:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e7b2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e7b6:	rex.RXB iret 
   14000e7b8:	rex.RXB
   14000e7b9:	rex.RXB
   14000e7ba:	rex.RXB lahf 
   14000e7bc:	rex.RXB
   14000e7bd:	rex.RXB
   14000e7be:	rex.RXB (bad) 
   14000e7c0:	rex.RXB
   14000e7c1:	rex.RXB
   14000e7c2:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000ea25:	add    BYTE PTR [rax],al
   14000ea27:	add    bh,bh
   14000ea29:	(bad)  
   14000ea2a:	(bad)  
   14000ea2b:	(bad)  
   14000ea2c:	(bad)  
   14000ea2d:	(bad)  
   14000ea2e:	(bad)  
   14000ea2f:	(bad)  
   14000ea30:	(bad)  
   14000ea31:	(bad)  
   14000ea32:	(bad)  
   14000ea33:	(bad)  
   14000ea34:	(bad)  
   14000ea35:	(bad)  
   14000ea36:	(bad)  
   14000ea37:	(bad)  
   14000ea38:	(bad)  
   14000ea39:	(bad)  
   14000ea3a:	(bad)  
   14000ea3b:	cld    
   14000ea3c:	(bad)  
   14000ea3d:	(bad)  
   14000ea3e:	(bad)  
   14000ea3f:	(bad)  
   14000ea40:	(bad)  
   14000ea41:	(bad)  
   14000ea42:	push   rax
   14000ea44:	ud0    edi,edi
   14000ea47:	(bad)  
   14000ea48:	(bad)  
   14000ea49:	(bad)  
   14000ea4a:	jmp    rax
   14000ea4c:	(bad)  
   14000ea4d:	(bad)  
   14000ea4e:	(bad)  
   14000ea4f:	(bad)  
   14000ea50:	(bad)  
   14000ea51:	(bad)  
   14000ea52:	inc    DWORD PTR [rax-0xff]
   14000ea58:	(bad)  
   14000ea59:	(bad)  
   14000ea5a:	inc    DWORD PTR [rax]
   14000ea5c:	add    bh,bh
   14000ea5e:	(bad)  
   14000ea5f:	(bad)  
   14000ea60:	(bad)  
   14000ea61:	(bad)  
   14000ea62:	cld    
   14000ea63:	add    BYTE PTR [rax],al
   14000ea65:	(bad)  
   14000ea66:	(bad)  
   14000ea67:	(bad)  
   14000ea68:	(bad)  
   14000ea69:	(bad)  
   14000ea6a:	clc    
   14000ea6b:	add    BYTE PTR [rax],al
   14000ea6d:	(bad)  
   14000ea6e:	(bad)  
   14000ea6f:	(bad)  
   14000ea70:	(bad)  
   14000ea71:	push   rax
   14000ea73:	add    BYTE PTR [rax],al
   14000ea75:	ud0    edi,edi
   14000ea78:	(bad)  
   14000ea79:	jmp    rax
   14000ea7b:	add    BYTE PTR [rax],al
   14000ea7d:	(bad)  
   14000ea7e:	(bad)  
   14000ea7f:	(bad)  
   14000ea80:	(bad)  
   14000ea81:	inc    eax
   14000ea83:	add    BYTE PTR [rax],al
   14000ea85:	add    edi,edi
   14000ea87:	(bad)  
   14000ea88:	(bad)  
   14000ea89:	inc    DWORD PTR [rax]
   14000ea8b:	add    BYTE PTR [rax],al
   14000ea8d:	add    edi,edi
   14000ea8f:	(bad)  
   14000ea90:	(bad)  
   14000ea91:	inc    BYTE PTR [rax]
   14000ea93:	add    BYTE PTR [rax],al
   14000ea95:	add    BYTE PTR [rdi-0x1],bh
   14000ea98:	(bad)  
   14000ea99:	cld    
   14000ea9a:	add    BYTE PTR [rax],al
   14000ea9c:	add    BYTE PTR [rax],al
   14000ea9e:	(bad)  
   14000ea9f:	(bad)  
   14000eaa0:	(bad)  
   14000eaa1:	cld    
   14000eaa2:	add    BYTE PTR [rax],al
   14000eaa4:	add    BYTE PTR [rax],al
   14000eaa6:	(bad)  
   14000eaa7:	(bad)  
   14000eaa8:	(bad)  
   14000eaa9:	clc    
   14000eaaa:	add    BYTE PTR [rax],al
   14000eaac:	add    BYTE PTR [rax],al
   14000eaae:	(bad)  
   14000eaaf:	(bad)  
   14000eab0:	push   rax
   14000eab2:	add    BYTE PTR [rax],al
   14000eab4:	add    BYTE PTR [rax],al
   14000eab6:	ud0    edi,edi
   14000eab9:	loopne 0x14000eabb
   14000eabb:	add    BYTE PTR [rax],al
   14000eabd:	add    BYTE PTR [rdi],al
   14000eabf:	(bad)  
   14000eac0:	inc    eax
   14000eac2:	add    BYTE PTR [rax],al
   14000eac4:	add    BYTE PTR [rax],al
   14000eac6:	add    edi,edi
   14000eac8:	inc    eax
   14000eaca:	add    BYTE PTR [rax],al
   14000eacc:	add    BYTE PTR [rax],al
   14000eace:	add    edi,edi
   14000ead0:	inc    DWORD PTR [rax+0x0]
   14000ead6:	add    edi,edi
   14000ead8:	inc    DWORD PTR [rax]
   14000eada:	add    BYTE PTR [rax],al
   14000eadc:	add    BYTE PTR [rax],al
   14000eade:	add    bh,bh
   14000eae0:	inc    DWORD PTR [rax]
   14000eae2:	add    BYTE PTR [rax],al
   14000eae4:	add    BYTE PTR [rax],al
   14000eae6:	add    bh,bh
   14000eae8:	inc    BYTE PTR [rax]
   14000eaea:	add    BYTE PTR [rax],al
   14000eaec:	add    BYTE PTR [rax],al
   14000eaee:	add    BYTE PTR [rdi-0x2],bh
   14000eaf1:	add    BYTE PTR [rax],al
   14000eaf3:	add    BYTE PTR [rax],al
   14000eaf5:	add    BYTE PTR [rax],al
   14000eaf7:	jg     0x14000eaf5
   14000eaf9:	add    BYTE PTR [rax],al
   14000eafb:	add    BYTE PTR [rax],al
   14000eafd:	add    BYTE PTR [rax],al
   14000eaff:	(bad)  
   14000eb00:	cld    
   14000eb01:	add    BYTE PTR [rax],al
   14000eb03:	add    BYTE PTR [rax],al
   14000eb05:	add    BYTE PTR [rax],al
   14000eb07:	(bad)  
   14000eb08:	clc    
   14000eb09:	add    BYTE PTR [rax],al
   14000eb0b:	add    BYTE PTR [rax],al
   14000eb0d:	add    BYTE PTR [rax],al
   14000eb0f:	(bad)  
   14000eb10:	clc    
   14000eb11:	add    BYTE PTR [rax],al
   14000eb13:	add    BYTE PTR [rax],al
   14000eb15:	add    BYTE PTR [rax],al
   14000eb17:	(bad)  
   14000eb18:	clc    
   14000eb19:	add    BYTE PTR [rax],al
   14000eb1b:	add    BYTE PTR [rax],al
   14000eb1d:	add    BYTE PTR [rax],al
   14000eb1f:	(bad)  
   14000eb20:	lock add BYTE PTR [rax],al
   14000eb23:	add    BYTE PTR [rax],al
   14000eb25:	add    BYTE PTR [rax],al
   14000eb27:	(bad)  
   14000eb29:	add    BYTE PTR [rax],al
   14000eb2b:	add    BYTE PTR [rax],al
   14000eb2d:	add    BYTE PTR [rax],al
   14000eb2f:	(bad)  
   14000eb31:	add    BYTE PTR [rax],al
   14000eb33:	add    BYTE PTR [rax],al
   14000eb35:	add    BYTE PTR [rax],al
   14000eb37:	(bad)  
   14000eb39:	add    BYTE PTR [rax],al
   14000eb3b:	add    BYTE PTR [rax],al
   14000eb3d:	add    BYTE PTR [rax],al
   14000eb3f:	(bad)  
   14000eb41:	add    BYTE PTR [rax],al
   14000eb43:	add    BYTE PTR [rax],al
   14000eb45:	add    BYTE PTR [rax],al
   14000eb47:	(bad)  
   14000eb49:	add    BYTE PTR [rax],al
   14000eb4b:	add    BYTE PTR [rax],al
   14000eb4d:	add    BYTE PTR [rax],al
   14000eb4f:	(bad)  
   14000eb51:	add    BYTE PTR [rax],al
   14000eb53:	add    BYTE PTR [rax],al
   14000eb55:	add    BYTE PTR [rax],al
   14000eb57:	(bad)  
   14000eb59:	add    BYTE PTR [rax],al
   14000eb5b:	add    BYTE PTR [rax],al
   14000eb5d:	add    BYTE PTR [rax],al
   14000eb5f:	(bad)  
   14000eb61:	add    BYTE PTR [rax],al
   14000eb63:	add    BYTE PTR [rax],al
   14000eb65:	add    BYTE PTR [rax],al
   14000eb67:	(bad)  
   14000eb69:	add    BYTE PTR [rax],al
   14000eb6b:	add    BYTE PTR [rax],al
   14000eb6d:	add    BYTE PTR [rax],al
   14000eb6f:	(bad)  
   14000eb71:	add    BYTE PTR [rax],al
   14000eb73:	add    BYTE PTR [rax],al
   14000eb75:	add    BYTE PTR [rax],al
   14000eb77:	(bad)  
   14000eb79:	add    BYTE PTR [rax],al
   14000eb7b:	add    BYTE PTR [rax],al
   14000eb7d:	add    BYTE PTR [rax],al
   14000eb7f:	(bad)  
   14000eb81:	add    BYTE PTR [rax],al
   14000eb83:	add    BYTE PTR [rax],al
   14000eb85:	add    BYTE PTR [rax],al
   14000eb87:	(bad)  
   14000eb89:	add    BYTE PTR [rax],al
   14000eb8b:	add    BYTE PTR [rax],al
   14000eb8d:	add    BYTE PTR [rax],al
   14000eb8f:	(bad)  
   14000eb91:	add    BYTE PTR [rax],al
   14000eb93:	add    BYTE PTR [rax],al
   14000eb95:	add    BYTE PTR [rax],al
   14000eb97:	(bad)  
   14000eb99:	add    BYTE PTR [rax],al
   14000eb9b:	add    BYTE PTR [rax],al
   14000eb9d:	add    BYTE PTR [rax],al
   14000eb9f:	(bad)  
   14000eba1:	add    BYTE PTR [rax],al
   14000eba3:	add    BYTE PTR [rax],al
   14000eba5:	add    BYTE PTR [rax],al
   14000eba7:	(bad)  
   14000eba9:	add    BYTE PTR [rax],al
   14000ebab:	add    BYTE PTR [rax],al
   14000ebad:	add    BYTE PTR [rax],al
   14000ebaf:	(bad)  
   14000ebb1:	add    BYTE PTR [rax],al
   14000ebb3:	add    BYTE PTR [rax],al
   14000ebb5:	add    BYTE PTR [rax],al
   14000ebb7:	(bad)  
   14000ebb9:	add    BYTE PTR [rax],al
   14000ebbb:	add    BYTE PTR [rax],al
   14000ebbd:	add    BYTE PTR [rax],al
   14000ebbf:	(bad)  
   14000ebc1:	add    BYTE PTR [rax],al
   14000ebc3:	add    BYTE PTR [rax],al
   14000ebc5:	add    BYTE PTR [rax],al
   14000ebc7:	(bad)  
   14000ebc9:	add    BYTE PTR [rax],al
   14000ebcb:	add    BYTE PTR [rax],al
   14000ebcd:	add    BYTE PTR [rax],al
   14000ebcf:	(bad)  
   14000ebd1:	add    BYTE PTR [rax],al
   14000ebd3:	add    BYTE PTR [rax],al
   14000ebd5:	add    BYTE PTR [rax],al
   14000ebd7:	(bad)  
   14000ebd9:	add    BYTE PTR [rax],al
   14000ebdb:	add    BYTE PTR [rax],al
   14000ebdd:	add    BYTE PTR [rax],al
   14000ebdf:	ud0    esi,eax
   14000ebe2:	add    BYTE PTR [rax],al
   14000ebe4:	add    BYTE PTR [rax],al
   14000ebe6:	ud0    edi,edi
   14000ebe9:	inc    BYTE PTR [rax]
   14000ebeb:	add    BYTE PTR [rax],al
   14000ebed:	add    BYTE PTR [rdi-0x1],bh
   14000ebf0:	(bad)  
   14000ebf1:	inc    eax
   14000ebf3:	add    BYTE PTR [rax],al
   14000ebf5:	add    edi,edi
   14000ebf7:	(bad)  
   14000ebf8:	(bad)  
   14000ebf9:	push   rax
   14000ebfb:	add    BYTE PTR [rax],al
   14000ebfd:	ud0    edi,edi
   14000ec00:	(bad)  
   14000ec01:	(bad)  
   14000ec02:	cld    
   14000ec03:	add    BYTE PTR [rax],al
   14000ec05:	(bad)  
   14000ec06:	(bad)  
   14000ec07:	(bad)  
   14000ec08:	(bad)  
   14000ec09:	(bad)  
   14000ec0a:	inc    BYTE PTR [rax]
   14000ec0c:	add    BYTE PTR [rdi-0x1],bh
   14000ec0f:	(bad)  
   14000ec10:	(bad)  
   14000ec11:	(bad)  
   14000ec12:	inc    DWORD PTR [rax-0xff]
   14000ec18:	(bad)  
   14000ec19:	(bad)  
   14000ec1a:	(bad)  
   14000ec1b:	(bad)  
   14000ec1c:	(bad)  
   14000ec1d:	(bad)  
   14000ec1e:	(bad)  
   14000ec1f:	(bad)  
   14000ec20:	(bad)  
   14000ec21:	(bad)  
   14000ec22:	(bad)  
   14000ec23:	(bad)  
   14000ec24:	(bad)  
   14000ec25:	(bad)  
   14000ec26:	(bad)  
   14000ec27:	jmp    FWORD PTR [rax]
   14000ec29:	add    BYTE PTR [rax],al
   14000ec2b:	add    BYTE PTR [rax],dh
   14000ec2d:	add    BYTE PTR [rax],al
   14000ec2f:	add    BYTE PTR [rax+0x0],ah
   14000ec32:	add    BYTE PTR [rax],al
   14000ec34:	add    DWORD PTR [rax],eax
   14000ec36:	and    BYTE PTR [rax],al
	...
   14000ed6c:	rex.RXB
   14000ed6d:	rex.RXB
   14000ed6e:	rex.RXB (bad) 
   14000ed70:	rex.RXB
   14000ed71:	rex.RXB
   14000ed72:	rex.RXB (bad) 
	...
   14000ee24:	rex.RXB
   14000ee25:	rex.RXB
   14000ee26:	rex.RXB
   14000ee27:	rex
   14000ee28:	rex.RXB
   14000ee29:	rex.RXB
   14000ee2a:	rex.RXB iret 
   14000ee2c:	rex.RXB
   14000ee2d:	rex.RXB
   14000ee2e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ee32:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ee36:	rex.RXB iret 
   14000ee38:	rex.RXB
   14000ee39:	rex.RXB
   14000ee3a:	rex.RXB
   14000ee3b:	add    BYTE PTR [rax],al
	...
   14000eeda:	add    BYTE PTR [rax],al
   14000eedc:	rex.RXB
   14000eedd:	rex.RXB
   14000eede:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000eee2:	rex.RXB pop QWORD PTR [r15+0x47]
   14000eee6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000eeea:	rex.RXB push QWORD PTR [r13+0x75]
   14000eeee:	jne    0x14000eeef
   14000eef0:	jne    0x14000ef67
   14000eef2:	jne    0x14000eef3
   14000eef4:	rex.RXB
   14000eef5:	rex.RXB
   14000eef6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000eefa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000eefe:	rex.RXB pop QWORD PTR [r15+0x47]
   14000ef02:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000ef95:	add    BYTE PTR [rax],al
   14000ef97:	add    BYTE PTR [rdi+0x47],al
   14000ef9a:	rex.RXB
   14000ef9b:	rex
   14000ef9c:	rex.RXB
   14000ef9d:	rex.RXB
   14000ef9e:	rex.RXB fild WORD PTR [r15+0x47]
   14000efa2:	rex.RXB inc DWORD PTR [r13+0x55]
   14000efa6:	pop    rsi
   14000efa7:	(bad)  
   14000efa8:	cmp    dl,BYTE PTR [rsi-0x3b]
   14000efae:	(bad)  
   14000efaf:	(bad)  
   14000efb0:	(bad)  
   14000efb1:	(bad)  
   14000efb2:	(bad)  
   14000efb3:	call   FWORD PTR [rbp+rdx*2+0x4a57ff16]
   14000efba:	inc    DWORD PTR ds:[rdi+0x47]
   14000efbe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000efc2:	rex.RXB fild WORD PTR [r15+0x47]
   14000efc6:	rex.RXB
   14000efc7:	add    BYTE PTR [rax],al
	...
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	rex.RXB
   14000f055:	rex.RXB
   14000f056:	rex.RXB pop QWORD PTR [r15+0x47]
   14000f05a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f05e:	rex.RXB (bad) 
   14000f060:	(bad)  
   14000f061:	jns    0x14000effa
   14000f063:	push   QWORD PTR [rsi]
   14000f065:	mov    bl,0xf3
   14000f067:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x14000ef27
   14000f06d:	(bad)  
   14000f06e:	(bad)  
   14000f06f:	(bad)  
   14000f070:	(bad)  
   14000f071:	(bad)  
   14000f072:	(bad)  
   14000f073:	inc    ebx
   14000f075:	pop    rsp
   14000f076:	add    bh,bh
   14000f078:	mov    ebx,0x7dff045b
   14000f07d:	push   rax
   14000f07e:	sub    bh,bh
   14000f080:	rex.RXB
   14000f081:	rex.RXB
   14000f082:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f086:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f08a:	rex.RXB pop QWORD PTR [r8]
	...
   14000f109:	add    BYTE PTR [rax],al
   14000f10b:	add    BYTE PTR [rdi+0x47],al
   14000f10e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000f112:	rex.RXB iret 
   14000f114:	rex.RXB
   14000f115:	rex.RXB
   14000f116:	rex.RXB inc DWORD PTR [r14+0x4e]
   14000f11a:	push   rdx
   14000f11b:	(bad)  
   14000f11c:	cmp    edx,DWORD PTR [rdi-0x45ca003b]
   14000f122:	(bad)  
   14000f123:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600efe3
   14000f129:	mov    edx,0xfffffffe
   14000f12e:	(bad)  
   14000f12f:	(bad)  
   14000f130:	(bad)  
   14000f131:	(bad)  
   14000f132:	(bad)  
   14000f133:	inc    ebx
   14000f135:	pop    rbp
   14000f136:	add    bh,bh
   14000f138:	ret    
   14000f139:	pop    rsp
   14000f13a:	add    bh,bh
   14000f13c:	ret    
   14000f13d:	pop    rsp
   14000f13e:	add    bh,bh
   14000f140:	pushf  
   14000f141:	push   rbp
   14000f142:	(bad)  
   14000f143:	dec    DWORD PTR [rdi+0x48]
   14000f146:	rex.XB inc DWORD PTR [r15+0x47]
   14000f14a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f14e:	rex.RXB iret 
   14000f150:	rex.RXB
   14000f151:	rex.RXB
   14000f152:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000f1c5:	add    BYTE PTR [rax],al
   14000f1c7:	add    BYTE PTR [rdi+0x47],al
   14000f1ca:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14000f1ce:	rex.RXB out dx,eax
   14000f1d0:	rex.RXB
   14000f1d1:	rex.RXB
   14000f1d2:	rex.RXB inc DWORD PTR [r11+0x64]
   14000f1d6:	jne    0x14000f1d7
   14000f1d8:	(bad)  
   14000f1d9:	mov    ah,0xf3
   14000f1db:	push   QWORD PTR [rsi]
   14000f1dd:	mov    ebx,0xbb36fffe
   14000f1e2:	(bad)  
   14000f1e3:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600f0a3
   14000f1e9:	mov    edx,0xfffffffe
   14000f1ee:	(bad)  
   14000f1ef:	(bad)  
   14000f1f0:	(bad)  
   14000f1f1:	(bad)  
   14000f1f2:	(bad)  
   14000f1f3:	inc    ebx
   14000f1f5:	pop    rbp
   14000f1f6:	add    bh,bh
   14000f1f8:	ret    
   14000f1f9:	pop    rbp
   14000f1fa:	add    bh,bh
   14000f1fc:	ret    
   14000f1fd:	pop    rsp
   14000f1fe:	add    bh,bh
   14000f200:	ret    
   14000f201:	pop    rsp
   14000f202:	add    bh,bh
   14000f204:	mov    ebx,0x5eff045a
   14000f209:	rex.WXB cmp dil,r15b
   14000f20c:	rex.RXB
   14000f20d:	rex.RXB
   14000f20e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f212:	rex.RXB out dx,eax
   14000f214:	rex.RXB
   14000f215:	rex.RXB
   14000f216:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14000f281:	add    BYTE PTR [rax],al
   14000f283:	add    BYTE PTR [rdi+0x47],al
   14000f286:	rex.RXB (bad) 
   14000f288:	rex.RXB
   14000f289:	rex.RXB
   14000f28a:	rex.RXB out dx,eax
   14000f28c:	rex.RXB
   14000f28d:	rex.RXB
   14000f28e:	rex.RXB inc DWORD PTR [r9+0x73]
   14000f292:	mov    edi,?
   14000f294:	ss mov ebx,0xbb36fffe
   14000f29a:	(bad)  
   14000f29b:	push   QWORD PTR [rsi]
   14000f29d:	mov    ebx,0xbb36fffe
   14000f2a2:	(bad)  
   14000f2a3:	push   QWORD PTR [rsi]
   14000f2a5:	mov    ebx,0xba35fffe
   14000f2aa:	(bad)  
   14000f2ab:	(bad)  
   14000f2ac:	(bad)  
   14000f2ad:	(bad)  
   14000f2ae:	(bad)  
   14000f2af:	(bad)  
   14000f2b0:	(bad)  
   14000f2b1:	(bad)  
   14000f2b2:	(bad)  
   14000f2b3:	inc    ebx
   14000f2b5:	pop    rsi
   14000f2b6:	add    bh,bh
   14000f2b8:	ret    
   14000f2b9:	pop    rbp
   14000f2ba:	add    bh,bh
   14000f2bc:	ret    
   14000f2bd:	pop    rbp
   14000f2be:	add    bh,bh
   14000f2c0:	ret    
   14000f2c1:	pop    rsp
   14000f2c2:	add    bh,bh
   14000f2c4:	ret    
   14000f2c5:	pop    rsp
   14000f2c6:	add    bh,bh
   14000f2c8:	ret    0x5b
   14000f2cb:	push   QWORD PTR [rbp+0x4f]
   14000f2ce:	sub    al,0xff
   14000f2d0:	rex.RXB
   14000f2d1:	rex.RXB
   14000f2d2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f2d6:	rex.RXB out dx,eax
   14000f2d8:	rex.RXB
   14000f2d9:	rex.RXB
   14000f2da:	rex.RXB (bad) 
	...
   14000f340:	rex.RXB
   14000f341:	rex.RXB
   14000f342:	rex.RXB (bad) 
   14000f344:	rex.RXB
   14000f345:	rex.RXB
   14000f346:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f34a:	rex.RXB (bad) 
   14000f34c:	cmp    eax,0x37ffb990
   14000f351:	mov    esp,0xbc37fffe
   14000f356:	(bad)  
   14000f357:	push   QWORD PTR [rsi]
   14000f359:	mov    ebx,0xbb36fffe
   14000f35e:	(bad)  
   14000f35f:	push   QWORD PTR [rsi]
   14000f361:	mov    ebx,0xbb36fffe
   14000f366:	(bad)  
   14000f367:	push   QWORD PTR [rsi]
   14000f369:	mov    ebx,0xfffffffe
   14000f36e:	(bad)  
   14000f36f:	(bad)  
   14000f370:	(bad)  
   14000f371:	(bad)  
   14000f372:	(bad)  
   14000f373:	inc    ebx
   14000f375:	pop    rsi
   14000f376:	add    bh,bh
   14000f378:	ret    
   14000f379:	pop    rsi
   14000f37a:	add    bh,bh
   14000f37c:	ret    
   14000f37d:	pop    rbp
   14000f37e:	add    bh,bh
   14000f380:	ret    
   14000f381:	pop    rbp
   14000f382:	add    bh,bh
   14000f384:	ret    
   14000f385:	pop    rsp
   14000f386:	add    bh,bh
   14000f388:	ret    
   14000f389:	pop    rsp
   14000f38a:	add    bh,bh
   14000f38c:	ret    0x5b
   14000f38f:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000f396:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f39a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f39e:	rex.RXB (bad) 
	...
   14000f3fc:	rex.RXB
   14000f3fd:	rex.RXB
   14000f3fe:	rex.RXB (bad) 
   14000f400:	rex.RXB
   14000f401:	rex.RXB
   14000f402:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f406:	rex.RXB (bad) 
   14000f408:	cmp    eax,0x37ffb990
   14000f40d:	mov    esp,0xbc37fffe
   14000f412:	(bad)  
   14000f413:	push   QWORD PTR [rdi]
   14000f415:	mov    esp,0xbc37fffe
   14000f41a:	(bad)  
   14000f41b:	push   QWORD PTR [rsi]
   14000f41d:	mov    ebx,0xbb36fffe
   14000f422:	(bad)  
   14000f423:	push   QWORD PTR [rsi]
   14000f425:	mov    ebx,0xbb36fffe
   14000f42a:	(bad)  
   14000f42b:	(bad)  
   14000f42c:	(bad)  
   14000f42d:	(bad)  
   14000f42e:	(bad)  
   14000f42f:	(bad)  
   14000f430:	(bad)  
   14000f431:	(bad)  
   14000f432:	(bad)  
   14000f433:	inc    esp
   14000f435:	pop    rsi
   14000f436:	add    bh,bh
   14000f438:	ret    
   14000f439:	pop    rsi
   14000f43a:	add    bh,bh
   14000f43c:	ret    
   14000f43d:	pop    rsi
   14000f43e:	add    bh,bh
   14000f440:	ret    
   14000f441:	pop    rbp
   14000f442:	add    bh,bh
   14000f444:	ret    
   14000f445:	pop    rbp
   14000f446:	add    bh,bh
   14000f448:	ret    
   14000f449:	pop    rsp
   14000f44a:	add    bh,bh
   14000f44c:	ret    
   14000f44d:	pop    rsp
   14000f44e:	add    bh,bh
   14000f450:	ret    0x5b
   14000f453:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000f45a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f45e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f462:	rex.RXB (bad) 
	...
   14000f4b8:	rex.RXB
   14000f4b9:	rex.RXB
   14000f4ba:	rex.RXB (bad) 
   14000f4bc:	rex.RXB
   14000f4bd:	rex.RXB
   14000f4be:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f4c2:	rex.RXB (bad) 
   14000f4c4:	ds xchg ecx,eax
   14000f4c6:	mov    ecx,0xfebc38ff
   14000f4cb:	push   QWORD PTR [rdi]
   14000f4cd:	mov    esp,0xbc37fffe
   14000f4d2:	(bad)  
   14000f4d3:	push   QWORD PTR [rdi]
   14000f4d5:	mov    esp,0xbc37fffe
   14000f4da:	(bad)  
   14000f4db:	push   QWORD PTR [rdi]
   14000f4dd:	mov    esp,0xbb36fffe
   14000f4e2:	(bad)  
   14000f4e3:	push   QWORD PTR [rsi]
   14000f4e5:	mov    ebx,0xbb36fffe
   14000f4ea:	(bad)  
   14000f4eb:	(bad)  
   14000f4ec:	(bad)  
   14000f4ed:	(bad)  
   14000f4ee:	(bad)  
   14000f4ef:	(bad)  
   14000f4f0:	(bad)  
   14000f4f1:	(bad)  
   14000f4f2:	(bad)  
   14000f4f3:	inc    esp
   14000f4f5:	pop    rsi
   14000f4f6:	add    bh,bh
   14000f4f8:	(bad)  
   14000f4f9:	pop    rsi
   14000f4fa:	add    bh,bh
   14000f4fc:	ret    
   14000f4fd:	pop    rsi
   14000f4fe:	add    bh,bh
   14000f500:	ret    
   14000f501:	pop    rsi
   14000f502:	add    bh,bh
   14000f504:	ret    
   14000f505:	pop    rbp
   14000f506:	add    bh,bh
   14000f508:	ret    
   14000f509:	pop    rbp
   14000f50a:	add    bh,bh
   14000f50c:	ret    
   14000f50d:	pop    rsp
   14000f50e:	add    bh,bh
   14000f510:	ret    
   14000f511:	pop    rsp
   14000f512:	add    bh,bh
   14000f514:	ret    0x5b
   14000f517:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000f51e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f522:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f526:	rex.RXB (bad) 
	...
   14000f574:	rex.RXB
   14000f575:	rex.RXB
   14000f576:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14000f57a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f57e:	rex.RXB (bad) 
   14000f580:	ds xchg ecx,eax
   14000f582:	mov    ecx,0xfebd38ff
   14000f587:	(bad)  
   14000f588:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f58e:	(bad)  
   14000f58f:	push   QWORD PTR [rdi]
   14000f591:	mov    esp,0xbc37fffe
   14000f596:	(bad)  
   14000f597:	push   QWORD PTR [rdi]
   14000f599:	mov    esp,0xbc37fffe
   14000f59e:	(bad)  
   14000f59f:	push   QWORD PTR [rdi]
   14000f5a1:	mov    esp,0xbb36fffe
   14000f5a6:	(bad)  
   14000f5a7:	push   QWORD PTR [rsi]
   14000f5a9:	mov    ebx,0xfffffffe
   14000f5ae:	(bad)  
   14000f5af:	(bad)  
   14000f5b0:	(bad)  
   14000f5b1:	(bad)  
   14000f5b2:	(bad)  
   14000f5b3:	inc    esp
   14000f5b5:	pop    rdi
   14000f5b6:	add    bh,bh
   14000f5b8:	(bad)  
   14000f5b9:	pop    rsi
   14000f5ba:	add    bh,bh
   14000f5bc:	(bad)  
   14000f5bd:	pop    rsi
   14000f5be:	add    bh,bh
   14000f5c0:	ret    
   14000f5c1:	pop    rsi
   14000f5c2:	add    bh,bh
   14000f5c4:	ret    
   14000f5c5:	pop    rsi
   14000f5c6:	add    bh,bh
   14000f5c8:	ret    
   14000f5c9:	pop    rbp
   14000f5ca:	add    bh,bh
   14000f5cc:	ret    
   14000f5cd:	pop    rbp
   14000f5ce:	add    bh,bh
   14000f5d0:	ret    
   14000f5d1:	pop    rsp
   14000f5d2:	add    bh,bh
   14000f5d4:	ret    
   14000f5d5:	pop    rsp
   14000f5d6:	add    bh,bh
   14000f5d8:	ret    0x5b
   14000f5db:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000f5e2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f5e6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f5ea:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14000f62d:	add    BYTE PTR [rax],al
   14000f62f:	add    BYTE PTR [rdi+0x47],al
   14000f632:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000f636:	rex.RXB out dx,eax
   14000f638:	rex.RXB
   14000f639:	rex.RXB
   14000f63a:	rex.RXB (bad) 
   14000f63c:	ds xchg ecx,eax
   14000f63e:	mov    ecx,0xfebd39ff
   14000f643:	(bad)  
   14000f644:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f64a:	(bad)  
   14000f64b:	(bad)  
   14000f64c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f652:	(bad)  
   14000f653:	push   QWORD PTR [rdi]
   14000f655:	mov    esp,0xbc37fffe
   14000f65a:	(bad)  
   14000f65b:	push   QWORD PTR [rdi]
   14000f65d:	mov    esp,0xbc37fffe
   14000f662:	(bad)  
   14000f663:	push   QWORD PTR [rdi]
   14000f665:	mov    esp,0xbb36fffe
   14000f66a:	(bad)  
   14000f66b:	(bad)  
   14000f66c:	(bad)  
   14000f66d:	(bad)  
   14000f66e:	(bad)  
   14000f66f:	(bad)  
   14000f670:	(bad)  
   14000f671:	(bad)  
   14000f672:	(bad)  
   14000f673:	inc    esp
   14000f675:	pop    rdi
   14000f676:	add    bh,bh
   14000f678:	(bad)  
   14000f679:	pop    rdi
   14000f67a:	add    bh,bh
   14000f67c:	(bad)  
   14000f67d:	pop    rsi
   14000f67e:	add    bh,bh
   14000f680:	(bad)  
   14000f681:	pop    rsi
   14000f682:	add    bh,bh
   14000f684:	ret    
   14000f685:	pop    rsi
   14000f686:	add    bh,bh
   14000f688:	ret    
   14000f689:	pop    rsi
   14000f68a:	add    bh,bh
   14000f68c:	ret    
   14000f68d:	pop    rbp
   14000f68e:	add    bh,bh
   14000f690:	ret    
   14000f691:	pop    rbp
   14000f692:	add    bh,bh
   14000f694:	ret    
   14000f695:	pop    rsp
   14000f696:	add    bh,bh
   14000f698:	ret    
   14000f699:	pop    rsp
   14000f69a:	add    bh,bh
   14000f69c:	ret    0x5b
   14000f69f:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000f6a6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f6aa:	rex.RXB out dx,eax
   14000f6ac:	rex.RXB
   14000f6ad:	rex.RXB
   14000f6ae:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000f6ed:	add    BYTE PTR [rax],al
   14000f6ef:	add    BYTE PTR [rdi+0x47],al
   14000f6f2:	rex.RXB iret 
   14000f6f4:	rex.RXB
   14000f6f5:	rex.RXB
   14000f6f6:	rex.RXB inc DWORD PTR [r9+0x7b]
   14000f6fa:	xchg   edi,eax
   14000f6fb:	(bad)  
   14000f6fc:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f702:	(bad)  
   14000f703:	(bad)  
   14000f704:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f70a:	(bad)  
   14000f70b:	(bad)  
   14000f70c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f712:	(bad)  
   14000f713:	(bad)  
   14000f714:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f71b:	push   QWORD PTR [rdi]
   14000f71d:	mov    esp,0xbc37fffe
   14000f722:	(bad)  
   14000f723:	push   QWORD PTR [rdi]
   14000f725:	mov    esp,0xbc37fffe
   14000f72a:	(bad)  
   14000f72b:	(bad)  
   14000f72c:	(bad)  
   14000f72d:	(bad)  
   14000f72e:	(bad)  
   14000f72f:	(bad)  
   14000f730:	(bad)  
   14000f731:	(bad)  
   14000f732:	(bad)  
   14000f733:	inc    esp
   14000f735:	(bad)  
   14000f736:	add    bh,bh
   14000f738:	(bad)  
   14000f739:	pop    rdi
   14000f73a:	add    bh,bh
   14000f73c:	(bad)  
   14000f73d:	pop    rdi
   14000f73e:	add    bh,bh
   14000f740:	(bad)  
   14000f741:	pop    rsi
   14000f742:	add    bh,bh
   14000f744:	(bad)  
   14000f745:	pop    rsi
   14000f746:	add    bh,bh
   14000f748:	ret    
   14000f749:	pop    rsi
   14000f74a:	add    bh,bh
   14000f74c:	ret    
   14000f74d:	pop    rsi
   14000f74e:	add    bh,bh
   14000f750:	ret    
   14000f751:	pop    rbp
   14000f752:	add    bh,bh
   14000f754:	ret    
   14000f755:	pop    rbp
   14000f756:	add    bh,bh
   14000f758:	ret    
   14000f759:	pop    rsp
   14000f75a:	add    bh,bh
   14000f75c:	ret    
   14000f75d:	pop    rsp
   14000f75e:	add    bh,bh
   14000f760:	ret    0x5b
   14000f763:	(bad)  
   14000f764:	jge    0x14000f7b6
   14000f766:	sub    bh,bh
   14000f768:	rex.RXB
   14000f769:	rex.RXB
   14000f76a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f76e:	rex.RXB iret 
	...
   14000f7ac:	rex.RXB
   14000f7ad:	rex.RXB
   14000f7ae:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000f7b3:	inc    DWORD PTR [rbp+riz*2+0x75]
   14000f7b7:	(bad)  
   14000f7b8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f7be:	(bad)  
   14000f7bf:	(bad)  
   14000f7c0:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f7c6:	(bad)  
   14000f7c7:	(bad)  
   14000f7c8:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f7ce:	(bad)  
   14000f7cf:	(bad)  
   14000f7d0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f7d6:	(bad)  
   14000f7d7:	(bad)  
   14000f7d8:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f7df:	push   QWORD PTR [rdi]
   14000f7e1:	mov    esp,0xbc37fffe
   14000f7e6:	(bad)  
   14000f7e7:	push   QWORD PTR [rdi]
   14000f7e9:	mov    esp,0xfffffffe
   14000f7ee:	(bad)  
   14000f7ef:	(bad)  
   14000f7f0:	(bad)  
   14000f7f1:	(bad)  
   14000f7f2:	(bad)  
   14000f7f3:	inc    esp
   14000f7f5:	(bad)  
   14000f7f6:	add    bh,bh
   14000f7f8:	(bad)  
   14000f7f9:	(bad)  
   14000f7fa:	add    bh,bh
   14000f7fc:	(bad)  
   14000f7fd:	pop    rdi
   14000f7fe:	add    bh,bh
   14000f800:	(bad)  
   14000f801:	pop    rdi
   14000f802:	add    bh,bh
   14000f804:	(bad)  
   14000f805:	pop    rsi
   14000f806:	add    bh,bh
   14000f808:	(bad)  
   14000f809:	pop    rsi
   14000f80a:	add    bh,bh
   14000f80c:	ret    
   14000f80d:	pop    rsi
   14000f80e:	add    bh,bh
   14000f810:	ret    
   14000f811:	pop    rsi
   14000f812:	add    bh,bh
   14000f814:	ret    
   14000f815:	pop    rbp
   14000f816:	add    bh,bh
   14000f818:	ret    
   14000f819:	pop    rbp
   14000f81a:	add    bh,bh
   14000f81c:	ret    
   14000f81d:	pop    rsp
   14000f81e:	add    bh,bh
   14000f820:	ret    
   14000f821:	pop    rsp
   14000f822:	add    bh,bh
   14000f824:	ret    0x5b
   14000f827:	jmp    QWORD PTR [rsi+0x4c]
   14000f82a:	xor    eax,0x474747ff
   14000f82f:	inc    DWORD PTR [rdi+0x47]
   14000f832:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000f866:	add    BYTE PTR [rax],al
   14000f868:	rex.RXB
   14000f869:	rex.RXB
   14000f86a:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14000f86e:	rex.RXB inc DWORD PTR [r14+0x4f]
   14000f872:	push   rdx
   14000f873:	(bad)  
   14000f874:	cmp    al,0xb0
   14000f876:	out    0xff,eax
   14000f878:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000f87e:	(bad)  
   14000f87f:	(bad)  
   14000f880:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f886:	(bad)  
   14000f887:	(bad)  
   14000f888:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000f88e:	(bad)  
   14000f88f:	(bad)  
   14000f890:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f896:	(bad)  
   14000f897:	(bad)  
   14000f898:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f89e:	(bad)  
   14000f89f:	push   QWORD PTR [rdi]
   14000f8a1:	mov    esp,0xbc37fffe
   14000f8a6:	(bad)  
   14000f8a7:	push   QWORD PTR [rdi]
   14000f8a9:	mov    esp,0xfffffffe
   14000f8ae:	(bad)  
   14000f8af:	(bad)  
   14000f8b0:	(bad)  
   14000f8b1:	(bad)  
   14000f8b2:	(bad)  
   14000f8b3:	inc    ebp
   14000f8b5:	(bad)  
   14000f8b6:	add    bh,bh
   14000f8b8:	(bad)  
   14000f8b9:	(bad)  
   14000f8ba:	add    bh,bh
   14000f8bc:	(bad)  
   14000f8bd:	(bad)  
   14000f8be:	add    bh,bh
   14000f8c0:	(bad)  
   14000f8c1:	pop    rdi
   14000f8c2:	add    bh,bh
   14000f8c4:	(bad)  
   14000f8c5:	pop    rdi
   14000f8c6:	add    bh,bh
   14000f8c8:	(bad)  
   14000f8c9:	pop    rsi
   14000f8ca:	add    bh,bh
   14000f8cc:	(bad)  
   14000f8cd:	pop    rsi
   14000f8ce:	add    bh,bh
   14000f8d0:	ret    
   14000f8d1:	pop    rsi
   14000f8d2:	add    bh,bh
   14000f8d4:	ret    
   14000f8d5:	pop    rsi
   14000f8d6:	add    bh,bh
   14000f8d8:	ret    
   14000f8d9:	pop    rbp
   14000f8da:	add    bh,bh
   14000f8dc:	ret    
   14000f8dd:	pop    rbp
   14000f8de:	add    bh,bh
   14000f8e0:	ret    
   14000f8e1:	pop    rsp
   14000f8e2:	add    bh,bh
   14000f8e4:	ret    
   14000f8e5:	pop    rsp
   14000f8e6:	add    bh,bh
   14000f8e8:	mov    bl,0x59
   14000f8ea:	or     edi,edi
   14000f8ec:	rex.WRXB
   14000f8ed:	rex.W
   14000f8ee:	rex.XB inc DWORD PTR [r15+0x47]
   14000f8f2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f8f6:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14000f925:	add    BYTE PTR [rax],al
   14000f927:	add    BYTE PTR [rdi+0x47],al
   14000f92a:	rex.RXB mov r15d,0xff474747
   14000f930:	rex mov ebp,DWORD PTR [rsi-0x140c501]
   14000f937:	(bad)  
   14000f938:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000f93e:	(bad)  
   14000f93f:	(bad)  
   14000f940:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f946:	(bad)  
   14000f947:	(bad)  
   14000f948:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f94e:	(bad)  
   14000f94f:	(bad)  
   14000f950:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f956:	(bad)  
   14000f957:	(bad)  
   14000f958:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f95e:	(bad)  
   14000f95f:	(bad)  
   14000f960:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f967:	push   QWORD PTR [rdi]
   14000f969:	mov    esp,0xfffffffe
   14000f96e:	(bad)  
   14000f96f:	(bad)  
   14000f970:	(bad)  
   14000f971:	(bad)  
   14000f972:	(bad)  
   14000f973:	inc    ebp
   14000f975:	(bad)  
   14000f976:	add    bh,bh
   14000f978:	(bad)
   14000f97b:	inc    esp
   14000f97d:	(bad)  
   14000f97e:	add    bh,bh
   14000f980:	(bad)  
   14000f981:	(bad)  
   14000f982:	add    bh,bh
   14000f984:	(bad)  
   14000f985:	pop    rdi
   14000f986:	add    bh,bh
   14000f988:	(bad)  
   14000f989:	pop    rdi
   14000f98a:	add    bh,bh
   14000f98c:	(bad)  
   14000f98d:	pop    rsi
   14000f98e:	add    bh,bh
   14000f990:	(bad)  
   14000f991:	pop    rsi
   14000f992:	add    bh,bh
   14000f994:	ret    
   14000f995:	pop    rsi
   14000f996:	add    bh,bh
   14000f998:	ret    
   14000f999:	pop    rsi
   14000f99a:	add    bh,bh
   14000f99c:	ret    
   14000f99d:	pop    rbp
   14000f99e:	add    bh,bh
   14000f9a0:	ret    
   14000f9a1:	pop    rbp
   14000f9a2:	add    bh,bh
   14000f9a4:	ret    
   14000f9a5:	pop    rsp
   14000f9a6:	add    bh,bh
   14000f9a8:	ret    
   14000f9a9:	pop    rsp
   14000f9aa:	add    bh,bh
   14000f9ac:	lea    edx,[rbx+0x1f]
   14000f9af:	inc    DWORD PTR [rdi+0x47]
   14000f9b2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f9b6:	rex.RXB mov r15d,0x0
	...
   14000f9e4:	rex.RXB
   14000f9e5:	rex.RXB
   14000f9e6:	rex.RXB push r8
   14000f9e8:	rex.RXB
   14000f9e9:	rex.RXB
   14000f9ea:	rex.RXB inc DWORD PTR [r13+r12*2+0x75]
   14000f9ef:	(bad)  
   14000f9f0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f9f6:	(bad)  
   14000f9f7:	(bad)  
   14000f9f8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f9fe:	(bad)  
   14000f9ff:	(bad)  
   14000fa00:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000fa06:	(bad)  
   14000fa07:	(bad)  
   14000fa08:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000fa0e:	(bad)  
   14000fa0f:	(bad)  
   14000fa10:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000fa16:	(bad)  
   14000fa17:	(bad)  
   14000fa18:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000fa1e:	(bad)  
   14000fa1f:	(bad)  
   14000fa20:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000fa26:	(bad)  
   14000fa27:	push   QWORD PTR [rdi]
   14000fa29:	mov    esp,0xfffffffe
   14000fa2e:	(bad)  
   14000fa2f:	(bad)  
   14000fa30:	(bad)  
   14000fa31:	(bad)  
   14000fa32:	(bad)  
   14000fa33:	inc    ebp
   14000fa35:	(bad)  
   14000fa36:	add    bh,bh
   14000fa38:	(bad)
   14000fa3b:	inc    ebp
   14000fa3d:	(bad)  
   14000fa3e:	add    bh,bh
   14000fa40:	(bad)  
   14000fa41:	(bad)  
   14000fa42:	add    bh,bh
   14000fa44:	(bad)  
   14000fa45:	(bad)  
   14000fa46:	add    bh,bh
   14000fa48:	(bad)  
   14000fa49:	pop    rdi
   14000fa4a:	add    bh,bh
   14000fa4c:	(bad)  
   14000fa4d:	pop    rdi
   14000fa4e:	add    bh,bh
   14000fa50:	(bad)  
   14000fa51:	pop    rsi
   14000fa52:	add    bh,bh
   14000fa54:	(bad)  
   14000fa55:	pop    rsi
   14000fa56:	add    bh,bh
   14000fa58:	ret    
   14000fa59:	pop    rsi
   14000fa5a:	add    bh,bh
   14000fa5c:	ret    
   14000fa5d:	pop    rsi
   14000fa5e:	add    bh,bh
   14000fa60:	ret    
   14000fa61:	pop    rbp
   14000fa62:	add    bh,bh
   14000fa64:	ret    
   14000fa65:	pop    rbp
   14000fa66:	add    bh,bh
   14000fa68:	ret    
   14000fa69:	pop    rsp
   14000fa6a:	add    bh,bh
   14000fa6c:	ret    
   14000fa6d:	pop    rsp
   14000fa6e:	add    bh,bh
   14000fa70:	data16 rex.WR xor rax,0x474747ff
   14000fa77:	inc    DWORD PTR [rdi+0x47]
   14000fa7a:	rex.RXB push r8
	...
   14000faa4:	rex.RXB
   14000faa5:	rex.RXB
   14000faa6:	rex.RXB iret 
   14000faa8:	rex.RXB
   14000faa9:	rex.RXB
   14000faaa:	rex.RXB (bad) 
   14000faac:	movabs ds:0xbf3afffebf3bffd0,al
   14000fab6:	(bad)  
   14000fab7:	(bad)  
   14000fab8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000fabe:	(bad)  
   14000fabf:	(bad)  
   14000fac0:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000fac6:	(bad)  
   14000fac7:	(bad)  
   14000fac8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000face:	(bad)  
   14000facf:	(bad)  
   14000fad0:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000fad6:	(bad)  
   14000fad7:	(bad)  
   14000fad8:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000fade:	(bad)  
   14000fadf:	(bad)  
   14000fae0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000fae6:	(bad)  
   14000fae7:	(bad)  
   14000fae8:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   14000faef:	(bad)  
   14000faf0:	(bad)  
   14000faf1:	(bad)  
   14000faf2:	(bad)  
   14000faf3:	inc    ebp
   14000faf5:	(bad)  
   14000faf6:	add    bh,bh
   14000faf8:	(bad)
   14000fafb:	inc    ebp
   14000fafd:	(bad)  
   14000fafe:	add    bh,bh
   14000fb00:	(bad)
   14000fb03:	inc    esp
   14000fb05:	(bad)  
   14000fb06:	add    bh,bh
   14000fb08:	(bad)  
   14000fb09:	(bad)  
   14000fb0a:	add    bh,bh
   14000fb0c:	(bad)  
   14000fb0d:	pop    rdi
   14000fb0e:	add    bh,bh
   14000fb10:	(bad)  
   14000fb11:	pop    rdi
   14000fb12:	add    bh,bh
   14000fb14:	(bad)  
   14000fb15:	pop    rsi
   14000fb16:	add    bh,bh
   14000fb18:	(bad)  
   14000fb19:	pop    rsi
   14000fb1a:	add    bh,bh
   14000fb1c:	ret    
   14000fb1d:	pop    rsi
   14000fb1e:	add    bh,bh
   14000fb20:	ret    
   14000fb21:	pop    rsi
   14000fb22:	add    bh,bh
   14000fb24:	ret    
   14000fb25:	pop    rbp
   14000fb26:	add    bh,bh
   14000fb28:	ret    
   14000fb29:	pop    rbp
   14000fb2a:	add    bh,bh
   14000fb2c:	ret    
   14000fb2d:	pop    rsp
   14000fb2e:	add    bh,bh
   14000fb30:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fb31:	push   rdi
   14000fb32:	adc    bh,bh
   14000fb34:	rex.RXB
   14000fb35:	rex.RXB
   14000fb36:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fb3a:	rex.RXB iret 
	...
   14000fb60:	rex.RXB
   14000fb61:	rex.RXB
   14000fb62:	rex.RXB
   14000fb63:	rex
   14000fb64:	rex.RXB
   14000fb65:	rex.RXB
   14000fb66:	rex.RXB inc DWORD PTR [r13+r12*2+0x75]
   14000fb6b:	(bad)  
   14000fb6c:	cmp    eax,eax
   14000fb6e:	(bad)  
   14000fb6f:	(bad)  
   14000fb70:	cmp    eax,eax
   14000fb72:	(bad)  
   14000fb73:	(bad)  
   14000fb74:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000fb7a:	(bad)  
   14000fb7b:	(bad)  
   14000fb7c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000fb82:	(bad)  
   14000fb83:	(bad)  
   14000fb84:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000fb8a:	(bad)  
   14000fb8b:	(bad)  
   14000fb8c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000fb92:	(bad)  
   14000fb93:	(bad)  
   14000fb94:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000fb9a:	(bad)  
   14000fb9b:	(bad)  
   14000fb9c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000fba2:	(bad)  
   14000fba3:	(bad)  
   14000fba4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000fbaa:	(bad)  
   14000fbab:	(bad)  
   14000fbac:	(bad)  
   14000fbad:	(bad)  
   14000fbae:	(bad)  
   14000fbaf:	(bad)  
   14000fbb0:	(bad)  
   14000fbb1:	(bad)  
   14000fbb2:	(bad)  
   14000fbb3:	inc    ebp
   14000fbb5:	(bad)  
   14000fbb6:	add    bh,bh
   14000fbb8:	(bad)
   14000fbbb:	inc    ebp
   14000fbbd:	(bad)  
   14000fbbe:	add    bh,bh
   14000fbc0:	(bad)
   14000fbc3:	inc    ebp
   14000fbc5:	(bad)  
   14000fbc6:	add    bh,bh
   14000fbc8:	(bad)  
   14000fbc9:	(bad)  
   14000fbca:	add    bh,bh
   14000fbcc:	(bad)  
   14000fbcd:	(bad)  
   14000fbce:	add    bh,bh
   14000fbd0:	(bad)  
   14000fbd1:	pop    rdi
   14000fbd2:	add    bh,bh
   14000fbd4:	(bad)  
   14000fbd5:	pop    rdi
   14000fbd6:	add    bh,bh
   14000fbd8:	(bad)  
   14000fbd9:	pop    rsi
   14000fbda:	add    bh,bh
   14000fbdc:	(bad)  
   14000fbdd:	pop    rsi
   14000fbde:	add    bh,bh
   14000fbe0:	ret    
   14000fbe1:	pop    rsi
   14000fbe2:	add    bh,bh
   14000fbe4:	ret    
   14000fbe5:	pop    rsi
   14000fbe6:	add    bh,bh
   14000fbe8:	ret    
   14000fbe9:	pop    rbp
   14000fbea:	add    bh,bh
   14000fbec:	ret    
   14000fbed:	pop    rbp
   14000fbee:	add    bh,bh
   14000fbf0:	ret    
   14000fbf1:	pop    rsp
   14000fbf2:	add    bh,bh
   14000fbf4:	data16 rex.WR xor rax,0x474747ff
   14000fbfb:	inc    DWORD PTR [rdi+0x47]
   14000fbfe:	rex.RXB
   14000fbff:	add    BYTE PTR [rax],al
	...
   14000fc1e:	add    BYTE PTR [rax],al
   14000fc20:	rex.RXB
   14000fc21:	rex.RXB
   14000fc22:	rex.RXB lahf 
   14000fc24:	rex.RXB
   14000fc25:	rex.RXB
   14000fc26:	rex.RXB inc DWORD PTR [r8-0x6d]
   14000fc2a:	mov    ecx,0xfec03bff
   14000fc2f:	(bad)  
   14000fc30:	cmp    eax,eax
   14000fc32:	(bad)  
   14000fc33:	(bad)  
   14000fc34:	cmp    eax,eax
   14000fc36:	(bad)  
   14000fc37:	(bad)  
   14000fc38:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000fc3e:	(bad)  
   14000fc3f:	(bad)  
   14000fc40:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000fc46:	(bad)  
   14000fc47:	(bad)  
   14000fc48:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000fc4e:	(bad)  
   14000fc4f:	(bad)  
   14000fc50:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000fc56:	(bad)  
   14000fc57:	(bad)  
   14000fc58:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000fc5e:	(bad)  
   14000fc5f:	(bad)  
   14000fc60:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000fc66:	(bad)  
   14000fc67:	(bad)  
   14000fc68:	cmp    BYTE PTR [rbp-0x2],bh
   14000fc6e:	(bad)  
   14000fc6f:	(bad)  
   14000fc70:	(bad)  
   14000fc71:	(bad)  
   14000fc72:	(bad)  
   14000fc73:	inc    ebp
   14000fc75:	(bad)  
   14000fc76:	add    bh,bh
   14000fc78:	(bad)
   14000fc7b:	inc    ebp
   14000fc7d:	(bad)  
   14000fc7e:	add    bh,bh
   14000fc80:	(bad)
   14000fc83:	inc    ebp
   14000fc85:	(bad)  
   14000fc86:	add    bh,bh
   14000fc88:	(bad)
   14000fc8b:	inc    esp
   14000fc8d:	(bad)  
   14000fc8e:	add    bh,bh
   14000fc90:	(bad)  
   14000fc91:	(bad)  
   14000fc92:	add    bh,bh
   14000fc94:	(bad)  
   14000fc95:	pop    rdi
   14000fc96:	add    bh,bh
   14000fc98:	(bad)  
   14000fc99:	pop    rdi
   14000fc9a:	add    bh,bh
   14000fc9c:	(bad)  
   14000fc9d:	pop    rsi
   14000fc9e:	add    bh,bh
   14000fca0:	(bad)  
   14000fca1:	pop    rsi
   14000fca2:	add    bh,bh
   14000fca4:	ret    
   14000fca5:	pop    rsi
   14000fca6:	add    bh,bh
   14000fca8:	ret    
   14000fca9:	pop    rsi
   14000fcaa:	add    bh,bh
   14000fcac:	ret    
   14000fcad:	pop    rbp
   14000fcae:	add    bh,bh
   14000fcb0:	ret    
   14000fcb1:	pop    rbp
   14000fcb2:	add    bh,bh
   14000fcb4:	xchg   ebp,eax
   14000fcb5:	push   rsp
   14000fcb6:	sbb    edi,edi
   14000fcb8:	rex.RXB
   14000fcb9:	rex.RXB
   14000fcba:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fcbe:	rex.RXB lahf 
	...
   14000fce0:	rex.RXB
   14000fce1:	rex.RXB
   14000fce2:	rex.RXB out dx,eax
   14000fce4:	rex.RX
   14000fce5:	rex.WRXB push r10
   14000fce7:	(bad)  
   14000fce8:	cmp    al,0xc0
   14000fcea:	(bad)  
   14000fceb:	(bad)  
   14000fcec:	cmp    eax,eax
   14000fcee:	(bad)  
   14000fcef:	(bad)  
   14000fcf0:	cmp    eax,eax
   14000fcf2:	(bad)  
   14000fcf3:	(bad)  
   14000fcf4:	cmp    eax,eax
   14000fcf6:	(bad)  
   14000fcf7:	(bad)  
   14000fcf8:	cmp    eax,eax
   14000fcfa:	(bad)  
   14000fcfb:	(bad)  
   14000fcfc:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000fd02:	(bad)  
   14000fd03:	(bad)  
   14000fd04:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000fd0a:	(bad)  
   14000fd0b:	(bad)  
   14000fd0c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000fd12:	(bad)  
   14000fd13:	(bad)  
   14000fd14:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000fd1a:	(bad)  
   14000fd1b:	(bad)  
   14000fd1c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000fd22:	(bad)  
   14000fd23:	(bad)  
   14000fd24:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000fd2a:	(bad)  
   14000fd2b:	(bad)  
   14000fd2c:	(bad)  
   14000fd2d:	(bad)  
   14000fd2e:	(bad)  
   14000fd2f:	(bad)  
   14000fd30:	(bad)  
   14000fd31:	(bad)  
   14000fd32:	(bad)  
   14000fd33:	inc    esi
   14000fd35:	(bad)  
   14000fd36:	add    bh,bh
   14000fd38:	(bad)
   14000fd3b:	inc    ebp
   14000fd3d:	(bad)  
   14000fd3e:	add    bh,bh
   14000fd40:	(bad)
   14000fd43:	inc    ebp
   14000fd45:	(bad)  
   14000fd46:	add    bh,bh
   14000fd48:	(bad)
   14000fd4b:	inc    ebp
   14000fd4d:	(bad)  
   14000fd4e:	add    bh,bh
   14000fd50:	(bad)  
   14000fd51:	(bad)  
   14000fd52:	add    bh,bh
   14000fd54:	(bad)  
   14000fd55:	(bad)  
   14000fd56:	add    bh,bh
   14000fd58:	(bad)  
   14000fd59:	pop    rdi
   14000fd5a:	add    bh,bh
   14000fd5c:	(bad)  
   14000fd5d:	pop    rdi
   14000fd5e:	add    bh,bh
   14000fd60:	(bad)  
   14000fd61:	pop    rsi
   14000fd62:	add    bh,bh
   14000fd64:	(bad)  
   14000fd65:	pop    rsi
   14000fd66:	add    bh,bh
   14000fd68:	ret    
   14000fd69:	pop    rsi
   14000fd6a:	add    bh,bh
   14000fd6c:	ret    
   14000fd6d:	pop    rsi
   14000fd6e:	add    bh,bh
   14000fd70:	ret    
   14000fd71:	pop    rbp
   14000fd72:	add    bh,bh
   14000fd74:	ret    
   14000fd75:	pop    rbp
   14000fd76:	add    bh,bh
   14000fd78:	rex.WRXB
   14000fd79:	rex.W
   14000fd7a:	rex.XB inc DWORD PTR [r15+0x47]
   14000fd7e:	rex.RXB out dx,eax
	...
   14000fd9c:	rex.RXB
   14000fd9d:	rex.RXB
   14000fd9e:	rex.RXB push r8
   14000fda0:	rex.RXB
   14000fda1:	rex.RXB
   14000fda2:	rex.RXB dec DWORD PTR [r12+r9*4-0x74]
   14000fdaa:	(bad)  
   14000fdab:	(bad)  
   14000fdac:	(bad)  
   14000fdad:	(bad)  
   14000fdae:	(bad)  
   14000fdaf:	(bad)  
   14000fdb0:	(bad)  
   14000fdb1:	(bad)  
   14000fdb2:	(bad)  
   14000fdb3:	(bad)  
   14000fdb4:	(bad)  
   14000fdb5:	(bad)  
   14000fdb6:	(bad)  
   14000fdb7:	(bad)  
   14000fdb8:	(bad)  
   14000fdb9:	(bad)  
   14000fdba:	(bad)  
   14000fdbb:	(bad)  
   14000fdbc:	(bad)  
   14000fdbd:	(bad)  
   14000fdbe:	(bad)  
   14000fdbf:	(bad)  
   14000fdc0:	(bad)  
   14000fdc1:	(bad)  
   14000fdc2:	(bad)  
   14000fdc3:	(bad)  
   14000fdc4:	(bad)  
   14000fdc5:	(bad)  
   14000fdc6:	(bad)  
   14000fdc7:	(bad)  
   14000fdc8:	(bad)  
   14000fdc9:	(bad)  
   14000fdca:	(bad)  
   14000fdcb:	(bad)  
   14000fdcc:	(bad)  
   14000fdcd:	(bad)  
   14000fdce:	(bad)  
   14000fdcf:	(bad)  
   14000fdd0:	(bad)  
   14000fdd1:	(bad)  
   14000fdd2:	(bad)  
   14000fdd3:	(bad)  
   14000fdd4:	(bad)  
   14000fdd5:	(bad)  
   14000fdd6:	(bad)  
   14000fdd7:	(bad)  
   14000fdd8:	(bad)  
   14000fdd9:	(bad)  
   14000fdda:	(bad)  
   14000fddb:	(bad)  
   14000fddc:	(bad)  
   14000fddd:	(bad)  
   14000fdde:	(bad)  
   14000fddf:	(bad)  
   14000fde0:	(bad)  
   14000fde1:	(bad)  
   14000fde2:	(bad)  
   14000fde3:	(bad)  
   14000fde4:	(bad)  
   14000fde5:	(bad)  
   14000fde6:	(bad)  
   14000fde7:	(bad)  
   14000fde8:	(bad)  
   14000fde9:	(bad)  
   14000fdea:	(bad)  
   14000fdeb:	(bad)  
   14000fdec:	(bad)  
   14000fded:	(bad)  
   14000fdee:	(bad)  
   14000fdef:	(bad)  
   14000fdf0:	(bad)  
   14000fdf1:	(bad)  
   14000fdf2:	(bad)  
   14000fdf3:	(bad)  
   14000fdf4:	(bad)  
   14000fdf5:	(bad)  
   14000fdf6:	(bad)  
   14000fdf7:	(bad)  
   14000fdf8:	(bad)  
   14000fdf9:	(bad)  
   14000fdfa:	(bad)  
   14000fdfb:	(bad)  
   14000fdfc:	(bad)  
   14000fdfd:	(bad)  
   14000fdfe:	(bad)  
   14000fdff:	(bad)  
   14000fe00:	(bad)  
   14000fe01:	(bad)  
   14000fe02:	(bad)  
   14000fe03:	(bad)  
   14000fe04:	(bad)  
   14000fe05:	(bad)  
   14000fe06:	(bad)  
   14000fe07:	(bad)  
   14000fe08:	(bad)  
   14000fe09:	(bad)  
   14000fe0a:	(bad)  
   14000fe0b:	(bad)  
   14000fe0c:	(bad)  
   14000fe0d:	(bad)  
   14000fe0e:	(bad)  
   14000fe0f:	(bad)  
   14000fe10:	(bad)  
   14000fe11:	(bad)  
   14000fe12:	(bad)  
   14000fe13:	(bad)  
   14000fe14:	(bad)  
   14000fe15:	(bad)  
   14000fe16:	(bad)  
   14000fe17:	(bad)  
   14000fe18:	(bad)  
   14000fe19:	(bad)  
   14000fe1a:	(bad)  
   14000fe1b:	(bad)  
   14000fe1c:	(bad)  
   14000fe1d:	(bad)  
   14000fe1e:	(bad)  
   14000fe1f:	(bad)  
   14000fe20:	(bad)  
   14000fe21:	(bad)  
   14000fe22:	(bad)  
   14000fe23:	(bad)  
   14000fe24:	(bad)  
   14000fe25:	(bad)  
   14000fe26:	(bad)  
   14000fe27:	(bad)  
   14000fe28:	(bad)  
   14000fe29:	(bad)  
   14000fe2a:	(bad)  
   14000fe2b:	(bad)  
   14000fe2c:	(bad)  
   14000fe2d:	(bad)  
   14000fe2e:	(bad)  
   14000fe2f:	(bad)  
   14000fe30:	(bad)  
   14000fe31:	(bad)  
   14000fe32:	(bad)  
   14000fe33:	(bad)  
   14000fe34:	(bad)  
   14000fe35:	(bad)  
   14000fe36:	(bad)  
   14000fe37:	dec    DWORD PTR [rsp+rcx*4+0x4747ff8c]
   14000fe3e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fe42:	rex.RXB push r8
	...
   14000fe5c:	rex.RXB
   14000fe5d:	rex.RXB
   14000fe5e:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000fe63:	inc    esi
   14000fe65:	mov    dh,0xff
   14000fe68:	(bad)  
   14000fe69:	(bad)  
   14000fe6a:	(bad)  
   14000fe6b:	(bad)  
   14000fe6c:	(bad)  
   14000fe6d:	(bad)  
   14000fe6e:	(bad)  
   14000fe6f:	(bad)  
   14000fe70:	(bad)  
   14000fe71:	(bad)  
   14000fe72:	(bad)  
   14000fe73:	(bad)  
   14000fe74:	(bad)  
   14000fe75:	(bad)  
   14000fe76:	(bad)  
   14000fe77:	(bad)  
   14000fe78:	(bad)  
   14000fe79:	(bad)  
   14000fe7a:	(bad)  
   14000fe7b:	(bad)  
   14000fe7c:	(bad)  
   14000fe7d:	(bad)  
   14000fe7e:	(bad)  
   14000fe7f:	(bad)  
   14000fe80:	(bad)  
   14000fe81:	(bad)  
   14000fe82:	(bad)  
   14000fe83:	(bad)  
   14000fe84:	(bad)  
   14000fe85:	(bad)  
   14000fe86:	(bad)  
   14000fe87:	(bad)  
   14000fe88:	(bad)  
   14000fe89:	(bad)  
   14000fe8a:	(bad)  
   14000fe8b:	(bad)  
   14000fe8c:	(bad)  
   14000fe8d:	(bad)  
   14000fe8e:	(bad)  
   14000fe8f:	(bad)  
   14000fe90:	(bad)  
   14000fe91:	(bad)  
   14000fe92:	(bad)  
   14000fe93:	(bad)  
   14000fe94:	(bad)  
   14000fe95:	(bad)  
   14000fe96:	(bad)  
   14000fe97:	(bad)  
   14000fe98:	(bad)  
   14000fe99:	(bad)  
   14000fe9a:	(bad)  
   14000fe9b:	(bad)  
   14000fe9c:	(bad)  
   14000fe9d:	(bad)  
   14000fe9e:	(bad)  
   14000fe9f:	(bad)  
   14000fea0:	(bad)  
   14000fea1:	(bad)  
   14000fea2:	(bad)  
   14000fea3:	(bad)  
   14000fea4:	(bad)  
   14000fea5:	(bad)  
   14000fea6:	(bad)  
   14000fea7:	(bad)  
   14000fea8:	(bad)  
   14000fea9:	(bad)  
   14000feaa:	(bad)  
   14000feab:	(bad)  
   14000feac:	(bad)  
   14000fead:	(bad)  
   14000feae:	(bad)  
   14000feaf:	(bad)  
   14000feb0:	(bad)  
   14000feb1:	(bad)  
   14000feb2:	(bad)  
   14000feb3:	(bad)  
   14000feb4:	(bad)  
   14000feb5:	(bad)  
   14000feb6:	(bad)  
   14000feb7:	(bad)  
   14000feb8:	(bad)  
   14000feb9:	(bad)  
   14000feba:	(bad)  
   14000febb:	(bad)  
   14000febc:	(bad)  
   14000febd:	(bad)  
   14000febe:	(bad)  
   14000febf:	(bad)  
   14000fec0:	(bad)  
   14000fec1:	(bad)  
   14000fec2:	(bad)  
   14000fec3:	(bad)  
   14000fec4:	(bad)  
   14000fec5:	(bad)  
   14000fec6:	(bad)  
   14000fec7:	(bad)  
   14000fec8:	(bad)  
   14000fec9:	(bad)  
   14000feca:	(bad)  
   14000fecb:	(bad)  
   14000fecc:	(bad)  
   14000fecd:	(bad)  
   14000fece:	(bad)  
   14000fecf:	(bad)  
   14000fed0:	(bad)  
   14000fed1:	(bad)  
   14000fed2:	(bad)  
   14000fed3:	(bad)  
   14000fed4:	(bad)  
   14000fed5:	(bad)  
   14000fed6:	(bad)  
   14000fed7:	(bad)  
   14000fed8:	(bad)  
   14000fed9:	(bad)  
   14000feda:	(bad)  
   14000fedb:	(bad)  
   14000fedc:	(bad)  
   14000fedd:	(bad)  
   14000fede:	(bad)  
   14000fedf:	(bad)  
   14000fee0:	(bad)  
   14000fee1:	(bad)  
   14000fee2:	(bad)  
   14000fee3:	(bad)  
   14000fee4:	(bad)  
   14000fee5:	(bad)  
   14000fee6:	(bad)  
   14000fee7:	(bad)  
   14000fee8:	(bad)  
   14000fee9:	(bad)  
   14000feea:	(bad)  
   14000feeb:	(bad)  
   14000feec:	(bad)  
   14000feed:	(bad)  
   14000feee:	(bad)  
   14000feef:	(bad)  
   14000fef0:	(bad)  
   14000fef1:	(bad)  
   14000fef2:	(bad)  
   14000fef3:	(bad)  
   14000fef4:	(bad)  
   14000fef5:	(bad)  
   14000fef6:	(bad)  
   14000fef7:	inc    esi
   14000fef9:	mov    dh,0xff
   14000fefc:	rex.RXB
   14000fefd:	rex.RXB
   14000fefe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ff02:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000ff1a:	add    BYTE PTR [rax],al
   14000ff1c:	rex.RXB
   14000ff1d:	rex.RXB
   14000ff1e:	rex.RXB mov r15d,0xff474747
   14000ff24:	shr    DWORD PTR [rcx+0x4],0xff
   14000ff28:	leave  
   14000ff29:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ff2c:	leave  
   14000ff2d:	push   0x0
   14000ff2f:	dec    ecx
   14000ff31:	push   0x0
   14000ff33:	dec    ecx
   14000ff35:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000ff3b:	dec    eax
   14000ff3d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000ff43:	dec    eax
   14000ff45:	push   0x68c8ff00
   14000ff4a:	add    bh,bh
   14000ff4c:	enter  0x67,0xff
   14000ff50:	enter  0x67,0xff
   14000ff54:	(bad)  
   14000ff55:	data16 add bh,bh
   14000ff58:	(bad)  
   14000ff59:	data16 add bh,bh
   14000ff5c:	(bad)  
   14000ff5d:	data16 add bh,bh
   14000ff60:	(bad)  
   14000ff61:	gs add bh,bh
   14000ff64:	(bad)  
   14000ff65:	gs add bh,bh
   14000ff68:	(bad)  
   14000ff69:	gs add bh,bh
   14000ff6c:	(bad)  
   14000ff6d:	(bad)  
   14000ff6e:	(bad)  
   14000ff6f:	(bad)  
   14000ff70:	(bad)  
   14000ff71:	(bad)  
   14000ff72:	(bad)  
   14000ff73:	(bad)  
   14000ff74:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ff7a:	(bad)  
   14000ff7b:	(bad)  
   14000ff7c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ff82:	(bad)  
   14000ff83:	push   QWORD PTR [rdi]
   14000ff85:	mov    esp,0xbc37fffe
   14000ff8a:	(bad)  
   14000ff8b:	push   QWORD PTR [rdi]
   14000ff8d:	mov    esp,0xbc37fffe
   14000ff92:	(bad)  
   14000ff93:	push   QWORD PTR [rdi]
   14000ff95:	mov    esp,0xbb36fffe
   14000ff9a:	(bad)  
   14000ff9b:	push   QWORD PTR [rsi]
   14000ff9d:	mov    ebx,0xbb36fffe
   14000ffa2:	(bad)  
   14000ffa3:	push   QWORD PTR [rsi]
   14000ffa5:	mov    ebx,0xbb36fffe
   14000ffaa:	(bad)  
   14000ffab:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600fe6b
   14000ffb1:	mov    edx,0xba35fffe
   14000ffb6:	(bad)  
   14000ffb7:	push   QWORD PTR [rsi]
   14000ffb9:	mov    bl,0xf3
   14000ffbb:	inc    DWORD PTR [rdi+0x47]
   14000ffbe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ffc2:	rex.RXB mov r15d,0x0
	...
   14000ffdc:	rex.RXB
   14000ffdd:	rex.RXB
   14000ffde:	rex.RXB out dx,eax
   14000ffe0:	rex.WRXB
   14000ffe1:	rex.WB
   14000ffe2:	rex.XB dec r10d
   14000ffe5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ffe8:	leave  
   14000ffe9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ffec:	leave  
   14000ffed:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fff0:	leave  
   14000fff1:	push   0x0
   14000fff3:	dec    ecx
   14000fff5:	push   0x0
   14000fff7:	dec    ecx
   14000fff9:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000ffff:	dec    eax
   140010001:	imul   eax,DWORD PTR [rax],0x69c8ff
   140010007:	dec    eax
   140010009:	push   0x68c8ff00
   14001000e:	add    bh,bh
   140010010:	enter  0x67,0xff
   140010014:	enter  0x67,0xff
   140010018:	(bad)  
   140010019:	data16 add bh,bh
   14001001c:	(bad)  
   14001001d:	data16 add bh,bh
   140010020:	(bad)  
   140010021:	data16 add bh,bh
   140010024:	(bad)  
   140010025:	gs add bh,bh
   140010028:	(bad)  
   140010029:	gs add bh,bh
   14001002c:	(bad)  
   14001002d:	(bad)  
   14001002e:	(bad)  
   14001002f:	(bad)  
   140010030:	(bad)  
   140010031:	(bad)  
   140010032:	(bad)  
   140010033:	(bad)  
   140010034:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001003a:	(bad)  
   14001003b:	(bad)  
   14001003c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010042:	(bad)  
   140010043:	(bad)  
   140010044:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001004b:	push   QWORD PTR [rdi]
   14001004d:	mov    esp,0xbc37fffe
   140010052:	(bad)  
   140010053:	push   QWORD PTR [rdi]
   140010055:	mov    esp,0xbc37fffe
   14001005a:	(bad)  
   14001005b:	push   QWORD PTR [rsi]
   14001005d:	mov    ebx,0xbb36fffe
   140010062:	(bad)  
   140010063:	push   QWORD PTR [rsi]
   140010065:	mov    ebx,0xbb36fffe
   14001006a:	(bad)  
   14001006b:	push   QWORD PTR [rsi]
   14001006d:	mov    ebx,0xba35fffe
   140010072:	(bad)  
   140010073:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600ff33
   140010079:	mov    edx,0x4e46fffe
   14001007e:	push   rdx
   14001007f:	inc    DWORD PTR [rdi+0x47]
   140010082:	rex.RXB out dx,eax
	...
   14001009c:	rex.RXB
   14001009d:	rex.RXB
   14001009e:	rex.RXB jmp FWORD PTR [r8+0x50]
   1400100a2:	xor    eax,0x6ccaff
   1400100a7:	dec    edx
   1400100a9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400100ac:	leave  
   1400100ad:	imul   eax,DWORD PTR [rax],0xffffffff
   1400100b0:	leave  
   1400100b1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400100b4:	leave  
   1400100b5:	push   0x0
   1400100b7:	dec    ecx
   1400100b9:	push   0x0
   1400100bb:	dec    ecx
   1400100bd:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400100c3:	dec    eax
   1400100c5:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400100cb:	dec    eax
   1400100cd:	push   0x68c8ff00
   1400100d2:	add    bh,bh
   1400100d4:	enter  0x67,0xff
   1400100d8:	enter  0x67,0xff
   1400100dc:	(bad)  
   1400100dd:	data16 add bh,bh
   1400100e0:	(bad)  
   1400100e1:	data16 add bh,bh
   1400100e4:	(bad)  
   1400100e5:	data16 add bh,bh
   1400100e8:	(bad)  
   1400100e9:	gs add bh,bh
   1400100ec:	(bad)  
   1400100ed:	(bad)  
   1400100ee:	(bad)  
   1400100ef:	(bad)  
   1400100f0:	(bad)  
   1400100f1:	(bad)  
   1400100f2:	(bad)  
   1400100f3:	(bad)  
   1400100f4:	cmp    DWORD PTR [rbp-0x42c60002],edi
   1400100fa:	(bad)  
   1400100fb:	(bad)  
   1400100fc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010102:	(bad)  
   140010103:	(bad)  
   140010104:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001010a:	(bad)  
   14001010b:	push   QWORD PTR [rdi]
   14001010d:	mov    esp,0xbc37fffe
   140010112:	(bad)  
   140010113:	push   QWORD PTR [rdi]
   140010115:	mov    esp,0xbc37fffe
   14001011a:	(bad)  
   14001011b:	push   QWORD PTR [rdi]
   14001011d:	mov    esp,0xbb36fffe
   140010122:	(bad)  
   140010123:	push   QWORD PTR [rsi]
   140010125:	mov    ebx,0xbb36fffe
   14001012a:	(bad)  
   14001012b:	push   QWORD PTR [rsi]
   14001012d:	mov    ebx,0xbb36fffe
   140010132:	(bad)  
   140010133:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600fff3
   140010139:	mov    edx,0x6443fffe
   14001013e:	jne    0x14001013f
   140010140:	rex.RXB
   140010141:	rex.RXB
   140010142:	rex.RXB inc DWORD PTR [r8]
	...
   140010159:	add    BYTE PTR [rax],al
   14001015b:	add    BYTE PTR [rdi+0x47],al
   14001015e:	rex.RXB jmp FWORD PTR [r8+0x50]
   140010162:	xor    eax,0x6ccaff
   140010167:	dec    edx
   140010169:	ins    BYTE PTR es:[rdi],dx
   14001016a:	add    bh,bh
   14001016c:	retf   0x6b
   14001016f:	dec    ecx
   140010171:	imul   eax,DWORD PTR [rax],0xffffffff
   140010174:	leave  
   140010175:	imul   eax,DWORD PTR [rax],0xffffffff
   140010178:	leave  
   140010179:	push   0x0
   14001017b:	dec    ecx
   14001017d:	push   0x0
   14001017f:	dec    ecx
   140010181:	imul   eax,DWORD PTR [rax],0x69c9ff
   140010187:	dec    eax
   140010189:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001018f:	dec    eax
   140010191:	push   0x68c8ff00
   140010196:	add    bh,bh
   140010198:	enter  0x67,0xff
   14001019c:	enter  0x67,0xff
   1400101a0:	(bad)  
   1400101a1:	data16 add bh,bh
   1400101a4:	(bad)  
   1400101a5:	data16 add bh,bh
   1400101a8:	(bad)  
   1400101a9:	data16 add bh,bh
   1400101ac:	(bad)  
   1400101ad:	(bad)  
   1400101ae:	(bad)  
   1400101af:	(bad)  
   1400101b0:	(bad)  
   1400101b1:	(bad)  
   1400101b2:	(bad)  
   1400101b3:	(bad)  
   1400101b4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400101ba:	(bad)  
   1400101bb:	(bad)  
   1400101bc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400101c2:	(bad)  
   1400101c3:	(bad)  
   1400101c4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400101ca:	(bad)  
   1400101cb:	(bad)  
   1400101cc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400101d3:	push   QWORD PTR [rdi]
   1400101d5:	mov    esp,0xbc37fffe
   1400101da:	(bad)  
   1400101db:	push   QWORD PTR [rdi]
   1400101dd:	mov    esp,0xbc37fffe
   1400101e2:	(bad)  
   1400101e3:	push   QWORD PTR [rsi]
   1400101e5:	mov    ebx,0xbb36fffe
   1400101ea:	(bad)  
   1400101eb:	push   QWORD PTR [rsi]
   1400101ed:	mov    ebx,0xbb36fffe
   1400101f2:	(bad)  
   1400101f3:	push   QWORD PTR [rsi]
   1400101f5:	mov    ebx,0xba35fffe
   1400101fa:	(bad)  
   1400101fb:	inc    DWORD PTR [rbx+0x64]
   1400101fe:	jne    0x1400101ff
   140010200:	rex.RXB
   140010201:	rex.RXB
   140010202:	rex.RXB inc DWORD PTR [r8]
	...
   140010219:	add    BYTE PTR [rax],al
   14001021b:	add    BYTE PTR [rdi+0x47],al
   14001021e:	rex.RXB push QWORD PTR [r8+0x53]
   140010222:	xor    edi,edi
   140010224:	retf   0x6d
   140010227:	dec    edx
   140010229:	ins    BYTE PTR es:[rdi],dx
   14001022a:	add    bh,bh
   14001022c:	retf   0x6c
   14001022f:	dec    edx
   140010231:	imul   eax,DWORD PTR [rax],0xffffffff
   140010234:	leave  
   140010235:	imul   eax,DWORD PTR [rax],0xffffffff
   140010238:	leave  
   140010239:	imul   eax,DWORD PTR [rax],0xffffffff
   14001023c:	leave  
   14001023d:	push   0x0
   14001023f:	dec    ecx
   140010241:	push   0x0
   140010243:	dec    ecx
   140010245:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001024b:	dec    eax
   14001024d:	imul   eax,DWORD PTR [rax],0x69c8ff
   140010253:	dec    eax
   140010255:	push   0x68c8ff00
   14001025a:	add    bh,bh
   14001025c:	enter  0x67,0xff
   140010260:	enter  0x67,0xff
   140010264:	(bad)  
   140010265:	data16 add bh,bh
   140010268:	(bad)  
   140010269:	data16 add bh,bh
   14001026c:	(bad)  
   14001026d:	(bad)  
   14001026e:	(bad)  
   14001026f:	(bad)  
   140010270:	(bad)  
   140010271:	(bad)  
   140010272:	(bad)  
   140010273:	(bad)  
   140010274:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001027a:	(bad)  
   14001027b:	(bad)  
   14001027c:	cmp    DWORD PTR [rbp-0x42c60002],edi
   140010282:	(bad)  
   140010283:	(bad)  
   140010284:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001028a:	(bad)  
   14001028b:	(bad)  
   14001028c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140010292:	(bad)  
   140010293:	push   QWORD PTR [rdi]
   140010295:	mov    esp,0xbc37fffe
   14001029a:	(bad)  
   14001029b:	push   QWORD PTR [rdi]
   14001029d:	mov    esp,0xbc37fffe
   1400102a2:	(bad)  
   1400102a3:	push   QWORD PTR [rdi]
   1400102a5:	mov    esp,0xbb36fffe
   1400102aa:	(bad)  
   1400102ab:	push   QWORD PTR [rsi]
   1400102ad:	mov    ebx,0xbb36fffe
   1400102b2:	(bad)  
   1400102b3:	push   QWORD PTR [rsi]
   1400102b5:	mov    ebx,0xbb36fffe
   1400102ba:	(bad)  
   1400102bb:	inc    DWORD PTR [rbx+0x64]
   1400102be:	jne    0x1400102bf
   1400102c0:	rex.RXB
   1400102c1:	rex.RXB
   1400102c2:	rex.RXB inc DWORD PTR [r8]
	...
   1400102d9:	add    BYTE PTR [rax],al
   1400102db:	add    BYTE PTR [rdi+0x47],al
   1400102de:	rex.RXB dec DWORD PTR [r9-0x3500dba6]
   1400102e5:	ins    DWORD PTR es:[rdi],dx
   1400102e6:	add    bh,bh
   1400102e8:	retf   0x6d
   1400102eb:	dec    edx
   1400102ed:	ins    BYTE PTR es:[rdi],dx
   1400102ee:	add    bh,bh
   1400102f0:	retf   0x6c
   1400102f3:	dec    edx
   1400102f5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400102f8:	leave  
   1400102f9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400102fc:	leave  
   1400102fd:	imul   eax,DWORD PTR [rax],0xffffffff
   140010300:	leave  
   140010301:	push   0x0
   140010303:	dec    ecx
   140010305:	push   0x0
   140010307:	dec    ecx
   140010309:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001030f:	dec    eax
   140010311:	imul   eax,DWORD PTR [rax],0x69c8ff
   140010317:	dec    eax
   140010319:	push   0x68c8ff00
   14001031e:	add    bh,bh
   140010320:	enter  0x67,0xff
   140010324:	enter  0x67,0xff
   140010328:	(bad)  
   140010329:	data16 add bh,bh
   14001032c:	(bad)  
   14001032d:	(bad)  
   14001032e:	(bad)  
   14001032f:	(bad)  
   140010330:	(bad)  
   140010331:	(bad)  
   140010332:	(bad)  
   140010333:	(bad)  
   140010334:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001033a:	(bad)  
   14001033b:	(bad)  
   14001033c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140010342:	(bad)  
   140010343:	(bad)  
   140010344:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001034a:	(bad)  
   14001034b:	(bad)  
   14001034c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010352:	(bad)  
   140010353:	(bad)  
   140010354:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001035b:	push   QWORD PTR [rdi]
   14001035d:	mov    esp,0xbc37fffe
   140010362:	(bad)  
   140010363:	push   QWORD PTR [rdi]
   140010365:	mov    esp,0xbc37fffe
   14001036a:	(bad)  
   14001036b:	push   QWORD PTR [rsi]
   14001036d:	mov    ebx,0xbb36fffe
   140010372:	(bad)  
   140010373:	push   QWORD PTR [rsi]
   140010375:	mov    ebx,0xbb36fffe
   14001037a:	(bad)  
   14001037b:	(bad)  
   14001037c:	(bad)  
   14001037d:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14001039b:	add    BYTE PTR [rdi+0x47],al
   14001039e:	rex.RXB dec DWORD PTR [r9-0x3500dba6]
   1400103a5:	ins    DWORD PTR es:[rdi],dx
   1400103a6:	add    bh,bh
   1400103a8:	retf   0x6d
   1400103ab:	dec    edx
   1400103ad:	ins    DWORD PTR es:[rdi],dx
   1400103ae:	add    bh,bh
   1400103b0:	retf   0x6c
   1400103b3:	dec    edx
   1400103b5:	ins    BYTE PTR es:[rdi],dx
   1400103b6:	add    bh,bh
   1400103b8:	retf   0x6b
   1400103bb:	dec    ecx
   1400103bd:	imul   eax,DWORD PTR [rax],0xffffffff
   1400103c0:	leave  
   1400103c1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400103c4:	leave  
   1400103c5:	push   0x0
   1400103c7:	dec    ecx
   1400103c9:	push   0x0
   1400103cb:	dec    ecx
   1400103cd:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400103d3:	dec    eax
   1400103d5:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400103db:	dec    eax
   1400103dd:	push   0x68c8ff00
   1400103e2:	add    bh,bh
   1400103e4:	enter  0x67,0xff
   1400103e8:	enter  0x67,0xff
   1400103ec:	(bad)  
   1400103ed:	(bad)  
   1400103ee:	(bad)  
   1400103ef:	(bad)  
   1400103f0:	(bad)  
   1400103f1:	(bad)  
   1400103f2:	(bad)  
   1400103f3:	(bad)  
   1400103f4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400103fa:	(bad)  
   1400103fb:	(bad)  
   1400103fc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010402:	(bad)  
   140010403:	(bad)  
   140010404:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14001040a:	(bad)  
   14001040b:	(bad)  
   14001040c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010412:	(bad)  
   140010413:	(bad)  
   140010414:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001041a:	(bad)  
   14001041b:	push   QWORD PTR [rdi]
   14001041d:	mov    esp,0xbc37fffe
   140010422:	(bad)  
   140010423:	push   QWORD PTR [rdi]
   140010425:	mov    esp,0xbc37fffe
   14001042a:	(bad)  
   14001042b:	push   QWORD PTR [rdi]
   14001042d:	mov    esp,0xbb36fffe
   140010432:	(bad)  
   140010433:	push   QWORD PTR [rsi]
   140010435:	mov    ebx,0xbb36fffe
   14001043a:	(bad)  
   14001043b:	(bad)  
   14001043c:	(bad)  
   14001043d:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14001045b:	add    BYTE PTR [rdi+0x47],al
   14001045e:	rex.RXB dec DWORD PTR [r9-0x3400dba6]
   140010465:	ins    DWORD PTR es:[rdi],dx
   140010466:	add    bh,bh
   140010468:	retf   0x6d
   14001046b:	dec    edx
   14001046d:	ins    DWORD PTR es:[rdi],dx
   14001046e:	add    bh,bh
   140010470:	retf   0x6d
   140010473:	dec    edx
   140010475:	ins    BYTE PTR es:[rdi],dx
   140010476:	add    bh,bh
   140010478:	retf   0x6c
   14001047b:	dec    edx
   14001047d:	imul   eax,DWORD PTR [rax],0xffffffff
   140010480:	leave  
   140010481:	imul   eax,DWORD PTR [rax],0xffffffff
   140010484:	leave  
   140010485:	imul   eax,DWORD PTR [rax],0xffffffff
   140010488:	leave  
   140010489:	push   0x0
   14001048b:	dec    ecx
   14001048d:	push   0x0
   14001048f:	dec    ecx
   140010491:	imul   eax,DWORD PTR [rax],0x69c9ff
   140010497:	dec    eax
   140010499:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001049f:	dec    eax
   1400104a1:	push   0x68c8ff00
   1400104a6:	add    bh,bh
   1400104a8:	enter  0x67,0xff
   1400104ac:	(bad)  
   1400104ad:	(bad)  
   1400104ae:	(bad)  
   1400104af:	(bad)  
   1400104b0:	(bad)  
   1400104b1:	(bad)  
   1400104b2:	(bad)  
   1400104b3:	(bad)  
   1400104b4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400104ba:	(bad)  
   1400104bb:	(bad)  
   1400104bc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400104c2:	(bad)  
   1400104c3:	(bad)  
   1400104c4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400104ca:	(bad)  
   1400104cb:	(bad)  
   1400104cc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400104d2:	(bad)  
   1400104d3:	(bad)  
   1400104d4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400104da:	(bad)  
   1400104db:	(bad)  
   1400104dc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400104e3:	push   QWORD PTR [rdi]
   1400104e5:	mov    esp,0xbc37fffe
   1400104ea:	(bad)  
   1400104eb:	push   QWORD PTR [rdi]
   1400104ed:	mov    esp,0xbc37fffe
   1400104f2:	(bad)  
   1400104f3:	push   QWORD PTR [rsi]
   1400104f5:	mov    ebx,0xbb36fffe
   1400104fa:	(bad)  
   1400104fb:	(bad)  
   1400104fc:	(bad)  
   1400104fd:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14001051b:	add    BYTE PTR [rdi+0x47],al
   14001051e:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   140010525:	outs   dx,BYTE PTR ds:[rsi]
   140010526:	add    bh,bh
   140010528:	retf   
   140010529:	ins    DWORD PTR es:[rdi],dx
   14001052a:	add    bh,bh
   14001052c:	retf   0x6d
   14001052f:	dec    edx
   140010531:	ins    DWORD PTR es:[rdi],dx
   140010532:	add    bh,bh
   140010534:	retf   0x6d
   140010537:	dec    edx
   140010539:	ins    BYTE PTR es:[rdi],dx
   14001053a:	add    bh,bh
   14001053c:	retf   0x6c
   14001053f:	dec    edx
   140010541:	imul   eax,DWORD PTR [rax],0xffffffff
   140010544:	leave  
   140010545:	imul   eax,DWORD PTR [rax],0xffffffff
   140010548:	leave  
   140010549:	imul   eax,DWORD PTR [rax],0xffffffff
   14001054c:	leave  
   14001054d:	push   0x0
   14001054f:	dec    ecx
   140010551:	push   0x0
   140010553:	dec    ecx
   140010555:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001055b:	dec    eax
   14001055d:	imul   eax,DWORD PTR [rax],0x69c8ff
   140010563:	dec    eax
   140010565:	push   0x68c8ff00
   14001056a:	add    bh,bh
   14001056c:	(bad)  
   14001056d:	(bad)  
   14001056e:	(bad)  
   14001056f:	(bad)  
   140010570:	(bad)  
   140010571:	(bad)  
   140010572:	(bad)  
   140010573:	(bad)  
   140010574:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001057a:	(bad)  
   14001057b:	(bad)  
   14001057c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140010582:	(bad)  
   140010583:	(bad)  
   140010584:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001058a:	(bad)  
   14001058b:	(bad)  
   14001058c:	cmp    DWORD PTR [rbp-0x42c60002],edi
   140010592:	(bad)  
   140010593:	(bad)  
   140010594:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001059a:	(bad)  
   14001059b:	(bad)  
   14001059c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400105a2:	(bad)  
   1400105a3:	push   QWORD PTR [rdi]
   1400105a5:	mov    esp,0xbc37fffe
   1400105aa:	(bad)  
   1400105ab:	push   QWORD PTR [rdi]
   1400105ad:	mov    esp,0xbc37fffe
   1400105b2:	(bad)  
   1400105b3:	push   QWORD PTR [rdi]
   1400105b5:	mov    esp,0xbb36fffe
   1400105ba:	(bad)  
   1400105bb:	(bad)  
   1400105bc:	(bad)  
   1400105bd:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   1400105db:	add    BYTE PTR [rdi+0x47],al
   1400105de:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   1400105e5:	outs   dx,BYTE PTR ds:[rsi]
   1400105e6:	add    bh,bh
   1400105e8:	retf   
   1400105e9:	outs   dx,BYTE PTR ds:[rsi]
   1400105ea:	add    bh,bh
   1400105ec:	retf   
   1400105ed:	ins    DWORD PTR es:[rdi],dx
   1400105ee:	add    bh,bh
   1400105f0:	retf   0x6d
   1400105f3:	dec    edx
   1400105f5:	ins    DWORD PTR es:[rdi],dx
   1400105f6:	add    bh,bh
   1400105f8:	retf   0x6d
   1400105fb:	dec    edx
   1400105fd:	ins    BYTE PTR es:[rdi],dx
   1400105fe:	add    bh,bh
   140010600:	retf   0x6c
   140010603:	dec    edx
   140010605:	imul   eax,DWORD PTR [rax],0xffffffff
   140010608:	leave  
   140010609:	imul   eax,DWORD PTR [rax],0xffffffff
   14001060c:	leave  
   14001060d:	imul   eax,DWORD PTR [rax],0xffffffff
   140010610:	leave  
   140010611:	push   0x0
   140010613:	dec    ecx
   140010615:	push   0x0
   140010617:	dec    ecx
   140010619:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001061f:	dec    eax
   140010621:	imul   eax,DWORD PTR [rax],0x69c8ff
   140010627:	dec    eax
   140010629:	push   0xffffffffffffff00
   14001062e:	(bad)  
   14001062f:	(bad)  
   140010630:	(bad)  
   140010631:	(bad)  
   140010632:	(bad)  
   140010633:	(bad)  
   140010634:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001063a:	(bad)  
   14001063b:	(bad)  
   14001063c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140010642:	(bad)  
   140010643:	(bad)  
   140010644:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001064a:	(bad)  
   14001064b:	(bad)  
   14001064c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140010652:	(bad)  
   140010653:	(bad)  
   140010654:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001065a:	(bad)  
   14001065b:	(bad)  
   14001065c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010662:	(bad)  
   140010663:	(bad)  
   140010664:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001066b:	push   QWORD PTR [rdi]
   14001066d:	mov    esp,0xbc37fffe
   140010672:	(bad)  
   140010673:	push   QWORD PTR [rdi]
   140010675:	mov    esp,0xbc37fffe
   14001067a:	(bad)  
   14001067b:	(bad)  
   14001067c:	(bad)  
   14001067d:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14001069b:	add    BYTE PTR [rdi+0x47],al
   14001069e:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   1400106a5:	outs   dx,DWORD PTR ds:[rsi]
   1400106a6:	add    bh,bh
   1400106a8:	retf   
   1400106a9:	outs   dx,BYTE PTR ds:[rsi]
   1400106aa:	add    bh,bh
   1400106ac:	retf   
   1400106ad:	outs   dx,BYTE PTR ds:[rsi]
   1400106ae:	add    bh,bh
   1400106b0:	retf   
   1400106b1:	ins    DWORD PTR es:[rdi],dx
   1400106b2:	add    bh,bh
   1400106b4:	retf   0x6d
   1400106b7:	dec    edx
   1400106b9:	ins    DWORD PTR es:[rdi],dx
   1400106ba:	add    bh,bh
   1400106bc:	retf   0x6d
   1400106bf:	dec    edx
   1400106c1:	ins    BYTE PTR es:[rdi],dx
   1400106c2:	add    bh,bh
   1400106c4:	retf   0x6c
   1400106c7:	dec    edx
   1400106c9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400106cc:	leave  
   1400106cd:	imul   eax,DWORD PTR [rax],0xffffffff
   1400106d0:	leave  
   1400106d1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400106d4:	leave  
   1400106d5:	push   0x0
   1400106d7:	dec    ecx
   1400106d9:	push   0x0
   1400106db:	dec    ecx
   1400106dd:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400106e3:	dec    eax
   1400106e5:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400106eb:	(bad)  
   1400106ec:	(bad)  
   1400106ed:	(bad)  
   1400106ee:	(bad)  
   1400106ef:	(bad)  
   1400106f0:	(bad)  
   1400106f1:	(bad)  
   1400106f2:	(bad)  
   1400106f3:	(bad)  
   1400106f4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400106fa:	(bad)  
   1400106fb:	(bad)  
   1400106fc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010702:	(bad)  
   140010703:	(bad)  
   140010704:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001070a:	(bad)  
   14001070b:	(bad)  
   14001070c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010712:	(bad)  
   140010713:	(bad)  
   140010714:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14001071a:	(bad)  
   14001071b:	(bad)  
   14001071c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010722:	(bad)  
   140010723:	(bad)  
   140010724:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001072a:	(bad)  
   14001072b:	push   QWORD PTR [rdi]
   14001072d:	mov    esp,0xbc37fffe
   140010732:	(bad)  
   140010733:	push   QWORD PTR [rdi]
   140010735:	mov    esp,0xbc37fffe
   14001073a:	(bad)  
   14001073b:	(bad)  
   14001073c:	(bad)  
   14001073d:	(bad)  
   14001073e:	movabs ds:0xff474747ff,eax
	...
   14001075b:	add    BYTE PTR [rdi+0x47],al
   14001075e:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   140010765:	outs   dx,DWORD PTR ds:[rsi]
   140010766:	add    bh,bh
   140010768:	retf   
   140010769:	outs   dx,DWORD PTR ds:[rsi]
   14001076a:	add    bh,bh
   14001076c:	retf   
   14001076d:	outs   dx,BYTE PTR ds:[rsi]
   14001076e:	add    bh,bh
   140010770:	retf   
   140010771:	outs   dx,BYTE PTR ds:[rsi]
   140010772:	add    bh,bh
   140010774:	retf   
   140010775:	ins    DWORD PTR es:[rdi],dx
   140010776:	add    bh,bh
   140010778:	retf   0x6d
   14001077b:	dec    edx
   14001077d:	ins    DWORD PTR es:[rdi],dx
   14001077e:	add    bh,bh
   140010780:	retf   0x6d
   140010783:	dec    edx
   140010785:	ins    BYTE PTR es:[rdi],dx
   140010786:	add    bh,bh
   140010788:	retf   0x6c
   14001078b:	dec    edx
   14001078d:	imul   eax,DWORD PTR [rax],0xffffffff
   140010790:	leave  
   140010791:	imul   eax,DWORD PTR [rax],0xffffffff
   140010794:	leave  
   140010795:	imul   eax,DWORD PTR [rax],0xffffffff
   140010798:	leave  
   140010799:	push   0x0
   14001079b:	dec    ecx
   14001079d:	push   0x0
   14001079f:	dec    ecx
   1400107a1:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400107a7:	dec    eax
   1400107a9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400107af:	(bad)  
   1400107b0:	(bad)  
   1400107b1:	(bad)  
   1400107b2:	(bad)  
   1400107b3:	(bad)  
   1400107b4:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400107ba:	(bad)  
   1400107bb:	(bad)  
   1400107bc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400107c2:	(bad)  
   1400107c3:	(bad)  
   1400107c4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400107ca:	(bad)  
   1400107cb:	(bad)  
   1400107cc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400107d2:	(bad)  
   1400107d3:	(bad)  
   1400107d4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400107da:	(bad)  
   1400107db:	(bad)  
   1400107dc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400107e2:	(bad)  
   1400107e3:	(bad)  
   1400107e4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400107ea:	(bad)  
   1400107eb:	(bad)  
   1400107ec:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400107f3:	push   QWORD PTR [rdi]
   1400107f5:	mov    esp,0xbc37fffe
   1400107fa:	(bad)  
   1400107fb:	(bad)  
   1400107fc:	(bad)  
   1400107fd:	(bad)  
   1400107fe:	movabs ds:0xff474747ff,eax
	...
   14001081b:	add    BYTE PTR [rdi+0x47],al
   14001081e:	rex.RXB dec DWORD PTR [r10-0x3400dba4]
   140010825:	outs   dx,DWORD PTR ds:[rsi]
   140010826:	add    bh,bh
   140010828:	retf   
   140010829:	outs   dx,DWORD PTR ds:[rsi]
   14001082a:	add    bh,bh
   14001082c:	retf   
   14001082d:	outs   dx,DWORD PTR ds:[rsi]
   14001082e:	add    bh,bh
   140010830:	retf   
   140010831:	outs   dx,BYTE PTR ds:[rsi]
   140010832:	add    bh,bh
   140010834:	retf   
   140010835:	outs   dx,BYTE PTR ds:[rsi]
   140010836:	add    bh,bh
   140010838:	retf   
   140010839:	ins    DWORD PTR es:[rdi],dx
   14001083a:	add    bh,bh
   14001083c:	retf   0x6d
   14001083f:	dec    edx
   140010841:	ins    DWORD PTR es:[rdi],dx
   140010842:	add    bh,bh
   140010844:	retf   0x6d
   140010847:	dec    edx
   140010849:	ins    BYTE PTR es:[rdi],dx
   14001084a:	add    bh,bh
   14001084c:	retf   0x6c
   14001084f:	dec    edx
   140010851:	imul   eax,DWORD PTR [rax],0xffffffff
   140010854:	leave  
   140010855:	imul   eax,DWORD PTR [rax],0xffffffff
   140010858:	leave  
   140010859:	imul   eax,DWORD PTR [rax],0xffffffff
   14001085c:	leave  
   14001085d:	push   0x0
   14001085f:	dec    ecx
   140010861:	push   0x0
   140010863:	dec    ecx
   140010865:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001086b:	(bad)  
   14001086c:	(bad)  
   14001086d:	(bad)  
   14001086e:	(bad)  
   14001086f:	(bad)  
   140010870:	(bad)  
   140010871:	(bad)  
   140010872:	(bad)  
   140010873:	(bad)  
   140010874:	cmp    eax,eax
   140010876:	(bad)  
   140010877:	(bad)  
   140010878:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14001087e:	(bad)  
   14001087f:	(bad)  
   140010880:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010886:	(bad)  
   140010887:	(bad)  
   140010888:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14001088e:	(bad)  
   14001088f:	(bad)  
   140010890:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010896:	(bad)  
   140010897:	(bad)  
   140010898:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14001089e:	(bad)  
   14001089f:	(bad)  
   1400108a0:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400108a6:	(bad)  
   1400108a7:	(bad)  
   1400108a8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400108ae:	(bad)  
   1400108af:	(bad)  
   1400108b0:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400108b7:	push   QWORD PTR [rdi]
   1400108b9:	mov    esp,0x823ffffe
   1400108be:	movabs ds:0xff474747ff,eax
	...
   1400108db:	add    BYTE PTR [rdi+0x47],al
   1400108de:	rex.RXB dec DWORD PTR [r10-0x3300dba4]
   1400108e5:	jo     0x1400108e7
   1400108e7:	dec    ebx
   1400108e9:	outs   dx,DWORD PTR ds:[rsi]
   1400108ea:	add    bh,bh
   1400108ec:	retf   
   1400108ed:	outs   dx,DWORD PTR ds:[rsi]
   1400108ee:	add    bh,bh
   1400108f0:	retf   
   1400108f1:	outs   dx,DWORD PTR ds:[rsi]
   1400108f2:	add    bh,bh
   1400108f4:	retf   
   1400108f5:	outs   dx,BYTE PTR ds:[rsi]
   1400108f6:	add    bh,bh
   1400108f8:	retf   
   1400108f9:	outs   dx,BYTE PTR ds:[rsi]
   1400108fa:	add    bh,bh
   1400108fc:	retf   
   1400108fd:	ins    DWORD PTR es:[rdi],dx
   1400108fe:	add    bh,bh
   140010900:	retf   0x6d
   140010903:	dec    edx
   140010905:	ins    DWORD PTR es:[rdi],dx
   140010906:	add    bh,bh
   140010908:	retf   0x6d
   14001090b:	dec    edx
   14001090d:	ins    BYTE PTR es:[rdi],dx
   14001090e:	add    bh,bh
   140010910:	retf   0x6c
   140010913:	dec    edx
   140010915:	imul   eax,DWORD PTR [rax],0xffffffff
   140010918:	leave  
   140010919:	imul   eax,DWORD PTR [rax],0xffffffff
   14001091c:	leave  
   14001091d:	imul   eax,DWORD PTR [rax],0xffffffff
   140010920:	leave  
   140010921:	push   0x0
   140010923:	dec    ecx
   140010925:	push   0x0
   140010927:	dec    ecx
   140010929:	imul   eax,DWORD PTR [rax],0xffffffff
   14001092f:	(bad)  
   140010930:	(bad)  
   140010931:	(bad)  
   140010932:	(bad)  
   140010933:	(bad)  
   140010934:	cmp    eax,eax
   140010936:	(bad)  
   140010937:	(bad)  
   140010938:	cmp    eax,eax
   14001093a:	(bad)  
   14001093b:	(bad)  
   14001093c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010942:	(bad)  
   140010943:	(bad)  
   140010944:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001094a:	(bad)  
   14001094b:	(bad)  
   14001094c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140010952:	(bad)  
   140010953:	(bad)  
   140010954:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001095a:	(bad)  
   14001095b:	(bad)  
   14001095c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140010962:	(bad)  
   140010963:	(bad)  
   140010964:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001096a:	(bad)  
   14001096b:	(bad)  
   14001096c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010972:	(bad)  
   140010973:	(bad)  
   140010974:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001097b:	(bad)  
   14001097c:	(bad)  
   14001097d:	(bad)  
   14001097e:	movabs ds:0xff474747ff,eax
	...
   14001099b:	add    BYTE PTR [rdi+0x47],al
   14001099e:	rex.RXB jmp FWORD PTR [r8+0x51]
   1400109a2:	xor    eax,0x245c8aff
   1400109a7:	dec    DWORD PTR [rdx-0x5500dba4]
   1400109ad:	gs adc bh,bh
   1400109b0:	mov    ebx,0xcbff096a
   1400109b5:	outs   dx,DWORD PTR ds:[rsi]
   1400109b6:	add    bh,bh
   1400109b8:	retf   
   1400109b9:	outs   dx,BYTE PTR ds:[rsi]
   1400109ba:	add    bh,bh
   1400109bc:	retf   
   1400109bd:	outs   dx,BYTE PTR ds:[rsi]
   1400109be:	add    bh,bh
   1400109c0:	retf   
   1400109c1:	ins    DWORD PTR es:[rdi],dx
   1400109c2:	add    bh,bh
   1400109c4:	retf   0x6d
   1400109c7:	dec    edx
   1400109c9:	ins    DWORD PTR es:[rdi],dx
   1400109ca:	add    bh,bh
   1400109cc:	retf   0x6d
   1400109cf:	dec    edx
   1400109d1:	ins    BYTE PTR es:[rdi],dx
   1400109d2:	add    bh,bh
   1400109d4:	retf   0x6c
   1400109d7:	dec    edx
   1400109d9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400109dc:	leave  
   1400109dd:	imul   eax,DWORD PTR [rax],0xffffffff
   1400109e0:	leave  
   1400109e1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400109e4:	leave  
   1400109e5:	push   0x0
   1400109e7:	dec    ecx
   1400109e9:	push   0x0
   1400109eb:	(bad)  
   1400109ec:	(bad)  
   1400109ed:	(bad)  
   1400109ee:	(bad)  
   1400109ef:	(bad)  
   1400109f0:	(bad)  
   1400109f1:	(bad)  
   1400109f2:	(bad)  
   1400109f3:	(bad)  
   1400109f4:	cmp    eax,eax
   1400109f6:	(bad)  
   1400109f7:	(bad)  
   1400109f8:	cmp    eax,eax
   1400109fa:	(bad)  
   1400109fb:	(bad)  
   1400109fc:	cmp    eax,eax
   1400109fe:	(bad)  
   1400109ff:	(bad)  
   140010a00:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010a06:	(bad)  
   140010a07:	(bad)  
   140010a08:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010a0e:	(bad)  
   140010a0f:	(bad)  
   140010a10:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140010a16:	(bad)  
   140010a17:	(bad)  
   140010a18:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010a1e:	(bad)  
   140010a1f:	(bad)  
   140010a20:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140010a26:	(bad)  
   140010a27:	(bad)  
   140010a28:	cmp    DWORD PTR [rbp-0x51c50002],edi
   140010a2e:	out    0xff,eax
   140010a30:	cmp    al,0xa0
   140010a32:	sar    bh,1
   140010a34:	rex (bad) 
   140010a36:	movabs ds:0x756443ffa38240ff,eax
   140010a3f:	inc    DWORD PTR [rdi+0x47]
   140010a42:	rex.RXB inc DWORD PTR [r8]
	...
   140010a55:	add    BYTE PTR [rax],al
   140010a57:	add    BYTE PTR [rdi+0x47],al
   140010a5a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140010a5e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010a62:	rex.RXB inc DWORD PTR [r15+0x47]
   140010a66:	rex.RXB inc DWORD PTR [r15+0x47]
   140010a6a:	rex.RXB inc DWORD PTR [r15+0x47]
   140010a6e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010a72:	rex.RXB dec DWORD PTR [r15+0x4a]
   140010a76:	rex.XB push QWORD PTR [r8+0x53]
   140010a7a:	xor    edi,edi
   140010a7c:	(bad)  
   140010a7d:	pop    rdi
   140010a7e:	sbb    edi,edi
   140010a80:	ret    
   140010a81:	ins    BYTE PTR es:[rdi],dx
   140010a82:	add    al,0xff
   140010a84:	retf   
   140010a85:	ins    DWORD PTR es:[rdi],dx
   140010a86:	add    bh,bh
   140010a88:	retf   0x6d
   140010a8b:	dec    edx
   140010a8d:	ins    DWORD PTR es:[rdi],dx
   140010a8e:	add    bh,bh
   140010a90:	retf   0x6d
   140010a93:	dec    edx
   140010a95:	ins    BYTE PTR es:[rdi],dx
   140010a96:	add    bh,bh
   140010a98:	retf   0x6c
   140010a9b:	dec    edx
   140010a9d:	imul   eax,DWORD PTR [rax],0xffffffff
   140010aa0:	leave  
   140010aa1:	imul   eax,DWORD PTR [rax],0xffffffff
   140010aa4:	leave  
   140010aa5:	imul   eax,DWORD PTR [rax],0xffffffff
   140010aa8:	leave  
   140010aa9:	push   0x0
   140010aab:	(bad)  
   140010aac:	(bad)  
   140010aad:	(bad)  
   140010aae:	(bad)  
   140010aaf:	(bad)  
   140010ab0:	(bad)  
   140010ab1:	(bad)  
   140010ab2:	(bad)  
   140010ab3:	(bad)  
   140010ab4:	cmp    eax,eax
   140010ab6:	(bad)  
   140010ab7:	(bad)  
   140010ab8:	cmp    eax,eax
   140010aba:	(bad)  
   140010abb:	(bad)  
   140010abc:	cmp    eax,eax
   140010abe:	(bad)  
   140010abf:	(bad)  
   140010ac0:	cmp    eax,eax
   140010ac2:	(bad)  
   140010ac3:	(bad)  
   140010ac4:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010aca:	(bad)  
   140010acb:	(bad)  
   140010acc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010ad2:	(bad)  
   140010ad3:	(bad)  
   140010ad4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140010ada:	(bad)  
   140010adb:	(bad)  
   140010adc:	cmp    dh,BYTE PTR [rdi-0x6ec1000d]
   140010ae2:	mov    ecx,0x806c43ff
   140010ae7:	inc    DWORD PTR [rsi+0x4e]
   140010aea:	push   rdx
   140010aeb:	inc    DWORD PTR [rdi+0x47]
   140010aee:	rex.RXB inc DWORD PTR [r15+0x47]
   140010af2:	rex.RXB inc DWORD PTR [r15+0x47]
   140010af6:	rex.RXB inc DWORD PTR [r15+0x47]
   140010afa:	rex.RXB inc DWORD PTR [r15+0x47]
   140010afe:	rex.RXB inc DWORD PTR [r15+0x47]
   140010b02:	rex.RXB inc DWORD PTR [r8]
	...
   140010b15:	add    BYTE PTR [rax],al
   140010b17:	add    BYTE PTR [rdi+0x47],al
   140010b1a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140010b1e:	rex.RXB
   140010b1f:	rex
   140010b20:	rex.RXB
   140010b21:	rex.RXB
   140010b22:	rex.RXB
   140010b23:	rex
   140010b24:	rex.RXB
   140010b25:	rex.RXB
   140010b26:	rex.RXB
   140010b27:	rex
   140010b28:	rex.RXB
   140010b29:	rex.RXB
   140010b2a:	rex.RXB push r8
   140010b2c:	rex.RXB
   140010b2d:	rex.RXB
   140010b2e:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140010b33:	scas   eax,DWORD PTR es:[rdi]
   140010b34:	rex.RXB
   140010b35:	rex.RXB
   140010b36:	rex.RXB out dx,eax
   140010b38:	rex.RXB
   140010b39:	rex.RXB
   140010b3a:	rex.RXB inc DWORD PTR [r15+0x47]
   140010b3e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010b42:	rex.RXB push QWORD PTR [r8+0x53]
   140010b46:	xor    edi,edi
   140010b48:	stos   BYTE PTR es:[rdi],al
   140010b49:	fs adc bh,bh
   140010b4c:	retf   0x6d
   140010b4f:	dec    edx
   140010b51:	ins    DWORD PTR es:[rdi],dx
   140010b52:	add    bh,bh
   140010b54:	retf   0x6d
   140010b57:	dec    edx
   140010b59:	ins    BYTE PTR es:[rdi],dx
   140010b5a:	add    bh,bh
   140010b5c:	retf   0x6c
   140010b5f:	dec    edx
   140010b61:	imul   eax,DWORD PTR [rax],0xffffffff
   140010b64:	leave  
   140010b65:	imul   eax,DWORD PTR [rax],0xffffffff
   140010b68:	leave  
   140010b69:	imul   eax,DWORD PTR [rax],0xffffffff
   140010b6c:	(bad)  
   140010b6d:	(bad)  
   140010b6e:	(bad)  
   140010b6f:	(bad)  
   140010b70:	(bad)  
   140010b71:	(bad)  
   140010b72:	(bad)  
   140010b73:	(bad)  
   140010b74:	cmp    al,0xc0
   140010b76:	(bad)  
   140010b77:	(bad)  
   140010b78:	cmp    eax,eax
   140010b7a:	(bad)  
   140010b7b:	(bad)  
   140010b7c:	cmp    eax,eax
   140010b7e:	(bad)  
   140010b7f:	(bad)  
   140010b80:	cmp    eax,eax
   140010b82:	(bad)  
   140010b83:	(bad)  
   140010b84:	cmp    eax,eax
   140010b86:	(bad)  
   140010b87:	(bad)  
   140010b88:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010b8e:	(bad)  
   140010b8f:	(bad)  
   140010b90:	cmp    bh,BYTE PTR [rdi-0x5ec20002]
   140010b96:	sar    bh,1
   140010b98:	rex.XB ins BYTE PTR es:[rdi],dx
   140010b9a:	cmp    bh,0x47
   140010b9d:	rex.RXB
   140010b9e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010ba2:	rex.RXB inc DWORD PTR [r15+0x47]
   140010ba6:	rex.RXB inc DWORD PTR [r15+0x47]
   140010baa:	rex.RXB out dx,eax
   140010bac:	rex.RXB
   140010bad:	rex.RXB
   140010bae:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140010bb0:	rex.RXB
   140010bb1:	rex.RXB
   140010bb2:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140010bb7:	push   rax
   140010bb8:	rex.RXB
   140010bb9:	rex.RXB
   140010bba:	rex.RXB
   140010bbb:	rex
   140010bbc:	rex.RXB
   140010bbd:	rex.RXB
   140010bbe:	rex.RXB
   140010bbf:	rex
   140010bc0:	rex.RXB
   140010bc1:	rex.RXB
   140010bc2:	rex.RXB
   140010bc3:	add    BYTE PTR [rax],al
	...
   140010bf6:	add    BYTE PTR [rax],al
   140010bf8:	rex.RXB
   140010bf9:	rex.RXB
   140010bfa:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140010bfe:	rex.RXB pop QWORD PTR [r15+0x47]
   140010c02:	rex.RXB fild WORD PTR [r15+0x47]
   140010c06:	rex.RXB inc DWORD PTR [r15+0x47]
   140010c0a:	rex.RXB jmp FWORD PTR [r8+0x51]
   140010c0e:	xor    eax,0x1264a9ff
   140010c13:	dec    edx
   140010c15:	ins    DWORD PTR es:[rdi],dx
   140010c16:	add    bh,bh
   140010c18:	retf   0x6d
   140010c1b:	dec    edx
   140010c1d:	ins    BYTE PTR es:[rdi],dx
   140010c1e:	add    bh,bh
   140010c20:	retf   0x6c
   140010c23:	dec    edx
   140010c25:	imul   eax,DWORD PTR [rax],0xffffffff
   140010c28:	leave  
   140010c29:	imul   eax,DWORD PTR [rax],0xffffffff
   140010c2c:	(bad)  
   140010c2d:	(bad)  
   140010c2e:	(bad)  
   140010c2f:	(bad)  
   140010c30:	(bad)  
   140010c31:	(bad)  
   140010c32:	(bad)  
   140010c33:	(bad)  
   140010c34:	cmp    al,0xc0
   140010c36:	(bad)  
   140010c37:	(bad)  
   140010c38:	cmp    al,0xc0
   140010c3a:	(bad)  
   140010c3b:	(bad)  
   140010c3c:	cmp    eax,eax
   140010c3e:	(bad)  
   140010c3f:	(bad)  
   140010c40:	cmp    eax,eax
   140010c42:	(bad)  
   140010c43:	(bad)  
   140010c44:	cmp    eax,eax
   140010c46:	(bad)  
   140010c47:	(bad)  
   140010c48:	cmp    eax,eax
   140010c4a:	(bad)  
   140010c4b:	(bad)  
   140010c4c:	movabs eax,ds:0x4747ff756544ffd0
   140010c56:	rex.RXB inc DWORD PTR [r15+0x47]
   140010c5a:	rex.RXB inc DWORD PTR [r15+0x47]
   140010c5e:	rex.RXB fild WORD PTR [r15+0x47]
   140010c62:	rex.RXB pop QWORD PTR [r15+0x47]
   140010c66:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140010cc1:	add    BYTE PTR [rax],al
   140010cc3:	add    BYTE PTR [rdi+0x47],al
   140010cc6:	rex.RXB
   140010cc7:	rex
   140010cc8:	rex.RXB
   140010cc9:	rex.RXB
   140010cca:	rex.RXB mov r15d,0xff474747
   140010cd0:	rex.RXB
   140010cd1:	rex.RXB
   140010cd2:	rex.RXB inc DWORD PTR [r8-0x3d00d7a8]
   140010cd9:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   140010cdd:	ins    DWORD PTR es:[rdi],dx
   140010cde:	add    bh,bh
   140010ce0:	retf   0x6c
   140010ce3:	dec    edx
   140010ce5:	ins    BYTE PTR es:[rdi],dx
   140010ce6:	add    bh,bh
   140010ce8:	retf   0x6b
   140010ceb:	(bad)  
   140010cec:	(bad)  
   140010ced:	(bad)  
   140010cee:	(bad)  
   140010cef:	(bad)  
   140010cf0:	(bad)  
   140010cf1:	(bad)  
   140010cf2:	(bad)  
   140010cf3:	(bad)  
   140010cf4:	cmp    al,0xc1
   140010cf6:	(bad)  
   140010cf7:	(bad)  
   140010cf8:	cmp    al,0xc0
   140010cfa:	(bad)  
   140010cfb:	(bad)  
   140010cfc:	cmp    al,0xc0
   140010cfe:	(bad)  
   140010cff:	(bad)  
   140010d00:	cmp    eax,eax
   140010d02:	(bad)  
   140010d03:	(bad)  
   140010d04:	cmp    al,0xb8
   140010d06:	repz inc DWORD PTR [rdx+0x7c]
   140010d0a:	xchg   edi,eax
   140010d0b:	inc    DWORD PTR [rdi+0x47]
   140010d0e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010d12:	rex.RXB inc DWORD PTR [r15+0x47]
   140010d16:	rex.RXB mov r15d,0x40474747
	...
   140010d8c:	rex.RXB
   140010d8d:	rex.RXB
   140010d8e:	rex.RXB push r8
   140010d90:	rex.RXB
   140010d91:	rex.RXB
   140010d92:	rex.RXB out dx,eax
   140010d94:	rex.RXB
   140010d95:	rex.RXB
   140010d96:	rex.RXB dec DWORD PTR [r15+0x49]
   140010d9a:	rex.XB dec DWORD PTR [r9-0x4500dba6]
   140010da1:	push   0x6ccaff09
   140010da6:	add    bh,bh
   140010da8:	retf   0x6c
   140010dab:	(bad)  
   140010dac:	(bad)  
   140010dad:	(bad)  
   140010dae:	(bad)  
   140010daf:	(bad)  
   140010db0:	(bad)  
   140010db1:	(bad)  
   140010db2:	(bad)  
   140010db3:	(bad)  
   140010db4:	cmp    al,0xc1
   140010db6:	(bad)  
   140010db7:	(bad)  
   140010db8:	cmp    al,0xc1
   140010dba:	(bad)  
   140010dbb:	(bad)  
   140010dbc:	cmp    eax,0x41ffe7b1
   140010dc1:	test   BYTE PTR [rbx+0x524f46ff],ah
   140010dc7:	inc    DWORD PTR [rdi+0x47]
   140010dca:	rex.RXB inc DWORD PTR [r15+0x47]
   140010dce:	rex.RXB fild WORD PTR [r15+0x47]
   140010dd2:	rex.RXB push r8
	...
   140010e50:	rex.RXB
   140010e51:	rex.RXB
   140010e52:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140010e56:	rex.RXB pop QWORD PTR [r15+0x47]
   140010e5a:	rex.RXB inc DWORD PTR [r15+0x47]
   140010e5e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010e62:	rex.RXB call QWORD PTR [r15+0x4c]
   140010e66:	jmp    FWORD PTR ds:[rax+0x50]
   140010e6a:	xor    eax,0x757575ff
   140010e6f:	push   QWORD PTR [rbp+0x75]
   140010e72:	jne    0x140010e73
   140010e74:	rex.R
   140010e75:	data16 jne 0x140010e77
   140010e78:	rex.RX push rsi
   140010e7a:	pop    rsi
   140010e7b:	inc    DWORD PTR [rdi+0x47]
   140010e7e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010e82:	rex.RXB inc DWORD PTR [r15+0x47]
   140010e86:	rex.RXB inc DWORD PTR [r15+0x47]
   140010e8a:	rex.RXB pop QWORD PTR [r15+0x47]
   140010e8e:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140010f15:	add    BYTE PTR [rax],al
   140010f17:	add    BYTE PTR [rdi+0x47],al
   140010f1a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140010f1e:	rex.RXB jo 0x140010f68
   140010f21:	rex.RXB
   140010f22:	rex.RXB mov r15d,0xef474747
   140010f28:	rex.RXB
   140010f29:	rex.RXB
   140010f2a:	rex.RXB inc DWORD PTR [r15+0x47]
   140010f2e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010f32:	rex.RXB inc DWORD PTR [r15+0x47]
   140010f36:	rex.RXB inc DWORD PTR [r15+0x47]
   140010f3a:	rex.RXB out dx,eax
   140010f3c:	rex.RXB
   140010f3d:	rex.RXB
   140010f3e:	rex.RXB mov r15d,0x70474747
   140010f44:	rex.RXB
   140010f45:	rex.RXB
   140010f46:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14001104d:	add    BYTE PTR [rax],al
   14001104f:	add    bh,bh
   140011051:	(bad)  
   140011052:	(bad)  
   140011053:	(bad)  
   140011054:	(bad)  
   140011055:	inc    DWORD PTR [rax]
   140011057:	add    bh,bh
   140011059:	(bad)  
   14001105a:	(bad)  
   14001105b:	jg     0x14001105c
   14001105d:	inc    DWORD PTR [rax]
   14001105f:	add    bh,bh
   140011061:	(bad)  
   140011062:	clc    
   140011063:	(bad)  
   140011064:	(bad)  
   140011065:	inc    DWORD PTR [rdi-0x1]
   140011068:	(bad)  
   140011069:	jmp    rax
   14001106b:	(bad)  
   14001106c:	(bad)  
   14001106d:	inc    DWORD PTR [rax]
   14001106f:	(bad)  
   140011070:	(bad)  
   140011071:	inc    eax
   140011073:	add    edi,edi
   140011075:	inc    DWORD PTR [rax]
   140011077:	(bad)  
   140011078:	(bad)  
   140011079:	inc    DWORD PTR [rax+0xffff01]
   14001107f:	(bad)  
   140011080:	(bad)  
   140011081:	inc    BYTE PTR [rax]
   140011083:	add    BYTE PTR [rdi-0x1],bh
   140011086:	add    bh,bh
   140011088:	(bad)  
   140011089:	cld    
   14001108a:	add    BYTE PTR [rax],al
   14001108c:	(bad)  
   14001108d:	inc    DWORD PTR [rax]
   14001108f:	(bad)  
   140011090:	(bad)  
   140011091:	clc    
   140011092:	add    BYTE PTR [rax],al
   140011094:	(bad)  
   140011095:	inc    DWORD PTR [rax]
   140011097:	(bad)  
   140011098:	push   rax
   14001109a:	add    BYTE PTR [rax],al
   14001109c:	ud0    eax,DWORD PTR [rax]
   14001109f:	(bad)  
   1400110a0:	jmp    rax
   1400110a2:	add    BYTE PTR [rax],al
   1400110a4:	(bad)  
   1400110a5:	inc    DWORD PTR [rax]
   1400110a7:	(bad)  
   1400110a8:	inc    eax
   1400110aa:	add    BYTE PTR [rax],al
   1400110ac:	add    edi,edi
   1400110ae:	add    bh,bh
   1400110b0:	inc    DWORD PTR [rax-0xff0000]
   1400110b6:	add    bh,bh
   1400110b8:	inc    DWORD PTR [rax]
   1400110ba:	add    BYTE PTR [rax],al
   1400110bc:	add    bh,bh
   1400110be:	add    bh,bh
   1400110c0:	inc    DWORD PTR [rax]
   1400110c2:	add    BYTE PTR [rax],al
   1400110c4:	add    bh,bh
   1400110c6:	add    bh,bh
   1400110c8:	inc    BYTE PTR [rax]
   1400110ca:	add    BYTE PTR [rax],al
   1400110cc:	add    BYTE PTR [rdi-0x1],bh
   1400110cf:	(bad)  
   1400110d0:	cld    
   1400110d1:	add    BYTE PTR [rax],al
   1400110d3:	add    BYTE PTR [rax],al
   1400110d5:	(bad)  
   1400110d6:	(bad)  
   1400110d7:	(bad)  
   1400110d8:	cld    
   1400110d9:	add    BYTE PTR [rax],al
   1400110db:	add    BYTE PTR [rax],al
   1400110dd:	(bad)  
   1400110de:	(bad)  
   1400110df:	(bad)  
   1400110e0:	clc    
   1400110e1:	add    BYTE PTR [rax],al
   1400110e3:	add    BYTE PTR [rax],al
   1400110e5:	(bad)  
   1400110e6:	(bad)  
   1400110e7:	(bad)  
   1400110e8:	clc    
   1400110e9:	add    BYTE PTR [rax],al
   1400110eb:	add    BYTE PTR [rax],al
   1400110ed:	(bad)  
   1400110ee:	(bad)  
   1400110ef:	push   rax
   1400110f1:	add    BYTE PTR [rax],al
   1400110f3:	add    BYTE PTR [rax],al
   1400110f5:	paddd  mm7,mm7
   1400110f8:	lock add BYTE PTR [rax],al
   1400110fb:	add    BYTE PTR [rax],al
   1400110fd:	paddd  mm7,mm7
   140011100:	lock add BYTE PTR [rax],al
   140011103:	add    BYTE PTR [rax],al
   140011105:	paddd  mm7,mm7
   140011108:	loopne 0x14001110a
   14001110a:	add    BYTE PTR [rax],al
   14001110c:	add    BYTE PTR [rdi],al
   14001110e:	(bad)  
   14001110f:	jmp    rax
   140011111:	add    BYTE PTR [rax],al
   140011113:	add    BYTE PTR [rax],al
   140011115:	(bad)  
   140011116:	(bad)  
   140011117:	jmp    rax
   140011119:	add    BYTE PTR [rax],al
   14001111b:	add    BYTE PTR [rax],al
   14001111d:	(bad)  
   14001111e:	(bad)  
   14001111f:	jmp    rax
   140011121:	add    BYTE PTR [rax],al
   140011123:	add    BYTE PTR [rax],al
   140011125:	(bad)  
   140011126:	(bad)  
   140011127:	jmp    rax
   140011129:	add    BYTE PTR [rax],al
   14001112b:	add    BYTE PTR [rax],al
   14001112d:	(bad)  
   14001112e:	(bad)  
   14001112f:	jmp    rax
   140011131:	add    BYTE PTR [rax],al
   140011133:	add    BYTE PTR [rax],al
   140011135:	(bad)  
   140011136:	sar    bh,1
   140011138:	loopne 0x14001113a
   14001113a:	add    BYTE PTR [rax],al
   14001113c:	add    BYTE PTR [rdi],al
   14001113e:	rex.RXB jmp r8
   140011141:	add    BYTE PTR [rax],al
   140011143:	add    BYTE PTR [rax],al
   140011145:	(bad)  
   140011146:	add    BYTE PTR [rax],al
   140011148:	loopne 0x14001114a
   14001114a:	add    BYTE PTR [rax],al
   14001114c:	add    BYTE PTR [rdi],al
   14001114e:	add    BYTE PTR [rax],al
   140011150:	loopne 0x140011152
   140011152:	add    BYTE PTR [rax],al
   140011154:	add    BYTE PTR [rdi],al
   140011156:	add    BYTE PTR [rax],al
   140011158:	loopne 0x14001115a
   14001115a:	add    BYTE PTR [rax],al
   14001115c:	add    BYTE PTR [rdi],al
   14001115e:	add    BYTE PTR [rax],al
   140011160:	loopne 0x140011162
   140011162:	add    BYTE PTR [rax],al
   140011164:	add    BYTE PTR [rdi],al
   140011166:	rex.RXB jmp r8
   140011169:	add    BYTE PTR [rax],al
   14001116b:	add    BYTE PTR [rax],al
   14001116d:	(bad)  
   14001116e:	add    bh,bh
   140011170:	loopne 0x140011172
   140011172:	add    BYTE PTR [rax],al
   140011174:	add    BYTE PTR [rdi],al
   140011176:	add    bh,bh
   140011178:	loopne 0x14001117a
   14001117a:	add    BYTE PTR [rax],al
   14001117c:	add    BYTE PTR [rdi],al
   14001117e:	add    bh,bh
   140011180:	loopne 0x140011182
   140011182:	add    BYTE PTR [rax],al
   140011184:	add    BYTE PTR [rdi],al
   140011186:	add    bh,bh
   140011188:	loopne 0x14001118a
   14001118a:	add    BYTE PTR [rax],al
   14001118c:	add    BYTE PTR [rdi],al
   14001118e:	add    bh,bh
   140011190:	rol    BYTE PTR [rax],0x0
   140011193:	add    BYTE PTR [rax],al
   140011195:	(bad)  
   140011196:	add    bh,bh
   140011198:	rol    BYTE PTR [rax],0x0
   14001119b:	add    BYTE PTR [rax],al
   14001119d:	(bad)  
   14001119e:	add    bh,bh
   1400111a0:	inc    eax
   1400111a2:	add    BYTE PTR [rax],al
   1400111a4:	add    edi,edi
   1400111a6:	add    bh,bh
   1400111a8:	(bad)  
   1400111a9:	clc    
   1400111aa:	add    BYTE PTR [rax],al
   1400111ac:	(bad)  
   1400111ad:	inc    DWORD PTR [rax]
   1400111af:	(bad)  
   1400111b0:	(bad)  
   1400111b1:	inc    BYTE PTR [rax]
   1400111b3:	add    BYTE PTR [rdi-0x1],bh
   1400111b6:	add    bh,bh
   1400111b8:	(bad)  
   1400111b9:	inc    DWORD PTR [rax]
   1400111bb:	add    bh,bh
   1400111bd:	inc    DWORD PTR [rax]
   1400111bf:	(bad)  
   1400111c0:	(bad)  
   1400111c1:	inc    eax
   1400111c3:	add    edi,edi
   1400111c5:	inc    DWORD PTR [rax]
   1400111c7:	(bad)  
   1400111c8:	(bad)  
   1400111c9:	(bad)  
   1400111ca:	(bad)  
   1400111cb:	(bad)  
   1400111cc:	(bad)  
   1400111cd:	(bad)  
   1400111ce:	(bad)  
   1400111cf:	jmp    FWORD PTR [rax]
   1400111d1:	add    BYTE PTR [rax],al
   1400111d3:	add    BYTE PTR [rax],ch
   1400111d5:	add    BYTE PTR [rax],al
   1400111d7:	add    BYTE PTR [rax+0x0],dl
   1400111da:	add    BYTE PTR [rax],al
   1400111dc:	add    DWORD PTR [rax],eax
   1400111de:	and    BYTE PTR [rax],al
	...
   1400112e0:	rex.RXB
   1400112e1:	rex.RXB
   1400112e2:	rex.RXB push r8
   1400112e4:	rex.RXB
   1400112e5:	rex.RXB
   1400112e6:	rex.RXB fild WORD PTR [r15+0x47]
   1400112ea:	rex.RXB fild WORD PTR [r15+0x47]
   1400112ee:	rex.RXB push r8
	...
   140011378:	rex.RXB
   140011379:	rex.RXB
   14001137a:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14001137e:	rex.RXB mov r15d,0xff474747
   140011384:	mov    WORD PTR [rsp+rcx*4-0x73737301],cs
   14001138b:	inc    DWORD PTR [rdi+0x47]
   14001138e:	rex.RXB inc DWORD PTR [r15+0x47]
   140011392:	rex.RXB mov r15d,0x20474747
	...
   140011414:	rex.RXB
   140011415:	rex.RXB
   140011416:	rex.RXB (bad) 
   140011418:	rex.RXB
   140011419:	rex.RXB
   14001141a:	rex.RXB out dx,eax
   14001141c:	rex.RB push r13
   14001141e:	pop    rsi
   14001141f:	(bad)  
   140011420:	cmp    DWORD PTR [rbp-0x30],ebx
   140011426:	(bad)  
   140011427:	(bad)  
   140011428:	(bad)  
   140011429:	(bad)  
   14001142a:	(bad)  
   14001142b:	jmp    QWORD PTR [rdi+rdx*2+0x4a57ff12]
   140011432:	inc    DWORD PTR ds:[rdi+0x47]
   140011436:	rex.RXB out dx,eax
   140011438:	rex.RXB
   140011439:	rex.RXB
   14001143a:	rex.RXB (bad) 
	...
   1400114ac:	rex.RXB
   1400114ad:	rex.RXB
   1400114ae:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   1400114b2:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400114b4:	rex.RXB
   1400114b5:	rex.RXB
   1400114b6:	rex.RXB (bad) 
   1400114b8:	(bad)  
   1400114b9:	jns    0x140011452
   1400114bb:	push   QWORD PTR [rsi]
   1400114bd:	mov    bl,0xf3
   1400114bf:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x14001137f
   1400114c5:	(bad)  
   1400114c6:	(bad)  
   1400114c7:	(bad)  
   1400114c8:	(bad)  
   1400114c9:	(bad)  
   1400114ca:	(bad)  
   1400114cb:	inc    ebx
   1400114cd:	pop    rsp
   1400114ce:	add    bh,bh
   1400114d0:	mov    ebx,0x7dff045b
   1400114d5:	push   rax
   1400114d6:	sub    bh,bh
   1400114d8:	rex.RXB
   1400114d9:	rex.RXB
   1400114da:	rex.RXB inc DWORD PTR [r15+0x47]
   1400114de:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400114e0:	rex.RXB
   1400114e1:	rex.RXB
   1400114e2:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140011545:	add    BYTE PTR [rax],al
   140011547:	add    BYTE PTR [rdi+0x47],al
   14001154a:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14001154e:	rex.RXB iret 
   140011550:	rex.RX
   140011551:	rex.WRX push rdx
   140011553:	(bad)  
   140011554:	cmp    bl,BYTE PTR [rsi-0x44c90030]
   14001155a:	(bad)  
   14001155b:	push   QWORD PTR [rip+0x35fffeba]        # 0x17601141b
   140011561:	mov    edx,0xfffffffe
   140011566:	(bad)  
   140011567:	(bad)  
   140011568:	(bad)  
   140011569:	(bad)  
   14001156a:	(bad)  
   14001156b:	inc    ebx
   14001156d:	pop    rbp
   14001156e:	add    bh,bh
   140011570:	ret    
   140011571:	pop    rsp
   140011572:	add    bh,bh
   140011574:	ret    
   140011575:	pop    rsp
   140011576:	add    bh,bh
   140011578:	movabs ds:0x47ff43484fff1256,eax
   140011581:	rex.RXB
   140011582:	rex.RXB iret 
   140011584:	rex.RXB
   140011585:	rex.RXB
   140011586:	rex.RXB xor BYTE PTR [r8],r8b
	...
   1400115e1:	add    BYTE PTR [rax],al
   1400115e3:	add    BYTE PTR [rdi+0x47],al
   1400115e6:	rex.RXB
   1400115e7:	rex
   1400115e8:	rex.RXB
   1400115e9:	rex.RXB
   1400115ea:	rex.RXB out dx,eax
   1400115ec:	rex.R pop rbp
   1400115ee:	imul   edi,edi,0xfff3b437
   1400115f4:	ss mov ebx,0xbb36fffe
   1400115fa:	(bad)  
   1400115fb:	push   QWORD PTR [rsi]
   1400115fd:	mov    ebx,0xba35fffe
   140011602:	(bad)  
   140011603:	(bad)  
   140011604:	(bad)  
   140011605:	(bad)  
   140011606:	(bad)  
   140011607:	(bad)  
   140011608:	(bad)  
   140011609:	(bad)  
   14001160a:	(bad)  
   14001160b:	inc    ebx
   14001160d:	pop    rbp
   14001160e:	add    bh,bh
   140011610:	ret    
   140011611:	pop    rbp
   140011612:	add    bh,bh
   140011614:	ret    
   140011615:	pop    rsp
   140011616:	add    bh,bh
   140011618:	ret    
   140011619:	pop    rsp
   14001161a:	add    bh,bh
   14001161c:	mov    ebx,0x5eff045a
   140011621:	rex.WXB cmp dil,r15b
   140011624:	rex.RXB
   140011625:	rex.RXB
   140011626:	rex.RXB out dx,eax
   140011628:	rex.RXB
   140011629:	rex.RXB
   14001162a:	rex.RXB
   14001162b:	add    BYTE PTR [rax],al
	...
   14001167e:	add    BYTE PTR [rax],al
   140011680:	rex.RXB
   140011681:	rex.RXB
   140011682:	rex.RXB (bad) 
   140011684:	rex.RXB
   140011685:	rex.RXB
   140011686:	rex.RXB inc DWORD PTR [r9+0x73]
   14001168a:	mov    edi,?
   14001168c:	(bad)  
   14001168d:	mov    esp,0xbc37fffe
   140011692:	(bad)  
   140011693:	push   QWORD PTR [rsi]
   140011695:	mov    ebx,0xbb36fffe
   14001169a:	(bad)  
   14001169b:	push   QWORD PTR [rsi]
   14001169d:	mov    ebx,0xbb36fffe
   1400116a2:	(bad)  
   1400116a3:	(bad)  
   1400116a4:	(bad)  
   1400116a5:	(bad)  
   1400116a6:	(bad)  
   1400116a7:	(bad)  
   1400116a8:	(bad)  
   1400116a9:	(bad)  
   1400116aa:	(bad)  
   1400116ab:	inc    ebx
   1400116ad:	pop    rsi
   1400116ae:	add    bh,bh
   1400116b0:	ret    
   1400116b1:	pop    rbp
   1400116b2:	add    bh,bh
   1400116b4:	ret    
   1400116b5:	pop    rbp
   1400116b6:	add    bh,bh
   1400116b8:	ret    
   1400116b9:	pop    rsp
   1400116ba:	add    bh,bh
   1400116bc:	ret    
   1400116bd:	pop    rsp
   1400116be:	add    bh,bh
   1400116c0:	ret    0x5b
   1400116c3:	push   QWORD PTR [rbp+0x4f]
   1400116c6:	sub    al,0xff
   1400116c8:	rex.RXB
   1400116c9:	rex.RXB
   1400116ca:	rex.RXB inc DWORD PTR [r15+0x47]
   1400116ce:	rex.RXB (bad) 
	...
   14001171c:	rex.RXB
   14001171d:	rex.RXB
   14001171e:	rex.RXB (bad) 
   140011720:	rex.RXB
   140011721:	rex.RXB
   140011722:	rex.RXB inc DWORD PTR [r9+0x73]
   140011726:	mov    edi,?
   140011728:	(bad)  
   140011729:	mov    esp,0xbc37fffe
   14001172e:	(bad)  
   14001172f:	push   QWORD PTR [rdi]
   140011731:	mov    esp,0xbc37fffe
   140011736:	(bad)  
   140011737:	push   QWORD PTR [rsi]
   140011739:	mov    ebx,0xbb36fffe
   14001173e:	(bad)  
   14001173f:	push   QWORD PTR [rsi]
   140011741:	mov    ebx,0xfffffffe
   140011746:	(bad)  
   140011747:	(bad)  
   140011748:	(bad)  
   140011749:	(bad)  
   14001174a:	(bad)  
   14001174b:	inc    esp
   14001174d:	pop    rsi
   14001174e:	add    bh,bh
   140011750:	ret    
   140011751:	pop    rsi
   140011752:	add    bh,bh
   140011754:	ret    
   140011755:	pop    rbp
   140011756:	add    bh,bh
   140011758:	ret    
   140011759:	pop    rbp
   14001175a:	add    bh,bh
   14001175c:	ret    
   14001175d:	pop    rsp
   14001175e:	add    bh,bh
   140011760:	ret    
   140011761:	pop    rsp
   140011762:	add    bh,bh
   140011764:	ret    0x5b
   140011767:	push   QWORD PTR [rbp+0x4f]
   14001176a:	sub    al,0xff
   14001176c:	rex.RXB
   14001176d:	rex.RXB
   14001176e:	rex.RXB inc DWORD PTR [r15+0x47]
   140011772:	rex.RXB (bad) 
	...
   1400117b8:	rex.RXB
   1400117b9:	rex.RXB
   1400117ba:	rex.RXB (bad) 
   1400117bc:	rex.RXB
   1400117bd:	rex.RXB
   1400117be:	rex.RXB inc DWORD PTR [r9+0x73]
   1400117c2:	mov    edi,?
   1400117c4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400117ca:	(bad)  
   1400117cb:	push   QWORD PTR [rdi]
   1400117cd:	mov    esp,0xbc37fffe
   1400117d2:	(bad)  
   1400117d3:	push   QWORD PTR [rdi]
   1400117d5:	mov    esp,0xbc37fffe
   1400117da:	(bad)  
   1400117db:	push   QWORD PTR [rsi]
   1400117dd:	mov    ebx,0xbb36fffe
   1400117e2:	(bad)  
   1400117e3:	(bad)  
   1400117e4:	(bad)  
   1400117e5:	(bad)  
   1400117e6:	(bad)  
   1400117e7:	(bad)  
   1400117e8:	(bad)  
   1400117e9:	(bad)  
   1400117ea:	(bad)  
   1400117eb:	inc    esp
   1400117ed:	pop    rsi
   1400117ee:	add    bh,bh
   1400117f0:	(bad)  
   1400117f1:	pop    rsi
   1400117f2:	add    bh,bh
   1400117f4:	ret    
   1400117f5:	pop    rsi
   1400117f6:	add    bh,bh
   1400117f8:	ret    
   1400117f9:	pop    rbp
   1400117fa:	add    bh,bh
   1400117fc:	ret    
   1400117fd:	pop    rbp
   1400117fe:	add    bh,bh
   140011800:	ret    
   140011801:	pop    rsp
   140011802:	add    bh,bh
   140011804:	ret    
   140011805:	pop    rsp
   140011806:	add    bh,bh
   140011808:	ret    0x5b
   14001180b:	push   QWORD PTR [rbp+0x4f]
   14001180e:	sub    al,0xff
   140011810:	rex.RXB
   140011811:	rex.RXB
   140011812:	rex.RXB inc DWORD PTR [r15+0x47]
   140011816:	rex.RXB (bad) 
	...
   140011854:	rex.RXB
   140011855:	rex.RXB
   140011856:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14001185a:	rex.RXB inc DWORD PTR [r10+0x73]
   14001185e:	mov    edi,?
   140011860:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011866:	(bad)  
   140011867:	(bad)  
   140011868:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001186e:	(bad)  
   14001186f:	push   QWORD PTR [rdi]
   140011871:	mov    esp,0xbc37fffe
   140011876:	(bad)  
   140011877:	push   QWORD PTR [rdi]
   140011879:	mov    esp,0xbc37fffe
   14001187e:	(bad)  
   14001187f:	push   QWORD PTR [rsi]
   140011881:	mov    ebx,0xfffffffe
   140011886:	(bad)  
   140011887:	(bad)  
   140011888:	(bad)  
   140011889:	(bad)  
   14001188a:	(bad)  
   14001188b:	inc    esp
   14001188d:	pop    rdi
   14001188e:	add    bh,bh
   140011890:	(bad)  
   140011891:	pop    rsi
   140011892:	add    bh,bh
   140011894:	(bad)  
   140011895:	pop    rsi
   140011896:	add    bh,bh
   140011898:	ret    
   140011899:	pop    rsi
   14001189a:	add    bh,bh
   14001189c:	ret    
   14001189d:	pop    rbp
   14001189e:	add    bh,bh
   1400118a0:	ret    
   1400118a1:	pop    rbp
   1400118a2:	add    bh,bh
   1400118a4:	ret    
   1400118a5:	pop    rsp
   1400118a6:	add    bh,bh
   1400118a8:	ret    
   1400118a9:	pop    rsp
   1400118aa:	add    bh,bh
   1400118ac:	ret    0x5b
   1400118af:	push   QWORD PTR [rbp+0x4f]
   1400118b2:	sub    al,0xff
   1400118b4:	rex.RXB
   1400118b5:	rex.RXB
   1400118b6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400118ba:	rex.RXB xor BYTE PTR [r8],r8b
	...
   1400118ed:	add    BYTE PTR [rax],al
   1400118ef:	add    BYTE PTR [rdi+0x47],al
   1400118f2:	rex.RXB and BYTE PTR [r15+0x47],r8b
   1400118f6:	rex.RXB out dx,eax
   1400118f8:	rex.XB ins BYTE PTR es:[rdi],dx
   1400118fa:	cmp    bh,0x39
   1400118fd:	mov    esi,0xbd39fffe
   140011902:	(bad)  
   140011903:	(bad)  
   140011904:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001190a:	(bad)  
   14001190b:	(bad)  
   14001190c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140011912:	(bad)  
   140011913:	push   QWORD PTR [rdi]
   140011915:	mov    esp,0xbc37fffe
   14001191a:	(bad)  
   14001191b:	push   QWORD PTR [rdi]
   14001191d:	mov    esp,0xbc37fffe
   140011922:	(bad)  
   140011923:	(bad)  
   140011924:	(bad)  
   140011925:	(bad)  
   140011926:	(bad)  
   140011927:	(bad)  
   140011928:	(bad)  
   140011929:	(bad)  
   14001192a:	(bad)  
   14001192b:	inc    esp
   14001192d:	pop    rdi
   14001192e:	add    bh,bh
   140011930:	(bad)  
   140011931:	pop    rdi
   140011932:	add    bh,bh
   140011934:	(bad)  
   140011935:	pop    rsi
   140011936:	add    bh,bh
   140011938:	(bad)  
   140011939:	pop    rsi
   14001193a:	add    bh,bh
   14001193c:	ret    
   14001193d:	pop    rsi
   14001193e:	add    bh,bh
   140011940:	ret    
   140011941:	pop    rbp
   140011942:	add    bh,bh
   140011944:	ret    
   140011945:	pop    rbp
   140011946:	add    bh,bh
   140011948:	ret    
   140011949:	pop    rsp
   14001194a:	add    bh,bh
   14001194c:	ret    
   14001194d:	pop    rsp
   14001194e:	add    bh,bh
   140011950:	ret    0x5b
   140011953:	jmp    FWORD PTR [rbp+0x4d]
   140011956:	xor    edi,edi
   140011958:	rex.RXB
   140011959:	rex.RXB
   14001195a:	rex.RXB out dx,eax
   14001195c:	rex.RXB
   14001195d:	rex.RXB
   14001195e:	rex.RXB and BYTE PTR [r8],r8b
	...
   14001198d:	add    BYTE PTR [rax],al
   14001198f:	add    BYTE PTR [rdi+0x47],al
   140011992:	rex.RXB iret 
   140011994:	rex.RB pop r13
   140011996:	imul   edi,edi,0xfff3b73a
   14001199c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400119a2:	(bad)  
   1400119a3:	(bad)  
   1400119a4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400119aa:	(bad)  
   1400119ab:	(bad)  
   1400119ac:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400119b2:	(bad)  
   1400119b3:	(bad)  
   1400119b4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400119bb:	push   QWORD PTR [rdi]
   1400119bd:	mov    esp,0xbc37fffe
   1400119c2:	(bad)  
   1400119c3:	(bad)  
   1400119c4:	(bad)  
   1400119c5:	(bad)  
   1400119c6:	(bad)  
   1400119c7:	(bad)  
   1400119c8:	(bad)  
   1400119c9:	(bad)  
   1400119ca:	(bad)  
   1400119cb:	inc    esp
   1400119cd:	(bad)  
   1400119ce:	add    bh,bh
   1400119d0:	(bad)  
   1400119d1:	pop    rdi
   1400119d2:	add    bh,bh
   1400119d4:	(bad)  
   1400119d5:	pop    rdi
   1400119d6:	add    bh,bh
   1400119d8:	(bad)  
   1400119d9:	pop    rsi
   1400119da:	add    bh,bh
   1400119dc:	(bad)  
   1400119dd:	pop    rsi
   1400119de:	add    bh,bh
   1400119e0:	ret    
   1400119e1:	pop    rsi
   1400119e2:	add    bh,bh
   1400119e4:	ret    
   1400119e5:	pop    rbp
   1400119e6:	add    bh,bh
   1400119e8:	ret    
   1400119e9:	pop    rbp
   1400119ea:	add    bh,bh
   1400119ec:	ret    
   1400119ed:	pop    rsp
   1400119ee:	add    bh,bh
   1400119f0:	ret    
   1400119f1:	pop    rsp
   1400119f2:	add    bh,bh
   1400119f4:	mov    ebx,0x5eff045a
   1400119f9:	rex.WXB cmp dil,r15b
   1400119fc:	rex.RXB
   1400119fd:	rex.RXB
   1400119fe:	rex.RXB iret 
	...
   140011a2c:	rex.RXB
   140011a2d:	rex.RXB
   140011a2e:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140011a33:	(bad)  
   140011a34:	cmp    al,0xa8
   140011a36:	fdiv   st(7),st
   140011a38:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140011a3e:	(bad)  
   140011a3f:	(bad)  
   140011a40:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011a46:	(bad)  
   140011a47:	(bad)  
   140011a48:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140011a4e:	(bad)  
   140011a4f:	(bad)  
   140011a50:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011a56:	(bad)  
   140011a57:	(bad)  
   140011a58:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140011a5f:	push   QWORD PTR [rdi]
   140011a61:	mov    esp,0xfffffffe
   140011a66:	(bad)  
   140011a67:	(bad)  
   140011a68:	(bad)  
   140011a69:	(bad)  
   140011a6a:	(bad)  
   140011a6b:	inc    ebp
   140011a6d:	(bad)  
   140011a6e:	add    bh,bh
   140011a70:	(bad)  
   140011a71:	(bad)  
   140011a72:	add    bh,bh
   140011a74:	(bad)  
   140011a75:	pop    rdi
   140011a76:	add    bh,bh
   140011a78:	(bad)  
   140011a79:	pop    rdi
   140011a7a:	add    bh,bh
   140011a7c:	(bad)  
   140011a7d:	pop    rsi
   140011a7e:	add    bh,bh
   140011a80:	(bad)  
   140011a81:	pop    rsi
   140011a82:	add    bh,bh
   140011a84:	ret    
   140011a85:	pop    rsi
   140011a86:	add    bh,bh
   140011a88:	ret    
   140011a89:	pop    rbp
   140011a8a:	add    bh,bh
   140011a8c:	ret    
   140011a8d:	pop    rbp
   140011a8e:	add    bh,bh
   140011a90:	ret    
   140011a91:	pop    rsp
   140011a92:	add    bh,bh
   140011a94:	ret    
   140011a95:	pop    rsp
   140011a96:	add    bh,bh
   140011a98:	stos   DWORD PTR es:[rdi],eax
   140011a99:	push   rdi
   140011a9a:	or     eax,0x474747ff
   140011a9f:	inc    DWORD PTR [rdi+0x47]
   140011aa2:	rex.RXB add BYTE PTR [r8],0x0
	...
   140011ac6:	add    BYTE PTR [rax],al
   140011ac8:	rex.RXB
   140011ac9:	rex.RXB
   140011aca:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140011ace:	rex.RXB out dx,eax
   140011ad0:	and    DWORD PTR [r11-0x140c501],0xffffffff
   140011ad8:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140011ade:	(bad)  
   140011adf:	(bad)  
   140011ae0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011ae6:	(bad)  
   140011ae7:	(bad)  
   140011ae8:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140011aee:	(bad)  
   140011aef:	(bad)  
   140011af0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011af6:	(bad)  
   140011af7:	(bad)  
   140011af8:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140011afe:	(bad)  
   140011aff:	push   QWORD PTR [rdi]
   140011b01:	mov    esp,0xfffffffe
   140011b06:	(bad)  
   140011b07:	(bad)  
   140011b08:	(bad)  
   140011b09:	(bad)  
   140011b0a:	(bad)  
   140011b0b:	inc    ebp
   140011b0d:	(bad)  
   140011b0e:	add    bh,bh
   140011b10:	(bad)
   140011b13:	inc    esp
   140011b15:	(bad)  
   140011b16:	add    bh,bh
   140011b18:	(bad)  
   140011b19:	pop    rdi
   140011b1a:	add    bh,bh
   140011b1c:	(bad)  
   140011b1d:	pop    rdi
   140011b1e:	add    bh,bh
   140011b20:	(bad)  
   140011b21:	pop    rsi
   140011b22:	add    bh,bh
   140011b24:	(bad)  
   140011b25:	pop    rsi
   140011b26:	add    bh,bh
   140011b28:	ret    
   140011b29:	pop    rsi
   140011b2a:	add    bh,bh
   140011b2c:	ret    
   140011b2d:	pop    rbp
   140011b2e:	add    bh,bh
   140011b30:	ret    
   140011b31:	pop    rbp
   140011b32:	add    bh,bh
   140011b34:	ret    
   140011b35:	pop    rsp
   140011b36:	add    bh,bh
   140011b38:	ret    
   140011b39:	pop    rsp
   140011b3a:	add    bh,bh
   140011b3c:	test   DWORD PTR [rcx+0x24],edx
   140011b3f:	inc    DWORD PTR [rdi+0x47]
   140011b42:	rex.RXB out dx,eax
   140011b44:	rex.RXB
   140011b45:	rex.RXB
   140011b46:	rex.RXB and BYTE PTR [r8],r8b
	...
   140011b65:	add    BYTE PTR [rax],al
   140011b67:	add    BYTE PTR [rdi+0x47],al
   140011b6a:	rex.RXB lahf 
   140011b6c:	rex.RX push rsi
   140011b6e:	pop    rsi
   140011b6f:	(bad)  
   140011b70:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140011b76:	(bad)  
   140011b77:	(bad)  
   140011b78:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140011b7e:	(bad)  
   140011b7f:	(bad)  
   140011b80:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140011b86:	(bad)  
   140011b87:	(bad)  
   140011b88:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011b8e:	(bad)  
   140011b8f:	(bad)  
   140011b90:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140011b96:	(bad)  
   140011b97:	(bad)  
   140011b98:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011b9e:	(bad)  
   140011b9f:	(bad)  
   140011ba0:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   140011ba7:	(bad)  
   140011ba8:	(bad)  
   140011ba9:	(bad)  
   140011baa:	(bad)  
   140011bab:	inc    ebp
   140011bad:	(bad)  
   140011bae:	add    bh,bh
   140011bb0:	(bad)
   140011bb3:	inc    ebp
   140011bb5:	(bad)  
   140011bb6:	add    bh,bh
   140011bb8:	(bad)  
   140011bb9:	(bad)  
   140011bba:	add    bh,bh
   140011bbc:	(bad)  
   140011bbd:	pop    rdi
   140011bbe:	add    bh,bh
   140011bc0:	(bad)  
   140011bc1:	pop    rdi
   140011bc2:	add    bh,bh
   140011bc4:	(bad)  
   140011bc5:	pop    rsi
   140011bc6:	add    bh,bh
   140011bc8:	(bad)  
   140011bc9:	pop    rsi
   140011bca:	add    bh,bh
   140011bcc:	ret    
   140011bcd:	pop    rsi
   140011bce:	add    bh,bh
   140011bd0:	ret    
   140011bd1:	pop    rbp
   140011bd2:	add    bh,bh
   140011bd4:	ret    
   140011bd5:	pop    rbp
   140011bd6:	add    bh,bh
   140011bd8:	ret    
   140011bd9:	pop    rsp
   140011bda:	add    bh,bh
   140011bdc:	ret    
   140011bdd:	pop    rsp
   140011bde:	add    bh,bh
   140011be0:	push   rdi
   140011be1:	rex.WX
   140011be2:	inc    DWORD PTR ds:[rdi+0x47]
   140011be6:	rex.RXB lahf 
	...
   140011c04:	rex.RXB
   140011c05:	rex.RXB
   140011c06:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140011c0a:	rex.RXB inc DWORD PTR [r8-0x6d]
   140011c0e:	mov    ecx,0xfec03bff
   140011c13:	(bad)  
   140011c14:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140011c1a:	(bad)  
   140011c1b:	(bad)  
   140011c1c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140011c22:	(bad)  
   140011c23:	(bad)  
   140011c24:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140011c2a:	(bad)  
   140011c2b:	(bad)  
   140011c2c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011c32:	(bad)  
   140011c33:	(bad)  
   140011c34:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140011c3a:	(bad)  
   140011c3b:	(bad)  
   140011c3c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011c42:	(bad)  
   140011c43:	(bad)  
   140011c44:	(bad)  
   140011c45:	(bad)  
   140011c46:	(bad)  
   140011c47:	(bad)  
   140011c48:	(bad)  
   140011c49:	(bad)  
   140011c4a:	(bad)  
   140011c4b:	inc    ebp
   140011c4d:	(bad)  
   140011c4e:	add    bh,bh
   140011c50:	(bad)
   140011c53:	inc    ebp
   140011c55:	(bad)  
   140011c56:	add    bh,bh
   140011c58:	(bad)
   140011c5b:	inc    esp
   140011c5d:	(bad)  
   140011c5e:	add    bh,bh
   140011c60:	(bad)  
   140011c61:	pop    rdi
   140011c62:	add    bh,bh
   140011c64:	(bad)  
   140011c65:	pop    rdi
   140011c66:	add    bh,bh
   140011c68:	(bad)  
   140011c69:	pop    rsi
   140011c6a:	add    bh,bh
   140011c6c:	(bad)  
   140011c6d:	pop    rsi
   140011c6e:	add    bh,bh
   140011c70:	ret    
   140011c71:	pop    rsi
   140011c72:	add    bh,bh
   140011c74:	ret    
   140011c75:	pop    rbp
   140011c76:	add    bh,bh
   140011c78:	ret    
   140011c79:	pop    rbp
   140011c7a:	add    bh,bh
   140011c7c:	ret    
   140011c7d:	pop    rsp
   140011c7e:	add    bh,bh
   140011c80:	xchg   ebp,eax
   140011c81:	push   rsp
   140011c82:	sbb    edi,edi
   140011c84:	rex.RXB
   140011c85:	rex.RXB
   140011c86:	rex.RXB inc DWORD PTR [r15+0x47]
   140011c8a:	rex.RXB and BYTE PTR [r8],r8b
	...
   140011ca1:	add    BYTE PTR [rax],al
   140011ca3:	add    BYTE PTR [rdi+0x47],al
   140011ca6:	rex.RXB lahf 
   140011ca8:	rex.RX push rsi
   140011caa:	pop    rsi
   140011cab:	(bad)  
   140011cac:	cmp    eax,eax
   140011cae:	(bad)  
   140011caf:	(bad)  
   140011cb0:	cmp    eax,eax
   140011cb2:	(bad)  
   140011cb3:	(bad)  
   140011cb4:	cmp    eax,eax
   140011cb6:	(bad)  
   140011cb7:	(bad)  
   140011cb8:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140011cbe:	(bad)  
   140011cbf:	(bad)  
   140011cc0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140011cc6:	(bad)  
   140011cc7:	(bad)  
   140011cc8:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140011cce:	(bad)  
   140011ccf:	(bad)  
   140011cd0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011cd6:	(bad)  
   140011cd7:	(bad)  
   140011cd8:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140011cde:	(bad)  
   140011cdf:	(bad)  
   140011ce0:	cmp    BYTE PTR [rbp-0x2],bh
   140011ce6:	(bad)  
   140011ce7:	(bad)  
   140011ce8:	(bad)  
   140011ce9:	(bad)  
   140011cea:	(bad)  
   140011ceb:	inc    ebp
   140011ced:	(bad)  
   140011cee:	add    bh,bh
   140011cf0:	(bad)
   140011cf3:	inc    ebp
   140011cf5:	(bad)  
   140011cf6:	add    bh,bh
   140011cf8:	(bad)
   140011cfb:	inc    ebp
   140011cfd:	(bad)  
   140011cfe:	add    bh,bh
   140011d00:	(bad)  
   140011d01:	(bad)  
   140011d02:	add    bh,bh
   140011d04:	(bad)  
   140011d05:	pop    rdi
   140011d06:	add    bh,bh
   140011d08:	(bad)  
   140011d09:	pop    rdi
   140011d0a:	add    bh,bh
   140011d0c:	(bad)  
   140011d0d:	pop    rsi
   140011d0e:	add    bh,bh
   140011d10:	(bad)  
   140011d11:	pop    rsi
   140011d12:	add    bh,bh
   140011d14:	ret    
   140011d15:	pop    rsi
   140011d16:	add    bh,bh
   140011d18:	ret    
   140011d19:	pop    rbp
   140011d1a:	add    bh,bh
   140011d1c:	ret    
   140011d1d:	pop    rbp
   140011d1e:	add    bh,bh
   140011d20:	ret    
   140011d21:	pop    rsp
   140011d22:	add    bh,bh
   140011d24:	push   rdi
   140011d25:	rex.WX
   140011d26:	inc    DWORD PTR ds:[rdi+0x47]
   140011d2a:	rex.RXB lahf 
	...
   140011d44:	rex.RXB
   140011d45:	rex.RXB
   140011d46:	rex.RXB out dx,eax
   140011d48:	rex xchg ebx,eax
   140011d4a:	mov    ecx,0xfec03cff
   140011d4f:	(bad)  
   140011d50:	cmp    eax,eax
   140011d52:	(bad)  
   140011d53:	(bad)  
   140011d54:	cmp    eax,eax
   140011d56:	(bad)  
   140011d57:	(bad)  
   140011d58:	cmp    eax,eax
   140011d5a:	(bad)  
   140011d5b:	(bad)  
   140011d5c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140011d62:	(bad)  
   140011d63:	(bad)  
   140011d64:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140011d6a:	(bad)  
   140011d6b:	(bad)  
   140011d6c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140011d72:	(bad)  
   140011d73:	(bad)  
   140011d74:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011d7a:	(bad)  
   140011d7b:	(bad)  
   140011d7c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140011d82:	(bad)  
   140011d83:	(bad)  
   140011d84:	(bad)  
   140011d85:	(bad)  
   140011d86:	(bad)  
   140011d87:	(bad)  
   140011d88:	(bad)  
   140011d89:	(bad)  
   140011d8a:	(bad)  
   140011d8b:	inc    esi
   140011d8d:	(bad)  
   140011d8e:	add    bh,bh
   140011d90:	(bad)
   140011d93:	inc    ebp
   140011d95:	(bad)  
   140011d96:	add    bh,bh
   140011d98:	(bad)
   140011d9b:	inc    ebp
   140011d9d:	(bad)  
   140011d9e:	add    bh,bh
   140011da0:	(bad)
   140011da3:	inc    esp
   140011da5:	(bad)  
   140011da6:	add    bh,bh
   140011da8:	(bad)  
   140011da9:	pop    rdi
   140011daa:	add    bh,bh
   140011dac:	(bad)  
   140011dad:	pop    rdi
   140011dae:	add    bh,bh
   140011db0:	(bad)  
   140011db1:	pop    rsi
   140011db2:	add    bh,bh
   140011db4:	(bad)  
   140011db5:	pop    rsi
   140011db6:	add    bh,bh
   140011db8:	ret    
   140011db9:	pop    rsi
   140011dba:	add    bh,bh
   140011dbc:	ret    
   140011dbd:	pop    rbp
   140011dbe:	add    bh,bh
   140011dc0:	ret    
   140011dc1:	pop    rbp
   140011dc2:	add    bh,bh
   140011dc4:	xchg   ebp,eax
   140011dc5:	push   rsp
   140011dc6:	sbb    edi,edi
   140011dc8:	rex.RXB
   140011dc9:	rex.RXB
   140011dca:	rex.RXB out dx,eax
	...
   140011de0:	rex.RXB
   140011de1:	rex.RXB
   140011de2:	rex.RXB push r8
   140011de4:	rex.RXB
   140011de5:	rex.RXB
   140011de6:	rex.RXB push r12
   140011de9:	hlt    
   140011dea:	hlt    
   140011deb:	(bad)  
   140011dec:	(bad)  
   140011ded:	(bad)  
   140011dee:	(bad)  
   140011def:	(bad)  
   140011df0:	(bad)  
   140011df1:	(bad)  
   140011df2:	(bad)  
   140011df3:	(bad)  
   140011df4:	(bad)  
   140011df5:	(bad)  
   140011df6:	(bad)  
   140011df7:	(bad)  
   140011df8:	(bad)  
   140011df9:	(bad)  
   140011dfa:	(bad)  
   140011dfb:	(bad)  
   140011dfc:	(bad)  
   140011dfd:	(bad)  
   140011dfe:	(bad)  
   140011dff:	(bad)  
   140011e00:	(bad)  
   140011e01:	(bad)  
   140011e02:	(bad)  
   140011e03:	(bad)  
   140011e04:	(bad)  
   140011e05:	(bad)  
   140011e06:	(bad)  
   140011e07:	(bad)  
   140011e08:	(bad)  
   140011e09:	(bad)  
   140011e0a:	(bad)  
   140011e0b:	(bad)  
   140011e0c:	(bad)  
   140011e0d:	(bad)  
   140011e0e:	(bad)  
   140011e0f:	(bad)  
   140011e10:	(bad)  
   140011e11:	(bad)  
   140011e12:	(bad)  
   140011e13:	(bad)  
   140011e14:	(bad)  
   140011e15:	(bad)  
   140011e16:	(bad)  
   140011e17:	(bad)  
   140011e18:	(bad)  
   140011e19:	(bad)  
   140011e1a:	(bad)  
   140011e1b:	(bad)  
   140011e1c:	(bad)  
   140011e1d:	(bad)  
   140011e1e:	(bad)  
   140011e1f:	(bad)  
   140011e20:	(bad)  
   140011e21:	(bad)  
   140011e22:	(bad)  
   140011e23:	(bad)  
   140011e24:	(bad)  
   140011e25:	(bad)  
   140011e26:	(bad)  
   140011e27:	(bad)  
   140011e28:	(bad)  
   140011e29:	(bad)  
   140011e2a:	(bad)  
   140011e2b:	(bad)  
   140011e2c:	(bad)  
   140011e2d:	(bad)  
   140011e2e:	(bad)  
   140011e2f:	(bad)  
   140011e30:	(bad)  
   140011e31:	(bad)  
   140011e32:	(bad)  
   140011e33:	(bad)  
   140011e34:	(bad)  
   140011e35:	(bad)  
   140011e36:	(bad)  
   140011e37:	(bad)  
   140011e38:	(bad)  
   140011e39:	(bad)  
   140011e3a:	(bad)  
   140011e3b:	(bad)  
   140011e3c:	(bad)  
   140011e3d:	(bad)  
   140011e3e:	(bad)  
   140011e3f:	(bad)  
   140011e40:	(bad)  
   140011e41:	(bad)  
   140011e42:	(bad)  
   140011e43:	(bad)  
   140011e44:	(bad)  
   140011e45:	(bad)  
   140011e46:	(bad)  
   140011e47:	(bad)  
   140011e48:	(bad)  
   140011e49:	(bad)  
   140011e4a:	(bad)  
   140011e4b:	(bad)  
   140011e4c:	(bad)  
   140011e4d:	(bad)  
   140011e4e:	(bad)  
   140011e4f:	(bad)  
   140011e50:	(bad)  
   140011e51:	(bad)  
   140011e52:	(bad)  
   140011e53:	(bad)  
   140011e54:	(bad)  
   140011e55:	(bad)  
   140011e56:	(bad)  
   140011e57:	(bad)  
   140011e58:	(bad)  
   140011e59:	(bad)  
   140011e5a:	(bad)  
   140011e5b:	(bad)  
   140011e5c:	(bad)  
   140011e5d:	(bad)  
   140011e5e:	(bad)  
   140011e5f:	(bad)  
   140011e60:	(bad)  
   140011e61:	(bad)  
   140011e62:	(bad)  
   140011e63:	push   rsp
   140011e65:	hlt    
   140011e66:	hlt    
   140011e67:	inc    DWORD PTR [rdi+0x47]
   140011e6a:	rex.RXB inc DWORD PTR [r15+0x47]
   140011e6e:	rex.RXB push r8
	...
   140011e80:	rex.RXB
   140011e81:	rex.RXB
   140011e82:	(bad)
   140011e87:	(bad)  
   140011e88:	(bad)  
   140011e89:	(bad)  
   140011e8a:	(bad)  
   140011e8b:	(bad)  
   140011e8c:	(bad)  
   140011e8d:	(bad)  
   140011e8e:	(bad)  
   140011e8f:	(bad)  
   140011e90:	(bad)  
   140011e91:	(bad)  
   140011e92:	(bad)  
   140011e93:	(bad)  
   140011e94:	(bad)  
   140011e95:	(bad)  
   140011e96:	(bad)  
   140011e97:	(bad)  
   140011e98:	(bad)  
   140011e99:	(bad)  
   140011e9a:	(bad)  
   140011e9b:	(bad)  
   140011e9c:	(bad)  
   140011e9d:	(bad)  
   140011e9e:	(bad)  
   140011e9f:	(bad)  
   140011ea0:	(bad)  
   140011ea1:	(bad)  
   140011ea2:	(bad)  
   140011ea3:	(bad)  
   140011ea4:	(bad)  
   140011ea5:	(bad)  
   140011ea6:	(bad)  
   140011ea7:	(bad)  
   140011ea8:	(bad)  
   140011ea9:	(bad)  
   140011eaa:	(bad)  
   140011eab:	(bad)  
   140011eac:	(bad)  
   140011ead:	(bad)  
   140011eae:	(bad)  
   140011eaf:	(bad)  
   140011eb0:	(bad)  
   140011eb1:	(bad)  
   140011eb2:	(bad)  
   140011eb3:	(bad)  
   140011eb4:	(bad)  
   140011eb5:	(bad)  
   140011eb6:	(bad)  
   140011eb7:	(bad)  
   140011eb8:	(bad)  
   140011eb9:	(bad)  
   140011eba:	(bad)  
   140011ebb:	(bad)  
   140011ebc:	(bad)  
   140011ebd:	(bad)  
   140011ebe:	(bad)  
   140011ebf:	(bad)  
   140011ec0:	(bad)  
   140011ec1:	(bad)  
   140011ec2:	(bad)  
   140011ec3:	(bad)  
   140011ec4:	(bad)  
   140011ec5:	(bad)  
   140011ec6:	(bad)  
   140011ec7:	(bad)  
   140011ec8:	(bad)  
   140011ec9:	(bad)  
   140011eca:	(bad)  
   140011ecb:	(bad)  
   140011ecc:	(bad)  
   140011ecd:	(bad)  
   140011ece:	(bad)  
   140011ecf:	(bad)  
   140011ed0:	(bad)  
   140011ed1:	(bad)  
   140011ed2:	(bad)  
   140011ed3:	(bad)  
   140011ed4:	(bad)  
   140011ed5:	(bad)  
   140011ed6:	(bad)  
   140011ed7:	(bad)  
   140011ed8:	(bad)  
   140011ed9:	(bad)  
   140011eda:	(bad)  
   140011edb:	(bad)  
   140011edc:	(bad)  
   140011edd:	(bad)  
   140011ede:	(bad)  
   140011edf:	(bad)  
   140011ee0:	(bad)  
   140011ee1:	(bad)  
   140011ee2:	(bad)  
   140011ee3:	(bad)  
   140011ee4:	(bad)  
   140011ee5:	(bad)  
   140011ee6:	(bad)  
   140011ee7:	(bad)  
   140011ee8:	(bad)  
   140011ee9:	(bad)  
   140011eea:	(bad)  
   140011eeb:	(bad)  
   140011eec:	(bad)  
   140011eed:	(bad)  
   140011eee:	(bad)  
   140011eef:	(bad)  
   140011ef0:	(bad)  
   140011ef1:	(bad)  
   140011ef2:	(bad)  
   140011ef3:	(bad)  
   140011ef4:	(bad)  
   140011ef5:	(bad)  
   140011ef6:	(bad)  
   140011ef7:	(bad)  
   140011ef8:	(bad)  
   140011ef9:	(bad)  
   140011efa:	(bad)  
   140011efb:	(bad)  
   140011efc:	(bad)  
   140011efd:	(bad)  
   140011efe:	(bad)  
   140011eff:	(bad)  
   140011f00:	(bad)  
   140011f01:	(bad)  
   140011f02:	(bad)  
   140011f03:	(bad)  
   140011f04:	(bad)  
   140011f05:	(bad)  
   140011f06:	(bad)  
   140011f07:	inc    DWORD PTR [rdx+0x64]
   140011f0a:	jne    0x140011f0b
   140011f0c:	rex.RXB
   140011f0d:	rex.RXB
   140011f0e:	rex.RXB pop QWORD PTR [r8]
	...
   140011f1d:	add    BYTE PTR [rax],al
   140011f1f:	add    BYTE PTR [rdi+0x47],al
   140011f22:	rex.RXB iret 
   140011f24:	mov    DWORD PTR [rcx+0x24],ebx
   140011f27:	dec    ecx
   140011f29:	imul   eax,DWORD PTR [rax],0xffffffff
   140011f2c:	leave  
   140011f2d:	imul   eax,DWORD PTR [rax],0xffffffff
   140011f30:	leave  
   140011f31:	push   0x0
   140011f33:	dec    ecx
   140011f35:	push   0x0
   140011f37:	dec    ecx
   140011f39:	imul   eax,DWORD PTR [rax],0x69c9ff
   140011f3f:	dec    eax
   140011f41:	imul   eax,DWORD PTR [rax],0x68c8ff
   140011f47:	dec    eax
   140011f49:	push   0x67c8ff00
   140011f4e:	add    bh,bh
   140011f50:	enter  0x67,0xff
   140011f54:	(bad)  
   140011f55:	data16 add bh,bh
   140011f58:	(bad)  
   140011f59:	data16 add bh,bh
   140011f5c:	(bad)  
   140011f5d:	gs add bh,bh
   140011f60:	(bad)  
   140011f61:	gs add bh,bh
   140011f64:	(bad)  
   140011f65:	(bad)  
   140011f66:	(bad)  
   140011f67:	(bad)  
   140011f68:	(bad)  
   140011f69:	(bad)  
   140011f6a:	(bad)  
   140011f6b:	(bad)  
   140011f6c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011f72:	(bad)  
   140011f73:	(bad)  
   140011f74:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140011f7a:	(bad)  
   140011f7b:	push   QWORD PTR [rdi]
   140011f7d:	mov    esp,0xbc37fffe
   140011f82:	(bad)  
   140011f83:	push   QWORD PTR [rdi]
   140011f85:	mov    esp,0xbc37fffe
   140011f8a:	(bad)  
   140011f8b:	push   QWORD PTR [rsi]
   140011f8d:	mov    ebx,0xbb36fffe
   140011f92:	(bad)  
   140011f93:	push   QWORD PTR [rsi]
   140011f95:	mov    ebx,0xbb36fffe
   140011f9a:	(bad)  
   140011f9b:	push   QWORD PTR [rip+0x35fffeba]        # 0x176011e5b
   140011fa1:	mov    edx,0xba35fffe
   140011fa6:	(bad)  
   140011fa7:	(bad)  
   140011fa8:	and    DWORD PTR ds:[rbx+0x474747ff],0xbf
	...
   140011fbf:	add    BYTE PTR [rdi+0x47],al
   140011fc2:	rex.RXB jmp QWORD PTR [r9-0x3500e9a0]
   140011fc9:	imul   eax,DWORD PTR [rax],0xffffffff
   140011fcc:	leave  
   140011fcd:	imul   eax,DWORD PTR [rax],0xffffffff
   140011fd0:	leave  
   140011fd1:	imul   eax,DWORD PTR [rax],0xffffffff
   140011fd4:	leave  
   140011fd5:	push   0x0
   140011fd7:	dec    ecx
   140011fd9:	push   0x0
   140011fdb:	dec    ecx
   140011fdd:	imul   eax,DWORD PTR [rax],0x69c9ff
   140011fe3:	dec    eax
   140011fe5:	imul   eax,DWORD PTR [rax],0x68c8ff
   140011feb:	dec    eax
   140011fed:	push   0x67c8ff00
   140011ff2:	add    bh,bh
   140011ff4:	enter  0x67,0xff
   140011ff8:	(bad)  
   140011ff9:	data16 add bh,bh
   140011ffc:	(bad)  
   140011ffd:	data16 add bh,bh
   140012000:	(bad)  
   140012001:	gs add bh,bh
   140012004:	(bad)  
   140012005:	(bad)  
   140012006:	(bad)  
   140012007:	(bad)  
   140012008:	(bad)  
   140012009:	(bad)  
   14001200a:	(bad)  
   14001200b:	(bad)  
   14001200c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140012012:	(bad)  
   140012013:	(bad)  
   140012014:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001201a:	(bad)  
   14001201b:	(bad)  
   14001201c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140012023:	push   QWORD PTR [rdi]
   140012025:	mov    esp,0xbc37fffe
   14001202a:	(bad)  
   14001202b:	push   QWORD PTR [rdi]
   14001202d:	mov    esp,0xbb36fffe
   140012032:	(bad)  
   140012033:	push   QWORD PTR [rsi]
   140012035:	mov    ebx,0xbb36fffe
   14001203a:	(bad)  
   14001203b:	push   QWORD PTR [rsi]
   14001203d:	mov    ebx,0xba35fffe
   140012042:	(bad)  
   140012043:	push   QWORD PTR [rip+0x3bfffeba]        # 0x17c011f03
   140012049:	xchg   esi,eax
   14001204a:	(bad)  
   14001204d:	rex.RXB
   14001204e:	rex.RXB inc DWORD PTR [r8]
	...
   14001205d:	add    BYTE PTR [rax],al
   14001205f:	add    BYTE PTR [rdi+0x47],al
   140012062:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   140012069:	ins    BYTE PTR es:[rdi],dx
   14001206a:	add    bh,bh
   14001206c:	retf   0x6b
   14001206f:	dec    ecx
   140012071:	imul   eax,DWORD PTR [rax],0xffffffff
   140012074:	leave  
   140012075:	imul   eax,DWORD PTR [rax],0xffffffff
   140012078:	leave  
   140012079:	push   0x0
   14001207b:	dec    ecx
   14001207d:	push   0x0
   14001207f:	dec    ecx
   140012081:	imul   eax,DWORD PTR [rax],0x69c9ff
   140012087:	dec    eax
   140012089:	imul   eax,DWORD PTR [rax],0x68c8ff
   14001208f:	dec    eax
   140012091:	push   0x67c8ff00
   140012096:	add    bh,bh
   140012098:	enter  0x67,0xff
   14001209c:	(bad)  
   14001209d:	data16 add bh,bh
   1400120a0:	(bad)  
   1400120a1:	data16 add bh,bh
   1400120a4:	(bad)  
   1400120a5:	(bad)  
   1400120a6:	(bad)  
   1400120a7:	(bad)  
   1400120a8:	(bad)  
   1400120a9:	(bad)  
   1400120aa:	(bad)  
   1400120ab:	(bad)  
   1400120ac:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400120b2:	(bad)  
   1400120b3:	(bad)  
   1400120b4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400120ba:	(bad)  
   1400120bb:	(bad)  
   1400120bc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400120c2:	(bad)  
   1400120c3:	push   QWORD PTR [rdi]
   1400120c5:	mov    esp,0xbc37fffe
   1400120ca:	(bad)  
   1400120cb:	push   QWORD PTR [rdi]
   1400120cd:	mov    esp,0xbc37fffe
   1400120d2:	(bad)  
   1400120d3:	push   QWORD PTR [rsi]
   1400120d5:	mov    ebx,0xbb36fffe
   1400120da:	(bad)  
   1400120db:	push   QWORD PTR [rsi]
   1400120dd:	mov    ebx,0xbb36fffe
   1400120e2:	(bad)  
   1400120e3:	push   QWORD PTR [rip+0x3afffeba]        # 0x17b011fa3
   1400120e9:	popf   
   1400120ea:	sar    bh,1
   1400120ec:	rex.RXB
   1400120ed:	rex.RXB
   1400120ee:	rex.RXB inc DWORD PTR [r8]
	...
   1400120fd:	add    BYTE PTR [rax],al
   1400120ff:	add    BYTE PTR [rdi+0x47],al
   140012102:	rex.RXB jmp FWORD PTR [r9-0x3500ed9c]
   140012109:	ins    BYTE PTR es:[rdi],dx
   14001210a:	add    bh,bh
   14001210c:	retf   0x6c
   14001210f:	dec    edx
   140012111:	imul   eax,DWORD PTR [rax],0xffffffff
   140012114:	leave  
   140012115:	imul   eax,DWORD PTR [rax],0xffffffff
   140012118:	leave  
   140012119:	imul   eax,DWORD PTR [rax],0xffffffff
   14001211c:	leave  
   14001211d:	push   0x0
   14001211f:	dec    ecx
   140012121:	push   0x0
   140012123:	dec    ecx
   140012125:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001212b:	dec    eax
   14001212d:	imul   eax,DWORD PTR [rax],0x68c8ff
   140012133:	dec    eax
   140012135:	push   0x67c8ff00
   14001213a:	add    bh,bh
   14001213c:	enter  0x67,0xff
   140012140:	(bad)  
   140012141:	data16 add bh,bh
   140012144:	(bad)  
   140012145:	(bad)  
   140012146:	(bad)  
   140012147:	(bad)  
   140012148:	(bad)  
   140012149:	(bad)  
   14001214a:	(bad)  
   14001214b:	(bad)  
   14001214c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140012152:	(bad)  
   140012153:	(bad)  
   140012154:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001215a:	(bad)  
   14001215b:	(bad)  
   14001215c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140012162:	(bad)  
   140012163:	(bad)  
   140012164:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001216b:	push   QWORD PTR [rdi]
   14001216d:	mov    esp,0xbc37fffe
   140012172:	(bad)  
   140012173:	push   QWORD PTR [rdi]
   140012175:	mov    esp,0xbb36fffe
   14001217a:	(bad)  
   14001217b:	push   QWORD PTR [rsi]
   14001217d:	mov    ebx,0xbb36fffe
   140012182:	(bad)  
   140012183:	push   QWORD PTR [rsi]
   140012185:	mov    ebx,0x9d3afffe
   14001218a:	sar    bh,1
   14001218c:	rex.RXB
   14001218d:	rex.RXB
   14001218e:	rex.RXB inc DWORD PTR [r8]
	...
   14001219d:	add    BYTE PTR [rax],al
   14001219f:	add    BYTE PTR [rdi+0x47],al
   1400121a2:	rex.RXB dec r10d
   1400121a5:	ins    DWORD PTR es:[rdi],dx
   1400121a6:	add    bh,bh
   1400121a8:	retf   0x6d
   1400121ab:	dec    edx
   1400121ad:	ins    BYTE PTR es:[rdi],dx
   1400121ae:	add    bh,bh
   1400121b0:	retf   0x6c
   1400121b3:	dec    edx
   1400121b5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400121b8:	leave  
   1400121b9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400121bc:	leave  
   1400121bd:	imul   eax,DWORD PTR [rax],0xffffffff
   1400121c0:	leave  
   1400121c1:	push   0x0
   1400121c3:	dec    ecx
   1400121c5:	push   0x0
   1400121c7:	dec    ecx
   1400121c9:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400121cf:	dec    eax
   1400121d1:	imul   eax,DWORD PTR [rax],0x68c8ff
   1400121d7:	dec    eax
   1400121d9:	push   0x67c8ff00
   1400121de:	add    bh,bh
   1400121e0:	enter  0x67,0xff
   1400121e4:	(bad)  
   1400121e5:	(bad)  
   1400121e6:	(bad)  
   1400121e7:	(bad)  
   1400121e8:	(bad)  
   1400121e9:	(bad)  
   1400121ea:	(bad)  
   1400121eb:	(bad)  
   1400121ec:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400121f2:	(bad)  
   1400121f3:	(bad)  
   1400121f4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400121fa:	(bad)  
   1400121fb:	(bad)  
   1400121fc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140012202:	(bad)  
   140012203:	(bad)  
   140012204:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001220a:	(bad)  
   14001220b:	push   QWORD PTR [rdi]
   14001220d:	mov    esp,0xbc37fffe
   140012212:	(bad)  
   140012213:	push   QWORD PTR [rdi]
   140012215:	mov    esp,0xbc37fffe
   14001221a:	(bad)  
   14001221b:	push   QWORD PTR [rsi]
   14001221d:	mov    ebx,0xbb36fffe
   140012222:	(bad)  
   140012223:	push   QWORD PTR [rsi]
   140012225:	mov    ebx,0xbb36fffe
   14001222a:	(bad)  
   14001222b:	inc    DWORD PTR [rdi+0x47]
   14001222e:	rex.RXB inc DWORD PTR [r8]
	...
   14001223d:	add    BYTE PTR [rax],al
   14001223f:	add    BYTE PTR [rdi+0x47],al
   140012242:	rex.RXB dec r11d
   140012245:	ins    DWORD PTR es:[rdi],dx
   140012246:	add    bh,bh
   140012248:	retf   0x6d
   14001224b:	dec    edx
   14001224d:	ins    DWORD PTR es:[rdi],dx
   14001224e:	add    bh,bh
   140012250:	retf   0x6c
   140012253:	dec    edx
   140012255:	ins    BYTE PTR es:[rdi],dx
   140012256:	add    bh,bh
   140012258:	retf   0x6b
   14001225b:	dec    ecx
   14001225d:	imul   eax,DWORD PTR [rax],0xffffffff
   140012260:	leave  
   140012261:	imul   eax,DWORD PTR [rax],0xffffffff
   140012264:	leave  
   140012265:	push   0x0
   140012267:	dec    ecx
   140012269:	push   0x0
   14001226b:	dec    ecx
   14001226d:	imul   eax,DWORD PTR [rax],0x69c9ff
   140012273:	dec    eax
   140012275:	imul   eax,DWORD PTR [rax],0x68c8ff
   14001227b:	dec    eax
   14001227d:	push   0x67c8ff00
   140012282:	add    bh,bh
   140012284:	(bad)  
   140012285:	(bad)  
   140012286:	(bad)  
   140012287:	(bad)  
   140012288:	(bad)  
   140012289:	(bad)  
   14001228a:	(bad)  
   14001228b:	(bad)  
   14001228c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140012292:	(bad)  
   140012293:	(bad)  
   140012294:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001229a:	(bad)  
   14001229b:	(bad)  
   14001229c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400122a2:	(bad)  
   1400122a3:	(bad)  
   1400122a4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400122aa:	(bad)  
   1400122ab:	(bad)  
   1400122ac:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400122b3:	push   QWORD PTR [rdi]
   1400122b5:	mov    esp,0xbc37fffe
   1400122ba:	(bad)  
   1400122bb:	push   QWORD PTR [rdi]
   1400122bd:	mov    esp,0xbb36fffe
   1400122c2:	(bad)  
   1400122c3:	push   QWORD PTR [rsi]
   1400122c5:	mov    ebx,0xbb36fffe
   1400122ca:	(bad)  
   1400122cb:	inc    DWORD PTR [rdi+0x47]
   1400122ce:	rex.RXB inc DWORD PTR [r8]
	...
   1400122dd:	add    BYTE PTR [rax],al
   1400122df:	add    BYTE PTR [rdi+0x47],al
   1400122e2:	rex.RXB dec r11d
   1400122e5:	outs   dx,BYTE PTR ds:[rsi]
   1400122e6:	add    bh,bh
   1400122e8:	retf   
   1400122e9:	ins    DWORD PTR es:[rdi],dx
   1400122ea:	add    bh,bh
   1400122ec:	retf   0x6d
   1400122ef:	dec    edx
   1400122f1:	ins    DWORD PTR es:[rdi],dx
   1400122f2:	add    bh,bh
   1400122f4:	retf   0x6c
   1400122f7:	dec    edx
   1400122f9:	ins    BYTE PTR es:[rdi],dx
   1400122fa:	add    bh,bh
   1400122fc:	retf   0x6b
   1400122ff:	dec    ecx
   140012301:	imul   eax,DWORD PTR [rax],0xffffffff
   140012304:	leave  
   140012305:	imul   eax,DWORD PTR [rax],0xffffffff
   140012308:	leave  
   140012309:	push   0x0
   14001230b:	dec    ecx
   14001230d:	push   0x0
   14001230f:	dec    ecx
   140012311:	imul   eax,DWORD PTR [rax],0x69c9ff
   140012317:	dec    eax
   140012319:	imul   eax,DWORD PTR [rax],0x68c8ff
   14001231f:	dec    eax
   140012321:	push   0xffffffffffffff00
   140012326:	(bad)  
   140012327:	(bad)  
   140012328:	(bad)  
   140012329:	(bad)  
   14001232a:	(bad)  
   14001232b:	(bad)  
   14001232c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140012332:	(bad)  
   140012333:	(bad)  
   140012334:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001233a:	(bad)  
   14001233b:	(bad)  
   14001233c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140012342:	(bad)  
   140012343:	(bad)  
   140012344:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001234a:	(bad)  
   14001234b:	(bad)  
   14001234c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140012352:	(bad)  
   140012353:	push   QWORD PTR [rdi]
   140012355:	mov    esp,0xbc37fffe
   14001235a:	(bad)  
   14001235b:	push   QWORD PTR [rdi]
   14001235d:	mov    esp,0xbc37fffe
   140012362:	(bad)  
   140012363:	push   QWORD PTR [rsi]
   140012365:	mov    ebx,0xbb36fffe
   14001236a:	(bad)  
   14001236b:	inc    DWORD PTR [rdi+0x47]
   14001236e:	rex.RXB inc DWORD PTR [r8]
	...
   14001237d:	add    BYTE PTR [rax],al
   14001237f:	add    BYTE PTR [rdi+0x47],al
   140012382:	rex.RXB dec r11d
   140012385:	outs   dx,BYTE PTR ds:[rsi]
   140012386:	add    bh,bh
   140012388:	retf   
   140012389:	outs   dx,BYTE PTR ds:[rsi]
   14001238a:	add    bh,bh
   14001238c:	retf   
   14001238d:	ins    DWORD PTR es:[rdi],dx
   14001238e:	add    bh,bh
   140012390:	retf   0x6d
   140012393:	dec    edx
   140012395:	ins    DWORD PTR es:[rdi],dx
   140012396:	add    bh,bh
   140012398:	retf   0x6c
   14001239b:	dec    edx
   14001239d:	ins    BYTE PTR es:[rdi],dx
   14001239e:	add    bh,bh
   1400123a0:	retf   0x6b
   1400123a3:	dec    ecx
   1400123a5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400123a8:	leave  
   1400123a9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400123ac:	leave  
   1400123ad:	push   0x0
   1400123af:	dec    ecx
   1400123b1:	push   0x0
   1400123b3:	dec    ecx
   1400123b5:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400123bb:	dec    eax
   1400123bd:	imul   eax,DWORD PTR [rax],0x68c8ff
   1400123c3:	(bad)  
   1400123c4:	(bad)  
   1400123c5:	(bad)  
   1400123c6:	(bad)  
   1400123c7:	(bad)  
   1400123c8:	(bad)  
   1400123c9:	(bad)  
   1400123ca:	(bad)  
   1400123cb:	(bad)  
   1400123cc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400123d2:	(bad)  
   1400123d3:	(bad)  
   1400123d4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400123da:	(bad)  
   1400123db:	(bad)  
   1400123dc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400123e2:	(bad)  
   1400123e3:	(bad)  
   1400123e4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400123ea:	(bad)  
   1400123eb:	(bad)  
   1400123ec:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400123f2:	(bad)  
   1400123f3:	(bad)  
   1400123f4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400123fb:	push   QWORD PTR [rdi]
   1400123fd:	mov    esp,0xbc37fffe
   140012402:	(bad)  
   140012403:	push   QWORD PTR [rdi]
   140012405:	mov    esp,0xbb36fffe
   14001240a:	(bad)  
   14001240b:	inc    DWORD PTR [rdi+0x47]
   14001240e:	rex.RXB inc DWORD PTR [r8]
	...
   14001241d:	add    BYTE PTR [rax],al
   14001241f:	add    BYTE PTR [rdi+0x47],al
   140012422:	rex.RXB dec r11d
   140012425:	outs   dx,DWORD PTR ds:[rsi]
   140012426:	add    bh,bh
   140012428:	retf   
   140012429:	outs   dx,BYTE PTR ds:[rsi]
   14001242a:	add    bh,bh
   14001242c:	retf   
   14001242d:	outs   dx,BYTE PTR ds:[rsi]
   14001242e:	add    bh,bh
   140012430:	retf   
   140012431:	ins    DWORD PTR es:[rdi],dx
   140012432:	add    bh,bh
   140012434:	retf   0x6d
   140012437:	dec    edx
   140012439:	ins    DWORD PTR es:[rdi],dx
   14001243a:	add    bh,bh
   14001243c:	retf   0x6c
   14001243f:	dec    edx
   140012441:	ins    BYTE PTR es:[rdi],dx
   140012442:	add    bh,bh
   140012444:	retf   0x6b
   140012447:	dec    ecx
   140012449:	imul   eax,DWORD PTR [rax],0xffffffff
   14001244c:	leave  
   14001244d:	imul   eax,DWORD PTR [rax],0xffffffff
   140012450:	leave  
   140012451:	push   0x0
   140012453:	dec    ecx
   140012455:	push   0x0
   140012457:	dec    ecx
   140012459:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001245f:	dec    eax
   140012461:	imul   eax,DWORD PTR [rax],0xffffffff
   140012467:	(bad)  
   140012468:	(bad)  
   140012469:	(bad)  
   14001246a:	(bad)  
   14001246b:	(bad)  
   14001246c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140012472:	(bad)  
   140012473:	(bad)  
   140012474:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14001247a:	(bad)  
   14001247b:	(bad)  
   14001247c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140012482:	(bad)  
   140012483:	(bad)  
   140012484:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14001248a:	(bad)  
   14001248b:	(bad)  
   14001248c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140012492:	(bad)  
   140012493:	(bad)  
   140012494:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001249a:	(bad)  
   14001249b:	push   QWORD PTR [rdi]
   14001249d:	mov    esp,0xbc37fffe
   1400124a2:	(bad)  
   1400124a3:	push   QWORD PTR [rdi]
   1400124a5:	mov    esp,0xbc37fffe
   1400124aa:	(bad)  
   1400124ab:	inc    DWORD PTR [rdi+0x47]
   1400124ae:	rex.RXB inc DWORD PTR [r8]
	...
   1400124bd:	add    BYTE PTR [rax],al
   1400124bf:	add    BYTE PTR [rdi+0x47],al
   1400124c2:	rex.RXB dec r11d
   1400124c5:	outs   dx,DWORD PTR ds:[rsi]
   1400124c6:	add    bh,bh
   1400124c8:	retf   
   1400124c9:	outs   dx,DWORD PTR ds:[rsi]
   1400124ca:	add    bh,bh
   1400124cc:	retf   
   1400124cd:	outs   dx,BYTE PTR ds:[rsi]
   1400124ce:	add    bh,bh
   1400124d0:	retf   
   1400124d1:	outs   dx,BYTE PTR ds:[rsi]
   1400124d2:	add    bh,bh
   1400124d4:	retf   
   1400124d5:	ins    DWORD PTR es:[rdi],dx
   1400124d6:	add    bh,bh
   1400124d8:	retf   0x6d
   1400124db:	dec    edx
   1400124dd:	ins    DWORD PTR es:[rdi],dx
   1400124de:	add    bh,bh
   1400124e0:	retf   0x6c
   1400124e3:	dec    edx
   1400124e5:	ins    BYTE PTR es:[rdi],dx
   1400124e6:	add    bh,bh
   1400124e8:	retf   0x6b
   1400124eb:	dec    ecx
   1400124ed:	imul   eax,DWORD PTR [rax],0xffffffff
   1400124f0:	leave  
   1400124f1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400124f4:	leave  
   1400124f5:	push   0x0
   1400124f7:	dec    ecx
   1400124f9:	push   0x0
   1400124fb:	dec    ecx
   1400124fd:	imul   eax,DWORD PTR [rax],0x69c9ff
   140012503:	(bad)  
   140012504:	(bad)  
   140012505:	(bad)  
   140012506:	(bad)  
   140012507:	(bad)  
   140012508:	(bad)  
   140012509:	(bad)  
   14001250a:	(bad)  
   14001250b:	(bad)  
   14001250c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140012512:	(bad)  
   140012513:	(bad)  
   140012514:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001251a:	(bad)  
   14001251b:	(bad)  
   14001251c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140012522:	(bad)  
   140012523:	(bad)  
   140012524:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001252a:	(bad)  
   14001252b:	(bad)  
   14001252c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140012532:	(bad)  
   140012533:	(bad)  
   140012534:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001253a:	(bad)  
   14001253b:	(bad)  
   14001253c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140012543:	push   QWORD PTR [rdi]
   140012545:	mov    esp,0xbc37fffe
   14001254a:	(bad)  
   14001254b:	inc    DWORD PTR [rdi+0x47]
   14001254e:	rex.RXB inc DWORD PTR [r8]
	...
   14001255d:	add    BYTE PTR [rax],al
   14001255f:	add    BYTE PTR [rdi+0x47],al
   140012562:	rex.RXB dec r12d
   140012565:	jo     0x140012567
   140012567:	dec    ebx
   140012569:	outs   dx,DWORD PTR ds:[rsi]
   14001256a:	add    bh,bh
   14001256c:	retf   
   14001256d:	outs   dx,DWORD PTR ds:[rsi]
   14001256e:	add    bh,bh
   140012570:	retf   
   140012571:	outs   dx,BYTE PTR ds:[rsi]
   140012572:	add    bh,bh
   140012574:	retf   
   140012575:	outs   dx,BYTE PTR ds:[rsi]
   140012576:	add    bh,bh
   140012578:	retf   
   140012579:	ins    DWORD PTR es:[rdi],dx
   14001257a:	add    bh,bh
   14001257c:	retf   0x6d
   14001257f:	dec    edx
   140012581:	ins    DWORD PTR es:[rdi],dx
   140012582:	add    bh,bh
   140012584:	retf   0x6c
   140012587:	dec    edx
   140012589:	ins    BYTE PTR es:[rdi],dx
   14001258a:	add    bh,bh
   14001258c:	retf   0x6b
   14001258f:	dec    ecx
   140012591:	imul   eax,DWORD PTR [rax],0xffffffff
   140012594:	leave  
   140012595:	imul   eax,DWORD PTR [rax],0xffffffff
   140012598:	leave  
   140012599:	push   0x0
   14001259b:	dec    ecx
   14001259d:	push   0x0
   14001259f:	dec    ecx
   1400125a1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400125a7:	(bad)  
   1400125a8:	(bad)  
   1400125a9:	(bad)  
   1400125aa:	(bad)  
   1400125ab:	(bad)  
   1400125ac:	cmp    eax,eax
   1400125ae:	(bad)  
   1400125af:	(bad)  
   1400125b0:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400125b6:	(bad)  
   1400125b7:	(bad)  
   1400125b8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400125be:	(bad)  
   1400125bf:	(bad)  
   1400125c0:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400125c6:	(bad)  
   1400125c7:	(bad)  
   1400125c8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400125ce:	(bad)  
   1400125cf:	(bad)  
   1400125d0:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400125d6:	(bad)  
   1400125d7:	(bad)  
   1400125d8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400125de:	(bad)  
   1400125df:	(bad)  
   1400125e0:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400125e7:	push   QWORD PTR [rdi]
   1400125e9:	mov    esp,0x4747fffe
   1400125ee:	rex.RXB inc DWORD PTR [r8]
	...
   1400125fd:	add    BYTE PTR [rax],al
   1400125ff:	add    BYTE PTR [rdi+0x47],al
   140012602:	rex.RXB dec r12d
   140012605:	jo     0x140012607
   140012607:	dec    esp
   140012609:	jo     0x14001260b
   14001260b:	dec    ebx
   14001260d:	outs   dx,DWORD PTR ds:[rsi]
   14001260e:	add    bh,bh
   140012610:	retf   
   140012611:	outs   dx,DWORD PTR ds:[rsi]
   140012612:	add    bh,bh
   140012614:	retf   
   140012615:	outs   dx,BYTE PTR ds:[rsi]
   140012616:	add    bh,bh
   140012618:	retf   
   140012619:	outs   dx,BYTE PTR ds:[rsi]
   14001261a:	add    bh,bh
   14001261c:	retf   
   14001261d:	ins    DWORD PTR es:[rdi],dx
   14001261e:	add    bh,bh
   140012620:	retf   0x6d
   140012623:	dec    edx
   140012625:	ins    DWORD PTR es:[rdi],dx
   140012626:	add    bh,bh
   140012628:	retf   0x6c
   14001262b:	dec    edx
   14001262d:	ins    BYTE PTR es:[rdi],dx
   14001262e:	add    bh,bh
   140012630:	retf   0x6b
   140012633:	dec    ecx
   140012635:	imul   eax,DWORD PTR [rax],0xffffffff
   140012638:	leave  
   140012639:	imul   eax,DWORD PTR [rax],0xffffffff
   14001263c:	leave  
   14001263d:	push   0x0
   14001263f:	dec    ecx
   140012641:	push   0x0
   140012643:	(bad)  
   140012644:	(bad)  
   140012645:	(bad)  
   140012646:	(bad)  
   140012647:	(bad)  
   140012648:	(bad)  
   140012649:	(bad)  
   14001264a:	(bad)  
   14001264b:	(bad)  
   14001264c:	cmp    eax,eax
   14001264e:	(bad)  
   14001264f:	(bad)  
   140012650:	cmp    eax,eax
   140012652:	(bad)  
   140012653:	(bad)  
   140012654:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14001265a:	(bad)  
   14001265b:	(bad)  
   14001265c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140012662:	(bad)  
   140012663:	(bad)  
   140012664:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001266a:	(bad)  
   14001266b:	(bad)  
   14001266c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140012672:	(bad)  
   140012673:	(bad)  
   140012674:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001267a:	(bad)  
   14001267b:	(bad)  
   14001267c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140012682:	(bad)  
   140012683:	(bad)  
   140012684:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001268b:	inc    DWORD PTR [rdi+0x47]
   14001268e:	rex.RXB inc DWORD PTR [r8]
	...
   140012699:	add    BYTE PTR [rax],al
   14001269b:	add    BYTE PTR [rdi+0x47],al
   14001269e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   1400126a2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400126a6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400126aa:	rex.RXB dec DWORD PTR [r15+0x4a]
   1400126ae:	rex.XB jmp FWORD PTR [r8+0x51]
   1400126b2:	xor    eax,0x285981ff
   1400126b7:	jmp    QWORD PTR [rdx-0x3c00e99e]
   1400126bd:	ins    BYTE PTR es:[rdi],dx
   1400126be:	add    al,0xff
   1400126c0:	retf   
   1400126c1:	ins    DWORD PTR es:[rdi],dx
   1400126c2:	add    bh,bh
   1400126c4:	retf   0x6d
   1400126c7:	dec    edx
   1400126c9:	ins    DWORD PTR es:[rdi],dx
   1400126ca:	add    bh,bh
   1400126cc:	retf   0x6c
   1400126cf:	dec    edx
   1400126d1:	ins    BYTE PTR es:[rdi],dx
   1400126d2:	add    bh,bh
   1400126d4:	retf   0x6b
   1400126d7:	dec    ecx
   1400126d9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400126dc:	leave  
   1400126dd:	imul   eax,DWORD PTR [rax],0xffffffff
   1400126e0:	leave  
   1400126e1:	push   0x0
   1400126e3:	(bad)  
   1400126e4:	(bad)  
   1400126e5:	(bad)  
   1400126e6:	(bad)  
   1400126e7:	(bad)  
   1400126e8:	(bad)  
   1400126e9:	(bad)  
   1400126ea:	(bad)  
   1400126eb:	(bad)  
   1400126ec:	cmp    eax,eax
   1400126ee:	(bad)  
   1400126ef:	(bad)  
   1400126f0:	cmp    eax,eax
   1400126f2:	(bad)  
   1400126f3:	(bad)  
   1400126f4:	cmp    eax,eax
   1400126f6:	(bad)  
   1400126f7:	(bad)  
   1400126f8:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400126fe:	(bad)  
   1400126ff:	(bad)  
   140012700:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140012706:	(bad)  
   140012707:	(bad)  
   140012708:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001270e:	(bad)  
   14001270f:	(bad)  
   140012710:	cmp    dh,BYTE PTR [rdi-0x66c2000d]
   140012716:	(bad)  
   140012719:	jnp    0x1400126b2
   14001271b:	inc    DWORD PTR [rbx+0x65]
   14001271e:	jne    0x14001271f
   140012720:	rex.RX
   140012721:	rex.WRX push rdx
   140012723:	inc    DWORD PTR [rdi+0x47]
   140012726:	rex.RXB inc DWORD PTR [r15+0x47]
   14001272a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001272e:	rex.RXB inc DWORD PTR [r8]
	...
   140012739:	add    BYTE PTR [rax],al
   14001273b:	add    BYTE PTR [rdi+0x47],al
   14001273e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012742:	rex.RXB
   140012743:	rex
   140012744:	rex.RXB
   140012745:	rex.RXB
   140012746:	rex.RXB
   140012747:	rex
   140012748:	rex.RXB
   140012749:	rex.RXB
   14001274a:	rex.RXB
   14001274b:	rex
   14001274c:	rex.RXB
   14001274d:	rex.RXB
   14001274e:	rex.RXB (bad) 
   140012750:	rex.RXB
   140012751:	rex.RXB
   140012752:	rex.RXB pop QWORD PTR [r15+0x47]
   140012756:	rex.RXB mov r15d,0xff474747
   14001275c:	rex.RXB
   14001275d:	rex.RXB
   14001275e:	rex.RXB push QWORD PTR [r8+0x53]
   140012762:	xor    edi,edi
   140012764:	(bad)  
   140012765:	pop    rdi
   140012766:	sbb    edi,edi
   140012768:	retf   0x6d
   14001276b:	dec    edx
   14001276d:	ins    DWORD PTR es:[rdi],dx
   14001276e:	add    bh,bh
   140012770:	retf   0x6c
   140012773:	dec    edx
   140012775:	ins    BYTE PTR es:[rdi],dx
   140012776:	add    bh,bh
   140012778:	retf   0x6b
   14001277b:	dec    ecx
   14001277d:	imul   eax,DWORD PTR [rax],0xffffffff
   140012780:	leave  
   140012781:	imul   eax,DWORD PTR [rax],0xffffffff
   140012784:	(bad)  
   140012785:	(bad)  
   140012786:	(bad)  
   140012787:	(bad)  
   140012788:	(bad)  
   140012789:	(bad)  
   14001278a:	(bad)  
   14001278b:	(bad)  
   14001278c:	cmp    al,0xc0
   14001278e:	(bad)  
   14001278f:	(bad)  
   140012790:	cmp    eax,eax
   140012792:	(bad)  
   140012793:	(bad)  
   140012794:	cmp    eax,eax
   140012796:	(bad)  
   140012797:	(bad)  
   140012798:	cmp    eax,eax
   14001279a:	(bad)  
   14001279b:	(bad)  
   14001279c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400127a2:	(bad)  
   1400127a3:	(bad)  
   1400127a4:	cmp    bh,BYTE PTR [rdi-0x6dc00002]
   1400127aa:	mov    ecx,0x806c43ff
   1400127af:	inc    DWORD PTR [rdi+0x47]
   1400127b2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400127b6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400127ba:	rex.RXB mov r15d,0x8f474747
   1400127c0:	rex.RXB
   1400127c1:	rex.RXB
   1400127c2:	rex.RXB (bad) 
   1400127c4:	rex.RXB
   1400127c5:	rex.RXB
   1400127c6:	rex.RXB
   1400127c7:	rex
   1400127c8:	rex.RXB
   1400127c9:	rex.RXB
   1400127ca:	rex.RXB
   1400127cb:	rex
   1400127cc:	rex.RXB
   1400127cd:	rex.RXB
   1400127ce:	rex.RXB
   1400127cf:	add    BYTE PTR [rax],al
	...
   1400127fa:	add    BYTE PTR [rax],al
   1400127fc:	rex.RXB
   1400127fd:	rex.RXB
   1400127fe:	rex.RXB push r8
   140012800:	rex.RXB
   140012801:	rex.RXB
   140012802:	rex.RXB lahf 
   140012804:	rex.RXB
   140012805:	rex.RXB
   140012806:	rex.RXB call FWORD PTR [r8+0x4c]
   14001280a:	call   FWORD PTR ds:[rcx-0x3500e4a1]
   140012811:	ins    DWORD PTR es:[rdi],dx
   140012812:	add    bh,bh
   140012814:	retf   0x6c
   140012817:	dec    edx
   140012819:	ins    BYTE PTR es:[rdi],dx
   14001281a:	add    bh,bh
   14001281c:	retf   0x6b
   14001281f:	dec    ecx
   140012821:	imul   eax,DWORD PTR [rax],0xffffffff
   140012824:	(bad)  
   140012825:	(bad)  
   140012826:	(bad)  
   140012827:	(bad)  
   140012828:	(bad)  
   140012829:	(bad)  
   14001282a:	(bad)  
   14001282b:	(bad)  
   14001282c:	cmp    al,0xc0
   14001282e:	(bad)  
   14001282f:	(bad)  
   140012830:	cmp    al,0xc0
   140012832:	(bad)  
   140012833:	(bad)  
   140012834:	cmp    eax,eax
   140012836:	(bad)  
   140012837:	(bad)  
   140012838:	cmp    eax,eax
   14001283a:	(bad)  
   14001283b:	(bad)  
   14001283c:	cmp    eax,eax
   14001283e:	(bad)  
   14001283f:	(bad)  
   140012840:	(bad)  
   140012841:	xchg   edx,eax
   140012842:	mov    ecx,0x5e5645ff
   140012847:	inc    DWORD PTR [rdi+0x47]
   14001284a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001284e:	rex.RXB lahf 
   140012850:	rex.RXB
   140012851:	rex.RXB
   140012852:	rex.RXB push r8
	...
   1400128a4:	rex.RXB
   1400128a5:	rex.RXB
   1400128a6:	rex.RXB and BYTE PTR [r15+0x47],r8b
   1400128aa:	rex.RXB lahf 
   1400128ac:	rex.RXB
   1400128ad:	rex.RXB
   1400128ae:	rex.RXB jmp FWORD PTR [r8+0x51]
   1400128b2:	xor    eax,0xd66b1ff
   1400128b7:	dec    edx
   1400128b9:	ins    BYTE PTR es:[rdi],dx
   1400128ba:	add    bh,bh
   1400128bc:	retf   0x6c
   1400128bf:	dec    edx
   1400128c1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400128c4:	(bad)  
   1400128c5:	(bad)  
   1400128c6:	(bad)  
   1400128c7:	(bad)  
   1400128c8:	(bad)  
   1400128c9:	(bad)  
   1400128ca:	(bad)  
   1400128cb:	(bad)  
   1400128cc:	cmp    al,0xc1
   1400128ce:	(bad)  
   1400128cf:	(bad)  
   1400128d0:	cmp    al,0xc0
   1400128d2:	(bad)  
   1400128d3:	(bad)  
   1400128d4:	cmp    al,0xc0
   1400128d6:	(bad)  
   1400128d7:	(bad)  
   1400128d8:	cmp    eax,0x44ffdca9
   1400128dd:	gs jne 0x1400128df
   1400128e0:	rex.RXB
   1400128e1:	rex.RXB
   1400128e2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400128e6:	rex.RXB lahf 
   1400128e8:	rex.RXB
   1400128e9:	rex.RXB
   1400128ea:	rex.RXB and BYTE PTR [r8],r8b
	...
   140012949:	add    BYTE PTR [rax],al
   14001294b:	add    BYTE PTR [rdi+0x47],al
   14001294e:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140012952:	rex.RXB mov r15d,0xff474747
   140012958:	push   0xffffffff91ff3551
   14001295d:	pop    rsp
   14001295e:	(bad)  
   14001295f:	jmp    FWORD PTR [rcx-0x2e00ed9d]
   140012965:	rcl    ecx,1
   140012967:	call   rcx
   140012969:	rcl    ecx,1
   14001296b:	(bad)  
   14001296c:	(bad)  
   14001296d:	movabs ds:0x6544ffae8b41ffd0,eax
   140012976:	jne    0x140012977
   140012978:	rex.RXB
   140012979:	rex.RXB
   14001297a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001297e:	rex.RXB iret 
   140012980:	rex.RXB
   140012981:	rex.RXB
   140012982:	rex.RXB xor BYTE PTR [r8],r8b
	...
   1400129f1:	add    BYTE PTR [rax],al
   1400129f3:	add    BYTE PTR [rdi+0x47],al
   1400129f6:	rex.RXB
   1400129f7:	rex
   1400129f8:	rex.RXB
   1400129f9:	rex.RXB
   1400129fa:	rex.RXB lahf 
   1400129fc:	rex.RXB
   1400129fd:	rex.RXB
   1400129fe:	rex.RXB fild WORD PTR [r15+0x47]
   140012a02:	rex.RXB inc DWORD PTR [r15+0x47]
   140012a06:	rex.RXB inc DWORD PTR [r15+0x47]
   140012a0a:	rex.RXB inc DWORD PTR [r15+0x47]
   140012a0e:	rex.RXB inc DWORD PTR [r15+0x47]
   140012a12:	rex.RXB fild WORD PTR [r15+0x47]
   140012a16:	rex.RXB lahf 
   140012a18:	rex.RXB
   140012a19:	rex.RXB
   140012a1a:	rex.RXB push r8
	...
   140012af8:	(bad)  
   140012af9:	(bad)  
   140012afa:	(bad)  
   140012afb:	(bad)  
   140012afc:	jmp    FWORD PTR [rcx+0x0]
   140012aff:	(bad)  
   140012b00:	(bad)  
   140012b01:	inc    ebx
   140012b03:	(bad)  
   140012b04:	jmp    FWORD PTR [rcx+0x0]
   140012b07:	(bad)  
   140012b08:	(bad)  
   140012b09:	inc    DWORD PTR [rax]
   140012b0b:	(bad)  
   140012b0c:	jmp    FWORD PTR [rax+0x0]
   140012b0f:	(bad)  
   140012b10:	(bad)  
   140012b11:	inc    BYTE PTR [rax]
   140012b13:	jg     0x140012b14
   140012b15:	(bad)  
   140012b16:	(bad)  
   140012b17:	(bad)  
   140012b18:	(bad)  
   140012b19:	clc    
   140012b1a:	add    BYTE PTR [rdi],bl
   140012b1c:	(bad)  
   140012b1d:	mov    edi,0xf0fffffe
   140012b22:	add    BYTE PTR [rdi],cl
   140012b24:	(bad)  
   140012b25:	mov    esi,0xe0fffffe
   140012b2a:	add    BYTE PTR [rdi],al
   140012b2c:	(bad)  
   140012b2d:	mov    esi,0xc0fffffe
   140012b32:	add    BYTE PTR [rbx],al
   140012b34:	(bad)  
   140012b35:	mov    ebp,0x80fffffe
   140012b3a:	add    BYTE PTR [rcx],al
   140012b3c:	(bad)  
   140012b3d:	mov    ebp,0xfffffe
   140012b42:	add    BYTE PTR [rax],al
   140012b44:	(bad)  
   140012b45:	mov    ebp,0xfefffe
   140012b4a:	add    BYTE PTR [rax],al
   140012b4c:	jg     0x140012b0a
   140012b4e:	(bad)  
   140012b4f:	(bad)  
   140012b50:	cld    
   140012b51:	add    BYTE PTR [rax],al
   140012b53:	add    BYTE PTR [rdi],bh
   140012b55:	mov    esp,0xfcfffe
   140012b5a:	add    BYTE PTR [rax],al
   140012b5c:	(bad)  
   140012b5d:	mov    esp,0xf8fffe
   140012b62:	add    BYTE PTR [rax],al
   140012b64:	(bad)  
   140012b65:	and    DWORD PTR [rbx+0xf0ff],0xf00
   140012b6f:	add    al,dh
   140012b71:	add    BYTE PTR [rax],al
   140012b73:	add    BYTE PTR [rdi],cl
   140012b75:	add    BYTE PTR [rax],al
   140012b77:	add    al,ah
   140012b79:	add    BYTE PTR [rax],al
   140012b7b:	add    BYTE PTR [rdi],al
   140012b7d:	add    BYTE PTR [rax],al
   140012b7f:	add    al,ah
   140012b81:	add    BYTE PTR [rax],al
   140012b83:	add    BYTE PTR [rdi],al
   140012b85:	rex.RXB
   140012b86:	rex.RXB jmp r8
   140012b89:	add    BYTE PTR [rax],al
   140012b8b:	add    BYTE PTR [rdi],al
   140012b8d:	outs   dx,BYTE PTR ds:[rsi]
   140012b8e:	add    bh,bh
   140012b90:	rol    BYTE PTR [rax],0x0
   140012b93:	add    BYTE PTR [rbx],al
   140012b95:	ins    DWORD PTR es:[rdi],dx
   140012b96:	add    bh,bh
   140012b98:	rol    BYTE PTR [rax],0x0
   140012b9b:	add    BYTE PTR [rbx],al
   140012b9d:	ins    DWORD PTR es:[rdi],dx
   140012b9e:	add    bh,bh
   140012ba0:	rol    BYTE PTR [rax],0x0
   140012ba3:	add    BYTE PTR [rbx],al
   140012ba5:	ins    BYTE PTR es:[rdi],dx
   140012ba6:	add    bh,bh
   140012ba8:	rol    BYTE PTR [rax],0x0
   140012bab:	add    BYTE PTR [rbx],al
   140012bad:	imul   eax,DWORD PTR [rax],0xffffffff
   140012bb0:	rol    BYTE PTR [rax],0x0
   140012bb3:	add    BYTE PTR [rbx],al
   140012bb5:	imul   eax,DWORD PTR [rax],0xffffffff
   140012bb8:	rol    BYTE PTR [rax],0x0
   140012bbb:	add    BYTE PTR [rbx],al
   140012bbd:	push   0x0
   140012bbf:	inc    eax
   140012bc1:	add    BYTE PTR [rax],al
   140012bc3:	add    BYTE PTR [rbx],al
   140012bc5:	imul   eax,DWORD PTR [rax],0xc0ff
   140012bcb:	add    BYTE PTR [rbx],al
   140012bcd:	imul   eax,DWORD PTR [rax],0xc0ff
   140012bd3:	add    BYTE PTR [rbx],al
   140012bd5:	(bad)  
   140012bd6:	(bad)  
   140012bd7:	inc    eax
   140012bd9:	add    BYTE PTR [rax],al
   140012bdb:	add    BYTE PTR [rbx],al
   140012bdd:	mov    edi,0xc0fffe
   140012be2:	add    BYTE PTR [rax],al
   140012be4:	add    edi,DWORD PTR [rdi+0xc0fffe]
   140012bea:	add    BYTE PTR [rax],al
   140012bec:	add    edi,DWORD PTR [rsi+0xc0fffe]
   140012bf2:	add    BYTE PTR [rax],al
   140012bf4:	add    edi,DWORD PTR [rsi+0xc0fffe]
   140012bfa:	add    BYTE PTR [rax],al
   140012bfc:	add    edi,DWORD PTR [rbp+0x80fffe]
   140012c02:	add    BYTE PTR [rax],al
   140012c04:	add    edi,DWORD PTR [rbp+0x80fffe]
   140012c0a:	add    BYTE PTR [rax],al
   140012c0c:	add    edi,DWORD PTR [rsi+rdi*8+0x80ffff]
   140012c13:	add    edi,edi
   140012c15:	mov    esp,0xe0fffffe
   140012c1a:	add    BYTE PTR [rdi],al
   140012c1c:	(bad)  
   140012c1d:	mov    esp,0xf8fffffe
   140012c22:	add    BYTE PTR [rdi],bl
   140012c24:	inc    DWORD PTR [rcx-0x100005d]
   140012c2a:	add    BYTE PTR [rdi-0x1],bh
   140012c2d:	add    BYTE PTR [rax],al
   140012c2f:	add    bh,bh
   140012c31:	(bad)  
   140012c32:	(bad)  
   140012c33:	(bad)  
   140012c34:	inc    DWORD PTR [rax]
   140012c36:	add    BYTE PTR [rax],al
   140012c38:	sub    BYTE PTR [rax],al
   140012c3a:	add    BYTE PTR [rax],al
   140012c3c:	and    BYTE PTR [rax],al
   140012c3e:	add    BYTE PTR [rax],al
   140012c40:	add    BYTE PTR [rax],al
   140012c43:	add    BYTE PTR [rcx],al
   140012c45:	add    BYTE PTR [rax],ah
	...
   140012d17:	add    BYTE PTR [rdi+0x47],al
   140012d1a:	rex.RXB
   140012d1b:	rex
   140012d1c:	rex.RXB
   140012d1d:	rex.RXB
   140012d1e:	rex.RXB iret 
   140012d20:	rex.RXB
   140012d21:	rex.RXB
   140012d22:	rex.RXB iret 
   140012d24:	rex.RXB
   140012d25:	rex.RXB
   140012d26:	rex.RXB
   140012d27:	add    BYTE PTR [rax],al
	...
   140012d8e:	add    BYTE PTR [rax],al
   140012d90:	rex.RXB
   140012d91:	rex.RXB
   140012d92:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012d96:	rex.RXB pop QWORD PTR [r15+0x47]
   140012d9a:	rex.RXB push QWORD PTR [r13+0x75]
   140012d9e:	jne    0x140012d9f
   140012da0:	jne    0x140012e17
   140012da2:	jne    0x140012da3
   140012da4:	rex.RXB
   140012da5:	rex.RXB
   140012da6:	rex.RXB inc DWORD PTR [r15+0x47]
   140012daa:	rex.RXB pop QWORD PTR [r15+0x47]
   140012dae:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140012e09:	add    BYTE PTR [rax],al
   140012e0b:	add    BYTE PTR [rdi+0x47],al
   140012e0e:	rex.RXB
   140012e0f:	rex
   140012e10:	rex.RXB
   140012e11:	rex.RXB
   140012e12:	rex.RXB fild WORD PTR [r14+0x4e]
   140012e16:	push   rdx
   140012e17:	(bad)  
   140012e18:	cmp    al,0x8f
   140012e1a:	mov    ecx,0xffffffff
   140012e1f:	(bad)  
   140012e20:	(bad)  
   140012e21:	(bad)  
   140012e22:	(bad)  
   140012e23:	call   QWORD PTR [rbp+0x4fff1b54]
   140012e29:	rex.W
   140012e2a:	rex.XB inc DWORD PTR [r15+0x47]
   140012e2e:	rex.RXB fild WORD PTR [r15+0x47]
   140012e32:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140012e85:	add    BYTE PTR [rax],al
   140012e87:	add    BYTE PTR [rdi+0x47],al
   140012e8a:	rex.RXB jo 0x140012ed4
   140012e8d:	rex.RXB
   140012e8e:	rex.RXB inc DWORD PTR [r11+0x64]
   140012e92:	jne    0x140012e93
   140012e94:	(bad)  
   140012e95:	mov    bl,0xf3
   140012e97:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x140012d57
   140012e9d:	(bad)  
   140012e9e:	(bad)  
   140012e9f:	(bad)  
   140012ea0:	(bad)  
   140012ea1:	(bad)  
   140012ea2:	(bad)  
   140012ea3:	inc    ebx
   140012ea5:	pop    rbp
   140012ea6:	add    bh,bh
   140012ea8:	mov    ebx,0x66ff045b
   140012ead:	rex.WR xor rax,0x474747ff
   140012eb3:	inc    DWORD PTR [rdi+0x47]
   140012eb6:	rex.RXB jo 0x140012eb9
	...
   140012f01:	add    BYTE PTR [rax],al
   140012f03:	add    BYTE PTR [rdi+0x47],al
   140012f06:	rex.RXB lahf 
   140012f08:	rex.RXB
   140012f09:	rex.RXB
   140012f0a:	rex.RXB (bad) 
   140012f0c:	mov    DWORD PTR ds:[rsi-0x144c901],ebp
   140012f13:	push   QWORD PTR [rsi]
   140012f15:	mov    ebx,0xbb36fffe
   140012f1a:	(bad)  
   140012f1b:	(bad)  
   140012f1c:	(bad)  
   140012f1d:	(bad)  
   140012f1e:	(bad)  
   140012f1f:	(bad)  
   140012f20:	(bad)  
   140012f21:	(bad)  
   140012f22:	(bad)  
   140012f23:	inc    ebx
   140012f25:	pop    rbp
   140012f26:	add    bh,bh
   140012f28:	ret    
   140012f29:	pop    rbp
   140012f2a:	add    bh,bh
   140012f2c:	ret    
   140012f2d:	pop    rsp
   140012f2e:	add    bh,bh
   140012f30:	mov    WORD PTR [rdx+0x1f],ss
   140012f33:	inc    DWORD PTR [rdi+0x47]
   140012f36:	rex.RXB inc DWORD PTR [r15+0x47]
   140012f3a:	rex.RXB lahf 
	...
   140012f7c:	rex.RXB
   140012f7d:	rex.RXB
   140012f7e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012f82:	rex.RXB mov r15d,0xff524e46
   140012f88:	cmp    al,0x97
   140012f8a:	(bad)  
   140012f8d:	mov    esp,0xbb36fffe
   140012f92:	(bad)  
   140012f93:	push   QWORD PTR [rsi]
   140012f95:	mov    ebx,0xbb36fffe
   140012f9a:	(bad)  
   140012f9b:	(bad)  
   140012f9c:	(bad)  
   140012f9d:	(bad)  
   140012f9e:	(bad)  
   140012f9f:	(bad)  
   140012fa0:	(bad)  
   140012fa1:	(bad)  
   140012fa2:	(bad)  
   140012fa3:	inc    ebx
   140012fa5:	pop    rsi
   140012fa6:	add    bh,bh
   140012fa8:	ret    
   140012fa9:	pop    rbp
   140012faa:	add    bh,bh
   140012fac:	ret    
   140012fad:	pop    rbp
   140012fae:	add    bh,bh
   140012fb0:	ret    
   140012fb1:	pop    rsp
   140012fb2:	add    bh,bh
   140012fb4:	pushf  
   140012fb5:	push   rbp
   140012fb6:	(bad)  
   140012fb7:	dec    DWORD PTR [rdi+0x48]
   140012fba:	rex.XB inc DWORD PTR [r15+0x47]
   140012fbe:	rex.RXB mov r15d,0x10474747
	...
   140012ffc:	rex.RXB
   140012ffd:	rex.RXB
   140012ffe:	rex.RXB mov r15d,0xff524e46
   140013004:	cmp    esp,DWORD PTR [rsi-0x43c80024]
   14001300a:	(bad)  
   14001300b:	push   QWORD PTR [rdi]
   14001300d:	mov    esp,0xbc37fffe
   140013012:	(bad)  
   140013013:	push   QWORD PTR [rsi]
   140013015:	mov    ebx,0xbb36fffe
   14001301a:	(bad)  
   14001301b:	(bad)  
   14001301c:	(bad)  
   14001301d:	(bad)  
   14001301e:	(bad)  
   14001301f:	(bad)  
   140013020:	(bad)  
   140013021:	(bad)  
   140013022:	(bad)  
   140013023:	inc    esp
   140013025:	pop    rsi
   140013026:	add    bh,bh
   140013028:	ret    
   140013029:	pop    rsi
   14001302a:	add    bh,bh
   14001302c:	ret    
   14001302d:	pop    rbp
   14001302e:	add    bh,bh
   140013030:	ret    
   140013031:	pop    rbp
   140013032:	add    bh,bh
   140013034:	ret    
   140013035:	pop    rsp
   140013036:	add    bh,bh
   140013038:	stos   DWORD PTR es:[rdi],eax
   140013039:	push   rdi
   14001303a:	or     eax,0x43484fff
   14001303f:	inc    DWORD PTR [rdi+0x47]
   140013042:	rex.RXB mov r15d,0x0
	...
   140013078:	rex.RXB
   140013079:	rex.RXB
   14001307a:	rex.RXB lahf 
   14001307c:	rex.RX
   14001307d:	rex.WRX push rdx
   14001307f:	(bad)  
   140013080:	cmp    esp,DWORD PTR [rdi-0x42c70024]
   140013086:	(bad)  
   140013087:	(bad)  
   140013088:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001308f:	push   QWORD PTR [rdi]
   140013091:	mov    esp,0xbc37fffe
   140013096:	(bad)  
   140013097:	push   QWORD PTR [rsi]
   140013099:	mov    ebx,0xfffffffe
   14001309e:	(bad)  
   14001309f:	(bad)  
   1400130a0:	(bad)  
   1400130a1:	(bad)  
   1400130a2:	(bad)  
   1400130a3:	inc    esp
   1400130a5:	pop    rdi
   1400130a6:	add    bh,bh
   1400130a8:	(bad)  
   1400130a9:	pop    rsi
   1400130aa:	add    bh,bh
   1400130ac:	ret    
   1400130ad:	pop    rsi
   1400130ae:	add    bh,bh
   1400130b0:	ret    
   1400130b1:	pop    rbp
   1400130b2:	add    bh,bh
   1400130b4:	ret    
   1400130b5:	pop    rbp
   1400130b6:	add    bh,bh
   1400130b8:	ret    
   1400130b9:	pop    rsp
   1400130ba:	add    bh,bh
   1400130bc:	stos   DWORD PTR es:[rdi],eax
   1400130bd:	push   rdi
   1400130be:	or     eax,0x43484fff
   1400130c3:	inc    DWORD PTR [rdi+0x47]
   1400130c6:	rex.RXB lahf 
	...
   1400130f4:	rex.RXB
   1400130f5:	rex.RXB
   1400130f6:	rex.RXB jo 0x140013140
   1400130f9:	rex.RXB
   1400130fa:	rex.RXB (bad) 
   1400130fc:	cmp    eax,0x39ffd0a0
   140013101:	mov    ebp,0xbd38fffe
   140013106:	(bad)  
   140013107:	(bad)  
   140013108:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001310e:	(bad)  
   14001310f:	push   QWORD PTR [rdi]
   140013111:	mov    esp,0xbc37fffe
   140013116:	(bad)  
   140013117:	push   QWORD PTR [rdi]
   140013119:	mov    esp,0xfffffffe
   14001311e:	(bad)  
   14001311f:	(bad)  
   140013120:	(bad)  
   140013121:	(bad)  
   140013122:	(bad)  
   140013123:	inc    esp
   140013125:	pop    rdi
   140013126:	add    bh,bh
   140013128:	(bad)  
   140013129:	pop    rdi
   14001312a:	add    bh,bh
   14001312c:	(bad)  
   14001312d:	pop    rsi
   14001312e:	add    bh,bh
   140013130:	ret    
   140013131:	pop    rsi
   140013132:	add    bh,bh
   140013134:	ret    
   140013135:	pop    rbp
   140013136:	add    bh,bh
   140013138:	ret    
   140013139:	pop    rbp
   14001313a:	add    bh,bh
   14001313c:	ret    
   14001313d:	pop    rsp
   14001313e:	add    bh,bh
   140013140:	movabs ds:0x47ff474747ff1256,eax
   140013149:	rex.RXB
   14001314a:	rex.RXB jo 0x14001314d
	...
   14001316d:	add    BYTE PTR [rax],al
   14001316f:	add    BYTE PTR [rdi+0x47],al
   140013172:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140013176:	rex.RXB inc DWORD PTR [r8-0x76]
   14001317a:	scas   al,BYTE PTR es:[rdi]
   14001317b:	(bad)  
   14001317c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013182:	(bad)  
   140013183:	(bad)  
   140013184:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001318a:	(bad)  
   14001318b:	(bad)  
   14001318c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140013192:	(bad)  
   140013193:	push   QWORD PTR [rdi]
   140013195:	mov    esp,0xbc37fffe
   14001319a:	(bad)  
   14001319b:	(bad)  
   14001319c:	(bad)  
   14001319d:	(bad)  
   14001319e:	(bad)  
   14001319f:	(bad)  
   1400131a0:	(bad)  
   1400131a1:	(bad)  
   1400131a2:	(bad)  
   1400131a3:	inc    esp
   1400131a5:	(bad)  
   1400131a6:	add    bh,bh
   1400131a8:	(bad)  
   1400131a9:	pop    rdi
   1400131aa:	add    bh,bh
   1400131ac:	(bad)  
   1400131ad:	pop    rdi
   1400131ae:	add    bh,bh
   1400131b0:	(bad)  
   1400131b1:	pop    rsi
   1400131b2:	add    bh,bh
   1400131b4:	ret    
   1400131b5:	pop    rsi
   1400131b6:	add    bh,bh
   1400131b8:	ret    
   1400131b9:	pop    rbp
   1400131ba:	add    bh,bh
   1400131bc:	ret    
   1400131bd:	pop    rbp
   1400131be:	add    bh,bh
   1400131c0:	ret    
   1400131c1:	pop    rsp
   1400131c2:	add    bh,bh
   1400131c4:	mov    WORD PTR [rdx+0x1f],ss
   1400131c7:	inc    DWORD PTR [rdi+0x47]
   1400131ca:	rex.RXB inc DWORD PTR [r15+0x47]
   1400131ce:	rex.RXB xor BYTE PTR [r8],r8b
	...
   1400131ed:	add    BYTE PTR [rax],al
   1400131ef:	add    BYTE PTR [rdi+0x47],al
   1400131f2:	rex.RXB mov r15d,0xff756544
   1400131f8:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400131fe:	(bad)  
   1400131ff:	(bad)  
   140013200:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013206:	(bad)  
   140013207:	(bad)  
   140013208:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001320e:	(bad)  
   14001320f:	(bad)  
   140013210:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140013216:	(bad)  
   140013217:	push   QWORD PTR [rdi]
   140013219:	mov    esp,0xfffffffe
   14001321e:	(bad)  
   14001321f:	(bad)  
   140013220:	(bad)  
   140013221:	(bad)  
   140013222:	(bad)  
   140013223:	inc    ebp
   140013225:	(bad)  
   140013226:	add    bh,bh
   140013228:	(bad)  
   140013229:	(bad)  
   14001322a:	add    bh,bh
   14001322c:	(bad)  
   14001322d:	pop    rdi
   14001322e:	add    bh,bh
   140013230:	(bad)  
   140013231:	pop    rdi
   140013232:	add    bh,bh
   140013234:	(bad)  
   140013235:	pop    rsi
   140013236:	add    bh,bh
   140013238:	ret    
   140013239:	pop    rsi
   14001323a:	add    bh,bh
   14001323c:	ret    
   14001323d:	pop    rbp
   14001323e:	add    bh,bh
   140013240:	ret    
   140013241:	pop    rbp
   140013242:	add    bh,bh
   140013244:	ret    
   140013245:	pop    rsp
   140013246:	add    bh,bh
   140013248:	data16 rex.WR xor rax,0x474747ff
   14001324f:	mov    edi,0x0
	...
   14001326c:	rex.RXB
   14001326d:	rex.RXB
   14001326e:	rex.RXB (bad) 
   140013270:	rex.RXB
   140013271:	rex.RXB
   140013272:	rex.RXB (bad) 
   140013274:	cmp    al,0xb0
   140013276:	out    0xff,eax
   140013278:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001327e:	(bad)  
   14001327f:	(bad)  
   140013280:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140013286:	(bad)  
   140013287:	(bad)  
   140013288:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14001328e:	(bad)  
   14001328f:	(bad)  
   140013290:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013296:	(bad)  
   140013297:	(bad)  
   140013298:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   14001329f:	(bad)  
   1400132a0:	(bad)  
   1400132a1:	(bad)  
   1400132a2:	(bad)  
   1400132a3:	inc    ebp
   1400132a5:	(bad)  
   1400132a6:	add    bh,bh
   1400132a8:	(bad)
   1400132ab:	inc    esp
   1400132ad:	(bad)  
   1400132ae:	add    bh,bh
   1400132b0:	(bad)  
   1400132b1:	pop    rdi
   1400132b2:	add    bh,bh
   1400132b4:	(bad)  
   1400132b5:	pop    rdi
   1400132b6:	add    bh,bh
   1400132b8:	(bad)  
   1400132b9:	pop    rsi
   1400132ba:	add    bh,bh
   1400132bc:	ret    
   1400132bd:	pop    rsi
   1400132be:	add    bh,bh
   1400132c0:	ret    
   1400132c1:	pop    rbp
   1400132c2:	add    bh,bh
   1400132c4:	ret    
   1400132c5:	pop    rbp
   1400132c6:	add    bh,bh
   1400132c8:	lods   al,BYTE PTR ds:[rsi]
   1400132c9:	pop    rax
   1400132ca:	or     eax,0x474747ff
   1400132cf:	inc    DWORD PTR [rdi+0x47]
   1400132d2:	rex.RXB (bad) 
	...
   1400132ec:	rex.RXB
   1400132ed:	rex.RXB
   1400132ee:	rex.RXB iret 
   1400132f0:	rex.XB je 0x14001327f
   1400132f3:	(bad)  
   1400132f4:	cmp    eax,eax
   1400132f6:	(bad)  
   1400132f7:	(bad)  
   1400132f8:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400132fe:	(bad)  
   1400132ff:	(bad)  
   140013300:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140013306:	(bad)  
   140013307:	(bad)  
   140013308:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001330e:	(bad)  
   14001330f:	(bad)  
   140013310:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140013316:	(bad)  
   140013317:	(bad)  
   140013318:	cmp    BYTE PTR [rbp-0x2],bh
   14001331e:	(bad)  
   14001331f:	(bad)  
   140013320:	(bad)  
   140013321:	(bad)  
   140013322:	(bad)  
   140013323:	inc    ebp
   140013325:	(bad)  
   140013326:	add    bh,bh
   140013328:	(bad)
   14001332b:	inc    ebp
   14001332d:	(bad)  
   14001332e:	add    bh,bh
   140013330:	(bad)  
   140013331:	(bad)  
   140013332:	add    bh,bh
   140013334:	(bad)  
   140013335:	pop    rdi
   140013336:	add    bh,bh
   140013338:	(bad)  
   140013339:	pop    rdi
   14001333a:	add    bh,bh
   14001333c:	(bad)  
   14001333d:	pop    rsi
   14001333e:	add    bh,bh
   140013340:	ret    
   140013341:	pop    rsi
   140013342:	add    bh,bh
   140013344:	ret    
   140013345:	pop    rbp
   140013346:	add    bh,bh
   140013348:	ret    
   140013349:	pop    rbp
   14001334a:	add    bh,bh
   14001334c:	jbe    0x14001339d
   14001334e:	sub    al,0xff
   140013350:	rex.RXB
   140013351:	rex.RXB
   140013352:	rex.RXB iret 
	...
   140013368:	rex.RXB
   140013369:	rex.RXB
   14001336a:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14001336e:	rex.RXB (bad) 
   140013370:	ds test eax,0xc03bffdc
   140013376:	(bad)  
   140013377:	(bad)  
   140013378:	cmp    eax,eax
   14001337a:	(bad)  
   14001337b:	(bad)  
   14001337c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140013382:	(bad)  
   140013383:	(bad)  
   140013384:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14001338a:	(bad)  
   14001338b:	(bad)  
   14001338c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013392:	(bad)  
   140013393:	(bad)  
   140013394:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001339a:	(bad)  
   14001339b:	(bad)  
   14001339c:	(bad)  
   14001339d:	(bad)  
   14001339e:	(bad)  
   14001339f:	(bad)  
   1400133a0:	(bad)  
   1400133a1:	(bad)  
   1400133a2:	(bad)  
   1400133a3:	inc    ebp
   1400133a5:	(bad)  
   1400133a6:	add    bh,bh
   1400133a8:	(bad)
   1400133ab:	inc    ebp
   1400133ad:	(bad)  
   1400133ae:	add    bh,bh
   1400133b0:	(bad)
   1400133b3:	inc    esp
   1400133b5:	(bad)  
   1400133b6:	add    bh,bh
   1400133b8:	(bad)  
   1400133b9:	pop    rdi
   1400133ba:	add    bh,bh
   1400133bc:	(bad)  
   1400133bd:	pop    rdi
   1400133be:	add    bh,bh
   1400133c0:	(bad)  
   1400133c1:	pop    rsi
   1400133c2:	add    bh,bh
   1400133c4:	ret    
   1400133c5:	pop    rsi
   1400133c6:	add    bh,bh
   1400133c8:	ret    
   1400133c9:	pop    rbp
   1400133ca:	add    bh,bh
   1400133cc:	lods   al,BYTE PTR ds:[rsi]
   1400133cd:	pop    rcx
   1400133ce:	or     eax,0x474747ff
   1400133d3:	inc    DWORD PTR [rdi+0x47]
   1400133d6:	rex.RXB xor BYTE PTR [r8],r8b
	...
   1400133e5:	add    BYTE PTR [rax],al
   1400133e7:	add    BYTE PTR [rdi+0x47],al
   1400133ea:	(bad)
   1400133ef:	(bad)  
   1400133f0:	(bad)  
   1400133f1:	(bad)  
   1400133f2:	(bad)  
   1400133f3:	(bad)  
   1400133f4:	(bad)  
   1400133f5:	(bad)  
   1400133f6:	(bad)  
   1400133f7:	(bad)  
   1400133f8:	(bad)  
   1400133f9:	(bad)  
   1400133fa:	(bad)  
   1400133fb:	(bad)  
   1400133fc:	(bad)  
   1400133fd:	(bad)  
   1400133fe:	(bad)  
   1400133ff:	(bad)  
   140013400:	(bad)  
   140013401:	(bad)  
   140013402:	(bad)  
   140013403:	(bad)  
   140013404:	(bad)  
   140013405:	(bad)  
   140013406:	(bad)  
   140013407:	(bad)  
   140013408:	(bad)  
   140013409:	(bad)  
   14001340a:	(bad)  
   14001340b:	(bad)  
   14001340c:	(bad)  
   14001340d:	(bad)  
   14001340e:	(bad)  
   14001340f:	(bad)  
   140013410:	(bad)  
   140013411:	(bad)  
   140013412:	(bad)  
   140013413:	(bad)  
   140013414:	(bad)  
   140013415:	(bad)  
   140013416:	(bad)  
   140013417:	(bad)  
   140013418:	(bad)  
   140013419:	(bad)  
   14001341a:	(bad)  
   14001341b:	(bad)  
   14001341c:	(bad)  
   14001341d:	(bad)  
   14001341e:	(bad)  
   14001341f:	(bad)  
   140013420:	(bad)  
   140013421:	(bad)  
   140013422:	(bad)  
   140013423:	(bad)  
   140013424:	(bad)  
   140013425:	(bad)  
   140013426:	(bad)  
   140013427:	(bad)  
   140013428:	(bad)  
   140013429:	(bad)  
   14001342a:	(bad)  
   14001342b:	(bad)  
   14001342c:	(bad)  
   14001342d:	(bad)  
   14001342e:	(bad)  
   14001342f:	(bad)  
   140013430:	(bad)  
   140013431:	(bad)  
   140013432:	(bad)  
   140013433:	(bad)  
   140013434:	(bad)  
   140013435:	(bad)  
   140013436:	(bad)  
   140013437:	(bad)  
   140013438:	(bad)  
   140013439:	(bad)  
   14001343a:	(bad)  
   14001343b:	(bad)  
   14001343c:	(bad)  
   14001343d:	(bad)  
   14001343e:	(bad)  
   14001343f:	(bad)  
   140013440:	(bad)  
   140013441:	(bad)  
   140013442:	(bad)  
   140013443:	(bad)  
   140013444:	(bad)  
   140013445:	(bad)  
   140013446:	(bad)  
   140013447:	(bad)  
   140013448:	(bad)  
   140013449:	(bad)  
   14001344a:	(bad)  
   14001344b:	(bad)  
   14001344c:	(bad)  
   14001344d:	(bad)  
   14001344e:	(bad)  
   14001344f:	jmp    FWORD PTR [rdx+0x6a]
   140013452:	push   0xffffffffffffffff
   140013454:	rex.RXB
   140013455:	rex.RXB
   140013456:	rex.RXB pop QWORD PTR [r8]
	...
   140013465:	add    BYTE PTR [rax],al
   140013467:	add    BYTE PTR [rdi+0x47],al
   14001346a:	rex.RXB mov r15d,0xff989898
   140013470:	(bad)  
   140013471:	(bad)  
   140013472:	(bad)  
   140013473:	(bad)  
   140013474:	(bad)  
   140013475:	(bad)  
   140013476:	(bad)  
   140013477:	(bad)  
   140013478:	(bad)  
   140013479:	(bad)  
   14001347a:	(bad)  
   14001347b:	(bad)  
   14001347c:	(bad)  
   14001347d:	(bad)  
   14001347e:	(bad)  
   14001347f:	(bad)  
   140013480:	(bad)  
   140013481:	(bad)  
   140013482:	(bad)  
   140013483:	(bad)  
   140013484:	(bad)  
   140013485:	(bad)  
   140013486:	(bad)  
   140013487:	(bad)  
   140013488:	(bad)  
   140013489:	(bad)  
   14001348a:	(bad)  
   14001348b:	(bad)  
   14001348c:	(bad)  
   14001348d:	(bad)  
   14001348e:	(bad)  
   14001348f:	(bad)  
   140013490:	(bad)  
   140013491:	(bad)  
   140013492:	(bad)  
   140013493:	(bad)  
   140013494:	(bad)  
   140013495:	(bad)  
   140013496:	(bad)  
   140013497:	(bad)  
   140013498:	(bad)  
   140013499:	(bad)  
   14001349a:	(bad)  
   14001349b:	(bad)  
   14001349c:	(bad)  
   14001349d:	(bad)  
   14001349e:	(bad)  
   14001349f:	(bad)  
   1400134a0:	(bad)  
   1400134a1:	(bad)  
   1400134a2:	(bad)  
   1400134a3:	(bad)  
   1400134a4:	(bad)  
   1400134a5:	(bad)  
   1400134a6:	(bad)  
   1400134a7:	(bad)  
   1400134a8:	(bad)  
   1400134a9:	(bad)  
   1400134aa:	(bad)  
   1400134ab:	(bad)  
   1400134ac:	(bad)  
   1400134ad:	(bad)  
   1400134ae:	(bad)  
   1400134af:	(bad)  
   1400134b0:	(bad)  
   1400134b1:	(bad)  
   1400134b2:	(bad)  
   1400134b3:	(bad)  
   1400134b4:	(bad)  
   1400134b5:	(bad)  
   1400134b6:	(bad)  
   1400134b7:	(bad)  
   1400134b8:	(bad)  
   1400134b9:	(bad)  
   1400134ba:	(bad)  
   1400134bb:	(bad)  
   1400134bc:	(bad)  
   1400134bd:	(bad)  
   1400134be:	(bad)  
   1400134bf:	(bad)  
   1400134c0:	(bad)  
   1400134c1:	(bad)  
   1400134c2:	(bad)  
   1400134c3:	(bad)  
   1400134c4:	(bad)  
   1400134c5:	(bad)  
   1400134c6:	(bad)  
   1400134c7:	(bad)  
   1400134c8:	(bad)  
   1400134c9:	(bad)  
   1400134ca:	(bad)  
   1400134cb:	(bad)  
   1400134cc:	(bad)  
   1400134cd:	(bad)  
   1400134ce:	(bad)  
   1400134cf:	call   FWORD PTR [rax+0x47ff9898]
   1400134d5:	rex.RXB
   1400134d6:	rex.RXB mov r15d,0x0
	...
   1400134e8:	rex.RXB
   1400134e9:	rex.RXB
   1400134ea:	rex.RXB jmp QWORD PTR [r9-0x3600e9a0]
   1400134f1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400134f4:	leave  
   1400134f5:	push   0x0
   1400134f7:	dec    ecx
   1400134f9:	push   0x0
   1400134fb:	dec    ecx
   1400134fd:	imul   eax,DWORD PTR [rax],0x69c8ff
   140013503:	dec    eax
   140013505:	push   0x68c8ff00
   14001350a:	add    bh,bh
   14001350c:	enter  0x67,0xff
   140013510:	(bad)  
   140013511:	data16 add bh,bh
   140013514:	(bad)  
   140013515:	data16 add bh,bh
   140013518:	(bad)  
   140013519:	gs add bh,bh
   14001351c:	(bad)  
   14001351d:	(bad)  
   14001351e:	(bad)  
   14001351f:	(bad)  
   140013520:	(bad)  
   140013521:	(bad)  
   140013522:	(bad)  
   140013523:	(bad)  
   140013524:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001352a:	(bad)  
   14001352b:	(bad)  
   14001352c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140013533:	push   QWORD PTR [rdi]
   140013535:	mov    esp,0xbc37fffe
   14001353a:	(bad)  
   14001353b:	push   QWORD PTR [rsi]
   14001353d:	mov    ebx,0xbb36fffe
   140013542:	(bad)  
   140013543:	push   QWORD PTR [rsi]
   140013545:	mov    ebx,0xbb36fffe
   14001354a:	(bad)  
   14001354b:	push   QWORD PTR [rip+0x3bfffeba]        # 0x17c01340b
   140013551:	xchg   esi,eax
   140013552:	(bad)  
   140013555:	rex.RXB
   140013556:	rex.RXB inc DWORD PTR [r8]
	...
   140013565:	add    BYTE PTR [rax],al
   140013567:	add    BYTE PTR [rdi+0x47],al
   14001356a:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   140013571:	ins    BYTE PTR es:[rdi],dx
   140013572:	add    bh,bh
   140013574:	leave  
   140013575:	imul   eax,DWORD PTR [rax],0xffffffff
   140013578:	leave  
   140013579:	push   0x0
   14001357b:	dec    ecx
   14001357d:	push   0x0
   14001357f:	dec    ecx
   140013581:	imul   eax,DWORD PTR [rax],0x69c8ff
   140013587:	dec    eax
   140013589:	push   0x68c8ff00
   14001358e:	add    bh,bh
   140013590:	enter  0x67,0xff
   140013594:	(bad)  
   140013595:	data16 add bh,bh
   140013598:	(bad)  
   140013599:	data16 add bh,bh
   14001359c:	(bad)  
   14001359d:	(bad)  
   14001359e:	(bad)  
   14001359f:	(bad)  
   1400135a0:	(bad)  
   1400135a1:	(bad)  
   1400135a2:	(bad)  
   1400135a3:	(bad)  
   1400135a4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400135aa:	(bad)  
   1400135ab:	(bad)  
   1400135ac:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400135b2:	(bad)  
   1400135b3:	push   QWORD PTR [rdi]
   1400135b5:	mov    esp,0xbc37fffe
   1400135ba:	(bad)  
   1400135bb:	push   QWORD PTR [rdi]
   1400135bd:	mov    esp,0xbb36fffe
   1400135c2:	(bad)  
   1400135c3:	push   QWORD PTR [rsi]
   1400135c5:	mov    ebx,0xbb36fffe
   1400135ca:	(bad)  
   1400135cb:	push   QWORD PTR [rsi]
   1400135cd:	mov    ebx,0x9d3afffe
   1400135d2:	sar    bh,1
   1400135d4:	rex.RXB
   1400135d5:	rex.RXB
   1400135d6:	rex.RXB inc DWORD PTR [r8]
	...
   1400135e5:	add    BYTE PTR [rax],al
   1400135e7:	add    BYTE PTR [rdi+0x47],al
   1400135ea:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   1400135f1:	ins    BYTE PTR es:[rdi],dx
   1400135f2:	add    bh,bh
   1400135f4:	retf   0x6c
   1400135f7:	dec    ecx
   1400135f9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400135fc:	leave  
   1400135fd:	push   0x0
   1400135ff:	dec    ecx
   140013601:	push   0x0
   140013603:	dec    ecx
   140013605:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001360b:	dec    eax
   14001360d:	push   0x68c8ff00
   140013612:	add    bh,bh
   140013614:	enter  0x67,0xff
   140013618:	(bad)  
   140013619:	data16 add bh,bh
   14001361c:	(bad)  
   14001361d:	(bad)  
   14001361e:	(bad)  
   14001361f:	(bad)  
   140013620:	(bad)  
   140013621:	(bad)  
   140013622:	(bad)  
   140013623:	(bad)  
   140013624:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14001362a:	(bad)  
   14001362b:	(bad)  
   14001362c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013632:	(bad)  
   140013633:	(bad)  
   140013634:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001363b:	push   QWORD PTR [rdi]
   14001363d:	mov    esp,0xbc37fffe
   140013642:	(bad)  
   140013643:	push   QWORD PTR [rsi]
   140013645:	mov    ebx,0xbb36fffe
   14001364a:	(bad)  
   14001364b:	push   QWORD PTR [rsi]
   14001364d:	mov    ebx,0x9e3afffe
   140013652:	sar    bh,1
   140013654:	rex.RXB
   140013655:	rex.RXB
   140013656:	rex.RXB inc DWORD PTR [r8]
	...
   140013665:	add    BYTE PTR [rax],al
   140013667:	add    BYTE PTR [rdi+0x47],al
   14001366a:	rex.RXB dec r10d
   14001366d:	ins    DWORD PTR es:[rdi],dx
   14001366e:	add    bh,bh
   140013670:	retf   0x6d
   140013673:	dec    edx
   140013675:	ins    BYTE PTR es:[rdi],dx
   140013676:	add    bh,bh
   140013678:	retf   0x6c
   14001367b:	dec    ecx
   14001367d:	imul   eax,DWORD PTR [rax],0xffffffff
   140013680:	leave  
   140013681:	push   0x0
   140013683:	dec    ecx
   140013685:	push   0x0
   140013687:	dec    ecx
   140013689:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001368f:	dec    eax
   140013691:	push   0x68c8ff00
   140013696:	add    bh,bh
   140013698:	enter  0x67,0xff
   14001369c:	(bad)  
   14001369d:	(bad)  
   14001369e:	(bad)  
   14001369f:	(bad)  
   1400136a0:	(bad)  
   1400136a1:	(bad)  
   1400136a2:	(bad)  
   1400136a3:	(bad)  
   1400136a4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400136aa:	(bad)  
   1400136ab:	(bad)  
   1400136ac:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400136b2:	(bad)  
   1400136b3:	(bad)  
   1400136b4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400136ba:	(bad)  
   1400136bb:	push   QWORD PTR [rdi]
   1400136bd:	mov    esp,0xbc37fffe
   1400136c2:	(bad)  
   1400136c3:	push   QWORD PTR [rdi]
   1400136c5:	mov    esp,0xbb36fffe
   1400136ca:	(bad)  
   1400136cb:	push   QWORD PTR [rsi]
   1400136cd:	mov    ebx,0xbb36fffe
   1400136d2:	(bad)  
   1400136d3:	inc    DWORD PTR [rdi+0x47]
   1400136d6:	rex.RXB inc DWORD PTR [r8]
	...
   1400136e5:	add    BYTE PTR [rax],al
   1400136e7:	add    BYTE PTR [rdi+0x47],al
   1400136ea:	rex.RXB dec r11d
   1400136ed:	outs   dx,BYTE PTR ds:[rsi]
   1400136ee:	add    bh,bh
   1400136f0:	retf   0x6d
   1400136f3:	dec    edx
   1400136f5:	ins    DWORD PTR es:[rdi],dx
   1400136f6:	add    bh,bh
   1400136f8:	retf   0x6c
   1400136fb:	dec    edx
   1400136fd:	ins    BYTE PTR es:[rdi],dx
   1400136fe:	add    bh,bh
   140013700:	leave  
   140013701:	imul   eax,DWORD PTR [rax],0xffffffff
   140013704:	leave  
   140013705:	push   0x0
   140013707:	dec    ecx
   140013709:	push   0x0
   14001370b:	dec    ecx
   14001370d:	imul   eax,DWORD PTR [rax],0x69c8ff
   140013713:	dec    eax
   140013715:	push   0x68c8ff00
   14001371a:	add    bh,bh
   14001371c:	(bad)  
   14001371d:	(bad)  
   14001371e:	(bad)  
   14001371f:	(bad)  
   140013720:	(bad)  
   140013721:	(bad)  
   140013722:	(bad)  
   140013723:	(bad)  
   140013724:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001372a:	(bad)  
   14001372b:	(bad)  
   14001372c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140013732:	(bad)  
   140013733:	(bad)  
   140013734:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001373a:	(bad)  
   14001373b:	(bad)  
   14001373c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140013743:	push   QWORD PTR [rdi]
   140013745:	mov    esp,0xbc37fffe
   14001374a:	(bad)  
   14001374b:	push   QWORD PTR [rsi]
   14001374d:	mov    ebx,0xbb36fffe
   140013752:	(bad)  
   140013753:	inc    DWORD PTR [rdi+0x47]
   140013756:	rex.RXB inc DWORD PTR [r8]
	...
   140013765:	add    BYTE PTR [rax],al
   140013767:	add    BYTE PTR [rdi+0x47],al
   14001376a:	rex.RXB dec r11d
   14001376d:	outs   dx,BYTE PTR ds:[rsi]
   14001376e:	add    bh,bh
   140013770:	retf   
   140013771:	outs   dx,BYTE PTR ds:[rsi]
   140013772:	add    bh,bh
   140013774:	retf   0x6d
   140013777:	dec    edx
   140013779:	ins    DWORD PTR es:[rdi],dx
   14001377a:	add    bh,bh
   14001377c:	retf   0x6c
   14001377f:	dec    edx
   140013781:	ins    BYTE PTR es:[rdi],dx
   140013782:	add    bh,bh
   140013784:	leave  
   140013785:	imul   eax,DWORD PTR [rax],0xffffffff
   140013788:	leave  
   140013789:	push   0x0
   14001378b:	dec    ecx
   14001378d:	push   0x0
   14001378f:	dec    ecx
   140013791:	imul   eax,DWORD PTR [rax],0x69c8ff
   140013797:	dec    eax
   140013799:	push   0xffffffffffffff00
   14001379e:	(bad)  
   14001379f:	(bad)  
   1400137a0:	(bad)  
   1400137a1:	(bad)  
   1400137a2:	(bad)  
   1400137a3:	(bad)  
   1400137a4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400137aa:	(bad)  
   1400137ab:	(bad)  
   1400137ac:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400137b2:	(bad)  
   1400137b3:	(bad)  
   1400137b4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400137ba:	(bad)  
   1400137bb:	(bad)  
   1400137bc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400137c2:	(bad)  
   1400137c3:	push   QWORD PTR [rdi]
   1400137c5:	mov    esp,0xbc37fffe
   1400137ca:	(bad)  
   1400137cb:	push   QWORD PTR [rdi]
   1400137cd:	mov    esp,0xbb36fffe
   1400137d2:	(bad)  
   1400137d3:	inc    DWORD PTR [rdi+0x47]
   1400137d6:	rex.RXB inc DWORD PTR [r8]
	...
   1400137e5:	add    BYTE PTR [rax],al
   1400137e7:	add    BYTE PTR [rdi+0x47],al
   1400137ea:	rex.RXB dec r11d
   1400137ed:	outs   dx,DWORD PTR ds:[rsi]
   1400137ee:	add    bh,bh
   1400137f0:	retf   
   1400137f1:	outs   dx,BYTE PTR ds:[rsi]
   1400137f2:	add    bh,bh
   1400137f4:	retf   
   1400137f5:	outs   dx,BYTE PTR ds:[rsi]
   1400137f6:	add    bh,bh
   1400137f8:	retf   0x6d
   1400137fb:	dec    edx
   1400137fd:	ins    DWORD PTR es:[rdi],dx
   1400137fe:	add    bh,bh
   140013800:	retf   0x6c
   140013803:	dec    edx
   140013805:	ins    BYTE PTR es:[rdi],dx
   140013806:	add    bh,bh
   140013808:	leave  
   140013809:	imul   eax,DWORD PTR [rax],0xffffffff
   14001380c:	leave  
   14001380d:	push   0x0
   14001380f:	dec    ecx
   140013811:	push   0x0
   140013813:	dec    ecx
   140013815:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001381b:	(bad)  
   14001381c:	(bad)  
   14001381d:	(bad)  
   14001381e:	(bad)  
   14001381f:	(bad)  
   140013820:	(bad)  
   140013821:	(bad)  
   140013822:	(bad)  
   140013823:	(bad)  
   140013824:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001382a:	(bad)  
   14001382b:	(bad)  
   14001382c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140013832:	(bad)  
   140013833:	(bad)  
   140013834:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14001383a:	(bad)  
   14001383b:	(bad)  
   14001383c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013842:	(bad)  
   140013843:	(bad)  
   140013844:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001384b:	push   QWORD PTR [rdi]
   14001384d:	mov    esp,0xbc37fffe
   140013852:	(bad)  
   140013853:	inc    DWORD PTR [rdi+0x47]
   140013856:	rex.RXB inc DWORD PTR [r8]
	...
   140013865:	add    BYTE PTR [rax],al
   140013867:	add    BYTE PTR [rdi+0x47],al
   14001386a:	rex.RXB dec r12d
   14001386d:	jo     0x14001386f
   14001386f:	dec    ebx
   140013871:	outs   dx,DWORD PTR ds:[rsi]
   140013872:	add    bh,bh
   140013874:	retf   
   140013875:	outs   dx,BYTE PTR ds:[rsi]
   140013876:	add    bh,bh
   140013878:	retf   
   140013879:	outs   dx,BYTE PTR ds:[rsi]
   14001387a:	add    bh,bh
   14001387c:	retf   0x6d
   14001387f:	dec    edx
   140013881:	ins    DWORD PTR es:[rdi],dx
   140013882:	add    bh,bh
   140013884:	retf   0x6c
   140013887:	dec    edx
   140013889:	ins    BYTE PTR es:[rdi],dx
   14001388a:	add    bh,bh
   14001388c:	leave  
   14001388d:	imul   eax,DWORD PTR [rax],0xffffffff
   140013890:	leave  
   140013891:	push   0x0
   140013893:	dec    ecx
   140013895:	push   0x0
   140013897:	dec    ecx
   140013899:	imul   eax,DWORD PTR [rax],0xffffffff
   14001389f:	(bad)  
   1400138a0:	(bad)  
   1400138a1:	(bad)  
   1400138a2:	(bad)  
   1400138a3:	(bad)  
   1400138a4:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400138aa:	(bad)  
   1400138ab:	(bad)  
   1400138ac:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400138b2:	(bad)  
   1400138b3:	(bad)  
   1400138b4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400138ba:	(bad)  
   1400138bb:	(bad)  
   1400138bc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400138c2:	(bad)  
   1400138c3:	(bad)  
   1400138c4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400138ca:	(bad)  
   1400138cb:	push   QWORD PTR [rdi]
   1400138cd:	mov    esp,0xbc37fffe
   1400138d2:	(bad)  
   1400138d3:	inc    DWORD PTR [rdi+0x47]
   1400138d6:	rex.RXB inc DWORD PTR [r8]
	...
   1400138e5:	add    BYTE PTR [rax],al
   1400138e7:	add    BYTE PTR [rdi+0x47],al
   1400138ea:	rex.RXB dec r12d
   1400138ed:	jo     0x1400138ef
   1400138ef:	dec    esp
   1400138f1:	jo     0x1400138f3
   1400138f3:	dec    ebx
   1400138f5:	outs   dx,DWORD PTR ds:[rsi]
   1400138f6:	add    bh,bh
   1400138f8:	retf   
   1400138f9:	outs   dx,BYTE PTR ds:[rsi]
   1400138fa:	add    bh,bh
   1400138fc:	retf   
   1400138fd:	outs   dx,BYTE PTR ds:[rsi]
   1400138fe:	add    bh,bh
   140013900:	retf   0x6d
   140013903:	dec    edx
   140013905:	ins    DWORD PTR es:[rdi],dx
   140013906:	add    bh,bh
   140013908:	retf   0x6c
   14001390b:	dec    edx
   14001390d:	ins    BYTE PTR es:[rdi],dx
   14001390e:	add    bh,bh
   140013910:	leave  
   140013911:	imul   eax,DWORD PTR [rax],0xffffffff
   140013914:	leave  
   140013915:	push   0x0
   140013917:	dec    ecx
   140013919:	push   0x0
   14001391b:	(bad)  
   14001391c:	(bad)  
   14001391d:	(bad)  
   14001391e:	(bad)  
   14001391f:	(bad)  
   140013920:	(bad)  
   140013921:	(bad)  
   140013922:	(bad)  
   140013923:	(bad)  
   140013924:	cmp    eax,eax
   140013926:	(bad)  
   140013927:	(bad)  
   140013928:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14001392e:	(bad)  
   14001392f:	(bad)  
   140013930:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140013936:	(bad)  
   140013937:	(bad)  
   140013938:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001393e:	(bad)  
   14001393f:	(bad)  
   140013940:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140013946:	(bad)  
   140013947:	(bad)  
   140013948:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001394e:	(bad)  
   14001394f:	push   QWORD PTR [rdi]
   140013951:	mov    esp,0x4747fffe
   140013956:	rex.RXB inc DWORD PTR [r8]
	...
   140013965:	add    BYTE PTR [rax],al
   140013967:	add    BYTE PTR [rdi+0x47],al
   14001396a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001396e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013972:	rex.RXB jmp QWORD PTR [r8+0x4f]
   140013976:	cmp    bh,bh
   140013978:	jns    0x1400139d0
   14001397a:	sub    al,0xff
   14001397c:	(bad)  
   14001397d:	pop    rdi
   14001397e:	sbb    edi,edi
   140013980:	ret    
   140013981:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   140013985:	ins    DWORD PTR es:[rdi],dx
   140013986:	add    bh,bh
   140013988:	retf   0x6d
   14001398b:	dec    edx
   14001398d:	ins    BYTE PTR es:[rdi],dx
   14001398e:	add    bh,bh
   140013990:	retf   0x6c
   140013993:	dec    ecx
   140013995:	imul   eax,DWORD PTR [rax],0xffffffff
   140013998:	leave  
   140013999:	push   0x0
   14001399b:	(bad)  
   14001399c:	(bad)  
   14001399d:	(bad)  
   14001399e:	(bad)  
   14001399f:	(bad)  
   1400139a0:	(bad)  
   1400139a1:	(bad)  
   1400139a2:	(bad)  
   1400139a3:	(bad)  
   1400139a4:	cmp    eax,eax
   1400139a6:	(bad)  
   1400139a7:	(bad)  
   1400139a8:	cmp    eax,eax
   1400139aa:	(bad)  
   1400139ab:	(bad)  
   1400139ac:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400139b2:	(bad)  
   1400139b3:	(bad)  
   1400139b4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400139ba:	(bad)  
   1400139bb:	(bad)  
   1400139bc:	cmp    dh,BYTE PTR [rdi-0x6ec1000d]
   1400139c2:	mov    ecx,0x8c7342ff
   1400139c7:	inc    DWORD PTR [rbp+rbx*2+0x69]
   1400139cb:	inc    DWORD PTR [rdi+0x47]
   1400139ce:	rex.RXB inc DWORD PTR [r15+0x47]
   1400139d2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400139d6:	rex.RXB inc DWORD PTR [r8]
	...
   1400139e5:	add    BYTE PTR [rax],al
   1400139e7:	add    BYTE PTR [rdi+0x47],al
   1400139ea:	rex.RXB
   1400139eb:	rex
   1400139ec:	rex.RXB
   1400139ed:	rex.RXB
   1400139ee:	rex.RXB
   1400139ef:	rex
   1400139f0:	rex.RXB
   1400139f1:	rex.RXB
   1400139f2:	rex.RXB
   1400139f3:	rex
   1400139f4:	rex.RXB
   1400139f5:	rex.RXB
   1400139f6:	rex.RXB add BYTE PTR [r15+0x47],0x47
   1400139fb:	scas   eax,DWORD PTR es:[rdi]
   1400139fc:	rex.RXB
   1400139fd:	rex.RXB
   1400139fe:	rex.RXB inc DWORD PTR [r15+0x47]
   140013a02:	rex.RXB (bad) 
   140013a04:	jns    0x140013a5b
   140013a06:	sub    al,0xff
   140013a08:	mov    edx,0xcaff0968
   140013a0d:	ins    DWORD PTR es:[rdi],dx
   140013a0e:	add    bh,bh
   140013a10:	retf   0x6c
   140013a13:	dec    edx
   140013a15:	ins    BYTE PTR es:[rdi],dx
   140013a16:	add    bh,bh
   140013a18:	leave  
   140013a19:	imul   eax,DWORD PTR [rax],0xffffffff
   140013a1c:	(bad)  
   140013a1d:	(bad)  
   140013a1e:	(bad)  
   140013a1f:	(bad)  
   140013a20:	(bad)  
   140013a21:	(bad)  
   140013a22:	(bad)  
   140013a23:	(bad)  
   140013a24:	cmp    al,0xc0
   140013a26:	(bad)  
   140013a27:	(bad)  
   140013a28:	cmp    eax,eax
   140013a2a:	(bad)  
   140013a2b:	(bad)  
   140013a2c:	cmp    eax,eax
   140013a2e:	(bad)  
   140013a2f:	(bad)  
   140013a30:	cmp    edi,DWORD PTR [rdi-0x4fc30002]
   140013a36:	out    0xff,eax
   140013a38:	rex.X je 0x1400139c7
   140013a3b:	inc    DWORD PTR [rdi+0x47]
   140013a3e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013a42:	rex.RXB inc DWORD PTR [r15+0x47]
   140013a46:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013a48:	rex.RXB
   140013a49:	rex.RXB
   140013a4a:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140013a4f:	rex
   140013a50:	rex.RXB
   140013a51:	rex.RXB
   140013a52:	rex.RXB
   140013a53:	rex
   140013a54:	rex.RXB
   140013a55:	rex.RXB
   140013a56:	rex.RXB
   140013a57:	add    BYTE PTR [rax],al
	...
   140013a7a:	add    BYTE PTR [rax],al
   140013a7c:	rex.RXB
   140013a7d:	rex.RXB
   140013a7e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013a82:	rex.RXB (bad) 
   140013a84:	rex.RXB
   140013a85:	rex.RXB
   140013a86:	rex.RXB fild WORD PTR [r15+0x47]
   140013a8a:	rex.RXB inc DWORD PTR [r8-0x3d00d7a8]
   140013a91:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   140013a95:	ins    BYTE PTR es:[rdi],dx
   140013a96:	add    bh,bh
   140013a98:	retf   0x6c
   140013a9b:	(bad)  
   140013a9c:	(bad)  
   140013a9d:	(bad)  
   140013a9e:	(bad)  
   140013a9f:	(bad)  
   140013aa0:	(bad)  
   140013aa1:	(bad)  
   140013aa2:	(bad)  
   140013aa3:	(bad)  
   140013aa4:	cmp    al,0xc0
   140013aa6:	(bad)  
   140013aa7:	(bad)  
   140013aa8:	cmp    al,0xc0
   140013aaa:	(bad)  
   140013aab:	(bad)  
   140013aac:	cmp    al,0xb8
   140013aae:	repz inc DWORD PTR [rdx+0x7c]
   140013ab2:	xchg   edi,eax
   140013ab3:	inc    DWORD PTR [rdi+0x47]
   140013ab6:	rex.RXB inc DWORD PTR [r15+0x47]
   140013aba:	rex.RXB fild WORD PTR [r15+0x47]
   140013abe:	rex.RXB (bad) 
   140013ac0:	rex.RXB
   140013ac1:	rex.RXB
   140013ac2:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140013b05:	add    BYTE PTR [rax],al
   140013b07:	add    BYTE PTR [rdi+0x47],al
   140013b0a:	rex.RXB jo 0x140013b54
   140013b0d:	rex.RXB
   140013b0e:	rex.RXB out dx,eax
   140013b10:	rex.WRXB
   140013b11:	rex.WB
   140013b12:	rex.XB inc DWORD PTR [r8-0x5600d7a8]
   140013b19:	movsxd edx,DWORD PTR [rdx]
   140013b1b:	call   rcx
   140013b1d:	rcl    ecx,1
   140013b1f:	call   rcx
   140013b21:	rcl    ecx,1
   140013b23:	(bad)  
   140013b24:	(bad)  
   140013b25:	movabs ds:0x4f46ff977c42ffd0,al
   140013b2e:	push   rdx
   140013b2f:	inc    DWORD PTR [rdi+0x47]
   140013b32:	rex.RXB out dx,eax
   140013b34:	rex.RXB
   140013b35:	rex.RXB
   140013b36:	rex.RXB (bad) 
	...
   140013b8c:	rex.RXB
   140013b8d:	rex.RXB
   140013b8e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013b92:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140013b97:	iret   
   140013b98:	rex.RXB
   140013b99:	rex.RXB
   140013b9a:	rex.RXB inc DWORD PTR [r15+0x47]
   140013b9e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013ba2:	rex.RXB inc DWORD PTR [r15+0x47]
   140013ba6:	rex.RXB inc DWORD PTR [r15+0x47]
   140013baa:	rex.RXB iret 
   140013bac:	rex.RXB
   140013bad:	rex.RXB
   140013bae:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140013bb3:	adc    BYTE PTR [rax],al
	...
   140013c5d:	add    BYTE PTR [rax],al
   140013c5f:	add    bh,bh
   140013c61:	(bad)  
   140013c62:	(bad)  
   140013c63:	(bad)  
   140013c64:	(bad)  
   140013c65:	cld    
   140013c66:	(bad)  
   140013c67:	(bad)  
   140013c68:	push   rax
   140013c6a:	ud0    edi,edi
   140013c6d:	loopne 0x140013c76
   140013c6f:	(bad)  
   140013c70:	inc    eax
   140013c72:	add    edi,edi
   140013c74:	inc    DWORD PTR [rax+0xfeff01]
   140013c7a:	add    BYTE PTR [rdi-0x2],bh
   140013c7d:	add    BYTE PTR [rax],al
   140013c7f:	jg     0x140013c7d
   140013c81:	add    BYTE PTR [rax],al
   140013c83:	(bad)  
   140013c84:	clc    
   140013c85:	add    BYTE PTR [rax],al
   140013c87:	(bad)  
   140013c88:	lock add BYTE PTR [rax],al
   140013c8b:	(bad)  
   140013c8d:	add    BYTE PTR [rax],al
   140013c8f:	pavgb  mm0,QWORD PTR [rax]
   140013c92:	add    BYTE PTR [rdi],al
   140013c94:	loopne 0x140013c96
   140013c96:	add    BYTE PTR [rdi],al
   140013c98:	rol    BYTE PTR [rax],0x0
   140013c9b:	add    eax,eax
   140013c9d:	add    BYTE PTR [rax],al
   140013c9f:	add    eax,eax
   140013ca1:	add    BYTE PTR [rax],al
   140013ca3:	add    eax,eax
   140013ca5:	add    BYTE PTR [rax],al
   140013ca7:	add    eax,eax
   140013ca9:	add    BYTE PTR [rax],al
   140013cab:	add    eax,eax
   140013cad:	add    BYTE PTR [rax],al
   140013caf:	add    eax,eax
   140013cb1:	add    BYTE PTR [rax],al
   140013cb3:	add    eax,eax
   140013cb5:	add    BYTE PTR [rax],al
   140013cb7:	add    eax,eax
   140013cb9:	add    BYTE PTR [rax],al
   140013cbb:	add    eax,eax
   140013cbd:	add    BYTE PTR [rax],al
   140013cbf:	add    eax,eax
   140013cc1:	add    BYTE PTR [rax],al
   140013cc3:	add    eax,eax
   140013cc5:	add    BYTE PTR [rax],al
   140013cc7:	add    eax,eax
   140013cc9:	add    BYTE PTR [rax],al
   140013ccb:	add    eax,eax
   140013ccd:	add    BYTE PTR [rax],al
   140013ccf:	add    edi,esi
   140013cd1:	add    BYTE PTR [rax],al
   140013cd3:	jg     0x140013cd4
   140013cd5:	rol    BYTE PTR [rbx],0xff
   140013cd8:	jmp    rax
   140013cda:	(bad)  
   140013cdb:	(bad)  
   140013cdc:	(bad)  
   140013cdd:	(bad)  
   140013cde:	(bad)  
   140013cdf:	jmp    FWORD PTR [rax]
   140013ce1:	add    BYTE PTR [rax],al
   140013ce3:	add    BYTE PTR [rax],bl
   140013ce5:	add    BYTE PTR [rax],al
   140013ce7:	add    BYTE PTR [rax],dh
   140013ce9:	add    BYTE PTR [rax],al
   140013ceb:	add    BYTE PTR [rcx],al
   140013ced:	add    BYTE PTR [rax],ah
	...
   140013d2f:	add    BYTE PTR [rdi+0x47],al
   140013d32:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013d36:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140013d3b:	pop    QWORD PTR [rdi+0x47]
   140013d3e:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140013d89:	add    BYTE PTR [rax],al
   140013d8b:	add    BYTE PTR [rdi+0x47],al
   140013d8e:	rex.RXB push r8
   140013d90:	rex.RXB
   140013d91:	rex.RXB
   140013d92:	rex.RXB fild WORD PTR [r14+0x4e]
   140013d96:	push   rdx
   140013d97:	dec    DWORD PTR [rdi+0x48]
   140013d9a:	rex.XB inc DWORD PTR [r15+0x47]
   140013d9e:	rex.RXB out dx,eax
   140013da0:	rex.RXB
   140013da1:	rex.RXB
   140013da2:	rex.RXB push r8
	...
   140013de4:	rex.RXB
   140013de5:	rex.RXB
   140013de6:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013dea:	rex.RXB pop QWORD PTR [r15+0x47]
   140013dee:	rex.RXB inc DWORD PTR [r9+0x6b]
   140013df2:	cmp    bh,0x36
   140013df5:	mov    bl,0xf3
   140013df7:	(bad)  
   140013df8:	mov    ebx,0x6eff045b
   140013dfd:	rex.WRX xor rdi,r15
   140013e00:	rex.RXB
   140013e01:	rex.RXB
   140013e02:	rex.RXB inc DWORD PTR [r15+0x47]
   140013e06:	rex.RXB lahf 
   140013e08:	rex.RXB
   140013e09:	rex.RXB
   140013e0a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140013e3d:	add    BYTE PTR [rax],al
   140013e3f:	add    BYTE PTR [rdi+0x47],al
   140013e42:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140013e46:	rex.RXB iret 
   140013e48:	rex.RX
   140013e49:	rex.WRX push rdx
   140013e4b:	(bad)  
   140013e4c:	cmp    edx,DWORD PTR [rdi-0x44c9003b]
   140013e52:	(bad)  
   140013e53:	push   QWORD PTR [rip+0xffffffffc3fffeba]        # 0x104013d13
   140013e59:	pop    rbp
   140013e5a:	add    bh,bh
   140013e5c:	ret    
   140013e5d:	pop    rbp
   140013e5e:	add    bh,bh
   140013e60:	pushf  
   140013e61:	push   rbp
   140013e62:	(bad)  
   140013e63:	dec    DWORD PTR [rdi+0x48]
   140013e66:	rex.XB inc DWORD PTR [r15+0x47]
   140013e6a:	rex.RXB iret 
   140013e6c:	rex.RXB
   140013e6d:	rex.RXB
   140013e6e:	rex.RXB and BYTE PTR [r8],r8b
	...
   140013e99:	add    BYTE PTR [rax],al
   140013e9b:	add    BYTE PTR [rdi+0x47],al
   140013e9e:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140013ea2:	rex.RXB out dx,eax
   140013ea4:	rex.R pop rbp
   140013ea6:	imul   edi,edi,0xffdca63a
   140013eac:	ss mov ebx,0xbb36fffe
   140013eb2:	(bad)  
   140013eb3:	push   QWORD PTR [rsi]
   140013eb5:	mov    ebx,0x5ec4fffe
   140013eba:	add    bh,bh
   140013ebc:	ret    
   140013ebd:	pop    rbp
   140013ebe:	add    bh,bh
   140013ec0:	ret    
   140013ec1:	pop    rbp
   140013ec2:	add    bh,bh
   140013ec4:	mov    bl,0x59
   140013ec6:	or     edi,edi
   140013ec8:	pop    rsi
   140013ec9:	rex.WXB cmp dil,r15b
   140013ecc:	rex.RXB
   140013ecd:	rex.RXB
   140013ece:	rex.RXB out dx,eax
   140013ed0:	rex.RXB
   140013ed1:	rex.RXB
   140013ed2:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140013ef5:	add    BYTE PTR [rax],al
   140013ef7:	add    BYTE PTR [rdi+0x47],al
   140013efa:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140013efe:	rex.RXB out dx,eax
   140013f00:	rex.R pop rbp
   140013f02:	imul   edi,edi,0xfff3b539
   140013f08:	(bad)  
   140013f09:	mov    esp,0xbc37fffe
   140013f0e:	(bad)  
   140013f0f:	push   QWORD PTR [rsi]
   140013f11:	mov    ebx,0xbb36fffe
   140013f16:	(bad)  
   140013f17:	inc    esp
   140013f19:	pop    rdi
   140013f1a:	add    bh,bh
   140013f1c:	(bad)  
   140013f1d:	pop    rsi
   140013f1e:	add    bh,bh
   140013f20:	ret    
   140013f21:	pop    rbp
   140013f22:	add    bh,bh
   140013f24:	ret    
   140013f25:	pop    rbp
   140013f26:	add    bh,bh
   140013f28:	mov    ebx,0x5eff045b
   140013f2d:	rex.WXB cmp dil,r15b
   140013f30:	rex.RXB
   140013f31:	rex.RXB
   140013f32:	rex.RXB out dx,eax
   140013f34:	rex.RXB
   140013f35:	rex.RXB
   140013f36:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140013f51:	add    BYTE PTR [rax],al
   140013f53:	add    BYTE PTR [rdi+0x47],al
   140013f56:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013f5a:	rex.RXB fild WORD PTR [r13+r11*2+0x69]
   140013f5f:	(bad)  
   140013f60:	cmp    DWORD PTR [rsi-0x42c7000d],esi
   140013f66:	(bad)  
   140013f67:	(bad)  
   140013f68:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140013f6f:	push   QWORD PTR [rdi]
   140013f71:	mov    esp,0xbb36fffe
   140013f76:	(bad)  
   140013f77:	inc    esp
   140013f79:	pop    rdi
   140013f7a:	add    bh,bh
   140013f7c:	(bad)  
   140013f7d:	pop    rdi
   140013f7e:	add    bh,bh
   140013f80:	(bad)  
   140013f81:	pop    rsi
   140013f82:	add    bh,bh
   140013f84:	ret    
   140013f85:	pop    rbp
   140013f86:	add    bh,bh
   140013f88:	ret    
   140013f89:	pop    rbp
   140013f8a:	add    bh,bh
   140013f8c:	mov    ebx,0x5eff045b
   140013f91:	rex.WXB cmp dil,r15b
   140013f94:	rex.RXB
   140013f95:	rex.RXB
   140013f96:	rex.RXB fild WORD PTR [r15+0x47]
   140013f9a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140013fb1:	add    BYTE PTR [rax],al
   140013fb3:	add    BYTE PTR [rdi+0x47],al
   140013fb6:	rex.RXB mov r15d,0xff524e46
   140013fbc:	cmp    dh,BYTE PTR [rdi-0x41c6000d]
   140013fc2:	(bad)  
   140013fc3:	(bad)  
   140013fc4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013fca:	(bad)  
   140013fcb:	(bad)  
   140013fcc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140013fd3:	push   QWORD PTR [rdi]
   140013fd5:	mov    esp,0x60c5fffe
   140013fda:	add    bh,bh
   140013fdc:	(bad)  
   140013fdd:	pop    rdi
   140013fde:	add    bh,bh
   140013fe0:	(bad)  
   140013fe1:	pop    rdi
   140013fe2:	add    bh,bh
   140013fe4:	(bad)  
   140013fe5:	pop    rsi
   140013fe6:	add    bh,bh
   140013fe8:	ret    
   140013fe9:	pop    rbp
   140013fea:	add    bh,bh
   140013fec:	ret    
   140013fed:	pop    rbp
   140013fee:	add    bh,bh
   140013ff0:	mov    ebx,0x56ff045b
   140013ff5:	rex.WX
   140013ff6:	inc    DWORD PTR ds:[rdi+0x47]
   140013ffa:	rex.RXB mov r15d,0x0
	...
   140014010:	rex.RXB
   140014011:	rex.RXB
   140014012:	rex.RXB (bad) 
   140014014:	rex.RXB
   140014015:	rex.RXB
   140014016:	rex.RXB (bad) 
   140014018:	cmp    eax,0x3affd0a1
   14001401d:	mov    esi,0xbe39fffe
   140014022:	(bad)  
   140014023:	(bad)  
   140014024:	cmp    DWORD PTR [rsi-0x42c70002],edi
   14001402a:	(bad)  
   14001402b:	(bad)  
   14001402c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140014032:	(bad)  
   140014033:	push   QWORD PTR [rdi]
   140014035:	mov    esp,0x61c5fffe
   14001403a:	add    bh,bh
   14001403c:	(bad)
   14001403f:	inc    esp
   140014041:	pop    rdi
   140014042:	add    bh,bh
   140014044:	(bad)  
   140014045:	pop    rdi
   140014046:	add    bh,bh
   140014048:	(bad)  
   140014049:	pop    rsi
   14001404a:	add    bh,bh
   14001404c:	ret    
   14001404d:	pop    rbp
   14001404e:	add    bh,bh
   140014050:	ret    
   140014051:	pop    rbp
   140014052:	add    bh,bh
   140014054:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014055:	push   rdi
   140014056:	adc    bh,bh
   140014058:	rex.RXB
   140014059:	rex.RXB
   14001405a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001405e:	rex.RXB (bad) 
	...
   140014070:	rex.RXB
   140014071:	rex.RXB
   140014072:	rex.RXB fild WORD PTR [r10+0x74]
   140014076:	mov    edi,?
   140014078:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001407e:	(bad)  
   14001407f:	(bad)  
   140014080:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140014086:	(bad)  
   140014087:	(bad)  
   140014088:	cmp    DWORD PTR [rsi-0x42c70002],edi
   14001408e:	(bad)  
   14001408f:	(bad)  
   140014090:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140014096:	(bad)  
   140014097:	inc    ebp
   140014099:	(bad)  
   14001409a:	add    bh,bh
   14001409c:	(bad)
   14001409f:	inc    ebp
   1400140a1:	(bad)  
   1400140a2:	add    bh,bh
   1400140a4:	(bad)  
   1400140a5:	pop    rdi
   1400140a6:	add    bh,bh
   1400140a8:	(bad)  
   1400140a9:	pop    rdi
   1400140aa:	add    bh,bh
   1400140ac:	(bad)  
   1400140ad:	pop    rsi
   1400140ae:	add    bh,bh
   1400140b0:	ret    
   1400140b1:	pop    rbp
   1400140b2:	add    bh,bh
   1400140b4:	ret    
   1400140b5:	pop    rbp
   1400140b6:	add    bh,bh
   1400140b8:	jbe    0x140014109
   1400140ba:	sub    al,0xff
   1400140bc:	rex.RXB
   1400140bd:	rex.RXB
   1400140be:	rex.RXB fild WORD PTR [r8]
	...
   1400140c9:	add    BYTE PTR [rax],al
   1400140cb:	add    BYTE PTR [rdi+0x47],al
   1400140ce:	rex.RXB (bad) 
   1400140d0:	rex.RXB
   1400140d1:	rex.RXB
   1400140d2:	rex.RXB (bad) 
   1400140d4:	cmp    eax,0x3bffe7b1
   1400140d9:	sar    dh,0xff
   1400140dc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400140e2:	(bad)  
   1400140e3:	(bad)  
   1400140e4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400140ea:	(bad)  
   1400140eb:	(bad)  
   1400140ec:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400140f2:	(bad)  
   1400140f3:	(bad)  
   1400140f4:	cmp    BYTE PTR [rbp+0x62c6fffe],bh
   1400140fa:	add    bh,bh
   1400140fc:	(bad)
   1400140ff:	inc    ebp
   140014101:	(bad)  
   140014102:	add    bh,bh
   140014104:	(bad)
   140014107:	inc    esp
   140014109:	pop    rdi
   14001410a:	add    bh,bh
   14001410c:	(bad)  
   14001410d:	pop    rdi
   14001410e:	add    bh,bh
   140014110:	(bad)  
   140014111:	pop    rsi
   140014112:	add    bh,bh
   140014114:	ret    
   140014115:	pop    rbp
   140014116:	add    bh,bh
   140014118:	mov    ah,0x5a
   14001411a:	or     edi,edi
   14001411c:	rex.RXB
   14001411d:	rex.RXB
   14001411e:	rex.RXB inc DWORD PTR [r15+0x47]
   140014122:	rex.RXB (bad) 
	...
   14001412c:	rex.RXB
   14001412d:	rex.RXB
   14001412e:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014130:	rex.R ins DWORD PTR es:[rdi],dx
   140014132:	cmp    bh,0x3c
   140014135:	sar    dh,0xff
   140014138:	cmp    eax,eax
   14001413a:	(bad)  
   14001413b:	(bad)  
   14001413c:	cmp    eax,eax
   14001413e:	(bad)  
   14001413f:	(bad)  
   140014140:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140014146:	(bad)  
   140014147:	(bad)  
   140014148:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001414e:	(bad)  
   14001414f:	(bad)  
   140014150:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014156:	(bad)  
   140014157:	inc    esi
   140014159:	movsxd eax,DWORD PTR [rax]
   14001415b:	inc    esi
   14001415d:	(bad)  
   14001415e:	add    bh,bh
   140014160:	(bad)
   140014163:	inc    ebp
   140014165:	(bad)  
   140014166:	add    bh,bh
   140014168:	(bad)
   14001416b:	inc    esp
   14001416d:	pop    rdi
   14001416e:	add    bh,bh
   140014170:	(bad)  
   140014171:	pop    rdi
   140014172:	add    bh,bh
   140014174:	(bad)  
   140014175:	pop    rsi
   140014176:	add    bh,bh
   140014178:	ret    
   140014179:	pop    rbp
   14001417a:	add    bh,bh
   14001417c:	outs   dx,BYTE PTR ds:[rsi]
   14001417d:	rex.WRX xor rdi,r15
   140014180:	rex.RXB
   140014181:	rex.RXB
   140014182:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   14001418c:	rex.RXB
   14001418d:	rex.RXB
   14001418e:	rex.RXB out dx,eax
   140014190:	nop
   140014191:	pop    rbx
   140014192:	(bad)  
   140014193:	dec    ecx
   140014195:	push   0x0
   140014197:	dec    ecx
   140014199:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001419f:	dec    eax
   1400141a1:	push   0x67c8ff00
   1400141a6:	add    bh,bh
   1400141a8:	(bad)  
   1400141a9:	data16 add bh,bh
   1400141ac:	(bad)  
   1400141ad:	data16 add bh,bh
   1400141b0:	(bad)  
   1400141b1:	gs add bh,bh
   1400141b4:	(bad)  
   1400141b5:	gs add bh,bh
   1400141b8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400141be:	(bad)  
   1400141bf:	(bad)  
   1400141c0:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400141c7:	push   QWORD PTR [rdi]
   1400141c9:	mov    esp,0xbb36fffe
   1400141ce:	(bad)  
   1400141cf:	push   QWORD PTR [rsi]
   1400141d1:	mov    ebx,0xbb36fffe
   1400141d6:	(bad)  
   1400141d7:	push   QWORD PTR [rip+0x3dfffeba]        # 0x17e014097
   1400141dd:	mov    BYTE PTR [rsi+0x474747ff],ch
   1400141e3:	out    dx,eax
	...
   1400141ec:	rex.RXB
   1400141ed:	rex.RXB
   1400141ee:	rex.RXB jmp FWORD PTR [r9-0x3600ed9e]
   1400141f5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400141f8:	leave  
   1400141f9:	push   0x0
   1400141fb:	dec    ecx
   1400141fd:	imul   eax,DWORD PTR [rax],0x69c8ff
   140014203:	dec    eax
   140014205:	push   0x67c8ff00
   14001420a:	add    bh,bh
   14001420c:	(bad)  
   14001420d:	data16 add bh,bh
   140014210:	(bad)  
   140014211:	data16 add bh,bh
   140014214:	(bad)  
   140014215:	gs add bh,bh
   140014218:	cmp    DWORD PTR [rsi-0x42c70002],edi
   14001421e:	(bad)  
   14001421f:	(bad)  
   140014220:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140014226:	(bad)  
   140014227:	push   QWORD PTR [rdi]
   140014229:	mov    esp,0xbc37fffe
   14001422e:	(bad)  
   14001422f:	push   QWORD PTR [rsi]
   140014231:	mov    ebx,0xbb36fffe
   140014236:	(bad)  
   140014237:	push   QWORD PTR [rsi]
   140014239:	mov    ebx,0x9d3afffe
   14001423e:	sar    bh,1
   140014240:	rex.RXB
   140014241:	rex.RXB
   140014242:	rex.RXB inc DWORD PTR [r8]
   140014245:	add    BYTE PTR [rax],al
   140014247:	add    BYTE PTR [rax],al
   140014249:	add    BYTE PTR [rax],al
   14001424b:	add    BYTE PTR [rdi+0x47],al
   14001424e:	rex.RXB push QWORD PTR [r9-0x3500f29b]
   140014255:	ins    BYTE PTR es:[rdi],dx
   140014256:	add    bh,bh
   140014258:	leave  
   140014259:	imul   eax,DWORD PTR [rax],0xffffffff
   14001425c:	leave  
   14001425d:	push   0x0
   14001425f:	dec    ecx
   140014261:	imul   eax,DWORD PTR [rax],0x69c8ff
   140014267:	dec    eax
   140014269:	push   0x67c8ff00
   14001426e:	add    bh,bh
   140014270:	(bad)  
   140014271:	data16 add bh,bh
   140014274:	(bad)  
   140014275:	data16 add bh,bh
   140014278:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001427e:	(bad)  
   14001427f:	(bad)  
   140014280:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014286:	(bad)  
   140014287:	(bad)  
   140014288:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001428f:	push   QWORD PTR [rdi]
   140014291:	mov    esp,0xbb36fffe
   140014296:	(bad)  
   140014297:	push   QWORD PTR [rsi]
   140014299:	mov    ebx,0xa539fffe
   14001429e:	fdiv   st(7),st
   1400142a0:	rex.RXB
   1400142a1:	rex.RXB
   1400142a2:	rex.RXB inc DWORD PTR [r8]
   1400142a5:	add    BYTE PTR [rax],al
   1400142a7:	add    BYTE PTR [rax],al
   1400142a9:	add    BYTE PTR [rax],al
   1400142ab:	add    BYTE PTR [rdi+0x47],al
   1400142ae:	rex.RXB dec r10d
   1400142b1:	ins    DWORD PTR es:[rdi],dx
   1400142b2:	add    bh,bh
   1400142b4:	retf   0x6c
   1400142b7:	dec    edx
   1400142b9:	ins    BYTE PTR es:[rdi],dx
   1400142ba:	add    bh,bh
   1400142bc:	leave  
   1400142bd:	imul   eax,DWORD PTR [rax],0xffffffff
   1400142c0:	leave  
   1400142c1:	push   0x0
   1400142c3:	dec    ecx
   1400142c5:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400142cb:	dec    eax
   1400142cd:	push   0x67c8ff00
   1400142d2:	add    bh,bh
   1400142d4:	(bad)  
   1400142d5:	data16 add bh,bh
   1400142d8:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400142de:	(bad)  
   1400142df:	(bad)  
   1400142e0:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400142e6:	(bad)  
   1400142e7:	(bad)  
   1400142e8:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400142ee:	(bad)  
   1400142ef:	push   QWORD PTR [rdi]
   1400142f1:	mov    esp,0xbc37fffe
   1400142f6:	(bad)  
   1400142f7:	push   QWORD PTR [rsi]
   1400142f9:	mov    ebx,0xbb36fffe
   1400142fe:	(bad)  
   1400142ff:	inc    DWORD PTR [rdi+0x47]
   140014302:	rex.RXB inc DWORD PTR [r8]
   140014305:	add    BYTE PTR [rax],al
   140014307:	add    BYTE PTR [rax],al
   140014309:	add    BYTE PTR [rax],al
   14001430b:	add    BYTE PTR [rdi+0x47],al
   14001430e:	rex.RXB dec r11d
   140014311:	outs   dx,BYTE PTR ds:[rsi]
   140014312:	add    bh,bh
   140014314:	retf   0x6d
   140014317:	dec    edx
   140014319:	ins    BYTE PTR es:[rdi],dx
   14001431a:	add    bh,bh
   14001431c:	retf   0x6c
   14001431f:	dec    ecx
   140014321:	imul   eax,DWORD PTR [rax],0xffffffff
   140014324:	leave  
   140014325:	push   0x0
   140014327:	dec    ecx
   140014329:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001432f:	dec    eax
   140014331:	push   0x67c8ff00
   140014336:	add    bh,bh
   140014338:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14001433e:	(bad)  
   14001433f:	(bad)  
   140014340:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140014346:	(bad)  
   140014347:	(bad)  
   140014348:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001434e:	(bad)  
   14001434f:	(bad)  
   140014350:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140014357:	push   QWORD PTR [rdi]
   140014359:	mov    esp,0xbb36fffe
   14001435e:	(bad)  
   14001435f:	inc    DWORD PTR [rdi+0x47]
   140014362:	rex.RXB inc DWORD PTR [r8]
   140014365:	add    BYTE PTR [rax],al
   140014367:	add    BYTE PTR [rax],al
   140014369:	add    BYTE PTR [rax],al
   14001436b:	add    BYTE PTR [rdi+0x47],al
   14001436e:	rex.RXB dec r11d
   140014371:	outs   dx,BYTE PTR ds:[rsi]
   140014372:	add    bh,bh
   140014374:	retf   
   140014375:	outs   dx,BYTE PTR ds:[rsi]
   140014376:	add    bh,bh
   140014378:	retf   0x6d
   14001437b:	dec    edx
   14001437d:	ins    BYTE PTR es:[rdi],dx
   14001437e:	add    bh,bh
   140014380:	retf   0x6c
   140014383:	dec    ecx
   140014385:	imul   eax,DWORD PTR [rax],0xffffffff
   140014388:	leave  
   140014389:	push   0x0
   14001438b:	dec    ecx
   14001438d:	imul   eax,DWORD PTR [rax],0x69c8ff
   140014393:	dec    eax
   140014395:	push   0xffffffffbf3aff00
   14001439a:	(bad)  
   14001439b:	(bad)  
   14001439c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400143a2:	(bad)  
   1400143a3:	(bad)  
   1400143a4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400143aa:	(bad)  
   1400143ab:	(bad)  
   1400143ac:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400143b2:	(bad)  
   1400143b3:	(bad)  
   1400143b4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400143bb:	push   QWORD PTR [rdi]
   1400143bd:	mov    esp,0x4747fffe
   1400143c2:	rex.RXB inc DWORD PTR [r8]
   1400143c5:	add    BYTE PTR [rax],al
   1400143c7:	add    BYTE PTR [rax],al
   1400143c9:	add    BYTE PTR [rax],al
   1400143cb:	add    BYTE PTR [rdi+0x47],al
   1400143ce:	rex.RXB dec r11d
   1400143d1:	outs   dx,DWORD PTR ds:[rsi]
   1400143d2:	add    bh,bh
   1400143d4:	retf   
   1400143d5:	outs   dx,BYTE PTR ds:[rsi]
   1400143d6:	add    bh,bh
   1400143d8:	retf   
   1400143d9:	outs   dx,BYTE PTR ds:[rsi]
   1400143da:	add    bh,bh
   1400143dc:	retf   0x6d
   1400143df:	dec    edx
   1400143e1:	ins    BYTE PTR es:[rdi],dx
   1400143e2:	add    bh,bh
   1400143e4:	retf   0x6c
   1400143e7:	dec    ecx
   1400143e9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400143ec:	leave  
   1400143ed:	push   0x0
   1400143ef:	dec    ecx
   1400143f1:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400143f7:	(bad)  
   1400143f8:	cmp    eax,eax
   1400143fa:	(bad)  
   1400143fb:	(bad)  
   1400143fc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140014402:	(bad)  
   140014403:	(bad)  
   140014404:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001440a:	(bad)  
   14001440b:	(bad)  
   14001440c:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014412:	(bad)  
   140014413:	(bad)  
   140014414:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001441a:	(bad)  
   14001441b:	push   QWORD PTR [rdi]
   14001441d:	mov    esp,0x4747fffe
   140014422:	rex.RXB inc DWORD PTR [r8]
   140014425:	add    BYTE PTR [rax],al
   140014427:	add    BYTE PTR [rax],al
   140014429:	add    BYTE PTR [rax],al
   14001442b:	add    BYTE PTR [rdi+0x47],al
   14001442e:	rex.RXB jmp FWORD PTR [r11-0x4400ed9a]
   140014435:	push   0x9
   140014437:	dec    ebx
   140014439:	outs   dx,BYTE PTR ds:[rsi]
   14001443a:	add    bh,bh
   14001443c:	retf   
   14001443d:	outs   dx,BYTE PTR ds:[rsi]
   14001443e:	add    bh,bh
   140014440:	retf   0x6d
   140014443:	dec    edx
   140014445:	ins    BYTE PTR es:[rdi],dx
   140014446:	add    bh,bh
   140014448:	retf   0x6c
   14001444b:	dec    ecx
   14001444d:	imul   eax,DWORD PTR [rax],0xffffffff
   140014450:	leave  
   140014451:	push   0x0
   140014453:	dec    ecx
   140014455:	imul   eax,DWORD PTR [rax],0xfec03bff
   14001445b:	(bad)  
   14001445c:	cmp    eax,eax
   14001445e:	(bad)  
   14001445f:	(bad)  
   140014460:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140014466:	(bad)  
   140014467:	(bad)  
   140014468:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001446e:	(bad)  
   14001446f:	(bad)  
   140014470:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014476:	(bad)  
   140014477:	(bad)  
   140014478:	cmp    ch,BYTE PTR [rsi-0x60c40019]
   14001447e:	sar    bh,1
   140014480:	rex.RXB
   140014481:	rex.RXB
   140014482:	rex.RXB inc DWORD PTR [r8]
   140014485:	add    BYTE PTR [rax],al
   140014487:	add    BYTE PTR [rax],al
   140014489:	add    BYTE PTR [rax],al
   14001448b:	add    BYTE PTR [rdi+0x47],al
   14001448e:	rex.RXB inc DWORD PTR [r15+0x47]
   140014492:	rex.RXB inc DWORD PTR [r15+0x47]
   140014496:	rex.RXB dec DWORD PTR [r15+0x4a]
   14001449a:	rex.XB push QWORD PTR [r8+0x53]
   14001449e:	xor    edi,edi
   1400144a0:	movabs ds:0xcaff006dcaff1661,al
   1400144a9:	ins    BYTE PTR es:[rdi],dx
   1400144aa:	add    bh,bh
   1400144ac:	retf   0x6c
   1400144af:	dec    ecx
   1400144b1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400144b4:	leave  
   1400144b5:	push   0x0
   1400144b7:	(bad)  
   1400144b8:	cmp    al,0xc0
   1400144ba:	(bad)  
   1400144bb:	(bad)  
   1400144bc:	cmp    eax,eax
   1400144be:	(bad)  
   1400144bf:	(bad)  
   1400144c0:	cmp    eax,eax
   1400144c2:	(bad)  
   1400144c3:	(bad)  
   1400144c4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400144ca:	(bad)  
   1400144cb:	(bad)  
   1400144cc:	(bad)  
   1400144cd:	xchg   ecx,eax
   1400144ce:	mov    ecx,0x806c43ff
   1400144d3:	inc    DWORD PTR [rsi+0x4e]
   1400144d6:	push   rdx
   1400144d7:	inc    DWORD PTR [rdi+0x47]
   1400144da:	rex.RXB inc DWORD PTR [r15+0x47]
   1400144de:	rex.RXB inc DWORD PTR [r15+0x47]
   1400144e2:	rex.RXB inc DWORD PTR [r8]
	...
   1400144f1:	add    BYTE PTR [rax],al
   1400144f3:	add    BYTE PTR [rdi+0x47],al
   1400144f6:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   1400144fa:	rex.RXB (bad) 
   1400144fc:	rex.RXB
   1400144fd:	rex.RXB
   1400144fe:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014500:	rex.RXB
   140014501:	rex.RXB
   140014502:	rex.RXB call QWORD PTR [r15+0x4c]
   140014506:	jmp    FWORD PTR ds:[rcx-0x3500ed9c]
   14001450d:	ins    BYTE PTR es:[rdi],dx
   14001450e:	add    bh,bh
   140014510:	retf   0x6c
   140014513:	dec    ecx
   140014515:	imul   eax,DWORD PTR [rax],0xffffffff
   140014518:	cmp    al,0xc0
   14001451a:	(bad)  
   14001451b:	(bad)  
   14001451c:	cmp    al,0xc0
   14001451e:	(bad)  
   14001451f:	(bad)  
   140014520:	cmp    eax,eax
   140014522:	(bad)  
   140014523:	(bad)  
   140014524:	(bad)  
   140014525:	(bad)  
   140014526:	(bad)  
   140014529:	push   rsi
   14001452a:	pop    rsi
   14001452b:	inc    DWORD PTR [rdi+0x47]
   14001452e:	rex.RXB inc DWORD PTR [r15+0x47]
   140014532:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014534:	rex.RXB
   140014535:	rex.RXB
   140014536:	rex.RXB (bad) 
   140014538:	rex.RXB
   140014539:	rex.RXB
   14001453a:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14001455d:	add    BYTE PTR [rax],al
   14001455f:	add    BYTE PTR [rdi+0x47],al
   140014562:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140014566:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014568:	rex.RXB
   140014569:	rex.RXB
   14001456a:	rex.RXB jmp FWORD PTR [r8+0x51]
   14001456e:	xor    eax,0x1f5c91ff
   140014573:	jmp    FWORD PTR [rcx+0x3fff1262]
   140014579:	movabs ds:0x6544ffae8b41ffd0,eax
   140014582:	jne    0x140014583
   140014584:	rex.RXB
   140014585:	rex.RXB
   140014586:	rex.RXB inc DWORD PTR [r15+0x47]
   14001458a:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14001458c:	rex.RXB
   14001458d:	rex.RXB
   14001458e:	rex.RXB and BYTE PTR [r8],r8b
	...
   1400145c5:	add    BYTE PTR [rax],al
   1400145c7:	add    BYTE PTR [rdi+0x47],al
   1400145ca:	rex.RXB
   1400145cb:	rex
   1400145cc:	rex.RXB
   1400145cd:	rex.RXB
   1400145ce:	rex.RXB lahf 
   1400145d0:	rex.RXB
   1400145d1:	rex.RXB
   1400145d2:	rex.RXB fild WORD PTR [r15+0x47]
   1400145d6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400145da:	rex.RXB inc DWORD PTR [r15+0x47]
   1400145de:	rex.RXB fild WORD PTR [r15+0x47]
   1400145e2:	rex.RXB lahf 
   1400145e4:	rex.RXB
   1400145e5:	rex.RXB
   1400145e6:	rex.RXB
   1400145e7:	add    BYTE PTR [rax],al
	...
   140014606:	add    BYTE PTR [rax],al
   140014608:	inc    ebx
   14001460a:	inc    DWORD PTR [rax]
   14001460c:	inc    DWORD PTR [rcx+0xfe00ff]
   140014612:	jg     0x140014613
   140014614:	cld    
   140014615:	add    BYTE PTR [rdi],bh
   140014617:	(bad)  
   140014618:	clc    
   140014619:	add    BYTE PTR [rdi],bl
   14001461b:	push   rax
   14001461d:	add    BYTE PTR [rdi],cl
   14001461f:	jmp    rax
   140014621:	add    BYTE PTR [rdi],al
   140014623:	jmp    rax
   140014625:	add    BYTE PTR [rdi],al
   140014627:	inc    eax
   140014629:	add    BYTE PTR [rbx],al
   14001462b:	inc    eax
   14001462d:	add    BYTE PTR [rbx],al
   14001462f:	inc    DWORD PTR [rax-0x7f00ff00]
   140014635:	add    BYTE PTR [rcx],al
   140014637:	inc    DWORD PTR [rax-0x7f00ff00]
   14001463d:	add    BYTE PTR [rcx],al
   14001463f:	inc    DWORD PTR [rax-0x7f00ff00]
   140014645:	add    BYTE PTR [rcx],al
   140014647:	inc    DWORD PTR [rax-0x7f00ff00]
   14001464d:	add    BYTE PTR [rcx],al
   14001464f:	inc    DWORD PTR [rax-0x7f00ff00]
   140014655:	add    BYTE PTR [rcx],al
   140014657:	inc    DWORD PTR [rax-0x1f00ff00]
   14001465d:	add    BYTE PTR [rdi],al
   14001465f:	(bad)  
   140014660:	cld    
   140014661:	add    BYTE PTR [rdi],bh
   140014663:	(bad)  
   140014664:	inc    DWORD PTR [rax]
   140014666:	(bad)  
   140014667:	jmp    FWORD PTR [rax]
   140014669:	add    BYTE PTR [rax],al
   14001466b:	add    BYTE PTR [rax+rax*1],dl
   14001466e:	add    BYTE PTR [rax],al
   140014670:	sub    BYTE PTR [rax],al
   140014672:	add    BYTE PTR [rax],al
   140014674:	add    DWORD PTR [rax],eax
   140014676:	and    BYTE PTR [rax],al
	...
   1400146b4:	rex.RXB
   1400146b5:	rex.RXB
   1400146b6:	rex.RXB add BYTE PTR [r15+0x47],0x47
   1400146bb:	add    BYTE PTR [rax],0x0
	...
   1400146fa:	add    BYTE PTR [rax],al
   1400146fc:	rex.RXB
   1400146fd:	rex.RXB
   1400146fe:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140014702:	rex.RXB fild WORD PTR [r14+0x4e]
   140014706:	push   rdx
   140014707:	dec    DWORD PTR [rdi+0x48]
   14001470a:	rex.XB inc DWORD PTR [r15+0x47]
   14001470e:	rex.RXB iret 
   140014710:	rex.RXB
   140014711:	rex.RXB
   140014712:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140014745:	add    BYTE PTR [rax],al
   140014747:	add    BYTE PTR [rdi+0x47],al
   14001474a:	rex.RXB jo 0x140014794
   14001474d:	rex.RXB
   14001474e:	rex.RXB inc DWORD PTR [r11+0x64]
   140014752:	jne    0x140014753
   140014754:	(bad)  
   140014755:	lods   al,BYTE PTR ds:[rsi]
   140014756:	out    0xff,eax
   140014758:	mov    ah,0x5a
   14001475a:	or     edi,edi
   14001475c:	data16 rex.WR xor rax,0x474747ff
   140014763:	inc    DWORD PTR [rdi+0x47]
   140014766:	rex.RXB jo 0x140014769
	...
   140014791:	add    BYTE PTR [rax],al
   140014793:	add    BYTE PTR [rdi+0x47],al
   140014796:	rex.RXB lahf 
   140014798:	rex.RXB
   140014799:	rex.RXB
   14001479a:	rex.RXB (bad) 
   14001479c:	(bad)  
   14001479d:	and    DWORD PTR [rbx-0x144c901],0xfeba35ff
   1400147a7:	inc    ebx
   1400147a9:	pop    rsi
   1400147aa:	add    bh,bh
   1400147ac:	ret    
   1400147ad:	pop    rbp
   1400147ae:	add    bh,bh
   1400147b0:	test   DWORD PTR [rdx+0x24],edx
   1400147b3:	inc    DWORD PTR [rdi+0x47]
   1400147b6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400147ba:	rex.RXB lahf 
	...
   1400147e0:	rex.RXB
   1400147e1:	rex.RXB
   1400147e2:	rex.RXB lahf 
   1400147e4:	rex.RXB
   1400147e5:	rex.RXB
   1400147e6:	rex.RXB (bad) 
   1400147e8:	cmp    eax,0x37ffb990
   1400147ed:	mov    esp,0xbb36fffe
   1400147f2:	(bad)  
   1400147f3:	push   QWORD PTR [rsi]
   1400147f5:	mov    ebx,0x5ec4fffe
   1400147fa:	add    bh,bh
   1400147fc:	ret    
   1400147fd:	pop    rsi
   1400147fe:	add    bh,bh
   140014800:	ret    
   140014801:	pop    rbp
   140014802:	add    bh,bh
   140014804:	xchg   ebp,eax
   140014805:	push   rsp
   140014806:	sbb    edi,edi
   140014808:	rex.RXB
   140014809:	rex.RXB
   14001480a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001480e:	rex.RXB lahf 
	...
   14001482c:	rex.RXB
   14001482d:	rex.RXB
   14001482e:	rex.RXB pop QWORD PTR [r15+0x47]
   140014832:	rex.RXB (bad) 
   140014834:	ds xchg ecx,eax
   140014836:	mov    ecx,0xfebd38ff
   14001483b:	push   QWORD PTR [rdi]
   14001483d:	mov    esp,0xbc37fffe
   140014842:	(bad)  
   140014843:	push   QWORD PTR [rsi]
   140014845:	mov    ebx,0x5fc4fffe
   14001484a:	add    bh,bh
   14001484c:	(bad)  
   14001484d:	pop    rsi
   14001484e:	add    bh,bh
   140014850:	ret    
   140014851:	pop    rsi
   140014852:	add    bh,bh
   140014854:	ret    
   140014855:	pop    rbp
   140014856:	add    bh,bh
   140014858:	xchg   ebp,eax
   140014859:	push   rsp
   14001485a:	sbb    edi,edi
   14001485c:	rex.RXB
   14001485d:	rex.RXB
   14001485e:	rex.RXB inc DWORD PTR [r15+0x47]
   140014862:	rex.RXB add BYTE PTR [r8],0x0
	...
   140014876:	add    BYTE PTR [rax],al
   140014878:	rex.RXB
   140014879:	rex.RXB
   14001487a:	rex.RXB
   14001487b:	rex
   14001487c:	rex.RXB
   14001487d:	rex.RXB
   14001487e:	rex.RXB (bad) 
   140014880:	(bad)  
   140014881:	mov    ch,BYTE PTR [rsi-0x141c601]
   140014887:	(bad)  
   140014888:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001488e:	(bad)  
   14001488f:	push   QWORD PTR [rdi]
   140014891:	mov    esp,0xbc37fffe
   140014896:	(bad)  
   140014897:	inc    ebp
   140014899:	(bad)  
   14001489a:	add    bh,bh
   14001489c:	(bad)  
   14001489d:	pop    rdi
   14001489e:	add    bh,bh
   1400148a0:	(bad)  
   1400148a1:	pop    rsi
   1400148a2:	add    bh,bh
   1400148a4:	ret    
   1400148a5:	pop    rsi
   1400148a6:	add    bh,bh
   1400148a8:	ret    
   1400148a9:	pop    rbp
   1400148aa:	add    bh,bh
   1400148ac:	lea    edx,[rbx+0x1f]
   1400148af:	inc    DWORD PTR [rdi+0x47]
   1400148b2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400148b6:	rex.RXB
   1400148b7:	add    BYTE PTR [rax],al
	...
   1400148c6:	add    BYTE PTR [rax],al
   1400148c8:	rex.RXB
   1400148c9:	rex.RXB
   1400148ca:	rex.RXB fild WORD PTR [r13+r12*2+0x75]
   1400148cf:	(bad)  
   1400148d0:	cmp    bh,BYTE PTR [rdi-0x41c60002]
   1400148d6:	(bad)  
   1400148d7:	(bad)  
   1400148d8:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400148de:	(bad)  
   1400148df:	(bad)  
   1400148e0:	cmp    BYTE PTR [rbp-0x43c80002],bh
   1400148e6:	(bad)  
   1400148e7:	inc    ebp
   1400148e9:	(bad)  
   1400148ea:	add    bh,bh
   1400148ec:	(bad)
   1400148ef:	inc    esp
   1400148f1:	pop    rdi
   1400148f2:	add    bh,bh
   1400148f4:	(bad)  
   1400148f5:	pop    rsi
   1400148f6:	add    bh,bh
   1400148f8:	ret    
   1400148f9:	pop    rsi
   1400148fa:	add    bh,bh
   1400148fc:	ret    
   1400148fd:	pop    rbp
   1400148fe:	add    bh,bh
   140014900:	data16 rex.WR xor rax,0x474747ff
   140014907:	fild   WORD PTR [rax]
	...
   140014911:	add    BYTE PTR [rax],al
   140014913:	add    BYTE PTR [rdi+0x47],al
   140014916:	rex.RXB (bad) 
   140014918:	rex.RXB
   140014919:	rex.RXB
   14001491a:	rex.RXB (bad) 
   14001491c:	cmp    eax,0x3affe7b1
   140014921:	mov    edi,0xbf3afffe
   140014926:	(bad)  
   140014927:	(bad)  
   140014928:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001492e:	(bad)  
   14001492f:	(bad)  
   140014930:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014936:	(bad)  
   140014937:	inc    ebp
   140014939:	(bad)  
   14001493a:	add    bh,bh
   14001493c:	(bad)
   14001493f:	inc    ebp
   140014941:	(bad)  
   140014942:	add    bh,bh
   140014944:	(bad)  
   140014945:	pop    rdi
   140014946:	add    bh,bh
   140014948:	(bad)  
   140014949:	pop    rsi
   14001494a:	add    bh,bh
   14001494c:	ret    
   14001494d:	pop    rsi
   14001494e:	add    bh,bh
   140014950:	mov    ah,0x5a
   140014952:	or     edi,edi
   140014954:	rex.RXB
   140014955:	rex.RXB
   140014956:	rex.RXB inc DWORD PTR [r15+0x47]
   14001495a:	rex.RXB (bad) 
	...
   140014964:	rex.RXB
   140014965:	rex.RXB
   140014966:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014968:	rex.R ins DWORD PTR es:[rdi],dx
   14001496a:	cmp    bh,0x3b
   14001496d:	sar    dh,0xff
   140014970:	cmp    eax,eax
   140014972:	(bad)  
   140014973:	(bad)  
   140014974:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001497a:	(bad)  
   14001497b:	(bad)  
   14001497c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140014982:	(bad)  
   140014983:	(bad)  
   140014984:	cmp    BYTE PTR [rbp+0x63c6fffe],bh
   14001498a:	add    bh,bh
   14001498c:	(bad)
   14001498f:	inc    ebp
   140014991:	(bad)  
   140014992:	add    bh,bh
   140014994:	(bad)
   140014997:	inc    esp
   140014999:	pop    rdi
   14001499a:	add    bh,bh
   14001499c:	(bad)  
   14001499d:	pop    rsi
   14001499e:	add    bh,bh
   1400149a0:	ret    
   1400149a1:	pop    rsi
   1400149a2:	add    bh,bh
   1400149a4:	outs   dx,BYTE PTR ds:[rsi]
   1400149a5:	rex.WRX xor rdi,r15
   1400149a8:	rex.RXB
   1400149a9:	rex.RXB
   1400149aa:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   1400149b4:	rex.RXB
   1400149b5:	rex.RXB
   1400149b6:	rex.RXB out dx,eax
   1400149b8:	cwde   
   1400149b9:	pop    rbp
   1400149ba:	sbb    edi,edi
   1400149bc:	leave  
   1400149bd:	push   0x0
   1400149bf:	dec    ecx
   1400149c1:	imul   eax,DWORD PTR [rax],0x68c8ff
   1400149c7:	dec    eax
   1400149c9:	addr32 add bh,bh
   1400149cc:	(bad)  
   1400149cd:	data16 add bh,bh
   1400149d0:	(bad)  
   1400149d1:	gs add bh,bh
   1400149d4:	(bad)  
   1400149d5:	gs add bh,bh
   1400149d8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400149de:	(bad)  
   1400149df:	push   QWORD PTR [rdi]
   1400149e1:	mov    esp,0xbc37fffe
   1400149e6:	(bad)  
   1400149e7:	push   QWORD PTR [rsi]
   1400149e9:	mov    ebx,0xbb36fffe
   1400149ee:	(bad)  
   1400149ef:	push   QWORD PTR [rip+0x3cfffeba]        # 0x17d0148af
   1400149f5:	(bad)  
   1400149f6:	mov    ecx,0x474747ff
   1400149fb:	out    dx,eax
	...
   140014a04:	rex.RXB
   140014a05:	rex.RXB
   140014a06:	rex.RXB jmp FWORD PTR [r9-0x3600ed9d]
   140014a0d:	imul   eax,DWORD PTR [rax],0xffffffff
   140014a10:	leave  
   140014a11:	push   0x0
   140014a13:	dec    ecx
   140014a15:	imul   eax,DWORD PTR [rax],0x68c8ff
   140014a1b:	dec    eax
   140014a1d:	addr32 add bh,bh
   140014a20:	(bad)  
   140014a21:	data16 add bh,bh
   140014a24:	(bad)  
   140014a25:	gs add bh,bh
   140014a28:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014a2e:	(bad)  
   140014a2f:	(bad)  
   140014a30:	cmp    BYTE PTR [rbp-0x43c80002],bh
   140014a36:	(bad)  
   140014a37:	push   QWORD PTR [rdi]
   140014a39:	mov    esp,0xbb36fffe
   140014a3e:	(bad)  
   140014a3f:	push   QWORD PTR [rsi]
   140014a41:	mov    ebx,0x9d3afffe
   140014a46:	sar    bh,1
   140014a48:	rex.RXB
   140014a49:	rex.RXB
   140014a4a:	rex.RXB inc DWORD PTR [r8]
   140014a4d:	add    BYTE PTR [rax],al
   140014a4f:	add    BYTE PTR [rax],al
   140014a51:	add    BYTE PTR [rax],al
   140014a53:	add    BYTE PTR [rdi+0x47],al
   140014a56:	rex.RXB (bad) 
   140014a58:	mov    edx,0xcaff0968
   140014a5d:	ins    BYTE PTR es:[rdi],dx
   140014a5e:	add    bh,bh
   140014a60:	leave  
   140014a61:	imul   eax,DWORD PTR [rax],0xffffffff
   140014a64:	leave  
   140014a65:	push   0x0
   140014a67:	dec    ecx
   140014a69:	imul   eax,DWORD PTR [rax],0x68c8ff
   140014a6f:	dec    eax
   140014a71:	addr32 add bh,bh
   140014a74:	(bad)  
   140014a75:	data16 add bh,bh
   140014a78:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140014a7e:	(bad)  
   140014a7f:	(bad)  
   140014a80:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014a86:	(bad)  
   140014a87:	push   QWORD PTR [rdi]
   140014a89:	mov    esp,0xbc37fffe
   140014a8e:	(bad)  
   140014a8f:	push   QWORD PTR [rsi]
   140014a91:	mov    ebx,0xad38fffe
   140014a96:	out    0xff,eax
   140014a98:	rex.RXB
   140014a99:	rex.RXB
   140014a9a:	rex.RXB inc DWORD PTR [r8]
   140014a9d:	add    BYTE PTR [rax],al
   140014a9f:	add    BYTE PTR [rax],al
   140014aa1:	add    BYTE PTR [rax],al
   140014aa3:	add    BYTE PTR [rdi+0x47],al
   140014aa6:	rex.RXB dec r11d
   140014aa9:	ins    DWORD PTR es:[rdi],dx
   140014aaa:	add    bh,bh
   140014aac:	retf   0x6d
   140014aaf:	dec    edx
   140014ab1:	ins    BYTE PTR es:[rdi],dx
   140014ab2:	add    bh,bh
   140014ab4:	leave  
   140014ab5:	imul   eax,DWORD PTR [rax],0xffffffff
   140014ab8:	leave  
   140014ab9:	push   0x0
   140014abb:	dec    ecx
   140014abd:	imul   eax,DWORD PTR [rax],0x68c8ff
   140014ac3:	dec    eax
   140014ac5:	addr32 add bh,bh
   140014ac8:	cmp    bh,BYTE PTR [rdi-0x41c60002]
   140014ace:	(bad)  
   140014acf:	(bad)  
   140014ad0:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014ad6:	(bad)  
   140014ad7:	(bad)  
   140014ad8:	cmp    BYTE PTR [rbp-0x43c80002],bh
   140014ade:	(bad)  
   140014adf:	push   QWORD PTR [rdi]
   140014ae1:	mov    esp,0xbb36fffe
   140014ae6:	(bad)  
   140014ae7:	inc    DWORD PTR [rdi+0x47]
   140014aea:	rex.RXB inc DWORD PTR [r8]
   140014aed:	add    BYTE PTR [rax],al
   140014aef:	add    BYTE PTR [rax],al
   140014af1:	add    BYTE PTR [rax],al
   140014af3:	add    BYTE PTR [rdi+0x47],al
   140014af6:	rex.RXB dec r11d
   140014af9:	outs   dx,BYTE PTR ds:[rsi]
   140014afa:	add    bh,bh
   140014afc:	retf   
   140014afd:	ins    DWORD PTR es:[rdi],dx
   140014afe:	add    bh,bh
   140014b00:	retf   0x6d
   140014b03:	dec    edx
   140014b05:	ins    BYTE PTR es:[rdi],dx
   140014b06:	add    bh,bh
   140014b08:	leave  
   140014b09:	imul   eax,DWORD PTR [rax],0xffffffff
   140014b0c:	leave  
   140014b0d:	push   0x0
   140014b0f:	dec    ecx
   140014b11:	imul   eax,DWORD PTR [rax],0x68c8ff
   140014b17:	(bad)  
   140014b18:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140014b1e:	(bad)  
   140014b1f:	(bad)  
   140014b20:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140014b26:	(bad)  
   140014b27:	(bad)  
   140014b28:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014b2e:	(bad)  
   140014b2f:	push   QWORD PTR [rdi]
   140014b31:	mov    esp,0xbc37fffe
   140014b36:	(bad)  
   140014b37:	inc    DWORD PTR [rdi+0x47]
   140014b3a:	rex.RXB inc DWORD PTR [r8]
   140014b3d:	add    BYTE PTR [rax],al
   140014b3f:	add    BYTE PTR [rax],al
   140014b41:	add    BYTE PTR [rax],al
   140014b43:	add    BYTE PTR [rdi+0x47],al
   140014b46:	rex.RXB dec r11d
   140014b49:	outs   dx,DWORD PTR ds:[rsi]
   140014b4a:	add    bh,bh
   140014b4c:	retf   
   140014b4d:	outs   dx,BYTE PTR ds:[rsi]
   140014b4e:	add    bh,bh
   140014b50:	retf   
   140014b51:	ins    DWORD PTR es:[rdi],dx
   140014b52:	add    bh,bh
   140014b54:	retf   0x6d
   140014b57:	dec    edx
   140014b59:	ins    BYTE PTR es:[rdi],dx
   140014b5a:	add    bh,bh
   140014b5c:	leave  
   140014b5d:	imul   eax,DWORD PTR [rax],0xffffffff
   140014b60:	leave  
   140014b61:	push   0x0
   140014b63:	dec    ecx
   140014b65:	imul   eax,DWORD PTR [rax],0xfec03bff
   140014b6b:	(bad)  
   140014b6c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140014b72:	(bad)  
   140014b73:	(bad)  
   140014b74:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140014b7a:	(bad)  
   140014b7b:	(bad)  
   140014b7c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014b82:	(bad)  
   140014b83:	push   QWORD PTR [rdi]
   140014b85:	mov    esp,0x4747fffe
   140014b8a:	rex.RXB inc DWORD PTR [r8]
   140014b8d:	add    BYTE PTR [rax],al
   140014b8f:	add    BYTE PTR [rdi+0x47],al
   140014b92:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140014b96:	rex.RXB inc DWORD PTR [r15+0x47]
   140014b9a:	rex.RXB call FWORD PTR [r8+0x4c]
   140014b9e:	ds (bad) 
   140014ba0:	jns    0x140014bf8
   140014ba2:	sub    al,0xff
   140014ba4:	movabs ds:0xcaff006dcaff1661,al
   140014bad:	ins    BYTE PTR es:[rdi],dx
   140014bae:	add    bh,bh
   140014bb0:	leave  
   140014bb1:	imul   eax,DWORD PTR [rax],0xffffffff
   140014bb4:	leave  
   140014bb5:	push   0x0
   140014bb7:	(bad)  
   140014bb8:	cmp    eax,eax
   140014bba:	(bad)  
   140014bbb:	(bad)  
   140014bbc:	cmp    eax,eax
   140014bbe:	(bad)  
   140014bbf:	(bad)  
   140014bc0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140014bc6:	(bad)  
   140014bc7:	(bad)  
   140014bc8:	ds cdq 
   140014bca:	(bad)  
   140014bcd:	je     0x140014b5b
   140014bcf:	inc    DWORD PTR [rbp+0x56]
   140014bd2:	pop    rsi
   140014bd3:	inc    DWORD PTR [rdi+0x47]
   140014bd6:	rex.RXB inc DWORD PTR [r15+0x47]
   140014bda:	rex.RXB inc DWORD PTR [r8]
   140014bdd:	add    BYTE PTR [rax],al
   140014bdf:	add    BYTE PTR [rdi+0x47],al
   140014be2:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140014be6:	rex.RXB
   140014be7:	rex
   140014be8:	rex.RXB
   140014be9:	rex.RXB
   140014bea:	rex.RXB
   140014beb:	rex
   140014bec:	rex.RXB
   140014bed:	rex.RXB
   140014bee:	rex.RXB jo 0x140014c38
   140014bf1:	rex.RXB
   140014bf2:	rex.RXB mov r15d,0xff474747
   140014bf8:	push   rdi
   140014bf9:	rex.WR
   140014bfa:	jmp    FWORD PTR ds:[rcx-0x3500ed9d]
   140014c01:	ins    BYTE PTR es:[rdi],dx
   140014c02:	add    bh,bh
   140014c04:	leave  
   140014c05:	imul   eax,DWORD PTR [rax],0xffffffff
   140014c08:	cmp    al,0xc0
   140014c0a:	(bad)  
   140014c0b:	(bad)  
   140014c0c:	cmp    eax,eax
   140014c0e:	(bad)  
   140014c0f:	(bad)  
   140014c10:	movabs ds:0x4747ff5e5645ffd0,al
   140014c1a:	rex.RXB inc DWORD PTR [r15+0x47]
   140014c1e:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014c20:	rex.RXB
   140014c21:	rex.RXB
   140014c22:	rex.RXB jo 0x140014c6c
   140014c25:	rex.RXB
   140014c26:	rex.RXB
   140014c27:	rex
   140014c28:	rex.RXB
   140014c29:	rex.RXB
   140014c2a:	rex.RXB
   140014c2b:	add    BYTE PTR [rax],al
	...
   140014c42:	add    BYTE PTR [rax],al
   140014c44:	rex.RXB
   140014c45:	rex.RXB
   140014c46:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140014c4a:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014c4c:	rex.RXB
   140014c4d:	rex.RXB
   140014c4e:	rex.RXB (bad) 
   140014c50:	js     0x140014ca7
   140014c52:	sub    al,0xff
   140014c54:	test   eax,0x3fff1263
   140014c59:	movabs ds:0x4747ff8c7443ffd0,eax
   140014c62:	rex.RXB inc DWORD PTR [r15+0x47]
   140014c66:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014c68:	rex.RXB
   140014c69:	rex.RXB
   140014c6a:	rex.RXB and BYTE PTR [r8],r8b
	...
   140014c99:	add    BYTE PTR [rax],al
   140014c9b:	add    BYTE PTR [rdi+0x47],al
   140014c9e:	rex.RXB push r8
   140014ca0:	rex.RXB
   140014ca1:	rex.RXB
   140014ca2:	rex.RXB fild WORD PTR [r15+0x47]
   140014ca6:	rex.RXB inc DWORD PTR [r15+0x47]
   140014caa:	rex.RXB inc DWORD PTR [r15+0x47]
   140014cae:	rex.RXB fild WORD PTR [r15+0x47]
   140014cb2:	rex.RXB push r8
	...
   140014cd0:	call   FWORD PTR [rdi+0x7fefff0]
   140014cd6:	lock (bad) 
   140014cd8:	cld    
   140014cd9:	add    esi,eax
   140014cdb:	(bad)  
   140014cdc:	clc    
   140014cdd:	add    eax,esi
   140014cdf:	push   rax
   140014ce1:	add    al,dh
   140014ce3:	jmp    rax
   140014ce5:	add    BYTE PTR [rax-0x1],dh
   140014ce8:	rol    BYTE PTR [rax],0x30
   140014ceb:	inc    eax
   140014ced:	add    BYTE PTR [rax],dh
   140014cef:	add    BYTE PTR [rax-0x7ffff000],al
   140014cf5:	add    BYTE PTR [rax],dl
   140014cf7:	inc    DWORD PTR [rax-0x7f00f000]
   140014cfd:	add    BYTE PTR [rax],dl
   140014cff:	inc    DWORD PTR [rax-0x7f00f000]
   140014d05:	add    BYTE PTR [rax],dl
   140014d07:	inc    DWORD PTR [rax-0x7f00f000]
   140014d0d:	add    BYTE PTR [rax],dl
   140014d0f:	inc    DWORD PTR [rax]
   140014d11:	add    BYTE PTR [rax],dl
   140014d13:	inc    DWORD PTR [rax]
   140014d15:	add    BYTE PTR [rax],dl
   140014d17:	(bad)  
   140014d18:	clc    
   140014d19:	add    eax,esi
   140014d1b:	(bad)  
   140014d1c:	inc    BYTE PTR [rdi]
   140014d1e:	lock jmp FWORD PTR [rax]
   140014d21:	add    BYTE PTR [rax],al
   140014d23:	add    BYTE PTR [rax],dl
   140014d25:	add    BYTE PTR [rax],al
   140014d27:	add    BYTE PTR [rax],ah
   140014d29:	add    BYTE PTR [rax],al
   140014d2b:	add    BYTE PTR [rcx],al
   140014d2d:	add    BYTE PTR [rax],ah
	...
   140014d63:	add    BYTE PTR [rdi+0x47],al
   140014d66:	rex.RXB (bad) 
   140014d68:	rex.RXB
   140014d69:	rex.RXB
   140014d6a:	rex.RXB (bad) 
	...
   140014d9c:	rex.RXB
   140014d9d:	rex.RXB
   140014d9e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140014da2:	rex.RXB mov r15d,0xff474747
   140014da8:	rex.RXB
   140014da9:	rex.RXB
   140014daa:	rex.RXB inc DWORD PTR [r15+0x47]
   140014dae:	rex.RXB mov r15d,0x10474747
	...
   140014dd8:	rex.RXB
   140014dd9:	rex.RXB
   140014dda:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140014dde:	rex.RXB out dx,eax
   140014de0:	rex.RB push r14
   140014de2:	pop    rsi
   140014de3:	(bad)  
   140014de4:	cmp    bl,BYTE PTR [rbp+0x58a4ffd0]
   140014dea:	adc    bh,bh
   140014dec:	push   rdi
   140014ded:	rex.WX
   140014dee:	inc    DWORD PTR ds:[rdi+0x47]
   140014df2:	rex.RXB out dx,eax
   140014df4:	rex.RXB
   140014df5:	rex.RXB
   140014df6:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140014e11:	add    BYTE PTR [rax],al
   140014e13:	add    BYTE PTR [rdi+0x47],al
   140014e16:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140014e1a:	rex.RXB out dx,eax
   140014e1c:	rex.X ins BYTE PTR es:[rdi],dx
   140014e1e:	cmp    bh,0x37
   140014e21:	mov    ah,0xf3
   140014e23:	push   QWORD PTR [rsi]
   140014e25:	mov    ebx,0x5ec4fffe
   140014e2a:	add    bh,bh
   140014e2c:	mov    ebx,0x6eff045c
   140014e31:	rex.WRX xor rdi,r15
   140014e34:	rex.RXB
   140014e35:	rex.RXB
   140014e36:	rex.RXB out dx,eax
   140014e38:	rex.RXB
   140014e39:	rex.RXB
   140014e3a:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140014e4d:	add    BYTE PTR [rax],al
   140014e4f:	add    BYTE PTR [rdi+0x47],al
   140014e52:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140014e56:	rex.RXB out dx,eax
   140014e58:	rex.X jae 0x140014de7
   140014e5b:	(bad)  
   140014e5c:	cmp    BYTE PTR [rbp-0x43c80002],bh
   140014e62:	(bad)  
   140014e63:	push   QWORD PTR [rsi]
   140014e65:	mov    ebx,0x5fc4fffe
   140014e6a:	add    bh,bh
   140014e6c:	(bad)  
   140014e6d:	pop    rsi
   140014e6e:	add    bh,bh
   140014e70:	ret    
   140014e71:	pop    rbp
   140014e72:	add    bh,bh
   140014e74:	jbe    0x140014ec5
   140014e76:	sub    al,0xff
   140014e78:	rex.RXB
   140014e79:	rex.RXB
   140014e7a:	rex.RXB out dx,eax
   140014e7c:	rex.RXB
   140014e7d:	rex.RXB
   140014e7e:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140014e8d:	add    BYTE PTR [rax],al
   140014e8f:	add    BYTE PTR [rdi+0x47],al
   140014e92:	rex.RXB iret 
   140014e94:	rex.RB pop r13
   140014e96:	imul   edi,edi,0xfffebe39
   140014e9c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014ea2:	(bad)  
   140014ea3:	push   QWORD PTR [rdi]
   140014ea5:	mov    esp,0x60c5fffe
   140014eaa:	add    bh,bh
   140014eac:	(bad)  
   140014ead:	pop    rdi
   140014eae:	add    bh,bh
   140014eb0:	(bad)  
   140014eb1:	pop    rsi
   140014eb2:	add    bh,bh
   140014eb4:	ret    
   140014eb5:	pop    rbp
   140014eb6:	add    bh,bh
   140014eb8:	pop    rsi
   140014eb9:	rex.WXB cmp dil,r15b
   140014ebc:	rex.RXB
   140014ebd:	rex.RXB
   140014ebe:	rex.RXB iret 
	...
   140014ecc:	rex.RXB
   140014ecd:	rex.RXB
   140014ece:	rex.RXB (bad) 
   140014ed0:	rex.RXB
   140014ed1:	rex.RXB
   140014ed2:	rex.RXB (bad) 
   140014ed4:	cmp    eax,0x3affdca9
   140014ed9:	mov    edi,0xbe39fffe
   140014ede:	(bad)  
   140014edf:	(bad)  
   140014ee0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014ee6:	(bad)  
   140014ee7:	inc    ebp
   140014ee9:	(bad)  
   140014eea:	add    bh,bh
   140014eec:	(bad)
   140014eef:	inc    esp
   140014ef1:	pop    rdi
   140014ef2:	add    bh,bh
   140014ef4:	(bad)  
   140014ef5:	pop    rsi
   140014ef6:	add    bh,bh
   140014ef8:	lods   al,BYTE PTR ds:[rsi]
   140014ef9:	pop    rcx
   140014efa:	or     eax,0x474747ff
   140014eff:	inc    DWORD PTR [rdi+0x47]
   140014f02:	rex.RXB (bad) 
	...
   140014f0c:	rex.RXB
   140014f0d:	rex.RXB
   140014f0e:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140014f10:	rex.XB je 0x140014e9f
   140014f13:	(bad)  
   140014f14:	cmp    eax,eax
   140014f16:	(bad)  
   140014f17:	(bad)  
   140014f18:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140014f1e:	(bad)  
   140014f1f:	(bad)  
   140014f20:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014f26:	(bad)  
   140014f27:	inc    esi
   140014f29:	movsxd eax,DWORD PTR [rax]
   140014f2b:	inc    ebp
   140014f2d:	(bad)  
   140014f2e:	add    bh,bh
   140014f30:	(bad)
   140014f33:	inc    esp
   140014f35:	pop    rdi
   140014f36:	add    bh,bh
   140014f38:	(bad)  
   140014f39:	pop    rsi
   140014f3a:	add    bh,bh
   140014f3c:	jbe    0x140014f8d
   140014f3e:	sub    al,0xff
   140014f40:	rex.RXB
   140014f41:	rex.RXB
   140014f42:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   140014f4c:	rex.RXB
   140014f4d:	rex.RXB
   140014f4e:	rex.RXB jmp QWORD PTR [r9-0x3600e9a1]
   140014f55:	imul   eax,DWORD PTR [rax],0x69c8ff
   140014f5b:	dec    eax
   140014f5d:	addr32 add bh,bh
   140014f60:	(bad)  
   140014f61:	data16 add bh,bh
   140014f64:	(bad)  
   140014f65:	gs add bh,bh
   140014f68:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014f6e:	(bad)  
   140014f6f:	push   QWORD PTR [rdi]
   140014f71:	mov    esp,0xbb36fffe
   140014f76:	(bad)  
   140014f77:	push   QWORD PTR [rsi]
   140014f79:	mov    ebx,0x963bfffe
   140014f7e:	(bad)  
   140014f81:	rex.RXB
   140014f82:	rex.RXB inc DWORD PTR [r8]
   140014f85:	add    BYTE PTR [rax],al
   140014f87:	add    BYTE PTR [rax],al
   140014f89:	add    BYTE PTR [rax],al
   140014f8b:	add    BYTE PTR [rdi+0x47],al
   140014f8e:	rex.RXB jmp FWORD PTR [r9-0x3600ed9d]
   140014f95:	imul   eax,DWORD PTR [rax],0xffffffff
   140014f98:	leave  
   140014f99:	imul   eax,DWORD PTR [rax],0x69c8ff
   140014f9f:	dec    eax
   140014fa1:	addr32 add bh,bh
   140014fa4:	(bad)  
   140014fa5:	data16 add bh,bh
   140014fa8:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014fae:	(bad)  
   140014faf:	(bad)  
   140014fb0:	cmp    BYTE PTR [rbp-0x43c80002],bh
   140014fb6:	(bad)  
   140014fb7:	push   QWORD PTR [rsi]
   140014fb9:	mov    ebx,0x9e3afffe
   140014fbe:	sar    bh,1
   140014fc0:	rex.RXB
   140014fc1:	rex.RXB
   140014fc2:	rex.RXB inc DWORD PTR [r8]
   140014fc5:	add    BYTE PTR [rax],al
   140014fc7:	add    BYTE PTR [rax],al
   140014fc9:	add    BYTE PTR [rax],al
   140014fcb:	add    BYTE PTR [rdi+0x47],al
   140014fce:	rex.RXB dec r10d
   140014fd1:	ins    DWORD PTR es:[rdi],dx
   140014fd2:	add    bh,bh
   140014fd4:	retf   0x6c
   140014fd7:	dec    ecx
   140014fd9:	imul   eax,DWORD PTR [rax],0xffffffff
   140014fdc:	leave  
   140014fdd:	imul   eax,DWORD PTR [rax],0x69c8ff
   140014fe3:	dec    eax
   140014fe5:	addr32 add bh,bh
   140014fe8:	cmp    bh,BYTE PTR [rdi-0x41c60002]
   140014fee:	(bad)  
   140014fef:	(bad)  
   140014ff0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140014ff6:	(bad)  
   140014ff7:	push   QWORD PTR [rdi]
   140014ff9:	mov    esp,0xbb36fffe
   140014ffe:	(bad)  
   140014fff:	inc    DWORD PTR [rdi+0x47]
   140015002:	rex.RXB inc DWORD PTR [r8]
   140015005:	add    BYTE PTR [rax],al
   140015007:	add    BYTE PTR [rax],al
   140015009:	add    BYTE PTR [rax],al
   14001500b:	add    BYTE PTR [rdi+0x47],al
   14001500e:	rex.RXB dec r11d
   140015011:	outs   dx,BYTE PTR ds:[rsi]
   140015012:	add    bh,bh
   140015014:	retf   0x6d
   140015017:	dec    edx
   140015019:	ins    BYTE PTR es:[rdi],dx
   14001501a:	add    bh,bh
   14001501c:	leave  
   14001501d:	imul   eax,DWORD PTR [rax],0xffffffff
   140015020:	leave  
   140015021:	imul   eax,DWORD PTR [rax],0x69c8ff
   140015027:	(bad)  
   140015028:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001502e:	(bad)  
   14001502f:	(bad)  
   140015030:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140015036:	(bad)  
   140015037:	(bad)  
   140015038:	cmp    BYTE PTR [rbp-0x43c80002],bh
   14001503e:	(bad)  
   14001503f:	inc    DWORD PTR [rdi+0x47]
   140015042:	rex.RXB inc DWORD PTR [r8]
   140015045:	add    BYTE PTR [rax],al
   140015047:	add    BYTE PTR [rax],al
   140015049:	add    BYTE PTR [rax],al
   14001504b:	add    BYTE PTR [rdi+0x47],al
   14001504e:	rex.RXB dec DWORD PTR [r9-0x5500dba5]
   140015055:	fs adc bh,bh
   140015058:	retf   0x6d
   14001505b:	dec    edx
   14001505d:	ins    BYTE PTR es:[rdi],dx
   14001505e:	add    bh,bh
   140015060:	leave  
   140015061:	imul   eax,DWORD PTR [rax],0xffffffff
   140015064:	leave  
   140015065:	imul   eax,DWORD PTR [rax],0xfec03bff
   14001506b:	(bad)  
   14001506c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140015072:	(bad)  
   140015073:	(bad)  
   140015074:	cmp    DWORD PTR [rsi-0x5fc30002],edi
   14001507a:	sar    bh,1
   14001507c:	(bad)  
   14001507d:	(bad)  
   14001507e:	movabs ds:0xff474747ff,eax
   140015087:	add    BYTE PTR [rax],al
   140015089:	add    BYTE PTR [rax],al
   14001508b:	add    BYTE PTR [rdi+0x47],al
   14001508e:	rex.RXB mov r15d,0xcf474747
   140015094:	rex.RXB
   140015095:	rex.RXB
   140015096:	rex.RXB call FWORD PTR [r8+0x4c]
   14001509a:	call   FWORD PTR ds:[rcx-0x3500e4a1]
   1400150a1:	ins    BYTE PTR es:[rdi],dx
   1400150a2:	add    bh,bh
   1400150a4:	leave  
   1400150a5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400150a8:	cmp    al,0xc0
   1400150aa:	(bad)  
   1400150ab:	(bad)  
   1400150ac:	cmp    eax,eax
   1400150ae:	(bad)  
   1400150af:	(bad)  
   1400150b0:	(bad)  
   1400150b1:	xchg   edx,eax
   1400150b2:	mov    ecx,0x5e5645ff
   1400150b7:	inc    DWORD PTR [rdi+0x47]
   1400150ba:	rex.RXB inc DWORD PTR [r15+0x47]
   1400150be:	rex.RXB iret 
   1400150c0:	rex.RXB
   1400150c1:	rex.RXB
   1400150c2:	rex.RXB mov r15d,0x0
	...
   1400150d4:	rex.RXB
   1400150d5:	rex.RXB
   1400150d6:	rex.RXB and BYTE PTR [r15+0x47],r8b
   1400150da:	rex.RXB lahf 
   1400150dc:	rex.RXB
   1400150dd:	rex.RXB
   1400150de:	rex.RXB jmp FWORD PTR [r8+0x50]
   1400150e2:	xor    eax,0x1660a1ff
   1400150e7:	inc    DWORD PTR [rax-0x65]
   1400150ea:	(bad)  
   1400150ed:	gs jne 0x1400150ef
   1400150f0:	rex.RXB
   1400150f1:	rex.RXB
   1400150f2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400150f6:	rex.RXB lahf 
   1400150f8:	rex.RXB
   1400150f9:	rex.RXB
   1400150fa:	rex.RXB and BYTE PTR [r8],r8b
	...
   140015119:	add    BYTE PTR [rax],al
   14001511b:	add    BYTE PTR [rdi+0x47],al
   14001511e:	rex.RXB
   14001511f:	rex
   140015120:	rex.RXB
   140015121:	rex.RXB
   140015122:	rex.RXB mov r15d,0xff474747
   140015128:	rex.RXB
   140015129:	rex.RXB
   14001512a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001512e:	rex.RXB mov r15d,0x30474747
	...
   140015148:	(bad)  
   140015149:	jg     0x140015149
   14001514b:	(bad)  
   14001514c:	clc    
   14001514d:	(bad)  
   14001514e:	out    0xff,eax
   140015150:	lock cmova edi,edi
   140015154:	loopne 0x14001515d
   140015156:	add    BYTE PTR [rax],al
   140015158:	rol    BYTE PTR [rbx],0x0
   14001515b:	add    al,al
   14001515d:	add    eax,DWORD PTR [rdi-0x1]
   140015160:	add    BYTE PTR [rcx],0x0
   140015163:	inc    DWORD PTR [rax-0x7f00ffff]
   140015169:	add    DWORD PTR [rax],eax
   14001516b:	inc    DWORD PTR [rax-0x7f00ffff]
   140015171:	add    DWORD PTR [rax],eax
   140015173:	inc    DWORD PTR [rax-0x7f00ffff]
   140015179:	add    DWORD PTR [rax],eax
   14001517b:	inc    DWORD PTR [rax-0x1f00ffff]
   140015181:	(bad)  
   140015182:	(bad)  
   140015183:	(bad)  
   140015184:	clc    
   140015185:	(bad)  
   140015186:	(bad)  
   140015187:	inc    DWORD PTR [rax]
   140015189:	add    BYTE PTR [rcx],al
   14001518b:	add    BYTE PTR [rax],cl
   14001518d:	add    BYTE PTR [rax],al
   14001518f:	add    BYTE PTR [rax],al
   140015191:	add    BYTE PTR [rcx],al
   140015193:	add    BYTE PTR [rax],ah
   140015195:	add    BYTE PTR [rcx+0x100001e],ch
   14001519b:	add    BYTE PTR [rax+0x40],al
   14001519e:	add    BYTE PTR [rax],al
   1400151a0:	add    DWORD PTR [rax],eax
   1400151a2:	and    BYTE PTR [rax],al
   1400151a4:	sub    BYTE PTR [rdx+0x0],al
   1400151a7:	add    BYTE PTR [rdx],al
   1400151a9:	add    BYTE PTR [rax],dh
   1400151ab:	xor    BYTE PTR [rax],al
   1400151ad:	add    BYTE PTR [rcx],al
   1400151af:	add    BYTE PTR [rax],ah
   1400151b1:	add    BYTE PTR [rax+0x3000025],ch
   1400151b7:	add    BYTE PTR [rax],ch
   1400151b9:	sub    BYTE PTR [rax],al
   1400151bb:	add    BYTE PTR [rcx],al
   1400151bd:	add    BYTE PTR [rax],ah
   1400151bf:	add    BYTE PTR [rax+0x1a],ch
   1400151c2:	add    BYTE PTR [rax],al
   1400151c4:	add    al,0x0
   1400151c6:	and    BYTE PTR [rax],ah
   1400151c8:	add    BYTE PTR [rax],al
   1400151ca:	add    DWORD PTR [rax],eax
   1400151cc:	and    BYTE PTR [rax],al
   1400151ce:	test   al,0x10
   1400151d0:	add    BYTE PTR [rax],al
   1400151d2:	add    eax,0x181800
   1400151d7:	add    BYTE PTR [rcx],al
   1400151d9:	add    BYTE PTR [rax],ah
   1400151db:	add    BYTE PTR [rax+0x6000009],cl
   1400151e1:	add    BYTE PTR [rsp+rdx*1],dl
   1400151e4:	add    BYTE PTR [rax],al
   1400151e6:	add    DWORD PTR [rax],eax
   1400151e8:	and    BYTE PTR [rax],al
   1400151ea:	mov    eax,0x7000006
   1400151ef:	add    BYTE PTR [rax],dl
   1400151f1:	adc    BYTE PTR [rax],al
   1400151f3:	add    BYTE PTR [rcx],al
   1400151f5:	add    BYTE PTR [rax],ah
   1400151f7:	add    BYTE PTR [rax+0x4],ch
   1400151fa:	add    BYTE PTR [rax],al
   1400151fc:	or     BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140016000 <.reloc>:
   140016000:	add    BYTE PTR [rax],dh
   140016002:	add    BYTE PTR [rax],al
   140016004:	and    BYTE PTR [rax],al
   140016006:	add    BYTE PTR [rax],al
   140016008:	push   0xffffffff80a270a2
   14001600d:	movabs ds:0xa2f8a2f0a2a0a298,al
   140016016:	mov    eax,0xd8a4d0a4
   14001601b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001601c:	loopne 0x140015fc2
   14001601e:	add    BYTE PTR [rax],al
   140016020:	add    BYTE PTR [rax+0x0],dh
   140016023:	add    BYTE PTR [rax+rax*1],cl
   140016026:	add    BYTE PTR [rax],al
   140016028:	.byte 0x0
   140016029:	.byte 0xa0
	...
